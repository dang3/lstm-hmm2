pop
loopne
icebp
xchg
jns
jg
ljmp
fcomps
sahf
cmp
jle
add
push
xor
push
dec
and
jle
mov
lahf
shrl
xor
outsb
stc
test
push
add
push
fiadds
imul
stc
out
xor
mov
jne
mov
mov
and
cmp
std
pushf
loop
stos
xchg
aaa
iret
dec
dec
in
push
jns
iret
dec
xchg
shlb
cmc
xor
jp
push
popf
pusha
mov
xor
push
scas
push
lret
pushf
mov
mov
hlt
mov
icebp
imul
inc
xlat
andb
pop
test
ret
mov
scas
jnp
push
mov
jmp
add
adc
mov
pop
add
jno
loopne
sub
shl
and
push
add
add
call
test
jno
outsl
es
xchg
sbb
hlt
push
pusha
inc
lea
seto
pushf
inc
sub
neg
and
dec
sbb
xchg
not
not
mov
stc
pushf
sar
mov
lea
pusha
pushl
pushf
test
mov
sub
shr
push
mov
cmc
jmp
imul
stc
mov
inc
fstpt
stos
inc
in
adc
push
or
pushl
or
test
push
dec
ljmp
jle
loope
push
cmovae
mov
jl
push
or
xchg
xlat
jne
xchg
mov
xchg
loop
cmp
and
cmp
fs
ret
mov
mov
stos
jmp
pusha
pusha
popa
push
mov
das
jle
sub
mov
insl
sti
enter
dec
out
adc
inc
popf
jp
sbb
push
mov
je
test
mov
mov
pusha
lea
jae
jmp
movl
jmp
sub
call
push
movl
push
pushl
popl
movb
movw
pushl
ret
mov
in
insb
xor
mov
stos
cmp
mov
hlt
xchg
sbb
test
lock
sti
or
mov
fwait
and
outsb
pop
ror
cmp
lahf
sbb
sti
push
ffreep
pop
popf
jns
xchg
and
mov
mov
mov
add
mov
andl
and
ret
sub
sub
xchg
pushl
ret
inc
neg
clc
rcl
neg
xchg
and
shld
mov
rcl
xor
inc
mov
cmp
pusha
mov
bsf
neg
stc
mov
test
movb
call
test
call
or
fs
call
jno
mov
sub
cltd
loop
repz
mov
test
mull
int
jns
add
cld
xor
xor
loope
dec
push
jb
xchg
mov
push
into
rorl
cmpsl
cmp
inc
test
and
imul
mov
or
fisttpll
mov
shlb
mov
sbb
call
cmpb
loopne
jg
dec
mov
sbb
je
movsb
sub
cmp
or
fidivrl
and
mov
call
aas
popa
repz
data16
cmpsl
js
rorb
jnp
fwait
or
pop
jmp
xor
pop
jmp
inc
jnp
cmpsl
inc
out
cltd
cmp
push
or
lock
shll
cmp
stc
mov
sub
mov
insb
sbb
dec
in
daa
or
sub
push
jmp
cmp
cmp
pop
mulb
sub
mov
push
push
test
mov
loopne
lcall
ret
push
pop
out
cmp
inc
std
imul
cmp
mov
jp
and
shrl
fsubrl
mov
divl
cmpsl
cmp
jle
scas
push
cli
mov
fcoml
pop
shlb
jns
xor
mov
pop
add
cmpsl
cld
jmp
call
lea
jae
clc
test
jo
cmp
jmp
call
bswap
cwtl
not
lea
mov
xchg
lea
jmp
bt
call
call
pushf
lea
jne
jmp
clc
push
pusha
pusha
test
push
pushf
mov
pushl
lea
je
stc
sub
pusha
clc
cmc
cmp
cmp
jmp
add
bt
cmc
stc
mov
cmc
pushf
test
movw
lea
je
cmp
call
jmp
sub
movb
rep
not
push
movw
pushf
mov
pushf
pushl
pushl
push
lea
jmp
rcl
addb
cmpsl
push
add
testb
xchg
fbstp
mov
fmull
lods
movsb
je
adc
lea
lods
lods
push
xchg
das
int3
push
mov
or
je
imul
outsl
xor
aas
aad
setl
std
cmpl
loopne
sub
dec
or
xchg
daa
hlt
mov
mulb
push
lea
ja
not
mov
lea
pop
movzbw
bswap
pop
bswap
movsbw
push
push
mov
movzbw
movsbw
mov
jmp
push
bts
sub
bswap
movsbw
lea
jmp
rcl
fs
imul
les
lahf
pop
in
shrd
xor
dec
fdivs
loop
mov
test
mov
mov
arpl
jno
test
xchg
xchg
add
adc
in
xor
popa
add
cmp
adc
daa
dec
int3
rorl
xchg
sbb
xor
stos
dec
out
sarb
pop
hlt
mov
popf
dec
mov
mov
and
cmp
clc
test
clc
add
pushf
lea
jmp
movzbw
cwtl
movsbw
lea
jmp
rcr
or
shld
push
xor
lea
push
movsbw
movzbw
pusha
mov
lea
pushl
movsbw
mov
pushl
movzbl
call
lea
jne
rcl
mov
jmp
pushf
pushf
pushl
popl
jmp
movb
movb
push
mov
not
not
push
mov
pushl
pusha
pushl
ret
movb
lea
jne
bsf
mov
bswap
rol
bt
sub
rcr
push
lea
add
pusha
pushf
jmp
lea
call
push
pusha
jmp
pusha
call
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
mov
lea
je
cmc
push
clc
stc
sub
stc
call
push
cmp
pusha
pushf
pushf
jmp
jmp
popf
rdtsc
nop
pushf
movl
pushf
jmp
inc
pushl
inc
pushf
pusha
push
lea
jmp
stc
add
call
test
sub
pusha
cmp
jmp
movsbw
mov
call
movw
lea
je
pusha
add
movb
cmp
mov
movb
lea
jb
bt
cmp
call
mov
stos
setp
mov
lea
pushf
movb
lea
call
pusha
pusha
jmp
pop
and
insl
repz
mov
aam
es
int3
test
lahf
inc
ret
callw
mov
xor
test
imul
push
push
jae
sub
hlt
xchg
dec
loop
adc
nop
lock
adc
ret
and
mov
pop
movsl
push
hlt
mov
test
add
mov
pushl
movsbw
lea
lea
xchg
call
je
add
rclb
fisubl
test
idivb
mov
or
test
notl
sbb
add
fdivs
and
add
mov
fwait
sahf
int3
mov
mov
ja
inc
and
lds
outsl
inc
loopne
push
loopne
in
scas
into
jnp
adc
inc
and
fldcw
out
fsubrs
lahf
sub
repz
inc
add
js
cltd
testb
push
movsb
push
lock
scas
fs
cwtl
sbb
mov
xor
inc
push
mov
call
cmp
jmp
pushf
xor
clc
cmp
cmc
cmc
not
bt
mov
cmp
bt
movb
add
jmp
add
inc
gs
outsl
fs
gs
imul
add
sub
jle
xor
ret
aaa
movsl
cli
dec
out
inc
aad
fistl
sbbb
int
call
add
jmp
stos
jns
lcall
scas
mov
jle
and
mov
inc
out
cmp
or
adc
les
aas
cltd
call
ret
int3
out
test
lods
push
fcompl
daa
aam
pusha
cmpb
lea
jnp
pushf
lea
jne
rol
sub
cmp
add
sbb
cwtl
mov
dec
add
dec
shl
mov
js
pusha
movl
test
push
pushf
call
add
orb
or
mov
fisubs
int
pushl
out
sub
dec
rorl
pop
cwtl
mov
add
jns
pop
lea
pop
popf
inc
in
sub
sbb
jmp
or
push
pop
insl
jne
lret
movsl
xlat
js
arpl
jne
test
mov
mov
outsb
aas
xchg
sub
lea
sbb
test
shrb
xchg
cmp
pop
incb
popf
and
sahf
lods
ss
or
call
lcall
xor
mov
or
test
sub
xchg
and
andl
inc
jmp
xchg
mov
rcl
jne
xor
hlt
mov
leave
ja
cwtl
jmp
mov
stc
subb
fimuls
je
xchg
dec
das
mov
bnd
push
outsb
daa
loope
or
aaa
in
mov
fcoms
call
xor
flds
lea
add
lds
test
mov
mov
push
adc
mov
call
sbbb
lret
xchg
push
rcr
dec
mov
mov
out
je
loopne
adc
jne
js
ds
jo
es
xor
mov
mov
jbe
mov
hlt
mov
das
xchg
movsbl
xor
push
sub
xchg
bt
mov
or
shld
xor
sub
mov
test
bswap
add
mov
add
movsbw
cmc
shr
inc
bt
mov
bsr
bsr
add
pop
not
bswap
mov
pusha
mov
jmp
or
push
test
std
sahf
pop
hlt
movsl
sub
mov
lcall
sbb
sbb
je
nop
lahf
mov
or
clc
cmpb
popf
mov
mov
es
in
int
clc
inc
stc
xchg
fcoml
xor
pop
adc
ret
mov
testb
movsl
pop
in
jle
out
adc
dec
mov
call
jle
sbb
pop
push
pop
jnp
jle
fidivrs
mov
addr16
push
mov
pushf
pushl
pushf
lea
jmp
pusha
call
push
neg
jmp
mov
lahf
pop
push
inc
fwait
xchg
in
cmp
jne
stos
cmp
jp
mov
bnd
cmpsl
loop
ret
pusha
aam
mov
xor
ja
movsl
push
mov
aas
in
xchg
jne
sbb
in
xchg
xchg
orb
into
pusha
popf
push
movsb
push
fimull
aam
andb
into
mov
pop
pop
add
sbbl
addl
nop
loop
mov
fstpl
mov
xchg
mov
loope
mov
sbbb
push
call
xchg
inc
mov
sbb
push
cmpsl
dec
cmpsb
daa
test
mov
adc
hlt
mov
sub
rorb
pushl
ret
pusha
movl
push
jmp
mov
mov
sbb
inc
add
cmp
cmp
insb
cli
pushf
dec
or
push
mov
and
in
jns
push
inc
xchg
xor
outsl
or
mov
cmpsl
idivb
cmp
xor
inc
sub
shlb
outsl
or
fisttps
sbb
and
out
stos
sub
pop
pop
nop
adc
mov
pop
subb
aaa
cltd
xchg
rcl
test
cmp
lret
mov
sub
andl
or
jmp
call
xchg
les
add
add
lea
pusha
jmp
sub
pusha
lea
jmp
pusha
clc
call
lea
call
pusha
lea
jae
pusha
pushl
pushf
sub
pushf
jmp
pusha
mov
push
call
pop
bswap
mov
pusha
pushf
mov
movzbw
pop
pushf
mov
call
lea
je
push
pusha
stc
pusha
add
movb
mov
pushf
lea
jmp
pusha
test
pushf
cmp
jmp
jmp
mov
pusha
lea
mov
jmp
popf
cpuid
nop
jmp
lea
call
push
lea
jae
clc
sub
jmp
ror
neg
add
jmp
jne
gs
xor
fs
insb
add
xor
push
test
lret
mov
sbb
dec
stc
adcl
int3
pop
daa
add
xor
rol
out
xor
or
ljmp
fildll
xor
pop
inc
cmpsl
bound
dec
inc
mov
inc
icebp
jns
xchg
ffree
les
stos
push
pop
adc
cmp
hlt
mov
sub
sub
test
das
add
sub
bt
pushf
pusha
test
cmp
push
jmp
mov
pop
sbb
les
enter
pusha
jmp
lret
in
push
stc
lahf
fiaddl
les
insb
push
fildll
fsincos
test
lds
adc
or
or
dec
iret
iret
leave
and
popa
loope,pt
sbb
in
scas
pop
mov
dec
inc
fstp
test
push
sbb
sbb
mov
jae
enter
cmpb
jo
movsb
dec
loopne
cmp
mov
mov
pop
or
bound
add
out
add
jmp
sar
bsf
cmp
ror
mov
clc
stc
call
lea
mov
pushf
pushl
ret
call
call
clc
mov
js
xchg
xchg
jmp
out
orb
je
iret
jns
subb
mov
sbb
stos
dec
lahf
cmp
andb
push
in
cmc
pop
mov
push
cwtl
nop
sahf
je
or
adc
stc
pop
mov
addb
aam
icebp
xchg
enter
pop
sub
xchg
data16
add
shl
rolb
xchg
push
add
jp
mov
outsb
add
rorb
xchg
and
jbe
lea
stos
addb
fistl
test
cld
cmpsb
pop
out
inc
add
sbb
in
xchg
or
jg
aas
mov
lods
push
xchg
fwait
hlt
mov
cmp
mov
in
inc
xchg
aas
int3
push
xchg
sbb
push
mov
jecxz
pop
into
pusha
aas
ret
and
mov
jns
into
imul
xor
pusha
imul
jle
add
incl
mov
lcall
enter
add
xchg
dec
test
xchg
mov
aaa
aad
xlat
xorb
jmp
das
das
xor
addr16
xlat
adc
add
cmpsl
stos
xor
fcoms
mov
fsts
hlt
mov
jns
mov
scas
sub
shlb
mov
cld
xchg
and
pop
jmp
int3
sti
cltd
sbb
cmpsl
test
mov
gs
fisubrs
stc
jo
pop
lret
adc
sti
mov
cli
sbb
sub
dec
xlat
lret
out
cs
aas
cmc
cmp
ljmp
stc
sbbl
dec
add
xor
inc
lret
adc
sbb
push
sbb
jno
rcrb
fs
jl
mov
adc
jns
daa
imul
cmp
add
pusha
pushf
lea
jmp
mov
jmp
test
mov
clc
test
add
pusha
jmp
adc
shll
scas
inc
aaa
ds
push
push
mov
mov
in
popa
pushf
push
test
stc
inc
adc
bound
mov
cmpsl
pop
pop
mov
bound
shrb
dec
xor
das
adc
call
les
loop
lods
das
fadd
test
xchg
fisttpl
xor
cmp
outsb
xchg
mov
xchg
xor
adc
push
cwtl
push
or
aam
popf
inc
cmp
aam
les
mov
inc
inc
lock
pushf
mov
shrb
hlt
mov
ret
jo
push
push
dec
mov
mov
mov
loop
cli
inc
aad
dec
cltd
lods
adc
push
out
sub
push
loop
or
push
mov
xchg
xchg
jecxz
inc
int3
push
add
dec
testb
pop
push
adc
xor
adc
adc
push
jne
mov
adc
push
sbb
cltd
dec
iret
imul
outsb
rep
cmp
pop
in
xchg
xor
mov
pop
shll
cwtl
dec
es
cltd
lret
and
add
cld
xchg
lret
movsb
push
stc
scas
std
sub
out
sub
cs
inc
cmp
mov
out
test
enter
push
mov
aas
popa
or
jp
mov
jl
aaa
in
pop
mov
nop
xor
data16
dec
adc
ss
out
sbb
or
fdivl
stos
push
hlt
mov
xchg
inc
cwtl
insl
inc
int3
jne
fwait
push
push
mov
aas
xchg
dec
into
xchg
rcll
cmc
orb
pop
pop
sbb
mov
cli
lret
sbb
lea
or
fisttps
insl
sub
sbb
in
in
push
loopne
or
decl
xchg
shll
mov
cltd
fisttpll
pop
sbb
mov
xchg
andb
mov
push
add
sbb
mov
inc
jp
add
outsb
lcall
fstpl
push
test
jno
aaa
nop
cmp
dec
int3
and
orps
mov
adc
cmpsb
pusha
cli
mov
or
hlt
mov
or
and
ja
pusha
lea
jb
cmc
cmpb
pushf
pushf
lea
jne
call
pusha
jmp
lea
jb
jae
push
add
call
pushl
test
mov
cmp
sub
call
adc
pusha
call
jb
add
push
jge
rorb
pushf
and
jg
fsts
es
lcall
add
inc
leave
and
xchg
adc
mov
es
jp
inc
inc
pop
aad
fs
mov
jmp
movsb
inc
lcall
jecxz
mov
addr16
lcall
sbb
xlat
adcl
int
cmp
mov
push
out
orl
dec
repz
push
add
pushf
push
fcoms
shl
pop
call
mov
out
lret
and
aaa
imul
mov
loopne
mov
add
mov
fimuls
leave
pushl
lea
je
cmc
push
add
ror
rcl
ror
sub
btr
pushf
pusha
shr
call
inc
lea
push
call
movsbw
mov
push
jmp
lea
jo
push
call
jmp
clc
mov
xor
push
inc
sarl
mov
push
stos
push
icebp
jae
push
cli
xor
xor
xchg
or
aaa
mov
fldt
and
int3
pop
frstor
iret
subl
or
pop
sti
hlt
mov
cmp
ljmp
pop
cmc
pushf
jmp
lcall
shll
out
shrb
mov
aam
rolb
ficoms
pop
inc
out
jae
adc
pop
xchg
fnsave
mov
fcompp
fistl
sbb
mov
je
or
xor
cmpb
data16
jbe
fisubrs
mov
sbb
or
mov
sbb
push
pusha
movl
lea
jmp
add
test
stc
clc
pusha
movzwl
lea
shrd
cmc
mov
jmp
push
xor
test
call
push
push
jmp
add
insl
ret
inc
lret
lds
les
movsb
bound
aas
jnp
popa
add
iret
xor
xor
popf
cmpsb
jne
pop
adc
es
inc
dec
push
cli
xor
stc
xor
hlt
test
call
and
repnz
stc
aas
int3
pop
sbb
iret
xorl
movsb
imul
fnstcw
mov
pop
mov
dec
xchg
adc
daa
jo
ret
sbb
jle
cmp
movsb
push
add
fisttpll
mov
test
addl
sub
inc
rcll
cmpb
shrl
cmp
stos
dec
dec
iret
pop
mov
mov
imul
loop
movsl
das
jnp
pushf
cmc
pop
cmp
shrl
hlt
mov
loopne
stos
in
jbe
mov
mov
mov
add
xchg
inc
leave
pop
ret
hlt
add
jnp
push
incl
sub
std
push
lock
inc
cmc
xor
mov
scas
insb
sub
or
xchg
aaa
mov
pop
jne
lret
movsl
ss
inc
rclb
lea
dec
roll
mov
cmpsb
jle
aas
call
add
push
or
adc
jns
mov
js
mov
push
hlt
mov
mov
mov
mov
cmp
mov
test
cmpl
insb
sbb
push
les
push
inc
xchg
and
or
push
dec
leave
aad
sti
cltd
and
inc
mov
mov
cwtl
mov
mov
dec
xchg
cmp
cmp
sub
or
test
mov
jnp
push
mov
in
sbb
hlt
mov
dec
clc
pusha
pushl
lea
jmp
mov
bswap
mov
movw
pushl
mov
pushl
ret
mov
movzbl
call
push
stos
pushl
push
lea
jmp
movl
pushf
pusha
lea
jmp
call
bt
call
pusha
movl
pusha
jmp
push
movl
push
movl
pusha
lea
jmp
movl
pusha
pusha
lea
jmp
dec
adc
xor
xchg
mov
filds
das
jmp
xchg
xor
inc
lock
arpl
or
ficoml
xchg
lcall
in
dec
jmp
addr16
in
cmpsl
cmp
dec
std
scas
xor
mov
push
add
shl
movsbw
movsbw
mov
push
pushl
call
pusha
call
xor
xorb
in
jbe
enter
fs
push
loop
stos
out
mov
dec
mov
mov
cmp
and
es
lret
xor
test
or
xchg
aas
icebp
ja
mov
imul
inc
cli
mov
arpl
cmp
add
int3
jp
hlt
mov
xchg
inc
cwtl
push
movl
jmp
inc
or
adc
sbb
test
ljmp
insl
cmpxchg
cwtl
or
and
pop
daa
sbb
idivb
out
mov
jmp
add
xchg
xchg
jmp
outsl
adc
sbb
loopne,pn
or
sbb
insb
hlt
mov
cmp
lods
xorl
add
pop
ljmp
add
and
cwtl
inc
inc
push
inc
pop
adc
test
call
lea
and
leave
insb
in
xor
in
mov
lock
lcall
pushf
cmp
cmpsb
pop
loop
push
test
in
cmp
adc
cli
test
movsb
add
inc
loop
mov
add
xchg
xchg
stc
pushl
popl
pusha
stc
pushf
cmp
cmp
mov
pushf
pushf
lea
ja
cmc
setno
sbb
sub
pushf
add
add
movsbl
bsr
push
bsr
mov
clc
shl
ror
inc
mov
pusha
clc
repnz
pushl
call
not
sub
mov
push
and
stc
push
cmc
add
pusha
push
lea
jmp
movb
movl
pushf
lea
jmp
jne
or
sbb
in
and
in
notb
lcall
fistpll
fsubl
xchg
lahf
ret
les
vfrczss
fstps
stos
dec
mull
lret
pop
hlt
mov
sub
fisubl
xor
lea
jae
call
imul
arpl
sbb
add
mov
or
xchg
cmp
addr16
jg
xchg
ja
insl
push
aaa
cmp
jnp
cmpsl
add
daa
sub
and
out
lcall
dec
rcll
jecxz
pop
bound
rorb
xor
pop
test
stos
pop
jg
nop
in
add
push
cmp
sub
ret
pop
es
je
ret
setp
sub
push
je
add
shrb
adc
daa
and
xchg
stos
pop
xchg
inc
enter
out
mov
jbe
push
loope
icebp
sub
icebp
cmpl
jns
lret
xor
mov
push
testl
adc
xchg
sbb
mov
cld
dec
add
push
les
cmpsb
cmp
hlt
mov
bsf
add
pop
imul
pusha
call
mov
dec
sbb
mov
shrd
bts
mov
stc
cmc
bt
xor
cmp
pushf
stc
repnz
pushf
pushf
pushf
lea
jne
rcr
ror
mov
rcl
btc
sar
bswap
sub
ror
inc
cmp
btc
mov
test
stc
push
call
mov
inc
enter
pop
je
pop
sti
mov
jmp
cld
push
out
push
aad
scas
mov
mov
push
push
adc
xchg
adc
mov
pop
int
or
dec
hlt
mov
push
int3
and
ret
fdivr
cmc
stc
cmp
lahf
movsbl
jmp
mov
cmp
cmp
not
pushf
movsbl
lea
jmp
cs
dec
call
in
in
stos
arpl
jno
xchg
roll
sbb
test
test
stos
pusha
daa
cltd
aaa
jb
int
xchg
sub
jo
adc
roll
xchg
cmp
cmp
les
ljmp
push
ja
test
xchg
js
cmp
pop
inc
fucomip
jae
inc
call
sub
adc
lds
mov
cmpsb
sub
jo
andb
dec
dec
jecxz
enter
test
cmpsb
mov
int3
adc
stos
or
jno
pushf
and
pop
loopne
and
or
push
mov
test
movsl
inc
int
and
fistpl
ljmp
cs
int
aam
ds
xchg
xchg
push
push
hlt
mov
add
icebp
mov
mov
testb
in
ss
sbb
pop
dec
mov
fs
mov
fucom
or
cmpsl
mov
movsl
cmpsb
cmpsl
push
outsl
adc
leave
enter
or
in
xor
pop
pop
lock
add
mov
scas
scas
dec
xchg
fwait
mov
adc
hlt
mov
ret
mov
mov
lea
jmp
movzwl
lea
movzbw
pop
pushf
lea
movzbw
mov
pusha
call
movb
call
sub
call
cli
cs
divb
sahf
lock
adc
les
xchg
pushf
xchg
jl,pn
hlt
xchg
addr16
nop
fdivl
lahf
pushf
pop
popf
cmpb
mov
push
mov
fwait
dec
pushf
jl
mov
sbb
add
movsw
cmpsl
call
cwtl
fwait
xchg
mov
xchg
xorb
cmpl
sub
push
ret
sub
call
sahf
mov
dec
dec
fistl
pop
insl
xchg
enter
cli
cld
lahf
lock
mov
pop
dec
inc
cmp
jns
and
stos
enter
add
lods
cltd
cmp
xor
mov
ret
outsl
clc
fidivl
push
inc
das
sub
push
lahf
mov
sarb
dec
cmp
adc
popa
jnp
fwait
mov
jnp
add
sbb
mov
inc
rcll
imul
lock
pushf
fwait
test
popa
pop
pop
packuswb
adcl
lret
lahf
mov
ja
lcall
cltd
mov
movsl
mov
cwtl
xchg
mov
inc
adc
in
sub
push
popf
cltd
popl
sub
mov
ficoms
jae
popa
negl
mov
pop
mov
popa
sbb
add
inc
aaa
xchg
jb
add
out
fadd
sbb
jae
cmp
sub
push
inc
clc
jns
xchg
lret
mov
dec
imul
push
jb
imul
xor
cli
sbb
push
dec
pop
pop
imul
pop
ljmp
jne
pop
pop
pop
pop
clc
jb
lret
mov
adc
jg
xchg
insb
or
inc
jo
jb
je
jb
mov
mov
test
ja
insl
jb
imul
mov
jb
rclb
imul
popa
jne
cli
xor
ljmp
fldenv
add
ljmp
pop
mov
insl
xchg
scas
ds
imul
push
push
loopne
leave
jecxz
inc
test
inc
cmp
push
imul
cmp
ficoms
mov
outsl
popa
mov
pop
jb
fwait
stos
ret
out
push
lock
xchg
jg
and
insb
pop
mov
pop
out
popf
jb
xchg
xchg
and
scas
xchg
sub
pop
fwait
sbb
sub
lcall
outsb
xchg
sbb
cmp
adc
jnp
jb
xchg
out
imul
xor
dec
jg
push
xchg
in
fstl
out
enter
imul
cmp
add
lcall
pop
inc
aaa
das
push
cmp
adc
cmp
add
adc
pop
inc
ds
inc
mov
aas
inc
addr16
jge
jp
pop
inc
mov
jg
mov
dec
xorl
jb
loopne
mov
dec
dec
jb
pop
push
jb
rcl
xchg
aas
xchg
inc
jb
mov
mov
xor
jb
sbb
dec
jb
xchg
lods
mov
pop
inc
push
jne
xchg
mov
lock
inc
jb
repnz
mov
loopne
aam
xchg
aas
xchg
fwait
jb
lea
jecxz
cmp
xchg
lock
pop
js
add
add
out
cld
mov
inc
inc
xor
ljmp
sbb
push
jl
fwait
inc
cld
mov
push
dec
test
jne
stos
imul
sbb
push
rclb
sub
call
stc
divl
pop
arpl
inc
ret
mov
push
mov
lock
or
dec
add
inc
into
pushf
push
add
cltd
insl
les
enter
or
dec
jb
sub
sub
xchg
jecxz
push
les
insl
lahf
scas
pop
addr16
dec
les
push
cmp
inc
lock
jl
mov
dec
test
and
dec
xchg
outsb
cmp
popf
fcoml
out
mov
mov
fidivrl
scas
cld
xor
mov
aam
inc
mov
outsl
les
mov
ficoms
fwait
xchg
leave
imul
or
mov
movsl
out
jb
mov
jb
pushf
jne
lods
aam
les
das
les
sti
insl
cltd
aam
rcrb
in
gs
ja
clc
lods
pop
push
ja
jg
sbb
xlat
and
aaa
push
adc
fildl
loopne
imul
cltd
jg
inc
imul
sti
sbb
movsl
mov
dec
jb
imul
stos
xchg
sub
nop
stc
mov
add
push
dec
leave
je
push
push
aad
or
mov
aad
sbb
aas
js
rolb
jge
jae
pop
or
cli
iret
in
sbb
mov
cltd
imul
cltd
push
test
and
in
cli
dec
hlt
ja
popa
cmp
push
fimull
or
cld
lock
add
pushl
jae
jge
pop
test
popa
pop
adc
in
jns
sbb
or
jnp
fwait
hlt
jo
call
ja
ljmp
push
sub
cltd
lcall
out
insb
sub
jge
mov
cmp
xlat
jne
cld
jbe
xchg
inc
fwait
mov
es
aad
insl
jb
sbb
adc
jg
pop
in
imul
jbe
arpl
lods
mov
cltd
cld
test
sarb
xchg
test
les
cltd
pop
mov
cmp
sbb
dec
cltd
incl
ja
jl
aad
sbb
ljmp
cmp
dec
inc
jge
jnp
aam
lea
push
push
sbb
les
jge
jnp
add
cltd
xlat
aaa
inc
movsl
ja
dec
jb
sbb
push
xchg
sbb
xchg
xchg
popf
jg
jnp
cs
int3
cltd
lock
jae
test
xchg
pop
dec
inc
jbe
stc
rorb
lar
aaa
mov
mov
lock
dec
cltd
or
sbb
mov
outsb
push
cmp
fcomi
cld
cltd
and
shrb
popf
lods
jo
insl
and
std
jmp
mov
ss
insl
mov
call
jnp
mov
or
vmread
aas
pop
stos
arpl
cli
xchg
fsts
push
scas
ss
ja
std
imul
jae
adc
rcrl
sub
inc
pop
fdivl
jl
popa
jle
pop
fcoml
jge
inc
xchg
inc
jnp
inc
jb
xchg
xchg
fwait
loope
add
out
or
mov
mov
cltd
or
sbb
test
jecxz
xchg
or
add
xchg
ja
jmp
outsb
push
cltd
add
aam
pop
inc
jae
cltd
or
addr16
lock
lds
xor
inc
push
in
cltd
jnp
in
mov
imul
dec
sbb
je
jb
jp
setns
cltd
or
adc
mov
scas
test
dec
cltd
mov
mov
cltd
mov
out
rcrb
aam
lea
rcrb
les
call
cld
int3
mov
add
and
xchg
or
cltd
mov
imul
cld
lahf
dec
sub
lret
cltd
dec
fwait
and
call
lea
cltd
inc
xchg
xchg
mov
fnstenv
int3
push
cltd
push
mov
or
cltd
fcompl
movsl
jnp
cmp
testl
jbe
or
scas
dec
les
fsts
insl
jl
fmuls
mov
mov
xchg
mov
sbb
jb
mov
mov
push
mov
enter
mov
rolb
fisttpll
sub
fidivrl
enter
das
test
loop
out
cli
les
ss
inc
or
dec
xchg
addr16
ljmp
stc
sbb
call
test
les
mov
pop
je
data16
in
aam
xchg
cmp
or
pop
mov
dec
lods
mov
pop
jg
push
jb
or
cs
adc
pop
xchg
pop
out
and
xlat
adc
lock
les
push
inc
inc
cltd
xrelease
xchg
pop
mov
inc
pop
xchg
cmp
les
or
orl
ja
lea
cltd
xchg
mov
inc
sbbl
xchg
test
lods
pop
cli
iret
xchg
dec
xlat
nop/reserved
mov
sub
push
cmpsl
lods
fldcw
scas
mov
xor
xchg
xchg
lea
xchg
cmp
into
insb
mov
mov
in
push
jae
cltd
ja
ds
cmp
ss
xchg
and
xchg
dec
xchg
xchg
fisubrl
mov
cmpsl
xor
in
mov
sti
cmc
cmpsl
sbbl
jns
xor
gs
gs
lea
ljmp
mov
das
push
pushf
mov
xchg
mov
aaa
mov
push
mov
into
int3
cwtl
mov
shrb
fstp
std
ret
mov
fcmovbe
leave
mov
xchg
pusha
push
add
lahf
rcl
inc
test
mov
push
push
cwtl
push
adc
ret
fisttpl
and
mov
dec
adc
and
pop
addr16
adc
push
and
dec
fwait
outsb
cmpsl
loop
fisttps
sbb
cli
int3
fmul
jle
inc
dec
push
adc
cs
xchg
xchg
adc
or
lahf
lcall
jle
sub
mov
mov
imul
mov
push
jmp
lcall
pop
mov
xchg
sbb
call
mov
das
pop
jg
aaa
jge
lods
pop
xchg
mov
pop
or
xchg
xor
arpl
dec
xchg
out
lret
inc
mov
scas
mov
insb
das
sbbb
xchg
fiadds
enter
mov
cmpsb
push
pop
bnd
imul
jge
jbe
cs
rcrl
pop
mov
mov
mov
mov
mov
clc
push
jl
xchg
fistpll
jl
dec
lods
sbb
gs
in
popf
movl
pop
lea
lock
aad
xchg
js
scas
cmp
iret
or
ja
dec
adc
pop
push
cltd
pop
mov
pop
aaa
movsl
xchg
pop
lock
push
iret
clc
divb
inc
ror
xchg
mov
lahf
mov
adc
inc
addb
mov
push
jb
rorb
iret
push
out
addb
pop
xchg
jl
xchg
inc
dec
into
mov
jl
out
je
dec
sbb
negb
jge
imul
outsl
rcrl
cmp
lret
xchg
sbb
push
insb
cld
mov
sbb
sub
into
cmp
sbb
iret
xor
mov
mov
int3
or
stc
push
ret
js
movsl
sti
xor
loopne
cmp
xchg
popf
pop
xchg
sbb
mov
aam
sahf
xor
xor
jns
push
mov
xor
pop
cltd
xchg
xchg
hlt
cmp
test
and
and
jbe
outsb
mov
mov
insl
cmpsl
pop
jnp
push
pop
sub
cmpsb
mov
jle
cmpsl
nop
cmp
test
cs
ds
lods
arpl
or
mov
data16
mov
dec
jg
mov
pop
pop
pop
mov
pop
in
mov
inc
cmpsl
and
xchg
shl
jl
lds
adc
sbb
cld
add
mov
jg
push
xchg
pop
pop
xor
lods
xor
insb
pop
jp
pop
popf
xchg
into
cmp
sbb
mov
or
xor
jle
xchg
sbb
int
or
xchg
xchg
cli
lea
push
xor
loop
in
sbb
jbe,pt
fimuls
jbe
push
mov
mov
and
mov
movl
push
fdiv
mov
ds
sbb
cmpsb
clc
imul
movsl
jb
cmp
iret
sub
mov
adcb
add
dec
pop
or
cld
outsl
test
iret
or
inc
push
imul
das
jg
aas
jne
mov
or
inc
push
jne
pop
jmp
inc
cld
test
jle
scas
cmp
out
loopne
push
pop
test
adc
adc
cmp
lret
cwtl
push
lea
pavgb
mov
pop
xor
push
push
movsl
js
adc
pop
cli
pop
push
je
xchg
rolb
mov
jb
jp
imul
ds
mov
cwtl
mov
iret
mov
push
gs
cmp
dec
dec
ja
push
xchg
jb
into
dec
cmp
lret
add
int3
adc
test
popf
jmp
popf
aam
sub
push
mov
nop
jbe
or
das
decb
aam
mov
fmul
fidivrs
mov
xor
aam
xchg
ss
popf
add
fimuls
ds
jne
xchg
push
push
push
xchg
outsl
cmp
dec
inc
inc
into
ss
fsubrs
pushf
xor
add
cmc
aam
cmp
dec
cmc
xchg
fcoml
lock
xor
repnz
mov
adc
lcall
pop
rcrb
pop
je
lret
dec
aam
mov
xchg
adc
aam
adc
outsb
jno
jmp
xor
je
xchg
pop
pop
data16
iret
sbb
cltd
cli
mov
push
xor
sbb
sbb
pop
addb
outsl
nop
movzbl
push
mov
pusha
jle
clc
ret
das
mov
test
cmp
fstps
push
xchg
iret
incb
ret
pop
je
das
test
pusha
outsb
imul
fcom
add
dec
outsl
jp
jge
int
sbb
inc
add
cli
inc
lahf
jg
sti
jbe
xchg
fucomp
mov
mov
xor
pop
test
into
out
sub
jge
or
add
cmp
inc
add
outsl
or
es
outsb
sbb
jecxz
sub
xchg
and
nop
leavew
cwtl
icebp
or
repnz
mov
test
outsl
dec
mov
mov
mov
shl
jnp
movsb
call
mov
lahf
mov
rcrl
cmpsl
cli
test
out
mov
fstpt
push
out
lahf
fnstsw
mov
fildl
and
jle
testb
fnstsw
scas
cmp
push
cs
addl
mov
push
cld
push
mov
jle
jle
mov
notb
in
or
mov
sub
testb
and
add
mov
mov
int
in
je
xchg
mov
inc
jbe
int
or
ja
dec
setne
cld
jbe
cld
out
lods
pop
sysret
daa
adc
inc
daa
std
pop
pop
or
push
test
mov
jne
cmp
push
cli
shlb
push
clc
pushf
cltd
movl
xor
mov
pusha
mov
fwait
push
pop
mov
inc
enter
insb
xchg
iret
dec
xchg
sarb
aaa
push
mov
xchg
sbb
pushl
out
jecxz
ret
cld
scas
out
std
imul
pop
cmp
mov
repz
je
mov
mov
and
leave
movsl
mov
mov
cmp
das
pop
or
out
pop
jp
dec
or
inc
adc
ficoml
aaa
or
jg
and
sub
jae
mov
das
and
loop
mov
test
add
aad
cmp
xchg
mov
test
ss
lock
cli
aas
xchg
push
pop
push
call
jg
pop
js
xchg
jbe
rorb
fcoml
push
inc
push
push
xor
mov
push
rorl
fs
pop
lods
popf
push
inc
insl
jl
mov
js
cmp
mov
or
scas
mov
mov
push
mov
into
addr16
call
es
pop
loop
repnz
xor
movsl
push
sub
into
cmp
jge
ss
pop
or
mov
fmul
loop
cmpsl
jmp
pushf
mov
sarb
cwtl
mov
push
mov
dec
adc
cmp
pop
test
lahf
notl
cld
je
pop
cli
cld
and
lahf
movsl
mov
stc
pop
pop
mov
pop
fisubs
sub
mov
sahf
mov
push
cmp
stc
fsubl
int3
mov
dec
pop
aas
insl
aam
pop
inc
sbb
sub
out
scas
push
orl
push
lret
pop
add
orb
lret
scas
jl
xchg
or
xchg
or
mov
xchg
push
lcall
pop
xorb
adc
jl
pushf
lock
ds
sbb
cld
fsts
js
cmpsb
pop
xchg
scas
shll
outsb
xchg
jg
jbe
xlat
cwtl
xor
push
jnp
cmp
mov
icebp
or
jg
popf
popa
push
push
pop
into
ds
fwait
das
ds
xchg
push
xor
clc
jae
fs
aas
out
adc
mov
mov
xchg
pusha
sti
jae
xor
test
icebp
pop
inc
pop
scas
cmpsl
cpuid
jge
andl
pop
sbb
ficoml
lret
mov
xchg
pop
jb
xchg
mov
rolb
test
and
push
jbe
adc
add
repnz
iret
and
adc
mov
xlat
cs
jbe
xchg
lds
mov
loop
adc
aad
ficomps
adc
out
outsl
xor
mov
imul
das
xor
mov
xchg
jne
jnp
cmp
ficomps
jge
mov
ja
push
insl
ljmp
test
xchg
cmp
mov
cmp
xchg
inc
jg
and
mov
inc
lods
in
testl
xor
sub
lock
jg
mov
mov
pop
jae
mov
cli
xchg
sub
nop
sar
add
pop
lcallw
jno
inc
push
cmp
movsl
fidivl
sbb
into
popf
mov
mov
cmp
rclb
loope
movsl
into
jne
mov
xor
orl
pop
outsb
or
xchg
arpl
add
out
jp
sub
mov
mov
jg
cmp
xchg
cwtl
testb
xchg
add
and
add
hlt
stos
jns
dec
push
inc
iret
das
lret
call
nop
mov
push
xor
xchg
sbb
sub
test
mov
mov
push
push
mov
lock
sub
jbe
mov
mov
mov
or
sbb
push
fidivl
in
pop
loope
push
push
xchg
jb
lea
lock
pushf
jmp
pusha
mov
leave
cmc
sub
nop
adc
sub
out
orb
cltd
mov
xor
mov
push
mov
subl
pop
aaa
jbe
or
xchg
cmp
add
cmp
xchg
jp
push
mov
xchg
divb
out
int
out
cmp
iret
outsb
push
jne
pop
in
ljmp
popf
xchg
pop
xor
pop
jle
sbbb
insb
stos
mov
mov
mov
adc
push
sub
pushf
cmpsb
mov
push
leave
lods
hlt
jg
dec
sub
bound
mov
inc
iret
stos
mov
push
push
cmp
leave
or
mov
iret
jns
hlt
push
lret
jle
cli
sarb
mov
leave
pop
xor
iret
enter
jnp
sti
dec
mov
daa
xchg
shlb
sbb
aad
arpl
jno
ljmp
mov
sub
and
fisubrs
into
js
mov
push
fisttpll
mov
std
scas
cmp
test
mov
mov
push
add
sbb
scas
mov
sbb
mov
fldcw
dec
xor
add
icebp
sti
repz
dec
lahf
mov
mov
sbb
shrb
xchg
aad
rcr
jp
adc
or
call
push
scas
push
pop
mov
scas
push
in
xchg
or
pop
jle
nop
push
ds
scas
xchg
push
pop
rorl
push
dec
out
sbb
lea
in
andl
cmp
pop
aas
pop
jle
scas
mov
mov
sbb
mov
xchg
cwtl
xchg
mov
fcomip
pop
xorb
dec
dec
insb
xchg
fdivl
sbb
sub
test
push
push
lahf
mov
jp
xchg
inc
imul
xlat
daa
shll
movsb
xorb
in
jle
repnz
cmp
andb
psubw
jle
data16
mov
xchg
test
ljmp
push
in
shlb
push
stc
rorb
xchg
mov
dec
js
in
sub
or
cmp
and
sbb
mov
dec
aam
js
mov
cwtl
inc
fdivs
ljmp
incb
mov
loopne
or
sbb
in
addr16
xchg
mov
pop
fcmovne
add
sbbl
jg
hlt
pop
mov
leave
sbb
adc
mov
cmp
out
sbb
mov
pushaw
xchg
icebp
ficoms
jne
jl
adc
sub
mov
cmp
push
cmp
andl
push
push
ficomps
aam
hlt
rcr
cmp
stos
push
adc
or
sti
xchg
pop
js
xchg
add
fcmove
adc
pushf
fwait
sub
jne
dec
out
cmp
push
xchg
inc
xchg
jae
xchg
lcall
push
inc
mov
jle
int
negb
jle
test
pop
jle
mov
pop
push
addl
fmuls
jle
jl
xor
add
sbb
push
cmpsl
rorl
jo
addr16
cli
and
jbe
mov
dec
push
clc
cmp
fmull
cmp
and
outsb
mov
mov
rcrb
lret
mov
shlb
lret
pop
mov
lret
lcall
into
jbe
jno
sbb
sub
mov
sbb
adcb
xor
enter
pop
insl
iret
stos
jns
in
out
icebp
add
stos
xor
mov
jle
add
outsb
inc
pop
jle,pt
stos
mov
jbe
mov
xchg
jp
pop
xor
lret
lahf
jle
mov
stc
lods
or
rclb
cli
je
aam
adc
cmpsb
lahf
sub
mov
inc
js
mov
push
into
xlat
data16
jae
push
iret
mov
fwait
negl
xchg
mull
push
dec
insb
decb
jbe
sti
imul
cmp
xchg
push
jp
divl
push
and
jmp
jg
mov
push
lahf
int3
sub
leave
fs
mov
out
push
push
int3
pushf
jnp
insb
aam
pop
jmp
xor
push
fwait
push
pushf
subl
add
jle
mov
movl
sub
popf
int
fbstp
pop
pop
out
test
xchg
je
mov
and
jl
xchg
nop
test
mov
push
sbb
adcl
push
mov
xchg
pop
dec
outsl
or
jle
or
pop
push
adc
dec
pop
fs
outsb
out
mov
cmp
jbe
dec
bound
test
out
sbb
jl,pn
into
push
or
jnp
push
xchg
inc
adc
pop
cmp
pop
cltd
and
pop
jbe
fimull
sbb
out
test
cmpsl
cmp
or
es
mov
push
jae
dec
cltd
push
lahf
dec
xor
mov
inc
pop
movsb
add
pushf
jns
movsb
xchg
outsb
mov
jae
rol
mov
pop
fildll
jne
pop
xchg
notl
and
jne
nop
pop
test
pminub
xchg
pop
inc
daa
pop
clc
xchg
mov
test
or
cmp
jge
xlat
dec
adc
jo
adc
xlat
xor
dec
jbe
sub
or
mov
jo
or
sbb
push
iret
cmpsl
fidivl
xor
push
es
cmp
push
cwtl
mov
in
fistps
and
int
test
pop
cmp
or
sahf
mov
sbb
lods
inc
mov
lds
xchg
mov
lret
jae
cs
lea
push
int
cmpb
pop
sbb
jo
or
ds
xchg
das
mov
dec
test
lea
lea
sub
ds
inc
jbe
scas
inc
mov
sub
popf
nop
das
dec
push
ss
xchg
sub
movsl
mov
iret
pop
pop
push
ds
inc
out
clc
add
bound
repnz
pop
dec
iret
sbb
lret
xchg
loop
cmp
sub
pop
jo
lea
rcrl
scas
popf
outsb
lods
scas
clc
bound
loop
jle
mov
jbe
scas
xchg
lret
push
xchg
inc
and
pusha
mov
nop
push
xlat
mov
cmp
ficompl
stos
iret
cld
pop
add
out
pop
lds
inc
jp
and
out
and
or
dec
xor
mov
ljmp
fucomip
and
out
lcall
lods
xor
add
popf
add
mov
add
xchg
mov
jbe
jb
push
scas
imul
dec
popf
push
xor
push
cmp
push
cmp
stos
sub
sbb
outsb
popf
fiadds
dec
hlt
sbb
sbb
and
push
fadds
lods
jbe
inc
movsl
js
call
jb
mov
cltd
mov
ds
into
clc
cmp
dec
int
aam
pop
in
setb
adc
stos
mov
std
mov
scas
pusha
iret
add
icebp
call
jb
movsb
mov
mov
pushf
cmp
out
pop
push
std
lods
loope
cmpsl
cmp
add
sbb
lock
xchg
jecxz
test
mov
sub
pop
inc
jo
and
sbb
clc
mov
push
mov
test
pop
jp
pushf
xchg
orb
jle
jg
add
xchg
adcb
or
inc
mov
fldt
sbb
pop
dec
jl
popf
push
push
xor
pop
int
js
mov
lcall
mov
jp
cmpsb
or
pop
jl
xchg
xchg
adc
mov
popf
clc
pop
fisubl
leave
popf
idivb
mov
mov
cmp
pop
jo
mov
stc
lahf
outsb
loope
mov
push
mov
mov
es
out
push
inc
and
popa
adc
and
xor
and
ss
add
push
jle
call
inc
hlt
test
mulb
xchg
in
or
data16
lods
dec
lahf
lret
into
das
ja
xchg
iret
mov
pushw
std
lahf
push
jnp
cwtl
pop
mov
xchg
into
daa
call
push
inc
mov
or
xchg
into
cmp
je
pop
pop
pusha
push
mov
lcall
jle
or
xchg
nop
cmp
inc
push
js
scas
cmp
xchg
leave
into
lahf
iret
push
jnp
and
icebp
rorb
std
std
xor
fistpl
xchg
cld
aas
mov
push
fdivs
sub
in
outsb
mov
out
xchg
or
pop
stos
xchg
int3
inc
adcb
xchg
jns
xlat
aas
jne
adc
cmpsl
popf
loop
fildll
pop
rolb
lcall
fmull
call
dec
cltd
mov
push
dec
mov
sbb
fadd
jp
jle
lods
and
xchg
insl
fidivs
mov
push
dec
ret
out
dec
push
jle
pop
xchg
incb
ds
jge
mov
sbb
iret
push
dec
and
test
sbb
cwtl
adc
mov
int3
or
std
cmc
pusha
outsb
mov
pop
xchg
iret
or
pushf
mov
lea
sti
call
mov
out
pop
loopne
sub
shlb
xchg
notl
cwtd
add
stc
leave
jge
and
mov
sti
scas
js
fistpll
mov
xorl
jle
pushl
jae
adc
cmp
iret
mov
ja
notb
cs
pop
div
add
jbe
test
dec
loopne
cmp
cld
sbb
lods
pop
rol
push
outsb
lret
into
mov
out
lock
xchg
test
test
add
xchg
sti
push
aam
mov
loopne
adc
push
mov
les
mov
lea
clc
cmpsb
inc
call
adc
ficomps
pushf
xchg
push
xchg
jbe
push
sti
out
bound
orb
lods
sub
loop
xchg
push
mov
out
sbb
movsl
sbb
mov
push
jge
cltd
adc
pop
repnz
sub
out
jl
and
sub
sub
sahf
mov
sub
mov
out
and
mov
into
mov
iret
out
bound
xchg
lcall
xor
pop
cmp
mov
sub
cmp
jp
stc
mov
iret
jae
add
pop
or
lds
jns
in
lods
or
pushf
xlat
push
mov
jecxz
push
sub
xchg
push
js
lock
ficompl
int
dec
repnz
push
scas
pushf
jne
movsl
lock
xchg
hlt
cmpsb
or
inc
mov
xchg
jnp
mov
std
out
test
in
cmp
xchg
mov
lea
mov
sbb
mov
test
push
cmp
cmp
mov
js
mov
pushf
adc
repnz
sub
push
leave
aas
adcl
xchg
mov
add
fstpt
mov
fisttpll
mov
lds
lds
lret
xchg
jle
jbe
and
adc
cltd
lea
sbb
push
mov
mov
loop
dec
iret
je
dec
mov
jbe
mov
incb
jno
bound
inc
pop
mov
jns
pop
sbb
fwait
push
bound
lods
mov
pop
cmp
and
sub
pop
add
mov
mov
adc
dec
cltd
push
aaa
xchg
mov
sti
mov
cmpsl
fbstp
mov
or
push
jle
jg
mov
jecxz
mov
xchg
lahf
mov
clc
lock
cmp
and
dec
mov
iret
fildl
imul
lret
jl
cmp
xchg
xchg
leave
subb
pop
and
add
loopne
call
addr16
cltd
movsl
push
mov
push
ljmp
dec
jle
push
jp
sarb
add
ret
outsb
fs
add
sub
test
mov
fmul
outsb
dec
xchg
mov
mov
rolb
jg
lcall
ljmp
push
mov
clc
cld
out
xchg
xor
das
in
sub
pop
xchg
pop
push
cwtl
jl
adc
push
inc
or
jbe
sub
or
xor
adc
jle
mov
jno
sti
xchg
mov
mov
mov
sub
arpl
inc
xchg
jmp
mov
mov
cmp
leave
js
mov
and
rclb
mov
jne,pn
pop
pop
mov
mov
daa
clc
loope
sbb
mov
cltd
mov
mov
dec
mov
add
movsl
mov
test
cs
int
addl
dec
cli
push
mov
repz
scas
lcall
lock
mov
push
mov
out
dec
xchg
das
xchg
sbb
ud0
pop
cmp
dec
xchg
nop
mov
mov
rclb
or
pushf
push
add
pop
jbe
and
sbb
xchg
inc
xchg
js
fidivrs
mov
loop
roll
in
push
rclb
lret
cwtl
sbb
xor
and
jge
gs
pop
lods
xchg
cmpsl
push
mov
pop
adcb
sub
jne
fwait
xchg
je
js
test
gs
popa
jl
mov
sti
push
pusha
dec
jg
clc
and
gs
xchg
xchg
inc
pop
es
mov
sbb
add
popf
dec
leave
xchg
inc
pop
sbb
sbb
nop
or
ja
shrb
adcb
ss
cltd
test
mul
jg
pop
xchg
scas
pop
jne
js
mov
int
xor
mov
or
mov
push
push
pusha
add
lock
and
xchg
mov
or
jb
pushf
push
cmp
dec
push
push
js
stos
mov
cmpsl
or
pushf
mov
jne,pt
test
gs
int
push
mov
mov
pop
mov
or
subb
iret
xor
mov
push
negb
iret
pop
pop
and
sbbl
mov
mov
lret
push
popf
int
lcall
push
negb
jb
push
je
jle
inc
int
sub
add
inc
xchg
pop
pop
pop
clc
sahf
cs
pushf
mov
sub
mov
es
pop
cmp
lods
pop
sbb
js
mov
jle
pop
add
jle
pop
and
jle
pop
inc
pop
pusha
ja
test
insb
sbb
sbb
daa
orl
pop
hlt
decl
xor
ficompl
mov
fucomp
push
jle
pop
mov
nop
xor
ja
or
or
mov
lahf
fcompl
jle
and
jl
jnp
sbbb
mov
pop
or
jne
xchg
push
sub
add
pop
push
xchg
xlat
cmp
femms
or
ljmp
rcrl
fsubp
xor
es
fldl
pusha
jbe
mov
mov
xchg
lods
lods
mov
jl
jle
mov
into
jp
pop
divps
mov
xor
mov
adc
divb
lods
dec
sbb
jl
arpl
fsubr
mov
jne
mov
iret
pop
mov
shrl
sub
fdivl
sub
adc
dec
fistps
pop
jae
int
stc
mov
nop
xchg
aaa
inc
out
mov
ss
scas
cmpsb
sbb
repz
insl
cmpsl
gs
adc
rclb
scas
or
add
xor
add
fstpt
fxch
and
push
je
outsb
shlb
ss
mov
ret
fwait
sbb
sub
dec
mov
mov
jns
jg
xchg
leave
hlt
mov
inc
aaa
adc
stc
daa
repnz
push
xor
lea
out
and
mov
insb
xchg
int
xchg
mov
dec
push
fdivrs
mov
sbb
idiv
push
negl
mov
and
dec
aam
add
in
sub
xchg
popf
xor
aaa
pop
mov
jp
adc
clc
repnz
xor
xchg
shlb
dec
lock
and
mov
and
mov
ja
mov
jo
xchg
jp
cmp
ja
push
jnp
iret
or
test
cmp
data16
es
mov
int3
in
jge
mov
inc
popf
rcr
sbb
mov
cli
insl
clc
loop
mov
xchg
lcall
data16
adcb
je
sub
in
jp
sbb
lods
mov
int
mov
jg
push
das
leave
push
push
leave
pop
mov
rolb
mov
push
mov
mov
jle
pop
int3
hlt
mov
xchg
and
shl
push
jl
jle
ud0
mov
adc
insb
xor
push
ljmp
outsb
push
push
jb
mov
leave
xchg
and
arpl
cwtl
jb
dec
cmp
push
push
push
jo
cmpsb
sahf
adc
mov
in
test
jg
mov
pop
scas
mov
mov
lcall
cltd
push
fwait
out
sti
scas
push
sbb
test
cmp
test
mov
inc
imull
int
test
mov
fwait
out
pop
inc
cmp
nop
popl
adc
dec
adc
adc
dec
fmul
ficomps
sub
lahf
and
ds
out
daa
loope
xchg
sahf
adc
rolb
cmp
and
and
dec
xchg
int3
fwait
cmc
leave
dec
sarl
nop
or
cmpsl
pop
pop
inc
adc
xchg
pop
mov
xchg
push
dec
push
mov
dec
js
sub
outsb
dec
mov
orl
jl
xchg
add
mov
dec
jne
xchg
pop
jns
xchg
xchg
cmp
out
jl
mov
pop
test
cltd
jnp
cmc
fs
ret
mov
mov
and
mov
sbb
jle
xchg
mov
jp
scas
jg,pt
iret
inc
push
sbb
mov
xchg
scas
xor
xchg
call
dec
sarb
fwait
outsl
push
adc
sbb
cmpsb
or
rclb
jle
subl
iret
mov
and
push
mov
xor
and
incb
aam
add
push
sub
mov
pop
cs
mov
sbb
push
js
pushf
mov
loopne
cli
cltd
push
pop
jbe
mov
xchg
mov
or
pushw
out
je
int
mov
jl
das
inc
pop
lock
sbb
sub
push
push
xor
mov
cs
push
push
enter
lret
pop
sub
outsb
scas
xor
je
fwait
data16
jl
or
lret
and
insb
mov
jecxz
and
jecxz
xor
fisubl
xchg
leave
adc
xchg
bound
outsl
mov
lea
mov
push
pusha
xchg
sub
scas
mov
test
popf
cld
sbb
pop
cltd
aaa
movsl
add
mov
js
pop
and
test
mov
mov
mov
xorl
jg
jg
iret
sub
pusha
out
sub
pop
mov
push
adc
inc
jg
jnp
dec
negl
lahf
adc
jns
cs
cs
ja
jl
repz
outsb
mov
and
push
cmpsl
gs
leave
daa
push
mov
xchg
shll
mov
repz
mov
push
lcall
mov
popa
mov
repz
scas
shll
xor
loopne
je
add
pop
test
cmp
xchg
cltd
repnz
xchg
sbbb
mov
sbb
int
mov
insb
leave
mov
pushf
push
xchg
lret
dec
xchg
test
push
sbb
adc
cli
or
xor
out
lea
push
in
or
inc
mov
mov
adc
xor
adc
test
addb
aas
push
mov
push
insb
jl
push
mov
test
push
stos
repnz
lock
jne
lea
push
cli
and
inc
in
in
out
push
out
jg
push
fistpl
iret
in
ret
push
adcl
aaa
pushf
cmpsl
push
and
or
rorb
mov
jecxz
shl
adc
popa
aas
dec
mov
xchg
sbb
push
shlb
xchg
lahf
inc
sbb
or
push
scas
push
fsubrl
sub
bound
movb
jns
inc
iret
mov
test
adc
xchg
fnstsw
dec
sbb
xor
rorl
pop
popl
fs
add
std
push
push
xchg
xchg
mov
aas
push
int3
xchg
repnz
adc
adc
push
in
arpl
cmp
cltd
cmp
nop
ja
mov
adc
shrb
inc
pop
ftst
int
gs
outsb
add
xchg
xor
fbld
in
jecxz
push
mov
lret
iret
push
sub
jmp
rcll
loopne
fdivrp
push
cwtl
test
jp
lds
and
fwait
mov
push
xchg
xchg
push
in
gs
cmp
mov
iret
and
pushf
aaa
test
je
xchg
jg
pop
movsb
pop
pop
jp
sub
xchg
jp
xlat
scas
cltd
mov
xchg
jl
add
mov
out
add
cmc
ret
cli
movsl
mov
and
incb
and
lock
xchg
push
roll
out
add
mov
xchg
dec
push
xchg
xor
or
in
ljmp
and
rclb
aad
xchg
mov
push
fnsave
int
xor
mov
pop
push
in
mov
add
jp
lcall
and
xlat
push
xchg
outsb
movsb
push
sub
pop
and
mov
sbbb
and
xchg
xor
rcrb
js
mov
pop
jb
inc
lds
rcrl
test
bound
jp
pop
xchg
test
js
int
inc
push
test
addb
pop
orb
xor
orb
lcall
int
lahf
dec
xor
lcall
pusha
xchg
xchg
jp
lods
ss
jb
xchg
sbb
cmp
mov
cmp
test
movsb
jmp
push
mov
out
int3
adc
test
scas
or
leave
sbb
iret
into
cmp
test
adc
lcall
pop
mov
xchg
xorb
into
pop
mov
mov
xchg
ds
outsb
pop
mov
cmpb
psadbw
shlb
dec
rolb
add
xchg
mov
pop
mov
dec
leave
mov
cwtl
push
and
fmul
outsb
popf
test
or
js
mov
mov
fisubrs
mov
bndldx
js
xchg
ljmp
inc
in
test
repz
jg
xchg
test
adc
mov
xchg
test
cmp
cld
mov
xor
fldl
bound
sbbb
ds
sbb
pop
jp
sbb
fildl
shlb
hlt
pop
rcrl
cli
xchg
xchg
or
push
xchg
int3
out
mov
lods
mov
push
andb
int
jmp
cmp
mov
test
push
sbb
outsb
pop
jg
xchg
mov
push
or
adc
xchg
nop
add
jb
xchg
push
roll
jl
addb
fisubrl
lret
andb
adc
lea
add
arpl
clc
or
data16
stc
iret
cmpsb
lea
inc
cmp
je
faddp
adc
insl
adc
dec
push
xchg
mov
dec
xchg
das
cli
hlt
mov
inc
xlat
jno
faddl
mov
test
aas
mov
add
pop
test
fwait
popf
repz
scas
cmp
pop
insl
daa
mov
je
std
jbe
fidivs
lret
jmp
jle
in
pop
cld
std
mov
mov
int3
jne
data16
movl
adc
outsb
faddl
cmp
jae
cmp
aaa
push
scas
inc
loop
pushf
clc
cli
les
push
addr16
rcrb
fildl
xchg
in
cli
gs
out
mov
cli
cld
in
call
inc
add
push
mov
mov
negb
clc
push
jl
pop
out
in
xchg
jecxz
inc
xor
jp
push
and
loopne
fs
mov
jge
shr
pushw
pop
out
sbb
mov
pop
mov
xchg
aas
mov
repnz
push
iret
sarb
adc
cmc
inc
lret
call
sub
repnz
mov
lahf
cld
fidivrs
sbb
fucomp
jb
xorb
push
sbb
mov
pop
mov
stos
mov
mov
jno
gs
test
sub
dec
or
subl
arpl
mov
insb
sbb
lds
inc
xchg
mov
pushf
int
mov
cmc
mull
jle
mov
inc
inc
movsb
jbe
jg
and
repnz
std
mov
sbb
lahf
push
cld
hlt
sbb
rol
stos
mov
mov
xchg
lods
aas
xor
pop
mov
or
test
sbb
mov
fidivrs
fstl
cli
add
sbb
xchg
mov
cld
mov
pop
xchg
scas
dec
inc
mov
rorb
aam
js
lea
ss
xor
aas
lcall
pop
adc
negb
mov
xor
pop
xor
sbb
push
repnz
js
lods
pop
aas
loopne
or
pop
sub
xchg
adc
push
nop
mov
in
pop
push
push
push
cld
inc
xchg
int
xchg
mov
cltd
adc
loop
jge
xchg
mov
fwait
jmp
std
dec
pop
popf
cli
gs
xchg
dec
push
into
inc
jg
iret
sbb
jge
je
je
loop
stc
sbb
out
dec
push
mov
dec
repz
adc
in
mov
mov
lea
sbb
jge
aaa
lret
adc
or
mov
and
mov
loopne
inc
lods
out
call
sbb
mov
sbb
lea
dec
sub
push
dec
lods
scas
jp
jnp
addr16
and
pushf
push
sti
fldt
xchg
sbb
pushf
insb
mov
cltd
push
adc
cltd
fs
ljmp
fadd
out
ficoml
pop
sbb
and
pop
std
xchg
mov
outsl
pop
ljmp
imul
inc
pushf
fisubrl
out
gs
mov
addr16
sub
outsl
mov
out
lea
sbb
inc
jp
xchg
mov
movsb
cltd
jns
stos
push
mov
mov
ror
and
cld
mov
call
jl
sbb
sbb
cmpsb
repz
inc
cli
ljmp
ljmp
push
pusha
xchg
cli
ja
sti
test
lcall
test
dec
push
mov
insb
push
cmp
xor
cwtl
inc
out
dec
jp
add
lret
fldcw
sub
in
iret
push
cli
mov
out
jbe
pop
jle
cwtl
in
and
incb
cwtl
push
out
mov
aas
sbbl
pop
movsl
xchg
add
jp
push
lods
sbb
mov
stc
and
leave
mov
andb
pop
inc
dec
popf
mov
je
das
push
xchg
push
test
pop
mov
mov
stos
or
adc
outsb
and
lret
setbe
mov
lret
adcb
jle
add
sub
cwtl
sub
dec
lea
xchg
or
fbstp
push
jle
cmp
jne
or
jle
pop
dec
ds
inc
loop
xchg
mov
iret
mov
xlat
pop
or
pop
sbb
mov
jl
jp
stos
jl
arpl
push
lret
add
pop
int
mov
jg
mov
cmp
push
int3
imul
ret
std
je
insl
pop
int
sbb
fisubl
pop
jle
adc
aas
mov
jg
pop
test
cmp
dec
leave
and
cmp
iret
jle
pop
lods
es
sbb
push
iret
in
rcrl
cmp
stc
inc
and
and
mov
pop
sti
shrb
push
negb
fbstp
add
sbb
adc
sbb
pop
push
and
addr16
and
jo
pop
iret
popf
push
insl
out
mov
jns
xchg
xchg
xchg
leave
jle
dec
dec
loopne
inc
test
shl
inc
dec
jo
mov
inc
in
leave
push
out
sbb
es
cmp
mov
or
out
ja
jnp
insb
add
xchg
insb
decb
push
popl
scas
lcall
ret
adc
imul
adc
and
leave
or
ret
dec
xchg
pop
inc
lahf
popf
leave
cmp
jbe
or
lret
fsubl
push
ja
mov
cs
and
jp
mov
stos
pop
inc
ss
mov
je
or
dec
mov
adc
mov
lods
pop
cmpsb
jl
push
ds
fdivrl
imul
push
add
jl
sti
in
cmpsb
add
cmp
fidivs
mov
push
mov
xchg
fistps
inc
in
push
xor
repz
and
scas
add
cwtl
popf
sbb
xchg
iret
mov
push
sub
loop
adc
mov
jo
pop
call
add
push
inc
mov
fmuls
fnsave
sbb
inc
mov
sub
fimuls
sbb
sbb
mov
je
pop
imul
xchg
add
cltd
mov
xor
lock
call
pop
mov
enter
mov
xchg
stc
jp
xor
data16
push
push
mov
ljmp
iret
dec
es
daa
lahf
jmp
xorl
fcomip
push
scas
cli
mov
mov
incl
push
adc
in
adc
ds
lret
mov
lock
sbb
insl
in
and
and
pop
inc
idivl
xor
dec
popa
pop
jno
or
mov
push
ret
std
xchg
add
fcom
int
call
mov
jle
cmpsb
movsl
xchg
mov
and
dec
ret
add
pop
xchg
jo
or
inc
cmp
adc
and
cmp
lret
fstl
push
mov
mov
or
notl
imul
data16
cltd
aad
jb
movsb
xor
js
movsb
arpl
adc
add
push
mov
loopne
decl
test
mov
inc
xor
and
cmc
pop
aam
js
fstpl
xchg
push
push
dec
pop
xor
jmp
dec
call
pop
stos
xchg
sti
in
xor
xor
xchg
mov
mov
push
leave
sbb
xchg
stc
loopne
mov
mov
sbb
call
mov
inc
xorl
leave
inc
dec
jp
add
jnp
pusha
testl
sbb
lock
mov
or
pop
lret
pop
jge
mov
rep
sbb
sub
adc
push
in
cltd
ljmp
mov
loop
fwait
xchg
je
push
adc
sti
sbb
xor
push
outsb
xchg
out
and
jl
or
insb
dec
sub
movsl
inc
jbe
mov
inc
mov
xchg
fcoml
lds
in
cmc
adc
xchg
cmp
enter
je
lahf
aam
sbb
cld
jp
push
cld
lock
xor
iret
out
cmc
or
pop
and
push
cmp
pop
push
imulb
out
pop
push
pop
push
test
mov
fs
rorb
pop
mov
pop
dec
mov
mov
shlb
outsb
into
push
xor
lcall
sub
mov
xchg
hlt
push
int
xchg
test
mov
ds
dec
aad
lret
imul
pop
push
rclb
mov
loop
sbb
jb
out
dec
pop
sub
cltd
test
push
pop
push
insl
pop
sbbb
sbb
adc
push
push
xor
nop
push
cmp
adc
fbld
lcall
xchg
push
outsl
add
sbb
stc
lea
lcall
repnz
cwtl
sbb
orb
out
xchg
jg
hlt
lret
iret
lods
jp
cmpsl
outsl
insl
aam
rcrl
and
jno
out
in
jp
adc
mov
stos
fwait
add
clc
xor
iret
pop
mov
mov
pop
adc
cmc
jg
inc
dec
sbb
inc
js
push
jl
add
mov
lock
adc
das
add
jge
jge
jno
sub
rorb
mov
mov
inc
in
jp
outsb
lret
adc
pop
mov
movsl
pmaddwd
lahf
lods
iret
mov
insl
mov
xchg
jg
push
fcoml
mov
sti
out
addb
add
adc
or
inc
fidivrl
cmp
outsb
push
xchg
es
jb
push
mov
push
fsubrl
adc
jp
and
or
popa
leave
push
sbb
mov
push
add
xchg
xchg
sbbb
lock
inc
or
cmp
jnp
ljmp
lods
pop
xchg
and
sub
and
lcall
cltd
mov
mov
push
es
imul
cmpsl
in
dec
add
repnz
cmpb
adc
inc
mov
jns
add
push
mov
push
push
das
js
xor
fsubrs
loop
or
cmp
inc
dec
scas
xchg
insl
pusha
adc
in
add
repnz
push
lcall
xor
mov
add
jecxz
jbe
mov
push
rcrl
adc
pop
jg
lcall
sbb
pop
lods
int3
out
pop
inc
jnp
xor
pop
dec
xchg
das
imulb
adc
repz
inc
xor
adc
dec
push
push
push
pop
sub
in
xchg
jno
repnz
mov
test
xchg
pop
iret
cmp
test
push
pop
cmp
iret
jne
jle
jl
mov
idivb
cltd
pop
les
or
mov
into
in
in
mov
cld
add
jno
dec
xchg
push
cmp
in
bound
stos
pop
push
or
aad
jnp
mov
push
cmp
cld
pop
scas
pop
mov
popa
mov
or
data16
xchg
dec
push
mov
push
je
in
cmpsb
push
arpl
and
adc
ror
cli
sbb
jp
lea
ficompl
fs
push
sbb
cli
in
jne
inc
sub
inc
mov
in
sbb
dec
aas
imulb
push
jle
cld
and
pop
mov
ds
dec
fmull
rclb
xchg
mov
movsl
jecxz
add
jo
fdiv
aas
jns
shrl
mov
notb
incb
clc
add
mov
jle
jmp
xchg
decl
add
test
jl
lret
mov
jp
mov
xchg
mov
cltd
lcall
fidivrl
inc
ljmp
adc
or
xchg
mov
sbb
mov
push
pop
fldcw
js
mov
into
fistpl
shl
lret
pop
insl
push
or
sbbb
icebp
int3
insb
pop
sbb
push
xor
xchg
push
pop
pop
fdivs
pop
scas
movsl
jno
xchg
into
push
mov
add
sti
mul
lcall
and
add
sbb
jp
imul
cmp
xchg
sbb
jg
mov
xchg
mov
test
jl
ja
mov
gs
xor
mov
pop
call
or
mov
xchg
mov
lret
aas
fistps
sub
push
xor
mov
lds
inc
test
pusha
sub
adc
dec
jb
aam
das
and
sub
mov
xchg
ljmp
mov
std
jb
mov
jb
popa
into
scas
cld
mov
iret
loopne
int
lahf
pop
jle
mov
xchg
sub
jge
sbb
mov
add
jl
jl
movsb
xchg
cmpsb
pusha
and
sbb
mov
sbb
dec
and
push
inc
scas
jno
pop
mov
cmp
sub
cmp
xor
inc
dec
jbe
jb
xchg
sbb
popf
cld
xchg
int3
hlt
mov
xchg
push
mov
pop
add
mov
push
push
pop
or
mov
sahf
mov
dec
pop
pop
cld
mov
ja
adc
outsb
int
pop
jle
and
cmp
adc
test
xchg
mov
fs
lret
adc
fwait
inc
and
dec
iret
addr16
sbb
fisubrl
fstpl
pop
push
cmp
adc
iret
out
sti
sti
and
repnz
stc
es
xor
jle
sbb
inc
fldt
mov
stos
xchg
iret
or
push
jbe
inc
push
movsl
idivb
mov
mov
jle
iret
push
dec
push
loope
or
sub
dec
add
add
mov
adc
mov
jle
xor
mov
cmp
pop
mov
cmp
arpl
leave
es
mov
lahf
mov
bound
adc
cmp
fadd
js
and
aas
les
jb,pn
cwtl
fisttpll
loope
jmp
mov
sbb
popa
jne
adc
mov
jmp
pusha
xchg
cmp
sub
xchg
shlb
adc
mov
insb
ljmp
xchg
lock
ss
repz
lods
push
inc
adcb
pushf
dec
pusha
rclb
addb
lock
test
ja
cld
adc
int
je
or
mov
ja
mov
mov
push
dec
mov
xchg
pop
xor
push
and
sbb
aad
pop
mul
xchg
jmp
cmp
xor
dec
js
repnz
sti
and
cmp
call
inc
push
fisubrl
xchg
add
xchg
mov
push
pop
jp
pop
sbb
outsl
push
pop
pop
pop
push
xlat
adc
jg
jne
cmp
xor
cmp
sub
nop
outsb
mov
mov
cwtl
dec
scas
clc
sbb
cld
mov
and
and
sub
push
sbb
xchg
addb
xor
and
je
mov
and
fwait
sbb
movsb
jbe
push
pop
sarb
or
add
and
sub
insl
sbb
add
test
adc
cmpb
test
jnp
pop
pop
adc
jo
pop
xchg
cltd
sahf
scas
scas
mov
lret
pop
pop
insb
leave
xchg
push
sbb
popf
arpl
mov
sub
adc
push
stos
adc
sub
orb
lods
pop
nop
mov
jge
adc
movsl
lock
xor
jb
inc
jmp
shll
fs
cs
mov
jmp
mov
adc
cmpsb
iret
ja
pop
push
in
ss
aas
xchg
addr16
sbb
out
mov
fwait
pop
push
outsl
jb
xlat
cmp
jnp
push
cs
fnstsw
or
test
xchg
mov
adc
pop
in
iret
lahf
pop
es
in
inc
add
int
call
iret
lcall
out
ss
je
xor
repnz
or
xchg
lock
lret
adc
adc
push
sbb
orl
mov
into
mov
push
push
pop
hlt
sarb
jno
lcall
ljmp
test
xor
or
pop
sbbl
pop
insb
mov
jo
xor
adc
mov
jbe
sub
cmpsl
out
loop
cmp
sbb
call
repnz
lahf
and
sbb
mov
jno
ror
pop
adc
pop
or
fwait
or
fstps
xchg
fstps
enter
cltd
sbb
or
jp
adc
mov
or
test
jns
cmp
push
cltd
lock
add
adc
int
push
jl
adc
fnstsw
inc
cmp
ljmp
fucomip
das
pop
outsb
test
mov
std
cwtl
pushf
lods
sub
movsl
push
enter
mov
sub
cmp
dec
cwtl
loope
mov
stc
cmpsl
fildl
scas
xor
fistps
test
and
fidivrl
jle
and
jge
xchg
sbb
and
mov
inc
and
dec
fwait
xchg
jle
and
pop
xchg
jle
and
jnp
nop
adc
adc
stc
fmuls
mov
cld
push
jno
pop
adc
inc
mov
test
push
inc
sbb
aas
iret
in
lahf
dec
test
repnz
mov
aam
pop
stos
sahf
clc
lock
rcrl
sub
push
adc
xchg
ficoms
xchg
leave
inc
fdivp
mov
adc
mov
mov
rcr
xor
mov
jecxz
fistpl
aas
push
movsl
mov
mov
sub
add
mov
fistpll
mov
mov
jle
jb
loopne
nop
xchg
pusha
fbld
xchg
int3
inc
inc
mov
addr16
xchg
jb
stos
rcll
mov
dec
mov
sbb
push
dec
lods
cltd
cwtl
stos
xchg
mov
fstpl
std
scas
and
pushf
mov
pushf
sbb
mov
sbb
cltd
fildl
int
xchg
xchg
mov
dec
pop
lret
cmp
loopne
jns
xchg
mov
das
xchg
mov
jmp
jne
cwtl
lcall
fisubs
inc
pop
insb
ret
mov
pop
jns
or
gs
mov
cmpsl
js
cmpsl
dec
rorl
mov
pop
out
or
inc
mov
leave
arpl
mov
rclb
test
and
bound
mov
incb
xchg
push
fidivs
cmp
mov
iret
aam
rcr
xchg
cmpsb
mov
out
or
and
dec
ss
mov
pop
mov
and
cmp
jb
cltd
mov
int
mov
mov
aam
mov
dec
out
loop
pop
mov
cwtl
xchg
dec
pop
shrl
or
clc
pop
out
adc
add
sbb
movsl
xlat
jge
push
cli
lgs
lret
xor
andb
add
mov
cli
outsl
cmp
js
leave
cmp
lret
mov
js
leave
sub
cld
lret
in
mov
dec
jp
mov
test
fmul
jo
outsb
pop
sti
lods
in
hlt
in
mul
xchg
jnp
and
nop
xor
mov
cmpsl
xchg
mov
dec
mov
adc
cmp
outsb
jmp
js
dec
mov
lret
int3
and
cmpsl
cmp
dec
ljmp
daa
aas
inc
in
fisttps
cmp
jnp
out
dec
js
test
mov
pushf
jb
test
sbb
pop
cmp
ljmp
sub
push
movsb
fbstp
das
ja
fwait
xchg
lgs
mov
nop
xchg
fnstcw
xchg
lahf
add
sub
fisubl
cwtl
dec
sbb
test
pop
and
push
fiadds
push
iret
mov
outsb
cltd
sbbb
repnz
push
hlt
lea
inc
int
xchg
and
mov
mov
cld
ret
jns
sbb
push
leave
cwtl
sbb
sahf
in
dec
sbb
dec
push
fs
xchg
xchg
iret
push
mov
sub
arpl
adc
adc
lret
cwtl
jecxz
in
je
lcall
in
xchg
jle
cmp
pop
sbb
sbb
sbb
inc
inc
mov
pusha
and
loopne
js
jge
cwtl
jp
push
in
fmull
pop
js
jl
push
into
fs
and
push
mov
adcb
fiaddl
fistps
rcrb
jb
test
mulb
std
pop
add
xchg
or
dec
or
sub
shll
mov
and
and
inc
dec
lods
icebp
sahf
cwtl
mov
pop
insb
mov
jbe
xchg
jo
push
dec
mov
pop
jb
cmc
mov
xor
push
mov
das
into
mov
int
push
mov
in
pop
add
jp
mov
fstl
xchg
icebp
divl
pop
adc
shll
pop
movntps
jne
popf
aam
dec
in
mov
lods
sub
ss
mov
adc
aam
iret
mov
jne
outsl
push
xchg
xor
test
jl
xlat
enter
fisttpl
sbb
stos
call
xor
jl
int
fisubs
xor
push
test
ljmp
cmp
insl
jb
push
inc
xor
leave
ljmp
jns
stos
jle
jbe
mov
mov
and
lcall
jmp
fwait
jle
push
mov
addr16
push
andb
mov
dec
js
mov
mov
mov
test
adc
shlb
popf
pop
cs
cmp
mov
jge
cmpsb
push
push
mov
add
das
scas
push
mov
lret
insl
cli
sub
daa
add
ds
pop
pop
pop
repnz
cmp
ret
mov
and
push
xchg
testb
stos
fistps
mov
mov
push
orl
lods
mov
adcb
pop
pcmpgtb
jl
fiaddl
mov
ret
add
cwtl
push
mov
mov
pop
push
and
mov
pushf
or
push
int3
sbb
iret
sbb
dec
cmp
cmp
sbb
xor
pop
mov
mov
mov
jne
popa
lods
dec
jo
cmp
ds
xchg
es
in
and
mov
push
push
pop
mov
fbld
int
push
pop
imul
lret
jl
mov
and
call
cwtl
iret
mov
add
push
insb
mov
jle
mov
cmp
popf
movsl
iret
shrl
adc
int
cli
dec
add
jle
jp
mov
xchg
std
js
pop
popf
or
xchg
adc
xchg
enter
cmp
iret
push
ljmp
jo
popa
fstpt
push
jp
lea
stos
xchg
int
pushf
sbb
push
jbe
cmp
xor
xchg
or
ja
push
pusha
sub
mov
add
dec
int3
xchg
cmp
mov
sub
cvttps2pi
aad
pop
loope
xchg
rcrb
mov
lahf
frstor
or
and
pop
fstl
or
movsb
mov
mov
or
bnd
in
fwait
lcall
mov
cmpsl
cmp
mov
adc
inc
repnz
lock
je
cmp
call
aaa
mov
mov
xchg
inc
lahf
in
int
outsl
icebp
mov
stos
adc
jno
sub
lret
into
scas
xor
lds
mov
dec
cmp
loopne
cs
adc
mov
sbb
fcompl
mov
add
xor
mov
push
mov
iret
pusha
push
in
sbb
sbb
cwtl
out
decb
push
push
sbb
mov
stos
enter
cwtl
inc
xchg
sub
xchg
test
sbb
mov
push
mov
bnd
and
xchg
xor
xor
cmpsb
jge
iret
gs
xchg
outsb
out
iret
mov
mov
clc
sub
scas
xchg
or
in
inc
push
js
outsb
mov
pop
adc
jne
jge
and
rcrl
sub
mov
add
les
sbb
and
fcompl
xchg
cmp
imul
fldt
push
icebp
xor
xchg
sarb
les
scas
add
repnz
mov
mov
daa
outsl
xor
push
lcall
int3
add
mov
int3
mov
mov
pushf
mov
xchg
fwait
sub
ljmp
mov
cmp
push
mov
jle
faddl
mov
fdivl
insb
jb
ds
test
dec
push
outsb
push
push
ljmp
mov
fs
rolb
leave
cwtl
dec
mov
push
sub
pop
mov
pop
frstor
test
leave
loop
jo
pop
mov
mov
adc
push
push
popf
lds
sarb
jecxz
cmpsb
lcall
mov
mov
lret
int
mov
repnz
leave
add
in
lret
add
inc
jae
add
sub
lock
xchg
mov
out
mov
pop
dec
cli
jg
cs
sbb
gs
lcall
or
cmpsb
scas
out
leave
les
repnz
cmp
jle
pop
outsl
cld
sub
cmc
loopne
pop
push
cmp
setp
sbb
sbb
bound
loopne
and
pop
movsl
mov
mov
or
or
inc
pop
js
mov
test
call
adc
ds
leave
jo
mov
adc
xchg
into
xor
adc
pusha
jg
outsb
mov
mov
jge
jne
pop
jp
lea
stos
xchg
xchg
pop
popf
mov
cmpsb
into
and
add
outsb
and
rorb
je
incb
or
inc
aam
inc
pop
inc
mov
jo
popf
xorb
jne
sbb
jle
lret
test
es
iret
mov
test
mov
cmpsl
jbe
shrb
mov
movsl
sbb
cwtl
jo
popf
cs
push
xchg
mov
leave
pop
daa
or
cmp
sbb
ds
popf
push
not
popf
cwtl
xor
clc
repnz
mov
aas
mov
xchg
mov
push
jmp
lcall
mov
cltd
es
dec
es
iret
cmpsb
imul
stos
or
mov
pop
jl
inc
or
mov
and
repz
mov
into
pop
cmp
dec
push
outsb
int
dec
hlt
outsl
incb
push
push
xchg
push
push
sbb
push
pushf
jo
loopne
push
mov
int3
loope
ficomps
clc
pop
test
movsb
fcoms
cmp
dec
jle
into
push
pop
push
lret
jg
push
mov
movsl
je
jl
pop
jbe
cmpsb
dec
sbb
jle
cmp
mov
iret
jbe
sbb
rclb
dec
push
movsl
inc
sarl
xchg
pop
cmova
add
dec
mov
jg
mov
cmpsl
fadds
xchg
sub
xchg
mov
and
cld
lea
loopne
mov
jo
xchg
push
ja
cs
mov
dec
leave
xor
pop
lds
test
sahf
mov
mov
popf
lods
xchg
push
xchg
mov
int
cli
in
inc
scas
jbe
jmp
sub
leave
mov
mov
fldenv
cmp
pmuludq
data16
in
in
call
inc
lahf
inc
mul
int
test
mov
rorl
cld
mov
addr16
push
sub
push
dec
push
pop
cmp
and
lods
jg
loop
arpl
lret
das
f2xm1
inc
aam
loopne
jle
cmpl
xchg
mov
and
xchg
dec
and
lea
cld
mov
xchg
xchg
test
inc
dec
lcall
mov
dec
add
sub
mov
jle
add
jns
and
add
out
popf
xlat
data16
push
shll
pop
jne
or
push
and
push
xchg
cltd
push
push
sub
mov
ret
lock
sbb
out
inc
test
out
pop
imul
sbb
jb
sbb
incb
scas
loop
lidtl
jno
repnz
scas
sbb
xor
mov
daa
loop
cmpsb
iret
std
cli
adc
jmp
movsb
je
pusha
jecxz
enter
mov
pop
das
adc
push
or
push
test
push
xor
sahf
and
xchg
fs
xchg
or
insl
jns
loope
popl
je
adc
mov
arpl
xchg
xlat
jge
cmp
xchg
test
jg
pop
cltd
test
insb
mov
push
andb
loope
sbb
sbbb
js
dec
mulb
outsb
adc
sbb
jp
mov
and
pop
out
cs
mov
push
add
pop
cmpsb
jbe
adc
mov
mov
pop
iret
cli
fnstsw
aam
mov
sbb
ret
or
enter
sub
lods
in
push
repnz
add
pop
mov
cmc
push
pop
pushf
push
lea
into
mov
inc
rorb
mov
sete
or
in
flds
rcrl
mov
cwtl
lea
movsl
dec
sub
xchg
push
mov
nop
xchg
je
jns
lahf
jg
pop
es
pop
mov
push
movhlps
jmp
aaa
popa
push
cli
xchg
fs
leave
pop
fldcw
int
call
mov
mov
adc
jb
sbb
sqrtps
enter
xchg
and
cmc
xlat
pop
or
and
mov
sbb
imul
int
push
xor
fucomp
pushl
sahf
dec
push
cmp
pop
js
cmp
push
sbb
dec
xchg
fsincos
or
jnp
test
xor
aaa
lret
movsl
ret
push
add
mov
sbb
in
adc
int
clc
adc
cmc
int
jp
sbb
sub
test
leave
dec
mov
add
lret
cmpl
mov
sub
mov
jb
mov
mov
or
std
dec
das
int
fistpll
fwait
cltd
mov
imul
or
xchg
lea
mov
pop
jge
rorb
ds
push
fisttpl
jne
std
xlat
iret
adc
xor
fs
aas
mov
mov
mov
cmc
pop
mov
bound
mov
mov
push
cmp
mov
cmp
cmp
test
sub
push
xlat
xchg
cmp
cmp
and
adc
fnstsw
push
pop
in
jmp
adc
dec
cmpsb
mov
loopne
or
xor
push
jle
pushf
jb
pop
sbb
jbe
out
xchg
jmp
in
inc
outsb
mov
test
push
cltd
pop
js
jns
das
cs
dec
or
cmpsb
pop
outsb
mov
mov
cmp
stos
dec
and
push
cltd
mov
sti
mov
loop
xchg
shlb
mov
lret
stos
out
xchg
imul
in
inc
bound
lret
jbe
lahf
jns
jle
fbld
jle
pop
jbe
xchg
mov
pop
add
sbb
mov
out
xchg
inc
push
leave
test
and
pushf
sahf
movsl
test
dec
aas
lock
adc
mov
outsb
fisubrl
das
out
xchg
inc
shll
js
or
sub
jle
mov
icebp
add
lcall
lea
lds
lcall
iret
pop
out
std
mov
push
xor
jp
xchg
and
lcall
dec
mov
jp
movsb
iret
repnz
pop
in
inc
mov
mov
fwait
js
lock
loop
sub
dec
aas
inc
pop
stos
mov
das
outsb
jo
test
xor
jmp
sbb
test
fildl
jbe
outsb
pop
push
pop
jl
cmp
popw
push
inc
or
cmp
pop
and
iret
sarl
push
sub
pop
imul
add
outsb
outsb
test
mull
jg
adc
lcall
xchg
test
sub
test
mov
lock
mov
hlt
jl
jp
mov
ja
push
test
aas
jbe
xchg
jo
enter
jg
and
mov
repnz
out
into
jns
mov
mov
cli
stos
xchg
push
shll
sbb
pop
sbb
test
data16
adc
sbb
pop
cltd
idiv
xchg
clc
pop
inc
orl
lock
imul
mov
loopne
sbb
ds
fmull
xor
jae
mov
dec
inc
sbb
mov
mov
adc
push
scas
mov
outsl
jle
dec
fdiv
lea
cltd
push
mov
jo
ret
mov
sbb
dec
jl
fistps
roll
mov
add
cmp
cmp
out
or
or
xchg
sbbl
inc
mov
dec
fwait
mov
iret
jns
pop
fucomi
jae
cmp
aas
mov
pushf
lea
ds
scas
dec
push
lods
or
inc
jb
fs
aad
add
inc
pop
cli
mov
pop
add
jb
scas
lcall
dec
pop
mov
popa
clc
fidivl
andl
icebp
mov
cmpsb
test
and
or
in
sti
scas
jnp
lock
daa
loope
lods
xchg
and
ljmp
scas
or
stos
test
xchg
mov
mov
cmpsb
leave
add
adc
jo
cmp
lods
lods
and
pusha
lock
stos
roll
add
pop
mov
mov
jp
neg
out
mov
or
cli
leave
jb
out
jb
sub
jle
push
pop
sub
pop
mov
jns
jae
inc
sub
cmpsb
popf
loopne
loop
mov
xor
jnp
mov
and
sub
js
lds
stos
or
sub
pushf
cmp
push
jb
sub
jmp
orl
mov
aaa
mov
mov
mov
mov
fnstsw
sbb
sbb
push
popf
mov
mov
add
das
push
loop
sbb
cmpb
leave
add
rorb
jecxz
mov
cmpsb
int
rclb
or
jg
jbe
es
aam
sbb
outsb
scas
out
sbbl
popf
aas
cwtl
mov
loopne
imul
leave
mov
stos
outsb
push
xor
mov
adcb
std
sub
pop
divl
cmpsb
jo
push
fisttpll
lea
leave
jo
mov
gs
int3
mov
xchg
mov
lret
sbb
pop
mov
dec
je
pop
add
std
int
mov
and
mov
sub
push
push
xchg
jge
push
aas
xchg
cmc
push
int3
jbe
jg
popa
mov
inc
out
mov
sbb
mov
scas
pushf
xchg
and
and
push
jno
repz
test
mov
add
lock
iret
cmpsl
clc
mov
lret
sbb
test
and
jo
sbb
mov
shlb
jl
popl
jg
cmp
pop
repnz
or
mov
jle
insb
in
sti
and
mov
jl
sbb
cmp
cmovg
mov
insb
out
push
div
cwtl
push
std
int
jmp
mov
mov
adc
nop
rcl
out
mov
mov
mov
dec
cmp
push
pop
je
jo
mov
iret
jb
outsl
cmp
or
loop
mov
dec
scas
js
sub
mov
adc
mov
jo
fwait
push
jns
lods
xchg
test
test
in
roll
mov
mov
rolb
adc
je
nop
push
cltd
lret
sahf
dec
mov
xlat
sbbl
lahf
bound
sub
xchg
scas
test
dec
mov
pop
jl
xchg
rorb
out
pop
add
fbld
daa
xchg
sub
cmp
lcall
fst
fs
jo
into
sub
jl
mov
xor
adc
and
push
fldl2t
cmp
das
push
aas
jge
pop
pop
adc
adc
adcl
in
adc
sti
push
mov
pop
adc
sti
push
cmpsb
in
test
mov
pop
xor
mov
adc
incl
xchg
jg
std
push
bnd
adcb
xchg
mov
jns
jg
fldl
mov
in
jns
ds
mov
sbb
xchg
adcl
insb
das
jl
sbb
fists
xchg
rcll
cmp
inc
rol
jg
fadd
mov
xor
push
aaa
insb
ret
daa
rorl
mov
ja
into
out
pop
andb
push
lea
jp
push
out
jge
test
mov
adc
sti
push
jbe
pop
adc
sti
push
xchg
pop
adc
sti
push
xchg
in
addr16
outsl
mov
daa
dec
jg
das
pop
xor
pop
jle
pop
jbe
daa
jmp
fmull
outsb
cltd
das
inc
movsb
pushf
mov
lret
adc
out
ret
lahf
sysexit
jge
mov
int
stos
push
sbb
inc
repnz
stc
test
insb
mov
sbb
xchg
xchg
outsl
jne
addl
jp
bound
into
sbb
pop
pusha
and
jl
aaa
incb
pop
mov
and
std
lock
mov
into
test
jno
lods
inc
outsb
rcr
fistpl
fsqrt
inc
imull
cmc
test
stc
pop
cs
push
rclb
sbb
mov
jo
scas
mov
sbb
leave
mov
cmp
jno
int
add
or
push
mov
mov
adc
ss
subb
fisubrs
xlat
cs
cld
das
inc
ss
fisttps
push
ljmp
pop
mov
iret
dec
lods
mov
aam
cmpsl
cmpsb
adc
xchg
mov
andb
jno
push
lods
or
ds
movsb
loopne
jne
je
push
jp
push
nop
dec
daa
pop
xchg
push
xchg
and
push
shl
jp
leave
std
scas
adc
and
sbb
lcall
mov
fdivr
mov
pop
mov
lock
cld
out
das
cmc
pushf
inc
jo
mov
mov
pop
or
jl
mov
pop
in
inc
add
mov
jae
dec
mov
xchg
push
clc
push
push
mov
inc
xchg
aad
xor
cli
push
dec
out
pop
das
xchg
adc
jno
bsr
pop
imul
and
jge
out
pop
mov
mov
mov
mov
push
mov
lret
notl
mov
sbb
ljmp
cmpb
fisubrl
adc
in
push
push
test
mov
rcrb
or
out
mov
xchg
xchg
outsb
lods
mov
call
xchg
sbb
cmp
test
dec
pop
lcall
add
cmp
fisubl
push
insb
or
mov
fcoms
hlt
aam
lcall
loop
ljmp
sbb
movsl
and
leave
cs
loop
fdivrs
mov
inc
xchg
xchg
shrb
iret
pop
cmpsb
xchg
push
pop
or
std
add
iret
nop
popa
jns
adc
push
xchg
clc
jnp
ret
xchg
jp
andb
and
jno
mov
inc
push
inc
pop
xor
xchg
xor
dec
cld
mov
dec
adcb
cmp
adc
xor
testb
jp
pop
fs
lea
repnz
mov
jg
mov
push
add
loop
movsb
aad
add
inc
xchg
mov
lea
push
jne
sub
jns
push
int
dec
sbb
gs
les
push
nop
cmp
sub
jbe
ljmp
call
xchg
fnstcw
daa
sbb
mov
lcall
iret
and
lea
jle,pt
imull
push
in
ss
iret
push
or
or
and
mov
iret
lods
aad
xor
mov
popf
dec
jle
or
popf
jbe
push
and
pop
fs
xrelease
xor
inc
call
inc
test
sbb
in
push
cli
cwtl
mov
out
cs
sub
int
std
jb
mov
push
inc
inc
cld
int
test
test
pop
test
addb
pop
iret
adc
clc
push
sti
mov
scas
xor
xor
add
hlt
pop
ja
test
pop
cmp
inc
jp
cmpsl
dec
pop
xchg
mov
pusha
test
push
ds
push
mov
fdivs
dec
sub
sub
out
leave
sbbb
xchg
add
adc
leave
fwait
jb
scas
mov
dec
jo
out
dec
sbb
pop
mov
pop
lcall
cs
out
gs
adc
cli
pop
mov
ja
fimuls
fmul
test
push
jl
lcall
popa
jns
mov
lret
fsubl
out
data16
xor
fisubs
sub
inc
ss
lahf
ss
sbb
mov
mov
daa
stc
icebp
scas
xor
pop
loopne
dec
bound
movsl
outsb
test
cmpb
iret
in
test
add
adc
xorl
test
lcall
cmpl
jne
mov
sub
jp
inc
out
ret
add
mov
mov
push
push
nop
dec
test
add
mov
js
inc
xor
repz
movsl
mov
into
push
pushf
mov
pop
cmpsl
pop
sti
lret
iret
movsb
je
cli
addr16
cld
repnz
jg
mov
fsubp
xor
push
cmp
pushf
inc
sbb
lahf
movl
cwtl
adc
insb
js
adc
sub
addb
pushl
lret
jb
jg
test
dec
mov
push
leave
sub
ds
testl
mov
xchg
test
xchg
mov
pop
idiv
icebp
xchg
icebp
cmpsl
pop
dec
cwtl
mov
test
call
out
adc
pop
pop
mov
enter
leave
aaa
rorb
incb
xchg
mov
sub
stos
inc
sti
ret
rol
mov
rorb
or
int3
or
jb
pushf
push
mov
dec
xchg
jae
or
loop
pop
int
sbb
cmp
pushf
test
mov
hlt
ficoms
shlb
inc
xchg
sbb
sbb
xor
or
lret
mov
scas
sub
mov
sbb
jae
dec
sahf
pop
mov
leave
test
lcall
push
mov
popf
cmp
mov
filds
inc
addr16
or
pop
sub
xor
clc
xchg
push
call
add
imul
jp
fcoms
cli
mov
mov
std
arpl
fstps
cmpl
sbb
push
rorl
loop
in
jecxz
mov
jg
xor
mov
gs
jmp
loop
or
mov
and
pushf
or
ret
mov
pop
mov
aas
push
cwtl
xchg
lods
mov
jne
cmp
push
or
push
outsb
aaa
rolb
xchg
sbb
xchg
adc
add
outsl
and
cwtl
stos
std
dec
movsl
mov
loope
fildll
aam
jb
subb
or
call
pop
fsubrl
push
mov
mov
popl
sub
adc
lahf
mov
mov
lock
leave
mov
cmp
push
orl
jnp
lock
xor
subps
ror
push
xchg
cmp
mov
movhps
lds
aas
mov
js
stos
int3
mov
aam
pop
pop
test
xor
in
xor
sti
or
sbb
push
xchg
sbb
clc
cld
mov
cmp
out
decb
xor
cltd
push
into
jmp
pop
inc
mov
mov
dec
pop
imul
xchg
mov
fidivrs
clc
cmp
mov
jbe
sub
xchg
or
adc
je
xchg
dec
nopl
cld
lret
push
mov
das
test
sbb
and
mov
pop
inc
mov
and
inc
mov
ficompl
jns
scas
push
pop
outsb
lea
pop
xor
mov
sub
pop
cmp
mov
ss
or
inc
mov
pop
fistps
adc
jle
scas
cltd
cld
xchg
xor
pop
mov
ds
pop
loop
fwait
adc
jl
adc
mov
lret
jns
inc
lea
inc
je
push
xchg
mov
pop
add
push
leave
imul
adc
fs
adc
xor
cli
xor
fcom
lea
sbb
movsl
mov
out
adc
xchg
ds
cmc
sahf
cltd
inc
ljmp
mov
jbe
mov
xchg
jb
test
mov
sti
adc
mov
dec
repnz
pop
cmc
gs
mov
stos
push
mov
sahf
dec
add
adc
cltd
push
scas
fbstp
adc
jle
shll
push
ja
andb
test
xchg
lahf
into
or
or
sub
mov
push
leave
pop
sub
in
pop
lahf
jno
arpl
push
loopne
arpl
push
ds
adc
add
ja
nop
mov
xchg
scas
xchg
rcr
imul
mov
pop
rcr
inc
bound
xchg
jnp
les
dec
cld
mov
jo
sbb
sahf
sub
cmpsb
cltd
sarl
mov
mov
push
push
pop
mov
xor
and
sbb
adc
inc
cwtl
in
nop
scas
orl
lods
xchg
dec
xchg
out
out
das
rcrb
xchg
in
adc
pop
jo,pn
fcmovu
lods
xchg
push
into
scas
outsl
mov
pushf
fisttpll
jg
push
fisubs
sbb
addr16
lods
add
dec
lea
lods
bound
ret
stos
in
popf
jno
pop
in
test
add
mov
ds
pavgb
pcmpgtd
push
les
popa
lahf
or
add
mov
mov
mov
nop
jg
arpl
push
mov
add
aas
and
aaa
cmpsl
push
hlt
pop
data16
xchg
xor
inc
and
sti
push
aam
ret
push
iret
cltd
jmp
repz
sbb
mov
scas
int
inc
stc
lret
jb,pn
addb
pop
xor
ret
or
dec
sbb
and
pop
cltd
idiv
adc
pushf
cmc
imul
insb
dec
sub
in
cld
push
mov
xchg
adc
jp
or
pop
add
sub
lret
push
mov
les
pop
mov
cwtl
out
xchg
jg
test
or
test
cli
insl
jmp
lock
clc
gs
sbb
mov
and
rcrl
lock
pop
sbbb
fs
inc
lock
cwtl
lcall
fisttpll
mov
push
test
lock
fldl
mov
clc
or
xchg
repnz
mov
addb
stc
ret
jns
leave
test
or
inc
xor
add
mov
or
pop
mov
in
sbb
popf
mov
out
mov
mov
push
in
mov
call
mov
inc
sub
push
data16
je
pop
inc
stc
cmc
out
loop
shrl
iret
sub
jle
clc
sbb
cs
aad
fs
push
out
mov
cltd
inc
cltd
add
cmpsb
sbb
pop
ret
lcall
mov
dec
fstpt
sub
push
in
sub
pop
andb
repz
mov
xchg
insl
stos
lods
push
inc
jg
lcall
mov
pop
loopne
cs
push
adc
add
jns
dec
sbb
roll
jp
mov
mov
or
push
pop
addl
jb
push
dec
cmpsb
jb
cs
iret
nop
pop
out
push
cmpsl
mov
cmpsb
fildll
and
xchg
push
mov
or
dec
adc
lea
jp
mov
push
imul
xchg
sbb
cld
rolb
imul
movsl
cld
pop
pop
test
pop
jge
push
xor
push
and
leave
dec
pop
push
test
mov
mov
jg
and
ret
mov
lret
or
lea
push
bound
sub
push
cmp
icebp
pop
sbb
and
out
push
fs
dec
shl
sarl
push
pushf
cltd
push
pop
js
lock
sub
sbb
xchg
aad
lret
or
lock
pop
in
ret
cmp
mov
inc
xlat
sti
test
cmpsb
jecxz
and
and
xor
and
fcomps
cmpsl
inc
and
bound
iret
and
nop
js
lret
xchg
mov
xor
and
push
sub
push
fwait
xchg
clc
jl
aaa
mov
xchg
adc
pop
inc
clc
xchg
dec
or
xchg
jmp
movsb
lret
stos
sbb
enter
adc
jb
mov
cmp
dec
mov
ds
or
roll
scas
push
out
leave
jle
cmpsb
cli
xchg
setbe
xchg
xchg
xchg
push
call
outsb
iret
subl
addr16
xchg
mov
mov
gs
iret
enter
mov
fiaddl
mov
lcall
sub
mov
inc
mov
mov
adc
add
xor
jbe
xor
mov
lret
sub
mov
xlat
scas
mov
push
das
pop
fisubrl
mov
dec
in
sub
call
and
pop
push
std
decl
mov
cld
xor
test
push
cs
sbb
dec
int
sbb
inc
mov
dec
adc
repz
pushf
xchg
adc
cmpsb
xchg
out
pop
sbbb
addb
adc
mov
or
and
cli
mov
lea
out
mov
pop
orb
or
mov
jbe
jge
sbb
out
mov
jle
iret
dec
stc
mov
mov
pmuludq
xchg
cltd
adc
scas
out
fwait
insl
loop
cmp
notl
rcll
loop
aas
cmp
dec
aas
popa
or
add
dec
xlat
sbb
int
xor
das
and
mov
fdivrl
inc
and
jl
popf
sbb
sub
jo
lods
testl
in
pop
xor
dec
fiaddl
dec
cmp
nop
xchg
lock
mov
insl
lock
ficoms
adc
xlat
push
movsl
or
inc
jmp
mov
xchg
ss
sub
pop
ds
sub
adc
xchg
lea
mov
iret
push
out
or
sbb
or
clc
lock
test
xor
cwtl
adc
jmp
rclb
lahf
xlat
lcall
push
mov
mov
sbb
repz
int3
sbb
out
push
jl
das
call
je
push
push
mov
sbb
outsb
mov
stc
and
push
loopne
lock
push
push
mov
fwait
out
push
fistps
pop
mull
push
mov
fcoml
jb
cld
movsb
jmp
push
push
mov
inc
je
insb
pop
jle
jbe
lahf
adc
imul
fucomip
adc
shl
mov
lahf
xor
mov
scas
xor
ss
test
mov
sbb
add
xor
or
inc
fst
pusha
jbe
mov
cwtl
dec
xchg
sub
pop
jmp
pushf
insb
in
xchg
mov
cmp
notb
xor
and
jl
sbb
push
leave
push
xor
dec
lods
test
mov
test
cld
or
and
rcrl
and
pop
jne
mov
out
xchg
les
push
push
mov
and
or
sub
dec
add
ds
cwtl
sbb
inc
jge
xchg
pop
and
add
pop
hlt
adc
outsb
clc
test
adc
dec
cmp
ds
mov
lock
sbb
lock
xorb
out
in
push
cltd
mov
and
lcall
dec
popa
cli
lret
jbe
iret
les
ret
push
xchg
xor
mov
lock
out
decb
arpl
jbe
aam
pop
and
dec
mov
arpl
push
sbb
orb
cwtl
testb
and
int
cmp
cwtl
or
inc
out
xchg
test
or
mov
rclb
xchg
or
out
jo
cltd
push
enter
dec
adc
and
jne
push
jnp
xchg
mov
sbb
stos
mov
lcall
jle
lea
push
sub
es
push
jae
inc
adc
push
jp
push
movb
pushf
add
and
mov
dec
or
adc
push
sub
dec
insb
xor
lcall
fcoms
push
cmp
fs
adc
in
pop
push
frstor
fstpl
mov
xchg
aas
mov
call
movsb
loopne
int
cmp
mov
pop
js
mov
mov
xchg
adc
sub
jg
xchg
push
pushf
mov
or
push
lods
loop
pop
adc
push
adc
cwtl
clc
add
dec
adcb
cmp
inc
es
xchg
push
sbb
pop
fcompl
dec
xchg
jp
icebp
sbb
jno
fidivrs
into
sub
dec
sbb
adc
clc
lds
jne
dec
push
shr
sbb
dec
adc
insl
sbb
cwtl
xor
or
aad
cwtl
sti
shrb
add
cli
xchg
and
or
xor
lock
or
ja
pop
push
pop
es
fimuls
les
pop
mov
pop
jp
inc
mov
imul
or
pop
ds
fistpll
in
push
cmp
leave
jg
push
mov
addb
lahf
cs
dec
sbb
iret
mov
push
data16
je
scas
push
popf
mov
push
dec
adc
loopne
push
add
aaa
or
mov
sti
mov
rep
subl
mov
sarb
mov
xchg
xchg
aam
popl
add
dec
fsubs
and
cli
mov
mov
inc
out
pop
and
sarb
shrl
mov
sub
out
push
lock
pushf
je
add
es
orb
xchg
popf
nop
lcall
mov
pop
and
movsl
jns
pop
repz
daa
inc
pop
inc
insb
iret
aam
or
out
dec
movsb
xor
mov
outsl
fldl
je
or
jbe
sub
push
adc
out
and
repnz
xor
lods
repnz
pop
jns
icebp
iret
std
add
mov
push
xchg
pop
or
int
and
clc
cltd
aaa
sub
cmp
mov
sbb
inc
jle
xlat
sti
lds
xchg
mov
cmovb
imul
clc
mov
cmpsb
pushf
adc
adc
enter
scas
cmp
cmc
pop
scas
mov
lea
popf
mov
pop
cmp
int
push
xor
mov
gs
push
nop
loopne
xlat
call
mov
mov
inc
stos
scas
lret
sub
cmpsb
cmpsl
push
add
std
xor
mov
pop
fucomip
repz
jo
cmpsb
jg
mov
iret
in
cmp
push
xor
cmp
dec
addb
push
mov
dec
add
movsl
or
int3
movsl
sub
or
adc
adc
and
xor
xor
sbb
lods
loopne
sbb
jl
and
xchg
loop
das
pop
xchg
add
inc
icebp
aas
dec
push
sub
jge
push
mov
jle
mov
xor
loop
lds
jnp
pop
std
cmp
test
sub
dec
mov
xchg
push
and
adc
ja
sbb
jle
test
subb
int
les
arpl
xor
mov
cmpsb
jns
daa
mov
mov
mov
repz
mov
sti
int
jg
mov
sbb
enter
add
mov
lds
push
cwtl
push
mov
cmpsb
push
pop
adc
dec
pop
lcall
mov
popa
movsl
inc
dec
sbb
xor
mov
mov
dec
test
lock
sbb
icebp
in
jp
pop
jp
jbe
jno
inc
call
cmp
pop
iret
hlt
inc
sbb
jge
mov
cmc
lock
mov
sub
push
jg
aaa
pop
push
or
sub
xchg
data16
loope
addr16
mov
cmc
aam
imul
lods
xchg
leave
loopne
es
dec
cli
push
add
mov
pop
fidivl
movsb
jae
or
subl
fimull
popa
cli
and
mov
int
push
inc
popa
lahf
jb
fildl
fildll
xchg
sar
and
mov
sbb
fdivrl
out
fidivrl
cwtl
jle
iretw
inc
push
inc
dec
push
xchg
sbb
or
scas
jo
mov
scas
xchg
mov
cli
xchg
sahf
mov
jbe
jecxz
jle
in
mov
xchg
out
xor
adc
mov
push
push
cmpsb
sub
dec
call
push
mov
mov
mov
iret
xor
inc
or
fwait
lret
jl
mov
rolb
push
push
call
sbb
outsb
into
out
dec
sub
xchg
clc
and
pusha
push
mov
out
xchg
sub
xor
mov
fmul
incb
adc
or
adc
jge
test
pop
fidivl
ret
or
mov
sti
jp
pop
push
es
and
mov
dec
insb
sub
mov
push
lcall
stos
ficoml
lcall
clc
dec
pop
adc
push
or
fidivs
jecxz
imul
push
pop
test
xlat
rcr
into
jle
sub
inc
outsb
leave
cmp
mov
movsl
push
aas
sbb
mov
pusha
jp
mov
movsb
incb
push
pop
std
jns
or
lods
aad
mov
lret
pop
inc
cmpsl
mov
punpckhbw
jo
pusha
xor
jb
pop
mov
call
adc
mov
inc
add
movsb
cmc
arpl
add
xchg
cmpsb
iret
adc
ret
std
fwait
rcrb
test
ret
aam
mov
xor
push
jecxz
in
xchg
mov
lahf
shl
xchg
dec
cwtl
dec
jecxz
jbe
push
cmp
xchg
push
dec
sub
test
push
cmp
idivl
aaa
in
fimuls
push
pop
xchg
or
pop
notb
lcall
adc
xchg
lods
mov
jl
lea
push
mov
shlb
mov
dec
inc
pop
inc
xchg
lret
jno
testl
cltd
pop
jle
mov
dec
pop
dec
dec
xor
mov
mov
mov
xor
and
repz
arpl
pop
mov
jb
mov
leave
nop
mov
cmc
mov
and
into
adc
pop
push
jmp
lods
dec
cmp
add
sbb
pusha
jecxz
test
test
ret
fists
xchg
cld
movsl
rorb
cmp
pusha
ljmp
iret
cltd
rcrb
movsl
pop
sbb
jb
mov
dec
in
xor
mov
push
lcall
push
pushf
mov
iret
push
mov
gs
cltd
sbb
pop
xchg
stos
leave
pushf
mov
iret
in
sahf
push
mov
xchg
leave
ljmp
mov
dec
push
mov
mov
pop
add
leave
inc
and
pop
adcl
lods
or
mov
fcmove
and
mov
in
jb
pushf
cmp
sub
mov
lds
xlat
mov
inc
stos
cmp
leave
inc
addr16
mov
mov
add
mull
in
xor
push
pushw
jmp
cmpl
dec
out
jp
mov
or
sub
movsl
insb
ret
mov
aas
lock
inc
push
jl
fisubs
xchg
leave
jmp
xchg
in
pop
pop
adc
pusha
addb
jbe
push
xor
into
inc
cmc
cld
xor
mov
xchg
push
cmp
lea
jae
xchg
jg
call
pop
cmp
jp
rcrb
sbbb
ja
movsl
xchg
push
ja
adc
add
push
xchg
push
out
mov
mov
and
push
mov
leave
jno
dec
mov
call
and
insb
and
push
std
repz
sbb
sub
popf
push
add
inc
pop
xchg
leave
sbb
lods
mov
leave
pop
xchg
xchg
lahf
call
lods
sbb
and
jle
jmp
loop
mov
xchg
lea
and
and
int3
xchg
leave
cmp
dec
int
cwtl
sub
pop
leave
aad
fsubr
jg
mov
xchg
jle
ds
push
pop
jl
mov
xchg
or
decl
pop
jle
aam
insl
mov
xor
push
xchg
inc
sbb
std
cltd
or
adc
aas
cmp
fsubrl
sbb
lea
ljmp
xchg
inc
mov
cltd
adc
into
mov
jo
gs
push
cwtl
cmovs
cli
in
dec
iret
mov
sub
daa
in
das
jg
jb
sbb
dec
rcrl
daa
fistpll
out
fs
negb
sbb
mov
and
insb
outsb
adc
aam
jg
mov
scas
cwtl
addr16
mov
xor
stos
pop
mov
dec
std
mov
cld
mov
in
sbb
mov
rclb
scas
call
inc
ret
iret
out
jns
pop
xchg
insl
push
pop
xor
add
add
daa
mov
dec
lcall
sub
pusha
xchg
lret
push
decl
inc
fs
cmpsb
cld
stos
setno
adc
clc
js
dec
cmp
mov
add
mov
ja
movsb
mov
mov
jae
addb
sub
js
mov
xor
lret
dec
out
xchg
adc
pop
repz
inc
dec
jle
lret
mov
jno
mov
ret
int3
push
sbb
call
imul
mov
out
test
in
lds
out
aam
mov
pop
xchg
out
sub
xor
out
mov
outsb
add
das
test
and
iret
sbb
add
lcall
lcall
xor
or
leave
or
or
xchg
push
jmp
mov
mov
pop
adc
mov
push
cmpsb
mov
xchg
iret
ror
shll
sahf
shlb
mov
loope
sbb
insb
dec
or
mov
cmpsl
mov
add
xlat
sti
inc
outsl
rol
loop
mov
insl
mov
stc
xchg
mov
outsl
js
call
inc
push
fmul
fisttpll
cltd
pop
ficomps
scas
mov
cltd
cs
and
mov
add
mov
and
mov
push
clc
movsl
fldl
xchg
and
pop
loop
push
jb
xlat
inc
xor
test
insl
test
popf
clc
mov
iret
test
in
loopne
cwtl
into
daa
mov
inc
pop
xchg
cltd
mov
push
js
ror
hlt
sbb
in
sub
jle
add
sbb
xor
cs
hlt
xchg
lret
out
movsb
xchg
not
sub
rolb
xchg
xchg
xlat
or
imul
xor
push
iret
test
fdivl
mov
sar
fcompl
cld
xchg
loope
mov
lock
test
push
xchg
and
xor
adc
rorb
adc
dec
or
test
out
sbb
in
mov
xor
ljmp
scas
mov
lret
sbb
mov
sbb
pop
jne
cltd
mov
inc
mov
mov
lahf
dec
or
xor
sub
xor
xchg
leave
ss
out
inc
push
add
xchg
add
icebp
fstpt
fstpt
sub
or
mov
into
xchg
jp
mov
imul
cmpsb
arpl
outsl
inc
pop
cwtl
add
mov
mov
stos
cli
js
rorb
mov
adc
in
mov
add
push
fistl
sbb
jbe
lahf
movsl
mov
xchg
call
push
dec
push
push
insb
pop
jbe
clc
adc
mov
stos
mov
sbb
pop
repz
test
test
jo
xlat
xchg
rorb
shlb
mov
xchg
lahf
push
movsl
rcrl
jb
mov
mov
sub
popf
or
pop
pop
test
xor
loope
lea
sbbb
mov
push
cwtl
sbb
in
int
cmp
mov
jo
test
and
jae
mov
bound
cwtl
arpl
xlat
scas
sub
mov
iret
fidivl
mov
pop
adc
movsl
dec
fwait
adc
cmpsl
pop
lret
jbe
push
mov
xchg
pop
nop
ret
pop
mov
leave
push
sub
gs
add
pop
imul
call
add
dec
fcompl
jg
pop
jle
adc
outsb
imul
push
push
xlat
lcall
decb
dec
xlat
mov
setge
mov
inc
sbb
sbb
lock
leave
sti
scas
iret
mov
or
pop
mov
lahf
sub
arpl
lock
bound
xchg
xor
xchg
test
pop
mov
sbb
jbe
mov
cwtl
out
dec
push
jae
cmp
sbb
fimuls
cmpsl
les
push
mov
mov
adc
dec
out
jp
dec
insl
out
out
fwait
jmp
movb
dec
push
scas
add
jae
xchg
add
negl
fwait
sub
fcomps
aaa
idivl
cld
call
ljmp
fstpl
mov
mov
cwtl
pop
jns
push
jb
push
leave
adc
cmpb
mov
sarb
xor
icebp
jb
jg
mov
lea
mov
int
aaa
cmp
mov
bound
mov
cmp
xchg
and
imull
pop
xchg
cltd
push
lcall
pop
call
jp
movsl
scas
mov
mov
push
mov
sbb
and
push
inc
push
xchg
and
mov
js
movsb
pop
adc
aam
jg
subl
mov
xchg
add
mov
bnd
repz
jnp
push
out
mov
adc
pop
push
pop
ret
pop
ds
dec
or
push
in
out
js
int
out
push
jb
loop
leave
jl
sub
sarb
push
and
sbb
fdivrl
ret
dec
inc
dec
jno
loop
fdivl
jo
jnp
int
jns
xchg
sub
mov
jno
dec
inc
inc
xchg
push
mov
add
ljmp
mov
in
lea
jmp
mov
inc
push
xor
rcr
push
jecxz
out
lcall
pop
mov
ficoms
xchg
leave
add
dec
xor
mov
or
shlb
jo
or
sub
mov
jmp
sbb
int
inc
popl
inc
fiadds
jno
lock
fildll
cmpsb
jp
std
scas
xchg
test
mov
lahf
jge
mov
push
lcall
lahf
fimull
mov
mov
popf
mov
leave
repnz
jb
fwait
push
push
iret
jo
fs
push
pop
pop
xchg
and
test
inc
push
push
sbb
pop
xchg
pop
test
mov
xor
add
cmp
lahf
add
pop
xor
jbe
repnz
pop
repz
cmc
xchg
and
int3
mov
sub
bound
loopne
xchg
shl
leave
add
jne
cs
cld
and
aaa
mov
iret
repnz
and
dec
out
addb
int
mov
push
test
js
mov
cmpsl
push
mov
mov
aad
not
lahf
mov
dec
dec
inc
add
insl
push
nop
outsb
insl
mov
sub
cs
inc
mov
fadds
add
pop
mov
dec
sub
and
adc
xor
cmp
xchg
pop
jg
notl
push
xchg
jle
xor
inc
lods
fs
push
mov
out
lods
cld
lret
add
imul
mov
xchg
or
xchg
xor
jle
mov
sti
mov
sub
cmpsb
xchg
mov
mov
movsb
insb
sbb
loope
xor
cmpsb
push
pop
mov
inc
mov
pushf
jne
sbb
and
mov
out
fs
cmp
je
inc
arpl
pop
movsb
int
cmp
inc
arpl
ret
filds
xor
sbb
addl
dec
jbe
cld
lcall
aam
push
es
jp
iret
mov
lea
mov
adc
paddq
and
sarb
sub
add
repnz
mov
scas
or
mov
mov
lea
pop
leave
je
shll
mov
xchg
js
dec
ret
adcl
or
or
fisubrs
push
sub
mov
mov
or
pusha
push
mov
xchg
in
pop
and
mov
inc
inc
pop
sub
jl
pop
push
js
push
and
stos
mov
jmp
ljmp
inc
mov
sub
jb
mov
insb
pop
xchg
sbb
mov
and
mov
push
iret
lret
roll
pushaw
cs
pop
leave
and
xlat
mov
out
sbb
fbstp
xchg
mov
adc
lret
add
fstps
push
jbe
jnp
pop
push
sbb
clc
jo
inc
popf
sbb
mov
pop
outsl
data16
push
sub
jp
push
xor
xchg
outsb
push
sub
mov
mov
sbb
pop
sub
mov
mov
or
xchg
push
and
or
fwait
sbb
fnstenv
inc
or
inc
clc
sbb
ret
cli
ja
cld
pop
aaa
jl
mov
mov
dec
dec
ljmp
movsl
push
call
int
imul
cmp
xor
add
cltd
push
movsb
jne
or
pop
imul
in
iret
test
into
shrl
iret
pop
icebp
lock
fadd
sub
cld
xchg
ret
jo
dec
das
outsl
xorl
fbstp
fidivl
cmpsb
decl
adc
jle
fildl
lea
ljmp
lret
dec
jecxz
mov
xchg
mov
push
dec
sbb
pop
decb
out
iret
xor
insb
loope
push
scas
dec
xor
pop
mov
jmp
cmp
add
fidivs
push
adc
pop
imul
outsb
jnp
jge
js
test
fbld
mov
or
mov
xchg
mov
push
addl
pop
lcall
mul
mov
or
lods
cli
shrl
sti
andl
outsb
mov
jle
xchg
pop
xchg
sub
pop
pop
add
iret
xchg
mov
dec
mov
xchg
outsb
xchg
dec
pop
and
popf
push
mov
daa
jle
push
pop
sbb
push
dec
loopne
out
int3
cmp
jne
data16
mov
or
insl
repz
je
and
inc
mov
shrl
insb
mov
stos
rcrl
leave
mov
hlt
outsl
xchg
or
xchg
pop
jo
insl
and
sahf
adc
push
adc
cmc
jl
pop
xchg
mov
mov
xor
leave
mov
mov
jl
adc
xchg
fdivrl
or
data16
lret
fcompl
pushf
xchg
test
dec
iret
pop
jle
push
push
cmp
xchg
mov
jbe
lcall
jl
dec
mov
leave
dec
mov
flds
scas
inc
sbb
es
or
jle
notl
mov
es
dec
popf
pop
push
sub
js
mov
fnstsw
push
mov
lahf
clc
mov
sbb
xchg
mov
aad
mov
sbb
es
pop
push
arpl
mov
shrb
sbb
xor
mov
xor
pop
xchg
insb
xchg
jg
ret
emms
push
fnstcw
outsl
jl
xchg
sbb
xorps
xor
dec
jl
jb
jp
loop
into
jne
movsl
xor
xchg
sub
lea
sub
dec
idivb
mov
mov
or
inc
aam
fwait
push
xchg
adc
cmp
jbe
punpcklbw
outsb
mov
xlat
test
xchg
mov
popf
mov
cwtl
cltd
xorl
call
pop
shl
scas
scas
cld
mov
cmp
push
adc
add
inc
lcall
xor
mov
testb
pop
xor
repnz
push
pushf
xor
pop
lock
lcall
lcall
pop
lock
arpl
push
mov
popf
inc
loop
sub
xchg
and
outsl
add
and
std
adc
push
mov
add
testb
aam
stc
or
std
movsb
adc
xchg
mov
sbb
mull
leave
insb
add
shll
lcall
int3
out
jbe
lret
out
cmp
push
inc
imul
cld
pop
pushf
inc
mov
lahf
mov
jno
inc
dec
clc
fs
push
cmp
jp
add
iret
jle
sbb
mov
dec
cwtl
out
aaa
push
dec
shll
enter
push
fstpl
outsb
jg
dec
es
adc
pop
ds
js
dec
inc
adc
push
adc
leave
loopne
sahf
dec
jg
idivl
mov
mov
mov
lea
mov
sti
jo
rclb
outsb
push
xchg
movsl
test
jbe
js
push
push
jbe
mov
pop
lea
mov
jne
push
arpl
popf
jp
scas
adc
repnz
mov
mov
inc
pop
mov
cli
push
in
xchg
and
cld
mov
inc
not
jg
push
sub
pop
daa
sbb
test
jl
movsl
pop
mov
out
jo
hlt
pop
lea
js
mov
jge
cmp
fistps
xchg
mov
adc
adc
loop
adc
dec
cwtl
dec
ret
jbe
and
mov
push
subl
push
fimuls
nop
push
es
pop
sub
js
mov
pop
js
jl
inc
ret
xor
hlt
orb
xchg
and
push
andl
sti
mov
repnz
pop
insl
xchg
push
mov
push
imul
ds
push
pusha
mov
mov
lahf
out
pop
lods
insb
cmp
cwtl
ss
popf
stos
or
imulb
and
push
push
sub
mov
pop
pusha
jo
push
out
iret
cmp
mov
addb
add
or
in
addb
cwtl
in
jp
lea
dec
and
sbb
sbb
popf
movsl
test
imul
dec
sub
or
xchg
cmc
jnp
sbb
cmpsb
mov
sbb
out
es
cwtl
adc
mov
imull
outsb
cmp
mov
sbb
repnz
push
push
ds
mov
inc
push
sbb
inc
push
sub
out
nop
cmpsb
dec
or
gs
iret
push
out
aam
sub
jb
mov
mov
test
sbbb
add
mov
pop
adc
movsb
push
popl
push
lock
loopne
shr
pop
ret
mov
dec
inc
das
and
mov
mov
scas
mov
mov
xchg
leave
or
insl
in
cmovle
sbb
mov
out
push
xchg
sbb
add
repnz
inc
push
aad
xor
mov
mov
dec
loop
adc
out
lods
push
xor
stos
fcomps
mov
clc
sub
mov
mov
in
cmpb
jae
adc
shrl
cwtl
pop
andb
xchg
cli
cld
iret
push
mov
xor
jnp
sub
and
dec
hlt
or
fnstenv
jle
xor
add
add
dec
iret
add
out
xor
jmp
mov
iret
jmp
aam
mov
sbb
or
and
mov
cwtl
bound
or
xchg
sbb
push
lret
dec
in
cld
inc
lea
jbe
inc
mov
jnp
cs
aaa
ret
out
sub
jp
adc
ljmp
popa
out
mov
add
aam
enter
cwtl
mov
test
dec
cmp
scas
jno
mov
gs
mov
mov
arpl
repnz
jo
stc
mov
inc
xchg
test
fnstcw
rcrb
dec
mov
leave
cmp
xorb
lods
hlt
xchg
jae
mov
pop
rolb
shlb
or
sbb
xorl
push
mov
mov
inc
mov
mov
mov
push
add
jae
mov
mov
adc
jp
mov
sub
mov
dec
pop
xchg
sub
loope
arpl
mov
lock
lods
orl
aam
lods
sbb
jg
sub
pusha
jp
or
cmp
jne
repz
loopne
sub
mov
sarb
cmp
outsb
inc
sub
test
aaa
jnp
jne
ds
xchg
sub
data16
push
sbb
and
xorb
test
std
xchg
mov
cwtl
push
jecxz
cli
fimull
gs
leave
fnstsw
sbb
pop
cld
or
jns
sahf
jbe
mov
popa
mov
inc
push
pop
and
mov
inc
cld
push
cmp
xchg
jge
mov
add
adc
xlat
cmpl
fst
xchg
mov
push
lahf
es
cmpl
scas
jbe
inc
or
lea
jg
std
es
aad
jae
negl
mov
jnp
rol
jnp
or
lods
popf
sub
pop
mov
mov
mov
outsb
fildl
insl
mov
mov
pop
xchg
fisttpl
jg
pop
test
iret
jl
call
nopl
pop
lds
jl
lds
pop
pop
flds
mov
pop
push
fstpt
fnstcw
xor
cmpb
mov
lret
jl
out
testb
mov
cmpsl
jp
push
jno
sub
xor
test
mov
push
out
sub
push
iret
mov
jg
xchg
mov
popf
ljmp
adc
popf
pop
push
test
stos
mov
ret
or
jecxz
mov
addr16
nop
and
ja
scas
mov
repnz
lcall
jmp
cmp
dec
loop
xchg
ss
inc
mov
mov
cld
cs
clc
repnz
ret
cmc
pop
and
jbe
sub
inc
pextrw
ds
test
lcall
mov
push
sbb
mov
ja
xchg
lea
adc
xchg
fcmove
icebp
push
in
push
popf
or
jne
sbb
loope
mov
push
ljmp
pop
cmc
in
fbstp
int
or
out
mov
fistl
mov
mov
lret
jns
or
pop
push
xor
xor
ljmp
xchg
sbb
push
push
cmp
dec
and
inc
lahf
popf
iret
pop
mov
rcr
pop
cmpsb
outsl
js
pop
out
adcb
cmp
sbb
inc
dec
push
pop
cmp
dec
xchg
test
mov
cld
pop
adc
sub
pop
fidivrs
addr16
mov
sbb
pop
pop
jge
and
and
sbbl
into
inc
jns
pop
and
dec
pop
xchg
jno
add
push
xchg
adc
mov
addb
test
dec
mov
inc
addl
lods
in
js
mov
xchg
sbb
xchg
mov
push
push
xchg
mov
pop
outsl
jp
popf
add
inc
pop
xchg
sub
addr16
out
ds
pop
add
in
insb
mov
pop
pop
fs
js
aas
int
cmp
cmpsb
pop
jge
outsl
sub
stc
outsb
stos
popa
addr16
adc
insb
mov
add
push
fwait
add
mov
xorb
fsubs
testb
sarl
cmc
sbb
fs
loop
gs
mov
pop
cmovge
pop
insl
hlt
push
sbb
mov
sub
jecxz
fistl
or
dec
sub
mov
adc
lea
sysexit
push
mov
cmpsb
lret
rcrl
cmp
cmc
in
mov
or
pushf
pop
sub
dec
jo
xchg
fstpl
lahf
int3
xlat
je
xlat
lock
sbb
pop
ret
inc
push
and
nop
inc
iret
sub
or
ljmp
add
push
testb
add
adc
mov
call
ret
pop
jl
xor
js
push
mov
sbb
addr16
adc
popa
mov
xlat
xchg
popf
pop
cmpsl
cmpsb
popf
movsb
lcall
jno
daa
daa
sarl
movsb
lret
hlt
scas
jmp
cli
cld
mov
pop
std
mov
in
mov
shl
mov
push
mov
xchg
lods
inc
or
mov
int3
rcrl
pop
fstpt
push
and
cmc
fistl
movsl
ret
mov
clc
cltd
xchg
jle
or
sahf
movsl
xchg
sbb
ljmp
mov
pop
nop
mov
gs
dec
pop
clc
lahf
adc
sarl
mov
loop
and
je
add
lock
std
push
jb
gs
lcall
xchg
pop
pop
into
xchg
test
push
jg
pushf
jmp
ja
int3
mov
sbb
adc
xchg
cmp
mov
dec
mov
add
xor
enter
jmp
insb
repnz
hlt
mov
cli
cmpsb
add
scas
movsl
fists
and
pop
pop
cli
movsb
in
int
push
fs
fidivs
cmp
or
adc
test
adc
imull
mov
iret
sub
adc
std
pusha
jle
pop
xor
outsb
adc
lock
movl
int
std
inc
pop
xchg
adc
loop
mov
xlat
js
dec
sub
xchg
mov
test
out
jmp
repnz
xchg
add
push
mov
idiv
fs
data16
clc
pop
test
loope
fimuls
xorb
jp
ja
mov
jg,pt
es
arpl
addr16
or
rolb
xor
leave
sbb
ret
or
leave
add
xchg
jp
xchg
andb
jbe
cmpsb
add
filds
and
push
insl
push
mov
sbb
in
int
and
jb
nop
pop
ja
imulb
mov
jne
out
int3
lock
cwtl
inc
nop
bnd
push
cli
out
popa
daa
lea
in
sbb
mov
lock
pop
repnz
push
loop
or
repnz
or
jg
test
sub
sub
imull
in
out
cld
mov
mulb
dec
mov
xchg
or
xchg
sbb
in
lods
out
lock
jecxz
fwait
mov
icebp
lret
sbb
mov
or
pop
inc
and
addl
inc
popf
fnsave
push
nop
mov
stc
or
scas
lahf
out
pop
jo
call
cmpsb
mov
mov
sar
aam
jg
ljmp
out
xchg
jle
leave
jae
out
rorb
cmpsb
sbb
push
push
mov
popa
scas
fstpl
dec
mov
adc
lea
xchg
lea
ret
psubsb
pop
push
jo
pop
pop
inc
dec
ret
push
ljmp
add
xchg
iret
jae
mov
push
mov
leave
xchg
popf
cwtl
iret
loope
xchg
lods
jmp
add
adc
xchg
xor
cmp
mov
leave
xchg
loope
add
stos
sbb
mov
push
fs
inc
pop
add
push
daa
inc
pop
mov
adcb
insb
jp
mov
xchg
pushf
mov
loop
add
or
dec
or
sub
xchg
mov
adc
mov
iret
or
push
lea
push
or
xchg
mov
mov
daa
stos
dec
sbbl
insb
call
lcall
mov
out
dec
loop
in
ret
pop
leave
out
loope
mov
pop
sbb
lds
inc
outsl
push
mov
insb
decl
iret
lods
mov
sub
lods
shr
test
jl
sub
imulb
imul
pop
test
mov
sub
ss
ret
iret
cmp
cwtl
mov
jb
mov
arpl
inc
aam
testb
js
push
dec
and
sub
sbb
cwtl
iret
jecxz
jne
cmp
pop
sub
xor
mov
cmp
pop
xchg
adc
decl
and
repnz
adcb
mov
add
jle
sub
sub
outsb
lahf
bound
jge
popa
jmp
call
scas
cwtl
or
iret
inc
in
and
and
mov
sub
cwtl
lea
cmp
pop
arpl
sti
sub
add
push
icebp
and
jnp
adc
outsb
fwait
add
not
jb
and
fwait
clc
dec
jecxz
in
into
ss
out
scas
out
sbb
cmp
dec
mov
test
lcall
xchg
adc
adc
jp
xchg
push
lods
xchg
mov
js
inc
adc
insl
lret
mov
sbb
pop
pop
sub
mov
movsl
cltd
daa
mov
mov
mov
cld
iret
dec
popa
sarl
popa
stc
or
test
xchg
xlat
nop
cmpsb
testl
pop
xor
xchg
xor
dec
pop
xchg
inc
int3
sub
mov
call
shlb
ret
or
mov
in
movsl
push
imul
orl
sub
lock
mov
mov
and
or
mov
pop
pop
jno
xchg
pusha
leave
or
jp
clc
sub
std
jae
stc
ret
int
ja
cmp
test
gs
je
push
xor
or
daa
pop
cwtl
add
mov
ds
jge
call
lea
push
mov
adc
push
loop
pop
jge
js
xor
ds
jle
cwtl
movsl
lds
mov
jecxz
mov
cs
dec
sti
mov
imul
xchg
pop
or
jg
adcb
lods
jne
adc
test
leave
cwtl
dec
ja
add
mov
lcall
cmpsl
or
js
add
scas
push
pop
lcall
mov
inc
sti
scas
push
mov
ds
or
jp
aam
loop
orps
xchg
push
scas
push
push
adc
cmp
pop
dec
imul
testb
cmp
xchg
mov
mov
add
push
pop
add
icebp
lahf
push
adc
mov
jp
mov
sti
mov
and
cmpb
leave
or
mov
mov
mov
pop
jbe
fucom
mov
adcb
dec
mov
xorb
xor
lock
sahf
jge
mov
xchg
gs
adcb
andb
mov
fstpt
js
rorl
rclb
sahf
cld
sub
lcall
cmpsb
xchg
repnz
pop
pop
and
jmp
pop
test
jns
scas
xchg
out
cmpsb
addr16
xchg
pusha
lahf
lods
add
xchg
mov
leave
pop
lahf
ds
leave
ljmp
sbb
sub
sbb
pminub
mov
loop
ds
xchg
sub
test
js
adc
ss
loop
mov
adc
pusha
int
push
push
insl
ds
pop
stc
dec
lahf
and
in
push
scas
xchg
mov
leave
push
mov
nop
push
js
sbb
sub
mov
push
sub
sbb
cld
cli
cmc
test
movsl
lods
ds
sbb
mov
jmp
mov
xchg
sub
push
mov
test
jg
fwait
mov
inc
enter
test
jbe
arpl
sub
pop
ret
movsl
out
push
mov
in
add
xchg
and
mov
ss
or
cld
out
mov
mov
ss
outsb
sub
pop
xlat
js
mov
cwtl
adc
push
and
lea
mov
jns
mov
sbb
ret
mov
out
fnsave
adc
mov
dec
sbb
mov
int
push
outsl
out
lret
hlt
xchg
mov
adc
mov
fdivrs
lock
adc
mov
ljmp
mov
ljmp
repnz
sbb
loope
out
cwtl
add
mov
inc
pop
or
je
outsb
jno
sbb
add
les
mov
sub
xchg
cmpsl
or
pop
mov
aas
and
sub
mov
sbb
add
jecxz
ja
push
pop
cli
fistps
call
lods
pop
std
or
jne
lds
jbe
add
mov
out
xor
mov
cmpsb
cmpsl
inc
test
inc
dec
pop
nop
mov
sahf
lcall
jo
repz
xlat
or
push
pop
xchg
enter
push
and
adc
iret
ja
mov
and
pop
scas
aam
loopne
mov
jp
cmpsb
hlt
push
outsb
jae
movsb
rcl
fsubl
fdivl
clc
insb
dec
scas
xlat
ficoml
pop
leave
jne,pt
mov
jg
daa
ret
es
lret
or
pop
iret
ljmp
mov
mov
xchg
add
mov
dec
push
in
push
xor
std
rep
inc
jp
ss
cmpsl
iret
mov
mov
outsb
mov
mov
cmp
or
mov
mov
daa
mov
insl
stos
pop
push
lcall
int
jne
sub
rorl
aas
cmp
ljmp
movsb
popa
adc
rcrb
jmp
out
in
dec
enter
lock
movsl
scas
adc
out
arpl
dec
pop
mov
out
lock
ret
push
outsb
mov
and
insb
repnz
push
loope
addr16
mov
pop
cwtl
mov
mov
test
cs
jb
xchg
lret
leave
inc
inc
push
lcall
in
imul
add
pop
push
in
hlt
ret
mov
ss
mov
xchg
repz
inc
push
dec
jbe
lods
ja
lods
xchg
gs
iret
push
movsl
inc
test
adc
cmc
jle
xchg
push
mov
sbb
push
pop
mov
iret
push
inc
lods
loopne
pop
push
das
push
xor
or
adc
mov
das
outsb
or
mov
outsb
cmpsl
cmpb
xor
test
inc
insb
test
mov
sbb
cmp
xchg
mov
jno
jl
xlat
icebp
andl
daa
add
pop
xlat
jp
dec
and
faddl
repz
sbb
repnz
push
lret
and
adc
ret
sti
lret
sbb
in
inc
arpl
mov
jmp
or
mov
popf
sbb
leave
dec
loop
mov
add
andb
mov
add
and
lcall
je
fisttps
sub
add
mov
pop
scas
fdivrp
out
cwtl
sti
sbb
stc
lea
idiv
dec
jl
outsb
repz
pop
mov
pop
sub
call
and
pushl
xor
inc
cmp
cmpsb
jl
fidivrs
cwtl
xchg
mov
iret
es
sub
out
push
sub
sub
push
xchg
push
jae
test
pop
shll
jbe
test
loopne
inc
es
sbb
ret
aam
cmp
xor
dec
fisttps
jmp
cld
or
dec
ljmp
adc
mov
jbe
jle
jge
jecxz
jne
dec
pop
negb
in
daa
enter
mov
inc
jbe
adc
outsb
sbb
jle
jbe
lods
nop
icebp
jne
mov
mov
sbb
mov
lahf
xchg
leave
jg,pt
jp
stc
lret
mov
frstor
iret
ljmp
js
add
pop
xor
nop
ret
cmpsb
mov
mov
xchg
cmp
pop
and
into
pop
test
sbb
imulb
bnd
jmp
push
xchg
or
add
mov
xor
mov
in
push
popf
frstor
fwait
xchg
xchg
popf
lcall
arpl
leave
shlb
xchg
cmp
lahf
pop
iret
popf
test
jnp
dec
mov
mov
xchg
test
and
pop
data16
rorl
dec
add
lcall
cltd
aam
mov
xchg
sub
inc
notl
mov
gs
out
dec
repnz
lcall
in
push
ss
popf
jbe
push
mov
lods
xchg
or
test
addr16
dec
stos
push
mov
int
movsb
cmp
ficoms
push
mov
sti
xchg
notb
sub
clc
xchg
jle
xchg
add
insl
ret
pop
std
ljmp
add
jns
dec
pop
cltd
enter
test
into
mov
cwtl
mov
sbb
hlt
iret
leave
push
push
push
add
adc
mov
mov
xchg
mov
lea
pcmpeqd
inc
ja
test
pop
dec
xchg
cltd
andb
sbb
lcall
pushf
sbb
cli
mov
jb
test
in
dec
or
and
loopne
out
sub
adc
test
jnp
push
shlb
std
adc
and
lcall
mov
int3
lock
ret
push
jno
adc
mov
loopne
in
out
xchg
sub
jne
std
cltd
add
jne
ret
dec
push
mov
and
push
and
lea
sbb
mov
and
push
sbb
sbb
ljmp
mov
cld
lds
xchg
sti
movsl
shll
cmp
dec
dec
inc
call
push
js
jl
repnz
mov
jmp
cli
dec
in
es
sahf
mov
sbb
mov
bound
inc
push
dec
inc
adc
cmp
add
lods
jecxz
mov
pop
pop
cwtl
and
mov
sbb
ja
mov
mov
outsl
sub
pushf
je
fildll
popa
addb
setge
inc
pop
pop
cmp
lretw
mov
in
popf
jle
aam
and
cwtl
out
or
add
push
repz
mov
pop
add
rcll
inc
xchg
je
or
cmpsb
out
inc
add
cwtl
jge
dec
out
test
push
jns
dec
adc
xchg
in
cltd
lods
push
adc
hlt
fwait
mov
xchg
pop
mov
pop
mov
inc
leave
insb
repz
inc
push
mov
std
cmpsb
fs
adc
dec
xchg
xchg
fiadds
scas
xchg
pop
xchg
fdivp
push
dec
pop
xchg
es
xchg
fisubs
mov
fmulp
cmpsl
xor
mov
scas
adc
adc
or
cmp
jp
xchg
outsl
xchg
setb
push
pop
pop
push
addr16
popf
ja
xchg
repnz
sub
sahf
divps
fwait
cli
add
lea
mov
std
mov
mov
lock
test
imul
inc
lahf
sbb
mov
add
dec
mov
test
cmp
lods
mov
leave
in
cmp
mov
mov
pop
lret
leave
adc
mov
mov
push
adc
and
cwtl
in
sbb
leave
push
inc
sbb
xchg
jp
icebp
adcb
xchg
outsl
jp
pop
hlt
insl
negb
adc
dec
scas
cld
xchg
jno
and
sub
sub
fisttpll
sub
and
nop
adc
jle
fsubrs
ds
aam
outsb
dec
jl
xchg
fs
popf
or
mov
lods
imull
dec
xorb
cli
fs
lock
imul
dec
arpl
rcrb
inc
int
jbe
xchg
popf
leave
push
sub
sti
push
mov
insb
push
mov
dec
sbb
jbe
jae
loop
movsl
fisttpl
xlat
in
popa
pop
lea
int
push
xchg
push
lock
scas
xchg
dec
add
xorb
xchg
sbb
xlat
leave
sub
ret
mov
addb
inc
mov
es
xchg
inc
mov
cmp
popf
cmp
add
adc
in
adc
insb
in
jmp
pop
sbb
cmp
xchg
aam
fwait
sub
dec
mov
outsb
mov
adc
lret
mov
cmp
cli
jns
dec
popf
jb
lea
cwtl
gs
jae
sub
mov
pop
jl
xchg
bound
add
lea
mov
lret
mov
in
lret
push
cs
icebp
inc
add
mov
cld
mov
inc
and
popf
lods
jbe
out
mov
pop
adc
addr16
dec
cli
add
push
dec
dec
shlb
adc
and
pop
dec
adc
adc
mov
addr16
adc
outsl
movsl
lcall
pop
fcomps
pop
jle
push
push
dec
mov
jne
pop
arpl
xchg
jle
push
xor
cld
sbb
aad
pushf
movsl
test
inc
jmp
xor
jmp
insl
popw
jb
jge
adc
push
daa
inc
sub
movsl
gs
cltd
out
or
nop
xor
sbb
gs
xchg
sbb
mov
test
inc
mov
sbb
sub
in
xorb
mov
lea
xchg
xchg
out
jno
out
add
push
xchg
and
ret
popf
shrl
xor
push
test
push
jg
inc
sti
sar
repnz
add
and
inc
mov
and
and
out
cwtl
pop
int
out
inc
inc
aam
adc
lcall
dec
xorl
pop
mov
push
cmc
mov
int
pushf
cs
mov
push
sbb
mov
cmp
mov
setb
cmp
adc
outsl
pxor
daa
inc
dec
xchg
js
xchg
xchg
push
cwtl
out
pop
inc
xchg
or
push
xchg
pop
sub
xchg
xchg
mov
mov
inc
pop
addb
cmpsb
test
pushf
sub
aaa
push
push
fidivs
popf
cmpsl
nop
add
add
pop
mov
sub
test
adc
movsl
and
pop
pop
dec
xchg
sti
mov
out
mov
out
cmp
std
aam
sbb
cwtl
mov
mov
fldenv
out
jno
fnsave
mov
push
jb
bound
pop
imul
jmp
ja
cmp
add
std
xlat
sbb
rorl
jbe
pop
add
lods
pop
xor
jb
xchg
shrb
lret
mov
jg
or
sbb
pushf
cli
rcr
lahf
xchg
mov
fldt
jbe
nop
ret
mov
nop
or
pop
mov
adc
mov
repz
das
ret
ja
mov
mov
or
inc
sbb
or
add
jo
or
fwait
leave
sub
fmull
arpl
push
sbb
adc
pop
hlt
add
bound
xchg
ret
in
nopl
mov
sub
pop
fnsave
pop
jnp
inc
jg
xchg
es
cltd
xchg
add
fwait
mov
hlt
or
push
leave
inc
pop
jno
adc
ja
mov
or
lods
sbb
inc
lcall
push
stos
jne
push
cmp
lret
fadds
addr16
pusha
lcall
fistpll
jg
out
mov
cmp
mov
lcall
leave
jle
mov
push
aas
push
divb
scas
inc
mov
bnd
mov
test
lods
fcomps
sbb
adc
fisttpl
push
mov
pop
mov
push
sti
push
stc
jge
pop
cmc
push
repz
out
jp
pop
jmp
lcall
sbb
mov
xchg
sbb
call
incl
mov
adc
es
mov
mov
out
test
repnz
enter
sub
clc
jge
int
and
loopne
loopne
xchg
adc
cwtl
das
je
lahf
mov
cmpb
adc
fwait
mov
xor
cld
cwtl
lods
js
mov
fdivr
sub
push
sbb
cmp
ds
inc
stos
cs
test
inc
lret
mov
mov
pop
cmp
lea
inc
sbb
dec
je
cmp
nop
gs
pop
or
jle
jb
sbb
iret
outsb
xchg
and
sbb
add
xchg
mov
sbb
mov
and
pop
adc
ja
sbb
aaa
or
lret
xchg
loopne
fwait
jo
pop
mov
jo
test
mov
jbe
jo
movsb
xchg
jb
mov
lret
lcall
dec
rorb
adc
sub
mov
loope
mov
xchg
aam
mov
push
inc
jg
mov
fxch
outsl
mov
into
popf
mov
and
pop
add
repz
call
lods
cmp
add
cltd
inc
ja
push
repz
and
mov
xchg
xlat
sahf
stc
pushf
ja
add
xlat
jl
lretw
pop
int
xchg
repz
push
pop
push
mov
mov
aaa
pop
mov
fwait
repz
cld
fs
xor
and
cwtl
and
mov
js
test
sub
xchg
dec
nop
inc
add
repnz
pmaxub
fstpl
mov
xchg
fs
pop
adc
pop
ja
outsl
aas
cltd
addr16
mov
dec
dec
pop
pop
pop
rcrl
pop
fisubs
mov
xchg
lahf
mov
or
mov
addr16
aam
pop
lcall
mov
lea
lret
shll
cmp
sbb
push
test
mov
adc
jl
inc
stos
cmp
rcrb
pop
push
push
xor
jbe
int
or
mov
dec
inc
push
xor
or
mov
je
mov
mov
jg
in
adc
fdivrl
mov
dec
pop
sub
das
pop
xlat
jge
mov
xchg
xchg
sahf
es
inc
and
or
pushw
dec
aaa
aas
in
push
pop
xchg
mov
adc
in
cmp
and
lcall
xor
out
cmp
insl
shll
cmp
js
loop
mov
mov
fwait
call
lcall
fbstp
xchg
fldt
movsl
xchg
hlt
repnz
or
jo
sub
fwait
push
iret
int
movsb
mov
mov
insl
mov
push
insl
push
mov
jmp
ljmp
adc
test
test
mov
push
or
movsl
xor
jle
or
test
and
incl
mov
lahf
pusha
lock
test
data16
jmp
in
pop
daa
sub
loopne
cmp
les
lcall
mulb
jge
insl
popf
adc
mov
cmp
stc
sbb
mov
adc
jns
jno
out
jge
arpl
mov
test
aas
pop
movsl
bound
lods
pop
movsl
jbe
aas
lret
pop
adc
les
pushf
pop
mov
mov
jmp
jne
data16
iret
scas
idiv
aaa
mov
mov
outsl
cwtl
jnp
xor
aam
adc
adc
push
cwtl
pushf
ja
movsl
pop
lcall
int
cmc
inc
lret
enter
mov
mov
jle
add
dec
icebp
push
mov
jp
xlat
cmpsb
xchg
ss
lret
mov
mov
aaa
popf
mull
lea
mov
out
test
shll
adc
xor
xor
ss
sbb
out
test
pushf
pop
ljmp
sub
hlt
jbe
add
das
pop
mov
loope
lea
test
push
dec
das
inc
popf
sti
scas
rep
fistpl
cmp
jp
pop
test
std
mov
test
outsl
or
gs
push
xor
stos
popa
scas
pop
mov
sbb
ds
daa
cmp
repz
mov
pop
or
dec
and
mov
add
cwtl
sub
ds
mov
rolb
xlat
adc
leave
xchg
sub
jno
sbb
movsl
in
sbbb
push
lahf
sub
es
in
mov
xchg
mov
mov
lahf
push
or
bound
pushf
xchg
or
xchg
outsb
pop
seto
mov
ljmp
sbb
fistpl
add
lcall
lahf
fildl
push
ds
pop
incl
mov
jle
mov
sbbb
movsl
popf
lcall
scas
mov
mov
test
sahf
pop
or
and
or
mov
mov
jns
jb
add
hlt
add
in
fadds
into
pop
or
fsubrp
in
xchg
mov
inc
leave
lcall
jle
testb
mul
aam
push
push
xchg
sbb
subb
shlb
mov
cmp
and
mov
imul
and
pop
lcall
or
pop
jl
push
pop
pop
xchg
pop
std
loop
popf
stos
cmp
jb
mov
fiadds
jp
addb
add
mov
and
popa
imul
mov
jp
jle
fisubrl
or
scas
jnp
adc
fstpl
pushf
jle
xchg
popf
mov
and
jbe
adc
dec
xchg
mov
inc
push
pop
mov
stos
icebp
add
push
push
int3
jp
out
dec
aam
lcall
pop
or
lods
sbb
subl
add
xchg
push
loopne
pop
movsl
xchg
lcall
cwtl
add
fs
add
stc
push
inc
mov
jns
orb
les
test
dec
daa
pop
push
sbb
repz
dec
lods
fldl
mov
aaa
pop
into
mov
sbb
ja
sti
shll
sarl
aaa
and
mov
mov
cmp
dec
add
mov
scas
and
and
mov
mov
daa
sbb
movaps
xchg
insb
je
cmpl
cmp
jl
pop
jge
pop
add
adc
popf
pop
adc
inc
pop
mov
inc
adc
jbe
ja
cld
inc
std
add
mov
sti
es
mov
nop
mov
jl
jb
jb
inc
or
in
mov
in
testb
add
push
pushl
sbb
jb
shll
mov
testl
dec
andl
sbb
ds
rep
jo
cltd
int
sub
adc
cmpl
in
pop
push
dec
mov
lcall
arpl
xor
adc
lea
jge
xchg
jae
mov
push
xchg
in
xor
mov
dec
or
nop
jbe
mov
testl
push
cmpsl
or
dec
movsl
sub
fucom
jmp
leave
inc
push
dec
push
dec
mov
mov
pop
insb
icebp
bound
dec
in
int3
jle
pop
or
in
mov
xor
jmp
jp
xor
add
mov
jl
stc
insb
in
test
inc
pop
jne
xchg
arpl
pushf
push
pushf
cmpsl
test
push
dec
arpl
mov
jecxz
mov
out
in
insl
and
out
adc
inc
mov
lcall
add
pop
mov
jnp
mov
mov
addb
jne
dec
leave
push
popa
outsb
std
lret
jle
in
mov
cld
cmpsb
mov
add
cli
mov
xchg
int
xor
add
daa
xchg
cltd
test
mov
aaa
scas
pop
jns
repnz
mov
mov
bound
rolb
inc
push
pop
lahf
pushf
mov
fists
pop
push
sub
sbb
test
stos
mov
cld
mov
pop
dec
push
pop
data16
push
fsts
inc
sbb
inc
lret
mov
inc
enter
sub
leave
stos
aas
jl
sbb
or
jbe
dec
cmp
mull
jp
push
outsl
push
dec
jge
pop
cmp
sbb
xchg
ret
lahf
ja
aas
jp
push
fisttpl
stos
jp
jl
pop
ds
push
add
push
ja
pop
pop
xor
psllq
stos
push
jp
mov
sub
push
loop
lea
dec
push
pop
push
sti
jge
pop
ret
pop
jnp
fisttpll
pop
stos
push
xchg
jg
pop
jp
push
pop
push
idivl
pop
mov
sbb
lea
jp
push
repnz
sarb
pop
xchg
push
ja
lea
jp
push
jmp
lret
das
pop
sbb
lcall
push
lcall
out
inc
adc
xchg
jle
sbb
outsb
jle
push
dec
pop
and
push
gs
inc
in
mov
xor
dec
dec
inc
mov
push
mov
pop
hlt
imulb
inc
cs
pop
mov
push
adc
pop
filds
or
cmp
push
jb
sbb
mov
repz
xchg
dec
mov
jo
xchg
cwtl
pop
jno
rcrb
adc
sbb
dec
bound
mov
nop
cltd
int
ds
add
jo
addr16
xor
rcrb
fldenv
mov
rcl
std
int3
fnsave
or
cli
fadds
cs
mov
scas
aam
inc
adcb
mov
mov
jecxz
mov
movsb
mov
xchg
sbb
sar
es
mov
mov
aam
mov
mov
xchg
pop
push
scas
xchg
pushf
insl
pop
jbe
xchg
fs
lods
test
sub
sbbb
es
jg
mov
lcall
mov
addb
jbe
jb
outsb
insb
push
push
pop
pop
pop
sahf
pop
push
push
push
push
dec
dec
dec
sahf
dec
inc
inc
inc
inc
ds
sahf
cmp
xor
xor
sub
sahf
sub
and
and
sbb
push
sbb
sahf
adc
push
or
or
sahf
add
add
cld
cli
clc
negb
in
ljmp
fcoml
fsubs
sahf
rcl
into
int3
lret
mov
sarb
mov
stos
test
jmp
sti
popf
popf
pop
jle
and
jbe
dec
lret
lret
jl
jmp
xlat
jnp
push
dec
push
insb
lock
nop
pop
lds
ret
dec
cmp
das
les
mov
nop
mov
iret
mov
int3
aam
inc
cmp
push
cwtl
les
add
push
push
subb
jle
add
mov
mov
push
jp
cli
xor
xchg
fsubl
int3
mov
pop
push
shrb
mov
in
dec
add
and
sub
pop
scas
cmp
into
and
repnz
rcl
fidivl
fdiv
lods
cmpl
mov
scas
inc
sub
rclb
push
dec
cmp
in
push
sub
loop
xor
les
rol
jo
push
dec
inc
inc
pop
pop
cs
inc
das
inc
xchg
xchg
insb
mov
add
in
push
push
sbb
pop
or
imul
cmp
ficompl
mov
jbe
mov
push
imul
stos
dec
loopne
negb
dec
dec
jns
aam
mov
jecxz
add
shlb
or
lock
pop
push
stos
movl
sbb
dec
imul
mov
ja
inc
lcall
dec
inc
loope
mov
es
idiv
dec
or
jne
add
adc
xor
ja
fmull
cli
cmp
aam
popf
popa
into
pop
xor
inc
add
lret
jmp
adc
cmpsb
cmp
push
and
add
or
packuswb
ja
jne
pop
xchg
fdivl
pop
pop
cmp
push
js
jle
push
adc
sub
cmp
xor
mov
ljmp
push
cs
lock
ljmp
pop
mov
adc
push
pop
dec
or
cli
cmp
popa
fisubrs
repnz
cmp
mov
scas
out
jl
lahf
mov
cmpsl
iret
push
inc
jge
imul
inc
push
mov
lods
les
ja
into
pop
and
push
xchg
mov
ds
sub
loopne
mov
adc
shr
cli
aad
or
mov
jp
shll
adc
aad
mov
sub
lret
aaa
repnz
inc
cs
data16
mov
rorb
adc
inc
mov
jno
sbb
xor
in
sbb
add
lret
insb
rolb
lret
outsl
rcrl
dec
fstps
or
cmp
inc
lcall
ret
ror
pop
mov
and
push
xchg
push
push
sub
pushf
dec
pop
pop
and
loop
push
adc
xchg
jo
pop
adc
inc
lcall
fwait
lcall
pop
dec
lcall
lcall
mov
movsb
pop
lcall
lcall
mov
ds
lahf
cmpl
sub
xchg
xchg
sahf
lea
cmpl
jne
jno
sahf
insl
imul
arpl
sahf
pop
pop
pop
push
push
push
push
dec
sahf
dec
dec
dec
inc
inc
inc
inc
aas
sahf
cmp
xor
das
sahf
sub
and
pop
sahf
sbb
adc
setle
add
lcall
cmc
repz
out
sahf
in
jmp
out
jecxz
fistps
aad
ror
sahf
int
leave
mov
mov
mov
scas
pushf
lods
stos
test
movsb
mov
jno
mov
mov
sahf
dec
ljmp
pop
push
dec
lahf
push
fldt
mov
adc
add
inc
test
inc
rol
lods
mov
fmulp
sbb
out
daa
daa
mov
add
mov
jno
pop
repnz
cltd
sbb
shlb
mov
push
jle
aam
sbb
mov
scas
fcompl
into
bound
aam
clc
mov
out
mov
std
ficoms
sbb
xchg
push
mov
push
jle
rorb
pusha
jmp
lret
adc
mov
push
jbe
lock
stos
test
divb
test
clc
clc
mov
into
es
cs
mov
pop
pop
fists
mov
mov
mov
sbb
outsb
mov
mov
lret
or
ljmp
push
jg
mov
cmp
mov
jbe
jg
imul
arpl
out
scas
hlt
clc
pushf
adc
cmp
inc
push
push
adc
adc
fwait
jbe
cld
jg
adc
in
pop
jbe
hlt
stos
pushf
hlt
mov
xor
fs
push
hlt
dec
add
push
cmp
mov
mov
mov
and
stos
sub
inc
pushf
push
shrb
outsb
push
mov
jbe
dec
xchg
push
data16
cs
jae
mov
adc
sbb
pmaddwd
scas
addr16
push
js
pop
sbb
dec
push
outsb
mov
push
xchg
ss
push
push
pop
xchg
push
push
push
cs
inc
ds
jp
lcall
jle
shlb
cli
jno
fprem
pop
jle
mov
ret
mov
add
push
int3
fiaddl
scas
xchg
and
std
cmp
sbb
stc
adc
int3
push
pop
out
mov
xchg
sbb
dec
ds
lcall
pop
pop
data16
mov
mov
mov
js
jecxz
jecxz
ja
in
push
or
add
jae
nop
cmp
cld
add
sbb
xchg
ficoml
insb
clc
cli
outsb
push
test
adc
jo
push
push
push
jg
jno
stos
rorl
or
or
pop
or
adc
cltd
dec
sub
insl
mov
sbb
enter
jns
int
xchg
addr16
iret
xchg
imul
inc
pop
les
cltd
mov
cli
push
dec
arpl
push
int3
inc
mov
fists
adc
push
movsl
and
xchg
das
xchg
jl
fstl
sbb
mov
mov
mov
push
or
call
fildl
mov
inc
lahf
sbb
and
mov
shr
pop
pop
add
xchg
inc
in
data16
xchg
dec
cmp
cmpsb
xchg
shufps
das
loopne
xchg
push
shlb
dec
xchg
test
sti
ss
leave
cmpsl
mov
adc
push
xchg
xor
push
fisttpl
and
dec
das
mov
mov
fldl
pusha
mov
mov
shlb
fdivrp
pop
xor
add
adc
sub
lret
pop
push
out
fisubs
inc
ficomps
add
or
scas
cwtl
lock
pusha
xchg
jle
stos
push
je
aad
das
xor
pusha
push
fimull
out
es
insb
pop
mov
or
push
and
ss
inc
shrb
adc
fs
jp
sbb
adc
dec
push
dec
pushf
fwait
rcrl
mov
imul
xchg
lock
mov
mov
incb
addl
fsubrl
add
sbb
lock
dec
xor
xor
xor
jb
add
add
les
inc
xchg
lcall
sbb
mov
inc
pop
xchg
cld
clc
xchg
adc
inc
mov
addl
ret
orl
int3
mov
popf
mov
into
sar
enter
push
pop
jo
scas
fwait
stos
lcall
push
addb
lret
int3
ret
daa
lea
mov
jb
aad
cmpsb
jae
mull
mov
mov
loop
pushl
xchg
int3
adc
pop
aam
push
mov
stos
cmpsb
dec
sbb
mov
mov
lcall
cltd
add
mov
inc
in
sbb
sub
and
fnsave
inc
mov
rcrl
outsb
scas
jnp
lods
cli
movsb
popa
pop
mov
lods
jne
push
lock
mov
push
je
pop
icebp
pushf
jecxz
adc
lods
mov
push
fsubrl
and
decb
jge
fst
pushf
lods
push
fistpl
jg
lcall
cld
out
sbb
jmp
fdivs
dec
bound
loope
dec
jp
bound
cs
mov
ss
jo
flds
cmp
dec
ds
outsb
fdecstp
test
mov
inc
jns
push
or
or
jb
dec
les
rcll
mov
cmp
addr16
lods
push
xchg
mov
mov
push
or
pop
adc
dec
or
cld
stos
pop
imul
cmp
lcall
push
popa
prefetcht1
cmp
push
dec
scas
shr
rcrb
cli
outsb
mov
cwtl
test
icebp
mov
icebp
jnp
dec
adc
add
mov
adc
rcll
lret
repz
cs
mov
xor
int3
loopne
push
sbb
and
mov
call
add
push
cmp
rolb
adc
xchg
xchg
stc
sbb
ss
fimull
pusha
out
mov
jae
aas
xor
ror
fsts
mov
sti
jge
cmpsb
pop
call
or
fwait
cltd
pop
jg
jnp
xchg
mov
add
push
xor
mov
push
mov
cmp
test
ss
in
xchg
dec
mov
dec
add
add
inc
rclb
aaa
push
addr16
out
into
shr
jbe
bound
dec
std
cmp
addr16
lock
movsl
sar
rclb
push
jp
or
pushf
lea
mov
sbb
add
insl
out
add
mov
jnp
push
es
mov
stos
cld
sbb
jmp
outsb
cli
and
out
pop
ficomps
into
mov
mov
enter
pop
dec
bound
fnstsw
pushf
leave
rep
pop
adc
pop
lea
pop
clc
cwtl
mov
or
push
mov
mov
nop
pop
xchg
mov
js
add
lcall
jbe
lea
xchg
lcall
sbb
adc
dec
ss
outsb
or
mov
lock
in
insl
cmpsl
movb
les
data16
ds
sub
fwait
push
pop
adc
jge
dec
clc
arpl
pop
jg
push
mov
mov
icebp
data16
jnp
push
xchg
mov
pop
mov
mov
push
push
pushf
pop
jecxz
aaa
pop
pushf
in
add
inc
adc
out
mov
pop
repz
ret
nop
repnz
les
pop
cmpsl
xchg
ds
mov
pop
xchg
jns
xchg
ret
xor
sbbl
xchg
lret
enter
call
stos
sub
imul
cs
ficomps
adc
pop
push
outsb
popf
jle
fbld
insb
dec
xchg
fcompl
add
push
cmp
sbb
xor
xlat
or
iret
fucomp
push
jg
pop
mov
xchg
mov
loop
sub
loopne
lret
mov
fildll
cmpsb
inc
pushf
divl
push
sbb
mov
jle
popa
dec
inc
scas
loop
push
xchg
inc
pop
cmp
pop
jg
into
pop
popf
ds
mov
lods
icebp
cli
xchg
and
dec
fdivrp
ss
loopne
push
mov
push
push
jl
jbe
jp
mov
lea
xchg
push
jge
pop
inc
push
push
lea
jp
push
inc
push
pusha
jge
pop
pop
test
pop
pop
outsb
push
xchg
pop
push
scas
push
fs
push
into
lods
out
jp
push
push
push
cmpsb
jge
pop
mov
dec
jnp
pop
cmpsb
lcall
sahf
stos
push
inc
dec
push
cmp
mov
pop
outsb
adc
mov
mov
pop
pop
scas
cmp
fisttps
femms
pop
jge
pop
daa
push
das
aaa
lea
jp
push
dec
push
push
jge
pop
addr16
ja
lea
mov
push
idivb
pop
push
push
ss
pop
push
xchg
pop
push
mov
fiaddl
push
loop
mov
xchg
hlt
jbe
pushf
stc
jp
ror
lods
jno
push
xchg
pushf
cbtw
pop
sbb
mov
clc
or
das
test
push
push
stos
inc
pop
pop
adc
add
xchg
cmp
xchg
push
sub
mov
pop
pop
push
jno
idivl
push
jl
in
mov
les
sub
push
mov
jae
aaa
push
stc
mov
push
add
movb
sub
xor
mov
lods
cwtl
lcall
mov
in
je
lcall
stos
sbb
out
sbb
sbbb
mov
jbe
lahf
jae
jb
pop
daa
pop
and
and
sbbb
add
sbb
add
pop
mov
dec
dec
inc
adc
sahf
in
push
aad
addl
and
cltd
sahf
mov
adcb
lods
and
lds
jp
add
cmc
push
add
stos
pop
rclb
xchg
sub
sbb
daa
xchg
enter
test
sbb
gs
test
mov
rcrl
dec
inc
xchg
popf
out
mov
scas
inc
dec
fsts
leave
push
idivl
stos
jne
add
pop
adc
push
pushf
inc
pop
insb
fstps
test
popf
xchg
pop
mov
push
add
sbb
sub
cmp
adc
and
mov
ljmp
pop
pop
notb
xor
cmp
mov
push
out
push
in
lods
sahf
jmp
mov
setg
lahf
ret
imul
ficoms
push
mov
test
add
test
mov
pop
mov
ljmp
jno
jp
mov
sbb
inc
sahf
aam
fucomi
jo
std
mov
pop
xchg
adc
inc
adc
sahf
push
xor
movb
xor
xchg
leave
sahf
cmp
sbb
and
rcll
fcoml
dec
xlat
lahf
inc
push
call
and
rorl
sub
subl
ja
nop
adc
bound
pop
adc
daa
mov
mov
sbb
cmpsl
jp
loopne
icebp
ret
inc
test
je
push
mov
sub
push
lret
mov
inc
sahf
pop
xlat
daa
cmpsl
adc
in
hlt
and
test
cwtl
mov
mov
stos
sub
fcoms
pop
inc
es
pop
std
cs
adc
fbld
out
mov
nop
iret
fsts
xchg
adc
sahf
nop
xor
xor
inc
sub
pop
lahf
cmp
or
sahf
ljmp
jmp
push
fwait
sahf
pop
xor
jl
push
cli
popa
push
in
xor
fcoms
xlat
inc
xor
add
inc
add
xchg
push
pop
jecxz
movsl
sahf
test
adc
rorl
es
cltd
pop
outsb
nop
add
aam
movsb
lahf
addl
out
popa
add
push
out
repnz
jle
mov
mov
mov
xchg
and
jae
jle
lock
outsb
lcall
push
cmp
jg
ljmp
cmpsl
je
scas
jmp
pop
mov
mov
into
dec
cmp
xor
sub
pop
cwtl
inc
mov
pop
pop
mov
ret
scas
xor
repnz
aam
sub
sarb
notrack
test
mov
es
cmp
mov
cmp
pushl
int3
mov
push
jle
push
das
enter
ds
lahf
rcrb
fs
pusha
sbb
call
test
mov
xchg
mov
sar
pop
sahf
aas
mov
sbb
fcomps
cmp
add
movsl
pop
inc
xor
inc
pop
bound
add
sbb
mov
out
adc
and
or
xchg
nop
bound
adc
mov
flds
pop
jns
pop
and
pop
pop
cwtl
cmp
sub
mov
cmpsb
andl
sub
sub
add
flds
ret
cwtl
je
cmpl
xlat
push
iret
test
mov
scas
nop
sub
jp
call
and
and
and
add
addb
and
jns
pop
xchg
jno
stos
call
repz
fistpll
pop
sub
jle
jbe
outsb
scas
data16
pop
cmpsb
push
cmpsb
dec
cmpsb
inc
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
push
cmpsb
push
cmpsb
push
cmpsb
push
cmpsb
cmpsb
mulb
iret
cmpsb
stos
cmpsb
popf
cmpsb
test
pop
cmpsb
sbb
scas
cmpsb
pushf
sub
subb
orb
push
jns
pop
scas
aas
repnz
xlat
mov
mov
xorb
xlat
mov
sub
mov
cmp
jno
cmpl
mov
xlat
pop
iret
or
mov
bound
push
sub
es
and
and
sbbb
rolb
sbb
int
and
mov
test
lcall
add
push
add
add
add
add
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
jns
pop
mov
movsb
pop
je
sbb
in
lahf
jns
pop
mov
jnp
push
rorl
jmp
add
lcall
cwtl
es
push
sbb
xlat
jne
xor
dec
jmp
in
pop
fnstsw
int
mov
adc
sbb
jo
dec
aad
or
sbb
mov
jns
pop
xchg
cmp
jnp
mov
insw
cmp
push
sbb
fwait
sysenter
xchg
fisttps
xor
call
data16
gs
mov
and
xor
subl
and
push
mov
enter
jnp
pop
scas
push
fdivs
inc
cmpsl
shll
cmp
cltd
lea
bound
popa
lds
ljmp
push
xor
add
push
add
sbb
pusha
cs
jns
pop
lret
sbb
add
or
das
push
stos
xchg
xor
mov
adc
add
jecxz
or
xchg
lods
shrd
shrl
es
pop
outsb
scas
stos
and
sbb
mov
mov
pop
mov
shll
and
jnp
fs
arpl
pusha
out
repnz
rcrb
popf
andb
or
xor
adc
add
cs
cmpsb
cmpsb
pop
cmpsb
dec
cmpsb
aas
cmpsb
xor
or
jecxz
shll
dec
push
inc
push
jae
cmpl
add
subb
adcl
add
add
add
add
add
imul
add
lret
sbb
jns
pop
int3
cmp
fistpl
or
or
or
push
jns
fwait
cmpsb
pop
cmpsb
dec
cmpsb
or
adc
inc
hlt
mov
mov
mov
adc
mov
and
or
fs
arpl
and
sbb
or
out
arpl
imul
mov
mov
pop
add
loope
rol
cmp
stos
scas
or
out
sub
mov
popa
lods
xchg
push
sub
push
test
push
shlb
fistpll
push
iret
inc
jnp
stos
sbb
into
mov
xchg
mov
imul
sub
add
mov
push
cmpsb
inc
cmpsb
sub
loop
lret
jnp
test
and
inc
cmp
in
cmpb
outsl
dec
roll
fstp
and
push
out
push
cmp
lahf
ja
shll
lret
mov
add
push
adc
rol
xchg
jns
dec
pop
loopne
aam
mov
cltd
std
cmp
into
es
gs
cmp
fucom
insb
je
cs
sbb
ljmp
out
xlat
ds
inc
push
pop
adc
not
in
rclb
adc
mov
mov
sbb
mov
lods
mov
push
or
sub
lret
andl
pusha
std
popa
lret
xchg
xchg
xor
dec
xchg
adc
pop
xchg
cmp
adc
leave
xchg
or
mov
push
stc
adc
jns
fcompl
cmp
or
xchg
cs
negb
es
ds
iret
mov
scas
mov
cmpsb
fbld
mov
clc
scas
mov
cmpsb
xchg
cmpsb
jnp
mov
jecxz
xlat
mov
mov
iret
cltd
mov
cmp
sti
in
pop
pop
test
jbe
outsb
std
data16
push
mov
scas
inc
movsb
push
lcall
popa
xchg
cmp
popf
push
xor
shll
ss
xchg
int3
xor
pop
pushf
xor
dec
mov
xor
shrb
sub
js
pop
gs
fs
adc
and
and
and
inc
and
and
and
and
and
and
and
and
and
pusha
sbb
bnd
dec
mov
ds
daa
imul
jle
pop
into
inc
cmp
gs
nop
jl
or
sbb
xor
or
dec
frstor
int
mov
mov
mov
push
and
xor
add
sub
cltd
jle
pop
jnp
scas
movsb
int
mov
mov
data16
aas
inc
sti
or
mov
push
in
and
pusha
into
fists
ds
xlat
std
int
cmp
xlat
push
iret
add
mov
mov
scas
daa
stos
sbb
ss
jle
cltd
jns
pop
jge
pop
sbb
xlat
and
leave
cmp
pop
mov
and
adc
cld
outsl
outsl
adc
mov
stos
sbb
jp
push
and
frstor
mov
adc
lret
cmpb
add
cmp
sbb
or
xchg
sub
and
inc
dec
jg
shll
inc
mov
jnp
cltd
lahf
jnp
jno
arpl
pop
mov
pop
pop
dec
or
mov
mov
andl
xor
imul
mov
cmp
mov
sbb
cs
pop
and
or
pop
sub
inc
and
and
cmp
jg
xchg
fst
iret
subb
and
add
cmp
ljmp
add
mov
xor
notl
outsb
dec
mov
sub
sbb
or
repnz
jno
nop
into
cmp
dec
sti
sysret
mov
add
xor
push
sub
xor
push
or
sbb
out
push
jnp
popf
push
rcrl
fistps
pushf
mov
shll
andb
data16
push
popa
add
mov
popa
addr16
pop
popa
push
popa
dec
jae
add
aaa
or
mov
stos
popf
cmpsl
addr16
pop
out
das
add
add
add
jns
pop
cmp
sbb
stc
push
fildl
int
imul
inc
sub
data16
jbe
pop
and
cli
popa
in
mov
popa
jne
aas
dec
js
xor
pop
rolb
add
addl
xor
push
or
push
push
adc
xlat
out
jns
xor
xor
iret
add
in
mov
cs
mov
mov
clc
push
xchg
scas
sub
lock
out
xchg
int3
xchg
test
mov
mov
mov
scas
xchg
imul
jno
and
push
inc
dec
cmp
popa
sub
popa
out
das
push
mov
mov
in
cmp
enter
mov
popf
sub
or
sbb
insb
and
push
icebp
testl
outsl
jg
lret
mov
dec
cmpl
punpckhbw
data16
insb
gs
jp
xchg
out
add
jp
xchg
cs
push
jmp
lods
pop
jp
xchg
dec
and
pop
xor
sub
and
sbb
adc
stc
mov
inc
jle
sub
push
jp
dec
jae
scas
sub
data16
push
dec
insb
out
push
pop
scas
ja
cmpl
fiadds
mov
jg
dec
and
cmp
xlat
or
mov
dec
gs
jp
add
add
sub
ds
popl
ja
aas
push
xchg
mov
ds
push
int
mov
lods
ljmp
mov
scas
xchg
das
mov
scas
out
cmpsb
scas
jae
data16
gs
ljmp
pop
jg
mov
cmpsb
xchg
idivb
stc
push
sbb
decl
add
lahf
outsl
es
and
dec
and
aas
nop
cmp
shll
rcrl
xlat
pop
fildll
pop
cmpsb
mull
cmpsb
mov
cmpsb
cmpsb
xchg
push
xchg
xchg
inc
xchg
and
push
cmpsb
idivb
add
adcb
shll
xchg
outsl
andb
adcl
dec
aaa
shrl
aad
stc
sub
mov
mov
inc
lahf
push
xlat
nop
xchg
sarl
push
xchg
push
sub
outsb
and
pop
and
dec
and
ds
mov
nop
jecxz
shl
shr
shl
rcr
leave
nop
out
rol
sarl
push
sub
push
mov
sub
or
adc
sarl
test
aam
inc
test
ljmp
js
pop
sub
and
xchg
sub
shrb
pop
inc
mov
ljmp
push
ds
sbb
cmp
testl
test
pop
addr16
xchg
aaa
or
pop
xor
aas
push
ds
mov
daa
mov
cmp
cmp
aam
pop
sub
aaa
das
dec
bound
test
stos
and
and
pop
stos
imulb
or
push
xor
inc
pop
pop
adc
fbld
inc
es
xor
cmp
leave
add
imul
lods
data16
and
addr16
pop
lock
sub
mov
outsb
lahf
push
xor
in
clc
dec
addl
mov
mov
lcall
ret
adc
jbe
mov
push
cmp
mov
fcoml
shl
mov
cmp
mov
sbb
inc
mov
jecxz
mov
sub
pop
cltd
fadd
sbb
lea
scas
mov
inc
mov
int3
xchg
mov
and
ljmp
pop
rorb
adc
jle
sbb
aam
nop
sub
mov
cmp
cmp
mov
inc
int
arpl
cmpsl
shlb
idiv
mov
sub
adc
push
fcmovnbe
pop
sbb
inc
divl
jbe
sti
jne
push
jle
test
cli
push
pop
push
push
mov
std
test
or
dec
lock
mov
jg
jne
sub
dec
pop
push
mov
jnp
push
xchg
adc
aam
add
rcl
mov
cli
cmpsl
enter
adc
js
inc
jmp
cltd
lods
pop
pop
rolb
pop
push
aaa
mov
mov
push
adc
dec
iretw
mov
sub
les
int
call
pop
in
add
js
out
dec
pop
test
mov
jecxz
lods
pop
ret
push
mov
js
repnz
dec
cmp
movsl
push
shlb
adc
es
mull
push
mov
inc
addr16
xchg
xor
or
addb
mov
cmp
cmp
fsubrs
jle
xor
xor
cmpsl
or
fldt
xchg
nopl
les
fsincos
xor
mov
push
ds
cmp
sub
sbb
xor
jecxz
mov
arpl
shlb
push
push
es
mov
or
negb
cmp
pusha
xor
mov
into
nop/reserved
mov
mov
cmpsl
xchg
mov
addr16
adcl
dec
sbb
dec
cmp
and
sbb
sbb
cli
movsl
mov
push
cmp
or
fwait
rcr
push
add
jle
pop
ljmp
mov
cmpsb
lods
shl
out
sub
xor
stos
ljmp
clc
iret
mov
cmp
pop
cli
push
icebp
dec
in
dec
push
cmp
imull
into
cmp
cmc
jns
mov
sti
push
fucomp
pop
and
push
or
lods
jge
sti
orb
xor
cmpsl
inc
push
sbb
int3
mov
xchg
shlb
mov
jle
insl
push
lock
and
clc
dec
pop
movsl
xor
push
lods
andb
sti
in
mov
sub
sbb
js
adc
in
movsb
push
cmp
arpl
mov
adc
out
mov
and
lods
or
cmp
sbb
adc
out
adc
not
repnz
mov
adc
push
push
and
jl
sub
negb
rorb
push
mov
mov
sbbl
adc
into
xchg
mov
int
xor
adc
pusha
push
pop
push
inc
mov
sbb
sub
or
adc
int3
jle
or
out
scas
loop
mov
aad
pop
dec
push
cmp
and
scas
cmp
dec
push
jg
push
dec
data16
fs
dec
inc
inc
mov
incb
ret
nop
mov
notb
pop
jg
sti
add
lods
lret
add
pop
mov
push
inc
inc
jbe
sbb
mov
clc
loop
test
fs
fimull
push
mov
cmp
adc
into
push
imul
pop
imul
pop
std
rcl
adc
stc
adc
add
cmp
fldenv
pop
mov
lret
insl
shlb
sub
into
mov
pop
sbb
sbb
loop
lock
adc
push
push
enter
inc
or
ret
aam
sti
push
cmp
js
lret
frstor
sbb
sbb
in
mov
mov
mov
lods
push
push
test
arpl
int3
xor
adc
xchg
pop
into
push
xor
mov
int
ja
aaa
repnz
add
cmp
test
ror
jne
push
pop
pop
jge
js
jg
mov
loop
mov
inc
stos
or
dec
pop
push
enter
push
mov
sbb
jg
lds
je
push
jg
sub
dec
push
adc
mov
mov
lahf
dec
inc
cmp
push
rolb
add
test
cmp
mov
cmpb
pop
xor
imul
cmp
inc
sub
sti
jae
xorl
pop
sub
ss
outsb
ljmp
mov
or
mov
stos
push
in
jg
mov
pop
shlb
inc
scas
sub
imul
mov
inc
and
ss
jp
popf
xchg
jecxz
adcl
rcll
mov
add
pusha
pusha
movb
pop
orb
ja
test
jns
fsubr
sub
sub
or
sbb
ja
inc
inc
fidivl
loope
insb
inc
out
icebp
and
mov
hlt
fstpt
sub
jbe
lret
jb
jle
sub
and
pop
mov
addr16
leave
clc
enter
mov
lcall
ds
xor
fmuls
mov
dec
cmp
fimull
sahf
loopne
clc
mov
push
dec
and
pop
divb
clc
icebp
xchg
and
mov
enter
daa
in
ficoms
jmp
loop
push
daa
aam
es
xchg
aas
lcall
xor
std
pop
in
sbb
call
sub
loope
hlt
pop
cmpsb
mov
lds
xor
pop
inc
cmp
es
jle
lods
xor
out
push
mov
nop
bound
roll
ss
xor
bnd
inc
xor
cltd
xchg
push
dec
sub
jb
cld
push
push
out
das
dec
pop
hlt
xor
jbe
lea
push
sbb
pop
sub
adc
stos
mov
aad
fs
ds
push
nop
and
pop
loope
xor
cmp
insb
aad
add
into
inc
fisubl
dec
or
mov
adc
mov
xchg
sbbb
js,pt
mov
mov
sub
into
bound
jp
addr16
pop
push
xlat
sub
pop
add
and
add
mov
push
fs
mov
or
mov
mov
mov
cltd
sarb
aad
jle
cs
add
push
jns
jo
mov
jg
push
wrmsr
mov
das
mov
jg
inc
push
add
inc
ljmp
push
jnp
add
push
into
sub
out
xor
cmp
stc
addl
sbb
mov
fisubl
faddl
mov
fs
fcoms
rorl
sbb
lods
mov
adc
stos
mov
xlat
xchg
push
popf
dec
mov
xor
cltd
xor
fdivl
rol
jo
jo
inc
sbb
inc
sbb
loope
xor
inc
movsl
xor
leave
into
fbstp
mov
or
andl
nop/reserved
pop
push
movsl
sub
rol
inc
push
pop
pushl
lods
dec
lods
pop
sub
pushf
ljmp
ss
insl
incl
or
push
sub
ja
enter
mov
mov
push
aad
push
repnz
pop
fadds
xchg
dec
jp
in
out
add
xor
aam
and
pop
orl
jmp
dec
js
test
es
stos
stc
cli
dec
cmpsl
aad
dec
add
loop
or
or
imul
addr16
jge
imul
inc
hlt
clc
int
xchg
popf
dec
mov
or
add
xlat
sub
dec
dec
ljmp
mov
imul
jle
mov
fsincos
jp
sarb
cmp
ret
sbb
repz
shll
jb
jb
adc
jnp
add
test
push
aas
mov
xor
mov
fsubl
call
xor
inc
xchg
scas
pop
aam
stos
mov
test
add
clc
push
adc
inc
mov
into
mov
and
jl
pusha
dec
sub
add
scas
aam
fdivrs
mov
sti
aad
cmp
xchg
jbe
lret
test
xor
inc
or
aam
add
mov
inc
rolb
mov
cmpsl
add
or
rolb
jmp
or
mov
push
cmpsb
cmp
sarl
xchg
fwait
and
sahf
aas
sub
ss
pop
or
mov
lea
imul
into
inc
out
xchg
jnp
xor
rorb
sub
cmp
pop
add
jp
or
fnstsw
mov
mov
jb
int3
aam
mov
lret
dec
ja
ja
push
add
add
repz
push
mov
add
inc
or
idivl
cmp
jg
sbb
cmp
inc
pop
xor
cmp
into
and
mov
cmp
adc
jp
jne
or
sub
jge
inc
and
xor
cld
shll
inc
xchg
pop
dec
daa
fidivl
out
pop
and
cmp
mov
fistl
pushf
addl
movsb
imul
xlat
add
add
xchg
aam
cmp
fwait
xor
mov
cwtl
inc
mov
mov
fidivs
xor
pop
mov
sub
ret
js
cmp
or
cmc
and
in
jnp
or
cs
inc
pop
jmp
pop
add
push
cmp
sub
ss
cs
and
xor
push
inc
idivl
mov
inc
add
sbb
ret
jecxz
outsb
ficompl
pop
push
sbb
dec
jl
jae
call
cmpsb
sub
stos
sbb
jns,pn
clc
pop
push
adc
gs
xlat
push
xchg
les
mov
push
dec
mov
adc
adc
dec
pop
push
iret
adc
xchg
push
fwait
enter
jns
mov
inc
jne
dec
mov
dec
inc
bound
jg
mov
mov
jmp
pop
out
lds
int3
rcrl
cmp
xlat
jmp
jecxz
mov
xor
sub
cs
cmp
sbb
cmc
in
outsb
ret
dec
pop
test
hlt
jle
adc
jnp
sbb
sbb
mov
and
mov
inc
dec
cmpsl
jne
ja
xlat
insl
cmp
idivl
ss
xchg
jecxz
inc
push
repz
inc
pop
shl
std
test
adc
aad
sbb
sub
mov
add
fucompp
ss
jecxz
cmp
push
xchg
shrl
gs
sbb
sub
mov
gs
push
xor
sub
and
and
imull
inc
popa
nop
iret
push
lock
add
gs
jbe
mov
lret
std
cmp
aaa
ds
dec
ret
jae
inc
and
call
sbb
xor
cli
int3
pusha
aaa
das
jmp
push
xor
mov
jns
frndint
add
imul
mov
aaa
icebp
dec
dec
clc
or
sub
lret
call
out
sti
mov
mov
ja
or
enter
mov
ret
xchg
arpl
pop
sub
pop
insl
mov
cmp
ret
push
bound
xchg
inc
out
mov
sub
push
pusha
andl
xor
aaa
cmp
dec
fiaddl
xor
in
stos
and
jmp
xchg
dec
in
clc
fisubrl
int3
adc
dec
in
cs
xor
inc
xor
mov
mov
fldenv
icebp
jg
inc
stos
sbb
and
mov
aaa
xchg
addr16
or
inc
jnp
dec
and
lret
or
mov
stc
test
push
and
push
rcrb
jae
dec
sti
cli
insl
sbb
loop
jnp
adc
shrb
lcall
pop
mov
cmp
adc
fs
addr16
cmpsb
sub
push
daa
sti
gs
loop
clc
jmp
push
out
sbb
dec
pop
stc
les
leave
int
stc
icebp
cmp
leavew
and
aad
dec
sub
add
jno
lock
mov
lret
int
push
mov
mov
inc
inc
mov
and
sub
ret
imul
add
daa
xor
repz
dec
das
pop
mov
popa
push
sub
std
aad
jmp
add
fxch
push
jae
in
es
sub
push
jns
jbe
ss
mov
push
push
jmp
jne
xchg
push
cld
ror
insb
jp
int
mov
jne
popf
jp
das
repnz
push
cmp
daa
stc
stos
jb
gs
push
in
popa
push
aad
ljmp
dec
xchg
lret
xor
xchg
cld
daa
dec
mov
iret
xor
pop
call
scas
outsl
call
lret
push
mov
notb
mov
cld
mov
aad
lea
xor
mov
add
sahf
cli
clc
out
adc
push
xor
push
daa
sbb
xor
sbb
or
mov
gs
inc
cmp
xor
lcall
sbbl
jns
or
mov
mov
inc
xchg
dec
push
in
adc
cltd
mov
or
and
push
je
push
jmp
lcall
cmpsb
sub
leave
mov
int3
test
or
dec
mov
call
ljmp
xchg
shlb
sbb
mov
stos
cmp
gs
cmc
sti
or
mov
xor
jnp
jmp
inc
xor
xor
push
subb
inc
shlb
mov
mov
cmp
jns
jmp
pop
loopne,pn
imul
or
push
push
cld
add
pop
std
movsb
inc
and
and
mov
stos
mov
stos
mov
stc
mov
pop
ret
int3
cmp
add
cli
mov
idivb
fbld
insl
outsl
rcll
xor
push
call
cmp
lret
push
mov
or
fidivs
dec
dec
ret
cmc
fdivrp
inc
pop
mov
lods
cmp
cmp
lods
mov
cmc
and
jnp
fdivr
mov
push
and
mov
mov
or
mov
shlb
repnz
loope
push
rcrl
jle
lret
xlat
cli
add
sarl
mov
push
data16
repnz
and
andl
outsb
aaa
pop
or
lods
push
lods
jae
stos
add
xor
push
ss
std
xor
jae
into
dec
cmc
or
mov
jmp
adc
push
stos
leave
adc
leave
jp
loopne
nop
fwait
cmp
cmp
int3
cmp
jb
scas
int3
jno
sub
cmpsl
repnz
push
push
inc
xor
int3
mov
test
ljmp
inc
add
add
pop
fsubrl
adc
mov
js
shl
pop
arpl
jne
divb
inc
iret
scas
inc
jecxz
clc
es
xchg
enter
or
ljmp
cmpsb
gs
lret
push
gs
sbb
imul
mov
stc
sti
inc
bound
in
hlt
mov
ret
xchg
sti
inc
jp
push
xor
push
add
lret
inc
cmp
clc
cmp
mov
sti
add
aad
es
add
sbb
insl
mov
loop
mov
mov
inc
mov
int3
sub
inc
rcl
sub
lods
push
cmc
call
push
mov
mov
in
mov
lods
lret
sti
shrl
aam
sahf
shll
es
mov
sbb
or
mov
add
hlt
into
adc
shll
mov
push
mov
mov
pop
jl
div
clc
or
cmp
out
adc
ds
dec
mov
cld
add
or
adc
sub
aam
xor
sbb
push
add
repnz
testb
pop
movb
cmpsl
enter
fmull
mov
mov
adc
mov
xlat
ss
push
dec
dec
ja
xchg
cwtl
pop
cli
cs
inc
lcall
cmp
push
mov
repnz
xor
sub
lret
add
sbb
sahf
or
enter
loope
adcb
push
cs
cs
fidivrs
mov
pop
mov
fnstsw
mov
data16
into
test
shlb
cwtl
mov
lret
mov
xchg
add
or
xchg
fimuls
sbb
lret
xor
fdivr
fcompl
lock
sbb
add
sub
xor
in
imull
dec
rorb
xor
cs
out
pop
ljmp
dec
enter
cmp
popf
outsb
fmuls
stos
int3
lahf
addr16
dec
push
lock
les
sahf
lods
clc
into
add
enter
rcll
jbe
mov
or
out
mov
mov
add
repnz
addr16
arpl
lods
hlt
in
sbb
out
pop
pop
mov
adc
adc
addr16
cld
mov
das
mov
lret
les
mov
add
mov
adc
and
xchg
or
ds
fs
cmp
enter
sbb
ds
ljmp
lock
or
aam
mov
addr16
leave
sub
out
or
stos
xchg
ds
orb
pop
push
inc
xor
hlt
mov
mov
pushf
rolb
dec
cmp
ficoms
lods
adc
into
sarl
lahf
scas
aam
sbb
or
sbb
mov
or
jg
test
addr16
lret
pop
mov
ljmp
mov
popf
outsb
adc
fmulp
notb
mov
xorb
lcall
mov
pushf
nop
cmp
scas
cmc
rorb
pop
lahf
adcl
xorb
cld
rcl
pop
into
lock
testl
or
xchg
pop
out
pop
xor
inc
and
lock
fiaddl
into
mov
sub
pop
scas
lret
lock
ds
inc
or
nop
outsl
fdiv
sbbl
hlt
sahf
int3
into
or
add
dec
fidivrl
negl
xor
mov
push
ss
clc
lahf
pushf
inc
aam
push
xor
add
stos
imulb
out
and
or
or
push
lods
sbb
or
in
cmp
mov
ljmp
sbb
fcompl
sbb
clc
nop
mov
adc
adc
sub
xor
lods
mov
shrb
or
add
sub
testb
push
or
mov
push
or
add
lods
pop
lods
xor
xchg
dec
pusha
popa
cmp
sbb
out
rolb
into
and
std
dec
cmc
sub
dec
cld
outsl
add
les
ret
cs
fcompl
lret
sbb
ss
mov
cli
lcall
sbb
lahf
mov
orb
mov
xchg
mov
xor
popf
or
cmp
cs
ds
sbb
sbb
jp
mov
ljmp
add
cli
outsl
in
mov
push
scas
lahf
lea
cmp
jg
stos
stos
nop
clc
lock
add
and
mov
sbb
push
dec
clc
lret
andb
mov
adc
nop
into
shlb
add
lret
fs
sbb
push
lea
add
cli
cli
fcompl
enter
xor
ret
jno
sbb
or
mov
push
mov
out
ss
push
dec
cmc
and
mov
imulb
mov
test
sub
push
adc
lret
scas
and
fiaddl
ret
insl
into
fmull
or
push
rcll
rcrl
outsl
mov
imul
aam
stos
fiaddl
addr16
mov
sub
inc
aam
subb
mov
add
stos
aas
pop
sti
out
jle
cltd
xor
out
loope
inc
data16
add
jbe
icebp
aam
stos
pop
jp
and
mov
or
jmp
repz
lret
test
mov
sub
aaa
lods
aaa
xchg
push
cltd
icebp
out
bswap
add
outsl
jmp
test
mov
jg
xchg
add
mov
negb
fimuls
pop
unpcklps
mov
cld
mov
rolb
lods
mov
lds
lea
andl
dec
stos
xchg
sbb
mov
push
sbb
adcb
sarb
jb
or
xchg
lret
sbb
sbb
add
adc
sbb
lods
sbb
stos
loopne
or
testb
mov
cmc
push
mov
hlt
addr16
adcl
clc
stos
outsb
imul
test
mov
cmpsb
int3
jg
jbe
cmp
push
fdivl
lods
push
sub
and
nop
out
cld
in
xor
jne
mov
sbb
cmp
scas
cmp
xor
cli
hlt
repnz
mov
shlb
push
mov
sbb
sahf
or
enter
sbb
rorb
pusha
cli
sbb
mov
push
js
sbb
push
inc
fdivr
adc
shlb
pusha
pop
lahf
or
mov
cltd
mov
mov
or
cld
sub
add
lahf
mov
mov
fmull
lods
out
in
mov
xor
cmp
lods
fcomp
rolb
mov
xor
pop
adc
mov
rcrb
sbb
in
addr16
aam
lahf
arpl
mov
adc
sub
xor
lods
icebp
sub
adc
adc
into
cs
scas
adc
sbb
out
mov
xor
fcoms
in
jp
mov
adc
cmp
jae
jp
insb
stos
pop
ljmp
idivb
jo
sbb
mov
adc
decb
mov
sbb
ficoml
cs
hlt
xchg
xor
push
nop
aam
adc
popa
mov
cmp
cmp
mov
or
adc
xor
repnz
mov
adc
add
int3
push
out
ds
aam
push
fisubrl
adc
lock
jb
sarb
lods
stos
xchg
or
fdivl
lahf
sbb
sbb
or
fidivs
ds
mov
ret
and
cmp
in
fdiv
or
cs
fiaddl
mov
xchg
xor
lret
mov
scas
cld
pop
jnp
push
cmpsl
xor
dec
outsl
push
ret
ljmp
aam
in
mov
sarl
fdivrl
cmp
fisubl
mov
xor
fsubl
xor
sbb
jg
out
ret
shlb
mov
stos
sahf
icebp
testb
clc
adc
pushf
dec
out
sub
add
rolb
or
repz
ret
data16
lock
cs
dec
sahf
lret
in
test
daa
nop
pop
lods
xchg
push
mov
lods
aas
mov
dec
and
mov
cmp
lods
lcall
add
xchg
in
ds
loope
pop
ret
scas
lods
sti
negl
push
jae
lcall
adc
or
fimull
popl
cld
ret
idiv
push
ds
fwait
sub
inc
scas
outsl
imulb
adc
xchg
addl
les
shlb
mov
ds
lahf
mov
adc
or
cmp
add
cld
mov
out
div
jo
jbe
sub
sbb
fcomip
aam
or
cmp
cwtl
cmp
or
sarl
pop
xor
divb
ljmp
add
lcall
xchg
out
mov
fidivl
cmp
scas
jbe
sti
out
fdivs
pop
sarb
mov
xor
mov
repnz
inc
mov
enter
ss
sbb
dec
cld
scas
push
add
pushf
pop
add
sbb
ret
repnz
rcrb
push
xor
xchg
sbb
fmuls
fwait
subb
aam
sbb
xchg
mov
shlb
lret
inc
into
sub
xlat
addr16
pop
mov
fdivr
dec
mov
xor
sub
cmp
ds
xchg
fsubrl
mov
test
jno,pt
push
lcall
cmp
cs
push
xchg
scas
aas
repz
roll
xor
add
jp
jp
test
pop
lea
ror
cmp
imulb
das
std
rcrl
enter
cmpb
xchg
fdivr
jmp
aas
xchg
and
shlb
inc
in
out
ljmp
into
clc
nop
in
sbb
enter
inc
sbb
jg
stos
mov
cmp
dec
cwtl
sbb
lock
das
add
mov
enter
xor
dec
sub
and
cwtl
les
cli
add
push
jnp
clc
mov
cli
adc
rcrb
clc
sbb
int3
jmp
addr16
push
or
cmp
in
add
sub
out
pop
xorb
sub
into
scas
clc
or
aas
ret
mov
xor
inc
std
jne
scas
and
rolb
nop
adc
ljmp
int3
lods
and
mov
loopne
lret
xchg
sar
or
or
ds
sti
mov
adc
sahf
cmp
scas
cmp
mov
jbe
testb
std
stos
jb
int3
cmp
adc
les
lds
sub
adc
cli
xlat
out
fbld
fs
lcall
ficoml
in
addb
js
nop
mov
shr
mov
iret
push
ret
mov
cmp
popf
mov
or
inc
aaa
sahf
clc
lock
add
dec
mov
int3
fcompl
in
out
sbb
lods
iret
ljmp
addb
rcl
pushf
sbb
xor
cs
pop
pop
lcall
mov
fs
repnz
mov
cvtps2pi
and
rcrb
adc
rcr
dec
enter
push
stc
xchg
cli
sbb
mov
orb
fsubs
rclb
cmp
les
jle
mov
imull
jnp
lret
sub
mov
mov
mov
bound
cmpb
rcrb
scas
xor
xor
push
push
sbb
int3
xor
dec
bound
sub
shl
sbb
and
stos
add
fisubl
push
mov
addr16
sbb
add
sbb
insl
cld
sbb
mov
cmp
cmp
adc
xor
out
dec
cli
and
cs
sti
xor
cmp
push
dec
lods
mov
or
arpl
add
sbb
xor
les
out
cmp
lods
sarb
pusha
stos
aam
push
add
cwtl
shr
sbb
icebp
xor
cmp
cli
lahf
ljmp
inc
sti
cmpl
xchg
cmp
xabort
call
jg
lods
ds
hlt
pop
addr16
stos
int3
push
shrb
lea
loopne
or
lods
ficoml
cmc
and
cmp
aam
sub
adc
div
sub
ret
mov
sbb
mov
jg
and
add
add
cld
out
aam
leave
mov
dec
xor
sbb
ljmp
lock
add
popf
jge
icebp
sbb
pop
push
cmp
fs
xor
push
ret
enter
addr16
sbb
clc
fcmovnu
test
scas
cli
fsubrs
mov
ljmp
pop
xor
mulb
cmp
sbb
sbb
add
xor
ds
ds
aaa
xor
mov
cmp
lods
push
mov
sbb
out
icebp
in
push
xchg
push
adc
adc
sbb
dec
stos
xchg
or
rorl
and
xorl
ret
or
mov
adc
fsubrs
jbe
into
stos
sub
push
adc
add
jnp
and
push
lret
sbb
sbb
cs
dec
rorb
mov
ljmp
sbb
cmp
cmp
push
pop
pop
lret
mov
lock
ljmp
pusha
xchg
jno
cmpb
out
into
push
sbb
inc
addr16
imull
lcall
mov
fnsave
ds
sbb
jne
aam
inc
js
sahf
xor
int3
les
rorl
add
in
cmp
sti
fstl
xor
dec
lea
adc
sub
gs
fsubrs
imul
fwait
mov
clc
mov
dec
lahf
push
out
inc
nop
mov
inc
arpl
xor
js
lcall
fcoml
lds
or
or
sar
add
push
mov
clc
xor
insl
fisubrs
mov
addr16
push
cmpl
fdivrl
push
cmp
enter
call
mov
pushf
pop
ss
ds
lods
pop
popa
repnz
push
push
xor
push
cmp
pusha
jb
sahf
cmp
enter
push
or
jae
or
add
int3
js
or
xchg
cmp
ljmp
clc
or
inc
adc
jne
push
ds
not
mov
fs
out
xchg
adc
cmp
xchg
push
or
nop
ljmp
push
lods
fistpl
mov
xor
adc
cmp
push
mulb
aam
fdivs
pop
sbb
push
xchg
mov
pusha
or
rolb
cld
popf
mov
ficoms
inc
in
mov
mov
or
xor
mov
fdivrl
push
xor
xor
scas
fsubrl
repz
cwtl
mov
push
push
push
ljmp
and
in
fdivl
mov
pop
jo
sahf
mov
int3
push
sbb
iret
js
jo
bound
fwait
jo
leave
adc
inc
xor
pusha
les
ljmp
inc
dec
mov
lret
cltd
test
cli
fadds
lods
xlat
int3
add
les
xchg
clc
fidivrl
cmp
mov
in
fisttpl
xor
cmp
add
mov
xor
mov
pop
lret
sub
repz
push
push
shl
xchg
pop
or
das
pop
dec
sbb
jecxz
mov
fidivrl
xor
dec
sub
cmp
int3
pop
lret
lahf
sarl
push
repnz
lret
or
mov
mov
enter
push
xor
fistpll
dec
aam
push
mov
mov
inc
in
mov
pop
sarb
mov
lods
inc
scas
lock
sahf
mov
fcoms
stos
aas
mov
int3
sahf
ss
mov
imul
mov
out
cmp
push
repnz
lock
and
push
xchg
addr16
inc
mulb
sub
dec
or
lahf
xchg
cmp
sbb
adc
mov
pop
pop
pop
cld
push
shl
nop
cli
xor
ss
rcrl
shl
mov
cmp
mov
in
jp
lods
mov
cmp
fwait
push
xor
loop
cmpb
hlt
pop
ret
ljmp
mov
mov
adc
inc
insb
add
push
and
xlat
repnz
xlat
mov
into
mov
push
inc
or
aas
lret
cli
ljmp
pop
push
xor
push
mulb
mov
scas
les
in
ljmp
xchg
adc
mov
es
fsubrl
std
adc
fdivrp
movsl
cs
aas
subb
stos
xor
mull
cmp
sar
pop
mov
lock
cmp
push
int
push
sbb
js
rcrb
sub
mov
sub
mov
mov
jno
shrb
mov
int
xchg
or
rclb
loop
in
nop
cmp
sub
xchg
mov
mov
lcall
sbb
or
xchg
dec
gs
pop
inc
mov
pop
inc
clc
sbb
popf
clc
or
mov
inc
ljmp
ds
ret
adc
hlt
mov
mov
ds
mov
ret
xchg
mov
ds
ljmp
aad
or
stos
out
inc
mov
cli
test
sbb
xor
inc
sub
push
cli
adc
mov
int3
shlb
cmpsb
fdivr
shrl
pop
sarb
jg
mov
adc
sbb
inc
out
or
xor
out
sub
cs
hlt
rolb
clc
cmpsb
bound
sti
scas
insb
jnp
sbb
idivb
mov
push
sbb
xchg
adc
rolb
pop
push
pop
mov
iret
jp
fwait
daa
mov
ljmp
add
adc
push
jg
jg
push
inc
xor
ja
sub
iret
repnz
outsl
sarl
pop
inc
out
cs
outsb
adc
clc
or
inc
mov
cwtl
int3
mov
out
das
mov
into
cwtl
mov
repz
xchg
repnz
fstpl
push
into
jg
mov
add
aaa
cli
sbb
outsl
and
int3
sub
fimull
inc
aam
mov
adc
adc
cmc
mov
sub
aam
sbb
cs
cmp
xchg
rcl
lock
in
mov
loop
mov
shrl
sub
cld
gs
cmp
scas
adc
mov
or
xchg
pop
mov
lods
repnz
rcr
push
cmp
mov
scas
xchg
data16
push
negb
jge
cmp
adc
sub
ds
add
xlat
xchg
scas
cmp
push
xlat
add
inc
mov
mov
cli
inc
clc
sbb
js
aas
sub
jg
aas
jne
mov
dec
cli
aas
es
or
pop
push
push
add
in
lahf
aad
sbb
push
mov
push
ret
cmp
call
shr
sbb
cld
iret
dec
fisttpl
out
inc
std
fiaddl
fidivrs
mov
cwtl
add
lods
mov
ljmp
into
aaa
out
mov
ljmp
sbb
sbb
add
add
call
mov
clc
sbb
aaa
enter
lock
int
xchg
adc
lahf
lret
rolb
push
out
or
cmc
cmp
decl
push
popf
or
add
adc
std
les
jbe
cld
push
push
mov
lods
sbb
addb
sar
rclb
xor
xor
adc
and
mov
es
push
xchg
ret
jg
pop
inc
mov
in
mov
push
dec
lret
loop
push
outsl
sbb
out
sahf
fcmovbe
das
fidivl
xor
dec
mov
sbb
cs
fidivrs
or
xor
push
mov
xchg
dec
mov
lcall
adc
or
adc
sbb
int3
clc
push
inc
ljmp
cli
or
fsubrs
fidivrs
sub
sbb
sub
int3
hlt
mov
shlb
sbb
ljmp
xchg
lock
mov
or
jle
xor
leave
jp
leave
push
cmp
xorl
sub
xor
xchg
push
cmp
mov
shl
dec
inc
scas
cmpl
scas
in
out
add
sub
and
push
rorb
add
test
mov
rolb
xlat
int
adc
xchg
les
sti
clc
mov
dec
cwtl
rol
mov
or
addr16
js
mov
pushf
inc
inc
scas
adc
sti
sbb
ljmp
subl
stc
aaa
out
adc
push
or
or
pop
lret
and
repnz
add
enter
or
lock
pop
mov
es
sbb
test
push
into
mov
pushf
mov
or
dec
shll
rcll
ds
add
lods
or
dec
ret
ret
mov
cmpsl
cmp
push
in
or
decb
out
push
or
push
xchg
shr
add
mov
aam
jo
mov
and
pop
lods
ss
cmp
int3
jb
sbbb
push
mov
fcmovbe
sub
and
adc
or
jno
ljmp
scas
fsubrs
push
bnd
sbb
roll
mov
mov
sub
out
inc
stos
push
pusha
sbb
push
stos
sbb
jecxz
cli
mov
dec
xor
popf
jecxz
aad
daa
dec
push
lods
daa
movsb
lret
fstpt
dec
out
test
mov
mov
mov
adc
push
mov
push
fiaddl
xor
cld
mov
or
adc
dec
ds
inc
movsl
xor
pop
iret
ficompl
lret
popl
add
hlt
or
xchg
iret
sbb
or
or
lret
repnz
sbb
out
jne
mov
enter
repnz
sbb
cmp
mov
popf
aam
adc
ss
out
cmp
les
aas
pusha
or
mov
pop
sbb
fmull
inc
pop
pop
mov
ret
sbb
aam
mov
cmpsl
push
loope
xorb
cmp
sbb
lret
cltd
nop
sbb
fwait
jle
mov
inc
adc
jg
fs
inc
stc
sarb
sti
push
jo
addr16
idivb
pop
mov
push
pop
sbb
fs
lods
in
add
sahf
wrmsr
out
add
pop
or
adc
gs
es
push
sbb
fdivl
sbb
out
xchg
xchg
fstp
mov
xchg
mov
enter
in
mov
shrl
or
aad
pop
aad
adc
enter
sarl
mov
inc
sbb
lea
mov
push
jecxz
inc
fwait
sub
neg
cmp
mov
inc
addr16
xchg
push
aas
jo
or
pop
xor
into
aam
scas
add
add
sti
aas
daa
jg
mov
push
inc
sbb
out
clc
stos
xor
inc
cmp
int3
lods
sti
stos
cmp
stos
outsb
cld
repnz
jnp
adc
push
lahf
pop
add
or
shlb
add
sub
add
adc
cmp
fcmovnbe
fiaddl
sbbb
arpl
cmp
shll
fsubs
divb
or
jmp
cmp
mov
lret
rclb
mov
cld
pop
sub
mov
hlt
or
jo
pop
das
jle
jne
stos
orl
cmp
rcl
ja
sbb
ds
int
push
roll
lock
mov
popf
add
sbb
fdivl
ljmp
aad
ds
or
xor
and
outsl
cmp
out
adc
into
stos
sub
fistpl
xor
mov
js
mov
lret
jae
mov
mov
sub
jmp
lods
in
scas
jno
fdivl
fs
cs
into
pusha
sbb
in
cmp
mov
scas
xor
jmp
lahf
rcrl
cli
aam
pusha
xor
mov
fcmovnbe
or
outsb
sbb
push
or
mov
pop
test
push
cmp
stc
sub
aam
xor
jp
jp
repnz
int3
adc
cmp
mov
cs
sub
xchg
push
jge
and
push
ja
xor
fsubr
mov
cli
call
or
jge
cli
mov
out
ret
data16
xchg
adc
in
mov
mov
pop
mov
gs
std
dec
out
mov
lods
add
xchg
outsb
fcmovu
cld
fmul
mov
add
ljmp
decb
mov
imulb
pop
negl
jo
inc
sub
ds
les
xor
pushl
push
shlb
sbb
jb
mov
lahf
mov
sahf
rol
fdivr
xor
cld
pop
xor
idiv
push
adc
js
jbe
sub
xor
rcl
mov
sub
inc
ss
add
int3
push
addl
add
xor
ss
into
in
pop
sbb
mov
jle
idiv
fsubl
in
xchg
das
fwait
jb
fadds
sti
ret
jp
or
repnz
jle
or
outsb
mov
sahf
or
into
repnz
lret
iret
int3
les
fmul
cmp
fsub
adc
xchg
jae
lock
out
sbb
or
mov
aam
xchg
push
cmp
es
incb
enter
lea
cld
adc
and
xchg
stos
fdivl
add
cwtl
int3
mov
inc
mov
mov
decb
pop
cmp
xor
sub
sarb
mov
pop
scas
leave
scas
add
sbb
push
js
or
data16
mov
xchg
lock
into
fsubrs
outsb
and
cli
stos
bound
hlt
add
inc
xor
dec
inc
ljmp
add
mov
sahf
shrl
hlt
jb
cwtl
push
push
mov
jmp
in
cmp
mov
xor
xor
mov
inc
add
sub
jbe
shrb
and
aam
or
or
notb
sub
out
fsts
push
sub
rcr
lahf
into
pop
ljmp
mov
sbb
rcr
dec
add
call
int3
or
mov
outsl
push
scas
lods
dec
fdivrl
push
cli
adc
push
add
and
js
pop
leave
add
jge
xor
cli
fwait
adc
push
ss
ret
cs
mov
xchg
mov
cmp
aam
jle
jo
sbb
and
in
lods
fisubrs
fcos
divb
out
fiadds
lcall
addr16
mov
fistpll
fs
fmuls
add
sbb
sub
jb
sbb
push
mov
xor
nop
in
out
enter
cmpsb
mov
and
mov
sub
cmp
sub
js
out
sbb
pop
push
repnz
dec
ljmp
ret
movsb
into
cmp
rcrl
out
xchg
push
aad
popf
adc
movsb
inc
mov
addr16
xor
repnz
or
cmp
adc
mov
pop
cmp
mov
jg
lahf
jmp
in
push
mov
xchg
sbb
sbb
daa
mov
cwtl
sbb
inc
popf
scas
fmull
sbb
cmpsl
jbe
cmp
mov
ljmp
lock
xchg
xchg
les
sub
ds
mov
inc
mov
jmp
mov
add
imul
add
repnz
or
clc
rol
hlt
add
mov
push
fdiv
fidivrl
adc
mov
fsubrl
ja
xor
aam
sub
or
fiadds
out
add
scas
inc
dec
scas
andl
adc
mov
cs
shrb
inc
mov
mov
push
sbb
dec
lahf
jg
lock
into
mov
adc
adc
adc
subb
adc
dec
cli
out
pop
xchg
inc
aad
or
fs
enter
fcomps
mov
cmpsl
clc
mov
mov
into
jnp
push
sbb
mov
divb
mov
loope
pop
addr16
lahf
or
cmp
gs
ss
push
out
shrb
lock
fidivl
in
mov
cmp
lret
jg
mov
sub
sbb
sbb
jg,pn
testb
fwait
and
mov
dec
mov
das
daa
jne
pop
cld
in
fbstp
mov
aam
mov
lahf
leave
push
sbb
data16
mov
push
faddl
xchg
push
repnz
xchg
or
mov
into
pop
test
outsl
mov
aam
rolb
jae
pop
add
ret
pop
adc
shl
out
js
pop
fistpll
out
stos
cltd
out
inc
xor
xlat
sub
mov
iret
mov
int3
mov
push
ds
inc
and
or
ljmp
push
lret
push
lock
into
ljmp
xchg
cmp
hlt
scas
idivl
fildll
pop
inc
rclb
ds
sbb
lret
cli
mov
sarb
jg
repz
bound
inc
or
sbb
xchg
inc
or
cmp
jp
mov
or
test
cs
sbb
leave
jb
sub
mov
addr16
lods
lret
mov
mov
xor
enter
fadd
cli
fdivp
xor
mov
popf
adc
mov
add
icebp
cmp
hlt
mov
fwait
sbbl
xor
mov
cli
loopne
js
pop
push
pop
jnp
add
xlat
fdivrl
mov
das
scas
inc
cmp
fdivl
jp
lcall
push
dec
rorb
cmpsl
js
dec
pusha
addr16
out
pop
push
mov
mov
xor
mov
clc
push
sbb
cmp
pop
adc
shlb
sahf
mov
lods
inc
add
in
push
faddl
push
or
shlb
lock
outsb
iret
imulb
mov
sbb
scas
sbb
int3
cltd
mov
rcrb
push
cmp
cwtl
or
pop
mov
push
pop
mov
scas
ret
adc
xchg
inc
sbb
xchg
ficompl
push
xor
push
ds
mov
mov
sahf
ret
divb
repnz
movsl
fadds
jp
imul
mov
lret
lock
or
mov
stc
mov
cmpsl
mov
lock
outsb
mov
lods
mov
add
aam
aad
popf
cmp
mov
repnz
arpl
push
xchg
xchg
mov
push
xchg
sub
push
rcll
lret
scas
push
sbb
cs
cltd
ljmp
lahf
aas
lock
shlb
jle
push
ficoml
add
jns
or
sbb
negb
int3
push
jbe
push
in
inc
out
sbb
sub
mov
clc
outsl
addr16
orb
cs
cld
imulb
fmul
mov
in
lods
fsub
mov
push
sub
sbb
sbb
les
or
adcb
loope
push
outsl
xor
lret
fs
bound
mov
push
mov
mov
push
jp
xor
ret
insb
repnz
push
sbb
push
ficoml
idivb
push
jg
ds
cwtl
cs
sar
enter
popf
adcb
push
add
sbb
pop
ds
mov
cmp
enter
les
fcmovu
mov
incb
int3
mov
lret
lea
mov
xchg
cmp
inc
clc
divb
cmp
fcoml
sbb
pop
into
sub
xchg
out
fwait
pop
xor
sbb
scas
int3
pusha
or
ficoml
jno
push
notb
out
shl
in
rcr
inc
ret
xor
add
pop
jb
stc
scas
fcoms
jbe
jg
jp
test
lret
mov
les
pusha
ret
cmp
iret
fsubrl
adc
in
xor
push
mov
mov
ds
sbb
mov
adc
divb
xchg
lret
cld
pop
mov
mov
push
xchg
mov
inc
xchg
mov
add
push
movsb
xor
fdivl
movsb
cmp
adc
nop
scas
divb
jne
popf
cmpsl
into
ret
adc
and
cmp
bound
iret
pop
cltd
xchg
paddsb
cli
jnp
jne
adc
addr16
fs
jne
test
enter
dec
push
pop
and
push
subl
clc
dec
xor
rcr
adc
ficoml
xchg
fdivrs
scas
aam
fs
sahf
ss
cmp
mov
mov
das
hlt
mov
aas
repz
addr16
push
mov
pop
xlat
sbb
stc
into
mov
mov
lds
push
cs
es
mov
xor
fcomps
mov
ds
jb
push
adc
push
rol
and
ljmp
mov
daa
sbb
lods
hlt
jle
insl
mov
add
test
and
popa
bound
push
scas
mov
fcoml
enter
push
jb
icebp
push
or
fdivrs
ret
add
push
jo
fs
sub
sbb
lret
aaa
ds
cmp
xchg
nop
aam
jge
out
cmpsb
mov
das
xor
div
enter
mov
sub
jmp
roll
mov
stos
lods
mov
mull
mov
inc
insb
sbb
fsubl
inc
addr16
bound
push
sbb
mov
lock
ljmp
clc
adc
rorb
add
movsl
mov
sahf
mov
jecxz
cmp
mov
add
int3
xchg
inc
sbb
fwait
add
sbb
cs
jne
in
xchg
xlat
pop
int
hlt
cli
test
fucom
or
stos
add
nop
sub
les
push
mov
sbb
repnz
or
jge
jns,pt
ss
and
mov
push
push
into
sarl
popf
mov
stos
rcrb
lods
fmulp
ss
mov
aad
cmp
mov
mov
push
xor
ss
mov
xlat
mov
fcoms
mov
adc
push
sbb
or
lret
inc
pop
les
sub
mov
out
dec
push
or
scas
mov
push
add
js
clc
jp
js
xorb
shrl
mov
push
mov
aas
insb
or
pop
dec
aam
ss
xor
ret
mov
sarb
ljmp
or
shlb
clc
xor
mov
sbb
ficompl
notb
add
sbb
out
sbb
pop
sbb
ret
stos
cmp
cli
push
lea
ljmp
mov
scas
mov
les
ret
ja
loope
iret
addr16
push
ss
mov
or
bound
push
mov
ljmp
scas
or
pop
sbb
out
out
dec
movsl
jnp
lods
cmpsl
cs
cmpsl
sarb
lods
hlt
out
adc
fisubl
mov
cmp
mov
cld
xor
xchg
adc
adc
add
xchg
shrb
push
inc
cmp
add
pop
out
xchg
pop
das
andb
inc
push
daa
cmpb
ret
adc
pop
inc
aam
cmp
adc
cmpb
lea
mov
mov
adc
test
pop
push
cli
les
inc
shlb
cmp
cli
sbb
rcr
data16
mov
or
adc
pusha
inc
aam
xor
ret
mov
outsb
adc
dec
jg
pop
xchg
icebp
rol
fwait
xor
in
aam
add
fsubl
lods
mov
das
vmread
in
jnp
mov
add
add
outsb
sbb
enter
inc
lods
mov
mov
add
cs
push
dec
mov
pop
mov
push
hlt
sbb
bound
popf
in
fdivs
ljmp
js
mov
lret
imul
jne
rolb
mov
fs
jecxz
inc
xchg
js
fs
or
js
ret
adc
je
scas
into
sbb
mov
cli
push
ror
xchg
mov
adc
mov
dec
cli
mov
into
xor
sbb
adc
and
and
out
ficompl
inc
mov
ds
mov
inc
decl
push
in
aaa
repnz
stc
scas
sbbb
mov
cld
lods
push
das
cmp
fmull
xchg
je
adc
inc
sbb
popf
adc
pop
cmpsl
fsubp
or
stos
inc
out
lods
in
icebp
rorb
sbb
in
push
or
shlb
lods
addr16
aam
lret
sbb
mov
push
sbb
adc
arpl
lock
mov
push
cmp
pop
int3
repnz
mov
cs
sbb
jle
ljmp
outsb
inc
shr
cwtl
mov
pop
push
push
sub
lret
mov
mov
push
sbb
adc
aam
mov
jnp
adc
cld
orb
in
pop
push
roll
ret
cs
lods
aam
cli
repnz
push
in
rcll
xor
dec
and
shlb
pop
push
icebp
lcall
fisttps
fisubrl
bound
adc
nop
les
in
ljmp
fwait
or
ljmp
mov
movsl
fcmovb
les
xchg
lods
movsb
mov
insb
fsub
cmp
int
addr16
outsl
or
clc
push
int3
ds
pushf
mov
xchg
call
ss
mov
adc
fimull
clc
sbb
cmp
adc
and
dec
fcmovb
mov
idivb
incb
sbb
or
mov
inc
mov
xor
scas
dec
repnz
out
sahf
ds
sbb
lods
out
fadds
ljmp
test
cmpsl
fsubl
pusha
popa
mov
pushf
ss
sar
jmp
xor
mov
sbbb
xor
cmc
idiv
in
mov
adc
sbb
enter
xlat
or
aam
sahf
xor
cmp
sbb
lret
sub
lahf
hlt
sub
test
pop
lods
fiaddl
fimuls
add
and
mov
adc
mov
mov
ret
xor
pop
jbe
pop
mov
aas
jo
mov
das
pop
push
add
push
lcall
stos
add
lock
scas
cld
xor
xor
addr16
outsb
push
mov
sahf
mov
enter
adc
cmp
mov
cmp
test
fmul
pop
mov
push
pop
and
xor
fsubl
lret
cmpsl
lock
hlt
push
add
aas
lret
mov
sbb
gs
inc
sbb
sahf
add
int3
mov
sbb
sbb
les
mov
fs
ss
sbb
fsubl
mov
sbb
ja
push
inc
out
sub
xchg
inc
out
notb
lret
sti
xchg
mov
add
lcall
push
add
adc
nop
or
cmp
xor
cmp
out
jecxz
push
mov
hlt
mov
outsl
ret
sahf
rcl
mov
repnz
mov
out
mov
cmpsl
nop
sbb
into
ss
mov
shl
dec
nop
or
or
push
xchg
mov
push
aad
out
sub
aas
jae
or
mov
hlt
adc
fmull
jne
pop
lcall
mov
bound
into
mov
ret
stos
push
xor
popf
bound
into
mov
cmp
dec
les
inc
sub
in
push
repnz
stos
or
out
inc
inc
mov
fbld
cmp
out
dec
adc
fsubrl
jg
pop
ds
sbb
sbb
or
pop
fwait
in
push
push
and
xchg
adc
mov
out
out
ret
jp
aam
mov
or
dec
push
jg
jg
out
xchg
jecxz
popa
push
add
ja
mov
adc
adc
push
push
pusha
add
adc
int3
push
ficoml
mov
enter
sub
sub
xchg
push
rolb
int3
test
outsl
lret
sbb
or
shl
pop
cmp
push
ficomps
enter
pop
xchg
shlb
push
sbb
push
sub
and
inc
fists
cwtl
fidivl
sub
or
xorb
or
cltd
cmp
popf
xchg
mov
or
lahf
mov
rcrb
shlb
rcrl
or
ss
adc
sub
mov
xchg
add
jbe
repz
push
dec
lcall
pop
mov
sahf
or
lods
movb
adc
rorb
je
add
xchg
jo
enter
fists
sbb
imul
loope
in
sarb
fwait
inc
cld
lea
arpl
xchg
popf
lods
rcrb
xor
mov
xchg
movsl
mov
rorl
sti
test
adc
add
nop
sbb
addr16
mov
fs
lahf
rorb
sbb
cmp
dec
pop
mov
jle
and
jbe
test
out
mov
repnz
fsubrl
out
sbb
ss
int3
cli
cmc
pop
lret
sbb
not
jp
cmp
shrb
xchg
adc
sar
or
out
mov
lods
and
xchg
push
lret
mov
fldcw
adc
mov
loopne
negb
pop
dec
adc
test
fstp
mov
push
stos
adc
scas
or
mov
mov
mov
pmaxsw
mov
or
test
test
mov
aad
aam
push
push
xchg
pusha
xor
mov
xchg
addb
add
aad
sti
fdivl
inc
adc
sbb
js
xlat
dec
rol
sbb
inc
cltd
adc
push
mov
inc
fcomps
dec
cmp
mov
int3
in
mov
movsb
cli
iret
lock
inc
inc
es
mov
push
or
fisubrl
mov
fsubl
adc
into
jo
fcomi
or
out
mov
xchg
sub
outsl
xchg
mov
int3
mov
popf
cli
icebp
nop
ret
sbb
bound
adc
mov
cmp
adc
mov
push
cmpsb
push
testb
pushf
mov
lret
into
ficompl
rclb
mov
cs
sub
and
ljmp
mov
dec
add
cwtl
push
enter
adc
mov
xchg
das
fwait
iret
or
cs
sub
or
aas
pop
clc
int
nop
cmp
ficompl
lods
sub
lret
adc
xor
inc
adc
mov
scas
in
into
push
lcall
jg
adc
movsl
mov
into
dec
nop
lods
ljmp
aam
int3
outsl
and
or
jno
aad
adc
test
sbb
sar
dec
or
enter
notb
scas
outsl
add
mov
mov
push
ss
call
ljmp
mov
das
sahf
jo
rolb
xchg
sub
mov
out
xor
and
out
and
lea
xor
negb
xchg
enter
fdivrs
mov
adc
sbb
lock
sbb
fisttpll
stos
mov
cmp
add
add
jg
incb
or
mov
hlt
add
in
fbstp
push
push
inc
adc
mov
mov
mov
dec
push
scas
fisubl
ret
fisubl
sbb
aam
je
xchg
ds
ret
pusha
rorb
aas
dec
scas
lods
or
push
xchg
clc
sbb
xchg
hlt
xchg
je
scas
cmp
adc
jb
adc
clc
pop
lcall
int3
pop
or
sbb
aas
dec
scas
xor
push
add
hlt
in
pop
mov
lods
aas
pop
push
ret
xor
pushf
push
push
in
sub
pop
and
lock
cs
add
xor
pop
pop
mov
arpl
mov
bnd
push
add
jp
add
ja
addl
push
mov
lea
xor
add
and
adc
xchg
into
sub
inc
lcall
fcoml
push
push
nop
into
fsubrs
pop
sbb
jecxz
and
sbb
pop
xor
scas
lret
mov
lahf
das
mov
mov
adc
push
jno
lret
mov
dec
mov
sub
push
adc
mov
fadd
es
imulb
adc
pop
shl
pushf
ljmp
push
xor
insb
adc
ljmp
lret
inc
cmp
mov
push
movsb
sbb
mov
mov
das
loop
fs
lods
inc
sbb
push
and
xchg
addr16
fadd
pop
dec
fdivr
ficoms
loopne
push
mov
int3
sahf
pop
fdivrl
test
data16
or
cltd
sbb
jg
mov
stos
fwait
inc
in
or
rol
das
scas
ss
mov
aas
sbb
stos
lret
or
aam
jg
jp
pop
gs
das
and
mov
nop
rorb
sub
stos
test
out
arpl
lret
push
mov
stos
in
xchg
lahf
mov
js
nop
jmp
aas
mov
or
movsb
mov
rol
lcall
pusha
add
push
cmp
mov
add
jo
mov
sub
sbb
stos
mov
enter
sub
or
lret
add
daa
ret
out
adc
scas
adc
in
out
lods
sub
movsl
push
mov
lahf
stos
or
push
mov
jmp
sbb
cmp
rcrb
clc
aam
shlb
lock
shlb
mov
jp
aas
pushf
bnd
dec
adc
cwtl
lock
rcrb
jnp
cmp
cmp
dec
add
rorb
cmpl
sbb
adc
stc
into
in
or
mov
xchg
out
in
cld
adc
js
fadds
negb
cmp
test
insl
sbb
mov
sub
sar
fsubl
add
outsl
pop
mov
mov
addr16
lock
and
adc
add
pop
test
idivb
outsl
outsl
and
dec
imul
dec
sarb
push
and
movsb
mov
add
or
xor
popf
lds
xorb
idivl
sbb
jo
sub
nop
test
into
xor
les
sbb
lret
xchg
into
push
mov
sbb
mov
fdivrp
repnz
or
int3
jb
inc
ljmp
xor
pop
stc
push
outsl
outsl
xor
inc
setno
xor
cmp
or
inc
fsubp
cld
mov
jg
mov
ds
ds
insl
mov
test
scas
int3
cli
lods
jmp
or
stc
sbb
insb
push
cmp
mov
sbb
fcomp
push
fdivrl
popf
xchg
sbb
fsubl
inc
into
adc
sbb
xchg
mov
lahf
xor
cli
das
xor
xchg
pop
into
adc
adc
add
add
clc
ss
inc
cltd
fidivrl
jg
mov
xchg
jbe
lahf
inc
add
fcomps
test
add
push
push
mov
test
clc
cld
mov
loope
mov
scas
ds
or
pop
std
xor
ss
xchg
ljmp
js
js
mov
lock
jo
cmp
divb
inc
sbb
pop
and
cmp
not
iret
cwtl
shr
mov
mov
pop
out
ficoms
push
cs
scas
jg
repz
inc
das
fiadds
push
add
fs
mov
sub
movb
push
jno
mov
pushf
fmul
shrb
pop
insl
addr16
jno
mov
mov
dec
xchg
mov
shl
adc
scas
inc
xchg
xchg
cmp
sub
mov
cmp
cs
cmp
fidivrs
stc
inc
add
push
cmpsb
rorb
sbb
cmp
cmp
ja
cmc
inc
mov
and
cld
ds
dec
and
fdivl
out
mov
cwtl
sub
adc
faddl
mov
cmp
hlt
xor
xor
inc
add
out
cs
scas
mov
gs
fdivl
repnz
sbb
dec
lods
sub
lock
adc
xor
mov
fildll
and
out
mov
jb
jbe
cmp
push
fsts
in
inc
add
lods
jo
jb
pusha
fcoml
sub
rclb
dec
mov
inc
ljmp
out
adc
add
lods
fst
sbb
mov
or
mov
mov
jmp
lock
push
cmpsl
or
xor
sahf
arpl
or
and
decb
or
ret
repnz
pop
or
cmp
inc
ror
jmp
xchg
dec
lret
scas
inc
pop
xor
sub
aaa
out
jge
pop
pop
or
ss
sbb
cwtl
cmpb
mov
jne
loopne
mov
orb
push
leave
subb
dec
sbb
adc
fadd
incb
sbb
cmp
add
mov
aam
call
pushf
adc
stos
les
repnz
ficoms
outsl
inc
outsl
popa
pop
xchg
lods
sub
sbb
or
negb
pop
nop
jecxz
rcrl
aam
lods
stos
movsl
pop
xor
scas
jne
stos
push
aam
scas
push
aas
pusha
dec
adc
mov
xchg
cmp
adc
pop
xlat
into
lcall
xchg
or
aam
sti
cmp
sbb
push
push
int3
enter
shlb
sub
mov
cmp
cmp
out
push
stc
push
clc
popf
js
xchg
ret
repnz
sub
cltd
xor
lock
add
movb
pusha
push
push
sub
mov
sarb
pop
rcr
sbb
mov
adc
or
sbb
pop
addr16
xor
mov
iret
mov
xor
cli
fcomps
lret
adc
dec
sbbb
repz
movsb
xchg
out
xor
adc
add
ljmp
cmp
mov
cmpsl
inc
fsubrl
outsl
lret
inc
fdivrl
dec
xchg
fwait
mov
push
sar
xchg
mov
popf
mov
mov
jp
cmp
loop
cli
repnz
repnz
mov
cwtl
sbb
out
cs
push
mov
aas
nop
cli
lods
or
pop
or
adc
mov
pop
xorb
sarb
movsl
rolb
clc
xchg
and
adc
inc
cmpsl
pusha
cld
adc
cltd
mov
hlt
mov
iret
fwait
movsl
mov
push
mov
cwtl
xchg
ds
xor
xchg
ficoml
ss
xchg
sub
xor
sarl
hlt
lcall
mov
jne
rorb
iret
sarl
into
mov
or
and
data16
stos
leave
cmpb
fbstp
mov
out
jo
hlt
into
xchg
push
inc
pop
aas
ljmp
mov
or
fisubrl
int3
mov
ds
lods
and
push
or
sbb
add
mov
out
ficomps
mov
mov
add
and
mov
mov
sbb
pushf
sbb
add
ds
idiv
movsl
mov
push
cmp
das
push
push
push
andb
lods
xlat
cwtl
pop
aas
jbe
stos
cmp
test
pop
lret
xor
cs
mov
addr16
adc
jae
jle
and
aas
lock
mov
inc
sarb
xor
rcr
sbb
repnz
sbb
loop
dec
mov
rol
inc
lret
jb
into
sub
jp
sbb
or
push
mov
lock
ret
and
xor
clc
sbb
into
aam
sbb
mov
push
lods
scas
push
mov
xchg
mov
mov
push
cmpsb
xor
mov
push
or
pop
das
bound
cmp
repnz
sbb
enter
xlat
fwait
jne
fdivrs
cli
sbb
adc
pop
adc
cmp
dec
or
inc
scas
mov
xor
sahf
arpl
sbb
xor
leave
daa
cmpsb
jmp
cs
or
lcall
lret
cs
push
leave
mov
dec
ljmp
sub
or
push
push
aas
bnd
jg
ljmp
jg
fdivl
sbb
hlt
cmp
sahf
repz
das
pop
out
test
sbb
movsl
sahf
clts
mov
lret
adc
sbb
mov
sbb
mov
addl
hlt
xor
ds
mov
adc
imulb
mov
imull
sbb
cs
xchg
aam
ret
fucomi
fwait
enter
xchg
sbb
sbb
push
sbb
and
testb
cmp
fldt
hlt
or
mov
fimull
sbb
ljmp
or
test
call
cs
testb
fldcw
or
cmp
fcompl
push
inc
fmul
push
jb
bound
idiv
fcmovbe
mov
jp
cld
sbb
xor
pusha
and
ret
mov
inc
out
inc
fisttpl
fidivrs
xor
rclb
sbbl
mov
decb
sub
mov
mov
ret
into
sbb
sarb
cmp
cmp
push
xlat
mov
or
xchg
sub
daa
sub
sbb
lods
adc
mov
push
inc
and
clc
add
testb
mov
outsl
loopne
hlt
aas
inc
xor
pop
mov
cmp
jecxz
cmp
cs
ss
mov
fmull
fistps
shlb
inc
adc
sub
fs
cmp
and
enter
sbb
sbb
dec
mov
sbb
fstps
mov
inc
imul
idivl
repnz
shl
push
adc
idiv
adc
xchg
mov
js
add
sbb
movsb
xchg
push
out
rcrb
lret
fsubs
into
xor
das
fidivs
ret
test
sub
mov
sbb
xor
outsl
ret
sub
add
ss
mov
cmp
lods
ljmp
push
stc
xchg
push
adc
int3
xchg
lret
mov
adc
cld
clc
mov
imul
aam
add
divb
and
ds
fsubrs
add
pushf
mov
into
cmp
popa
mov
int3
cltd
sbb
sub
xchg
daa
mov
scas
sahf
cmp
push
adc
enter
mov
push
pop
cmp
mov
mov
outsl
ss
outsl
test
sub
sbb
lods
hlt
fidivrs
cli
and
xor
xor
cwtl
enter
sbb
mov
and
mov
mov
mov
or
mov
mov
sub
mov
cmp
pop
mov
push
sar
adc
aas
rcr
fsubs
scas
jge
int3
aaa
jb
cmp
mov
mov
cmp
cwtl
dec
fnstenv
popf
popa
ret
fisubl
xchg
pusha
lods
add
fildll
repnz
fbstp
xchg
fcmovnbe
xchg
sbb
iret
pop
data16
or
mov
jns
repnz
inc
jg
mov
into
push
nop
sub
fdivl
out
xchg
scas
or
adc
rolb
xchg
push
mov
sbb
push
insb
sbb
jg
pop
inc
std
xor
mov
mov
addb
jbe
sbb
inc
xchg
lods
lahf
push
push
cs
dec
cmp
pusha
scas
sbb
jnp
pushf
inc
adc
xor
lret
mov
jg
pop
push
add
scas
popf
adc
jno
cmp
lock
cld
aas
dec
cmp
adc
es
mov
daa
rcrb
cmpsl
icebp
jno
lods
push
mov
int3
cmpsl
ljmp
ret
add
scas
shlb
arpl
dec
push
scas
dec
mov
xor
pop
imulb
enter
sbb
sbb
out
xchg
push
lods
xchg
bnd
mov
shl
xor
and
mov
repnz
lahf
inc
int3
clc
lret
jmp
sbb
mov
cmp
lcall
ds
pop
inc
fnsave
lods
icebp
inc
cld
ds
stos
inc
jl
cmc
push
fimull
enter
cmpsl
mov
rorb
fcoms
mov
outsl
sub
mov
sbb
test
in
add
sub
inc
dec
mov
cli
mov
out
or
xor
and
sbb
sbb
xchg
ret
lret
sbb
mov
xchg
ret
scas
sbb
sbb
cmp
movb
inc
xor
fdivrs
into
xchg
fnstenv
sbb
lds
or
mov
addb
clc
xor
sub
jecxz
push
adc
push
mov
lret
jmp
aam
arpl
or
add
orb
push
sub
aas
ret
adc
lahf
sub
or
fisubrl
mov
out
xchg
mov
pop
inc
rol
add
xor
lret
adc
or
repz
mov
mov
insl
adc
aas
or
sub
mov
inc
push
popf
jo
sbb
mov
movsb
call
adcb
inc
iret
and
cmp
sub
dec
fdivrs
push
pop
mov
mov
es
sbb
sti
jb
inc
dec
lret
inc
out
fs
fsubrl
mov
scas
lods
cmp
inc
out
shlb
xchg
push
or
jb
xchg
jo
or
hlt
enter
inc
outsl
shlb
rolb
leave
push
jmp
sbb
int3
mov
sahf
in
cmp
mov
loope
call
push
mov
xchg
notb
addr16
outsl
popf
lahf
mov
inc
sbb
aaa
cmp
mov
dec
into
mov
xchg
aam
push
into
mov
ljmp
cld
or
shr
sub
ljmp
mov
push
aam
stos
rorl
ja
jp
inc
pushf
lahf
inc
lods
hlt
faddl
lret
cli
xor
push
into
add
call
dec
xor
mov
addr16
push
pop
xchg
lock
pusha
in
div
mov
push
in
movsl
scas
lods
jno
insb
xor
out
pop
adc
and
and
mov
ret
sub
rol
out
rcr
mov
cmp
nop
dec
loope
xorb
mov
adc
xchg
mov
sar
mov
push
push
aam
fdivrl
addb
sub
mov
dec
gs
jp
pusha
inc
jecxz
rcr
out
loopne
inc
push
push
push
mov
scas
lods
hlt
mov
clc
cs
movsb
mov
mov
cmp
ljmp
ror
inc
jb
stc
dec
popf
mov
or
add
and
mov
aam
sbb
rorl
sbb
movsl
mov
fdivl
scas
lock
ljmp
fbld
bound
cmp
mov
out
shrb
dec
pop
xchg
scas
inc
into
mov
pusha
stos
ret
adc
imul
adc
or
mov
cmp
dec
jnp
hlt
fistps
rolb
enter
fldt
pop
clc
mov
push
mov
xor
sti
push
ss
ss
rorb
ljmp
lock
xor
mov
jp
jbe
sub
inc
adc
inc
stos
sub
pop
arpl
incb
cld
dec
cli
in
ja
fadds
pop
push
aas
mov
std
notb
mov
aaa
xchg
adc
aad
lods
sbb
xor
mov
enter
inc
popf
outsb
mov
and
js
pushf
jl
mov
repnz
cld
sbb
popf
mov
adc
mov
pop
sub
ljmp
enter
mov
int3
fistps
add
or
lock
into
cli
ficoml
cs
push
or
xchg
jbe
pop
out
outsb
addb
lods
jbe
mov
dec
lret
lahf
or
sbb
negb
adc
sub
xor
and
xor
addr16
stos
cwtl
sar
hlt
fcoms
cltd
sahf
into
popa
dec
sbbl
mov
push
push
fisubrl
ret
lret
pop
push
add
jmp
push
out
fst
ds
mov
ds
mov
or
adc
fdivrl
xchg
in
or
pop
pop
popf
cwtl
lods
add
fdivl
js
push
push
subb
ljmp
or
sbbb
mov
ret
cmp
popa
pushf
cmp
shlb
mov
jl
sbb
scas
mov
push
xor
mov
shrb
hlt
cmp
idivb
or
es
aas
clc
jp
add
adc
pop
or
xor
sahf
cmp
fidivrl
mov
xlat
push
cld
fsubrl
shl
les
or
fwait
ds
cli
scas
fisubrl
xor
pusha
mov
idivb
idivl
inc
and
mov
cmp
cmpsb
cmp
mov
jnp
or
push
inc
mov
out
push
or
push
adc
dec
enter
es
or
das
xlat
ds
cmp
adc
xchg
test
fstl
sbb
mov
mov
das
xchg
out
clc
dec
into
add
lods
sbb
repnz
mov
fdivr
test
notb
mov
sahf
fcoml
lods
or
aas
push
stos
sbb
adc
add
lahf
or
cld
int3
push
fimull
mov
enter
in
cs
fmull
mov
pop
into
sar
stos
adc
mov
push
push
mov
sbb
xor
bound
aad
out
fistpll
lock
or
shr
nop
repz
in
loopne
sub
adc
into
or
mov
ss
in
xchg
cmp
push
rcrb
xchg
mov
adc
add
adc
sbbl
mov
lods
sbb
fidivrl
adc
imul
imul
shl
mov
jecxz
sbb
adc
push
xor
sbb
push
cmp
mov
clc
push
loopne
pop
add
leave
push
dec
rclb
mov
push
cld
outsl
int3
pop
xlat
cmp
popf
cmp
mov
sbb
adc
add
mov
push
mov
shlb
cmp
mov
aaa
adc
push
dec
add
rolb
mov
ss
dec
movsl
mov
sub
ret
stos
cmpsb
fidivl
or
mov
xorb
fs
insl
shl
in
add
ds
aas
popf
mov
jnp
mov
push
inc
cmpsb
data16
push
xor
xchg
movb
insb
subl
out
iret
mov
icebp
mov
aas
sub
int3
xchg
cmp
inc
xchg
fxch
dec
jl
stos
cmp
sub
ret
and
sub
adc
out
mov
int3
adc
sbb
out
sub
jns
mov
out
or
or
sbb
scas
stos
leave
pushl
lock
imulb
sbb
cmp
adc
mov
cld
dec
pop
insb
out
rorb
mov
mov
shr
repnz
out
cmp
cli
ret
popf
movsl
sbb
scas
mov
aaa
cmpsl
lcall
sbb
in
enter
aam
fidivrl
sti
scas
xchg
out
jbe
sarl
add
or
shlb
addr16
dec
pop
xor
lock
fisttpl
mov
xchg
int
sbb
loope
je
mov
pop
in
fidivl
pop
xchg
stos
scas
fldt
fidivrl
bound
lret
fcmovu
mov
lret
cmp
mov
test
xchg
dec
mov
jne
dec
lret
pop
aad
adc
jo
xchg
xchg
adc
mov
scas
or
push
idiv
push
and
add
adc
pop
xor
xor
cmp
sub
mov
adc
sub
add
ret
sahf
notb
xor
aam
enter
orb
jno
pushf
test
ficompl
xor
mov
jmp
lret
sub
push
inc
push
fsts
cli
mov
mov
push
dec
cmp
add
es
mov
mov
fisubl
mov
aam
cld
or
movsb
sahf
mov
cmp
das
sub
aad
pop
push
repz
movb
lcall
loop
out
push
sbb
jo
sbb
les
sahf
fdivs
mov
addr16
xor
cli
inc
out
repnz
adc
pop
dec
ficoms
hlt
mov
xor
jne
mov
sbb
ss
pop
mov
rcr
xchg
xor
stc
data16
into
stc
mov
push
in
ljmp
aas
mov
add
mov
hlt
pop
xchg
fdivl
pushf
mov
ficomps
lret
outsl
sbb
inc
sbb
sub
jbe
int3
add
add
and
push
fldt
sbb
dec
into
ljmp
add
push
pop
cmp
aam
imul
loope
add
cmp
ss
cmp
cmc
lods
mov
lock
mov
popf
sti
fadds
xorb
adc
int3
mov
andl
es
movsl
leave
into
add
push
inc
sbb
movb
mov
jb
cmpsb
or
shlb
push
mov
adc
mov
adc
sarb
rcr
push
sbb
int3
add
pushf
mov
cmp
test
test
sbb
dec
or
es
in
mov
cmp
out
inc
mov
sub
cs
cmp
aaa
jp
jb
sahf
cmpsb
into
hlt
sub
rol
stos
vpsubq
clc
clc
jp
xchg
ja
lock
or
add
xor
fwait
imul
xchg
adc
iret
xor
fldcw
imulb
jp
mov
in
fidivrl
pop
mov
mov
or
mov
lods
push
rcll
mov
das
sub
cmpb
rol
loop
mov
add
out
xor
xchg
lods
xchg
outsl
popf
xchg
or
stos
sbb
scas
enter
stos
cmp
add
sub
cs
nop
mov
mov
cld
cli
dec
mov
es
das
leave
jno
jne
stos
fcompl
cmp
aas
xchg
mov
es
lods
cmp
clc
or
cmc
inc
orb
add
push
cli
sbb
or
push
shll
dec
or
inc
mov
lea
int3
mov
push
sub
cmpsb
incb
mov
aam
jnp
add
arpl
pop
scas
xor
sbb
das
mov
stos
lods
xor
mov
dec
xchg
and
push
or
test
stos
inc
adc
adc
ljmp
adc
out
pop
int
add
pushf
cmp
rcl
mov
out
adc
dec
xor
ret
fdiv
pop
mov
sbb
sub
out
adc
add
push
pop
pop
cmpsb
pusha
mov
sub
ret
neg
or
sub
ret
cli
jp
mov
xchg
ret
pop
dec
fsub
mov
ss
cmpsl
mov
fdivrs
lods
jp
adc
iret
in
jb
aam
sahf
xor
rolb
fadds
sub
push
pop
cmp
stos
sub
mov
mov
std
andb
cs
repnz
mov
les
mov
mov
mov
add
sbb
adc
or
nop
test
ljmp
bnd
out
jno
sub
outsl
mov
xor
lock
push
test
jle
push
push
fdivs
inc
and
and
mov
bound
fcomps
shlb
cs
out
push
xchg
fidivs
adc
xchg
push
rcrb
add
xchg
or
addb
cld
rcrb
lods
push
or
scas
add
pushf
mov
fisubs
mov
mov
repnz
int3
mov
dec
dec
or
add
mov
mov
int3
and
mov
dec
ljmp
jp
xchg
jae
adc
rolb
shlb
mov
stos
fcoms
lahf
pushf
mov
lods
fdivp
inc
add
dec
fsubs
aas
xor
out
out
pop
push
testb
rcrl
repnz
lock
mov
sarb
cmp
mov
jg
jbe
xor
scas
ret
adc
movb
xchg
sbb
xor
mov
sub
aam
daa
addr16
push
sbb
fs
sbb
sub
int3
lods
cmp
adc
clc
mov
hlt
fmull
mov
or
mov
rol
adcl
hlt
dec
aaa
mov
inc
mov
mov
inc
pop
pusha
int3
fwait
or
ss
sub
dec
stos
cmp
aam
aaa
daa
mov
push
mov
mov
sub
sub
js
pop
out
add
fdiv
lcall
into
mov
and
scas
mov
mov
or
ljmp
push
loopne
ret
pop
lret
sub
fdivrl
mov
pop
pop
push
sti
mov
bound
movzbl
xor
fcomps
ljmp
or
ja
in
mov
stos
outsl
hlt
push
lret
push
pop
pop
mov
scas
add
push
lods
adc
repnz
pusha
fcomps
push
or
cmp
cld
cmp
mov
or
xchg
add
lahf
fldt
mov
fnstcw
add
jne
pushw
fistps
into
sbb
xorb
incl
testb
xchg
mov
iret
int3
mulb
hlt
call
clc
xor
into
bound
adc
push
lret
or
shrb
popf
rcrb
adc
aas
ljmp
sbb
xchg
pop
out
lods
push
push
dec
dec
lock
push
fs
adc
and
xchg
fcompl
inc
daa
lcall
scas
xor
ficompl
xchg
push
fistps
int3
mov
das
jl
aaa
adc
pop
push
jg
into
rclb
or
jo
mov
sbb
sub
push
das
pusha
mov
clc
mov
das
mov
cld
mov
fcmovnu
ret
pop
scas
mov
mov
ds
xor
cld
imul
xor
adc
sahf
cwtl
add
out
cmp
fwait
icebp
inc
hlt
xchg
jg
inc
mov
lret
and
testb
ficompl
ds
cmpsl
xor
adc
pop
aam
ret
xchg
lret
jg
mov
xchg
gs
enter
imul
push
fcmove
sbb
push
mov
lret
lods
fmuls
push
iret
roll
scas
push
inc
cli
push
filds
mov
sarb
movsl
cmc
cltd
push
or
mov
xlat
inc
add
int
jae
xor
adc
push
sarb
repnz
dec
fcmove
ret
jp
add
mov
mov
push
jge
repnz
fcoms
xchg
mov
jno
cli
das
pop
pop
xor
mov
fcom
inc
xchg
pop
cmp
add
adcl
mov
movsl
stc
lods
jle
jne
scas
enter
lock
pop
aam
inc
mov
ss
test
add
bound
out
push
sbb
hlt
ss
add
ds
sbb
push
lods
mov
int
inc
shlb
cwtl
loop
cld
sbb
aad
xchg
leave
rcll
dec
inc
cmp
xchg
jle
push
ljmp
xor
les
lock
repnz
cmp
adc
mov
push
adc
xchg
xchg
push
push
into
lea
orl
arpl
cmpsl
add
addb
cmp
ret
add
jmp
outsb
xlat
hlt
test
iret
sarb
into
cli
cs
ss
xor
clc
rolb
in
cld
repnz
test
cs
xor
xor
ss
sub
hlt
or
jg
stos
inc
inc
lods
xor
lret
and
fptan
clc
shll
add
push
stc
bound
dec
ds
push
popf
dec
add
pop
xor
mov
insl
shrb
ss
ficoml
ljmp
sbb
hlt
sbb
fsubr
sub
mov
cmp
fbstp
les
mov
out
sbb
loopne
pop
or
push
fsubrs
shlb
fdivl
out
pop
push
arpl
mov
xor
cli
mov
mov
pop
xor
inc
mov
fdivrl
les
pop
scas
fidivl
mov
mov
ljmp
mov
out
bnd
xor
faddp
cli
xchg
ret
enter
add
jg
out
dec
mov
outsl
jp
into
push
cli
in
cld
stos
dec
mov
sub
or
sbb
mov
in
sbb
pop
fadds
mov
mov
mov
mov
lods
fldl
jo
cwtl
xor
sar
movsb
dec
les
mov
mov
int3
mov
cmp
xlat
sub
shl
mov
pushf
into
cmp
ds
jne
popf
jnp
push
cmp
push
cld
js
mov
lods
xchg
mov
push
inc
sbb
pop
into
scas
ss
fsubrs
shlb
test
out
and
out
cld
pop
sbb
je
enter
out
pusha
cs
bsr
adc
pop
stos
inc
xor
jp
dec
xchg
imul
mov
xchg
and
rcl
sub
sti
into
jle
and
out
lret
fadds
mov
fwait
inc
mov
inc
xchg
cmp
iret
aas
mov
cld
xchg
ret
data16
aas
jg
enter
mov
sbb
pop
jl
lods
add
adc
insb
and
push
fisubl
push
and
xchg
shrb
into
or
push
hlt
cli
adc
add
repz
cs
scas
cld
inc
int3
ret
xor
pop
mov
fldt
stos
lret
ja
sbb
or
xor
xchg
cmp
aaa
push
cmc
mov
mov
cli
or
push
sub
cmovae
clc
jno
adc
sub
out
add
cli
aas
lods
inc
cmp
pop
pusha
or
stos
xchg
mov
push
sbb
test
mov
sbbl
xchg
movups
outsl
xchg
repnz
lahf
sbb
add
scas
xor
inc
push
clc
jg
aad
sbb
sub
pushf
into
fdivrl
mov
ror
addr16
add
sbb
das
xchg
push
xor
nop
dec
mov
cmp
or
xor
mov
fiaddl
shrl
sbb
pop
mov
inc
adc
sub
push
rcr
fwait
cld
fidivrs
aam
push
fiaddl
mov
sbb
mov
xchg
push
mov
lcall
loope
sbb
aam
shll
enter
out
ljmp
add
in
mov
cmp
mov
fsubr
xor
or
js
hlt
xor
jg
jne
inc
pusha
ljmp
sbb
adc
das
fucom
add
rorb
sar
mov
cmpsl
xor
movb
cmp
push
mov
sar
stos
ret
mov
cmp
add
push
cmpsl
sarl
adc
push
xor
cmpsb
icebp
addr16
lock
imul
fld
adc
lret
push
aam
test
aas
or
or
sahf
clc
int3
hlt
mov
mov
cmp
push
xchg
in
push
push
cltd
dec
lods
mov
inc
lret
xchg
xor
xchg
movsl
out
or
out
pusha
mov
mov
adc
sub
icebp
mov
dec
pop
stos
inc
cltd
cs
xor
scas
dec
push
push
shrb
pop
fidivl
adcb
test
mov
mulb
push
xchg
mov
lahf
imul
add
insl
sbb
push
dec
or
mov
adc
adc
mov
je
sub
bswap
mov
xor
hlt
lock
and
ds
mov
lret
add
aas
add
mov
push
addr16
fisubrl
fsubl
inc
xchg
adc
jbe
sub
lcall
cli
xchg
jmp
js
jle
or
cld
andb
sbb
sbb
aam
mov
xor
lcall
or
lods
mov
loop
pushf
ja
lret
movsl
xchg
push
sub
arpl
fldt
jb
sbb
popf
inc
stos
jbe
rcr
cmp
clc
mov
mov
cld
cs
mov
outsb
adc
xchg
fptan
mov
push
es
movsb
outsb
mov
fsubl
sbb
push
ret
pop
lods
mov
sbb
ret
clc
mov
lahf
inc
lods
in
jno
in
mov
xchg
mov
mov
or
xor
andl
cs
lret
add
int3
cmp
imul
clc
mov
lea
jnp
cs
sbb
es
out
mov
push
into
mov
cmp
pop
lds
cmp
mov
xor
js
mov
sbb
fcompl
xchg
or
jb
sbb
mov
add
or
push
ljmp
fldcw
cmp
loop
int3
ljmp
and
aad
cmp
dec
aam
out
sbb
sub
mov
aas
dec
mov
jnp
out
cmp
rcrl
les
mov
adc
outsl
lods
orb
mov
sbb
or
xchg
xor
lods
test
scas
cmp
and
push
lret
repnz
pop
jb
bound
outsl
idivb
shlb
mov
add
jo
lods
cli
xchg
cmp
ja
adc
ret
addr16
idivb
addr16
push
push
mov
xchg
cmp
or
add
in
mov
ja
cmp
cmp
cld
pushf
add
leave
push
fcmovbe
in
das
leave
es
fsubl
cld
sub
mov
fcomps
repz
pop
test
push
xchg
imull
sbb
lcall
into
fcmovb
sbb
add
push
out
jo
mov
sub
pop
daa
sbb
push
jle,pt
scas
lods
inc
pop
and
int3
sub
lock
cmp
aam
hlt
mov
fmull
mov
pusha
fsub
cs
cli
sub
popl
cmpl
mov
jp
jbe
jle
lock
int3
xchg
mov
mov
add
mov
outsl
cwtl
or
fdivrs
loope
sub
mov
and
lock
add
adc
decb
push
ficoml
cmp
sarb
jg
mov
outsl
mov
enter
mov
xor
fadds
add
out
or
in
lret
xor
mov
pop
sbbl
sbb
test
mov
in
jae
xchg
out
cli
dec
and
pop
inc
mov
sbb
mov
cli
filds
inc
ret
pusha
ljmp
mov
orb
jbe
cmp
faddp
int3
mov
shll
jg
xor
adc
xor
push
sbb
mov
ror
jne
xchg
sbb
mov
mov
int
inc
cmc
lret
nop
fdivs
push
push
call
lret
out
js
xor
inc
fstl
loope
in
cmp
xor
out
mov
addb
sbb
xor
fwait
xchg
iret
pop
adc
mov
dec
std
pusha
in
sar
hlt
mov
fwait
inc
ljmp
sahf
in
mov
cs
out
addr16
lods
cmpsl
mov
or
or
sub
dec
cli
nop
lods
xor
jle
cmc
mov
insb
push
repz
cmp
or
ss
adc
add
or
cmp
mov
scas
adc
pop
out
push
ss
mov
shr
jg
aas
andb
mov
fwait
into
mov
add
push
fsubr
stos
jp
fs
into
or
das
fidivs
mov
jns
cs
cmp
fcmovnb
ror
push
stos
lret
stos
mov
lcall
cwtl
adc
add
mov
add
xchg
cmp
sbb
jecxz
out
jl
mov
jg
leave
into
push
mov
sbb
ljmp
sub
lods
cmpsb
jg
mov
das
sbb
inc
mov
aam
cmp
in
ret
pop
mov
xor
fwait
xchg
shl
fwait
sub
xchg
add
xchg
mov
enter
push
push
and
fsubs
shrb
adc
scas
xchg
inc
mov
mov
movsb
nop
in
ja
adc
sbb
lock
jecxz
cld
mov
mov
repz
lods
mov
adc
add
cltd
pop
sbb
sbb
repnz
out
push
int3
lret
lods
sbb
shrb
or
push
sbb
push
sub
ret
mov
cmp
jb
loope
test
push
xor
clc
and
mov
xor
mov
mov
xor
dec
mov
sbb
mov
lds
movsb
or
dec
fucomip
std
or
ror
ret
or
cmp
xchg
sti
les
adc
cs
push
repnz
xor
lock
imul
pop
jl
hlt
fistl
xor
pushf
cmc
cmp
mov
daa
mov
xchg
or
push
popa
enter
and
into
lods
inc
adc
jo
fsubl
adc
mov
add
or
mov
lret
sbb
xchg
xchg
xchg
dec
mov
sub
adc
clc
clc
mov
int3
mov
xor
sub
inc
cmp
cs
repnz
dec
cmp
jmp
ja,pn
xchg
fwait
inc
mov
ljmp
mov
sbb
decb
mov
sub
jle
movsl
mov
fbstp
mov
pop
aaa
sbb
push
divl
push
sbb
cmp
adc
lret
lock
mov
cwtl
add
scas
shlb
xor
and
or
adc
adc
out
mov
pop
lahf
and
push
in
pop
or
inc
sbb
xchg
push
hlt
mov
mov
lret
cmp
sahf
mov
add
push
sarb
dec
shlb
fidivrl
in
sbb
mov
sub
mov
cld
add
ds
sub
xor
stc
nop
pop
mov
inc
lds
cmc
into
cmp
movsbl
mov
js
xor
clc
mov
out
sbb
loop
sub
aam
shrl
and
stos
adc
dec
mov
std
out
sbb
cli
mov
jp
mov
sarb
adc
mov
adc
fcompl
mov
dec
stos
xor
sbb
adc
or
fwait
movsb
or
cmp
xchg
mov
push
or
fsubl
cmp
or
into
adc
push
jg
inc
xor
inc
or
repz
mov
jo
mov
lret
hlt
mov
cmovle
sub
mov
daa
and
into
stos
mov
sbb
iret
push
inc
int3
fidivrl
sub
add
cmp
lods
stos
mov
movsl
xor
loopne
lock
iret
xor
inc
into
cmpl
xorb
ds
add
inc
mov
idivl
xlat
push
sub
repnz
fiaddl
xor
mov
inc
and
lret
leave
sahf
sub
fcomps
or
xorb
cmp
adc
les
pop
stos
fwait
stos
repnz
in
sub
out
lock
xchg
clc
or
xchg
or
repnz
lcall
pop
sbb
lock
push
adc
imulb
outsl
cld
dec
stos
and
ret
or
fadds
inc
mov
adc
enter
aam
sub
mov
outsb
mov
mov
sahf
repnz
xor
push
mov
jbe
or
xchg
sahf
cmp
into
cld
mov
jo
les
dec
popa
fmuls
sahf
inc
lods
or
sbb
hlt
addr16
adc
ss
push
jb
cli
mov
dec
jo
fcomps
clc
xor
divb
adc
cld
stos
hlt
add
idivb
jmp
xor
or
fildll
sub
movsl
and
into
stos
mov
in
mov
ljmp
in
fwait
mov
mov
jo
rep
push
adc
mov
scas
nop
rcrb
mov
lahf
in
mov
mov
pop
mov
adc
mov
cmp
xor
lock
enter
rolb
sub
push
js
mov
or
dec
lcall
scas
jg
dec
fadds
movsb
push
fsubrl
pop
mov
xor
cmp
jg
pop
fdivs
inc
or
int3
or
add
repnz
fildll
jg
ret
dec
add
fwait
enter
bnd
inc
ret
js
fs
clc
mov
or
mov
mov
sahf
add
push
push
xor
mov
idivb
mov
pushf
or
clc
lret
push
out
or
mov
sbb
addr16
or
rolb
int
lock
jg
cwtl
repnz
jmp
and
lods
add
sbb
push
fs
mov
enter
mov
mov
rclb
dec
cmpsb
fdivrl
dec
lock
xchg
stos
mov
les
or
xchg
ds
push
out
lret
mov
insb
cmp
cs
cli
sbb
fistpl
daa
fiaddl
popa
pushf
cs
push
or
popf
outsl
ljmp
add
scas
aas
pop
outsl
push
push
cld
lock
xchg
sbb
data16
add
mov
sub
add
xchg
stc
scas
jge
xor
ds
or
push
sarb
mov
sbb
add
hlt
lods
lock
jp
out
sbb
stos
add
or
scas
mov
push
adc
mov
div
mov
in
cltd
bound
int3
sbb
adc
pop
mov
xor
lods
pop
cli
hlt
sub
jo
xor
jo
fwait
push
ljmp
test
rcl
adc
mov
lock
out
lock
or
movsb
pushf
shlb
lods
lret
mov
pop
scas
mov
jno
mov
mov
hlt
out
out
shrb
ss
mov
pop
inc
push
rorb
sub
stos
pop
mov
aas
aam
or
or
jb
es
mov
push
push
ljmp
stos
into
leave
outsl
adc
xchg
mov
clc
sub
dec
cmp
faddp
lret
push
rcr
xor
frstor
or
lods
pop
bound
mov
clc
lret
push
xlat
adc
jg
ret
mov
ret
hlt
into
lret
call
ficoml
dec
jp
pusha
lock
sahf
popl
xor
in
mov
add
lods
sbb
adc
xchg
fiaddl
popf
mov
add
stos
out
sbb
aam
mov
dec
cld
push
xor
jle
lret
fs
mov
rcrb
sub
popa
movsl
out
aad
lret
cli
loope
sti
ficoml
or
add
pop
xorb
jne
sub
lock
les
or
nop
iret
rolb
rorb
rorb
add
xor
arpl
scas
dec
sub
xor
daa
sub
pushf
popf
and
out
add
daa
xchg
push
or
jnp
fcoml
xchg
ficoml
xor
scas
jecxz
lret
sbb
mov
adc
cld
mov
shrb
mov
dec
xchg
or
mov
nop
fcoms
inc
int3
mov
push
ret
xchg
idivl
mov
jle
mov
jl
or
mov
leave
fs
dec
scas
not
lock
leave
push
jbe
hlt
xor
sbb
cli
repz
jo
cmp
orb
adc
into
stos
test
aaa
fimull
fidivl
fwait
mov
mov
dec
test
sbb
sub
mov
add
and
sarl
nop
mov
into
mov
jb
xchg
fists
ret
hlt
out
sub
das
add
scas
xchg
add
clc
push
gs
jmp
out
mov
ljmp
not
push
data16
inc
pop
popf
sub
fimull
arpl
js
jg
dec
out
mov
popaw
sub
inc
jp
cmp
mov
insb
nop
jg
xlat
cmp
jno
fstpt
xchg
sbb
or
ljmp
shrb
sub
shlb
hlt
bound
movsl
or
and
adc
scas
sahf
mov
sub
rorb
add
pop
stos
sbb
push
dec
out
hlt
and
ljmp
mov
testb
push
and
fisubl
xchg
bound
jecxz
cs
std
and
dec
mov
ficoml
idivb
gs
push
push
push
int3
sbb
aam
inc
mov
clc
and
pop
pushf
cld
enter
pop
adc
icebp
fdivl
aam
dec
dec
lock
pop
shll
cmpsb
cmp
dec
cwtl
repnz
mov
mov
mov
psrlw
fcompl
or
test
xchg
adc
adc
push
or
int
xor
add
xor
mov
cmp
addr16
ljmp
mov
ds
mov
push
inc
mov
lahf
push
in
sub
enter
add
mov
or
ja
mov
cmp
mov
outsl
aaa
jo
sbb
pushf
ss
ret
sbb
xor
pop
xchg
sub
test
mov
xor
adc
scas
sub
sbb
cmp
adc
hlt
mov
sub
cltd
ficoml
movsb
xchg
xchg
sbbb
sbb
sub
cs
out
add
add
sbb
pop
or
hlt
mov
jns
sub
push
xor
jns
fcomp
push
push
fdivl
push
jl
pusha
mov
add
sbbl
cmp
sti
pusha
inc
in
loopne
mov
rorb
int3
ljmp
sbb
sbb
pop
enter
jns
fmull
out
inc
jbe
rorb
shlb
js
mov
jb
xchg
lcall
mov
lods
mov
shl
js
ret
jb
addb
cs
mov
hlt
jp
icebp
fsubs
pminsw
sub
add
cs
jp
mov
sub
sbb
into
repnz
aam
sbbl
shl
inc
mov
adc
fwait
ss
clc
cmpsl
out
arpl
cmpsb
or
cmp
xor
scas
xlat
sbb
cltd
lret
and
fbstp
fiadds
mov
enter
jp
xor
popa
sbb
in
xchg
stos
mov
popa
out
push
scas
add
call
push
sbb
rcl
push
movsb
sbb
lret
fsubr
lea
cmp
lea
shlb
movsb
xor
in
cld
into
pop
pop
xor
das
jbe
jp
push
into
and
jg
mov
pop
xchg
adc
ret
cld
or
mov
push
sbb
mov
cmp
out
cmp
sbb
lods
negb
rcr
aas
mov
lods
enter
mov
fdiv
push
xchg
stos
sbb
pop
xlat
stos
cmp
jbe
test
cld
mov
outsb
int3
fmul
jb
cmp
inc
enter
cmp
cli
adc
mov
cld
adc
jno
rolb
lret
xchg
hlt
mov
ficoml
inc
sbbl
jge
lret
enter
test
mov
mov
popa
call
jg
push
lret
adc
sbb
xor
decb
addr16
sub
pop
mov
js
sbb
xor
lret
ljmp
lret
add
or
ds
shrb
fimuls
ret
sarb
out
adc
and
xchg
aam
ds
cld
cmp
in
or
xchg
into
lret
lock
sbb
int
cmp
test
stos
ss
les
fs
notb
push
mov
lcall
cmp
fsubs
push
or
sarb
jno
fnstcw
outsb
mov
add
xor
mov
movsl
mov
add
jnp
jb
add
loopne
fstpt
push
stos
sub
sbb
sbb
sbb
shrb
cmp
mov
mov
das
pop
inc
or
movsb
jo
fs
iret
sar
or
push
mov
push
lods
ljmp
and
popa
fwait
cli
add
sbb
fcoml
cwtl
mov
cli
cmp
pushf
aad
sub
clc
fnsave
icebp
loope
mov
repnz
mov
nop
cmc
mov
aam
icebp
lcall
les
inc
mov
out
cld
push
andl
int3
cmc
or
in
push
ffree
sbb
add
xor
hlt
rclb
out
daa
shlb
dec
adc
cwtl
call
adc
cli
push
test
mov
cld
inc
mov
das
push
out
mov
or
lret
add
push
xor
in
mov
fcoml
mov
xchg
push
repnz
cltd
cltd
mov
adc
and
push
clc
lcall
cmp
sbb
xchg
xchg
add
mov
mov
stos
cltd
and
clc
push
push
xor
sahf
les
rorb
lods
cmp
sbb
ljmp
jne
push
xchg
dec
mov
ret
xor
jno
sbb
lock
or
out
and
add
fidivrl
jg
push
xor
pop
rcr
push
out
push
inc
mov
or
mov
add
popf
jp
clc
scas
cld
push
or
xchg
and
cmp
dec
mov
jg
mov
mov
add
bound
push
push
sbb
jmp
add
adc
cs
mov
es
fsubrl
sbb
and
xchg
and
ljmp
sbb
hlt
cwtl
add
inc
psrld
scas
sahf
lock
mov
mov
mov
loopne
sbb
rolb
movb
or
loopne
mov
mov
lods
xor
sub
jno
dec
iret
fisubl
or
xor
sub
cmp
cwtl
dec
ds
cmp
nop
mov
ss
and
add
lahf
rcrb
clc
cli
lret
xor
xchg
lahf
fcoms
sbb
push
test
jbe
fmull
adc
mov
hlt
add
mov
mov
mov
hlt
fwait
xchg
xor
sub
pop
rcrb
push
push
das
clc
scas
shlb
mov
shlb
pop
inc
les
in
inc
jno
cli
stos
ficompl
lods
cmp
mov
xchg
pop
push
cld
jp
js
sahf
sti
mov
ds
sbb
add
fs
ret
dec
in
sbb
lahf
pop
int3
add
in
fdivs
lret
cmpsl
into
cmpsb
cmp
ss
inc
stos
fdivp
mov
fidivs
aas
mov
cs
es
cli
mov
rorb
js
inc
mov
pop
dec
push
scas
fsubl
adc
nop
ss
lret
cmp
adc
scas
jg
dec
cmpsl
mov
ljmp
pop
inc
ljmp
out
enter
lods
cld
sub
aas
inc
fld
push
aas
sub
stos
mov
fadd
ds
rcrb
mov
mov
ss
fidivs
or
jmp
out
mov
jns
or
aad
and
mov
popa
inc
xchg
ljmp
es
jmp
dec
dec
aam
clc
xchg
dec
test
xchg
inc
gs
lret
sbb
mov
xchg
popf
fcmovb
mov
xorb
cmp
js
sbb
jmp
adc
ret
mov
subb
mov
int
fwait
mov
push
cld
sub
jp
mov
pusha
or
into
inc
mov
ror
js
sbb
sbb
jp,pn
inc
add
cld
imul
xchg
xchg
repnz
in
push
pop
mov
pop
enter
ficompl
mov
shr
cmp
adc
loope
pop
loop
cli
dec
pop
adc
or
aad
adc
testl
dec
mov
jmp
cmpsl
adc
push
jmp
mov
mov
push
shlb
xchg
ds
xchg
cli
int3
stos
sbb
xor
fwait
invd
mov
cli
pop
mov
mov
add
adc
movsb
les
mov
pushf
jg
lods
mov
aaa
pop
outsl
sub
mov
jae
rolb
adc
sbb
cs
xor
sbb
decl
xor
jnp
outsl
add
hlt
cmp
pop
adc
mov
push
cli
mov
outsl
ds
sub
lret
mov
in
inc
jnp
test
xor
in
jae
dec
into
push
push
pop
ss
int3
or
lret
jae
mov
jb
xchg
cmp
fdivrs
fidivrl
inc
rcrb
jnp
mov
adc
adc
mov
les
inc
mov
dec
mov
xor
add
cs
addr16
add
mov
mov
aas
mov
adc
js
xorb
mov
xor
rclb
iret
cmp
movsl
sbb
xor
das
lods
ljmp
push
mov
lahf
and
ja
in
movsb
cwtl
ret
sarb
cmpsl
ds
mov
out
das
dec
out
sbb
repnz
pushf
ljmp
repnz
sahf
icebp
mov
stos
push
pop
xchg
or
add
xchg
in
sub
js
dec
ss
lods
mov
rclb
outsl
js
dec
cwtl
sbb
enter
and
add
mov
sbb
mov
inc
fiaddl
push
sahf
sub
or
hlt
mov
leave
movsb
add
popf
mov
adc
and
and
cmp
out
enter
test
mov
add
fwait
imul
ja
or
mov
mov
sbb
xor
xchg
movsl
repnz
jns
add
rcr
sub
mov
sti
add
std
lock
ss
push
cmp
lock
xchg
push
adc
cli
adc
data16
int3
das
push
push
into
xor
ds
addb
sub
clc
out
jo,pt
xor
stos
and
imul
mov
mov
mov
int3
mov
mov
divl
dec
or
enter
xchg
push
hlt
or
cli
popa
mov
dec
push
jp
cmp
not
inc
clc
mov
mov
xchg
mov
push
lock
cs
sti
decb
mov
out
push
lock
pop
push
mov
pop
in
pushf
or
idivb
rolb
les
cli
sbb
mov
adc
stos
fisubl
sbb
loopne
jb
clc
into
cwtl
dec
or
loope
inc
adc
xchg
shr
jp
jp
jo
fistps
mov
shlb
mov
rorl
aaa
adc
icebp
fbld
adc
add
int
outsl
repnz
cmp
lods
fwait
rclb
popf
mov
shl
outsl
lret
mov
shr
mov
divps
daa
adc
fisubrs
pop
fistpl
pop
mov
lahf
jb
mov
pop
xchg
xorl
jge
adc
mov
add
pushf
inc
fidivl
sbb
add
or
pop
mov
mov
stos
add
hlt
add
sbb
mov
in
mov
mov
sbb
mov
mov
fimuls
ficompl
shlb
fdivl
push
push
adc
fwait
sbb
hlt
xchg
ret
aam
sbb
lods
add
push
cmp
pop
pop
push
stos
cltd
mov
scas
aam
lahf
lods
cmp
subb
idivb
lods
cld
bswap
mov
sbb
xchg
cmp
xlat
lods
inc
sbb
and
mov
inc
stc
popf
xor
push
xchg
pop
ret
xor
fistps
ds
leave
lock
aas
js
lret
sub
cld
leave
adc
arpl
cmp
fiaddl
xor
xchg
cmp
xchg
and
mov
pop
mov
fimull
nop
mov
push
adc
repnz
and
xchg
fdivrs
into
and
sub
dec
cmp
add
xchg
adc
add
add
jecxz
pusha
mov
mov
les
push
push
lock
nop
jne
mov
aas
ss
mov
icebp
data16
cmp
mull
repnz
mov
push
xor
fwait
mov
fcompl
xor
push
out
dec
lcall
movsb
mov
sahf
scas
push
add
push
nop
test
out
add
sub
xlat
or
ds
xor
enter
xlat
cmp
popl
xchg
test
lods
xchg
mov
lret
xchg
leave
notl
adc
mov
lcall
enter
dec
outsb
pop
in
sbb
mov
lock
add
das
push
repnz
xor
xchg
ds
sbb
into
mov
hlt
nop
adc
pop
adc
xor
cs
mov
fwait
mov
pop
lods
sub
lret
jge
fdivl
loop
dec
xlat
sub
mov
enter
test
les
push
cmp
xlat
lret
rcr
and
lahf
mov
jg
jg
pop
dec
or
out
stos
mov
stos
mov
into
inc
xchg
fdivs
adc
out
ds
xchg
shrb
pop
out
mov
sbb
pop
fcmove
popa
stos
adc
les
popf
insl
sbb
jp
adc
xor
add
xchg
rcr
jecxz
cmpl
lcall
or
aad
sarb
hlt
xchg
aam
fwait
add
out
xor
cs
popf
push
sbb
jl
enter
in
jno
ret
adc
jge
shlb
roll
cwtl
mov
add
jmp
sbb
pop
pop
ficoml
add
scas
mov
inc
cmc
push
mov
aas
into
imul
push
mov
add
mov
sbb
lods
xlat
les
pop
into
add
adc
lods
or
outsl
mov
hlt
ds
clc
jg
add
rcrb
cmp
rclb
mov
cmp
jg
dec
repnz
std
xchg
lret
and
jnp
push
out
or
cld
fisubl
sub
add
push
push
mov
arpl
in
aas
fs
inc
bound
xchg
xchg
xor
enter
adc
or
xchg
jmp
jbe
jp
and
js
data16
mov
into
adc
leave
filds
cmp
movsb
push
push
sbb
or
aad
mov
mov
mov
fiaddl
mov
sarb
xchg
lea
cltd
ret
stos
movb
jbe
jp
push
mov
mov
mov
push
scas
int
fsubrs
mov
shlb
mov
fwait
xchg
pop
cwtl
mov
push
xor
mov
pop
adc
push
enter
dec
adcb
das
or
ljmp
xor
daa
call
xorb
dec
pop
adc
lret
imul
sub
mov
repnz
sbb
fistpll
repz
sbb
mov
cli
clc
int
out
xor
sbb
mov
arpl
mov
fimull
std
cmp
pop
cmp
push
pop
lahf
sarb
dec
jecxz
iret
sub
or
loop
popf
xorb
pop
jo
dec
clc
add
lods
xor
into
iret
sti
cld
add
or
inc
mov
addl
mov
inc
fstpl
sahf
xchg
add
out
jp
or
lret
cmp
stc
and
jmp
hlt
mov
jnp
cli
mov
push
cmpsb
inc
stc
cld
dec
add
mov
movsb
rcrb
push
inc
ljmp
mov
stos
inc
mov
jmp
incb
mov
mov
enter
sti
out
repnz
cs
sbb
hlt
mov
dec
aad
repz
cli
sbb
outsb
cmp
hlt
aas
mov
jge
add
pop
cmp
push
xchg
jnp
cmp
inc
and
stos
jg
js
cmp
add
adc
mov
sbb
fdivs
aas
pop
leave
sbb
mov
sarl
add
cli
xor
addr16
into
sub
pop
shll
xchg
mov
sbb
xchg
or
cs
adc
mov
das
mov
xor
mov
repnz
scas
fldt
adc
xchg
or
mov
inc
sub
cmc
mov
inc
mov
xor
testl
stos
lcall
push
mov
fs
mov
lock
cli
mov
sbb
mov
aam
les
sub
cmp
xchg
jle
xchg
push
aam
out
std
pushf
sbb
clc
cmp
inc
push
pop
jp
insb
movsl
sbb
ss
out
ljmp
out
loop
lods
mov
cli
or
fimull
shlb
mov
sbb
movsbl
movl
and
xlat
inc
adc
mov
out
out
pop
std
lret
fists
push
lock
shrb
aas
mov
add
aas
in
das
cmp
mov
cmp
testb
sbb
ds
mov
mov
mov
push
add
xchg
fucomi
cltd
adc
jne
inc
jb
mov
andb
inc
jle
xor
aam
pop
movsl
cmp
add
pop
lds
lret
sub
adc
movsb
or
scas
cld
lahf
add
mov
pop
mov
mov
scas
loope
aaa
lea
cmp
mov
lahf
inc
sbb
mov
or
shlb
cmp
adc
hlt
adc
xor
popf
ljmp
mov
lods
or
pop
mov
mov
movsl
incl
mov
lock
inc
outsl
shll
data16
scas
mov
or
mov
add
mov
or
daa
sub
mull
inc
push
scas
push
fdivrl
dec
sbbb
ds
cs
aam
cld
adc
sbb
adc
pop
and
stos
addr16
or
jae
mov
std
aam
pop
sbb
mov
lcall
mov
xor
cmp
xor
fstps
add
xchg
cs
rcr
ljmp
pop
addr16
xchg
jae
xor
mov
sbb
cmp
xorl
std
sbb
scas
or
enter
outsl
insb
inc
mov
movsb
xchg
ljmp
jae
mov
mulb
sbb
mov
cld
lods
fidivrs
mov
cmp
cmp
test
adc
aas
adc
das
inc
es
out
ljmp
fwait
ljmp
push
jb
mov
loop
sbb
enter
int3
sbb
fbstp
xor
push
hlt
sbb
mov
mov
adc
shrb
sub
scas
int3
nop
inc
clc
adc
lock
ss
bound
push
and
xchg
push
mov
les
mov
repnz
jg
mov
sbb
rorb
mov
push
cld
mov
adc
cmp
mov
fstpt
push
dec
incb
xor
fsubs
add
stos
jp
xor
jo
push
scas
iret
movsl
outsb
sbb
mov
ljmp
cmc
xchg
hlt
adc
mov
xor
cmp
pop
jbe
mov
mov
test
xchg
pop
out
inc
jecxz
mov
or
addr16
xchg
cmp
xor
push
and
dec
xchg
push
out
lahf
js
fcmove
pop
das
sbbb
clc
nop
out
into
sbb
inc
sbb
cmp
leave
xchg
cli
in
xor
xor
sub
into
and
or
jae
inc
rsqrtps
push
add
aad
push
cltd
lahf
mov
enter
mov
xchg
jp
jp
lcall
adc
push
mov
inc
or
push
js
mov
int3
ljmp
stos
lahf
imul
mov
jmp
aaa
fistps
jns
mov
and
adc
cmpl
sub
les
and
xlat
push
movsl
xor
or
enter
bound
inc
push
or
cmp
mov
or
inc
scas
adc
cmpl
xchg
sbbb
push
add
fidivrs
and
ljmp
push
xor
inc
cld
jne
lods
vandps
int3
pop
cmp
fstpt
out
pushf
mov
xchg
iret
add
sbb
push
jns
adc
rcr
pop
jns
pop
dec
mov
int3
fcoml
leave
jp
cmp
xor
pop
push
mov
mov
xor
sub
gs
iret
into
cmp
add
sub
cmp
or
cmp
sbb
int3
ds
inc
xor
fldenv
ret
in
sbb
loop
mov
mov
sbb
sbb
into
sub
inc
sub
add
ret
lea
pop
call
enter
or
stos
scas
sbb
lret
pop
xchg
movsb
gs
pop
ud1
push
lds
mov
out
adcb
scas
add
inc
outsl
push
sub
loope
jecxz
outsb
pop
scas
jp
or
jle
cmp
int3
shrb
outsb
cs
loope
sbb
pop
mov
jb
mov
xchg
sbb
addr16
jno
arpl
mov
xlat
or
mov
rcrb
cli
mov
mov
mov
stc
and
xor
jnp
loopne
push
or
hlt
xchg
pop
xor
push
push
fst
fidivs
sub
sbb
js
jae
cmpsl
loope
into
sbb
sbb
imul
fadd
mov
xor
ds
cmpsb
jne
and
dec
int3
mov
sub
int3
mov
or
fisttps
add
outsl
inc
or
mulb
push
add
mov
loopne
js
lret
push
jae
lods
out
lock
jb
or
ljmp
add
iret
or
ljmp
popf
scas
xor
icebp
gs
jg
loope
leave
push
ret
lahf
lret
cmp
mov
jg
mov
das
mov
inc
mov
lret
sub
push
outsl
dec
xor
lods
cmp
sbb
stos
push
sub
hlt
mov
sub
out
add
add
xlat
into
aam
int3
lods
or
sbb
mov
push
repnz
lods
adc
cmp
clc
mov
loopne
mov
cld
aam
data16
add
xor
scas
scas
sbb
xor
mov
inc
pushl
sbb
sbb
xchg
sarl
mov
cmpsb
sbb
pop
dec
in
ret
sub
add
sub
call
mov
xchg
adc
stos
sbb
pop
enter
lcall
xor
movsb
push
in
cs
adc
and
out
loopne
mov
sar
sbb
push
out
sbb
mov
or
loopne
mov
xchg
cli
add
xchg
cmp
cmp
xchg
mov
imul
mov
sbb
fcoms
rolb
stos
xchg
lods
enter
push
movsb
push
stos
nop
scas
mov
ds
mov
inc
shll
nop
jg
mov
stos
mov
cs
rcl
or
push
imul
lret
mov
mov
cmp
fcmovnbe
movsb
cmpps
mov
mov
sahf
adc
inc
repnz
bound
shlb
mov
mov
mov
adc
cld
mov
les
pop
push
mov
push
js
mov
pushf
test
pop
or
mov
cli
sahf
inc
or
xor
xor
bound
add
mov
inc
push
ror
mov
cld
andb
push
xchg
jp
enter
hlt
sti
sbb
cwtl
inc
incb
mov
insb
aam
bound
dec
lahf
mov
faddl
lods
mov
out
xchg
dec
cs
push
fs
mov
push
je
jno
ficompl
sbb
lods
sbb
pop
push
clc
aas
inc
or
cld
inc
ljmp
gs
test
push
mov
out
fiaddl
sahf
lock
hlt
mov
mov
sarb
scas
repnz
and
mov
decb
imulb
ret
sahf
sbb
dec
int3
into
scas
or
mov
fwait
adc
rclb
dec
bnd
add
jb
xchg
xchg
cmp
pop
xchg
and
dec
xchg
test
pop
mov
mov
mov
cmp
pop
fadds
scas
int3
ret
lods
cmp
fsubs
sbb
repnz
push
insl
push
cmc
mov
cmp
shll
lock
jo
dec
pop
inc
into
icebp
mov
lahf
aad
adc
ljmp
insb
or
pop
xchg
repnz
pop
inc
adc
fcomip
or
push
scas
int3
jge
push
pop
mov
mov
js
mov
add
icebp
fadd
lret
leave
dec
in
xor
mov
js
leave
xchg
cli
xor
push
scas
adc
in
dec
cmpsb
push
sarb
or
pushf
cmpsb
ss
jecxz
sbb
lock
fbld
clc
and
cwtl
imulb
mov
mov
clc
mov
ss
push
into
cltd
xchg
cld
or
mov
adc
xchg
mov
sub
jp
ret
nop
sub
mov
push
mov
add
fnstsw
jnp
shlb
add
jp
fdiv
outsb
dec
pop
into
cld
jb
divb
test
cmp
add
xchg
mov
mov
mov
cltd
lock
clc
add
jae
je
sub
or
repz
cmpsb
sarb
add
sbbb
or
into
and
scas
xchg
rclb
fnstenv
push
mov
in
in
out
jecxz
push
mov
ss
mulb
push
lret
adc
js
sbb
ljmp
mov
fnsave
lock
ret
ljmp
fcomps
faddl
fdivrl
cld
adc
enter
sbb
inc
scas
cmp
das
lods
lret
fiadds
mov
icebp
fstpt
les
out
rcl
push
cld
mov
mulb
out
clc
or
add
xor
idivb
push
mov
add
cli
jp
loope
xor
cmpb
adc
clc
mov
push
sbb
cmp
faddl
rcl
lret
or
sbb
dec
inc
sbb
push
sarb
pushf
out
sar
adc
stos
loopne
les
cmp
xor
das
jne
cmpsb
aaa
or
mov
fdivrs
sub
xor
shrb
push
adc
dec
ficomps
es
pop
out
ret
push
sub
outsb
int3
cmp
gs
mov
or
adc
add
push
mov
pop
mov
push
in
lods
xor
fcomp
mov
pop
sbb
sarb
outsl
dec
jo
cld
negb
in
mov
test
pushf
fstpl
test
clc
mov
les
sbb
fcompl
fwait
jmp
testb
push
or
add
inc
jmp
cmp
enter
mov
jp
add
jle
mov
inc
cmp
dec
das
lea
scas
cld
add
enter
stos
mov
xchg
enter
lret
mov
adc
lock
pop
call
test
cld
aam
repnz
lock
out
xorl
pop
jae
jnp
std
and
xchg
or
mov
clc
pop
dec
mov
jge
lods
lea
jb
cmp
jnp
shll
mov
clc
scas
cmpsl
loop
scas
xor
pop
test
fsubs
and
and
sbb
mov
dec
sbb
xor
test
popa
or
cmove
jge
shr
cmp
cmp
sbb
xorb
fsubs
and
sbb
xchg
ss
cmpsl
pop
inc
xchg
negl
lock
and
cld
inc
jbe
bound
les
outsl
movsl
adc
push
aas
adc
cmp
movsb
ficoms
xchg
mov
fidivrl
mov
out
ret
in
jb
lods
sub
ss
push
mov
lods
push
cli
stos
test
sub
outsl
add
or
mov
rclb
xor
xchg
outsl
mov
aam
adc
mov
add
lock
or
sbb
repnz
stc
mov
xor
or
aam
pop
out
cld
xchg
mov
push
ror
pop
cli
rolb
cmpsl
lahf
inc
outsb
jbe
jb
mulb
fdivrs
xor
test
xchg
jb
fists
push
mov
cmp
enter
sub
cmpb
ljmp
push
aas
pop
outsb
push
sub
cmp
dec
mov
ss
and
adcb
repnz
inc
push
pop
ret
fimull
sub
mov
scas
xor
cli
shl
sbb
xor
mov
rcrb
push
push
or
xchg
enter
adc
add
adc
xchg
mov
loop
daa
call
outsl
bound
ret
mov
or
out
xchg
outsl
sbb
dec
and
ret
testb
out
faddl
sbb
jnp
rcrb
xchg
xchg
inc
sbb
mov
into
andb
fidivrs
jnp
inc
mov
add
nop
in
cs
sbb
leave
mov
jp
add
sarb
testb
add
push
sbb
jp
sbb
sbb
cmp
push
mov
sbb
add
adc
inc
jbe
push
fidivl
ror
mov
add
fsubrl
mov
les
clc
lea
loop
ja
scas
inc
mov
mov
and
xchg
jmp
bound
cmp
push
or
jb
xchg
mov
push
mov
jne
mov
inc
push
mov
add
sahf
cs
sub
push
and
cmp
cmovle
xchg
jb
or
jp
jb
test
cld
out
into
in
inc
hlt
mov
sub
pop
fisubl
loop
iret
or
mov
push
lret
jp
pop
int3
sarb
rclb
add
xor
mov
subl
adc
rcrl
cmp
lret
and
inc
stos
aam
sbb
adc
into
mov
call
shll
sbb
or
mov
xor
rcrb
fdivp
mov
fwait
in
or
mulb
jp
or
test
dec
mov
mov
push
mov
shrb
add
test
sbb
mov
ds
cmp
pop
add
and
jno
mov
arpl
loop
outsb
mov
fcomps
push
push
div
mov
jb
sarb
fsubrp
addb
stos
inc
lcall
add
ficoml
lahf
sub
cmp
jno
pushf
cld
scas
dec
cmp
mov
stos
mov
shlb
cltd
fwait
ss
mov
into
sub
mov
adc
clc
imul
mov
dec
shrl
xchg
les
or
mov
adc
mov
sahf
hlt
sbb
mov
and
mov
enter
lods
adc
rcrb
add
adc
rcr
jg
sbb
xchg
ljmp
out
fiaddl
xor
leave
cwtl
ret
ss
in
xchg
nop
pusha
mov
mov
int3
sub
pop
ffree
data16
adc
jge
or
enter
hlt
nop
push
clc
lret
cmpsb
popl
dec
in
data16
test
xchg
sahf
lds
out
add
sub
idivb
inc
or
push
push
pop
fs
fstpl
pushf
add
in
shlb
mov
push
mov
in
rolb
mov
lods
iret
out
lods
sbb
sbb
inc
mov
in
pop
push
rcr
hlt
fdivp
lock
or
enter
push
outsl
cmpsl
faddp
inc
adc
cmp
jg
pusha
cli
xor
sti
mov
mov
cmp
cmc
xor
pop
gs
gs
sbb
jo
mov
dec
xor
out
pushf
js
pushf
jecxz
or
cli
fdivp
lods
sub
mov
repnz
push
clc
jp
jp
pushf
or
test
adc
adc
arpl
mov
in
outsl
in
mov
incb
js
adc
mov
lahf
mov
mov
adcb
xor
mov
sarl
outsl
aaa
pusha
mov
out
mov
faddl
dec
pop
scas
nop
xlat
add
popf
inc
xor
cmp
enter
sbb
lds
lea
adcb
add
jno
mov
es
pushf
mov
int3
pop
xchg
or
cli
hlt
dec
cmp
test
push
fwait
scas
add
adc
sti
shrb
cmp
adc
ret
shl
adc
mov
cld
push
push
cld
sbb
nop
mov
add
ljmp
sbb
dec
pop
push
faddp
lods
sahf
mov
mov
xor
rorb
sbb
sbb
das
jae
ficomps
mov
mov
dec
xor
cmp
bound
jo
inc
pop
daa
adc
ds
push
lock
xchg
xchg
sti
fdivrs
adc
stos
in
cmpb
pop
pop
decb
xor
inc
filds
sbb
push
mov
xor
add
cmp
jp
jle
mov
adc
or
out
xor
cmpsl
pop
sbb
mov
sub
push
mov
add
xor
lret
insb
in
mov
cmpb
push
mov
jo
mov
gs
adc
int3
push
xchg
pop
fdivrl
stos
bound
cld
xor
clc
cmp
fdivs
add
pop
dec
cmp
mov
cmp
cmp
mov
cli
sbb
lahf
hlt
or
push
insb
repnz
or
adc
sbb
out
sbb
adcl
cmp
cmp
mov
out
lea
test
mov
icebp
cmpsb
jb
js
sahf
in
cs
aam
adc
mov
adc
scas
in
nop
adc
lock
daa
xchg
fisubrl
xor
fcom
jo
mov
shrl
mov
fadd
stos
sbb
xchg
pop
adc
inc
or
mov
int3
or
push
out
mulb
cmp
out
push
sub
or
mov
lock
push
mov
repnz
ret
shlb
call
mov
fildll
repnz
int3
mov
lret
mov
sbb
fldcw
pop
cmp
movsb
popf
mov
push
cs
xchg
test
mov
dec
add
dec
mov
xor
sbb
mov
sti
mov
pop
mov
in
dec
clc
mov
mov
ror
gs
mov
adc
pop
sbb
adc
fadd
ss
mov
fstps
mov
mov
fbld
outsl
aas
push
add
pop
popf
sub
cs
stos
or
mov
mov
outsb
in
inc
xor
adc
pop
mov
mov
and
cs
xchg
imul
cld
push
fidivs
mov
fmul
aas
adc
push
int
xor
cltd
add
ret
push
ljmp
mov
pop
or
pop
imul
mov
aam
cmp
aad
out
out
mov
xchg
mov
lods
out
mov
rolb
push
mov
cld
dec
outsb
jo
sub
xlat
fcoml
add
ret
add
iret
mov
xor
popf
in
into
in
fnstsw
xor
push
mov
xlat
pop
repz
push
sbb
stos
adc
int3
out
lcall
fildll
inc
loopne
cmpsb
or
push
xchg
shlb
add
in
call
dec
cld
int3
fisubl
and
fsub
jne
cli
testb
push
or
sub
outsl
sbb
in
sbb
lea
mov
inc
flds
pop
mov
icebp
adc
out
xor
addr16
clc
mov
stos
lret
cltd
dec
inc
into
sub
rorb
mov
inc
out
inc
aad
dec
in
or
mov
mov
fsubrs
cwtl
sbb
or
test
test
mov
cld
sub
push
pop
mov
cmc
jae
and
sbb
mov
sarl
cli
lods
jg
sub
mov
lock
mov
sbb
int
in
orb
test
mov
xlat
mov
mov
sbb
outsl
popa
iret
rol
cmp
pop
pop
ret
inc
mov
ret
pop
ret
pop
jmp
push
ret
jmp
out
shlb
sbb
ret
sbb
mov
push
out
out
lock
repnz
sahf
or
push
out
cli
nop
sub
and
push
fidivl
push
sub
ljmp
sbb
or
loope
xchg
jmp
test
fidivrl
sub
enter
mov
bnd
or
mov
mov
xchg
dec
mov
sbb
fnstsw
out
mov
repnz
lea
mov
or
xchg
out
in
into
loope
pop
jbe
jo
add
adc
fdivl
test
adc
ret
in
shrb
out
dec
add
pop
cmp
pop
xor
jb
lret
enter
shrb
outsl
or
sbb
bound
aam
mov
jmp
das
cwtl
add
notb
mov
lret
ficompl
repz
add
cltd
sub
shrl
lahf
pop
sub
pusha
ljmp
mov
out
rcrl
sub
pop
jg
ret
sbb
add
test
and
jg
repnz
popf
sbb
cs
xchg
inc
sarl
inc
fadd
pusha
ss
pop
or
push
xchg
test
fisubs
into
cmpsl
jae
lcall
inc
pop
les
adc
mov
gs
push
pop
test
cs
lcall
adc
fstpl
add
pop
nop
push
inc
xor
sub
decb
inc
aas
ret
cld
into
mov
push
mov
int3
sub
lret
daa
les
mov
sub
scas
xor
gs
movhps
xchg
add
push
negb
lock
adc
xor
mov
movsl
ds
xor
bound
fsubrl
mov
push
fidivl
dec
ds
sbb
fcompp
scas
jg
popf
stc
adc
pop
sbb
add
aam
push
lock
out
push
xchg
in
or
mov
enter
cmp
inc
lcall
sbb
mov
repz
lea
add
mov
shlb
stos
shrl
data16
jnp
jp
leave
js
cmpsb
rcrb
dec
mov
mov
adc
push
dec
movsb
inc
xchg
pop
cltd
sti
sub
add
mov
scas
add
repnz
cmp
sub
mulb
jle
mov
sbb
addr16
or
mov
cmc
xchg
lea
adc
insb
call
mov
jecxz
jae
lods
inc
xor
jg
outsl
pop
lcall
sbb
in
mov
cli
mov
dec
sbb
mov
lcall
ss
pop
or
xchg
mov
sti
push
mov
xor
das
nop
cmp
inc
aas
cmp
xchg
notl
sbb
movsb
nop
cmc
sbb
negb
mov
jae
mov
dec
aam
mov
cli
lahf
negb
dec
fsubr
addr16
sbb
pop
or
scas
push
mov
mov
dec
xchg
or
enter
ds
mov
int3
mov
sahf
lods
dec
cs
ds
lret
add
test
mov
xor
mov
xor
sbb
les
jg
and
add
fndisi(8087
xorb
jb
inc
xor
gs
stos
aam
push
sub
insb
sbb
lea
xchg
sub
iret
jle
jo
rolb
jp
pushf
mov
iret
or
loop
int3
movsb
lahf
add
push
cld
sbb
out
clc
and
sti
cmp
xchg
mov
or
fists
inc
pop
outsl
js
hlt
shl
xchg
fisubrl
xchg
enter
mov
outsb
ja
pop
mov
cli
lock
repnz
pop
xor
xchg
sti
ss
xchg
divb
enter
and
sub
fdivs
les
or
mov
sbb
addr16
lret
sar
xchg
jo
mov
ret
shl
hlt
mov
inc
aas
sub
fcomi
adc
ss
mov
and
jp
mov
fs
es
enter
mov
pop
pop
mov
xor
out
add
xor
cli
cmp
xor
cmpsb
cmp
fdivl
cmp
dec
aam
adc
xor
jmp
les
js
fs
outsb
inc
xchg
xor
mov
jg
push
mov
dec
addr16
adc
divb
or
loopne
shlb
jo
mov
sub
jg
sarb
add
dec
fidivrl
mov
push
fdivl
iret
mov
out
stos
enter
fs
stc
fcmovbe
in
out
dec
movsl
or
pop
mov
or
int3
jg
push
lock
xor
or
cmp
ds
repnz
out
inc
ds
cmp
in
mov
jp
mov
or
mov
adc
mov
xchg
jmp
clc
mov
lock
xchg
cwtl
mov
cmp
loope
cmp
iret
push
mov
fcmovb
mov
lods
lcall
movsb
fstps
lcall
fldt
sbb
sub
jbe
mov
out
inc
push
inc
sub
out
mov
bound
fisubrl
mov
cmp
out
sahf
xor
add
es
jb
push
dec
mov
and
popa
xorb
fwait
into
pop
rcll
fistpll
mov
mov
push
enter
mov
cmp
std
push
jno
dec
sub
push
cmp
rcll
lret
adc
sti
xrelease
movsb
inc
dec
jae
divl
roll
scas
int
or
icebp
adc
clc
enter
shr
or
scas
adc
and
fldcw
rcrb
mov
fcmovnu
mov
jle
fadds
leave
cld
push
cmp
add
mov
imul
les
call
bound
out
rolb
xor
lret
pusha
or
xor
xor
fsts
fsubrs
pop
mov
push
scas
in
loope
mov
add
xor
xchg
add
adc
adc
push
sub
mov
rcr
pop
clc
or
pop
fwait
dec
xchg
jecxz
mov
cs
push
hlt
ret
pop
mov
lret
adc
lahf
inc
mov
rclb
pop
hlt
adc
add
or
cmp
jo
data16
jnp
js
jp
ret
nop
push
or
xchg
and
mov
sbb
add
or
dec
xchg
mov
cmpsb
and
bound
pusha
div
cmp
push
xor
cld
data16
jnp
or
push
mov
cwtl
cmp
ljmp
dec
mov
lea
repz
inc
clc
cmpb
adc
inc
mov
push
insl
ds
addr16
xor
ds
jae
xorb
sub
imul
push
lret
dec
mulb
cmp
sub
push
scas
js
cmp
jp
outsl
cmp
sbb
mov
mov
loop,pt
cmpb
rol
ficoml
jns
cli
xchg
and
cmpsb
or
adc
inc
or
cmp
scas
sti
stos
fs
addr16
or
xchg
cli
adcl
sbb
stos
jb
scas
inc
inc
sbb
jo
mov
das
sub
mov
add
sbb
testl
jne
mov
xor
add
adc
sbb
or
cmp
loopne
or
mov
les
stc
into
add
and
sarb
add
pop
ret
cmp
or
jno
mov
out
cmpsl
arpl
rol
jg
dec
idivb
movsb
int
and
mov
aas
dec
dec
xchg
mov
cmpsb
xor
fcomps
pop
movsb
ret
inc
cmp
fldz
cld
mov
enter
sbb
lret
clc
shlb
jp
rcrl
cli
scas
outsl
rcrb
in
xchg
hlt
cmp
mov
repnz
mov
cmp
cs
mov
mov
cmp
shll
or
cltd
and
add
xchg
xchg
cli
lret
cwtl
lods
inc
bnd
inc
jns
adc
scas
add
push
or
cli
adc
mov
stos
cmpsl
sarl
sbb
scas
insb
ljmp
cs
pop
sub
fildll
mov
ret
aas
xor
lods
mov
scas
cmp
sbb
arpl
lea
stos
mov
jb
pop
xchg
ljmp
add
imulb
mov
out
imul
mov
mov
adc
push
les
sbb
add
jnp
push
mov
daa
js
in
xor
shrb
mov
or
out
lahf
inc
sbb
cld
add
jp
dec
inc
dec
fwait
add
cli
ja
out
mov
int3
movsb
jecxz
stos
pop
pop
mov
mov
clc
push
shrb
sar
cmp
inc
int3
mov
popf
das
push
clc
lods
scas
mov
push
push
pop
pop
lret
mov
cmp
xor
in
icebp
ret
ja
cmp
mov
push
lods
lock
push
dec
sbb
pop
scas
out
fmull
cmpsb
mov
xchg
or
pop
sbb
jnp
mov
pop
in
or
add
xor
mov
xchg
jmp
add
mov
sarb
out
ret
mov
lods
dec
stos
xor
push
loop
xor
pop
xchg
loop
fisubl
pushf
les
popa
dec
fdivr
jge
fldt
mov
mov
sub
shrb
outsl
popf
mov
xlat
mov
adc
test
jae
push
push
ljmp
data16
add
mov
sub
mov
aaa
and
lret
addr16
ds
cmp
adc
inc
mov
xlat
int3
add
mov
cmp
jp
xchg
ljmp
shlb
push
ret
push
jge
les
pop
add
sub
icebp
pop
jnp
sbb
aam
out
ret
aam
jl
leave
int3
repz
addr16
mov
dec
push
push
mov
ficompl
imulb
or
jnp
lahf
jecxz
inc
add
cli
push
xor
lods
mov
aam
std
pop
stos
cld
mov
scas
jge
add
scas
std
jns
add
bound
sub
xchg
jecxz
xchg
pop
xor
ds
ds
call
arpl
std
add
push
pusha
sbb
cmc
jge
scas
push
ss
add
lds
xor
add
pop
fidivl
add
pop
push
pop
les
mov
mov
xchg
jb
rcr
dec
dec
cli
mull
ja
cmp
decb
aaa
xor
cmp
push
xchg
lods
into
aaa
push
fimuls
lret
adc
ja
addl
push
test
mov
dec
leave
imul
jp
mov
jmp
addr16
pop
mov
mov
imul
dec
xlat
mov
rorl
xlat
push
addr16
rorl
xlat
mov
mov
and
mov
mov
and
imul
mov
shrb
aad
mov
gs
add
add
in
pop
not
mov
mov
cmp
scas
or
push
mov
push
loopne
xorb
nop
inc
into
adc
inc
scas
dec
cld
push
cmp
daa
mov
ret
pop
les
cld
fmul
addr16
insb
cli
dec
mov
or
stos
fcmove
notb
int3
add
sbb
fcomps
mov
fisubrs
adc
pop
mov
adc
add
cld
sbb
out
cs
enter
daa
sbb
mov
sub
int3
mov
bound
stos
mov
inc
push
push
adc
jno
mov
lcall
lahf
sub
mov
decb
push
mov
scas
mov
out
jb
int3
pushf
mov
dec
in
jno
fdivr
push
popa
sarb
addr16
or
movl
aam
sti
and
xor
or
xchg
xor
pop
push
ret
or
ds
adc
mov
rol
sub
sub
jp
mov
scas
jnp
mov
mov
repnz
iret
lock
pop
push
mov
sbb
shrb
fcomp
add
test
ljmp
and
xchg
clc
xchg
pushl
sbb
xchg
jg
clc
lret
mov
ss
ficoml
addr16
sahf
add
xor
xor
cli
lods
mov
andl
out
negb
xor
ret
aam
into
js
ficoml
cli
xor
test
iret
decb
clc
sti
cmp
sahf
insl
stos
dec
out
hlt
les
or
mov
adc
jns
mov
push
lods
stos
into
in
scas
mov
cwtl
adc
push
ss
data16
ljmp
shlb
mov
mov
sbb
fdivrl
push
scas
xor
scas
or
fwait
mov
mov
mov
mov
int
push
cmp
lods
rcll
enter
xchg
cs
jle
xor
fmull
cmp
jmp
mov
and
sub
sub
lods
and
pushf
mov
ret
pop
rolb
ljmp
fdivl
fiaddl
lods
movsl
xor
js
lcall
mov
fsubrl
xor
push
mov
je,pt
and
into
aam
sbb
popa
ss
mov
cmp
ljmp
je
push
push
mulb
aam
in
in
lcall
repnz
fdivs
mov
xor
xor
sbb
sti
fsubp
push
ret
shlb
add
fnstcw
stos
sbb
jp
mov
mov
jl
adc
enter
out
js
xchg
xchg
sub
lods
into
push
cmpsb
mov
ret
xor
jb
lods
arpl
repnz
insb
jb
js
jp
outsb
repz
or
push
lods
xor
sbb
cmp
adc
mov
cltd
and
dec
adc
push
cmp
scas
inc
ljmp
ret
nop
mov
cmp
adc
rclb
js
jb
ret
jp
rcrl
in
dec
add
sbb
cmc
cs
popa
cmpl
or
femms
int3
push
addr16
mov
mov
in
or
int3
loop
iret
dec
xchg
xor
rolb
out
push
lods
pop
cmp
sar
mov
popf
xor
out
xor
les
movsb
ds
mov
xor
mov
js
mov
clc
movsb
sbb
inc
shlb
enter
ret
ds
add
stc
jbe
jp
int3
mov
add
mov
lods
cmpsb
fdivs
cwtl
scas
cmp
mov
into
movsb
inc
popf
jecxz
bnd
sbb
sahf
add
ss
cs
out
inc
and
mov
mov
fmul
jo
sbb
pop
fadd
inc
sub
xorb
xor
ds
push
and
sbbb
cmp
repnz
adc
or
cmpsb
insb
push
xor
mov
in
sbb
jo
lods
orb
jp
fs
lahf
jnp
aam
movsb
popf
xchg
mov
jae
rcr
dec
lret
pop
dec
mov
cld
insl
inc
mov
adc
lock
mov
aam
xor
div
dec
mov
mov
push
jnp
sub
xor
mov
pop
cmp
rclb
jl
add
fdivrs
xor
shll
xor
mov
mov
jecxz
mov
lods
in
cwtl
div
adc
mov
enter
int3
loopne
fldl
and
fsubrl
xchg
jbe
adc
push
push
adc
inc
out
enter
inc
dec
cmp
add
mov
hlt
xchg
aam
push
add
pop
xor
mov
mov
xor
mov
hlt
xor
xchg
in
xor
mov
lods
div
in
sarb
pushf
adc
or
fdivrl
notb
add
rolb
xchg
push
sbb
sub
mov
cli
mov
hlt
movsb
mov
jge
xor
es
mov
push
or
std
movsb
popa
ret
dec
jns
das
cmp
or
push
jmp
out
shl
jbe
push
addl
sbb
lcall
movsl
lea
xchg
sbb
stos
pop
inc
aam
xor
cli
push
mov
add
and
dec
popf
aaa
mov
test
out
icebp
pop
sub
test
lds
cmpsb
xchg
cld
xchg
or
jb
test
test
push
xor
or
cmp
rclb
repnz
jae
cmp
push
dec
nop
cmp
cmp
cli
push
push
xchg
cmp
popa
subb
repnz
push
outsb
sarl
fists
mov
pop
push
mov
in
push
and
adc
pop
inc
inc
mov
lock
fsubrl
call
jg
aas
inc
out
fdivr
cmp
lock
cs
rol
and
cmp
xor
aam
out
fdivs
mov
gs
push
aaa
add
inc
out
jle
hlt
inc
out
xor
or
stos
mov
rorb
sbbl
incb
repnz
mov
enter
ret
in
add
xor
clc
mov
push
ss
or
jle,pt
out
xor
xchg
mov
das
addr16
outsl
cmp
dec
sbb
mov
stos
sbb
fnsave
ds
mov
mov
sbb
mov
lahf
insl
or
rcrb
and
xchg
imul
fsubrl
adc
mov
xor
mov
scas
pop
jge
repnz
mov
push
testb
push
sub
int3
rcrb
mov
sbb
out
loop
xchg
ljmp
mov
pop
lods
mov
mov
lods
cmp
pusha
stos
stc
ljmp
push
stos
scas
and
les
fisttpll
test
cmpsb
or
or
rcr
mov
xchg
push
ss
in
cmp
adc
mov
cmp
mov
clc
xchg
push
ficomps
mov
mov
xor
add
mov
mov
int3
adc
cli
sub
jl
inc
mov
out
das
pop
jo
add
js
dec
jo
mov
xchg
sub
cli
popf
adc
fidivrl
pop
repnz
loope
addr16
fwait
or
cmpsl
push
xchg
sbb
faddl
sbb
lea
repz
or
icebp
fld
lods
cli
adc
push
mov
aas
iret
or
mov
xchg
shlb
aam
adc
outsl
add
inc
addr16
test
mov
lock
push
repnz
mov
inc
push
out
inc
fisubl
pop
clc
mov
mov
call
stos
adc
xchg
faddp
jb
adc
loope
mov
add
sbb
fcmovu
sbb
adc
incl
add
push
xor
orb
inc
or
xchg
add
rcrb
mov
inc
xchg
pop
popf
push
hlt
or
aas
mov
clc
stos
sub
enter
in
mov
jg
pop
add
insl
lock
scas
lret
mov
fcoms
daa
cmp
js
pusha
sbb
lods
inc
hlt
sub
lea
hlt
xorl
stos
sarb
out
push
cs
mov
ss
dec
add
push
or
test
mov
aas
pop
jnp
mov
addr16
fsubr
sbb
mov
or
xor
mov
cli
fwait
jb
sbb
mov
adc
xchg
fsubr
lods
xchg
and
or
inc
cmp
sbb
movsb
add
pop
add
in
ficoml
in
fwait
stos
test
mov
fdivrl
push
adc
push
mov
or
fs
mov
cmp
cmp
dec
outsl
push
insb
mov
pop
sub
add
mov
cld
push
les
mov
mov
cmpsl
outsl
mov
in
fwait
scas
add
sbb
cmpsl
aas
inc
fbld
ss
test
ss
cmpsl
pop
inc
mov
and
pop
enter
fildll
adc
negb
dec
jecxz
sub
or
aad
clc
enter
aam
outsb
repnz
mov
adc
mov
jnp
outsl
push
xlat
jno
dec
orb
addb
sub
enter
ds
cmp
nop
leave
dec
fwait
mov
xchg
aam
test
mov
rorb
lods
les
dec
ret
or
pushf
subl
pop
mov
push
rcrl
stc
adc
cs
mov
add
fcomp
xor
outsl
jp
jbe
sarb
or
mov
aam
xchg
sahf
enter
hlt
adc
stos
pushf
fdiv
xor
cmp
pop
push
adc
clc
imull
test
mov
mov
hlt
mov
loope
test
cmp
inc
rcrb
sbb
aam
and
in
mov
repnz
push
out
loope
frstor
mov
dec
sub
cld
pop
sbb
or
shlb
sbb
ljmp
jb
cmp
inc
push
lds
into
xor
outsl
jae
cld
out
or
lds
xchg
iret
fwait
ljmp
psrad
and
add
shl
add
dec
ffree
or
fld
scas
mov
lods
lock
loope
and
mov
inc
push
cs
push
push
scas
jo
into
xchg
fmull
xor
xchg
outsb
rcr
stos
mov
es
add
shlb
test
push
jne
mov
inc
aaa
cmp
fmul
or
cltd
xor
shlb
mov
mov
out
pop
mov
mov
sub
cs
mov
je
addr16
sub
add
fprem
rorb
sbb
in
sbb
lock
mov
push
adc
mov
pop
addr16
jne
ja
jl
push
mov
sub
mov
mov
mov
xchg
or
mov
pushf
add
stos
into
cld
mov
pop
pushf
push
mov
xor
push
les
scas
and
leave
out
pushf
sub
mov
rcrb
mov
pop
arpl
jecxz
and
push
sub
dec
adc
add
or
sub
mov
mov
rcl
and
inc
add
pusha
mov
jl
fisubrl
add
lock
push
or
hlt
mov
add
mov
icebp
dec
leave
push
fwait
pusha
ds
inc
stc
adc
ds
pop
sbb
ret
fdivr
sbb
mov
aam
stos
mov
int3
ret
or
pop
loopne
mov
push
les
mov
cmp
pop
mov
push
push
cmp
ljmp
cmp
aas
aaa
pop
mov
int3
mov
cli
pusha
shlb
xor
or
notb
or
xor
sub
xor
cs
xor
push
stos
js
lock
lahf
lcall
into
or
add
fcmovbe
adc
lods
xchg
or
jne
add
xchg
fwait
xor
or
sbb
xor
mov
mov
fsubrs
sub
daa
sti
cmc
addr16
lock
mov
shlb
sub
repnz
inc
adc
mov
cmp
out
in
dec
repz
sbb
out
jecxz
ss
cs
push
adc
lret
sarb
jbe
add
rcrb
fwait
cmpsb
cld
pop
lret
xor
xlat
dec
xchg
popf
cmp
loopne
aas
ljmp
sahf
pop
or
fsub
cmp
popf
mov
adc
cmp
xchg
outsl
ds
and
push
ljmp
rorb
jecxz
fistl
and
repnz
sub
pop
add
xchg
fcompl
xor
scas
or
mov
js
xchg
sarl
pop
ret
int3
das
pop
jbe
scas
and
pop
sahf
mov
push
cs
push
ljmp
fiaddl
fadds
jnp
lret
lahf
mov
in
pushf
repnz
mov
add
xor
mov
lea
xchg
xlat
or
iret
cmp
adc
xor
mov
xchg
fcom
lods
scas
out
mov
into
jp
imul
das
ljmp
sub
out
loop
aas
add
lods
xor
adc
gs
inc
adcb
sbb
lret
cmpsl
xchg
cmp
lock
decb
xchg
icebp
mov
imul
jno
pop
adc
das
faddl
stos
xchg
pop
cmp
mov
xchg
mov
xchg
xorb
enter
repnz
xor
imulb
js
mov
mov
fsubrs
enter
or
xor
mov
sbb
test
sub
push
xchg
lods
cmpsb
scas
xor
mov
mov
mov
cmp
hlt
push
xchg
sub
popa
inc
aaa
inc
sbb
or
test
incb
push
xchg
mov
xor
mov
mov
out
and
sbb
sbb
rolb
mov
jp
push
sti
sbb
jnp
or
and
addr16
inc
pop
insl
sahf
std
cmp
outsl
cltd
stos
add
mov
mov
mov
enter
lods
dec
push
fisubrl
fdivs
lcall
jecxz
repnz
xchg
jns
rol
out
add
jae
add
push
inc
or
mov
dec
mov
icebp
shr
lret
fcomps
divb
or
cli
data16
cs
jg
add
sahf
push
test
shl
ss
test
cmp
inc
xchg
adc
xchg
hlt
lcall
out
xchg
add
or
xor
clc
jg
inc
add
out
push
scas
imul
jo
lock
sub
xchg
sbb
inc
pop
cmp
rcl
aas
and
xor
push
fadd
lea
add
mov
mov
bnd
aam
js
and
lods
mov
sar
aaa
push
push
add
pop
jecxz
mov
outsl
pushf
repnz
mov
push
mov
adc
mov
push
sbb
mov
cli
sbb
sub
hlt
add
pop
bound
test
add
data16
sbb
ret
cmp
aad
scas
dec
pop
out
adc
ret
cmp
scas
cmpsl
hlt
aas
mov
adc
sub
sub
mov
in
xor
gs
adc
push
add
lcall
enter
addb
stc
mov
sub
mov
rorl
mov
aam
adc
sbb
cwtl
fdivs
push
cld
xchg
add
sti
cli
jo
lea
push
mov
lret
push
cmp
jno
jecxz
out
fsubp
mov
cmp
stos
sti
cmp
mov
fimull
lret
push
or
xchg
out
cli
popf
fidivs
in
ret
mov
data16
mov
divb
scas
jno
xor
jb
fdiv
sbb
fisttpll
push
sbb
pop
dec
pop
cmc
sbb
ss
stos
or
ds
stos
xor
in
mov
or
outsl
xor
lcall
inc
fdivrs
cltd
ret
xlat
adc
loope
mov
aam
shlb
or
sarb
dec
sbb
sbb
ds
sbb
push
sbb
mov
mov
addr16
sbb
or
mov
lahf
sbb
mul
mov
mov
pop
add
loopne
aas
fs
hlt
cltd
or
fcmovbe
inc
sbb
out
add
inc
enter
es
mov
lcall
push
adc
out
mov
sar
mov
mov
inc
test
push
push
adc
or
mov
push
push
pop
push
pop
fsubl
and
cli
ffreep
scas
out
stos
mov
jo
imul
mov
jo
mov
mov
fcmove
cmp
mov
out
fstps
mov
pusha
adc
adc
repnz
inc
xchg
cld
jp
jae
dec
aas
jne
clc
xchg
add
mov
jg
fwait
mov
nop
fidivrl
les
cmp
cli
mov
sub
and
mov
test
fdivl
mov
idiv
pop
mov
enter
cld
ds
mov
repnz
pushf
ljmp
add
dec
pop
pop
mov
movsl
mov
orl
aam
sub
dec
cld
sbb
push
into
or
in
xchg
movsb
cmp
inc
add
pop
pop
inc
sbb
aaa
ljmp
pop
adc
fdiv
cmp
out
sti
out
pop
pop
js
lahf
das
ds
clc
ret
int3
cwtl
inc
push
scas
decl
push
and
xor
aam
adc
mov
fcmovb
nop
les
cli
mov
outsl
mov
xchg
nop
add
cltd
or
into
dec
fwait
sbb
mov
das
mov
sub
cmp
pusha
test
and
aam
stos
arpl
push
dec
leave
ljmp
aam
adc
cmp
sbb
add
jp
addr16
sub
dec
js
test
mov
sbb
adc
ljmp
mov
testb
movsl
xchg
mov
lods
cmp
imul
mov
cmp
lds
jp
cmp
je
push
arpl
and
inc
or
cli
pmullw
dec
mov
popf
xor
cmpl
aaa
inc
lods
pop
loopne
xor
popa
aas
sti
scas
into
hlt
test
pop
sub
xor
xlat
xor
aad
sub
decl
into
in
shlb
out
mov
or
xsave
lods
orl
inc
sar
paddq
pop
mov
jge
cmp
addr16
aas
push
sub
lea
das
repnz
adc
xchg
movntps
scas
jb
add
inc
ss
push
or
fdivrs
adc
ss
inc
outsb
cmp
int3
or
sub
cmp
cli
sbb
cmp
or
movsb
xchg
imul
mov
mov
jns
test
inc
in
lock
mov
aaa
adcb
out
xor
js
imul
popa
pop
int3
clc
sbb
das
hlt
fs
mov
fdivr
sarb
cmc
mov
adc
pop
and
jmp
or
mov
xor
leave
jb
jbe
inc
cli
stos
inc
xor
pop
cli
stos
mov
aam
clc
add
mov
nop
adc
lock
aam
ja
gs
push
hlt
sbb
xor
sahf
ret
or
add
out
add
stos
out
add
fcomp
xor
push
aad
lock
popf
push
out
ds
ffreep
mov
repnz
ror
mov
ret
popf
mov
push
mov
icebp
xchg
das
push
inc
cli
pop
add
jp
push
fcoms
push
adc
lret
divb
cmp
sbb
ss
mov
sbb
push
lahf
adc
add
xor
inc
inc
pop
xchg
lock
mov
sarb
sub
pop
sbb
lods
fstl
mov
pop
jg
xor
imulb
sbb
push
mov
out
push
pop
fwait
push
xor
push
pop
rorl
cld
shr
movl
sbb
outsl
fiaddl
lock
outsl
cli
jo
sahf
lret
xor
sbb
sbb
sub
and
mov
ficompl
addr16
andb
push
jne
pop
inc
mov
mov
rcl
xchg
pop
adc
xor
cmp
dec
or
ds
mov
xchg
adc
push
int3
enter
lock
jp
test
fdiv
ret
decb
mov
push
sub
mov
scas
les
or
mov
into
int3
nop
add
rcrb
or
xchg
popf
cs
in
mov
pop
pop
outsl
mov
and
mov
ljmp
movsb
daa
test
popa
jno
mov
sbb
shl
fs
cmp
stos
pop
shrb
mov
cmp
hlt
rcrb
shlb
fdivrs
scas
add
xlat
cld
xchg
dec
in
mov
cmc
mov
and
jp,pt
loopne
pop
lock
cltd
push
push
lock
int3
popf
inc
lret
fildll
pop
gs
or
ljmp
jg
gs
sub
add
cmp
pushf
inc
mov
push
sti
scas
sbb
fmul
lock
into
ds
int3
ret
mov
sbb
xchg
jmp
adc
dec
xor
pop
mov
sub
fldenv
repz
mov
xor
cmpsl
add
bound
fcmovbe
mov
adc
call
sbb
ret
pusha
and
shr
pop
addr16
mov
mov
or
fdivrl
sbb
popa
rolb
push
outsl
and
add
push
mov
clc
push
mov
adc
push
rcr
push
sbb
lock
movlps
mov
xlat
aam
mov
push
sahf
inc
lods
ficoml
fsubp
cmp
mov
adc
push
mov
sbb
scas
enter
xchg
mov
adc
mov
pop
and
scas
jbe
xor
int
or
sub
rorl
add
addb
repnz
pop
cmp
mov
outsl
and
ds
mov
sahf
mov
cld
mov
pop
out
les
out
nop
push
scas
adc
push
fsubrs
push
lods
fnstsw
xor
sbb
fdivrs
mov
add
pop
adc
or
into
clc
and
mov
or
jmp
and
add
clc
dec
push
xor
pusha
and
mov
lds
sbb
or
mulb
bound
les
or
mov
int3
add
mov
fiadds
loop
mov
mov
and
add
mov
loopne
sub
dec
idiv
pop
pop
lcall
pop
ds
fstpt
dec
mov
ret
inc
incl
fcmovbe
daa
fadd
jbe
bound
cmpps
fdivr
and
mov
dec
and
pusha
sub
xor
cmp
fcmovu
imul
adc
negb
jb
mov
lret
mov
pusha
mov
dec
xchg
push
les
mov
add
jmp
out
or
dec
in
xor
or
clc
imulb
cltd
pop
dec
lret
mov
fsubs
stos
pushf
shlb
mov
add
enter
repz
mov
jmp
sub
stos
ror
into
stos
stos
lret
inc
cmpsb
xchg
popf
mov
mov
in
fsubr
mov
add
sbb
fsubrl
xor
sahf
ss
xor
sbb
cli
fdivl
mov
fs
or
sbb
ljmp
sbb
shll
lods
dec
pop
and
xchg
add
sbb
aam
out
lea
mov
and
fiaddl
add
push
rol
xchg
inc
mov
cmpsl
pop
push
in
jnp
fsubrs
bound
xchg
mov
xor
fwait
rol
cmpsb
bound
mov
jae
out
sbb
mov
outsl
addr16
or
mov
inc
dec
or
sbb
or
adc
mov
mov
or
push
or
mov
mov
mov
sub
shlb
sub
and
cmpsb
out
loopne
mov
fimuls
das
ficompl
adc
scas
scas
sbb
mov
out
adc
sbb
mov
lds
push
ds
xor
rcrb
cmp
mov
rclb
adc
mov
addr16
adc
sbb
clc
sub
stos
push
test
push
cwtl
cld
add
aas
mov
enter
scas
xor
sahf
fimull
mov
fdivrs
int
mov
jg
xor
push
xor
fadd
push
mov
daa
and
ret
aam
xor
pop
sub
jge
xchg
outsl
sbb
lods
adc
lret
notb
fwait
jmp
fisubrs
popf
jno
idivb
inc
cmp
ss
shlb
scas
leave
xor
out
add
mov
xlat
mov
push
add
insb
cld
aas
fistpl
sbb
push
push
imulb
das
pusha
aam
push
or
mov
mov
jo
clc
cmpsb
ja
or
sbb
popf
push
mov
gs
cmp
lcall
sbb
decl
cmp
sbb
sarl
mov
jg
xchg
push
add
lret
sub
mov
repnz
or
sub
adc
fbstp
dec
cmp
inc
sbb
rcl
sbb
fcompl
std
fidivrl
sbb
push
test
scas
push
idivl
rclb
xchg
xchg
xchg
lds
sub
cmp
imul
shll
into
decl
lods
xchg
fidivrl
or
fidivrs
and
ret
outsb
inc
mov
jne
hlt
push
xor
sbb
inc
aam
lea
shrb
mov
xor
and
ss
rorb
xor
int
in
sbb
cs
repnz
addr16
add
ljmp
call
xchg
push
loop
out
clc
jg
xchg
ljmp
dec
fsub
pop
adc
push
fidivrl
ss
outsl
cli
stos
mov
cld
cmpsb
xchg
push
lods
stc
nop
or
dec
mov
stos
sbb
xor
sub
outsl
mov
pop
mov
testl
gs
mov
scas
hlt
xlat
add
push
repnz
fs
sbb
int3
lahf
and
push
ds
add
lret
add
inc
xchg
push
xchg
jbe
clc
ljmp
push
mov
pop
sub
pop
je
inc
sar
inc
mov
lods
sbb
mov
pop
repnz
fldt
outsl
pop
mov
clc
in
pop
jp
mov
enter
sbb
pop
lods
scas
lahf
cli
lret
out
or
out
das
ljmp
or
jl
xchg
lret
sbb
mov
fiadds
xor
cwtl
aaa
or
jle
into
addr16
repnz
mov
pop
iret
inc
mov
mov
fcomip
mov
push
mov
pop
add
xchg
pop
jle
insb
fcoml
in
outsl
xchg
add
xor
ret
xchg
mov
popf
inc
mov
or
xor
or
cmp
gs
push
xchg
mov
mov
outsl
xchg
push
mov
lock
dec
shll
hlt
daa
jmp
aaa
mov
cs
sbb
push
lahf
xorb
mov
push
inc
pop
cli
incb
hlt
xor
cmpl
cs
aaa
jl
jle
sahf
mov
in
mov
out
test
adc
int3
jg
lea
sub
sbb
add
pusha
orl
jbe
divl
or
test
aas
jg
jbe
into
ljmp
cwtl
mov
fldt
js
inc
clc
shrb
cmp
xchg
mov
cli
mull
rcrl
into
sbb
cmc
cmpb
xorb
lahf
xor
stos
push
mov
fwait
fcompl
adc
inc
addr16
jne
insb
leave
mov
fnstcw
push
ja
fcmovu
mov
jp
lods
sbb
mov
push
outsl
push
out
cmpsb
and
lods
in
call
adc
xchg
rcr
js
xchg
test
adc
movsb
stc
lds
sub
scas
out
mov
stos
sbb
sbb
push
inc
mov
outsb
xor
data16
add
sarb
ja
mov
xor
dec
hlt
filds
mov
pop
push
icebp
mov
mov
aam
mov
ja
fidivrs
push
xor
loop
pusha
fcoms
mov
and
mov
mov
push
and
push
hlt
push
cmp
xor
mov
cs
in
push
sub
cmpsl
mov
inc
dec
scas
out
xchg
les
cmpsb
push
mov
lahf
dec
or
scas
repnz
mov
mov
adc
mov
das
jbe
push
js
js
jp
jb
jb
mov
stos
cli
int
rclb
out
in
xchg
sub
jg
aas
subb
jg
in
sbb
sbb
or
ret
stos
outsb
mov
mov
mov
ficoml
xor
push
popf
xor
fdivrs
lret
pop
adc
adc
inc
sahf
insb
cs
ret
out
xor
push
push
mov
xor
outsl
jns
cs
ljmp
lods
jg
aas
cmp
ljmp
xchg
mov
popf
outsl
fimull
adc
pop
enter
loope
xor
or
cld
push
sbb
pop
xchg
xor
cltd
sbb
imul
xorb
fwait
xor
push
scas
imul
or
jb
inc
out
and
mov
adc
push
sub
clc
mov
ror
add
sub
sbb
ret
lods
mov
mov
neg
scas
push
into
pop
jbe
add
stos
rcrb
ss
stos
cmp
addr16
inc
pop
cmp
ljmp
mov
mov
cli
into
in
int3
shrb
sbb
cmp
sbb
adc
sbb
sub
push
dec
jp
xor
pop
push
add
inc
cs
in
push
outsb
xor
add
push
mov
mov
sbb
roll
mov
nop
out
sub
lods
mov
pop
int
adc
ljmp
or
inc
mov
xor
push
push
sarb
cs
push
enter
sarb
repz
dec
faddl
out
sbb
sbb
inc
ret
or
idivb
js
jp
sbbb
cwtl
mov
js
ds
stos
ret
adc
scas
fdivrs
mov
int3
add
mov
push
mov
shll
and
dec
popf
cltd
push
adc
stos
cli
fadds
mov
mov
bound
push
dec
push
outsb
es
lock
mov
adc
pushf
push
decb
or
sbb
or
adc
imul
int3
cld
rclb
sub
imul
cs
fcmove
push
in
clc
sub
not
mov
add
aas
sbb
mov
or
xor
push
out
dec
jb
mov
ljmp
adc
nop
mov
das
cs
add
mov
inc
sub
pop
clc
cmp
sub
adc
mov
cmp
jmp
mov
or
aam
xchg
pop
xor
sbb
sbb
jae
shlb
decb
es
push
lock
lahf
clc
divb
ret
mov
xchg
jg
dec
lods
gs
add
repnz
cs
mov
packsswb
ds
xor
adc
aad
pushf
hlt
or
mov
cmp
mov
add
jecxz
idivb
xchg
fsincos
sbb
mov
ss
lods
sti
mov
lock
adc
sbb
fidivrl
fmull
push
cmp
sub
pop
or
outsl
xor
stos
lret
les
lods
cltd
xor
mov
pop
out
out
aam
lret
ljmp
hlt
sbb
sbb
and
les
lahf
sbb
push
pop
adc
aam
or
cs
std
xchg
mov
int
add
fcomp
icebp
push
jbe
cli
jp
adc
cwtl
pushf
add
mov
mov
xchg
jecxz
push
popa
dec
popa
jp
clc
add
shl
call
test
push
pop
rolb
mov
jmp
daa
pop
std
sbb
in
clc
cmp
xorl
hlt
push
subb
sbbb
add
mov
xchg
mov
sbb
movsb
mov
stos
inc
jp
sbb
adc
mov
loop
lods
ljmp
ss
pop
rcrl
cmp
dec
cli
or
fisubrl
push
clc
lcall
sub
push
ss
add
jbe
sti
and
dec
add
sbb
popa
push
dec
push
mov
sbb
loopne
aas
notb
rolb
or
fwait
sbb
daa
or
es
hlt
mov
or
scas
stos
ds
cli
cld
inc
hlt
cwtl
cmc
adc
or
cmpl
push
scas
outsb
inc
clc
rol
cmp
ret
dec
cld
shlb
aad
pop
aad
rep
xchg
xchg
xchg
cltd
xor
cs
or
addr16
gs
outsl
add
repnz
cld
lret
jae
push
sub
jns
cs
add
leave
sti
out
ret
call
movsd
hlt
cmp
out
xorb
or
jle
scas
pop
movsl
push
repnz
mov
sbbl
push
ss
fs
shr
mov
add
daa
rcrl
ret
dec
dec
mov
pop
push
pop
insb
mov
xchg
incl
gs
mov
or
push
rcrb
ret
jg
lret
mov
jae
inc
ficoms
adc
ret
scas
incb
mov
dec
mov
ljmp
stos
inc
xchg
xor
cmpsb
dec
loop
jg
push
jg
push
hlt
xor
jl
into
fwait
je
out
outsl
dec
or
or
sbb
cltd
lock
repnz
push
fwait
sub
adc
cmp
xchg
xor
sarb
stos
js
daa
ja
fmul
add
insb
lret
fucomip
les
scas
or
cmp
push
inc
scas
push
xor
mov
pop
push
sbb
mov
mov
sar
mov
dec
dec
mov
adc
jne
or
ljmp
sbb
add
andl
cmp
fsubs
testb
cld
adc
cmp
push
mov
divb
push
dec
lcall
fistl
sbb
stos
and
scas
mov
xchg
mov
xchg
or
lods
add
adc
xor
xchg
add
dec
xchg
mov
dec
mov
popf
jle
decb
mov
data16
sahf
clc
ret
sbb
mov
or
leave
movsb
sbb
mov
pop
or
and
out
inc
or
in
cli
into
mov
sub
xchg
inc
fcmove
xchg
sub
cmp
and
mov
xchg
push
jp,pn
dec
jb
sub
sbb
lods
subb
iret
out
cmp
or
mov
pop
lods
xor
mov
mov
out
jg
xor
cmp
movsl
fistpl
mov
or
stos
rol
mov
mov
push
adc
push
pop
push
scas
aad
jne
mov
sbb
add
addr16
in
sbb
cmp
mov
hlt
push
cmpl
sbb
repnz
and
xchg
xor
aaa
fwait
adc
lock
jbe
xchg
xchg
shll
xor
pop
sbb
push
jg
mov
push
fnstcw
loope
and
cli
sub
mov
ss
push
mul
xchg
in
adc
adc
xchg
in
mov
loopne
inc
xchg
rol
inc
insl
sbb
sarb
or
cld
orl
xchg
popf
lods
sub
mov
xor
mov
enter
stos
jp
mov
mov
out
cmp
adc
aam
sbb
mov
or
fsubr
pusha
stos
lods
inc
sbb
pcmpgtd
fs
xor
ljmp
sub
jg
sbb
sbb
fdiv
jnp
lock
add
sbb
not
and
inc
rcll
ficoml
mov
cmp
lret
xor
loop
jbe
sub
lret
adc
in
ljmp
jno
jne
adc
cmpb
sbb
cld
jno
iret
mov
inc
aam
popf
add
std
test
fiaddl
aad
enter
dec
arpl
fisubrl
out
mov
rorb
cmp
ja
push
xchg
mov
lret
or
fisubs
enter
push
test
jmp
lret
in
addl
xor
hlt
adc
sbb
sti
xor
dec
pop
icebp
out
xor
es
inc
mov
mov
or
push
sbb
pop
into
in
rclb
shll
and
leave
dec
aas
mov
ljmp
outsl
mov
fidivl
cmpsl
adc
cmpsl
jae
pushf
mov
rorb
sti
ss
cmpl
cmp
das
idivb
mov
push
ja
or
sbb
adc
mov
cmp
mov
out
mov
cmc
pop
and
jp
push
add
jmp
cmpsl
sub
cmp
inc
mov
dec
out
mov
imul
scas
sti
addr16
fwait
ss
in
fidivrl
scas
mov
ret
sbb
push
xorb
out
pusha
roll
inc
or
xor
jae
rclb
sub
test
imul
xor
mov
lret
lock
xchg
pop
cs
cltd
sbb
xchg
out
jge
lret
fisttps
scas
sbb
mov
ds
mov
shlb
sub
adc
jle
rolb
mov
sbb
mov
mov
fsubrl
pop
pabsb
cs
imul
dec
fdivrs
into
cld
enter
mov
and
xor
xor
ret
lret
xor
out
int3
dec
fwait
imul
add
pop
cwtl
adc
or
cmp
repnz
outsb
fidivl
jg
lods
cli
inc
push
dec
sub
test
dec
hlt
dec
lds
mov
inc
cmpl
dec
sbb
pushf
aaa
mov
addr16
push
xor
sub
cmp
cmp
in
push
nop
imul
int3
cmp
lods
jb
rolb
cltd
hlt
adc
mov
fadd
or
scas
xlat
push
int3
fcmovne
jne
dec
push
out
ds
pop
enter
mov
pusha
add
or
fsubrs
push
push
es
push
pop
push
push
mov
adc
sub
scas
jne
sbb
sbb
ljmp
lahf
and
mov
outsb
dec
decb
pop
icebp
push
and
xor
mov
fdivs
dec
pop
mov
not
push
dec
mov
lock
flds
jo
aam
mov
loop
mov
rolb
nop
dec
mov
xorl
mov
int3
outsl
cld
enter
leave
cmp
stos
push
shlb
pop
addr16
enter
addr16
jae
mov
addr16
add
xor
push
push
sti
addr16
divl
cmp
xor
inc
cs
inc
or
mov
pusha
fs
bnd
imull
nop
sub
sub
into
dec
pop
movsb
repnz
js
pushf
jp
or
loope
insb
mov
cmpsb
cmp
dec
and
or
mov
outsb
negb
rcrb
imul
clc
insb
dec
repnz
pop
or
mov
aad
lret
in
mov
mov
jp
shlb
ret
jecxz
jb
js
std
mov
faddl
pop
gs
adc
clc
pop
lret
pop
sub
into
test
adc
fadd
in
pop
movsb
push
mov
outsb
ds
fadd
in
aam
aam
in
xchg
sbb
xchg
add
push
out
ds
js
jb
pusha
ljmp
cld
fsubs
xchg
int3
mov
lcall
xchg
cmp
mov
add
sub
cmp
sahf
divb
fsts
xchg
sbb
adc
pushf
fdivr
into
cmp
cmp
xlat
lret
popa
out
ror
pop
dec
mov
sbb
pop
daa
les
push
scas
pop
push
mov
mov
outsl
xor
lret
lods
and
lock
shll
lret
rorl
inc
daa
push
jbe
adcb
fsubrl
scas
lret
ret
add
imul
fsubr
push
arpl
sbb
in
mov
jb
data16
xlat
fldenv
push
enter
rol
fstl
mov
hlt
sahf
xchg
xor
fcmove
mov
ljmp
pop
mov
dec
or
in
mov
int
shrb
ret
cs
adc
adc
cli
movsb
xor
shlb
xor
cmpsl
in
pop
xor
ljmp
fidivrs
mov
xorl
aas
pop
ljmp
test
scas
repnz
test
stos
cld
xor
aaa
leave
cld
lahf
cmp
rclb
lcall
fldenv
hlt
fbstp
cmp
out
bound
out
mov
xor
rorb
pushaw
enter
rolb
xchg
mov
sarb
leave
addb
fdivl
mov
lret
in
or
scas
xchg
pop
adc
ret
mov
pop
int
jo
ljmp
mov
out
lahf
adc
mov
cs
inc
inc
push
call
inc
mov
inc
xchg
nop
push
cmp
js
mov
sub
mov
cli
ret
or
cmp
mov
aas
loop
pop
ret
or
out
imul
xchg
cmp
subb
clc
mov
dec
bound
add
mov
mov
push
sbb
movsb
xor
rorb
inc
fmul
mov
cmp
sub
pop
mov
jl
sbb
pop
jbe
adc
adc
jg
cld
scas
fwait
adc
jnp
int3
popf
cmpsb
adc
and
pop
push
cmp
lcall
ljmp
or
ss
mov
sub
push
xor
aad
repz
or
aaa
addr16
xchg
dec
rolb
cld
test
shll
clc
xchg
and
mov
xor
enter
out
mov
cmp
lods
icebp
lret
aaa
bound
faddp
fsubrl
lds
faddl
enter
clc
js
out
add
lret
cmp
adc
sbb
divb
xor
inc
nop
repnz
mov
adc
test
imulb
sub
loopne
xchg
push
jp
or
cltd
push
mov
mov
in
stos
cmpsl
pop
repz
inc
rcl
adc
dec
push
cld
cmp
mov
xor
xorb
cmpsl
js
cmp
js
pushf
stos
fmull
lock
sahf
movsbl
push
push
adc
hlt
mov
lods
mov
jg
or
xor
and
hlt
lock
mov
xlat
cmp
ds
add
push
popf
mov
mov
out
xor
ret
cmp
sbb
shlb
push
adc
pop
add
cmp
mov
dec
js
adc
fdivl
xor
sahf
aaa
or
or
out
addb
push
mov
and
pusha
xchg
les
mov
push
cmp
pushf
xchg
xor
cmp
jp
dec
aas
lds
loop
push
cmp
lods
push
ljmp
ror
out
mov
nop
ret
push
fcomip
js,pt
lock
fs
jae
cwtl
xlat
shrb
movb
shlb
repnz
imul
faddl
adc
fwait
ds
mov
cmp
adc
mov
xchg
jecxz
mov
jg
jg
jne
sbb
cli
mov
mov
push
mov
rolb
loop
adc
and
mov
dec
fwait
pop
sbb
push
push
les
or
or
cmp
pop
je
add
addr16
fldt
incb
pop
hlt
cmp
mov
lock
add
leave
sahf
mov
xor
imulb
aas
or
push
fdivr
stos
into
push
ss
nop
daa
arpl
mov
fstpl
adc
mov
aas
xorl
decb
and
test
xchg
push
xchg
add
xor
mov
out
mov
mov
xor
pop
fistpll
add
xlat
sub
shlb
adc
icebp
dec
adc
ds
pusha
out
movsl
or
xchg
out
les
fimull
cmp
mov
loope
or
repnz
mov
push
arpl
mov
je
cli
mov
pusha
notb
cld
lock
or
sti
data16
adc
sbb
cmp
das
sub
xor
push
or
enter
lea
ss
cmpsb
mov
lock
sub
inc
mov
dec
mov
add
add
imul
inc
sbb
mov
or
mov
fdivs
and
add
sbb
fisubrl
in
jmp
movsl
cwtl
addr16
adc
mov
and
jb
pushf
inc
adc
shrb
xor
cmp
xor
cmpsb
fadds
ljmp
pop
sarl
cmpsl
xor
cmpl
aad
mov
push
mov
cmpsl
fidivs
jnp
adc
sarb
jb
les
sti
jb
stos
das
es
dec
add
xor
adc
into
int3
xor
push
mov
div
cltd
inc
dec
hlt
pushf
repz
aam
ror
mov
outsl
sbb
or
imulb
xor
mov
mov
mov
sbb
mov
loope
ss
add
mov
adc
jb
mov
jle
daa
cld
or
mov
pop
bound
and
xchg
sbb
aas
jb
lock
mov
cmpsb
lods
mov
sbb
cli
lcall
outsb
leave
pop
data16
dec
ret
jmp
jae
or
adc
call
fisttpll
mov
jg
sbb
sbb
int3
lea
aad
test
sub
lcall
into
mov
into
push
testl
or
fcmovnb
loop
clc
or
add
push
push
in
jae
push
shl
jmp
cmc
sbb
dec
or
dec
shlb
addr16
outsb
jb
push
sbb
aam
dec
push
cmp
cmp
mov
mov
ret
cmp
mov
into
sbb
and
lods
das
ss
lock
repnz
and
cmp
dec
les
xchg
pop
sub
lret
push
stos
and
lret
add
jecxz
out
ds
inc
sub
push
shl
gs
and
in
mov
mov
lahf
cmp
fcmovb
cs
push
xchg
call
mov
call
movsb
cltd
mov
push
dec
adc
cmp
popf
pop
idivb
add
jp
daa
js
ljmp
pop
loopne
inc
inc
ds
add
int3
mov
sbb
ljmp
scas
iret
mov
adc
cmpsl
stos
mov
sbb
stos
sub
imulb
add
rorl
dec
adc
cmp
cld
inc
jle
scas
jno
fisttpl
ucomiss
xor
fsubrl
cmp
int3
mulb
pop
inc
stos
aas
push
inc
stos
mov
enter
push
push
imul
xor
or
jp
imulb
mov
stos
les
lods
add
ljmp
or
mov
stos
into
addr16
jp
and
cltd
and
loopne
xchg
mov
cltd
push
push
in
scas
adc
mov
test
repnz
sbb
clc
add
xor
xchg
cmpsl
rcrb
jg
in
xor
cmpb
mov
mov
nop
sbb
into
enter
add
push
dec
jp
pushf
es
sbb
lods
mov
sbb
mov
mov
adc
ret
cmpb
xor
push
fs
into
js
jo
dec
adc
mulb
addr16
xchg
xlat
js
nop
fldcw
in
fistpl
adc
pusha
mov
clc
lods
aas
jecxz
push
hlt
mov
js
push
mov
movsl
add
lods
fsubrl
push
aad
ds
fdivrl
loopne
jle
and
cmpsl
out
dec
push
sub
mov
add
sbb
fadd
jecxz
adc
mov
jo
and
into
iret
push
push
sbb
mov
adc
xor
or
or
sub
gs
ljmp
ror
addr16
bound
js
aas
test
adc
sub
ss
es
mov
lcall
ret
or
inc
imul
sub
aam
mov
inc
dec
inc
pop
mov
mov
inc
sub
scas
outsb
int3
repnz
fadd
outsl
sub
enter
mov
add
incl
xchg
cmp
hlt
or
cmpsl
sub
scas
rsqrtps
das
lods
push
cmp
xchg
cmp
leave
scas
or
mov
lret
xor
outsl
movsl
fdivrs
cwtl
and
pop
out
das
mov
stos
xor
sub
push
dec
mov
or
adc
mov
sub
cmp
and
push
inc
sbb
xchg
xor
ds
xchg
xchg
lods
jmp
roll
mov
xor
add
ss
sbb
fcoml
into
mov
scas
sbb
or
imul
inc
testb
dec
jno
add
jno
jb
add
sub
mov
scas
in
cmpsl
enter
ret
rorb
cmp
cld
negl
push
pop
fdivrl
pop
adc
mov
cmpsb
loop
pop
pusha
dec
int3
sub
push
nop
into
mov
adc
mov
stc
stos
sbb
jmp
xorb
lock
cmc
sbb
hlt
rclb
add
stos
rcr
sbb
mov
xchg
les
pop
daa
int3
or
or
repnz
and
inc
sbb
push
lret
push
sbb
out
pusha
push
adc
fwait
sbb
cmp
xchg
pop
add
nop
mov
shlb
jp
mov
or
les
sarb
adc
fdivr
or
or
mov
decl
adc
out
adc
outsb
hlt
addr16
stos
xor
add
jbe
mov
repnz
jb
adc
pop
adc
xor
pop
sbb
outsl
jecxz
inc
lahf
dec
ss
into
sub
sbb
aas
xor
enter
xchg
pusha
idivb
mov
push
jcxz
lcall
and
cli
enter
inc
jle
repnz
out
mov
js
into
stos
dec
out
std
mov
push
mov
nop
and
loop
dec
sub
mov
cli
add
mov
cld
push
jbe
fwait
add
out
dec
clc
adc
sbb
fistpl
xor
les
lahf
inc
in
mov
sub
jb
add
push
aas
cld
sbb
scas
out
sbb
out
call
xchg
repnz
mov
mov
sar
cwtl
dec
mov
pop
pop
mov
sbb
or
sti
add
sbbb
mov
cmp
cltd
sbb
rcrl
repnz
lcall
pushl
lret
mov
cmp
jecxz
lock
adc
scas
ja
or
out
das
dec
push
cmp
ljmp
mov
mov
sbb
xchg
ret
sub
pop
add
jno
insb
pop
add
out
mov
adc
fs
repnz
fidivs
or
or
xor
loop
data16
aaa
mov
sbb
sti
jle
push
jae
sub
mov
jb
mov
mov
add
data16
inc
dec
and
cmpsl
mov
das
cmp
mov
lcall
jnp
or
pop
or
addr16
ret
popl
mov
pusha
add
mov
clc
into
enter
push
xor
push
xchg
cs
lods
les
hlt
jg
inc
scas
cmp
and
bnd
or
dec
sub
repz
xor
dec
mov
add
adc
sahf
sbb
out
add
ret
ljmp
jno
pushf
fsubrp
mov
push
ficompl
pop
mov
mov
mov
shlb
pusha
inc
and
inc
sbb
cmp
push
leave
int
ret
mov
lods
adc
ret
lock
fimull
xor
xchg
fsubrl
mov
mov
lods
enter
fwait
cli
adc
push
loop
sbb
add
pop
inc
or
pushw
fcoml
cs
mov
mov
leave
mov
sub
jg
stos
in
stos
outsl
jmp
inc
sbb
data16
lret
mov
rcrb
pop
adc
pop
stos
into
fdivrl
int3
data16
or
pusha
sub
out
faddl
int3
ss
enter
ljmp
and
fimull
sbb
mov
add
add
icebp
lcall
and
ret
jnp,pt
xor
repnz
mov
aas
mov
jbe
in
push
fdiv
jno
pusha
xchg
shr
pop
push
sarb
dec
push
addb
adc
enter
js
ljmp
jne
in
jb
mov
mov
add
fistpll
mov
into
or
add
mov
mov
adcl
add
inc
aam
fnsave
mov
cmp
sub
mov
decb
test
faddl
lret
sub
aas
sub
mov
fsub
sahf
fildll
xor
scas
test
push
or
add
into
lret
stc
cwtl
fadds
shlb
mov
jnp
push
outsb
insl
mov
int3
push
in
inc
mov
fcmovnb
pop
mov
mov
scas
and
jp
inc
in
arpl
and
add
std
ds
fsubrs
sub
ljmp
mov
call
adc
mov
xchg
pushl
sbbb
enter
mov
jge
ret
adc
push
fcoms
cmp
ss
push
sub
cmp
hlt
cs
scas
mov
in
das
mov
push
fdivp
shr
loop
sbb
into
or
cmp
adc
stos
int3
fistpl
lods
fs
add
jnp
xor
decb
sbb
incl
mov
fbld
test
btc
inc
out
jae
repnz
andb
cmp
out
mov
jge
aam
lret
jb
ss
ja
push
cs
mov
lahf
mov
ret
push
xchg
daa
mov
lret
push
in
push
dec
fidivl
cli
iret
xchg
cs
jns
aam
repnz
mov
push
add
add
xor
xchg
cli
enter
fcmove
mov
xor
xor
dec
test
add
ret
out
scas
sbb
sarb
xchg
fsubrs
or
jle
loope
add
xchg
cmpb
push
sub
mov
xchg
push
push
insl
mov
mov
cli
or
sbb
xchg
in
adc
jae
pop
sub
cmp
pop
nop
out
cltd
mov
lret
mov
dec
dec
xor
daa
mov
div
into
mov
aaa
lahf
push
mov
mov
fcompl
or
decb
outsl
mov
sti
sbb
lea
lahf
stos
stos
ret
cld
repnz
dec
or
sarb
mov
push
sbb
or
fcompl
enter
push
ds
rolb
aam
xchg
adc
fsubr
jno
imul
mov
sbb
lcall
adc
stos
rcll
rep
lods
cmp
inc
aad
push
add
lret
jle
add
ss
push
insb
lods
scas
push
in
or
mov
out
add
xor
push
scas
push
xchg
lods
out
add
fsubrs
imul
dec
repz
pop
lods
jmp
push
loop
jno
pushf
imul
jp
adc
push
pusha
lea
fs
adc
push
mov
out
faddl
rorl
movb
dec
lahf
mov
in
cmp
cmp
pop
mov
imul
add
push
cld
fsub
repnz
adc
cld
adc
sbb
cmp
sub
cmp
pop
dec
mov
fwait
sub
push
fdivs
jg
add
sbb
mov
push
jge
in
jp
inc
mov
or
lret
add
and
mov
mov
ds
mov
adc
adc
dec
out
dec
hlt
fwait
push
push
adc
mov
fidivrl
lock
shrb
lcall
push
inc
cmp
pop
icebp
mov
and
adc
shrb
enter
lret
and
movsb
movsb
push
aam
push
out
popa
mov
mov
inc
cmp
notb
stos
js
test
cmp
xor
cli
leave
fwait
push
roll
cli
in
mov
andl
and
ret
aam
xor
neg
mov
test
mov
jno
xchg
sbb
push
sti
into
mov
sub
jnp
ret
xor
push
inc
adc
push
sub
sub
pop
push
int3
loop
xor
push
adc
imull
stos
ret
clc
aas
lcall
dec
cmp
jo
fnsave
lcall
into
add
mov
cmc
or
das
xor
test
pause
or
xorb
int3
push
ffreep
mov
sbb
out
push
xorb
add
sarb
xor
aam
inc
lods
sub
sub
pop
xor
loope
call
xchg
and
mov
cmc
mov
inc
cmp
cmp
loope
popa
or
mov
adc
sbb
cmp
clc
imul
nop
aas
push
insl
mov
jne
jecxz
xlat
inc
stos
mov
jnp
mov
aam
xor
mov
sbb
stos
xchg
mov
ljmp
or
lcall
int3
stos
cmp
inc
ds
mov
sbbl
mov
and
dec
mov
push
shll
xchg
stos
out
sub
add
adc
pop
sub
sarb
fs
outsl
cmp
push
ss
lock
mov
jnp
mov
rclb
xchg
cld
lods
clc
jg
xor
or
and
inc
cli
out
int
or
sbb
mov
mov
aam
fsubl
test
ret
idiv
mov
inc
fmulp
cli
in
das
cmp
bt
or
mov
cli
fistpl
ljmp
mov
lret
fidivl
lahf
sub
dec
in
push
adc
mov
adc
add
iret
sahf
mov
fiaddl
xchg
mov
aam
and
into
add
push
int3
add
xor
sbb
or
dec
mov
pop
jne
adc
das
adc
les
dec
fisubrl
aam
outsl
xor
adc
aam
xchg
bound
add
dec
or
ss
out
sub
stos
fisttpll
cmp
rol
sbb
sbb
sbb
xor
stc
mov
lahf
ja
mov
cmp
cmpsb
mov
cmp
fcompl
scas
pop
xchg
mov
sti
fldlg2
mov
and
pop
mov
int3
in
push
fists
jnp,pt
push
adc
pop
insb
ljmp
mov
xchg
lds
sbb
cs
mov
add
pop
mov
jg
nop
shl
arpl
bound
sahf
fdivr
dec
rcr
mov
int3
cmp
lock
xor
pop
repnz
fnstcw
or
and
shll
sub
xchg
or
into
iret
jle
aam
cs
fstl
out
or
inc
push
push
dec
rcrb
sbb
aam
outsl
clc
or
ret
ret
scas
cmp
fcoml
cli
mov
ss
mov
out
cli
test
jbe
fsubr
mov
lret
imul
cli
addr16
sbb
adc
sbb
mov
mov
lret
mov
pusha
js
dec
xor
push
adc
stos
cmp
repz
pop
addb
sbb
mov
ljmp
add
jg
dec
test
pop
mov
cli
mov
xorl
mov
xchg
adc
mov
shlb
cltd
push
add
out
sub
xchg
cli
les
xor
mov
stos
push
push
subb
add
mov
fwait
fs
in
mov
cli
cmp
xor
popa
xchg
jno
int3
lock
dec
lret
lahf
pop
sbb
hlt
or
jle
sbb
or
shlb
sbb
cld
pop
mov
push
mov
out
rcrb
lcall
leave
cvtps2pd
aas
push
cwtl
fadd
mov
out
adc
mov
aas
insb
inc
push
mov
mov
cli
nop
les
insl
xchg
cmp
enter
push
push
jbe
xor
les
outsl
imul
ret
adc
int3
lods
cld
lret
push
sbb
icebp
cwtl
mov
xor
fsubrl
sbb
and
daa
sbb
fidivrl
mov
mov
ds
adc
sbb
cmp
clc
jle
stos
sub
mov
jne,pn
jg
push
in
or
pop
cmp
jb
push
test
icebp
mov
stos
jg
inc
hlt
in
fcmovu
adc
xor
adcb
cmp
cmpsl
jne
mov
jp
jbe
mov
cs
or
lods
pushf
mov
lods
negb
inc
addl
pop
stos
sbb
lock
adc
ds
or
mov
cld
lcall
lods
int3
cli
dec
mov
xor
mov
and
sbb
mov
es
into
bound
lods
pushf
xor
mov
or
lea
and
pop
bound
sbb
dec
add
mov
ret
faddp
cmp
mov
sbb
stos
lret
jmp
sbb
clc
sbb
cwtl
mov
xchg
out
xor
push
cmc
add
pop
fsubl
std
cmp
xor
adc
fwait
adc
clc
fwait
inc
xor
sbbl
xchg
imul
into
or
movsb
fdivl
stos
mov
jge
in
mov
sbb
push
mov
sarb
mov
mulb
addr16
sbb
pop
inc
mov
rcl
das
jg
xor
mov
stc
out
push
fimuls
adc
lods
data16
fisubrl
mov
stos
xor
or
add
mov
add
popf
pushf
cld
into
cs
xchg
mov
sbb
push
inc
outsb
xchg
and
rorb
xor
ret
fcmovbe
mov
sarb
mov
adc
jbe
sub
pop
jae
lret
adcb
mov
popf
hlt
pop
lret
fildll
adc
fdivrl
mov
fiadds
or
add
push
lods
sbb
xchg
push
mov
lcall
subl
outsb
dec
push
mov
bnd
mov
xchg
mov
jae
imul
xlat
push
test
sub
test
jp
iret
stos
push
jmp
fstl
sbb
or
rorl
mov
rolb
xor
jae
mov
add
ret
outsl
les
enter
aas
shlb
addr16
fisttpl
ljmp
sbb
movsl
mov
lcall
pop
insl
dec
das
mov
fmul
sbb
aas
jno
or
lcall
xorl
mov
clc
stos
or
and
push
loope
xchg
or
push
push
clc
push
in
xchg
mov
adc
insl
ss
or
mov
cmp
push
fdivr
lock
sahf
mov
fmuls
mov
xor
lea
xchg
sub
xchg
jb
inc
clc
fiaddl
leave
lahf
ljmp
sub
or
or
add
sbb
sbb
inc
stc
push
add
sbb
addl
sti
fnsave
and
jns
scas
mov
cmp
adc
sbb
add
pop
cli
cmp
mov
jg
out
fdivrs
lods
stos
cld
lret
or
mov
divb
adc
lods
mov
push
dec
movsb
push
ret
adc
cwtl
sbb
lret
mov
mov
cs
shlb
adc
fadds
out
dec
js
or
outsl
imul
cmp
mov
push
adc
lods
xor
daa
xor
les
mov
dec
sub
mov
mov
mov
xchg
push
sbb
icebp
pop
sti
stos
scas
push
fcoms
or
aaa
mov
fdivrl
cmpsl
iret
and
cwtl
xor
dec
push
ds
mov
scas
jp
scas
out
mov
notb
lock
shr
fdiv
cli
ss
mov
mov
lea
shlb
sbb
xchg
mov
mov
sbb
fstps
aam
jne
fcoml
out
dec
add
cli
fs
mov
cmp
jns
mov
cld
ja
mov
inc
scas
lret
adc
sub
cwtl
fistpl
scas
movsl
aaa
stos
sbb
shlb
jb
xor
xchg
into
push
int3
arpl
jg
and
stos
xadd
add
out
data16
cmc
mov
es
push
incl
test
cmp
push
push
mov
stos
fsub
stc
mov
mov
into
mov
jecxz
sahf
enter
sbb
les
cmp
hlt
or
mov
jg
mov
addb
sbb
aam
lock
iret
pop
add
lds
jle
icebp
bound
cmpsl
inc
add
clc
pushf
movsb
int3
cmp
mov
pop
dec
imulb
lock
pusha
fiaddl
clc
dec
mov
jae
clc
js
nop
lret
mov
pop
repz
shlb
dec
ljmp
xor
lret
pusha
int
sbb
adc
ficoml
ss
enter
add
inc
js
mov
add
scas
mov
int
orb
loop
lea
shr
stc
jb
inc
sub
shrb
hlt
push
inc
notb
fwait
inc
fcoml
mov
incb
shlb
lea
lods
ror
test
cld
inc
dec
shl
add
and
xor
sub
jno
mov
mov
xor
push
jl
stos
cmp
daa
xchg
bswap
scas
ljmp
mov
cmp
mov
push
dec
pop
aaa
adc
dec
sbb
cmpl
popa
push
sbb
adc
mov
pushf
add
cmp
xchg
cmc
enter
cld
sub
push
mov
mov
xchg
je
repnz
arpl
pushf
xchg
in
mov
push
popa
cmp
mov
enter
int3
aam
add
testb
out
aas
sub
push
mov
pusha
test
add
mov
clc
or
pusha
or
cld
mov
decb
mov
addr16
dec
cli
out
mov
cmpsl
jb
cmp
lcall
aam
jl,pt
enter
int
sbb
sbb
iret
sub
mov
xchg
adc
stos
xchg
fistl
push
ficompl
lret
data16
lods
pop
hlt
mov
addr16
pop
int3
sbb
enter
jb
nop
mov
xor
iret
stc
pusha
sbb
inc
out
mov
push
out
sbb
popf
inc
sub
les
cld
enter
xor
aas
xchg
sub
adc
js
into
ljmp
pop
sbb
add
mov
mov
mov
mov
cmp
xor
add
nop
sub
into
pop
mov
mov
scas
adc
in
sbb
arpl
shlb
inc
mov
dec
jbe
faddl
adc
mov
fcmovne
sbb
loope
cmp
ss
lods
or
jle
mov
jg
jg
outsl
popa
push
cmp
lret
rcr
fdivrl
ret
cmp
into
push
mov
mov
mov
mov
cmp
mov
jp
sbb
push
add
xchg
jp
dec
in
repz
fcomp
cmp
out
imul
out
aas
push
push
cli
pop
mov
pop
inc
mov
out
int
lods
fwait
cli
xchg
push
mov
aam
cld
jns
pop
inc
add
push
fidivs
sub
clc
sahf
adc
adc
adc
js
fs
mov
sbb
xor
cmpsl
ds
aad
ret
clc
xor
sbb
idivb
push
xor
fsub
mov
lcall
mov
mov
dec
lret
jp
push
push
nop
ds
nop
sahf
aam
adc
fdivrl
sbb
xlat
dec
sbb
adc
loope
mov
sub
lret
cmp
xchg
popa
xor
sbb
hlt
fnstsw
sub
into
mov
jle
enter
test
pop
cmpsl
mov
push
sbb
mov
dec
fsubrs
cmpsl
inc
out
loop
mov
scas
mov
cmpsb
pop
repz
dec
jg
enter
les
push
scas
lcall
and
nop
dec
add
bound
xchg
mov
xchg
gs
inc
lret
adc
into
leave
in
pop
xchg
cld
iret
les
pushf
vmovshdup
lret
in
mov
adc
mov
cli
cmpsl
loop
add
scas
push
sbb
aam
or
push
or
imul
loop
test
sub
fdivrs
add
dec
repnz
xor
pusha
jne
pop
popf
jae
inc
xchg
sbb
mov
mov
dec
hlt
mov
js
pop
mov
pop
push
inc
hlt
sahf
pop
mov
add
adc
rclb
rclb
punpcklwd
cld
lock
cmp
ror
sbb
negb
jo
xor
adc
pop
or
xor
inc
xor
sahf
pop
sbb
fidivl
fcoml
rcl
or
aas
jnp
mov
and
scas
aam
aad
ret
jnp
inc
jb
fcomip
add
add
mov
lcall
stos
mov
hlt
mov
sub
sub
daa
cli
cmpsb
cld
les
push
fadds
adc
push
addl
xor
adc
xchg
fiaddl
out
stos
imulb
fcoms
jmp
testb
dec
dec
cmp
lret
sbb
daa
cli
fisubl
jns
stos
xor
lock
mov
pop
imulb
mov
fsubrl
sub
enter
xchg
add
inc
or
mov
mov
mov
or
sbb
push
nop
js
xor
jp
mov
scas
pushf
shlb
loope
neg
out
fld
sbb
mov
das
mov
into
stos
ss
andl
push
iret
jp
push
fs
jmp
iret
adc
scas
nop
push
mov
in
repnz
rcrb
adc
adc
push
ds
outsl
xor
imull
or
cmpsb
ret
cmp
movsl
cmp
mov
xchg
sbb
lods
cmp
sbb
sbb
mov
fcompl
int3
mov
ljmp
mov
fidivrl
icebp
dec
outsb
ja
mov
es
lret
jecxz
cmpsb
adc
ljmp
mov
sub
aam
adc
push
cmp
jne
sub
sbb
sbb
mov
sbb
add
cs
dec
loope
fidivl
push
cmp
outsb
sbb
clc
pop
insl
mov
rcr
mov
sti
mov
lods
mov
fadd
push
fildll
iret
scas
aas
jnp
aam
push
inc
dec
cmp
cmpsb
push
mov
mov
or
mov
push
arpl
cli
or
adc
push
push
testb
outsb
ss
fdivl
cli
in
incb
rcrl
pop
add
pop
add
test
adc
mov
mov
aas
add
fsubrs
mov
lods
sbb
jge
dec
push
stos
lahf
xor
repnz
cld
ds
jnp
mov
out
xchg
pop
mov
fdivrl
leave
sbb
or
mov
clc
cmp
jmp
pop
daa
roll
mov
push
mov
fwait
rol
fcoms
inc
into
cmpsb
pop
push
mov
inc
rcrb
mov
cld
pop
dec
mov
cli
or
sbb
ss
push
push
sub
rcll
push
mov
fistpl
sub
iret
ljmp
jg
mov
addb
stos
int
scas
pushw
cld
cli
mov
ds
and
and
sub
jbe
mov
xor
jns
mov
sbb
adc
push
ljmp
out
nop
aas
movsl
cmc
push
or
jp
test
mov
adc
fsubl
mov
shr
lea
xchg
inc
popf
pop
cmp
orl
mov
mov
lock
adc
xchg
ret
jle
stos
xchg
clc
or
mov
or
repnz
sub
popf
adc
push
xor
adc
fucomi
shlb
lcall
stos
add
push
lock
ljmp
in
dec
add
sahf
sub
cli
sbb
mov
icebp
loope
sub
sbb
pushf
cmpsb
lods
lret
sbb
dec
in
loope
mov
fidivs
stos
cs
das
mov
js
xchg
scas
inc
and
mov
ss
stos
repnz
out
sub
mov
enter
add
mov
int
mov
enter
add
xor
int3
scas
rcrb
sarb
add
fdivs
mov
std
ds
fidivrl
jb
dec
xor
out
insb
bound
xor
add
adcl
lret
xchg
js
daa
aaa
push
in
scas
ds
repnz
imul
adc
mov
and
das
jns
ret
rcrb
stos
push
lods
dec
sti
push
idivb
xchg
adc
ss
push
push
inc
lahf
loop
nop
scas
cli
cmp
cltd
jg
mov
dec
mov
cmp
sbb
mov
ds
adc
xchg
pop
incb
mov
lcall
int3
mov
mov
or
add
int3
aad
mov
ss
jmp
sbbb
inc
mov
lea
decb
les
loop
sbb
repnz
inc
pop
mov
fs
jecxz
pusha
sbb
add
cli
call
or
into
jg
jne
mov
ds
lret
adc
cli
hlt
mov
fwait
cs
sbb
test
mov
inc
dec
data16
fsubr
outsb
notb
and
pop
cmp
fldt
or
pop
int
push
mov
mov
pop
xchg
ret
hlt
subl
or
fdivrp
adc
bnd
adc
sub
add
mov
cmp
inc
jle
out
add
mov
mov
into
or
pop
mov
adc
mov
std
add
icebp
pop
push
xchg
cli
pop
or
and
inc
jbe
pop
cmpsl
aad
xor
mov
xchg
jge
push
addr16
rorb
sahf
out
ds
fdiv
adc
mov
xorb
lcall
jne
xor
mov
vsqrtsd
add
or
fsubs
xchg
sub
sbb
ds
mov
cmp
fnstenv
repnz
into
ss
ret
rcrb
add
mov
inc
or
sbb
jg
jne
mov
pop
mov
pop
push
or
mov
lods
incb
and
nop
stos
add
hlt
les
repz
pop
mov
push
sub
jb
lods
mov
cmp
xor
sarb
or
jns
int3
addr16
hlt
mov
cmp
outsl
loopne
ds
arpl
and
mov
cs
or
out
jbe
mov
mov
jo
or
lods
aad
jae
sub
test
cmpsl
push
enter
outsl
cmp
insb
pusha
cmp
mov
dec
push
in
xchg
push
fsubs
cmpsl
les
aad
divb
mov
out
dec
dec
mov
iret
adc
or
mov
xor
jns
ds
push
xchg
sbb
jg
mov
scas
dec
jg
mov
xor
and
add
das
ss
pop
pop
sbb
sbb
mov
scas
inc
rcr
dec
push
adc
dec
xchg
cs
inc
orl
fidivs
add
pop
adc
or
cs
out
scas
jbe
ljmp
cmp
mov
int
add
xacquire
cmp
fwait
stc
bound
mov
iret
inc
clc
adc
sti
jmp
sub
and
pop
mov
push
in
push
dec
stos
sti
cli
test
mov
in
ss
mov
inc
std
ljmp
or
and
addr16
or
xor
dec
dec
ja
stos
lret
hlt
dec
push
mov
addr16
dec
clc
push
int
addr16
notb
stc
add
add
push
push
mov
add
in
enter
xchg
mov
cmp
or
clc
adc
mov
jb
and
cs
mov
je
add
enter
mov
adc
add
mov
fwait
mov
adc
xchg
cmp
dec
pop
cmp
add
push
inc
or
out
ja
imul
mov
mov
daa
aad
sbbb
mov
aaa
adc
sarb
invd
push
adc
ret
shlb
adc
mov
lret
push
sti
repnz
fdivl
nop
dec
xor
cmp
jge
fisubl
cwtl
addr16
xor
sbb
cmpsb
mov
jmp
adc
lret
or
cmp
or
ret
push
and
mov
mov
and
rcrb
lret
mov
add
or
ss
or
push
and
stc
enter
hlt
shlb
push
cmp
or
push
push
or
mov
pop
cld
out
mov
nop
ret
repnz
mov
xchg
insb
ficomps
mov
and
loop
lahf
ror
sbb
ljmp
or
data16
stos
sbbb
cmp
into
sti
inc
adc
fcomps
lea
jp
xor
mov
lds
pop
push
adc
add
sbb
fisubrl
aad
les
stos
cli
outsl
js
fdivrl
jo
scas
out
in
lock
sbb
jo
add
scas
or
sub
iret
or
in
lcall
or
xchg
xchg
adc
mov
xchg
loopne
leave
xchg
jno
dec
adc
sbb
or
inc
sbb
or
xor
or
lahf
add
add
faddl
push
lock
xor
or
cmpsl
test
hlt
mov
push
mov
mov
push
push
loop
jbe
or
add
or
in
cmp
sub
push
cld
pop
imul
cmp
aam
adc
xor
adc
out
enter
pop
or
add
int3
mov
cs
cmp
adc
ror
ss
lcall
loopne
pop
ljmp
push
or
dec
sub
clc
sbb
xchg
add
push
sahf
hlt
stos
mov
cld
outsl
mov
ss
adc
pushf
sbb
in
in
sahf
jno
lods
mov
push
aam
fwait
mov
lock
test
repnz
xor
repz
cs
int
push
fistpll
aam
dec
fistps
in
adc
mov
push
mov
xor
xor
scas
adc
repnz
sub
cmpsb
sbb
hlt
mov
les
into
push
xchg
pop
or
ret
jmp
nop
rol
scas
cmp
ljmpw
cmp
xchg
in
lock
mov
out
cmpsb
mov
adc
cmp
pushf
popf
sub
scas
xchg
insb
mov
aad
mov
clc
sahf
sbb
cmp
cld
or
js
adc
out
mov
clc
adc
add
and
cmpl
andb
cld
popf
xchg
enter
cltd
cmp
pop
out
mov
dec
fcoml
mov
mov
sbb
ret
xor
pusha
inc
rclb
into
cmp
hlt
andl
divb
mov
popf
sbb
dec
jns
aam
jne
add
fcompl
fdivr
cltd
cmp
and
cmp
outsl
jg
outsl
mov
sti
jnp
orb
fidivrl
ficompl
add
inc
stos
mov
rorb
jbe
xorl
cs
aam
sarb
adc
push
out
xor
mov
xor
jg
nop
mov
fsubrl
adc
icebp
fdivs
sti
lods
in
pop
mov
cmpsb
inc
sub
mov
add
and
cmpsb
mov
mov
push
mov
sbb
out
cs
mov
aam
test
out
mov
cmp
hlt
mov
fidivrl
mov
divb
cmp
fdivl
out
sub
cld
stos
es
fcompl
aam
xor
or
sub
addr16
addb
push
cmp
cmpsb
icebp
out
pop
jb
int3
das
add
adcl
xor
fcomps
push
outsl
cmp
sbb
jae
in
hlt
movsb
xor
xor
loope
in
mov
fmul
movsb
mov
cld
pop
add
imulb
pop
imul
push
ljmp
add
cld
sbb
clc
pop
or
xchg
add
push
cmp
rcl
xor
xchg
ss
inc
out
in
jbe
cmpl
xchg
cmp
out
stos
out
push
arpl
push
dec
push
jo
or
scas
lods
jb
out
mov
or
cwtl
lret
sbb
lahf
call
xchg
fsubrs
clc
mov
cmp
iret
cs
jg
sbb
adc
cmc
xchg
cld
fcmovb
push
imull
enter
into
xor
sub
pop
sbb
aam
push
dec
cli
inc
ljmp
scas
lods
mov
movsb
add
subl
or
enter
stc
add
mov
mov
mov
sbb
repz
or
mov
push
les
mov
scas
mov
or
xor
jle
jge
lods
cmp
xbegin
mov
aaa
mov
ljmp
add
pop
mov
mov
leave
mov
lahf
dec
repnz
cmp
sahf
lea
scas
adc
outsl
push
and
cmpsl
ret
jb
aaa
or
and
push
xchg
cmp
push
push
outsl
jbe
addr16
push
outsl
call
into
sbb
mov
add
out
cld
push
js
mov
es
in
ss
xlat
iret
xor
icebp
ficoml
out
fdivl
mov
adc
rcrl
mov
sbb
les
or
fimull
cmp
lock
xor
pushf
mov
ds
lret
fisttpll
mov
sarb
adc
pop
xor
add
mov
mov
or
pop
cmpb
mov
adc
add
into
mov
test
add
in
jo
ss
bound
repnz
mov
cmpsb
sbb
daa
sahf
pop
fmuls
adc
push
xor
mov
imulb
lret
lods
out
out
or
adc
inc
jecxz,pn
jb
xorb
ret
cli
xchg
mov
sbb
negb
xchg
into
lock
test
lds
mov
or
ss
sbb
sbb
cmp
enter
popa
fstl
adc
pusha
jp
pop
mov
ret
push
adc
fldt
sbb
fsub
mov
jne
mov
push
mov
insl
and
mov
out
sub
add
pop
xorb
out
scas
lods
or
mov
mov
lock
add
cmp
out
ret
fldenv
lods
or
arpl
mov
adc
sbb
mov
xchg
outsb
rcrb
rep
and
js
fdivl
pushf
dec
ficoml
cli
push
ds
in
aam
pusha
push
cmp
mov
push
out
cld
adc
rorb
loopne
rol
int3
xchg
enter
ljmp
xor
out
lret
jb
lret
bound
mov
lock
test
xor
pop
arpl
push
js
movsl
das
idivb
fcmovnbe
int
push
enter
mov
dec
idiv
lods
ljmp
sub
cld
mov
or
pop
shl
jb
add
out
lods
in
xor
or
fisubs
pop
and
sbb
push
aad
in
in
cmp
add
out
mov
mov
cli
dec
int3
repnz
scas
xchg
jg
xor
inc
repz
add
mov
mov
fbld
push
cltd
adc
jle
das
clc
jb
cmp
xorb
xor
adc
or
mov
lock
adc
loope
mov
popf
push
xor
ds
pop
pop
cmp
mov
fs
mov
mov
adc
mov
add
sbb
jnp
test
lahf
imul
test
jmp
ret
sub
mov
push
push
inc
sub
push
add
and
sbb
hlt
adc
enter
or
mov
push
jg
jg
push
out
int3
in
lcall
mov
test
push
cwtl
ret
adc
sub
sbb
icebp
fnstcw
popa
mov
repz
lcall
mov
xchg
sbbb
mov
cld
outsl
jb
ljmp
lahf
dec
lret
into
mulb
sbb
or
aam
pop
inc
int3
mov
add
dec
lahf
mov
adc
pop
sub
inc
cli
sarb
pop
into
cmc
inc
cld
sarb
mov
in
fstpt
cmp
mov
mov
jg
push
mov
mov
cmpsb
mov
adc
adc
lcall
dec
aas
repnz
mov
cmp
jo
xor
jbe
insb
jl
ja
mov
cld
rorl
int3
add
cmpsl
xchg
addb
sahf
xchg
ds
mov
cmp
or
enter
cld
lock
and
arpl
mov
cmp
les
sbb
and
out
out
imul
xor
out
int3
cmp
mov
mov
fwait
fwait
mov
lds
ljmp
dec
clc
fisubrl
pop
jno
or
sti
sbb
push
cld
inc
adc
aad
fdiv
sbb
fsubl
addr16
mov
fisubs
add
fmull
add
sbb
ss
mov
and
out
lcall
fcmovnu
sbbb
daa
enter
ss
mov
sbb
add
or
addr16
lret
fs
jg
cmp
mov
enter
cmp
icebp
sub
fildl
adc
out
cmp
ss
jecxz
repz
push
inc
dec
cs
push
jge
dec
or
lret
les
pop
dec
insb
popf
mov
xchg
lock
iret
sbb
or
mov
and
xchg
mulb
pop
push
scas
mov
hlt
repnz
jg
mov
ret
xchg
notb
pop
mov
push
mov
out
and
adc
mov
enter
pop
js
inc
adc
xchg
icebp
xor
mov
add
gs
or
dec
cltd
jns
push
cmpsb
test
xchg
mov
bound
inc
mov
lods
xor
repnz
cs
orb
adc
mov
xchg
jmp
dec
filds
ret
mov
stos
cmp
into
adc
test
xchg
xor
push
movsb
push
imul
fs
jp
mov
ret
or
add
mov
dec
lock
or
inc
ljmp
mov
fwait
out
shl
sbb
push
add
fcmovu
mov
popf
lcall
fwait
imul
fidivs
hlt
push
aam
xchg
enter
pop
pop
inc
sbb
or
mov
mov
jg
or
stc
test
lods
scas
push
pop
rolb
shlb
mov
lock
inc
lcall
fstp
aam
pop
or
js
adc
inc
push
cmp
cmpb
cmp
mov
imulb
sarb
xor
push
or
jl
clc
ss
mov
cmp
data16
ljmp
movsl
repnz
push
lea
mov
xchg
aad
mov
les
sbb
hlt
jae
sub
push
ret
adc
adc
or
cwtl
jns
sub
jnp
and
push
xor
cmp
push
add
cli
test
repnz
mov
cltd
out
lcall
jg
cmp
pusha
dec
or
lret
xchg
jnp
mov
jp
daa
adc
dec
not
sbb
popa
mov
jecxz
sub
push
and
jo
jle
inc
jbe
mov
push
int
clc
int3
and
add
or
inc
mov
or
in
popf
rcll
shl
andl
outsb
das
xchg
add
xor
push
xor
pop
xchg
lcall
clc
call
addr16
jp
dec
outsl
adc
scas
lock
xlat
lods
mov
cmp
iret
add
xor
push
jo
jb
xchg
fsts
aam
or
movsl
fdivrs
push
loopne
xor
mov
sub
lret
dec
xchg
add
xor
xorb
stos
call
adc
mov
cli
jns
add
popf
or
adc
mov
adc
mov
cmp
cli
mov
sbb
aas
and
sti
xor
or
pop
jo,pn
push
adc
cli
loope,pn
fimull
add
jg
ljmp
adc
jl
jno
cmp
push
lret
arpl
xor
push
sbb
jne
pop
and
push
mov
fcoml
inc
adc
lods
pushf
call
idiv
fcmovbe
test
dec
clc
andb
mov
inc
sub
cmp
jl
sar
ds
fsubs
enter
into
or
lock
out
cltd
push
negb
pop
and
lret
fbstp
mov
inc
jb
sbb
dec
add
hlt
popa
scas
in
ljmp
or
and
xchg
fcmovu
outsb
lock
ds
sbb
fcmovnbe
add
inc
push
mov
pushl
mov
fwait
jno
mov
mov
xor
int3
out
cmp
push
mov
dec
mov
nop
popa
sbb
inc
jg
into
les
push
cmpsl
push
xlat
mov
ret
mov
out
clc
sbb
ret
ret
clc
jle
scas
js
mov
xor
cmp
aam
xchg
dec
sbb
push
pop
add
jb
nop
or
xor
jae
aas
dec
lea
pop
push
int3
or
jne
outsl
pop
bound
cmpsb
imul
mov
mov
xor
xchg
cs
adc
int3
or
cmpsb
ss
add
test
sbb
add
clc
inc
mov
adcl
fdiv
jb
ror
lcall
mulb
push
inc
inc
mov
sbb
xor
repnz
fwait
or
xchg
rcrl
dec
stos
sbbb
test
or
xchg
xchg
mov
les
mov
out
clc
loopne
lods
mov
lods
ficoms
pusha
mov
nop
adc
fidivrl
scas
and
out
xchg
sbb
sbb
cmp
xor
and
aas
out
das
ljmp
inc
movswl
out
fdivr
enter
adc
addr16
fisubrl
ret
mov
xchg
into
inc
mov
add
jo
mov
and
lods
sbb
cmp
xchg
les
mov
dec
mov
mov
jnp
or
jp
sub
div
dec
ljmp
xor
mov
dec
int3
mov
nop
add
cmp
mov
adc
and
pop
add
push
sub
call
repz
push
stos
cli
sub
jno
fwait
or
pop
jnp
lea
daa
addr16
add
push
or
jo
movsb
mov
fdivs
mov
out
test
outsb
enter
inc
pop
push
lcall
mov
fs
xor
aad
les
pushf
test
inc
sbb
mov
lcall
subb
cld
sbb
popf
in
adc
gs
into
scas
sbb
outsl
cs
and
or
movb
add
cmp
sti
sbb
push
cld
aas
adc
into
push
dec
add
and
mov
mov
pop
push
rolb
sbb
mov
mov
ret
gs
fcmovu
or
add
adc
idivb
push
mov
movsb
fs
sbb
jecxz
test
xor
mov
push
cmp
push
add
inc
add
sub
mov
dec
xor
fimull
ss
les
je
mov
stos
hlt
mov
sbb
pushf
insl
shl
or
fbstp
jmp
out
push
mov
ret
movsb
xchg
fsub
das
lret
movsb
div
pop
mov
sbb
adc
popf
mov
and
lcall
into
arpl
sti
test
add
sti
or
sub
push
xor
les
imul
repz
adc
rorb
mov
in
mov
test
cmp
out
or
sub
and
test
mov
jbe
dec
mov
push
xchg
dec
shlb
fisubrs
outsl
pop
push
dec
repnz
arpl
push
mov
scas
sub
ret
sub
repnz
das
sub
or
insl
rclb
hlt
repz
cmp
bound
jmp
addr16
sub
scas
cld
in
out
es
popa
mov
lret
cld
inc
loop
fiadds
sbb
dec
and
addr16
data16
xor
xor
lret
loop
dec
stos
hlt
pop
loop
or
loop
stos
hlt
push
loop
cli
stos
dec
sbb
imul
cli
data16
stos
dec
jg
shll
cli
in
loop
addr16
int
loop
addr16
lock
loop
addr16
sub
loop
addr16
sti
cmp
push
addr16
inc
jge
imul
mov
dec
inc
jmp
enter
stos
test
addr16
inc
addr16
lock
loop
or
inc
lcall
or
mov
arpl
sbb
lret
ret
mov
dec
xchg
test
lods
jg
adc
ljmp
dec
mov
lcall
enter
or
pop
scas
clc
stc
jnp
or
in
ror
pop
sub
fwait
movsb
ficoms
mov
or
xlat
inc
fildll
ljmp
or
xor
mov
pushf
pop
sub
and
and
icebp
sarl
or
clc
cli
sub
out
or
fcomps
hlt
mov
dec
and
dec
mov
jae
mov
lret
sub
stos
in
and
add
into
scas
and
stos
adc
jmp
mov
icebp
mov
cwtl
add
push
into
cs
addr16
sbb
shr
data16
in
ret
mov
xor
pushf
lods
adc
xor
fucomp
out
mov
mov
jbe
mov
lods
dec
mov
sub
xchg
ret
dec
mov
cmp
aad
add
dec
imul
adc
lea
mov
mov
mov
addb
add
fisubl
shrb
or
xchg
or
sub
shl
hlt
cs
mov
stos
lods
push
lret
jp
xchg
inc
xor
out
mov
adc
popa
push
adc
enter
and
sbb
lods
test
negl
in
stos
adc
mov
les
lods
add
adc
cmp
mov
nop
cld
mov
int3
add
cmp
xor
out
movsb
paddq
call
jnp
sbb
push
lds
add
ljmp
in
lahf
jg
sbb
dec
xor
stos
ficompl
in
mov
sbb
mov
rclb
jp
add
out
or
fs
fsubs
cmp
sub
xrelease
cmpb
xchg
in
int3
lahf
arpl
mov
push
or
xchg
xchg
xor
sbb
dec
pop
orb
into
push
or
ljmp
fcompl
int
enter
adc
xor
add
stos
outsl
es
sub
adc
add
mov
divb
pop
jae
fsubs
cmp
lods
mov
imul
sahf
sbb
lock
ret
scas
or
inc
fcompl
mov
in
scas
adc
adc
or
addr16
xor
push
cmp
sub
sahf
add
aam
in
and
into
cmpsb
shrl
rclb
sbb
lock
mov
ljmp
xor
dec
adc
or
into
add
shl
mov
scas
clc
popa
sbb
pop
rcr
enter
lret
ljmp
jecxz
cmc
jb
inc
fsubrs
cmp
test
scas
cli
push
sub
mov
jno
push
outsl
adc
cmpb
dec
cld
xchg
lret
in
leave
jg
or
xor
cs
xor
sbb
or
nop
and
pop
stos
add
push
push
and
subb
push
cmp
cld
std
add
adc
jg
jp
repnz
jp
mov
inc
xchg
jo
sarb
icebp
popf
xor
push
or
cmp
scas
cwtl
lret
xor
add
xor
mov
js
jbe
repz
cmp
ror
lret
sub
outsl
xorb
sub
add
xor
xchg
imul
or
mov
iret
mov
ffree
out
xor
sahf
cld
or
sarb
mov
out
xor
lock
jb
jp
rorb
mov
lahf
pop
dec
mov
outsl
inc
shrb
sbb
dec
les
negb
mov
sub
rcrb
lods
mov
les
cmp
mov
adc
out
jp
xchg
or
or
pop
sbb
jle
aam
nop
mov
push
cmp
hlt
push
fiaddl
test
fsubrl
ss
jae
sbb
sbb
adc
xchg
mov
cli
inc
cmp
add
aam
xchg
dec
mov
mov
popf
popa
xchg
imul
cltd
mov
sub
push
sub
push
jbe
inc
shrb
mov
xor
fwait
and
sbb
rorl
add
lret
mov
mov
jl
push
stos
sbb
mov
lret
xor
loope
aad
aam
outsl
add
mov
cltd
sahf
lock
or
mov
iret
adc
mov
rcll
push
fimuls
mov
inc
hlt
movl
ds
mov
rcr
mov
cmp
dec
lcall
pop
movsl
pop
pop
lock
fisubrs
scas
push
shr
xchg
shlb
fwait
jb
sbb
out
push
pop
divl
push
loope
cs
xor
sbb
dec
cmp
pop
pop
xor
test
mov
out
les
clc
fiaddl
sbb
dec
mov
ss
leave
xor
mov
push
cmp
xor
call
fcoml
push
cmp
addr16
dec
mov
ds
mov
icebp
outsl
aaa
inc
neg
data16
clc
test
or
adc
cwtl
loop
in
xor
movsl
or
adc
out
sbb
cmp
insl
shl
cmp
pop
pop
in
mov
shrb
mov
add
ficomps
ds
cld
cs
cltd
jle
xor
xchg
lock
xor
mov
sbb
es
mov
xchg
pop
sub
push
cmp
mov
jl
cmp
push
push
push
in
cmpsl
sbb
dec
add
sub
loopne
push
lock
add
divl
scas
ljmp
rorl
inc
cld
push
fidivs
inc
add
lret
rorb
bound
mov
popf
mov
or
or
ret
or
inc
mov
mov
enter
ja
dec
lods
ja
ljmp
ljmp
ror
jns
cltd
sbb
sbb
lahf
add
sub
lods
in
ret
inc
mov
int3
data16
push
mov
rclb
xchg
loopne
dec
andb
ret
sbb
movsl
addr16
lock
xchg
and
add
xor
int
push
fs
lock
xchg
sarb
aam
das
stc
push
into
int3
dec
and
push
mov
cltd
test
cs
mov
clc
mov
cmpsb
xchg
mov
mov
out
lock
inc
adc
or
mov
push
adc
or
cs
dec
js
pushf
xchg
sbb
adc
lods
adc
or
sub
stc
mov
les
out
out
add
xor
or
rolb
movsl
scas
leave
mov
clc
pop
data16
cmp
push
mov
lock
lods
push
xor
and
sarb
lcall
stos
xchg
sbb
or
or
mov
mov
mov
fwait
repnz
mov
int3
in
mov
bound
mov
mov
and
pop
int
and
inc
sub
mov
xor
push
mov
aas
mov
sbb
in
dec
shrl
fcompl
aad
mov
mov
add
pop
enter
movsb
mov
mov
int
dec
int3
mov
fiaddl
push
mov
mov
add
das
and
sbb
in
insb
push
jno
sub
xor
pop
push
ficomps
into
movsl
shlb
fsubs
out
sbb
sbb
lods
iret
ds
and
jg
stos
mov
daa
inc
add
inc
cltd
pusha
stos
mov
jmp
or
loopne
pop
psadbw
into
hlt
mov
icebp
ffreep
sbb
movsl
adc
push
ss
ljmp
loop
out
sub
sti
and
cmpsb
sub
xor
mov
xor
mov
sbb
push
out
pop
in
cli
mov
mov
popf
cs
hlt
fsubrl
lods
mov
int3
test
or
jg
push
fisubrl
scas
ret
dec
lcall
les
and
xor
push
imulb
cmp
or
xor
cs
rclb
mov
cli
ljmp
push
add
scas
ror
push
mov
xlat
xor
push
cs
shlb
ljmp
pop
pushf
sbb
mov
mov
outsl
ds
shll
sbb
clc
lods
sbb
les
sub
enter
das
push
mov
rcl
rcll
sbb
repnz
test
jmp
jecxz
mov
xor
fisttps
or
nop
clc
pop
mov
mov
out
cmp
or
sub
ret
cmpb
cld
add
js
xor
sahf
xor
cli
cwtl
mov
or
ljmp
rcrl
or
ret
lock
repnz
sbb
rclb
cmp
out
sbb
inc
mov
fcoms
jmp
test
xchg
into
sbb
ret
fnstsw
pop
lret
data16
adc
fnsave
inc
shll
sbb
inc
fwait
add
inc
out
pushf
cmpsl
sarl
mov
mov
lods
sub
out
outsl
push
xchg
cld
sbb
enter
mov
inc
adc
stos
lret
lcall
lret
ret
push
jb
sbb
rolb
mov
aaa
les
imulb
clc
xchg
cli
movsb
jns
lods
xchg
cmpsb
xchg
fisttpl
mov
into
or
lea
pushf
sahf
cs
scas
ljmp
cltd
cmpsl
jp
cmp
bound
xlat
sub
shlb
nop
cwtl
xor
mov
push
adc
and
enter
pop
inc
adc
fisubl
loop
sub
sbb
push
add
inc
mov
bound
iret
lret
inc
lock
cwtl
shlb
xchg
xchg
enter
cmp
sbb
mov
xchg
sub
adc
mov
addb
pop
in
aam
lock
std
stc
rorl
mov
dec
in
xor
ret
or
pop
sbb
sarl
int3
orb
mov
push
mov
mov
lock
out
xor
push
pop
push
push
sbb
test
fnstcw
sbb
mov
cmpsl
jbe
fwait
mov
mov
pop
in
aad
movsb
incb
sbb
rorb
or
stos
out
push
into
cmp
fiadds
les
mov
adc
mov
sub
add
or
sbb
fcoml
stc
push
enter
mov
jecxz
and
idivl
xchg
outsl
popf
inc
ljmp
mov
xor
mov
hlt
cs
mov
or
push
stos
pop
inc
fsub
lret
cld
pop
pop
addl
and
mov
rorb
cld
negb
and
repnz
les
pop
inc
subl
sbb
cmc
mov
jle
les
jg
out
rolb
lds
in
lret
xor
sahf
insl
cli
idivb
cld
push
adc
bound
shrb
mov
sbbl
shrb
scas
shll
mov
cld
scas
mov
pusha
fdivrs
push
out
and
mov
lods
add
push
ss
lock
test
mov
add
xor
enter
mov
xor
mov
loop
notb
aas
in
outsl
jnp
and
and
fcomps
xor
sub
call
pop
fwait
imul
xor
push
test
cmp
cmp
mov
mov
into
lahf
sub
stos
movsl
cmp
cli
movsb
mov
mov
or
scas
mov
aas
imul
sbb
in
nop
sub
dec
loope
dec
pop
rcrb
hlt
das
test
adc
inc
jnp
out
jp
sbb
sbb
popa
fcoms
ret
adc
dec
std
mov
push
pop
int3
out
add
jg
push
lea
and
xchg
push
mov
mov
mov
movsb
add
int
ffreep
lods
adc
repz
nop
inc
int3
shlb
add
loopne
gs
cltd
aam
or
xchg
addb
rolb
stos
mov
add
cs
mov
out
shrb
movsl
mov
fisttps
decb
xchg
call
cli
xor
ret
sbb
inc
aam
mov
scas
fiadds
jp
lcall
ljmp
scas
gs
idiv
xor
rclb
enter
aas
sbb
fmulp
cli
or
jg
jbe
mov
cmp
aaa
fisubl
xor
dec
sbb
mov
mov
insl
cwtl
xchg
sub
fsubrs
mov
sti
xor
stc
cli
lcall
adc
gs
sbb
lahf
inc
stos
lock
aad
pop
xchg
mov
xchg
sbb
lock
mov
fisttps
push
adc
imul
mov
sbb
mov
in
pop
stos
push
shrl
mov
testb
jp
pushf
cmp
push
cli
adc
ss
nop
or
scas
mov
incl
fld
adc
inc
or
shlb
mov
fdivrl
xor
fldl
fsubl
dec
pop
xchg
adc
sbb
fdivl
outsb
sbb
shlb
jg
lods
jns
cmp
js
jb
nop
jle
repnz
sti
add
bound
push
cmpsl
cmp
in
lods
out
shlb
fcomps
in
jg
mov
lods
sub
bound
push
push
and
sub
js,pt
sar
fidivrl
dec
inc
sub
xor
add
mov
lahf
mov
mov
inc
mov
mov
cs
int3
js
movsb
xchg
push
mov
jb
mov
shrb
notb
inc
inc
out
outsb
lret
mov
push
clc
dec
mov
add
xchg
enter
xorb
push
sbb
or
inc
out
mov
sub
mov
mov
mov
stos
fsubrl
rol
lods
xor
mov
js
mov
cs
jle
jo
push
or
sbb
stos
aam
ficoms
cmp
inc
out
add
bound
sbb
sbb
push
mov
lea
pop
mov
stc
stos
or
sub
cmp
mov
or
scas
or
into
fmuls
clc
out
outsl
sbb
mov
cmp
sub
fcmovne
scas
sbb
std
ss
test
mov
adc
mov
inc
adc
xchg
repnz
fstl
add
ss
pushf
int3
or
enter
cmp
sbb
mov
adc
fadd
dec
xchg
jb
ret
aas
sbb
mov
mov
cli
adc
out
mov
xor
mov
mov
jp
mov
mov
int3
add
xchg
push
sbb
inc
fwait
mov
fisubs
outsl
ret
aas
stos
nop
neg
stos
xor
mov
xchg
mov
lahf
pushf
clc
rolb
sbb
sbb
ficompl
pop
fsubs
push
ret
testb
fldl
shl
leave
sbb
lods
fcompl
movsb
cmp
in
les
rorb
cli
js
sbb
loopne
data16
pop
rorb
fwait
sub
popf
and
dec
or
mov
or
mov
xor
sub
xor
fbstp
int3
xchg
clc
mov
dec
fwait
icebp
hlt
sbb
or
cmp
dec
lea
aam
mov
dec
cld
enter
adc
js
pushf
popf
sbb
push
add
inc
lods
xchg
or
enter
aas
jno
in
ret
nop
cwtl
out
fcmovb
jae
jnp
push
sbb
jg
outsl
push
xor
ret
jp
jo
fbld
nop
les
data16
repnz
cmpb
lods
int3
add
lods
dec
inc
fcmovbe
ljmp
adc
jg
repnz
or
stos
pop
movsl
imull
ds
aam
mov
lea
xchg
popf
in
fcmovbe
and
sbb
hlt
test
scas
xchg
or
iret
out
dec
out
call
or
or
inc
adc
ja
jnp
sub
cmp
lret
es
loop
sub
je
inc
and
daa
fimull
rorb
mov
ss
clc
adc
fwait
mov
mov
add
aad
sbb
lret
mov
xor
mov
movsl
fstl
ds
xor
in
fcompl
in
repnz
pop
push
mov
hlt
sbb
ds
pusha
hlt
les
fs
pop
cs
clc
or
adc
xor
cld
push
or
push
lea
dec
inc
jbe
mov
and
adc
dec
ss
sub
int3
sbbb
out
cvttps2pi
jmp
clc
inc
nop
into
mov
or
push
xor
insb
shr
lods
or
dec
mov
enter
or
fisubl
shrl
inc
jo
out
jb
pusha
sub
hlt
fdivrl
dec
push
jg
mov
jp
inc
stos
outsl
das
jg
aas
fldenv
push
femms
adcb
les
sbb
sbb
cmp
adc
sbb
or
adc
rolb
dec
fadds
scas
pushf
push
xor
mov
int3
inc
enter
fsubrs
adc
fldcw
xchg
out
xor
mov
out
divb
movsb
cmp
pop
cwtl
out
mov
mov
addr16
and
scas
movsb
fstl
add
inc
ret
xlat
or
outsl
cs
cmp
bound
stos
push
shlb
sbb
push
ret
sub
mov
test
pushf
push
dec
inc
test
stc
xor
mov
pop
pop
stos
mov
xor
es
mov
scas
cmp
add
cltd
or
insl
inc
in
stos
inc
sahf
sub
cli
add
data16
push
cmp
sub
lods
aam
loope
pop
fists
mov
mov
push
scas
mov
hlt
subl
aas
mov
popa
push
fmuls
add
mov
cmp
jmp
mov
negb
ljmp
mov
push
mov
pop
cmp
scas
pop
sub
aam
fsubrl
xchg
loop
adc
sbb
lods
cmp
pop
mov
sbb
mov
inc
push
shlb
push
int3
lret
push
cmp
lods
jo
or
test
add
pop
repnz
cmp
mov
hlt
or
sbb
pop
rcrb
ret
jnp
cli
fisubs
xlat
fsubrl
lret
push
das
repnz
dec
push
aas
sahf
call
adc
test
pop
or
imull
lahf
xor
cs
fcomi
fcoms
xor
sbb
pop
repnz
test
xor
push
into
mov
sbb
sbb
enter
sbb
dec
movsl
cltd
sub
sbb
imul
push
inc
push
leave
cmp
stos
orb
mov
shrb
or
popf
test
xor
mov
xor
aam
pop
fwait
pop
int
push
adc
scas
inc
hlt
lock
insb
repnz
xor
cmpsl
insb
stos
gs
divl
mov
out
fmuls
repnz
ret
mov
add
sbb
rcl
push
aas
xchg
sarb
lcall
rorl
ljmp
js
adc
xchg
adc
add
rorb
mov
scas
hlt
jno
inc
pusha
int3
sbb
cmpsl
dec
mov
pop
push
fcomip
div
jo
les
lods
jb
lcall
int3
icebp
xor
scas
and
les
add
mov
lods
mov
push
jb,pn
dec
add
lock
loop
scas
ret
loopne,pt
xlat
xor
aas
imul
add
enter
cmp
hlt
into
rcrb
outsl
int
cmp
sbb
lods
or
cld
addr16
ds
repnz
pop
sbb
fwait
xchg
mov
mov
inc
clc
fsubs
jns
cmc
jbe
cmp
pushf
popf
repnz
testl
sbb
fdivrs
aas
inc
jb
mov
cmp
lock
sbb
jb
mov
scas
mov
mov
cmp
sahf
cli
xor
sbb
pop
xchg
out
mov
mov
loope
in
mov
xchg
push
push
xchg
sbb
fadd
xor
in
into
mov
hlt
test
push
cli
sbb
int3
ss
idivb
movsb
rorb
out
lods
js
fists
adc
mov
gs
or
adc
mov
divl
sub
mov
mov
ss
ret
cmp
sbb
mov
jbe
divb
les
cli
inc
mov
sub
in
scas
sbb
shr
adc
out
jb
pop
fsubrs
add
adc
fidivl
movsb
stos
pop
xorl
mov
dec
or
lret
pop
add
cld
jecxz
adc
push
sbb
adc
int
imul
movsb
xchg
inc
mov
incb
test
cs
jae
ret
cmp
lret
cmpb
lcall
mov
or
inc
scas
mov
inc
xor
fidivs
shlb
mov
push
xchg
dec
clc
cmp
adc
add
ja
mov
in
ds
icebp
dec
mov
daa
fnstenv
hlt
ret
mov
dec
cmp
jecxz
adc
add
push
outsl
inc
jg
outsl
call
adc
clc
mov
add
testb
mov
daa
dec
cld
hlt
rclb
mov
mov
ljmp
scas
fcoml
int
fadd
pop
pop
into
das
inc
sub
ljmp
sbb
sbb
mov
rcrb
fwait
ret
iret
in
xor
js
cmp
cmp
mov
add
decb
fstpt
add
arpl
nop
fdivs
cmpl
mov
int3
mov
fdivl
mov
or
dec
int3
lds
mov
popa
mov
jb
cs
dec
adc
sbb
cmpsb
lods
xor
repnz
ret
lcall
sbb
jo
mov
pusha
stos
sti
or
xchg
les
rcrl
in
shll
xor
cmpsb
rol
sahf
mov
add
cmp
idivb
jbe
cmp
lods
jb
ds
repnz
aam
fcmovne
loopne
icebp
dec
adc
sub
jb
push
addr16
push
cmpsl
mov
push
cwtl
sbb
hlt
adc
or
ror
and
ja
push
into
aas
sub
fcomp
inc
orl
cmp
mov
fimull
jnp,pn
repnz
dec
xor
add
aam
adc
mov
ret
jmp
test
push
bnd
mov
mov
add
ja
xor
fisubrl
shlb
mov
sahf
or
fsubrl
and
sub
testb
sbb
mov
xchg
push
int
scas
outsl
jb
jbe
into
lods
ret
lods
dec
adc
ljmp
in
hlt
sbb
gs
pop
sbb
mov
lahf
mov
push
in
or
repz
shlb
ljmp
leave
inc
or
sub
xchg
xchg
stos
mov
push
movsl
push
mov
adc
sub
ret
dec
insb
mov
jecxz
or
ret
pusha
rorb
popl
push
fidivl
dec
into
xchg
ljmp
in
inc
xchg
mov
xor
jae
lcall
push
ds
ljmp
sar
adc
fcmovnu
mov
test
sahf
sub
stos
scas
sbb
outsl
shr
rorb
inc
ret
daa
aam
push
es
mov
xor
addr16
mov
lock
jle
pop
mov
mov
mov
nop
icebp
enter
mov
loop
mov
push
xchg
or
add
pushf
aam
dec
fdivs
repnz
pop
outsl
fstpl
cmp
daa
push
sub
mov
sbb
sbb
xacquire
sub
jp
add
adc
ds
xchg
scas
sbb
dec
xchg
shlb
fwait
mov
xchg
adc
sahf
pop
stos
and
mov
stos
mov
rorb
out
and
push
int3
xchg
pop
sub
dec
push
lret
sbb
idiv
lret
adc
or
push
aas
cli
sbb
loopne
mov
mov
out
cwtl
lcall
lea
sbb
sub
mov
sahf
orl
js
rolb
push
push
incb
dec
fdivrl
mov
push
push
cmp
shl
lret
pop
inc
mov
mov
repnz
enter
iret
xchg
mov
push
adc
insb
xor
ret
aaa
sbb
sbb
fistpll
and
bnd
lock
movl
sbb
push
fimull
aas
mov
cs
in
aas
mov
cli
test
xchg
test
pushf
test
fdivrs
inc
pop
cmp
push
shlb
push
es
out
mov
incl
cs
cmp
lock
push
push
sbb
out
test
ret
jge
das
dec
sub
fsubrs
add
xor
les
push
jo
shll
mov
enter
sub
add
jo
jo
in
push
dec
or
repz
repnz
out
add
ret
ds
int3
in
hlt
mov
lods
cmp
cmp
and
aas
shll
adc
aad
xlat
pop
push
mov
test
dec
sbb
lods
cld
addr16
sub
faddl
mov
push
scas
es
in
lods
popa
or
mov
ror
push
xchg
pop
cli
jecxz
aad
xchg
xchg
idiv
inc
sahf
bound
les
mov
or
fdivl
in
aas
mov
mov
inc
addr16
jae
rol
add
mov
push
mov
ds
enter
rcrb
push
cmpsl
push
mov
ljmp
test
add
pop
cmp
addr16
xchg
add
into
mov
mov
scas
add
mov
jg
scas
cmp
and
or
pop
mov
xor
scas
and
cmpsb
scas
in
stos
cli
movsl
push
mov
jne
imul
jge
push
or
pop
addr16
mov
sbb
cmp
test
cld
cmp
stos
repz
xor
and
dec
ds
push
jg
push
rorb
cmp
fucom
cmp
inc
or
stos
push
adc
stos
stos
aam
pusha
push
es
out
mov
out
xlat
fnstcw
jns
jp
jle
lods
jp
nop
jno
adc
test
sub
mov
es
shr
iret
je
fcmovu
jge
outsl
adc
xor
scas
dec
out
sub
push
xchg
push
xchg
les
sub
sbb
sbb
mov
cmp
cmp
loop
ret
push
sti
cmp
mov
fidivrl
push
sbb
pop
sbb
dec
outsb
sub
push
ds
xor
inc
rcrb
scas
mov
lret
in
mov
push
stos
sbb
pminsw
cmp
mov
or
adc
mov
mov
sahf
div
ds
jecxz
fs
xchg
mov
sti
shlb
nop
or
xchg
mov
addb
inc
cmp
sbb
push
enter
mov
ret
mov
or
pusha
mov
cld
js
xchg
mov
inc
mov
fimull
xor
mov
in
pop
pusha
lret
shrb
mov
add
mov
sbb
dec
clc
xchg
out
ret
les
mov
inc
stos
movsl
int3
push
lret
sbb
enter
aam
push
mov
xor
push
or
adc
nop
fisubrl
or
inc
push
ds
cltd
adc
fisttps
out
cmp
xor
aam
ret
ljmp
outsb
xlat
mov
inc
sub
adc
stos
mov
nop
mov
jg
hlt
add
push
in
push
xchg
sbbb
mov
fsubs
jg
mov
repnz
adc
xchg
out
test
mov
ljmp
addb
imul
lret
mov
insl
fidivrl
fidivs
ret
bnd
mov
or
inc
out
pop
sub
ss
or
add
fsubl
fildll
insb
aam
into
ret
shlb
mov
lods
jb
xor
das
mov
jae
lods
scas
repnz
in
ret
mov
out
adc
or
sbb
cmpsb
clc
inc
bound
xchg
cmp
push
addr16
cmp
lods
es
shlb
iret
xchg
pop
idivb
aam
ficomps
cmp
testl
shrl
xor
inc
inc
jb
das
sbbl
ljmp
les
fbld
gs
fcom
out
add
imul
xlat
mov
dec
in
push
mov
sarb
inc
push
or
mov
or
mov
xchg
sub
add
lahf
les
pop
lods
mov
jmp
out
movsb
nop
push
into
cli
cs
lods
out
cmpsl
pop
push
mov
pop
push
pop
loopne
scas
push
ljmp
aaa
cs
adc
sbb
cmp
cltd
addr16
mov
rolb
ror
cmp
les
or
daa
jno
adc
lcall
scas
icebp
mov
push
into
jle
fstpt
xchg
xlat
inc
xchg
pop
fsubr
les
push
sbb
fcomp
cmp
sbb
cmp
clc
fistpll
xchg
inc
mov
add
adc
xchg
jge
sbb
sbb
stos
push
ficompl
cmp
xor
enter
in
xor
cld
hlt
jecxz
and
cmp
in
mov
adc
shl
fdivrl
inc
fiadds
adc
repnz
test
filds
sbb
pop
mov
push
fwait
dec
clc
int3
loopne
dec
mov
cmp
cmpsb
cmp
enter
cmpsb
scas
es
sbb
cmpsl
cld
and
cwtl
mov
push
push
addr16
gs
rcrb
mov
clc
mov
in
add
or
rorb
mov
ret
mov
scas
int3
mov
bound
adc
into
sub
add
int3
xor
mov
jbe
ljmp
enter
or
pop
mov
lcall
sub
adc
jno
negb
fdivrs
loope
into
push
sbb
addb
inc
icebp
ret
iret
mov
xor
mov
mov
jno
insb
sub
stos
mov
addb
fcmovb
fmuls
sbb
or
idivb
dec
push
mov
push
add
aas
jns
xor
inc
mov
sub
cmp
xor
xchg
xchg
fcomip
xor
push
lods
jae
xchg
call
or
or
cmp
mov
nop
ss
sbbl
stos
push
fdivrl
lock
pop
mov
sbb
mov
or
out
bound
add
sti
movsb
test
addr16
cmp
aas
lods
popa
scas
fcmovnbe
cmpsb
adc
mov
sbb
push
mov
xchg
lcall
enter
cld
xor
dec
sbb
lds
and
xchg
cmp
sbb
lahf
mov
mov
mov
dec
or
add
add
faddp
aas
cmp
inc
mov
out
mov
scas
dec
decb
nop
loop
mov
out
shlb
add
jns
sar
lcall
cmpsl
cmp
xor
cmp
dec
lods
cmp
ds
sbb
lea
loopne
sub
cltd
mov
out
add
cld
cmpsl
es
xchg
call
ds
fdivrl
adc
les
sub
add
mov
shl
push
pop
sub
es
stos
add
popf
mov
stos
call
add
xor
add
cmpsb
add
push
das
inc
dec
mov
cs
out
add
mov
mov
loope
fimull
notl
dec
and
adc
fists
ds
dec
xor
sti
nop
aaa
or
pushf
dec
cmp
sbb
repnz
aam
mov
out
sti
in
mov
lret
xor
cmpl
outsl
and
and
into
icebp
icebp
or
lea
subl
xchg
aaa
sbb
ret
adcb
sub
cltd
sub
push
ror
mov
dec
mov
jne
mov
xor
xchg
push
or
leave
jp
jb
pusha
mov
hlt
cmp
fnstenv
std
mov
jmp
add
aam
std
and
cli
movhps
jmp
and
subb
stos
push
cmp
subl
xchg
dec
in
pop
cmp
mov
fsubrl
lods
mov
xor
push
sbb
sub
push
adc
and
or
into
or
fistpl
aad
or
hlt
cmp
out
cs
or
fildll
addr16
lret
mov
mov
aas
hlt
test
leave
fdivr
into
sar
xor
movsb
pop
fs
adc
shll
add
jg
mov
push
aam
int3
add
sbb
in
dec
sbb
es
cmp
loope
aam
iret
addr16
in
iret
pushf
fisubl
sub
in
adc
shll
jnp
addr16
push
mov
xor
push
mov
and
xor
ret
sbb
push
faddl
mov
mov
mov
sbb
fcmovne
xchg
inc
fmuls
sahf
pusha
out
mov
fimull
repnz
mov
or
mov
fdivrp
adc
sbb
loope
je
lret
sahf
inc
add
ss
jg
inc
xor
test
aaa
ret
mov
xor
add
pop
mov
xchg
shl
repnz
hlt
push
pop
mov
push
cmp
into
xor
inc
out
pop
mov
mov
jno
addr16
mov
jg
negl
xchg
lret
dec
cli
jb
adc
xchg
cmpsl
cld
ficoml
cmp
inc
adc
lods
mov
loopne
in
popa
test
add
lret
mov
xlat
ficompl
imul
addr16
sarl
add
lods
dec
xchg
out
hlt
mov
cs
aam
mov
clc
mov
push
add
daa
sbb
mov
ds
xor
pushf
hlt
mov
data16
xchg
fdivrl
aas
jg
stos
sbb
shlb
sbb
into
sub
cmp
push
adc
addr16
fidivs
cli
scas
lret
inc
sub
push
ret
mov
outsl
pop
jg
gs
xchg
fidivrl
add
popf
mov
sub
mov
or
sbb
xchg
lcall
ficoml
push
pop
lahf
add
mov
adc
fcompl
cs
pop
and
push
fildl
decb
lock
cmp
fmul
ljmp
sbb
shlb
cmp
lret
push
dec
repnz
sbb
outsb
cmp
addr16
sub
mov
xor
push
mov
mov
cmpsb
repnz
test
js
dec
sbb
mov
out
lret
pop
sbb
std
cmp
mov
push
fisttpll
pop
push
sbb
repnz
cli
sbb
or
les
xchg
sahf
add
lods
js
xchg
sub
lahf
mov
add
jbe
lods
mov
rcr
push
sarb
pusha
into
lods
enter
cwtl
lods
hlt
lock
mov
mov
fwait
add
fsts
stc
decb
fcompl
mov
xchg
and
jge
out
jp
enter
lods
fmul
push
sbb
push
mov
fistl
lahf
fistpl
shrb
push
mov
mov
sbb
repnz
fsubr
std
dec
xchg
or
jg
mov
and
lods
or
xchg
mov
jo
and
out
mov
xor
or
repnz
push
cld
cmc
pusha
cmp
add
rcrb
cli
mov
cli
call
mov
mov
pushf
mov
xchg
rorb
and
push
push
jg
jo
pop
ljmp
fdivrl
sbb
xor
sub
mov
jmp
adc
dec
pushf
mov
fmul
adc
mov
cld
sub
mov
clc
rol
sbb
push
fmul
ds
dec
dec
pop
shrb
pop
fstpt
aam
push
push
mov
and
sub
adc
lcall
xchg
arpl
lcall
cli
ss
jne
cli
mov
push
sbb
inc
das
addb
dec
nop
in
dec
adc
mov
mov
jno
dec
nop
rorb
into
sub
or
fs
lock
mov
push
sarl
mov
jne
incb
sbb
rcrb
add
or
cld
ficomps
inc
rorb
sahf
fs
jg
mov
cmpsb
adc
out
ljmp
and
mov
add
into
fidivrs
cmp
xchg
inc
add
mov
dec
pop
jne
dec
les
jg
or
xchg
fxch
mov
in
pop
in
mov
push
scas
adc
cmp
or
clc
mov
xchg
hlt
adcl
fwait
sti
mov
imul
loope,pt
add
xlat
push
repnz
test
or
mov
sbb
add
scas
xchg
scas
clc
out
fwait
in
fidivrl
push
cli
xchg
cmp
rclb
xchg
pop
pusha
fwait
ret
mov
ret
cld
das
add
nop
xchg
lret
enter
into
in
and
jp
jp
and
dec
addr16
lret
sarb
cs
das
push
jae
mov
xor
into
jne
std
loopne
xchg
ss
rclb
fs
lods
aas
cmp
lods
push
adc
cli
popf
push
fcomp
mov
push
jp
shlb
mov
jae
xor
hlt
pop
sbb
mov
in
sbb
stos
sbb
sbb
or
out
or
sbb
sub
in
and
or
adc
lahf
inc
mov
stos
xchg
lock
fisubrl
rolb
lock
ljmp
out
fmull
pop
data16
stos
ds
mov
ljmp
jnp
cs
movsl
add
push
test
cmp
lock
stos
xor
das
jge
les
mov
ljmp
mov
jns
push
push
mov
sbb
adc
cmp
push
ret
push
enter
sbb
jno
or
mov
and
lds
xchg
aam
inc
mov
add
cmp
les
and
out
cmp
mov
jecxz
push
ljmp
mov
bound
movsb
out
sub
iret
mov
pushf
lock
int3
or
mov
test
lahf
repz
aam
mov
call
push
add
incb
add
and
mov
dec
movb
bound
inc
dec
or
lock
cwtl
xor
out
mov
push
mov
xchg
push
ljmp
fadd
ss
aas
mov
push
clc
ljmp
testb
inc
aam
sbb
jecxz
adc
mov
lcall
movsb
or
aam
jg
mov
divb
cs
rcll
cmp
je
mov
add
ja
ret
cmp
clc
scas
jnp
popf
xlat
int3
inc
jo
sbb
fnsetpm(287
ljmp
mov
cmp
mov
inc
adcl
xor
sub
push
mov
push
int3
dec
mov
imulb
aas
inc
cld
adc
pop
mov
stos
into
addb
nop
push
neg
cmp
hlt
cmpsb
adc
dec
add
ljmp
adc
scas
ret
dec
mov
fbld
cmp
xchg
cs
xor
xchg
rcrb
fmul
mov
fs
mov
mov
xchg
test
popl
hlt
fdivrl
jl
pop
add
out
push
out
pop
jo
sub
cltd
int3
ret
fsubl
mov
loop
outsl
aaa
sub
rorb
and
cmpsl
mov
lret
xor
clc
mov
mov
rcrl
add
sbb
inc
sub
lret
pushf
mov
ds
cltd
ror
fcmovnb
sbb
push
cmp
sbb
or
bound
mov
sarb
sub
mov
bound
push
sub
cli
stos
pusha
sub
stos
stc
shrb
lcall
xor
lods
xor
cmp
jg
push
push
sbb
and
testb
fmuls
dec
scas
sbb
sbb
fwait
movsl
adc
adc
cmp
mov
in
cmp
push
dec
sbb
xor
sti
cs
fmul
lahf
sbb
push
lret
cmpsb
mov
cmp
push
hlt
pop
int
mov
popf
enter
filds
bound
pusha
test
pop
enter
mov
push
sub
fwait
int3
xor
cmpsb
adc
pop
sub
cmp
mov
into
gs
or
adc
cmp
lret
lock
sahf
pop
mov
das
int
jne
andl
fbstp
add
es
stos
sbb
sbb
out
mov
pusha
ss
stos
scas
xor
adc
push
rolb
out
sarl
stos
dec
iret
cmp
mov
ret
aas
cli
outsl
out
sbb
not
sbb
xor
hlt
ds
lret
add
mov
inc
dec
cmp
nop
cmc
add
and
hlt
mov
out
adc
ss
fsts
popf
mov
ds
push
mov
mov
iret
mov
cmp
pop
mov
hlt
jle
dec
sbb
ss
sub
push
movsb
mov
int3
xor
lahf
jp
popa
out
shlb
es
adc
sbb
mov
push
stos
scas
and
mov
gs
pop
inc
or
pop
push
ds
push
js
repnz
mov
mov
sbb
scas
sub
mov
mov
in
fwait
cld
cmovg
or
adc
ja
cmp
aam
adc
mov
xor
push
cs
enter
pop
xchg
aam
mov
sub
sub
cmp
jp
pushf
nop
mov
push
phsubd
jo
sbb
jbe
push
test
push
addr16
stos
pop
icebp
sbb
aam
sbb
xchg
imul
sub
popf
or
ds
adc
mov
cli
repnz
pushl
or
push
xlat
stos
ss
scas
arpl
fdivrs
jbe
sub
xor
lea
mov
push
push
lock
cmp
cli
adcl
adcl
mov
rolb
repnz
mov
push
xlat
negb
pop
sbb
xor
lock
jmp
or
jno
mov
shrl
mov
xor
das
iret
outsl
adc
and
mov
iret
mov
out
jae,pt
xchg
es
xchg
sbb
lock
out
out
sub
mov
or
ja
inc
xor
aas
ljmp
pusha
push
cld
faddl
cmp
fldt
inc
xchg
push
or
sbb
scas
xor
xor
fdivl
lock
clc
cmp
stos
push
das
dec
pop
call
ljmp
into
cli
ss
mov
adc
sub
jp
mov
hlt
lahf
sbb
sbb
nop
push
mov
pop
movsb
push
inc
enter
fisubl
testb
stos
les
addl
mov
lock
cmp
fistpl
adc
test
cmpb
mov
into
xlat
shl
adc
jb
cld
nop
add
lods
es
ret
mov
adc
jecxz
inc
or
pop
js
bound
outsl
xor
mov
sbb
into
mov
shr
adc
add
rolb
mov
pushf
aam
cli
out
or
sub
shrb
cmc
add
negb
pop
adc
mov
push
mov
outsl
in
jae
cmpl
jns
lret
sub
ljmp
mov
push
bound
bound
ss
add
adc
pop
pop
ss
das
dec
jno
ss
aas
add
ret
sbb
aam
js
scas
sub
jle
xlat
push
adc
add
lock
add
cs
in
mov
push
pop
incb
mov
outsl
sub
sbb
enter
xor
sub
scas
rclb
xor
aas
clc
hlt
fisubrl
das
pop
mov
add
dec
jl
repnz
pop
int3
gs
mov
cmp
add
jp
out
add
fs
sbb
fidivs
fdivrl
mov
jbe
or
pop
scas
int
xlat
clc
addb
adc
mov
aaa
nop
sub
mov
mov
add
addr16
imulb
or
mov
aam
mov
idivb
jb
out
cld
pop
dec
sbb
mov
loop
mov
cmp
in
mov
add
cmp
push
jmp
out
testb
stos
adc
mov
ret
in
cmp
jo
cs
je
push
mov
push
mov
mov
xlat
enter
out
adc
loop
dec
xchg
int3
sbbl
mov
mov
mov
repnz
xor
pop
jo
mov
adc
xchg
imul
mov
push
sbb
cli
pop
dec
ljmp
or
ret
int
dec
mov
mov
repnz
sub
cmpsl
repz
add
or
test
outsl
mulb
or
xchg
lgs
add
jnp
cltd
mov
sbb
and
aam
in
or
xor
sbb
sub
cs
ficomps
popf
sbb
arpl
sub
mov
pop
pushf
ljmp
cmp
cmp
and
dec
xor
jecxz
repz
push
push
shlb
mov
into
daa
es
ror
test
data16
sbb
sub
repnz
sar
mov
ds
scas
movsb
sub
mov
outsb
or
dec
fdivl
lret
mov
dec
mov
cmp
faddp
daa
outsl
test
or
add
es
adc
daa
repz
push
into
cli
shr
xchg
push
lret
ss
cwtl
les
push
mov
lea
sahf
mov
ss
das
test
push
xor
ror
mov
hlt
adc
sbb
jbe
xlat
ljmp
mov
inc
adc
fidivrs
scas
cld
jo
or
mov
rol
xchg
cmp
sbb
ss
addb
aam
ficompl
xor
lcall
repnz
jno
or
scas
pop
gs
cwtl
sbb
stos
xlat
mov
pop
stos
cli
or
pop
mov
or
in
jno
mov
repnz
sbb
scas
fnstcw
xor
fldenv
push
shlb
notl
mov
sar
fsubl
nop
iret
mov
scas
mov
sbb
lock
xchg
cld
hlt
mov
pusha
push
idivb
lds
cmp
xchg
imul
push
test
repnz
mov
shr
shrl
inc
nop
xchg
lret
dec
js
jp
leavew
loop
sub
cmp
sbb
hlt
xorb
movb
lea
cs
sbb
cli
cmpsl
lcall
orb
movsb
xchg
push
cli
cmp
stos
xchg
mov
push
xchg
repnz
hlt
sub
mov
scas
incl
icebp
push
pop
mov
ljmp
sbb
fisubrs
jnp,pn
repnz
rcll
sub
lahf
mov
insl
lods
adc
dec
xchg
nop
or
mov
sub
cmp
movsl
cmpsb
fisubl
in
xor
aam
mov
lock
push
inc
fisubs
or
jbe
mov
push
jo
cli
lock
mov
pusha
mov
sahf
add
or
sbb
out
pop
cld
mov
out
mov
or
cmp
xor
lock
pop
lret
aaa
repnz
out
sbb
test
scas
or
repz
ljmp
in
or
les
mov
adc
adc
sub
and
repnz
sbb
sbb
cmc
xor
sarb
aaa
mov
or
mov
cmc
lcall
mov
mov
pop
cltd
cmp
ss
push
pop
cmp
mov
dec
scas
xor
rorl
sbb
popa
fisttpl
push
xor
int3
xor
mov
js
clc
pushf
js
loop
repnz
sahf
ds
into
ljmp
xor
xchg
mov
gs
adc
inc
cwtl
mov
or
fistpll
out
or
test
sub
in
insl
push
and
sbb
cmp
and
push
mov
mov
sub
or
jg
xchg
repnz
mov
cmp
push
roll
aam
ss
mov
mov
ljmp
add
jnp
into
fs
ficompl
sbb
push
adc
popf
push
lods
scas
mov
xor
mov
xchg
jp
test
jbe
fst
stos
ljmp
ss
dec
lahf
ljmp
push
dec
out
arpl
xor
and
or
sahf
jnp
fidivrl
and
sahf
mov
ljmp
mov
inc
xchg
fcoms
lahf
xchg
sarb
hlt
push
dec
std
push
sbb
mov
fisubl
cmc
sahf
mov
inc
int3
ret
outsl
scas
outsl
adc
clc
xchg
sub
sbb
or
jl
pop
or
add
pushf
stos
or
cs
lret
xchg
fdivr
js
test
sbb
lahf
pop
xlat
push
add
sbb
jb
outsb
js
mov
jnp
xchg
testl
ret
mov
loopne
sbb
xchg
cs
xchg
add
sbb
outsl
cmpsl
mov
inc
mov
jb
mov
sbbl
test
mov
adc
repnz
sbb
jnp
adc
fwait
jmp
loopne
fwait
jnp
fidivl
inc
sbb
jg
int3
inc
xor
adc
clc
fadds
shrb
cli
out
add
inc
sub
add
ljmp
lret
fisubl
pusha
fs
push
cmp
shll
mov
mov
stos
fidivl
or
inc
and
xchg
ljmp
cs
xchg
test
adc
lcall
ljmp
inc
mov
lahf
rcrl
adc
xchg
dec
xchg
add
pushf
pop
ret
adc
mov
sbb
sarb
sub
push
mov
fidivs
adc
aad
pop
outsl
adc
add
cmp
push
xchg
mov
cmpsl
cld
inc
adc
lret
sub
jg
lds
fistpll
imulb
ss
xchg
add
lahf
mov
ds
lcall
mov
mov
sbb
xor
xchg
jmp
adc
jp
mov
nop
sub
mov
or
mov
div
cmp
cltd
ljmp
fwait
xor
mov
out
lcall
js
ljmp
pop
jnp
ds
test
adc
inc
nop
int
rcr
inc
xor
adc
jg
aas
scas
dec
aam
pushf
cld
clc
loope
repz
pop
or
and
insl
mov
mov
es
cmpsb
mov
jg
inc
mov
jecxz
mov
add
hlt
push
cmp
lods
data16
out
xor
in
iret
aam
inc
mov
push
mov
add
cmp
push
mov
aam
mov
sub
scas
xchg
rorb
hlt
mov
ds
aad
push
dec
lods
mov
sub
inc
call
in
or
fwait
dec
add
mov
add
inc
ljmp
sbb
cs
sbb
iret
repnz
shlb
fcom
cmp
hlt
lret
jb
dec
xchg
test
cmpb
mov
repnz
add
mov
les
fldcw
lahf
js
lods
push
cwtl
std
ljmp
or
mov
rol
mov
into
sbb
lods
add
fisttps
add
lret
mov
sub
call
xor
inc
mov
or
dec
ja
xchg
push
insb
mov
ret
cmpb
xor
ds
push
movsl
xor
in
addl
testl
mov
mov
ret
bound
pop
dec
int3
add
sbb
mov
aam
popf
xchg
add
shrl
and
sahf
fisubrl
cs
xor
xchg
ss
ret
out
mov
daa
insb
loop
lcall
stos
jp
cmp
aam
push
mov
adc
lcall
shlb
xor
shrb
cld
sbb
movsb
ss
xchg
cmp
scas
mov
outsb
pop
mov
fcoms
cmp
fsubr
jne
add
stos
int3
adc
mov
pop
mov
lahf
lods
shr
ret
sub
das
push
fimull
fidivrl
sbb
mov
pop
mov
add
fdivrl
jp
ss
mov
add
push
stos
mov
repz
jle
xor
or
idiv
rcll
ret
or
pop
pop
cmp
dec
or
cli
add
in
in
inc
jp
jbe
pop
out
ficoms
bound
push
out
leave
sahf
divb
rorb
adc
inc
repnz
orb
mov
sbb
sbb
add
xchg
pop
out
fcoml
repnz
enter
int3
xor
mov
lock
rolb
sbb
cmp
stos
in
xlat
or
fcoms
fcoml
sbbb
fiaddl
jb
daa
in
pop
outsb
sub
pop
add
fucomip
push
das
lahf
push
mov
xor
push
out
xlat
add
cwtl
mov
ret
lods
mov
hlt
sbb
rorb
xor
out
aam
mov
ss
or
daa
adc
scas
mov
fmull
cwtl
ret
or
test
xchg
xchg
xor
cmp
xchg
or
stc
fs
pop
inc
mov
pop
jbe
fmull
mull
inc
repnz
jo
iret
mov
addr16
fdivl
pop
cltd
add
mov
and
jmp
sbb
stos
lret
das
dec
aas
gs
nop
in
in
lcall
rcrb
adc
sarb
jnp
cltd
aas
or
addr16
ss
ret
mov
movsb
cwtl
mov
inc
xlat
data16
adc
jecxz
stos
sbb
and
dec
and
les
jo
ret
xchg
cld
negb
in
adc
cmpsb
push
inc
aam
scas
lahf
gs
rcl
imul
ds
adc
push
and
mov
cmp
or
loopne
push
adc
sbb
lods
push
push
push
out
sbb
push
dec
punpckldq
stos
xchg
add
mov
addr16
add
sbb
adc
popa
mov
mov
xchg
clc
cmp
adc
xor
rorb
fisttpl
mov
divl
xchg
sub
add
xchg
ficomps
les
add
push
iret
mov
mov
push
popa
sbb
xchg
hlt
rcr
mov
sahf
call
rclb
push
mov
dec
jge
inc
or
call
xor
or
sub
mov
test
dec
push
flds
or
and
rcl
neg
inc
data16
in
mov
adc
jg
sarl
mov
repnz
test
push
pop
cli
stos
or
mov
orb
adc
mov
jb
push
sbb
or
push
mov
mov
cmp
cmp
daa
push
scas
fidivs
sbb
dec
mov
out
imul
pusha
mov
mov
xchg
test
cltd
push
sub
sbb
mov
push
into
cmpb
sbb
cmp
or
outsl
cld
shl
outsb
add
mov
popa
inc
mov
push
aad
outsb
inc
inc
xchg
movsb
sbb
pop
es
lret
out
fcomps
xor
subl
jg
or
cmp
out
mov
or
insl
jg
scas
sti
test
imul
pop
jp
or
cltd
dec
mov
cmp
push
cmp
ds
in
mov
aas
push
cmp
adc
imul
ret
rolb
enter
push
cld
ds
fldcw
mul
mov
mov
orb
mov
fcoml
adc
inc
cmp
outsb
scas
clc
mov
cmp
push
stos
cld
es
rolb
repnz
addr16
mov
push
xor
sub
sub
popa
mov
cmp
xor
fbld
mov
mov
ret
pop
in
add
out
fisttps
rorb
mov
xor
fcmovu
sahf
push
imul
mov
faddl
fld
xchg
pop
clc
mov
lods
mov
rsm
and
lea
fldl
imul
add
push
les
fwait
ja
scas
out
mov
xchg
mov
in
xor
fcomp
adc
lods
cld
rcrb
ss
mov
loopne
xor
insb
or
jg
or
ds
mov
mov
fwait
pop
lods
int3
ljmp
mov
or
push
add
sub
mov
push
pop
mov
test
in
stos
xchg
sub
into
rorb
xlat
popf
jae
arpl
out
imul
ret
xchg
dec
sbb
enter
inc
clc
push
mov
lock
push
enter
sbb
ret
mov
mov
jae
add
cwtl
fmuls
divb
sbb
int3
adc
mov
repnz
sahf
cld
dec
sbb
imulb
xor
cmp
fmul
int3
or
hlt
insl
mov
out
pop
out
sbb
inc
fimull
in
dec
jb
outsb
jb
jg
jnp
xor
push
add
mov
push
repz
adc
push
orb
push
stos
sbb
sbb
inc
xor
push
jp
clc
add
int3
jne
shrl
fdivrl
clc
or
pushf
dec
rclb
xor
adc
addr16
inc
or
cmp
js
mov
aam
mov
mov
fisubrl
jl
pop
sbb
cli
xchg
aas
push
ret
les
cmp
dec
dec
stc
addr16
hlt
jp
ss
dec
mov
ljmp
inc
dec
sub
adc
cmp
cli
jns
fmul
jb
bound
int3
lds
loop
mov
rclb
stos
xor
xlat
mov
outsl
repnz
addr16
repnz
inc
mov
lret
stc
push
in
or
cmp
dec
jbe
loope
mov
jnp
mov
and
aaa
addr16
add
mulb
imul
aaa
push
out
ficoms
xor
lret
in
mov
xor
cs
or
aas
rorb
dec
andb
out
repnz
fisubrl
cli
test
sbb
clc
mov
push
mov
fmull
out
mov
shr
xor
push
jl
xor
pusha
in
mov
mov
js
and
cmp
lret
imul
dec
scas
or
ss
ficompl
lods
xor
sub
mov
sub
faddl
lods
adc
fcmovnbe
jg
scas
mov
xor
xchg
jle
daa
add
fs
lock
xchg
fisubrl
fbld
mov
mov
cmp
or
hlt
sbb
shrb
clc
out
fcomps
mov
push
movb
hlt
jp
bound
or
rcrb
lea
jnp
xchg
or
ror
aam
cltd
ljmp
mov
lock
mov
ljmp
sbb
sbb
aam
lcall
ds
ss
push
add
cwtl
or
enter
pushw
adc
jbe
fcmovbe
xchg
push
add
clc
inc
push
clc
insb
dec
mov
sbb
repz
mov
mov
movsl
mov
push
xchg
lock
dec
xchg
fdivrs
inc
pop
out
sbb
sub
rcrb
xorb
mov
sbb
jle
in
fisubs
push
mov
stos
xor
fucomi
test
mov
lahf
mov
out
hlt
mov
aam
cmpsb
push
pop
loopne
int
pop
cmp
arpl
stos
mov
adc
lret
hlt
fmuls
out
mov
dec
or
cmp
mov
adc
xor
add
mov
sar
mov
cmp
ret
add
mov
inc
or
call
jp
mov
adcb
jo
ljmp
lea
xchg
imul
or
mov
aam
mov
pop
and
mov
rol
xchg
ss
sar
js
jp
orb
ret
ret
dec
shlb
lock
inc
sub
push
ror
push
jmp
dec
hlt
push
pop
and
stos
mov
mov
movsb
sub
lods
mov
mov
jp
repnz
mul
cli
lret
sub
inc
aas
imull
sahf
sbb
xor
push
push
push
aad
cmpsl
xchg
or
notl
xchg
and
mov
mov
aas
inc
lods
add
fdiv
xor
add
xchg
sbb
or
aam
xchg
dec
stos
xchg
sbb
push
rorb
fimull
in
addr16
sbb
jne
cmp
push
ds
int
enter
push
mov
dec
or
js
mov
dec
pop
loopne
or
add
cmpsb
mov
and
push
adc
push
mov
or
outsl
test
dec
push
test
fcmovb
lods
into
clc
aas
imul
and
mov
leave
mov
lret
sub
subb
test
stos
and
out
mov
out
adc
ds
sub
mov
fdivrs
fcoml
into
out
sub
adc
cmp
mov
mov
fmuls
sbb
pop
xchg
or
into
adc
fnstenv
das
push
mov
cli
add
ljmp
js
mov
inc
add
test
add
les
movsl
ds
xor
dec
loop
or
inc
push
mov
add
and
push
mov
mov
inc
ja,pt
add
pusha
rol
mov
movsb
ficompl
dec
cmp
fs
sbbl
mov
scas
xchg
push
adc
dec
sbb
mov
out
test
or
xchg
into
cmp
ret
dec
xor
xchg
faddl
pop
inc
notb
mov
js
stos
jb
xor
bound
sbb
pop
jg
adc
sub
and
push
push
cli
pop
pop
xor
out
xor
adc
add
sub
scas
inc
sub
pushf
xor
fidivrs
out
aam
mov
xchg
mov
or
leave
in
cmp
mov
scas
lret
sarl
ret
cmp
mov
std
int
dec
sub
sbb
incb
les
and
adc
push
cmp
hlt
pop
leave
clc
push
cld
mov
add
pop
mov
ret
stos
fsubrl
add
sbb
fbstp
xor
out
inc
gs
push
adc
ss
mov
mull
dec
mov
xor
leave
or
out
push
scas
dec
outsb
add
push
add
sbb
or
xor
dec
dec
repnz
cs
mov
adc
cmp
xor
mov
jnp
sbb
fmull
cld
mov
ret
mov
sub
add
push
cli
mov
mov
sub
add
shr
rorb
cli
lods
cmp
pop
addl
sahf
lahf
cltd
repnz
sar
dec
or
out
outsl
ja
add
fwait
jecxz
pop
xor
dec
stc
jp
xchg
fnstsw
out
xchg
adc
xchg
test
sbb
dec
xor
push
mov
insb
cmp
lock
shll
fwait
lods
lret
mov
aam
and
mov
push
mov
out
mov
cwtl
inc
cmc
dec
adc
mov
add
xlat
lahf
stos
jb
fcmovu
xorb
lea
mov
iret
sub
test
lcall
fadds
lods
icebp
mov
lahf
xor
ja
pop
js
pop
cmp
cmp
ds
fidivrl
imul
mov
out
push
or
testl
lret
inc
xchg
dec
adc
out
lods
das
inc
cmp
mov
xlat
ljmp
dec
lcall
mov
mov
dec
ret
and
mov
out
movb
fisubs
out
mov
cld
xchg
xchg
les
out
dec
lods
mov
pop
shrb
lret
mov
mov
or
cld
jp
aaa
xchg
shlb
rolb
arpl
lcall
dec
ss
imul
add
pop
jmp
add
push
gs
sub
pushf
into
or
mov
cmp
sbb
gs
out
add
push
push
cld
jno
ja
addr16
adc
add
lea
push
js
inc
lcall
mov
xor
sub
out
cmc
mov
jnp
xchg
out
popf
push
ljmp
mov
aaa
rcrb
mov
rolb
movb
shl
clc
mov
mov
pop
add
xchg
imul
xor
divl
jo
nop
add
fwait
mov
mov
mov
pop
cltd
fcoml
inc
scas
mov
mov
ljmp
push
int3
cs
inc
divb
jp
mov
out
movsb
add
xor
imull
dec
cmp
adc
pop
inc
les
or
jp
fidivrl
fwait
shlb
sbb
es
pop
jbe
xor
punpcklbw
mov
in
aam
sub
mov
dec
push
ds
jb
jp
pusha
mov
cmp
mov
into
mov
jg
popa
sbb
lcall
lahf
inc
mov
not
push
or
dec
jp
data16
mov
mov
push
push
das
pop
jg
out
adc
mov
jge
dec
mov
mov
enter
into
lods
jl
or
adc
push
mov
in
mov
out
xchg
mov
pop
xchg
push
mov
push
into
sbb
fsubr
fs
ret
push
push
adc
xchg
ljmp
lods
cli
mov
pop
fisttpl
mov
push
cmp
into
fdivl
popf
inc
add
pop
mov
add
cwtl
out
adc
mov
clc
mov
int3
xchg
aam
into
stos
mov
stc
cmp
repnz
jg
jae
mov
or
cwtl
out
mov
ret
adc
sbb
pop
movsb
ficoml
sbb
fdivrl
insl
jne
scas
push
sub
pop
and
shrb
je
lock
add
pop
mov
xchg
adc
rorb
addb
jae
call
aad
jmp
or
xor
adc
in
sbb
pop
inc
adc
clc
pop
jl
into
cmpsb
stos
push
div
lret
cmp
mov
fildll
jb
mov
xor
sub
bound
dec
add
cmp
mov
mov
outsb
ja
jecxz
sbb
in
inc
or
fsubrl
jp
ret
aaa
bound
dec
ficompl
push
adc
das
pushf
xor
push
imulb
jae
arpl
adc
dec
or
out
ret
clc
out
xor
mov
lahf
or
mov
mov
add
fadds
mov
mov
ss
lcall
sbb
aam
fldl
adc
xchg
sbb
cmp
lock
fdivs
or
mov
mov
push
imull
loope
int3
addr16
ret
sub
nop
or
fwait
fwait
repnz
scas
or
fdivr
jbe
cmpsb
mov
add
pop
mov
cmp
mov
js
mov
or
push
xchg
sahf
ret
sarb
int3
xor
cli
fdivs
lcall
loop
xor
dec
cmp
mov
xchg
mov
in
dec
mov
xor
int
scas
sbb
xchg
fs
stos
dec
add
mov
cmp
add
push
pop
push
mov
xor
popf
add
out
cli
mov
sbb
add
push
pop
std
push
sbb
negl
mov
adc
lret
and
dec
mov
sub
sub
dec
out
cmp
cmp
scas
cmp
addr16
sub
xchg
aas
in
or
or
divb
sbb
push
sub
cmp
adc
adc
fidivrl
mov
lods
sbb
shll
sub
jnp
push
add
cmp
fisubs
setl
repnz
lret
sub
or
test
iret
cmp
xor
pop
mov
push
nop
fstp
add
jle
js
xchg
stos
mov
xchg
adc
and
test
add
xor
xlat
sbb
mov
mov
faddl
cli
ljmp
pop
mov
roll
adc
iret
fdivrs
ficomps
adc
pop
aam
mov
adc
xchg
mov
lret
xchg
adc
dec
xor
mov
pop
xchg
add
add
mov
imul
push
push
jne
cmp
es
lret
mov
or
into
jae
cli
mov
ret
xchg
pusha
pop
push
sbb
mov
cli
sarb
xchg
mov
sbb
or
movsl
cltd
fdiv
mov
pop
lods
fs
xchg
mov
cmpb
fcmovb
aam
pop
add
inc
lea
stc
dec
xor
frstor
idivl
pusha
mov
out
adcb
arpl
or
out
pop
cmc
cmp
lock
mov
fimull
fsubrl
push
pop
sbb
push
sbb
jnp
ljmp
sub
inc
outsb
nop
dec
push
add
jnp
mov
push
pop
pop
cltd
or
enter
adc
fistl
pop
push
cmp
mov
or
mov
xor
scas
xorl
fstpt
or
movsb
sahf
out
cli
fcmovbe
out
cmp
fdivs
stos
lret
les
pop
loop
jp
cmpsb
in
push
mov
mov
or
dec
xor
int3
mov
sbb
push
push
and
push
push
pusha
sbb
lods
pushf
arpl
mov
inc
mov
and
cmp
cmp
out
xchg
lahf
push
sar
testb
mov
and
mov
cwtl
mov
ss
pop
sbb
mov
mov
leave
fsincos
jbe,pt
ret
outsb
scas
add
lock
xor
pop
ret
mov
mov
mov
out
or
hlt
sbb
mov
push
fucomi
xchg
mov
scas
loopne
xchg
enter
daa
adc
or
andl
aam
adc
inc
ds
out
repnz
and
mov
jb
add
jp
das
mov
or
adc
or
addr16
ret
out
and
movb
js
adc
cmp
call
insb
xorb
ja
xchg
ret
xchg
adc
push
sbbl
cmp
ret
mov
cmp
mov
int
scas
sub
rorl
lods
mov
sbb
xchg
daa
xchg
push
cltd
ljmp
and
cmc
inc
adc
pop
push
int3
xor
jg
mov
nop
ds
insb
pushf
lahf
sbb
sbb
mov
push
sub
call
xlat
fildl
cli
add
fdivrl
dec
js,pt
bound
or
jb
mov
lods
add
repnz
push
cmp
push
ljmp
sub
mov
call
cmp
dec
cmpl
or
xor
fcompl
cmovs
repnz
mov
cmp
rcr
cmp
hlt
inc
xchg
push
ret
sbb
clc
out
push
or
inc
xor
add
add
les
addr16
cmpsb
aas
mov
in
scas
popa
add
sub
bnd
pushf
xor
lock
push
pop
fwait
in
mov
cmp
and
enter
cld
out
mov
outsl
adc
adc
fsubr
ljmp
adc
fisubl
sbb
jg
ss
cmpsb
cmp
clc
cs
ret
pop
lea
ds
mov
shr
push
leave
pop
cmp
sbb
in
xchg
fs
rolb
jnp
push
repz
sarb
ds
xor
repnz
fisubrl
rorb
adc
enter
pop
sti
cli
push
rcl
mov
jp
xor
cmp
push
repnz
cmp
out
mov
cmpsl
movsb
scas
inc
jne
push
cs
or
cmp
mov
pop
cltd
cmpsl
mov
clc
sub
cmp
xchg
bound
fiadds
sbbb
aad
ror
jp
out
mov
lods
jbe
leave
pop
int
ja
push
lods
out
pushf
pop
cli
ror
or
mov
outsl
xchg
flds
lds
ret
lahf
cli
xor
fisubrl
loope
inc
fwait
mov
jbe
mov
scas
adc
mov
xchg
xor
jg
jb
mov
jp
repnz
cmc
or
cli
mull
faddl
aaa
add
or
mov
cwtl
arpl
add
fdivrs
add
cmp
add
stos
cli
loopne
call
std
stos
jbe
shlb
mov
roll
pop
dec
xor
aam
gs
mov
cs
cmp
pop
lret
pusha
push
dec
ljmp
cmpsl
sub
cmpsl
bts
or
lret
push
flds
mov
mov
lds
imul
sahf
sub
loopne
sbb
dec
push
mov
aas
aam
pop
rclb
rcrb
mov
into
clc
lods
add
xor
cld
nop
repnz
add
mov
cmp
shlb
aas
cwtl
out
adc
xchg
xor
push
stos
add
fildll
mov
cld
sbb
scas
arpl
sar
lret
mov
testb
push
mov
sub
andl
adc
out
mov
nop
in
rolb
cmp
stos
xor
ss
xor
jne
and
lret
ret
aas
mov
cmp
push
pop
dec
lret
scas
sbb
lahf
es
push
out
mov
aam
pop
or
jne
addb
ret
bound
lods
stos
cwtl
xlat
ds
add
xor
outsl
iret
push
aam
arpl
enter
aas
jge
cmp
popf
in
or
mov
sahf
clc
adc
or
in
fs
pop
enter
or
or
mov
negl
fsubs
sub
int3
mov
sub
repnz
inc
in
mov
jp
test
ret
cmp
dec
stos
clc
mov
mov
adc
pusha
repnz
or
pop
jno
out
mov
xor
sub
clc
pop
bound
adc
xor
rcr
filds
rcr
clc
sub
sbbl
test
push
arpl
sti
fadds
dec
pop
pop
push
lret
mov
push
enter
ljmp
sub
jne
mov
fdivrs
ret
jg
and
loopne
ffree
inc
dec
push
push
scas
mov
sbb
cmpsl
ljmp
adc
das
sbbl
ret
ljmp
xchg
les
enter
lahf
clc
aam
cld
push
dec
adc
mov
rorb
pop
movsl
or
imul
push
mov
jo
jle
std
sbb
out
int3
ror
push
xor
jb
sub
jno
dec
jp
or
aas
cli
test
jo
fdivs
mov
scas
push
mov
ss
gs
imul
fs
sbb
xchg
lods
imulb
add
frstor
addr16
sub
cmp
fdivrp
cmp
xor
mov
testb
mov
popa
push
xchg
in
mov
push
and
mulb
push
fdivl
mov
repz
mov
and
or
sbb
xor
fdivr
data16
cmc
xchg
movsb
negb
fwait
add
addl
into
sbb
cli
mov
and
push
enter
sarb
movsb
out
xor
pop
insl
mov
push
cmp
mov
fisubl
push
sub
push
outsl
idivb
mov
aam
mov
aam
adc
stos
cmp
mov
pop
push
lock
movsl
les
xlat
mov
xchg
cmp
stc
push
mov
xor
in
cld
ja
cmc
inc
mov
jne
mov
sbb
push
push
scas
jmp
fcmovb
mov
mov
hlt
das
gs
cmp
pushf
je
add
std
mov
adc
mov
das
ja
imul
loopne
or
fdiv
push
mov
clc
pop
pop
xor
jecxz
mov
or
or
cmp
jg
movsl
or
pushf
mov
cmp
cltd
leave
imul
or
out
fsubrl
repnz
cli
or
mov
push
sti
clc
mov
fmul
push
mov
fwait
xor
add
dec
stos
lahf
mov
int
adc
dec
cli
in
mov
sbb
jb
mov
mov
mov
mov
cld
ficoms
mov
push
pop
divb
lock
inc
inc
fisubl
inc
xchg
jp
sub
rorb
int3
scas
mov
addr16
in
push
sbb
sub
mov
out
outsl
push
xor
push
sbb
cltd
dec
xchg
adc
out
xchg
push
popf
or
xor
add
push
test
cld
les
push
mov
pop
xchg
sbb
notb
jae
out
sub
das
js
mov
pop
add
sbb
sbb
icebp
pushf
in
mov
pushf
inc
hlt
and
ss
push
out
stos
ficoms
and
popw
into
test
sbb
mov
dec
push
jnp
mov
push
addr16
cmp
cmp
aad
mov
push
add
lret
push
mov
xchg
loop
scas
fwait
mov
popf
popa
sbb
adc
loop
fcomp
lock
cmp
out
into
or
push
mov
mov
pushf
lret
ljmp
cmp
enter
cmpsl
sbb
repnz
cwtl
jecxz
addb
xor
popf
in
sarb
sub
push
shrb
or
stos
fsubrl
mov
or
fs
mov
lock
adc
scas
mov
fdivrl
aam
xor
push
mov
adc
cmp
mov
orb
cmp
lea
fildll
ds
out
sbb
jp
ljmp
sbb
mul
fucom
mov
push
jb
ss
mov
stos
adc
fwait
daa
movsb
pop
stos
cmp
push
mov
int
notl
push
pop
ss
aam
or
idivb
aas
or
mov
xchg
arpl
test
dec
cli
into
inc
sbb
mov
xor
rcrb
and
repnz
loopne
pop
ljmp
and
test
in
mov
aas
fcomps
add
ret
mov
lret
out
jo,pt
mov
xor
out
inc
nop
sbb
adc
xlat
sub
shll
ja
cli
jae,pn
js
bound
sub
stos
fdivl
mov
enter
lcall
iret
cld
mov
addr16
adc
inc
les
pop
mov
fsubrs
mov
mov
adc
fsubr
sbb
push
cld
pop
out
jl
adc
or
cli
iret
xchg
mov
dec
test
xor
adc
into
mov
decb
fdivl
xchg
pop
xchg
pusha
sbb
mov
clc
or
hlt
and
jl
rol
gs
mov
pop
es
push
gs
scas
cmpsl
out
add
mov
inc
lret
or
or
out
push
add
mov
pushf
push
mov
sub
hlt
fcoml
outsl
sbb
mov
ss
mov
lock
nop
xchg
add
jbe
sub
cld
push
mov
push
bnd
stc
adc
iret
lock
lret
sahf
ljmp
or
pavgb
lahf
ret
lahf
notb
shrb
add
pop
in
in
add
aas
out
mov
pop
out
lock
out
out
inc
mov
scas
xor
sbb
lods
outsl
scas
dec
cmp
pop
mov
mov
lret
mov
push
ss
cmp
adc
xor
fisttps
clc
popf
jle
add
fstp
idivb
jb,pt
mov
mov
test
inc
sbb
into
hlt
xlat
rol
mov
andb
divb
rcl
jg
stc
repz
mov
push
cmp
jo
add
sti
sbb
jbe
sbb
lret
xor
xor
adc
aaa
sub
incb
mov
mov
mov
adc
sbb
stos
sbb
aas
lods
clc
add
adc
mov
out
sub
xor
mov
push
push
test
lods
in
mov
mov
sub
mov
js
andb
movsl
and
mov
push
rclb
or
enter
xor
mov
jecxz
or
mov
push
nop
add
into
mov
xor
cmp
jecxz
mov
shl
out
std
cmp
scas
out
nop
mov
push
sbb
dec
rcrb
mov
sub
rcrb
add
jo
mov
shll
cld
add
clc
les
subl
xchg
lret
ret
push
lock
add
mov
out
lods
js
sbb
mov
or
or
in
mov
sbb
out
mov
mov
ficoms
push
dec
cmp
adc
int3
mov
sbb
out
push
movsl
dec
sarl
pop
testl
cli
push
mov
adc
fadds
cmp
lods
clc
aas
and
sbb
lds
mov
pusha
xchg
sub
push
adc
pop
xor
mov
sub
ret
sbb
push
incb
mov
out
inc
jns
add
push
std
es
ret
enter
or
test
cmp
fs
fisubrl
dec
rcrl
mov
pop
push
lods
mov
hlt
or
mov
cli
cmp
mov
mov
sbbl
mov
sbb
mov
inc
mov
fcoms
out
cmp
and
cmp
cmp
xor
mov
enter
mov
sbb
movsb
pop
dec
push
into
mov
jmp
adc
sbbb
pushf
sbbb
int3
mov
mov
push
and
push
enter
out
sbb
mov
add
adc
push
push
cmp
xorb
jp
popa
or
jo,pn
mov
mov
fisubrl
lret
shlb
scas
and
mov
incb
cltd
div
xor
push
decl
sbb
cs
f2xm1
cld
adc
pop
pop
fidivrs
dec
xorb
shrb
in
mov
jl
or
xchg
fidivl
test
mov
ss
imul
inc
hlt
mov
cmp
clc
xchg
movsl
fadds
xchg
int3
repnz
xchg
adc
mov
or
hlt
fsubr
into
cmp
sub
push
xor
fs
ss
cmp
adc
loop
push
adc
aam
mov
push
adc
mov
loop,pt
inc
sbb
ret
aam
xor
xor
cmp
iret
cmp
xor
lods
lods
jg
jg
aas
sbb
cli
pop
sub
jp
xor
insl
scas
inc
ss
ds
dec
mov
hlt
cli
add
or
scas
jl
scas
adc
mov
add
mov
xor
adcb
xchg
mov
scas
ds
or
mov
sub
inc
and
cmp
addr16
xor
adcb
ljmp
es
push
or
loop,pn
cmp
sbb
pop
xchg
es
aam
or
das
mov
andb
enter
add
or
add
fmull
jae
addr16
gs
scas
add
jb
fs
xor
loop
ror
push
adc
loopne
fmul
stos
ficompl
in
and
in
scas
add
lcall
clc
sbb
loopne
out
cld
imulb
mov
push
and
jns
inc
mov
divb
cmpsb
orb
ficompl
mov
cmp
outsl
pop
inc
out
dec
hlt
jbe
mov
or
cs
mov
fsts
and
out
xchg
sbb
hlt
pop
sub
out
mov
int3
mov
in
push
pushl
scas
idiv
lds
dec
xor
addl
sbbb
clc
aam
bound
inc
es
in
cmp
sub
jo
add
pushf
pop
scas
or
lcall
icebp
pop
rcl
jg
add
cmp
pop
inc
pop
xchg
or
mulb
mov
sub
sbb
shrb
clc
fsubl
pusha
stc
scas
arpl
int3
jnp
mov
mull
cmp
sbb
sbb
ficomps
mov
xor
clc
dec
adc
pop
or
jp
pop
jp
pop
pop
or
out
push
jae
xor
shrb
std
out
out
arpl
aam
push
adc
xchg
cli
adc
push
daa
push
mov
in
aas
and
cli
sbb
cwtl
hlt
push
xchg
sub
fisubrs
inc
sbb
adc
ret
adc
sbb
enter
inc
sbb
int3
adc
in
popf
mov
ja
scas
add
ret
fs
mov
lahf
xor
mov
hlt
enter
pop
rcl
sbb
jp
bound
mov
lcall
xlat
into
nop
int3
add
push
ljmp
mov
lock
cmp
in
mov
ljmp
or
fadd
push
mov
lock
outsl
adc
fwait
cmp
out
cld
sbb
fldcw
int3
jne
pop
jecxz
xchg
push
pop
test
xchg
add
dec
aam
push
arpl
inc
sahf
shl
fimull
mov
lret
ljmp
xor
sbb
sbb
inc
loope
jb
aam
sub
adcb
icebp
xchg
sbb
add
jnp
cmp
repnz
arpl
adc
ret
jp
js
movl
outsl
rol
push
pushf
movb
mov
ss
jle
imul
push
adc
fmul
pusha
xlat
iret
ja
cmc
push
out
pop
insb
stos
adc
cmp
fistpl
sub
dec
adcb
adc
pop
sub
fisubrl
or
adc
lret
int3
fildll
ljmp
push
loop
mov
in
scas
pop
cwtl
dec
lock
add
inc
lahf
xchg
add
and
xor
pusha
clc
mov
lock
stos
addr16
femms
sbb
cmpb
push
lret
push
ja
or
adc
mov
adc
imul
adc
aam
jp
bound
jno
adc
adc
mov
push
int3
xor
or
enter
mov
add
scas
mov
adc
popf
mov
ss
cmp
mov
mov
adc
jb
pusha
adc
xor
clc
mov
push
imul
ret
std
lahf
neg
shlb
addb
mov
push
rclb
or
fcoml
cmp
enter
ret
mov
and
movsb
push
stc
lret
jbe
sub
mov
adcb
jnp
and
mov
shlb
jb
lods
jae
scas
sahf
xor
clc
int3
shlb
aad
dec
ss
cs
sbb
fsub
fistl
ds
pop
mov
in
mov
loope
cmpl
xor
jbe
loopne
lahf
lahf
lock
adc
daa
sub
jne
mov
out
bound
cmp
push
xchg
or
imul
push
xor
cli
mov
popf
and
adc
jle
push
test
push
and
les
inc
add
inc
pushf
cmp
in
out
sar
sbb
mov
pop
fcmove
out
inc
mov
inc
int3
jmp
stos
lods
xor
stos
adc
fmul
push
popf
add
repnz
mov
xor
les
sbb
and
mov
aam
roll
mov
cli
cmp
bound
jl
push
scas
cmc
mov
cmpsl
add
ret
in
std
cmp
add
testl
and
in
stos
sahf
sub
mov
clc
cmp
push
mov
cmp
xor
xchg
mov
jb
ds
cmpsb
mov
lret
out
dec
enter
or
aam
mov
mov
fcompl
addr16
add
fsubs
shlb
cld
sbb
push
adc
repz
movsl
xor
les
addr16
mov
test
push
addr16
ds
adc
inc
in
int3
repnz
inc
testb
jns
jo
inc
mov
lock
mov
cmp
faddp
into
mov
adc
ds
adc
out
mov
fidivl
sbb
push
xchg
mov
sahf
addr16
lods
sub
addb
cmp
int3
negb
outsb
sbbl
mov
fldt
xor
or
cli
jb,pn
jp
fs
repz
bound
xor
mov
stos
lock
xor
shlb
push
scas
shr
lcall
aas
sub
mov
jns
jbe
cmpsb
sbb
lahf
xor
jae
jp
adcb
jb
ret
jp
js
inc
sahf
mov
push
cmp
outsl
pop
fimull
into
push
shr
lret
aas
fs
xchg
xor
jae
inc
lcall
enter
scas
ljmp
mov
xchg
stos
sbb
out
nop
xor
add
fldcw
fmul
ljmp
in
cmp
insb
cmpsl
lret
stos
jg
ljmp
jecxz
popf
outsl
add
adc
push
in
dec
jmp
lods
sti
pop
jo
add
fxch
cmp
sbb
adc
shll
xchg
cmp
fwait
xor
jns
or
dec
aam
mov
stos
clc
mulb
or
fsubs
push
or
scas
mov
push
lret
push
push
insb
fcmove
stos
push
arpl
or
and
data16
hlt
jo
hlt
lret
ds
lods
ss
mov
hlt
idivb
sbb
into
sub
xchg
fs
pushl
and
mov
jo
mov
sbb
hlt
das
popa
lret
cmp
sahf
push
fidivl
cmp
les
arpl
cwtl
int3
cmc
inc
cwtl
stc
push
mov
lahf
and
add
out
adc
int3
out
mov
ljmp
fmull
into
dec
js
aas
aas
mov
dec
xor
rclb
stos
repnz
sub
daa
popf
jnp
int
pop
or
lods
add
scas
stos
ret
clc
cmp
sbbl
adc
mov
inc
sbb
orb
sub
push
into
pop
and
fsubrs
sbb
enter
out
loopne
mov
push
fcmovb
stos
hlt
pushf
ljmp
push
gs
daa
cmp
in
cmpsl
enter
imul
adc
cmpsb
inc
mov
sbb
fiaddl
subb
and
idiv
imul
shlb
dec
sahf
mov
add
fdivr
adc
mov
xor
xor
sub
jg
clc
gs
fwait
loope
or
xchg
cmp
jbe
mov
mov
rclb
addl
js
mov
inc
mov
ss
push
adc
sub
cld
xchg
cmpsl
enter
loope
push
rcl
push
fdivl
mov
sbb
fstpt
mov
pop
jp
cmpb
mov
xor
xchg
stos
xor
pop
lock
imulb
call
aas
mov
scas
cmovs
mov
cmp
rorl
or
mov
cmp
mov
in
faddl
lea
jnp
inc
mov
scas
insb
lods
push
mov
pop
fdivrl
idivb
pusha
cmp
sbb
pop
pop
or
jb
hlt
mov
jge
jno
lcall
std
shl
dec
pusha
pop
jecxz
sub
rcrb
ret
or
popf
cld
mov
or
ds
sub
cmp
mov
nop
lret
rorb
add
les
xor
das
rcl
pop
mov
subl
mov
adc
std
inc
mov
push
xorb
fwait
jno
mov
add
imul
leave
adc
cmp
into
pop
mov
adc
adc
fwait
xchg
cli
insl
loop
push
in
lret
loop
xchg
or
mov
aam
es
push
lds
orb
mov
mov
push
fcomps
cld
hlt
lahf
xor
out
adc
cmp
fcompl
fcoms
mov
fwait
aas
ljmp
cld
sbb
lock
cs
icebp
pop
lret
aam
loope
push
stos
push
sbb
sub
sub
pop
mov
aam
or
cmp
push
cmp
cmovbe
jbe
adc
sbb
into
out
fcmove
rolb
dec
cmp
add
push
sub
lret
data16
out
ljmp
clc
adc
mov
xchg
out
negl
cld
sti
mov
pop
sbb
lock
push
aas
mov
jg
add
pop
lea
xchg
addr16
stos
jp
jle
lret
loop
add
shll
or
andl
lods
out
addl
cmp
fsubrp
fisubrl
pop
or
push
cmp
fwait
cmp
sbb
ficompl
pop
add
aam
pop
jmp
mov
fnsaves
mov
mov
out
inc
jp
push
xchg
outsl
xor
fwait
mov
mov
pop
enter
aam
mov
push
sub
cmp
push
or
js
mov
movsb
mov
repnz
pusha
xor
adc
xor
add
mov
or
push
hlt
lods
outsb
mov
inc
cs
cld
mov
jns
sub
outsl
hlt
xchg
mov
xor
inc
cltd
fwait
repnz
lods
mov
jmp
push
sbb
ret
das
sub
gs
jle
outsl
or
enter
inc
inc
rclb
pop
ds
cltd
outsl
cli
sub
test
and
or
cli
cmp
mov
cmp
das
ret
popf
dec
rcl
bndldx
push
idivb
sahf
add
xor
hlt
push
pop
popf
cmp
stos
shl
sahf
jecxz
aam
or
fpatan
hlt
cwtl
out
mov
hlt
or
int3
out
mov
mov
loop
ds
inc
push
xor
fsubrl
psubd
cltd
enter
push
ds
or
inc
xor
in
lock
arpl
add
or
mov
sub
ja,pt
sub
jb
or
cmp
mov
ja
dec
lret
loopne
leave
adc
cwtl
mov
xorb
ss
lods
pop
adc
inc
pop
mov
mov
sub
sub
addr16
jle
addr16
aam
or
mov
add
stos
or
or
mov
cld
push
adc
dec
mov
and
repnz
ljmp
outsb
stos
adc
xor
dec
jge
test
push
popa
lahf
out
stc
mov
scas
sbb
or
mov
icebp
jno
popf
add
sub
lret
dec
jge
rolb
jecxz
in
movsl
cmpsb
jmp
mov
pop
aam
adc
lcall
fdiv
inc
xor
xor
pop
mov
movb
mov
stos
mov
or
scas
test
jnp
push
into
ret
mov
mov
out
dec
test
mov
or
ret
aas
xchg
mov
cs
fdivrs
int
mov
das
cmpsb
mov
ficoml
sahf
inc
mov
cld
ljmp
and
stos
mov
out
ljmp
push
inc
in
int
and
adc
dec
fstl
in
or
rcrl
int3
and
sub
sarb
jae
js
cltd
lods
cld
cmp
repz
or
jp
pushf
addr16
fsubrs
dec
addr16
adcl
mov
cmpsb
sub
out
inc
or
adc
push
cmp
out
cwtl
enter
jno
mov
int
adc
cmpsl
stos
bound
push
scas
xor
fidivl
jb
jbe
leave
pushf
add
sbb
sbb
fdivrl
roll
cmpsl
mov
add
in
cmp
popf
scas
cld
mov
mov
enter
sub
lret
add
pusha
mov
cmp
adc
push
rcr
movsb
fidivrl
or
subb
mov
xor
add
fdivrl
lahf
nop
mov
into
aas
mov
cmp
adc
stos
sub
dec
jp
subb
aam
mov
popf
cmp
cli
lret
mov
lahf
mov
push
push
lock
sub
test
sti
lock
sar
test
jno
push
jbe
inc
lods
and
into
daa
mov
stos
add
and
loop
or
mov
ds
das
outsl
outsb
loop
sbb
out
sbb
jmp
addr16
mov
sub
jne
sbb
scas
negb
mov
mov
pop
mov
in
push
xlat
jg
or
jl
addr16
data16
fnsave
repz
cmpsl
or
xchg
out
lret
mov
cmp
ficompl
mov
jecxz
mov
push
dec
fadd
sbb
sbb
mov
sub
lock
xlat
fcoms
jle
xor
in
xchg
add
aas
sbb
aas
pop
loop
xchg
fisubs
cmpsb
int3
dec
aas
sbb
add
mov
out
hlt
mov
les
mov
xor
lock
cmp
addr16
int
data16
xlat
adc
aaa
cwtl
mov
mov
xor
outsb
and
mov
mov
clc
cltd
jle
cmp
adc
cwtl
sub
repnz
fisubl
ret
out
es
cmp
push
sbb
ljmp
mov
sbb
mov
out
mov
popa
mov
pop
clc
cmp
rcr
pop
ret
les
lret
inc
or
add
fcom
mov
out
cmp
push
hlt
xchg
clc
mov
shlb
mov
fimull
cmpsb
sbb
imul
mov
or
adc
xor
ljmp
mov
adcb
mov
mov
loope
mov
xor
mov
scas
in
xor
fmuls
dec
cmp
mov
add
and
mov
xor
sbb
lret
push
inc
sub
mov
sbb
xor
ljmp
mov
dec
mov
push
mov
or
xor
shrb
and
enter
incl
adc
cli
adc
movb
add
jg
and
adc
dec
push
lahf
cwtl
or
movsb
call
inc
outsl
fsubrs
popa
addl
cmp
mov
inc
add
add
push
mov
sbb
das
xor
sub
add
mov
fadd
xchg
pop
xor
cmp
adc
addr16
sarb
hlt
or
cmp
xor
test
out
lcall
or
into
inc
rcrb
int3
subl
add
pop
jne
js
pushf
mov
fdivs
cld
in
cmpb
ja
or
fisubrl
mov
cmp
addr16
sbb
mov
xor
bts
push
aam
push
mov
push
mov
inc
mov
jb
ret
push
outsl
enter
sarb
ret
cld
fsubrl
in
sbb
test
dec
gs
shll
add
out
aas
add
nop
cmp
mov
cmp
aam
xchg
test
int
pop
fidivrl
add
cmp
test
cmpsl
out
or
push
das
test
cmp
xor
arpl
push
mov
xor
sbb
jecxz
sbb
stos
cmp
xor
xlat
arpl
stos
sbb
mov
call
stos
cld
cmp
cmp
lret
sbb
adc
fdivl
pop
xor
mov
lods
aam
cmp
shlb
sub
dec
ret
lods
jb
inc
repz
loope
or
jne
and
sbb
into
shlb
cmp
dec
fiaddl
mov
negl
or
jge
jg
mov
cs
jg
arpl
lret
mov
xor
add
dec
rol
add
mov
mov
dec
cld
dec
or
repnz
sbb
sbb
inc
ror
adc
dec
shlb
inc
cld
pop
xor
sub
sbb
xor
jecxz
push
mov
sbb
lods
adc
jge
inc
cmp
jbe
shlb
mov
ja
pop
rolb
out
adc
xor
mov
mov
outsb
pop
pop
jno
mov
jno
out
loopw
sbb
jno
shlb
push
decb
stos
jns
shrb
push
shlb
mov
jno
lret
cli
and
cmpsb
lock
subl
sub
fsub
push
mov
cs
push
jns
cli
ds
xor
dec
dec
and
lahf
popf
jne
push
addr16
mov
nop
xor
jno
mov
xchg
cld
xor
ret
cmc
rcrb
aaa
push
int
test
rorb
push
jns
push
shll
adc
pop
mov
lea
mov
scas
jg
adc
jle
dec
mov
adc
cmp
fnstenv
mov
sub
pop
dec
sar
aad
mov
stos
or
lea
cmpsb
lcall
lret
loop
out
imul
jns
inc
je
sarl
movsb
test
addr16
push
and
shrl
or
inc
pop
cmp
jns
jge
aaa
pop
cli
cs
lret
call
movsl
stos
push
loope
dec
jno
inc
jns
xchg
arpl
sub
sub
aaa
imul
add
cmc
addr16
adc
sbb
imul
push
and
and
sub
addr16
out
ficoml
lret
adc
incl
jmp
mov
imull
sti
ja
sub
mov
addr16
mov
addr16
mov
xchg
push
divb
mov
xor
mov
ljmp
lret
mov
and
dec
push
shlb
ret
outsl
push
cmp
xor
push
mov
jp
pop
xchg
or
fnstsw
mov
mov
cmc
sbb
ja
or
mov
mov
xor
sbb
adc
jle
xor
leave
jmp
into
add
add
xchg
dec
sarb
push
in
dec
sti
sbb
xor
or
sbb
test
push
push
adc
sub
in
divb
dec
lods
mov
cli
or
jmp
adc
loopne
inc
push
mov
cmp
sar
push
sub
out
icebp
push
xor
fldcw
cmp
dec
sub
mov
push
into
sbbb
out
cli
cmp
pusha
jl
push
fsubrl
lock
scas
ret
add
sbb
test
mov
and
mov
mov
pop
cs
into
in
mov
dec
outsl
daa
pop
dec
sub
dec
xor
cmpsl
shlb
mov
cmp
or
andl
sbb
sub
fistpll
pusha
cmp
jecxz,pn
and
loop
nop
mov
fcomps
add
sbb
test
adc
nop
fs
frstor
push
fcomps
rorb
hlt
add
mov
insb
cld
or
aam
mov
repnz
int
cli
scas
pop
cmp
push
je
fcoms
sub
mov
adc
fucomi
nop
jmp
cmp
jle
mov
cmp
fcmovu
mov
adc
movsb
xchg
sbb
mov
dec
out
add
jbe
inc
lock
sub
sbb
mov
rcrb
sbb
leave
js
sub
jp
jle
in
jle
or
mov
mov
dec
fbstp
mov
or
mov
loop
sbb
pop
lods
cmp
mov
lret
adc
jp
cld
mov
jl
push
fsub
sbb
mov
fcompl
cld
cli
cwtl
ror
movsl
idivb
repnz
cmc
fidivs
cmp
pop
daa
xor
or
loopne
push
aam
scas
xor
cmp
adc
sbb
mov
lods
adc
aam
sbb
dec
ds
enter
incl
sbb
xor
sbb
sub
push
mov
jg
and
call
cmp
ret
fisttps
cltd
inc
clc
fcmovnbe
pop
test
sbb
scas
xchg
mov
ficompl
mov
or
nop
ja
push
mov
adc
out
mov
inc
decl
inc
cwtl
xor
imulb
clc
mov
ret
push
mov
push
adc
bound
lods
jb
aas
rcr
lcall
in
mov
cwtl
mov
or
xor
mov
in
mov
loop
ficompl
add
notb
test
das
bound
movsb
shl
pop
in
xor
addr16
xchg
repz
or
mov
sub
and
lret
xchg
dec
repnz
mov
das
lcall
adc
ret
xor
loopne
inc
or
jno
and
in
jp
cmp
imul
out
ficompl
outsb
clc
mov
xor
mov
sbb
popa
lahf
jge
mov
lock
ds
xor
jp
push
xchg
lds
and
stos
aam
sbbb
adc
ljmp
pop
aam
fdivs
ljmp
imul
add
jb
fdiv
push
aad
sub
mov
repnz
iret
mov
xor
lods
out
inc
mov
js
insb
mov
xorl
adc
imulb
cwtl
adc
add
add
xchg
adc
or
out
adc
or
rcrb
cld
or
pushl
fsubrs
incl
idiv
ret
call
adc
mov
cmp
dec
negl
fmuls
push
dec
add
scas
jno
xor
iret
lret
sbb
cmpxchg
dec
inc
lods
jecxz
pop
adc
scas
in
out
cld
or
out
sbb
mov
inc
lock
out
push
sub
scas
lcall
push
jl
mov
sbb
mov
xor
mov
sbb
or
xor
dec
mov
insl
mov
inc
sbb
pop
or
push
das
rolb
pop
push
push
mov
cmp
mov
push
test
xchg
sub
mov
popf
xor
adc
sub
jg
push
inc
fiaddl
cwtl
cmp
sarb
cmp
outsl
aad
or
ljmp
mov
ret
mov
ss
lcall
popa
lea
mov
sub
fdivl
pop
roll
inc
mov
test
rcrb
adc
adc
fmull
or
push
scas
leave
data16
dec
xchg
dec
ljmp
lock
mov
rcrb
xchg
cli
jb
push
sub
mov
addr16
mov
sbb
cld
sahf
lock
sti
and
ja
mov
fisubs
xorb
push
shll
cmp
mov
sahf
xor
enter
mov
push
push
movsb
adcl
mov
or
into
movsb
inc
sahf
cmp
add
inc
cltd
lods
test
idivb
cmp
adc
les
ss
incb
out
ds
sub
mov
pushaw
jnp
fbld
popa
out
test
sbb
andb
mov
or
into
stc
cmp
pop
fbstp
lret
push
sbb
mov
inc
ret
sub
cmp
adc
out
sbb
mov
adc
fcomp
jbe
hlt
scas
sub
fcoml
pop
sub
add
cli
ss
sbbl
icebp
add
out
aam
mov
enter
loope
sbb
imulb
stos
pop
inc
jmp
dec
add
stos
mov
or
pop
pop
adc
in
sti
cld
push
push
mov
mov
mov
idiv
fldl
lods
jo
or
sub
nop
adc
mov
mov
fadd
scas
enter
out
int3
daa
andb
push
xor
pushf
shll
sahf
les
push
mov
ds
out
cmp
add
ljmp
lret
sub
arpl
iret
jae
repz
mov
mov
sbb
push
js
leave
mov
popf
insb
add
inc
push
jno
popa
dec
pushf
jo
ljmp
pusha
cld
fsincos
sbb
jge
aam
addb
push
xor
popf
add
cmp
jmp
pop
ss
sbb
push
je,pt
jo
int3
notb
aas
sub
jmp
popa
out
inc
pusha
into
mov
arpl
out
inc
jb
mov
jo
out
mov
inc
mov
and
scas
mov
rol
push
lea
add
lret
inc
repz
leave
xorb
xchg
in
mov
cmp
push
ljmp
enter
inc
adc
and
pusha
push
add
mov
xchg
or
mov
xchg
xor
gs
mov
sub
inc
add
clc
adc
sbb
inc
out
in
and
or
popa
push
mov
mov
push
mov
mov
adc
fldcw
sub
mov
fcompl
stos
add
push
ljmp
sbbb
mov
ljmp
in
mov
inc
fs
mov
mov
cld
das
add
sbbl
sti
cltd
fldl
mov
dec
mov
inc
cmpsb
sub
hlt
and
les
inc
ret
inc
ret
adc
pop
int
aam
fbstp
mov
mov
lret
shlb
cmp
xor
xchg
enter
repnz
xor
out
insb
xchg
dec
or
ud1
int3
push
xchg
xor
daa
int3
dec
cmp
add
sbb
pop
add
mov
jo
jp
sub
jbe
mov
xchg
push
lods
fcoml
mov
or
jno
in
mov
mov
xchg
mov
jp
stos
jle
xchg
lods
pop
fwait
or
mov
pop
xor
scas
rcrb
add
and
xor
or
add
adc
enter
cmp
ss
mov
cli
sbb
push
mov
sub
mov
sub
sarb
add
imul
push
jp
push
or
or
popf
add
push
pop
jns
mov
cmp
mov
jg
bound
sub
cmp
sbb
in
inc
mov
fcompl
rcrb
js
clc
jno
mov
lds
xor
ljmp
scas
cli
pusha
movsl
mov
adc
dec
inc
mov
shrb
out
sbb
ficoml
data16
pop
push
mov
stos
stos
pop
arpl
xlat
sbb
and
mov
push
mov
out
dec
push
sub
orb
ret
mov
scas
push
xchg
mov
cli
mov
xchg
inc
sbb
mov
lcall
addb
mov
and
push
lret
sbb
add
movsb
dec
lahf
and
xor
cmp
lea
rorb
xlat
cld
cli
stos
push
aaa
push
cmp
adc
adc
xor
xchg
cmp
addr16
mov
add
add
out
inc
adc
push
loopne
scas
mov
pop
push
fadds
jg
push
int3
inc
cmpsl
push
sub
or
mov
stos
mov
mov
sub
mov
push
jbe
roll
out
fsubrs
mov
fbld
lret
push
mov
orb
jns
mov
adc
push
sahf
arpl
fdivl
mov
shlb
mov
xchg
pop
cmp
sub
ret
mov
rolb
in
lret
inc
ret
aam
lods
push
inc
push
das
icebp
pop
and
shrb
mov
int3
in
les
mov
mov
lahf
addl
mov
mov
sbb
adc
cld
cs
jmp
push
pop
popf
jnp
loopne
das
iret
push
enter
mov
les
push
pop
mov
subb
adc
mov
enter
sbb
leave
sahf
jecxz
testb
push
mov
outsl
test
outsl
lock
in
clc
repz
iret
sub
ja
daa
jg
mov
idivl
lret
popf
cmp
mov
idivb
push
int
rcrb
repnz
adc
fcoms
subl
cmp
les
into
nop
int3
out
mov
sbb
nop
jp
in
fwait
stos
cli
cmp
movsb
lret
leave
popa
push
mov
adc
stos
les
xchg
add
or
add
dec
insb
xchg
into
cmp
ds
push
mov
pop
or
adc
cli
jno
das
sub
sarb
lock
sarl
xor
fdiv
push
sub
int
cs
cmpsb
jo
jbe
es
jo
fcompl
clc
mov
mov
adc
xchg
mov
dec
mov
iret
adc
push
repnz
fwait
jno
sbb
mov
mov
push
fimuls
or
fcmovu
in
outsl
cmc
outsl
push
mov
leave
lcall
sbb
lret
xchg
xor
shll
hlt
enter
lods
pop
fsubs
shlb
mov
cmp
or
cli
bound
ljmp
notb
int3
sarb
pop
xor
jmp
dec
cmp
mov
fidivl
mov
dec
nop
in
ds
push
xor
cltd
push
rcr
dec
fsts
adc
or
sbb
add
xor
fisubl
sbb
test
ficompl
repnz
hlt
xchg
sbb
sub
push
aam
mov
mov
mov
mov
lret
jge
ret
pushf
push
mov
lret
subl
cmp
and
sbb
scas
int3
pop
or
scas
xchg
mov
mov
jg
xlat
sbb
hlt
inc
xchg
add
pop
sub
cwtl
xor
cli
test
push
lcall
xlat
xor
xor
cmpsb
lods
out
lret
daa
mov
addr16
mov
movsbl
mov
sbb
or
adc
popf
shlb
popf
test
lods
sti
mov
xchg
ljmp
int3
aaa
or
les
mov
pop
adc
xorl
ror
xor
idivl
fmul
mov
cmp
push
out
adc
cmp
push
rcrb
cs
lret
adc
add
fcoml
mov
xor
lods
jge
adc
arpl
cmpsb
mov
js
out
fsubrl
cmp
push
faddl
or
add
cmc
adc
fcoml
fmulp
std
pushf
loopne
ljmp
pop
call
flds
pop
mov
ljmp
ficompl
pop
dec
xor
pop
mov
enter
call
push
add
push
rcll
xchg
in
xor
dec
lahf
jmp
push
inc
rolb
cmp
push
popa
aas
in
push
pop
jb
lock
mov
mov
hlt
arpl
js
push
fnstcw
decb
in
ss
cld
mov
sub
fcoms
icebp
xchg
mov
ror
inc
xchg
push
or
hlt
adc
repnz
mov
test
outsl
popf
fstpl
cmp
xlat
rcr
aas
mov
stos
cmpsb
stos
or
fsubrl
in
or
ss
mov
out
or
push
mov
mov
iret
mov
test
mov
popa
mov
stc
push
mov
adc
aas
sbb
jp
test
repnz
clc
lods
push
scas
push
add
xor
fdivrs
sub
in
pop
aas
inc
test
push
insb
lock
ficoml
rclb
js
jb
bound
cld
mov
mov
lock
xchg
mov
mov
inc
xor
shll
and
rol
ljmp
lods
xchg
pop
xor
sub
or
mov
out
int3
pop
mov
cmc
ftst
cwtl
dec
idivb
push
or
sar
pushl
push
inc
inc
xor
stc
shlb
adc
lret
pop
jb
ds
adc
sbbl
mov
or
jb
adc
sbb
xor
out
cld
cltd
jo
or
xor
icebp
movsb
sub
ds
scas
inc
mov
fs
lret
nop
mov
inc
addr16
or
sbb
mov
es
stos
cmp
dec
pop
enter
imul
push
mov
ljmp
lret
push
sbbb
arpl
mov
jp
xchg
stos
js
les
nop
push
add
cs
lret
int3
adc
mov
popa
mov
test
aam
lods
ds
cli
outsl
jge
adc
sahf
mov
rcrb
mov
jg
jp
sbb
pusha
xor
pop
or
pop
pop
das
xchg
mov
clc
add
fnstenv
mov
mov
adc
loope
in
fmul
cli
mov
sbb
jbe
or
rorb
jno
in
mov
mov
shr
dec
adc
inc
mov
pusha
in
popa
add
cmpsb
sbb
js
jno
adc
mov
in
jnp
jb
data16
mov
jecxz
imul
sbb
adc
pop
mov
xor
push
jp
lcall
cmp
ss
out
lahf
rcll
shr
aam
ljmp
mov
ret
mov
adc
rcll
mov
sahf
sbb
mov
mov
add
outsb
arpl
cs
mov
push
fcoml
pushf
into
cld
xor
add
loopne
adc
mov
push
hlt
jecxz
pop
shll
push
sahf
mov
cld
cs
sbb
cwtl
or
shl
fwait
add
ljmp
lret
incb
jg
adc
mov
js
and
stos
shl
enter
iret
mov
outsl
adc
adc
stos
in
mov
add
push
hlt
negb
lahf
ffreep
mov
mov
ss
jne
leave
fdiv
sahf
dec
les
outsl
sub
adc
lods
xor
mov
cmp
mov
and
in
and
or
pop
push
push
sub
adcl
shrb
cld
fcoml
das
sub
ds
sub
xor
cmpsl
sbb
daa
push
mov
mov
lcall
sbb
in
shrb
sbb
sbbb
xor
icebp
push
cmp
shrl
pusha
add
xlat
fmul
inc
inc
les
es
fcmovb
ror
hlt
out
ss
daa
push
out
mov
cli
lret
push
sbb
aam
popf
xor
ficoms
stos
stos
movsl
mov
inc
clc
adc
mov
or
inc
enter
cmp
stos
fisubrs
mov
dec
add
add
and
scas
inc
fbld
lods
cli
mov
xchg
adc
push
jo
ror
mov
sbb
iret
ret
ss
mov
add
push
aaa
xchg
andb
pop
pushf
pop
or
fcom
inc
bound
lods
movlps
movsl
das
inc
mov
inc
movsl
push
cld
fdivrs
or
or
stc
insb
clc
data16
and
pop
inc
mov
aam
adc
inc
push
sub
xlat
mov
sbb
xchg
jg
fstpl
mov
dec
scas
fwait
add
mov
mov
cwtl
aad
xor
lea
negb
stos
cs
nop
and
ds
shlb
push
ret
or
test
adc
loope
fsub
push
push
mov
mov
std
pushf
mov
aad
fidivrs
ljmp
jg
jp
xor
mov
push
clc
push
or
push
mov
jb
andl
movsb
xlat
sub
mov
mov
ret
sub
stos
xorb
js
mov
fidivl
dec
adc
lock
xchg
cmp
repnz
mov
lock
mov
addr16
push
test
xor
int3
out
addl
jnp
js
data16
into
or
fcomps
sbb
cli
ljmp
outsl
push
cltd
ret
rcrb
ret
out
add
adc
jle
mov
sub
rorb
mov
std
fstpt
sbb
in
je
jl
dec
daa
push
rorb
lret
mov
cs
inc
aad
ret
mov
cld
xor
mov
mov
fmuls
int3
cmp
push
lret
sbb
scas
cli
mov
jnp
test
aad
inc
fidivrl
mov
pop
push
int
ljmp
ss
sub
push
cmp
cmp
xor
sbb
add
adcl
stos
or
cs
fwait
cmp
mov
or
rclb
xchg
mov
in
neg
int3
test
sub
cs
or
push
or
lcall
lock
xor
ds
cmp
sbb
das
or
clc
sub
das
das
mov
mov
sahf
sub
lods
inc
aas
enter
push
adc
mov
pushf
xor
dec
fildll
mov
divb
push
xor
les
sub
mov
inc
push
cmp
and
cld
xor
pushw
inc
push
pop
xor
ss
add
inc
fmull
add
pop
push
mov
mov
mov
mov
mov
sbb
fcmovnb
mov
cmp
jno
inc
cld
clc
loope
mov
stos
sbb
lret
faddl
ret
xchg
push
xchg
adc
push
outsl
imul
adc
pop
or
in
stos
push
pop
dec
push
mov
jo
mov
mov
rorb
push
mov
lcall
pop
clc
mov
ficomps
cmp
mov
jg
jp
xor
adcb
mov
adc
mov
ss
into
stos
movsb
int3
sbb
pop
mov
fistpll
sub
cmp
fwait
lods
enter
ljmp
ret
lock
sub
xor
sub
mov
xor
sbb
lcall
mov
xchg
mov
dec
adc
pop
cmp
notb
or
sbb
cmp
fcompl
sbb
fcoml
push
jae
jb
das
push
jge
mov
int3
push
add
nop
aam
cs
xchg
and
jae
dec
lret
adc
hlt
sbb
push
xchg
push
ret
mov
and
xchg
push
add
and
rcrl
or
push
js
mov
ret
jmp
xchg
sbb
hlt
sbb
cli
mov
leave
int
ss
pop
mov
add
stos
mov
jg
mov
bound
cld
jp
test
sarb
jb,pt
add
or
cwtl
shlb
sarl
test
cld
mov
sbb
cmp
inc
test
and
pop
lret
data16
repnz
push
add
addb
or
negb
adc
dec
int3
ja
xchg
subb
push
fsubp
sbb
mov
lea
pusha
mov
pop
cmp
scas
int
mov
push
sbb
xor
xchg
das
inc
pop
cmpsl
icebp
fstps
push
jmp
and
mov
adc
mov
repz
mov
cmp
pop
mov
sbb
dec
mov
sub
mov
cmp
cmp
mov
xor
xor
fiaddl
fistl
enter
mov
or
push
lods
cmp
lret
add
aas
xchg
cli
push
push
in
fisubs
inc
cmpb
lret
or
testb
mov
rorb
sbb
mov
aas
mov
push
pop
inc
enter
aad
addr16
cmpsb
out
dec
mov
adc
lods
push
ret
cwtl
ljmp
int
inc
mov
mov
xchg
testb
rorl
pushf
push
xchg
cmp
adc
xor
dec
arpl
ret
fadds
add
dec
popf
adc
sti
fbstp
pusha
adc
clc
or
mov
jp
cwtl
jle
add
idivb
or
mov
push
adc
xchg
push
nop
push
lret
sti
shlb
xrelease
ss
fcom
in
push
scas
movsb
mov
cmp
xchg
out
jo
sarb
and
in
cltd
cli
mov
pop
inc
dec
and
sahf
sbb
mov
cmp
push
or
push
sbb
repz
mov
add
mov
or
in
jns
or
sub
cmp
add
push
ss
fbstp
int3
fmuls
les
mov
mov
adc
repz
aad
lcall
cltd
jg
sub
stos
shr
ds
push
pop
xchg
aam
mov
mov
repnz
push
ret
jnp
loop
repnz
mov
test
scas
ror
push
pop
mov
jg
outsl
fistps
dec
rcrb
push
lds
xchg
fsubs
jb
in
cli
sub
mov
js
jb
bnd
rcr
das
xchg
or
imulb
ljmp
cld
adc
add
adc
push
mov
iret
lea
rolb
mov
mov
frstor
pop
repnz
xor
stos
fmull
mov
adc
lods
xor
sbb
cld
mov
stos
fdiv
pop
insb
push
xor
add
adc
sub
dec
dec
stos
jg
inc
cmp
call
dec
jbe
and
sub
leave
sub
push
sbb
add
ljmp
jge
mov
fwait
lock
les
jnp,pn
js
jo
dec
pusha
hlt
push
fcompl
inc
push
push
sbb
jns
loop,pt
jp
mov
mov
inc
mov
pushf
ds
mov
add
pop
mov
es
sbb
pop
data16
mulb
adc
and
out
cmpsl
ja
js
jb
jle
andl
dec
hlt
lret
mov
test
mov
sub
mov
not
cs
shrl
adc
cmpsl
mov
cmp
jno
or
fwait
ds
les
dec
mov
and
xchg
mov
mov
mov
adc
xchg
sbb
outsl
scas
xchg
rcr
cli
cmp
lahf
ljmp
or
ss
testb
pop
outsl
lahf
xchg
hlt
lock
data16
repnz
pop
mov
fcompl
outsl
aas
paddq
xorl
or
jg
sub
sbb
xchg
sub
push
xor
mov
mov
scas
sbb
hlt
xchg
cld
pop
lret
xor
cmp
bound
mov
cld
xchg
iret
stos
addr16
add
pusha
push
xor
cmp
or
out
adc
out
pop
pop
inc
negb
pushf
fdivrl
rcr
mov
fiaddl
xchg
mov
stos
sbb
pop
xor
cmp
sbb
sbb
in
mov
adc
push
inc
jp
add
xchg
xchg
mov
mov
sub
int3
ljmp
rolb
add
adc
stos
sbb
in
enter
add
or
cld
mov
out
push
fwait
jo
stos
insb
aas
ret
or
out
sbb
cld
cs
mov
cmc
or
int3
mov
inc
scas
jne
cld
stc
mov
adc
out
mov
scas
add
mov
xor
xchg
adc
adc
out
inc
loope
shlb
xor
ret
adc
lcall
pop
stos
adc
add
and
sbb
clc
aam
fcomi
sbb
cld
sbb
adc
repz
or
mov
lea
cmp
cmp
mov
sub
icebp
int3
data16
fstps
stos
sbb
jl
les
sarb
and
push
and
adc
pop
push
sub
daa
adc
xchg
inc
out
mov
outsb
pop
sbb
sar
xor
or
aaa
icebp
xor
sub
inc
gs
lret
mov
int
cmp
add
iret
push
stos
stos
jo
adc
push
insl
push
add
repz
push
add
mov
shrb
imul
lret
push
adc
push
ds
push
sbb
rolb
mov
invlpg
sbb
out
in
ss
mov
mov
fisubl
cmp
jae
ret
js
addb
cli
xchg
lock
cmp
cmp
into
cmpsl
adc
or
aad
sbb
call
lods
loopne
loopne
sub
xorl
pop
mov
fsubrs
adc
outsb
ror
sbb
fimull
ret
mov
sbb
lret
int
aas
pop
xlat
aam
add
sarb
enter
out
jnp
aam
mov
and
lret
mov
sbb
sbb
and
push
xor
or
cmc
sti
fists
mov
scas
das
or
jecxz
sbb
mov
push
faddl
lret
dec
cs
das
loopne
fwait
push
fcomps
int
scas
xchg
push
or
sub
fstpl
sbb
add
lods
xchg
addr16
xor
in
movsb
sub
dec
ljmp
push
xchg
mov
shll
cs
mov
jl
sub
lahf
out
lret
ss
add
fsubs
lods
sbb
rorb
out
data16
ljmp
hlt
fsubl
push
repnz
es
cmp
push
or
dec
pop
js
les
jbe
push
xchg
mov
into
ret
mov
adc
mov
in
pop
lret
enter
mov
in
fdivl
adc
jbe
and
cs
ljmp
jne
cmpb
cli
insb
imul
sbb
int
adc
in
mov
ss
ret
cs
mov
mov
add
lods
push
jnp
ljmp
rol
xor
fwait
mov
cli
mov
xchg
pushl
imul
or
rorb
fmuls
sbb
ret
repnz
iret
xor
sub
out
jae
pop
sbb
mov
fbstp
pop
add
ss
inc
test
inc
mov
out
ljmp
adc
and
and
fcoml
jle
jbe
into
pop
cs
or
rcrb
add
test
scas
repnz
mov
lods
lcall
mov
jb
jp
pop
lcall
repnz
push
adc
mov
cmc
push
mov
lret
dec
cmc
dec
push
jne
mov
jnp
xor
mov
add
repnz
jne
dec
mov
out
fcmovu
dec
scas
jb
mov
push
xchg
sbb
inc
push
sub
mov
add
lcall
adc
clc
xor
lods
push
imul
fldenv
inc
les
sbb
aad
iret
xor
insb
ret
ret
mov
push
mov
push
push
decb
testb
cld
jge
cmp
pop
fwait
mov
jge
xor
cwtl
pop
mov
into
and
dec
incb
or
push
mov
out
ds
xor
cmp
popa
xchg
hlt
and
adc
enter
mov
in
ret
stos
mov
mov
js
push
movsb
inc
inc
mov
js
cmpsb
enter
bound
dec
adc
idivl
dec
dec
pusha
cmp
jbe
and
int
push
repnz
lods
ret
aam
xlat
xchg
das
mov
fdivrl
pop
push
int3
jno
js,pt
jb
mov
out
mov
cmpsb
js
fimull
dec
rclb
test
mov
ds
das
cmpsl
outsl
sub
addr16
lock
jecxz
sub
pop
mov
rol
jp
cltd
mov
inc
mov
pusha
xchg
jb
mov
pop
repnz
push
cmp
push
cld
cmp
sub
or
mov
mov
repz
mov
jmp
out
popf
inc
lods
pinsrw
out
xor
push
add
addr16
mov
mov
fidivl
scas
lods
sbbb
push
inc
pop
rol
pusha
aad
mov
addb
fadd
lahf
xorl
cld
fucomi
add
mov
lock
sbb
cmc
lods
add
mov
adcb
sub
loop
mov
and
dec
cld
ja
xchg
inc
sbb
imul
jnp
adc
mov
ds
and
rclb
pop
lea
sub
lods
or
push
mov
out
add
push
mov
inc
inc
hlt
sbb
dec
aad
lahf
jge
adc
xor
lods
negb
mov
adc
cli
or
enter
ds
push
dec
mov
cmp
out
out
and
or
sbb
mov
cli
xor
cmp
out
sbb
sbbl
mov
sbbb
adc
mov
fdivl
stos
inc
pusha
xor
xchg
push
mov
inc
or
notb
cli
popf
pop
xor
cmc
ss
dec
sbb
add
mov
push
aam
push
or
loop
fdivrl
lds
sbb
int
lret
fsubl
or
jbe
mov
lcall
push
mov
stos
lods
out
in
mov
mov
push
xor
test
addr16
xor
dec
pop
neg
pop
scas
call
push
xor
pop
inc
xor
jb
jp
nop
pusha
lock
pop
xor
sbb
and
mov
or
negb
fcoml
es
mov
sbb
mov
pop
rcl
hlt
enter
cld
add
adc
push
cs
in
mov
adcb
dec
stos
xchg
loopne
mov
jmp
jg
out
aam
mov
out
mov
mov
fabs
dec
popf
xchg
cmp
fcmovb
addb
mov
les
sbb
jg
test
push
sti
push
fidivl
jecxz
sbb
push
xchg
clc
hlt
out
es
mov
sahf
mov
aad
xchg
jno
sbb
ds
xchg
ret
pop
jb
shlb
adc
and
mov
sbb
adc
add
mov
mov
mov
cld
sub
int3
cmpsb
scas
push
clc
sahf
dec
mov
inc
cli
xlat
mov
enter
mov
insl
push
stos
xchg
into
xor
mov
scas
cli
out
mov
add
les
rclb
lds
add
daa
aas
cmp
aam
xchg
mov
out
lock
sahf
mov
push
notb
dec
les
cmp
and
cmp
mov
mov
or
cltd
stos
mov
notb
out
inc
inc
das
ret
lods
mov
out
in
and
mov
movl
jns
clc
push
idivb
fiaddl
cmp
jecxz
jo
push
mov
mov
mov
ficompl
ficompl
mov
mov
pop
cs
ret
xchg
aam
sub
lods
or
mov
ss
mov
push
pop
push
cmp
sub
ds
add
bound
cwtl
fidivl
cs
jp
lret
bound
imul
sbb
pusha
sarb
cmpsb
cltd
test
loop
out
lods
popf
mov
into
dec
jbe
cmp
les
sbb
xor
mov
popa
mov
in
lahf
pop
int3
mov
ficoml
add
add
mov
adc
je
mov
inc
dec
sbb
lock
cld
or
inc
sbb
mov
fidivrl
imulb
mov
xor
push
cmp
dec
jp
cmpsb
pop
mov
mov
fsubl
lret
faddl
mov
ret
lcall
fadd
or
clc
scas
mov
ljmp
mov
int3
or
aas
add
sbb
adc
lods
fidivs
adc
and
jg
data16
shrb
into
stos
hlt
ficoms
inc
fdivr
adcl
dec
aas
push
adc
in
cltd
ja
jg
lret
mov
cs
scas
aam
dec
dec
xchg
mov
lock
xchg
outsb
mov
push
sub
cmp
mov
shlb
adc
or
lahf
flds
int3
les
in
fmul
cli
jbe
lods
and
jo
fsubs
push
mov
push
dec
int3
push
mov
pop
xor
push
lahf
bound
cmp
ljmp
pushf
lock
inc
ds
cmp
ljmp
mov
cmp
sbb
cmp
sbb
sbb
loope
fcoml
mov
mov
or
mov
ret
int3
jg
xchg
mov
or
pop
mov
add
mov
mov
jb
mov
rorl
mov
adc
sbb
hlt
ja
lcall
rcll
out
add
lock
cs
mov
mov
sub
insb
jo
out
or
cmp
sbb
stc
incb
enter
adc
jne
or
repnz
cmp
dec
mov
mov
shrb
out
mov
push
ret
lods
mov
les
or
pop
data16
mov
rcrb
push
loope
push
mov
and
in
xor
dec
dec
mov
test
pop
xor
push
int
pop
pop
stos
movaps
cld
int3
jmp
in
cmc
xchg
add
cmp
sub
and
or
mov
dec
mov
rcr
dec
aad
or
lret
mov
mov
xor
and
aam
mov
das
xchg
push
add
test
mov
add
enter
fsubr
xor
xlat
lods
outsl
xor
dec
mov
mov
add
adc
lods
hlt
push
ja
fs
pushf
sar
adc
cmp
jg
lahf
push
mov
outsl
loopne
lea
xchg
add
pop
adc
hlt
xor
sbb
not
aas
adc
cmp
jp
add
xor
mov
xlat
push
in
xchg
ljmp
addr16
scas
inc
push
inc
fsubs
enter
add
xor
xchg
mov
les
ds
sbb
fadds
or
cmp
lock
clc
or
mov
addr16
cmpb
sarb
mov
sbb
adc
sbb
dec
cwtl
xchg
incb
mov
cmp
inc
shrb
push
jnp
add
out
sahf
sbb
or
lock
into
xchg
or
into
cmp
sub
addr16
cltd
xchg
or
cmp
mov
pop
mov
sti
mov
into
mov
shlb
sub
mov
sbb
pop
test
ss
cli
add
cmpb
xor
into
in
sbb
inc
and
mov
or
sti
idivb
mov
hlt
sbbl
fs
ss
and
add
lahf
lods
stos
or
push
aam
fldt
mov
ret
sbb
dec
lods
jno
add
test
lret
cwtl
pop
sbb
les
leave
jo
push
mov
sub
push
int3
jecxz
mov
nop
icebp
cmp
lahf
jge
fdivs
adc
sub
pop
and
gs
or
push
cmp
ljmp
or
mov
xchg
dec
out
or
inc
sbb
fisttps
aas
cmp
add
and
push
push
mov
and
sbb
incb
jbe
in
aam
mov
les
sbb
pop
jo
cmp
cltd
mov
ret
mov
in
int3
nop
jno
ds
cmp
pop
xor
fs
imulb
mov
aas
jo
mov
gs
mov
mov
push
dec
mov
or
sub
push
in
xor
insb
divb
xor
sbb
sbb
ljmp
fsubrs
imul
cs
inc
jle
add
xchg
aam
xchg
add
and
mov
in
mov
mov
mov
cmp
mov
push
hlt
fwait
lea
or
inc
scas
push
fdivp
ret
rorb
cmp
andl
arpl
lods
lea
ret
sub
push
fistpl
pop
repnz
and
out
pop
cmp
lahf
into
aad
lahf
mov
int3
cmp
sbb
sbbb
out
sti
movsb
push
xchg
cld
pop
fidivs
int3
cmp
xor
ljmp
leave
xchg
pop
adc
js
test
adc
adc
mov
js
fs
popf
cmp
lret
mov
or
mov
idivl
jp
in
fdivrs
pop
mov
sbb
lea
lahf
dec
out
push
hlt
inc
cli
mulb
ja
mov
lret
xor
xchg
pop
aas
add
xchg
xor
lock
pop
push
mov
ss
lahf
push
clc
sub
mov
js
pusha
pop
jo
push
les
xor
jb
cmpb
sbb
notb
mov
aas
push
in
das
and
mov
xor
push
inc
xor
ret
sbb
popa
jg
xor
movsl
push
cmp
js
fdivs
or
les
pushf
out
xor
scas
dec
sub
lods
outsl
cs
notb
or
loopne
adc
lea
pop
imul
sub
cmp
cmp
add
adc
mov
sub
cli
enter
repnz
test
fldcw
or
out
mov
mov
les
scas
pop
cmp
adc
mov
mov
mov
clc
ss
movsl
xchg
mov
or
lods
mov
xchg
cli
jp
add
scas
cmpsl
sbb
inc
push
xor
addr16
cmpsl
loopne
sbb
xor
lret
repnz
and
out
xor
andb
mov
add
push
rcl
cmpsl
adc
shll
in
sub
scas
mov
and
lea
xorl
popa
sbb
fcmovb
mov
dec
aam
jmp
mov
xchg
or
pop
adc
ds
cwtl
das
fmul
mov
aaa
lret
inc
sub
js
pushf
es
cld
jae
cmp
jp
mov
mov
popf
addl
cmp
cmp
push
mov
ds
stc
inc
cs
jp
push
enter
lret
fiadds
repnz
ljmp
xchg
pusha
lret
pop
std
mov
mov
xchg
or
sbb
mov
jns
lods
inc
xchg
or
in
aaa
lock
xchg
add
test
adc
shl
test
jg
aam
sub
mov
into
rorb
pop
sbb
xor
jg
jg
push
cld
stos
ljmp
cmp
push
xor
sub
scas
cld
fistl
add
pop
sbb
ret
iret
int3
out
adc
mov
mov
iret
inc
mov
enter
les
cmpl
and
adc
mov
mov
push
mov
adc
divb
lock
push
cmp
and
xchg
inc
repnz
pusha
xor
or
pusha
rolb
cld
push
xchg
movaps
push
cmp
stc
mov
xchg
fcmovu
mov
int
test
flds
mov
mov
inc
sar
addr16
or
ljmp
inc
cmp
mov
out
and
cmp
add
cmp
popf
mov
or
sbb
dec
nop
outsl
shlb
cltd
or
stos
pop
rcr
sbb
aam
push
jp
cld
push
sbb
fwait
shl
scas
fcomps
cli
in
push
adc
push
sahf
adc
ror
mov
es
shlb
mov
xor
sub
sbb
dec
stos
sbb
sbb
les
or
mov
lods
or
xchg
mov
cs
negb
mov
adcl
dec
fnstcw
cld
clc
pushf
or
sarb
stos
xor
lret
pop
mov
cmp
cmp
mov
ss
mov
popf
xor
in
fdivrl
cmpsl
adcb
mov
int
cmpl
movsb
sbb
das
ss
mov
sbb
sbb
cmpsl
in
adc
sbb
shlb
hlt
mov
fimuls
or
pop
int3
lea
lret
mov
dec
add
mov
cmp
xchg
idiv
cs
xor
lret
aam
mov
fiadds
rorb
loop
rcl
jge
pop
push
outsl
nop
aas
mov
mov
out
sub
int3
adc
mov
add
enter
mov
or
inc
mov
inc
mov
notb
pop
dec
push
xor
xor
fdivr
addr16
fsubrl
mov
aas
test
orb
mov
dec
cld
mov
cmpsb
xchg
jo
cs
jbe
jg
out
nop
es
cmp
mov
xchg
dec
decb
xor
inc
cs
dec
xchg
lds
enter
xchg
mov
xor
stos
or
inc
jb
mov
insb
enter
adc
xchg
les
ss
sarb
hlt
or
ficompl
lock
cmp
clc
movsb
adc
ja
fwait
loopne
mov
push
dec
nop
mov
mov
cmp
jbe
sbb
repz
negb
call
mov
mov
ss
cld
ljmp
xor
mov
daa
test
fwait
jno
push
frstor
ficomps
in
fimull
mov
test
xchg
repz
mov
out
scas
js
into
mov
lods
xchg
in
xchg
add
lock
scas
out
gs
add
xchg
dec
ficompl
mov
push
aam
cmp
inc
std
testb
pop
mov
out
mov
jg
inc
adc
iret
into
mov
fmull
inc
in
mov
xchg
test
ss
ret
js
leave
mov
neg
stc
jmp
fsts
mov
adc
popf
dec
ss
adc
ret
hlt
mov
subb
adc
mov
pusha
stos
dec
pop
adc
mov
mov
mov
ss
insb
mov
or
push
lcall
pop
aas
mov
fistpl
cmp
loopne
mov
mov
mov
inc
inc
jo
pushf
jns
cld
rcrb
shlb
int
mov
out
test
ljmp
lock
repnz
adc
push
mov
lret
popf
roll
mov
enter
pop
rorb
in
scas
add
cmp
in
lock
lret
and
inc
mov
cmp
dec
stos
out
fisubs
xor
adc
add
popf
mov
mov
ljmp
add
stos
sbb
leave
scas
into
aam
outsl
insl
mov
out
mov
mov
sbb
mov
lret
xchg
cli
mov
inc
lds
sub
push
divb
xchg
insl
out
leave
mov
mov
stos
mov
ror
push
inc
push
test
mov
adc
mov
fistpl
add
add
push
pop
loop
addr16
xor
or
out
or
ficoml
out
push
add
push
push
sbb
inc
adc
sbbb
jg
jg
jp
into
add
pushf
loope
xor
cmp
mov
or
mov
xor
ljmp
test
adc
mov
and
push
out
aam
fadds
dec
dec
mov
inc
cwtl
into
cmp
mov
mov
push
out
enter
cs
jae
sbb
cmp
or
mov
push
cld
mov
add
movl
scas
das
xor
fwait
push
daa
out
mov
fmull
into
jns
cmp
into
lcall
push
ret
fildll
adc
ret
push
int3
movsb
mov
out
pushf
cmp
push
ds
or
xor
dec
pop
ss
mov
mov
inc
test
mov
int3
ss
lock
mov
jae
lock
dec
lods
or
das
cmp
add
mov
pop
cmp
ss
cmp
bound
rorl
ror
dec
leave
fistpl
lret
bound
xchg
stos
inc
fmull
out
xor
xchg
or
cli
jmp
sbb
mov
cmpsw
pop
out
mov
inc
inc
repnz
jo
jo
inc
mov
aam
lock
aas
mov
push
jmp
inc
cmp
insb
add
fidivrs
icebp
das
lret
jo
stos
jbe
aas
and
inc
xor
js
and
cmpsl
test
xor
scas
enter
or
xchg
lock
xor
and
scas
lret
stos
push
in
xor
insb
jb
rcrb
mov
andl
dec
cwtl
sub
inc
sbb
addr16
popf
push
mov
ljmp
mov
jge
int3
jle
insl
inc
ds
mov
rclb
jp
sbb
enter
sbb
int3
push
jae
cmp
mov
sar
ret
call
push
rcll
jbe
pop
aas
fimull
inc
add
faddl
dec
lods
pop
test
mov
jo
outsb
fnstsw
inc
sbb
lret
lcall
mov
xor
jp
iret
sbb
ljmp
popa
mov
jo
jp
xchg
pop
xchg
lods
xor
dec
nop
xor
lret
sbb
xchg
cmp
fdivrl
out
loopne
das
add
out
cld
jb
xor
cmpsb
fstpt
into
ffreep
mov
xor
negb
lods
cmpsb
pop
sbb
jmp
pop
sbb
or
lahf
sbb
into
out
add
icebp
lods
sbb
cmp
sbb
cli
push
cmc
xor
mov
mov
cli
gs
je
out
lods
repnz
ss
out
jge
sahf
push
lret
repz
sahf
lods
bnd
jecxz
aam
test
jae
xchg
and
jp
into
ret
xchg
loope
shlb
sbb
xchg
bound
push
pusha
div
mov
sub
pop
add
push
push
icebp
jns
rcr
cld
cmpsb
lahf
or
mov
xchg
or
adcb
xor
xchg
push
fdivl
xchg
rolb
mov
xchg
jno
aam
aaa
sub
cs
adc
pop
stc
int3
pop
shrl
or
or
cli
cs
or
mov
adc
push
push
xchg
shlb
adc
dec
mov
lret
push
in
clc
cld
lret
xor
sub
pop
addr16
mov
outsb
mov
fs
scas
fisttpl
jb
push
repnz
or
cmp
fsubr
push
rcll
icebp
sbb
push
lahf
mov
mov
clc
repnz
loop
pop
scas
add
xchg
lcall
or
out
fidivrs
xchg
in
dec
stos
popf
jle
or
lock
call
pop
add
rorb
cmp
fwait
rorb
sbb
enter
das
adc
rcrb
sahf
inc
fcmovne
xor
fmull
sti
or
out
pop
pop
adc
or
lret
outsl
cmp
inc
xchg
jae
lods
cs
sub
out
js
push
fcomps
movsb
lahf
inc
cli
adc
jg
xchg
ss
ljmp
xor
lahf
ja
push
hlt
lock
mov
inc
clc
xchg
xor
mov
push
data16
aam
in
daa
lret
push
xor
inc
mov
and
sbb
pushf
daa
xor
jecxz
pusha
pop
xlat
adc
popa
mov
add
ss
pop
setno
cmp
ds
jl
jno
sbb
lock
adc
dec
xchg
push
sarb
push
adc
push
mov
mov
pop
push
out
dec
jb
lcall
movsl
xchg
sbbl
cltd
adc
add
jbe
data16
mov
add
ds
fsubrl
jno
cld
add
dec
pop
mov
pop
pop
addr16
divb
hlt
mov
push
clc
adc
or
aas
xor
rcrb
ret
dec
test
outsl
ret
mov
cmpsb
add
cmp
sbb
pop
jp
cs
jmp
xor
sbb
mov
dec
mov
js
xchg
mov
mov
mov
and
mov
xlat
push
xchg
test
lret
mov
lods
stos
cmp
lahf
mov
xor
push
das
fs
sbb
sqrtps
into
adc
dec
lods
add
lahf
mov
or
lock
outsl
jp
es
xor
mov
lret
icebp
cwtl
add
int3
mov
xchg
repz
jae
out
stos
add
inc
cld
sbb
inc
mov
bound
sahf
adc
adc
sub
inc
mov
mov
xchg
sbb
lock
fwait
jne
mov
mov
sbb
mov
inc
in
mov
cmpl
cmp
daa
adc
nop
outsl
cli
jp
adc
clc
int3
mov
push
add
outsl
incb
scas
fidivrl
int
pop
lods
cmp
rcr
test
stos
push
or
out
clc
jg
mov
mov
cmp
push
movsl
lods
sub
sbb
lret
xlat
xchg
add
mov
pop
scas
mov
lock
popf
lods
sbb
sub
aam
divb
jg
xor
sahf
pop
dec
cli
mov
add
dec
mov
outsb
outsl
cs
lock
jp
jbe
xlat
inc
or
shrb
ljmp
lahf
mov
ret
cld
test
jns
xor
int3
xor
xor
jno
push
in
xchg
stos
ss
mov
inc
add
jno
jge
inc
hlt
inc
add
ljmp
sbb
jnp
jo
hlt
stos
xchg
adc
mov
xor
cld
mov
ljmp
test
sbb
sbb
mov
in
or
inc
mov
ds
mov
cli
xor
movsb
popa
fsubrs
idivb
sar
mov
sti
xor
incl
lea
mov
out
push
xchg
dec
ja
mov
sbb
inc
and
and
pusha
addl
lret
jg
scas
stos
add
cltd
mov
rcll
mov
js
dec
jbe
dec
adc
mov
stos
push
sbb
add
pop
adc
into
add
das
pop
sub
rolb
fidivs
ss
test
ret
aas
test
push
imul
dec
xchg
mov
xor
int3
ror
int
popf
push
lock
sbb
mov
mov
out
cmp
iret
jae
adc
push
notb
add
xor
jecxz
inc
in
dec
xor
push
outsb
xchg
or
inc
lret
jg
lcall
mov
out
xchg
mov
push
fwait
mov
sbb
leave
stos
push
js
or
jp
pop
sbb
shlb
pop
inc
xchg
mov
repnz
fisubrl
or
and
mov
mov
sbb
popa
jno
adc
add
mov
stos
shr
popf
jge
mov
sbbb
mov
insl
xchg
or
jne
mov
lcall
mov
and
xchg
mov
dec
insl
lea
clc
mov
adc
rorl
and
or
out
hlt
sbb
xor
cli
test
adc
mov
jbe
xor
xchg
ss
hlt
mov
aam
sbb
push
push
imull
sub
cmp
push
pusha
sbb
rcrl
lods
pop
imul
cld
push
pop
subb
stos
scas
fsubrl
shll
popa
or
orl
out
lods
xchg
cmp
or
sub
xor
mov
lret
push
mov
cmp
in
ret
cwtl
xor
or
sub
push
xchg
hlt
sbb
rorl
pop
xlat
clc
shlb
ljmp
sbb
call
mov
scas
int
scas
testb
fists
xchg
cltd
lods
ljmp
mov
ljmp
push
sbb
mov
or
lahf
sub
fdiv
push
push
jge
fdivrs
xor
or
cs
mov
aas
ja
lahf
dec
pop
cmpsl
nop
xorl
movsl
insl
fdivs
fidivrs
rclb
popf
mov
loop
icebp
std
mov
flds
inc
sbb
add
xor
xlat
int3
fidivrl
sbb
dec
rorb
mov
lock
cmp
testl
jbe
addr16
lock
push
cmpsb
mov
bound
in
push
int3
cs
sbb
sbb
hlt
mov
cld
cltd
sub
popf
sbb
or
mov
adc
push
xor
stos
mov
jo
repnz
mov
pusha
bound
shl
inc
data16
addr16
mov
fs
fwait
sub
into
arpl
mov
mov
repnz
xor
stos
xor
add
xor
divb
nop
out
sbb
fs
shl
lods
xchg
int
cmpsl
mov
mov
loopne
jbe
ret
in
sub
adc
fs
ljmp
fcompl
ss
outsl
lret
pop
mov
adc
inc
mul
push
mov
xor
pop
xor
in
mov
dec
outsl
jnp
ficoml
jl
addr16
ror
sbb
sub
xor
cmpsb
mov
sbb
insl
push
jae
mov
ror
xchg
in
xchg
xor
sub
mov
aaa
lock
cs
mov
ljmp
cmc
adc
gs
dec
lret
xor
add
push
mov
dec
js
dec
data16
or
jb
mov
lret
push
iret
int3
cmp
sbb
sbb
adc
les
lock
in
add
mov
or
cltd
or
andl
adc
pop
stos
push
jg
xor
xor
ret
mov
mov
xchg
cmpsb
mov
cmp
push
xor
jp
add
or
jecxz
push
jb
or
dec
cmp
add
jecxz
or
mov
xor
xor
rcrb
jae
cs
ds
stos
outsl
dec
mov
sarb
sbb
pop
lods
sbb
mov
pushw
or
cld
repz
mov
stos
fxch
dec
shl
fbstp
scas
mov
jnp
cli
mov
adc
js
sbb
out
mov
scas
lar
xchg
stos
lret
push
sbb
les
cmp
bound
sub
fsqrt
out
adc
mov
fiadds
out
das
mov
push
stos
jns
lds
and
fadd
mov
pop
mov
dec
mov
outsl
xorl
in
push
cld
or
or
repnz
fcmovnu
out
loope
mov
dec
adc
loopne
jno
adc
adc
push
mov
cs
les
push
orl
inc
pop
mov
rcll
adc
or
sub
mov
mov
fwait
stc
movsl
fnclex
mov
pop
mov
mov
subb
mov
dec
sahf
pop
or
lods
or
into
arpl
lock
stos
scas
lret
or
push
mov
nop
dec
push
lods
inc
es
in
mov
bnd
mov
or
xchg
test
xchg
mov
notb
add
enter
mov
data16
icebp
rclb
das
xlat
push
out
jno
mov
or
jne
mov
scas
adc
mov
adc
push
adc
fwait
aas
cmp
jle
push
jg
mov
or
mov
add
jo
sub
sti
or
clc
sub
movsb
mov
std
aam
arpl
shll
and
mov
iret
cmp
sbb
add
out
sub
xchg
shl
ret
pop
arpl
xchg
inc
push
push
dec
nop
sub
into
int
pop
lock
xor
fisttpll
mov
shr
lods
xchg
add
jl
movb
fcompl
imul
mov
or
hlt
leave
and
xchg
add
mov
xchg
leave
mov
inc
stos
js
inc
insb
jae
mov
xor
gs
enter
xchg
fdivrl
clc
push
mov
mov
rolb
sbb
shlb
decb
mov
mov
jo
pop
int
pop
negl
mov
int3
lock
or
or
js
test
in
add
lea
addr16
hlt
push
out
fiaddl
add
xor
xor
jbe
push
lock
cmp
int
mov
insb
cs
mov
sbb
adc
lahf
xchg
xor
ret
testb
repz
subb
fwait
repnz
lock
lds
mov
pop
mov
mov
fcomip
push
mov
pop
jmp
mov
test
add
mov
subl
into
inc
push
xchg
pop
cs
adc
fimuls
lret
lret
or
cmp
sub
inc
fwait
scas
sub
dec
xchg
add
mov
aam
stc
mov
fmull
jecxz
stos
enter
aam
sarb
dec
mov
dec
sahf
push
push
sbb
push
cmp
push
adc
sub
xor
add
pop
mov
add
hlt
adc
xchg
popa
push
dec
sahf
push
test
popf
lahf
repnz
dec
mov
jno
cs
std
or
pop
sbb
xchg
ljmp
fidivs
push
popf
inc
sbb
out
pop
xor
push
dec
lahf
mov
push
aam
lods
and
into
sub
faddp
cmp
pop
imul
and
ret
inc
add
icebp
fmuls
mov
out
popf
out
and
inc
mov
and
mov
xor
fidivrl
cmp
clc
jg
out
cmp
std
pop
xchg
adc
hlt
pop
adc
or
inc
mov
sbb
mov
pop
iret
pop
push
pop
movsb
xor
mov
jo
pop
pusha
jns
outsl
call
iret
nop
sbb
enter
xchg
cli
xchg
dec
mov
dec
mov
fmull
mov
ja
clc
jno
mov
and
jp
sbb
sub
and
scas
mov
lret
mov
frstor
cs
fisttpll
enter
ss
or
mov
sbb
ds
xchg
mov
js
mov
outsl
lret
sbb
mov
enter
negb
scas
mov
test
out
js
jp
lcall
sub
jno
mov
add
incb
mov
sbb
mov
scas
push
cmp
cs
mov
or
loop
insb
lods
mov
sub
mov
inc
cmp
ret
inc
fwait
inc
repnz
mov
movsb
pop
ds
mov
ficompl
mov
js
in
lods
out
push
mov
aam
les
enter
mov
sbb
cwtl
cmp
mov
lods
xor
adc
gs
pop
stos
mov
xor
jmp
insb
fcmove
in
ds
les
repnz
fidivrl
xchg
ljmp
mov
mov
enter
fdivrs
cld
sbb
mov
or
cs
or
out
adc
or
cmp
loopne
aam
paddb
fdivrl
sarb
lcall
inc
adc
pop
rcr
xor
cmp
decl
cld
mov
dec
jg
cmpsl
sbb
ds
jno
dec
push
ds
push
lret
xor
stos
int3
add
xchg
aas
push
xchg
ljmp
cmp
les
fdivs
cmp
cwtl
jno
dec
cs
lret
into
mov
lock
sub
dec
push
push
repz
xor
inc
pop
addb
xchg
notb
lods
fisubrl
jbe
mov
lods
and
shlb
addr16
push
ss
pop
mov
out
cmp
push
out
mov
lock
pop
jbe
mov
lret
fmull
jns
aas
inc
scas
out
jno
lods
dec
push
in
inc
insb
cmp
ss
inc
mov
stc
out
push
cmp
mov
enter
or
adc
nop
cmpb
add
push
push
stos
dec
fisubrs
ds
fdivrs
fwait
insl
push
cld
or
aad
mov
pop
out
push
lret
adc
loop
mov
sbb
jb
fdivrl
dec
lret
push
push
push
cs
addb
and
andl
stos
push
fwait
xchg
lock
mov
js
jo
daa
dec
push
sbbb
dec
pop
sbb
iret
sub
mov
bound
ret
iret
cmp
cld
cmp
in
push
ljmp
outsb
and
rcrb
push
fsubs
lret
jb
adc
and
jb
push
mov
sahf
push
enter
aas
sub
adc
push
lods
mov
in
and
movsb
inc
adc
repz
in
add
inc
xor
mov
inc
mov
or
int3
aas
fmulp
stos
cs
inc
add
dec
std
jg
mov
fsubr
mov
add
inc
outsl
fnstenv
sub
mov
mov
mov
insl
xor
rcrl
mov
das
push
lock
ret
and
out
sbb
movsb
in
mov
pushf
add
mov
iret
lods
test
movsl
adc
mov
push
scas
dec
mov
jp
pusha
xor
add
adc
mov
xchg
jnp
pop
mov
adc
imul
int
pop
jecxz
jbe
in
das
dec
js
sar
inc
and
push
push
jl
or
int3
ret
cli
hlt
xchg
dec
mov
pop
push
fcoml
les
mov
repnz
push
paddd
lcall
aam
mov
aas
scas
jg
pop
jl
xor
shll
xlat
fwait
fs
sbb
lods
cltd
fidivrl
aam
mov
ljmp
fwait
jb
mov
movb
push
ljmp
stos
das
mov
negb
cltd
scas
sar
cmp
repnz
lods
lret
in
movsb
out
fs
nop
add
shr
jo
add
jb
lcall
cli
mov
xchg
pop
adc
fwait
jp
push
mov
mov
or
fpatan
pop
mov
enter
pusha
cld
rclb
push
xor
add
mov
add
aad
scas
mov
divb
push
push
mov
xor
or
aad
or
jg
pushf
add
sbb
ljmp
adc
mov
mov
idiv
or
sbb
dec
ss
ds
nop
lods
push
add
sub
sahf
mov
into
test
js
push
cmp
dec
adc
mov
pop
fwait
daa
rcrb
pop
mov
das
outsb
fs
ret
imul
push
xlat
enter
cmp
mov
adc
sbb
into
es
jns
push
clc
fisubl
movsb
ss
sub
fcompl
lock
pop
inc
jnp
lock
sub
cs
xlat
nop
shrb
mov
lret
pop
push
and
mov
mov
or
pusha
popa
loope
test
daa
mov
and
faddp
jp
sarb
dec
mov
sbb
repz
aas
push
cltd
xchg
in
push
cld
sarl
adc
adc
mov
into
mov
out
aam
divb
adc
mov
sub
sbb
push
adc
fcomps
and
into
jg
leave
pop
or
daa
adc
pop
cmp
add
jg
test
push
hlt
outsb
cwtl
mov
ljmp
mov
enter
ljmp
and
mov
sbb
mov
lahf
ds
lock
das
xchg
mov
pop
cmp
mov
enter
outsl
adc
cs
int
aam
sub
int3
mov
test
imul
xor
mov
sahf
xor
lock
in
ficomps
shrb
fimull
jne
imulb
cs
sub
ror
jnp
and
cmp
fnstcw
mul
xor
sub
aaa
lea
pop
mov
loope
dec
mulb
and
jbe
mov
pop
or
aas
add
pop
repz
jg
mov
stos
orb
sbb
adc
sbb
movsb
stos
ja
int3
jmp
fidivrl
or
mov
sub
out
mov
push
adc
xchg
mov
into
inc
lock
hlt
cld
clc
cwtl
les
cmp
lods
pop
fwait
xchg
mov
cmp
push
pop
sbb
or
sbb
sbb
sbb
std
add
aam
jl
int3
fdivrl
pop
gs
or
fisttps
sbb
clc
mov
sbb
inc
out
out
int3
xchg
sahf
sarb
nop
mov
lock
adc
fsubrs
lahf
cmp
lods
push
mov
dec
outsb
hlt
arpl
or
mov
push
jle
stos
enter
mov
inc
aam
ja
lret
cmpsl
xor
fdivl
add
xchg
lret
rolb
pop
ss
adc
xchg
mov
rclb
in
into
sarb
jg
fs
and
adc
dec
out
pop
in
inc
inc
push
rorb
jo
subb
repz
enter
dec
adc
xor
scas
daa
nop
xor
cmp
mov
dec
insl
adc
mov
xor
nop
or
mov
push
lock
pusha
adc
rorl
js
mov
iret
idivl
mov
dec
out
hlt
dec
push
or
stos
mov
and
outsb
rclb
in
sub
mov
fsubl
inc
js
addb
push
mov
push
rcrb
and
lods
das
out
mov
inc
adc
lahf
push
push
les
out
lret
ffreep
sar
mov
scas
cld
add
jle
insb
push
xor
lcall
or
sarb
ret
out
pusha
lods
fdiv
dec
cmpb
lret
decb
aam
push
iret
add
sbb
pop
mov
cmp
cli
lea
mov
dec
mov
ljmp
push
add
mov
in
mov
shll
nop
or
sbb
rorb
mov
mov
cmp
scas
jnp
movzwl
cld
aad
pushf
pop
into
cmp
mov
jnp
xchg
jnp
mov
inc
mov
les
sub
push
pusha
ds
add
into
lods
sbb
or
push
push
mov
ret
fists
dec
iret
lods
mov
scas
and
aam
adc
push
mov
jmp
lea
movsb
dec
push
fdivrl
xchg
rolb
sbb
mov
stc
mov
es
leave
mov
xchg
sbb
inc
sbb
sbb
shlb
adc
and
sbb
ret
inc
pop
lret
cld
clc
mov
jno
inc
loop
test
sbb
fiadds
pop
ret
ds
xor
sbbl
add
shrb
out
xor
aaa
iret
adc
inc
cld
hlt
ficoml
xchg
loopne
xor
or
fdivrl
jge
aam
fcompl
mov
cmp
mov
push
repnz
mov
cs
lods
orb
inc
mov
cli
sbb
rclb
sbb
repnz
xor
mov
adc
mov
sub
cmp
fsubl
ds
xor
mov
sbb
and
jnp
aas
sbb
into
xchg
add
data16
xor
add
adc
scas
pop
push
lock
sbb
ja
mov
in
out
fidivrl
rcrb
mov
mov
sub
push
jecxz
cli
jg,pt
and
in
sarb
je
inc
daa
cmp
adc
cld
cld
xor
faddl
ret
lahf
aam
rclb
test
mov
inc
fadd
cmp
adc
mov
cli
mov
push
mov
out
mov
lods
adc
enter
mov
and
or
mov
add
adc
into
adc
loope
cs
sub
cmp
gs
cli
or
iret
xor
cmp
sub
mov
not
loopne
popa
push
cmp
push
push
mov
bound
fdiv
fpatan
jno
xor
mov
mov
hlt
mov
fnstsw
fiadds
adc
push
cld
mov
and
int3
ret
rcr
adc
add
mov
lods
neg
mov
les
adc
shlb
fidivs
repnz
or
pop
cs
or
add
jp
int3
xor
lds
adc
shlb
sbb
imul
xor
testb
jg
mov
dec
ror
dec
push
push
ds
sti
enter
adc
fcompl
mov
mov
scas
stos
jg
outsl
js
push
mov
add
adc
sbb
addr16
repz
into
hlt
lahf
int3
or
xor
bnd
enter
pop
mov
add
aas
lret
mov
pop
or
insb
cli
mov
mov
into
scas
repnz
pop
enter
adc
aad
cs
aam
sub
push
xchg
hlt
adc
add
mov
cltd
arpl
rorl
xchg
cmp
push
mov
in
jno
loopne
cmpsb
pop
repz
addb
shr
mov
fisttpll
stos
mov
out
cli
mov
or
mov
addr16
daa
lret
in
sbb
aas
negb
fcoml
inc
lret
addb
outsb
sbb
lock
jb
cmp
sbb
dec
fmul
mov
jg
fmul
push
mov
mov
into
push
inc
xchg
aam
ds
add
push
addr16
and
pusha
int
rol
clc
sahf
pop
or
cmp
in
mov
mov
mov
and
sbb
xchg
stos
stos
popf
in
adc
mov
xchg
mov
mov
sarb
sbb
aas
mov
ljmp
xor
sub
jmp
jnp
aas
shlb
mov
dec
or
mov
ficompl
scas
or
dec
jb
dec
jb
subb
sub
cmp
xchg
daa
ja
orb
mov
inc
les
dec
enter
nop
xor
nop
inc
ljmp
decb
sti
inc
ficompl
pop
mov
add
out
lcall
ljmp
ss
rcrb
ja
and
ds
and
cmp
std
mov
ficompl
scas
lds
or
sti
push
pop
sbb
iret
mov
rclb
ret
jp
cwtl
dec
stos
add
cmc
xchg
push
fwait
sbb
fisubrl
pushf
jge
cli
incb
adc
das
xor
mov
in
lret
jo
mov
xchg
add
shrb
repnz
inc
xor
xor
shl
in
arpl
lret
sarb
outsl
nop
mov
xor
cltd
mov
sti
mov
adc
xor
int3
in
sbb
fdivr
popa
xchg
mov
jmp
xchg
sti
push
lret
push
repnz
repnz
mov
out
cmp
scas
add
mov
stos
ds
fisubl
aad
push
int
test
cmp
ds
mov
int3
repnz
lods
loop
sbb
loope
sbb
imul
mov
and
mov
jno
jle
sbb
fwait
pop
dec
adc
pop
or
cmp
fistl
mov
push
mov
aas
pop
inc
or
pop
outsb
sarb
jo
sbb
das
pop
jo
ds
or
adc
dec
sbb
sbb
fdivl
xor
mov
sbb
inc
push
inc
scas
jg
fs
mov
mov
pop
in
orl
xor
icebp
xchg
loop
das
sahf
loopne
mov
fldt
or
mov
add
aaa
sbb
inc
adc
imul
arpl
or
scas
enter
lods
lock
rol
out
not
int3
xor
rcr
add
xchg
in
adc
lods
mov
ja
sbb
imul
fsubl
ds
aam
cs
lret
out
adc
cmpsl
iret
ss
xor
jb
mov
sub
pop
xchg
sub
lods
pop
push
out
das
push
mov
cli
fsubr
lahf
jbe
mov
ficoms
aad
adc
ret
jns
ljmp
jge
push
mov
or
enter
mov
cld
pop
in
movsb
and
adc
addl
jl
mov
adc
mov
add
fldt
xchg
stos
sub
mov
lds
sbb
sbb
adc
inc
iret
popa
cwtl
cli
lods
push
xor
pushl
xchg
xchg
sbb
push
clc
adc
sbb
cld
mov
sbb
ss
fsubrs
lahf
pop
into
ljmp
dec
sbb
rcr
sbb
clc
ja
sbb
push
rolb
mov
into
mov
not
mov
lcall
sbb
mov
or
lret
mov
sbb
fdivrs
cmp
add
les
mov
outsl
repz
mov
pop
xor
mov
push
sbb
cld
adc
stos
lods
xor
jle
ret
mov
das
lods
cmp
push
test
adc
es
mov
xchg
dec
cmp
nop
cli
hlt
sbb
xchg
push
adc
mov
xchg
push
fwait
mov
sbb
xor
pop
mov
cmp
cld
outsl
jo
jmp
aaa
sbb
adc
lcall
push
mov
int3
incl
add
and
push
sbb
push
test
outsb
mov
mov
jb
cli
xchg
and
repnz
add
or
aas
es
out
jne
xchg
and
bound
cmpsb
sub
ret
mov
push
cmp
sub
out
sub
or
xor
repnz
cld
xchg
jg
ret
dec
xchg
dec
les
ror
rcrl
movsb
pop
sarb
cwtl
mov
adc
insb
add
into
lods
push
ljmp
cli
mov
xor
aam
mov
les
hlt
push
fwait
in
push
sbb
push
adc
mov
mov
mov
push
cld
shlb
icebp
addl
cmp
mov
fcomp
inc
pop
or
jg
aas
cmpb
inc
scas
or
fs
aam
adc
or
mov
fildl
pushf
adc
rcrl
lret
nop
clc
fmuls
adc
arpl
inc
adc
mov
cmc
fs
test
lahf
jbe
lret
cmp
out
gs
shll
inc
mov
faddl
pop
mov
xor
fs
fidivrl
stos
scas
ja
in
out
add
xchg
cs
add
cmp
push
xchg
mov
xchg
sub
fdivs
and
cmp
lahf
inc
enter
sbb
cmp
mov
push
cmp
pop
push
jg
enter
inc
mov
or
add
push
add
and
xor
popf
push
ret
or
dec
xchg
pushf
sub
xchg
out
push
idivb
icebp
pop
lea
hlt
sub
out
cld
sarb
rcrb
fisubrl
cmp
les
mov
push
sbb
xchg
inc
mov
adc
mov
mov
push
sbb
rorb
adc
ja
cmpsl
sbb
ror
out
push
xchg
mov
aam
sbb
add
jge
add
bound
mov
mov
ds
andl
mov
les
cli
imul
cmpb
and
or
mov
ret
inc
sub
jb
xchg
dec
or
cltd
aad
out
xor
scas
and
inc
pop
negb
inc
mov
out
scas
out
sbb
inc
in
lods
sahf
lods
mov
mov
jne
insl
pushf
cs
mov
mov
sub
cltd
int3
sarb
cs
mov
push
push
cmp
in
clc
fisttps
add
pusha
or
mov
fidivrl
fsubl
add
mov
outsl
xchg
aas
jmp
fdivrl
aas
aas
cmp
inc
out
jno
mov
das
pop
push
xchg
adcb
out
mov
ljmp
dec
adc
cmpb
les
insb
test
ret
ficoml
lods
arpl
faddl
cmp
jnp
dec
jp
jbe
pushf
xchg
sar
lret
cltd
pop
cmp
pop
xor
fidivl
int3
mov
lret
push
scas
and
mov
sbb
push
add
add
out
mov
and
xchg
or
lock
fldcw
inc
cmp
dec
sbb
xor
test
fsubrl
sub
lds
sub
xchg
ret
out
scas
cli
test
cs
enter
adc
xor
mov
sbb
ds
das
int
cli
inc
fcmovb
mov
sub
jo
hlt
pop
dec
out
mov
outsl
iret
sarb
cmp
in
lcall
xchg
or
push
in
add
out
ljmp
sub
ds
sbb
cmp
ficoml
aam
xor
add
sub
add
inc
faddl
sbb
jnp
aas
cwtl
lahf
dec
into
int3
out
mov
sti
aas
adcl
ds
push
idivb
shlb
iret
pop
push
lret
jp
adc
mov
xor
pop
adc
and
in
scas
gs
hlt
out
jno
xor
fnsave
mov
test
out
mov
repnz
jb
xchg
lods
dec
jae
repnz
ss
mov
ds
xchg
add
push
and
popf
push
in
insb
mov
sbb
or
push
mov
test
lcall
fldl
rcrb
push
mov
sbb
add
scas
jbe
xor
pop
mov
sarl
lea
hlt
ffreep
jp
mov
push
xchg
adc
outsl
fsubrl
into
fdivrl
push
es
or
xor
fiaddl
push
sub
mov
xchg
add
sbb
out
clc
inc
add
add
and
ljmp
xor
adc
ror
mov
mov
sbb
into
fwait
daa
cmp
dec
push
mov
repnz
ret
cmp
outsl
repz
push
jp
pop
mov
rep
rcr
clc
fldt
or
jp
dec
push
push
sti
stos
repz
mov
jge
mov
or
adc
add
incb
sub
aaa
xchg
or
in
repz
test
pop
es
xchg
inc
or
mov
fdivrl
shl
popf
roll
ret
and
hlt
jp
mov
dec
push
inc
cld
aas
xchg
mov
adc
or
popa
pushf
mov
clc
fmull
pop
pop
inc
add
lods
pop
lret
out
cmp
xchg
into
mov
ret
mov
mov
dec
insl
out
aad
xchg
cmp
jne
hlt
sbb
xor
aas
notb
fsub
ljmp
fwait
mov
mov
mov
jns
dec
lea
mov
stos
sub
rolb
adc
cld
adc
ds
xor
lcall
mov
or
bound
push
jne
mov
adc
adc
out
mov
mov
idiv
inc
outsl
add
fdivrl
xor
outsb
decb
push
cwtl
and
mov
sbb
jnp
xor
mov
sbbb
xor
and
mov
idivb
add
push
mov
mov
jg
jg
call
mov
in
inc
ss
js
adc
lcall
imul
push
int
mov
repnz
push
ret
rcrl
lods
inc
lcall
aas
lock
out
pop
inc
sub
rclb
push
mov
popf
clc
mov
xor
pop
mov
leave
aas
gs
pop
adc
inc
fstl
idivb
mov
pop
aas
fcoml
push
ljmp
xor
pop
fisubs
js
aas
xchg
inc
cld
mov
inc
xchg
loop
out
xchg
push
xor
push
aam
push
lret
cmp
fcmove
scas
int
out
fprem1
jno
add
cs
jno
sahf
fadd
addr16
cld
mov
sbb
nop
cmp
add
stos
loopne
loope
sbb
int3
push
xor
mov
fdivrs
mov
cwtl
incl
scas
hlt
sahf
out
xor
dec
fadd
mov
or
fs
ss
daa
cmp
jp
pushf
lods
cmp
push
mov
sub
adc
lods
mov
mul
xor
inc
out
inc
mov
add
lock
dec
ds
cs
negb
hlt
loop
adc
fcomps
repz
xor
add
pop
into
add
mov
sti
out
lcall
into
add
aas
sbb
cmp
or
push
cmp
add
lea
xor
ljmp
cmp
mov
and
hlt
mov
pop
pop
or
xor
xchg
cmp
xchg
sahf
ret
or
fdivrs
mov
mov
pop
or
stos
mov
mov
add
push
fdivrl
xlat
mov
push
into
sbb
dec
sub
fisttpl
sbbb
and
loope
adc
pop
mov
mov
sarb
or
jnp
fsubl
add
adc
dec
cli
push
jae,pt
jb
xor
bound
es
arpl
cld
sarb
push
mov
xchg
pushl
sti
pop
and
out
add
mov
mov
push
lods
loopne
lds
ret
mov
mov
push
repnz
out
int3
mov
lea
shlb
sub
push
jbe
sbb
push
xor
mov
in
jg
lret
cld
mov
lods
imulb
movsb
leave
js
add
loopne
out
shl
popf
mov
push
jne
fcoms
add
xor
lea
pop
mov
lret
je
pop
xorl
movsb
fimuls
aas
std
aas
sbb
int3
jne
aam
les
nop
cmp
mov
xchg
pusha
js
subb
ss
cmp
mov
xor
fistl
add
push
icebp
movb
cmp
mov
arpl
enter
popf
lea
clc
stos
add
xor
cld
push
fidivs
sti
sbb
mov
mov
pop
out
mov
cli
pushf
lods
mov
xor
lret
sbb
leave
arpl
cmp
adc
mov
inc
xor
lods
sub
xchg
cmp
rcrb
add
inc
cmp
fists
cli
clc
mov
ficoms
mov
cld
sbb
sbb
adc
xchg
or
mov
mov
xchg
jns
push
ljmp
cmp
popf
push
mov
lds
mov
lcall
idivb
dec
scas
xchg
jo
lock
push
out
outsb
xor
jecxz
sbb
cmp
xchg
fnstenv
sub
push
jno
lahf
jg
mov
out
int3
mov
or
jnp
cmpb
add
inc
xchg
sarb
aas
pop
ljmp
mov
mov
ret
cmp
or
push
sbb
cmp
enter
mov
clc
cmp
int3
sbb
and
mov
rcrb
negb
mov
sti
fwait
adc
loop
into
mov
or
pop
mov
mov
subl
or
aas
cs
jp
mov
rorl
cld
movsb
or
add
xchg
cmp
int3
sbb
cmpsb
xchg
cs
shrb
jbe
mov
and
mov
cmp
rcr
int3
mov
cmpsl
and
aam
jge
nop
enter
lret
test
push
inc
rcll
cmp
clc
sub
dec
leave
fmull
sbb
aas
hlt
inc
fcomi
push
mov
push
xchg
movl
xchg
adc
sub
fdivrs
enter
pop
pushl
in
pusha
mov
notb
popf
mov
hlt
fs
sbb
mov
test
jp
lea
fwait
push
mov
mov
rorb
enter
test
flds
or
mov
popf
daa
in
push
inc
cmp
pop
xor
mov
and
les
pop
stos
out
mov
lea
sahf
fdiv
ljmp
pop
and
push
cld
into
push
pop
xchg
and
jg
int3
shrb
xchg
cli
mov
xor
lahf
jg
cs
testl
stos
jns
mov
mov
hlt
sbb
push
push
aas
xchg
cwtl
cltd
cmpsb
mov
aam
lea
or
sti
push
aaa
sbb
ror
mov
cwtl
mov
cmp
pop
cmpsb
lahf
stos
js
into
cli
sub
jl
adc
lds
lret
mov
shl
insl
nop
cmp
jg
out
imul
add
orb
fidivrs
cmp
xor
dec
push
and
cmp
sub
inc
mull
xor
fcoml
repz
sbb
nop
ss
mov
xor
int3
adc
loop
push
cmpsb
push
sub
inc
xchg
jg
jg
xlat
add
stos
dec
or
mov
cmp
cmc
inc
jp
xchg
fwait
mov
mov
mov
add
add
lret
sbb
gs
shr
ret
mov
pop
ss
shl
jno
or
bnd
mov
adc
cltd
add
cmpsb
inc
out
jns
out
gs
repz
sbb
jne
ficomps
ret
pushf
je
or
les
jle
rolb
movsl
sarl
fdivs
decb
out
xor
push
adc
in
sarb
clc
lods
scas
lcall
test
fsubrl
stos
in
or
jle
cmc
ficompl
or
mov
lock
pushf
ds
xor
mov
xchg
loope
push
enter
pop
add
lret
mov
lahf
or
mov
sbb
out
scas
xchg
jbe
xchg
ja
push
pop
ljmp
or
outsl
je
pop
arpl
lret
inc
mov
add
jo
insb
push
or
fistps
sbbb
out
in
loope
inc
js
clc
add
stos
roll
scas
sbb
scas
mov
in
mov
fwait
sbbb
add
xor
jo
sub
shlb
or
and
rorb
xor
sbb
sub
imul
sbb
or
inc
cmpsb
xchg
push
jb
cwtl
pop
divb
sbb
cld
leave
adc
call
mov
imul
adc
fiadds
or
ljmp
pop
shl
pop
int3
or
rcl
mov
ja
pop
aas
jbe
data16
jmp
push
pop
push
out
lcall
sbb
in
hlt
daa
andl
scas
or
mov
adc
jo
or
out
xchg
cmp
mov
xor
fdivrs
mov
int3
push
mov
rcrb
mov
add
stos
repnz
shr
and
js
iret
aaa
mov
sahf
or
lret
movsb
fistpl
pushf
add
push
stos
cmp
adc
clc
inc
fsubrs
mov
push
mov
rcrb
push
push
sbb
fmuls
xchg
or
ret
push
repz
in
repnz
fisubrs
lret
loope
sbb
or
pop
sbb
rol
fdivrs
xchg
sahf
fldl
adc
jp
push
stos
push
dec
cmp
mov
fdivrs
and
xchg
cmp
cld
lret
xor
or
or
xor
jns
pop
jbe
push
or
inc
push
mov
pop
add
lret
scas
and
jns
fnstsw
data16
mov
xchg
fcmove
mov
mov
mov
xchg
xor
pop
movsl
or
sbb
lods
ret
mov
adc
jmp
sbb
enter
mov
dec
sbb
movsl
xchg
arpl
iret
add
cltd
testb
jb
cwtl
push
sbb
addr16
orl
and
sahf
xor
shlb
fs
mov
aam
mov
mov
sbb
cld
ret
sub
add
add
xlat
clc
pop
and
adc
cmpsb
sub
adc
fdivrl
inc
outsl
rep
sarb
ljmp
xchg
mov
mov
adc
cmp
sbb
ret
dec
mov
sbb
lock
xor
push
add
mov
cmpsl
mov
push
aam
out
and
cmp
sub
rcrb
inc
pop
lock
dec
pop
lds
lea
cmp
pop
shlb
out
sub
lcall
ds
cld
lods
mov
push
shlb
jg
mov
xor
cmp
jp
pushf
cwtl
mov
idivb
inc
push
adc
push
mov
fsubrl
cld
mov
out
mov
dec
push
push
fcoml
daa
jb
jle
mov
mov
adc
mov
movsl
or
xor
inc
cld
sub
mov
and
mov
bnd
adc
push
push
jns
aam
fisubl
xor
outsb
enter
orb
movsb
loop
and
mov
insl
js
negb
push
enter
insb
mov
je
bound
xor
loope
push
mov
lret
dec
xor
add
imul
mov
sbb
pop
stos
test
pop
mov
sub
mov
cltd
cmpb
ds
or
mov
mov
out
cmp
les
nop
addr16
push
mov
inc
mov
add
pop
sti
dec
jp
jb
rorl
imul
fdivr
mov
jnp
cmp
loop
mov
or
mov
ds
nop
dec
sbb
fcom
lock
jnp
filds
push
imulb
jns
outsb
fcoml
ljmp
cmp
pop
test
pop
rclb
inc
repnz
mov
cmp
rclb
aas
scas
push
adc
adc
lcall
sub
sub
fdivr
fwait
push
lods
inc
addr16
push
repz
mov
inc
out
insl
es
ljmp
mov
rclb
jle
mov
ret
out
mov
lcall
add
push
and
pusha
hlt
ret
dec
jo
inc
add
push
mov
ljmp
cmp
mov
js
jb
dec
subb
icebp
xchg
cld
add
adc
movsb
cmpsb
mov
xor
hlt
sbb
xchg
lds
or
push
insl
push
sub
or
sub
dec
inc
fidivl
push
mov
cwtl
cmp
fmull
aam
inc
js
js
xchg
test
ror
mov
test
jecxz
xchg
pop
add
enter
adc
cmp
scas
das
nop
aad
xchg
mov
call
sbb
xchg
sub
pushf
xor
les
into
pop
and
lods
cmpb
xor
jnp
mov
mov
mov
nop
cld
or
mov
mov
lods
mov
hlt
sub
and
ss
or
xor
or
lahf
cmp
pop
cmp
dec
adc
clc
hlt
sbb
dec
rcr
xor
push
scas
btr
cmpsl
mov
cli
stos
fwait
push
scas
fldlg2
jge
neg
in
loope
clc
mov
ljmp
pop
xor
pop
pop
sbb
in
add
ds
xchg
push
clc
sbb
mov
sbb
daa
iret
inc
cwtl
push
push
or
out
fidivrs
les
out
fcoml
jle
or
add
mov
mov
in
push
pop
fstp
sbb
cli
into
adc
das
add
lret
decb
aas
xchg
fstpt
fcoms
pop
adc
fcmovbe
jg
fs
enter
mov
xchg
div
or
iret
aam
lea
lcall
in
ret
rorb
lods
push
mov
mov
pop
mov
into
mov
incb
fcoms
scas
pop
push
ds
mov
add
add
inc
les
mov
test
push
ss
mov
fdiv
cli
lret
mov
out
hlt
aas
and
xor
xchg
add
dec
inc
and
jns
lods
add
sbb
push
rclb
rol
jg
sbb
xor
repnz
inc
xchg
aam
imul
jne
pop
bound
cli
js
sub
and
test
push
sub
push
push
mov
mov
add
xor
dec
enter
inc
sbb
imul
mov
das
fcompl
repnz
aam
dec
fucomi
add
adc
in
fucomi
lcall
xchg
or
xchg
hlt
scas
lret
lcall
lcall
jmp
dec
xchg
pop
pushf
fldl
sbb
mov
test
jmp
rcrb
rcll
add
ret
or
js
je
call
aam
mov
sbb
and
mov
inc
sbb
scas
pop
adc
test
or
fdivrl
incb
and
cmp
push
mov
lds
sub
pop
fwait
imul
mov
mov
sbb
xchg
cli
stos
xchg
dec
repnz
lea
mov
mov
mov
stos
xchg
cmpsl
dec
stos
cmpsb
pop
sbb
lock
jae
sbb
inc
enter
or
lret
data16
lock
xorl
push
loop
pop
aaa
fimull
nop
sarb
or
out
addr16
fdivrp
xchg
push
sbb
or
sbb
repz
sarl
cmpsl
incb
xor
or
sti
or
scas
f2xm1
adc
mov
mov
nop
out
cmp
add
sbb
mov
dec
pop
inc
fcom
les
je
or
ficomps
out
sbb
push
iret
enter
test
push
das
push
push
ret
cmp
stos
lret
shlb
or
fwait
sbb
add
jae
mov
fisubrl
mov
out
jbe
stc
or
pop
es
clc
cmp
dec
scas
les
pop
cld
adc
sbb
data16
fwait
mov
outsb
sub
scas
jne
in
dec
mov
ret
or
scas
les
mov
fsubr
push
cmp
pop
out
adc
push
xchg
shlb
adc
repz
mov
ds
inc
mov
lcall
sbb
dec
cmpsl
mov
dec
popf
and
repnz
dec
adc
mov
adc
icebp
jb
and
xchg
out
mov
sbb
rclb
lahf
pusha
lock
lret
loop
adc
jle
lds
stos
outsl
jno
mov
add
clc
nop
ret
cmp
pop
adc
sbb
or
into
and
jp
sahf
test
adc
push
mov
push
out
sub
inc
ss
push
mov
jbe
xor
lret
xor
push
and
cmp
js
or
das
inc
addb
xor
out
lret
mov
addl
sbb
pop
arpl
repnz
cmp
dec
ret
cmpsb
int
gs
inc
or
inc
cmp
fs
ljmp
movsl
xlat
fdivrl
movsb
push
mov
fstpl
adc
lods
ljmp
or
adc
jg
mov
enter
stos
sub
cmp
inc
addr16
sbb
repz
cmp
fidivrl
mov
ret
push
loopne
ljmp
mov
pop
jne
outsl
adc
scas
lock
sbb
xchg
mov
movsb
rol
fbstp
stos
out
push
sbb
mov
mov
push
sbb
mov
les
mov
mov
jg
lret
mov
lea
cld
mov
push
rclb
xchg
sub
sub
push
sbb
cmp
dec
mov
loope
mov
jge
jbe
ds
js
sbb
adc
cli
inc
addr16
and
add
pop
out
roll
xchg
ja
mov
inc
out
les
sub
test
push
pop
loope
mov
out
sub
mov
dec
dec
mov
add
ljmp
insl
clc
or
test
inc
mov
sbb
or
pop
fisubrs
cs
xchg
sarb
mov
cmp
outsl
add
xor
mov
mov
orl
repnz
dec
xchg
shrb
adc
mov
faddl
fidivrs
enter
mov
mov
add
cmpsb
repnz
mov
pop
xchg
mov
negl
pop
shl
js
mov
nop
fsts
mov
xchg
xlat
rclb
push
mov
cs
pop
jb
jp
mov
sbb
jb
adc
aas
add
jbe
insl
les
lcall
mov
mov
js
shlb
adc
in
das
adc
das
push
rcr
xchg
enter
dec
notb
repz
mov
cmp
xchg
push
repz
lcall
cltd
mov
push
fmuls
jno
mov
mov
fsub
outsb
push
cmp
js
inc
xchg
jle
xor
stos
or
sahf
ds
mov
adc
push
gs
sub
int3
clc
cwtl
push
or
sbb
sbb
daa
stos
add
in
into
xor
xchg
add
mov
mov
rorb
lods
mulb
xor
in
stos
cmpsb
sub
mov
call
clc
addr16
cmp
xchg
xchg
inc
dec
mov
lock
scas
fdivs
push
daa
add
mov
mov
pop
xchg
cmpsb
adc
push
and
push
mov
cmpsl
lret
outsl
mov
mov
mov
ljmp
cmpsl
or
add
aam
jg
inc
lods
int3
inc
xor
cltd
test
inc
xchg
enter
leave
aad
cmp
pop
mov
das
add
add
push
int3
cli
sbb
mov
inc
mov
lret
mov
sub
ljmp
nop
adc
loope
cmp
aam
nop
push
repnz
lret
push
ss
mov
xor
add
sbb
sub
movsl
mov
jmp
fwait
outsl
nop
test
dec
ds
adc
addr16
icebp
addl
push
in
test
dec
cmp
push
fadds
mov
xor
add
cli
pop
jns
cld
testb
mov
add
rcrb
cmp
xor
in
xor
mov
cmp
clc
stc
sti
push
fcmovb
mov
mov
push
imul
lds
in
stos
or
repnz
xchg
add
shlb
sbb
scas
sbb
inc
sbb
das
mov
sbb
mov
or
mov
fdivl
mov
jae
dec
ljmp
adc
mov
or
loop
sbb
imul
inc
push
lret
repnz
jl
mov
aad
iret
xor
or
dec
cmp
pop
movsb
inc
xor
mov
mov
les
loopne
dec
xor
or
mov
repnz
push
call
inc
shll
fs
rclb
adc
or
in
out
xor
inc
push
sbb
rcrl
dec
sbb
jecxz
pop
jae
jg
sbb
push
mov
lret
mov
or
aam
les
or
mov
inc
mov
ret
cltd
push
decb
mov
sbb
fwait
mov
fbstp
sbb
and
gs
xchg
adc
add
or
in
lcall
scas
mov
pushf
into
push
cld
mov
shrb
fcomi
arpl
arpl
lahf
dec
lods
or
notb
cli
xchg
and
mov
stos
jne
scas
sarb
lahf
arpl
gs
loopne
inc
jg
scas
dec
addr16
xor
xor
xor
daa
sub
fwait
or
fsubl
sbb
mov
sbb
test
ja
lock
cmp
aaa
mov
sbb
into
mov
aas
cmpsl
or
mov
lock
in
stos
adc
push
jno
mov
xchg
ss
pop
outsl
insl
out
loopne
mov
add
sarb
or
es
inc
cmp
aas
call
outsl
sbb
in
in
fbstp
mov
repz
shlb
and
mov
pop
xchg
lret
xchg
mov
mov
out
mov
in
insl
movsl
stc
push
pusha
or
adc
sbb
mov
or
addb
fiaddl
shrb
or
jp
les
jo
inc
test
pop
ret
fsubr
adc
cmp
sarl
out
xlat
lcall
int3
mov
ds
or
adc
push
adc
jg
add
fcmove
fcompl
ret
inc
nop
aas
add
sbb
mov
push
sbb
xchg
xchg
into
and
jb
fnsave
daa
mov
lret
mov
aam
lods
add
adc
mov
sbb
test
cmp
roll
cmp
cltd
sub
jbe
imul
dec
stos
mov
outsl
mov
fwait
sbb
or
cmpsb
inc
sbbb
movsl
inc
test
adc
mov
jo
stos
sbb
aam
repnz
adc
mov
das
or
lock
push
push
add
nop
fsubrl
xchg
out
and
ja
dec
fstpl
add
mov
fidivs
dec
jnp
jg
push
add
or
fidivl
sub
sub
mov
push
popf
push
test
out
jbe
push
outsb
cs
cmp
out
mov
sub
sub
lock
sbb
mov
insb
sbb
xor
ret
std
fs
addr16
stos
fwait
out
test
stc
notl
ficoms
dec
iret
mov
cmp
xchg
lahf
pop
ds
cmp
pop
mov
imull
rorl
cmp
mov
mov
mov
fidivrs
and
mov
xorb
mov
inc
jnp
data16
lds
out
repnz
aas
into
pop
cmp
dec
push
jmp
ljmp
pop
loopne
pusha
xchg
jb
sbb
out
pop
aam
mov
test
push
fdivrl
clc
pop
lret
cmp
jmp
rcll
mov
mov
mov
add
and
fdivp
mov
adc
lock
push
sbb
jne
mov
pop
pop
push
inc
adc
jmp
pusha
hlt
sbb
inc
rclb
cmp
push
mov
or
inc
sub
adc
adc
and
cmpsb
mov
ds
mov
cmp
push
ret
incb
sbb
outsl
in
out
scas
xor
xchg
repnz
jmp
or
mulb
out
inc
add
cwtl
cli
push
adc
cs
mov
mov
add
push
mov
scas
icebp
lcall
mov
ljmp
mov
inc
fs
mov
loopne
ss
mov
xchg
mov
rclb
xchg
adcb
mov
pop
fdiv
pop
xor
dec
inc
adc
inc
scas
xor
ret
mov
mov
sbb
data16
add
adc
push
rol
test
loop
inc
add
xchg
in
cmp
xchg
sbb
movsl
out
rolb
aaa
cs
xor
enter
or
mov
and
sbb
mov
or
enter
ljmp
lret
pusha
push
jnp
cwtl
jl
hlt
dec
xor
addr16
ret
lret
lret
into
sbb
call
cmp
cli
fmul
mov
out
add
roll
ljmp
int3
sbb
cmp
pop
nop
push
ljmp
inc
jge
sbbl
ficoml
stos
add
jp
ret
adc
adc
mov
or
add
js
repnz
or
cli
into
lea
inc
cwtl
sahf
scas
sbb
xchg
jb
push
mov
cltd
fcoml
inc
in
mov
fadds
jb
pusha
push
imul
jbe
repnz
xchg
das
cltd
pop
scas
xchg
scas
add
lock
pop
xor
outsl
mov
test
lods
xchg
cmp
in
sbb
fiadds
xor
push
inc
or
xchg
ljmp
xlat
rolb
pushl
popf
adc
mov
mov
lcall
lock
or
push
repnz
rcll
stc
data16
mov
stos
lcall
fcoms
mov
add
popf
sub
clc
add
ds
sarb
cld
arpl
inc
and
ds
rcrb
push
mov
mov
mov
xchg
dec
lods
lret
js
mov
lock
pop
adc
push
sahf
push
inc
ret
scas
xor
lret
scas
mov
mov
rclb
sub
in
rorl
shlb
mov
daa
hlt
fsubr
mov
xor
gs
iret
adc
dec
pushf
xor
mov
cld
in
dec
cmp
jle
outsl
adc
cmpl
sbb
pslld
mov
mov
popa
and
push
les
lods
fdivr
addr16
lods
dec
mov
mov
push
into
mov
cmp
sub
sar
ss
dec
lods
mov
mov
sbb
rorb
cltd
ret
push
fmul
aam
mov
mov
xor
lods
int3
bnd
jl
push
mov
cmp
fcompl
fstp
aad
cmpsl
fistl
adc
mov
into
lock
mov
push
int3
sbb
sub
repz
fmul
pop
imul
mov
mov
mov
outsl
cmp
inc
xchg
mov
sbb
push
cmpsl
stos
incb
addr16
rclb
cmp
adc
xor
ds
mov
jb
inc
adc
in
clc
lcall
les
lock
cmpsb
cmp
xor
idivl
lds
fildll
in
jge
ss
scas
xchg
aas
out
pop
js
lods
sbb
sahf
mov
cs
rcr
ret
in
aas
lret
out
mov
ficoms
add
cmp
cmp
mov
std
sub
movsl
fwait
mov
out
fs
rcll
dec
adc
add
enter
jle
cs
lock
cmp
lret
jno
es
fwait
out
adc
into
mov
sub
sahf
adc
aas
inc
aas
push
popa
fnstcw
mov
cmp
jge
enter
out
sbb
xor
add
cwtl
xchg
fsubr
push
lods
xchg
lock
sbb
mov
sbb
dec
dec
xor
pop
dec
adc
mov
fdivl
sarl
into
nop
jno
cmp
scas
clc
jnp
sbb
dec
add
lods
fnstsw
repnz
sbb
shrl
clc
fdivr
pop
push
add
mov
aas
sti
push
or
arpl
fidivl
enter
mov
repnz
mov
pop
outsl
mov
popa
out
loop
xor
add
sbb
sbb
cltd
sub
int
adc
sti
mov
int3
lock
cmpsb
mov
pop
jb
pop
hlt
cmp
cmp
into
rclb
add
sbb
cwtl
lods
mov
or
out
mov
push
mov
cld
loopne,pt
shr
lods
sbb
adc
ss
movsl
mov
and
cs
out
cld
push
out
mov
jge
and
adc
out
xlat
mov
test
add
add
or
scas
ret
jle
pop
xor
scas
pop
stos
enter
xor
lods
in
jbe
lods
or
cs
pop
adcl
jne
dec
arpl
ds
shlb
les
into
enter
iret
push
int
xchg
ret
repnz
pop
mov
dec
std
shr
cmp
add
enter
sbb
xchg
fadd
hlt
push
cmp
adc
xor
cmp
cmpsb
mov
shlb
lds
mov
aaa
das
push
test
inc
jmp
shrb
lock
lods
cs
mov
hlt
mov
out
sub
mov
adc
mov
and
rclb
dec
sahf
inc
cmp
fcoml
pop
shlb
inc
enter
subb
adc
push
les
lods
fisubrs
ret
mov
inc
sbb
mov
sbb
sbb
mov
lret
hlt
cmp
mov
push
fsubl
push
cmpsl
fimull
out
mov
loopne
xchg
aam
lret
jmp
mov
dec
inc
sbb
loope
std
rcr
enter
out
ds
imulb
outsl
mov
mov
mov
mov
mov
mov
fsubrs
cmp
and
xor
andl
aad
mov
inc
mov
sbb
je
cmp
sbb
rolb
int3
scas
add
aas
xchg
xor
add
adc
dec
out
cmc
push
push
xor
push
pop
inc
cmp
jmp
or
int
dec
pushf
scas
shr
stos
cmp
fsubl
add
add
loope
enter
dec
mov
sub
pop
mov
push
or
imul
xorl
mov
in
mov
add
xchg
mov
shlb
mov
inc
push
xorl
push
lret
jns
cmp
icebp
add
xchg
dec
adc
inc
mov
js
cld
mov
lahf
cld
add
add
stos
rcl
sbb
enter
lods
pop
cmp
outsl
outsb
push
add
push
push
adcl
sbb
xchg
mov
pop
mov
sbb
mov
fs
cmpl
mov
out
lea
push
shl
push
or
data16
jmp
loope
adc
not
test
out
cli
into
js
enter
mov
lods
dec
jbe
test
mov
out
inc
ss
mov
aad
dec
and
movsb
nop
cs
add
sub
lret
cld
sbb
unpcklps
add
pusha
xlat
ret
jns
inc
pushf
push
or
ljmp
les
inc
adc
xor
add
cmc
aam
in
xor
xor
mov
clc
cld
pop
aad
pop
push
ss
arpl
cli
fmuls
int3
and
or
inc
cs
xor
insb
sbbl
cld
mov
clc
bound
mov
insl
rclb
cmp
out
jmp
mov
push
in
in
add
cli
scas
jmp
xorl
popf
adc
sub
xor
fildll
negb
popa
fdivl
inc
popf
dec
cld
mov
push
push
repnz
fistl
mov
jb
mov
dec
pop
sbb
xor
sarb
mov
aam
xor
mov
ljmp
lods
in
bound
jle
xor
js
or
xor
jae
add
int3
or
sbb
sbb
push
faddl
jb
pop
fs
ljmp
sub
fsubs
push
xor
mov
xor
outsl
ret
scas
xor
sbb
aas
push
jg
popa
sbb
cmp
lods
clc
leave
dec
pusha
sub
mov
mov
jp
mov
outsl
aad
xlat
lock
scas
sbb
dec
sbb
xchg
pop
xchg
jne
outsl
mov
adc
aaa
xchg
push
frstor
inc
divb
xor
scas
aas
inc
xor
mov
stos
arpl
and
fmull
lahf
sbb
or
clc
push
or
pop
mov
subb
clc
sbb
mov
out
into
clc
nop
fdivs
into
repz
outsl
pop
loopne
fists
nop
mov
jmp
js
cmp
cmp
cmp
out
or
ljmp
ret
mov
and
daa
pop
aas
xchg
inc
cld
mov
ficoml
or
lock
fists
push
sbb
pop
xchg
pop
adc
shlb
or
rorl
sub
adc
cwtl
xor
shrb
ss
outsl
mov
xor
xchg
imul
loop
xor
push
mov
adc
aas
add
sbb
lods
addl
xchg
pop
add
and
mov
fdivs
add
and
push
cmp
dec
jp
sub
sub
pop
xor
ss
incl
cmp
cmp
adc
stos
fadds
cmpl
pop
into
and
sbb
cltd
js
mov
enter
rol
jecxz
or
stos
daa
mov
sub
hlt
jg
out
xor
adc
sahf
pop
mov
inc
inc
repnz
push
mov
repz
rcr
push
imulb
aas
pushf
decb
add
xor
scas
push
push
mulb
mov
adc
fnstsw
hlt
cmp
fbld
sub
clc
mov
xor
mov
mov
adc
xor
rcll
push
xchg
and
pop
jp
cmp
mov
aas
jmp
out
push
mov
xchg
rol
sbb
lock
fmulp
push
sbb
enter
int3
into
mov
shr
xchg
xchg
ss
and
popf
pop
insl
jg
jo
or
aas
adc
jo
push
into
pusha
loop
xor
aas
outsb
add
test
sbb
cld
movsl
push
inc
ljmp
aaa
push
into
mov
dec
sar
mov
xor
jnp
sub
clc
pusha
ss
sbb
mov
in
mov
fisttpl
push
sbb
mov
jg
xor
cmp
les
lods
pop
or
fcoml
mov
dec
xor
cmp
cmp
cli
mov
div
jo
mov
aam
outsl
scas
adc
lock
repz
shlb
or
sbb
popf
into
fs
add
sub
mulb
cwtl
adc
cmp
xor
cwtl
out
sarb
jecxz
or
data16
bound
adc
sub
mov
aam
and
stos
ret
adc
inc
out
mov
into
adc
adc
sub
addr16
or
cmp
jp
stos
data16
mov
add
sub
mov
lret
jnp
fcompl
js
outsb
adc
mov
data16
stos
cmp
repnz
sbb
push
mov
fdivrl
xor
mov
incb
fwait
or
xchg
ss
fstpl
or
mov
daa
iret
mov
sbb
pop
mov
stos
xchg
outsl
fdivrs
cmp
fsubs
mov
dec
aad
loopne
iret
aad
pop
mov
lahf
xchg
or
in
outsl
imul
pop
sub
mov
faddl
pop
andl
sub
fistl
jns
ds
jo
ret
push
test
push
aaa
js
cmp
or
test
repnz
decb
jg
ds
dec
dec
push
and
mov
cmp
fstpt
popf
mov
shl
inc
addr16
xchg
pop
sbb
mov
sbbb
push
xchg
mov
sbbb
dec
dec
sbb
data16
rorl
mov
aas
outsb
mov
adc
adc
pop
jnp
lret
das
jb
clc
mov
scas
fwait
mov
jmp
adc
sbb
sbb
push
into
testl
int3
cmp
dec
mov
sbb
call
pushf
xor
testb
fisubs
out
mov
sub
out
addb
push
dec
inc
stos
ljmp
lods
xor
fiaddl
sbb
rcrb
or
ss
scas
aas
aad
xor
cmp
mov
scas
ret
mov
cmp
scas
out
inc
enter
pusha
fcoms
mov
push
sub
add
fmuls
cmpsb
mov
movsb
jb
adc
into
adc
mov
dec
push
mov
push
fisubrl
pop
jge
fsubrl
shlb
out
shll
insl
pop
add
jb
push
mov
xor
fdiv
ds
ficomps
inc
clc
xor
in
xor
cld
sbbl
xor
adc
pop
rclb
jmp
or
and
mov
inc
mov
ljmp
pop
repnz
into
shll
ss
fstp
stos
int3
mov
jmp
push
push
and
sbb
mov
inc
xor
cs
mov
ret
jo
and
xor
add
out
into
mov
es
ret
xor
inc
loop
push
cld
ret
or
adc
mov
add
push
add
inc
or
and
das
cmp
and
cmp
mov
lret
orb
xor
cli
loop
mov
fiadds
mov
sbb
lcall
out
inc
add
pusha
mov
adc
adc
hlt
mov
mov
repnz
jbe
or
inc
mov
fcmovnbe
pop
hlt
add
jg
mov
mov
inc
pop
repz
out
mov
scas
mov
cmp
faddl
dec
ds
pop
mov
lcall
ret
hlt
dec
orb
lods
jmp
int3
or
mov
adc
nop
in
ds
mov
dec
aaa
pushf
sub
fcomp
sbb
mov
repnz
int3
mov
lcall
inc
add
mov
xchg
mov
xorl
pop
lea
test
pop
stos
or
jp
adc
dec
xchg
cs
scas
lahf
sbb
add
pop
scas
icebp
fwait
cmp
push
je
push
adc
jmp
push
aas
mov
mov
xchg
add
and
mov
lods
push
xor
mov
inc
mov
push
add
sbb
addl
in
adc
ds
out
jbe
scas
add
inc
xor
pusha
mov
in
xchg
push
hlt
stos
pop
or
add
cmpsb
xchg
inc
pushl
stc
mov
mov
mov
test
sbb
sbb
stos
mov
xchg
scas
scas
xchg
and
fcoms
fs
xlat
mov
push
ss
dec
inc
jno
push
enter
mov
xor
mov
mov
adc
das
cli
pop
mov
dec
mov
and
repnz
pop
test
out
popa
fcmove
lds
adc
mov
cmp
xor
adc
filds
cmp
mov
sbb
inc
jno
mov
fwait
mov
bsf
hlt
arpl
lods
fisubrl
dec
sub
cmp
ds
ljmp
add
inc
fisubrs
and
dec
out
stos
dec
xchg
mov
or
ss
aam
ds
cli
xchg
sbb
dec
jbe
out
push
lea
mov
and
idiv
aam
add
fwait
data16
jns
xor
push
xor
pop
and
cmp
mov
jo
sbb
das
cmpb
nop
rorb
out
inc
cltd
dec
xchg
lret
push
lret
adc
out
sbb
mov
out
dec
mov
clc
mov
stos
add
sbbb
enter
add
dec
sub
cmp
fiaddl
cmp
sub
adc
ds
fisttpl
leave
push
inc
and
push
decb
les
mov
push
int3
inc
popf
xchg
mov
jb
inc
aam
push
std
jo
xchg
loope
mov
push
lret
lahf
inc
int3
xor
mov
inc
or
add
mov
cmpsl
popa
lcall
ficompl
cs
sarb
xor
lea
push
lock
cmp
nop
mov
enter
mov
adc
push
jecxz
mov
les
scas
int
lds
pop
fadd
dec
mov
jae
or
outsl
adc
pop
popa
fbstp
aam
push
repz
inc
pop
add
add
fdivs
inc
jle
ss
adc
and
fsub
pop
adc
sbb
dec
jae
enter
xor
ds
into
xchg
push
xchg
daa
lods
ljmp
and
into
cmp
fisubrs
ret
ss
mov
lahf
mov
fadds
loop
inc
xor
push
xchg
jecxz
cmc
jnp
and
mov
ljmp
lock
mov
mov
xorb
in
and
fwait
lcall
sub
mov
add
push
clc
mov
cmp
lods
xor
out
test
add
jae
mov
add
movsb
sarb
sar
push
cmp
popa
test
add
cld
push
cs
xor
clc
xchg
mov
mov
out
ss
fmuls
pop
push
ret
negl
out
ja
idivb
inc
incb
decb
adc
xor
sbb
jo
lods
stos
mov
mov
adc
mov
adc
inc
cmp
aad
mov
sbb
pop
jae
ljmp
out
or
pop
push
sub
cs
adc
test
js
sbb
mov
fwait
stos
fmull
shrb
in
lds
xchg
mov
add
sbb
adc
inc
add
push
les
lods
push
jp
rorb
xchg
push
mov
cmp
jmp
lret
jnp
cmp
ss
adc
int
sahf
es
or
aam
push
xchg
sub
enter
cmpsl
sub
add
jp
jbe
out
stos
add
cltd
sbb
daa
popf
nop
xor
adc
int3
xchg
loop
addl
sbb
pop
test
fimuls
sub
sarb
lahf
ljmpw
ja
lods
push
pop
pop
push
inc
jecxz
push
scas
fs
adc
sbb
adc
stos
jns
cmp
mov
stos
and
push
loope
pop
lcall
jecxz
bound
lock
xchg
dec
or
or
cmp
dec
xchg
addb
movsb
test
pushf
dec
lcall
loope
or
fadd
pop
cmpsl
add
mov
stos
mov
sbb
pop
mov
mov
repnz
sub
test
fsubl
repz
enter
mov
out
and
sub
out
stos
cld
mov
sub
lods
fdivrs
rorb
cmpsb
aam
sbb
pop
jmp
lds
pusha
inc
add
mov
in
xor
cmp
daa
lcall
addl
sub
iret
inc
mov
outsl
repz
fisttps
aam
lret
fidivrl
fists
lods
mov
mul
shlb
scas
push
data16
repnz
mov
adc
mov
in
cmp
mov
push
cmp
pusha
lret
into
jnp
xchg
roll
leave
sbb
add
jg
and
aaa
add
and
movb
dec
push
cmc
sbb
mov
sub
mov
cmp
jle
cwtl
nop
hlt
ljmp
out
lahf
jns
sbb
stos
ds
shlb
bound
mov
dec
fldenv
into
dec
xor
sbb
out
les
ret
lods
cmp
stos
aam
ja
mov
adc
aas
hlt
inc
jg
push
enter
push
inc
out
xor
xor
jne
lret
mov
sbb
hlt
and
pop
mov
mov
add
sub
mov
out
fildll
xchg
fdiv
lods
adc
cmpsb
nop
jne
cmp
icebp
dec
cltd
dec
lods
mov
push
fucomi
insl
xchg
sar
mov
lods
scas
cmp
into
ret
push
mov
push
adc
cmp
cwtl
fcmove
xor
out
mov
sbb
sub
xchg
sub
addr16
call
sbb
aam
and
inc
xor
insb
call
mov
adc
mov
pop
mov
incb
cmp
adc
ss
or
movsb
pop
add
or
loop
inc
test
and
ja
mov
dec
pop
addb
ljmp
mov
stc
hlt
aaa
xchg
les
iret
pop
jg
sbb
or
and
jns
out
test
enter
leave
int
fidivrs
mov
and
push
fcompl
sbb
cmpsl
lret
mov
cld
xchg
fnstenv
in
cmp
push
jbe
hlt
rcrb
mov
rorb
sbbl
lods
inc
rclb
fs
sti
fimuls
mov
dec
lock
das
movsb
mov
mov
out
lea
sbb
lods
push
push
inc
pop
add
inc
xchg
popf
pop
cmp
clc
repnz
lret
idivb
lcall
scas
stos
movsb
xchg
int
les
pop
xor
mov
rol
rclb
lods
faddl
and
out
xor
and
outsl
into
cs
stos
xor
mov
xor
or
idivb
mov
mov
decb
inc
fsubrl
push
fsubrl
fdivl
push
iret
in
xor
and
mov
push
adc
lret
inc
daa
mov
cmp
sahf
pop
mov
mov
sar
pop
pop
rcrb
cltd
ret
sbb
pop
mov
clc
sahf
adc
or
into
push
add
xchg
xchg
mov
daa
xchg
loop
cli
in
cmc
mov
cmpl
mov
inc
mov
add
mov
cs
aas
out
fildl
das
adc
js
les
or
inc
stos
lret
fwait
mov
xchg
and
cld
lods
loope
xchg
cmpsl
aas
add
rep
lcall
and
mov
adc
shlb
jae
jno
fldenv
mov
stos
xor
jp
popa
popa
pop
adc
push
aas
sbb
xor
fisubrs
out
iret
or
ret
lds
sbb
mov
shl
xchg
or
cmp
mov
jmp
and
js
andb
xor
mov
jno
jb
fs
arpl
add
out
or
jno
inc
mov
pop
push
repnz
les
xor
xchg
mov
and
push
sahf
insb
repz
stos
fisubrl
repnz
adc
add
mov
cltd
repnz
aas
push
fmul
outsl
daa
pop
outsb
les
shrb
out
dec
lods
push
mov
repnz
out
mov
hlt
pop
push
imul
mov
pop
or
mov
mov
and
sbb
ljmp
out
mov
popa
scas
or
dec
dec
int
in
mov
jne
fcomip
js
push
mov
mov
lods
sarl
outsl
jmp
inc
mov
inc
pop
inc
mov
ret
fwait
in
fcomps
jecxz
sub
aam
jg
mov
sbb
mov
cs
mov
test
push
hlt
mov
int3
xor
sbb
cmp
dec
sbb
cltd
and
ljmp
aam
das
lcall
push
add
scas
pusha
or
xchg
ljmp
or
dec
aam
mov
pop
movsl
cmp
add
cmp
push
xor
pop
cmp
gs
cld
or
xor
mov
daa
add
aaa
push
lret
pop
dec
mov
repz
mov
push
mov
cmp
xchg
dec
cmp
cltd
xor
mov
mov
xor
into
cmp
sub
sub
add
shlb
notb
xorb
add
sbb
cmpsl
xor
dec
or
fcompl
mov
in
lret
mov
adc
cmp
cmpb
fnstsw
fdivr
cld
mov
les
or
fisttpl
rcrb
nop
enter
insb
scas
add
push
int3
xchg
pop
cmp
add
sti
rorl
mov
pusha
push
lods
cmp
mov
scas
pop
dec
push
or
mov
lods
xchg
jge
cmpb
addr16
mov
data16
adcl
add
sub
clc
ds
mov
lods
push
pop
sub
cld
push
sbb
sbb
pop
jge
hlt
andb
lret
ljmp
sbb
add
int
xorb
outsb
mov
or
ljmp
fsubrs
jo
sub
rolb
insl
cmp
xchg
sahf
and
cmpb
cmp
push
mov
clc
stos
sbb
sbb
mov
daa
mov
sub
fimull
mov
ret
add
shll
out
fiaddl
into
sbb
sarl
sbbl
scas
xor
push
mov
loop
or
sbb
xor
aam
adc
mov
adc
scas
shlb
jno
inc
mov
or
cltd
xchg
cmp
ljmp
or
sub
clc
dec
popa
mov
mov
and
xchg
push
aaa
fadd
and
push
push
adc
xchg
cmp
xor
pushf
or
cs
xchg
mov
dec
loop
insl
mov
stos
cmp
pop
inc
clc
mov
dec
fsubrl
daa
mov
rcrb
push
cmp
sbb
and
imul
shlb
mov
and
mov
sbb
mov
ret
adc
inc
iret
lock
enter
mov
or
xor
test
repnz
movsl
pop
imul
ss
sbb
cwtl
sub
ss
dec
cwtl
pop
adc
clc
les
mov
addl
sbb
mov
mov
sahf
xchg
add
jb
ret
mov
xchg
ja
jmp
push
in
aam
xchg
cli
mov
faddp
fdivl
mov
and
setl
cmpsb
jae
xor
fcmovnu
mov
dec
inc
mov
ficompl
loope
cld
cmp
push
fdivrl
sub
sub
xchg
lods
ljmp
enter
mov
or
xchg
push
mov
fdivl
mov
aad
or
pusha
push
cld
mov
add
ljmp
clc
and
shrb
arpl
pop
inc
push
out
ljmp
xchg
das
mov
cmp
repz
lods
jecxz,pt
adc
ss
xchg
inc
dec
fwait
pop
push
sbb
fiadds
sub
outsl
in
ds
out
jmp
aam
das
sbb
subb
aas
nop
lret
std
mov
xchg
dec
mov
cld
xor
out
hlt
int
lcall
les
loop
xchg
fcompl
sbb
testb
push
mov
shr
cmp
ret
sbb
fwait
out
sarb
inc
mov
cli
enter
push
xorb
cmp
cmp
lcall
jae
push
pop
adc
adc
xor
and
adc
sbb
std
or
xor
xor
lret
sbb
lret
add
cmp
xchg
xorb
shlb
shl
jae
add
jp
js
sahf
test
pop
aad
xchg
das
test
sub
insl
mov
pop
rclb
das
sti
mov
add
mov
mov
mov
ss
push
fdivs
sbb
xchg
and
push
cmp
pop
xorb
dec
pop
and
les
fidivrs
push
mov
fcompl
xor
sbb
mov
fadds
mov
inc
incb
popa
push
jecxz
js
push
in
ds
jg
jg
sub
es
lods
in
shrl
cmpsb
sbb
fidivs
stos
leave
xor
or
push
fists
inc
fdivl
scas
or
push
sbb
pop
out
stos
mov
into
fsubrl
mov
loop
cmpsb
out
scas
cwtl
js
ss
dec
ds
cs
fsubrl
jns
add
adc
sub
fidivrs
cmp
add
inc
into
scas
jnp
mov
fimull
cld
mov
pop
fstsw
pop
dec
add
xchg
scas
mov
xor
pop
repnz
or
inc
fidivl
pop
pop
or
push
aad
pslld
fdivrs
push
inc
adc
stos
scas
aam
sub
jb
pushf
inc
or
sbb
lea
aas
inc
cli
lock
into
cmp
lods
xlat
inc
adc
ljmp
xor
rcll
lcall
testl
jg
mov
cld
push
jns
pop
shlb
inc
sbb
mov
push
jnp
idivb
jb
dec
lods
out
sbb
adc
xchg
push
sbb
xorb
int
nop
int3
int3
push
addr16
push
xor
ljmp
xor
cmpb
mov
imul
mov
repnz
mov
add
xchg
lahf
adc
xorl
cwtl
xor
or
mov
push
or
in
push
mov
mov
xor
imul
adc
bound
push
xor
push
fidivrs
lods
cmp
mov
cmpsb
int3
push
int
lret
push
imul
dec
das
repz
int3
mov
inc
out
xlat
outsl
adc
jne
data16
dec
dec
subl
les
add
jmp
int3
mov
lock
popf
das
into
push
inc
mov
pop
sub
or
push
aam
jbe
jl
dec
repnz
dec
mov
push
cli
lahf
js
or
add
xor
dec
sub
or
sub
gs
out
inc
add
and
popf
xor
mov
mov
aam
sbb
cs
inc
out
xchg
or
shll
rolb
adc
or
mov
icebp
jecxz
and
lods
add
and
rorb
sti
in
push
or
jnp
hlt
incb
cmp
js
shll
adc
in
outsb
sbb
aam
mov
sub
adc
push
hlt
push
fiaddl
mulb
mov
inc
push
lock
inc
aaa
xor
push
or
aaa
dec
icebp
addb
data16
lock
jmp
mov
sub
jmp
add
clc
sub
jae
lret
rolb
ret
mov
fisubl
xor
out
inc
sbbl
test
aas
jnp
cwtl
fstpt
xor
mov
testb
into
cmp
ljmp
cwtl
cmc
add
cmp
inc
rorb
and
leave
add
add
pushf
fmul
mov
cmp
or
mulb
jp
jb
cwtl
outsl
fidivl
jno
xor
or
mov
popf
sahf
mov
adc
int
neg
ljmp
add
cmpb
pusha
fcoms
xor
mov
sbb
xor
dec
rcll
cmp
fwait
xchg
mov
mov
xchg
and
pusha
lock
stos
orb
or
push
or
add
fdiv
cmpl
ret
fwait
clc
xor
inc
into
mov
sbb
fwait
jle
xchg
adc
mov
decb
div
mov
rcr
aad
add
mov
cmp
cld
mov
cmp
subl
mov
xor
pusha
dec
adc
shrb
push
ljmp
fcomi
sbb
lock
pop
jae
out
jne
xchg
fmulp
sbb
mov
cmp
negb
pop
sbb
mov
outsl
lret
in
lahf
cmp
outsl
sub
dec
jne
je
mov
sarb
push
enter
out
pop
pop
orb
sbb
mov
cmp
push
sub
mov
mov
out
inc
xor
mov
inc
mov
mov
xor
add
pop
pop
or
sbb
sti
movsb
add
cmp
or
outsb
gs
lret
fdivr
or
ret
pushf
lods
sub
shlb
aad
jg
insb
or
lods
sarb
mov
shlb
sahf
push
sub
fcom
mov
push
adc
push
into
push
jo
test
inc
xor
pop
jecxz
js
adc
lock
dec
fdivl
push
sub
mov
fisubl
repz
mov
out
aas
and
cltd
add
sbb
adc
pusha
lea
push
stos
xchg
aad
ret
scas
movsl
addb
flds
jnp
lahf
xchg
and
hlt
out
push
jb
inc
xchg
test
xor
ficoms
sbb
ss
addr16
bnd
in
adc
push
pop
mov
sbb
xchg
cs
inc
sbb
mov
fildl
outsb
sub
add
xor
ret
inc
scas
pop
xor
add
xor
mov
lock
js
into
fsubs
push
hlt
scas
xor
add
jne
out
inc
repnz
rclb
mov
xor
out
mov
mov
cmp
into
lods
add
repnz
roll
sbb
or
ret
in
mov
xor
inc
out
add
push
adc
fistps
push
dec
clc
push
add
gs
fwait
mov
rorl
add
bnd
and
xlat
sbb
mov
repnz
mov
sbb
lods
movsb
fsubs
sar
mov
sbb
add
add
aad
adc
decl
lahf
adc
sbb
outsl
and
xor
jnp
dec
sahf
dec
cmp
mov
outsl
lock
cmpl
pop
mov
fdivl
ds
sbb
fcmovu
adc
push
sbb
lods
mov
or
stos
jb
adc
stos
xchg
lret
and
aad
push
xabort
jp
in
push
mov
dec
int
ficompl
les
xor
mov
mov
loope
or
lods
fldt
fwait
push
lret
pusha
cwtl
or
rcrb
icebp
mov
lcall
ds
add
push
scas
ret
out
pop
jg
and
cmp
xor
mov
xor
mov
popf
enter
mov
sti
xchg
xchg
rcll
popf
or
mov
sbb
mov
dec
cli
mov
jl
mov
lret
mov
xor
ret
xchg
mov
dec
jnp
push
lea
cmp
mov
mov
inc
xchg
mov
aam
scas
into
ret
lret
cli
jno
mov
xchg
sbb
nop
push
mov
push
ret
push
mov
pop
cmp
sbb
int
out
outsl
mov
in
pop
jge
fwait
push
mov
adc
lock
mov
pop
push
stos
mov
sbb
scas
or
cs
cld
js
rcll
or
aas
cmp
popf
xor
pop
mov
mov
cld
dec
push
in
in
push
mov
rcr
fisttpl
jecxz
sbb
shlb
push
cmpsl
add
aas
lahf
pop
or
cmpsl
xor
ss
int3
sarb
jns
scas
mov
sbb
sub
sbb
cmp
clc
mov
test
cltd
cmp
add
add
xchg
sbb
mov
filds
pop
add
aaa
outsb
sbb
sub
scas
adc
pop
mov
push
mov
data16
dec
mov
pop
inc
mov
mov
leave
xchg
add
xor
push
jle
out
dec
scas
pusha
scas
mov
in
addr16
push
lock
jecxz
cmp
lahf
or
int3
mov
mov
cmp
sub
mov
push
dec
inc
sbb
in
jp
lods
mov
mov
cmp
or
fisubrl
cli
int3
xchg
sub
mov
ljmp
out
ja
das
mov
ficompl
pop
mov
sub
repnz
add
dec
int3
fwait
and
jge
inc
jno
sti
cld
ror
xlat
clc
les
cmp
stos
lods
xchg
push
mov
jo
stos
push
sar
iret
xor
cmp
outsl
inc
fwait
dec
aad
push
adc
adc
mov
lock
in
sub
bound
aas
inc
aam
int3
cs
rcr
mov
into
sar
movsb
xchg
nop
or
xchg
adc
shlb
lock
or
adc
lcall
sbb
andl
out
sahf
ss
rcl
xchg
xchg
adc
lcall
scas
ret
add
mov
scas
dec
addb
adc
xor
scas
push
int3
ret
insb
xchg
sbb
add
sbb
pop
mov
testb
int3
loop
std
ret
sub
mov
int3
mov
rcrb
mov
stos
out
inc
ss
int3
rcrb
push
xor
fsubrs
add
daa
and
rcrl
push
mull
cmp
xlat
enter
into
add
xor
pusha
jo
mov
cmp
adc
push
ret
aam
push
or
mov
mov
mov
ljmp
adc
mov
add
dec
dec
lea
lret
push
xchg
dec
pop
xchg
popf
push
mov
mov
adc
sti
lods
cmpsb
and
mov
lods
cld
pop
outsl
test
ljmp
and
scas
je
mull
cmp
repnz
pushf
or
xor
sub
mov
mov
xchg
stos
xchg
pop
adc
lds
stos
push
sbb
xchg
les
mov
or
cs
data16
lods
push
mov
inc
testb
add
clc
xchg
add
int3
inc
xchg
aam
push
mov
shlb
mov
mov
sub
ret
sarb
cmp
mov
sbb
push
add
bound
mov
ja
dec
push
or
cmp
or
lock
sbb
rclb
mov
lret
rcrb
mov
xor
shrl
inc
push
lock
cmp
sbb
ficomps
lret
repnz
cmp
ret
pop
shr
cmp
mov
sbb
mov
pop
lret
adc
sahf
add
gs
sub
ss
xchg
in
ljmp
sbb
cmp
xchg
inc
xor
mov
out
or
cmpsb
scas
cmp
popf
ss
adc
jae
nop
into
mov
lea
adc
cli
sbb
in
aas
pop
jae
stos
les
clc
or
sti
in
xchg
addr16
das
xchg
and
in
aad
mov
das
loop
adc
cld
data16
stos
mov
mov
cltd
les
xchg
mov
sbbb
popa
mov
jbe
loop
out
movsb
outsl
xchg
jecxz
mov
push
jp
mov
sbb
repz
inc
ficompl
lcall
sbb
sub
mov
shr
sub
lret
mov
mov
fcmovb
shl
adc
or
in
mov
sub
jp
js
nop
sbb
lods
jmp
scas
lock
push
push
lahf
sub
mov
bnd
pop
mov
cmp
or
sbb
mov
inc
movb
xorb
and
int
mov
and
aas
rclb
int3
xchg
rorb
mov
negb
pop
sbb
mov
mov
fistpll
rcr
mov
push
int
jbe
movsb
mov
adc
sbb
test
and
mov
push
in
fwait
rcr
aam
sbbl
cmc
cli
xor
in
pop
fnstcw
dec
into
jg
mov
ficompl
or
negb
push
addr16
sbb
add
xchg
xor
adc
aas
rcrb
divb
inc
add
adc
lret
or
js
jbe
jae
mov
push
mov
jno
repnz
js
inc
data16
adc
sub
cmp
ds
mov
into
mov
adc
sbb
mov
cwtl
shrb
fcoml
lods
aaa
int3
lahf
pusha
stos
mov
and
mov
xor
int3
add
out
xlat
inc
divb
cmp
xor
fildll
add
mov
repnz
shrb
add
mov
mov
mov
sbb
mov
sarb
stos
clc
mov
sub
push
ds
xchg
andnps
inc
mov
aas
outsl
dec
xor
pop
sbb
xor
sbb
hlt
mov
dec
cmp
fildll
add
xchg
pop
xor
inc
sbb
or
adc
push
add
clc
mov
into
mov
sbb
imull
xchg
ds
xchg
imul
out
clc
mov
inc
ss
push
xor
lods
fstpl
mov
inc
in
fdivs
stc
jb
sbb
cmp
jle
dec
lcall
enter
mov
in
lea
push
stos
repz
ficoml
sbb
mov
sub
mov
push
jg
jp
into
add
int
mov
cltd
push
aam
inc
adc
out
sbb
sbb
add
pop
and
daa
into
imul
and
or
sub
adc
sbb
or
mov
push
pop
fdiv
add
ret
aam
sub
movsb
movb
out
mov
mov
jle
fcompl
mov
outsl
fstpt
adc
sbb
out
dec
pusha
test
sbb
popa
mov
stc
shrb
jp
into
pop
into
or
mov
push
add
testb
ds
sbbb
mov
aad
jl
mov
cwtl
add
xor
mov
adc
xor
scas
mov
int3
nop
ljmp
cmp
fnstsw
jle
sbb
sbb
cmp
rclb
mov
aas
pop
shlb
insl
mov
cs
and
push
fsubrl
and
inc
mov
je
lods
mov
pop
fmul
jo
add
or
andb
and
xor
clc
and
xchg
cmp
nop
into
mov
jg
inc
push
xor
xor
mov
mov
push
enter
clc
mov
ds
jg
push
int3
bound
cld
mov
movsb
mov
push
xchg
push
rcll
ja
pop
jbe
or
fs
cld
int3
scas
xchg
jne
adc
and
mov
mov
stos
popl
push
add
repz
xor
into
adc
add
mov
adc
sbb
ja
xchg
incb
das
mov
into
fwait
push
lods
mov
repnz
mov
std
test
sub
push
sbb
popa
ficomps
or
mov
movsb
sub
scas
cmp
push
inc
lcall
pop
mov
xchg
scas
adc
xor
js
jle
or
ret
ljmp
dec
call
xor
lods
jno
sarb
mov
fdivrl
out
fcoms
ret
mov
sbb
pop
shrb
repnz
inc
xor
into
repnz
ret
clc
adc
and
adc
scas
xor
inc
cwtl
xor
xchg
aad
ucomiss
xor
out
push
mov
js
jle
inc
ret
loopne
dec
lea
idivb
jb
dec
testb
sub
rcrb
cmpsb
cltd
lea
and
loopne
dec
test
dec
mov
xor
mov
ret
cltd
sti
fdivr
ja
cmp
xor
sbb
dec
mov
xor
xchg
mov
mov
and
mov
jae
xor
into
shlb
mov
jg
mov
mov
int3
popf
mov
or
xchg
jnp
in
popf
call
add
xor
aam
sub
rcl
mov
mov
pop
jbe
and
sub
ds
sub
fstpt
inc
mov
rcrb
jmp
cli
aam
sub
adc
or
xor
movq
xor
push
adc
fwait
cmp
scas
push
xchg
hlt
or
stos
and
inc
ret
arpl
cltd
daa
clc
into
jg
add
gs
lret
xor
and
sahf
or
xor
sbb
nop
mov
xchg
cmp
push
shl
aas
xchg
in
das
adc
mov
lahf
push
cmp
cs
out
sub
and
mov
mov
lcall
mov
mov
fmull
sbb
ds
inc
xor
xchg
pop
jp
sub
sub
or
push
mov
inc
aas
pusha
movsb
mov
xor
es
in
lcall
add
push
cs
mov
mov
pushf
sbb
or
ljmp
fisubs
ss
into
add
pusha
adc
xchg
cmp
rclb
scas
test
fdivrs
fidivl
lock
pop
fadd
xchg
lock
sub
jp
xchg
ficomps
out
adc
mov
or
repnz
ss
fucomp
jp
xchg
out
rorb
inc
fidivl
div
lahf
cmp
sbb
cs
mov
add
hlt
add
cmp
rolb
aad
sbb
mov
xchg
int3
jmp
repnz
popf
mov
fwait
or
mov
jbe
adc
aam
addl
fstl
push
scas
fdiv
stos
xchg
mov
mov
fwait
pop
mov
push
mov
out
fsubl
jne
adc
dec
mov
in
outsl
inc
and
lret
sbb
push
xchg
imul
jp
mov
push
and
imulb
mov
mov
mov
pusha
bound
test
push
sub
fs
ret
cs
fbstp
cld
stos
mov
cmp
sbb
sub
mov
fcmovu
sbb
jb
mov
xchg
cli
rcl
pop
and
sub
sarb
das
mov
mov
sbbl
pop
enter
js
fwait
inc
ficompl
add
xchg
mov
and
outsl
mov
ljmp
out
ljmp
arpl
hlt
xorb
lods
xchg
fisubrs
xchg
sub
stos
sti
jo
shl
mov
and
sbb
mov
es
scas
cld
push
negb
insb
adc
movsb
les
inc
inc
sbb
and
ljmp
stos
sub
sub
test
clc
push
lret
fdivl
addr16
pushf
js
dec
jbe
or
stos
cld
adc
sti
cwtl
xor
enter
lret
fcmovbe
mov
test
dec
cmp
adc
cs
mov
push
add
scas
outsl
jae
adc
mov
arpl
push
clc
mov
mov
inc
cmp
lcall
xor
sbb
mov
push
fisubrl
loop
es
add
nop
sub
cmp
adc
mov
mov
insb
xor
test
shll
push
loop
jp
cwtl
xor
fdivl
or
mov
mov
mov
out
add
mov
sub
sbb
xor
adc
mov
rcr
mov
pop
cmpb
xor
enter
out
addr16
mov
cmp
negb
or
loope
add
push
ljmp
inc
mov
jbe
xor
jg
call
gs
push
sub
scas
movsb
jg
push
stos
cmp
push
mov
rcrb
or
mov
sbb
sub
sub
addr16
xchg
repnz
cmp
outsl
stos
mov
mov
clc
adcb
mov
jg
ss
push
sbb
xchg
nop
dec
fimull
inc
scas
loop
xchg
or
push
lahf
mov
insb
push
cld
ds
jl
sbb
shlb
repz
out
adc
mov
fidivrl
aaa
ss
test
inc
mov
fidivs
mov
fmuls
outsl
in
cs
inc
push
dec
push
sub
cmp
or
repnz
adc
ds
stos
sbb
out
pusha
or
sbb
shlb
add
sbb
and
dec
mov
xor
push
cmpl
fmul
sbb
bound
xchg
adc
mov
ret
popa
cmp
shlb
fildll
cmp
xor
cmp
or
xchg
cmpsl
aam
and
mov
push
ficoms
inc
mov
test
push
test
jecxz
ds
int3
icebp
imul
dec
hlt
push
rorb
mov
and
or
mov
lea
add
jp
sahf
aas
stos
cmp
or
pushf
inc
push
rolb
aas
jmp
mov
lods
mov
xchg
sbb
sbb
and
sbb
and
hlt
pop
ljmp
adc
int3
push
lock
ss
pusha
rcrl
or
pop
pop
sbb
ret
rorb
jecxz
sub
mov
ljmp
int3
mov
les
imulb
push
cmpsl
sub
cmp
cmpl
lea
movsb
nop
mov
or
xchg
push
aam
cmpsl
xor
cmp
jp
cs
mov
mov
jg
ret
push
test
or
subb
bound
ret
pushf
cwtl
xor
sbb
mov
les
sub
lock
test
mov
fldenv
inc
or
cmp
cli
xor
fisttpl
sbb
add
ficompl
xor
xchg
xchg
idivl
sahf
pop
adc
push
dec
ljmp
imul
xchg
dec
lods
xchg
xlat
inc
jns
iret
fwait
push
sub
mov
enter
mov
pop
xor
aam
mov
mov
enter
fcompl
movsb
fcompl
cld
sti
or
sbb
sbb
xchg
hlt
sbb
add
xor
jmp
sbb
push
pop
jae
fildl
adc
dec
fmull
in
ror
repnz
xor
gs
loopne
mov
sub
sub
pop
adc
sbb
out
mov
inc
nop/reserved
cmp
mov
mov
mov
daa
nop
push
and
addr16
mov
inc
cmp
sub
les
cmpsl
lock
cld
mov
jp
xchg
inc
xchg
push
out
cli
neg
lods
aad
fisttps
call
and
sub
out
lret
out
or
mov
xchg
jle
iret
jp
enter
repnz
pop
stos
adc
mov
jo
xor
loopne
outsl
xor
xor
dec
lret
test
dec
repnz
fwait
add
or
repz
mov
or
sbbb
xchg
gs
pop
lret
ljmp
adc
push
dec
mov
ret
push
in
cli
mov
js
jb
cld
cmp
push
ljmp
into
das
jnp
in
das
scas
push
mov
push
enter
add
lcall
push
fisubs
adc
mov
push
bound
mov
mov
cld
ja
jo
xor
sub
jp
mov
pushf
sub
xor
pmaxsw
aad
les
das
fisubrl
aas
pop
lret
adc
pop
mov
push
xor
int3
xorl
push
mov
insl
ds
and
or
sti
aam
rcll
pop
pop
or
jmp
fcomp
shrb
popf
rorb
clc
and
sub
testb
mov
mov
mov
xchg
rcrb
stos
cmc
xchg
mov
cli
cmp
adc
cld
fcmovu
cltd
xchg
test
xor
mov
es
adc
mov
ljmp
xor
mov
ss
cmp
sbb
lahf
jle
hlt
sbb
mov
lods
out
sub
push
pushf
add
in
push
push
ss
fwait
push
xor
mov
and
mov
or
into
decb
lret
adcl
push
ljmp
and
xchg
inc
sub
sub
cwtl
mov
push
add
push
jmp
call
jg
cs
push
fimull
lcall
add
enter
pop
sbb
cmp
hlt
enter
insb
das
xor
mov
mov
or
je
or
dec
push
stos
mov
xlat
or
inc
aam
test
adc
inc
stc
jp
dec
jo
dec
lahf
push
mov
xlat
lods
push
cmp
mov
mov
js
notb
cmp
jg,pn
aas
das
mov
sbb
mov
push
call
cmp
orb
fiaddl
dec
mov
push
nop
popf
cmp
out
ljmp
cli
out
jnp
cmp
js
mov
lea
in
out
sub
and
xor
jecxz
xchg
hlt
cld
sbb
lret
adc
push
push
cmp
sbb
mov
es
popf
rcl
pop
out
mov
adc
mov
nop
jp
aas
imul
pop
xor
or
mov
jle
repz
cs
mov
popa
sub
push
ljmp
mov
sbb
jp
jb
pop
in
or
xor
mov
das
cwtl
and
dec
xchg
imul
add
into
aad
scas
cmp
mov
jbe
loope
xchg
jno
mov
push
sbb
in
sti
lods
xchg
movsl
into
or
idiv
ja
sahf
cmp
int3
mov
lods
pop
push
push
testb
sbb
fstpt
fildl
and
push
out
mov
jle
mov
add
or
ret
push
or
rcrb
sub
push
xchg
es
xchg
xchg
pop
out
xchg
loope
adc
inc
mov
sub
jp
pusha
mov
out
insl
push
or
mov
addr16
push
jno
sahf
fadd
mov
int3
inc
lret
lds
push
arpl
xlat
fs
fcomps
fiadds
and
mov
or
add
or
int3
sahf
mov
jo
lret
ja
pop
in
scas
popf
addr16
fdivl
push
mov
enter
mov
in
sbb
sbb
sbb
mov
test
aaa
pop
jmp
cltd
add
mov
fcompl
movsl
adc
sub
sarb
inc
push
xchg
test
pop
inc
shrb
rol
scas
jecxz
and
xchg
popf
cmp
lret
pop
mov
sub
out
add
js
aam
test
aaa
sbb
cmc
sbb
dec
fsubl
xchg
mov
ss
out
idivb
out
in
cwtl
test
out
das
jno
dec
ds
cmp
scas
shlb
pop
and
cmp
mov
cli
shll
fsubrs
dec
clc
outsl
xchg
outsl
xchg
aas
subb
lret
inc
push
push
mov
inc
out
push
sbb
aaa
in
enter
pop
and
ss
imul
bound
lods
les
fadd
int3
in
pop
xor
cmp
xchg
sub
pop
or
ljmp
in
add
pop
lret
sub
int3
fisubl
sub
jecxz
repz
dec
push
out
jmp
stos
das
nop
js
repnz
enter
mov
push
lock
cmpsb
sub
pushf
add
inc
sbb
das
ret
sbb
pop
mov
push
fcmove
dec
sub
xchg
shlb
xor
and
or
and
adc
lock
sarl
sbb
xchg
scas
fwait
push
fdiv
repz
repz
negl
xchg
aaa
push
notl
mov
cmp
rcrb
pop
xor
out
fs
sbb
stc
sub
out
stos
movsl
inc
lods
or
sub
xor
hlt
pop
sub
adc
lods
rolb
mov
cwtl
ss
mov
sub
mov
enter
nop
xor
rcr
ds
scas
dec
ret
mov
jp
mov
push
bound
nop
xor
mov
filds
push
adc
or
std
mov
dec
xor
jg
mov
int
addr16
xchg
ljmp
mov
stos
cli
jne
or
scas
in
mov
inc
enter
sarb
jp
cmpsb
sub
enter
fdivl
adc
jno
or
or
inc
mov
jp
xchg
lret
mov
lock
loop
xorb
push
pop
jmp
xor
mov
into
cli
movsl
push
cld
outsb
push
dec
push
mov
stos
add
push
xlat
popf
test
mov
es
out
cld
imul
sbb
pushf
sbb
or
pop
das
add
outsb
lret
push
and
shlb
pop
sti
fnstcw
enter
xchg
fdiv
lahf
and
cli
lods
aam
mov
call
mov
and
shl
stos
fisttpll
mov
mov
ficoml
add
sti
mov
and
negb
mov
sub
adc
cli
bound
mov
mov
jp
xor
adc
push
mov
test
sbb
mov
sbb
mov
sbb
cmp
pop
add
enter
data16
adc
ret
sbb
cmc
nop
aam
xlat
hlt
xchg
sbbl
fs
ret
mov
pop
sbb
cli
add
jne
pusha
cs
xor
jnp
sbb
pop
repnz
hlt
stos
mov
in
pusha
mov
jb
les
pop
fwait
cltd
xchg
mov
fwait
xchg
mov
stos
aam
mov
test
xor
mov
cs
lret
mov
arpl
nop
stos
mov
lods
subb
cmp
mov
xchg
mov
fdivrl
fiaddl
clc
push
in
fimull
xor
or
xchg
sbb
popf
pop
ds
out
cmp
fsubrl
sub
adc
lock
cli
int3
xor
xor
adc
add
xor
pop
mov
cwtl
std
push
mov
cmpsb
adc
loope
out
fmull
mov
cld
mov
sub
xor
xchg
std
sbb
sub
cmp
fidivs
subb
or
clc
add
call
mov
add
fsts
rcrl
ljmp
rcrb
imul
mov
or
not
incl
sahf
into
push
cmp
stos
cmp
dec
mov
pop
popf
sti
ljmp
test
aam
int
and
jle
or
cmp
jmp
xor
stos
mov
inc
or
out
stos
stc
les
cmc
cmpb
hlt
mov
cmpsl
pusha
inc
cmp
sub
movaps
out
jb
add
lcall
dec
or
adc
rclb
adc
aaa
les
mov
adc
and
sbb
clc
aam
sbb
pop
mov
cmpsb
mov
jecxz
repz
sbb
mov
cwtl
fcompl
dec
enter
mov
hlt
inc
lock
enter
inc
push
pop
xchg
ror
addr16
ret
push
cltd
xor
rcl
into
push
or
clc
adc
adcl
inc
mov
dec
mov
hlt
adc
xchg
mov
inc
repnz
idivb
xor
sbb
mov
inc
sarb
mov
ret
fdivl
ljmp
cli
pushf
fidivrl
lret
daa
in
cltd
pop
ds
pop
aaa
ljmpw
jae
mov
scas
clc
lcall
cmc
mov
sbb
xor
out
sbb
push
les
imul
repnz
cmp
daa
js,pt
cli
iret
inc
mov
divb
aam
jle
sbb
fisubrs
aam
dec
testb
out
ss
cli
fsubl
roll
cmp
or
pop
sbb
ss
addr16
cld
mov
xchg
lods
fcomps
sub
fdivs
inc
dec
mov
aad
jnp
dec
cltd
adc
lcall
jp
mov
mov
or
jo
dec
cmp
and
ds
mov
int3
or
loopne
xchg
cwtl
mov
out
fcomp
xor
insb
shlb
stos
lock
mov
sbb
xlat
or
jg
cltd
lahf
inc
inc
sbb
sbb
in
mov
stos
stos
out
cs
or
testb
stos
jo
lret
addb
sbb
jnp
or
jg
int3
sti
cmpsl
lcall
push
jne
aam
and
mov
je
inc
lcall
jg
ljmp
push
and
add
or
aas
outsb
fwait
addr16
add
mov
ret
mov
push
xchg
outsb
jmp
cltd
or
cli
mov
loopne
out
adc
inc
aam
push
mov
jns
les
ds
in
cmpsl
xor
mov
repnz
pushf
inc
mov
mov
ds
insl
pop
xchg
fcomps
jns
into
in
adc
cmc
stc
imul
sub
xor
mov
sub
clc
lock
jb
mov
xor
scas
jno
inc
fs
ds
adc
std
xchg
or
popf
cltd
lock
cli
mov
mov
inc
mov
aas
xchg
mov
addl
pusha
inc
inc
xchg
push
xor
cli
add
cmpsb
fwait
sub
inc
mov
lret
mov
mov
int
xchg
test
sub
movsl
fisubrl
ds
test
sbb
push
scas
fdivrl
fsub
mov
push
adc
mulb
inc
stos
addl
sarb
adc
pop
or
popf
ss
pop
gs
int
les
push
and
dec
jecxz
ficoms
mov
stos
cmp
in
cmp
sbb
aam
fsubl
dec
mov
adc
cmc
rol
clc
sub
into
inc
ljmp
ja,pn
xor
out
clc
nop
nop
cmp
test
pop
mov
mov
mull
push
pop
dec
fcoml
add
lret
push
repnz
jne
sarb
and
mov
test
std
mov
lods
aam
addr16
inc
dec
pop
push
hlt
repnz
xlat
inc
cld
pop
out
mov
cld
mov
addr16
addl
cmp
fs
sub
sbb
ljmp
sti
push
adc
push
pop
add
mov
jle
negb
mov
or
cmp
in
mov
leave
mov
adc
mov
leave
xor
insl
xchg
cs
into
cli
cli
pop
push
jne
jno
cmp
jne
add
sti
add
jnp
test
outsl
dec
jae
cmc
outsl
jecxz
or
js
push
push
stos
sbb
sbb
jno,pn
arpl
sbb
pop
ss
cmp
push
adc
gs
sub
mov
js
xor
divl
addr16
jne
jp
mov
dec
ja
aad
inc
push
les
mov
cld
dec
lods
pop
ljmp
test
mov
mov
test
test
insl
sti
xor
pop
inc
insl
xchg
mov
and
or
inc
insl
arpl
dec
insl
ss
mov
addr16
sbb
shrl
mov
push
testb
and
xlat
mov
or
sbb
xchg
or
imul
stos
vcvtss2sd
icebp
movsl
lret
and
sub
clc
push
addr16
mov
fcmovnb
jae
aad
imull
and
pop
repz
negl
dec
xor
repz
mov
sub
addl
mov
imul
pop
cld
mov
shl
addr16
push
push
dec
inc
addr16
inc
push
stc
push
addr16
sub
push
movsb
push
addr16
dec
push
mov
addr16
loop
push
stos
les
dec
loop
clc
push
dec
push
mov
enter
mov
dec
or
stos
in
sub
lock
mov
lds
enter
rorb
sub
inc
hlt
dec
push
mov
bound
xchg
push
cld
enter
ds
sbb
xor
sub
sbb
mov
in
cmp
les
adc
mov
cmp
or
rol
xor
push
jno
cli
mov
aaa
sub
mov
cmp
cmp
int3
mov
xor
mov
js
aas
repnz
ljmp
inc
mov
and
dec
dec
pop
insl
js
cli
sub
les
sahf
ljmp
je
ror
mov
or
mov
sub
xor
into
dec
les
ds
loopne
sahf
jl
push
cmp
adc
repnz
das
rorl
push
pop
stos
push
adc
push
cmp
pop
xchg
or
mov
sbb
sub
lods
lahf
push
cld
add
cmp
xor
repnz
movsl
xchg
push
mov
lods
push
jb
idivb
sbb
popf
cmc
mov
cs
int3
cmp
or
adc
in
clc
push
xor
xchg
ljmp
mov
enter
jp
xor
cmc
pusha
pop
fsubrs
cli
jge
mov
arpl
in
incb
add
sbb
mov
cmc
ret
sub
sarb
sub
cld
mov
cmp
mov
mov
leave
fs
loop
shrb
add
xor
stos
cmp
mov
cli
pop
mov
int3
mov
incl
nop
lret
sub
ss
bound
sub
push
jne
mov
add
cmp
add
or
push
xchg
stos
jg
fwait
adc
adc
inc
ss
ss
hlt
clc
and
scas
popf
xor
incb
es
into
inc
fsubrl
adc
add
inc
mov
into
insb
orb
out
sbb
xorl
testb
pushf
jg
imul
fwait
xchg
jg
incl
je
stos
arpl
gs
jae
push
pushf
xor
inc
imul
ret
incb
adc
lods
pop
xchg
mov
out
addr16
in
js
inc
ret
ljmp
das
sbb
jno
and
rolb
jg
cld
push
pop
adc
imul
aaa
stc
mov
adc
lods
pop
addr16
je
push
decb
sbb
add
jp
inc
scas
sub
add
repnz
or
sub
rclb
scas
pop
mov
imul
aas
dec
xchg
inc
into
jmp
out
push
xchg
test
mov
imul
jnp
data16
sub
dec
xchg
stc
shl
addr16
insl
jae
push
or
sub
pop
mov
addr16
jnp
adc
mov
jnp
mull
sub
add
fcmove
sar
pop
daa
or
sub
fsubr
mov
cmp
andl
mov
jno
ljmp
stos
out
mov
dec
cltd
dec
lods
cmp
xor
shrl
add
ss
sub
lods
daa
or
fcom
cld
push
iret
add
scas
ds
out
fwait
adc
clc
in
mov
xchg
clc
cmp
jmp
lock
adc
int3
push
ds
loope
pop
rcrb
mov
sbb
fld
js
aam
cwtl
or
mov
cmp
mov
scas
sbb
hlt
sbb
mov
addr16
arpl
push
imul
xchg
shlb
dec
mov
push
adc
xchg
in
xor
pop
sub
scas
ljmp
pop
cs
stos
pop
cwtl
xor
lock
mov
push
adc
repnz
lods
dec
lock
fcompl
ds
mov
fs
scas
adc
rcrb
sbbb
rcrl
or
mov
pop
xor
ret
insb
enter
popaw
add
sub
xchg
adc
cs
std
mov
or
fwait
in
scas
push
rcr
xor
out
outsl
iret
adc
push
out
adc
lea
fmuls
cld
jg
push
or
cwtl
mov
enter
or
pop
push
pop
xchg
in
inc
cmp
scas
or
jns
push
or
stos
movsl
adcb
or
repz
and
mov
jg
push
scas
ss
mov
or
rclb
push
cli
lods
rclb
std
ja,pt
repnz
sub
and
fsubrl
out
cld
cmpsl
inc
jg
mov
mov
incb
int3
les
xor
push
shll
lock
ret
cli
add
mov
mov
fidivrl
sti
data16
mov
mov
ljmp
mov
and
push
mov
divb
and
jnp
in
lcall
and
cld
stos
fcmovu
jbe
push
out
fstps
int3
mov
or
jo
aas
xchg
xor
mov
stos
mov
adc
or
jmp
jbe
shlb
sub
jp
xor
mov
clc
cmp
mov
mov
fsubrl
xor
adc
clc
xor
inc
sbb
scas
clc
xor
push
xchg
daa
mov
clc
mov
dec
mov
cs
int3
hlt
ds
fdivl
cmp
pop
fcmovbe
testb
adc
cld
adc
xchg
mov
cs
enter
or
and
mov
dec
xor
stos
jb
cli
pusha
adcb
or
popf
push
push
mov
test
clc
sub
iret
pop
stos
les
xor
subb
ss
sarb
inc
out
add
xor
addr16
fdivs
lods
test
clc
ds
push
inc
and
out
dec
loop
push
fwait
push
popf
lock
out
repnz
adc
xor
jecxz,pn
mov
ljmp
lret
sahf
enter
rorb
fdivrs
imul
mov
out
xchg
push
cmp
mov
loopne
sbb
sbb
stos
stos
fdivl
dec
cld
loopne
sbb
inc
call
mov
pop
in
push
mov
das
and
dec
out
mov
nop
push
cs
fadds
mov
or
adc
inc
pop
fidivs
adc
adc
rcrb
fcomps
enter
in
and
or
adcb
cltd
fistl
fistpl
sbb
mov
andl
enter
lds
push
stos
jbe
mov
jae
cmp
mov
cmp
fadd
ljmp
ds
xor
inc
mov
sbb
mov
mov
xchg
stc
adc
add
lds
inc
iret
inc
sub
add
xor
push
mov
push
push
jl
sub
sbb
int3
inc
ror
xchg
stos
stos
mov
mov
cmp
ret
lea
popf
xor
or
into
mov
call
sbb
mov
adc
jo
ret
cmpsl
mov
xor
test
inc
mov
and
scas
out
out
sbb
mov
jmp
mov
imulb
sarb
inc
and
xor
mov
add
push
addr16
jg,pt
or
mov
cs
mov
xchg
pusha
repnz
or
push
aas
stos
loop
sbb
clc
pop
mov
mov
jbe
into
sbb
and
cmpl
shrb
mov
cmp
mov
icebp
fistpl
dec
mov
sbb
ljmp
bound
lods
ss
cmp
inc
lods
inc
js
insb
cmpsl
addr16
sbb
hlt
adc
test
out
sbb
xchg
push
lret
lahf
imul
int3
mov
xchg
clc
push
or
scas
js
subb
adc
cltd
push
inc
inc
cmp
ds
movsl
out
aas
mov
loope
mov
add
not
aam
bound
out
addr16
addb
mov
ret
imul
clc
dec
jb
ror
xchg
ljmp
inc
icebp
mov
mov
aas
cmp
inc
xor
out
xchg
jne
mov
aaa
lahf
mov
xlat
push
dec
cmc
mov
fcoms
nop
push
lods
push
pop
sbb
in
dec
lods
inc
mov
ret
pop
andl
cld
mov
adc
cmpsb
stos
cmp
fcoml
xchg
lock
sub
fnstsw
cmp
into
sub
in
dec
adc
ficoms
push
fidivrl
ficoml
mov
push
push
push
mov
adc
lret
mul
orb
cmp
add
pop
cmp
mov
ret
jb
jb
mov
cmp
cs
clc
add
push
out
out
lods
add
pop
cmp
fs
scas
mov
addb
fwait
add
push
rcll
rcrb
or
mov
fidivrs
ljmp
sub
pushf
sbb
cli
shl
or
in
push
mov
ss
test
fisubrl
xor
rcrb
out
mov
out
and
mov
cmp
mov
add
out
ret
adc
sbb
sbb
ljmp
and
lods
adc
into
rolb
sub
fiaddl
sbb
out
add
decl
push
or
xor
jp
sbb
cmp
rorb
call
testb
rorl
pop
loopne
ds
scas
fdivs
ja
scas
jp
add
mov
adc
mov
mov
mov
mov
xor
xchg
lahf
addr16
pop
bound
mov
mov
mov
mov
repnz
rcrb
mov
ficoml
sahf
cli
cmp
pop
pop
adc
or
cmp
add
push
lods
outsl
push
jg
pop
inc
divb
ret
shr
out
mov
xchg
cmp
or
addr16
aam
stos
int3
pushf
lock
lods
push
xchg
xchg
mov
popf
or
mov
pop
or
xchg
pop
fisubrl
xor
xchg
rcl
cmpb
push
dec
or
fmul
mov
mov
cmc
lods
mov
pusha
mov
sbb
push
gs
ds
repnz
or
outsl
push
fstps
ss
scas
arpl
stos
inc
cli
inc
bound
jecxz
lock
fstl
in
ljmp
sub
clc
shlb
insb
or
cmp
imul
xchg
ret
hlt
cld
ss
mov
int
sahf
mov
les
cmpsb
rdmsr
es
lods
outsl
insb
push
ret
xchg
jb
add
adc
ljmp
lea
or
jne
sti
sub
push
mov
clc
xchg
repnz
xchg
push
outsb
sub
data16
push
xor
dec
mov
xchg
out
push
push
scas
mov
pushf
xlat
ss
dec
mov
arpl
and
dec
shl
shrb
int
mov
loope
mov
xorb
or
jns,pt
cli
jbe
mov
adc
add
idivb
lcall
test
out
cmc
in
movsl
ds
push
xchg
clc
lcall
mov
sahf
cld
push
or
sbb
jns
sahf
mov
cmp
inc
xor
mov
push
stc
and
sub
outsl
push
xor
scas
stc
lret
sbbb
ds
outsl
insl
add
lcall
push
inc
mov
jnp
sub
mov
xor
jg
data16
add
push
int
adc
xorb
cs
cmp
ljmp
add
xor
mov
into
xchg
jno
mov
ljmp
sub
sbb
pop
inc
pop
pop
fdivl
mov
push
jae
mov
add
inc
mov
xor
movsb
sub
jge
add
mov
push
xor
xchg
push
push
sbb
sub
fsubrs
jp
orb
movsl
xchg
pop
cld
sub
clc
ds
ljmp
pop
adc
stc
sbb
orl
sbb
dec
fisubrl
sahf
mov
cmc
cwtl
sbb
shrb
leave
mov
orl
adc
aaa
or
fs
mov
mov
fwait
lahf
clc
cmp
mov
inc
fmul
rcrb
cmp
push
out
adc
lea
cmc
xor
gs
iret
add
mov
or
ret
int
stos
lods
faddl
mov
bound
mov
sarb
mov
fidivrl
xchg
insl
bound
cs
hlt
test
repnz
mov
xchg
pusha
ret
cmp
fisubrs
push
aam
inc
stos
fsqrt
adc
xor
arpl
mov
dec
xor
inc
add
cmp
loopne
push
dec
testl
lea
std
lock
out
lret
mov
cwtl
push
mov
or
shll
or
ret
sti
iret
rolb
das
outsb
cwtl
ljmp
inc
imul
int3
push
xorb
push
dec
xorb
push
push
pop
inc
add
pop
insl
jo
les
popa
enter
loop
lcall
idivb
enter
or
xchg
scas
ss
fs
aaa
xor
inc
pop
gs
mov
cmp
jge
adc
or
andb
dec
sbb
push
adc
mov
out
xlat
push
jae
stos
mov
pushf
push
fmul
rcrb
stos
push
dec
cli
repz
adc
adc
push
mov
movsl
lea
dec
jmp
inc
lods
add
sbb
sbb
mov
ljmp
xchg
adc
cmp
outsl
shlb
rcr
adc
push
adc
iret
and
xchg
les
mov
cmp
push
lods
mov
pop
pushf
outsl
hlt
cs
ss
xor
mov
adc
sbb
adc
fildll
push
jp
cmp
mov
ds
inc
fidivl
jo
dec
outsb
cmpsl
out
adc
enter
fisubrl
mov
xor
loop
jnp
fstp
push
test
inc
mov
adc
sbb
cmp
adc
fidivrs
outsl
mov
lods
pusha
mov
mov
jb
ret
pop
jae
mov
test
sub
mov
out
into
mov
lret
lret
sbb
jge
lods
outsl
int
lock
cmp
jecxz
inc
xchg
pushf
or
or
mov
push
mov
fisttps
mov
lods
mov
or
cs
xchg
cmp
dec
cli
adc
pop
jge
mov
jno
aaa
mov
testb
xorb
mov
adc
int
movsb
pop
shr
aas
shll
aas
adc
mov
xor
mov
add
mov
sbb
dec
nop
enter
ljmp
and
fsubs
fs
push
push
int3
sbb
into
cs
xor
test
ss
fcom
mov
lret
mov
jg
mov
add
add
mov
inc
lock
insb
les
in
mov
rolb
jbe
xchg
int3
add
mov
popl
sub
add
repnz
add
xor
add
mov
xlat
adc
mov
cmp
clc
lcall
addr16
mov
lock
arpl
mov
in
out
xor
push
sub
xchg
mov
mov
shll
push
mov
xlat
lret
mov
mov
in
loope
inc
hlt
cmp
in
adc
jp
xchg
aaa
pop
in
pushf
adc
cmp
mov
push
aas
call
pop
sbb
cmp
ret
cld
pusha
fs
mov
and
dec
xchg
or
push
xchg
mov
sbb
jp
or
arpl
sbb
xchg
js
lcall
outsl
pop
into
shlb
sbb
xchg
push
sbb
ds
pop
xor
popf
lret
ret
mov
sub
scas
sbb
lods
add
adc
pusha
repz
scas
xchg
aad
fwait
pusha
sbb
sbb
cli
xchg
fldcw
pusha
pop
xor
mov
adc
leave
add
ds
push
and
mov
jle,pt
ljmp
lret
fimuls
and
les
dec
xchg
fcmovnu
jbe
int3
adc
mov
push
adc
xor
les
aam
push
into
scas
les
jnp
and
sub
aas
mov
fdivrs
cmp
pusha
imul
jp
les
sbb
mov
lret
cmp
out
ds
adc
mov
adc
scas
cmp
dec
into
fsubrl
adc
fwait
jb
ror
mov
mov
xchg
mov
mov
adc
mov
dec
mov
cmp
shrb
and
fiaddl
stos
sbb
mov
cmpsl
add
ficoms
shrb
fcomi
adc
pop
jecxz
jg
jbe
into
lods
iret
cld
shll
mov
push
sub
inc
cld
rolb
and
nop
cli
divb
mov
nop
jmp
sub
fwait
test
mov
mov
xor
xchg
mov
enter
movsb
dec
std
cmp
sbb
xchg
inc
push
sbb
or
aas
mov
or
incb
out
int3
ret
cltd
sahf
or
andl
cs
adc
lahf
fdivrp
repnz
inc
ss
pop
sub
mov
cs
int3
fldl
jo
pushf
in
repnz
fcmovnu
dec
in
push
mull
cmp
cmpsl
dec
idiv
mov
daa
test
stc
jmpw
popf
cmpb
std
movsb
adc
sbb
xchg
push
mov
mov
test
dec
mov
aad
cmp
cli
pop
pop
sub
decb
mov
sbb
in
pushf
ficoml
shlb
or
mov
jbe
add
lahf
out
push
jo
out
data16
cbtw
sbb
sub
push
ljmp
mov
mov
mov
fwait
ljmp
int3
push
xchg
rol
xchg
xchg
sub
fdiv
mov
sbb
mov
xchg
mov
cld
enter
mov
mov
cwtl
mov
add
lds
jle
popa
push
add
mov
jbe
in
lods
xchg
icebp
cmp
jmp
fsub
iret
les
xor
mov
scas
add
push
add
cmp
adcb
stos
push
mov
sub
mov
pop
lahf
shlb
shlb
in
dec
data16
push
push
xor
jo
scas
push
or
cmp
les
cltd
mov
xor
js
mov
xchg
sub
popf
int3
mov
ss
jecxz
out
fiaddl
cmp
test
testl
adc
ret
fadd
sub
scas
mov
pop
xchg
or
out
lods
adc
fcmovu
xor
xchg
add
lahf
mov
int3
out
mov
mov
mov
xchg
shll
andl
rolb
aam
cmp
mov
fcom
or
sbb
shlb
stos
ret
sar
sbb
cmp
cmp
ret
int
pop
pusha
aam
outsl
pop
mov
test
xor
movsb
sub
mov
mov
sub
or
mov
les
adc
add
mov
scas
mov
test
ljmp
jle
lahf
add
xor
mov
outsl
mov
repnz
push
mov
add
icebp
pusha
xor
ret
or
mov
enter
inc
fwait
cmp
movsb
rol
mov
dec
pop
loope
adc
hlt
aad
shr
jle
lea
lods
adc
sarb
push
scas
stos
mov
aas
call
ror
add
scas
mov
stos
add
push
xorb
mov
lock
movsb
cwtl
mov
jg
clc
out
jg
xchg
adc
in
stos
les
adc
fwait
ret
lret
push
cli
ds
mov
add
fcoms
arpl
or
mov
dec
jnp
cltd
subl
dec
aas
mov
sbb
in
xchg
cmp
or
and
pushf
shlb
enter
jg
jp
mov
outsb
pop
out
cmp
inc
les
mov
xorl
mov
lods
push
and
in
lahf
cmpsb
xor
mov
adc
dec
adc
add
aas
btc
adc
fs
fdivl
fwait
inc
mov
fcoms
mov
mov
push
xchg
fistpl
xlat
out
or
add
cmp
mov
das
aam
loop
pop
cs
cmp
testb
cmp
stos
push
stos
ret
les
xchg
popf
or
xchg
and
xchg
inc
sbb
subl
repnz
into
push
incb
mov
sbb
and
cmc
out
xchg
fwait
cli
clc
jg
ret
pop
test
mov
add
add
xchg
xchg
fdivr
fistpll
mov
sbb
fmuls
mov
aas
lds
push
fwait
pop
fmull
and
sub
cwtl
push
cmp
popa
lods
shl
and
push
lahf
mov
and
mov
xor
inc
int3
in
cmp
cmp
or
mov
xor
addr16
ljmp
scas
ss
mov
cmp
mov
fmuls
and
cli
mov
push
or
out
push
outsl
cltd
jg
ja
and
push
push
push
pop
out
fsubrl
sahf
pushf
add
xor
inc
aam
push
or
lock
mov
int3
out
xchg
push
mov
mov
inc
inc
das
es
ret
dec
test
pop
lret
sti
hlt
mov
sbb
fwait
gs
sub
clc
cmpsb
mov
repnz
outsl
pop
jb
decb
mov
divb
sub
pop
popf
mov
wrmsr
push
mov
push
lds
inc
or
push
cmp
add
in
enter
test
ret
lret
fcmovu
push
add
imul
jmp
out
ds
jp
insl
pop
nop
lock
jns
sti
sbb
int3
movsb
push
pop
repnz
aam
mov
cld
filds
out
mov
mov
int3
mov
ljmp
mov
sbb
rorb
into
enter
mov
pop
repnz
inc
daa
ss
mov
ljmp
ljmp
jmp
pop
pop
add
daa
push
mov
rcrb
jg
lds
inc
fildl
mov
add
push
bound
shl
pop
inc
hlt
fisubl
sbb
cmc
decb
aaa
lock
add
adcb
ret
inc
inc
inc
repz
stc
into
push
mov
push
push
aas
ljmp
lods
mov
rclb
lcall
shr
imul
cmp
mov
xor
cmpsl
xor
fcomps
aas
xor
dec
aas
xchg
test
jp
or
lret
addr16
hlt
adc
jp
dec
shll
movsb
dec
dec
lods
repnz
dec
in
lods
in
pop
dec
jge
sub
lods
shl
pop
mov
addr16
clc
push
jns
cmp
mov
push
movsl
adc
mov
sub
rolb
mov
inc
add
popa
or
inc
sub
lods
clc
push
mov
cmp
push
test
cld
push
hlt
rcrb
ds
sbb
or
pop
sbb
scas
mov
xchg
test
movaps
xchg
or
andb
sbb
push
mov
add
cli
movsl
stos
lds
shlb
inc
adcb
sti
cmp
in
mov
sbb
push
fmuls
js
dec
mov
sub
lock
mov
cs
scas
mov
xchg
xchg
jg
mov
ret
inc
insb
cmp
or
popa
out
xor
mov
mov
mov
push
in
mov
pop
xor
jo
scas
xor
out
nop
rclb
xchg
mov
repz
jae
dec
push
lret
inc
int3
push
sbb
cmp
mov
mov
aad
stos
lahf
aas
scas
lods
add
mov
pusha
sbb
lret
push
movsb
jp
jp
subb
shll
jge
jae
mov
fidivrl
mov
inc
cmp
scas
das
lock
sbb
out
cltd
sbb
popa
and
ss
int
std
push
cmp
lret
cmp
mov
lock
sub
mov
rcr
push
xor
or
cli
adc
inc
sahf
ja
mov
lods
test
cmp
int3
mov
cmp
repnz
scas
out
mov
into
adc
mov
mov
pop
dec
cli
mov
ds
je
sub
ss
xchg
mov
mov
ret
or
mov
fbld
push
cmp
fisttpl
sbb
cmp
adc
ret
sbb
xor
dec
adc
sbb
xor
subl
adc
push
sub
xchg
test
std
fcmove
movsl
fsub
frndint
push
and
mov
cmp
loope
xor
clc
xchg
push
inc
sbb
inc
mov
mov
ror
mov
hlt
adc
daa
ret
out
mov
cmp
clc
into
addr16
inc
or
stc
mov
cmp
inc
shl
lret
rcrb
sbb
cmp
xor
ljmp
dec
stos
push
fnstenv
sbb
std
lcall
fdivr
test
rcrb
mov
aam
lret
pop
ss
ss
xor
lods
sub
idivl
and
mov
xor
add
xor
je
sahf
jmp
jnp
dec
push
addr16
popa
sbb
ss
ss
xchg
mov
xor
bound
push
mov
adc
or
out
cmp
test
cwtl
push
out
cmp
fdiv
andl
fcoml
stos
push
ss
xchg
ja
inc
or
mov
sbb
jecxz,pn
sub
pop
mov
push
cmp
cmp
fwait
add
fildl
int3
mov
xchg
lock
sub
and
add
bound
mov
shll
lods
in
out
rolb
fs
dec
lcall
test
aaa
pop
adc
outsl
test
jo
test
mov
sbb
push
enter
or
shr
mov
xorb
pop
testb
xor
hlt
mov
jnp
sub
test
jae
das
push
insb
xor
aaa
testb
mov
fistpll
ss
xor
enter
xor
data16
adc
add
add
enter
rclb
ret
ds
add
xor
in
idivl
iret
jne
pop
fidivl
scas
out
pusha
mov
add
clc
sbb
repnz
fs
hlt
shll
sub
addr16
mov
inc
jp
dec
jle
addr16
push
mov
into
test
addr16
cmp
aam
ret
fdiv
xor
push
jmp
and
inc
sbb
inc
sbb
jmp
mov
xchg
popa
xor
xor
sub
jns
adc
mov
sbb
mov
fwait
push
divb
pop
xor
adc
sbb
xor
das
movsl
js
push
fsubs
jbe
movsb
pop
int
dec
cmp
cmp
flds
fsubrl
or
and
das
adc
push
ret
out
in
cltd
std
repnz
mov
add
jg
aas
adcb
outsb
adc
or
shrb
cmp
dec
ljmp
cld
ss
jbe
mov
add
out
nop
ljmp
adc
repnz
ljmp
cltd
fistpl
sub
jbe
lcall
f2xm1
movsl
ret
aam
or
scas
ss
ljmp
ja
adc
adc
test
dec
cmpsb
aam
shrl
scas
add
les
shll
addr16
jb
ljmp
xor
add
xchg
xorps
clc
xor
lret
addr16
in
ret
mov
xchg
or
cld
aam
add
mov
ss
mov
sbb
int
lret
test
mov
sub
jg
iret
les
jg
int
addr16
scas
les
dec
mov
test
cltd
int3
ret
push
nop
cld
mov
loopne
test
enter
mov
mov
fcmove
push
int3
shll
int3
jb
or
callw
out
mov
mov
repnz
scas
inc
loope
push
add
mov
bound
sbb
bound
mov
pop
stos
ss
add
and
or
or
mov
pop
jmp
add
es
addr16
ret
push
shlb
insl
ret
in
ss
repz
sub
push
ss
adc
inc
mov
lret
mov
jb
lods
fistpll
ja
rcl
stc
or
mov
in
cs
ljmp
mov
in
xchg
outsb
mov
adc
xchg
sbb
mov
nop
in
mov
daa
cmp
sub
add
fucom
cld
test
mov
xor
in
add
hlt
adc
cs
adc
cmp
loop
sub
add
add
push
cmp
push
testb
push
mov
pop
fdivs
mov
mov
xchg
out
mov
mov
scas
push
rorb
push
rcr
mov
lock
add
pushf
cld
stos
out
sbb
fidivrl
and
cwtl
ljmp
lret
sbb
mov
push
mov
push
mov
ficompl
mov
xacquire
adc
stos
mov
dec
dec
mov
insl
adc
jno
xor
rcrb
into
push
pop
cs
in
clc
pusha
or
enter
sahf
and
lret
add
add
xor
xchg
insl
arpl
ds
cs
mov
scas
fdivl
pop
push
xchg
idivb
or
lahf
clc
out
fwait
and
lcall
sbb
gs
popf
out
xor
lret
fcmovnu
push
stos
pop
dec
cli
scas
dec
or
and
or
dec
mov
sbb
rcrb
and
aam
adc
cmp
and
addr16
xchg
divb
fdivs
cbtw
stc
int3
sahf
repnz
inc
test
testb
xchg
cs
mov
and
shlb
adc
fs
sbb
push
sub
shl
adc
dec
and
mov
ret
pop
mov
fistpll
or
add
adc
push
in
xor
loopne
mov
popa
sbb
aam
lret
mov
mov
sub
jle
sbb
cmp
add
out
mov
lds
inc
adc
out
sarb
jg
push
enter
movsb
pop
leave
xchg
fdivl
sbb
sbb
xchg
mov
mov
cld
mov
hlt
in
sbb
sub
mov
scas
ret
pop
fbstp
push
in
xor
xor
pop
int3
or
mov
xchg
jmp
fwait
jl
pop
out
repnz
mov
sbb
sti
mov
stos
push
xor
hlt
aas
push
popa
mov
shrl
inc
repz
lock
xor
add
aam
psubusw
fistpll
xchg
shrb
sahf
mov
enter
test
int
mov
addr16
ja
shll
mov
push
mov
mov
out
nop
int
int3
cmc
lea
orb
lret
mov
lahf
fldl
adc
ret
jg,pt
pusha
fimull
cs
mov
hlt
lods
out
in
cld
daa
or
mov
shll
out
adc
adc
pusha
adc
fsubs
jo
lcall
ds
clc
mov
ret
int
add
cltd
pop
push
cld
push
scas
lret
lahf
push
ds
or
lods
lds
in
lea
cmp
testb
aam
push
clc
xchg
out
adcl
into
or
cmp
sahf
roll
out
ret
es
out
xor
jmp
repnz
push
fcoml
lds
out
imul
and
ljmp
jns
inc
xchg
std
xor
fwait
test
mov
fdivs
repnz
filds
lods
lcall
mov
gs
int3
sarb
add
mov
clc
ljmp
push
adc
cwtl
sbb
notb
addr16
arpl
call
dec
jle
test
mov
xor
lret
mov
rorb
mov
orl
test
mov
insb
mov
xchg
adc
addr16
push
sub
cld
xor
scas
clc
sahf
or
sbb
int3
mov
outsl
and
sbb
ret
iret
leave
clc
xchg
pushf
ljmp
fiaddl
outsl
push
aas
or
rcrb
adc
lock
imulb
add
xchg
xchg
ljmp
ror
int3
cmc
lahf
xlat
fidivl
div
or
xchg
jb
cmpb
xchg
nop
mov
mov
mov
sub
lods
sub
mov
mov
lahf
sbb
mov
bound
lock
mov
out
jnp
pop
sbb
mov
sbb
js
dec
idivl
pop
cli
out
fcompl
mov
dec
add
stos
lock
pusha
rcrl
repnz
cmpsb
clc
xor
lods
lret
and
outsl
decb
dec
mov
mov
fidivs
ss
mov
ljmp
mov
nop
cmp
mov
xchg
aad
adc
imul
push
sbb
stos
xchg
mov
cmpb
cmpsb
cli
clc
das
or
ss
icebp
fdivr
push
jecxz
iret
ror
dec
out
inc
dec
mov
add
push
cmp
adc
in
ds
mov
or
push
out
ds
repnz
jns
enter
rcrl
rorb
insb
xor
dec
test
repnz
int3
rorl
leave
popf
cli
mov
sub
stc
xor
fmul
lods
pop
jb
push
adc
cmpsl
fdivs
mov
dec
lea
inc
lcall
subl
aam
pushf
mov
in
adc
pop
push
or
mov
mov
ret
rcr
push
repnz
or
ss
cs
sbb
xor
sbb
negb
xchg
sbb
cmp
adcb
or
or
sbb
cmpl
cli
adc
js
lods
into
in
xor
in
into
sahf
jnp
or
jg
aas
jo
cld
push
in
push
inc
add
or
jb
lret
lcall
lds
int3
mov
ret
mov
sub
popf
push
sbb
jnp
or
jecxz
sarb
push
sbb
push
aam
adc
push
sub
cs
cmp
push
adc
test
mov
ja
fwait
int3
ss
push
push
inc
mov
inc
scas
rorb
rclb
repnz
jl
cs
inc
aam
repnz
cmpb
faddl
popf
iret
idivb
mov
sub
sub
mov
lea
fadds
fisubl
lahf
jb
xor
das
data16
cmpb
xor
pop
mov
inc
mov
out
stos
cmp
push
aas
push
in
jae
mov
push
mov
out
dec
adc
imul
enter
push
shl
cmp
inc
ss
addr16
pop
ss
pop
sub
aaa
sub
movsl
fsubs
fildll
cmpsb
nop
lcall
inc
scas
push
mov
das
inc
sarb
pop
mov
mov
outsl
xchg
xor
sbb
mov
fistpll
scas
jbe
add
xorb
in
sub
xor
hlt
negl
cwtl
sub
mov
enter
out
sbb
repnz
and
into
cltd
in
stos
out
fistps
nop
fimull
ljmp
cmp
mov
fidivrs
js
adc
mov
xor
fidivrl
adc
lret
rcrb
sbb
out
enter
mov
sub
out
xor
mov
in
popf
ja
add
hlt
push
scas
out
ss
rorb
call
aad
sbb
mov
clc
inc
xchg
push
mov
outsb
inc
cs
push
ds
xchg
adc
mov
mov
adc
ss
into
dec
aam
push
sub
das
pushf
daa
aas
insb
stos
adc
sub
lds
mov
ljmp
lods
stos
es
cli
mov
ret
adc
jns
out
cs
jp
mov
mov
xchg
sbb
add
sub
fcompl
fs
mov
js
inc
xor
add
movsl
sbb
aad
shlb
jbe
aas
inc
movsl
scas
jg
inc
mov
mov
push
jnp
negb
sub
push
mov
xlat
xchg
lret
in
hlt
int3
xchg
enter
jp
mov
stos
mov
push
repnz
lahf
pusha
adc
sbb
mov
pop
ret
lods
cs
outsl
out
insb
data16
stos
loop
mov
rcrb
fisttps
cs
mov
or
les
jnp
fcomps
mov
addb
mov
sub
into
cmp
int3
jae
lcall
testb
add
adc
dec
mov
xor
faddl
and
push
scas
sbb
push
push
jb
or
adc
push
push
lock
lock
mov
rolb
pop
xor
lret
adc
inc
insb
idivl
fisttpll
mov
int3
sbb
sub
mov
into
sbb
stos
imul
adc
push
les
test
lds
mov
xor
xor
inc
fsts
pusha
xchg
mov
negl
push
jae
leave
ds
fdivrl
xchg
daa
or
rolb
push
sbb
cld
stos
fdivl
test
add
jge
rcrl
sbb
in
add
push
xorl
ljmp
push
or
out
jp
cli
clc
jp
cwtl
sub
int3
xor
or
int
icebp
ja
inc
xchg
in
xchg
fs
fsub
sbb
lock
sub
cmp
fidivl
arpl
sbb
or
int
dec
mov
std
jne
sub
jg
mov
xchg
mov
negb
scas
sbb
or
push
ds
das
or
dec
push
pop
adc
push
or
push
sub
outsb
cmp
mov
aad
mov
aas
cmp
mov
in
mov
push
out
in
push
cs
cmpsl
or
push
mov
mov
sti
mov
mov
imul
aas
or
mov
jnp
xchg
dec
repnz
stos
sbb
outsl
lods
ja
inc
ffreep
lock
imul
roll
sub
scas
inc
ret
out
fisubl
decb
cmp
cmp
push
nop
out
shlb
repnz
add
adc
mov
data16
push
int3
sub
lods
fadds
rcrb
repnz
jne,pn
and
mov
mov
rorb
pop
mov
in
jo
xchg
loop
ret
adc
hlt
int3
out
dec
xchg
dec
fidivrs
loopne
scas
jg
shlb
fiaddl
sub
outsl
out
mov
ljmp
rorb
popa
ljmp
sbb
or
sbb
cmp
scas
lock
push
shl
add
xor
inc
int3
cli
mulb
sub
jns
scas
sbb
or
mov
inc
jno
cmp
stos
cli
inc
push
dec
imulb
aas
daa
add
push
shlb
push
dec
push
cmp
mov
scas
or
lock
fsub
xor
xchg
outsl
jl
mov
add
stos
cmp
xor
sbb
lret
pop
jb
jle
pop
xor
fnop
mov
int3
push
inc
testl
add
adc
ljmp
mov
mov
repz
fwait
sti
push
movsl
fisubl
iret
repnz
test
call
xor
sbb
ret
popf
mov
push
mov
adc
pop
jp
mov
clc
add
test
incb
jo
out
cs
out
or
ds
pop
int3
sbb
xor
fwait
add
iret
ja
clc
int3
jo
xchg
mov
push
or
inc
adc
arpl
aam
lock
out
faddl
jge
js
xor
into
xchg
dec
xor
idivb
arpl
fcompl
inc
popa
inc
enter
loop
push
adc
adc
ss
pop
cmp
or
lds
int3
lret
sbb
out
lcall
cli
push
mov
scas
sub
mov
adc
fisubrl
push
loop
cmpsb
jp
mov
out
testb
dec
ret
xor
cmpsb
in
addb
dec
xchg
bound
inc
popa
popf
push
cmp
aam
cld
pop
cltd
scas
cs
lock
hlt
int
mov
dec
xor
sbb
mov
fmull
inc
inc
mov
mov
fidivs
ret
sub
mov
dec
add
push
push
inc
dec
jo
lods
jle
and
lret
jno
sub
js
data16
call
sbb
xchg
inc
enter
sbb
adc
mov
ss
int3
pop
adc
lock
sbb
jb
or
xchg
add
ljmp
test
fimull
mov
adc
aas
scas
jp
ret
scas
mov
adc
push
push
pop
mov
adc
xor
insb
mov
mov
sub
xchg
mov
sub
lret
push
adc
jb
rol
das
lret
jne
andb
ss
ljmp
rorb
jnp
adcb
sub
js
xchg
bound
movsl
mov
push
fisttps
jo
ss
nop
lods
lret
xor
mov
mov
or
lods
das
repnz
lods
adc
icebp
cli
dec
fwait
mov
daa
mov
fdivr
add
adc
scas
jae
mov
jne
inc
pusha
int3
aad
jp
mov
xor
clc
mov
inc
fisubs
mov
adc
daa
adc
enter
push
mov
sub
ljmp
cli
aaa
and
mov
lods
fmull
fisttpl
sbb
fcompl
std
sahf
scas
les
or
mov
xor
jg
sbb
adc
and
dec
adc
push
cld
stos
pop
out
xor
jmp
cmp
xor
mov
cmpsl
outsb
pop
inc
ret
cmc
ja
pop
push
and
out
and
xor
cli
enter
repnz
adc
in
and
fdiv
dec
dec
and
arpl
jl
lock
sub
pop
jmp
push
inc
mov
sbb
push
sub
dec
and
cld
mov
cltd
sub
mov
repz
or
mov
sti
mov
aam
mov
cmp
fnstsw
or
out
in
mov
jb
mov
int3
lods
add
adc
data16
and
dec
push
add
das
clc
stc
mov
cltd
or
ljmp
jo
out
ss
mov
std
xchg
inc
push
mov
add
pop
fidivrs
add
sbb
les
addb
xor
add
jb
push
out
cli
mov
sahf
push
mov
scas
lods
xlat
hlt
pop
sbb
xor
fldenv
into
add
dec
addr16
fcoms
xchg
ds
fildll
push
mov
lcall
mov
mov
jnp
les
shlb
add
mov
imul
enter
sbb
scas
inc
xor
push
push
les
bound
sub
adc
aad
mov
popf
add
dec
out
scas
push
enter
fidivrl
dec
inc
imul
popf
sub
fmull
sub
cmp
jmp
in
and
pop
jle
adc
dec
mov
pop
dec
ds
mov
rolb
lcall
out
bound
cld
jg
test
lret
repnz
mov
imul
enter
mov
sbb
mov
neg
out
sub
aam
sbb
cli
mov
repnz
scas
int
or
or
xchg
adc
ret
ret
xchg
outsl
into
jno
adc
ss
fcmove
int
daa
pop
push
push
xchg
xchg
mov
stos
mov
sbb
ss
out
imulb
inc
mov
sub
cmp
push
arpl
cmp
xor
dec
pop
push
mov
hlt
in
in
test
lret
or
aam
add
ret
ficoml
fdiv
jp
cltd
adc
mov
add
or
fnsave
fisubs
test
sbb
add
fisubs
cld
jae
push
jbe
sbb
xchg
rclb
cli
cmp
mov
aam
dec
add
repz
test
mov
cmp
ret
push
ljmp
sahf
jo
cld
add
dec
mov
sbb
cmp
fidivs
push
shl
jb
jle
push
jo
enter
ds
fwait
sub
cmp
push
repnz
cmp
xor
pushaw
rcll
push
fmuls
stc
shlb
fcmovu
fdivrl
or
xor
addr16
lcall
add
addr16
into
push
sahf
aad
cmp
idivb
add
lahf
cmp
mov
mov
add
mov
cld
and
or
push
mov
push
pop
in
add
and
addr16
pop
movsb
popf
jg
into
pop
mov
ret
gs
xor
into
cli
aas
jns
adc
xacquire
or
lods
faddp
fdivrl
adc
push
shl
inc
mov
push
clc
fisubrl
and
cmp
or
data16
push
mov
sbb
mov
test
notl
test
push
movb
loope
popf
inc
ret
es
pusha
cld
jb
pushf
and
add
ror
xor
sbbl
iret
adc
fidivrl
xchg
cmp
inc
scas
cmp
jp
add
xor
push
push
mov
scas
leave
xchg
ds
mov
cli
and
mov
push
stos
mov
repz
ljmp
mov
sarb
sub
adc
jb
xchg
les
fsubr
shll
jnp
idivb
ret
mulb
scas
xor
sbb
mov
fisubl
cltd
add
xchg
fiadds
adc
fdivrl
push
mov
push
cs
inc
jns
mov
xchg
xchg
repnz
sub
loope
or
xor
push
in
or
dec
inc
push
addr16
jp
cs
cmp
sbb
dec
mov
into
xchg
ret
push
das
call
and
loop
cli
cmp
lcall
sti
pusha
fsubl
add
mov
rcrb
cmp
repnz
mov
push
adc
pop
push
test
inc
mov
push
cld
or
popa
cwtl
inc
scas
cmp
enter
data16
mov
out
pop
or
int3
lcall
fmuls
scas
mov
and
scas
js
shrb
rorb
out
mov
loope
aaa
pop
mov
pop
jl
lret
fdivl
notb
xchg
stos
lret
xor
xor
in
pop
ljmp
adc
mov
inc
add
xchg
nop
aam
mov
pop
dec
fdivrl
cmp
fdivs
mov
ror
out
mov
out
adc
or
fcmovu
pushf
cltd
stos
cmp
les
lcall
scas
adc
test
mov
dec
pop
dec
rclb
or
xorb
pop
enter
mov
addr16
push
orb
jp
iret
push
mov
mov
div
xchg
ret
stos
sub
repz
nop
shll
and
btc
mov
aad
lcall
aam
in
cli
dec
mov
pushf
mov
cmp
sbb
repnz
lock
insl
cltd
test
cwtl
in
out
add
repnz
push
paddd
movsb
inc
aas
inc
mov
rolb
scas
lea
ss
pop
lret
cli
cmp
sbb
adc
push
sbb
mov
ret
mov
jg
ss
mov
xor
mov
mov
inc
mov
or
repnz
ljmp
das
add
out
or
jg
push
push
inc
push
addr16
add
or
lahf
push
int3
cmp
ss
test
cmp
jp
fisttpl
aas
aad
les
repnz
hlt
cmp
das
push
fs
xor
fs
mov
sbb
rorb
int3
das
cmpb
xchg
cmpsl
xchg
xchg
push
adc
push
hlt
pop
jg
sub
mov
subb
fcoml
jb
xchg
sub
mov
jae
push
xchg
xchg
and
sub
enter
xlat
or
and
fs
sbb
jp
mov
sarb
cld
mov
fiadds
negb
ret
mov
mov
xlat
cli
ds
sub
jmp
dec
mov
stos
mov
fisubrl
jnp
pushf
mov
mov
mov
sbb
sub
add
decb
outsl
mov
movsb
out
xchg
int3
cmp
sub
mov
inc
pop
and
test
ljmp
mov
add
stos
add
aas
jnp
mov
sub
in
repz
nop
adc
popf
loop
cld
inc
cmp
mov
and
push
mov
fmull
pop
in
das
jne
mov
jp
outsb
xor
scas
rcrl
jnp
cld
outsl
pop
gs
inc
ljmp
in
xchg
mov
or
stos
or
stos
push
jo
or
ror
mov
fsubrl
jb
jp
cwtl
or
mov
addl
adc
or
ljmp
punpckldq
mov
pop
repz
and
push
enter
add
nop
in
add
sub
cmp
push
adc
add
mov
das
rclb
dec
mov
mov
les
inc
cmp
mov
mov
dec
stos
mov
nop
cmp
lock
mov
mov
shlb
inc
ljmp
out
mov
dec
arpl
sub
ds
cmpb
shrb
add
inc
or
adc
add
push
ss
cs
pop
divl
fsubr
mov
es
xchg
stos
add
enter
mov
adc
xor
nop
add
ljmp
ss
int3
add
shlb
cmp
cmp
scas
mov
push
aam
ds
int3
stos
lods
rcrb
cmp
lret
enter
xor
hlt
push
fsubrs
jns
cmpsb
ret
sbb
cs
out
sbb
sahf
pop
cmp
inc
add
jb
push
mov
pop
out
popf
xchg
push
lods
sub
fimuls
outsb
ret
inc
mov
pop
cld
sbb
mov
scas
scas
mov
ss
fadds
mov
adc
sahf
push
out
push
push
inc
push
push
xchg
add
mov
xchg
cmp
sbb
rcrb
clc
fisubrs
aas
scas
lods
out
adc
sub
sarl
push
das
cltd
jbe
add
push
sbb
inc
outsb
pop
push
mov
jp
out
pop
jp
jo
dec
jle
cmc
out
inc
add
xchg
lds
ret
jo
add
sub
and
mov
pushf
aaa
mov
add
loope
mov
mov
repz
or
rcrb
sub
test
outsl
push
fwait
inc
loopne
cmp
out
mov
sbb
hlt
fsubs
xor
sti
cmp
hlt
sahf
clc
push
fsubrs
mov
fisubrl
inc
cmp
nop
mov
dec
sub
call
sbb
jb
rcrb
cld
mov
shrl
js
cmp
mov
xlat
hlt
repnz
lret
lds
xor
ds
clc
mov
mov
jle
push
rorb
orb
inc
addl
aam
ret
jb
pusha
addr16
dec
push
arpl
xor
adcl
out
data16
cmpsl
div
addr16
xchg
cmpsb
or
mov
repnz
lret
cmpsb
pop
push
out
mov
cmp
xchg
loope
imul
sbb
jecxz
push
dec
pusha
cli
xlat
es
mov
mov
mov
add
jnp
or
fmuls
ljmp
into
or
ret
mulb
mov
jno
cmp
jg
mov
jae
or
xchg
add
sbb
testb
int3
mov
adc
inc
gs
int
xor
add
fisubrs
adc
push
cs
dec
orb
xchg
mov
push
push
mov
cld
add
out
fcoml
add
dec
xor
clc
push
test
inc
pop
cmp
sbb
xor
or
mov
dec
mov
fdivrl
sarb
xchg
ljmp
int3
cwtl
enter
mov
jcxz
sbb
ja,pn
stos
loope
pop
sub
or
aam
adc
xor
sbb
xchg
adc
idivb
rolb
adc
sub
and
cmp
inc
mov
mov
ljmp
fisubrl
mov
mov
lds
inc
movsl
xor
ja
jg
test
lret
gs
incb
sbb
sub
push
xor
cmp
les
mov
test
xorb
inc
sahf
scas
inc
mov
push
push
cmp
sbb
lock
clc
hlt
jno
out
testb
mov
adcb
lret
xor
ss
mov
cmp
fld
addb
pop
inc
rclb
cs
mov
mov
xlat
scas
out
mov
cld
fdivrs
cmp
rcll
sbb
push
nop
lods
or
les
lock
inc
cld
mov
mov
sbb
ds
clc
stos
cmpsl
jb
mov
fs
add
mov
cmp
mov
les
mov
sub
stos
or
shlb
mov
inc
push
cs
inc
push
out
sub
adcb
cmp
pop
lock
repz
add
mov
ja
out
sarb
jb
mov
sar
or
imul
cmp
mov
movsl
rolb
int3
out
mov
scas
inc
dec
fs
arpl
sub
adc
dec
enter
cwtl
scas
mov
into
adc
pop
int3
push
divb
mov
mov
cmp
data16
or
ljmp
sbb
inc
sarb
inc
pushf
jne
in
neg
mov
ljmp
push
pop
xchg
xor
mov
sbb
int3
out
push
dec
pushf
repnz
mov
shll
cmp
pop
mov
add
cmp
mov
mov
pop
aam
int3
jg
movsb
cmp
mov
sbb
sbb
xchg
jg
xchg
adcb
jns
mov
and
mov
add
pushf
fimuls
mov
fisttps
lahf
int
sbb
cmpsb
push
mov
cwtl
or
aam
cld
pop
out
add
insl
cmpsl
stos
pop
xor
mov
inc
clc
lock
jp
jbe
outsl
mov
push
mov
rcll
icebp
mov
out
sbb
das
xchg
pop
inc
sbb
rol
dec
add
leave
sbb
lahf
add
scas
mov
sub
arpl
jae
mov
hlt
jg
pop
jb
xor
cmp
loopne
int3
add
sbb
fnsave
stos
repnz
jecxz
mov
mov
mov
push
scas
add
mov
add
aam
or
mov
mov
or
lcall
sarb
add
mov
enter
shl
outsl
das
inc
mov
out
jo
mov
dec
sbb
xchg
mov
sbb
inc
shl
or
aam
sbb
nop
adc
dec
cmp
scas
popa
sbb
mov
jne
dec
pushf
sub
ds
cmp
imul
mov
sub
lock
aam
mov
adc
mov
pop
adc
clc
lock
ss
repnz
and
or
xor
js
fs
and
outsb
or
cli
mov
mov
fs
rorl
xlat
ds
inc
pop
dec
mov
push
das
std
int3
mov
cs
push
aam
add
daa
push
xorb
repnz
cmp
clc
mov
sarl
sbb
fcmovb
jns
ljmp
cmp
push
cs
es
add
es
ds
mov
popa
mov
fidivrs
push
pop
daa
cmp
aaa
imul
pusha
rcll
aaa
in
fcompl
mov
fwait
adcl
lcall
jle
dec
push
xor
aam
add
shll
mov
in
sti
add
rcrl
cld
mov
jp
js
sahf
ds
into
ljmp
sbb
test
or
push
hlt
out
xchg
xchg
out
fisubrl
xor
dec
mov
push
pop
cmp
mov
jo,pn
aam
jbe
jl
mulb
sbb
pop
pop
push
push
sbb
pop
inc
rorb
movsb
pop
cwtl
movsb
cmp
out
jb
xor
fcmovne
ljmp
push
into
mov
dec
dec
lods
mov
aam
out
lods
cld
mov
in
xor
mov
lret
lcall
cmpsb
cmc
dec
sbb
mov
scas
sbb
ds
out
rolb
js
cwtl
lods
cmp
repnz
dec
lock
xlat
jmp
adc
sbb
and
cli
shrb
cmp
ds
imul
out
aad
stos
mov
mov
scas
adc
sub
sub
pop
pop
adc
ljmp
lahf
mov
cld
lods
push
sbb
jp
cs
out
xchg
cmp
and
xor
cmp
sbb
iret
int
inc
pop
loope
fisubrl
xor
in
out
scas
mov
out
pop
rcl
out
loop
push
arpl
sbb
or
ds
shlb
sti
xchg
jae
ds
sti
lock
ss
les
adcb
add
in
or
rclb
adc
in
ror
jbe
lahf
xor
fwait
pop
fidivl
shrl
cmp
mov
addr16
sub
lock
into
adc
jne
mov
cwtl
pushl
imul
sub
mov
dec
lahf
jmp
hlt
enter
ror
rolb
fcoml
scas
ret
sbb
sbb
aam
addr16
es
jl
cmp
dec
adc
stos
shr
push
inc
xor
pop
xor
aas
sub
ss
add
sbb
xor
sub
dec
insb
cmp
or
pushf
jmp
ljmp
mov
cs
ret
adc
fnstcw
mov
lock
and
nop
push
sbb
int3
mov
mov
mov
cli
ss
js
add
pop
mov
int3
mov
xchg
lahf
or
add
stc
bound
repnz
push
stos
dec
mov
ret
mov
add
or
mov
or
push
mov
push
clc
pop
inc
lret
cs
xor
data16
cmp
and
movsb
or
pop
dec
sbb
fs
rcrl
cmp
inc
scas
mov
jg
xor
jb,pt
mov
fs
in
and
jnp
or
stos
or
pop
add
fs
addr16
into
aam
pusha
adc
mov
push
dec
hlt
ds
insb
cmp
mov
jmp
push
mov
fcoms
cmp
scas
sbbl
out
mov
fstp
adc
stos
cltd
jg
fstpt
repnz
add
mov
sub
stos
mov
mov
inc
inc
ret
pusha
push
sti
mov
jb
mov
sbb
mov
fnstsw
sahf
xor
jo
push
jp
mov
sbb
push
outsl
movsl
cmp
addr16
testb
sahf
xor
mov
mov
jp
js
xchg
mov
sbb
xor
dec
push
sbb
test
aam
ret
fdivrs
add
test
mov
add
cs
les
sub
out
hlt
or
sahf
stos
push
add
ljmp
fdivs
cmp
mov
sahf
or
cmp
xor
int3
sar
mov
testb
mov
lret
xchg
mov
lock
sub
enter
addr16
aam
add
int3
out
push
xchg
out
lcall
cmp
jno
out
cwtl
mov
mov
add
pop
push
add
ror
push
lods
inc
sbb
or
mov
fwait
js
test
mov
or
les
mov
sbb
xchg
sub
add
adc
sub
jmp
xor
jbe
mov
push
xchg
mov
pusha
mov
adc
and
lods
mov
lret
push
cmpb
mov
jp
int3
mov
xor
fsubrs
or
roll
scas
xchg
and
inc
das
pop
loop
and
into
pushf
test
cmp
pop
lods
shlb
xor
cmc
jno
lcall
lea
out
aaa
push
insb
adc
sub
lret
mov
xor
mov
cmp
test
inc
fisubrl
cltd
mov
add
decb
ficoml
out
mov
xchg
inc
popf
adc
and
push
mov
pop
loopne
sarb
cmp
addr16
mov
jg
fdivrl
add
cmp
and
cli
movsb
xchg
add
pusha
ror
or
sti
arpl
adc
inc
lcall
push
orl
cmc
mov
js
cmp
fistps
out
sti
gs
mov
enter
mov
push
adc
dec
cld
mov
ja
hlt
and
jp
aas
pop
lock
fsubp
mov
stos
jne
scas
jns
das
sar
lcall
mov
mov
sbb
enter
mov
xchg
xchg
mov
cmp
cmp
pop
sub
inc
mov
mov
shlb
fiaddl
mov
fsub
dec
das
adc
out
hlt
push
xor
sbb
int3
into
adcb
mov
clc
mov
lahf
es
jbe
xor
out
mov
xor
and
jp
sub
jns
in
sub
cmp
sbb
ljmp
int3
or
and
xor
fisttpll
mov
stos
cli
scas
rol
fidivs
inc
cmp
mov
sbb
add
aam
addr16
push
mov
scas
clc
pushf
idivb
lods
sub
mov
mov
pushf
push
adc
fadd
or
adc
out
cmp
aas
adc
fsubrl
add
sbb
lock
je
mull
lahf
inc
push
fadd
xor
pop
push
push
mov
push
js
add
sub
jo
iret
mov
scas
loop
rolb
mov
enter
pop
adc
adc
lods
lea
mov
test
push
mov
cli
lods
or
jp
inc
lahf
xchg
into
les
and
or
mov
inc
adc
rcr
mov
iret
mov
mov
mov
scas
aas
jg
fstps
and
fsubr
fadd
fisttps
pop
neg
es
push
xchg
into
or
xor
mov
fdivrs
sti
sbb
lret
push
dec
or
sbb
fsubl
pop
sub
orb
clc
lcall
enter
in
adc
lcall
cs
adc
jb
mov
xlat
dec
js
fadd
cmp
movsb
jne
pusha
mov
jns
inc
cmp
bound
or
mov
jmp
jecxz
cmp
shl
push
or
cmpsl
out
xor
add
lcall
push
addr16
inc
mov
mov
ss
lods
nop
out
mov
out
pop
fmul
push
fcom
ds
sub
shlb
out
and
mov
lods
xor
push
lret
fidivrl
cli
add
jp
outsb
scas
sbb
lods
fcoms
adc
mov
xchg
inc
adcb
mov
adc
ret
scas
dec
shl
into
mov
icebp
mov
mov
mov
fmul
push
shlb
and
insb
xor
inc
sbb
fcmove
mov
dec
insl
mov
xor
gs
mov
or
cld
ljmp
rcll
sbb
fstps
sbb
lret
rclb
mov
in
xchg
cld
xor
stos
aad
fdivp
sub
scas
or
lret
jp
fcmovnu
fwait
xchg
mov
fwait
rolb
mov
movl
scas
and
in
es
mov
sbb
in
aaa
dec
pop
jl
bound
sub
add
mov
inc
or
mov
out
ds
into
add
xchg
jnp
fcom
push
mov
sbb
lret
or
xchg
in
out
mov
cld
ds
std
rcr
ss
ret
out
into
lret
mov
mov
cmp
fists
gs
pop
les
cmp
jne
out
clc
mov
xor
mov
add
pop
mov
out
insl
fldcw
mov
dec
xchg
ss
sbb
pop
aam
mov
mov
rcll
mov
mov
outsl
xchg
fcmovb
aam
push
out
add
and
addr16
mov
add
shlb
rclb
xchg
push
out
mov
insb
lcall
mov
and
pop
loop
cmp
lods
insb
fcompl
outsl
les
mov
ljmp
pop
divl
lea
and
arpl
push
pop
mov
jb
ret
in
lea
enter
mov
add
dec
mov
xor
ljmp
add
adc
int
repz
or
out
popf
ret
shr
mov
sub
sets
or
stos
adc
stos
ret
mov
mov
rcrl
fdivl
fiadds
leave
push
mov
pusha
add
sbb
jnp
mov
ss
fcmovnu
xor
cmp
notl
push
scas
lcall
ljmp
sub
push
mov
repz
xor
sbb
stos
cmc
mov
mov
rcl
inc
adc
jle
scas
mov
or
xor
mov
or
add
push
jbe
mov
sahf
push
or
ss
ljmp
sbb
mov
mov
sar
repnz
sub
push
or
or
and
fdivrl
test
pop
lock
xor
ljmp
sti
fcoml
fs
enter
jg
rclb
mov
jmp
dec
cld
inc
cmp
nop
decl
daa
mov
imulb
mov
dec
aas
cmp
lods
mov
sbb
out
fdivl
or
fs
pushf
mov
ljmp
sbb
pop
mov
dec
stos
fsubl
mov
in
push
dec
test
fwait
scas
fcompl
aam
jg
sub
ds
scas
das
sub
repnz
cmp
in
out
int3
mov
xchg
in
push
outsl
fildl
aam
push
fldenv
in
add
scas
subb
and
movsb
sbb
in
cli
add
ljmp
jnp
repnz
xor
ret
mov
add
mov
and
xchg
clc
cli
rcrb
rclb
push
repz
orl
popa
inc
xchg
pushf
repnz
xor
fidivrs
xor
xchg
shlb
add
out
add
sub
inc
addb
fwait
push
rorb
push
mov
dec
pop
push
icebp
iret
cs
pop
mov
push
addr16
ss
lahf
aas
ljmp
xor
xchg
in
mov
ffree
cmp
adc
push
add
adc
daa
add
push
arpl
cmp
xor
das
mov
adc
gs
ss
adc
int3
adc
iret
cmp
jmp
fistpll
add
fstl
lock
loope
push
xchg
push
shl
and
xchg
popf
mov
into
mov
mov
cmp
xorl
push
adc
arpl
rcl
jp
cltd
jae
dec
ficompl
scas
mov
add
ja
mov
and
cli
mov
popf
xor
idivb
fcmovnb
fsubr
push
arpl
adc
or
popa
popf
adc
mov
mov
inc
outsl
push
movsl
hlt
cs
mov
popf
fcoml
fimuls
push
mov
mov
push
xor
mov
cmpb
add
and
out
inc
push
outsl
mov
mov
popf
dec
sbb
inc
cmpb
sbb
xor
into
mov
cli
jg
bound
or
into
sbb
adc
loopne
mov
sbb
sbb
mov
or
push
lret
dec
sub
fisubs
clc
int3
decl
push
inc
aam
push
inc
insb
mov
rolb
clc
jb
cli
adc
jle
icebp
mov
dec
push
sbb
adc
mov
pushf
insl
repnz
pop
sub
stos
into
dec
cs
mov
sahf
out
sbb
cmp
mov
mov
adc
cld
adc
jge
dec
ss
fbld
adc
fsubs
push
mov
mov
inc
scas
push
push
ret
xor
dec
lret
decl
cmp
out
lods
adcb
adc
xlat
fdiv
push
or
out
shrb
mov
fdiv
mov
mulb
clc
xor
inc
jecxz
ss
icebp
out
popa
int
hlt
lock
lods
enter
jp
add
ffreep
mov
hlt
xchg
and
out
push
aaa
mov
fsubrl
mov
loopne
dec
mov
cmpb
sar
call
dec
push
daa
wrmsr
or
lret
cli
cs
js
into
stos
ret
cwtl
jnp
add
mov
cmc
cld
adc
push
lret
notb
sub
jbe
mov
dec
aam
mov
out
dec
xchg
xchg
ret
xchg
js
push
fdiv
scas
add
lret
ljmp
mov
jne
sbb
neg
das
xor
clc
mov
xchg
insl
sub
or
mov
push
cmp
aad
outsb
sub
mov
mov
into
xchg
sub
addr16
add
mov
mov
int3
cs
cld
cmp
push
xor
cltd
cld
mov
push
xor
jne
push
int3
ds
ss
lea
out
or
popf
or
mov
ret
and
pop
das
push
jl
lahf
mov
gs
orl
or
mov
cmpsb
xlat
pusha
mov
fbld
or
mov
sub
nop
push
clc
aam
xchg
sub
mov
shlb
add
cmpsb
pop
add
idiv
mov
ret
mov
adc
sbb
push
fisubrs
mov
shr
js,pt
aas
xchg
int3
lock
sbb
testb
or
dec
mov
xchg
pop
adc
test
pop
inc
movsl
fldt
cld
pop
nop
fistpll
add
mov
and
dec
lret
pop
cmp
adc
xor
int
cld
cwtl
ds
jo
ljmp
xlat
les
cmp
dec
mov
ljmp
sbb
sub
add
mov
repnz
lods
cmp
mov
pop
js
sbb
clc
lret
push
popf
fwait
sbb
les
sbb
and
push
rcrb
loopne
mov
mov
clc
movsb
lea
daa
lods
pop
jg
scas
or
call
ljmp
aas
je
mov
testl
ss
data16
scas
aad
ds
inc
adc
sub
sbb
push
fsts
add
hlt
js
jb
jb
das
aaa
out
or
add
adc
movsl
fdivrl
push
sti
faddl
jp
dec
testb
add
mov
mov
push
shlb
push
push
bound
pop
dec
sub
int3
ret
mov
andb
test
hlt
lret
sbb
inc
inc
sbb
pop
dec
shr
add
jo
lcall
cmp
pop
mov
out
pop
xchg
fucomi
push
aam
dec
enter
xor
inc
xor
test
scas
adc
mov
lret
shrb
ret
aas
or
mulb
cld
xor
or
jne
adc
les
add
shlb
adc
ds
xor
inc
lret
pop
daa
xor
sbb
jecxz
into
jae
sarb
dec
inc
push
mov
pop
jb
jp
bound
testb
sub
mov
push
mov
repnz
push
pop
cmp
scas
pop
xchg
xchg
or
jp
dec
mov
into
adc
xor
cs
test
mov
fcmovu
rcr
shrl
fwait
lahf
xor
jns
mov
mov
xchg
jo
xchg
or
js
jb
sar
pushf
fcmovu
mov
out
mov
in
mov
inc
repnz
fsts
mov
inc
push
test
addr16
cmpsb
out
adc
in
jecxz
mov
cmp
cmpsb
idivb
pushf
das
or
fiaddl
adc
sbb
fnstenv
mov
cmpsb
cmpl
dec
lret
ss
mov
dec
into
push
stos
out
sub
pop
and
push
lods
add
in
in
lock
sbb
fnstcw
fdivrs
cmp
or
mov
ljmp
or
ret
enter
mov
popa
cmpsl
out
imul
mov
add
loope
or
mov
sub
inc
cmp
jmp
scas
frstor
add
cmp
dec
ds
or
push
test
aaa
xchg
pop
inc
andb
pushf
adc
cmp
pop
or
inc
mov
sahf
mov
and
popf
cmp
cmp
sarb
mov
inc
ljmp
fdivl
mov
pop
sbb
fisubs
inc
not
subb
ror
pusha
inc
push
mov
out
xor
add
aam
cs
ljmp
or
jle
and
cld
dec
xchg
inc
sarb
mov
mov
in
insb
lds
js
mov
push
aas
mov
inc
jo
mov
outsl
scas
adc
jmp
add
repz
cmp
xor
mov
sub
fadds
push
mov
pop
push
ret
test
rcr
mov
xor
lret
adc
ss
cmp
mov
inc
fs
icebp
ret
ret
sbb
add
int
out
or
fs
add
lods
xchg
lock
jns
sar
mov
pop
lods
ret
mov
jg
adc
cmp
xor
cmp
ficoml
clc
daa
sub
cwtl
repz
shl
jnp
scas
mov
in
push
in
pushw
ja
ljmp
lods
js
mov
lahf
and
push
jo,pt
xchg
imul
xchg
sub
lock
out
into
daa
mov
shlb
rorl
into
inc
mov
fadd
add
hlt
out
jo
test
xchg
pop
dec
push
jnp
aam
shlb
loop
cmp
dec
push
mov
mov
add
adc
shll
cmpsl
push
push
cmp
xchg
mov
ljmp
sbb
scas
cmpsb
push
cld
inc
push
int3
js
xor
fidivrl
mov
add
out
or
div
aas
stos
movb
mov
pusha
lret
es
inc
add
cs
pushf
lock
cmp
cwtl
fsubr
cmpsl
sbb
cmp
ds
push
negb
aam
cltd
mov
mov
scas
mov
add
jle
in
stos
jo
fidivrl
sbb
add
mov
enter
jb
push
fwait
pop
loop
adc
movsb
jg
jg
daa
cmp
or
push
xor
sbb
inc
inc
xchg
rcll
xor
cmc
push
mov
inc
xchg
push
popa
iret
sub
decl
mov
or
out
xor
hlt
ss
ficomps
faddl
cli
xor
add
sbb
mov
push
fdivrl
lods
in
cli
jecxz
push
shlb
fisttpll
cltd
mov
mov
or
mov
lcall
sbb
sbb
cmp
enter
adc
shlb
push
nop
aam
cli
andl
mov
cmp
sbb
xchg
mov
sbb
hlt
push
sbb
xchg
movsl
push
push
jmp
ljmp
xor
push
enter
icebp
mov
add
mov
repnz
icebp
sbb
sti
ljmp
xchg
jb
add
sbb
lds
leave
inc
popf
xchg
cli
cmp
aad
scas
ret
jnp
dec
lret
shlb
jmp
out
ljmp
test
mov
fcmovbe
mov
mov
mov
out
int3
push
loopne
xchg
addl
push
clc
cmp
mov
lcall
fildll
into
or
dec
mov
enter
dec
push
aas
popf
pop
xor
pop
lock
inc
test
mov
bndstx
fdivrl
or
lret
xchg
js
shlb
in
mov
outsl
nop
dec
ds
stos
mov
push
imulb
or
loope
and
pop
lret
cmp
dec
adc
out
or
fdivrs
sub
cmp
mov
add
adc
fs
ffreep
cs
add
sbb
xor
test
jg,pt
mov
mov
cwtl
decb
sub
add
xor
enter
push
pop
or
cld
mov
dec
leave
pusha
call
sbb
adc
fs
pop
adc
mov
cmp
and
cs
out
add
ffree
adc
hlt
fidivrl
mov
lret
scas
or
sbb
jb
mov
out
movsl
test
add
jbe
rorb
ss
cli
scas
inc
cmp
mov
pusha
pop
stc
jp
mov
mov
fbstp
int3
adc
fisubrl
outsl
pop
outsl
loope
xor
jb
xchg
or
cmpsl
outsl
sub
add
aaa
mov
daa
cs
cmp
cmp
cli
dec
test
repz
sbb
sbb
mov
js
mov
inc
pop
adc
xchg
adc
into
mov
mov
aam
fs
mov
lock
pushl
int3
mov
cli
mov
sbb
sbb
fdivrl
push
mov
aam
cmp
cmp
xor
faddl
adc
fmuls
mov
stc
jb
mov
lods
push
push
xor
rcll
push
lret
fcoml
in
hlt
aad
sbb
or
std
mov
jo
push
das
nop
push
mul
std
lretw
adc
js
xor
aas
xchg
scas
mov
je
or
shl
popf
cs
mov
add
pop
or
stc
mov
leave
adc
inc
dec
lock
or
hlt
pop
jbe
out
mov
dec
daa
fidivrs
push
lods
or
push
dec
loopne
pop
stos
dec
pop
pop
inc
out
call
out
mov
rclb
stos
out
xchg
cmp
xor
ret
push
sahf
scas
mov
or
cmp
lods
mov
out
pusha
lods
adc
fcomip
inc
enter
cld
popf
push
rolb
sbb
out
mov
sti
sub
jmp
sbb
push
sbb
les
lods
xchg
enter
and
das
repz
loopne
cmp
hlt
mov
jns
mov
jle
sbb
pop
movlps
test
fcompl
and
cs
aam
adc
fwait
addr16
sbb
fnstsw
xor
enter
jbe
out
hlt
add
jge
cs
jp
pop
lea
repz
push
or
scas
fsubl
ss
shlb
add
and
mov
add
cmp
js
mov
flds
fwait
cmp
dec
or
sbb
mov
xchg
or
lea
mov
push
jl
daa
les
push
and
adcb
sub
neg
sbb
scas
lret
call
ds
dec
cld
sbb
mov
ret
repnz
xchg
call
dec
add
xor
out
lahf
push
xor
mov
out
or
or
sbbb
ds
jne
in
sarb
fstps
mov
cmp
lods
aas
pop
icebp
ljmp
lock
cmp
push
lret
push
jp
pop
push
mov
mov
cld
lods
adc
into
mov
push
mov
mov
push
or
pop
cmp
repnz
fadd
lcall
sarl
pusha
pop
inc
mov
push
pop
ss
inc
mov
or
jo
push
sahf
leave
repnz
hlt
mov
dec
outsl
leave
mov
call
or
xchg
enter
mov
cmpsl
aas
inc
mov
sub
adc
ljmp
dec
mov
xor
xchg
fmull
dec
push
mov
push
lret
popf
jmp
aam
pusha
jecxz
jb
into
xor
or
xchg
add
fs
inc
dec
gs
adc
mov
add
add
sbb
cmp
scas
aam
push
jbe
adc
leave
sbb
sbb
ret
arpl
sub
nop
mov
rorb
dec
loop
and
imul
or
sbb
ljmp
pusha
out
pop
movsl
fadd
cmp
add
test
pusha
xor
or
sub
ds
cld
lods
das
popa
mov
dec
cld
add
sbb
lock
sub
mov
xchg
out
or
stos
ficompl
dec
push
loop
push
and
stos
scas
mov
or
sbb
sbb
mov
jmp
into
lock
test
fimull
addr16
cmp
xchg
jg
push
cmp
cmp
mov
mov
xor
ss
enter
in
inc
pop
sbb
faddl
adc
cli
inc
test
sahf
in
cmp
ret
stos
repnz
cld
js
mov
mov
push
orb
push
in
fidivrs
cmpsb
sbb
xchg
ds
stc
cmp
enter
and
loopne
gs
xor
cmp
sbb
testl
xchg
negb
repnz
jnp
sbb
add
mov
test
cs
mov
mov
jns
cmp
aad
loop
cli
mov
aad
mov
lock
fimull
stos
mov
or
mov
repnz
cli
cwtl
add
scas
push
inc
ljmp
xor
scas
shlb
push
push
ljmp
mov
inc
pop
fwait
xor
inc
push
lock
daa
xchg
jl
ret
sbb
fsubrp
mov
jecxz
jnp
lret
lcall
lods
enter
in
lods
add
inc
adc
inc
lret
add
push
fdiv
adc
cmp
sti
dec
scas
cmp
add
adc
clc
ja
sar
adc
jg
jne
mov
test
xor
push
mov
mov
xchg
mov
jp
fiaddl
enter
loopne
add
lock
sarl
adc
pop
scas
xor
add
js
xchg
in
les
cltd
xchg
pop
mov
and
add
or
mov
ret
sbb
mov
fisubrl
pushf
mov
adc
mov
inc
mov
and
pop
out
call
stos
cmp
imul
leave
dec
cltd
mov
pop
int
jp
mov
cmp
xor
das
aad
mov
adc
scas
xor
sbb
adc
aad
dec
pop
inc
fsubrl
mull
mov
xchg
mov
xchg
push
cs
cld
mov
mov
xchg
add
fs
xor
push
mov
ds
xchg
lahf
cmp
inc
aam
or
sahf
mov
and
mov
mov
sbb
sub
call
add
scas
int3
cmp
jae
xor
lret
aam
xchg
cwtl
shrl
inc
les
jp
cmp
dec
mov
mov
iret
in
movsl
push
adc
xchg
sbb
les
mov
and
repnz
push
or
xchg
sub
js
xor
adc
gs
stos
into
pushf
cli
add
fisubrl
cs
iret
ret
jo
adc
push
mov
scas
or
cmp
and
repnz
xor
pushf
jp
sub
lcall
nop
mov
xchg
mov
xlat
sahf
mov
dec
add
lret
pop
jns
aam
push
adc
xchg
scas
fmuls
mov
jo
ljmp
jno
fidivrl
xchg
sub
ret
sbb
dec
dec
stos
enter
inc
nop
sar
mov
ret
pop
push
sbb
out
cld
jg
and
negl
jp
aas
inc
add
mov
inc
xor
push
sbb
ss
sbb
repnz
mov
dec
lods
lea
mov
sub
rclb
repnz
ds
mov
mov
sti
mov
push
xor
or
cmp
mov
dec
ror
int3
fs
je
cmp
or
repnz
out
lods
sub
rcrb
jo
mov
ss
and
push
les
or
in
repz
out
add
mov
and
mov
xchg
pushf
stos
mov
fcompl
mov
mov
outsl
lcall
fimuls
adc
sub
rorb
repz
jle
roll
mov
push
cmp
clc
repnz
je
lods
mov
sbb
in
cmpl
mov
push
jne
mov
push
inc
lcall
rorb
test
aas
xchg
jg
cli
push
les
aam
push
mov
xor
imul
push
faddl
or
addr16
rorb
fcmovu
push
add
aas
std
call
lock
sbb
div
push
mov
out
xor
ds
fnstcw
inc
adc
imull
ret
lret
jp
nop
ret
sub
xor
lcall
lods
xor
movsb
mov
mov
ficoms
scas
push
rcrb
xor
xchg
mov
int3
mov
and
mov
mov
cmp
add
mov
ja
sub
je
neg
xchg
mov
xor
cli
mov
mov
cmpsb
lods
jg
push
sub
inc
inc
mov
mov
aam
popf
imul
cli
rclb
enter
jb
fs
inc
bound
jnp
xchg
and
add
sub
outsl
imul
jno
loop
fcomp
nop
sub
lahf
into
sarl
fsubrs
cmpsb
ds
mov
cmpsb
pop
sub
xor
pop
stos
hlt
sbb
pop
adc
les
adc
add
push
xlat
lret
and
mov
loopne
sbb
adc
mov
aas
push
addr16
ret
jo
pusha
xchg
sbb
cmp
lock
pop
enter
push
pop
pusha
stos
in
mov
xchg
pop
test
test
movsb
addr16
mov
and
mov
or
sbb
lret
addr16
push
mov
jb
mov
ss
test
jmp
sbb
lds
bound
into
or
push
pop
mov
adc
mov
lock
sub
sub
cli
dec
ret
or
pop
cld
aas
pop
add
mov
pop
adc
inc
jg
mov
mov
popf
data16
mov
aad
or
xchg
push
lock
dec
pop
adc
fadds
jno
or
shl
push
push
mov
or
jle
push
mov
ss
ljmp
sub
sub
jbe
xor
cmpsl
std
cs
stos
and
sbb
pop
add
out
into
rorb
das
mov
and
dec
test
ror
cmp
ret
lock
sbb
cmp
mov
lcall
inc
pushf
das
sbb
aam
sbb
bound
adc
scas
repz
idivl
jb
repnz
mov
lahf
jmp
jg
mov
pop
inc
sbb
fidivrs
rolb
stos
mov
xchg
xor
fbld
scas
rol
nop
fsubrl
out
out
or
sahf
fmuls
fdivl
add
dec
mov
lods
adc
pop
stos
or
stos
jbe
lods
nop
or
ljmp
jb
fstpl
cmp
rolb
fadd
repz
fisubrl
adc
incb
push
mov
mov
jo
les
mov
cwtl
adc
dec
xor
sbb
ss
pop
lods
repz
pop
sub
fcmovbe
lock
fwait
stos
pop
negb
lret
insb
arpl
dec
adc
gs
push
shll
data16
sub
and
repnz
scas
pop
push
cmp
fcmovnb
xchg
mov
sbb
push
mov
psadbw
fmul
lods
mov
subb
dec
enter
sbb
jae
les
and
jp
adc
enter
testb
mov
std
inc
rclb
lcall
sbb
je
cs
mov
inc
fdivs
out
repz
dec
or
mov
jg
outsl
pop
leave
xchg
gs
adc
xor
cmp
adc
xor
fiaddl
insb
dec
cmp
test
lret
js
iret
cs
shlb
in
ja
or
lock
jle
cltd
xchg
push
add
test
xchg
aam
rolb
cli
pusha
xchg
jo
jl
imul
mov
inc
mov
mov
xchg
into
xchg
xchg
mov
ds
aam
cld
jg
out
mov
push
dec
jnp
and
ret
dec
bound
sbb
cmp
mov
mov
ret
and
inc
les
enter
shlb
int3
mov
aas
aas
jae
inc
lock
dec
ret
xor
ss
sbb
sub
pusha
push
jae
jb
pushf
add
mov
js
les
mov
pop
outsl
enter
loopne
sbb
test
cmp
dec
fbld
cli
pusha
lret
jb
pusha
push
cli
xor
mov
mov
mov
das
dec
jg
push
mov
movsl
shlb
lcall
push
stos
mov
hlt
sub
into
push
and
lock
pusha
xor
fcoms
ficompl
xchg
repnz
mov
jo
inc
std
jo
ljmp
les
mov
fiaddl
into
push
es
fwait
lods
cmp
and
jg
pop
loop
adc
test
jle
inc
ret
push
adc
int3
push
adc
cltd
pop
mov
mov
cli
cmp
adc
in
sub
jb
adc
mov
inc
push
movsb
sub
test
cmp
imul
mov
or
mov
xor
xor
int3
loope
push
stos
inc
mul
cmp
mov
mov
adc
mov
ljmp
out
cmp
fstpt
inc
ss
mov
js
nop
add
ds
cmp
adcl
or
jg
add
or
hlt
adc
sbb
push
sub
sub
xor
ficoms
cmp
push
notb
or
jg
mov
aas
out
jge
stos
rorb
xchg
insl
jno
icebp
aam
scas
or
fcom
iret
or
pop
hlt
negl
in
sbb
movsb
pop
mov
jo
insb
notb
add
push
mov
jp
cmp
decb
add
xchg
dec
jnp
ljmp
adc
push
mov
dec
rorb
cmp
cmp
sub
adc
gs
mov
addr16
mov
cmpsb
adc
in
in
addr16
in
in
lods
inc
push
cmpsl
ret
lcall
filds
fbstp
adc
xchg
add
sub
fiadds
outsl
and
in
testb
ss
add
cli
adc
call
xor
or
xchg
subb
sbb
xchg
sbb
sbb
fistps
out
aas
xchg
xor
fnstcw
sbb
rorb
or
push
lret
mov
fidivs
add
call
js
cmp
js
test
xchg
mov
sbb
out
mov
xor
sub
mov
mov
cmp
pop
xchg
imul
in
sub
mov
lret
or
jle
add
insb
std
adcb
ficompl
in
cmp
mov
sbb
or
cli
lock
fidivrl
cld
mov
mov
sbb
les
out
ljmp
mov
adc
sub
xchg
ljmp
ljmp
mov
jg
xor
in
addr16
bound
adc
shlb
or
lret
addr16
inc
dec
les
popa
push
out
and
aam
das
pmaxub
out
fmul
repnz
scas
test
xchg
dec
hlt
inc
sbb
dec
xor
dec
mov
inc
add
cmp
lret
add
cmp
not
out
xlat
push
push
mov
xor
fdivr
scas
inc
sahf
cmp
ror
dec
cmp
add
fistps
cli
shlb
adc
popa
test
sbb
fistpll
pop
ret
shl
push
push
cwtl
into
rclb
push
cmp
fisubl
lret
or
sub
mov
out
cs
scas
arpl
or
xor
mov
out
xchg
inc
ds
xchg
nop
scas
cmp
fwait
cs
dec
cld
clc
mov
in
mov
or
stos
cmpsb
int
jg
push
test
out
xor
jns
notb
jl
mov
pop
or
fsubr
or
push
add
hlt
sub
push
adc
lock
pushf
xor
cmp
cwtl
or
inc
add
pop
stos
mov
add
hlt
push
imul
stos
sbb
shlb
mov
hlt
push
fcomip
test
outsb
fcmove
gs
adc
popf
xchg
shlb
pushf
sbb
xor
push
movsl
loopne,pt
sub
jle
fmuls
xchg
cltd
push
loop
rcrb
mov
push
rolb
inc
rolb
or
ret
cmpsl
fsubrl
mov
cwtl
add
in
shlb
and
mov
sarb
add
testb
scas
or
xchg
and
arpl
adc
mov
pop
or
out
rorl
ret
cld
push
mov
stos
scas
add
cli
cmp
push
je
xchg
xchg
lods
in
out
dec
aam
rorb
adc
or
cmp
and
add
xor
mov
cld
shlb
jnp
push
cli
sbb
lds
pop
repnz
int3
pop
fsubrs
test
test
je
xor
push
push
xchg
bnd
xor
add
mov
idivb
mov
jp
cmp
insb
daa
ret
sub
bound
push
ror
sub
lret
adc
or
sbb
jo
add
cmpb
push
clc
shrb
mov
loop
sbb
bound
fidivs
test
fsubrl
xchg
xor
dec
jbe
pusha
or
jb
fadds
ficompl
and
aas
hlt
stc
add
fldcw
aas
and
cmpsb
enter
stc
sbb
pop
pop
in
movsb
jae
testb
mov
mov
mov
mov
out
in
stos
sbb
lea
rolb
cli
les
cld
push
cmp
bound
add
cmp
sahf
rol
aam
in
les
bnd
cmp
cli
mov
add
in
sbb
mov
push
inc
push
fmuls
xor
sub
es
inc
mov
addr16
adcb
inc
hlt
add
aam
sub
cmp
adc
popf
pop
adc
ds
aad
pop
add
push
test
mov
cld
sbb
push
repz
push
fbld
ljmp
push
stos
push
add
cld
jae
out
push
outsl
fbld
cmp
mov
jge
dec
xchg
mov
xchg
test
leave
xchg
arpl
repnz
xchg
aas
aam
iret
repnz
push
mov
add
xor
filds
fs
icebp
into
das
sub
fdivl
pop
mov
inc
cmpb
cld
out
push
mov
out
adc
or
ds
scas
mov
clc
out
mov
sbb
pop
dec
or
movsb
mov
cli
sub
fstl
sbb
push
ds
lods
lock
repz
fadd
or
cld
fisubrs
pop
add
sub
fsubs
push
sarb
loopne
adc
sbb
lea
scas
mov
sbb
decb
pop
scas
in
push
sahf
cmp
cld
push
mov
and
jp
inc
adc
leave
cmp
mov
cmp
cmp
incb
stos
adc
cmp
dec
or
mov
or
cmp
fucomip
enter
addr16
repnz
jp
add
add
aas
popf
push
stos
hlt
sarl
sub
stos
ret
pop
dec
xor
adc
xchg
mov
fcompl
stc
in
sbb
popa
sub
notl
scas
and
ljmp
jns
xchg
addr16
xor
sub
int3
mov
add
fisubrs
add
ljmp
jp
repnz
xchg
ret
stos
jle
xor
nop
mov
icebp
and
push
mov
sahf
and
lret
mov
dec
sbb
xchg
stc
dec
sbb
fmull
or
jg
outsl
cwtl
fldcw
mov
mov
pop
jae
clc
pop
inc
stos
sarb
out
mov
mov
add
jecxz
push
pop
and
sub
mov
mov
fdivrl
push
enter
rcrl
inc
ds
cmp
xor
fucomip
enter
outsl
insl
xorb
sub
push
push
lcall
cld
and
lcall
or
aas
cmp
addr16
jmp
and
nopl
out
mov
mov
inc
popf
out
xor
sbb
mov
or
fwait
xchg
stos
dec
cmp
sbb
notl
fisubrl
inc
push
mov
push
nop
cs
mov
xchg
xchg
into
insl
mov
lods
data16
pop
or
fadds
stc
mov
cli
push
gs
jb
vshufps
jnp
insb
imul
adc
rcll
or
and
mov
add
adc
sub
jmp
pop
xor
or
popa
pop
ljmp
jbe,pn
dec
or
rcrb
in
or
xchg
mov
neg
mov
add
jne
dec
fsubl
inc
xchg
jo
stos
lahf
xor
scas
or
push
push
mov
jp
jle
mov
fldenv
into
out
mov
mov
xor
dec
sbb
sarb
pop
ljmp
ret
adc
in
clc
dec
mov
xor
sbb
pop
arpl
cmp
std
inc
rolb
sbb
into
stos
js
shrb
les
add
jg
jmp
jle
fsubrs
or
sbb
repz
fcmovnbe
cmp
iret
lret
cs
aas
icebp
and
inc
xchg
or
jo
jp
lcall
inc
aad
add
cld
mov
cmpsb
and
les
ss
dec
or
and
aas
and
cmpsb
push
adc
dec
scas
incb
in
pop
xor
leave
adc
adc
into
loope
jns
mov
ret
xor
dec
notl
or
push
add
push
xor
cs
mov
sub
sbb
or
je
xchg
insl
mov
pop
mov
repnz
mov
shlb
or
jns
popf
and
or
pop
mov
movsl
cmpsl
lods
ss
pop
jo
mov
lea
or
movb
pop
lret
fsts
jbe
aaa
iret
cmp
pop
xchg
add
mov
adc
sub
dec
aas
pop
push
dec
xor
es
mov
dec
mov
mov
add
aas
fs
popa
add
ficompl
pop
push
lods
xchg
push
hlt
mov
xchg
or
rcl
push
pop
sub
xor
lahf
jo
arpl
xor
xchg
mov
add
decb
inc
ljmp
pop
popa
or
mov
push
clc
inc
ret
js
xor
sub
rclb
mov
push
mov
data16
movsb
sbb
adc
lahf
fdivrs
cmpsb
cmp
push
fistl
movl
sarb
add
xor
aas
fsubs
mov
push
rorb
cmp
data16
cmc
fcoms
faddl
test
dec
sbb
push
push
dec
ljmp
add
ds
mov
xchg
fcomp
dec
sub
or
lods
or
out
add
cltd
int3
psubb
test
fbld
inc
rclb
jb
movsb
test
popf
cmpsb
push
cld
inc
fisttps
mov
jnp
xor
cli
jo,pn
lret
sbb
xor
stos
adc
sahf
mov
iret
sub
or
dec
fstl
dec
roll
stc
push
sbb
lret
loope
pushf
inc
adc
cmp
xor
mov
lret
adc
outsb
add
mov
xor
push
fwait
adc
int
mov
scas
push
push
or
aam
inc
jbe
ds
jp
mov
cmp
in
mov
mov
les
cmp
int3
push
sbb
in
repz
pushf
push
sub
fisubrl
dec
add
sub
jbe
xor
fidivs
ret
or
test
pop
mov
iretw
or
cmp
cmp
or
sub
nop
fidivs
xor
add
xchg
ret
inc
fcoml
fcomps
pop
xor
stos
int3
push
fidivrl
fimull
cli
into
fsubl
mov
xor
mov
mov
dec
mov
dec
xorb
fistpll
jg
mov
fcmove
inc
dec
or
pop
add
mov
sti
cmp
repnz
into
sbb
jg
clc
shlb
sbb
sub
mov
out
cmp
sbb
enter
add
aaa
addr16
add
jg
jp
ds
jbe
add
cwtl
mov
mov
inc
outsb
mov
push
push
ljmp
sub
ss
shlb
mov
push
sbb
push
or
mov
lock
add
cmp
addr16
rep
push
pop
sbb
sub
mov
pop
dec
js
ljmp
mov
hlt
cmp
inc
fwait
icebp
mov
sbb
push
or
push
inc
clc
iret
jo
shlb
sti
jp
xchg
mov
int3
popf
fidivl
repnz
push
add
sbb
aam
xor
sti
inc
repnz
sbb
jno
push
addr16
into
stc
add
lret
mov
mov
or
cwtl
pop
into
mov
dec
ljmp
pop
hlt
fsubrl
inc
and
xchg
stos
rolb
insb
cld
cltd
or
test
adc
mov
push
fsubrs
cmpsb
fisttpl
pop
sbb
shrb
fcoms
icebp
push
dec
rolb
or
aas
das
or
sbb
loope
loop
mov
addr16
jmp
cltd
or
cs
aad
and
orl
or
cmp
cmp
lahf
les
lock
adc
or
sbb
cs
xor
ret
mov
fisubl
cli
data16
cmp
mov
push
add
enter
sub
dec
pop
dec
faddp
cli
add
aam
mov
stos
cs
push
stos
xor
cmpsb
outsl
sarl
fisubrs
or
insb
sti
shlb
scas
pop
lret
rcrl
test
orl
shl
xchg
mov
push
stc
push
cld
nop
decb
andb
push
cmp
fidivrl
mov
xor
cmpsl
arpl
add
ret
dec
xor
shl
sub
into
daa
lods
js
fs
es
enter
jne
jne
stos
es
bound
lods
into
xchg
ss
mov
jo
mov
xor
mov
fdivrs
xchg
clc
clc
gs
aam
fistpl
leave
fwait
loop
scas
cmc
aas
cltd
clc
mov
lea
popf
sbb
inc
scas
inc
repnz
mov
addr16
dec
or
fidivrs
inc
outsl
cmp
mov
clc
fisubrl
lret
out
aam
icebp
mov
sar
test
aam
cmpsl
push
mov
sub
add
jnp
test
das
fcmovbe
lret
outsl
and
movsb
imul
cmp
mov
mov
icebp
adc
sub
and
mov
fdivs
ret
loop
pop
les
adc
xor
push
sub
int
lret
xor
jle
dec
or
dec
push
cltd
imul
jo
mov
xchg
cmp
ss
fildll
sub
mov
jb
mov
es
scas
mov
mov
xlat
add
push
push
cmp
fnsave
out
and
iret
sub
add
cmp
in
jp
sub
dec
push
sbb
faddl
push
push
sbb
les
inc
xchg
or
mov
add
lods
sti
inc
das
mov
pop
fnstsw
ret
or
xchg
xor
push
pop
fidivl
xor
mov
push
test
out
ret
repnz
or
jb
hlt
gs
jl
shrb
sahf
ds
mov
mov
notb
ret
lret
cli
shrl
jb
mov
lcall
lahf
add
mov
scas
jb
int3
dec
jo
filds
push
hlt
cmp
cmp
insl
shr
mov
sub
xor
testb
mov
pusha
mov
dec
adc
lret
pusha
xor
mov
idivl
xchg
push
enter
rorl
cli
mov
lods
fdiv
test
popf
fbstp
xor
lret
cmp
cs
pop
mov
xlat
call
sbb
nop
cli
mov
or
fld
sbb
cwtl
add
hlt
into
adc
pop
je
sarb
mov
hlt
sbb
fnstsw
mov
sar
pop
and
dec
jg
xchg
fdivs
cld
into
pop
lahf
or
popf
mov
dec
sbb
sbb
jmp
scas
lcall
ljmp
mov
into
fisttpl
into
sar
je
sbb
movsl
stos
out
xorb
jbe
scas
mov
and
pusha
cli
lahf
shr
repnz
lret
out
shlb
movb
test
mov
cmp
lods
mov
mov
pop
jg
test
xor
sub
pusha
ret
ficoms
into
imulb
add
aam
cmp
stos
mov
shll
mov
add
enter
mov
sbb
mov
fmuls
scas
sub
in
loop
jne
lods
cs
shlb
enter
cmc
and
dec
fs
into
int3
lock
dec
icebp
test
addb
jo
cmp
sbb
mov
mov
mov
xchg
cli
lock
faddl
insb
cmp
add
imul
mov
pop
xchg
clc
decb
xor
cwtl
mov
or
inc
cmp
push
les
push
fistpll
in
mov
lret
icebp
in
pushf
xchg
or
sbb
mov
xchg
push
shlb
pop
fdiv
ss
inc
mov
xchg
sbb
adc
ret
inc
adc
mov
cwtl
inc
cmp
push
imul
sbb
loope
cli
push
rorb
sub
mov
or
je
out
cmpsl
js
mov
aam
xor
xorb
or
clc
sbb
jl
rclb
ljmp
shrb
mov
and
or
xor
mov
in
mov
mov
repnz
sbb
fs
lock
inc
addr16
insb
sub
idiv
lret
mov
xor
pop
sub
add
xor
inc
cld
cmp
data16
cmpsl
xchg
ror
or
adc
sarb
fs
daa
push
dec
fbld
pop
lea
fs
and
pop
push
je
addr16
mov
jne
inc
cli
aam
add
cmp
mov
mov
mov
xor
cmp
aas
mov
stos
enter
scas
xor
flds
xchg
jecxz
or
ror
xor
rcll
cmp
xchg
or
pusha
pusha
ret
cmp
lods
add
addl
cmc
fs
pop
mov
jp
or
fs
rcrb
pop
xchg
or
mov
mov
cmp
addl
sub
scas
repz
lea
or
sti
jle
imul
sbb
dec
ds
int3
mov
pop
mov
pop
push
in
mov
pop
test
mov
sbb
shll
lods
fdivl
push
sbb
ret
sbb
sbb
fstpt
fistpl
adc
cmp
adc
pop
aaa
enter
loop
and
es
xchg
ljmp
lret
or
mov
ret
stc
push
adc
sbb
clc
icebp
mov
xchg
cmp
cli
xchg
aas
adc
sbb
movsb
stos
scas
jg
movsb
mov
push
repnz
jbe
ljmp
mov
ds
xor
add
enter
inc
push
mov
cld
sahf
add
ret
pop
adc
and
add
sti
cwtl
imul
fisttps
adc
cmp
mov
xor
or
mov
mov
add
mov
mov
mov
xor
mov
outsb
mov
lods
rcr
sarl
les
nop
mov
mov
sbbl
xor
jbe
dec
add
rorb
int3
mov
sbb
lods
jnp
outsl
popa
xchg
mov
mov
ds
dec
testb
jp
cmpsb
in
lods
sbb
repz
fnstcw
fmull
pop
negb
lods
enter
ficompl
jno
dec
or
xor
insb
mov
add
or
nop
mov
mov
cmp
scas
add
in
cltd
mov
xor
rolb
mov
add
sbb
or
cwtl
inc
push
jno
pop
out
shrb
add
jp
pusha
fldenv
aam
and
fs
lds
xlat
adc
data16
sub
sub
push
popf
fistpll
jg
shl
gs
sub
mov
inc
fmull
stos
sti
fstl
fisubs
leave
or
mov
sub
lds
xchg
push
push
cs
mov
cli
push
into
add
bound
lods
and
mov
daa
push
cmp
fisttpll
adc
push
mov
xchg
or
sbb
xor
mov
bound
out
push
stos
mov
push
nop
and
inc
fidivrl
inc
push
push
rolb
ret
jle
addl
repnz
test
or
cmp
movsb
adc
das
mov
cmp
lret
nop
add
xor
inc
mov
mov
out
pop
or
loope
mov
mov
pushf
pop
mov
ds
fisubs
adc
push
pop
ss
jne
mov
sbb
sub
js
das
aam
stos
or
sbb
jp
or
pop
cmp
xchg
pop
ret
lahf
leave
in
push
mov
mov
add
xor
arpl
fmuls
inc
inc
addr16
push
sbb
sub
aam
sbb
mov
fcomp
push
ds
push
push
xchg
and
stos
sti
pop
dec
mov
dec
ljmp
mov
or
pop
push
sub
cmp
popa
sbb
out
fstp
into
lret
or
arpl
ljmp
xchg
and
test
mov
mov
into
dec
outsl
fsubrp
imul
xchg
mov
sahf
mov
xor
push
shrb
mov
in
mov
rcrb
fisubrs
push
mov
lret
or
cmp
lcall
adc
push
add
inc
ds
data16
or
push
lock
in
lock
add
sub
sbb
sub
sbb
cld
push
sub
dec
cmp
out
xor
in
push
les
addr16
jg
mov
push
mov
sbb
sbb
pop
lahf
xchg
mov
clc
in
pop
xchg
sbb
inc
aas
shlb
mov
popa
fcmovnu
fwait
sbb
adc
sbb
sub
fcomi
sbb
cld
fsubr
push
jp
ds
xchg
fsubrl
into
sub
mov
xor
loop
push
rcrb
scas
cld
aam
or
add
negb
mov
sbb
ds
lret
xor
push
add
cwtl
outsl
cmp
ss
adc
outsl
push
lahf
lods
into
mov
sub
in
mov
pop
inc
jle
aaa
sub
repnz
mov
mov
xor
sbb
stc
fidivrl
int3
into
or
fsubrp
sbb
cmp
mov
out
nop
inc
inc
rorb
test
or
xor
mov
adc
sub
mov
es
cmp
popf
adc
fisubrs
mov
out
adc
out
jg
fdivrp
cmp
ret
stc
inc
fsubrs
mov
sub
mov
inc
and
icebp
mov
or
lret
add
sbb
xchg
cmp
nop
push
stos
add
in
dec
adc
xlat
dec
lret
into
ss
cli
fdivl
cld
fdivl
sbb
int3
add
xor
ret
movsb
pop
dec
repz
jo
scas
adc
in
mov
xchg
inc
adc
cmp
imul
mov
imull
jecxz
and
clc
arpl
ljmp
js
jp
xchg
sbb
hlt
lcall
mov
lahf
sbb
jne
scas
push
lret
and
scas
lods
dec
ss
mov
in
shrb
fsubs
ret
pop
xchg
or
mov
icebp
pop
xchg
inc
mov
addl
ljmp
scas
mov
push
sbb
je
cmpsl
add
inc
adc
jp
cli
sbb
ret
cmp
outsb
sub
cmp
aad
aas
mov
outsl
cmpsb
mov
xlat
mov
mov
mov
xor
xchg
dec
in
lock
or
fiaddl
movsl
mov
lods
or
andl
cmp
adc
mov
lcall
mov
inc
adc
jg
sub
sub
push
shlb
pusha
lret
push
cld
mov
pop
add
inc
dec
ljmp
fcompl
mov
add
repz
mov
push
mov
xchg
cld
out
adc
adc
xor
fsubl
paddd
enter
xchg
and
cmp
sbb
rorl
icebp
mov
mov
xlat
add
sbb
xchg
jg
scas
ljmp
add
pop
out
pop
popf
cmp
int
adc
rcrl
xor
fdivrs
and
cli
jg
mov
out
cld
iret
cld
cmc
stos
mov
lea
insb
dec
sub
das
out
rcr
outsb
lret
movsl
int3
cltd
cmp
sbb
cli
jae
sbb
cmp
push
dec
sahf
out
or
push
mov
mov
out
repnz
movsl
out
repnz
fwait
xor
stos
sbb
out
push
fsubrs
mov
lcall
loop
lret
ror
adc
out
test
mov
or
push
jecxz
mov
sbb
inc
outsl
outsl
mov
adc
or
mov
ss
in
cmp
dec
cmp
sbb
sbb
ds
into
loopne
fucomip
shrb
ljmp
fcom
mov
add
test
into
pusha
stos
push
mov
xor
shlb
fsubl
jmp
mov
stos
popa
mov
cltd
xchg
sbb
fcomp
jo
cmp
cld
aas
and
cmpl
xor
fistps
adc
scas
dec
or
adc
sbb
lret
icebp
mov
cmpsb
lock
push
fs
jg
inc
push
shlb
mov
daa
inc
mov
scas
sti
ss
xor
and
inc
mov
and
repnz
adc
inc
js
jp
aas
cmp
xchg
mov
negb
add
cs
ret
data16
inc
jns
mov
scas
fisubrl
test
pusha
jmp
imul
jb
xor
push
lret
push
push
ficompl
testb
dec
sbb
lret
cmp
or
add
adc
lret
mov
pop
lods
aas
and
mov
das
ja
xor
ss
pop
adc
xchg
test
dec
mov
push
into
xor
and
add
lret
sarb
lret
jo
ret
mov
lahf
add
cli
lock
sbb
mov
and
sub
jge
incb
inc
sarb
fwait
push
out
ficompl
idivb
sbb
addr16
mov
or
out
dec
sbb
cld
enter
into
js
xor
js
and
int3
and
jb
jp
jbe
mov
push
mov
adc
shrb
jbe
pop
out
cli
fcmovb
int3
jae
sbb
cltd
jp
ss
pop
enter
stos
dec
inc
out
addr16
inc
sub
scas
xor
fnsave
push
mov
xchg
jne
xchg
cmc
xchg
mov
mov
jp
mov
fcoml
js
lcall
fisttps
clc
testb
xchg
push
into
fimull
outsb
sub
xchg
mov
fneni(8087
lea
fiadds
bnd
dec
sub
pop
movsl
movsl
and
xor
clc
enter
dec
xchg
xor
mov
fstpt
adc
xchg
push
mov
pop
ss
sarb
test
mov
ror
pop
cs
fmuls
fbstp
mov
in
sbb
jbe
inc
push
add
les
jbe
insb
inc
lret
cld
clc
mov
xchg
cmpsl
adc
lods
aas
push
mov
int3
ds
inc
in
enter
jae,pt
aam
push
outsl
cmp
ret
lock
cmp
mov
jb
inc
jp
js
cltd
inc
clc
mov
daa
cltd
in
ficompl
or
mov
jbe
lret
mov
out
mov
mov
pop
cmp
stos
push
adc
sbb
mov
ja
sbb
adcb
xchg
xor
adcl
out
sub
and
or
or
jp
loopne
test
add
leave
int
cli
fisubrs
mov
xor
testb
nop
sub
stos
push
jb
adcb
lret
jae
inc
ret
adc
lret
mov
cmpl
jne
loop
add
sbb
cltd
adc
ret
mov
stos
lock
or
fwait
inc
adc
push
es
cmp
xabort
mov
outsb
shlb
out
add
fs
stos
pop
addr16
aad
pop
out
inc
xchg
stos
sbb
push
imul
sbb
xchg
push
mov
push
xor
mov
adc
insb
repnz
mov
adc
movsl
loop
xchg
or
push
scas
and
scas
xor
mov
inc
hlt
cmpb
aam
sbb
fadd
cld
out
or
fwait
mov
jnp
ljmp
out
out
add
push
xor
stos
push
nop
rcl
mov
or
insb
popa
cmp
push
xor
mov
lods
out
lods
mov
mov
lret
pop
cmpsb
fs
out
inc
push
les
cmp
rorb
push
out
add
push
xor
push
dec
pop
scas
stos
pop
rcl
aas
push
mov
repnz
enter
movl
lock
shrb
in
mov
add
xchg
xor
mov
mov
cltd
or
lods
ds
aam
mov
cmpsb
cld
adc
ljmp
fucomp
into
dec
push
xchg
push
es
ds
lcall
and
sub
fmull
xchg
inc
mov
and
js
enter
jb
push
mov
mov
dec
insb
push
pop
add
jnp
or
fsubrs
sub
inc
or
cltd
mov
cmc
xchg
nop
js
mov
stc
rcrb
jbe
lods
mov
and
bound
mov
sub
adc
leave
mov
mov
mov
jb
add
push
outsb
xor
dec
inc
cli
lret
test
mov
mov
sbb
shl
divl
xchg
mov
cs
cli
push
fcoms
sub
mov
mov
add
andb
rcrb
jp
xor
pop
enter
jg
aaa
dec
or
imul
xor
sbb
lret
ds
sbb
mov
lahf
xchg
xor
ret
xchg
movlps
popf
stos
dec
fwait
pusha
rcrb
std
and
mov
fs
sbb
in
repnz
fs
inc
mov
mov
add
mov
lahf
bound
cli
and
pop
nop
das
sub
outsl
outsl
adc
push
or
loopne
add
mov
push
sub
jp
mov
leave
fildll
aam
int3
sub
into
test
lret
gs
nop
mov
int3
pop
dec
sbb
or
lret
stos
mov
bound
lret
cs
cmpsb
out
sub
add
ss
or
cmp
lcall
gs
push
pop
xchg
lret
add
rcr
push
xor
pop
cs
fmull
scas
loope
inc
xor
mov
sbb
or
repnz
scas
mov
loop
lahf
cmp
hlt
aam
mov
mov
aaa
push
or
lahf
cld
ret
xchg
mov
insl
cmp
pop
mov
mov
addr16
cmp
es
rdmsr
push
notb
mov
decb
inc
xor
mov
push
mov
dec
ljmp
repnz
pusha
sbb
or
shlb
fmuls
loop
xor
mov
sbb
mov
and
mov
sbb
pop
repnz
pop
out
enter
fcompl
sarb
scas
ficoml
aas
jo
cld
stos
push
ljmp
add
sub
icebp
fmull
xor
xor
test
mov
aam
jp
fidivs
cmp
addr16
es
xchg
mov
frstor
push
mov
fcompl
fbstp
xor
push
je
xor
lods
stc
push
sahf
faddl
mov
rolb
sbb
loope
ss
mov
inc
fwait
push
or
pop
sbb
scas
mov
clc
pop
outsl
push
stos
loop
mov
push
xchg
fimull
mov
mov
in
lahf
xor
into
or
leave
xlat
add
lret
movsl
cld
pop
fnsetpm(287
scas
test
lock
adc
mov
or
mov
mov
ficoml
jmp
stos
scas
or
fadds
pushf
xchg
clc
push
mov
pop
pop
aam
dec
mov
je
sbb
adc
jp
mov
repnz
mov
fwait
ret
lock
test
stos
push
mov
mov
adc
add
rcrb
jnp
inc
shrb
cli
push
in
push
sub
jb
pop
icebp
test
pop
xchg
cmp
adc
shlb
or
push
lock
jno
pop
adc
ret
mov
fcoml
inc
pop
adc
and
mov
aam
mov
push
sbb
jle
clc
push
cmp
imul
aaa
inc
inc
push
lret
fwait
out
adc
mov
sar
scas
lds
cli
fcompl
fdiv
adc
inc
hlt
sbb
pop
jae
inc
test
sbb
addr16
adc
or
lods
cs
mov
ror
adc
push
sbb
movsl
and
dec
xchg
sbb
flds
pushf
or
aaa
push
mov
inc
les
mov
push
aam
sbb
fstl
mov
xlat
lock
ds
cmp
clc
cmp
scas
adc
cld
dec
mov
pop
jb
ljmp
inc
hlt
dec
xchg
cmp
out
mov
rorl
push
mov
sti
add
push
cmp
xchg
pop
xchg
or
add
dec
xor
xor
cmp
cld
rorl
shrb
jne
add
add
cmp
lea
add
cmpl
pusha
adc
lret
in
and
lock
out
and
pushf
ss
adc
add
dec
push
das
mov
push
scas
stos
jbe
or
fmuls
outsl
adc
pop
jne
div
in
xor
adc
add
fistpll
inc
lock
jb
subb
pop
enter
popa
inc
out
sbb
add
cmp
das
sbb
cmp
adc
add
lds
rcr
xor
pop
sub
inc
mov
hlt
lahf
popf
push
xor
shrb
aaa
sub
mov
mov
add
ds
cs
dec
adc
jae
in
lret
inc
aam
cmp
fisttps
mov
iret
and
ss
sub
adc
sbb
bound
add
cmp
mov
test
mov
ss
leave
xchg
jo
jnp
lds
inc
sbb
adc
jle
mov
xor
inc
jp
mov
pop
dec
shrl
jp
sbbb
repnz
mov
sbb
cli
or
mov
jne
or
imulb
pop
stos
cmp
and
sub
notb
add
pop
aas
lret
nop
fcom
out
stos
ds
sbb
adc
sbb
inc
xor
jg
mov
lret
ljmp
arpl
pusha
cs
jb
mov
or
sbb
stc
jbe
stos
mov
stos
mov
fsubrl
pop
ss
mov
xor
rcrl
and
fs
jae
cmp
or
js
mov
stc
sub
pushf
sarb
adc
int3
jl,pt
movsb
stos
adcb
and
xchg
idiv
nop
mov
or
loope
push
xchg
addr16
ss
out
sub
or
out
fsubrl
add
mov
jecxz
sub
mov
fcomps
xchg
std
rol
sbb
adc
jns
sbb
pusha
dec
sub
xor
fmuls
int3
scas
inc
dec
ret
clc
out
inc
adc
dec
cld
add
fistps
jbe
insl
push
mov
dec
mov
adc
dec
gs
lock
add
pop
push
mov
pop
sub
cld
add
pushf
popf
mov
or
out
mov
jp
mov
mov
sarb
cs
hlt
sbb
rclb
ret
or
scas
mov
mov
ljmp
add
aaa
and
inc
mov
xchg
xor
sbb
pop
lods
mov
outsl
mov
aaa
pop
push
xchg
fildll
add
push
rorb
add
fs
cmpb
rolb
xchg
mov
scas
cmc
add
or
xor
fdivs
cmc
xor
hlt
clc
fdivrl
mov
lret
test
sbb
push
sbb
jmp
mov
hlt
mov
movsb
nop
mov
xchg
adc
xchg
mov
insl
mov
into
leave
es
xchg
dec
enter
cmp
das
fcmovb
xchg
xchg
faddl
mov
addr16
xor
push
push
int
cmp
xchg
loop
inc
jp
xchg
rcll
cld
push
sbb
rcl
mov
test
adc
rclb
mov
sahf
inc
or
testb
mov
push
xchg
jmp
inc
adc
rcrb
pop
xor
ret
jne
jp
into
pop
js
enter
xor
mov
xchg
adc
jecxz
aam
popf
adc
stos
sbb
scas
out
es
shlb
push
js
fwait
ret
push
fsts
cmp
stos
shlb
sbb
mov
cmpsl
push
dec
mov
xor
pop
data16
shl
outsl
data16
fsubl
and
out
mov
fisubl
out
mov
mov
out
cli
ljmp
cmp
clc
aas
ret
stos
or
mov
jb
pusha
or
xchg
mov
fcompl
iret
mov
ljmp
femms
adc
mov
sbb
cmpsb
les
lock
add
or
xor
nop
jg
aam
mov
add
pushf
push
xor
fsubrl
lods
cmp
mov
push
sub
mov
add
cmp
les
mov
mov
pop
sub
push
hlt
scas
fimull
rclb
sub
es
jge
enter
outsl
jge
lcall
mov
add
inc
and
cmpsl
xor
ret
or
xor
loope
sbb
movsb
mov
fwait
js
mov
add
mov
sub
iret
xchg
or
mov
push
mov
and
cmpsb
stos
jg
push
sbb
nop
xchg
rorb
xor
lcall
cmp
sub
fwait
sub
lock
mov
mov
mov
xor
incl
pop
mov
and
mov
push
push
movb
les
fs
out
ds
push
mov
scas
popa
subl
loope
test
mov
lock
test
sbb
xchg
cmp
inc
aas
cmp
ljmp
stos
int3
xor
lods
ljmp
cld
rcr
ret
push
loop
out
push
mov
push
sub
push
mov
fisubrs
push
mov
scas
call
sub
and
cmp
xchg
lcall
push
sbb
mov
lods
ss
int
mov
mov
dec
dec
lret
scas
das
js
dec
lret
arpl
xchg
int
idivb
jne
pop
cmpsl
sbb
ds
scas
adc
lock
sbbb
subl
pop
jb
fistpll
jb
add
mov
add
daa
xchg
out
ljmp
xchg
add
dec
sub
mov
imul
popf
inc
aam
mov
sub
cs
inc
les
bound
fsubs
mov
sbb
push
xchg
es
pop
sbb
mov
xchg
lret
lods
sbb
cli
mov
or
inc
sub
ja
cmp
mov
xor
sbb
push
push
in
dec
jb
cwtl
loop
mov
das
testb
cld
cs
aam
fwait
and
fdivs
sbb
divl
xchg
or
cmp
rorb
inc
cmp
ret
sbb
scas
sub
aam
shl
xchg
sbb
push
int3
xor
pusha
clc
outsb
enter
jno
test
push
cltd
mov
xchg
icebp
ja
dec
repnz
cmp
push
ret
cmp
xchg
repnz
and
clc
or
or
sbb
jg
int
sub
jg
movsb
outsl
rorb
out
pop
decb
mov
aas
cmp
push
clc
pop
fdivrl
sub
lret
les
int3
int
pop
cld
adc
out
pop
xchg
sarb
lock
xor
movl
lahf
stos
enter
sbb
cld
push
add
fsubr
mov
add
push
in
lret
xor
sti
mov
mov
unpcklps
pop
pop
cmp
adc
jns
out
xchg
push
push
scas
xchg
in
mov
mov
mov
addb
jb
pusha
or
or
mov
inc
mov
push
sahf
clc
dec
xor
mov
inc
pop
cmpsb
push
scas
add
push
lods
mov
push
mov
pusha
cmp
mov
stos
mov
das
fwait
push
push
ljmp
mov
int
xchg
mov
das
mov
divb
int3
mov
pop
sub
mov
ss
dec
pop
pop
sbb
daa
xchg
inc
jge
mov
repnz
mov
and
mov
rol
xor
mov
jp
cwtl
loopne
rorb
jecxz
xchg
sbb
lock
test
jno
adc
mov
inc
push
add
shr
mov
aam
aam
es
xchg
rolb
or
add
xor
addr16
imul
repz
push
lods
addb
and
mov
lea
xchg
push
cld
mov
or
adc
sub
movsl
ret
adc
sbb
adc
lahf
inc
fmul
lret
mov
pop
cs
cpuid
pusha
xchg
mov
lods
xchg
mov
push
ds
xchg
dec
sbbb
movsb
mov
sahf
shl
out
testb
or
clc
fists
sti
inc
nop
mov
sti
movsl
mov
popl
xchg
fidivrs
inc
push
scas
push
jo
mov
inc
cs
dec
jo
dec
jecxz
xor
sbb
ljmp
stos
push
inc
sub
loop
out
rcrl
stos
mov
dec
xor
pop
fdivr
mul
in
jno
int
push
or
into
stos
cmp
int3
mov
cmp
add
dec
insb
push
scas
adc
rcll
aam
out
lret
add
cld
cmp
push
mov
jecxz
cmp
xor
and
and
int3
out
rcl
mov
xor
jo
daa
aaa
inc
ljmp
popa
add
mov
dec
fldt
fiaddl
pop
addb
aam
push
add
sbb
jb
div
sbb
sub
xchg
orl
sbb
fisubl
sbbb
out
sub
aas
mov
ss
inc
add
fwait
mov
sbb
xchg
roll
aam
cmp
int3
mov
cmp
cmp
cmp
mov
mov
adc
enter
mov
lcall
shlb
loopne
dec
add
sub
ss
lret
ret
mov
add
fcmove
sbbl
xorb
in
enter
rclb
add
out
fcoml
rcll
mov
call
imulb
outsl
pop
inc
into
dec
les
pusha
inc
test
push
ss
loope
stos
pop
and
repnz
fdivl
stos
ss
fsubl
cmp
int3
and
rorb
pop
sbb
sbb
cmc
sbb
js
fistpll
add
pop
push
push
or
in
lret
adc
fdivrs
out
push
ret
sub
les
add
mov
shl
push
mov
inc
push
mov
aam
dec
adcb
xor
int3
lret
sbb
cwtl
movl
lahf
add
sbb
mov
lods
cmp
xchg
add
stos
xchg
inc
stos
cli
stos
mov
mov
sarb
aam
cmp
psrld
nop
cmpsb
enter
mov
sbb
addr16
stos
sub
pop
dec
ds
scas
mov
filds
jne
inc
cltd
aas
push
jnp
fdivr
lods
mov
dec
flds
pop
adc
mov
loop
dec
lcall
ret
inc
push
xchg
xor
adc
loope
cmp
cwtl
lods
aam
mov
lods
and
add
lret
jnp
shlb
dec
lea
iret
push
adc
scas
sub
mov
dec
adc
xchg
repnz
orb
sarl
push
cmp
inc
xchg
addr16
sbb
mov
or
mov
pusha
sub
xor
fmuls
push
sbb
adc
ret
cs
mov
lock
xlat
jne,pt
add
xlat
cld
pop
enter
xchg
inc
int3
les
jns
clc
in
push
xor
addb
mov
lock
hlt
xchg
xor
sub
mov
clc
push
adc
xor
stos
cltd
pop
mov
imul
ds
adc
sbb
mov
shrb
imul
sbb
in
scas
shlb
int
std
cld
sbb
cmc
sbb
mov
repnz
jmp
out
stos
or
adc
sbb
faddl
dec
mov
out
mov
cmp
leave
mov
push
outsl
lcall
ror
out
add
das
cmpsb
push
cs
jp
mov
mov
notl
lcall
xchg
orb
shl
lcall
sbb
xor
rcrb
hlt
mov
push
mov
push
jg
pushf
lods
or
ljmp
sbb
sub
divb
xor
add
xchg
push
repnz
mov
mov
mov
cmp
add
pop
ret
enter
rcr
popf
mov
xchg
jno
mov
repnz
mov
stos
adc
xchg
xchg
or
dec
adc
mov
call
fcom
xor
ret
push
data16
movsl
push
fldenv
cmp
fsts
addr16
pop
lret
lods
mov
scas
add
pop
mov
mov
fidivrl
out
mov
xchg
sbb
sbb
xchg
add
fcoms
cltd
mov
stos
rcr
and
fyl2x
fisubrl
mov
xchg
je
adc
iret
add
inc
stos
std
stc
sar
cmp
and
push
xchg
nop
adc
adc
data16
les
xchg
nop
sub
sahf
pop
idivb
jo
frstor
mov
mov
das
in
and
add
shr
xor
cmp
push
mov
les
jns
sub
stos
ficomps
arpl
mov
and
sti
cs
cli
push
scas
pop
and
dec
lcall
data16
ja
lahf
add
mov
insb
cld
lret
mov
mov
neg
rcrb
lods
fiaddl
xchg
inc
sarb
inc
xchg
and
mov
mov
xchg
xor
in
into
push
fadds
aaa
push
sbb
out
sbb
rcr
addr16
cmp
fisttpll
push
dec
ds
out
or
lret
pusha
pop
mov
out
rcll
popf
adc
or
lret
xchg
jecxz
insb
loope
rcrl
xchg
xor
lahf
pop
mov
out
push
add
sub
hlt
cmp
movsl
scas
mov
lret
push
addr16
cmpsb
push
mov
fs
xor
lock
cmp
nop/reserved
pusha
mov
or
push
lret
mov
es
xchg
or
push
adc
mov
sbb
repz
scas
mov
xchg
ss
aas
stos
mov
repnz
mov
cltd
popa
xor
int3
or
data16
adc
fnstcw
out
xor
add
out
mov
sarb
mov
dec
mov
pop
js
xchg
stos
lods
mov
sub
mov
cs
lret
or
xchg
aam
mov
xchg
xchg
sbb
sbb
sbb
mov
test
push
enter
xchg
add
mov
out
popf
sbb
aas
hlt
or
das
jne
ss
cmp
stos
mov
repnz
or
fsubrs
and
sub
in
add
mov
or
notb
fistl
and
into
in
cwtl
push
fdivrs
cmpl
jae
adc
jmp
test
loopne
bound
jno
inc
mov
test
je
fucomi
les
fmul
in
scas
lret
movsl
or
lcall
aam
mov
adc
das
aam
lods
cmp
mov
movsb
xchg
mov
into
mov
ficoms
pop
mulb
out
hlt
int3
mov
test
inc
rorb
dec
xchg
push
xchg
dec
and
outsl
adc
test
jno
mov
sar
in
aam
mov
adc
mov
add
cmp
jbe
into
inc
int3
mov
fistpll
and
add
or
ljmp
adc
mov
movsb
ret
iret
hlt
aam
scas
mov
stc
or
mov
xchg
pop
call
adc
xchg
sbb
enter
rorb
adc
pop
mov
outsl
outsb
push
add
sbb
push
lds
scas
add
int
rclb
dec
xchg
xchg
inc
xchg
outsl
mulb
clc
addr16
outsb
pop
stos
fisubl
lock
mov
xchg
hlt
sub
or
dec
out
dec
out
xor
repnz
lret
scas
mov
fmuls
xchg
adc
adc
sahf
inc
mov
sarl
sbb
mov
adc
xlat
sbb
cmp
mov
sbb
addb
push
add
enter
popf
mov
push
pop
pop
sub
fstpl
fiadds
push
outsb
cmp
ds
add
lock
push
ss
or
jbe
sbb
add
mov
mov
mov
test
outsb
adc
xchg
sti
adc
mov
movsl
ljmp
clc
sbb
xchg
adc
lods
pop
mov
mov
aas
mov
enter
popf
push
fadds
pop
rclb
arpl
push
pop
in
push
pop
add
jb
push
aam
add
fiadds
dec
xchg
inc
ficompl
mov
mov
repz
mov
lcall
hlt
or
repnz
mov
into
dec
shll
mov
pushf
xor
inc
out
mov
loope
stos
xorl
stos
js
ret
jp
jb
sahf
dec
les
push
dec
stos
ss
mov
inc
ss
inc
jg
and
mov
mov
outsl
arpl
cs
loop
jle
sub
lea
lcall
pop
fs
mov
int3
inc
in
test
inc
scas
sub
xor
push
push
mov
out
gs
repnz
sbb
xchg
or
jmp
pop
jmp
sbb
scas
sub
mov
fdivrl
sub
push
out
fldz
inc
push
add
jb
js
fucomp
pop
or
in
or
push
loop
and
and
outsb
push
inc
mov
mov
pushf
shlb
or
shrb
icebp
pop
aaa
int3
iret
loop
mov
sub
stos
outsl
xchg
sub
lret
movsl
mov
sbb
hlt
les
repnz
fcoml
ds
pop
adc
rcrb
fidivrs
ror
xchg
add
pop
xlat
stos
or
out
out
push
lcall
ljmp
dec
addr16
idivb
inc
push
lahf
cmp
lcall
mov
scas
lret
mov
push
add
lock
mov
mov
mov
test
sbb
clc
int3
js
xchg
jnp
scas
fcom
adc
xchg
aad
ds
ss
xor
lret
sbb
add
mov
jb
js
addb
clc
jb
mov
jbe
sub
out
mov
pop
ss
sbb
loopne
cmpsl
mov
adc
les
fdivrl
dec
mov
mov
add
mov
mov
mov
pop
sbb
das
cmp
jae
nop
and
mov
popf
jmp
cmpsb
jp
add
xchg
dec
lret
stos
popa
mov
mov
fdivl
pop
rcrb
ror
fimuls
adc
mov
pop
adc
rclb
movsb
inc
fisubrs
jb
or
pop
outsl
das
popa
std
pop
enter
fdivl
lock
or
js
sahf
xchg
rolb
sbb
mov
mov
mov
popf
adc
xor
lcall
lods
pop
pop
fucompp
pop
cmc
push
pusha
fisubl
mov
scas
lcall
test
hlt
out
jno
add
dec
adc
jns
cld
add
sub
inc
mov
adc
sbb
adc
jg
sbb
shrb
adc
stos
into
int3
popf
dec
ljmp
dec
lret
mov
mov
lock
xchg
arpl
mov
int3
or
cmpsl
cmp
fisubl
push
cmp
adc
inc
andl
push
adc
mov
js
jbe
pop
push
ret
fidivl
sbb
cmpsl
xchg
push
mov
and
jge
sbb
pop
repz
or
fsubrl
xor
fimuls
sbb
adc
scas
ljmp
or
add
daa
jmp
scas
and
push
inc
bound
push
adc
cmp
ds
inc
mov
sub
fwait
adc
in
cmc
popf
inc
dec
push
faddl
push
xor
mov
sbb
insl
push
sbb
shll
sti
mov
inc
inc
mov
cli
pop
mov
mov
push
gs
imull
xor
inc
xor
rclb
in
xorb
and
or
xchg
shl
inc
ja
inc
pop
xchg
fadd
adc
mov
sahf
fiaddl
cli
ljmp
loop
xchg
jb
push
lock
sub
push
sbb
mov
sahf
push
ss
push
mov
enter
xchg
pop
mov
cmpsl
mov
and
lods
sbb
add
jle
shll
or
cs
push
mov
xchg
adc
retw
xlat
xchg
mov
xor
sahf
mov
push
inc
jecxz
jo
xorb
shr
adc
mov
sbb
hlt
out
outsl
lods
test
int3
cs
rcll
mov
out
push
xor
dec
inc
in
mov
cmp
sub
nop
push
push
loope
cs
rorb
repz
mov
lret
adc
pop
repz
jl
in
or
mov
lahf
mov
fsubrs
mov
outsb
cli
ror
mov
test
xor
enter
lcall
or
pop
xor
xchg
jg
or
data16
mov
pop
stos
lret
mov
js
inc
jp
data16
ret
cmp
add
into
sub
or
pop
loop
test
rcll
ret
jp
cmp
mov
push
mov
xor
shll
lea
scas
mov
addr16
xor
imul
mov
repz
sbb
cmp
and
ja
add
adc
sub
mov
pop
pop
dec
pop
add
sbb
jae
mov
xor
mov
ret
xor
sarb
and
mov
lcall
in
shlb
sbb
iret
adc
cmpsl
out
es
push
mov
add
or
leave
xchg
jmp
mov
push
sbb
ror
cmp
or
lret
into
jb
ss
mov
mov
cmp
enter
mov
and
mov
test
sarl
shl
xchg
push
in
out
das
mov
cmp
mov
cld
sbb
pop
aaa
leave
sbb
xchg
dec
mov
subb
mov
outsl
ret
fwait
cmpb
bnd
adc
lods
lahf
sarb
mov
aas
mov
inc
cmp
fisubs
enter
mov
or
cld
add
jb
sub
lret
mov
scas
mov
cmp
shl
add
cli
lret
fsubr
aas
mov
mov
lods
out
or
push
add
mov
shlb
sbb
cmc
adc
nop
sti
repnz
loop
xchg
dec
aam
fistps
xchg
lret
adc
mov
mov
pop
sub
imul
js
js
and
sub
ficoms
ljmp
popf
and
xchg
testb
outsl
mov
aam
aas
pop
sub
into
out
test
iret
test
sar
ss
stos
sbb
jae
mov
fcoms
adc
or
cld
push
loopne
pusha
or
ljmp
xchg
push
cmp
mov
data16
add
lcall
in
fdivl
repnz
mov
xchg
insb
or
sti
repnz
adc
popl
lock
movsl
sbb
lea
xchg
or
orw
sub
mov
xchg
rorb
aam
push
or
lods
pop
cmp
mov
stos
dec
mov
adc
or
xchg
fistps
les
push
push
add
cs
lret
mov
scas
xor
test
mov
add
cld
adc
mov
sbb
push
lock
lret
shlb
or
ss
or
dec
and
testb
or
adc
jb
jb
jl
lods
push
pop
jb
adc
fisubrl
stos
push
lcall
popf
mov
loop
cmpb
sbb
mov
add
fisubrs
outsl
pop
pop
mov
addr16
jg
popf
inc
or
nop
cmc
fdivrs
fwait
dec
adc
sbb
push
mov
in
or
pop
sbb
gs
or
in
xchg
lods
mov
xchg
fsub
xor
push
xor
cwtl
nop
inc
cli
clc
jmp
stos
mov
jnp
mov
inc
ds
mov
mov
lret
xlat
or
mov
push
lods
cmp
jae
dec
pop
push
in
inc
mov
mov
inc
jle
fldenv
sbb
lock
inc
adc
mov
insl
addr16
rcr
pop
jo
iret
les
sub
jno
ss
adc
rclb
inc
or
push
stos
or
fnsave
inc
mov
mov
jo
pop
mov
inc
inc
lea
sbb
pop
pop
in
add
rol
movsb
cmp
push
xchg
cltd
push
ljmp
jo
push
scas
lret
lods
dec
or
enter
fildll
sbb
cmp
inc
into
stc
push
mov
pop
cmc
lcall
das
push
pop
xchg
mov
cli
adc
xchg
lods
into
push
adc
sub
aam
xor
inc
xchg
mov
rorb
out
mov
mov
mov
mov
rolb
das
inc
in
aas
and
fwait
mov
clc
sbb
lret
lock
sbb
dec
ret
jg
mov
adc
movsl
stc
mov
pop
fs
adc
mov
mov
sbb
mov
ds
mov
adc
inc
out
cli
and
push
xor
cvttps2pi
stc
mov
jb
or
fcoms
int3
out
mov
mov
mov
and
sbb
cmp
xchg
ret
shlb
sub
dec
jp
addb
ss
lea
mov
mov
out
mov
test
aad
inc
testl
enter
inc
loopne
jle
mov
inc
fadds
in
ja
push
push
es
xchg
xor
inc
popf
insb
adc
out
cmp
scas
sbb
out
faddl
add
repnz
shll
and
addl
repnz
mov
add
sub
dec
mov
daa
imul
notb
into
mov
pop
cli
fwait
push
enter
adc
addl
mov
cmpsb
cmpsl
cltd
int3
les
rclb
aam
adc
pushl
sbb
into
push
scas
ds
xor
outsl
les
xchg
fimuls
ljmp
ds
add
cmp
mov
scas
in
aas
xor
mov
aam
sbb
add
pushf
popa
sbb
hlt
shlb
mov
addl
adc
test
rcrb
fwait
inc
ss
mov
xchg
jbe
xchg
inc
clc
leave
adc
bound
sbb
daa
jb
rolb
dec
xchg
mov
pop
sbbb
push
jns
mov
popa
int3
fiaddl
decb
leave
jmp
gs
xor
sbb
mov
test
mov
xchg
aas
les
cmp
mov
shl
in
sub
ss
fsubrp
sbb
stos
daa
push
pushf
cmp
and
mov
aas
jbe
rorl
adc
cs
icebp
xchg
cmp
jno
pushf
in
adc
and
sub
or
inc
repnz
popa
or
lock
cmp
adc
hlt
push
sbb
jle
push
or
push
fsubs
adcb
mov
sahf
and
cmp
adc
jp
dec
mov
jbe
push
outsl
push
iret
popa
sbb
mov
pop
mov
les
out
aaa
jo
sub
xchg
inc
or
mov
test
imul
subb
sbb
sbb
xchg
sbb
enter
les
cmpsl
push
cld
xchg
dec
popf
mov
cli
cmp
sbb
ficompl
adc
jo
sub
scas
sbb
jp
les
scas
or
mov
roll
add
dec
daa
jbe
xor
push
inc
icebp
xchg
inc
cmp
mov
fsubr
dec
js
and
mov
add
mov
ds
xchg
mov
rcrb
xlat
mov
clc
adc
add
mov
lea
xor
hlt
xorl
cs
jae
mov
sbb
mov
sbb
fidivs
lret
cmp
adc
mov
js
jp
cwtl
mov
add
mov
push
daa
stos
fwait
xor
xor
cmp
sti
xchg
add
into
sbb
aad
mov
fcom
xchg
lahf
ss
adc
js
scas
sub
dec
mov
pop
dec
aad
inc
xor
ds
jmp
aam
fidivs
add
lods
cld
inc
mov
mov
cmp
stos
pop
lds
jg
repz
enter
mov
aad
cmp
xor
ficomps
scas
adc
mov
les
loop
das
fadds
mov
or
fisttpll
xchg
shrl
mov
lcall
fisttpll
sbb
jno
in
dec
push
jo
fcoms
lcall
divb
fisubl
push
mov
bound
jbe
dec
out
cltd
ss
sub
or
jne
jge
test
into
lret
stos
movsl
lea
loop
xchg
sarb
add
cmp
enter
les
mov
ror
push
push
test
jae
cmpb
mov
or
fcmove
ss
idivb
pop
or
sti
mov
fnstenv
scas
addr16
mov
push
rolb
cmp
cbtw
dec
mov
cmpsb
scas
fcompl
stos
sub
sbb
sbb
fadds
cs
adc
push
jmp
mov
adc
rolb
in
clc
sti
rorb
pushf
push
in
add
pop
ficomps
cli
fdivs
int3
mov
sbb
or
in
sbb
inc
mov
sub
enter
mov
lea
xor
xchg
call
mov
cli
cmp
push
in
repnz
ljmp
mov
sbb
testl
mov
aad
mov
out
or
fwait
pop
inc
mov
out
dec
aas
cmp
out
outsb
call
faddl
pop
clc
hlt
stos
into
mov
add
or
add
dec
dec
mov
sbb
fwait
stos
clc
lods
mov
fcomps
or
ljmp
cmp
mov
or
scas
cld
sub
rorb
ret
sub
aam
mov
cmp
sub
and
stos
mov
cmp
jp
mov
mov
ds
repz
or
repnz
sbb
push
sbb
sbb
fidivrl
and
fdivrl
in
mov
rcll
lock
dec
shr
mov
lods
dec
neg
jmp
xchg
jbe
sub
in
int3
hlt
sbb
mov
jnp
xor
pop
testb
repnz
scas
cld
enter
add
mov
rcr
push
sbb
sub
xchg
xor
mov
loop
nop
imulb
sbb
xchg
rcr
push
popf
mov
out
xor
stos
add
and
cli
fdivl
in
push
or
stos
or
or
loopne
les
stc
in
cmp
pusha
push
js
jp
sbbb
sbb
dec
ficomps
or
jp
sbb
xchg
filds
add
push
out
repnz
negb
and
shl
daa
flds
ret
rep
push
pop
jp
mov
mov
ret
data16
mov
mov
sbb
bnd
cltd
in
mov
xchg
fsubr
int3
divb
out
xchg
stos
sbb
fwait
pop
mov
push
dec
pop
ja
dec
cs
enter
add
ss
sti
cmp
or
hlt
mov
ja
fcmove
xor
sbb
jg
fsubs
subl
fcoml
aas
lock
ja
and
xchg
mov
out
outsl
dec
fsub
aas
xchg
xor
xor
cld
bound
test
ss
cmp
iret
fadds
out
push
mov
sub
jl
lock
in
or
ficoml
cs
arpl
cmp
lock
push
xchg
cmp
scas
scas
push
fcomps
mov
lods
cwtl
sbb
lock
mov
aaa
adc
inc
push
aas
popa
mov
push
inc
or
pop
outsl
mov
fcmove
push
aam
lods
inc
push
mov
shrb
inc
lcall
sbb
andl
or
cmp
pop
repz
daa
cli
adc
or
inc
fistps
cs
mov
add
xor
cmp
outsl
hlt
add
mov
fdivp
sbb
jge
in
ja
cmp
lret
clc
sbb
cmp
push
hlt
es
add
stos
ljmp
mov
add
pop
int
ss
mov
lcall
and
push
cli
mov
sti
sbb
lock
jg,pt
loope
mov
cld
xorb
jg
or
aas
add
mov
adc
cmpsl
aas
stos
inc
add
mov
clc
cmp
lock
add
push
mov
sbb
adc
arpl
inc
repnz
data16
or
mov
push
mov
adc
xor
ds
fdivrl
in
sbb
xlat
out
dec
sub
in
lods
pop
or
cmp
inc
outsl
add
out
out
cmp
rorb
mov
out
push
push
cmp
sbb
imul
xchg
sti
push
cltd
pushl
mov
add
sbb
push
jg
adc
push
xor
movb
ficoms
fsubs
repnz
mov
mov
mov
test
sbb
repz
mov
push
stos
mov
dec
jb
mov
or
stos
out
js
and
lret
clc
jg
mov
or
inc
dec
cmpsl
fcoms
outsb
jle,pn
aam
mov
cld
mov
mov
cmc
push
add
ds
inc
lahf
loope
cli
fidivrs
cmp
shlb
cmp
mov
pop
or
mov
and
xchg
mov
pop
cli
sbb
add
pop
mov
dec
mov
mov
cmp
adc
mov
fisttpll
and
lock
addr16
daa
xchg
loop
rolb
scas
lahf
lods
lods
fsubr
pop
mov
enter
add
lret
sub
push
ds
test
adc
xchg
sbb
cwtl
je
xor
jnp
pop
add
ss
mov
fmull
ret
xor
in
loop
mov
sahf
mov
xor
mov
js
hlt
sti
into
cmp
mov
sbb
or
push
out
and
rcll
add
lret
fs
shll
and
mov
pop
mov
ljmp
xor
into
fidivrl
mov
adcb
clc
push
fidivs
jb
inc
daa
nop
cmp
push
fcomps
jmp
ret
notb
rcrb
repnz
out
out
mov
push
or
sbb
addr16
mov
cmp
push
cld
jp
outsb
xchg
or
ja
es
sbb
jle
push
mov
jg
ljmp
inc
cs
jae
mov
push
jb
fdivrl
sbb
addr16
and
js
clc
fnsave
xor
mov
inc
xor
pushf
ss
cmp
mov
xor
les
stc
push
push
mov
movsl
inc
cld
fcoms
jg
lock
push
hlt
jg
mov
xor
inc
inc
adc
cmp
aam
out
xor
cli
aas
ret
push
dec
ficoms
in
mov
or
out
test
in
mov
idivb
or
inc
sbb
cld
imulb
repnz
mov
sbb
lahf
mov
int3
adc
push
into
mov
scas
jl
jae
adc
xorb
mov
push
pop
xorb
or
test
or
das
pop
nop
enter
mov
add
movsb
adc
sub
push
push
mov
mov
dec
mov
cs
imul
mov
sub
in
xchg
clc
test
lret
mov
scas
sarb
push
inc
adc
movsl
fisubs
sub
bound
ss
cltd
sbb
shrb
push
mov
ds
sub
sub
ficoml
and
lahf
push
add
sarb
inc
mov
into
jg
push
lock
js
push
pushf
loopne
lret
pop
notl
pop
lret
int3
aam
push
mov
test
cmp
clc
cltd
and
pop
into
rol
scas
inc
stos
in
fists
ror
mov
or
push
sbb
sbb
lcall
out
int3
mov
rcr
ret
add
mov
xchg
outsl
repz
sbb
mov
push
ss
push
in
mov
inc
div
cmp
cmpsb
lret
das
push
repnz
xorl
or
inc
sarb
cmp
pop
in
xchg
and
cmp
and
mov
sbb
les
mov
sbb
adcl
ljmp
dec
das
out
mov
rclb
jo
mov
aas
pop
cmpsb
testb
les
pop
aas
inc
xchg
mov
adc
ret
lcall
cmp
add
lret
ljmp
sub
in
mov
jecxz
push
lahf
mov
ds
loope
adc
add
sbb
out
inc
mov
xor
iret
push
dec
add
hlt
or
xchg
mov
xchg
mov
pop
hlt
lods
cs
cmpl
stos
push
inc
xlat
js
scas
cmp
and
mov
ds
rcll
jnp
out
or
xchg
cmp
or
mov
cld
imul
add
aas
xchg
dec
push
inc
addr16
fxam
push
fsub
fsubp
adc
mov
lret
cmp
mov
add
fists
push
push
hlt
ret
xchg
rcr
pop
lods
sbb
cmp
adc
pop
fcmovu
jno
clc
stos
push
shl
mov
cs
or
lea
lahf
or
add
fiaddl
mov
sub
stos
sub
and
mov
inc
sbb
cmpsb
push
adc
mov
or
jg
outsl
ds
and
xlat
mov
jg
xor
dec
mov
pushl
cli
scas
and
jecxz
dec
push
inc
mov
add
bound
mov
xchg
mov
negb
int3
outsl
cmp
ret
repnz
fcomps
sub
mov
iret
int
std
dec
clc
enter
add
mov
jg
outsl
xchg
xchg
mov
cmp
pop
push
fsubrl
xchg
shlb
cmp
out
pop
jp
cs
pop
fdivr
idivb
or
xchg
stc
lock
stc
cli
fcomp
cwtl
int3
dec
add
into
sbb
or
adc
xor
pop
push
stos
in
sbb
fistps
dec
pop
ss
cli
adc
mov
sbb
mov
int3
in
cmp
xchg
or
filds
xor
pop
out
call
or
inc
xor
adc
xchg
sub
daa
adcl
adc
fisubl
sbb
inc
ljmp
mov
enter
test
cmp
mov
fcoms
into
push
mov
pushf
in
cs
fcoml
movsb
sbb
fsubrl
out
sub
notl
inc
js
fwait
sbb
sbb
adc
sub
push
repnz
lock
mov
sbb
fwait
and
int3
mov
ret
xchg
notl
orps
mov
into
subl
fcompl
mov
inc
sub
add
mov
push
rcrl
dec
push
ds
push
shlb
pop
mov
sarb
lcall
sbb
jne
dec
negb
jle
ds
fiaddl
dec
fwait
rcll
push
pop
insb
int3
push
xor
push
xor
push
movsl
fsubrl
lahf
jg
add
int3
and
fnstenv
push
sbb
scas
ds
sbb
xchg
xor
dec
push
mov
scas
ss
xchg
or
pop
movsl
fdivs
inc
mov
or
in
fimuls
or
fistpl
mov
shr
outsl
mov
iret
cmp
test
scas
xor
fcmovu
or
push
rcl
repnz
jne
ljmp
mov
adc
repnz
and
mov
ljmp
enter
dec
cs
or
mov
mov
mov
jno
hlt
aas
stos
scas
idivb
outsl
sbb
fiaddl
add
mov
adcb
xor
mov
xchg
cld
inc
mov
fbstp
pusha
adc
sar
rcl
push
js
repnz
adc
ljmp
aam
lock
mov
mov
andb
scas
lret
mov
sbb
sbb
adc
adc
subl
jo
ror
pusha
pop
iret
movsb
jg
fabs
sbb
pop
adc
push
push
cli
push
aam
hlt
mov
mov
psubb
arpl
andb
rcrb
cmp
icebp
mov
in
aam
mov
push
xchg
pop
cli
adc
cmp
and
into
sub
lods
inc
ss
and
mov
movsb
mov
sbb
loopne
repz
mov
test
adc
inc
cli
mov
imul
xorb
jb
sahf
adc
cld
add
sbb
dec
add
mov
mov
mov
mov
mov
aam
lock
add
out
ret
inc
mov
test
and
shlb
dec
out
or
in
mov
negl
mov
cltd
jge
cs
cmp
testb
push
out
push
out
jne
or
pop
rcr
mov
push
mov
jno
pop
sub
push
push
scas
int
pop
xchg
aas
repnz
jae
mov
cs
sub
add
xchg
push
inc
fnsave
rorb
mov
pop
mov
out
push
mov
icebp
adc
push
jp
xchg
jnp
cmp
mov
mov
cwtl
push
cli
push
push
imulb
or
or
cs
movsb
adc
outsb
inc
ds
mov
fadds
ljmp
pop
test
ds
mov
mov
pop
scas
xor
or
insb
lret
lock
sbb
das
mov
xor
dec
cltd
mov
or
daa
aaa
mov
mov
int3
xchg
js
mov
cmp
mov
sarl
repnz
bound
push
mov
jb
lock
mov
adc
xchg
ss
mov
stos
or
rorb
loop
bound
push
mov
sbb
and
nop
in
adc
faddl
es
mov
cld
push
fnsave
mov
push
fisubl
dec
dec
mov
xor
js
js
mov
or
cmpb
lret
addr16
inc
popf
inc
mov
hlt
or
xchg
mov
push
lods
and
stos
sub
adc
cmp
ds
xor
xor
sbb
xchg
mov
pop
mov
pop
lahf
mov
mov
or
mov
add
std
ret
xor
push
imulb
cmp
enter
jnp
push
lret
pop
icebp
or
adc
cld
or
repnz
add
enter
lret
push
cs
push
inc
cwtl
sbb
inc
push
cmp
les
fisttpl
sbb
into
aas
dec
stc
lcall
lods
xchg
inc
out
aam
nop
mov
mov
sbb
nop
dec
add
sbbl
inc
repz
es
dec
sbb
cltd
jge
xor
lea
fcoms
fdivrl
scas
mov
shlb
xchg
movzwl
pusha
ljmp
push
inc
add
imul
test
push
pop
xchg
mov
xor
dec
inc
hlt
pause
fdivrs
lcall
push
bound
repnz
adc
jb
pusha
js
addr16
mov
hlt
ret
xor
fisubrs
mov
adc
sub
push
int3
push
cmp
cli
ret
sbb
cmp
pop
add
or
add
mov
xchg
mov
fsubl
cltd
adc
and
sahf
dec
mov
insb
ljmp
cs
repnz
xchg
sub
int3
add
lret
mov
or
mov
aam
jg
mov
lret
mov
pop
cwtl
add
fmuls
xchg
push
sbb
ret
jo
pop
adc
mov
stos
cmp
xorb
mov
jb
xchg
mov
mov
push
arpl
cltd
sbb
mov
lea
adc
sahf
ret
fdivs
push
cmp
cmp
pop
inc
xchg
inc
popf
cmp
cld
ljmp
mov
data16
xor
pop
xor
add
rolb
dec
push
or
mov
inc
pusha
cli
mov
sub
dec
inc
sbb
jge
xor
test
jb
sahf
xchg
out
cld
sbb
sbb
dec
mov
popf
lods
fld
or
test
lods
int3
sbb
xchg
lods
loope
imul
push
lahf
inc
cltd
jmp
loopne
xor
rorb
shl
js
adc
pop
mov
fstpl
loop
lret
outsl
aas
cltd
int
addr16
ss
fdivs
mov
xor
fimuls
lret
mov
push
aad
adc
cltd
sbb
cmc
pop
pop
mov
ficompl
xor
push
out
xchg
jb
scas
cmp
cld
fadd
loope
xlat
aam
push
or
mov
cli
js
fsts
mov
xorb
movsb
and
pusha
cs
iret
mov
cmp
cmp
outsb
mov
pop
sbb
push
mov
cmp
push
mov
leave
jle
xlat
push
test
cs
or
gs
and
ja
add
xchg
pop
jp
xchg
inc
repnz
pop
scas
adc
loop
lock
mov
fcompl
mov
dec
aas
into
mov
ds
dec
incl
push
stos
mov
mov
add
mov
cs
xor
dec
jg
nop
ljmp
sub
fildl
pop
jecxz
pop
push
fists
push
pusha
or
and
sbb
xchg
insl
push
and
cmp
mov
or
pop
addr16
dec
pop
jg
jns
clc
lcall
sbb
lea
mov
adc
dec
mov
inc
idiv
xchg
ret
jno
sbb
dec
mov
hlt
sbb
or
in
scas
call
mov
xor
not
add
sbb
out
fstpl
stos
aam
xlat
mov
sbb
or
inc
aas
in
aas
add
mov
xor
jp
sbbb
jno
popa
xchg
xor
in
into
and
fisubrl
ljmp
mov
dec
nop
sbb
ds
insb
xchg
inc
mov
mov
add
out
dec
jno
pop
pop
fcoml
fmull
fcomps
mov
mov
arpl
repnz
dec
push
cmp
stos
das
aam
xor
aam
leave
int3
sbbb
imul
adc
xchg
jle
mov
ds
out
lret
jns
sbb
dec
mov
xchg
clc
push
cld
sbb
rcr
mov
mov
ljmp
addr16
sarb
xchg
cltd
push
or
ficompl
ljmp
cmp
cmp
adc
or
sub
repnz
cmp
les
hlt
mov
mov
jmp
mov
cli
ds
mov
out
jecxz
add
js
out
xor
mov
ficomps
hlt
adc
push
stos
ret
out
mov
scas
mov
cmp
and
js
jbe
xor
int3
dec
xchg
pop
add
inc
add
sub
into
scas
lods
enter
repnz
mov
imull
fwait
ds
inc
stos
mov
hlt
outsl
cmp
mov
enter
dec
jbe
leave
pop
mov
fcmovbe
sbb
out
jo
cld
ljmp
cltd
push
in
xorl
lret
mov
packuswb
ret
or
outsl
sarb
mov
mov
inc
clc
or
jo
jbe
jnp
jne
pop
out
xor
inc
ljmp
out
ret
push
out
sub
mov
jbe
fsubr
mov
mov
into
and
pop
enter
or
fsubl
int3
ficoms
sbb
sbb
xchg
add
popf
test
cs
adc
push
sarb
outsl
jl
sbb
cmp
das
mov
fdiv
mov
pop
shlb
lcall
mov
push
shlb
lods
repnz
cltd
dec
aam
cmp
jle
mov
sahf
clc
push
cs
dec
mov
cmp
hlt
cmp
fidivrl
mov
fdiv
lds
sti
push
popf
rcrb
adc
scas
mov
out
sbb
sbb
pop
and
jecxz
lods
stos
gs
jle
mov
lea
push
adc
add
lods
scas
mov
js
scas
mov
cwtl
out
sbb
add
push
mov
push
push
fdiv
lret
adc
les
xor
std
jg
gs
aam
mov
fsubrs
cmp
push
aad
shlb
movzwl
arpl
nop
or
mov
or
lret
inc
stos
pusha
data16
rclb
push
push
xchg
jbe
std
push
lods
imul
js
jp
and
lcall
fsubr
test
xchg
dec
or
lods
fsubl
clc
int3
adc
mov
les
popa
cmpsb
aas
and
sbb
ds
out
lods
idivb
sub
mov
aas
idivb
sbb
cmp
cs
int3
out
add
add
fucompp
js
jb
jbe
test
cmpsb
mov
dec
in
lahf
inc
sbb
pop
call
mov
cmp
fsubrl
mov
push
scas
cmc
popf
dec
cs
divl
jo
mov
mov
lret
mull
cwtl
or
dec
xchg
sbb
popf
and
mov
push
retw
ds
xchg
push
ljmp
push
xchg
shlb
sbb
iret
push
bound
cmpb
cli
xor
push
add
out
gs
stos
rorb
int3
pop
xchg
popf
mov
out
idivb
rclb
jae
mov
mov
mov
fidivl
push
push
ficoml
fistps
sbb
sbb
cmp
add
cmp
out
jo
mull
fisubrs
in
add
das
ljmp
push
sub
xchg
xor
adc
lahf
or
push
jp
rolb
push
mov
stos
add
out
into
das
push
ds
dec
aas
mov
cmp
cld
mov
mov
ljmp
inc
pop
movb
aas
fdivrl
cmpsb
mov
rol
lcall
xor
das
adc
pushf
or
mov
aam
or
outsl
xor
ds
les
xor
and
cltd
xchg
cli
fcoml
pop
pop
sbb
xchg
mov
sbb
ss
pop
int
mov
cli
scas
xor
lock
cmpsb
cmpb
fmull
pop
jle
arpl
push
testb
lods
or
mov
mov
mov
and
stos
mov
fwait
or
mov
dec
pop
inc
mov
mov
insb
ret
xchg
inc
sti
dec
pop
out
sbb
add
fwait
inc
sbb
push
fcompl
xor
jp
sub
mov
cli
punpcklbw
cmpsl
jmp
jnp
lret
cmp
int3
cld
push
mov
sbb
mov
aas
cld
pop
rolb
push
lock
add
adc
in
ljmp
add
divb
sbb
adc
sbb
fldt
xor
movsb
pop
or
in
inc
xchg
scas
or
fwait
ds
push
movsb
faddl
cmp
or
jbe
dec
clc
mov
jg
jg
mov
lret
sti
fcompl
pusha
cmp
popf
inc
sbb
in
mov
adc
adc
sub
or
ret
lcall
rorl
mov
push
xor
add
popf
and
ljmp
and
cmpsl
push
dec
mov
mov
push
gs
mov
cwtl
or
into
loop
mov
pop
addr16
add
pusha
popf
push
cmp
scas
pop
jne
push
mov
inc
pusha
lock
movsl
mov
loope
jnp
fxtract
scas
mov
in
enter
or
push
cmp
stos
dec
push
scas
sbb
aaa
test
fldcw
mov
xchg
sub
fistpll
sbb
loopew
addr16
ds
or
add
pop
mov
enter
mov
test
push
or
add
int3
sarb
push
jne
jno
push
ljmp
mov
dec
push
sbb
divb
push
int3
ret
inc
cmp
repz
cmc
jb
jbe
lahf
bound
or
sbb
mov
fdivrl
ljmp
xchg
sbb
fidivl
sarb
lods
inc
jl
add
jecxz
xor
xchg
inc
xchg
jl
sbb
enter
imul
pusha
sbb
jb
lods
nop
add
into
int3
pushf
pop
mov
inc
sti
xchg
jb
mov
cmp
adc
sar
roll
sub
es
ds
push
add
aam
in
nopl
xor
xchg
dec
sub
fwait
pop
fsts
or
or
cld
test
jo
jb
xor
mov
dec
mov
in
lret
jmp
ljmp
xchg
rcll
or
test
push
scas
xor
adc
adc
scas
scas
sbb
cmp
pop
arpl
mov
pushf
cli
push
mov
into
and
cmp
fwait
lret
jp
mov
xor
mov
cmp
out
filds
mov
fldl
or
push
in
lret
nop
push
mov
sub
loopne
movsl
fdivrp
das
stos
bound
push
xor
ds
out
into
ret
or
cmp
js
xchg
push
mov
adc
mov
mov
rcr
sub
mov
sub
jmp
mov
and
in
fidivl
cld
leave
bound
push
mov
test
jp
pushf
push
decb
jnp
sbb
adc
lock
movsl
mov
rolb
repnz
or
mov
mov
inc
loop
jp
sub
inc
clc
mov
xor
ret
sbb
push
xor
cmp
lcall
push
mov
sub
and
push
sbb
jp
imul
cli
out
loop
mov
mov
mov
cmp
sbb
testb
xor
ficompl
jge
sbb
repnz
out
aas
jp
lret
rclb
daa
cs
out
mov
pushf
mov
mov
fcompl
fidivrs
aas
xor
dec
out
pop
adc
rcl
cltd
mov
popa
xrelease
mov
or
push
cmpl
hlt
mov
aaa
adc
mov
mov
scas
mov
rcrb
adc
repz
call
neg
jp
fs
mov
test
ret
aas
mov
sbb
loop,pt
dec
lahf
ret
push
fdivrl
rorb
push
jne
inc
out
arpl
mov
rol
xchg
mov
mov
fcomps
fcmovne
out
aam
das
jg
lock
das
fs
filds
daa
sub
push
adc
jg
mov
lcall
fdiv
leave
cs
enter
daa
mov
mov
jbe
fidivl
clc
or
adc
mov
or
outsl
push
fs
fsubrl
repnz
mov
sbb
out
fcompl
cs
xor
bound
mov
jno
mov
sbb
les
dec
je
or
fimuls
jno
popf
and
sbb
outsl
enter
ljmp
ds
cmpsl
aas
scas
outsl
push
sti
pop
pusha
incl
mov
ljmp
testb
lret
stos
ret
out
loop,pn
clc
jmp
push
adc
ret
fwait
jns
enter
in
ss
mov
hlt
sbb
fsubrl
jg
sti
mov
lods
xor
lret
push
jmp
cli
lock
mov
sti
repnz
cmp
ljmp
aaa
add
popa
xchg
jg
int
push
pop
daa
xchg
xor
dec
enter
out
loope
add
pop
adc
cld
les
push
sarb
sbb
lods
jno
lods
add
mov
adc
fidivl
inc
in
sub
rol
repnz
ret
inc
ljmp
fadds
stc
clc
idiv
cli
lods
mov
outsl
and
ljmp
loop
cwtl
add
cmp
leave
fcompl
iret
xor
or
inc
out
add
jb
out
test
scas
pop
into
xorb
sahf
xor
stos
mov
push
or
into
xor
ret
leave
js
lock
mov
int
cli
rolb
mov
pop
into
cmp
xor
cmp
add
mov
or
or
call
push
fdivr
fs
mov
cmp
js
mov
js
jbe
pop
sub
lock
jo
mov
into
mov
daa
lahf
inc
sarb
inc
add
nop
mov
incl
dec
jnp
sbb
sbb
inc
push
xor
imul
sti
leave
js
pop
dec
out
das
sbb
rclb
outsb
adc
cmc
xchg
in
sahf
pop
in
enter
dec
rorl
xor
jp
mov
enter
mov
ss
adc
mov
fimull
mov
fwait
xchg
mov
sub
mov
sarl
sbb
ss
jb
divb
faddl
fldl
stc
xchg
sahf
cmpsb
lds
mov
xor
push
enter
pop
daa
movsl
sbb
push
aaa
jp
lock
xchg
scas
mov
out
shlb
mov
xchg
rcll
xchg
popf
push
rcrb
fnstsw
inc
scas
dec
inc
or
pop
inc
cltd
sub
inc
push
lods
xchg
mov
sbb
mov
inc
repnz
cmpsb
aas
aas
adc
sub
sbb
shlb
daa
cwtl
mov
push
xor
mov
addr16
lea
or
stos
mov
faddl
fcoml
xor
dec
inc
cmpsl
js
xchg
es
mov
xchg
sub
ret
gs
add
rol
inc
xor
xor
lahf
cmp
idiv
and
adc
subb
adc
dec
mov
stos
subl
cmpsl
sbb
xchg
push
dec
lret
adc
cwtl
lods
or
sarb
add
out
fwait
negl
sbb
dec
ret
ficoms
mov
cs
scas
imul
mov
cmpsl
xchg
fs
add
inc
or
in
daa
shrb
out
or
push
cmp
fidivl
xchg
js
cwtl
add
add
rol
sbb
jle
pushf
in
scas
repnz
sbb
aaa
pop
js
in
jo
jmp
push
and
sbb
sub
scas
fdivs
push
sbb
mov
test
inc
fdiv
pop
adc
sbb
fcmovb
xchg
or
mov
cmp
jecxz
dec
sub
fidivl
sbb
and
enter
mov
push
ljmp
and
rclb
xchg
js
sbb
push
bnd
mov
icebp
repnz
push
or
mov
or
sbb
sbb
jo
sbb
shr
cbtw
not
lea
es
rclb
sbb
out
sbb
xchg
fwait
cmc
or
sbb
stos
ss
adc
cli
jle
or
or
xlat
aas
mov
xchg
lods
adc
scas
inc
jp
into
push
sbb
shlb
mov
insb
mov
sub
cmp
sbb
ret
adc
js
push
into
fs
adcl
pop
inc
pop
cmp
fisubs
add
out
mov
or
iret
lods
out
sbb
outsb
push
cmc
ds
movsb
mov
lret
jg
cli
push
shr
mov
testb
sbb
setbe
les
movsb
or
pop
aaa
mov
jb
data16
inc
mov
in
cmp
stos
lahf
mov
es
loope
xlat
push
pop
repz
stos
xchg
pusha
mov
xchg
ret
ljmp
lret
xor
notl
inc
loope
aam
pushf
jl
ss
inc
xor
clc
pop
arpl
shll
fiadds
mov
sbb
cld
push
ja
xchg
or
xor
or
movl
rcrb
ds
ficompl
test
fcompl
cmp
lret
sbb
pop
sbb
push
es
cli
rcl
cmc
jnp
cmovo
in
out
gs
iret
add
lret
mov
sub
scas
mov
cmp
or
mov
sbb
movsl
fdivs
out
mov
inc
fcompl
xor
add
fildll
sbb
xchg
les
cmp
adc
xchg
add
adc
jbe
notl
lcall
sbb
push
pop
sbb
mov
cmp
push
lods
ret
push
out
push
out
out
mov
cld
mov
hlt
icebp
sbbb
sub
push
inc
fcmovu
add
faddl
sbb
lods
mov
sub
sbb
pop
notb
shll
mov
sbb
enter
mov
in
mov
mov
add
push
call
mov
sub
sbb
in
dec
xchg
es
out
jle
xor
push
rcrb
or
out
lods
mov
lock
pop
xlat
cmp
out
cmp
stos
push
add
mov
cld
fwait
sbb
popa
sbb
das
or
scas
shlb
push
xbegin
xor
lahf
call
and
cmp
cld
add
sbb
pop
fisubrl
xchg
test
leave
fldenv
loop
xor
mov
sub
fidivrl
adc
xchg
sarb
js
mov
mov
mov
out
mov
gs
js
mov
cli
lock
or
adc
ds
mov
or
dec
fs
in
or
adc
dec
mov
dec
fadds
xor
add
mov
jg
jg
inc
out
ret
push
adc
outsl
stos
xor
cmpsb
adc
xchg
mov
and
ret
loopne
sbbl
lret
lds
pop
adc
lcall
jp
jbe
shlb
cmovo
push
data16
das
add
pop
mov
sbb
inc
cmpsb
jo
clc
int
mov
pushf
js
ljmp
lret
ss
pop
push
push
inc
mov
mov
cmp
xchg
dec
adc
lret
adcl
shrl
les
loope
fsubrl
pop
outsl
mov
pusha
add
movb
imulb
das
or
xchg
add
cmp
add
sbb
fists
xor
out
mov
cmpsl
outsl
and
shll
sti
inc
popf
jl
xor
outsl
inc
mov
fimuls
or
xchg
mov
inc
inc
aaa
xchg
push
push
shrl
iret
mov
sbb
inc
fcmovb
jo
inc
repnz
lea
xor
cmpsl
dec
inc
mov
loop
dec
inc
subb
sahf
ljmp
nop
addr16
fidivl
out
sbb
xchg
jp
das
cltd
addr16
jg
aas
cmp
xor
cltd
push
sbb
std
out
ds
aas
sahf
jp
mov
bound
clc
adcb
loop
les
out
in
sbb
xchg
lahf
mov
inc
sub
fs
cld
or
dec
sbb
jo
inc
adc
fisttpl
aas
mov
ds
xor
xor
pop
mov
js
push
cmp
and
push
cld
mov
jnp
xchg
sbb
ds
lock
adc
xchg
daa
add
lcall
ret
or
sbb
jb
jbe
ret
rol
lret
adc
movsl
insl
aam
lea
cmp
cld
mov
jp
add
cmp
cmpsb
lock
mov
and
adc
stos
dec
ljmp
orl
sub
add
enter
lret
mov
or
mov
fmuls
fwait
stos
xor
mov
mov
ljmp
jo
js
fs
lods
iret
add
fwait
push
aas
fdivrs
pop
mov
cmp
pop
pop
dec
xchg
xchg
mov
das
stc
lods
ret
sbb
in
adc
push
cmp
sbb
andb
rcl
and
addr16
imul
push
sbb
in
ror
or
loop
pusha
xor
dec
mov
sbb
xor
clc
or
int3
sbb
outsl
in
sbbl
push
sbb
ds
aad
addr16
pop
mov
faddl
pop
mov
sbb
adc
sbb
mov
jp
cmp
hlt
sub
jecxz
jg
cwtl
add
mov
mov
into
adc
jecxz
sub
cmp
cmp
gs
jmp
popf
cld
cmpsl
repz
sbb
sbb
mov
fidivrs
mov
pop
jg
mov
fisubs
ror
add
fcmovu
fs
mov
cld
lods
or
jnp
lods
mov
rclb
cltd
and
jb
adc
adc
inc
fdiv
lock
stos
mov
nop
rcr
pop
xor
lret
test
mov
imull
clc
mov
enter
mov
push
enter
adc
pop
es
mov
clc
repnz
push
inc
mov
inc
aaa
cmp
fmull
testl
xchg
ds
scas
sti
scas
idivb
out
ret
push
clc
dec
cmp
rorb
push
xchg
inc
mov
push
das
cld
mov
push
mov
scas
xchg
jp
mov
jnp
fidivs
aam
aas
inc
ss
scas
idivb
ficomps
les
sbb
sbb
jne
jl
mov
int3
cltd
lcall
ret
clc
cmp
stos
or
scas
sahf
out
fcomps
popf
cmp
sbb
scas
dec
adc
push
mov
lock
or
mov
lahf
loop
int3
or
lret
lods
pop
jecxz
sub
hlt
into
jne
movb
jp
insb
push
ss
gs
gs
lea
cmc
sahf
fidivrs
stos
xor
cmp
xor
rcr
mov
mov
and
sub
mov
or
jge
scas
aas
sti
out
dec
sbb
add
add
in
jg
sbb
adc
repnz
mov
ljmp
ror
pushf
stos
repnz
fiaddl
mov
in
mov
lods
or
dec
adc
push
mov
pop
jne
pop
sbb
popa
pop
ss
in
das
jne
push
cmp
xchg
clc
ret
add
sbb
ficoml
or
mov
out
enter
fs
cli
in
sub
repnz
xor
push
sbb
adc
or
cli
mov
mov
jb
dec
mov
cs
data16
int3
jp
mov
push
sub
call
cltd
inc
nop
and
push
daa
stos
dec
cld
add
inc
sbb
jmp
sbb
fnstsw
ficoms
imul
sub
mov
xchg
ds
xor
or
sub
dec
paddd
int3
push
pop
daa
sahf
repnz
mov
push
fadd
fcmovu
inc
arpl
imul
fwait
lcall
mov
add
cld
out
popf
add
mov
std
repnz
cmp
inc
cmp
rcrl
or
scas
out
lods
scas
repnz
and
hlt
cs
push
add
add
lret
inc
cmp
lret
sbb
push
cli
mov
lahf
mov
out
rclb
fmuls
sbb
xor
repnz
inc
push
fisubl
dec
scas
cmp
ret
mov
cs
nop
decb
or
popf
sti
ror
mov
ljmp
or
push
ds
movb
inc
jnp,pt
jg
and
pop
rolb
pop
add
fimuls
or
out
push
sub
out
loopne
cs
pop
or
shr
sarl
cmpsl
cld
shl
rorb
testb
bound
pushf
sahf
aam
cmp
in
push
lock
add
aaa
int3
test
sub
repnz
lret
ret
ficoml
pop
je
js
jmp
outsl
pop
cmp
mov
mov
cmp
jl
sbb
faddl
jnp
mov
dec
mov
in
out
stos
xchg
jmp
adc
stc
repnz
mov
or
sub
cltd
push
mov
ja
sbb
push
lods
sub
adc
push
pop
add
xor
pop
xchg
mov
cmp
or
sbb
adc
or
add
pop
mov
js
bound
xchg
mov
into
pusha
jno
mov
and
fwait
mov
pop
cli
push
sbb
cmpsl
sbb
cmp
xchg
jle
sbb
xor
lea
inc
inc
mov
sbb
fdivs
in
add
orl
in
lret
sbb
pop
push
sub
push
ret
dec
pop
add
xlat
cmpsl
sub
stos
std
les
adcl
jae
fidivrl
aaa
shlb
mov
mov
jno
jmp
push
sub
fiaddl
push
pushf
mov
sub
add
or
data16
fsubs
out
test
inc
ret
and
js
fimull
imull
jb
sbb
bound
repz
scas
add
push
sbb
ljmp
mov
xchg
popf
std
hlt
fildll
mov
fwait
pop
sahf
cmc
mov
add
cld
dec
popa
pop
add
aam
adc
mov
sar
inc
sbb
cmp
xchg
aam
mov
cld
mov
jae
dec
inc
push
inc
out
mov
or
mov
shrb
mov
cld
pop
sahf
push
leave
push
lret
xor
mov
cmp
sbb
xchg
clc
fdiv
movl
nop
mov
pusha
inc
hlt
fwait
neg
ja
inc
adc
pusha
push
jp
dec
push
scas
pushf
or
stos
int3
rcl
lcall
push
xor
inc
outsl
cmpsb
jg
nop
or
sbb
xor
testb
aam
mov
sub
or
ljmp
mov
ds
icebp
ss
mulb
jnp
adc
hlt
dec
and
hlt
bound
aad
push
movsb
in
popf
cmp
cld
and
stos
inc
adc
movsl
mov
push
mov
xor
push
dec
dec
add
mov
inc
cmp
mov
fcompl
stos
js
clc
push
pushf
xchg
fcom
ds
pop
cmp
stc
mov
sbb
mov
mov
loopne
ret
sub
xor
divl
mov
test
test
out
lret
pop
jns
into
dec
mov
mov
fs
mov
cmp
cmp
fisubs
dec
in
ljmp
mov
dec
xor
and
leave
push
xchg
sub
xchg
jp
jb
mov
gs
popa
popa
out
loopne
cwtl
fstpt
sbb
fimuls
push
and
adc
xorb
stos
mov
or
sbb
add
dec
sbb
xchg
jg
aam
aad
enter
repz
cmp
push
cli
xlat
push
xor
cmp
rolb
pop
pop
out
in
mov
les
test
xlat
lea
inc
add
scas
cmp
fdivrl
cmp
xor
mov
fidivl
sahf
enter
or
or
xor
out
jae
sbb
pushf
mov
ljmp
cmp
clc
sub
sub
dec
lret
xchg
in
mov
jb
or
push
pop
xchg
test
push
lret
fidivl
faddl
lret
pushf
imulb
rorb
les
or
mov
jnp
ret
enter
outsl
sahf
test
ljmp
lcall
mov
pop
test
das
lret
push
xor
sub
and
sarb
fsubrl
mov
push
cmp
outsl
clc
push
pop
cs
scas
xor
push
les
cli
push
ds
jg
cmpsb
xor
mov
jle
sub
pop
mov
pusha
les
xchg
cmp
imulb
mov
pushf
mov
ret
push
popf
ss
pminsw
adc
bound
scas
mov
mov
aam
lock
sbb
cli
lcall
xchg
adc
adc
cmp
add
lods
and
negl
push
fisubrs
mov
ss
ret
push
adc
adc
fcmovb
inc
cmp
mov
add
pop
lret
repnz
jnp
pop
push
xchg
arpl
movl
cmp
out
cmp
sbb
scas
cld
mov
push
in
ljmp
fwait
mov
xor
cmp
push
add
pop
push
mov
jg
pusha
mov
gs
ret
fmull
xor
rclb
jp
mov
aam
mov
xor
pop
cmpsb
inc
mov
jle
sbb
clc
xchg
jl
jno
inc
dec
cld
jnp
fisttps
and
lret
push
fcompl
adc
mov
xor
js
cmc
aam
xor
push
jo
mov
call
sbb
or
js
lahf
inc
mov
mov
xor
cmc
fsub
dec
adc
cltd
fsubrl
enter
mov
pop
stos
pusha
jp
rcr
pop
fiaddl
les
inc
mov
mov
sbbb
mov
cmp
fs
xor
std
and
add
in
movsl
scas
inc
mov
and
ljmp
fcompl
jno
das
fsubrl
push
enter
ljmp
mov
mov
cs
lcall
outsb
fwait
negl
scas
mov
mov
cs
rol
stos
repz
adc
mov
lock
lret
or
out
lea
push
orb
mov
enter
insl
mov
xchg
cmp
aaa
andb
add
enter
test
ljmp
mov
mov
xlat
fcmovu
inc
adc
dec
lea
aam
lcall
into
mov
ds
shlb
mov
adc
sbbb
jp
pop
fcompl
jnp
add
sbb
les
div
outsl
int3
outsl
rcl
push
aas
jg
mov
fsubrl
movsb
xchg
add
mov
mov
or
mov
pushf
mov
jecxz
and
xor
fdivs
adc
and
adc
incl
int3
inc
ds
dec
pop
lret
outsl
jmp
ss
pop
ret
or
lock
scas
fsub
push
lea
into
ljmp
cli
repnz
cmpsb
sar
mov
mov
pop
jns
sub
or
cmp
outsb
int3
cld
addr16
lret
mov
jle
bnd
xorb
cmp
lds
lods
xor
adc
fsubp
mov
mov
xchg
lock
stos
adc
xchg
dec
mov
push
ds
inc
int3
into
sbb
loope
rcrl
mov
lock
bound
jb
scas
mov
mov
nop
shl
enter
out
loope
inc
push
lret
mov
cli
ljmp
orb
nop
and
fistps
push
das
pop
add
lahf
fs
push
dec
inc
cmpsb
data16
xchg
jno
and
inc
adc
cmp
lcall
repnz
aas
push
add
jb
mov
and
aam
lcall
inc
adc
pop
adc
sbb
ret
sbb
addr16
out
jne
cmp
shl
add
pop
aad
int3
pushf
mov
testb
jmp
dec
inc
jmp
fadd
jno
xchg
cmp
pop
fildl
mov
lcall
mov
push
sbb
sbb
lahf
mov
cmp
repnz
lret
xchg
push
or
mov
fimull
xchg
lods
int3
inc
cltd
iret
ds
rcrb
sbb
or
fisubs
rolb
xchg
inc
in
lahf
cmc
lret
das
lea
adc
fidivrs
mov
pop
mov
dec
stos
out
enter
addr16
out
in
mov
mov
xor
cwtl
push
push
cs
scas
mov
mov
cmp
out
or
aas
popa
sbb
mov
mov
adc
cs
aam
fsubrl
add
mov
mov
or
cs
clc
push
adc
lret
pop
cmp
xchg
adc
cmc
shlb
subb
xchg
out
adc
jge
fadd
and
adc
lock
lret
rcr
xor
xor
rcr
leave
jecxz
or
xchg
dec
sbb
repz
xchg
out
sarb
aas
fldl
xchg
push
cli
jno
xor
iret
nop
mov
enter
loopne
pusha
pop
lret
ljmp
out
lcall
lods
lods
cmpsl
enter
sarb
pop
mov
push
mov
pop
inc
in
and
hlt
mov
fcmove
inc
nop
or
push
jne
mulb
add
mov
lods
cli
lods
bnd
mov
push
into
push
pop
push
adc
rcl
popf
fdivrs
jbe
mov
mov
aam
xor
push
out
jmp
fdivs
sbb
mov
or
fdivrs
lods
mulb
repnz
scas
cmpsl
dec
insl
push
push
adc
cmc
fbld
jp
cli
sarb
jmp
xor
adc
inc
adc
mov
rol
jne
pop
mov
mov
sub
mov
add
cmp
xor
or
cli
gs
clc
fdiv
jb
fs
and
mov
jno
push
sub
xor
test
cld
popf
adc
rcrb
bound
into
fsubs
cmp
shlb
sti
sbb
jne
xor
add
push
arpl
cmpsl
ljmp
rcrb
inc
hlt
out
daa
mov
fiaddl
and
dec
aaa
or
push
add
cmp
pushf
sub
push
shlb
neg
outsb
ret
add
in
xchg
xchg
sbb
add
push
xor
repnz
dec
dec
xor
mov
mov
lods
mull
stos
xlat
hlt
mov
lods
into
shlb
jne
nop
ds
mov
fwait
sbb
pop
enter
fdiv
cs
std
inc
jo
fs
cld
mov
mov
adc
push
ret
pusha
lock
mov
out
nop
and
mov
mov
ss
jnp
jle
adc
mov
rcrl
hlt
scas
sbb
lods
or
mov
xchg
and
xchg
jne
inc
aam
xchg
rclb
add
out
add
inc
mov
fdivr
mov
sar
out
push
ret
cmpsb
cwtl
ror
out
repnz
pop
xchg
xchg
xor
and
mov
fmull
push
sub
out
inc
scas
sbb
cld
idivl
or
adc
xor
adc
enter
cltd
and
lahf
test
aam
inc
stos
ret
js
hlt
divb
pusha
dec
nop
cmp
test
mov
add
repnz
and
jns
add
scas
stos
cltd
and
adc
ror
mov
push
or
sub
fimull
jae
push
pop
movsl
pop
cmove
popf
scas
enter
cmpsb
leave
in
add
or
enter
sbb
xchg
xchg
enter
andb
js
mov
icebp
int3
aas
fs
scas
movsb
cld
adc
push
add
sub
cmp
in
ljmp
jb
push
jnp
mov
add
int3
pushf
daa
xor
fcomp
add
cld
xchg
mov
or
insb
out
jecxz
cld
fdivl
mov
xor
leave
ret
lret
stos
not
adc
or
mov
les
lahf
push
dec
cmp
sbb
daa
xlat
sub
sub
push
into
nop
out
dec
test
xor
push
ds
fsub
cmp
test
stos
or
push
lods
pop
inc
push
ja
mov
adc
out
and
mov
outsl
jg,pn
mov
push
adc
inc
cmpsl
add
xchg
repnz
sub
stos
inc
mov
addb
popf
sbb
fsubrs
cmp
adc
mov
mov
xlat
push
xchg
dec
sahf
lret
or
or
out
jbe
pop
bound
stos
sub
mov
fwait
ja
out
or
lea
mov
mov
dec
test
cs
cmp
dec
pusha
dec
imul
pop
popf
or
lock
out
and
loop
test
jmp
mov
add
cmp
mov
les
ret
pop
cmp
mov
pop
mov
das
cs
faddp
xchg
sbb
jg
xchg
adc
push
or
pop
adc
popa
fstps
scas
les
dec
xor
stos
adc
sub
hlt
mov
xor
mov
mov
jnp
push
fnstsw
stos
push
fildll
mov
div
and
sbb
pop
jle
add
hlt
push
cmp
imul
into
out
xchg
push
in
jp
cmp
jp
js
mov
or
push
cld
mov
mov
pop
shl
sbb
jp
sahf
test
aam
ljmp
fcomps
push
cmpsb
sbb
cmp
jne
adc
xor
mov
push
mov
lds
push
addr16
push
bound
add
cmp
adc
inc
sarb
xchg
stos
aam
xor
mov
mov
popf
outsl
pop
mov
pusha
xor
or
out
mov
xor
dec
mull
add
or
fidivrl
lret
lea
ljmp
in
add
int3
push
aam
lcall
or
das
pop
mov
and
aam
lahf
jne
xor
xor
sub
stos
dec
cwtl
ljmp
int3
addr16
xchg
mov
sbb
hlt
out
fwait
pop
loop
out
not
iret
cli
mov
ss
dec
pushf
dec
add
aam
icebp
icebp
pop
or
out
outsl
and
push
push
inc
into
or
push
hlt
dec
mov
cmp
lea
adc
les
xchg
scas
outsb
fs
dec
dec
aas
mov
lret
cmp
inc
or
dec
fistps
inc
int3
push
ret
mov
int
movsl
mov
adc
jne
add
lahf
cmp
ds
enter
pop
aas
push
pop
xor
add
scas
dec
scas
cli
jg
pushf
sub
sbb
fiaddl
rcrb
repnz
push
cs
push
jl
cs
adc
push
mov
ret
or
clc
cmpsb
lahf
add
cli
fisubrl
cmp
repnz
sub
adc
mov
in
decb
fiadds
push
lret
cmp
mov
xor
ja
adc
pop
pop
fs
xchg
push
shrb
sbbb
arpl
and
push
ret
adc
clc
jb
cmp
fcoms
xor
and
jnp
ds
xadd
cwtl
jae
hlt
add
or
mov
out
mov
pop
outsl
mov
mov
fstp
fidivs
ret
mov
cmpsl
mov
pop
or
ffree
pop
mov
xor
ds
push
out
mov
repz
cs
scas
mov
jbe
mov
xor
je
mov
push
pusha
mov
testb
gs
and
add
and
or
out
mov
out
and
je
pop
mov
or
sbb
sbb
test
mov
xchg
testb
xchg
cli
inc
jae
mov
decb
int3
mov
pextrw
stos
sub
sbb
divb
ret
lcall
sbb
sbb
jp
ficompl
ss
inc
test
xor
fisubrl
into
mov
sbb
sub
push
cmp
push
dec
xor
xlat
or
repnz
inc
pop
sbb
cmp
cli
cmp
sbb
mov
ljmp
xor
fcomps
cmp
cmp
pop
js
das
pop
sar
pop
xor
lods
test
cmpsb
addr16
les
stos
loop
clc
or
push
dec
inc
js
lcall
push
mov
dec
les
adc
int
mov
mov
sbb
adc
addr16
xor
addb
idivb
rcrb
mov
xchg
daa
call
das
and
xor
sbb
or
pusha
sbb
ljmp
scas
ret
in
sbb
or
movl
xchg
xor
fcmovbe
aas
cwtl
jne
xchg
mov
cmp
out
mov
push
pop
lcall
adc
ds
mov
inc
mov
lret
pop
mov
into
mov
lahf
push
cmp
scas
dec
add
leave
cmp
xchg
add
jp
iret
push
jb
mov
sub
cmp
mov
clc
aas
pop
sbb
adc
pop
enter
or
jb
out
rcrb
cld
ss
mov
mov
xor
popf
insb
ljmp
cmpsb
xor
adc
rol
mov
and
sub
out
out
pop
call
dec
mov
loope
mov
mov
dec
sub
aas
xchg
aam
mov
cmp
fs
mov
sbb
mov
adc
xor
inc
mov
mov
xor
fidivl
dec
push
lods
cmp
jg
fdivs
wbinvd
js
rcrb
inc
cld
out
ds
mov
movsl
out
rcr
sbb
faddp
cld
add
push
push
clc
lock
xor
std
add
mov
sub
cmovbe
pop
xchg
ljmp
cmp
into
push
mov
outsl
das
inc
mov
push
lods
xor
lahf
pop
fmuls
and
mov
add
or
stos
jp
xor
lcall
inc
enter
sub
push
mov
mov
sti
outsl
sub
mov
pushf
insl
adc
adc
es
fidivrl
divb
inc
or
sub
push
inc
ss
cs
mov
mov
scas
jle
mov
outsl
or
mov
cwtl
mov
gs
pop
xchg
lret
mov
jb
dec
hlt
xchg
xchg
sbb
push
clc
adc
add
enter
lock
rcll
lahf
sbb
test
adc
idivb
jle
push
data16
cmpsb
js
mov
mov
sbb
mov
ret
jo
mov
nop
mov
jbe
xchg
mov
inc
aam
nop
rolb
andb
adc
add
xchg
cmp
cmp
mov
cs
out
pop
js
add
int3
xor
aad
out
add
int
or
mov
sarb
mov
lret
jne
pop
scas
inc
dec
int3
or
push
cmp
jp
mov
in
popf
mov
mov
pop
rcll
pop
inc
mov
pop
pusha
lret
sbb
sbb
mov
stos
adc
xchg
mov
scas
lahf
jb
inc
stc
sub
cld
push
pop
sarl
jnp
into
jb
fsubrl
sbb
fcmovnu
jo
hlt
add
cs
out
enter
faddl
dec
pop
loopne
adc
cmp
rcrb
ljmp
push
mov
sbb
sbb
outsb
cmpsl
mov
out
ret
cli
or
daa
arpl
sbb
clc
pop
sub
cmp
cli
adc
sub
mov
fcoml
fdivl
stos
sbb
ljmp
pop
dec
in
out
int3
and
inc
pushf
mov
cmpsb
add
inc
fadd
mov
ss
jl
add
sub
or
negl
push
cltd
loop
sub
xor
mov
ror
mov
inc
mov
or
int3
push
xchg
arpl
mov
xor
lahf
mov
in
sbb
adc
repz
pop
inc
push
add
jp
sbb
or
jg
mov
mov
jbe
test
pop
sbb
ud1
popa
sbb
add
inc
cli
push
mov
mov
xor
mov
inc
pop
cwtl
mov
incl
nop
add
sbb
push
adc
mov
int3
mov
mov
enter
fsubs
into
lret
lods
shlb
add
fidivrs
sub
add
ljmp
ds
add
and
pushf
adc
mov
inc
inc
scas
lods
push
cmp
dec
dec
js
iret
outsb
outsb
cli
sub
mov
outsl
into
aam
push
or
and
pop
lock
mov
jb
repnz
push
loope
int3
or
lcall
fildl
sbb
pop
popf
add
fwait
push
sbb
xchg
jge
cltd
repnz
test
add
enter
stos
mov
aam
cmpl
sbb
mov
add
enter
aas
sub
sbb
bound
jb
ljmp
scas
cmp
adc
sbb
sbb
les
inc
fbstp
sahf
push
out
into
ljmp
enter
mov
nop
repz
ss
mov
rcrl
ds
or
out
jo
ljmp
xor
or
int3
rclb
mov
cwtl
sub
shll
insb
xchg
pushf
mov
movsl
xor
xor
arpl
xchg
int3
lock
fidivl
lahf
das
repnz
imul
scas
int3
pop
testl
push
ds
xorl
pop
cld
cld
clc
or
neg
mov
cltd
push
push
testl
in
inc
jl
mov
xchg
hlt
mov
mov
notl
aad
inc
js
xchg
mov
jno
push
faddl
clc
xchg
mov
add
mov
dec
mov
imulb
mov
sbb
aad
fbstp
push
in
shrb
mov
mov
xor
push
or
sarb
mov
adc
test
repnz
cs
cld
xor
add
fidivrl
cmpsb
lahf
sub
sub
out
rolb
push
mov
aas
xorl
test
xor
daa
jbe
add
std
push
dec
mov
xor
pusha
out
in
push
jp
sub
mov
mov
cmp
sahf
daa
popf
rcl
fisubs
or
fwait
dec
out
push
push
mov
xchg
lret
fs
in
jnp
mov
ficomps
mov
cmp
fildl
fisubl
sbb
mov
rclb
ss
imul
or
xchg
in
mov
nop
fnsave
subl
ret
sub
jg
lcall
mov
repnz
jns
test
cld
lahf
pop
cmp
push
les
cltd
dec
sub
jge
cmp
cltd
or
jb
mov
mov
enter
insb
icebp
divb
and
mov
adc
push
shl
mov
xorb
mov
ss
fsubs
cmp
mov
xchg
aam
xor
xchg
repnz
scas
leave
inc
cmp
mov
jae
in
push
cmp
daa
push
ds
pusha
jb,pn
fucomip
mov
jecxz
mov
out
mov
sarl
ss
sbb
pop
sti
rclb
int3
add
test
enter
pop
xchg
adc
lods
call
leave
mov
xor
mov
pushf
cli
repnz
mov
jno
loop
ds
das
arpl
xchg
push
jns
ds
or
or
or
xor
fisubl
mov
mov
dec
dec
jg
push
into
cld
push
test
adc
jmp
sbb
test
and
int3
fisttpll
sbb
adc
cmp
rcrl
pop
aam
sbb
dec
push
jo
decb
ljmp
mov
pusha
xor
jb
mov
adc
mov
scas
and
popf
xor
mov
xchg
ss
lea
jle
mov
xchg
mov
adc
mov
cmpb
mov
inc
add
filds
dec
xor
dec
mov
mov
pop
or
jb
pushf
lea
mov
ds
sbbb
inc
mov
cmpsb
lock
or
ds
mov
leave
xor
sbb
clc
rorb
sahf
scas
enter
mov
rolb
mov
sub
icebp
push
push
mov
mov
adc
or
enter
lcall
or
or
jne
mov
out
mov
mov
fldl
clc
cs
adc
in
mov
pop
xor
fdivrs
lret
cmp
les
pop
test
das
cs
dec
cmp
xor
pop
mov
ds
in
movsl
lods
out
adc
ja
mov
ljmp
lock
pushf
stos
add
rolb
icebp
jb
mov
lcall
lahf
xorb
mov
mov
fistpll
xor
adc
sbb
adc
add
and
test
lea
push
popf
sub
loop
sub
das
adc
mov
xchg
mov
sub
cmp
mov
push
mov
ljmp
push
push
push
loop
inc
int3
arpl
test
enter
mov
adc
mov
or
loop
subb
sub
cmc
mov
cmpsl
loopne
test
mov
mov
dec
sbb
sbb
ljmp
divb
loope
or
push
clc
cltd
cmp
out
cmc
outsl
dec
mov
mov
jb
add
std
outsl
mov
divb
xor
int3
shll
insb
add
decb
push
dec
jnp
sub
fisubrl
rcr
fdiv
push
pop
inc
cmp
cmp
ss
icebp
dec
adc
shrb
and
sbb
xor
outsb
xor
jg
xchg
add
dec
out
mov
pop
jns
bound
sub
ja
mov
loop
enter
inc
rcl
dec
repnz
sub
mov
push
cltd
aas
jae
push
out
inc
xchg
xor
scas
mov
xor
xorl
and
insl
je
xor
sub
inc
pop
and
push
scas
smsw
mov
into
mov
rcrl
sbb
fsubp
fdivrs
pop
adc
das
adc
add
cmpl
mov
idiv
cmp
fsub
jmp
add
in
addl
jp
lock
pusha
lret
out
shl
stos
dec
fcoml
scas
loopne
das
dec
fiadds
pop
les
add
push
xor
rorl
push
nop
add
xor
xchg
out
fsubrs
loopne
sbb
repnz
orl
mov
fsub
jg
shlb
jne
xor
mov
call
jge
push
sbb
pop
out
cmp
dec
mov
lea
mov
fiaddl
adc
test
fbstp
or
test
mov
hlt
stc
and
lods
mov
cs
dec
stos
push
jb
out
jbe
pop
jp
in
and
mov
bound
sbb
addr16
jg
ret
faddp
lods
inc
cmp
aas
xchg
sbb
sbb
add
fcomps
inc
adc
jp
fcmovu
pushf
sbb
pop
dec
xchg
bound
clc
lods
pop
pop
addr16
mov
xor
lret
add
imul
adc
in
sbb
ds
pop
or
movsb
lret
std
repnz
addr16
shlb
mul
pop
ds
mov
or
jnp
rclb
aaa
out
mov
cld
xchg
in
into
jbe
das
pushl
fadds
pop
jge
sub
loope
ds
jg
mov
lds
cld
enter
or
and
sbb
cld
push
addr16
mov
pop
addr16
pop
pop
idivb
out
repnz
jb
jle
cltd
ret
adc
ret
lret
push
ds
jo
subb
addr16
lods
and
ljmp
test
stos
les
rcrb
sub
sub
shlb
repnz
push
js
jle
mov
test
enter
cli
cmp
mov
loopne
into
rorb
lock
mov
data16
cmpsb
and
fsubr
sub
scas
sbb
daa
jae
mov
cmp
cs
adc
xor
cli
das
cmp
cmp
adc
fldenv
xor
add
mov
xchg
lock
cs
mov
jmp
movsl
sbb
xor
sbb
mov
mov
mov
sbb
mov
add
jnp
cltd
out
in
and
inc
xchg
pop
adc
cmp
lds
adc
push
bound
ljmp
jp
pushf
lock
xchg
stos
sbb
sbb
add
fisttpll
in
mov
rcll
cs
jbe
push
hlt
sbb
mov
mov
fildl
push
gs
mov
jg,pn
mov
mov
insb
push
cmpsl
adc
lock
shrb
fsubp
ret
sub
xor
lcall
adc
pop
or
mov
xor
mov
ret
fcoms
xchg
xor
bound
mov
hlt
push
scas
rcrb
sbb
ljmp
bound
xor
xchg
cld
scas
inc
ja
lods
jno
and
cld
lods
mov
shlb
add
scas
push
mov
mov
enter
fcoml
mov
in
mov
cli
mov
mov
jp
subb
leave
rolb
subl
pop
sbb
sbb
icebp
movsb
pop
mov
ret
enter
out
inc
push
push
scas
push
pop
jae
stos
mov
or
idivb
mov
mov
cmp
addr16
mov
cmpsl
mov
push
adc
addb
aam
fdivs
cmp
ss
bound
test
pop
idivb
adc
mov
cmpsl
add
push
mov
mov
or
adc
sub
lods
add
out
rcrl
fcompl
xor
sarb
adc
sarb
dec
iret
push
xchg
mov
nop
idivl
mov
cld
fisttpl
lock
in
xchg
js
mov
or
or
inc
outsl
addr16
dec
cmp
adc
xor
mov
inc
mull
pushf
xor
mov
hlt
out
mov
pop
mov
xor
mov
xchg
imul
in
fidivs
or
xchg
mov
push
js
ljmp
int3
std
stos
inc
rclb
leave
cmp
shr
cli
fisttpl
pushf
push
sub
adc
xor
or
ljmp
out
rcrb
adc
or
into
aam
cmp
mov
lret
scas
mov
scas
lods
jno
or
mov
push
outsl
mov
hlt
sbb
cmp
xchg
mov
rclb
gs
dec
lock
jb
jp
nop
push
add
pop
lods
xchg
inc
jbe
jmp
jae
sub
sub
popf
add
or
in
dec
daa
ret
rorb
fmul
inc
xchg
adc
into
pop
iret
cs
cmp
scas
push
addr16
jmp
inc
shlb
jb
fdiv
ss
push
fcmovb
test
sahf
push
xor
ret
push
ljmp
cld
out
push
lret
and
out
jmp
popf
mov
lahf
mov
or
sbb
sbb
cmp
inc
xchg
js
jp
lcall
mov
icebp
xchg
cltd
ds
or
mov
and
or
mov
cld
sbb
mov
loopne
int3
into
in
jnp
scas
sbb
adc
les
in
push
add
mov
xor
fwait
scas
mov
int3
pop
incl
push
xchg
jbe
ds
js
rolb
adc
push
adc
push
pop
ficoml
inc
push
clc
xchg
fists
cmpl
mov
out
xchg
xor
cld
pop
lods
popf
sbb
stos
out
test
dec
push
outsb
adc
inc
xchg
loope
mov
push
stc
mov
int
mov
cmp
not
cmp
andb
xchg
incl
mov
or
rol
push
pushf
and
scas
xor
mov
sarb
mov
cmpsb
rorl
cmp
pop
in
cmp
aas
and
ds
lret
ret
popf
addr16
cmp
lea
stos
push
stos
inc
jecxz
jb
mov
scas
mov
ja
mov
sub
lret
sbb
ret
push
push
ja
scas
popl
push
stos
adc
rcrb
inc
aam
pop
and
sbb
sbb
sahf
enter
stos
clc
add
mov
dec
lcall
fucomip
into
adc
mov
fcom
mov
push
mov
iret
add
mov
mov
repnz
jg
lret
cmp
or
push
push
or
data16
clc
lock
adc
out
lods
adc
or
xchg
xor
xchg
xchg
fisubrs
popf
add
hlt
push
xchg
aam
ljmp
orb
sahf
cmpsl
or
ret
enter
cs
hlt
jg
popa
out
lock
ss
push
sbb
popf
stos
ret
addr16
cltd
mov
inc
aad
cmp
int3
or
lahf
xor
cwtl
add
aam
sbb
cld
inc
mov
mov
adc
out
mov
popa
cwtl
add
mov
jg
leave
test
out
fdivs
sbb
cld
or
adc
scas
pop
daa
loopne
add
hlt
sbb
cmpb
aam
pop
lock
clc
push
push
mov
pushf
dec
hlt
ja
rolb
ljmp
sti
push
or
push
push
decb
xor
cwtl
mov
mov
in
xor
sub
enter
iret
in
push
aam
push
cmp
cmp
ds
into
or
add
mov
xor
pushf
lods
ret
into
fsubr
cli
inc
iret
iret
add
lods
fwait
pop
add
cltd
sti
ljmp
stos
stos
mov
cld
ret
ret
int3
add
mov
fwait
mov
sbb
xor
in
mov
mov
jp
push
jnp
clc
ret
lcall
out
cmp
sar
into
push
in
lret
scas
jns
ljmp
mov
sbb
xchg
fnstenv
sarl
mov
in
mov
and
push
cld
push
lcall
rorb
jmp
cmp
enter
add
ss
lcall
cmpsb
jecxz
mov
scas
sbb
xor
decb
sub
adc
sbb
push
or
and
jo
incb
mov
fmuls
ret
sbb
stos
inc
jo
xchg
test
clc
xchg
jbe
or
popa
or
pushf
dec
sar
cli
mov
lret
push
fists
ds
push
xchg
divb
dec
mov
xor
fcompl
xchg
fstpt
sbb
decl
stos
push
xor
bnd
pop
add
or
cli
xchg
push
mov
adc
sub
jg
cmp
dec
mov
sbb
mov
adc
les
lock
xor
ret
mov
xor
xchg
pusha
push
xchg
pop
in
dec
mov
cmpl
hlt
xor
ds
xchg
jbe
adc
or
and
inc
popf
mov
and
add
jo
inc
mov
mov
cld
out
stos
pop
nop
xchg
mov
addb
push
mov
popa
dec
and
mov
cmp
jp
mov
xor
push
cmp
inc
lods
dec
sahf
mov
mov
cmp
enter
mov
ss
stc
nop
sub
or
mov
aam
mov
pop
add
out
push
testb
orb
cs
dec
sar
shll
add
ds
add
sti
enter
mov
sbb
adc
sub
ds
add
inc
or
add
adc
sbb
daa
mov
add
scas
push
pop
lahf
push
das
enter
stos
int3
aas
in
lcall
sbb
divl
jp
jp
daa
lock
jo
xlat
hlt
cmpb
and
mov
ljmp
dec
jg
roll
nop
int3
mov
adc
add
incb
cld
repnz
pop
mov
pop
fnstenv
hlt
clc
jb
jg
or
inc
stos
fcomps
dec
mull
aam
out
stos
test
stos
test
sbb
xor
xchg
repnz
ss
push
clc
cltd
lock
stos
fwait
mov
or
mov
ficomps
mov
pop
cmpsl
fstps
adc
fcoms
xchg
jge
popf
push
push
not
mov
push
les
xchg
out
cmp
xor
hlt
and
pop
aam
movsl
outsl
cmpsb
fcomps
mov
push
into
in
inc
int3
adc
shlb
mov
shrb
cmp
jg
es
add
or
decb
add
jecxz
loopne
push
pop
push
icebp
iret
fdivrs
sub
enter
pop
dec
jno
or
or
repnz
js
pushf
pop
mov
clc
testb
lods
and
xchg
iret
fisubl
xchg
ss
sbb
out
rclb
add
xlat
aas
push
cmpsb
aam
adc
dec
aas
rclb
sbb
cmp
add
rcrl
mov
push
cmc
nop
int3
xchg
ret
xchg
test
cmp
fbld
sbb
mov
ja
sub
push
fsub
push
scas
xchg
cs
or
in
xchg
sbb
sub
jmp
test
enter
mov
mov
hlt
or
inc
fdivs
push
pop
and
mov
test
pop
lcall
adc
call
pusha
add
subl
cld
das
add
into
das
sahf
jg
pop
lret
push
inc
push
fidivrl
cwtl
mov
push
add
cmp
and
loop
mov
cmp
imul
jno
cld
loope
enter
jg
and
push
mov
pop
mov
daa
lret
repnz
and
daa
out
jae
ret
cmp
aas
pop
mov
push
jp
ret
rcrb
mov
cwtl
mov
add
inc
lea
xor
cmp
fstp
mov
ja
mov
push
aas
mov
enter
icebp
inc
mov
adc
sbb
scas
jb
jle
sub
xlat
outsl
shll
movups
adc
xchg
mov
ss
cli
mov
mov
hlt
xchg
dec
sbb
xchg
jae
jb
mov
fcomps
es
and
scas
arpl
lds
mov
mov
jae
lret
pushf
mov
clc
mov
ljmp
les
cli
pop
mov
pop
mov
addr16
sub
push
jb
mov
sbb
es
shr
mov
cs
lea
xor
int3
mov
or
pop
negl
pop
pop
mov
rclb
inc
cwtl
add
mov
out
out
adc
sub
ret
lret
cli
mov
js
sahf
mov
mov
ljmp
adc
xchg
mov
and
scas
lock
lret
js
xchg
xchg
ret
mov
neg
jg
sbb
sub
shl
iret
cld
adc
lods
hlt
push
out
xor
mov
sbb
ds
push
xchg
shlb
or
mov
lds
ret
add
xor
daa
cld
push
clc
addr16
sbb
pop
add
or
cmp
or
or
aam
faddl
fcoml
or
cmp
mov
push
adcl
xor
cwtl
xlat
cld
lock
shll
hlt
cld
fsubrs
ror
aas
cmpsl
ret
in
cmpsl
fcmovb
fidivrs
aas
mov
mov
pushf
xor
adc
in
add
rcrl
push
shlb
xor
cs
ffree
xchg
loope
sbb
into
sti
mov
add
push
imul
aas
fwait
out
adc
mov
mov
xorb
cmp
xchg
jp
bound
xor
sbb
mov
hlt
add
xor
ss
cli
cmp
mov
bound
inc
daa
inc
insl
push
sub
pop
inc
test
or
sbb
test
pop
pop
cmp
sbb
mov
pusha
addr16
mov
inc
outsl
mov
fisubrl
popf
aad
adc
mov
adc
test
negb
lret
adc
sub
out
fs
lods
nop
sbb
add
dec
cltd
push
clc
ljmp
mov
or
lea
add
mov
enter
clc
dec
cltd
or
push
lock
loopne
or
mov
stos
scas
shl
dec
cmp
or
sbb
aam
xchg
shrl
cmc
stos
xchg
and
pushl
cmp
xor
and
movsb
sub
fidivs
scas
loopne
hlt
push
ss
xchg
mov
gs
jge
dec
mov
mov
clc
fiaddl
es
xor
add
stos
addr16
xlat
dec
or
mov
gs
sbb
mov
leave
mov
mov
rcrb
scas
push
sbb
mov
or
lahf
test
in
ret
push
inc
cmp
push
pop
inc
dec
cs
xor
daa
jb
das
sti
jecxz
pop
sahf
cld
into
ss
push
aam
in
mov
stos
mov
sbb
int3
pop
push
decb
into
das
je
inc
test
jmp
pushl
fcoms
scas
sbb
scas
inc
mov
dec
and
repz
jne
xor
mov
arpl
mov
test
or
ficomps
andb
xor
outsb
neg
xor
xchg
leave
push
and
hlt
rolb
jb
fildll
mov
sbb
movsl
mov
gs
loop
adc
add
cwtl
int3
enter
xor
dec
gs
jb
outsb
insl
ret
mov
movsb
jnp
mov
mov
mov
push
stos
add
xor
xor
lods
inc
imul
ds
in
cmp
mov
and
mov
sub
mov
mov
jge
or
arpl
dec
adc
add
or
fiaddl
xchg
push
and
add
aad
ret
jle
hlt
or
or
xchg
lret
xor
fdivrs
das
into
int3
into
add
into
cmpb
ret
cli
into
cmpsl
testl
subb
mov
mov
mov
das
pop
lcall
xchg
sub
int3
popf
jae
cs
xchg
mov
fisubrl
in
int3
sub
ficomps
shr
lret
lcall
mov
inc
fadds
fdivs
lods
negb
mov
dec
cmc
sti
fwait
shll
mov
jg
mov
push
popf
xor
cs
nop
cmp
clc
fmul
xor
insb
lods
repnz
adc
dec
mov
cld
cmp
jbe
mov
xchg
adc
cmpb
adc
pop
sbb
mov
hlt
push
mov
mov
lahf
ss
cld
js
push
mov
int3
push
ror
nop
ret
dec
scas
pop
xor
or
jle
jg
stos
lret
sahf
lock
idivb
mov
cmp
xor
into
dec
lcall
xchg
mov
jno
and
and
lahf
cmp
mov
push
out
test
fdivrp
fcom
mov
jbe
mov
test
test
in
xor
push
cli
fdivr
inc
lock
xchg
jno
adc
adc
xor
lret
push
dec
sub
fwait
repnz
ret
mov
mov
lods
or
mov
mov
push
sub
xchg
sahf
add
push
int3
add
lods
fcmovb
xor
pop
cmp
cwtl
ret
fsubr
rcr
cmp
push
fisubrl
rorb
cmpsl
bound
mov
push
lock
push
sbb
add
fdivr
mov
lret
enter
xor
nop
xchg
or
inc
repnz
pop
xor
cwtl
rcl
mov
imul
clc
fistpl
clc
sbb
fsubrl
mov
out
mov
into
inc
add
mov
aad
shrb
aam
fcomp
testb
lret
add
xor
mov
clc
aas
mov
stos
filds
cld
cli
fistps
push
mov
or
cs
mov
mov
mov
mov
popa
stos
rcll
pop
sarl
ret
sub
ds
gs
add
or
add
mov
faddl
test
bnd
pop
mov
not
cmp
or
pop
rolb
add
in
jo
das
les
mov
movsb
repnz
and
inc
les
mov
rcll
ss
mov
inc
les
mov
push
sahf
mov
sbb
lahf
scas
enter
jg
fdivr
sbb
aad
shrb
xor
cmpsb
lods
das
sti
push
ds
and
push
or
stos
push
push
mov
nop
mov
or
jb
add
jbe
out
clc
lods
add
cmp
lock
scas
decl
daa
pushf
fsubrl
mov
cld
push
hlt
lcall
inc
mov
bound
adc
pop
adc
cmc
xor
xchg
test
fsubl
sub
cs
sbb
addr16
sti
inc
or
das
inc
add
mov
ss
loop
xchg
hlt
into
fwait
pop
push
sbb
mov
and
js
push
add
cld
xchg
xor
pop
insb
mov
mov
jl
cli
rcrb
cmp
enter
stos
adc
fimull
fisubrs
testb
mov
sub
push
xor
movsl
jg
aas
push
cmpsl
cmp
mull
mov
mov
aam
xchg
lahf
outsl
mov
ljmp
pop
xor
fldl
vmovdqu
push
mov
mov
filds
incb
push
test
das
jb
sbb
jns
pusha
lcall
popf
sahf
lret
lahf
pop
xor
enter
mov
xchg
test
movsb
nop
pop
xor
imul
mov
adc
xor
test
outsl
sub
mov
inc
enter
aas
add
pop
jno
ficompl
push
into
pop
inc
bnd
sub
adc
andl
fnsave
leave
pushf
pop
out
xor
fldlg2
jg
cmp
mov
arpl
les
sub
mov
mov
inc
dec
jns
out
jp
lods
add
shr
aam
iret
push
jae
adc
jbe
push
rol
int3
mov
test
add
mov
hlt
jne
mov
shlb
mov
lret
adc
repz
js
jo
sub
push
push
ds
mov
arpl
mov
cmpb
mov
inc
hlt
inc
mov
addr16
mov
push
imul
lods
push
mov
push
cmpsb
push
add
scas
cli
loopne
scas
mov
mov
incb
mov
sub
adc
mov
bound
lea
das
mov
test
lock
enter
add
push
outsl
xchg
jg
jo
cld
mov
cltd
inc
lock
scas
dec
sbb
fstps
add
inc
push
adc
nop
mov
add
dec
mov
clc
mov
sub
in
js
xor
addr16
xor
scas
mov
popf
push
lcall
cmp
xor
out
int3
ficomps
mov
xor
adc
mov
test
aam
lock
scas
or
or
xor
mov
hlt
cmp
aad
ficoms
mov
add
scas
out
push
push
push
scas
or
idivl
pop
lds
popa
lea
mov
xorl
js
mov
pop
mov
mov
lods
and
mov
repnz
adc
inc
stos
xor
std
mov
hlt
lea
and
mov
mov
test
jle
mov
rolb
data16
adc
mov
out
repnz
mov
inc
inc
adc
inc
arpl
test
in
push
push
push
movl
lcall
in
cmp
sbb
mov
icebp
pop
add
add
int
jbe
and
adc
hlt
scas
rcrb
add
inc
adc
pop
or
xor
jecxz
ljmp
pop
sbb
aas
and
jae
test
sub
mov
xor
adc
icebp
lret
fidivl
sahf
sbb
mov
imulb
sbb
add
mov
push
loop
mov
sahf
testl
mov
movsb
cmpsb
mov
xorl
add
cmpsb
push
cld
aam
jns
loopne
mov
sbb
repnz
out
cmp
push
lock
mov
andl
adc
popf
push
sub
lret
mov
mov
int3
fidivrl
into
fcomp
cmp
ds
fwait
lock
test
pushf
dec
sbb
adc
fldl
ds
js
movb
outsl
sbb
adc
xor
sti
rcrl
sbb
mov
andl
pop
lods
sbb
clc
cli
mov
push
xor
nop
and
or
fildl
add
aad
pop
mov
pop
div
fdivrl
lcall
sbb
fdivl
rorb
mov
repz
orb
or
mov
fmulp
mov
fidivl
add
sarl
rolb
mov
sbb
xchg
cli
mov
ljmp
out
and
ds
nop
mov
sar
push
mov
sbb
dec
sub
push
lock
add
aam
push
or
cmpsl
mov
pop
cwtl
enter
mov
xchg
and
mov
sbb
mov
pop
scas
cmp
sarb
pop
add
mov
cmp
push
stos
sbb
cli
inc
mov
xlat
inc
push
rcl
cwtl
cld
faddl
cs
inc
ljmp
jne
mov
push
rorb
jbe
or
in
ljmp
insl
ljmp
mov
or
xor
faddl
mov
lret
jmp
stc
ficompl
cmc
dec
sub
xchg
ljmp
or
inc
mov
push
ljmp
idiv
xchg
test
outsb
hlt
fwait
jno
sbb
pop
jecxz
mov
in
div
test
out
mov
sbb
ds
cmp
mov
stos
xor
or
fsubrs
mov
push
mov
sub
ret
cmp
xchg
shrl
stos
push
out
xor
fwait
cmp
cmp
int3
sarb
mul
sub
sarb
xchg
test
xchg
xchg
mov
es
adc
jmp
mov
pop
jb
mov
cmpsl
cmp
mov
les
mov
jb
xchg
es
into
and
ret
xchg
adc
adc
lahf
fcoms
clc
mov
inc
and
nop
cmp
mov
mov
push
or
xchg
arpl
ret
sbb
mov
lock
or
mov
ljmp
scas
dec
xor
xchg
out
push
sbb
xor
lahf
pop
stos
cld
xor
add
adc
aas
jg
lods
push
adc
dec
adc
movsb
jnp
fs
daa
jno
aam
jp
pop
xchg
or
lods
popa
fisubrl
add
out
popf
clc
stos
mov
xor
fbld
aas
call
or
aam
lods
movsb
mov
mov
int3
ljmp
xor
jbe
mov
rclb
addr16
inc
jns
int3
out
std
inc
adc
pop
push
mov
inc
out
lods
roll
and
cld
loopne
xchg
mov
push
xchg
jge
cmp
and
mov
out
aam
sbb
shl
dec
mov
scas
cmpsl
xchg
mov
sbb
lods
mov
mov
dec
test
adc
outsl
fiaddl
and
outsb
aad
lea
jnp
push
js
mov
int3
pushl
and
nop
dec
add
mov
lcall
inc
mov
cltd
mov
sub
add
cmpsb
ret
es
mov
mov
sbb
mov
in
xor
xchg
xor
xor
daa
arpl
cld
ds
inc
out
ficoml
mov
xor
mov
mov
push
in
fdivrs
ds
mov
adc
mov
flds
adc
mov
mov
ds
clc
lret
popf
mov
push
lret
sbb
mov
cmp
stos
jo
fistpll
cld
ljmp
adc
lock
imul
sbb
mov
dec
sub
or
xor
inc
xor
leave
pop
test
dec
mov
sbb
sub
sub
clc
sahf
mov
ret
adc
repnz
daa
sahf
ror
int3
mov
ret
xor
or
sub
mov
das
xor
mov
mov
mov
lahf
inc
mov
mov
movsl
push
ljmp
ss
xor
or
sarb
inc
hlt
popf
push
sbb
lods
lds
push
lret
push
push
popf
inc
sbb
mov
dec
adc
lods
sub
rcll
cmp
fcmovu
das
adc
or
mov
idivb
fstps
mov
mov
add
mov
ljmp
mov
test
push
or
minps
xor
fidivrl
lea
icebp
sbb
or
mov
and
clc
es
xchg
cs
mov
jecxz
les
enter
out
cmpsb
es
lea
scas
aam
push
push
adc
pusha
mov
lock
cmp
out
xchg
ret
fdivrs
stos
xor
or
push
mov
mov
fucomip
sbb
sbb
or
push
mov
mov
dec
xchg
outsl
xor
inc
jb
daa
iret
cld
jns
mov
xor
mov
jmp
jge
or
inc
adc
push
mov
popf
jmp
xor
or
xor
mov
cmp
push
incb
add
in
ret
mov
cmpl
decb
nop
mov
sbb
mov
cmp
mov
ds
lahf
out
call
in
sbb
fsubp
cmp
pop
das
or
popf
pop
cs
lret
mov
mov
add
lock
cltd
lret
or
ds
clc
das
pop
mov
xor
shlb
repnz
mov
mov
pop
leave
jp
cmp
push
ljmp
mov
or
or
rorb
add
sbb
lock
inc
adc
ret
pusha
or
xor
or
ss
adc
cmp
adc
xor
clc
mov
fwait
mov
push
rcr
ret
fdivl
mov
lock
xchg
cmp
add
cli
sbb
dec
xor
idiv
pop
outsl
or
in
pop
push
ss
push
xor
shrb
fists
stos
or
dec
rclb
jle
xchg
mov
lods
pusha
lcall
int3
movsb
pop
out
jne
xor
jnp
sub
lret
mov
sub
mov
inc
xor
scas
inc
stos
rorb
in
sbb
inc
rolb
jl
add
data16
sbb
adc
dec
xchg
jae
adc
imulb
pop
lcall
lret
daa
inc
push
cmpsb
adcb
adc
or
std
xchg
add
pushf
dec
cmp
pushf
ret
out
mov
jbe
mov
popf
decb
jb
push
fistps
mov
andl
lcall
mov
cmp
scas
lock
sub
mov
add
sub
jnp
loopne
sbb
dec
into
dec
repz
sbb
dec
fcomps
mov
adc
sbb
xchg
push
adc
ret
mov
test
shrl
add
dec
movsl
sbb
adc
fwait
push
aam
push
push
scas
and
push
ds
cmp
loopne
xchg
jne
shrb
addl
shrl
adcb
divb
xor
scas
jge
add
ljmp
mov
mov
push
aas
lret
push
push
and
pusha
inc
adc
mov
sti
dec
cmp
jp
testb
push
and
aam
jp
dec
bound
bound
and
pop
rcrb
push
scas
sbb
push
mov
aam
or
push
inc
decl
cmp
add
scas
mov
in
sbb
mov
les
test
xor
jp
xchg
in
sbb
lcall
fbld
or
fidivrs
testb
jp
scas
inc
fstl
jp
jbe
mov
and
adc
std
inc
mov
stos
ret
adc
adc
repz
and
add
aad
int3
popf
addb
adc
mov
sbb
mov
push
inc
arpl
mov
stos
adc
scas
xor
fimuls
enter
cmp
lcall
push
inc
mov
lock
xchg
sbb
fisubrs
and
pushf
aam
repnz
or
jle
and
add
mov
test
mov
jbe
rorl
scas
scas
or
aam
push
pop
cmpl
out
sbb
out
jb
test
shlb
xchg
lret
pop
xchg
cmp
out
sub
pop
mov
push
mov
push
inc
mov
push
in
mov
mov
cmp
int3
stos
adc
add
jp
cmp
xchg
ljmp
js
add
sti
outsb
or
cltd
inc
cmp
push
push
cmp
lahf
jo
ss
cmpsl
xor
insb
mov
cmc
cli
push
addr16
mov
pop
mov
jl
sbb
bnd
les
mov
mov
xchg
add
or
lahf
fdecstp
cmp
sarb
das
pop
mov
jb
adc
jp
or
aam
sbb
aam
ds
imulb
fpatan
mov
jecxz
cld
dec
sbb
ds
cmp
or
outsl
mov
jg
lods
mov
mov
decb
ss
ret
jmp
cmp
adc
cli
cmp
rep
movsb
fdivl
outsl
mov
jns
mov
add
hlt
or
movsl
sarl
pop
push
aam
mov
loope
lret
shlb
lds
les
jno
insb
stos
mov
or
adc
add
xchg
fsubrs
push
mov
div
inc
ficoml
jp
jp
jbe
popf
push
inc
ds
adc
cmp
sbb
push
test
xor
xchg
ljmp
and
or
ds
lock
cs
dec
cmpsl
inc
or
fsubs
cmp
lea
sbb
incb
aam
dec
xchg
mov
lahf
out
mov
push
cmp
out
mov
mov
sub
cld
scas
repz
mov
cmp
hlt
mov
push
fcoms
push
mov
jo
sahf
inc
lret
cld
jg
push
sbb
jb
sub
fdivrl
and
lcall
jmp
into
fs
ret
js
js
outsb
aaa
stos
cmp
repnz
clc
cwtl
lds
xor
or
push
gs
ret
xchg
fwait
gs
inc
loop
lcall
imul
mov
into
clc
cli
xor
test
jp
cld
sbb
push
sub
ss
cmpsb
lock
xchg
mov
aad
mov
add
inc
fidivl
ficoms
fldt
fwait
jg
stos
ds
add
push
mov
mov
jnp
mov
cmp
cmp
test
xor
mov
inc
cltd
movsl
adc
jno
sub
and
rorb
sub
sbb
jg
sub
xor
shlb
lock
jnp
mov
imul
push
xor
inc
cmp
cmp
stos
js
mov
cmc
sahf
or
enter
push
dec
lea
in
sbb
fstl
outsb
xchg
cmpsl
inc
das
fnsave
ret
dec
sbb
sbb
mov
sbb
push
repnz
mov
sbb
in
jbe
les
or
mov
mov
dec
pop
add
les
fdivrl
dec
xchg
mov
addl
xor
addr16
adc
mov
dec
inc
xchg
sbbb
rolb
inc
mov
xchg
mov
xor
cmpb
jae
loopne
jne
mov
aas
xor
stos
xchg
lahf
mov
ljmp
fistl
into
sub
push
dec
sbb
fwait
push
aam
xor
sbb
sbb
mov
or
fnstsw
out
fs
sbb
or
push
aam
mov
divl
add
mov
inc
cs
out
ds
cmp
or
push
xchg
mov
aaa
fsubrl
sbb
mov
cmp
jle
sub
jae
or
rol
pushf
imul
rorb
cmpsb
cld
sbb
adc
xor
fistps
aas
xchg
jo
lret
or
fwait
sbb
mov
xchg
cmp
mov
push
stos
mov
jno
sbbb
mov
cwtl
ss
mov
push
and
xabort
sbb
sbb
movsb
xchg
xchg
cmp
adc
mov
testb
mov
lret
ds
nop
pop
repnz
cmp
mov
cmp
sub
pushf
pop
enter
dec
mov
sbb
addr16
push
cmp
add
in
mov
daa
out
xchg
sbb
xchg
or
out
iret
push
add
sbb
cmp
sub
cli
jnp
ds
lock
or
int3
flds
outsb
cmp
push
out
add
jp
push
lock
addb
sub
push
in
xchg
xlat
jnp
rcr
mov
lods
ficoms
and
sub
mov
nop
push
inc
inc
inc
cmp
lods
sub
sbbb
cwtl
fucomi
or
jcxz
inc
stos
div
cwtl
hlt
mov
sbb
push
mov
cmp
int3
mov
adc
sub
or
ficoml
push
sbb
into
jo
repnz
mov
adc
clc
or
hlt
inc
mov
mov
xor
adc
cld
xchg
xor
in
or
enter
call
xor
lock
xchg
add
jno
mov
jbe
cli
clc
repnz
pop
mov
or
push
aam
and
loope
mov
mov
cs
mov
shl
sti
cmc
sbb
sub
mov
enter
int3
add
mov
cltd
push
lock
dec
push
cmp
stos
int
inc
and
jp
jle
sbb
push
ror
lcall
js
inc
xchg
xchg
adc
sbb
adc
testb
fadd
push
cwtl
rcr
cli
xor
add
in
repnz
and
orb
adc
mov
lcall
add
sbb
mov
mov
mov
rcr
aam
adc
lea
cld
cwtl
xor
dec
mov
mov
fistl
or
cmp
out
pop
aad
lock
mov
cld
push
dec
in
cltd
ss
les
repnz
push
test
inc
dec
sbb
scas
cmp
mov
mov
scas
cld
dec
mov
xor
clc
xor
movsb
das
pushl
into
cwtl
testb
add
push
dec
rorl
xchg
adc
mov
les
jnp
int3
mov
mov
xor
and
enter
loop
aam
xchg
stos
cld
imul
jp
test
cs
and
add
adc
mov
popf
lcall
ds
xor
sbb
enter
cmp
es
push
xchg
and
push
lret
push
mov
push
xchg
mov
ds
or
addr16
sbb
ss
jmp
mov
adc
sbb
out
jp
ret
fdivs
and
mov
scas
xchg
sbb
daa
mov
mov
jle
mov
sub
int
pop
xor
cltd
in
hlt
mov
int3
xor
out
and
pop
ss
roll
ret
sub
cmp
ror
fisubrs
lock
in
cwtl
lock
or
ret
nop
cmp
clc
int
fnsave
mov
fisttpll
ja
insb
fcompl
shlb
sub
mov
xchg
leave
jp
fs
and
cmp
push
stc
dec
sub
in
lods
ja
in
cmp
scas
test
adc
lcall
mov
scas
mov
fsubrl
dec
into
mov
ss
stos
aam
int3
nop
clc
fcomp
cmp
stos
lcall
and
outsb
shl
inc
shll
adc
sbb
push
stos
fcomip
mov
mov
mov
les
test
dec
mov
fisubl
push
ds
push
or
cld
push
mov
push
mov
and
sbb
xor
dec
dec
lret
aas
jle
add
push
dec
gs
lcall
mov
and
mov
lods
pop
inc
inc
mov
mov
mov
daa
jae
push
jb
xchg
imul
sbb
add
xchg
mov
fsubrs
ret
push
into
hlt
in
pop
pop
and
aam
add
mov
mov
cmp
push
mov
cltd
scas
cmp
cmpsl
push
cld
clc
mov
mov
xor
idivb
xchg
xchg
cmp
stos
scas
fdivrl
ret
cli
jne
jle
pop
loope
out
aam
push
ss
cmp
test
sahf
jge
cli
aam
sbb
int3
sub
or
and
jb
adc
pushf
xor
cli
into
decb
dec
inc
es
xchg
mov
fmuls
push
fidivrl
nop
stos
cmp
pushf
or
aas
imul
ficompl
ficompl
sub
or
fcmove
or
ds
mov
mov
addl
and
ds
ljmp
es
inc
ds
push
loopne
pop
cmp
jbe
jno
imul
scas
push
bound
fcoms
xchg
lcall
lods
data16
adc
loope
sahf
dec
in
fmuls
mov
cmpsl
gs
ds
inc
xlat
mov
and
mov
push
lods
jb
adc
pop
mov
popa
movsb
mov
xchg
icebp
sub
pop
jae
mov
daa
cmc
ds
testb
out
add
mov
pop
fcmovnb
cwtl
scas
fdivrs
repnz
stc
mov
add
lcall
aaa
cmc
xchg
sbb
iret
jns
hlt
cli
int3
cmp
movsb
jo
add
mov
or
xor
xor
cmp
into
push
fiadds
int3
fnsave
stc
ljmp
lcall
add
mov
sub
xor
pop
aad
outsl
ret
push
adc
jb
sub
or
mov
add
xor
ss
into
repnz
aam
mov
push
jp
dec
stos
data16
mov
mov
cmp
xor
xchg
sahf
out
mov
or
shlb
loop
jbe
lods
pushf
rclb
fadds
adc
cmpsb
cs
loope
or
dec
mov
ss
xor
xchg
repnz
push
ficomps
add
popw
xor
stos
dec
adc
lret
and
add
adc
add
push
mov
pusha
aas
outsl
xor
mov
and
rclb
sahf
sti
lret
mov
lcall
fdivl
fwait
or
sbb
dec
mov
mov
xchg
out
lahf
data16
fadd
or
rcrb
sbb
sbb
repz
cmp
mov
push
push
mov
repnz
loop
add
push
sbb
mov
repnz
mov
jmp
mov
add
out
dec
inc
xor
jns
jp
repz
repnz
xorb
int3
xchg
jmp
mov
add
cmp
xor
roll
lret
mov
mov
cs
cwtl
or
fsubr
mov
or
lret
shll
sarb
jo
pop
sub
scas
adc
ret
rcl
mov
cld
into
or
mov
mov
mov
bound
in
add
ret
popa
loope
cltd
adc
cld
fimull
int3
jp
mov
adc
aam
stos
dec
mov
add
mov
cmp
adc
push
jo
leave
cli
push
mov
cli
mov
sbb
out
inc
mov
sbb
push
loope
push
mov
mov
pop
mov
ret
push
or
mov
cmp
mov
shl
pop
les
fdivp
fsubp
xor
shlb
push
loopnew
and
ds
outsl
pop
fs
cmp
mov
roll
ficoml
xor
mov
jo
mov
hlt
xchg
push
xchg
push
lahf
pop
fdivl
fdiv
jecxz
xchg
rolb
jb
cmp
mov
ljmp
mov
lock
mov
rcr
or
lcall
inc
outsl
sub
or
sbb
rcrl
push
mov
inc
or
stos
daa
pusha
hlt
lret
shrb
pop
jg
lods
out
mov
lods
repnz
cli
add
addb
adc
adc
cwtl
mov
aam
xor
mov
cld
mov
dec
popf
scas
add
shrl
or
pop
jp
cli
sahf
in
enter
jne
enter
sub
mov
aaa
popf
push
mov
fmul
scas
lock
inc
cltd
icebp
xlat
fucom
mov
cld
das
jl
stos
cli
cltd
mov
fwait
int3
adc
adc
pop
fwait
scas
mov
push
mov
fs
mov
mov
and
inc
lea
outsb
sarb
cmp
shll
mov
cmp
push
mov
cmp
or
enter
jo
pop
mov
xor
jle
add
fdivp
bound
adc
pushf
mov
aam
cmp
mov
int
or
sbbb
push
lods
imul
jp
js
xchg
fcomps
cmp
adc
jp
mov
or
mov
cmp
movsb
fsts
pop
rep
fmuls
lret
mov
mov
jp
jb
sahf
loopne
dec
repnz
rcll
mov
lods
mov
cmp
divb
sarb
lods
rclb
outsl
jecxz
clc
daa
mov
jmp
mov
xor
icebp
xchg
pusha
mov
mov
or
pop
in
sbb
and
sbb
mov
fildl
xor
dec
lret
repnz
into
dec
orb
dec
cwtl
ret
mov
repnz
js
lods
scas
sbb
lock
ret
or
jp
mov
stos
push
push
outsl
xorb
adcb
shlb
lret
mov
out
cwtl
mov
mov
lcall
cmp
xor
adc
pushf
cmc
dec
lcall
aam
jo
inc
pusha
dec
repz
jb
fwait
into
cmp
pop
ds
mov
sub
scas
enter
mov
mov
mov
mov
hlt
int3
aam
stos
xchg
in
ss
icebp
out
push
inc
sti
mov
bnd
mov
out
adc
lcall
fmull
pop
rclb
hlt
or
dec
out
sbb
out
sub
cmp
nop
in
stos
or
push
lret
outsb
nop
fwait
fsubrl
adc
sbb
loope
fcoms
int
or
mov
jg
jp
repnz
xchg
and
pop
loop
push
xchg
fists
mov
mov
pop
das
add
cmp
inc
or
dec
cmp
out
dec
mov
mov
shrl
and
test
fistpll
sbb
mov
fsubrs
bound
iret
mov
shlb
shrl
inc
xchg
fadds
xchg
or
cmp
lahf
negb
adc
jmp
mov
scas
rcrb
adc
lods
scas
pop
fcompl
mov
lock
adcb
sahf
sbb
mov
add
adc
xchg
mov
popf
scas
cli
fdivr
sahf
popa
fdiv
sbb
mov
lret
aam
pop
dec
xor
ret
fmull
xchg
xorb
xor
mov
adc
xchg
ficoms
or
lcall
test
cld
nop
ljmp
and
cmp
mov
add
faddl
fsubr
push
or
mov
aas
insl
int
push
cli
mov
xor
ds
dec
push
pop
pop
imul
leave
fcomp
test
lods
aam
mov
inc
call
push
insl
or
call
cld
jo
jne
lret
pop
dec
mov
icebp
sbb
or
mov
add
sbb
mov
ss
jbe
les
inc
popf
fwait
in
adc
mov
lds
or
add
icebp
adc
pop
sbb
iret
int3
in
bound
in
push
aaa
mov
movsb
push
or
push
hlt
ds
sbb
add
subl
insb
test
addr16
and
sbb
clc
int
mov
inc
mov
decb
sahf
dec
cmp
scas
lret
in
test
lock
ret
or
les
inc
scas
leave
cmpb
sbb
scas
mov
mov
sbb
xor
les
sarl
mov
xchg
imul
or
mov
push
repnz
in
inc
mov
mov
outsl
aam
popa
mov
push
xor
pop
mov
mov
sub
mov
push
sbb
out
adc
sbb
mov
mov
push
ljmp
mov
addr16
or
sub
jo
add
push
outsl
ds
lock
outsl
js
lcall
mov
cmp
shl
scas
dec
hlt
mov
sbb
shlb
int3
cmp
aad
cld
jb
adc
daa
push
jecxz
mov
push
js
adc
pusha
fsubrl
enter
sbb
mov
ret
sbb
push
rcl
cli
mov
sbb
mov
incb
jl
nop
fsubr
mov
das
rcrb
mov
lods
jp
ss
cltd
adc
cli
pop
dec
add
cmp
lock
sbb
jb
fadds
add
fsubrl
cmp
push
add
popf
jle
shlb
in
mov
and
push
or
sahf
lods
ds
cmp
xlat
push
mov
cmp
mov
push
mov
les
mov
popa
js
test
inc
bound
fwait
xor
xchg
cmp
fstp
mov
mov
repnz
jb
inc
jp
jbe
cmp
fisttpl
pop
mov
mov
repnz
into
sub
jmp
test
stc
adc
push
lods
and
jae
mov
inc
into
lret
out
xchg
mov
scas
or
inc
or
rclb
in
cs
repnz
push
sbb
sbb
scas
fidivrs
mov
adc
int3
nop
out
sbb
out
mov
mov
cli
jb
add
and
jg
or
inc
scas
icebp
aas
out
or
fidivrl
mov
mov
xorb
sbb
xlat
ret
jbe
std
jb
adc
int3
int
adc
mov
push
jecxz
scas
or
jmp
mov
add
out
mov
mov
ret
sbbb
movl
or
adc
stos
cmp
rolb
dec
pusha
push
lcall
fsubl
aam
sbb
xor
or
jl
mov
add
cmp
out
clc
or
jg
pop
sti
repnz
cmp
adc
cmp
xchg
les
dec
xor
jle
push
sub
movsb
jno
jb
daa
negl
daa
mov
scas
jbe
dec
mov
inc
xor
inc
adc
mov
push
push
mov
into
cltd
dec
pop
mov
das
shlb
in
jb
adc
fmull
movsb
fiaddl
inc
mov
enter
repnz
into
ds
lret
or
push
adc
pop
addr16
cli
sbb
jnp
push
out
cs
mov
lock
push
mov
popf
add
cmp
mov
xchg
xchg
or
aad
mov
lcall
in
stos
fcmovb
imul
mov
fsubl
loopne
fdiv
fidivrl
mov
sahf
mov
mov
dec
fbstp
roll
jb
leave
mov
push
imul
jbe
decb
xchg
scas
adc
into
fwait
mov
mov
mov
pop
push
mov
ljmp
ds
cmp
les
fcomps
xor
add
out
ror
and
int3
les
mov
push
negl
mov
enter
ret
fdivrs
cs
repz
ds
daa
jp
mov
stos
lret
rcl
fstl
mov
aad
fldcw
or
mov
pop
hlt
pop
iret
fdiv
mov
hlt
fcompl
jo
scas
push
sbb
mov
aam
ficompl
es
fldl
adc
stos
sub
out
ss
pop
mov
rcrl
shl
aas
jae
add
lods
outsl
in
scas
push
fs
out
pop
jg
test
sbb
mov
mov
add
push
enter
or
clc
lock
outsl
imul
mov
das
lcall
inc
or
cmp
xor
sti
and
cmp
daa
xchg
lods
scas
in
xchg
push
pushf
mov
fsubrs
or
cld
inc
add
repnz
sub
notb
jbe
insl
decb
js
addr16
push
dec
pushf
mov
mov
jns
idivb
mov
das
xchg
cwtl
cmp
in
enter
dec
aam
sarb
idivl
jp
fildll
in
mov
scas
aam
daa
cmpsb
inc
ljmp
cli
rep
push
ds
andl
loopne
push
mov
push
popa
movsl
ds
mov
mov
or
pop
mov
loop
ljmp
aas
inc
add
les
fbld
into
push
mov
xchg
mov
push
pop
jmp
adc
fisubs
out
cmp
cmp
jg
inc
les
stc
push
mov
push
addb
mov
mov
mov
adc
ficompl
cmp
sbb
jnp
ret
xchg
into
or
int3
push
sub
jae
mov
mov
cmpsb
mov
xchg
ss
sti
ds
xchg
mov
call
push
cs
mov
mov
xchg
sub
sbb
in
testb
addr16
fiaddl
ljmp
cmp
xor
mov
rcr
cmp
cmp
mov
jp
jp
inc
jbe
daa
pushf
fisubrl
icebp
sbb
aas
adc
or
or
ret
out
jns
in
sbb
icebp
mov
mov
mov
faddp
inc
add
mov
mov
jge
fisubrl
into
addb
incb
idiv
fnstenv
dec
cld
ret
ljmp
lret
scas
cmp
sbb
xor
test
lods
ss
adc
add
mov
hlt
xchg
sub
movl
mov
cmp
movsl
lret
add
adc
mov
stos
xor
jecxz
mov
sub
adc
xchg
into
mov
hlt
ret
jns
lret
cli
push
in
jecxz
pop
adc
xor
mov
sub
or
into
rcrl
out
cli
ds
jb
enter
adc
mov
fcompl
cld
cmp
fbstp
enter
js
dec
ss
or
daa
out
and
cmp
ret
and
adc
ljmp
mov
ljmp
push
add
sbb
fadds
clc
js
lock
in
mov
mov
jp
jb
xchg
shrb
mov
ret
fists
cmpb
test
shrb
jb
push
mov
outsl
push
pop
sarb
mov
aam
popf
pop
hlt
int3
ss
in
xor
add
xor
inc
pop
inc
jb
cmp
mov
push
xor
jecxz
hlt
ss
addr16
outsb
and
cmp
or
sub
dec
sbb
inc
cmp
sub
daa
push
nop
push
fnstenv
out
jnp
and
rclb
push
sbb
rorb
xchg
cs
ficoms
daa
mov
lret
pop
xchg
or
cmp
sahf
pusha
or
xor
jg
pop
outsb
sbb
icebp
and
or
sbb
push
xchg
adc
xchg
shlb
stos
adc
sub
adc
jle
or
push
daa
mov
and
jp
pushf
arpl
cmp
enter
mov
mov
or
xor
xor
sbb
test
stos
mov
mov
xchg
lods
or
inc
out
jp
stos
add
mov
into
dec
das
push
cmp
repnz
in
call
adc
hlt
enter
mov
iret
rorb
jp
ljmp
xlat
sub
push
or
fmul
out
xchg
fimull
mov
cmp
push
jecxz
push
fidivrl
loopne
pusha
adc
inc
ljmp
and
mov
pop
jl
sbb
or
push
jb
les
aas
and
xor
add
jecxz
sbb
cmp
inc
popf
push
lock
inc
popf
movsl
sub
mov
psraw
mov
cwtl
divb
cli
movsb
sbb
aas
shlb
inc
rclb
push
push
inc
sbb
ret
cmp
mov
scas
adc
adc
scas
sbb
lock
nop
data16
ror
dec
cmp
push
add
fcomi
lret
mov
sbb
sub
mov
imul
loop
data16
pop
lret
pop
fnstcw
mov
enter
sbb
js
dec
jp
jp
cltd
mov
mov
mov
ret
sbb
inc
cld
inc
test
int3
or
into
mov
xchg
hlt
cmp
aaa
out
add
dec
pop
out
das
out
lds
inc
stos
push
out
jo
shl
push
jp
jp
scas
pop
mov
stos
sbb
mov
cmp
repnz
or
cmp
lods
ds
lods
push
cld
int
adc
nop
pop
mov
push
sub
xchg
sbb
scas
lock
fidivs
xor
hlt
in
sub
out
push
lods
mov
lcall
in
scas
pop
add
out
fsubs
int3
ret
mov
inc
outsl
nop
aas
pop
xor
stos
mov
mov
ss
sar
mov
repnz
mov
push
mov
inc
xor
mov
jmp
pusha
xchg
ljmp
xor
fcoms
cli
push
int3
mov
add
sbb
mov
frstor
and
fistpll
push
push
sub
mov
out
out
mov
call
dec
jp
cmp
pushf
sbb
mov
mov
shlb
cmp
cmp
xchg
dec
mov
and
cld
dec
mov
data16
pop
push
decb
cmpsb
hlt
outsb
clc
scas
enter
inc
xor
cwtl
sub
xor
xor
arpl
inc
lds
ja
incb
outsb
inc
add
xor
adc
cmpsl
xchg
jbe
mov
or
cmpsb
cmp
cld
push
sub
xchg
lock
ret
push
inc
adc
repz
adc
js
mov
sub
data16
mov
mov
cld
aam
les
jno
nop
sub
push
clc
push
scas
or
lds
aas
insb
loop
adc
fdivrs
cmp
sbb
push
out
dec
pushf
lock
fisttps
xor
fimuls
adc
mov
sbb
in
push
inc
clc
cwtl
out
mov
inc
mov
mov
push
push
dec
sub
xchg
mov
shll
hlt
xchg
loop
jbe
cmpsl
jnp
sbb
jbe
into
and
pushf
outsl
mov
fadd
sub
and
mov
push
gs
adc
int3
scas
int
mov
and
pop
jnp
sbb
in
ss
sbb
repnz
aam
shlb
mov
mov
inc
in
ss
hlt
cmpsb
cmp
inc
sub
adc
push
inc
out
in
sub
jb
inc
and
int3
sbb
sbb
inc
mov
xor
and
xor
sbb
test
addr16
testb
enter
add
sub
sbb
mov
aad
add
mov
xor
adc
and
xor
jb
adc
lcall
lea
sbb
std
stc
jecxz
push
lods
jp
or
sbb
out
fcmovnbe
scas
int3
lret
aam
ds
pusha
lret
sub
dec
add
repnz
in
les
fcomps
or
add
cli
push
sub
out
scas
xchg
mov
sbb
stos
fwait
out
xchg
aaa
lret
nop
leave
ss
jge
cmp
mov
repz
fidivrl
popa
repz
jnp
scas
inc
push
mov
jo
aad
dec
into
push
clc
xor
fidivrs
cmp
mov
mov
mov
ljmp
cmp
mov
lret
out
icebp
sub
pusha
cmp
inc
jne
js
ss
xor
jbe
push
add
subb
ljmp
jns
inc
aam
scas
out
popl
fstpt
mov
lcall
lcall
sbb
cmp
fmul
cs
int
cmp
pop
negl
lock
mov
les
pop
and
cmpsl
xor
fsubrs
push
mov
fcmovnb
mov
ds
je
push
stos
scas
push
sbb
mov
fmuls
scas
jp
xchg
fidivs
adc
addr16
icebp
xor
push
cmp
sbb
or
mov
mov
push
fisubl
aas
sbb
mov
mov
mov
inc
jbe
mov
xchg
mov
sub
dec
ret
pop
into
mov
into
int3
addr16
stos
popf
popf
mov
iret
aam
push
dec
cmp
mov
mov
push
fiadds
pop
ds
push
call
popa
jb
mov
mov
mov
jno
push
mov
add
andb
scas
mov
test
aas
or
fisubrs
ljmp
mov
rorb
out
inc
add
js
fs
or
sbb
sbb
popa
mov
mov
push
adc
int3
pop
push
aam
rdpmc
cld
lock
cmp
popf
xchg
add
mov
into
and
imulb
ret
push
cmp
push
push
push
or
sub
lock
cmp
cmpsl
xor
in
aas
aam
addr16
xchg
ljmp
sbb
mov
leave
scas
jb
ljmp
cmp
ss
push
add
inc
out
scas
or
ret
shrb
ficompl
sbb
cmp
fs
imul
xchg
lret
imul
pop
out
cmp
loop
aaa
idivl
dec
push
jnp
jno
cmp
cld
push
xchg
les
pop
pop
push
lret
push
jge
adc
test
dec
cld
jns
fildl
lret
mov
xor
sarl
xor
std
int3
dec
pop
dec
loopne
mov
std
rcl
inc
add
jecxz
mov
rorb
das
in
int3
push
add
mov
add
lcall
add
ret
mov
adc
ljmp
idivb
add
clc
cli
enter
mov
scas
cmp
into
dec
out
ljmp
jae
xor
pop
hlt
cs
mov
pop
lods
push
mov
stos
or
fsubrl
inc
add
lea
out
xchg
add
jg
aam
xor
movb
push
std
addr16
dec
fcompl
pop
cmp
push
lods
orb
ds
pusha
mov
mov
adc
cld
fcompl
dec
adc
pushl
mov
scas
mov
ljmp
mov
sar
cmp
mov
repnz
enter
fxch
xchg
cmp
clc
jne
xchg
lods
push
or
enter
sbb
pop
jb
adc
mov
ret
repnz
adc
adc
xlat
adc
inc
movsl
mov
mov
rcrb
adc
dec
pop
sbb
pop
sub
shll
cmpsl
pop
lods
lock
sahf
add
push
ss
push
scas
cli
xor
addr16
insb
scas
xorl
sub
mov
push
cmpsb
ds
jne
push
or
adc
int3
int3
or
fcoml
push
sbb
sbb
ret
aam
stos
lock
cld
mov
push
or
fidivrl
imul
cltd
cli
ds
adc
loop
or
sbb
ljmp
mov
pop
fs
adc
out
imul
ds
es
cli
ljmp
sahf
scas
mov
mov
adc
cmp
push
aam
stos
push
out
lock
dec
xor
inc
push
rol
mov
cmp
push
js
or
sti
loopne
ret
js
add
mov
hlt
mov
out
fnstsw
push
add
adc
or
mov
aaa
sbb
mov
clc
jae
jp
aam
daa
xchg
mov
mov
adc
lock
sahf
mov
cli
int3
mov
cmp
daa
sub
sbb
jp
sub
push
ds
xor
add
sub
popa
out
cmpsl
sub
mov
push
mov
sbb
add
jg
push
hlt
mov
push
divb
cli
jbe
lret
outsl
or
jp
mov
in
fisubl
in
shrb
enter
lret
in
daa
cmpl
fcoms
aad
sbb
bound
stos
jo
dec
xor
scas
jmp
rcl
out
sub
cmp
sahf
add
testb
sbb
push
fs
int3
sub
fidivrl
adc
or
cs
and
lret
mov
int
in
mov
into
mov
xchg
xchg
addr16
out
rcrl
fsubrl
hlt
push
adc
mov
lret
mov
sub
movsl
dec
pop
rol
loopne
js
cld
movsb
fwait
dec
les
jae
subb
ljmp
adc
mov
cwtl
in
hlt
out
push
into
lock
int3
repz
inc
out
ss
jno
scas
mov
mov
sbb
lods
fidivs
aam
popf
loopne
aam
int
sub
adc
cmp
cli
mov
mov
aaa
divb
mov
lcall
jle
imul
sahf
mov
mov
jno
std
mov
rol
mov
imulb
xchg
push
xchg
sub
ret
fimuls
rcrb
cs
lods
cmp
cld
jnp
jg
push
mov
push
pushf
add
pop
cli
sub
ljmp
cmp
mov
push
pop
mov
cmpsb
sahf
movb
or
lret
pusha
stos
xor
loope
sbb
add
cli
js
sbb
adc
mov
rcr
fs
stos
sbb
ss
inc
xchg
hlt
dec
mov
ljmp
or
cmp
pop
mov
sbb
pop
fsubrs
or
fildl
iret
in
jg
out
and
movb
nop
push
mov
sahf
mov
lret
cmpsl
int3
stos
mov
jnp
xor
cmp
nop
jg
mov
add
ret
je
in
sbb
mov
fisubrs
push
enter
imul
out
cmp
hlt
push
scas
dec
stos
fsubrl
shrl
adc
outsl
outsl
popa
scas
mov
jno
jne
mov
jp
sub
jo
or
les
pop
jle
outsl
jns
enter
mov
lret
cwtl
out
cld
gs
jmp
sbb
sarb
add
arpl
adc
push
sub
mov
stos
addr16
shll
lret
call
mov
adc
pushf
icebp
hlt
sar
fbld
xor
jb
jp
lcall
mov
lcall
dec
in
add
add
sbb
clc
fiadds
or
jmp
cli
add
cli
fimuls
xor
lock
dec
or
push
outsb
mov
btc
jne
mov
popa
scas
out
mov
fst
jmp
sub
in
dec
inc
data16
stos
loope
daa
scas
push
cli
inc
rclb
mov
lods
sbb
in
jbe
mov
ja
or
ljmp
sub
negb
or
mov
ret
cld
mov
mov
dec
xor
mov
adc
mov
pop
js
jno
insl
or
shl
addr16
jb
fsubr
fs
sbb
shrl
mov
pop
and
cld
aam
xchg
adc
xchg
popf
shlb
xchg
pop
dec
xchg
and
scas
cli
mov
enter
mov
ret
xchg
sbb
mov
sbb
int3
inc
scas
cwtl
sarb
mov
clc
xor
sbb
sbb
int3
or
into
fidivs
or
jge
pop
mov
mov
sbb
xor
aad
jl
jp
cwtl
ret
ficoml
aam
push
enter
movsb
push
mov
data16
aam
arpl
inc
je
out
mov
pop
or
push
int3
mov
stc
pushf
ss
mov
push
push
and
pushf
in
insl
cmp
sub
mov
cmpsl
movsl
push
rolb
mov
fadds
addr16
sahf
push
hlt
push
lock
call
fldenv
ret
mov
inc
xor
sbb
fsubr
sub
add
mov
loop
push
xchg
inc
nop
aas
xor
add
outsb
icebp
faddl
mov
mov
test
add
add
fcmovnb
fiaddl
mov
mov
mov
mov
lods
lock
sbb
scas
xchg
and
lret
push
outsb
pushf
cs
cmp
and
adc
sbb
add
movsl
sahf
ds
enter
shlb
cli
stos
lea
push
mov
cmp
lret
cs
rcr
call
sub
lret
mov
adc
push
inc
pop
lods
in
enter
mov
shrb
fimull
mov
sbb
cs
aam
adc
ret
adc
pop
add
sub
cmp
mov
lods
jbe
repnz
stos
das
push
mulb
mov
mov
or
adc
push
cmp
fsubr
push
out
lret
mov
mov
mov
inc
dec
cmp
jp,pn
dec
bound
cmp
fiadds
pushf
add
sbb
xchg
cmp
adc
inc
imul
cmp
inc
dec
mov
mov
ljmp
rcrb
add
mov
addr16
ss
outsl
mov
push
add
cmc
cmp
push
mov
or
mov
cmp
repnz
xor
in
add
mov
or
push
add
pop
jns
pushf
out
cmp
fdivl
clc
into
inc
dec
fmull
int3
ds
or
sub
jp
out
cld
add
sarb
fsubrs
hlt
mov
pop
xor
out
decb
push
lock
push
and
mov
arpl
les
out
loopne
mov
dec
cmp
stos
icebp
filds
pop
or
dec
or
mov
cmp
shlb
jbe
testb
arpl
lahf
cmpsb
rcrb
clc
and
cmp
aad
push
xlat
jp
cmp
sub
and
cmp
imul
stos
addr16
mov
lock
adcb
mov
lds
test
loope
sbb
cmpsb
cld
sub
mov
dec
ljmp
mov
inc
out
in
imulb
jcxz
add
pop
add
cltd
cli
cs
inc
cld
pop
push
repz
out
xchg
mov
clc
sbb
sbb
xor
cmp
cmp
rcrb
mov
testl
scas
shlb
enter
adc
addr16
aam
jb
jg
add
hlt
push
insb
sbb
adc
push
adc
push
gs
outsl
insb
push
hlt
scas
mov
adc
popa
mov
fucom
add
or
sub
inc
cli
xor
xchg
in
push
push
idiv
lret
push
xchg
sbb
adc
cmp
jb
pop
jg
dec
dec
rolb
shrl
aam
out
addr16
push
sub
out
int3
movsl
add
sbbb
in
add
add
repnz
sbb
xor
outsl
dec
jno
xchg
xor
xlat
outsb
adc
aam
pushl
ds
sbb
jbe
xchg
jnp
repnz
or
adc
addr16
nop
lret
dec
jns
sub
push
jbe
mov
cli
sub
cs
or
mov
stos
data16
addr16
mov
orl
mov
pop
sbb
decl
cmpsl
cmp
push
jns
int3
lret
sub
lret
jmp
int3
pop
or
or
mov
xchg
dec
int3
add
push
in
ret
jne
push
repnz
into
bnd
int3
inc
pop
jnp
jg
adc
jp
or
test
call
and
ljmp
call
out
sbb
inc
xor
fisubrl
int3
mov
notb
lods
sbb
and
xchg
stos
shrl
mov
sub
ss
outsl
sub
fldl
mov
cld
cmp
stos
inc
add
cmp
stos
repz
pop
adcl
fidivrl
push
adc
and
loop,pt
cwtl
sub
jg
mov
in
mov
icebp
mov
fnstsw
cld
or
push
outsl
sub
in
ss
adc
popa
fcmovne
push
je
fadd
std
ss
xor
shlb
and
sbb
repnz
mov
int
sbb
inc
cmp
mov
push
mov
inc
mov
sbb
dec
ljmp
mov
dec
lea
call
or
inc
or
lods
inc
push
cmpsb
push
nop
repnz
inc
jmp
pop
in
mov
pusha
rolb
les
cld
and
hlt
into
cmp
mov
scas
ds
aad
fwait
cmpsl
aam
ret
inc
add
adc
sub
hlt
pop
test
ss
int3
dec
popf
cli
mov
mov
pop
incb
mov
mov
rol
out
adc
or
in
add
addr16
xor
scas
hlt
nop
aaa
sbb
divb
ror
fdivl
adc
clc
pusha
or
jp
mov
or
das
cmp
xchg
fdivrl
lret
stos
jecxz
or
ss
cltd
mov
cmp
test
cmp
or
jnp
mov
jg
jbe
mov
inc
jp
les
or
out
sahf
or
shlb
xor
jo
adc
mov
sub
sbb
test
cmp
repz
rcr
jne
adc
pop
ja
in
fisubrl
lock
sbb
jbe
pop
mov
add
jg
movb
hlt
rorb
mov
scas
dec
jae
nop
ss
push
add
les
mov
sarl
loopne
notb
dec
clc
repnz
cmp
push
gs
stos
xor
fnstcw
xor
into
xchg
add
or
and
dec
or
dec
rcrl
cli
xor
add
out
or
cld
pop
gs
jg
jo
mov
ret
js
adc
lods
lret
push
ljmp
push
scas
adc
or
mov
or
pop
push
jp
andb
int
call
mov
push
scas
fstl
dec
jg
hlt
fbstp
cld
pop
clc
or
stos
or
sahf
repnz
ljmp
scas
les
xchg
xor
lret
jge
sbb
fbstp
sbb
jg
fidivl
addr16
xchg
mov
shl
sahf
sbb
fld
xchg
and
shrl
mov
mov
xor
xchg
add
lret
fbld
dec
or
stos
cld
jg
push
lods
push
rcrb
popa
testb
gs
clc
cmp
sbb
neg
xorl
push
hlt
xlat
push
adc
cmp
enter
jb
adc
decb
jle
cld
cmp
ljmp
int3
ret
pop
add
mov
data16
stos
or
insb
cmp
repnz
jne
cli
pushf
sbb
cmp
jp
push
fisubrl
mov
mov
adcl
mov
mov
in
scas
mov
enter
and
sbb
enter
lea
jmp
clc
les
cmpsb
pop
xor
add
mov
fstp
adc
sbb
rolb
jo
fmull
cltd
imul
rorb
ss
mov
xchg
fstpt
xchg
lods
cs
ret
js
dec
imul
call
movsb
mov
mov
cmc
rclb
sbb
enter
jne
ret
into
pop
into
xchg
xor
sub
out
mov
sbb
jg,pn
mov
push
ds
fcoml
xchg
push
ds
push
hlt
mov
lea
cmp
ljmp
subl
mov
adc
mov
dec
jg
push
hlt
mov
add
and
or
jp
xchg
icebp
fdivs
push
jne
add
jo
mov
and
mov
js
sahf
notl
out
adc
cmp
add
push
fsubr
sub
sub
sbb
add
outsb
cmp
movsb
mov
jne
popf
scas
sub
mov
decb
sti
mov
add
fstl
shrl
ss
push
mov
lods
lock
xor
push
cmc
ss
loope
or
popf
xchg
add
mov
push
mov
pop
mov
add
repnz
ds
mov
cs
and
push
int3
addb
cmp
pop
clc
stos
push
jnp
sbb
sbb
mov
cwtl
cs
incb
lock
mov
mov
outsl
and
or
ss
bound
pop
push
xchg
les
iret
fcoml
pop
lock
call
je
inc
or
or
push
pop
adc
nop
cmp
movsb
into
mov
add
cli
mov
jg
mov
xchg
repnz
sbb
ss
cmp
cld
out
push
hlt
sub
mov
mov
repnz
daa
and
inc
cltd
adc
add
fmuls
add
sub
xchg
ds
hlt
inc
xor
push
notb
mov
sub
test
lcall
arpl
sbb
push
in
add
scas
sub
lea
sbb
push
add
mov
orb
popa
fsubl
dec
mov
mov
cli
clc
mov
adc
shrl
lret
dec
hlt
test
inc
cltd
stos
les
jecxz
in
lods
mov
mov
sbb
cmp
notb
and
mov
sar
xchg
jns
lods
mov
push
insb
pop
mov
ds
into
inc
aam
imul
jp
insb
jae
xor
pushf
sub
cld
bnd
dec
inc
jo
adc
outsb
fwait
test
jo
adc
outsl
movsb
aas
daa
movsl
hlt
out
bnd
fadd
mov
cli
sbb
push
int
lea
lcall
mov
push
imul
mov
jecxz
pop
push
mov
mov
aam
push
hlt
js
aas
xchg
cld
outsb
lods
push
addr16
stos
ljmp
inc
jp
and
add
xchg
pop
fsubs
dec
mov
scas
or
aas
fcoml
push
jb
dec
jbe
sbb
xchg
cmp
or
in
dec
repnz
or
xchg
lret
mov
cmpsb
mov
dec
out
mov
decb
outsb
into
lods
push
je,pn
inc
mov
cmc
cmp
repnz
scas
sbb
out
mov
lret
xchg
mov
cltd
cld
enter
int3
out
add
push
inc
mov
popf
neg
into
out
or
mov
sbb
xor
rcrb
aam
mov
add
scas
mov
push
xor
and
mov
push
cmp
fmull
cmp
xor
stc
js
and
push
inc
push
adc
and
cmp
or
or
sbb
addr16
and
mov
push
pushf
mov
dec
sub
cmpsb
lahf
js
mov
fidivrl
cmp
out
add
jp
mov
test
sub
stc
imulb
mov
adc
mov
ret
push
into
cmp
pop
loop
lret
ret
sbb
enter
xchg
inc
xchg
sub
clc
xchg
stos
mov
xor
add
adc
shlb
jg
loopne
pop
sbb
jg
ss
xchg
xor
jg
add
mov
imul
fs
xor
pop
adc
jg
xor
insb
cmp
and
and
pop
dec
xor
imulb
sti
fmuls
mov
dec
sbb
not
enter
fistps
pop
sbb
fucomip
ror
int
and
decb
ret
adc
idivb
cwtl
popf
imul
insl
sub
mov
push
xorl
addr16
add
scas
std
push
popa
sbb
push
mov
cmp
push
out
or
sub
or
scas
lods
cli
push
jb
jp
mov
mov
stos
sub
jbe
or
es
daa
xor
mov
mov
data16
cmc
push
mov
mov
xor
xor
inc
or
mov
loop
movsl
and
in
push
xor
into
in
cmpsl
mov
lcall
lret
xor
xor
scas
or
clc
sbb
lahf
jbe
rol
out
fcompl
ss
std
movsl
fimuls
adc
xchg
scas
jecxz
fisubs
adc
push
pop
inc
jb
shl
bound
or
mov
mov
fsubrs
outsb
lret
mov
enter
mov
stos
scas
ret
leave
hlt
pushf
and
cmp
or
mov
xchg
mov
outsl
mov
sti
scas
inc
mov
fwait
shrb
adc
test
mov
push
out
test
and
cwtl
add
into
int3
sbb
fwait
cmp
fisttpll
fdivp
ljmp
leave
xchg
scas
mov
test
cld
add
mov
nop
sbb
xor
mov
mov
xor
xor
xchg
mov
mov
cmpl
add
mov
out
bts
out
mov
int3
sbb
popf
dec
cmp
xchg
mov
faddl
fmulp
xor
dec
out
mov
enter
mov
cmpsl
stos
or
fcmovbe
mov
inc
paddd
adc
sbb
cmpsb
mov
push
adc
js
add
jo
testb
pushf
sbb
les
stc
add
ds
adc
in
outsl
daa
mulb
cmp
sahf
cld
add
or
iret
lods
ja
inc
mov
jg
mov
push
ds
fbstp
sbb
jb
or
out
mov
mov
pop
push
jno
dec
cli
cmp
scas
les
andb
mov
fimuls
xor
int3
hlt
xlat
dec
cli
lock
dec
fiaddl
mov
fiadds
in
out
les
jb
add
jo
xor
xor
mov
lock
ljmp
or
mov
fwait
inc
fdivr
fisubrl
sti
mov
mov
mov
aaa
dec
ds
lods
cli
les
add
lock
push
cmp
hlt
sahf
lods
stos
add
sub
pusha
in
sarb
shlb
or
cld
push
orl
or
notl
lret
push
sbb
push
sarb
xchg
les
lods
int3
inc
leave
pop
insl
insb
xor
xor
push
ret
mov
mov
xchg
lock
jb
addb
fcomps
iret
push
mov
mov
addr16
popa
or
out
or
mov
or
shlb
jb
in
or
es
or
int3
xor
adc
jmp
in
repnz
cld
in
lods
mov
or
divb
and
cs
xor
repnz
xchg
cwtl
jge
push
mov
daa
sbb
stos
mov
add
mov
or
or
in
scas
xchg
outsl
xor
div
add
inc
test
or
imul
sbb
ljmp
mov
in
sbb
push
les
mov
ds
or
jp
mov
test
cmp
push
outsl
cltd
pop
fcom
pop
int3
adc
xchg
jae
pop
cltd
stc
enter
clc
add
sbb
inc
fiaddl
fwait
mov
mov
push
aas
cli
and
lret
mov
dec
pop
dec
rcr
pop
call
inc
add
nop
movsb
sbb
pop
adc
mov
dec
ret
nop
scas
push
cmp
subl
popf
or
mov
insl
push
cs
popf
pop
mov
adc
jne
pop
push
pop
push
cmp
insb
div
mov
int3
inc
mov
mov
iret
sbb
adc
out
leave
jp
jo
cmpsb
loopne
cwtl
cmp
mov
mov
mov
push
repz
xorb
loopne
lret
mov
or
out
push
fiadds
not
out
ret
add
sub
sbb
fidivl
cld
xlat
mov
add
fsubrl
aad
int3
repz
fldl
sbb
jmp
sub
xor
mov
lret
xchg
fwait
push
stos
and
mov
ret
adc
into
mov
mov
cmpsb
fdivr
push
rorl
fwait
mov
outsl
xchg
scas
or
into
lods
add
push
ss
lcall
ror
push
lods
cmpsb
jp
ljmp
aad
je
sub
stos
lods
add
clc
lock
cmp
mov
dec
xchg
add
stos
enter
ret
or
lcall
imul
ret
sbb
scas
mov
out
out
xchg
or
stos
push
push
int3
scas
xchg
mov
std
add
adc
sub
shlb
lret
movsb
adc
mov
nop
push
mov
add
mov
fcmovnbe
fsubrl
mov
div
mov
das
clc
dec
mov
push
int3
lret
jno
adc
jp
bound
mov
push
pop
xor
jno
sbb
sub
adc
into
pop
mov
adc
imul
orb
adcl
hlt
dec
adc
dec
adc
lret
add
mov
xlat
shr
aam
and
inc
ds
jo
data16
push
add
add
fisubl
into
pushf
hlt
in
scas
sub
cmp
pop
iret
adc
mul
ret
push
aas
mov
push
out
jns
sbbb
sub
adc
xchg
insl
mov
adc
repnz
scas
lock
mov
inc
push
cmp
mov
cmp
int3
mov
jns
sbb
adc
sbb
jp
fdivrs
and
cltd
cs
pop
fcompl
mov
lods
add
mov
xchg
es
xchg
aas
pop
mov
mov
add
ret
or
mov
xor
or
inc
xadd
cmc
mov
aas
pop
out
fcmovbe
ljmp
mov
sbb
pop
pop
xchg
xor
xor
repnz
xchg
jg
es
push
mov
ror
xchg
xchg
into
xchg
test
ficompl
pop
adc
mov
fsubl
mov
push
int3
ljmp
push
mov
push
fisubs
adc
add
stos
ljmp
xor
in
rcrl
adc
pop
push
aam
sbb
fidivl
xchg
cmp
push
sbb
sarl
jo
test
cmp
ds
ljmp
add
ss
add
scas
loope
enter
jl
imul
sub
ja
ljmp
inc
xor
enter
jne
mov
mov
lea
xor
xchg
adc
mov
adc
mov
stos
push
lock
outsl
inc
adc
jo
stos
cmc
mov
ficompl
or
mov
cmp
ss
test
movsb
lods
orb
scas
cs
sbb
hlt
mov
push
int3
xor
rolb
xchg
inc
jecxz
and
cmp
push
aaa
out
lea
or
sti
xor
dec
inc
sbb
cmc
mov
ljmp
sbb
cmp
or
or
mov
jge
sbb
pop
lods
xchg
insl
xor
mov
repnz
into
adc
sub
popa
stos
gs
pop
push
inc
or
loope
nop
sbb
push
pushl
mov
jb
cmp
xchg
mov
pop
xor
ss
xor
mov
in
gs
push
or
test
xchg
cs
cmp
pop
notb
mov
test
out
loopne
xchg
ss
inc
fsubl
jecxz
lods
mov
add
and
loop
cmp
jmp
mov
gs
cmc
jp
mov
cmp
cmp
fistpll
repnz
int3
mov
enter
fsubrl
mov
add
adc
orl
add
loop
out
ds
leave
aad
ret
adc
and
jbe
lret
data16
add
ljmp
cmp
mov
adc
add
push
rorb
mov
push
jg
out
hlt
call
sbb
or
adc
xorl
loopne
cs
bound
sbb
fdiv
enter
aam
sub
lods
mov
pop
lret
negb
dec
sbb
or
cli
fs
shrb
lods
mov
scas
into
out
in
mov
out
fidivl
mov
or
mov
push
pop
jb
sub
mov
xchg
xor
ret
sbb
push
sbb
lea
scas
mov
decb
lahf
rcrb
fcoms
xor
neg
mov
mov
dec
mov
pop
or
push
mov
bnd
mov
lcall
add
je
add
jg
mov
les
cmp
pop
or
das
push
push
cli
enter
lock
jp
scas
ret
idiv
repz
aas
adc
or
adc
jo
jp
sub
jbe
test
jne
sbb
mov
push
and
pop
bound
pop
out
out
mov
mov
or
repz
aam
pop
sbb
scas
xchg
subb
mov
cmp
push
and
cs
negb
jno
cmp
in
test
repz
fdivr
leave
pop
les
dec
lret
xlat
cmc
fcomip
lock
leave
inc
les
pusha
aam
stc
mov
or
push
iret
xor
lret
into
mov
int3
lock
cwtl
fisubrl
pop
scas
dec
cs
cltd
xor
or
int
xor
mov
fbld
sub
cmpsb
sbb
fadd
ds
int3
jnp
or
fadd
loop
mov
sbb
sub
xlat
in
scas
out
cmp
loopne
test
fdivl
add
sbb
negb
repz
js
js
and
fdivrl
ret
es
xor
add
mov
pusha
mov
push
test
ret
stos
fstl
add
hlt
fistl
or
out
sbb
add
sbb
push
jge
ljmp
and
scas
fistps
or
mov
mov
arpl
rcll
mov
iret
mov
adcb
and
or
push
xchg
xchg
enter
fsubr
cmpps
mov
mov
cmp
adc
xor
das
fwait
add
fistl
jg
loope
cmpsb
roll
push
bound
adc
lret
adc
adc
xchg
xchg
mov
sub
mov
repnz
shlb
push
xchg
mov
xor
adc
fmul
ds
scas
mov
add
add
jmp
pop
mov
push
mov
cld
or
mov
mov
aas
pop
and
add
fcomip
cmp
sbb
decb
jp
leave
cltd
xchg
mov
mov
jbe
lcall
fistpl
cs
int3
in
jae
xchg
ficoml
call
xor
nop
pusha
push
out
sub
pop
icebp
adc
clc
add
mov
cmp
fsubl
add
out
and
push
and
cltd
stos
or
cmp
add
lahf
lods
mov
out
enter
loopne
add
push
mov
or
adc
ss
ljmp
gs
sahf
insb
fadd
clc
loop
pop
inc
lock
cmpsl
or
lods
mov
shlb
fdiv
dec
das
dec
mov
jne
mov
sbb
lods
cmp
sub
arpl
add
cmp
xchg
adc
scas
sbb
lret
mov
mov
cmc
xchg
mov
or
lods
mov
mov
dec
cmp
or
sbb
mov
or
aam
inc
ss
shr
das
mov
jnp
ljmp
mov
hlt
das
shrb
stos
sbb
push
push
xor
les
rcll
jbe
enter
push
lret
inc
push
inc
shlb
xchg
mov
pop
sbb
negb
add
and
cli
test
add
fmulp
int3
movsl
mov
out
ret
fsubl
sahf
stos
sbb
stos
cli
jne
std
aaa
cmp
mov
push
mov
sbb
push
sbb
ret
into
xchg
mov
and
jg
sub
push
mov
pop
sbb
scas
outsl
lock
pusha
xlat
mov
cld
push
das
fmul
mov
xchg
sbb
cs
aad
lret
fwait
push
shl
dec
xor
jo
jb
jbe
rclb
sub
shlb
iret
int
jle
jae
cld
adc
enter
sbb
lret
cmp
shrb
sbb
or
out
mov
divb
cmp
repz
pushf
data16
mov
pop
std
mov
mov
call
out
or
adc
cwtl
stos
xor
or
sarb
ret
lea
loope
xchg
cltd
push
ret
ror
es
push
jge
pop
sub
pop
sbb
pop
add
pop
negb
adc
sbb
adcb
mov
or
cmp
scas
jbe
aas
or
repnz
push
ljmp
inc
mov
sbb
cmp
add
mov
pop
xchg
and
fadd
add
jae
or
dec
outsl
or
mov
pusha
mov
xchg
sbb
pusha
add
fs
aam
aas
xor
in
adc
fwait
adc
clc
out
push
xchg
les
sbb
or
ror
out
imul
and
sbb
dec
cs
scas
adc
cmp
aad
cmp
pop
test
cmp
cmp
and
mov
cmpsl
js
rolb
lahf
dec
jp
ds
inc
fdivl
divl
and
adcb
insl
cli
fsubr
xchg
cltd
mov
lcall
mov
pushf
inc
cs
rclb
subl
rorb
mov
in
pusha
push
data16
cmp
or
cmpb
cmpsb
xor
mov
push
add
lock
mov
xchg
clc
cmp
aas
and
cmp
dec
cmpsb
sbb
nop
mov
pop
repnz
mov
dec
xor
jg
xor
mov
sbb
repnz
mov
lods
push
ret
add
nop
mov
cmpsb
rcl
rcl
lods
addr16
ds
in
fs
ret
xor
into
xor
adc
mov
fldt
out
mov
fdivrl
movsl
and
mov
sbb
or
mov
int3
scas
mov
out
jle
add
xchg
mov
push
icebp
addr16
fstl
push
subb
mov
scas
cmp
notb
stos
leave
jb
cltd
push
mov
orb
cld
adc
rolb
xor
divb
out
les
mov
adcb
dec
ljmp
je
sub
lds
add
pop
inc
sbb
addl
cmp
xchg
mov
xchg
shrl
dec
lea
lods
scas
xor
push
ds
push
imul
add
mov
in
jnp
jb
jb
nop
pop
mov
xchg
mov
sbb
aas
mov
dec
mov
adc
fisubl
shll
sbb
rorb
scas
and
mov
cmp
adc
sbb
div
mov
cmp
sbb
pop
inc
shrl
mov
lock
loop
fwait
divb
fdivs
and
push
lock
fidivrl
filds
cmp
jl
lret
push
repnz
mov
mov
int
pushf
aam
leave
mov
dec
nop
xchg
pop
pop
lds
mov
xlat
xor
arpl
push
adc
in
das
loopne
xor
arpl
push
jo
mov
inc
popl
cwtl
sarb
inc
dec
push
cmc
mov
xor
fwait
data16
or
stc
xchg
add
fwait
cmp
sbb
pop
fcoms
ds
add
cmp
leave
add
push
xor
push
je
sbb
lds
fisubl
in
xor
fsubrl
int3
rcrb
lds
dec
mov
cmp
clc
xchg
loop
mov
cmp
push
cli
aam
cmp
rol
inc
push
mov
and
rol
jbe
cli
adc
xchg
xchg
or
lret
pop
inc
sbb
cld
mov
push
into
jno
xchg
test
stos
jo
mov
icebp
mov
lds
push
push
loopne
aas
movsb
or
in
push
insl
fdivrl
xchg
pop
test
add
mov
int3
mov
sbb
idivl
iret
call
clc
xor
fisubrl
xchg
fdivrs
fidivrs
xor
rcl
mov
push
pop
mov
lret
into
push
add
jnp
jno,pn
hlt
stc
push
add
pop
iret
add
iret
adc
lahf
or
mov
or
sbb
fadds
movsb
push
jnp
sarb
mov
dec
icebp
stos
hlt
push
jno
pop
dec
enter
jae
cmp
sbb
jns
ds
mov
ret
cmp
inc
rcrb
adc
out
cmp
or
in
jbe
dec
lock
xor
mov
movsb
mov
xchg
ja
push
mov
icebp
or
insl
mov
ss
hlt
in
mov
push
sbb
lret
cmp
or
cmpsb
in
int3
jno
jb
xor
adc
mov
push
enter
loopne
lcall
scas
icebp
jne
push
into
xchg
lods
ds
mov
arpl
inc
push
dec
push
dec
mov
mov
xchg
fdivrs
mov
inc
test
lods
lahf
push
into
adc
hlt
loopne
mov
lods
lock
aaa
lret
push
jb
repnz
push
lret
enter
mov
fsts
cmpsb
xchg
push
push
cs
push
or
cmp
xor
or
scas
mov
scas
ljmp
pop
and
xchg
addr16
or
repnz
cs
push
dec
mov
cmpsl
jnp
stos
or
repnz
mov
stos
ss
sub
outsb
outsl
int3
mov
add
ljmp
sbb
lods
xor
popf
sub
int3
cmc
rcr
add
xchg
cmp
in
xlat
test
rolb
ret
or
imul
xor
and
mov
sbb
mov
pop
addr16
rcr
sub
repnz
xor
sbb
cmp
pop
xor
idiv
test
inc
fsubrl
mov
mov
mov
in
inc
mov
inc
fsubr
xrelease
xchg
or
addr16
sarb
sbb
popf
shr
xor
lods
add
bound
rcrb
xchg
jg
scas
lock
cs
pusha
mov
std
jmp
lock
mov
mov
xor
mov
decl
mov
add
cmp
js
jp
pushf
out
rorb
mov
aam
out
pop
jle
int3
mov
dec
mov
cmpsl
jno
adc
cmp
fistl
inc
cli
mov
sbbl
dec
in
sbb
or
ror
aam
inc
loop
fdiv
mov
cmp
filds
fwait
inc
cld
jecxz
cs
cmp
aas
adc
mov
cwtl
add
ss
mov
mov
inc
enter
fsubrl
and
popf
push
enter
sbb
adcl
jle
xor
aas
loope
ljmp
cmp
stc
cmp
add
pop
cli
mov
sbb
mov
push
xchg
xor
movsb
or
pushf
sbb
divb
xchg
add
aam
adc
addr16
adc
sub
aas
push
push
adc
notb
clc
shl
inc
lret
or
xchg
in
dec
enter
cmpsl
js
add
data16
test
cmp
fstps
imul
fndisi(8087
into
loope
mov
push
xchg
repnz
imull
fidivrl
ficoml
mov
pop
mov
popa
repnz
mov
jge
mov
int3
adc
mov
or
cmp
fbld
add
xor
or
mov
or
cwtl
pop
cmp
vpsllq
lea
scas
ret
sub
test
inc
mov
leave
add
das
in
push
test
mov
loopne
or
lods
inc
lahf
jge
mov
mov
push
xor
scas
cmp
ds
sbb
and
fmul
pop
insb
into
jg
mov
sbb
fistl
lock
push
mov
inc
in
xchg
xor
sbb
cld
jbe
aam
and
mov
mov
int3
addr16
xchg
cld
xor
pop
mov
or
add
adc
or
int
hlt
inc
mov
and
jmp
nop
insl
sbb
fsubrl
pop
add
or
xor
cmp
neg
cmp
cli
jp
pusha
lahf
jno
jp
rcrl
push
adc
pop
pop
xchg
add
push
lret
ljmp
out
sub
mov
push
ds
and
push
es
dec
inc
icebp
out
pop
into
in
ror
popf
xchg
fmuls
mov
fdivr
add
xchg
mov
or
sub
cli
mov
pop
xchg
sub
cs
and
ret
cli
pop
pop
mov
rolb
add
mov
lea
out
scas
jmp
ret
pushf
repnz
adc
enter
jp
sbb
pop
aas
sbb
or
mov
mov
das
pop
and
jmp
or
mov
sbb
dec
fiadds
or
sbb
js
jo
clc
adcl
or
sbb
hlt
enter
adc
lcall
push
pop
xchg
sahf
scas
sbb
adc
or
pop
cltd
pop
int3
sarb
cwtl
push
out
mov
cwtl
insl
ret
mov
sbb
rcl
testb
xchg
dec
cmp
mov
shrl
cmp
push
daa
inc
faddl
cmp
std
fsubs
mov
or
sbb
lret
push
mov
fcoms
and
push
sbb
cmp
xchg
dec
mov
xchg
push
out
sbb
ljmp
cli
mov
pop
popf
lret
out
out
popf
mov
lcall
or
xchg
je
mov
adc
dec
xchg
sub
pop
lcall
sub
push
mov
add
dec
fcmovbe
lahf
aam
stos
sbb
out
jmp
mov
jo
cwtl
into
xor
call
add
cmpb
jo
xor
pop
iret
sbb
xor
ss
addr16
xchg
sbb
sarb
scas
and
mov
aam
das
sbb
sbb
adc
or
mov
mov
cmp
mov
sbb
jg
test
rorl
jmp
xchg
sub
iret
sbb
mov
jne
mov
stos
fwait
dec
mov
mov
mov
push
inc
lods
stos
dec
adc
lcall
jo
subb
int3
push
lahf
rcr
ss
divb
fwait
adc
or
or
sub
xor
push
sbb
int3
mov
mov
mov
enter
fidivrl
ret
les
cs
lods
cmp
into
outsl
cli
mov
push
hlt
clc
sub
fwait
mov
ljmp
outsl
jb
lods
push
hlt
sbb
mov
add
scas
das
out
pop
jbe
hlt
lret
add
mov
cwtl
test
enter
or
es
in
ret
fidivs
lods
pop
lret
adc
push
sub
scas
push
jg
cmpsl
adc
mov
cmp
mov
out
daa
js
sbb
ljmp
mulb
dec
push
cmp
out
pop
lods
push
rcrb
mov
fidivrl
pop
into
push
add
inc
adc
jnp
mov
sub
cli
push
sarb
lock
addr16
cs
stc
push
sbb
cmpsl
jg
ds
xor
hlt
xbegin
mov
inc
sbb
in
movsb
das
dec
out
jmp
loop
cmpsb
es
repnz
jb
pop
xchg
xor
sub
jl
aaa
push
xor
mov
xor
mov
mov
fwait
out
mov
cld
sub
mov
hlt
sbb
cmp
shll
pop
cmpb
push
or
mov
mov
mov
into
mov
popf
push
jno,pt
mov
sahf
inc
ljmp
xor
fsubrl
call
mov
ss
jp
xor
xchg
fsubrl
ds
dec
ljmp
sbb
outsb
adc
ficoml
and
inc
mov
cmpsl
cmp
ljmp
mov
mov
lret
xchg
stos
hlt
in
lahf
outsl
mov
push
mov
push
das
outsl
jno
inc
lock
cltd
roll
or
shlb
sbb
lods
les
dec
push
repnz
xchg
cmpb
add
and
int
clc
in
or
push
out
cli
fwait
mov
push
call
out
dec
sub
inc
sub
rclb
aam
imul
inc
testl
inc
mov
mov
cld
addb
repz
xor
cmp
incb
scas
pop
ret
cli
sub
jg
iret
into
fldt
push
xor
sbb
cmpsb
ret
mov
fsts
push
icebp
test
repnz
adc
mov
out
sub
mov
mov
pop
cltd
sbb
or
inc
hlt
mov
mov
pop
and
cmc
mov
fistpll
sub
fidivs
aas
fnstenv
out
xlat
xchg
rcll
pop
into
repnz
stos
mov
pop
or
out
push
lret
cwtl
push
ss
lahf
mov
sbb
sub
mov
repz
int3
and
mov
ss
or
jno
inc
mov
mov
or
rcrb
cmp
js
adc
mov
les
mov
fcomps
and
fcoml
das
jecxz
cmp
insb
ss
push
fsubl
mov
mov
xchg
lods
int3
fcoms
adc
add
out
cld
xor
outsl
nop
and
mov
mov
es
or
adc
xchg
popf
rorb
movsb
cmpsl
mov
sub
mov
cs
add
push
sbb
mov
repz
out
dec
inc
mov
lret
mov
cli
push
lods
bnd
add
mov
add
mov
cmpsl
or
xlat
mov
ds
dec
mov
inc
jle
dec
jp
lods
and
xor
inc
aam
jmp
pop
in
popa
lock
push
or
fcmovb
cli
loop
xor
out
jmp
xor
mov
pop
neg
aam
pusha
les
stos
xor
push
divps
push
mov
lcall
xor
adc
jp
pusha
pop
push
into
pandn
add
scas
shll
jb
sub
aas
lret
call
fwait
adc
pop
dec
or
and
sbb
das
pop
add
lret
adc
ds
out
xor
sbb
popa
lret
sbb
shl
popf
mov
cmp
jo
adc
sbb
xchg
pop
mov
push
loopne
xchg
xor
call
sbb
xchg
popa
mov
add
loope
add
cs
push
out
cwtl
into
int3
ds
cmpl
xor
or
hlt
mov
mov
inc
repnz
inc
out
cmp
inc
mov
repnz
xor
out
shll
es
mov
fcmove
testl
in
rcrl
or
das
mov
add
cmp
pop
cmp
repnz
cwtl
sbb
mov
lods
add
push
sbb
mov
mov
stc
sub
lcall
dec
int3
fcoms
push
sbb
mov
push
add
roll
outsb
push
sbb
xor
mov
jne
rolb
inc
in
cmp
out
cmp
jp
hlt
xchg
movb
xchg
iret
mov
js
fldcw
or
movsb
inc
mov
es
cld
rcrl
outsl
xchg
mov
mov
scas
dec
hlt
add
stc
into
pop
mov
sbb
push
adc
inc
jg
in
mov
cmp
fdivs
pop
sbb
aas
test
cld
xor
aad
adcl
adc
fcomps
adc
mov
mov
test
stc
lods
test
iret
or
ss
jno
mov
cmp
sbb
sar
stc
stos
jbe
loop
push
int3
mov
aas
or
mov
xchg
inc
ds
jb
lret
sbb
inc
inc
sbb
lahf
ret
enter
aad
aas
push
dec
out
in
cld
dec
fisubrs
ds
xor
mov
push
outsb
add
fmul
enter
movl
sbb
les
repz
or
sbb
mov
dec
mov
orb
shr
lea
sarl
mov
dec
xor
mov
cmp
xchg
inc
mov
out
sbb
dec
mov
mulb
stc
mov
add
div
xchg
cs
in
mov
cmp
stos
ds
adc
jecxz
stos
jb
jp
aas
scas
add
push
and
loope
xor
das
fcoms
cli
sub
scas
mov
sahf
repnz
lock
jae
lods
faddl
cmp
scas
js
adc
cmp
mov
xchg
push
mov
pusha
xor
add
jb
fistps
ljmp
sbb
inc
adc
adc
adc
hlt
add
or
in
add
xor
push
movl
out
mov
ljmp
or
or
sbb
mov
xor
mov
xor
in
addr16
ds
xchg
filds
dec
scas
push
cmp
repnz
loope
or
rcrb
data16
sbb
fmuls
enter
testb
sbb
mov
sub
jp
jle
sub
imul
stos
mul
mov
sub
pop
out
sar
hlt
insb
not
cld
sti
clc
add
sbb
sub
xor
jb
enter
cmp
enter
mov
mov
fidivrl
js
rcl
xchg
lods
stos
fadd
lds
ret
movsb
lods
fisubrs
fadds
ret
outsl
dec
jg
inc
cmp
cmp
nop
cmp
sbb
ss
push
loopne
add
inc
mov
mov
lods
lret
sbb
sbb
sub
enter
iret
ds
imul
fdivr
pop
or
out
lret
scas
incb
xor
cmpsl
lods
or
enterw
hlt
scas
push
cld
pop
dec
adc
movsb
andb
daa
loope
scas
cltd
fs
xchg
ret
popf
inc
lock
ss
aam
fwait
inc
fdivr
xchg
pop
or
adc
and
jbe
mov
pusha
stos
bound
mov
add
ljmp
cld
ds
out
enter
orl
mov
mov
fistps
push
mov
adc
scas
fwait
lock
mov
or
sbb
xchg
fdivl
pop
fwait
insl
fisubl
mov
mov
inc
in
iret
nop
nop
sbb
jge
ds
into
add
shr
lock
in
incb
in
or
rclb
popa
popf
inc
cmp
fstpt
mov
rcl
sbb
push
mov
jge
dec
pop
xlat
outsl
aam
out
jae
xor
vmread
jb
jo
pop
adc
js
mov
lods
mov
jmp
jle
sub
mov
cs
repnz
fucomi
push
fistpll
ss
in
out
mov
inc
dec
mov
adc
das
inc
out
mov
into
push
push
mov
push
mov
movsl
add
popa
jp
adc
mov
fdivp
lock
adc
das
loopne
out
jae
jb
aam
cmp
stos
xchg
js
shl
jle
dec
inc
or
dec
iret
mov
outsl
push
loop
adc
and
lea
fbstp
imul
ret
enter
lret
cld
cli
ret
or
sbb
stos
lods
mov
add
pushf
or
lcall
lahf
mov
popa
push
dec
or
sarl
adc
pusha
mov
xchg
into
cld
mov
pop
cltd
cmpsb
bound
mov
xchg
std
decb
push
test
sub
inc
adc
stos
xor
data16
lret
xlat
fcomps
cld
or
popa
mov
into
push
mov
icebp
jle
loope
cmpsl
not
cmp
xchg
fmull
mov
mov
xlat
xor
fisttpll
rorl
cmp
inc
mov
mov
roll
or
outsb
insb
xor
or
mov
inc
fsubs
adc
cmc
xor
in
adc
iret
fnstenv
mov
out
popf
xor
or
out
sbb
cmp
lret
sbb
jecxz
aas
outsb
push
sbb
out
xchg
outsb
lock
cld
das
out
ret
jecxz
daa
pop
jl
fsubr
ds
sub
pop
mov
in
mov
push
xchg
sbb
sbb
cmc
fimuls
sarb
sub
cmp
dec
test
fdivl
cmp
testb
mov
hlt
add
fidivrl
popa
mov
sti
inc
mov
fidivrs
adc
gs
xchg
imul
adc
hlt
sahf
psignb
imulb
push
xchg
fdivrl
test
aam
adc
and
les
aas
in
mov
int3
outsb
jo
cli
lret
push
decb
pushf
push
cmp
and
mov
shrl
cwtl
mov
cli
and
lods
not
inc
mov
out
inc
sub
and
ret
sbb
adc
add
hlt
xor
or
sbb
stos
out
sarb
mov
hlt
into
addr16
mov
sbb
inc
cld
xor
xchg
push
mov
ds
mov
or
adc
les
daa
in
push
push
push
ret
inc
cld
pop
fs
sbb
cli
adc
sbb
hlt
push
mov
sub
sbb
mov
lcall
push
dec
leave
mov
mov
mov
insb
in
mov
mov
shlb
or
movsb
sahf
sub
or
aas
jge
cmc
ret
stos
rorb
mov
ljmp
cmp
sbb
lea
lret
pop
stc
xor
gs
lock
mov
jle
sub
movsb
xchg
dec
ss
mov
push
cs
pop
push
repz
cmp
rcl
pop
mov
rcll
cmp
mov
lods
mov
push
adc
stc
adc
in
mov
nop
xor
testb
and
xchg
adc
pop
add
ret
sar
xor
mov
mov
repz
sub
rorl
into
sbb
mov
arpl
aad
pop
lcall
loopne
xor
int3
mov
add
inc
sub
cmp
aaa
cmp
push
outsl
mov
adc
jo
mov
pop
mov
mov
xchg
dec
cld
rclb
sar
or
fldl
imul
push
rclb
mov
or
add
or
pop
ds
scas
jg,pn
mov
adc
mov
jg
or
outsl
dec
pop
xchg
sbb
ret
fiadds
fidivl
mov
sbb
fidivrl
push
or
pusha
lret
into
in
adc
popa
addr16
pop
clc
out
mov
imulb
sbb
fsubrl
cmp
add
inc
cmp
inc
je
mov
insl
xchg
push
adc
xor
xchg
mov
ror
fcomps
cmp
inc
cmp
mov
adc
cmpsb
mov
addr16
xchg
ss
xchg
in
add
or
push
adc
push
enter
sbb
cli
push
faddl
or
pushl
repnz
outsl
add
sarl
test
sub
js
mov
mov
pushf
push
stos
cmp
jmp
mov
inc
xchg
mov
addr16
aas
ret
sbb
inc
push
mov
xlat
add
scas
std
xor
and
or
out
scas
ret
push
clc
enter
jno
sarb
scas
pop
jg
inc
clc
and
sbb
ficomps
int3
shrb
sahf
add
fcoml
add
adc
inc
sti
cli
mov
dec
aad
or
aam
sbb
or
das
inc
outsb
mov
out
stos
ljmp
and
testb
inc
xchg
push
lahf
sub
mov
xchg
aad
adc
mov
sbb
sbb
in
mov
test
adc
add
mov
adc
xor
push
clc
mov
xor
mov
lods
outsb
test
jp
sbb
jle
movsb
stos
adc
enter
pop
cltd
or
icebp
out
push
test
fcoml
test
js
cwtl
mov
push
or
jno
ljmp
incb
lock
xor
enter
test
jnp
sbb
orl
into
das
xor
inc
fsubrl
sti
hlt
cmpsl
sub
int3
add
testl
jge
sbb
jb
repnz
jo
lcall
dec
jmp
sbb
mov
cltd
outsb
inc
mov
xor
rcr
or
cmp
lods
sbb
cld
ljmp
aaa
inc
mulb
inc
push
fs
pop
shlb
inc
push
imul
mov
mov
ljmp
out
mov
adc
outsl
ret
xor
push
sbb
push
cmp
xchg
add
xchg
insb
mov
es
inc
insl
jo
cltd
sub
xchg
or
add
negb
addb
lods
out
pop
push
fidivrl
scas
or
jne
cld
clc
aaa
gs
test
cmp
xor
inc
lret
mov
aas
addb
xchg
rclb
repnz
aam
or
fbld
cmp
enter
repnz
adc
movsb
lds
or
sti
or
sbb
xor
pusha
dec
in
add
mov
or
adc
sbb
aas
mov
add
scas
inc
mov
mov
js
xchg
mov
repnz
fmul
mov
lds
mov
add
xchg
jne
aam
sbb
scas
lock
shlb
fimuls
lods
cld
push
bts
shlb
mov
fldt
mov
mov
sbb
sbb
adc
shufps
mov
xchg
mov
inc
jbe
sbb
xchg
xchg
cmpsb
outsl
rcll
dec
lea
repnz
sbb
cmpsl
pop
push
dec
sub
mov
outsl
movsl
enter
mov
test
mov
cmp
mov
inc
rcll
shlb
rolb
xor
jmp
adc
shrb
mov
cmp
aaa
jb
nop
cld
mov
lods
mov
xor
mov
sbb
inc
scas
frstor
and
in
rclb
pop
pusha
xor
jno
test
aam
movsb
js
adcb
out
or
fcoms
cld
mov
test
or
frstor
mov
mov
cmp
notb
shl
lret
pushf
lock
or
cmp
adc
mov
stos
ror
dec
pop
jne
jecxz
sub
clc
imul
ret
or
dec
jo
add
cs
cmp
cltd
adc
jb
adc
inc
cmp
or
xchg
dec
out
inc
sbb
sbb
negb
and
jle
xor
and
xchg
lret
cmp
addr16
fbld
push
repnz
sub
sbb
testb
or
and
in
mov
add
xchg
iret
fsubs
inc
out
adc
lcall
pusha
xor
mov
cmpsb
aam
ret
xor
xchg
inc
sar
aad
inc
rorb
ljmp
lahf
mov
mov
fcom
mov
xchg
sub
adc
sbb
cld
addr16
mov
fnstsw
sub
aaa
pop
add
adc
nop
fdivs
cs
sub
lods
pusha
mov
add
jae
js
jle
mov
inc
dec
andb
outsl
inc
or
mov
leave
adc
loop
sub
pop
xchg
mov
xchg
add
arpl
xor
pop
jno
mov
adc
dec
lods
xchg
in
ret
adc
scas
out
ja
hlt
xor
loop
mov
in
pop
les
nop
cmp
rorl
cmp
fnstsw
daa
ja
lock
rcrb
stos
push
outsb
insb
sahf
ljmp
in
pop
push
or
mov
pop
pop
xchg
test
ret
add
mov
imull
mov
lock
je
rol
in
pop
gs
iret
sub
dec
call
mov
and
cli
adc
notb
push
mov
and
das
mov
cli
adc
hlt
add
int3
cmp
out
adc
leave
cmpb
add
sbb
lock
cld
push
scas
cli
nop
jmp
mov
ret
shrb
push
xor
hlt
lcall
mov
aam
hlt
fcmovne
mov
fmuls
into
int3
test
in
loopne
mov
out
push
enter
ds
push
sbb
in
xchg
ss
xor
jg
clc
xchg
aam
ret
add
xor
cmp
loope
push
repnz
sbb
fistpll
or
adc
in
xchg
cs
adc
jnp
orb
scas
push
push
mov
push
mov
or
xchg
mov
cmp
xor
ss
xchg
add
mov
sub
out
int3
cmp
mov
out
repnz
xchg
lock
les
cltd
loopne
test
or
test
pop
test
jnp
fld
cld
stos
cmpl
mov
imul
aas
fstl
xlat
jg
push
clc
xor
mov
mov
into
and
xlat
mov
fiaddl
jp
jp
pusha
lds
push
arpl
les
mov
fwait
leave
adc
enter
sbb
pushf
int3
mov
lret
xchg
iret
push
cltd
jb
das
add
ret
adc
cld
in
dec
xor
xchg
xchg
into
rclb
fsubl
mov
repnz
push
push
mov
xor
shlb
mov
mov
lods
jecxz
hlt
andb
ds
cli
rorb
jbe
sbb
adc
push
mov
cli
popf
out
sub
test
sbb
xchg
pop
ja
outsl
push
mov
jg
mov
mov
jo
push
adc
or
jl
xchg
jo
mov
lret
test
rolb
add
pop
lock
ret
repnz
adc
mov
push
mov
push
hlt
xor
lret
push
idivl
out
sub
lahf
or
or
faddp
lret
imul
push
or
into
enter
mov
adc
das
out
and
das
push
fs
mov
or
int
addr16
cli
inc
mov
dec
pushf
push
lock
lods
mov
pop
mov
fwait
xchg
in
sbb
fstpt
xor
cmp
stos
cs
adc
and
int3
sub
xor
out
iret
test
cli
inc
imul
mov
dec
fisubs
sbb
mov
push
test
mov
dec
cmp
fisubrl
push
cmp
or
or
xchg
fmuls
mov
inc
dec
dec
mov
lods
rclb
and
pop
outsl
ss
sub
fisubs
adc
sbb
xor
faddl
leave
add
fstpt
mov
sbb
jns
leave
scas
add
out
dec
push
xchg
out
sbb
sub
jb
inc
cwtl
xlat
lock
imul
lahf
outsb
sbb
stos
aas
adc
cmpsl
aam
aas
loopne
cld
add
pop
mull
dec
addr16
jg
cwtl
xor
mov
es
in
or
sti
mov
xorl
sbb
sbb
das
testl
mov
loop
stos
repz
push
mov
add
ljmp
aam
lods
ljmp
in
int3
xchg
jo
fisubrl
sahf
sub
sbb
jne
mov
sbb
addr16
inc
sbb
mov
mov
mov
shrb
enter
std
sub
fcmovbe
sbb
mov
int
mov
mov
or
xor
mov
fdivs
fadd
in
dec
sbb
loop
mov
push
mov
cs
lock
jecxz
pop
ret
fisubs
scas
xor
or
inc
cli
add
pusha
ret
sar
xchg
xor
pop
loop
fs
in
mov
sti
aaa
scas
data16
adc
aad
or
int3
xchg
enter
mov
mov
adc
inc
stos
inc
clc
in
imul
jo
or
push
rolb
pushf
sbb
repnz
mov
cmp
sbb
add
imul
sti
or
cmpsl
out
cmp
cld
mov
testl
cs
and
sub
inc
sbb
sahf
fsubr
cmp
sarb
sbb
ds
aas
lods
push
mov
mov
mov
fsub
jp
pushf
fcmovne
push
xor
imul
adc
cmp
or
into
addr16
outsb
adc
or
aas
cmc
out
pop
push
or
inc
jb
jb
lcall
mov
cmp
or
ss
push
repnz
adc
icebp
lret
and
sub
mov
scas
mov
lea
gs
lock
cmp
lret
mov
out
xchg
push
cli
adc
or
xchg
out
lcall
sbb
std
out
add
rcrb
jmp
enter
mov
dec
mov
or
stos
or
jnp
push
repnz
and
xchg
push
push
mov
push
arpl
arpl
mov
mov
jecxz
mov
dec
pop
sub
pushf
sbb
mov
mov
jmp
mov
js
repnz
jb
or
arpl
lahf
cld
adc
cmp
mov
jp
xchg
ljmp
lahf
xor
sbb
icebp
jb
xor
xor
push
mov
mov
or
imulb
enter
insl
dec
rclb
shlb
es
push
mov
addr16
rol
loopnew
mov
call
cld
sbb
repnz
jge
lods
mov
mov
fimuls
neg
xor
lahf
fadds
xor
cmpsb
or
mov
dec
mov
adcb
fimull
loopne
pushl
cli
clc
ss
mov
mov
fwait
in
ret
cmp
js
and
addr16
into
out
ds
hlt
cli
into
inc
call
gs
cs
cmpsl
into
cmp
lock
sub
push
cmpsl
ss
mov
addr16
stos
add
stos
lret
into
addr16
stos
div
addr16
sbb
notb
mov
subb
xchg
stos
jno
int3
xchg
or
add
add
js
cmp
xor
push
or
mov
sbb
or
jp
cmp
ljmp
sbb
cmp
mov
jp
or
jp
test
push
ja
push
inc
xor
out
in
sub
xchg
out
stos
add
lret
dec
pop
popf
divb
mov
cmp
ret
test
lahf
cmp
sti
add
cmp
lea
lcall
repnz
sbb
mov
sub
mov
mov
clc
pop
jle
xor
mov
ds
adc
or
lahf
jg
sarb
lods
mov
data16
cmpsb
dec
out
cmp
les
data16
pop
push
imul
adc
stos
adc
shl
jmp
cmp
and
mov
lahf
and
cmp
cld
stos
cld
ret
dec
push
ret
cmp
scas
sub
add
clc
adc
pusha
icebp
push
mov
sbb
mov
add
sbb
mov
and
sbb
and
pop
repnz
out
cli
in
mov
and
mov
pop
dec
jp,pn
sbb
inc
jbe
sub
test
sbb
stos
ficompl
jg
rorb
mov
frstor
add
enter
lcall
mov
les
stos
sbb
mov
or
test
xlat
stc
lods
mov
or
sbb
ljmp
popf
or
cmp
icebp
adc
mov
lcall
mov
lods
jecxz
andb
or
adc
dec
aam
dec
cltd
mov
push
jo
outsl
mov
stos
dec
xor
pop
fiaddl
pusha
dec
or
shl
lock
ret
jle
addr16
int
jb
push
popa
push
aaa
cmp
lret
add
pop
mov
jg
cs
or
pop
push
mov
pop
addr16
adc
shrb
lock
int3
add
xchg
fmuls
or
xor
pop
or
mov
xlat
push
adc
inc
cmp
cmp
or
jp
xchg
rcrb
push
or
outsl
nop
mov
sbb
adc
insl
stos
jae
mov
into
xor
or
in
stos
pop
nop
dec
adc
adc
addr16
ljmp
jp
cld
push
inc
xchg
cmp
mov
ljmp
es
stos
and
stc
sub
fdivrl
xchg
push
les
jg
jno
scas
mov
mov
push
int3
adc
and
push
cld
mov
or
push
ss
mov
fcompl
sbb
scas
lock
fdivs
scas
mov
lock
jne
loope
fsubl
test
push
xchg
jl
cld
rclb
push
mov
aam
sbb
and
pop
leave
mov
fisttpll
mov
into
rcrl
push
and
iret
inc
add
cs
or
add
fisubrs
or
in
ja
xor
add
xchg
ds
cmpsl
xchg
inc
fadds
movsl
out
fwait
loope
sbb
notl
pop
xchg
mov
ss
and
adc
xchg
sbb
decb
inc
or
sub
scas
inc
in
clc
ss
lahf
push
inc
push
sub
movsb
inc
add
and
sub
xor
xchg
push
mov
cltd
mov
push
dec
mov
jp
jbe
add
ffree
imul
dec
inc
mov
shrb
adc
call
and
popa
jnp
jp
jp
sub
das
cmp
jne
mov
sbb
lahf
mov
cmp
mov
test
push
in
mov
jb
das
dec
push
adc
das
xor
mov
add
mov
out
pop
mov
rorl
rorb
add
fs
sbb
xor
push
out
mov
lahf
aas
mov
lock
mov
pop
or
ja
pop
ljmp
hlt
lcall
add
push
xor
repz
aam
push
adc
fdivl
or
cmp
bound
cmp
repnz
push
mov
xchg
sahf
les
sbb
pop
cmpl
ret
hlt
push
in
cmp
pop
ja
daa
adc
popf
sub
or
subb
push
test
xor
add
mov
jne
push
mov
stos
mov
cmp
sahf
dec
test
xchg
adc
int3
lret
pop
fadd
mov
jno
xor
mov
addr16
das
aam
fdivr
out
les
or
lock
push
cs
stos
xor
push
mov
fdivrl
aam
nop
rcrb
mov
aas
lret
hlt
sub
cli
mov
repnz
ret
stos
xor
mulb
cs
bound
icebp
enter
mov
sub
aam
and
pand
and
inc
adc
jp
dec
cmp
jp
stos
mov
mov
mov
mov
data16
shrb
mov
adc
or
in
stos
enter
sub
pushf
fcomip
into
mul
xor
mov
outsl
jno
cmp
or
scas
and
adc
test
or
out
aas
call
cmp
loopne
pop
scas
lcall
jb
in
push
imull
fwait
pop
push
or
int3
jp
ss
ja
scas
cs
mov
cltd
mov
sub
lods
cmp
adc
ret
sahf
les
mov
iret
mov
lock
jb
fidivl
inc
cwtl
pusha
add
out
or
negl
scas
or
xchg
xor
clc
push
sbb
lcall
mull
xchg
mov
jp
pusha
sbb
cmp
into
fs
sub
push
xchg
out
mov
rcr
das
popf
pop
stos
hlt
repnz
sti
xchg
cli
xor
xabort
js
jge
enter
ret
imulb
stc
push
add
clc
sbb
fstl
add
lea
mov
push
pop
push
sti
enter
or
outsb
sub
cli
js
stos
ret
push
mov
mov
ljmp
addr16
out
xchg
cmp
fs
push
stos
mov
in
cmp
repnz
rorb
jo
sub
pop
cli
dec
inc
jbe
outsl
bound
lock
mov
push
push
push
sbb
imul
lea
sti
fld1
out
mov
pop
cmp
fcoms
rclb
push
mov
out
add
dec
sub
adc
insl
jo
xchg
push
mov
pop
inc
add
lock
into
movb
push
fcoms
sub
es
jno
clc
mov
adc
cs
movsb
adc
out
cltd
cmc
fcoml
lods
mov
xor
mov
mov
int3
or
mov
out
jae
sbb
clc
aam
fsubrl
or
iret
movsl
cld
pop
aad
fcompl
mov
out
lcall
lret
sbb
mov
or
mov
mov
mov
ret
xchg
dec
xchg
mov
lods
jo
lods
cmpb
ljmp
adc
mov
mov
std
cs
or
popf
push
adc
enter
add
frstor
ret
xor
dec
mov
call
fimuls
jg
iret
lret
ljmp
popf
inc
mov
jp
cli
ret
stc
sbb
jp
sbb
ret
lods
lock
push
cmp
cmp
mov
out
inc
mov
sbb
fdivrp
sbb
out
loope
mov
clc
neg
cwtl
mov
adc
lahf
dec
xchg
mov
and
psrlq
sbb
lods
add
inc
cli
data16
mov
lahf
ss
test
sbb
es
sub
cmp
cli
lret
xor
mov
mov
repnz
mov
adc
or
xorb
bound
sbb
mov
or
aad
idiv
ljmp
sub
ss
or
mov
les
mov
dec
or
or
xchg
inc
cmp
ja
xor
xorb
pusha
or
adc
adc
sub
cmp
lahf
sub
mov
sbb
out
sub
lds
mov
mov
lock
inc
loop
xchg
lods
mov
fmul
cwtl
mov
cmp
and
push
addr16
sti
mov
xchg
xor
cli
aaa
fstpt
inc
mov
mulb
clc
mov
pop
push
fsubrl
jl
ds
jp
pop
add
ljmp
jmp
fnstsw
test
sahf
sbb
cmp
ret
ljmp
pop
outsl
push
daa
mov
jo
xor
outsb
ljmp
or
xchg
jb
sbb
leave
in
lahf
and
repnz
nop
mov
push
add
mov
cmpsb
and
mov
ljmp
cs
mov
xor
fadd
in
sar
movsb
outsb
shrb
iret
xor
xorb
ljmp
dec
mov
mov
sbb
inc
cwtl
jb
xchg
hlt
pop
aas
jg
or
xlat
xchg
jge
lods
int3
cmp
pop
push
ds
cs
xchg
cmpsl
es
sbb
aas
xlat
mov
cmp
ret
pop
mov
or
mov
rolb
push
movsl
jb
mov
pop
push
nop
daa
int3
cltd
sbb
sarb
add
enter
push
aaa
push
icebp
push
push
decb
mov
ss
inc
test
or
lea
and
add
negl
jg
lret
gs
or
sarb
sbb
mov
xchg
add
gs
into
pop
xor
ds
lods
and
add
incb
lods
fdivl
sbb
adc
push
inc
or
pop
sub
ret
lret
sbb
pop
sbb
movsl
sbb
sbb
xor
sub
cs
add
cmp
ds
sbb
int3
mov
ss
outsl
or
push
mov
mov
or
xor
flds
xchg
adc
out
jecxz
cmp
addr16
mov
mov
lcall
pop
cmp
pop
xchg
sbb
cmp
xchg
int3
ss
into
xchg
push
repnz
mov
or
mov
cltd
out
or
adc
add
dec
xor
inc
stos
jg
mov
rorb
dec
and
push
add
dec
shlb
push
sub
aas
add
push
shlb
push
jns
push
cmp
shr
cmpl
push
adc
mov
mov
enter
mov
mov
push
and
xor
mov
repz
adc
js
cwtl
sbb
lods
sbb
mov
cmp
jnp
pusha
adc
ja
addr16
ret
notb
into
and
negl
lock
sti
push
loop,pn
xchg
xor
mov
or
mov
push
mov
and
mov
ss
jle
stos
push
cmc
sub
mov
imulb
sub
xchg
dec
push
mov
test
inc
repnz
inc
cmp
mov
clc
cmp
int3
out
sub
ljmp
orb
movb
or
mov
aas
cmp
ds
outsl
add
mov
lcall
shlb
outsl
cwtl
outsl
fstl
adc
mov
push
or
mov
or
addl
lods
cmc
push
xchg
cmp
cmp
cld
std
int
cmc
and
and
add
add
adc
or
aaa
pushf
dec
movsl
mov
adc
mov
mov
push
cltd
xchg
dec
fucomip
mov
dec
inc
in
xor
scas
mov
add
lret
clc
mov
xlat
dec
sarb
mov
jg
or
aaa
lods
mov
jns
mov
or
mov
adc
incl
out
inc
in
enter
xor
pop
pop
mov
push
mov
cli
scas
add
xchg
cmc
fwait
stos
cld
push
xor
loope
clc
add
data16
lea
mov
xchg
scas
repnz
mov
cmpsb
sub
sub
aas
jae
decl
lret
xchg
dec
lock
jns
into
xlat
orb
stc
mov
test
add
jns
sub
sarb
js
cwtl
xor
shr
sbb
lock
cmp
or
xchg
inc
lret
dec
stos
push
pop
lret
fsubr
sbb
xor
out
sbb
sbb
jmp
sbb
les
cmp
mov
lret
adc
movsl
sbb
pop
mov
mov
xchg
inc
fmuls
ljmp
xchg
sub
arpl
es
fdivl
sarb
jae
int
repnz
incb
sbb
or
int3
xchg
push
lret
inc
cmpsl
inc
shrb
data16
mov
jno
adc
xlat
xor
add
lret
pop
cmpsl
popa
jb
xchg
cmp
lock
pop
and
mov
fdivrl
mov
jmp
rol
repnz
fcoml
cmp
sub
enter
or
cs
or
mov
ljmp
mov
or
lods
lea
adcb
mov
pop
daa
mov
push
repnz
fsts
addr16
or
sub
push
scas
mov
push
arpl
push
xor
fs
notl
and
cld
stos
cmpsl
popf
fdiv
aam
idivb
xor
sarl
jo
mov
les
xchg
mov
pop
push
pop
pop
into
hlt
loope
test
ss
inc
jp
add
cmpl
mov
mov
sbb
or
adc
add
xor
xchg
xor
push
ss
mov
mov
mov
sbb
add
loopne
xchg
dec
mov
add
and
paddd
repnz
fcmovbe
adc
pushf
mov
clc
scas
adc
dec
idivl
sub
jns
and
add
inc
adc
cmp
std
jns
enter
sub
sbb
push
xor
adc
cmp
hlt
fmul
icebp
movl
lahf
data16
cs
jmp
mov
aam
test
mov
adc
dec
cmp
push
push
xchg
or
pop
ljmp
leave
aad
lret
fistl
mov
push
dec
pop
add
les
inc
out
gs
aam
lods
test
jle
repz
fiadds
sbb
add
adc
popf
call
repz
sbb
push
mov
mov
into
lcall
mov
pop
jns
aad
mov
test
addr16
fsubrs
enter
sub
iret
adc
adc
fisttpl
adc
pop
scas
xchg
lret
mov
pop
fimull
cli
ret
popa
xchg
push
mov
xchg
int
mov
stos
or
fsubl
aas
dec
aad
shl
mov
jge
fidivl
in
rcrb
sarb
jnp
jecxz
les
push
pushf
js
cld
js
nop
ljmp
incb
mov
add
adc
xlat
movsl
bound
push
ss
mov
clc
movsb
js
xchg
addr16
outsl
sbb
adcl
and
stos
ret
cmp
sub
sub
dec
xchg
xor
xor
xchg
mov
lock
sahf
enter
ljmp
ds
cld
xlat
clc
push
test
aas
jp
mov
das
cmp
mov
pushf
xchg
adc
adc
inc
out
mov
enter
and
mov
pop
mov
sbb
les
out
scas
or
test
push
andl
dec
fdivs
lea
test
xor
pop
sbb
mov
sbb
or
xchg
ror
test
adc
fmuls
pushf
aad
ret
inc
push
aam
mov
mov
xor
shrb
in
loop
aas
inc
enter
sbb
cli
or
jo
mov
sbb
cmp
pop
xorb
add
sbb
fcoms
lret
bound
xchg
lret
add
rcrb
push
out
test
mov
jp
lods
sbb
xlat
fimull
mov
into
dec
jbe
jp
iret
add
xor
cltd
and
shlb
jbe
jnp
cld
mov
inc
mov
xchg
repz
scas
rcl
jecxz
lock
pushf
mov
mov
inc
push
sbb
pop
jae
sub
pop
pop
cmp
gs
lods
pop
leave
scas
lds
mov
scas
stos
adc
push
push
add
into
cld
pop
xchg
mov
sbb
lcall
mov
dec
mov
cld
hlt
mov
sub
mov
les
pop
xlat
ficomps
fcom
push
dec
cld
stos
cmpsl
add
or
cltd
mov
xor
pop
mov
rcr
jp
adc
test
mov
mov
jae
xchg
mov
or
add
rol
incl
in
int3
fs
inc
out
shr
mov
add
jbe,pt
ds
fmul
mov
test
or
adc
enter
inc
cmp
lret
cld
sahf
or
cli
lock
in
mov
faddl
hlt
or
stos
lret
ljmp
int3
pop
out
aas
pop
arpl
adc
addr16
das
ja
ds
cs
repnz
sbb
adc
out
push
pop
je
cmp
das
imul
repz
scas
enter
xor
ret
mov
cs
push
mov
jp
cwtl
push
add
mov
mov
add
fdivrl
stos
or
addr16
mov
ljmp
mov
pop
or
lret
ds
pop
mov
or
mov
aas
mov
fsubrs
jp
enter
into
mov
iret
mov
lret
es
sti
insl
sbb
sbb
add
test
sbb
sub
or
cmc
bound
pop
test
jge
lods
pop
add
dec
sbb
or
cwtl
into
divb
pop
dec
xchg
xchg
stos
pusha
clc
rcrb
hlt
mov
mull
push
pop
mov
clc
or
ret
mov
in
push
push
loop
nop
scas
push
sbb
lock
pusha
or
push
mov
ret
fucomp
cld
pop
mov
sbb
cmp
ds
aam
sarb
fisubl
add
adc
sub
into
test
push
mov
add
lcall
fdivr
jbe
xor
pop
pusha
fdivs
add
mov
pushf
xchg
xor
repnz
pop
int3
mov
cmp
lods
cli
xchg
ret
xchg
mov
dec
lahf
jmp
in
mov
inc
adc
mov
mov
xchg
lods
or
jle
xchg
ficomps
inc
mov
mov
mov
cmp
in
sarb
clc
push
stos
and
idivb
or
sbb
sbb
push
enter
sti
scas
xchg
add
add
mov
int
lock
out
mulb
add
adc
xor
lcall
andb
js
sahf
pusha
sub
or
push
ror
push
in
sbb
mov
push
in
push
jmp
xor
mov
loope
clc
dec
addr16
aam
cmpsb
adc
cmpsl
pop
ljmp
adc
add
cmp
sbb
repnz
cld
adc
das
add
mov
mov
mov
scas
xor
adc
add
add
rolb
mov
add
popf
inc
jnp
hlt
cmpsl
repnz
lds
fldenv
mov
jo
push
test
inc
mov
rcr
loope
mov
aad
mov
cmp
les
or
mov
scas
mov
subl
stc
data16
add
cmp
pop
xchg
rclb
inc
push
test
pop
adc
sbb
mov
ljmp
adc
jns
leave
icebp
mov
mov
push
js
or
mov
xchg
pop
idivb
jg
jg
mov
repnz
inc
dec
in
mov
repnz
inc
sbb
add
sub
inc
jp
mov
sub
adc
inc
mov
ret
fsubrl
rol
cmp
or
cmp
or
not
lret
xchg
jle
push
rorl
test
into
addr16
stos
testb
sbb
ret
lret
decb
pop
pop
jb
mov
dec
sbb
ret
sbbb
scas
fcomps
or
scas
int3
mov
in
cld
push
bnd
and
mov
stos
lock
cld
out
into
jo
mov
js
fs
sub
fcomp
adc
data16
mov
repnz
jbe
jg
mov
movsl
jo
ds
adc
je
inc
int3
mov
jg
aad
stos
fistpll
mov
and
dec
push
iret
ret
ret
fisubrs
sub
mov
orb
repz
xchg
ss
sbb
push
push
sbb
sbb
pop
jg
dec
mov
pop
hlt
fucom
fmuls
loop
and
add
mov
xor
loopne
scas
mov
cli
xor
push
and
xlat
add
mov
cs
mov
hlt
aam
cld
inc
adc
push
lock
rorl
add
mov
cmp
cmpsl
lock
inc
jbe
push
lock
mov
push
jns
inc
push
mov
mov
sub
mov
ret
nop
mov
adc
mov
xor
inc
mov
push
or
ljmp
pop
mov
aaa
add
sub
aad
int3
push
add
push
les
lods
aam
push
mov
xchg
mov
hlt
add
mov
xchg
int
and
jg
cld
mov
addr16
cs
into
lahf
cmpsl
notb
dec
or
fdivr
out
dec
out
repnz
push
rolb
shr
call
pop
cmp
popa
ljmp
fdivrs
cmp
rol
sub
fidivl
cltd
insb
mov
fadd
adc
push
scas
or
fdivr
cmp
aaa
lret
push
mov
jecxz
xorb
dec
or
fmuls
arpl
xor
dec
sbb
and
ds
testb
sub
nop
in
ret
repz
in
mov
adc
jno
inc
enter
les
cmpsl
in
inc
loope
jne
pop
rolb
fidivl
cmp
int
cltd
sbb
sbb
add
push
sbb
jmp
cld
outsl
adc
or
cmp
fisubrs
fidivrs
lock
inc
adcl
fmull
push
add
mov
mov
scas
add
mov
test
inc
adc
push
add
lock
push
or
fmull
sub
add
fnstenv
mov
dec
add
push
jp
mov
push
mov
enter
cmp
inc
lock
lahf
int3
mov
ds
push
push
sbb
hlt
nop
cmp
repnz
mov
ljmp
xor
aaa
mov
jns
jg
mov
mov
mov
in
or
loop
iret
jmp
ljmp
push
cli
pop
sbb
cld
ror
ja
mov
in
cmpsl
pop
push
jecxz
push
fwait
add
repnz
adc
int3
clc
mov
or
enter
jnp
bnd
iret
jle
add
xchg
xor
lods
int
rcrb
cmpsb
into
sarb
pop
mov
xchg
pushf
or
inc
xor
adc
xlat
push
sar
adc
out
add
pop
adc
gs
dec
push
and
or
ja
xchg
sahf
mov
inc
incl
enter
cltd
es
push
mov
mov
mov
xchg
push
add
rclb
push
cmpsl
push
and
fdivrl
and
jb
int3
jb
or
mov
xchg
inc
ds
xor
bound
movsb
mov
mov
cmpsl
ss
sub
mov
pop
ficoms
ds
push
mov
addr16
lret
push
inc
int3
mov
cmp
enter
lock
mov
inc
dec
xchg
test
inc
dec
mov
popa
scas
addr16
lods
mov
pop
pop
adc
mov
frstor
rclb
test
push
jp
or
inc
xor
xlat
movsb
lret
dec
lcall
mov
imul
push
clc
jge
mull
in
or
or
mov
jg
fadds
mov
sbb
lods
mov
pop
mov
mov
push
sbb
pop
jg
aam
lcall
pop
mov
rorb
out
mov
scas
jno
js
push
clc
iret
std
jo
mov
movsb
push
scas
add
das
pop
jne
sbb
cltd
mov
pusha
addr16
cmp
ljmp
sbb
sub
clc
bound
or
repnz
or
daa
dec
or
sub
outsl
mov
rclb
push
mov
push
cmpsb
jge
ret
adc
and
xorl
mov
scas
or
cmp
jnp
aas
lahf
dec
enter
mov
mov
xorl
into
lock
clc
in
mov
cs
in
pop
enterw
gs
xor
leave
aam
pop
lcall
adc
adc
dec
push
sbb
fadds
addr16
mov
clc
mov
mov
imulb
cmp
cwtl
cli
mov
mov
mov
stos
push
les
lret
mov
dec
mov
adc
clc
in
bound
pushf
scas
pop
push
jle
mov
xor
and
mov
aad
add
inc
movb
rcrb
or
lret
and
test
test
lock
fdivrs
mov
inc
mov
mov
push
ficoml
sbb
lock
cmp
push
rol
mov
xchg
jbe
and
xor
adc
mov
aam
jbe
enter
adc
fidivl
out
xchg
adc
fdivrs
mov
sub
dec
pop
gs
jecxz
lods
cmp
ss
mov
mov
std
adc
mov
test
cmpb
and
adc
mov
shlb
movlps
mov
out
mov
or
or
cmpsl
push
push
lcall
imul
lcall
ret
shr
addr16
lahf
push
mov
sbb
dec
push
xor
mov
lcall
popa
out
push
movsl
inc
and
cld
sbb
add
jp
cli
adc
arpl
adc
or
das
add
dec
cmp
pop
adc
mov
push
adc
stos
jp
xor
pusha
bound
rcr
sbb
ds
push
lods
sub
xorb
ljmp
cltd
adcb
cmp
fimuls
xorl
out
in
pop
imulb
in
jnp
sbb
adc
xchg
add
testb
mov
nop
adc
and
mov
or
mov
and
push
jns
scas
jp
out
and
mov
or
mov
ss
rcrb
cmpsl
push
sbb
push
lret
ss
cmp
or
test
fmuls
mov
sbb
sarb
mov
xor
lods
add
mov
mov
jp
lret
cs
dec
loope,pt
mov
mov
mov
clc
cld
cmp
adc
fdivr
std
fcmovb
xchg
pop
leave
cmc
xchg
mov
push
repz
aas
fucomp
xlat
lods
add
notl
clc
cltd
les
xor
les
stos
mov
out
outsl
cmpsl
jae
sub
stos
adc
les
sahf
cmp
dec
repnz
xor
mov
lret
outsl
out
lock
sub
add
push
std
xchg
imull
in
cmp
dec
mov
mov
test
mov
sbb
ljmp
fsubl
or
lahf
sbb
rolb
mov
mov
lret
push
push
push
cmp
fsubr
lock
mov
mov
loope
mov
dec
out
lea
adc
xlat
ror
xlat
mov
adc
push
add
xchg
fmulp
ss
scas
mov
sahf
in
sar
push
mov
jp
adcb
ror
leave
test
or
leave
push
sub
mov
inc
push
lret
repnz
rolb
push
cld
out
mov
mov
andb
fistps
sbb
add
data16
mov
sub
push
jnp
mov
inc
xorb
loopne
mov
ss
out
cs
push
mov
xor
or
andl
cmc
stos
xchg
imul
adc
push
push
ret
ficompl
adcl
jecxz
sti
cmp
movsl
fwait
sti
rcrb
dec
cmp
pop
add
mov
call
mov
pushl
int
cmp
scas
rclb
push
cmp
fnstcw
fcmove
push
push
mov
sbb
out
xchg
mov
mov
insb
scas
or
xchg
xor
cmp
add
lock
cmpsl
or
mov
sub
pop
or
fdivrs
push
push
jno,pt
sbb
test
out
scas
sarb
mov
mov
inc
cs
in
dec
sub
shlb
add
add
cmp
mov
push
jno
inc
mov
fdiv
mov
out
inc
fs
jecxz
daa
sahf
les
repnz
stos
mov
jg
and
iret
outsl
cmc
push
adc
push
outsb
sahf
add
mov
cmp
shl
or
adc
stos
lretw
insl
xor
shlb
lret
out
hlt
mov
inc
lock
in
pop
xchg
andb
les
fadds
aas
std
out
mov
jp
out
mov
movsl
int3
add
pop
add
scas
sarl
push
jbe
sbb
fcompl
aad
pop
movsl
adc
ret
adcl
mov
jge
inc
jb
data16
sarl
or
push
shl
divb
cs
xor
ljmp
mov
out
jb
cld
ret
xchg
mov
in
test
mov
xor
sbb
fcoms
push
inc
mov
andl
ffreep
lods
jp
lret
jb
pop
xchg
xlat
mov
mov
cmpsb
pop
aam
pop
lds
jno
out
stos
xchg
call
scas
aas
sbb
mov
lods
adc
vcmpps
push
popa
test
hlt
fdivl
enter
outsb
push
stc
das
stos
cwtl
sub
mov
inc
lock
js
mov
repnz
xlat
lahf
jge
xor
sbb
push
outsl
enter
jecxz
jp
xchg
xlat
fsubrs
adc
adc
inc
mov
mov
sbb
dec
dec
dec
mov
cmp
repnz
lock
mov
mov
adc
xchg
loop
or
hlt
mov
mov
out
cmpsl
movsl
popa
scas
pop
mov
ss
out
out
cmpb
lahf
sbb
int3
push
scas
out
lods
xlat
shlb
inc
sbb
fwait
jne
jns
ljmp
xor
addr16
lock
add
jl
cli
inc
jnp
lods
mov
jns
ret
lods
mov
inc
adc
negl
cld
psubd
mov
lret
sbb
inc
lahf
xlat
xor
lods
mov
pop
pop
fcomp
or
fwait
and
jmp
nop
pop
ljmp
sbb
jg,pt
pop
movsl
sub
jno
js
enter
cmp
inc
lods
pusha
ss
insl
into
pop
cld
cmp
addr16
and
test
iret
stos
jo
push
pop
icebp
adc
movsb
mov
cwtl
pusha
imul
loopne
psubusb
mov
mov
mov
lret
mov
ds
rcll
or
xchg
or
pop
pop
in
adc
mov
cs
xchg
sbb
jb
test
cmp
sbb
lret
fnstsw
mov
fcom
jmp
xor
or
cmpsl
mov
cld
nop
lret
neg
push
adc
enter
cli
inc
mov
inc
sub
lea
add
push
xchg
adc
out
cs
sub
outsl
mov
add
incb
mov
sub
fdivs
pushf
add
xor
fldcw
into
or
int3
es
outsl
insl
jg
aas
and
mov
or
mov
mov
lds
push
xchg
mov
mov
sbb
out
dec
cwtl
ja
inc
cmp
mov
xor
xchg
ret
out
js
jbe
lods
add
out
lock
sbbb
aad
fmull
mulb
testl
sbb
add
xor
push
lds
daa
imul
add
cmp
or
test
in
xor
cld
arpl
cmp
cmp
cmpsb
scas
cmp
std
mov
daa
ret
add
cmp
push
movsb
or
push
pop
hlt
mov
mov
fcmovbe
cs
cmp
ss
sbb
sbb
enter
in
cli
push
shlb
bound
pushf
inc
ret
rclb
in
leave
nop
jne
imul
push
in
aaa
pop
hlt
cs
cs
movsb
mov
lods
stos
xchg
jecxz
fwait
mov
sbb
out
lcall
cmp
pop
or
cmp
xchg
lret
in
xchg
push
fs
xor
pushw
cli
mov
cld
out
mov
out
stos
int3
and
test
mov
div
rorb
jb
cmpsb
lock
push
pop
push
cmpb
xchg
mov
test
pop
out
jmp
jb
cmp
sbb
mov
movsl
xlat
adc
mov
mov
jg
aas
aam
addr16
cltd
popf
mov
xor
faddl
sbb
mov
les
fstpt
sub
add
bound
add
sti
aam
imulb
sahf
mov
lods
fsubrl
mov
push
cmp
push
push
cwtl
faddp
enter
push
xchg
lret
out
cmp
mov
sub
arpl
add
adc
jne
stc
jo
or
sbb
in
mov
fnstsw
fidivrs
popa
scas
jb
mov
les
cmp
sbb
inc
sahf
dec
lock
inc
push
clc
jo
aam
mov
pop
imulb
lods
mov
in
enter
xchg
or
xchg
jl
cmpsb
sbb
bound
add
repnz
aam
lods
jno
hlt
js
xchg
mov
les
mov
jae
add
jle
mov
mov
inc
xlat
iret
xchg
mov
hlt
ret
mov
mov
adc
pop
push
cli
mov
leave
pop
test
lods
mov
jg
sub
or
mov
fdivl
out
imul
mov
rcr
adc
sub
sub
sahf
add
adc
add
repnz
sbb
fisubl
scas
outsl
imul
scas
adc
inc
adc
clc
sub
fs
repz
subb
mov
add
sbb
xchg
or
call
mov
shl
mov
out
popf
stos
ljmp
fistps
scas
mov
shlb
and
push
sub
outsl
dec
push
mov
fmull
lods
rorb
adc
ss
xchg
add
mov
loopne
scas
push
push
push
loopne
inc
nop
insl
cmp
xor
int3
clc
inc
mov
fisttps
sub
inc
add
jg
ja
jb
js
dec
sbb
xor
sbb
mov
adc
lahf
ds
adc
and
pop
bound
fs
add
enter
pop
inc
mov
lret
scas
cmp
call
jnp
repnz
cmp
or
adc
fimull
add
fsubl
add
cmp
lds
std
aaa
notl
sbb
ljmp
enter
mov
add
adc
and
pop
cmpsb
lret
sbb
ficompl
push
subb
xor
sti
mull
stos
or
mov
test
mov
lock
push
int3
sbb
or
rcrb
push
loop
les
inc
push
xchg
cmp
jp
pusha
cwtl
sbb
mov
jae
mov
roll
sti
out
leave
push
add
xchg
mov
ss
adc
xchg
ss
xchg
sti
or
ficoms
mov
fistps
push
xchg
pop
dec
mov
push
fidivrl
outsl
sub
addl
xchg
adc
clc
lock
in
imul
arpl
pop
repz
fwait
mov
mov
jne
aas
push
out
mov
lahf
adc
fisubl
mov
insb
ljmp
outsb
fimull
rdrand
sbb
cmp
sub
lret
jno
leave
xchg
jno
stos
adc
and
popa
mov
jo
jb
mov
mov
popa
fs
jb
insb
pop
cmpsl
fmuls
js
pushf
push
ror
les
mov
cwtl
inc
sbb
loope
add
mov
sub
jp
aas
cli
fisubl
clc
cli
push
ret
outsl
out
and
push
rcll
cmp
les
xor
aas
dec
xchg
ds
js
mov
fs
sbb
sbb
ret
add
das
push
inc
repnz
sub
fwait
mov
leave
popf
dec
lret
xchg
pusha
mov
fst
movsb
push
mov
jo
mov
ret
pop
push
aam
fisubrl
jg
mov
lret
push
stos
mov
adc
or
xchg
inc
xor
sahf
shlb
add
imul
push
dec
jb
xchg
sub
adc
cltd
xchg
decb
mov
push
add
cld
mov
clc
jle
push
adc
push
ficoml
fisubrs
xor
cwtl
fdivrs
ret
xor
mov
pop
sbb
add
mov
sbb
enter
inc
sub
out
cmp
dec
mov
sbb
xchg
hlt
inc
push
inc
adc
cmp
add
sbb
mov
ret
nop
idivl
inc
mov
mov
int3
movsl
adc
or
mov
or
cltd
jno
add
push
add
scas
dec
rclb
daa
out
sub
stos
pop
fdivs
pop
sbb
clc
push
mov
fsubrs
push
sub
sub
dec
aam
mov
xchg
xor
int3
mov
xor
push
scas
and
mov
leave
bound
sbb
shl
xor
xorl
lret
out
sbb
sbb
mov
inc
pop
pop
into
mov
xorb
mov
xchg
add
pop
cmp
jb
adc
jbe
dec
rcl
out
repnz
add
cmp
fnstenv
xor
mov
stos
aam
les
popa
int3
ljmp
movsb
fsubl
or
ret
add
loope
mov
imul
loopne
fildl
fisttpll
mov
pop
fsubl
pusha
adc
lahf
sar
xor
jb
lock
int3
push
push
addr16
daa
stc
addr16
push
jmp
mov
dec
and
mov
cs
aam
mov
adc
divl
into
out
fsubrs
add
jle,pt
pop
data16
cmpsb
xor
xchg
or
popl
xchg
fcmovb
mov
cmp
jb
jp
nop
pop
xor
lret
pushf
xor
mov
fdivr
enter
andb
fidivrl
inc
cmp
sbb
repnz
dec
mov
fcmove
fisubrl
test
mov
imul
fbld
inc
ss
push
mov
or
repnz
or
xchg
xchg
mov
lds
xor
jmp
push
sbb
sbb
jb
lods
int3
inc
aam
sub
clc
push
dec
fdivrs
lret
cli
rclb
hlt
push
inc
xchg
into
cmp
mov
imul
jo
fadds
pusha
pop
aam
mov
push
mov
dec
push
testl
arpl
cld
sub
stos
out
movsl
or
xor
enter
inc
mov
dec
inc
xor
xchg
mov
cmp
or
enter
xchg
cwtl
cs
out
inc
stc
nop
arpl
imul
mov
push
lea
xchg
fidivl
into
xchg
push
xor
out
sub
add
lods
or
mov
adc
add
sbb
cld
xor
xor
neg
mov
adc
fwait
std
push
sahf
mov
jb
ret
rorb
jp
ss
les
and
mov
pop
fmul
lahf
stos
or
ljmp
lahf
sub
stos
les
xor
inc
mov
shrl
push
int3
fwait
dec
into
add
mov
cmpsl
leave
sub
ja
inc
ds
repnz
mov
push
adc
push
icebp
mov
jg
out
adc
out
jmp
leave
mov
adc
repnz
fnstsw
sbb
or
mov
into
xor
ss
popf
mov
cmp
icebp
imul
dec
inc
mov
les
outsb
jnp
or
or
addl
sbb
mov
int
mov
add
aas
fdivl
into
adc
or
dec
jg
pusha
ret
inc
ljmp
jmp
cld
mov
or
mov
rcrb
icebp
ss
dec
neg
mov
popa
loope
aam
popf
pop
mov
stos
cli
mov
adc
sbb
adc
rcrb
or
bnd
push
lods
mov
and
mov
xchg
fcmove
mov
xor
out
fwait
movsl
into
ficoms
cs
mov
lock
lret
mov
mov
push
or
push
fidivrl
pop
ljmp
xlat
mov
gs
fstps
xorb
adc
ret
decl
inc
hlt
sar
sbb
xor
insb
mov
out
fdivrp
push
sub
ljmp
mov
mov
clc
out
xor
ljmp
sbb
mov
aam
sti
mov
xchg
clc
push
cmp
sbb
jg
sub
fcmovbe
push
jecxz
inc
sbb
shl
gs
mov
int3
push
xchg
mov
aas
lahf
add
clc
pop
and
push
aam
sbb
ss
sahf
sub
mov
add
push
stos
cmp
sub
adc
or
add
filds
jno
sbb
push
push
sbb
addr16
lahf
jo
shlb
ljmp
sub
int
adc
push
clc
notb
mov
pusha
imulb
xor
jae
sbb
popa
add
out
xchg
mov
repz
fistps
sbb
lock
enter
inc
mov
divb
sbb
hlt
scas
push
push
sbb
adc
out
mov
jo
mov
push
add
lcall
cmp
push
inc
hlt
outsl
inc
cwtl
idiv
mov
cs
inc
xchg
cmpl
mov
movsb
sbb
sbb
fiaddl
jmp
cli
nop
lret
ss
cmp
ret
sbb
pop
mov
fidivrs
jg,pt
mov
add
pop
xor
enter
xor
fnstcw
pusha
mov
xor
cli
setge
mov
fcomps
orl
movsl
cli
dec
sbb
cld
aas
push
shrl
mov
jb
orb
pop
mov
lods
ds
in
cli
leave
xchg
add
pop
test
sbb
adc
sbb
sub
jle
xchg
insl
mov
lret
popaw
mov
sub
int3
cmp
mov
add
jno
repnz
test
inc
mov
add
push
or
sub
adc
xlat
fisubl
mov
cmp
sbb
inc
enter
dec
je
aam
mov
int3
loope
decb
mov
jnp
jp
push
in
sub
push
jb
js
out
rcrl
sbb
fsub
loope
sub
lock
scas
loope
xchg
push
cs
les
sti
shlb
stc
mov
cli
lcall
cs
dec
cmp
add
cmpsb
jle
adc
aas
mov
cmp
mov
cmp
unpcklps
enter
lods
mov
mov
ljmp
add
repnz
std
cwtl
adc
mov
lahf
js
andb
out
addr16
add
sbb
mov
das
mov
cmp
jno
jae
adc
jb
sub
mov
dec
cmp
cs
aas
xchg
int3
push
cli
lds
mov
push
ficompl
push
shll
scas
mov
or
sbb
mov
cmp
xlat
xchg
push
pop
dec
test
hlt
push
ljmp
orb
stos
sbb
js
sahf
mov
mov
adc
aas
adc
sub
das
mov
scas
mov
push
push
stos
fsub
cmp
icebp
filds
testb
add
xor
dec
sub
or
leave
or
pop
shr
test
jp
xor
dec
fistl
mov
scas
mov
xor
sbb
aad
push
into
addr16
jmp
push
out
and
test
aas
mov
mov
cmpsl
add
lds
cld
cmpl
cmpl
pushf
push
lcall
cs
jb
bnd
xor
xchg
cmpsl
fidivrl
sub
ds
mov
lret
xchg
xor
dec
sbb
add
mov
lods
xchg
push
shrb
mov
ret
out
lret
cmp
cmpsb
xchg
bound
clc
mov
ja
dec
not
add
mov
jp
pop
add
adc
jo
jb
adc
push
sbb
rorb
popa
sti
shlb
inc
ss
scas
pop
or
mov
jae
lcall
push
ljmp
cld
ret
sbb
pusha
shr
aam
add
cmp
lret
push
mov
xor
mov
orb
or
mov
lods
cmp
adc
popf
jecxz
push
or
lock
lods
dec
fwait
movl
cmp
or
inc
outsb
loopne
adc
mov
nop
test
inc
cmp
lea
in
mov
xorl
inc
pmaxsw
xor
out
in
int3
pop
sbb
add
int3
shll
out
inc
pushf
hlt
out
or
enter
imul
sbb
and
shr
inc
pushf
cmp
xor
xor
out
mov
lret
notb
adc
push
and
aam
fs
cmpsl
or
and
push
xchg
add
sarl
sub
and
add
leave
faddl
push
fadds
aam
or
lods
cmp
lods
les
mov
ret
shlb
cmp
fsubrs
or
testb
rcrb
pop
aam
xor
stos
stos
fsubrl
enter
add
imul
sub
aam
push
sbb
xchg
in
mov
mov
movl
fsubrs
sbb
decb
mov
lds
push
imul
cwtl
sbb
lock
stos
cmpsb
and
add
aas
lahf
jp
cmp
test
mov
and
sbb
outsl
int3
test
lock
mov
mov
divb
rorb
mov
rol
pop
mov
cmpsb
clc
jnp
popa
mov
add
mov
push
jecxz
shlb
cmp
push
popa
lods
mov
mov
int3
addr16
jl
xlat
mov
loopne
test
and
sub
dec
xor
xlat
and
and
test
push
addr16
fdivrl
sub
add
ret
clc
in
sbb
cmp
xor
add
hlt
xchg
sbb
icebp
mov
mov
xor
mov
faddl
cmpsb
mov
mov
or
addr16
fmuls
pop
insb
inc
ljmp
les
lret
cmpl
idiv
push
xchg
in
fmull
xor
push
mov
cld
cmp
mov
sbb
and
or
int3
outsl
push
and
enter
mov
repnz
jp
shlb
outsl
jne
lret
mov
xchg
xchg
pop
rcrl
cld
sbbl
stc
incb
xchg
mov
sbb
dec
lds
sbb
scas
mov
push
cmp
mov
xchg
js
or
nop
xor
pop
push
scas
cs
mov
sub
add
movsb
mov
clc
xchg
mov
add
arpl
nop
xchg
hlt
fdivrs
push
adc
cmp
mov
popa
repnz
out
in
insb
mov
push
ret
mov
add
push
ds
out
push
xchg
inc
push
jp
data16
enter
mov
push
lock
and
add
xor
cs
mov
loope
aam
aas
dec
mov
sbb
cld
rorb
add
jae
jo
cmpsb
test
scas
push
push
push
repnz
adcb
nop
sbb
xor
mov
mov
mov
pop
inc
add
in
sbb
lods
push
mov
movsl
loop
cmp
test
repnz
lock
into
dec
sahf
or
lods
rcrb
mov
pop
ja
fsubrl
repnz
imul
pop
sbb
xchg
mov
sbb
jnp
cmp
fwait
sub
push
and
jb
jb
pushf
or
fcmovbe
xor
or
stos
mov
int3
mov
les
or
xchg
sarb
ss
xor
shr
cmp
jae
fs
jb
jp
jb
mov
push
mov
inc
sbb
sbb
fdiv
cmp
sbb
cld
mov
adc
repz
mov
les
hlt
popf
rcl
cli
mov
in
xor
dec
pop
xchg
inc
nop
dec
fdivr
or
dec
xchg
jl
add
movsl
adc
push
mov
xchg
push
arpl
ret
adc
xor
out
fsubrl
fnop
jnp
push
lahf
bswap
mov
mov
int3
or
inc
gs
jge
fdivrs
clc
xor
inc
dec
mov
dec
mulb
add
sbb
or
inc
js
sbb
shr
in
sbb
ja
aam
cwtl
neg
or
inc
jge
int3
mov
test
xor
mov
or
in
push
dec
ss
jp
adc
shlb
mov
into
pop
push
adc
add
js
enter
hlt
mov
shrb
ljmp
mov
xchg
adc
sbb
cmpl
add
fstl
ds
cmpsb
xor
xchg
mov
out
in
cmpsl
push
push
jp
xchg
mov
xchg
test
jae
push
fptan
mov
xlat
dec
or
fsts
pop
push
clc
or
stc
jae
orb
out
flds
xor
adc
enter
mov
sbb
fadds
rolb
mov
add
or
popf
fsubrl
cli
and
mov
mov
push
lock
lahf
cld
stos
xor
and
and
mov
pop
push
mov
stos
popa
out
jmp
mov
sbb
jno
jp
mov
add
repnz
cli
jb
xor
fwait
mov
cltd
cmp
sub
xchg
cmp
lcall
cmp
gs
aam
sbb
mov
push
sbb
adc
fmuls
bound
add
scas
bound
js
fwait
or
mov
pushf
sbb
cmp
sbb
xlat
xchg
or
pop
ja
jp
out
sub
push
add
xchg
xchg
add
mov
das
pop
in
lods
cmpsb
movsl
xchg
or
add
insb
lods
sbb
cld
sbb
xorl
cmpsb
push
jbe
adc
mov
add
scas
pop
loope
ljmp
xchg
mov
inc
repz
ret
xor
sbb
xor
lock
jp
shlb
fwait
or
and
push
lock
mov
out
cmp
cld
push
in
xor
lea
fxch
dec
xor
add
or
sub
hlt
add
insb
outsb
fdivl
fimuls
cli
nop
jp
lods
bound
mov
cmp
xor
stos
into
int3
ret
cs
cmp
repz
mov
or
pop
push
stos
push
lock
loop
bound
and
mov
mov
faddl
sbb
ficoms
ss
pop
sbb
pop
or
out
inc
jo
add
mov
fsub
sbb
mov
adc
sbb
fcmovbe
les
int3
pop
idivb
and
rorb
bnd
insb
sub
hlt
fwait
inc
or
mov
jecxz
mov
sbb
xchg
xchg
mov
or
mov
cmpsb
fisubl
ss
sbb
push
xor
movsl
idivb
lret
mov
das
xor
push
pop
xor
mov
mov
clc
jno
xorb
rcr
icebp
in
jp
push
xor
mov
push
pop
sbb
xchg
clc
ljmp
inc
int3
addr16
int
xchg
test
addr16
gs
inc
dec
xchg
ljmp
sbb
imul
sahf
test
sbb
xchg
push
fcomps
shlb
bound
aam
lds
mov
pop
xor
outsl
aaa
addr16
jmp
mov
lods
fiaddl
pop
es
sbb
mov
sbb
outsl
xor
aam
inc
clc
cltd
mov
addr16
scas
hlt
push
mov
fdivl
sbb
mov
mov
fdivs
sahf
cli
scas
lods
imulb
scas
mov
dec
aam
adc
and
xchg
cmp
sub
in
mov
leave
cmp
scas
pop
inc
cmp
and
cs
enter
rorb
inc
inc
fxch
out
divb
mov
das
fbstp
or
xchg
gs
je
sbb
clc
xor
mov
rsqrtps
jb
leave
pusha
rclb
jg
aas
sub
mov
mov
inc
push
fdivrl
add
xchg
fcom
mov
adc
push
ret
enter
hlt
pop
cmpsb
push
inc
xchg
dec
dec
jg
inc
add
scas
jbe
or
mov
xor
xchg
cs
adc
iret
repnz
cmp
xchg
sbb
sub
mov
lea
scas
fdivrs
pop
dec
xchg
inc
mov
cmp
jo
inc
adc
push
cmpsl
mov
mov
push
fdivrl
sbb
pop
int
mov
aaa
cwtl
test
aam
xchg
or
xlat
int3
stos
dec
and
rorb
enter
mov
mov
mov
cmpsb
add
dec
pusha
stos
cmp
fcmovb
mov
inc
xchg
push
xchg
lea
das
cmp
sarb
loop
sbb
out
adc
add
ret
lods
or
mov
jne
xchg
rol
loope
fmul
lahf
inc
or
adcl
out
pop
cmp
push
adc
push
adc
ret
xor
sub
adc
push
mov
cli
push
push
adc
lea
mov
sahf
push
clc
fdivrl
aam
cltd
mov
xchg
mov
cmp
into
icebp
xor
in
fwait
cmp
add
cld
cltd
sahf
mov
repnz
cs
imul
cli
popf
mov
add
lock
nop
pop
mov
sbb
les
dec
pop
testb
jp
rcl
sbb
jmp
outsb
js
clc
push
dec
pop
cmpsb
cmp
hlt
jg
push
adc
adc
sbb
pop
cli
unpcklps
dec
sahf
mov
push
adc
mov
dec
mov
push
fdivl
pusha
add
into
dec
xor
sbb
popa
adc
xor
aam
stos
cli
xchg
je
gs
adc
lock
jecxz
popa
or
or
movsl
movsb
and
inc
cmp
mov
in
faddl
fwait
mov
jmp
pop
jo
pop
adc
mov
out
add
mov
int3
jp
ds
test
inc
ljmp
mov
or
push
subb
js
lock
mov
sbb
data16
or
leave
leave
lock
mov
loopne
cs
js,pt
mov
xchg
and
clc
into
and
xor
inc
out
cmp
enter
mov
cmp
fidivrl
cmp
mov
mov
ss
mov
stos
or
fdiv
rclb
stos
arpl
mov
fdivl
jmp
inc
mov
fnsave
xor
pop
cmp
push
addr16
pusha
repnz
out
xchg
pushf
mov
push
sub
ds
dec
xor
jecxz
loop
dec
mov
mov
cmpsb
cwtl
push
in
jp
cwtl
dec
xor
ss
idivb
loop
dec
xor
je
mov
sbb
mov
fsubs
lcall
fcomps
push
or
filds
adc
xchg
add
enter
into
pop
push
add
les
dec
mov
or
mov
mov
ret
cs
sbb
mov
or
fsubl
ds
or
inc
push
sbb
or
into
lcall
mov
pop
icebp
dec
cmpsl
push
jb
mov
les
mov
mov
ret
loop
cld
xchg
xchg
sub
cmpsb
mov
jp
inc
dec
sub
addr16
dec
push
lea
jmp
fdivs
xchg
jbe
insb
mov
add
mov
sahf
daa
mov
sbb
add
fst
in
sarl
adc
sbb
mov
mov
or
mov
or
mov
sbb
mov
or
out
mov
xchg
outsl
xor
xor
adc
adc
cmpl
sub
or
push
push
fisubl
dec
jg
int3
aas
cmc
push
adc
inc
sbb
inc
cwtl
aaa
fcmovu
push
sbb
push
into
fsubs
add
pop
or
stc
lock
fdivrs
sbb
xor
mov
cmp
mov
popf
sub
faddl
push
or
inc
xchg
mov
jecxz
jnp
scas
mov
sarl
pusha
loope
mov
add
push
scas
or
mov
mov
mov
mov
and
or
xlat
push
and
sbb
hlt
pop
leave
insb
xchg
repz
in
cld
out
or
push
pop
jo
lcall
sub
mov
xor
inc
fisubrl
mov
loop
fs
sbb
push
pushf
adc
into
inc
pop
out
mov
xor
mov
mov
aam
lahf
cmp
mov
ror
mov
mov
rorl
out
add
cld
loopne
stos
ss
ja
into
cmpsb
push
xchg
sahf
xor
push
ret
ds
clc
ljmp
xorl
cmp
xor
fcoms
sbb
mov
push
aas
movsb
jo
add
adc
fcompl
lods
incb
enter
push
add
mov
sbb
cmp
or
adc
cltd
jns
sub
fidivrl
stos
inc
sub
out
ja
sub
or
push
adc
inc
stos
pop
sahf
mov
mov
out
lock
fisubl
les
addr16
push
and
jo
or
cltd
cmp
mov
fidivs
pop
mov
mov
js
ret
inc
mov
movsb
stc
jbe
and
int3
mov
lret
les
outsl
mov
sub
xchg
push
es
sub
mov
addb
xchg
inc
inc
stos
mov
cmp
popa
inc
sbb
jo
nop
dec
scas
mov
fnstcw
mov
mov
pop
rcr
mov
cmp
enter
loop
aas
xchg
jecxz
inc
iret
push
enter
dec
outsb
push
mov
sbb
lock
fidivl
les
xor
xchg
sbb
pop
mov
dec
jno
data16
into
mov
sar
fistpl
insl
xchg
adc
and
out
out
addr16
inc
push
mov
xchg
or
mov
ds
xchg
leave
lock
sti
rolb
icebp
adc
jo
inc
mov
inc
fidivrl
psubusb
add
mov
lds
in
imul
push
repnz
and
pushf
mov
sbb
mov
lods
jnp
cld
into
scas
das
sub
les
aaa
sbb
movsb
aad
pop
ror
aad
rep
mov
inc
jbe
cmp
add
mov
hlt
repnz
push
clc
sbb
cmpb
insl
xchg
int3
shlb
enter
mov
cwtl
lahf
cli
aam
adc
jle
mov
pushl
push
jno
cli
iret
lret
mov
neg
sbb
in
jne
inc
add
mov
or
mov
jbe
outsl
mov
xor
mov
xchg
imulb
cwtl
clc
movb
sbb
sub
out
pop
sarb
xchg
scas
xor
out
jmp
fcompl
or
icebp
fmul
fisubrl
pop
negl
xchg
mov
mov
lods
rol
out
in
jg
outsl
ja
movsl
mov
mov
adc
loop
lods
test
push
rolb
jnp
lock
xor
dec
jg
push
cs
push
push
jp
js
xchg
sub
or
sar
movsl
stos
cmpsb
and
xor
sub
ljmp
inc
fwait
cmpsl
lret
aam
jmp
mov
movsb
xchg
xchg
hlt
insb
fwait
js
repz
and
int
xor
inc
ja
ja
adcl
das
sbb
cli
adc
lods
inc
sahf
xor
hlt
fcmovu
push
lds
sbb
push
mov
jbe
daa
pop
xchg
repnz
cmp
jb
pop
sbb
xchg
ret
dec
mov
xchg
enter
sub
mov
gs
xchg
fs
mov
dec
rcrb
cmp
fisubl
movsl
lods
cmp
ret
leave
ljmp
hlt
pusha
lock
lods
push
testb
xlat
out
mov
mov
fwait
sub
sbb
adc
clc
add
push
mov
xchg
popa
cmp
hlt
adc
mov
enter
mov
fwait
mov
sbb
sbb
call
dec
add
clc
or
test
das
lods
sbb
leave
sub
insl
mov
dec
cwtl
pop
xor
inc
sbb
or
sbb
fimull
push
or
cmp
andl
cmp
xor
out
icebp
sbb
jbe
push
sub
pminsw
inc
mov
add
popa
cmp
cs
push
sub
sbb
repnz
out
add
jg
push
dec
fimull
inc
mov
fsubrs
out
push
or
fnstenv
stos
mov
andb
pushf
or
inc
sarb
fcoml
int3
inc
cli
out
clc
mov
loopne
push
or
int
adc
shl
fs
mov
fsubl
shlb
cmpsb
add
popa
lea
lods
lods
cmp
movl
int3
or
ljmp
fsubs
lcall
dec
cs
xchg
jecxz
push
out
scas
adc
loop
cmpsb
cmp
cmp
xchg
call
jmp
iret
loopne
or
enter
sbb
sub
ja
jbe
fdivl
push
cld
scas
mov
adc
xor
stos
xchg
jp
sbb
out
ljmp
push
mov
and
sti
jo
lret
lcall
cmp
pop
inc
xor
add
jb
cli
dec
and
aas
push
push
icebp
aas
popf
and
or
rorb
push
js
arpl
sbb
jecxz
inc
cmpb
inc
scas
and
repnz
jo
mov
mov
sub
shr
adc
out
push
push
adcb
aas
popf
aam
repnz
jbe
xor
outsl
xchg
mov
mov
pop
rcrl
lcall
sbb
sbb
adc
cmp
loope
or
int3
push
xor
push
adc
mov
out
arpl
push
out
cmpsb
push
into
push
pop
jmp
adc
adc
int
push
sarb
popf
divb
outsl
negb
cld
fmul
inc
scas
ljmp
enter
inc
jo
dec
subb
testb
in
pop
lea
mov
inc
jecxz
sub
mov
inc
shl
fiaddl
jge
sub
pop
jp
xor
push
cs
cwtl
ss
ret
clc
das
cmp
mov
mov
les
pop
adc
fwait
into
fidivl
pop
stos
xchg
cmp
xchg
popf
inc
sbb
and
sbb
inc
out
ds
push
faddl
jbe
pop
addr16
mov
das
ljmp
mov
sbb
mov
push
xor
lock
lcall
fiaddl
jg
das
lea
mov
dec
clc
adc
js
and
int3
addr16
inc
in
data16
shlb
icebp
addr16
gs
dec
jmp
lods
xor
mov
aam
es
jb
sbb
loopne
jo
xchg
sbb
jbe
scas
cs
sahf
iret
push
adc
enter
rcrl
mov
les
fmuls
int3
in
dec
xchg
mov
shlb
inc
push
lcall
jnp
cmp
mov
push
push
outsb
push
xchg
test
les
xchg
inc
push
shrb
sti
lock
mov
stos
push
sbb
fwait
sbb
pop
hlt
mov
xchg
xchg
fwait
mov
jb
leave
lock
out
cli
xchg
ret
push
or
jg
or
inc
cmp
inc
mov
sbb
sub
in
push
cmpsl
addr16
addl
jbe
sub
bts
adc
mov
sub
addr16
loopw
push
inc
stos
lret
mov
stos
mov
jge
imul
mov
stos
sti
addr16
into
push
shrb
xor
xor
jmp
cmpsl
cli
xor
cmpsl
bts
adc
mov
stos
mov
addr16
loopw
push
inc
stos
int3
addr16
sti
cmp
jge
imul
mov
stos
std
cmpsl
cmpsb
ret
loop
and
ss
pop
testb
testl
mov
adc
fsubrl
in
mulb
repnz
sbb
cmp
pop
out
push
adc
rcrb
adc
ja
sbb
addr16
bound
out
les
sahf
aam
into
or
push
mov
push
cmovs
cmp
stos
ficoml
aam
add
mov
xor
mov
lret
mov
jecxz
fs
fiaddl
inc
lods
xchg
cmp
and
into
subl
enter
shll
dec
aam
mov
lods
mov
xchg
and
lahf
jb
adc
hlt
mov
into
ja
sub
xor
push
ljmp
int
dec
repz
dec
dec
cld
or
cmp
mov
or
inc
lcall
cmp
aad
sarb
into
sarb
sub
sti
lret
sbb
repz
lret
lahf
sarb
mov
sub
mov
push
mov
rorb
les
lahf
jecxz
xchg
mov
cld
dec
fildll
ss
adc
divb
jnp
xchg
pop
cli
cwtl
xchg
mov
push
pop
addr16
add
push
lret
push
pop
xlat
stos
je
pop
int
cld
addr16
dec
push
xlat
pop
sbb
inc
xlat
and
mov
aaa
repnz
xlat
mov
sbb
and
add
and
cmp
out
dec
ljmp
dec
pop
xchg
dec
pop
push
mov
jmp
add
xchg
or
sbb
pop
xorl
mov
or
or
push
add
test
fisubrl
xor
ss
xlat
push
push
rorb
outsl
inc
jmp
addr16
iret
test
rorb
addr16
rorl
addr16
orb
dec
dec
aaa
mov
push
dec
mov
cmpb
daa
loope
cmpsb
push
ds
mov
stos
cld
aaa
aaa
leave
pop
aaa
test
sbb
push
jnp
fwait
int
test
cs
addr16
pop
ret
mov
arpl
jge
jmp
mov
data16
adcl
daa
loop
les
xchg
ja
inc
lock
jns
loop
shrb
shll
loop
shlb
push
or
dec
dec
aaa
push
add
dec
push
ret
push
inc
shlb
call
mov
push
inc
lret
mov
adc
sarl
inc
cmp
stos
les
lret
ja
jno
filds
mov
aad
leave
and
inc
addr16
loop
mov
or
pushw
test
mov
or
add
pop
test
scas
lds
movsb
aas
psubq
cs
or
test
pushl
and
loop
leave
adc
scas
add
xchg
lock
mov
ss
movsl
jp
pushf
xchg
enter
pop
js
rcr
sub
adc
mov
outsb
cwtl
scas
clc
sbb
in
cmp
and
cs
jne
ds
in
mov
add
clc
cmp
and
lret
cmc
call
bound
and
repz
mov
inc
mov
lret
fildll
mov
mov
into
pop
pusha
mov
mov
rolb
pop
and
xor
pop
mov
sub
and
push
ss
mov
aam
mov
mov
sarb
mov
sbb
outsl
nop
pop
and
mov
es
insb
jl
adc
dec
sbb
cli
pop
rclb
mov
pop
clc
dec
sbb
pop
cmp
pop
test
cmp
mov
cmpsb
ss
in
xor
cmp
je
xor
lods
sub
jnp
test
es
sti
mov
es
mov
mov
push
rol
xchg
enter
into
nop
aam
fdivs
mov
sbb
mov
fbld
data16
cmp
cmp
inc
ss
xor
pop
xor
xor
sub
mov
xor
in
xlat
cmp
lods
xor
decb
xor
sbb
mov
inc
out
dec
jbe,pt
cmp
out
lods
cmp
xchg
xorl
aam
dec
jbe
sub
loop
jbe,pt
cmp
jg
and
daa
xor
xlat
xor
xor
jno
ja
jbe
cmp
xlat
cmp
cmp
lods
xor
cs
ds
jbe
cmp
cmp
ss
loop
xor
inc
dec
jbe,pt
cmp
ss
mov
inc
dec
dec
jbe,pt
cmp
sbb
mov
daa
xor
aaa
lea
ficoms
imul
scas
xchg
mov
push
xor
jp
or
lea
sub
cmp
rorl
and
cmp
push
fstpt
in
sbb
aam
pop
cmp
adc
push
aaa
pop
sbb
pop
push
mov
aad
push
sub
fldt
or
ds
dec
subb
repz
push
fidivl
cli
imul
add
and
pop
test
xlat
sub
lret
rol
push
ss
push
pop
aaa
pop
lret
into
aaa
pop
shlb
pop
aaa
pop
fidivl
pop
fidivs
pop
or
pop
repnz
popa
bound
ja
out
cmp
push
pop
xor
cld
or
cld
push
in
cmp
test
pop
fidivrl
or
xor
mov
adc
push
mov
aam
or
mov
aam
or
out
out
aam
or
out
sbb
das
push
xor
insl
aaa
mov
aas
push
lcall
int3
loopne
mov
xlat
ds
pop
ds
outsl
or
aas
xor
xor
sbb
cmp
xlat
cmp
push
or
add
sbb
or
aad
adc
sub
push
mov
and
les
mov
jns
mov
mov
sarb
pop
cmp
dec
xchg
aaa
mov
sub
aad
bound
loop,pn
cs
lds
push
cs
loop
cs
aaa
inc
push
cs
sub
push
cs
add
jae
mov
push
cmp
sti
cmpsl
cmp
out
xchg
push
xor
mov
adc
jo,pt
and
daa
cmp
xlat
cmp
pop
cmp
cmp
rcrl
dec
xor
es
cmp
sbb
fwait
int3
stc
xchg
xor
xor
aad
fwait
xor
test
cmp
arpl
ljmp
jg
daa
xor
ret
jg
xor
xlat
xor
push
fstpt
adc
xlat
cmp
dec
fistl
or
mov
adc
or
in
pop
jp
enter
test
and
xor
notb
or
cmp
daa
cmp
lods
xor
jg
daa
xor
xor
ret
gs
iret
or
fiaddl
mov
mov
mov
jg
push
imul
push
imul
bound
push
aam
mov
inc
cmp
in
mov
adc
pop
cmp
in
lret
inc
jno
push
ss
jle
cmp
loop
cmp
mov
mov
push
push
or
mov
jbe
sbbb
jae
dec
xorb
xor
xchg
ret
sub
lahf
sub
and
stc
dec
stos
ret
pop
jecxz,pt
andb
and
dec
mov
into
call
dec
lea
adc
setl
cltd
mov
repnz
cwtl
mov
aam
stos
inc
lahf
pop
arpl
cld
shlb
sub
mov
cli
pop
outsb
inc
push
xor
je
mov
xchg
sub
es
add
jge,pn
xor
cmp
inc
out
sbb
sbb
les
loopne
xchg
stos
lock
and
push
test
in
fsts
inc
push
sub
cmp
clc
lcall
addr16
cmova
jle
mov
mov
jnp
ljmp
stos
xor
aam
je
xlat
dec
jo
into
arpl
jne
sub
push
pop
lods
ja
xor
aas
lahf
test
mov
lret
jae
jno
dec
lcall
xorb
push
dec
ret
xchg
subl
jb
cmpsl
inc
je,pn
adc
cmpb
push
fmull
push
mov
jp
mov
dec
xor
iret
insl
fsubrp
jg,pn
enter
push
scas
sahf
inc
stos
mov
xchg
movsl
ret
push
ret
fstpl
xor
fiaddl
arpl
or
hlt
push
subb
call
push
push
add
cli
cmp
or
ja
ss
into
rcrb
add
mov
loop
mov
dec
out
fsub
repnz
popf
aam
add
sub
out
imul
hlt
cmp
addr16
jbe,pt
cmp
push
adc
mov
jg
testl
push
cli
lret
inc
add
cli
sub
sub
cmp
push
sub
mov
stc
xchg
mov
out
xor
fwait
push
jbe
pop
dec
imul
mov
jb
mov
out
lods
nop
jl
cli
add
jg
arpl
inc
mov
bnd
fwait
adc
sub
pushf
add
jg
xchg
push
aas
pop
cli
lret
cs
cmp
dec
fbld
insb
jmp
lahf
popf
push
jbe
push
cli
sub
ret
cmp
pop
jge
xlat
popf
mov
add
fistps
cmp
push
xor
cmp
ret
jp
jno
je
or
mov
decl
cs
sbb
add
push
push
add
mov
negb
pop
cmp
insl
inc
mov
xor
daa
or
aas
jns
aam
inc
lcall
pop
mov
cs
iret
cmp
outsb
cli
test
push
jne
push
mov
jmp
in
push
data16
jecxz
add
out
bnd
push
into
sbb
xchg
dec
mov
mov
popa
cmp
fsubs
dec
ds
hlt
ss
popf
xchg
mov
cld
or
push
cmc
and
in
ds
cmp
adc
push
sbb
js
mov
cs
push
push
fsubs
adc
xchg
mov
das
sub
ss
repnz
repz
shll
push
inc
add
ss
dec
sarb
jg,pn
xlat
je
outsl
fstps
push
cmp
lret
mov
cmp
mov
pop
fidivs
jbe
inc
aam
into
sub
mov
pop
pop
sub
mov
aad
gs
or
cmp
int3
or
cs
sbb
fwait
push
scas
mov
jecxz
aam
xchg
pop
pop
push
adc
sub
mov
sti
orb
jp
cmpsl
pop
aaa
jne
lock
decl
cmpsb
xchg
mov
cwtl
shrl
jns
push
push
pop
sub
add
mov
out
push
test
jb
dec
les
in
mov
add
lods
lahf
inc
rcl
dec
xchg
es
xchg
xor
dec
xchg
sub
xor
sub
jle
jp
xchg
push
lods
stos
mov
mov
push
sub
sub
jns
imul
xchg
mov
sahf
addb
xchg
loop
sub
dec
ss
jp
in
lcall
pop
jmp
mov
xchg
cmpl
cmp
dec
dec
test
inc
jle
or
dec
out
push
into
push
pop
ss
cmpsl
dec
cmp
dec
inc
inc
push
or
add
push
scas
mov
cmp
cmp
dec
cmp
push
aad
xor
xor
mov
fistps
add
pop
lea
sub
cs
es
add
jbe
sub
push
in
sbb
jg
dec
or
fiaddl
fisttps
xor
into
xor
testb
aam
sti
add
outsl
clc
inc
arpl
ss
push
ss
imulb
test
lcall
jb
mov
dec
push
sti
test
imulb
push
or
push
imul
jnp
mov
scas
sbb
sbb
xlat
push
push
or
ds
scas
mov
jp
jno
xchg
push
or
mov
out
push
lods
mov
fimuls
add
jl
sahf
pusha
shlb
inc
std
fwait
sub
sub
adc
sub
sub
lcall
jno
xchg
push
dec
jb
in
add
pop
add
or
push
jae
jns
mov
lahf
mov
xor
add
xor
dec
pop
fimull
dec
sub
imul
scas
cli
loopne
lods
daa
es
clc
jle
push
cmp
dec
fwait
push
push
loop
fisubrs
ja
clc
dec
push
out
sti
call
pop
imul
cmp
rcl
std
or
bound
jbe
xchg
cs
sarb
xlat
stos
jle
lock
daa
xlat
movsl
pop
sub
lcall
mov
addr16
jge
mov
rcll
dec
test
dec
jnp
les
jno
jo
or
popa
iret
int3
hlt
jb
aaa
ret
jnp
les
inc
inc
xlat
popa
iret
into
sbb
cld
jo
jge
imul
ljmp
mov
bound
xchg
cs
mov
lcall
mov
fs
or
inc
jae
aad
and
push
iret
ss
je
sub
iret
sbb
imul
mov
loop
xchg
adc
ljmp
fiaddl
xor
jnp
sub
cld
lcall
test
adc
cmp
inc
mov
andb
ret
loop
pushl
lahf
dec
cltd
jge
jl
into
and
jmp
push
loop
mov
push
data16
int
dec
xor
das
adc
cli
inc
xor
push
ss
xor
testb
mov
cs
rolb
pusha
das
into
sub
mov
or
sub
dec
out
mov
dec
dec
push
xchg
inc
ds
jo
push
out
daa
push
outsb
mov
jmp
xor
pop
mov
and
aas
add
ss
stos
dec
out
and
dec
pop
or
fs
mov
rorl
push
adc
jp,pn
jne
scas
and
jnp
cmp
xor
lds
fwait
mov
and
int
lods
and
xor
ja
jg
xchg
into
sarb
sbb
fs
cs
mov
and
ljmp
dec
cmp
adc
mov
cmpsb
xchg
mov
subl
push
dec
outsb
cmp
xor
aas
mov
test
or
cmp
aaa
lret
dec
ja
fists
inc
shlb
stos
incb
mov
out
ret
jae
scas
hlt
stos
shlb
cmp
and
cli
jmp
pop
jg
psubsb
ljmp
das
jns
mov
or
loopne
or
mov
xor
jmp
pop
stc
cli
outsb
or
cltd
loopne
jge
fisubrl
orb
cmp
dec
ja
rclb
and
jecxz
sbb
mov
push
cmc
pop
cmp
ss
or
jp
into
testb
scas
and
repz
daa
scas
jmp
pop
aam
inc
lea
adc
jp
les
inc
xor
xor
kandnb
pop
jmp
xchg
sbb
lcall
aam
add
inc
call
cli
sub
push
les
or
or
push
fcmovnb
add
mov
fisttpl
dec
aad
and
cmp
mov
ret
mov
jle,pn
imul
sahf
dec
loop,pn
sub
jb
jp
xor
adc
stc
int3
pop
in
ret
xchg
pop
or
sub
cmc
lea
lcallw
pop
pop
xchg
ds
repnz
jnp
push
add
ljmp
outsl
pop
jae
call
ds
outsb
imul
iret
and
pop
arpl
adc
mov
in
ljmp
jb
push
cmp
xor
mov
loopne
ja
scas
jns
mov
cld
cmp
jmp
jbe
sub
test
xor
inc
sarl
xor
es
mov
add
jge
sbb
cmp
mov
stos
loop
sar
pop
jg
pop
int
lods
loopne
movsl
and
test
ret
add
sbb
divb
mov
and
pop
push
xlat
call
dec
sub
addb
clc
lds
or
dec
and
out
loop
push
hlt
jae
out
jnp
push
hlt
daa
push
cmp
testl
lcall
lods
cli
mov
inc
jmp
sub
pop
loopne
pop
test
into
cs
arpl
xor
inc
jns
cmp
cld
ss
dec
cmpsb
xchg
outsb
cli
subl
xor
les
ljmp
out
gs
es
add
sbb
mov
rcr
popf
jbe
shrb
ljmp
pop
mov
out
inc
sub
mov
cs
cmpsb
lret
adc
lret
push
enter
aad
mov
mov
and
iret
std
cs
je
lds
imull
cli
or
es
jns
imul
mov
xor
inc
sub
xchg
ss
push
lea
jae
inc
ja
aaa
pop
sub
and
cwtl
add
call
out
aam
mov
or
xor
movsl
das
xor
xlat
sub
andl
repz
xchg
sub
loopne
and
jmp
cs
mov
hlt
out
scas
out
xlat
dec
es
call
or
inc
cmp
aad
test
fisubrl
push
add
push
iret
inc
test
pop
mov
es
clc
mov
pop
je
jmp
cld
loop
test
cld
xchg
loopne
movsl
jmp
shrl
xor
add
out
mov
addr16
rcr
pop
cmp
ss
shl
rcl
aaa
or
aas
enter
adcl
mov
add
pop
std
cmp
dec
out
jge
in
mov
sbb
int3
jl
cmp
cmpsb
aad
push
out
xchg
ret
mov
jne
mov
xor
and
jp
ss
subl
push
cmpsl
or
sub
popl
jae
clc
xor
cmp
aaa
fisttps
rcrb
push
arpl
lahf
call
xor
xor
stos
jns
cmpb
or
xor
fldenv
jno
xchg
push
ss
aad
xor
adc
outsb
jg
and
scas
sub
data16
mov
cwtl
mov
shrb
fsubrl
pop
inc
dec
sbb
rcrl
inc
sbb
jp
jbe
call
jl
cmp
sub
mov
jbe
sarb
push
out
call
rcrb
mov
je
push
mov
mov
sub
adc
leave
dec
mov
jo
iret
jae
mov
lret
jle
fistpl
pushf
das
xor
jle
test
fwait
nop
xchg
ret
or
cs
ficoml
sub
stos
ret
pusha
xchg
clc
xchg
add
cmp
push
ss
int
stos
clc
inc
dec
xchg
adc
mov
xchg
ljmp
cmp
sub
mov
push
xor
fistpl
in
data16
into
mov
and
call
mov
ss
inc
stos
repnz
lret
dec
jl
mov
lahf
add
dec
stos
adc
lods
xor
pushf
daa
mov
sahf
dec
test
jns
or
xlat
and
bound
cs
add
sub
es
jp
cmp
lea
cs
mov
xor
mov
or
mov
push
cmp
arpl
sub
loop
imul
lret
xchg
add
es
mov
in
mov
sti
add
pushf
dec
fs
cltd
out
jno
fwait
mov
inc
or
cs
or
mov
jae
js
sub
call
popf
cs
push
into
rolb
sbb
es
or
adc
mov
int
cmp
ret
in
mov
pushf
adc
mov
jb
push
faddl
cmpsl
push
ss
in
xor
mov
jnp
xchg
rcl
in
jne
jge,pn
and
outsl
sahf
cmp
pushf
push
pusha
lea
jae
shr
call
call
xchg
push
incl
mov
mov
into
rorb
jae
cmp
insl
or
out
test
imul
and
inc
push
push
adc
adcl
outsl
hlt
xchg
mov
pop
sbb
mov
fisttps
xchg
loopne
lock
inc
xchg
dec
jg
stos
pop
push
rclb
jle
mov
dec
in
mov
test
repz
insl
fcoml
pop
in
and
addr16
pop
movsl
sub
pop
mov
and
xor
and
mov
xlat
sub
decl
sub
lea
aad
hlt
xchg
ds
neg
jmp
idiv
xchg
sbb
cmpsl
cld
popf
cs
push
stc
stos
dec
or
inc
fildl
in
ffree
or
cmc
xchg
cli
pop
xor
lods
push
jb
int
add
xor
repz
rcrb
fldcw
imulb
pop
mov
insl
daa
sbb
pushf
and
or
sbb
into
fistps
pop
pop
divl
cli
std
mov
test
cld
xchg
push
or
je
sbb
popf
dec
mov
in
stos
push
sti
mov
mov
xchg
test
andl
jecxz
sub
neg
jmp
mov
call
cmp
pusha
pushl
popl
cmp
clc
cmp
pushf
call
movw
mov
pusha
lea
call
cmc
pushf
clc
cmp
mov
pushl
lea
jae
pusha
cmp
cmp
call
imul
mov
test
mov
add
dec
out
mov
rcrl
add
jl
push
data16
lods
push
cli
fwait
cmp
mov
cltd
cmp
mov
push
and
or
xor
enter
jle
pop
hlt
mov
aad
mov
pop
out
pushl
push
push
les
mov
mov
jne
mov
and
adc
dec
jb
ficompl
cmp
jle
lcall
mov
dec
fistl
cmpb
xor
ja
xchg
dec
push
xchg
into
jnp
cmp
or
jmp
daa
out
outsl
adc
cmp
out
hlt
mov
ljmp
mov
xchg
mov
icebp
inc
in
imulb
js
add
push
fcom
xor
inc
fsubp
arpl
bswap
xorl
imul
add
xor
xlat
idiv
call
pop
cli
call
pushf
push
pushf
movl
pushf
pushf
lea
jmp
or
jmp
jmp
fsubl
mov
mov
lcall
aad
or
pop
push
or
clc
nop
test
das
lds
xchg
bound
in
and
jno
fstps
outsl
stc
xor
push
les
int3
popf
call
pushf
xchg
mov
push
xchg
jmp
bswap
mov
push
pushf
pushl
pushl
ret
pushf
lea
je
mov
lea
push
call
jmp
jbe
push
push
pusha
movl
call
jmp
imul
push
adc
add
inc
push
test
mov
add
mov
jo
adc
ret
push
fisubs
bound
fsts
shlb
inc
mov
sbb
repnz
mov
mov
push
push
out
jmp
rcrl
or
aad
adc
clc
movsl
cmpsb
scas
mov
stc
mov
cwtl
dec
negb
shlb
inc
ret
nop
fnstenv
cmp
imul
cmp
fcoml
mov
fs
jns
mov
and
or
sahf
push
push
int
je
and
lea
inc
repnz
fidivrl
scas
cmp
xlat
push
xchg
idivb
sub
sbb
shl
push
jae
jns
hlt
mov
lods
cmpsl
dec
mov
cltd
and
shrd
pop
add
pop
in
out
cmpsl
pop
js
arpl
cmp
hlt
sub
dec
or
js
gs
ja
add
rorb
sub
push
xchg
and
push
inc
dec
xchg
inc
leave
push
or
fsts
sar
aas
insb
notb
add
cmp
push
and
outsb
and
loop
inc
cld
int3
cmp
repz
arpl
aas
and
and
inc
mov
mov
push
xor
je
lret
xchg
lea
jp
test
in
mov
or
cli
jl
arpl
mov
fisubrl
mov
popa
bound
int
pusha
call
sub
dec
idivb
mov
lods
scas
cmp
cmp
outsl
push
in
sub
sub
movsl
xor
jno
scas
add
pop
and
pop
addr16
rcll
into
repz
rol
daa
in
repz
movsb
xor
mov
dec
inc
pop
or
stos
stos
stos
push
fisttpll
sbb
or
in
test
add
cli
sti
mov
and
add
aad
push
call
out
pop
scas
push
adc
fs
jmp
jnp
das
jle
cmp
sbb
shlb
xchg
sbb
cmp
xor
aas
or
gs
fldl
mov
cmpsb
fidivrs
mov
fbld
arpl
pop
je
orl
push
ja
das
das
xor
mov
sub
and
lock
enter
xor
dec
call
and
stc
cli
scas
and
jle
push
sti
mov
orb
fisttpl
jge
int
lock
ss
push
xchg
pop
pop
out
jp
scas
cwtl
and
fsubl
xor
out
jge
mov
dec
sbb
dec
test
popf
mov
pop
mov
les
jge
mov
in
jbe
mov
jns
rcl
sub
stos
loop
hlt
inc
add
cmp
push
inc
cmp
dec
or
mov
insl
and
loopne
pop
mov
lea
mov
push
out
adc
insl
and
in
sahf
test
mov
sbb
xor
loop
xchg
cmp
mov
rolb
loopne
imul
adc
add
mov
xchg
test
lahf
dec
std
mov
aas
sub
and
mov
aam
mov
jmp
jno
test
aam
push
or
and
lods
call
dec
aam
sbb
dec
pop
rorl
xorb
imul
cwtl
cwtl
cltd
dec
add
mov
push
jns
mov
jge
lea
inc
sti
cmc
mov
popf
mov
lret
call
push
bswap
jno
std
mov
es
and
sbb
xchg
and
divl
inc
or
xchg
add
push
mov
mov
in
hlt
pop
sete
add
dec
pop
test
in
popl
adc
in
adc
push
int3
ror
repz
cmc
addl
adc
jg
fldenv
push
fiadds
mov
std
dec
fldenv
jns
mov
std
add
jae
add
sub
jl
je
xchg
das
xchg
cld
lock
inc
enter
lret
push
jmp
mov
dec
dec
dec
fsubrl
jl
cmp
dec
cmpb
sub
push
icebp
jg
pop
ret
outsl
sbb
addl
das
jmp
test
hlt
jno
adc
mov
scas
out
out
out
je
mov
adc
arpl
ret
loop,pn
pop
mov
gs
lock
jp
test
mov
pop
adc
sub
fdivs
fsubr
pop
jnp
sub
ret
sub
into
and
pop
into
iret
push
fcoml
xchg
test
push
or
clc
mov
aaa
in
or
xchg
pop
bound
psrld
push
std
mov
sahf
cwtl
pop
aaa
loope
or
je
mov
adc
insb
insb
insl
testb
jo
and
test
pop
addb
shll
mov
or
js
imul
jno
sub
mov
scas
insb
sub
pop
loopne
cmp
pushf
leave
xchg
jo
jnp
dec
loopne
xchg
call
jo
sub
test
pop
mov
enter
xchg
inc
test
mov
cld
and
mov
imul
mov
pop
pop
mov
lds
mov
movsb
pop
arpl
xor
mov
test
mov
add
inc
out
sbbb
push
adc
xchg
fisttps
hlt
ja
shlb
aas
les
mov
dec
add
scas
mov
lea
push
or
cld
mulb
mov
xchg
sub
mov
sub
cmp
rorl
clc
xchg
jmp
adc
insb
cltd
push
dec
push
into
push
pop
repnz
mov
jb
mov
jmp
ret
push
es
imul
adc
ja
cwtl
mov
cmp
je
xchg
ret
les
mov
ja
hlt
xchg
pop
or
movw
movl
push
call
add
mov
lea
jmp
cli
shlb
int3
push
push
enter
cmp
popa
push
mov
stc
mov
call
mov
mov
sub
adc
and
call
imul
xor
ffreep
jmp
popl
dec
mov
pop
or
cmp
cmp
cmpl
insl
xor
cwtl
loope
or
or
xchg
dec
or
es
mov
push
xchg
mov
out
or
lods
xor
stos
or
out
lds
movsl
sahf
inc
sti
aas
cmc
ds
imul
js
dec
push
ja
mov
mov
mov
inc
jmp
sub
insl
pop
movsl
sbb
pop
stc
xor
cli
or
pop
xchg
xor
iret
mov
fwait
sbbb
sub
mov
sbbl
pop
xchg
movb
jae
adc
add
fldcw
ret
xacquire
xchg
fsubrl
rcrl
nop
jno
add
rcrb
rolb
jmp
ror
cmpb
testl
jns
mov
adc
sbb
repnz
xchg
and
or
sub
in
test
push
cwtl
inc
lahf
cmp
mov
sub
popa
sti
andl
cmp
sbb
or
rorb
inc
add
out
jle
jg
mov
iret
push
add
decl
lea
jnp
push
repnz
in
jp
hlt
xchg
push
call
fnstenv
cmp
mov
dec
add
xchg
sbb
sbbb
pop
sbb
js
dec
dec
icebp
sub
push
cmc
sub
jb
lcall
mov
jmp
cmp
hlt
popf
inc
ljmp
fidivrl
jg
mov
fwait
mov
mov
lea
out
jno
pushl
out
mov
sahf
xor
inc
cld
movsb
xor
adc
fildll
rorb
jnp
lret
popa
hlt
xchg
push
fldl
aam
jle
shlb
sbb
inc
repz
sbb
sbb
xchg
or
mov
push
dec
mov
push
out
inc
iret
jno
adc
xchg
inc
iret
popa
loopne
cmp
cld
mov
pop
sub
mov
add
stos
mov
mov
adc
cmpsl
push
bsr
outsl
cmc
jg
lret
mov
jecxz
cmpsb
pop
adc
cmp
or
pusha
adc
xchg
add
jnp
sbb
or
pop
mov
or
movsl
xchg
bound
test
mov
mov
push
pop
test
and
lock
cwtl
es
lock
je
dec
add
loope
xor
inc
pop
xchg
div
mov
mov
fidivs
hlt
xchg
arpl
adc
popfw
insl
jae
pusha
popaw
jbe
popfw
outsw
jno
jp
insl
insb
push
jno
cmpsb
pusha
popf
pusha
insb
jbe
popa
popf
outsl
insb
jno
arpl
imul
push
popf
jno
popfw
popa
jp
bound
pusha
popf
imul
arpl
jae
popf
cmpsb
jo
sbb
enter
pusha
in
xor
mov
pop
fwait
arpl
xchg
mov
jg
into
xlat
lea
cmp
lret
cmpb
push
add
pusha
out
xor
adc
outsb
outsl
pushl
popl
pushf
push
pushf
movb
pushl
ret
mov
not
bswap
cwtl
lea
pushf
pushf
jmp
adc
push
pusha
movl
pushl
ret
sub
call
arpl
pop
cmc
jge
pushf
ljmp
imul
dec
cld
lcall
add
push
ja
sub
call
cmp
push
aad
sbb
into
jo
pop
rorl
inc
add
xchg
out
cs
gs
mov
sbb
adc
fucompp
insb
inc
add
lea
js
push
lea
cwtl
cwtl
bswap
pushl
cwtl
bswap
bswap
push
movsbl
sete
movzbw
push
push
cwtl
bswap
pushf
lea
movb
movl
pushl
jmp
stc
shrb
push
add
ds
in
mov
idivl
mov
ret
insl
add
mov
or
lea
push
xchg
imul
loopne
adc
sbb
jmp
sub
out
cmc
pushf
mov
lcall
aaa
jnp
lahf
cmp
addl
sub
adc
test
lock
push
dec
mov
jnp
call
jne
scas
push
in
cmpsb
push
lock
das
frstor
test
xor
movsb
repz
sub
in
out
pop
mov
testl
or
xor
pop
cmpsb
iret
mov
jmp
sbb
pushf
pop
xchg
sahf
rolb
lds
push
pop
movsl
inc
sarl
loop
jecxz
push
mov
ficoms
insl
wbinvd
mov
cmc
lahf
cmp
adc
and
jnp
popa
pushf
inc
popa
push
shlb
addr16
mov
aad
mov
or
mov
push
adc
daa
roll
cmp
jecxz
pushf
popf
pop
pop
jb
inc
or
test
insb
cmc
jg
cmpsl
cmp
xchg
jp
sub
jnp
or
and
imul
decb
fs
jb
pop
and
xlat
xor
mov
mov
loopne
sbb
jno
fcompl
xchg
insb
xchg
outsl
cmpl
mov
pop
mov
xchg
xor
jecxz
cli
dec
fcomps
jb
pop
es
frstor
das
push
fldenv
fistpl
xchg
sub
aam
inc
and
mov
call
mov
bswap
call
lahf
jmp
jne
lds
fld1
das
enter
xchg
sub
pop
pinsrw
and
lcall
pop
fbstp
sarb
mov
xor
pop
rorl
pop
mov
insb
mulb
push
or
adc
pop
movl
jmp
out
movsb
sub
std
push
push
shll
mov
filds
pop
or
and
xor
inc
xor
push
fistpll
push
adc
insl
mov
roll
adc
and
aad
test
fisttpl
cmp
call
je
sbb
mov
jno
mov
clc
cmp
movsl
dec
push
push
fcoms
enter
iretw
push
aam
pop
pop
mov
in
xchg
nop
sub
dec
in
xchg
int
xchg
cmp
sbb
push
ret
daa
jo
ret
test
loopne
sub
test
int
mov
jnp
lret
scas
jne
lock
jbe
enter
sub
test
test
mov
in
inc
fldt
mov
rcrl
mov
int
sub
lret
cwtl
mov
pop
sub
in
je
jp
sti
mov
dec
outsb
cld
stos
cmp
insb
hlt
xchg
lods
pop
pop
mov
je
mov
add
or
mov
fisttpll
mov
mov
mov
pop
cmp
pop
cs
mov
xchg
lret
in
sbbb
imul
mov
cli
nop
aaa
int
push
xchg
jne
push
cld
jae
jbe
push
pop
out
fidivrs
lret
add
orl
and
outsl
test
sub
sub
cwtl
inc
into
xor
or
jmp
scas
push
insb
or
mov
pop
add
add
hlt
pop
jnp
inc
mov
xchg
cmp
mov
int3
push
mov
xor
adc
inc
add
mov
cltd
scas
insl
clc
sbb
inc
adcl
push
test
add
daa
lods
dec
jmp
pop
cltd
das
js
dec
test
mov
pop
ds
lcall
xchg
jbe
xchg
mov
scas
out
inc
inc
testb
test
mov
pop
test
fbstp
in
mov
lds
nop
dec
fidivrs
out
add
insl
push
fmuls
xchg
and
pushl
mov
mov
mov
pop
cltd
cwtl
cltd
and
mov
adc
adc
test
imul
repz
sbb
pop
icebp
clc
add
ss
pop
xor
xor
cld
lcall
int3
mov
inc
fisttpll
add
mov
rcrl
mov
movsl
pop
pop
mov
bound
push
mov
ds
rep
hlt
pop
bound
movsb
pop
addb
mov
add
mov
lret
gs
mov
push
mov
push
pop
sbb
adc
xlat
out
imul
lcall
jecxz
or
mov
jmp
pop
loope
and
in
mov
movsl
dec
stc
cmpsl
hlt
xchg
and
imul
imul
repz
cltd
push
mov
lcall
rol
stos
dec
jo
jae
cltd
dec
dec
sub
xlat
sbb
iret
repnz
xor
in
sub
lock
and
mov
pop
or
pop
pop
loopne
mov
xchg
fisttpl
push
ficompl
inc
hlt
hlt
xchg
xor
xor
lea
je
inc
sub
lea
clc
mov
sar
jmp
mov
lea
ja
bt
pushf
imul
call
movl
push
pushf
movw
mov
lea
jmp
call
or
push
jmp
cmp
sub
pusha
pushf
clc
clc
ror
movw
movl
add
stc
pushf
pushf
shr
call
add
inc
js
je
jb
arpl
jae
movl
lea
jo
pushf
movl
pushf
mov
pusha
pushf
lea
jmp
jmp
movw
lea
ja
call
cli
sub
pop
in
lcall
sbb
imul
rol
xor
sbb
inc
mov
mov
stos
inc
pushfw
xor
mov
mov
xor
int
mov
push
fs
sbb
mov
sub
lods
negb
pop
popf
das
fldcw
xchg
lods
pop
pop
jmp
jmp
js
fbstp
mov
pop
adc
cmpsl
push
jmp
outsb
adc
or
data16
pop
aaa
and
clc
sahf
divl
popa
ret
hlt
ljmp
lds
mov
add
pop
icebp
mov
sbb
xchg
pop
or
push
push
mov
push
pusha
push
push
mov
cwtl
mov
not
lea
call
pushf
pushf
lea
jne
jmp
fsubrs
mov
fistl
lods
push
fistps
repz
scas
push
pop
push
stos
das
test
mov
xchg
call
adc
data16
movsl
dec
mov
and
iret
test
fldenv
mov
test
pushf
dec
cltd
ror
setle
add
jmp
jb
std
sahf
xor
pop
sbb
loop
in
cltd
sub
shlb
push
lea
fcoms
cmp
fiadds
dec
out
out
movsl
fwait
cmp
mov
aam
mov
cmpsb
or
jle
mov
push
fisubrs
mov
call
mov
fistpll
inc
jge
cmp
fsincos
push
ljmp
pop
push
or
int3
in
jae
fisttpl
add
push
int3
xor
fsubrs
xchg
sub
jp
nop
xor
or
mov
pop
jp
daa
jbe
addr16
fnsave
mov
call
inc
stos
fisubl
or
cmp
inc
add
xadd
fwait
inc
fcomip
xchg
and
into
pushf
movb
lea
je
pushf
adc
pushf
pushf
lea
jmp
fsub
andl
xchg
adc
imul
xor
jne
xchg
xor
lret
ja
and
xchg
cmp
xor
sbb
int3
pop
pop
in
sub
push
ror
clc
fs
repz
leave
js
outsb
outsl
icebp
cmpsl
das
in
mov
cltd
dec
cwtl
mov
loop
adc
add
lret
stos
push
into
push
xlat
xchg
inc
add
ds
iret
pop
cltd
iret
pop
ljmp
clc
fwait
dec
xchg
aas
call
movsb
fsubrs
scas
xor
test
jno
lcall
filds
movsl
gs
fisubrl
clc
sub
notl
xchg
fadds
xor
call
lea
jne
push
pusha
lea
call
pusha
pusha
movb
movb
lea
jmp
cmp
call
pusha
or
pushl
push
lea
je
setnp
mov
lahf
lea
lea
pushf
jmp
ror
push
cmc
pusha
stc
add
jmp
cmp
push
pusha
mov
lea
je
stc
cmp
cmc
bt
cmp
pushf
pusha
lea
je
clc
cmp
clc
jp
cmp
pushf
lea
je
pusha
pusha
lea
jmp
lea
je
bswap
mov
xchg
call
xor
clc
cmc
call
push
push
pushf
pusha
mov
lea
jmp
pusha
movl
pushf
lea
jmp
fsubp
lahf
xor
push
cmp
mov
sub
outsb
out
test
or
jbe
and
jge
mov
outsl
mov
jmp
and
xor
mov
adc
jo
in
cli
out
sub
testl
ja
add
hlt
and
roll
gs
and
inc
add
test
lea
mov
lret
mov
jns
mov
iret
insl
hlt
xchg
scas
pop
pop
adc
mov
mov
data16
mov
and
dec
fcoml
movsl
out
or
mov
pop
push
fisubs
push
fsincos
test
and
jo
jns
insl
mov
cmpsl
mov
or
popf
and
pop
fstl
mov
xchg
or
pusha
jmp
push
sti
mov
stos
push
add
mov
fnstcw
mov
sti
mov
adc
lea
inc
ja
push
pop
out
test
pop
xchg
dec
inc
jmp
push
pop
iret
fstl
lcall
xor
shll
xchg
mov
mov
and
inc
dec
xchg
sub
mov
and
sbb
cmp
sub
call
add
dec
gs
inc
popa
insb
insb
inc
outsb
imul
add
movzbl
call
test
clc
or
pushl
pushf
lea
jne
rcl
neg
bt
mov
stc
cmc
or
call
pusha
adc
call
rorl
shlb
add
iret
push
jmp
lods
ss
loope
inc
je
pop
hlt
add
xchg
lret
xlat
popa
jmp
cmp
dec
in
mov
nop
lret
outsl
nop
pop
inc
cmp
add
clc
mov
movsl
scas
shlb
enter
aaa
mov
scas
mov
jae
in
mov
sbb
xor
xchg
lret
dec
mov
out
xchg
inc
aam
mov
push
lods
push
stos
push
pushf
fs
push
stc
jg
lahf
call
ljmp
in
pop
mov
mov
ljmp
xchg
daa
jbe
mov
roll
mov
mov
popl
and
add
test
mov
pop
scas
dec
xchg
dec
or
dec
in
sub
sub
fildl
pushf
mov
cmp
ds
push
cmp
dec
out
xchg
fdivs
loop
mov
cmpsl
and
mov
sbbb
xorl
hlt
xchg
popf
repnz
shll
arpl
jecxz
xchg
int
or
or
jecxz
jle
sbb
stos
lods
xor
out
inc
outsl
mov
dec
insl
push
cwtl
push
add
mov
in
mov
cs
stc
add
lock
sbb
push
mov
and
dec
out
jno
jg
adc
shlb
sub
adc
iret
add
in
xchg
and
repz
push
out
sub
or
adc
mov
inc
add
pop
mov
cmpsl
push
nop
inc
pusha
repz
dec
dec
fnsave
popf
mov
xor
cli
mov
jae
fwait
hlt
xchg
push
sbb
pop
movsb
fdivl
xchg
lea
out
xchg
int3
xchg
jno
mov
xchg
fistps
cmpsb
loope
or
mov
popa
or
mov
and
push
out
jne
leave
xchg
pop
out
out
mov
pop
xor
push
jmp
hlt
xchg
int3
int
clc
mov
inc
dec
push
inc
lcall
out
lods
js
es
mov
inc
sahf
shl
mov
mov
loopne
out
out
lock
jno
jo
movsb
dec
aam
and
pop
push
les
popa
or
jg
cmp
pop
stc
xchg
xchg
inc
jl
xchg
mov
xchg
arpl
pusha
pushf
bswap
mov
not
pushf
mov
lea
jmp
movb
mov
mov
not
not
pusha
lods
movb
clc
not
jmp
lea
mov
repz
add
xlat
xchg
sbb
sbb
cmp
adc
jp
lods
push
lahf
inc
jmp
out
imull
test
mov
out
insb
mov
and
and
out
or
pop
xchg
cmp
arpl
call
sbb
jb
mov
mov
cmpsl
and
fldt
cmp
dec
xchg
dec
loope
adc
xor
loop
push
add
mov
xchg
dec
cld
andl
adc
push
fcoml
aad
scas
ficomps
jmp
iret
pop
lea
movsb
and
in
scas
xor
cltd
mov
xchg
sbb
adc
sbb
mov
dec
and
mov
xchg
call
xchg
add
dec
movhlps
sub
fcomps
xchg
cmp
pop
cwtl
push
stc
sbbl
cld
sub
pop
fisttpl
jle
test
adc
xchg
push
add
pop
pushf
push
movl
jmp
call
adc
je
push
shlb
push
repz
push
xchg
sbb
pop
aam
fldcw
mov
or
mov
pushf
dec
push
jne
int3
outsb
sbb
sub
pop
dec
push
xchg
mov
rcr
imul
sub
ljmp
jb
cmp
aad
pop
inc
repnz
out
test
add
jo
lret
push
push
ret
insb
or
jge
adcl
jbe
sahf
push
loop
adc
cwtl
mov
in
add
hlt
es
pop
std
lahf
shl
jg
out
sbbl
push
arpl
test
cwtl
pusha
movzbl
push
mov
call
lea
lea
mov
call
pusha
lea
call
stc
cmp
cmp
push
pusha
pushf
lea
jae
cmc
cmp
pushf
pushf
movb
mov
lea
jae
cmc
cmp
pushf
pushl
pusha
lea
ja
inc
call
push
add
jmp
test
clc
test
add
clc
mov
bts
mov
call
add
add
mov
pusha
lea
call
jmp
icebp
cmc
mov
lods
xor
loope
out
cwtl
cmp
xchg
mov
mov
jo
fsubrs
push
add
mov
lcall
jae
push
aas
xchg
call
cmp
mov
adc
mov
push
dec
add
jmp
ror
push
push
dec
push
test
add
or
mov
sub
test
push
pop
cli
nop
mov
inc
call
lods
fmuls
add
mov
inc
movb
pushl
ret
mov
gs
test
dec
and
push
lock
rcrl
stos
cmp
jns
enter
lock
inc
and
push
std
cmpsb
push
add
popa
jmp
jb
pop
stos
popa
add
sbbl
mov
stos
arpl
aam
cmp
call
sub
mov
adc
and
hlt
jle
push
push
out
xor
mov
xchg
dec
cli
inc
in
sbb
das
orb
pop
mov
stc
ffree
inc
push
iret
rorb
in
lock
insl
cmc
xchg
imul
call
mov
xchg
sarb
aam
mov
cmp
mov
push
or
ljmp
cmpsl
divb
lret
xchg
sbb
fs
hlt
push
cmp
fists
cmp
aas
jecxz
mov
movl
out
dec
fwait
pop
inc
test
mov
lods
aaa
in
sub
loope
xlat
mov
pop
cs
movsl
cmp
int3
insl
pextrw
dec
in
add
hlt
mov
add
lea
call
jmp
cmp
stc
clc
cmp
jmp
add
add
adcb
adcb
adcb
rcrb
add
add
add
add
pop
add
add
add
shr
cmc
add
sbb
and
dec
mov
push
mov
mov
dec
ds
xchg
jmp
lds
pop
and
stos
xor
mov
sbb
cmpsl
cmpsl
sbbl
mov
xchg
test
sti
xchg
daa
scas
inc
out
jno
jp
push
notl
or
sbb
push
jne
dec
fsubr
loopne
mov
sub
jne
dec
fisubrs
decb
or
jmp
add
rclb
pop
sub
rcrl
ja
mov
jbe
shrd
cli
sahf
rcrl
js
sub
or
ss
xchg
pusha
in
xlat
jnp
mov
pop
add
and
cmc
rcll
dec
ret
les
scas
mov
jnp
movsl
dec
lock
call
std
insl
sbb
ret
jno
pop
lahf
and
sti
pushf
push
push
stos
sub
outsl
adc
or
pop
iret
lcall
pushf
icebp
mov
shl
popf
inc
arpl
jge
shl
pop
rol
movsl
daa
sarl
fs
test
cli
lods
lods
dec
call
or
sbbl
cmp
in
cmp
jne
push
ficomps
ja
jns
add
jge
stc
mov
push
adc
push
fcomi
xchg
sbb
pop
aad
dec
cmc
lahf
add
dec
dec
movsb
stc
sahf
and
aad
shld
fsubl
mov
fwait
add
lods
imul
lret
xor
aad
subb
pop
xchg
sub
pop
add
aam
hlt
cld
jge
push
mov
mov
in
mov
jp
mov
outsl
sbb
fmull
cmp
pop
add
inc
cmp
jmp
cmpl
mov
pop
push
xchg
fisttpll
inc
inc
add
mov
sbb
mov
sarb
hlt
xchg
pop
or
cmp
lock
mov
push
adc
or
fnstcw
les
subl
push
mov
repz
inc
inc
xchg
daa
daa
les
mov
fbld
mov
imul
idivb
hlt
std
pop
fcoms
mov
or
outsb
gs
xor
cs
insb
add
sub
pushl
ret
push
lock
std
std
test
xchg
callw
ret
jge
clc
pop
lret
lret
iret
or
ss
xchg
dec
in
or
xor
dec
inc
cmp
aam
push
leave
add
out
cs
test
sub
andl
lahf
sub
push
push
movsb
mov
cmp
mov
loop
push
enter
dec
call
push
mov
bswap
lea
movsbw
pushf
pushf
pusha
mov
mov
pushl
lea
call
jmp
rcl
mov
movzbw
movsbw
movsbw
bsr
mov
lea
cmp
bsf
movsbw
mov
pushf
xor
cmp
clc
test
test
repnz
call
call
mov
inc
rorl
xchg
xchg
dec
clc
jge
xchg
sbb
mov
jae
pusha
or
or
pop
jle
repnz
fnsave
mov
stc
jl
jge
xchg
jl
mov
arpl
insl
sti
xchg
sbb
pop
or
xor
cli
les
lea
ja
call
call
sbb
pushf
sub
outsl
fiadds
fisubrl
jle
mov
loop
sbb
out
cwtl
cmp
xchg
sarb
fs
push
fiaddl
test
lahf
xor
lret
in
cltd
das
int
pop
mov
mov
dec
dec
push
xor
lret
call
sbb
sub
sub
or
sbbl
ficompl
test
add
mov
testb
sub
rcrb
cmp
push
into
lock
int
mov
push
lods
std
stos
xor
jnp
popa
or
test
lcall
call
gs
movsl
cmp
rorb
xchg
je
adc
out
leave
xchg
push
in
mov
cmp
adc
data16
jo
pop
jo
xor
jnp
push
jmp
push
in
xchg
sbb
lods
cmp
and
jns
push
outsl
int
sti
push
push
adc
hlt
xchg
in
xchg
and
push
mov
fwait
add
insb
cmpsl
sub
mov
pusha
push
outsl
int
and
ja
ds
or
mov
jge
cmpsl
test
pop
or
xor
fwait
inc
test
fcmovnbe
jg
cwtl
adc
pop
popf
ret
div
jnp
js
cmp
or
cwtl
fimull
push
pop
jg
sahf
dec
jmp
inc
dec
fcoms
int3
test
jno
rsm
cmpsl
cmpsl
test
iret
insb
adc
or
jbe
pop
pop
and
adc
cwtl
loope
cmpsl
or
jecxz
mov
test
imul
in
xchg
mov
idiv
push
or
jmp
xorb
push
mov
xchg
mov
mov
dec
in
jmp
cli
and
pushf
test
pushl
mov
lea
je
ror
sbb
clc
adc
mov
shrd
bswap
clc
add
rcr
btc
shld
rcr
mov
pusha
test
test
test
pushf
pushf
mov
push
lea
je
test
rol
dec
add
clc
test
lea
mov
jmp
pushl
lea
jne
jge
btc
adc
mov
cmp
pushf
cmc
cmp
push
pusha
lea
ja
not
call
add
dec
outsl
arpl
inc
jb
add
sti
sbb
cmc
or
pushf
pusha
lea
je
pushf
movw
cmp
lea
push
jmp
cltd
popf
inc
ret
dec
jne
daa
std
push
mov
and
sti
cmpl
enter
lcall
ficompl
imul
jbe
add
sti
addl
sbb
into
icebp
jnp
lea
xchg
int3
ret
and
ss
cltd
call
arpl
mov
jbe
ljmp
rep
push
or
dec
out
das
jmp
lea
ret
fcomps
xor
jb
test
out
stos
push
icebp
xchg
dec
call
or
lret
jge
push
nop
rcrl
inc
jle
fcomp
xor
cmp
add
test
xchg
repz
adc
arpl
cmp
mov
xchg
dec
stc
cli
xor
lea
pushf
push
lods
mov
clc
sub
not
neg
pusha
rcr
sar
bt
sub
call
pushf
mov
push
pushf
lea
jmp
pushf
pushl
lea
jb
push
cmpb
movb
call
lea
ja
pushf
imul
test
add
pushf
pusha
movb
movw
lea
jmp
mov
inc
jb
bound
movsl
inc
iret
test
cmp
jns
insb
push
fs
xchg
popa
bound
lods
mov
jge
push
pop
jl
dec
or
cmpsl
jbe
sbb
jnp
xchg
cmp
xchg
test
xor
sar
xor
call
pushf
mov
pushf
jmp
jo
sbb
and
insb
insl
sub
aam
ljmp
mov
push
inc
vpminsw
mov
ret
jo
pusha
orb
sub
sub
fldcw
push
call
scas
sbb
icebp
mov
adc
push
or
xor
sbb
test
out
stos
insb
inc
inc
imul
push
push
jae
push
ja
sbb
jo
jns
dec
out
push
mov
fsubrl
adc
loope
jg
xor
push
add
dec
push
xchg
jle
jmp
mov
addb
jo
pop
cs
push
inc
mov
adc
in
jne
out
stc
cmp
sub
loop
ret
adc
repnz
push
movsl
enter
in
aas
jge
add
and
jecxz
cltd
lcall
mov
ss
mov
xor
sar
test
inc
sbb
mov
sub
pop
xor
and
shrb
shl
xchg
shlb
push
xor
add
adc
pop
loop
jg
dec
cmp
out
out
adc
mov
lods
sub
mov
lret
cs
sahf
adcb
pop
lock
mov
ret
pushl
popf
outsl
jo
cmp
lods
jb
cmp
lahf
mov
daa
ficomps
add
icebp
push
rolb
loop,pn
xchg
inc
jge
ds
xchg
mov
or
mov
test
cltd
mov
repz
pop
mov
hlt
xchg
stos
push
pop
sub
jmp
xlat
lods
out
shll
inc
lret
jne
mov
loope
pextrw
push
xchg
xor
sahf
es
jbe
jge
leave
dec
dec
jp
lret
imul
mov
iret
ja
out
mov
divl
fnsave
ds
xor
add
pop
mov
aam
scas
mov
jle
mov
xchg
mov
xchg
sub
into
jo
rcrb
jb
xchg
int
mov
dec
mov
call
and
repz
jbe
jo
roll
jnp
xchg
mov
mov
loopne
xor
jo
xchg
ss
mov
out
xchg
rcrl
mov
dec
outsl
clc
lea
iret
test
inc
mov
or
add
scas
pop
jmp
and
lock
xchg
and
pop
int
les
mov
aam
cltd
cmp
ret
sbb
int
data16
cmp
imul
mov
shrl
xchg
cltd
enter
push
dec
mov
dec
dec
or
jmp
jmp
push
mov
mov
xchg
xchg
jmp
into
pop
fcoml
xchg
cmp
mov
mov
decb
inc
jbe
push
adc
mov
enter
notl
add
sub
adc
in
ljmp
fnstenv
cmp
xchg
out
mov
shlb
mov
push
sbb
icebp
mov
and
xor
out
pop
pusha
icebp
fwait
inc
adc
pop
or
xchg
and
sbb
hlt
xchg
call
jae
pop
xchg
mov
pop
add
scas
ljmp
jae
into
inc
adc
mov
sbbb
sub
fldenv
aaa
fcomps
movsb
bound
lods
loope
nop
dec
or
xlat
push
cwtl
mov
sbb
divps
clc
sti
das
mov
sbb
pop
stc
mov
inc
jbe
fisubrl
test
jl
dec
loope
xor
hlt
xchg
out
jmp
mov
ret
les
mov
cld
mov
mov
dec
movsb
mov
mov
jp
mov
js
dec
mov
adc
data16
xchg
outsb
mov
mov
js
inc
call
shlb
int
cmc
mov
scas
mov
movsl
sub
mov
icebp
xchg
cmp
xchg
jp
jge
divl
mov
or
sarb
fwait
pop
pop
push
adc
mov
dec
or
sarb
ljmp
cmp
rorb
loop
dec
decl
or
inc
in
pop
jae
out
lret
loop
rcr
cld
xchg
jmp
push
out
sti
add
mov
ds
ljmp
inc
repnz
push
mov
std
push
lods
in
mov
out
lods
iret
insl
sti
test
cwtl
in
cmpsl
xor
mov
xchg
sub
sbbl
sar
imul
lods
in
add
sbbb
in
out
cmp
xor
stos
out
push
enter
cmpsl
dec
mov
sub
daa
fnstcw
cmp
sar
push
mov
stc
cli
nop
lret
aam
movsb
lods
into
js
enter
or
cli
ljmp
enter
pop
adc
xchg
mov
xor
mov
adc
movsl
js
cmpsb
pop
push
orb
xchg
call
jle
sub
mov
andb
stos
mov
subb
inc
cmp
push
push
dec
dec
roll
rcll
scas
push
xchg
xor
sub
and
je
pusha
or
pushl
call
lock
in
lahf
xorb
test
mov
fwait
xor
lcall
shll
outsb
popa
sbb
pop
incb
sub
jg
jbe
or
clc
mov
divb
mov
inc
ds
mov
mov
xchg
xchg
les
xchg
hlt
xchg
sub
fld
inc
and
mov
test
add
push
lea
call
call
lea
jne
dec
xor
movzbw
movsbw
rcl
mov
dec
add
adc
push
ror
adc
mov
stc
jmp
push
movl
pusha
pushl
mov
movl
pushf
lea
jmp
pushf
add
test
cmp
pushw
popfw
call
stc
rol
mov
add
shld
test
xor
mov
shl
rol
test
mov
cmp
mov
pusha
call
je
pusha
pusha
mov
movb
lea
jmp
push
push
lea
call
pusha
lea
jae
jg
pushf
pushf
inc
mov
push
push
setb
mov
inc
not
jmp
pop
xor
push
inc
push
sbb
jno
insb
sbb
out
mov
fisubl
pusha
iret
rcl
call
out
mov
lret
and
jno
leave
shlb
addr16
jbe
and
dec
out
mov
xorl
aad
mov
jecxz
into
add
mov
jo
jg
lret
sub
mov
lods
mov
sub
ja
mov
mov
mov
xchg
outsb
sbb
insb
adc
mov
xchg
pop
movsb
cmp
aas
cmc
xor
or
adc
pop
push
sub
cmc
push
cmpsl
fnsave
xchg
in
imul
mov
in
mov
ds
cmc
fs
es
bound
sbb
xchg
in
fwait
lock
js
mov
pop
test
mov
iret
push
testb
cld
inc
inc
call
jae
das
frstor
lret
jo
mov
filds
push
aad
mov
stc
stc
cmpsb
iret
pop
add
adc
mov
pushf
loop
xchg
inc
mov
or
jle
ret
sbb
sbb
and
or
cmp
inc
repz
push
jbe
mov
mov
jle
add
stc
stos
cmp
jne
or
sbb
push
adc
pop
pop
clc
push
xchg
out
roll
sub
jae
mov
or
in
test
xor
lea
mov
mov
cmpsb
aas
clc
mov
fisttps
sbb
outsl
sub
mov
pop
stc
andnps
daa
enter
inc
jnp
out
mov
cld
add
cmpsl
xor
imul
xchg
sbb
mov
jb
xchg
pop
pop
mul
sub
xor
cld
cmpsb
pop
nop
xor
jbe
xchg
mov
mov
jmp
call
mov
lods
hlt
dec
dec
ficoms
mov
fisubl
leave
pop
std
cmp
add
clc
mov
push
not
aad
ror
lahf
and
or
lcall
jg
fdivl
and
cmp
push
mov
push
sarb
and
imul
push
xor
push
mov
bound
cmp
out
ja
jmp
mov
stc
jo
jb
xchg
xor
leave
mov
ja
jecxz
cltd
pushf
ja
inc
testl
mov
out
inc
data16
jl
leave
add
mov
jmp
inc
push
out
or
jnp
inc
fidivs
push
or
mov
sti
nop
fildll
mov
pop
mov
xor
jg
pop
shll
xlat
ficoml
mov
outsb
inc
cmp
ss
push
inc
jecxz
dec
push
jge
inc
mov
sahf
push
jmp
sbb
xchg
insl
jnp
fcmovnu
xlat
imul
jns
cmp
lock
add
das
in
mov
das
enter
das
jo
cmpsl
clc
xchg
les
sub
mov
fists
xchg
dec
pushf
ds
outsb
add
hlt
xchg
jne
jb
cltd
sbb
scas
dec
clc
lods
pop
divl
dec
out
jno
jae
mov
mov
and
mov
out
push
xchg
in
jae
std
das
test
insl
mov
push
cld
lcall
adc
mov
jns
push
add
cs
cmp
ja
shll
addr16
or
push
inc
cwtl
outsl
js
sub
fnsave
into
movsb
and
mov
hlt
push
testl
mov
loope
inc
xlat
xchg
daa
aad
and
jmp
aad
mov
jns
mov
fcoms
mov
outsl
adc
mov
pop
icebp
sbb
in
and
idivl
andb
and
int3
in
jp
mov
lods
inc
call
stos
add
jbe
imul
lods
xor
sub
repnz
adc
xchg
mov
aaa
lret
mov
mov
mov
or
mov
lock
xchg
adc
mov
xchg
call
sbb
jno
pushf
or
and
hlt
roll
mov
rorl
xor
lea
xchg
push
les
mov
int
mov
push
mov
movsb
inc
incb
leave
or
adc
pop
mov
lcall
xor
sub
mov
inc
call
cwtl
mov
jns
cltd
das
in
xchg
cmp
jne
mov
push
ret
les
or
or
mov
shrl
mov
mov
movsl
fnstsw
mov
dec
cld
js
dec
call
mov
clc
mov
out
arpl
negb
inc
testb
stos
test
insb
sbb
mov
outsl
daa
sbb
xchg
mov
leave
subl
idiv
dec
cmp
add
sbb
das
mov
or
cmp
std
cwtl
mov
lcall
jp
lods
inc
mov
repnz
jae
and
xor
pushf
push
push
pushl
ret
xchg
call
call
stc
jmp
movzbw
cwtl
movsbw
mov
push
lea
jmp
nop
out
push
jb
and
test
dec
or
lods
pop
pop
movsb
push
roll
cli
in
int3
and
inc
fs
rcll
sti
xchg
adc
es
cmp
shr
inc
dec
mov
popf
aad
clc
xlat
fsubs
jo
lock
inc
mov
push
cmc
push
mov
call
sub
jl
test
cli
sbb
mov
and
or
arpl
mov
jge
sbb
int
push
mov
add
mov
sbbl
sbb
sub
pop
out
jnp
arpl
push
inc
fucom
jno
mov
call
push
idivl
inc
enter
inc
pop
and
outsl
xchg
xchg
adc
in
push
inc
lret
pushf
pop
add
lods
add
mov
mov
jp
mov
pop
inc
inc
in
lea
rcr
cld
mov
adc
sub
xor
add
mov
fimuls
mov
insl
in
jb
out
icebp
lret
xchg
mov
pusha
imul
jmp
in
scas
sbb
fcoml
jg
add
aas
jns
mov
aaa
jo
sbb
insl
imul
scas
sbb
adc
adc
jge
push
pop
sbb
ret
dec
aad
push
mov
lahf
xchg
xchg
cwtl
stos
push
dec
add
iret
jno
jo
cwtl
mov
sub
in
jae
cmc
daa
jbe
push
pop
jle
hlt
xchg
or
subb
repnz
pop
pop
cmc
scas
das
call
or
pop
std
out
jg
dec
mov
mov
push
jecxz
cmp
je
mov
imul
xchg
andb
pop
lcall
in
sub
enter
outsl
cld
mov
pop
lea
push
push
pop
xor
into
enter
stos
xor
mov
mov
xchg
cwtl
mov
mov
in
jae
push
xchg
xor
cmp
xchg
jl
jg
sub
jmp
adc
jl
ljmp
cmp
jmp
fcmovu
repz
enter
insb
push
mov
test
mov
jae
add
subb
sti
cltd
xor
hlt
xchg
nop
cmp
ret
test
cmp
pusha
pushf
lea
jb
call
loopne
jns
mov
rol
fists
es
dec
jmp
xor
add
sbb
addr16
mov
shlb
fsub
sbb
shlb
pop
add
int
std
xchg
dec
sti
lods
xor
hlt
xchg
push
mov
es
xor
push
or
adc
or
insb
push
pop
jle
call
lock
fnsave
mov
adc
sub
fidivl
cmpsb
inc
fdivl
sub
test
mov
ret
dec
jecxz
pop
hlt
xchg
pusha
push
arpl
fisubrs
mov
clc
movsl
inc
xlat
xchg
sub
lock
push
xchg
or
adc
pop
jle
out
out
test
xor
pop
jecxz
in
lds
mov
sahf
cmpsl
jmp
dec
sti
lods
pop
icebp
cmpsl
cmp
test
addr16
jb
and
inc
and
xchg
push
popa
and
mov
ljmp
pushf
pushf
neg
jmp
jp
pop
fdivrl
mov
out
andb
sti
test
mov
add
mov
mov
or
xchg
fs
mov
sarb
sbb
sbb
pop
lahf
pop
or
sti
test
jecxz
pop
hlt
xchg
out
xchg
lods
lock
lods
into
mov
movsl
call
fadds
and
add
popf
jns
and
jb
or
mov
push
stc
sbb
push
push
in
jle
fldcw
stos
jbe
xchg
mov
jecxz
add
cmp
add
add
mov
fmul
sub
push
js
scas
xchg
xchg
mov
fnsave
xor
outsl
stos
cmpsl
adc
stc
inc
scas
sub
xchg
leave
inc
inc
aad
adc
sar
out
jno
xchg
rcrl
pop
mov
fs
shll
pusha
mov
outsl
push
cmp
push
rclb
inc
bound
xlat
sub
push
push
xor
bound
dec
adc
xbegin
fists
das
push
jge
jg
sahf
addl
sti
pop
scas
out
sub
push
rcrb
add
popf
jnp
jns
xor
dec
pop
daa
insl
outsb
out
and
push
arpl
out
fnsave
fwait
jbe
push
stos
push
or
xchg
adc
push
filds
sbb
stc
cmpsl
leave
inc
lret
clc
repz
mov
cmp
popa
sti
mov
mov
loope
popf
orl
out
xchg
inc
sti
shrl
xor
cld
mov
jecxz
sahf
or
mov
push
and
jo
lds
loopne
xor
je
mov
in
addb
dec
xchg
push
popl
sbb
addr16
cmp
data16
xchg
sbb
xchg
jmp
call
mov
adc
jp
xchg
ficomps
cs
insl
pusha
cld
sbb
mov
adc
andb
pop
out
cmp
fwait
inc
mov
and
mov
mov
or
or
push
jecxz
aam
pusha
cld
sbb
jp
sbb
mov
xchg
lcall
ja
push
int3
daa
jnp
sbb
push
pop
fnsave
enter
stc
xor
lret
iret
shrb
es
mov
test
in
or
mov
fisubrl
insl
addr16
sub
push
push
jns
fwait
jae
adc
cmpsb
adc
sbb
lret
int3
cld
test
and
jl
sub
std
scas
pusha
push
std
je
jg
call
or
inc
leave
jnp
xlat
hlt
xchg
sbb
adc
fisubs
mov
out
cwtl
sub
dec
rol
in
sarl
std
test
and
inc
cmc
mov
out
and
sbb
clc
ljmp
outsl
cmc
stos
inc
hlt
xchg
adc
ret
loope
call
and
jle
int3
sub
scas
addl
cld
sahf
and
ja
mov
cld
pop
and
sub
sbb
pop
push
push
cld
push
sub
mov
in
lcall
subb
in
ss
arpl
movsl
rol
insb
icebp
std
xchg
mov
xor
mov
or
scas
inc
out
divl
sbbb
cwtl
mov
ljmp
out
and
mov
xchg
hlt
xchg
cmp
cmp
test
lcall
mov
push
lea
jmp
jmp
push
gs
insb
jae
push
bound
cmpsb
jbe
pusha
insb
jbe
popa
popf
outsl
insb
jno
arpl
imul
push
popf
jno
popfw
popa
jp
bound
pusha
popf
imul
arpl
jae
popf
cmpsb
jo
in
jmp
rep
movsbw
mov
pushl
pushl
mov
lea
jmp
or
lret
push
bound
xchg
cs
pop
add
testl
lock
daa
pop
test
fs
mov
add
mov
dec
out
jns
and
or
mov
mov
incb
sbb
pushf
jmp
das
push
xchg
inc
mov
int
int
sub
jp
test
in
or
adcb
idivl
lcall
jns
pop
mov
pop
jge
call
pusha
hlt
xchg
mov
adc
arpl
add
rclb
dec
jae
lea
movl
shll
int3
lea
xor
mov
add
cltd
inc
imul
shlb
xchg
gs
mov
fisubrl
add
nop
xor
mov
cmp
or
dec
sub
and
bnd
ret
in
sahf
push
fisubrl
push
rorb
cwtl
mov
mov
in
jae
cmp
arpl
push
ljmp
sub
in
mov
popf
xchg
inc
cmp
testb
imul
ret
jmp
and
outsb
mov
and
lahf
and
jo
incl
out
cmp
adc
cmp
fdivs
adc
add
insb
aad
mov
adcl
dec
or
in
cmpsl
jae
mov
xchg
movsl
sbb
add
xchg
bound
and
push
sub
sbb
pushf
es
pushf
inc
lret
push
or
scas
ljmp
in
movsl
das
in
jae
jp
lods
pop
xchg
dec
pop
rcrl
pop
adc
xchg
push
add
cmp
pushf
pushl
lea
jae
pusha
push
pusha
mov
lea
jmp
mov
outsb
pop
mov
mov
fsubrl
stos
imul
adc
icebp
pushf
iret
sub
mov
xchg
cmp
xchg
dec
push
jne
xchg
push
add
faddp
outsl
jo
shrb
scas
test
jmp
testl
mov
mov
rcrl
nop
and
xor
push
adc
es
pop
adc
xchg
aaa
imul
movsl
and
les
dec
icebp
adc
ret
mov
jg
ss
sbb
imull
sbb
imul
int
mov
addl
cmp
xchg
sbb
jno
andb
aam
mov
movsb
xchg
xor
mov
outsb
or
pop
loop
cmp
xchg
or
jmp
jmp
call
aad
cmp
xchg
pop
push
add
insb
cmc
cmpsb
das
call
loope
cld
mov
imul
mov
jmp
outsb
aam
push
sarl
leave
jae
ret
int3
jb
adc
jl
shl
jb
insb
mov
fsubrl
dec
dec
jmp
mov
les
inc
cmc
jnp
xchg
lret
pop
adc
cmpsb
std
pop
dec
fwait
inc
loop
cmp
add
jne
xchg
inc
repnz
push
movb
pusha
movl
push
pusha
push
lea
jbe
push
pushf
pushf
movl
pushf
lea
jmp
pushf
pushf
movw
call
not
push
pop
pop
pusha
pushl
ret
test
xor
dec
into
push
aam
dec
filds
pop
lods
push
or
fcmovnb
pop
dec
aam
mov
cmc
push
mov
fnsave
add
pop
jg
cmp
sub
jnp
sub
lds
ret
jno
cltd
inc
lds
xchg
xchg
inc
cltd
mov
lea
jne
call
sub
arpl
mov
test
mov
jmp
add
pop
push
or
push
pop
sahf
lods
xor
fdivrl
loope
xor
inc
vcmpss
dec
dec
orl
sti
test
add
pop
or
movsl
pop
cmc
xchg
sub
hlt
xchg
mov
fs
adc
call
call
mov
sub
inc
push
cmpsb
sti
xchg
dec
lret
mov
jmp
sbb
lock
push
mov
fisttpll
pop
incl
push
movsl
cmp
mov
adc
xchg
movsl
sub
lret
imul
dec
dec
cltd
arpl
or
push
daa
adcl
jno
mov
mov
clc
pop
xor
les
lods
iret
stc
cmp
sbb
insl
and
jnp
xchg
cmp
pop
hlt
xchg
lcall
ds
jnp
inc
inc
clc
test
jle
fmull
xchg
pop
popf
divb
mov
push
cmp
xchg
xor
and
in
sub
enter
xchg
hlt
xchg
aad
xor
setne
pushfw
shl
rol
shl
mov
cmc
test
jnp
pusha
neg
cmp
sub
stc
bt
ror
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
je
adc
popf
mov
decl
test
jmp
lcall
cmp
push
call
and
pusha
cmc
add
sub
clc
pusha
cmp
add
pusha
dec
pushf
jmp
jmp
inc
or
jge
std
cs
fistpl
inc
rorb
aam
mov
pop
add
in
mov
ss
scas
xor
nop
push
pop
leave
push
movzbl
repz
add
mov
adc
orl
jmp
mov
xor
aad
lods
data16
inc
xlat
test
push
cli
sbb
jnp
sub
cmp
or
sbb
aaa
inc
mov
rorl
pop
pop
cltd
das
fldenv
sarl
dec
xchg
shrl
jnp
test
add
cmp
std
xchg
cmp
inc
shl
xchg
adc
adc
xor
add
movsbw
rcl
mov
rol
push
bt
mov
rcl
mov
inc
neg
mov
pushf
xor
setbe
pushf
jmp
call
rolb
cmpsb
pop
hlt
mov
nop
adc
dec
add
xchg
xchg
xor
jne
imul
outsl
adc
adc
jno
test
loope
shl
dec
inc
push
popf
xchg
mov
fcompl
sub
fstpt
rorl
dec
rcrl
stc
adc
sbb
jle
bound
in
xchg
and
hlt
xchg
sarb
test
xor
movb
push
pushf
sub
pushf
pushf
cmp
push
neg
cmp
call
pushf
lea
jl
push
lea
jbe
btr
pusha
sub
bt
pop
bswap
test
mov
lea
mov
add
rcr
mov
lea
rcl
bswap
add
shr
ror
inc
not
shr
sub
xchg
test
mov
rcl
add
pushf
pushf
bswap
mov
lea
call
repz
xor
lahf
dec
in
jp
les
sbbl
dec
loope
cmpsb
out
or
mov
mov
repz
std
popa
fistpll
mov
out
jle
cmpsl
popa
imul
or
sub
fdivrs
cld
push
neg
lea
bsr
mov
lea
sub
aad
shrd
seta
pusha
mov
not
pop
sbb
cmp
mov
bts
jmp
fsub
lea
mov
mov
pushf
push
out
outsl
and
pop
incl
mov
lods
inc
in
out
lods
sbb
lcall
mov
stos
push
add
add
in
out
xchg
jp
cmpsl
xor
mov
in
rclb
pop
lock
adc
inc
movsb
push
or
mov
mov
cmpsb
loope
bound
rcrl
lods
aas
stc
stos
push
xlat
hlt
xchg
sbb
call
repz
jmp
pushf
movzwl
pop
mov
lea
movw
mov
jmp
jae
xor
or
mov
cmp
jle
test
xchg
aad
cmp
outsl
leave
mov
push
xor
or
push
lods
xor
mov
incl
xchg
popf
sahf
push
lea
jb
mov
mov
ljmp
push
push
pushl
popl
pushf
push
pushf
push
pushl
ret
push
push
pop
lods
push
pop
sbb
sbb
fimuls
mov
test
jnp
jne
xchg
in
in
adc
xor
movl
in
mov
mov
hlt
mov
jg
and
inc
ljmp
inc
shlb
xchg
out
mov
cmp
sub
pop
test
imul
sti
mov
pop
push
in
sub
pop
cwtl
pushf
iret
pop
cmp
lea
insb
idivb
dec
imul
xor
nop
dec
hlt
xchg
mov
mov
lea
jne
call
pushf
pushf
pushf
lea
call
pushf
lea
jb
pushf
movb
pusha
mov
pushl
ret
loope
jp
mov
push
lahf
inc
int
bsf
iret
push
ja
jp
jecxz
xor
mov
sti
inc
call
int3
bound
dec
loop
xchg
add
add
inc
fcoms
rclb
lods
inc
lods
sahf
popf
les
cmc
in
movsb
sub
add
shrb
es
fstl
xor
mov
lods
mov
enter
pop
or
cli
dec
dec
ds
call
imul
jmp
sbb
hlt
xchg
sbb
enter
adc
pop
sbb
popa
mov
lock
cs
adc
ds
frstor
pop
lock
fnsave
fiadds
aad
jne
mov
mov
sbb
push
push
cmp
jnp
lret
jno
adc
add
sbb
sti
test
fstpt
test
aad
add
mov
add
scas
push
xchg
lds
fwait
dec
jecxz
hlt
xchg
cmp
aas
fdivl
and
arpl
cmpsb
aas
in
jne
sar
pop
pop
shll
cli
lret
mov
or
xchg
inc
stc
sahf
sub
andb
mov
rorb
push
scas
or
xchg
pop
sub
jg
push
xchg
aaa
fdivrl
xchg
sub
xor
adc
in
fcmovu
lods
lods
xor
ret
sbb
sbb
mov
sub
mov
stos
push
outsb
mov
cwtl
mov
mov
pop
fucomp
jae
sub
addr16
jg
inc
js
mov
hlt
xchg
jnp
jle
movl
mov
pushf
pushf
lea
jmp
test
repz
fs
cs
jl
loop
and
daa
adc
inc
inc
enter
gs
in
lods
loope
xchg
sbb
add
or
mov
leave
jnp
lret
subl
inc
hlt
xchg
adc
adc
arpl
insb
pusha
movl
jmp
mov
pusha
mov
push
call
lea
jbe
not
dec
adc
mov
cmp
add
rcl
add
rcl
mov
mov
sbb
add
test
movl
pushf
btc
test
mov
lea
pusha
bt
push
cmp
jmp
jmp
outsl
sub
test
sub
outsl
add
into
push
clc
mov
mov
outsl
mov
sbb
cmpsb
cmpsl
xor
and
mov
scas
adc
into
scas
dec
cmp
xchg
dec
or
xchg
mov
push
in
out
jnp
mov
jbe
mov
push
cmp
bound
loope
or
dec
cmc
xchg
scas
pop
repz
rcrl
shrl
fsubs
xor
or
mov
test
fldt
adc
pushf
out
insb
fidivrs
sbb
push
test
push
lds
cmpl
xchg
inc
loopne
mov
sbb
into
into
iret
jge
inc
fildl
dec
dec
stos
add
idiv
inc
and
cwtl
inc
inc
fisubrs
loope
xor
xchg
aas
loope
sbb
mov
mov
adc
imul
js
mov
rcll
or
shld
mov
call
movl
pushf
movw
movb
movl
pushf
lea
jmp
ljmp
shl
dec
dec
lret
mov
fimuls
cmp
or
pop
mov
cltd
lcall
sub
xor
push
push
cmpsb
jl
pusha
iret
aas
frstor
cmp
push
sti
cltd
sub
xchg
push
add
stos
push
hlt
xchg
xchg
inc
inc
movl
sub
cmc
call
fisubl
inc
xlat
inc
xchg
in
aaa
aam
sbb
aam
ljmp
nop
shll
pop
gs
and
or
jle
fs
bound
bound
add
iret
cmp
push
ss
leave
dec
sarl
sbb
adc
out
js
std
bound
idivb
dec
imul
cwtl
dec
inc
out
sub
mov
jp
adc
inc
sbb
cmc
push
mov
js
popf
cmpsb
push
lret
insl
addr16
jbe
pop
dec
movsb
dec
dec
icebp
jns
idiv
stos
out
xor
mov
cmc
or
and
stos
push
add
inc
shlb
push
mov
sub
rcrl
push
jo
jnp
clc
sbb
sti
sbb
xor
push
rcrb
and
clc
push
popa
in
push
movl
pushf
lea
jmp
pop
cs
inc
push
cmp
out
sub
jp
lods
dec
jnp
rcll
mov
jl
cmp
lahf
lock
lock
xor
jle
stos
sub
mov
cmp
xchg
cmc
pop
jmp
dec
push
in
popf
orl
pop
lods
push
in
add
xchg
fstps
out
xchg
leave
pop
ljmp
xchg
xchg
add
cmp
dec
decb
fs
mov
pop
xchg
adc
lret
push
int3
fstl
fwait
cmp
cmpsb
incb
jae
add
fs
imul
add
je
adc
mov
movb
call
fnsave
mov
into
outsl
sub
out
xor
xchg
cmp
xor
iret
jne
pop
cwtl
jmp
push
mov
lcall
mov
pop
add
lea
jmp
iret
pop
sbb
push
in
xchg
es
pushf
push
jmp
dec
outsl
push
push
imul
outsl
popf
data16
insb
jae
cmpsb
jbe
std
push
pushf
movb
call
es
sahf
aaa
fnsave
mov
push
aad
sbb
xchg
fwait
mov
or
pop
bound
lods
lods
cmp
xor
sahf
add
stc
cli
dec
mov
sbb
inc
inc
add
lgs
aad
cmc
mov
jecxz
dec
fstpl
mov
xor
xchg
inc
jl
push
pushf
lea
jmp
movl
pusha
pusha
lea
jmp
pusha
movb
pusha
lea
jb
pusha
stc
cmp
movb
mov
pushf
pusha
lea
ja
stc
pusha
test
cmc
add
lea
pushf
cmp
call
push
call
push
push
add
in
enter
adc
out
dec
shll
pop
fucomi
sbb
inc
lcall
lods
aaa
nop
cltd
mov
incl
lret
sub
pop
mov
addr16
lahf
cmpsl
mov
mov
push
cmpsb
sub
mov
xor
gs
xorb
sbbb
insl
incb
jns
jb
xchg
sarl
pop
lds
sbb
test
popa
pop
lods
inc
jmp
sbb
fwait
popf
sahf
sub
mov
sbb
push
clc
sbb
mov
hlt
xchg
dec
stc
dec
mov
jmp
lea
je
cmp
pusha
cmp
cmp
pusha
jmp
call
add
push
pushw
popfw
pushf
jmp
pushl
lea
call
jmp
push
movl
jmp
out
data16
add
adc
add
movsb
pop
or
jbe
cmp
mov
lea
mov
shl
lcall
test
adc
cmpsl
dec
xchg
lahf
shll
xchg
insb
lea
popf
lcall
pop
jb
or
cld
dec
mov
pop
push
shrb
xor
js
int
lods
cwtl
mov
push
and
in
jae
xchg
cwtl
and
mov
adc
mov
adc
mov
call
movzbw
cwtl
mov
not
movl
setne
pusha
cwtl
lea
call
push
pusha
push
lea
jb
clc
call
call
lret
or
mov
xor
jbe
int3
imul
aaa
lds
pusha
test
pop
pop
add
push
jecxz
inc
xchg
cmp
and
lds
mov
fildl
cld
cmc
arpl
inc
lods
push
push
out
cmpb
add
aas
in
movsl
xchg
mov
inc
imul
das
adc
hlt
and
pop
xchg
inc
add
jns
inc
cwtl
mov
insl
cmp
jae
int3
std
incb
jl
push
std
lahf
cmp
cmp
sbb
lea
sar
decl
insl
movsl
cli
jmp
inc
dec
loop
xor
jp
and
outsb
repz
sbb
jno
ss
daa
stc
ret
outsb
outsl
or
fisttpl
aad
dec
or
jns
mov
jle
outsl
mov
roll
mov
repz
in
nop
mov
or
cmc
sub
adc
test
jmp
sbb
mov
aas
rcrl
jl
mov
in
mov
mov
sti
sbb
cmp
pop
in
jae
cmpsl
fldcw
call
addl
hlt
xchg
aam
xlat
sub
cmc
ror
stc
cmc
call
adc
test
adc
cwtl
cltd
dec
fstpt
xor
popf
es
push
out
lret
jno
xchg
sbb
cmpsl
push
sar
adc
lods
loopne
xchg
fnsave
adc
pop
inc
pushf
xor
inc
arpl
add
jmp
mov
lea
int
icebp
jnp
scas
dec
divl
lret
mov
pop
test
pusha
jmp
pushf
lea
ja
mov
jmp
or
lahf
inc
bnd
loop
test
outsl
cld
cmpl
cmpsl
push
loope
cld
scas
jmp
shlb
fiaddl
add
dec
andb
or
jbe
cli
cwtl
lods
jl
pusha
aas
push
xor
cli
sub
orl
xor
push
movsb
into
push
jns
sub
inc
dec
mov
jl
adc
xchg
sub
jge
jl
or
repz
lds
pusha
test
out
out
jno
jae
mov
in
or
xor
lret
mov
inc
and
loopne
in
push
lea
jmp
pushf
movl
pushl
pushf
pushf
pushf
lea
jmp
push
lock
std
std
xchg
xchg
insl
add
rol
push
sarb
lret
lret
dec
or
mov
pop
mov
xor
popf
out
lods
lods
jge
sub
xor
dec
sbb
aam
pop
rolb
es
test
lods
cltd
push
jno
jae
addr16
xchg
in
xchg
push
imulb
mov
test
test
ret
enter
flds
movl
and
jae
cmc
clc
pusha
sub
jmp
pushl
popl
pushf
push
pusha
pushf
pushl
ret
cs
xor
fs
add
adc
pop
out
lea
cmp
mov
jg
push
aad
lea
mov
lret
push
cmp
push
or
lcall
out
insb
mov
push
and
fcos
shlb
nop
in
push
loope
sahf
cmpsl
leave
jb
mov
and
aad
or
iret
test
xor
xchg
sbb
mov
push
imul
inc
fstl
mov
dec
rclb
xorl
dec
out
xchg
mov
fs
push
cmp
or
neg
lea
mov
dec
sbb
movzbw
push
rol
movsbw
push
shl
push
shld
push
shr
test
btc
push
bt
movzbw
mov
not
bswap
ror
mov
bsr
inc
mov
bt
or
jmp
or
sti
sahf
stc
std
mov
fnstenv
mov
mov
hlt
mov
mov
sub
or
and
sbb
mov
sbb
sub
mov
jbe
sbb
mov
hlt
lcall
sbb
dec
hlt
xchg
lea
nop
jbe
pushf
pusha
pushl
movl
movb
call
cmp
sbb
add
add
add
add
add
add
adc
sbb
sbb
sbb
sbb
sbb
add
add
add
push
negl
add
adc
jecxz
sbb
mov
inc
repnz
lret
movsl
push
mov
test
and
cmc
cmp
dec
mov
dec
addl
cmp
clc
fistps
les
mov
dec
bound
mov
cmp
enter
mov
gs
insb
inc
pusha
jnp
insl
sub
jae
cmpsb
push
adc
cmpsb
mov
insl
push
fwait
pop
jo
pop
movsl
sub
lea
jb
lahf
fs
or
dec
fmuls
fbstp
push
jns
lcall
in
mov
pushf
cmp
cmpsl
jnp
outsb
add
inc
lcall
push
test
loopne
in
setge
fnstsw
icebp
fstpl
mov
dec
push
mov
adc
jg
xlat
aas
aam
seta
lret
xlat
icebp
pop
jae
shrl
int
fwait
inc
cmp
xchg
cltd
hlt
popa
lods
cmp
fucomp
xor
or
loope
jmp
mov
lods
push
dec
sub
xchg
jnp
add
aam
xchg
clc
mov
outsl
xchg
xlat
out
mov
push
shlb
pop
xchg
sub
cltd
push
xchg
clc
lods
sbbb
jle
std
or
push
mov
push
and
iret
lahf
push
push
cmpsb
popf
adc
adc
stos
orb
stos
or
pusha
push
push
or
or
inc
adc
lock
mov
jns
fwait
cmp
std
leave
sub
inc
icebp
cli
or
iret
add
call
mov
and
mov
push
pop
ja
push
mov
ret
jl
out
or
sbb
adc
dec
push
dec
xchg
mov
or
sbb
fmull
popf
rcrb
adc
jle
scas
mov
lea
lds
sub
xlat
mov
mov
xor
in
imul
jge
or
cmp
add
cld
mov
sub
and
insl
push
sahf
out
inc
xlat
dec
movsb
push
dec
rorl
jg
pop
scas
iret
adc
in
in
xchg
test
jge
mov
mov
sub
and
pop
pop
mov
sub
in
mov
stos
test
mov
add
push
arpl
arpl
orb
and
dec
and
mov
push
mulb
js
and
in
xchg
jno
pop
mov
in
fsub
or
xorl
mov
or
add
xchg
addr16
mov
mov
jg
add
mov
ret
xlat
mov
add
xchg
push
push
xor
sub
aam
loop
in
aaa
push
dec
sbb
pop
fisttps
pop
lock
adc
lods
push
in
or
sti
icebp
jae
add
xchg
mov
xchg
ds
and
and
mov
mov
popw
inc
mov
jns
add
frstor
fdivp
jmp
push
outsb
cmpsl
cmp
out
lahf
xchg
dec
jmp
mov
mov
inc
mov
cmp
xchg
dec
push
int3
das
dec
rorb
sbb
push
shl
push
pop
aam
and
into
setb
popa
push
cmp
shlb
mov
enter
pop
repz
int3
push
fstps
ljmp
popa
cmp
xor
mov
cltd
pop
lahf
pop
push
add
ss
adc
jns
movsl
xor
imul
stos
repnz
into
add
jg
ret
mov
xor
inc
sbb
hlt
test
sub
jl
loopne
aad
mov
pushf
cmp
int3
mov
inc
adc
negl
into
jp
les
and
and
and
jb
rorb
repnz
js
mov
mov
das
cmpsb
mov
scas
dec
push
mov
leavew
std
movsb
iret
jae
mov
and
push
and
and
adc
dec
aad
pop
sbb
icebp
std
fnstsw
cs
ror
xchg
xor
xchg
cmp
push
xchg
push
xchg
or
int3
fisttpl
addr16
sarl
sbb
movsl
mov
sti
xchg
jno
mov
xchg
leave
pop
pop
outsb
inc
mov
and
cmc
add
xor
adc
xchg
adc
pop
mov
pop
aas
not
jmp
fisttps
stos
inc
fmul
dec
adc
rolb
lea
out
repz
jb
fcomip
js
pop
xchg
xor
lods
jnp
addb
xor
pop
pushf
cs
sbb
iret
fadd
push
xchg
adc
lds
mov
pop
adc
xchg
mov
in
xchg
unpcklps
les
aad
call
ret
mov
mov
icebp
bound
cmpsl
push
subl
iret
bswap
int
mov
mov
push
mov
jbe
push
imul
adc
mov
movsl
mov
pop
xchg
repnz
stos
push
outsl
pand
sti
fsubrs
mov
add
ja
pop
and
ss
cmp
loopne
movsb
fisttpll
ficoml
push
xchg
mov
popa
push
in
and
mov
mov
cmpsb
xor
jb
popf
ljmp
mov
cli
das
cmp
dec
pop
cmpb
inc
adc
gs
xchg
insb
mov
jnp
in
pop
ss
pop
stc
mov
sahf
sub
inc
pop
sub
mov
cli
aaa
lret
add
sbb
lea
dec
inc
pop
push
mov
rorl
pop
insl
jne
cld
adc
jns
rol
xchg
pop
push
clc
mov
inc
fcom
das
inc
cli
out
mov
pop
lods
fsubl
mov
dec
add
lods
aam
sahf
push
mov
sti
mov
jns
mov
push
testl
or
pop
popa
hlt
icebp
das
or
mov
movsl
add
test
sub
dec
push
pop
mov
insl
rcr
out
imul
into
xchg
lret
mov
mov
pop
insl
loopne
mov
jae
ss
or
mov
leave
pop
or
lock
fmuls
cmp
addr16
mov
push
das
loop
repz
ljmp
add
sbbl
shl
mov
and
xchg
push
ffree
addr16
ds
cmp
sub
inc
iret
popa
lcall
sti
sbb
leave
hlt
mov
inc
xor
sbbl
fcmovb
or
adc
loope
mov
je
fistpll
sub
xchg
mov
or
lret
pop
sahf
jmp
ljmp
aad
pop
hlt
pop
bound
lcall
or
or
outsl
and
jne
cltd
mov
fiaddl
pop
jb
sbb
ret
jp,pt
or
sub
pop
and
repnz
sbb
xlat
inc
fsub
enter
movsl
push
xor
lret
mov
xchg
dec
adc
test
jge
pop
insl
and
cli
movsl
add
or
jmp
push
imul
inc
mov
fwait
jecxz
jmp
bsf
es
sbb
jae
pop
push
cld
lret
aas
mov
sub
xchg
adc
test
jne
mov
mov
adc
loopne
push
ficoms
push
inc
xor
adc
mov
xor
pop
roll
or
push
cwtl
pushf
lret
pop
test
out
sbb
sbb
mov
push
shl
xor
mov
adc
loop
mov
mov
mov
pop
bound
mov
cmpsl
cmp
jno
ret
test
mov
ret
adc
jle
jg
mov
insl
pop
xchg
xchg
push
mov
jmp
fstpl
dec
clc
xchg
repz
loop
cmp
fadd
inc
jno
addl
mov
xchg
push
pop
movsl
out
mov
lods
pop
add
pop
jno
mov
mov
repnz
andl
fists
pop
jg
add
jo
aam
sahf
mov
push
popf
pop
dec
xor
jno
jle
pop
cwtl
shl
les
jecxz
cmp
stos
insl
xchg
mov
sarl
inc
out
out
sbb
cmp
ja
repnz
add
sbb
xor
dec
fcomps
xor
push
pusha
lcall
insl
mov
pop
orl
fwait
aas
mov
push
xor
fisttpl
aas
out
mov
xchg
mov
mov
jbe
xlat
pop
cmpsl
push
cmpsb
push
mov
and
scas
insb
arpl
cmp
andl
cmpl
push
mov
dec
push
inc
cs
in
loope
aad
pop
fwait
jge
mov
xchg
mov
push
in
jmp
test
jmp
cmc
push
mov
cmp
pop
inc
pop
mov
cmp
push
cmp
frstor
lea
adc
mov
mov
lds
mov
add
and
pop
and
inc
fwait
jl
cmpsb
dec
out
in
addr16
push
jo
or
out
popf
cmp
mov
stos
push
add
push
cli
jb
xor
aas
xchg
xorb
push
inc
jl
mov
mov
jbe
pop
xchg
ds
cltd
mov
dec
sbb
pop
lahf
mov
inc
and
jge
aam
xchg
loop
cmpsl
das
testb
jl
mov
ret
pop
adc
je
push
sub
or
mov
pop
ret
xchg
icebp
in
negb
jp
xchg
xchg
ja
mov
xchg
mov
push
int
inc
fistpl
into
inc
mov
add
js
mov
in
test
xor
loopne
jns
or
push
pop
xchg
pop
push
mov
push
jmp
jno
xorb
call
jl
jmp
mov
aas
fs
js
stos
or
mov
push
mov
scas
pop
int
out
mov
dec
lock
out
adc
xchg
xchg
inc
lods
dec
movsl
jb
insb
bound
jecxz
xor
scas
sbb
mov
fwait
dec
iret
dec
jno
aam
jmp
outsl
cmc
sbb
add
dec
mov
roll
add
pop
leave
jnp
push
jp
cmpsb
push
cmp
dec
pop
or
lret
out
and
call
rcrl
adc
into
adcb
in
imul
sarl
jge
negl
dec
cltd
cld
inc
cli
fildl
aad
mov
jle
jnp
push
mov
mov
cs
addr16
mov
in
imul
cmp
imul
sbb
rorl
stc
pop
pop
lods
xchg
ja
cmp
enter
in
cltd
std
aaa
pop
mov
repz
in
test
divb
xor
xchg
pop
pop
cmp
mov
jo
cmp
or
stos
and
loope
js
add
add
add
push
std
imul
or
pop
loope
xor
jge
fwait
dec
add
roll
loopne
dec
cld
fstpt
out
outsl
icebp
scas
push
out
lods
mov
jecxz
and
xor
movsl
push
mov
out
sbb
pop
hlt
cmc
xchg
xor
jmp
shrb
mov
addb
mov
jbe
lods
iret
push
jbe
dec
add
enter
and
les
fdivrp
mov
mov
jge
mov
mov
pop
adc
jle
push
ret
jns
add
mov
popa
pop
stos
into
out
jno
and
testl
mov
mov
popf
fcoml
in
add
roll
xchg
std
mov
dec
repnz
sbb
das
push
pop
push
mov
daa
ror
push
data16
bound
daa
mov
or
jb
lret
mov
xor
adc
add
mov
pushl
lea
ja
pushf
jmp
jno
push
scas
push
push
add
add
and
jbe
mov
into
push
mov
cli
lret
out
lea
mov
test
jecxz
xor
jle
xor
dec
loopne
push
mov
push
and
lods
in
cmp
shrl
xchg
push
pop
cmp
mov
adc
aas
out
and
test
in
xchg
add
lret
popa
pushf
pop
cwtl
mov
lahf
jo
dec
or
jae
push
test
pop
xchg
sbb
stos
int
cmp
xchg
ss
pusha
movl
call
test
cmp
add
jne
popa
out
push
loope
lfs
scas
cmp
jl
cmp
popf
push
add
xor
sbb
add
cmp
clc
out
mov
pop
mov
jg
ret
dec
repz
loop
xchg
lcall
dec
xchg
sub
leave
ljmp
mov
add
fcoml
sbb
mov
daa
aas
sub
lea
aad
aad
push
add
lea
push
jmp
movl
pushl
movl
pusha
movb
lea
jmp
add
cltd
ss
push
add
movsb
clc
stc
sahf
push
in
lea
fistps
pop
out
cmpl
lea
sub
cmp
fs
loope
sbb
push
sti
ss
js
jge
pushf
mov
outsb
aas
xchg
push
test
sub
ret
push
insb
cs
das
push
rolb
xchg
sbb
bound
add
lret
jo
xor
aad
mov
and
and
mov
ljmp
push
pusha
mov
mov
push
lea
call
pusha
mov
pushf
pusha
pusha
lea
jmp
pop
sbb
cmpsb
inc
xchg
xchg
push
scas
pop
mov
sbb
xor
cli
sti
mov
xchg
es
pop
push
in
fcoms
xchg
fwait
xor
rcll
xchg
xchg
into
fs
mov
sbb
jle
push
sarl
xchg
dec
shlb
dec
icebp
sbbl
jno
in
jae
xorb
push
pop
subb
inc
add
hlt
xchg
jae
sarb
mov
ret
mov
lock
lret
cmpsb
pop
pop
or
popf
subl
inc
addr16
pop
fnstsw
imul
add
sarl
cmpsl
out
mov
sub
jge
or
mov
scas
push
je
cmp
mov
aaa
in
lods
ja
gs
test
divl
fdivrs
jge
xchg
lea
xchg
adc
push
cwtl
push
in
hlt
xchg
test
mov
lcall
inc
popf
push
ret
push
pop
sbb
xchg
call
shll
and
popf
inc
ret
pop
stos
and
lret
sub
sbb
or
mov
daa
mov
add
push
sti
mov
or
inc
ds
xchg
sbb
dec
jle
outsb
sbb
dec
out
cwtl
xor
xchg
std
and
stos
mov
xchg
dec
das
mov
or
in
or
ss
cmpsl
push
push
movl
pushf
mov
lea
jmp
add
sti
cmpsl
dec
mov
cmpsl
cld
mov
jmp
or
inc
imull
icebp
cmp
mov
movnti
mov
push
int3
pop
fsub
mov
fs
shrb
movsb
cmp
into
std
inc
subl
ret
icebp
imul
add
rcrb
dec
rorl
xchg
sbb
mov
mov
mov
stos
pop
adc
pop
cmp
call
iret
ror
ja
sub
bound
cmpsl
movsl
add
pop
xchg
rcll
push
jnp
cmpsl
das
mov
inc
add
push
mov
shlb
jns
mov
dec
imul
aaa
jmp
es
out
mov
mov
repnz
lock
add
vhsubpd
stos
stos
dec
sti
sub
in
mov
les
xchg
sub
or
or
push
addl
xchg
ja
cmpsl
dec
fmull
adc
aam
imul
inc
aad
xchg
adc
and
stos
jne
mov
aas
or
mov
jmp
test
fstpl
sub
or
sbb
sarb
and
ljmp
xchg
sahf
mov
notb
out
push
add
gs
fistl
iret
or
jmp
out
jb
jae
into
pusha
cli
cwtl
push
adc
mov
fisubrs
outsl
int
mov
dec
insl
sti
lahf
shlb
xchg
pop
and
bsf
mov
add
mov
jmp
and
add
push
cmpsl
inc
int
or
or
inc
sub
push
repz
outsl
jo
dec
fsubs
mov
ret
gs
add
xchg
sub
push
mov
mov
in
out
mov
xor
outsb
lock
fistpl
cmp
push
in
xor
sub
insb
out
add
fsubp
lahf
enter
dec
jl
mov
mov
xor
add
mov
mov
pop
icebp
mov
mov
push
pop
mov
mov
lods
stc
clc
not
pusha
pushf
xor
jmp
movb
jmp
shl
neg
pushf
movsbl
mov
call
jmp
mov
mov
inc
cmp
jle
loopne
push
mov
mov
sub
popa
xor
aam
out
pop
push
mov
xor
pop
mov
icebp
cli
cmpb
test
mov
js
add
aad
mov
addl
adc
mov
mov
lock
dec
icebp
sub
orb
dec
rorb
int
jmp
mov
loopne
or
in
orl
adcl
push
mov
out
test
jmp
pushf
dec
cmc
shl
mov
setno
lods
jmp
mov
pushf
movw
movb
pushf
lea
jmp
mov
movw
pushl
ret
mov
pushf
mov
call
mov
movzbw
push
call
loopne
jge
lods
cmpsb
and
add
pop
pop
shrd
out
dec
jecxz
mov
push
pushl
aaa
shll
loop
pop
and
dec
jge
push
stc
sbb
and
lods
arpl
in
lock
xchg
push
and
xchg
or
or
and
hlt
mov
bound
scas
push
and
loope
push
jns
fdivl
movsl
imul
cli
movsb
cs
addl
repz
jle
adcb
adc
mov
or
into
mov
xchg
add
sbb
into
xchg
adc
clc
sbb
sbb
lahf
adc
add
sbb
imul
add
add
add
dec
ret
sbb
or
sbb
add
leave
addb
xorl
stos
ret
lods
dec
or
shrb
pop
mov
addl
pop
mov
pop
rclb
or
in
imul
and
out
adc
negl
out
bsr
hlt
xchg
lret
out
jmp
rcrb
or
or
fidivrl
sti
push
testb
add
xchg
mov
dec
sbb
into
jae
mov
dec
add
iret
loop
daa
fstl
out
dec
add
push
pushf
pop
or
xor
push
popf
cmp
imul
loop
sub
daa
lods
loope
mov
xchg
rorb
fwait
lds
mov
movsbw
shr
inc
setge
mov
call
test
outsb
dec
xchg
jmp
out
and
jle
lods
push
negb
sub
cwtl
inc
xchg
movsl
or
inc
cwtl
cmp
ja
rclb
cmpl
pop
sub
mov
add
push
int3
pushl
insl
lcall
pop
or
leave
xchg
clc
stos
rcr
outsl
mov
jo
fbld
cmpsb
jbe
sub
xchg
mov
cltd
mov
cmp
out
jne
fnstenv
mov
xlat
insl
sti
test
xchg
inc
inc
movl
pushl
movb
mov
lea
jmp
add
dec
gs
popa
addr16
outsl
js
add
mov
add
dec
push
sbb
add
add
sbb
out
sbb
adc
sbb
add
sbb
add
add
jne
lea
pushf
mov
pusha
pushl
ret
jmp
pushf
lea
call
jmp
and
inc
repz
into
push
cld
xchg
aam
dec
cwtl
cwtl
cltd
dec
xchg
adc
adc
dec
out
lcall
mov
imul
xchg
xchg
xchg
sbb
lods
addr16
cmp
popa
repz
xchg
mov
ss
push
or
xor
pop
mov
dec
cli
test
mov
hlt
xchg
xor
lea
call
pushf
mov
adc
mov
pushf
lea
jae
pushf
movw
push
lea
jne
pusha
stos
push
pusha
mov
push
lea
jmp
test
stc
or
pusha
pushl
lea
jne
movzbl
mov
test
or
jmp
idivl
mov
sbb
jp
mov
mov
mov
or
pop
adc
out
lock
bound
or
xor
fistps
inc
outsb
outsl
les
rclb
cmpsl
popa
add
iret
push
xlat
imul
cmpsl
movl
call
add
inc
aam
popa
out
xor
xchg
fnsave
shlb
xor
pop
inc
jg
jbe
fwait
cmp
out
lock
cmp
push
addr16
out
lock
shrl
outsl
sub
and
inc
stos
inc
xchg
pop
in
xor
jo
imul
out
in
fidivs
cmpsl
xor
mov
imul
pop
inc
mov
inc
push
aaa
adcb
jg
icebp
jnp
lcall
sub
je
add
in
adc
inc
aas
leave
aam
jle
push
mov
in
sar
ret
push
movsl
enter
jp
push
jl
test
mov
sub
jmp
in
mov
mov
ret
lea
lods
sti
movsl
das
and
xor
dec
out
test
aam
sub
mov
adc
sbb
push
test
dec
call
push
nop
xor
xchg
pushf
movl
movw
push
movb
pushf
lea
jmp
push
push
cmp
add
push
lea
jmp
movl
jmp
cmp
in
pop
sbb
push
insb
rol
fists
lods
push
fistpll
aam
mov
cmp
push
lea
pushf
int
jo
filds
lcall
or
xchg
leave
pop
inc
pop
cmp
dec
add
movsl
cmpsb
xor
dec
fdivl
pop
add
rolb
hlt
cmp
pop
mov
cmp
clc
das
in
imul
or
jns
test
adcb
jb
pushf
arpl
repnz
popf
mov
xchg
jno
fwait
inc
std
xchg
lods
popa
push
mov
cmpl
mov
cmpsl
push
int3
aad
out
cltd
and
cmp
lea
leave
dec
std
stos
popa
out
pop
mov
xchg
test
call
push
pushf
jmp
pushf
movl
mov
push
movw
lea
jmp
pusha
pusha
pushf
jmp
pushf
jmp
lea
jp
jne
movzbw
movzbw
mov
not
movb
movsbw
call
arpl
jecxz
push
mov
dec
in
popl
xchg
int3
addl
sub
adc
sbb
stos
inc
sbb
push
cmp
push
or
andb
test
mov
sbb
pop
loope
adc
cmp
hlt
xchg
int3
xorl
cmp
sahf
and
xchg
sub
fcomps
mov
and
push
or
rcrl
mov
dec
adc
sbb
inc
lret
jle
xchg
dec
cli
popf
push
push
clc
sbb
jne
shlb
pop
pop
out
rclb
bsr
cmpsl
inc
jecxz
hlt
xchg
sti
mov
daa
and
repz
movsl
xlat
jo
sahf
cmp
jns
mov
std
cmp
lods
vpunpckhqdq
jp
adc
shld
jne
lret
xchg
pop
loope
shrb
outsb
xchg
dec
shll
push
mov
daa
fnstsw
popa
fs
shrd
mov
lods
sti
popf
inc
iret
sahf
fs
mov
in
jae
mov
jecxz
pop
mov
xchg
rcll
jo
or
dec
in
xor
mov
push
in
ss
xchg
int
hlt
cld
popf
repnz
mov
pop
fistpl
pushf
ss
std
xchg
pop
mov
in
mov
adc
xchg
jo
fs
ret
pop
mov
cmp
sub
inc
mov
mov
fdivl
inc
mov
stc
jge
mov
test
push
cld
mov
add
xor
repz
test
test
je
add
mov
push
mov
pushf
and
pop
bound
ja
mov
and
mov
cmp
lahf
pop
sbb
fldenv
stos
mov
inc
aam
nop
cmc
sahf
inc
enter
inc
rcr
fstp
imul
inc
jbe
mov
sahf
lahf
dec
div
test
gs
lret
mov
mov
lea
xchg
cwtl
mov
cmp
pop
in
jae
cwtl
leave
lret
data16
in
sbb
xchg
add
pusha
mov
call
push
pushf
mov
call
or
push
cmp
jo
dec
jmp
xchg
xor
lcall
dec
cmpsl
and
rolb
push
stos
lods
jns,pt
fsub
push
and
movsb
cwtl
pop
popf
mov
adc
out
lock
pop
mov
sahf
or
dec
dec
outsb
in
push
pop
mov
mov
ja
cmc
xchg
mov
rorl
lret
mov
mov
stos
and
pop
pushf
sub
add
call
lret
xchg
aas
aam
push
and
sbb
jl
scas
arpl
imul
cmpsl
inc
or
mov
xor
xchg
fnsave
dec
lret
push
add
or
jle
stc
ret
push
fidivrs
call
push
pushf
push
shlb
xchg
mov
movsbw
lea
lahf
movl
pushf
lahf
lea
pushl
lea
jbe
push
push
pushf
pushf
call
seta
mov
mov
seta
push
pushl
inc
mov
mov
call
movl
jmp
call
lods
cmp
bt
neg
movw
pushl
jmp
test
not
mov
cmc
cmc
stc
push
cmpb
call
pushf
pushl
movl
pusha
lea
ja
pusha
movl
movb
pushl
pusha
lea
jmp
jmp
leave
int
or
dec
xor
in
mov
or
jp
int3
jle
outsl
sbb
rolb
add
lcall
rorl
notb
lahf
cmp
in
add
mov
lret
hlt
xchg
ss
or
sub
mov
mov
in
jns
pushf
push
cmc
stos
hlt
or
rclb
sahf
mov
loopne
pop
fcompl
fwait
sbb
push
dec
push
dec
iret
cwtl
push
cwtl
ret
xor
jg
stos
xor
or
pop
into
push
repz
xor
or
nop/reserved
xrelease
lcallw
fisttpll
sahf
lahf
and
fwait
xor
push
mov
lret
push
mov
pop
test
fstpt
int
add
in
lcall
pop
dec
jns
sbb
outsb
repz
or
imul
push
out
popf
pop
pop
in
incb
and
repz
jne
dec
test
lock
clc
sahf
xor
je
xchg
shl
roll
movsb
mov
inc
dec
inc
cmp
and
xchg
shrd
mov
pushf
adc
neg
mov
cmp
cmp
mov
call
call
stc
neg
pushf
call
lods
not
neg
pushf
stc
adc
sub
ror
jmp
pushf
pushl
movl
pushl
pushl
lea
jmp
pushl
popl
movb
movb
push
pushl
pushl
ret
mov
jmp
pusha
call
cmp
test
jmp
push
lea
call
jmp
sub
adc
fisubrl
push
adc
mov
push
adc
mov
mov
inc
cmc
dec
daa
mov
adc
shlb
add
push
adc
pop
xor
sbb
mov
add
in
std
dec
adc
in
das
add
push
adc
pushl
and
ljmp
jbe
and
fwait
cmp
pop
lods
stos
and
dec
adc
inc
and
pushf
and
addr16
sub
pushf
jo
push
adc
xor
push
adc
outsl
xor
sbb
mov
adc
aam
mov
sbb
cmpsl
popa
mov
mov
pop
outsb
dec
xor
scas
push
adc
mov
adc
pop
stos
push
adc
push
mov
ficompl
das
and
sti
mov
popf
jle
sub
dec
cmc
mov
sub
and
adc
ss
push
adc
pushl
mov
adc
ja
adc
mov
push
out
in
adc
add
push
sbb
adc
add
add
mov
data16
adc
cmpsb
mov
int3
or
es
xor
aas
sub
adc
mov
aas
sbb
xor
adc
sub
or
add
sub
mov
pop
mov
aam
shlb
and
mov
movsb
arpl
push
adc
xor
pop
add
mov
and
fsubrs
repnz
and
and
and
mov
popa
jae
xor
adc
pushfw
call
test
stc
cmp
cmp
push
call
imul
stc
pushf
add
pusha
push
lea
jmp
pushf
stos
pusha
jmp
movl
pusha
pusha
pushl
lea
jmp
mov
lea
call
mov
das
xor
and
dec
fists
dec
int
mov
jmp
pop
xchg
or
sub
sbb
xor
in
push
add
jmp
in
jnp
nop
aam
jae
hlt
bound
cmp
outsl
sub
imul
inc
fbld
xchg
out
sbb
inc
xchg
mov
inc
xlat
pusha
cmc
cmpsb
xor
gs
push
mov
mov
mov
adcb
out
pushf
mov
cmp
pop
add
xchg
pop
rorl
xchg
or
pop
add
and
add
push
pusha
pusha
pushf
mov
mov
movw
pushf
lea
call
jmp
aam
and
xchg
xor
jae
mov
mov
in
stos
dec
addl
fwait
pop
frstor
pop
add
dec
dec
ficoml
cmp
in
push
add
push
xchg
repnz
arpl
mov
int
and
pop
fimull
pusha
add
sub
mov
mov
mov
std
mov
mov
pop
or
push
jb
ja
cld
push
jecxz
mov
pop
jnp
jmp
jb
enter
jg
rcrb
mov
call
push
popa
sti
cld
sub
dec
push
int3
pusha
cltd
mov
xor
sub
std
repz
add
icebp
aas
inc
xchg
inc
lcall
scas
inc
leave
adc
lret
insb
or
insb
push
aam
adc
xchg
mov
movl
pushf
movb
pusha
lea
jmp
shr
jmp
pushf
lea
ja
pushf
imul
stc
test
test
jmp
jmp
jmp
cmp
test
test
bt
add
pushf
push
call
push
pusha
push
mov
pushf
mov
lea
jmp
jmp
movsb
imul
arpl
adc
addr16
lea
push
add
enter
mov
hlt
mov
pop
int3
xchg
in
inc
fistl
xchg
sbb
sbb
push
xor
ss
pop
sbb
cli
xor
stos
shll
mov
iret
into
rcll
mov
xor
or
dec
in
add
sub
pop
jno
mov
imul
pop
mov
xor
outsl
and
inc
test
push
sbb
inc
jl
lea
mov
fbstp
popf
push
or
add
mov
mov
jnp
bt
xadd
clc
cmp
push
bswap
call
movl
pusha
call
pusha
pushl
movw
lea
jne
rcr
mov
cmp
clc
pusha
or
call
add
mov
add
dec
push
sbb
add
add
sbb
out
sbb
adc
sbb
add
sbb
add
add
add
dec
dec
clc
popf
daa
and
dec
lahf
nop
in
in
sub
inc
rclb
jne
mov
cmpsl
cmp
lcall
scas
pop
pop
repnz
jge
enter
cmpsl
xor
mov
lret
dec
repz
popa
xchg
jb
sub
into
aas
ljmp
outsl
adc
ror
test
pop
dec
dec
lcall
notb
xor
hlt
xchg
or
ljmp
mov
jecxz
jns
cmp
push
ret
adc
sub
xor
into
cmpsb
sbb
in
push
jmp
cmp
add
or
stos
jge
xchg
mov
jecxz
add
xchg
mov
std
cmpb
ror
add
push
pop
fldt
fsubrs
xor
aas
pop
adc
sti
inc
cmpsl
mov
push
aad
out
arpl
loope
dec
fiadds
stc
loope
sti
movsl
test
pop
fsubs
dec
pop
shll
mov
outsl
subb
daa
push
shll
mov
push
sub
cmp
dec
pop
xor
add
bound
repnz
xchg
nop
testl
loopne
mov
mov
xchg
add
insl
out
sub
push
ret
xchg
adc
repz
mov
aam
nop
ret
jnp
mov
pop
sub
fbld
rcr
jno
out
jmp
rcl
andb
xor
aas
int3
jno
mov
icebp
cmpb
jno
les
xchg
test
push
add
loopne
frstor
pop
jnp
fnsave
faddl
es
jbe
xchg
jl
xor
mov
jmp
adc
lret
popa
hlt
xchg
subl
ljmp
test
or
mov
pusha
lea
jle
push
movl
jmp
mov
and
rcll
pop
sete
ret
rorl
insl
pop
dec
push
cwtl
cltd
sarb
mov
pop
in
test
fdiv
xor
cwtl
pop
cld
imul
dec
cmpsl
popf
loope
das
int
or
in
stos
xor
imul
out
fs
jne
shld
xor
or
xor
mov
pushf
shl
pushl
bt
add
rcl
mov
test
test
pushf
pushf
push
jmp
lahf
nop
repz
sar
hlt
popf
inc
lcall
jb
jo
mov
mov
sahf
flds
sahf
push
xchg
jmp
fwait
and
ss
lea
iret
sub
jle
push
sub
mov
sub
fcmove
mov
mov
test
push
mov
sahf
das
xchg
cmp
sti
cwtl
lods
mov
rclb
sahf
jno
add
into
cmp
les
ret
adc
mov
adc
sbb
addb
in
fs
iret
ds
inc
push
andb
fisubs
mov
mov
mov
push
aas
jae
pop
mov
fdivl
lea
or
mov
pop
iret
fidivs
and
xorb
xchg
bound
adc
fidivs
sbb
adc
ret
ds
test
xchg
pop
inc
or
ss
das
push
xchg
mov
icebp
test
lds
fldenv
rorl
imul
jge
push
xchg
lea
ss
insb
iret
addb
popf
mov
sar
xor
ja
pop
loope
push
hlt
jbe
popf
dec
jle
scas
clc
scas
xchg
ss
ret
fbld
loopne
aas
into
xchg
and
sub
dec
aaa
xchg
mov
xor
andb
cmp
adc
jnp
lahf
push
mov
jge
xchg
fidivrs
sbb
cmp
push
jle
mov
out
adcb
dec
mov
iret
mov
aad
push
adcb
loope
mov
pop
int
fsub
jb
xor
pop
xchg
dec
int
sub
lods
stc
adc
shll
sbbl
mov
xchg
cld
ficomps
frstor
pop
hlt
lcall
sub
and
xchg
sbbl
fistpl
jnp
decb
stc
int3
cwtl
shrb
outsl
dec
sbb
xchg
xchg
outsl
cs
cltd
lds
cli
iret
lret
and
hlt
add
mov
pop
movsl
mov
setp
pop
jge
aad
int
fcoms
ljmp
dec
out
lahf
popa
addr16
fnsave
xchg
mov
int
pop
loopne
pop
mov
into
ret
jg
fwait
cld
addr16
cltd
mov
mov
jbe
imul
lods
adc
adc
dec
sub
cli
je
fists
insl
jle
aaa
lods
mov
repz
lret
mov
xchg
inc
leave
sbb
inc
push
rcrl
sub
idiv
mov
test
push
adc
pop
mov
nop
xor
push
pop
into
sub
fcoms
xlat
popf
lods
cltd
int
iret
sbb
in
scas
push
sahf
into
mov
jp
fisubl
iret
dec
adc
push
in
outsb
fdivs
movsl
mov
xchg
addr16
rorl
lret
mov
dec
add
adc
cwtl
mov
jp
push
stos
or
add
and
test
mov
jg
push
lcall
iret
arpl
cmp
xchg
dec
jle
ja
jle
xor
inc
cmpsl
jno
cmp
push
dec
xchg
mov
test
push
push
sti
push
cmp
xchg
adc
push
test
int
xchg
push
cld
rcrl
fdivs
mov
sub
popf
jecxz
mov
mov
push
mov
push
dec
clc
push
movsb
push
jb
insl
sarb
pushf
xchg
outsb
jecxz
push
daa
pop
test
cmp
insb
movsb
xor
pop
push
cmpsb
and
add
outsl
sbb
lahf
mov
push
repz
shrl
cli
cs
jns
or
xchg
in
cmc
imul
sarl
mov
mov
mov
lahf
adc
lods
hlt
mov
gs
cmp
fldenv
mov
push
sti
iret
adc
mov
mov
mov
aas
fmulp
push
lea
dec
and
jg
movsl
mov
fwait
jns
loopne
mov
dec
and
pop
in
jle
sbb
sahf
xchg
movsb
dec
xchg
in
lahf
sbb
mov
sti
jno
std
clc
add
jle
packuswb
xchg
and
dec
sahf
orb
inc
cmp
movsb
jo
jmp
fisubrs
pop
pop
outsb
js
imulb
pop
fucomp
repz
lds
jp
xor
pusha
jl
lods
mov
adc
fs
xchg
lds
xchg
adc
pushf
and
data16
mov
pop
push
cmc
jge
pop
dec
sub
add
sbb
fisttpll
mov
fimull
jbe
lea
add
pop
in
in
imulb
inc
push
or
scas
ficomps
xchg
cltd
and
dec
mov
vmread
shlb
pop
adc
xor
pop
fwait
pop
scas
iret
cmp
lret
div
mov
fisubrs
cltd
dec
mov
mov
sub
and
addr16
hlt
iret
sub
sub
sahf
mov
pop
test
or
push
adc
insb
xchg
sti
ret
andb
lea
dec
and
pop
inc
jbe
cmp
fidivs
push
pop
mov
inc
rcr
mov
jge
pop
test
mov
into
out
popf
jb
push
int
inc
sbb
cmc
lcall
in
ret
int3
mov
mov
or
pop
negb
inc
cld
cmp
int
in
das
push
jg
pop
negb
push
outsb
sbb
pop
sub
test
sub
dec
fisubrs
cmp
sub
pop
jb
cmpsb
jg
ljmp
outsb
mov
ss
movsb
dec
jb
sbbb
xor
lcall
punpcklbw
scas
push
rol
outsl
jae
jecxz
clc
repnz
ja
jne
xorb
data16
push
or
jae
or
jbe
lea
sbb
jns
fs
jmp
es
cmpsl
gs
ficoms
jecxz
iret
imul
icebp
mov
shlb
add
pop
imul
xor
lcall
or
aam
popf
popf
xor
sbb
pop
es
out
jne
xlat
das
sbb
inc
xchg
push
mov
lret
push
jge
sbb
pushf
out
into
fisubl
xchg
in
jmp
dec
addr16
enter
ss
xchg
lods
push
dec
jecxz
lahf
inc
movsb
push
repnz
jb
push
sbb
insl
sbb
mov
mov
fists
test
jg
cli
movsb
jns
mov
xchg
mov
icebp
xor
test
add
cld
mov
cmp
cs
jo
xor
outsb
iret
push
fdivrs
jle
test
mov
push
jle
addl
mov
jle
dec
mov
add
cld
pop
cmpsb
jbe
cs
sbb
sub
jg
pop
add
xchg
pop
xor
int3
sbb
fildll
mov
movsb
fadd
mov
xchg
mov
dec
pushf
outsb
lahf
dec
subb
sub
ss
data16
fimull
ja
in
popf
addr16
mov
jbe
mov
or
push
jle
pop
jb
scas
xlat
ficoml
pop
out
stc
pushf
push
ljmp
dec
push
xchg
add
insb
aas
pushf
outsb
dec
cli
mov
std
ja
xchg
addr16
mov
add
divb
ss
pop
cmpsb
pusha
push
xchg
xchg
decb
rorb
xchg
and
cli
ficomps
test
outsb
testl
leave
cmc
pop
jle
xchg
push
imul
cmc
cs
xchg
aam
outsl
pop
call
xlat
sbb
insb
mov
cld
fistpll
xchg
lcall
mov
outsb
push
into
pop
mov
xchg
xchg
aas
xchg
ja
cmpsb
pop
fldenv
mov
outsb
das
call
cmp
jb
outsl
fwait
dec
mov
pop
cli
mov
or
decb
fwait
dec
outsb
pop
iret
out
push
mov
loop
mov
pop
adc
lahf
sbb
add
push
xchg
mov
int3
cmpsl
jg
sbb
mov
lds
pop
scas
xchg
jle
push
pop
jp
shlb
push
push
outsb
ss
xchg
mov
out
mov
iret
daa
or
pop
pop
or
cs
xchg
pop
push
pop
add
push
fdivrp
mov
add
push
ja
sbb
jg
adc
lret
add
addr16
testb
iret
pop
xchg
pop
insl
ja
outsl
outsl
cmpb
pop
push
push
out
jl
xlat
ja
jns
pop
mov
imul
xlat
add
mov
inc
outsl
int
nop
sub
mov
test
mov
and
lcall
addr16
or
rcr
xlat
mov
fisubrs
iret
fmulp
out
push
pop
rclb
xchg
jp
cmp
jo
pop
call
scas
xchg
xchg
ja
pop
mov
sti
fbstp
add
xchg
lahf
addb
pusha
rorb
jb
cmp
dec
movsl
fcompl
jnp
sbb
pop
xor
lods
test
cmpsl
mov
popa
ficomps
pop
inc
cld
pushf
lock
mov
jmp
push
adc
and
push
hlt
mov
and
mov
xrstor
add
or
mov
cmpsl
dec
ljmp
fwait
pop
out
lods
stos
nop
lcall
dec
jecxz
mov
sbb
iret
mov
ficomps
pushf
cld
into
push
push
xor
cwtl
mov
movsl
fstpl
or
andb
sti
adc
push
mov
pushf
cmp
ret
mov
jne
test
add
cmc
push
lods
sub
cmp
jge
clc
push
xchg
into
scas
enter
iret
test
mov
push
mov
and
or
mov
sub
xchg
pop
and
lods
pushf
std
add
or
push
jle
adcb
pop
mov
and
sbb
fistl
mov
out
cld
jbe
decb
dec
std
push
sub
iret
sub
out
orb
loopne
xchg
and
lods
dec
cmovno
pop
and
addr16
into
out
js
pop
imul
xchg
push
int
mov
aad
lock
mov
lock
cmp
pop
xor
sub
pop
pop
mov
psubq
lret
add
lahf
push
stos
into
lahf
push
test
out
push
in
outsb
xchg
mov
mov
add
sbbb
orb
int
hlt
push
or
add
into
mov
xor
dec
ror
cmc
and
and
or
push
mov
arpl
sbb
inc
sahf
sub
xchg
sbb
mov
rorl
int
sub
sbb
outsl
enter
mov
jp
pop
mov
fsts
orl
fmulp
lods
adc
sbb
lock
cmc
lea
push
mov
jle
inc
add
test
sarl
icebp
mov
mov
repz
mov
outsl
add
push
sub
pop
and
lret
cltd
mov
xchg
mov
rcr
pop
fs
cs
fmulp
aad
addr16
fiadds
push
pop
popa
in
and
stc
icebp
js
pop
lea
shll
fildll
or
sbb
push
push
pop
cmpsl
jmp
mov
jp
sbb
jge
jp
add
jp
cwtl
cmp
sbb
xor
into
fisttpll
outsb
fsubp
insl
pushf
jne
mov
hlt
pop
hlt
adc
mov
int3
xchg
int
jae
xchg
cltd
and
jp
xchg
out
push
subb
jbe
fisubrs
std
scas
pop
inc
xchg
ss
xchg
js
outsb
adc
mov
es
sbb
sti
ret
sbb
lret
test
pop
or
mov
push
fwait
into
push
es
xchg
mov
or
mov
mov
sarb
lea
popa
pop
push
hlt
dec
addr16
arpl
cmp
inc
hlt
cli
cwtl
cmp
iret
fwait
add
pushf
popa
pop
into
in
mov
xchg
fdivp
cs
pop
or
int
fsubrl
sbb
in
cmpsl
js
pop
stc
sbb
lahf
into
cmp
xchg
dec
iret
push
fildl
adc
popf
ret
mov
dec
mov
sbb
cmc
jmp
jno
mov
sub
sti
mov
lock
mov
pop
push
sbbb
jbe
addr16
js
std
pop
mov
movsl
and
lret
push
ss
call
pushf
pop
into
mov
popf
fistps
je
mov
jp
outsb
push
out
xor
iret
mov
dec
xchg
pop
jmp
and
cmc
mov
add
sub
push
xchg
iret
and
or
pop
add
mov
and
add
xchg
insl
js
dec
sbb
out
or
push
dec
rolb
inc
clc
outsb
pop
and
sbb
mov
cs
pop
jno
pushf
mov
addb
push
lea
ss
pop
sub
jg
aam
mov
xchg
sbb
cmpsb
lods
fsub
outsl
pushf
out
iret
jg
fldl
jae
into
outsb
cs
loopne
jle
push
xor
jo
iret
orl
adc
push
cmovle
mov
jo
icebp
lods
es
or
xchg
in
adc
inc
es
ret
pop
or
lcall
xchg
gs
in
subb
jmp
mov
aad
push
std
xchg
stc
push
insb
add
jl
hlt
inc
lods
and
jg
mov
rcll
outsb
push
mov
incl
imul
xchg
fstps
loop
inc
mov
pop
fucomp
repnz
cmpb
xchg
push
sub
pop
dec
ja
xchg
push
loope
cmp
fidivs
inc
ljmp
pop
push
loope
mov
xchg
pop
lahf
adc
add
push
mov
gs
xor
loopne
test
filds
sbb
xchg
push
or
or
call
sbbb
fsubs
jl
mov
bound
inc
push
es
push
cs
jle
add
mov
jp
in
mov
das
sbb
xlat
xchg
call
jecxz
stc
pop
push
sti
sbb
add
jbe
jae
adc
xor
add
repnz
jb
lcall
sub
rorl
fmuls
adc
jo
sti
pop
hlt
out
push
xchg
fildl
push
int
arpl
jl
or
push
outsb
es
or
into
pop
push
inc
popa
dec
xchg
aam
jno
sub
sbb
out
mov
out
mov
pop
ljmp
sub
cli
add
pop
lahf
inc
add
insb
and
adc
mov
sub
into
mov
lods
inc
inc
fcmovnu
loopne
clc
iret
xorb
icebp
cld
jns
mov
mov
jnp
aas
out
jge
mov
lods
jp
adc
gs
sbb
jns
jno
mov
std
dec
fs
seto
rcll
push
sbb
xorb
pop
test
jnp
fildl
out
inc
int
mov
in
mov
stc
repnz
in
push
mov
mov
pop
into
sti
or
sarl
add
jle
cli
pop
cmp
cmc
out
add
imul
cltd
cltd
dec
lods
jae
xchg
push
add
outsb
mov
jae
sbb
es
xchg
inc
sbb
test
push
je
and
into
sub
jbe
js
inc
add
push
cwtl
xor
mov
mov
or
test
jne
iret
jmp
push
clc
sbb
loope
jbe
and
or
mov
adc
pushf
arpl
daa
je
jb
js
ret
aad
je
test
stos
adc
mov
push
int3
popf
dec
and
lret
data16
lods
stc
adc
push
push
movsb
xchg
mov
arpl
push
shl
mov
aad
adcb
and
push
ljmp
pop
sbb
icebp
and
das
jle
mov
jno
add
xchg
cmp
rolb
cmp
pop
iret
sbb
stos
sbb
sbb
push
into
add
or
xor
pop
jnp
xchg
dec
mov
lea
js,pt
adc
ret
push
ljmp
xchg
jae
xchg
into
push
xchg
enter
out
loop
aas
xor
ret
dec
in
inc
mov
dec
mov
mov
mov
dec
test
adc
mov
addb
pop
imul
mov
lret
adc
push
xchg
jg
scas
mov
pop
dec
cmp
add
scas
xchg
lahf
cwtl
int
rorl
adc
aas
hlt
into
lcall
mov
jle
or
insl
xor
fs
rorl
xlat
push
out
add
stos
adc
jg
pop
dec
repz
mov
or
jmp
lcall
xor
jp
sti
push
inc
imul
out
pop
xchg
mov
sbb
pop
mov
fidivs
dec
pusha
sub
sbb
ret
sub
xchg
jp,pn
jne
gs
test
stc
jmp
sbb
cs
xchg
sub
sbb
pop
stos
inc
into
loop
inc
mov
ljmp
inc
inc
test
shll
lcall
push
xchg
inc
mov
cmpsb
push
xchg
xor
test
stos
in
inc
aad
es
in
cmp
iret
sub
aad
push
data16
popf
movsl
xor
mov
fidivs
push
xor
fs
test
aad
imul
dec
and
sbbb
aas
pop
push
in
popa
sarb
push
pop
nop
mov
das
ds
push
pop
sbb
fildll
add
test
fwait
pop
jb
sbb
pusha
lahf
jnp
jb
mov
clc
lods
push
mov
push
iret
call
js
sub
xchg
lea
sub
lods
insb
adc
pop
push
cmpsb
test
sub
addr16
and
sub
pop
sbb
test
popf
cmc
mov
cmp
xchg
sarl
loop
es
mov
loop
movsl
loopne
rclb
add
mov
cmc
jle
insl
push
cli
clc
xchg
mov
int3
cmp
jae
add
addr16
data16
cmpsb
jle
outsb
icebp
jb
cltd
divl
inc
mov
popf
add
push
inc
xchg
jp
outsl
mov
js
cmpsl
jns
push
mov
inc
push
stc
fistpl
bound
cwtl
inc
xchg
je
xchg
dec
sti
xchg
call
sbb
dec
jle
sub
repz
push
loop
pushf
sub
pop
sti
in
daa
and
repnz
push
cmc
inc
jecxz
sbb
xchg
xchg
cmpb
push
jl
pusha
stos
ds
add
push
testb
ja
push
fcompl
call
lcall
push
jg
outsb
iret
fists
pushf
mov
ss
aaa
daa
sub
int3
inc
pop
xchg
shl
cmc
mov
scas
mov
lods
sti
mov
pop
mov
cmp
cmp
out
cmc
das
xlat
pushf
sahf
and
or
gs
dec
rcrl
movsl
adc
mov
dec
cmpsb
icebp
dec
int
mov
pop
pop
dec
mov
int
xorl
out
iret
pop
xor
notl
scas
out
cli
pop
pushf
mov
scas
fistpl
cs
cld
xlat
xchg
push
fidivs
jnp
test
mov
xchg
dec
addr16
call
add
aam
xchg
mov
pusha
dec
insl
jae
dec
or
mov
inc
add
pushf
and
dec
jmp
dec
ret
adc
and
sbb
sbb
pop
jmp
in
loope
jb
and
mov
repz
repz
incb
add
enter
jae
mov
pusha
mul
pop
adc
nop
inc
outsb
fidivrs
mov
cmp
mov
cmp
ja
scas
or
and
pushf
mov
std
int
push
push
pushf
mov
mov
or
out
arpl
pop
lea
sub
cld
add
push
xor
mov
ret
out
inc
adc
push
outsb
and
ds
int
test
lea
iret
sub
repz
imulb
xor
inc
das
jne
jnp
lods
pop
in
lahf
or
imul
repnz
mov
push
dec
test
lcall
gs
ret
aaa
mov
test
test
push
cmp
or
das
cmp
add
or
sub
jnp
mov
pop
xor
popf
gs
sub
inc
pop
fistps
cltd
adc
cmp
xchg
sbb
add
mov
and
mov
movsl
push
scas
sub
jmp
mov
cld
cwtl
pop
dec
out
subb
dec
scas
inc
pop
inc
xchg
push
ss
popf
xchg
mov
xchg
mov
outsb
aad
xchg
add
xor
divb
sbb
out
xchg
mov
inc
jge
mov
and
or
fldt
and
push
pop
es
subl
js
push
into
call
dec
push
addr16
or
xor
lcall
cld
popl
enter
inc
nop
lods
ds
cmc
mov
arpl
xchg
gs
stos
mov
sbbb
jp
sub
divl
js
fwait
hlt
dec
insl
test
cmc
iret
sbb
lods
movsb
jl
push
jle
and
xor
mov
push
sti
scas
lcall
lret
adc
mov
mov
add
mov
push
and
lds
or
ljmp
or
or
xor
sbb
int
dec
jo
insl
or
ja
std
dec
sub
popf
sbb
iret
notl
iret
xor
mov
call
xchg
mov
int
test
dec
popf
push
push
movsb
adc
mov
insw
into
jg
aad
fisubrs
xor
mov
ret
and
pop
or
sahf
cmp
add
pushl
rcrb
push
adc
mov
inc
inc
into
outsb
stos
arpl
add
in
push
jnp
stos
mov
ds
and
lods
pushf
pop
sbb
jo
add
ss
adc
in
mov
lcall
sub
loopne
or
lahf
lods
inc
push
sbb
or
nop
iret
cmp
mov
xor
shrb
sub
sbb
ss
or
dec
ja
lret
insb
or
cwtl
test
in
mov
jno
invd
inc
mov
push
lcall
fwait
jne
jge
lock
adc
sbb
push
mov
xor
xchg
cmp
dec
sub
lea
mov
addr16
push
clc
icebp
jns
iret
fdiv
data16
aam
adc
jbe
mov
adc
in
aas
pusha
test
cmp
fdivrs
stos
leave
xorl
adc
sete
inc
sbb
std
fidivrs
scas
mov
out
stc
stos
jle
popf
and
pop
mov
lea
jno
fildl
addr16
ror
dec
and
fwait
inc
or
dec
xor
sbb
fwait
ds
xchg
jl
aas
add
es
hlt
sbb
and
mov
mov
scas
loop
in
pop
dec
jne
jb
addr16
fisubs
dec
mov
test
mov
sub
in
dec
aad
outsb
add
sub
out
jl
mov
cwtl
mov
push
rorb
into
outsb
cld
aam
in
dec
pop
sbb
lods
int
loopne
jl
aas
mov
out
mov
push
xchg
int3
movsl
or
decb
inc
xchg
push
pop
inc
mov
imul
add
adc
fimuls
mov
test
mov
xchg
imul
push
insb
mov
hlt
sub
push
fmulp
out
jle
or
pop
and
push
aad
xchg
sub
push
sahf
mov
ret
sub
in
mov
dec
sahf
jb
scas
in
test
icebp
pusha
cmp
movsb
add
pop
inc
sbb
icebp
mov
jno
inc
movb
and
data16
test
outsb
inc
pusha
sbb
jbe
add
jnp
cmp
push
jg
daa
inc
fdivl
stos
lock
sarb
divl
xchg
movsb
push
cmc
and
mov
mov
std
add
mov
lds
inc
fdivrs
mov
sbb
notl
fimuls
inc
iret
fsubrs
or
jle
adc
ret
fstpt
jns
es
out
cmp
scas
inc
xor
mov
pop
pop
in
lods
jnp
dec
and
xchg
mov
inc
fs
bound
mov
jae
fwait
iret
je
mov
or
mov
xchg
adc
popf
sbb
les
xchg
popa
mov
jecxz,pn
xchg
mov
cli
lcall
lahf
ljmp
push
inc
add
jecxz
fimull
in
ja
scas
sbb
mov
in
and
inc
sbb
ds
fwait
cmp
and
roll
dec
popa
adc
in
mov
bound
jle
mov
pop
xor
cmp
or
sbb
adc
sbb
addr16
cmp
or
gs
fimuls
xor
aas
fsubr
iret
pop
outsb
or
inc
insb
push
adc
xchg
int
das
or
sub
aaa
sub
pop
cmpsl
mov
xor
xchg
loopne
pop
sub
jns
push
movsb
mov
push
mov
sbb
ds
iret
and
lea
insl
sbb
dec
sahf
mov
aad
inc
mov
nop
mov
push
pushf
pop
test
scas
std
out
mov
add
pusha
sbb
mov
dec
add
xchg
dec
fdivl
xchg
in
cli
cmp
push
sub
ss
or
sbb
cmp
outsb
dec
jp
negl
lcall
jge
test
xor
push
xor
jno
addr16
fistps
int3
cmp
hlt
addr16
pop
clc
xor
jp
mov
or
xchg
notl
lods
iret
cltd
repnz
pusha
jle
into
mov
scas
pop
xchg
jg
pop
adc
clc
sub
ljmp
adc
xor
aas
xor
cld
mov
lahf
jecxz
enter
xchg
xchg
lret
rcl
dec
scas
ljmp
jg
rep
scas
mov
adc
xchg
iret
sarb
sahf
test
les
lret
xchg
loop
inc
lock
xor
push
jle
mov
stos
sahf
loop
lahf
fwait
iret
and
jge
rcrl
xchg
jae
dec
lock
out
pop
jmp
mov
mov
and
pop
jge
ret
xor
int
sahf
stos
into
leave
std
sub
iret
mov
pop
popa
das
dec
jns
adc
mov
shrb
pop
mov
scas
lahf
jecxz
mov
mov
mov
dec
or
jle
ds
cmc
iret
xorl
or
push
cmp
add
and
int3
enter
repnz
jg
or
inc
push
addr16
push
xchg
ds
dec
add
fnsave
addr16
mov
xchg
jo
iret
cmp
clc
sbb
xchg
cmp
pop
test
pop
cmp
cli
push
ja
lock
adc
adc
mov
jecxz
add
fbld
repnz
jmp
xchg
or
int
jne
bound
shlb
adc
jns
or
jbe
aam
push
test
adc
push
int
push
cmpsb
xchg
push
shl
les
filds
jnp
loop
xor
popf
rcr
push
push
ja
add
inc
mov
mov
outsl
loopne
ret
cmpsb
and
sbb
sub
dec
mov
out
mov
mov
int
jle
adc
addr16
adc
ljmp
fwait
fs
jmp
das
cltd
xchg
filds
xor
fldl
mov
push
ror
and
mov
jo
insl
rorb
or
ficompl
add
scas
arpl
cmp
mov
aas
dec
movsb
xchg
and
or
fimuls
in
loop
js
inc
into
notl
mov
out
mov
push
xchg
stc
stos
dec
call
cld
xlat
xchg
push
add
jnp
ss
xchg
jge
xchg
xchg
jg
out
xchg
mov
sbb
xchg
xlat
cmp
pop
and
cltd
iret
adc
decl
addl
lds
repnz
lahf
cmp
cmc
inc
ja
mov
sub
mov
orl
adc
fwait
bound
or
pop
sub
cli
mov
fdivl
inc
mov
and
repnz
dec
sti
lret
inc
push
jecxz
mov
xchg
mov
mov
pushf
cld
cmp
faddp
das
mov
dec
dec
xchg
sti
hlt
es
inc
sub
push
notl
mov
lea
lea
jp
cmpb
clc
mov
xchg
nop
ss
push
int3
insl
add
in
and
arpl
sub
bound
out
inc
aas
cmpsl
dec
xchg
adc
dec
mov
fadds
push
fsubl
scas
inc
mov
cmp
mov
lahf
rcrb
lcall
es
mov
jne
inc
or
fisubs
icebp
inc
mov
sub
mov
xchg
mov
mov
iret
dec
mov
js,pn
mov
jae
ss
das
mov
adc
shlb
mov
sbb
int3
xchg
hlt
cwtl
call
daa
pop
stc
int
or
push
xchg
andb
mov
out
lahf
lcall
sti
aas
push
jp
sbb
ds
stc
sbb
and
stos
lods
and
outsl
mull
mov
pushf
imul
pop
sti
sbb
or
stos
xchg
daa
in
lods
fidivs
jle
jne
sbb
cmp
fsubl
jnp
idiv
sub
mov
inc
mov
cmc
lret
mov
mov
mov
mov
xchg
mov
and
jb
jecxz
js
bnd
xchg
push
or
sbb
and
or
inc
cmc
repz
in
je
lock
xchg
hlt
clc
into
jae
sub
mov
ss
xchg
mov
dec
adc
addr16
push
cli
gs
add
lcall
scas
cs
jmp
insl
sti
mov
dec
sbb
hlt
inc
inc
jno
dec
xor
lds
xchg
movq
int3
jns
and
pop
bound
outsl
push
push
sub
push
add
or
dec
pop
fistl
push
inc
inc
lock
mov
out
into
mov
mov
mov
pop
lods
push
lcall
lahf
outsb
sbb
icebp
pushf
sbb
mov
mov
pop
xchg
shrl
push
inc
add
ljmp
pop
fstps
or
xchg
add
jmp
sub
xchg
mov
pop
clc
and
sub
mov
addb
xchg
add
inc
inc
fldcw
dec
mov
jb
faddl
ds
repz
iret
inc
pop
push
outsl
pop
fsubrp
or
add
fistpll
cli
cmpsl
jns
das
lahf
cld
pop
popf
into
push
aas
sub
sub
pop
outsl
xchg
lcall
lods
hlt
push
push
iret
cmp
mov
jo
aad
mov
leave
sub
ficoms
mov
jl,pt
test
testl
push
lret
xor
mov
popa
xchg
mov
inc
jg
mov
cmp
loopne
les
add
xchg
mov
popf
scas
xchg
push
fdivrl
mov
cltd
mov
pop
outsb
jno
xchg
pop
push
popl
add
jle
push
dec
mov
xlat
cmp
idiv
push
lahf
push
dec
mull
dec
xchg
lcall
xchg
pop
out
xor
xchg
outsb
faddl
nop
pushf
sbb
notb
xchg
pop
pop
mov
dec
cmpsl
into
jl
fiaddl
jnp
push
push
inc
jle
loop
mov
sbb
sbb
jle
push
sbb
push
cmpsb
getsec
sbb
sub
pushf
push
xchg
sbb
pop
cmp
pop
ss
mov
out
pop
push
push
dec
xlat
or
sbb
out
add
mov
out
push
fmull
adc
test
xchg
aaa
lcall
testl
add
scas
pop
pop
scas
pop
mov
pop
and
mov
xchg
xchg
push
scas
ficoml
sbb
jnp
jnp
mov
pushw
xlat
pop
fisttps
xchg
jbe
xchg
xlat
lods
xchg
or
xor
scas
or
jle
cmova
dec
jle
push
orl
outsb
push
out
xor
dec
lahf
pop
iret
xchg
outsl
push
jnp
sahf
jle
mov
mov
dec
mov
outsb
pop
mov
js
popf
xchg
scas
lea
not
push
decl
call
pop
or
jns
outsb
scas
cld
push
in
es
fisttps
ss
cli
push
push
ss
aam
negb
pop
pop
jp
outsl
iret
pop
fnstenv
push
cld
jg
xchg
lahf
push
outsb
sahf
lock
out
jge
or
or
imul
mov
adc
shl
jg
or
jg
adc
sbb
rclb
sbb
or
mov
popa
pop
ret
dec
xchg
sahf
jbe
dec
in
rcrb
push
mov
iret
inc
icebp
aad
xchg
ljmp
push
cwtl
aas
jmp
out
or
lock
in
inc
mov
cmp
add
outsb
int
add
jno
inc
lock
stos
lcall
xchg
repz
xchg
jbe
int
mov
aas
pop
jmp
adc
adc
orb
lcall
jecxz
mov
int
scas
inc
sbb
mov
pop
pop
ret
xchg
loop
mov
jo
mov
pushf
sahf
test
xchg
dec
fnstsw
and
and
pop
fidivs
jbe
jae
and
sti
repnz
lcall
lock
daa
jle
movsl
adc
shll
xchg
out
pop
or
lcall
lcall
inc
int
movsb
into
fs
inc
scas
out
sti
mov
ds
sbb
pop
pop
cmp
aas
jmp
cmp
mov
xchg
or
dec
js
pop
lods
mov
adc
repz
xlat
pushf
into
repnz
movsb
sbb
xor
pop
push
idiv
hlt
ja
sbb
es
fcom
andb
jo
test
mov
or
mov
int
jnp
dec
add
xchg
jns
aad
loopne
mov
xchg
pop
lcall
cs
iret
cwtl
xor
pop
sub
stos
orb
inc
clc
lods
fistps
sbb
dec
jnp
mov
jl
lcall
adc
xchg
into
movsb
mulb
iret
aas
adc
lahf
scas
lods
into
cwtl
in
pop
jge
aad
scas
cltd
jae
outsl
jmp
cmp
sbb
nop
cmp
bound
sti
cmpsb
aas
inc
cs
pmaddwd
rcr
mov
sar
mov
test
push
pop
mov
sbb
mov
mov
dec
jle
ss
xchg
into
ret
sbb
mov
xor
sub
pop
movsl
push
jecxz
sub
adc
mov
outsl
jp
jecxz
add
mov
mov
xor
inc
imul
dec
and
add
sub
pop
clc
shrl
stc
ja
push
and
outsl
push
ds
mov
int
sbbb
iret
lret
mov
lock
shlb
mov
outsb
jecxz
in
pop
xchg
cmp
or
push
dec
sub
xor
mov
push
mov
or
int3
jge
das
inc
mov
out
mov
or
jle
lahf
movsb
scas
insb
stos
faddp
jae
addr16
data16
xchg
aad
mov
jp
xchg
pop
mov
gs
jle
into
jg
cmp
das
cmp
xor
cmp
or
xlat
mov
push
je
jns
cmp
inc
mov
into
cmpsb
and
fs
push
aad
fidivrs
lret
iret
imul
pop
or
xor
loop
pop
jp
negb
lret
arpl
sahf
fisubrs
jmp
mov
fistps
jae
xchg
mov
iret
repnz
inc
std
repz
adc
jle
add
lds
cmc
adc
call
out
or
mov
xchg
xor
mov
jo
aas
aad
push
mov
pop
cmc
sub
mov
jne
das
dec
mul
xchg
loope
sahf
setg
cmp
leave
subb
pop
cmc
js
shll
daa
dec
pop
mov
int
mov
mov
sbbl
mov
pop
mov
mov
jmp
jns
sub
mov
sbb
xor
mov
cmpsb
cmp
hlt
iret
jp
mov
es
adc
aaa
cmpsl
lahf
inc
or
push
int3
scas
or
std
sbb
imulb
and
leave
push
repz
cs
xchg
xchg
dec
idivb
iret
aaa
push
pop
fadd
mov
push
dec
add
iret
and
push
jecxz
fimuls
xchg
int3
test
pop
jge
jp
push
and
shrb
cmpsl
pushf
jnp
push
lcall
pop
sub
notl
fdivrp
int
clc
popa
cmp
dec
push
and
lock
dec
or
inc
xchg
push
xchg
push
aaa
mov
add
divl
lcall
inc
cmp
mov
jnp
mov
mov
and
jge
or
in
ss
fsubrp
test
pop
repnz
ret
inc
ret
test
fldt
adc
xlat
add
jg
pop
iret
add
clc
es
outsb
into
jmp
mov
pop
in
add
fucom
into
and
xchg
fildll
lods
out
jle
or
notb
and
fwait
pop
sbb
addr16
mov
test
inc
pushf
xchg
adc
stos
out
push
xor
sbb
jnp
mov
cmp
mov
pushf
or
inc
popf
cmp
cmp
sbb
icebp
iret
adc
cmc
nop
mov
mov
cmpsl
scas
lods
mov
je
flds
xchg
aad
jge
jg
test
test
lds
dec
pop
faddp
loopne
or
jb
push
or
mov
cmp
fcmovnu
fldz
cli
push
jp
push
sub
cmpsl
scas
push
fidivs
lea
addr16
scas
push
scas
ds
sbb
cmp
xchg
mov
test
xchg
dec
mov
stos
mov
push
lahf
orl
or
push
dec
mov
and
jge
mov
jecxz
push
xchg
shrl
mulb
or
mov
aam
cltd
mov
test
scas
sub
add
rcrl
rcrb
sbb
insl
xchg
in
cs
test
das
jb
push
incl
push
sbb
popa
mov
cmc
add
loopne
or
cli
iret
push
or
lcall
out
push
push
hlt
popf
cmc
jbe
adc
dec
and
fneni(8087
sub
daa
dec
mull
xchg
sub
mov
adc
xor
jo
pop
cmp
insb
pusha
bound
cmpsl
mov
push
push
lods
fnstcw
mov
aaa
dec
out
lret
pop
in
test
cmp
shll
data16
rcr
rclb
aaa
add
pop
inc
dec
pop
ljmp
iret
jmp
cmp
push
sti
jmp
push
jo
xchg
mov
or
das
arpl
cli
xor
scas
pushf
aas
and
inc
jns
mov
or
int
loop
cmp
sbb
sar
pop
xor
addb
test
jmp
lods
sbb
inc
jnp
in
jns
xchg
cmp
mov
xchg
stos
push
add
xchg
dec
scas
cmovle
sub
inc
loopne
lret
test
mov
sti
adc
cmp
xchg
jp
lahf
inc
inc
pop
fwait
testb
ljmp
lahf
ss
stos
xchg
adc
lahf
lods
pop
or
mov
test
mov
add
stos
mov
or
por
push
into
mov
mov
inc
notl
cmpsl
jo
push
sbb
and
pusha
ljmp
pop
rol
push
inc
sti
cli
stos
push
jb
aas
ljmp
push
inc
xlat
or
fsubr
adc
std
push
add
jmp
inc
stos
add
addr16
ds
add
sbbb
gs
inc
jp
into
mov
ss
xlat
mov
jle
cld
das
mov
std
cli
jp
lret
pop
mov
and
test
push
cmovbe
out
xlat
jo
add
repnz
lods
mov
cs
or
jae
mov
sub
cmp
jns
xor
insb
pushf
dec
lea
repz
pop
dec
fsts
outsb
adc
nop
call
xor
push
es
fidivrs
jmp
cmp
sbb
pop
lods
or
popf
mov
icebp
outsb
shrl
jnp
add
pop
or
push
aad
orb
push
cmp
push
mov
inc
sub
or
fcompl
addr16
cli
mov
out
mov
pusha
cmp
int
lret
pop
das
push
push
iret
jae
call
lret
jnp
test
out
sbbl
leave
adc
in
push
jp
cwtl
add
lcall
add
pop
icebp
xor
flds
lods
jl
sub
push
dec
mov
cmpsl
outsb
out
cli
push
bound
lret
lahf
lods
sti
aad
movb
sub
and
mov
lcall
enter
bound
nop
aaa
aam
cltd
ds
inc
cli
lcall
rol
ror
mov
or
cmp
fmuls
or
sbb
pop
cmp
stos
lret
movsl
imulb
repz
outsb
and
mov
push
scas
mov
stos
ja
imul
out
lret
push
mov
fmulp
or
negl
pushf
push
imulb
divb
lahf
pop
ds
push
push
lea
xchg
pop
pop
into
test
movsb
mov
cmp
jnp
lods
or
cmp
lock
enter
bound
add
cmc
jp
jmp
mov
data16
dec
outsl
mov
mov
push
and
lock
outsl
incb
sbb
or
imul
pushf
jp
fwait
jg
jo
mov
push
add
popa
pop
adc
fstl
out
cmp
and
fisttps
xchg
stc
std
or
mov
jl
iret
jmp
pusha
push
sub
ljmp
call
adc
js
lahf
xlat
push
les
lcall
jle
jge
jl
pop
jle
int
push
leave
pop
mov
iret
mov
outsb
dec
xchg
movsb
add
jo
pop
jecxz
mov
mov
pop
add
cld
fwait
sub
or
jle
outsl
sub
bound
xchg
mov
lahf
scas
iret
lds
mov
jno
popf
repz
lret
lods
mov
lret
ret
cld
push
fisubs
lods
dec
stos
push
outsl
xchg
mov
pusha
enter
sbb
mov
icebp
jge
mov
push
add
jg
iret
mov
inc
dec
cld
fmulp
sbb
scas
decb
adc
cmc
hlt
repnz
ljmp
in
xchg
cli
js
lea
fucomi
xchg
sahf
push
xchg
pmaxub
bound
add
shrl
in
adc
arpl
jb
mov
and
xchg
iret
ja
ss
cs
sbbb
mov
xchg
sub
xchg
movsb
jle
add
and
pop
push
pop
mov
add
out
adc
es
dec
or
lds
adc
nop
mov
fdivp
mov
xor
sarb
shll
xchg
inc
int
add
fistpl
xor
sbb
shlb
mov
das
cmpl
popf
xchg
hlt
mov
addr16
xchg
in
movsb
jl
xchg
jle
xchg
or
hlt
cvtps2pd
push
dec
cs
xchg
and
outsl
adc
iret
pop
or
adc
pop
movsl
ja
ja
cmp
fwait
inc
int
pop
xchg
fiadds
cmpsb
cmp
dec
mov
iret
push
inc
pop
jp
not
sahf
inc
mov
mov
ljmp
xchg
test
ficomps
aam
pop
jp
sub
enter
dec
icebp
mov
jnp
mov
iret
fnstcw
jge
adc
lds
xrelease
xchg
cmpsb
neg
mov
inc
or
pop
inc
lahf
or
push
or
add
jl
js
add
jp
xchg
and
outsl
test
or
mov
or
cwtl
into
add
flds
xchg
push
lret
sub
insl
jle
inc
pushf
sbb
lods
dec
into
cmpsl
mov
sti
xlat
dec
popf
aaa
mov
xchg
fwait
movsb
scas
nop
cmpsb
sbb
fsubrp
pusha
ljmp
adc
outsl
ret
mov
pop
and
add
ds
enter
or
pusha
xchg
into
sbb
lcall
mov
sbb
iret
pop
or
icebp
imul
jp
ja
aaa
popf
jo
lock
mov
pop
scas
jnp
ficoms
xor
xchg
int3
pop
pop
scas
push
aam
cld
repnz
das
sbb
inc
notb
xchg
out
pushf
dec
out
iret
lret
subb
dec
and
or
jns
outsb
inc
push
jmp
and
iret
cmp
mov
add
mov
ss
insb
leave
jb
cmpsb
jae
int
jno
hlt
xchg
scas
pop
xchg
pop
iret
xchg
or
clc
jle
movsb
ljmp
pop
add
dec
daa
fwait
rol
ret
insl
nop
insl
lret
addl
mov
pop
mov
dec
mov
rcr
mov
insl
dec
in
ret
jmp
mov
out
xchg
add
test
jns
mov
mov
adc
fsubs
push
aaa
jo
xchg
into
outsl
pop
mov
decb
xchg
iret
addl
mov
sbb
movsl
xorb
dec
imul
pusha
movsl
xchg
mulb
mov
xor
rcrb
imull
sub
mov
sbbl
mov
mov
iret
jns
jp
aad
mov
sbb
mov
nop
enter
sarb
mov
scas
lods
mov
xchg
inc
sbb
sti
lods
jg
repnz
aas
andl
and
xchg
cwtl
jnp
scas
faddp
fsubrl
iret
mov
sti
jmp
scas
and
lea
sbb
shrb
xchg
fwait
push
lods
dec
mov
or
adc
int
cmp
out
daa
cmp
addr16
adc
push
inc
jmp
sbb
outsb
lret
shl
jnp
xchg
cmp
xchg
push
popa
push
test
push
mov
dec
pop
shl
orb
jne
or
shl
cli
add
in
inc
js
insb
movsb
mov
add
cmc
enter
loopne
or
ljmp
lret
push
sbb
jb
lods
cltd
ret
mov
sub
add
cs
add
lcall
or
hlt
jo
inc
cmc
jae
in
aam
xchg
outsl
xchg
push
or
sbb
mov
jmp
test
sti
xchg
imull
jge
xor
pop
jb
sbb
into
mov
dec
inc
sub
sbb
xchg
mov
or
jo
lea
fists
lret
push
cmpw
clc
pop
xchg
jne
sbb
outsb
sbb
mov
or
pop
leave
in
push
into
enter
fidivs
push
xchg
jl
jg
movsl
iret
xchg
fcoml
mov
sbb
rcl
sbb
cmc
les
jne
cs
add
scas
lods
js
mov
aad
aad
xchg
xor
shrb
mov
mov
jg
imul
cmp
adc
add
pop
mov
notb
pop
mov
xchg
into
ret
scas
bound
pop
or
iret
mov
mov
retw
clc
xor
add
xor
sbb
mov
or
sbb
pusha
sti
loope
inc
cmp
mov
adc
xchg
scas
mov
or
push
sbb
xchg
stc
into
imul
out
add
sub
mov
add
add
test
insl
cmp
js
jnp
xchg
jnp
cwtl
sarl
iret
movsb
mov
nop
xchg
ljmp
push
xor
imul
xor
mov
fwait
loopne
mov
pop
jp
pop
notl
lahf
mov
mov
jnp
xchg
in
add
cli
or
dec
xor
or
add
or
sub
pushf
jbe
jno
in
jnp
jecxz
ds
xlat
fisubl
or
mov
jmp
xchg
out
int3
arpl
pop
gs
mov
andb
or
pushf
jbe
cld
xchg
dec
subl
mov
imul
adc
rcrb
pop
lret
fnsave
mov
stc
and
popa
or
shlb
jno
inc
mov
pop
imulb
adc
mov
lcall
pop
xchg
fs
jle
push
addr16
aad
sbb
and
cli
jmp
hlt
mov
push
sbb
pinsrw
insb
or
and
sbb
frstor
or
loop
push
out
or
mov
sbb
jp
mov
mov
push
mov
xchg
inc
adc
es
cmp
into
nop
jb
loop
aaa
xor
ljmp
sub
mov
lret
cwtl
pop
repz
xchg
fmulp
mov
sub
not
arpl
push
mov
fisttpll
jge
add
push
insb
pop
iret
lcall
lods
fistl
jns
lods
sub
dec
icebp
movsb
mov
es
sub
mov
fs
loop
cmp
in
dec
mov
stos
or
ja
jne
lods
pop
popf
cs
loop
pop
mov
or
inc
scas
lods
and
xchg
scas
sbb
lahf
cmpsb
out
iret
aad
lret
xchg
and
ss
sbb
sbb
pushf
data16
nop
cmp
pop
and
dec
hlt
ficomps
or
sub
iret
xchg
inc
cmp
dec
lret
jnp
jno
outsb
mov
notl
xlat
lds
out
xorl
and
sbb
or
jne
clc
stc
fdiv
push
add
cmp
adc
xlat
das
dec
popa
outsb
leave
mov
mov
adc
mov
ljmp
sbb
push
add
mov
cwtl
xlat
test
mov
movsb
into
out
sahf
aas
mov
adc
fidivs
push
out
fs
out
les
push
cmpsb
cmp
mov
mov
lock
jmp
push
and
repnz
lds
adc
mov
iret
jmp
popf
cmpsb
and
shll
outsl
scas
push
inc
mov
mov
sub
aam
cmp
push
out
and
fidivl
and
mull
outsl
xchg
mov
sbb
sbb
mov
out
jns
fistl
repz
filds
xchg
insl
mov
rolb
pop
js
hlt
aam
test
lea
outsb
inc
clc
sbb
testl
mov
xchg
into
mov
int
and
and
jl
xchg
mov
add
subb
sub
pusha
mov
mov
lahf
jne
jg
mov
pop
addr16
fidivrl
out
xchg
mov
add
ljmp
popa
sub
or
cmp
insl
sub
inc
push
fidivs
stos
int
loopne
cmp
fwait
outsw
jns
pop
pop
push
cmc
ja
or
sbb
into
mov
inc
or
lcall
xor
in
sbb
scas
loope
orl
out
sub
lds
xchg
pop
sbb
stc
fst
add
mov
push
jp
add
xchg
movsb
incl
dec
ljmp
mov
call
mov
popa
clc
mov
dec
std
mul
push
lcall
pop
ret
gs
or
sbb
dec
add
cmpsb
cs
aaa
sbb
or
lds
mov
inc
push
aam
and
push
mov
sti
scas
jne
or
repz
mov
movsl
and
loopne
loop
xchg
and
and
fildl
in
and
pushf
test
pop
or
xchg
pop
test
inc
mov
lods
pop
fdivl
pop
fildl
or
int
fildll
mov
iret
shll
jne
fwait
in
lods
and
jno
stos
pusha
iret
stc
jb
mov
sbb
hlt
ss
push
imull
iret
mov
lock
test
imull
out
dec
out
sbb
ss
ljmp
pushf
mov
cmp
dec
shlb
push
mov
sbb
clc
loope
push
mov
jp
sbb
cltd
fistpl
push
shlb
ss
call
pop
add
adc
xlat
xlat
stc
jp
in
dec
sbb
std
out
subb
cld
mov
push
imul
mov
pop
push
or
ljmp
cmp
test
mov
jb
cmp
pop
lods
xor
mov
or
xchg
test
test
mov
cwtl
outsl
fcmovne
cmp
fisubs
xchg
adc
in
insl
repz
xchg
inc
cmc
int3
pop
cmpsl
incb
popf
andb
inc
fwait
insl
lock
arpl
rorl
out
out
aaa
ds
out
test
inc
pop
sub
mov
repnz
dec
lcall
int
lcall
movupd
loopne
xchg
int
sbb
inc
iret
test
mov
cli
xchg
into
xchg
sbb
pop
jp
jge
xor
rolb
ljmp
test
xchg
fidivl
jl
mov
int
or
inc
cld
out
lock
xor
mulb
push
pop
stos
push
outsb
inc
fld
stc
push
inc
xchg
push
pop
mov
pop
repnz
in
lcall
jno
dec
fwait
mov
add
mov
sahf
lahf
xchg
test
jnp
push
addb
dec
pop
sbb
negl
dec
ja
mov
sbb
fwait
lea
mov
mov
adc
xor
rorb
out
jle
cli
xlat
jns
fidivs
call
loop
sbb
mov
lahf
xlat
fbld
mov
cmp
shl
mov
sbb
xchg
cli
mov
leave
std
outsb
xor
mov
and
or
out
sbb
sub
mov
popa
andb
xor
push
pop
movsl
and
push
fwait
cld
mov
jo
mov
jp
bnd
xor
mov
outsb
int
or
fwait
cmpsb
jmp
or
cltd
inc
xor
push
rclb
jle
mov
or
cli
addr16
es
mov
pop
and
push
arpl
lods
jbe
lcall
xchg
loope
mov
add
sbb
add
push
lret
lcall
cmp
movsb
test
jle
sub
jl
sti
push
repnz
push
xadd
cmpb
pushf
js
repnz
push
inc
nop
fisubs
xchg
push
cltd
push
mov
test
jb
sti
in
sbb
lock
inc
jno
push
xchg
arpl
fisttps
fwait
js
dec
dec
popa
icebp
push
addb
dec
jbe
inc
clc
pop
andb
mov
and
sbb
movsl
sub
and
inc
leave
lcall
dec
jae
pop
push
loope
fmull
lock
xor
out
jmp
xor
outsb
mov
jbe
loop
lret
imul
test
xor
adc
dec
in
pop
dec
lcall
jb
mov
pop
cli
xchg
call
lret
addr16
fidivrl
and
add
ret
iret
xchg
adc
cmp
ret
insb
jb
iret
pop
cmp
and
stc
push
jae
and
or
push
mov
insl
and
pop
outsb
js
in
mov
lock
enter
inc
push
mov
mov
and
ja
jnp
dec
loop
popf
into
mov
or
mov
sbb
mov
mulb
jg
test
xchg
lahf
mov
iret
inc
sarl
into
mov
nop
adc
shrb
pop
idivb
lea
je
call
xchg
std
jge
push
mov
lahf
sti
or
std
sti
jl
xchg
mov
pop
xchg
outsb
mov
mov
push
test
enter
iret
rorb
mov
mov
and
push
ljmp
cmpsb
mov
dec
call
push
lock
push
js
shl
or
inc
std
in
jnp
insb
cmp
cs
sbb
scas
in
scas
add
das
lret
or
adc
push
shrb
or
and
pop
pop
scas
lfs
negl
mov
push
decl
js
mov
add
jl
sub
je
lock
sub
or
xchg
push
int
pop
jge
and
jae
adc
mov
ss
sbb
into
sbbb
js
dec
daa
mov
jl
mull
jmp
aaa
in
popf
mov
gs
fisubl
jo
cmp
dec
push
mov
sub
add
pushf
dec
popf
lods
in
call
xchg
add
mov
mov
sbb
iret
cmp
jge
add
mov
sub
lock
add
sub
mov
mov
pop
adc
push
sub
aas
outsl
test
insl
pop
push
pop
aam
xchg
and
sub
jae
jbe
clc
mov
add
lahf
jg
inc
out
add
sarl
mov
sub
rclb
xchg
sub
cld
sub
scas
xchg
stc
aas
arpl
icebp
jg
xchg
cmc
ja
mov
xchg
or
push
cmp
push
hlt
dec
dec
jnp
test
mov
mov
popa
xchg
cld
dec
pcmpeqb
int3
push
inc
push
adc
pushf
stc
ret
addb
sbb
and
movsb
test
cld
xchg
or
mov
mov
jns
mov
jle
repz
stos
xchg
push
loopne
movsb
xor
fmulp
lret
es
xchg
js
jg
call
fsubrs
insb
adc
add
test
clc
lds
repnz
cmp
stc
cmp
dec
jnp
pop
fldt
orb
into
pushf
jg
dec
lods
int
cmc
sbb
icebp
add
jne
jle
or
int
je
xor
loopne
push
mov
inc
inc
add
inc
nop
sti
cmpsb
push
cmpsl
lcall
pop
pop
shll
test
int
dec
stos
push
xchg
iret
es
sub
jae
inc
add
mov
aam
cltd
sbb
lret
es
out
xchg
xchg
xchg
cwtl
aas
xchg
sti
fisttps
jg
frstor
jno
out
jecxz
or
and
nop
pop
mov
out
repnz
sti
or
dec
cld
push
sub
mov
divb
sbb
cmc
shrb
out
fnstsw
dec
mov
pop
loopew,pt
ret
jg
dec
fsubrl
and
popa
or
xchg
mov
enter
aaa
push
mov
ljmp
fisttpl
scas
jnp
sbb
fsubl
mov
push
add
dec
fdivp
lcall
lahf
rcrb
and
addl
xchg
lahf
movsb
push
sbb
stc
in
aam
adc
cli
mov
scas
test
sub
repnz
and
push
stc
lret
jb
jge
mov
popa
fdivrp
xor
icebp
jb
sbb
inc
out
adc
xchg
mov
mov
loop,pt
int
cmp
xchg
xchg
fcoml
push
mov
push
lret
out
packsswb
enter
xchg
iret
lahf
mov
mov
outsl
or
int
jns
notl
clc
arpl
sbb
and
push
out
inc
add
pop
cli
lcall
inc
inc
pop
shlb
cltd
pop
int
scas
in
mov
inc
iret
cmp
jge
push
push
sbb
cs
lret
pop
jp
mov
mov
stc
mov
lods
sbb
xchg
add
jmp
leave
lret
das
pop
lahf
into
mov
in
repz
enter
lea
mov
or
jp
outsl
mov
adc
test
repz
pop
ja
into
cli
jp
push
int
pop
int
mov
sbb
and
int
and
adc
dec
or
lods
push
rsm
adc
aas
or
iret
jnp
arpl
jns
xor
out
mov
loopne
jle
iret
dec
jb
mov
mov
mov
stc
xlat
js
add
mov
lea
nop
scas
mov
cld
mov
movl
cmpb
iret
inc
cli
jne
rcll
xchg
mov
jne
enter
scas
lcall
mov
or
pop
inc
mov
cld
jecxz
mov
sub
out
faddl
jp
adc
mov
add
in
dec
sub
in
iret
inc
test
and
cmp
push
adc
idiv
inc
call
sub
cmp
dec
and
testb
cld
pushf
cli
into
loope
sbb
jnp
lods
push
mov
jbe
push
in
fisubrs
dec
into
add
stos
and
popf
add
pop
lods
jl
ja
insb
jle
int3
push
mov
inc
and
xchg
cmp
cwtl
inc
lret
into
sbb
or
lea
ret
xor
mov
xor
lea
out
mov
push
sbb
push
aam
mov
scas
pushf
or
mov
mov
outsl
sub
mov
lret
leave
cwtl
ljmp
jecxz
cmp
shrb
adc
mov
fwait
icebp
push
lea
pop
mov
insl
adcb
xchg
mov
jmp
lcall
insb
pop
int
iret
js
xchg
inc
xor
adc
in
xchg
pop
inc
idivl
add
lds
xchg
fs
push
sbb
jl
cmp
add
inc
inc
loope
stos
lcall
cmc
push
mov
fwait
push
pop
cmp
fisubrs
shlb
stc
sbb
rorl
push
cwtl
out
cmp
ds
sbb
add
ret
cs
adc
iret
xchg
and
adc
cmp
loopne
jbe
and
pop
jge
or
and
mov
push
iret
repnz
leave
mov
and
mov
lea
iret
push
mov
push
mov
or
sbb
or
mov
inc
cli
bound
ftst
inc
scas
xchg
xor
cmc
jb
mov
test
push
lds
roll
loopne
ljmp
pop
push
pushf
mov
sub
and
lcall
mov
iret
repnz
aaa
and
cmpb
push
adc
xlat
dec
test
sub
lods
int
or
pop
loop
hlt
and
leave
loopne
stc
sbb
out
xor
sti
cs
shrd
aaa
pop
or
out
and
sbb
rclb
pop
iret
push
xor
mov
jg
out
pop
es
loopne
repz
add
jno
cmpb
xchg
pop
lcall
adc
sbb
mov
dec
sbb
loope
mov
loopne
mov
jnp
ret
shrb
pop
or
sahf
mov
or
or
mov
pop
repz
scas
pop
lret
or
mov
push
xor
mov
push
inc
or
sbb
xor
sti
push
addr16
scas
ja
bound
pop
iret
add
clc
rcll
int
add
mov
jae
pushf
add
sub
mov
cs
iret
or
daa
bound
mov
adc
pop
out
movsl
loopne
ss
push
add
popa
xchg
test
and
push
scas
or
xor
test
mov
lret
push
xor
cmp
mov
jbe
push
push
test
jl
jl
repnz
aam
in
leave
sarb
cwtl
scas
mov
ljmp
pop
std
mov
pop
mov
adcb
mov
stc
adc
imul
stos
mov
mov
mov
mov
mov
shll
mov
push
gs
gs
leave
into
pop
jo
sbb
dec
jp
and
lcall
cwtl
xor
jne
push
lods
inc
jno
test
shl
lock
rcrl
and
repz
add
andl
cmpsb
out
add
xlat
adc
call
mov
sub
xchg
fidivrs
in
mov
jg
lods
loop
sub
cmpsb
inc
shlb
sub
inc
stos
in
pushf
jb
sub
stos
push
imul
mov
repz
test
sub
mov
jo
int3
mov
pop
jne
mov
xchg
or
ret
lcall
cmp
gs
mov
inc
add
cmp
adcl
add
mov
and
orb
xlat
sbb
lahf
push
int
jnp
addr16
jo
aad
jbe
push
das
lahf
push
movsb
lock
bswap
lea
cmp
pusha
add
xchg
cltd
sti
mov
outsb
and
inc
adc
enter
push
sub
jnp
loop
mov
rolb
rorl
mov
aas
fbld
cli
incl
into
jo
sub
in
mov
stc
or
in
mov
push
das
jb
test
clc
ljmp
adc
mov
push
mov
adc
leave
or
cmp
mov
ss
movsb
les
hlt
in
pop
lret
push
xchg
push
and
cltd
pushf
cmp
sbb
lea
ja
movsl
lods
push
stos
fisttpll
lret
mov
pop
aam
aas
jne
and
iret
xchg
inc
incb
adc
test
mov
out
fildll
in
and
push
pop
lods
inc
sti
xor
iret
inc
scas
mov
pop
pop
in
data16
fidivs
addr16
pop
fwait
cmc
stc
iret
mov
sbb
test
hlt
add
jnp
pushf
mov
rorb
adc
sbb
sbb
out
mov
scas
mov
xor
or
pop
sbb
comiss
sahf
into
enter
das
jo
scas
rorb
jmp
add
stc
adc
ja
imul
loop
rcr
xchg
outsl
fcoms
push
mov
sub
icebp
inc
popf
mov
jno
cmpsl
pusha
mov
sbb
xchg
lock
mov
cmp
mov
fsts
xor
cld
idivb
jmp
push
mov
push
pusha
cmpb
iret
push
jo
sub
jbe
or
adc
hlt
lods
lret
pushf
jne
into
add
lods
scas
and
lods
test
cmpsb
sbb
add
cmpsl
lods
sub
sbb
push
iret
int3
inc
sub
cmp
dec
js
adc
jnp
cld
cmc
outsb
out
or
jbe
lods
imul
or
adc
pop
push
jbe
add
pushf
xlat
sub
pop
inc
push
add
cwtl
mov
stos
and
mov
aaa
lods
iret
push
push
out
aam
xor
aaa
push
sub
jp
mov
dec
mov
test
lock
mov
xchg
sti
subb
and
outsb
add
mov
cmp
cwtl
int3
cmp
xlat
rclb
lret
lock
es
fisubs
pop
push
movsb
mov
mov
clc
in
lcall
xchg
xchg
lods
ret
add
cmp
imul
mov
push
xchg
outsl
iret
cmp
das
add
mov
pop
mov
xlat
cmpsb
push
cli
lock
fdiv
into
fwait
mov
insl
cld
jns
repz
mov
jo
hlt
iret
aaa
xor
xchg
lcall
ds
aas
lret
shl
decl
subb
out
mov
mov
iret
dec
jmp
imul
cmp
xchg
gs
and
inc
sarb
sahf
mov
imull
outsl
jle
jnp
and
jae
and
mov
filds
gs
insl
jp
jmp
decl
ja
push
dec
int3
push
sbb
test
mov
mov
push
ror
and
out
iret
mov
xor
ljmp
inc
int3
xchg
popa
inc
int3
push
or
jg
pop
mov
lahf
in
mov
lods
xchg
std
mov
push
xor
cmp
xor
cmpsb
jne
sub
cmp
xchg
mov
sbb
orb
es
cmp
jecxz
pop
mov
push
aam
aas
sbb
idivb
mov
jbe
data16
fwait
mov
insl
iret
pop
mov
fsubs
dec
fisttpll
xor
push
test
xchg
rorl
out
scas
xchg
fcoml
daa
adc
cli
aaa
loopne
std
adc
mov
xlat
or
loopne
push
aaa
inc
divl
imul
je
das
or
inc
jo
aas
addb
lea
movsb
and
inc
lea
js
or
push
stos
cmp
mov
xchg
and
pop
fwait
repz
adc
mov
dec
in
mov
mov
das
and
test
mov
xchg
out
imul
mov
mov
lods
jp
jge
mov
pop
fcomps
inc
outsl
imul
mov
sub
push
aad
movsb
add
dec
pcmpgtb
pop
inc
cmp
jle
push
mov
mov
mov
cmc
xchg
jbe
test
xchg
mov
or
push
jmp
test
cwtl
daa
or
mov
lahf
mov
sbb
pop
orl
out
inc
mov
or
outsl
in
lock
cmp
jne
dec
popa
out
loopne
into
add
mov
leave
outsb
xchg
cmc
lret
pushf
outsl
pop
and
sti
out
shr
stos
inc
and
pop
stos
mov
add
lea
daa
loope
stos
jo
in
dec
lods
push
adc
add
or
int
xor
sti
in
sub
test
out
mov
movsl
or
bound
ret
lods
scas
and
data16
push
push
push
mov
ss
leave
add
mov
js
sbb
jo
adc
dec
sub
insl
inc
fstps
pushf
cmc
into
inc
inc
dec
mov
jl
lahf
or
mov
lahf
loope
popf
mov
in
popf
mov
and
popf
jg
push
orb
xchg
popa
int
pop
adc
sub
lods
and
add
sbb
inc
cmpsl
pushf
or
dec
push
cmp
scas
scas
and
sbb
cmp
inc
js
das
and
pop
loope
xchg
out
and
sub
cltd
iret
loopne
jnp
xchg
dec
sbb
push
pop
insb
inc
sahf
dec
or
mov
cltd
dec
xchg
lods
mov
in
sti
or
push
mov
xchg
xchg
fldenv
pop
add
lds
popa
sbb
mov
iret
rolb
pop
daa
sub
addb
rcr
fnstenv
ja
fisubrl
dec
mov
lea
dec
sbbb
dec
outsl
xchg
add
xchg
fldenv
cmpsb
out
daa
shr
jnp
jno
lods
adc
xchg
outsl
jne
cli
jmp
mov
repz
xorl
iret
push
inc
xchg
mov
jnp
lret
jle
jnp
jne
inc
repnz
push
scas
push
jle
pop
popa
ljmp
outsb
adc
fstpt
mov
xchg
fiaddl
scas
es
arpl
push
into
xor
pop
insl
aas
inc
mov
mov
jmp
and
lods
dec
or
jnp
js
js
lods
addl
fsubrl
add
andl
jno
xor
imul
mov
jae
sbb
mov
ret
sub
add
cmp
data16
jecxz
jb
pop
insb
mov
in
push
push
push
pop
imul
mov
into
jbe
shl
mov
jbe
xchg
int
ja
mov
sar
jle
sub
test
dec
sub
push
mov
stos
jne
cmp
mov
in
stos
ljmp
add
lods
push
xchg
inc
dec
jmp
jae
and
sahf
test
add
mov
pop
inc
pop
xchg
repnz
dec
outsl
fstps
fs
lret
pop
stos
push
add
ret
addb
cmpsb
xchg
scas
sub
push
dec
movzbl
int
fldcw
out
loopne
pushf
jl
adc
add
xor
aas
push
pop
pop
into
ss
pop
jne
das
pop
cld
into
aas
ds
lret
js
pop
xor
and
add
mov
aas
mov
in
xchg
lcall
fwait
ds
int
add
test
loopne
cmp
jle
testb
add
mov
jo
inc
ds
pop
mov
call
mov
xchg
nop
mov
stos
xchg
iret
mov
ljmp
or
jns
paddq
dec
push
ret
rol
addb
lods
aad
mov
mov
add
cmp
inc
add
repnz
dec
out
jge
iret
cmc
arpl
inc
ljmp
sbb
dec
cmp
push
call
cld
cs
pop
or
lds
sahf
scas
test
out
imul
ret
test
rorb
lahf
jnp
out
out
movsb
mov
xor
cmp
into
adc
hlt
dec
test
stos
push
xchg
sbb
ljmp
into
mov
mov
xor
dec
mov
pop
adc
mov
insb
xchg
and
lea
sub
xchg
std
mov
ss
orl
daa
int3
test
mov
pop
sbb
inc
in
cld
jno
pop
fisubs
cli
into
mov
sbbb
or
fimuls
pop
sub
movsb
movsl
lods
xor
xor
cmp
mov
repnz
sub
aaa
adc
bound
popa
sbb
sbb
out
jle
aas
inc
popa
xlat
mov
xchg
into
xor
dec
scas
out
lea
adc
xor
jge
push
lods
push
mov
into
fdivr
push
xor
sbb
cmp
pop
xchg
xchg
rcr
cmp
jne
fwait
int
push
adc
lahf
xor
addr16
add
js
xor
insb
xchg
out
mov
aad
loop
dec
call
loop
loop
lahf
push
fisubs
adc
in
push
dec
jmp
out
adcb
or
add
inc
test
xchg
jle
sub
gs
mov
movsb
push
add
adc
inc
push
lcall
mov
ficoml
add
xor
push
dec
pop
push
cmp
cmpsb
mov
scas
leave
pop
loopne
call
ret
loop
lods
jb
push
fstpl
fdivrp
outsl
and
scas
clc
push
mov
mov
lock
pop
lea
insl
mov
jnp
push
loop
imul
mov
xchg
xchg
xchg
shl
lret
xchg
out
jmp
aaa
push
iret
loop
cltd
es
aaa
lret
jnp
addr16
lock
arpl
mov
iret
add
pop
loopne
dec
xchg
cli
loop
or
js
ja
cmp
orb
pop
hlt
xor
lahf
sbb
or
aaa
lret
addr16
jp
movsb
nop
into
cmc
or
adc
loopne
jno
or
in
jne
xor
xchg
push
in
ss
daa
or
jecxz
jle
pop
test
fidivs
out
fwait
aad
insl
lret
cld
aaa
out
jnp
dec
ret
and
dec
xchg
mov
imul
sub
sbb
fstps
stc
or
js
icebp
push
imull
rcll
fs
mov
push
or
popa
fwait
int
mov
leave
jns
ss
daa
pop
mov
cltd
cs
or
addl
jae
fisubrl
pop
dec
adc
push
xlat
in
cwtl
cmove
lret
push
jp
mov
loop
lahf
xlat
into
movsl
inc
lods
out
and
jg
int
push
loope
test
mov
dec
dec
sbb
sbb
pop
add
lahf
cmpb
decl
jmp
add
js
dec
lahf
repz
out
pop
int3
pushf
js
movsb
cmpsb
push
gs
adc
pop
std
inc
sbb
sbb
sbb
mov
incb
xchg
mov
addr16
js
aas
add
mov
mov
ret
fsqrt
mov
jmp
sti
out
mov
cs
cmpsb
push
dec
repz
dec
ret
jl
dec
jae
sbb
mov
sub
flds
sahf
add
aas
jno
sub
fcmove
cwtl
out
xchg
cwtl
into
stos
jne
imul
mov
fistl
dec
into
pop
cmp
lahf
push
mov
js
cmc
lret
jnp
mov
jb
bound
sbb
push
loop
inc
nop
stc
std
cmp
popa
jg
popf
sti
push
mov
lods
xchg
pop
xorb
sub
xchg
sbbl
sbbl
sbb
int3
inc
sbb
push
xchg
sbb
mov
cltd
xchg
mov
jge
aad
cmp
sbb
sub
and
inc
push
les
mov
ja
push
cmp
pushf
in
enter
ds
push
jp
mov
in
cs
mov
dec
sbb
adc
out
add
outsb
push
test
mov
outsb
fiadds
fimuls
popa
in
fcoml
cltd
lock
jo
jbe
and
adc
sub
or
into
daa
inc
sti
xchg
in
loopne
mov
stos
test
cld
sar
push
and
mov
js
call
decb
loop
sub
mov
push
jg
adcl
dec
shr
push
mov
test
pop
jno
xchg
xchg
movsb
hlt
or
inc
mov
mov
outsb
xor
xchg
shrd
stos
and
int
test
arpl
push
pop
addr16
ds
xchg
mov
jecxz
in
hlt
push
cltd
std
pop
mov
xchg
loop,pt
iret
insb
loopne
lea
notl
fdiv
pop
inc
jb
dec
inc
pop
ljmp
add
gs
adc
mov
iret
sbb
push
decl
lock
es
sti
sbb
nop
xchg
inc
xchg
adc
or
hlt
adc
and
fnstcw
mov
decl
in
sub
and
iret
das
in
aam
test
ficoms
int
add
cltd
sbb
push
pop
jmp
jmp
push
sti
xchg
fsubrl
scas
pushf
cmp
pop
cmp
adc
push
cli
fcomps
adc
fidivl
push
and
jne
aaa
mov
push
xor
sub
fsubrs
push
daa
pop
movsl
cs
sub
push
mov
sbb
mov
into
dec
mov
mov
push
push
sbb
push
and
sti
mov
aas
push
dec
pop
roll
mov
jns
mov
lock
inc
hlt
xchg
jg
shll
icebp
push
or
fisttps
push
pop
leave
push
and
imul
or
test
push
push
xchg
mov
and
loope
sahf
pop
pop
int
xchg
loope
sbb
mov
cmp
orb
cmp
pushf
test
add
pop
out
nop
mov
cmp
mov
popf
iret
dec
test
test
test
iret
jle
inc
push
mov
lock
hlt
das
aad
dec
pop
dec
loope
and
out
mov
stos
xchg
cmpl
add
dec
cwtl
in
negb
cmp
pop
pop
mov
xchg
add
popf
inc
fsts
insl
or
jnp
mov
imul
aas
push
xchg
outsl
cmpsb
testl
jbe
outsb
ljmp
or
mov
jmp
pop
fildll
cmc
loopne
in
jmp
jnp
mov
push
loope
lock
lcall
fistpll
fstpt
sarl
mov
xchg
xlat
je
dec
iret
les
loop
adc
out
mov
dec
or
pop
inc
popa
and
lcall
rolb
test
push
loop
push
and
shrb
fmuls
in
adc
jns
repz
xor
jg
xchg
cmp
out
inc
scas
push
pop
cwtl
xlat
mov
adc
ret
sub
leave
jae
jbe
pop
inc
sti
mov
xchg
movsb
or
add
mov
mov
std
lods
iret
jne
out
jg
mov
lahf
int
ds
out
dec
sub
cld
inc
in
sub
shlb
lret
jno
fdivp
into
inc
dec
ljmp
mov
mov
jae
aad
cmpsb
xor
jnp
push
out
fsubrp
pop
test
add
mov
sbb
scas
incl
aas
inc
iret
push
and
push
imul
loopne
sbb
hlt
scas
dec
aam
cmp
jecxz
sub
mov
stos
push
jno
rol
adc
test
sbb
push
mov
fs
cmpsb
sbb
loop
or
xor
inc
push
jns
mov
mov
dec
sti
call
pop
push
and
xchg
jae
add
popf
pop
stc
fbld
mov
ljmp
lods
push
inc
jg
push
int
pop
jle
into
fidivs
add
mov
push
or
jmp
sub
xor
ret
mov
add
push
add
jns
mov
js
lahf
mov
jo,pn
lret
xor
pop
scas
icebp
imul
mov
fldenv
iret
inc
jg
addr16
add
movsb
lahf
jnp
mov
xor
leave
pop
push
repz
add
mov
and
cmpsb
sub
dec
jp
xchg
insl
xchg
mov
cmc
mov
mov
or
dec
adc
cli
jp
int
frstor
xchg
out
jno
inc
pop
xor
or
ret
cmp
cmpsl
jl
adc
lods
add
xchg
std
adc
adcb
push
and
ror
outsl
out
aad
lods
sbb
int
fistl
gs
enter
scas
push
mov
pop
clc
mov
int
mov
in
sti
or
int
es
pop
ficoms
lahf
movsb
cwtl
and
jb
dec
iret
mov
lea
loopne
sbb
rep
xlat
jle
imull
mov
int
lds
daa
int3
pushf
inc
xchg
and
std
lahf
dec
rclb
fisubs
sbb
int
pop
int
in
push
rcrb
js
into
and
xchg
push
outsb
mov
rorl
inc
scas
sbb
popa
insl
mov
test
cltd
sub
push
outsl
mov
pusha
xor
test
adc
jne
push
cmp
jp
cltd
mov
call
int
andb
loop,pt
dec
mov
rorb
jmp
cmp
jge
test
pop
mov
inc
int
cmpsb
lret
inc
sbb
ss
icebp
jp
test
pop
mov
add
mov
sbb
inc
test
cld
or
jo
nop
lods
jns
inc
fsubrl
mov
add
sbb
loopne
push
gs
push
icebp
adc
movsb
inc
xchg
mov
rcll
push
test
fbstp
mov
or
mov
in
mov
jle
int
mov
jl
into
add
add
aam
insl
int3
add
or
or
mov
clc
mov
fsts
mov
xchg
int
jno
jo
popf
cmp
mov
loop
push
sbb
cmpsl
pop
and
stos
and
xchg
out
scas
push
cmp
mov
decb
jae
repz
xchg
inc
iret
mov
pusha
into
movsb
push
scas
mov
outsb
or
arpl
add
and
popa
mov
sbb
inc
jae
fs
vcvttss2si
pop
ljmp
adc
shrl
mov
pop
adc
pop
or
and
into
imul
add
cli
stos
sti
mov
pushf
ja
dec
scas
push
ret
in
leave
inc
std
sbb
iret
cs
adc
lods
inc
xlat
add
mov
sub
xor
lds
mov
scas
jno
sub
dec
pop
or
adcl
cmp
xchg
jbe
lods
decl
lea
nop
jb
xchg
add
sahf
into
push
loope
or
rorb
dec
cwtl
cmpsb
jbe
idivl
insl
outsb
pop
jle
push
sub
push
pop
mov
cmp
loope
mov
mov
jnp
xchg
inc
insl
int3
sbb
loop
xchg
dec
lahf
sbb
mov
xchg
sbb
pop
in
mov
dec
add
int3
idivl
int
dec
xor
mov
repnz
push
cld
sbb
add
call
cmp
ja
je
sub
int
scas
xor
cmpb
lock
cmp
pop
insl
or
jnp
outsb
mov
ds
sub
fsubr
dec
daa
aaa
or
lea
xor
sbb
xchg
pop
push
iret
mov
lret
and
outsb
das
pop
pop
sub
jg
add
cmp
roll
mov
push
pop
adc
sbbb
movsb
popf
push
push
xor
inc
cmp
mov
fisttpl
sti
xchg
pop
or
mov
int
lahf
call
stos
and
mov
ss
cld
rcrb
into
pop
sbb
or
mov
cld
faddl
sahf
sbb
inc
rcrl
outsl
lea
int
add
dec
jle
cmp
hlt
outsl
mov
aaa
popf
push
data16
cs
mov
ds
sbb
movsl
icebp
push
dec
cmp
mov
jb
jge
rcll
leave
scas
mov
lcall
aad
dec
int
aaa
adcb
js
cld
jo
jbe
or
arpl
dec
or
in
rcll
fwait
sahf
popf
sti
push
sub
les
sahf
pop
sbb
mov
add
inc
dec
in
cmpsb
data16
in
lahf
jb
fimull
sub
sbb
push
dec
hlt
mov
mov
lods
cmp
mov
lret
hlt
fstps
jg
es
jo,pn
int
scas
mov
mov
ljmp
add
adc
cmp
imul
iret
dec
out
jno
aas
jae
pop
dec
int
ret
push
aas
fmulp
aas
popa
sahf
or
lods
orb
stos
fimull
icebp
lock
jp
inc
int
mov
fisubs
or
jle
pop
pop
and
lcall
mov
in
inc
push
ljmp
cltd
ror
cmp
pop
jle
lcall
inc
and
sbb
dec
xchg
out
lea
enter
psrld
jg,pt
lea
jmp
push
push
fidivs
call
fimuls
pop
aas
pop
pop
aam
popa
out
arpl
mov
aad
addr16
je
sub
stos
push
cmp
int3
sub
adc
test
xchg
shl
outsb
inc
and
mov
pop
scas
scas
nop
fs
lret
dec
jmp
loopne
or
int
out
mov
fdivrp
shrb
xor
and
js
and
sub
insb
dec
fdivs
rcll
push
sbb
mov
jae
js
pop
dec
sbb
aaa
popf
mov
mov
scas
cmp
sbb
outsl
pop
test
pop
push
lods
pop
lahf
mov
pop
jp
loop
add
inc
pop
cs
mov
pop
sub
xlat
add
ja
sbb
inc
lcall
mov
sub
outsb
dec
sbb
fstpt
jp
aaa
testb
mov
push
and
cmpsl
inc
popl
ficomps
scas
mov
xchg
sbb
and
gs
shll
cmp
idivl
sbb
neg
cmp
fldenv
jp
inc
dec
sahf
fwait
iret
and
or
cwtl
sti
cmc
lret
pop
addr16
shll
or
mov
js
dec
jns
cli
hlt
das
xchg
xor
jp
xchg
lret
mov
jne
pop
clc
push
or
mov
cmp
cli
call
ds
or
mov
aas
or
insl
cmp
test
xchg
test
insl
inc
jne
push
pop
add
xchg
int3
ret
xchg
lahf
shll
adc
test
jp
pop
or
inc
pop
or
cmpl
pop
add
pushf
insl
shlb
ficomps
jne
lods
in
imul
jo
lods
int3
pushf
xchg
into
mov
shl
dec
mov
xchg
push
jne
or
and
jle
inc
mov
pause
hlt
lcall
add
push
jle
pop
cmp
dec
cld
repnz
arpl
xor
xchg
test
cmp
inc
cmp
inc
inc
int
xlat
mov
cwtl
into
pop
cld
stos
cltd
loopne
xor
jbe
jae
push
mov
jp
test
add
mov
sbb
dec
stc
or
sbb
mov
fildll
jae
scas
arpl
jge
push
push
dec
insb
xchg
popa
jp
mov
sarl
bound
jle
cmc
mov
leave
xor
dec
outsl
mov
loop
cmp
mov
adcb
dec
pop
les
and
cld
sahf
ret
ficoms
int
dec
arpl
cmp
mov
mov
jnp
popa
fisubl
jle
adc
xor
mov
outsb
jo
fwait
cs
xor
lods
sub
push
xchg
popf
in
imul
mov
pop
iret
adc
out
mov
or
mov
mov
addb
lcall
ficomps
or
test
jae
iret
mov
cld
aad
fwait
lds
in
icebp
adc
mov
mov
jo
lods
push
icebp
jl
in
pop
cmp
inc
je
aam
mov
and
push
imul
ljmp
or
ja
into
cld
push
xchg
push
mov
xor
out
popa
jbe
sti
sbb
and
std
imul
pop
cli
jp
mov
subb
xchg
int
jae
xorl
sti
adc
aaa
adc
data16
addr16
push
ror
inc
aad
jle
int
clc
movsb
inc
mov
enter
ja
mov
rorl
iret
stos
lds
sahf
add
sbb
lods
stos
imul
sub
scas
xchg
in
ljmp
push
sub
sub
clc
pop
in
push
jae
je
adc
iret
jb
jae
mov
push
repnz
icebp
mov
push
lods
and
mov
in
pop
ljmp
inc
push
ret
scas
movl
jl
sbb
push
ljmp
mov
mov
clc
add
mov
mov
pop
call
push
iret
mov
inc
std
mov
outsl
mov
hlt
icebp
add
mov
push
sbb
popa
aad
mov
insb
sbb
sbb
iret
mov
sub
jae
sbb
sub
adc
push
gs
cmc
push
mov
pop
jo
cmp
gs
jmp
cld
aad
sub
incb
cld
mov
lods
dec
sub
or
test
push
push
lock
push
sbb
fmull
into
adc
fwait
dec
xchg
mov
mov
clc
inc
aad
xchg
out
and
ror
ds
ret
nop
gs
sbb
mov
xlat
ret
xor
xchg
jp
xor
ja
push
mov
lods
insl
fdivrs
aad
icebp
mov
pop
pop
data16
das
jecxz
int
rcll
jge
test
stos
sub
aam
fdivp
push
mov
mov
cli
pop
xchg
jp
pop
cmp
sti
cmpsl
test
gs
lods
in
push
fwait
mov
pushl
cmpsl
xor
adc
and
test
or
xlat
cltd
jo
nop
stos
pop
subl
add
pushf
lea
repz
inc
and
push
iret
xchg
push
add
call
cmp
mov
jg
in
xchg
sahf
sti
mov
fnstenv
loope
adc
dec
inc
pushf
push
inc
pop
xchg
enter
fyl2x
push
fdivrl
jp
jo
in
dec
dec
gs
out
push
inc
jecxz
xchg
int
stc
sbb
iret
push
lock
or
lret
ljmp
mov
inc
cltd
jae
jo
mov
fistl
hlt
mov
mov
icebp
mov
popl
mov
jge
lcall
lods
jo
repz
xchg
outsl
std
cmc
ret
or
xor
ljmp
lods
jp
cmp
adc
mov
mov
jb
mov
outsb
mov
sub
push
mov
pop
stc
int
push
pop
mov
xlat
addl
jg
pop
xor
add
movsb
test
test
popf
xchg
sbb
sub
addl
inc
hlt
and
jle
ljmp
push
xchg
jno
int
lock
and
xlat
or
std
shlb
mov
push
xchg
push
in
jecxz
xlat
cmpsb
loopne
pop
into
add
leave
fists
xor
lods
scas
fcomps
jp
mov
mov
xlat
xchg
insb
inc
rorl
fnstenv
mov
jle
mov
das
xor
xchg
xor
dec
mul
xlat
push
loope
sbb
mov
jne
cmpl
adc
arpl
testl
sub
popf
ret
lea
icebp
cmp
or
cmp
jp
mov
arpl
inc
push
scas
mov
jnp
jno
fists
lret
mov
pushf
pop
adcb
mov
addr16
pop
into
leave
cmp
mov
daa
fidivl
adc
pop
and
cltd
sarl
movsb
fwait
pop
ja
iret
in
scas
fmulp
rorl
or
mov
xlat
enter
or
popf
or
popl
sub
push
cmp
fbld
aad
xor
and
stc
icebp
loopne
jp
js
clc
pop
push
mov
dec
mov
lock
dec
xor
out
mov
cmpsb
jb
dec
aaa
push
dec
sub
lret
clc
es
lcall
mov
movb
mov
clc
aad
sub
sti
or
mov
repz
mov
das
stos
xor
mov
pop
addr16
lcall
imul
sbb
outsb
lods
mov
cmp
bound
lret
cmc
push
cli
lret
gs
rclb
sbb
sbb
cli
ficoms
pusha
data16
dec
fistps
fidivrs
pop
pop
outsl
fwait
dec
mov
xchg
xor
sub
or
add
mov
aaa
mov
lahf
stc
lods
iret
xchg
jmp
cmpsb
popa
mov
repnz
aad
jp
gs
sub
std
and
mov
and
loope
pop
clc
jle
add
mov
pop
addr16
insb
sti
fmulp
movsb
or
jecxz
and
sti
stos
gs
mov
enter
sbb
adc
pop
pop
lahf
out
fs
sub
sbb
xchg
leave
jp
mov
pop
push
stos
insl
xchg
jno
and
enter
pop
dec
push
loope
push
cmpsl
movsl
jbe
push
push
rcll
insl
or
aaa
push
pop
add
xor
call
mov
fildl
iret
xchg
adc
jl
fnstenv
sbb
add
xchg
push
int3
pop
inc
stos
push
push
inc
sti
mov
pop
lahf
dec
lret
int
jne
insb
push
mov
lock
pop
lahf
orl
xchg
mov
orb
push
cltd
adc
adc
pop
fisttpl
outsl
out
pop
les
dec
add
fs
and
mov
sub
cmp
es
mov
add
dec
mov
or
cmpsl
push
jns
adc
push
pop
div
push
xchg
and
push
push
and
cmp
dec
gs
roll
cs
or
dec
jmp
push
push
imul
inc
xor
pop
pop
adc
jne
test
lea
cld
pop
xchg
loop
dec
cmp
daa
js
ss
dec
lds
lock
sbb
mov
out
lds
push
out
push
js
je
adc
iret
push
sbb
cmp
xchg
addl
push
adc
mov
and
pop
or
sti
dec
sbb
es
xor
push
jo
loopne
test
jg
push
sbb
decb
inc
lcallw
pop
mov
dec
lahf
daa
das
imul
fcmovnu
fnstcw
pop
mov
test
push
call
jmp
lahf
rorb
jae
dec
std
lahf
stos
push
clc
lock
popa
stc
pop
jb
push
ret
call
mov
repnz
testb
test
clc
addr16
mov
jne
sub
sarb
pushf
sub
pushf
iret
inc
hlt
aam
cli
push
int
or
dec
jmp
bound
cmc
sub
adc
push
lds
addb
faddp
jle
dec
jnp
pop
movsb
jnp
clc
jmp
int
mov
aam
enter
cmp
mov
push
adc
pop
mov
or
test
in
push
rclb
dec
mov
cli
out
adc
stc
pop
test
or
cltd
push
mov
out
mov
xchg
mov
mov
adc
adc
daa
pop
lahf
repz
or
xchg
mov
add
mov
xlat
lcall
xlat
and
add
adc
hlt
ds
jne
push
fmul
cmp
mov
sub
or
fmulp
mov
pop
cwtl
loopne
popf
outsl
xor
cmpsl
push
adc
daa
cli
sti
sbb
mov
icebp
and
mov
xor
xchg
add
lret
lret
lahf
xchg
popf
and
push
mov
iret
divb
dec
jne
shrl
pusha
pushf
jg
addr16
repnz
cmp
ljmp
fldenv
sub
lock
stos
xchg
jl
sub
lret
int
les
cltd
ret
fucom
sbb
pop
jne
sbb
or
mul
aaa
push
mov
test
xchg
mov
stos
pop
dec
xchg
out
dec
xor
push
and
dec
sti
xor
lds
xor
push
cltd
lea
data16
outsb
js
das
inc
or
movsl
xor
inc
jo
add
push
mov
dec
xor
cwtl
test
pop
fldenv
and
jecxz
pop
fnsave
jno
cmp
inc
mov
push
fistpl
pop
inc
lcall
pop
sbb
jle
mov
das
ljmp
mov
cmp
mov
jnp
lea
pop
cmpsb
mov
mov
inc
test
adc
daa
imul
cmpsb
mov
mov
pop
in
adc
pushl
enter
xchg
push
int
repz
mov
push
test
or
jno
clc
jp
mov
addr16
ja
adc
cli
sahf
rclb
and
ja
cmp
and
lret
mov
repnz
mov
test
ja
ret
push
xchg
mov
inc
lret
lret
div
inc
fwait
mov
dec
je
ja
or
repnz
pop
sub
cmp
outsl
xchg
mov
jb
mov
iret
push
packssdw
ljmp
addb
lret
aad
cmc
pop
push
mov
add
call
push
sub
mull
cmp
inc
divb
repnz
int
ja
int
jae
or
je
imul
xchg
fst
lahf
inc
xchg
in
sub
iret
jle
popf
jo
jp
add
int3
add
rcrl
decb
out
cmp
lcall
mov
pop
pop
das
enter
cmpsb
hlt
leave
outsl
test
sti
add
sbb
jne
cltd
xchg
lea
outsb
or
push
js
mov
pop
and
xor
add
pop
stos
adcl
movsb
lock
int
jge
mov
pushf
stos
cwtl
mov
dec
in
inc
repnz
and
mov
xor
adc
out
adc
inc
cltd
popf
or
cmp
lea
sbb
jne
or
pushf
inc
fnsave
clc
rorb
fdivl
xchg
jl
jge
jmp
xchg
pop
aas
xchg
mov
outsb
or
insl
push
adc
push
sub
dec
pop
cmp
cltd
jno
fcomps
adc
push
push
sbb
cmpsb
sbb
cmp
pop
loop
inc
cs
or
into
jle
push
lds
sbb
gs
push
lea
xchg
or
pusha
popf
jb
inc
dec
out
xchg
in
mov
shl
mov
mov
xchg
push
xchg
xchg
xchg
jnp
or
mov
decl
sti
add
scas
fldt
or
mov
imul
jo
cwtl
loop
test
cmp
cmpsl
add
int
call
push
inc
jg
fdivp
test
fs
fists
cmp
dec
lea
stc
mov
mov
pop
sti
dec
push
lea
or
movsl
jg
test
xchg
pushf
ret
or
jle
pop
adc
xchg
dec
mov
pop
xchg
into
mov
cs
rorb
adc
fisttps
ljmp
cli
fstl
jle
aaa
mov
iret
or
pop
pop
xor
clc
mov
sbb
iret
aas
jno
pop
scas
idiv
lcall
mov
stos
xchg
push
mov
lret
popf
mov
sahf
cmp
mov
cwtl
pop
xchg
cmpsl
popa
or
std
cltd
loope
mov
lret
sbb
cmp
xchg
and
in
cwtl
push
and
aad
lret
test
mov
addr16
mov
xchg
outsl
mov
sub
das
call
pop
mov
leave
xchg
mov
incl
mov
push
lock
ror
popa
pop
xchg
cmovns
js
jne
or
xchg
add
cwtl
lahf
mov
push
lds
inc
inc
sbb
hlt
add
aaa
sbb
cmp
lret
or
cmp
mov
inc
fiaddl
ss
add
stc
cmpsl
xchg
cld
lods
pop
nop
mov
ljmp
jmp
cmp
data16
jg
into
cmp
ss
shll
add
popf
mov
add
dec
push
dec
push
psubd
and
mov
or
repnz
out
cwtl
pop
popa
sbb
push
xchg
loopne
sbb
sbb
cli
sub
sbb
dec
pop
sahf
add
xchg
pop
pop
jns
lcall
fdivl
les
popf
or
es
xchg
push
ret
sub
enter
sub
mov
sub
pop
cmpsb
inc
mov
insl
into
sub
iret
and
xchg
ds
xor
ljmp
ja
fidivrs
mov
sbb
push
adc
sub
push
shrl
icebp
scas
outsb
or
adc
shl
mov
popf
loope
jp
nop
icebp
push
iret
cmc
jl
pop
xchg
push
inc
gs
inc
push
psubw
mov
sbb
add
mov
enter
in
idivb
pop
push
cmpsb
jmp
cltd
dec
clc
mov
push
push
int3
test
push
sbb
xchg
push
enter
pop
jmp
inc
pop
subl
push
mov
repnz
pop
stos
cwtl
mov
in
int3
inc
fwait
jmp
jae
mov
ljmp
cs
or
add
add
jne
jo
aad
xchg
dec
psubsb
mov
push
inc
ret
pop
cmp
sbb
mov
push
add
imul
data16
mov
mov
mov
add
ret
mov
in
dec
gs
lods
sub
and
pushf
iret
mov
in
out
push
int
xchg
push
xchg
dec
push
mov
inc
int
cwtl
jae
not
in
sub
mov
in
or
movsl
aam
sub
push
inc
arpl
push
fxch
push
shl
leave
int
ret
inc
xchg
xchg
push
mov
in
and
xchg
add
xor
xchg
pop
dec
pop
das
inc
leave
jecxz
hlt
xor
mov
cltd
dec
sbb
inc
jg
mov
scas
iret
popf
pop
mov
push
adc
xchg
push
pop
movl
push
ds
and
daa
rorb
dec
pop
fisttpll
xchg
vfrczpd
xchg
mov
fildl
fimull
cmp
int3
add
in
or
jne
sti
in
jne
xchg
test
mov
or
jge
loop
mov
ret
jp
bound
fucomi
inc
dec
scas
cmp
lcall
cltd
sub
mov
sub
shr
xor
xchg
mov
cli
aaa
and
sub
clc
sub
xor
hlt
mov
cld
or
iret
sbb
in
cmp
sub
repnz
fistpll
popa
or
lcall
or
icebp
jne
enter
sbb
or
add
clc
jl
test
call
and
push
rcll
lods
roll
fimuls
xchg
jmp
xor
scas
cltd
dec
or
jno
imul
outsl
adc
into
popa
clc
mov
jne
xchg
jecxz
ficomps
iret
mov
orl
push
inc
pop
mov
mov
hlt
pop
sbb
sub
adc
loopne
adc
push
cmp
aam
mov
cmp
jge
out
cmp
fimull
mov
xchg
and
cli
cmp
and
rorl
loop
push
mov
mov
add
sarb
and
pushf
jp
repnz
lea
ss
int
imul
outsl
lds
rorl
and
ret
stos
or
mov
out
inc
mov
push
arpl
ficomps
cld
xchg
jge
jno
cmc
ja
jle
push
add
or
jp
js
call
jne
out
jno
inc
jne
es
pop
push
mov
mov
in
daa
daa
sti
cmp
cld
mov
sub
shll
push
sbb
adc
outsl
jmp
cs
decl
add
mov
mov
ds
mov
mov
jmp
push
rorl
pop
stos
xor
ja
enter
push
jne
or
adc
jnp
xchg
loope
adc
xor
mov
test
jns
mov
inc
xchg
cmp
adc
inc
sbb
int
fmuls
cmpsl
cmp
icebp
pop
pop
xchg
and
xchg
mov
ret
dec
cmp
xchg
cmp
call
jge
in
movlps
js
leave
xor
ljmp
clc
or
fidivl
movsb
test
push
dec
and
adc
fmulp
add
or
lds
jp
xchg
movsb
das
jp
rorl
push
stc
mov
lret
push
cwtl
ror
iret
int3
nop
push
je
pop
xchg
push
pusha
or
imul
es
cmp
sub
insl
jecxz
inc
mov
int
sbb
inc
aad
mov
shrb
arpl
loope
int3
into
sbb
imul
mov
mov
mov
add
adc
outsb
xor
test
js
dec
adc
mov
dec
mov
mov
sahf
iret
sbbb
fistpll
test
mov
dec
pusha
mov
mov
xchg
outsl
jne
call
sub
dec
or
and
xor
cltd
into
mov
mov
or
jg
push
aad
roll
pushf
fmulp
jae
pushl
lods
sbb
data16
adc
xchg
ret
sahf
mov
inc
std
stc
loope
sub
mov
test
fldl
or
cld
mov
push
ljmp
mov
xchg
ficoms
js
test
cwtl
mov
es
imul
and
pop
mov
push
subb
and
dec
sbbl
cltd
movsb
stc
popa
outsb
xchg
and
and
movsb
outsl
push
test
xor
addr16
xchg
divl
pop
add
xchg
lret
jae
outsb
inc
pop
mov
gs
and
mov
xor
xchg
inc
bound
incb
into
and
inc
jbe
popf
mov
inc
sub
or
in
stc
sbbl
movsb
inc
sbb
out
loope
ja
leave
add
or
dec
inc
data16
loopne
mov
xchg
cmp
inc
test
ds
push
stc
cmc
mov
xor
add
rcrb
adc
lods
dec
cmp
out
mov
loop
xchg
pop
cwtl
mov
int
lods
call
jle,pt
jo
stc
mov
adc
add
jae
push
push
xor
push
or
fstl
push
fucomip
movl
jle
cs
in
and
and
je
jg
lock
and
rolb
rcl
sti
lods
xlat
into
xchg
and
xchg
iret
fwait
or
jp
mov
xchg
mov
push
loop
addr16
jno
pushf
out
mov
push
ficoms
fdivrp
mov
testb
fbstp
mov
mov
push
mov
jbe
iret
ds
test
rolb
xchg
jge
lret
inc
push
xchg
outsl
outsb
test
es
rol
sbb
arpl
or
sub
cltd
push
xor
fstps
mov
adc
mov
push
mov
lcall
insl
cmp
jnp
xchg
adc
mov
xchg
std
adc
negl
mov
cmp
subb
out
ljmp
and
or
adc
mov
push
into
xchg
mov
xchg
fildll
xor
xchg
mov
jns
into
ret
mov
mov
orl
xor
cmp
mov
imul
xor
lahf
jecxz
test
jo
mov
sti
repz
lea
std
in
mov
mov
fwait
adc
dec
xchg
and
fstpt
sbb
mov
decl
clc
stc
cmp
enter
and
and
lock
ja
lods
and
std
std
mov
lcall
ss
nop
jge
and
jnp
xchg
mov
xchg
in
orb
je
std
or
inc
xchg
mov
dec
or
sahf
sub
push
dec
int
xchg
insb
xor
jo
pop
add
xor
into
and
cmc
xchg
jo
pop
not
aaa
mov
or
xchg
pop
dec
add
xor
sub
leave
jmp
insl
mov
add
mov
push
mov
xor
jo
push
and
sbb
xchg
in
scas
rolb
out
inc
std
xchg
pop
jns
fdivs
aas
enter
scas
ss
sub
popl
and
sub
mov
mov
mov
mov
clc
into
pop
call
or
dec
push
pusha
cwtl
sub
fmul
aas
sbb
ja
mov
out
sbb
adc
push
xchg
dec
jp
out
and
sbb
jge
cmpsb
andl
add
fwait
inc
mov
jp
sbb
jmp
mov
sbbl
inc
fnstsw
sahf
scas
mov
out
adcb
inc
lods
js
jo
sub
sti
or
lods
sbb
push
loopne
mov
icebp
sbb
std
inc
into
mov
mov
lcall
idiv
aas
outsb
data16
jo
mov
fistps
rcrl
gs
push
mov
push
das
xchg
popf
insl
sub
clc
and
or
mov
mov
icebp
int
xchg
push
xor
daa
mov
dec
mov
xchg
or
jo
inc
insl
ljmp
into
and
add
int
push
scas
xchg
push
iret
or
scas
xchg
mov
inc
push
leave
in
lea
pop
mov
lcall
cmp
aam
adc
dec
cmc
out
lods
jle
xchg
cmpsb
fildll
add
call
pop
xor
popf
dec
cmp
inc
push
dec
mov
mov
iret
push
push
add
dec
sbb
mov
lahf
ja
xchg
jbe
icebp
pop
mov
icebp
mov
sahf
je
add
ljmp
inc
pop
mov
outsb
popa
lret
mov
inc
jno
pop
dec
mov
mov
mov
shl
adc
mov
repnz
push
lea
dec
into
test
cmp
dec
mov
mov
hlt
jae
int3
sarl
pop
ficompl
das
push
pop
xchg
loope
aaa
or
adc
dec
push
lcall
pop
jg
push
lods
jne
scas
aas
add
test
mov
rolb
jae
adc
iret
sbb
mov
pop
fistl
das
inc
in
out
mov
push
sbb
push
sti
fisttpl
movsb
or
repz
cmpsb
jg
nop
into
jle
xchg
add
fcomp
and
stos
popa
inc
rcr
decb
dec
dec
cld
mov
popa
mov
repz
cmp
jp
push
iret
pop
inc
push
jae
cmpl
or
lahf
call
or
mov
loop
gs
lcall
xchg
add
adc
loope
std
jg
inc
aam
xlat
ds
xchg
lcall
ljmp
pop
sbb
push
jmp
mov
mov
rep
hlt
dec
jo
xchg
aas
arpl
push
sub
bound
pop
sbbl
bswap
popa
and
or
jmp
mov
xor
xchg
sbb
movsl
xlat
pop
dec
fisttpl
dec
sti
adc
lcall
add
push
cmc
push
dec
out
or
inc
aam
xchg
mov
sub
sti
inc
cmp
outsb
int
popa
and
push
scas
insl
mov
fs
iret
in
adc
push
or
movsb
icebp
cmp
clc
in
pop
add
enter
shll
sbb
loopne
dec
xor
xchg
test
std
dec
xchg
lcall
jnp
or
jb
clc
pop
stc
cwtl
adc
pop
push
mov
pop
jne
pop
loopne
js,pn
or
jg,pn
call
pop
hlt
aam
es
mov
aas
adc
repz
mov
cltd
dec
cld
cltd
and
clc
or
jge
and
addr16
sub
inc
out
decb
adc
popa
mov
mov
jmp
rclb
cmpsb
mov
mov
sub
fistpll
mov
sbb
and
outsl
les
xchg
movq
and
pop
jge
jns
cli
inc
fmull
int3
cmp
into
inc
xor
add
sbb
mov
push
inc
int3
jecxz
movsb
dec
cmp
test
xor
out
fstps
in
insb
fildll
sbb
into
ljmp
outsb
add
sbb
faddl
and
fisubs
inc
nop
adc
in
inc
cmp
mov
inc
lahf
int
or
dec
in
fildl
iret
ljmp
test
daa
push
or
xor
xlat
pop
aam
push
sbb
mov
or
addr16
sahf
dec
and
out
sub
push
fistl
frstor
adc
notl
xchg
das
movsl
jae
pop
xchg
in
mov
ret
fstl
or
jge
jns
pop
shlb
pop
or
mov
repz
mov
fdivrl
mov
aaa
jg
jg
in
sahf
fs
movsb
ja
sub
xor
ss
in
pushf
test
mov
cmp
xchg
mov
repnz
cmc
xor
iret
lret
dec
push
scas
mov
call
mov
push
popf
test
mov
xor
notb
sbb
test
lcall
pop
inc
xchg
out
sub
jne
repz
addr16
lcall
lds
dec
inc
incl
mov
int
dec
lcall
ja
nop
cltd
pop
xchg
fistl
adc
sbb
fimuls
scas
jg
lods
inc
or
fisttps
sti
dec
xchg
sbb
fsubs
jecxz
fisttps
cld
je
dec
cli
pop
lock
push
clc
imul
mov
lds
xchg
jle
jecxz
fcompl
je
mov
xchg
nop
inc
cmp
jo
insl
cmp
pop
lcall
ja
fstps
mov
jns
jg
mov
sbb
rcrl
popf
cmpsb
ret
outsl
or
xchg
das
lods
ret
pop
xor
xchg
cmpsl
dec
int3
sahf
pop
xor
in
mov
mov
test
xchg
mov
lahf
stos
out
callw
mov
das
mov
popf
mov
cltd
add
into
adc
lahf
mov
dec
lahf
lds
pop
iret
push
xlat
rcrb
adc
and
hlt
sub
fidivs
lahf
insl
pop
push
or
inc
loope
push
into
pop
sbb
mov
push
mov
or
jbe
inc
inc
mov
pop
scas
mov
pop
mov
mov
scas
sub
xchg
pop
lahf
mov
jecxz
std
or
mov
cmp
add
ja
out
jbe
push
mov
fcmovu
add
xchg
cltd
adc
int3
gs
xchg
ljmp
mov
aam
popf
dec
inc
pop
or
jle
adc
pop
dec
dec
stos
rorl
adc
mov
cmc
push
leave
mov
in
outsl
out
mov
out
cmpsl
inc
push
les
hlt
subb
repz
pop
stos
fistpl
lods
scas
adc
popa
push
dec
mov
subl
test
iret
out
cmp
loopne
inc
shl
dec
jnp
and
mov
jle
xor
and
push
pop
jb
jno
add
or
rcr
mov
js
lret
pop
in
loopne
ret
into
xchg
roll
and
jno
pop
js
in
jle
push
adc
add
cli
cmp
sti
lret
movsl
pop
outsl
jo
cmpb
sahf
mov
shrl
or
mov
cwtl
mov
psrld
call
scas
push
fwait
sti
stos
add
jae
nop
out
sbb
mov
sarl
or
push
int
mov
xchg
in
stc
push
push
xchg
repz
test
inc
and
ljmp
add
rcrb
out
int
sbb
into
ja
ja
loope
mov
mov
lods
fs
inc
fiadds
stos
mov
ss
mov
xchg
test
aas
lock
and
sub
or
and
outsl
or
stos
inc
fisubrl
into
ljmp
sbb
std
in
xor
lcall
pop
cmp
cltd
out
insl
fimuls
or
pop
gs
aas
adc
jg
push
into
mov
nop
imul
loop
or
cmpsl
pop
fnsave
jbe
pushf
popf
push
nop
repnz
add
mov
pop
pop
iret
repnz
or
inc
mov
out
test
int
add
lods
jno
stos
jbe
push
jb
imulb
sar
daa
adc
cs
cltd
loopne
test
adc
andl
jnp
or
push
add
jnp
popa
popf
loop
mov
js
dec
push
lock
das
pop
lahf
sub
lahf
repz
jle
cld
nop
notl
int
push
xchg
fwait
icebp
dec
cli
lea
cli
pop
into
repz
lods
jnp
jp
cmc
cmp
inc
push
adc
ret
push
fldt
pop
inc
xchg
sub
pop
jns
push
loopne
mov
or
cmpsb
and
loop
addr16
mov
insb
add
in
xor
jp
mov
hlt
mov
mov
push
stc
repz
xor
and
push
cmp
mov
int
fisubl
hlt
in
stos
mov
mov
iret
int3
inc
divb
dec
xchg
mov
pop
dec
inc
jo
mov
lret
in
lahf
adc
lods
lahf
fwait
mov
je
lds
mov
std
sbb
inc
inc
jl
repnz
push
movsb
dec
cmc
push
pop
es
xchg
jno,pn
out
nop
xchg
xchg
xlat
fwait
or
test
xrelease
adc
and
and
dec
fcmove
mov
jbe
sbb
adc
inc
jmp
popa
loopne
or
lods
out
xchg
mov
or
push
sbb
gs
jg
jnp
ljmp
sbb
cmc
cwtl
rclb
jle
inc
lahf
inc
test
popa
mov
sbb
data16
fisttpll
addr16
fidivrs
sub
pop
or
lds
lret
movsb
or
cmpsl
push
icebp
mov
lcall
sahf
lret
into
mov
or
jle
jg
test
xor
das
mov
mov
and
mov
inc
repnz
sub
xchg
ds
jb
mov
or
lcall
nop
jp
cmpsb
dec
fwait
xor
inc
add
and
adc
shlb
mov
nop
adc
cmp
pop
and
loop
push
fstpl
mov
int
xchg
test
orb
popa
push
inc
rcrb
mov
push
fistpll
scas
mov
lods
and
inc
dec
dec
jb
mov
mov
mov
mov
pop
outsb
loopne
ljmp
sahf
testl
sub
jbe
je
sbb
mov
outsl
push
and
in
sub
loop
shl
lods
mov
test
das
adc
data16
xor
push
cmp
int3
clc
mov
aas
pop
add
mov
iret
push
jmp
jbe
jge
dec
pop
sub
jo
sbb
stc
int
sub
xor
jo
test
dec
jmp
xchg
and
fisttps
lods
out
adc
cld
iret
mov
push
test
popa
rcr
in
and
dec
pop
xor
testw
call
mov
jne
dec
js
cmp
mov
ja
mov
movsl
push
test
sbb
pop
jle
daa
fidivl
jbe
xchg
pop
cmpsl
mov
jnp
shrl
push
xchg
fildl
mov
in
mov
add
xlat
movsb
or
dec
out
orl
in
mov
xchg
int
or
idivl
fwait
pushf
out
scas
xchg
fidivrs
out
sub
nop
cmp
push
jg
or
mov
arpl
mov
popf
sahf
ret
test
lock
cmpsb
lret
lods
or
aad
inc
mov
int
mov
push
fcomi
daa
sub
mov
xchg
int
lret
and
je
cmpsb
mov
mov
mov
mov
hlt
into
test
rcrl
dec
ficoml
imul
mov
add
mov
mov
cwtl
mulb
test
insb
stc
jp
shlb
pop
ror
into
in
and
js
fucomi
or
push
in
inc
jne
pop
or
fucompp
hlt
sahf
inc
mov
pushl
loop
jo
addr16
lcall
add
int
pushf
xor
push
lods
icebp
pop
movsb
pushf
pop
sub
int
xchg
mov
cld
mov
shr
leave
push
jp
or
into
jle
jp
sub
push
dec
into
insl
cmpsb
mov
sbb
push
and
pop
out
outsl
push
push
stos
cmp
lods
adc
clc
jle
in
iret
push
or
into
add
repz
pop
mov
js
mov
inc
int
pop
js
popf
sub
push
sti
popf
lcall
jmp
fidivs
xchg
push
xor
jbe
push
pop
sbb
and
add
icebp
pop
fiadds
cmp
jle
lods
jp
aad
jg
iret
inc
cmp
jg
mov
jl
sti
decl
les
stos
mov
sbb
mov
pop
push
popa
not
bound
pop
mov
mov
popf
loop
scas
xchg
or
dec
xchg
addr16
inc
int
mov
in
fwait
outsb
and
ljmp
test
bound
inc
jne
cltd
mov
je
fwait
aam
ficoms
repz
mov
or
and
das
in
mov
xlat
out
mov
pop
mov
movsb
mov
jp
add
lods
ja
fcmove
jb
adc
lahf
aam
mov
jg
sti
sub
add
std
insb
xlat
nop
ficompl
push
int
pop
add
add
inc
movl
xchg
jnp
imulb
lret
mov
push
stos
add
stc
leave
sub
xchg
test
xchg
xorl
std
add
lea
jl
loopne
dec
xchg
mov
fs
in
sub
pop
mov
mov
mov
popa
sbb
repnz
aam
jle
out
mov
mov
out
iret
or
movsb
dec
xchg
xor
mov
xchg
add
push
dec
clc
xchg
xchg
dec
inc
mov
test
dec
iret
cmc
jg
sti
aas
push
add
lds
push
inc
cmp
rol
cwtl
lods
xorl
popf
adc
icebp
mov
mov
sbb
cmp
into
and
push
out
cmp
into
pop
xchg
push
and
xchg
inc
int
xor
ss
ja
inc
cmp
shrb
enter
cmp
out
mov
xor
cli
in
jecxz
xchg
and
subb
inc
mov
adc
sti
mov
ja
sbb
iret
or
push
pop
adc
mov
mov
mov
jnp
pop
rol
stos
addr16
jecxz
push
lods
int
mov
mov
inc
adc
dec
stos
pop
add
ja
icebp
pop
jmp
mov
xchg
rcr
int
in
xor
dec
jl
int
or
jnp
push
mov
cmp
scas
bound
cmp
mov
sbb
dec
or
push
fdivrs
enter
lret
jne
xlat
mov
and
add
mov
push
mov
cs
jp
pop
fldcw
mov
out
inc
mov
lcall
and
or
mov
mov
bound
push
lahf
pop
cmc
sbb
fwait
push
out
inc
sbb
sub
push
xchg
out
pop
xor
mov
and
xlat
mov
sub
jecxz
push
xchg
lods
xor
cwtl
cmpsb
fldl
stc
lahf
inc
in
in
in
mov
sub
std
movsb
inc
insb
lods
cmp
iret
test
test
jle
mov
std
cmpsb
dec
jnp
leave
mov
cmc
jb
rolb
sbbb
mov
dec
cmp
push
cwtl
sti
cmc
mov
sbb
jp
mov
inc
loope
push
shr
loopne
pop
or
stc
push
shrl
cs
shlb
sub
push
lods
mov
subl
mov
cmpb
dec
cmp
xlat
mov
sbb
cmp
mov
iret
xchg
push
jle
pop
pop
xchg
nop
sbb
pop
popf
jnp
ja
inc
jbe
push
cmp
call
ds
or
fmuls
outsb
into
outsb
mov
xchg
outsl
lahf
or
mov
sub
adc
ljmp
outsb
lcall
pushf
pop
jle
cli
test
or
es
insb
test
sbb
xchg
xchg
scas
pop
adc
mov
pop
or
jbe
jle
cmp
dec
mov
ja
fstpt
jg
cmp
pop
daa
jle
pop
pop
pop
out
add
pop
add
ja
add
daa
sbb
sbb
xchg
pop
fcmovnbe
and
xchg
lahf
jg
jg
sbb
jle
outsb
fidivrl
outsb
push
cmp
xchg
incb
mov
out
out
mov
loop
jle
push
mov
pop
inc
mov
addr16
pop
pop
jle
sahf
push
mov
jle
ds
iret
mov
jle
jg
mov
xchg
mov
jle
push
mov
pop
arpl
add
std
lret
sub
xchg
cs
popa
popf
push
mov
push
outsl
push
pop
jl
ja
xchg
cs
pop
jbe
pop
pop
jle
push
mov
bound
add
jle
decl
pop
push
xchg
pop
fwait
xchg
or
push
out
outsb
xchg
push
shrl
mov
push
pop
jbe
push
sbb
xchg
jle,pn
scas
push
jnp,pn
into
lea
jl
daa
orl
mov
jp
jnp
mov
fwait
jp
mov
jl
cmp
push
mov
aas
push
jg
daa
push
into
push
inc
push
cs
dec
push
pop
dec
jp
mov
out
movsl
dec
daa
scas
fwait
push
jp
push
pop
popf
out
lcall
mov
push
fisttps
cmpsl
pop
iret
pop
ficoms
ss
push
fwait
into
jp
mov
pop
mov
push
ja
mov
mov
xor
sbb
xchg
mov
scas
jle
sbb
jg
jg
xlat
push
xchg
inc
pop
xor
inc
inc
call
shl
xlat
loope
iret
add
xlat
int3
ds
std
sbb
lock
lahf
movsb
pop
or
and
idivl
mov
fsts
pop
gs
xchg
out
fimull
inc
adc
mov
incl
lods
aaa
int3
cs
aad
sub
xchg
js
sub
cmp
mov
inc
ficomps
lcall
scas
sti
jecxz
mov
popa
pushl
mov
test
test
fidivrs
shll
sbbb
push
outsb
std
hlt
dec
push
sahf
in
lahf
mov
scas
and
inc
sbb
cmpb
mov
adc
push
loop
mov
sub
clc
mov
mov
dec
imul
mov
inc
push
lcall
cltd
adc
pop
imul
pop
xchg
iret
in
aas
or
xor
pop
aad
add
sbb
inc
loopne
dec
dec
repz
pop
jmp
shl
pop
mov
cs
sbb
dec
or
cmp
push
jno
inc
sti
xchg
arpl
jmp
loope
sbb
gs
inc
or
shll
jbe
jno
lahf
into
movsl
cld
int3
ljmp
sahf
mov
jmp
inc
rolb
cli
pop
stos
or
arpl
pop
or
inc
add
pusha
push
sbb
push
and
mov
sbb
adc
and
cltd
mov
push
mov
push
inc
lcall
daa
pop
xlat
mov
js
aam
cwtl
cld
mov
xlat
dec
outsb
iret
or
jmp
xor
stc
adc
fmulp
mov
add
xor
add
or
sub
js
and
push
mov
adc
cmpsb
js
loopne
xchg
popa
sti
stos
outsl
jns
adc
jno
mov
jg
sub
xlat
push
jb
mov
adc
sub
mov
mov
aaa
addr16
nop
adc
mov
sbb
jbe
shl
loop
repz
ljmp
nop
into
pop
dec
insb
mov
repnz
jo
pop
arpl
repnz
dec
mov
push
aaa
clc
xchg
xchg
addr16
jo
lret
push
out
inc
fcmovnu
push
outsl
insb
cmp
add
mov
lea
adc
fstps
xchg
outsb
int
imul
ljmp
inc
pushf
iret
pop
sbb
adc
out
pop
icebp
fwait
es
mov
adc
and
popf
add
mov
or
adc
or
inc
jnp
leave
fsubrl
test
and
sti
negl
xor
lods
or
sub
push
mov
jb
inc
push
loope
and
lret
bound
mov
addr16
dec
pop
test
xchg
scas
push
pop
and
jge
or
xchg
dec
jb
es
mov
mov
xchg
adc
fwait
or
scas
dec
inc
mov
add
lret
loop
push
jge
pop
pop
lcall
js
nop
dec
cmp
push
push
das
dec
fdivrp
out
inc
jns
testl
xor
stc
cmp
outsl
fiadds
arpl
sbb
je
fcoml
sti
inc
sub
and
sub
sbb
push
sub
adc
xchg
dec
movsl
push
push
iret
loop
xchg
ja
lea
jnp
repz
jno
cmp
sbb
lahf
sub
lods
into
incb
popf
inc
jge
aas
pop
dec
test
xchg
inc
jg
mov
dec
push
and
adc
cltd
jg
or
jb
in
cmp
outsb
add
lods
mov
movsl
xor
mov
pusha
movsl
fs
push
inc
ds
inc
mov
adc
orb
jnp
les
jno
adc
mov
xchg
into
sub
ficoms
cwtl
repnz
jle
adc
cld
push
stc
mov
mov
call
jecxz
or
or
imul
int
mov
lea
xor
hlt
iret
gs
sti
pushf
ljmp
push
jno
subl
lods
cmpb
and
scas
jb
fisttps
sub
loope
xchg
into
lahf
fstpt
hlt
and
test
minps
mov
jecxz
add
ss
subl
cld
test
pop
mov
cwtl
repnz
jmp
or
jge
mov
nop
imul
faddl
mov
dec
addr16
rcrl
jo
xchg
mov
lock
xor
sub
push
jle
js
ret
xor
push
jo
gs
sub
dec
dec
in
stc
mov
inc
xchg
ucomiss
lods
xchg
into
pop
add
popf
dec
and
mov
fcmovnbe
scas
mov
inc
adc
pop
mov
stos
mov
jb
negb
push
sti
pop
icebp
sub
xchg
mov
js
jne
into
xchg
add
icebp
adc
mov
outsl
mov
mov
pop
inc
push
adc
iretw
xlat
repz
mov
cmp
je,pn
sar
mov
dec
lods
outsl
inc
and
dec
ss
imul
pop
push
sahf
fists
pop
or
lods
xlat
push
fidivs
sbb
jno
jmp
movsb
push
dec
adc
push
cmp
inc
pop
jp
add
lahf
data16
bound
mov
stos
dec
jb
inc
mov
std
arpl
test
inc
mov
daa
std
jg
data16
jnp
push
mov
pop
out
adc
push
lock
and
xchg
aas
ret
cwtl
in
mov
xacquire
leave
lock
cli
jno
lods
xchg
fwait
or
filds
subb
push
xchg
mov
les
clc
pop
or
mov
jle
lods
dec
jle
std
or
sub
rcrl
mov
xor
outsb
jne
popw
rcll
inc
xor
js
mov
and
pop
pop
enter
insl
test
jb
int
or
adc
cmp
cli
not
pushf
mov
pop
int
add
mov
jns
shll
or
mul
mov
out
adc
pop
lods
mov
adc
inc
add
cmp
andl
inc
xchg
push
int
ret
popa
jnp
lods
hlt
pop
andl
test
aas
iret
dec
stos
xor
push
sti
jl
fwait
jle
enter
popl
es
jo
lock
pop
pop
cwtl
mov
stc
lods
mov
out
clc
aad
push
sbb
mov
xor
adc
or
das
pop
add
fsubs
push
movsl
push
jle
aam
gs
test
sbb
hlt
adc
add
add
fistl
stc
adc
add
pop
mov
das
pushf
cmpsl
mov
clc
insb
test
fwait
dec
jae,pn
mov
iret
fisubs
cmc
jl
data16
and
sbb
movsb
xchg
pusha
dec
mov
xor
xor
in
data16
inc
fwait
lcall
in
inc
lcall
fidivrl
pop
xchg
aas
shrl
xchg
xor
mov
pmaxub
addr16
mov
iret
inc
mov
mov
test
or
int
jae
movsb
lret
xor
push
popa
add
inc
sub
lea
mov
mov
cltd
jg
adc
add
pop
cwtl
inc
mov
fwait
int
lods
cmpsl
adc
or
outsb
cmc
mov
leave
dec
lods
mov
fs
xlat
mov
packsswb
jecxz
mov
inc
sahf
into
push
aad
ds
arpl
mov
and
jno
push
jg
mov
dec
lcall
add
xor
jge
mov
insl
fistps
mov
cmp
and
pop
insl
orl
dec
add
xlat
jp
jge
inc
int
jle
cmpsl
icebp
mov
mov
and
scas
push
or
lret
test
pop
repz
mov
xchg
std
sbb
mov
sti
test
mov
push
cmpsb
pandn
adc
iret
jle
clc
inc
jo
push
cmp
daa
jp
popf
push
mov
lret
repnz
stc
iret
cmp
mov
xor
fstpt
lahf
sahf
xor
inc
and
mov
insb
lcall
sti
test
mov
xchg
push
or
or
push
jo
ljmp
cli
pop
ja
sub
scas
sbb
push
dec
clc
andb
jg
in
cmpsb
lahf
test
sbb
jb
and
mov
and
fstps
xorb
mov
lfs
pop
mov
dec
push
add
gs
inc
xchg
mov
fldenv
notl
inc
movsb
pop
pop
out
shlb
mov
enter
inc
shrl
xor
das
mov
mov
mov
mov
cmpsl
imulb
cmc
push
push
and
and
pop
sbb
pop
cli
mov
in
call
sub
and
mov
push
js
int
stos
mov
icebp
add
int
xchg
xchg
xlat
sbb
pop
cmp
inc
sub
lahf
sub
ja
testl
fldcw
stos
mov
stos
jns
fisubs
dec
sbb
dec
fcompl
hlt
lods
mov
cmp
out
outsl
adc
rorb
dec
dec
sarl
pop
fwait
xchg
fmulp
rcll
dec
popa
inc
js
inc
xor
int
out
xor
sub
pop
push
outsb
hlt
int
mov
pop
and
iret
fidivl
cwtl
pop
cs
adcb
dec
and
adc
fisubs
sbb
out
cld
xor
imul
sub
hlt
dec
repnz
test
mov
mov
pop
shr
outsb
or
xchg
out
loopne
or
mov
mov
nop
pop
inc
jle
aas
mov
rcrb
divl
iret
add
popf
mov
testl
inc
adc
mov
loope
pop
jge
xlat
mov
or
jo
aad
jo
pop
or
fbld
cmc
sub
addr16
and
jp
bound
xchg
sub
pusha
mov
inc
jmp
fidivs
divl
rcrl
xor
add
mov
addr16
nop
outsb
inc
movsb
push
nop
cmp
js
jmp
insl
sysexit
in
inc
xor
mov
sbb
mov
shll
leave
iret
add
in
popf
repz
and
repz
push
inc
clc
pop
cmp
dec
cmp
sub
out
test
push
xlat
pop
mov
sarb
or
sub
iret
xchg
fcomi
movsl
jmp
mov
fiaddl
in
adcl
insl
xorb
test
pop
push
jp
int
xchg
insb
leave
push
or
lahf
loopne
loop
aas
mov
mov
mov
push
icebp
iret
adc
xchg
popa
test
ret
rorb
xchg
scas
loope,pn
pop
dec
out
into
push
jb
add
ret
mov
add
pop
or
pop
jo
sub
int
cmp
pop
lods
rcl
enter
daa
ret
imul
test
cwtl
push
adc
cmp
scas
out
add
pop
cmp
out
mov
pop
cli
and
jne
inc
add
jae
or
repz
pop
test
sub
mov
lret
pop
inc
push
sti
cwtl
ljmp
mov
xchg
mov
or
dec
sbb
cli
lds
mov
cmpsb
adcb
int
dec
popa
out
xchg
mov
dec
leave
pop
mov
rorl
shll
addr16
cmp
jbe
adc
inc
dec
rcl
mov
into
jp
pusha
icebp
or
movsl
mov
cmc
loopne
test
jmp
popf
lcall
xlat
je
sub
add
adc
mov
aad
sub
sub
std
jae
xchg
inc
rcrb
test
into
ret
imul
jne
pop
sbb
push
push
out
sti
out
fcomip
jp
gs
add
mov
aam
jae
dec
leave
or
shlb
into
jns
test
push
mov
pop
into
pop
call
ljmp
mov
push
jmp
int
arpl
adc
or
sbbl
xchg
fcomp
jb
fistps
out
push
lahf
sub
adc
xchg
push
sbb
mov
popl
mov
mov
or
xchg
insb
xchg
orb
js
ja
pop
xlat
sbb
shlb
in
sub
cli
fwait
sbbb
pop
aaa
scas
mov
push
mov
xchg
stos
cs
mov
mov
sbb
in
push
xchg
mov
and
pop
jle
or
sbb
inc
pop
and
sbb
jp
int
mov
mov
andb
sbb
jne
pop
adc
fisttpll
jb
jno
add
jle
repz
ds
int
push
pushf
inc
inc
arpl
roll
xchg
or
push
mov
jl
les
or
jnp
xchg
pop
or
pop
mov
mov
pop
shlb
dec
xchg
into
bound
push
xchg
cli
xorl
jno
xchg
xor
addr16
je
int
rcrl
mov
fwait
lcall
bndldx
hlt
jno
push
and
clc
iret
rolb
or
dec
cmp
or
jle
add
lcall
mov
inc
sti
mov
cld
fs
rcll
mov
jb
mov
fwait
inc
add
in
movsl
or
inc
pop
hlt
jl
xchg
push
push
jo
test
pop
repz
jno
jno
xor
dec
xlat
cli
unpckhps
jp
jle
inc
testb
and
sbb
lea
mov
fisubrl
arpl
jbe
mov
and
push
jecxz
mov
fnstcw
aam
sar
out
lea
sarl
and
mov
mov
jecxz
push
add
das
hlt
sarb
xchg
imul
dec
cmc
jle
pop
iret
push
push
pop
adc
add
and
pop
add
daa
xor
xchg
aas
popf
mov
pop
dec
jo
mov
rcll
cmp
mov
jle
pop
xchg
lahf
in
lret
clc
sysexit
adc
inc
mov
add
jle,pt
xchg
dec
cli
lea
mov
out
adcl
sahf
pushf
out
into
mov
mov
ficoml
shr
push
out
xor
xchg
jge
cmp
push
mov
into
jns
test
loopne
or
dec
hlt
negl
sub
mov
sahf
fmulp
jb
pop
dec
mov
mov
lret
mov
scas
mov
aad
lock
add
mov
jp
xor
into
mov
sbb
mov
inc
jg
mov
jno
jnp
dec
in
pop
xchg
outsl
ljmp
addb
popa
mov
ljmp
in
mov
sub
or
jno
sbb
divl
cmp
fwait
pop
cmp
or
cmp
in
hlt
sti
pop
mov
or
ja
lahf
adc
or
ss
ret
fisubrs
sbb
hlt
push
sub
sub
xor
mov
pop
inc
jmp
push
out
popf
sub
sti
or
mov
repz
lret
mov
scas
push
mov
xor
leave
inc
push
push
dec
dec
add
aad
lret
fidivl
sbb
jo
dec
mov
popf
fcomi
add
or
imul
mov
dec
lds
jnp
les
sti
or
scas
push
in
loope
jp
js
pushf
pop
mov
in
inc
push
xor
push
test
ficompl
add
mov
jo,pt
mov
adc
pop
leave
clc
xchg
gs
lock
push
stos
add
sbb
int
xor
call
or
add
push
pop
ret
and
pop
xor
aad
lea
ficoml
data16
bound
xor
jecxz
push
aad
jne
into
dec
mov
dec
or
ss
icebp
popf
mov
mov
xchg
divl
iret
mov
xchg
cwtl
data16
daa
inc
ljmp
sub
and
or
inc
test
out
push
mov
sarb
lock
pop
cs
cmp
cmp
sub
int
stos
icebp
movsb
inc
addr16
jne
fstps
mov
fsubl
inc
mov
in
loop
add
and
jp
outsl
and
pop
mov
divl
and
pop
inc
gs
bound
mov
fwait
push
push
mov
loop
adcb
adc
mov
push
push
push
xor
xchg
xor
add
xchg
into
mov
inc
dec
ljmp
lret
ja
ret
xchg
inc
aaa
pop
pop
jb
pop
push
cmp
or
or
sbb
int
aam
pop
shll
pop
mov
push
cmp
cmp
fldcw
mov
lods
dec
pop
xchg
inc
inc
xchg
xchg
insl
jg
pop
lahf
aam
lcall
xchg
cmp
aas
ja
mov
mov
sbb
sub
dec
cmc
inc
xor
and
cltd
stc
sub
add
call
or
sahf
popf
add
aaa
fsubs
mov
cmp
xchg
cmp
shlb
call
xor
cwtl
add
stos
ss
xor
push
iret
sbb
xchg
sti
mov
daa
cmpsb
cltd
int
xchg
push
repnz
push
cs
xchg
loope
sarb
jns
movsl
ljmp
mov
pop
scas
sub
gs
sub
mov
xor
sar
addr16
stc
in
dec
scas
adc
xchg
xchg
iret
xchg
out
jp
sti
mov
jmp
adc
jle
popa
pop
lea
add
mov
xchg
data16
cwtl
stos
fisubl
loope
push
sub
add
aaa
dec
mov
pop
cli
pop
push
mov
out
mov
fisubrs
jo
int
pop
mov
xchg
in
inc
dec
data16
mov
int
xchg
mov
sbb
negb
xlat
insl
scas
push
adc
mov
stos
add
add
and
mov
jge
ret
sbb
lods
sub
fidivs
push
pop
dec
pop
add
ret
or
inc
lret
ror
xor
inc
push
ljmp
mov
fucomip
in
clc
lret
lret
lcall
stc
push
fs
int
loope
sbb
std
int3
sub
outsb
mov
ja
xchg
or
xchg
dec
mov
fsts
popf
sub
inc
add
jns
pop
popf
add
adc
xchg
es
pop
sahf
iret
mulb
dec
pop
loope
ret
jecxz
pop
in
pop
daa
dec
push
dec
into
mov
adc
shll
rcrb
jns
and
lock
aad
aaa
pusha
sti
push
and
push
lret
inc
jg
jno
mov
es
cmpsb
pop
xor
loopne
aad
fucomi
mov
sub
icebp
outsl
pop
int
xor
lea
jne
push
pop
je
js
out
push
cs
roll
inc
xor
pop
fcoms
leave
shll
insb
decl
mov
outsb
jp
mov
ficomps
pop
xchg
cld
push
ret
je
sbb
jecxz
daa
push
mov
push
mov
pop
fidivrs
inc
sub
xor
sahf
push
std
adc
xor
pop
push
and
lret
inc
xlat
es
orl
leave
into
push
les
inc
xchg
lahf
lahf
dec
pop
inc
xchg
fbld
scas
or
pop
xchg
fstpt
sbb
or
push
jmp
jae
aaa
xlat
mov
loop
xchg
jb
ret
and
addr16
test
in
into
dec
out
and
xchg
push
pop
scas
and
mov
mov
xchg
push
in
stos
mov
ds
filds
lcall
call
lods
cld
scas
arpl
cmp
mov
sbb
repnz
repz
dec
jp
addr16
iret
cmp
pcmpgtb
sub
mov
jle
lret
fs
ret
mov
push
test
push
movsb
inc
outsl
sub
leave
aad
mov
popa
jp
popf
mov
iret
inc
fcmovnbe
pop
jae
jo
punpcklwd
out
aam
nop
sub
neg
dec
in
stos
jb
and
repnz
inc
dec
shrb
int3
xchg
andps
stos
mov
pop
inc
stc
iret
jmp
ljmp
mov
inc
loop
sub
jne
ret
push
iret
add
popf
test
stos
xlat
mov
and
popl
and
outsl
sbb
sbb
cmc
nop
adc
mov
insb
inc
mov
adc
iret
mov
sbb
cmpsl
push
mov
add
test
inc
divb
int3
push
test
cmpsb
sbb
test
add
int
jnp
add
adc
ror
push
fbstp
jmp
popf
loope
xchg
fidivs
pop
int
repz
xchg
mov
dec
xor
sbb
stos
xchg
xchg
jmp
js
out
and
mov
jo
dec
jnp
lods
inc
inc
jecxz
push
sbb
add
addr16
je
inc
jg
hlt
in
scas
inc
clc
sbb
and
ljmp
sub
jno
cmpsl
adc
pop
mov
xor
xchg
push
sti
or
push
mov
jb
aam
cld
lods
cmp
imul
flds
cmp
push
lods
scas
mov
mov
cs
dec
push
cwtl
flds
adcb
and
gs
loope
jecxz
aam
cli
add
dec
pop
test
movsb
push
fidivl
lods
aas
push
lcall
loopne
in
mov
push
mov
mov
cmc
inc
pop
and
movsb
push
sbb
fistl
adc
arpl
mov
dec
xlat
pop
das
mov
inc
mov
js
lods
lahf
movsb
adc
dec
pushf
lcall
ss
pushf
inc
cltd
xchg
mov
dec
pop
push
cmpsb
sahf
cs
mov
xchg
addb
fisubs
jne
in
mov
push
les
push
pop
xor
iret
mov
loop
pop
aam
sbb
loop
push
sbbb
lcall
shlb
xlat
xchg
sti
add
jno
daa
scas
loope
ds
dec
cs
mov
imul
lret
adc
int3
data16
stos
lods
push
sbb
inc
decb
imul
fwait
stos
or
cmp
mov
lds
ss
mov
add
adc
popf
aad
push
and
out
adc
jge
push
fidivs
mov
inc
sbbb
jbe
or
and
rcr
inc
in
sbb
or
xchg
jg
jnp
divb
mov
sub
jnp
ret
mov
mov
or
and
pop
cmp
data16
push
pop
mov
lods
push
jp
mov
jle
out
or
test
jge
mov
scas
cmpsl
xchg
mov
std
xchg
pop
lret
pop
dec
xchg
pushf
mov
adc
cmp
decb
cmp
rclb
or
fimuls
inc
adc
jecxz
in
mov
pop
into
aam
inc
aad
std
push
pop
sbb
out
pop
sbb
loope
xchg
int
ret
repz
insl
add
sti
hlt
mov
xchg
aad
cmp
sub
lahf
jbe
adc
loop
aad
dec
xor
xchg
add
cli
inc
mov
adc
push
fnstenv
mov
clc
or
icebp
test
mov
daa
fisubs
inc
shll
dec
popf
mov
dec
push
iret
faddp
adc
or
stc
not
inc
into
in
aad
lods
popf
mov
scas
in
scas
cmp
jnp
xchg
in
xor
or
fwait
jp
nop
inc
or
mov
sbb
imul
xchg
scas
cmpb
sbb
ds
sbb
cmp
push
shr
push
xchg
and
addr16
aam
in
inc
xlat
pop
cmp
xchg
fldt
xchg
adc
cwtl
cltd
cld
xchg
sub
pop
push
sbb
cmpsl
cmp
cld
inc
clc
add
xor
iret
cltd
jle
cld
js
into
icebp
pop
insl
ljmp
mov
xchg
aaa
mov
std
daa
pop
imulb
cmp
push
hlt
xorb
sub
inc
xor
xlat
cwtl
cwtl
repz
mov
nop
lret
sti
push
stos
push
and
jno
out
clc
rorl
fwait
dec
inc
in
jns
or
sbb
dec
lcall
loopne
fisttps
popf
or
sti
mov
mov
sub
clc
int
es
jmp
push
mov
outsl
into
stc
mov
fidivrl
arpl
jns
popl
sbb
or
push
mov
inc
mov
adc
dec
jp
test
or
fidivl
or
dec
xchg
fidivrl
sbb
fwait
jl
cmp
xlat
lret
pop
xchg
cld
into
cmp
jg
enter
das
das
jb
add
rcl
pop
inc
into
fidivrs
sub
jp
sbb
fldt
int
das
jge
aam
bswap
jmp
add
sub
pop
clc
outsl
rcl
adc
sbb
into
or
lods
das
pop
sbb
mov
iret
inc
ds
mov
popf
push
push
add
jp
pop
xchg
push
gs
mov
mov
xchg
out
mov
fbstp
pushl
push
loop
or
incb
leave
lcall
sbb
outsl
xor
dec
xchg
andb
lcall
shlb
pslld
mov
subb
out
pop
jle
fisttpl
mov
mov
out
dec
xchg
ds
les
movsl
lcall
pop
out
jecxz
adc
fmulp
ljmp
sub
mov
xor
and
mov
pop
outsb
pop
pop
test
scas
lods
push
add
mov
cmpsb
inc
lea
xchg
lock
mov
and
loop
add
jle
dec
lcall
lea
mov
jl
xchg
dec
add
loope
in
sub
imul
js
xor
adc
sti
inc
jns
stos
xchg
mov
pop
push
push
leave
sahf
int
inc
pop
insb
cmp
mov
or
inc
xor
test
add
dec
sahf
push
ja
and
adc
fdivrl
mov
pusha
out
adc
insl
pop
dec
fmuls
push
pop
fsubr
push
out
mov
sub
scas
orb
xchg
dec
pop
out
decb
pop
xchg
push
mulb
mov
or
cmp
movsl
dec
es
int3
xchg
jle
xor
ds
ljmp
sbb
stos
dec
fidivs
cmp
out
orl
es
jle
pop
jns
jle
cmpsl
dec
scas
push
aam
mov
pop
jbe
pop
rorb
push
lahf
cmp
jle
mov
mov
pop
testb
pop
popf
xchg
imul
xchg
cmp
outsb
out
bound
pop
pop
dec
mov
mov
out
daa
sbb
mov
mov
or
mov
mov
add
outsb
mov
or
scas
fs
cmp
ja
xchg
xlat
decl
and
ja
push
cmpsl
decb
inc
fstps
outsb
cld
das
push
mov
xchg
pop
lea
xchg
push
aaa
push
ds
push
scas
xlat
insl
data16
jbe
push
push
es
pop
sbb
dec
data16
xor
sbb
xchg
outsb
popl
jp
mov
mov
outsb
push
xchg
pop
jbe
fists
out
out
out
lahf
addr16
dec
mov
mov
fidivrs
mov
jg
push
push
xchg
mov
dec
daa
push
aaa
cli
jp
mov
pop
push
push
pop
mov
scas
push
mov
push
push
jg
jns
insb
xor
xchg
sbb
lcall
pop
into
xchg
pop
dec
addr16
jle
pop
dec
xchg
cmpsb
pop
push
cli
ja,pn
jnp
ds
addr16
xchg
sbb
sbb
pop
sysret
dec
xchg
pop
push
push
mov
inc
dec
sub
fistps
iret
push
mov
pusha
es
push
movd
push
testl
and
dec
ljmp
and
xorb
jb
loopne
cwtl
cmpsl
and
xchg
jno
cld
or
insl
sbb
cwtl
std
fsubrl
adc
bound
int
xchg
sbb
cmp
mov
fstl
div
sub
push
xor
cli
into
jno
sbbl
xchg
pop
ss
sbb
int
out
sti
xorb
daa
inc
add
pop
inc
mov
push
push
jno
ds
mov
mov
fiaddl
mov
rolb
mov
xor
fcomps
fsubrs
or
xorb
loop
jns
inc
or
shrl
movsl
data16
xchg
pop
ljmp
int
mov
lret
int
xchg
lcall
es
mov
sbb
push
fwait
pop
fimuls
push
scas
addr16
in
sub
int
mov
dec
out
js
push
inc
repnz
in
lds
jmp
add
addr16
outsl
stos
xchg
mov
and
test
push
stos
adc
mov
jmp
mov
pop
jecxz
jle
lret
cmp
dec
loopne
data16
or
out
cmpsl
sub
and
loop
mov
ds
cmp
sbb
scas
cmp
cltd
lods
leave
pop
mov
push
mov
dec
pop
inc
lods
inc
fists
cwtl
in
dec
jns
icebp
inc
mov
add
inc
out
sbb
cmp
lods
sbb
ljmp
js
add
inc
movsb
aas
adc
loope
clc
xchg
inc
jb
popf
icebp
fs
jge
loopne
out
rorb
hlt
shrl
dec
shlb
xchg
sbb
and
lods
push
je
and
cwtl
mov
cwtl
push
test
adc
int
fs
lcall
in
repz
jnp
inc
sahf
sbb
or
dec
sbb
dec
std
and
xchg
and
adc
cli
cltd
dec
cmc
jl
mov
and
push
clc
sbb
stos
push
push
cmp
paddsb
nop
lcall
mov
inc
fists
pop
aas
push
lcall
popf
and
jle
cld
movsl
pop
jb
int
push
xchg
stc
iret
fistps
add
sbb
out
iret
or
xchg
sahf
popf
movsb
es
scas
fstpt
pushl
ss
xor
sbb
dec
rol
and
xchg
jae
aad
loop,pn
and
pop
into
push
jp
movsl
gs
loop
imul
mov
sbb
movsb
cmp
daa
and
pop
mov
inc
fstl
stos
sub
dec
or
popf
push
sub
nop
cli
adc
xchg
dec
lahf
sahf
negl
mov
scas
pop
loop
inc
imul
outsl
scas
int
mov
mov
sub
mov
rcr
ja
xor
out
mov
daa
push
arpl
clc
mov
xchg
popa
and
sbb
out
sub
push
sbb
sbb
fildll
xor
push
push
loopne
iret
mov
jnp
pop
add
pop
jb
lret
mov
ss
dec
mov
xchg
pusha
dec
rcrb
or
jmp
sbb
rol
xchg
stos
mov
shll
jae
sbb
daa
sbb
push
or
mov
push
and
dec
ja
lcall
or
outsl
sarb
push
cmp
cli
dec
xchg
xchg
repnz
rcrl
or
daa
cmpsl
loope
scas
dec
jge
test
mov
adc
inc
lea
cmc
imul
pop
int
jnp
cmpsl
sub
js
jl
pop
cmp
into
push
hlt
pop
popf
dec
std
lock
lods
mov
stos
test
es
adc
adc
mov
insb
push
xchg
cltd
and
arpl
mov
or
sub
into
and
jbe
add
fcmovnb
cmp
adc
int
push
inc
repnz
loop
lods
and
jo
cwtl
shr
call
inc
hlt
pop
ja
loopne
pop
inc
loop
push
in
xchg
pop
lods
pop
sbb
xor
jne
or
sbb
sbb
int
adc
iret
push
sbb
es
jge
fwait
pushf
push
call
lock
in
dec
push
rcrb
popa
jg
push
int
fimuls
hlt
rcrl
dec
push
mov
int
gs
push
lea
push
push
inc
lea
movsb
gs
ss
mov
push
rcrb
push
insb
in
lock
mov
dec
loop
jl
mov
cmp
mov
sub
mov
lods
dec
scas
push
scas
push
inc
mov
lds
imul
dec
das
shlb
insl
sbb
cld
add
jle
dec
add
jl
data16
push
in
stos
popa
jo
fcmovnbe
push
pop
stos
pop
ljmp
dec
adc
iret
cmpsl
push
lcall
xchg
loope
out
pop
add
fcompl
inc
mov
add
or
push
cmp
out
test
push
xor
mov
rcl
push
js
add
sbb
mov
and
sub
fwait
pushf
push
es
jmp
ljmp
int
repz
cwtl
into
mov
ja
in
push
call
pop
fiaddl
inc
fiadds
fs
iret
sub
notl
sti
lret
insb
lahf
add
or
xchg
or
lcall
or
cmp
add
lods
or
push
push
sbb
mov
loopne
ss
idivl
ds
nop
push
stos
pop
or
out
sbb
iret
lock
mov
cmp
aas
mov
movsb
cmp
addr16
repz
outsb
neg
or
popa
in
sahf
into
lcall
jg
loope
sbb
xchg
fisubs
jnp
or
movsl
loopnew
aaa
cld
pushl
sbb
mov
lds
pop
insb
sbb
aas
pop
sbb
mov
pop
cwtl
pop
cli
cmp
fsts
sub
call
sbb
inc
leave
jp
xor
push
cld
cs
fiaddl
in
popf
int3
jno
adcb
ret
js
and
pop
gs
call
xchg
mov
fwait
and
pop
xchg
dec
mov
jns
dec
adcb
out
sbb
imul
xchg
mov
or
cwtl
mov
sbb
pop
or
cwtl
int
leave
and
push
bound
or
in
sbb
cmpsb
pushf
ret
pop
out
xchg
into
push
and
mov
enter
xchg
inc
pushf
mov
sti
mov
popf
ljmp
movb
dec
jne
jns
int
add
data16
rolb
ss
xchg
lret
loop
jno
dec
in
xchg
sbb
pop
movsl
dec
xor
inc
xchg
subl
dec
push
and
dec
cmp
cld
repnz
adc
inc
mov
dec
mov
mov
enter
divl
jl
test
lret
incl
mov
xor
inc
mov
bound
mov
and
xor
xchg
fwait
inc
add
xchg
into
mov
lock
push
mov
pop
xchg
sahf
mov
in
add
jno
pop
inc
pop
xor
sahf
flds
test
outsl
lock
mov
repnz
int
xor
fimuls
cmpsb
jno
push
movsl
call
sti
ret
and
sub
push
dec
idivl
mov
or
jecxz
sbb
scas
test
scas
cwtl
cmpsl
push
pop
adc
lea
lock
iret
add
mov
ss
inc
push
fwait
mov
add
xor
repnz
test
aad
lcall
outsb
arpl
pop
push
jg
lcall
loop
push
aam
scas
stos
mov
sbb
iret
push
push
imull
cld
push
addr16
mov
sbb
mov
add
pop
js
mov
mov
lcall
or
sbb
into
and
push
cmc
cmc
jbe
inc
out
xchg
aaa
inc
add
out
adc
fldt
das
jg
bnd
lods
mov
fisubrl
pop
mov
outsl
push
fisubrs
xchg
into
lods
dec
add
xchg
mov
arpl
popa
jo
cmp
add
xor
sahf
lods
dec
outsl
push
fldt
jmp
out
jle
xchg
xor
jnp
gs
and
and
mov
mov
scas
test
popf
rcrl
sub
call
iret
out
repz
xchg
mov
in
scas
lods
scas
call
ljmp
imul
stc
mov
sti
fsts
int3
push
add
je
outsb
popf
nop
pop
lods
lcall
or
mov
lea
lock
das
pop
ljmp
add
sbb
iret
mov
insl
inc
rorb
popa
dec
leave
outsl
lock
mov
mov
jmp
mov
dec
std
lods
mov
out
icebp
mov
cli
cmc
sahf
rcll
jno
lock
test
sti
data16
sbb
in
gs
jge
add
jle
stos
fs
imul
daa
cmc
jp
mov
xchg
stos
cmp
pop
jecxz
call
push
lods
lods
and
push
inc
push
pop
fwait
bound
mov
mov
cmp
cltd
dec
mov
es
pop
inc
out
scas
jp
mov
adcl
dec
mov
lods
mov
lock
mov
enter
jmp
aaa
test
pop
repz
push
movsl
scas
test
fsubrl
ss
mov
shrb
int
repz
and
xor
incl
shrb
cmp
repz
fisttps
mov
pop
pop
add
lods
xor
sbb
ret
inc
outsb
aas
shrb
mov
inc
mov
cld
add
mov
fmul
ja
or
add
test
iret
ret
push
cmp
push
mov
and
shlb
stc
cmpsl
lret
sub
sbb
shll
jne
adc
mov
or
lret
inc
lods
mov
add
dec
add
jno
outsb
push
loop
outsl
cld
test
adc
scas
popf
mov
jno
add
mov
push
gs
push
je
cmp
jb
fimull
xchg
into
or
mov
push
lcall
loop
pop
aam
fadd
and
xchg
jno
fsubs
scas
pop
sbb
bound
out
pop
mov
hlt
jp
inc
int
loop
cmp
push
test
cs
cmpsb
fcomps
outsb
xchg
out
ficomps
inc
jp
cli
out
sbb
lcall
or
stos
int3
dec
cli
xchg
cmp
fs
cmc
pop
pop
pop
add
push
cwtl
xor
cld
hlt
mov
bound
mov
push
into
or
jnp
lock
lods
scas
insl
push
inc
lcall
sbb
popf
pop
jno
pop
mov
mov
ja
orb
inc
shrb
std
lea
imul
fldenv
fiadds
xchg
addb
fwait
leave
mov
fdivrp
push
lahf
cld
sbb
inc
repz
xchg
fimuls
xor
je
pop
inc
movsb
cmpsl
fidivl
dec
mov
mov
test
cmp
push
cli
pop
or
cld
lea
pushf
iret
hlt
sbb
pop
js
lea
jns
cmp
push
jmp
dec
pop
and
mov
pop
mov
push
cs
std
test
inc
leave
mov
push
pop
mov
cmpsb
out
cld
or
cmp
push
mov
loop
jbe
sub
mov
pop
xchg
or
mov
mov
pop
push
xor
icebp
pop
and
leave
sub
test
xlat
jmp
pop
test
or
pop
loop
push
sar
pop
push
xor
fs
cli
and
add
js
fmull
fbld
sbb
mov
aad
or
jle
jmp
in
sbb
push
cltd
mov
in
fmuls
pop
aad
sub
add
mov
xchg
shrb
or
js
mov
push
les
out
frstor
xchg
fldl
scas
push
lcall
out
sbb
into
in
js
add
leave
nop
mov
gs
int3
ja
add
mov
enter
xchg
into
jbe
aaa
dec
jl
ds
push
xor
icebp
lods
pop
test
sbb
iret
push
sub
out
sub
xchg
popf
add
mov
inc
movd
into
dec
roll
mov
mov
dec
mov
ds
lock
stos
pusha
xchg
or
sub
inc
jmp
cltd
push
pop
in
jbe
push
scas
cmc
jno
cli
movl
sahf
or
cmp
vphaddudq
lds
leave
dec
iret
xchg
or
pop
jle
into
loopne
ja
ss
loope
rcl
dec
push
push
or
sbb
mov
mov
sub
ror
pushf
push
aam
push
in
ss
negb
das
sahf
dec
repz
jnp
ret
fnstenv
sub
call
ss
fcmovbe
cmp
add
inc
repnz
xor
and
jno
jne
and
xchg
movsb
int
lods
stos
push
cld
je
cmp
cld
xchg
sub
cmpsl
push
and
fidivrl
mov
into
xchg
les
stos
dec
orl
push
push
repnz
outsl
stos
mov
and
push
out
xchg
gs
shl
and
pop
xchg
mov
and
inc
xchg
push
addr16
mov
js
pop
pop
fwait
jo
push
and
popf
fisubs
jle
cmp
and
out
lahf
sbb
idivl
cmp
jno
mov
mov
push
rol
movb
js
mov
and
and
pop
outsb
iret
pop
addr16
cwtl
fmulp
sub
out
add
dec
sub
or
mov
and
jmp
aaa
and
push
mov
scas
fwait
mov
inc
mov
repnz
add
push
xchg
add
sbb
imul
mov
sarb
add
sub
dec
sub
mov
mov
inc
mov
jb
push
imul
sub
or
sbb
xlat
out
lcall
sbb
cmpsb
lahf
xchg
clc
test
popf
push
or
lret
pop
cmp
dec
push
movsl
sti
mov
jno
data16
sub
pop
mov
mov
mov
inc
push
push
mov
loopne
aas
addr16
js
jmp
sub
cltd
jnp
fxch
pop
inc
enter
adc
cmp
cmp
addr16
lret
pop
xchg
jbe
addr16
push
popf
jle
mov
scas
loope
mov
mov
into
sti
push
cmpsl
cmp
jno
mov
lahf
movsb
jecxz
sbbl
jnp
mov
cmp
outsb
cli
out
jo
cmp
lock
leave
test
pop
arpl
or
mov
sti
sbb
xchg
test
movsl
pop
xchg
inc
iret
mov
scas
mov
xor
xchg
inc
fimuls
xchg
pusha
sbb
mov
shll
divl
sahf
cmp
jge
fbld
jnp
pop
jmp
loope
xchg
imul
mov
stos
jle
xor
push
inc
out
push
into
xchg
fstl
sub
sub
out
stc
ds
push
mov
cmpsb
or
lahf
mov
xchg
into
ret
mov
fdivrl
cmpsl
lahf
mov
cmpsl
or
lea
add
stos
jo
dec
movsb
mov
add
js
mov
lahf
sub
xchg
test
xchg
pop
xchg
leave
mov
xor
mov
mov
les
loop
ja
ret
andb
movsl
xchg
js
sbb
loopne
xchg
jle
xchg
xchg
mov
neg
ja
bound
lret
jne
mov
bound
encls
inc
push
in
sub
add
pop
aas
loope
adcb
mull
scas
push
sub
and
fnstsw
out
jge
pop
in
push
pop
in
or
push
imul
push
and
inc
cmp
mov
rcl
inc
xchg
mov
mov
mov
shrl
sbb
mov
mov
jp
icebp
push
daa
jge
pop
sub
push
mov
sti
dec
cmp
int
push
fimuls
scas
notl
shl
loope
shlb
test
mov
or
leave
lret
pop
outsl
nop
mov
cli
scas
hlt
lock
xchg
or
sub
stc
mov
int
pop
mov
or
xchg
out
mov
fisubs
pop
mov
xor
loope
mov
into
xchg
popf
jecxz
push
leave
fldt
adc
lcall
into
lods
push
dec
gs
add
push
mov
dec
xchg
iret
jb
mov
lea
mov
sahf
fwait
fs
or
stos
mov
or
lret
repnz
adc
or
movsb
add
mov
outsl
xchg
repnz
jb
pop
xchg
mov
int
cmp
dec
xor
arpl
sbb
cmp
jnp
sti
stos
test
fnstsw
mov
scas
cli
test
dec
push
cmpsl
iret
and
cmp
dec
dec
lahf
in
ljmp
call
push
add
int
pop
inc
push
sbb
test
das
pop
xor
enter
inc
dec
mov
jns
iret
jg
mov
mov
repz
jge
sbb
int
out
xchg
popf
add
lock
dec
mov
jbe
xor
loop
sbb
jae
dec
jmp
push
pop
push
int
ret
dec
out
inc
mov
mov
add
push
test
movsl
jp
daa
or
xchg
subb
movsb
nop
xor
sbb
repnz
iret
adc
ja
outsb
sbb
dec
pop
add
gs
inc
in
mov
cmpsb
mov
ds
and
sbb
mov
lahf
lods
mov
je
cmp
outsl
mov
lret
iret
stos
or
repnz
orb
add
push
pop
xchg
shrl
pop
mov
loopne
xlat
jbe
adc
and
insb
rcrb
mov
mov
sub
pop
jp
mov
fs
inc
test
fisttps
xor
dec
scas
push
fucomip
lods
push
fistps
lret
pushf
sub
and
int
pop
dec
dec
mov
pop
mov
mov
sub
fsubp
push
pop
and
pushf
xor
lods
lahf
test
inc
jno
mov
or
ret
ljmp
bound
fs
sar
mov
popf
sbb
icebp
xchg
sub
pop
sti
lcall
sbb
loop
iret
mov
loope
inc
push
jo
fs
adc
lahf
movsb
xchg
das
sti
jg
scas
js
pop
add
or
mov
sahf
leave
test
mov
fstpt
cmc
jb
xchg
or
pusha
in
xor
scas
mov
adc
dec
not
sbb
jo
movsb
clc
leave
dec
ja
xchg
sbb
inc
std
imul
inc
mov
es
jne
dec
shlb
pop
mov
xchg
fldt
rorl
xor
es
xchg
mov
and
nop
and
pop
in
iret
sub
or
jge
pop
fistps
ljmp
mov
pop
mov
std
push
inc
xchg
or
addb
fsubr
fdivrl
cli
adc
xchg
or
pop
mov
icebp
sub
xchg
in
push
xor
mov
addr16
adc
mov
push
cmpsl
and
push
lods
jo
es
sbb
sbb
xchg
lock
jge
adc
repnz
xchg
push
mov
repz
push
lea
mov
fmulp
test
mov
jmp
pop
sbb
addr16
cwtl
arpl
int
pop
stos
iret
dec
mov
mov
xchg
inc
cmp
cmp
scas
xchg
pop
dec
mov
xor
rcrl
pop
outsb
mov
cwtl
out
adc
mov
cltd
outsb
mov
jmp
push
loope,pt
cmpsl
or
imul
insl
ret
jnp
ret
xchg
pop
xor
pop
and
out
xchg
fidivs
cs
push
xchg
outsb
adc
je
fiaddl
jbe
rcrb
push
je
xchg
cld
dec
xchg
test
jg
add
loopne
lahf
push
sbb
std
mov
lahf
and
jle
ja
inc
setnp
xchg
dec
or
shl
jl
push
call
pop
xor
sbb
jge
incl
mov
pop
lods
jae
push
jg
imulb
in
testl
pop
xchg
inc
mov
pop
cld
push
in
jbe,pn
cmp
xchg
pop
or
pop
out
pop
mov
cmp
popf
dec
mov
pop
xchg
out
jnp
mov
cs
mov
daa
add
insl
scas
sbb
and
daa
pop
xchg
push
sbb
dec
dec
add
push
inc
pop
daa
jle
xor
xchg
pop
jns
dec
push
or
dec
ficomps
sbb
xchg
xchg
cmc
pop
insl
cmpsb
lcall
aaa
sbb
jbe
pop
outsb
imul
jle
xlat
cmp
adc
dec
cld
outsb
mov
cs
ss
push
push
jle
testb
ds
sbb
xchg
push
push
add
iret
push
dec
sbb
push
push
push
push
jl
jg
out
cli
outsl
push
xchg
pop
sbb
mov
jle
mov
mov
pmaxub
push
push
jle
jg
into
xchg
ja
pop
cld
pop
mov
pop
out
dec
ja
push
sti
aas
cmpsl
jle
imul
sbb
jle
mov
adc
cld
outsb
push
mov
inc
add
imul
outsb
mov
or
imulb
cmp
jns
ss
aam
jle
pop
jg
mov
sti
jecxz
sbb
stos
ja
sbb
iret
and
mov
aam
sub
xor
dec
mov
mull
xlat
pop
imulb
pop
xor
stc
int
incl
xchg
jnp
test
mov
sti
adc
mov
ds
lock
stc
fnsave
mov
scas
pop
xchg
lret
mov
daa
ljmp
mov
int3
enter
and
rclb
leave
sub
add
fs
mov
xlat
pop
ds
and
popf
lret
movsb
stos
cmp
push
add
add
inc
xchg
loopne
mov
fwait
jb
lods
dec
xchg
mov
iret
add
inc
repnz
mov
pop
ja
shll
mov
dec
popf
lods
and
popa
popa
mov
inc
stc
fstps
cmpsb
mov
xchg
mov
int
lcall
fldenv
pop
sbb
fwait
lock
and
lea
movsl
cpuid
addr16
js
mov
scas
mov
xchg
xchg
xchg
popf
stos
aad
jg
push
pop
fildll
lods
mov
lods
loope
inc
pop
jle
iret
adc
jns
movsb
xchg
in
jne
ficoms
push
lea
mov
inc
outsl
ret
add
int
ljmp
xchg
mov
adc
pushf
scas
lock
lret
in
repz
cmpsb
ret
mov
pushf
xchg
xor
adc
push
and
mov
pop
push
int
sbb
nop
cli
cmp
idiv
sbb
lock
dec
push
push
mov
arpl
mov
out
fbstp
int
push
lahf
sti
lods
xor
mov
cmp
inc
jl
subl
xlat
inc
imul
sub
or
hlt
mov
fimull
cmp
sub
jb
lea
add
pop
mov
shl
push
xor
mov
jp
jl
mov
lods
or
lret
hlt
ljmp
mov
adc
pop
mov
push
or
pop
dec
iret
xor
adc
int
sahf
sbb
ljmp
inc
xchg
adc
fldt
mov
cld
hlt
or
push
dec
sarl
jb
cmpsl
xlat
into
out
cltd
cmpsl
pop
inc
cmp
jle
stos
dec
pextrw
xchg
pop
jp
xor
sub
push
hlt
lahf
cmpsb
ljmp
fwait
xor
daa
fdivp
push
and
rcll
push
mov
or
outsl
jo
into
xchg
pusha
mov
enter
fwait
dec
out
je
jecxz
or
sub
xor
inc
aas
ss
jnp
inc
pusha
ljmp
and
rorb
xchg
iret
sub
jp
lcall
stc
jle
movl
mov
push
jecxz
insb
mov
into
mov
stc
nop
sub
test
sub
loope
mov
pop
dec
fstl
dec
movsl
push
mov
dec
mov
mov
lret
test
iret
outsl
mov
into
xor
xor
inc
fxch
adc
push
imul
movsb
outsb
jp
add
sbb
iret
or
inc
stc
dec
ljmp
bound
in
cli
nop
insb
lods
push
iret
jo
jno
pop
xor
dec
mov
pop
cltd
fdivl
lahf
mov
xor
out
push
into
fildl
pop
xor
mov
test
jle
outsb
loop
adc
and
inc
movsl
pop
inc
lret
or
outsl
pop
pop
mov
mov
cmpsl
or
mov
fisubs
ds
mov
push
repz
xlat
jmp
cmp
popf
adc
in
add
fnstenv
mov
cmc
setae
or
js
sbb
mov
iret
fnstenv
stc
lahf
test
xchg
dec
ds
fcmovne
nop
ret
mov
data16
and
ret
clc
cli
iret
xchg
mov
ljmp
pop
mov
lcall
not
pop
mov
ss
push
inc
shll
fstps
mov
ja
mov
pop
push
mov
pop
jecxz
inc
movsl
push
icebp
imul
cli
pop
pop
cwtl
into
arpl
mov
push
loop
stc
push
lock
sub
stos
xor
and
jbe
cld
lret
fidivrl
fwait
movsl
mov
jecxz
ret
nop
xchg
test
mov
mov
rcr
int
ja
es
xor
xchg
jge
inc
testb
frstor
shlb
pop
fildll
xor
jb
cmp
jge
pop
ret
jno
pop
mov
xor
insl
mov
lods
ds
push
pop
dec
xor
or
fdivp
jp
movsl
cli
push
iret
popf
lahf
std
mov
inc
push
jg
or
cmp
scas
inc
cwtl
rclb
inc
sahf
stc
test
mov
movsb
gs
sub
sbb
pop
dec
xchg
cmpsb
adc
sbb
inc
sbb
popf
out
cmpsl
xor
sub
decl
cmpsl
sub
dec
mov
mov
lret
cli
stos
push
rolb
cltd
mov
in
test
sbb
test
mov
insb
dec
jo
scas
stc
fisttpl
scas
xchg
sti
scas
ret
and
sbb
insl
adc
xchg
xchg
mov
idivb
es
iret
daa
lods
pop
outsl
mov
jmp
xchg
push
sbb
fstpl
mov
scas
mov
ds
mov
or
cmp
aam
pushf
fwait
dec
add
push
stos
divl
cli
push
std
or
mov
push
out
enter
mov
xchg
mov
mov
mov
lcall
fxch
jmp
cmp
popl
cli
loop
sahf
push
inc
fisttpll
fcomps
mov
and
popf
es
sub
adc
aad
lret
testb
movsb
jge
mov
mov
xor
inc
mov
in
jmp
dec
cld
sbb
dec
mov
mov
xchg
ljmp
xor
xor
adc
ja
outsl
in
push
xchg
fistps
xchg
sbb
and
popa
mov
xor
in
out
add
ljmp
dec
and
push
mov
dec
add
cli
dec
inc
icebp
cmp
push
xor
stc
inc
rclb
or
push
lea
xchg
stos
cmc
cmpsb
xchg
sahf
into
and
icebp
shrd
enter
pop
int
rcr
add
mov
dec
jge
adc
dec
adc
lahf
test
sub
loop
js
jnp
xchg
mov
rcll
filds
and
mov
push
mov
jmp
mov
cmp
jbe
mov
out
xchg
cmp
pushf
xor
out
or
cmpsb
pop
add
out
iret
data16
ss
xchg
test
inc
orl
sti
xchg
dec
rol
push
adcb
jne
inc
in
ret
or
add
iret
inc
es
mov
sub
push
loopne
in
in
sub
mov
mov
sti
fs
lods
outsb
sbb
sub
cmp
xchg
sbb
push
pop
nop
mull
cmp
mov
stos
gs
or
xor
sbb
mov
idivb
lea
mov
lret
into
cmpsl
iret
pop
cmp
mov
lret
outsl
pushf
lods
iret
push
lret
mov
das
add
push
or
outsl
ret
mov
test
pop
lahf
cmpsb
call
xchg
sahf
xchg
into
rcrb
mov
lcall
xchg
stos
xchg
pop
dec
lret
sbb
jmp
lods
leave
mov
push
call
push
faddp
jge
fadds
ja
and
xchg
fcmovnbe
in
iret
inc
pop
js
out
lret
pop
push
xchg
adc
lods
dec
or
push
shll
mov
adc
movsb
cmp
mov
push
lcall
and
add
or
mov
pusha
jg
and
push
jmp
hlt
in
push
iret
jb
inc
sbb
ret
lock
jl
add
jl
jp
or
mov
fldl
xchg
sbb
mov
roll
push
imulb
cwtl
imul
push
lock
in
rclb
ljmpw
sub
or
int
mov
nop
flds
inc
xchg
and
add
mov
xchg
addr16
iret
jns
adc
xor
mov
loope
test
mov
jnp
out
push
movzwl
setg
add
leave
pop
ret
lods
loope
cs
dec
sbb
dec
pop
int3
sub
into
mov
push
adc
jo
dec
jne
mov
iret
aad
arpl
mov
inc
aas
or
in
insl
lcall
inc
lret
lahf
lods
subps
pop
xlat
cmpsl
and
jo
js
cmc
mov
mov
imul
inc
dec
and
cltd
fdivrp
mov
into
dec
js
mov
jno
xchg
lret
xor
push
jbe
dec
mov
jb
mov
jno
cmpb
fs
mov
mov
cwtl
jns
loope
adc
inc
or
mov
dec
nop
ja
add
push
inc
jns
xchg
iret
push
mov
lahf
stc
push
and
xchg
mov
push
test
fstpt
xor
dec
fs
jg
aad
int3
push
xchg
jae
sbb
mov
int
jne
inc
sub
and
cmpsb
or
jge
in
cs
das
cmp
inc
mov
lcall
stos
sub
add
aam
cmp
or
shlb
sarb
sub
or
mov
and
femms
incb
scas
mov
stos
ds
lahf
mov
xchg
addr16
std
push
fists
leave
pop
jne
scas
mov
adc
divb
iret
dec
lods
adc
xchg
add
mov
es
test
and
outsb
stc
loope
pop
or
mov
add
dec
pop
jge
jno
pop
imul
and
inc
jns
ss
rorl
mov
movsb
push
negb
pop
push
in
in
loope
outsb
or
js
aaa
and
push
ret
or
or
cmpsb
or
popa
lods
cmpsl
lcall
fwait
xchg
pop
cwtl
jecxz
enter
add
fldenv
push
mov
arpl
xor
push
fwait
xchg
push
xchg
cmpsb
cmp
cltd
xchg
jmp
jno
sub
jecxz
jl
mov
int
lock
addr16
fdivr
btr
push
push
pusha
dec
sub
iret
pop
nop
jle
cmp
cmpsb
jge
xchg
stc
cmp
ret
cmp
pusha
in
mov
xchg
mov
cmpsb
lods
jb
and
push
daa
arpl
cmp
lcall
or
cli
fisttps
xchg
cmp
jno
and
aam
and
fmulp
dec
int
dec
lahf
sbb
ret
loopne
mov
jnp
or
aas
in
dec
int
mov
xchg
push
push
addr16
pop
inc
cwtl
into
jne
lahf
mov
scas
dec
lock
rcll
mov
dec
arpl
aam
xchg
cmp
outsb
mov
int
pop
aad
fadds
inc
push
aas
int
loop
adc
and
push
adc
stc
pusha
pop
jnp
dec
cli
or
pop
outsb
xchg
stos
sahf
sbb
mov
cmpsb
jne
js
mov
adc
push
sbb
movsl
adc
jle
push
push
test
inc
lret
xchg
inc
adc
iret
or
jno
sti
rcrl
mov
push
outsl
int
out
lahf
ljmp
iret
mov
hlt
aas
movsb
sub
daa
test
pusha
loop
fwait
stos
int
dec
push
out
push
rclb
xchg
int
and
leave
fld
push
test
add
aam
add
into
xchg
mov
or
mov
add
push
mov
orb
push
shl
outsl
sub
daa
pop
push
jo
or
pushf
iret
or
adc
mov
cmpsb
jbe
pop
xchg
sbb
cmc
pop
push
imul
sbb
cltd
sti
or
adc
add
sbb
pop
and
jl
pop
imul
pop
cmpl
fs
cmp
cmc
clc
jne
xchg
movsl
add
pop
mov
sbb
inc
cwtl
repnz
mov
inc
mov
data16
lds
xor
dec
mov
fnstenv
movsl
or
aad
mov
and
dec
and
ljmp
mov
pusha
into
ds
dec
ret
cs
inc
idiv
int
inc
mov
stos
lcall
jo
add
jb
aad
icebp
jl
xchg
dec
inc
pop
popa
in
push
mov
ffree
dec
jno
mov
sti
sbb
xchg
push
out
lock
frstor
loopne
pop
sub
mov
inc
adc
leave
jne
and
fwait
sbb
mov
sti
lock
add
dec
cli
dec
jnp
aad
and
cmpsl
mov
mov
fs
pop
dec
addr16
xor
js
imulb
add
popf
dec
lods
lea
dec
pop
ljmp
lea
mov
test
lret
mov
cmpsb
cmpsb
or
cmc
push
xor
lock
mov
lock
ret
das
lahf
cmc
es
or
sbb
in
cld
lret
outsb
jl
adcb
nop
jb
iret
sub
push
insl
and
into
xchg
pop
inc
push
hlt
push
xor
out
push
or
pop
repnz
pop
cli
in
mov
cmp
repz
lods
sbb
mov
dec
add
ficoml
fmulp
mov
test
psubsw
push
orb
inc
rcl
jge
cmp
in
cltd
pop
sub
mov
add
adc
call
push
mov
lods
xor
sbb
mov
clc
loope
cltd
sub
pop
notl
inc
jb
inc
jbe
adc
xchg
leave
xchg
mov
mov
insb
add
sub
adc
mov
mov
cmpsl
dec
dec
mov
sbb
test
pop
call
js
mull
dec
or
fidivl
mov
xchg
fcomp
push
roll
inc
cmp
in
mov
pop
ljmp
loop
or
or
stos
add
jg
jp
arpl
xor
mov
pop
lahf
sarl
mov
jle
dec
jmp
cld
out
imul
sti
cmp
xchg
pop
enter
sbb
jle
add
repnz
dec
sbb
pop
andb
call
sbb
dec
sub
xchg
or
fisttps
aas
iret
int
iret
add
movsl
repnz
mov
pop
int
jno
mov
push
scas
jno
nop
ljmp
lret
std
addr16
and
mov
leave
pop
movsl
xchg
pop
ret
lods
addr16
fmulp
movsb
sbb
xchg
mov
orb
adc
lock
sub
lcall
movsb
test
or
movsb
pop
rolb
and
push
mov
fistpl
sarl
push
mov
or
and
xchg
lock
stos
sbb
lods
iret
push
mov
clc
ret
mov
cmpsb
leave
jnp
lods
jg
into
test
jle
jno
aam
mov
sub
xchg
mov
pop
data16
test
repz
jge
loop
fiaddl
sbb
pushf
pop
in
or
loopne
sub
jg
mov
int
cmpsb
iret
adc
add
push
ja
sbb
sub
sub
jns
jge
pop
cld
and
add
add
push
mov
ds
cmc
mov
dec
pop
mov
stos
icebp
mov
lods
das
sarb
popl
or
rep
mov
jp
lods
jnp
jns
mov
pop
out
jnp
lea
aad
cmp
dec
pop
xchg
inc
inc
stc
inc
mov
iret
pop
and
mov
js
jns
sub
test
lahf
lods
out
pop
gs
or
nop
clc
pop
mov
dec
out
xchg
jp
push
dec
fldcw
mov
imul
pop
or
ds
scas
cmp
lahf
movsb
inc
in
xchg
dec
popa
iret
cmpsl
hlt
scas
hlt
and
dec
inc
pop
push
xlat
sub
xor
dec
ljmp
lret
dec
jle
ret
or
loop
dec
adc
dec
pop
cmp
aaa
movsb
add
icebp
repz
pop
fldl
std
add
mov
nop
mov
in
push
adc
jns
push
cltd
stc
mov
aad
scas
call
bound
lahf
scas
mov
cs
popf
pop
add
out
leave
mov
and
cltd
mov
addb
test
inc
sbb
push
or
cltd
push
daa
negl
pop
xchg
jl
sti
xchg
mov
jno
adc
cmp
repz
sti
sub
iret
push
out
mov
mov
xchg
inc
push
push
lock
mov
daa
jle
inc
ret
lahf
hlt
sbb
sub
in
cmpsb
mov
jmp
adc
test
popf
into
lods
fisttps
jg
lods
mov
repnz
cmp
jb
aam
jge
inc
pop
enter
push
lock
sub
outsb
mov
jne
mov
mull
movsb
or
add
int
add
int
push
adc
jns
addr16
dec
jbe
pop
fwait
jnp
lods
roll
mov
ja
je
pop
test
add
add
aam
data16
jl
inc
cmpl
jp
fdivrs
add
ljmp
outsb
cmpsl
aad
fucomp
mov
sub
push
sub
js
lds
pusha
sahf
pop
into
pop
dec
cmp
aas
sub
lods
xchg
push
stos
outsb
ret
notb
sti
jb
addr16
es
arpl
dec
inc
sub
pop
lret
sub
xor
push
push
add
mov
fnstenv
sub
add
or
xchg
scas
repz
mov
and
mov
stc
sub
addr16
cmpsb
les
int
inc
popa
clc
jbe
pop
jle
shrl
jle
xor
pop
cmpsb
out
inc
mov
or
push
jb
testl
adc
js
lods
lods
cmp
nop
scas
in
notl
gs
jns
into
pand
cltd
daa
pop
xchg
jle
pop
orl
pop
push
push
jnp
mov
mov
scas
mov
fld
xor
xlat
pop
lcall
add
xchg
arpl
sbb
mov
add
and
xrelease
sbb
push
and
inc
andb
pop
fmulp
pmuludq
push
test
loop
loopne
mov
faddp
mov
in
fsubrs
subb
inc
xor
repnz
mov
out
shlb
xor
ret
arpl
fimuls
lods
mov
fistps
and
fcoms
call
push
inc
nop
in
sbb
stc
ficoms
jb
nop
aam
fistpll
mov
cmc
iret
movsl
dec
mov
decl
push
imull
add
js
lods
dec
or
pop
xchg
dec
mov
fwait
pop
loope
leave
in
sub
shll
aad
add
jg
lahf
test
xchg
int
cld
inc
orb
fwait
and
lahf
jmp
mov
icebp
xlat
test
pop
notb
lock
sub
push
into
loop
push
mov
lock
test
pop
adc
mov
testb
sbb
jno
push
fcmovu
ljmp
jecxz
mov
pusha
es
jne
fwait
lahf
into
mov
popa
and
in
jns
pop
jnp
lret
div
movsb
mov
movsl
xor
pop
pop
mov
jge
subb
lcall
add
and
jecxz
push
pop
pop
into
stos
addl
inc
and
ds
mov
and
movsb
int
ds
inc
data16
xchg
sbb
dec
nop
jg
rorl
lods
or
and
repnz
mov
es
std
in
jle
aad
inc
push
push
into
movsb
rcrb
aas
dec
in
mov
aad
and
xchg
pop
out
and
test
add
pop
dec
out
pop
inc
iret
lahf
lahf
pop
into
xchg
cmp
loop
pop
xor
jmp
adc
adc
iret
lret
pop
js
in
or
movsl
sarl
lret
adc
lods
jb
inc
aam
push
icebp
hlt
jle
inc
xchg
insl
lods
js
lret
pop
mov
mov
cs
add
notb
sti
lods
clc
repz
into
xchg
sbb
mov
stc
loope
movsb
or
sahf
in
icebp
push
in
cmp
add
es
xor
test
add
pushf
inc
jle
fcomps
out
out
shll
loopne
leave
push
fimull
int3
insb
sub
test
fwait
sbb
cmc
sbb
push
in
lods
sti
lds
inc
iret
fsubp
mov
shll
cwtl
dec
out
jns
aad
fsts
sub
jmp
inc
cmpl
or
adc
das
test
xor
dec
cmc
daa
push
xchg
xor
adc
test
push
repz
sbb
lret
pop
mov
and
xor
push
test
sbb
test
aam
mov
sti
jo
push
jmp
int
enter
or
jg
pop
mov
int3
pop
mov
cwtl
iret
inc
adc
mov
int3
movsl
sub
roll
popf
insb
cmp
and
sbb
cmp
mov
fwait
test
push
in
shrl
mov
bound
stc
sti
stos
insl
sub
scas
mov
das
sub
push
loope
sti
lret
inc
add
mov
jnp
mov
repz
sti
add
lahf
sbb
les
cmp
cs
push
mov
push
xchg
cmp
pop
add
rorb
ds
iret
dec
fs
imul
mov
scas
and
cmpsl
mov
sub
nop
inc
adc
or
sbb
cmp
sti
mov
pushf
fsubp
ret
mov
cmpsb
cmp
pop
lcall
pop
aaa
xlat
icebp
in
testb
cs
out
das
xor
in
loope
inc
push
inc
push
xchg
arpl
leave
cmp
push
daa
mov
mov
jg
mov
enter
jo
pop
popa
rcrb
jns
add
lods
lds
in
or
and
cs
mov
fxch
xchg
dec
addr16
or
out
jae
lret
and
xor
inc
es
or
ss
into
mov
orb
lods
mov
sub
clc
ror
int
inc
jae
fwait
and
mov
xchg
je,pt
mov
call
sti
idiv
mov
cmpsb
mov
mov
icebp
add
dec
dec
fwait
jno
lcall
or
iret
adc
xchg
dec
fs
adc
inc
rcrl
loop
jns
cmp
lods
xor
call
mov
pop
aaa
push
fimuls
jns
ja
pushf
mov
mov
adc
mov
loopne
leave
cmp
adc
sahf
lahf
mov
adc
add
fsubs
push
mov
jp
sbb
add
lahf
sbb
shll
in
and
es
repz
mov
add
mov
leave
cmp
jb
ret
jmp
jg
mov
aas
leave
mov
jbe
mov
stc
invd
inc
dec
and
movsl
xchg
fiadds
jns
sub
push
adc
mov
add
loope
pop
cli
aad
ficomps
cmc
ja
sbb
icebp
cmp
sahf
test
aaa
test
mov
mov
jae
add
jle
popw
push
xchg
cli
xchg
je
add
lahf
mov
jnp
xor
dec
inc
inc
fwait
mov
outsb
dec
sbb
stos
inc
stos
movsb
lock
sbb
insl
in
push
insb
cwtl
dec
pop
repz
xor
je
pop
mov
mov
int
push
cmp
push
dec
mov
in
or
pop
pop
jb
ret
scas
gs
fxch
and
add
into
out
jp
dec
outsl
outsl
cmpsl
mov
std
dec
loope
dec
inc
aas
dec
pop
sub
cld
mov
dec
xchg
scas
and
fisubl
hlt
mov
addr16
inc
jg
lahf
mov
mov
icebp
ret
negl
cltd
inc
lds
cmp
outsl
call
mov
mov
bound
iret
jbe
ret
adc
gs
shl
fcompl
or
and
sbb
cwtl
push
xchg
mov
push
lea
test
xchg
jo
movsb
and
jp
push
mov
mov
fmull
xlat
loopne
jns
lods
sub
lock
jle
pop
inc
sahf
jb
push
mov
sbb
add
dec
push
pushf
popf
movsb
std
inc
clc
mov
jbe
out
dec
xchg
fldl
sbb
push
lock
lock
sbb
out
fsts
hlt
push
mov
addb
adc
movsl
ficoml
ror
movsl
es
nop
into
fidivl
aam
mov
ds
push
int
push
notb
sahf
in
popf
scas
cmp
add
fldenv
push
mov
scas
call
sarl
push
or
pushf
pop
mov
daa
flds
xor
jp
sub
jp
inc
xor
fsubrp
out
adc
insb
scas
popf
push
popf
mov
add
push
outsl
dec
mov
loop
xor
or
jle
jp
pop
jmp
mov
dec
xchg
loopne
aaa
es
inc
mov
movsl
lea
frndint
xor
rcrl
jmp
and
lret
sub
pop
iret
lcall
mov
lret
data16
out
mov
mov
jge
dec
mov
cwtl
into
pop
cmp
scas
push
xchg
adc
jle
mov
vpandn
lods
inc
push
in
dec
insl
lret
push
cs
int
add
jecxz
aaa
rolb
ficomps
adc
mov
fmull
dec
pop
icebp
call
sbb
jp
mov
inc
mov
dec
sbb
lds
hlt
sbb
int
dec
cmpsl
fstl
inc
popl
xchg
loope
fmulp
push
mov
lock
mov
dec
cmp
push
dec
mov
xor
mov
sub
or
or
int3
xlat
cltd
jo
jno
decl
add
and
iret
xchg
adc
and
lods
in
add
push
bound
decl
pop
pop
mov
push
pushl
pop
test
dec
jl
les
and
or
imul
push
or
dec
iret
out
incb
pop
or
xlat
xchg
shlb
cmp
inc
fists
xlat
outsb
inc
add
addr16
stos
mov
mov
or
mov
rcrl
repnz
dec
jo
in
aad
fimuls
sbb
xchg
and
jl
das
lock
mov
jmp
movsb
es
loopne
lcall
lods
aas
inc
xor
jbe
pop
jg
lock
cmp
lret
movb
dec
jo
lds
mov
push
mov
out
jnp
or
outsb
mov
push
in
rcll
sub
mov
mov
jnp
call
into
mov
movsl
es
sbb
xor
int
test
out
jns
xor
fsubrl
cs
fisttpll
in
insb
xorl
xchg
clc
jmp
test
nop
sub
inc
int
mov
hlt
inc
test
inc
mov
lcall
mov
and
in
xchg
mov
pop
es
aas
xor
repz
push
mov
shll
jb
sti
lret
pusha
push
lahf
jge
mov
adc
mov
xchg
test
in
add
push
xchg
test
pop
cld
sbb
ds
mov
mov
mull
std
sbb
repnz
sub
aaa
and
jmp
mov
push
sub
subb
ds
mov
push
pop
adc
sahf
popf
lret
push
and
xchg
push
orb
lahf
push
idiv
inc
mov
lret
pop
fmulp
jl
push
pusha
jae
lds
std
pop
int3
inc
in
popa
test
stos
mov
dec
pop
push
pop
lret
xchg
or
sbb
cmpl
pop
jno
sub
mov
mov
or
pop
scas
xor
inc
sbb
lods
xchg
sbb
adc
leave
imul
adc
lods
lcall
int
sbb
sbb
pop
pop
je
sbb
mov
frstor
xchg
or
push
popa
repz
lods
inc
mov
push
cmc
icebp
es
push
and
in
sete
xchg
cmp
test
mov
and
pop
pushf
cmpsl
andb
dec
pop
adc
inc
ss
push
icebp
and
lods
fs
inc
cmp
popf
add
adc
adc
sub
mov
xchg
pop
pop
std
cwtl
lret
ljmp
int
shll
add
decl
jb
and
lea
loop
adc
dec
sti
out
mov
jl
mov
lcall
mov
cld
push
fcomip
or
fwait
lock
jg
iret
cs
dec
out
sahf
test
lock
or
int
or
neg
mov
jns
or
into
sub
push
sbb
popa
cld
mov
ja
out
jl
and
pop
int
sbb
mov
out
ret
mov
ja
jno
pop
cmp
inc
int
mov
inc
gs
fnstcw
sbb
push
xor
pusha
mov
inc
imul
mov
mov
repnz
into
adc
dec
mov
aam
dec
pusha
testl
jnp
jle
push
and
mov
xchg
sbb
xlat
xchg
inc
fcmovb
popf
add
lcall
mov
cmp
jge
sbb
add
mov
jle
sahf
sahf
sub
xor
mov
mov
cmp
js
dec
dec
sub
cmp
sub
mov
cwtl
cli
popf
shrb
inc
loop
notl
xchg
int
jae
push
lock
stos
lock
int
icebp
xlat
jb
lods
fidivrs
cmpsb
test
xchg
lcall
loope
add
cs
xchg
outsl
sub
ficomps
scas
mov
jp
jmp
or
pushf
or
aam
sbb
pushf
loopne
inc
xlat
pop
cli
pop
sbb
clc
outsb
or
fwait
hlt
aam
repnz
mov
addr16
jne
cmp
sbb
inc
int
inc
sar
iret
jb
adc
shl
stos
fstl
mov
add
pop
dec
sbb
sub
cmc
in
lret
push
cld
scas
push
xchg
mov
dec
jo
and
mov
jg
lods
popa
mov
shl
and
jo
xlat
es
cmpsl
xchg
into
cwtl
pop
test
cmpsb
mov
dec
mov
pop
cmp
rcrb
xlat
xchg
ret
les
decb
cwtl
sbb
push
inc
clc
mov
adc
pop
pop
nop
or
cmc
mov
out
sbb
mov
jle
push
xchg
inc
loopne
test
outsb
cli
mov
dec
in
sub
insb
lods
cld
cmp
clc
jne
lret
xor
or
bound
int
mov
add
cli
push
fs
in
test
push
push
mov
test
sub
iret
dec
push
cmp
mov
pop
mov
daa
push
and
jae
in
or
fiadds
aaa
popf
scas
push
pop
sub
push
popf
sbb
sub
pop
inc
or
xor
loop
fs
lahf
pop
mov
mov
inc
pop
and
jb
dec
or
sti
popf
and
jg
push
dec
fldt
inc
fcomp
pop
lcall
es
dec
jge
fistps
lret
and
mov
ffree
pop
ret
insl
js
shlb
push
cld
push
stc
add
adc
sbb
lret
sub
xorb
ds
pop
nop
repnz
andb
mov
push
push
loop
fs
pusha
sub
sti
pop
repnz
jge
sbb
fisubrs
pushf
lds
mov
or
pop
aas
inc
aam
pushf
testb
inc
xor
push
movsl
lret
bswap
cmp
jecxz
add
rcrb
add
imulb
stos
cli
das
iret
rcl
cmp
pop
stc
push
imul
and
cmpsb
stc
loopne
xchg
std
cmp
xchg
into
sub
inc
mov
popf
cld
mov
xchg
mov
xchg
add
inc
jecxz
fidivs
ret
xor
or
xchg
inc
adc
mov
jns
mov
popf
into
je
lds
dec
inc
xchg
xor
mov
inc
shl
jbe
xchg
cli
out
aam
mov
ret
and
mov
xchg
psubq
dec
jp
push
clc
xchg
mov
lods
mov
cmpb
push
cmp
xchg
pop
inc
jge
push
jo
mov
bound
or
sub
lcall
icebp
jg
mov
ret
aaa
push
mov
scas
iret
je
pop
pushf
mov
test
fsub
inc
shll
pop
call
jne
mov
ffree
mov
jle
fidivs
test
les
iret
call
mov
int
imul
mov
and
out
aam
xchg
pushf
pop
popf
cwtl
iret
inc
aad
testl
sub
pop
inc
mov
adc
mov
inc
mov
nop
sbb
hlt
repnz
push
mov
pushf
mov
mov
lcall
mov
stos
jno
mov
ss
jp
repnz
push
adc
scas
test
test
cli
jo
std
cmc
std
ficomps
arpl
or
cmp
push
jle
arpl
lcall
shrl
lcall
mov
cmpsb
mov
ret
dec
adc
aas
movsb
daa
stos
mov
pop
xor
push
fdivp
int
push
inc
pop
leave
inc
adc
jo
stos
ss
repz
ret
lea
cmp
loop
cmpsl
jb
dec
mov
pop
or
cli
cs
jecxz
enter
std
lcall
scas
and
mov
adc
popa
sbb
xchg
and
adc
into
outsl
jmp
mov
imul
iret
adc
rolb
pop
mov
xlat
clc
sti
sbb
idivl
xchg
and
out
aad
testl
and
mov
add
repnz
lea
lods
jae
les
stos
cli
icebp
sarl
sub
nop
pop
rcrl
cmp
push
jle
mov
sub
cmp
pop
and
out
mov
mov
add
mov
mov
nop
and
dec
pop
jns
lds
xchg
cmc
loope
pop
hlt
xorb
mov
and
push
add
sarl
mov
xlat
mov
cld
sbb
sub
pop
mov
push
or
mov
push
leave
stos
mov
addb
xchg
in
scas
movsb
jg
jp
jno
dec
jnp
es
sub
cmp
repnz
xor
push
scas
mov
mov
push
mov
push
mov
inc
nop
xchg
dec
je
repz
mov
cmpsb
lock
push
add
mov
mov
hlt
dec
sbb
pop
iret
pushf
xrelease
stos
sbb
sbbb
in
mov
mov
lahf
in
adc
sbb
xchg
into
sub
movsb
out
scas
test
xchg
mov
sub
dec
jp
addl
mov
jge
mov
cli
ror
fwait
or
imul
jno
mov
pop
push
sub
or
test
mov
jno
dec
inc
fisubs
int
imul
mov
jnp
add
mov
pop
mov
insb
or
mov
int3
dec
out
or
sub
jo
xchg
push
mov
iret
mov
jmp
lcall
pop
fldt
xchg
mov
jle
cmp
sub
popf
lds
iret
leave
fldt
int
mov
or
push
call
or
scas
jb
repnz
int
xchg
sub
dec
cmp
jbe
inc
adc
pop
dec
dec
cmp
jg
int
andl
mov
jl
iret
cmpsl
sbb
ds
int
add
jae
adc
sti
push
jnp
push
setge
out
bound
stc
push
test
int
loop
dec
push
sbb
scas
into
jne
hlt
ljmp
sbb
push
cmpsb
iret
mov
push
push
mov
sti
lock
mov
lahf
fstps
mov
icebp
or
hlt
sbb
xor
fldt
inc
pop
pusha
roll
dec
leave
addr16
addr16
into
ja
rcr
and
std
int
repnz
int
orb
dec
xchg
jmp
lahf
leave
push
inc
dec
lea
sbb
xchg
dec
ffree
sub
cmp
dec
popa
inc
loopne
jbe
sbb
hlt
jne
and
cmp
cld
mov
pop
ds
into
fbstp
push
daa
lea
xlat
icebp
popa
inc
adc
mov
cmp
cwtl
pop
sbb
in
pop
cmc
jp
lahf
or
adc
out
int3
popa
or
pop
rorl
sub
int
cmp
lea
cmp
mov
mov
cltd
push
cli
push
stos
pop
adc
movsb
ret
mov
mov
adc
stos
and
push
mov
test
ret
mov
daa
xor
out
mov
xchg
dec
jae,pt
popa
dec
xchg
iret
mov
sarb
ss
add
stos
mov
scas
jbe
rcll
jmp
scas
xor
cmp
xchg
addr16
push
xchg
add
enter
outsb
outsb
push
sub
dec
mov
add
iret
or
cld
dec
or
jb
shrb
ja
sbb
int3
mov
add
inc
mov
or
mov
push
dec
iret
ja
or
xchg
jns
xor
imul
and
xchg
gs
inc
jl
lahf
dec
sbb
jo
xchg
scas
jge
aam
ss
and
mov
mov
xlat
mov
dec
mov
jle
sbb
jae
sub
xor
xchg
jl
cwtl
iret
push
fcoms
dec
fisttpl
addr16
pop
movsb
negb
adc
test
ljmp
xchg
push
mov
shll
rolb
in
bound
insl
lahf
fstpl
lcall
mov
lahf
or
xchg
xchg
lods
mov
test
std
mov
dec
cltd
sbb
and
sub
imul
iret
sub
xlat
inc
adc
add
hlt
push
mov
lahf
xchg
aas
mov
jo
push
sub
add
dec
jb
mov
pop
out
sub
jg
test
cmp
pop
mov
mov
mov
aam
call
sub
inc
dec
push
imulb
cld
xchg
xchg
push
shrb
out
pop
cld
mov
loop
leave
rolb
rorl
pusha
xor
jmp
lock
xchg
mov
sub
pop
mov
into
lds
add
dec
jbe
sbb
xor
dec
and
fstpt
imul
mov
sub
cmpl
pop
xchg
sbb
push
outsb
and
stc
je
inc
js
scas
in
mov
lahf
repnz
cmpsl
ljmp
out
pop
loope
stc
dec
push
repnz
or
mov
iret
bound
lods
sub
test
insb
xor
push
shrl
stc
scas
outsb
lods
fsubr
sbb
std
dec
inc
sub
mov
fstl
divl
cmp
mov
movsl
xchg
imull
stos
dec
inc
es
ljmp
mov
lret
repz
dec
stc
sub
pop
cmp
mov
fmulp
cmp
add
imul
in
sbb
sub
push
dec
loop
mov
xchg
cmpsl
repnz
lods
mov
sub
daa
xlat
je
and
outsb
cmc
xchg
mov
and
dec
test
aad
addr16
notl
mov
movsb
aas
pop
popa
mov
aaa
xor
mov
pushl
icebp
push
ret
ja
mov
jge
stos
inc
xchg
leave
jp
testb
ret
aam
in
pushf
gs
push
jecxz
decl
ret
xchg
js
in
movl
data16
cmp
fistl
dec
lahf
clc
notb
mov
cmp
jge
xlat
int
jbe
jp
mov
mov
xlat
orb
and
jne
adc
cs
stos
in
divl
shlb
sarl
popf
stos
pop
xor
stos
insb
push
mov
mov
mov
loop
stc
cmp
inc
xlat
out
xor
mov
pop
sub
pop
lea
push
dec
mov
adc
mov
xchg
xrelease
push
ret
mov
xor
xchg
cmpsb
xchg
inc
xlat
xor
test
lock
in
imull
cld
mov
int3
notl
xchg
add
cwtl
shl
sub
out
add
jbe
aaa
mov
lea
inc
mov
cmc
rorb
out
int
pop
dec
fwait
cmp
xchg
sbb
inc
repz
push
daa
lods
mov
es
mov
pop
shl
mov
xlat
and
pop
pop
pop
mov
rorb
pop
pop
jmp
jbe
adc
mov
cmpsl
mov
xchg
mov
push
insl
js
mov
in
js
xor
adc
inc
out
jp
ret
addb
inc
aam
inc
data16
pop
xchg
adc
into
push
shll
lods
mov
fstl
jecxz
in
mov
ret
mov
and
leave
mov
push
mov
mov
sahf
loopne
fisttpl
outsb
mov
out
int
stos
cmp
loope
test
cld
dec
or
mov
inc
movsl
jbe
xchg
mov
insb
lret
mov
adc
aaa
lcall
in
into
stos
jp
cmpsb
xchg
movsb
stos
mov
push
inc
std
outsl
push
cld
mov
sti
cmp
mov
cmp
scas
clc
lcall
lock
cld
fdivp
iret
mov
pop
xor
jo
pop
xchg
sbb
and
add
clc
lea
mov
fwait
pop
je
xorb
je
jae
lea
sub
mov
xor
ja
push
or
push
das
lcall
jae
dec
push
je
and
stc
adc
add
mov
ss
dec
nop
inc
idivl
mov
push
loopne
sbb
nop
cmc
xchg
js
dec
mov
popf
mov
fimuls
ret
mov
test
or
dec
mov
pop
sbb
int
stos
add
add
stos
cmpb
jo
sub
mov
xchg
jns
jp
test
jle,pn
int3
pop
stos
mov
sub
pop
add
pop
ret
xor
mov
int
jmp
jno
arpl
movsb
inc
seto
inc
ss
stos
cmc
stos
mov
adc
xchg
or
std
mov
or
push
push
call
jle
cmc
subb
into
push
ss
sbb
sti
pop
decl
mov
sbb
ljmp
fbld
jno
pop
adc
stos
addr16
cmc
adc
arpl
add
lock
rep
call
mov
sub
fisubrl
cltd
outsb
mov
mov
inc
mov
sub
in
mov
add
adc
sub
pop
into
shl
mov
push
aad
mov
ljmp
or
stos
mov
movsb
fisubs
pop
mov
int
lret
lahf
popf
lret
mov
out
inc
mov
mov
movsl
xlat
dec
sub
lret
or
pushf
and
jl
add
xor
adc
ds
dec
popf
add
mov
cltd
push
int
jp
add
stos
in
xchg
lret
ss
sub
jns
mov
inc
in
push
dec
add
pop
scas
mov
add
lock
sub
inc
add
pop
stos
mov
fwait
lahf
std
popa
mov
iret
cmp
insb
roll
jp
or
inc
dec
leave
inc
movsb
hlt
xor
outsl
pop
pop
and
into
mov
je
mov
cmp
lret
bound
lea
mov
iret
insb
jne
add
dec
cmc
sbb
jle
aad
xor
fiadds
ss
dec
mov
aam
sub
lcall
shr
inc
or
and
js
mov
cld
sbb
out
xchg
int
or
loopne
stc
scas
lahf
fwait
inc
hlt
es
sub
push
add
or
shlb
or
aad
imul
sbb
imul
adc
add
mov
mov
xchg
pushf
iret
xor
mov
push
xchg
in
jl
iret
dec
adc
addb
adc
push
mov
dec
into
adc
scas
sarb
mov
jg
mov
push
pop
or
sahf
sbb
dec
sbb
dec
lret
iret
mov
popl
inc
pop
jle
mov
mov
cmp
or
or
sbb
test
lret
es
cmp
nop
into
xchg
jb
lods
cmc
sbbl
call
sbb
pop
xchg
add
mov
xor
mov
nop
stos
mov
mov
addb
test
inc
mulb
mov
shr
arpl
push
inc
inc
add
xchg
pop
int
mov
gs
sbb
aas
cli
aas
mov
push
lahf
ret
cmp
or
mov
xchg
or
push
in
add
aaa
cli
add
icebp
outsb
dec
int
shlb
mov
inc
stc
roll
scas
dec
cmpsb
and
and
movsl
dec
js
stos
xchg
xchg
jge
adc
ss
mov
pop
fidivl
jne
jno
inc
mov
inc
std
lock
out
mov
and
lods
push
push
bnd
in
push
jmp
sahf
lcall
sahf
sti
rorb
pop
iret
mov
and
inc
popa
jmp
call
in
int
ja
repnz
mov
mov
cmp
lret
aad
scas
loope
sub
and
push
mov
daa
call
and
icebp
cs
ljmp
cltd
adc
add
inc
and
insb
mov
sbb
sub
test
int
call
jb
mov
iret
stos
lahf
into
lods
mov
inc
jbe
ja
xchg
les
or
mov
cmp
lcall
test
push
lds
repz
jb
mov
mov
mov
xor
push
sub
das
mov
jbe
into
cs
jge
xchg
movsb
or
jno
inc
xor
lret
andl
inc
aaa
sbb
gs
aas
dec
stc
in
into
or
repnz
out
sti
mov
xlat
insb
out
lea
aad
mov
push
add
jmp
sbb
xorl
cwtl
fidivrs
je
cmpsl
movsl
push
cmovbe
pop
out
sub
test
or
aam
out
cmpsb
int
ljmp
lcall
dec
mov
pop
pop
dec
push
imul
gs
inc
aas
imul
push
iret
jg
dec
shlb
pop
mov
dec
imull
mov
rcrb
sti
mov
and
inc
xchg
test
in
in
clc
pop
shrb
add
frstor
rorl
or
pushl
dec
push
or
dec
lea
arpl
ds
lret
inc
jle
jle
cwtl
mov
xchg
lea
mov
sub
dec
mov
in
std
outsl
inc
xchg
jle
nop
sbb
mov
mov
pop
loop
xchg
mov
jp
pop
lock
sub
push
pop
cltd
push
jle
int
fsubr
ss
add
jbe
jno
pop
xor
mov
jae
mov
or
or
inc
cmp
inc
daa
xor
cmp
jb
inc
or
cmc
loop
sub
dec
push
scas
push
mul
cmp
out
adc
cmp
adc
mov
pushf
mov
push
pop
mov
arpl
cwtl
lcall
and
cmc
in
xlat
inc
xchg
or
mov
push
pop
into
mov
adc
mov
adc
in
mov
sbb
adc
loopne
jle
out
int
add
lods
addr16
orl
pushf
add
popf
cwtl
push
mov
nop
mov
lahf
fisubrl
adc
mov
jmp
push
ja
pop
push
mov
adcb
cmp
xchg
mov
inc
push
scas
ror
adc
mov
sbb
inc
jmp
and
adc
mov
sbb
xchg
dec
pop
xchg
shl
lcall
mov
push
and
insb
scas
dec
mov
cld
dec
aaa
std
testb
dec
pop
cmp
outsb
sbb
jbe
cmp
xor
pushf
mov
hlt
adc
mov
pushf
fsts
dec
sbb
push
mov
test
sub
cmpsl
pop
fsubs
mov
push
jbe
in
outsb
js,pt
fwait
aas
jnp
mov
xchg
sbb
insb
pop
pop
das
ds
std
outsb
adc
insb
out
lods
push
fwait
push
cmp
addb
in
push
data16
mov
or
adc
dec
push
ficomps
sub
add
mov
mov
cmpsl
push
jmp
es
das
ljmp
push
pop
mov
fists
filds
das
sbb
jbe
xchg
jg
cmp
pop
or
aaa
int
pop
mov
cs
outsb
adc
aaa
jbe
mov
lea
xchg
aas
and
or
fs
dec
pop
push
sbb
adc
xchg
das
pop
inc
jbe
jg
jge
pop
pop
into
mov
jle
mov
or
dec
pop
decb
inc
ds
daa
jg
jns
ss
xchg
push
or
sbb
push
or
outsl
or
notb
mov
insl
outsb
aaa
int
es
daa
jbe
xchg
addr16
inc
mov
inc
cmp
pop
sub
cmp
dec
idiv
push
push
out
lods
dec
push
xchg
mov
pop
jge,pn
push
ds
push
or
mov
cmp
outsb
jp
mov
or
xor
xchg
test
fistpll
dec
inc
or
adc
push
cld
pop
xor
in
call
lcall
push
aas
jge
flds
and
jbe
jb
xchg
lods
outsb
or
ficomps
insb
push
js
push
dec
ja
cmpsl
mov
add
and
jbe
andb
jmp
test
mov
sti
xchg
loop
xchg
sub
movsl
cmpsb
mov
es
push
pop
push
bound
xchg
mov
arpl
sahf
inc
idivb
jp
mov
cmp
sbb
pop
push
pushf
cmp
outsb
lods
lock
xchg
dec
test
xchg
ds
mov
mov
loop
outsb
enter
sub
pop
push
sub
xor
cltd
jle
js
outsb
mov
dec
pop
lret
lahf
arpl
jle
ss
int3
pop
ds
push
jbe
aaa
fisubrl
inc
lods
jle
fdivrl
int
mov
xchg
cs
pop
jle
adc
mov
cmc
outsb
pop
imul
loope
push
idivb
mov
out
ja
fadds
push
mov
sub
jle
add
sub
outsb
sub
jg
std
insl
adc
sbb
pop
fsubl
lods
push
mov
pop
imul
fnstsw
addr16
in
mov
dec
jg
popl
lret
cmp
test
xchg
sub
cli
ss
pop
lahf
ja
adc
ja
inc
dec
or
mov
sbbl
push
sbb
insb
xchg
pushf
into
sub
cli
cld
sbb
sub
cltd
mov
les
mov
push
je,pn
jl
aaa
imul
dec
dec
push
outsb
pop
aaa
pop
outsb
ss
insl
xchg
mov
cli
rorl
cld
push
insb
mulps
push
or
mov
push
or
dec
dec
push
pop
es
je
packssdw
cmp
call
ss
out
out
aaa
cmp
pop
mov
xchg
or
scas
push
addr16
jbe
mov
fsubp
pop
out
jle
dec
pop
out
out
pop
fidivrs
mov
cmp
add
dec
jg
push
je
pop
jg
jnp
ffreep
imul
aaa
sbb
inc
jle
test
mov
out
cmovle
inc
daa
pop
cmp
outsl
push
add
push
adc
into
outsb
pop
divps
push
hlt
jge
jl
ds
xor
fwait
mov
out
loop
jno
fwait
iret
idivb
sub
push
adc
stc
jecxz
lcall
mov
cmp
dec
push
in
stc
lret
fisubs
add
cmp
and
and
fsubrp
out
int
push
fs
inc
pop
sti
fldenv
popf
sahf
mov
daa
shlb
jle
jno
int
and
sarl
divl
fistpll
sub
push
sub
js
mov
sub
int
enter
into
pusha
ss
dec
stc
out
clc
xor
dec
testb
mov
lret
out
ds
adc
add
movsl
and
jb
daa
pop
xchg
mov
pop
jno
repnz
jne
int
movsl
lahf
sar
add
dec
push
test
jbe
lods
cmp
and
jno
add
lds
jae
cmpsb
loopne
test
pop
push
cs
lock
sub
shlb
xor
and
data16
xchg
aam
pop
sub
cmp
sahf
imul
in
dec
adc
cmp
cmpl
dec
lds
cmpsb
into
push
jno
outsb
out
sbb
loopne
xchg
loopne
or
mov
dec
pop
adc
cmp
loop
cli
addr16
clc
pop
andb
int
lods
sub
mov
mov
test
out
mov
and
pop
or
xor
mov
ja
std
ret
jb
pop
push
pushf
push
push
jg
jne
add
push
lods
das
xchg
fdivrp
add
cmp
iret
gs
cmp
inc
fs
dec
iret
pusha
ljmp
out
cmc
jle
scas
dec
pop
push
fxch
jecxz
cld
pop
dec
mov
mov
aad
mov
fimull
sbb
iret
push
scas
into
or
lds
xchg
fldl
lahf
mov
ss
js
dec
push
movsb
stos
shld
and
mov
jnp
or
adc
dec
mov
std
adc
and
jle
cmp
dec
fsubrl
adc
add
mov
cwtl
sub
lock
jl
adc
pop
lahf
iret
das
push
cmpsb
pop
push
gs
lahf
scas
adc
mov
addb
enter
into
adc
cld
xchg
outsb
int
in
daa
jnp,pt
loopne
push
insl
xchg
js
sub
mov
mov
mov
add
test
sbb
or
inc
pop
sub
arpl
xchg
inc
dec
adc
mov
mov
inc
in
cmp
mov
iret
add
push
mov
test
int
add
pop
push
xlat
pop
pop
sahf
cmp
sti
call
nop
into
pusha
data16
xlat
divl
adc
mov
out
insb
ds
gs
xor
lahf
and
push
les
aas
jg
sbb
add
rcll
test
cmp
dec
sbb
leave
mov
hlt
jb
pop
ret
test
lret
sti
jnp
inc
push
cmc
dec
lret
clc
mov
ds
push
outsl
lods
rolb
adc
outsl
mov
or
adc
aad
push
fcmovne
test
cwtl
push
jns
sbb
cld
or
inc
loopne,pn
adc
lahf
out
pop
mov
mov
into
mov
les
inc
rcl
inc
mov
push
jns
std
mov
stc
sahf
into
das
or
out
addr16
int3
jg
cli
lret
inc
int3
stc
sub
leave
outsb
xor
sub
sub
sub
mov
es
fimull
adc
testl
stos
outsb
shrl
pop
mov
daa
js
das
mov
aad
shl
faddl
mov
mov
jnp
adc
sbb
adc
nop
xchg
daa
pop
cmp
xor
pop
cmp
jle
enterw
pop
inc
adc
pop
orb
lods
push
icebp
mov
push
dec
xorl
mov
xor
das
sbb
pop
xlat
mov
push
sbb
test
adc
dec
inc
das
mov
mov
add
cmpsb
ficompl
xor
int
add
pop
inc
push
test
test
enter
rcrb
out
mov
daa
int
add
and
fcmove
sbb
xlat
sub
mov
clc
out
dec
jp
and
imul
jge
adc
enter
mov
fstps
and
stc
mov
cmpsb
or
movsb
loope
sub
cmp
dec
xchg
mov
bound
xchg
inc
add
inc
add
cs
dec
sbb
call
jp
stos
jb
and
xchg
jno
jp
fs
xchg
inc
gs
cmpsl
xchg
jno
popf
sub
sbb
jno
imul
push
into
fcoml
and
add
or
decb
mov
and
cmc
pushf
xchg
push
sub
cmp
fisubs
sub
or
fisubrl
xor
rcrl
das
mov
leave
fs
imul
add
movsb
and
insl
or
aam
test
or
nop
loopne
sub
int
jne
push
xorl
add
in
cmp
dec
jae
in
jnp
mov
inc
cmp
push
rcrl
and
xchg
scas
outsl
lods
mov
iret
lret
mov
outsl
dec
and
jnp
leave
shr
push
xchg
sub
push
adc
xchg
pxor
push
aam
daa
clc
sub
inc
adc
mov
jmp
jp
std
push
stos
mov
adcb
in
cwtl
loop
xchg
sbb
jo
in
inc
popf
insb
cmp
stos
mov
cld
movsb
roll
loopne
in
xchg
sbb
sub
iret
lock
adc
jne
sub
pop
pop
pusha
cmc
cmpsb
sahf
iret
shrb
testl
mov
fdivrs
add
mov
cs
jecxz
lret
pop
pop
repz
jns
jecxz
sbb
rcll
inc
incl
lock
jne
cmc
jge
add
daa
pop
cmp
sub
xchg
and
nop
stc
add
inc
mov
xchg
popf
int
out
mov
sbb
pop
test
or
ret
nop
jnp
mov
mov
mov
in
push
mov
mov
xchg
int
stc
inc
fsubl
insb
push
ds
rorb
mov
pop
xchg
aad
int
lods
cwtl
xchg
cmp
sub
jmp
into
push
popa
negl
fidivrs
ja
ljmp
pop
out
inc
jl
out
lock
outsl
cltd
stc
mov
repnz
xchg
das
mov
int
inc
int3
add
fs
dec
xor
js
addr16
mov
pop
pusha
lods
adc
and
push
xchg
and
or
adc
push
inc
xchg
push
inc
xor
loop
mov
and
cmpsb
push
decb
or
lods
and
mov
pop
mov
cmp
gs
add
dec
in
or
pop
lods
mov
xchg
in
mov
into
ja
lret
mov
xchg
daa
pop
mov
mov
movsl
jae
aaa
addb
cld
dec
mov
les
mull
dec
insb
cld
and
fucomp
xchg
lods
jo
ret
sbb
popf
cmc
aad
xor
in
ret
stc
in
mov
lods
shrb
loope
and
xchg
or
xchg
aad
jmp
mov
mov
pop
push
jl
scas
into
add
stc
push
or
xor
xchg
add
insl
mov
mov
xor
or
xor
push
inc
or
xchg
push
sbb
pushf
and
pop
jp
fistpll
xchg
daa
test
xchg
stc
or
stos
jl
in
aad
dec
stos
loopne
push
push
mov
cmp
call
pop
mov
inc
repnz
mov
sub
test
aaa
jo
jo
mov
pop
xchg
mov
and
or
ret
lea
ret
cs
xorl
xchg
sub
and
cmc
jl
pop
push
mov
adc
push
mov
andb
fdivp
pop
lahf
into
dec
xchg
loopne
sub
movb
sbb
push
add
jl
push
dec
dec
lock
popaw
mov
xchg
daa
pop
jae
cmp
outsl
push
sti
xlat
lock
mov
test
push
jns
mov
pop
notb
mov
lcall
adc
or
jp
das
inc
pop
xlat
or
pop
dec
test
ret
sbb
scas
jae
ljmp
jmp
imul
inc
mov
comiss
xchg
lods
sahf
sub
movd
sbb
push
movsl
loop
push
subb
sbb
pop
or
test
cmp
out
and
and
aaa
sub
jne
push
xor
fwait
jl
inc
pop
pop
mov
mov
popf
pop
inc
into
stos
testl
loopne
cmp
pop
hlt
ljmp
shll
or
das
jne
scas
loope
stc
movsb
lret
call
rep
jae
gs
mov
outsl
clc
lret
cmpsl
repnz
inc
push
cli
mov
or
and
std
cmp
or
push
cmp
std
aas
stc
mov
xchg
xor
into
and
addr16
push
pop
lahf
xchg
test
int
push
pop
adcl
movsl
pusha
lahf
roll
popf
or
dec
and
test
mov
sarl
ja
push
mov
jnp
inc
adcl
jg
popa
outsl
cmpb
add
mov
dec
hlt
push
mov
push
inc
push
xlat
mov
lcall
xor
insl
xor
dec
fwait
mov
xchg
pushf
scas
in
add
or
iret
mov
inc
fcomi
xchg
leave
mov
dec
outsl
adc
mov
mov
jne
sub
nop
xchg
or
loop
inc
mov
inc
xchg
push
js
inc
out
adc
iret
into
ffree
sub
pop
and
and
dec
mov
push
push
imull
pop
int
and
fstpl
movsb
stos
xchg
fnstsw
popa
xchg
pop
jle
adcb
jmp
idivl
mov
xor
pop
popa
es
in
mov
pop
mov
ja
pop
notb
jbe
int
fmulp
lahf
lods
add
push
in
aaa
in
cmpsb
mov
mov
fldenv
and
jg
xor
pop
mov
mov
or
mov
cs
sti
data16
aad
jge
push
sbb
sub
and
lret
pop
jb
mov
xor
int
icebp
iret
or
loopne
pop
jp
arpl
gs
int3
fwait
mov
mov
push
sbb
lret
inc
dec
loopne
mov
jg
int
sub
sub
or
push
repnz
mov
and
mov
xchg
pop
movsb
int3
pop
sbb
out
xchg
jb
or
loope
sub
xchg
dec
lods
hlt
fwait
mov
fisubrs
mov
pop
repnz
iret
xchg
aas
loopne
mov
fwait
ret
jno
push
xchg
inc
cli
add
push
icebp
push
stos
mov
jg
pop
ja
push
mov
imul
int3
cmp
jecxz
jae
cmp
fnstsw
sub
test
incb
sub
fsubp
mov
stos
xchg
flds
pop
sti
loopne
sbb
loop
mov
repz
std
sub
sub
jmp
sahf
into
or
imul
int3
aam
aad
pop
cmp
iret
xchg
mov
xor
leave
mov
push
dec
add
jg
pop
push
les
cltd
mov
jmp
xchg
aaa
ret
popa
pop
mov
int
dec
loopne
sub
mov
in
roll
add
pop
ror
xor
stos
jns
or
xchg
out
or
cmpsb
fdivr
adc
popf
iret
int
pop
mov
adc
dec
push
jmp
push
movsb
mov
pusha
cmp
inc
mov
fwait
or
shrl
mov
mull
lods
sub
scas
out
sbb
arpl
jmp
mov
and
daa
pop
cld
popa
clc
cli
mov
shlb
pop
test
jbe
adc
js
iret
mov
fnstsw
out
jae
and
jmp
cmovne
in
push
mov
scas
nop
scas
pushf
jo
pop
mov
or
xor
mov
outsl
outsl
dec
addl
in
outsl
into
leave
cli
cs
mov
xchg
int
lcall
and
jo
into
popa
in
sbb
outsl
or
cmpsb
loop
fisttps
xchg
ja
ds
stos
mov
mov
push
inc
pop
cmp
dec
jg
dec
push
cmp
out
lods
lock
xor
mov
sbb
je
int
mov
cmp
add
dec
test
mov
mov
sub
jg
push
cs
lods
cmp
dec
adc
adc
stos
dec
bound
pop
cmp
iret
sub
jl
mov
cltd
sub
out
dec
lds
mov
pop
xchg
inc
jmp
daa
pop
lea
sbb
sub
lahf
pop
inc
or
lods
xchg
cmp
sti
loop
lock
cli
mov
xor
add
lock
push
push
xchg
popa
lret
sbb
sbbb
ficomps
and
xchg
bound
xchg
jge
push
mov
test
subb
popf
data16
add
pop
in
ret
movsl
lahf
loop
fists
xchg
inc
divl
push
sbb
iret
push
adc
add
stos
pop
subl
push
movsl
out
addr16
or
outsb
jnp
mov
or
negb
mov
popf
fisubl
ror
xor
add
ja
xchg
shrb
mov
push
mov
dec
jge
data16
sbbb
mov
imul
insb
xor
test
out
icebp
push
jnp
jno
add
sbb
cmp
lods
lret
and
repz
jl
cmp
mov
dec
mov
faddl
lahf
xchg
mov
push
stc
mov
pop
cli
xchg
dec
jge
or
xchg
loop
sbb
jg
jno
rorl
std
insb
sub
clc
pop
lods
cmpsl
push
add
fnstsw
adc
jge
jle
insb
out
xchg
insb
lea
in
gs
insb
push
xchg
out
inc
mov
sbb
outsl
jl
stos
push
add
repnz
pop
or
dec
mov
ja
adc
lea
push
aam
inc
push
sbb
lret
mov
imul
fldcw
into
cwtl
iret
daa
stos
pop
ficompl
divb
jmp
clc
test
ret
movsb
lods
push
adc
rcrb
lea
ss
scas
jnp
sahf
stos
lcall
cmc
mov
ds
and
and
ret
pop
jl
ds
daa
ja
in
mov
dec
jno
cmc
adc
or
xorl
int
dec
stos
ror
pop
and
fwait
mov
mov
dec
das
lea
lock
das
sub
icebp
mov
int
fimuls
push
xchg
jns
cmp
or
fwait
sbb
daa
and
stos
cmpsl
xor
into
pop
js
push
xchg
addr16
fdivl
iret
jp
and
adc
dec
mov
or
repz
jp
addl
sbb
cmp
sti
cli
mov
jp
pop
xchg
in
retw
xchg
stos
mov
inc
popf
adc
lods
pop
inc
jae
repz
lahf
jmp
cld
stos
sub
xchg
xchg
ds
mov
fdivrl
sub
sub
in
fstpt
mov
movsl
pop
insl
pop
lret
test
xchg
cwtl
stc
mov
adc
sahf
xchg
sbb
iret
jle
jge
push
lret
andb
add
mov
bound
dec
or
in
out
mov
test
lcall
int
xchg
xor
xor
pop
cmp
inc
dec
mov
in
into
movsl
test
adcl
int3
sub
in
outsl
jmp
jno
enter
ss
stos
inc
mov
push
or
enter
xchg
push
lahf
ficoml
pop
or
stos
repnz
shlb
cmp
out
adc
addb
into
rolb
mov
aam
scas
add
lcall
nop
push
fwait
jb
inc
ljmp
in
xchg
pop
stc
jecxz
sbb
iret
popa
or
ret
lock
dec
xor
aas
or
data16
loopne
setns
adc
push
popf
and
outsb
cli
pop
mov
sbb
xor
and
add
divb
mov
or
dec
ja
pusha
xchg
sarb
lea
pop
jnp
sbb
mov
jne
out
jo
into
in
lds
xchg
inc
popf
iret
push
sub
push
pop
mov
adc
inc
bound
xchg
movsb
xchg
sarb
mov
pop
test
mov
pop
and
ljmp
loope
jbe
inc
inc
clc
mov
out
xor
mov
scas
out
sub
jecxz
pop
decb
mov
cli
and
mov
inc
inc
aam
xchg
push
in
repnz
xor
pop
jmp
xchg
adc
jmp
jb
into
jno
imul
xchg
xchg
push
lret
fdivrs
pop
xchg
lea
or
repnz
div
xlat
pop
mov
insl
push
inc
stos
xchg
mov
adc
jg
imul
movsl
lahf
push
lods
repnz
fs
dec
push
sti
cltd
scas
sbbb
mov
incb
or
lahf
dec
cmpsb
jl
and
xchg
sahf
pop
lret
popf
mov
cwtl
bound
sahf
test
test
jnp
push
repnz
push
lock
into
dec
sbb
inc
lods
xlat
or
jb
mov
dec
pop
xchg
cmpsb
loopne
mov
shl
cmpsl
push
pop
int
cmpsb
mov
data16
int
xchg
jne
inc
pop
sbb
xlat
inc
sbbl
pushw
xchg
jg
cli
xor
fiadds
or
lods
addr16
sub
push
mov
hlt
xchg
jmp
mov
xor
f2xm1
jle
in
pop
inc
xchg
rorl
mov
in
push
inc
lea
test
pop
pop
int3
push
call
xchg
into
inc
mov
pushf
xor
mov
push
test
cmp
mov
cwtl
mov
push
add
dec
popa
cmpb
mov
sbb
scas
outsb
negl
xchg
push
mov
stc
lret
cli
jmp
push
jbe
iret
dec
test
into
sub
push
cli
adc
xchg
mov
in
in
pushf
and
mov
loopne
dec
cs
call
insb
fmulp
movsb
sub
sub
pop
lret
stc
aas
enter
popf
repz
mov
jl
outsl
and
inc
xor
mov
xor
push
adc
push
inc
cmp
inc
outsb
iret
in
mov
repz
fdivs
jle
addb
shrl
outsb
jge
test
xchg
fwait
into
incb
push
icebp
sbb
jp
push
or
adc
ror
das
adc
xor
dec
test
jge
insl
stc
mov
ds
push
xchg
mov
mov
mov
decb
sub
hlt
sarb
and
dec
lock
fdivp
or
ljmp
inc
xor
push
pushf
jne
fisubrs
xchg
and
mov
loope
mov
decb
js
cwtl
incl
std
xchg
fistps
xchg
int
push
lea
cmp
stos
sub
xchg
push
jmp
js
inc
xlat
ret
xchg
rorl
int
push
jl
xchg
inc
mov
repz
push
and
mov
inc
rol
fldt
jno
fbstp
or
mov
sub
mov
fcoml
dec
js
mov
mov
or
gs
loopne
cltd
pop
pop
cmp
mov
dec
fmulp
xchg
jnp
push
lods
xchg
int3
mov
jo
xorb
xor
adcb
push
mov
movl
gs
mov
jae
inc
std
jecxz
lret
dec
out
pushl
scas
stc
or
sub
cmp
jl
mov
movsb
mov
adc
mov
icebp
add
and
mov
ljmp
rep
adc
mov
xchg
adc
or
repnz
fidivrl
xchg
out
jnp
cld
mov
sbb
in
pop
stos
mov
cs
mov
pop
in
xchg
or
mov
mov
xchg
inc
or
mov
pop
mov
pop
cs
stos
movsl
cmp
push
pop
aas
mov
push
push
es
jo
xchg
cmp
mov
shl
in
jmp
into
movsb
pop
jmp
jb
xorb
lcall
push
xchg
mov
mov
inc
loopne
push
cmp
out
fcoml
mov
xchg
insl
clc
inc
call
popa
insb
xchg
xlat
insl
shlb
out
mov
das
add
push
xlat
es
fidivs
insl
sahf
cmp
sub
push
dec
jp
lea
mov
dec
ret
jb
mov
es
aas
pop
inc
jne
popf
jnp
jbe
std
jnp
pop
std
inc
jo,pt
push
jo
popa
jnp
mov
scas
dec
arpl
mov
and
cld
push
sbb
mov
lcall
cmpsl
test
dec
dec
inc
loop
push
dec
jo
mov
dec
xchg
ror
cld
addl
out
cli
inc
pop
jle
lock
addb
ljmp
and
adc
inc
clc
pushf
adc
fmull
mov
push
ljmp
sahf
stos
into
ja
sub
iret
dec
mov
notl
pop
push
jg
xchg
pop
sbb
pop
into
les
lods
lock
fidivrs
mov
iret
or
adc
insl
ljmp
in
fstpl
call
mov
hlt
fmuls
push
adc
lahf
js
aad
xchg
out
pop
hlt
into
in
push
inc
scas
push
pop
inc
repz
into
xor
jae
mov
xchg
shrb
inc
sar
sbb
addr16
xchg
or
mov
ljmp
jmp
cmp
mov
int3
mov
ss
mov
shrl
and
lret
outsb
xorb
xchg
xchg
jle,pt
xor
fwait
lock
or
lcall
nop
add
jg
sbb
addr16
dec
and
push
insl
or
mov
sbb
test
out
in
cltd
dec
dec
pop
sbb
xor
iret
std
fcmovne
shl
sbb
mov
pop
cltd
movl
dec
push
inc
outsl
imulb
shrl
loope
out
jno
inc
fwait
xchg
pop
mov
insb
int3
stc
pushf
into
nop
cmp
cli
gs
mov
ret
add
popl
jno
sbb
iret
and
cld
jp
aaa
pushf
into
mov
mov
xchg
aam
pop
pusha
ljmp
fistpll
xorl
stc
lds
xchg
jmp
ds
pop
iret
xchg
or
insl
movsb
pop
loop
das
stc
jae
je
scas
xlat
mov
in
or
mov
mov
js
cmp
jp
addr16
call
mov
mov
js
and
icebp
outsl
gs
aas
jecxz
lahf
xchg
xchg
pop
call
sub
leave
dec
pop
mov
gs
lods
mov
pop
loopne
int3
push
enter
insl
gs
adc
push
es
or
jne
iret
pushf
mov
push
into
push
cmpsb
movb
repz
mov
add
fisubrs
and
mov
pushf
dec
repnz
push
ds
mov
push
pop
jp
outsb
sub
mov
pop
data16
fcompl
das
lock
lds
lret
lods
jae
dec
out
push
addr16
pop
and
jp
insl
inc
pushf
mov
clc
and
xor
cmp
sub
inc
ret
and
imul
mov
outsl
mov
inc
nop
mov
mov
cmp
jbe
sbb
in
test
jnp
mov
int3
int
jb
xor
xor
jl
jo
iret
sti
mov
jl
dec
cmp
fsub
adc
repnz
sbb
mov
xchg
lcall
shl
jg
pop
mov
pop
sbb
repnz
sub
inc
outsb
rclb
lods
add
sets
or
cmp
mov
jecxz
jne
adc
ret
out
xchg
lods
scas
dec
fildl
lock
jg
filds
xor
into
mov
js
push
dec
insl
mov
xchg
iret
cmp
and
into
pop
ja
xchg
pop
lea
inc
pop
jl
sbb
aam
mov
sub
mov
mov
jle
push
jbe
fstl
ss
or
add
fcom
push
cmpsl
mov
xchg
rcl
dec
scas
outsb
repz
pop
mov
vmread
mov
sub
in
xor
cmp
xchg
iret
sbb
or
or
xor
cmpb
rorl
push
sarb
ss
mov
xchg
jne
adc
push
popa
out
mov
bound
push
mov
or
in
and
xchg
aad
jl
add
bnd
pop
ret
jne
dec
mov
and
push
popf
lock
lcall
jp
push
jbe
sub
ds
jno
lods
movsl
jp
mov
gs
out
push
bound
or
rorl
lahf
into
and
jb
push
int
dec
mov
das
into
inc
mov
push
mov
mov
mov
xor
in
mov
mov
push
outsb
cs
jno
stos
xor
ss
hlt
push
or
mov
pop
push
inc
mov
jge
xchg
mov
imul
scas
bnd
inc
fbld
mov
lods
cmc
dec
stos
lock
xor
push
mov
arpl
pop
push
jmp
je
pop
cmp
or
xlat
lahf
into
xchg
enter
in
pop
push
sbb
cmp
aaa
jmp
ja
add
sahf
lea
mov
lods
or
pop
sbb
fidivl
add
push
cmpsb
jns
pop
pushl
sti
pusha
sub
jb
inc
mov
inc
push
aas
jp
mov
ds
sub
xchg
xor
dec
pop
mov
shlb
push
mov
stc
jae
sbb
divb
orl
ljmp
xchg
fcompl
ret
push
add
lahf
xor
addr16
and
jl
jmp
xchg
outsl
clc
mov
ret
xchg
adc
mov
hlt
aaa
fcompl
stc
into
movsl
push
iret
aad
and
xchg
repz
jno
push
call
push
int
daa
fs
ficomps
cli
dec
movsb
push
mov
outsl
gs
roll
xor
xorb
cmpsb
rcr
cmp
xchg
into
ss
push
iret
or
xchg
mov
daa
js
into
mov
push
fidivrl
icebp
cli
outsb
ja
push
or
mov
pop
dec
cltd
into
jo
mov
int3
ljmp
xor
dec
xor
aam
mov
lods
mov
mov
mov
or
push
push
cltd
mov
pushf
jbe
inc
jle
lret
add
cmp
jle
outsb
aad
dec
cmpb
jle
movsb
pop
jle
mov
adc
sbb
lcall
das
cmp
xlat
pop
in
push
pop
out
repnz
pop
mov
pop
insl
dec
adcb
js
popa
jle
pop
dec
cmp
pop
cmpsb
inc
fidivrl
push
mov
dec
pop
repnz
into
clc
out
push
pop
mov
imul
push
and
int3
cld
scas
dec
mov
push
aam
repnz
je
mov
xchg
cwtl
jbe
dec
add
pop
fwait
jbe
jg
into
inc
pop
push
pusha
in
dec
fwait
push
push
dec
pop
jg
pop
outsb
xchg
add
lea
xor
sahf
clc
outsb
cs
dec
test
iret
and
into
sbb
das
mov
push
dec
mov
sub
outsl
cmp
fimull
bnd
mov
sbb
fdiv
in
into
jle,pt
out
pop
aaa
dec
outsb
pop
daa
pop
fists
iret
pop
pop
pop
out
pop
enter
push
out
loopne
mov
sbb
cmpsb
adc
pop
pop
imul
test
jg
sbb
sbb
dec
ja
push
xchg
pop
push
dec
ficoms
push
adc
testl
xchg
jp
push
es
ss
jg
jbe
ja
push
js
xor
ss
decb
push
imul
outsb
out
insb
das
xchg
mov
iret
sbb
scas
inc
push
xchg
call
inc
push
fwait
outsl
jp
push
lahf
push
add
into
jbe
inc
pop
ss
jle
mov
push
jg
jg
or
jg
push
jmp
js
repnz
ds
mov
jle
xchg
jnp
xchg
ss
pop
jp
push
dec
mov
or
push
jle
xchg
ss
or
in
pop
push
mov
push
jle
fiadds
xchg
jle
pop
mov
jg
pop
push
mov
call
sub
fmul
xchg
dec
sub
fistpl
push
das
xchg
sub
xchg
pop
std
and
daa
dec
ljmp
mov
sahf
shrb
loope
xor
lea
cmpsb
lcall
sub
xlat
pop
inc
incl
popf
or
cmp
pusha
add
lods
xchg
pop
cmp
pop
iret
cmp
pop
lcall
mov
pop
push
gs
mov
xchg
fistps
loopne
and
xchg
pop
ret
fnstsw
xlat
pushf
jmp
push
mov
jno
dec
imul
or
jle
mov
dec
lcall
mov
cmp
cltd
cmp
push
cmp
lea
jb
mov
mov
mov
mov
hlt
test
imul
inc
movsl
testl
addr16
lcall
std
idivl
enter
push
fdivr
adc
fsubp
call
pop
mov
jo
sbb
test
adc
pop
mov
decb
xchg
pop
cmp
jno
cmp
inc
popa
lods
imul
in
push
mov
push
and
cmp
mov
add
mov
jbe
aam
mov
jmp
jle
mov
jne,pt
jle
dec
inc
outsb
shr
mov
and
ficomps
pushf
mov
pushf
cmp
jle,pn
test
jle
int
push
xor
ret
outsb
mov
testl
lock
jne
jbe
sbb
jg
jbe
mov
jle
push
lods
add
pop
mov
sar
sub
ja
jmp
jl
or
fcoml
xor
push
mov
cli
mov
jbe
roll
cmp
lcall
loopne
orb
push
jle
outsl
sbb
out
push
sahf
dec
push
sub
fiaddl
jle
xchg
pop
fstpl
fptan
jno
into
jle
push
imulb
pop
int3
adc
dec
cmpsl
ss
push
jl
pop
imul
lcall
repnz
lahf
xchg
cs
jle
jbe
shlb
or
xchg
xchg
push
pop
push
jp
mov
out
dec
out
xlat
xchg
jle
inc
pop
push
push
jle
jp
cmp
das
pop
or
pop
addr16
push
xchg
fwait
scas
cmp
sbb
jle
cmp
mov
sbb
or
push
ss
aaa
ss
outsl
sahf
hlt
or
jg
aaa
repnz
sbb
add
jbe
lahf
push
pop
ljmp
test
movl
xchg
fbstp
cmp
loope
in
fists
ds
xchg
dec
out
cld
pop
xchg
or
clc
mov
or
out
pop
js
repnz
xlat
jp
pop
sub
xchg
daa
push
dec
jle
fidivs
or
cmpl
push
xchg
aas
or
adc
testb
xchg
repnz
ss
in
xchg
push
pop
jle
cs
into
into
std
jle
iret
xchg
pop
mov
pop
lcall
push
xchg
or
inc
decb
outsl
xchg
ficoms
or
fiadds
mov
dec
or
cs
out
insb
mov
jno
stos
in
mov
jmp
loope
scas
xchg
repz
subb
cmp
inc
into
imul
popa
mov
mov
aaa
mov
lods
scas
mov
stos
gs
iret
ljmp
sbb
inc
jge
lods
fisttps
stc
or
movb
push
mov
xchg
mov
divl
xor
leave
sahf
sub
lods
jne
outsb
dec
addr16
mov
lret
sbb
jbe
fldcw
pop
leave
cmp
sbb
mov
adc
int
jbe
dec
bnd
xchg
stos
int
cmp
mov
or
repnz
repz
repnz
jns
or
dec
jmp
int3
mov
pop
or
mov
popa
pop
push
pushf
lahf
popa
add
outsl
clc
dec
orb
inc
lods
lret
call
cmp
inc
cmp
xor
cmpsl
dec
pop
cmpsl
and
int
movsl
or
inc
notl
mov
dec
or
xchg
repnz
gs
xchg
ja
ficoms
dec
movsl
popa
xchg
popl
and
xchg
xchg
scas
or
xchg
int
pop
dec
int3
addl
xor
jp
out
sbb
ss
mov
jae
inc
push
mov
inc
xorb
and
mov
stos
mov
das
jae
repnz
dec
mov
lret
dec
cs
popl
ds
sbb
out
and
mov
xorl
scas
inc
orb
adc
ds
pop
fwait
mov
loop
add
js
dec
fists
mov
lcall
push
mov
jnp
sub
js
jae
int
ret
dec
out
lea
xor
das
adc
mov
fistl
call
movsl
fwait
movsb
enter
call
cli
pop
push
bound
repz
push
scas
adc
fistpll
and
pop
inc
mov
dec
lahf
push
push
mov
jle
push
pushf
cmpsl
adc
repnz
mov
jbe
jle
jb
jle
inc
fs
pop
ds
ret
push
dec
dec
ds
scas
cmp
push
mov
adc
lcall
xchg
pop
jg
pop
jle
insl
insb
push
lods
fstl
push
fwait
sub
jle
clc
xchg
lahf
xchg
sbb
outsb
stos
mov
mov
pop
inc
cmpsl
lret
jnp
push
xchg
iret
dec
ja
push
aad
add
pop
int3
push
pop
decl
xchg
cli
repnz
mov
push
icebp
xchg
push
add
fcoml
push
das
pop
jg
sbb
punpcklbw
xlat
int3
test
mov
push
fists
push
ds
scas
adc
fwait
ds
push
jbe
adcb
pop
dec
lret
pop
dec
pop
mov
cli
testb
andps
mov
mov
pop
idivb
sbb
sbbb
mov
dec
ss
daa
cmpsl
out
icebp
lahf
mov
xacquire
scas
daa
push
push
jge
and
jge
push
aas
push
mov
jge
dec
push
dec
popl
dec
out
outsb
jp
add
fimuls
sbbl
push
mov
dec
lahf
push
into
dec
mov
dec
decl
pop
pop
or
sbb
addr16
std
sub
hlt
popl
push
notl
ss
cld
ds
sbb
sbb
sbb
mov
into
insb
negb
jnp
push
mov
xchg
into
aaa
push
test
mov
push
data16
push
xchg
daa
aam
jle
xchg
push
push
fwait
pop
cmp
bnd
sbb
xchg
sbb
sbbb
mov
dec
ja
addr16
and
mov
es
jl
push
decl
sti
cmp
imul
xchg
xlat
movhps
push
push
add
fidivrs
es
sahf
pop
pop
push
jg
xchg
sysenter
sub
lahf
jmp
repz
das
pop
daa
insl
sub
mov
mov
mov
push
cmpsl
pop
das
mov
negl
stos
bound
push
push
test
push
int
mov
cmp
pop
iret
add
lahf
pop
addb
stc
fwait
lahf
mov
stos
cmp
fisttpl
repnz
fcoms
shll
cli
xchg
and
lock
loopne
mov
jp
cmp
or
fsubl
int
sbb
dec
xchg
scas
mov
adc
repnz
jb
and
mov
push
ficoms
in
mov
in
dec
cs
mov
popa
into
in
aad
mov
enter
mov
pop
cltd
fmulp
imul
mov
jb
popa
inc
and
mov
sub
iret
adc
mov
int
mov
sahf
mov
cmpsb
loope
out
loop
int
mov
mov
into
clc
lahf
add
mov
outsb
mov
notb
or
inc
lods
push
and
scas
in
out
pushf
movsb
jbe
xor
cmp
cmpsl
mov
cmpb
mov
lret
lcall
xchg
in
push
call
mov
ds
decl
mov
cmp
out
inc
daa
pop
xchg
pop
mov
xor
push
mov
mov
and
xchg
sbb
cmp
push
mov
mov
fs
push
roll
call
cmc
push
or
iret
add
cli
lret
int
movsb
jge
out
loopne
fnstsw
es
sbb
outsl
ret
xchg
pop
pop
and
and
xlat
xchg
add
ds
scas
sub
mov
add
int
cmc
and
out
push
jge
movsl
mov
imul
repz
mov
cmp
jle
arpl
lods
iret
mov
xchg
sti
scas
mov
dec
push
shrb
mov
lods
xchg
and
push
add
fcoml
sub
cld
loope
pop
inc
jns
lods
int
and
into
inc
jbe
in
sahf
add
sbb
mov
jp
inc
sub
sti
repz
mov
data16
add
into
sub
jnp
mov
popf
xlat
jno
cli
adc
jg
jle
cwtl
push
mov
iret
cltd
cmc
aad
test
jb
and
int
mov
push
dec
js
movsb
loope
daa
leave
jmp
mov
pop
insb
iret
fstps
loop
movsb
adc
push
mov
mov
addr16
mov
xchg
orb
pop
pop
cwtl
into
pop
xor
lret
pop
push
mov
cld
in
rcll
hlt
sub
cmpsb
pop
cmpsb
lea
js
hlt
dec
or
inc
xchg
rcl
aad
ror
jp
loope
lds
into
pop
or
ljmp
nop
pop
xor
push
sbb
test
test
pushf
fbstp
mov
push
and
adc
xor
mov
cmp
lahf
sbb
into
inc
cmpsb
jo
cmp
stos
pop
data16
int
push
sbb
and
lret
inc
cmp
ljmp
lcall
cs
nop
or
roll
lods
imul
repz
lods
xchg
shr
aaa
push
cld
ret
adc
pop
push
aas
cld
jg
pop
jmp
mov
xchg
insl
pusha
jnp
xchg
sub
or
in
mov
out
fsub
cmpl
pop
xor
mov
into
sbb
adc
cli
outsl
fildl
pop
adc
xlat
cli
outsl
nop
int
dec
in
iret
cmc
jns
pop
rolb
pop
int3
sbb
lds
sub
addb
lock
mov
sub
add
dec
enter
lret
fstl
sub
add
icebp
enter
add
push
aad
mulb
pop
aam
sbb
xchg
lret
lret
fistps
lahf
xor
mov
out
test
iret
test
gs
sbb
pop
iret
insb
xor
dec
lret
xchg
ret
push
sub
push
int
adc
pop
outsb
dec
jne
ja
iret
fcmovnb
jnp
push
icebp
dec
jle
subb
inc
xchg
mov
mov
mov
push
enter
push
call
add
lock
pop
push
or
scas
iret
ss
xor
pop
inc
pop
jl
pop
movd
hlt
das
adc
ret
adcl
scas
repz
jecxz
lahf
lods
jbe
inc
add
inc
mov
xchg
ret
lock
sbb
pop
fisubrl
rep
int
jb
xchg
popf
mov
loope
jmp
fistl
mov
cmp
in
inc
pop
xorb
mov
lods
mov
ror
xor
int
lret
pop
aad
ret
lds
in
xor
or
mov
pop
or
aaa
sub
outsl
outsl
or
lods
rcr
divb
pop
into
pop
lahf
push
lods
fnstcw
int
test
inc
fmuls
movsb
lahf
jno
add
or
jp
lods
jle
or
pop
adc
cltd
or
ljmp
and
dec
in
or
notb
inc
sarl
push
mov
mov
ss
and
xor
xchg
imul
mov
cmp
or
icebp
aas
out
mov
push
out
jg
in
inc
loopne
inc
repnz
mov
push
sarl
inc
jle
out
into
mov
dec
fiadds
out
sahf
mov
call
lret
jp
jbe
lret
pop
test
dec
cmp
jp
cltd
pop
pop
pop
lahf
inc
shl
out
pusha
adc
into
xchg
js
adc
std
hlt
aad
lea
ljmp
inc
scas
mov
sub
imul
scas
stos
jecxz
in
fisubrl
jnp
cmp
mov
mov
mov
jmp
xor
inc
mov
addr16
ds
cmp
xor
dec
add
push
loopne
pop
push
inc
in
inc
cli
push
roll
mov
cmpsb
mov
mov
outsb
shrl
jne
dec
data16
outsl
push
gs
jnp
mov
clc
fiadds
jo
jg
xchg
fldl
mov
xchg
addl
sub
mov
lods
xor
pop
and
stos
mov
cmp
pop
or
ret
int
mov
repz
stc
in
pop
inc
aad
xchg
and
incb
dec
inc
rcrl
xor
jp
loope
dec
lea
or
sti
sahf
xor
lea
xchg
cltd
lea
mov
int
mov
in
adc
mov
pop
into
int
lods
mov
out
push
sahf
daa
dec
arpl
outsl
adc
push
nop
addr16
xor
mov
scas
or
pushf
addb
test
pextrw
pop
sahf
lods
in
dec
sbb
in
mov
je
gs
stc
sbb
xchg
mov
mov
stos
cmp
mov
je
popf
gs
xchg
ror
xor
or
mov
cltd
mov
pushf
out
int
repz
fs
fxch
jne
stos
loop
jp
push
int
popf
je
dec
push
xchg
inc
in
lahf
mov
inc
sub
lret
test
push
xchg
das
push
lea
movsl
jns
xor
xor
dec
stos
mov
addr16
clc
ja
xchg
adc
std
popa
stos
pop
xchg
pop
push
sbb
rcll
pop
or
imul
push
and
sub
push
lods
insb
fwait
ss
data16
imul
push
gs
outsl
cmp
pop
dec
and
mov
clc
jle
add
and
sub
push
test
out
enter
push
ds
ss
pop
cmc
lcall
cmpsb
xchg
inc
iret
dec
pop
imul
or
iret
lret
jle
xchg
into
cmp
out
pop
fidivs
and
jl
mov
mov
hlt
mov
mov
inc
repnz
cs
std
js
push
insb
mov
aam
xorb
jg
add
rcll
sahf
xchg
pop
lds
or
push
or
scas
int3
add
outsl
pop
mov
inc
icebp
cs
add
leave
cli
jp
push
cmpb
or
mov
mov
pop
in
ljmp
js
dec
mov
sub
pushf
sbb
add
mov
shrd
popf
inc
mov
mov
pop
hlt
scas
aaa
jne
or
int3
sub
mov
inc
icebp
mov
jns
mov
or
pop
pop
mov
lcall
mov
outsl
xchg
mov
adc
push
mov
pop
pop
add
test
and
sarb
popf
shrb
int
sti
imul
sbb
jecxz
add
imulw
aas
and
ficoml
and
xor
and
push
jbe
mov
loopne
into
pop
mov
ss
cltd
xchg
adc
adc
mov
sbb
mov
push
bound
push
loope
sti
pop
inc
fimuls
cmc
aam
cmp
mov
fmulp
dec
inc
mov
aas
ljmp
mov
mov
dec
jbe
jge
sub
and
mov
call
or
mov
pop
xchg
nop
cmp
and
shlb
cmp
fimull
das
fisubrs
adc
cmc
jl
xchg
repz
add
test
inc
jne
mov
stc
adc
add
inc
pop
sahf
iret
sbb
push
movsb
inc
icebp
pop
xchg
mov
out
cmp
cmp
add
inc
add
loop
out
addr16
push
pop
dec
imul
in
push
mov
rclb
fisubrs
fimull
sbb
xor
aaa
mov
jg
stos
push
jecxz
ficomps
popf
add
cwtl
in
xchg
xchg
lods
lods
mov
mov
and
imul
inc
bound
ljmp
pop
add
sbb
add
mov
lods
dec
adc
push
lcall
push
repnz
leave
jb
roll
js
fwait
shl
push
jle
jle
lods
sub
adc
mov
dec
or
sahf
lcall
and
pop
es
jle
clc
stos
pusha
outsb
icebp
jmp
in
pop
or
scas
dec
pop
or
add
adcl
hlt
dec
dec
loope
cmpsl
mov
jae
aaa
xor
lods
sub
push
dec
pop
or
push
dec
cmpsb
in
jle
insl
dec
in
stos
call
aaa
or
lcall
adc
jmp
and
cmp
adc
popf
mov
cmpsl
leave
sbb
cmp
mov
out
xchg
push
ss
iret
push
jg
jl
decb
sub
iret
imul
jl
adc
or
nop
incl
loopne
cmpsb
cmp
ss
sti
adc
mov
cli
sbb
fnstenv
sarl
test
scas
xor
xchg
in
adc
jo
test
add
cli
or
std
adc
daa
gs
pusha
add
in
and
outsl
inc
xor
popf
sbb
cmp
jns
or
dec
sbb
out
fstl
movsl
aas
outsb
xchg
mov
xlat
mov
out
adc
rorl
sarb
mov
movsl
jne
ffreep
cs
fistpll
divb
fdivp
fnstcw
popf
cwtl
dec
jno
imul
xor
movsb
fwait
fs
jb
mov
pop
aam
mov
push
and
in
jb
ret
test
fdivp
add
adc
into
test
mov
inc
in
repz
xor
fnsave
gs
repnz
gs
xchg
subb
mov
sub
mov
adc
sbb
cmpsl
mov
outsb
lds
idiv
iret
in
dec
test
pop
fists
test
aaa
adc
push
adc
out
push
xlat
ss
pop
sub
into
ljmp
lcall
orb
pop
iret
dec
ss
add
ficomps
int
add
sub
adc
repz
stos
ds
cmpsl
hlt
loop
scas
xchg
xchg
loopne
gs
push
dec
into
xchg
add
sbb
or
inc
cmp
jb
lods
ss
mov
sbb
sub
jb
fcomip
mov
pop
jmp
xchg
repz
mov
push
pop
lea
lods
iret
movsb
jno
push
lea
sbb
das
clc
mov
lods
lcall
sti
into
and
dec
add
stos
sahf
cwtl
cmpsb
into
cmp
in
sub
mov
sbb
popa
adc
xchg
dec
pushf
jnp
jo
rcll
and
and
inc
sbb
mov
scas
icebp
int
movsb
pop
iret
xchg
pop
jecxz
cmpb
or
hlt
outsl
xor
sub
mov
push
inc
scas
loope
dec
mov
aaa
jg
inc
xor
push
int3
or
mov
mov
cmp
inc
adcb
stos
das
jns
iret
add
dec
mov
cmpl
ss
iret
je
mov
pop
jp
jecxz
jmp
mov
cli
pop
jbe
lcall
mov
mov
sbb
in
dec
arpl
pop
or
aam
popf
mov
xchg
xchg
dec
pop
test
cmc
cmp
sbb
jp
pop
in
or
or
pop
mov
adc
daa
leave
insl
jns
rclb
addr16
mov
push
scas
xor
xlat
ja
sub
das
sti
out
mov
mov
sti
mov
jl
lret
mov
fwait
dec
stos
sti
repz
sbb
sti
shll
das
std
mov
xchg
and
dec
pop
cmc
in
xor
inc
js
pop
stos
loop
movsl
inc
scas
in
mov
mov
mov
sub
push
aas
mov
pop
jnp
mov
ret
pop
sub
pop
ficompl
fincstp
jg
int
jle
int
adc
and
mov
dec
add
xlat
repnz
mov
iret
jne
and
mov
roll
movsl
pop
pop
push
mov
fiadds
sbb
xchg
pop
inc
sub
or
and
pop
mov
fcmovbe
push
xchg
inc
iret
mov
lret
mov
lea
jbe
inc
ret
jl
fmulp
shl
sub
aas
jg
dec
sbb
out
ficoms
pop
incb
or
mov
add
bound
mov
aam
sbb
jmp
das
test
xor
cli
lahf
mov
call
mov
xor
loop
adc
iret
mov
aas
icebp
or
jns
jo
mov
mov
in
jno
mul
mov
mov
sub
daa
stos
and
mov
push
stc
mov
shl
cmpsb
in
jg
lahf
test
or
ljmp
mov
sti
mov
mov
mov
jmp
push
pop
ljmp
out
int
loop
pop
shll
iret
cs
xchg
test
es
ret
xchg
dec
clc
jno
addr16
fmul
lods
push
lea
and
rcrb
jns
and
notl
sar
mov
subb
ljmp
mov
adc
inc
jg
int
test
mov
fdiv
ljmp
sbb
xchg
out
adc
inc
mov
pop
sbb
adc
and
jo
arpl
je
arpl
jle
andl
cmpb
mov
sbbb
cmpsb
adc
arpl
daa
stos
ljmp
xchg
iret
cwtl
repz
jo
xor
enter
xor
ljmp
shll
pop
xorb
loopne
mov
bound
stos
hlt
mov
lea
decb
popf
dec
sub
pop
test
in
push
mov
or
popf
sbb
in
int
or
mov
push
add
divl
ljmp
sbb
repnz
jb
mov
lcall
loopne
push
xor
push
js
ret
stos
xchg
xor
cli
js
bound
roll
les
fdivrs
pcmpgtb
xchg
jbe
and
ljmp
mov
mov
sbb
test
inc
xchg
repz
sahf
jae
sbbb
xchg
in
shll
test
lahf
out
xchg
mov
xchg
scas
push
fldt
sub
mov
movsb
sahf
jmp
mov
mov
push
sbb
lcall
sahf
add
test
xchg
jp
outsb
sub
pusha
pushf
pcmpeqd
cwtl
ret
and
call
jbe
push
popf
xor
cmp
pop
inc
cmp
mov
jle
cli
aaa
jl
leave
aas
pushf
lods
test
add
jle
pop
subl
orb
pop
int3
out
in
sahf
adc
outsb
push
clc
lods
xchg
sub
mul
sahf
pop
aaa
mov
loop
lcall
pop
mov
cwtl
rcrb
fstpl
jns
ja
sahf
sbb
imull
and
ljmp
js
lahf
pushl
or
and
sub
es
sbb
adc
dec
and
inc
lea
push
stc
fs
sti
icebp
jo
js
imul
sahf
call
push
pop
pop
sbb
loop
lea
ja
lods
imul
xor
mov
pop
or
lcall
sahf
xor
xchg
push
pushf
fwait
bound
mov
inc
jg
xorb
mov
inc
bound
fdivr
push
fmull
inc
jno
sbb
sahf
push
in
dec
pop
outsb
adcl
mov
add
sahf
push
outsl
data16
mov
xor
sub
fdivrs
mov
sbbb
rclb
jb
jo
jge
cwtl
adc
cmp
js
xchg
fwait
add
mov
adc
and
xor
jbe
mov
sahf
jo
mov
bound
xor
ror
push
dec
jp
mov
sub
mov
jl
stos
cmc
xor
test
jle
test
cmpb
es
ficompl
pop
xchg
inc
clc
sahf
test
pusha
xchg
mov
lcall
into
sahf
adc
mov
cmpsb
sub
lcall
push
outsl
sbb
sbb
fs
xlat
add
dec
mov
sbb
movsl
sub
xor
js
mov
hlt
and
sbb
js
xchg
jecxz
fwait
push
sbb
mov
ljmp
js
xlat
and
lods
lcall
lcall
loopne
mov
cld
fidivs
adc
and
pop
mov
xchg
test
sahf
rorb
push
cli
cmp
aam
xchg
xor
adc
ljmp
shrb
xchg
jbe
movsb
mov
es
sub
fsub
mov
mov
fdivp
mov
fsub
ret
dec
lcall
shll
jle
push
mov
cld
pop
jno
mov
mov
ja
lea
pusha
dec
xchg
add
dec
push
inc
fistpl
mov
mov
xchg
fdivrl
leave
pop
pushf
js
push
test
xchg
ret
sahf
call
sub
xchg
js
or
push
adc
mov
dec
mov
cld
adc
hlt
std
test
jle
lods
mov
mov
mov
fstps
js
jbe
inc
enter
jns
cmp
push
js
clc
mov
test
jmp
iret
rolb
jmp
pop
cltd
mov
cmp
insb
jae
sbb
mov
dec
fistpl
push
or
cs
loope
aam
sahf
add
push
mov
cmpl
pop
pop
jbe
lds
out
popf
jge
mov
adc
push
loope
inc
xchg
test
or
pushf
adc
jo
iret
call
mov
sbb
jle
mov
xchg
and
lahf
nop
sahf
daa
ret
js
jl
lret
xchg
cli
jp
push
sbb
mov
push
mov
ficoml
xchg
sahf
and
push
jns
jp
xchg
xchg
js
lods
jg
test
lea
inc
outsl
mov
pop
mov
fistpll
xchg
pop
sub
sub
pop
push
and
idivb
jle
jle
sahf
xor
in
inc
pop
jo
stc
rolb
mov
or
lahf
cmp
xchg
adc
pop
push
mov
pop
inc
lcall
sbb
jle
aaa
gs
adc
daa
sahf
dec
loope
ret
call
imul
mov
mov
dec
dec
dec
xlat
cmp
jp
sti
sahf
push
and
mov
sub
pusha
mov
outsb
cmpl
mov
ficomps
or
sbb
sahf
gs
jl
mov
cmp
imul
push
pop
pop
fs
aaa
pop
push
in
jle
sti
int3
sahf
ja
jp
mov
rorl
sahf
jno
cwtl
outsb
adc
lcall
sahf
test
scas
jle
sbb
subl
sahf
jp
sti
mov
add
sbb
pop
jp
xchg
mov
movsl
inc
dec
pop
cmp
adc
lret
push
push
or
mov
loope
jle
sub
nop
mov
cmpsb
cmp
adc
aas
mov
in
jp
addr16
mov
pushf
iret
jp
push
movd
addr16
pop
ds
popf
lcall
nop
lahf
cmpps
test
pushf
js
stos
pusha
faddl
sahf
cltd
out
xchg
lahf
push
pop
xlat
nop
push
je
mov
ljmp
rcr
orb
movsl
pop
pop
or
add
or
jno
lcall
rcrl
dec
notl
cwtl
mov
js
or
jecxz
test
jp
xlat
rcrl
jo
jl
stos
xchg
push
lcall
sahf
sub
add
testl
cltd
push
and
mov
jno
xchg
mov
fwait
testl
adc
leave
je
fwait
mov
xchg
scas
scas
xchg
outsl
push
mov
mov
mov
jno
repnz
sahf
rol
jp
les
cwtl
fbstp
xchg
insb
xor
xor
loope
fadds
loop
sub
lcall
push
xor
jnp
cmp
and
jno
mov
popf
rcl
insb
lahf
stos
sahf
in
sbb
push
jl
inc
pop
xchg
bound
jp
adcb
sahf
jmp
pop
lock
ffreep
movsl
sahf
cmc
fistl
pop
mov
xor
inc
add
sbb
scas
cmp
mov
mov
into
call
cmp
mov
pusha
pop
cld
repnz
fmuls
lcall
sub
add
loop
mov
add
rclb
push
mov
jle
pop
cmp
frstor
stos
pushf
adc
mov
adcl
cwtl
sbb
inc
arpl
sub
push
add
lods
mov
jp
xchg
xchg
and
sahf
sub
jnp
ss
and
mov
ficoms
mov
idivl
icebp
dec
pop
push
xor
ret
rcll
add
jle
jle
add
sahf
cmp
mov
ds
cltd
pop
mov
in
inc
lods
cmp
xchg
jae
sbbl
js
pop
std
jl
sti
push
int3
shr
sahf
inc
push
orb
stos
jbe
popa
adc
inc
jnp
add
dec
jmp
lea
add
jae
bound
sbb
inc
jg
sahf
push
movsl
mov
push
jb
mov
jbe
leave
pop
ljmp
add
scas
pshufw
clc
or
sub
sahf
data16
cmp
pusha
mov
mov
xchg
repnz
aad
push
and
sub
cmp
adc
mov
pop
xor
outsb
jo
out
add
sti
and
lods
lcall
sahf
je
call
xchg
jbe
adc
sahf
jo
ja
dec
arpl
mov
jg
into
sahf
jl
pop
mov
int
lahf
js
xchg
jp
and
sbb
xor
mov
aas
cmpsl
pop
mov
lcall
push
int3
pop
subl
adc
mov
sahf
xchg
push
sbbb
push
sahf
addb
jle
and
mov
push
pop
xchg
sahf
mov
test
cwtl
loope
jl
xchg
pop
nop
js
jp
nop
push
hlt
sbbb
lret
gs
xchg
test
add
phsubd
pop
dec
mov
iret
xchg
test
popa
mov
xor
push
rcll
sahf
mov
pop
push
add
jl
ficoml
mov
stc
test
jp
icebp
xchg
movsl
push
jns
jp
add
jp
nop
out
cmp
into
sahf
int3
roll
nop
push
jno
push
insl
pop
jmp
lcall
xchg
enter
jo
pop
lahf
js
mov
lods
test
pushf
aam
out
mov
push
lret
sahf
rol
mov
pop
xor
pop
js
xor
mov
mov
lahf
ficoml
test
mov
mov
negb
inc
popa
sahf
loop
sub
or
popf
movsb
unpckhps
sbb
aas
and
lahf
bnd
jl
imull
js
lret
mov
jg
aad
mov
push
add
mov
jp
repnz
or
or
cmp
xchg
nop
cmpb
jbe
aas
adc
xor
add
lahf
jp
and
mov
push
xor
es
lock
addr16
jbe
push
xchg
ds
bound
mov
add
daa
jb
mov
sub
scas
shr
call
fldl
pusha
mov
sub
rcr
js
lods
add
sahf
cmp
aas
mov
ficoms
cmp
cmp
jecxz
inc
or
hlt
lcall
sahf
dec
or
dec
or
sub
in
jg
lahf
jp
jecxz
call
dec
testw
jge
ret
add
adcb
call
mov
mov
in
mov
sbb
lods
insl
sub
push
push
inc
sub
scas
mov
sub
sbb
cmp
aas
jns
mov
js
stos
jle
cmp
cmpsl
mov
test
lahf
xor
mov
pop
mov
scas
xchg
push
lret
add
test
adc
cltd
cmpsl
pop
jecxz
sub
adcb
and
negb
push
mov
scas
dec
sarb
cwtl
push
xor
jp
adc
mov
sahf
adc
mov
seto
fistps
pop
mov
cmpsb
pusha
adc
sbb
test
hlt
out
adc
mov
js
stos
loop
out
sub
jp
cmp
rorb
in
sahf
push
int
jp
sbb
fnsave
sahf
cld
mov
popa
nop
fwait
mov
sahf
clc
popf
cmpsb
dec
jle
jbe
loopne
iret
mov
dec
mov
add
scas
mov
push
jg
cmp
iret
push
adc
lcall
cwtl
loop
mov
inc
push
xchg
in
xchg
or
pushf
out
sbb
sahf
call
pop
push
pushf
ljmp
sahf
hlt
dec
movsb
mov
push
jg
testb
push
or
mov
pushf
dec
in
leave
jmp
test
sahf
fisubrl
cmpsl
pop
sahf
fdivrs
dec
lahf
rcrb
stos
mov
and
mov
lods
mov
out
out
pushf
sahf
shl
movsb
negb
sub
pop
enter
jge
and
sbb
into
out
add
jns
lret
je
xchg
call
jp
mov
sahf
rolb
bound
sbbb
icebp
cwtl
mov
jecxz
popf
mov
insl
in
add
pop
mov
movsl
lahf
aaa
mov
cmpsl
dec
fsubs
jp
push
mov
insl
mov
add
push
pop
cmpsb
sahf
lods
and
add
cwtl
cmp
pushf
js
mov
lret
sahf
stos
xchg
mov
fldcw
push
cmpsb
mov
nop
push
push
loopne
dec
xor
sahf
xchg
push
scas
scas
sbb
mov
sbbb
push
scas
cwtl
lcall
sahf
mov
cmp
add
nop
push
sbb
lahf
mov
jns
fimuls
out
sahf
xchg
cmpsb
push
xor
test
jno
jl
lods
fwait
jle
adc
sahf
jle
movsb
mov
rcr
jb
xchg
mov
sahf
jbe
cmpsb
push
pop
je
mov
jle
sahf
outsb
pusha
scas
xchg
jmp
jo
mov
insb
lcall
sahf
pusha
adc
adcl
sahf
pop
frstor
cvtps2pd
dec
bound
mov
sahf
push
popf
scas
fs
jle
pop
cmpsb
insl
xchg
cmpsb
push
add
dec
sahf
dec
aam
cmc
cmp
or
jle
dec
mov
dec
dec
mov
sbb
mov
jle
aaa
adc
es
or
rolb
inc
or
bound
dec
sbb
cmp
ret
in
sahf
cmp
mov
lahf
sub
mov
dec
sahf
sub
sbb
mov
lahf
xor
xchg
scas
loop
push
jge
sbb
pusha
mov
mov
xchg
cmp
xchg
dec
push
nop
and
fisubl
sahf
fsubrl
xor
push
mov
mov
sahf
sub
cmpsb
loopne
pop
pusha
ret
pushf
sbb
cmp
adc
scas
mov
rcr
aad
adc
test
push
push
cltd
or
push
dec
adc
pop
sbb
fmuls
xchg
mov
lods
dec
jo
cmp
pop
imul
fildll
sbb
adc
shrb
cs
pop
mov
lcall
pop
pushf
lret
add
aaa
std
mov
xor
sahf
icebp
mov
negl
jge
nop
jmp
fwait
push
shr
lods
cmp
jle
clc
adc
jnp
in
out
lods
popf
ret
scas
push
dec
loope
add
scas
sahf
jecxz
stos
popa
mov
test
jp
nop
test
into
or
push
rcrl
add
sahf
frstor
jle
dec
outsb
leave
rcrb
loopne
sbb
push
mov
mov
imul
sahf
rorl
jle
rol
sahf
ret
pop
mov
lahf
mov
xchg
mov
arpl
fs
cmp
mov
cltd
out
mov
dec
lea
lahf
mov
sub
jo
xor
stos
mov
xor
mov
lods
pushf
fildl
sbb
out
mov
imul
adc
mov
jno
popf
xlat
repz
lret
lcall
lods
mov
test
mov
clc
mov
xchg
push
mov
lahf
xchg
pop
xchg
mov
addl
test
mov
push
push
lea
push
xchg
xor
sbbb
pop
int
pushf
xchg
test
mov
inc
pushf
subl
outsb
movsb
sub
and
jnp
scas
dec
fldcw
jle
lcall
cwtl
jae
jae
jge
je
loopne
cld
and
sub
jno
mov
jl
outsb
mov
or
nop
cwtl
fwait
push
mov
nop
addr16
push
shlb
mov
dec
sahf
arpl
push
mov
push
into
sbb
outsl
arpl
or
push
jmp
pop
sahf
pop
mov
movsl
mov
push
hlt
mov
or
push
inc
mov
xchg
notl
xchg
mov
sahf
dec
jno
jns
rcrb
shlb
dec
jg
mov
nop
cmp
or
jmp
lahf
cmp
mov
mov
test
les
lcall
aaa
mov
mov
cwtl
xor
fistpl
outsl
dec
and
rclb
hlt
jae
sahf
das
adc
fidivrs
lcall
xchg
mov
ds
push
pop
xchg
sbb
andb
leave
decb
ds
jl
lcall
cwtl
sbb
cmp
sahf
adc
movsb
outsb
ret
push
icebp
push
adc
mov
lock
push
aad
ljmp
xchg
cmpsb
les
pop
test
pop
fildll
jp
andb
pushf
push
mov
cwtl
or
daa
mov
cli
stc
mov
lahf
add
mov
jle
test
sahf
cmpsb
push
inc
daa
sub
into
pop
lret
lcall
sahf
ljmp
mov
inc
xor
fstpl
cmpsl
push
push
add
js
mov
cwtl
fdivr
cmovns
dec
lods
dec
int3
jo
pushf
ficomps
test
int
mov
mov
ret
dec
sahf
rolb
mov
aam
add
sahf
shl
arpl
test
stos
pusha
iret
cmp
lahf
int3
stc
xchg
into
lcall
sahf
enter
sub
push
lret
mov
cwtl
sti
nop
es
xor
stos
sub
mov
jae
sahf
mov
pop
sahf
mov
cmpsb
xor
xchg
lahf
mov
xchg
mov
sahf
mov
scas
xchg
repnz
cmp
xchg
jle
fstl
sahf
test
addr16
lahf
stos
xchg
xchg
test
outsb
sarl
vdivpd
flds
mov
inc
scas
leave
cmpsl
nop
xchg
cli
xchg
push
ss
movsl
lds
pop
cwtl
cs
movsb
je
and
sahf
lcall
popf
mov
sbb
mov
mov
jg
icebp
fdivrl
js
movsb
jp
fidivrl
loope
mov
scas
cs
lahf
xchg
fcoml
sbb
lods
and
mov
lahf
rclb
lea
or
adc
lods
into
insb
sub
cli
leave
js
or
sahf
jle
stos
mov
cmpl
xchg
sub
ds
cmp
mov
pushf
scas
test
jp
or
mov
jp
shlb
cmpsb
stos
jnp
cmp
jp
pop
lods
nop
adc
xchg
dec
pushf
fs
cmp
add
loope
cltd
pop
sahf
pop
lret
lods
stc
xchg
hlt
push
jle
lcall
sahf
push
std
mov
jle
mov
pop
push
test
push
or
xchg
lods
push
outsl
lahf
adc
jb
mov
pop
arpl
mov
sahf
dec
adc
push
ficoms
dec
loop
cmpsb
push
mov
ljmp
inc
pop
xchg
stos
je
sbb
test
mov
cmp
mov
cmpsl
add
ds
pushf
cmp
negl
xor
movsb
inc
inc
sbbl
mov
push
mov
test
jle
outsl
xchg
sahf
sub
cmpsb
icebp
mov
adc
aaa
nop
sub
jge
jmp
repz
sub
mov
aas
bound
sbb
sahf
sbb
and
mov
mov
sbb
scas
sti
push
and
sbb
lahf
xor
sahf
adc
push
jg
lcall
cwtl
or
and
jge
lods
sti
and
sub
andb
add
call
movsb
mov
std
pop
sahf
cmc
lret
dec
adc
shlb
icebp
push
scas
int3
es
adc
ficomps
push
call
outsl
mov
lahf
stc
adc
push
loope
addr16
int
sahf
jecxz
mov
shr
and
mov
movsl
test
jnp
dec
mov
js
movsb
test
mov
push
push
mov
pushf
inc
movsb
mov
cmp
and
ror
sbbb
pop
mov
insb
loopne
cld
push
sbb
mov
xchg
mov
outsb
int
dec
es
rolb
rolb
adc
sbb
cwtl
int
bound
inc
push
bound
rcr
sahf
imul
iret
fistl
mov
xor
daa
cmpsb
dec
or
pusha
nop
idivb
leave
dec
mov
push
rcr
cwtl
addr16
lcall
and
xor
and
dec
pop
lret
dec
push
lods
or
or
inc
fidivrs
int
xchg
andb
negb
or
mov
lahf
popa
int
pop
dec
gs
dec
lahf
mov
rep
xorb
adc
adc
sbb
jg
jns
dec
jo
cmp
lea
test
jge
je
iret
inc
das
or
das
jg
fdivp
popa
rcll
xchg
je
and
lcall
lahf
mov
mov
nop
cltd
mov
inc
sbb
and
pop
push
fdivr
and
or
mov
jno
cmc
sbb
push
rcll
pop
sbb
pslld
mov
lcall
in
or
pop
lock
pop
jnp
and
mov
into
call
dec
jbe
sub
push
inc
sub
movq
sbb
mov
ja
xchg
mov
pop
aas
enter
int
push
dec
xchg
shlb
jnp
xchg
mov
out
in
and
ficompl
or
push
icebp
pop
lahf
cmpsl
out
mov
shlb
mov
xchg
inc
std
dec
int
sbb
es
and
test
popa
adc
ljmp
test
popf
addb
fmuls
addr16
pop
or
jle
or
stos
xor
dec
jp
mov
cli
xor
lret
jnp
adc
mov
nop
xchg
popa
das
cmp
sub
sahf
imul
xor
lahf
jns
cmp
pop
das
into
aas
out
sub
dec
push
sahf
jecxz
pop
insl
xchg
shrb
sub
cld
mov
rcll
movd
lahf
inc
push
add
add
scas
lahf
rcrl
jecxz
jno
and
cmp
inc
inc
and
ds
pop
inc
mov
sbb
and
mov
dec
pop
imul
shlb
sbb
or
out
mov
pop
cmp
xchg
mov
dec
nop
mov
xchg
pusha
push
les
repnz
outsb
xchg
icebp
xor
lahf
rcrl
or
inc
dec
push
lahf
cmp
fcomp
iret
or
popf
push
popf
insb
dec
and
outsl
jge
insb
xor
or
jle
add
jle
cmc
add
lcall
xchg
xchg
sub
loopne
pop
pop
xchg
in
nop
scas
mov
js
mov
sahf
mov
aas
push
xchg
movsb
push
inc
test
mov
push
sub
pop
insb
adc
jae
aaa
adc
pop
inc
cwtl
mov
pop
ds
xor
mov
dec
dec
fildll
dec
aaa
pop
jle
mov
jle
pop
sbb
push
mov
inc
jbe
jge
cwtl
cs
xchg
inc
rcrl
xchg
mov
jge
cmc
sub
pop
ror
mov
js
sub
scas
mov
dec
xor
sub
sub
aas
pushf
insb
andb
aam
mov
in
xchg
popa
insb
or
xor
jp
fucomi
push
daa
stos
lahf
or
xor
insb
mull
rcr
jge
mov
roll
push
mov
call
daa
fimuls
insb
pop
dec
das
dec
pop
js
adc
vmovups
cmp
int3
jmp
push
dec
jg
jle
roll
movl
mov
inc
push
or
in
xchg
lret
je
mov
nop
pop
insb
test
out
jnp
inc
sub
cmp
mov
mov
jg
xchg
xchg
or
leave
insb
jge
mov
mov
cmp
int
cmp
std
ficomps
cmp
cmp
psrld
mov
mov
shrl
mov
dec
pop
outsb
fsubrs
mov
xor
sbb
lods
into
cmp
frstor
xchg
sbb
push
lret
lods
or
fwait
mov
in
inc
cli
push
push
stos
dec
xor
inc
pop
jl
pop
xchg
int
outsb
xor
mov
mov
mov
jl
cmp
pushf
or
sti
add
dec
or
push
jbe
inc
cmp
adc
xchg
sahf
into
sbb
addl
mov
clc
pop
xchg
aas
int
nop
and
jecxz
pop
in
fstl
aaa
pushf
lcall
mov
aad
ficompl
insl
adc
sub
sub
sbb
stos
sub
push
iret
fimull
sub
shl
je
jg
cmpsb
or
mov
jp
cld
xchg
call
sahf
shlb
ret
shrl
xor
in
adcb
daa
mov
out
add
stc
push
sbb
sbb
dec
xchg
jle
pop
bound
push
gs
jns
mov
jne
jnp
lock
insl
ss
or
sbb
gs
subb
iret
sbb
scas
icebp
fidivs
jnp
sbb
test
xlat
imull
xor
jg
das
clc
mov
pop
iret
scas
js
mov
xor
rep
je
or
cs
pop
into
movsb
ja
pop
adcb
jl
inc
ss
lea
pop
inc
and
sarl
fwait
loop
addr16
pop
sti
xchg
int
jo
insl
pop
and
stos
daa
jbe
xor
push
lret
pop
int3
fiaddl
xchg
push
xchg
mov
in
pop
mov
gs
push
jg
nop
into
add
popa
loop
sbb
pop
popf
jbe
popa
sbb
jns
mov
popa
cmp
jns
mov
xchg
insl
jle
cs
mov
xor
outsb
stc
nop
int
cli
xchg
sbb
xchg
xor
fmull
jne
sbb
cwtl
inc
in
int
push
addr16
jmp
repnz
in
insl
into
aam
int
jle
hlt
addr16
int
jge
lea
out
sbb
loope
push
xchg
vmovaps
sub
or
orb
mov
pushl
lea
stc
icebp
pop
or
ret
mov
push
rorb
xor
int
movsb
cmp
js
mov
xor
mov
test
and
es
rorb
push
jbe
cmp
push
ficoms
call
jbe
je
outsb
inc
and
mov
add
add
or
ja
in
enter
pop
test
lods
sbb
push
jle
stos
pop
inc
es
movsb
pop
sbb
in
cmp
int
adc
jg
push
inc
and
push
xchg
iret
lock
icebp
mov
jae
ss
sbb
xchg
das
adc
das
sub
sbb
pop
jns
nop
adcb
orb
mov
dec
sbb
sti
xlat
sbb
and
fwait
jp
mov
jle
sub
inc
or
mov
into
xlat
dec
dec
in
pop
xchg
cmp
sub
iret
mov
outsb
cs
jl
scas
shlb
xchg
mov
mov
int
icebp
xchg
mov
sahf
mov
jl
adc
or
pop
daa
xchg
dec
lds
iret
dec
lcall
cmp
dec
xchg
xchg
xchg
leave
popf
arpl
pop
int
cwtl
dec
push
ds
and
sbb
pop
ret
pop
pop
jbe
jle
cld
sbb
xchg
mov
dec
dec
xor
cli
addr16
neg
sub
mov
sbb
inc
xor
iret
fwait
sbb
and
or
mov
xor
and
movsb
mov
int
mov
sub
push
test
addr16
mov
inc
or
iret
outsb
jp
push
jbe
jae
push
inc
imul
inc
push
pop
lods
cmpsb
into
jns
mov
mov
pop
jg
pop
mov
rorl
testl
leave
jno
mov
popl
das
int
scas
push
mov
out
xor
cld
jne
dec
fldt
test
clc
fwait
mov
popf
add
test
gs
xor
dec
cld
jg
dec
addr16
push
add
movsl
in
hlt
int
fisttpll
lahf
test
inc
mov
mov
std
mov
jge
sahf
xorl
iret
fcoml
mov
mov
and
jae
inc
sti
scas
out
cmp
outsb
jb
dec
outsl
lds
fstpl
sahf
inc
into
push
push
addr16
push
push
repz
aam
pop
mov
movsl
xor
aam
outsb
mov
iret
cmc
push
into
pop
jno
scas
and
js
shll
cli
ret
xchg
or
outsb
mov
sbb
xchg
and
into
cltd
mov
sbb
orb
xchg
mov
mov
sti
dec
jg
mov
and
movsb
inc
aas
ss
movsb
popa
mov
jns
xor
flds
repz
popa
je
rorl
mov
mov
das
sbb
mov
cmp
jp
std
loope
cmp
popf
jp
imull
ds
ss
jmp
in
xchg
cltd
mov
xor
and
add
pop
xchg
and
icebp
sbb
xchg
push
sub
ljmp
repnz
xchg
dec
cs
fbstp
jg
out
inc
cmpsl
dec
mov
dec
rcrl
xchg
pop
rcll
lcall
into
sbb
xor
add
scas
sti
or
cs
pop
jp
jno
sar
cmp
jg
testl
fnstsw
and
data16
int
ret
add
cs
xchg
mov
mov
lcall
push
test
lret
mov
and
out
pop
cmp
mov
in
add
xchg
stos
xlat
add
xchg
addr16
jns
jg
xor
jae
mov
sarl
jge
xchg
sub
imul
pop
cmpl
out
or
cmp
sub
fs
sbb
jge
and
inc
mov
cmp
hlt
ss
jbe
neg
mov
fnsave
or
movsb
push
testb
insb
pop
loopne
lret
sub
xchg
aad
cmpsb
cmp
mov
push
sbb
mov
repz
and
es
push
movsl
pop
inc
jnp
add
push
cmp
and
jbe
movsb
sbb
sub
push
or
cmp
push
cld
mov
sbb
sbbb
push
outsl
mov
into
call
cli
pop
jo
pop
test
push
inc
xor
sbb
push
jge
into
cld
push
mov
adc
and
xor
pop
enter
and
and
jp
pop
jle
stos
dec
push
mov
sub
std
mov
ret
inc
iret
or
push
shrl
fucom
push
insb
push
jbe
out
into
mov
ss
pop
push
add
pop
lcall
push
push
fidivrs
mov
mov
adc
fldcw
lea
jnp
sbb
jbe
and
mov
sbb
dec
out
or
pop
mov
adc
mov
sub
iret
pop
xchg
jge
jo
jno
imul
sti
mov
ficoms
gs
jne
out
pop
add
das
dec
jg
jnp
hlt
fwait
dec
into
dec
cli
mov
mov
pushf
sbb
xchg
pop
xchg
mov
in
int
enter
iret
cltd
into
stos
jo
jns
jo
xor
pop
out
lods
and
enter
sub
jg
into
xchg
mov
int
xchg
mov
push
sbb
mov
lcall
sbb
dec
shlb
pushf
test
das
fwait
pop
outsl
fmulp
sarl
mov
pop
jb
mov
popa
int3
push
int
inc
fwait
mov
lock
push
in
popa
test
push
js
lahf
sub
push
inc
shlb
adcb
in
sub
int
test
test
jo
sub
hlt
mov
sti
sarl
mov
int
dec
aad
pop
popa
in
adc
cli
clc
int
jne
dec
dec
adc
rcrl
fsubrp
add
int
pop
pop
outsb
iret
enter
lcall
mov
stos
stos
sbb
jae
popa
sbb
sbb
rorl
sub
js
add
push
call
inc
addr16
sub
flds
mov
mov
pop
or
pop
inc
xor
sub
inc
sbb
and
dec
sbb
inc
jne
mov
push
adc
adc
cmp
jle
and
les
sub
cmp
jns
lods
outsl
dec
cmp
xchg
fcompl
pop
cld
adc
mov
mov
pop
add
decb
add
jns
xchg
jo
scas
incl
sub
lods
mov
lcall
adc
aas
out
stc
popa
sub
pop
jl
cli
adc
and
inc
pushf
repnz
push
cld
hlt
les
or
lds
js
mov
inc
sbb
pop
dec
lahf
and
xchg
arpl
into
and
loopne
xor
xchg
les
adc
mov
fsubrl
sahf
mov
ds
sub
iret
or
es
cld
mov
into
cmc
xchg
stos
aam
shlb
xchg
xchg
cmp
icebp
cli
lret
push
pop
nop
and
or
xor
lds
sub
jns
or
jge
xchg
iret
xchg
sarl
push
sahf
xchg
mov
test
mov
sarl
push
into
push
mov
dec
mov
dec
ljmp
fs
les
enter
aas
vcvtdq2pd
sub
sub
cld
test
pop
cs
adc
dec
mov
ljmp
sbb
loop
loope
loop
rcrl
test
pop
lcall
or
nop
or
mov
cmpsl
xchg
xor
iret
add
je
das
mov
test
pop
je
sbb
lret
add
add
mov
iret
pop
movsb
outsl
enter
pop
pop
mov
out
and
and
in
ja
pop
or
jns
jo
loopne
mov
pop
add
imul
sahf
jl
jle
xchg
out
inc
sahf
fstpl
push
repz
jl
fisttps
pop
add
mov
inc
out
mov
lahf
xchg
cmpsb
jnp
mov
dec
sahf
daa
push
mov
ljmp
sub
lds
jmp
or
jnp
mov
pop
pop
jecxz
mov
cmp
sahf
dec
aam
divb
cltd
out
add
mov
pop
or
mov
and
sub
lret
test
outsl
fstpl
push
popa
cmpsb
jne
cwtl
inc
xchg
push
jno
outsl
nop
dec
fstpl
sbb
xchg
mov
in
sbb
decb
popf
pop
lock
adc
jmp
or
cmp
xor
cwtl
dec
add
lods
push
pop
mov
mov
jle
popl
sti
sahf
into
mov
scas
sarb
mov
cli
clc
pop
rcrl
mov
jg
nop
jp
je
sub
cmpsl
mov
sahf
stos
fwait
pusha
or
sahf
mov
xchg
ds
cmp
pop
mov
dec
stc
ror
gs
xorb
or
lahf
mov
orb
pop
push
imul
add
inc
ds
jmp
xchg
pop
xor
xor
mov
nop
out
mov
pop
fildl
pusha
repnz
cmp
sbb
mov
and
scas
inc
call
fadds
leave
arpl
sbb
lods
pop
sahf
stos
add
cmpsb
cmp
scas
cmpsl
adc
lock
mov
aaa
cmc
xchg
sub
sbb
shll
adc
sahf
pop
jo
sbb
psrad
lods
jle
jno
rcrl
mov
pop
ljmp
bnd
push
dec
xchg
out
aas
mov
add
sub
idivl
cltd
or
xchg
mulb
inc
add
mov
dec
into
divl
jmp
jp
push
mov
xchg
sahf
push
stos
mov
cmp
nop
push
fsubl
orb
lcall
fcompl
ret
mov
add
fxch
mov
adc
mov
cmp
in
jp
sahf
insb
fiaddl
cmp
sub
xor
xor
sahf
lods
mov
in
data16
int3
lret
jecxz
lods
mov
push
nop
pop
addr16
fsubl
into
sbb
or
negl
mov
mov
stc
mov
nop
test
adc
inc
fs
push
xchg
test
lcall
pop
inc
enter
push
push
call
aad
leave
pop
push
pop
xchg
andl
pop
fistps
jg
add
sahf
scas
stos
mov
pop
and
out
mov
xchg
pop
adc
mov
push
in
sahf
cmp
sbb
enter
or
scas
sub
insl
sbb
jp
mov
pushf
sub
pop
aad
adc
cmp
mov
fisttps
xor
xchg
imul
in
lock
mov
push
push
ret
mov
sahf
fisubl
push
pop
out
arpl
subb
or
mov
lock
movsb
sahf
in
xor
sahf
xchg
int3
enter
stos
push
cwtl
add
inc
push
in
jge
dec
push
adc
dec
icebp
in
insb
sbb
pushf
loope
jp
imul
das
shrl
pop
xchg
inc
aaa
js
or
sub
arpl
cmpsl
ja
jbe
jae
out
stos
sbb
xchg
xor
gs
lahf
lcall
dec
mov
push
inc
jns
inc
cmpsb
cwtl
sub
adc
aas
iret
sahf
sbb
fwait
pop
pop
sub
xor
rcll
sbb
jnp
inc
sahf
inc
in
es
mov
and
xchg
mov
out
sets
jl
and
pop
aad
jb
ja
sahf
repnz
and
adc
shlb
and
lahf
or
shlb
xor
ret
jns
sahf
sub
scas
sbb
in
xlat
in
jle
push
xchg
cmpsb
negl
inc
pushl
frstor
fisttps
loopne
hlt
sahf
lods
mov
inc
aas
mov
mov
sahf
popa
xor
out
jb
ljmp
insl
and
sti
scas
or
xchg
inc
aad
pushf
xchg
add
or
test
std
cmp
pop
sbbb
lock
inc
push
arpl
xor
sahf
jecxz
xchg
pop
or
pop
sub
sar
sahf
dec
je
fmull
ret
scas
out
call
pop
das
movl
sub
pop
xchg
mov
roll
mov
cmpsb
shrb
mulb
pop
jp
sahf
mov
inc
cs
mov
ret
sahf
ds
out
mov
xchg
loop
mov
mov
mov
jle
or
sub
je
nop
cmp
sbb
mov
jecxz
xor
push
push
mov
pushf
outsb
in
push
div
lahf
mov
cmpsl
int
enter
jnp
aas
cmpl
mov
xchg
inc
icebp
decl
daa
fisubl
popa
mov
jmp
sti
lahf
mov
push
push
fisubs
mov
fists
xchg
jle
orb
mov
out
and
int3
jge
subb
xchg
stc
hlt
arpl
mov
fisubs
cmp
adc
jns
je
imul
std
pop
pop
push
dec
mov
fmul
xchg
mov
sahf
sbb
sahf
rol
jae
pop
pop
mov
add
jle
push
fstpl
shlb
pop
push
cwtl
cli
lcall
lock
mov
mov
sahf
xchg
pop
dec
cmpsb
in
mov
lahf
push
clc
push
fsubrs
jbe
sahf
xor
inc
adc
sub
sub
cmp
in
loope
ds
pop
sub
mov
sahf
stc
dec
cmp
push
sbb
idivb
sub
arpl
rorl
test
loope
shll
push
xor
push
mov
jns
dec
inc
jbe
pop
dec
sahf
inc
xlat
jge
push
jne
pop
sahf
push
sub
jnp
xchg
push
cs
shl
inc
leave
mov
std
bound
fnstenv
cmc
enter
pushf
pop
sub
ja
sub
sahf
or
or
js
mov
fsubrl
sahf
mov
sub
mov
mov
or
data16
test
cwtl
or
sbb
push
test
lcall
fisubs
adcl
cld
jle
and
mov
cs
dec
aas
and
xchg
push
std
movsb
mov
mov
jle
xchg
pop
pop
das
daa
test
jo
mov
sub
pop
popf
pop
cmp
scas
insb
icebp
cld
sahf
nop
cmpl
mov
scas
cmp
and
or
lret
js
sahf
adc
cmp
inc
sahf
jns
cmpb
pop
mov
fiadds
test
fs
cwtl
pushf
ja
push
in
imul
ljmp
cld
test
insl
shrb
pop
mov
cmpsl
mov
dec
dec
mov
push
cmp
pusha
dec
jo
dec
jmp
inc
test
mov
inc
adc
sahf
frstor
sub
mov
and
xlat
sub
mov
aam
movsl
or
addl
pop
pushf
mov
cmp
push
ljmp
lahf
jmp
rdmsr
pop
loopne
int
xor
fcompl
pop
rorb
and
jmp
and
mov
pop
lds
sahf
and
inc
pop
jmp
jmp
push
inc
loopne
jb
xchg
leave
ret
std
jno
lea
scas
xlat
xchg
xorb
mov
push
repz
test
jge
clc
fistps
sarl
cmc
add
sbbb
cmp
mov
mov
mov
sahf
iret
cmp
out
cs
add
leave
sub
jns
das
data16
mov
pop
and
negl
add
push
out
jae
xchg
fsts
or
cs
inc
in
add
cmp
test
inc
cmp
rcrb
fsubp
pushf
lahf
cmp
mov
push
enter
in
inc
andb
jmp
pushf
push
dec
pop
sahf
out
mov
and
push
push
sti
sahf
jb
fisubl
sahf
jge
mov
insb
push
jmp
sahf
jnp
pop
inc
mov
pop
and
sbb
and
jbe
jo
dec
pop
lods
out
mov
sahf
or
rol
jae
add
filds
pop
mov
in
lock
cmc
notb
lahf
and
sub
ret
bound
and
scas
iret
lret
sahf
mov
cmp
sub
rorb
jle
loopne
fsubp
lahf
aad
cmpsl
push
out
pop
cwtl
mov
lret
cmp
adc
out
mov
cmpsl
movsl
mov
shlb
xor
push
xchg
lret
sahf
or
adc
aad
sahf
pusha
in
cs
add
sahf
mov
sub
shl
cmpsl
sahf
std
clc
pop
imul
add
cmp
xlat
mov
xchg
pop
xor
nop
mov
push
rcl
lahf
lcall
sahf
dec
cli
dec
es
out
loop
pop
test
lods
or
jb
das
cmp
sahf
rolb
cwtl
movsb
jmp
dec
push
sub
sahf
lret
mov
cld
mov
fisubrs
inc
ds
hlt
lret
mov
shll
mov
inc
sub
out
rclb
orb
inc
mov
lock
fsubp
mov
push
mov
xchg
loope
lds
fmul
jecxz
jo
pop
mov
sarb
push
bnd
cmp
xor
data16
test
int
mov
or
pop
add
les
jl
jae
mov
push
outsb
stos
arpl
bound
cmpb
jg
iret
aaa
ficompl
pop
or
push
sbb
mov
add
pushf
push
repz
inc
xchg
lret
cwtl
jg
loop
mov
jns
enter
pop
rcrl
mov
dec
repnz
outsb
fisubl
loope
shrb
inc
mov
sti
data16
into
push
enter
mov
aam
adc
aad
ret
and
push
inc
jno
mov
push
rorl
xchg
outsl
cmpsb
adc
xlat
lea
xchg
push
push
pop
iret
jns
pop
aam
fstpl
cmp
push
adcb
orl
popa
mull
adc
into
xor
push
fcoml
sbb
inc
movl
pop
std
mov
int3
jg
inc
scas
and
into
and
sahf
pop
nop
mulb
mov
adc
jo
mov
cwtl
jae
addr16
mov
std
in
js
sub
mov
out
popa
iret
adc
js
adc
mov
fdivl
ret
adc
in
subl
jle
lods
xor
push
sbb
lret
test
nop
insb
ret
aas
xchg
movsb
pop
add
xor
stc
mov
fnstsw
stos
cltd
jl
repnz
fisttps
dec
nop
shrl
mov
push
jmp
in
outsl
mov
sahf
push
mul
cli
pop
cmp
add
push
mov
gs
cmp
sub
cld
in
xchg
and
push
sub
bound
xchg
pop
movsb
jmp
xchg
sbb
stos
dec
in
sahf
repnz
pop
sub
cmp
or
dec
sub
mov
jns
sahf
lcall
icebp
bound
sub
and
cmpsl
cmp
in
push
in
rcrb
div
in
sahf
jne
into
cmp
sbb
arpl
cmpsb
bound
adc
xchg
sahf
dec
jl
push
call
xor
xor
inc
and
mov
out
inc
in
loopne
pushf
push
xor
mov
add
sbb
rcr
cwtl
jge
inc
cmp
dec
cmp
pushf
decb
cmpsl
mov
lds
push
in
pop
mov
pushf
pop
and
in
jecxz
and
xchg
out
mov
imul
push
mov
xlat
and
mov
inc
push
popf
mul
mov
mov
outsl
insl
adc
xchg
mov
negl
out
data16
cwtl
dec
adc
xchg
sahf
imul
sahf
out
xlat
xchg
ret
shl
mov
testb
mov
cs
push
add
sahf
adc
int
sahf
mov
hlt
and
negb
push
or
mov
pop
cmp
jo
cmp
push
fwait
in
xor
jle
pushf
dec
loopne
loop
sbb
iret
ror
adc
test
inc
mov
pushf
enter
repnz
mov
sub
sahf
or
add
cs
jns
das
stos
aas
dec
shlb
sahf
mov
pop
mov
xor
jbe
and
fiadds
xchg
outsb
sahf
cmp
add
jg
mov
inc
jbe
aam
sahf
push
cmp
xchg
add
fstpl
lret
mov
lahf
xchg
xchg
shl
add
rolb
pop
add
out
stos
sahf
in
loop
pop
cmpsb
mov
dec
xchg
mov
imul
popf
jo
xchg
jnp
call
sub
mov
add
xor
enter
call
cwtl
pushf
inc
aad
icebp
mov
pushf
fucomp
sarl
fld
fs
adcb
mov
dec
xor
and
adc
pushf
orl
sahf
xor
and
sahf
cmc
orl
jne
or
xchg
pusha
enter
sahf
sub
xlat
mov
pushf
rcll
cwtl
pop
out
outsb
push
bound
sahf
js
cs
ljmp
inc
pop
inc
in
mov
adc
ja
lahf
das
testb
fldcw
or
cmpsl
ret
mov
mov
mov
mov
ret
stos
pop
test
jg
ss
dec
outsb
jle
cmpsb
mov
mov
inc
cli
mov
sar
sti
sub
pop
xchg
test
push
sub
fs
pop
loope
sahf
popf
mov
fidivs
negl
test
and
jne
lret
outsl
sub
lock
pop
in
sahf
mov
mov
out
std
push
dec
aam
sahf
mov
add
repnz
pop
sahf
lods
xor
cltd
out
rol
or
lea
movsb
push
sbb
lcall
inc
sahf
test
sub
jp
les
orb
pop
sub
sahf
cld
lods
fs
dec
bound
mov
repnz
es
pop
pop
pop
scas
and
mov
cli
push
ja
mov
mov
fldcw
sahf
icebp
in
gs
xor
jl
mov
sbb
cmp
dec
repz
mov
in
pop
ret
sahf
pop
and
mov
sub
and
mov
lock
bound
or
sbb
mov
jg
jbe
mov
bound
lcall
or
aam
inc
addr16
or
mov
xor
stos
ss
inc
lods
shrb
sbb
sub
ljmp
stos
ja
or
pop
push
lea
repnz
cwtl
xlat
jne
lcall
in
cmp
pop
xchg
ret
cmp
xchg
je
out
inc
mov
mov
inc
je
stc
xchg
ljmp
insl
jno
ffree
adc
ficomps
test
cld
add
jb
sbb
ljmp
lcall
xchg
jg
pop
aas
or
scas
cltd
call
lea
xchg
int
or
cmp
jno
inc
ds
clc
xchg
test
pop
sahf
push
push
pop
into
jl
push
stos
js
enter
test
clc
sbb
in
jp
sahf
sub
mov
hlt
mov
ljmp
add
sub
mov
inc
outsb
and
or
out
inc
sbb
and
inc
inc
push
out
fucom
sbb
pop
sub
int
add
xor
gs
push
loope
push
lds
mov
pushf
out
aaa
sbb
inc
int
mov
and
cmc
int
xchg
mov
jae
cmp
fwait
mov
hlt
lcall
iret
mov
pop
push
imul
push
lock
test
inc
fimull
adc
imul
jbe
daa
test
test
jnp
push
roll
or
in
in
xchg
ret
adc
push
sbb
loopne
push
fmulp
push
into
int
fbld
jg
jmp
ret
fsubl
imul
push
jo
pop
cmp
imul
stc
xchg
sbb
pop
scas
popf
mov
mov
add
dec
push
or
mov
add
jne
sbb
push
push
decb
bound
fstps
fsubrs
scas
pop
inc
xchg
aas
outsl
jbe
dec
mov
aaa
rorl
push
in
ret
pop
mov
jge
repnz
ret
lahf
fimuls
ror
or
movsb
add
jnp
sbb
mov
pop
sub
into
dec
add
push
push
fnsave
push
jne
jg
sub
pushf
into
pop
out
in
int
add
das
pop
jns
jg
mov
push
mov
loop
fcomps
sbb
aaa
sbb
xchg
into
or
idivb
or
jg
test
lea
and
lods
setl
test
push
iret
dec
push
in
data16
mov
pop
test
out
or
jns
fsubrp
js
mov
int3
cs
fwait
into
sbb
cmpsb
test
xchg
xlat
int
gs
cli
cmp
mov
into
mov
int
dec
cmp
addl
adc
inc
or
in
lret
movsb
mov
fistpll
mov
and
push
sbb
sbb
aam
cwtl
nop
dec
data16
mov
or
or
push
data16
mov
add
mov
shl
pop
and
iret
or
in
sub
pop
pop
mul
cmc
lods
cmpsl
mov
rcr
mov
sbb
data16
das
or
sub
int3
scas
jae
mov
lea
adc
outsl
cmp
push
fs
test
inc
adc
xchg
into
and
adcb
nop
cld
int
dec
jle
add
push
mov
rorl
int
push
orl
sub
mov
test
dec
push
push
pusha
ret
xor
subb
lcall
lea
inc
fwait
adc
les
adc
cmpsb
js
push
add
iret
fs
hlt
test
or
pop
imul
jbe
sbb
push
out
iret
inc
mov
addr16
xchg
jge
adcb
xor
pop
and
mov
mov
incb
or
mov
jno
cmp
mov
inc
cmpsb
mov
das
jl
push
sbb
int3
addr16
lret
pop
jo
movsb
pushf
inc
pop
xchg
dec
lahf
faddp
push
push
and
inc
lcall
das
imul
outsl
pop
ret
jge
dec
shrb
jnp
in
loopne
fwait
pushf
iret
push
push
pop
test
shl
or
and
decl
notb
popl
aas
popa
pop
cmp
sub
dec
iret
lock
scas
mov
mov
mov
push
xchg
jns
fistl
jnp
jg
push
mov
movsb
inc
mov
sub
test
xchg
sub
add
xchg
xchg
into
loopne
adc
je
stc
orb
in
dec
cmp
outsl
mov
cmp
mov
fwait
cmpsl
sub
jecxz
xor
fabs
jp
and
lods
push
int
mov
lock
rcll
push
push
aad
sahf
retw
sbb
inc
xor
shrl
mov
push
ljmp
adc
repz
sti
mov
das
mov
sahf
sub
movsl
cmpsb
xor
pop
insl
pop
popf
dec
clc
mov
mov
icebp
inc
jmp
sbb
xchg
dec
pop
sbbl
add
cmp
adc
arpl
mov
aad
jmp
adc
imul
lock
sahf
loope
insl
sbb
in
addr16
pop
xor
dec
pop
push
addl
push
cmc
test
pop
data16
and
cwtl
mov
and
xor
movsl
outsl
add
xchg
sahf
add
jg
lcall
lahf
lea
ret
iret
mov
or
sahf
and
jle
ret
mov
fs
es
sahf
push
ret
dec
pop
cmp
mov
pusha
out
rcrl
xchg
pop
push
sahf
and
stc
test
sahf
outsb
adc
inc
loopne
insl
subb
mov
fmulp
fnstenv
xor
addr16
mov
fdivp
scas
cmp
je
xor
sahf
add
js
lods
jns
sahf
inc
loop
xchg
mov
pop
iret
sahf
xor
inc
jmp
sahf
out
pushl
dec
addb
push
xchg
push
insb
sub
mov
imull
scas
sahf
jb
lods
les
xor
shrl
popa
pop
jne
pop
sahf
cmp
mov
outsl
jnp
push
inc
and
icebp
cmp
cmp
mov
hlt
xchg
lahf
imul
nop
sub
outsl
jecxz
dec
sahf
sub
rorl
xchg
add
scas
cmp
out
sahf
jns
and
adc
sahf
test
iret
mov
fistl
popf
sbb
or
data16
cmpsl
inc
pop
or
in
fcomps
fisubs
sbb
popa
dec
sahf
roll
in
imul
stc
das
jge
sbb
sub
cltd
sbb
je
sahf
mov
xor
cmpsb
in
lret
pushf
pop
fsubs
fsubl
pop
scas
xchg
stc
notl
fwait
notb
cmp
les
sub
js
in
sahf
fwait
data16
mov
push
mov
lcall
lods
aas
jle
mov
cmp
sub
xor
xchg
fidivs
out
fiadds
rcrl
in
leave
cld
adc
pop
shrb
sahf
int
sub
nop
push
loope
imul
scas
sbb
out
jno
in
dec
cli
cmpsb
hlt
lea
sub
dec
push
mov
inc
sub
push
cmpsb
sahf
xchg
pop
fimuls
roll
pop
xor
imul
popf
dec
nop
loop
sub
cwtl
pop
icebp
ljmp
stos
ja
inc
or
imul
inc
ds
mov
lahf
aas
jg
loope
sub
jp
and
lcall
mov
mov
loop
loopne
inc
test
popf
cmp
xchg
pushf
mov
xor
mov
sahf
or
jns
sahf
dec
es
jge
repnz
jne
pusha
pop
xor
mov
add
lcall
jp
fdivrs
hlt
mov
push
arpl
in
cld
xorb
jmp
sti
sahf
jnp
out
insl
imul
negl
push
cmp
lea
pop
sahf
add
ss
mov
adc
stos
test
pop
sbb
aad
and
dec
jl
sub
xchg
push
in
ljmp
icebp
out
rcrb
mov
imulb
lcall
mov
setnp
inc
pushf
dec
sbb
bound
cmp
in
fnstsw
mov
pusha
or
call
pushf
mov
ret
cmpsb
out
pop
add
jbe
movsb
pop
sahf
xchg
mov
xchg
inc
sahf
repz
andl
sti
fcoml
sahf
pop
dec
hlt
fsts
add
jnp
arpl
cmp
cmp
in
inc
and
or
or
add
pop
or
test
aam
sbb
sub
pop
jmp
and
pop
and
addb
mov
push
pop
cmp
add
cltd
cmpb
faddp
xchg
mov
ljmp
jecxz
xor
lds
xchg
push
cwtl
shrl
daa
jne
mov
adcl
lods
cmp
aas
lock
inc
jg
xor
cmp
sbb
pop
push
adc
sub
lret
iret
ror
xlat
xor
pop
das
sahf
scas
std
loop
jne
ret
outsl
push
inc
testb
jle
sbb
psubw
xlat
insb
ret
push
addr16
xchg
pop
and
test
ret
inc
sahf
negb
cmpsb
sahf
movsl
mov
pop
adc
ds
je
pop
repz
sahf
jmp
xchg
into
push
xor
sahf
flds
int3
push
mov
mov
movsl
sahf
mov
in
mov
inc
cmp
scas
adc
xchg
pop
movsb
lock
dec
sbb
lret
adc
les
fiadds
addb
and
xor
sub
idivb
jnp
iret
pop
jg
sahf
scas
push
fnstsw
int3
cld
lods
xlat
inc
cmp
sahf
inc
mov
sahf
sbb
mov
fildll
repnz
sti
hlt
xor
lahf
jecxz
mov
mov
xchg
inc
mov
lret
add
ffree
insl
stc
andl
or
sahf
movsb
adc
dec
es
pop
cld
push
push
dec
pop
mov
sahf
dec
cltd
adc
pop
test
sahf
cmp
cmp
mov
mov
js
leave
dec
andb
test
cli
jmp
lds
push
cwtl
or
xchg
test
adc
std
sahf
enter
inc
repz
xor
fidivl
imul
orb
cltd
jl
fcomps
cmp
cld
pushf
jecxz
mov
mov
jp
das
mov
int
xchg
pop
ret
lock
nop
sahf
das
les
shrb
xchg
lret
mov
mov
decb
pop
jg
lcall
repz
dec
lods
jo
subl
loope
inc
inc
sahf
repnz
rcr
mov
pop
xor
out
out
adc
shll
jp
sahf
out
ljmp
cmpsl
sahf
in
jo
lods
imul
lds
testb
sbb
xchg
and
sahf
cltd
fsubl
cs
nop
cwtl
mov
into
mov
add
sahf
dec
orl
rclb
sbb
fiadds
lahf
jo
in
pop
js
pushf
add
jg
dec
fbstp
jl,pt
std
adc
mov
insb
aaa
xor
bswap
xchg
xor
mov
dec
pop
cli
insb
adc
or
cwtl
ljmp
and
xorb
in
sahf
scas
stos
aaa
in
emms
xlat
bound
pop
sahf
add
shrl
js
mov
or
push
test
sub
dec
xchg
mov
gs
aaa
test
sahf
ret
sbb
in
mov
or
sahf
notl
pop
jno
push
and
cmpsl
dec
scas
lods
bound
push
or
mov
sahf
daa
and
mov
in
aam
aaa
mov
jo
ffree
test
movsl
xchg
pushf
mov
pop
addl
and
xor
xorb
or
subl
std
dec
add
sahf
push
push
div
cld
sbb
inc
je
ja
nop
sahf
xchg
sbb
and
jbe
adc
cltd
push
push
aam
or
dec
dec
sbb
pop
rsqrtps
addr16
je
ret
lcall
push
scas
push
inc
sahf
xor
add
dec
enter
pushf
xchg
mov
mov
lcall
sahf
iret
add
out
pop
push
clc
ds
movntq
out
jmp
jge
jo
jg
mov
fdivrl
sahf
cwtl
xlat
inc
ja
jae
repnz
adc
lret
pushf
mov
fistps
or
ret
aaa
mov
sbb
repnz
pop
fcompl
cwtl
nop
pop
jo
sub
lds
mov
rolb
out
nop
sti
inc
je
jge
adc
jno
jl
xor
pop
sbb
jb
sahf
cmc
mov
pop
xchg
scas
ficomps
push
pushf
jnp
fidivs
inc
sbb
mov
sahf
ljmp
fcompl
cld
xchg
lahf
xchg
jo
jne
xor
nop
or
lar
popf
lcall
sahf
fcomi
push
je
dec
jae
sahf
bound
addr16
pop
ret
cwtl
pop
aam
adc
push
sbb
sahf
inc
mov
or
mov
loop
sub
lcall
xchg
xor
sahf
add
add
lret
sbb
and
pop
dec
out
nop
shlb
push
xor
mov
pushf
xchg
pop
das
push
pushf
ret
push
dec
imul
out
pushf
shr
sahf
scas
jns
pushf
icebp
xchg
enter
pushf
pop
and
sahf
cwtl
jl
push
adc
cmp
sahf
sbb
mov
xchg
shll
out
sbbl
mov
sahf
pop
mov
or
gs
rcrb
mov
xchg
sahf
adc
lcall
insb
aad
out
out
lcall
cmp
sbb
jb
mov
sahf
xor
popf
mov
ja
ss
push
stc
and
in
jb
pushf
xchg
add
mov
je
sbb
sahf
xchg
jnp
shlb
push
sahf
sbb
lahf
mov
mov
lcall
xchg
test
out
mov
mov
cmp
add
push
cltd
fidivs
pop
popf
ficoms
jns
xor
sbb
pop
mov
sti
notl
xchg
ja
mov
mov
dec
and
pop
cmp
mov
or
sahf
das
enter
sbb
inc
clc
pop
adc
ds
jo
xchg
xchg
pop
movsl
popa
xchg
lods
sahf
das
dec
add
lahf
push
push
fisttpl
mov
or
jge
adc
into
inc
jae
mov
jae
xchg
lcall
and
sbb
push
cmc
pop
xchg
ss
data16
jp
or
jmp
fstpl
and
push
aad
sub
into
pop
inc
js
add
addr16
orb
xchg
jl
cwtl
mov
push
mov
xchg
fldln2
fidivrs
sbb
movb
ja
repz
iret
sahf
and
lcall
movl
movsl
in
jge
movswl
out
cmpsl
sbbb
mov
aaa
stos
mov
xorb
cli
mov
sbb
mov
sahf
mov
fdivs
adc
sbb
jecxz
and
add
mov
mov
hlt
sahf
dec
cltd
lret
adc
push
xor
push
mov
pusha
mov
clc
sti
sahf
rorl
rcrb
loopne
outsb
imul
add
int
xor
cmp
call
adc
loope
jno
dec
jns
push
cld
push
pusha
subl
xorl
jge
js
jns
enter
mov
jbe
or
and
fcomps
psrlw
sahf
je
into
popf
inc
loop
sahf
jns
mov
xor
lcall
cltd
scas
adc
mov
sbbb
mov
lahf
fistpl
movsl
cmpsb
mov
inc
bound
mov
jns
xor
lcall
and
sub
iret
and
lahf
dec
jbe
out
lret
out
cmp
or
lods
loop
mov
imul
pop
sbb
jmp
test
insb
push
je
jp
mov
bound
imul
push
scas
push
jecxz
ds
ss
mov
iret
push
mov
add
scas
stc
shr
dec
dec
in
xchg
sbb
subl
clc
in
lcall
stos
mov
loope
jge
sahf
aas
adc
pslld
test
andb
sahf
inc
stc
adc
push
nop
jp
or
jnp
cld
and
arpl
fwait
add
jg
jp
mov
fidivrs
sahf
push
jp
or
ficompl
out
out
add
sahf
push
adc
pushf
pop
ret
mov
pop
and
mov
xchg
sahf
or
outsl
dec
orb
mov
push
in
fistps
or
adc
pop
pop
sbb
dec
cmpsl
fistpll
cmp
mov
test
cmp
pop
dec
sahf
mov
hlt
lock
jnp
sahf
outsl
fldl2t
inc
sti
mov
aaa
lret
xor
add
sbb
push
jecxz
mov
push
or
out
aam
sub
sahf
and
jecxz
lea
insl
mov
xchg
scas
lock
push
push
fisttpl
cmpb
fdivl
pop
sar
sahf
pop
clc
out
sbb
push
jge
mov
imul
clc
es
push
add
xchg
sbb
pop
popf
add
adc
outsl
movsl
push
jp
pop
add
arpl
mov
ret
popf
cwtl
repnz
cmp
test
insl
xchg
sahf
and
push
or
mov
inc
push
or
sbb
sahf
sbb
cmp
js
movsl
mov
fcomip
sahf
cmp
xchg
sahf
into
pop
mov
cmp
jmp
xor
jb
lahf
in
mov
push
push
sahf
jne
mov
sbb
fsubs
sub
mov
psrlq
mov
out
out
cmp
lahf
dec
imul
out
gs
mov
into
cmp
xor
je
sub
push
jmp
and
test
mov
inc
sahf
lods
cs
jg
sbb
cmc
nop
ljmp
and
enter
mov
mov
in
scas
pop
xlat
cmc
dec
xchg
sub
pushf
fiadds
pop
push
lahf
jp
push
clc
fcmovnbe
add
ret
subb
adc
loop
lahf
push
loope
jp
xor
sahf
fimull
jp
rcrl
das
gs
cld
insl
out
pusha
fidivs
cmp
ds
pop
mov
or
sbb
arpl
cltd
jp
lret
stos
sahf
adc
pushf
rclb
fcomps
adc
nop
jbe
cmpl
pushf
nop
je
xlat
xor
sahf
ret
or
hlt
sub
inc
xchg
xchg
push
incb
insb
push
inc
mov
lahf
add
fstps
sbb
test
push
jle
movsl
pushl
jecxz
jp
sahf
nop
inc
jge
mov
cmp
inc
or
pop
xor
in
push
sub
push
repz
incl
dec
cmp
shrl
outsb
je
sahf
mov
adc
cs
or
test
fdivl
aam
jecxz
popf
push
scas
loope
fucomip
mov
cltd
sahf
into
jne
pop
lret
push
popf
jb
jle
sahf
dec
clc
repz
push
xchg
dec
mov
in
out
gs
sbb
lea
fwait
cmp
pop
or
mov
push
push
es
and
pop
pusha
sahf
fsts
mov
inc
es
jno
jns
dec
lcall
insb
add
sahf
movsl
rcrb
mov
fsubrs
sbb
lahf
xchg
cmp
sahf
loop
stc
mov
xchg
and
pop
ret
fs
fcoml
loope
push
jnp
push
sahf
fwait
xchg
push
push
bound
cmp
test
mov
arpl
xchg
jmp
ja
call
sbbb
imul
mov
add
repnz
addr16
into
pushf
jmp
xor
adc
or
jle
push
lahf
mov
adc
les
cmc
repnz
xor
xchg
lods
rol
mov
in
mov
fisttpl
jl
dec
inc
pop
push
lahf
push
clc
push
icebp
add
adc
adc
sbb
dec
ljmp
cli
es
add
adc
sbb
cld
test
sbb
pushf
es
iret
mov
pop
add
stc
adc
insl
ret
popa
pusha
xchg
push
or
dec
cltd
and
adc
das
fistps
push
lcall
sahf
ja
lcall
loop
adc
sahf
rcrl
cmpsb
lahf
outsl
push
pop
sti
cwtl
add
fstpl
xor
lcall
xchg
or
push
pop
pop
xor
mov
out
insb
les
outsb
push
mov
cwtl
movsl
jl
push
sahf
in
repnz
add
pushf
fucompp
pop
in
test
jle
mov
pop
mov
orl
jno
push
sahf
in
xor
lret
sbb
mov
cltd
out
lods
lret
lahf
mov
repnz
sahf
mov
pop
icebp
cld
or
dec
scas
stc
jnp
fcomps
xchg
loope
outsl
or
hlt
xor
jmp
mov
scas
addb
addr16
nop
filds
xor
bound
out
pop
push
outsl
mov
xchg
sub
and
jo
shlb
pushf
and
fdivrs
add
xchg
sahf
mov
cmp
and
adc
push
lcall
or
push
dec
js
mov
push
fimull
inc
into
leave
pop
lods
lds
xchg
out
shrb
xchg
or
pop
jl
xor
pushf
out
xlat
loopne
lcall
roll
xor
jne
cs
inc
out
mov
adc
scas
and
pop
jo
jp
xchg
jp
adc
mov
push
sbb
sbb
xor
test
nop
lods
iret
les
hlt
outsb
sahf
jns
xor
mov
or
jae
sahf
sbb
fwait
push
mov
outsl
imul
mov
and
jp
mov
xchg
lcall
ret
sub
lcall
cwtl
clc
or
push
test
jp
arpl
adc
or
stc
loope
int
fmuls
add
sbb
hlt
jl
movsb
add
sarl
mov
jnp
mov
sub
pop
rcrb
js,pt
dec
mov
mov
xlat
repz
xor
add
jns
pop
leave
aas
dec
cs
mov
test
xor
push
jns
cmp
lahf
fimuls
mov
paddw
mov
subl
push
mov
cmp
xlat
add
xchg
jg
imul
jnp
inc
sahf
sub
sub
jg
xlat
cmp
push
fdivs
cs
subb
xchg
mov
push
push
pushf
fistpll
push
push
sbb
sarl
jne
sub
and
jg
and
sbb
cmp
clts
cmp
jae
pop
pop
shrl
stc
es
pop
incl
popf
fbstp
dec
sub
unpckhps
mov
testl
ds
fsubrl
ss
psubb
jno
int
lods
data16
daa
or
int3
sub
gs
xchg
and
pop
push
and
lahf
insl
cmp
cmp
sub
push
sub
push
shrb
cmp
adc
addr16
jp
inc
sub
cmp
or
pop
cmp
imul
xor
xor
mov
and
dec
jle
scas
jno
ds
add
xor
cs
or
pop
and
dec
sbb
sbb
sub
aad
sub
orb
xchg
mov
subb
sbb
xor
jg
xor
aad
ljmp
mov
add
loop
xchg
push
clc
push
clc
jp
add
test
shlb
call
out
xchg
pop
rorb
dec
or
in
xlat
push
inc
and
or
xor
xor
subb
and
add
xchg
push
and
sbb
pop
mov
jle
pop
sbb
mov
insb
sub
sub
xlat
stos
iret
mov
push
xchg
push
adc
sahf
and
xor
iret
test
not
fwait
ss
ds
pop
inc
dec
xor
xchg
mov
pop
ljmp
stos
xlat
or
mov
push
and
testb
inc
inc
outsb
pushw
loopne,pt
cmp
xor
xor
jns
sti
sub
scas
mov
sub
pushf
sbb
jge
test
xor
pop
scas
sub
mulb
pushf
and
test
add
jp
or
cwtl
inc
pushl
xlat
daa
imul
xchg
cs
gs
push
stos
sahf
aam
es
and
js
jmp
pop
xchg
or
subb
cs
sub
and
pop
fsubs
mov
fists
imul
icebp
cmp
pop
cltd
sub
xchg
sub
jbe
mov
pop
xor
push
dec
jno,pn
xchg
js
cmp
or
sub
pop
cmp
fcompl
or
push
pop
repnz
subb
es
or
decb
data16
xchg
adc
in
pop
or
jmp
lods
pop
push
xchg
push
andb
inc
cmp
xor
xor
popf
xor
mov
sub
pop
lods
sub
addps
mov
jge
jae
in
xchg
mov
push
mov
and
mov
jp
and
and
lds
cmp
and
sub
push
push
stc
ss
push
push
dec
cs
adc
cltd
sub
xchg
mov
cmpsb
sahf
clc
xor
sub
in
mov
fldl
pushf
rorl
jne
not
push
sar
adc
rcr
clc
push
rol
push
pusha
and
mov
btr
mov
lea
mov
mov
adc
rcl
test
mov
call
iret
xchg
cmp
push
xor
sub
jle
call
mov
or
sub
push
and
test
xor
xor
mov
cmp
shll
inc
jp
xchg
push
mov
je
movsb
hlt
test
in
loop
aas
add
jae
xor
cmc
not
pusha
stc
mov
jmp
stc
sub
jmp
push
mov
dec
inc
call
push
call
lea
je
jmp
lea
je
push
pusha
pusha
adc
mov
push
mov
lea
jmp
jp
pop
mov
push
add
int
pop
movsb
inc
shlb
leave
addb
cmp
cmp
push
lea
aas
jno
jle
pop
add
in
sub
insb
divb
xchg
mov
push
insb
mov
mov
xchg
xchg
jge
popf
push
loope
daa
rol
jge
mov
lret
frstor
pop
pop
adc
mov
orb
aas
pusha
test
adc
cmc
ljmp
aaa
leave
repnz
xchg
push
mov
cld
mov
scas
xor
mov
or
fmull
or
imul
jg
scas
pop
fcomi
test
stos
pop
lods
pop
or
push
add
push
repz
mov
hlt
popf
idivl
xchg
sub
mov
jns
lods
xchg
pusha
jp
fiadds
xchg
negb
ror
sbb
inc
shlb
outsl
jb
jmp
icebp
scas
cmpsl
cld
jnp
leave
jb
or
sub
clc
addr16
fs
lret
push
wrmsr
mov
das
mov
add
pop
adc
pop
push
cld
inc
aaa
ret
inc
jne
adc
into
and
xchg
aas
icebp
lahf
hlt
test
outsb
sbb
addr16
aam
sub
js
push
mov
ret
inc
test
inc
hlt
xorl
out
xchg
xor
mov
sub
out
cmp
cmp
inc
add
inc
add
into
in
xlat
jno
fwait
cmpsl
adc
xchg
iret
insb
or
test
or
aaa
inc
add
test
call
jmp
movsl
test
out
out
inc
inc
loope
pop
enter
sbb
in
iret
lcall
insb
fbstp
push
dec
jge
push
mov
sbb
cwtl
push
push
dec
dec
ds
arpl
xlat
adc
ja
mov
xchg
aas
inc
movsl
jnp
mov
push
shll
pop
or
xchg
daa
mov
sahf
and
jb
jns
enter
sbb
jne
fdivrs
fldl
inc
stc
xor
push
sbbb
sbb
mov
rolb
roll
enter
inc
lea
sub
in
andb
lret
push
repnz
rorl
stos
sub
cmp
xor
outsl
lret
mov
pop
mov
jecxz
div
test
je
call
jne
call
push
lea
call
pusha
movb
lea
jne
mov
jmp
test
xor
push
cwtl
sbb
lret
dec
jmp
or
sbb
pop
mov
hlt
dec
out
call
iret
dec
jl
lock
scas
repnz
divl
xchg
inc
shrb
mov
incb
ret
test
sbb
push
movsl
jnp
lods
inc
pop
push
push
repz
dec
add
mov
cmc
sahf
daa
les
xor
sbb
rcl
test
js
mov
cmp
jg
ret
stos
pop
push
call
and
or
cli
fstpt
mov
xchg
fwait
and
rorl
pop
cmp
orb
push
loope
cmpsb
inc
pop
sbb
jmp
fnstenv
jae
xlat
pop
push
pop
mov
lods
aad
icebp
mov
fnstcw
mov
push
repnz
mov
adc
mov
mov
out
jg
stc
xchg
enter
addps
or
pusha
pop
movsb
les
repz
jo
xor
nop
lock
jne
xchg
jp
xchg
and
cmpl
addl
inc
out
mov
hlt
test
add
popa
insb
inc
insb
insb
outsl
arpl
pushf
clc
add
clc
cmc
pushf
mov
mov
clc
cmc
test
jmp
lret
or
call
std
mov
adc
lret
outsl
std
or
addl
in
inc
jecxz
inc
addr16
mov
cmc
fcompl
dec
cli
pop
pop
lret
jne
sub
outsb
add
dec
rorb
fiadds
mov
and
scas
xor
insb
pop
ljmp
icebp
jb
mov
bnd
test
cmovg
ja
je
sub
testl
pop
nop/reserved
jg
lods
bound
sub
mov
in
jo
inc
out
test
leave
jmp
cmp
cmpsb
movsb
pop
rolb
mov
cmpsl
loope
jno
pop
and
popf
shrb
inc
shlb
dec
push
dec
fnstsw
or
xchg
cmp
test
int3
adc
xor
xchg
addr16
jb
mov
in
lods
mov
andb
jmp
hlt
test
not
cwtl
mov
not
pushl
movsbw
jmp
sbb
add
sbb
or
push
scas
inc
jmp
and
aam
and
aad
clc
lock
push
sub
dec
fsubs
lods
inc
call
mov
in
mov
pop
aaa
push
pop
mov
das
add
inc
jno
rolb
lods
rorb
xchg
sub
pop
xchg
or
sub
push
mov
inc
pop
push
mov
dec
leave
int3
push
or
xor
push
das
mov
fldl
xor
pop
adc
in
cwtl
shll
xlat
cwtl
or
outsb
sbb
shl
cmp
mov
or
jp
jl
mov
rorb
fdivrl
xchg
sub
js
mov
xor
jmp
not
mov
pusha
lea
jp
lods
pushf
pushf
cmp
neg
call
pusha
movl
pushf
pushf
lea
jmp
and
movsb
fiadds
in
testl
sub
sti
xchg
xor
xor
lea
insl
ret
sbb
stc
or
jno
xchg
or
mov
add
pop
inc
in
je
loope
add
mov
movsb
dec
fsubs
or
inc
fcmovnb
pop
pop
or
dec
inc
loopne
fmuls
imul
adc
jmp
aaa
in
cmp
imul
fwait
pushf
sbb
dec
cmp
dec
push
sarb
jbe
roll
sbb
outsb
xchg
aaa
repnz
in
cmpsb
cmp
adc
loopne
lret
sbb
add
addb
mov
sub
imul
xchg
dec
mov
lret
jns
imul
mov
pop
loopne
adc
mov
sub
and
cmp
sbb
ja
cmp
cmc
testb
adc
cmpsl
jle
daa
mov
xchg
mov
icebp
data16
mov
push
into
push
enter
mov
sbb
fwait
gs
negb
ror
cs
in
loopne
cld
mov
clc
lcall
add
aam
fadds
ror
stc
add
jnp
pusha
add
jmp
bts
mov
push
add
push
bswap
ror
add
lea
pusha
setne
seto
bsf
mov
cmp
shr
clc
movb
jmp
jmp
jp
cltd
inc
pushf
jmp
sbb
fstpt
aaa
cmc
cmpsl
dec
cld
roll
inc
int
push
xchg
fstpl
stos
fdivl
jno
mov
pop
cmp
inc
ljmp
mov
pop
mov
push
jl
fcmovnu
pop
test
insb
ss
or
iret
pop
scas
scas
fdivl
xor
mov
dec
loope
push
je
roll
vpcmpgtb
test
les
mov
mov
clc
hlt
test
jne
call
push
pushf
movl
pusha
pushl
lea
jmp
jmp
push
fildl
ljmp
mov
shlb
mov
int
jae
push
jb
dec
les
popf
out
xor
vpsraw
jne
push
push
lods
ds
add
iret
jl
lea
ja
jmp
and
mov
cli
subb
cmp
push
lods
sbb
lods
dec
cltd
push
jnp
aam
daa
push
dec
popl
mov
divb
pop
sub
mov
push
in
mov
sub
test
pop
xor
inc
popf
sahf
sub
add
leave
jbe
and
leave
int3
incb
sub
mov
test
sbb
filds
pushf
xchg
push
shr
lds
mov
lret
gs
dec
push
xor
shrb
icebp
xchg
test
xchg
xchg
popa
out
ja
and
sub
movsl
cli
std
dec
shll
adc
mov
rol
pushf
dec
lock
xchg
pusha
mov
mov
mov
mov
in
std
xchg
test
mov
out
mov
xor
sbb
sbb
adc
mov
and
inc
pop
xchg
sbb
les
adc
cmpsb
cmp
push
hlt
stos
loope
test
data16
addl
mov
xor
adc
push
jnp
add
imul
sbbl
aam
lahf
xor
dec
test
aad
dec
incl
and
dec
dec
in
and
jns
dec
rcrb
imul
sbb
les
jge
push
addr16
in
mov
pop
mov
enter
push
sbb
inc
add
cwtl
dec
cld
mov
out
cmp
test
or
decl
xchg
add
neg
add
sar
mov
jmp
pusha
or
cmpb
ljmp
cs
fildl
jns
gs
clc
test
inc
js
insl
test
loop
and
aaa
fstps
cs
xor
leave
ret
cmc
push
xlat
pusha
je
movsl
jbe
dec
out
sub
dec
or
test
pop
bound
or
outsl
push
push
mov
push
movlps
cmpsb
push
incb
mov
out
nop
in
jb
jmp
fsubrs
mov
std
mov
hlt
test
jp
sub
pushl
movl
pushl
jmp
pushf
push
movl
pusha
movb
movb
movl
pusha
movw
pushf
lea
jmp
pushf
lea
jae
bt
clc
add
pushf
pushf
mov
mov
pushl
movb
mov
lea
jmp
pusha
jmp
addr16
push
stc
dec
pop
mov
dec
icebp
xchg
in
jno
mov
adc
je
pop
add
cmpsb
fsub
mov
movsl
lea
xor
into
out
jo
enter
test
xchg
retw
xchg
fwait
mov
lret
add
nop
popa
mov
in
out
out
mov
mov
jp
insl
pushl
fldt
adc
adc
pop
mov
scas
dec
pop
mov
mov
enter
in
es
jecxz
movsb
lods
into
jnp
sarl
int
test
push
mov
mov
inc
mov
call
hlt
mov
fimull
inc
divb
jg
and
imul
jg
insb
mov
jl
addr16
push
mov
out
jp
pop
inc
icebp
cmp
out
jg
mov
xor
int
pop
sbb
mov
or
mov
mov
inc
xchg
rclb
sub
add
jecxz
sub
cmp
mov
mov
dec
sahf
mov
mov
addb
jo
ljmp
nop
cmp
mov
addr16
ret
movsl
cmp
pop
rol
pop
aad
adc
incb
ja
sub
in
jb
push
inc
dec
lret
push
push
ljmp
and
pusha
jge
cmp
mov
repz
sbb
faddl
mov
nop
inc
movsb
mov
and
shll
jmp
inc
popa
out
add
mov
shl
or
mov
jns
repnz
mov
sti
mov
cmc
pop
movsb
sub
leave
mov
cmpb
sbb
pop
jo
jne
jnp
pop
mov
loope
inc
out
movsl
push
cli
cwtl
cmp
outsl
cmc
sbb
mov
loop
cmpsl
dec
repnz
push
fsubrs
mov
test
lret
js
jmp
sub
cltd
inc
fsubs
mov
loop
add
cmp
mov
shlb
sahf
inc
lea
push
or
cld
push
xchg
push
xlat
or
rorl
pop
pop
or
xchg
call
push
and
jnp
stos
imul
sub
test
add
pop
and
sbbb
cwtl
rcrl
shld
adc
popw
fmull
inc
out
dec
xor
loopne
aaa
jmp
adc
sub
push
or
and
in
adc
adc
xchg
push
addb
jbe
cmp
pushf
xchg
das
jle
sub
or
mov
jle
hlt
scas
pop
pop
out
stc
or
xor
xchg
test
jb
inc
mov
mov
mov
in
stos
xor
imul
sti
loop
nop
jmp
repz
je
stos
inc
add
pop
add
pop
aas
nop
out
mov
mov
fisttps
xchg
sub
jge
fnstcw
scas
cmp
hlt
xchg
cmpsl
jnp
lret
sub
xor
jno
adc
pop
jp
in
push
hlt
test
xchg
aas
inc
sarb
das
mov
pushf
mov
xor
and
in
dec
dec
add
xchg
call
push
arpl
mov
sahf
ljmp
push
fmuls
pusha
push
mov
lret
jo
xor
and
xchg
mov
xor
in
rcr
cld
lea
lds
test
shrb
jmp
adc
outsb
ret
add
xchg
lcall
dec
popf
sahf
and
inc
mov
mov
xchg
sahf
mov
fidivs
aaa
rcrl
pop
fdivl
aas
push
sahf
ljmp
pop
pop
sti
xchg
jns
call
cmp
cmp
movl
rep
shlb
pushf
in
pusha
pop
mov
or
sarb
adc
push
xchg
dec
cld
mov
stc
xchg
ds
movl
call
push
lea
jae
pushf
mov
push
pushf
lea
jne
pushf
stos
pushf
pusha
pushf
lea
jmp
pushf
lea
jne
lahf
bswap
bswap
call
mov
cmc
shl
push
push
lea
je
push
pushf
pushf
mov
pusha
pushf
pushf
mov
mov
movl
cwtl
lahf
movsbw
lea
jmp
add
cmc
cmc
test
pushf
pushf
lea
jne
call
jmp
call
jmp
insl
sahf
or
mov
lods
mov
jp
addr16
inc
lds
scas
mov
mov
push
cli
mov
or
gs
adc
lcall
inc
mov
xchg
mov
sbbb
jb
xor
lods
mov
mov
movsb
int
mov
scas
sbb
mov
jb
lcall
int
insl
xchg
mov
lea
test
ret
xchg
ficomps
cmp
ret
cmpb
popl
dec
jbe
lcall
pushf
xchg
rclb
cmc
sarb
xchg
sbb
or
mov
adc
adc
push
and
insl
fs
mov
outsb
mov
cmp
push
rclb
aam
bound
pop
adc
cli
stc
pushf
and
push
or
add
push
je
sbb
push
sbb
pop
jnp
pop
repnz
lret
ficomps
mov
push
adc
adc
fistl
dec
pop
bound
xor
sbb
cmp
mov
ds
cwtl
shlb
xchg
and
outsb
fisttps
cltd
inc
popf
jle
aad
faddl
insb
ja
push
or
pop
in
mov
adc
cs
loope
pop
jb
push
imul
cmpsl
hlt
mov
movsb
lahf
ss
jg
bound
and
ja
outsb
inc
cmp
cmp
xchg
jp
lret
mov
fidivrl
push
cs
sahf
sarb
adc
pushf
dec
ret
mov
add
lcall
mov
jl
sahf
repnz
mov
xor
into
mov
sbb
add
mov
mov
addr16
xchg
aaa
dec
mov
mov
mov
sti
adc
push
jl
inc
adc
push
in
pop
cmpsb
jl
scas
pop
test
fisttpll
pushf
cmp
dec
xchg
pop
nop
aaa
jg
pop
das
xor
insb
mov
sub
mov
mov
notl
out
jg
cmpsb
test
jle
std
mov
cmc
cmp
cmp
adc
cld
pop
dec
shrb
cmp
lahf
xchg
sahf
pusha
mov
jle
mov
and
outsb
pop
stc
adc
push
inc
adc
push
add
dec
sub
dec
xchg
sub
dec
js
jge
jl
arpl
mov
jae
dec
cwtl
pop
das
cmp
xor
iret
mov
jle
je
pop
jl
dec
ds
out
rcll
xchg
nop
pop
pop
cmp
dec
ss
out
stos
sbb
jecxz
inc
add
push
or
jb
ds
insb
dec
imul
xchg
shrb
insb
push
mov
es
pop
push
out
adc
fists
jl
adc
mov
mov
mov
sub
push
mov
sub
mov
cmp
jg
pop
sub
dec
jbe
pop
xor
fwait
popa
push
aas
xchg
fistps
xchg
mov
pop
movhps
xlat
pushl
dec
pop
pop
jl
rolb
push
mov
fidivrs
push
lahf
push
das
jge
pop
fists
jbe
jl
insl
ss
jp
push
mov
mov
xchg
push
lcall
test
fcomp
insl
insb
mov
jp
push
scas
push
xlat
sub
push
neg
ja
dec
aas
mov
decl
pop
xchg
out
or
push
mov
jle
out
sub
aaa
jb
xor
xchg
push
fstpl
inc
aam
dec
push
xchg
cmp
jns
cmpsb
pop
jb
push
or
xlat
js
jo
xchg
add
lods
and
testl
fisubrs
xchg
push
sbb
cmp
pop
xchg
fisubl
jl
outsb
push
jg
jns
dec
inc
or
push
xchg
cs
pop
pop
divb
pop
cmp
sbb
dec
cmp
xchg
fstl
pop
cmp
mov
outsb
push
ja
pop
mov
mov
pop
lahf
cmp
fst
into
pop
pusha
pop
out
outsl
shlb
jp
dec
mov
xorb
xor
nop
fistps
jo
sbbl
jo
pop
ret
mov
cmp
jl
push
jbe
call
ds
push
test
mov
sbb
mov
pop
push
insb
sub
bound
push
push
mov
xchg
notl
pop
and
insb
aas
push
xchg
xchg
jl
jecxz
cmp
mov
pop
das
mov
or
adc
sbb
inc
jg
xchg
jp
push
push
jle
xchg
pop
xchg
out
dec
outsb
pop
pop
orb
or
jle
adc
xchg
push
and
mov
movb
jle
lahf
push
outsb
test
sbb
add
out
jle
pop
jle
sbb
insb
sti
mulb
sahf
jp
pop
fisttpl
adc
pop
ss
cmp
mov
adc
adc
dec
inc
cltd
cmp
mov
lock
mov
nop
aas
out
jp
popf
adc
pop
push
mov
cmp
fisubrl
pop
in
out
adc
pop
mov
inc
shrb
outsb
lcall
push
cmp
add
incl
cld
popf
xchg
fisubrl
pop
push
xchg
pop
insl
xchg
xchg
push
idivb
cmpsb
push
sub
push
cs
dec
push
sbb
push
lahf
lahf
cwtl
pop
out
aad
push
dec
mov
xchg
mov
popf
ja
mov
clc
ss
sub
mov
scas
push
push
jl
pop
adc
push
mov
cmpsb
inc
cmp
cmp
aad
pop
sub
cmp
pop
xlat
fcmovb
cmp
push
pop
push
scas
inc
cmp
fistps
pop
cmpsb
xchg
testl
push
lods
xlat
dec
cwtl
idivb
es
jle
scas
lahf
int
fisttps
adc
xor
jle
adc
or
scas
lret
call
sbb
idiv
lahf
mov
das
mov
xor
imull
outsb
cs
mov
push
insb
pop
mov
push
cmpsb
mov
jbe
mov
mov
pop
cmp
cmp
pop
mov
cs
out
jl
push
cmp
insb
xlat
mov
pop
xchg
out
mov
rcrl
push
jecxz
daa
in
sti
cltd
stos
icebp
lcall
jle
pop
inc
cmpsb
xor
mov
mov
inc
mov
out
sbb
rcl
mov
xchg
outsb
ss
dec
xchg
sbb
xchg
into
icebp
cs
sbb
jle
stos
xchg
inc
cmpsb
sub
pop
mov
adc
xchg
xchg
mov
xchg
mov
loope
xchg
adc
pop
out
jge
pop
dec
out
sub
notw
jmp
jle
out
data16
pop
paddsw
xchg
dec
mov
add
pop
xchg
lahf
sub
fcoml
mov
jl
or
dec
fisttps
push
cmpsb
movhps
mov
pop
adc
pop
lahf
jge
pop
mov
xchg
sbbl
jl
pop
mov
fisubl
mulb
adc
pop
push
outsl
sbb
sbb
dec
daa
push
sub
out
popf
jl
lcall
cs
ja
cs
xchg
pusha
pop
jle
pop
fimull
or
dec
hlt
or
pop
scas
cwtl
xlat
or
xor
cmp
mov
rorb
bound
scas
cmp
mov
pop
xchg
lcall
loope
out
lods
out
lods
push
scas
shlb
popf
mov
lcall
xor
clc
outsl
mov
inc
xlat
in
idivb
jbe
in
insl
xchg
lcall
iret
push
pushf
push
dec
addr16
jbe
cwtl
scas
outsb
pop
rcrb
jno
dec
dec
and
jge
dec
pop
cmpsb
idiv
ja
jl
das
pop
xchg
shlb
pop
sub
xlat
ja
sbb
cld
jnp
mov
pop
jbe
mov
inc
jle
add
fwait
cwtl
lods
in
xor
aas
pop
xchg
dec
mov
cwtl
xchg
pop
es
imul
jle
sbb
inc
daa
popf
insb
fidivs
ds
pop
mov
ss
cmp
or
pop
cwtl
push
loop
dec
outsb
push
inc
pop
push
jb
adc
dec
cmp
mov
push
iret
push
mov
pop
cmp
add
xchg
xchg
imul
pop
sbb
and
insb
or
cmpsb
ficoms
addb
mov
testb
cli
lahf
mov
adc
sbb
mov
pop
add
sbb
add
lcall
push
and
xchg
insl
negb
test
push
cmpb
fs
mov
xchg
fbld
push
adc
jmp
testb
push
dec
lea
xchg
ss
adc
mov
or
mov
iret
adc
mov
dec
xor
ja
clc
sbb
outsb
lea
adc
adc
and
inc
out
or
mov
insb
ds
adc
into
cs
push
out
dec
cmp
sub
rcrb
cltd
aam
add
inc
enter
rcr
insb
mov
lods
push
aad
mov
mov
cmp
leave
das
lahf
arpl
js
pop
movb
mov
sub
xor
jp
push
call
push
cwtl
inc
push
cmpsb
or
es
popf
xlat
jecxz
pop
mov
cmpsl
add
es
loopne
setne
mov
repz
push
inc
ljmp
push
cmpsb
aas
lods
inc
out
sti
cmp
adc
jle
or
cld
into
cmc
idiv
rcl
cmp
jge
insb
les
xchg
dec
push
repz
out
cmp
mov
dec
lcall
pop
insl
ss
lea
insl
push
lods
xchg
or
insl
insl
mov
mov
push
iret
jb
test
pop
addr16
jl
mov
lea
jp
dec
push
fistpll
or
sahf
jle
sub
ds
push
movl
out
shl
int3
mov
adc
mov
pop
dec
addr16
mov
inc
mov
cltd
cwtl
xlat
pop
jle
rolb
adc
pop
cmp
xor
ja
xchg
sbb
std
mov
mov
xchg
inc
aaa
cs
lahf
nop
push
jbe
push
cmpsb
jne
xchg
xchg
cltd
call
mov
sarb
imul
subl
sub
lea
iret
insl
pop
xchg
mov
mov
mov
lods
nopl
pop
or
in
iret
pop
push
jle
sub
xor
pop
inc
dec
add
pop
ja
lds
daa
scas
into
or
mov
insb
xchg
or
aaa
push
sti
mov
xchg
mov
out
and
push
das
xchg
or
cmpl
pop
cs
insb
pop
bound
xchg
pop
sub
jmp
lahf
aaa
pop
push
shll
jmp
pxor
push
pop
fdivrp
mov
pop
insb
mov
lahf
pop
inc
mov
push
xchg
jbe,pn
inc
xor
push
insl
jl
or
outsl
in
ds
out
cmp
and
bound
out
je
daa
cmp
or
addr16
add
jns
lahf
fimuls
in
mov
cmp
dec
jl
cld
dec
mov
mov
addr16
mov
out
mov
push
or
cmpsb
jp
push
push
add
mov
out
inc
mov
push
mov
mov
pushf
lahf
aad
scas
pop
dec
popf
pop
jo
add
addr16
and
sbb
insb
outsb
lcall
push
adc
push
cwtl
mov
outsb
cs
in
lahf
xchg
sbb
dec
push
pop
jae
mov
cmp
jns
sub
add
push
sbb
sbb
mov
xchg
mov
idivl
insl
addl
nop
out
das
jbe
jl,pt
pop
dec
popf
enter
jnp
cwtl
mov
pop
cmp
idivb
or
fistpl
iret
ret
jp
push
xchg
sarl
push
or
insl
xor
sahf
inc
test
push
cli
idivl
mov
not
cmpsl
std
pop
mov
jae
mov
jae
pop
sub
xor
cmp
jl
jl
popl
aaa
jl
jb
cmc
cmp
ss
mov
pop
ss
xlat
or
push
jl
not
mov
push
jge
push
pop
pop
ja
insb
aas
mov
push
iret
lock
xchg
cmp
push
dec
test
insl
pop
insb
out
mov
mov
mov
jp
dec
or
insl
jl
mov
jbe
scas
lea
insl
insb
testl
pop
or
mov
sbbb
outsl
in
xchg
push
xchg
fildll
cmp
mov
or
mov
fidivrs
negb
adc
pop
insb
sbb
test
push
sub
imul
xchg
fildll
out
fnstcw
test
xchg
xchg
xchg
test
xchg
mov
cld
push
xchg
inc
adc
xchg
and
xchg
setle
fmull
dec
rclb
out
out
insb
mov
jbe
inc
push
insl
push
sbb
push
cmc
adc
fistps
arpl
imul
loopne
je
cmp
js
pop
nop
mov
push
sbb
sbb
sahf
jge
std
pop
pusha
fdivrs
adc
jbe
adcl
xchg
adcb
lret
pop
and
pop
cmp
add
sahf
enter
out
rcrl
mov
adcb
cmpsl
pop
out
xchg
ds
sbb
addr16
jg
inc
pop
sahf
mov
fstpt
lcall
cld
idiv
cwtl
add
xchg
repnz
fmull
pop
call
stos
setle
inc
fcoms
sbb
sbb
xchg
lea
fdivrl
lcall
loop
xor
and
cld
jb
lahf
pusha
popl
sbb
lock
sbb
outsl
das
mov
mov
dec
div
outsb
mov
xchg
jne
dec
cmpsl
popf
sub
ret
bound
sahf
dec
xchg
xor
das
leave
inc
mov
pop
dec
lahf
pushf
incl
push
sbb
push
rcrl
sbb
lcall
je
data16
nop
cmpsl
pop
jp
mov
sub
inc
push
xchg
jbe
push
sub
test
cmp
xchg
or
sti
xchg
add
outsb
aam
rorl
jo
lods
pop
sahf
mov
fmul
mov
push
cmpsb
mov
push
aas
push
daa
mov
std
in
outsb
enter
cmp
int
das
mov
inc
std
adc
shr
int3
es
cmp
ds
fbld
loop
xor
out
popf
insl
jl
mov
lea
pop
out
pop
sub
pop
cmp
insl
shrl
inc
mov
popf
push
jp
push
push
push
fidivrs
call
mulb
inc
filds
xchg
sbb
pop
mov
pop
mov
popl
xchg
jl
test
mov
out
test
pop
notb
outsl
pop
fdivl
xchg
jl
aaa
push
pop
testl
jbe
push
push
ds
es
pop
notb
faddp
lea
push
addr16
pop
aaa
push
pop
pop
out
jp
pop
xchg
pushf
xchg
outsb
push
inc
push
arpl
outsl
ljmp
out
jp
pop
pop
lcall
cmpsb
sbb
dec
adc
outsl
jl
scas
shlb
mov
adc
in
mov
sub
es
fdivr
xchg
mov
push
lret
les
daa
cs
and
xchg
mov
xchg
mov
mov
lods
mov
mov
sbb
dec
pop
cmpsb
fistpll
xor
outsl
push
push
cmp
mov
push
cwtl
scas
cmp
jge
aas
push
jle
mov
fs
lahf
xor
push
scas
add
and
or
lock
fnsave
add
push
cs
mov
jg
jbe
repz
std
scas
mov
fildll
xchg
pop
fistpll
xchg
push
lcall
mov
mov
jge
cmp
pop
dec
xor
into
pop
sbb
popa
jg
push
sbb
cld
outsb
pop
clc
out
outsb
insb
xorb
pop
jge
xor
pop
data16
dec
pushf
fcmovnu
jne
mov
xor
loopne
mov
jno
mov
sub
push
jle
inc
testb
pop
mov
push
jbe
out
xchg
jg
push
ja
cmp
fwait
mov
mov
daa
jns
outsb
push
out
insb
push
mov
add
pop
xchg
mov
push
insl
jl
mov
jp
push
xchg
mov
xchg
pop
jl
jl
pop
outsl
push
dec
das
lea
jp
inc
mov
pop
mov
pop
decl
loopne
push
fimuls
xchg
jns
addr16
inc
mov
cwtl
daa
cmp
mov
cmp
mov
lahf
push
jl
pop
mov
scas
mov
jge
pop
das
daa
insl
out
jl
dec
fimull
push
or
jge
ja
jle
jle
sti
jle
adc
jl
jg
jmp
mov
in
dec
stc
pushf
cmpsb
adc
xchg
and
xlat
int3
cmc
xchg
pop
das
pop
in
push
lea
jmp
mov
lds
jge
notl
xchg
lods
in
pusha
pop
outsb
mov
inc
out
push
or
fidivl
or
pop
mov
add
mov
pop
mov
push
jmp
pop
mov
pop
in
dec
stc
pop
cmpsb
adc
pop
xchg
sbb
cmpsb
pop
mov
sbb
stc
pop
das
jmp
push
int
pop
jg
sbb
sti
pop
out
sbb
lds
out
dec
idivl
xchg
mov
lods
mov
mov
jb
sub
jle
sub
jle
jle
or
push
daa
test
pop
sub
das
push
call
dec
sti
loopne
aaa
scas
lret
fisubrs
mov
ss
sbb
xchg
cs
jg
dec
jb
push
dec
pop
outsb
pop
pop
or
addr16
or
inc
jb
pop
jbe
lock
mov
repz
fiaddl
test
mov
icebp
cld
pop
popa
outsb
push
adc
xchg
lods
mov
pusha
vdivss
cmpsb
mov
pop
cmpsl
outsb
xor
cmpsl
neg
fisubrs
in
out
inc
cs
dec
repz
add
push
cmpsb
push
call
shlb
fcmovbe
lods
mov
out
dec
into
mov
lcall
insb
push
pop
mov
push
mov
jno
pop
push
jg
jl
mov
cmp
mov
cli
aaa
testb
popw
dec
pop
jl
add
loopne
cmp
xchg
mov
dec
xor
insb
jg
pop
jp
push
mov
shrb
mov
pushl
insb
push
dec
imul
jl
and
mov
mov
cmp
mov
jb
jle
push
mov
cmp
jl
dec
lea
out
inc
scas
or
sbb
jo
mov
outsb
aaa
cmp
notb
dec
xchg
xor
fcmove
mov
outsb
ds
mov
fdivs
add
fldz
xchg
rclb
inc
sbb
cmp
pop
aaa
cmp
stc
fs
pop
fsts
mov
xchg
movsb
adcb
jg
add
decb
das
pop
out
xor
pop
frstor
cwtl
fwait
lahf
outsb
data16
push
cwtl
dec
and
jle
int3
inc
push
and
pop
lahf
add
jle
icebp
mov
xchg
cmp
outsl
dec
lea
mov
std
dec
stos
fsub
fildll
pop
insb
dec
cmp
xchg
pop
mov
scas
add
mov
out
mov
repz
outsb
imul
xchg
cmp
push
inc
push
iret
ljmp
pop
outsb
lods
div
fcoms
mov
fnsave
shrb
in
mov
jbe
iret
stc
js
pop
inc
scas
add
dec
psubw
mov
mov
out
into
push
scas
push
lea
jg
mov
outsl
testl
aad
and
fcmovnu
adc
mov
sub
sbb
pop
mov
out
jne
mov
jbe
inc
jo
pop
and
loop
ss
xor
cmp
outsl
cmp
dec
insb
jle
lret
xchg
xchg
push
mov
dec
negl
shll
mov
mov
jl
lahf
out
insb
or
enter
mov
test
mov
in
sbb
lahf
inc
dec
out
cmc
mov
mov
and
jbe
mov
push
pushf
pop
mov
push
movd
fstpl
mov
jns
pop
imul
popf
popa
cmpsb
sbb
xchg
dec
negl
rcll
sbb
xchg
push
mov
cmpsl
sbb
xchg
and
cmpsl
sbb
out
insb
sub
fldl
push
jle
adc
clc
mov
dec
push
negb
push
cld
jl
pop
out
sub
pop
mov
hlt
cmp
xchg
mov
sbb
hlt
in
data16
pop
jne
adc
js
scas
into
fstpt
dec
sbb
sbb
xchg
mov
iret
push
sbb
xor
aaa
jl
cwtl
push
sbb
addps
jbe
jle
jl
cmpsb
jge
or
outsb
sbb
fstpl
mov
out
incb
rclb
cmpsl
int
pop
push
pop
xchg
inc
and
outsl
mov
mov
jg
aam
scas
or
out
stc
xchg
push
pop
outsl
out
sbb
ds
cs
mov
lea
mov
or
ss
push
out
mov
loop
add
fists
rcr
xor
lahf
cmpsb
jle
das
pop
bswap
dec
cmp
cs
cmpb
fistpl
js
pop
cld
xchg
xlat
push
mov
notb
call
push
jg
or
out
pusha
aas
pop
jne
push
pushw
fadds
xchg
push
cmp
fnsave
outsl
cld
xchg
push
mov
outsl
js
push
dec
fcmove
xchg
bound
pop
xchg
cmp
decl
daa
or
ja
outsb
pop
loope
mov
mov
or
add
mov
dec
fsubrp
adc
mov
push
out
jle
lcall
out
pushf
cmpsl
push
pop
aas
mov
inc
lahf
loop
mov
mov
test
dec
es
inc
mov
jg
pop
jle
xlat
in
decb
xchg
fs
cmpsb
xor
jle
or
addr16
je
cwtl
fimuls
cmpsb
add
lods
push
pop
push
adc
out
xlat
adc
mov
xor
mov
jle
push
lea
je
movl
mov
shl
push
fisubrl
sbb
pop
mov
aaa
mov
cmpsl
jl
xchg
push
xchg
sub
mov
insb
inc
or
xor
dec
xor
cmpsl
sub
sub
rorl
out
ss
ss
inc
dec
das
jge
pop
pop
jmp
or
jle
jge
pop
jl
jl
pop
pushw
dec
mov
jg
push
lods
jmp
sub
out
mov
push
mov
push
ja
out
insl
or
mov
pop
call
out
lea
outsb
push
push
push
jge,pt
pop
out
push
lahf
lea
addr16
dec
push
das
jge
pop
out
cmpsb
mov
popf
jbe
pop
push
loopne,pt
push
fimuls
xchg
outsl
jge
pop
aaa
push
pop
decl
scas
push
mov
mov
dec
pop
cs
push
out
into
jp
push
lahf
cli
xchg
iret
ret
dec
into
inc
sahf
mov
cmpsb
loopne
outsl
int3
outsl
repz
int3
push
stc
mov
cmp
insl
out
flds
push
dec
ficoms
mov
inc
addr16
mov
lea
js
lds
data16
cwtl
mov
mov
push
push
push
das
jge
pop
call
out
lea
jbe
pop
push
inc
jge
pop
push
push
out
into
lea
push
dec
jge
jb
jle
daa
and
xor
push
ret
xor
push
out
lahf
dec
mov
mov
fsts
aam
pop
pop
lret
pop
fists
xchg
cmp
outsb
outsb
out
mov
xor
push
das
insb
movsb
mov
push
adc
jle
mov
xchg
das
mov
push
pop
out
sub
jge
jo
xchg
cmp
mov
mov
mov
sub
xchg
jle,pt
xchg
cmpsb
sbb
enter
xor
mov
push
je
inc
pop
ds
aam
fwait
and
push
syscall
pop
push
aam
dec
push
xchg
in
xchg
mov
jle
push
fldl
das
xor
fs
test
pop
jle
cs
sbb
das
mov
fisttps
jle
idivb
xor
stos
jbe
dec
aam
scas
pop
xchg
mov
mov
mov
test
xchg
jp
jle
sub
xor
pop
jbe
push
mov
cwtl
iret
or
insb
fistpll
adc
push
push
aas
ljmp
mov
add
es
mov
mov
xchg
fimull
out
inc
out
lods
adc
cld
xchg
fimuls
repnz
insb
insb
ss
pop
out
into
mov
int
lahf
inc
jle
jle
addr16
dec
mov
push
cmp
imul
loop
insl
jl
das
mov
cmp
mov
mov
mov
aas
data16
push
dec
insl
mov
es
insb
push
mov
jl
cld
mov
pop
jg
fdivs
cmpsl
in
and
xchg
faddl
and
xchg
imulb
pop
ss
dec
mov
push
cs
push
pop
in
push
outsb
out
insl
out
scas
insb
aaa
sbb
cli
dec
pop
jns
cmp
inc
adc
sbb
pop
push
push
cs
out
jp
push
lahf
push
ja
dec
pop
daa
push
call
lea
pop
push
ss
push
jge
pop
mov
inc
jp
push
testl
fdivrl
inc
pop
push
push
neg
lea
push
aas
jge
pop
out
adc
sbb
cs
aaa
dec
testb
mov
jp
push
pop
push
fistpll
push
mov
push
into
mov
jg
inc
push
daa
push
out
jge
mov
lea
jp
push
xchg
push
pop
jge
pop
movlhps
mov
pop
or
xchg
xor
rorb
jl
out
push
xchg
jp
push
pop
push
out
jge
pop
scas
pop
xchg
jl
outsb
inc
lea
jp
push
fimuls
jge
pop
ja
dec
aaa
lea
jp
push
iret
push
scas
mov
pop
inc
push
push
testb
push
addr16
pop
das
push
pop
out
mov
jbe
adcb
push
push
idivb
pop
mov
lahf
xchg
pop
push
jge
pop
iret
push
cmpsb
jle
jbe
lea
jp
push
push
push
out
into
pop
mov
ja
pop
jp
push
pop
push
jge
pop
iret
push
cmpsb
jle
je
lea
jp
push
out
cmpsb
iret
mov
sbb
das
outsb
fimull
negb
sbbl
mov
cwtl
movsb
lret
sbb
lcall
mov
outsb
addr16
mov
scas
scas
or
pop
negb
mov
outsb
daa
mov
pinsrw
xchg
jmp
mov
out
fnstsw
cwtl
fnstsw
cmpb
xlat
cld
inc
xchg
xor
adc
xchg
mov
xchg
mov
cld
mov
std
movsb
adc
adc
add
pop
outsb
dec
dec
cs
xchg
sub
push
xor
bound
xchg
movsb
rcrl
fildll
adc
es
adc
push
jl
insl
jle
inc
faddl
clc
pushf
xlat
hlt
outsb
out
sbb
jae
push
inc
jo
lods
cs
fidivrs
mov
pop
in
ja
xchg
push
sysret
mov
ror
arpl
xlat
adc
insl
cmpsb
push
insl
jl
mov
daa
sbb
mov
outsl
addl
ds
loop
lea
adc
decl
jle
jle
pop
js
adc
xchg
push
mov
mov
pop
ds
cmpsb
sbb
notl
dec
sbb
pop
fbld
push
out
clc
pop
pop
push
jg
mov
lea
fbld
pop
paddb
daa
lahf
push
call
pushaw
jp
mov
mov
xlat
int
pushf
scas
daa
hlt
xchg
push
out
outsl
sbb
xchg
cltd
insl
pop
jno
dec
jp
push
stc
push
sarl
jle
lock
pop
push
xor
mov
dec
ja
cmpsl
lock
mov
fidivrs
mov
scas
add
fstpl
mov
sub
sbb
data16
dec
mov
mov
cmpsl
jno
lods
outsl
orb
out
jno
into
sbb
jne
pop
inc
out
cmp
push
xchg
into
xlat
adc
das
push
in
jbe
cli
dec
notb
rorl
aad
mov
inc
jnp
aad
sbb
adc
out
adc
lcall
xor
cs
out
popf
and
ficomps
es
cmp
jle
outsb
cli
out
jle
mov
pop
mov
testl
pop
cmp
outsb
lods
xchg
or
sub
push
es
add
xor
js
mov
stos
mov
inc
movl
ljmp
push
lods
test
ja
jns
push
pop
jo
dec
cmp
call
negl
push
int
movd
es
fbstp
mov
mov
mov
jbe
mov
push
fisttps
inc
jmp
jle
xchg
insb
mov
cmc
outsb
aas
icebp
jle
dec
repz
icebp
jle
in
cmp
jl
or
ds
mov
push
stos
movsb
jnp
mov
jle
mov
movups
dec
pop
jg,pn
mov
outsb
cmp
sub
dec
out
xchg
dec
mov
xchg
xchg
jge
adc
cmp
insl
dec
xchg
sbbb
std
outsb
dec
sar
jae
in
fiadds
dec
cmpsl
add
inc
jbe
push
dec
sbb
xor
inc
decw
mov
outsl
mov
push
dec
testb
push
add
inc
in
out
mov
call
insl
decb
xchg
jbe
pop
outsb
xchg
cmp
inc
push
sbb
icebp
jge
pop
mov
push
sub
lock
inc
data16
in
pop
xchg
push
or
xlat
out
jo
ss
loop
pop
pop
daa
lods
incl
not
xchg
aad
cmp
xchg
mov
adc
pushf
push
dec
out
paddq
and
or
lea
imul
psubd
repz
nop
jns
shll
cmc
mov
psllq
pop
scas
push
xchg
jb
xlat
inc
fcoml
mov
repz
dec
mov
outsb
cmp
das
dec
mov
decl
dec
repnz
adc
pop
pop
insb
add
fimuls
mov
xchg
test
xor
dec
xor
or
jge
mov
dec
ljmp
xorb
inc
sbb
mov
pop
pop
ljmp
fwait
or
inc
push
es
lcall
adc
pop
testb
pop
rorl
out
dec
or
lds
add
xor
dec
loop
call
cmp
icebp
xor
or
ret
pushf
jnp
jle
jo
sbb
leave
or
nop
push
mov
pop
xchg
inc
push
movsb
sahf
insb
push
mov
pop
push
pop
push
pop
jge
pop
push
cmp
mov
jl
lea
xchg
cmp
cmp
test
push
subl
dec
jle
mov
cmp
mov
cmp
lcall
ja
outsb
sbb
add
sub
add
daa
dec
out
test
fiaddl
mov
mov
mov
push
mov
ljmp
push
dec
cmp
jnp
popf
lahf
outsl
add
sbb
mov
jge
push
pop
pop
test
andb
int
ljmp
movsb
insl
xlat
sbb
dec
stos
push
mov
mov
mov
cmp
test
andb
ss
in
push
fildll
hlt
jb
add
lcall
inc
pushf
fimuls
jge
adc
insb
cmp
jo
push
jecxz
jns
sbb
push
sub
xchg
ss
out
or
dec
push
jp
mov
mov
xchg
pop
sub
add
test
xlat
ret
mov
hlt
cmpsl
mov
in
cld
inc
jle
je
and
subb
push
outsb
jge
cmp
mov
dec
jbe
shrb
jp
jle
adc
lds
xchg
pop
add
mov
cmpsl
aas
xchg
pop
add
loope
incb
adcb
dec
pop
inc
out
sarb
jb
int
divl
mov
inc
into
push
mov
or
cmove
lahf
les
lahf
xorb
push
mov
popf
sbb
mov
sahf
sub
stos
dec
imul
push
dec
pop
jl
div
cmp
leave
or
xor
int3
sub
ljmp
dec
inc
push
inc
loop
dec
decb
fs
mov
call
dec
mov
mov
cs
sahf
mov
out
enter
push
mov
jns
aas
fdivrl
ret
cmp
mov
fwait
adc
js
adc
dec
in
outsb
push
ss
cmp
cmp
lret
adc
jp
adc
negb
push
mov
cmp
bound
shl
clc
mov
mov
mov
mov
mov
ret
xchg
es
lods
mov
pop
or
or
xchg
jle
es
popf
mov
std
jl
mov
add
icebp
sub
test
sahf
sbb
mov
addl
popf
lock
pop
and
lcall
fcmovb
aam
push
jl
ds
or
dec
sbb
cmp
stc
or
arpl
jecxz
es
pop
adc
pushf
cld
cmp
add
cltd
ss
or
ds
cmp
sbb
out
mov
mov
ds
out
push
cs
imul
inc
mov
push
adc
sub
adcb
pusha
int3
fsubl
movsb
fldl
test
and
jg
pop
cmpb
jle
xor
pop
cs
push
xchg
leave
xlat
cwtl
fsubrl
aam
adc
fidivrs
jle
movsl
jg
xchg
fisubrl
lods
jg
lahf
lds
shrl
or
out
out
mov
fisubrs
and
xlat
mov
pop
push
scas
sarl
int
or
scas
lahf
or
fucomi
sti
dec
push
or
xchg
xchg
repz
pop
aas
outsb
gs
xlat
sbb
and
pop
mov
jb
pop
inc
in
push
mov
push
daa
adc
scas
push
or
push
sbb
fdivrl
nop
mov
outsb
pop
daa
fmuls
inc
xor
fstpt
xchg
jg
xchg
fcomip
xchg
cmc
ds
sbb
into
mov
mov
icebp
outsl
inc
ss
and
in
cmpsl
mov
pop
mov
inc
xchg
cmp
aas
and
das
pop
mov
idivl
mov
clc
jle
bswap
jl
jle
sbb
pop
push
cmpsl
pop
mov
inc
sbb
lea
sti
es
jle
rcl
inc
mov
sbb
lcall
or
outsb
into
js
roll
lret
push
daa
outsl
xlat
out
lods
cmpsb
arpl
push
enter
test
addr16
out
inc
mov
loopne
pop
daa
loope
jb
clc
fdivrp
pop
lcall
inc
cmpsb
xchg
fucomi
enter
jle
pop
mov
inc
sbb
mov
fst
decb
inc
or
test
inc
testb
mov
leave
dec
aaa
mov
out
sub
movb
xchg
rolb
scas
xchg
daa
movb
dec
mov
mov
mov
pushf
push
push
mov
cli
pop
fidivrs
xchg
cli
mov
cmp
aam
mov
cld
dec
pushw
repnz
lahf
gs
stos
repnz
out
push
daa
sbb
scas
fstl
or
fimuls
ss
addl
inc
arpl
or
xchg
idiv
daa
inc
daa
sbb
sbbl
mov
cs
xor
data16
sahf
pop
les
ret
fstpt
ja
cmpb
nopl
icebp
outsl
mov
or
ds
xchg
push
aaa
adc
add
cmpsl
add
inc
cmp
loope
xchg
push
pop
lea
aad
add
jle
inc
jle
fistpll
pop
inc
jg
adc
push
mov
add
push
call
fimull
pop
out
jnp
ljmp
bound
es
mov
mov
xlat
jae
imul
pop
jl
inc
rcrl
btc
ss
mov
mov
jbe
stc
xchg
fimull
mov
iret
mov
add
test
sbb
inc
popf
test
xchg
popl
jg,pn
call
ljmp
jge
inc
xchg
es
pop
cs
cmpsl
sbb
xorl
push
cmpsb
sbb
xchg
adc
mov
sbb
insl
pop
add
push
popa
jge
pop
adc
sbb
mov
imull
jbe
shl
popf
push
or
dec
mov
pop
ja
inc
inc
lahf
lods
iret
add
or
shlb
pop
inc
cmpsl
cmp
jne
ja
inc
pop
faddp
jmp
mov
dec
ficoms
pop
aad
lret
xchg
adc
std
mov
clc
mov
mov
pushf
scas
xor
ljmp
outsl
dec
pop
aad
xchg
mov
outsb
fisttps
iret
xchg
fisttpll
into
adc
scas
clc
jnp
mov
repnz
pop
xorb
std
out
pop
or
paddsb
mov
mov
lahf
scas
xchg
push
stos
fisubrs
cwtl
fidivs
scas
jle
aaa
jl
aas
jge
sti
movsb
pop
xchg
pop
dec
add
stc
fiaddl
stc
cs
mov
mov
pop
mov
push
push
dec
push
jbe
mov
push
sub
inc
repz
test
daa
jge
jmp
insb
cs
sub
jl
pop
push
jo
xchg
out
push
ss
scas
push
call
ja
sub
lods
xchg
jl
js
sqrtps
push
push
rolb
fstl
divb
push
pop
inc
das
and
or
push
out
or
mov
pop
push
movsl
mov
mov
or
fisubrl
fstps
jbe
idivb
divb
cs
jb
out
xchg
xchg
addr16
pop
push
data16
cmpsl
cmp
into
xchg
pop
add
jae
ljmp
xorb
pop
lahf
mov
cmpsl
in
es
cmp
sub
sbbb
ljmp
adc
inc
mov
fidivl
bound
movsl
mov
fcmovnb
int3
je
aad
sbb
ds
insl
mov
bound
add
add
es
les
insl
cld
aas
jl
pop
les
add
pop
xchg
lcall
mov
jle
mov
jbe
sti
les
pusha
mov
adc
je
outsb
loop
fisubl
lahf
movd
jl
test
mov
xor
push
loopne
mov
mov
mov
fistps
lods
push
lea
push
ds
or
hlt
jbe
daa
out
push
cs
mulb
lahf
sub
add
cmpsb
push
or
iret
dec
jg
das
pop
inc
scas
repz
mov
leave
jp
stos
stos
fistl
jne
xorl
ja
fidivrs
daa
xor
mov
xlat
ja
data16
out
das
scas
xor
sti
cmp
stos
xchg
dec
jns
mov
jbe
jbe
out
cmpsl
dec
cs
adc
push
movsl
inc
lahf
xchg
push
mov
mov
idivb
or
pop
xchg
cmp
lret
orl
into
sub
imul
xchg
sbb
ds
rcl
mov
popf
sbb
negl
das
fstpl
pop
and
adc
jl
js
add
mov
xchg
push
adc
addr16
rcl
sub
es
mov
cmp
negb
adc
xchg
fcmovbe
mov
mov
ss
mov
insb
fiadds
jo
outsl
dec
lahf
popa
fadd
xchg
and
pop
es
inc
inc
jl
mov
add
jno
xchg
aaa
stos
and
and
cmpsl
std
mov
jo
adc
outsl
jle
dec
jo
inc
scas
smsw
out
and
inc
xchg
pop
mov
jl
mov
faddl
push
cmp
cmp
in
out
mov
pusha
mov
dec
or
fdivrs
mov
rclb
push
clc
outsb
cmp
test
negl
daa
adc
pop
out
cmp
cmp
inc
pusha
cmpsb
inc
xor
push
jg
out
aam
pop
testb
pop
jp
dec
pop
out
sub
fisttps
aaa
mov
xchg
es
adc
add
mov
cld
outsl
dec
into
outsb
pop
mov
sbb
xchg
mov
mov
xchg
fnstsw
bound
dec
call
add
lcall
lcall
jns
mov
outsl
xlat
pop
sbb
pmaxub
sbb
jge
cmovo
jbe
or
pop
cmpsb
sbb
in
into
or
cld
iret
ret
push
dec
xor
mov
pop
adc
data16
mov
lahf
mov
sbb
jmp
mov
scas
jns
jg
mov
loopne
mov
dec
jecxz
cmp
cld
dec
jo
scas
sbb
test
lahf
jns
jg
mov
loopne
mov
pusha
add
xlat
jle
dec
adc
mov
inc
ja
out
test
pop
fcoms
mov
lea
cmp
push
shrl
cmpsl
stc
jp
or
outsl
push
push
repz
pushf
mov
iret
inc
in
out
jle
xchg
sub
test
push
data16
or
push
leave
jg
dec
aas
scas
hlt
ja
outsl
cli
test
leave
dec
xchg
push
jbe
faddp
ss
pop
mov
xchg
jne
in
scas
pop
data16
push
add
scas
inc
xchg
pop
xchg
jmp
xchg
out
jge
mov
xchg
xor
push
mov
or
mov
in
mov
jbe
sub
minps
scas
mov
adc
mov
mov
test
add
outsb
repz
ret
dec
daa
or
addb
inc
sub
insb
pop
xchg
or
jl
mov
popa
jl
xchg
testl
jle
jp
push
xchg
ja
adc
mov
enter
ljmp
pop
iret
jo
roll
xor
xchg
jno
push
mov
or
pop
imul
jge
ja
mov
cmp
insl
push
jo
pop
add
repz
jg
xor
pop
xchg
cmp
dec
repz
pop
adc
xor
xor
jo
js
mov
scas
loope
out
sub
xchg
fsubr
int
push
scas
pop
and
outsl
pop
or
rcll
mov
jle
jl
aad
push
mov
pop
bound
cmp
adc
jle
cmc
dec
pop
inc
xor
dec
jecxz
xchg
std
mov
fdivrs
jle
push
push
cmpsl
inc
imul
and
pop
fs
divl
aam
or
push
pop
pop
jg,pn
mov
cli
loope
cli
sti
inc
es
outsb
cmpb
inc
cld
outsb
gs
mov
jne
inc
or
push
mov
jae
sahf
jne
pop
femms
xlat
jp
aaa
loopne
inc
ja
xchg
mov
cmpsl
xchg
fbstp
jae
and
imull
mov
jno
mov
push
imul
loop
xlat
jl
outsl
sbb
loope
out
test
mov
jle
daa
scas
sbb
out
popa
xlat
pop
nop
fistl
mov
push
jg
mov
or
in
jge
punpckhbw
ds
jg
mov
loop
inc
mov
push
dec
adc
mov
pop
scas
jg
mov
jbe
inc
movups
imul
ret
dec
popl
cli
jb
push
dec
mov
popl
das
pop
push
dec
push
xchg
aam
jge
jbe
jbe
xchg
lahf
call
dec
scas
or
push
inc
mov
dec
dec
outsb
jne
mov
out
imul
js
outsl
sub
data16
ss
aas
data16
addr16
stos
scas
sbb
mov
push
imul
lods
js
jle
fstpt
outsb
xchg
bsf
aaa
addr16
jg
or
mov
mov
mov
ljmp
mov
push
jmp
arpl
and
sarb
push
orl
or
loope
mov
test
scas
xchg
cli
jg
lret
jbe
jg
mov
and
cmpsl
scas
outsl
gs
out
push
pop
sub
pop
push
repnz
inc
inc
and
lods
cmpsb
or
data16
mov
jb
and
push
jno
jns
mov
jge
emms
loop
testl
addr16
rorl
iret
out
xchg
jnp
dec
mov
in
out
push
cmp
or
or
pop
jg
daa
push
sbbl
mov
push
xchg
xlat
fidivrs
mov
fisubrs
or
push
in
cs
in
jbe
adc
cmpsb
cli
es
pop
cli
arpl
jle
into
lds
or
jp
add
dec
outsb
jp
nop
leave
dec
pop
jb
add
sbb
in
jbe
jle
out
bnd
shrb
in
fucomip
daa
cld
push
xchg
push
dec
jae
mov
or
in
xchg
jg
std
imul
div
push
aad
or
shll
jp
push
dec
dec
jo
mov
dec
mov
jle
adc
sbb
mov
xor
mov
xchg
pushf
out
fistpl
adc
jl
pop
subl
push
jle
je
xchg
aas
push
push
mov
pop
iret
fistps
pop
pop
testl
cmc
imul
negl
stos
lods
mov
pop
jbe
xchg
jg
clc
xchg
daa
jp
dec
mov
out
jbe
mov
cs
dec
gs
out
mulb
cld
ja
sub
cmpsb
push
cmpsl
push
adc
pop
addr16
mov
push
xor
push
or
icebp
xchg
test
pop
mov
sub
pop
xchg
outsl
mov
insl
daa
insb
push
sti
mov
in
mov
sti
in
divb
or
out
xchg
jns
pop
jg
stc
out
pop
pop
pop
push
cmpsl
and
lods
xlat
pop
mov
iret
push
and
lcall
cld
cmpsb
insl
cmp
jl
dec
cmpsb
scas
or
xchg
mov
push
scas
jge
pop
pop
xor
leave
fsub
scas
mov
outsb
imul
xor
jmp
pop
dec
push
notb
adc
nop
or
cmp
adc
push
mov
fimull
jle
lea
les
std
out
cmpsb
add
outsb
cmp
mov
add
mov
pop
pop
ds
jle
das
push
mov
cmp
lret
sbb
push
xchg
xchg
sub
or
push
or
xchg
xor
cld
jae,pn
iret
outsl
push
dec
pop
pop
das
or
jmp
or
cmp
mov
lret
mov
pop
mov
out
dec
push
imull
sbb
xlat
cmp
jle
lea
out
in
jle
mov
pop
scas
dec
rclb
pop
iret
xchg
jbe
dec
mov
jp
pop
pop
mov
ficoms
dec
inc
jbe
outsb
or
inc
scas
jbe
sti
cld
push
addr16
addr16
popa
cmp
pop
cmpb
iret
xchg
pop
sub
pop
fs
dec
cmp
add
lcall
scas
daa
or
das
sti
mov
push
into
pop
aaa
sbb
dec
inc
js,pn
data16
push
xchg
lea
push
cld
add
pop
pusha
fucomi
inc
cmpsl
push
in
pusha
dec
jmp
dec
pop
insw
negb
das
inc
scas
cmp
pop
cmpsl
inc
ficoml
bound
add
daa
pop
outsb
fistl
ds
popa
jae
or
into
punpckldq
out
bound
popl
inc
xchg
iret
stc
lds
decl
pop
xchg
mov
inc
lock
jg
inc
fidivl
jle
aas
fildl
bound
pop
je
daa
fnstsw
lret
scas
add
mov
addr16
cmp
push
mov
notb
cmp
or
cmpb
fistl
int
js
je
mov
test
sbbb
xchg
fstpt
add
sbb
inc
pop
xchg
inc
aaa
decl
mov
negl
add
pop
in
addr16
testb
sbb
das
cmp
fisubs
pop
jg
mov
and
pop
cmp
pop
pop
bound
std
pop
insl
mov
pop
int3
orps
cmpsl
cld
push
push
push
pop
xchg
or
out
jle
dec
ja
xchg
jle
jl
enter
lea
sub
push
fnstcw
jle
xor
push
cmp
call
push
jno
dec
in
cmpsb
cs
mov
out
fiaddl
or
or
out
iret
dec
dec
dec
scas
in
jle
out
es
pop
cs
outsb
xor
mov
fcmovu
pop
adc
pushf
lock
push
pop
ja
cmpsl
sub
out
push
repnz
mov
xlat
mov
leave
adc
scas
imull
or
in
bswap
das
mov
outsb
push
push
push
cld
mov
dec
pop
ja
js
push
stos
call
inc
pushf
dec
into
mov
lret
cld
dec
cmpsb
cli
jg
cmp
insl
push
das
pop
mov
fisttpl
jg
cmpsl
daa
ds
scas
divb
push
pop
cmpsb
clc
out
scas
cmp
push
loop
lahf
dec
or
in
pandn
or
scas
in
aaa
rcll
in
pop
push
jno
cld
push
mov
mov
ss
jbe
jecxz
pop
cmp
iret
daa
jle
push
push
pop
cs
loopne
pop
ficoms
dec
lret
or
aaa
inc
in
ja
xchg
inc
dec
es
add
dec
cmpsl
add
add
pop
push
adc
cmp
ja
and
pop
dec
cmpsl
call
add
adc
xor
cmpsb
add
ret
ds
test
jge
dec
push
add
push
je
scas
or
mov
xchg
jne
jbe
ds
inc
xchg
scas
fidivrl
push
inc
aas
cs
mov
ficomps
popa
mov
jo
adc
mov
data16
daa
mov
js
xor
das
mov
ss
inc
fcomip
out
sti
push
addb
jno
push
xchg
cmpsl
daa
jle
lea
popa
jle,pt
idivl
out
out
push
je
push
jg
mov
lock
scas
add
outsb
pop
cli
add
or
into
or
mov
scas
mov
add
fistpll
xchg
mov
adc
cs
lahf
ja
or
xor
cs
sbb
decl
adc
lahf
sbb
daa
dec
outsb
jbe
sbb
dec
popw
jge
pop
jl
jbe
xchg
in
pop
mov
jbe
faddp
push
repnz
xchg
pop
xor
outsl
push
push
inc
jbe
es
fists
push
pop
jg
daa
xlat
adc
in
push
cmpsb
insl
mov
dec
fdivrl
jbe
incl
xlat
repz
dec
xchg
sbb
pop
es
pop
fdivrl
adc
ds
out
lahf
inc
xchg
popf
push
clc
mov
sbb
dec
add
push
fistl
das
jg
and
jb
ss
sbb
fbstp
popl
jg
daa
out
adc
je
fstp
pop
notl
push
into
scas
pop
jp
lahf
sbb
cmp
jp
jo
aas
or
je
ja
pop
cmp
mov
js
incl
xchg
mov
pop
pop
mov
mov
addr16
mov
jne
cmpsb
mov
pop
les
and
je
fbstp
scas
insl
sub
fcompl
jo
cld
and
jbe
mov
ficomps
bound
ds
push
mov
fstpl
adc
out
mov
jnp
push
jg
insl
fsubrl
mov
jg
xchg
cmp
pop
leave
sahf
ss
xchg
jge
pop
cwtl
pop
jbe
mov
mov
movsb
out
pop
adc
jge
das
addr16
pop
pushf
mov
loope,pn
into
out
push
iret
pop
jl
pop
mov
rcl
ret
mov
fdivl
jle
fadd
dec
mov
and
add
sbb
push
mov
xchg
fidivl
sti
push
xor
adc
fadd
mov
cli
aam
testl
lods
pop
xchg
add
push
shll
jle
push
mov
aam
lods
into
mov
mov
pop
out
lock
sbb
or
movb
incb
xchg
mov
or
out
adc
mov
aaa
lcall
fdivrl
les
shll
jle
cmpsb
addr16
lock
push
jle
cmp
pushf
cmc
rorb
pop
push
pop
movsl
mov
mov
mov
pushf
push
mov
sbbb
sbb
arpl
sbb
call
cwtl
xchg
jecxz
ss
out
push
adc
sub
dec
push
sbb
cmp
orw
popf
dec
pop
insb
jp
fisubrs
arpl
test
cmpsb
xchg
cmc
xchg
mov
insl
nop
rolb
jl
xchg
jns
std
fadd
aam
cmp
inc
and
cmpsb
lcall
fbld
cmp
mov
pop
adc
adc
or
loope
shlb
mov
cmp
clc
mov
iret
shl
sbb
sub
mov
inc
add
mov
pop
push
adc
pop
pop
out
xchg
push
push
or
push
mov
jb
cmc
xchg
sahf
rol
add
outsl
jmp
push
aad
nop
xchg
or
push
add
sbb
aam
les
cmp
repnz
inc
fmuls
addr16
mov
push
cmpsl
pushf
arpl
testl
stc
lret
cmp
lahf
add
adc
in
popf
xchg
push
lahf
or
cmp
dec
mov
mov
sbb
ds
jne
xchg
mov
int3
add
mov
dec
jo
imulb
cs
cli
mov
fidivl
dec
mov
ds
mov
push
push
push
cs
aam
or
jbe
push
cmp
mov
fdivrl
sbb
sub
into
imul
scas
cli
sti
das
push
xchg
sbb
cmp
cmpsb
push
cmp
adc
lcall
test
xchg
sarb
ja
pop
call
stos
or
mov
bnd
or
cmp
sbb
add
pop
mov
es
test
inc
sbb
xor
push
push
adc
cmp
xchg
xchg
xchg
jmp
jg
iret
pushf
scas
ss
outsb
mov
lahf
and
push
data16
mov
ss
cwtl
adc
adcb
push
push
mov
xlat
mov
adc
push
or
call
mov
ss
addr16
fistps
ja
push
push
fidivrs
fstps
sahf
push
mov
sbb
repz
mov
jmp
push
adc
fwait
push
mov
push
adc
pop
addr16
push
movl
loopne
xchg
in
into
mov
adc
pop
inc
pop
mov
pop
gs
dec
into
jl
pop
aas
dec
notb
aas
mov
fdivrp
shl
sub
push
jge
pop
daa
data16
mov
mov
adc
insb
mov
lods
push
shlb
xlat
sub
push
movhps
mov
fnsave
push
loop
mov
adc
cmpb
mov
xchg
mov
mov
in
int
shrl
decb
idivb
pop
fbld
call
lcall
fs
push
pop
es
repnz
jle
pop
push
into
idivl
xchg
xchg
adc
mov
fistl
sbb
fyl2xp1
lods
cmp
push
pop
fidivrs
lods
js
lock
add
inc
jbe
push
stc
stos
adc
adc
setb
data16
mov
fimull
mov
ret
les
adc
mov
xorl
add
mov
shrb
adc
cmp
pop
sbb
lahf
lods
xorb
xchg
jg
sbb
fdivrl
inc
test
fildl
jne
jge
mov
push
xchg
pminub
sbb
xchg
jbe
mov
fwait
rcl
int3
fimull
pop
sbb
mov
push
int3
out
push
out
adc
popl
mov
xor
cmp
ss
aaa
lods
cmpb
push
xchg
inc
fsubrl
mov
or
out
jle
mov
scas
into
ficoml
ss
xchg
mov
or
ja
jge
or
cmpsl
xchg
jl
mov
push
loope
test
sbb
lods
aad
dec
test
jl
setg
popl
push
cmpsb
add
mov
or
push
ja
dec
or
dec
shl
jno
dec
sub
outsl
test
fstpt
notb
imul
push
push
inc
cs
cmpl
push
jl
std
das
sbbb
push
xchg
aas
jnp
int3
mov
cmp
mov
add
out
or
push
iret
fimuls
into
pop
xchg
mov
or
inc
mov
ja
push
not
bswap
call
pop
cli
mov
rcll
jbe
popf
push
xlat
testw
mov
notl
repnz
cmp
add
pop
iret
sbb
pop
aam
fcmovnb
rcr
pop
sbb
adc
push
or
sub
movl
add
jae
cli
ja
clc
das
push
pop
scas
add
pop
subb
mov
xchg
sbb
adc
aam
mov
pop
cs
pop
pop
xchg
add
dec
xchg
sbb
jno
pop
out
addr16
mov
fdivrs
push
push
out
jle
sbb
lods
dec
pop
inc
cwtl
xor
pop
js
aas
sbb
aaa
jge
pushf
rorb
sub
aaa
test
mov
adcl
mov
inc
sbb
out
cmc
js
jge
and
sahf
loopne
stos
and
ds
jne
lahf
add
mov
lock
negb
test
out
dec
in
daa
mov
adc
into
pop
xchg
mov
daa
out
mov
adc
lcall
data16
pop
xchg
into
jle
xor
inc
mov
pop
imul
data16
ds
jecxz
push
jg
in
cmp
push
push
data16
push
jbe
jle
dec
mov
test
pop
push
cmp
xchg
sahf
mov
xor
mov
das
mov
jno
icebp
add
sahf
jno
mov
sbb
xor
push
pop
push
mov
loope
add
out
push
enter
fiadds
add
sti
dec
daa
inc
dec
shlb
fimull
or
and
or
mov
mov
lahf
je
mov
cwtl
pop
test
cmp
cltd
fcompl
dec
cmpsl
pushf
cs
je
xchg
outsl
add
pop
jle
ficoms
adc
dec
scas
in
inc
jp
dec
lods
mov
lcall
imul
int3
data16
xchg
adc
pushf
cs
dec
ljmp
pop
setbe
xchg
out
pushf
mov
ds
add
pushf
pop
inc
pop
mov
jge
inc
adc
xor
pop
push
pop
jnp
lcall
jbe
add
movsb
aaa
xchg
jnp
jle
punpcklbw
daa
popf
push
xchg
test
out
fimuls
or
xor
dec
cmpsl
out
mov
xor
push
xchg
sahf
int3
push
pop
mov
imul
ljmp
inc
or
fcmovu
adc
mov
testl
test
inc
out
sar
out
lcall
xchg
jl
xchg
int
xchg
aad
jle
dec
imulb
adc
mov
inc
popw
fsubrs
lods
xor
daa
mov
mov
lahf
xchg
jno
lea
cld
es
xchg
mov
loop
cli
les
aad
fldt
dec
icebp
and
pop
fstpl
into
enter
xchg
inc
jle
pusha
lock
or
es
mull
pop
and
jmp
jb
cmc
leave
sub
fistpll
cmp
or
mov
adc
daa
outsl
lea
mov
or
cmc
mov
sbb
jg
mov
dec
aam
pop
negb
push
addr16
push
pop
scas
loopne
ss
lods
xchg
mov
mov
test
add
push
loop
enter
sahf
out
clc
in
dec
xchg
push
sahf
lea
xor
push
inc
cmpsl
lahf
or
cltd
mov
and
popf
pushf
mov
pop
outsl
mov
xor
xchg
out
popf
jp
insl
push
add
xchg
repz
lds
pop
ss
mov
jle
push
mov
es
dec
cwtl
mov
fnstcw
push
mov
std
push
arpl
loopne
xor
jecxz
scas
mov
add
out
jno
notl
mov
iret
push
add
xlat
cmp
cld
mov
mov
mov
jmp
cs
xchg
cmc
mov
mov
sbb
sti
ret
clc
mov
insb
mov
dec
inc
out
imulb
ret
or
dec
mov
negl
nop
or
clc
mov
add
mov
cwtl
jecxz
push
into
repnz
leave
ficompl
loop
add
sub
or
lcall
imul
addr16
cwtl
dec
mov
xchg
iret
movb
or
inc
adc
loopne
push
pushf
into
lods
dec
out
dec
lods
fidivs
in
and
loopne
fucomip
clc
jle
data16
mov
jbe
inc
ficomps
sbb
call
in
addl
adc
cmp
fs
xchg
inc
adc
mov
pop
add
ds
pop
dec
push
idivb
sbb
stos
cld
jb
push
xor
test
into
mov
not
scas
and
pop
orb
out
sbb
std
clc
aas
mov
lock
into
addb
pusha
mov
xor
add
test
dec
mov
push
aam
shlb
and
fcomip
es
xchg
repnz
jp
mov
xor
es
pop
incl
outsb
ja
push
pop
outsl
out
ficompl
enter
xchg
ret
push
or
jp
add
and
lea
test
push
out
adc
in
fdivr
rorb
notb
outsb
cld
sbb
fistps
pop
pop
insb
jne
sbb
ficompl
xchg
into
aad
jb
jo
sar
ficoml
sbb
fidivrl
mov
mov
testb
out
call
pushf
mov
shlb
xor
add
jle
jo
jg
jg
push
mov
enter
or
cmpsb
push
or
cs
jb
jnp
rorb
mov
scas
mov
bound
adc
mov
in
xchg
dec
ljmp
test
xor
mov
push
or
mov
sub
lcall
jae
cmovl
pop
hlt
in
mov
mov
adc
sbb
pushf
push
decl
in
or
inc
pop
sbb
dec
fistpll
out
inc
adc
adc
stos
push
sbb
pop
mov
scas
fs
cld
mov
lcall
jae
ss
sub
xchg
cmp
outsb
outsb
jmp
out
pop
sbb
popa
cmp
jbe
jno
insl
scas
dec
jg
out
in
outsb
push
sbb
add
cmp
jbe
push
cmp
xor
loop
in
mov
ds
cs
cmovo
fwait
jmp
es
push
sbb
cmpsl
push
repnz
mov
inc
mov
adc
pop
push
push
cs
cmpl
int3
int3
test
je
pop
jno
jns
mov
or
cmp
pop
insl
fdivp
push
out
das
cmpsl
je
outsl
ret
insb
push
int3
xchg
mov
jp
sbb
jle
decb
fdivrp
into
cmpb
cmp
enter
push
jl
in
arpl
mov
push
xorl
push
fs
jl
scas
std
lahf
sbbb
test
out
aaa
adc
pop
pop
insl
push
xchg
push
xchg
mull
push
int3
test
pop
pop
sbb
out
jg
outsl
cs
ljmp
pop
xor
mov
lods
mov
push
jle
negl
insl
push
dec
push
aas
pop
dec
movsl
lcall
or
jbe
or
adc
out
fcmovbe
rclb
cs
push
xor
pushf
cmpsl
sti
imul
stos
push
push
cwtl
push
aaa
cmp
pop
out
scas
jmp
jne
in
out
leave
sahf
lret
inc
paddw
outsl
add
sub
inc
xor
jo
dec
cmp
inc
inc
cli
hlt
jge
lahf
in
xor
aam
pop
aaa
jb
arpl
jb
adc
cmp
ja
push
shlb
mov
adc
pop
das
push
pop
jle,pn
jecxz
iret
jnp
mov
in
and
push
adcl
popl
mov
sbb
pop
xlat
mov
sldt
sahf
mov
adc
or
and
or
push
ja
aam
cmp
pushl
sbb
gs
xlat
xchg
mov
fs
xchg
adcl
xlat
mov
add
push
decb
ds
or
push
fisubrs
sahf
push
xchg
sbb
push
ja
sahf
fs
cmpb
fucomi
fwait
add
mov
es
sahf
push
pushf
roll
arpl
stos
loopne
mov
mov
push
xor
cmpsl
aaa
or
cmp
iret
arpl
dec
pop
loop
inc
dec
divl
and
pop
mov
shl
mov
xor
data16
mov
dec
inc
jno
aas
sbb
scas
cli
data16
or
push
js
adc
mov
faddl
aam
fldenv
mov
mov
rcrb
mov
dec
fistps
push
sub
imul
cmpsl
jge
jno
mov
movsb
sub
aam
lahf
fldenv
xchg
mov
sahf
dec
mov
pop
add
dec
xchg
popf
das
ja
cltd
sbb
xchg
pop
push
sbb
stos
cmp
mov
xchg
dec
sbb
mov
imul
rcrl
sub
mov
cmpl
jns
lret
sahf
sbbb
jmp
push
js
in
pop
sahf
shll
push
push
mov
add
cmp
mov
dec
data16
dec
mov
or
sbb
sahf
ret
test
lahf
bound
mov
inc
andb
mov
xor
lahf
xor
xchg
loopne
jne
add
sub
in
out
xchg
mov
jns
pop
fisubs
sbb
inc
xor
jno
and
nopl
fwait
mov
adc
int3
mov
pop
sahf
adc
pop
subb
fstpl
mov
inc
lock
sahf
mov
nop
and
and
ror
mov
sahf
cmp
js
sub
js
xchg
ret
jecxz
sahf
xor
mov
sahf
add
test
call
cld
pop
jp
xor
push
decb
test
dec
mov
cmp
push
mov
cmpsl
das
in
push
adcb
lea
pop
les
mov
clc
sub
mov
xchg
lds
inc
mov
ja,pn
xchg
sbb
movsl
xchg
xor
push
sti
ja
insl
push
inc
push
jge,pn
outsl
clc
jg
pop
pushf
push
fimull
mov
cltd
les
cltd
xor
xchg
loop,pt
cmpsl
inc
lock
inc
outsb
push
mov
sahf
add
mov
aas
aam
repnz
dec
cli
int
inc
dec
shrb
ds
xchg
add
daa
mov
xchg
rcll
mov
adc
mov
or
push
pop
sub
push
mov
test
xchg
out
daa
mov
cmc
cmpsl
data16
xchg
and
mov
lahf
lcall
or
push
imul
into
je
aad
fildl
dec
lods
sub
xchg
jge
es
inc
ss
or
jg
push
add
or
gs
fisubl
dec
scas
xor
loop
gs
std
imul
sbb
mov
jle
lret
outsb
jp
sarb
les
jbe
cmp
popa
data16
je
mov
dec
xchg
add
sub
inc
ds
popa
push
and
std
aaa
inc
ss
dec
mov
fwait
or
push
mov
or
cld
push
data16
jg
xchg
loop
sbb
jnp
fiadds
iret
mov
dec
dec
mov
mov
pop
mov
add
ret
ja
stos
push
adc
jb
cmp
lock
jle
fcomps
mov
call
rolb
mov
mov
push
loop
inc
sbb
mov
mov
jle
pushf
loopne
cli
add
std
jge
ja
xchg
enter
ficomps
jbe
push
pop
cs
pop
jle
aam
inc
xchg
dec
ficomps
mov
outsl
mov
std
jbe
out
jnp
jg
or
xchg
or
repnz
mov
dec
adc
push
inc
xchg
push
fistps
push
outsb
cmp
mov
arpl
xchg
xor
xchg
in
int
sbb
sub
pop
call
sbb
cld
adc
pop
xchg
clc
inc
or
xchg
cmp
xchg
push
push
clc
adc
push
sbb
sbb
into
inc
ds
adc
inc
xchg
imul
imul
int3
mov
cwtl
cli
adc
sahf
sti
call
dec
cmp
mov
mov
es
les
arpl
jnp
sbb
jle
in
adc
or
int
jp
fidivl
pushf
out
clc
mov
mov
out
xchg
pusha
pushf
mov
mulb
fsubrp
cmpsl
jb
out
clc
mov
inc
rolb
fwait
sbb
mov
push
lcall
aas
jle
in
push
jbe
lods
imul
imul
push
mov
mov
out
dec
mov
cld
rsqrtps
out
push
sbb
jle
fwait
in
aam
dec
pop
sbb
mov
adc
lcall
xchg
mov
mov
jb
pop
stos
push
xlat
ja
shr
mov
push
mov
ljmp
pop
ljmp
ss
adc
iret
jne
dec
sbb
pushf
lret
dec
cli
in
xchg
mov
cld
dec
sbb
lahf
std
push
xchg
pusha
mov
pop
mov
dec
mov
data16
lcall
outsl
inc
xchg
mov
pop
mov
ret
jle
jle
es
insl
popa
jle
mov
dec
addl
and
mov
mov
fcmovnb
cmpsl
xor
sub
add
jae
xor
int3
not
add
sahf
in
add
mov
sahf
pop
cltd
mov
lret
scas
rcll
jbe
pushf
and
add
mov
mov
jae
add
push
imul
mov
push
cmpsl
lahf
std
jp,pt
pop
lods
call
test
dec
rolb
sub
lds
popf
inc
jb
lcall
ss
and
inc
mov
loopne
ficoml
mov
pop
mov
inc
mov
lods
xchg
shl
jle
jecxz
cmpsb
imul
dec
in
outsb
xor
push
push
outsb
shrb
cmp
cmp
aam
inc
mov
or
mov
xchg
mov
mov
sarb
test
xorb
xadd
sub
aad
inc
cmp
xchg
mov
test
dec
cli
pop
punpcklbw
pushf
cmp
loopne
or
mov
xor
aas
sub
test
cld
pop
jns
inc
jle
test
stos
push
pop
fsubrs
pop
jg
sub
cmp
mov
cs
xor
mov
and
lea
xchg
inc
mov
push
sub
pop
and
cmpsl
push
lea
jp
push
pop
dec
cs
push
aas
test
aaa
pop
insl
mov
hlt
sti
lahf
fwait
mov
pop
scas
out
add
push
push
sti
mov
ss
cmpsb
js
add
pop
push
popa
or
jle
or
fs
xchg
sbb
mov
nop
test
xchg
add
lret
fwait
jmp
repz
or
inc
enter
out
jecxz
rolb
outsb
add
imul
xchg
sbb
scas
jbe
adc
test
fisttps
imul
aas
add
cli
dec
lret
repnz
pop
out
aas
shr
sub
dec
cmpsb
int
and
or
add
xlat
addr16
out
ret
repnz
jbe
xor
iret
outsb
in
jb
inc
call
mov
ficoms
mov
inc
es
dec
outsl
ret
loop
lea
orb
ficomps
stos
ret
imul
cmp
fcoms
pop
jnp
push
push
ja
pushl
xlat
mov
mov
jns
and
iret
push
cs
rcr
int3
push
lret
mov
xorl
adc
xorb
add
xor
push
add
fdivs
fisubrl
pop
je
pop
sysretw
testb
mov
rorb
xorb
cs
push
pop
into
scas
mov
divps
dec
enter
pop
pop
push
push
outsb
inc
adc
mov
out
stos
outsb
xchg
jbe
outsb
aaa
lods
push
into
aaa
daa
mov
das
mov
mov
jnp,pn
ret
mov
data16
dec
bound
xchg
daa
addr16
jbe
ds
jbe
fimuls
jbe
mov
psubb
ret
xor
les
mov
push
mov
cmp
sbb
lods
adc
lcall
pop
jle
test
jbe
arpl
xor
jle
ds
dec
dec
mov
xchg
jne
cs
jbe
das
lcall
cmp
fildl
lcall
lods
test
mov
xor
jle
cs
xor
outsb
sub
inc
pop
ss
cli
sub
scas
inc
push
cs
fildl
mov
cmp
addr16
dec
inc
mov
lcall
ds
jbe
repnz
insl
popa
xchg
push
jle
mov
push
es
sbb
dec
xor
mov
push
into
xor
dec
sbb
sbb
jne
cmp
pop
xchg
xchg
pop
jle
xor
decb
ds
subb
adc
mov
push
push
imul
pop
xor
push
cs
movsl
pushf
mov
mov
aam
jge
outsb
divl
js
clc
dec
ss
xor
xchg
jecxz
pop
es
cmp
int3
dec
dec
divl
or
push
repz
cmp
imulb
cmp
mov
inc
inc
jg
or
inc
lds
jle
jbe
ds
movsl
pop
into
xchg
call
in
sub
stos
cld
inc
pop
dec
xchg
dec
fisubrs
mov
jbe
negl
mov
xchg
fistpl
mov
xchg
loopne
pop
xchg
andl
rorb
cli
ja
push
into
mov
push
mov
out
lcall
jge
adc
dec
pop
dec
jmp
add
mov
pop
push
or
shll
clc
outsb
xor
ret
push
xchg
les
mov
das
and
xchg
incb
ret
sbb
mov
mov
push
mov
jb
xchg
cmp
sub
les
sahf
popa
dec
or
mov
cmp
sub
xor
stos
aam
xchg
xchg
jb
mov
es
imul
adc
mov
mov
aam
adc
push
xchg
push
pop
jbe
mov
sub
gs
jae
and
mov
add
cld
cli
jnp
xchg
push
fmuls
dec
push
stos
inc
test
call
call
mov
ss
out
out
sbbl
xchg
mov
es
mov
fldl
mov
out
ds
cmc
cmp
outsl
ds
push
mov
inc
loop
lcall
aas
push
jne
dec
inc
testb
aam
push
push
push
rcrb
push
pop
out
popa
dec
ds
in
add
aas
imul
test
aas
imul
roll
pop
mov
negb
sbb
xchg
popa
xchg
out
inc
jbe
int3
in
push
aad
ds
jae
inc
add
out
jle
dec
lahf
sub
sbb
mov
xchg
scas
mov
pushf
mov
cli
xchg
xchg
loop
dec
sahf
int3
cmpsb
push
repnz
pop
mov
push
xchg
inc
inc
lcall
idivb
xchg
aas
cld
jg
mov
rorb
fimull
cli
jbe,pt
loopne
ret
std
inc
dec
pop
les
es
ret
cs
mov
stos
ja
popf
stos
xchg
dec
fidivrs
jb
out
xchg
repnz
pushl
cs
stos
xor
mov
dec
js
ds
bound
test
fmul
dec
lock
add
aaa
fmulp
push
fsubrl
mov
call
out
decl
nop
nop
in
jle
adc
dec
push
push
mov
mov
mov
sub
dec
xchg
xlat
lods
popl
xchg
sbbb
data16
xchg
lcall
sbbb
push
mov
subl
in
cmpsl
mov
push
ja
jge
jg
lods
or
outsb
push
push
lret
inc
bswap
notl
pop
push
jl
call
inc
pop
jle
jb
jle
movl
fcom
xchg
jle
push
in
mov
jbe
add
pop
jle
push
in
es
pop
jle
jnp
data16
sbb
push
pop
jle
push
in
pushw
xchg
cmpsb
sub
in
push
mov
jae
mov
and
pop
insl
popa
aad
mov
xchg
mov
cld
fcomps
aas
cltd
add
sbb
push
mov
xchg
mov
ficomps
adc
xchg
mov
nop
jno
pop
xchg
jl
jbe
out
cmp
incl
pop
sbb
jno
jbe
outsb
dec
test
std
arpl
push
pop
cmpsl
xchg
mov
mov
inc
jle
cli
test
add
xchg
aas
jp
inc
fisubrs
stos
xchg
sub
cwtl
pop
sbb
aas
cmpl
jbe
ret
xor
xchg
fnstcw
jbe
jno
cwtl
mov
fisttpll
cltd
jbe
outsl
insl
sar
lcall
cwtl
jecxz
sbb
sbb
repnz
loop
je
in
inc
sarb
ret
add
les
cli
fwait
mov
das
or
lahf
fadd
add
fwait
dec
pop
push
push
scas
sbb
pop
jbe
outsb
rcrb
dec
cwtl
cmp
iret
jae
mov
ret
xchg
add
ds
repnz
jle
cs
data16
das
jle,pt
add
jno
adc
push
cs
push
jge
out
push
mov
push
inc
out
ja
mov
mov
and
xchg
jg
test
aam
pop
mov
or
xchg
ds
sbb
aam
lds
jg
aas
pop
lcall
int3
pop
mov
push
jae
jmp
imulb
pushf
int
cmp
jle
loopne
push
fimuls
rorb
cld
pop
push
test
mov
add
clc
cli
push
cltd
add
jae
mov
sahf
cmp
cmp
add
mov
aam
les
mov
mov
sub
ret
rcrb
mov
push
outsl
mov
divb
pop
setb
dec
call
xor
or
fdivp
pusha
shlb
inc
cmpsl
jg
jge
pop
ds
ja
outsb
push
xor
jecxz
scas
jmp
jge
xlat
dec
xchg
jp
notb
repz
jle
in
iret
add
lea
and
pop
and
mov
jg
xchg
scas
loop
orl
iret
push
mov
xchg
scas
push
dec
push
pop
cld
fcmovnb
push
inc
loopne
push
sub
lret
aas
popa
jne
push
ret
stos
popa
aam
pop
lcall
jge
pop
pop
dec
int
jbe
push
data16
divb
cmpsl
jns
adc
dec
out
int3
aad
imul
dec
push
xchg
repz
stos
push
cmpsb
push
dec
cmovo
cmp
push
jbe
sbbl
mov
shlb
jp
aam
scas
shlb
imul
outsl
sahf
xchg
sbb
xchg
add
cmp
movswl
pop
ss
hlt
ret
or
jl
movzbl
cmpsb
cmpb
adc
pop
jmp
test
lahf
loop
clc
and
jle
and
mov
int3
dec
les
xor
out
int
ja
jne
mov
push
or
jbe
mov
out
arpl
jae,pn
mov
mov
pop
cmp
dec
in
sub
outsb
mov
cmp
sbb
aaa
scas
push
jp
into
pop
ljmp
imul
pcmpeqb
repz
int
mov
adc
push
repnz
cs
or
cmp
add
clc
in
daa
testl
push
adc
mov
out
inc
sub
push
mov
clc
push
xchg
adc
divb
leave
jmp
lock
mov
insb
push
inc
inc
pop
sbb
jnp
sub
out
insb
and
push
in
sahf
mov
fmul
enter
xor
sbb
iret
xchg
pop
add
in
and
test
push
into
pop
inc
ret
add
add
xchg
dec
jmp
mov
icebp
pop
jp
loop
xchg
loop
pop
jb
loope
es
out
pushf
je
mov
pop
lahf
xchg
outsl
repz
bnd
add
xchg
sub
mov
lahf
pop
push
das
push
push
imul
jb
mov
scas
xchg
xchg
mov
inc
sbb
jle
cmp
inc
aas
lret
loop
mov
xchg
add
add
cld
pop
ds
aad
aam
add
push
cli
out
sbb
jp
sbb
lock
jnp
mov
ja
aaa
jp
pop
insb
clc
aas
scas
push
mov
xlat
mov
sub
insl
addr16
mov
outsb
xchg
xchg
aas
dec
push
test
add
inc
adc
sbb
ds
sbb
push
xchg
jae
in
and
into
cs
push
push
push
sarl
pop
clc
xchg
add
mov
popf
ds
cld
cli
testl
add
and
xchg
sub
jle
out
xchg
push
test
mov
jg
cmp
xchg
fildll
inc
loopne
push
jne
cs
jns
jg
add
cmp
cmp
adc
cmp
test
test
std
arpl
pop
std
arpl
pop
inc
pop
pop
lods
pop
pusha
inc
jbe
sti
sarb
aas
jae
xchg
mov
pop
add
jo
movsb
repnz
xor
jle
clc
jg
fisttpl
outsl
pop
add
inc
aam
fdiv
xor
jbe
in
add
xlat
in
jecxz
icebp
add
cld
jle
dec
shl
sub
shrl
loop
xchg
dec
mov
test
cld
popf
dec
fidivs
out
bnd
into
dec
cwtl
dec
lods
scas
push
cmpsb
adc
jg
lods
or
in
inc
enter
sbbw
mov
into
repnz
jb
dec
ret
in
xchg
aam
xchg
adc
fwait
and
jne
and
push
pop
push
enter
sbb
pop
out
out
add
adc
push
outsb
dec
cmc
fiaddl
popf
pop
into
mov
iret
jg
cli
xchg
mov
dec
loop
cld
addr16
push
fwait
jg
jbe
push
dec
inc
repnz
push
int3
adc
push
cmp
or
lea
dec
push
jg
fwait
mov
aam
pop
out
pop
enter
jle
xchg
dec
out
incb
mov
dec
and
pusha
mov
xchg
push
sub
repnz
je
mov
inc
jp
dec
pop
mov
dec
fisubrs
shll
inc
xchg
stos
jne
pusha
mov
addr16
add
iret
lock
aad
pop
femms
pop
cwtl
xor
jnp
scas
pop
jbe
imul
jle
lods
push
mov
cs
sbb
dec
jg
bsr
test
shl
cli
imul
jae
pop
push
insb
nop
dec
les
add
add
mov
sub
out
fcoms
xor
jnp
aaa
pushf
jg
leave
out
pop
mov
dec
ljmp
aam
xor
push
lcall
jecxz
jle
aas
push
xchg
dec
push
xchg
stos
push
push
in
push
add
push
into
or
pop
out
ds
je
jge
pop
arpl
shrb
in
inc
ds
rcrl
mov
fsubr
jg
data16
sub
dec
lcall
mov
jl
outsl
sbb
adc
iret
jae
fimull
mov
pop
popl
push
nop
mov
into
jbe
xchg
call
scas
aaa
movsl
iret
addb
pop
scas
sti
insb
out
ja
into
out
xchg
dec
outsb
fimull
dec
jge
push
jecxz
aam
jge
js
mov
outsb
into
sarb
loopne
negb
enter
jp
mov
dec
jg
das
mov
and
out
aas
dec
jle
adc
dec
mov
pop
popf
mov
mov
dec
pop
rol
add
mov
add
outsb
sub
into
jb
fisttps
cli
push
push
xor
jno
add
or
outsl
mov
xchg
pop
scas
or
push
xchg
push
jae
cld
into
push
int
jno
shlb
add
fidivs
lahf
aaa
dec
outsb
push
cli
pop
sbb
fs
mov
xchg
movl
pop
enter
scas
xorb
negb
mov
xchg
push
mov
mov
ja
into
push
iret
idivb
idivb
jae
jg
stos
out
js
xor
call
mov
stc
mov
jg
dec
shl
jae
clc
jg
sbb
fimuls
sub
xchg
lcall
fiaddl
test
adc
dec
mov
pop
lret
fsubrs
fmuls
fnstcw
mov
mov
adc
negl
jne
lcall
fwait
dec
in
daa
pop
mov
add
outsb
jae
jg
fwait
loop
push
lcall
daa
outsl
inc
popa
xlat
push
ja
insb
add
mov
push
pop
push
mov
jle,pn
mov
pop
repnz
call
mov
fimuls
loop
aam
xchg
pop
aad
push
stos
aam
jle
sbb
jg
xchg
arpl
shlb
negb
pop
xor
lock
xchg
mov
lods
popf
add
add
pop
test
cs
aad
push
sub
fwait
pop
mov
push
cmp
into
lods
jne
dec
shlb
cs
cmpsl
inc
xchg
jle
push
push
mov
push
into
jle
scas
or
popf
inc
rclb
inc
sbb
in
pop
sbb
bnd
fbstp
sbb
xor
outsb
imul
add
out
xor
cmp
xchg
mov
mov
cli
jbe
jne
aas
xchg
outsl
jl
xchg
lock
xchg
movb
stos
cmp
jle
enter
icebp
pop
outsb
test
movsb
lahf
mov
std
outsb
jno
ss
xchg
rolb
push
dec
inc
sub
inc
es
pop
xlat
ret
pop
aaa
inc
ja
out
mov
xchg
push
mov
push
sbb
insl
cld
dec
aad
arpl
jp
inc
int3
or
xchg
cmpsb
mov
mov
fldt
push
mov
ja
add
or
cli
push
cmp
icebp
addr16
popl
inc
fistpl
aam
dec
jg
jnp
cmp
xchg
out
fildl
cmp
mov
jp
rcr
xchg
lods
lea
inc
jecxz
mov
xchg
xchg
push
add
negl
and
dec
xor
daa
xchg
data16
daa
sete
ret
inc
dec
jl
jle
mov
jbe
xchg
mov
xchg
dec
into
cmp
hlt
loopne
push
push
jbe
push
mov
push
mov
pop
or
clc
bnd
mov
xchg
mov
movsb
enter
mov
pop
and
mov
sbb
dec
jle
xor
push
fsubs
ss
into
out
scas
push
ret
sub
sub
xchg
mov
clc
fisubs
gs
mov
jbe
sub
ss
push
mov
or
clc
lock
inc
fdivr
cmp
push
dec
imull
ss
data16
pusha
push
jmp
idivb
cmp
cmp
mov
into
out
out
jb
cmp
mov
add
out
lcall
xor
push
jp
cld
xchg
jno,pn
inc
addr16
or
dec
test
test
pop
cli
mov
sti
shrb
push
adc
mov
push
push
add
aam
push
testb
inc
mov
mov
arpl
pop
call
mov
ret
add
pop
divb
or
xchg
sbb
mulb
inc
insl
scas
mov
dec
mov
mov
lock
jnp
mov
xor
gs
or
cmp
jo
movsl
cmpsl
lcall
sbb
pop
cmp
push
loopne
mov
sub
jge
mov
jnp
pop
sub
test
orb
pop
pop
adc
and
pop
cmp
cltd
dec
inc
push
jb
iret
js
push
pop
adc
inc
or
xlat
cmpsb
pusha
push
mov
into
xlat
out
icebp
js
iret
mov
mov
pop
cmp
data16
cld
pop
xchg
push
push
jae,pn
and
inc
dec
add
mov
xor
in
imul
jl
cs
pop
jae
scas
cs
inc
outsb
dec
mov
outsb
lock
adc
shr
fildll
pop
roll
or
stos
int3
je
cmp
pop
jns
dec
add
out
mov
xor
fs
push
add
mov
push
xchg
fwait
pop
or
pop
push
sub
popf
stc
push
ficoms
idiv
test
mov
xchg
sub
mov
inc
out
push
js
dec
sbb
lods
js
ret
xchg
inc
mov
fsubrl
fisttps
sub
fisubrs
mov
stos
cltd
cmpl
inc
add
mov
cwtl
jns
into
outsb
ds
aas
pusha
clc
aam
dec
cs
or
mov
negl
icebp
cltd
aas
push
aaa
dec
pop
and
add
jg
push
ret
xchg
in
jmp
fists
mov
incb
outsl
fdivr
leave
aas
sbb
std
out
nop
xchg
movl
pop
sub
cs
int3
mov
out
jp
test
xchg
je
xor
push
lcall
outsb
push
dec
fwait
scas
push
and
dec
pop
push
cmp
test
sbb
inc
xchg
cs
pop
les
dec
xor
dec
js
mov
es
xchg
pop
cltd
ret
scas
push
mov
mov
pop
cmpsl
ficompl
mov
cwtl
cmpsb
pusha
push
in
pop
mov
pop
jp
mov
mov
repnz
cmp
int
cmp
mov
dec
cmc
pop
ficoms
add
pusha
adcl
pop
clc
add
addr16
push
sbb
mov
ss
scas
fdivrl
pop
cs
jle,pt
imul
mov
jp
and
dec
sbb
add
dec
clc
mov
inc
cltd
ja
cmp
sbb
aas
mov
adcb
pop
out
cmp
ljmp
incb
jbe
and
fmull
outsl
xchg
ja
mov
dec
sti
sbb
push
iret
jge
mov
test
xchg
xor
into
dec
stos
fstl
incb
cmpsb
mov
stc
lcall
xchg
pop
outsb
dec
das
adc
imul
or
xchg
sbb
nop
pop
sbb
das
pop
fmuls
xchg
dec
insb
lcall
and
xchg
into
xor
icebp
pop
cmp
incb
fildll
push
pop
jle
adc
mov
xchg
mov
ret
dec
cmp
fwait
or
jle
ficoms
pop
sub
cmp
mov
add
ja
out
mov
dec
inc
out
mov
lahf
mov
cltd
je,pt
xchg
cmp
push
dec
int3
pushl
dec
inc
call
lahf
pusha
cmp
push
pop
jecxz
sub
xlat
imul
notl
scas
pop
jg
movsb
or
cmp
push
dec
xchg
shlb
dec
scas
out
outsb
jg
js
lahf
xchg
jle
pop
aas
push
jnp
dec
or
das
push
repz
cmp
popf
decl
shll
aas
push
cmpsl
outsb
test
data16
cmc
into
add
js
pushf
decl
cwtl
fbld
lods
inc
insb
fidivrs
inc
js
dec
js
cmp
mov
fs
inc
shl
bound
adc
xor
xorl
xchg
lcall
pop
pop
stos
jo
push
sbb
and
inc
mov
fs
push
mov
sahf
aaa
lods
sub
pop
dec
mov
mov
cmp
mov
inc
jl
inc
stos
xor
xchg
inc
hlt
addb
push
ficomps
or
daa
adc
mov
das
aaa
sahf
lret
sti
rol
out
push
push
sahf
sbb
in
movsl
sbbb
into
jno
pop
cld
jbe
inc
das
test
pop
sahf
shrl
add
outsl
and
les
ret
stos
mov
jmp
imul
jmp
push
rcrb
dec
les
sahf
fistps
mov
push
sbb
cltd
aam
mov
pop
inc
lret
sub
pop
test
loope
lahf
fucomi
int
clc
xchg
ja
mov
jmp
ret
in
pop
cmp
jb
shrb
inc
out
xchg
xor
and
xchg
pop
test
jmp
scas
sahf
mov
pop
out
mov
xchg
mov
xlat
ljmp
mov
pop
pop
repz
mov
and
insl
sub
aam
out
dec
push
mov
dec
jns
pop
ret
pop
lds
sbb
mov
jns
addb
pop
aaa
lea
adc
sahf
andb
push
sub
js
fwait
mov
rorb
mov
xor
shrl
push
and
adc
insl
or
cltd
fwait
outsl
rolb
push
lds
pop
dec
push
gs
iret
mov
aas
mov
xchg
xor
push
ds
cs
stos
sahf
call
adc
imul
or
push
jl
js
cli
xchg
sub
pop
xor
xor
add
loop
mov
scas
xor
pop
cmp
pop
rcl
mov
shrl
loopne
sahf
cmp
mov
arpl
mov
xchg
scas
xchg
lods
adc
sti
icebp
orb
xchg
jb
sarl
data16
loop
mov
lods
mov
push
out
leave
dec
push
jae
gs
pusha
dec
push
mov
push
test
push
mov
fbstp
clc
sarb
std
lods
mov
cmc
inc
pop
dec
sub
out
das
es
out
push
lret
arpl
mov
pop
push
push
rolb
mov
iret
lcall
xchg
and
in
mov
sahf
adcl
push
lahf
mov
jb
test
pop
setl
or
lea
xchg
rcr
repnz
jne
sahf
stos
outsl
std
xchg
pop
js
push
cmp
jp
shl
outsl
push
mov
inc
rclb
add
mov
jnp
xor
mov
cwtl
push
xchg
inc
sbb
push
cs
inc
xor
and
cwtl
xchg
outsb
mov
xlat
sbb
data16
mov
inc
js
pop
sub
mov
or
lahf
lcall
sbb
mov
xor
pop
lods
sti
push
push
js
cld
and
pop
xchg
nop
movsl
or
dec
or
dec
lcall
outsb
push
nop
xchg
outsl
adc
mov
and
data16
xchg
fs
sub
mov
pushf
cltd
inc
adc
std
pop
mov
decl
ds
jbe
mov
icebp
int
mov
mov
lcall
mov
test
outsb
xor
dec
cmp
mov
rcrb
jae
cmpsb
jne
jl
leave
sbb
cltd
pushf
push
jne
ret
add
fiaddl
xchg
fs
mov
das
cmp
js
adc
and
lret
mov
pop
and
loope
push
xchg
pop
sbb
adcb
jmp
ficompl
push
mov
mov
xchg
dec
lds
dec
or
outsb
pushf
mov
sbb
xor
dec
sub
mov
lcall
out
lods
jnp
xchg
aaa
mov
or
jo
mov
fildl
pushl
xor
movsl
xlat
mov
xchg
out
pop
mov
std
inc
repz
stos
stc
mov
inc
ficompl
mov
mov
lret
push
adc
ret
mov
pushf
adcl
mov
and
outsb
out
test
adc
mov
cmpsb
sti
dec
jbe
aaa
dec
adcb
push
enter
inc
xchg
scas
out
int
ficoml
test
add
push
out
stos
jmp
push
fdivr
mov
mov
jle
jl
lcall
sbb
mov
sti
lcall
cwtl
jp
lea
push
adc
pop
lcall
push
rcrb
ds
ljmp
lcall
or
data16
lcall
loope
nop
jle
js
lcall
jle
mov
xor
pop
sbb
lret
jle
mov
pop
mov
push
adc
jle
pop
ret
jl
lods
lcall
jle
pop
pushf
lock
sbb
fwait
and
pop
sub
jl
push
and
inc
pushf
add
es
mov
iret
mov
jb
xchg
pop
mov
xchg
cwtl
mov
xchg
dec
push
test
fs
mov
lahf
cmp
aas
test
movsl
lods
sub
xchg
push
adc
mov
pop
out
add
jnp
js
xchg
dec
cwtl
out
js
push
lods
dec
cmp
inc
lsl
mov
pushf
jg
shrl
xor
pop
add
sbb
push
cmpl
jbe
andl
mov
jle
inc
test
pop
mov
pop
xchg
push
nop
outsb
mov
test
fcoml
push
iret
or
jns
pop
pop
push
pop
sarl
out
mov
push
ja
cmp
push
pop
movsb
dec
std
pop
loope
ss
or
mov
das
adc
push
push
push
outsb
cmp
pop
lcall
sub
mov
push
in
dec
cmpsl
scas
fcoml
nop
jae
insb
pop
js
xchg
cmp
andb
add
out
sub
outsl
aaa
pop
push
es
fisttps
pop
add
cmp
mov
pop
addr16
mov
push
adc
sbb
pop
nop
getsec
xlat
pusha
into
mov
out
stc
add
xor
bound
aaa
lods
mov
rcrw
inc
xchg
adc
sbb
fists
xchg
jo
clc
jnp
cmp
pop
pop
js
pop
fldl
or
add
lahf
cmovns
pop
xor
dec
inc
enter
jb
cmp
mov
aaa
mov
add
cmp
je
xlat
add
scas
out
iret
mov
scas
mov
xchg
dec
or
dec
xchg
xorb
jle
inc
mov
pop
sti
daa
inc
dec
mov
fistps
or
minps
and
xchg
or
sbbb
pop
jl
ss
das
xor
lods
popl
jle
ret
jno
ss
pop
ss
into
imul
subb
xchg
andl
cmp
jl
mov
and
lcall
or
inc
sbb
mov
xchg
sarl
mov
push
lahf
inc
fs
cmpsl
jp
jbe
out
mov
pop
inc
inc
lcall
xor
dec
xor
pop
roll
or
jae
scas
imul
ds
mov
mov
xchg
xchg
adc
pop
add
popf
push
xchg
mov
jl
mov
and
rcrl
fs
rep
sarl
sub
mov
fildll
jle
mov
add
mov
inc
xchg
sahf
aaa
and
daa
and
mov
pushf
out
cwtl
mov
jl
cmp
dec
ljmp
clc
nop
inc
aam
lcall
lea
sub
fdecstp
ds
mov
push
add
and
fs
add
in
ss
inc
inc
jp
dec
or
sahf
mov
add
mov
call
or
push
sahf
call
iret
inc
inc
pop
decl
inc
xor
pop
pop
imul
pop
mov
cwtl
nop
cmc
mov
mov
js
jle
dec
into
add
fsubp
bound
jp
sti
pop
push
mov
lods
ret
aad
add
lahf
roll
addb
ljmp
push
cmp
cmpsl
push
pushf
fildl
or
xchg
cwtl
xchg
lea
cmp
dec
pop
movsl
dec
mov
lahf
fs
cli
jl
lds
pop
add
bound
movsl
cmp
cs
ss
xor
xor
adc
les
inc
mov
cmp
push
xchg
lea
out
ret
insl
inc
or
in
ret
xchg
mov
in
dec
cmpsl
mov
jmp
adc
cs
sub
mov
je
push
ficompl
pop
cmp
sbb
inc
ds
mov
sub
or
mov
mov
mov
xchg
out
pop
jl
out
das
and
xlat
les
jmp
int
cwtl
cwtl
fcoms
and
mov
lds
imul
mov
mov
imul
outsb
add
jmp
adc
cwtl
int3
add
jbe
in
dec
pushf
mov
mov
or
cwtl
and
pop
push
xchg
lret
inc
xchg
mov
jne
push
xchg
xchg
nop
mov
jmp
out
mov
sub
and
mov
jp
pop
cmp
xchg
js
fcoml
cmp
pop
sbb
mov
mov
and
push
push
push
dec
dec
dec
ss
xor
xor
sub
sbb
lcall
pop
add
out
in
ljmp
into
int3
lret
mov
mov
sahf
lods
stos
cltd
xchg
xchg
xchg
xchg
sahf
lea
jae
sahf
outsl
insl
imul
push
push
sahf
push
dec
dec
dec
cmp
aaa
xor
sub
sahf
adc
or
stc
sahf
div
repz
out
in
jmp
sahf
fcmovnu
xlat
aad
ror
int
lret
mov
mov
jbe
lods
stos
out
jg
sbb
pop
lcall
jle
icebp
mov
jb
test
sahf
icebp
xchg
jp
lcall
pushf
mov
push
jmp
icebp
mov
cli
mov
repz
ss
push
mov
in
and
jmp
xchg
in
pop
out
or
jnp
repz
frstor
adc
insb
in
adc
pop
jmp
jg
sahf
xchg
sub
mov
nop
push
jno
cmp
pop
jmp
add
sbbb
fistpl
and
mov
sub
mov
mov
adc
daa
imul
es
sahf
mov
xor
cmp
mov
sbb
pop
fwait
outsl
cmc
mov
jge
mov
mov
bound
xchg
xor
push
mov
cmpb
int
cmp
fsubrl
sahf
shr
ret
fdivrp
pop
cwtl
test
push
sub
mov
outsl
xor
test
loop
cmc
daa
and
xchg
pop
stc
sahf
fdivr
mov
std
xchg
test
sahf
test
xchg
repz
sbb
xor
cmpb
sahf
in
push
addr16
rcr
sbb
aad
stc
push
pusha
bound
pop
fldt
inc
repnz
adc
cli
xor
mov
xchg
sahf
or
jbe
sub
ljmp
mov
outsb
pop
out
mov
mov
out
repz
lahf
adc
lods
aam
ret
mov
stc
push
pop
sahf
imul
pop
rcl
jae
mov
cmp
jl
jg
adcb
add
fildl
iret
andb
ljmp
sahf
test
dec
movsb
add
and
jecxz
mov
xor
insl
fucomi
test
fnstsw
enter
sahf
and
mov
xor
mov
lret
add
sahf
sub
scas
cmpb
mov
loop
out
pop
int3
xor
sbb
xor
in
in
ficompl
xchg
xchg
pop
dec
sahf
push
xor
mov
sahf
loopne
inc
nop
add
dec
add
push
loop
push
inc
xchg
lds
orl
cmp
dec
insl
mov
setl
shll
cmpsb
negl
nop
sti
mov
sub
scas
lock
push
gs
jno
arpl
cmpsb
mov
outsb
add
sahf
je
push
insl
jb
loopne
sahf
xchg
mov
jp
mov
sahf
mov
fsts
cwtl
gs
imul
pusha
int3
mov
arpl
pop
in
ret
sahf
sub
cli
adc
push
out
sahf
imul
mov
cmpsl
cwtl
cli
sahf
jmp
mov
or
das
jae
aaa
orb
daa
sub
push
sahf
dec
insb
aam
aas
test
pop
lahf
push
es
imul
popa
sahf
sbb
and
sbb
lahf
jle
xor
outsl
sahf
push
xor
inc
call
adc
rolb
test
sub
sahf
xchg
enter
sub
dec
cmp
mov
les
inc
movsl
mov
mov
inc
mov
outsl
cmc
inc
ret
fistpl
cmp
in
sbb
jg
ss
sahf
outsl
lods
jnp
dec
dec
call
data16
jnp
stc
lahf
fldl
and
bound
jle
fisttpll
cmpsb
cmp
lock
fisubrl
mov
push
sahf
pop
aam
lea
cmp
sahf
jge
cmpsb
xor
xchg
loopne
sahf
lods
mov
sbb
jg
orb
cmpb
and
aaa
push
push
pop
cmp
cmp
inc
fs
nop
ds
push
fdiv
xor
adc
in
int3
ljmp
adc
lods
dec
inc
lods
pop
sahf
sub
rep
push
icebp
repnz
js
out
pusha
sub
test
mov
lods
fsubrs
mov
sbb
out
xor
int3
pop
out
mov
lret
jo
test
mov
and
adc
jp
pushf
fisttps
cld
imul
sahf
addr16
push
mov
xorb
aad
adc
push
sahf
push
adc
fstpl
into
movb
loope
or
inc
mov
pop
xor
aam
pop
scas
out
xchg
sahf
hlt
andl
cmpsb
xor
loopne
scas
sbb
mov
lgs
nop
popf
fs
out
push
call
xchg
aam
xlat
add
inc
push
sbb
bound
push
test
mov
push
sahf
sbbb
jmp
add
or
sub
or
outsb
scas
pop
sbb
inc
and
ret
inc
sahf
push
imul
pop
fistpl
rorl
sahf
out
dec
cmp
ror
scas
pushf
cwtl
pop
inc
loop
movsl
loopne
or
ljmp
pushf
cs
repnz
sbb
mov
adc
stos
xchg
aas
xchg
setle
push
cmp
je
imul
arpl
frstor
nop
movsl
test
fisttps
jae
cwtl
sarl
adc
sti
dec
insl
sahf
inc
inc
push
lock
sahf
xor
and
filds
mov
or
fwait
and
sub
xor
jle
ss
xlat
and
adc
mov
or
pop
adc
push
mov
in
mov
pop
ret
fcoms
xchg
push
add
pop
jmp
or
sahf
mov
fisttpl
sahf
test
icebp
inc
sahf
ret
ss
xor
imul
sahf
in
lret
repz
cmp
adc
ficompl
stos
xor
mov
stc
mov
sub
in
lods
jo
movsb
push
mov
stc
ljmp
call
jnp
adc
out
divl
cmp
push
fs
cmpsl
cltd
scas
xchg
fldenv
loope
arpl
iret
cmpsl
cld
fmuls
cmp
jmp
aas
mov
and
fwait
jbe
push
jg
movsb
sahf
mov
or
das
jno
jmp
inc
xlat
and
mov
ds
bound
out
js
xorl
out
popa
sahf
fcompl
lods
adc
pop
adc
and
aad
jle
adc
or
sub
addr16
negl
es
je
and
and
sbb
mov
sahf
pusha
test
and
mov
repz
clc
pop
loop
add
jo
mov
mov
sahf
and
loop
sahf
add
cmp
out
cmp
xor
outsl
popa
sahf
ljmp
cmp
cld
and
inc
pop
xlat
xchg
dec
push
lahf
sahf
mov
add
push
negl
xchg
add
std
sahf
ss
js
test
push
frstor
jnp
int3
mov
int
jmp
add
or
push
sahf
rorl
insl
sbb
inc
pop
addl
push
push
fcomps
out
inc
sbb
sahf
pop
sub
loope
push
sub
in
int
ret
push
les
in
xchg
pop
mov
ficomps
pop
aam
jp
ficoms
dec
fwait
lods
imul
inc
das
jp
cwtl
mov
orb
mov
inc
insb
pusha
ficompl
pop
jg
pop
push
jle
add
pushf
pop
retw
xchg
xchg
pushf
in
xchg
roll
ds
pop
sub
mov
pop
xchg
int3
push
loop
sbb
aas
sbb
cwtl
dec
mov
rcll
xor
pop
jmp
jg
sub
mov
xchg
pushf
paddusw
fistpl
xchg
push
cwtl
mov
mov
xor
sub
hlt
sbb
lods
call
mov
loope
mov
pop
mov
call
cmpl
xchg
bound
cli
seto
mov
repnz
es
subl
ret
pop
xlat
cmpsl
xchg
test
sbb
pop
mov
pop
add
pop
push
nop
mov
jno
push
sbb
push
stos
cmp
push
insl
pop
mov
jbe
fidivl
mov
xchg
push
sub
adc
dec
cwtl
xchg
xchg
jl
xor
sbb
pop
xchg
call
jbe
xchg
loope
mov
test
sbb
xchg
les
sub
pop
add
xchg
ficoml
push
xchg
sbb
popl
mov
loope
fs
pop
jg
pop
jle
movsb
mov
sbb
les
push
cmp
mov
arpl
pop
adc
mov
dec
xchg
sbb
pop
add
testl
xchg
pop
or
js
movsb
cwtl
popw
push
add
in
jg
daa
jbe
mov
insb
push
sbbb
mov
in
sbb
jb
add
jb
pop
aas
xchg
jg
jle
imul
in
or
shll
outsb
imul
in
push
cs
xchg
pop
insb
push
xchg
in
adc
sbb
lahf
nop
movlps
add
jp
adc
sbb
data16
mov
cmpsl
sbb
in
jg
jg
xchg
decb
pusha
push
out
sbb
aad
mov
add
cmp
nop
push
lcall
lcall
dec
pushf
xchg
xchg
push
xchg
push
lea
push
pop
xlat
inc
pop
adc
pop
stc
jb
adc
mov
mov
dec
outsb
repz
sub
mov
repz
pop
add
jg
pushf
sub
std
dec
or
pop
scas
xchg
ds
and
lcall
pop
pusha
sbb
iret
xchg
andnps
xchg
push
push
xchg
push
fisubrs
inc
sbb
push
mov
xchg
int3
cmp
pushf
push
mov
rcl
or
fsubr
xor
andl
jge
lods
pushaw
pop
pushf
shl
sbb
or
mov
iret
or
mov
cs
stc
pop
loope
fs
fnstsw
pop
xchg
xor
cmpb
mov
dec
push
popf
mov
mov
bound
test
sub
data16
inc
jp
dec
andb
mov
xchg
dec
sbb
xor
sbb
dec
mov
push
dec
dec
cmp
xchg
adc
pop
xor
sbb
dec
inc
xchg
sbb
dec
wrmsr
push
mov
sahf
cmpsb
aas
cmpsb
sbb
stos
push
cmp
jno
push
mov
loope
push
sarl
and
cs
xchg
or
ds
jp
into
lcall
daa
int3
mov
pop
jp
cwtl
pop
pop
mov
stc
and
inc
test
pop
push
xchg
mov
push
sub
push
xchg
in
cmp
mov
cmp
out
xor
mov
mov
pop
lock
lods
in
adc
sti
mov
push
nop
ja
xor
mov
push
pop
sub
mov
sahf
movsb
je
jo
mov
in
enter
and
cmpsb
push
xchg
fmuls
imul
gs
sahf
add
mov
xlat
dec
xor
sahf
jecxz
add
adc
mov
loope
sbb
lahf
pop
scas
cltd
mov
rclb
lahf
jo
xchg
sahf
sub
mov
imul
sahf
rorl
sub
xor
fldcw
mov
push
or
aas
adc
les
out
mov
add
push
cmpsb
push
mov
inc
es
shlb
nop
xor
repz
daa
xor
xor
mov
and
add
push
addr16
out
pop
test
scas
and
mov
scas
xchg
pop
out
adc
fisttpl
mov
dec
lret
arpl
xor
push
push
inc
orb
int3
leave
cmp
in
imulb
setle
insl
je
popf
stc
cmpsb
cwtl
push
imul
inc
shll
loop
mov
add
pop
mov
sahf
sti
cmc
mov
and
jl
pop
and
mov
lods
jbe
mov
sbb
cmpsl
pop
sahf
nop
cmc
fldenv
jmp
hlt
inc
inc
daa
sub
mov
imul
dec
sahf
jmp
mov
push
daa
clc
sub
jmp
fs
xor
bound
pop
push
dec
sahf
mov
xchg
test
cwtl
cli
sti
xor
push
es
das
jnp
sub
add
push
inc
cmc
xchg
pushf
pop
lock
inc
sbb
and
pop
int3
mov
divl
sahf
movsl
lock
arpl
add
fistpl
test
lcall
sbb
lock
xor
pop
mov
pop
mov
jbe
or
pop
or
dec
lahf
dec
sub
movsb
dec
jp
test
mov
add
pop
es
cli
test
mov
jl
pushf
dec
out
push
pop
scas
cmp
xchg
or
pushf
push
jmp
mov
lods
fiaddl
mov
dec
paddusb
xlat
and
pushf
popa
fnstcw
ds
movsb
push
or
and
xor
mov
adc
xor
mov
test
cs
sub
sbb
xchg
fisttps
movsb
sbb
daa
mov
iret
mov
lods
decl
outsb
idiv
out
loop
out
and
jnp
scas
ss
or
mov
lret
pop
inc
sbb
push
jg
xchg
std
jb
jnp
mov
fisubl
jl
lret
xor
inc
add
lea
xchg
inc
out
inc
adc
jbe
lods
pushf
lret
sbb
sub
bound
fdiv
push
xchg
test
scas
movsb
sahf
das
mov
cwtl
jle
ds
fimull
loopne
jl
jl
xchg
cmp
xchg
stos
mov
and
loopne
xchg
mov
sti
sbb
mov
push
xor
loopne
xchg
mov
dec
loopne
test
into
mov
sub
xchg
adc
shrb
lea
subb
pop
mov
pop
nop
add
dec
mov
sbb
jge
jp
push
xor
pop
sbb
mov
jle
pop
fcmovbe
icebp
jbe
pop
mov
jle
cmp
or
lahf
mov
xchg
pop
sbb
push
mov
loope
seta
push
jp
cmp
adc
or
mov
pusha
movsb
imul
sub
mov
xor
or
je
cmc
mov
and
jl
sahf
xor
out
cmp
push
lods
xchg
jp
inc
out
call
and
xchg
xor
add
and
mov
lea
inc
xor
lock
int3
in
push
cwtl
dec
fnstenv
dec
or
clc
cmpsb
lods
insb
addr16
ds
xor
mov
pushf
ds
dec
add
mov
sbb
mov
mov
ficomps
ds
jbe
xlat
repnz
aas
or
push
mov
and
ds
inc
movsl
cmp
cmpsl
pop
jae
pop
clc
jb
pop
push
inc
scas
jg
leave
js
pop
push
lahf
jb
stos
mov
jle
xchg
lahf
jb
cmc
xchg
orb
jbe
mov
mov
jle
jg
movd
xchg
inc
mov
sbb
in
fldt
lcall
repz
lahf
mov
aad
inc
dec
sbbl
mov
mov
push
sub
sarb
test
icebp
jno
mov
push
in
xchg
arpl
popa
pop
jg
iret
xor
ljmp
inc
and
mov
pop
scas
sarb
jp
pop
xchg
mov
test
leave
pop
jbe
xchg
jp
loop
adc
pop
outsl
push
or
inc
mov
adc
pop
or
adc
pop
xor
mov
or
pop
sub
cmpl
jae
insb
push
sub
cmp
dec
fldt
rorl
testl
bswap
cld
push
sub
add
imul
dec
nop
adc
push
jnp
iret
out
pop
mov
movsb
mov
gs
in
xchg
pop
sub
std
outsl
daa
movsb
jle
mov
xor
add
mov
cwtl
sub
xchg
stos
fmuls
movsb
jnp
xchg
xor
pop
mov
sub
pop
mov
mov
pop
popa
sub
mov
and
outsl
repz
js
push
cmpsl
js
pop
lds
mov
mov
cmp
sahf
aas
cmp
sbb
pop
dec
outsl
mov
into
mov
sbb
jg
cmpl
push
push
dec
push
push
pop
out
xlat
cmp
data16
push
orb
stc
jg
enter
es
lds
repz
stc
jg
and
into
xchg
cmp
jnp
push
ss
mov
jmp
stos
cmpsl
and
aaa
into
iret
ja
push
ss
cmpsl
pop
sub
jle
jns
add
fdivrp
inc
sbb
mov
pop
cld
push
and
adc
add
pop
mov
push
xchg
adc
cmc
popa
adc
rorl
sbb
loopne
into
add
xchg
add
pop
cmp
cmp
nop
mov
jp
xor
out
mov
std
nop
and
test
clc
dec
popa
adc
and
xor
inc
xchg
insb
sub
push
jns
mov
cmp
fbstp
xchg
test
and
lds
adc
and
push
jnp
test
mov
cmpl
add
cmp
and
pop
pop
jecxz
cmp
nop
and
mov
add
or
cmp
inc
xor
mov
inc
mov
in
pop
jne
mov
iret
jae
aam
les
mov
mov
inc
push
mov
rcrb
fisttpl
repnz
scas
push
mov
mov
jb
mov
pop
ss
mov
jmp
insb
and
clc
sub
adcb
push
in
push
stc
icebp
lods
sti
insb
sub
clc
push
repnz
sub
push
jmp
xchg
sbb
add
cmpb
in
or
sub
mov
xchg
sbb
or
std
repnz
pop
inc
or
je
dec
rorb
repnz
in
dec
pop
pop
xchg
xor
mov
mov
in
xchg
lcall
mov
inc
mov
cvtps2pd
dec
pop
dec
fsubrp
pop
arpl
jo
fdivl
xchg
xchg
push
push
jb
dec
loope
cwtl
xor
or
lods
je
call
std
jbe
icebp
aaa
popw
inc
daa
sbb
out
sub
arpl
add
mov
out
int
cmc
je
fwait
add
cwtl
ret
push
cmp
ljmp
mov
xchg
lds
daa
cmp
mov
dec
lods
push
add
mov
cs
jb
pop
xchg
lcall
cmp
push
xor
lea
js
cmp
cmp
cmp
xor
xor
xchg
cmp
pop
jl
popf
lds
mov
and
push
mov
ljmp
enter
sbbb
pop
imulb
jle
popa
stos
fwait
sub
pop
push
pop
subb
push
call
mov
or
icebp
icebp
gs
inc
aaa
cmp
mov
scas
and
in
dec
xor
xchg
lds
orb
xor
mov
dec
or
push
push
add
aad
push
or
sbb
xor
mov
mov
aas
unpckhps
push
mov
xchg
jp
data16
dec
adc
leave
push
mov
addr16
dec
mov
jp
ja
jnp
xchg
push
dec
jo
mov
movsl
inc
jo
js
out
lcall
out
xchg
jl
mov
call
mov
clc
add
movsb
ljmp
loopne
adc
dec
dec
cmpsb
mov
sbb
imulb
mov
or
insb
clc
dec
add
mov
sti
pop
mov
lock
jle
sub
cmp
cmp
pop
or
ds
test
inc
mov
test
hlt
pop
add
ret
jl
jle
and
push
or
xchg
xor
jp
jp
in
fimuls
rcll
xchg
js
imul
in
imul
xchg
shlb
mov
pop
mov
add
test
jno
sarb
sahf
jne
pop
jmp
sahf
dec
pop
push
aaa
sti
inc
pop
sub
outsl
or
nop
xchg
dec
mov
push
into
xlat
ja
movsb
gs
inc
jno
push
ds
mov
nop
sub
jno
sub
scas
jmp
pop
outsb
cmp
aas
pop
lret
mov
or
pushf
push
clc
inc
pop
or
inc
call
sahf
push
cmpsl
shrb
pushf
adc
jmp
rorb
imul
sub
sub
daa
cwtl
mov
jo
pop
jnp
inc
sbb
lods
mov
das
sbb
ficomps
outsb
xchg
loopne
jl
jno
jmp
roll
ss
imul
dec
leave
mov
movsl
stos
sahf
aaa
cmp
push
or
fistpl
lahf
push
flds
sahf
daa
xchg
in
mov
cmp
pop
shll
and
cmpsl
sbb
add
and
outsb
add
push
cwtl
test
mov
sub
out
pushf
test
push
dec
pop
push
in
pop
insl
sahf
push
add
mov
adc
pushl
arpl
cmp
sub
or
in
jecxz
loopne
daa
mov
out
repz
lods
xchg
andb
daa
or
xorl
ja
repnz
mov
fisttpl
jno
stc
ljmp
inc
out
xor
push
insl
ret
jge
pop
ds
dec
popa
pusha
das
movsb
scas
cmpsb
mov
repnz
les
test
sub
xchg
add
jnp
push
xchg
adc
sahf
aad
mov
out
rolb
lods
push
nop
jo
fsubr
cwtl
pop
xlat
lret
push
bound
adc
sbb
add
sbb
adc
and
in
jmp
in
or
pushf
repz
dec
jne
pop
scas
inc
pop
sahf
cltd
jbe
in
or
jg
xchg
es
dec
cmpsb
call
fldcw
inc
addb
pusha
sahf
jecxz
loope
mov
sahf
aaa
push
sbb
mov
popf
ret
sahf
inc
inc
aam
xchg
pop
mov
mov
out
fistl
sahf
icebp
out
sub
mov
sahf
push
popf
mov
sahf
int3
push
jge
push
sbb
mov
les
push
sahf
push
inc
sbb
outsl
xchg
scas
jb
aas
jl
push
lock
sahf
roll
sbb
repz
pop
scas
cmp
jg
dec
jmp
ds
in
sbb
lahf
adc
push
cmp
imul
fnstcw
into
aad
stc
cmpb
scas
inc
adc
sarb
pop
jbe
cmp
std
sahf
test
inc
test
rol
jge
cmp
pop
sahf
test
xor
ror
pop
sbb
xor
test
dec
lahf
sbb
dec
test
movsl
cwtl
sbb
sahf
sub
push
scas
imul
inc
lds
int3
aas
sahf
add
adc
cmpsb
dec
imul
fcom
push
sti
and
xor
pop
lahf
push
andb
int
lock
ret
sahf
push
leave
jo
repz
dec
inc
sub
insb
lods
lcall
lahf
sbb
adc
and
repnz
sbb
xor
icebp
sahf
push
cltd
cld
cmc
mov
mov
mov
lock
lret
jle
push
mov
jne
jnp
sar
aad
sahf
mov
xchg
fdivs
scas
sti
push
cli
sbb
ljmp
lcall
imul
lret
imul
sbb
pop
mov
orb
jne
jge
jle
subb
ret
sub
dec
xchg
jl
roll
pop
addr16
mov
scas
sbb
mov
sbb
sbb
mov
jle
test
mov
pop
adc
cld
adc
jmp
movsb
adc
or
mov
lcall
xchg
sub
xor
xor
es
cmp
pop
mov
xor
gs
imul
and
data16
cmpb
pop
mov
pop
pop
jb
mov
outsb
xchg
loop
outsb
jecxz
mov
jl
nop
mov
cmpsb
scas
cmp
jecxz
shrb
xor
stos
mov
mov
test
mov
or
daa
jmp
sub
ljmp
in
loopne
sbb
addb
mov
or
mov
mov
out
xchg
mov
cmp
cmp
xchg
test
lcall
mov
les
fmulp
mov
mov
xchg
pop
jg,pt
aad
rolb
push
mov
pop
or
xchg
lret
xor
sub
pop
lcall
fisttpl
jl
iret
mov
fs
lret
nop
and
xchg
bnd
aaa
mov
jg
and
test
jo
cwtl
pop
lahf
in
jl
loop
mov
jle
xchg
rcll
pusha
xchg
mov
sub
pop
mov
frstor
and
sub
push
mov
jbe
push
shlb
mov
xor
repz
aaa
inc
and
mov
cmpb
sub
sbb
insb
rcrb
sub
pushf
cmp
sub
mov
adcl
push
mov
outsb
sub
outsl
sub
mov
and
push
mov
fs
mov
inc
subl
bound
cmp
and
orb
cmp
dec
je
in
enter
fsincos
ret
mov
add
cwtl
xchg
nop
xchg
es
lods
mov
in
or
pop
loopne
test
mov
sub
mov
sub
jp
xchg
dec
mov
loope
mov
pop
cld
inc
jl
xchg
rclb
rcr
inc
xchg
test
adc
cmp
mov
clc
adc
inc
es
lahf
test
xor
rcll
push
mov
mov
in
fs
add
rorl
sub
xchg
rcrl
ficomps
sahf
add
push
cmc
lds
sahf
and
adc
sahf
add
or
mov
dec
imul
pushf
into
push
das
out
sub
sahf
pop
cmp
iret
mov
xor
xchg
sub
push
adc
mov
xchg
cmpb
dec
sbb
loop
or
inc
push
test
loopne
andb
pushf
xchg
aam
lds
mov
je
sahf
icebp
push
in
imul
sub
mov
pushf
push
dec
mov
jnp
test
fisttpll
movntps
lahf
sahf
std
pop
shlb
das
jmp
adc
fistpl
mov
or
sbb
inc
mov
imul
adc
repnz
xlat
jnp
psllq
xchg
dec
ret
cwtl
mov
test
mov
sahf
stc
xor
cmp
subb
shll
lea
ss
lcall
js
aam
aaa
iret
push
jge
imul
add
test
loop
add
pop
nop
lret
jmp
lahf
xlat
leave
or
lret
push
std
loop
or
mov
dec
enter
xor
jae
sub
xchg
dec
push
xor
and
pushf
fwait
push
cmp
pop
sahf
rcll
xchg
sahf
mov
cmp
cmp
xchg
adc
gs
adc
gs
pop
jo
test
leave
cmp
pop
andl
push
fucomi
test
es
fldenv
bound
push
aaa
icebp
sahf
hlt
fwait
les
xor
cmc
ret
and
sbb
mov
adc
negl
add
ds
outsb
pop
jb
xor
ret
pop
push
fs
pop
sbb
mov
rol
jb
fcompl
adc
cs
cmpsl
clts
pop
fdiv
ljmp
repnz
out
sbb
scas
and
cmpsl
adc
rolb
pushf
inc
push
add
pop
or
loopne
jno
lahf
repnz
mov
xor
push
movsl
adc
pop
and
lea
jp
adc
jae
mov
jns
push
or
pop
jmp
lcall
ficoms
push
dec
out
sahf
sbbl
adc
stc
das
sahf
sub
sbb
subl
inc
ss
and
test
jecxz
mov
ret
out
jb
sub
out
pushf
fcmovu
pop
clc
cmp
adc
xor
mov
cmp
loopne
xor
adc
loope
lods
mov
adc
ss
cmpl
cmp
fimuls
stc
xacquire
mov
dec
push
mov
outsl
sub
xchg
mov
fwait
sub
andb
js
cs
cld
movsb
fistpll
xchg
scas
shl
xlat
xchg
cmp
or
imul
jne
push
loop
jmp
scas
fdiv
sahf
addr16
push
fstps
and
inc
bound
rcrb
xor
add
sahf
sub
scas
movsb
les
mov
push
pop
call
sahf
sbb
es
cmpsb
icebp
xchg
aas
mov
push
scas
insl
pop
push
jge
sub
pop
cmp
sahf
leave
les
mov
cltd
sahf
adcl
sbb
je
mov
scas
mov
popa
jle
and
notb
mov
dec
out
ds
into
int
xlat
ljmp
inc
rcrl
dec
xlat
push
dec
sahf
inc
fcmove
mov
data16
scas
mov
rcrb
push
sbbb
mov
lcall
lahf
aaa
cmp
fcomi
sahf
shl
aaa
imul
and
daa
in
mov
pushf
ss
xchg
lock
iret
sti
xlat
inc
sahf
shlb
loop
mov
andl
test
pop
out
xor
push
into
pop
lods
jp
sahf
imul
int
int3
xchg
shrb
xlat
jg
dec
inc
cmpsl
scas
jo
jno
pushf
lea
xor
loopne
lret
dec
fcomps
or
sti
cwtl
jns
or
test
popa
dec
fistps
adc
jl
fnstenv
mov
mov
sub
jmp
xchg
cmp
stos
ss
and
or
mov
inc
adc
jb
dec
scas
divb
test
cmp
les
sbbl
sti
mov
push
scas
lahf
loopne
jg
sahf
test
mov
lds
or
mov
sub
fdivrs
or
add
mov
adc
es
inc
push
inc
mov
sub
push
pop
ss
je
mov
pop
xor
and
in
data16
cmp
or
push
shlb
mov
sbb
and
movsl
mov
imul
lcall
push
xchg
insl
dec
es
lahf
fildl
int
lret
test
pop
jl
nop
jne
subl
shlb
xor
push
fwait
dec
sahf
js
movsb
jno
mov
jo
aaa
loope
scas
dec
jbe
sti
mov
pusha
jno
mov
aas
lahf
dec
outsb
sub
xchg
imul
push
in
lds
cmp
dec
adc
mov
loopne
ss
inc
fs
imul
jb
movsl
pop
add
cmp
and
paddw
jno
adc
mov
lcall
add
xchg
ds
mov
jmp
xchg
sahf
pusha
ret
les
movsl
or
xor
inc
push
fidivrl
jae
shl
pushf
pop
out
or
cld
arpl
cli
aas
jne
inc
pop
adc
adc
pop
jbe
mov
xchg
push
mov
and
arpl
aas
sbb
jp
mov
inc
jno
bound
or
loop
mov
xor
add
js
dec
iret
push
lea
sub
sarl
adc
fcmovnb
xchg
adc
fists
fistpll
clc
nop
in
pop
ljmp
adcb
f2xm1
mov
xchg
lcall
sbb
sub
and
aas
lea
sbb
xchg
add
enter
pushf
aam
mov
testl
jb
popa
mov
pop
bound
pop
icebp
lods
push
stos
dec
sahf
add
lret
jl
scas
ljmp
sub
int3
lahf
loop
add
and
sahf
sub
je
mov
pop
xchg
xchg
inc
pushf
mov
movsl
adc
add
mov
sarb
inc
mov
leave
adc
out
inc
jae
sahf
addr16
xchg
shl
mov
in
andb
mov
repz
stos
xor
ret
and
fisttpl
js
xchg
push
movsl
xor
jmp
arpl
cld
popa
pop
daa
xor
stc
or
jg
test
xor
jb
sahf
pop
ret
push
cmp
jo
popa
jle
dec
loope
lahf
rcll
aaa
add
sahf
xor
mov
sahf
rcr
cmc
pop
mov
add
push
sbb
mov
sahf
adc
divl
add
cmpsb
mov
add
xchg
and
int
jp
mov
sahf
jo
into
cmp
push
lret
cmp
pop
adc
mov
test
das
mov
push
popf
daa
call
jge
sbb
push
adcb
jno
rorb
iret
repnz
jae
dec
xor
mov
xlat
insl
sahf
dec
in
lock
jno
ja
mov
ret
push
xchg
jns
sahf
insl
enter
test
sahf
mov
repz
add
sbb
es
enter
sti
mov
mov
outsl
and
call
imul
pop
sahf
jne
aam
lock
sahf
shrl
push
repnz
adc
pop
xchg
pusha
pop
popa
and
sub
scas
and
arpl
dec
inc
in
out
mov
repnz
into
inc
les
int3
push
sahf
aam
xchg
sub
mov
pusha
sub
movsb
dec
sahf
daa
mov
sub
loope
inc
icebp
xor
inc
xchg
xor
xor
sahf
xchg
sbb
cmp
inc
les
adc
and
ljmp
push
scas
push
sahf
adc
adc
push
or
sahf
scas
xor
sbb
cmpsl
xor
jbe
jecxz
sahf
mov
repz
inc
loopne
sahf
sbb
sbb
insl
stos
rcrl
dec
sbb
jae
inc
and
xchg
sahf
es
movsb
xor
mov
adc
lret
push
xchg
sahf
js
imul
das
stc
inc
nop
ret
pop
aas
jg
pop
sub
cmp
push
sahf
pop
adc
inc
test
mov
jmp
adc
popa
xchg
xor
sahf
push
fs
sub
and
xchg
ljmp
loope
mov
stc
dec
in
cmp
cwtl
sbb
mov
jo
sahf
loope
bound
sub
inc
sahf
jle
dec
mov
mov
frstor
rcrb
mov
ljmp
mov
clc
pusha
cmp
push
xchg
cmp
sahf
scas
test
daa
je,pt
inc
cmp
fs
aaa
push
ret
shll
xor
and
sbb
int
lahf
inc
jns
cwtl
sahf
pusha
imul
jne
push
jmp
pop
or
xchg
popa
pushf
scas
loop
inc
push
shll
inc
push
sub
repnz
dec
push
stos
das
sahf
sub
mov
sahf
lods
cmp
iret
sub
or
mov
add
pop
cltd
sbb
aas
sbb
sahf
bound
mov
repnz
inc
add
lcall
sub
nop
push
cwtl
rdpmc
xor
out
xorb
fdivrs
and
fstpt
aaa
dec
push
fwait
setle
or
fidivrl
sub
rcrl
les
mov
in
scas
rol
mov
loope
mov
sahf
fistpl
repz
adc
or
xchg
ljmp
xor
xor
ret
xor
inc
outsb
xlat
sub
outsl
jp
mov
mov
sahf
push
add
push
cmpsl
sub
jne
lock
sahf
rorl
out
fldcw
movsb
pushf
ljmp
pop
ret
inc
add
cmp
add
jp
xor
pusha
nop
pop
test
pop
push
jle
pop
jg
leave
mov
mov
test
mov
scas
mov
sbb
push
cmp
sahf
and
ss
mov
ret
sahf
xchg
in
push
mov
mov
inc
jle
push
add
push
imul
jl
outsb
loopne
add
inc
xor
jl
push
orl
and
repz
clc
xor
xor
fdivrl
sub
mov
es
aaa
jg
test
xor
jno
mov
rcll
xor
xchg
je
adc
dec
in
mov
cmp
mov
mov
sahf
jge
cmpsl
push
scas
mov
sub
mov
mov
push
icebp
fstpt
enter
sbb
inc
push
inc
sahf
loop
cmp
adc
mov
jae
dec
pop
or
sub
lahf
push
aaa
adc
out
out
nop
xchg
cmpsb
hlt
filds
pop
sahf
adc
add
xor
and
loope
lahf
jmp
in
jmp
dec
sub
pushf
aad
adc
iret
pop
test
xchg
mov
mov
push
inc
mov
call
test
or
push
sahf
xchg
adc
das
scas
push
and
out
inc
xchg
jge
sahf
int3
and
sahf
jmp
aaa
and
xor
jle
int3
add
cmp
in
and
cli
filds
decl
testb
fs
dec
push
sahf
jae
mov
xor
or
repnz
pop
data16
ds
jns
cmp
xchg
fistl
push
aas
shll
jno
mov
ss
pop
ds
mov
es
loope
cmp
cmp
dec
cmpsl
xor
in
add
mov
xchg
sbb
dec
mov
mov
mov
sahf
mov
scas
nop
mov
aas
mov
stos
jmp
sbb
bnd
sahf
ljmp
sahf
mov
dec
cmp
popf
sahf
pop
cmp
pop
cmpsl
pop
jo
sahf
fst
lds
sub
mov
pop
cmp
jae
das
pop
and
test
stc
call
out
in
cmp
push
jmp
add
cwtl
icebp
dec
cmpsb
scas
stc
rorb
xor
inc
xchg
out
int3
stos
incb
mov
mov
jge
out
stos
fcmovbe
mov
xor
and
jl
bound
and
or
xchg
xchg
ret
call
gs
int3
lcall
sbb
movsl
mov
lcall
ss
adc
xor
sahf
mov
js
movsb
sahf
sub
jle
sahf
es
fucom
cmp
int3
push
xchg
mov
rorb
sahf
xchg
lock
ljmp
pop
addr16
sub
sbb
in
jnp
cmp
fwait
mov
push
jns
adcb
sub
pop
test
push
sti
shrl
int3
ficoms
in
pushf
pop
dec
jo
mov
mov
or
cmpsb
in
stos
cwtl
inc
mov
mov
enter
fbstp
sbb
in
push
dec
lods
frstor
and
lahf
and
xor
cmp
jns
pop
xchg
add
out
bound
or
cmc
adc
ret
and
mov
pusha
sahf
jp
mov
gs
mov
sarl
and
cltd
jbe
incl
sbb
lahf
sbb
cmp
call
aaa
pusha
int3
mov
lods
icebp
xchg
scas
enter
sub
rorl
bound
iret
fldl
sahf
in
das
xor
pop
subl
push
lods
imul
jmp
xchg
test
mov
fists
sar
in
repz
pop
test
jno
add
xchg
lea
mov
daa
or
das
or
mov
jge
andb
jb
cmp
aad
pop
jb
das
xchg
sahf
mov
movsb
dec
xor
clc
xor
roll
bound
sbb
xor
aad
jae
mov
nop
cmp
test
enter
mov
pop
xor
loope
jo
mov
pop
sahf
jb
aaa
mov
daa
std
ss
lock
jno
mov
pop
add
ror
das
fistpll
lods
popa
lds
mov
adc
js
in
adc
int3
sahf
jmp
fwait
mov
xor
in
mov
rcl
fidivrs
mov
mov
data16
jbe
arpl
aad
scas
sahf
insb
fldl
xchg
sahf
hlt
mov
push
pop
jb
push
mov
xor
mov
mov
or
jo
faddl
lods
jg
cmp
outsb
sahf
pop
xchg
add
das
sub
xlat
aad
and
dec
movsb
sub
stc
pop
leave
lcall
fstp
jmp
bound
imul
lret
lahf
lds
cmp
mov
scas
xor
cwtl
mov
mov
add
pusha
mov
dec
in
loope
inc
insl
and
ja
jno
adc
std
xchg
sub
sahf
pop
mov
pop
lcall
in
jbe
icebp
outsb
xchg
imul
cmpsl
sahf
in
dec
scas
test
sahf
mov
sti
out
nop
decb
push
in
push
pop
inc
test
das
push
inc
pop
call
inc
push
sahf
ds
mov
clc
repz
jg,pn
xor
in
pop
stos
mov
xor
ret
imul
sahf
jl
repz
sahf
jnp
jmp
mov
mov
stos
inc
sbb
sbbl
adcb
out
cmp
std
rol
sbb
ss
push
or
sub
sub
je
jne
xchg
mov
arpl
sub
sahf
int3
fildl
scas
mov
mov
sahf
and
sub
xorb
sbb
inc
cmp
sahf
sbb
add
sahf
xor
mov
jbe
push
rcr
loopne
dec
xchg
push
push
pop
push
push
push
and
ds
sarb
cmp
je
outsb
ret
into
push
and
arpl
movd
inc
and
adc
pop
cmpb
iret
test
es
mov
cmp
jae
push
cmp
jp
pop
jae
out
aad
mov
nop
sub
addb
pop
pop
jno
in
adc
lret
out
jl
pop
push
mov
pop
push
sbbb
sarl
ds
fmul
in
cmp
stos
jbe
mov
or
dec
mov
movsb
aam
sbb
repz
lock
fwait
mov
pop
ss
inc
movsb
mov
pop
imul
push
std
cwtl
sub
mov
testl
pop
jl
data16
mov
push
pop
add
sbb
add
daa
aas
ss
lods
inc
lea
orb
and
popa
sti
cmp
lods
mov
cmp
call
pushf
push
ljmp
pop
pop
push
in
cmp
sub
loop
rorl
shr
sbb
sub
loope
shll
xchg
sub
mov
in
push
jl
xor
cmpl
adcb
mov
out
insl
sahf
jg
xchg
sub
push
dec
push
cwtl
push
xchg
sbb
mov
cmp
out
push
adc
repz
mov
add
add
sub
lcall
mov
sbb
adc
leave
andnps
sbb
push
fdivs
xchg
adc
js
pop
xor
adc
pushl
movsb
mov
js
movsl
or
xor
pop
xchg
into
xchg
or
adc
xchg
daa
jb
xchg
sbb
xchg
and
cwtl
mov
cmpsl
mov
dec
gs
mov
sarl
push
jp
testl
or
loopne
sbb
pop
xchg
add
in
leave
int
mov
das
mov
jae
push
nop
push
push
mov
jbe
pop
fldenv
dec
loope
adc
xchg
push
in
out
ja
add
test
fldl
push
int
mov
lock
push
hlt
loope
dec
mov
add
sbb
sbb
mov
or
adc
mov
mov
jg
add
cmpsb
and
adc
pusha
mov
aas
mov
pusha
mov
fidivrs
data16
pop
mov
repz
sbb
repz
iret
lea
dec
dec
js,pn
sbb
pop
sbb
ret
mov
fs
jle
jl
and
icebp
mov
daa
pop
ljmp
mov
or
jbe
cs
insl
cmp
push
mov
jle
cmp
aaa
mov
in
outsb
push
adc
pop
decb
sbb
xor
cmp
or
add
pop
add
jo
lret
ret
lea
add
jb
inc
sub
test
sar
jae
addr16
mov
xchg
mov
outsl
inc
sbb
mov
push
mov
inc
adc
lods
jmp
lods
sbb
sbb
sub
push
cld
push
or
mov
mov
pop
xchg
loop,pn
add
pop
xlat
pop
sub
es
sbb
sbb
cmp
xchg
out
or
loope
fcmove
mov
mov
dec
cmc
pop
cmp
jge
push
out
adc
shll
les
inc
cld
and
mov
inc
mov
sbbb
mov
jle
mov
bound
test
add
xchg
and
push
ret
sets
pop
xchg
loope
fs
mov
popa
pop
out
mov
and
pop
xor
xchg
jb
cmpsb
dec
fistl
mov
mov
bound
stc
pop
dec
aaa
cmp
xchg
scas
add
stc
pop
pop
cwtl
xchg
out
sbb
cwtl
insb
mov
sub
sbb
push
out
adc
and
jmp
jb
cli
into
xchg
insb
dec
jp
hlt
jbe
adc
xchg
ljmp
mov
out
aad
mov
in
call
ret
sbb
xchg
xchg
sbb
xchg
loop
xchg
sub
jmp
insb
add
xor
pop
mov
cmp
sbb
sti
insb
push
sbb
pop
xchg
mov
jbe
jp
inc
or
cmpsl
push
inc
jle
scas
xorb
in
jle
inc
pop
test
xchg
mov
lea
mov
mov
mov
dec
out
test
js
jecxz
cs
jo
leave
dec
adc
negl
sub
inc
test
add
add
push
mov
xor
pop
stos
in
xor
daa
jb
pop
add
jp
outsl
mov
mov
pop
lcall
sbb
mov
cmpsb
adc
mov
mov
pop
cmpsl
lcall
pop
push
mov
pmaxsw
pop
into
push
fstpl
in
xor
sti
sub
dec
punpckldq
aas
jbe
add
or
sub
ret
add
jl
lcall
jl
test
fcmovbe
add
add
xchg
out
mov
sub
pop
adc
call
call
push
or
add
lahf
sti
sbbb
pop
ljmp
dec
sti
int
stos
or
lcall
jmp
xor
rcll
stos
and
sbb
inc
pop
movsb
psrlw
sub
lcall
hlt
dec
fsubrp
push
bound
idiv
dec
imul
cld
cmp
xchg
lcall
pop
loopne
hlt
fs
push
sbb
divl
arpl
test
adc
mov
inc
jbe
cltd
jl
loope
pop
lcall
dec
xchg
loop
jmp
pushw
pop
xchg
add
sbb
inc
push
or
jmp
dec
sub
inc
outsb
mov
adc
cmp
push
mov
mov
mov
loopne
divl
rcrb
pop
in
cmp
push
pop
push
mov
xor
sbb
out
dec
xchg
adc
fdivs
or
stc
ljmp
lea
sub
or
xor
jb
adc
lock
aad
mov
mov
jb
lcall
mov
addr16
scas
or
mov
cltd
jnp
shrl
add
cltd
lahf
jb
mov
jp
cmc
ja
jne
mov
outsl
test
inc
add
xchg
xor
adcb
outsb
sub
mov
jo
stos
pop
sbb
nop
mov
add
pop
in
dec
test
clc
ret
sahf
arpl
add
clc
hlt
xor
mov
rol
push
bound
je
test
xor
lret
sahf
in
mov
push
mov
repz
daa
lahf
adc
test
call
ja
mov
jbe
mov
sahf
xchg
mov
repz
mov
sahf
outsl
loop
movsb
lea
std
cwtl
xchg
sbb
adc
dec
scas
add
mov
inc
addr16
or
cmpsl
rcrb
lret
sahf
insl
and
lea
mov
sahf
xor
mov
fldl
lret
sahf
jno
in
int3
inc
mov
in
add
mov
sahf
adc
pop
cmp
into
repz
jmp
jecxz
pop
es
push
gs
in
sub
and
nop
jnp
jmp
iret
lock
dec
scas
xor
out
pop
jnp
pop
aad
sahf
mov
or
xchg
fsubrl
push
lahf
lahf
nop
insb
fidivs
push
cmp
fcmovnb
bound
mov
repnz
add
sub
inc
addb
rcr
mov
fmull
es
pushf
adc
xchg
lock
mov
sbb
and
xchg
xchg
mov
int
jmp
mov
dec
pop
in
jbe
lret
sahf
pop
add
jge
xlat
fwait
sub
xchg
lahf
nop
adc
dec
and
mov
inc
jecxz
lock
sbb
das
subl
clc
scas
mov
ljmp
sbb
xor
not
pop
or
add
cmpsl
insb
lcall
loopne
jnp
lahf
jbe
mov
push
mov
jg
mov
enter
lea
xchg
mov
jecxz
push
push
xchg
cld
out
jg
mov
jne
inc
jg
dec
stos
andps
inc
jg
out
call
je
js
stos
in
stc
faddl
stc
cmpsl
jno
in
adc
jl,pn
loopne
cmp
in
xchg
fdivrl
stc
sahf
pop
lds
stc
sbb
dec
popa
mov
xor
add
and
daa
add
cmpsb
mov
mov
sbb
popa
flds
mov
mov
push
rorl
lods
sbbb
sub
mov
addr16
jo
fisubl
and
out
xchg
pushl
testl
cmp
repnz
fisttpll
jp
rcll
inc
aam
and
xchg
mov
pop
adc
out
jl
fistps
pusha
js
mov
lcall
pop
push
mov
adc
out
mov
cmpsb
stos
das
data16
adcb
outsb
xchg
cmp
adcb
shrl
sbbb
adc
pop
sbb
sbbb
mov
rcr
rcl
mov
push
push
jl
stos
das
pop
xlat
mov
cmp
lock
scas
js,pn
mov
pop
pop
jne
cmpsl
fwait
iret
mov
pushf
loop
pop
or
xchg
dec
push
mov
pop
or
xchg
cmp
cmp
and
lcall
pop
or
cmpsb
jl
js
std
mov
mov
sti
dec
lea
jmp
lea
inc
mov
js
fbld
dec
adc
mov
push
mov
push
pop
into
add
mov
ds
pushf
mov
cmp
fidivl
or
cs
cmp
ds
fcomp
popf
dec
lahf
movsb
aam
jle
lds
cs
andb
and
pop
insl
jle
lcall
mov
loope
imul
rcr
int
xchg
mov
xchg
imulb
mov
leave
stc
outsb
ss
orl
add
jbe
fdivp
sub
sub
ds
repnz
das
cs
scas
sar
inc
rclb
cmp
dec
into
repz
pushf
jne
push
aam
sbb
inc
add
jbe
sti
add
mov
stc
pusha
fwait
cwtl
lcall
scas
call
jp
push
jmp
pop
aaa
pop
das
xchg
mov
cmp
cmpsl
enter
push
xor
mov
mov
fldt
pushf
call
push
insl
mov
jp
dec
or
cmp
xchg
pushf
push
arpl
je
sahf
and
test
lret
mov
rcrl
pop
loope
sahf
mov
add
pushf
sahf
and
cmp
dec
ljmp
inc
pop
adc
jmp
sahf
add
std
lods
mov
ret
sub
xor
notl
ret
shrb
in
xor
push
pop
mov
mov
push
loopne
int3
jg
dec
sbb
inc
lret
orb
movsb
sahf
cmp
nop
dec
fdiv
icebp
sub
sahf
ljmp
repnz
fldl
jb
jle
imul
ljmp
push
mov
outsl
ds
pop
cmp
inc
jp
inc
test
insl
xlat
sahf
cmp
icebp
mov
cmp
dec
push
out
scas
ret
sub
inc
or
push
xlat
mov
lcall
pop
mov
inc
pusha
jno
xchg
add
cs
sahf
in
frstor
dec
into
sahf
or
pushl
push
in
sub
add
mov
jo
mov
lods
push
fidivrs
pop
sahf
adc
cmpsb
insb
scas
fadds
stos
and
xor
in
xor
pushf
aam
lods
movsl
dec
mov
mov
mov
xchg
rcrb
cltd
fidivs
hlt
sahf
adc
xor
movsb
sarl
sahf
iret
test
add
and
popa
xor
xor
and
scas
loope
subl
pop
inc
ja
mov
push
addr16
sbb
push
pop
jg
mov
adc
lcall
and
jp
out
mov
icebp
mov
shld
scas
mov
sub
ret
call
and
push
lahf
scas
adc
scas
mov
aaa
cmc
inc
pop
roll
enter
xchg
fldcw
ret
cmpsl
sahf
xor
lea
cmp
push
pop
lcall
cmpsb
mov
test
jmp
xchg
stos
dec
out
ds
jae
mov
push
arpl
bound
push
push
cmc
das
call
sub
jg
fcoms
outsl
dec
cmc
add
lahf
shrb
sbb
mulb
neg
imul
icebp
sub
ds
jp
add
sahf
push
jo
jnp
cmc
cwtl
push
stc
inc
clc
sub
push
out
xchg
aaa
pop
idivl
xchg
sahf
jb
pop
shr
or
sahf
add
test
cmpsb
aam
scas
sahf
adc
adc
push
loop
fsubrp
pop
or
sahf
fwait
sarb
sub
pop
jge
js
cmpsl
cmpsb
lahf
and
iret
add
scas
fnsetpm(287
call
xor
lds
sahf
popf
dec
lret
jl
cmovno
inc
mov
xchg
xor
sub
fsubrl
push
addl
pop
lret
rolb
cwtl
sahf
lret
loope
cmpsb
bound
sahf
sub
pop
dec
mov
push
inc
sbb
adc
ljmp
sub
or
mov
arpl
pop
sbbl
inc
notl
movsb
ds
xchg
sub
mov
fisttps
cmpsb
mov
mov
cmp
mov
push
sbb
inc
cli
cwtl
outsb
xlat
scas
xchg
popf
xchg
dec
fistl
mov
out
fnstsw
adcl
and
nop
test
fistpl
mov
push
sar
inc
sarb
sub
mov
xor
sahf
mov
or
arpl
pop
jns
mov
jae
mov
lock
jmp
or
sahf
adc
mov
sti
pop
sub
ret
fwait
sahf
add
mov
lret
data16
mov
xor
jl
cmp
lcall
dec
int
sbb
and
inc
adc
add
sahf
sbb
push
dec
mov
pop
lahf
repnz
call
scas
rol
ljmp
or
sahf
and
je
adc
pop
lret
adc
and
inc
lret
repnz
push
push
aam
aas
sahf
sub
jecxz
xor
out
sahf
cmc
fmull
popf
stos
pop
sahf
inc
and
rorl
jnp
sahf
jmp
xor
es
les
inc
sahf
scas
mov
mov
xor
or
push
pop
mov
push
add
xchg
adc
lds
xchg
sub
iret
mov
scas
rcr
fistpl
lret
stos
sahf
xchg
adc
fs
or
cmp
insb
fdiv
and
jns
jae
mov
lods
in
daa
push
jbe
rclb
scas
and
xor
ljmp
sub
pop
push
mov
pop
pop
scas
loop
sahf
adc
enter
gs
pop
aaa
jno
addr16
mov
and
inc
and
lods
mov
je
cmp
in
sbb
movsl
inc
push
popa
dec
loop
enter
loopne
sbb
inc
mov
imul
or
lock
lods
adc
ret
mov
sahf
inc
inc
cmpsl
sbb
mov
xchg
sbb
jne
in
or
pop
fwait
sahf
xor
xor
or
test
mov
enter
movsb
ret
ffreep
dec
in
test
pop
cmp
aas
imul
sahf
jmp
es
push
and
mov
popf
into
icebp
add
mov
mov
mov
sahf
and
cmpsb
push
repz
cmpsl
pushf
in
push
inc
sub
mov
out
xor
fldt
pop
and
popa
sahf
xor
push
sahf
lcall
setle
es
andl
clc
sahf
mov
sbb
stos
and
push
int3
mov
sub
fistpll
cmpb
mov
sbbl
xchg
or
sti
inc
lahf
shrl
adc
pop
lcall
push
mov
sahf
int
push
shrl
push
jg
iret
cld
mov
or
xchg
movsb
iret
cmpsl
pushf
pusha
les
mov
sbb
jmp
sahf
imul
push
out
inc
lds
sub
push
adc
repnz
jge
fcmovb
lods
pushf
lcall
mov
cmpsl
nop
insb
mov
pop
leave
push
in
jge
dec
loopne
sub
cmp
sahf
jecxz
xor
aad
in
sahf
pop
data16
pop
jl
sahf
hlt
out
cmpsl
aas
adc
xor
mov
sahf
mov
and
das
scas
xor
inc
int
fs
orl
icebp
pop
xchg
mov
adc
mov
jg
add
call
leave
sahf
int3
push
out
testl
imulb
sahf
adc
jo
cwtl
mov
mov
aaa
jae
data16
call
aam
adc
mov
jae
popl
ds
and
jp
dec
add
cmp
enter
fs
das
mov
inc
mov
enter
pop
fcompl
pusha
and
sahf
loope
and
clc
bound
popa
loop
adc
stc
push
mov
pop
sti
in
push
int3
ret
push
imul
push
cmp
push
push
sahf
aam
push
pop
jmp
mov
xchg
lock
lahf
or
loop
sti
sahf
inc
mov
sub
sbb
sarb
xor
std
data16
bound
push
pop
int3
dec
iret
cld
out
jo
je
mov
push
lcall
loop
inc
jge
sub
cmp
es
decb
mov
xor
icebp
mov
clc
lods
mov
pop
test
cmp
push
xor
mov
cltd
fnstcw
sub
flds
xor
repnz
push
lret
and
jmp
loop
fisttpl
lcall
lea
cmpsb
gs
btc
xchg
mov
sbb
push
lcall
bound
movsb
sahf
add
pop
add
in
adc
mov
nop
cmp
adc
fsubr
mov
and
mov
jb
jmp
mov
xchg
imul
outsl
pusha
pop
mov
mov
add
adc
loope
loop
pop
xchg
mov
adc
inc
dec
fstpl
mov
stos
lcall
ficompl
xor
push
jmp
fists
dec
dec
push
test
cli
inc
sbb
push
push
push
les
inc
and
pop
push
test
cld
int3
xchg
jl
xor
int3
pop
pop
jg
push
out
jmp
or
push
jmp
or
ficoms
jb
sbb
pop
cwtl
mov
xor
mov
inc
ret
xor
dec
or
and
add
inc
dec
and
add
mov
dec
icebp
xchg
jl
aas
add
or
push
and
adc
in
or
cmpb
rcr
sti
roll
loop
mov
jb
cli
dec
fimuls
pop
or
adc
fimuls
dec
adc
stc
mov
xchg
sbbb
sbb
dec
pop
add
push
fildl
popf
pop
and
inc
mov
sbb
dec
out
xor
xchg
dec
jle
dec
cvtdq2ps
xlat
add
les
dec
pop
and
pop
or
mov
jp
dec
jp
inc
mov
gs
lea
addr16
loopne
xchg
sarl
imul
pop
imul
dec
mov
sub
xchg
mov
mov
fldl
sub
jecxz
mov
inc
cmp
dec
and
mov
je
cmp
cmp
fsubl
aam
dec
mov
or
imul
add
ficompl
jle
jl
inc
outsb
inc
adc
fwait
mov
pusha
lods
loopne
outsl
ja
adc
std
aaa
jp
nop
inc
mov
ret
ss
dec
js
mov
xchg
inc
mov
cmp
out
cmp
pop
mov
lcall
popa
xchg
stos
leave
cmpsl
pushf
divl
out
push
sub
jo
mov
mov
cmp
push
jnp
fs
icebp
mov
std
and
push
sbb
loope
and
xchg
jae
adc
stc
inc
mov
pop
jns
fwait
xor
adc
imul
hlt
popf
jnp
aam
sub
sahf
adcb
scas
stos
lods
sahf
in
add
rcll
xchg
test
xor
mov
jae
jg
or
int3
shll
or
sbb
popf
sbb
push
sbb
sahf
rcll
scas
mov
lock
ret
pop
popa
and
in
jmp
inc
jge
mov
dec
dec
insb
je
es
add
mov
and
cmpsb
push
mov
fildll
sahf
sbb
dec
lea
and
ds
lcall
lahf
mov
mov
sahf
dec
cmpsl
jne
dec
pop
pop
fcomps
add
jns
scas
aaa
mov
daa
or
ljmp
or
dec
lret
sub
adc
adc
aaa
cmp
into
sahf
fistpll
push
stc
push
mov
arpl
mov
scas
and
lahf
pop
hlt
cltd
pop
loop
and
orl
add
mov
inc
imul
mov
jae
cs
fnstenv
jnp
sahf
ror
imul
mov
xor
out
clc
mov
lret
imul
or
and
mov
sbbb
rcrb
xchg
xchg
dec
push
mov
xor
rcrb
mov
mull
jo
addl
nop
enter
sarb
mov
in
scas
mov
mov
sahf
rorl
mov
mov
xchg
pushf
mov
push
popl
mov
pushl
jecxz
es
xor
xor
jne
push
sub
fucomp
aad
sahf
inc
inc
mov
aas
xor
lea
sbb
cmp
mov
xchg
daa
jo
fcmovnb
rcr
xchg
and
lret
and
mov
xor
lret
add
into
mov
fninit
lods
insb
roll
ficoml
pusha
jmp
aam
sub
adc
out
push
pop
sahf
push
inc
inc
sbb
sahf
scas
and
les
sarb
out
scas
push
push
imul
jge
sub
loop
mov
mov
sahf
sbb
jae
sahf
inc
xchg
pusha
into
sti
orl
mov
mov
dec
xchg
push
pop
sub
sahf
pop
sub
imul
push
movl
jnp
out
nop
xor
aam
sbb
data16
test
pop
jo
loop
mov
sahf
movsl
push
lret
jecxz
add
sahf
sbb
aaa
dec
push
inc
push
cmp
call
sahf
aad
add
xorb
fldl2t
aaa
and
insl
out
movsl
out
sbb
xor
and
into
sub
gs
and
mov
or
add
sahf
push
inc
sbb
cmp
push
xchg
sahf
jge
movb
mov
stos
imul
je
xor
clc
fbld
jp
push
xchg
fucom
add
sahf
sub
in
in
dec
cmp
sahf
jecxz
xchg
cmp
das
sbb
cmpb
test
push
icebp
ficomps
mov
mov
movsb
inc
cmpsl
mov
mov
lret
xor
xchg
icebp
nop
std
lds
test
ficoml
cli
ret
sub
ja
shll
or
sarl
leave
add
push
pop
out
mov
sahf
scas
mov
push
stos
ficoml
sahf
jae
dec
arpl
jl
or
lahf
sar
dec
sub
sahf
fidivrl
loopne
lcall
lahf
jno
jp
arpl
scas
in
inc
xlat
sahf
enter
dec
aaa
in
imul
test
and
adc
ficomps
shll
jge
sahf
cmp
leave
fistpl
dec
sbbb
mov
test
xor
inc
inc
xor
popa
movb
test
sbb
int
pop
ljmp
inc
sahf
mov
jne
pop
sahf
cmpsb
es
rolb
rorl
aas
fsts
lahf
sub
xor
cmp
lahf
cli
pushl
aaa
or
push
cwtl
and
or
sahf
inc
pop
add
sahf
push
jns
mov
cmp
sub
enter
mov
shrl
dec
mov
loope
jmp
xor
sahf
int3
mov
jmp
jnp
pop
fcompl
rorl
cmp
push
xor
sbb
outsb
outsl
sahf
sbb
sbb
pushf
stc
out
adc
lock
ljmp
sbbl
mov
jp
out
mov
xchg
js
dec
cmpsb
push
icebp
shl
fildl
jl
cli
call
and
je
inc
mov
mov
or
lds
sbb
jbe
pusha
sahf
push
dec
xlat
sub
fldl
stos
cmc
push
bound
mov
rcll
or
insb
nop
mov
pop
dec
sahf
sub
mov
lods
add
iret
mov
push
cmp
mov
fdivr
icebp
dec
xor
jb
dec
lahf
cmp
lret
insb
adcl
scas
jne
adc
jp
movsl
std
xor
jo
sarb
adc
xor
xchg
jno
or
jb
test
cmp
in
repz
lea
push
mov
xor
andb
add
push
das
stc
sbb
dec
popa
push
adc
cwtl
inc
sbb
cmp
jbe
push
mov
aaa
sub
mov
sti
adc
adc
cmc
repz
push
and
rorl
ret
push
adc
lcall
add
sbb
sbb
shll
das
mov
jge
fcoms
mov
mov
mov
aad
pushf
out
sub
push
xchg
jp
sub
or
and
pop
leave
out
xchg
lock
call
push
push
sub
outsb
xchg
daa
mov
lods
mov
fbstp
pop
mov
add
icebp
stc
xchg
jbe
lsl
cwtl
xor
test
call
jle
xor
ds
cwtl
xchg
sbb
popl
mov
out
daa
cmp
pop
inc
cmp
aaa
out
pop
inc
test
call
cmp
cmp
xchg
addl
jl
inc
cld
dec
push
inc
aas
mov
sar
and
inc
xchg
rorl
pop
push
fdivp
sub
dec
mov
and
adc
andb
mov
mov
push
out
aaa
sub
fwait
cmp
pushf
inc
xchg
push
inc
mov
in
sub
test
inc
add
sbb
cld
es
pop
data16
xor
cmp
fs
pop
ja
inc
pop
sub
gs
daa
mov
nop
sub
loop
inc
and
adc
cmp
cmp
rcll
cs
sub
xchg
adc
data16
out
repnz
xchg
jg
push
loop
fisubs
dec
inc
xor
dec
cwtl
cmp
loop
loopne
lock
inc
pop
xor
pop
scas
pop
mull
cld
xor
xchg
xchg
jl
aas
adc
repz
dec
movntps
pop
loop
stos
sub
mov
ret
fs
cmp
out
das
jne
pop
adc
data16
mov
xor
xchg
sub
mov
jp
lods
xchg
setp
jl
xchg
inc
sbb
mov
loope
mov
insl
or
aaa
xchg
data16
add
rolb
mov
sub
and
push
jne
jg
lcall
push
sub
sbb
mov
test
dec
cmp
fldt
loope
insb
jge
mov
adc
add
and
mov
sub
popa
fnstsw
sbb
mov
jle
xchg
xchg
sbb
cmpb
js
push
insb
loop
jg
sub
pop
jg
insb
sbb
ret
cmc
testb
dec
xchg
pop
xchg
jg
rep
fsubrp
xor
out
jmp
jbe
push
inc
and
test
lods
or
sub
xor
rcrl
mov
jl
roll
sbb
test
push
aas
aad
lods
jno
in
push
outsb
loop
orl
sub
dec
dec
insl
jg
mov
push
movsb
ret
mov
scas
clc
mov
int
push
mov
inc
adc
or
stos
jl
mov
inc
hlt
je
xor
and
mov
je
mov
call
loop
mov
cmpsb
mov
jbe
and
lock
fwait
pop
pop
push
data16
into
bound
in
pop
daa
repz
es
mov
lcall
sti
cmp
xor
movsb
std
pop
gs
mov
xchg
data16
pushf
xor
ficompl
mov
sti
mov
dec
xor
push
aaa
loop
out
popf
bound
aam
test
lcall
pop
pop
cwtl
jnp
dec
outsb
mov
sbb
push
and
popa
fisttpll
mov
push
orl
stos
lods
sbb
dec
jge
xor
adc
scas
lods
xorl
dec
jl
and
jge
push
scas
dec
lods
push
jb
adc
iret
sbb
cwtl
insb
mov
jb
insb
loope
lods
push
pop
mov
outsb
test
or
aaa
lea
popa
ror
test
and
add
je
nop
xorl
xchg
cmp
sti
data16
std
mov
lods
adc
testb
push
or
cwtl
je
adc
cmp
test
test
sbb
mov
idiv
jmp
adc
xchg
orb
ds
andb
fsubl
push
or
out
mov
fimuls
mov
jno
sub
add
jge
xor
in
dec
add
pusha
jmp
push
pushf
cmp
xor
adc
lea
sbb
adc
push
add
xchg
pushf
insb
xchg
pop
mov
pop
or
sti
push
popa
test
pop
jno,pt
sbb
xchg
sar
jo
jp
xchg
addr16
add
mov
fcmovu
sbb
les
daa
test
mov
pop
lods
mov
mov
jo
xchg
out
jl
and
inc
js
sub
lock
jle
outsl
lcall
mov
mov
repnz
sub
nop
stc
add
pop
mov
popf
sbbb
mov
mov
xchg
stos
pushw
call
pop
pushf
lcall
jne
xor
xorb
fs
adc
push
outsb
push
pusha
orb
pop
dec
loop
shll
xorl
jecxz
movsl
test
decb
aad
cli
cmpl
test
xchg
xchg
jl
xor
sbb
xchg
push
fildl
icebp
mov
test
iret
add
mov
adc
dec
xchg
mov
or
pop
jl
xchg
rorb
popa
rcrl
outsl
test
jmp
imul
into
push
and
popa
fisttpll
dec
xchg
andl
push
adc
sub
popa
fisttpll
dec
ret
mov
push
or
dec
sbb
popa
hlt
cmp
notb
sub
sbb
jl
mov
sti
mov
ljmp
dec
mov
push
mov
xchg
pop
fstl
and
inc
mov
sti
pop
aas
repnz
pushf
push
fldt
movsl
test
loop
inc
xabort
ljmp
sbb
jg
xchg
lods
sbb
xchg
xchg
adc
inc
jb
jne
popl
aam
dec
xor
popa
xchg
clts
stos
movsb
mov
xchg
repnz
inc
dec
adc
mov
adc
jb
pop
cmc
cmp
inc
pop
and
xchg
pop
je
mov
xor
loope
pop
ja
call
dec
hlt
mov
mov
iret
and
xor
movhps
adc
movsb
inc
in
mov
sbb
gs
in
cwtl
ret
mov
in
cld
xchg
push
scas
push
xchg
sbb
pop
xchg
in
xchg
ret
mov
in
cld
xchg
orb
into
cs
xchg
aam
sub
push
push
mov
insb
rolb
mov
in
xchg
push
pop
mov
lds
ja
push
bound
mov
inc
cmc
data16
fsubr
pop
mov
pop
jle
mov
fidivrs
add
jp
loopne
adc
testl
movb
adc
lock
dec
mov
adc
dec
lock
test
push
aas
push
pop
testl
sti
repnz
mov
jbe
pushf
int3
sahf
stos
test
test
mov
xor
or
and
and
scas
clc
nop
pop
mov
and
lods
out
fstl
aaa
push
filds
icebp
xor
jbe
and
push
jb
add
sub
mov
sar
jae
mov
je
lods
xchg
test
or
adc
pop
xor
daa
repnz
jb
jne
mov
mov
jmp
mov
xchg
repnz
pop
or
dec
mov
jbe
les
pop
cwtl
dec
xchg
jp
mov
mov
sbb
mov
scas
mov
inc
jge
xor
push
mov
or
pop
push
pop
or
pop
dec
mov
in
icebp
rorl
pop
aad
mov
daa
cmp
xor
nop
lods
mov
pusha
pusha
daa
inc
mov
dec
shll
xor
cmp
cmpsb
sbb
jle
mov
hlt
popw
cmp
jg
sub
lret
pop
pop
jg
pop
nop
push
call
inc
jo
jp
mov
inc
mov
sbb
cli
lock
insb
scas
insb
xchg
out
inc
mov
adc
orl
dec
cmpsl
jae,pn
and
inc
mov
jns
je
adc
mov
add
jle
insb
movsb
add
push
outsb
push
pop
xchg
xor
jo
and
pushf
jge
or
rolb
pop
ret
mov
cwtl
cmp
mov
xchg
pop
or
fcmovb
add
imul
fcomi
stc
pop
das
test
xor
popa
in
jecxz
cwtl
nop
mov
cmp
fisubs
call
mov
jecxz
adc
and
rorb
xchg
shrl
push
inc
sub
rcrl
xlat
das
call
movb
xchg
adc
es
dec
mov
xchg
or
mov
movsb
push
xchg
sbb
test
leave
in
lods
push
cmp
sbbb
mov
sbb
sub
or
sub
pusha
push
inc
mov
push
dec
xchg
jmp
out
movsb
test
pop
xchg
jg
mov
ss
js
jl
mov
dec
pop
sbb
cmp
xchg
cwtl
jnp
sub
popa
push
jle
adc
sbb
stc
pop
xchg
lcall
inc
and
js
and
or
push
xchg
cmp
jbe
repz
stc
stos
xchg
sbb
jbe
inc
sbb
mov
je
fwait
or
std
pop
testl
cmp
inc
jl
adc
test
push
or
mov
mov
lahf
push
push
sub
dec
imul
jno
mov
test
jmp
mov
lcall
fdivrl
mov
insb
push
mov
add
bound
xchg
pop
inc
jae
sarl
cmpl
xchg
xor
les
push
fwait
outsb
cmp
outsl
mov
pop
pushf
loopne
dec
pop
cwtl
pusha
xchg
sbb
inc
hlt
push
cli
cld
pop
dec
popa
xchg
jbe
cmp
je
dec
orb
push
mov
js
pop
jbe
push
popf
push
jle
jb
fs
or
xor
hlt
push
repnz
fcompl
push
insb
xor
pop
push
cwtl
hlt
mov
cmp
inc
out
xchg
into
dec
pusha
inc
push
test
jb
cwtl
das
pop
push
data16
dec
jl
jo
or
pop
or
inc
fwait
pop
xchg
aam
push
bound
js
cli
faddl
aad
jl
in
sub
xor
xor
dec
inc
mov
out
push
lock
in
clc
adc
mov
adc
xchg
inc
jns
ror
push
mov
mov
data16
sbb
xlat
inc
shll
pop
sub
data16
outsb
jbe
push
pusha
loopne
mov
movsl
sub
dec
pop
aaa
xchg
mov
subb
adc
mov
dec
jl
dec
fs
pop
aas
inc
popa
fwait
mov
je
mov
inc
sti
and
jecxz
dec
fs
pop
inc
pop
imul
inc
pop
insb
jl
mov
dec
hlt
jo
hlt
pop
out
inc
and
call
mov
repnz
cwtl
test
jbe
dec
jl
jo
fs
push
icebp
jns
pushf
test
push
jns
in
jnp
jle
cmp
dec
test
dec
fs
jmp
insb
es
jbe
mov
cwtl
dec
movsb
adc
les
inc
inc
lods
or
pop
or
adc
push
dec
xor
xchg
push
rcrb
nop
jle
add
pop
pop
fadd
mov
int3
rclb
cltd
lcall
das
mov
xchg
sbb
sbb
add
dec
cli
es
xchg
jnp
mov
sbb
dec
inc
outsb
ljmp
xchg
pushf
cli
mov
loope
jg
subl
outsb
inc
nop
xchg
and
xor
xchg
andb
sbb
bound
test
xchg
and
mov
mov
xchg
add
mov
ljmp
lcall
lcall
ljmp
aaa
out
inc
xchg
fldl
xchg
mov
flds
mov
dec
or
cmp
lods
dec
js
cmp
push
cmc
mov
inc
add
in
shl
jmp
nop
stos
xchg
adc
or
push
mov
mov
sbb
cmpb
dec
call
fwait
leave
sti
popf
jne
js
fwait
pusha
enter
sub
stos
jnp
cmp
sbb
inc
inc
ds
pusha
es
aad
mov
sti
sbb
push
es
xchg
push
scas
or
aaa
cli
es
es
jle
xchg
inc
loopne
pop
push
xchg
aaa
es
xchg
adc
popf
mov
popf
ljmp
adc
or
mov
adc
add
testb
bnd
or
pop
mov
std
aad
pop
popa
push
inc
xor
push
cs
xor
lcall
cs
cmp
popa
xchg
leave
xor
in
or
mov
add
pop
pop
das
mov
push
pop
nop
leave
xor
cs
pop
cmp
scas
ret
add
mov
lcall
push
fistps
arpl
imul
loopne
outsl
lock
push
sbb
popa
sub
inc
mov
js
jne
popf
xchg
adc
lea
mov
push
cli
push
jno
movl
mov
sub
push
mov
int3
ret
xchg
jp
mov
lcall
lret
pop
adc
mov
lea
or
dec
mov
push
jbe
mov
mov
cmpb
in
inc
outsb
add
ffree
cwtl
push
xchg
jge
jnp
push
pop
add
mov
push
mov
es
pop
data16
pop
mov
jo
mov
xchg
mov
loope
mov
jg
mov
xchg
je
rol
lds
addr16
mov
jl
cmp
into
pusha
add
ds
adc
aam
jg
or
clc
pop
mov
aaa
mov
sahf
clc
fdivrs
mov
dec
xchg
test
jb
ret
test
pop
mov
add
mov
mov
sbb
rcr
andb
into
xchg
jge
inc
mov
sub
cmp
dec
inc
cwtl
or
jbe
push
inc
in
cpuid
in
push
pusha
mov
xchg
sub
aas
xchg
gs
xor
es
sbb
xchg
pop
lahf
mov
add
cmp
js
in
out
pop
andl
dec
xchg
sub
daa
sahf
icebp
inc
mov
sub
dec
and
sub
pop
xchg
fidivrl
mov
rcrb
loope
imul
mov
out
push
lods
roll
cmp
movsl
popf
sahf
mov
mov
cmpsb
sahf
push
imul
pushf
les
scas
rolb
mov
sbb
sahf
add
movsb
push
aaa
dec
mov
sahf
xchg
jmp
cmc
popa
xchg
sarl
push
push
out
mov
xchg
inc
fnstenv
ljmp
mov
xlat
dec
popf
mov
pushf
hlt
adc
iret
in
cmpsb
sahf
push
scas
fwait
and
enter
add
sbb
sti
xor
test
adc
push
outsb
or
inc
ja
rcll
cmpsl
aas
adc
jge
xchg
push
xor
pop
push
adc
sbb
loop
mov
inc
addb
jb
pop
mov
mov
xor
or
hlt
sar
sahf
inc
adc
jmp
sahf
loopne
jl
lcall
and
dec
into
loop
fs
stc
es
dec
ljmp
add
mov
sahf
je
xchg
xor
shlb
xchg
or
and
nop
or
and
lcall
dec
enter
mov
mov
pushf
sbb
out
in
cs
add
sub
push
sahf
jbe
inc
shrb
in
mov
sahf
ljmp
daa
leave
mov
lret
js
push
aad
call
jae
sbb
pushf
rolb
repnz
mov
lods
mov
pop
test
lahf
sbb
pop
roll
iret
xchg
dec
popa
pop
sub
push
shlb
sahf
mov
mov
je
nop
xor
sub
mov
sahf
or
out
adc
shr
stc
adc
lock
int3
repz
es
nop
sbb
in
loop
aam
dec
dec
sahf
lret
arpl
out
xlat
sahf
adc
int3
jns
test
lea
inc
rcl
out
dec
push
cmp
pushf
and
push
scas
push
add
jge
ret
sbb
negb
nop
jno
sub
xor
clc
jbe
repz
adc
sarl
in
add
pushf
scas
mov
mov
xor
sub
gs
popa
les
fdivs
xor
daa
arpl
pop
sbb
outsb
pop
lahf
pop
in
xor
fwait
stos
lahf
stos
fbld
inc
rcr
mov
dec
loope
xchg
adc
pushf
lret
mov
adc
jle
rcll
xorb
lahf
shl
adc
xor
gs
aas
pop
xchg
mov
mov
sahf
sbb
pusha
jmp
xor
cmp
sub
movsl
sbb
pop
jb
pop
pop
sahf
sbb
cmp
sbbb
sahf
push
dec
mov
ss
cld
adc
sbb
xchg
ljmp
sub
pop
das
push
cmpsl
adc
and
aaa
xor
sub
sahf
mov
scas
int
mov
loope
xor
sub
jmp
mov
xor
jp
pop
cmp
sahf
movl
pushf
ljmp
sub
jl
add
scas
adc
pop
ss
sahf
sbb
cltd
mov
mov
sbb
add
daa
mov
add
push
xor
sbbb
xchg
sahf
mov
cmpsl
adc
add
sti
inc
mov
push
sub
bound
sti
ret
fidivrl
mov
lahf
sbb
adcl
push
rolb
sahf
mov
and
imull
sbb
xchg
and
sbbl
mul
and
lahf
pusha
pop
imul
push
sub
pop
das
xchg
pop
push
fwait
pop
mov
lds
sahf
pusha
sub
daa
push
jmp
xor
aas
sahf
adc
jl
xor
push
xchg
mov
sahf
push
repz
inc
stos
mov
sahf
dec
fldcw
loope
adc
xor
sahf
lret
cs
lds
loopne
cmp
out
cmp
add
cmp
stos
iret
mov
lret
and
push
mov
jnp
mov
stos
das
bound
pop
xor
and
dec
inc
jg
mov
cmpsl
nop
fucom
sbbb
push
pop
jns
xor
cwtl
xchg
repz
loopne
in
mov
sahf
adc
aaa
jge
aam
sahf
jae
cs
pop
orl
scas
in
test
frstor
xor
add
outsl
sub
fs
xor
int
or
fiadds
sahf
xchg
insl
push
sub
aad
pusha
mov
aas
sahf
adc
lods
sub
js
sarb
fucomp
aaa
cltd
adc
mov
dec
inc
fbld
int3
jnp
mov
out
or
pop
repz
xchg
aaa
inc
mov
shlb
rcrl
movsb
and
mov
and
add
popa
or
lcall
push
mov
adc
test
mov
xsave
fists
xchg
es
xor
in
fldl
jns
int
or
ret
push
adc
mov
and
cltd
mov
out
push
roll
fdivs
enter
mov
xchg
push
test
jno
lahf
inc
cmp
daa
icebp
ret
mov
cmc
mov
mov
fldt
aam
mov
or
pop
pop
movsl
sbb
lds
and
cmpsb
dec
mov
inc
mov
inc
adc
stc
sahf
pop
jnp
mov
dec
ret
mov
outsl
push
repnz
push
insl
sahf
and
push
and
mov
fmul
in
sbb
sbb
lret
sahf
mov
ficoml
adc
xchg
insb
sbb
add
pop
lcall
mov
pop
sub
sub
jo
adc
ret
in
pop
jb
pop
arpl
mov
sub
sub
sub
jne
pop
jb
cmp
jo
movl
in
lds
mov
data16
rorl
ss
rcll
cmp
call
fists
mov
cmpsl
sbb
jecxz
repnz
and
mov
jle
roll
mov
out
jne
or
cmp
out
push
loope
dec
pop
mov
negb
xchg
cmp
loopne
test
or
cld
aam
das
movsl
jno
aad
jp
dec
cmp
push
inc
push
cmc
leave
jbe
jb
jmp
add
test
mov
mov
cmp
sub
lahf
adcb
mov
mov
psubusb
jbe
mov
xor
mov
jbe
aad
pop
ret
mov
cwtl
xor
xor
mov
lcall
jle
movsl
mov
xor
mov
sbb
stc
add
xchg
mov
xchg
pushf
pop
lods
jp
mov
push
cs
or
sub
pop
xlat
out
sahf
iret
mov
int
adc
popf
sbb
sbb
mov
lahf
jl
xchg
pop
rcll
xor
jl
mov
incb
push
xchg
sarb
jle
nop
and
cwtl
jg
inc
cmp
cltd
xchg
repnz
mov
inc
cmpl
mov
push
movsb
jo
push
cmp
aas
mov
sahf
sub
popa
loopne
xchg
jmp
bound
pop
nop
and
call
inc
cmp
inc
xchg
pop
push
sahf
add
mov
data16
or
sbb
movsl
inc
aas
jno
into
mov
add
movsl
fildl
lahf
jecxz
mov
xor
arpl
into
sub
fs
or
push
xchg
jecxz
outsb
outsl
push
push
jo
push
lods
mov
fistl
nop
sar
push
lds
sbbl
nop
dec
lret
dec
ljmp
adc
cmp
sahf
xor
std
inc
pop
out
sahf
pop
jge
mov
pusha
mov
push
lock
mov
xchg
mov
data16
mov
lds
pushf
jmp
in
sub
or
add
aas
addr16
iret
bound
push
cmpsb
adc
xor
filds
pop
leave
ljmp
and
pop
cli
in
mov
in
insl
pop
sub
push
xchg
das
sbb
dec
int3
mov
sub
jae
adcb
mov
jl
fstps
xchg
jno
lret
mov
inc
sbb
dec
es
fwait
sahf
sub
mov
sahf
dec
adc
shr
sub
pusha
xor
enter
adc
mov
stc
cld
movsl
cmp
dec
in
cmp
mov
pop
xor
jo
pushf
push
lea
nop
dec
and
mov
out
jmp
lea
bound
enter
das
mov
or
into
push
inc
lret
jae
iret
test
clc
sub
cwtl
mov
fldt
push
mov
scas
adc
pusha
idivl
pop
loope
jecxz
les
sub
sahf
adc
sbb
or
rorb
int3
outsl
push
mov
std
outsb
sub
and
and
stos
sahf
mov
mov
rcrl
lds
pop
lahf
jmp
push
add
xor
dec
sub
sahf
iret
pop
mov
push
outsl
sahf
in
jge
xor
jl
sahf
arpl
pop
mov
xchg
add
push
mov
add
into
mov
in
sahf
insl
and
adc
jle
push
adc
into
aam
fwait
or
aas
shl
subb
mov
jnp
sahf
imul
test
sub
fcmove
scas
scas
sahf
inc
mov
movsl
and
mov
sbbl
jecxz
mov
shll
loopne
scas
call
loope
ljmp
pop
mov
sbb
adc
jnp
pusha
sub
shlb
mov
or
and
and
adc
leave
in
cmc
cmpb
mov
test
push
faddl
ss
mov
jbe
test
dec
mov
xor
push
int
pop
out
js
addb
sbb
bound
cmc
pusha
and
sbb
scas
inc
mov
mov
push
xchg
sahf
mov
push
sahf
sbb
in
push
ficoml
mov
mov
cmc
inc
mov
xchg
es
push
jno
xor
mov
test
outsb
mov
lahf
mov
test
pop
inc
fistps
pop
inc
enter
xchg
repz
mov
inc
pusha
scas
xor
rorb
idiv
sahf
or
lret
jl
jmp
xor
lods
sbb
sub
adc
cmp
movsl
aas
pcmpgtb
sahf
inc
rcrb
arpl
cltd
jb
inc
pushf
sahf
enter
sub
sub
adc
push
pop
mov
inc
inc
sahf
ret
addl
xor
jle
call
mov
lahf
sbb
lcall
xchg
dec
decb
test
jmp
ret
sahf
pop
adc
inc
sahf
inc
aaa
roll
dec
data16
jbe
sahf
dec
push
xor
mov
in
mov
fcomp
rclb
sahf
movsl
jo
je
mov
xchg
sahf
lds
lea
negb
pop
imul
mov
xor
sbb
fxch
pusha
adc
fistps
push
adc
fstl
fisttpl
mov
ret
pop
sahf
push
imul
mov
insb
cmpsl
push
mov
mov
call
jne
aas
mov
sub
inc
movsb
sahf
xchg
mov
push
imulb
movsl
sahf
fildl
cmpsb
push
icebp
repnz
std
mov
movsb
fwait
or
cwtl
sahf
psubsw
mov
addr16
push
sahf
inc
insb
loope
and
outsw
sahf
mov
adc
clc
into
inc
mov
xchg
repnz
push
mov
mov
pop
mov
nop
push
fbstp
outsb
lcall
adc
pop
and
or
cld
incl
inc
mov
or
and
push
insl
mov
jle
arpl
sbb
cmc
aad
outsl
jae
sbbb
test
test
jle
ret
lahf
aas
shl
stos
call
xlat
cs
mov
int3
pop
ds
sbb
inc
xchg
push
pushf
push
xor
and
sub
cmp
inc
inc
pushf
jp
cmp
aaa
add
sbb
inc
pop
cs
ret
mov
sub
not
cmpb
jp
insb
adc
lcall
pop
push
sahf
and
mov
jge
mov
push
dec
inc
cmp
mov
insb
stos
mov
test
sahf
cmp
out
cmp
std
dec
sahf
psrlw
mull
sbb
sub
or
dec
or
leave
sbb
inc
sahf
iret
sbb
xor
stos
xor
pop
das
mov
shl
mov
push
adc
mov
push
jno
and
mov
cwtl
aam
jge
insb
push
je
stos
mov
push
adc
scas
mov
push
xchg
push
pushf
or
cmpsl
push
popf
fldl
rcr
sub
repz
ss
push
sarb
loopne
test
push
push
cmp
in
cmpsl
sbb
lods
ret
mov
out
push
xchg
sbb
scas
pushf
outsb
repz
test
sbb
xor
sbb
mov
xchg
push
cltd
js
mov
adc
test
sbb
data16
repz
out
pop
mov
adc
sub
lahf
cmp
mov
or
xchg
xchg
pop
jp
test
cmp
cmc
jl
sbb
aad
test
push
sbb
and
and
loopne
test
fcomi
rcrb
fs
sahf
sbb
or
inc
sbb
dec
nop
jnp
adc
cmp
lods
add
imul
or
push
shl
push
sahf
in
add
es
test
fisttpll
dec
in
push
rcrl
jge
pushf
into
pop
jg
and
sahf
shr
xchg
iret
inc
sbb
hlt
shlb
mov
xor
cmpsb
sbbb
int
cmp
jns
scas
fstpt
mov
inc
or
sub
lahf
loop
push
sbb
leave
mov
es
pusha
mov
int3
push
xchg
mov
adc
sahf
popa
scas
jne
adc
fildl
jmp
lods
push
lods
sahf
sar
cld
test
push
scas
sbb
mov
fs
movsl
lahf
sbb
inc
sahf
mov
mov
stos
rorl
inc
pop
inc
mov
mov
push
mov
fcoml
imul
std
mov
and
je
in
fstps
xorb
and
push
adc
mov
add
cmp
jge
movsl
rcrb
out
ret
sahf
fidivrl
xchg
setle
scas
fnstcw
fildl
shlb
push
sub
sti
daa
or
bound
imul
sahf
ljmp
pop
sahf
inc
std
xchg
testl
adcl
add
sbb
flds
sub
push
test
cmpsb
aaa
inc
rcll
mov
push
sub
dec
cmp
mov
cld
in
mov
pop
inc
js
sub
shl
subl
pushf
jp
mov
jo
mov
push
cmpsl
xchg
jl
aad
jl
fistpll
xchg
push
stos
and
lods
sarl
xchg
js
les
jp
push
pop
jo
incl
flds
pop
jb
cwtl
dec
cmp
fwait
inc
add
push
jbe
lcall
outsb
adc
jo
sub
pushf
adc
push
es
sbb
lea
xor
pushf
decb
add
mov
xchg
je
dec
pushf
inc
popa
mov
sub
lock
int
pop
scas
adcb
jl
ja
hlt
mov
call
and
test
adc
dec
icebp
leave
xchg
push
pop
sub
mov
outsl
scas
fwait
and
cmpsl
es
nop
push
push
and
mov
sahf
cmp
lods
push
xor
mov
mov
adc
inc
cmp
hlt
cwtl
adc
incl
in
cmpsb
add
xor
inc
and
sub
sahf
pusha
push
divb
pushl
call
pop
fs
test
adc
popa
iret
sti
dec
mov
sahf
aas
pusha
int3
cmpsb
fidivrl
add
out
xor
nop
push
popa
dec
cmp
and
cs
mov
cmpl
adc
rol
nop
inc
mov
or
std
cmpsb
nop
add
mov
insb
nop
mov
ds
cmp
test
test
aad
addr16
addl
sahf
inc
push
inc
rol
xchg
mov
fs
mov
rclb
add
call
or
sub
dec
inc
pop
out
inc
pop
ds
mov
sahf
lds
in
sbb
ret
cwtl
push
jge
sub
sahf
test
mov
pop
icebp
or
xorb
jbe
int3
mov
xor
sub
pop
push
popa
sarb
daa
sahf
adc
es
gs
sub
push
lea
sahf
popa
clc
sub
and
test
adc
cli
sub
or
or
cmp
jo
lahf
cld
mov
sub
rcll
icebp
mov
push
scas
sbbb
mov
in
cwtl
cs
inc
ret
pop
enter
sub
mov
or
imul
push
mov
sahf
dec
dec
mov
int3
xchg
pop
mov
addl
mov
popa
fisttpll
jo
or
and
inc
fstpl
sub
inc
cmp
cmpsl
xchg
fstpl
repz
sbb
dec
jl
push
xchg
repnz
out
inc
lahf
imul
sbb
push
xor
cs
icebp
pop
sti
fistpl
sahf
cmp
cmpsb
pop
xchg
cld
jmp
fs
mov
outsb
repz
lcall
insb
mov
fldenv
xchg
adc
xchg
repz
ficompl
xchg
cwtl
mov
or
and
les
and
pop
or
push
xchg
inc
sub
pop
cli
dec
fbstp
aaa
jb
pushf
pop
test
jne
pop
cmpsl
mov
xor
bound
ds
adc
lods
inc
sub
dec
mov
xchg
pop
dec
mov
fwait
pop
mov
mov
xchg
sbb
adc
mov
lret
js,pt
jle
insb
xchg
jg
cltd
lcall
inc
sti
mov
push
xchg
movsb
test
xchg
and
jmp
into
dec
mov
stos
inc
cmp
pop
int
decb
push
pusha
int
clc
insl
mov
cmp
test
aas
sub
pop
adc
pop
pop
fidivs
jnp
add
xor
and
pop
push
cmp
stos
dec
sbb
lock
cwtl
xchg
dec
dec
xchg
sub
cmp
push
lret
xchg
nop
jg
rcrb
or
pop
aad
push
adc
push
cwtl
cmp
pusha
jg
popa
pop
push
push
ret
std
sbb
xchg
pop
fwait
add
xchg
cmp
sbb
mov
jge
xor
sbb
mov
mov
sarl
xor
adcb
jl
sti
mov
pop
push
dec
adc
jecxz
adc
mov
stos
lcall
push
cmc
xor
rcll
push
popa
push
in
push
aam
fidivrl
xor
aam
adc
iret
push
outsl
fstl
inc
test
push
data16
arpl
jle
mov
mov
and
xchg
adc
sbb
cmp
fists
cwtl
mov
cmpsb
dec
mov
inc
push
dec
scas
and
push
mov
cmp
sbb
cmp
fnstsw
sbbl
inc
addr16
mov
flds
pushf
dec
cmp
jb
int3
pop
stos
nop
or
ljmp
xchg
adcb
lods
popa
push
pop
lret
fistps
and
dec
push
sbb
xchg
push
pop
jge
push
push
scas
or
mov
push
push
mov
pop
dec
push
inc
jl
cmp
adc
push
inc
push
xor
inc
or
movsl
sbb
push
clc
and
push
or
xlat
pop
les
jge
xor
sub
jle
mov
jp
lea
les
push
mov
or
scas
push
mov
pushw
ds
test
and
js
mov
clc
push
xchg
mov
pcmpeqd
mov
push
idivb
arpl
push
iret
sbb
mov
or
jle
add
fs
add
xor
or
mov
iret
ljmp
lcall
cmp
sbb
out
jle
or
dec
dec
dec
nop
data16
push
clc
lds
inc
or
iret
jle
cwtl
sbb
push
mov
dec
xchg
add
movsb
cmp
int
push
mov
int
push
shll
psubusb
aam
insb
pop
fimull
xchg
xchg
mov
cmp
bound
rcrl
idiv
or
bound
jl,pt
fists
scas
adc
or
fs
mov
mov
pop
or
pop
mov
mov
mov
pminsw
mov
int
inc
dec
mov
sarl
movsb
fsts
cmp
movsb
xchg
jle
mov
roll
cmp
ds
and
fwait
pop
inc
sub
xchg
stos
xchg
dec
sub
movsb
dec
decl
repz
sub
or
jle
push
mov
cmp
mov
push
icebp
add
and
and
jo
addb
pop
mov
cwtl
jl
cmp
mov
or
iret
outsb
movsl
repz
mov
mov
jmp
add
lahf
sub
inc
jbe
dec
frstor
xchg
sub
call
ss
push
sti
dec
jbe
jp
cmp
push
mov
aas
pop
push
pop
xchg
scas
xchg
andb
sahf
das
mov
xchg
cmp
sbb
test
sbb
cwtl
mov
lods
push
ficoms
xor
xchg
ds
jg
mov
push
ds
jg
xchg
jl
jp
push
imul
daa
mov
cmp
out
cmp
pop
loope
mov
and
pushf
push
nop
sub
sbb
inc
ljmp
jl
pusha
movsl
xor
das
inc
sbbl
cmp
dec
mov
push
jg
pop
jg
outsl
psubb
dec
xchg
pushw
push
push
jge
lcall
mov
mulb
push
jnp
mov
jns
jle
imul
push
ja
cmp
lcall
mov
outsb
dec
jne
sbb
scas
dec
jg
pop
jae
jle
imul
jno
mov
int
jno
outsl
test
or
outsl
push
mov
jbe
insl
push
dec
push
insl
push
mov
out
push
mov
data16
data16
fsubl
dec
in
fdivrl
dec
popf
or
mov
lock
rorl
sbb
popa
push
adc
adc
adc
stos
jp
inc
jp
and
mov
lret
jp
push
scas
xor
xchg
jge
xor
lcall
js
xchg
mov
pusha
sar
dec
xchg
pop
repnz
bound
iret
nop
mov
mov
sbb
xchg
pop
sbb
lods
out
pop
sbb
xchg
cld
sbb
mov
pop
mov
iret
inc
pop
jle
imul
or
sub
mov
xor
add
repz
scas
nop
outsl
lahf
jno
pop
pop
jne
mov
cld
cmc
push
sbb
cmp
lock
pop
xor
sub
ret
rol
inc
push
sbb
ret
add
xchg
pop
add
and
jns
jle
test
scas
dec
add
sbb
or
mov
pushf
or
mov
lods
sub
addr16
pop
adc
sub
xor
imul
pushf
lcall
jl
imul
xchg
jbe
mov
sahf
inc
or
xor
lret
mov
jae
mov
shr
or
mov
lds
arpl
and
and
jge
arpl
lea
popa
xor
cmp
sbb
lcall
cwtl
inc
jl
sub
pop
pop
jbe
sub
sti
dec
push
addr16
or
test
popf
mov
mov
xor
aas
cmpsb
inc
sbb
add
pop
pop
mov
imul
pop
push
test
inc
xchg
or
rcrb
push
nop
pop
popa
jnp
jne
cmp
inc
dec
ret
lea
mov
loop
mov
or
mov
orb
mov
jmp
clc
cltd
dec
jp
xchg
sbb
sar
jl
push
pop
sarl
adcb
loop
xchg
mov
ret
sbb
add
cmp
lret
rorb
add
fistpll
lahf
xchg
jle
xchg
dec
popa
ret
or
jle
shl
and
push
daa
pop
xor
pop
jmp
mov
xor
inc
adc
mov
mov
dec
test
sbb
fbstp
jl
pop
inc
popl
ss
adc
push
inc
outsb
mov
fimuls
dec
shll
sub
xchg
jl
mov
add
hlt
je
gs
pop
push
sub
popl
mov
dec
xchg
dec
cmc
movsb
pop
ucomiss
lods
mov
pop
xor
jne
movsl
mov
dec
adcl
hlt
cmpsl
sub
xor
xor
push
sti
repnz
push
mov
ss
fstpl
jo
iret
inc
mull
pop
pop
cmp
add
lret
daa
gs
out
test
xchg
or
or
xor
dec
pop
jl
xor
sbb
inc
push
or
add
xchg
test
add
pop
rcrb
clc
jnp
dec
je
andl
fwait
mov
je
push
cmp
jo
test
add
sub
pop
mov
mov
xchg
jge
jp
push
es
aaa
pop
inc
sbb
inc
data16
aaa
xor
hlt
out
sbb
addr16
adc
push
rcl
sbb
xor
adc
das
stos
or
pop
cmp
add
adc
xchg
xchg
cmp
mov
add
std
inc
loopne
cmpsl
jne
jge
mov
stos
lds
data16
sbb
ds
push
dec
lea
fildl
push
xchg
int3
push
pop
mov
dec
das
xchg
or
xchg
jg
cmovp
xchg
arpl
push
push
hlt
xlat
xchg
push
xchg
push
mov
pop
and
push
inc
sti
rol
pop
cltd
pop
sbb
ljmp
aam
in
leavew
push
popf
xlat
xchg
scas
dec
inc
mul
dec
mov
or
into
jb
mov
mov
jg
xchg
cs
cmp
bnd
jle
mov
test
stos
data16
or
mov
pop
add
pop
mov
loop
or
nop
shl
jle
cwtl
or
lods
mov
jp
aad
or
lock
dec
jp
jbe
mov
pcmpeqd
xchg
sarb
and
sbb
call
xor
pop
fsts
arpl
not
test
les
mov
mov
clc
pop
cmp
mov
scas
int3
fiaddl
inc
add
repnz
sub
icebp
mov
stc
ret
dec
inc
sti
imul
pusha
push
js
stos
movsl
pop
leave
pushf
mov
xchg
pushf
pop
sub
xchg
fstpl
ds
lahf
mov
aas
mov
lods
adc
inc
jg,pt
and
inc
leave
dec
jp
outsl
dec
movsl
sbbl
pop
es
and
or
xor
mov
mov
xchg
clc
mov
repz
out
inc
std
test
leave
dec
stos
sbb
cmp
jle
nop
aaa
push
aad
ret
jle
rorb
orb
dec
inc
push
popf
andb
gs
xchg
pop
xlat
gs
xchg
adc
test
or
sbb
popl
nop
das
mov
xor
push
mov
mov
add
mov
loopne
lahf
nop
out
jl
fisttpll
gs
xchg
sti
sbb
out
sub
pop
inc
icebp
sub
mov
popa
adc
repz
icebp
pop
jns
dec
shll
imul
cmc
mov
scas
xchg
nop
jae
mov
jle
stos
jno
out
xchg
mov
jle,pn
stc
inc
std
out
lock
lock
nop
mov
mov
lods
loop
in
dec
jo
aam
lea
iret
mov
mov
or
pop
adc
sbb
mov
cmc
ja
adc
mov
fs
lahf
xchg
mov
pop
xchg
or
addr16
enter
pop
inc
jle
xchg
mov
adc
popf
sub
inc
pop
pushf
lret
orb
sbb
repz
push
out
inc
adc
sti
push
sti
xor
aad
jp
jmp
test
jl
xor
mov
int
sbb
pcmpgtb
sar
xor
sbb
andb
mov
lcall
movsb
sub
fs
int3
inc
shlb
cmc
mov
push
mov
into
cld
xchg
pusha
pop
xchg
jne
xchg
or
pop
xchg
and
xchg
dec
popf
in
or
sub
sub
fs
or
gs
js
lcall
xchg
sbb
popa
pushf
pop
and
fdivs
frstor
jns
pop
push
sbb
sbb
push
lret
lea
out
push
xchg
cmpl
fimuls
push
cmp
loopne
mov
push
pop
push
jne
push
popl
jb
mov
jp
dec
mov
pop
sub
in
pushf
add
out
daa
aaa
fisttpl
inc
jl
sbb
dec
mov
mov
loopne
mov
fildll
int
test
mov
jl
xlat
sbb
pop
cwtl
mov
pop
mov
jge
cmp
sbb
push
mov
push
jge
fildll
sbb
mov
jbe
cltd
ja
inc
mov
push
mov
es
cmp
fnsave
out
pop
inc
xchg
lods
loope
mov
cmpl
cmp
bound
xlat
xchg
mov
mov
and
sbb
xchg
push
out
sub
rcrb
mov
or
mov
imul
ret
pop
mov
jb
cwtl
pop
push
push
inc
mov
sbb
repnz
pop
mov
mov
dec
mov
push
sub
iret
cmp
sbb
pop
or
mov
rolb
sbb
mov
ret
repz
std
jmp
xor
mov
adc
cmp
adc
and
and
mov
cli
pop
fisttps
push
dec
xchg
mov
xchg
test
push
xchg
jle
iret
mov
mov
stos
lcall
out
mov
in
xchg
xchg
bound
frstor
andl
pushf
mov
je
mov
fwait
sbb
or
dec
xchg
xchg
popf
out
xchg
xchg
lods
rorb
rcrb
insb
incl
inc
shrb
insb
inc
add
inc
xchg
adcl
pop
aaa
push
add
inc
mov
cmp
adc
inc
jle
das
pop
loope
movsl
add
popf
push
mov
fisttpll
cmp
and
sub
pop
and
dec
sbb
pushf
pop
daa
push
dec
les
mov
shl
sbb
sub
dec
les
pop
sub
sub
add
mov
push
and
sbb
out
decb
inc
adc
cmc
jns
inc
sbb
pop
call
adc
xor
stc
lods
pop
ljmp
adc
sbb
push
cmp
push
jg
sbb
or
sub
ds
sbb
lock
fdivp
jg
ds
inc
jle
test
int3
lcall
pushf
ja
mov
fildll
bnd
mov
pop
mov
data16
fcmovnu
inc
jbe
and
xlat
cli
test
out
xlat
lcall
cmp
mov
jge
xor
mov
mov
inc
add
aas
lock
lods
inc
mov
dec
jmp
mov
movsb
jle
dec
aaa
push
mov
fstpt
je
inc
or
mov
testb
sti
push
les
xor
arpl
adc
movsb
pmuludq
xor
pop
out
hlt
mov
aaa
cmp
sub
orb
stc
fstpl
movsl
andl
gs
sub
out
hlt
mov
in
pmaxsw
add
out
push
push
repz
and
xchg
scas
adc
popa
xchg
jg
jl
jno
jb
sub
iret
adc
mov
pop
or
adc
loope
mov
scas
loope
dec
push
lods
ds
lcall
sar
lahf
hlt
cs
clc
or
lea
je
mov
jg
fildl
inc
push
mov
sbb
imull
popf
jmp
loopne
dec
lock
das
cmp
movb
repz
jmp
mov
test
jbe
cmp
insb
and
sbb
movntps
ret
jp
lret
insb
mov
mov
cmc
stos
out
add
cmp
es
sbb
pop
jmp
adc
mov
add
cltd
jno
cmp
in
pop
cwtl
mov
loopne
pop
or
adc
jl
push
push
xor
ret
sahf
adc
mov
pushf
xor
pop
jb
push
loop
popa
scas
xor
mov
add
faddl
jbe
js
jle
jne
push
push
call
dec
adc
add
mov
out
dec
xor
mov
ja
mov
mov
xchg
jb
jl
mov
adc
pop
jo
mov
stc
mov
cmp
shll
jns
push
pushf
test
pop
pop
std
and
mov
sub
test
mov
addr16
mov
push
mov
scas
jle
cwtl
loope
add
out
test
adc
or
mov
push
push
cli
mov
push
nop
jg
push
out
jmp
xchg
add
test
mov
test
push
mov
mov
push
les
xchg
dec
push
test
sbb
pop
mov
lret
adc
or
mov
sub
scas
iret
addb
inc
ds
shll
mov
xchg
data16
pop
push
add
mov
fidivrs
js
mov
es
jo
add
xchg
mov
pushf
or
cmpb
mov
and
dec
rcll
pop
js
out
lea
addl
js
xchg
xlat
xchg
inc
cmp
mov
jp
lea
pop
rorl
cli
jmp
mov
dec
addb
pop
addb
mov
cmp
test
mov
push
sbb
pop
or
cmpxchg
dec
mov
and
sub
stc
dec
pop
mov
xor
jle
mov
cmpsb
jae
int
out
push
push
outsb
sbb
xchg
ja
mov
mov
sbbl
psubd
jp
mov
cli
lods
xlat
add
popf
out
imull
jl
mov
mov
sbb
cwtl
cmp
pop
mov
std
pusha
dec
inc
jg
scas
cmp
inc
push
cmp
cmp
sbb
fstpt
add
inc
insb
push
sbb
add
pop
out
lock
inc
add
xor
dec
stc
sub
pop
sub
dec
js
leave
dec
sub
sbb
mov
outsb
pop
xor
push
lods
mov
or
dec
xchg
aas
fs
push
sbb
xlat
and
or
cs
push
push
push
jb
xchg
or
gs
movsb
and
dec
sbb
cmc
in
sub
or
add
cmp
lahf
sub
je
sbb
pop
lea
insb
ljmp
in
repz
scas
jns
repz
push
add
push
pop
outsb
lahf
nop
js
js
ds
mov
xchg
cmp
or
xchg
clc
fldcw
mov
rorl
pop
push
jmp
jnp
inc
stc
arpl
pop
sbb
push
mov
roll
inc
lret
xchg
outsl
pop
xchg
outsl
push
adcb
leave
jo
cmc
rcll
scas
es
pop
andb
dec
push
mov
mov
push
add
movsb
xchg
sbb
jge
imul
test
shl
jle
test
addr16
fs
xchg
jl
xor
sbb
pop
push
nop
cmp
xor
lret
pop
bound
call
push
test
xchg
jl
xor
movsl
mov
sti
or
mov
stc
shl
outsl
sbb
fidivrs
or
jle
or
pmaxub
lods
lcall
mov
ficoms
in
imul
xor
jbe
pop
sbb
xchg
pushf
adc
ljmp
repnz
pop
sbb
pop
mov
or
out
mov
push
push
lods
lret
mov
xchg
mov
xchg
sbb
adc
testb
adc
arpl
adc
pop
inc
adc
mov
jge
xlat
or
das
cmp
dec
adc
aas
out
pop
mov
femms
mov
cmp
cmp
gs
stos
fs
pop
mov
movsb
xchg
add
test
push
and
loope
pop
mov
push
cmpl
mov
push
xor
jle
iret
or
test
mov
or
repz
sub
jp
fildll
fsub
jnp
inc
and
imull
cmp
lret
into
and
mov
dec
sbb
xchg
push
and
xchg
mov
mov
xchg
idivb
cld
xchg
adc
lea
jno
add
jecxz
and
cmp
mov
cmp
mov
pop
icebp
sub
and
sbb
mov
jb
cmpl
shlb
mov
mov
xchg
dec
jb
and
jle
xchg
setns
je
mov
jne
pop
jbe
mov
jmp
cmp
pop
mov
lahf
push
add
and
pop
and
mov
mov
push
jle
mov
lea
mov
lods
xor
or
sub
mov
daa
gs
xchg
add
and
sbb
mov
add
add
dec
cs
fidivs
sub
arpl
ret
inc
xchg
add
test
stos
cmc
movsb
cmp
cli
add
xchg
std
lods
inc
mov
cltd
repz
jmp
mov
pop
test
inc
push
mov
push
xor
daa
aaa
and
cltd
cmp
pop
xchg
sti
cmpb
mov
inc
push
xlat
push
stos
fs
pop
pop
xor
xchg
popf
xchg
jp
das
or
push
popf
mov
mov
js
mov
les
jle
mov
push
push
xchg
xchg
dec
xchg
jl
roll
cld
loop
mov
lods
push
or
mov
adc
loopne
push
xor
mov
adc
or
sub
jae
jb
cmp
jmp
push
xchg
dec
lds
cli
in
aaa
in
xchg
leave
andl
mov
pop
xlat
data16
scas
movsb
mov
mov
inc
mov
xchg
orl
jl
xchg
les
jp
movl
push
xor
or
dec
std
jo
cmp
adc
mov
xchg
and
inc
out
mov
iret
mov
push
aam
mov
lock
cmc
and
push
adc
cmc
scas
mov
sbb
inc
dec
adc
popf
adc
sub
sub
sub
jo
in
or
lods
rclb
mov
insl
push
bound
cmp
subb
les
mov
loope
push
out
mov
push
js
shr
or
in
cs
jnp
shll
sub
xchg
sub
add
sub
jecxz
aam
aam
sbb
jp
js
dec
jmp
out
mov
test
xchg
ficoms
sub
xor
mov
mov
xor
std
or
inc
adc
push
sub
fcomip
sub
jl
js
jle
test
cwtl
inc
fnstsw
xlat
jmp
xor
idivl
invd
jmp
adc
sbb
inc
ss
pushf
mov
pop
inc
or
jnp
sub
sub
pop
and
pop
leave
popf
pop
enter
xchg
mov
jne
jmp
nop
inc
fcos
fimull
loopne
jmp
les
mov
mov
xchg
cltd
into
pop
cmp
les
pop
push
lods
mov
test
sub
in
push
and
sbb
scas
mov
data16
adc
loopne
adc
rcr
or
adcb
lcall
push
dec
sbbl
sti
pop
aaa
add
dec
lahf
jb
loopne
das
inc
jge
xlat
inc
cmp
sbb
fwait
rorl
pop
xchg
sar
scas
xorb
test
pop
bound
and
xchg
sub
cmp
mov
arpl
cmp
pop
out
mov
bound
fcoml
and
scas
push
add
aaa
pop
movsb
data16
test
push
iret
es
sbb
mov
push
xor
data16
fsts
adc
iret
mov
mul
jae
cltd
movd
mov
sbb
repz
add
jge
xchg
push
clc
lods
jmp
fmul
enter
ror
mov
addb
lock
jmp
mov
loope
lods
xchg
pop
push
sbb
pop
dec
lods
push
orb
loop
rcl
mov
jecxz
jle
daa
sbb
insl
mov
inc
or
mov
and
aad
jl
push
jp
pop
imul
insb
push
mov
xlat
add
pop
sbb
sbb
pop
jmp
adc
ds
lcall
mov
shrl
cmp
adc
gs
rcrl
rcrb
mov
out
xchg
sbb
mov
nop
jg
jle
outsl
dec
mov
imull
xchg
imul
lods
jno
in
mov
add
inc
fisubs
xchg
pop
cwtl
and
cmp
inc
bound
movsb
add
jo
mov
outsb
push
jle
and
ror
or
cltd
and
jne
gs
sub
cwtl
jl
addr16
aad
jnp
ret
mov
jno
push
inc
mov
or
mov
ret
sarb
push
or
aas
sbb
push
nop
push
bswap
inc
ds
jae
andnps
xlat
add
cmovp
lret
aaa
mov
stos
cltd
or
fidivrs
int3
and
xor
sar
andb
outsl
hlt
data16
push
subb
push
add
call
dec
addb
mov
mov
fsubr
incb
mov
mov
lahf
nop
scas
in
xchg
jl
xor
inc
pop
pop
inc
push
out
cmp
xchg
pushf
mov
shlb
scas
pushf
cli
mov
in
sub
cmp
je
sbb
filds
adc
js
sahf
fldl
andb
fisubl
mov
lret
jo
ljmp
mov
mov
jbe
push
movsb
sahf
add
sbb
andb
scas
addb
inc
dec
shlb
stos
popa
faddp
mov
xor
add
cmp
mov
push
hlt
sbb
daa
cmpsl
dec
adc
dec
sub
ficoms
sbb
xor
and
jecxz
xor
in
mov
and
mov
pop
cmp
jmp
inc
xchg
out
lret
cmp
pminsw
sahf
lods
es
sbb
and
sahf
mov
ds
fildl
sahf
test
das
int3
push
mov
xchg
aad
pop
xchg
adc
imul
mov
sahf
xor
pop
into
pusha
jnp
out
sahf
scas
sbb
ret
sbb
in
ret
das
cltd
jbe
outsb
fisubl
fisubrl
sahf
jno
ja
or
rclb
stos
pop
sbb
fwait
or
xchg
inc
fisubs
push
movsb
das
sahf
stc
inc
je
mov
scas
int3
xchg
mov
ss
inc
jbe
jmp
rclb
lods
sub
notb
push
inc
fbstp
cmpsl
rcrb
add
popa
and
pop
shlb
xchg
sahf
jae
add
scas
int3
sahf
mov
adc
jne
in
or
push
mov
sbb
bound
loopne
adc
push
sahf
xor
ss
inc
xor
push
xor
das
jge
or
push
jle
jae
test
pop
adc
mov
stos
jmp
sti
sub
fwait
cwtl
stos
mov
sbb
lret
jno
and
and
scas
pop
add
xor
sahf
lds
cmp
mov
cli
jo,pt
or
xor
or
xor
mov
cmp
add
addr16
push
xor
stos
sahf
xor
test
sbb
int
inc
imul
test
sub
sahf
jp
jae
repz
push
ds
fwait
jnp
mov
out
and
adc
push
mov
in
lcall
out
fwait
or
nop
cmp
mov
xor
adc
add
sahf
adc
fidivl
loope
negb
cmc
dec
fldl
adc
push
push
adc
cmpsb
inc
aas
sahf
divl
lds
sahf
cmc
push
pushl
xorb
popa
mov
mov
cmpl
xor
xchg
dec
sbb
lahf
cld
das
popa
ret
ljmp
cmpsb
pop
fs
sbb
jbe
pushf
xchg
nop
daa
cli
dec
push
cmpb
mov
pop
jecxz
push
dec
js
sub
xchg
sub
cmp
in
dec
adc
sbbl
xor
push
mov
xchg
sbb
sub
sbb
cmpsb
cwtl
cli
dec
fisubrs
movsl
das
scas
out
popf
das
pushf
cs
data16
fs
xor
movsl
aaa
fstps
cmp
xchg
jae
mov
add
dec
jmp
lret
mov
inc
push
mov
xor
inc
cmpsl
cmp
out
jp
xor
out
jl
stos
pop
insb
sar
insb
xchg
andb
cmp
pusha
xlat
cmp
mov
inc
test
movl
loop
cmp
sti
jmp
test
jecxz
sti
lock
in
aad
pop
test
dec
in
rcrl
xchg
xor
enter
mov
jge
add
mov
jle
cwtl
syscall
mov
pop
add
andl
pop
or
jb
mov
or
mov
btc
mov
cmp
adc
mov
sbb
mov
xchg
xor
xlat
stos
clc
jge
fisubs
pop
mov
ss
repz
int
packssdw
inc
inc
adc
cmp
jp
addr16
inc
add
xchg
pop
mov
test
test
ss
push
ja
adc
sar
out
orl
andl
pop
cmp
imul
jle
cmp
xor
push
cmp
lea
jp
push
xor
xor
scas
addr16
xchg
cmp
xor
xor
cltd
mov
pop
jl
adc
pop
xchg
shlb
pop
sbb
mov
add
aas
mov
jl
jecxz
inc
mov
nop
add
cmovae
xchg
cwtl
jg
pop
mov
mov
pop
inc
hlt
push
mov
xchg
jge
mov
add
xchg
inc
dec
cmp
xchg
pop
aas
xchg
jge
fisttpl
andb
or
jp
cmp
or
aam
mov
pop
sbb
jle
mov
pop
sahf
xor
cmp
jle
sbb
dec
ds
mov
int3
cmovo
xor
sti
out
aad
je
jg
sub
or
pop
jb
pop
cwtl
aam
or
mov
lods
pop
jno
js
jp
and
add
xor
and
mov
mov
inc
jg
push
jge
xor
fs
cltd
mov
add
and
sub
loope
xor
fistpl
movsb
mov
cmpsl
mov
xor
loope
mov
cwtl
xchg
lods
lret
xor
mov
aaa
les
or
ret
iret
adc
test
push
lcall
insb
push
bound
sar
jl
dec
cs
jmp
pop
popa
xchg
subb
adc
rcrl
adc
jmp
sbb
or
mov
mov
jb
sbb
dec
sbb
lcall
sbb
xchg
xchg
repnz
mov
jne
pop
pop
push
pop
adc
pop
ret
jbe
adc
and
ret
mul
je
jg
xchg
dec
mov
jns
out
stc
orl
out
lods
pop
lea
arpl
sti
rorl
psubq
push
aam
std
pusha
jle
imul
hlt
test
xchg
xlat
lcall
cmp
add
out
hlt
popl
sbb
mov
mov
mov
xchg
xchg
sbb
mov
sbb
nop
and
cmp
inc
xchg
loop
xchg
sbb
push
xchg
add
sbb
dec
jg
pop
xchg
adc
xlat
xchg
push
jl
dec
pop
add
jmp
insb
push
dec
mov
mov
xor
rorb
adc
iret
mov
scas
jmp
jbe
imul
test
mov
add
inc
add
dec
push
mov
cmp
bound
orb
bound
jne
mov
add
mov
xchg
mov
mov
scas
adc
dec
dec
jmp
mov
dec
subl
add
je
mov
pop
icebp
cwtl
xchg
jl
shrl
pop
lcall
inc
mov
in
adc
es
lods
pop
ljmp
aam
les
dec
inc
cmp
xchg
lods
mov
stc
xchg
lods
sbb
push
pusha
shl
adc
pcmpeqd
push
inc
mov
and
adc
xchg
pop
jle
out
cmp
xorb
hlt
jle
xchg
movaps
addb
hlt
sub
mov
dec
adc
push
sub
push
xchg
add
out
push
hlt
cs
lret
aad
aad
xor
aas
wrmsr
cld
jl
jl
out
jp
xor
xchg
repnz
pop
mov
cmp
test
inc
scas
cmp
xchg
pop
js
ret
lea
add
adc
or
mov
test
push
mov
push
test
clc
pop
xchg
sar
mov
add
sete
inc
adc
pop
movsl
fldl
lahf
adc
or
jb
pop
fistl
imul
iret
adc
mov
jbe
xchg
test
sbb
ja
in
js
push
or
outsb
xorl
fs
popa
shr
clc
xchg
adc
jo
dec
dec
das
repnz
clc
je
mov
pop
sbb
jp
push
sbb
push
jp
push
insb
pop
lret
sete
mov
pop
lret
add
pop
mov
popf
aas
or
push
arpl
mov
mov
ficoms
push
mov
sahf
decb
clc
cmp
arpl
sbb
xchg
push
cwtl
nop
xchg
jl
jp
pushf
scas
scas
pop
jl
or
aaa
cmp
scas
pop
jo
jo
xchg
jle
aad
jp
and
sub
mov
xor
xorb
push
cmp
fistpl
dec
orb
pop
bound
stc
jne
sbb
cltd
xchg
sarl
dec
test
jp
das
imul
ja
mov
mov
mov
cltd
das
pop
lahf
loop
push
icebp
pop
push
mov
sbb
pop
xorb
pop
pushf
ja
xchg
repz
popf
lock
xlat
mov
adc
cmp
shll
loop
loopne
dec
mov
out
cmp
sbb
sbbb
ret
fwait
mov
mov
stc
mov
pop
inc
push
aas
loop
mov
jne
inc
mov
daa
push
pusha
jno
adc
sbb
in
cmp
fistps
mov
adcl
mov
pop
dec
stos
push
push
pop
cld
cwtl
enter
stc
fs
adc
pop
iret
dec
dec
pop
imul
pop
imul
shrl
push
xchg
mov
sub
xlat
xchg
dec
xchg
cld
fistpll
pop
lahf
lock
adcb
mov
out
mov
fistpl
xchg
fstl
add
pushf
mov
mov
out
mov
jnp
iret
ss
leave
cmovp
les
cmp
and
sbb
clc
mov
pop
sub
mov
sbb
stos
sub
iret
lret
mov
push
mov
xchg
addr16
sub
cmp
xchg
push
sahf
cmp
adc
or
dec
rclb
out
ficoml
iret
push
push
adc
sub
icebp
dec
mov
int
mov
mov
js
xor
ret
mov
shlb
mov
lock
jbe
mov
jp
and
test
mov
lahf
and
aam
cmp
or
out
outsb
frstor
pop
cmp
in
mov
fdivs
jmp
adc
inc
jl
and
mov
fstpl
int3
shrb
jbe
mov
nop
in
jae
inc
sub
push
negl
cmp
fisubl
dec
push
push
adc
xor
test
idivb
xchg
test
cmp
call
jle
mov
rcr
fs
dec
arpl
iret
sbb
stos
lock
ret
mov
cmp
cmp
sub
push
rolb
cwtl
pop
pushf
or
dec
loopne
je
fisubs
loop
cwtl
or
mov
in
lret
aaa
cpuid
bound
mov
leave
out
outsb
in
aam
ss
mov
mov
adc
xlat
ds
sbb
imul
addb
jmp
gs
lret
sbb
add
mov
shl
pushf
shl
mov
jle
shll
mov
cmp
cli
sbb
and
dec
adc
es
rorl
in
sub
cld
inc
cld
cwtl
mul
mov
mov
add
outsl
out
or
xchg
sub
pop
jp
pop
sbb
fdivrl
xchg
mov
mov
push
je
sahf
sbb
fwait
std
sbb
mov
mov
cltd
push
push
sahf
jns
adc
pop
mov
sahf
jo
hlt
fcmovnbe
mov
stc
mov
mov
push
ret
sahf
jne
not
mov
xor
mov
shlb
xor
repz
shlb
xchg
adc
shll
mov
ja
xchg
dec
xor
ficomps
xchg
dec
fwait
mov
out
push
cli
jbe
inc
sbb
push
fcmovu
cltd
js
xchg
mov
nop
push
xor
sti
dec
xchg
pop
jo
xchg
hlt
xor
aam
cltd
aaa
ret
push
cltd
or
inc
iret
sub
adc
sti
add
add
insl
adc
pop
aas
cltd
mov
bound
lahf
jmp
cmp
sbb
daa
repz
sahf
and
xor
sub
xor
add
or
sahf
sbb
add
sahf
add
push
loope
xor
in
sbb
test
or
rcl
jmp
sti
xlat
push
sahf
add
xor
nop
cmp
adc
sbb
jo
sahf
sub
ret
cmp
adc
icebp
mov
sahf
lods
push
daa
jnp
outsb
mov
stos
fistps
sub
xor
repz
lock
ret
sahf
push
andl
lods
pushf
pop
pushf
repnz
push
cmp
roll
sub
lahf
sbb
mov
xchg
push
stos
orl
repz
xchg
or
mov
sub
cmpb
clc
push
mov
mov
jae
add
insb
lds
mov
roll
add
and
push
cwtl
mov
mov
pop
mov
xchg
int
sahf
xchg
mov
mov
aad
xchg
adc
jns
or
pushl
sbb
imul
sbb
sahf
and
xor
ret
or
jae
xchg
pop
sahf
mov
aam
in
xor
addr16
out
das
sahf
ss
jne
cmp
sbbl
dec
inc
cmp
add
cwtl
pushf
mov
repz
inc
lods
pop
sahf
mov
rclb
dec
xlat
mov
sahf
jns
cmp
xor
jno
scas
in
jl
repnz
data16
xor
pop
movsb
dec
movl
mov
inc
push
jb
dec
sbb
mov
sahf
sub
sub
jne
jg
lret
push
xor
call
andb
pop
lret
mov
xchg
movsb
outsl
call
mov
push
movl
stos
add
test
mov
popa
adc
in
xchg
cmp
fptan
repz
and
out
iret
icebp
stos
xor
and
cmp
cmp
insl
jne
clc
and
or
out
adc
ret
icebp
cmp
or
jmp
xchg
push
cmpsb
and
cmpsl
adc
mov
add
jl
dec
mov
fcomps
lahf
jne
push
push
jecxz
push
in
out
xor
jnp
xchg
rcl
data16
cmp
pop
lds
je
xchg
xchg
inc
inc
sub
das
and
cmp
int
outsb
inc
mov
xor
mov
cwtl
xorb
shll
out
ret
push
sahf
mov
cmp
leave
faddl
adc
popaw
add
iret
mov
xor
or
dec
ss
pop
fimuls
inc
inc
in
mov
sahf
adc
jns
mov
xor
adc
test
jne
icebp
in
push
sahf
push
pop
lret
cwtl
jns
movsl
inc
bound
push
movsl
bound
les
outsl
xor
jecxz
pushf
fsubs
mov
imul
sahf
add
pusha
lds
in
and
pushf
pop
sbb
mov
mov
out
in
in
test
mov
stos
sub
sbb
and
add
fbld
aam
xor
add
and
jo
out
jbe
and
loope
or
aaa
cmp
pusha
xchg
mov
xor
rcll
pushf
adc
repz
pop
push
popa
sahf
ja
pop
jg
mov
mov
cmp
pop
stc
aas
jmp
sbb
mov
mov
outsb
js
and
xor
sub
sahf
push
sub
cwtl
call
in
sahf
ss
loopne
lret
aas
sahf
fwait
push
push
jb
and
xor
xchg
ret
pop
fadd
out
in
cwtl
sub
test
mov
add
repnz
sahf
data16
in
mov
addb
push
test
rcrl
gs
xor
cs
xor
gs
out
outsl
out
xchg
push
cmp
and
addb
movsl
je
data16
xor
pop
lret
pushf
data16
lahf
mov
leave
lret
sahf
rolb
lods
sahf
test
stos
pop
mov
es
movsb
sar
sahf
push
add
jp
xor
cmp
es
sbb
addb
lahf
and
mov
clc
pop
out
shlw
sub
das
nop
scas
mov
cmp
push
sub
fimull
jle
ret
cli
or
repnz
cwtl
sahf
imul
testl
xlat
push
mov
push
lahf
adc
mov
mov
ret
sahf
rep
pop
xor
es
sahf
mov
xchg
sahf
ja
xor
xchg
jecxz
sahf
in
test
addl
test
je
sbb
push
mov
dec
sahf
fbstp
or
or
sti
xchg
xchg
popa
in
sahf
lds
sahf
push
push
xchg
fsts
push
inc
sahf
add
aam
pop
sahf
inc
mov
mov
nop
add
icebp
pushf
xchg
fldt
sahf
lahf
jnp
inc
test
add
sub
movsb
mov
iret
sahf
xor
stc
and
lods
pusha
in
push
addr16
or
mov
ja
xchg
pop
pop
pushf
jbe
cmp
cmp
bndldx
popf
inc
and
cmc
or
jecxz
sahf
push
clc
ret
and
mov
jnp
and
repz
sbbl
mov
jle
nop
in
loop
loope
cmpsb
out
shl
adc
clc
lret
lahf
and
xor
aam
popf
jmp
outsl
stc
fimuls
in
loop
inc
pop
jne
inc
mov
and
fmul
xchg
sahf
sub
and
cmpsb
sub
sahf
test
and
pop
pusha
int
ljmp
movsb
mov
sahf
test
jle
outsb
scas
sahf
mov
pop
pop
test
popa
and
sahf
fiadds
iret
inc
sahf
pusha
aad
outsl
xchg
stos
push
and
pop
sahf
jmp
inc
ja
ret
stos
pop
cwtl
mov
sbb
pop
out
add
adc
cltd
jg
sbb
xor
xchg
and
fwait
lea
add
push
lcall
popf
xor
mov
scas
ret
cmp
cmp
test
arpl
hlt
and
push
js
sahf
mov
sub
sub
loopne
sbb
lock
movsl
jae
push
adcl
jmp
dec
movsb
nop
bound
inc
in
jns
sahf
stc
aas
mov
sub
jle
xor
mov
xorb
fisttps
sub
add
lods
sahf
insb
mull
sahf
stc
gs
fsubr
leave
cli
cmp
nop
lock
outsb
cltd
dec
outsl
mov
dec
movsb
adcb
stos
dec
or
enter
sub
and
cmpb
dec
outsb
adc
movsb
fsubl
std
hlt
fidivs
inc
mov
add
inc
aaa
xchg
sub
add
ja
mov
mov
push
movsb
shrb
out
stos
imul
jge
pop
mov
mov
lds
popa
iret
jecxz
test
sahf
pop
pop
aam
push
mov
scas
dec
and
or
std
mov
andl
pop
mov
nop
sti
call
cld
sub
rcrl
cmpsb
jo
imul
iret
jecxz
sahf
mov
imul
mov
mov
stos
orb
mov
pushf
xlat
ds
fwait
cmpsl
xchg
dec
out
nop
mov
lret
jb
inc
push
addl
pushf
jne
and
mov
outsl
call
rcrl
idivb
mov
pop
sahf
adc
fistpll
addr16
mov
dec
dec
lret
jo
push
shr
ret
in
jns
cmp
mov
out
sahf
or
mov
std
sbbb
aad
push
sahf
dec
jmp
lock
xchg
sbb
out
out
fildll
xor
cmp
sahf
cmp
shlb
or
sahf
sti
shl
adc
mov
or
dec
lea
out
mov
xchg
icebp
jle
loope
std
mov
fst
aam
and
push
sahf
icebp
stos
je
ret
or
lahf
add
pop
and
mov
jae
stos
dec
dec
jo
adcl
cmpl
xlat
xor
pop
add
int3
or
andb
jmp
and
pop
inc
aam
push
repnz
lods
fistps
sahf
jecxz
mov
xchg
adc
sahf
pop
lds
rcr
jmp
and
icebp
lahf
pusha
xor
ret
sahf
test
dec
cmpsb
jmp
iret
and
sbbl
aam
xor
sub
shrb
sahf
scas
push
movsl
das
test
jns
outsl
dec
jo
test
lahf
and
mov
stos
sbb
adc
mov
add
rcrb
mov
aad
repz
xchg
push
mov
and
lahf
and
das
sahf
push
jae
adc
testb
mov
stos
add
pusha
cmp
outsb
pop
nop
push
or
inc
andb
inc
fnstenv
in
enter
pushf
push
ss
mov
mov
mov
push
inc
add
ficompl
sub
ss
stos
sar
aaa
stos
les
pop
repz
ret
and
in
shrb
icebp
iret
mov
sub
jbe
inc
cwtl
cmp
xor
jg
aam
and
xchg
loopew
cmp
imull
sahf
dec
jae
inc
stos
add
int
cmc
dec
sub
sbb
push
dec
ror
add
cli
movsb
ja
add
and
and
out
jbe
shll
xchg
cmp
pop
setle
es
or
out
add
aad
sahf
aam
pop
bound
or
mov
ljmp
sahf
xor
lods
pop
popa
sahf
add
cmp
or
aad
jp
add
jecxz
stos
and
cmp
sahf
lods
adc
xor
sahf
lds
lret
push
and
loop
rclb
sahf
out
sti
add
sub
hlt
sub
lret
adc
outsb
out
sahf
cwtl
mov
ljmp
int3
mov
mov
shlb
sahf
push
daa
jp
lret
in
stc
sahf
xor
jmp
bound
nop
lret
inc
ljmp
cmp
je
pusha
push
jecxz
pop
inc
mov
cs
loop
aas
test
test
cs
mov
and
and
mov
lock
outsl
cmp
pusha
xor
sbb
rcr
mov
mov
xlat
mov
call
inc
mov
adc
nop
mov
arpl
incb
jae
mov
pop
ja
sahf
mov
cmp
shlb
mov
cwtl
lds
pop
shrl
sahf
jmp
repz
out
add
sti
ret
loop
andl
push
jns
outsb
shrb
sahf
das
xor
movsl
sahf
sub
fldenv
add
insl
push
jne
push
in
leave
orl
ja
push
sub
mov
mov
push
dec
add
fisubl
cld
or
jp
sahf
adc
lret
sbb
out
fdivl
sub
orl
ret
loope
js
jmp
insb
lcall
in
lahf
loop
dec
pop
xor
ret
mov
and
dec
fs
cmp
sbb
xorl
sub
mov
mov
pop
int
leave
loopne
sahf
pusha
int3
aam
xchg
xchg
sahf
cwtl
call
jb
nop
or
fs
fdivrs
add
xchg
popf
movsb
sahf
cmp
sahf
cwtl
es
out
repz
cli
jmp
sahf
pusha
iret
and
mov
ficoml
add
gs
jmp
or
cmc
sbbl
or
sub
neg
push
jmp
mov
pusha
add
leave
sahf
int
fdivrp
outsl
sahf
sarl
jmp
lcall
and
inc
leave
ds
into
xchg
cs
cmp
daa
and
leave
xchg
insb
dec
fs
test
outsl
mov
pushf
fsubs
nop
cmc
mov
popf
push
fbld
or
popa
test
mov
cmc
lock
aas
xor
jmp
jmp
push
mov
gs
fisttpl
mov
in
jb
mov
push
test
adc
loop
in
pop
sub
sub
push
xchg
xchg
xor
fisubrs
gs
add
add
pushf
ljmp
inc
mov
push
xor
arpl
andl
push
popf
outsb
or
mov
fmulp
pop
jb
mov
test
sysret
sahf
and
insl
call
mov
sahf
adc
stos
iret
repz
inc
lods
sahf
and
in
adc
iret
out
in
add
jo
and
pop
fcompl
cmc
sub
leave
in
pushf
and
clc
pop
mov
or
lahf
cmp
push
icebp
mov
mov
mov
sahf
mov
outsl
das
jne
stos
sahf
sub
push
mov
push
add
pushf
mov
xor
orl
dec
hlt
popa
sahf
mov
int
fisubs
leave
inc
sahf
pop
xchg
aad
lahf
jno
mov
int3
cmpsb
xchg
shrl
dec
es
sarb
in
imul
inc
fisubl
lea
or
sahf
jecxz
inc
jb
in
pop
mov
sahf
stc
inc
xor
cmp
arpl
in
cmpsb
sub
or
test
in
push
xor
sahf
adc
adc
sahf
and
cmp
test
and
lock
sahf
aam
add
sahf
and
pop
push
xor
cmp
loop
pop
repz
std
fsubs
sub
shr
add
adc
cmpl
sub
flds
sahf
sub
push
pusha
repz
jg
movsb
out
mov
xchg
inc
in
xchg
cmp
data16
mov
scas
push
int
sbb
fsubl
sahf
ficoms
repz
shr
sahf
outsb
mov
loopne
inc
out
in
jmp
sahf
mov
sbb
dec
movsb
jg
xchg
stos
outsl
pop
bswap
pop
addr16
cmpsb
popf
sbb
pop
cmp
pop
xchg
sub
and
and
aaa
stos
movsl
out
mov
movsb
nop
je
push
ja
mov
sahf
inc
mov
jecxz
sahf
and
xor
push
push
dec
clc
ret
inc
lods
repnz
cmp
cmpsl
sub
aam
xchg
mov
push
test
inc
sahf
ror
lds
loope
sahf
insl
mov
faddl
or
js
scas
ds
add
pop
mov
sbb
test
or
sahf
mov
mov
sahf
stos
or
cltd
enter
les
aas
movsl
xor
aas
imul
sahf
or
mov
and
dec
rcrl
push
sahf
in
and
test
sahf
cmc
sbb
push
dec
loopne
xchg
add
andl
sahf
addb
mov
sub
mov
xchg
push
aas
xchg
and
jns
mov
stos
sbb
mov
add
std
mov
int3
jmp
pop
pusha
adc
add
lods
cmp
pushf
cwtl
jg
out
sbb
pushf
arpl
daa
outsb
scas
sahf
inc
xchg
or
pop
fwait
sbb
pusha
jb
aad
pop
cmp
lret
maskmovq
notl
mov
cwtl
sti
imul
repnz
push
cltd
lods
imul
fistps
ret
ficoml
negl
out
adc
mov
xchg
mov
scas
or
das
lcall
fisttps
inc
fcomps
and
popa
sahf
into
push
pop
in
out
and
sbb
iret
adc
mov
ret
fwait
inc
and
ja
sahf
mulb
movsb
pop
mov
sahf
out
pusha
enter
xor
rcrl
or
and
xchg
sub
mov
es
test
jnp
xchg
out
inc
add
jmp
sbb
sahf
push
daa
add
cmc
data16
clc
push
push
mov
out
or
adc
inc
add
adc
test
addl
insl
adc
adcb
push
adc
mov
jne
pop
cltd
arpl
and
sahf
clc
repnz
int3
inc
out
adc
sub
loope
rclb
insl
cmpsb
fnstenv
dec
adc
add
jmp
sub
sti
out
pop
pushf
pushf
inc
cmc
std
movsl
repnz
pop
cmp
jnp
stos
sbb
fnstsw
fstpl
sahf
add
repnz
and
out
rcl
stos
clc
rorb
lahf
lret
adc
xchg
sahf
lds
jecxz
jg
and
imul
jg
lock
mov
mov
fstps
stos
loop
imul
je
popa
insl
dec
jg
mov
cld
xchg
pop
jno
inc
loopne
int
sbbb
insl
sub
shrl
xchg
pushf
je
idivl
dec
xchg
mov
leave
mov
xorb
pusha
pop
dec
shlb
mov
add
sahf
repz
mov
stc
sahf
and
jo
pop
xchg
sbb
in
xor
sahf
icebp
repnz
ds
aam
and
lcall
cmp
mov
test
cmp
leave
bound
add
jbe
xor
sahf
xor
sub
lds
mov
imul
inc
repz
xchg
bound
and
stos
sub
sahf
xlat
jmp
outsl
negl
out
rclb
pop
jmp
inc
roll
pop
ret
orl
sub
or
sub
add
cmp
push
sub
push
bound
lods
push
jecxz
hlt
lcall
push
bound
addl
fisubs
inc
pop
rcrb
sahf
adc
sub
stos
jp
jo
xor
pop
mov
sahf
aad
and
lret
icebp
or
in
ret
loopne
gs
data16
out
and
dec
fcoms
sub
ret
push
loope
sahf
or
inc
sahf
out
add
jp
test
fsubrl
mov
movsb
popa
fs
lods
mov
stos
sahf
mov
add
notb
or
jmp
testb
test
popa
insb
pop
and
xor
push
aam
and
scas
das
or
jge
xchg
loop
test
lcall
mov
and
push
or
sahf
pop
and
js
sub
mov
sub
jb
or
bound
mov
or
mov
cmpsb
and
mov
nop
subb
adcb
push
lods
out
sahf
pop
into
mov
ret
sahf
movsl
mov
sbb
push
les
xchg
jae
inc
out
sahf
rorl
and
sbb
out
add
lods
xor
sub
mov
nop
adc
inc
jno
scas
pop
cmpsl
fldenv
gs
pop
sahf
and
mov
in
test
roll
stos
dec
sahf
and
sbb
sbbl
push
fldt
mov
movsl
mov
and
stos
sbb
sahf
rorb
mov
es
or
jmp
stc
mov
lock
push
sbb
jo
bound
mov
loope
icebp
jecxz
orb
movsl
dec
jnp
jg
movsb
push
xchg
test
sahf
cmpsl
std
stos
inc
popa
mov
fcompl
xor
xchg
mov
jmp
mov
int3
stos
and
es
sahf
dec
int
leave
and
bound
mov
push
stos
aam
pop
push
pop
jne
jge
mov
push
shll
xchg
jae
and
rol
sub
popa
sub
lahf
adc
imul
fisubrl
cmc
out
push
sahf
sub
andb
icebp
cmpb
lods
fsubl
lea
scas
les
cmp
stos
pusha
movb
cmpsl
shlb
lret
sub
lcall
cltd
aas
cs
vmovaps
cld
cmp
cmp
pop
or
and
rcrl
xlat
subl
and
mov
mov
icebp
pushf
jmp
arpl
pop
cmp
cs
lahf
rcl
stc
mov
sbb
imul
mov
data16
shlb
pop
mov
xor
sar
sub
nop
stos
cmpsb
xor
imul
orb
lret
inc
xor
jmp
or
sbb
jecxz
pop
cmc
in
sbb
loope
jmp
add
sahf
push
stc
leave
cmpsb
dec
cmp
jmp
test
pusha
pop
sub
mov
sahf
mov
jecxz
mov
lods
adcb
cltd
test
xor
lock
out
cmpsb
repz
dec
lds
sahf
mov
add
and
pushf
fcmovnbe
adc
mov
xor
adcb
sbb
arpl
xor
xchg
add
sarl
push
mov
xor
pushf
int
movsb
insl
shl
leave
sbb
inc
sahf
mov
jne
jmp
mov
cwtl
cmp
outsl
sub
out
push
insb
sahf
cmpl
fsubp
xor
andb
and
mov
imul
and
inc
ds
sbb
xchg
push
fstpl
pushf
jle
movsl
pushf
cbtw
lds
xor
or
push
cmp
xor
cli
jle
es
cwtl
mov
pushf
xor
test
adcb
dec
ret
push
mov
mov
push
popf
inc
rclb
cmp
test
pop
insl
sbb
cmp
pop
xor
inc
xlat
push
imulb
sbb
data16
pop
mov
mov
iret
lcall
jge
into
jle
push
cwtl
sbb
and
pushf
cmp
loop
jl
ds
xchg
fimull
sub
push
fwait
inc
cmc
jo
pop
jbe
stos
sub
mov
or
inc
mov
lea
test
sub
mov
cli
dec
mov
xor
pop
ret
adc
jbe
shlb
test
sti
into
imul
xchg
mov
aam
repnz
pop
pushf
push
into
jne
data16
jp
stos
adc
or
inc
out
mov
add
xchg
out
cmpsl
aad
aam
sbb
mov
clc
xor
add
pop
test
mov
adcl
sub
push
and
adc
or
rorb
sahf
dec
sbb
adc
rcll
jge
pop
add
rclb
aam
xchg
fadd
mov
pop
shlb
cld
subb
mov
mov
adc
pusha
mov
dec
mov
inc
aad
pop
push
rcl
dec
popl
push
dec
nop
or
movsl
jg
mov
inc
add
sbb
xor
jl
dec
sbb
insb
pop
xchg
pusha
add
ret
mov
mov
or
jnp
xorl
cld
subl
inc
mov
sbb
outsb
push
jl
pushf
ret
jae
jbe
cmp
mov
pop
pop
mov
jo
xchg
xchg
mov
dec
and
das
jnp
pop
clc
push
data16
ffreep
fistps
pop
insb
mov
mov
push
push
stos
pop
rorb
arpl
jae
sbb
ficompl
mov
mov
ret
fsubrl
les
cmp
ds
inc
lahf
fmul
aam
pop
icebp
ss
add
push
shrl
popa
es
jp
xor
mov
aam
pop
push
stos
mov
neg
mov
push
and
mov
scas
sub
les
pop
jle
aaa
pop
fsubp
mov
inc
pop
and
add
test
mov
and
int3
or
nop
iret
inc
cmp
inc
xchg
rorb
insb
mov
in
enter
xor
pop
lcall
imul
shll
mov
sub
lcall
in
xchg
mov
scas
adc
cs
fpatan
in
ror
ret
stc
adc
aam
jno
dec
pop
in
xchg
pop
mov
scas
jle
sub
xor
mov
cmp
ds
and
rorb
not
cmp
fsubrs
inc
xor
ss
sbb
inc
aam
push
xchg
mov
push
mov
pop
push
subb
jl
clc
push
mov
cmp
xor
inc
data16
mov
sbb
out
push
movsb
test
xor
and
xor
ds
loop
cmp
fistpll
cmp
inc
test
icebp
lea
cmp
pusha
cmp
icebp
int3
loop
iret
andl
push
int3
cmpsl
jbe
dec
lods
and
jbe
and
add
lds
int3
jg
insb
sub
lret
aam
bound
and
dec
dec
out
cli
pop
jg
hlt
mov
pop
xorl
inc
in
xchg
pop
in
sub
jbe
hlt
in
push
and
sub
nop
and
xchg
inc
leave
push
mov
and
pop
idivb
cs
fwait
pop
dec
into
and
add
sbb
lods
daa
and
add
and
dec
into
and
xchg
xor
pop
mov
and
or
jne
sbb
adc
add
mov
lea
mov
dec
mov
or
in
out
mov
push
ret
adc
dec
popf
jmp
pop
roll
fadd
call
lea
and
aam
push
xchg
hlt
mov
insb
inc
sub
les
int3
popf
mov
aam
lret
xor
and
sbb
pusha
cmp
jo
subl
aam
repz
call
out
inc
mov
jmp
pushf
push
lcall
nop
cwtl
push
pushf
mov
pushf
sbb
push
inc
pop
cltd
cltd
xchg
call
nop
mov
cwtl
mov
cltd
mov
es
jne
mov
out
xor
loope
xchg
push
push
jnp
xchg
mov
sub
push
pop
nop
jecxz
sahf
mov
sbb
pop
sahf
je
cld
sbb
push
cmp
outsb
fidivrl
sahf
sbb
mov
sahf
insb
sbb
clc
xor
push
idivb
adc
dec
mov
sbb
cltd
mov
xchg
sahf
aam
cmp
stc
sarb
mov
stos
mov
mov
mov
or
and
into
inc
mov
or
cli
jl
ljmp
xchg
add
sbbb
daa
mov
mov
jbe
sahf
mov
popf
pop
jge
cli
pop
lcall
lahf
dec
sbb
fwait
ss
lret
fcoms
mov
xor
divb
adc
push
mov
pop
aas
hlt
aam
mov
xor
dec
push
inc
push
aaa
stos
lret
ljmp
lock
icebp
ja
xor
out
into
scas
outsl
sahf
dec
das
pxor
scas
sub
sahf
in
int3
lods
lea
sub
lods
dec
sub
ljmp
sub
jmp
and
popa
jg
and
icebp
jle
jecxz
in
in
xchg
push
subb
xor
mov
fldcw
enter
xor
sahf
shll
pop
mov
push
data16
mov
dec
mov
mov
aad
test
lahf
mov
cmpb
mov
stos
cmp
sahf
aad
fldenv
sahf
sub
add
call
lret
sub
sahf
mov
sub
fs
mov
jnp
hlt
lods
ss
inc
adc
sbb
ret
adc
aaa
cmpsl
imul
imulb
or
sahf
mov
stos
test
sahf
aad
repnz
inc
aas
test
sbb
and
xchg
jb
mov
add
sahf
push
gs
adc
or
enter
jecxz
adc
ds
rorb
mov
adc
dec
outsl
repz
test
dec
and
negb
call
sub
adc
push
inc
pop
loop
sahf
setae
jg
inc
iret
sahf
incl
je
and
mov
jo
inc
stos
jmp
dec
pushf
lds
inc
push
loop
cmpsb
arpl
std
jge
mov
aas
clc
fs
test
sarb
hlt
cld
mov
sahf
xor
std
xlat
sbb
sahf
dec
sbb
and
les
ds
xor
lods
divl
xor
pop
loop
lahf
sahf
sbb
pop
test
pop
clc
push
and
mov
test
call
xor
mov
mov
sub
jnp
pop
jno
fcompl
popa
mov
pop
sahf
call
fldl
sahf
cltd
mov
mov
sahf
icebp
push
mov
xor
outsb
inc
mov
nop
and
xchg
sub
jle
cmc
out
xchg
call
dec
jb
and
cmpsl
sub
or
test
mov
sahf
push
cmpsl
add
loopne
pop
pop
sahf
int
call
push
sahf
lret
and
hlt
xor
jmp
xlat
negb
imul
push
sbb
inc
dec
xor
divl
push
insb
push
stos
popa
int3
sahf
movsl
adc
inc
insl
push
or
cmp
cli
mov
andl
mov
jnp
cwtl
or
andl
inc
iret
lret
inc
cmp
cmp
mov
jae
push
inc
push
mov
sbb
mov
roll
in
mov
push
pop
mov
das
mov
sbbb
lahf
lahf
rorb
mov
mov
ret
mov
std
sahf
pop
dec
pop
sbb
sahf
inc
test
inc
xlat
adc
nop
ja
lcall
mov
enter
pminsw
mov
andl
call
in
bound
push
insl
fs
or
mov
inc
push
mov
cmp
mov
popa
pop
aas
jae
push
popf
pushf
data16
inc
ror
out
or
cmp
cmc
nop
sahf
pop
xchg
cmpsl
sub
jne
sahf
daa
stos
or
aam
loop,pt
pop
push
pop
frstor
pop
fs
xchg
jmp
xchg
inc
sahf
add
push
out
jmp
sahf
xor
cmp
sahf
cmpsb
add
das
push
mov
shl
jge
pop
cwtl
mov
lahf
outsl
loopne
clc
sahf
xchg
loope
ret
xor
jle
pushf
ret
mov
inc
and
mov
mov
xchg
dec
inc
mov
insl
or
add
addr16
add
int
int3
sahf
jge
pop
jnp
dec
push
and
pop
sbb
sbb
sahf
or
hlt
arpl
cmp
nop
pop
jle
pop
push
pop
and
mov
sahf
movsl
adc
subb
int3
xor
adc
es
cmp
in
lea
ljmp
out
jae
sbb
imul
nop
mov
jns
inc
jge
pop
dec
pop
mov
jmp
movsb
mov
stos
imul
adc
scas
sub
les
pop
xchg
jecxz
mov
int
das
sti
shrl
subb
xchg
pop
sbb
mov
sub
jp
sahf
in
add
in
xlat
xchg
addl
jo
xchg
mov
sbb
test
sahf
fcmovnb
movsl
sbb
inc
sub
fisttps
mov
repnz
jg
sbb
inc
cmp
in
cmpb
sahf
addr16
out
sbb
scas
sahf
pop
rcrb
scas
xchg
ja
pushf
and
bound
jno
das
adc
loope
xchg
imul
sahf
xor
dec
mov
lds
dec
movsl
jnp
mov
jmp
xor
enter
notl
into
cwtl
or
scas
les
arpl
and
lcall
fisttps
je
jb
int
inc
loope
pusha
in
testb
mov
xor
pop
inc
adc
out
add
ret
pop
test
dec
cmpsb
sbb
popa
cmp
sar
and
inc
lcall
movsb
loopne
int
pusha
das
stos
lock
mov
mov
bound
adc
cmpsl
inc
push
add
sbb
dec
repz
fwait
addr16
subl
xor
xchg
aaa
cmp
jbe
jnp
or
call
sahf
fs
cmp
ss
sahf
fnstenv
dec
xchg
xlat
gs
mov
stos
cmpsb
sahf
inc
test
popf
mov
mov
mov
and
cmp
push
lahf
lock
jae
fnstcw
xor
push
daa
inc
mov
fistpl
cld
mov
sahf
mov
jns
call
in
in
imul
xchg
push
cmpsl
sbb
sahf
cwtl
addl
sahf
dec
and
push
pop
insb
pop
push
xchg
test
adc
or
push
ret
cmc
lds
lea
jns
lahf
add
push
rorl
jne
pushf
add
subb
dec
pop
lods
xchg
push
adc
test
cmp
mov
pop
mov
aam
adcl
shlb
call
pmulhw
xchg
into
sarl
ret
sbb
pop
hlt
lds
mov
sbb
cmp
cmp
dec
cltd
sbb
daa
pushf
dec
xchg
pop
mov
ret
movsl
sahf
cmp
test
ja
inc
adc
sbb
jae
data16
jne
repz
fsubl
mov
xorb
ret
xor
sahf
pop
mov
femms
orl
sahf
push
repz
dec
adc
movsl
popa
pushf
adc
stc
xchg
mov
out
in
repz
xorb
cmp
push
outsl
sahf
add
pop
inc
pop
cld
mov
jae
pushf
sbb
dec
nop
fcom
xlat
xchg
aam
jb
fsubrl
mov
fs
mov
bound
adc
mov
dec
sub
cmp
pop
loope
fldt
sahf
dec
popa
insb
cmp
je
mov
push
push
dec
cmp
pop
inc
clc
pop
scas
adc
jmp
push
mov
xor
lea
add
push
gs
mov
nop
sub
jecxz
mov
call
leave
lret
ss
adc
fwait
xchg
stc
cmp
nop
ja
andl
xchg
cmp
jo
shll
insb
dec
and
sti
jg
clc
ret
jge
dec
mov
add
outsb
cmpsb
les
in
mov
add
mov
jnp
ret
mov
nop
xor
jae
push
pop
dec
dec
data16
adc
clc
ror
cmpsb
adc
adc
dec
mov
sahf
push
test
adc
jae
cli
adc
ja
sbbb
mov
inc
mov
shl
das
imul
lret
add
jns
daa
rcrl
jmp
sahf
xor
cmc
cli
les
ret
sahf
cmpsl
sbbl
sahf
shrl
out
sahf
xor
xchg
mov
mov
sahf
inc
jl
cmp
negl
arpl
les
in
out
idiv
adc
ja
incl
ljmp
adc
outsb
fcoml
out
fs
sahf
mov
cmpsl
xlat
add
add
in
imul
out
push
in
clc
mov
cmp
fiadds
jge
push
pop
or
fs
cwtl
test
or
lock
xor
enter
mov
xor
adc
inc
jmp
or
mov
xchg
sahf
push
dec
sarb
or
xchg
add
push
push
testl
push
add
push
je
add
add
cmp
das
cmp
hlt
sahf
lahf
mov
xchg
test
int3
sbb
sbb
js
mov
sahf
sarb
movsb
pushf
jp
in
xor
test
mov
clc
mov
or
call
gs
xchg
mov
pop
mov
mov
sahf
testl
sti
sahf
mov
and
inc
idivb
sbb
xor
mov
loopne
mov
sahf
add
cmp
xchg
push
in
loop
push
pop
push
adc
pushf
dec
sahf
dec
cmc
pop
mov
fdivrs
jbe
cwtl
test
cmp
dec
int
pop
leave
dec
lret
dec
cmpsb
out
sahf
stos
mov
imul
enter
aaa
cmp
out
mov
mov
clc
add
sub
into
xchg
pop
push
sahf
arpl
neg
dec
je
dec
cmpsl
mov
loopne
jecxz
xor
sahf
shlb
mov
jp
sahf
ljmp
aam
mov
adc
xchg
mov
cmpsb
adc
popf
roll
sahf
jmp
mov
add
jecxz
sti
ret
loope
dec
sbb
sahf
in
xorl
mov
sarl
adc
mov
sahf
out
movsl
mov
mov
xchg
push
push
jge
dec
pop
lcall
es
rorl
sahf
jmp
xchg
mov
insl
inc
sarl
xchg
dec
xchg
sarb
sahf
int
sbb
inc
mov
add
mov
jp
mov
or
or
aad
dec
and
sub
mov
or
je
and
jbe
repz
xor
cmp
adc
ja
inc
xchg
add
jmp
or
lahf
mov
gs
mov
add
in
sahf
xchg
scas
jg
cmpb
sahf
xor
mov
cld
or
adc
sbb
jbe
cmp
shr
jno
and
or
jge
pop
lods
aad
inc
push
jmp
dec
sahf
rol
xchg
push
fwait
and
inc
fstps
mov
xor
xchg
fisttps
and
lods
mov
jae
or
add
rolb
mov
nop
hlt
cli
inc
mov
inc
pop
repnz
dec
aaa
push
sahf
adc
sarb
add
push
push
clc
push
sbb
mov
mov
repnz
mov
sub
fsubl
xchg
subl
and
mov
pop
sarb
sahf
jle
lahf
scas
imulb
imul
fisubs
sub
inc
cmp
bound
inc
les
pop
sahf
adc
fwait
dec
enter
add
sbbb
mull
lahf
or
sahf
lret
xor
lock
jo
pushf
inc
shll
imul
jecxz
mov
mov
mov
out
sahf
add
inc
sub
sahf
out
test
lcall
pop
and
push
sahf
sub
lret
int
sbb
pop
xorb
inc
or
adc
ror
pop
mov
cwtl
or
cltd
or
dec
sub
push
cwtl
cmp
cvtpi2ps
lret
pushf
lahf
jmp
ror
xchg
dec
cmpsb
or
dec
lcall
lahf
adc
or
fsubs
push
sahf
inc
scas
dec
mov
testl
jge
mov
sahf
sub
cmp
inc
push
lahf
xor
sub
add
cwtl
push
fisttpll
xchg
movsl
jmp
push
jmp
rcrl
add
adcl
testb
fildll
sub
outsl
aad
ficomps
jmp
jb
mov
cmc
inc
jle
inc
and
mov
imul
sahf
push
into
push
arpl
jl
stc
sahf
aam
adcb
pushf
jae
orb
mov
popa
pop
es
mov
fcmovbe
and
daa
ss
mov
in
dec
mov
mov
add
cld
xchg
xor
dec
pop
inc
xlat
pushf
lahf
loop
lret
inc
mov
mov
push
out
pop
dec
add
mull
cmpsb
pop
stos
subb
negb
push
pop
stc
jl
hlt
stos
lods
fildl
push
mov
mov
sub
stos
sub
sahf
repz
pop
sahf
mov
mov
and
es
scas
jmp
outsl
hlt
sahf
mov
roll
and
and
mov
in
or
adc
sahf
in
arpl
idiv
cld
sbb
aam
ficompl
clc
mov
sahf
mov
mov
dec
sahf
adc
jl
or
pop
add
jmp
pop
mov
lods
aaa
sahf
jge
jbe
add
fstpl
and
ret
test
dec
hlt
test
xchg
pop
pop
negb
scas
outsl
mov
out
out
and
adc
cmpsb
rcrl
mov
pop
out
aaa
mov
add
pop
or
mov
sahf
les
xchg
or
sub
das
out
sahf
ret
xor
in
xchg
nop
dec
movsb
and
mov
mov
push
pop
push
sahf
cld
fmull
icebp
ljmp
hlt
xchg
mov
stc
and
lcall
ss
sahf
cmovb
push
jecxz
test
xor
pushf
mov
mov
push
push
mov
insl
ss
orb
fisttpl
lret
xor
je
cmp
pushl
lahf
ja
call
das
dec
fndisi(8087
jns
movsl
nop
ja
daa
out
mov
sahf
callw
pmulhuw
pop
sahf
stc
cmpb
and
mov
cwtl
mov
add
ljmp
sahf
sub
mov
push
xchg
sahf
and
xor
push
cmpsb
cmp
inc
std
sahf
inc
push
leave
jp
mov
cmpsb
sbb
pop
adc
nop
xor
rol
das
mov
or
xchg
mov
loopne
test
cmp
cs
or
cld
pushf
mov
popf
lea
lods
sahf
mov
inc
pop
add
jne
negb
shlb
or
adc
out
mov
dec
imul
nop
out
lea
pop
loope
setge
cs
mov
sbbb
lcall
dec
push
or
pop
jecxz
outsl
sub
sahf
jne
sub
ret
ja
cwtl
and
sbb
push
andb
shll
test
pop
daa
xchg
mov
xor
jecxz
pop
subl
imul
mov
lods
lret
ds
jmp
mov
jne
pop
aad
int3
dec
iret
flds
cmp
fsubp
outsl
loopne
das
icebp
cmpsl
in
rclb
inc
bound
popf
cmp
adc
addl
aad
lock
xchg
shll
imul
sub
mov
pop
into
iret
movsl
bound
popa
loop
xorl
inc
clc
adc
jbe
pusha
test
push
fbld
repnz
xor
xchg
cmpsl
test
xchg
lods
mov
pushf
dec
mov
adc
push
rcrl
mov
pop
xor
lods
mov
sahf
ds
push
and
jbe
push
cmp
inc
sub
xlat
add
int3
push
mov
add
push
sahf
jbe
nop
jne
jle
mov
jmp
inc
out
xchg
xor
cmp
jg
lock
stc
adc
sahf
jle
jne
cld
clc
mov
sahf
sub
andl
pop
xchg
sbbl
fldt
lds
lcall
test
sbb
ret
fdivs
adc
sbb
mov
popa
mov
add
fadds
push
scas
clc
or
sbb
pushf
push
push
pop
nop
xor
dec
aad
idivl
sahf
stos
and
lods
jp
pusha
sahf
xchg
call
xor
int
sahf
movsb
and
xchg
dec
cwtl
mov
stc
jmp
pop
push
rcrl
frstor
xchg
xor
push
pop
pushf
mov
js
pop
lea
nop
xor
cmp
mov
mov
and
pusha
loopne
sahf
dec
adc
lret
mov
hlt
sahf
dec
jo
sbbl
rorb
test
stc
jg
out
scas
pop
mov
loopne
inc
aas
movsl
sahf
sub
inc
sub
rcrl
out
es
loop
outsl
cs
sahf
cmp
xchg
fstl
mov
aas
int
lock
sahf
shrb
mov
lcall
dec
bound
adc
popf
pushf
xor
jno
sahf
ss
jp
jge
mov
mov
ret
outsl
sub
lahf
mov
cld
jg
inc
scas
sahf
xor
and
mov
sub
bndldx
dec
dec
lcall
into
movb
addb
jb
sub
add
int3
mov
loopne
or
add
and
dec
jle
lahf
sub
movsl
out
mov
pusha
je
xor
shll
repnz
cmp
dec
mov
sahf
adc
jne
stos
lret
xor
popw
mov
ret
or
arpl
in
mov
test
jns
xchg
hlt
nop
mov
daa
pop
aaa
jnp
inc
sahf
add
icebp
stc
sahf
movsb
dec
ret
mov
fadds
sub
mov
jnp
out
mov
aad
bound
testb
pop
push
in
cmpsb
pop
mov
jns
ret
loope
rcrl
mov
sbb
clc
inc
xchg
sahf
cmp
into
mov
sub
js
mov
addb
aad
rol
in
sbbl
pushf
push
inc
pop
push
mov
sti
sahf
shrb
jmp
sahf
jns
mov
jb
lods
mov
loope
ret
and
es
jmp
je
test
or
mov
xchg
mov
into
es
sahf
in
shl
or
or
out
lahf
adc
push
ljmp
stc
pop
and
out
fs
lahf
xchg
and
test
xor
insl
nop
xlat
repnz
xchg
pop
xchg
mov
out
adcb
pushf
lock
mov
sahf
stos
xchg
jle
add
dec
nop
insb
ja
aaa
lahf
push
push
pusha
pop
mov
outsb
shll
out
rcrl
pusha
es
mov
sub
daa
bound
lret
ja
pop
clc
pop
bound
jne
lods
stos
cmpb
adc
pushf
imul
mov
add
sbb
loop
es
cwtl
sub
pop
int
xchg
push
loope
and
cltd
lret
pop
imul
lcall
ucomiss
rcrl
add
mov
xchg
adcl
sahf
mov
sub
sahf
xor
or
fsubrs
insb
dec
mov
ljmp
mov
push
out
sahf
cmp
or
xor
mov
popf
in
out
pushf
in
pop
int3
xlat
jecxz
pop
dec
adc
sahf
enter
fnsave
and
jo
cmc
lcall
mov
out
dec
inc
inc
sbb
push
jb
sbbb
jmp
mov
mov
push
sub
inc
pop
das
icebp
jecxz
pusha
stc
xchg
test
popl
dec
shlb
dec
dec
sbbb
mov
jno
sbb
mov
sub
in
cmc
jp
clc
sahf
pushf
mov
jecxz
out
add
sahf
ficompl
stc
mov
cmp
orb
jb
rcrl
jmp
adc
sbb
out
push
fisubs
xchg
testl
adc
ljmp
and
in
and
sahf
push
sbb
fneni(8087
adc
nop
cmc
int
fnstcw
cmp
arpl
outsb
sbb
adc
std
sahf
jg
lret
xchg
sub
sahf
lds
add
cmp
xor
mov
scas
xchg
sbbl
call
cld
dec
aas
pop
sahf
mov
in
pop
sbbl
mov
outsl
jecxz
repnz
sahf
adc
sahf
lods
shrb
flds
mov
sub
xor
sahf
pusha
test
in
sahf
xchg
or
adc
cmpsb
and
mov
xor
xchg
jecxz
fcom
push
sbb
mov
movsl
dec
or
lret
lock
sbb
push
jo
jg
and
addb
mov
push
into
xor
cmpsb
jne
cs
test
nop
icebp
loop
xor
mov
scas
stc
mov
loopne
and
mov
cli
lret
sbbb
sahf
hlt
lret
jle
lods
xchg
pusha
mov
insl
pop
rcll
push
mov
sub
pop
out
or
add
xorl
push
fistpll
push
add
outsl
fidivrs
hlt
ret
fdivrs
sahf
jns
bnd
jae
and
mov
shll
cmp
sahf
push
in
pop
pop
stc
adc
lock
fstl
cmp
lahf
pop
jg,pn
out
sahf
mov
or
pushf
sarb
out
out
jmp
sahf
pop
and
add
mov
push
fsubr
sarl
sub
ret
ret
push
in
sahf
test
adc
bound
outsl
out
pop
jecxz
in
lcall
fisttps
js
xchg
jmp
cld
add
push
push
push
jnp
add
sahf
pop
jo
pop
orb
adc
imul
ret
xlat
clc
sahf
test
cmp
dec
pop
scas
push
lea
and
test
data16
cmp
push
add
pushf
jae
mov
jo
pop
testl
mov
pop
imul
mov
les
jmp
or
lret
call
xorb
add
int3
cli
sahf
inc
arpl
mov
and
sahf
xchg
jne
out
dec
pop
test
sahf
adc
test
stos
pusha
jecxz
pop
repnz
ss
sahf
aad
enter
jnp
sahf
xchg
jae
stc
stos
fwait
pushf
sub
addr16
cmp
in
mov
jnp
mov
or
jge
dec
sahf
or
std
xchg
xchg
xchg
adc
adc
je
push
mov
inc
das
mov
imul
push
int
cmp
hlt
fidivs
pop
scas
sbb
inc
fwait
cmp
insl
adc
push
or
sbb
fdivl
cmp
push
out
cli
dec
scas
sahf
push
pop
xor
jl
sbb
dec
jg
repnz
sahf
fstpt
sub
inc
xor
jo
dec
push
cwtl
sbb
xor
ds
lahf
cmp
xor
nop
cmpsb
dec
and
mov
fidivl
bound
in
fnstcw
jae
xchg
arpl
in
test
sbb
sbb
mov
dec
or
ss
add
push
push
out
scas
push
sahf
ficomps
mov
repnz
push
sub
dec
adc
xor
jmp
fwait
push
jnp
hlt
cwtl
das
sub
ss
push
sahf
pop
lock
xor
sahf
add
ljmp
lds
jb
out
call
or
sub
punpcklwd
pushf
mov
sbb
lods
stos
iret
das
or
pop
sahf
int3
lret
nop
gs
sarl
mov
pushf
or
pop
push
mov
fisttpl
loopne
lahf
cld
sub
stos
cs
push
mull
or
inc
jno
adc
xchg
and
sahf
cmc
sub
repz
push
fs
ljmp
push
pop
jae
sahf
xor
es
lret
and
mov
push
dec
sbb
int3
movsl
xchg
sahf
adcl
cli
mov
test
insb
push
pop
jg
sahf
push
int3
inc
sub
xchg
sub
fistps
cmpsl
adc
mov
sahf
movsb
loop
int
mov
sahf
shll
jecxz
push
jo
pushf
mov
xchg
stc
or
push
dec
pop
mov
cmc
lods
push
add
das
xor
push
xorb
fdivrs
and
enter
jbe
mov
dec
or
jmp
movsl
mov
sub
stos
movl
lahf
cmc
push
cmp
aam
jne
cmp
sub
sahf
adc
or
lock
sub
rcrl
fucom
mov
sahf
add
and
sahf
dec
je
popf
gs
xor
scas
outsl
mov
pushf
and
call
mov
test
sub
ja
push
je
mov
out
lahf
pop
ret
push
sahf
inc
imul
sahf
push
cmp
push
sahf
sti
std
inc
dec
iret
pop
sahf
pop
inc
dec
pop
repz
push
bound
sub
mov
std
mov
sahf
jno
add
fs
rcrb
lahf
xor
lret
ficompl
xor
cmovbe
ljmp
pop
sahf
daa
cli
xchg
jge
dec
pop
mov
push
dec
xor
outsl
push
addb
inc
jae
pop
pop
pop
add
adc
add
sahf
scas
sub
cmp
and
mov
push
movsl
je
es
sahf
push
les
mov
out
lahf
aam
test
cwtl
inc
xor
idivl
dec
dec
sahf
stos
xrelease
jae
and
mov
subb
lock
ret
movsb
arpl
mov
mov
pminsw
fstpl
bound
lcall
mov
pop
cmp
push
sbb
jp
sahf
sahf
add
mov
jg
add
fstpt
jae
cmp
das
mov
cmpsb
cmpsl
nop
push
sbb
mov
mov
sub
mov
lcall
pop
mov
scas
stos
cwtl
into
push
roll
cs
jmp
inc
pop
inc
adc
cmc
add
or
out
pop
inc
or
push
push
xchg
mov
mov
mov
sahf
sbb
cmc
sahf
imulb
lret
insb
js
or
and
popf
cs
dec
sahf
enter
mov
sahf
decl
sub
adc
test
cmp
mov
rcr
ret
es
imul
sahf
add
orl
sahf
scas
movsb
in
ja
addr16
inc
xor
sahf
filds
mov
scas
adc
rclb
divl
push
adc
ds
sahf
lds
adc
sahf
cwtl
pusha
out
popa
push
jmp
icebp
add
fdivrp
in
inc
or
mov
ljmp
rcrl
jmp
cmp
das
xchg
sahf
imul
or
sahf
jnp
push
pusha
nop
mov
subb
clc
fmul
dec
dec
xlat
mov
notb
fisttps
fs
adc
mov
pxor
sahf
in
inc
inc
mov
jl
popf
shrl
and
movsb
sub
std
or
xor
xchg
xchg
int3
adc
outsl
lahf
pushf
test
std
dec
push
mov
mov
dec
int
push
icebp
loope
call
sub
lods
repnz
pop
xchg
mov
jae
nop
imul
out
adc
push
lds
sbb
fs
or
fisubrs
sahf
call
sti
add
decl
movsl
mov
mov
sahf
jmp
inc
push
cmp
or
cwtl
jns
push
sub
icebp
push
jo
pusha
mov
dec
mov
das
add
xchg
iret
cmpsl
push
ds
pop
inc
jo
cwtl
mov
fistpll
mov
stos
fcomps
push
lret
mov
jmp
push
xor
sbb
aam
imul
mov
aas
jo
inc
push
jb
push
stos
adc
sahf
icebp
lret
movsl
leave
mov
cwtl
dec
movsb
add
and
std
push
ret
mov
sahf
push
jae
or
call
hlt
stos
jns
rcrl
ss
stos
sahf
adc
lcall
lahf
movd
and
sub
movsl
push
aaa
jne
stos
sahf
inc
push
jbe
inc
lock
pop
sahf
xor
jecxz
in
sub
mov
and
shlb
sti
fucomi
pop
jl
sahf
das
adc
mov
sahf
push
inc
in
cmp
out
sahf
mov
pop
mov
fbld
and
pushf
clc
pop
sub
lds
inc
fistps
sahf
loope
dec
leave
cmp
sahf
negb
xchg
fstps
in
xor
test
push
xor
xlat
das
addr16
lahf
add
imul
sahf
jmp
mov
sahf
shlb
lods
stos
inc
sub
xor
insl
pop
or
out
outsb
xor
xchg
adc
mov
test
push
js
fbld
jl
fwait
psraw
sahf
mov
sub
insl
mov
fnstcw
mov
mov
sahf
add
inc
mov
outsb
icebp
mov
lcall
sti
mov
cmp
fdivrl
sub
sahf
imul
xchg
xchg
sbb
or
mov
fdiv
sub
testb
cs
lcall
fiadds
adc
imull
aas
sahf
inc
lock
pop
test
inc
aad
pusha
lcall
sbb
sub
fnstenv
sahf
shr
push
into
dec
mov
adc
push
pop
mov
or
or
lahf
mov
lods
es
in
mov
push
dec
jecxz
cwtl
fidivrs
mov
or
pusha
jns
lea
fldt
out
sahf
xor
test
adc
sbb
hlt
es
xorl
sahf
xchg
pinsrw
cmpb
divl
sbbl
dec
inc
mov
je
imulb
aaa
pusha
sbb
sbb
call
sahf
mov
jae
add
test
mov
in
pop
sbb
xchg
dec
sahf
dec
push
daa
sbb
data16
pop
nop
sar
adc
and
xor
sahf
in
jne
mov
inc
mov
sahf
add
fwait
scas
divb
sub
and
or
sub
xlat
adc
ja
fiaddl
sbb
pop
outsb
inc
test
lahf
add
pop
push
sahf
jmp
movsl
fcmovnb
cs
das
mov
stc
sahf
imul
aam
sahf
ja
and
jne
pop
fwait
sahf
adc
repz
adc
ret
pusha
jmp
jns
imul
mov
sahf
mov
jg
cwtl
cmp
bts
sahf
inc
pop
movsl
sbb
jnp
sahf
or
cwtl
stos
test
rorl
inc
lods
mov
sub
fdivrp
jb
sahf
repz
pop
mov
fs
nop
sahf
push
in
outsb
pop
cld
jecxz
add
mov
rcrb
ret
pop
subl
inc
sahf
adc
or
jne
xorb
jnp
jo
js
mov
loop
sub
jp
mov
xor
mov
or
sahf
out
xor
lods
loopne
pop
xchg
sahf
jbe
jl
and
mov
inc
sahf
add
shll
lods
cltd
cwtl
sahf
xor
push
add
sahf
outsb
ss
xchg
cmp
pop
nop
leave
mov
sti
ret
out
adc
popl
add
in
shll
or
idiv
fbld
hlt
js
sub
ret
add
jo
xor
ror
sahf
mov
cld
mov
rcll
dec
cltd
mov
aas
push
in
sahf
jne
insl
jecxz
mov
addb
out
movsl
and
sbbl
cmp
add
and
mov
mov
pop
mov
mov
sti
sahf
add
xacquire
stos
cmpsl
mov
dec
bound
arpl
xorl
pop
iret
int3
or
xchg
fs
jg
outsb
add
shrb
sahf
push
rol
mov
inc
mov
push
mov
jae
movsl
xor
inc
sahf
and
test
dec
inc
rolb
fisubrs
dec
adc
cmpsl
or
icebp
stos
add
sub
movsl
ss
arpl
setle
loopne
add
in
sub
hlt
in
inc
sahf
jg
pushf
or
cwtl
add
mov
lds
mov
push
sbb
sahf
pop
aad
test
pop
mov
pushf
stos
cmpsl
movsb
in
test
or
and
clc
out
test
push
pop
mov
andb
leave
inc
add
sahf
ljmp
jnp
sahf
push
enter
mov
and
rcrl
sahf
je
push
divb
add
mov
push
cmpsb
inc
mov
dec
mov
js
sahf
mov
push
and
mov
sbb
xchg
fildl
popf
neg
insb
push
nop
das
and
sub
call
lds
fisubl
jnp
int3
subb
mov
pop
add
aad
mov
orb
fistl
clc
lock
adc
push
cmp
or
ret
cltd
fsubl
sahf
push
stos
push
jecxz
mov
xchg
jnp
sub
test
sahf
loope
test
lods
sahf
sbb
add
sahf
xor
stc
sbb
test
pop
idivb
sbb
add
xchg
nop
or
xchg
nop
lahf
jg
out
ljmp
xchg
adc
sahf
mov
out
fcompl
sbb
add
inc
adc
dec
xor
mov
outsb
mov
and
xchg
mov
rcrb
sub
cmp
and
inc
hlt
pop
les
cltd
mov
gs
and
rcrl
sahf
mov
add
dec
mov
pop
sbb
mull
pop
xchg
sub
lahf
jno
rolb
adc
testl
ret
cmpb
inc
sub
jb
cmp
add
jae
mov
hlt
mov
fsts
cmpsl
and
loop
shlb
mov
scas
mov
xchg
mov
in
xor
sbb
inc
or
es
out
mov
and
jnp
mov
pop
pop
xor
dec
xor
push
push
sahf
test
push
int3
movl
std
mov
les
test
cs
inc
into
adc
cwtl
mov
shl
ret
mov
sahf
daa
or
imul
adc
lahf
leave
sbb
ds
and
in
add
sbb
inc
inc
sahf
inc
test
mov
dec
dec
pop
and
sbbb
std
xchg
xchg
sahf
andl
jne
sub
lret
cmp
cmp
stc
cmp
cwtl
mov
mov
hlt
sahf
daa
int
divl
fidivrl
adc
cld
dec
push
icebp
sub
stos
xchg
sahf
push
xchg
mov
sahf
push
xchg
lret
push
dec
je
imul
div
pop
xchg
fs
fs
and
lcall
les
sahf
sbb
loope
outsl
fwait
mov
mov
fisttps
dec
les
xchg
sahf
mov
dec
sub
outsb
lods
push
or
pop
ja
aas
xlat
dec
fistpl
xchg
push
sahf
jge
adc
sahf
loop
cmp
arpl
mov
repnz
push
xchg
leave
faddl
cmc
fs
push
pop
push
cld
xlat
sub
and
push
movsb
sahf
adc
test
loopne
mov
bnd
xchg
mov
andl
out
pop
and
in
insb
addr16
jecxz
les
aam
out
call
out
stos
push
sahf
repnz
test
enter
xchg
cmpsb
ja
insb
ljmp
lods
daa
sahf
and
in
push
fdiv
sbbl
sahf
mov
shll
push
inc
pusha
mov
sbb
ljmp
stos
sahf
mov
adc
icebp
subl
movsl
leave
dec
test
icebp
imul
cwtl
imul
mov
pop
pop
daa
adc
push
inc
inc
lods
nop
add
hlt
jge
adc
dec
out
in
js
clc
rcll
sahf
jmp
and
sub
sub
push
mov
fldcw
int
test
mov
sub
cld
push
xchg
repnz
int3
pop
xorb
sahf
sbbl
in
push
mull
push
or
outsb
sahf
jno
test
arpl
in
dec
int
negb
fnstcw
add
in
out
adc
sub
and
xchg
cmpsb
xchg
out
addb
sahf
or
ljmp
movsl
sub
add
fbld
jl
dec
and
adc
mov
jo
int
out
sahf
inc
and
fdivrl
orb
mov
in
sbb
je
mov
cmp
iret
pop
scas
fstpt
sahf
sarb
xor
jnp
sbb
jmp
fbstp
sahf
mov
daa
mov
sahf
data16
sub
and
std
sub
lahf
or
fcoml
cmp
pop
pop
fildl
and
sbb
jg
sahf
roll
inc
das
repnz
jmp
and
sub
lds
xchg
or
fbstp
inc
enter
sahf
pop
adc
adc
xchg
lods
cmp
inc
jecxz
xor
mov
fidivrs
sahf
lcall
sbbl
lcall
pop
fstpt
pusha
fnstenv
xchg
cltd
lahf
sahf
and
hlt
sub
lds
or
inc
xor
cwtl
mov
jbe
jmp
lahf
adc
inc
inc
jns
or
xchg
pop
fbstp
push
xchg
fadd
mov
xorl
out
ret
inc
inc
push
pop
xor
loop
mov
pop
add
mov
add
adc
push
xlat
push
jmp
mov
clc
repz
in
mov
fs
popa
sarb
and
xor
inc
cwtl
adc
rclb
jge
leave
repz
shld
sahf
add
bound
push
pop
xor
call
mov
in
rorl
aad
xor
dec
push
sub
daa
sahf
jbe
imul
sahf
pop
andl
mov
pop
lgs
or
movsb
nop
pop
inc
xchg
xlat
cmp
arpl
pop
mov
inc
pop
mov
test
fisttps
dec
sbb
cld
sahf
sarl
movsl
leave
imul
jg
gs
loope
and
sahf
mov
xor
aas
mov
bnd
jbe
scas
sahf
cmp
pop
xlat
mov
and
jne
cltd
in
cmp
popf
cld
xor
loop
dec
jns
dec
xchg
sbb
sbb
lods
pop
bound
pushf
or
mov
ds
out
cwtl
jmp
insb
scas
mov
mov
loopne
test
inc
sahf
xor
daa
cmp
sahf
hlt
cmp
xchg
sub
sahf
dec
jno
in
outsl
leave
xor
sahf
ljmp
adc
bound
imul
sahf
sbb
test
les
jmp
fistps
insb
pop
adc
xchg
lahf
je
sahf
in
mov
shrb
test
sahf
js
pop
pop
es
cmp
adc
pop
lret
sahf
lods
sti
push
push
pop
cld
and
jne
cmp
loope
ret
sbb
lret
mulb
pop
xchg
cwtl
sahf
pop
push
stc
cmp
cmpsb
sub
je
jp
hlt
xchg
loop
inc
mov
sarb
sahf
outsl
cmpsb
sub
sahf
xchg
xchg
adc
repz
sbb
cltd
adc
mov
cwtl
inc
ds
fwait
sbb
adc
dec
cmp
stc
rclb
push
dec
dec
push
push
sahf
fisubrl
mov
pop
pop
sub
pop
arpl
and
adc
mov
add
xchg
iret
in
sahf
mov
adc
mov
lods
mov
xchg
or
sahf
xor
pop
sahf
clc
or
psllw
jmp
popa
cmp
mov
sahf
aas
test
jns
xchg
inc
push
mov
inc
dec
subl
mov
daa
sahf
xchg
fstps
rcll
xor
inc
jae
nop
pop
ljmp
in
push
std
les
sub
call
or
push
ds
rcrb
lds
sahf
xor
mov
sahf
and
int3
push
sti
xchg
ret
scas
inc
nop
and
out
das
outsb
jle
addr16
sahf
cmp
in
test
xor
sahf
push
repz
xor
insb
sub
out
mov
pushf
inc
fistpl
mov
dec
rcll
add
xlat
xchg
xchg
or
sahf
xlat
lret
pop
call
inc
imul
or
cmpsb
and
ja
mov
lods
icebp
and
dec
nop
mov
stc
jae
pop
mov
mov
sahf
xor
sahf
sub
stos
shlb
sub
jns
inc
shrb
xor
aas
pop
inc
icebp
das
mov
and
dec
jmp
sbb
push
lcall
sbbb
push
mov
sub
ja
out
pop
lods
test
mov
sahf
ljmp
mov
adc
xor
mov
sub
test
dec
push
testb
repnz
jbe
adc
arpl
out
pop
sahf
inc
mov
or
pop
ja
mov
jb
mov
shlb
cmpsl
pusha
pushf
sbb
scas
setb
lret
fsubrs
leave
mov
mov
sbb
andb
call
mov
std
adc
adc
pop
arpl
scas
rclb
add
out
sahf
or
or
aaa
xchg
sahf
jnp
mov
mov
aad
or
das
js
lret
addr16
out
sub
adc
lock
popf
mov
lods
sub
pop
and
xor
sahf
out
imul
mov
lahf
aam
mov
pop
loopne
test
xor
dec
fisttpll
sbbl
loope
and
ret
rcl
pop
push
addr16
imul
leave
incl
out
or
jle
fsts
sahf
jb
in
sub
mov
dec
rcrb
sahf
pop
int3
fnstenv
movsb
sbb
jg
sahf
inc
mov
sub
jae,pn
ds
inc
push
pop
pushf
pop
ja
and
mov
pop
xor
stc
movsl
adc
rorl
sahf
idivb
jl
pusha
jne
pushf
js
xchg
mov
mov
daa
adc
rclb
and
sahf
outsb
stos
test
rcrb
push
jae
stc
xchg
sahf
and
sub
jg
in
pop
lock
push
adcb
stc
pop
popf
sbb
icebp
jno
inc
xor
xor
fsubrp
mov
sahf
pop
scas
cmpsb
pop
sti
mov
adc
jne
cltd
cmp
xor
add
sahf
add
cmp
push
mov
shrl
pushf
test
std
cmp
cmpsb
sbb
pusha
inc
push
mov
sahf
test
lret
dec
repz
gs
fmulp
mov
cmp
sahf
and
nop
scas
in
dec
sarl
insl
lahf
cmp
sbb
sahf
popa
add
gs
sbb
daa
test
pop
jbe
sahf
jge
int
inc
loope
inc
dec
cmp
setle
gs
jecxz
sub
and
sahf
lahf
dec
popa
js
into
mov
sahf
cmp
cld
add
push
jae
mov
jo
jmp
sbbb
aas
stos
rcrb
jecxz
push
arpl
outsb
push
pop
jg
adc
lock
shrl
nop
mov
jg
inc
inc
addr16
imul
repnz
fnstcw
setle
inc
inc
adc
adc
push
cwtl
adc
int3
aas
adc
xchg
sahf
mov
ja
push
sahf
jle
jnp
fisubl
push
lcall
pop
mov
roll
out
outsl
push
cld
sahf
sub
out
aam
inc
xor
push
jbe
inc
jnp
sbb
repz
imul
jp
lret
out
lret
sbb
idivb
das
lds
jl
mov
ret
inc
popa
mov
sahf
add
ficompl
or
add
push
lahf
inc
rolb
push
fistps
or
xorl
mov
sahf
xor
icebp
loopne
and
jle
xchg
adc
lret
inc
push
mov
cwtl
sbb
outsl
sub
sahf
movsl
sub
xor
jb
and
mov
pop
mov
shlb
add
movsb
and
cmp
pop
es
mov
lods
in
cmp
pop
sahf
pop
popa
and
cmp
jmp
je
sbb
mov
lret
jns
add
xchg
and
xor
popa
jle
inc
inc
dec
sahf
ss
outsb
adc
movsb
shlb
cwtl
mov
mov
jmp
dec
ljmp
fcoms
addb
stc
inc
push
xchg
inc
cwtl
icebp
addr16
mov
loop
sahf
add
cmp
out
sub
or
push
lret
sahf
mov
pop
dec
adc
fisubrl
sahf
loope
and
test
mov
les
das
arpl
or
iret
adc
push
xchg
pop
xchg
mov
add
lods
in
scas
pushf
xor
rcll
fisubs
jne
push
ja
fstps
bound
sahf
pop
push
rorb
hlt
and
inc
sahf
pop
cmp
lahf
adc
scas
push
sub
leave
push
movsl
cmp
mov
stc
inc
xchg
insl
lret
out
inc
xchg
add
jns
and
mov
sahf
loop
xor
mov
mov
test
push
rorl
add
push
pop
xorl
xchg
imul
mov
jmp
mov
sahf
jmp
iret
sahf
sbbl
les
mov
pop
int3
insl
hlt
enter
xchg
jb
xlat
dec
inc
fistpll
ss
movsw
movsb
xchg
pop
ja
jg
xchg
repz
sahf
arpl
mov
inc
jmp
mov
inc
dec
nop
xchg
add
sahf
popf
adc
sahf
in
sbb
iret
adc
mov
subl
test
sahf
mov
sub
stc
pop
and
push
push
xor
mov
loop
fsqrt
repz
mov
cwtl
dec
push
adc
adc
ljmp
mov
and
or
jmp
in
outsb
dec
pop
test
ds
adc
pushf
adc
pop
stos
scas
nop
imul
push
ss
sahf
push
jae
test
sahf
add
movsb
push
dec
loopne,pt
paddb
arpl
cmpsb
cli
in
popa
pusha
sub
push
out
mov
decl
add
pushf
push
dec
dec
inc
mov
sub
add
rclb
add
sahf
fldl
scas
mov
jmp
lcall
mov
xor
sahf
addl
lods
mov
jge
cmpsl
or
lahf
mov
repnz
and
xor
pusha
push
aam
movsb
aas
pop
push
mov
and
sahf
stos
jno
push
add
inc
gs
out
dec
dec
cmp
aad
adc
sar
cwtl
pop
cmp
test
or
cltd
push
or
sahf
cmc
lahf
rorb
movsl
faddl
ret
sub
out
mov
mov
sahf
ficoml
xchg
sahf
xchg
insl
push
pop
mov
mov
add
dec
addr16
mov
addl
test
repz
xchg
out
mov
xorl
or
nop
in
add
sub
cs
scas
add
mov
or
cmp
arpl
insl
imul
lahf
lods
sarb
add
scas
test
sbb
sti
xlat
jmp
lahf
ret
sub
jecxz
and
pop
jmp
sub
stos
push
sahf
aam
cmc
daa
cwtl
clc
in
mov
testl
repnz
cmpsl
imul
mov
bound
call
mov
lods
mov
mov
xor
cvttps2pi
sahf
les
jg
push
clc
xor
sahf
mov
stc
movzbl
add
negl
xor
mov
or
mov
sahf
push
data16
pushf
popf
inc
dec
mov
mov
mov
outsl
xor
cwtl
nop
je
dec
ds
sahf
or
mov
sahf
insl
loope
movsl
mov
mov
jl
mov
sahf
test
cmpsl
insl
int3
push
sahf
lret
mov
mov
mov
cli
adc
sahf
adc
mov
mov
shrb
enter
jmp
and
jo
out
xchg
arpl
test
in
add
cmpsb
sbb
call
mov
repz
push
mov
pushf
push
js
scas
pop
outsl
lcall
mov
loope
popa
fsts
sbb
outsb
out
and
add
dec
dec
xor
add
xlat
jmp
sahf
sub
mov
test
lock
prefetch
movsl
out
subl
pushf
mov
movsb
fwait
mov
jp
mov
addb
jbe
fwait
dec
sahf
stc
push
std
lock
jl
aad
nop
push
jecxz
mov
xor
sbb
test
fnstenv
mov
addr16
sub
data16
lock
roll
and
mov
sahf
imul
sub
in
mov
mov
sbb
lret
test
pop
shl
jae
std
adc
sahf
xor
out
icebp
jp
mov
pop
sahf
dec
and
mov
dec
adc
and
stos
rolb
daa
sahf
in
shrb
sahf
dec
mov
cmp
pop
jmp
adcb
cmp
icebp
subb
inc
pop
mov
je
mov
pop
mov
pusha
inc
sahf
aas
mov
or
adc
js
push
xor
rorb
push
arpl
pop
xchg
dec
pmullw
cmp
sahf
dec
int3
pop
inc
lahf
subl
mov
sti
repnz
pop
fisubs
notb
subl
jno
mov
jge
mov
push
adc
idivb
adc
dec
stc
sahf
das
add
rorb
jmp
push
aas
outsl
push
inc
push
pop
adc
jnp
push
imul
and
fwait
mov
adc
sahf
cli
pop
jb
mov
bound
lcall
fbstp
jmp
lahf
data16
pushf
lret
sahf
mov
enter
leave
sub
hlt
testb
jg
cld
leave
sbbl
mov
mov
and
sahf
jmp
aam
add
sarb
das
adcl
dec
lret
sub
sahf
push
fcomp
mov
sahf
adc
push
mov
outsl
adc
mov
test
jae
cwtl
mov
mov
adc
push
pop
xchg
lcall
mov
ret
dec
mov
cld
push
xchg
adcl
fildll
fldl2e
pushf
neg
dec
mov
or
ret
popf
dec
adc
lods
sbbb
mov
int
ret
push
out
and
arpl
lods
outsb
dec
sahf
mov
inc
jmp
ret
inc
cmpsl
and
in
cwtl
mov
mov
mov
sahf
add
fldenv
sahf
cmp
in
inc
sahf
push
loope
lods
lods
xor
jecxz
push
ret
push
inc
sbb
iret
xchg
scas
sahf
push
stos
lret
dec
jbe
jp
icebp
mov
aam
push
shl
sbb
arpl
ljmp
mov
lea
fimull
int3
fdivl
xchg
ja
pushf
jl
cwtl
stos
cltd
xlat
jo
sahf
pusha
add
test
sub
les
mov
sbb
or
nop
je
mov
and
out
sahf
lds
cld
xor
data16
sahf
loop
lret
movsl
inc
mov
lahf
sahf
fadds
cli
jo
ss
jg
negb
roll
sbb
push
sbb
mov
xor
or
ret
mov
sti
jno
aaa
and
cwtl
scas
out
inc
fs
cli
mov
mov
mov
mov
sahf
jae
subl
aam
sahf
or
pop
fstps
fcmovbe
sahf
cmp
and
xchg
ja
jns
aaa
sahf
lret
mov
psubw
xchg
fisubrl
pop
inc
subl
scas
jne
pushf
roll
sahf
mov
and
sahf
inc
mov
xchg
je
dec
sub
add
push
lods
mov
loope
sahf
test
movsb
pop
mov
inc
jae
adc
fs
cmp
pusha
xchg
lret
out
pop
pop
xlat
dec
iret
dec
cmp
pop
adc
sahf
adc
imull
int
mov
iret
pop
inc
pop
scas
fists
into
subb
xor
jno
test
xor
aad
dec
cmp
js
add
or
dec
push
sbb
in
xor
shlb
ljmp
pop
data16
ret
outsb
fstpt
std
imul
out
ds
pop
sub
popa
adc
sbb
scas
dec
lods
and
mov
or
adc
sahf
cmc
test
js
cmp
add
sbb
push
repz
hlt
clc
jg
or
mov
mov
inc
xor
inc
fmull
pop
xchg
and
sbb
fimull
cmp
adc
and
xor
fstpl
mov
negl
inc
cwtl
repnz
mov
pop
in
insl
mov
cmpsb
push
and
test
je
pop
sahf
xchg
pushf
scas
xlat
icebp
pop
push
mov
jp
xor
sahf
data16
addr16
repnz
rolb
jbe
sahf
jno
push
orl
shrl
pop
into
mov
push
mov
fucomip
lret
mov
mov
xor
and
cwtl
popf
add
ret
mov
pop
mov
mov
xorb
popa
jae
jmp
stc
aad
nop
cmp
sbb
jle
imull
neg
jae
cmc
mov
mov
dec
mov
bound
xor
fidivrs
xchg
aam
push
stos
dec
es
sbb
ss
sub
rcrl
or
sahf
je
fwait
std
xchg
repnz
dec
mov
mov
call
xchg
scas
jmp
fisttpll
fdivrp
cld
sbb
sahf
dec
repnz
shrl
fsubl
mov
loop
mov
jl
jg
adc
fstps
sti
and
sbb
fdivrl
fcomip
and
shlb
test
sub
sahf
mov
scas
jo
aaa
mov
repz
sub
faddp
lea
sahf
stos
pop
dec
push
ret
int
mov
sti
xor
fcoms
inc
mov
loope
lock
jg
int3
jae
test
and
jbe
outsb
push
icebp
lret
xchg
bound
lahf
outsb
push
jmp
sahf
cmpl
push
push
xor
fcompl
bound
xchg
jo
xchg
popa
aas
pusha
scas
mov
add
sahf
or
xchg
icebp
inc
shl
sahf
pop
mov
mov
int
lds
fwait
sub
sbb
arpl
and
shrb
test
mov
ret
dec
js
cld
jo
push
sahf
aam
xchg
xchg
bound
mov
ljmp
mov
aas
xor
and
loop
and
xor
enter
xchg
dec
test
dec
pop
sahf
sbb
popf
in
enter
add
call
push
inc
icebp
dec
lahf
psubusw
mov
cwtl
push
test
andb
mov
adc
sahf
pop
mov
int
pushf
mov
mov
fstpl
adc
dec
ror
dec
sahf
ja
fcomps
push
out
fs
jo
movsb
out
bound
nop
aas
jmp
push
sub
sahf
into
lret
or
and
and
call
inc
popa
sbb
mov
push
sbb
cmpb
push
fdivp
inc
sub
jge
dec
mov
pop
lods
neg
ficomps
push
mov
repz
lock
xor
nop
add
test
ds
or
sub
cmpsl
add
jno
mov
sahf
mov
sbb
or
pop
sahf
into
mov
data16
je
sahf
int
insb
outsb
mov
mov
xor
xor
mov
movsb
dec
sar
push
mov
enter
es
sahf
pop
cmpsb
fnsave
loopne
lret
repz
add
cmp
sahf
inc
adc
sbbl
fs
insb
push
hlt
add
pushf
dec
jo
lret
out
js
pop
cld
xchg
dec
lods
push
or
icebp
pop
jo
je
test
lcall
adc
pop
xor
mov
test
repz
leave
dec
and
aad
sbb
pop
sahf
xor
lret
ret
sub
hlt
out
jne
pop
out
sub
pop
mov
stos
jp
dec
int
mov
shl
test
add
sub
lcall
inc
fadd
cli
sahf
add
jae
popf
ljmp
scas
jne
pushf
inc
push
test
test
sbb
xor
enter
lds
adcl
cwtl
pushf
fcoms
ds
repnz
lahf
fiadds
int3
aad
ret
popf
outsl
lahf
push
and
sub
mov
add
inc
sahf
add
das
cmp
insl
nop
xchg
dec
arpl
lods
push
dec
pop
dec
sarb
push
daa
cmc
je
insb
outsl
or
ficompl
ljmp
fadd
lods
int
pop
mov
cltd
sahf
inc
jae,pt
stos
mov
pusha
pop
imul
outsl
xlat
and
orb
and
sahf
repz
xor
cmc
cwtl
xor
out
das
mov
aam
cltd
mov
xchg
bound
adc
call
je
into
dec
sbb
and
lcall
push
xlat
adc
sahf
clc
cmp
rcll
fistpll
test
cwtl
fs
popa
or
mov
stc
fistpll
into
cs
adc
stos
mov
cmpsb
sahf
sub
pushf
push
fs
testl
sahf
lds
inc
add
out
sahf
adcb
mov
subl
pop
adc
imul
outsb
add
cwtl
or
loop
stc
pop
inc
lea
movsl
xlat
pop
sahf
icebp
pusha
testl
lds
sbbl
fistpl
pop
xlat
mov
les
xchg
push
das
lret
scas
mov
xchg
add
jno
jge
push
pushf
xor
mov
ss
jne
lahf
loope
aaa
xchg
lcall
add
popf
dec
int
adc
fdivrp
lret
sahf
sub
ret
xor
xor
add
jno
cmp
lods
mov
iret
repz
nop
lret
std
xchg
test
xor
leave
pop
push
jge
sahf
push
iret
js
push
or
sahf
loope
mov
cmp
inc
mov
sbb
add
movsb
and
xor
mov
popa
clc
pop
jnp
ljmp
mov
in
call
dec
inc
inc
movsl
adcb
sahf
aas
dec
jb
insl
xlat
pop
jno
testl
andl
xor
inc
adc
sti
push
inc
nop
sub
mov
test
daa
sbb
sahf
cmpsb
in
sub
aam
add
xor
je
pop
mov
lcall
in
mov
sub
inc
rcrb
xor
ret
jnp
dec
das
sub
jmp
or
xor
hlt
mov
pushf
push
pop
repnz
gs
out
pop
xor
sbb
push
add
cs
sub
fnsave
add
cmp
pand
push
lahf
fsubs
stos
xlat
imul
cmpsl
jb
jp
jmp
pushf
push
pop
cmp
popf
or
outsl
sahf
out
sbb
rorb
icebp
xor
adc
pusha
jecxz
push
sahf
movb
popa
lods
xchg
rcl
dec
inc
sbb
enter
nop
push
inc
jb
push
mov
fs
lahf
mov
sahf
mov
jae
cli
sahf
sti
imul
and
out
ret
jmp
mov
jae
les
arpl
dec
add
adc
sub
add
bound
jo
pop
sahf
jne
mov
scas
xor
push
sub
add
addr16
cwtl
ret
dec
xchg
jmp
mov
mov
mov
jg
ja
dec
pop
or
sahf
or
std
cltd
sub
push
negb
lcall
mov
std
pusha
and
pop
xorl
and
inc
cmpsb
jae
or
fldcw
push
les
pop
sub
xlat
sbbl
push
jecxz
sub
shrb
xchg
cmpsl
test
out
sbb
add
and
movsb
repz
inc
das
jl
loop
in
insb
xor
or
push
frstor
cmp
ret
or
xchg
test
jg
add
mov
jae
xlat
sahf
jle
roll
stos
sahf
push
and
orl
and
sahf
mov
jecxz
fstps
mov
enter
rep
xchg
test
mov
ret
mov
and
enter
jne
imul
mov
pop
out
push
sti
fisttpl
imul
int
jmp
mov
mov
pusha
iret
and
xor
or
sub
sahf
inc
call
xor
sahf
mov
dec
mov
mov
mov
sahf
xchg
mov
xor
sub
push
arpl
testl
or
ja
pop
dec
push
nop
fsubrl
out
push
sahf
adc
jl
mov
mov
xchg
lds
sti
inc
dec
pop
or
dec
mov
xchg
jmp
xor
mov
push
sahf
popf
push
cld
push
nop
sti
jp
sahf
loope
imul
adc
sahf
rol
arpl
sahf
das
mov
aad
sahf
cs
jmp
es
sahf
in
les
mov
xor
nop
dec
or
mov
add
inc
xor
lock
dec
adc
movsl
out
data16
ret
mov
sahf
scas
xchg
jl
and
pop
mov
dec
movl
pop
frstor
cmp
lahf
sub
fbld
or
repnz
inc
daa
out
jb
in
gs
out
aas
dec
hlt
mov
xor
mov
sahf
lock
mov
test
add
in
pushf
dec
inc
mov
sahf
mov
pop
pusha
ret
mov
addr16
lods
das
sbb
out
popl
int3
sahf
pop
cmpb
xorb
lret
arpl
clc
xchg
xchg
lahf
test
insb
jnp
orb
idivl
test
sar
jmp
xchg
mov
jbe
out
js
addl
inc
fbld
dec
mov
sbb
mov
dec
dec
mov
stc
mov
ret
inc
add
out
push
in
imul
xchg
push
lcall
push
xchg
das
sbb
pop
pushf
neg
fisttpll
or
pop
les
sarl
pop
xchg
mov
rorb
fstp
lahf
in
test
push
sahf
out
pusha
mov
inc
nop
xor
cmpl
fs
sub
mov
pushf
ret
adc
lret
push
xor
jnp
lahf
jb
push
loop
cwtl
and
outsl
push
sub
sahf
cmc
test
adc
jecxz
std
jbe
fs
mov
bound
sbb
fucomi
sahf
lret
or
push
sahf
jg
or
mov
mov
call
sahf
cwtl
dec
inc
sbb
adc
sti
sahf
and
inc
movsl
jg
mov
daa
push
sahf
aaa
add
inc
jmp
lret
sahf
mov
and
adc
in
loop
lcall
xor
xlat
aaa
stos
fadds
pop
int
inc
fimull
or
xor
filds
mov
mov
sahf
pop
jns
ljmp
inc
scas
das
mov
sar
rorl
inc
icebp
fstpl
aas
pop
shlb
sbb
pop
add
mov
shll
push
adc
xor
or
inc
loope
adc
push
pop
cli
repz
xor
and
mov
lahf
xchg
rolb
pop
lea
in
adc
pop
cwtl
adc
push
mov
movsb
sahf
rcr
add
push
adc
mov
outsl
lods
mov
int3
and
add
cmp
sahf
out
inc
jns
add
stc
pop
mov
in
repz
mov
sub
dec
sahf
enter
hlt
rorl
test
cld
dec
fisttpll
pop
xchg
cmp
les
movsl
jl
sti
outsl
push
jb
mov
lahf
push
nop
out
xchg
cmp
sub
jae
in
mov
pop
into
lock
inc
sub
test
lods
aas
lahf
sub
daa
int3
imul
sahf
idivl
cmp
scas
push
sub
or
jg
pushf
pop
insl
movsb
inc
jmp
sahf
ret
jb
test
lahf
pop
sbb
repnz
adc
sahf
lods
mov
or
lock
les
stc
jae
jg
sahf
push
xor
adc
aad
orb
and
sbb
mov
lret
in
xchg
mov
push
iret
mov
xor
mov
sub
outsl
sahf
movsl
and
loope
sahf
push
mov
cmp
nop
mov
mov
inc
in
and
mov
pop
jp
les
mov
adc
insb
es
xor
and
xchg
rolb
and
nop
add
lcall
mov
add
orl
sub
push
xchg
or
add
push
cmpl
pop
sahf
xchg
mov
mov
adc
pushl
inc
cmp
add
inc
dec
pushf
sub
ret
sarl
and
cmpsb
sub
shl
push
or
fstpt
sahf
jecxz
aad
cmpl
sti
lahf
xor
push
sahf
push
sub
js
adc
sahf
mov
inc
rcll
in
push
sbb
out
cmp
dec
mov
sti
and
inc
insl
nop
popa
cli
stos
mov
add
sahf
add
cmc
cmp
sbb
pop
das
mov
sahf
and
mov
rcrl
jo
sahf
cmpsb
sub
sahf
dec
dec
stos
cmp
orb
fistpl
test
fbstp
push
mov
es
stos
sub
jbe
cwtl
ret
mov
jnp
sub
setle
pop
adc
aaa
aas
test
leave
dec
fstpl
addb
cld
sub
mov
sbb
lcall
fsubs
sahf
out
mov
jp
sahf
dec
add
scas
icebp
pushfw
pop
and
pop
mov
vmread
std
push
sahf
orl
sahf
in
cmp
dec
push
dec
mov
fstps
sub
scas
nop
xchg
add
mov
jmp
mov
mov
sahf
lods
pop
fbld
sahf
jae
push
std
je
or
mov
add
shlb
in
cwtl
mov
lahf
and
icebp
cmp
outsl
inc
rcrl
bndldx
nop
les
lcall
sahf
aas
popa
test
ror
mov
and
fs
test
cltd
repnz
or
cmp
jp
adc
cmpsl
and
jmp
sbbb
iret
mov
push
icebp
mov
movsl
xchg
inc
jge
lahf
sahf
les
inc
dec
test
sahf
jp
jo
push
cld
idivb
outsl
lret
sarl
jmp
ret
repz
sbb
popa
scas
adc
sahf
arpl
xor
add
inc
xchg
xchg
fadd
sbb
sub
pushf
out
sahf
ds
push
and
sbb
fsts
sub
ret
xor
cmp
negb
fsubrl
xor
add
mov
out
and
inc
cli
in
sarb
testb
hlt
sahf
loop
jp
dec
ss
sahf
repz
mov
and
add
cmp
dec
pop
in
arpl
jecxz
iret
pop
sub
jnp
movsl
xlat
xor
rcl
sahf
out
fnstcw
sbb
cmp
popf
sbb
push
out
js
inc
sahf
aad
shll
mov
xor
adc
gs
xlat
sahf
pop
ljmp
sahf
call
sub
rcrl
pop
jecxz
je
icebp
aaa
xor
and
pop
call
ficompl
and
cmp
push
xor
mov
cmpsb
test
and
cli
sbb
fs
cwtl
fcoms
inc
push
sahf
sbb
pushf
xchg
scas
shlb
aas
sbb
push
xchg
lahf
movsl
lods
and
pusha
jns
inc
adc
sahf
and
or
mov
leave
lds
cmpb
and
mov
and
xor
pop
out
sahf
imul
sahf
lcall
out
jmp
stc
cmp
fists
stos
jnp
push
adc
sbb
pop
test
sbb
loope
and
inc
icebp
popf
adc
aaa
mov
rcrb
ret
movsl
pop
movsl
imul
inc
jle
ljmp
nop
stc
mov
mov
add
icebp
lcall
adcl
xchg
loope
mov
inc
stc
in
je
xor
data16
stos
std
pop
mov
push
rdmsr
xchg
orb
xchg
jae
mov
sahf
xor
or
jg
pusha
mov
adc
xchg
sahf
jnp
and
or
jae
mov
incl
leave
outsl
pusha
jg
lea
ds
insb
loop
iret
fiaddl
lahf
adc
addr16
jnp
pop
sahf
adc
into
fildl
fisttps
sahf
xchg
pop
outsb
or
jp
sbbl
sahf
insl
cmc
push
jns
call
imul
mov
lods
fwait
arpl
sahf
adc
lret
test
sub
daa
sbb
aad
out
mov
adc
xor
jg
aaa
lods
data16
mov
mov
stos
sarl
push
xorb
inc
add
dec
sarl
dec
dec
lret
or
xchg
imul
mov
fidivl
or
jns
sbbl
in
push
or
out
inc
mov
imulb
sub
int3
out
pushf
jno
test
mov
sub
sub
mov
sbb
mov
inc
outsl
lcall
xlat
jnp
leave
sahf
je
fs
cwtl
xor
fistpl
out
test
nop
xchg
push
mov
add
adc
sub
mov
mov
adc
push
mov
cwtl
movsl
add
xchg
out
jle
mov
sub
sahf
jmp
xchg
pop
sahf
insl
cmpsl
cmp
pop
sahf
xchg
adc
add
cwtl
cmp
cmp
dec
fisttps
mov
cmpsl
sub
dec
mov
xlat
packsswb
dec
sub
rcrl
adc
rcl
push
aam
xchg
cmp
ret
inc
xchg
pop
sub
loopne
push
mov
outsb
pop
dec
add
push
and
xchg
cwtl
jge
js
aas
xlat
lea
mov
pop
fwait
dec
out
ss
addb
or
test
inc
cmc
sub
pop
popa
jg,pt
jo
sbbb
jno
or
aad
call
sub
repnz
sar
ss
iret
movsb
push
cmp
pop
jne
stc
add
stos
pop
out
dec
jnp
push
pusha
mov
insl
inc
test
int
sub
lcall
cwtl
mov
pop
sub
cmc
sahf
lods
lock
test
sahf
aam
jp
scas
xor
lahf
stc
lods
mov
into
aam
ljmp
jmp
pop
cmp
sbb
ret
les
xchg
add
sti
push
sahf
or
imulb
or
cmp
xchg
imull
sahf
push
push
dec
pop
test
arpl
jmp
mov
imul
mov
int3
sahf
lret
cmp
mov
js
das
mov
cld
sub
nop
mov
pop
sarb
sub
das
push
sahf
test
lret
cmp
sahf
jns
ja
mov
lcall
cmpl
aas
push
xor
fisubrl
dec
in
fiadds
outsl
pop
and
cs
pushf
dec
pop
and
clc
andb
add
ret
mov
adcb
mov
popf
insb
sahf
bound
sti
gs
jecxz
pop
fidivs
jno
mov
add
push
cmp
pushf
imul
mov
enter
jnp
adc
fsubl
aam
xor
cs
clc
lahf
sbb
sbb
std
mov
jbe
scas
sub
lahf
or
bnd
jl
cmp
xchg
arpl
cld
fdivp
or
idivl
dec
xchg
pop
loop
dec
mov
cli
popa
dec
mov
addr16
bnd
gs
out
xchg
sahf
cmpl
in
lods
mull
es
add
sarb
in
sbb
jmp
or
sahf
add
sbb
adc
adc
mov
pushf
ljmp
incl
mulb
sahf
nop
popa
aam
dec
das
ljmp
cld
dec
mov
push
adc
arpl
adc
cmp
jb
nop
sbb
je
inc
jg
int
lahf
mov
roll
mov
in
jo
and
test
je
pusha
stos
rcrb
xchg
lods
push
sahf
xchg
out
cmc
outsb
inc
popa
jnp
sbb
dec
into
mov
add
jbe
clc
push
mov
arpl
jnp
xor
lcall
jno
xor
pushf
dec
leave
fcmovu
xchg
dec
filds
nop
in
mov
lea
cmp
je
iret
dec
push
and
nop
out
xor
lahf
icebp
cmp
aas
mov
sahf
inc
rorb
arpl
jmp
scas
pop
cmc
and
pop
les
mov
sahf
cmp
sbb
adc
les
imul
das
es
and
sub
mov
out
sahf
pop
pop
ss
scas
mov
cmpsb
adc
xor
in
ljmp
insl
xlat
pop
lahf
cmpsl
mov
sahf
in
mov
sbb
movb
call
cmp
cld
loopne
sbb
sahf
push
rorl
mov
xor
ret
sahf
add
lods
in
test
ret
nop
sub
fs
cmc
sahf
shrl
jno
ljmp
insb
pop
push
pop
mov
sahf
cld
adc
mov
push
aam
mov
popf
xchg
fs
push
cwtl
daa
inc
aas
mov
aaa
out
sahf
sbb
or
jo
pop
jne
retw
bound
xchg
xor
fildll
leave
insl
mov
dec
lds
mov
sub
push
push
xorb
jmp
add
pusha
mul
pushf
or
xchg
test
push
push
test
push
loopne
and
mov
fimull
pcmpeqw
mov
pop
test
shrb
imul
scas
sub
sahf
pmulhuw
jbe
dec
sbbb
sbb
movsb
xor
aad
in
stos
test
je
addr16
add
int3
popf
xchg
mov
mov
inc
cwtl
mov
fnstcw
add
lods
sahf
xchg
mov
pop
pop
nop
jae
cmp
je
sahf
inc
push
test
inc
mov
xor
and
shlb
sahf
stos
out
les
movsb
mov
xor
add
adc
sahf
out
shrl
mov
and
cltd
sbb
nop
addl
aam
sub
popa
in
sbbl
sahf
popf
cwtl
jne
xchg
shll
fcmovb
adc
movsl
outsl
mov
bound
arpl
enter
sub
pop
mov
jl
sahf
push
les
scas
mov
data16
test
sahf
popa
inc
add
call
mov
test
mov
inc
sbbb
push
xor
pushf
lds
or
std
rclb
imul
adc
lods
hlt
or
das
inc
fs
fistpll
mov
add
jnp
sahf
lods
dec
aam
xlat
mov
loopne
sahf
sbb
xor
lret
push
cmc
scas
sahf
loope
rorb
adc
sbb
pop
inc
xchg
fwait
sar
je
jo
pop
pop
dec
sub
cli
and
shlb
pop
adc
sar
arpl
stc
push
fs
maxps
push
jae
loope
repnz
push
dec
push
jo
xor
pop
in
sahf
les
mov
je
add
stc
lods
mov
sub
out
mov
adc
into
push
xor
fnstcw
mov
cmp
adc
add
negl
jnp
loopne
data16
adc
cmp
pop
pop
jns
adc
cmpsb
sahf
sbb
mov
fnstsw
push
popf
loopne
sub
push
inc
sahf
push
lahf
rcrl
sahf
daa
dec
xor
xorb
rorb
sahf
cmp
repz
jle
dec
hlt
adc
adc
jb
lret
imul
dec
xor
and
sahf
xor
shll
aas
out
xor
es
mov
lock
pop
sbbl
jnp
and
jecxz
test
sub
movsl
xchg
pop
sub
jmp
xchg
add
test
les
cmp
jbe
mov
clc
inc
cmp
int
lods
pushf
lcall
daa
hlt
jmp
jb,pt
jl
sahf
lcall
popa
cwtl
add
aad
or
mov
mov
lahf
sahf
mov
pop
gs
sahf
aas
jbe
arpl
xor
xchg
inc
adc
lret
adc
js
lcall
dec
loope
xor
sahf
sbb
pop
cmp
adc
clc
int3
fldt
xlat
lret
jp
jle
sbb
cmp
arpl
sahf
mov
dec
xchg
cmp
push
or
popf
adcl
xor
sahf
pop
nop
jnp
jg
push
sahf
mov
xchg
mov
js
lcall
pop
mov
enter
jbe
or
push
pop
push
scas
orb
pushf
jl
pop
pop
jmp
lahf
not
loopne
dec
mov
inc
test
sbb
pusha
movsw
push
fstl
xor
xor
out
pop
lret
sahf
mov
adc
jmp
loop
sahf
mov
cmp
in
cmp
push
nop
adc
inc
sub
jl
inc
cmp
add
sti
xorb
sbb
fildll
sahf
adc
data16
testl
jmp
das
clc
add
add
inc
sahf
testb
es
sub
pop
lret
jnp
sahf
sub
test
les
es
imull
jmp
mov
outsl
lret
sarb
inc
sahf
call
mov
xor
or
jg
sahf
jb
mov
jl
movsb
movsl
icebp
insl
sub
fcoms
aas
cmpsl
push
pop
xchg
mov
adc
lock
mov
jmp
aaa
xor
lret
sbb
sahf
mov
adc
mov
jnp
imull
cmp
xor
inc
lcall
filds
jb
rcrb
clc
movsb
pop
test
mov
lret
aam
out
ret
push
sahf
jmp
mov
out
sahf
push
cmp
dec
jmp
xchg
ja
and
fs
test
inc
sahf
cs
and
outsl
pop
sahf
mov
add
jo
rcrb
mov
lret
lahf
fwait
shrb
ja
mov
sbb
inc
xchg
mov
nop
sub
ret
fsubp
or
dec
adc
sahf
cmp
push
insl
pop
mov
sahf
adc
movsl
mov
push
mov
fcompl
push
sahf
mov
icebp
sahf
or
sub
mov
and
frstor
pop
mov
cmpsb
fwait
sub
mul
cs
cltd
mov
cli
arpl
icebp
mov
sahf
adc
add
sub
sbb
xor
jns
jg
sahf
xchg
es
mov
aas
and
lahf
out
pop
and
jne
jge
pop
xchg
sahf
sti
xchg
pop
outsb
jmp
inc
inc
lds
ds
and
daa
push
bound
in
psubw
mov
push
fbstp
leave
add
mov
test
test
jp
xchg
mov
jp
stos
inc
sahf
mov
stos
sahf
jne
addr16
dec
pop
data16
pusha
mov
mov
sahf
lds
cmp
call
int
adc
notb
or
adc
cmpb
les
icebp
jle
out
xchg
ljmp
sahf
call
ss
sahf
mov
jl
out
out
jecxz
sbbl
cmp
in
adcb
dec
pop
stc
and
cmp
xchg
jbe
pop
leave
outsb
mov
mov
mov
lock
mov
mov
dec
pop
stc
stos
pop
mov
mov
or
xor
popa
clc
xchg
sahf
insb
jne
push
outsb
sbb
data16
push
rcll
jmp
xor
iret
lret
aaa
push
cli
ja
mov
sahf
aaa
or
test
int
xchg
je
sahf
adc
adc
fistl
imul
pop
cmp
dec
sahf
bound
cli
push
stc
movsb
mov
jno
adc
sub
sahf
cmp
push
cmp
and
mov
and
stos
out
inc
pop
mov
sahf
jge
mov
nop
bound
daa
sub
push
in
mov
mov
aas
sahf
add
xchg
mov
sahf
testb
sahf
ret
ja
dec
or
sahf
popa
and
cs
movsl
rcrb
aas
xor
orl
pusha
and
pop
mov
or
ljmp
mov
adc
sub
lahf
jb
mov
pusha
mov
inc
sbb
in
call
ret
cmpl
mov
push
and
dec
add
ret
xor
sbb
imul
pop
xchg
inc
adc
call
cli
adc
sahf
dec
push
push
inc
sbb
cmp
dec
inc
push
fcompl
sahf
test
sbb
jl
call
nop
jecxz,pt
fidivrs
mov
add
ss
push
lahf
jbe
sahf
in
jge
dec
stos
js
sahf
stos
leave
push
and
sub
fwait
jno
lds
loope
inc
cli
sahf
or
mov
push
xor
es
adc
fcompl
mov
sahf
mov
ret
out
jg
xchg
and
aas
xchg
pop
mov
nop
xor
sbb
xchg
scas
lahf
data16
out
hlt
sahf
push
loopne
arpl
into
xchg
sahf
stos
mov
shlb
lret
movntps
xchg
adc
pop
cmpsb
mov
inc
les
mov
arpl
sahf
sub
and
xchg
test
adc
pop
push
daa
sahf
jbe
dec
sub
jmp
gs
mov
mov
push
lahf
aas
es
inc
out
or
sahf
dec
shll
imul
sahf
jmp
hlt
ds
cmp
cwtl
or
mov
fbld
add
fcmovne
ret
push
call
dec
iret
mov
or
ja
jg
sahf
cmp
ret
in
in
sub
stos
movsl
cltd
stc
test
cmpl
inc
inc
in
lret
cmpsl
loop
sahf
mov
dec
jnp
dec
push
rcrb
push
cld
lods
inc
aam
sub
fistpll
mov
or
jbe
iret
jns
xor
push
fdivrs
lahf
les
xchg
in
cs
pushf
and
inc
mov
in
dec
je
fstl
mov
mov
pop
sub
test
and
or
lods
mov
mov
push
scas
cmpsl
mov
out
arpl
fnstcw
and
pop
xchg
aas
loopne
mov
sbb
pop
xchg
mov
fnstenv
sbbb
pop
sahf
inc
cld
test
mov
jecxz
nop
lods
mov
and
lahf
gs
cld
movsl
jae
and
mov
xchg
test
into
adc
sahf
fwait
adc
push
push
dec
jge
mov
dec
xor
fidivrs
pop
mov
sbb
vphsubdq
subl
and
pusha
or
dec
stos
mov
mov
inc
cmc
cmp
lods
loop
sub
movsl
imul
loopne
jmp
fs
lahf
or
cmp
cs
lahf
sbb
push
cwtl
or
outsb
inc
jg
mov
out
fwait
jecxz
sahf
sbb
pop
lods
mov
adc
out
les
xchg
xchg
je
ss
mov
xlat
test
mov
pop
jg
lahf
adc
lret
nop
shlb
nop
xorl
mulb
dec
and
inc
add
lret
adc
lods
or
cmp
mov
push
mov
arpl
ljmp
sub
popl
test
mov
push
js
push
mov
xchg
cs
xchg
not
pop
sarl
sub
mov
inc
push
push
jne
pop
add
andb
mov
and
cmp
inc
loop
sbb
lret
mov
sahf
fnstsw
lahf
cltd
das
cld
sahf
adc
rorb
cmpsb
xor
sahf
pusha
in
jb
inc
bound
mull
ss
hlt
jl
dec
adc
adc
adc
cmp
clc
aad
push
mov
fisubrs
mov
int3
fimuls
jae
pushf
jno
inc
lret
jmp
xchg
push
lods
lock
add
mov
cwtl
int3
xor
es
cli
mov
mov
ret
outsb
adc
out
sub
adc
adc
rolb
push
aaa
sbb
add
cwtl
fdivl
scas
cmpsb
clc
push
mov
in
mov
daa
lahf
sahf
outsl
xor
pop
cwtl
imul
push
lods
out
dec
sub
xchg
push
adc
mov
std
mov
mov
pop
inc
jge
inc
test
and
pop
mov
icebp
lahf
iret
sahf
push
mov
call
sahf
push
mov
stos
cmpb
adc
push
repnz
adcb
pop
sub
or
lahf
and
xor
push
push
pop
mov
cmc
or
ds
mov
je
mov
and
push
dec
and
inc
ret
ret
inc
mov
jp
cmpl
pop
inc
sahf
lret
adc
xchg
pushf
lret
repnz
jnp
sbb
add
test
mov
sbb
popf
out
gs
mov
and
or
xor
bound
and
int
mov
and
mov
sahf
outsb
lret
or
jno
cld
adc
test
rcll
jp
insl
push
int3
int
push
sahf
cmc
push
sbb
lds
sbb
add
push
sahf
jb
mov
sub
pushf
push
ja
pop
testb
daa
popa
and
mov
or
and
popf
loop
mov
xchg
cmpsb
sbbb
pop
clc
inc
pop
adc
cwtl
ret
sbbl
aad
cmp
in
mov
xor
lret
fwait
sahf
lcall
pushf
orps
add
test
push
xchg
repz
jle
xchg
sahf
into
cmc
jae
je
xchg
jle
jbe
and
lcall
xchg
movsl
mov
mov
mov
xor
std
push
lea
sbb
enter
btc
add
jge
stos
mov
push
js
dec
mov
xchg
push
dec
into
fidivrs
xor
cwtl
lea
pop
movsl
lahf
movsb
mov
out
push
xchg
and
ffreep
push
jnp
sub
bnd
fs
xor
loop
jo
fwait
pop
test
pop
bound
jnp
or
negl
jl
sahf
pop
lret
inc
jno
cmp
mov
sahf
sub
and
lock
test
sahf
mov
sub
dec
cmp
cwtl
and
imul
or
mov
xlat
sbb
out
mov
and
nop
fstps
mov
push
movsl
cmovae
dec
jo
sahf
jne
repz
mov
aas
pushf
orl
sti
test
outsl
push
add
sahf
insl
add
int
sahf
inc
stos
mov
and
mov
sub
mov
add
and
outsl
jmp
xor
out
ret
mov
sub
movsb
jmp
sub
jg
out
xchg
data16
fadds
out
inc
fisubrs
loopne
ret
jg
lock
leave
mov
nop
xor
jmp
jae
pop
sahf
sbb
data16
mov
in
std
ss
out
sahf
jmp
or
popf
sahf
cwtl
push
dec
jp
push
lods
mov
pushf
daa
stos
dec
in
loope
out
js
sahf
xor
add
loop
lret
and
xor
adc
aas
sahf
and
adc
ret
jno
push
enter
xor
or
add
lret
dec
cmp
dec
jp
lods
xchg
cmp
pushf
xor
sub
lea
and
jo
push
cmovno
inc
pushf
ljmp
movsb
pop
sahf
nop
mov
xchg
mov
mov
mov
daa
mov
lock
dec
cmp
nop
ljmp
mov
in
stos
mov
mov
insb
xlat
jbe
fisubrl
sub
pop
arpl
imul
cmp
mov
xor
push
andb
inc
std
sub
fs
and
mov
push
stos
dec
ds
pop
sahf
fs
xchg
pop
sbb
xchg
sub
lods
sahf
adc
xlat
xor
dec
fistl
sarb
or
das
jne
lods
sahf
or
mov
mov
sahf
loope
andb
cmp
movb
push
sahf
dec
outsl
test
aaa
jge
setle
xor
mov
mov
adc
mov
add
and
into
push
mov
cmp
or
sahf
mov
or
mov
in
jg
aaa
fmulp
sarb
lcall
xorl
xchg
roll
jmp
dec
out
push
adc
pop
cmc
stos
mov
imul
into
mov
sahf
xchg
cmpsb
jge
insb
cmp
cwtl
mov
and
push
movsl
or
fbstp
ficomps
xchg
pusha
mov
lcall
and
ficoms
sub
nop
in
jecxz
dec
lret
mov
dec
arpl
pop
adcb
fwait
xor
and
sub
push
sahf
dec
sub
mov
inc
add
sbbb
pop
and
add
push
xor
adc
mov
rcrb
inc
fadd
js
out
and
fs
push
scas
jne
int
xchg
movsl
mov
inc
jge
add
dec
lods
js
pusha
pop
subb
pop
fbld
adcl
push
sahf
mov
fcomps
adcb
stos
dec
adc
sahf
xor
mov
pushf
fcmovnbe
leave
int3
pushf
paddq
sbb
cwtl
push
fisubrl
cmp
sub
mov
lahf
dec
cmp
mov
cwtl
jecxz
arpl
pop
shl
fistl
shll
addr16
xchg
cmpsb
and
adcb
sbb
xchg
sub
notb
pop
lcall
xor
sahf
add
jecxz
cmp
mov
rcrb
mov
add
or
sbb
jo
adc
push
pop
sahf
jnp
add
pusha
sti
sahf
arpl
mov
movsb
mov
test
sahf
ret
jl
fisttpll
adcb
shrb
adcl
sbb
lods
outsb
or
loopne
cmp
mov
fbstp
sbb
fisttps
mov
int3
repz
rcl
jnp
dec
fs
cld
sbb
or
lea
cmp
jne
daa
lret
lods
push
jb
pop
cmp
push
or
xchg
addr16
inc
mov
in
repz
mov
nop
add
shll
leave
lahf
and
iret
inc
lcall
sti
mov
rolb
pop
add
adcl
jg
movsl
fiadds
sub
sub
mov
sub
cmpsb
mov
mov
iret
mov
shll
sub
pop
jmp
jnp
stc
lods
mull
out
in
sbbl
or
rcrl
cld
pop
and
xlat
cmp
pushf
mov
jne
sti
sahf
mov
ret
inc
das
xor
or
sahf
xor
or
scas
ret
pushf
ror
hlt
xchg
lea
jmp
pushf
sbb
ret
in
add
adc
xor
add
mov
inc
xchg
jle
sahf
jae
fwait
cs
fisubs
hlt
xchg
sahf
mov
stos
jge
mov
mov
ja
mov
pop
inc
int3
mov
sahf
aam
push
cmp
dec
lret
repnz
sti
inc
negb
mov
and
push
adc
push
dec
mov
stos
sbb
sahf
and
ret
shlb
in
push
int3
sahf
enter
xor
or
and
jno
xchg
mov
sti
std
mov
xchg
scas
scas
dec
sahf
push
hlt
or
push
fwait
sbb
fildll
dec
lahf
sub
loopne
adcl
dec
data16
add
shlb
push
out
ret
ret
mov
dec
mov
mov
or
dec
pop
sahf
cmp
sub
nop
cltd
cmpsb
and
or
clc
nop
jle
int3
loope
pop
aaa
dec
cmp
sahf
push
push
mov
pusha
jp
lods
cmpsb
sahf
jo
or
aad
sahf
movups
ss
sbb
icebp
nop
xorl
xchg
inc
in
testb
and
les
jne
das
iret
sahf
shlb
in
gs
int
pop
push
mov
sahf
sbb
xchg
stos
lds
sti
sbb
outsb
arpl
mov
and
div
cltd
jnp
pop
dec
imul
hlt
lahf
xor
inc
cli
sahf
xchg
jae
bound
pop
in
sahf
push
xchg
out
dec
loop
inc
popf
sahf
cwtl
imul
pop
lahf
mov
mov
push
xor
nop
mov
mov
rclb
sahf
insb
and
adc
sahf
hlt
imulb
mov
jp
xchg
add
pop
call
xchg
add
pushf
or
adc
adc
adc
mov
pop
sahf
mov
movsb
cmp
out
sbb
mov
push
sahf
inc
mov
sub
lret
loope
lock
jl
addb
sbb
cmpsl
mov
push
sti
xlat
push
xor
cli
xchg
sahf
jecxz
inc
sub
xlat
mov
inc
lods
cmp
lahf
cmp
shrb
bound
push
jg
jp
mov
arpl
dec
xor
clc
adc
jmp
into
lahf
pop
pusha
fcoms
pop
pushf
inc
fisttpll
ds
sahf
cmp
ss
mov
cmpsl
cwtl
push
arpl
fisubs
add
rcrl
sahf
movsb
cmc
out
sbb
jge
sbbl
pusha
pop
ds
sahf
mov
add
cmp
sbb
repz
xor
aam
push
push
int3
int
inc
jbe
arpl
mov
pushf
loopne
lret
push
dec
mov
enter
cmp
jle
push
sahf
pop
ja
movsb
adc
sub
sub
lahf
in
jle
ljmp
nop
add
lds
out
pop
mov
lret
dec
mov
dec
sahf
fmul
aad
mov
add
sahf
fcomp
xchg
dec
imul
mov
xor
fs
xchg
add
pop
movsl
xchg
xor
sahf
adc
inc
repz
xlat
jo
fiaddl
sahf
hlt
clc
dec
cmpsb
xchg
mov
jno
js
mov
cltd
pop
and
das
mov
sbb
lret
popf
sub
push
out
rorl
dec
rcrl
mov
sahf
or
and
sahf
sbb
neg
ds
aaa
pusha
shlb
xchg
sahf
sub
sbb
insl
sub
or
mov
popa
lret
xlat
call
xor
push
pop
fistps
ret
mov
ja
cs
mov
mov
jge
sahf
hlt
int
gs
in
and
jmpw
mov
pop
test
lods
xor
pop
pop
test
daa
dec
and
ret
or
lahf
adc
sahf
or
or
inc
ss
fbld
or
repz
inc
mov
lcall
push
mov
mov
mov
lret
add
dec
sbb
dec
push
in
mov
sub
mov
adc
xor
arpl
jg
lcall
sahf
hlt
sti
add
push
pop
insb
sahf
and
les
orl
clc
adc
sahf
faddl
cmc
lea
jo
mov
inc
in
adc
sti
push
outsb
add
sarl
mov
or
adc
push
inc
mov
mov
cmpsl
mov
mov
or
cmpsb
and
push
rorb
mov
sahf
or
mov
sub
jg
ret
test
sahf
xchg
xchg
repz
dec
cmp
and
sahf
cmp
jno
outsl
loop
add
lods
pop
test
mov
test
fcom
sahf
ss
lock
lds
jmp
push
push
ret
xor
adc
imul
hlt
andl
orb
jge
repz
push
sahf
lahf
adc
push
mov
lret
jp
sti
jno
scas
sahf
mov
stc
push
cmp
sahf
hlt
cwtl
cmp
rcll
xchg
mov
or
into
stc
mov
lock
ret
imul
and
and
pop
pop
dec
inc
dec
sahf
pop
adc
pop
xor
stos
lret
sahf
loop
js
enter
filds
sahf
in
sbbb
mov
outsl
mulb
mov
pushl
js
cmp
xchg
add
mov
jo
sub
pushf
and
into
js
je
sahf
mov
adc
clc
xchg
lret
jns
mov
in
dec
aam
push
pop
test
cltd
inc
mov
sahf
pop
and
jne
cmpb
cmp
ljmp
and
dec
int3
sahf
jno
cmp
mov
in
std
pop
sahf
out
and
sahf
or
mov
repz
sbb
lcall
sbb
outsb
sahf
and
stos
xlat
jnp
inc
ret
push
ja
jne
cmp
push
pop
cwtl
sahf
add
cmpsb
push
movsl
in
jns
sbb
add
cmpsl
in
jbe
shrl
mov
push
fistpll
jno
les
out
mov
roll
sub
dec
adc
mull
sti
adc
pop
imul
jle
es
insl
sbb
mov
add
stos
mov
or
jmp
frstor
sbb
test
mov
clc
push
pop
pop
rorl
sub
subb
mov
xor
sahf
cmpsb
push
data16
inc
pop
xor
lock
push
fucomp
adc
jno
insl
gs
clc
mov
sar
sahf
cmp
adc
fucomp
lods
or
scas
in
adc
clc
das
jo
jb
pop
repnz
sbb
shrl
vsqrtpd
cltd
jns
sahf
fadd
add
push
bound
mov
and
dec
sub
lods
mov
aam
sahf
daa
in
ljmp
push
xchg
mov
idivb
fs
mov
mov
jecxz
mov
sti
outsl
sbb
je
cmp
clc
push
dec
outsb
push
mov
dec
or
sahf
sub
imul
mov
outsl
das
or
sahf
pop
incb
int
dec
inc
cmpsb
stos
and
cmp
cmp
mov
pop
sub
pushf
mov
inc
pusha
sahf
jnp
inc
cld
in
xor
mov
sub
push
xchg
in
movsb
cmpsb
or
lahf
shrb
mov
jp
sahf
daa
mov
out
out
sahf
sbb
jmp
pop
sahf
push
stos
iret
int3
mov
mov
or
test
aaa
xchg
sti
cmpb
sbb
sahf
lcall
inc
cmp
cwtl
sti
jmp
inc
pop
dec
faddl
shl
pop
scas
imul
loopne
jb
pop
mov
insb
lret
orb
negb
pop
inc
incl
sarb
jae
cltd
mov
lahf
ficoml
sti
xorl
icebp
lret
mov
fmulp
dec
sahf
add
loopne
aam
lock
or
ret
fistpl
add
out
xchg
out
out
inc
push
mov
sahf
cmp
iret
pop
adc
lea
or
fisubrs
jg
pop
stos
bound
and
mov
test
jl
xchg
adc
jg
adc
fnsave
leave
pop
imul
lods
cmpsl
stos
mov
shll
outsb
and
imull
or
sarl
cmp
enter
push
psubq
fisubrl
jg
sahf
sub
jne
and
out
jno
sahf
jmp
mov
mov
jbe
push
gs
mov
ljmp
les
fnstcw
dec
mov
adc
and
lret
iret
dec
nop
mov
pop
cmp
xchg
sahf
notl
xchg
push
js
movsb
repnz
popl
sahf
and
test
leave
or
jmp
push
sahf
dec
movsb
and
rcrb
xchg
xor
and
stos
mov
pop
loop
lret
jo
and
jno
fistpl
gs
outsl
mov
movsb
cmc
es
pop
sub
dec
push
cmpsb
adc
fxch
jne
fucomip
sahf
lods
mov
icebp
std
aas
mov
scas
jp
arpl
mov
jb
inc
int
jne
mov
andl
mov
fisubl
shlb
mov
jecxz
idivl
sub
int3
jbe
in
jge
adc
add
and
mov
icebp
mov
dec
push
sahf
jge
pushf
add
fldcw
push
ret
cmp
fsubl
scas
fs
sub
jg
cli
pop
leave
out
xorl
or
jge
cmp
sarl
mov
in
lods
push
mov
mov
jbe
adc
mov
sbb
inc
dec
nop
cwtl
push
xchg
shl
test
dec
cmp
sahf
xchg
pusha
jg
mov
sub
adc
sahf
dec
jl
stos
mov
test
sbb
dec
stc
or
sahf
fldl
cld
mov
ret
push
pushf
pop
inc
das
fldcw
pop
xchg
add
cmp
xor
in
inc
mov
sbb
push
cmp
aad
ljmp
jl
ja
adc
adc
repnz
lahf
mov
add
lret
rcrl
jb
jns
mov
loope
sub
xchg
pusha
jno
outsl
dec
sub
into
dec
dec
mov
fbld
nop
fldl
scas
lret
repz
fisubl
push
mov
and
insb
test
dec
xor
rcrb
xor
lds
test
jae
jmp
or
jne
mov
les
nop
ret
sahf
inc
pop
pop
sbb
mov
lret
mov
add
lods
fisubs
mov
hlt
mov
sahf
xchg
repz
nop
pushf
stos
in
scas
mov
popf
xchg
push
sub
fprem
test
sahf
adc
mov
out
jmp
testw
sbb
sbb
dec
iret
lahf
mov
lea
cmp
cmp
and
add
sahf
daa
ret
out
inc
mov
fdivl
add
sahf
xor
insb
les
add
outsb
jns
mov
cs
lahf
inc
jae
pushf
into
xchg
bound
xor
stc
xchg
sahf
popf
adc
mov
sahf
sbb
mov
mov
stos
sub
add
shrl
adc
sar
mov
sahf
shll
push
jno
aas
addb
popa
dec
fimuls
jmp
outsb
addb
dec
mov
popa
mov
mov
sub
sahf
insl
int
gs
sub
mov
js
adc
pushf
sti
mov
arpl
stc
stos
outsl
stos
lea
imul
pop
repz
je
stos
sahf
mov
ljmp
mov
call
push
inc
mov
mov
sti
pushf
mov
loopne
stos
icebp
imul
xlat
dec
lret
addb
push
data16
sahf
lret
fucomi
pop
xchg
mov
pop
arpl
add
scas
adc
xor
jbe
jecxz
or
xor
cwtl
sbb
and
aas
add
mov
xor
xor
push
fmull
mov
jmp
inc
xchg
mov
test
in
sahf
mov
cld
mov
subb
cmp
std
dec
xor
xlat
sahf
dec
fwait
inc
ljmp
jbe
pop
pop
loop
pop
lahf
jns
stos
pushf
sahf
xchg
in
jne
cmp
outsl
mov
adc
leave
aam
enter
movsb
sahf
flds
lock
std
outsl
shll
mov
scas
cs
stos
leave
shll
and
sahf
icebp
pop
fisttpll
jecxz
stc
sahf
fdivrl
xor
fisttpl
fadds
pop
pop
jae
enter
div
or
mov
push
lahf
imul
sbb
fmuls
mov
mov
movsb
sahf
inc
xor
or
lds
pop
out
push
pop
testb
xchg
xchg
xlat
add
mov
rclb
std
les
cwtl
orl
pslld
jae
sbb
loope
filds
clc
pop
mov
xchg
cmp
mov
popa
sahf
cmp
aaa
enter
rorl
or
scas
test
dec
int3
mov
dec
inc
sub
mov
inc
pop
jns
mov
jb
dec
mov
sahf
dec
les
xor
or
nop
jnp
ror
stos
pop
shr
sub
jg
bound
cmp
lds
rcrl
sbb
cli
pop
lock
cmpb
loope
dec
cmp
mov
xor
push
sahf
jbe
imul
dec
inc
cwtl
lods
cmp
aas
or
loopne
ds
scas
stos
imul
les
push
imul
icebp
outsb
sahf
in
xchg
inc
dec
lahf
or
xorb
adcb
sub
sbb
bound
pushf
mov
sbb
bound
shrl
inc
sahf
or
loop
jbe
push
sahf
or
in
test
sahf
jbe
pop
jne
js
out
dec
pushf
leave
lret
adc
leave
ficoms
pusha
scas
ret
in
mov
seto
lea
xor
jbe
jnp
sub
iret
jp
xchg
push
cltd
aad
fists
add
lahf
leave
and
in
pop
lods
lret
daa
push
mov
popf
cmp
sahf
jmp
fldl2t
push
rorl
push
sahf
decb
rcrl
insb
ret
mov
je
push
and
mov
lds
in
jae
ret
shr
int3
stos
aad
and
bound
or
clc
ss
xchg
xchg
push
fwait
sbb
xchg
push
and
iret
iret
xlat
sahf
xor
lock
gs
xchg
decl
push
fisttpl
jg
dec
sbb
and
sahf
pop
mov
push
sub
or
inc
dec
gs
cs
aam
pusha
jne
and
mov
jb
cmp
sahf
lock
sbb
hlt
cwtl
cmp
xchg
stos
pop
in
sti
clc
fistl
add
adc
xlat
jbe
les
inc
aaa
lods
push
adc
imul
pop
sahf
mov
xor
xlat
into
pushf
ficomps
push
pop
push
fucomi
sahf
adc
and
add
xchg
callw
push
jb
jo
inc
int3
cwtl
int
dec
xor
push
xchg
push
jg
or
mov
in
push
mov
mov
pusha
les
nop
icebp
dec
dec
stos
mov
roll
out
in
jnp
mov
mov
lcall
fidivs
loop
mov
mov
push
sbb
dec
rcrl
or
jo
sahf
mov
add
sahf
xchg
mov
sub
rcll
outsl
out
or
int
adc
addr16
in
sbb
cmp
push
clc
push
pop
xchg
addl
adc
outsb
jbe
ja
jno
push
rcrl
xor
sub
ljmp
adc
adc
loopne
das
push
mov
add
push
push
sub
dec
stos
and
xchg
nop
int
andb
dec
sahf
pop
add
lock
pop
es
les
jecxz
ret
sahf
ror
mov
imul
cmc
mov
repnz
xchg
inc
aam
lahf
faddl
gs
stos
xchg
jbe
jmp
sahf
adc
xor
sti
adc
fwait
sbb
mov
sbb
push
mov
jb
loope
fbld
sahf
mov
jmp
mov
mov
push
clc
data16
rcll
repnz
push
mov
cltd
inc
data16
pop
jno
int
push
cwtl
mov
lret
and
fadd
fisubrs
xchg
inc
es
jb
lods
mov
rcrl
repz
xor
test
sahf
imul
dec
xchg
mov
xlat
fwait
lret
or
push
mov
int
scas
jp
push
cwtl
inc
pop
xchg
jge
adc
mov
arpl
push
and
sahf
repz
push
mov
add
sahf
mov
mov
sub
adcl
cltd
in
adc
hlt
dec
pop
jge
sbb
sahf
popa
or
inc
negb
or
push
pop
cs
cld
push
or
and
inc
sub
adc
mov
loop
pop
daa
mov
mov
dec
ds
jo
mov
fs
push
sbb
xor
fidivrs
stos
out
and
into
scas
push
dec
sahf
je
or
idivb
stc
adc
subb
sahf
dec
rorl
ds
movsl
je
mov
out
jle
sahf
xor
dec
lods
jp
lret
out
xlat
inc
stos
jecxz
xor
in
in
add
push
adc
mov
out
rorl
lods
fs
popf
add
pop
scas
xor
fbld
pop
jae
in
cmp
mov
mov
sahf
rclb
cltd
insb
mov
dec
insl
push
repz
xor
lcall
ficompl
cltd
lods
cwtl
rolb
dec
push
enter
push
ret
fwait
cwtl
push
pop
sti
jmp
dec
adc
sahf
lock
sub
scas
les
and
jmp
rcl
subl
imul
cld
mov
jl
push
inc
mov
push
ss
nop
sub
shl
mov
fucomi
ficoml
push
push
stos
and
sahf
test
loope
jae
jno
nop
cmp
outsl
cmpsb
pop
in
mov
loopne
dec
stos
cmpsl
scas
mov
mov
sahf
or
adc
pop
cwtl
cmp
xchg
int3
and
inc
call
rcrb
adc
cld
stc
sahf
fdivrs
cmc
fisubl
inc
add
jl
push
mov
notl
push
je
imul
cmpb
icebp
sahf
sbb
fimull
add
cmp
and
xchg
lahf
cmp
jp
or
jl
sahf
mov
mov
fs
add
and
arpl
lret
pusha
jmp
jns
cwtl
mov
aad
stos
xchg
inc
push
mov
xchg
aaa
xlat
ret
jno
cmpsb
rcrl
mov
enter
sahf
xchg
lret
xchg
pop
dec
aaa
sahf
cwtl
ffree
pcmpeqd
stos
imul
call
test
outsb
sarb
lcall
push
dec
pusha
dec
sahf
aad
cmpsb
adc
mull
sahf
xor
inc
imul
cwtl
decl
cmc
or
out
sub
inc
das
ficompl
cwtl
push
fldenv
sahf
inc
mov
test
sahf
hlt
lahf
outsb
pop
push
scas
arpl
push
out
mov
push
fistps
mov
test
sarl
test
pop
sahf
das
add
add
and
rcrb
mov
push
jae
mov
pop
mov
push
push
icebp
mov
ret
inc
gs
adc
movsb
mov
stc
lcall
fldl
pushl
or
inc
lahf
cmpsl
in
test
push
adc
cmpb
cmp
push
fimuls
mov
loope
and
mov
imul
xchg
adc
ja
sbbl
mov
or
mov
sahf
sbb
int
and
jnp
mov
dec
jmp
pushf
outsb
jle
jg
cmp
sahf
mov
aaa
sub
lahf
cmp
outsl
sahf
sub
int3
sahf
and
call
mov
scas
sti
scas
pusha
sahf
mov
repnz
pop
sahf
pushf
adc
in
call
xchg
add
f2xm1
sub
mov
cwtl
in
lods
mov
nop
xor
jmp
and
xchg
jno
mov
push
sbb
movsl
jg
fists
xchg
add
ds
lahf
pop
out
sahf
ror
out
fsubrs
sub
pusha
movzbl
sahf
in
push
mov
fs
or
or
push
jae
sbb
sub
sub
pavgb
push
sti
syscall
pusha
ret
icebp
lds
pop
fstpl
jbe
nop
adc
sub
sbb
int3
or
lods
mov
and
pcmpeqd
xchg
test
sub
and
fadds
es
xchg
add
sti
add
imul
negl
mov
add
aas
shll
insb
lret
or
movsl
aas
pop
pusha
jp
jmp
data16
push
pop
jmp
mov
ffree
js
xor
jbe
clc
aas
sbb
adc
and
repz
sahf
mov
mov
sub
sub
mov
outsl
sahf
dec
push
inc
push
lcall
fnstenv
arpl
xorb
fisubrs
into
cmp
push
mov
mov
adc
mov
repnz
push
repz
leave
sahf
add
xchg
xor
scas
xchg
jecxz
jbe
adc
outsb
mov
lcall
pop
mull
sahf
xchg
call
stos
data16
popa
pop
rol
test
in
sub
test
cli
std
mov
mov
jg
add
popa
cmp
pop
cwtl
cltd
pop
jns
sti
dec
or
sbb
lret
stc
fiaddl
nop
popa
lock
iret
sbb
aas
bound
dec
popa
scas
mov
jno
mov
jg
std
adc
xor
mov
les
sub
mov
push
mov
sahf
sbb
les
adc
pushf
jae
mov
das
pushf
int3
xor
lret
add
aad
mov
nop
ror
mov
and
ljmp
dec
sub
sbbb
sahf
dec
in
aas
test
sbb
sahf
push
lods
lds
add
mov
sti
call
jp
sahf
adcl
push
nop
push
jle
xchg
cld
jle
adc
sti
pushf
stos
inc
arpl
vcvtsi2sd
xchg
data16
and
inc
and
repz
sahf
sbb
es
rcl
ficomps
scas
fs
in
dec
mov
cmp
mov
push
xchg
insl
sbbb
lahf
outsl
test
mov
mov
dec
cmp
dec
pop
pop
arpl
adc
out
cmp
fistpl
xchg
popf
fbstp
into
push
pop
push
lahf
fsubl
inc
bound
sbb
xchg
sahf
sti
jb
aam
sub
leave
inc
mov
repz
or
daa
iret
mov
ficoml
imul
js
hlt
enter
in
fadds
das
sahf
pop
pusha
sbb
sbb
mov
lret
movsl
xchg
pop
mov
sbb
dec
lcall
mov
in
test
inc
in
push
les
mov
ja
outsl
test
jns
xor
push
push
adcl
clc
addr16
mov
in
enter
ds
sahf
lret
or
jne
nop
jp
sub
rcrl
stc
lcall
inc
leave
addb
push
xchg
cmpl
leave
jecxz
test
sahf
popf
out
in
test
out
cltd
sar
dec
dec
xlat
iret
sahf
dec
repnz
rclb
imul
add
scas
fldenv
pop
xor
jo
jns
repz
sahf
sub
cmc
sahf
cmpsl
or
ljmp
cmpsb
push
sub
sti
mov
jo
adc
sbb
mov
out
test
jl
incb
pop
jle
dec
nop
add
xchg
lcall
pop
adc
xchg
int
dec
sahf
jo
xor
inc
fadd
inc
sahf
jae
outsb
iret
cmp
out
push
sahf
dec
in
ret
je
data16
fwait
sub
or
sahf
mov
jo
in
lret
jg
jnp
clc
inc
imul
ds
negl
add
pop
xchg
fists
xchg
cli
sti
sahf
mov
sub
or
mov
sbb
les
inc
clc
shll
inc
int
dec
add
aaa
sahf
dec
out
sbb
or
lea
fisubl
lahf
bound
and
outsl
pusha
hlt
aaa
sahf
mov
addr16
mov
xchg
popf
inc
cmc
aas
adc
enter
lcall
popf
scas
xchg
inc
ds
sahf
mov
sub
sahf
adc
xchg
sahf
mov
cmpsb
pop
cli
shlb
mov
ret
or
lock
cmc
xchg
inc
push
cmp
pop
in
out
test
adc
jne
add
xchg
sahf
cwtl
bsf
cmp
out
ljmp
or
inc
in
aaa
mov
mov
mov
xor
jb
rorb
in
xor
dec
mov
movsl
rcll
push
sbb
outsl
sahf
xor
out
sahf
sbb
pop
les
in
mov
bnd
sahf
sbb
mov
sahf
fistpll
les
cmp
push
divl
repnz
mov
dec
pop
shl
jp
mov
fisubrs
xor
mov
push
push
mov
dec
sahf
jmp
or
add
lods
and
jno
fidivs
pop
adc
pushf
dec
pop
push
lds
scas
lods
jmp
xor
out
fstl
test
call
ds
scas
cmpsb
inc
nop
mov
sahf
push
orl
or
fwait
sahf
clc
repnz
sahf
and
xor
mov
sahf
push
fldl
sahf
gs
daa
mov
mov
and
mov
call
or
scas
hlt
inc
fs
fst
repz
mov
and
mov
rclb
mov
cmpsb
add
cwtl
jmp
loop
cmpsl
call
inc
fcomps
cmp
rcrb
mov
jbe
scas
push
arpl
or
xor
sahf
cmc
or
ss
inc
cld
mov
out
jle
jb
sahf
sub
sar
imul
push
das
fs
lahf
dec
adc
dec
mov
clc
sar
or
inc
rcr
cld
xchg
mov
cmp
fxch
mov
sahf
sti
leave
js
cmp
cli
test
fstps
leave
aam
xor
loop
mul
out
mov
pop
jno
shll
adc
nop
loop
lret
ja
sbb
push
out
ficoml
xor
xchg
push
fcoml
aam
nopl
call
mov
mov
cwtl
sub
xchg
scas
sbb
pushfw
jge
mov
loope
scas
notb
sub
rcrb
fs
adc
sahf
dec
repnz
stos
jnp
bswap
sahf
mov
lea
push
out
or
rcrw
jne
pushf
sarl
push
int3
lahf
aam
int
ja
sub
lahf
imul
aaa
pop
pop
ficomps
pop
xchg
mov
imul
in
adc
pop
aad
ss
lret
ja
pop
pop
xchg
sub
out
pushf
xor
addl
add
adc
xchg
movzwl
sahf
daa
test
and
sahf
sti
mov
fstpl
aad
sbb
repz
repnz
cmp
add
mov
lock
xlat
mov
cmpsb
rcrb
jmp
iret
std
outsl
sahf
aas
mov
inc
out
les
and
push
dec
out
xchg
movsb
pop
movsl
inc
push
sub
rcrb
lret
or
mov
stos
mov
and
jmp
inc
xor
cs
inc
lret
repnz
pop
mov
or
cmpb
lea
pop
and
js
ret
pop
mov
adc
sahf
or
and
sbb
out
bound
repnz
cli
adc
jbe
iret
cmp
in
sub
cs
stos
jp
js
xor
mov
xor
fidivl
mov
xchg
std
nop
cli
shl
imul
mov
out
dec
xor
push
sahf
rclb
or
dec
jno
lds
lret
lret
in
jnp
outsl
int3
push
fstps
in
ja
sahf
aad
fmuls
cwtl
inc
mov
gs
or
mov
fs
pop
ret
test
fucomi
inc
inc
cmp
jp
sbb
fs
fwait
push
leave
xchg
sub
sahf
int3
or
mov
mov
jne
roll
lcall
pop
shlb
sti
push
sbb
fstpl
scas
dec
popl
js
adc
ret
cwtl
inc
or
leave
push
mov
or
jae
sahf
subl
mov
mov
loop
xor
enter
sub
adc
lods
imul
daa
andl
or
adc
mov
js
mov
xchg
sahf
mov
notl
sub
arpl
or
popaw
jle
pop
aas
cltd
testb
std
nop
das
mov
pushf
js
adc
idivb
adc
pop
jmp
mov
popa
push
mov
pushf
lret
add
rolb
push
adc
push
xchg
pusha
lea
sahf
jmp
mov
sub
test
jno
mov
fsubp
push
in
push
sahf
xor
loopne
sub
push
mov
mov
out
test
fcomps
stos
add
ja
and
int
sahf
dec
int3
xor
jne
ficoms
inc
mov
outsl
daa
out
pushf
cmp
mov
push
ljmp
sbb
dec
test
push
mov
mov
jg
lds
sahf
mov
and
adc
sahf
inc
dec
push
mov
fbstp
out
fsubs
dec
lahf
and
jmp
push
cwtl
xorl
dec
xor
lds
movsl
mov
aas
jae
cmp
pop
add
adc
add
mov
sbbb
adc
andl
cwtl
push
loopne
arpl
leave
scas
jns
movsl
sub
out
lahf
loope
cmp
gs
sahf
jp
dec
mov
lcall
fcoms
jne
nop
lock
sti
sbbl
lds
pop
out
pop
add
lcall
cwtl
cli
xchg
add
inc
sahf
cld
das
pushf
inc
je
xchg
rcrb
popa
setp
cmpsb
scas
mov
outsl
and
loope
cmp
daa
sub
sub
ds
mov
je
call
fs
fistpl
sarb
lods
and
mov
cmp
lahf
hlt
mov
cmpsl
cmpb
jmp
and
add
shrl
out
inc
jmp
imul
lcall
mov
in
js
std
negl
and
lods
adcl
add
inc
jecxz
int
cmp
ret
add
arpl
push
clc
ss
inc
stc
in
jmp
cwtl
mov
dec
push
ljmp
inc
enter
pop
in
sub
fs
scas
cmp
xchg
hlt
xchg
fwait
cli
jg
std
ret
icebp
mov
or
repnz
xor
sahf
mov
jbe
int
lds
cmpl
fadds
xor
cwtl
ljmp
inc
inc
ret
sub
push
cld
sbb
inc
ja
jp
add
data16
movsb
sbb
dec
or
push
nop
dec
xchg
outsl
sbb
push
cli
add
psrad
pop
out
mov
push
jl
mov
sahf
popa
xor
imul
jnp
pop
xor
mov
jae
fdivrl
sub
lret
sahf
rcll
cmp
sahf
shr
jno
addl
adc
cmp
mov
rcrb
dec
push
sbb
sub
inc
rclb
mov
fs
mov
push
popa
pop
dec
mov
cli
into
dec
cld
int
jmp
nop
jno
or
mov
pop
ret
add
xchg
roll
jno
fbstp
out
insl
mov
and
add
bound
inc
xor
stc
std
push
xlat
xchg
dec
sbbl
fincstp
mov
fmull
lds
cwtl
jmp
frstor
cmc
fistps
pushf
adc
cmpb
cmpsb
jb
sahf
repnz
lahf
or
adcb
push
add
pusha
setb
and
lock
std
mov
add
popa
sub
add
lahf
inc
leave
fs
in
and
add
add
xchg
adc
mov
jecxz
sahf
enter
clc
rcl
dec
sahf
pop
leave
dec
pusha
in
out
push
push
fstps
mov
jae
xchg
jecxz
mov
stos
sti
sahf
adc
imul
cli
orb
mov
jp
mov
cwtl
sahf
sbb
add
in
je
sub
scas
jg
pop
fdivl
jns
add
adc
loop
pusha
int
lcall
ret
mov
jl
leave
sub
insl
sahf
mov
call
dec
sahf
pop
pop
out
push
or
xchg
aam
mov
lahf
mov
clc
sahf
xchg
cmp
sahf
dec
imul
cwtl
jo
sub
mov
divb
lcall
jno
test
movl
sbb
or
das
jecxz
fisubl
fisttpl
or
sahf
int
push
lret
out
rep
lcall
out
lahf
lods
stc
xchg
sbb
orb
clc
cmp
les
jmp
jbe
pop
sahf
xor
outsb
pop
lret
cmpsl
pop
int
mov
and
sbb
dec
and
and
pushf
ret
jg
iret
adc
push
push
bound
dec
scas
and
movsb
push
add
sahf
mov
lock
sahf
inc
fwait
jae
es
sbb
push
imul
sbb
mov
mov
adc
pushf
faddl
jmp
cmp
fidivs
sahf
fstpl
fmul
dec
push
pushf
jne
inc
mov
or
pop
call
movb
push
mov
sahf
lret
mov
in
sub
mov
xor
dec
mov
mov
pop
and
add
mov
cwtl
rorl
push
push
aam
movsb
push
dec
sahf
insb
cld
loopne
insl
rcrb
gs
sahf
inc
jnp
dec
adc
pushf
movsl
sbb
push
cmp
into
mov
test
fucomp
push
push
push
mov
mov
fs
out
frstor
das
data16
adc
ds
push
and
adc
xchg
lcall
sbb
pop
popa
sahf
andl
push
shlb
push
dec
outsl
fcompl
jmp
dec
xchg
pushf
aad
adc
out
xchg
inc
mov
lds
dec
xor
add
and
sub
mov
adc
sahf
in
mov
mov
inc
pop
aam
mov
xor
shlb
push
mov
in
stos
mov
lods
mov
ret
or
negb
xchg
fs
data16
arpl
push
push
movzbl
jnp
aaa
jmp
or
repz
cmp
sahf
das
or
xor
adc
scas
stos
mov
jb
cmpsb
and
out
pop
cmpsl
xchg
cmpsb
lahf
out
int3
mov
mov
sahf
jge
cmp
sbb
add
cwtl
rolb
xor
jecxz
pop
aam
out
enter
xchg
sbb
sarl
push
cmp
mov
loopne
push
xorb
aaa
neg
sbb
aas
mov
icebp
repnz
sub
aad
hlt
mov
sub
pop
and
sbb
jae
cmp
cwtl
mov
scas
jg
cs
orb
movsb
sahf
enter
scas
cwtl
mov
dec
psubw
cmpb
rcr
push
xchg
dec
ljmp
fistps
js
push
jecxz
adc
adc
pop
cwtl
aad
inc
sahf
test
sub
sahf
rcr
hlt
add
divl
cwtl
adc
pop
or
iret
sahf
mov
js
xor
iret
in
sahf
scas
inc
arpl
sub
cltd
mov
inc
cmc
sub
lret
arpl
push
lods
leave
rolb
data16
or
je
push
push
lcallw
mov
in
in
pop
mov
out
les
clc
sub
mov
and
pop
and
or
cwtl
insb
fs
adc
movsl
jmp
je
sahf
xlat
mov
sbbb
out
jmp
cmp
pop
inc
js
or
jnp
inc
ds
and
push
es
mov
movsl
sub
pop
dec
and
add
rol
popl
push
loopne
sahf
lock
cld
cmc
outsb
dec
xchg
lahf
movsl
push
int3
out
cmp
pushf
mov
movsl
inc
jo
push
imul
mov
fstps
mov
stos
in
pop
out
aam
addr16
sahf
push
and
adc
stos
inc
in
stc
iret
movsl
cmpsl
pusha
sahf
scas
loope
dec
mov
enter
ret
pop
or
xchg
cmp
and
fdivs
pop
jp
cwtl
mov
inc
aas
test
fidivl
fists
outsl
imul
outsb
adc
sahf
sbb
enter
mov
push
jae
sub
dec
fadds
and
sahf
cld
or
lea
fsubr
cmp
movsl
dec
sbbb
inc
cmp
or
dec
xchg
push
mov
sub
es
inc
dec
jge
and
and
sub
fnsave
arpl
jl
repnz
push
push
jg
jae
push
xchg
rorb
mov
lahf
notl
adc
add
xor
sbb
js
add
or
push
or
cwtl
jnp
gs
scas
popa
mov
dec
inc
and
push
push
dec
lock
nop
jno
scas
ja
pop
fdivrs
push
jne
iret
shll
cmp
hlt
sub
pop
popa
daa
pushf
xchg
leave
or
dec
mov
mov
sar
sahf
shll
sub
sbb
in
out
sbb
stos
cmp
fistpl
popf
or
stc
out
outsl
ret
pop
pushl
jns
call
cwtl
sahf
fwait
and
iret
inc
or
or
sahf
outsl
mov
ret
and
scas
test
mov
test
sahf
inc
mov
push
dec
stos
xchg
nop
inc
int3
dec
loopne
mov
sub
or
mov
lds
inc
call
xlat
fcoml
dec
pushf
push
negb
inc
mov
fs
int3
ds
aad
ret
pushf
push
xchg
dec
cs
iret
mov
das
shll
push
repz
iret
repnz
xchg
stc
mov
stos
mov
and
addr16
mov
mov
iret
jecxz
nop
in
pop
add
jle
mov
dec
mov
neg
inc
cmp
int
in
mov
lds
cmc
mov
mov
jp
dec
push
mov
sahf
or
sarl
add
aas
jg
scas
mov
pop
sbb
push
int
xchg
dec
aad
adc
shrb
cmp
in
movsb
sbb
mov
pop
sbb
sahf
add
jge
es
data16
nop
push
pusha
test
mov
mov
into
fildll
test
in
movsl
stc
jns
ret
inc
or
dec
lret
xor
push
cmp
insl
push
inc
les
jae,pt
cmp
leave
dec
lret
cmp
sahf
or
cmp
repz
push
sahf
std
es
movsl
jecxz
xor
imul
or
pop
xchg
js
push
sbb
loopne
mov
sahf
cmp
and
fs
xchg
mov
aam
divb
je
push
xchg
mov
push
sahf
cmc
out
add
shl
es
lahf
push
imul
inc
adc
xor
xchg
pop
push
dec
dec
mov
into
lret
jnp
pop
stos
in
sti
cwtl
pandn
aas
push
cvtps2pd
outsb
sbb
fnstcw
or
lock
jmp
xchg
call
sahf
mov
fimull
aaa
addl
out
nop
jmp
pop
imulb
mov
loop
loopne
rolb
mov
inc
mov
cmc
inc
outsl
jl
jge
repz
mov
sahf
les
in
test
and
jecxz
imul
sub
dec
jns
pusha
shr
mov
test
bound
or
sbb
sub
dec
cmpsb
xchg
vpcmpeqd
andl
xor
sahf
ss
add
inc
push
pop
sahf
dec
aam
int
sub
and
lcall
sahf
jge
push
pop
sti
mov
cmc
push
adc
out
sahf
std
inc
shll
inc
loope
push
lock
jo
nop
subb
bound
adc
popa
pushf
mov
aaa
push
pop
xchg
sbb
add
in
xchg
mov
nop
test
mov
sbb
push
shll
mov
ss
hlt
fidivrs
orl
insl
xlat
mov
xor
mov
or
ss
scas
mov
and
jge
es
notb
mov
nop
pop
test
jl
dec
mov
out
mov
outsl
leave
aam
jns
popa
mov
rol
mov
cmp
cltd
es
dec
push
outsb
loopne
xchg
push
jbe
and
cwtl
push
mov
cmp
sahf
push
xchg
std
repz
sahf
and
outsb
sbb
daa
arpl
pop
outsb
lods
lods
popa
sahf
mov
adc
mov
push
notl
push
movsb
add
and
scas
sahf
sar
pop
movl
rolb
mov
paddb
push
mov
xor
inc
adc
clc
sahf
dec
cmp
cmp
cli
test
xchg
jnp
xor
cwtl
shll
inc
and
sahf
lods
aad
and
out
lcall
lea
sahf
sub
int3
test
or
xchg
pusha
pop
cld
lock
and
sub
filds
loopne
movsl
bound
hlt
xchg
cli
pop
clc
movsb
mov
ds
out
fimull
and
pop
lret
fstpl
mov
pop
fsts
aam
mov
pop
jmp
ja
sahf
lret
push
aas
mov
sbb
hlt
bound
lret
in
and
in
pextrw
insl
sahf
cmp
in
add
std
and
ret
sahf
xchg
or
stc
shll
inc
mov
dec
jecxz
orb
fmull
cmp
ja
scas
stos
jo,pn
scas
mov
inc
dec
cmp
js
loope
outsb
ret
pop
mov
mov
mov
in
fisttps
mov
cmc
enter
pop
shll
mov
sahf
mov
sub
ljmp
jb
cwtl
in
loopne
out
leave
pop
sahf
shl
pop
fisttpll
popf
sbbb
pop
pop
out
fwait
or
int
arpl
in
sahf
mov
jmp
sbb
hlt
pop
negl
inc
pop
jb
inc
cld
xchg
sti
cwtl
dec
ljmp
add
xchg
or
lods
cwtl
and
fimuls
dec
stos
cwtl
test
scas
sub
mov
mov
clc
dec
mov
xchg
sahf
cli
test
int3
mov
rcrb
jg
sbb
inc
mov
int3
arpl
shll
xor
out
mov
scas
lods
cwtl
data16
xor
or
xor
ret
call
dec
test
sti
iret
sahf
jmp
pop
in
mov
nop
and
xchg
adc
mov
mov
outsb
xchg
xchg
dec
jne
call
cli
inc
sbb
mov
cld
fwait
fs
mov
jne
push
sbb
xlat
and
shlb
add
mov
mov
mov
and
lahf
addr16
fmuls
jo
inc
stos
shrl
in
imul
sahf
xchg
and
jae
dec
push
sahf
pushf
rorl
test
or
mov
pop
cmp
pop
cwtl
arpl
aas
mov
fs
push
rcrl
das
sub
int3
mov
nop
out
lcall
mov
shll
ds
fcos
pushf
push
fiadds
enter
sbbl
ficoms
and
cmpsl
or
sbb
int
push
test
sub
inc
subb
inc
fisubrs
inc
lock
sahf
mov
cwtl
inc
mov
push
sahf
and
fs
cwtl
xor
mov
popa
ss
lods
mov
out
push
dec
cld
sahf
clc
inc
movsb
test
mov
jecxz
rorl
xchg
ret
jle
cmp
sahf
movsb
adc
and
fucomip
pop
sub
lds
rclb
js
dec
push
ret
mov
sub
jge
pop
aad
aam
and
aas
imul
sahf
xor
sub
dec
pop
movsb
adc
jg
mov
sbb
sahf
jmp
test
out
andb
lahf
icebp
push
repz
mov
inc
leave
out
movsb
dec
xor
mov
and
xor
inc
adc
sahf
rclb
xchg
leave
orb
and
and
in
lahf
fisubl
test
bound
pop
xor
mov
ss
outsb
mov
cmp
loope
pop
sbb
mov
inc
lea
sub
cwtl
add
stc
es
or
ljmp
sahf
jo
push
stc
ret
bnd
sahf
add
mov
sahf
push
fimull
in
xor
jge
fbld
ds
lds
shll
popa
addl
call
sahf
push
cmc
int
jns
inc
push
sahf
xchg
dec
add
lods
jnp
inc
dec
leave
xor
inc
das
sbbb
pop
push
adc
dec
cmp
xor
cmp
push
cli
dec
cmpb
pop
adc
lret
xchg
inc
rorl
cwtl
ja
and
pop
daa
push
add
fdivs
xor
mov
push
sbb
mov
scas
inc
sub
mov
roll
pop
jns
fdivl
cmp
data16
sahf
loopne
jno
push
sti
cmpsl
xor
push
mov
mov
aaa
aas
clc
mov
lods
adc
stos
rolb
rcr
mov
mov
rcrb
mov
adcb
cwtl
das
cmp
sub
xor
dec
imul
dec
sahf
repnz
aaa
lods
dec
pop
fwait
rcrb
mov
out
mov
pop
xor
in
mov
and
xchg
dec
mov
jg
sub
pop
pushf
call
or
mov
jae
sahf
inc
xchg
test
cs
dec
or
ret
add
aas
add
pop
movsl
int3
inc
mov
sahf
call
psllq
xchg
pop
cmp
cs
bound
push
fs
addb
push
cmpl
and
mov
cmpl
mov
lcall
pop
jmp
xor
pop
lods
sahf
mov
and
pop
pop
xchg
adc
and
mov
lds
mov
mov
mov
jg
nop
push
inc
pop
ds
inc
push
out
into
push
sahf
or
mov
cwtl
pop
arpl
gs
popa
incb
ss
sahf
lahf
sbbb
push
arpl
sahf
mov
cld
xor
push
cmp
aas
pop
pop
into
pop
push
sub
sahf
dec
jecxz
mov
test
xchg
or
add
mov
in
daa
cmp
les
subl
inc
push
xor
sahf
adc
cmp
sub
dec
cmp
sahf
les
add
or
test
aad
shrb
mov
and
push
inc
in
sbb
cmpsb
stos
sahf
jno
push
clc
outsl
mov
dec
sbb
pop
mov
subb
pop
add
imul
mov
mov
jno
push
mov
xor
xchg
sbb
int
sub
push
pop
in
cmpsl
jmp
or
fimuls
imul
xor
sahf
mov
bound
mov
cli
clc
xlat
jg
mov
fistpl
sbb
in
jle
les
push
out
pop
dec
sahf
outsb
bound
lock
sahf
fsubl
jl
sub
movsb
pop
mov
mov
popa
dec
jmp
aas
mov
cli
sbb
call
ret
xor
xor
or
adc
cmpsb
and
repz
add
jge
int3
pushf
lods
push
and
test
adc
push
adc
testb
sahf
mov
mov
lcall
jle
mov
repz
leave
mov
jno
jno
add
sbb
outsb
xchg
pop
repz
movsl
les
sahf
je
decl
lahf
subb
mov
jmp
pop
dec
testb
shrl
sahf
or
out
test
imul
push
fwait
mov
cmp
faddl
push
cmc
movsl
out
xor
and
sahf
int3
jbe
lock
rclb
and
sahf
or
leave
scas
and
lods
sub
lds
xchg
sahf
aad
inc
mov
outsb
out
jmp
mov
lock
pop
jp
sbbl
sahf
cmpsl
les
mov
stos
imul
leave
dec
xor
jne
sbb
dec
pop
out
outsb
sahf
push
lret
data16
add
stos
push
adc
lahf
scas
ja
roll
cmpsl
mov
push
mov
es
pushf
pop
out
ret
jb
mov
sub
pop
fisttps
sbb
loope
popa
cmpsb
mov
les
sahf
jo
push
out
addr16
test
sahf
add
imul
mov
fxch
int3
mov
iret
daa
lods
sahf
sbbl
movsl
pop
and
out
ljmp
cmpsb
and
jmp
call
int3
mov
and
loop
cltd
ljmp
mov
sub
mov
aaa
out
add
or
pusha
adc
fwait
adc
jbe
subl
cwtl
pop
scas
stos
test
sahf
movb
sbbb
fwait
pop
scas
cwtl
push
in
or
cmpsb
lea
loopne
mov
cmp
sahf
push
xchg
xchg
jae
pop
mov
pop
call
out
out
push
pusha
ret
jnp
sahf
insl
dec
push
cltd
cld
mov
xchg
xlat
bound
jns
mov
and
xor
pushl
js
in
js
popf
jecxz
aas
xor
test
aas
lock
cwtl
sub
jl
dec
mov
out
add
imull
mov
sarl
psubsb
and
and
cmpsb
sub
loop
repz
inc
lahf
fmuls
inc
xorps
lcall
test
pop
xchg
sahf
ret
out
cmp
out
push
aas
push
fs
add
pop
adc
dec
xchg
ja
mov
repnz
mov
in
add
fldenv
gs
sahf
imul
push
cwtl
adc
aas
fidivrl
jp
out
cmpsb
sahf
ds
sub
lea
bound
lock
ljmp
sahf
pusha
int3
leave
arpl
je
pop
out
aas
jnp
lcall
fbstp
rcrl
jae
jge
dec
sahf
lret
arpl
xor
mov
mov
push
clc
divl
hlt
pop
push
xchg
jae
ficomps
stos
mov
bound
push
out
nop
inc
gs
pop
pop
movsl
sub
aam
mov
adcl
imul
mov
mov
pop
inc
xchg
pop
mov
sub
mov
cmp
enter
adc
sub
ljmp
adc
shll
imul
je
out
paddusw
iret
hlt
shll
outsb
nop
jnp
sti
push
push
or
lahf
data16
mov
sahf
ret
xchg
mov
and
sbb
pop
outsl
inc
test
adc
jmp
pop
xor
fdivs
pop
hlt
sahf
inc
lds
mov
push
add
inc
cld
sahf
mov
sahf
jb
jns
xchg
ss
jg
dec
mov
push
or
fidivs
adc
mov
scas
stos
sbb
mov
mov
mov
add
out
icebp
movsl
sahf
mov
jmp
cmp
pusha
cmc
cld
negl
out
or
fst
adc
addb
push
jg
cmp
fcompl
cmpsb
sub
jae
push
or
lret
pop
pop
andb
sti
iret
inc
out
or
dec
mov
mov
push
sub
stos
add
lret
out
add
loopne
dec
xor
push
sbb
inc
in
mov
sahf
push
clc
sub
int
sahf
outsl
add
out
sahf
lcall
fistpl
adc
mov
fs
xchg
lahf
pop
mov
sahf
divl
inc
ret
xchg
je
popa
sar
push
adc
outsl
inc
nop
mov
adc
or
loopne
sbb
and
pop
xorb
adc
jp
movsb
sahf
push
fcoml
push
negb
mov
jne
sbbb
mov
mov
mov
popa
mov
leave
jecxz
cmp
xor
mov
cld
loope
cmc
add
pop
popf
dec
sahf
incl
mov
sub
push
shr
cwtl
sbb
sahf
cld
pusha
fwait
pop
sub
pop
mov
int3
negl
push
in
addb
ds
stos
dec
adc
and
and
xlat
repz
sbb
pop
scas
fbld
cmpsl
jle
lods
mov
adc
and
sub
mov
push
pop
pop
xchg
push
xor
sub
or
pop
and
cs
daa
lcall
repnz
shrl
sahf
in
lea
test
js
pop
dec
cmpsb
xor
jmp
mov
pop
mov
shll
sahf
dec
mov
mov
pop
loopne
outsb
lahf
addr16
popf
add
jp
mov
pop
inc
ficomps
mov
out
xlat
xor
cmpsl
adcb
pop
orl
orb
roll
cmp
movsb
int3
xchg
push
mov
jo
ret
and
pop
fcmovu
inc
pop
loope
clc
das
add
es
adc
sahf
add
cmp
sarl
pop
adc
pop
sahf
stos
cmc
pop
push
lea
mov
mov
cmp
sti
push
cltd
hlt
insl
mov
push
fisttps
adc
sahf
div
jmp
jbe
shrb
xor
daa
sahf
push
stos
ljmp
dec
xorl
mov
repnz
add
sub
outsl
ljmp
sub
call
scas
icebp
sahf
jb
dec
cmpsl
bnd
mov
das
movsb
sub
pop
pushf
or
fisttpl
pop
pop
mov
iret
push
neg
test
add
and
sahf
aaa
jg
xchg
into
sahf
mov
cmp
pop
inc
mov
push
mov
nop
inc
out
sub
dec
mov
jo
mov
jno
ss
popa
adc
lock
data16
dec
mov
stc
test
das
xchg
xor
cmp
add
nop
fwait
inc
pushf
or
pop
add
and
mov
jmp
push
sahf
ret
data16
dec
cmovne
or
xchg
data16
cld
outsl
mov
xchg
pushf
subps
out
mulb
test
mov
push
mov
jmp
mov
dec
mov
add
outsl
push
sahf
push
push
rclb
and
pop
andb
mov
xchg
jecxz
aam
sub
adc
cli
xor
nop
cmp
fistpll
mov
jns
into
jae
xor
pushf
ret
int
call
pop
js
mov
jg
jge
dec
jmp
aam
into
adc
sahf
leave
inc
pop
fldcw
xor
int3
gs
sbb
push
mov
lods
sahf
fsubrs
shll
sahf
shlb
mov
and
pop
gs
sahf
pop
push
inc
xchg
lret
dec
sahf
inc
repnz
test
cmp
xor
mov
in
insb
cmp
sahf
pmaxsw
dec
aas
xlat
mov
mov
sahf
aad
push
push
fldenv
sub
ret
cmp
prefetch
iret
cmp
pushf
daa
shl
mov
lds
stc
fwait
xchg
sbb
stos
ljmp
cmpsb
outsl
lret
inc
mov
or
out
movsb
rcrl
test
jmp
cmp
cwtl
call
daa
dec
cli
repz
sahf
lret
and
push
js
mov
adc
pushf
adc
sbbb
xlat
adc
pushf
xchg
fcmovbe
lret
aam
add
xor
dec
jmp
lods
or
sahf
xor
inc
scas
sahf
inc
adc
stos
mov
jmp
test
cmpb
inc
cwtl
mov
cs
pop
xor
ficomps
das
xchg
fisubs
pusha
mov
push
sbb
or
ds
sahf
or
mov
sahf
fisubrs
xlat
or
lret
dec
xor
cmpsl
xor
gs
sahf
call
stc
lods
mov
pop
inc
add
ds
scas
loop
out
and
or
or
fidivrs
sahf
inc
push
repnz
sahf
mulb
hlt
cmp
adc
mov
lods
fcomps
inc
lds
jg
inc
call
std
cmp
sahf
out
lret
pop
xchg
fistl
dec
jnp
add
scas
adc
pushf
sbb
push
out
inc
ss
loop
inc
das
shrl
insl
sahf
scas
lods
mov
mov
lock
bound
fucomp
xchg
aam
and
lds
xchg
stos
mov
fistpll
dec
mov
bound
inc
movsl
xchg
push
and
pop
mov
lahf
enter
pop
cmp
stos
xor
aad
stc
iret
jb
jnp
fistpll
or
jne
inc
cmp
mov
push
pop
xchg
mov
in
lahf
pop
mov
jmp
and
dec
mov
test
je
mov
mov
into
shll
jp
mov
sahf
push
mov
gs
xchg
and
shll
out
push
or
dec
fmulp
mov
rorb
aaa
int
stos
je
in
ret
mov
jmp
outsb
fildll
inc
mov
cmp
ret
dec
hlt
xchg
and
sahf
lods
ficoml
or
insb
xchg
ja
pop
push
xchg
rcl
jb
sub
imul
idiv
push
cwtl
pop
push
hlt
xor
leave
out
inc
sahf
jns
mov
and
pop
sahf
xor
call
mov
ds
das
push
xchg
insl
jmp
or
movsb
sahf
xor
sbb
inc
mov
sahf
mov
xor
mov
out
jg
sahf
inc
pop
inc
add
sahf
outsb
and
cmp
stos
jns
sub
pop
lea
pushf
gs
out
addb
push
dec
pop
ljmp
inc
xchg
sbb
nop
daa
cltd
test
jne
shl
fadd
lahf
lds
sbb
jmp
cmp
lahf
aaa
lods
nop
test
xor
mov
fisubl
fst
sahf
inc
adc
movsl
sub
push
sahf
jmp
cmpsb
adc
sti
push
add
rcrl
pop
or
jg
stos
addr16
push
outsl
adc
das
mov
sahf
mov
inc
pop
add
inc
leave
push
adcb
es
sbb
lea
mov
cli
xchg
sahf
in
cmp
das
mov
add
test
ret
jae
int3
jne
jge
push
movl
lods
inc
popa
sub
and
add
and
fs
sarb
or
dec
outsb
sahf
pop
jmp
mov
sahf
cld
mov
xlat
gs
in
and
std
jl
cmpsb
dec
cmpsb
add
cmpl
jge
sahf
inc
mov
pop
mov
jecxz
imul
std
nop
xchg
jne
xor
pop
sahf
jl
mov
inc
pop
cmp
or
push
xor
jmp
orb
sbb
sub
shlb
mov
test
xor
lret
mov
push
and
mov
arpl
jbe
lahf
cli
scas
aad
ret
mov
push
sbb
lea
cwtl
and
incl
sub
nop
int
mov
mov
xchg
stc
push
or
rcrb
push
pusha
ds
and
sahf
xchg
out
out
js
orb
dec
jne
sbb
cltd
dec
sahf
pop
loope
sub
sub
inc
xor
mov
repnz
sahf
dec
dec
mov
lods
sahf
cs
lret
pop
imul
sub
lock
add
jae
or
out
repnz
out
xor
mov
testl
roll
jmp
lock
mov
inc
jnp
nop
sahf
pop
adc
mov
sub
sti
aad
inc
pushf
mov
pop
int
pmulhw
movsl
nop
dec
adc
sbb
inc
shrb
push
daa
cli
push
sahf
imul
xchg
inc
pop
xchg
insl
cmpsl
loope
in
or
cli
mov
rcrb
cltd
iret
mov
iret
movsb
fdivp
fs
jns
and
ljmp
aad
jmp
ret
movsl
sahf
mov
ljmp
in
sarb
test
mov
pop
cwtl
or
sbb
jnp
inc
xor
mov
mov
in
aam
push
aad
icebp
pop
push
sbb
xlat
or
lcall
xchg
and
or
in
cmc
dec
ds
adc
pop
cs
or
mov
pop
aas
lcall
add
cmpsl
shl
stos
and
lret
popa
lahf
out
dec
fldenv
shlb
pusha
dec
leave
stos
lret
out
in
lahf
test
push
jo
sti
add
add
mov
out
call
xorl
xchg
or
jae
and
and
push
pop
out
ret
cmpsl
std
cmp
in
cwtl
daa
add
xor
pushf
push
mov
mov
push
ljmp
jp
sbb
in
and
aaa
mov
lret
pop
imul
sahf
push
ljmp
xchg
sti
mov
lahf
data16
insb
sahf
insl
add
and
mov
xchg
add
out
lcall
jmp
mull
jmp
sahf
and
daa
mov
call
jns
sub
cmp
inc
pop
arpl
outsl
cwtl
push
pop
leave
iret
int
dec
cmp
cli
div
and
inc
inc
adc
dec
cmp
les
lods
cld
nop
jmp
pushl
test
xor
add
push
fmull
out
lock
jae
imul
sbb
lahf
sub
aad
adc
ret
xor
mov
aas
sbbb
cmp
sahf
int
sub
pusha
add
sahf
mov
inc
jmp
mov
ret
sti
jle
sbb
cmp
mov
negl
push
mov
aad
mov
sub
mov
pushf
mov
xor
jmp
out
int3
xor
xchg
mov
push
dec
dec
fstpl
push
fwait
std
mov
repz
sbb
xor
xchg
rorl
and
add
mov
push
clc
jp
fistps
sub
imul
sub
inc
and
out
adc
test
dec
sahf
xchg
stos
jl
cmpsb
test
ret
mov
scas
jo
pop
clc
mov
outsl
lds
fimuls
add
pusha
sahf
fisubl
movb
aad
jns
adc
dec
stc
sahf
pop
adc
cld
pushf
pop
or
pop
jge
nop
out
push
jp
inc
add
mov
sahf
enter
mov
mov
adcb
cs
repz
loopne
mov
popf
mov
ja
pop
sahf
aam
adc
data16
mov
mulb
sub
cltd
push
test
xchg
sahf
cmc
insb
dec
pop
popa
repnz
mov
das
fistl
sub
jecxz,pt
loopne
pop
sahf
mov
pop
lret
xor
pop
mov
dec
xchg
ljmp
inc
sub
lahf
sub
adc
gs
xchg
jp
scas
test
cmp
aam
push
mov
pushf
jae
in
xor
jno
lods
or
cltd
dec
out
lahf
jle
mov
sahf
lock
fsubs
out
aam
xor
sub
jbe
mov
outsl
insb
int3
pop
jle
and
push
mov
add
test
out
mov
jae
sahf
pop
add
xor
nop
sbb
addr16
push
faddl
nop
cmpsb
outsl
pop
sahf
mov
test
cmp
mov
add
inc
fstps
idiv
lcall
push
loopne
aam
into
out
xchg
xor
and
sahf
adc
xor
xor
cmc
les
fcompl
mov
outsb
in
cmp
mov
add
pop
ficomps
adc
stos
pop
fisttpl
push
push
aad
nop
adc
sahf
out
pusha
add
aaa
aas
cwtl
pushl
or
dec
cmp
lahf
and
leave
and
sbb
dec
iret
out
mov
mov
imul
pop
and
hlt
and
pushf
mov
stos
out
xlat
scas
mov
fwait
mov
pushf
hlt
in
loop
lock
cmc
ss
nop
push
and
sahf
add
into
pop
addb
adcl
scas
nop
mov
imul
push
orb
mov
jae
daa
sbb
sahf
or
sub
sbb
mov
or
and
jle
fucomip
flds
pop
enter
jae
xor
sahf
jns
mov
sub
lods
enter
imul
ror
sahf
inc
sbb
bound
xlat
aas
lods
xchg
push
inc
fisubrs
xchg
dec
lret
aas
and
fnstcw
cmp
ja
les
inc
adc
xchg
sahf
dec
xchg
sahf
inc
fwait
cmpsb
inc
aaa
gs
ret
rclb
jnp
sbb
mov
sahf
pop
in
cmp
sahf
call
jge
insb
sahf
clc
add
mov
pushf
dec
aam
adc
xor
lahf
dec
pop
out
movsl
mov
jno
aam
sub
pop
test
jo
in
sahf
inc
lods
mov
jns
jb
les
mov
orb
sahf
loop
mov
in
arpl
sahf
push
test
mov
pop
stos
sahf
loop
cli
add
sbb
stc
out
pop
mov
sahf
sub
cmp
mov
cmpsl
mov
call
out
pop
and
sub
adc
scas
add
sbb
fisubrs
jns
mov
pushf
sbb
out
add
or
mov
adc
xchg
push
and
add
inc
lret
push
aas
cs
jae
sahf
pop
xchg
popa
out
js
test
faddl
fimuls
sahf
mov
daa
loop
sahf
xor
mov
pop
lods
bound
lret
into
mov
sahf
cli
add
pusha
sahf
out
dec
test
dec
xchg
loopne
sahf
or
leave
push
mov
cwtl
sahf
in
icebp
inc
mov
lods
iret
shrl
fisubl
cwtl
mov
mov
fdivr
loopne
iret
and
int3
rolb
sahf
ror
sub
in
or
stos
xchg
mov
stos
adc
call
cltd
iret
iret
fstpt
xor
mov
bound
jmp
test
sub
mov
jno
sahf
ja
adc
imul
sbb
add
pop
inc
int3
fwait
sahf
xlat
gs
rorl
mov
loopne
aas
insl
das
pushf
inc
jg
orl
mov
gs
out
rcrl
jo
push
icebp
push
loope
in
add
push
test
mov
fs
pop
mov
mov
cmc
jbe
in
lea
pop
les
sahf
xor
jmp
jle
add
out
stos
jo
pushf
xor
inc
sbb
dec
or
cmp
mov
jno
scas
cwtl
popf
mov
jnp
pop
lcall
xor
cwtl
pushf
adc
jo
loop
sahf
insb
ljmp
sahf
test
sub
scas
sahf
fadds
pop
add
inc
inc
sahf
or
or
xchg
rclb
adc
rorb
sahf
scas
add
pushl
idivl
es
dec
mov
mov
mov
pushf
adc
jmp
pop
sbbb
jmp
ret
sahf
roll
jmp
adc
mov
jb
push
into
sahf
rorb
xor
jmp
sahf
stos
out
loopne
adc
subb
pushf
movsl
addr16
sahf
mov
lock
mov
push
cmpb
dec
xor
adc
fldcw
push
popa
in
rolb
arpl
cwtl
pop
sbb
out
inc
push
or
outsl
xor
ficompl
call
test
sbb
and
ret
and
popf
data16
insb
mov
pushf
adc
enter
pushf
in
cmp
imulb
pop
out
and
lahf
outsl
lods
cmp
sub
mov
inc
lcall
mov
push
jo
sahf
cs
arpl
dec
leave
cmp
mov
mov
xor
jb
sahf
or
add
push
dec
fldt
and
popa
add
subb
lds
sbb
je
stos
inc
idivb
call
sahf
push
pop
fstl
std
sbb
sahf
dec
loop
and
and
ret
je
inc
sahf
aam
lahf
sub
inc
cltd
push
sahf
pop
out
pop
lret
iret
inc
insl
stos
sahf
mov
or
daa
cwtl
enter
adc
or
jae
xor
cltd
adc
mov
mov
jmp
cwtl
cmc
pop
jns
sub
mov
imul
roll
es
mov
xchg
shll
sahf
imul
xor
fwait
sub
sahf
clc
test
js
xchg
push
cmp
sarb
cwtl
sahf
movsb
dec
jae
sub
movsb
ds
loope
ret
pushf
out
push
ret
push
xchg
aam
jg
sahf
add
pop
mov
pushf
cmpsl
dec
jle
or
cwtl
cwtl
adc
leave
and
dec
jge
fcomp
lods
ret
jb
sahf
jbe
push
xlat
mov
outsl
inc
xor
rclb
cwtl
sbb
dec
or
mov
sahf
lods
or
shl
cmpl
out
xchg
orb
in
pop
xor
jmp
stos
xor
adc
xorb
pop
lret
out
lods
dec
pop
dec
push
xchg
sub
popa
lcall
jg
push
jp
into
mov
call
les
inc
mov
clc
sbb
xor
jbe
mov
loop
inc
sahf
mov
push
sub
sahf
dec
push
jno
scas
xchg
negl
jbe,pn
ret
sahf
lds
fs
sahf
lret
out
daa
addb
adc
xor
mov
aaa
sahf
pop
ljmp
jne
movsl
lret
shll
lea
lcall
je
pop
jmp
mov
sahf
or
scas
fildll
mov
jp
dec
jge
lret
push
inc
adc
sub
lcall
std
inc
das
and
pushf
push
popa
pop
add
push
jecxz
in
movsl
mov
test
lods
cmp
bound
pop
push
imul
and
jmp
mov
sahf
dec
dec
cmp
aam
dec
adcl
mov
jnp
inc
push
movsl
pop
sahf
sbb
test
dec
test
sbbl
xchg
and
sahf
adc
nop
lcall
dec
mov
sahf
shll
mov
mov
jp
into
lds
sub
sahf
xchg
pop
dec
adc
mov
sahf
xchg
shrb
dec
jg
cld
les
or
fstps
xor
xchg
dec
sahf
jp
jbe
movsl
cmpsl
sub
or
mov
outsb
or
out
insb
push
lea
sahf
stc
sbb
mov
sahf
shlb
or
and
divl
pop
and
repnz
mov
sahf
lea
push
ljmp
in
pop
ret
add
lret
sahf
push
mov
mov
lcall
fsubrp
sub
push
dec
rorb
lret
sahf
xor
dec
sbb
outsb
xchg
xlat
sahf
lcall
bound
sbb
aam
rcll
adc
pop
fistl
imul
stos
repnz
and
call
stos
mov
push
xchg
xor
lahf
pop
jecxz
ljmp
pop
fidivs
in
rolb
xchg
bound
aam
sahf
push
push
into
and
sahf
vmovaps
sahf
fs
mov
pop
shlb
jge
fs
jno
sahf
push
mov
call
jb
fildll
sti
sahf
cmp
lcall
sbb
cmpsb
scas
test
imul
outsl
pop
sahf
pop
mov
push
pusha
cmp
out
es
sub
xchg
ja
les
sahf
cmpl
dec
inc
sahf
adc
std
loop
fwait
or
xor
push
lea
hlt
or
outsb
fldenv
pushf
mov
push
or
clc
adc
mov
xchg
cwtl
lock
out
and
xor
es
lret
sub
aas
cld
dec
mov
gs
sti
shll
dec
adc
xor
in
std
cld
push
mov
gs
stos
mov
sbb
xchg
rcr
int
and
rolb
lret
push
mov
mov
adc
fs
or
dec
lret
sub
cltd
mov
shl
inc
dec
std
ja
and
cs
mov
jnp
movl
pushf
mov
mov
sahf
pop
cmc
jp
push
hlt
or
mov
movsl
imul
les
add
mov
add
pushf
inc
sahf
lahf
adc
lods
pop
mov
call
notl
inc
pop
flds
repz
lahf
sahf
leave
fbld
out
push
es
cmpsl
lds
les
movsb
das
cmpsl
sahf
js
hlt
aaa
sub
xchg
ret
adc
aad
mov
sahf
mov
jne
cmc
push
add
repnz
sbbl
mov
add
or
fld1
mov
fcomp
sahf
mov
cltd
pop
lahf
sahf
mov
jl
xchg
sahf
inc
inc
test
movsb
std
sub
fs
jmp
shrl
iret
mov
adc
xor
int3
rclb
ret
popf
push
mov
xchg
inc
mov
imul
or
xorb
sbb
fsubrp
loope
xor
filds
cwtl
imul
adc
pusha
aam
or
adc
sbb
dec
out
pop
sahf
jl
cmpb
mov
sub
sub
fs
mov
push
aam
repz
pop
lea
cmp
inc
ret
neg
mov
pop
mov
adc
cltd
ja
cmpsb
lds
xor
call
pop
arpl
inc
mov
outsl
add
jge
cmp
out
adc
mov
inc
or
sbb
stos
add
repnz
xlat
mov
negl
inc
adc
and
fwait
loop
leave
cmpsl
repnz
cltd
filds
sahf
sbb
int
sub
pushf
hlt
test
pop
jecxz
cwtl
ret
cmp
fdivs
jg
pop
cmp
test
xchg
out
pop
xchg
clc
and
lahf
mov
outsb
adc
push
sahf
in
rorb
dec
daa
movsb
rcrb
mov
cli
fstpl
jbe
jns
sahf
faddl
test
ss
push
popf
xlat
pop
je
add
call
out
lret
in
sahf
cmpsb
push
stos
ror
mov
iret
mov
sub
std
cmc
xlat
mov
push
movsb
cwtl
cmpsl
mov
decl
inc
test
lds
dec
lret
mov
shrl
rclb
mov
daa
sahf
movswl
fiaddl
jns
pop
in
xchg
mov
lret
or
cmp
sahf
inc
add
call
lods
shlb
jecxz
push
out
fsubr
movb
out
sbbl
test
push
sahf
and
out
adc
into
cmp
jnp
outsb
push
or
jne
pop
data16
add
lds
jp
mov
sahf
shll
push
pop
xchg
or
cld
xlat
adc
push
out
cmc
imull
mov
mov
xchg
sahf
mov
add
outsl
pusha
daa
push
mov
movsl
mov
push
jecxz
sub
sahf
rcl
jmp
xor
cmc
sahf
loopne
push
addl
jmp
jp
aad
sub
mov
sub
adc
lds
ficomps
loop
or
pop
jne
xchg
jbe
rclb
pop
fldl
repz
ds
icebp
push
in
sahf
mov
jmp
negl
repnz
mov
xor
cwtl
jo
das
mov
mov
sahf
in
lret
lods
call
sahf
fnstsw
cmp
and
scas
xchg
dec
addb
and
loopne
mov
mov
test
test
push
inc
lahf
mov
push
fwait
sahf
cmp
fstl
pop
jns
sbbl
lcall
pop
mov
lahf
sarb
out
pushf
xchg
jne
pop
xor
xlat
sbb
cmp
dec
inc
xchg
sahf
jge
mov
bound
les
jns
in
sahf
lret
mov
mov
mov
sahf
jne
aas
repz
mov
sahf
xorl
in
sahf
cmp
arpl
mov
add
imul
divb
insl
jge
sbb
pop
adc
sahf
push
hlt
lret
mov
cmp
sahf
mov
or
pushf
out
jno
adc
std
iret
cwtl
es
pop
sahf
fdivrs
dec
pop
ret
cs
mov
push
sahf
mov
add
daa
cwtl
xor
pop
repnz
xlat
mov
std
sbb
aam
dec
setg
sahf
jnp
mov
push
jmp
out
push
sub
out
jae
or
push
push
pmaxsw
mov
aas
push
push
adc
push
xor
push
scas
les
lds
cs
push
sahf
inc
sbb
dec
bswap
mov
daa
arpl
rclb
sahf
mov
movsb
mov
ds
cmovle
dec
sahf
fsubp
hlt
shr
orl
sbb
lods
out
sahf
mov
sub
repnz
iret
sahf
dec
cld
jae
in
sahf
mov
xchg
and
js
rcr
xlat
and
shll
cld
pop
aam
sahf
xchg
aas
add
push
fldt
pushf
sbb
and
push
push
sahf
xlat
adc
and
sub
or
adc
cmp
pop
das
sahf
lea
lcall
or
cli
fbstp
mov
mov
stos
jmp
fists
add
pop
xor
mov
cmpsl
mov
mov
ret
stos
dec
and
lret
xor
adc
cltd
nop
pushf
das
cwtl
and
stc
shr
mov
out
sbb
jb
mov
psubusb
jl
test
pop
ds
sbb
std
mov
mov
aas
mov
xor
inc
jae
ret
cwtl
insb
sbb
ljmp
sub
bound
cwtl
dec
push
ret
and
sbb
sbb
lret
in
sahf
dec
cmp
xor
shlb
ja
mov
ret
pop
or
mov
sahf
jp
mov
mov
mov
add
out
out
sahf
dec
roll
push
xor
aad
mov
mov
into
xlat
jp
jmp
jne
js
adc
xchg
xchg
loopne
adc
jecxz
test
lahf
cmp
lods
movsl
aad
sahf
push
cmp
mov
mov
repnz
xlat
cmp
inc
ljmp
lea
in
popa
xchg
add
sahf
call
push
sahf
movsb
jge
dec
sbb
push
shlb
add
adc
fdivrl
mov
std
adc
pop
inc
imul
jne
lss
fsub
ret
xchg
stos
movsl
dec
sahf
xchg
out
ret
fwait
cs
pop
or
aam
jge
in
cwtl
sub
xor
ds
dec
add
push
pop
rorl
sbb
scas
or
sahf
cmp
lcall
or
fisubrs
subl
mov
shlb
add
push
movsb
in
pop
jmp
mov
jbe
push
add
loope
and
leave
xor
test
cltd
nop
data16
push
scas
cmc
aad
xchg
mov
mov
or
sub
add
pushf
icebp
das
adc
pop
and
push
idiv
jmp
lock
outsl
adc
xchg
adc
sar
mov
rolb
daa
sbb
xchg
fdivrp
leave
sahf
push
insb
imul
adc
lds
cltd
sub
cmp
inc
jg
dec
inc
mov
inc
outsl
and
rcrb
jp
sahf
jne
std
or
mov
sub
ja
aam
sti
orb
cmp
mov
stos
xchg
setle
inc
mov
les
cwtl
push
inc
lds
movsb
cmp
or
scas
lahf
mov
data16
push
sub
sar
or
cwtl
xchg
inc
or
dec
scas
lahf
xor
sbb
lods
lret
je
pop
push
fmuls
sahf
cmp
push
inc
pop
stos
pusha
mov
iret
loope
sbb
out
push
mov
mov
xchg
std
cmpsl
adc
and
es
sahf
inc
inc
xchg
movsl
hlt
xor
loop
dec
mov
inc
lds
adc
ret
nop
pop
fdivrl
pusha
adc
sbb
add
outsl
les
sahf
insb
out
cmp
adc
fnstenv
mov
and
gs
in
pop
rcl
sub
inc
lahf
inc
outsb
mov
cmpsl
sub
adc
pushf
push
movsb
xchg
jno
mov
xor
mov
mov
xchg
pop
es
or
push
xchg
sbb
subl
mov
out
mov
dec
xchg
sahf
ljmp
gs
sub
pushf
xchg
pop
lahf
push
xor
or
cmp
cwtl
adcl
es
sti
jg
jbe
sahf
or
adc
pushf
sbb
nop
out
idivb
mov
cmp
sbb
mov
aad
jb
inc
sahf
pop
cmp
push
sahf
subl
stc
lock
or
aam
je
int3
adc
and
jno
xor
cmp
add
es
add
cmp
cltd
jbe
dec
and
cwtl
inc
sti
adc
out
and
roll
pushf
cmp
dec
sbb
pop
call
arpl
or
pop
sahf
in
add
nop
sub
mov
sbb
cli
adc
stc
stos
rcrl
clc
mov
sub
mov
arpl
fs
add
mov
xchg
sahf
test
imul
and
adc
outsl
scas
nop
pop
push
mov
cmp
sub
sahf
jbe
or
repz
sahf
in
sub
mov
in
out
push
push
ja
scas
stos
adc
and
fwait
inc
out
or
incl
outsl
pop
cwtl
mov
sub
roll
into
popf
imul
aas
or
aam
cwtl
or
xchg
sbb
lahf
jbe
dec
inc
xor
fldcw
loop
fildll
jmp
xchg
pop
cmp
or
adc
sahf
add
xor
sahf
pop
and
xchg
mov
fwait
push
sahf
inc
mov
je
lcall
fidivs
xor
jmp
repz
sahf
mov
jg
clc
cmp
mov
outsl
fdivs
mov
xchg
and
or
loope
shrb
add
and
arpl
mov
mov
aas
jbe
pop
inc
aad
jmp
clc
xchg
test
test
imul
adc
xchg
sbb
push
inc
dec
sahf
cmp
jbe
cmp
mov
jnp
dec
out
xchg
dec
lcall
sahf
push
or
and
subl
mov
sahf
shll
scas
sahf
jns
jo
enter
sahf
and
mov
adc
mov
cld
push
jne
and
jmp
sub
lret
insb
dec
push
sahf
hlt
fwait
lea
sahf
pop
fidivrl
pushf
sahf
adc
daa
bound
mov
sahf
lea
incb
stos
es
pop
dec
dec
sbb
movl
pushf
repz
fsubs
out
xchg
push
aaa
pop
pop
fldenv
mov
sahf
je
inc
adc
pop
cmpsb
sub
xor
push
mul
jmp
mov
in
cld
mov
add
test
push
jb
addr16
decl
xchg
jnp
jle
ds
aam
aad
jns
lret
sub
pop
cmp
xor
or
inc
push
sahf
nop
ss
add
out
and
cmp
sahf
out
rcl
int3
mov
add
or
in
mov
push
out
mov
or
dec
push
dec
sahf
adc
or
sahf
insl
dec
dec
rorl
lock
mov
cmp
aas
stos
sahf
out
arpl
sub
jl
insl
jge
in
sbbb
xor
or
les
sbb
test
fisubl
lea
mov
cmpsb
pop
sahf
adc
aad
out
dec
jmp
xchg
pop
ja
pop
pop
repz
sbb
push
add
ds
and
in
and
push
testl
jno
sahf
cmp
and
mov
ss
out
stos
int
lea
lretw
in
addr16
sbb
imul
je
enter
sub
jp
mov
nop
bound
ret
xchg
sub
enter
mov
pushf
sbb
mov
or
sub
pusha
inc
and
in
fists
mov
dec
mov
sub
sahf
xor
fimuls
sarl
leave
lock
psllw
jge
cmpl
ds
dec
adc
testb
mov
sbb
xchg
nop
test
loope
sub
sahf
cmp
inc
add
pop
xorl
dec
scas
aad
leave
std
lods
sahf
lret
mov
sahf
enter
dec
sbb
mov
data16
es
lods
sahf
movsb
pop
int3
aad
cld
mov
sahf
outsb
xchg
push
pop
sub
fstps
pusha
ficoml
sahf
pop
xor
push
add
mov
xchg
stos
cmp
bound
cmpsb
sbbl
jb
sbb
repnz
mov
jae
nop
imul
or
gs
dec
pop
cmpsb
jnp
sbb
cmp
sub
test
bound
or
sahf
adc
push
adc
jmp
push
inc
mov
add
inc
mov
shlb
nop
jmp
into
das
pop
dec
sbb
scas
test
subl
inc
and
sub
scas
aad
pop
push
dec
mov
push
cmpsb
jno
das
push
sahf
sbb
stos
ja
pushf
sti
sarb
or
sahf
fstl
mov
xchg
pop
cmc
sahf
cli
adc
xor
mov
iret
jae
rcl
fmul
ds
daa
mov
jmp
sahf
dec
sbb
mov
inc
popa
sahf
in
stc
out
cmp
mov
xor
ret
fcomip
sbb
push
sahf
pusha
aaa
xorl
and
push
jne
imul
jo
adc
das
int
sbb
inc
in
or
insb
mov
cwtl
lret
fdivrl
mov
adc
sahf
stc
lock
inc
dec
test
sahf
int3
frstor
jl
test
and
jge
mov
push
pushf
repnz
rcl
out
lea
jb
pop
pop
sahf
imull
pop
push
outsl
rcrl
cmp
pop
add
scas
sahf
mov
xor
gs
push
mov
cld
push
push
int
outsl
arpl
pushf
movl
adc
cmp
and
cmpsl
sahf
ss
mov
adc
push
into
mov
sahf
test
int3
shlb
xchg
lret
fsts
loop
cwtl
fdivr
jnp
mov
ficoms
adc
jge
fcoms
cwtl
adc
cmovns
nop
pop
mov
lret
test
lret
icebp
movsl
cwtl
jns
imul
cmc
and
mov
jmp
or
cmp
sub
cltd
sahf
aam
ret
and
and
sbb
dec
cld
repz
ror
pop
arpl
fcompl
inc
hlt
jmp
out
lret
aaa
jge
or
sahf
aas
inc
xchg
push
pusha
xor
pushf
adc
cli
push
mov
sbb
in
jae
mov
xlat
inc
enter
pushf
cmp
and
pop
addr16
mov
or
stos
cmpsl
lcall
fisubs
push
jne
int3
cwtl
mov
mov
push
lds
sub
xor
gs
sbb
add
xor
pushf
scas
or
ret
and
add
xor
mov
imul
lds
mov
cmc
jp
movsl
sahf
loope
shll
ret
mov
cmp
das
sahf
setb
sub
jp
mov
sbb
xchg
fwait
cmc
mov
bound
cmpsl
sub
xorb
xor
movsl
or
inc
mov
xchg
inc
cwtl
movsl
iret
sahf
lcall
ss
insb
and
jno
xchg
lret
cmpsb
daa
leave
lahf
sbbb
jne
cwtl
jno
jmp
repz
or
xor
xchg
mov
call
sahf
fnstsw
das
push
xchg
mov
jecxz
push
mov
bound
rorl
scas
inc
sahf
jb
je
es
xor
sahf
mull
xchg
loope
and
jae
cltd
sahf
push
jge
dec
pop
int3
bound
xchg
loopne
iret
and
pop
iret
loop
out
cwtl
cmpb
subb
sub
lds
jecxz
js
jb
and
loope
sahf
loope
add
icebp
pushf
imul
pop
cmc
cmp
pop
aad
dec
aam
and
fwait
stc
sarl
pop
inc
les
sahf
loop
mov
inc
sahf
int3
push
pop
in
ljmp
push
pop
dec
dec
out
fs
pop
testl
nop
cmpsb
jns
or
mov
sahf
jge
cli
dec
and
punpckhdq
sahf
popf
out
insb
sub
or
sahf
xchg
xchg
lds
pop
push
mov
sahf
out
add
popa
mov
or
dec
cmp
incb
int
add
ljmp
or
lret
dec
lahf
xchg
inc
lea
outsb
clc
nop
xchg
jle
cmp
adc
testl
sub
shll
mov
lahf
sub
pop
sub
sbb
pop
cmp
stos
jno
insb
idivb
pusha
stc
jb
sahf
lahf
lods
pop
in
loopne
push
nop
dec
loop
shll
sub
adc
popa
sahf
xchg
cmc
std
cwtl
aad
pop
movsl
cs
mov
stos
movsl
sahf
fimuls
cmp
mov
dec
or
push
sbb
jne
nop
std
test
xor
int
and
nop
fs
cmp
sahf
inc
lea
loop
adc
int3
dec
dec
cmp
sahf
call
xor
out
sahf
ficoml
sub
xchg
insb
jo
pop
dec
xchg
loop
ret
pop
sahf
sarl
xor
sahf
push
test
call
fs
mov
or
scas
orl
xchg
nop
popf
sbb
movsb
das
adc
and
and
insb
sahf
xor
shr
pop
das
nop
fstl
jp
jecxz
sbb
inc
jbe
sahf
fdivrl
nop
and
jmp
dec
out
xchg
xor
push
ljmp
sahf
mov
lods
dec
fldt
push
lahf
push
je
adc
inc
add
mov
jmp
sahf
mov
xor
ret
shrl
jecxz
vmovdqu
aas
cmpsb
sahf
lods
mov
mov
fistpl
inc
sahf
mov
inc
jp
insb
pop
pop
sahf
xchg
sub
mov
lcall
sahf
sahf
and
nop
into
mov
fdivrs
jg
mov
add
cmc
xorb
pop
lds
xor
sahf
add
in
sub
repnz
xchg
add
pushf
xchg
fisttpll
movntq
and
and
jno
cmpsb
xor
mov
pusha
mov
movsl
test
xchg
and
mov
out
pushf
sahf
inc
jae
jnp
jge
fcomps
negb
icebp
cmpsl
cwtl
leave
ret
shrb
mov
xchg
test
push
out
push
mov
lock
movl
in
sti
jmp
iret
test
xor
insb
adc
ss
xchg
or
rcl
add
mov
sarb
lods
daa
dec
mov
imul
pop
cwtl
or
iret
call
cmp
sbb
jmp
and
testb
jnp
outsb
cmp
shl
mov
sbb
mov
sahf
in
sub
negb
les
pop
dec
lods
fcomps
jle
or
bound
lea
xchg
int3
xchg
loope
pop
lods
pop
mov
daa
shll
mov
and
mov
push
dec
push
movsb
insb
out
dec
ljmp
dec
cmp
xchg
aad
test
lods
pop
lea
mov
shlb
js
mov
xor
mov
pusha
or
adc
mov
cmp
xchg
xorb
insb
ret
jne
daa
pop
out
push
jmp
rcrb
xor
sahf
pop
jno
in
leave
sti
push
and
lahf
jge
and
nopl
movsb
jmp
lds
dec
add
and
leave
jae
stos
sahf
sbb
xchg
stc
sub
jle
andb
dec
inc
pop
or
dec
pop
push
mov
sahf
test
pop
sbb
test
sahf
fndisi(8087
adc
lods
jp
and
add
popl
icebp
jmp
sahf
sub
jno
xor
mov
push
out
xlat
into
mov
mov
jmp
sahf
or
popf
xor
xchg
adc
loope
movsb
pop
and
and
lods
dec
sahf
jae
xchg
cmp
cmp
ret
jns
adc
stos
cmp
mov
inc
test
sarb
ret
out
or
les
xlat
add
inc
cmpsb
push
in
sahf
mov
sti
call
cld
jbe
pop
aam
sahf
cli
jb
add
fcomps
ds
xchg
test
in
xor
cmp
xor
bound
fwait
cltd
mov
outsb
push
sahf
cmp
aad
cmc
scas
inc
mov
test
xor
cmpsl
mov
aam
shr
or
xchg
dec
add
sbb
sub
inc
cmpl
cmp
iret
xchg
lahf
in
repnz
xchg
pop
sbbb
mov
into
sbb
nop
js
pusha
xchg
ret
call
dec
adc
pop
inc
dec
in
mov
dec
fiadds
stos
loop
pop
mov
test
int3
pop
cmpb
pusha
mov
test
test
out
test
mov
mov
push
and
mov
cmpb
xchg
leave
mov
push
sahf
jmp
fisttps
in
mov
or
imul
sahf
divl
mov
andb
push
test
in
arpl
pop
lea
sahf
popaw
xchg
adc
sahf
inc
jp
dec
or
pop
mov
sbb
xlat
push
sahf
cmp
mov
mov
leave
or
repz
das
in
out
sahf
xor
jnp
stc
js
sahf
dec
cmp
mov
std
ss
sahf
ljmp
nop
mov
sbb
cmpsb
lahf
fnsetpm(287
and
cmc
sahf
in
out
dec
xchg
jmp
inc
sahf
jmp
cmp
rcrb
in
cmc
lahf
push
aad
les
push
sub
data16
lahf
inc
or
push
mov
mov
in
movsb
fstpl
pop
fsubp
jecxz
movsl
sub
push
rclb
out
ljmp
mov
daa
cmp
and
dec
pop
dec
sbb
loopne
xor
call
jl
sahf
insl
inc
flds
imul
pop
or
pusha
jp
jne
repz
sub
test
xor
xlat
sahf
das
sub
mov
inc
mov
sub
test
mov
loopne
fsubp
test
dec
test
jno
arpl
and
adc
sub
adc
and
movsb
fbstp
loope
rcrb
pusha
jp
push
popa
mov
stos
adc
adc
fdivrl
cli
mov
movb
negl
push
push
mov
lock
add
incl
lds
adc
enter
push
dec
sub
sahf
cwtl
pop
fwait
xlat
dec
jbe
call
jb
pop
imul
sahf
adc
add
ss
dec
pop
fadds
in
sahf
in
cmp
aad
mov
mov
out
push
mov
and
pop
adc
add
mov
cmpsb
sbb
dec
into
xchg
test
fstps
gs
mov
sahf
in
push
cmp
nop
sub
fsubr
fcmovnu
and
cli
mov
push
jb
xlat
aas
adc
adcl
std
mov
sahf
mov
cmp
mov
mov
mov
imul
pop
bnd
push
push
adc
jno
xchg
sub
es
lahf
sbb
lods
mov
sahf
xor
inc
shlb
adc
insl
insb
push
mov
mov
jae
pop
repz
sbbb
ret
pop
filds
inc
jmp
idivl
sub
mov
sahf
jg
add
pop
dec
push
sahf
mov
mov
cs
divl
cmpsl
popa
mov
addb
sub
jb
mov
pushf
cmp
xlat
cmp
or
dec
cmp
divb
test
jmp
std
mov
sub
adc
rol
test
jnp
das
fsubrl
sti
movsb
loop
pop
inc
outsb
sahf
pushf
into
pop
push
sbb
sahf
fs
mov
leave
das
test
sahf
jmp
xchg
mov
cs
std
out
adc
ja
ficoml
jg
sbb
pop
rcrb
sub
mov
xchg
aad
in
out
sahf
movsl
jne
mov
data16
sub
in
sahf
adc
aad
pushf
insl
push
add
and
sbb
mov
sub
cwtl
fsubp
inc
xor
and
sahf
push
cltd
out
sahf
fistl
int
das
dec
aas
jle
hlt
loop
push
jne
pop
lcall
cli
mov
cmpsl
cltd
test
add
cmp
cmp
pop
outsb
xor
pop
sbb
push
pushf
test
push
pop
lahf
lcall
aas
jle
pop
out
loopne
in
mov
leave
cmp
jns
or
adc
es
add
xlat
dec
push
ja
out
mov
ret
and
movsb
fcomip
data16
setle
dec
ds
cmpsl
sahf
push
xchg
ss
leave
dec
add
sahf
dec
adc
or
sahf
test
pop
arpl
in
jg
dec
or
movsl
xchg
inc
addr16
mov
cltd
or
and
sbb
sbb
mov
daa
dec
jl
dec
and
lcall
inc
cmp
test
sbb
pop
sahf
xchg
dec
sbb
mov
push
inc
sahf
dec
mov
insb
ret
push
and
lahf
pop
cwtl
dec
push
pop
insl
cwtl
movsl
mov
psrlq
orb
out
aad
sahf
cli
push
mov
pop
sahf
inc
xchg
nop
ud0
dec
sahf
pop
cmpsl
stos
jo
mov
sbb
cli
not
xor
pushf
or
xlat
inc
push
sahf
mov
cmp
fidivl
mov
mov
mov
adc
fs
lock
sahf
sub
call
mov
aaa
push
fsubs
es
lahf
lret
mov
adc
and
insl
cmpsl
sahf
jne
cmc
cli
fnstenv
mov
sbb
ljmp
orb
pop
and
stc
dec
sahf
aam
cmp
cltd
mov
addr16
xchg
and
xor
adc
fcomps
in
sahf
pushf
dec
nop
jp
mov
sahf
mov
xor
lahf
in
mul
popf
das
mov
loopne
fnstcw
lret
push
in
adcl
xor
das
dec
push
adcb
mov
or
inc
dec
mov
aas
subb
jecxz
adc
and
sahf
outsl
sub
sahf
shr
jnp
mov
scas
mov
cmpsl
push
enter
ret
xchg
sahf
cmp
out
pushf
fdiv
sti
jmp
dec
stc
aas
push
cmp
int3
loop
cmp
bound
idiv
ljmp
cld
or
dec
push
adc
mov
inc
push
ja
aaa
mov
jo
or
dec
pop
int3
sahf
add
nop
andb
cmc
inc
popf
in
addr16
sahf
jl
add
dec
pushf
cld
push
sub
pop
xchg
daa
mov
fnstsw
js
test
ja
lcall
mov
arpl
mov
mov
mov
outsl
stc
inc
sahf
dec
dec
mov
movsl
sahf
lret
into
adc
ds
out
ja
inc
ret
mov
mov
scas
jg
nop
lods
cs
faddp
stc
les
adc
iret
repz
mov
loop
cmpl
sahf
adc
xchg
out
cmp
pushf
xchg
jae
sub
push
shl
sahf
push
decb
ss
adc
fs
and
aas
sbb
xor
repnz
fistpll
cs
fbld
add
dec
pop
arpl
mov
xorb
cmp
enter
or
mov
mov
mov
xor
ljmp
dec
add
cmpl
iret
push
pop
div
mov
mov
mov
xor
push
push
test
ficompl
jge
in
mov
push
jnp
pop
lds
sub
sub
fbld
mov
stos
push
mov
ss
mov
bound
test
sahf
shl
add
xor
inc
inc
inc
xor
inc
out
lahf
fdivr
inc
jmp
sub
sahf
loope
lods
xor
jmp
dec
lods
into
cwtl
pop
xor
pop
mov
push
sub
sahf
std
and
sahf
arpl
jge
pop
test
sahf
or
push
out
addr16
inc
jb
mov
sahf
mov
sub
mov
cld
adc
mov
mov
call
fbstp
jo
jb
out
fsts
sub
mov
inc
mov
dec
push
and
lret
pop
xor
push
subl
lret
out
mov
fldl
sarb
cmp
dec
mov
shl
loope
mov
leave
jmp
or
cmc
in
gs
dec
lahf
mov
sub
imul
mov
lahf
mov
jl
fwait
hlt
adc
cmp
xchg
in
mov
aam
pop
push
sahf
scas
iret
test
int
inc
xchg
mov
sbb
rcrl
aad
or
subb
loop
dec
or
pop
jp
add
stc
push
lret
add
adc
push
jb
sahf
inc
cmp
rcrb
adc
sti
dec
cwtl
movntq
out
mov
add
stc
test
pop
mov
or
jmp
sahf
mov
adc
xorl
sahf
cmp
aas
mov
nop
inc
lea
mov
out
add
xlat
in
pushf
mov
dec
mov
div
xchg
sahf
mov
movsb
push
loope
inc
inc
xor
in
les
sahf
stc
getsec
pop
xchg
xchg
sbb
sahf
and
pop
and
cmpb
arpl
testl
and
mov
js
pop
sahf
inc
xor
sub
out
sti
jmp
cmp
out
fbld
add
fcoms
add
stos
das
sbb
ret
call
xchg
pop
imul
inc
mov
add
int3
int
inc
sahf
or
ret
cld
pop
iret
scas
xchg
jb
push
adc
sub
lahf
fbld
adc
or
cwtl
or
iret
mov
push
insb
sahf
cwtl
enter
incl
ss
test
jno
cwtl
hlt
pop
movsb
pusha
mov
jg
sti
push
mov
mov
pop
jns
pushf
add
test
out
pop
lods
sahf
or
mov
jns
sub
lcall
in
pop
lea
sahf
addl
lret
push
mov
jge
pcmpeqw
scas
adc
add
cmp
ret
and
data16
fldl
sahf
push
cli
sub
and
lahf
and
jle
out
push
aam
ljmp
cmpsb
inc
mov
outsl
add
mov
dec
rol
cmp
and
lods
lahf
or
movl
hlt
sbb
push
xor
sbb
cli
lock
add
push
xchg
aas
fdivrl
hlt
enter
jnp
mov
mov
mov
nop
stos
je
mov
dec
lahf
fldcw
xchg
mov
rcrl
push
arpl
dec
mov
cltd
setb
and
cwtl
xlat
addl
xchg
sahf
jl
shll
out
scas
jns
sub
in
je
fucomi
cwtl
sbbl
insb
lods
jns
sahf
arpl
sbb
pop
mov
sahf
je
add
or
movsl
or
xchg
inc
jmp
xor
popa
call
mov
sahf
icebp
into
ret
daa
push
adc
test
mov
mov
ja
lahf
xchg
test
lock
in
push
dec
or
sahf
pop
cmp
imul
ljmp
jge
iret
clc
dec
mov
pop
inc
sbb
pop
inc
sahf
jg
sbb
clc
pop
xor
jl,pt
fisubrl
shrb
jb
nop
dec
mov
mov
and
sahf
sub
lret
hlt
repnz
fidivrs
mov
outsb
cmp
sbb
push
mov
mull
stos
out
loopne
sahf
shlb
xlat
mov
inc
jne
dec
mov
nop
and
mov
mov
loopne
aas
sbb
xchg
jbe
lret
sahf
dec
mov
mov
sahf
dec
push
inc
xor
leave
or
or
sahf
cmpsb
inc
mov
and
pop
push
push
mov
les
sub
hlt
jecxz
mov
jbe
cmc
outsb
mov
dec
popf
xchg
nop
cmp
pop
adc
test
pop
or
sahf
neg
dec
mov
jo
cmpsb
adc
jecxz
jg
dec
aas
mov
xchg
mov
enter
xchg
jl
in
popf
lahf
cli
dec
mov
mov
mov
insb
jg
adc
loopne
lahf
jb
jnp
cs
stos
rorl
arpl
test
dec
fldt
sahf
push
or
scas
mov
jb
insb
pushl
ljmp
and
ja
cwtl
shr
xor
outsb
pop
pop
jnp
jae
add
xchg
add
or
imul
jp
je
pop
mov
sarl
ljmp
pop
mov
sbb
int3
dec
lea
inc
push
repz
jg
xchg
loope
lahf
add
nop
je
push
xchg
imul
xor
int3
pushfw
cmp
sahf
mov
mov
add
js
push
or
lods
aas
das
out
adc
and
or
push
xchg
push
sahf
jecxz
daa
jae
mov
aad
sti
negb
arpl
add
xchg
jp
jecxz
movsb
roll
aad
mov
inc
jmp
jnp
mov
outsb
dec
lock
pop
and
mov
addr16
or
sete
cli
dec
sbbb
mov
cld
fisubrs
or
jno
xchg
int
adc
dec
inc
pushf
push
sbb
jmp
mov
and
sti
adc
es
cmp
pop
or
sub
push
mov
fmul
mov
mov
or
stc
lcall
jg
ljmp
fs
inc
sub
sbb
cli
into
lahf
hlt
mov
jnp
lock
subb
xchg
daa
jl
ss
cltd
xchg
outsb
stc
decb
jge
movl
in
call
xlat
sub
cmpsb
arpl
sahf
je
sti
cmc
fisubrl
xchg
xlat
mov
outsl
stos
cmpsl
je
xchg
lock
add
dec
sahf
int3
adc
rclb
imul
push
and
jmp
mov
lahf
loope
ds
roll
into
ljmp
ss
int
sahf
mov
lds
dec
mov
push
push
repnz
mov
mov
mov
fwait
mov
push
sbb
adc
lret
scas
adc
icebp
es
mov
ret
rcr
stc
gs
jno
xchg
lds
sahf
rorb
dec
int
cwtl
dec
xchg
add
lahf
mov
xchg
inc
sahf
mov
xor
lea
sahf
enter
pause
push
sahf
or
in
and
popa
sahf
stos
pusha
rol
loopne
fs
sahf
das
sub
jmp
xchg
lahf
sti
dec
xor
adc
and
in
fisubs
in
dec
hlt
xchg
xchg
inc
add
push
push
ds
and
push
jmp
mov
std
lea
sahf
leave
iret
out
in
dec
ljmp
fcoms
into
mov
sahf
leave
jno
shll
aaa
mov
cmc
fsubrl
outsl
lods
mov
pop
cmp
jge
fstps
cmp
mov
push
sahf
addr16
roll
stc
lods
cltd
cmpsb
out
jmp
dec
cwtl
adc
outsl
in
aaa
fisttpll
pop
andl
les
sahf
mov
pop
stos
mov
enter
orb
shrl
rorl
xor
sahf
out
inc
xchg
jo
fucomi
sahf
or
sti
or
lahf
push
lea
xor
movsl
cmpl
mov
out
das
jnp
adc
cmp
sub
push
nop
push
jmp
gs
xor
cwtl
mov
and
sahf
cmpl
inc
ret
and
shlb
aad
pop
rcl
push
das
sub
and
xor
mov
dec
push
and
rol
mov
repnz
cmpb
shr
outsb
pop
adc
and
xor
or
setle
lahf
sbb
cli
pop
sahf
scas
cld
push
sbb
push
mov
fs
ret
mov
push
mov
outsl
xorb
imul
lcall
push
sbb
add
mov
sahf
mov
lea
xchg
adc
mov
not
mov
and
hlt
sahf
bound
sahf
add
cmp
in
xor
mov
mov
faddp
and
nopl
fbstp
inc
sti
sahf
pop
adc
and
push
pop
subb
das
mov
fcompl
daa
lock
xor
mov
sbb
add
aas
testl
leave
les
lret
lods
bound
mov
inc
inc
lahf
sub
scas
adc
jb
into
lods
add
mov
xchg
mov
cmpsb
push
push
inc
sahf
sub
orb
mov
out
or
outsl
mov
lds
xchg
les
mov
sahf
pop
push
xchg
sbb
push
aaa
jns
push
lods
xchg
je
sahf
aam
mov
cld
mov
pushf
and
icebp
shrd
sahf
mov
out
and
fistps
mov
mov
jnp
mov
addr16
sub
sahf
sbb
nop
aam
adc
fdiv
cmpsb
ret
sub
fs
or
jmp
cmpb
in
movsl
pop
std
sarb
xchg
jp
sti
hlt
mov
dec
cmp
push
push
mov
ret
je
gs
add
lret
loopne
jb
aad
dec
mov
mov
inc
inc
inc
ss
jae
out
sahf
jmp
dec
lcall
nop
jno
mov
sub
and
cmpb
psadbw
pop
adc
rol
call
stos
push
and
sahf
insl
sbb
dec
inc
pushf
pop
imul
iret
lret
ljmp
pop
nop
gs
pop
cmp
sahf
fstps
and
inc
test
jns
ret
xchg
jge
pop
es
sahf
xchg
or
daa
sahf
add
adc
call
movsl
imul
and
outsl
lahf
in
popf
or
jne
setbe
sahf
fbld
int3
mov
jecxz
inc
stos
leave
jl
add
pusha
mov
stos
xor
adc
sahf
loope
xchg
sbb
test
fdivs
sahf
adc
adc
daa
lret
pop
loopne
das
mov
and
xchg
jmp
pop
fwait
pop
je
sahf
cmpsb
push
stc
mov
sahf
pop
or
lds
sub
xor
aad
and
add
js
jae
out
outsl
lcall
mov
sahf
cld
imul
lcall
pop
xor
fstps
push
xor
in
add
sahf
inc
jmp
out
enter
mov
add
mov
jp
sahf
popf
pop
lods
xor
mov
gs
push
and
mov
inc
sub
add
aad
inc
std
imul
out
lea
gs
jnp
aas
jg
dec
fisubs
push
mov
test
inc
sahf
xor
mov
mov
iret
cmc
xor
in
sahf
push
insl
dec
sub
push
mov
sbb
mov
mov
sahf
mov
jb
pand
push
sahf
out
sbb
xor
pusha
popf
xor
add
push
loope
imull
cmpsl
loop
ret
sub
mov
lds
mov
cmpsl
dec
dec
mov
adc
sub
or
mov
sahf
cmp
jmp
jle
jnp
dec
pop
loop
mov
cmp
pop
insb
jns
fidivs
lods
pop
sub
push
mov
ljmp
xchg
pop
jg
sahf
inc
divb
enter
lods
pushf
mov
int
pop
push
adc
inc
in
sub
int
mov
aaa
outsl
test
jnp
aam
imul
addr16
mov
cltd
lock
rorb
pop
ret
popa
pop
sbb
push
xchg
cld
shll
lahf
push
mov
lahf
sahf
fstps
pop
mov
stos
xchg
cs
outsb
and
push
andb
inc
insl
xor
xor
icebp
test
push
lds
push
or
aaa
sahf
fndisi(8087
int
imulb
ret
xchg
bound
sub
push
roll
pop
dec
or
pushf
push
imul
jae
xchg
ret
dec
test
xchg
adc
orb
jecxz
push
out
lods
xor
pop
ret
fadds
push
inc
sahf
dec
in
testb
sti
pusha
ja
cltd
lods
sahf
shlb
rcrl
ret
push
sbb
jbe
add
jb
push
shll
sahf
mov
inc
mov
test
pop
ret
mov
sahf
ret
inc
sbb
jp
jb
mov
sahf
and
sbb
mov
xchg
test
dec
xchg
jae
ds
divl
mov
lret
loop
xchg
sub
mov
out
inc
add
not
sahf
xor
adc
jge
cwtl
stc
push
adc
das
sbb
jg
sahf
mov
push
sub
pushf
repz
mov
and
mov
jb
lock
jecxz
sub
lahf
xchg
test
shr
cltd
bound
add
dec
sahf
loope
add
xor
cwtl
cwtl
rcl
sbb
push
pop
fildll
shrb
dec
daa
xlat
jmp
pop
jmp
jne
and
cwtl
bnd
das
arpl
neg
mov
int
inc
sahf
dec
gs
xchg
sbb
mov
test
jb
aaa
out
out
cmp
xor
fstl
nop
repnz
mov
pop
push
stos
cli
and
sbb
imul
jmp
sub
and
pop
out
fldenv
sahf
icebp
inc
fucom
add
inc
mov
adc
xchg
cld
rep
push
aad
xor
mov
dec
cwtl
addr16
sub
push
out
cld
mov
pop
hlt
bound
add
out
mov
jmp
loope
pushf
enter
dec
pop
sbb
popa
inc
das
int
aas
shl
sub
sub
xor
je
cmp
mov
divl
push
rcrb
lock
dec
pop
mov
ljmp
mov
sti
out
inc
and
jg
add
movb
sub
cmp
adcl
popa
add
sahf
stos
add
adc
jb
xchg
in
mov
test
inc
imul
sahf
or
cwtl
sub
lahf
sub
lods
or
decb
sahf
push
mov
outsl
nop
test
pop
dec
sahf
cmp
add
xchg
sahf
movsl
sub
adc
mov
xor
and
movsb
bound
stos
mov
cmp
xor
sbb
sub
arpl
or
dec
or
xchg
xlat
into
sahf
sbb
dec
pop
inc
pop
push
ret
inc
sahf
dec
cmp
call
pushf
pusha
daa
mov
adc
imul
jg
cmp
scas
pop
jbe
es
sub
or
mov
filds
in
repnz
dec
cli
neg
mov
iret
cmpsb
inc
je
xchg
add
xchg
fdivrl
inc
lahf
xor
sarb
mov
sbb
jo
adc
cmp
xor
ret
and
push
sahf
fsubrp
xchg
or
lahf
or
cld
jecxz
add
sahf
xchg
and
sahf
out
movsb
fdivrs
mov
and
sahf
aas
sub
les
xchg
sahf
loop
or
cwtl
jp
aas
out
lret
push
outsb
insb
pushf
fisttps
sbb
sahf
cmp
and
sahf
pusha
inc
xchg
push
and
xlat
movsl
jns
arpl
lods
xor
lahf
bound
inc
popf
sahf
fadds
and
insl
pusha
sahf
cmp
mov
mov
pop
test
ss
add
sub
das
test
fidivs
cltd
cmp
or
sahf
dec
icebp
inc
es
sahf
out
lret
adc
shll
sub
rcrl
adc
sbb
test
lcall
rolb
xor
fsubrl
lods
pop
jg
or
lock
xchg
cs
ficompl
mov
cmp
pop
pop
sarb
mov
pusha
xchg
popf
xchg
mov
cltd
push
int3
jl
xor
push
inc
pop
dec
inc
sahf
fildl
and
and
fcmovnbe
push
shlb
es
sbb
jnp
movsl
and
sahf
xor
sub
stos
das
fstpl
sub
jecxz
ss
fcompl
mov
pop
popf
ret
pop
loope
lds
mov
test
lods
in
mov
fidivl
xor
gs
mov
cmp
push
cwtl
outsl
iret
mov
cmp
xor
mov
jge
pop
and
jo
sahf
int3
xchg
pop
dec
jl
imul
jb
mov
das
in
pushf
add
push
into
mov
cmpsb
popf
and
pop
lahf
jge
mov
movsb
loope
jmp
dec
sahf
sub
int
cmp
loopne
hlt
or
dec
adc
sahf
add
lcall
push
jo
andb
dec
icebp
sahf
pop
movsl
shll
sahf
es
mov
jo
std
sahf
testl
gs
jg
sbbl
je
sub
pop
sub
loope
or
sysexit
cwtl
xor
xor
xor
push
inc
les
jnp
cmpsb
mov
sahf
aam
adc
sahf
shll
add
sahf
jecxz
loope
xor
xchg
or
mov
fidivs
leave
mov
je
rcl
mov
xor
push
pop
jb
int3
mov
imul
push
loope
movups
insb
sahf
int3
dec
insl
jecxz
jmp
or
push
outsb
jbe
cmp
cli
mov
hlt
nop
fdivrl
sub
dec
pushf
pop
aaa
inc
jbe
leave
pop
mov
add
and
inc
sahf
jg
sub
xor
fs
sahf
stc
in
or
roll
lds
dec
int
or
daa
xchg
shrb
pop
push
sahf
and
pop
adc
xor
xor
outsb
test
sub
xlat
push
pop
inc
push
add
sahf
mov
mov
mov
cli
xor
ret
xor
jns
adc
add
adcb
call
movsb
ss
data16
or
mov
ficomps
test
jne
imul
sahf
or
sub
mov
stos
imul
pop
sahf
imul
repz
mov
into
cmp
in
sahf
or
movsl
ror
bound
push
fimull
push
lea
push
sahf
mov
mov
out
sahf
mov
push
xchg
sahf
sbb
dec
fistps
cmp
push
icebp
mov
cmpsb
lods
push
imull
cmp
sahf
addr16
pop
mov
xor
popa
and
jbe,pt
out
je
in
lods
rorl
cli
cmc
stc
outsl
std
sahf
dec
jae
jge
mov
sahf
add
outsb
and
mov
dec
inc
lret
dec
mov
sahf
xor
or
push
jae,pn
addl
jno
and
xchg
clc
sub
xchg
ret
push
sahf
and
push
js
jmp
aas
das
addl
lret
mov
cmc
clc
add
and
rcl
sahf
pop
mov
lea
mov
sahf
or
shrl
aad
or
push
sarl
divb
xlat
add
jnp
stos
fcoms
mov
cmc
imul
sbb
xor
push
mov
icebp
dec
dec
pop
push
cmp
or
test
sahf
popa
fmuls
mov
cmp
es
xchg
sahf
sub
imul
sahf
pushf
ljmp
sahf
int
dec
lods
mov
push
aas
sahf
aaa
fs
sub
sbbl
mov
cli
ret
xchg
pop
xchg
mov
lds
mov
sub
push
jle
hlt
inc
mov
pusha
xchg
notl
lcall
aam
iret
dec
lret
movsb
mov
clc
mov
js
das
in
aas
push
push
sahf
lods
stos
mov
popa
cmpsb
push
sbbl
lock
cmp
lock
xorl
ret
cmc
js
mov
lahf
adc
xlat
cmp
mov
scas
out
mov
push
sahf
lcall
pop
sahf
pushf
pop
ret
adcl
or
sahf
jnp
inc
mov
sahf
lods
testb
mov
adcb
mov
and
insl
test
ret
fstps
dec
sbb
mov
pop
out
mov
xor
ret
mov
loope,pt
push
addb
loopne
lahf
mov
add
inc
sub
jge
pop
jne
in
xchg
jno
mov
fists
mov
fnstenv
out
js
push
sahf
or
xor
aas
push
fnstsw
mov
mov
push
insb
test
iret
pop
jbe
pop
mov
mov
sahf
scas
clc
ret
addl
pop
fstl
cmpsb
out
or
aad
and
pop
xchg
cmc
xor
sbb
sahf
or
lgs
stos
hlt
test
sbb
add
push
ljmp
lods
nop
sbb
das
and
sahf
and
dec
cli
aaa
data16
jb
adc
aas
repnz
js
push
cld
and
sahf
sbbb
inc
out
fistpl
push
sahf
nop
or
xchg
or
into
lret
and
xlat
sahf
call
inc
ja
jae
lods
cmpsb
movsl
mov
cwtl
enter
cli
push
iret
mov
aam
in
or
scas
sbb
stos
rcl
push
lds
arpl
xchg
or
adc
fs
adc
sahf
cmp
pop
jae
sahf
xor
mov
add
or
push
mov
lret
sahf
mov
out
xor
pop
and
sub
shrb
sahf
cmp
call
push
sahf
inc
mov
add
pop
jns
aad
jnp
sbb
dec
cwtl
cmpsl
push
adcb
nop
ljmp
lret
adcb
rorb
sbb
xchg
psubd
pusha
mov
pop
insl
in
gs
push
sahf
add
dec
rolb
push
adc
into
std
sahf
jne
rolb
add
adc
sahf
push
lahf
cmpsl
mov
jg
xor
movd
lcall
sub
into
sahf
xor
sbb
or
adc
pop
push
add
jl
pop
jno
or
fcmove
mov
sahf
into
loope
std
push
jb
scas
sahf
mov
decl
sahf
xchg
out
push
lahf
fsubrp
gs
push
jns
sbb
sub
mov
movq
mov
lds
jno
orl
pop
sbb
cmp
xchg
out
add
dec
fbstp
fsubp
icebp
daa
xor
xor
sahf
movsl
mov
sbb
xchg
sahf
inc
mov
jge
mov
test
in
sahf
imul
xchg
mov
ret
fwait
jp
mov
sahf
in
jl
scas
push
orl
scas
and
xchg
push
pop
out
jno
cmpsb
sahf
xchg
popa
mov
mov
pop
icebp
push
pop
lret
int3
imul
push
push
xor
jne
mov
inc
nop
jbe
and
inc
rclb
pop
idiv
aam
sahf
dec
cmp
dec
mov
or
push
inc
orl
mov
jp
loopne
sahf
jmp
sbb
out
sub
das
mov
imul
test
sahf
dec
pop
sub
aam
into
cs
clc
es
xlat
cmc
icebp
aaa
mov
and
shrl
out
xchg
jne
dec
lahf
mov
cwtl
sarb
mov
pushf
pop
cmc
push
movsb
adc
sahf
jns
hlt
std
sarb
test
pop
sahf
dec
out
dec
addl
sub
push
push
cmp
xor
aad
adc
sahf
add
cs
cmpsl
filds
popa
and
or
ror
sahf
sub
push
lret
push
adc
pop
int3
dec
pop
jnp
mov
lret
nop
mov
lock
fstps
movsb
pushf
sub
and
dec
or
sbb
jp
push
sub
ss
clc
dec
pop
lods
aad
sahf
in
xchg
test
insb
cltd
mov
test
scas
mov
pushf
je
jecxz
add
cmp
cmc
xlat
lret
push
inc
lea
pop
add
sti
sahf
ret
sub
add
cwtl
loopne
mov
adc
aad
shlb
jno
jg
sahf
lahf
lock
sahf
pushf
dec
dec
movsl
sub
call
test
sub
andb
out
jle
and
ret
mov
push
addl
jbe
fisubs
add
shlb
mov
in
das
mov
add
mov
clc
sahf
fnstcw
fdivrl
rcl
sahf
fwait
lods
push
and
mov
mov
mov
lahf
dec
rorl
jl
mov
in
ror
mov
inc
sahf
out
and
shld
mov
jl
sarb
sub
mov
cmp
pop
push
idiv
mov
scas
cld
leave
xchg
mov
roll
ja
repnz
push
aaa
out
pop
sti
cmp
jmp
xchg
movsb
in
sahf
mov
in
add
push
sahf
std
imul
sahf
rclb
xor
lds
sub
out
xlat
jmp
hlt
nop
xchg
cmp
pop
sbb
ljmp
call
mov
loopne
negb
sahf
jecxz
sbb
es
cwtl
add
xor
add
xchg
les
mov
and
mov
sub
mov
aaa
movsb
adc
xor
push
push
movups
sahf
aas
dec
xchg
je
repnz
xchg
jae
ss
dec
sahf
stos
xor
add
inc
lret
aaa
into
cmp
out
aas
loopne
sahf
movsl
fpatan
or
sahf
xor
dec
pop
test
jo
insb
pmulhuw
dec
loopne,pt
enter
sahf
cltd
out
call
sahf
insb
push
repz
jbe
dec
lods
sahf
das
lods
mov
sub
cmp
push
jmp
fists
xor
dec
pop
mov
bound
dec
int3
scas
dec
pop
sahf
hlt
add
negl
nop
fs
bound
in
adc
pop
cs
mov
sahf
fidivrl
sub
sar
cmp
or
je
out
push
cld
sahf
test
int3
push
movsl
pop
push
mov
js
mov
fwait
sahf
fisttps
jno
cwtl
jp
or
lcall
lods
imul
fwait
out
pushf
das
repz
sahf
and
sbb
sahf
ds
loopne
bound
push
pushf
and
mov
mov
cmpsb
ds
sahf
into
xchg
pop
aas
leave
sahf
mov
xor
sahf
push
inc
adc
lods
pushf
push
mov
adc
sahf
fnstenv
pop
fisttps
xlat
and
and
mov
int
sbb
push
ljmp
out
rcrl
pop
sti
outsb
sub
push
sub
insl
sub
push
add
mov
movsl
sahf
sub
ss
mov
stos
push
push
test
rorl
fsubrp
pop
lcall
mov
sahf
shll
sbb
cwtl
sub
in
xor
dec
mov
adcl
subl
mov
hlt
cmpl
xor
xchg
call
lahf
and
sbb
xchg
jmp
nop
test
cmp
sbb
cmpsl
dec
sahf
mov
fadd
mov
adc
or
nop
dec
push
test
sahf
jb
je
adc
jle
jnp
push
jmp
cwtl
cmp
push
hlt
dec
das
xor
jg
sahf
pop
jnp
shll
movsl
jge
xchg
ret
aaa
sub
sbb
sub
addl
jae
xor
push
repz
xor
adc
fwait
pop
dec
and
xchg
lahf
bound
das
sub
arpl
daa
inc
push
cmp
jp
stc
sahf
cmp
add
adc
data16
cld
pusha
xchg
fisubrl
push
into
jmp
roll
sub
dec
adc
or
fstps
cmpsl
xor
aad
sub
mov
jbe
sahf
push
lock
mov
sub
push
lahf
fdivl
incl
cmp
inc
push
popf
jmp
std
dec
sub
xchg
repnz
adc
push
adc
jecxz
stos
xor
pop
or
mov
out
mov
jne
pop
test
ja
push
cs
sbb
fstl
add
dec
in
or
pop
in
ds
cmp
shlb
test
shr
mov
pop
cmpsl
out
inc
shlb
in
std
fcomp
and
cmc
add
adc
stos
pop
xchg
sbb
insb
scas
icebp
mov
fs
dec
and
lods
dec
mov
mov
fmull
psubd
lds
out
stos
dec
sahf
mov
mov
push
test
jmp
inc
lcall
sahf
or
in
add
xorb
sahf
fs
sbb
jb
mov
inc
push
nop
loop
xchg
cld
xor
pop
jo
and
sahf
in
cs
jne
arpl
mov
jo
clc
jnp
lahf
jbe
sbb
jmp
adc
xor
push
cwtl
sar
xchg
mov
int3
lret
dec
mov
mov
adc
sahf
fstpl
les
push
sahf
dec
or
jl
fs
adc
or
repnz
sub
adc
imul
out
fdivrp
andb
adc
xchg
xchg
mov
imul
sbb
mov
xor
cmpsb
jmp
in
in
mov
sbb
stc
sahf
push
test
sub
sbb
sahf
es
xorb
aam
and
movsb
mov
mov
dec
xchg
mov
xor
rorb
and
sahf
mov
cltd
pop
jno
nop
js
push
data16
push
loope
mov
es
sarb
gs
outsb
inc
aaa
xchg
xlat
sub
sbb
jbe
sub
jle
call
dec
and
inc
inc
nop
jo
sbb
dec
sbb
aas
lcall
fcomip
cld
mov
xchg
sahf
mov
jmp
adc
pop
or
mov
jg
mov
mov
jl
mov
pushf
mov
mov
sahf
inc
das
cmc
mov
loop
pop
sahf
xor
rolb
pushf
fadds
and
arpl
call
xchg
pop
or
repnz
fwait
pop
pop
movsb
adc
lock
and
mov
mov
add
enter
sbb
fsubrp
cmp
pushf
dec
adc
push
repnz
sbb
daa
in
sahf
into
push
jae
scas
popf
and
sahf
js
ret
jb
or
cmpsl
inc
pushf
testl
adc
inc
sahf
dec
mov
fistpl
stos
sub
aas
inc
mov
cmpsl
dec
sbbb
cmp
bound
adc
out
sahf
cmp
pop
cmpsl
daa
repnz
mov
ficoml
fwait
push
imul
sbb
pusha
push
xor
dec
gs
loop
xor
lcall
mov
push
xchg
nop
cmp
lret
fbld
push
and
jbe
in
pop
mov
fstpl
pushf
inc
pusha
push
sahf
mov
movsl
or
mov
sahf
inc
mov
aas
popa
js
xor
sahf
dec
je
std
mulb
nop
dec
mov
lret
fstps
sub
lods
mov
push
or
call
mov
xor
rol
adc
cmp
ds
repz
pop
daa
lret
dec
mov
add
and
cmp
jl
pushf
push
or
iret
pusha
mov
mov
into
pushf
inc
lods
cmp
or
mov
ljmpw
jae
jecxz
push
cwtl
xor
sti
outsb
inc
mov
sbb
mov
ret
mov
test
xor
cmp
pop
sbb
imul
sbb
hlt
cwtl
ret
mov
inc
test
pop
pop
push
sahf
xchg
cld
repz
pusha
add
shlb
mov
outsl
or
ficompl
into
mov
adc
fnstsw
insb
sahf
fs
out
cmp
jnp
mov
or
mov
push
fcmovu
or
pop
adc
xchg
inc
sbb
sahf
sub
lods
mov
mov
jns
movsb
mov
mov
arpl
repz
sahf
dec
inc
xchg
and
jecxz
pushw
loopne
int
xlat
aaa
cmp
adc
lret
or
adc
dec
lret
aaa
iret
cwtl
adc
dec
mov
jmp
push
push
add
jecxz
sahf
mov
shll
aad
hlt
jmp
push
cli
or
sub
sarl
lahf
mov
ret
in
sub
mov
fimuls
ficoms
mov
les
pop
fs
fcmovne
mov
xchg
pop
out
dec
sahf
insb
mov
mov
aad
hlt
incl
aas
and
out
mov
aad
iret
xlat
mov
sahf
inc
scas
popf
mov
mov
out
jo
ds
push
loopne
push
pushf
mov
test
int
or
push
cmp
mov
orl
fldt
and
xchg
or
mul
bound
fwait
mov
mov
ficomps
lret
mov
cmc
jg
hlt
addb
mov
ffreep
in
sub
rolb
in
imull
or
xchg
mov
push
scas
push
mov
popf
cmp
pushf
sbb
or
loop
shrl
pop
mov
in
sahf
xor
sub
inc
dec
negb
rclb
sbb
fnstsw
outsb
rcpps
lahf
lods
jns
movsb
sbb
ret
test
mov
inc
out
push
pushf
cmc
das
pop
repz
movsl
daa
sahf
arpl
int3
and
sahf
xor
xor
mov
lcall
test
cmp
dec
jno
cmp
jmp
mov
mov
out
push
jae
sahf
jg
xor
pusha
mov
and
out
aas
bnd
sub
xchg
and
sahf
cmpsb
scas
mov
lret
into
and
stc
add
dec
push
fwait
sahf
pop
or
lock
sahf
insb
mov
mov
mov
adc
add
lcall
loope
mov
popf
aas
call
mov
jae
leave
fwait
lret
mov
sahf
add
xchg
or
lahf
dec
scas
aaa
push
jae
sahf
ret
cmpsl
repnz
or
jl
jo
push
xchg
mov
aam
pushf
adc
ljmp
adcb
jne
jecxz
shrb
scas
cs
mov
push
or
aas
movsl
adc
cmp
test
sahf
fidivrs
cmpb
lds
dec
xlat
push
mov
push
std
fstps
or
xchg
mov
sahf
inc
fldt
aas
dec
sahf
xchg
lcall
nop
push
icebp
jbe
mov
sahf
or
or
clc
jg
testb
cwtl
push
inc
jae
icebp
jg
lds
pop
and
sbb
pop
sub
lock
ds
xlat
xor
lahf
cmp
and
adcb
sbb
mov
jne
icebp
push
adc
push
out
pop
ja
add
out
jge
clc
aad
mov
ret
pop
add
jecxz
ret
iret
inc
sahf
inc
jmp
lock
xchg
add
out
sbb
ljmp
dec
sahf
sbb
sahf
dec
roll
xlat
addb
dec
js
sub
push
test
pop
lahf
aaa
dec
sahf
enter
fldt
sbbb
mov
adc
in
pop
cmp
aas
xor
mov
iret
dec
sahf
sub
mov
fistpl
cmp
xorl
int
or
xor
std
add
gs
pop
repz
sbb
push
and
jae
sti
sahf
jo
mov
cli
int3
xor
sahf
pop
les
add
aaa
pop
popa
ljmp
lahf
mov
xchg
in
push
ret
mov
orb
and
cld
pushf
in
mov
sub
inc
adc
pop
scas
pusha
mov
cmp
cwtl
xchg
or
stc
cmp
adc
pop
das
lods
push
aad
pop
arpl
mov
and
adc
mov
cbtw
mov
mov
cmp
cwtl
fwait
imulb
cltd
imul
xor
cs
cs
xchg
sbbl
mov
and
sahf
lock
cmp
adc
jo
fisubrl
or
or
int3
nop
daa
jbe
out
pop
and
mov
or
paddusw
repnz
mov
or
gs
test
adc
sub
push
lret
mov
nop
js
xchg
cmp
shl
cli
jo
push
imulb
outsl
fcomps
sahf
loop
mov
mov
orl
cmp
sahf
test
and
mov
movzbl
fidivrs
dec
popa
add
mov
add
ljmp
sbb
add
outsl
sub
dec
jg
xor
cld
pop
ds
sahf
sub
movsl
or
notb
pop
es
stos
popa
xor
enterw
dec
sub
mov
push
fistpl
call
inc
mov
iret
lret
xor
cmp
mov
jb
mov
les
fiadds
lahf
and
les
in
imul
sub
pushf
or
adc
mov
fcomps
cmp
lahf
and
jno
adc
cmpsl
pop
ljmp
dec
es
outsb
push
out
lock
fnsave
sub
pop
xchg
add
hlt
lcall
lods
mov
andl
mov
stos
push
sahf
cmp
push
mov
loopne
jg
les
push
xor
test
or
rcll
outsl
mov
sahf
cmpsb
lock
mov
lds
xor
lcall
push
mov
or
sahf
mov
jae
push
add
inc
inc
and
data16
push
jns
pop
sahf
jae
fcom
dec
enter
and
inc
mov
mov
sub
mov
mov
arpl
dec
out
add
xlat
ror
sahf
inc
sub
pop
mov
sahf
push
cmp
inc
imul
js
jecxz,pt
sahf
dec
pop
inc
pusha
mov
sub
pop
sahf
xchg
or
mov
mov
lods
and
stos
in
mov
cld
jp
inc
sahf
push
push
push
dec
xchg
es
push
and
xchg
jg
div
lahf
psubd
ret
mov
lea
mov
cmpsl
cmp
bound
imul
ret
popf
fcompl
inc
jb
insb
sahf
cmp
shlb
sahf
aad
jnp
test
gs
in
aaa
adc
add
mov
inc
faddl
inc
adc
repz
sahf
out
pop
jns
push
mov
dec
mov
mov
nop
and
push
out
fisubs
xor
mov
popf
lcall
mov
dec
mov
out
lods
test
sbb
lds
jp
push
daa
xor
cmp
mov
icebp
hlt
rorl
sahf
fucom
mov
shrb
dec
xchg
sbb
jmp
imul
dec
sahf
push
aad
push
sub
rorw
lahf
cld
fstl
into
jbe
mov
jg
orb
dec
or
sub
mov
imul
and
cmp
and
xor
aas
sub
lods
mov
pusha
xchg
xor
pop
hlt
test
aad
shll
sar
aad
leave
nop
push
lock
xchg
add
cmp
sahf
mov
test
or
mov
dec
push
sahf
xchg
pop
and
adc
cmp
xor
in
sub
and
pop
std
cs
orb
sahf
jbe
pusha
jg
mov
aad
cmpsl
jne
add
fldcw
dec
pop
adc
sbb
sahf
or
xor
mov
out
imul
jecxz
shll
div
sarb
sahf
mov
ljmp
or
xchg
mov
xor
or
icebp
popf
adc
in
dec
xlat
push
cmpsl
sub
mov
or
and
call
test
or
scas
mov
mov
push
arpl
sahf
pushf
jb
inc
or
dec
dec
mov
into
stos
sahf
bound
in
outsl
push
sahf
pusha
fnsave
adc
dec
in
sub
mov
sahf
ror
mov
mov
movsl
mov
hlt
fwait
xor
lret
stc
sbbb
into
jne
xchg
or
mov
test
das
inc
das
and
pop
jb
pop
adc
imull
out
sahf
jg
cmp
mov
sahf
jns
push
push
cmc
cltd
and
repz
shr
andb
popa
jmp
lcall
andl
movsb
repz
lcall
adc
out
mov
xchg
js
mov
xchg
loop
scas
icebp
mov
fstps
jecxz
mov
ret
daa
aas
vpslld
loope
sahf
repnz
clc
bound
hlt
lcall
xor
cltd
aaa
push
jne
icebp
lods
test
mov
sub
dec
inc
filds
mov
pop
jge
ds
sahf
add
sbb
stos
jg
sahf
sbb
shlb
inc
mov
mov
xchg
xchg
inc
aas
cwtl
int
jge
insb
pop
outsl
je
mov
and
fisttps
xchg
push
imul
dec
out
or
cmp
data16
pop
out
movl
pop
xchg
loopne
xchg
mov
mov
jp
sahf
loope
or
jnp
or
sub
je
mov
fisubs
aas
sub
and
lods
add
sbbl
mov
je
adc
or
sahf
push
push
mov
iret
daa
and
stos
test
test
aaa
jmp
adc
sahf
jne
inc
push
dec
pop
jbe
pushf
ljmp
push
sahf
jmp
cmp
jge
or
mov
inc
cwtl
sti
shll
sub
test
pop
pop
mov
mov
ja
ret
rcrb
ds
icebp
push
sahf
mov
test
push
pop
lea
orb
call
dec
push
fcomi
pushf
jnp
fnsave
mov
inc
sbb
out
mov
cmpsb
push
sahf
dec
stos
icebp
fistpll
push
adc
cltd
push
add
mov
pop
pop
pmuludq
push
int3
pop
repnz
push
push
sub
sub
or
imul
push
imul
pop
push
pop
adc
jnp
ds
xchg
popa
or
fbld
add
movsl
leave
mov
daa
sub
sbb
rcrl
cld
hlt
int3
testb
scas
jns
std
mov
push
fcmovne
mov
mov
lahf
jne
or
mov
sahf
movl
inc
inc
xchg
rcrl
push
sbb
inc
sub
cmpsl
loope
in
mov
cwtl
xor
insb
imulb
cwtl
cvtps2pd
push
hlt
pop
bnd
sbb
and
pop
mov
iret
cmpsb
shll
add
les
roll
push
and
fs
inc
jno
push
popf
lahf
xor
fildl
aad
ljmp
mov
or
in
xor
xor
movl
in
sub
pop
mov
fs
mov
repnz
dec
leave
dec
test
lock
sti
pop
cmp
sbb
fmull
cltd
imulb
xor
inc
je
jmp
ja
mov
hlt
add
add
xchg
clc
iret
stc
sahf
push
or
pop
push
adc
icebp
pusha
lods
fadd
pop
test
sub
mov
inc
lds
adc
sub
lock
je
mov
ljmp
and
sub
mov
cltd
gs
push
sahf
adc
out
in
cmpsl
xchg
cwtl
or
pop
sbb
call
dec
mov
fildll
test
mov
inc
pushf
jge
sarl
outsb
jmp
adc
aad
pop
sahf
mov
fistpll
dec
test
mov
push
hlt
cs
xor
adc
jmp
mov
and
sahf
mov
xor
add
sub
nop
in
xchg
jge
lahf
cli
das
mull
jb
ret
aad
shrl
ret
lahf
adc
int
sahf
in
sub
aaa
pop
subl
neg
dec
xchg
mov
fwait
and
insl
ja
sahf
fwait
inc
testb
xchg
icebp
push
sahf
push
sub
add
lahf
push
test
stos
lea
push
scas
push
sahf
mov
in
sahf
pusha
out
mov
push
nop
ret
mov
imulb
pushl
clc
jg
adc
sub
sahf
out
into
dec
add
inc
out
in
sahf
mulb
fs
iret
xor
in
dec
sahf
ds
cld
xchg
insb
push
adcb
aaa
mov
pushf
fwait
and
dec
mov
inc
sub
arpl
jle
xchg
imul
cld
adc
outsl
adc
sbb
inc
sahf
movsb
ret
mov
test
out
lcall
fisubrs
insb
sahf
or
repnz
das
ljmp
dec
dec
xchg
fs
lock
outsl
outsl
int
sahf
iret
dec
add
adc
cmpsb
cwtl
and
lea
das
xor
dec
adc
or
je
out
stos
pushf
dec
sti
jg
test
aam
data16
push
pop
in
repnz
jecxz
xorl
daa
sub
fistps
addl
jb
mov
sahf
and
xchg
xchg
mov
push
sahf
aad
loop
jge
fucom
sahf
ljmp
push
pushf
or
push
pop
mov
nop
les
pop
je
jp
dec
jg
leave
faddl
sahf
adc
movsb
lock
cltd
out
imul
jg
xchg
scas
add
hlt
test
push
cli
xor
out
lock
fwait
out
pop
push
jg
sahf
jecxz
incb
sahf
mov
and
mov
shl
mov
lahf
mov
ja
mov
xchg
sahf
mov
dec
aaa
nop
cltd
cli
ja
jmp
jae
cmp
loope
sahf
movsl
inc
sub
pusha
shlb
cmp
out
pop
sahf
int
jne
or
pop
adc
adcb
clc
cmc
cmp
cmpsb
jo
ds
lret
push
in
das
iret
xchg
pusha
mov
or
lahf
sbb
fisttpll
call
out
ljmp
xlat
sahf
mov
cmp
test
stc
test
mov
xchg
mov
in
mov
data16
inc
jns
out
cmpl
jecxz
shlb
xchg
or
pop
cmc
xorb
sbb
sub
in
fists
lahf
std
pushf
pushf
jecxz
push
xor
xlat
sbb
sahf
rorl
jl
nop
mov
sbb
fwait
pop
icebp
clc
mov
add
dec
in
pop
mov
lods
fistps
xor
add
cmp
inc
mov
mov
sahf
lahf
imulb
adcb
adcb
sahf
lods
dec
mov
push
push
and
daa
xchg
xlat
sub
stos
mov
inc
mov
out
dec
out
push
andl
xchg
and
pop
mov
xchg
addr16
jp
add
mov
sub
aam
test
push
fistpll
xlat
subb
lds
out
mov
lock
add
jmp
call
out
mov
fisubs
jecxz
cmpl
orl
insb
js
bound
aas
sahf
add
pop
dec
mov
aas
jle
stos
lret
push
call
and
stos
es
sahf
mov
pop
jge
movb
enter
imul
in
push
sahf
mov
adc
bound
adc
cmp
popf
data16
inc
dec
mov
ret
sub
nop
arpl
pop
imulb
test
ds
imul
fstps
sahf
adc
xor
or
stos
mov
sahf
ffreep
mov
lds
jno
lahf
jmp
shll
cltd
ficoml
lods
fistps
cmp
sub
inc
xchg
mov
cmp
adc
enter
fsts
xchg
sub
lds
sahf
add
jnp
gs
out
imul
mov
adc
cmp
and
and
lret
in
jle
dec
in
pop
shrl
xor
leave
test
sbb
lret
sahf
scas
cmp
lcall
fimuls
out
shl
add
mov
xor
xor
push
sbb
das
lret
ljmp
pop
add
add
lcall
sbb
adc
icebp
sub
adc
test
lds
jb
sahf
inc
dec
movsl
lcall
int
dec
scas
xchg
push
mov
pushf
xor
dec
mov
dec
enter
add
nop
inc
loope
xor
stos
out
mov
push
mov
push
mov
inc
push
fstps
fwait
inc
dec
sahf
int
cmp
outsb
nop
movsl
shrl
mov
sbb
popf
fwait
mov
imul
sbb
sahf
cmp
loopne
inc
shrb
daa
inc
push
push
mov
pop
jno
or
gs
sbbl
adc
popf
data16
test
sahf
in
imul
aad
adc
dec
jne
fs
aas
inc
pop
filds
fucomp
jnp
scas
pop
sahf
in
pop
pop
sti
mov
hlt
push
incl
scas
xor
xor
push
sbb
mov
jb
sbb
stos
mov
fadd
lahf
mov
sub
jmp
inc
push
lahf
addr16
xchg
movsl
pop
sahf
pop
mov
iret
rorl
pushf
fidivrs
adc
mov
fildll
sahf
loopne
lock
mov
es
lods
mov
jnp
xchg
cmpsb
and
out
sbbb
xor
dec
push
dec
sbb
and
shlb
les
call
icebp
and
enter
fs
cmp
lcall
dec
xchg
addr16
push
mov
testb
scas
rolw
divb
das
push
test
nop
push
gs
dec
pop
mov
mov
push
push
mov
add
cld
pushf
insl
mov
inc
pop
cmp
or
fisubs
roll
mov
pop
leave
insb
fdivrl
sbb
xchg
push
xchg
xchg
add
sahf
add
lahf
stos
mov
test
call
imul
and
lahf
add
gs
dec
sbb
dec
fs
pop
sahf
into
dec
add
jbe
js
sub
stos
pop
dec
dec
jg
xchg
push
xchg
shlb
adc
sahf
sbb
dec
arpl
mov
push
or
cmpsl
sahf
add
lret
loope
sahf
call
adc
sahf
cmp
mov
les
sub
fsubp
mov
pop
push
xorb
sbb
lahf
shrl
jl
dec
cwtl
je
adc
push
push
pop
bound
xchg
sahf
ljmp
test
stos
inc
mov
or
js
popa
pop
sahf
mov
push
add
cmp
adc
ret
pop
or
ss
pop
ret
sbb
fsubs
add
adc
jg
add
lods
test
adc
repnz
imul
jbe
push
sti
sahf
push
xchg
lods
stos
jg
clc
cmpsl
sub
addr16
test
pusha
popa
adc
inc
sahf
dec
xor
adc
push
mov
push
jnp
test
lcall
loope
lds
mov
inc
sbbl
add
ja
cmc
sti
or
xlat
push
xor
das
mov
jmp
cmc
lahf
call
jp
divb
js
mov
mov
sub
rcr
mov
loopne
sub
sahf
clc
int3
cmp
or
nop
lahf
scas
push
sub
push
stc
mov
ja
andl
loope
or
scas
sub
les
sahf
push
in
test
mov
mov
int
pop
xor
jg
outsb
dec
sbb
dec
ja
jmp
movl
or
and
fucomip
outsl
fnstenv
add
jo
inc
push
inc
jmp
sahf
test
xor
jmp
cs
negl
dec
or
nop
pop
jae
fcomp
jg
aad
xchg
pushf
cli
sub
dec
lret
enter
lret
jge
pushf
mov
loop
jo
pop
cmpsb
inc
mov
and
sahf
addr16
jmp
cmp
adc
add
mov
arpl
jmp
lods
aam
mov
std
mov
sub
adc
ljmp
inc
hlt
mov
push
fldenv
gs
fcomps
mov
les
mov
sahf
sbb
decb
cmpsl
pop
pop
dec
mov
sbb
out
daa
mov
sahf
fldt
push
cmpsl
cmp
lcall
minps
test
sahf
cmc
imul
adc
aas
cwtl
mulb
sub
js
fisttps
in
or
xor
insb
cmpsb
jp
lock
add
sbb
push
pop
dec
push
mov
test
in
nop
xor
pop
pop
cmpsl
aas
push
lods
out
sahf
xlat
sub
cltd
sbb
test
xchg
dec
and
sahf
pop
call
add
adc
ficoml
mov
cwtl
das
iret
int3
into
lret
push
scas
pop
mov
xchg
stc
push
loope
dec
int
lods
dec
jb
jg
sahf
mov
jo
lods
fisubrl
fsubs
mov
mov
aad
addl
into
and
out
bound
mov
pop
mov
sbb
sub
cwtl
jmp
push
das
mov
repnz
notl
adc
out
cmp
sahf
pop
out
jecxz
pop
sbb
sahf
or
push
aam
cmpsl
std
cwtl
mov
dec
js
cwtl
enter
xchg
mov
sahf
jp
mov
fstpl
ljmp
pop
test
inc
lret
cltd
mov
xlat
or
ret
and
cmc
fwait
stc
aad
fs
fsts
mov
push
mov
sahf
push
sbbl
sahf
ja
or
sahf
xchg
jnp
lea
test
sahf
add
mov
clc
lods
addl
repnz
in
sti
popa
push
cli
and
sahf
outsl
mov
mov
sahf
jl
dec
and
negb
ret
dec
sahf
push
into
xchg
and
mov
xchg
imul
cmp
sahf
out
in
sbbl
inc
and
iret
xor
jb
fimull
push
adc
mov
in
add
push
mov
call
lock
rcrb
clc
das
cmp
je
hlt
sahf
and
inc
mov
sahf
sbb
push
push
adc
sar
and
out
sub
or
jae
insl
sahf
mov
sti
subb
push
sahf
push
fsts
enter
pusha
jno
hlt
lahf
insl
inc
inc
dec
lcall
add
insb
inc
adc
and
mov
bound
rolb
fldpi
test
sahf
sub
inc
or
or
xor
lret
push
addr16
repz
xchg
mov
imul
push
shr
nop
jno
and
shrl
pop
daa
push
or
xor
and
xchg
jecxz
sbb
pop
cmp
ret
jbe
dec
jo
or
sahf
mov
fistpl
jmp
xchg
test
jnp
clc
in
pop
fidivrs
fwait
stos
divl
dec
cmp
and
sahf
ja
and
ret
pushf
cltd
gs
or
dec
int
ds
out
dec
js
mov
cmpsb
pop
cmpb
add
or
cmp
mov
test
call
aas
add
in
push
push
sbb
nop
adc
syscall
inc
sahf
mov
jge
dec
divl
movsl
sbb
inc
mov
sahf
xchg
xchg
or
sahf
int3
ljmp
adcb
pop
push
lahf
loopne
cmp
sbb
mov
sahf
mov
shll
cmpsl
stc
xchg
mov
mov
or
in
movsl
fnstenv
sub
rcrl
out
mov
aas
pushf
jecxz
add
adc
mov
daa
jmp
pop
mov
out
pusha
jmpw
lahf
movsb
xchg
scas
add
xchg
lods
cli
or
fldenv
sub
std
sahf
shr
adc
push
and
mov
inc
sub
fwait
add
sub
movsb
pop
lods
mov
stos
pushf
mov
lcall
cmp
lret
jbe
roll
xchg
push
add
and
lods
movsl
bound
lock
xor
frstor
clc
out
lds
sub
jle
sahf
ja
pop
adc
sub
das
es
and
cmpsl
adc
rcll
out
mov
sahf
sub
lods
aaa
mov
mov
adc
push
fcomip
xchg
dec
stos
sahf
push
dec
sbbl
sbb
bound
pop
lret
adc
xchg
out
pushf
shrl
ret
mov
cmpsb
shlb
mov
test
imul
sub
leave
sbb
loop
xlat
sahf
arpl
jno
cmp
xor
sahf
jmp
inc
fdivrl
and
neg
sarl
cmp
int
pop
jmp
mov
mov
pop
or
mov
xor
mov
or
pop
sahf
sarb
cli
pop
mov
aas
lock
rolb
movsl
cli
into
sub
mov
les
jecxz
xor
push
scas
jbe
cmp
sub
xchg
icebp
js
xchg
lock
push
adc
or
sahf
xorl
aad
jae
sub
test
sub
adc
iret
into
pop
jge
or
push
sub
sbb
bnd
call
sbb
nop
mov
scas
jmp
insb
lahf
xchg
mov
or
sahf
adc
cmp
sahf
insl
and
xchg
jnp
pop
sub
shr
cmpsb
jne
aas
je
ficompl
jns
negl
iret
add
mov
sahf
pop
cmp
mov
sti
dec
addb
mov
pop
int
orb
dec
arpl
adc
mov
sub
mov
cmpsl
sbb
pop
clc
rolb
nop
mov
int3
popa
add
cld
out
fs
das
ljmp
pusha
or
in
pop
ret
outsl
cmp
xchg
aad
stos
mov
xchg
xor
push
insl
pop
mov
add
inc
sahf
dec
dec
stc
mov
inc
adc
test
ljmp
out
mov
cltd
shll
add
inc
andb
out
adcb
dec
bound
jbe
push
or
aaa
ret
sahf
jge
test
add
sub
ja
pop
scas
pushf
cmp
ljmp
and
dec
outsb
and
loope
and
sub
sahf
test
jo
mov
add
out
fldcw
mov
mov
insl
dec
dec
lcall
push
in
in
data16
ljmp
out
sahf
insb
sbb
out
jo
xlat
mov
add
mov
ret
in
fcomps
xlat
push
nop
pop
ljmp
fiadds
sbb
enter
pop
mov
add
push
sbb
pop
jae
lods
mov
das
sahf
xchg
and
pusha
push
jge
sahf
mov
cmp
jae
adcb
rcrl
leave
daa
xchg
and
pop
and
popa
loopne
lahf
pusha
inc
cmpl
stc
mov
mov
pop
jno
pop
lret
pop
outsl
ret
aaa
out
pop
sahf
inc
xchg
jne
push
pop
mov
push
mov
sub
leave
pop
stos
gs
pop
xchg
pop
sahf
push
mov
push
mov
daa
pushfw
mov
dec
jbe
pop
sahf
and
push
mov
shlb
sbb
add
pop
sahf
nop
call
jnp
mov
jo
decl
sahf
int3
lcall
nop
cld
in
add
mov
sub
in
jmp
jb
lret
sahf
xor
repnz
sahf
repz
xlat
dec
pop
push
pop
inc
sahf
or
mov
out
sub
test
shll
fucomi
xor
lret
out
stos
sahf
hlt
push
adc
push
movsb
add
pushf
daa
test
out
movb
psraw
out
orps
sahf
aam
push
repz
xchg
sbb
sahf
scas
mov
cmpb
xor
enter
incb
cmpsl
jno
fcmovne
mov
sahf
in
fisubrl
mov
sahf
inc
dec
sbb
dec
pop
clc
in
pushf
loopne
xchg
out
add
adc
sbb
loop
jo
pusha
jns
jae
lea
or
add
sub
loop
xchg
scas
sahf
fcoms
pop
cmp
or
pop
pushf
xor
cld
jg
adc
sahf
inc
test
sarl
pop
sahf
add
aad
xchg
std
outsb
clc
or
push
pop
negl
push
cmpb
imul
sahf
jmp
jl
or
push
sahf
cmpl
mov
imul
xlat
fistps
sub
cld
sbb
adc
pusha
add
adc
outsl
ret
je
pop
mov
cmpb
lods
sub
mov
shll
sahf
clc
mov
fucomi
in
arpl
loope
sahf
stc
nop
daa
sub
aam
inc
and
jecxz
and
cmp
loope
scas
stc
xchg
push
scas
sbb
adc
add
insb
mov
mov
imul
add
enter
insb
fs
pop
fwait
dec
push
fdivl
adc
icebp
cmpsb
fs
sbb
aad
sahf
ret
jno
clc
mov
sahf
jmp
add
sahf
fnstenv
lret
je
insb
pop
fimull
pop
sahf
stc
cmc
and
jno
shlb
lods
pop
push
loope
decb
inc
cmp
mov
lret
mov
xchg
push
ret
add
add
les
std
sbb
aad
aas
and
cmpsb
repnz
mov
mov
sahf
xchg
nop
jmp
inc
jge
gs
sahf
mov
loopne
and
ret
push
imul
clc
fisttpll
xchg
sahf
test
rorb
adcl
and
pusha
lods
or
pop
lods
adc
insl
xor
push
and
or
jp
lock
notl
rorb
pushf
jge
mov
bt
and
filds
in
scas
es
rcr
negb
test
adc
out
dec
jbe
pop
sahf
incl
das
mov
sahf
insl
ljmp
inc
push
mov
sahf
jp
int3
enter
pop
or
dec
jecxz
adc
xchg
cmp
sahf
cs
xchg
pop
into
cmc
pop
mov
dec
pusha
cmp
arpl
add
pop
rolb
lret
movsb
or
jecxz
sarl
mov
in
sahf
fisttps
mov
sahf
popf
xchg
sti
pop
nop
je
mov
jecxz
lret
out
ljmp
and
xchg
cmp
dec
mov
les
pop
popf
mov
jnp
mov
or
xchg
rorl
mov
je
xchg
jecxz
jge
cli
sti
stc
nop
sub
jg
insl
mov
sahf
in
loop
pop
push
aas
test
mov
push
sahf
std
mov
xor
sahf
jle
cmp
jnp
lds
fcomps
aam
imull
or
test
or
push
sahf
out
and
stos
aam
xchg
xlat
insb
sahf
arpl
adc
push
dec
sahf
cwtl
cmpb
test
es
or
add
or
scas
jns
mov
movl
push
sahf
fs
xchg
imul
cmp
inc
cmp
jno
xor
mov
jl
data16
jbe
out
out
xorl
xchg
jecxz
jo
xchg
cmpsb
mov
sub
xor
xchg
pop
popa
mov
movsl
pushf
faddp
je
push
sahf
add
ja
add
call
jns
lods
arpl
sets
push
paddw
mov
lahf
jle
push
xchg
sahf
popf
loop
repnz
push
setle
jae
adc
sahf
roll
jno
pop
xor
aaa
jecxz
insb
nop
push
mov
xchg
inc
jno
outsl
xchg
sahf
sub
in
sbb
jl
sahf
sub
inc
out
add
mov
jmp
push
sub
jne
or
dec
cltd
scas
pop
movsl
cs
rcrw
rorb
dec
and
push
cltd
mov
mov
sub
lahf
int3
rcll
sahf
bound
inc
push
xor
xchg
and
orl
adc
aad
mov
sahf
xchg
lret
fistl
ds
out
push
cmp
sahf
add
push
sbb
sahf
clc
sti
cli
pop
fisttps
add
bound
hlt
aam
pop
mov
sbb
call
or
outsl
jge
or
adc
or
jmp
sahf
cld
xchg
pop
out
jle
shlb
repnz
xor
les
pop
sbb
sbb
xchg
js
sti
sahf
and
pop
stos
cwtl
lahf
lcall
push
clc
cmpsl
scas
sahf
pusha
jo
incl
sahf
leave
loop
lret
mov
jns
test
dec
cmp
sahf
push
xchg
cs
sahf
mov
enter
lahf
pop
pop
cmp
outsl
jge
xlat
lcall
fsubrp
data16
jmp
pop
adc
pop
ret
imul
pop
rcll
ficomps
call
sahf
loope
add
rorl
dec
int
pop
test
je
dec
sub
adc
cwtl
lcall
mov
sbb
je
mov
jmp
mov
sti
sahf
add
mov
js
adc
fcompl
push
ljmp
mov
pop
sahf
xor
xchg
jb
movsl
mov
sahf
mov
jmp
and
mov
es
nop
push
scas
iretw
lods
sahf
or
rcll
pusha
xor
push
in
movsl
bound
adc
sbb
unpcklps
add
xlat
jge
mov
sub
sub
xor
cmp
test
jb
add
imul
sahf
ja
sub
fistl
cmc
jle
cli
xchg
pop
sbb
push
adc
movsb
sahf
shrl
loopne
mov
xor
cmp
sahf
and
sahf
pop
insb
and
sahf
popa
cs
inc
and
push
and
and
ret
imul
aaa
xchg
insb
fsts
jle
imull
fcomps
shlb
outsb
pushf
sahf
add
sub
mov
xchg
xlat
in
cmc
push
cmp
nop
and
xor
popa
adc
and
out
sub
aad
push
cs
fistpl
jmp
sahf
outsl
dec
push
test
cmpsl
mov
lods
hlt
or
test
mov
lods
mov
insl
inc
sahf
imul
push
das
xchg
jne
rcrb
push
je
dec
cmpsb
and
mov
mov
lds
sub
sbb
mov
fstpt
mov
popf
jp
xor
mov
repz
sbb
int3
ret
ficompl
dec
ja
jno
scas
sub
sbb
lock
mov
dec
cs
jp
imul
cmp
cmc
sahf
mov
and
clc
sahf
jno
cmp
sub
inc
int3
lahf
test
mov
lahf
cmp
lcall
push
push
pop
inc
mov
jb
sahf
mov
jmp
in
inc
and
lahf
and
loopne
dec
push
push
hlt
jnp
fimuls
pop
jp
cwtl
imulb
mov
adc
addb
aas
jecxz
ds
pop
sbb
cmp
sbb
and
xor
pusha
test
insb
test
jg
add
inc
sahf
pop
push
cltd
shlb
inc
mov
adc
outsl
out
cmp
clc
pushf
aaa
mov
mov
jge
mov
sahf
adc
mov
outsl
movsl
sub
jbe
pop
mov
jg
pop
repnz
stos
aas
pop
sahf
mov
sub
sub
bound
das
lret
push
repz
iret
dec
addb
and
ficoms
fstps
in
cli
adc
leave
jp
insb
lcall
pop
xchg
test
dec
sbb
jno
in
nop
sbb
adc
inc
add
aaa
scas
or
push
inc
lock
enter
sahf
jmp
inc
xchg
mov
stos
test
mov
add
mov
jp
pop
jae
ret
das
lahf
jno
ss
fists
test
inc
fwait
sbb
add
bnd
call
js
sbb
pusha
lret
push
pop
loope
and
or
add
inc
shll
cmpsl
mov
mov
sahf
xchg
xlat
sbb
adc
lock
int3
pusha
mov
push
jecxz
les
xor
aaa
setno
adc
mov
stos
shlb
jmp
ja
pushw
dec
sbb
in
xchg
scas
and
mov
push
loope
and
cmp
les
xchg
pop
lods
fdivs
sub
lea
lds
sbb
pop
int3
jne
jg
lret
repnz
cs
lea
mov
jl
jo
push
sub
outsb
icebp
fmul
outsl
addr16
sahf
jnp
push
or
push
dec
sahf
mov
test
jp
outsb
stos
jnp
or
xor
cmp
popf
push
xor
sub
mov
es
sbb
pop
sahf
mov
adcl
inc
mov
mov
xchg
out
sahf
dec
dec
pop
push
xor
sahf
push
movsb
enter
hlt
rclb
jle
aad
fwait
adcb
out
push
daa
mull
fstps
mov
in
es
or
sahf
cli
scas
imul
in
jg
lcall
sahf
dec
test
xor
lods
shrl
sub
cmp
enter
je
sub
ror
pusha
fistpll
out
fstps
jb
mov
or
ficomps
sahf
sti
ja
dec
dec
jns
stos
call
dec
sub
mov
in
ja
lods
cmpsb
sahf
sub
push
movsl
dec
test
insb
xchg
adc
subl
mov
lahf
xor
sahf
mov
and
aad
cmp
jns
hlt
sti
xlat
enter
mov
or
aam
jo
add
cmp
push
jg
push
mov
cmp
ja
arpl
adc
aaa
adc
pop
nop
jb
or
fstps
sub
lcall
outsl
fistpl
ficompl
adcb
aad
addr16
pop
pop
fdivrs
call
adc
jo
out
in
sahf
data16
inc
stos
pop
add
sahf
sub
mov
clc
sub
adc
addr16
cmc
test
iret
jb
xchg
mov
mov
fisubrl
mov
sahf
inc
scas
aad
cmp
mov
cld
adc
std
inc
sahf
jle
stos
jno
das
xchg
shlb
lcall
pop
sahf
test
sbb
mov
dec
xor
or
push
or
int3
xchg
mov
jns
ret
repnz
pushf
imul
hlt
pop
push
jmp
push
inc
shrb
cmc
dec
sahf
fidivrs
pop
inc
std
cmp
sahf
lods
addr16
lds
rcll
mov
test
and
jecxz
dec
aas
es
mov
jnp
add
sahf
dec
and
shl
outsb
or
sub
push
stc
sub
loopne
sbb
fs
sahf
enter
jle
in
sahf
xchg
xor
test
ficoms
push
dec
repnz
xchg
or
ja
jg
test
sbb
shlb
sahf
xchg
fnstenv
adc
lret
xor
je
test
push
sar
roll
sahf
sbb
in
mul
sub
dec
leave
inc
movsb
outsb
and
mov
add
imul
sbbl
sahf
or
and
popa
and
pushf
push
popa
cmpsl
sbb
test
nop
ss
sbb
mov
daa
les
mov
jne
sahf
jge
movsb
sti
adc
das
mov
mov
cmc
xlat
or
xor
in
xor
insl
mov
nop
jge
lods
lret
ss
stos
lock
icebp
or
dec
mov
sahf
pop
push
out
sub
cli
adc
mov
outsl
lahf
xor
ret
nop
cwtl
adc
pop
sti
lahf
hlt
push
sbb
sahf
inc
or
repz
mov
and
das
out
sahf
add
sub
js
call
cld
mov
jg
flds
popf
cmc
cmp
in
out
and
and
imulb
shrl
inc
test
dec
sahf
mov
mov
aas
mov
dec
mov
jae
adc
push
nop
xor
loop
int3
xchg
movsb
sahf
cmpsb
mov
pop
adc
and
mov
stos
sahf
push
cmp
in
xchg
sbb
movb
lcall
ficompl
fs
jmp
mov
mov
mov
xor
fcom
jl
cmc
push
outsl
cmp
fwait
mov
sahf
mov
in
mov
pop
inc
dec
sahf
cmp
fs
lcall
sbb
cmp
dec
xlat
lret
push
xor
jp
and
jle
mov
subb
pop
shll
pop
movl
adc
sahf
loop
sbb
imul
xchg
push
xchg
scas
popf
xchg
sahf
into
divl
test
lds
fsubrs
mov
mov
movsl
or
mov
outsl
mov
cmp
mov
repnz
in
xchg
push
mov
nop
push
nop
sbb
adc
xchg
inc
mov
mov
jl
inc
pushf
sbbl
mov
pop
iret
fists
jl
pop
cmp
pushf
pushf
sbbb
push
dec
ds
xor
lahf
cwtl
xor
cmp
into
lcall
jecxz
dec
nop
pop
lcall
cmpb
mov
pop
xchg
sbb
bnd
pop
cld
mov
jmp
adc
jle
pusha
mov
sub
and
mov
mov
and
mov
push
pop
xlat
pop
in
push
and
inc
pushf
add
es
mov
iret
mov
dec
sbb
aas
aaa
mov
lahf
insb
nop
jp
push
push
test
pushf
sbb
pop
lahf
add
jo
ds
int
jle
xchg
xchg
filds
xchg
aam
cmp
hlt
xchg
mov
jbe
out
scas
sbb
out
lcall
nop
outsb
mov
xchg
cwtl
jg
pop
idivl
add
xchg
aad
lcall
pop
mov
lcall
sarb
cli
xchg
cmp
xchg
mov
ret
mov
sbb
leave
adc
jno
inc
lret
inc
jle
nop
inc
push
sbb
sbb
jp
jl
lds
aad
cli
sub
fisubrs
mov
fidivrl
sub
dec
mov
jl
cmp
jmp
mov
call
notb
sbb
inc
lock
inc
iret
pushf
mov
rorb
pushf
xchg
cmpsl
push
xchg
push
jle
fildl
ja
inc
jae
clc
xchg
xchg
jp
lcall
xor
xchg
ds
loopne
push
xchg
cli
jl
cmpsb
dec
xchg
or
cld
xor
pop
jae
adc
les
insl
dec
xchg
mov
push
iret
daa
xchg
cld
rorl
adc
pushf
incb
aad
lcall
stc
mov
xor
push
adc
pushf
jb
int
std
inc
pop
sub
clc
out
lahf
mov
mov
js
jo
popf
jp
xor
pushf
inc
and
mov
xor
rcl
ret
mov
notb
cmpsl
xor
dec
xchg
adc
mov
push
jl
call
xchg
xor
or
cwtl
int3
lcall
insb
add
sbbl
add
mov
pop
lcallw
xchg
nop
xchg
mov
xchg
xchg
add
sbb
lds
jbe
jb
outsb
js
je
xchg
sarl
outsb
dec
adc
pushf
cwtl
int3
xchg
ret
shlb
fmulp
add
sbbb
mov
leave
loope
int3
pop
in
adc
jle
out
xchg
and
xor
movsl
das
sbb
aas
rcrl
xchg
js
fcompl
cmp
pop
sbb
cwtl
mov
fwait
dec
stos
jb
xchg
insb
push
push
push
lret
pop
pop
ss
sahf
xor
sub
sbb
adc
mov
push
or
sahf
insl
hlt
repnz
lcall
in
cwtl
inc
and
xchg
cltd
or
or
xchg
xchg
xchg
xchg
or
inc
xchg
push
fcmovnu
icebp
adc
mov
sbb
sbb
inc
sub
out
push
mov
fs
or
ja
mov
ss
sahf
icebp
xchg
jp
cld
nop
mov
mov
jbe
jle
icebp
pushf
mov
cli
mov
repz
fstl
jmp
scas
fwait
inc
jmp
jb
xchg
out
push
cmc
shll
mov
jmp
rcrl
and
scas
push
es
call
inc
cmc
inc
adc
sahf
js
mov
pushf
or
jb
sbb
adc
mov
bound
jmp
xor
ret
les
mov
addr16
sbbl
sahf
imul
adc
push
out
int
addb
addl
jnp
lea
ljmp
add
or
dec
repnz
pusha
test
xchg
out
adc
scas
sahf
cli
xchg
lock
xchg
lcall
in
adc
push
scas
adc
lret
ret
sar
stc
fstps
outsl
lret
pushf
push
xchg
jge
mov
pushf
mov
jnp
outsb
cmp
fiadds
aam
call
jno
add
nop
js
gs
clc
into
inc
pop
pop
scas
sbbl
fs
xchg
inc
add
int3
ljmp
rorb
cwtl
jae
or
pop
lret
movsl
lahf
and
sahf
lea
loope
sub
imul
inc
mov
sbb
test
mov
add
rorl
mov
ror
sarl
out
insb
sbb
push
cli
sub
and
es
test
int
jl
je
add
jnp
dec
sahf
enter
test
inc
or
cmpb
inc
mov
sbb
in
xor
mov
adc
and
rcll
enter
testb
imul
es
dec
scas
mov
add
rol
add
xchg
sahf
xor
ljmp
dec
lret
xchg
xor
fdivrl
ficoml
pop
xchg
mov
xchg
pusha
aas
xchg
andl
mov
xchg
dec
pop
xchg
inc
add
pop
pop
add
repz
cwtl
outsb
fdivrl
cs
ljmp
sub
inc
or
or
xlat
inc
lcall
and
push
mov
jp
push
push
mov
sbb
mov
rcrl
adc
movsb
push
and
stos
out
bound
push
adc
mov
mov
xchg
jge
popa
mov
mov
pop
cmp
cwtl
cmp
repz
sbb
fistl
lahf
xlat
xchg
dec
sbb
jb
test
mov
sub
dec
arpl
lods
imulb
xchg
mov
adcl
out
dec
dec
das
adc
fs
jg
fistl
mov
add
jg
cmp
jle
dec
or
jbe
jo
test
ficompl
out
adc
mov
add
adc
sub
aam
jge
pop
xchg
call
pop
into
jl
pop
xchg
xor
xchg
xor
sub
jp
sub
jb
push
icebp
pop
lods
inc
xor
ss
push
mov
xorb
popa
iret
push
ja
adc
mov
pop
jl
fisttpll
push
sub
lcall
adc
sbbl
fst
push
fidivrl
push
jge
pop
cmpb
rolb
scas
jbe
cwtl
and
nop
jp
pop
in
or
lods
push
inc
test
mov
mov
inc
pop
mov
dec
pop
add
inc
adc
adc
out
jo
jmp
ss
pop
adc
push
nop
loopne
push
jo
stos
stos
lret
movsb
sahf
mov
pop
sub
and
xchg
xchg
xchg
mov
sahf
shrb
add
ret
jmp
enter
push
cmp
aam
lret
test
xchg
xor
scas
or
cmp
sbb
sbb
lods
mov
bound
cltd
cmp
jo
ljmp
push
sahf
fwait
xor
loope
sahf
popa
out
or
mov
loop
cli
and
sahf
sub
or
das
cmpsb
addr16
aam
adcb
push
mov
mov
jecxz
test
mov
push
and
mov
mov
nop
lds
imul
cmp
mov
mov
mov
shl
sahf
stos
jno
int3
jae
lret
mov
xor
jb
push
fisttps
sahf
cli
adc
inc
pop
xlat
xchg
dec
nop
push
lahf
mov
add
out
aam
test
mov
sahf
mov
and
or
lcall
fucom
xchg
rcrl
popa
rcll
mov
test
pop
pop
repz
in
sbb
mov
std
test
mov
lods
or
ss
sahf
jnp
in
xor
push
movsb
dec
bound
sahf
loope
stc
clc
and
lahf
les
add
fisttpll
jl
jmp
sub
mov
scas
xor
cmp
scas
fistps
cmp
jb
add
dec
jmp
das
pop
arpl
in
jae
adc
sahf
push
xchg
out
sahf
mov
imul
aam
inc
in
loope
gs
and
lahf
sbb
icebp
mov
inc
xchg
cmp
pop
pusha
push
cmp
sbbb
mov
lcall
jne
shll
cmp
pushf
inc
and
daa
jne
cmpsb
out
inc
jmp
or
jmp
mov
mov
lahf
mov
fstps
mov
mov
aam
imul
decl
xchg
inc
lds
cld
or
shrb
lahf
mov
pushf
mov
lcall
push
pusha
jb
pop
lea
pop
lods
les
nop
adcb
stc
mov
pop
mov
je
jp
js
and
adc
sbb
dec
sbb
ds
inc
pop
xor
adc
daa
pop
cmp
addw
cmp
cmpsw
lcall
aaa
ljmp
fbstp
push
fsubp
aad
into
test
and
icebp
ret
call
shrl
mov
sbb
outsb
xchg
test
orl
cwtl
cld
sub
dec
lahf
imul
inc
daa
or
xchg
pop
jb
aam
loop
imul
iret
pushf
call
push
jle
frstor
movsl
scas
ljmp
lahf
pusha
lds
into
fidivrl
sbb
pop
jle
pop
mov
imul
stc
jle
shrb
jle
mov
bound
jle
mov
adc
fstpl
and
mov
pushf
dec
fistps
xchg
pop
jle
pop
mov
or
xlat
cmpsb
pop
pop
lcall
daa
sbb
orb
mov
mov
jbe
lcall
ret
jle
in
sbb
mov
jl
cmpsl
shlb
push
mov
aas
push
insb
mov
xchg
shll
dec
ds
pushf
cmp
xchg
and
bound
mov
mov
push
jle
cmp
or
jb
nop
outsb
xchg
rolb
jle
sbb
pop
cmp
divb
lock
pop
adc
xor
sbb
pop
jle
xchg
pop
loopne
adc
pop
into
xchg
pushf
out
dec
jge
mov
xchg
cmp
fists
outsl
mov
mov
cmpsb
dec
mov
fcomps
mov
ret
dec
js
imul
lcall
cs
pop
pop
pop
les
cs
mov
pushw
mov
jbe
dec
adc
push
xchg
mov
mov
popa
movsl
pop
pushf
ss
popf
into
sub
scas
push
push
pop
pop
jge
push
iret
testb
mov
adc
jnp
mov
jbe,pt
push
out
cmp
test
addb
push
pop
pop
and
pop
daa
pop
adc
pushf
jge
cmovbe
mov
jle
mov
jp
sbb
prefetch
push
cs
sbbl
mov
out
lock
push
jl
pop
scas
into
jns
push
cmp
cs
lods
push
cmpb
das
mov
push
mov
xchg
push
cld
sahf
das
mov
daa
iret
sbb
and
sti
mov
xchg
xchg
pop
push
lahf
xor
sbb
push
xlat
pop
lahf
mov
aaa
mov
cs
mov
jns
inc
insb
adcl
push
mov
push
fnstenv
cmp
xor
into
xchg
pop
jl
cmp
addr16
jecxz
dec
push
push
mov
lret
xor
pop
xor
pop
add
pop
pusha
movq
orb
in
jbe
mov
inc
sbb
aam
cmc
mov
xchg
jno
inc
std
xor
jmp
lcall
pop
mov
cwtl
lret
inc
jg
adc
xchg
loop
jg
xchg
out
lcall
sbb
xchg
test
jbe
aam
dec
sti
jne
jle
adc
add
clc
xchg
rorb
pop
lods
mov
xchg
data16
xchg
push
cltd
out
mov
aaa
lcall
data16
das
mov
adc
mov
movsb
or
in
jo
cmp
or
push
mov
cmp
outsl
jg
pop
cmp
pop
out
mov
jp
xchg
scas
mov
lcall
xor
push
cmp
pop
push
enter
outsl
std
mov
xchg
inc
enter
test
movsb
testb
xor
mov
jg
pop
pop
jb
in
add
pop
outsl
jl
mov
lods
jp
bound
rorb
lods
pop
daa
or
pop
pusha
ss
in
pop
mov
cmp
stos
mov
pop
sbb
mov
pop
jp
es
sub
ja
fistl
xchg
jnp
cmp
jge,pt
and
pushf
frstor
push
jae
xor
fwait
push
bound
pop
sbb
push
inc
push
aaa
or
inc
loopne
ja
adc
sbb
push
mov
and
incl
ja
out
and
jle
jl
ss
xchg
es
pop
push
xorb
mov
lods
sahf
popa
dec
out
repz
mov
jmp
mov
shll
bound
data16
clc
out
inc
and
xchg
out
subb
adc
dec
clc
mov
inc
mov
push
jl
test
sbb
inc
push
dec
mov
mov
inc
ret
outsb
mov
ret
xchg
fisttps
ds
jns
mov
pop
test
out
xchg
shrl
fadds
sbb
jg
mov
lcall
push
inc
pop
mov
jp
inc
sbb
inc
jle
test
mov
mov
jge
pop
mov
sbb
mov
xchg
aaa
jle,pn
movsb
jb
push
cmpsl
movb
jo
je
xchg
data16
cmpsb
cmp
ds
push
push
cld
fidivrs
push
gs
inc
jle
jb
es
data16
push
push
lcall
adc
jge
mov
pop
jns
pop
mov
push
adc
dec
jo
xchg
sbb
stos
mov
inc
cmpsl
insl
xchg
xchg
stc
arpl
jo
fdivrp
pop
pop
out
add
sbb
js
mov
jo
push
ss
test
jbe
pop
or
pop
leave
push
xchg
testb
test
pushf
inc
push
xchg
in
and
jb
daa
xor
inc
xchg
jle
js
loop
push
lods
outsb
mov
mov
imul
ffree
rolb
xor
inc
adc
sti
mov
repnz
inc
pop
dec
sbb
cmp
jb
daa
cld
jg
push
ret
into
pop
sbb
xor
jb
daa
dec
jg
push
enter
stos
xchg
dec
cmc
xchg
outsl
cmpsb
out
pop
dec
mov
xchg
xchg
mov
xchg
mov
sub
xchg
adc
pushl
daa
pop
lcall
jmp
push
ret
arpl
inc
pop
test
xor
jbe
push
outsb
jmp
lret
dec
xchg
jg
pop
cmp
cmp
pop
jb
dec
decl
jle
add
jl
push
xchg
into
xchg
jle
cs
jp
jmp
cmp
mov
outsl
mov
push
pop
push
pushf
into
jbe
sarl
xchg
into
in
lcall
out
xchg
push
xchg
or
dec
pusha
push
sbb
mov
ficompl
jg
mov
mov
adc
jle
mov
xchg
jb
daa
bound
dec
mov
cwtl
fidivs
mov
mov
cmpsb
push
cmp
xchg
ja
in
xchg
fcoml
jle
ljmp
mov
in
sbb
mov
popa
mov
pop
test
outsb
rcrl
out
cli
cmp
xlat
ja
mov
mov
mov
mov
das
xchg
adc
mov
xchg
jp
cli
pushw
jl
pop
inc
sbb
subb
inc
sbb
les
xor
subb
jle
pop
mov
push
pop
int
push
movd
push
push
push
loop
mov
cmpsb
scas
mov
mov
pop
imulb
jg
lods
data16
ja
adc
pusha
dec
arpl
jb
popf
test
pop
xchg
in
int3
dec
ss
es
rcrb
lcall
imul
push
cmp
fs
ss
iret
jne
mov
sbb
sbb
out
add
cli
adc
cs
cli
pop
jle
into
mov
dec
dec
push
daa
insb
into
add
je
nop
pop
adc
sub
daa
and
aas
jle
cwtl
jb
pmuludq
add
cld
mov
es
xchg
sbb
cmp
sub
lahf
cwtl
cmpsl
pop
jmp
xchg
xchg
dec
rol
cli
loop
pop
xor
mov
daa
xchg
dec
cmp
dec
fwait
push
les
lret
mov
scas
iret
mov
inc
rorl
mov
pushf
test
mov
xchg
lods
sbb
jae
hlt
je
scas
leave
pop
push
loop
push
mov
push
jg
mov
push
adc
cmp
inc
or
xor
cli
in
add
mov
data16
and
push
push
pop
jp
out
pop
add
imulb
cmpsl
enter
push
mov
xchg
stos
pop
les
dec
js
xchg
pop
or
or
sahf
stos
lds
pop
lods
cmp
fisttpll
lcall
xor
sbb
dec
pop
js
xchg
mov
or
push
and
ja
fimull
or
adc
sub
push
sub
insb
pop
fiadds
stos
cld
and
mov
inc
mov
out
or
addr16
xchg
subps
fwait
mov
enter
adc
data16
aad
xchg
mov
out
inc
pop
bound
inc
aam
dec
jb
adcl
add
ja
sbb
adc
pop
mov
xchg
xor
in
div
mov
shlb
insb
into
mov
js
sub
fisubl
cli
xchg
pop
outsb
pcmpeqd
jbe
adcb
in
push
jnp
sub
add
xchg
xchg
les
mov
push
fs
dec
add
dec
mov
push
push
mov
aaa
xor
cmp
cmc
jbe
push
mov
lahf
jp
push
sub
push
push
jle
lea
push
xchg
push
imul
out
subb
ret
pop
test
inc
sti
data16
sbb
mov
xchg
movsl
inc
sub
push
push
and
fimuls
mov
das
jle
mov
inc
sub
imul
adc
insb
mov
push
and
loopne
inc
xlat
or
mov
xchg
jl
jne
ficompl
push
ficoms
inc
jecxz
into
lahf
sti
jp
sub
sub
fisubrs
push
out
mov
push
jns
dec
dec
loope
push
dec
test
push
push
jle
lds
ja
xchg
divb
or
xchg
xchg
dec
jmp
data16
and
jno
mov
sub
inc
jb
data16
lea
adc
mov
imul
push
imul
push
jge
inc
cmp
mov
adc
add
loopne
out
leave
jb
mov
mov
inc
dec
iret
add
mov
sbb
into
shufps
into
pop
mov
out
inc
in
pop
sti
popa
adc
fisttpll
mov
pop
mov
push
into
fwait
out
xlat
cld
sahf
inc
mov
leave
test
lods
and
dec
sub
xchg
mov
mov
xor
shrb
leave
cmp
ds
mov
dec
das
jl
dec
sbb
test
push
out
outsl
ds
aam
mov
adc
mov
mov
inc
dec
pop
cwtl
mov
dec
push
push
pusha
orb
pop
or
jb
insl
rcl
insl
fidivs
fcoms
ja
shll
dec
xchg
repz
mov
je
outsb
push
xchg
push
pop
cmp
pop
pop
cld
inc
cmp
mov
popa
jp
or
das
scas
xor
testl
sub
scas
jg
sub
scas
xchg
or
fmul
jbe
adc
mov
or
lahf
fidivs
sbb
gs
sub
or
hlt
adc
sbb
mov
mov
movsb
or
add
bound
mov
adc
scas
insb
enter
dec
movb
je
aaa
or
dec
cs
mov
push
xor
push
jo
push
mov
adc
pop
push
dec
test
iret
stos
push
add
pop
sub
adc
jl
xchg
dec
xor
in
jns
popf
daa
dec
pop
inc
pop
push
jno
inc
dec
aas
add
sbb
gs
sbb
mov
sbb
xchg
dec
shll
mov
mov
and
test
test
jb
add
or
sbb
out
outsb
push
fcomip
inc
ja
ss
notb
xchg
add
xor
out
mov
sbb
sub
out
test
inc
jne
ja
mov
lcall
js
pusha
cmpsb
pop
pushf
hlt
push
xor
xchg
push
mov
push
add
insb
out
fildl
mov
mov
pop
out
mov
push
mov
in
and
lods
shr
bound
fnsave
or
mov
fs
or
adc
jecxz
outsb
addr16
enter
push
mov
cmp
adc
mov
insl
sbb
loopne
jl
lea
std
btr
adc
aaa
pop
inc
mov
or
dec
cltd
rcl
stos
pop
test
scas
dec
inc
jle
aaa
scas
popa
xchg
pop
pop
int
mov
mov
inc
test
sbb
ja
lahf
add
xchg
xchg
mov
adc
dec
js
cmp
arpl
cltd
out
or
jo
mov
hlt
leave
sti
mov
insb
imulb
adc
jb
push
mov
inc
push
int
orb
inc
sub
or
outsb
xchg
or
inc
pushw
sub
not
popa
or
push
inc
adc
inc
adc
xor
jae
and
into
push
pop
push
xor
lock
sahf
and
jae
jns
pop
cmp
push
sub
out
pushf
mov
loop
dec
or
cmpsb
out
xorl
fdivs
data16
jp
movsb
jns
adc
je
mov
xchg
cli
sub
pushf
std
mov
mov
pop
fs
shlb
mov
dec
sub
sbb
jp
xlat
mov
jp
xchg
pop
and
xchg
mov
sar
fs
pop
stc
jno
mov
jo
cwtl
rorb
orb
mov
testl
cmc
into
sub
and
xchg
scas
sub
lea
out
jo
fidivs
in
fmull
push
out
arpl
and
or
xchg
jno
mov
cmp
xor
es
push
dec
or
pusha
lea
dec
pop
mov
push
mov
popf
add
lret
jg
lods
popf
or
or
insb
bound
mov
repz
pop
gs
dec
bound
adc
orb
mov
jle
pop
mov
cld
pop
data16
js
jnp
mov
scas
pop
sbb
push
dec
add
movsb
outsl
or
or
out
push
push
imulb
fcom
push
mulb
movsl
out
jnp
rclb
sahf
adc
mov
fwait
cld
mov
jmp
mov
nop
push
push
cwtl
push
push
mov
sbb
mov
xchg
cwtl
test
lcall
scas
mov
lods
filds
ljmp
sub
test
dec
pop
pop
xor
cli
out
mov
aaa
idivl
mov
push
faddp
outsb
mov
jg
repnz
and
sbb
scas
mov
stos
mov
inc
push
stos
jg
pop
push
bound
inc
xchg
out
ja
mov
cmpsl
aam
bound
ljmp
pop
jno
loope
jae
pop
add
test
dec
test
inc
xor
add
cmp
mov
or
pop
push
sub
out
es
sbb
jle
scas
jno
scas
jbe
xchg
push
xchg
xchg
lods
data16
sub
mov
or
xchg
mov
pop
mov
es
outsl
jle
xchg
xchg
jmp
repz
push
mov
pop
xchg
inc
jbe
fiadds
jnp
mov
ljmp
push
push
es
aaa
xor
movsl
lods
nop
addb
icebp
or
je
fists
mov
sbb
fwait
test
clc
mov
mov
jp
pop
ss
or
scas
pop
out
outsl
adc
sub
mov
sbbb
sub
inc
sti
std
negb
add
sbb
test
fs
mov
jge
gs
sbb
mov
dec
into
push
scas
lock
xchg
sbb
sbb
mov
cmpsl
push
xchg
jl
or
mov
ds
pop
pop
pop
daa
push
jp
dec
es
leave
push
outsb
push
out
pusha
daa
pop
or
pusha
ds
daa
sbbl
push
pusha
cmpsb
sbb
push
xchg
daa
mov
dec
scas
pop
push
add
cmp
sbb
cli
mov
in
jo
loop
pop
aam
and
cwtl
jmp
push
mov
mov
stos
cmp
into
cmp
int3
pop
mov
mov
lahf
push
xchg
or
push
mov
inc
dec
fisubs
addb
jae
or
inc
push
push
dec
pop
aas
or
sahf
add
xlat
mov
xor
pmaxub
sub
mov
mov
jg
out
pop
cmp
subl
imul
enter
push
mov
into
pop
pop
jno
cld
pop
mov
inc
jnp
sarb
enter
ja
ret
ds
sbb
or
ja
pop
jne
bound
adc
in
lret
jp
in
loop
mov
addr16
jbe
or
ja
xchg
cs
pushl
adc
fildll
cltd
xor
pop
jb
push
lret
scas
popa
adc
cmpsl
outsb
jle
xor
loopne
and
sti
adc
push
jl
pop
ds
jbe
adc
icebp
inc
push
popa
inc
or
xchg
cmp
insb
mov
data16
cmp
loop
cli
out
jne
mov
std
loope
pop
loop
rcr
mov
jns
xchg
inc
add
daa
out
daa
or
shl
aam
iret
aam
push
xchg
jp
pop
pop
add
test
lea
adc
mov
adc
adc
dec
sbb
in
mov
movsw
loopne
lret
mov
jge
ss
push
push
and
bound
push
cld
xlat
and
pop
aaa
and
jae
pop
pop
jnp
cmpsl
lds
insb
or
imull
cmp
jecxz
imul
jo
aaa
dec
dec
or
js
pop
jg
roll
push
push
je
push
inc
adc
push
test
popa
mov
scas
mov
loopne
pop
iret
jl
jnp
scas
js
cmp
xchg
pop
and
cmp
in
mov
stc
xchg
outsb
push
pop
ljmp
insb
xchg
push
rclb
test
dec
cmc
sbb
dec
xchg
movl
imul
mov
mov
data16
ret
sbb
xchg
enter
ljmp
xchg
imul
jb
push
push
dec
fmul
mov
and
mov
xchg
pop
js
ljmp
add
push
xchg
je
inc
mov
push
jge
pop
pop
pop
pop
xchg
push
pop
push
fcomi
push
or
clc
jp
lods
cld
or
shl
pop
sti
icebp
xor
add
inc
lahf
jge
insl
xchg
testb
mov
sbb
mov
imul
aam
pop
mov
ja
outsl
rolb
xchg
sub
loop
sub
icebp
xchg
dec
cmpsl
rorl
dec
jp
imul
clc
jbe
pop
push
push
inc
jne
cmc
jle
ljmp
push
test
ds
cmpsl
stos
cld
ss
aam
xlat
testb
imul
incb
dec
add
xor
push
cli
lods
dec
inc
jl
daa
and
lods
dec
dec
rorb
pop
lods
ds
enter
insl
jg
fistpl
mov
rep
pop
mov
and
jnp
notb
push
jne
adc
test
push
adc
ds
xchg
lods
cmp
cmp
push
enter
push
cld
fs
notl
push
mov
xchg
dec
sub
mov
jg
ja
jl
data16
push
mov
ss
inc
jmp
xchg
push
adc
imulb
icebp
pop
mov
push
mov
scas
into
nop
sub
sbb
lcall
mov
clc
or
push
xor
cmp
cmpb
inc
inc
mov
enter
jnp
push
cmpsb
imul
pop
fdivs
dec
inc
and
cli
cwtl
out
rolb
out
xchg
ja
sub
ss
loopne
push
inc
divl
pop
push
jp
or
or
lea
or
xchg
in
inc
cmp
mov
dec
cmp
push
out
mov
dec
pop
les
inc
arpl
jle
into
cmp
lret
jg
outsb
cmp
jo
loop
shlb
or
jp
data16
leave
mov
cmp
sarb
xor
sub
sbb
jo
jge
bound
in
mov
jbe
scas
leave
or
jle,pn
mov
xchg
pop
xchg
push
jne
push
repz
clc
cmp
cmpb
inc
aam
push
inc
sbb
clc
push
push
je
pop
fldt
jno
push
push
je
mov
shl
xor
pop
ljmp
jle
push
inc
pop
jbe
sarb
push
fwait
mov
aaa
inc
xlat
or
ss
jl
pop
push
aam
mov
push
push
or
pop
ds
pop
pop
inc
push
hlt
push
out
ret
aaa
adc
push
in
cmp
loopne
bound
jmp
inc
xchg
jg
insb
push
outsb
sbbl
call
jle
adcl
inc
jb
js
movsb
cmc
popf
insb
mov
mov
dec
dec
cmpsb
adc
js
xor
sub
push
lea
xchg
push
or
cmp
jp
xor
popf
pop
mov
xchg
push
dec
mov
mov
fisubs
xor
xchg
push
dec
mov
outsb
xor
mov
lret
ja
jbe
cs
cmc
scas
test
jge
xchg
and
sbb
fdivrl
lcall
mov
push
push
xchg
ds
push
pop
ja
xchg
pushf
dec
inc
cld
xor
sub
out
and
add
mov
mov
fwait
jbe
mov
xor
dec
ss
pop
and
int3
or
jbe
dec
test
std
jbe
push
inc
ss
loop
or
inc
push
mov
jmp
push
jns
dec
xlat
mov
in
inc
add
mov
mov
addps
setb
testb
mov
shll
jo
adc
push
sarb
lret
lcall
xor
and
sbb
lods
sbb
bound
fistl
les
outsl
fidivl
into
mov
js
out
data16
jbe
cs
and
mov
aas
inc
pop
repz
cmpsl
mov
jle
mov
dec
sarl
fidivs
in
cmpsb
jle
xor
pop
ljmp
mov
sbb
dec
sub
inc
jns
push
jp
and
call
shl
insb
pop
aaa
mov
xchg
xchg
ret
outsb
lret
jge
pop
pop
fdivl
or
cmp
mov
push
jno
pcmpeqd
sbb
outsb
inc
jnp
jb
cmp
xor
loop
push
lret
and
xchg
pop
xchg
jmp
ficomps
sub
mov
dec
icebp
repnz
insb
sahf
mov
fidivs
inc
insl
add
add
add
insl
popa
inc
pop
xchg
pushf
mov
imul
bnd
pop
scas
and
cs
inc
fstpt
xchg
mov
paddd
int3
mov
sbbl
repnz
lock
inc
pop
push
pop
pushf
mov
aas
jno
pop
das
push
push
adc
mov
mov
xor
xchg
fwait
push
aad
pushf
bound
mov
cli
and
pop
fnsetpm(287
test
cmp
pop
and
mov
mov
and
dec
push
dec
adc
mov
pop
pop
mov
push
shlb
xchg
mov
push
adc
pop
out
mov
adc
push
or
sub
or
ja
dec
xchg
push
outsl
xchg
mov
test
xor
jg
push
in
sub
cmpsb
dec
jns
into
es
aad
aaa
inc
shrl
out
xchg
xchg
and
pop
mov
sub
movsl
lahf
cmpsb
jae
push
daa
or
xor
xor
inc
in
mov
xchg
sahf
int
xchg
outsl
test
test
shll
cmpb
bound
call
sub
sbb
lea
testl
out
cs
fstps
xchg
pushf
leave
sub
shlb
cmp
mov
lea
jl
bound
mov
push
fldt
scas
shll
mov
ret
xchg
pop
cmp
sbb
push
or
cmp
jp
je
popa
cmpsl
add
int3
add
and
push
cmpsl
mov
pop
adc
lahf
outsl
mov
pop
xor
int
in
loop
adc
mov
dec
push
rcr
push
mov
or
sub
push
mov
or
push
pop
jle
inc
sahf
stc
sbb
rep
adc
pop
mulb
jnp
cmpb
addr16
push
sbb
push
fimuls
imul
inc
stos
lcall
movsb
pop
inc
xor
push
sti
jae
mov
lret
rolb
mov
pop
rcl
jl
mov
push
popf
jo
jbe
jmp
insb
cs
sbb
add
jl
pop
fsubrp
enter
pop
aam
data16
cmp
mov
pop
loop
jbe
mov
sbb
jo
es
insl
push
xor
pop
insl
push
jbe
pop
inc
dec
insl
and
cmp
mov
dec
loope
xor
pop
cli
cli
push
int3
pop
mov
push
mov
jmp
sbb
or
into
and
mov
add
mov
push
out
cwtl
inc
or
aas
cmpsl
andl
adc
hlt
push
cmp
and
lods
xor
pop
pop
mov
fucomip
out
push
pop
nop
movsb
mov
js
sarb
loopne,pn
push
inc
pushf
adc
push
xor
mov
into
xchg
or
jae
cmp
add
dec
push
and
sub
xor
and
sbb
sub
daa
mov
cmp
aam
sub
cmp
push
jno
aas
loope
jns
daa
pop
push
mov
sbb
add
and
into
mov
or
jb
push
push
lahf
jle
mov
mov
add
pop
mov
cli
div
int3
notl
add
inc
xchg
xor
mov
xor
add
das
add
xor
dec
mov
mov
jp
cmp
xor
xor
fistl
arpl
sahf
pop
xor
arpl
repz
xlat
cmpb
ds
xor
pop
das
xlat
xchg
cmp
xchg
sub
shrb
jg
seta
mov
daa
bound
mov
sbb
pop
and
aas
leave
int
pop
sub
dec
aad
dec
xchg
xchg
data16
cmp
scas
andb
push
sbb
hlt
sbb
iret
and
pop
out
jle
xor
cmpl
xchg
jle
fisttpl
add
sub
rolb
pop
imul
xor
jnp
jg
jl
inc
xor
mov
jmp
jle
arpl
jg
icebp
dec
bound
mov
sbb
es
or
mov
mov
addr16
insb
push
mov
repnz
aam
mov
push
cmp
mov
lods
imul
loope
iret
pop
xchg
popa
or
cmp
test
jns
and
mov
inc
pop
xor
sub
rcr
pushf
mov
ret
cld
in
sub
sub
add
pop
cmpsb
push
loopne
sub
jbe
loop
sarl
inc
push
mov
pop
pop
loope
ja
pop
pop
mov
inc
ds
adcb
xor
pop
pop
rclb
gs
sarb
mov
iret
pop
out
inc
cmp
mov
mov
packsswb
jl
or
mov
sbb
xlat
scas
xlat
pop
push
cmp
or
inc
adc
pop
jle
jnp
negl
adc
and
lods
mov
pop
fsubl
rcrb
push
fistl
or
mov
jle
dec
pop
xor
data16
and
inc
push
movsb
mov
mov
dec
ljmp
push
xchg
stos
dec
jle
mov
mov
mov
ret
das
dec
out
jnp
fnstenv
jns
dec
loopne
daa
push
dec
mov
mov
push
lret
cmp
fwait
mov
outsb
fs
mov
cli
jle
pop
je
das
or
fwait
mov
sbb
and
pop
int3
jmp
lcall
jle
pop
rcrl
clc
mov
les
push
addb
cmp
sbb
add
or
dec
adc
inc
test
test
xchg
xor
and
mov
ljmp
xchg
jle
cs
adc
dec
mov
data16
popf
cwtl
jle
cmp
mov
ret
mov
inc
jp
cmpsb
push
fld
popf
adc
call
fstpt
mov
aas
mov
cltd
mov
repnz
sub
xor
and
jne
mov
or
ret
dec
jb
pusha
ljmp
shrl
imul
xchg
jle
test
dec
xchg
pop
repnz
daa
sub
xor
or
xchg
ror
xchg
sub
jb
in
or
add
mov
div
icebp
enter
enter
jns
inc
inc
push
sub
inc
pop
jnp
arpl
xor
xchg
fldcw
cld
nop
rolb
mov
pop
jno
out
or
pop
jne
jge
call
cmc
bound
lcall
cwtl
mov
dec
push
je
xchg
mov
dec
sbb
xchg
mov
dec
sbb
mov
dec
sbb
mov
dec
push
je
mov
sbb
lods
lcall
push
out
popa
data16
lods
outsb
sub
in
ret
xchg
cmp
push
outsb
test
xchg
mov
cmp
adc
aaa
pop
repnz
sbb
mov
dec
push
dec
cltd
pop
push
xchg
xor
mov
lret
sbb
mov
or
mulb
mov
jnp
ss
out
test
jne
jo
je,pn
and
mov
shlb
push
inc
inc
inc
push
xchg
adc
mov
push
dec
or
xor
sub
push
loop
shrl
pushl
int3
out
sbb
outsb
xchg
nop
mov
mov
aaa
aad
push
sbb
bound
sbb
push
inc
mov
enter
jp
and
mov
xchg
test
push
sti
in
ja
aad
pusha
mov
dec
and
pop
pop
pop
lods
outsb
mov
mov
daa
mov
or
push
or
scas
cmpsb
mov
mov
mov
jae
fwait
sub
xchg
adc
insl
jmp
icebp
jb,pt
pushf
fwait
out
subb
pop
cmp
or
pop
xor
js
negb
push
mov
bound
jns
nop
bound
adc
lods
xchg
je
pop
pushf
sbbb
lock
ja
mov
andl
mov
fs
sbb
xchg
push
ret
xchg
scas
mov
call
mov
xchg
fcompl
push
movsbl
int3
xorb
out
mov
sub
dec
xchg
jg
cld
pushf
xchg
mov
jmp
sbb
adc
pop
cwtl
rorl
add
pop
mov
push
lahf
movsb
flds
jnp
add
xchg
popf
adcb
test
insl
cmp
xchg
dec
orb
orb
or
jle
mov
cmc
outsb
aaa
cmpsb
pushf
mov
cmp
rcll
xchg
pushf
or
mov
mov
pop
jb
int3
ss
fwait
sbb
lods
push
or
out
sbb
jne
fsts
std
fwait
sbb
es
add
bound
cmp
push
pop
push
pop
je
out
int3
or
pop
cwtl
jo
out
rorl
fnstsw
ret
std
push
cmp
sub
or
loop
out
in
out
push
popa
shlb
in
out
add
fbstp
shrl
jnp
or
cmp
fsubrs
lods
cmp
pop
mov
gs
sbb
and
sbb
in
cmp
mov
push
mov
xchg
and
sbb
mov
lahf
imul
or
jae
jb
add
movsb
lret
sub
mov
lock
hlt
inc
inc
sbb
icebp
mov
scas
nop
xchg
divl
pcmpeqd
inc
fistl
pushf
inc
xchg
lcall
pushf
sub
test
nop
outsb
mov
add
mov
pop
jecxz
scas
test
mov
xchg
lret
sbb
mov
jb
inc
and
pop
mov
sub
and
clc
outsl
sar
out
sbb
add
loop
sbb
mov
push
jl
jge
dec
cltd
jle
outsb
in
fwait
lahf
scas
push
pusha
arpl
inc
rcrb
push
lahf
clc
movsl
push
fnstsw
cli
mov
push
pop
jp
adc
in
adc
xor
sbbb
mov
lret
stos
mov
pop
mov
jnp
jb
or
jno
scas
les
inc
fcmovne
rcpps
fcmovnu
sbb
das
sub
xchg
icebp
fisttpll
or
mov
fisubrl
addr16
pop
sub
sbb
shrb
fsubl
xchg
mov
pop
data16
and
xchg
cmp
iret
xlat
push
sub
xchg
es
iret
mov
cmp
pop
out
push
mov
pop
mov
loop
aaa
or
ljmp
inc
push
sub
pop
adc
mov
scas
cmpsb
pop
adc
loop
sbb
mov
add
jne
div
lea
jae
test
xor
jnp,pn
xchg
lods
nop
add
test
daa
or
cwtl
std
ja
scas
or
jl
jp
lcall
cmp
push
out
loopne
movsb
lea
mov
scas
mov
out
iret
and
cli
movsb
adc
movsl
dec
dec
push
inc
fcomi
add
es
jg
adc
sbb
push
out
inc
xchg
pop
loope
je
lea
insb
sbb
clc
test
adc
paddsw
shrb
testb
add
add
or
mov
jmp
nop
lods
testb
sub
fidivrl
jb
and
mov
mov
sub
add
inc
test
or
aad
jp
int
xlat
fwait
js
mov
stos
out
adc
xor
xor
arpl
jb
sub
or
sbb
out
es
or
idivb
ljmp
jmp
or
int3
jnp
mov
or
rolb
push
pop
xchg
out
push
cmp
fidivrs
pop
jbe
jb
addr16
imul
push
cwtl
xchg
sbb
fs
adc
xchg
xor
out
inc
xor
mov
sub
fdivs
and
je
sti
xchg
push
inc
pop
jno
fiadds
xor
cmp
out
incl
inc
mov
inc
inc
ret
push
fimuls
pop
mov
flds
nop
loope
out
sub
jecxz
cld
jb
xchg
shlb
cmpb
xor
cli
pop
sub
mov
aad
jle
adc
enter
xorl
scas
adc
ficomps
jo
dec
mov
push
pop
add
push
push
das
adc
dec
aaa
mov
mov
repz
loope
push
shr
ss
sbb
cmpsl
pop
sbb
push
jg
jle
aas
mov
push
push
repz
mov
push
std
clc
lea
ficompl
repz
jle
cmp
xchg
jle
push
mov
in
push
enter
xchg
and
xlat
idiv
and
loop
dec
push
test
ss
stos
xchg
test
add
lcall
inc
nop
xchg
out
bound
jp
mov
xchg
sbb
sbbb
jle
or
dec
cmp
in
push
or
add
dec
inc
xchg
mov
js
xlat
orb
cmpsb
int3
cmp
test
lods
out
out
popa
aad
jno
sub
scas
xor
cli
xchg
and
ss
adc
movsb
sbb
jg
jge
es
cli
sub
aam
pop
daa
loope
popa
pop
inc
xchg
cmpsb
push
mov
pop
mov
xchg
and
dec
ficoms
mov
movsb
mov
mov
cmpsl
pop
or
clc
xchg
mov
or
jmp
imul
sbb
jl
xchg
lret
pop
cmp
mov
cs
fsubl
or
pop
lcall
imul
clc
inc
aas
adc
fsincos
inc
movsb
ja
ret
lods
ds
shll
dec
es
cmp
lcall
mov
or
jns
jbe
push
insb
inc
adc
mov
call
push
xor
jp
cmpsl
cs
jp
hlt
cmp
cld
xchg
repnz
dec
rorl
mov
add
clc
jbe
pop
pushf
out
lock
jb,pt
aas
mov
sub
xchg
mov
xchg
popl
push
xchg
std
dec
add
xorb
add
mov
inc
test
jge
xlat
sarb
pop
stc
sbb
pushf
xchg
jp
inc
sbb
hlt
mov
aaa
or
fisubs
mov
push
inc
gs
xacquire
std
addr16
jo
add
push
fwait
push
dec
dec
jne
inc
ss
push
cmp
pop
inc
push
xchg
pop
out
inc
inc
mov
push
lcall
dec
int
pop
test
sub
jmp
js
adc
movsb
lret
es
daa
inc
sahf
stos
dec
xchg
jb
add
ja
push
mov
xchg
fs
out
sub
dec
mov
lcallw
xor
jne
adc
leave
cmp
aam
pop
mov
jne
fcmovu
mov
daa
rorb
add
xchg
push
lods
mul
mov
popa
dec
inc
sbb
test
mov
mov
and
dec
mov
ret
xchg
cmp
dec
mov
sbb
popf
jbe
dec
jge
mov
pusha
mov
and
cmpsl
add
pop
jle
cmp
push
mov
lods
lea
sub
jp,pn
arpl
loopne
movsb
jle
fcmovnbe
xchg
es
adc
sub
cmp
or
loop
shlb
stos
insb
adc
rcrb
daa
scas
xchg
mov
adc
jle
gs
pop
mov
es
pop
outsb
jge
fistl
and
sub
fistpll
push
mov
ljmp
ljmp
data16
cmp
out
lcall
xchg
adc
sbb
push
jae
adc
adc
and
xchg
movzwl
mov
int3
add
fidivrs
push
lret
add
movsb
lock
dec
mov
ljmp
inc
lret
inc
loop
fidivl
loopne
mov
inc
movsl
cmc
nop
das
ss
xchg
mov
sbb
insl
sub
sbb
sbb
loop
pop
ficompl
dec
pop
jno
mov
sar
adc
mov
xchg
or
push
sti
and
mov
test
cmp
inc
cmpsl
xchg
arpl
out
push
sar
jg
ss
pop
push
daa
adc
and
iret
repnz
in
shrl
ds
std
data16
cmp
sahf
dec
and
into
pop
add
cs
fdiv
shr
div
ss
pushf
outsb
out
push
scas
push
mov
mov
lret
jbe
gs
insl
cmp
fcmove
andb
push
insl
js,pn
mov
daa
mov
pop
aaa
rcrb
mov
lock
js
repnz
cmp
mov
mov
out
bound
mov
sahf
jge
call
pop
xchg
inc
adc
in
lods
add
pusha
jbe
xor
push
mov
lahf
jle
jbe
cmp
sbb
mov
push
outsl
rcrb
cmp
mov
pop
or
notb
andl
mov
pushfw
ret
cmp
rorb
push
mov
into
out
out
pop
pop
pop
dec
pop
pop
lcall
clc
cmp
jle
scas
mov
adc
insb
pushf
xor
lcall
xchg
in
pushf
and
div
push
mov
xchg
dec
adc
jno
sbb
loop
push
jl
loop
and
mov
loopne
add
cwtl
pop
testb
push
mov
sbb
jl
daa
push
xchg
std
jp
loope
mov
test
mov
jns
ss
sub
inc
arpl
mov
sbb
pushf
mov
lock
ja
rolb
push
push
mov
mov
cmp
xchg
adc
push
jmp
or
push
es
std
push
std
push
es
adc
fsubs
inc
xchg
push
cmpsb
rclb
xor
mov
xchg
jle
mov
dec
mov
dec
dec
mov
and
mov
daa
inc
pop
out
inc
dec
rcrl
cwtl
sub
icebp
sub
pop
pop
loope
out
js
hlt
iret
push
cli
lock
in
add
loopne
xor
mov
popa
mov
and
ja
stos
or
sbb
aad
cmp
push
jbe
outsl
stos
fcmovb
in
outsl
out
pop
pop
push
rorb
psrld
jle
pop
push
sbb
add
mov
rcll
and
xor
mov
ffree
movsb
cs
add
pop
shl
cmp
outsb
cwtl
fstps
mov
rclb
mov
pop
popf
repnz
pop
and
fildll
aaa
cld
cld
and
push
and
push
cwtl
shlb
popf
movsb
and
filds
jb
in
push
or
imul
xchg
aad
or
test
stos
mov
push
idivb
pop
push
push
ss
mov
adc
pushf
jno
pop
and
push
cwtl
lret
add
add
adc
mov
adc
dec
cs
inc
test
mov
and
xor
push
or
xchg
add
in
push
mov
push
testb
add
divb
sar
cmp
stc
cmp
out
out
jae
jmp
xchg
or
add
mov
jle
mov
test
imul
pop
xchg
mov
aas
pushf
cs
sbbb
xchg
or
xchg
jb
xchg
ljmp
sub
ljmp
push
push
mulb
jge
lar
dec
jle
mov
out
and
cmpsl
pop
jns
shrl
out
call
aas
aad
scas
pop
roll
stos
mov
adcl
test
ds
jne
lds
sti
add
mov
pop
mov
aaa
testl
jecxz
or
xchg
mov
adc
insb
fucomp
cli
jo
clc
pop
mov
inc
push
fsin
xchg
or
and
push
repz
sbb
or
mov
ret
mov
jle
mov
xchg
lea
sbb
xchg
out
mov
or
mov
repnz
jns
xchg
mov
divb
inc
fsubl
outsb
fiaddl
repnz
jnp
js
dec
mov
int
bound
mov
repz
ss
xchg
push
sbb
pop
pushf
jge
rcrl
leave
jle
addr16
bound
bound
jge
stc
dec
mov
cli
lods
inc
sbb
xor
inc
sbb
out
inc
into
js
out
ret
insl
mov
push
mov
pop
jbe
push
pop
imul
xchg
pusha
mov
loop
ss
test
cmp
push
push
daa
jle
pop
lea
div
and
inc
arpl
ljmp
loope
cs
inc
pop
mov
push
icebp
mov
xchg
cwtl
dec
jecxz
or
dec
mov
push
jbe
sub
push
andl
adc
cmp
leave
cwtl
dec
mov
cli
or
in
jle
cld
insb
test
repz
mov
push
loop
push
xchg
adc
addr16
push
adc
insb
enter
xor
inc
jae
push
mov
jae
and
insl
push
mov
push
outsb
or
es
fadd
pushf
loop
dec
pop
ds
lods
dec
mov
std
sbb
xor
inc
shll
repnz
cli
repnz
or
jp
mov
jbe
pop
pushl
push
fwait
jmp
ds
out
lcall
mov
adc
mov
movsb
sbb
adc
std
imulb
leave
insl
aam
add
cmp
sbb
shrl
mov
cld
or
sbb
and
sbb
test
mov
push
fiaddl
ljmp
popa
shll
mov
add
adc
lods
subb
push
hlt
pop
popa
fsubs
push
test
stos
and
je
push
ds
in
mov
stos
loop
int
lea
fcmovnu
mov
cmpsb
inc
rclb
std
sahf
lret
mov
pop
sbb
inc
inc
enter
sub
mov
pop
mov
loope
jmp
sbb
test
nop
and
mov
mov
pop
inc
jle
push
outsl
notl
jle
jbe
push
iret
jbe
ss
sbb
push
cmp
jg
jle
lods
outsb
cs
js
popf
jbe
lea
test
push
jge
push
or
shll
or
cmp
push
stos
xchg
pop
ja
stc
int3
ljmp
dec
xor
and
sbb
stc
push
push
hlt
ss
inc
lods
inc
or
pop
mov
in
lahf
in
decb
pop
cmpsb
lcall
jae
jle
bound
pushf
fs
lcall
mov
jle
lods
mov
mov
cld
and
push
aaa
cli
xchg
pop
mov
mov
and
mov
mov
sbb
rcll
enter
push
pushf
dec
subl
push
sub
push
jbe
xor
cmc
daa
push
or
sub
ds
bound
pushf
push
push
sbb
pushf
and
xchg
fisttpl
mov
dec
cs
jae
xchg
je
call
dec
xchg
mov
pop
jo
fisubrl
imul
ja
enter
data16
jle
scas
and
scas
jmp
adc
inc
dec
out
popa
xchg
cmp
mov
shlb
and
pusha
insb
rolb
pop
sti
and
test
xchg
adc
dec
outsb
push
neg
jp
hlt
cld
dec
insb
pop
inc
cli
idivb
mov
push
mov
push
inc
mov
mov
push
inc
insb
outsb
iret
mov
imul
push
xor
push
repz
push
lock
sub
xchg
mov
pop
nop
mov
push
testl
inc
pushf
int
jbe
inc
jbe
push
pop
push
dec
sbb
lock
adc
hlt
gs
into
xor
jp
lret
cs
or
out
sbb
mov
jmp
bound
xchg
jb
pop
cmp
push
lcall
adc
mov
ret
mov
mov
pop
lcall
adc
mov
jmp
inc
lods
xchg
push
scas
inc
test
lea
jb
xchg
push
push
sub
jl
cmp
or
xchg
pushf
leave
addl
xchg
ds
xchg
data16
push
inc
ja
dec
fs
movsb
stos
insl
inc
pop
popf
fcmovnu
pop
repnz
cmpsb
addr16
push
push
js
mov
data16
lcall
mov
jle
pop
push
mov
push
jge
xchg
pop
jns
ja
push
jne
xchg
pop
jno
outsl
mov
xchg
cmpsb
scas
push
loop
lds
cltd
pushf
es
enter
fstpl
xlat
dec
mov
je
cmp
mov
ja
mov
repz
mov
in
or
push
xchg
js
int3
inc
mov
and
mov
xchg
xlat
scas
and
mov
or
adc
shlb
bnd
cli
pop
je
add
jecxz
sbb
shrb
inc
jb
cli
mov
mov
mov
push
cli
push
movb
adc
xchg
push
jl
jp,pn
xor
or
js
jp
hlt
jbe
adc
icebp
repz
iret
pop
divb
js
mov
jae
xchg
inc
or
push
jl
and
scas
jl
call
inc
jae
cli
scas
and
cmpsb
pop
test
into
xor
lcall
pushf
and
movb
jl
cmp
adc
cmpsb
inc
sti
repnz
fwait
sub
out
dec
mov
call
mov
jle
fidivl
mov
lods
jns
dec
mov
repnz
nop
mov
mov
lods
push
int
das
mov
data16
out
push
mov
xor
xchg
xchg
add
sti
xchg
cli
mov
jb
xchg
jae
mulb
xchg
out
sbb
movsb
por
mov
jp
addb
push
jp
aas
xchg
pop
aas
mov
pop
cmp
loop
xchg
ficoml
jg
pop
xor
pop
pop
xchg
mov
pushf
gs
jle
and
js
out
shrl
xchg
push
cmpsb
pop
and
mov
inc
ljmp
out
push
or
mov
dec
test
insb
jg
jl
push
dec
pop
jp
and
xchg
sbb
pop
inc
insb
mov
lods
xor
cmp
jle
femms
negb
sub
xchg
push
out
lods
fisubs
mov
cmp
out
sub
mov
xor
lahf
sub
jns
scas
xor
and
sub
pop
lret
add
sbb
jmp
div
outsl
xor
push
or
lock
mov
and
jo
shll
and
dec
push
in
sbb
xchg
lret
mov
xchg
out
mov
mov
jns
lcall
pop
jg
mov
imul
repnz
push
jecxz
hlt
mov
inc
mov
call
push
push
or
ss
mov
in
add
inc
data16
mov
mov
lret
sub
pop
pop
jb
inc
incb
push
cmp
bound
jb
push
inc
cwtl
and
xchg
dec
pop
add
idivb
daa
xchg
in
data16
push
mov
jbe
stos
jo
lds
xor
mov
into
inc
cmpb
bound
pushf
push
cmp
mov
adc
fst
pop
and
iret
enter
mov
pop
daa
xor
mov
pushl
xor
lods
pop
or
ja
arpl
add
lds
pop
ljmp
std
jno
jle
int3
pop
incb
adc
sbb
daa
adc
in
add
and
rolb
xchg
les
mov
jns
rcll
stc
mov
add
mov
push
pop
sub
stos
cmp
lcall
iret
enter
pop
xor
enter
pop
js
fwait
aas
jle
rolb
sbb
int3
pop
repz
out
jnp
lock
push
add
in
mov
cmp
mov
inc
mov
add
sub
orl
jne
je
shlb
push
ljmp
push
ds
in
ss
daa
popf
sbb
jle
les
std
pop
mov
pop
adc
or
dec
mov
clc
je
pushf
ds
mov
dec
jmp
ds
ds
dec
sub
aaa
test
cmp
pushf
into
or
inc
repnz
out
pop
bound
and
insb
pop
push
mov
pop
sub
cmp
movhps
loopne
adc
add
sbbl
pop
fisttpll
test
add
fstpl
xchg
inc
mov
or
pop
xor
gs
xor
js
adc
loopne
jl
iret
jg
add
sbb
or
pop
xchg
scas
pop
fldl
scas
pushf
fwait
mov
xor
pop
bound
mov
adc
jo
push
mov
xor
and
push
xchg
add
out
and
or
leave
sbb
and
add
lea
inc
dec
xchg
push
mov
dec
out
dec
dec
pop
mov
push
mov
cmp
mov
cld
push
mov
lret
mov
sub
mov
movsb
in
xchg
test
pop
cmpsl
xchg
mov
mov
ficomps
xor
inc
mov
xchg
test
push
ds
orb
fldt
jb
pop
clc
push
repnz
leave
add
and
xchg
mov
mov
lret
sbb
jbe
inc
mov
xor
add
and
mov
inc
and
out
rolb
les
imulb
inc
scas
xor
ss
pop
pop
aas
mov
and
jbe
mov
aas
cmpsb
or
push
add
cmp
mov
ja
mov
cmp
repz
mov
cltd
shr
jb
mov
loop
lods
and
mov
pop
lcall
sub
and
inc
outsb
and
aaa
xor
mov
push
scas
xor
clc
push
xchg
dec
add
xor
dec
mov
xchg
clc
pop
inc
mov
mov
add
jecxz
pushf
inc
sub
jbe
outsb
or
xor
jecxz
ss
xchg
ficomps
push
cmpsb
and
mov
or
imul
jl
cmpsl
pop
jl
or
push
outsb
push
jg
mov
jbe
pop
movups
fists
pop
cmpsb
adc
jbe
dec
push
xchg
dec
dec
push
insl
push
insb
inc
data16
lea
jle
stos
cli
cwtl
aam
mov
ret
adc
lock
subb
mov
xorl
ret
push
add
push
pop
das
sti
mov
xchg
pop
insb
test
cld
data16
es
push
xlat
ss
push
insl
push
jl
ja
push
xchg
mov
jle
sub
jle
xchg
insb
out
push
daa
in
into
mov
ljmp
fdivl
or
fcoms
fiaddl
mov
push
outsl
addr16
fildll
push
add
shrb
pop
push
out
faddl
sub
mov
mov
push
dec
fwait
adc
jge
jp
rol
mov
jp
cmpsb
mov
dec
insb
sub
mov
pop
inc
mov
push
inc
inc
xor
inc
xchg
lods
cmp
jl
push
inc
mov
xor
das
loopne
inc
cmpsl
or
das
xor
out
loopne
mov
dec
xchg
xor
jb
sbb
insl
add
lods
push
aad
sub
call
int
lret
mov
mov
xchg
or
inc
or
cmp
xchg
ds
out
jl
dec
into
xchg
data16
cs
pop
adc
inc
pop
test
mov
mov
jg
into
scas
ret
es
or
frstor
xor
jae
insb
pop
js
insl
shrl
fcompl
movsl
addr16
xchg
or
ret
inc
test
pop
inc
push
sbb
add
pop
outsl
jbe
jae
push
es
dec
loope
xchg
xor
rorl
inc
shlb
adc
jmp
and
in
addr16
test
inc
sub
pop
add
inc
rcrb
xchg
xchg
push
lds
sbb
aaa
or
push
inc
das
pop
pop
fdivl
bound
xchg
iret
aad
or
mov
push
les
rcr
aad
pop
test
mov
push
mov
xchg
pushf
movsl
aaa
push
repz
sbbb
sbb
in
jge
xor
pop
pushf
inc
xchg
mov
out
enter
cmp
dec
lock
movsb
dec
fwait
mov
mov
or
movsb
adc
push
push
repnz
repnz
add
loope
jae
mov
in
jecxz
ret
jle
cmpsl
sub
incb
cmp
adc
jg
push
inc
sti
jns
push
inc
cmpsl
cmp
mov
sub
cs
jo
pushf
sub
and
push
out
adc
mov
into
mov
loop
add
and
arpl
addr16
or
in
xor
hlt
mov
int3
dec
adc
scas
cmp
movb
sarl
mov
push
cmpsb
mov
out
jp
mov
pop
inc
out
inc
inc
enter
mov
mov
add
jmp
jb
add
rcrl
fiadds
call
call
adc
jae
inc
xor
data16
cltd
stos
or
push
fisttpll
xor
inc
lock
fmull
data16
in
lret
dec
xor
xchg
scas
test
out
pop
and
push
mov
js
jbe
idivb
sbb
dec
mov
clc
fildl
dec
cli
aas
jmp
xchg
add
pop
pusha
jbe
js
hlt
jge
into
sbb
add
shr
push
or
scas
adc
jb
or
sub
cltd
or
inc
pop
int
pop
pop
popf
and
pushf
ss
inc
xchg
fwait
hlt
push
pop
cmpsl
stos
push
jecxz
es
adc
inc
insb
mov
xchg
pop
sub
push
push
in
or
fimuls
scas
test
push
dec
pop
or
xchg
scas
js
movsb
jge
or
pop
xor
xorb
data16
jbe
mov
lahf
pushf
inc
out
lea
push
mov
xchg
dec
cmpsl
push
sbb
push
mov
mul
outsb
jp
xor
mov
loopne
in
mov
cmp
repz
inc
push
lea
mov
loopne
push
orb
les
jo
dec
roll
data16
clc
cli
mov
push
push
mov
loopne
dec
mov
int3
push
js
arpl
adc
ffree
inc
icebp
inc
push
mov
dec
test
inc
icebp
int
dec
scas
xchg
jb
cltd
mov
jo
jnp
outsb
xchg
inc
xor
or
mov
or
cmc
rcrb
imul
insl
dec
pushf
cmp
pop
loop
xorb
rcl
mov
cmp
imul
dec
call
mov
inc
dec
lret
mov
shll
pop
mov
mov
mov
pusha
push
adc
inc
nop
jle
push
and
hlt
adc
out
loop
testl
scas
mulb
in
and
test
andb
push
mov
dec
aaa
or
push
mov
lods
loop
mov
fdivrl
lcall
pop
adc
dec
stos
and
mov
daa
mov
xchg
sub
testb
ret
inc
inc
jb
daa
std
push
ficoml
mov
inc
popf
push
nop
cs
mov
pop
push
add
loop
flds
pop
adc
bound
scas
cli
push
mov
adc
and
xchg
inc
dec
fistl
inc
push
jle
dec
scas
sub
cmp
pusha
jge
jge
pop
push
xor
dec
das
fiaddl
loopne
adc
or
and
mull
push
in
mov
push
lods
mov
mov
mull
stos
in
cmpsb
jo
movb
adc
loopne
cmpsb
cs
jae
es
adc
int
fisubl
dec
mov
enter
jmp
mov
cmp
jno
dec
jecxz
mov
pop
sub
or
jp
je
push
pop
dec
jl
nopl
ja
js
pop
jl
mov
push
pop
xor
push
jp
jo
test
mov
xchg
sarl
bound
in
jno,pn
mov
fmul
fwait
outsl
xor
push
mov
jge
push
jbe
push
xorb
mov
jle
fidivs
push
jns
adc
mov
cmpb
sbb
fdiv
out
lea
mov
enter
push
sti
adc
dec
cmp
ds
ss
push
add
mov
push
or
xchg
fwait
xor
ja
lds
lods
xor
ss
je
push
int3
mov
jecxz
jecxz
leave
add
pop
repnz
iret
mov
mov
shl
ljmp
mov
push
daa
pushf
test
and
adc
jp
mov
and
nop
pushf
and
jbe
and
int3
jecxz
repnz
push
cli
out
jge
pop
inc
movsl
xor
push
roll
es
push
push
loopne
inc
aam
imulb
or
adc
cmp
mov
mov
add
cli
mov
cmp
xor
addr16
fsubrp
roll
mov
daa
sub
test
push
inc
clc
inc
mov
in
xchg
ficoms
or
pushf
inc
mov
bound
popl
xchg
repnz
loopne
out
jge
inc
mov
inc
xchg
lcall
mov
out
inc
jb
das
imul
ret
dec
out
mov
push
testb
inc
sub
jbe
push
sub
lea
mov
repz
mov
test
ljmp
add
lcall
jl
fistpl
jbe
pmaxsw
sub
clc
ret
lods
fidivrs
in
cs
pop
lods
jno
scas
mov
xchg
lds
dec
inc
es
sbb
push
jno
push
lret
iret
out
xor
push
jno
mov
mov
dec
pushf
int
pop
push
inc
adc
jnp
ss
cmp
push
push
dec
mov
lock
aam
cmp
aad
mov
mov
jle
lock
xlat
mov
loope
pop
rorl
sbb
or
mov
xor
lahf
enter
jmp
data16
add
mov
add
jne
arpl
mov
scas
dec
adc
pushf
inc
mov
inc
enter
enter
jl
call
test
sahf
mov
pushf
bound
pop
push
push
mov
call
out
xchg
out
jle
mov
jno
cli
test
mov
push
dec
or
lods
adcl
packsswb
adcb
and
mov
in
imul
jmp
cs
pop
stos
movb
pop
push
mov
stos
add
sti
dec
cwtl
mov
mov
sti
push
xor
and
cmp
stc
pop
sub
ds
cwtl
pause
fwait
xchg
in
jl
cmpsb
push
push
in
sub
cld
jmp
mov
pop
enter
test
in
fsts
into
ss
mov
and
mov
pop
xchg
movsl
ficoml
push
push
cwtl
adc
testb
and
pop
out
pop
fldl
and
dec
xor
ret
loope
mov
pop
push
jbe
scas
ret
cmp
and
mov
loop
out
push
icebp
gs
idivb
adc
sub
in
mov
sti
mov
add
and
es
add
dec
ss
pop
out
mov
std
lock
mov
pop
dec
jp
test
xor
or
mov
and
xor
mov
xor
mov
je
mov
xlat
lcall
jg
inc
fwait
cld
sbb
dec
dec
jp
jg
jle
jl
pop
ljmp
pop
push
out
xchg
jnp
pop
and
imulb
push
sbb
pop
mov
leave
inc
js
pop
ljmp
pop
into
es
jno
addr16
push
push
mov
adc
enter
call
notb
pop
pop
sbb
pop
adc
lods
push
xchg
test
mov
sbb
push
pop
sbb
adc
aaa
repnz
mov
and
iret
out
decb
arpl
mov
lods
sub
sbb
push
rcl
mov
lret
xchg
cld
notl
out
xchg
pop
inc
aaa
das
testb
ficoms
rorl
fmuls
jns
rcl
and
push
popa
pop
mov
ljmp
out
push
cmp
jmp
mov
push
inc
fildl
mov
pop
loope
mov
out
push
clc
inc
sub
inc
xchg
jae
lret
cmp
or
jb
cmp
cmp
add
cmp
stos
lods
dec
xlat
pop
inc
jecxz
push
js
adc
loop
add
stc
push
mov
int
push
lock
push
mov
std
xorl
enter
push
adc
lods
pshufw
or
adc
push
out
jle
mov
jbe
mov
enter
and
loop
cmpsb
out
or
aaa
scas
incl
sub
sub
jmp
out
or
cmp
pop
jbe
je
jge
repz
mov
fwait
pop
mov
jbe
in
outsb
ret
bound
pushf
sbb
loop
and
fdivr
enter
bnd
mov
jle
data16
sbb
lea
movsb
jg
add
pop
rclb
inc
dec
or
pop
loopne
lcall
mov
cmp
xchg
lea
sub
fldenv
push
fdivp
xor
pop
or
xor
in
subb
jle
sub
hlt
ljmp
mov
inc
rcrb
movsb
cmc
test
in
fsubl
shl
lret
sbb
push
xor
xor
cli
pop
rep
pop
mov
xchg
pop
cs
mov
popa
mov
and
sub
ficoml
xchg
or
dec
xor
jge
and
mov
push
or
push
data16
pop
cmp
and
add
pop
sub
cwtl
gs
outsb
inc
jns
loopne
xor
jl
imul
outsl
pop
ljmp
pusha
mov
inc
leave
mov
popa
fwait
and
imul
add
das
sbb
and
in
xchg
stos
dec
pop
scas
jbe
sub
mov
cmc
das
in
mov
push
bound
mov
shl
mov
arpl
pushf
pop
test
pop
rolb
pslld
push
shr
repnz
sbb
bound
pop
loop
sub
data16
in
mov
loop
xor
sub
movsl
scas
pop
repz
js
loopne
xor
jns
or
loope
push
pop
aam
add
cmpsl
or
filds
mov
in
imulb
clc
dec
popa
xchg
add
leave
lahf
enter
xchg
ret
ret
inc
icebp
ss
aaa
roll
iret
js
ficomps
nop
frstor
cli
mov
xor
or
stos
mov
out
aaa
lahf
lea
ljmp
int
sbb
jp
popf
aam
xchg
bound
lcallw
xlat
mov
inc
pop
out
into
test
xchg
outsb
rcrw
push
bound
and
adc
pop
mov
push
pusha
mov
dec
nop
xchg
adc
jb
dec
call
xor
jmp
in
adc
xchg
xlat
and
daa
test
xchg
xchg
pop
pushf
inc
or
jo
ja
or
jns
test
adc
xchg
push
jle
dec
hlt
push
jno
mov
jl
sbb
fisubrl
xchg
xchg
push
lret
jmp
push
pop
push
xchg
mov
test
pop
sbb
push
pop
xlat
jo
movsb
pop
aaa
sub
inc
cmp
ja
push
mov
mov
cmpsw
fisttpll
and
mov
push
stos
cltd
outsl
or
test
scas
dec
add
dec
pushfw
icebp
test
daa
pop
sub
inc
out
jp
minps
popf
dec
mov
jns
push
jae
push
repz
test
xchg
or
sbbl
out
jg
lahf
mov
cmp
adc
cs
mov
adc
add
aaa
stos
outsb
and
add
ja
lahf
std
lea
lahf
mov
and
shlb
imul
lahf
mov
xchg
add
mov
or
pop
dec
mov
imul
bnd
fs
mov
jl
cli
inc
xor
mov
fisubrs
fsubrs
xchg
sub
rorl
lahf
fisubl
cmp
hlt
in
jno
cwtl
ja
mov
jle
or
dec
fmulp
loopw
mov
push
pushf
inc
aam
add
pop
xchg
xchg
dec
mov
pushf
xlat
or
mov
pushf
leave
fiaddl
mov
push
push
iret
or
mov
push
ja
inc
pushf
mov
cld
das
jge
outsl
pop
xchg
adc
dec
arpl
cld
adcl
test
fs
sti
cltd
sbb
cmpsb
cmp
aam
dec
repnz
cli
mov
scas
and
fcomps
add
sbb
jae
loop
cmc
push
lock
jne
and
mov
lea
adc
jne
mov
push
lea
mov
mov
stc
popa
mov
xchg
cmpsb
mov
into
lock
inc
push
mov
jae
push
xchg
fisttpll
shr
inc
test
fisubrs
xor
push
mov
xor
ror
xor
faddl
mov
loop
into
daa
or
cmp
push
pop
push
lock
inc
xor
hlt
dec
add
add
aas
out
jl
cmp
cltd
push
jne
sbb
loope
pop
xor
in
loopne
iret
out
or
mov
out
insl
fimuls
out
jmp
cwtl
jle
fiaddl
mov
xchg
push
xor
jle
scas
gs
divl
and
mov
or
loopne
or
mov
inc
or
push
push
mov
dec
ucomiss
jg
dec
adc
movsl
sbb
leave
push
adc
bound
cs
es
es
cld
hlt
fmull
shl
imul
or
dec
dec
lea
mov
add
int
cli
inc
das
gs
push
adc
repnz
cld
pop
or
cmp
popa
movsb
jp
call
and
aad
push
ret
jo
pop
repz
sbb
push
jl
xor
xlat
mov
mov
pop
mov
lahf
cmp
jle
mov
stos
call
aaa
mov
inc
daa
lcall
js
mov
aad
mov
mov
and
loop
pop
push
jb
inc
push
cmp
mov
jne
repz
mov
jl
mov
xchg
push
push
or
ret
rcl
in
out
bound
push
dec
aad
scas
xor
and
leave
push
add
sbb
cs
cmpsl
push
movsl
ja
jno
xchg
and
cmp
mov
repnz
daa
mov
pop
push
or
push
push
mov
xor
insb
jle
dec
mov
jp
cwtl
mov
push
jp
xchg
or
mov
jno
or
mov
xchg
mov
push
push
loope
jae
outsb
lahf
sub
pop
dec
outsl
outsb
inc
scas
push
mov
test
xchg
inc
pop
jae
push
in
pop
scas
inc
sbb
mulb
sbb
pushf
push
inc
negl
adc
jb
jle
add
inc
in
xchg
xorb
dec
ljmp
test
mov
mov
push
mov
jb
das
outsb
lret
bound
je
jl
hlt
xor
cmpsl
push
xchg
mov
mov
push
mov
push
mov
xchg
push
test
mov
jge
mov
negl
cmpsl
popf
xchg
mov
adc
fiadds
sub
jbe
loopne
mov
scas
addr16
scas
mov
aam
mov
iret
pop
mov
ljmp
mov
ljmp
xor
pop
pop
xchg
sbb
mov
call
inc
cmpsl
or
call
or
repz
in
cwtl
jns
fs
adc
pop
jb
jo
scas
adc
lock
or
push
push
in
mov
les
mov
push
lods
in
lods
mov
push
testl
frstor
mov
pusha
push
cmp
mov
popa
xchg
mov
push
int
sbb
fs
outsl
and
jge
push
jle
into
das
jl
xchg
pop
jle
adcb
adc
das
lret
hlt
cmp
test
leave
mov
or
es
jl
xchg
push
pop
cmc
push
jmp
xlat
mov
pop
push
test
outsb
sub
adc
lcall
mov
test
data16
and
iret
mov
into
aam
pop
je
jnp
inc
cli
xlat
sub
pop
mov
cmpsb
pop
clc
lock
out
xor
or
jo
dec
gs
jg
xchg
xor
bound
jge
xchg
push
sbb
push
mov
insl
push
adc
roll
ds
xor
test
mov
add
inc
push
xor
pop
xchg
push
aad
sub
cmp
fnsave
adc
mov
pushf
mov
popl
mov
popf
xchg
push
jle,pt
pop
nop
push
cmp
pop
cmpsb
jmp
mov
test
fnstsw
and
icebp
adc
ret
es
outsl
sub
cs
sub
out
data16
jl
sbb
dec
divl
pop
sahf
push
es
jmp
dec
lock
pop
inc
xchg
ds
lock
pop
xor
pop
inc
inc
jge
xchg
insb
dec
lcall
pop
mov
lds
popf
negb
pop
jmp
adc
std
inc
pop
dec
xchg
adc
lock
push
jnp
ss
std
xchg
push
leave
pop
add
jno
adc
addr16
out
insl
push
cmp
out
cmpsb
mov
jbe
jmp
dec
fiadds
ja
hlt
jmp
cs
bound
push
pusha
or
pop
pop
cli
mov
int3
xor
data16
outsb
popf
orb
sbb
scas
xor
pop
es
in
push
addr16
mov
lcall
xchg
aas
mov
jmp
vhsubps
iret
sar
and
enter
fstpl
out
popa
add
js
mov
js
sub
test
in
mov
sbb
push
lcall
pushf
mov
jle
inc
mov
cmp
mov
outsl
and
xchg
cli
leave
cwtl
pushf
xchg
jp
mov
cmp
pop
lods
jp
pop
cwtl
adc
pop
jbe
push
cmpsl
iret
cli
mov
xchg
push
sub
xchg
mov
ss
cli
add
cmpsb
jb
jle
pop
mov
outsb
in
gs
jbe
movd
xchg
xchg
jp
cli
sbb
data16
outsb
dec
or
pop
push
xchg
clc
data16
push
insb
mov
and
test
idivb
lcall
or
sbb
fs
pop
dec
push
inc
sbb
in
dec
or
adc
scas
adc
sbb
dec
mov
pop
dec
jbe
inc
popl
mov
ds
cmp
jle
pop
es
repnz
adc
shll
and
js
lock
jl
pop
mov
adc
outsb
and
add
sbb
pop
xor
fbld
inc
rcrl
xor
ss
stos
cmp
jge
sbb
fisttpll
mov
xor
fs
mov
pop
outsb
sti
mov
adc
and
and
inc
mov
addr16
popa
mov
mov
sbb
notl
or
lahf
invd
std
push
mov
pop
push
mov
push
push
inc
add
popl
std
push
mov
cmp
test
and
cld
pop
sub
cli
push
sub
movsb
jae
jne
cmpl
inc
iret
into
adc
dec
cs
jmp
outsb
in
les
es
fistpll
mov
and
addr16
popf
pop
push
pusha
mov
jle
xchg
dec
int3
roll
test
pcmpeqd
xlat
push
es
xchg
jne
xchg
setbe
xchg
mov
add
seto
cs
mull
mov
pushf
jl
or
ret
repnz
cmpb
xchg
iret
inc
pusha
dec
jl
sbb
xchg
push
sub
jp
data16
and
sub
push
jg
andps
sub
dec
push
or
xchg
pushf
pop
pop
insb
sbb
aaa
xchg
sub
ficomps
jmp
daa
sub
xchg
daa
dec
xchg
data16
enter
lahf
lcall
add
outsl
repnz
and
in
mov
iret
pushf
push
std
daa
outsl
pop
cmpsl
push
mov
cmp
fisubrl
movsl
aad
jl
in
jo
xchg
scas
roll
stos
cmp
lret
sahf
movsl
or
add
push
adc
mov
sbb
xor
fs
mov
fistps
or
mov
jp
mov
adc
sbb
push
daa
jp
repz
jno
sub
and
inc
push
leave
test
insl
or
inc
push
dec
add
cs
shl
add
jb
hlt
jge
sub
icebp
cmp
mov
xchg
xor
rcll
movsl
data16
pop
xchg
lods
hlt
pop
loop
pop
imul
pushf
sub
xchg
insl
mov
scas
std
mull
xor
gs
inc
rcrb
movsl
cmp
das
out
adcb
cld
mov
xchg
aad
cmpsl
repz
xchg
mov
jne
xlat
test
cmc
aad
inc
pop
in
mov
ret
mov
inc
mov
in
fstpt
mov
cmpsl
xor
xchg
pop
jb
scas
push
and
hlt
test
ja
dec
pop
xchg
xchg
or
fstp
icebp
push
jae
pop
test
pop
jb
inc
pop
mov
lods
mov
psrad
pop
incb
enter
mov
aam
add
lahf
mov
push
sbb
faddl
pop
fimull
xchg
cmp
pop
lret
fdivl
pushf
cli
js
lcall
insb
jle
imul
add
inc
cmp
fcmovu
add
mov
push
push
loop
add
ljmp
imul
or
dec
inc
ret
in
or
add
test
fsubrl
fwait
repnz
push
mov
aam
jmp
xchg
imul
cmp
dec
pop
addr16
testl
pusha
mov
in
mov
pop
aas
addb
mov
cmp
outsb
push
data16
mov
pusha
sub
dec
cmp
xlat
gs
jecxz
aad
jnp
movsl
lods
out
and
and
push
stos
adc
or
or
nop
imul
mov
aas
adc
data16
and
or
pop
inc
xchg
sbb
insb
sbb
js
scas
enterw
jge
push
mov
outsb
mov
push
pop
movsl
divb
or
push
es
push
addr16
mov
xlat
dec
jle
cmp
inc
push
loope
cmp
int
sub
testl
inc
jl
movsl
cltd
loop
pop
aam
push
fwait
pop
fst
mov
cmp
fucomp
jecxz
call
jne
lds
xchg
or
pop
dec
sub
xchg
sbb
popa
sbb
int3
dec
pusha
inc
cli
bound
test
mov
out
sbb
cmpsl
cld
movb
into
jmp
fistl
hlt
js
dec
and
push
in
push
mov
push
movsb
lret
adc
push
push
andb
mov
cmp
cwtl
jo
mov
push
push
xor
jl
jns
push
or
pop
adc
sti
es
push
stc
fwait
andl
pop
mov
movsb
sub
inc
sbb
in
dec
and
mov
mov
addr16
cmpsl
daa
mov
cmp
dec
xchg
aam
xchg
inc
test
loop
dec
fdivr
xor
or
inc
fsts
add
xlat
push
or
imul
cmp
push
add
mov
push
or
das
xchg
pop
mov
mov
dec
test
lcall
xchg
inc
or
and
inc
cmpsb
aaa
adc
bound
push
pop
jle
push
fnstenvs
mov
dec
andl
mov
mov
not
js
push
in
adc
sub
loopne
push
mov
inc
shlb
add
mov
ja
lcall
jnp
int3
decl
push
dec
gs
lahf
dec
pop
jle
mov
enter
stc
inc
xlat
mov
fstps
jo
cwtl
or
mov
dec
mov
insb
jg
popl
test
dec
adcb
mov
and
jl
push
jp
cmp
push
js
push
je
jbe
loopne
sbb
cld
jb
test
je
outsb
movaps
sbb
cld
inc
xchg
xchg
push
xor
cmpb
insb
jo
xor
inc
dec
pop
jg,pn
dec
sub
sbb
pop
adc
or
mov
add
pop
dec
add
insb
add
aaa
inc
mov
imul
mov
mov
mov
nop
popl
outsl
lcall
scas
loopne
and
mov
nop
push
stc
movsl
mov
lock
inc
leave
jp
mov
int
imul
mov
std
out
push
clc
test
push
iret
push
push
out
jne
pop
push
add
and
jb
xor
inc
jmp
adc
pop
xor
push
inc
and
mov
or
incb
xchg
jns
stos
pushf
add
xor
dec
pop
mov
test
and
lcall
in
or
dec
mov
dec
dec
mov
mov
mov
call
dec
ficoml
jle
test
add
test
dec
pop
cltd
enter
mov
or
int3
pextrw
mov
pshufw
inc
sbb
adc
fcomps
pop
pop
push
jg
lods
sbbl
dec
mov
mov
push
movb
pushf
dec
mov
pop
lds
int3
pop
mov
mov
rcll
mov
xchg
ret
xchg
cmc
es
jne
xchg
pop
dec
xor
or
mov
and
addl
cmp
sbb
jle
jp
lcall
loope
mov
sub
sbb
cmp
sub
leave
cwtl
ss
mov
in
mov
mov
cmp
lcall
cwtl
cmpb
pmulhuw
sub
mov
sub
inc
cmp
mov
outsb
mov
xchg
mov
jbe
sub
pop
xchg
jge
pop
lcall
sbb
dec
cwtl
loopne
xor
jl
pop
mov
mov
sub
sbb
inc
add
inc
pop
mov
pop
lcall
sbb
pop
cmp
insl
cmp
mov
xor
lcall
jecxz
jae
ror
adc
sub
mov
push
adc
cli
mov
enter
lods
decb
testb
mov
shrb
ret
dec
movsb
inc
pop
ret
jle
pop
negb
lea
push
es
jl
arpl
jg
test
sbb
mov
pop
push
iret
iret
pop
mov
push
daa
pop
data16
jle
push
xlat
dec
pop
pop
mov
mov
jbe
into
xchg
inc
pop
cmp
xor
pop
scas
lcall
xchg
lcall
ret
or
adcb
into
stos
ror
xor
add
adc
addb
stos
pop
jle
pop
push
lcall
int3
mov
add
jb
cwtl
stos
test
sub
pop
xchg
lret
cmpsb
mov
mov
dec
rclb
es
mov
cli
hlt
add
test
stos
push
fnstsw
icebp
faddl
dec
lods
aaa
push
push
test
incl
imul
push
add
push
xor
mov
xchg
test
inc
xchg
dec
lcall
pop
mov
xorl
jg
mov
scas
js
fxrstor
scas
mov
loop
adc
mov
test
cmp
sarb
push
sub
lods
aad
fcmovbe
inc
cmpsb
aad
mov
push
ret
push
bound
adc
pop
sub
jl
cmp
addb
mov
mov
fisubs
and
stc
push
pop
lret
mov
shrl
pop
or
lods
out
jns
addr16
loop
pop
mov
sub
std
push
push
mov
call
mov
div
mov
mov
push
out
xlat
xchg
mov
nop
add
or
shl
inc
js
jle
test
insb
movsb
int3
cs
mov
jl
ror
sub
data16
jp
shll
movsl
outsl
lea
mov
push
pop
dec
xchg
sbb
ds
scas
sub
add
insl
ret
out
xchg
test
addr16
mov
mov
subb
stos
mov
iret
adc
inc
push
xor
lds
add
scas
jns
pop
pop
xor
xchg
jmp
fidivrs
ss
leave
orb
divps
ja
lea
sub
outsb
movsl
subb
lcall
test
mov
jle
repnz
dec
pushf
shlb
jg
cli
mov
popf
inc
cwtl
mov
flds
mov
cmc
or
enter
ret
leave
out
data16
ret
out
jle
push
jb
sbb
sbb
cmpb
sbb
pop
jno
mov
inc
jl
mov
call
mov
subb
add
pop
stc
stc
dec
mov
sub
fcmovnu
test
movl
xchg
jmp
cmpsb
data16
and
mov
dec
push
insl
scas
mov
jp
push
dec
push
mov
xor
mov
xchg
sub
icebp
arpl
xchg
insb
jle
call
lcall
mov
mov
and
jo
lcall
pop
bnd
ds
shll
ret
repnz
scas
jo
inc
cmp
cmpsb
mov
xchg
test
xor
jbe
jg
bound
andb
pop
xchg
xor
lret
or
lret
repnz
inc
insl
cli
sbb
clc
mov
mov
pop
jbe
shlb
outsb
push
popa
std
imul
add
shrb
aas
jae
inc
xchg
bound
shlb
jle
cmpl
push
push
mov
and
insb
xlat
scas
fisubs
popa
out
out
xchg
or
enter
mov
inc
notl
sarl
jl
rcrl
push
shr
imul
mov
cmp
push
xor
adc
xchg
cmpsb
adc
loop
sub
outsb
sub
fidivs
jp
loop
inc
stc
push
dec
test
scas
jae
mov
aad
mov
xchg
mov
xchg
cmp
rcrl
loop
outsb
lock
xchg
push
enter
out
xor
ds
dec
loopne
push
xlat
push
test
mov
xchg
jge
jno
xchg
adc
dec
fistl
and
sbb
aam
adcb
mov
mov
insb
push
push
ja
in
adc
mov
mov
fdivp
xor
and
sti
aam
adc
xchg
and
loop
sbb
lahf
xor
das
mov
adc
lcall
scas
sub
addr16
mov
inc
jnp
mov
xlat
lret
jno
invd
vxorps
ljmp
xlat
pop
mov
push
push
jnp
and
out
pop
out
jo
ret
lods
ss
sti
dec
pop
ss
sahf
ja
mov
std
cld
into
bound
repnz
daa
cli
cmp
rep
ss
mov
pop
inc
dec
cmp
mov
push
negl
cli
cld
stc
sti
xor
push
fs
pop
inc
cli
cld
std
stc
adc
inc
sbb
jg
cmpsl
test
cmpsb
ss
cli
mov
mov
jl
add
xor
sti
les
pop
xchg
lds
inc
lds
push
fiaddl
pop
jle
push
stc
xchg
aam
add
mov
cmp
roll
cmpb
xor
cmp
jmp
mov
cs
testl
lods
not
pushf
pusha
fistpl
incb
insb
lret
dec
mov
lds
ret
mov
jg
in
jp
mov
mov
out
sbb
lret
test
or
dec
jle
icebp
scas
data16
inc
notl
jle
popf
fisubrs
xchg
jl
sub
cs
add
xchg
aad
testb
int
arpl
outsb
sub
pop
enter
inc
push
cli
hlt
dec
add
xchg
in
mov
push
mov
shr
push
sbb
sub
push
push
in
js
inc
jbe
arpl
pcmpeqd
xchg
enter
bound
lea
xchg
lods
sti
xchg
lret
lea
inc
cmc
js
add
add
data16
inc
mov
cltd
aaa
dec
or
lea
mov
cwtl
pop
into
sub
adc
inc
sarb
sub
dec
adc
fstps
jp
lcall
scas
ja
sbb
fisttpl
jl
and
int
sbb
inc
pop
sub
nop
leave
aad
sbb
xlat
sub
cmovs
add
cmp
xlat
mov
jl
xchg
xchg
out
mov
mov
cmpb
sbb
mov
sub
mov
out
mov
enter
data16
arpl
pushl
das
loope
sbb
pop
pop
jecxz
addr16
inc
adc
jle
push
or
adc
mov
lds
xor
lds
jp
xlat
pop
xlat
stos
mov
dec
jp
and
pop
out
mov
cmpsw
add
mov
push
mov
das
xchg
cmc
outsb
sbb
mov
lods
jle
out
mov
scas
sub
sub
pop
xchg
push
inc
mov
movb
jle
adc
mov
pop
adc
jle
mov
out
shlb
stos
icebp
pop
mov
push
adc
outsb
aas
dec
bound
pop
and
ljmp
xchg
mov
test
push
call
push
dec
out
sbb
outsb
add
mov
xchg
fcmovb
fimuls
daa
call
adc
cmp
dec
lock
push
fdivrs
jmp
push
cld
in
icebp
mov
mov
in
enter
insl
mov
divb
rcrb
clc
jne
xor
popf
rolb
leave
cld
and
ja
inc
pop
ret
pop
rcrb
inc
insl
insb
jbe
gs
cli
jns
xadd
mov
into
into
pop
ja
inc
jg
or
push
stos
push
jp
outsl
cs
inc
aaa
jle
pop
cld
ljmp
or
pop
orl
pop
loop
mov
dec
pop
jno
push
fnstenv
rclb
nop
out
lret
or
xchg
cmp
call
xchg
idivl
inc
pop
sub
sbbb
push
loop
sub
movsb
mov
push
xchg
push
push
dec
jne
inc
lods
adc
es
cwtl
inc
add
pop
jl
repnz
es
xchg
loope
and
adc
xchg
je
inc
pop
xorb
pop
cltd
jno
inc
js
aas
data16
movsb
lret
setne
xchg
inc
xchg
adc
sbb
fs
call
push
adc
adc
dec
repnz
loopne
int
push
test
fcoms
divl
call
push
dec
cmpsb
cmpsl
std
push
stos
inc
lret
jo
pop
sbb
mov
test
xor
roll
jmp
hlt
pop
sbb
negl
dec
pop
jbe
testb
lcall
cmp
test
push
cmpb
stos
pop
in
lret
dec
xchg
sub
les
mov
movsb
cmp
jp
push
lods
or
cmp
add
lahf
ret
scas
sub
jmp
ret
pop
ret
adc
sbb
movsb
pop
loopne
push
arpl
dec
sub
and
sbb
inc
cwtl
jge
inc
lods
sbb
xchg
dec
jl
adc
fwait
es
or
sbb
data16
cld
test
addb
cmpsb
notb
ficomps
mov
cld
mov
out
lds
aaa
lret
xor
or
into
pop
insb
cwtl
lret
push
lods
xchg
jno
push
jno
jp
mov
pop
dec
ret
frstpm(287
mov
out
jle
xchg
aaa
mov
push
mov
add
jbe
push
std
outsl
fucomp
pop
push
or
shl
sub
xchg
adc
and
pusha
lahf
push
loop
subl
cmpsb
xchg
mov
inc
pop
jnp
test
pop
and
push
dec
jo
mov
xlat
daa
xchg
inc
mov
ja
mov
stc
jnp
lods
jg
jle
pop
cwtl
xor
shl
pop
inc
mov
ja
mov
xchg
xchg
dec
daa
in
setb
jb
cwtl
mov
push
pop
jb
push
fbld
insl
stos
data16
jne
call
cmpsb
mov
xor
daa
lds
pusha
sub
out
xchg
add
inc
lods
call
mov
cli
outsb
dec
pop
xchg
divb
dec
push
xchg
adc
mov
push
xchg
add
sbb
mov
sti
or
mov
pop
jl
mov
lcall
mov
xor
out
mov
testl
or
ljmp
sub
dec
xor
mov
enter
xor
or
inc
stos
pusha
in
arpl
js
arpl
xchg
mov
jp
xor
xchg
test
jl
xor
ret
adc
pop
xchg
pop
push
lcall
and
mov
xchg
adc
xorb
cmp
xchg
mov
call
jbe
repnz
into
insb
in
push
gs
jno
lret
test
jmp
loope
push
lock
mov
lea
jp
push
inc
adc
mov
jle
lock
mov
mov
stos
ljmp
fucom
adc
pop
ret
or
inc
jo
xchg
stos
mov
leave
jle
sti
lret
pop
into
cs
imul
mov
ret
mov
pop
dec
or
jae
push
mov
xchg
test
cld
pop
xchg
bound
pushf
cmp
jo
inc
sub
movsb
fisttpll
push
add
mov
push
mov
shl
mov
loope
mov
cmc
loope
dec
ficoml
jns
jo
xchg
out
and
sahf
xor
mov
mov
push
jo
mov
call
js
sbb
js
pop
mov
pop
pop
mov
mov
in
or
push
cwtl
xchg
out
pop
cwtl
xchg
outsb
inc
cmp
mov
sub
pop
push
ret
push
xlat
and
push
mov
mov
and
addr16
push
ret
fnstcw
out
sbb
es
cwtl
in
xchg
mov
cld
dec
movsl
mov
and
add
or
int
imul
jns
ds
jecxz
xor
es
insb
mov
mov
xor
enter
xor
and
stos
pop
ss
shl
add
or
mov
jle
jg
jmp
mov
out
loop
movl
pop
stc
jle
dec
mov
fsts
pushf
dec
mov
mov
sbb
mov
pushf
sub
lcall
idivl
adc
adcb
push
xchg
jne
and
mov
lods
mov
out
xchg
bound
ret
cmp
shrl
adc
in
mov
mov
sub
xor
sub
lods
dec
mov
and
push
out
sti
aad
and
push
push
inc
test
int3
lods
jmp
je
ffree
sarb
cwtl
loope
ds
xchg
inc
cmp
icebp
shll
addr16
jle
mov
leave
sbb
icebp
imul
add
arpl
sbb
cmpsb
movsb
ljmp
cli
loopne
popf
addr16
repz
jecxz
fidivl
es
mov
xchg
adc
gs
shl
ss
mov
idiv
xchg
dec
pop
idivb
repnz
mov
xchg
push
sub
mov
aaa
sbb
nop
insb
dec
xchg
xchg
cli
insb
xor
mov
push
sbb
pop
test
mov
outsb
jl
cli
pop
into
inc
clc
push
dec
lods
inc
ds
adc
jge
repz
dec
lods
xorb
push
fwait
and
ret
pop
js
cmp
out
adc
shll
cmp
adc
jp
roll
cmp
xchg
jg
lea
lds
add
adc
scas
inc
cli
and
inc
jle
inc
adc
xor
xor
sbb
aad
in
cmp
mov
loop
sub
out
repz
inc
mov
and
std
or
mov
xchg
fdivp
test
push
out
ljmp
cld
sub
and
nop
loope
mov
dec
shrl
bound
roll
sbb
lcall
test
mov
sub
pop
xor
mov
lcall
mov
xchg
pushw
xchg
ret
adcb
cld
test
pop
je
mov
add
sbb
mov
cwtl
ret
insl
jnp
mov
jmp
push
jbe
push
jp
ds
std
push
lea
jle
aas
lcall
mov
filds
pop
pop
into
hlt
out
ljmp
mov
out
cs
fidivrl
xchg
jle
pop
jo
jb
mov
xchg
xchg
xchg
lahf
mov
cwtl
mov
aaa
inc
pop
lcall
lods
jne
aaa
push
movsb
scas
sbb
in
inc
adc
or
mov
ja
daa
ljmp
in
push
mov
mul
dec
mov
push
xor
lds
or
ss
scas
int3
pop
push
popa
mov
mov
int3
loop
leave
mov
cmp
lretw
pop
sbb
mov
jp
or
jp
rorb
bound
adc
jno
mov
sub
test
das
test
sub
mov
jno
push
sub
and
jb
sbb
insl
push
lret
outsb
fistps
mov
sub
xor
mov
mov
xchg
lcall
jp
fdivr
imul
and
xchg
mov
aas
xlat
jle
and
lds
call
packuswb
aas
addr16
jl
daa
mov
outsl
test
dec
das
ja
push
mov
lock
inc
xchg
repnz
pop
mov
or
testl
divb
pushf
or
in
inc
pop
and
push
jns
push
mov
or
and
incb
xchg
mov
pop
je
ljmp
popf
pushf
cmc
ficompl
fists
dec
in
aam
in
cld
add
das
push
enter
es
cmpsb
sub
stos
inc
mov
scas
jo
push
aam
jmp
inc
jp
aam
lock
and
lea
mov
inc
cs
mov
cwtl
jp
fimuls
fs
pushf
mov
pop
adc
mov
arpl
jmp
mov
pop
hlt
psubw
lds
jg
dec
lea
in
hlt
jae
add
xchg
pop
dec
test
stc
pop
fiaddl
pushf
sub
push
or
lahf
int
sbb
mov
adc
adc
mov
idiv
dec
and
dec
and
mov
cmp
jg
scas
insl
xor
pop
cmp
pop
dec
mov
out
mov
test
popa
push
aaa
push
scas
and
dec
outsl
xchg
sbb
ja
adc
mov
addr16
mov
div
and
mov
cmc
mov
sbb
cmc
jge
out
pop
cwtl
jno
jmp
adc
loopne
aas
fcmovnbe
in
fmulp
movsb
adc
outsl
push
mov
out
cmpsb
lcall
sbb
fdivrs
push
dec
jmp
nop
inc
loopne
sub
pushf
xchg
pop
jnp
adc
xchg
dec
sub
mov
pop
dec
inc
sub
pop
outsl
mov
cmp
xchg
std
stos
or
rorl
out
jns
gs
rorl
sub
ja
aam
sbb
inc
sbb
loop
jo
or
in
xchg
xor
stos
cmp
lret
lret
loopne
fiadds
xchg
in
mov
cld
mov
jnp
cmp
gs
enter
xor
and
pop
sub
jmp
sub
ret
call
out
cmp
mov
sbb
or
push
sub
movsl
cmp
jo
rorl
push
pop
ss
int
xor
in
push
xlat
gs
mov
push
sbb
movsb
lods
sbb
sbb
dec
mov
sub
inc
jne
mov
jg
mov
add
inc
pop
testb
push
xor
and
add
jle
push
jo
mov
loope
ss
mov
popa
adc
ret
bound
in
pop
mov
pusha
cmp
sub
pop
mov
xor
into
cmpsb
dec
cmpsb
sbb
jnp
mov
xlat
stos
inc
mov
movsb
sbb
mov
test
out
jp
xchg
daa
and
xor
dec
stc
xor
data16
pop
or
pusha
out
mov
bound
cmpsl
sbb
sub
cmpsb
fdivrs
xchg
into
sub
fidivrl
pushf
popa
nop
mov
push
jns
cmp
mov
dec
adc
outsl
mov
and
lret
fwait
je
push
push
mov
add
sub
lret
dec
push
loopne
push
in
jmp
ficoml
xchg
mov
jbe
add
adc
fidivrl
cwtl
icebp
ror
jg
mov
out
mov
ss
xor
inc
mov
mov
mov
shll
mov
loop
push
scas
cmpsl
mov
or
adc
xor
ds
loope
dec
enter
insb
pop
idivb
or
cli
jnp
add
cmpsl
pop
adc
dec
jno
out
loopne
pop
popa
pop
mov
pop
push
cmp
xor
pop
cs
sub
mov
jbe
cli
lahf
je
add
inc
in
ret
dec
add
divl
imul
and
test
xor
mov
mov
test
mov
inc
add
iret
lcall
ss
dec
jge
push
mov
test
test
pop
push
daa
push
or
popf
push
mov
lea
lcall
dec
add
popa
popf
dec
cmp
fwait
dec
mov
popf
cmp
push
cmp
add
jb
jmp
ja
jg
stos
in
mov
xchg
cmpsb
loopne
push
or
pop
shr
fimull
xchg
xchg
test
xchg
and
or
push
dec
inc
outsl
mov
outsl
adc
ss
loopne
mov
xlat
xchg
cwtl
imul
push
jle
sub
xchg
cmpb
inc
sbb
incl
mov
ds
loop
lods
push
push
ficoms
imul
pop
ds
xchg
jle
or
xor
testl
pop
inc
push
dec
push
lea
pop
loopne
lahf
xchg
fs
fs
hlt
lods
mov
orb
lret
shll
test
dec
dec
sbb
inc
in
mov
mov
mov
insb
mov
fdivrl
adc
stos
mov
mov
out
jg
mulb
cmpsb
mov
out
push
mov
inc
xlat
lods
gs
imul
sub
mov
scas
push
xorl
pop
jb
pop
fwait
data16
mov
mov
jmp
mul
int3
lock
aaa
loop
cli
jno
psrlw
adc
mov
das
loopne
and
addl
adc
inc
push
jg
inc
xor
lcall
push
dec
out
dec
mov
inc
adc
mov
inc
adc
xchg
jl
mov
xchg
jmp
xor
push
inc
sbb
add
fs
push
xchg
dec
push
and
mov
mov
jae
in
xchg
cld
insb
aas
enter
sub
aas
fidivrl
loop
lret
sbb
inc
mov
stos
das
add
pop
sbb
pshufw
mov
fidivl
cwtl
adc
cs
push
cli
dec
xchg
mov
sub
mov
pop
test
mov
add
leave
ss
jg
aas
mov
inc
push
and
jne
ja
pop
fnsetpm(287
add
fisttpll
in
dec
jb
sti
ret
cs
add
int
or
idivb
popf
jmp
lods
lock
and
into
xchg
xchg
mov
push
add
loope
xacquire
jbe
ja
sbb
movb
sub
xchg
mov
inc
jle
push
fnstenvs
pop
jmp
movsl
out
aad
xor
mov
mov
sbb
xchg
mov
lods
bound
mov
lahf
movsb
adc
cmpsl
loop
inc
cmp
cmpsb
add
and
xchg
sti
and
icebp
or
rorl
mov
lcall
adc
or
addr16
cmpsl
push
cmpb
push
mov
dec
lcall
mov
cmc
mov
pusha
jns
mov
or
adc
pop
mov
lahf
xchg
dec
jle
and
dec
dec
add
rorb
sbb
push
push
dec
xlat
into
je
movsl
int3
sub
and
jmp
mov
push
xor
sub
mov
xchg
fdivs
cli
mov
stos
mov
mov
sub
cmpl
cmp
out
xchg
stc
push
popa
mov
mov
mov
loopne
daa
or
push
rolb
push
in
outsl
aaa
mov
xchg
movsb
das
add
xor
adc
xchg
fs
mov
out
stc
loop
ret
mov
jnp
fidivl
or
push
xchg
mov
pop
add
lds
adc
test
in
stc
out
xchg
xchg
mov
dec
push
sbb
cmpsb
mov
pop
sub
lea
cwtl
or
and
fnstsw
lcall
mov
push
nop
nop
dec
pushf
stos
popa
add
lahf
push
imul
add
dec
lods
mov
popa
idivb
jle
es
fs
sbb
rorb
xlat
mov
mov
and
mov
and
out
adc
pop
mov
mov
cmp
mov
rcrb
pop
mov
sahf
push
clc
xchg
lcall
jg
xor
cmpsl
lods
mov
addr16
and
loop
or
mov
iret
sbb
cmp
test
es
movups
ja
pop
mov
scas
mov
pop
xchg
mov
inc
inc
cmp
pusha
frstor
sbb
jp
mov
mov
pushf
xor
cs
sbb
ljmp
jl
cmpsl
sbb
add
mov
lods
jg
jle
push
push
dec
mov
cmp
data16
and
mov
xchg
out
inc
mov
mov
mov
mov
stc
xchg
sbb
insl
loopne
lods
fs
sub
mov
subb
or
mov
notb
call
sbb
insb
imul
lods
and
push
dec
push
add
xchg
aaa
ret
and
jnp
notl
inc
outsl
outsb
and
inc
adc
data16
addl
aam
lock
fisubl
mov
cmpsb
sbb
mov
add
enter
pop
jge
mov
inc
mov
fisubrs
outsb
nop
sti
inc
fsubrp
ret
add
repz
add
sbb
mov
inc
hlt
int
mov
dec
dec
in
gs
mov
sbb
daa
ds
jns
dec
dec
ja
push
mov
dec
jl
test
outsl
cmp
pop
rcrl
mov
mov
rclb
bound
cwtl
xchg
xlat
insb
sub
jae
cs
insb
cmpb
daa
mov
sub
pop
mov
scas
mov
scas
jge
out
cmovg
xchg
icebp
cmp
mov
daa
mov
es
scas
popa
mov
stos
in
xlat
inc
jecxz
int
push
imul
mov
sbb
pop
std
inc
push
or
testl
sbb
jg
lock
cmc
cmp
pop
pushf
xchg
lds
fnstsw
pop
bound
adc
outsl
insb
and
test
outsb
ljmp
fwait
and
pop
in
adcl
shlb
mov
rclb
xor
inc
push
add
popf
sbb
idivb
testb
daa
inc
cs
pop
testb
mov
les
enter
mov
mov
jne
aas
push
cltd
fisubl
cmp
push
mov
cmp
push
enter
das
outsl
std
data16
push
aam
push
push
aas
outsb
push
loop
pop
stc
arpl
inc
cwtl
pop
mov
mov
xchg
repnz
mov
ficomps
add
fildl
and
sti
cli
mov
xor
pop
and
inc
fistps
dec
mov
push
fmull
testl
mov
push
jno
xor
push
js
out
sbb
in
cld
and
in
js
imul
mov
loop
mov
mul
mov
aas
enter
or
fldcw
jns
andb
and
rcrl
lock
pop
jbe
mov
mov
mov
sbb
mov
sahf
sub
aam
stos
loopne
push
jg
mov
cmp
jne
imul
jb
imul
ds
iret
and
mov
imul
sti
dec
pop
jo
push
cmp
pushf
dec
dec
jle
pop
inc
rcrl
loop
les
xor
jmp
out
sub
fiaddl
xchg
add
inc
inc
sub
xchg
mov
push
shrl
xor
data16
orb
mov
xlat
or
clc
and
imul
add
mov
push
dec
pop
push
cmp
and
push
pop
xchg
pop
mov
hlt
push
xor
scas
fldl
repnz
es
repz
xchg
loop
jle
outsb
lcall
cwtl
es
gs
pop
dec
xchg
xchg
xchg
mov
xor
mov
or
aaa
divl
in
push
out
sbb
push
add
aaa
fucomp
push
cs
mov
add
jno
into
stc
and
mov
jbe
ror
mov
in
dec
jb
and
pop
aam
xchg
xchg
mov
dec
mov
push
add
call
cmc
sub
xorw
mov
jbe
mov
push
ds
ljmp
jle
xor
inc
repz
cwtl
test
fstl
cmp
dec
stc
pop
cmc
mov
shl
inc
jle
push
pop
pop
bound
or
bswap
int3
push
mov
mov
int3
adc
cld
outsl
popf
repz
push
cld
mulb
in
cmpsl
and
jne
aaa
pop
push
lret
pop
cmpsb
out
into
pop
ds
scas
inc
loopne
xchg
stos
jle
into
ficoml
push
cmp
inc
mov
orl
fwait
bound
xchg
xchg
in
pop
sbb
test
sbb
mov
mov
mov
inc
in
out
inc
xchg
xchg
jmp
inc
in
mov
jge
cmp
jl
pop
mov
adcl
pavgb
mov
nop
xlat
push
ficoms
mov
adc
fcoml
adc
pminub
pushf
mov
adcl
psubusb
ret
xlat
or
xchg
push
xchg
aam
dec
mov
push
jb
rclb
rorl
add
lcall
push
int3
pop
pop
xchg
sbb
lret
sbb
nop
std
enter
sbb
adc
pop
jle
pop
pop
stc
cli
std
les
bound
xchg
push
ret
xchg
or
rcrb
or
jae
ds
mov
or
stos
jmp
mov
pop
jl
clc
pop
mov
incl
adc
es
pop
jp
mov
outsl
jl
or
in
mov
mov
es
aad
jae
xchg
push
dec
testl
fildl
sbb
dec
cmp
lods
pop
lcall
jg
pop
jl
in
test
mov
stc
or
push
xchg
enter
movsb
fs
jle
inc
pop
jp
xchg
insl
adc
xlat
and
cmc
cmp
jle
xchg
or
or
lret
cld
shlb
lods
dec
dec
adc
aaa
xchg
test
pop
push
js
sub
or
out
sub
int
sub
out
call
inc
and
into
int
jl
pushf
mov
das
adc
movsw
mov
aaa
std
push
stc
loop
ret
lcall
jle
aas
jg
mov
test
ljmp
add
xor
dec
jecxz
repz
lcall
fs
pop
lods
xchg
cmpb
je
xchg
sub
lcall
lods
nop
mov
inc
pop
inc
sbb
or
jmp
out
aam
add
jae
lods
inc
lea
es
or
push
jle
pop
arpl
movsl
cmp
and
cmp
and
push
pop
data16
adc
or
in
lcall
inc
add
popa
push
lea
xor
divl
lock
leave
pop
in
push
xlat
cwtl
dec
or
xor
dec
das
data16
push
test
mov
dec
ljmp
push
insl
and
pop
inc
pop
mov
sets
aad
bound
mov
pop
inc
push
jle
or
xchg
in
xchg
ret
mov
mov
stos
cmp
pushf
dec
scas
cmpsb
adc
out
jp
pop
sbb
inc
xchg
scas
pop
bound
fcompl
push
arpl
punpckhdq
movsb
int3
jle
repz
fisttps
jl
jnp
xor
mov
decb
sbb
icebp
dec
lret
ja
ss
ljmp
testl
inc
xchg
adc
and
mov
jbe
mov
mov
pop
dec
add
ret
mov
jl
popa
lahf
int3
pop
outsb
cmp
mull
mov
push
test
stos
jnp
es
mov
dec
xor
xchg
push
push
add
pop
push
movb
adc
clc
into
or
pop
and
and
sti
cmpl
test
add
xchg
lret
mov
pop
out
mov
pushf
xchg
jmp
loop
les
insb
cmpsb
js
jae
call
pop
xor
addr16
outsb
enter
push
sbb
loop
repz
inc
mov
movsb
mov
cmpsl
inc
mov
mov
cmpb
dec
or
mov
test
xchg
sbb
lcall
loop
lods
mov
mov
popa
fistpl
pushl
or
xchg
xchg
push
out
pop
pusha
jo
xchg
pop
bound
mov
aas
cmp
cmp
loope
and
adc
pop
xlat
in
and
es
movsbl
dec
fdivp
cld
jnp
movlhps
lods
les
sub
push
bound
scas
decl
es
jecxz
pop
push
into
sbb
add
in
mov
mov
mov
xchg
jae
pop
enter
sbb
sub
xor
lods
and
scas
andb
js
bnd
pop
and
lock
das
jle
jnp
loop
mov
add
popf
or
or
pop
push
nop
pop
ljmp
xchg
push
sub
fs
pushf
jl
nop
sub
push
jb
mov
cmpb
or
mulb
addr16
sbb
pop
push
sbb
fcoml
sub
add
jle
pop
pop
ret
mov
sbb
dec
dec
mov
loope
xor
negl
imul
or
ja
leave
xchg
lcall
stc
sub
sbb
adc
sbbb
pop
sbb
lret
in
mov
sbbb
dec
push
mov
out
data16
dec
mov
mov
ss
outsl
pop
in
cmovle
ret
popf
insl
sbbb
pop
imul
imul
bound
test
xchg
jle
cwtl
xor
jne
fwait
push
pop
xchg
push
xchg
cmp
imulb
mov
push
adc
mov
or
nop
xchg
sbb
add
xchg
adc
xchg
es
js
sbb
mov
data16
push
fldt
xchg
push
int3
push
xchg
sbb
test
xchg
push
pop
push
gs
add
pop
mov
mov
xchg
dec
sbb
setg
mov
mov
or
mov
jle,pn
xchg
xchg
cmp
sbb
cmp
xchg
pop
hlt
sbb
setne
mov
and
into
xchg
inc
pop
das
push
dec
gs
sub
and
loop
sub
test
inc
jno
or
xchg
mov
adc
mov
aam
push
mov
pop
or
out
jnp
and
bound
mov
mov
mov
ret
lret
jo
mov
sti
and
decl
push
xchg
testb
xchg
shll
jl
ficompl
out
std
dec
xor
fnsaves
mov
jl
fstpt
inc
push
loop
into
xlat
out
pushf
lea
cmp
xorb
nop
lcall
les
pop
add
push
sub
push
lcall
jp
xlat
dec
fnclex
je
inc
add
push
mov
jb
jb
jo
push
outsb
xchg
rclb
dec
insb
mov
or
mov
mov
mov
mov
lock
xchg
sub
dec
push
in
mov
push
es
mov
mov
data16
movswl
cmp
xchg
xor
out
out
push
data16
in
dec
test
loop
bound
dec
call
push
mov
mov
pop
leave
push
fmul
pop
pop
xchg
push
aad
and
lret
hlt
sbb
test
pop
xor
or
ljmp
sbb
out
pop
xchg
push
nop
dec
pop
jle
mov
sbb
pop
call
popw
xchg
lds
add
dec
jle
and
mov
lret
push
inc
call
push
inc
jecxz
push
cmp
cmp
cmp
sub
jg
std
xchg
stos
push
into
xor
lret
or
mov
dec
fnstsw
dec
jnp
dec
rcl
dec
mov
pop
lods
fcomps
push
sub
jno
add
dec
fdiv
sbb
aaa
das
aas
fbstp
leave
push
pop
mov
outsl
cmpsb
mov
scas
movsb
jae
push
ja
mov
out
call
or
sbb
push
inc
roll
test
jp
data16
fsts
arpl
ss
ja
dec
inc
lcall
mov
push
cli
insb
mov
inc
lcall
pop
shll
push
leave
cld
je
aam
xor
out
mov
mov
dec
push
jns
arpl
cwtl
or
pushf
loop
pop
jb
ljmp
sbb
lods
adc
loopne
arpl
mov
pop
scas
sbb
nop
sbb
cwtl
xchg
xchg
pop
faddl
subl
in
out
cmc
leave
in
adc
xchg
sbb
sbb
mov
decb
into
stos
aad
jns
fldl
mov
xchg
mov
aas
rorb
xchg
xlat
push
lret
mov
push
jno
push
inc
in
test
lret
std
ret
stos
sbb
mov
mov
dec
dec
les
ja
lretw
mov
mov
push
lcall
push
adc
and
cmp
xor
lret
test
dec
dec
pop
push
mov
jp
push
nop
mov
push
mov
jo
adc
mov
dec
sti
dec
or
das
dec
jl
cwtl
rorl
int
mov
dec
pop
out
jl
lcall
mov
int3
in
and
pop
iret
out
push
cs
paddw
ss
scas
pop
mov
mov
sub
addr16
jae
fwait
mov
mov
add
test
popf
inc
dec
push
scas
xchg
hlt
xchg
inc
sub
jp
test
cmp
mov
xchg
test
jno
mov
xchg
cmp
jp
cmp
sbb
jl
cmp
inc
les
adc
dec
cli
lahf
imul
in
incb
cmp
jbe
pop
subb
clc
adc
xchg
xchg
pop
push
or
jecxz
loopne
xchg
mov
mov
data16
pushf
pop
fisttpll
in
mov
nop
outsl
jle
jne
inc
movsb
push
pushw
jnp
inc
inc
push
cmp
jle
sub
loopne
in
mov
ds
inc
mov
fbld
adc
adc
ss
data16
mov
iret
ret
dec
outsl
lods
push
mov
jo
fcoml
jb
mov
inc
ss
mov
pop
mov
in
cmc
or
mov
cmp
push
ds
leave
in
imul
fnstenv
cmpsb
push
leave
mov
mov
cld
test
xchg
inc
push
mov
call
xorb
sbb
adc
adcb
sarl
outsb
and
pop
xchg
jp
subb
jbe
mov
add
cmp
and
add
push
push
adc
testl
ret
movsl
insb
adc
jb
aaa
xchg
add
and
fcmovb
fisubs
in
repz
mov
xchg
cmc
rol
add
pop
jnp
arpl
xlat
add
js
lcall
pop
push
xchg
dec
hlt
pop
and
dec
shl
fstps
gs
pop
jle
mov
xchg
inc
int
mov
jbe
test
dec
inc
shlb
mov
cmp
lret
xlat
push
ficoms
popf
adc
je
or
movq
je
push
shrb
push
xchg
jb
imul
scas
fwait
or
add
add
push
popl
xorl
jg
push
xlat
sub
mov
fistpl
sbbw
sti
je
lret
addl
andl
add
dec
xor
sbb
orb
lock
mov
nopl
adc
dec
jo
pop
cmp
into
lds
out
mov
test
adc
xchg
dec
subl
and
scas
mov
int
imulb
and
inc
loop
outsl
pop
pop
and
or
jae
adc
sub
cmp
mov
adc
or
cmpsl
sbb
aam
faddl
test
gs
xchg
dec
cmpsb
subb
sarl
cli
lods
pop
popa
pop
jg
inc
pushf
adc
outsb
jbe
pop
xchg
jbe
inc
push
push
mov
mov
inc
xchg
push
fldl
xor
cmpsl
scas
inc
cld
test
mov
xor
xchg
decb
mov
test
shll
test
sarb
push
fbld
jbe
lcall
lods
cmp
adc
lret
shll
jae
sbbb
sbb
pop
inc
jmp
aas
daa
shlb
idiv
adc
add
or
xor
jnp
sub
fwait
mov
test
scas
enter
repnz
inc
std
ret
adc
into
push
clc
into
inc
rcrl
pop
call
mov
inc
mov
mov
jae
mov
add
insb
sarb
add
xchg
repz
mov
push
xor
xchg
bound
lcall
mov
pop
and
pop
cvtdq2ps
test
xlat
call
sub
ss
in
jecxz
and
rclb
ja
pop
pop
mov
inc
cmpsl
push
lcall
sbb
and
cli
xor
pushf
jne
lds
jmp
jle
negl
sub
pop
test
sub
insb
add
push
rcr
cmp
mov
loope
ja
pop
cmpsb
jp
mov
es
dec
stos
push
lcall
stos
jmp
fiadds
mov
push
cmp
inc
stos
push
mov
inc
ss
jbe
push
push
call
pushf
inc
xchg
fidivs
adc
jae
xchg
rorl
popa
cmp
xchg
mov
lea
xchg
xlat
push
and
out
mov
push
inc
and
out
fisttps
fnstcw
pop
mov
xchg
out
sub
mov
in
pop
jno
dec
mov
dec
out
inc
cmp
cs
lret
outsl
and
in
pop
push
in
sub
aaa
repnz
adc
std
mov
bound
outsl
das
xchg
push
dec
mov
adc
insl
push
fistl
jle
jle
mov
popl
pop
sarb
clc
aaa
dec
pop
push
daa
adc
push
arpl
push
sub
pop
aam
data16
sbb
jle
or
mov
jp
xor
push
inc
cs
xor
push
sarb
xchg
shlb
xor
insb
inc
jle
add
mov
push
imul
push
enter
test
push
mov
pop
sarb
dec
inc
andb
and
test
push
pop
shrb
lock
dec
dec
popf
je
rol
jp
mov
cwtl
cmpsl
push
lahf
test
cmp
inc
mov
repz
int3
insb
pop
js,pt
jo
sub
imul
jmp
repz
pop
gs
daa
inc
adc
test
push
mov
mov
dec
add
mov
fwait
push
mov
mov
data16
xchg
mov
je
icebp
xchg
xchg
stos
in
xor
inc
in
jnp
mov
sbb
test
jb
cwtl
pusha
xchg
push
xchg
into
mov
xor
outsl
adc
jo
inc
movsb
xor
xchg
outsb
xchg
scas
xchg
mov
mov
pushf
pop
lret
enter
fstpt
mov
cwtl
adc
adc
add
test
into
push
or
faddp
xor
sub
mov
imul
mov
cmpsb
mov
shrl
cmp
push
cmp
sub
pop
data16
cmp
xchg
dec
test
push
push
enter
jb
xchg
pop
aas
pop
das
mov
jp
cltd
push
xchg
pop
cltd
repnz
dec
pop
aaa
test
push
es
ss
cltd
pop
into
jle
cs
js
lcall
mov
mov
mov
enter
in
outsl
mov
out
mov
cmpsb
fildll
xchg
fbstp
sbb
push
arpl
call
pop
or
imulb
loopne
mov
or
pop
xlat
dec
mov
sub
push
add
imul
xchg
cmp
jl
rep
subl
mov
xchg
cmpsb
xorl
xchg
pop
pop
stos
xchg
dec
mov
insb
rol
adcl
jnp
dec
fldt
ret
fistl
ljmp
mov
adc
sbb
stos
adc
add
cmp
sbbb
push
std
push
aaa
out
and
call
push
jae
repnz
mov
ljmp
jae
sub
mov
jae
sbb
das
dec
dec
lods
mov
xlat
mov
and
sti
mov
fs
push
push
pop
ds
add
mov
inc
inc
dec
add
addr16
sbb
push
xchg
xor
jle
out
adc
fnsave
into
ret
lea
mov
ret
or
sbb
call
mov
mov
gs
stos
arpl
sbb
stos
or
push
shlb
outsb
enter
pusha
jmp
std
sub
xor
push
push
mov
xor
notb
fiadds
xor
pop
out
push
fcoml
out
imul
out
fidivrs
push
call
adc
out
xchg
lcall
inc
sbb
test
mov
lret
movsb
cmp
xchg
lds
movl
xchg
xor
int3
loopne
cmpsb
inc
std
mov
mov
jbe
jle
xchg
lret
add
push
cmp
xchg
ja
pop
jle
imull
fistpl
notb
mov
cs
jbe
pop
es
scas
push
xchg
adc
shrl
shrb
mov
cmpsb
inc
testl
int3
mov
mov
pop
repnz
in
mov
scas
xor
push
jb
adc
sub
dec
jno
sub
or
fists
sub
or
ljmp
mov
lea
pop
or
fs
inc
aas
aad
xor
into
ljmp
test
sub
insl
pop
mov
pop
movsb
jne
xor
dec
fucomip
xchg
jp
inc
dec
xchg
out
jl
std
pop
cs
xorl
sbb
inc
ret
inc
add
outsl
scas
outsb
mov
sbb
cmp
inc
mov
xchg
pop
data16
xor
dec
mov
cmpb
xchg
inc
hlt
xor
and
sbbl
bound
jne
insb
pcmpgtd
jne
incb
inc
je
ds
adc
rol
jbe
xchg
mov
clc
cs
ss
pop
js
mov
fbld
push
push
negl
jo
dec
es
dec
ds
cmpsb
lcall
jle
fldl
insb
outsb
adc
sbb
out
adc
push
ds
jae
out
das
ss
and
jnp
mov
in
into
jnp
sub
inc
lret
sbb
dec
lcall
mov
andl
jnp
rolb
push
xchg
xchg
faddp
dec
push
iret
xlat
out
push
jg
ucomiss
jmp
cmc
int3
xchg
pusha
sbb
mov
xor
push
lret
push
mov
jo
faddl
in
ffreep
data16
mov
cld
jecxz
adc
push
or
loope
cli
pushl
fwait
data16
lcall
dec
cmpsb
fisttpll
dec
pop
popa
inc
dec
mov
movsl
jnp
and
jbe
dec
jae
cmpsb
jnp
out
stos
xchg
es
sub
push
mov
adc
jp
cli
xor
insb
lahf
mov
sub
xchg
outsl
vxorps
pop
ja
dec
sbb
out
add
movsl
jb
push
xchg
and
fidivrl
popf
addr16
mov
comiss
pop
mov
pushl
adc
test
push
pop
cmp
cmp
adc
jmp
push
into
mov
push
add
sti
dec
inc
pop
jg
or
pop
out
and
mov
rep
inc
outsl
sbb
or
mov
xchg
enter
addr16
jae
jmp
inc
dec
adc
dec
and
lods
sub
or
and
mov
iret
push
sbb
push
jbe
lock
jecxz
jg
scas
cs
rcll
adc
nop
sub
add
je
leave
jmp
push
lcall
xchg
psubq
xor
rcrb
sub
in
xchg
xchg
jmp
push
aaa
push
push
pop
sub
push
and
jp
data16
sbb
es
pop
push
inc
leave
push
mov
jecxz
rorl
push
stos
push
adc
adc
mov
lds
jae
dec
lret
fwait
add
lcall
xchg
lods
push
inc
into
das
add
add
add
mov
push
xchg
out
js
aad
pop
out
pop
mov
push
outsl
faddp
xlat
popl
mov
push
pop
shrl
int
scas
pop
push
and
neg
or
sub
bound
xlat
ja
fcoms
hlt
sbb
bound
pop
jmp
fucomi
inc
xor
jns
inc
push
sbb
inc
adc
jae
xor
push
xlat
mov
decb
test
jp
xchg
adc
das
push
mov
jbe
adc
mov
adc
ljmp
lcall
data16
insl
aaa
xchg
ja
stos
jmp
dec
sub
dec
pop
adc
push
hlt
lods
aad
adc
ret
xor
test
leave
incl
cmpsl
es
dec
mov
and
incb
adc
hlt
jbe
xchg
enter
test
mov
ds
not
push
test
negb
daa
push
inc
loop
xchg
aam
jns
jmp
loop
mov
mov
imul
stc
lods
mov
or
pop
sbb
mov
cwtl
inc
sti
leave
out
push
dec
push
inc
into
out
jno
push
lock
in
adc
arpl
jbe
bound
push
es
mov
and
aaa
pop
sub
sub
adc
sti
xchg
jb
js
idiv
push
orb
sarb
dec
mov
test
das
outsl
adc
jmp
xchg
imulb
adc
pushf
cmp
shr
push
xor
inc
cld
pushf
jp
inc
sub
xor
xchg
push
sbb
outsb
leave
mov
jno
push
fcomps
jp
insb
mov
fwait
xor
bound
xor
dec
inc
pop
inc
mov
out
mov
sub
aam
cmpsb
sbbb
ja
sbb
rclb
rcll
push
xor
pop
pop
je
test
push
inc
mov
pop
adcb
xchg
adc
into
test
sub
push
mov
cld
test
push
jb
icebp
bound
jo
add
imul
jl
cli
loopne
iret
pop
icebp
push
clc
xor
xorb
push
movsl
adc
inc
pushf
fcompl
pop
and
jae
inc
pushf
scas
mov
fcmovnu
negl
adc
lods
enter
ja
jno
into
jno
dec
push
lock
aaa
dec
fcmovnbe
movsb
add
sub
dec
mov
jp
and
mov
mov
xchg
mov
inc
decb
mov
jle
cs
je
jg
cmp
dec
ret
and
cmp
enter
dec
adc
push
pop
inc
xor
inc
into
pushf
imul
aam
cs
push
fcoms
ficompl
data16
mov
mov
or
ljmp
pop
mov
xor
enter
inc
lcall
ds
xchg
sar
loope
bound
xchg
repz
sbb
cwtl
adc
jmp
cwtl
mov
outsb
mov
pop
mov
leave
pop
push
jge
jae
sbb
mov
orl
cmp
ds
cmp
mov
push
push
test
cld
or
and
sub
push
stc
add
out
dec
jbe
stc
push
mov
push
lcall
roll
aam
insl
cmp
mov
mov
cwtl
data16
stos
insb
inc
push
dec
push
mov
or
dec
stc
push
dec
sub
int
cmp
pop
lcall
mov
es
pop
repnz
lock
mov
clc
sbb
arpl
mov
xchg
ljmp
push
mov
mov
icebp
aaa
dec
mov
jp
mov
xchg
into
pusha
mov
subb
movsl
out
js
iret
fmul
cmp
dec
xchg
enter
cmpsb
pushl
repz
mov
push
enter
jne
cs
movsl
lods
mov
dec
xor
add
mov
mov
mov
jns
ficompl
shll
in
cmpsl
fisubl
xor
iret
int3
and
sbb
xor
clc
mov
testb
dec
push
jbe
mov
lods
out
fiadds
sbb
mov
cmpsb
inc
cmp
aad
cs
stc
shr
in
and
in
pop
mov
add
push
mov
jp
xchg
sub
pushf
loope
xchg
cli
into
mov
xlat
dec
in
or
iret
adc
and
cli
sahf
sub
push
lcall
pop
mov
mov
xchg
jl
test
rcrb
sbb
lcall
mov
imul
inc
sbb
jno
fistl
je
xchg
pop
push
sub
pop
testl
adc
pop
popa
out
push
sub
movsbl
mov
out
push
cli
in
fldenv
adc
inc
jmp
pop
push
mov
mov
add
es
lock
in
inc
fildll
scas
jae
test
shlb
add
xchg
outsb
xchg
sub
dec
mov
push
decb
sub
mov
mov
jg
jnp
cmp
or
movsb
rcr
xor
inc
xchg
repz
dec
sbb
xchg
jle
add
push
int3
mov
aad
outsb
cmp
inc
or
mov
out
pop
sarb
repz
orl
leave
push
xchg
push
cmp
or
xchg
in
or
jg
movsl
jne
sub
movsb
scas
jecxz
jno
cmp
xor
shlb
pop
pop
pop
push
pop
push
cld
inc
aas
test
loop
imul
scas
imul
mov
push
cmp
jb
cmp
movsl
add
sbb
cmpsl
mov
scas
pop
xor
jb
jae
test
inc
cmc
mov
mov
adc
inc
cs
push
mov
mov
pop
dec
nop
test
pop
lds
cmp
dec
and
aaa
ret
adc
pop
cmpsb
adc
pop
and
mov
ljmp
in
pop
push
fidivrs
jle
stos
jbe
fucomi
leave
pop
sbb
mov
out
jns
sti
xchg
dec
int
sbb
test
aad
mov
pop
in
andb
push
mov
or
pushf
cmpsb
scas
scas
ret
push
jmp
in
mov
ficoml
jle
and
push
mov
jo
lcall
cmpsl
sbb
jbe
xlat
mov
jg
cmp
incl
cmp
mov
int3
jbe
adc
inc
xchg
movsl
dec
es
mov
push
arpl
inc
jl
ds
aaa
cld
cmp
aam
idivl
test
fidivs
push
adc
clc
xchg
pop
pop
fisubs
push
cltd
add
je
pop
out
outsl
pop
xchg
cmp
pushf
out
push
jne
inc
add
push
int
xlat
ret
mov
ret
jecxz
push
es
push
xchg
or
into
outsb
pop
lea
out
and
mulb
mov
pop
mov
ds
mov
push
lahf
push
push
mov
inc
int3
cmc
push
fdivrp
add
in
cltd
xchg
xchg
cmc
mov
xchg
xchg
mov
and
lods
sbb
decl
cwtl
xchg
sbb
jmp
xchg
inc
stos
cmp
xchg
ficoml
xor
sub
iret
loopne
outsb
pushf
xchg
mov
xlat
inc
movups
lcall
nop
ss
jnp
in
in
xchg
adc
jnp
inc
scas
js
mov
repnz
scas
push
fdivrp
ljmp
insb
jnp
pop
daa
mov
xchg
inc
fisubrl
mov
in
or
stos
loop
fwait
xchg
insb
jp
dec
rcl
dec
cmp
bound
dec
fnsave
pop
mov
mov
jle
imul
aam
cmp
push
dec
adcl
out
and
popf
mov
and
cmp
lret
sete
mov
push
mov
movsb
adc
add
pop
mov
xchg
adc
loop
mov
jmp
pop
mov
xchg
push
cmpb
lcall
mov
inc
das
push
imull
sbb
push
imul
xor
xchg
adc
pusha
push
mov
mov
push
add
sbb
movsb
push
fsubp
push
das
fcoms
pop
sbb
lea
loopne
rclb
out
sar
int
adc
adc
push
xchg
out
jne
cmp
ja
sbb
bound
imul
and
dec
xor
xor
adc
pop
enter
xchg
fs
push
xchg
lods
sbb
in
mov
dec
ficomps
call
xchg
out
inc
jne
or
mov
jle
mov
dec
lret
sub
std
js
jg
leave
xor
push
aaa
mov
inc
or
lret
or
push
lds
jb
jl
or
mov
mov
ljmp
mov
sbb
fisubs
es
cs
push
gs
or
aam
push
mov
repnz
fcoms
cmp
or
in
and
sbb
dec
fldcw
cmpsb
dec
shll
xchg
push
ret
pop
xchg
stc
imull
js
and
ss
pop
push
adcl
bound
iret
or
push
mov
std
sbb
aam
or
pop
popf
sub
aam
mov
push
pop
stos
pop
sub
mov
loopne
outsl
popa
add
sub
sub
mov
push
cmp
enter
xor
mov
or
and
shll
outsl
sbb
push
fcompl
je
cmp
rcll
cs
xor
es
sbb
adc
sub
pushf
pop
js
js
add
dec
add
sub
jecxz
push
pop
repz
stos
inc
cmc
jle
aam
xchg
jle
adc
out
out
cwtl
xor
fildll
add
mov
xchg
pushf
hlt
test
inc
inc
aad
loope
test
dec
mov
inc
outsl
shll
mov
dec
fisttpll
into
dec
cmp
add
cli
xor
pop
lock
inc
mov
pop
ss
sub
or
mov
lret
fisttpl
push
cmp
scas
xlat
sbb
jae
pop
in
pop
sti
and
es
jne
push
sarb
cmovp
repz
adc
mov
stc
lock
pop
iret
dec
jne
push
in
push
or
retw
mov
inc
in
or
pop
mov
aam
jge
adc
test
xor
aaa
push
inc
cmpsl
cltd
arpl
call
faddp
jl
aaa
loopne
adc
adc
call
shrb
mov
leave
sub
cmp
pop
push
fcmovb
cmc
lods
xor
jg
test
lods
dec
adc
mov
sbb
enter
adc
out
negb
mov
in
out
xchg
out
test
test
sub
icebp
inc
sub
xor
cmpsb
arpl
decb
mov
out
insl
jle
mov
gs
popf
jo
pushf
inc
pop
add
jns
lcall
xchg
out
daa
dec
std
pop
jbe
pop
mov
xchg
push
xchg
mov
jge
incl
cpuid
pusha
rcrb
xchg
xchg
push
pop
xlat
getsec
or
stc
insb
inc
mov
fiadds
xor
ljmp
push
mov
dec
push
sbb
pushf
xor
sbb
in
outsl
dec
xchg
jle
jo
dec
js
xchg
shr
test
add
xchg
ss
mov
mov
fidivrs
or
cmp
mov
bound
cmc
pusha
fadd
xchg
sti
ss
notl
testb
dec
nop
xor
imull
push
enter
dec
cli
mov
mov
hlt
push
sbb
jmp
push
rorl
add
out
pusha
xchg
xchg
lea
test
ror
cmp
dec
mov
mov
mov
icebp
sub
xor
pushf
jge
xor
sahf
frstor
ret
push
roll
movsb
jge
sbb
push
jne
imul
stc
dec
cmp
cmpl
push
test
jno
pop
scas
popa
out
sbb
andl
outsl
cli
mov
imul
adc
notb
mov
lret
popa
ljmp
rcrb
cmpl
sbb
cmc
pusha
ljmp
dec
cmpsl
ljmp
dec
lds
push
ljmp
imul
out
cmp
push
jl
xchg
inc
pop
and
xor
lods
and
inc
rorb
pcmpeqb
dec
sub
mov
iret
push
gs
ljmp
xchg
jbe
jns
idivb
add
into
inc
ljmp
xchg
mov
fwait
mov
sbb
mov
mov
call
mov
push
push
and
pop
jmp
xchg
push
lock
sub
ss
push
div
ljmp
inc
push
addl
aas
dec
push
int3
pop
inc
add
data16
mov
ret
testb
data16
js
leave
mov
stc
dec
jo
das
testl
into
xlat
mov
call
lock
jae
mov
cmpsb
fimuls
cwtl
push
lret
fldt
cmp
data16
cmc
insl
push
xor
xor
aad
std
mov
jns
scas
std
fstl
mov
adc
and
mov
mov
in
arpl
inc
jno
sub
adc
orb
mov
xchg
jnp
push
dec
xchg
js
inc
or
test
ss
iret
mov
lea
lea
std
push
lcall
sub
movq
enter
jle
pop
scas
push
into
mov
sarl
or
mov
and
adc
xor
dec
push
dec
dec
aaa
push
inc
adc
cmc
cmp
lea
cld
loope
inc
pop
addl
es
mov
pop
mov
xor
repnz
fdivs
jae
push
xchg
adcl
mov
repnz
push
mov
jle
inc
mov
in
cmp
enter
push
dec
shr
jbe
push
pop
add
push
jnp
lock
test
incl
push
jle
mov
cli
jbe
mov
hlt
clc
adc
jmp
cwtl
fsts
mov
jo
ss
add
jns
pop
or
or
lds
mov
pop
adc
test
jb
das
push
mov
rcrl
adc
xchg
dec
push
js
ds
lcall
adc
pop
pushf
outsl
test
lds
add
insb
popa
jg
ds
xchg
call
and
aam
and
iret
xor
shll
mov
mov
in
sahf
jmp
xor
cmp
cmpl
mov
xchg
xchg
push
je
push
out
mov
xor
pshufw
xchg
ret
rcrl
ror
sbb
jne
sbb
mov
mov
in
jb
inc
pushf
ja
sbb
stc
rcrb
mov
jbe
xchg
shlb
data16
repnz
xchg
xor
push
ss
jbe
int
cs
add
pop
cltd
pop
lret
sbb
mov
rolb
xchg
mov
mov
jle
sbb
mov
sbb
dec
stos
outsb
mov
js
xchg
out
push
mov
push
mov
mov
cs
push
or
dec
loop
and
adc
xchg
push
leave
fstpt
iret
popa
push
cld
out
das
inc
fildl
inc
push
inc
mov
loopne
mov
dec
lret
mov
shrb
outsl
js
pushf
jae
push
pop
fisttpll
orb
dec
cmp
jns
sub
aaa
xor
xchg
enter
dec
jbe
xchg
je
lcall
loope
sarb
ficoml
enter
push
xor
loopne
clc
sbbl
jbe
es
xchg
xchg
dec
fdivl
es
jg
rcll
cwtl
and
pop
popa
dec
mov
cmp
or
mov
xor
push
xchg
or
or
push
in
out
add
setp
mov
jnp
jecxz
jo
repnz
push
pop
scas
popf
sbb
dec
xchg
into
adc
mul
mov
dec
daa
cwtl
push
cmp
and
dec
pop
outsl
xor
jae
inc
ja
jle
jg
lods
or
into
jp
adc
dec
scas
addb
and
cmp
and
jl
mov
in
pushf
jb
inc
out
add
dec
fimull
and
pop
stos
jno
dec
int
push
jg
xchg
int
sub
add
movsb
jo
xchg
stos
sti
fdivr
sub
jp
and
pop
je
cmp
jbe
dec
dec
mov
lcall
adc
scas
mov
mov
sbbb
lds
add
fcmovnb
jg
icebp
lods
push
and
push
loop
adc
or
je
mov
outsb
push
cmpsb
sarb
cli
push
ljmp
inc
shlb
xchg
and
jge
sbb
sbb
cmp
loop
mov
or
aam
mov
negb
mov
fsubs
dec
mov
in
movsl
cmp
bound
xchg
pop
push
pop
and
and
xchg
es
rcrb
gs
pop
cs
scas
js
xchg
ret
push
pop
xlat
inc
mov
pop
xor
push
xchg
out
mov
mov
xor
mov
cmpsb
or
nop
cmpsb
scas
inc
jnp
or
jo
mov
in
hlt
fimull
mov
jge
into
cmc
lods
insb
ljmp
mov
int
and
lods
notl
jb
fsub
fcmovnb
pxor
inc
mov
sub
adc
data16
out
inc
ret
outsb
mov
xor
mov
sbb
jae
ret
pop
mull
and
mov
xchg
enter
sub
mov
xor
xor
into
pop
xchg
adc
imulb
pmaxsw
pop
rcrb
daa
cs
adc
mov
add
data16
xlat
dec
xchg
test
dec
push
cmp
pop
push
push
sub
pushf
sbb
add
pop
dec
mov
pusha
out
jb
dec
sbb
dec
inc
sub
movsl
add
push
pop
ss
cmp
cwtl
sub
filds
jae,pn
push
incb
jge
fwait
pop
sub
mov
or
mov
push
cmp
inc
xchg
pop
cmp
pop
dec
ret
mov
mov
push
inc
inc
repz
in
pop
je
dec
xchg
mov
out
xchg
push
scas
fstp
lods
popa
dec
inc
addr16
dec
sbb
and
icebp
pop
dec
arpl
push
ss
adc
das
cs
ljmp
jae
ljmp
and
enter
mov
lea
lcall
adc
ds
jg
iret
push
xchg
xchg
mov
or
mov
lahf
leave
js
bound
xchg
mov
test
cmp
pop
xchg
mov
inc
push
mov
es
jno
cs
in
mov
jne
es
cld
imul
fsubs
lcall
aad
lret
fcomps
sbb
enter
or
inc
jns
inc
pop
into
aaa
push
lock
mov
scas
out
add
and
pop
cli
jns
xchg
lods
sahf
scas
sbb
jae
sub
xchg
pop
jo
fisubrl
dec
data16
stos
pop
xor
ds
scas
cmpsl
mov
out
lea
mov
push
out
ss
out
cs
out
lea
mov
fisttpl
xlat
dec
and
dec
lods
dec
bound
dec
ret
pop
dec
hlt
das
xchg
loop
jbe
adc
mov
rcrb
and
xchg
pop
pushf
lods
lcall
pop
inc
push
lcall
cmp
cwtl
shlb
mov
jo
outsb
mov
loop
jo
cmp
push
test
or
mov
sbb
xchg
enter
xchg
add
jecxz
pusha
mov
xchg
in
pop
push
pusha
cmpsl
pop
xchg
jl
mov
inc
lea
negb
ja
mov
push
mov
out
cmp
xchg
pop
pop
push
pop
jne
and
fwait
and
mov
les
repz
sbb
mov
sti
test
jbe
sub
ljmp
pop
cltd
addr16
repz
leave
pop
xor
xchg
addb
fdivrl
cwtl
jbe
xor
daa
loopne
pop
pop
push
or
mov
aad
data16
in
pop
rcll
add
sub
ret
add
je
xchg
into
xlat
leave
fldt
xlat
cmp
lods
pop
inc
daa
mov
jle
pop
push
xchg
stos
pop
into
lahf
nop
mov
out
sbb
push
daa
jg
xor
and
dec
pop
jo
add
roll
loopne
pop
ret
mov
pop
jns
inc
loope
pop
push
pop
inc
int
pop
mov
push
imul
mov
jne
mov
jb
cmp
outsl
add
xor
push
pop
in
mov
popa
rolb
fcoms
mov
jg
leave
pop
push
mov
jg
mov
sbb
inc
mov
outsl
cmp
fstl
test
pop
in
xchg
cmpl
lcall
dec
jb
xor
idiv
xchg
xchg
insl
dec
cld
cs
sub
orb
push
mov
cld
add
inc
and
loope
adc
enter
inc
mov
cli
bound
inc
bound
mov
gs
fdivrl
ss
and
mov
pop
jmp
fistl
enter
repnz
pop
dec
jo
daa
loope
in
jg
dec
xchg
fwait
xchg
nop
incb
push
dec
jno
int3
push
pushf
push
outsb
sub
out
and
into
data16
mov
xchg
dec
popa
rcl
jne
adc
jmp
or
adc
jmp
sbb
pop
mov
jecxz
sbb
es
jo
inc
test
jo
lcall
pop
cwtl
aam
cwtl
into
cmp
adcl
lea
jp
add
sub
push
lcall
mov
loopne
pop
mov
and
das
mov
xchg
dec
add
daa
xchg
pushf
aas
xchg
daa
push
lea
lds
bound
jmp
pop
mov
ret
fucomp
sub
pop
and
bound
inc
sub
pop
sub
push
jge
fdivrl
mov
por
test
cmove
or
mov
xor
sub
outsl
push
pop
call
into
outsb
mov
repnz
gs
ss
adc
int3
mov
scas
rcrl
fcmovb
and
stos
aas
xor
dec
push
popf
ljmp
into
cmpsl
jp
jnp
sub
gs
sub
xor
cli
jo
out
cmp
popf
outsb
nop
add
stc
ja
je
jmp
and
cmpl
subb
mov
sbb
mov
sbbb
sbb
jle
jmp
loope
mov
adc
xor
hlt
fld
into
xchg
pop
and
pop
fsubp
leave
mov
out
mov
xchg
mov
jp
sets
jge
iret
pushf
xchg
jecxz
bound
and
sbb
push
push
jle
lods
jae
psraw
sbb
cmp
jg
push
cmpsl
jae
sti
pop
addr16
jle
inc
pop
xor
pop
dec
xor
pop
cmpb
xchg
sti
outsb
inc
pop
or
xchg
mov
sub
pop
mov
std
jle
std
mov
testb
cld
mov
es
mov
push
push
dec
push
sbbl
xchg
add
test
jecxz
mov
data16
mov
pushf
je
cmp
pushf
stc
and
xor
inc
xchg
sqrtps
inc
out
xor
sbb
mov
lcall
pop
out
push
mov
lds
ret
ret
fisubl
jae
adc
mov
fcmovu
cmp
adc
pop
lods
push
jbe
fisubrl
stos
push
mov
add
testl
pop
xchg
inc
cmp
stc
and
cs
mov
push
mov
es
loope
gs
jbe
gs
mov
dec
cmpb
dec
mov
dec
mov
lcall
push
negb
fwait
inc
jle
mov
xor
and
cltd
mov
sbb
xorl
sbb
popf
dec
lahf
outsb
pushf
test
mov
cmpsb
iret
out
or
mov
push
fmull
sbb
xchg
iret
xchg
pop
dec
mov
cmc
arpl
movsb
gs
popf
jg
pop
nop
dec
cmpsb
lcall
cmpb
adc
out
pop
cmpsl
sbb
lcall
cmp
sub
ficompl
scas
jg
in
es
pop
push
rcll
pop
cltd
outsb
xchg
iret
jmp
cwtl
lret
cwtl
shr
xor
leave
roll
jno
inc
adc
and
jge
popl
xchg
cmc
jbe
cmp
orl
xchg
ss
xchg
jo
mov
sub
mov
mov
bound
into
and
mov
jl
xchg
bound
lods
outsb
fildl
mov
push
jl
data16
and
xlat
fs
push
gs
push
add
outsb
lea
xchg
int3
xchg
pop
or
xchg
gs
ret
test
repz
pop
ds
adcb
mov
cmp
xchg
aaa
push
sbb
xchg
fwait
lret
xchg
or
mov
xor
adc
dec
or
jb
xchg
mov
enter
pop
insb
movb
nop
loop
jno
cmp
jb
inc
jge
es
or
mov
mov
inc
or
imul
jg
inc
nop
popa
in
daa
push
out
sbbl
aaa
ficomps
nop
lock
and
stc
mov
xchg
sub
push
mov
roll
inc
cmpsb
xchg
fisttpl
dec
or
mov
dec
lret
in
in
test
loop
ret
repnz
pushf
xchg
mov
push
dec
pop
addr16
jbe
xchg
jo
xor
xor
jp
jl
mulb
shlb
cmp
testb
icebp
inc
jnp
ss
lret
xchg
or
roll
or
out
cli
movsl
not
testb
movl
movsl
mov
pop
js
xchg
int3
dec
fxch
std
stos
jmp
sub
mov
pop
outsb
cmpsl
sbb
lcall
jp
dec
jg
testb
pop
insb
cmpsl
sbb
mov
mov
sti
dec
push
insl
pop
xchg
dec
shll
fcoml
mov
cli
cmp
mov
jns
mov
xor
push
out
fnstsw
sbbb
fsubl
dec
xlat
out
mov
mov
jnp
stc
inc
sub
push
dec
cld
adc
inc
fistpll
mov
in
pop
test
xchg
jb
sub
mov
pop
lods
pop
lcall
xchg
push
call
jmp
mov
xor
ficoml
hlt
jle
movsb
mov
iret
mov
ja
test
dec
mov
test
pop
mov
inc
jcxz
cmp
in
movb
mov
iret
movsb
mov
int
sub
in
out
js
lret
cmp
mov
sbb
adc
nop
shrb
mov
shrb
rcl
pop
sti
inc
pop
push
mov
repz
mov
sti
dec
pop
sub
dec
out
das
ja
jg
nop
mov
jle
popa
mov
lods
push
jle
iret
iret
cmp
mov
push
in
jae,pn
push
mov
xlat
mov
mov
dec
xlat
xchg
mov
xor
xchg
lods
cli
idivb
scas
idivb
mov
test
cmpsl
adc
add
fsubs
add
fdivrs
jmp
into
mov
fs
mov
popa
mov
sti
movsl
lods
movsb
ss
sub
and
jns
jge
push
mov
gs
into
adc
cltd
test
dec
sbb
xor
sbb
mov
jmp
cmpsl
out
jns
jnp
xor
jl
push
addr16
cmp
jl
sub
add
test
jmp
cltd
or
test
call
notl
inc
push
cli
mov
push
dec
inc
xchg
addr16
xchg
jg
je
inc
jne
dec
lret
jmp
mov
out
jg
outsl
into
xchg
ljmp
fwait
add
push
adc
ss
mov
or
add
inc
mov
pop
push
je
out
jle
out
jmp
jmp
dec
jmp
in
not
jl
mov
pop
xchg
mov
rorl
jle
inc
in
push
push
cmp
jle
icebp
mov
into
int3
adc
xor
push
push
dec
mov
shll
jp
clc
xchg
mov
cmp
das
adc
xchg
enter
clc
push
test
and
mov
jo
xchg
xorl
bound
xchg
pop
lds
ja
cli
xor
lds
pop
push
mov
insl
xor
cli
cld
std
xlat
ss
xchg
or
nop
adc
bound
pushf
push
push
mov
aam
adc
lea
es
int3
mov
xor
shll
and
mov
mov
nop
out
mov
aas
jns
insl
test
mov
gs
enter
into
jle
pop
fsubp
nop
int
push
icebp
aam
push
jo
push
adc
push
cmp
adc
popf
inc
xchg
loop
inc
jo
rcr
loop
or
cs
scas
pop
nop
dec
das
movl
vcvtsd2si
mov
inc
lret
aam
mov
jmp
inc
cmp
add
scas
icebp
adc
pop
push
inc
mov
adc
cmpsl
movsl
adc
dec
dec
xchg
hlt
clc
inc
daa
dec
stc
divb
adc
orb
cli
dec
mov
inc
cmp
popw
mov
mov
jbe
sti
pushf
mov
daa
add
cli
dec
into
lea
inc
fs
push
fisttps
push
push
pop
lds
std
mov
icebp
aad
inc
mov
lcall
xchg
mov
inc
daa
ja
sbb
cmp
cmpsb
xchg
flds
xchg
dec
xchg
inc
or
dec
arpl
inc
faddl
fnstenv
insl
sti
mov
mov
gs
repnz
jns
pop
sbb
notb
cwtl
mov
dec
push
or
ss
jge
jnp
sar
xchg
mov
cmpsl
sub
scas
mov
xlat
add
add
xchg
dec
mov
mov
mov
jnp
mov
imul
mov
xor
xor
or
js
or
pop
jp
addb
mov
or
push
jno
bound
jge
or
test
adc
in
jbe
pop
mov
mov
mov
enter
adc
jmp
add
sets
hlt
lcall
dec
out
pop
out
dec
sahf
jecxz
ret
das
push
fisttps
das
jg
mov
jns
shlb
push
push
mov
bound
jns
into
jmp
cmp
jns
int
inc
xor
test
imull
or
and
adc
ja
sub
mov
cmp
rcrb
dec
mov
add
or
ss
dec
mov
scas
aaa
test
pop
pop
mov
iret
dec
cmp
push
movsb
mov
pop
fbld
arpl
inc
loopne
pop
cmc
push
xor
push
xor
div
sbb
nop
cmp
ss
pop
or
lret
inc
negb
pop
mov
decl
mov
ds
ds
sub
fwait
stos
mov
pop
mov
pop
jle
mov
testb
jg
add
jl
xchg
adc
mov
jbe
push
mov
xchg
xchg
imull
sbbl
es
jmp
and
sbb
fildll
push
inc
inc
std
add
xchg
cmpsl
iret
push
out
adc
push
mov
mov
xchg
adc
cmpl
cld
test
insb
pop
testl
addb
bound
fwait
sbb
sti
mov
jle
ss
sbb
hlt
std
icebp
jg
jge
fcoml
cmp
push
sub
mov
xor
imul
fildll
xor
lock
mov
fucomip
cmp
data16
cwtl
leave
ljmp
repnz
jp
jl
dec
fcmovne
dec
not
and
into
xchg
je
mov
lahf
adc
mov
push
dec
mov
xchg
xchg
sbb
mov
sbb
insb
xlat
stos
stc
add
sub
cmp
lea
data16
into
cltd
cltd
ds
bound
loop
rol
pushf
xor
aad
loop
test
callw
arpl
or
scas
cmp
testl
mov
cmp
cmc
mov
and
mov
jne
add
push
orl
cmpsb
shrb
hlt
aam
push
faddl
jg
imul
push
mov
jl
sets
mov
repnz
dec
xchg
test
xchg
stos
dec
nop
ja
in
xlat
add
pop
cmp
inc
add
loopne
pushf
stos
cli
inc
inc
dec
jle
mov
imul
mov
push
stos
pop
ss
pop
test
cmp
test
bound
insl
mov
ret
add
adc
sti
adc
movsb
mov
iret
sub
mov
sbb
nop
fs
xlat
and
cltd
arpl
add
xchg
enter
popa
push
pushf
mov
sub
das
xchg
arpl
int3
loopne
xor
out
call
push
call
ss
sti
push
orps
push
mov
xor
add
add
jb
fisubrl
cwtl
lret
test
lahf
pusha
repnz
jns
cmp
sbb
testl
repz
sbbl
mov
repnz
fadds
repz
stos
pop
es
jecxz
jne
in
pop
adcb
data16
sarl
xchg
btr
dec
jle
dec
mov
in
iret
xor
cli
out
repz
insb
fisttpl
inc
fwait
loop
or
xor
ljmp
jecxz
push
or
pop
sti
xor
sahf
push
xchg
or
cmp
data16
mov
dec
push
loop
mov
adc
mov
jns
mov
pop
xchg
push
push
or
jne
ljmp
std
push
dec
hlt
int3
cmp
dec
shl
dec
push
cmpl
test
lods
dec
jle
pop
pop
cmpsb
cmp
jae
mov
or
cmc
mov
rcrb
daa
into
jns
pusha
jecxz
jne
jg
cmp
stos
test
aas
xchg
and
data16
push
jle
mov
mov
pop
mov
enter
out
cmc
dec
sarb
xchg
pushw
jle
or
cli
add
das
mov
insl
mov
xchg
xor
sbb
jg
ljmp
xchg
out
push
mov
imul
insl
insb
jge
sub
jl
stc
lods
insb
pop
sarl
dec
inc
lahf
jae
dec
pop
fnstsw
mov
cmpsb
jg
std
shlb
cmpsb
cli
nop
mov
add
mov
lea
jg
mov
mov
sti
jb,pn
outsb
les
popa
add
sbb
jb
nop
outsb
push
orl
imul
jae
clc
loop
jnp
pop
cs
jge
sti
jbe
jnp
adc
jmp
shl
sub
xchg
mov
sbb
mov
mov
neg
hlt
bound
lddqu
add
jl
jbe
test
pop
mov
aam
mov
xchg
xchg
and
mov
out
nop
sbb
adc
stos
je
call
into
xchg
mov
addl
xor
inc
movsl
daa
pop
jno
xchg
push
xor
out
shlb
mov
push
icebp
in
int
shll
jnp
nop
cmp
cwtl
adc
lds
mov
shr
mov
dec
ja
dec
sub
push
addr16
fwait
mov
fidivrl
mov
pushf
test
inc
fyl2xp1
pop
inc
idivb
repnz
xchg
adc
fdivl
and
jge
jnp
sti
test
out
ljmp
inc
xchg
aad
ds
xor
mov
xlat
shlb
mov
jp
inc
mov
inc
xorl
movsb
imul
in
mov
inc
into
cmp
rclw
test
xchg
mov
lea
sub
mov
subl
cmpb
mov
mov
jg
aad
mov
mov
mov
inc
cmp
mov
push
loopne
xorb
mov
fs
dec
aaa
push
sub
sti
ds
xchg
cwtl
mov
mov
daa
dec
inc
xchg
mov
pushf
sar
fcmovnbe
dec
idiv
fstps
addr16
mov
lcall
inc
repz
out
test
mull
cmp
jb
fisubrl
loop
cmpsl
adcl
xchg
mov
cmpsb
pop
enter
dec
in
and
dec
loop
sbb
pop
loopne
pop
hlt
dec
mov
pop
sub
push
pop
je
aam
adc
insb
adc
sbb
mov
cmpsl
int3
cmpl
daa
xchg
and
mov
fdivs
rcll
aas
ljmp
into
push
sub
push
pop
popf
cmp
mov
fcmovbe
nop
jb
mov
mov
hlt
pop
cwtl
in
ds
das
xor
inc
jmp
mov
or
leave
xchg
jne
stos
sbb
out
das
shll
mov
push
push
loopne
pop
jnp
lods
out
rolb
scas
mov
and
push
out
sti
iret
dec
movsb
mov
mov
ss
inc
sti
sbb
push
test
sbb
xchg
push
mov
mov
mov
test
lods
arpl
inc
daa
jg
jne
leave
push
cs
cmp
imul
dec
inc
or
test
jbe
xchg
fisubs
sbb
out
cli
mov
push
sbb
xchg
mov
xchg
cmp
add
out
mov
sbb
jl
xchg
sarb
push
pushf
dec
mov
cld
xchg
pushf
fcompl
mov
pop
lret
cmp
repnz
punpcklbw
data16
jne
clc
je
cltd
pushf
and
xchg
xorb
and
pop
in
enter
inc
movsb
pop
inc
mov
popa
add
push
mov
sub
mov
lret
lds
sub
in
pop
pushf
xchg
lock
outsl
adc
outsl
mov
mov
repnz
and
inc
pop
push
xchg
jp
xchg
dec
xchg
xchg
add
movlps
movsl
int
sub
in
ficompl
mov
bound
xor
mov
or
add
in
lahf
lret
xchg
jno
cmp
add
repz
inc
push
push
inc
outsb
sub
enter
pop
ja,pt
cmp
dec
cltd
and
adc
mov
jb
jne
push
int3
aas
inc
push
dec
aaa
cmp
mov
mov
lock
xor
cmp
stos
fstl
adc
dec
jg
xchg
pop
addl
push
dec
testb
push
dec
lock
inc
outsb
jns
les
or
icebp
dec
jns
pop
addr16
addr16
jg
add
addr16
mov
push
push
jno
sar
jg
cli
mov
inc
popf
push
xchg
mov
xchg
jg
cs
dec
mov
into
xor
ret
push
out
testb
inc
sti
xchg
pop
cmp
nop
pop
arpl
scas
xor
into
add
shr
incl
and
es
inc
push
xchg
xchg
mov
and
es
jno
dec
jmp
jp
mov
and
adc
test
jmp
cld
cmp
mov
add
xchg
xchg
mov
xchg
js
cmc
mov
stc
daa
mov
mov
shll
sub
das
mov
shrl
xchg
sub
leave
fbld
push
out
push
pop
in
ja
mov
sbb
xchg
outsb
in
dec
fimuls
mov
mov
dec
in
pusha
pop
push
xor
xor
xorb
in
js
dec
xchg
lcall
mov
imul
fdivr
data16
movb
adc
xor
scas
inc
lcall
sbb
and
je
xchg
ljmp
ss
push
xchg
stc
pop
pushf
xchg
cmpsb
fcomip
js
js
dec
pop
pop
mov
pop
mov
pop
std
scas
xchg
or
aaa
pop
inc
add
and
pop
and
lcall
pushf
in
mov
aaa
jl
push
xchg
adc
fildl
push
pusha
dec
push
bound
xchg
stos
in
dec
mov
out
iret
lcall
xchg
mov
lock
insb
ja
jle
mull
nop
and
cs
mov
mov
js
jge
mov
ret
adc
call
adc
imul
mov
xor
jmp
jo
mov
mov
addr16
fs
jle
cwtl
inc
notb
sti
adc
mov
dec
gs
cmp
pop
jg
fldl
xlat
or
test
mov
add
ljmp
lock
rorb
adc
xorb
xchg
and
divb
xchg
ret
add
rorb
push
cmc
roll
js
dec
dec
faddl
lret
out
xor
cmp
sub
ficompl
sub
dec
mov
mov
xchg
pop
jne
rolb
cmp
cmp
setb
push
nop
inc
test
xchg
pop
push
pop
testw
mov
imul
outsb
sbb
jg
lea
push
pop
adc
and
leave
sar
test
insl
cmp
frstor
sti
daa
sub
pop
and
data16
pushf
push
push
popa
sbb
ljmp
loope
jbe
jns
fs
mov
in
fwait
or
or
loope
xchg
jmp
push
mov
sbb
push
or
xor
sar
inc
jmp
xchg
filds
xchg
jns
loope
xor
pop
decl
imul
ficompl
mov
cs
bswap
lcall
out
pop
je
lcall
or
pop
jp
push
cmp
mov
popa
or
or
mov
jg
negb
pushf
in
into
int
decb
xchg
mov
lahf
sub
adc
cmpsl
dec
adc
mov
cld
mov
cmpsb
mov
xchg
jl
scas
je
push
test
or
or
pop
push
jge
scas
push
xchg
adc
stc
inc
stc
xchg
test
mov
pop
pusha
jge
je
outsb
push
adc
sbb
pop
jbe
push
out
adc
jle
add
jbe
iret
in
adc
push
bnd
aaa
xor
sbb
loop
mov
cmp
mov
das
mov
fimuls
repz
jg
dec
push
popf
fildll
andl
ljmp
imul
mov
addl
std
sbb
test
out
dec
lea
add
inc
aaa
jns
cwtl
lods
scas
inc
scas
adc
fdivrl
cwtl
mov
loop
mov
pop
les
ljmp
rorb
jecxz
jne
frstor
popf
and
sbb
xor
mov
adc
lock
inc
push
xchg
push
inc
sub
fisttpll
sbb
ss
loop
inc
fidivrl
xchg
cmpl
push
imul
jbe
and
mov
xchg
dec
pop
xchg
es
xchg
lods
es
mov
push
sbb
sbb
add
imul
pop
xchg
xchg
stos
inc
pop
bound
into
xchg
imul
push
adc
cwtl
xor
mov
push
movsb
pop
xchg
and
cmp
cld
lcall
out
mov
nop
lahf
cld
rcll
add
arpl
ss
sub
fs
test
ja
pop
mov
xchg
mov
xchg
aam
push
daa
out
orb
scas
mov
mov
sbb
pop
movsl
sarb
cs
lcall
arpl
mov
sub
xor
jb
daa
js
mov
jmp
pop
outsl
mov
mov
pushf
movsl
or
inc
lcall
in
in
jp,pn
mov
sarl
push
in
pop
inc
notb
repz
stos
loopne
scas
bound
inc
in
push
jne
aaa
shlb
jl
sbbl
repz
movd
pop
bound
adc
xchg
sub
loopne
movsl
ret
std
sbb
bound
data16
pushf
cmpsl
xchg
cld
pushf
mov
add
addr16
xchg
clc
pop
loop
push
or
add
push
cld
sbb
bound
push
cmp
shll
insb
pop
jle
in
imul
adc
pop
xchg
icebp
push
and
push
sbb
or
jbe
sti
sub
jbe
ljmp
lcall
addr16
ljmp
inc
lcall
add
cmp
push
lcall
dec
cld
mov
push
test
or
lds
jo
fistl
cwtl
jg
addr16
mov
ret
or
ss
jb
push
xchg
ds
xor
push
and
mov
js
loop
cs
jle
int
shll
in
ret
push
jle
add
lcall
test
dec
int3
in
jle
sub
sub
outsb
xor
push
test
xor
mov
popf
bound
ljmp
mov
mov
rdtsc
repz
push
xchg
pop
loopne
jne
jle
jnp
cmpl
xchg
and
cmp
je
dec
lods
push
ja
in
mov
mov
cmp
jbe
pop
cmovs
cmp
xchg
cmpsb
inc
mov
outsb
into
test
sbb
fs
into
int
adc
mov
dec
cmp
push
push
mov
inc
xchg
je
push
jge
stos
icebp
in
push
lock
iret
sti
push
sub
imulb
data16
xchg
imul
in
add
cltd
cmc
lea
adc
lds
sub
mov
sub
pop
jno
sub
add
and
cmpsb
and
jl
and
add
shl
fdivrp
push
nop
mov
and
or
mov
imulb
xchg
rorl
xlat
mov
mov
in
and
push
push
push
lock
xor
mov
push
add
jnp
jp
scas
mov
stc
das
sbbl
aas
or
fbstp
and
ja
jle
lds
bswap
pushw
jp
pop
push
mov
pushf
pop
inc
les
mov
xchg
or
xlat
sbb
pop
jo
ds
sub
push
out
lods
int3
mov
cltd
push
out
adc
clc
push
mov
push
cmpsl
xchg
ljmp
loopne
inc
lea
mov
adc
pop
inc
loopne,pn
popf
push
xchg
shlb
int3
and
mov
add
rorb
fs
insb
scas
bound
scas
xor
lret
loop
lock
sub
jno
fistl
lea
movsb
gs
test
or
xchg
out
lcall
add
xlat
add
add
push
jne
stos
data16
dec
pop
into
mov
mov
cs
xor
sub
cs
or
or
xchg
into
push
sub
push
pop
popf
jne
adc
sbb
aaa
aam
mov
xor
jbe
mov
bound
push
js
xchg
int3
scas
lcall
adc
xchg
inc
xchg
inc
inc
mov
gs
dec
push
and
and
xor
mov
push
mov
and
movb
adc
mov
mov
mov
push
orb
ret
adc
dec
lods
mov
cmp
jnp
dec
idiv
push
cmp
cmp
pop
or
add
dec
xchg
jle
sbb
mov
or
outsb
rcrb
cmp
pusha
mov
neg
fimull
add
jl
in
mov
adc
rorl
cmp
leave
adc
cmp
mov
push
dec
jbe
mov
inc
shlb
pop
dec
xchg
add
mulb
sbb
sbb
cmp
xor
pop
aad
in
xchg
pop
loope
aam
or
push
outsb
scas
jno
jns
jge
inc
and
ret
push
faddl
sub
push
and
inc
lds
xchg
or
jbe
outsb
int3
mov
xchg
sbb
pop
out
xchg
mov
lock
je
sbb
mov
cmc
cmp
xor
mov
repz
hlt
xlat
mov
fbstp
dec
cmpsb
dec
pop
lret
cmpsl
pop
cmp
or
ja
clc
lret
movsl
sub
adc
dec
push
xor
and
mov
push
inc
bound
mov
out
push
jns
jle
notb
fimull
and
es
paddd
dec
push
inc
hlt
cmp
jbe
lret
fcmovnbe
or
int3
or
enter
inc
out
xor
dec
jl
mov
xor
pop
adc
jecxz
pop
data16
dec
or
out
or
adc
inc
shrl
cmpsb
pop
call
or
mov
das
je
pushf
jl
stc
mov
sbb
inc
mov
addr16
jle
dec
mov
jb
dec
mov
mov
ljmp
pop
mov
ss
fs
push
xchg
xchg
mov
insl
std
movl
mov
pushf
call
loop
ret
stos
mov
mov
pop
jb
and
push
lods
ret
and
push
es
pop
lret
inc
inc
fwait
daa
sbb
mov
sub
insb
iret
cmp
push
mov
bound
outsl
and
or
adc
jp
pop
pop
lods
push
inc
pushf
mov
dec
int
push
fcompl
mov
mov
loop
pop
xor
jo
pop
pop
adc
sbb
fistpl
rcr
loopne
stos
inc
push
cmpsb
mov
mov
loope
out
lret
or
pop
jmp
cld
bound
arpl
mov
subl
dec
scas
bnd
stos
shll
gs
ja
xchg
test
fisubl
push
fwait
mov
adc
adc
xor
enter
testb
pop
sbbb
jg
cmp
xchg
jae
jmp
data16
jae
fbld
cmpl
data16
je
and
xor
cmp
jmp
jno
mov
jnp
es
pop
pop
mov
daa
add
pushf
xchg
jge
aaa
inc
lahf
pop
cs
xchg
jae
xchg
jl
mov
inc
scas
cwtl
pushf
jmp
in
xchg
adc
push
xchg
push
insl
pop
jecxz
mov
arpl
outsb
repnz
xor
outsl
xchg
inc
inc
and
hlt
pop
or
bound
push
aam
aaa
rcrb
outsl
ds
push
add
sub
aas
inc
filds
mov
rolb
enter
inc
dec
imul
xlat
dec
fcmove
and
mov
aad
or
pusha
lods
mov
cld
shlb
jbe
inc
pushf
or
andb
cmpsl
and
inc
das
and
lea
and
jbe
jle
aam
dec
push
pop
and
fimuls
cmp
mov
and
sbb
test
insb
sub
fildll
mov
shlb
les
mov
mov
push
dec
push
pop
mov
mov
pop
mov
ret
xorl
rorb
and
test
icebp
mov
pusha
fdivrs
push
push
notb
pop
xchg
or
mov
mov
pusha
push
and
loop
pop
daa
adc
shrl
inc
dec
push
xchg
out
in
mov
mov
aas
and
ret
or
adc
push
adc
push
fcompl
xor
ret
jl
mov
push
mov
or
inc
inc
subb
mov
mov
gs
jne
mov
jmp
and
mov
sub
push
int3
aas
xchg
pushf
testb
negb
cmp
dec
xchg
scas
push
mov
int
lock
xchg
jp
mov
jg
pop
or
out
pop
push
leave
inc
ss
and
adc
sub
cs
sbb
bound
fcmovnbe
repz
mov
mov
jle
stos
js
sub
push
xchg
pop
ss
push
add
cli
popf
sub
gs
popf
mov
popf
jmp
and
push
add
cli
subl
arpl
sbb
sbb
dec
ss
fdivrp
stos
sub
popa
in
xchg
mov
pushf
add
inc
cmpsl
sub
inc
sub
jg
fidivrl
pop
pop
pusha
mov
repnz
clc
fwait
lahf
std
jge
mov
jl
cmp
mov
inc
jle
adc
mov
pop
push
pop
pop
lahf
addb
dec
xchg
xchg
es
test
xchg
jle
xchg
sbb
cltd
pop
call
test
xchg
mov
gs
pop
cmpsl
xchg
inc
push
dec
sbb
jg
push
xchg
frstor
jbe
cli
or
push
adc
jns
push
push
jnp
and
orl
jne
cmp
sbb
scas
sbb
nop
divb
mov
fistpl
jae
adc
jne
cmp
loope
xchg
jge
mov
lea
in
dec
push
setae
pusha
call
mov
adc
pop
insl
insb
push
mov
test
test
std
fdivl
sarb
cmovns
imul
pop
ficompl
mov
xor
cmp
push
mov
pop
test
cmpsl
xlat
inc
gs
movsb
jnp
lret
incl
cs
inc
test
popl
inc
inc
std
xchg
jbe
jp
xchg
jge
cmp
comiss
out
or
push
into
ficoml
jl
cmp
lcall
mov
ret
cmpsl
or
popf
pushf
or
xchg
cs
push
cmp
push
mov
out
push
push
sub
sub
cmp
push
push
mov
ret
fidivrs
lret
mov
lahf
pushl
sub
test
aas
jp
mov
jb
cltd
shlb
in
push
mov
movzwl
cwtl
xchg
shrl
pop
push
lds
jl
cmp
push
xchg
mov
pushf
mov
xchg
test
movsb
dec
cmp
pop
xor
push
xchg
push
loop
ja
out
sbb
cltd
cmpsb
cltd
push
sub
cmp
outsl
lcall
sub
sub
test
sti
mov
xor
jae
jo
xchg
jge
cmp
pop
fs
nop
sbb
cmp
pop
xor
sbb
mov
out
insl
lahf
cmp
cmpb
push
sub
nop
mov
inc
xchg
mov
lahf
jbe
js
std
rclw
xchg
insl
cmp
sub
jne
es
xchg
data16
adc
push
inc
mov
popf
and
aaa
jle
pop
and
adc
sub
ljmp
orw
pop
mov
data16
inc
sbb
insb
pop
add
inc
sbb
cmp
pop
inc
pop
into
pop
shrb
pop
out
jb
pop
push
pop
pop
mov
add
lcall
pop
sbb
mov
icebp
jbe
jb
cmp
jb
mov
jb
mov
jb
adc
xor
jb
fisubrs
mov
xchg
inc
xchg
add
sti
repnz
insl
and
cs
jp
mov
fldt
jl
push
int3
pop
out
roll
mov
lds
cmp
cs
adc
pop
cs
stos
xchg
adc
xchg
xchg
jle
push
pop
into
andl
orb
push
mov
pop
inc
popa
mov
mov
sub
dec
lods
cld
lods
xchg
mov
mov
mov
pop
lcall
ret
push
mov
pop
and
loop
out
iret
mov
inc
outsb
xchg
stc
push
cmp
dec
lret
dec
int
popa
pop
push
cmc
leave
push
add
dec
or
inc
negb
ljmp
xchg
sub
sbb
jl
xchg
mov
and
mov
pushf
mov
shlb
into
out
inc
fisttpll
in
mov
loopne
xchg
push
push
sbb
daa
pushf
or
cmp
pop
imul
mov
leave
xchg
xchg
lds
push
imul
imul
xchg
in
xchg
sti
outsl
outsl
xor
stc
arpl
sub
xchg
popf
sti
mov
adc
xchg
jmp
push
mov
and
stos
inc
xchg
loopne
push
punpckhbw
unpckhps
pop
hlt
push
pop
lret
mov
add
pop
mov
mov
dec
in
call
not
bound
mov
ret
sub
test
pop
out
mov
cmp
cmpb
ds
imul
dec
jne
fsub
dec
and
ljmp
lret
xor
enter
fs
xchg
mov
xchg
xchg
wrmsr
xchg
mov
dec
insb
cwtl
push
inc
jnp,pt
inc
jb
xor
adc
inc
xchg
ret
movsb
add
mov
sub
aaa
jle
cmpsl
mov
orb
jb
scas
iret
jmp
push
out
mov
pop
xlat
bound
inc
or
int3
jp
aam
cs
jl
sbb
mov
stos
cmp
adcl
and
imul
lea
mov
dec
movsb
movsb
push
push
in
push
inc
lret
inc
movl
std
cmp
repnz
jae
bound
stos
jecxz
ljmp
mov
fldenv
push
sub
pusha
bound
mov
pop
add
data16
pop
stos
xor
adc
mov
xchg
cs
orl
decb
jns
push
sbb
jnp
dec
mov
adcl
into
jae
jbe
sbb
adc
jne
jmp
dec
enter
xor
fcoms
popf
push
inc
mov
mov
push
xchg
mov
jle
out
mov
adc
pop
cmp
out
sbb
nop
push
mov
xchg
jle
xor
push
and
push
fisubl
mov
mov
jno
mov
xchg
enter
dec
pop
mov
cmp
into
push
pop
and
dec
mov
xabort
mov
insl
loope
repz
mov
in
ss
jae
pusha
nop
bound
push
xchg
rcrl
push
pop
xchg
sub
mov
mov
fsubrs
xchg
fisubrs
ret
lcall
sbb
dec
lret
jp
cmp
leave
stc
lret
xor
fsts
stos
pushf
lcall
jae
xchg
adc
rorb
xchg
test
fcmovbe
dec
jl
mov
rcr
mov
in
jg
repz
cmp
mov
push
mov
add
sub
xor
mov
adc
jo
out
rorl
ret
orl
sub
out
add
jle
xlat
outsb
int3
inc
pop
push
aas
push
outsb
xchg
inc
jbe
fs
fnstcw
mov
stos
out
dec
mov
adc
mov
sahf
int3
cltd
fiadds
ja
lahf
lret
sbb
mov
out
xchg
fidivrl
dec
jbe
pop
out
xchg
nop
push
jp
mov
testl
pop
xor
mov
lahf
nop
and
mov
popaw
lds
pop
mov
jmp
movsl
mov
cwtl
push
jbe
das
or
aaa
jmp
sub
je
mov
cmp
ds
cbtw
fsts
decl
jp
das
jbe
ret
sbb
mov
cmp
fcoml
jbe
sbb
add
inc
dec
xchg
dec
loop
inc
xor
and
or
add
or
mov
imul
push
add
and
push
hlt
mov
push
movsl
call
xorl
pushf
orb
dec
xchg
aam
dec
pop
mov
fdiv
jle
je
into
xor
push
cmp
cmpb
rcll
mov
mov
xchg
push
test
mov
mov
cmp
mov
jl
cmp
jp
pop
mov
add
pop
std
icebp
insl
pushf
stos
jl
jbe
mov
je
pusha
js
decb
or
lret
jb
jne
lods
mov
leave
sti
pop
push
mov
jle
ljmp
pushf
cmp
aam
jg
ret
pop
les
pop
loop
mov
pop
dec
out
push
lret
test
lret
out
sbb
mov
movsl
sub
addr16
mov
add
xchg
out
sub
cmp
lret
imul
push
cmp
push
lret
push
mov
sti
bound
push
sbb
cld
xlat
and
xchg
push
repz
mov
add
adc
fldl
mulb
mov
dec
adc
jbe
cmp
sub
or
test
push
add
cmp
cwtd
jmp
inc
cwtl
jl
push
add
mov
jb
dec
insl
imul
pop
daa
mov
xchg
xchg
incl
cmc
popf
and
mov
push
mov
push
in
aas
xchg
push
insb
aaa
mov
push
mov
jp
inc
loop
fwait
cmpsb
mov
xchg
hlt
pop
daa
xor
cmc
outsb
divb
notl
push
sub
andb
or
pop
jns
leave
cmp
clc
push
cmp
mov
rorl
rorb
cmpsl
inc
lret
mov
or
cmp
arpl
cmp
push
insb
cmp
cmp
and
fwait
sti
push
es
push
fisttpl
xchg
pushf
cmp
jbe
mov
nop
cmpsb
cmp
loopne
add
jo
dec
rorl
add
xor
or
push
iret
mov
xlat
stos
popa
out
cmp
inc
pop
insb
and
adc
push
adc
inc
mov
fwait
mov
cmp
fimull
xor
fs
mov
idivb
add
or
daa
add
ljmp
daa
fidivrl
nop
pop
sub
and
nop
inc
push
jecxz
jnp
inc
into
es
std
mov
ja
out
mov
ret
push
sub
mov
mov
call
test
pop
mov
icebp
subl
cli
out
mov
or
jb
push
xchg
add
xchg
cmp
loop
jae
mov
or
push
popf
pop
xchg
pushf
into
mov
lods
push
inc
add
sub
insl
lahf
and
push
dec
push
or
sbbl
inc
out
pop
xor
es
pop
fsubl
sub
push
mov
adc
add
ret
ss
leave
pop
divb
je
push
outsb
bound
pop
mov
addr16
push
xchg
mov
jmp
push
add
mov
aam
std
data16
dec
adc
adc
ds
mov
pushf
ds
mov
and
pop
clc
dec
push
pop
and
dec
es
inc
mov
pop
jge
jnp
icebp
sbb
xor
dec
les
jp
dec
jle
into
xor
jl
cmpsl
push
xor
xchg
push
xchg
sbb
xchg
or
xchg
push
mov
dec
push
push
lcall
sub
and
dec
pop
mov
or
add
dec
xor
cmpsl
scas
js
aam
sub
inc
outsb
mov
or
sbbb
dec
adc
dec
or
movsb
jnp
or
mov
out
inc
ss
push
aad
mov
push
xchg
cs
xchg
pop
jg
mov
std
cs
fidivl
push
rcrb
jae
dec
jo
in
mov
ret
jo
and
mov
sbb
inc
inc
xchg
cmpsb
mov
mov
xlat
push
or
jecxz
dec
mov
faddl
insl
push
dec
icebp
loopne
sub
pop
push
mov
push
push
mov
mov
xchg
aas
ljmp
ljmp
and
test
inc
fdivl
out
imul
push
xlat
pop
xor
repnz
setp
pop
mov
push
outsb
rep
cld
xor
js
inc
sbb
data16
cmc
sub
mov
shl
pop
movsb
mov
lods
cld
cli
xor
mov
sbb
pop
loopne
into
mov
jl
sub
int3
inc
in
pop
jbe
pop
inc
je
sti
call
jge
xchg
cmp
xchg
jo
pop
push
fistl
push
cmp
dec
fcomi
je
cmp
xor
std
xchg
push
jl
ss
sbb
dec
pop
je
cmp
jp
mov
push
lret
or
jnp
addb
cmp
xchg
jmp
mov
mov
push
faddp
test
fdivrs
sub
jae
shl
jg
or
shr
shl
inc
mov
pop
pop
jle
sti
imul
sbb
push
xchg
or
lods
xchg
faddl
xor
int
cs
mov
jg
jnp
out
push
mov
inc
loope
nop
push
push
popf
sbb
and
adc
sub
dec
jle
popf
lret
call
es
pop
testl
lock
in
subl
loop
int3
cmp
decb
aaa
dec
sbb
mov
notb
mov
out
and
mov
xor
gs
push
jb
es
mov
xor
rcrl
lcall
mov
lods
cli
add
push
push
insb
mov
fdivs
and
mov
fidivrl
lcall
cmpsb
mov
lock
scas
lds
cmpsb
fadd
mov
push
cmc
cmp
mov
sti
mov
and
scas
mov
mov
mov
fnstsw
mov
scas
xchg
or
dec
jnp
dec
repnz
ss
pop
call
js
add
iret
jle
and
push
xorl
and
scas
sub
lea
mov
adc
lahf
std
and
rorb
xor
ds
mov
mov
sub
inc
or
jns
cld
sarb
and
movsl
and
notb
pushf
bound
aaa
stc
aaa
mov
mov
and
lcall
jp
mov
aas
outsb
inc
andl
rcrb
jbe
push
and
push
fstpt
orb
ss
js
lcall
data16
cld
cmp
dec
mov
dec
pop
aaa
xor
add
dec
cs
pushf
push
mov
dec
xchg
xor
dec
sub
push
pop
push
and
dec
push
mov
stos
xchg
cmpsl
jge
int
mov
loopne
xchg
add
mov
push
inc
hlt
cwtl
std
insl
push
lret
sub
cmpsb
push
mov
jle
and
push
cwtl
insb
mov
js
adc
movsb
js
sbb
xchg
pop
fmuls
ficompl
jo
hlt
add
mov
rcll
pop
sbb
pop
mov
push
jmp
lods
clc
and
movsl
and
sbb
cmp
xchg
or
xor
xchg
je
ja
xlat
xchg
inc
sti
adc
adc
sbb
xchg
outsl
es
dec
xchg
scas
jne
push
cmp
lcall
cmp
fsubl
lret
aam
pop
sub
pop
pushf
inc
push
jnp
lahf
mov
xchg
adc
outsl
in
jns
pop
and
iret
je
push
dec
jmp
loope
int3
bound
cmp
pop
test
mov
dec
xchg
sbb
jno
adc
xchg
push
mov
inc
sub
and
push
adc
pop
ja
mov
shl
jecxz
pop
inc
push
lcall
sub
jbe
sub
movsb
xlat
pop
mov
and
mov
outsb
test
jle
or
cmp
xchg
or
rcll
aaa
mov
rorl
movsb
cmpsl
mov
xchg
jle
call
or
mov
sbb
scas
mov
dec
sbb
xchg
out
push
mov
xchg
add
outsb
dec
cmpsb
jl
pop
mov
inc
jmp
sub
push
ret
or
enter
push
out
mov
lock
fnstenv
xlat
mov
repz
push
mov
adc
sbb
xchg
jp
hlt
mov
pop
jbe
pop
pushf
std
jns
mov
mov
or
je
jg
push
iret
push
push
insl
or
cmp
dec
shll
test
xlat
push
rol
sti
ljmp
dec
test
pop
push
lahf
insl
push
mov
inc
xchg
push
jp
mov
mov
mov
ret
inc
insb
xorb
mov
push
jge
jl
pop
ficomps
xlat
pop
out
out
push
adc
cmp
test
repnz
adc
mov
mov
jp
js
mov
out
bound
ja
pushf
adc
out
jle
mull
daa
test
mov
mov
sub
sahf
ljmp
sbb
test
xchg
repz
outsb
pop
mov
out
out
dec
mov
out
jb
lret
fimull
push
mov
mov
push
movb
repz
std
fistl
mov
jle
rcll
loopne
out
jecxz
push
pop
hlt
xchg
adc
scas
lea
ljmp
mov
jg
pop
jl,pn
jecxz
push
push
cmp
adc
scas
lea
adc
fistl
mov
sbb
pop
mov
fildl
xchg
adc
scas
lea
mov
push
xchg
jg
pop
aam
out
pop
push
push
mov
lea
clc
jl
fistl
mov
jle
pop
sti
mov
push
dec
ret
fistl
mov
addr16
jg
pop
dec
jl
jecxz
push
sbb
push
lcall
inc
mov
data16
jg
pop
xor
jb
pop
and
add
pop
daa
adc
dec
or
daa
sarl
les
daa
push
xchg
mov
pop
out
pop
push
push
jle
sarl
negb
daa
push
xchg
stos
into
jle
and
adc
pop
daa
adc
dec
fmuls
inc
sbb
xchg
mov
pop
out
pop
push
push
jle
sarl
or
daa
push
xchg
lods
into
jle
and
lock
daa
adc
dec
repnz
daa
sarl
cmp
daa
push
xchg
mov
pop
out
pop
push
push
jle
sarl
push
pop
data16
push
xchg
scas
into
jle
and
push
loope
daa
adc
dec
sbb
inc
sbb
pop
addr16
push
xchg
mov
pop
out
pop
push
push
jle
sarl
cmp
daa
push
xchg
mov
jle
and
fsub
pop
daa
adc
dec
into
daa
sarl
add
daa
push
xchg
mov
pop
out
pop
push
push
jle
sarl
fidivrs
mov
mov
lret
or
dec
mov
inc
jecxz
push
cld
cld
add
jbe
cmp
inc
adc
jbe
jl
adcb
jle
mov
jle
std
sbb
xchg
sbb
inc
xchg
pop
jle
jge
rorl
in
push
icebp
push
or
push
xor
dec
push
push
push
insl
push
jno
lea
xchg
push
lods
push
mov
int3
push
rorb
in
push
lock
or
adc
sub
xor
dec
push
push
push
insb
push
jo
mov
nop
cmp
sbb
sbb
inc
sbb
sbb
sbb
rcr
fiaddl
fcompl
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
fbld
out
mov
daa
and
push
addr16
int3
pop
movb
pop
inc
mov
cmpsb
movsb
xlat
out
pop
daa
mov
fdivl
fsubr
fdiv
fmull
add
mov
add
mov
sarb
outsb
mov
nop
mov
pop
add
bound
push
or
jne
push
and
repz
rclb
fs
out
xchg
jno
ja
xor
and
sbb
push
mov
mov
mov
sarb
lahf
les
xchg
jecxz
jg
cmp
pop
cld
mov
mov
imulb
inc
and
pop
mov
jp
in
ja
pop
filds
hlt
int3
add
jne
hlt
test
pushf
notb
lcall
mov
inc
jp
xor
fisubrl
sti
xorb
jbe
jge
je
xchg
pop
cwtl
inc
mov
push
iret
push
lret
push
mov
call
inc
in
js
cmp
xor
jb
add
jne
ds
jne
xor
xor
into
call
ljmp
imul
es
xchg
jo
stos
or
int3
xor
jl
bound
dec
or
jp
mov
sub
sub
jmp
pop
outsl
inc
lcall
notl
jnp
and
bound
out
mov
push
sbb
addr16
jge
push
push
mov
leave
mov
fwait
lahf
push
xchg
jno
inc
fimull
push
inc
or
mov
pop
in
inc
jge
pop
xchg
in
pop
mov
mov
xlat
loopne
lods
jo
and
inc
jge
mov
out
and
inc
jge
mov
loopne
lods
jo
and
inc
jge
lea
mov
xlat
loopne
lods
jo
and
inc
jge
mov
loopne
adc
sti
inc
jl
mov
loopne
lods
jo
and
inc
jge
mov
loopne
lods
jo
jge
mov
pop
loopne
lods
jo
and
inc
jge
mov
loopne
lods
jo
and
push
scas
in
mov
mov
xlat
loopne
lods
jo
and
inc
jge
lea
mov
xlat
loopne
lods
jo
and
inc
jge
mov
ja
rcrl
xchg
fwait
cld
sbb
cs
int3
jle
cmc
adc
xor
push
loopne
int3
jno
cmp
in
call
push
aaa
mov
lea
fdivrs
fistl
sbb
out
jno
outsl
jno
cmpl
sub
add
mov
push
jmp
sarb
cmp
xlat
fistl
cmp
daa
push
aaa
popf
adc
jp
xchg
in
pop
xchg
sub
push
mov
lret
sarl
hlt
pop
push
daa
push
ss
stc
pop
push
mov
jg
pop
add
adc
mov
xlat
pop
ss
pop
dec
cld
mov
cmpl
sub
push
ja
lods
xchg
sarl
stos
pop
daa
push
negb
mov
pop
push
sub
push
jbe
repnz
fsubs
pop
mov
rclb
mov
jno
outsl
pusha
pop
push
jbe
jp
xchg
ficompl
sub
push
ja
ljmp
sbb
pop
daa
push
negb
mov
pop
push
sub
push
jbe
add
daa
pop
mov
stos
cmp
xlat
pop
sarb
pop
pop
dec
mov
pop
jecxz
push
aaa
fcoml
ja
adc
xchg
fistl
mov
push
mov
jg
pop
push
sub
movsl
lea
lcall
jbe
or
cmp
lods
shlb
scas
xlat
xchg
jle
dec
ret
sub
or
pop
jno
push
scas
lea
stc
xchg
sarl
mov
negb
mov
pop
push
sub
push
jbe
out
popa
fsubs
pop
mov
scas
pop
adc
pop
cmovle
push
pop
mov
jg
pop
xor
pop
push
ja
xchg
adc
xor
fistl
mov
push
push
mov
jno
outsl
jno
cmpl
jbe
cmp
mov
pop
mov
jle
cmovle
pop
mov
jg
pop
xor
push
jecxz
push
ja
xchg
adc
rolb
push
add
pop
and
pop
pusha
mov
pushf
fwait
mov
fstpl
pop
sbb
inc
pop
pop
fwait
popa
mov
pop
popf
jmp
sbb
mov
jno
lea
mov
mov
mov
mov
mov
adc
mov
insb
mov
mov
pop
int
shr
dec
icebp
aam
fbld
pushf
pop
mov
pop
fstl
loope
std
pop
add
sbb
pop
inc
pop
pop
pop
popa
pop
jge
adcl
mov
pop
loopne
cld
pop
add
sbb
and
mov
inc
xchg
sub
testb
add
add
jbe
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
adcb
test
mov
mov
xchg
filds
xchg
fidivrs
jle
xor
inc
dec
xlat
adc
and
sbb
inc
mov
scas
mov
dec
in
adc
sahf
add
mov
icebp
bound
jno
iret
mov
push
push
push
lea
push
in
insb
xor
cltd
stos
inc
and
stos
pop
stos
scas
cs
jecxz
dec
mov
dec
add
je
arpl
clc
jge
cmp
xchg
or
jbe
aad
pop
adcl
insb
inc
popf
mov
sub
dec
or
aam
mov
mov
mov
std
bound
dec
or
pop
jbe
adc
xchg
sarl
or
loopne,pt
aaa
dec
je
loopne
fucomip
xchg
test
or
ret
jge
mov
std
cli
push
mov
xor
sub
mov
inc
pop
loopne
ljmp
push
jnp
jns
push
ja
stos
nop
mov
orb
inc
and
jl
pop
lcall
inc
dec
mov
dec
and
fisttps
xor
fwait
lret
jg
mov
pop
sbb
aaa
and
jle
outsl
mov
scas
cmc
jp
rorb
inc
in
push
in
push
pusha
xchg
pop
inc
mov
lea
push
daa
xchg
out
and
loope
mov
jl
fiadds
inc
mov
push
mov
dec
pop
lcall
pop
mov
lea
jp
push
push
push
jbe
xchg
out
clc
ret
scas
mov
loopne
lods
jo
and
inc
jge
mov
loopne
lods
jo
and
cmpsb
mov
pop
lods
jo
and
inc
jge
mov
loopne
lods
jo
and
inc
jge
test
jo
and
inc
jge
mov
loopne
lods
jo
and
inc
jge
mov
push
stos
sub
inc
jge
mov
loopne
lods
jo
and
inc
jge
mov
loopne
lods
jp
inc
jge
mov
loopne
lods
jo
and
inc
jge
mov
loopne
lods
jo
and
scas
mov
pop
lods
jo
and
inc
jge
mov
loopne
lods
jo
and
inc
jge
mov
jo
and
inc
jge
mov
loopne
mov
cmpsl
scas
mov
repz
insb
lock
dec
cmpsl
mov
jle
and
insb
movsb
and
push
jbe
jl
loope
das
mov
stos
enter
mov
cmpsl
and
jle
mov
jne
dec
js
cmp
in
jg
popa
stos
adc
data16
xchg
arpl
inc
xchg
dec
in
lcall
outsl
push
cld
mov
jbe
push
add
jns
testb
int3
and
aam
pop
and
mov
cmp
in
pop
imul
mov
ja
ss
mov
push
and
sarb
test
popf
repz
pop
and
xor
out
mov
push
cmp
pop
xor
jge,pn
pop
popa
imulb
pop
jb
xchg
inc
sti
loope
ja
push
pop
push
lods
pop
stos
dec
sarb
mov
push
ret
sub
xorb
cmp
push
fs
aam
ds
dec
mov
outsb
cltd
gs
rcrl
pop
push
xchg
jb
xchg
add
pop
dec
insl
jno
movsl
mov
mov
push
rcll
mov
loop
orb
aad
ret
sub
lods
pop
push
mov
sub
mov
mov
pop
xchg
push
scas
ficoms
movsl
xchg
cmp
jmp
scas
loope
rcrl
adc
imul
jle
xchg
cmc
xchg
xchg
imul
jle
push
cs
insb
inc
scas
nop
dec
push
out
out
cmpsb
sbb
cmc
out
ss
andb
mov
out
push
out
push
xchg
popf
sarl
repnz
out
pop
xor
lret
xchg
ja
push
pop
lahf
andb
mov
push
mov
mov
push
dec
dec
mov
lds
mov
jnp
push
sbb
testl
push
sub
pop
or
pop
xchg
loope
dec
bnd
mov
insl
mov
jge
lea
xchg
outsb
jmp
ljmp
xchg
jbe
fcoml
xchg
les
xchg
or
jb
xchg
stos
insb
faddp
push
xor
in
pop
orl
push
nop
mov
pop
inc
mov
int3
sub
push
pop
xor
adc
leave
or
xor
std
sub
imul
in
jbe
pop
fs
bound
or
or
ss
push
xor
adc
ret
push
nop
shrl
les
inc
push
sbb
orw
mov
sbbb
or
imul
sub
into
cmp
and
lcall
cmc
jb
and
and
push
mov
mov
push
sbb
mov
pop
and
sbb
jg
push
inc
cmc
or
sbb
sbb
cltd
addr16
mov
or
xchg
test
imulb
jnp
cld
mov
pop
and
xchg
loop
xlat
pop
scas
popf
negb
cld
push
mov
div
pop
push
insb
lock
pop
xchg
mov
stos
loopne
and
adc
outsb
xchg
xchg
dec
in
push
inc
cmp
cmp
outsl
lock
push
dec
pop
xchg
ret
jl
stos
push
dec
ljmp
cmp
js
loop
lods
push
shlb
insb
push
pop
xchg
push
js
inc
pop
movb
or
mov
pop
and
mov
out
xlat
out
push
mov
mov
mov
lahf
je
dec
outsb
jne
ss
fbld
xorps
mov
xorb
push
out
ret
xchg
pop
mov
aas
push
bound
test
mov
add
mov
mov
sbb
int
mov
mov
push
and
popf
mov
mov
jle
test
push
push
xlat
cltd
pop
lds
fcomps
xchg
jle
pushf
das
jo
pushf
mov
mov
and
mov
sbbb
pushf
mov
fcomps
mov
cmpsl
xchg
xchg
dec
je
les
das
dec
jl
mov
mov
pop
xchg
pop
pop
fsts
add
or
dec
jp
xlat
lea
push
mov
das
repnz
adc
aam
es
mov
adc
cmp
fcomps
daa
fildl
jo
mov
cld
push
and
sub
mov
cwtl
pop
add
sbb
sub
mov
push
mov
fwait
push
xchg
and
arpl
incb
and
sti
cmp
js
mov
popf
mov
xorl
movq
xorl
adc
mov
aam
push
jge
dec
scas
xchg
push
in
mov
les
jo
adc
inc
mov
mov
lahf
xlat
sti
mov
test
test
jbe
mov
push
xchg
mov
xor
repnz
push
mov
mov
adc
xchg
mov
mov
jb
mov
dec
out
and
std
jo
xlat
cmp
data16
lea
mov
xchg
ss
cwtl
cmp
adc
outsl
les
xchg
popl
xchg
inc
mov
in
gs
inc
repz
gs
xchg
dec
dec
nop
incl
fnstcw
mov
nop
fstl
pop
imul
adc
dec
jle
nop
inc
cli
nop
mov
pop
imul
sbb
nop
xor
fcomi
jne
jle
xchg
fimuls
mov
pop
pop
add
inc
inc
rorb
add
xor
or
insb
in
lcall
mov
mov
pop
xlat
push
inc
pop
xor
mov
or
pop
in
js
arpl
xchg
std
mov
js
mov
cmp
push
mov
addr16
rclb
scas
lods
mov
pop
xchg
push
popa
mov
mov
repnz
flds
adc
sbb
pop
sbb
mov
lcall
cmp
pusha
pop
pop
jle
std
pop
cli
pop
pop
aam
jg
dec
pop
xchg
sbb
xlat
and
push
jle
fabs
out
inc
xor
and
pusha
mov
push
mov
pop
push
xchg
dec
inc
mov
cld
or
mov
andnps
dec
fsubs
bound
cwtl
dec
sbb
push
sbb
xchg
mov
push
js
xor
les
jle
std
ljmp
xchg
dec
jle
xchg
sbb
dec
jl
xchg
sbb
sub
mov
jle
mov
addr16
cs
lods
pop
loopne
xlat
or
dec
out
cmpb
pop
push
jne
xchg
pop
pop
inc
jle
mov
dec
pop
shll
xchg
out
or
clc
push
fmull
jo
inc
rcll
out
jp
dec
and
lcall
mov
or
cld
addb
mov
jno
and
out
mov
pushf
mov
movsb
insl
int
mov
test
push
jo
sbb
xor
xchg
push
fsubrl
mov
ljmp
sbbl
inc
xor
out
test
cmpsl
cmp
scas
adc
xchg
xlat
xchg
mov
xor
loop
push
lcall
pop
rcrb
pushf
inc
sub
dec
push
sub
push
push
and
and
insb
push
cs
xchg
mov
loopne
cmpb
das
shr
push
push
sbb
pushf
jne
jge
dec
inc
testb
jle
jnp
cltd
push
and
adc
dec
jb
jge
out
leave
mov
lcall
xor
mov
xchg
xor
mov
push
popa
out
sti
gs
pop
or
aad
call
xchg
insb
dec
mov
dec
sti
mov
inc
mov
mov
int
jmp
dec
cwtl
mov
mov
add
mov
xchg
jle
sub
or
rclb
dec
lds
ja
test
pop
popf
jbe
sub
jne
cli
push
fdiv
enter
call
mov
inc
divb
jnp
push
mov
xor
pop
inc
jle
dec
push
bound
add
xchg
enter
jmp
xor
scas
push
xchg
test
jmp
imul
or
test
shl
dec
or
mov
sbb
mov
out
jno
push
and
inc
out
out
sub
or
in
out
xor
adcl
out
mov
xchg
mov
stc
push
sub
push
pop
cld
jle
lret
std
push
xchg
std
insb
aaa
sub
add
daa
cmp
mov
sbb
push
mov
adc
int
xchg
cmp
or
jle
orl
pop
push
mov
mov
adc
lock
movsl
dec
and
vpacksswb
lar
jns
xchg
and
inc
lea
cwtl
xchg
mov
bswap
mov
jbe
je
out
scas
pop
mov
insb
scas
lock
fnstenv
and
add
sbb
ror
pop
push
in
enter
sub
lock
cs
in
jb
test
enter
sti
cmp
dec
mov
dec
lcall
enter
daa
nop
bound
test
lods
xchg
add
inc
enter
enter
enter
dec
jae
sbb
mov
testl
pop
push
push
into
xlat
pop
popf
pop
sbb
gs
jg
idivb
leave
dec
pop
movsb
stos
dec
in
cs
push
cli
mov
scas
decb
cmc
aad
pop
aas
mov
cmp
shrb
sbb
or
or
imul
mov
or
rcrb
push
andl
dec
sub
pop
xchg
aaa
data16
jo
xor
lea
jg
jge
jp
int3
mov
imul
jbe
setb
push
push
xchg
jle
cmp
xor
mov
imul
nop
sub
les
rcll
push
xchg
insb
mov
sbb
add
stc
add
lcall
out
xchg
xchg
xchg
shr
push
push
cmp
sarl
xchg
jle
mov
mov
sar
sbb
sub
and
sbb
outsl
pop
cmp
lcall
out
out
cwtl
dec
icebp
mov
cwtl
xor
sbb
adc
pop
jge
insb
mov
mov
aad
clc
xchg
mov
xor
data16
loopne
je
xchg
movl
mov
pop
int3
xchg
dec
dec
lea
shl
inc
sbbb
pushaw
testb
or
cmp
push
xchg
xor
setbe
mov
pop
imul
into
dec
jg
lea
fiaddl
mov
test
bound
xor
stos
adc
dec
fldl
clc
mov
andl
xor
inc
sbb
push
or
cmp
in
mov
xchg
in
push
jp
scas
xchg
testl
fists
mov
jle
xor
jbe
test
pop
out
inc
scas
push
dec
mov
fildl
jle
push
pop
gs
dec
pop
mov
nop
push
pop
add
and
cmpb
in
jb
jnp
addr16
or
nop
lock
mov
outsb
push
nop
movsb
addr16
mov
inc
push
xchg
lea
int3
std
jle
aam
xchg
in
xchg
pop
push
movsb
lcall
jnp
loope
repnz
pop
cwtl
repz
xchg
mov
pop
add
rcl
xchg
or
mov
inc
in
je
adc
adc
pop
add
cmp
pop
insl
jbe
inc
and
pop
jae
roll
xchg
leave
add
pop
or
push
mov
or
cmpsl
mov
jnp
call
xlat
sub
xchg
push
xchg
out
adc
lds
cmp
inc
das
lret
dec
mov
sbb
cmp
fidivl
mov
push
aaa
push
jno
mov
data16
stos
dec
cmpsl
sbb
xchg
xchg
cmp
sbb
sahf
and
js
pop
add
mov
xchg
jle
and
sub
mov
push
mov
mov
sub
and
dec
ja
imul
icebp
adc
xchg
xchg
out
xchg
leave
sbb
xor
in
push
mov
sbbl
enter
add
in
in
cmp
scas
sbb
add
adc
jmp
loopne
into
inc
scas
push
mov
inc
hlt
pop
xchg
bound
adcb
stos
push
inc
dec
gs
js
adc
loop
add
and
pop
sbb
je
pushf
adc
popf
aaa
xchg
ljmp
add
cmc
xchg
xchg
mov
push
add
push
incb
cmc
ror
add
cmp
jmp
pushw
sub
jnp
adc
insl
xor
jl
pop
cli
data16
sub
mov
shll
jp,pt
subb
iret
push
test
cmpsb
jle
push
ror
dec
data16
push
stos
pushf
dec
mov
add
divb
testb
xor
inc
cmp
stos
mov
xchg
cmp
mov
push
popf
mov
mov
in
out
mov
jl
inc
js
or
or
jp
mov
pandn
inc
mov
mov
mov
xchg
sbb
xor
push
mov
sbb
push
ja
xor
dec
movsl
sub
pop
ret
fsubrs
cmp
mov
rorl
scas
mov
adc
sub
push
pushf
mov
mov
rorl
int
jl
xlat
mov
test
cwtl
bound
bound
lcall
xor
movd
mov
adc
frstor
out
dec
jbe
in
push
jb
dec
fwait
fs
and
imul
inc
push
icebp
outsb
and
cld
nop
imul
lea
pop
pcmpgtb
lcall
or
test
lods
pushf
insb
jecxz
sbb
mov
mov
jmp
mov
dec
cmp
rcl
jbe
pop
cli
mov
mov
in
les
testl
bound
xchg
push
cwtl
push
out
mov
xchg
mov
xchg
xchg
cs
repnz
push
mov
imulb
mov
mov
mov
xor
push
push
loope
pop
pop
push
or
pop
xor
sbb
sub
rorl
mov
xlat
adcl
xchg
xchg
mov
xchg
sub
cmp
jl
xchg
push
ss
lea
fnstsw
xchg
xchg
xchg
mov
leave
push
sbb
int
rcrl
in
mov
dec
lahf
nop
insl
mov
or
and
cmp
jo
ss
inc
nop
mov
popa
jae
in
jle
push
or
pusha
test
mov
sbb
int
neg
testl
dec
xchg
sbb
xchg
rorl
fwait
pop
xor
push
mov
adc
bound
das
xlat
addr16
xchg
jno
push
js
insl
fs
pop
sbb
and
sbb
push
cmp
xchg
popl
mov
pop
xchg
bound
push
daa
or
decb
cmp
cli
mov
sub
mov
out
psubq
xor
cmp
sbbb
pusha
inc
or
jmp
sbb
push
insb
sub
push
mov
aad
add
cs
sbb
jp
pop
loop
dec
stc
mov
or
andb
cwtl
and
lds
div
adc
adc
outsb
push
jnp
xor
push
mov
in
push
jp
dec
hlt
adc
add
ljmp
xor
lock
loop
pop
or
inc
call
adc
mov
jp
mulb
cmp
xor
push
call
adc
enter
dec
loopne
pop
and
int
jge
ds
add
out
xor
sbb
inc
dec
pop
scas
adc
incl
push
lds
out
push
orb
sub
lds
mulb
ds
mov
sbbb
outsb
xchg
jb
inc
das
enter
jecxz
mov
and
jg
jne
jge
sbb
pmuludq
cltd
addr16
scas
js
dec
or
jb
ds
sbb
mov
jb
xlat
call
mov
push
xchg
ret
push
xchg
fcom
ftst
sti
sar
dec
rcrl
jle
mov
adc
arpl
sbb
jle,pt
mov
pushf
test
icebp
in
cltd
adc
inc
cli
and
mov
dec
inc
push
enter
into
jle
mov
xchg
jmp
bound
jno
mov
push
xor
sbb
or
jns
sarb
mov
pop
or
mov
cmpsb
rcrb
xchg
mov
xor
inc
inc
call
and
insb
mov
insl
mov
pop
inc
sbb
add
xchg
cmpsl
movsb
cmovae
mov
mov
adc
scas
imul
jl
jecxz
stos
gs
pop
lcall
pop
call
aaa
psubusw
dec
es
push
popa
stos
imul
gs
aas
add
icebp
sub
movsb
lret
pop
mov
out
jp
xchg
xor
cwtl
add
cmp
outsl
fisubs
jne
ja
mov
iret
cld
xchg
repnz
inc
fdivs
data16
inc
pop
add
into
add
ja
or
and
xchg
imul
orl
inc
lock
push
std
xchg
jg
xchg
jle
outsb
or
jle
xchg
scas
ljmp
inc
xchg
in
pushf
shl
fistps
xchg
mov
shrb
adc
loopne
push
xchg
cmp
mov
mov
mov
add
ss
repnz
test
and
adc
adc
inc
pop
enter
clc
dec
enter
cmp
enter
inc
nop
mov
or
scas
jp
fcmove
jl
out
test
jge
xlat
jp
push
enter
xlat
xchg
dec
mov
xchg
inc
mov
sub
mov
imul
xchg
mov
cmp
mov
xor
mov
cmp
sbb
cwtl
xchg
js
cmp
out
leave
mov
shrl
frstor
fucom
cmp
xchg
clc
mov
fwait
mov
fistpll
mov
pusha
push
pop
and
jno
jbe
outsb
xor
xchg
scas
idiv
jmp
shll
mov
jge
popl
sub
outsb
iret
lret
push
es
sarb
imul
push
enter
ss
movhps
dec
xchg
adc
daa
push
xchg
cli
lcall
push
xchg
mov
nop
xorb
add
mov
in
push
seta
push
cmp
or
aas
fsubrs
lods
rolb
or
pushf
inc
sub
scas
adc
push
mov
adc
enter
pop
scas
stc
mov
mov
inc
pop
push
pop
sbb
rorl
pop
in
ds
jl
data16
pop
cmp
test
cmc
testl
test
mov
je
inc
ljmp
loope
pushf
js
test
loope
popf
pop
xchg
add
pop
shll
sbbb
fisubrl
mov
pop
daa
and
mov
or
jne
mov
je
add
adc
fisttps
inc
loope
aaa
pop
pop
pop
scas
adc
fucomi
pop
mov
sub
call
lcall
push
addr16
push
loop
out
lret
test
xchg
or
push
ljmp
iret
ss
mov
jae
push
mov
jp
fildl
sbb
add
lcall
xorb
pop
clc
out
out
mov
out
push
ds
xor
data16
je
out
dec
jno
mov
push
mov
mov
xor
xor
push
js
mov
xor
jo
xchg
add
and
fwait
jb
cs
push
dec
out
pusha
pop
jbe
mov
hlt
testb
push
pushaw
scas
ret
js
push
sbb
loop
aad
out
push
mov
adc
push
mov
mov
iret
push
cwtl
scas
xchg
js
add
lret
ljmp
mov
inc
adc
mov
mov
and
sbb
pop
lock
sub
xchg
fidivs
adc
xchg
mov
pushf
leave
or
scas
xchg
mov
js
in
adcl
push
xchg
popf
jb
push
das
cs
add
dec
inc
scas
rorb
lcall
adc
notb
icebp
push
loopne
rcrb
mov
loope
mov
pop
jnp
jg
add
or
nop
xlat
jo
push
into
cmp
out
enter
ja
into
mov
addr16
xlat
outsl
orb
pmaxub
pop
gs
adc
std
repnz
out
movsb
fstl
jle
mov
cmpsb
leave
stos
testl
push
sti
test
push
iret
popa
loopne
mov
pop
pop
fwait
and
outsl
and
jle
ret
lock
xchg
pop
inc
ret
pop
xchg
bnd
jbe
and
popf
xchg
nop
cli
push
push
sub
pop
push
clc
es
outsb
sub
pop
jbe
jmp
ja
out
pop
xchg
jle
fnstcw
jle
movsb
cmp
into
rclb
ja
dec
pop
adc
mov
cmp
xor
sub
sbb
inc
dec
lea
dec
jne,pt
into
pop
pop
and
xor
cmp
sbb
xchg
stos
jle
cmp
insb
push
sbbl
sbb
gs
fimull
push
jle
mov
and
call
gs
lcall
push
cltd
xchg
cld
dec
or
dec
lds
mov
sbb
scas
dec
adc
cld
mov
pushf
push
mov
sbb
jb
mov
xchg
leave
icebp
pop
lahf
addr16
pop
add
dec
por
addb
cli
mov
insl
out
fists
data16
xchg
push
xchg
jb
in
andl
dec
jae
jae
push
add
mov
or
pop
outsb
data16
mov
xchg
out
fcompl
inc
jbe
stc
movsb
dec
in
fidivrs
add
jle
sbb
iret
inc
or
adc
ret
cli
pop
cmp
fcom
jae
mov
cmc
pop
xor
push
cmp
data16
pop
ret
clc
or
dec
pop
dec
ja
jge
xor
dec
mov
adc
sub
ljmp
sub
test
mov
mov
mov
cmpsb
das
movl
lret
mov
push
xchg
movsl
and
rclb
push
cs
or
jbe
vmread
sbbl
cmpsl
cltd
data16
pop
cmp
out
and
dec
pop
jge
mov
sbb
add
xchg
outsb
pop
push
sbb
pop
pop
xlat
push
mov
jl
and
dec
push
dec
xor
push
xchg
push
and
add
inc
aad
es
xor
sti
add
mov
insl
pop
xor
rcr
pop
bound
jle
jecxz
mov
adc
ja
and
shl
popa
icebp
jp
shrl
jb
sub
push
int
ja
mov
aam
pop
sub
lret
pop
cltd
out
insb
stos
mov
pop
pop
aaa
pushf
push
jle
call
jne
mov
pop
sbb
mov
cmp
mov
dec
jns
shll
es
or
mov
push
pop
hlt
rorl
push
pop
or
xchg
popa
xor
inc
fsubrs
push
jbe
lea
push
mov
test
sbb
ret
inc
mov
into
movsb
mov
inc
out
stc
jbe
ret
mov
out
xchg
or
inc
mov
push
in
fnstsw
jne
inc
inc
movsl
aas
fisubs
cli
jl
pop
pushf
push
xor
insb
xor
mov
jnp
xor
aam
cmp
push
push
sub
mov
fsubrs
push
movsl
cmp
dec
sar
mov
pushf
cld
cmp
or
mov
fistps
je
inc
adc
ficompl
or
dec
inc
adc
xchg
mov
fistpl
repnz
push
add
mov
dec
or
jg
mov
cmpsb
in
push
mov
mov
imul
cmp
xor
jno
push
sub
lods
loope
push
sarl
push
push
loopne
outsl
mov
xchg
xchg
add
out
pxor
cmp
mov
iret
out
jg
cli
out
add
jnp
es
outsb
sbbb
push
pop
dec
and
cmp
pop
bound
cmpsl
mov
aam
add
push
daa
cwtl
xchg
push
rorb
mov
cwtl
call
cwtl
inc
lret
and
inc
sbb
xor
jnp
dec
pop
mov
adcb
mov
xor
jg
dec
popf
mov
pushf
mov
mov
outsb
pop
mov
xchg
seto
adc
mov
ficoml
or
sbb
mov
lahf
lock
xchg
sub
shrl
cli
xchg
xor
sbbb
xchg
xlat
addb
sti
rcrl
xor
xchg
pop
insb
test
arpl
sbbb
jno
fidivrl
mov
fwait
xor
xor
loopne
rolb
test
cmp
fcmovnu
popa
xchg
xor
jb
mov
fisubs
pop
iret
stc
aad
mov
lds
daa
or
clc
jp
adc
outsb
xor
bound
daa
jecxz
jecxz
pop
jl
cli
enter
push
in
cli
push
outsb
push
push
mov
pop
pop
xchg
aam
xlat
hlt
inc
or
xor
mov
mov
sub
jge
mov
hlt
jg
mov
pop
adc
jecxz
jbe
sbb
jmp
in
rclb
push
pop
mov
mov
push
or
popf
xor
cmp
sbb
leave
in
and
in
xchg
pusha
xchg
movsl
jg
es
clc
lret
mov
loope
push
mov
pop
sbb
inc
ret
shrl
cmp
or
inc
sbb
daa
push
adc
pop
push
mov
pop
inc
addr16
sub
adc
pop
inc
mov
jmp
and
push
xchg
push
or
test
push
pop
xchg
fdivrs
pop
jbe
xchg
cmc
stos
add
push
ds
adc
fnstsw
cmp
mov
data16
pop
cmp
je
push
in
fs
fnstcw
imul
and
jp
xor
adc
xor
xchg
xlat
push
cs
cld
aam
aaa
add
orb
adc
or
push
push
add
out
nop
sub
stos
pop
mov
aaa
pop
mov
lcall
test
das
jp
js
cmp
sub
clc
je
mov
ficompl
jg
test
fimuls
pushf
leave
movsb
adc
ja
xchg
out
xchg
add
sbb
add
cli
mov
adc
mov
pop
and
outsl
xchg
inc
mov
imul
xchg
cmp
push
cmc
push
ljmp
xchg
xchg
into
jg
rol
xchg
xchg
pop
xchg
movsb
shlb
dec
dec
scas
cs
fmull
xor
fistps
dec
pop
and
insb
lock
outsl
dec
xor
xor
mov
lcall
xchg
insl
mov
dec
mov
inc
sbb
loope
les
sbb
shl
jbe
adc
sbb
mov
mov
jl
or
lods
cwtl
enter
jg
sti
mov
aam
lret
out
testl
mov
mov
mov
jb
jp
xchg
out
mov
int
sarl
ret
pop
push
jno
sbb
dec
ficoml
and
mov
enter
mov
lea
jl
hlt
push
in
jbe
adc
out
ret
mul
inc
add
inc
repz
mov
cmpl
mov
bswap
add
imull
xor
sbb
jae
fstpl
jo
pop
lret
ret
mov
mov
in
and
sub
fsub
or
inc
mov
rclb
mul
push
fs
inc
orb
mov
jae
outsl
cld
rclb
mov
sarb
sub
fistps
cmpl
jns
scas
sbbb
jmp
xorb
push
inc
in
aad
pop
cli
xchg
cli
das
in
mov
data16
xchg
xor
int3
repz
in
add
stos
mov
sbb
pusha
iret
lods
adc
rcll
test
test
sub
data16
and
js
inc
xor
and
jle
loope
cmp
out
inc
xlat
leave
mov
dec
int
xchg
push
jl
or
sbb
pop
jle
test
test
das
adc
adc
jne
in
fistps
mov
and
pop
jg
xchg
rolb
add
mov
or
jl
add
movl
jnp,pt
int3
lcall
or
insb
mov
xor
jp
fldl
jg
or
mov
pop
es
xchg
jle
roll
data16
push
xchg
xchg
cmpsb
mov
dec
sub
out
lea
lcall
inc
mov
xchg
cmpsl
sarl
out
pop
adc
pop
es
push
inc
popf
inc
mov
mov
push
push
dec
mov
adc
cmpb
lods
fcompl
xchg
cmp
xchg
sbb
rolb
push
xlat
mov
cmp
jl
fistl
jle
add
sbb
sbb
push
daa
lods
insb
sub
pop
jg
mov
mulb
cmp
and
adc
and
orb
sarl
rcrb
daa
push
xchg
dec
leave
mov
pop
jg
mov
lcall
ljmp
icebp
roll
pop
push
loopne
subb
mov
pop
scas
adc
lea
stos
xchg
or
shl
prefetch
or
fildll
shlb
xadd
ds
cmpsl
sub
push
jle
out
jl
push
jge
jecxz
cmpsl
inc
jns
and
scas
mov
addr16
lods
cmpl
mov
aaa
dec
cmp
daa
xlat
leave
mov
adc
and
addb
cmpsl
jge
inc
add
lods
insb
sub
sub
pop
cmpb
lods
cmp
xchg
cmp
mov
addr16
sbb
out
addr16
or
lcall
leave
mov
pop
daa
adc
sub
mov
pop
dec
cmpsb
mov
icebp
roll
lcall
push
loopne
subb
cmp
sbb
dec
jge
jecxz
cmpsl
push
push
fidivrs
jecxz
lcall
lcall
xchg
icebp
push
loopne
xorl
orl
mov
xlat
leave
mov
sub
fidivl
fsubl
enter
mov
cwtl
loopne
lret
xchg
xchg
xchg
shlb
push
jo
xchg
shrb
hlt
test
dec
mov
pop
mov
std
daa
sahf
nop
dec
mov
je
mov
ss
cmc
inc
repz
loopne
pop
inc
test
pop
fwait
dec
mov
mov
mov
test
pop
ds
lock
outsl
ja
add
mov
mov
repz
repnz
into
iret
and
adc
push
xor
fidivs
bound
xchg
mov
in
inc
push
mov
test
fdivl
mov
lods
fmull
jo
pop
jecxz
pop
mov
jp
test
repnz
lods
push
pop
inc
adcb
pop
popf
jne
inc
icebp
or
dec
subb
mov
shrl
in
add
imul
orb
mov
out
and
mov
dec
int3
stos
test
jbe
lea
mov
pop
cmpsb
lea
or
aaa
and
ljmp
push
dec
pop
shll
gs
xchg
mov
jle
push
cmovp
xchg
xor
adc
scas
jl
shlb
ret
mov
ficoml
jl
test
xlat
push
ds
mov
jle
or
push
notb
es
popa
hlt
imul
mov
mov
cmc
cmp
mov
mov
jae
outsb
xor
mov
enter
jo
in
fiadds
cmp
aaa
data16
xor
ret
rcll
in
ja
adc
mov
xchg
mov
jmp
dec
mov
xchg
arpl
jecxz
into
jb
cmp
xchg
and
adc
test
in
and
xor
jae
ljmp
data16
in
stos
insl
push
sbb
leave
mov
sbb
pop
std
mov
jb
insb
pop
rcrl
pop
push
movsb
adc
cmp
pop
push
mov
cltd
addr16
les
mov
inc
por
jge
or
inc
or
inc
or
mov
rdtsc
andl
movd
jbe
push
cmp
sbb
jp
mov
xor
mov
sub
sbbb
data16
ret
adc
sub
shl
pop
jecxz
sub
dec
fwait
mov
or
insb
push
pop
inc
xor
call
pop
loope
test
adc
pop
push
push
minps
outsl
data16
pop
push
fnstcw
mov
mov
popw
xchg
jge
xchg
jmp
or
enter
jmp
jle
push
jo
and
mov
fimuls
push
sub
cmp
inc
pop
or
mov
inc
push
leave
xlat
lahf
sbb
xchg
sbb
pop
cmp
jle
rcrb
sub
or
cmp
sub
cs
imul
fistl
pop
data16
pop
adc
movsb
mov
cld
imul
mov
movsl
loope
cld
insl
push
sub
jecxz
es
inc
push
repz
push
loopne
mov
jecxz
fwait
and
adc
mov
lods
inc
int
xor
mov
lock
jnp
lcall
in
adc
jns
ss
imul
jo
arpl
xor
or
mov
mov
push
mov
cltd
sbb
xchg
mov
decl
idiv
add
mov
hlt
mov
push
sti
sbb
xchg
mov
data16
adc
in
push
cmp
jae
sbb
mov
lret
lcall
cmp
push
daa
pop
push
and
jle
mov
movsb
jmp
xchg
xchg
mov
cli
inc
cmp
add
xchg
adcl
add
movsb
jmp
cmp
mov
mov
insb
pop
sti
xchg
shll
xchg
sbb
ljmp
xchg
pop
aam
mov
repz
mov
jo
jmp
mov
adcl
xlat
pop
icebp
push
mov
movsb
add
push
xor
testl
mov
inc
xchg
lcall
adc
arpl
out
adc
lods
push
dec
xlat
sbbl
out
pop
jb
mov
je
jg
lods
sbbl
mov
cmpsb
iret
sbb
xor
push
xchg
cld
enter
lds
pop
icebp
jp
dec
sbb
pop
pop
mov
test
lcall
cmp
ficoml
and
and
push
rol
lret
add
sub
mov
pop
cmp
jle
fcmovnbe
data16
rcll
inc
addr16
xchg
test
clc
pop
dec
ss
pop
lods
mov
lahf
bound
xchg
sub
mov
cmpsl
arpl
sbb
adc
lret
xlat
cs
xchg
clc
aaa
imul
shll
inc
loop
jb
mov
lea
lea
pushf
dec
shll
mov
test
mov
test
sub
cmp
mov
mov
jo
pop
sub
xchg
test
mov
data16
inc
and
js
mov
int
pop
sbb
xchg
jl
aas
mov
xchg
ljmp
sbb
lods
push
test
mov
je
mov
shll
popfw
or
mov
test
out
movsl
pop
std
lret
pop
dec
pop
fs
sbbb
mov
dec
xchg
addb
mov
mov
fisttpl
jl
push
push
test
jns
cltd
push
sbb
pusha
loope
test
sub
push
pop
in
mov
mov
mov
in
nop
inc
xchg
das
subl
sub
pop
mov
lods
mov
jle
xchg
xchg
sbb
mov
xchg
pop
pop
fwait
xchg
jle
test
sub
push
daa
popf
pusha
jle
dec
mov
mov
adc
sub
sbb
mov
mov
stc
jle
or
lret
int
lea
cmp
mov
mov
jo
jne
sub
adc
shrl
push
xchg
mov
mov
pop
ds
ret
pop
xor
dec
adc
mov
cmp
inc
pop
and
xchg
push
in
mov
jle
sbb
cmova
pop
sub
inc
mov
mov
gs
dec
stos
aam
fwait
pusha
jp
xchg
pop
xor
fs
shl
jg
int
movsl
xor
scas
adcb
les
addr16
pop
add
loop
pop
std
loopne
sbb
imul
push
xchg
xchg
ss
loope
pop
repz
loop
mov
xchg
push
mov
fidivl
rolb
pop
stos
mov
icebp
mov
push
lcall
test
inc
jl
fisubrs
xor
cwtl
cli
repz
aaa
cmp
faddp
lcall
scas
fildl
pop
test
jb
aas
add
gs
or
mov
call
pushf
push
enter
xchg
lcall
xchg
jbe
mov
fnsave
aam
jle
ds
into
push
jbe
xchg
ss
jle
icebp
test
les
call
loop
cmp
add
bound
cli
cmp
dec
mov
mov
ficomps
arpl
xor
dec
bound
cli
mov
pushf
push
mov
test
out
xor
bound
adc
push
sbb
outsb
fwait
xor
mov
addr16
pop
fcmovb
push
push
fdivrs
data16
xchg
push
mov
push
mov
jle
jg
sarb
sub
std
fs
into
mov
in
fucom
insl
mov
mov
in
and
inc
xor
adc
and
sti
sbb
xchg
aad
push
mov
popl
push
add
fldt
lcall
xchg
pop
and
xorl
test
push
mov
jo
es
loop
or
mov
rcl
jle
test
sti
mov
imul
dec
int
xchg
adc
xchg
lret
inc
lcall
hlt
mov
lods
mov
hlt
xchg
lahf
mov
and
stos
xchg
call
mov
ljmp
stos
mov
scas
push
inc
cs
jl
lcall
push
imul
ljmp
jnp
rorl
fimuls
and
bound
movsb
ret
aas
aam
push
fimull
cmc
cmp
daa
loop
ljmp
push
dec
testl
jge
jl
xchg
mov
or
push
test
cmp
sub
mov
scas
lcall
add
mov
sbbb
lret
imulb
lret
cmp
pusha
xor
push
mov
data16
push
mov
xor
adc
jbe
dec
bound
outsl
adc
push
orl
lahf
inc
dec
test
mov
loope
jmp
add
fsubrp
out
cld
dec
xchg
mov
add
xor
adc
jb
mov
ja
ss
into
cmp
pop
repz
jge
pop
xchg
pop
lret
lret
popf
jbe
mov
aad
clc
push
mov
ss
addr16
shll
mov
std
movsl
or
jbe
dec
cs
jl
or
js
inc
dec
add
jg
mov
addb
lahf
js
cli
cmc
inc
add
popf
outsb
repnz
pop
pop
sub
icebp
in
in
fcompl
xchg
ret
push
rcrb
dec
cmpsb
incb
pop
push
mov
cmp
aaa
mov
push
mov
ss
mov
leave
insb
jae
movsb
adc
or
xchg
test
movl
push
dec
lret
pop
mov
or
mov
mov
push
pop
pop
sti
mov
jp
dec
xor
repnz
fcmove
movsb
div
mov
lcall
cld
and
jl
push
pushf
mov
lcall
pop
pop
cwtl
lods
cmp
nop
mov
mov
stos
int
inc
inc
fwait
inc
mov
xchg
out
rcl
inc
lcall
push
jb
jae
int
mov
inc
jae
out
push
dec
xchg
and
xlat
dec
inc
clts
sarl
cmp
pop
dec
mov
adc
push
repnz
dec
adc
mov
pop
lcall
and
add
mov
test
xlat
push
and
cmp
lods
aam
bound
pop
pop
mov
out
mov
cmpsb
seta
ud0
sub
inc
push
xchg
negb
cs
mov
in
jae
ss
push
jle
mov
mov
lcall
sbbb
dec
pop
fbstp
cmp
insl
test
sbb
pop
sub
outsb
nop
arpl
test
dec
dec
addr16
dec
push
out
sub
adc
push
pop
das
push
xchg
js
jle
sbb
mov
adc
test
inc
adc
mov
lods
das
dec
inc
xor
cmpsb
and
js
push
jmp
lea
cmp
pop
fisttpl
into
mov
aam
push
cmp
sub
or
jo
adc
xchg
push
mov
repz
rorl
test
out
mov
mov
mov
into
xchg
adcb
push
adc
fadds
push
out
dec
mov
xchg
shll
arpl
xchg
dec
clc
mov
sbbb
push
jle
lods
sub
dec
mov
cltd
loope
mov
jle
sub
scas
xchg
test
je
or
fstpt
sub
daa
dec
jmp
cmp
jecxz
je
jmp
cmpsl
fwait
les
mov
jp
jl
dec
mov
lock
outsb
js
adc
push
lret
insl
popa
sub
inc
bound
pop
lds
fidivrl
fisubrl
mov
inc
ret
mov
idivb
jb
mov
inc
lcall
out
pushf
push
xchg
mov
push
movsl
cmp
mov
mov
int3
ds
mov
pop
xchg
mov
scas
int3
mov
cmpsb
push
scas
or
dec
mov
scas
movsb
cmp
push
and
dec
inc
mov
outsl
pop
scas
movsb
lods
outsl
mov
or
mov
xchg
mov
sbb
add
adc
cmpl
dec
ficompl
mov
movsl
and
jmp
aaa
and
nop
xlat
bnd
test
jg
xor
lcall
incb
addr16
das
jb
sub
xor
push
data16
push
jge
pop
push
push
mov
popf
push
lcall
mov
jge
cmpb
test
inc
inc
inc
nop
popf
sbbb
jmp
push
add
hlt
adc
mov
xchg
cmp
decb
jb
outsb
or
addb
loope
sti
fistps
insb
jp
cs
shlb
adc
inc
int3
jno
or
sbb
rcrl
hlt
jns
test
loopne
fdivrl
push
aas
mov
sbb
pop
xchg
sub
jp
xchg
fsubr
leave
scas
inc
lock
xor
push
cltd
dec
movsl
xchg
scas
jg
xlat
leave
lcall
popl
sub
es
scas
lds
mov
scas
stos
ja
notb
mov
and
fmull
and
pop
xchg
cmp
and
inc
andb
dec
out
push
out
mov
jbe
mov
sub
xor
cltd
out
add
je
xchg
sub
sbb
push
fisubl
add
push
mov
scas
cld
scas
nop
xlat
es
cmp
sbbb
lcall
jle
loop
push
mov
test
jnp
push
jp
cmc
fisttpll
lods
push
push
adc
es
xchg
out
and
xor
add
and
hlt
repz
aam
xchg
fwait
inc
inc
mov
jp
jbe
sbb
data16
pop
adc
test
gs
dec
pop
xchg
xchg
popa
cld
mov
pop
adc
dec
mov
data16
pop
xchg
cmpsb
adc
dec
hlt
nop
sub
pop
push
mov
cltd
adc
pop
filds
fiadds
int3
lahf
cmc
test
or
cs
pop
add
mov
call
pop
inc
push
cmc
mov
and
aaa
insl
bound
jg
fdivrs
inc
inc
mov
adc
aas
mov
dec
mov
in
mov
adc
xchg
jp
xchg
xchg
and
in
pop
push
aaa
out
jnp
jp
push
cld
jp
jo
cvtps2pi
or
mov
gs
mov
push
jmp
adc
mov
jge
fadds
pop
and
std
in
dec
xlat
out
sbb
mov
out
sbb
insl
fmul
in
or
fdivs
clc
stc
inc
fstpt
sbb
cmc
inc
xor
push
mov
inc
mov
nop
leave
sti
pop
aam
adc
add
iret
sbb
mov
jg
ja
test
lods
jbe
test
and
jmp
lahf
jne
orb
cmp
pop
sub
jge
mov
test
fidivs
movsb
jo
test
dec
push
push
push
mov
mov
sub
sti
inc
ds
lcall
pushf
in
inc
mov
in
ret
push
adc
data16
loopne
jle
cmpsb
push
jle
cltd
dec
int
xchg
ss
mov
jg
out
push
mov
dec
lods
pop
cwtl
jl
mov
lret
mov
cli
or
jl
push
inc
imul
mov
mov
ljmp
inc
inc
scas
xchg
repz
mov
scas
xchg
ljmp
mov
push
jp
cld
stos
dec
xchg
call
in
push
pop
les
mov
iret
rcrl
pushf
icebp
push
mov
or
jle
ds
jae
pop
mov
push
movsl
lret
test
icebp
std
cmc
mov
jmp
test
gs
jle
bound
xchg
orb
data16
fists
sbb
enter
test
js
or
cltd
pusha
dec
jmpw
mov
outsb
sub
or
or
call
inc
sarb
daa
lods
mov
sub
xchg
xor
mov
push
adc
pop
and
out
inc
cmp
sbb
jl
dec
sub
mov
dec
mov
clc
xor
mov
push
sub
and
cmp
or
xor
mov
push
add
xchg
mov
cli
push
imul
jns
lret
inc
je
dec
inc
imulb
jg
push
addr16
shl
inc
mov
pop
xchg
sub
xlat
enter
lds
mov
pop
ret
cld
mov
das
dec
xor
mov
test
sbb
lds
int
cmp
outsl
push
adc
mov
imul
ljmp
push
mov
dec
jns
sbb
push
js
inc
sbb
pusha
sub
pop
fistl
mov
jmp
pop
lcall
ret
scas
sub
mov
inc
and
mov
ds
rcrl
xor
push
and
dec
pop
push
cmp
push
lcall
cmp
add
fdivrp
jbe
je
dec
sub
gs
cwtl
mov
sahf
bound
es
push
xchg
popa
in
mov
jbe
aaa
push
aas
jns
and
cmp
push
es
inc
cs
jne
dec
js
dec
cs
addr16
fidivrs
divl
xchg
or
mov
out
pop
and
pop
dec
daa
adc
daa
adc
cs
mov
mov
insb
fucomip
add
fistl
sub
out
andl
xchg
jg
scas
sarl
add
lods
sahf
jg
sub
mov
out
movsb
xchg
jle
cmpsl
pop
mov
and
scas
mov
mov
test
mov
sarb
scas
mov
shlb
mov
push
jle
shl
daa
adc
add
lods
fildl
mov
cmp
mov
sarb
scas
mov
fsubs
mov
push
jle
adc
push
idiv
out
jbe
lea
mov
jbe
lea
outsb
cmpl
ret
cmp
pop
mov
fildl
mov
xor
sarl
cmp
adc
mov
ds
jg
pop
fdivrl
pop
push
dec
mov
mov
jp
lahf
stos
sub
loopne
mov
sarb
scas
mov
fsubl
mov
push
jbe
scas
jecxz
push
into
aam
adc
scas
lea
mov
jbe
lea
outsb
cmpl
lods
xchg
jle
cmpsl
jns
and
scas
mov
mov
xadd
mov
and
scas
mov
outsl
inc
scas
push
jbe
jp
loopne
outsb
adc
scas
lea
cmpw
inc
mov
jle
pop
cmp
mov
imul
das
sarl
in
lret
test
push
mov
scas
mov
ja
dec
pmaxsw
jl
push
mov
pop
cs
jge
movd
jl
xorl
cmpsl
jns
jbe
jbe
pop
push
movzwl
dec
push
dec
outsl
cmpl
push
into
or
jbe
push
push
or
popa
dec
dec
pcmpeqd
jecxz
roll
jl
mov
jle
pop
xchg
mov
xor
sarl
pop
adc
dec
sbbb
xor
add
jmp
mov
xor
add
pop
loope
std
add
pop
and
pop
popa
mov
dec
popf
pop
mov
fcompl
mov
add
pop
and
mov
mov
cmpb
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
lods
pop
mov
int
rcrl
icebp
pop
or
pop
xor
push
pop
insl
pop
jno
lea
lods
pop
mov
int3
pop
shrb
fbld
jge
orl
fmull
add
cmp
inc
mov
mov
ja
mov
push
fstl
push
std
push
add
stos
push
add
prefetch
mov
mov
dec
cmpsb
outsb
xchg
mov
imul
stos
dec
cmpsl
outsl
mov
into
mov
cld
fimull
enter
cs
enter
pushf
lcall
data16
or
xchg
and
and
cmpsl
fnstsw
lods
outsl
push
hlt
mov
enter
stc
lahf
xchg
xchg
lcall
push
dec
dec
js
mov
les
xor
leave
jl
cs
jbe
cmp
test
mov
mov
inc
aaa
in
rolb
test
scas
into
out
add
orb
decb
data16
jbe
cmpsb
xchg
push
mov
out
xor
testb
cwtl
xor
test
scas
js
jle
inc
es
lcall
test
in
fs
out
ja
or
dec
pop
pop
pop
clc
cwtl
push
call
xor
and
bound
pusha
imulb
andb
sbb
incb
sub
push
jne
pop
push
jbe
mov
and
inc
dec
pop
mov
pop
lods
xchg
add
adc
lds
inc
mov
adc
ja
int3
incl
jp
hlt
mov
lret
iret
pop
push
jg
pop
subl
push
dec
mov
dec
xor
dec
xchg
enter
pushl
pop
xor
sbb
test
cmc
in
jno
aam
insb
or
insl
daa
xlat
leave
add
cmpsl
mov
jle
or
pusha
ljmp
xchg
mov
xlat
lock
push
les
sub
and
sub
or
xor
stos
stc
xchg
pop
fmulp
or
sbb
lea
mov
aaa
int3
test
mov
ss
mov
dec
cmpb
push
outsl
adc
int
pop
dec
enter
xchg
out
into
mov
jne
dec
jle
aam
xchg
ja
into
cmp
pop
jnp
inc
into
xchg
push
lcall
cmp
dec
jle
adc
adc
pop
xor
stos
je
xor
mov
jl
xor
push
das
inc
lods
pop
je
icebp
push
rcrl
mov
es
mov
sarb
and
jae
mov
mov
or
or
pop
pushf
mov
mov
cmp
fwait
movsb
sbb
dec
nop
or
insl
pop
je
jle
mov
outsl
stos
cmp
cli
ljmpw
xchg
push
inc
mov
test
xchg
push
es
clc
pushf
mov
xor
adcl
call
fidivl
cmpsb
test
dec
jp
andl
pushf
idivl
mov
ds
dec
mov
pop
loope
xor
stos
pop
push
pop
sub
jp
mov
icebp
mov
sarl
xchg
lcall
mov
jp
lods
mov
xchg
push
es
push
into
dec
dec
push
psubsw
inc
mov
xchg
adc
sbb
ds
xor
and
mov
adc
iret
loop
movsb
xchg
add
mov
fxch
pop
mov
push
comiss
push
scas
jge
pop
out
push
push
lea
outsb
push
mov
scas
cmpsb
popf
int
and
inc
jge
mov
loopne
lods
jo
and
inc
jge
mov
push
test
adc
inc
jge
mov
loopne
lods
jo
and
inc
jge
mov
loopne
lods
jp
inc
jge
mov
loopne
lods
jo
and
inc
jge
mov
loopne
lods
jo
and
lods
mov
pop
lods
jo
and
inc
jge
mov
loopne
lods
jo
and
inc
jge
mov
fisubrl
mov
xlat
loopne
lods
jo
and
inc
jge
mov
jo
and
inc
jge
mov
loopne
lods
jo
and
inc
jge
mov
push
mov
adc
inc
mov
mov
push
lahf
cmpb
out
cmp
fcoms
push
pop
xchg
fsubp
pop
pop
cwtl
jle
addl
jbe
xor
pusha
setp
xchg
sub
mov
mov
push
cld
inc
jp
sbb
add
iret
loop
daa
lret
scas
loop
mov
repz
lock
mov
mov
mov
out
mov
sbbb
mov
mov
mov
test
xorb
addb
jl
jp
jnp
xchg
cmp
jle
push
xchg
fisttpll
pop
xchg
call
mov
sbb
and
loopne
incb
mov
js
out
mov
out
sbb
je
lret
mov
jb
jo
out
out
outsb
insb
lock
std
data16
jge
ss
addr16
popf
outsl
mov
lods
outsl
mov
bound
inc
inc
neg
je
out
into
mov
mov
imul
ja
std
scas
ja
lods
ja
push
ja
sub
pop
out
in
pop
cs
xchg
mov
pop
push
loopne
push
cs
xchg
mov
adc
mov
loope
xchg
adc
mov
jg
aas
or
lods
sub
and
adc
movsb
sub
sarl
arpl
mov
jg
xchg
mov
push
xchg
dec
fwait
jle
pop
dec
cmpsl
xchg
xchg
loop
jg
fildl
xchg
xchg
sbb
out
in
mov
jo
mov
test
movsl
jle
fstpt
and
jl
xchg
inc
jle
mov
jg
jg
mov
andb
pop
pop
cmp
pop
xchg
mov
iret
xchg
sbb
out
xor
xchg
gs
lods
xchg
andb
lods
xor
inc
jle
setl
sbb
inc
setg
lahf
mov
lahf
sub
mov
inc
popa
into
jbe
sub
lcall
xchg
ja
fildl
or
or
mov
insl
xchg
push
mov
into
mov
push
loope
std
data16
xchg
jae
lds
outsl
xchg
mov
repnz
xchg
popa
lock
mov
inc
cmc
aaa
sbb
and
push
cli
fmuls
mov
das
repnz
pop
repz
inc
jle
es
push
mov
pop
lcall
insl
xchg
lea
xchg
xor
stos
std
test
or
sub
mov
sub
fs
mov
divb
lret
out
pop
mov
into
iret
xchg
cmp
adc
clc
mov
insb
xchg
stos
pop
jbe
or
fldl2t
mov
movsl
jne
jg
iret
movsl
xchg
xchg
decl
adc
imul
rorl
in
and
cld
seto
xchg
pop
xchg
push
and
xor
mulb
in
hlt
push
data16
sub
lds
sti
or
outsl
cmp
xchg
lcall
xchg
mov
subb
aad
sub
jmp
mov
nop
or
shr
fidivl
pop
push
dec
lcall
loope
lcall
push
cmpsl
sbb
cld
dec
sbb
push
mov
inc
or
jp
js
clc
repnz
xchg
cmc
rcll
push
mov
negl
mov
xchg
loop
sub
cmp
shl
fsubs
sbb
xchg
sub
cmc
push
dec
jl
mov
sub
or
scas
cli
add
xor
cltd
lret
pop
mov
ds
pushf
mov
push
adc
fcmovbe
das
mov
dec
add
jle
jb
loop
fistpl
outsl
adc
aam
and
jmp
mov
jbe
pop
rclb
mov
xchg
or
imul
push
mov
add
jbe
push
int
mov
mov
dec
xchg
jge
push
ja
sbb
mov
mov
adcb
loopne
inc
xchg
mov
cld
push
mov
push
idivb
bnd
cmp
mov
stos
mov
push
jecxz
mov
rcrb
add
mov
clc
and
mov
mov
dec
jmp
decl
dec
adc
and
popf
xchg
fstpl
mov
outsb
xchg
push
data16
mov
fcoml
insl
aad
push
pop
cmp
push
cmp
loop
and
decb
movsb
and
jg
jns
xchg
aaa
push
jp
sub
adc
mov
xchg
outsb
xchg
dec
mov
bound
xchg
push
flds
mov
mov
xchg
bound
mov
jmp
push
into
outsb
out
std
pop
clc
adc
insl
xchg
cmpsl
xor
jbe
cli
test
cmp
pop
loopne
sub
bound
jmp
vfmsub231sd
out
xchg
lahf
mov
mov
data16
test
mov
mov
lods
into
mov
outsb
nop
xor
mov
or
aaa
jb
add
sbb
imul
stos
inc
jbe
outsb
push
jns
cmp
jb
rcl
stos
xor
sti
and
inc
sub
aaa
cltd
push
cmp
test
xchg
in
cmp
mov
mov
notb
jl
inc
and
inc
sub
mov
and
mov
aad
sub
je
add
inc
inc
jne
cmp
jne
fldl
xlat
xchg
jg
test
sbb
idivl
movsl
scas
push
xchg
jl
insl
jmp
test
pop
mov
xchg
fdivrs
out
outsl
inc
jns
imul
mov
sbb
fs
xor
daa
jae
ljmp
movsb
push
adc
repz
repz
jno
fwait
loop
mov
xchg
iret
aaa
popf
and
test
sti
jmp
mov
sub
pop
mov
push
push
jne
cwtl
jnp
and
push
jne
nop
dec
sbb
fildl
or
mov
xchg
idiv
xor
in
inc
pop
loopne
inc
dec
xchg
lock
mov
shlb
push
hlt
test
adc
push
push
dec
movsl
push
orl
adc
iret
setno
or
pop
adc
fsubrl
pop
cwtl
inc
cmp
test
adc
les
mov
lods
xor
push
xchg
cs
inc
setno
add
and
pushf
out
mov
xchg
jb
cmp
int
mov
mov
rorl
mov
loop
push
lcall
out
pop
test
jb
faddl
lea
mov
xchg
ds
push
pushf
dec
stos
lds
daa
fwait
test
lds
fsub
cmpsl
mov
cwtl
xor
pop
jbe
movsb
and
cmp
out
gs
fcomps
push
mov
push
push
lock
arpl
ss
xchg
push
mov
push
xor
xchg
mov
inc
and
js
xchg
and
inc
test
inc
pop
jne
lods
loope
mov
ret
jl
es
inc
dec
push
ljmp
lea
dec
adc
movsl
pop
aam
push
daa
dec
je
orl
pushf
mov
sti
ret
or
mov
dec
or
mov
cmp
stos
push
and
xlat
cmp
xchg
cmp
decb
push
or
mov
or
mov
adc
or
into
cmp
out
jbe
lods
pop
xor
subl
lods
je
mov
orb
mov
push
mov
sbbb
pop
sub
adcb
out
in
jecxz
fisubl
bound
in
je
xor
sub
lahf
loop
sub
testb
dec
xchg
stos
jbe
clc
stc
inc
fildll
jbe
or
enter
push
scas
adc
lods
sbb
sub
scas
shl
xchg
mov
push
test
pushf
adc
sahf
jmp
insl
in
pop
adc
clc
and
mov
mov
hlt
xchg
sbb
bound
xchg
and
push
mov
es
imul
gs
ficoml
insb
sbb
out
inc
or
push
push
jb
hlt
xchg
bound
adcb
ja
dec
sbb
inc
and
mov
mov
jbe
lea
push
negl
sub
daa
into
gs
pop
push
cli
addb
or
adc
pop
pusha
es
lock
adc
xchg
xchg
inc
jge
scas
mov
outsb
in
add
inc
gs
ljmp
push
pop
sub
scas
nop
push
dec
jg
pop
jp
jle
cmp
inc
jnp
push
inc
xchg
push
dec
mov
adc
pop
inc
aam
ss
pop
scas
push
jle
cmp
cwtl
xchg
icebp
xchg
or
cmp
and
data16
loop
mov
push
in
adc
loopne,pt
sbb
push
push
enter
jb
sbbl
loopne
stos
out
or
adc
pop
pop
nop
xor
lahf
data16
mov
pop
subl
push
test
dec
popa
dec
notl
outsb
or
loopne
sbb
jbe
cmpsb
add
adcl
mov
fistpll
jne
gs
stc
jne
mov
xchg
arpl
push
lock
stos
mov
push
aas
popf
cmpsb
jns
enter
popf
insb
push
imul
xchg
push
adc
popw
arpl
test
inc
lds
jbe
and
ret
jg
jecxz
aam
jb
sub
pop
xor
mov
mov
xchg
push
int
decl
in
xor
xcrypt-ecb
cmpsl
push
dec
mov
in
add
jno
mov
push
test
mov
fcom
push
jle
stos
dec
mov
fs
shrb
mov
dec
mov
add
out
int3
xchg
addl
hlt
outsl
in
bound
aam
adc
popa
and
stos
dec
ss
call
push
mulb
cmp
divb
dec
mov
jp
mov
mov
js
shlb
out
scas
cmpsl
ffree
xchg
add
scas
jmp
mov
iret
mov
inc
mov
cmp
add
ljmp
xchg
and
mov
sub
loope
xor
mov
add
jp
inc
loopne
lahf
mov
dec
call
ss
js
dec
push
out
std
sbb
scas
mov
push
test
push
into
xchg
push
mov
adcl
test
pop
and
pop
mov
pop
adc
xchg
nop
pop
lret
xor
push
into
fwait
movsl
jg
iret
in
push
mov
scas
adc
xchg
lcall
les
popa
lahf
call
or
push
cli
fwait
movsb
mov
outsb
push
fwait
push
jmp
push
lcall
jle
aam
and
lcall
into
mov
mov
xchg
add
sbb
sti
adc
lods
in
loopne
cld
pop
mov
in
jle
adc
in
cli
xchg
pop
xchg
dec
mov
mov
sbb
ffree
add
mov
dec
sbbl
pop
iret
pushf
clc
arpl
cld
xor
das
divb
out
sbb
mov
adc
xor
add
cs
mov
data16
jbe
hlt
in
push
pop
in
or
sub
repz
mov
sbb
movsb
mov
mov
jbe
and
inc
loop
repz
push
sbb
iret
call
repz
pop
test
dec
and
sbb
pop
mov
lcall
pop
outsb
add
push
sub
mov
mov
mov
iret
testl
repz
sub
mov
xchg
xchg
cmp
mov
shl
mov
pop
mov
xor
mov
pop
jbe
mov
stc
pop
test
mov
sar
mov
pop
repz
adc
inc
jp
bound
xorb
lock
rcrl
fcomps
cmp
ret
test
insl
jmp
adc
gs
jge
inc
dec
shlb
sbb
fcoms
mov
cwtl
jbe
push
mov
loope
sbb
popa
out
jge
mov
inc
push
lods
mov
jl
inc
cli
je
ret
xor
in
and
add
ljmp
test
idivb
or
sbb
push
push
push
data16
lcall
cmp
imul
test
fs
add
fs
movb
mov
outsl
cmp
loopne
pop
call
xchg
add
inc
pusha
jmp
fwait
shlb
mov
cs
inc
or
xor
inc
push
gs
sub
inc
jmp
loop
dec
mov
out
bound
mov
pop
and
jge
je
sub
or
test
xchg
mov
out
fistl
je
mov
mov
je
cmp
je
sub
dec
pop
out
sub
dec
lcall
xchg
dec
shll
xchg
arpl
inc
negb
xlat
js
inc
push
in
pop
mov
mov
xor
shll
stos
pop
out
push
inc
inc
stos
push
xchg
fidivrl
stos
xor
ja
xchg
inc
jo
dec
inc
dec
fisttpl
ret
fiaddl
loopne
dec
jnp
sub
int3
pop
mov
push
iret
scas
dec
popa
cmp
pop
mov
jbe
cmpsl
mov
into
lret
mov
jne,pn
in
push
and
fstpt
and
and
sub
mov
and
adc
out
inc
push
cmc
xchg
jl
inc
dec
test
xlat
dec
cmp
rcrb
icebp
inc
mov
mov
pop
pop
pushw
xchg
sub
in
sub
mov
mov
or
xor
jb
jmp
data16
sub
sbb
fsubr
and
sbb
xchg
jmp
movb
sti
cmp
dec
push
pop
shrl
pop
nop
cs
dec
fdivr
push
or
stos
pop
xor
dec
jns
lcall
or
push
out
jg
mov
sbbb
xor
cmc
out
movsb
pop
mov
dec
inc
lock
push
xchg
nop
cli
pop
divl
aaa
js
and
mov
loope
test
xchg
outsl
inc
adc
outsl
cmp
test
xchg
cmpsb
xchg
test
push
cld
push
jl
xchg
repnz
inc
or
push
negb
xchg
jmp
andb
dec
sti
arpl
xchg
jno
mov
out
cltd
ljmp
inc
lcall
pushf
mov
push
dec
loop
adc
jbe
ror
fimull
jle
mov
xchg
sub
loope
loop
jno
imul
hlt
mov
dec
add
xchg
pop
loopne
add
stos
lcall
xor
cwtl
js
xchg
mov
mov
ljmp
and
mov
pop
push
stos
push
andb
ss
mov
jmp
xchg
frstor
popa
scas
jl
lock
inc
mov
jp
jl
out
pusha
sbb
pop
cld
test
cmp
enter
scas
js
dec
ret
xchg
stos
test
pop
xchg
outsb
aad
mov
mov
fucomi
movsb
dec
mov
push
push
enter
cmp
jmp
xchg
jge
pushw
ret
loope
pusha
push
xor
push
loop
jecxz
mov
adc
add
inc
mov
pop
and
xchg
cmp
lcall
jae
cmp
push
dec
sbb
cld
fwait
outsl
pusha
cmpsl
in
xchg
cwtl
mov
xchg
mov
mov
pushf
out
pop
and
dec
jmp
push
cmpsb
xchg
xchg
adc
mov
fisubrl
shld
mov
sbb
add
cmp
pop
push
cli
rclb
mov
decb
subl
pop
push
in
mov
sbb
bound
jmp
pop
jle
jg
sub
mov
xchg
scas
jecxz
xchg
setl
dec
dec
and
push
and
stc
arpl
dec
scas
popa
loop
cmp
pop
jl
test
adc
adc
mov
pop
pop
lea
add
rcr
out
loopne
mov
push
lcall
inc
jl
and
jle
jg
inc
xchg
sbb
fdivrl
xor
xchg
mov
sbbb
jle
sbb
cmp
cmpsl
mov
cmpb
sub
cmp
mov
jle
addb
mov
notl
inc
fisttpl
cmp
jp
fnstcw
pushf
mov
pushf
test
jl
jg
test
jle
pop
xchg
addb
push
fisubl
stos
pop
divl
mov
pop
mov
mov
jno
jnp
xchg
push
je
sbb
jnp
cwtl
push
adc
xchg
jge
mov
lret
jb
mov
out
xchg
addb
pop
popl
mov
ljmp
enter
cli
out
or
mov
lods
mov
and
dec
or
in
out
jp
in
ss
icebp
cmp
mov
leave
push
xchg
sub
ljmp
cli
js
cwtl
rorl
sbb
pop
jl
cmp
pusha
and
mov
xchg
mov
fsubl
adc
cwtl
jge
shrl
jge
fildl
lea
test
dec
jge
mov
pushf
insl
mov
call
pusha
pop
adcb
punpcklbw
and
jb
mov
pushf
mov
je
cwtl
mov
dec
movsl
pop
mov
incb
pusha
mov
xchg
sbb
mov
mov
jns
push
pop
ficompl
xchg
add
xor
arpl
js
jle
mov
js
arpl
js
push
add
cmp
rolb
mov
js
rolb
js
xchg
sub
insb
js
rolb
js
jle
add
js
rolb
js
push
sub
outsb
js
insl
add
js
js
add
js
insl
xchg
add
js
insl
xchg
add
js
jb
pop
js
jnp
add
js
jp
add
jmp
insl
mov
jmp
insl
mov
jmp
insl
mov
mov
pop
xchg
mov
xchg
add
jle
data16
push
mov
xchg
xchg
jle
inc
loopne
aaa
mov
push
push
mov
shlb
fstpl
xchg
out
loop
sub
pop
fidivs
daa
mov
popa
inc
xor
xor
xchg
push
int3
addr16
push
out
mov
jo
jg
sbb
andb
push
xchg
mov
ja
push
mov
out
pop
mov
dec
fildll
push
mov
push
js
aam
test
mov
xchg
int
cli
ja
xor
or
pushf
lret
xor
iret
push
xchg
adc
lcall
sbb
into
push
or
adc
lds
insb
movl
into
testl
xchg
dec
adc
testl
xlat
jne
sbb
outsl
lahf
int3
xchg
in
mov
inc
mov
mov
cmp
jge
dec
and
xchg
enter
push
jns
outsl
movsb
and
xor
sbbl
push
movsl
jge
dec
pop
jle
aaa
or
pop
pushf
ficoml
mov
xchg
cmp
push
cmp
pop
lea
xchg
cld
ljmp
inc
orb
pop
decb
pop
xor
push
jbe
inc
jl
repnz
mov
xchg
clc
jbe
lcall
rcrl
movsl
sub
pop
push
stc
sbb
mov
pop
xchg
in
subb
nop
xor
cmpb
xor
xchg
test
mov
mov
xchg
lds
adc
je
jge
dec
scas
jle
shll
lcall
pop
mov
dec
out
test
stos
mov
jp
daa
xchg
popf
mov
xchg
or
je
jno
lret
pop
fsubl
jp
je
jp
xlat
popf
xchg
aad
jp
adc
jp
xsha256
cmpsb
push
jp
and
dec
in
decb
pop
jecxz
mov
nop
pop
fimuls
sub
mov
mov
and
adc
pop
stos
push
pop
pop
lret
mov
cwtl
pop
xchg
rcrl
xchg
test
xchg
fs
xchg
xchg
in
mov
sub
imul
cmpb
xor
aad
jmp
lret
cmpsl
pop
pusha
and
lcall
movsl
das
adc
pop
dec
push
mov
xchg
aam
imul
mov
jge
in
js
repnz
push
jl
ja
push
orb
js
mov
cmpsb
jp
adc
js
xchg
pop
sbb
call
pop
cwtl
jnp
pop
xchg
movsl
mov
sbb
std
in
xchg
xchg
in
mov
add
xorb
roll
movsl
jge
dec
jbe
sbb
pop
movl
lret
mov
mov
mov
mov
lcall
mov
leave
xchg
incb
pop
pop
loopne
inc
popf
push
xchg
lcall
je
pusha
ret
pop
repnz
int3
pusha
lcall
repnz
je
pusha
andb
xor
out
and
cmp
mov
adc
out
xchg
das
jno
jne
jle
cmpsb
iret
push
push
dec
out
pushf
outsb
int
int3
aaa
inc
fnstcw
pushf
lret
mov
data16
lods
aas
pop
dec
xor
inc
out
jg
or
jne
adc
xchg
movsb
pop
or
mov
push
mov
mov
mov
dec
sub
mov
add
notl
pop
addl
xor
data16
mov
sbb
pop
jnp
cmp
mov
pop
mov
dec
push
inc
mov
push
inc
and
shll
lcall
jne
in
jb
bound
mov
clc
push
jno
push
jg
pop
sub
mov
xor
mov
adc
popf
repnz
push
push
stc
xlat
clc
stos
xor
in
aaa
stos
push
and
push
stos
pop
push
mov
adc
mov
xchg
push
jmp
push
dec
xchg
jae
ret
enter
xorl
jb
xchg
cli
push
lods
jecxz
cld
pop
sbb
push
cmp
not
insb
cli
ret
jle
xchg
or
sbb
nop
dec
lahf
iretw
add
js
xor
cld
ja
push
out
cmovne
hlt
push
add
or
xchg
std
sbb
and
cmc
pop
xchg
jle
xchg
push
mov
cs
les
push
popl
sub
xor
push
sub
dec
mov
inc
fstpt
mov
cwtl
addl
scas
sub
shll
das
es
xlat
mov
and
push
push
xchg
popa
or
mov
faddl
and
xchg
pop
cld
push
orb
push
dec
xor
push
testb
xlat
sub
cmp
sbb
jmp
mov
xchg
es
add
imul
mov
pop
xor
and
xorl
and
or
je
jle
sbb
movlps
iret
xor
nop
lods
jge
aaa
mov
adc
jbe
dec
cmp
test
daa
push
dec
stos
jp
mov
mov
cmpsb
or
xchg
mov
adc
jle
sub
push
mov
or
mov
add
and
xchg
subb
out
in
repz
call
lock
out
jle
cs
cld
xchg
iret
lock
sbb
mov
cmp
and
cs
jnp
xchg
adc
aad
call
cs
pop
clc
std
testb
sub
icebp
es
ds
push
lds
mov
scas
sub
repnz
jne
jg
scas
mov
repnz
es
pop
mov
dec
data16
aad
push
arpl
out
mov
pop
in
or
jb
push
subb
pop
and
mov
sbb
aad
jo
dec
add
iret
push
jp
push
out
sbbb
out
inc
jnp
inc
push
jbe
pop
fsubr
and
jbe
pop
test
and
push
push
jbe
xor
push
inc
lcall
icebp
cld
inc
mov
scas
bound
xor
jle
icebp
andb
and
xor
jle
leave
fcmove
fadds
dec
push
mov
jb
xchg
mov
stc
or
push
adc
data16
loope
cmc
and
and
push
sub
loope
add
pop
lock
loop
mov
adc
dec
sti
jne
pop
add
out
bound
test
cli
pop
mov
sbb
jle
or
imul
dec
pop
dec
or
mov
pop
xchg
test
das
mov
insb
fdivr
test
or
jne
dec
pop
inc
mov
lods
or
add
ja
mov
loopne
out
dec
cmp
sub
and
xlat
xor
sub
inc
jp
push
sub
sbb
sbb
dec
xlat
and
add
mov
sbbl
mov
mov
mov
mov
add
adc
lret
out
pop
adc
sub
sbb
loopne
lea
std
lea
push
data16
push
rorb
dec
test
cpuid
adc
dec
addr16
push
pop
ss
inc
lcall
pop
rorl
xchg
enter
dec
decb
pop
rcrl
xchg
inc
clc
pop
or
and
in
in
pop
xor
aad
cli
and
xor
add
das
and
rol
das
into
and
into
sub
cmp
mov
data16
sub
out
fistps
push
cs
pop
ss
scas
movsb
mov
dec
cmpsb
inc
push
psubsw
bound
jbe
pop
frstor
add
cli
data16
push
cmpb
outsl
and
into
pop
fidivrs
pop
adc
mov
dec
fwait
add
mov
xchg
push
add
inc
xor
addr16
mov
push
dec
push
gs
lods
fs
sub
mov
sbb
xchg
or
xor
xchg
mov
mov
js
and
and
pop
adc
jns
fmul
movsb
js
lcall
test
and
and
and
and
and
ror
xchg
jno
rclb
push
pop
cmp
mov
ja
outsb
ss
mov
setbe
mov
lock
or
jb
dec
xchg
cmp
pop
push
inc
mov
fists
data16
push
outsl
into
jp
push
ds
inc
jge
sbb
jge
mov
mov
stc
jle
add
cmp
out
movsb
in
out
in
notl
ja
sub
cmp
push
mov
dec
mov
mov
das
lea
jbe
xchg
inc
inc
adc
inc
adc
outsb
repz
mov
push
outsb
adc
lcall
push
add
call
inc
xchg
test
icebp
xlat
mov
sbb
repz
adc
mov
push
cmp
mov
stos
push
ds
push
gs
ja
dec
push
loope,pt
xor
clc
push
icebp
pop
clc
test
cmp
jmp
mov
push
and
data16
sbb
sbb
lret
inc
push
cmpsl
ja
cs
ret
rolb
dec
inc
les
pop
xor
sub
inc
and
dec
repz
inc
in
jne
lods
aaa
adc
rcl
mov
insl
and
pushl
testb
xor
pop
jl
inc
out
dec
jno,pt
jbe
or
jg
xor
cs
and
push
cwtl
jo
cltd
fwait
adc
aas
ja
movsb
sbb
cli
inc
jl
lcall
xor
clc
aaa
dec
sbb
mov
fsts
pop
ret
and
inc
faddl
jecxz
and
daa
into
pop
sub
inc
das
adc
cwtl
and
pop
xor
and
jg
pop
and
push
jae
mov
sar
or
in
lods
iret
xchg
aad
jg
and
xchg
cmp
pop
ret
xchg
or
and
out
cmp
ja
rclb
jnp
and
or
mov
ja
sbb
cmpsb
rcrl
xchg
pshufw
xchg
inc
dec
xor
xchg
and
jecxz
and
cmc
push
sub
push
vmovdqu
mov
into
std
mov
jmp
icebp
test
arpl
or
cwtl
sbb
pop
scas
out
sbb
jl
add
stos
test
data16
xchg
push
out
repnz
daa
inc
shll
inc
lret
fdivp
sbb
pusha
jnp
mull
loopne
and
inc
xchg
or
mov
mov
shrb
cltd
adc
shlb
in
pop
mov
dec
test
cmp
repnz
inc
movl
mov
pop
jo
mov
in
insb
insl
mov
sarb
push
je
inc
outsb
imul
iret
sbb
add
ds
pop
js
jle
icebp
push
dec
sub
sbb
xchg
push
mov
sbb
jns
inc
jmp
sub
mov
mov
shll
into
outsl
add
adc
mov
rolb
fwait
dec
mov
push
push
cli
and
pop
xor
fidivrl
movsb
insl
lock
sbb
sub
movsl
jns
std
mov
pusha
xchg
scas
xorb
mov
sbb
rorl
push
sbb
jmp
jbe
xchg
mov
sarb
bound
pop
pop
xchg
rcr
inc
les
pcmpgtd
xchg
mov
sub
adc
idiv
imulb
jl
xchg
inc
cmpsl
xchg
push
jae
dec
imul
pop
xor
xor
mov
out
push
push
xchg
adc
cmc
js
cs
jnp
mov
adc
or
das
or
loop
divb
mov
mov
push
outsl
adc
inc
add
add
mov
scas
pop
sub
add
mov
out
push
push
or
mov
xchg
cmpsl
in
lret
and
sub
sub
push
mov
mov
push
loop
pop
cmpb
sti
mov
nop
scas
add
jae
sbb
xchg
in
nop
cmp
repnz
iret
pushf
out
daa
cmp
jle
daa
jle
mov
inc
loop
es
movsb
sbbb
nop
call
pop
push
mov
push
int3
les
fnstsw
pop
sbb
xchg
pop
push
sbb
cmp
inc
stos
test
js
stos
push
imul
push
adc
outsl
inc
sub
inc
adc
loop
sbb
push
mov
int3
jb
inc
add
dec
sti
out
int
dec
jg
push
jp
js
mov
nop
dec
jnp
add
xchg
jp
js
stc
push
jp
aaa
add
sbb
cmc
add
dec
adc
fwait
xchg
fsubs
sbb
mov
pusha
ret
cmp
icebp
pop
mov
mov
dec
loopne
xor
lods
sti
inc
movsb
cmp
dec
pop
rcr
adc
mov
data16
orps
mov
leave
sti
data16
inc
adc
aad
das
mov
aas
dec
stc
xor
cmpsb
push
and
jne
js
std
rorl
mov
add
std
jae
jnp
inc
hlt
jg
aad
add
or
or
push
in
add
mov
stos
test
xchg
bound
inc
xchg
je
sbb
inc
mov
mov
shrl
push
jle
sub
test
jns
fistl
lods
out
push
mov
mov
add
pop
loop
push
adc
je
xlat
cmp
inc
cmp
inc
jb
iret
dec
sbb
cli
push
xchg
in
or
lods
popa
mov
clc
inc
popl
insb
dec
mov
insl
jle
lret
outsb
jns
inc
adcb
push
sbb
adc
addr16
push
and
in
and
insb
movsl
in
inc
mov
xor
ror
lock
and
popl
outsb
push
sbb
push
mov
out
jne
insb
js
xchg
push
push
push
mov
or
imul
push
cli
repnz
push
ss
mov
pop
je
push
cmp
ss
into
imulb
imulb
in
xchg
ss
lods
cs
out
or
sub
inc
mov
cld
lahf
pop
pop
add
cwtl
arpl
push
push
shl
movsl
sbb
int
add
cmp
dec
pushf
mov
sub
jl
xchg
mov
jae
cld
pop
cli
push
clc
repnz
lock
push
test
scas
jge
cmp
jle
jl
cmp
ss
arpl
pop
jl
push
out
pop
mov
insb
jl
ficoms
js
lea
xchg
push
xchg
and
inc
js
xchg
mov
jl
mov
into
jp
push
enter
adc
mov
rcrb
iret
jo
aad
out
push
lcall
mov
nop
cmp
lods
xchg
xor
aas
mov
adc
pop
inc
outsb
push
mov
sti
jecxz
iret
out
outsb
mov
xchg
fimull
rorb
cmp
lods
push
pop
mov
nop
je
xchg
inc
push
pop
jg
mov
xor
mov
adc
lds
sar
sub
fisubrs
rorb
pop
mov
cwtl
mov
push
iret
adc
inc
andb
mov
and
mov
xchg
cmp
outsb
pop
enter
adc
mov
add
rcll
xchg
fsubr
mov
mov
add
or
pop
data16
call
xorl
negb
or
adc
mov
xchg
cmp
inc
cmp
clc
pop
or
adc
inc
out
test
sub
leave
push
add
fwait
mov
jb
or
iret
popf
lods
pop
jae
rorl
mov
fwait
adcb
lcall
scas
arpl
cmpsb
dec
xchg
lcall
sub
scas
dec
cli
movsb
push
pop
cmp
lret
hlt
mov
sbb
ja
jb
outsb
jge
xorl
mov
loopne,pt
rcrl
dec
outsl
sub
pusha
push
push
add
mov
aaa
iret
fisubl
dec
xchg
lahf
rorl
cmp
lcall
mov
loopne
xchg
lea
mov
jl
mov
mov
loopne
sbb
dec
sti
xor
xor
ja
sbb
jge
rorl
adc
shrl
pop
hlt
push
test
jp
movsb
inc
lret
lcall
out
xchg
cmp
int
and
push
enter
mov
icebp
adc
mov
insl
test
rcrb
call
call
dec
test
pop
sbb
nop
mov
hlt
push
cmp
dec
jbe
outsl
pop
pop
les
cltd
cmpsl
inc
lret
mov
jae
gs
mov
mov
aam
test
add
test
test
push
repz
pop
fnsetpm(287
add
aas
leave
hlt
cmpl
movb
jmp
stc
cmp
sub
call
pushl
popl
pushf
mov
push
pushf
lea
jmp
call
mov
mov
movb
movb
lea
jmp
mov
lea
call
mov
cmc
add
pusha
push
jmp
pushf
movl
pushf
pushf
call
movw
mov
not
jmp
mov
pushf
jmp
bt
xadd
mov
sar
mov
call
jmp
test
mov
mov
jmp
call
movzbw
mov
pusha
mov
bswap
repz
popl
clc
pushl
popl
stc
call
jmp
bt
xor
mov
push
add
push
jmp
call
bswap
mov
bswap
pop
mov
mov
pop
xchg
pop
pop
mov
mov
push
pop
movzbw
push
mov
push
push
mov
pushf
push
pushf
repz
popl
lea
movzbw
bt
rcl
pushl
popl
btc
stc
clc
movl
movsbl
movsbw
btr
mov
xchg
bt
not
rol
bts
bswap
movzbw
pop
add
xor
rcr
mov
rcl
jmp
pusha
push
pusha
pushf
popl
jmp
call
pushf
mov
pusha
pushf
popl
pushl
pushl
jmp
pop
rol
clc
dec
ror
bswap
sub
bt
add
btc
lea
sbb
lea
cmp
adc
clc
sub
call
mov
movsbl
movsbw
jmp
lea
inc
dec
btc
neg
not
setge
pushf
xor
rcr
bts
jmp
jmp
jmp
pushf
pushf
jmp
not
sar
mov
pushf
sub
pusha
jmp
jge
push
pusha
mov
jmp
not
movsbw
repz
not
pushl
rcr
push
not
mov
movsbw
push
mov
mov
rol
movsbw
bsf
bswap
bts
cmp
pusha
shl
add
lea
btc
pop
lea
movzbl
rcl
sub
not
bswap
mov
pushf
pusha
movw
lea
jmp
call
pusha
call
pushf
jmp
test
bt
xchg
call
cmp
stc
mov
sub
pusha
pushl
mov
pushf
push
lea
jmp
push
call
jmp
and
shld
dec
bt
mov
test
call
shl
cmc
dec
mov
stc
add
push
pusha
pushf
lea
jmp
call
not
bsf
mov
cmp
pushf
mov
clc
bt
add
movb
mov
mov
pusha
movb
pushf
lea
jmp
pushl
popl
rcr
movsbw
movl
movzbw
movsbw
not
mov
ror
bts
lea
rol
clc
bswap
movsbw
ror
add
not
bsr
lea
bsr
pop
sub
jmp
push
mov
pushf
lea
jmp
movw
movb
pushl
popl
movb
movb
movw
lea
jmp
movb
pushf
popl
pusha
call
mov
bswap
repz
popl
movzbw
btr
movzbw
cmc
pushl
popl
not
xchg
btr
movl
stc
jmp
bts
aas
sbb
ror
mov
call
call
jmp
rol
rcl
cmp
bsr
bswap
clc
pop
inc
shr
add
btr
lea
adc
pusha
sub
movsbl
movsbw
mov
push
lea
jmp
call
mov
pushl
popl
pushf
lea
jmp
cwtl
bt
mov
pushf
cmp
sub
clc
bt
stc
push
sub
call
std
pushf
pushl
popf
pushf
pushf
pushl
lea
jmp
pushl
popl
mov
mov
movw
mov
lea
jmp
call
bt
pusha
sub
pushf
xchg
push
movl
jmp
lea
movsbw
mov
pusha
call
stc
bt
mov
push
cmc
add
jno
clc
sub
test
shl
push
pushf
pushl
mov
pushf
pushf
popl
jmp
bsr
mov
cmc
pusha
call
mov
pushf
mov
push
movl
movb
pushf
lea
jmp
movzbw
mov
cmc
not
movzbw
cmc
rol
bts
bswap
sub
add
and
mov
sar
rol
lea
bt
sbb
jmp
lea
jne
jmp
mov
push
lea
jmp
call
mov
movsbl
push
pop
push
bswap
mov
push
jmp
pusha
xchg
lea
jmp
sete
call
mov
pushf
lea
jmp
sub
clc
jmp
pushf
movb
pushf
pushl
popl
pushf
pushl
movw
push
lea
jmp
movsbw
mov
bswap
xchg
mov
mov
push
push
mov
pusha
movsbl
repz
popl
rcr
pushl
popl
stc
pushl
bts
movl
not
xchg
pop
mov
jmp
shld
cmc
pushf
dec
mov
adc
rol
rcl
add
push
pushf
movb
not
mov
pushl
pushf
pushf
mov
mov
push
lea
jmp
stc
call
movsbl
rol
bts
xor
mov
call
sbb
setns
bt
mov
pusha
sub
call
cmp
jmp
shr
pusha
call
xchg
not
mov
pushf
pushf
mov
call
bt
xchg
pushf
cmp
pushf
bt
mov
clc
sub
jmp
call
push
movsbw
xchg
jmp
movsbw
not
movzbw
mov
jmp
pop
xchg
pushf
not
movw
mov
not
lea
pushf
lea
mov
not
repz
popl
stc
rcl
pushl
popl
pushf
not
movl
rol
rcr
mov
not
btr
stc
bts
rol
cmc
rol
movzbw
rcl
bswap
bswap
pushf
add
shr
neg
xadd
lea
neg
adc
pop
pop
sub
mov
mov
mov
pushf
movw
pusha
pusha
lea
jmp
movsbw
mov
call
call
ror
pushl
push
dec
cmc
cmp
sub
cmc
mov
movw
push
sub
push
mov
mov
push
pushf
movl
lea
jmp
dec
rcr
mov
push
stc
mov
test
add
mov
mov
movb
lea
jmp
call
mov
xchg
push
not
mov
push
pop
push
not
bswap
call
bswap
mov
lea
movsbw
pop
push
pusha
mov
xchg
call
mov
pushf
pushl
lea
call
jmp
movzbw
movsbw
mov
dec
pushf
not
push
dec
adc
setns
sub
call
pushf
cmp
not
cmp
bt
bswap
clc
call
jmp
mov
rcr
mov
call
pusha
mov
pushf
movb
lea
jmp
rcr
jmp
jmp
movb
push
pushl
pushf
popl
jmp
call
add
pushf
pushl
pushf
mov
lea
jmp
jmp
not
mov
cmp
jmp
mov
pushf
push
push
lea
jmp
movw
pusha
mov
pusha
lea
jmp
pushl
popl
pushf
movb
pushf
lea
jmp
jmp
xchg
movb
bt
mov
test
stc
call
lea
jne
call
call
cmp
cbtw
mov
adc
ja
mov
jmp
jmp
sub
call
mov
push
call
stc
mov
btr
rol
inc
bswap
shld
call
pushf
cld
push
pusha
rep
test
pushf
movzbl
rol
mov
add
bt
shrd
cld
mov
call
mov
mov
movzbw
mov
pusha
divl
lea
jno
mov
call
mov
movsbw
jmp
mov
movzbw
pushf
movsbw
xchg
pop
not
not
lea
push
mov
movsbl
bswap
push
bswap
push
bswap
mov
jbe
repz
rcl
pushl
pushf
movl
stc
mov
pusha
rol
ror
xor
bswap
bsr
add
shrd
lea
bts
rcr
bswap
sub
jmp
jmp
bt
jmp
call
mov
lea
mov
pushl
not
movzbw
xchg
push
jmp
mov
movb
lea
jmp
pusha
cmc
movb
add
movw
pusha
mov
movb
push
pushf
lea
jmp
lea
mov
pushf
push
mov
movsbl
pop
pusha
movsbw
mov
movzbw
not
push
mov
pop
pushf
mov
pusha
jmp
movl
pushf
mov
pushf
pushl
ret
movsbw
test
bt
movzbl
bts
or
stc
sub
push
not
stc
bts
pusha
pushf
ror
call
and
jmp
dec
jmp
sub
pushf
lea
jne
cmp
sub
push
call
jmp
pushl
mov
movb
pusha
push
lea
jmp
jmp
mov
push
xchg
lea
jmp
mov
push
pusha
lea
jmp
repz
popl
push
jmp
pop
mov
bswap
bswap
movsbl
repz
popl
rcr
btc
pushl
not
pusha
movzbw
movzbl
movl
pusha
rcr
pop
mov
pop
mov
bt
bt
rol
pop
bswap
bsf
bt
movw
dec
add
shl
lea
not
sub
not
lea
mov
movzbw
mov
pusha
push
lea
jmp
rcl
jmp
push
jmp
mov
push
pushf
pushl
lea
jmp
push
pusha
pusha
sub
mov
clc
push
bt
and
push
push
call
xchg
movzbl
pop
movsbw
mov
jmp
pusha
pushf
call
mov
mov
bswap
bswap
mov
bswap
mov
movsbw
pushf
xchg
movsbw
mov
lea
mov
movsbl
pop
mov
pushf
repz
popl
bt
pop
not
pushl
popl
ror
btr
movl
rol
movzbw
call
pusha
pusha
mov
bswap
mov
movsbw
bswap
movl
mov
pop
mov
movw
not
mov
pushf
jmp
test
sub
push
call
pushf
popl
call
pushf
mov
movw
push
movw
mov
lea
jmp
pusha
mov
movb
pushf
mov
pusha
lea
jmp
inc
ror
push
mov
cmc
cmc
bt
test
add
movl
pusha
lea
jmp
jmp
rol
shl
add
rcl
mov
clc
add
push
pusha
pushf
lea
jmp
push
pushf
pusha
mov
pusha
movsbw
lea
push
mov
push
movsbw
call
call
cmc
stc
clc
shl
pusha
mov
push
movb
mov
push
push
push
pushf
popl
call
lea
shl
stc
test
sub
not
pushf
lea
push
push
pusha
lea
jmp
movsbl
dec
and
xor
not
bswap
cmp
lea
xor
shl
adc
bswap
and
sub
btr
mov
clc
stc
add
pusha
call
div
pushf
pushf
jmp
cmc
cmc
and
movzbl
pushf
mov
pushf
sub
jmp
mov
bswap
bswap
movzbl
call
mov
pushl
lea
jmp
pushf
pushl
popl
pushl
mov
movl
lea
jmp
lea
jp
push
pushl
lea
je
bt
clc
clc
xor
cmc
jnp
xchg
cmp
cmc
push
jno
pushf
sub
pushl
pushf
jmp
clc
stc
cmc
not
stc
test
mov
not
movw
test
lea
jno
sub
pusha
stc
movl
and
mov
pushf
push
mov
pushf
jmp
not
mov
mov
jmp
shrd
adc
bswap
or
cmp
rol
push
add
adc
lea
stc
mov
sub
not
pushf
movsbw
bswap
lea
pushf
movw
lea
jmp
push
xchg
bswap
call
xor
push
movw
jmp
mov
call
jmp
add
add
pushl
lea
jne
mov
pushf
or
mov
jmp
pusha
sub
pushf
not
pushf
lea
pushf
mov
lea
jmp
mov
pusha
lea
jmp
pusha
lea
js
ror
pushf
mov
jmp
pushf
pushf
popl
push
mov
pushf
pushl
popl
pushf
lea
jmp
pushf
add
lea
jne
mov
jmp
call
xchg
push
call
cld
mov
push
call
not
movzbw
mov
lea
pusha
mov
lea
mov
lea
mov
bswap
movzbw
pushf
mov
movl
mov
mov
mov
pushl
ret
rcr
cmc
sub
not
bsf
movzbl
stc
stc
pushl
jmp
mov
xchg
push
repz
popl
rcr
bts
pushf
pushl
popl
rcr
ror
bts
movl
movzbl
clc
call
adc
ror
mov
sub
sbb
and
mov
bt
cmc
jmp
call
setl
push
mov
pusha
lea
jp
pushf
pushl
lea
pushl
jmp
lea
call
ror
clc
add
bt
cmp
xadd
lea
bsf
bts
rcl
rcr
sub
pusha
not
lea
push
lea
jmp
test
jmp
pusha
push
pushf
xchg
lea
not
call
mov
movb
pushf
lea
jmp
push
jmp
shl
lea
mov
or
shld
shl
mov
stc
call
not
jmp
stc
adc
mov
shl
shr
mov
bt
push
call
lea
repz
popl
movzbw
rcr
lea
bt
pushl
popl
bt
jmp
call
mov
pushf
pushl
popl
pushf
pusha
push
mov
lea
jmp
pushl
popl
movzbl
rcr
btc
bswap
push
movzbw
movzbl
mov
stc
pushf
rol
bts
jmp
test
sub
cmp
and
pushf
movb
pushf
pushf
popl
jmp
pushf
movsbl
movsbw
mov
cwtl
call
jmp
test
neg
shrd
sub
bts
neg
clc
movzbw
movzbl
stc
cmp
pusha
mov
mov
jmp
neg
pushf
sub
cmp
bt
add
test
pushf
cmc
sub
pushf
push
pusha
movb
mov
movw
pushf
lea
jmp
pushf
popl
pushf
pushl
popl
mov
pushf
pushf
push
lea
jmp
lea
cpuid
clc
clc
cmp
clc
sub
push
stc
pushf
test
cmpl
call
daa
lea
sbb
mov
clc
bt
mov
test
add
push
pushf
mov
pusha
mov
push
pushf
lea
jmp
or
jmp
pushf
movsbw
mov
xchg
stc
bts
jmp
or
pushf
pusha
jmp
sub
cmp
jmp
test
call
pushl
not
mov
call
pushf
movb
neg
pushf
pushl
clc
sub
pushf
cmp
pushf
sub
call
mov
pushf
push
pushf
pushf
popl
pushf
call
mov
call
aam
setnp
sub
movsbl
mov
shl
pop
test
pop
sbb
popf
cltd
pushf
mov
lahf
movzbw
call
pusha
lea
pusha
movl
lea
jmp
stc
not
test
ror
mov
call
pushf
push
pushf
popl
movw
pushf
pushl
popl
pushf
pushl
lea
jmp
pushl
popl
cmc
bt
bswap
push
movl
cmc
stc
call
clc
mov
movzbl
lea
rol
shrd
xchg
bswap
clc
shld
add
sar
rol
mov
pusha
lea
sbb
movsbl
sar
sub
not
movsbl
pusha
lea
movb
pusha
mov
mov
lea
jmp
cmc
sub
pushf
pusha
call
pusha
or
rol
mov
mov
jmp
lea
push
pushf
mov
pushf
repz
popl
call
push
lea
je
bt
bt
xor
ja
stc
pusha
stc
xchg
call
pop
mov
push
pushl
lea
jmp
pusha
pushf
mov
mov
pushf
call
jb
pusha
pushf
xchg
movzbw
movsbw
movzbw
lea
mov
lea
jae
not
push
call
pushl
popl
pushf
lea
jmp
lea
jne
pusha
xor
movb
pushf
xchg
movw
call
mov
push
dec
call
pushf
mov
movw
push
mov
mov
mov
call
dec
mov
cmc
bt
xor
movw
lea
bt
mov
cmp
sub
call
mov
pusha
jmp
call
bts
cmc
btr
sbb
mov
cmp
clc
pushf
add
pushf
lea
jmp
mov
pushf
lea
jne
add
xorb
mov
push
mov
mov
pushf
lea
jmp
pushf
pushl
popl
movb
pushl
pushl
lea
jmp
xor
stc
pushl
rol
pushf
test
clc
stc
add
cmc
pushf
not
bt
jmp
jmp
sub
rcl
lea
mov
stc
bt
add
pushf
lea
jmp
pushf
test
jmp
pushf
mov
push
mov
mov
pushl
ret
movl
stc
mov
bswap
movsbw
ror
movsbw
rol
not
bswap
sub
shrd
add
not
ror
ror
pop
lea
not
movw
add
sub
lea
mov
push
lea
jmp
add
pop
das
xorb
add
push
das
or
das
adc
das
addb
add
dec
das
adc
das
add
dec
das
add
push
das
orb
das
add
dec
das
cmpb
das
add
das
add
das
subb
das
add
push
das
add
dec
das
add
push
das
add
dec
das
add
pop
das
adcb
das
adcb
das
adcb
adcb
add
das
add
das
andb
das
add
das
add
push
das
orb
das
add
push
das
add
das
xorb
das
add
dec
das
adcb
das
subb
das
add
inc
das
add
das
add
push
das
add
push
das
adc
das
addb
das
add
dec
das
add
pop
das
addb
das
add
dec
das
andb
addb
add
das
add
das
xorb
das
adcb
das
andb
addb
das
addb
das
add
push
das
adcb
add
dec
das
add
inc
das
add
pop
das
adcb
or
das
andb
add
pop
das
xorb
add
pop
das
add
dec
das
andb
das
addb
das
orb
das
adcb
das
add
das
add
pop
das
adcb
das
subb
das
orb
das
subb
das
add
das
andb
cmp
das
add
push
das
add
das
cmpb
add
das
adcb
das
add
pop
das
orb
das
orb
das
add
inc
das
add
dec
das
add
inc
das
add
dec
das
adcb
das
add
sbbb
das
add
das
xorb
das
add
dec
das
add
push
das
subb
das
add
dec
das
add
das
orb
xorb
das
add
dec
das
add
pop
das
xorb
das
add
dec
das
add
pop
das
sbbb
das
add
dec
das
adcb
das
xorb
das
add
dec
das
add
push
das
add
pop
das
xorb
das
add
dec
das
add
dec
das
add
das
xorb
das
add
dec
das
add
dec
das
add
das
xorb
das
add
dec
das
addb
das
add
push
das
xorb
das
add
dec
das
add
das
xorb
das
add
dec
das
sbbb
das
xorb
das
add
dec
das
add
dec
das
add
das
xorb
das
add
dec
das
add
push
das
xorb
das
add
dec
das
adcb
das
cmpb
das
add
dec
das
add
pop
das
xorb
das
add
dec
das
adcb
das
add
das
andb
add
dec
das
xorb
add
das
adcb
das
adc
das
xorb
addb
das
add
push
das
add
push
das
adcb
das
cmp
das
addb
das
add
das
add
inc
das
cmpb
das
add
push
das
adcb
das
add
dec
das
add
pop
das
xorb
xorb
das
add
inc
das
add
pop
das
cmp
das
add
das
and
das
adcb
addb
das
add
das
add
pop
das
andb
das
add
das
andb
xorb
addb
adcb
add
das
andb
add
push
das
add
dec
das
andb
xorb
das
orb
orb
das
add
push
das
add
dec
das
add
inc
das
shr
sub
stc
setb
shl
mov
cmp
add
mov
clc
bsr
add
movsbl
push
mov
movzbw
dec
sbb
cmc
sub
sar
add
rol
pop
mov
bts
ror
shl
neg
ror
ror
pushf
neg
add
pop
movzbl
jmp
movb
cld
pushf
push
lea
jge
rep
stc
rcl
movzbl
pop
sbb
sub
pop
std
popf
push
push
lea
jmp
push
mov
not
push
mov
not
call
bts
shl
mov
sbb
adc
dec
mov
cmc
rcl
cmc
sbb
mov
stc
call
sub
pusha
pushl
bt
stc
shr
pushf
push
call
mov
pushf
movb
pushf
mov
pushf
movb
jmp
not
mov
lea
mov
pushf
movsbl
pushf
repz
popl
stc
not
clc
pop
pushl
popl
rol
xchg
movl
pusha
rcl
pop
bts
mov
pushf
stc
pushf
rol
or
sub
bswap
bswap
add
rol
rol
call
bswap
mov
bt
push
call
call
add
rcl
clc
lea
sbb
sub
not
jmp
repz
popl
mov
pushl
popl
rcl
movl
ror
movsbl
mov
pop
xchg
bswap
rol
xadd
pushf
shl
pushf
bswap
rol
ror
jmp
mov
pushf
lea
jmp
cwtl
mov
call
pusha
pushl
call
lea
pushf
pushl
push
pushl
lea
jmp
pushf
pushl
popl
mov
movb
push
pushf
lea
jmp
add
mov
pushl
pusha
pushf
mov
movw
pushf
lea
jmp
cmp
pushf
sub
call
pushf
mov
lea
mov
call
pusha
push
pushf
mov
pop
mov
movsbl
movzbw
pusha
mov
movw
mov
not
bswap
mov
pushf
lea
pushf
call
call
lea
call
pushf
sub
pusha
pusha
xchg
jmp
push
pushf
jmp
movb
pushl
popl
mov
pushf
movw
lea
jmp
mov
pushf
popl
jmp
jmp
call
bts
sub
shrd
mov
call
pop
not
push
jmp
mov
call
mov
call
pop
jmp
popl
pusha
mov
lea
jmp
mov
mov
movw
repz
popl
cmc
push
mov
call
lea
jne
pusha
push
jmp
movsbl
push
movsbw
lea
push
mov
push
call
xchg
call
pushf
xchg
movsbw
pusha
mov
call
pushf
mov
push
lea
jmp
pushf
popl
pusha
push
jmp
inc
daa
adc
shl
mov
bsr
mov
bt
clc
stc
add
push
pusha
movb
mov
pushf
pushf
lea
jmp
mov
pusha
pushf
movl
lea
jmp
mov
push
call
dec
mov
push
cmc
shr
mov
mov
pushl
add
pusha
movb
jmp
push
lahf
movb
movzbw
mov
movb
push
pushf
mov
call
cmp
bt
sub
pusha
pusha
mov
mov
mov
movb
pushf
push
mov
mov
mov
pushf
lea
jmp
sub
call
clc
mov
stc
add
jmp
jmp
sar
and
movzbw
mov
pusha
push
push
mov
sub
jmp
mov
pushf
mov
call
jmp
sub
mov
test
cmp
add
pushf
pusha
lea
jmp
pusha
jmp
mul
call
jmp
pushf
mov
jmp
inc
mov
cmp
add
jmp
stc
add
jmp
xchg
pushf
movl
pushf
pushf
mov
push
pushl
ret
call
test
cmc
rol
mov
pusha
xchg
clc
xor
cmc
stc
xchg
call
lea
mov
rcr
mov
push
call
shld
shr
clc
mov
and
add
not
pushf
mov
pushf
mov
pushf
lea
jmp
movzbl
mov
not
bswap
lea
mov
mov
call
jp
pushf
pushf
mov
movb
pusha
mov
call
bswap
pushf
popl
movsbw
mov
movzbw
pop
mov
mov
lea
push
movb
std
jmp
not
not
mov
pop
pusha
mov
xchg
mov
movzbw
not
push
mov
pushf
movsbl
not
jmp
not
mov
lea
mov
bswap
xchg
mov
xchg
repz
popl
push
call
add
movw
lea
jo
mov
push
pushf
mov
push
mov
movb
pusha
lea
jmp
pusha
dec
cmp
xor
jmp
mov
push
movb
mov
pushl
ret
pushf
add
pushf
lea
jmp
rcl
cmc
mov
shl
mov
clc
call
dec
call
call
mov
movsbw
pushl
jmp
movsbw
lea
repz
popl
btr
bswap
rcl
push
pushl
popl
pop
movzbw
bswap
push
movl
jmp
bswap
pop
movsbw
repz
popl
btr
pushl
popl
xchg
rcl
movl
cmc
pushl
stc
mov
ror
lea
btc
rol
shrd
btr
bswap
adc
or
sub
add
xor
lea
not
sar
rcr
movzbl
sub
pusha
movzbl
movsbw
lea
pusha
lea
jmp
mov
lea
pushf
mov
mov
pushf
mov
pusha
mov
pushf
mov
pushf
lea
jmp
movb
push
mov
push
pushf
mov
push
pushl
ret
pushl
pushl
popl
pushl
lea
jmp
bt
cmp
add
cmp
mov
jmp
mov
decl
mov
jmp
mov
movl
movsbw
rol
adc
push
xadd
bswap
xchg
sub
add
bsf
lea
bts
ror
rol
sub
jmp
push
bts
pushf
xor
mov
stc
test
shl
mov
push
call
test
lea
bt
bt
sub
pushl
movb
mov
pushl
lea
jmp
xchg
movzbw
jmp
mov
bswap
pop
mov
pushf
mov
movzbw
jmp
movl
pushf
popl
jmp
add
call
movsbw
movsbw
shl
cmc
rdtsc
call
pusha
lea
pushf
call
jmp
push
push
jmp
test
test
and
jmp
push
jmp
lea
jne
stc
jmp
mov
btr
shl
pushf
add
neg
cmc
pusha
btc
xor
lea
movzbw
ror
mov
cmc
bt
shl
cmc
shr
push
or
cmp
cmc
xor
pushf
pusha
push
call
mov
pushl
push
push
pushl
lea
jmp
cmc
cltd
das
mov
bsr
push
shld
mov
or
rcl
mov
cmc
add
cmp
cmc
pusha
shrd
pusha
pushf
mov
movb
lea
jge
pushf
jmp
mov
pushf
movb
pushf
pushf
pushl
ret
mov
cmc
sub
cmc
shl
push
mov
pushf
pushf
pusha
pushl
pushf
popl
call
pushf
pushl
movl
pushf
push
mov
pushf
movb
movw
pushl
ret
pushf
pushl
popl
movb
pushl
movb
lea
jmp
jmp
not
jmp
jmp
shl
bsf
lea
test
clc
cmp
bt
cmp
pushf
lea
ja
aaa
das
sub
test
mov
lea
dec
bt
ror
lea
rcr
pushf
cwtl
dec
sub
rol
lahf
lea
cmp
shr
sub
and
shl
clc
inc
sub
mov
jmp
pusha
mov
pusha
xchg
jmp
pop
jmp
pushf
pusha
movl
rep
movl
pusha
neg
rol
mov
sbb
pushl
inc
xor
mov
stc
pushl
popf
movb
movb
lea
jmp
ror
call
pushl
popf
pushf
lea
jmp
lea
mov
push
lea
jmp
movl
push
bt
lea
mov
rol
mov
clc
rol
xchg
pushl
bswap
xchg
neg
adc
rcl
add
rcr
bt
rol
stc
lea
sub
stc
sbb
sub
pushf
lea
pushf
pushf
lea
jmp
call
add
push
stc
mov
pushf
sub
call
push
mov
call
btr
rcr
xadd
xor
mov
shl
shl
adc
mov
cmc
stc
stc
cmp
sub
call
pushf
jmp
jmp
call
btc
or
sbb
movzbl
and
setns
add
add
and
btc
bsr
xor
bt
call
movsbw
jmp
mov
push
lea
jne
push
pusha
pushf
popl
pushf
pushl
popl
pushf
mov
pushf
lea
jmp
inc
bt
ror
pushl
neg
movw
sub
cmc
cbtw
movw
cwtl
stc
cmp
sub
pushf
mov
push
mov
push
lea
jmp
jmp
sub
pusha
pushf
lea
jne
clc
sub
jmp
mov
pushf
not
mov
call
stc
movzbw
lea
mov
mov
pusha
pop
pop
rol
sub
bswap
xadd
shrd
add
inc
and
add
sub
lea
clc
inc
shl
sub
pusha
jmp
mov
jmp
mov
pusha
pop
lea
jb
mov
call
push
mov
pushf
pusha
lea
jmp
pushl
popl
push
push
mov
lea
jmp
stc
call
pushf
pushl
popl
pushf
lea
jmp
shrd
shl
dec
mov
cmc
pushf
pusha
movb
add
call
mov
movsbw
not
pusha
jmp
pushl
popl
movb
lea
jmp
mov
pop
mov
pushl
call
sub
call
call
push
xchg
pushf
movsbw
pop
push
pushf
pushf
mov
pusha
mov
bswap
mov
lea
lea
mov
push
mov
mov
mov
push
mov
movsbw
xchg
repz
popl
pusha
movzbw
pushl
popl
pushl
pushf
ror
movl
stc
btr
mov
clc
rol
shl
bswap
shl
shr
bsf
xor
add
btc
lea
lea
movzbw
btr
bsf
sub
not
mov
push
mov
pusha
lea
jmp
jmp
jmp
bswap
cmc
add
jmp
mov
movw
call
call
pushf
popl
pushf
call
sub
cmc
call
push
push
mov
push
mov
xchg
pusha
lea
bswap
mov
pushl
lea
mov
repz
popl
btc
bswap
btr
pushf
pushl
popl
pushf
movl
ror
pushf
btc
mov
mov
rol
shr
ror
cmc
pushf
bswap
dec
add
pushf
xadd
bsr
lea
neg
shl
cmp
and
sub
push
pushl
push
not
lea
pushf
lea
jmp
pusha
call
mov
mov
jmp
add
call
test
neg
push
and
mov
or
inc
jmp
pushl
pusha
not
mov
call
pushf
jmp
mov
jmp
push
movl
mov
push
movw
lea
jmp
mov
pusha
push
lea
jmp
call
call
pushf
popl
movw
call
jmp
pushf
popl
call
movsbw
xchg
movzbw
movsbw
not
pushf
mov
pushf
pusha
mov
pop
call
pushl
mov
push
call
pushf
mov
movl
pusha
push
call
movzbw
call
call
mov
movb
pushf
pushl
lea
jmp
pushf
jmp
mov
pushl
mov
call
pushf
jmp
mov
push
lea
jle
pushf
pushf
pushf
pushl
popl
pushf
mov
pushf
pusha
lea
jmp
sub
push
shl
pusha
push
mov
lea
je
pushf
movb
pushf
popl
jmp
pusha
not
mov
stc
mov
not
push
pushf
cmc
and
pushf
push
mov
jmp
stc
call
pushf
call
push
inc
mov
push
pusha
call
bswap
mov
call
pushf
mov
mov
movsbw
movsbw
pusha
mov
pop
lea
pusha
mov
lea
lea
jns
push
bswap
push
mov
pushf
pushf
call
not
mov
bt
add
pushf
lea
jmp
mov
lea
jmp
lea
pusha
mov
call
mov
call
stc
rol
shl
bswap
adc
stc
bt
add
add
xchg
pushf
mov
lea
clc
sub
push
pop
bswap
mov
pushf
push
push
lea
jmp
add
shr
xor
pop
xadd
lea
sbb
cmp
sub
bswap
pushf
lea
mov
mov
pushf
mov
lea
jmp
mov
movsbw
xchg
movsbl
xchg
mov
pop
jmp
popl
pusha
pushl
lea
jmp
shld
clc
btr
or
notl
pushf
movzbw
neg
bts
mov
movw
call
lea
mov
pusha
pushf
pusha
lea
jmp
jmp
mov
setg
repz
popl
setb
setnp
pushl
popl
setge
stc
movl
stc
call
repz
popl
lea
pushl
popl
bt
movl
not
mov
rcr
rol
lea
bswap
shrd
and
xor
call
rcr
add
bt
bsr
bts
movzbw
lea
stc
shl
sar
pop
sub
jmp
jmp
call
not
call
sub
cmp
shr
jmp
xchg
movsbw
bswap
repz
popl
btr
rol
rcl
xchg
pushl
pusha
rol
bts
movl
movsbw
mov
xchg
cmc
bswap
rol
rol
dec
not
bswap
shr
push
pushf
add
bswap
neg
bsr
btc
lea
shrd
sub
mov
lea
jmp
pushf
lea
pushf
lea
jmp
pusha
not
not
dec
movsbw
add
adc
stc
mov
test
pushf
movb
add
lea
jne
pusha
pushf
mov
pushf
pushl
push
pushf
lea
jmp
pushl
popl
pusha
add
jmp
pusha
mov
movw
xchg
jmp
pushf
lea
call
xchg
pusha
mov
call
lea
movzbw
movzbw
mov
pop
push
push
xchg
push
xchg
xchg
pushf
movsbw
xchg
call
movw
mov
movzbw
mov
lea
push
xchg
lea
jne
lea
movzbw
push
push
movzbw
not
pushf
mov
not
mov
push
call
pushf
pushf
mov
pusha
pushf
lea
jmp
push
lea
not
jmp
pushf
bswap
mov
pop
pop
mov
not
call
add
sete
clc
jmp
lea
je
stc
pushf
xor
pusha
call
mov
mov
call
push
jmp
lea
call
lea
mov
movw
pushf
mov
pop
not
jmp
bt
test
xor
pushf
clc
bt
bt
xchg
stc
cmc
cmc
ror
pusha
pushf
call
pusha
lea
mov
movb
pushf
jmp
cmc
mov
not
sar
movsbw
sub
bswap
dec
setp
call
push
pushf
pushf
pusha
mov
jmp
pusha
inc
pushf
pushl
bt
ror
call
pushf
popl
pusha
push
call
mov
mov
jmp
call
clc
cmp
cmc
sub
clc
shr
pusha
jmp
adc
mov
mov
stc
clc
add
pusha
pushf
lea
jmp
inc
lea
ror
add
ror
stc
bswap
sub
lea
jnp
neg
call
pushl
popl
pushf
movw
push
pushf
lea
jmp
setle
pusha
pushf
not
mov
push
lea
jmp
shld
sbb
mov
bts
bsr
shr
mov
call
pusha
mov
bswap
mov
mov
pusha
pushf
jmp
push
mov
push
mov
mov
push
pushf
pushf
popl
movb
push
push
call
pusha
xchg
pop
call
mov
pushf
pushl
not
mov
pop
lea
push
lea
push
not
movsbw
push
call
bswap
xadd
xchg
mov
jmp
movzbl
mov
movw
mov
push
mov
pushf
pushf
push
mov
lea
jmp
push
push
pushf
mov
movw
pushf
lea
jmp
pushl
pushl
popl
mov
mov
lea
jmp
pop
push
push
mov
movsbw
pushf
mov
mov
lea
not
pushf
mov
movzbw
movzbw
push
pushf
mov
movsbw
pusha
bswap
movsbw
mov
mov
push
pop
pushf
repz
popl
not
clc
pushl
popl
ror
movl
pusha
mov
cmc
cmc
lea
rol
rol
pop
add
movzbw
bswap
shld
movsbw
or
rcl
add
btr
clc
bts
lea
shl
bsf
sub
mov
mov
pusha
push
pusha
movb
lea
jmp
call
cmp
mov
xchg
mov
jmp
pushl
popl
pushl
pushf
movb
pushf
lea
jmp
pushf
pushf
mov
pusha
movzbl
mov
lea
not
pushf
lea
mov
not
mov
pushf
pusha
push
mov
jmp
mov
mov
mov
pushf
popl
movb
call
call
jmp
call
mov
call
lea
pusha
pushl
jmp
lea
pushf
mov
mov
bswap
repz
popl
bswap
rcr
movzbw
pushl
popl
bts
pop
movl
pushf
rol
bt
ror
mov
btr
rol
xchg
lea
inc
bswap
mov
dec
call
mov
push
call
call
call
shld
lea
js
push
pushl
push
mov
pusha
call
bt
shl
sar
bt
mov
bt
cmp
call
bt
stc
ror
call
jmp
rcl
rol
movzbw
bt
clc
not
cmc
sbb
add
call
mov
pusha
mov
push
mov
jmp
pushf
lea
pop
mov
jmp
pushf
jmp
clc
bts
pushl
popl
rcr
bswap
rcl
movl
call
mov
movb
lea
jmp
dec
clc
movb
test
sub
clc
jmp
mov
not
pushf
call
pushf
push
pushf
xchg
call
call
pushf
call
or
cmc
test
movzww
cmc
jmp
mov
pushf
mov
pushf
lea
jmp
sar
rcr
or
mov
jmp
mov
pushf
popl
lea
jno
pusha
pusha
pushf
pushl
popl
pushf
lea
jmp
mov
lea
movzbw
not
jmp
jmp
