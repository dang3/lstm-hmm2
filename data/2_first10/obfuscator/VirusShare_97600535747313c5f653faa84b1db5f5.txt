adc
inc
ss
and
cwtl
jg
inc
mov
je
add
adc
adc
out
cmp
jb
mov
lret
mov
jo
xlat
add
and
lea
push
movsb
and
push
into
les
mov
in
xchg
test
sahf
ror
sahf
fs
jmp
xchg
and
imul
add
sbbb
int3
and
or
enter
cmp
lret
mov
enter
rcll
ss
or
loopne
test
popf
div
jo
cmp
adc
decl
fsts
call
pushf
or
mov
andnps
xor
or
inc
out
pop
cmp
jecxz
inc
int3
aam
iret
out
push
jae
rorb
ja
test
mov
pusha
xor
push
mov
icebp
dec
lods
lahf
loop
imul
setae
push
adc
sbb
bt
mov
sbb
lahf
add
sub
clc
push
lea
rol
xor
jge
push
sbb
push
shl
rol
adc
sub
movsbw
call
adc
stos
jnp
sub
mov
sub
in
inc
pop
imul
out
or
pop
add
dec
sub
and
mov
or
and
vpmulhuw
ret
lahf
aad
push
dec
fists
bound
adc
lret
inc
fsubrs
test
mov
cwtl
ljmp
clc
pushf
add
add
js
bt
cmp
setne
pusha
lahf
lea
lea
cwtl
movsbl
mov
mov
call
push
movl
pushf
mov
pushf
pushf
movl
mov
pushf
lea
jmp
repz
jmp
lods
xlat
jbe
mov
fildll
adc
or
cli
cwtl
jns
les
mov
aaa
mov
es
pop
sbb
xor
cwtl
out
pusha
icebp
dec
or
and
mov
cld
insb
add
rolb
nop
in
scas
inc
jnp
push
xchg
call
popa
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
call
mov
clc
add
clc
movb
jmp
adc
pusha
pushl
mov
pushl
lea
call
jmp
nop
lret
cmpsb
cwtl
enter
adc
jle
and
data16
cwtl
out
sbb
jg
push
cltd
push
insl
mov
cli
or
pop
mov
inc
subb
int
and
pop
push
dec
lods
aas
mov
dec
adc
mov
repnz
loope
mov
ja
loopne
int
xor
fisttps
popf
inc
jmp
jmp
bt
test
call
pusha
lea
ja
pushf
imul
clc
add
push
push
push
movb
lea
jmp
jmp
cmc
add
mov
pushf
lea
jmp
cmc
test
call
mov
push
fistps
pop
cli
in
jle
adcb
jbe
pusha
jne
adc
add
xor
fnstcw
sbb
rorl
ja
test
mov
push
or
les
daa
pop
decb
subl
mov
xor
shll
je
cmp
loopne
repnz
ret
jl
cld
filds
fsub
mov
pop
push
addr16
loop
dec
inc
cmp
fs
dec
call
and
inc
pushl
popl
pusha
movb
pushl
ret
jmp
add
mov
inc
out
enter
test
stos
shrb
push
insl
sahf
in
cmc
sbb
ret
in
jle
or
adc
dec
shrl
jg
jno
mov
mov
sub
jle
cli
leave
out
out
inc
mov
scas
add
xor
sub
sbb
jmp
repz
imul
xchg
or
inc
and
mov
outsl
push
push
push
or
and
mov
sub
inc
lea
or
sbb
pop
fistl
popa
add
ficoms
jp
dec
mov
jns
leave
sbb
pusha
sub
repnz
gs
lock
xchg
inc
mov
mov
add
cmp
lods
mov
call
das
sahf
loope
test
in
xor
sbb
xor
jnp
pop
jb
popa
lret
addr16
ret
xchg
fs
addr16
test
popa
xor
int
cmp
dec
push
xchg
call
icebp
ret
dec
ficoml
iret
jmp
xchg
cmp
inc
fldcw
pop
xor
adc
sbb
mov
mov
aas
sbbb
pop
cmp
insl
cmp
push
pop
adc
xchg
or
popa
xchg
fdivl
mov
sbb
push
enter
inc
or
inc
inc
data16
mov
mov
or
mul
cmp
mov
cmp
xor
les
lods
loop
lods
loop
scas
xorb
dec
or
in
cld
push
cmc
cmc
or
pushl
movw
lea
je
push
movsbw
bswap
mov
movsbw
lea
movzbl
mov
movzbw
lea
push
movl
pushf
mov
push
movb
pushl
popl
mov
pushl
ret
movb
lea
call
push
lea
jne
not
mov
pushf
pushl
pusha
pushf
lea
jmp
out
mov
inc
iret
and
push
inc
cwtl
dec
enter
inc
mov
nop
std
mov
xchg
mov
ss
pminsw
or
xor
xor
xorl
push
mov
sub
in
or
lea
inc
in
std
in
or
dec
out
push
fcomps
das
bound
sub
cmc
mov
inc
jl
stos
call
sbb
cmp
jbe
lea
jne
pushf
bswap
pushf
bswap
mov
pushl
mov
pushf
lea
jmp
mov
pushf
mov
lea
jmp
lahf
and
mov
test
pusha
clc
call
neg
bt
sub
pushf
clc
not
pushl
pushf
neg
pushf
pushl
shr
lea
jo
pusha
mov
lea
je
jmp
adc
fcmovb
lods
leave
mov
pop
sbb
inc
cli
fisttpll
jle
or
push
addr16
popw
cmp
clc
mov
lcall
xor
push
jl
lock
aas
stc
les
insl
lods
cltd
lods
out
pop
repnz
mov
fldcw
stc
xchg
leave
movsb
stos
push
cmpsl
push
ja
mov
mov
mov
shrl
mov
jge
mov
dec
add
or
arpl
out
or
adc
fwait
iret
fs
sti
jecxz
scas
flds
add
mov
lea
je
jmp
push
movl
push
lea
jmp
pushf
lea
jne
not
mov
pushf
jmp
test
cmp
pushf
movw
movb
pushf
lea
jae
cmc
cmp
push
pushf
lea
jae
jmp
lods
lock
mov
jns
cmp
mov
xchg
arpl
lret
sbb
and
xchg
xor
or
add
scas
sbb
in
insb
jno
xor
sbb
insb
add
mov
jecxz
add
subb
mov
cmp
andl
add
push
ret
xchg
cwtl
call
loope
mov
das
mov
mov
stos
pop
push
in
sub
insl
fwait
lret
inc
inc
aad
pusha
aad
inc
adc
sub
fimuls
stc
loope
cld
in
addl
fnstenv
jle
lock
pop
sub
ret
imul
fcoms
mov
test
mov
sbb
dec
repz
cmc
or
xchg
nop
xlat
inc
mov
test
mov
repz
adcl
cmp
sub
into
adc
add
mov
and
add
imul
push
jg
out
in
movzbl
pop
push
pushl
ret
xor
popa
cli
imul
mov
push
daa
cli
mov
sub
fstpt
das
out
test
jecxz
aam
in
jg
inc
pop
aaa
push
xchg
imul
out
mov
outsb
ret
pushf
ss
and
add
iret
test
icebp
vmovdqu
mov
call
fucomip
or
sbbl
pusha
call
lea
jmp
lea
jae
not
jmp
jmp
cmp
sbb
ds
bound
push
jnp
and
lds
ret
jo
ret
in
pop
out
inc
std
adc
pop
sti
push
jecxz
imul
mov
jmp
sub
mov
inc
jae
jle
push
ret
cmovp
sbb
arpl
jle
lock
nop
dec
in
push
adc
push
aam
stc
mov
test
pusha
pushf
pushf
lea
je
bt
add
push
lea
jmp
fsts
js
bound
lock
fs
pop
lret
jp
stc
insb
ret
push
dec
rolb
sbb
mov
xorb
addb
mov
sub
loopne
cli
pusha
daa
lock
xchg
xchg
out
in
cmp
aaa
into
inc
sbb
loop
mov
mov
add
call
jne
gs
xor
fs
insb
add
mov
pushl
ret
repnz
jge
jbe
rorl
add
dec
std
rolb
and
movsb
xor
mov
mov
repnz
loop
jg
out
inc
jl
ret
shrb
adc
and
push
divl
loope
or
push
in
in
movsl
pop
pop
stos
push
mov
and
movsb
bnd
or
jnp
xchg
jle
xor
fidivl
fwait
into
push
xor
fs
aas
and
repz
js
in
dec
jp
pop
dec
mov
shl
sti
inc
lahf
es
repnz
lds
sub
mov
sbb
insb
mov
fimull
add
dec
popa
call
jecxz
dec
cltd
shld
shl
shrb
sbb
cmpsb
xor
lods
inc
popa
push
mov
and
jnp
ljmp
xchg
inc
sub
mov
nop
js
push
lret
push
push
jmp
sbb
loope
or
lock
mov
lds
push
xor
mov
jne
xor
popw
jo
push
mov
and
and
add
cmp
pushf
adc
lds
xorb
fidivrl
and
dec
xchg
mov
mov
lret
push
sarb
pop
pop
xchg
xchg
sub
cs
inc
gs
outsl
xchg
insb
jecxz
mov
in
bound
cmpsl
hlt
in
push
xchg
imul
jae
sub
sbb
jg
mov
lret
push
lret
sub
xor
clc
fwait
sub
cmpsl
cwtl
mov
xor
pop
pop
jle
outsb
jg
popf
xor
gs
imul
dec
cmpsb
xor
or
lds
mov
or
inc
ficoml
xchg
or
jno
xchg
xchg
out
repz
stc
ljmp
cld
out
outsb
pushl
fs
dec
cmp
pop
and
daa
sbb
cmp
sub
adc
ljmp
or
arpl
add
jnp
daa
mov
jns
mov
jg
inc
mov
je
cmp
test
add
mov
sub
jns
pop
mov
out
sub
les
scas
jns
in
inc
data16
lds
dec
lret
mov
cltd
sub
cmp
xchg
jmp
pop
pop
add
in
jecxz
fsubl
sbb
rcl
push
shll
push
sub
or
pop
stos
push
pop
lea
pop
mov
lods
xchg
ret
dec
cmp
test
push
dec
and
dec
mov
jmp
and
lds
sub
cs
insb
xchg
pop
int
pop
xchg
mov
ljmp
std
pop
jmp
lcall
jno
cmp
nop
jmp
jmp
inc
pushf
fsubr
mov
stos
popa
jecxz
sub
mov
push
test
mov
jge
pop
jmp
sbb
jb
popa
stos
ss
mov
add
cmc
out
cmp
enter
sbb
jmp
jno
xchg
jns
lret
icebp
cmp
stc
jb
pop
xchg
and
lds
push
cmp
imul
dec
fisubl
push
or
mov
sbb
adc
cmp
out
add
lock
insb
and
xor
pop
jmp
mov
push
and
imul
shlb
sbb
or
mov
std
mov
adcl
and
xchg
int
adc
inc
xor
std
mov
xor
call
mov
idivb
leave
int3
add
xor
push
mov
stc
push
shr
mov
ret
movsl
jnp
movsb
or
filds
ljmp
add
xor
pushl
pushf
movb
pushl
ret
bt
pushf
mov
btr
mov
pushl
push
stc
cmp
push
jmp
movl
pushf
mov
pusha
mov
pushl
pushf
pushl
ret
stc
bt
mov
pusha
pushf
movsbw
shl
add
not
lea
jl
movsbl
bswap
mov
pushf
movb
mov
jmp
push
xchg
not
movzbw
lahf
push
movl
mov
pusha
lea
jmp
dec
pushf
mov
lea
jne
movzbw
mov
stc
test
cmp
call
mov
mov
mov
call
pusha
call
pusha
jmp
movzwl
call
pushf
mov
pusha
pushf
pusha
lea
jmp
lea
jb
test
cmp
pushf
pusha
call
jmp
push
or
push
call
movw
not
push
mov
movb
pushf
pushf
pushf
lea
jmp
inc
jae
inc
push
and
push
mov
dec
fcmove
mov
and
mov
adc
or
sub
xor
add
cmp
push
es
shrb
pushf
mov
cwtl
xlat
mov
push
xchg
sub
and
push
fwait
aad
sahf
mov
jno
lea
js
fbstp
or
sub
lahf
xlat
out
push
sub
popa
push
xchg
xor
data16
push
in
dec
add
jo
jl
data16
call
push
cmp
bswap
lea
bswap
mov
call
call
push
push
push
pusha
pushf
lea
jmp
lods
movb
jmp
lea
ja
movsbl
push
mov
pushl
mov
push
pushl
call
xadd
pushf
mov
clc
mov
rol
ror
sbb
shrd
shr
stc
mov
cmp
test
pushf
or
pushl
lea
je
bsf
shl
add
shld
bts
shl
xchg
sub
movzbw
dec
btr
shr
bt
stc
lea
mov
cmp
mov
add
movsbw
add
cmc
push
shrd
bt
mov
clc
cmp
cmc
shr
bt
cmp
push
call
stc
cmp
call
xchg
movsbw
mov
xchg
pop
movzbw
xchg
mov
call
or
mov
sbb
mov
lret
imul
js
and
fistps
sahf
mov
outsb
loopne
push
mov
loope
mov
xor
or
jbe
mov
stc
xchg
add
mov
add
lds
inc
jbe
mov
push
xchg
mov
enter
push
push
mov
ficomps
repz
test
and
sbb
lret
mov
call
out
into
enter
dec
mov
sbb
test
jnp
je
inc
pop
sub
test
pop
pop
ja
dec
jecxz
xchg
jmp
cs
jnp
sahf
pop
mov
adcb
pop
jb
pop
jg
pusha
and
mov
xor
mov
jecxz
loopne
mov
jnp
jl
popf
inc
push
outsb
std
fwait
test
adc
mov
jmp
sbb
in
int3
testl
push
xlat
lea
mov
insl
or
fcoms
lret
cmp
cmp
clc
out
xor
and
int3
jecxz
sub
push
call
pop
dec
call
lea
jbe
setbe
mov
inc
clc
xchg
cmp
add
xchg
bswap
jmp
orl
ja,pt
popa
shll
ror
mov
fstpt
push
sbb
xchg
mov
jl
scas
shlb
push
cmp
pop
adc
jl
test
enter
sub
fidivrs
pop
cmpl
add
out
mov
dec
push
xor
jg
push
lods
shlb
inc
mov
enter
xor
xor
lahf
push
addr16
test
fidivrs
add
neg
or
rol
neg
neg
test
sub
inc
add
not
or
inc
neg
seto
mov
stos
not
mov
seto
mov
lea
push
mov
lea
call
call
pushf
pusha
pushf
movl
mov
mov
call
stos
push
hlt
enter
lahf
lock
int3
lock
jecxz
movsl
push
mov
mov
mov
adc
rcll
or
mov
xchg
xchg
xchg
into
jno
jae
hlt
filds
add
sub
jns
pop
mov
pushf
push
lea
insb
adc
add
addb
loope
mov
in
inc
push
or
aam
insl
mov
push
mov
mov
fdivrl
xor
mov
dec
pop
call
dec
dec
or
pop
fistps
push
cwtl
sub
int
scas
dec
pop
lret
or
out
add
push
mov
aam
sbb
addl
mov
mov
push
pop
in
aam
jl
add
testb
mov
adc
in
dec
scas
jns
pop
mov
addb
jbe
jnp
hlt
inc
test
popf
clc
add
push
repnz
idivl
mov
es
add
jb
cld
jno
add
and
push
les
cmp
clc
imul
pop
mov
xchg
call
dec
mov
push
not
lods
bt
push
not
cmc
test
call
lea
je
push
sub
stc
call
stc
stc
ror
bt
pusha
neg
clc
call
pop
inc
xchg
shl
mov
xchg
clc
lret
sti
lods
ljmp
sub
xchg
adc
push
xchg
sub
iret
jmp
and
cltd
gs
cmc
jmp
fwait
outsb
xchg
mov
sbb
xlat
lods
mov
adc
nop
or
lret
mov
or
lahf
or
fdivs
dec
loop
mov
xor
insl
add
enter
fdivl
add
mov
dec
mov
dec
pop
pop
or
xchg
inc
xor
mov
pop
and
sub
fstl
popa
pop
gs
inc
mov
push
mov
jnp
cmp
cmp
shll
xchg
clc
enter
out
push
rclb
cs
ds
xor
dec
adc
sbb
or
and
lods
in
xor
sub
sub
mov
in
jnp
insb
or
mov
cmpsb
jns
in
inc
dec
les
pop
shlb
mov
sub
push
jecxz
ret
or
push
ret
out
dec
sti
or
pop
xor
in
incl
outsb
jmp
mov
cmp
rcll
es
wbinvd
adc
push
sbb
cmp
lret
xchg
mov
mov
aad
fadds
mov
xchg
mov
bnd
sbb
push
push
and
ds
pop
cmc
scas
pop
xchg
insb
add
popa
push
dec
adcb
hlt
gs
sbb
fimuls
add
add
test
test
jmp
ret
sub
jo
cmp
add
push
inc
inc
clc
sub
lcall
mov
aad
xor
shrb
xchg
push
mov
imul
aad
jecxz
and
and
rolb
push
add
dec
adc
fidivs
xor
add
movsbl
push
movsbw
cwtl
mov
not
lea
mov
movw
mov
xchg
movb
jmp
cmpb
call
call
mov
xor
cmc
test
and
fs
mov
pop
mov
stc
mov
dec
jno
jnp
jnp
arpl
iret
adc
xor
rol
adc
aam
xorb
neg
mov
sub
stc
syscall
xchg
aas
jae
sub
out
mov
cltd
add
adc
or
aad
xor
mov
cmp
cmp
bt
push
sub
cmc
clc
pushf
cmp
pushf
push
jmp
jg
cmc
mov
mov
jbe
mov
js
test
inc
push
xchg
pop
lods
inc
cmp
mov
pusha
sub
jge
or
scas
loope
xor
in
es
sbbb
xchg
inc
mov
adc
pop
into
addr16
sti
add
xchg
mov
mov
adcb
pop
cmc
mov
scas
xor
aas
add
jno
or
incl
cmp
call
inc
cmp
fwait
out
pop
pop
fsub
rcll
cmp
cmpsl
aaa
dec
cmp
aaa
lods
maxps
inc
fs
jns
daa
inc
mov
xor
das
push
sub
lods
aam
test
jb
ja
stos
jle
daa
pushf
shl
xor
jl
es
call
xchg
call
push
movl
push
movl
push
lea
jmp
cmc
ror
xchg
lods
jo
shll
repnz
or
and
sub
into
mov
lahf
inc
aas
lds
dec
mov
cmpsl
in
dec
pop
cwtl
psubq
xchg
out
push
dec
faddl
jns
es
push
mov
ret
imulb
push
sub
push
push
call
aad
sub
ja
data16
mov
dec
je
inc
dec
jg
in
lods
andb
sub
mov
test
pushf
in
adc
lret
loope
and
xchg
rcrl
cwtl
dec
int3
xchg
repnz
rcr
mov
fsubrs
push
xor
sbb
imul
stos
adc
cmpsl
testb
ss
nop
fcomip
pop
mov
push
add
movsb
in
fisttps
push
outsb
scas
push
cmpsb
shrl
inc
push
mov
mov
push
mov
push
imul
and
jbe
mov
shrl
loope
jle
pop
aaa
shll
arpl
adc
lods
pop
inc
mov
inc
dec
mov
inc
and
adc
xor
cmpsb
mov
fucomp
arpl
push
fcmove
les
mov
adc
jae
cs
xor
es
scas
fnstcw
daa
sub
cs
fsubrl
pop
daa
sbb
movsl
sbb
pusha
movl
movw
pushf
pushf
push
lea
jmp
cmc
cmp
pushf
pushf
lea
jae
test
call
push
call
xchg
dec
shrd
setno
mov
shr
clc
inc
mov
movw
call
call
add
movl
add
jl
adc
add
das
adc
add
adc
xor
adc
add
sub
add
call
movl
call
xchg
adc
cmp
fistps
lcall
cltd
mov
mov
push
sbb
adcl
mov
adc
jl
or
push
pop
inc
cmp
add
xlat
outsb
xchg
cmpsl
mov
jmp
push
push
scas
sahf
repz
sbbb
inc
subl
xor
push
clc
fwait
fiadds
adc
out
jmp
cmp
hlt
in
mov
cmp
pop
xchg
into
call
ret
data16
fyl2x
aam
rol
jo
or
out
or
ret
xor
pop
add
or
sbb
pop
fdivr
int
inc
nop
pop
xchg
mov
sub
sub
cld
mov
inc
fcoml
aad
add
xlat
sub
pop
leave
xorl
cmpl
fidivs
fs
ja
pusha
lea
jle
push
pushf
imul
clc
jmp
pop
pop
addr16
push
pop
out
sub
loop
movsb
cmc
and
ja
dec
fimuls
jns
ja
test
gs
sub
testl
or
ret
mov
add
fldl
or
mov
jge
sarb
popf
push
lret
jecxz
sahf
bound
leave
xor
mov
leave
sub
bound
xor
fldl
out
inc
cwtl
sub
ss
ret
cltd
dec
call
fimuls
mov
test
mov
call
add
add
loopne
add
push
add
loopne
add
or
add
add
add
inc
sbb
add
add
pushf
lea
jne
btr
mov
clc
sub
bts
cmp
mov
test
test
bt
test
sub
cmc
pushl
bt
cmp
pushf
pushf
call
mov
or
popf
dec
add
ljmp
jge
adcb
loope
add
mov
fidivl
lahf
mov
or
adc
mov
inc
ja
nop
loop
pop
mov
lds
pop
cltd
ret
dec
xchg
push
push
push
push
shll
insl
cmpl
ret
mov
rcl
jg
dec
sahf
ror
and
jecxz
push
incb
mov
cmp
mov
testl
pop
das
les
cld
sbb
jbe
mov
and
xlat
xchg
lds
inc
mov
mov
cmp
add
mov
jmp
ja
mov
loopne
popa
push
inc
push
sub
dec
call
popa
cmc
mov
xchg
sbb
push
mov
push
enter
push
clc
or
xchg
push
push
xor
jne
arpl
imul
mov
sbb
fidivs
aaa
push
ror
cmp
mov
hlt
xchg
cmp
pop
iret
loopne
mov
stos
mov
insl
div
rorl
shrb
leave
xchg
lret
lods
adc
imull
pop
push
mov
testl
hlt
jb
push
cmpl
call
pop
adc
inc
mov
or
inc
clc
jnp
add
jg
ljmp
outsl
cltd
int3
xchg
dec
cmpsb
mov
in
out
and
mov
fisubrl
push
mov
cli
jbe
vunpcklpd
add
push
push
dec
sub
and
out
orb
add
into
mov
arpl
jbe
push
insb
or
cmpsl
ja
xchg
mov
push
movsb
in
movsb
sub
ret
stc
pop
or
loopne
sub
pop
loope
or
mov
pand
sbb
stc
dec
scas
rcrb
stc
bound
fwait
cmc
gs
xor
mov
test
stc
in
push
xchg
xchg
push
sbb
lods
mov
xor
xchg
call
cmp
out
outsl
sbbb
cmpsb
shrl
xchg
enter
add
sbbl
popf
mov
lret
loop
arpl
negb
xchg
nop
pop
inc
push
mov
mov
sbb
and
ret
into
mov
rclb
fimull
pop
sub
jmp
ficoms
clc
in
jo
mov
or
popf
dec
jmp
out
sahf
xchg
add
mul
xchg
insl
jecxz
mov
push
cli
gs
and
cmpsl
add
xchg
jecxz
repz
mov
test
jns
scas
fcomps
jge
sbb
push
inc
sub
cld
rcrb
out
xor
sbb
shrb
and
jg
test
or
mov
sbb
mov
add
adc
test
mov
sbb
mov
mov
out
insl
mov
or
xchg
test
fisubrs
jo
and
adc
lods
mov
sub
sbb
hlt
push
popf
daa
cmpl
inc
int3
fcomip
das
out
enter
mov
dec
pop
nop
or
cmpsl
ljmp
aas
mov
mov
xor
adc
mov
scas
add
call
out
add
pusha
call
mov
push
inc
xchg
mov
loop
pop
mov
cltd
clc
adc
cwtl
out
xor
xchg
push
xor
scas
cmp
shl
add
cmc
add
insl
lock
push
scas
jle
popa
jg
xchg
hlt
daa
in
or
arpl
out
push
push
jnp
lods
mov
ljmp
cmp
nop
xchg
inc
mov
imul
outsb
or
sub
xchg
sub
call
xor
xchg
mov
or
add
stc
call
movb
lea
je
bt
test
jmp
call
add
fcomi
mov
call
add
fsubrs
xchg
sbb
mov
xchg
fstl
lea
mov
xchg
lea
setnp
movsbl
mov
pushl
popl
lea
movzbw
lea
push
mov
lahf
pushf
mov
movl
lea
lea
jmp
pusha
pusha
movl
pushf
pushf
call
cmc
pop
xchg
call
imul
push
xor
dec
sti
insl
lds
cmp
arpl
emms
bound
scas
push
data16
loop
dec
loop
call
adc
pop
pusha
ljmp
and
dec
xlat
insb
mov
sub
repz
xchg
or
outsb
adc
xor
push
inc
lret
test
jg
mov
adc
fstpt
dec
popa
cwtl
dec
inc
imull
insl
out
adc
and
lret
psrlq
push
mov
movsb
fidivl
scas
jge
xor
movzbl
lea
setnp
mov
call
lea
jne
lea
mov
test
clc
call
mov
pushf
mov
jmp
pushf
mov
jo
xorb
xlat
imul
sbbb
aas
lds
inc
fcomps
test
xchg
push
je
xchg
out
iret
add
jnp
repz
shrb
or
push
sub
push
push
mov
fs
imul
pushl
test
bt
neg
cmc
clc
rol
jmp
mov
fistps
inc
jae
mov
sbb
fucomi
loopne
jmp
and
sub
fsubl
pop
jno
int3
sbb
xor
sahf
ss
sbb
jne
fs
push
xor
imul
mov
pop
cwtl
xlat
insb
dec
sarl
xchg
loop
incb
and
or
fnstenv
push
mov
into
cmc
inc
lahf
mov
mov
leave
mov
test
sub
and
gs
cwtl
pop
xorl
adc
and
and
shll
xchg
add
mov
and
sarb
les
mov
loopne
xor
jno
mov
inc
cli
mov
sarb
and
insl
push
call
xor
rorb
nop
rcrb
and
not
movzbw
pop
mov
lahf
lahf
movl
not
mov
call
push
pusha
pusha
lea
ja
setle
pop
jmp
bts
setb
push
rol
rcl
or
shr
mov
movsbw
sub
pushf
mov
dec
lahf
shrd
push
pusha
dec
pusha
mov
stc
rcl
movzbw
cwtl
mov
add
movzbw
mov
call
lea
sub
cmc
bt
sub
push
pushl
popl
push
pushl
cmp
jmp
cwtl
mov
pusha
pushl
pushf
push
lea
jmp
pop
fisttpll
aas
sub
lahf
icebp
test
mov
jo
aam
js
inc
out
ficoml
ljmp
mov
jo
loop
dec
aas
scas
in
xchg
into
cmp
jl
dec
imul
fcompl
js
pop
xor
dec
push
addr16
scas
icebp
jne
rcrl
fdivrl
lcall
fst
cwtl
xchg
jg
jne
cmp
mov
xor
mov
sarl
sbb
pop
pop
ja
push
js
imul
jbe
dec
mov
push
nop
sbb
adc
add
addl
dec
or
out
jecxz
sbb
adc
xor
jno
mov
cli
push
xchg
ret
negb
arpl
repnz
xor
pushf
repz
xchg
gs
call
lea
jge
test
mov
jmp
cli
push
mov
insb
sub
nop
stc
jae
add
jmp
inc
jge
lahf
movsl
inc
push
lods
pop
push
sub
dec
or
cmp
sub
or
cld
xchg
cmc
stos
call
lods
inc
sub
fistps
jno
cmpsb
test
jae
xchg
mov
enter
mov
sarb
sbb
aaa
xchg
jmp
repnz
cmp
mov
andl
xor
dec
push
lods
pop
sbb
mov
inc
xchg
xor
popf
jne
js
mov
iret
andb
sub
jno
in
data16
add
jne
push
insb
addl
xor
pop
cli
jl
and
data16
xor
jb
sub
inc
ljmp
gs
or
cmp
xor
push
xchg
push
call
rorl
and
cli
push
lea
jmp
test
pusha
cmpb
pusha
lea
jne
rol
pusha
sub
push
mov
jmp
call
mov
mov
add
rcll
sbb
pop
mov
sub
sub
xchg
ljmp
mov
xchg
pushf
fs
or
and
dec
outsl
enter
jge
imul
adc
xchg
cld
xor
jnp
jae
adc
mov
int3
imul
push
loope
cmp
or
int3
popf
repz
jno
frstor
push
imul
sub
add
mov
rorl
cli
jp
ss
jmp
xor
sub
xchg
xor
jno
adc
fisttps
inc
pop
mov
in
test
xor
ss
mov
push
mov
inc
push
aas
arpl
mov
popf
xchg
mov
adc
xchg
dec
sbb
cmpsl
add
inc
dec
and
das
movsl
jne
inc
adc
repz
adc
pop
push
dec
cmp
sbb
arpl
lret
icebp
rcr
adc
dec
movsb
jp
call
imul
mov
movl
pushf
movw
lea
jp
push
movl
pusha
lea
jmp
cmc
jmp
jmp
imul
gs
xor
cs
insb
add
cmp
pusha
lea
je
push
cmp
pusha
mov
lea
je
pushf
push
pusha
push
lea
jmp
movl
push
pushf
pushf
mov
lea
jmp
test
lea
jo
jmp
or
fsubr
sbb
pop
scas
inc
sbb
or
in
mov
xchg
fiadds
ds
jl
and
cmpb
add
int
mov
fisubs
fs
ja
shl
sub
shld
add
shrd
adc
mov
sub
xor
adc
pusha
mov
bt
stc
jmp
cmp
pusha
pusha
movb
lea
jbe
rol
shld
shl
sub
rcr
mov
sbb
clc
mov
sbb
bsf
add
dec
shr
push
stc
mov
rcr
pushf
jmp
stc
stc
repnz
pushf
movb
lea
jne
jmp
lea
jbe
pushf
pushf
lea
jne
rol
sbb
xor
or
aas
mov
push
add
movb
cmp
mov
clc
test
lea
jns
push
lea
je
push
sub
lea
jnp
pushf
pusha
test
cmp
movb
pusha
push
pushf
lea
ja
pusha
push
pushf
imul
cmc
push
jmp
movl
lahf
mov
lea
movzbw
not
lea
push
pushl
pusha
call
bswap
cli
lods
std
scas
sbbl
xchg
mov
fiaddl
sbb
addr16
sar
pop
das
inc
pop
mov
adc
adc
mov
or
mov
pop
je
pusha
call
cmp
add
cmp
lea
lahf
lahf
not
lahf
mov
jmp
push
push
add
imul
inc
or
iret
shll
push
out
xchg
inc
fisttps
pop
push
or
dec
test
dec
loopne
fwait
mov
pop
push
out
adc
cmp
pop
imul
in
xchg
inc
adc
push
movsb
fadds
imul
inc
cmp
add
xchg
dec
dec
xchg
adc
push
outsb
test
jge
shrb
cli
adc
sbb
jge
aaa
daa
ds
movsl
andl
push
or
test
sti
jne
mov
dec
jbe
sub
mov
dec
les
lock
push
mov
cld
fistpl
insl
add
loop
mov
push
adc
lcall
pop
outsl
mov
jne
js
push
push
cmp
arpl
insb
xor
ljmp
add
dec
test
add
mov
pop
sub
mov
sub
testb
cld
xor
icebp
xor
ret
dec
cmc
or
je
inc
cmp
and
out
ret
shrl
cmpsl
ret
test
cmpsl
mov
sbb
shl
mov
sbb
rolb
rolb
cltd
mov
lds
jo
push
pop
fcom
mov
lret
leave
pop
xchg
data16
out
repnz
fisubs
jmp
lea
je
jmp
not
push
call
pop
fmuls
repz
sbb
jne
cmp
lods
push
negl
fistpll
or
add
mov
xor
sbbl
ljmp
mov
jno
int
mov
pop
mov
adcl
ficomps
push
js
int3
xchg
jge
addr16
adc
adc
mov
mov
add
xor
jle
int
jbe
lods
and
les
int3
xchg
push
inc
pop
push
jecxz
call
push
stc
arpl
pop
scas
fistps
mov
pop
mov
dec
out
aas
pop
lahf
mov
mov
insl
push
popf
lret
jae
inc
add
add
inc
insb
mov
mov
movsl
xchg
sbb
xor
pop
xor
dec
in
lods
xorl
jno
dec
adc
lcall
sbb
add
fnstsw
inc
arpl
pop
adc
shr
fst
cmpsl
rorb
sbb
std
mov
xchg
loope
movsb
icebp
or
jno
fdivp
inc
ja
fisubs
bsf
inc
mov
jmp
into
into
add
mov
mov
xchg
test
pop
outsb
ds
cld
mov
adc
mov
test
pop
or
xchg
scas
out
loopne
adc
jl
aas
outsl
adc
jae
xlat
clc
fstps
jae
mov
fisubs
bt
stc
sub
stc
pushl
cmc
stc
jmp
mov
xor
push
enter
dec
in
push
mov
scas
lahf
repnz
pop
jge
loopne
ljmp
mov
lret
rorl
cmpsl
inc
jge
or
mov
xlat
cld
push
cmp
xchg
adcl
adc
shll
lea
shl
rcr
lods
decb
fsubr
movsl
cmp
mov
inc
cmpsb
mov
xor
xlat
sub
jle
dec
stos
xchg
sarl
lret
mov
pusha
xlat
or
lods
jecxz
jmp
pushf
mov
lcall
jmp
ja
add
scas
or
xor
or
fcoms
and
cmc
or
call
pushf
lea
je
mov
pusha
mov
mov
lea
pushf
mov
call
cmc
repz
push
insl
add
inc
cmp
and
loop
xchg
imul
push
mov
fwait
ss
pop
xchg
lret
xor
sub
and
rclb
shll
and
out
xor
jae
pop
sbbb
outsb
jne
inc
mov
inc
ds
ss
fcomps
jns
pop
jbe
push
pop
add
arpl
and
cmovg
add
add
sub
pop
fidivrl
cmp
add
aad
arpl
sti
pop
sub
xor
sub
cli
mov
fcoml
lcall
in
nop
adc
call
das
fnstcw
fwait
ljmp
ficomps
test
and
add
push
push
lea
jmp
xchg
inc
push
sub
sahf
adc
je
push
inc
mov
sbb
sub
jo
nop
push
shl
lret
pop
testl
rolb
cwtl
cmp
shlb
mov
pop
movsb
mov
mov
cmp
adc
mov
jge
sahf
shrb
and
loop
mov
addr16
rol
mov
jbe
xchg
aas
ja
jns
clc
jg
outsl
xchg
sub
adc
repz
adc
add
pushf
pushf
movl
mov
lea
jmp
lea
je
xchg
movzbl
setl
lea
bswap
pushf
movw
movzwl
movzbw
lea
pop
lea
bswap
lea
bswap
mov
pushf
movb
push
lea
call
jmp
call
pushf
xchg
jmp
repnz
outsl
imul
int3
jo
shll
test
or
sti
fstps
and
xchg
xchg
hlt
cmc
mov
push
std
push
gs
out
or
lock
and
cmpb
sub
xor
into
cmpsl
ja
ds
sub
push
stos
pushf
stos
movsb
inc
mov
fimuls
pushf
mov
cltd
mov
xchg
pop
int3
and
or
inc
xchg
jbe
mov
ficoms
popf
fdiv
test
shl
pushf
lock
ficomps
sub
test
stc
movzwl
test
mov
clc
add
pusha
call
push
cmp
call
pusha
push
pusha
mov
push
push
lea
jmp
mov
or
sbb
movsl
mov
cmp
sti
nop
shll
and
dec
mov
lock
pop
js
bound
rcrb
mov
popf
jae
fnstcw
mov
jo
add
repnz
add
mov
and
movsl
add
xchg
adc
adc
loop
repnz
adc
adc
jmp
roll
xchg
nop
mov
cli
cltd
jl
sub
jb
lcall
pushf
pushf
movzwl
sub
pusha
stc
sbb
clc
mov
pusha
add
mov
cmc
bt
test
mov
call
jmp
push
in
enter
mov
js
pop
repz
pusha
das
aam
mov
nop
loope
cli
mov
fisubrl
xor
bound
xlat
add
ret
pop
mov
cmp
mov
xor
fidivrs
mov
xchg
mov
repz
jo
scas
or
enter
adc
shll
lahf
and
lock
imul
lahf
sbb
xor
push
jo
pop
ss
sahf
push
cmp
mov
or
xchg
dec
and
testb
fisubs
in
daa
inc
arpl
sbb
mov
mov
sub
ficomps
adc
ficoml
mov
jl
in
add
mov
les
adc
inc
icebp
shll
pop
popa
cld
lds
dec
sbb
jg
ror
pop
inc
das
fwait
outsl
sarb
in
fmuls
pop
ss
push
popa
out
adc
cltd
sub
testl
sub
sbb
shll
imul
mov
sbb
repz
lret
shrd
xadd
shr
rcl
push
mov
shrd
movzbw
add
clc
add
pushf
add
shl
mov
pushf
cmp
shr
clc
cmp
pushl
lea
je
bt
pushf
cmp
bt
cmp
call
pusha
pushl
test
test
pusha
pushf
jmp
jmp
and
rcl
cmpsl
xor
or
add
test
mov
cmc
xor
or
fs
sti
in
popf
push
adc
inc
mov
fists
sbb
pop
gs
pop
xor
xchg
je
and
mov
and
push
jbe
ficomps
clc
stc
or
pushf
lea
je
bt
cmp
push
jmp
shl
pusha
pushf
jmp
or
pushf
pusha
push
jmp
add
push
pusha
test
bt
movzwl
rcl
stc
and
inc
mov
test
jmp
jb
pushf
pushf
movb
pushl
ret
popa
mov
push
mov
cli
mov
jne
cwtl
leave
mov
push
mov
ffreep
mov
mov
les
popf
shrb
std
push
shlb
cmpsl
mov
adc
call
sti
sub
inc
lret
rol
aas
add
aad
or
shr
fdivrl
movsb
sbb
ret
int
fsubp
jb
lret
ficoms
pusha
mov
fdiv
out
xchg
addr16
ficomps
mov
call
test
cmp
pusha
lea
jne
pushf
inc
push
inc
movl
lea
jmp
pushl
mov
pushl
popl
pusha
pushf
pushl
ret
push
cmp
jmp
pushl
popl
pushf
mov
push
movw
pushl
ret
lea
jne
pushf
pusha
stos
pusha
push
pushl
pushf
lea
jmp
movsb
push
and
sti
ds
pop
mov
fistpll
cmc
movsl
daa
inc
sub
sarb
out
aaa
mov
rorb
push
push
addr16
or
cs
xor
mov
or
and
out
adc
nop
movsb
aad
fs
lret
ret
xlat
sub
mov
and
or
mov
aam
push
call
jge
jns
push
jl
jno
repnz
mov
jnp
mov
inc
push
xor
repz
push
sarb
inc
sub
push
ljmp
push
dec
pop
push
lods
imul
lahf
fmuls
mov
cmpsl
in
ss
mov
out
movsb
mov
rorl
lods
jmp
pusha
icebp
push
xchg
adcb
dec
jb
cld
xchg
enter
fwait
dec
sub
lea
add
push
and
pushl
popl
bswap
pop
lea
mov
pop
mov
cwtl
not
movl
movsbw
call
movzbl
mov
pushf
mov
lea
pushl
mov
call
cmpsl
sarb
js
adc
cmp
bound
cmp
scas
mov
aas
jg
addr16
jmp
out
iret
cmp
jl
cld
jae
mov
and
adc
lock
mov
out
sahf
pop
mov
xor
mov
cs
les
lds
scas
mov
jmp
mov
push
adc
icebp
stc
sbb
and
and
pop
loopne
pop
xor
push
adc
cmp
movsl
pushf
xor
cld
cmc
call
cmpsb
add
inc
js
je
jb
arpl
jae
push
cmc
mov
test
lea
js
pushf
pusha
pushf
lea
je
call
imul
fsubl
ja
fidivrl
mov
movsb
mov
mov
mov
test
mov
popf
fnstcw
xor
mov
inc
mov
pop
push
cli
inc
mov
test
cltd
stos
xchg
fists
sub
pop
aad
ljmp
or
ljmp
movsl
inc
mov
imul
mov
jecxz
sti
imul
xchg
mov
mov
int
out
mov
xor
daa
jne
mov
xor
add
dec
fwait
xor
xchg
push
sbb
mov
out
mov
add
test
add
pusha
mov
pusha
jmp
mov
sbb
pop
mov
ds
scas
cmp
mov
inc
enter
xchg
pop
or
mov
pop
sub
ret
push
ljmp
inc
mov
std
push
add
imul
movsb
dec
push
add
je
fnsave
mov
jp
pop
jle
movntq
out
adc
pop
push
daa
jbe
mov
sbb
push
addr16
sub
call
lods
mov
push
out
and
in
jge
clc
dec
pop
sub
scas
aas
push
addl
sbb
mov
mov
add
push
lcall
repz
ret
imul
sbb
ficoms
setae
movb
call
mov
movsbw
pop
mov
setae
mov
pushf
mov
call
mov
call
repz
fists
adc
cmp
daa
mov
cld
rcll
xchg
xor
mov
mov
xchg
loopne
push
daa
push
aas
in
sbb
cmp
cmpsl
pop
inc
lds
xchg
jp
popa
xchg
cwtl
fstpl
xchg
cli
inc
scas
addr16
inc
cld
push
repz
aaa
mov
add
push
fwait
scas
in
arpl
popl
xor
mov
pop
jge
jbe
fwait
adc
nop
adc
cltd
rclb
cmpsb
mov
in
jmp
fildl
push
or
loopne
imul
jae
je
test
sbbb
pop
add
insb
cmc
push
xchg
lea
mov
out
loopne
ret
cmpsl
mov
mov
adc
loop
enter
scas
push
mov
jbe
jns
mulb
fidivl
imull
loopne
in
inc
mov
mov
mov
xor
push
pop
aas
lds
mov
popf
xchg
xchg
xchg
push
movl
aad
cmp
inc
adc
mov
int3
mov
insl
sub
sti
hlt
mov
jbe
xor
and
mov
cmpsb
jl
in
sub
push
push
and
mov
cld
add
pop
lea
adc
xor
jno
xor
es
int
mov
lock
and
xor
aas
mov
sahf
xor
aam
fld1
ficoms
cld
or
pushf
lea
je
pusha
call
pushf
pushl
lea
ja
push
pushf
imul
pushf
push
add
pushf
pushf
pushf
lea
jmp
stos
sub
pop
lret
xchg
xchg
call
loopne
adc
lret
push
sbb
add
insl
sub
xchg
ja
sti
loop
cmpsl
loope
cmp
xchg
pop
dec
cwtl
jo
cmp
mov
push
ret
lret
rolb
cmp
aaa
in
inc
cmpsl
jp
pop
xor
mov
std
out
lahf
push
and
sbb
adc
addr16
pop
sub
in
in
mov
imul
addr16
ficoms
xchg
test
add
dec
loop
mov
sub
push
out
cmp
mov
and
sub
adc
add
imul
shll
int3
xor
xchg
pop
mov
out
sahf
in
add
daa
mov
ljmp
jb
mov
loop
pop
xor
out
jb
bound
pushf
adc
lock
clc
mov
call
cmp
rolb
in
add
sahf
mov
aad
xlat
cmp
xchg
dec
adc
ss
add
cltd
mov
xor
into
mov
daa
test
mov
adc
cld
sub
cs
lcall
inc
insl
jo
xchg
mov
loop
push
inc
addr16
fstpl
lock
cmpsb
xchg
pop
push
faddl
cmpsb
and
jge
push
mov
outsb
data16
test
jb
aam
dec
cs
pop
jmp
add
jmp
adc
push
arpl
repnz
push
jl
sbb
adc
fisubrs
or
cli
shll
fsubrp
ficoms
xchg
and
mov
and
jg
lahf
arpl
repnz
sbb
sbb
jno
jmp
adc
mov
inc
cmpsl
imull
and
call
js
fisubrs
sbb
movsl
pop
xor
adc
lret
jmp
jmp
dec
or
mov
imul
out
sub
jl
popa
xchg
add
jp
nop
into
mov
cld
cmpsl
cmp
mov
fldcw
rolb
and
dec
cli
cmpsl
das
or
xor
or
sub
jecxz
lods
ss
lret
dec
jge
out
icebp
adc
adc
hlt
sahf
or
push
jae
fists
mov
xchg
mov
out
jbe
lahf
lret
stos
icebp
mulb
jmp
nop
inc
cmp
loope
ficoms
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
jl
incl
int
and
xchg
mov
int3
pop
mov
mov
adc
pop
insl
fisubrl
gs
jp
push
push
mulb
mov
lret
int3
xchg
dec
cmpl
sbb
ficoms
pop
and
stc
bt
add
bts
btr
stc
bts
movl
xor
call
add
fwait
cmpb
inc
testl
jne
mov
fcomps
rcl
mov
push
loope
negl
and
push
daa
or
adc
xor
cltd
daa
jno
jmp
imul
stc
push
xchg
jecxz
shll
push
or
xchg
dec
mov
mov
gs
mov
fiadds
lds
test
xchg
push
cmc
xchg
jle
ljmp
out
shlb
notb
jp
mov
popa
mov
outsl
xchg
aas
and
fsubrl
fsubs
pop
and
add
cmp
mov
sub
xchg
sub
push
sbb
ficoml
xor
jo
int3
pop
leave
iret
scas
dec
xchg
jns
mov
xchg
fcomp
mov
mov
in
bound
lods
mov
sub
mov
and
xchg
or
mov
leave
pop
jae
mov
dec
sti
lea
ja
sets
not
mov
inc
jmp
popf
cpuid
nop
jmp
jmp
ljmp
sub
scas
addr16
scas
and
adc
mov
or
call
mov
das
inc
add
lret
movsl
or
shrl
sbb
in
xchg
fs
call
movl
sbb
mov
and
scas
and
add
cld
icebp
aaa
adc
movsl
push
mov
pop
jge
push
pop
and
fdiv
push
cwtl
push
sub
imul
int
xor
rcl
jg
and
insl
out
xchg
jmp
cmp
pushf
pushf
push
push
lea
jae
pushf
jmp
mov
xchg
rolb
nop
lods
jo
push
hlt
out
jo
adc
xor
mov
lds
andl
push
mov
nop
mov
je
xchg
push
jle
xchg
out
adc
sub
in
fs
fstps
fstl
fistl
sub
xchg
push
call
stos
repz
and
dec
shl
xor
push
lret
cmc
cmp
js
lret
mov
data16
fimull
jno
pop
das
adcb
adc
xchg
push
inc
es
lret
inc
sub
insb
push
jne
ficoml
lret
enter
sbb
sbb
std
fldcw
into
pop
repnz
jno
jne
das
or
repnz
and
pop
orl
sub
test
mov
dec
add
mov
xor
in
sub
sbb
inc
inc
addr16
and
cvtsi2sdl
cmpsl
inc
rcll
xor
and
and
das
clc
mov
iret
xor
rol
cmp
xchg
xor
or
lea
mov
arpl
repnz
mov
shll
xor
mov
push
mov
jle
sbb
clc
dec
in
sbb
xchg
push
clc
icebp
and
pop
and
push
push
repz
and
mov
out
cmc
repz
pop
adc
mov
ret
pop
mov
fsubs
or
movsl
daa
ret
notl
jne
sub
cmp
sub
jp
shrl
xchg
int
sbb
movsb
cli
in
pop
adc
jecxz
lea
cmp
das
fstl
iret
and
push
dec
adc
add
and
imul
div
out
cmc
call
daa
mov
push
push
cmp
inc
shl
push
push
imul
push
in
jl
push
jo
dec
jno
and
dec
loope
fistl
rcrl
jmp
push
hlt
or
push
orl
xor
cmc
es
adc
je
fld
mov
add
push
ficoml
dec
enter
gs
pop
sbb
cmp
pop
imul
mov
bndldx
pop
pop
jns
les
dec
sub
dec
cmp
fsubs
push
pusha
xchg
enter
fstl
lods
leave
xor
sub
leave
pop
aaa
aas
adc
rorl
shl
push
pop
ds
stc
dec
add
push
mov
inc
daa
jge
and
inc
pop
adc
sub
and
dec
adcb
inc
inc
or
or
and
adc
ja
push
adc
test
pop
or
xchg
xchg
jmp
in
xchg
in
out
mul
out
fcomip
leave
xchg
xlat
dec
sub
iret
dec
icebp
sub
pop
jge
or
inc
inc
jmp
shll
or
sub
mov
cmp
sub
push
xchg
dec
mov
rclb
test
push
adc
dec
mov
mov
cmc
stos
push
movsl
adc
dec
cltd
xchg
push
rol
repz
cmc
loope
xor
leave
sub
xchg
repz
cmp
lea
inc
adcl
dec
dec
cmp
das
inc
xchg
in
lea
cmp
and
enter
adc
inc
movsl
xor
dec
and
adc
jno
or
and
mov
push
mov
movsl
inc
imul
sub
cmp
xor
dec
and
or
test
pop
xchg
adc
fldl
rcll
sub
sbb
cltd
mov
sbb
cld
push
lahf
xlat
sub
adc
pusha
mov
adc
fldl
xchg
rcll
jecxz
sarb
or
mov
gs
mov
loope
push
cmp
xor
inc
test
and
sub
dec
or
dec
adc
sub
cwtl
into
daa
push
sub
je
dec
fildll
sar
sti
pop
pop
rol
mov
dec
mov
jns
push
iret
in
aaa
insl
adc
ds
int3
mov
push
or
xchg
mov
leave
and
ds
loope
int
shrl
dec
fldenv
aam
cmp
sub
test
add
imul
arpl
sub
ret
negb
cmp
repz
inc
loope
adc
xchg
dec
insl
pusha
out
roll
rol
idivb
sbb
jecxz
inc
cmc
stc
push
loope
ror
mov
cmpsb
or
inc
inc
jge
movsl
enter
sbb
dec
dec
mov
daa
push
push
cmp
lds
dec
cmc
push
jns
pop
roll
dec
sub
pop
lods
and
subl
push
stc
adc
dec
sub
mov
test
push
cmp
push
adc
std
enter
push
int
push
adc
dec
lds
push
lea
into
int
add
aaa
push
int
mov
jne
dec
sbb
push
add
adc
inc
loope
mov
xor
aaa
push
movsl
adc
je
jge
dec
dec
mov
mov
dec
inc
aaa
jns
pop
push
dec
pop
repz
xor
cmp
inc
hlt
add
pusha
mov
or
enter
jno
inc
push
adc
dec
test
pop
cmp
pop
jge
pop
cmc
sbb
adc
adc
xor
push
inc
sbb
dec
gs
pop
and
push
icebp
dec
xor
daa
jmp
or
es
movl
pusha
pop
dec
push
xchg
sub
sar
fnsave
shrl
popa
lds
inc
xor
push
and
cmpsb
xor
loope
cmp
cmc
lea
mov
xor
leave
leave
inc
push
mov
fsub
lds
rol
leave
aas
jle
jae
hlt
mov
enter
test
mov
aaa
sub
mov
inc
mov
ss
push
addr16
push
mov
inc
ss
daa
sub
cmp
ss
fdivs
lods
cmp
insl
inc
icebp
xor
xchg
push
loope
xor
sbb
movsl
lret
push
push
xchg
jge
push
mov
or
adc
xor
dec
les
dec
imul
cmc
cltd
out
cmp
cmp
sbb
adc
out
xor
daa
loope
and
dec
jns
shrl
enter
jne
sbb
and
inc
ss
inc
addr16
xor
out
cmp
push
xor
ss
enter
loopne
cmp
jge
push
push
xchg
xchg
jne
adc
adc
stc
cmp
xor
xor
mov
fdivs
jne
outsl
cmp
fnstenv
fldl
dec
cmp
cmp
shll
punpckhwd
cmpsl
or
shll
jmp
das
inc
mov
mov
jp
push
sbb
shrb
inc
push
xor
fidivl
adc
inc
jbe
bound
enter
or
cmc
lds
dec
inc
daa
push
and
inc
pop
movsl
jmp
xor
test
pop
stc
cmp
cmp
leave
sub
or
je
sbb
push
xchg
push
lcall
insl
mov
push
lcall
add
js
cmp
fldenv
lret
in
push
add
xchg
mov
or
sti
push
jne
cmpsl
movsl
les
xchg
xchg
cs
cmpsl
and
inc
std
cmc
pop
aad
lods
sbb
test
xor
stc
cld
leave
pop
pop
int
fstpt
xor
mov
in
or
jne
sub
pop
ja
mov
popl
pop
sarb
mov
xor
lahf
xchg
lret
icebp
sbb
push
dec
cmp
cmp
aad
or
jge
sbb
cmc
or
adc
pop
out
rcl
cmp
clc
cmc
xorl
jge
xor
aam
gs
insl
xor
or
push
aam
leave
mov
lret
xor
test
movsl
pop
sub
sbb
jmp
sub
dec
mov
test
scas
loope
rcll
mov
xor
xchg
jne
xor
pop
pop
cld
daa
aas
adc
lret
jo
push
xor
push
adc
mov
push
jmp
repnz
push
inc
inc
sbb
push
adc
inc
or
pop
out
pop
sub
popf
and
std
adc
sbb
cmp
pop
cmp
imul
hlt
sub
out
mov
mov
pop
mov
imul
sbb
sets
fisttpl
or
or
imul
jmp
add
add
add
clc
sub
cmc
xlat
hlt
arpl
repnz
out
inc
out
imul
mov
out
out
inc
push
in
ljmp
loop
mul
cwtl
inc
dec
jne
cwtl
es
and
imull
and
and
sub
dec
push
xchg
test
jmp
in
es
out
cmp
rorl
pushf
pop
jge
xor
push
ret
or
jns
mov
cltd
in
pop
jns
icebp
test
xlat
rorl
add
ss
in
icebp
mov
icebp
sub
lock
cmc
add
loop
repz
sbb
sbb
clc
stos
lock
aam
inc
push
adc
in
imul
lahf
push
or
clc
in
les
or
xchg
loopne
sar
aas
cmp
mov
int
cmp
cmp
fcompl
mulb
js
cmp
int3
dec
add
sub
xor
jmp
test
add
rol
pop
pop
adc
call
or
scas
push
arpl
adc
jmp
in
push
shl
jecxz
mov
or
push
add
jmp
scas
sbb
dec
sub
in
cmp
xchg
sub
add
mov
adc
fsts
enter
ljmp
push
adc
and
and
xchg
jno
out
pusha
js
mov
enter
cmp
adc
push
jmp
adc
xor
inc
in
push
jmp
add
cmp
dec
repnz
add
cmc
loope
mov
dec
lds
sub
mov
in
notb
dec
std
aaa
jle
cmp
fldt
daa
sub
sbb
aas
push
in
jmp
out
xchg
cmp
add
and
xchg
inc
in
adc
and
testb
push
loop
mov
mov
fucomp
add
add
sbb
sub
adc
sbb
pop
push
pop
mov
sbb
movsb
aaa
dec
movsl
dec
adc
pop
loopne
lods
es
dec
repnz
xchg
xor
xor
add
call
clc
and
mov
sti
in
sub
popf
jns
push
shrd
movsl
mov
mov
xchg
mov
adc
dec
sahf
loope
mov
pop
jno
sti
mov
push
outsb
mov
rcll
aam
mov
fwait
dec
mov
addb
cli
pop
std
mov
sbb
inc
scas
adcl
xor
xchg
or
aam
pop
std
xor
mov
ss
or
idivb
push
and
sbb
add
cmp
clc
in
insl
sbb
sbb
inc
ljmp
mov
inc
pop
dec
aad
sub
loop
lds
lea
push
mov
addr16
cmp
rolb
inc
pop
shrl
mov
push
ljmp
add
or
out
cwtl
cltd
in
clc
out
add
xchg
add
lret
or
jge
cmpsl
push
mov
or
or
in
sub
aaa
push
pop
and
pop
cmp
pusha
jmp
pop
and
test
xchg
cmc
or
push
push
sub
daa
dec
daa
cmp
es
and
fldlg2
adc
dec
push
es
cmp
clc
out
sub
mov
adc
ss
and
addr16
outsb
inc
mov
aas
dec
inc
leave
pop
daa
cmp
das
push
adc
cmpsl
mov
mov
popa
in
test
out
push
sbb
xor
add
stc
shl
inc
icebp
xor
in
loope
push
dec
sbb
push
fstl
popf
adc
shr
lds
cmc
sbb
dec
cmpsb
lods
inc
sbb
sub
pop
in
xor
mov
dec
xor
rol
jmp
adc
and
filds
int
std
in
add
sub
inc
pop
or
leave
inc
mov
stc
pop
mov
ror
jecxz
jmp
mov
fbld
js
icebp
xchg
xor
add
fwait
xor
sub
aaa
push
pop
stc
pop
dec
mov
sbb
pop
xor
aad
pop
push
jp
sub
add
testl
and
rcr
hlt
test
lcall
pop
icebp
add
mov
stos
into
out
cltd
aad
enter
in
int3
fisttpll
test
into
sub
add
aad
add
imul
push
cli
or
inc
add
testb
ret
mov
or
decb
gs
test
adc
cwtl
mov
push
repnz
xchg
arpl
mov
jecxz
loope
jno
dec
clc
dec
push
mov
jmp
push
in
adc
cmp
test
xchg
mov
outsl
or
int
int
movsl
loopne
mov
sbb
inc
inc
insl
xchg
mov
repnz
mov
xor
jmp
ds
shr
cld
int
sub
aaa
in
clc
xchg
leave
enter
jno
xlat
lret
add
out
in
call
and
adc
imul
cltd
addr16
and
dec
divl
jmp
mov
mov
sbb
test
add
cmp
xchg
dec
sub
xchg
fiaddl
or
add
adc
out
sbb
addr16
jg
outsl
cmp
sub
push
adc
aam
mov
add
lock
inc
test
cmc
aam
mov
std
dec
or
mull
cmp
rclb
movsb
out
arpl
sub
cmc
out
sbb
test
repnz
pop
lcall
out
rcrl
loope
int
andl
fimull
xor
lods
popf
push
aaa
gs
cli
or
je
sub
sbb
leave
and
push
add
mov
xchg
aas
stc
mov
mov
gs
adcl
jg
jae
fldt
pop
repz
mov
arpl
cmp
sbb
push
or
push
dec
iret
push
dec
rol
sti
adc
mov
jmp
pop
cmpsb
aad
push
mov
and
pop
shr
jne
or
xor
jae
dec
outsl
inc
fdivs
jmp
cmp
enter
cwtl
jle
hlt
or
add
sub
add
jno
gs
imulb
shr
std
iret
std
pop
std
mov
mov
sub
in
and
sarl
lods
jmp
jmp
pop
lods
cmp
jmp
jmp
xchg
movsl
das
mov
xchg
hlt
inc
jl
add
pop
popf
jmp
fwait
jnp
imul
hlt
xor
dec
cmp
dec
inc
popa
int3
lahf
scas
add
movhps
popa
jecxz
xchg
aad
out
arpl
in
ljmp
dec
or
sbb
sbb
sti
sbb
push
xchg
mov
pop
cmp
mov
shll
adc
stc
stc
cmp
xor
arpl
jmp
and
dec
fbstp
rorl
test
aas
clc
add
push
jns
add
sbb
sti
fsubs
movsb
or
jno
push
les
pop
pop
leave
xor
inc
add
test
mov
jnp
and
aaa
cmp
out
out
notb
push
sub
lock
ljmp
mov
jmp
and
popa
sub
in
jns
mov
sub
in
leave
loop
push
inc
fnstsw
inc
adc
jmp
icebp
xor
xor
lds
xor
xor
add
push
cmp
mov
lock
jno
or
cmpsl
sub
push
mov
aam
sbb
add
dec
pop
adc
nop
jmp
nop
jns
or
cmp
xchg
or
or
jge
add
xor
xlat
repz
mov
mov
sub
vaddsubps
aaa
adc
pushf
sub
jnp
cltd
jle
sbb
imul
icebp
xlat
sbb
xchg
cli
mov
cmp
jne
mov
rclb
and
sar
pop
xchg
push
mov
aad
test
mov
jmp
mov
sub
or
icebp
add
nop
and
out
push
add
out
xchg
dec
dec
inc
addr16
lds
lds
add
jno
jmp
rorb
add
push
dec
ljmp
out
mov
nop
mov
cmpsb
loope
push
leave
jo
shll
adc
lret
sbb
or
lahf
cmp
lods
xor
jmp
loope
sarl
sub
sub
jmp
pop
cmc
out
or
add
negl
mov
int3
bound
push
std
enter
adc
xorps
xor
arpl
dec
jecxz
cmp
sbb
mov
jo
fwait
mov
cmp
lods
xchg
pop
repnz
in
iret
movsb
out
roll
add
push
aas
jp
push
mov
dec
fs
rol
push
movsb
test
pop
mov
sti
sub
cmc
push
add
and
int3
inc
push
push
cmp
or
cmp
lret
mov
push
icebp
push
push
and
mov
fwait
mov
cmp
adc
lods
sub
cmp
imul
inc
xor
in
and
pop
adc
mov
and
gs
enter
and
xchg
dec
inc
mov
out
push
int
push
sbb
jo
cld
addr16
adc
jbe
sub
mov
inc
lret
cmp
sbb
adc
loopne
call
and
xor
andb
icebp
mov
ja
addb
std
gs
and
and
sbb
jne
sbb
in
sub
orb
and
lods
into
insl
lock
dec
push
and
push
leave
cmp
push
int
lea
js
mov
test
enter
scas
jno
push
in
mov
lds
push
aad
aas
stc
dec
lds
lock
push
lea
jge
mov
leave
stc
xchg
jae
add
or
iret
xchg
xchg
les
mov
add
repnz
inc
test
mov
test
add
add
add
add
sarl
push
mov
pop
or
in
fdivrs
ja
mov
or
loope
xor
hlt
mov
jne
mov
les
mov
cwtl
lea
nop
add
test
inc
into
xchg
add
popf
and
inc
jge
aaa
xchg
and
push
cltd
daa
jbe
in
subl
push
adc
dec
stc
call
jg
sub
adc
add
xchg
popa
sbb
xchg
adc
cmp
jbe
out
int3
dec
shrl
and
cmp
inc
sti
inc
inc
add
and
scas
subl
or
jbe
shll
inc
adc
inc
mov
adc
xchg
rol
mov
mov
jnp
jg
test
clc
cltd
and
stos
mov
xor
outsl
sub
and
cmp
push
push
fnstenv
add
enter
and
jbe
dec
in
xchg
and
add
mov
push
cmp
mov
or
aas
or
int3
inc
stc
adc
int3
sub
dec
inc
test
stc
pop
outsl
xor
push
into
jne
sarb
mov
jns
jnp
mov
lret
mov
mov
popa
or
jmp
orl
mov
icebp
hlt
xchg
adc
cltd
xor
addl
mov
shrl
xor
leave
mov
and
dec
add
jmp
push
adc
inc
call
jae
dec
ja
push
pop
pop
and
arpl
push
push
adc
cmp
out
dec
pop
xchg
dec
sarb
dec
pop
fsubrs
inc
rorb
loope
inc
and
lret
push
push
dec
dec
into
mov
dec
lret
rcll
dec
stos
aam
pop
les
adc
xchg
inc
inc
arpl
fldcw
add
outsb
das
cs
xor
negb
cwtl
dec
ret
push
and
dec
cmp
pop
sahf
dec
dec
mov
aas
rclb
dec
xor
scas
xor
ret
cmp
and
adc
jp
mov
sub
jno
push
into
inc
mov
outsl
push
flds
inc
flds
dec
push
fstl
into
insl
push
shrb
push
cmp
dec
push
xor
in
pop
xchg
out
pop
stos
cmp
xor
fnstenv
into
lods
fcmovu
push
leave
inc
add
stos
fmuls
cmp
push
push
jg
mov
push
mov
cld
rcl
je
push
movb
adc
add
int3
dec
fcmovbe
add
lret
rolb
cmpsl
jle
push
push
ss
push
roll
fcmovnbe
iretw
scas
pop
and
lret
dec
inc
scas
aas
add
cmpsl
dec
clc
fisubrl
push
push
stos
xor
ja
push
push
adc
sbb
push
shlb
pop
adc
jae
imul
inc
lret
dec
xlat
lods
das
into
aam
sbb
aam
mov
std
into
push
dec
loope
aad
dec
inc
push
rcll
in
inc
scas
mov
dec
popa
mov
push
rcl
arpl
maxps
adc
imul
rclb
mov
xlat
dec
push
daa
lds
mov
cmc
loop
push
dec
inc
lret
aad
jns
push
into
inc
jae
or
lods
aad
add
pop
lods
mov
mov
and
cmp
push
inc
dec
cmpl
xor
fists
push
rcrb
hlt
push
mov
pop
into
cli
dec
fadd
aam
rolb
dec
xchg
fsubp
divl
dec
mulb
inc
dec
inc
push
aad
shrb
into
mov
cmp
flds
dec
dec
sbb
dec
pop
lret
push
loopne
and
sub
cmc
arpl
ret
jno
mov
and
inc
pop
push
xlat
dec
ret
in
inc
testb
loope
int3
mov
adc
out
rol
adc
loop
xor
mov
out
movsb
je
inc
xchg
push
add
xchg
sbb
pop
adc
inc
aas
add
mov
std
dec
aaa
push
cmp
rorb
cmp
cmp
pop
push
aas
xor
push
xor
ss
pop
inc
stos
push
dec
inc
call
dec
and
pushf
xor
and
addr16
dec
sarl
fdivl
out
jno
xor
in
sub
sub
repnz
jmp
push
ljmp
mov
push
xchg
mov
xor
inc
fcoms
cmp
test
dec
cmp
ret
mov
loopne
sub
pop
push
divb
dec
daa
mov
dec
xor
lret
dec
inc
and
adc
xlat
mov
cwtl
pop
daa
cmp
adc
aad
push
pop
cli
pop
inc
sub
lret
aaa
cwtl
dec
lret
test
iret
mov
aad
dec
ja
call
dec
jns
add
cmp
shl
jg
js
inc
das
frstor
dec
rolb
lods
in
xchg
sti
fistl
inc
int
pop
jmp
xchg
dec
loop
mov
mov
or
repnz
sbb
arpl
data16
lret
pop
fildll
fistpll
add
sub
cli
shlb
fidivrl
shrl
insl
dec
cmpsb
inc
test
push
ret
sarl
jecxz
mov
lods
inc
into
cmovs
push
loopne
clc
sarl
pop
popf
inc
or
push
dec
cmp
mov
xchg
jae
into
push
push
inc
inc
sbb
sub
push
cmp
dec
std
push
stos
pop
mov
dec
dec
dec
inc
push
jo
lret
fisttpll
imul
iret
and
inc
add
mov
into
rorb
inc
shrb
aad
out
mov
stos
add
jge
or
mov
jns
dec
xor
sub
inc
iret
into
push
cmp
insl
ret
push
dec
xchg
mov
aam
lcall
daa
in
stos
pop
fstl
scas
cmp
inc
mov
xor
test
xchg
aaa
mov
les
imul
inc
fdivl
jmp
inc
cmp
je
rorb
inc
lret
inc
dec
push
cmp
mov
sub
ss
dec
dec
push
mov
mov
das
cs
jae
int3
call
push
rcll
pop
cltd
inc
scas
inc
inc
dec
lds
add
ret
mov
dec
and
dec
xor
jge
add
ja
leave
pop
dec
push
push
jg
cltd
ret
mov
seta
xchg
sbb
add
push
clc
rorb
pop
dec
jb
into
dec
sub
nop
pop
or
stc
dec
jb
push
jbe
sub
pop
jnp
add
cmp
dec
dec
lods
xor
push
ss
pop
add
pop
cmp
insl
jnp
mov
js
inc
dec
xchg
aad
rcrb
fiaddl
dec
push
push
lock
xor
dec
pop
mov
or
pop
insl
rol
adc
inc
inc
into
xlat
loopne
mov
add
mov
movsb
das
lods
dec
pop
cpuid
rcrl
push
inc
push
cs
xlat
mov
sub
mov
into
lret
mov
lods
adc
mov
imul
je
jmp
lock
dec
push
push
lds
xor
stc
dec
jbe
adc
dec
test
dec
push
cmp
rclb
cs
fsubrs
mov
nop
testb
cltd
sbb
lret
scas
pop
lods
dec
and
mov
jbe
or
cmp
mov
flds
push
aas
dec
mov
aam
push
shl
and
jno
inc
into
inc
inc
lods
ja
add
xor
jo
lea
xchg
sahf
shrb
mov
push
push
xor
dec
inc
jnp
fcmovnbe
fisttpll
or
pop
xchg
cmp
push
dec
js
psubusw
lret
sub
or
rcl
mov
dec
dec
dec
lret
lods
push
into
jbe
xlat
add
or
dec
cmp
dec
stos
sarl
pop
adc
pop
push
sarl
or
movsl
inc
lods
sbb
xor
add
sub
insl
into
leave
int
push
cmp
xor
push
pop
xor
int3
into
ret
sub
pop
mov
std
mov
insb
mov
mov
sahf
ss
add
lret
stos
cmp
sbb
mov
inc
jo
add
roll
adc
xchg
pop
inc
jmp
push
les
aad
xor
cmp
into
lds
cmpsl
sub
mov
xor
mov
inc
rcll
in
xor
dec
dec
xor
outsb
int3
or
cmpsb
iret
push
imul
fcoms
push
sub
iret
mov
mov
jmp
dec
shlb
ret
arpl
mov
xor
dec
inc
aad
mov
push
pop
mov
cmpsb
shl
pop
push
mov
sar
out
mov
pop
fldcw
loop
cmp
sbb
xor
lret
scas
sub
inc
push
lret
test
mov
inc
cmp
cmpsb
out
jno
sub
dec
xchg
cltd
inc
outsl
lea
imul
in
push
push
adc
xchg
aaa
jno
pop
popa
ss
leave
pop
cmpsb
mov
push
int
stos
movsb
in
je
cmp
inc
pop
iret
sti
shlb
mov
dec
inc
scas
shrl
or
mov
fsts
add
pop
push
dec
aad
rcrb
sub
cld
pushf
xchg
shrb
nop
adc
pop
lods
cwtl
add
xchg
mov
pop
add
pop
xchg
lods
dec
add
clc
dec
mov
bsf
or
fldenv
mov
orl
push
dec
mov
ljmp
mov
nop
into
jecxz
jnp
cmp
mov
push
add
add
jns
in
cmp
js
fidivl
lds
mov
mov
dec
frstor
stos
pop
imul
xor
aam
inc
popf
imul
ret
cmp
add
popf
jno
mov
popf
fcom
fsts
inc
dec
leave
fcmovnbe
aad
add
dec
sar
in
std
adc
rclb
jge
fnop
sub
notl
mov
inc
inc
and
jl
leave
ret
call
push
mov
sbb
xlat
scas
dec
lret
inc
adc
das
sbb
in
push
push
cs
dec
sbb
pop
jnp
mov
xlat
push
dec
mov
inc
cs
mov
push
jmp
addb
dec
fwait
xor
movb
inc
inc
sarb
jns
mov
scas
xor
push
inc
or
inc
aad
int3
ror
mov
xchg
mov
test
inc
xor
rcr
fldenv
push
test
rorl
push
rolb
sbb
push
xchg
mov
mov
pop
leave
fildl
into
ret
adcl
dec
jmp
inc
push
lret
or
outsb
pop
dec
dec
mov
mov
ficoms
aam
call
add
fimull
push
xchg
sahf
mov
and
imul
test
imul
mov
imul
testl
into
mov
xchg
mov
lds
or
jmp
push
pop
aam
and
dec
pop
xor
and
fsts
mov
icebp
aas
sbb
dec
lcall
adc
or
outsb
pop
mov
dec
add
sub
sti
ja
cmp
ds
jmp
mov
mov
fisttpll
dec
inc
test
dec
cmpsl
cmp
mov
or
add
mov
xchg
mov
mov
jecxz
or
lods
fdivrs
je
movl
jmp
jp
mov
arpl
xor
testl
sarb
push
inc
scas
lods
sbbb
lock
sarb
push
mov
or
mov
adc
mov
pusha
int
adc
xor
pop
mov
inc
mov
or
inc
js
pop
mov
mov
mov
mov
gs
pop
push
cs
xor
mov
sub
flds
lret
dec
lret
sub
xchg
push
sbb
xchg
out
pusha
outsb
fistpll
into
xchg
pushf
fisubl
push
inc
dec
movb
xchg
enter
sub
pop
mov
dec
inc
sarb
pop
adcl
fcmovnu
mov
dec
sbb
xlat
sub
fcomps
flds
sub
push
cmp
adc
pop
dec
push
push
pop
aad
push
fidivl
pop
ja
inc
lret
dec
insl
mov
ror
jne
fstp
lret
addr16
fwait
test
xchg
xchg
fsubs
jb
push
xchg
js
xchg
clc
dec
fnstenv
adc
mov
inc
cmp
xchg
push
sub
iret
xlat
pop
push
mov
dec
xor
push
push
mov
push
popa
fisubl
cmp
pop
hlt
inc
pop
sub
data16
adc
sbb
inc
lret
fcoms
aas
cmp
xchg
adc
mov
push
call
push
pop
adc
cmp
jns
enter
push
daa
imul
pop
iret
fwait
imul
pop
cmp
jns
aaa
and
cwtl
test
cmp
testl
cmp
sbb
popa
rol
mov
xor
or
cltd
push
test
cmp
push
pusha
xor
sub
pop
ficompl
rolb
adc
mov
pop
ret
pop
cmp
pop
dec
pushf
push
cmp
cli
mov
inc
imul
pop
mov
pop
popa
sbb
imul
mov
cmovns
cs
pop
dec
pushf
mov
lret
lret
push
push
aaa
aaa
pop
sbb
cmp
sbb
cmp
ljmp
mov
rorb
mov
lret
push
repz
sarb
or
dec
rcrl
fldcw
cmp
fimull
sarb
xchg
pop
adc
pop
sbb
out
sub
dec
ja
sbb
push
lea
lret
xchg
sub
rcr
pop
sbb
pop
dec
cwtl
rclb
xchg
sbb
outsl
inc
sbb
xchg
dec
fnstcw
jbe
mov
mov
sbb
xchg
out
cmp
mov
xchg
leave
and
cmp
nop
sub
push
into
dec
lods
or
fistps
sahf
dec
jge
popa
xlat
fiaddl
dec
mov
xor
stos
les
fst
leave
push
arpl
adcb
adcb
pop
shlb
pop
fidivl
pop
scas
insw
and
inc
adc
pop
cmp
repnz
mov
add
ret
dec
std
push
jmp
xchg
adc
sarb
imulb
dec
mov
sarl
xlat
pop
ds
dec
daa
push
mov
or
rcrl
push
pop
push
mov
cmp
xor
rcr
cmp
dec
xchg
cmp
dec
fldcw
movl
pop
push
dec
jae
push
pop
dec
adcl
mov
sbb
pop
cmp
jns
js
xchg
data16
jno
pop
loop
or
push
sbb
pusha
xor
ficompl
xchg
push
xchg
or
xchg
and
cltd
inc
jbe
repnz
dec
aas
cmp
fwait
xchg
cmp
and
nop
add
xchg
test
es
imul
jbe
sub
mov
lret
dec
call
sub
sbb
xor
sub
enter
mov
sub
push
xchg
dec
loope
push
xor
movsl
dec
lret
push
sarl
sahf
xchg
xchg
fmuls
mov
and
call
xchg
dec
roll
lods
das
push
xchg
dec
pop
decb
mov
data16
sub
es
fadds
cmp
sub
pop
iret
subl
and
cmp
and
leave
call
or
cs
and
sub
xor
test
xor
push
jne
repnz
inc
jle
fdivrs
xchg
push
push
inc
xchg
test
addb
das
test
nop
mov
jns
dec
xchg
mov
test
cmc
repnz
les
orl
cmp
enter
mov
xchg
xor
sub
pop
sub
mov
adc
inc
pusha
daa
sbb
add
sbb
daa
ficoms
sarb
inc
dec
xor
and
or
xor
and
pop
adc
and
sub
daa
adc
lahf
mov
and
sub
jae
push
push
and
sbb
pop
scas
xor
jge
ds
add
lds
mov
gs
es
imul
repz
test
rorl
push
insb
mov
jnp
xor
xor
test
dec
call
lods
add
popf
lock
mov
xor
mov
adc
sbb
call
fmull
jbe
sbb
repnz
or
lret
fldenv
xor
xchg
push
fidivl
test
movl
mov
dec
jns
adc
repnz
and
dec
sbb
lods
cmp
xchg
dec
cmp
dec
adc
jns
jmp
adc
mov
in
ret
and
or
adc
add
out
outsl
cmp
pop
div
hlt
repz
repnz
dec
sbb
mov
stc
std
cld
sti
cli
mov
fbld
and
add
xchg
in
cltd
dec
mov
cmp
pop
or
adcb
std
adc
xor
inc
pop
sbb
lds
or
sarl
ret
pop
or
aad
adc
cmp
adc
cmc
adc
adc
dec
xchg
push
jbe
pop
cs
push
inc
cmp
adc
insb
xor
sbb
movsb
sub
inc
mov
dec
inc
sbb
pop
xchg
and
xor
das
gs
loopne
cltd
sbb
sarl
cmp
xor
jne
decb
xor
and
cs
push
sub
sub
push
icebp
pop
popa
rclb
push
aaa
ss
xor
shll
cmp
cmp
inc
cmp
push
incl
aad
aas
lret
flds
cmp
dec
pushf
inc
inc
inc
inc
movb
dec
out
je
lahf
test
sbb
enter
lret
pushf
xor
inc
push
xchg
inc
lcall
ret
cs
sbb
jnp
ja
add
pop
clc
popa
push
stc
mov
sbb
fidivl
pop
jno
gs
mov
js
jp
cltd
mov
into
mov
mov
push
push
xchg
mov
ret
lods
nop
mov
mov
push
inc
xor
sbb
test
ja
and
jbe
and
imul
adc
inc
ret
adc
call
inc
inc
adc
stos
and
inc
jo
andb
dec
xchg
mov
es
jecxz
dec
lahf
repz
add
jne
push
lods
dec
sub
rorl
push
jno
pop
push
idivl
push
and
push
icebp
gs
std
scas
cs
sub
in
jmp
mov
adc
lds
in
xchg
inc
jno
inc
shr
xchg
push
jne
in
std
fs
inc
repnz
xor
out
mov
xor
mov
adc
inc
gs
mov
dec
loope
add
insb
into
hlt
mov
dec
daa
and
or
push
dec
in
inc
aad
inc
lds
daa
in
inc
lahf
xchg
push
push
stc
ss
inc
xchg
pop
jne
out
and
cmp
push
out
std
cs
mov
in
nop
inc
and
inc
or
push
lea
je
in
jb
xor
out
sar
std
test
mov
daa
in
shl
push
push
daa
and
xchg
add
xor
loop
je
daa
std
loope
test
iret
add
pop
jo
mov
in
inc
enter
out
pop
or
imul
fildll
ds
cmp
or
mov
adc
xor
mov
xchg
imul
add
or
jecxz
popa
inc
dec
mov
inc
cmp
dec
ret
push
jmp
push
dec
dec
aas
ds
repnz
pushl
xor
inc
lahf
add
cwtl
mov
inc
in
dec
cmp
lds
dec
mov
mull
dec
dec
mov
jno
push
sub
sub
lcall
sbb
jb
leave
fimull
fiadds
pusha
and
data16
pop
sub
sbb
stc
push
pop
cld
sub
xor
pushf
roll
xchg
jle
call
push
or
push
jecxz
aas
dec
lret
push
dec
cs
add
movsl
loope
ret
in
ds
inc
xchg
scas
xor
movb
cltd
cli
jg
movsl
mov
aad
sub
jns
movsl
movsl
fwait
popa
xor
mov
ficoml
push
cltd
pop
or
push
xlat
inc
push
sti
cmp
orl
pop
xor
push
lea
iret
jnp
sub
mov
or
adc
incl
push
pop
cwtl
rcrl
xchg
subb
cmp
mov
pop
icebp
xor
mov
cltd
add
loope
and
jl
sub
sarl
daa
ja
push
dec
xchg
iret
jnp
pop
decl
and
lods
addb
adc
dec
sbbl
sbb
cs
fstpl
jmp
stc
xchg
pop
divb
or
mov
rcll
ss
cmp
inc
mov
dec
sbb
sbb
scas
xchg
mov
dec
xor
cmp
test
xchg
pushf
xchg
inc
mov
cltd
pop
iret
xchg
mov
movsl
jns
imul
push
dec
xorb
pop
push
and
lret
xchg
or
leave
jle
lea
jge
call
dec
lds
cmp
push
sbbl
shll
jle
popf
adc
inc
jl
or
shll
push
or
cmp
xor
fs
adc
aaa
stc
ja
xor
mov
aas
push
push
jo
ret
in
popa
and
push
and
orb
popf
sub
or
loope
or
mov
dec
icebp
jo
test
sub
loope
pop
xlat
jne
fstpl
call
lods
cmp
lea
aad
push
inc
popa
test
dec
int
mov
cmp
sbb
sub
dec
jg
cltd
xor
call
inc
jge
mov
ret
lods
popf
xor
sbb
mov
cmp
xor
negb
dec
pop
push
dec
mov
jne
xchg
add
cmp
mov
xchg
and
xor
and
inc
pop
mov
ja
jne
in
sbb
std
sub
sbb
and
repnz
dec
cmp
aad
pop
movsb
push
inc
icebp
test
dec
mov
or
movsb
push
mov
lds
cmp
swapgs
add
icebp
add
push
sbb
cmc
push
xchg
lods
lds
xor
push
adc
pop
jl
test
addr16
mov
jns
ret
mov
mov
xor
fwait
adc
imul
filds
popa
movsb
mov
cmp
push
test
ljmp
xchg
inc
dec
rorb
std
push
in
push
scas
cwtl
add
push
rorl
jge
push
js
movsb
cmp
push
mov
adc
out
mov
sub
ljmp
xchg
xor
mov
or
rcrl
mov
xchg
popf
mov
shll
add
shlb
xchg
rcrb
inc
fistpll
in
xchg
inc
mov
pusha
aaa
jmp
loope
jp
lock
xchg
mov
test
push
adcb
dec
sbbl
enter
jae
frstor
loopne
jnp
push
mov
jbe
and
push
push
fld
mov
pop
xlat
roll
mov
sub
sub
and
fstpl
popa
jg
lds
shld
inc
lds
cmc
push
mov
jmp
stc
cmc
jl
inc
xor
xor
sbb
or
jbe
sbb
jbe
lods
int3
dec
lods
stos
xor
jne
stc
xchg
lods
idivl
mov
and
ret
jo
fwait
push
or
push
repnz
push
nop
pop
sti
cmp
mov
cmp
add
adc
jns
mov
inc
fisttpll
cli
jg
f2xm1
ret
push
cmp
sub
outsb
fldenv
push
and
adc
lea
sbbb
mov
aad
mov
cmp
imul
cld
cwtl
stc
addb
int
insl
jbe
cmc
cmp
cmpl
iret
mov
inc
jns
mov
xchg
enter
int3
int3
xchg
daa
and
das
push
xchg
jge
mov
pop
sub
push
push
and
xchg
scas
push
add
mov
lea
cmp
jl
inc
test
push
jmp
jge
cltd
test
xchg
imul
lea
xor
push
and
push
xor
push
xchg
pop
std
iret
xchg
mov
mov
xor
xchg
dec
notb
into
popf
call
in
inc
push
dec
mov
testb
sub
mov
add
push
ror
std
mov
out
loope
sub
jl
adc
xchg
in
xchg
loope
or
mov
pop
fisttpll
mov
xlat
pop
xchg
stc
lea
jmp
iret
jbe
push
test
in
scas
mov
icebp
push
pushf
xor
push
mov
pop
add
dec
dec
or
xchg
aad
jecxz
imul
push
or
or
lea
cltd
in
push
mov
cwtl
push
shrl
xchg
shlb
push
mov
cmc
pop
popa
leave
sub
rolb
xchg
cmp
push
xorl
xchg
jle
lods
test
jmp
jns
mov
subl
inc
orb
rorl
mov
popf
aad
xchg
dec
jle
jne
xor
lds
dec
sti
jno
shrl
or
add
push
xchg
pop
fisttpl
mov
inc
mov
xchg
in
sbb
popa
test
mov
dec
popf
mov
add
sub
mov
dec
xchg
test
mov
mov
movsl
push
jge
rcrl
jg
das
mov
xchg
or
or
cmp
add
cltd
mov
push
jo
mov
jg
jge
pop
mov
cmp
xor
in
mov
adc
push
mov
cmc
adc
int
mov
jno
xchg
inc
xchg
jmp
mov
xor
js
jmp
xchg
and
mov
pop
and
push
pop
mov
roll
mov
pop
nop
push
fs
adc
in
into
pop
fmull
les
dec
pop
cmp
sbb
lods
movsl
and
cmp
pop
xchg
addl
push
pop
and
inc
test
xchg
xor
mov
jmp
jg
add
mov
jp
mov
xchg
push
inc
roll
fstps
push
mov
and
mov
and
push
add
or
mov
adc
and
pop
mov
or
sub
sub
das
test
adc
lds
jmp
xchg
xchg
mov
add
mov
and
xchg
mov
into
test
cltd
jmp
je
sarb
and
in
jns
leave
adc
jmp
jo
jge
call
cmp
cmc
xchg
add
mov
lods
mov
cld
jmp
test
jne
push
lods
pop
or
jmp
jg
lea
icebp
mov
adc
mov
sbb
xchg
addr16
mov
imul
jae
sub
jnp
push
xchg
xor
xorl
jns
pop
adc
ret
addr16
adc
enter
push
xchg
xor
test
xor
cwtl
lods
icebp
stos
push
xor
cltd
add
cmpsl
nop
pop
push
lahf
mov
xchg
loope
mov
test
xor
push
test
xor
xchg
adc
mov
adc
and
xor
push
test
and
add
or
jbe
and
pop
mov
xchg
cmc
xchg
loopne
mov
ret
dec
andl
lea
pop
adc
adcb
mov
popf
int
mov
loopne
clc
and
and
mov
movsl
dec
cltd
mov
cmc
clc
loop
popf
ret
ret
and
sub
sub
and
cltd
jmp
dec
xchg
jne
adc
imul
imul
xchg
mov
push
in
push
jns
xchg
mov
fimull
aaa
cmp
mov
out
int
or
loope
or
sbb
aad
mov
icebp
or
imul
push
sub
jae
test
dec
xchg
aad
andb
push
jns
mov
jae
mov
inc
cmp
jle
pop
test
fsin
or
cltd
loope
ja
mov
inc
inc
cmp
xor
xor
or
dec
add
xchg
add
rcll
add
lds
aad
lahf
inc
in
ss
sbb
addr16
mov
inc
ds
imul
jns
mov
xor
leave
add
aas
mov
mov
mov
mov
in
pushf
aad
jle
push
cmpsl
call
push
andb
sub
mov
mov
movb
add
push
xlat
fstpl
add
sub
xor
ret
js
sbb
pop
popa
sub
inc
aad
loope
or
cmp
cmp
incb
setno
add
shrb
push
insl
xor
out
icebp
xlat
dec
mov
cld
push
std
and
arpl
ljmp
outsl
xchg
xchg
xor
ret
adc
inc
mov
enter
jo
sbb
adc
inc
push
and
dec
ss
jne
sbb
and
inc
pop
xor
mov
aas
jo
adc
add
dec
popa
mov
cmp
inc
sti
xchg
leave
fs
push
cltd
mov
popa
pop
dec
addl
pop
test
sbb
sub
cmp
jmp
adc
xor
mov
jno
enter
std
sub
cltd
dec
call
popa
je
xor
push
adc
nop
cli
mov
pop
nop
lds
mov
mov
lret
aam
je
cs
popf
push
sbb
dec
movsl
das
jmp
fsave
add
sti
inc
or
lret
push
push
and
sbb
jo
pop
clc
insl
adc
adcl
mov
inc
popf
rclb
inc
pop
xchg
pop
push
std
mov
int3
cmp
loopne
orb
sbb
scas
int
push
jmp
test
xchg
popl
dec
daa
mov
jmp
push
pop
push
hlt
pop
aaa
mov
aaa
adcl
fbld
mov
inc
or
jmp
icebp
icebp
sbb
das
xchg
ret
mov
imul
dec
mov
pop
sbb
in
cmp
movsl
xchg
shrb
insb
lds
xor
ret
icebp
ret
mov
mov
xor
popa
add
adc
push
leave
pop
adc
jns
sti
xor
dec
aad
xchg
sbb
insl
push
cmpsb
sub
dec
adc
xlat
jno
jmp
andnps
cmp
and
jecxz
and
jle
sar
adc
add
jns
outsl
inc
call
rcll
jbe
and
mov
iret
mov
mov
push
add
vmovupd
testl
jg
in
aad
add
xchg
or
xor
inc
mov
leave
leave
push
push
addr16
lea
lds
lods
mov
in
fnstenv
adc
in
dec
lock
shrl
ds
lods
mov
sub
mov
outsb
push
sub
nop
movsl
mov
xchg
mov
xchg
ret
lods
mov
cmp
fldl
and
aam
int3
cmc
pop
lea
push
insl
addl
mov
imul
mov
xchg
sub
xor
or
push
sub
push
or
cmpsl
out
dec
leave
aaa
movsl
lret
push
xor
rorb
add
dec
es
insl
stc
sbb
or
push
lock
addr16
push
icebp
or
push
mov
loop
aad
mov
mov
popf
mov
sbb
or
jg
jge
push
xchg
push
mov
dec
sbb
call
mov
test
call
xchg
fcoms
push
inc
xlat
sbb
popf
lret
inc
cmp
dec
and
fisttpll
inc
cmp
int
jns
jge
cltd
inc
mov
mov
cmpsl
dec
or
sbb
xchg
mov
cltd
mov
inc
cltd
jg
dec
sbb
lret
nop
addr16
xor
xchg
cwtl
or
mov
mov
xor
push
dec
lds
xor
cld
pusha
jae
std
mov
ret
scas
cmp
sub
je
mov
ret
push
test
mov
imul
repz
jg
mov
fs
popa
cli
pop
cmp
xor
imul
adc
fsub
mov
test
xchg
insl
iret
xlat
aad
dec
push
mov
sbb
stc
add
jbe
mov
adc
pop
xchg
lahf
adc
adc
xorb
xor
sbb
xorl
push
push
pop
dec
loope
outsl
sbb
jbe
inc
xchg
cli
aas
and
leave
inc
ret
pop
rcrl
mov
xchg
mov
or
ret
inc
inc
xchg
movsb
jne
stc
cmovae
insl
jg
mov
jno
movsl
jle
sub
mov
cltd
movsl
xchg
sarl
ja
iret
pusha
sbb
sarl
push
pop
test
pop
adc
test
pop
leave
cld
arpl
loope
ja
scas
push
add
and
popf
in
or
popa
or
dec
xor
mov
sbb
mov
and
sbb
ret
mov
call
pop
stc
xchg
cli
push
jbe
and
adc
ret
mov
inc
test
pushf
inc
in
jne
fldl
popa
scas
or
inc
lods
push
sub
popa
imul
loope
jns
cmpl
xchg
adc
or
inc
xchg
jmp
or
pop
cltd
stos
xchg
adc
aam
jl
push
fwait
in
shll
mov
lcall
lock
push
jo
scas
and
xor
mov
loop
call
pop
add
jns
loop
movsl
ret
add
sbbl
rclb
jmp
cmp
pop
adc
les
dec
xchg
push
addr16
adc
arpl
jae
xchg
jne
pop
xor
test
push
pop
pop
push
cltd
int
xchg
int
sbb
sbb
cmp
rolb
iret
imul
imul
sub
cmp
lret
pusha
or
js
dec
pop
cmp
or
popa
lahf
cmp
pop
jle
adc
cmc
fwait
jae
xchg
pop
or
inc
dec
pop
stos
push
pop
mov
fnstenv
or
repnz
jnp
inc
and
jl
jno
fcmovbe
dec
pusha
imul
and
dec
jbe
push
xlat
data16
fimull
adc
and
sub
mov
in
fsts
adc
lret
push
jb
push
mov
mov
dec
sub
mov
dec
das
push
adc
test
cmpl
mov
jge
popa
call
leave
ret
adcl
xor
mov
push
xor
cmpsb
mov
push
lea
sub
iret
fnstsw
sbbb
iret
jp
mov
sbb
popf
push
sub
call
push
adc
std
and
loope
sbb
mov
cltd
dec
fwait
jmp
add
push
jmp
mov
push
xchg
popa
xor
je
sbb
arpl
mov
mov
push
icebp
jmp
lea
jb
cltd
das
mov
pop
sti
fnstenv
push
stc
int3
xchg
movsl
popa
mov
rolb
push
pop
push
pop
pop
add
mov
dec
ljmp
jnp
inc
push
aad
imul
add
jnp
inc
inc
push
std
js
sub
xchg
sbb
sub
xchg
hlt
jno
mov
pop
mov
fldcw
mov
nop
loope
add
mov
sub
stc
repnz
inc
jnp
std
in
cmc
std
ret
push
rorb
pusha
sbb
xor
inc
push
test
jne
dec
add
daa
sbb
jno
aad
pushf
dec
sbb
call
call
mov
add
jns
add
imul
test
mov
in
lahf
test
push
lret
popa
push
sti
imul
pop
popa
sbb
popf
loope
or
dec
xor
inc
jbe
int
mov
push
in
int3
movsl
cmp
lods
sub
test
or
jne
adc
sbb
adc
call
or
jle
sbb
fists
adc
rcl
add
push
nop
imul
mov
push
add
mov
ficoms
orl
push
mov
inc
xchg
ja
daa
pop
push
push
jmp
or
push
mov
iret
out
jmp
push
add
jge
sti
leave
inc
jmp
lea
loopne
dec
lea
les
lock
mov
xchg
jns
call
in
ror
in
adc
imul
or
mov
test
mov
popa
or
add
or
aad
push
test
fadds
popa
jge
xor
test
mov
test
lcall
or
fidivrl
jge
push
imul
dec
mov
les
push
lock
push
cmc
sub
subb
mov
mov
push
jp
out
mov
mov
dec
adcl
sti
xor
xchg
rcrl
xchg
test
inc
decb
xchg
call
shr
imul
fldl
pop
or
xchg
outsl
xor
push
cld
dec
pop
sub
jns
push
adc
push
xor
inc
xchg
sub
cmp
push
xchg
xlat
loope
jmp
cltd
iret
push
jge
pop
fnstcw
push
test
push
pop
xchg
std
call
test
shll
sub
push
loope
pop
lret
push
xor
test
adc
adc
add
sti
push
xchg
sarb
sub
jne
dec
jg
dec
mov
icebp
mov
sub
iret
xchg
shlb
inc
or
mov
gs
jmp
or
rcrl
fnstsw
jmp
jne
ja
ret
rcl
xchg
or
or
mov
push
call
pop
into
pop
movl
xchg
stc
sub
cmp
int
pop
shrl
adc
cwtl
or
subl
shrl
popa
sar
aad
ja
cmpsl
sbb
cmpxchg
dec
pop
movl
sti
repnz
xor
rcrb
in
cmc
adc
pop
mov
lods
inc
mov
testl
ja
repnz
movsb
push
sub
orl
mov
idivl
jnp
out
inc
test
push
or
inc
std
xor
xchg
lea
fstps
std
sbbb
in
xchg
js
cmc
call
and
inc
aam
ja
and
into
mov
mov
pop
adc
push
lock
sbb
pop
outsl
test
xor
lea
xchg
testb
subb
cmc
test
mov
xchg
test
pop
popa
xchg
sbb
sbb
adc
adc
movsb
orl
or
adc
sbb
adc
ss
or
xchg
icebp
adc
jne
addb
shl
int
xchg
add
shl
and
fstpl
dec
out
cli
jmp
fld
xor
shl
mov
add
shll
xor
leave
jno
mov
test
lock
icebp
cmp
ljmp
cmp
movb
inc
cmp
mov
mov
lret
ljmp
sbb
pslld
loopne
test
or
mov
lock
or
inc
sub
cwtl
push
mov
or
test
clc
lds
roll
push
push
and
adc
call
jle
stc
mov
push
lock
sub
negl
jge
push
push
mov
fsts
inc
in
adc
xor
xchg
nop
dec
push
clc
loope
and
mov
pop
xchg
in
aas
in
shrl
and
mov
popf
xor
out
jne
pop
xlat
mov
clc
push
push
aaa
insl
repz
sbb
sub
adcl
daa
mov
xor
out
dec
or
sub
hlt
std
push
cmp
sbb
ljmp
mov
insl
adc
mov
cmpsl
sbb
mov
sbb
test
jge
pop
mov
push
test
daa
cmp
lods
iret
test
dec
orb
subl
insl
or
xor
mov
jg
popa
sti
cmp
sub
dec
adc
in
mov
mov
xchg
xor
push
in
or
and
lods
xor
xlat
frstor
xor
leave
push
orb
adc
hlt
pop
xchg
mov
lds
inc
sub
cmc
sbb
adc
inc
hlt
inc
das
mov
add
xchg
std
cltd
mov
push
cmpsl
inc
mov
ficompl
jno
cmp
sbb
sub
test
hlt
xorb
lds
js
sbb
flds
sub
rorl
xor
and
add
mov
sbb
xor
dec
xor
add
fldenv
dec
mov
in
xor
dec
and
cmc
lret
jnp
or
inc
push
jne
cmpsl
stc
adc
rorb
mov
fs
rclb
mov
and
push
sarl
rclb
ja
push
popa
sub
and
add
mov
jle
pop
xor
xor
xchg
cli
leave
inc
push
adc
xor
call
test
pop
jge
and
lahf
and
in
aad
lcall
mov
mov
sbbl
cmpl
xchg
jge
scas
in
or
in
in
rcrl
pop
repz
dec
push
hlt
and
jmp
and
pop
stos
xor
rcl
push
out
cmc
push
pop
push
andb
pop
fnstcw
paddb
xor
dec
lods
call
out
insl
es
cmp
mov
pop
mov
in
int
test
adcl
pusha
cmp
sbb
mov
mov
push
push
mov
cmp
cmp
add
pop
shll
addl
sarb
inc
push
popf
aad
sub
loopne
loope
or
xor
nop
mov
fs
insl
or
inc
ret
xchg
gs
inc
xchg
push
cmp
sbb
adc
mov
fsts
jbe
xchg
test
mov
cwtl
gs
xor
inc
mov
loop
test
mov
or
dec
lds
mov
cmp
sbb
and
cmp
leave
rol
mov
mov
or
add
adcl
cmovp
fbstp
xchg
dec
xchg
andl
sarl
xor
and
sub
jno
dec
fnstsw
inc
jns
xor
sbb
push
mov
pop
mov
inc
mov
add
push
vpshaw
xchg
adc
dec
cli
dec
adc
push
sarl
xor
jmp
xchg
sub
js
jo
and
aas
test
popa
sub
pop
fsubr
imul
adc
add
push
adc
scas
popf
push
shlb
mov
mov
cltd
mov
cltd
lret
stc
add
ret
adc
icebp
test
int
xchg
sarw
hlt
inc
mov
push
test
lock
mov
dec
push
adc
lret
int
jbe,pn
pop
sbb
std
rcl
std
stc
repz
xor
cmp
xchg
adc
xor
inc
sub
in
test
xor
sbb
les
gs
sbbb
addb
xor
int3
sbb
sbb
movsb
rorl
and
iret
stc
xchg
rorb
daa
mov
lods
stos
scas
and
and
jge
dec
pop
push
leave
mov
notl
mov
inc
cmp
leave
mov
xchg
leave
xchg
push
add
xchg
sub
mov
mov
fnstenv
add
mov
shl
fdivrs
movsb
xchg
aad
or
add
mov
dec
adc
aad
inc
jg
mov
xchg
popa
pop
loope
dec
fcomps
aad
jge
cld
mov
dec
arpl
shl
daa
rorl
mov
cwtl
pop
inc
flds
fsts
push
fistpl
das
out
loop
aaa
repz
es
aad
mov
cwtl
push
scas
dec
aas
xor
pop
push
add
push
push
in
push
push
push
jmp
testl
jge,pt
cmp
lods
xor
cmp
pop
rorl
sub
test
xchg
pop
inc
dec
push
mov
xchg
xchg
movsb
jb
mov
pop
push
jne
xlat
xor
js
pop
adc
lret
pop
and
cmp
test
dec
sub
mov
push
push
xchg
cmp
or
push
dec
jo
inc
pop
notl
push
fcoms
sub
fstps
rcll
lock
sbb
gs
dec
pop
adcl
mov
inc
sti
pop
dec
mov
push
dec
lcall
mov
push
pop
mov
push
xor
shrl
dec
sbb
xor
xor
jecxz
ds
out
daa
mov
inc
pop
int3
shl
cli
xchg
push
and
push
sbb
ljmp
mov
jmp
push
pop
ret
mov
sub
pop
int
push
and
cmp
inc
xor
and
xor
or
push
stc
jb
xchg
push
in
pop
mov
stos
mov
call
mov
mov
fs
std
iret
push
rorb
hlt
adc
jae
xchg
sub
insb
xchg
adc
test
push
or
mov
dec
jmp
clc
scas
aad
sbb
push
xchg
dec
dec
sub
inc
dec
lcall
imul
add
jp
ljmp
dec
std
dec
pop
out
inc
push
sbb
push
mov
mov
or
xor
fcoml
aaa
lret
fidivs
pop
jl
outsb
push
repnz
xchg
sbb
dec
iret
push
jl
push
inc
test
add
sbb
cmp
and
dec
fidivrs
add
push
pop
xchg
cmpsl
or
dec
es
clc
dec
sbb
sbb
pop
clc
inc
aaa
call
pop
enter
ss
mull
and
pop
push
xor
push
imul
inc
mov
xor
adc
mov
and
xchg
hlt
cmpsb
aad
xchg
xchg
jbe
adc
lds
aam
les
mov
xchg
test
repz
jecxz
ret
mov
xchg
xorl
and
add
loop
ret
mov
dec
mov
mov
and
stc
cmp
inc
push
mov
call
daa
fmul
inc
dec
cwtl
pop
push
mov
xor
xchg
out
push
pop
and
fcoms
and
xchg
xchg
xor
and
hlt
ja
xlat
iret
xor
jmp
add
in
iret
pop
pcmpgtb
adc
jns
out
jo
inc
jmp
cmpsb
fisubrl
scas
jnp
sbb
jecxz
and
pop
or
je
mov
lret
sahf
insb
inc
fcompl
insl
mov
jecxz
test
jg
pop
fistpll
fisubs
pop
and
cli
call
push
inc
xchg
push
sbb
pop
pop
sbb
xchg
cmpsl
cld
mov
pop
clc
mov
mov
mov
out
mov
cs
sbb
scas
lods
pop
mov
adc
push
sti
adc
in
mov
xor
lret
pop
lret
in
sub
sub
push
daa
leave
inc
jp
shr
mov
imul
sbb
and
mov
xchg
cmp
mov
push
lcall
cld
pop
arpl
lods
add
test
dec
nop
xchg
inc
lahf
push
pop
adc
ficompl
pop
rcrl
inc
fistpll
data16
fldenv
or
ret
sbb
pop
popa
adc
mov
or
and
cmp
jp
mov
pop
popf
iret
insl
jle
in
jmp
fmull
mov
rolb
filds
xchg
xchg
and
js
and
scas
push
jnp
jge
sbbl
dec
jmp
pop
sarl
into
pop
inc
xchg
xor
imul
mov
dec
pop
sub
aad
and
xchg
xchg
jecxz
in
lret
adcl
gs
mov
pop
addb
fisttps
mov
adc
adc
pop
sub
push
pop
mov
jb
movsl
or
jns
pop
arpl
ljmp
popf
sub
js
mov
push
lret
adc
dec
pop
mov
xor
or
mul
pop
pop
add
lock
js
push
fwait
stos
mov
fnstsw
inc
andl
fcmove
push
xlat
inc
sbb
clc
je
rolb
pop
and
inc
lret
sbb
adc
nop
mov
push
mov
out
std
xor
sbb
cltd
mov
jb
int3
sub
dec
dec
icebp
test
fsts
pop
fcomip
sub
cmp
insb
lea
fcoms
bound
popf
add
mov
and
scas
xchg
sub
dec
add
aad
ljmp
adc
pop
dec
mov
mov
fistpll
mulps
stos
jg
cs
push
movsb
sbb
xor
pop
rclb
jl
mov
sub
cmc
enter
in
repnz
outsb
sbbb
inc
cld
push
sbb
cmpsb
dec
outsl
js
sarl
cmp
stos
mov
jle
or
adc
sbb
gs
jmp
popf
jg
xchg
mov
int3
or
arpl
mov
movsb
inc
mov
dec
out
jge
outsl
idiv
add
test
xchg
push
and
popa
and
add
out
mov
into
push
mov
pop
repz
incb
mov
stos
sahf
sbb
ljmp
inc
gs
scas
loope
sbb
lret
testl
push
mov
fs
cmp
jo
jbe
ret
cmp
jno
pop
test
dec
xor
pusha
push
inc
mov
mov
lcall
test
pop
pop
xchg
mov
sub
push
mov
rorb
int
jge
jg
xchg
stos
xor
xchg
dec
call
fmull
shlb
mov
inc
jnp
mov
cmp
mov
adc
and
push
sti
in
rorb
jae
cli
fimuls
lods
pop
pop
xlat
mov
push
nop
mov
push
pop
mov
mov
adc
es
sub
jnp
pop
mov
xchg
push
outsb
cmpsb
mov
mov
bound
jnp
popa
movsb
mull
pop
ret
rep
cmpsl
inc
cmp
hlt
idivb
dec
pop
imul
js
pop
iret
in
inc
test
jle
lahf
cmp
movsb
test
fidivrs
cltd
insl
pop
in
or
std
negb
fstps
pop
pop
mov
add
pop
and
jg
iret
sbb
xlat
sbb
jp
cmpsl
out
rorb
insb
ret
dec
test
cmp
lcall
pop
and
divb
in
fwait
movsb
dec
shlb
out
addl
fidivrl
pop
fcompl
xchg
outsl
in
add
pop
cwtl
insb
jg
jae
mov
xchg
pop
add
pop
scas
mov
mov
mov
cmp
inc
negl
outsb
fistl
sti
enter
loopne
jmp
push
pop
jmp
scas
loop
addr16
xor
sub
dec
out
mov
std
sbb
push
sbb
sarb
flds
hlt
dec
fdivp
addr16
pop
or
stos
push
jmp
xor
outsb
pop
xor
and
pop
sub
jge
std
and
push
mov
or
jo
fistl
cltd
dec
add
pop
out
push
cmp
mov
fistl
gs
push
sti
jmp
pop
jecxz
pushf
imul
jbe
pop
mov
pop
neg
pop
movsb
sbb
cmpsb
push
test
xchg
pop
mov
lcall
mov
push
push
test
sbb
js
rcll
enter
and
lods
pop
fsubrp
pop
out
not
add
jg
jbe
cwtl
xlat
test
subl
push
push
enter
test
mov
negb
cld
jp
mov
pop
push
fs
mov
lahf
xchg
outsb
cmp
outsl
pop
jle
in
enter
pop
mov
xchg
mov
xchg
pop
out
adcb
xchg
mov
pop
sbb
adc
dec
lea
push
std
jecxz
push
movsl
ret
cld
insl
pop
lods
mov
push
pop
lods
int
push
mov
pop
data16
push
std
addr16
push
cmp
pusha
adc
inc
lret
pop
sbb
mov
mov
int3
pop
push
rcrl
pop
iret
out
mov
push
or
or
sbb
pop
add
xchg
pop
xchg
sub
cltd
push
dec
pop
adc
rcrb
out
and
xor
or
inc
pop
fmull
outsb
and
shl
iret
scas
inc
in
sbb
dec
mov
outsb
std
in
notrack
pop
pop
xorb
cmp
bound
pop
or
and
rclb
sbb
in
fstl
lods
sbb
mov
lea
fcompl
sbb
pop
ja
mov
fldenv
lods
adc
fcmove
cmp
pop
cltd
call
test
or
push
and
push
imul
jne
pop
out
jp
out
jb
flds
pop
popf
imul
cltd
popf
push
cmp
rclb
shlb
loope
or
pop
xchg
cmc
fcmovb
nop
pop
sbb
cwtl
lods
mov
xor
loop
fiaddl
aam
out
mov
cmp
loopne
cltd
mov
inc
dec
pop
and
iret
popa
out
test
pop
stos
mov
gs
and
test
or
imul
mov
sub
pop
adc
les
fs
push
and
sahf
rcrb
insb
dec
std
sub
sub
pop
adc
je
adc
or
adc
dec
aam
fnstcw
and
dec
lock
das
cmp
inc
aad
data16
push
test
pop
adc
dec
mov
rorb
add
dec
les
shl
push
mov
lret
and
in
dec
push
and
sarb
dec
inc
push
and
sub
add
cmp
push
mov
xchg
gs
push
into
fstl
push
push
cmp
dec
dec
aas
push
push
mov
jb
lock
fmull
std
dec
inc
fst
xlat
lahf
xchg
mov
sub
inc
leave
sub
sub
out
push
ret
push
jmp
in
in
fstpt
push
imul
fidivl
divb
cmp
mov
rolb
jmp
test
repz
xchg
pop
push
in
jno
repnz
mov
idivl
fdivl
push
out
xchg
jge
scas
add
icebp
addr16
lods
cmp
push
dec
iret
adc
out
mov
push
sbb
lock
hlt
mov
dec
adc
dec
and
inc
test
mov
sbb
mov
sbb
jmp
cmp
aas
adc
xor
js
in
popa
add
fcoml
ss
stc
push
clc
in
in
mov
or
dec
sahf
jl
pop
loope
adc
adc
or
inc
inc
push
inc
leave
sub
push
jns
out
or
push
enter
notl
cmpsb
inc
inc
xor
xchg
adc
daa
loope
sub
add
aam
stc
dec
div
push
jg
ret
mov
pop
adc
ror
or
push
ss
jne
and
dec
adc
adc
dec
sbbl
nop
dec
xor
icebp
loopne
adc
xor
cmp
sbb
inc
mov
inc
pop
loop
sub
dec
dec
aad
push
mov
adc
pushf
arpl
xchg
push
adc
lods
pusha
rolb
jo
cld
nop
jae
push
cmp
test
jl
jnp
pop
mov
or
lea
push
out
dec
jmp
jo
xor
mov
dec
push
js
leave
negl
dec
inc
push
icebp
in
jmp
out
clc
cld
jae
testb
cmp
jmp
and
test
cmp
xor
dec
sbb
add
or
push
jmp
adc
out
push
mov
add
pop
and
xor
sbb
loope
pop
and
jmp
and
movsl
cmp
mov
and
shr
add
or
jno
lock
jns
sub
and
cmp
loop
mov
and
mov
cmc
repz
pop
xor
jmp
push
sub
lds
repnz
and
push
push
sub
xchg
sub
sub
mov
loopne
jmp
loope
stc
ss
xor
aas
lock
cmp
and
ja
mov
adc
sub
jne
or
dec
clc
les
sahf
loope
lcall
dec
daa
sub
mov
and
hlt
sub
xchg
lea
stos
test
lcall
mull
mulb
clc
jp
and
push
leave
out
hlt
xchg
fdivrl
cmp
int
sbb
push
dec
pop
pusha
add
cli
out
sbb
and
dec
dec
and
sub
xchg
outsl
push
sub
mov
daa
cld
sub
adc
roll
jmp
inc
pushf
pop
dec
sub
dec
mov
adc
cmc
cmp
movsb
adc
es
rolb
lret
cmp
pop
adc
imul
inc
inc
ss
insb
and
icebp
leave
dec
xor
js
hlt
hlt
cmp
int
mov
sbb
xor
add
mov
loope
in
es
sub
cmp
sub
add
dec
leave
inc
mov
ret
sbb
add
inc
sbb
mov
jmp
push
cmp
shrl
adc
xchg
sub
mov
outsl
and
pop
and
pusha
dec
cmpsb
das
movsl
stc
sbb
ljmp
lods
push
push
sbb
das
movsl
in
xchg
and
fbstp
mov
fistpll
xchg
mov
mov
sub
or
shll
mov
popa
ljmp
adc
sbb
repnz
xor
sub
jb
es
fcomps
push
pop
and
imul
or
sbb
hlt
std
mov
inc
out
out
imul
in
leave
lock
repnz
sub
in
insb
adc
test
and
mov
int3
pop
add
hlt
fs
dec
ja
jge
jmp
xchg
loop
push
test
dec
cs
pop
lds
push
push
or
adc
push
shr
addr16
mov
dec
jb
pop
push
add
sti
nop
push
mov
sub
dec
dec
push
outsb
jg
cmp
popf
ja
loope
dec
dec
cmp
xchg
cmpsl
sub
push
cmp
lods
add
sahf
cmp
stos
out
and
lods
push
jno
cmp
or
daa
enter
ret
pop
js
inc
imull
out
pop
push
mov
pop
mul
xchg
and
xor
mov
cmpsb
and
cmc
in
xchg
push
xor
lods
inc
pop
inc
aad
adc
mov
add
add
aas
addr16
sub
cmc
hlt
in
push
les
jns
adc
pop
icebp
loope
shll
popa
xor
adc
lock
rol
mov
nop
xorb
das
pop
ud0
mov
jg
pop
cld
mov
mov
xor
add
sbb
cmpsl
push
fldenv
inc
imul
inc
pop
mul
push
push
xlat
inc
movl
cmpsl
xchg
push
out
dec
and
adc
push
scas
sbb
and
or
popf
add
and
dec
xchg
xor
xchg
sbb
cmp
cmpsb
xchg
test
sahf
inc
jecxz
insl
add
scas
push
test
imull
inc
cli
pop
mov
roll
add
test
mov
pusha
out
cmp
fistpl
pop
cmp
sbbb
cli
push
dec
sub
jl
shl
sbb
mov
cmp
es
push
pop
sub
xchg
icebp
xchg
jecxz
pop
test
jl
fimuls
sbb
mov
pop
jo
mov
sbbl
jno
imul
cmp
mov
sbb
inc
push
pop
xor
jmp
test
lret
jb
pop
jne
pop
jnp
enter
rorb
ljmp
in
stos
mov
pop
ror
movsl
jmp
pop
jg
push
les
jle
cli
sbbb
xchg
pop
ret
sub
daa
cmp
mov
pop
fldenv
xchg
xchg
in
mov
fistl
ljmp
imul
stos
pop
out
add
pop
xchg
push
test
mov
fstl
loopne
cld
fnstenv
sti
and
mov
xor
pop
xor
sarb
popa
cld
push
orl
inc
lods
scas
insb
pop
dec
adc
sub
mov
add
ja
pop
sub
push
andl
sbb
mov
dec
inc
mov
xchg
dec
adc
shlb
mov
es
mov
adc
ficompl
push
jnp
es
sbb
add
or
cmp
pop
movsb
bound
push
pop
mov
lret
or
mov
push
into
xor
repz
and
fldenv
sbb
mov
inc
adc
and
push
test
push
adc
test
push
pop
xchg
psrld
add
push
pop
call
and
push
jnp
dec
lds
pop
scas
nop
fisubrs
pop
mov
call
inc
outsb
int
iret
bound
push
nop
leave
xchg
mov
mov
pop
sbbl
jae
repnz
sub
ret
and
div
call
fstl
cmp
lock
pop
std
mov
pop
pop
xchg
xor
pop
fdivrl
pop
bound
dec
int
adc
xchg
pop
mov
jle
repnz
and
lahf
insl
pusha
push
jns
rolb
hlt
pushf
ja
adc
or
inc
pusha
adc
push
cmpsb
jne
lcall
dec
ljmp
jg
bound
mov
mov
pop
stos
and
pop
inc
mov
or
int
sti
sbb
sbb
cmpsb
mov
scas
cwtl
pop
dec
push
ds
sbbl
lahf
lcall
cld
mov
dec
jbe
xchg
cmp
push
cmovb
aas
ja
adc
dec
pop
lock
cmp
or
and
scas
lock
jno
cmp
mov
add
pop
mov
inc
adc
mov
scas
mov
jns
sbbb
sbb
sub
leave
fnstsw
sbb
test
pop
and
inc
js
dec
pop
lds
xor
xchg
pop
int3
add
or
sahf
leave
or
cmpsb
nop
cmp
dec
or
sub
sti
jg
leave
arpl
fsub
pop
mov
mov
pop
inc
lcall
push
ljmp
pushf
jmp
inc
sbb
lret
shll
int
pusha
imul
fidivrs
cmpsl
pop
pop
in
shlb
xor
imul
out
add
xchg
cmp
outsb
pop
jb
sbb
movsb
pop
fimull
jo
dec
adc
fdivl
push
and
iret
out
std
pop
pop
pop
aas
in
das
xchg
ja
pop
and
movsl
cmp
out
sbb
pusha
jp
pop
cli
fimuls
cmpsb
push
mov
sub
sub
dec
mov
popl
and
cli
mov
pusha
mov
popf
pop
pushf
jne
and
mov
sbb
dec
add
ret
cmp
mov
pop
mov
mov
xor
inc
cltd
mov
pop
movsl
cmp
dec
and
into
mov
lret
fld
sbb
jp
and
and
pop
daa
mov
ret
adc
adcb
mov
adc
pop
jae
xlat
fbld
pop
outsb
inc
pop
imul
xchg
dec
arpl
mov
pop
sub
and
rcrl
jp
into
shrb
mov
lret
mov
push
and
or
in
call
and
scas
xchg
stc
int
loope
jmp
popl
leave
lds
dec
mov
sbb
loop
pop
add
mov
jmp
pop
fwait
data16
les
scas
ja
pop
lret
or
cmp
stos
xor
fbstp
mov
repz
and
mov
pop
sarl
xchg
sbb
scas
jg
mov
mov
push
sub
mov
dec
push
pop
rolb
jne
push
cmp
xorl
rcrb
dec
js
ja
pop
add
xchg
cmp
popa
es
pop
inc
sub
stos
xlat
pop
leave
push
ficompl
int
xorb
jo
mov
xor
mov
scas
and
mov
jecxz
pop
jo
jp
pop
xchg
je
push
test
pusha
sar
aaa
mov
popa
pop
xchg
pop
adc
std
test
gs
int3
pop
xor
mov
in
push
or
loop
and
pop
sub
xor
das
stos
cmp
loope
lock
inc
mov
and
sbb
xchg
sbb
inc
aaa
push
in
and
sbb
in
cmp
mov
insl
jbe
cltd
into
mov
repnz
mov
or
cmc
pop
loope
lret
loopne
daa
aam
pop
add
jle
js
pop
loope
inc
xor
jbe
test
sub
dec
cmc
or
mov
xchg
pop
fmul
or
test
repnz
sbb
bound
mov
ljmp
repz
dec
je
mov
or
int3
adc
daa
pop
cld
sbb
sahf
push
gs
inc
rclb
test
xor
adc
or
add
or
in
pop
mov
clc
addl
lea
pop
inc
rcrl
imul
js
mov
arpl
je
mov
in
jmp
cli
nop
jnp
lods
in
add
dec
adc
sbbb
cmp
adc
pop
out
mov
add
and
ss
neg
cmp
xlat
mov
cmc
es
mov
mov
sbb
std
adc
pop
jne
mov
addr16
cmp
sbb
mov
inc
mov
pop
or
lahf
mov
push
fcompl
sub
push
pop
fnstcw
inc
dec
sbb
pushf
fyl2xp1
fmuls
into
movsl
daa
push
outsl
adc
xchg
sub
pop
push
and
adc
dec
sbb
xchg
mov
cli
jb
ret
rcrb
pop
push
mov
adc
int3
add
or
sysret
icebp
ret
out
ds
loope
in
jmp
cmpsl
pop
rorl
sub
pop
out
adc
call
push
insl
imul
or
inc
mov
xchg
xchg
ret
test
pop
xchg
fmuls
sub
stos
fisttpll
push
gs
cli
sbb
test
pop
jns
mov
mov
and
sub
inc
jecxz
and
cmp
fsubs
push
sub
push
cmp
stc
mov
lds
out
lahf
leave
in
or
push
lea
je
inc
cmp
add
cli
pop
mov
in
cmp
mov
xchg
pop
pop
popf
xchg
pop
jo
inc
iret
outsl
jno,pt
fisubl
pop
pop
sub
mov
pop
daa
sub
sbb
xor
in
stos
mov
pop
es
push
add
push
or
andl
fimull
outsl
pop
push
fs
ljmp
mov
and
push
xor
pop
push
mov
lock
int
fsubrs
inc
adc
in
mov
movsl
mov
push
into
and
xchg
rcrl
imul
pop
fistpll
xchg
test
pop
les
fwait
icebp
dec
lahf
xchg
mov
mov
mov
imul
daa
ret
ja
fnstenv
mov
mov
inc
cmp
xchg
pop
imul
pop
mov
sbb
lret
je
movsl
xor
inc
sbb
leave
call
pop
repz
out
pop
stos
mov
mov
dec
jle
sti
cli
push
pop
jae
or
out
dec
jnp
and
jbe
push
pop
mov
pop
mov
inc
push
scas
pop
sub
mov
test
pop
cmp
fucomp
movsb
pop
in
or
ja
mov
fld1
mov
sbb
bound
pop
es
xchg
std
jle
cwtl
and
imul
addr16
repz
aas
aaa
iret
jecxz
jmp
xor
mov
cmpsl
adc
cmp
loopne
mov
in
pop
jle
mov
xlat
pusha
subl
jp
loopne
inc
pop
faddl
mov
pop
lock
add
cmp
lods
out
mov
pop
xchg
data16
mov
fistps
push
xchg
push
and
pop
rclb
sbb
cmp
fstl
sub
or
mov
lret
ficompl
xchg
cmp
mov
pop
push
test
fsts
sbb
xor
sub
mov
xor
mov
ret
mov
pusha
enter
dec
gs
push
jbe
test
pop
sub
jne
push
inc
cmp
xor
in
add
loopne
adc
pop
in
das
inc
test
in
pop
push
into
cmp
add
les
ja
xlat
and
insl
or
xchg
adc
push
mov
jbe
js
push
sbb
adcl
insl
and
xor
sti
sbb
nop
push
lret
imul
sub
int
and
mov
fisubl
jg
movsl
pop
cmp
rolb
jne
pop
jbe
adc
ret
jge
sahf
iret
sbb
jmp
pop
push
ss
lods
mov
cmp
lea
icebp
and
dec
push
adc
hlt
dec
out
repz
xchg
ljmp
leave
sbb
ds
mov
lahf
pop
cli
mov
sbb
dec
mov
cmpsb
pop
cvtpi2ps
push
sti
repnz
dec
mov
fdivrp
js
push
inc
push
cmp
repz
pop
stos
mov
fsubrp
pop
insb
and
repnz
sbb
push
lret
mov
push
scas
lret
or
pop
cmp
cli
xchg
call
xor
sub
sub
mov
and
sbb
sbb
add
lods
in
lea
and
out
mov
movsb
lcall
stc
orb
out
or
sub
loopne
push
adc
jl
fcoml
sbbl
outsb
fstps
pushfw
ret
or
add
push
push
pop
xchg
mov
les
xchg
adc
pop
aam
loope
mov
rcrl
mov
push
outsl
xchg
addr16
aam
outsb
push
xlat
decb
dec
xchg
lock
push
sbb
sub
dec
lcall
mov
push
sub
ja
jl
xorb
out
sub
inc
icebp
in
dec
xchg
ret
sub
repnz
pop
push
hlt
rcll
negl
xor
rcll
sbb
pusha
mov
gs
mov
rcrl
sbb
in
and
pop
or
sbb
sub
mov
or
std
inc
ds
int3
or
sub
pop
sbb
lret
loope
repz
inc
inc
xor
push
mov
das
and
rep
sahf
or
out
push
sub
sbb
dec
gs
dec
pop
loop
shrb
xorb
je
or
pusha
call
iret
push
pop
mov
pusha
mov
daa
jle
pop
stc
jno
cs
aam
int
or
mov
imul
je
mov
ficompl
pop
mov
adc
aas
sbb
mov
dec
das
ror
jle
mov
outsl
sub
lahf
addr16
dec
cmp
sbb
lret
scas
pop
or
addl
mov
lods
cmp
xchg
pop
or
pop
pop
xchg
call
xchg
cmp
hlt
out
jge
inc
sub
sbb
arpl
mov
fsts
rcll
pop
lret
or
imul
pop
inc
mov
pop
push
loopne
dec
cltd
or
aad
jnp
mov
mov
outsl
and
add
inc
lods
stos
add
or
xchg
rorb
scas
movsb
cmpsb
outsl
clc
cwtl
daa
and
jmp
pop
and
fdivp
jle
xchg
in
and
sub
inc
xchg
sub
std
popa
int3
dec
cmpsl
or
and
test
mov
std
push
insl
lcall
pop
inc
pop
cmp
jne
pop
lea
dec
in
enter
jmp
mov
imul
arpl
sub
dec
or
out
fidivrl
sbb
movsb
push
cmp
adc
inc
pop
popa
dec
lret
dec
cmp
mov
xchg
dec
mov
dec
xchg
imul
fcmovnbe
push
adc
cltd
mov
pop
xor
je
mov
fmuls
jle
adc
jns
arpl
push
push
sub
enter
movsl
test
jp
sbb
ljmp
xchg
popa
jmp
push
jns
jno
ss
sub
arpl
call
lds
mov
jb
jbe
aas
add
pop
lcall
aaa
pop
fidivl
push
sahf
addl
imul
jmp
cmp
dec
in
cmpsl
jecxz
dec
lock
test
pop
cmp
leave
inc
cmp
sbb
pop
insb
adc
daa
xor
pop
sbb
loop
repnz
pop
push
xchg
sub
and
pop
add
mov
sub
int
lea
repnz
xchg
xchg
cmpsb
pop
adc
shl
xchg
in
fcomps
pop
lea
sarb
mov
sbb
je
push
jmp
icebp
imul
dec
add
mov
pop
ljmp
bound
lcall
inc
cmp
ret
stos
leave
pop
orb
cmp
cltd
mov
adc
xor
mov
xchg
stos
cld
or
mov
pop
stc
mov
loopne
pop
js
sbb
jg
pop
mov
jbe
cmp
jecxz
popa
and
fldl2t
and
cltd
jne
pop
mov
insl
repnz
aam
pop
movl
lahf
ja
pop
push
add
push
pop
pop
or
lea
pop
pop
adc
mov
inc
or
sbb
insb
jge
jbe
fucomi
dec
mov
push
shll
push
sbb
mov
jmp
loopne
cmp
sbb
pop
sub
mov
pusha
dec
or
cwtl
push
jg
stc
rorl
adc
push
xor
push
inc
lcall
aas
or
push
mov
jbe
xor
addr16
ret
dec
fdivrl
cmpsb
xor
ljmp
sbb
and
cmp
or
fs
sbb
xor
repnz
sbb
lods
sbb
shll
dec
xorl
jmp
fiaddl
inc
insb
dec
xor
inc
ficoml
add
cmp
cmp
subb
dec
pop
adc
movsl
aas
mov
and
jns
mov
sbb
in
ret
cmp
fldcw
pusha
loop
pop
dec
frstor
xor
mov
inc
xchg
sbb
lea
jae
fsubr
aad
push
or
fcmovnu
ljmp
xchg
inc
bound
popf
lret
mov
scas
out
loopne
pop
pusha
into
jae
stos
push
jb
jmp
ja
mov
into
push
xchg
cwtl
clc
pop
repz
and
and
cmp
lods
sbb
pop
rcrb
jl
ss
dec
lock
daa
aam
inc
sbb
push
mov
push
data16
sbb
pop
fists
pop
push
les
or
sbb
pop
mov
add
scas
sub
sbb
nop
lret
push
jns
in
jl
add
dec
fs
pop
imul
inc
xor
xchg
push
loop
pop
and
add
jo
pop
push
test
stos
jno
jns
gs
decb
test
cltd
enter
pop
enter
mov
push
pop
push
push
and
addl
call
adc
pop
mov
or
shll
cmp
pop
or
ljmp
or
cltd
cmp
lods
xchg
pop
rcrb
dec
sub
pop
cs
sbb
jmp
es
push
mov
sahf
loop
insb
sub
xor
lret
inc
outsl
dec
aaa
pop
fcomip
push
inc
push
mov
jg
addb
lods
and
test
adc
in
push
out
cmp
js
sahf
pop
daa
and
ret
ret
loopne
hlt
mov
popa
in
pop
push
mov
aas
jl
sbb
bound
mov
push
push
mov
push
dec
push
dec
testb
int
sub
arpl
push
loop
cmp
ja
push
mov
and
mov
fidivs
dec
sub
pop
dec
call
into
addr16
sub
iret
fsts
push
iret
push
adc
inc
cltd
icebp
push
dec
push
and
pop
push
jnp
xor
push
movsb
add
mov
hlt
int3
dec
ljmp
mov
rcrb
lcall
push
add
jg
adc
dec
jo
jmp
pop
dec
dec
pushf
aas
pop
lcall
fidivl
daa
imul
and
sub
pop
cmp
push
pop
ficompl
loopne
popl
or
inc
sbb
mov
dec
fsts
daa
dec
push
cmp
inc
pop
push
pop
mov
ljmp
stos
sub
pop
push
ss
rcll
dec
bound
xor
cs
adc
inc
push
sahf
in
pop
add
push
push
lcall
insl
push
js
pusha
inc
and
cmp
test
sub
dec
pop
sbb
push
pop
int
dec
inc
push
daa
inc
pop
pop
cmp
js
cmp
dec
es
aad
and
push
imul
pop
jge
pop
mov
sahf
and
bound
pop
dec
mov
int3
inc
inc
enter
dec
leave
daa
test
mov
lea
sub
add
popa
jl
sub
dec
ss
cmc
cmp
push
dec
push
cmc
push
sub
cwtl
test
jmp
sub
push
inc
push
push
push
popa
out
out
mov
into
pop
imul
pop
aaa
or
mov
or
sub
xchg
or
pop
xlat
inc
mov
dec
sbb
xchg
jae
ss
xorl
in
mov
mov
pop
cmp
int3
in
jb
adc
jecxz
jno
int3
dec
mov
pop
mov
mov
loop
in
out
inc
mov
loop
aam
xchg
adc
loop
mov
xchg
jo
mov
dec
xchg
sbb
mov
lcall
fadds
in
sub
xchg
inc
push
in
lds
arpl
jecxz
imul
pop
sbb
shll
in
cmpsl
mov
das
cmp
arpl
pop
lret
leave
and
and
and
cmp
fidivl
stos
mov
orl
lahf
adc
or
xchg
dec
in
lret
das
andl
cmp
sbb
dec
and
dec
pop
movsb
jbe
bound
xchg
lea
pop
push
push
idivb
push
inc
push
xor
rcll
xchg
mov
sbbb
mov
inc
pusha
das
lcall
scas
mov
dec
push
xchg
fwait
push
xor
sub
adc
adc
push
repz
adc
in
filds
pop
pop
inc
cmpsl
dec
xor
xchg
pop
jmp
dec
popa
pop
das
sub
repz
mov
hlt
out
xchg
lods
out
inc
push
add
rcrb
push
sbb
add
push
inc
and
push
mov
ret
adc
inc
jmp
push
and
dec
shl
xchg
inc
xchg
daa
sbb
inc
adc
sub
dec
js
dec
dec
aaa
xor
jo
and
push
xchg
and
cmp
push
stos
push
cmpsl
inc
shrb
xchg
push
jns
sbb
sbb
rclb
add
or
cmp
mov
mov
inc
shrl
sbb
insl
sbb
mov
push
cmp
popa
outsb
andb
mov
pop
enter
dec
cli
mov
std
lret
cmp
and
gs
xchg
cmp
jmp
push
or
cmc
cmp
js
pop
gs
cmp
push
inc
loope
push
xchg
push
dec
jne
jle
aas
dec
and
dec
data16
in
sbb
dec
das
xchg
inc
xor
mov
adc
push
daa
push
cs
cltd
popf
test
stos
xchg
shl
pop
lcall
iret
jns
mov
dec
or
ss
jle
xor
or
hlt
repz
out
int
pop
cmp
call
fs
xchg
cmp
repnz
jae
jge
nop
pop
push
daa
or
or
icebp
sub
popa
ss
dec
mov
adc
xchg
push
mov
sbb
or
mov
inc
loope
cmp
test
dec
stc
and
mov
xor
xor
push
gs
outsb
cmpsb
mov
mov
movsl
adc
test
rep
jae,pt
nop
cmp
sub
sub
and
icebp
sub
adcl
outsb
push
lods
and
adc
and
jle
push
push
jmp
sub
shrb
cmc
push
push
dec
and
add
xor
cmc
jp
loope
inc
icebp
dec
xor
adc
xor
push
cs
jmp
xor
sbb
icebp
enter
icebp
daa
aad
cmp
mov
xchg
cmp
aad
dec
sbb
mov
ds
push
sub
ss
or
gs
dec
shrb
push
jmp
dec
sbb
cmpsb
and
xor
movsl
int
jl
jle
jmp
push
in
aad
lods
jmp
mov
push
cmp
cltd
addr16
enter
aam
leave
xor
cs
xor
cmp
add
jecxz
aam
jns
out
xor
xchg
cmp
and
lds
jmp
mov
das
and
std
mov
mov
push
push
fbstp
push
xchg
and
xchg
push
jl
sub
and
push
stc
stos
stc
dec
push
repnz
jecxz
push
dec
inc
and
push
cmp
pop
xchg
daa
ds
ret
sbb
frstor
xchg
or
inc
xchg
push
add
adc
iret
push
sti
cmp
cmpsl
sbb
pop
ljmp
pop
lock
sub
jle
scas
in
add
and
test
in
or
icebp
push
mov
stc
or
rolb
adc
xchg
push
and
sub
sahf
flds
inc
jns
and
in
insl
idivb
push
ds
aaa
daa
icebp
jo
cmpl
xchg
jmp
push
sbb
jmp
push
xlat
dec
pushf
mov
dec
ss
shrl
stc
mov
push
sbb
fisttpll
dec
sti
sub
inc
jo
xor
jmp
sub
push
cmpsl
pop
movl
fnsave
ds
rorl
mov
jne
out
jns
add
inc
add
dec
gs
repz
xor
test
inc
push
outsb
jmp
push
andl
rcll
in
xor
or
out
mov
inc
scas
jno
shrl
dec
lods
cwtl
dec
push
test
incl
aas
inc
idivl
das
sub
mov
jns
mov
shll
push
loope
imul
imul
aam
inc
in
pop
aaa
adc
out
mov
mov
inc
or
aaa
mov
push
jmp
xchg
and
sbb
and
pop
mov
mov
or
cld
dec
ret
ja
in
dec
in
push
clc
add
in
add
add
xchg
cmp
xor
inc
in
pop
rclb
fdivrs
out
movsb
and
dec
enter
gs
mov
inc
sbb
sub
icebp
push
cmpl
add
rcll
scas
xchg
xchg
cmp
outsl
aad
add
xchg
adc
sbb
xchg
sbb
gs
sub
and
push
pop
xor
sub
sub
lea
enter
mov
fadds
mov
cmp
xor
inc
pop
dec
adc
inc
cmc
inc
sub
in
jl
mov
ja
iret
inc
and
inc
sub
aaa
sbb
mov
dec
xchg
or
adc
enter
cmp
push
adc
pop
icebp
pop
jns
mov
sbb
cmc
mov
cmovbe
xor
and
add
bound
lea
fld
adc
sbb
out
cmc
fstpt
ljmp
adc
dec
inc
or
jmp
daa
inc
aas
lea
out
pop
dec
ds
jne
std
or
dec
add
adc
sbb
pop
jae
jo
lds
jae
push
test
cmp
aaa
pop
xchg
sti
cmp
xor
mov
aas
or
repnz
and
pop
push
cli
xor
dec
cmc
adc
xchg
pop
sub
aaa
mov
repnz
dec
xchg
push
sbb
sbb
dec
daa
clc
dec
and
xchg
lret
testl
dec
divb
mov
lea
cmc
fcoml
dec
inc
daa
dec
and
idivl
or
adc
inc
pop
and
test
and
xor
push
and
jb
cmc
sbb
adcl
push
loope
mov
movsl
jne
add
js
inc
jg
push
leave
call
push
shrl
jge
jle
cmp
xchg
dec
dec
jbe
adc
inc
mov
pcmpgtw
ret
push
sti
cs
dec
sbb
mov
ljmp
add
and
iret
inc
or
cmp
dec
adc
adc
or
and
icebp
out
addr16
cmp
xor
mov
mov
aad
ds
add
dec
pop
jne
sti
mov
in
and
pop
lods
jb
sbb
push
fsubrs
jnp
mov
sub
shrl
leave
aad
jmp
ret
pop
cld
jne
dec
ror
cltd
dec
pop
sbb
sbb
enter
or
sub
push
decl
fisubrs
dec
dec
sar
sub
out
aas
sub
add
or
xor
or
rorl
out
xor
inc
cmpsl
mov
inc
dec
xor
cmp
call
clc
fstl
in
shll
adcl
inc
cmpsb
adc
xchg
add
and
push
cmp
jmp
std
sbb
arpl
es
out
or
cmp
xor
xor
rcrl
out
and
adc
jg
out
loope
ja
in
dec
mov
mov
gs
add
add
push
dec
test
sbbl
or
mov
or
fistpl
test
stc
dec
call
test
push
ljmp
xchg
adc
dec
push
repz
mov
loope
push
test
adc
dec
rclb
mov
pop
dec
and
nop
or
push
xorl
cmc
sub
mov
push
or
rcll
sub
cmp
hlt
jmp
jg
jae
out
mov
mov
dec
fmuls
adc
mov
dec
mov
std
gs
cmp
or
daa
inc
gs
fisttpl
push
inc
sbb
adc
out
iret
push
cmp
or
inc
loope
pop
push
dec
xchg
cs
push
jecxz
dec
jge
or
inc
gs
mov
cmp
leave
push
mov
xchg
insl
lds
cmp
xor
inc
adc
in
xchg
cmp
inc
xor
xor
dec
jl
cmp
jbe
or
cmp
insb
xor
jb
imul
jmp
adc
stos
dec
dec
lret
push
cli
sub
adc
inc
aaa
dec
xor
adc
stos
sub
add
clc
dec
dec
pop
stc
jns
pusha
push
dec
lret
pop
sar
dec
adc
and
sahf
xchg
cmp
in
aas
jl
pop
mov
mov
push
mov
xor
in
and
xor
leave
sub
and
bound
cmp
jmp
leave
popa
inc
data16
cltd
xchg
outsb
bound
mov
imul
inc
loope
arpl
inc
jb
adc
aas
mov
push
cmp
push
dec
dec
push
dec
sub
cmp
in
xor
cmp
mov
aas
or
faddp
aam
push
sbb
jo
pop
xor
cmp
aad
inc
xchg
lds
es
cmpsl
cmp
sbb
add
xchg
cmc
sub
dec
mov
inc
daa
xchg
mov
test
cmc
adc
imul
xchg
lods
pop
xlat
popf
and
xor
xchg
hlt
aaa
xor
push
lret
testl
sub
das
cmpsb
push
rcll
and
jns
pop
into
sub
or
cmp
fldl
push
in
shll
xor
ja
ss
lds
cmp
stos
call
jp
mov
push
mov
mov
adc
test
mov
mov
mov
xchg
xor
or
pop
sub
or
ss
jb
mov
fisubs
mov
fsincos
pop
mov
jno
push
xor
std
leave
xchg
ret
hlt
and
vmwrite
jno
fmull
pop
push
int3
loopne
cmp
mov
cltd
inc
push
push
inc
sbbl
loopne
push
scas
mov
cmp
cmp
aam
out
cmp
xor
pop
cwtl
xchg
cmp
xor
push
sub
cmpsl
inc
aaa
nop/reserved
xor
test
idiv
les
sub
jno
enter
out
icebp
mov
ljmp
mov
daa
mov
lock
aaa
lea
cmp
std
push
xchg
xlat
inc
shr
xchg
dec
pop
push
in
cmpsl
add
imul
rcl
push
aam
icebp
lds
cmp
lds
pop
push
adc
das
or
sub
add
movsl
decl
in
xlat
or
clc
sbb
and
rcll
pop
sub
bts
repnz
enter
clc
jb
ror
imul
xor
es
push
rolb
pop
lock
test
cmp
out
daa
inc
fadd
push
inc
or
cmp
dec
cmp
loope
in
cli
hlt
cmp
add
and
jmp
add
mov
inc
jne
cmp
add
hlt
shll
add
cmc
lods
and
cmc
pop
and
cmc
pop
sub
lods
push
aam
sbb
sti
pop
std
imul
cld
lret
lock
dec
push
inc
cmp
dec
stc
fst
leave
sbb
in
icebp
sbb
push
cmc
cmp
sbb
mov
adc
sbb
add
jg
out
cmp
or
notl
xchg
sbb
aam
pop
ja
cmp
add
lods
fsubs
cmp
push
xor
pop
xor
push
pop
fs
bound
adc
push
adc
ret
mov
push
dec
adc
dec
sub
and
inc
in
cmc
jmp
xchg
xor
pop
pop
mov
xchg
dec
or
rolb
cltd
cmc
push
adc
orl
sub
rcrb
or
sub
and
add
xchg
adc
mov
fnstsw
arpl
and
inc
cltd
aaa
push
sti
test
mov
xlat
aam
inc
arpl
cmp
jb
imul
loopne
or
gs
ret
push
sbb
dec
pop
arpl
int3
or
jae
mov
xor
sbb
adc
pop
mov
fdivs
pop
es
and
inc
out
mov
add
ret
loopne
mov
ds
cmp
test
adc
addr16
inc
call
inc
and
gs
insb
aas
hlt
inc
xchg
inc
in
pop
push
mov
xchg
push
cs
cvttps2pi
mov
adc
in
xor
add
adc
and
mov
push
and
xchg
fwait
jno
mov
or
pop
mov
outsb
dec
shll
pop
mov
icebp
mov
int
mov
inc
mov
das
cmpsb
leave
mov
cmp
jbe
xor
or
cmp
sbb
in
push
adc
ret
add
sub
arpl
mov
sahf
repz
mov
repnz
cmp
dec
mov
cmpsb
dec
lret
stc
fs
push
in
inc
push
xor
push
ds
in
jp
push
adc
xchg
xor
pusha
in
sbb
fldl
pop
inc
arpl
rcrb
push
psllq
add
sbb
xchg
ret
jmp
test
mov
xchg
xchg
inc
ljmp
sub
sbb
push
dec
lds
addr16
xor
push
call
imull
iret
stos
sti
pop
dec
aam
insb
mov
or
out
adc
stc
sub
jae
add
push
adc
mov
in
xor
push
push
and
xor
jno
mov
xchg
push
aaa
adc
shlb
out
dec
outsl
repz
ficoms
pushl
sub
sub
imul
xor
inc
sbb
sub
nop
or
lret
or
das
or
fistpll
push
imul
test
mov
mov
cmp
push
xor
push
das
cmc
xor
in
cmpsl
xor
dec
addr16
cmpb
jmp
xor
dec
adc
loop
adc
cmp
aaa
and
mov
lea
adc
loope
cmp
push
cmpsl
repz
pop
dec
adc
wbinvd
mov
enter
mov
inc
dec
cli
shr
inc
and
jb
mov
es
sbb
push
and
aam
out
aaa
cmp
adc
test
push
dec
fildll
pushf
mov
pusha
hlt
bsr
hlt
push
inc
xchg
cmp
inc
lods
cmp
mov
sbb
pop
cmp
movsl
lret
lcall
mov
adcb
iret
cmp
jecxz
inc
xchg
ss
cmp
adc
mov
xor
xsha1
cmpsb
or
sub
xchg
cmp
pushf
es
lret
sahf
fcoms
pop
cmpsb
xchg
shlb
xchg
stos
mov
sti
loope
outsb
mov
inc
loopne
mov
pushf
dec
pop
into
in
cmc
insl
lds
mov
nop
xlat
daa
push
xchg
nop
decb
test
jmp
loope
cmpsb
and
out
aad
lods
cwtl
in
pop
inc
sbb
fistps
ss
sub
aam
aas
mov
gs
push
mov
testl
dec
int3
dec
pop
inc
outsb
lret
leave
clc
pop
sarb
xchg
inc
pop
sbb
sbb
je
dec
pusha
pop
pop
test
sti
sti
fdiv
roll
mov
aam
sbb
fs
shlb
mov
sub
ss
push
sub
jne
psubq
cwtl
fisubs
push
cwtl
mov
dec
sbb
cwtl
xor
cwtl
inc
mov
sbb
pop
in
mov
adcl
mov
es
mov
test
push
dec
mov
call
push
dec
pop
pusha
rcpps
adc
outsb
imul
fisubs
add
mov
idivb
mov
xor
cmp
push
test
inc
cmp
mov
int
fsts
cmpsb
mov
cmp
mov
cld
jns
sti
or
mov
enter
push
jmp
jb
int3
xchg
push
arpl
inc
in
push
cmp
cmp
fstl
aaa
push
cmp
jbe
fidivrs
push
sbb
cs
or
mov
cmp
jp
iret
add
dec
push
fwait
cmp
push
push
adc
mov
dec
dec
mov
dec
mov
xchg
stc
dec
and
scas
pushl
dec
out
pop
in
dec
hlt
ss
and
mov
dec
aam
dec
sbb
dec
add
ss
xchg
dec
inc
or
dec
aam
dec
lret
dec
inc
jne
mov
and
xor
mov
cmp
mov
and
sti
and
adc
stc
push
inc
movsl
scas
arpl
dec
xor
inc
loopne
out
inc
jmp
pop
inc
scas
add
sbb
pop
push
add
sarl
dec
mov
push
lret
daa
jle
in
pop
and
or
nop
inc
or
into
cmp
and
or
xchg
insb
add
sti
out
dec
mov
xlat
xlat
rolb
shr
push
les
pusha
cmp
lea
cmp
mov
lods
dec
xchg
or
in
sar
rorl
mov
xchg
mov
sub
shrb
mov
fcoml
adc
leave
inc
adc
rorl
fstl
jmp
xor
xor
inc
aas
xchg
das
dec
dec
int3
hlt
ss
jo,pt
xor
cmp
push
sbb
ja
movsl
stos
leave
add
add
sub
rolb
gs
jmp
cmp
adc
sbb
leave
aas
inc
mov
pop
mov
pushf
aaa
cmovbe
sub
call
std
jmp
pop
fs
xor
sbb
lcall
jb
outsl
mov
or
pop
sbb
mov
aas
mov
jbe
or
hlt
pop
xor
aam
adc
es
xchg
cmp
sub
dec
cmp
inc
or
push
push
and
cs
jmp
cmp
mov
cmp
jno
push
mov
jmp
in
aaa
ds
in
ss
test
cmp
sub
mov
mov
dec
cmpsl
inc
xor
imul
or
mov
mov
or
lods
xor
dec
cmp
dec
fildl
insl
adc
fcoms
jp
jne
cmp
sub
add
xchg
out
mov
mov
cld
into
mov
mov
in
xor
shll
lds
push
add
inc
sub
cmpsl
jl
xchg
dec
dec
sbb
mov
dec
cmp
sub
xor
sbb
pop
sub
xchg
sbb
hlt
adc
xor
xchg
adc
in
adc
jecxz
imul
sbb
add
scas
adc
je
out
popa
addr16
lods
sbb
loope
and
sbb
adc
xor
pop
jmp
repnz
shl
sub
loope
add
iret
sub
push
pop
push
popa
sub
imul
push
adc
inc
and
cmp
push
adc
jno
inc
daa
addl
ja
xor
pusha
mov
cmp
pop
in
lahf
mov
xlat
in
repz
push
dec
mov
cmp
adcb
mov
outsb
dec
icebp
inc
push
insb
jle
scas
dec
and
call
xor
enter
fsubrs
mov
xor
sbb
and
adc
iret
int3
ficoms
imul
jg
sbb
test
inc
or
out
xchg
in
or
shlb
ja
dec
inc
enter
dec
push
lret
sub
cmp
inc
andb
jge
sub
leave
and
out
pop
mov
adc
rolb
outsl
adcl
jmp
xchg
inc
cmp
xchg
add
data16
outsb
and
sbb
roll
mov
and
add
das
add
cmp
sub
movsw
dec
or
adc
xor
sub
sbb
jae
ja
cmp
add
or
cmp
cmp
dec
sbb
xor
jg
sbb
xlat
xor
cmc
pop
push
cmp
adc
push
cs
cmp
shrb
xor
cs
rolb
inc
xlat
enter
aas
dec
in
lret
mov
rorl
fwait
insb
dec
mov
cmp
rolb
movsl
sub
cmp
push
adc
cmp
cmp
sarl
loop
cmp
rorb
aaa
dec
ja
cmp
aaa
std
addr16
sbb
dec
dec
pop
and
leave
leave
dec
das
arpl
or
lret
jne
pop
push
jecxz
dec
push
icebp
xchg
push
iret
jmp
cmp
fwait
push
or
pop
add
rcll
aaa
int
inc
lret
cmpsl
rcrb
mov
mov
cmp
adc
add
push
inc
adc
xchg
cmc
cmp
int
aam
fnsave
inc
xchg
aaa
das
sar
pop
adc
sbb
cmp
adc
lock
rcll
dec
push
cmpb
pop
push
cmc
icebp
push
mov
gs
repz
adc
sarl
adc
adc
fimuls
jge
jne
jbe
sbb
add
ret
jge
push
call
xchg
jno
cwtl
xchg
cmp
xor
pusha
push
jbe
pop
test
inc
adc
dec
std
cmp
fs
push
push
add
or
pop
jnp
adc
cs
cmp
cmp
mov
push
es
jne
mov
sub
jmp
mov
jle
dec
rol
mov
cmpsl
mov
enter
sbb
inc
in
adc
test
push
pop
loopne
movsb
dec
lods
cmp
push
inc
pop
xor
cltd
push
xchg
push
sbb
or
mov
rcll
xor
pop
cmp
aam
adc
loope
sbb
dec
inc
and
cs
adc
jne
ljmp
xchg
dec
fs
inc
inc
aam
les
cmpsl
and
es
sbb
movzbl
test
pop
mov
or
repnz
dec
mov
xor
scas
xor
xchg
pop
adc
xor
test
icebp
cmp
and
aad
mov
xchg
mov
rorl
mov
mov
inc
cvtpi2ps
aad
gs
enter
out
inc
add
push
out
cmc
dec
sahf
xor
xchg
jbe
sarl
adc
lock
hlt
add
scas
or
int3
sub
es
cmp
xchg
ss
push
stc
out
dec
or
xor
and
cmp
dec
mov
jb
mov
mov
into
test
jnp
pusha
dec
xchg
out
adc
xchg
test
cmp
adc
mov
cs
lea
imul
cld
mov
ud0
fdiv
xchg
pop
xchg
in
lods
pop
test
lods
insb
lods
or
jno
ret
and
or
and
bound
jns
scas
sub
hlt
int
iret
bound
push
in
insb
addb
pop
cmpsb
es
dec
pop
cltd
dec
xchg
ret
jns
std
mov
sub
push
pop
inc
adc
stos
jle
mov
adc
ret
jne
int
or
or
pop
push
loopne
adc
and
sub
xor
inc
aaa
inc
xlat
mov
push
sub
in
mov
inc
loope
add
and
inc
or
enter
mov
add
xor
sub
sbb
inc
xor
pop
mov
inc
add
in
test
or
push
rorl
dec
pop
push
push
xor
dec
aaa
loope
dec
push
pop
adc
mov
enter
sbb
inc
cli
xchg
push
stc
enter
xor
aam
pop
enter
jae
lock
cmc
out
push
adc
insb
push
mov
cmp
adc
dec
dec
in
and
sbb
dec
popf
pop
lret
sub
pop
pusha
xchg
sbb
ds
std
cwtl
rclb
pop
and
arpl
rcrl
icebp
out
pop
pop
push
shr
scas
jmp
test
inc
jo
outsl
and
insl
cwtl
xchg
pop
cld
into
in
daa
jl
xchg
aas
push
or
and
dec
fwait
test
pop
cltd
iret
push
cmp
popa
test
jo
xor
psubw
mov
push
ror
xor
jo
push
into
push
aam
pop
pop
rcrl
push
sub
push
movb
pusha
cmp
jmp
not
mov
lea
call
cmc
stc
cmp
repnz
pusha
call
or
pushf
call
cmp
pushf
cmp
cmpb
push
pusha
jmp
mov
call
call
movl
call
lea
jno
pushf
push
xchg
push
movl
lahf
movsbl
movzbl
lea
push
call
call
movl
mov
pusha
lea
jmp
jmp
movl
push
movb
jmp
call
or
mov
aas
pop
arpl
shll
add
fcmovne
dec
jl
insl
mov
pop
pop
pop
mov
push
mov
test
ss
cli
xchg
xchg
xor
sub
jp
push
push
std
mov
cs
lret
jl
push
outsl
sbb
std
loopne
sbb
fisubs
jmp
xor
clc
xchg
out
out
outsl
subb
push
in
cs
cmp
cmp
fldcw
and
cmp
mov
ret
fidivrs
push
rolb
and
popw
push
test
push
lods
bound
mov
and
xor
aaa
aaa
lock
nop
adc
pop
xchg
or
adc
call
fidivrs
sti
pop
loop
andl
push
push
ficompl
and
aaa
aaa
aaa
lock
pop
fwait
mov
mov
sub
or
in
mov
jbe
insl
shl
jae
lcall
js
sarl
lret
in
mov
gs
mov
and
pop
jae
div
repz
jo
pusha
ret
pusha
loop
les
out
ja
pop
cwtl
sub
inc
ja
push
pop
dec
mov
dec
jb
pop
jle
test
sbb
sub
sbb
adc
cltd
inc
jp
push
call
push
sarb
inc
jbe
jno
mov
dec
icebp
bound
into
jg
mov
xchg
xchg
call
ljmp
je
rcl
shl
dec
bsr
mov
pushf
cmc
add
bsr
ror
mov
bt
test
call
push
lea
je
btc
aam
mov
sbb
sub
jmp
jmp
push
pushf
pushf
jmp
popf
sbb
pop
pop
call
jae
mov
roll
lret
lcall
leave
jnp
inc
mov
xor
and
daa
xchg
out
and
push
mov
cltd
mov
aam
cmpsl
mov
data16
out
adc
cli
push
out
repz
call
jecxz
sahf
xor
incl
clc
lea
cmc
cmp
call
mov
bt
clc
cmp
cmp
test
call
mov
pusha
lea
jmp
lea
je
pusha
stc
jmp
pushf
pushl
ret
call
mov
pushl
popl
pushf
push
pushl
ret
pushl
popl
mov
push
movl
pushf
pushl
ret
pusha
pushf
movl
call
push
clc
or
mov
jmp
push
lea
jne
push
movb
cwtl
mov
mov
lea
lea
jmp
bsr
btc
mov
pusha
mov
cmpb
push
call
or
sub
xchg
bound
and
and
loope
jns
cwtl
add
rcr
mov
xor
clc
push
addr16
jge
ret
pop
push
dec
popa
push
sub
cmc
push
xlat
xchg
mov
xlat
roll
push
stos
test
daa
mov
fidivrs
jmp
pusha
jmp
test
call
pushf
pushf
movl
push
pushl
pushl
lea
jmp
stc
pusha
cmp
call
sets
inc
inc
jmp
pusha
jmp
pusha
lea
je
bt
pusha
cmc
cmp
pusha
push
lea
jne
pushf
mov
inc
pushf
mov
pushf
pushl
inc
pusha
lea
jmp
lea
call
call
mov
fwait
mov
jbe
lret
jbe
imul
mov
jbe
lret
imul
or
mov
or
mov
stos
jbe
or
jbe
or
jbe
stos
je
fs
jb
clc
bt
cmp
call
movw
mov
or
pushf
pushf
pushf
lea
je
jmp
movl
jmp
jmp
jmp
or
lods
jo
xlat
test
mov
mov
or
test
mov
popa
dec
sub
scas
iret
mov
loop
mov
adc
xchg
push
adc
out
sbb
xorl
andl
sub
xchg
or
xor
mov
sub
shl
call
inc
pushf
mov
lea
je
stc
clc
cmp
pusha
mov
mov
call
inc
adcl
pop
mov
fisttpl
pop
cmp
sbb
jg
add
test
clc
stc
pop
dec
scas
stos
mov
lret
int
sub
scas
pop
xchg
or
mov
mov
xchg
sub
add
inc
stos
fdivl
push
fists
sbb
scas
push
in
jae
sbbb
add
jl
xchg
test
inc
mov
mov
sub
mov
xchg
jl
call
jmp
xor
adc
pusha
lea
jmp
lea
jne
bsr
shl
shl
mov
cmc
or
pushf
lea
je
xchg
lea
lea
pushf
movzwl
pop
movsbw
movzbw
bswap
lea
pushf
lea
jl
not
mov
call
cmp
jmp
push
lods
cmp
mov
movw
jmp
jmp
jmp
cmpb
sub
repnz
add
mov
je
push
dec
cmp
mov
ds
in
add
in
mov
popf
xchg
mov
push
pop
pop
test
push
sub
xor
adc
jge
and
xor
mov
pop
cmp
loope
ja
push
in
inc
mov
test
cmp
aad
xchg
xchg
or
pop
addr16
cmpsl
clc
jecxz
mov
xchg
xchg
cltd
mov
fidivrs
enter
movl
pushl
mov
lea
jmp
jmp
lea
ja
test
add
push
call
call
movl
call
sar
add
clc
mov
bt
jmp
pushf
pusha
lea
call
jmp
pusha
mov
clc
add
pushf
lea
jle
pusha
pushl
dec
jmp
clc
je
bt
test
or
jmp
not
inc
rol
xchg
pushf
shrd
inc
mov
neg
add
cmp
clc
mov
add
pushf
jmp
pusha
lea
je
cmc
sub
stc
jmp
bt
sub
cmp
not
movb
call
lea
je
cmp
sar
neg
test
add
and
and
mov
pusha
add
stc
call
call
std
jnp
movsl
jbe
repnz
dec
std
pop
test
mov
rep
or
imul
out
inc
mov
test
bound
test
xchg
cmpsl
jle
xchg
insl
jnp
fs
arpl
lds
lods
imul
mov
pop
dec
in
sub
xor
out
mov
and
scas
dec
aaa
adc
in
jae
mov
and
stc
aam
aaa
aaa
clc
aaa
xchg
cmpsb
out
jecxz
pop
inc
pop
out
and
fidivs
push
str
jmp
sub
mov
push
pusha
test
call
jmp
cmc
test
add
movb
bt
pushf
mov
btr
btr
clc
mov
bt
movl
clc
cmp
pusha
pushf
push
lea
jbe
stc
clc
movzbw
neg
mov
xchg
bsr
dec
jmp
or
pushf
nopl
lea
inc
push
dec
mov
pushl
dec
add
out
cmp
push
sub
or
dec
add
call
cmp
pop
pop
ljmp
aas
fsubs
in
xor
and
scas
sbb
pop
cmp
cltd
in
add
cmp
test
fidivs
sub
scas
lods
jo
leave
mov
imul
jo
mov
popf
aas
lds
aad
push
jae
push
gs
sbb
xchg
push
es
xchg
out
mov
pop
outsb
stc
pop
xor
push
dec
pusha
push
imul
stos
popa
aaa
jmp
fidivs
adc
xor
push
out
test
scas
cmp
stos
clc
cmp
push
push
xor
push
cmp
dec
mov
rolb
ja
outsl
dec
push
test
out
add
sbb
lock
js
nop
fldt
movsl
dec
push
mov
mov
sbb
adc
jne
xchg
outsb
fbstp
repz
cmpsb
jp
test
in
push
mov
fidivs
roll
mov
lea
jmp
call
pushl
imul
bt
add
pushf
lea
jmp
pushf
lea
lea
jmp
mov
bswap
push
mov
rol
pusha
mov
cmc
cmc
bt
sub
pushf
add
jo
bt
push
repnz
mov
pusha
lea
jne
pusha
jmp
jmp
cmp
pusha
movb
lea
ja
sbb
sub
mov
pusha
cmp
bt
lea
add
ror
not
mov
xor
seto
mov
jmp
jb
cmc
clc
stc
jmp
lods
cmc
lea
jno
cmc
neg
pusha
jmp
push
xchg
and
lods
lret
loopne
fistl
test
stos
cmp
inc
jb
sahf
mov
add
stos
and
in
jecxz
pusha
and
mov
test
sbb
sarl
mov
sbbb
inc
ss
sub
pushf
add
sbb
mov
inc
xor
jecxz
gs
pop
stos
js
ficomps
pop
lret
add
inc
jb,pn
pusha
fwait
das
test
jno
std
rol
cmp
clc
mov
pop
ret
add
mov
and
rcl
mov
je
clc
test
pushf
jmp
mov
fisttps
and
mov
popl
aaa
xor
mov
cmpsb
icebp
ret
push
xchg
lret
dec
mov
cmp
cltd
lret
loope
pop
sub
add
xlat
arpl
push
and
cmpsb
sub
jle
xor
mov
popf
adc
mov
subl
test
ret
fsubr
mov
jbe
lds
ret
inc
mov
push
sti
aaa
jb
jns
movsb
push
mov
daa
stos
xchg
or
mov
sahf
xor
sbbb
push
pusha
mov
lea
jmp
bswap
not
lea
call
imul
push
pushl
add
pusha
pushl
lea
jmp
jmp
inc
rcl
imul
ret
in
lahf
jo
cmc
xchg
hlt
mov
cmpsb
cmp
xor
rolb
jne
inc
inc
add
push
sarl
ret
mov
cmp
pop
loop
cmc
cmp
push
cmpsb
mov
loope
movsl
mov
aas
popa
adc
mov
pop
xchg
push
mov
mov
add
stos
adc
scas
mov
xchg
push
pop
push
inc
mov
push
or
adc
inc
loopne
in
cltd
mov
arpl
cmc
jae
sub
push
ja
gs
aaa
adc
inc
adc
fisttpll
xchg
jge
dec
imul
fs
jp
ret
sub
push
fbld
std
cmp
lock
and
push
pop
call
enter
push
or
pop
pop
or
xchg
lock
aaa
push
sub
cwtl
jmp
sub
mov
pop
mov
repz
sub
dec
scas
jp
sbb
loope
testb
inc
dec
and
negl
leave
adc
imul
test
ja
xlat
repz
push
adc
call
popf
xchg
je
xchg
mov
out
push
hlt
or
sub
cltd
add
lock
pop
push
outsl
cmp
sub
insl
jne
pop
xor
lods
sti
sbb
pop
lcall
pop
pop
test
out
in
mov
xchg
xor
lret
and
jg
sbb
lods
dec
pop
fisubl
dec
xor
jge
pop
pop
das
bound
aas
xor
lret
or
adc
mov
lods
loop
mov
std
fstl
mov
test
jo
and
aaa
sub
addb
add
cmp
cmp
or
pop
mov
xchg
ss
mov
sbb
aam
movaps
lret
fsubrs
xor
add
and
push
stos
add
xor
mov
sbb
inc
adc
popl
cmpb
ss
imul
es
lahf
cmc
out
sbb
or
loope
xchg
fdivl
shlb
add
les
xchg
loopne
mov
ret
daa
push
xchg
sbb
shrl
sbb
movsb
pop
rcl
xchg
loopne
icebp
inc
pop
gs
fidivs
sub
xchg
xchg
movsl
enter
cmp
mov
sbb
repnz
and
push
ljmp
cmp
call
out
push
jmp
test
and
out
std
push
jl
js
in
mov
roll
push
pop
mov
jecxz
test
shlb
xor
mov
sbb
ljmp
inc
adc
movsl
adc
jne
lahf
aam
inc
hlt
popa
orb
outsb
inc
fxch
jecxz
in
push
push
push
lods
push
mov
shll
std
jg
data16
dec
mov
add
fidivs
dec
into
fsubrp
push
mov
add
mov
inc
in
js
sub
out
sub
repz
sub
xchg
add
lds
sub
inc
sbb
loope
xlat
jp
cmpsb
jno
pop
cs
cmc
sub
iret
pop
dec
out
insb
xor
adcl
aaa
scas
jle
aaa
or
dec
scas
push
mulb
adc
xchg
imul
mov
mov
pop
push
mov
cli
mov
lea
mov
jbe
push
dec
xchg
mov
leave
mov
xor
push
rorl
or
js
jae
aaa
push
add
wrmsr
and
aaa
dec
sbb
and
out
lea
sbb
dec
cmp
inc
fstl
call
cmp
shlb
clc
shl
test
aad
mov
adc
pushf
sar
cmc
add
dec
cmp
and
add
mov
clc
test
lea
jnp
pusha
lea
je
jmp
mov
pusha
lea
call
pusha
mov
lea
jne
movzbw
mov
pusha
pushf
mov
pushf
lea
jmp
insl
mov
mov
jns
mov
inc
adc
dec
jl
inc
or
jb
mov
ja
mov
pop
clc
pusha
popl
ss
push
sub
iret
pop
imul
mov
arpl
std
lds
aad
pop
loope
mov
bound
mov
sti
lea
sbb
mov
shr
insl
cli
jnp
movl
call
repnz
jmp
lea
jb
cmp
cmp
pushf
lea
ja
mov
setbe
shl
inc
add
shl
cmp
pusha
sub
mov
clc
cmp
pusha
push
lea
jb
push
movb
pushf
cmp
call
pusha
call
jmp
stc
cmp
pushf
pushf
movb
movw
lea
ja
stc
imul
call
jne
call
pushl
popl
pushf
pushl
ret
push
call
test
or
call
add
js
dec
inc
cmp
iret
scas
fisubrl
lahf
std
inc
push
insb
ret
pop
mov
sbb
sub
cld
ret
insb
test
popf
xchg
mov
cmp
mov
loop
pushf
mov
xchg
push
xor
dec
test
gs
lock
pop
iret
xchg
call
and
shr
jo
fwait
out
test
jno
loopne
cld
or
test
sbb
fnsave
daa
pushf
add
lahf
inc
xchg
cs
adc
inc
sbb
bound
sub
outsl
pop
pushf
lds
movsl
sbb
testl
add
bswap
lea
movsbw
mov
mov
pusha
mov
mov
pushf
not
pushl
not
lods
push
jmp
sub
cmp
clc
cmp
cmp
cmp
pushf
jmp
pushf
lea
jne
pusha
pushf
call
pusha
mov
mov
pushf
mov
mov
pushl
ret
repnz
dec
inc
dec
fistps
mov
jne
push
jbe
jae
inc
scas
imul
icebp
rorl
or
add
lods
test
lods
loopne
add
cmc
fidivrl
call
pop
jae
fldl
test
cltd
mov
add
adc
inc
arpl
mov
aas
jle
js
cmp
test
outsb
movsb
cmpsl
xchg
jbe
arpl
and
bound
jno
daa
jmp
mov
stc
lock
insl
push
call
aaa
cmp
pushl
lea
jg
jb
bt
bt
cmp
cmc
cmp
push
lea
ja
call
lea
ja
bt
pushf
jmp
bt
movb
jmp
xchg
pushf
aad
sbb
xor
mov
adc
sbb
setle
in
mov
lahf
xor
cld
jae
jg
loopne
jbe
and
bound
sub
or
imulb
daa
call
xor
cs
jmp
stc
call
mov
push
lea
ja
pushf
jmp
add
add
lea
rcl
or
mov
call
push
inc
lea
pusha
mov
jmp
cmp
pusha
lea
ja
push
clc
pushl
imul
call
pushf
jmp
pusha
cmc
or
push
lea
je
push
lea
not
jmp
pushl
lea
call
pusha
movw
lea
jmp
not
test
stc
neg
pushf
stc
pushl
rol
call
add
add
adc
add
add
add
add
or
add
or
add
or
add
add
or
add
pusha
push
push
movw
lea
jmp
xchg
cmp
cwtl
mov
movsl
mov
dec
or
aad
inc
data16
lds
mov
and
mov
xchg
push
inc
popf
xchg
out
mov
ret
rorb
push
sub
sub
mov
sahf
ror
and
fisubrs
and
sub
test
sub
call
bsr
add
add
sub
cmc
xadd
test
rcr
shr
adc
shl
mov
inc
adc
shl
add
btr
shrd
add
and
mov
clc
pusha
pushf
shr
cmc
jmp
pushf
lea
movb
jmp
lea
je
lea
lea
xchg
pusha
lea
movzbl
movsbw
pushf
bswap
movzwl
not
movzbw
mov
lea
pop
mov
not
mov
mov
jmp
jmp
mulb
jno
pop
jmp
lahf
in
add
pop
dec
pop
dec
lahf
jle
mov
out
fdivrs
int
mov
adc
outsb
pop
jmp
sbbl
mov
sbb
pop
mov
dec
fldcw
out
stos
push
pcmpeqb
insb
ret
out
lods
icebp
jl
push
enter
mov
loop
sbb
aad
xchg
mov
mov
jg
jns
int3
in
lods
mov
cli
fnstsw
mov
loope
add
cwtl
mov
xor
sub
dec
adc
daa
push
push
cmp
push
gs
ja
inc
mov
in
dec
push
lcall
imul
and
sbb
jmp
lea
jmp
faddl
sub
or
mov
mov
sub
mov
in
ror
cmpsb
test
xchg
std
pop
sbb
in
into
addr16
dec
or
into
and
aas
test
das
cmpsb
cli
sub
inc
mov
in
fcoml
aaa
pop
dec
lret
pop
adc
fisubrs
test
rcrb
xor
add
mov
and
jae
push
stc
xor
pushl
lea
jno
call
pushf
pusha
lea
jae
push
not
mov
pushf
call
mov
imul
rolb
xchg
pushf
push
sub
push
fsubrs
testl
insb
inc
movsl
lds
jmp
hlt
es
out
iret
mov
call
sbb
mov
jmp
push
clc
pushf
pushf
mov
and
cmc
add
lea
bt
jo
stc
push
add
jmp
lea
jne
mov
setne
call
test
mov
call
add
dec
gs
popa
addr16
outsl
js
add
fs
jo
adc
pusha
pushf
pusha
mov
lea
jmp
cmp
and
jne
fcoms
loopne
inc
xchg
inc
js
fists
mov
inc
loopne
icebp
hlt
and
sbb
mov
clc
into
repnz
push
test
xchg
aas
and
loopne
push
addl
jae
int3
push
mov
nop
xchg
jmp
ficoml
pop
inc
pop
or
mov
arpl
jne
sub
gs
out
aaa
inc
xor
sbb
mov
xchg
ljmp
mov
fisubs
and
mov
mov
lea
ja
jmp
add
dec
outsl
popa
fs
imul
add
in
movzbl
movsbw
pop
push
push
push
pushl
ret
pusha
pushf
movl
call
lea
jne
bswap
sub
cmp
mov
push
jmp
pusha
pusha
lea
call
pusha
pushf
pusha
mov
push
pushf
push
lea
jmp
bt
pusha
cmc
cmp
or
pusha
call
push
mov
lea
jne
movzbw
lea
call
push
pushf
jmp
mov
jmp
jmp
mov
test
jecxz
lahf
cmp
lret
xchg
cmpsb
cltd
imul
fucomp
aas
cwtl
dec
mov
popa
testl
mov
xchg
pop
pop
xlat
mov
xor
push
in
nop
ja
add
sub
ljmp
pop
add
scas
addr16
mov
scas
arpl
jbe
les
into
pusha
fmuls
inc
and
sbb
fisubrs
xchg
adc
jge
addr16
icebp
sti
xor
push
xchg
call
add
lods
jo
add
cmpsb
ss
in
std
mov
shl
leave
sub
lds
ljmp
cltd
adc
lcall
dec
xchg
out
leave
xchg
arpl
imul
pop
int
in
dec
add
out
sbbl
fisubs
jmp
hlt
je
std
scas
mov
dec
and
inc
adc
shrl
les
add
aam
fstpl
das
shl
test
cli
xchg
mov
xchg
jg
shll
inc
scas
sbb
cmp
push
int
cmp
fisubs
push
xchg
bswap
or
sub
mov
jmp
popa
sbb
mov
adc
xor
fdivl
push
push
jmp
xchg
icebp
jle
sub
or
addr16
jge
mov
daa
jb
mov
add
xchg
jp
shll
test
jae
into
xchg
decl
sahf
add
and
adc
ds
imul
push
mov
push
mov
dec
pop
pop
push
jno
mov
pusha
mov
fucomi
in
jne
sahf
icebp
out
call
mov
jecxz
decl
push
mov
push
pushl
ret
je
rcl
movzbl
neg
jmp
test
cmp
push
pusha
lea
je
clc
jmp
add
lods
shrb
cwtl
bound
push
sub
jl
inc
cli
adc
les
mov
adc
shl
fs
jl
xchg
imul
xchg
out
xchg
cmpsl
pop
mov
push
add
cmpl
mov
lea
lea
pop
mov
pushf
pushf
pusha
mov
jmp
cmc
or
push
pusha
jmp
call
cwtl
pushf
mov
mov
lea
movsbw
pop
pushf
mov
jmp
pusha
adc
mov
lea
jae
jmp
pushf
movl
mov
movl
mov
pushf
lea
jmp
pushl
popl
movb
push
movb
pushl
ret
mov
sub
bsr
movsbw
mov
test
jmp
movb
lea
je
push
pusha
pushl
movb
lea
jmp
xor
mov
sbb
testl
jne
mov
and
aad
dec
mov
jp
lret
roll
inc
dec
or
dec
fs
sarb
adc
sbb
lea
or
mov
push
repnz
jg
xchg
leave
xor
or
push
cli
fdivrl
popa
xchg
int
sbbb
movsl
cld
jge
lods
mov
adc
scas
mov
cmpps
add
jb
sti
dec
sbb
and
ljmp
sub
mov
sub
cwtl
dec
int
test
call
out
xor
lahf
xlat
dec
sbb
fmul
mov
mov
jp
inc
shl
call
jmp
pop
xchg
dec
or
test
roll
pop
rcll
xchg
sbb
cmpsb
or
mov
mov
dec
sbb
mov
sbb
fcomip
fsubl
inc
mov
adc
jbe
stc
sbb
test
in
inc
xor
ss
jbe
cmpsl
loopne
hlt
ds
add
out
sub
mov
jne
jle
jmp
fisubs
jge
pushf
lea
call
pusha
cmc
mov
push
cmp
pusha
lea
jae
stc
call
lea
jb
test
jmp
lea
jne
je
pushf
cmp
pushl
call
mov
pusha
mov
mov
pushl
ret
push
movl
mov
push
pushl
push
lea
jmp
jmp
xchg
cmpsb
sbb
leave
out
gs
aad
sbb
das
test
and
mov
push
inc
jecxz
jb
aam
pop
js
loop
repnz
mov
addl
hlt
aas
mov
sub
out
lcall
mov
mov
lcall
jl
add
mov
pushf
push
mov
pushf
pushf
pushl
ret
adc
push
jae
lods
jo
cmpsb
add
stos
pop
iret
mov
lret
imul
pop
pop
inc
enter
aad
out
shl
xchg
and
xchg
push
daa
sub
outsb
insl
push
cwtl
xchg
repz
jno
cmp
call
push
movsl
xlat
call
xchg
pushf
cmp
pusha
movb
push
jmp
push
pushl
call
inc
out
ret
repz
test
addr16
ljmp
pushf
test
fistpl
mov
movsl
jmp
cmpsl
pushf
dec
pop
imul
imul
je
fistps
cltd
iret
xchg
sbbl
std
adc
addr16
mov
xchg
mul
pop
cld
pushf
jecxz
shrl
or
fidivs
jmp
xchg
jo
mov
jno
ret
and
sbb
jne
push
mov
loop
pushl
into
in
mov
inc
xor
ficomps
push
mov
dec
pop
pop
inc
subb
daa
sahf
push
mov
imul
fwait
add
inc
testb
pop
push
xor
test
mov
mov
fs
add
jge
outsb
pop
mov
jmp
pop
in
or
mov
mov
pop
cltd
jecxz
jmp
shr
lods
ret
sti
pop
lods
cltd
and
dec
pop
dec
test
cmp
sub
inc
mov
jno
dec
xor
ret
or
ljmp
test
mov
in
fcoml
repnz
fnstenv
adc
je
jge
pusha
lods
aaa
iret
movsb
cmpsl
pop
push
fists
gs
fucom
insb
mov
repz
fucomi
movsb
mov
and
popf
outsb
aaa
adc
push
call
into
ret
mov
pop
add
mov
out
jne
add
ret
jbe
or
mov
sbb
sar
cmc
sub
jmp
mov
mov
lea
jl
push
mov
mov
cwtl
push
cwtl
lea
pusha
pusha
lea
ja
push
jmp
cmpsl
xchg
adc
test
or
repnz
outsl
inc
mov
pop
xchg
cmc
shll
les
sbb
aam
cmp
xor
pop
lret
inc
xchg
imul
xchg
and
imull
lea
lods
ud0
add
int
aaa
mov
jns
ficomps
and
pop
cltd
sub
adc
test
push
dec
shll
mov
mov
and
aaa
xor
lahf
ljmp
sbb
mov
push
cmp
into
lods
scas
push
mov
das
inc
mov
fs
sub
andb
repnz
stc
push
nop
sbb
test
cmp
addb
lcall
dec
fwait
sub
inc
movsl
xor
adc
jno
fisttpl
mov
jbe
push
jle
std
rcll
icebp
bound
cltd
jl
leave
sub
aad
jle
call
out
lea
jnp
ja
pushf
pop
pop
call
lea
ja
push
call
push
pop
pusha
mov
push
lea
call
test
shl
push
push
push
lea
je
pusha
call
insl
sbb
lret
cmp
pop
jecxz,pn
aam
jne
mov
pop
lret
cld
dec
sub
cmp
pop
push
add
adc
push
in
dec
je
add
loopew
or
cmp
js
pop
cli
jg
movsl
lret
jmp
mull
test
xor
loopne
sti
lea
insl
ds
sti
clc
jge
jo
repnz
aam
negl
cwtl
push
mov
pop
call
cld
int
sbb
cwtl
pusha
adc
popf
add
popf
cmp
cmpsl
mov
xchg
and
sbb
cwtl
fadd
or
adcb
inc
push
aam
jecxz
jae
rorl
ss
dec
scas
ss
aas
pusha
adc
xchg
mov
repnz
imul
ficomps
in
aad
xchg
lea
jmp
movb
lea
jne
btc
stc
bts
bt
mov
test
or
pushf
mov
call
push
pushf
movb
movl
pusha
pusha
lea
jmp
jmp
pushf
push
mov
lea
jne
pushf
call
mov
movsbl
call
pushf
xchg
pushf
call
pushf
lea
call
jmp
lea
movb
movl
pusha
call
pushf
movl
push
call
movb
lea
jne
add
mov
push
cmp
jmp
push
lea
jle
pusha
lea
je
push
jmp
add
mov
pushf
pushf
lea
jmp
mov
fwait
imul
jbe
pop
mov
imul
mov
stos
imul
mov
jbe
lret
imul
or
mov
or
mov
stos
jbe
or
jbe
or
jbe
stos
je
mov
lea
je
pushf
lea
mov
call
lea
jne
inc
daa
sub
shl
mov
cwtl
bts
mov
jmp
push
push
pushf
movl
mov
pusha
pusha
pushl
lea
jmp
mov
movl
pushf
push
pushl
popl
movb
pushl
ret
push
push
mov
bswap
movsbw
movsbl
push
movl
setbe
bswap
movzbl
call
jmp
xchg
push
mov
jmp
lea
je
cmc
clc
bt
stc
sub
jmp
cmp
test
stc
not
clc
cmp
stc
neg
test
std
cmc
movb
pushw
popfw
call
mov
mov
jmp
scas
adc
test
lret
data16
imul
imul
arpl
push
ss
jge
fsubp
pop
hlt
mov
dec
and
push
push
roll
and
and
mov
dec
test
pop
inc
and
and
mov
push
ja
jp
sbb
or
out
sbb
cs
repnz
aas
mov
test
xchg
test
daa
in
fld
cmp
pop
mov
xchg
add
scas
jae
test
xor
cmc
mov
shr
ficomps
or
pusha
lds
imul
jnp
in
fldenv
in
into
mov
xchg
xor
inc
lret
shrl
jno
add
enter
sbb
data16
or
jmp
jp
inc
in
fldenv
pop
lcall
add
fmul
and
add
leave
mov
fwait
jmp
pop
std
std
mov
insb
ret
ja
mov
ror
popf
sub
pushf
mov
pop
cmc
ss
cld
aas
sbb
jge
test
dec
adc
aam
push
lret
ljmp
daa
test
and
ret
dec
add
push
or
in
xchg
push
xchg
mov
ljmp
mov
cmp
jmp
adc
inc
ror
mov
pusha
cmc
and
test
add
pushf
mov
lea
jmp
call
lea
pusha
call
stc
cmp
push
lea
ja
inc
inc
dec
not
pushf
dec
inc
cmp
sub
pushf
jmp
imul
cmc
pushf
add
pushl
pusha
push
pushf
lea
jmp
adc
fistps
or
mov
out
xchg
mov
sti
fsubl
fcmovu
leave
cmp
inc
rclb
xchg
test
pop
cmp
hlt
or
sub
adc
cs
pop
lea
pop
jb
mov
fcomip
fcomps
shrl
dec
sbb
inc
add
test
or
mov
mov
stc
ret
push
and
jb
mov
fwait
cmp
dec
push
jmp
aam
addr16
sahf
push
lret
fsubrs
and
and
aad
fdivr
call
add
inc
pop
or
sbb
cmp
cld
jb
jae
pusha
lret
xchg
mov
les
in
out
xor
aad
add
pushf
sbb
pop
sbb
mov
jmp
sbb
decb
jbe
xor
fstl
mov
cmpsl
movsb
xchg
mov
lret
mov
icebp
adcl
push
sub
xor
call
out
pushf
ss
and
jmp
push
sub
popf
divl
leave
cmpsl
movsb
xchg
push
pop
rclb
pop
fsubp
xchg
xchg
stc
adc
stos
pop
lcall
dec
pop
xchg
data16
jne
mov
sub
adc
adc
cmpsl
cli
ja
enter
dec
jae
in
cmp
call
jmp
mov
or
jmp
jbe
xchg
insb
sbb
push
daa
lock
arpl
fists
jbe
xchg
sti
sub
addr16
je
xchg
inc
js
jmp
cmp
sub
icebp
stos
shl
xchg
adc
enter
jp
movsl
sysexit
push
outsl
cmp
addr16
ljmp
out
jns
jl
xchg
add
lret
mov
sub
mov
nop
jo
lock
scas
cmp
inc
lods
pop
push
and
xchg
push
in
mov
fidivs
pop
aad
mov
jbe
pop
ficomps
pop
fdiv
bound
pminsw
int
jge
jecxz
jno
ficoms
push
movsb
mov
or
ja
inc
cmp
mov
clc
push
bound
aaa
mov
jle
pop
mov
std
mov
into
mov
mov
outsb
popa
inc
jge
push
pop
pop
mov
jnp
xchg
mov
dec
lds
sub
test
push
jbe
dec
pop
adc
test
ja
jae
mov
sub
push
shll
xor
mov
add
mov
sbb
sbb
stos
inc
shrl
lret
ret
icebp
call
push
push
pushf
mov
not
pop
pushf
pushl
ret
jb
cmp
cmc
cmpb
jmp
mov
pushl
mov
pushl
ret
push
lea
jg
push
jmp
call
pusha
jmp
xchg
bt
shld
bsf
dec
mov
clc
cmc
push
sub
pushl
rep
not
pusha
bswap
movzbw
mov
push
lea
jmp
pusha
lea
jae
pushf
test
xor
pushf
lea
call
call
dec
push
lahf
jo
mov
xchg
les
sbb
insl
fmuls
ljmp
adcb
aam
les
jns
clc
fldcw
rcl
inc
mov
jbe
jp
adc
ficoms
std
or
adc
in
nop
lds
mov
push
inc
adc
push
push
out
arpl
idivl
lcall
cli
pop
push
inc
inc
js
dec
rep
xor
outsb
push
pcmpgtb
pop
mov
cmp
mov
or
rolb
hlt
dec
add
das
xor
lods
add
sub
cli
adc
push
mov
aad
inc
and
xor
adc
pushf
lea
jmp
mulb
repz
movsl
lds
push
inc
fldpi
sti
insb
std
push
jg
stos
mov
xchg
loope
jg
mov
sub
mov
mov
sbbl
dec
in
push
sahf
inc
stos
in
mov
cs
insl
add
es
adc
sahf
imul
push
sub
out
and
mov
mov
push
or
fmuls
push
imul
inc
vshufps
push
pop
cli
cmp
fdivp
bound
push
push
inc
mov
mov
mov
xchg
inc
inc
gs
pusha
bswap
mov
call
movl
call
pushl
popl
mov
mov
pushl
ret
and
popf
push
add
in
int
nop
add
inc
mov
sti
idiv
pusha
jo
roll
stc
rcl
lods
stos
push
mov
sub
orl
cli
shll
push
push
test
mov
add
test
fs
push
idivl
mov
shrb
dec
scas
mov
insb
cmpsl
pop
loopne
clc
push
hlt
mov
cmp
and
testb
dec
xchg
mov
gs
shl
sbb
push
aaa
iret
jae
inc
add
rcrb
popa
mov
lods
into
xchg
push
scas
or
fidivrs
stc
jno
mov
sub
pop
xchg
mov
push
int
add
insb
lcall
ffree
cmp
or
fdiv
sub
mov
cmc
jmp
mov
xor
add
mov
stos
lds
cmp
inc
gs
mov
jo
jl
and
out
lcall
mov
lds
into
inc
mov
imul
sbb
add
in
sub
fistl
pop
adc
push
gs
xchg
or
ds
in
int
nopl
xchg
cmp
inc
dec
xchg
push
pop
ret
shl
test
fucomip
add
pop
cmpsl
cmp
jl
pop
aas
push
push
xlat
fisubrs
mov
out
and
pop
mov
and
push
mov
xor
sbb
addb
daa
loope
leave
call
push
cli
mov
fdivr
and
cmp
jnp
sahf
mov
and
push
cld
call
mov
add
popa
insb
inc
jb
add
mov
add
xor
pushl
ret
push
movl
jmp
pushf
movl
mov
movw
pushf
lea
jmp
neg
not
push
aas
push
clc
xor
setnp
sete
movsbw
lea
call
lea
ja
push
pusha
call
cmc
out
xorb
loope
in
addr16
lock
or
jnp
cwtl
int3
mov
add
or
clc
xchg
fcoms
adc
repnz
and
je
mov
int
jae
aad
push
adc
dec
scas
and
aas
mov
or
cmpsl
ds
dec
push
xor
and
je
pushf
lea
jmp
pushl
jmp
push
lea
ja
jmp
push
movl
pushf
push
jmp
inc
shll
cmp
lds
pop
lret
and
loope
push
inc
pop
push
test
mov
mov
pushl
or
mov
std
lods
cltd
jle
daa
mov
std
enter
pop
mov
repz
dec
idiv
adc
sub
sbb
pop
lahf
xchg
inc
inc
out
adc
dec
push
scas
mov
cmp
imull
mov
push
pop
fdivrs
inc
lock
bound
shrl
push
pusha
mov
mov
xchg
aad
rcrb
lds
cwtl
in
or
dec
mov
push
andl
xor
js
dec
incl
push
int3
dec
aas
jecxz
sbb
jp
cmp
xchg
pop
jle
popa
adc
cmpsb
test
mov
xchg
adc
sbb
jno
pop
mov
mov
jmp
scas
outsb
scas
jmp
mov
mov
inc
andb
cmp
jl
lock
mov
pop
mov
inc
mov
and
in
sub
add
or
mov
add
daa
push
shlb
out
ss
nop
rclb
andb
in
and
adc
dec
sahf
rol
jecxz
dec
dec
mov
or
arpl
ljmp
movsb
in
sbb
and
sub
in
jg
lahf
inc
shl
call
cmpsb
sub
jmp
adc
dec
aaa
jmp
pushf
clc
sub
jmp
das
cltd
pop
lods
cmp
fistps
scas
fimuls
leave
fisttpl
sbb
mov
mov
xchg
xor
ss
ss
fldenv
test
push
push
jbe
pop
mov
sbb
fdivp
outsl
xchg
fimull
mov
pusha
lock
sub
push
lods
daa
xchg
pushf
test
in
sub
inc
int
aas
nop
pop
add
mov
fs
test
gs
mov
pop
stc
js
lods
or
cmc
sub
fimuls
pop
lods
add
mov
mov
or
js
lods
movsl
push
push
xor
adc
dec
popf
ror
jmp
movsb
xor
cmp
int3
add
sub
inc
xor
gs
out
call
mov
and
mov
add
lods
test
dec
arpl
mov
mov
xchg
ja
fsubr
mov
decl
insb
add
and
push
daa
mov
stc
dec
fisttpl
loope
test
cmpsl
mov
test
pop
dec
int
call
mov
dec
call
pop
xchg
enter
rorb
ficomps
or
pop
fcomip
fbstp
ja
mov
in
inc
lds
mov
jmp
mov
or
int3
mov
in
fdecstp
movzbl
out
das
sbb
addr16
test
lods
icebp
dec
subl
mov
sarb
or
mov
int3
lods
push
mov
insl
repnz
mov
or
mov
mov
psubsw
xchg
jno
jg
popf
xchg
int3
inc
jl
call
or
ret
bound
aas
hlt
xchg
call
pop
test
pusha
shl
pushf
shll
lods
inc
shrb
or
cli
and
popf
imul
cmpsl
xchg
pushf
jne
jne
sbb
hlt
incb
stos
ja
movsl
mov
adc
add
push
stos
pop
testb
adc
outsl
call
or
insb
out
je
ficoms
jg
call
sub
inc
sbb
xor
adc
insb
jge
sbbb
stos
ljmp
xor
adc
in
and
add
loopew
dec
rorb
push
sar
push
jle
lock
mov
push
imul
mov
or
iret
in
scas
loope
cmp
loopne
clc
fcmovnb
xchg
dec
and
push
clc
dec
lahf
pop
cmp
les
push
or
inc
dec
or
out
and
fnsave
and
lret
arpl
pushl
and
in
leave
sti
daa
dec
mov
mov
mov
rclb
test
inc
xor
fldcw
fwait
pop
lea
jb
pushf
test
clc
cmpb
pusha
lea
jne
cmp
pusha
mov
pusha
test
add
pushl
jmp
or
pushl
mov
pusha
pushf
lea
je
bswap
mov
jmp
jmp
mov
jmp
popa
lret
cld
adc
cmp
pusha
xor
cmpsb
sbb
in
imul
sbb
gs
inc
enter
cltd
fs
mov
sbb
loop
jno
cs
bound
or
inc
pop
stc
ss
or
add
push
lea
mov
and
adc
ficomps
push
push
leave
fidivs
add
dec
stos
leave
mov
bt
cmp
call
xor
shl
add
rcr
sub
xor
mov
clc
test
mov
call
dec
jb
sbb
lods
jp
into
insl
pop
jmp
insb
sbb
sbb
aad
sub
iret
push
imul
mov
push
jecxz
xchg
pusha
xchg
cmp
out
out
add
icebp
lock
jecxz
mov
scas
mov
iret
xchg
adc
jnp
add
sub
fimuls
jno
pop
or
and
movsb
fwait
dec
mov
cmp
pop
insl
into
inc
aas
sbb
sub
jg
pop
ficoms
fcmovnb
xchg
push
out
insl
add
lahf
push
stos
fwait
ja
enter
cbtw
rolb
iret
data16
fucomi
pusha
call
leave
aaa
xor
xor
dec
mov
push
xchg
out
iret
sbb
loope
mov
xor
add
push
divb
mov
xchg
cmp
cmp
sbb
cmp
xchg
outsb
out
aaa
xlat
sbb
je,pn
mov
push
jmp
fimuls
mov
pushf
and
stc
scas
repz
aaa
or
jg
xchg
mov
sbb
sbb
js
xor
aad
cltd
enter
dec
push
pop
dec
fnsave
shll
sbb
ror
mov
imul
adc
xchg
cs
mov
dec
inc
mov
fimuls
cmp
jne
push
movb
lahf
mov
movb
jmp
aam
stos
gs
sahf
sub
mov
cltd
or
push
inc
adc
sub
in
dec
iret
pushf
in
cld
rcl
sahf
lret
jnp
daa
std
push
rep
ret
push
int
cmp
stc
insl
xor
cmpsl
out
mov
je
xchg
gs
lea
in
pusha
sbb
imulb
xor
movsl
xor
inc
xchg
add
pusha
ss
sti
cwtl
pop
mov
nop
mov
sbb
jg
lods
inc
jnp
sub
shlb
mov
push
add
out
xor
and
rcll
cmp
cmp
add
mov
call
pushf
and
popl
fistps
xor
shlb
shl
xor
mov
adc
inc
pop
dec
iret
cwtl
adc
fistps
pop
ficompl
pop
test
add
pusha
xchg
out
mov
gs
aas
mov
pop
in
aam
in
cltd
mov
cld
popa
and
call
add
jl
fwait
mov
push
sub
add
movsb
ja
stc
cmp
je
adc
call
fistl
fimull
mov
adc
ja
mov
mov
cmc
hlt
xlat
popa
xor
xor
jmp
or
and
mov
xchg
loop
cmp
wbinvd
xchg
shll
jo
sbb
dec
mov
jae
and
dec
iret
push
test
and
adc
dec
jle
dec
lahf
adc
fiadds
sar
pushf
cmp
movb
call
jmp
insb
sbb
hlt
lods
jo
mov
in
inc
pop
mov
ret
mov
mov
and
cltd
dec
dec
mov
icebp
mov
mov
int
dec
setno
cmp
fs
out
mov
mov
ret
popa
sbb
divb
jbe
les
add
popa
pop
lret
std
call
movsb
movzbw
pushf
pop
lea
pusha
movl
pushf
call
lea
je
pusha
push
jmp
call
pushf
mov
adc
lea
push
pusha
pushf
movb
pushl
ret
clc
cmp
mov
ror
not
mov
cmp
stc
mov
bt
jmp
push
pushl
movl
jmp
repz
jl
push
insb
mov
jno
and
data16
lret
or
add
iret
outsb
inc
stos
movsb
mov
cwtl
popa
pop
out
in
fistpll
imul
daa
mov
lods
outsl
test
mov
mov
dec
jmp
test
shlb
xor
xchg
mov
out
fstpt
sti
jl
xchg
fisubrs
rolb
test
add
pop
into
fsts
mov
sbbw
xchg
xchg
cli
shlb
cmc
sbb
sbb
mov
arpl
dec
dec
mov
in
inc
das
xor
push
or
xchg
movsl
sbb
fiadds
pop
enter
add
into
enter
cmp
sub
aas
scas
pusha
cmp
push
xor
and
lods
test
bound
pushf
cs
mov
nop
or
notl
pop
cmc
push
test
adc
dec
shrl
jp
jo
decl
leave
ret
mov
push
xchg
popf
cld
mov
mov
dec
jl
add
inc
sbb
lcall
sbb
sbb
mov
pop
cmpb
dec
inc
jae
cs
ljmp
adc
push
sub
test
cmp
inc
jbe
jecxz
jb
pop
inc
dec
cmpsl
or
sub
call
in
call
push
dec
and
sub
pushl
int3
dec
adc
lcall
mov
lods
mov
add
jno
out
aad
jns
and
loope
jp
xlat
inc
mov
pop
lahf
mov
add
push
adc
aam
pop
jno
sub
ljmp
lret
and
out
aad
gs
mov
and
jns
imul
xorb
or
jge
stc
enter
push
sbb
cld
in
movsl
inc
cs
je
jno
xchg
ljmp
jecxz
xor
or
call
aad
sbb
xchg
dec
push
mov
pop
stos
fisttpl
fildll
jg
dec
inc
adc
jbe
dec
sub
and
xchg
orl
ds
fdivl
cmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
cmpb
call
push
pusha
pushf
jmp
pusha
movl
pushf
lea
jmp
push
add
jge
cmp
pusha
pusha
lea
je
jmp
movl
pusha
movl
pushf
pusha
lea
jmp
push
call
lahf
pusha
lea
jmp
push
lock
std
std
lea
xchg
ret
jb
push
push
ret
leave
scas
std
daa
imul
adc
pop
movsb
ss
out
or
jge
cltd
in
enter
and
aam
pop
lret
loop
das
adc
test
push
lods
xchg
loope
outsb
cmc
add
hlt
inc
out
jae
xchg
push
cmpsb
movsb
test
pop
or
mov
enter
aad
mov
lds
sahf
push
jbe
sbb
xchg
nop
mov
xor
aas
push
mov
aaa
or
fcompl
shlb
pushf
mov
loopne
ds
ja
lds
pop
sbb
imul
mov
out
decb
xchg
rcll
push
or
out
ljmp
es
incl
or
or
dec
scas
ret
test
call
and
inc
and
movsl
jl
pop
movl
pushf
pusha
pushf
push
lea
jmp
and
mov
imulb
jmp
adc
adc
loop
or
push
int
sbb
popa
loop
gs
dec
cmp
hlt
icebp
bound
sub
btr
aaa
push
shll
xchg
dec
xorb
mov
add
add
jl
adc
add
das
adc
add
adc
xor
adc
add
sub
add
test
jmp
mov
sbb
fstpt
lahf
mov
clc
rol
cwtl
mov
neg
cmp
shr
bt
jmp
jmp
jb
scas
out
fistps
loopne
add
lret
mov
and
mov
sti
mov
addr16
ffreep
jmp
das
outsb
mov
arpl
jge
jae
jle
dec
sbb
add
lock
and
xchg
cmp
jae
outsb
sub
nop
xor
push
jns
pusha
sti
cmp
test
lock
aad
incl
sub
popa
int
mov
xor
pop
adc
adc
pop
xor
xchg
dec
rcr
dec
icebp
bound
aas
fcmovb
xchg
stos
push
out
loop
scas
and
jge
loopne
rol
or
rorb
lret
decl
jne
and
cs
lret
xorb
push
jecxz
and
scas
mov
adc
inc
and
mov
jge
mov
subl
outsb
call
out
add
arpl
fs
dec
or
clc
cltd
dec
cmp
jle
xor
push
inc
ret
ret
stos
test
pop
stos
fisubrl
in
jo
push
push
sub
adc
pop
mov
pushf
xor
call
outsl
jmp
lods
in
sub
inc
js
pop
cld
mov
jge
jle
and
xchg
xor
sub
jecxz
push
into
lock
pop
loopne
sbb
in
and
push
or
pop
or
or
sbb
das
fst
xor
outsb
mov
lods
sbb
mov
sbb
imul
clc
fucomip
ljmp
cmp
into
shrb
inc
cwtl
mov
int3
sub
dec
clc
mov
dec
mov
or
call
call
jns
push
pop
cmc
adc
add
je
pop
ss
hlt
inc
add
sti
dec
scas
mov
jg
not
and
pushw
lea
push
pop
add
xchg
sbb
fstl
test
pop
les
in
sub
xchg
inc
sbb
pop
ret
fdivrs
or
cmpl
jecxz
mov
or
adc
xchg
jg
mov
pop
divb
in
ds
push
mov
je
inc
add
jmp
aaa
sub
fnstsw
sbb
push
and
lea
je
call
mov
pusha
adc
rcl
add
movb
bt
movl
or
call
cmc
call
pushf
bt
call
xchg
pop
test
into
fdiv
cmpsl
pop
mov
pusha
or
outsl
mov
mov
sbb
fdivr
enter
add
sbbb
lods
in
xor
inc
je
and
outsb
rclb
test
mov
scas
jb
or
pushf
mov
xchg
mov
jg
inc
sub
adcl
add
add
xor
mov
sub
ss
jns
ret
stos
sub
mov
dec
or
icebp
popa
fcomps
neg
aam
cmp
call
imul
adc
add
mov
pusha
movb
adc
push
mov
push
pushl
ret
jmp
rclb
mov
fxch
xchg
sub
lods
jge
and
and
test
hlt
cwtl
xor
pop
mov
stos
pop
inc
imul
sahf
ret
inc
out
imul
jle
add
push
cmp
call
inc
push
icebp
hlt
sub
pop
call
cmp
push
fcomip
xor
xchg
clc
out
out
es
inc
mov
sub
jno
stos
xchg
push
lret
fnsave
sbb
movsb
nop
and
popa
test
add
sub
lds
call
cmp
push
jmp
lea
call
jmp
sub
call
repnz
rcr
jb
jbe
push
mov
sti
jmp
int
pop
repnz
scas
xchg
dec
add
mov
sbb
pushf
in
adc
mov
sarl
pop
mov
test
iret
daa
sbb
stos
push
sub
data16
dec
bound
jne
pop
decb
push
mov
lea
mov
inc
mov
mov
jae
es
les
shrl
addb
enter
pop
adc
cmp
call
mov
jmp
cmc
test
sub
pushf
pusha
movb
clc
cmp
call
movsbw
not
pushl
popl
not
setg
mov
movzbw
pushl
push
jmp
call
mov
neg
pusha
rol
pushl
stc
pushf
add
movb
bt
cmp
lahf
lea
movl
mov
pop
bswap
mov
pushf
call
mov
call
test
repz
sub
sbb
or
dec
lahf
jns
and
loope
int3
cmc
xor
inc
decl
repz
cltd
xchg
sbbl
imul
sbb
popf
pop
xor
cli
cmp
adc
cmp
xor
jp
frstor
pop
jo
pop
xor
and
pop
fstps
icebp
xchg
je
dec
add
xchg
push
mov
mov
cmp
stc
lret
ljmp
adc
jp
pop
in
push
push
int
xchg
lds
fidivrl
push
icebp
sbb
outsl
rcpps
sbb
cli
push
pop
fnstcw
add
cmpl
idiv
ss
pop
stc
fldl
dec
dec
mov
xchg
xchg
pop
cwtl
imul
imul
shl
call
mov
push
iret
or
rorl
out
mov
stc
test
adc
jg
icebp
std
push
push
pmulhuw
cmp
push
inc
add
adc
fcom
dec
mov
das
sub
push
and
dec
xchg
clc
inc
or
dec
sub
push
xchg
movsl
mov
pop
cwtl
jno
xor
popa
adc
lea
adc
into
pop
cltd
dec
fstps
jecxz
inc
pusha
sarl
xor
adc
pop
dec
add
xchg
icebp
push
push
dec
lods
jns
push
lods
jno
mov
ret
dec
int
inc
arpl
add
jle
or
push
enter
jnp
cmc
lahf
sbb
jo
cmp
sbb
push
inc
mul
push
popa
repz
push
inc
sbb
dec
rcll
add
enter
jo
push
pop
stc
dec
lods
mov
mov
mov
jno
lea
xchg
inc
push
fisubl
leave
ss
das
pop
test
cmp
sub
movsb
dec
lcall
xor
stos
popa
stc
fs
xchg
push
insl
or
jae
sbb
icebp
clc
mov
cli
rol
sbb
add
mov
jb
mov
jge
dec
jge
outsl
xor
pop
inc
sbb
cltd
adc
cltd
push
aad
cltd
or
jb
nop
mov
xchg
dec
pusha
jns
int3
leave
loope
sub
popf
js
cltd
inc
ja
push
pop
inc
sbb
dec
imul
outsl
cltd
rclb
mov
xlat
dec
arpl
and
xchg
mov
sahf
jg
xchg
sbb
sbb
cmpsl
cmp
pop
jnp
fxch
inc
aam
imul
push
inc
cwtl
xchg
dec
ss
adc
gs
add
cmp
dec
stc
icebp
out
jno
inc
arpl
mov
int
rcll
jne
bound
int
in
xor
icebp
jo
loope
mov
mov
jmp
cmp
jg
bound
xor
jg
xchg
repnz
icebp
fdivrs
insl
std
cmp
sbb
arpl
jbe
roll
subl
enter
mov
aad
iret
arpl
aad
add
sti
add
out
mov
fstps
stc
es
jno
mov
fsubrs
adc
xor
mov
add
imul
xor
std
lods
sbb
repz
jno
push
dec
mov
jo
dec
adc
xor
sub
test
dec
iret
popa
mov
push
inc
addr16
xchg
jns
fmuls
call
in
cmp
inc
jo
mov
imul
out
add
and
pop
lods
stc
inc
push
cli
sub
out
sbb
pushf
and
adcb
dec
dec
add
pop
shrl
popa
xor
sub
adc
fs
xchg
lock
sbb
movsb
jno
push
rorb
dec
push
dec
jmp
nop
push
rcl
aad
out
cld
cmp
js
rcll
xor
movsl
popl
lret
sbb
test
jae
arpl
mov
pop
stos
fwait
je
push
sahf
popa
jbe
pusha
bound
xchg
jo
out
cmpsl
xor
cmpsb
push
arpl
jno
add
jp
cmp
xor
lahf
cmp
sub
icebp
adc
repnz
add
xchg
pop
js
or
sarl
dec
icebp
inc
std
lock
push
hlt
jle
pop
push
stos
dec
sbb
aam
pop
sarl
inc
pushf
or
sar
movsl
iret
push
pop
push
push
fdivrs
mov
stc
add
test
adc
iret
cmpsl
rcrl
jnp
pop
and
or
fsubs
lods
cwtl
mov
jl
arpl
sbb
mov
dec
mov
pusha
xorl
push
add
int3
push
xor
rol
aaa
dec
sub
flds
fisubs
xor
push
imul
movl
aaa
push
sub
push
xchg
mov
and
ficoml
inc
mov
xchg
and
mov
icebp
jns
daa
pop
push
icebp
jbe
mov
pop
arpl
idivb
in
pop
arpl
fistl
push
aam
mov
adc
dec
leave
pushf
cmpsl
mov
pushf
les
sub
sub
push
or
popf
cmc
aaa
shrl
xor
out
inc
xlat
sub
ss
mov
mov
rorl
xchg
mov
pusha
rcrb
jl
mov
mov
pop
stc
shrb
roll
adc
xlat
xchg
add
pop
cmp
call
mov
fstl
cltd
stc
jno
cmc
adc
stc
lret
push
or
jmp
imul
aad
subl
fs
jno
dec
in
cmp
loope
add
imulb
push
flds
sbb
test
pop
and
inc
shlb
daa
cmpsl
lret
sbbl
rclb
or
xchg
mov
mov
mov
push
and
sbb
adc
dec
sbb
push
popf
jno
neg
xchg
mov
xor
adc
scas
add
pop
add
sahf
sarl
aas
xlat
jg
push
popa
push
lock
adc
cltd
and
jl
mov
or
adc
pop
push
jo
bound
mov
dec
dec
pop
int
ljmp
push
push
xchg
xchg
cmp
sub
adc
scas
push
call
adc
icebp
sarl
mov
add
mov
cltd
js
loopne,pt
push
aaa
jno
add
sub
frstor
dec
sahf
insb
cmpsl
mov
cmp
sub
mov
cwtl
xchg
push
adc
cmp
cmpsb
pop
push
push
bound
adcl
push
rorb
xchg
nop
rorl
lcall
xor
mov
adc
and
lock
dec
stc
xchg
shrb
xlat
adc
inc
xor
rcll
jnp
mov
inc
adc
jae
pop
mov
push
xor
xor
andl
jnp
pop
sbb
icebp
add
rcl
push
jno
push
sbb
xchg
and
sub
inc
xchg
push
mov
jbe
or
dec
inc
cwtl
aam
xor
divl
push
xor
int3
push
pop
xchg
pop
cltd
mov
bound
pop
jmp
sbb
outsb
or
and
rorl
pop
or
int3
popa
sub
dec
jno
stos
sub
xor
addr16
mov
push
repz
pusha
notb
pop
rcrb
imul
frstor
jp
aad
insl
adc
cmp
adc
adc
sub
xchg
dec
dec
sbb
sub
adc
sbb
or
jl
in
icebp
pop
cmp
xor
dec
aad
test
xchg
inc
out
push
adc
dec
dec
imul
rcll
das
mov
xor
or
fwait
rclb
push
int
add
mov
cwtl
add
stc
pop
push
mov
jp
add
fildl
sub
sbb
push
pop
or
scas
sarb
and
dec
sbb
fchs
cmp
adc
es
sbb
loope
das
rolb
cmp
pop
or
push
sbb
or
shl
push
jl
xchg
mov
xorl
fnsave
pop
dec
pop
push
lds
push
mov
jo
adcb
xor
shlb
shlb
stc
push
push
cmp
pop
ret
fisttpl
adc
add
xchg
jo
insl
pop
arpl
rcl
sub
jae
xchg
cmp
popf
sub
mov
pop
pop
into
xor
push
dec
sub
bound
mov
test
movsl
sarb
jg
push
icebp
call
push
call
leave
movsl
aam
pop
aad
mov
ret
sarb
subb
icebp
xchg
icebp
sub
xor
ret
xchg
sbb
inc
add
sahf
aad
add
cmp
insl
xor
addr16
test
jecxz
xchg
pop
aas
icebp
arpl
inc
scas
push
push
std
adc
mov
test
xor
push
push
shl
or
pop
mov
jb
adc
lea
sbb
stos
int3
icebp
push
xchg
add
fwait
sbb
or
jae
cmp
mov
pop
dec
cmp
rcll
insl
jbe
xor
inc
adc
xchg
sbb
mov
je
sub
and
push
stc
flds
xor
inc
insl
sub
push
mov
mov
jge
test
rorl
sbb
testb
arpl
scas
inc
sub
mov
lret
inc
icebp
ret
sub
mov
daa
or
in
push
xchg
neg
sbb
xchg
gs
mov
cld
push
lret
adc
mov
and
and
pop
cmp
sarl
inc
shll
jo
dec
insl
pusha
sbb
xor
int
cmpsl
test
cmp
push
jge
cmpsl
add
inc
push
pop
rolb
or
xchg
jno
jbe
dec
lahf
jns
sbb
imul
mov
xchg
imul
shlb
sti
call
clc
fidivl
mov
mov
push
cli
jae
lret
xchg
dec
xchg
jo
fstpt
in
cs
mov
into
mov
es
addb
mov
pop
icebp
fistl
scas
adc
dec
inc
aam
lea
enter
mov
jns
arpl
xchg
daa
and
imul
jbe
js
jns
inc
jno
cmp
ds
push
xchg
mov
iret
or
popa
ja
jae
mov
rcrl
pop
sbb
inc
jno
imul
dec
adc
push
outsl
dec
jle
in
or
dec
je
icebp
pop
mov
jg
sbbl
mov
xchg
in
mov
iret
scas
cmp
orl
shl
icebp
mull
dec
xchg
popa
fistpll
fnsave
jae
shll
mov
daa
jno
push
and
jns
rol
mov
sbb
cmp
mov
adc
sti
pop
arpl
repnz
fs
dec
mov
xor
repnz
les
dec
popf
xchg
out
jecxz
jb
icebp
xchg
in
xchg
sbb
aaa
dec
dec
int
gs
mov
mov
out
jl
xor
mov
movsl
dec
xchg
dec
adc
jo
add
mov
mov
xor
inc
das
in
stos
inc
in
int3
fistps
mov
push
pop
lds
lods
ds
jno
push
outsl
stos
push
pop
jmp
push
dec
push
icebp
mov
jb
cmpsb
cmp
push
mov
dec
adc
les
fbld
push
adc
ja
sub
fcoml
ficoms
sbb
jmp
dec
fadd
xchg
push
mov
int3
push
aad
sarb
mov
fcoms
cmp
sbb
lods
idivb
in
cmp
add
out
inc
adc
sbb
cmp
add
fildl
jg
sub
sbb
repnz
xor
sbb
mov
push
xchg
adc
cmp
dec
js
sbb
or
scas
sbb
cmpl
enter
loope
inc
roll
sbb
sbb
imul
sbb
mov
or
pop
mov
xor
sarl
xor
int
xor
stc
cmp
int
ss
ja
popa
shll
iret
push
mov
and
and
cmc
pop
cmp
cmp
push
stc
adc
sbb
adc
xor
sbb
adc
and
xor
cld
pop
or
rorb
xor
pop
add
and
sub
cmp
mov
icebp
gs
inc
xor
aad
xor
dec
cmp
add
inc
or
mov
cmp
hlt
or
imul
mov
sbb
cmp
in
mov
push
push
push
mov
nop
or
lock
daa
test
inc
or
mov
stc
in
cmp
inc
inc
add
rcrl
inc
xchg
push
imul
inc
push
xchg
cmp
mov
add
sub
push
mov
ret
mov
lock
mov
rcll
push
and
sub
adc
fsubrs
outsb
pop
ret
mov
mov
sub
ds
inc
mov
dec
fisttpll
inc
mov
rcll
pushf
dec
sbb
test
adc
loopne
std
dec
xchg
or
jmp
jno
clc
xchg
inc
int3
fdivr
and
pusha
fs
or
mov
push
inc
iret
dec
orl
xor
mov
mov
mov
add
jo
fmul
icebp
leave
push
xor
adc
outsl
jns
sti
jnp
sbb
rorb
jno
add
xor
cmove
add
pop
call
cmpsl
es
push
mov
stc
adc
inc
scas
inc
cwtl
mov
pop
sahf
xor
pop
subb
xor
cltd
pop
mov
popa
fwait
cmp
cmp
mov
cwtl
add
sbb
icebp
fwait
push
xchg
mov
inc
push
mov
xchg
jno
cmp
ds
fdivrs
mov
dec
stc
pop
popf
ja
aaa
push
or
or
leave
lock
mov
xchg
cmp
sbb
mov
rorb
push
testb
inc
xchg
lahf
jo
icebp
dec
mov
aas
mov
dec
add
xor
fadd
icebp
fildll
push
dec
mov
js
fmull
sbb
push
add
dec
inc
inc
scas
xor
bound
pop
xchg
imul
push
add
cmc
in
mov
mov
cltd
test
fs
xor
mov
sub
cmpb
xor
jp
push
adc
aaa
pop
mov
or
inc
sub
jle
inc
imul
xor
dec
xchg
icebp
lock
push
xchg
mov
stc
setg
sarl
js
xchg
dec
sahf
xorl
cmp
outsl
cli
scas
mov
aaa
in
xor
js
fs
xor
sbb
dec
inc
xchg
mov
in
aaa
or
push
and
pop
das
incl
cmp
add
adc
fadds
fstp
pop
subl
inc
inc
jno
mov
arpl
pop
xor
push
bound
or
imull
ja
cmp
mov
mov
fimuls
pusha
ret
xchg
in
pop
loopne
push
fists
stc
inc
pop
ror
dec
and
sub
xchg
sti
lods
or
pop
mov
xor
popa
int3
and
cmovs
push
or
fs
test
xor
lock
cmc
inc
movsb
mov
popf
aaa
fdecstp
add
push
jl
jne
mov
out
lea
sbb
pop
cmp
je
xchg
xor
mov
or
dec
sarl
jnp
cmp
sarl
and
sbb
icebp
cmp
int3
test
push
ja
in
mov
ficoms
flds
lock
jae
push
fdivrp
ja
dec
adc
push
cs
lea
sbb
aad
xor
xor
adc
lcall
lcall
push
fcomps
mov
insb
push
push
repz
arpl
pushf
dec
fdivs
sbb
xchg
or
or
pop
jmp
sub
popa
pop
fildll
daa
stc
arpl
dec
xchg
icebp
dec
pop
jo
idivl
loopne
mov
mov
cmp
ja
faddl
pop
push
popa
test
pop
in
xor
xor
jo
cli
pop
push
cmp
sti
test
cmpsb
stos
aas
mov
adc
scas
push
adc
mov
pusha
dec
mov
loopne
or
shll
subl
push
pop
mov
mov
sahf
push
xchg
pop
mov
mov
daa
ret
insl
das
lret
xchg
push
loopne
testl
jno
jno
xchg
mov
sbb
pop
jecxz
mov
adc
mov
shll
jno
adc
mov
jno
leave
addr16
test
xorl
out
mov
sub
sti
pop
or
push
fadd
popl
sub
ljmp
xor
dec
nop
call
stc
fwait
addr16
ret
jo
cmp
xchg
mov
pop
aaa
cmp
stc
cmpsl
ret
xlat
test
jnp
adc
mov
xor
shr
rolb
sub
imul
shll
insb
sub
or
aas
aad
xchg
inc
push
push
popa
jno
aam
push
jmp
xchg
push
mov
cmp
jns
aam
jo
jns
mov
cmp
data16
pop
aad
or
out
outsb
js
sbb
fstl
scas
add
xor
xlat
cmp
cmp
mov
rcrl
push
jns
adc
push
stc
fnstenv
notl
das
sarl
rcl
inc
popa
xchg
push
cmpsl
pusha
push
mov
jmp
stos
jne
pop
xchg
mov
sar
inc
pop
push
iret
xchg
jmp
jo
add
push
cmovbe
insb
push
fs
incb
iret
icebp
insl
mov
xchg
sbb
dec
push
dec
std
push
mov
stos
jmp
into
fcmovne
xor
push
jg,pt
cmp
xor
add
sub
pop
enter
sub
loop
cmp
ret
les
cmc
push
jno
cmc
inc
clc
mov
ds
sbb
sbb
rol
push
lods
cwtl
arpl
int
push
cmp
cmp
vprotd
inc
mov
mov
xor
ret
cmp
mov
xlat
or
fadds
scas
leave
inc
fucom
cmp
into
stos
cmp
adcb
lcall
mov
lods
push
xchg
cmp
aad
add
mov
dec
flds
das
cmc
aam
stc
clc
fsts
mov
dec
cmp
int3
and
out
mov
inc
pusha
aam
mov
in
pusha
push
fyl2x
popa
adc
cmp
lods
inc
fwait
push
inc
repz
cmp
sarl
lcall
mov
xor
mov
clc
fnstcw
cmpsb
adc
sbb
sbb
repz
jns
ljmp
leave
xchg
movsl
mov
mov
mov
fldl
or
push
xor
pop
adc
repz
cmp
std
dec
dec
push
xchg
push
sbb
mov
cmp
test
xchg
loope
add
sbb
adc
push
icebp
pop
jge
dec
das
xchg
fucomp
loope
jge
jns
adc
movsl
sbb
push
push
dec
aam
and
xchg
popf
lds
add
add
jns
stc
xchg
mov
push
icebp
inc
int
mov
inc
adc
add
jne
leave
or
push
jno
dec
cmp
cmp
mov
mov
aad
mov
dec
icebp
pusha
xchg
lods
xlat
mov
or
iret
mov
in
pop
cmp
add
aam
repz
jmp
cmc
and
lods
and
cmp
jno
sub
data16
dec
push
adc
sbb
ficomps
dec
stc
rorb
dec
mov
jnp
inc
mov
sub
jno
std
push
or
or
jo
out
inc
decb
sub
fcoms
push
fdiv
xor
insl
mov
shl
or
cmpsl
mov
pop
jno
push
xchg
or
sbb
pop
dec
cmp
roll
fs
or
mov
or
rorl
roll
pop
repz
imul
decl
sub
enter
adc
adc
std
sti
jle
arpl
mov
sub
stos
push
icebp
and
mov
into
insb
pcmpgtb
or
into
xor
add
dec
dec
fs
out
ss
add
adc
cmp
inc
movsb
aad
sbb
jno
insb
ss
hlt
daa
lea
icebp
adc
jno
adc
add
shrl
push
lods
ja
add
mov
sahf
lods
xchg
push
dec
jno
sbb
push
inc
and
pop
rcr
mov
icebp
mov
push
in
pusha
push
or
cmp
rolb
sbb
and
arpl
xchg
js
xor
cmp
inc
in
adc
push
loope
nop
call
mov
imul
das
jno
ljmp
imul
dec
arpl
add
sbb
and
xor
ret
mov
push
cmc
push
pop
cli
xor
lahf
aad
in
push
jno
ss
sub
pushf
xor
cld
adc
dec
fs
ds
sbb
int3
push
ret
pop
loop
lods
ret
sbb
ds
pop
inc
add
addr16
xchg
add
pop
jns
cltd
ja
xchg
lds
sbb
arpl
mov
fistpll
sub
into
leave
and
jne
push
or
inc
test
inc
jo
cld
cmp
lods
addr16
in
mov
mov
bound
adcl
mov
or
arpl
xor
dec
pop
int3
sbb
pusha
push
das
mov
jp
popa
lds
repz
add
leave
fcoms
stc
adc
pop
push
xorb
xchg
push
pushf
fs
adcb
dec
int3
push
lahf
mov
and
insl
jne
iret
mov
dec
bound
sub
rcll
mov
mov
inc
dec
mov
es
cmp
push
jno
jns
int3
enter
fwait
out
arpl
or
mov
loopne
jp
shll
fdivl
imul
mov
negl
or
push
outsl
push
xor
addr16
push
sub
out
incb
lea
push
add
ret
pop
loop
xchg
cli
in
xlat
or
repnz
xlat
mov
cli
insb
pop
inc
xchg
push
fnstcw
xchg
mov
insl
mov
icebp
mulb
lea
dec
cmp
or
mov
lods
sub
cmpsb
cmp
xchg
sub
stc
push
insl
xchg
push
arpl
popf
push
push
fistps
leave
cmpsb
pop
mov
xlat
ret
and
jmp
nopl
pushf
sub
ljmp
iret
xchg
js
push
or
mov
cmp
mov
xchg
shlb
cltd
shl
or
adc
xor
sub
mov
sub
adc
push
arpl
jmp
mov
les
outsl
into
gs
sbb
shlb
jl
or
sbb
insl
rdpmc
add
popa
push
or
psllw
pop
add
sub
add
repnz
pop
icebp
fistps
icebp
dec
cmp
sub
pop
int
push
push
xchg
push
and
mov
jb
adc
fnstenv
push
jae
scas
ror
push
sbb
xchg
jmp
test
outsl
icebp
pop
jno
scas
jle
sbb
cmp
insb
pop
addr16
mov
cmpsl
xchg
test
mov
into
inc
jo
xor
push
push
xchg
xchg
pop
or
cmp
jecxz
pop
sbb
repz
sub
dec
test
pop
jle
sahf
cwtl
mov
pusha
cmp
mov
sub
arpl
and
movsl
add
jo
pop
divl
nop
push
mov
outsl
imul
incl
cmp
psubq
rcll
shlb
sbb
sbb
push
lahf
loope
repz
icebp
mov
jg
push
xor
stc
cli
adc
cli
jno
int3
mov
ds
cmp
insb
aaa
cmp
adc
enter
jnp
sbb
imul
ljmp
addr16
add
pop
icebp
bound
imul
pop
fs
shl
lcall
add
cltd
aas
or
frstor
mov
sub
sub
ds
sub
mov
xor
out
in
mov
dec
sub
daa
push
inc
jno
clc
aad
lods
xchg
lcall
mov
xchg
jne
mov
cmp
cli
lahf
stc
jne
xor
into
adc
push
insb
fsts
xchg
xchg
es
xor
dec
pop
push
icebp
jnp
mov
jo
mov
adc
data16
adc
pop
aas
jo
add
lods
xor
sub
cmpb
lahf
stc
repz
jle
mov
or
test
lods
adc
mov
aam
sub
add
or
pop
mov
aad
orb
mov
sub
test
ljmp
adc
xchg
or
fxch
cltd
int3
cmp
pop
nop
adc
cmpsl
negb
pop
push
jne
push
icebp
sub
adc
adc
test
mov
shrl
sub
cli
ret
test
pop
push
cmp
inc
jo
push
lahf
rcll
and
cmovge
xor
xchg
cmpsb
out
ljmp
popa
pop
pop
pop
xchg
xchg
xchg
jnp
add
popa
pop
or
aaa
cmpsl
push
cmp
and
sbb
jno
ja
mov
mov
call
xchg
outsl
push
push
mov
cmp
aam
push
xchg
cmp
cmp
rorl
inc
sbb
dec
mov
mov
add
xchg
out
mov
repz
dec
pop
ret
in
adc
inc
ljmp
call
jno
mov
data16
test
push
or
jnp
pop
xor
popa
cs
ficoms
mov
ret
arpl
das
popf
xor
stc
pop
aad
push
ficomps
dec
jo
cli
xor
mov
xorl
fstps
arpl
xor
fs
jo
in
test
loopne
xchg
xor
mov
das
jno
sahf
outsl
ds
jno
nop
sub
jmp
sbb
add
dec
sub
sahf
jo
adc
daa
mov
pop
xchg
jne
popa
xchg
lret
add
stc
enter
mulb
push
sub
mov
push
sahf
add
push
xchg
mov
sub
mov
pusha
ret
addl
je
rorb
outsb
ffree
stc
icebp
lret
shrb
xchg
push
sahf
and
push
pop
jo
xchg
xor
cld
or
inc
push
test
mov
stos
movsl
push
xor
cmpsb
jp
fists
cmc
rcrb
dec
orb
addr16
scas
nop
or
int3
and
xor
mov
dec
aaa
push
mov
movsl
adc
jle
insl
sahf
cmp
sub
add
bound
adc
inc
ljmp
in
xor
jbe
sub
adc
xchg
dec
pop
andl
std
aam
loopne
aas
add
and
popf
push
mov
sti
dec
mov
push
mov
addr16
std
cmp
adc
adc
xchg
shlb
call
aam
jbe
xor
dec
push
pop
idiv
adc
inc
testl
adc
shrb
daa
pop
jno
push
mov
popa
push
and
dec
add
pop
lods
xor
sbb
in
es
popa
jo
pop
popa
mov
jae
outsl
into
sbb
inc
stc
mov
dec
sbb
addr16
mov
sub
push
in
mov
xor
cwtl
fs
dec
push
test
mov
sbb
adc
cmpsb
sub
and
dec
popa
fwait
js
xor
xchg
or
gs
imull
cwtl
aad
clc
pop
int3
fstl
mov
mov
add
das
pushf
cli
xchg
adc
cwtl
cltd
or
jbe
push
pop
ja
cld
inc
icebp
mov
add
hlt
iret
jge
js
mov
arpl
rcl
xchg
sub
cmpsl
ja
jno
mov
add
push
and
push
push
mov
inc
xor
inc
into
icebp
cmp
lea
hlt
mov
cld
shl
xor
sub
sub
xor
jns
lods
cmp
or
add
jae
cmp
out
pushf
sub
mov
stc
xchg
push
xchg
pop
cwtl
adc
push
pop
aad
cmp
aad
out
in
xchg
lods
mov
jl
sbb
jo
ds
ffreep
into
stos
sub
add
mov
adc
iret
jg
mov
push
cld
push
or
and
cmc
jle
mov
inc
testb
dec
stos
xchg
jnp
out
mov
add
dec
jecxz
sbb
lret
jno
imul
lods
nop
add
orl
shl
xchg
sub
dec
pusha
and
out
hlt
xchg
roll
pushf
in
pop
xor
add
cli
and
xchg
ja
mov
adc
lods
fyl2x
add
sahf
ds
or
incb
or
xchg
dec
into
mov
fs
lea
mov
cmp
mov
add
lods
inc
or
mov
sbb
mov
inc
inc
or
leave
adc
ret
cld
xchg
scas
test
in
jmp
pusha
icebp
fnstenv
addr16
jb
pop
cli
dec
jns
fldenv
pop
jno
sbb
mov
jg
int3
jecxz
and
jle
or
fisttpl
push
sub
jae
fstl
scas
adc
sub
xchg
xchg
xchg
lock
int3
mov
jo
das
push
adc
or
dec
jnp
mov
faddl
pop
sbb
pop
icebp
dec
xchg
mov
jge
aam
dec
aad
aad
xor
dec
or
mov
mov
nop
mov
scas
int
cmpsb
decl
scas
lea
decb
aas
les
lcall
test
xchg
out
inc
sbbl
sbb
inc
es
jge
lods
aam
jmp
mov
push
outsl
fldenv
imul
popa
imul
push
or
and
adc
inc
aad
jno
mov
je
inc
fmuls
pop
push
mov
imul
icebp
xorl
in
in
push
pop
lods
cmp
addl
cwtl
pusha
sub
rcll
call
push
sub
in
rcrb
pusha
xor
xor
fs
jo
nop
mov
sub
bound
movsl
outsl
pop
cwtl
cltd
dec
jno
out
push
shlb
add
loop
pushf
mov
jp
scas
pop
call
bound
faddl
pop
sub
cli
ja
or
call
int
sbb
lret
xchg
fiadds
cs
arpl
ljmp
lret
nop
or
call
les
rcll
ffree
movsb
dec
les
pusha
mov
ret
rol
popl
cld
dec
decb
push
and
sbbb
sarb
lret
jecxz
sti
sbb
clc
jp
jo
out
cmp
scas
pop
movsl
mov
inc
cltd
mov
popa
rclb
mov
mov
xor
das
loopne
cmp
push
jns
cmc
jle
mov
sbb
and
rclb
mov
pop
icebp
jne
sub
mov
sbb
aam
or
shrl
mov
mov
iret
fadds
test
sub
sub
out
lcall
es
in
fcmovu
mov
add
mov
enter
andb
pop
pop
sbb
fildl
dec
jo
fistpl
rcr
cmp
inc
sarb
out
lods
and
xchg
out
sub
sahf
arpl
adc
aaa
popf
inc
imul
lds
nop
inc
sahf
rcrl
jae
movsb
xor
pop
aad
push
pop
in
and
outsb
xchg
test
cltd
lgs
push
imul
pop
loop
mov
jo
jno
push
xor
push
mov
xchg
mov
inc
jo
inc
enter
and
xchg
sarb
sub
sbb
addr16
lods
xchg
mov
in
sar
mov
inc
cmpsl
add
push
push
loop
call
pop
inc
stos
cli
or
arpl
or
adc
idivl
flds
xor
int
ret
mov
loope
cli
and
xchg
cwtl
outsl
inc
mov
push
and
cs
xlat
stc
jno
std
lahf
sub
or
std
jae
push
dec
jle
cltd
dec
mov
push
popa
stc
pop
xorl
movsl
in
dec
fs
push
in
fiaddl
xchg
rcl
and
inc
mov
in
shrl
push
cltd
imul
repnz
adc
out
repz
pushf
rcr
xchg
popa
mov
mov
jle
pop
icebp
add
sub
dec
mov
cmp
add
add
pusha
icebp
icebp
jge
js
fsubs
inc
and
dec
xchg
push
stos
add
jecxz
cmpsl
xchg
mov
xchg
pop
xchg
xchg
cmp
inc
mov
add
mov
xchg
aam
movsb
xchg
xor
cltd
pop
ss
mov
inc
cmp
mov
cmp
pop
jg
insl
xchg
dec
int3
and
dec
jp
push
stc
pusha
pop
push
ds
ds
cmpsl
xchg
movsb
mov
or
inc
repz
fists
xchg
push
pop
cltd
push
mov
inc
jp
outsb
xchg
xor
out
adc
push
dec
fisttpll
aam
push
xchg
movb
cs
pop
adc
or
rcll
daa
pusha
dec
fisubrl
int3
cld
in
xor
push
cli
dec
int
popa
sbb
test
je
xor
sbb
pop
aaa
icebp
pop
fwait
cmp
jl
popf
lds
aam
filds
mov
mov
shrl
xor
fistpll
xor
dec
cwtl
mov
call
je
xchg
popf
out
dec
or
inc
test
sbb
cmc
cmp
inc
sub
xor
or
in
mov
insb
xor
pop
ret
dec
fidivl
or
pop
stc
sub
jmp
rcrb
dec
fldcw
inc
jg
movsb
adc
push
jo
imul
add
push
add
sbb
leave
inc
cmp
arpl
dec
addl
xchg
push
jo
or
add
inc
push
arpl
pop
test
lret
and
sub
icebp
inc
rclb
jno
mov
sbb
pushf
dec
les
xchg
and
popa
sbbl
cwtl
hlt
shr
sarl
pop
icebp
fisubs
popa
insb
or
in
dec
sarl
cs
inc
mov
jnp
fiaddl
sub
adc
mov
push
fistpll
adc
bound
ret
jbe
cltd
cltd
js
movsl
call
ss
cmc
dec
push
xchg
push
dec
shlb
add
pop
into
dec
sub
leave
fwait
or
xchg
cwtl
pop
in
int
add
xor
jmp
dec
outsl
shl
sbb
push
xchg
shrl
testl
icebp
mov
or
lods
add
jns
lock
icebp
jb
jp
jo
xor
ret
enter
pop
in
lret
int
jno
mov
lock
xchg
outsl
mov
dec
push
sbb
dec
jo
xor
rolb
dec
push
ret
lods
xchg
shlb
in
xchg
dec
rcrb
mov
mov
mov
into
sub
testl
cmp
push
mov
cmp
mov
xchg
imul
cmp
jmp
push
ljmp
and
dec
imul
mov
jns
add
sub
adc
mov
jo
icebp
cltd
inc
mov
negl
ds
leave
jmp
xor
test
leave
stc
popa
cmp
and
cltd
imul
jmp
or
popa
or
push
sub
mov
lods
rclb
adc
sti
fstl
leave
inc
mov
dec
popf
sub
sbb
push
adc
and
add
rorl
test
mov
mov
roll
pusha
cmp
mov
loop
rcr
cmp
push
dec
fnsave
test
sbb
sbb
adc
or
xor
adc
cmp
or
fnstsw
push
xlat
in
add
jns
loope
stc
in
lds
adc
shrl
inc
lds
push
shlb
fldl
push
cmp
cmp
sub
in
jmp
pop
mov
pop
rcrl
push
std
inc
add
rclb
loope
movsl
xor
mov
xor
adcl
jno
adc
rcll
clc
xchg
dec
inc
adc
sbb
add
rorl
dec
sbb
movsl
adc
aam
dec
dec
shlb
lods
aad
aad
enter
cmp
enter
xlat
adc
jmp
aad
xlat
dec
push
inc
dec
pop
adc
idivl
rcll
leave
xchg
sbb
sub
mov
push
xor
jmp
xlat
insl
daa
jns
push
dec
xor
stc
sub
pop
aaa
cltd
sbb
jge
push
adc
mov
mov
loope
leave
cmp
sar
dec
xlat
adc
jmp
cmp
stc
dec
movsl
sbb
dec
movsl
xchg
mov
mov
cmp
arpl
jo
xchg
or
jno
ror
push
out
jmp
dec
xchg
nop
ja
sub
and
xorb
xchg
es
fldl
xor
xor
inc
push
int3
scas
and
mov
test
outsb
stc
push
rclb
add
dec
sarb
xchg
jne
mov
jp
arpl
pop
out
imul
adcb
insl
leave
and
outsb
xchg
and
push
mov
ret
jno
cmpb
push
stc
xchg
jno
sti
jo
pop
push
lock
add
inc
int3
fidivrl
adc
call
xor
and
mov
add
lds
jno
in
dec
and
xchg
insb
add
jo
jno
sub
sub
cld
gs
in
mov
rcrb
outsb
cmp
mov
leave
mov
repz
stc
mov
or
into
lods
lods
pop
and
pop
jno
push
and
adc
dec
dec
fists
mov
clc
mov
mov
adc
add
dec
cmpsb
push
dec
push
push
xlat
and
lock
cmp
push
push
jo
jns
test
jg
clc
cmp
notb
clc
mov
and
pop
mov
fists
dec
negb
push
icebp
arpl
sub
pop
das
push
ret
les
fwait
mov
inc
dec
mov
pop
add
hlt
in
sbb
xor
and
xlat
pusha
pop
test
into
ja
push
cmp
push
scas
adc
jo
add
jno
push
jo
sbb
xlat
mov
inc
add
psubw
das
xlat
dec
popa
repz
jae
pop
mov
lcall
pop
js
add
mov
xchg
shrb
out
sti
push
aas
popf
inc
mov
dec
pop
shrl
inc
and
xor
xor
xchg
pop
popa
inc
xlat
arpl
xchg
jno
jo
outsb
xor
or
stos
testl
sub
outsb
lcall
rcrb
mov
in
ret
out
cmp
shlb
insb
mov
int
cmc
jmp
xchg
ds
inc
popa
addb
in
cld
icebp
dec
or
mov
cmc
dec
cli
aas
ret
sti
add
sub
fmulp
cwtl
shrb
xor
adc
test
nop
cwtl
fdivs
pop
scas
xchg
adc
xor
scas
pop
or
in
xor
jae
lret
cmpsl
mov
mov
test
testl
jbe
jno
frstor
inc
mov
xchg
sbb
jne
mov
and
pushf
sti
int3
mov
loope
or
sub
adc
out
ljmp
into
pop
push
test
xor
pop
jne
add
xchg
inc
cmp
insl
or
xor
imul
ljmp
sbb
jae
mov
sbb
popa
jo
xchg
mov
dec
xchg
jg
stos
stc
or
dec
popf
sub
sti
lods
cmpsb
cld
loop
push
test
and
push
jno
fists
js
fistl
sbb
jnp
ficoml
sahf
pop
ret
nop
jno
test
xor
cltd
loopne
mov
pop
pop
add
sub
aad
pop
movsl
or
les
xchg
fistps
push
push
repnz
jbe
push
mov
testl
adcb
dec
pusha
dec
mov
sbb
cmp
fwait
ljmp
in
je
rorb
sbb
mov
inc
pop
mov
sub
imul
insl
mov
mov
sahf
psrld
jne
aam
in
push
xor
mov
cwtl
push
stc
ljmp
out
repnz
cltd
mov
pop
fwait
inc
xchg
add
adc
insl
aad
push
pop
repz
xlat
lock
aad
shlb
xchg
aam
test
outsb
pushf
fildl
shrl
ljmp
and
pop
sub
pop
pop
imul
outsb
inc
jle
add
nop
mov
sahf
stc
sti
jno
push
cmpsl
pop
das
sub
jg
xchg
in
xor
das
call
out
out
jno
push
xchg
mov
icebp
lret
test
adc
clc
mov
add
pop
mov
int
and
in
pop
arpl
hlt
ss
sub
stos
inc
add
clc
add
xchg
pop
jo
loopne
mov
repz
and
cmp
fs
push
sarl
xchg
and
xlat
xor
sub
ja
jns
and
push
dec
icebp
adc
cld
xor
add
cltd
jne
add
out
sbb
loopne
sub
dec
aam
jae
lret
adc
xchg
sti
xchg
pop
rcrl
pushl
xchg
out
les
pop
mov
jno
pushf
push
into
repz
jp
xor
cltd
cli
cwtl
pop
push
mov
sub
addl
jge
jmp
mov
fs
psubb
cmpsl
sbb
mov
jno
and
jno
fwait
push
xchg
outsl
fisttpl
pop
sbb
icebp
push
xor
dec
xchg
xlat
fldl
dec
icebp
dec
xorl
sbb
icebp
and
fsubrs
mov
push
pop
pushf
addl
icebp
orb
xor
cmp
scas
popf
test
insl
pop
mov
repz
xor
jg
out
dec
aas
jnp
mov
xchg
xchg
ja
xor
lods
movsl
inc
stos
push
ret
rorl
movsb
js
outsb
xor
inc
push
pop
cltd
cmp
aad
dec
hlt
pop
dec
mov
mov
xchg
jge
mov
fldcw
cmpsl
sahf
aad
push
xor
pop
sub
inc
sub
cmp
jecxz
push
adc
xor
adc
jp
or
notb
mov
jae
or
stos
dec
xor
cs
hlt
cltd
adc
insb
jp
loope
add
jmp
bound
dec
wbinvd
push
inc
fmuls
add
hlt
aad
repz
jno
pop
es
mov
cltd
xchg
lock
sti
mov
aad
mov
xlat
js
sub
pop
jns
les
jno
sbbl
jnp
push
icebp
cmp
sub
ret
add
add
shlb
gs
sahf
pusha
xchg
repz
mov
fldcw
xchg
mov
loope
lcall
mov
cmp
and
pop
out
cmc
push
sbb
add
inc
jno
in
sub
sub
lret
adc
xchg
pop
lahf
dec
stc
mov
in
xor
dec
mov
enter
ror
jg
roll
data16
cmp
adc
sub
push
mov
jno
mov
sub
sahf
jg
scas
int
inc
mov
jno
add
scas
shl
dec
aaa
lds
in
scas
add
push
adc
xor
jne
popa
cltd
dec
and
push
pop
aam
mov
add
mov
cltd
xchg
icebp
cmc
inc
mov
mov
push
imull
lcall
rcl
pop
xchg
mov
mov
int
sub
cltd
jmp
call
or
add
pop
push
out
dec
rolb
jmp
jl
lock
rcrb
jg
push
out
push
inc
xorl
xchg
std
cmpsb
mov
imul
fs
sbb
push
inc
outsb
push
pop
xchg
inc
push
cld
or
into
nopl
por
mov
jbe
test
mov
push
rclb
sbb
je
imulb
fldcw
dec
add
inc
nop
fildl
add
test
cwtl
cmp
dec
sub
mov
dec
cmp
xchg
push
int
gs
push
jbe
push
lock
pop
sub
mov
push
js
jle
pop
imul
jl
pop
pop
dec
cmp
dec
arpl
test
xor
mov
out
in
leave
adc
sbb
and
jo
cmpsl
outsb
xor
sub
jae
insb
jecxz
sbb
push
inc
aam
in
add
cwtl
xchg
andl
addr16
out
xchg
xchg
mov
pop
cmp
arpl
xchg
jmp
int3
icebp
sbb
xor
jbe
mov
xlat
inc
mov
push
fwait
popf
cld
or
fsubrs
or
addr16
pushf
shll
cmpl
cmp
int3
xchg
pop
cmp
cmpsl
sbb
push
rolb
shr
insl
push
xor
daa
in
fnstsw
mov
stc
xchg
mov
aas
push
mov
mov
cmpsl
adc
sub
push
xchg
push
jno
adc
cmp
aaa
sbb
ficoml
add
adc
movsl
mov
dec
mov
aad
and
xchg
or
je
or
pop
flds
jo
or
push
pop
xchg
push
jne
xchg
pop
and
dec
cld
mov
pop
sbb
mov
lahf
shll
subb
fildll
mov
fcoms
push
jno
push
addl
rclb
icebp
int
lret
jbe
pop
jno
cld
test
test
out
inc
jo
or
shlb
or
mov
mov
aam
fldt
pushf
aaa
in
push
fldl
cmp
sahf
out
mov
pop
pop
shll
loopne
mov
pusha
xchg
add
aaa
add
sub
xor
xlat
mov
inc
jbe
add
dec
adc
adc
dec
addr16
pop
sub
sub
sti
jg
jno
push
fs
and
sub
push
addl
adcl
test
imul
inc
mov
rcrl
leave
push
add
cmc
adc
or
and
pop
jno
inc
cmpsl
or
cmp
push
pop
divb
fnsave
mov
push
test
inc
sub
aam
out
pop
cmp
push
jno
dec
sysenter
aam
inc
and
into
into
push
mov
bnd
pop
pop
icebp
push
in
sbbl
rorb
pusha
or
in
dec
add
fisttpll
push
lahf
sbb
inc
pusha
rclb
xorb
push
dec
lret
shlb
stc
push
xchg
dec
adc
insl
loope
adc
mov
pop
jo
xchg
sub
mov
mov
and
fstps
pusha
cwtl
xchg
cmp
dec
adc
sub
aad
pop
pop
das
nop
xchg
jns
mov
push
leave
xchg
push
ds
sub
nop
aam
or
pop
and
addl
adc
jno
cltd
cmp
ret
sub
xchg
pop
lods
gs
stos
and
movsl
mov
cli
arpl
movb
or
inc
adc
push
fs
jno
or
jbe
or
ret
push
rcll
add
fcom
inc
lock
aaa
addl
popa
jns
arpl
shll
leave
xor
or
pop
adc
out
cmp
sbbb
sbb
lret
lcall
jno
sbb
sub
aad
movsl
subb
mov
in
mov
lahf
mov
inc
push
movsb
add
andb
jb
dec
inc
mov
dec
cmp
mov
sbbb
jl
das
js
xor
and
aam
pusha
outsb
xor
cmpb
cmp
add
mov
fs
fisttpl
mov
cwtl
cmp
in
sub
cli
mov
push
or
ss
popf
xchg
xchg
jle
inc
roll
cmp
bound
ja
push
mov
loope
insb
adc
mov
mov
and
cwtl
cltd
dec
mov
leave
ja
addr16
jo
pop
ljmp
in
ret
shlb
aaa
rorl
push
int3
mov
ret
mov
cmp
xor
test
rcll
icebp
shrb
std
lods
aam
cmp
inc
mov
stc
sub
je
push
mov
in
inc
push
ds
std
push
adc
jno
mov
sbb
fsubrs
test
int3
xor
sbb
lcall
rep
xor
jl
inc
xchg
dec
xorl
dec
adc
je
pop
xchg
pmaxsw
hlt
imulb
jno
movsb
repz
push
aam
dec
cmp
jo
clc
mov
icebp
xor
jmp
mov
push
stc
sahf
sub
jge
sbbl
js
xor
adc
pusha
and
insl
mov
mov
fs
sarl
sbb
mov
insl
pop
clc
repnz
dec
push
popa
add
jo
shlb
sbb
inc
xor
dec
int3
jg
push
jg
pushf
sub
cmp
push
cwtl
jnp
or
pop
push
sub
inc
pop
xchg
icebp
hlt
jns
and
cmpsl
js
inc
repz
popa
sub
inc
jno
leave
xor
sub
into
dec
push
cli
jo
jle
into
mov
mov
inc
cmc
mov
mov
push
pop
push
aad
or
sub
fs
ljmp
inc
and
push
mov
std
dec
xchg
pop
and
sub
sub
inc
sbb
cmpsl
adc
repz
les
pop
dec
push
sti
or
xchg
in
xor
in
ljmp
and
loop
cmpsl
dec
std
call
les
jg
cwtd
jns
push
push
imul
popa
popa
inc
pop
xchg
mov
dec
sub
les
sbb
sub
pop
inc
xchg
push
mov
jno
cs
inc
fcmovnbe
sub
jecxz
pmaxub
rorl
inc
mov
xor
ret
mov
push
les
inc
and
cltd
inc
data16
pop
ret
push
pushf
mov
adc
icebp
sub
jo
mov
stc
movl
cmc
mov
stos
xor
aad
xor
cltd
xchg
jae
jae
inc
pusha
ret
arpl
hlt
push
mov
fdivs
dec
call
mov
adc
cld
sub
pop
cmp
popa
mov
mov
dec
and
sub
pop
push
mov
test
cmp
jae
push
fldcw
jge
mov
lret
dec
xchg
cmpl
cli
pop
fcomps
daa
jo
arpl
and
outsb
sub
pop
test
or
push
mov
imul
xor
mov
sub
int
jge
cmp
jno
push
popa
insl
mov
aad
push
mov
dec
lock
or
pop
icebp
inc
out
cli
int
andl
mov
cmp
xchg
jae
rol
xchg
dec
sbb
sbb
jle
mov
xor
jnp
icebp
add
negl
inc
or
hlt
outsl
gs
jge
je
cmp
pop
mov
pop
jnp
and
or
or
pusha
sub
shrl
push
pop
pushf
xor
sbb
cmp
or
addr16
jecxz
or
mov
inc
jmp
ret
cmp
fs
enter
xchg
icebp
sbb
inc
rol
rclb
pop
fstps
sub
popf
dec
iret
sbb
mov
lds
jne
mov
pusha
mov
sub
imul
setns
divl
push
or
stc
add
pusha
sbb
cmpsb
sbb
into
adc
push
and
pop
pop
xorl
stc
mov
inc
or
push
arpl
push
push
jno
dec
les
orl
or
lods
insb
clc
xchg
xchg
into
lahf
sbb
sub
mov
jno
sbb
mov
iret
add
and
dec
push
nop
cld
lahf
push
xchg
or
je
rolb
push
dec
xchg
push
and
mov
push
aad
rorb
and
ljmp
popa
pop
inc
pusha
sub
insl
mov
dec
pop
mov
push
das
iret
lods
movsl
mov
or
enter
inc
popa
je
inc
stc
xor
inc
nop
out
jns
push
xadd
mov
mov
adc
pop
sbb
adc
out
push
rolb
fstpl
pop
dec
push
jae
gs
scas
adc
and
add
jnp
add
shlb
pop
fs
gs
popf
inc
pop
pusha
xor
cwtl
popf
inc
pushf
int
xchg
aam
arpl
or
push
add
xchg
stc
mov
lods
and
sbb
test
shlb
sub
jo
mov
nop
mov
xchg
test
loopne
leave
ret
rolb
mov
push
dec
sbb
popl
mov
xor
push
mov
and
add
cwtl
shlb
xchg
push
sti
cmp
negb
les
mov
aad
mov
cmp
scas
cmp
pop
negb
cltd
jl
inc
ja
loop
in
addr16
push
sbb
xor
push
flds
inc
cmc
insl
mov
and
stos
sub
or
and
pushf
add
mov
push
inc
imul
ret
mov
pop
movsl
call
or
lock
mov
rclb
cmpsl
push
xchg
dec
push
pop
movsl
fsubrs
popa
push
aam
push
mov
fisttps
in
mov
nop
add
mov
dec
push
in
sub
pop
mov
push
jbe
call
mov
loopne
rolb
testb
mulb
pop
sub
hlt
cwtl
das
dec
or
leave
sub
divl
mov
jo
les
cwtl
nop
cmp
push
jno
push
dec
or
fwait
cmp
sub
add
cwtl
jno
out
jo
imul
add
jmp
out
adc
jnp
js
cmp
shlb
dec
insl
dec
sbb
jno
push
jno
popa
dec
push
icebp
push
js
mov
popa
inc
nop
je
jae
dec
xchg
mov
cmp
mov
push
ss
or
sbb
mov
xchg
xor
mov
dec
adc
cmpsl
nop
or
movsb
stos
xchg
pop
test
xor
repnz
fmulp
shlb
sti
loopne
and
mov
fisubrl
sti
push
mov
xchg
sahf
fsubrs
cmc
aam
xchg
jno
push
jle
clc
lea
and
test
fisttpll
pop
dec
pushf
clc
push
cmp
mov
jae
xor
mov
xor
inc
pop
nop
cli
cs
aaa
repnz
pusha
push
in
push
xor
jmp
leave
addr16
pop
mov
jge
lea
outsb
and
test
pop
test
pop
fsubs
mov
call
dec
mov
push
adc
mov
push
dec
mov
or
daa
sub
xor
popa
xchg
pop
mov
nop
icebp
xor
repnz
push
cmp
popf
ja
test
mov
xor
sbb
iret
push
add
leave
rorb
add
xor
sti
divb
js
add
movsb
mull
jecxz
cs
xor
pusha
int3
aam
xor
sbb
int
and
dec
and
sbb
enter
mov
pop
flds
arpl
inc
mov
push
inc
pop
pop
int3
shlb
or
or
cli
lret
fcom
lods
push
lahf
das
mov
in
popa
sub
jo
sbb
dec
xchg
push
pop
cltd
push
add
pop
push
test
in
popa
mov
int3
das
lds
jno,pt
cmc
mov
jo
jmp
adcl
or
mov
insl
icebp
fdivs
decb
adc
fldenv
mov
mov
xchg
dec
pop
test
and
adc
stos
sub
push
pop
cli
test
push
mov
inc
mov
sbb
jb
push
fsts
das
jne
ficompl
inc
lods
insl
aad
stos
shlb
test
adc
push
fnstcw
sub
sbb
sbb
jns
push
ret
pop
xchg
xchg
sahf
and
mov
xor
fsubrs
cs
stc
push
insb
inc
pusha
dec
adc
leave
jp
mov
add
pop
jo
sbb
lods
pop
sub
loopne
pop
jo
cltd
push
sbb
cmpsb
andl
jo
rcrb
pop
jne
fbstp
arpl
or
out
push
lahf
outsl
adc
sbb
cmp
rorl
mov
sbb
xchg
sub
xorl
push
add
flds
push
cltd
xchg
sub
ja
xor
imul
out
sub
ret
out
sbbl
sahf
mov
fldenv
mov
push
sub
xchg
in
push
push
mov
jno
outsl
push
xchg
aad
shlb
std
jno
mov
adc
je
pop
adc
push
or
add
lea
out
pop
cmp
and
push
push
ret
mov
push
push
mov
pop
lea
ja
fs
les
mov
mov
fmuls
add
lahf
mov
lret
pop
addr16
sbbl
sub
xchg
mov
pop
xchg
stc
icebp
push
nop
inc
out
aam
cltd
mov
mov
adc
mov
jo
addl
xchg
fwait
push
fnstsw
test
mov
xchg
scas
push
std
or
or
imulb
lretw
inc
push
sub
adc
xorl
es
xlat
sbb
loope
lret
and
cmpsl
lret
insb
mov
lds
mov
jae
stc
lret
jp
push
jle
es
inc
jae
dec
mov
or
push
inc
test
dec
xor
fsubl
xchg
jae
or
aad
mov
int3
and
add
jno
cmpsb
sbb
mov
adc
cli
mov
push
xor
out
lahf
jmp
push
frstor
or
in
and
jo
int3
clc
sbb
add
pop
sti
mov
push
sbb
push
std
pop
sahf
jbe
pop
icebp
iret
jno
cli
rorb
jb
lret
push
sahf
lcall
adc
dec
pop
scas
adc
mov
xor
mov
add
xor
out
cmpsb
adc
mov
add
jno
push
imul
shlb
aaa
inc
fwait
leave
cmp
lcall
fnsave
mov
xchg
leave
xchg
sbb
and
addr16
sahf
dec
xchg
jecxz
or
mov
sub
adc
jnp
mov
mov
cmp
stos
inc
xor
imul
shlb
or
daa
push
pusha
xor
pop
aas
jno
mov
jo
or
mov
dec
lods
je
push
jb
jno
mov
xchg
sti
xchg
dec
xor
ss
and
orl
pop
and
mov
inc
fisttpl
jne
xchg
mov
add
xchg
ret
jns
xchg
pop
xchg
mov
ss
jae
inc
xorb
xchg
sub
push
je
mov
cld
out
dec
repz
mov
out
inc
push
jnp
push
push
in
sahf
jo
push
sub
adc
jo
loop
or
add
or
xchg
inc
lea
std
test
negl
icebp
fildll
and
loop
je
add
mov
cs
imul
imul
cmp
cmp
je
xlat
mov
xor
nop
sub
repz
dec
into
mov
or
sarb
jl
inc
jg
xor
popa
enter
cmp
jg
adc
mov
xchg
movsl
das
jbe
aam
xchg
stc
xchg
push
and
rolb
add
push
cmp
or
fcoml
rcr
xchg
adc
jo
aaa
cli
rol
ds
lcall
stc
lock
jl
adc
sub
inc
dec
sbb
pop
orl
xchg
pusha
pusha
gs
xchg
int3
jae
scas
and
xor
stc
std
hlt
imul
add
vunpcklps
mov
lods
sbb
xchg
or
jge
mov
pop
outsl
xchg
out
mull
jno
adc
xor
loope
mov
fsts
xor
sbb
jae
scas
mov
pusha
xor
sub
xor
and
mov
sub
icebp
and
arpl
dec
addr16
jecxz
cmpl
xor
gs
jl
push
sbb
push
inc
je
lods
mov
xchg
ss
push
bound
pop
inc
jno
imul
adc
mov
fldl
ss
xor
movsb
cltd
and
pop
mov
orl
lock
dec
jp
lea
pop
movsb
decb
gs
sub
adc
inc
icebp
loop
je
sbb
test
push
xor
out
mov
xchg
cmp
iret
xor
pop
repz
mov
xchg
push
jns
and
loop
jg
test
push
fwait
mov
sbb
xor
mov
xor
jecxz
sbb
mov
aas
sub
divl
scas
pop
and
dec
jmp
sub
mov
aam
jae
lods
mov
cmp
aaa
jo
and
test
test
scas
mov
or
popf
mov
stos
sbb
out
xchg
lret
dec
pop
inc
std
into
and
jno
and
stos
push
loop
stc
fnstcw
pusha
jae
dec
jno
add
mov
jne
fldenv
sbb
movsb
pop
arpl
jno
or
lock
icebp
lods
bound
inc
add
nop
push
shlb
pop
push
hlt
popa
js
xchg
jno
push
jecxz
push
sbb
lahf
ljmp
push
loope
inc
jno
sbb
inc
sub
int
clc
icebp
pop
lcall
stos
and
adc
or
jno
subb
adc
push
inc
jo
mov
adc
jb
pusha
mov
icebp
je
adc
sbb
pop
xor
push
pop
ds
aas
cmp
push
scas
notl
pop
test
leave
mov
mov
fists
cmp
sub
mov
sub
and
xchg
imul
mov
and
cltd
mov
rcrl
lods
mov
ret
jo
into
mov
inc
pop
aas
inc
jnp
frstor
mov
rcll
push
fs
ljmp
jae
jns
cwtl
imul
loope
add
fs
lock
xchg
add
pusha
pop
mov
or
fldenv
mov
data16
sub
adc
push
test
mov
inc
cmp
push
mov
enter
push
add
div
scas
inc
lahf
jno
or
or
push
stos
int
push
dec
mov
mov
nop
sti
push
add
dec
or
sti
into
subb
nop
aaa
mov
pushf
xchg
sub
and
dec
mov
dec
pop
cmc
movaps
inc
pop
and
xor
sti
dec
lods
call
cltd
nop
cli
pop
inc
sub
pusha
sahf
cmp
jno
aam
jo
and
mov
pop
ss
pop
push
aam
jno
rcrb
mov
frstor
ja
sbb
mov
and
inc
push
mov
dec
mov
xchg
aas
in
mov
or
ss
orb
add
pop
mov
xor
pop
and
xchg
pop
andnps
xor
push
lret
sub
jno
ret
mov
dec
addr16
lods
and
mov
out
push
adc
jp
lcallw
insb
inc
setle
inc
inc
mov
dec
and
aam
mov
movsl
bound
mov
ss
out
mov
push
pop
xchg
push
and
jns
cmp
pop
mov
ret
add
stc
dec
xchg
jo
jmp
iret
inc
enter
adc
sbb
insl
mov
imul
pop
mov
adc
jb
mov
or
jbe
pusha
mov
mov
or
mov
sbb
sub
cmp
fsubs
ret
stos
std
mov
out
sub
int3
cmp
mov
xlat
icebp
pop
hlt
mov
add
adc
rcr
add
jl
lea
jbe
sti
into
and
sbb
inc
fdivrl
lods
arpl
sub
mov
push
adc
push
cmpsl
or
xchg
fmuls
inc
xchg
mov
popa
aad
mov
mov
test
xchg
pop
cltd
aad
push
push
and
stc
sub
out
xchg
jno
dec
xor
aad
jo
and
mov
cmp
jmp
push
pusha
dec
fisttpl
sub
addl
jo
mov
cmpsb
loope
aas
mov
aaa
sti
movsb
lcall
inc
lods
push
dec
lods
cmp
mov
sub
xor
out
iret
pop
in
push
dec
push
scas
inc
add
push
sub
fs
popf
xchg
icebp
sub
jnp
cwtl
dec
mov
push
stc
mov
xor
outsl
rol
jle
mov
int3
mov
jno
pop
call
and
adc
and
cmpsb
notb
cld
addr16
imul
mov
push
and
leave
or
and
inc
nop
repz
lret
pop
pop
sbb
cltd
enter
test
in
pusha
jno
sti
jp
dec
lods
pop
xchg
sti
daa
jle
adc
scas
dec
jg
push
cltd
jns
mov
mov
jmp
iret
push
mov
into
cmp
jno
jno
xchg
cmp
xor
rorb
repz
andb
je
mov
aas
fwait
jo
dec
je
dec
mov
shrl
xchg
test
dec
xor
out
mov
fwait
lcall
insb
pushf
jne
inc
jo
sub
lea
sub
inc
jg
xor
mov
xor
fnsave
mov
test
mov
or
push
xchg
outsb
cld
or
inc
arpl
mov
jo
int
dec
cli
jno
and
test
and
pop
popa
shlb
insl
sub
imul
bound
sub
pusha
xchg
pop
jno
lcall
fadds
adcl
fldl
xor
data16
test
hlt
or
lret
testl
insl
xlat
sub
shufps
cmp
shll
inc
dec
popa
mov
inc
xchg
dec
mov
movsl
add
call
mov
jns
push
sub
adc
arpl
xchg
pop
cmp
aam
lahf
pop
sti
andl
shlb
pop
lods
aas
push
popa
jno
pop
stos
rorb
xor
sbb
lret
fsin
lahf
shl
mov
lods
sub
add
fs
sbb
andl
inc
dec
sbb
dec
xchg
repnz
mov
pop
stc
test
mov
pop
add
jo
mov
xlat
cmp
stc
mov
push
add
or
jno
push
cmp
or
mov
sbb
jl
cmpsb
mov
and
mov
pop
xchg
in
rclb
mov
call
popa
sbb
xlat
dec
dec
adcb
push
xor
les
xor
cmp
movsb
icebp
decb
fs
pop
push
lcall
fistl
pop
pop
icebp
inc
add
dec
data16
pushf
xchg
xchg
dec
scas
outsl
mov
sub
mov
test
ret
repz
fsubs
leave
inc
shll
cmp
dec
aad
test
out
push
outsb
jno
movsb
push
cli
cmpsl
std
jecxz
adc
push
loope
popa
xchg
jno
jle
mov
movsl
dec
scas
xchg
test
mov
insl
cwtl
jo
add
pop
fadds
ds
mov
js
leave
adc
jo
jnp
test
sti
shlb
sbb
pop
jns
pop
sub
xor
test
outsl
push
cmp
dec
stos
push
xchg
or
mov
adc
aas
mull
lret
inc
or
xchg
push
dec
mov
subl
das
movsl
nop
cmpsl
pushf
adc
inc
adc
push
mov
test
sbb
inc
push
push
push
test
add
scas
loopne
push
icebp
jbe
fnstcw
and
sti
cmp
pop
jo
stos
in
jb
xor
jmp
push
sar
jmp
arpl
push
xor
mov
xor
stc
cld
jecxz
in
adc
cwtl
or
cmpsb
xor
leave
pop
movsl
push
pop
ret
jmp
adc
jmp
js
adc
pop
xchg
stc
or
pusha
sub
and
rorl
cmp
push
sub
scas
xor
lea
es
test
xchg
fs
push
push
jno
jne
jg
push
arpl
and
or
jnp
imul
push
addr16
adc
in
sub
rclb
popa
push
gs
jmp
push
sub
jne
out
push
lods
cld
push
icebp
add
inc
or
mov
cmpsb
or
and
push
or
adc
out
int
cmp
and
xor
xor
pop
imul
add
imul
sub
inc
fs
and
loope
cmp
fcoml
lcall
out
fisubs
jbe
ds
pop
int3
fbstp
jae
ret
jno
imul
fisubrl
pop
xchg
push
mov
cmp
adc
push
fdivrl
cli
mov
mov
lret
shlb
mov
div
cwtl
icebp
outsl
pusha
cli
adc
sarl
cltd
push
pop
icebp
dec
cs
scas
test
vhsubps
cs
gs
push
fidivrl
arpl
mov
sub
cwtl
fcom
push
add
dec
add
inc
sbb
incb
xchg
enter
xchg
neg
in
loop
mov
insb
xor
fs
aaa
test
dec
mov
inc
jbe
addl
popa
aad
mov
out
sub
mov
arpl
repnz
int
add
shrb
jo
neg
setl
add
nop
pop
xlat
cmp
ret
and
das
xorb
inc
pop
pop
and
test
fsubs
in
jnp
sbb
cs
in
mov
icebp
out
cmc
mov
outsb
xchg
xchg
mov
jge
sbb
test
push
dec
push
adcl
inc
mov
dec
cmp
jle
add
push
mov
and
mov
ret
and
ror
sar
cli
xor
in
jns
cmc
or
xor
mov
int
rcll
ret
pusha
sub
add
dec
mov
fs
inc
dec
pop
jmp
jge
push
push
pop
pop
pop
push
pusha
popa
lods
sub
inc
stc
fadd
iret
mov
mov
push
xchg
add
je
test
jp
pusha
adc
cmp
mov
sub
push
mov
rorl
out
repz
mov
sbb
push
cmc
cli
ret
or
data16
xchg
sbb
aad
jo
pop
mov
sti
and
aaa
sub
or
pusha
mov
pop
adc
cmp
sarb
mov
dec
xorl
into
loopne
out
stos
adc
jno
decb
cmc
xor
cs
or
pop
cmpb
jae
jae
xchg
mov
popa
bound
jnp
scas
pop
inc
cmp
dec
mov
push
xchg
pop
sub
jp
mov
stos
stc
jo
les
xchg
cmpsb
cmp
pop
dec
cltd
jbe
mull
xorl
push
push
vandps
gs
sbb
addr16
push
ja
addr16
aam
or
repnz
or
dec
or
mov
lock
shl
fsts
add
push
jno
cld
push
sbb
pop
dec
sbb
pop
popf
rcll
xor
cld
iret
sbb
in
rorl
and
add
stc
call
cmp
aam
imul
pushf
xchg
jle
inc
popf
lahf
sbb
xchg
pusha
jno
mov
into
shrb
xor
stos
cwtl
jne
sbb
sbb
push
inc
push
jae
sub
clc
sbb
cmp
mov
data16
inc
sarb
pop
mov
lahf
testl
pop
sbbl
imul
repz
in
or
pop
icebp
es
call
jo
andl
out
xor
add
jae
aaa
fcompl
cltd
push
lods
js
call
mov
test
sbbb
mov
out
leave
dec
mulb
push
pop
stc
cld
sbb
jmp
movl
popa
dec
dec
aam
or
cltd
outsb
rcrl
rclb
cli
and
dec
pop
push
fiadds
lds
mov
jle
mov
mov
sub
xor
xor
cmp
sbb
je
idivb
rorb
test
ljmp
mov
adc
orb
fadds
dec
call
mov
sbb
add
mov
rol
xchg
outsl
jno
aas
dec
cmpsb
stc
cmp
sub
ljmp
sbb
loop
push
jne
inc
dec
jo
test
ss
arpl
sti
aaa
ljmp
pop
fldenv
mov
int3
mov
mov
ja
cli
sti
inc
andl
test
mov
cltd
adc
or
outsl
inc
gs
enter
lock
xchg
mov
sub
sbbb
test
loope
mov
sbb
jo
xor
push
sbb
rcrl
in
push
push
push
pop
inc
mov
enter
inc
shll
dec
jecxz
lock
lret
pop
das
xchg
xor
jo
test
int3
test
aam
sarl
into
pop
sbb
cmpsb
inc
pop
daa
mov
xchg
aam
scas
call
and
push
add
xchg
pop
sahf
pop
mov
movsb
xchg
aad
scas
push
adc
lea
jo
push
aam
ss
idivl
bound
xchg
out
std
pusha
pop
adc
les
mov
fs
out
push
mov
aam
push
mov
mov
adc
je
inc
icebp
and
in
adc
cmc
cmp
mov
fstp
dec
negl
fucomp
sti
cmc
mov
add
jo
jno
mov
and
cmpsl
cmp
push
xchg
rcrl
loop
or
mov
mov
sub
testb
or
fldenv
mov
xchg
leave
lods
sbb
icebp
out
cmp
sub
fs
idiv
or
outsb
ss
lods
jmp
int
fisttpll
movsl
test
sbb
inc
jle
pop
cltd
lea
sub
lcall
mov
xchg
mov
xor
leave
xor
daa
jo
mov
adc
or
and
inc
stc
lcall
insl
movsl
iret
sub
sbb
and
cmp
xchg
push
push
sbb
adc
lods
std
lods
push
sbb
push
imul
dec
jno
cmp
out
add
int3
movsb
pop
mov
in
cmc
leave
xor
into
adc
ret
cmc
push
icebp
lea
adc
test
pop
mov
enter
push
adc
adcl
push
or
dec
icebp
cmp
mov
mov
icebp
cltd
cmp
and
jge,pn
jecxz
mov
push
jecxz
pop
xchg
cs
dec
icebp
xchg
adc
flds
xlat
cvtps2pi
dec
pop
fldcw
repz
xchg
mov
inc
sbb
in
and
jmp
loopne
sar
mov
popl
enter
cmpsl
mov
cmp
paddb
aad
sbb
icebp
push
dec
nop
mov
and
adc
adc
inc
sbb
mov
fs
push
ret
setle
mov
add
mov
mov
fldenv
xchg
lea
push
addr16
fldcw
xchg
call
daa
push
push
setnp
add
and
cmpsb
lods
mov
xchg
das
adc
or
mov
jb
jno
dec
mov
pop
xor
jecxz
adc
lahf
call
jns
cmp
jne
imul
mov
ds
sti
jno
push
pop
aad
and
adc
incb
movsl
sbb
push
mov
mov
jo
ficoms
test
sub
insb
xor
pop
mov
sub
dec
out
add
jno
rcrb
fcoml
popa
and
cmc
popf
pop
xor
pop
pop
sub
mov
test
xchg
inc
fmuls
mov
icebp
jmp
aaa
popa
mov
jle
int
add
pusha
sbb
cmpsb
das
gs
sahf
xor
jno
pushf
xchg
das
stos
push
out
jg
popf
xor
xchg
adc
jnp
sbb
sub
adc
mov
adc
pusha
stos
inc
and
dec
rorl
sub
ret
jno
imul
sarb
neg
cmp
cmc
pop
leave
dec
cli
out
xchg
cwtl
mov
push
aam
add
inc
pop
movsb
and
pop
fistpll
cmp
lods
popa
mov
pusha
push
dec
fcmovnb
in
add
push
cld
popa
fs
int3
cmpsb
imul
and
sqrtps
jecxz
xchg
stos
pushf
mov
negl
dec
rclb
fcomps
xchg
mov
incl
mov
sbb
mov
imul
stos
addr16
push
aam
inc
xor
pop
mov
pusha
xor
and
std
push
cwtl
jno
jg
adc
cmp
sar
mov
pop
dec
xchg
push
mov
xor
fidivrs
lea
push
pop
imul
ret
movsl
mov
jno
push
clc
pusha
fwait
int
stc
iret
cwtl
adc
cltd
inc
jecxz
or
mov
cmp
pushf
pop
jno
jmp
jae
xor
outsb
inc
pusha
xchg
pop
jecxz
sub
inc
lods
cmp
mov
cmpsb
scas
ds
mov
loope
addr16
ret
mov
jo
xor
pop
adc
daa
decb
push
inc
sub
adc
iret
pop
popa
stos
stc
xchg
or
xlat
add
lcall
mov
xchg
nop
mov
pop
add
cltd
repnz
or
jle
imul
sub
cmc
mov
mov
xchg
push
mov
push
cmp
mov
dec
or
or
es
mov
test
int
fnstcw
pop
stos
push
sub
cmp
sbb
pusha
mov
scas
mull
aam
sbbl
push
stc
sub
cmp
add
stos
shrd
cmpb
sub
cmp
cmp
repz
push
pop
cmp
push
lods
pop
rcll
pop
jae
loop
arpl
sbb
adc
push
lret
cltd
inc
push
imul
and
inc
sarb
sub
int3
pop
adc
jo
popa
gs
dec
xchg
aas
or
adc
gs
mov
dec
push
and
addr16
xor
sbb
push
leave
repz
gs
or
push
or
in
pusha
jp
sub
fyl2x
je
cli
add
rclb
or
scas
push
pop
and
xchg
out
sub
mov
sbb
push
push
cmc
mov
pop
dec
fisttpll
popa
aad
repz
sub
cmc
icebp
inc
lock
jae
out
adc
push
outsb
mov
rcll
xchg
cmpsl
andb
mov
jle
jno
rcll
xchg
xchg
xlat
dec
pusha
add
dec
aad
shl
movsl
mov
pop
jg
jo
or
push
pop
jmp
xor
xor
or
data16
cld
sub
lret
and
mov
jl
inc
adc
sub
mov
pop
dec
sarl
inc
cltd
mov
lret
les
mov
sub
xor
mov
jbe
jae
xchg
push
push
test
mov
je
mov
xchg
jge
out
jae
leave
mov
add
call
in
ret
inc
pop
pop
neg
arpl
add
jne
int3
sbb
cmpsl
insb
adc
movl
loop
cmpl
inc
sbb
cwtl
jns
mov
add
lahf
push
mov
cmp
pop
test
xchg
fwait
sbb
cli
fimuls
sub
sti
jl
xor
shl
icebp
push
add
push
inc
jl
jno
decl
loop
pop
xchg
and
jg
fs
sub
testb
sub
dec
mov
xor
sbb
jno
rol
and
fs
add
adcl
bound
jle
mov
das
jb
ret
pop
pop
imul
jb
outsb
daa
stos
xchg
test
lahf
pmullw
dec
jno
stc
adc
icebp
sbb
xor
daa
leave
sub
dec
mov
sub
jno
sub
jmp
jl
repz
ljmp
insb
jns
cmp
xchg
imul
loope
mov
pop
aam
mov
sub
out
adc
pop
test
cwtl
fisubl
or
test
ret
xchg
push
add
fnsave
xor
add
je
push
aad
and
push
sbb
ja
and
or
or
dec
add
push
pop
popa
sub
adc
sub
sarb
push
sub
xor
lahf
adc
sysret
pop
sti
popa
call
pop
mov
stc
xchg
jbe
adc
xor
sub
out
pusha
movsb
sbb
mov
cltd
pusha
jne
mov
in
fbstp
data16
add
jno
jns
aad
add
pusha
fs
negl
push
out
fprem
jo
popa
pushf
lea
rorb
fs
pushf
rcrb
es
xor
popa
in
xchg
mov
dec
shll
sub
test
test
pop
xchg
test
arpl
sub
cmc
mov
lods
dec
mov
shll
into
popa
test
jae
cmp
inc
or
inc
roll
and
das
mov
std
scas
rcl
in
push
fdivs
push
das
jmp
fwait
inc
sbb
mov
mov
icebp
popa
push
xor
and
inc
dec
scas
lds
xchg
fadds
push
adc
fs
notb
add
stos
imulb
imul
mov
in
cld
mov
call
pop
push
mov
les
jg
test
ror
sti
loop
add
pushf
test
pop
int
inc
lldt
pop
pop
or
sti
push
sub
mov
and
mov
js
sbb
mov
jne
stc
out
mov
inc
push
outsb
or
popa
mov
sub
test
movb
or
and
outsb
insb
adc
outsl
jbe
je
call
sub
xchg
in
movsb
or
int3
adc
push
add
icebp
inc
cmp
dec
loope
enter
jo
or
push
cmp
fdivrs
push
mov
pop
xchg
insb
cwtl
jae
in
stc
mov
test
icebp
mov
in
sbbl
push
arpl
leave
je
movsb
popf
push
shrl
xchg
cmp
ds
clc
ret
dec
fs
fdivrl
push
jg
in
std
hlt
ret
flds
mov
jb
or
push
and
adc
sub
adc
add
xor
fcoms
lds
call
xchg
push
add
or
ja
xchg
test
pusha
flds
jg
addr16
add
dec
dec
js
cltd
mov
push
in
sbb
ja
fldcw
xor
mov
imul
icebp
rorl
inc
xchg
pop
movsb
imul
push
mov
fists
movsb
adc
adc
mov
stc
ficoml
xor
lret
inc
lock
mov
push
sahf
add
or
movsb
outsl
stos
sub
adc
inc
and
push
pusha
out
mov
ds
jge
fcoms
in
and
cmp
cli
or
fnclex
ret
aas
or
stos
cmpb
stos
adc
or
xor
bound
xor
dec
sub
arpl
inc
sub
aaa
nop
fs
sbb
repnz
insb
xor
cli
inc
push
insb
pushf
cltd
outsl
dec
sub
mov
aad
fstpl
inc
dec
and
loopne
sbb
add
push
and
jnp
add
inc
fmull
pop
outsl
add
mov
sub
mov
and
fisubs
xchg
push
inc
and
idiv
cmp
ret
cwtl
pop
sbb
cmp
mov
cmp
lcall
jo
inc
daa
mov
ret
ret
push
mov
jo
stc
push
inc
add
fs
arpl
and
not
syscall
data16
push
icebp
cmc
mov
testl
fld
lock
paddq
stos
cmp
xchg
cmp
jg
mov
push
dec
lcall
dec
dec
push
push
sbb
xchg
xchg
int
icebp
add
mull
jecxz
dec
insb
clc
push
jo
sti
aaa
es
pop
das
add
sub
dec
jo
pop
stos
add
std
jns
test
cmp
mov
xchg
or
mov
mov
push
sarb
scas
and
and
sbb
cmp
mov
push
mov
pop
ss
sbb
lret
mov
in
cli
fldcw
pushf
jmp
fldcw
sbb
push
and
test
cmp
dec
pop
inc
mov
mov
roll
jle
push
je
push
xor
cltd
inc
sub
mov
and
fmul
xchg
cmc
test
or
fisubrs
je
loope
pop
icebp
push
add
push
hlt
and
and
dec
rcll
and
shrb
mov
mov
popa
jmp
push
jnp
ror
adc
xor
std
xor
pop
pop
add
lea
daa
mov
cmp
ret
jo
aam
nop
mov
dec
fstps
push
aam
add
hlt
jnp
push
sub
pop
or
scas
stos
adc
xor
insb
test
cld
xor
clc
std
fs
xor
sbb
cld
popa
xchg
out
dec
enter
and
fistpl
and
cmc
push
pop
sbb
out
lods
or
jns
sbb
mov
xchg
shl
sbb
jnp
js
stc
fidivs
inc
cmc
jo
adcl
xchg
push
mov
and
fs
stc
mov
or
add
jmp
push
popf
mov
test
scas
sbb
lods
imul
sub
lods
push
xorl
and
mulb
add
lahf
dec
fs
xchg
jne
mov
scas
mov
jo
test
fdiv
cmc
pop
pop
push
jbe
xor
stos
cmpsl
mov
inc
mov
fisttps
outsl
adc
dec
lret
xor
and
adc
outsl
pop
inc
mulb
add
jecxz
dec
inc
xchg
cmp
push
stc
sar
cmp
sahf
cmp
xchg
sub
xlat
cmp
jno
mov
stc
push
and
or
push
xchg
rorl
cli
cwtl
mov
dec
iret
push
icebp
ja
mov
insl
push
push
sbb
jb
es
or
ret
imul
mov
idivl
adc
add
pusha
jnp,pt
imulb
arpl
or
xor
loopne
adc
xchg
sbb
sub
imul
mov
jno
push
dec
pop
sahf
vmread
mov
adc
call
out
das
pusha
xor
sub
mov
jno
mov
sbb
fldcw
push
add
cld
adc
mov
es
push
test
lods
fists
das
aas
xchg
dec
push
jb
stos
pop
sbb
sbb
mov
jnp
ja
scas
mov
ss
push
xchg
test
push
cltd
data16
inc
xor
mov
add
mov
ja
adc
push
lds
adc
and
mov
mov
or
out
lds
fldcw
shrb
jbe
mov
je
aad
rcrl
cmp
and
add
inc
pop
mov
sar
mov
mov
xchg
sbb
popa
cmc
xchg
xor
and
xor
jns
sti
pop
sub
dec
push
clc
into
jo
outsb
mov
and
ror
out
dec
pop
mov
dec
leave
cltd
mov
or
jnp
enter
pop
inc
orl
xchg
or
aas
out
fisubrl
addb
daa
pop
fdiv
cld
add
and
ljmp
push
jmp
jae
mov
jbe
cmpsl
mov
jg
imul
sbb
pop
mov
pop
dec
nop
sar
xchg
jae
sub
mov
or
add
fcomp
into
mov
adc
mov
mov
xchg
shll
sbb
adcb
fmul
aaa
insb
sub
jns
mov
cmpsb
sub
jbe
inc
or
mov
inc
mov
lcall
dec
test
leave
push
sub
mov
push
push
pop
xchg
jo
jne
xor
add
out
xchg
push
jl
das
sub
push
dec
sbbl
cmpsb
nop
sbb
fcomps
test
push
lds
sbb
mov
nop
jns
fs
xchg
fldl
add
xchg
pop
jno
xor
mov
push
nop
pop
lahf
mov
xchg
xor
xchg
xor
stos
push
jle
insl
mov
insl
nop
pop
jge
aas
scas
fstps
pop
in
or
sti
cmp
ret
and
call
daa
jno
cmpb
sub
enter
mov
fldenv
icebp
or
fisubl
das
in
pushf
push
fists
mov
jnp
outsl
cmp
xor
mov
sub
jmp
int3
push
stc
data16
cmp
in
push
adc
pop
xor
mov
fldenv
fstps
mov
mov
inc
mov
cltd
cs
test
scas
mov
jmp
xchg
add
sub
mov
in
faddl
cmp
fcoms
pop
jmp
jecxz
iret
scas
inc
sbb
jae
add
mov
dec
or
cwtl
adc
pop
mov
cmp
and
cmp
mov
insb
add
cwtl
lea
daa
mov
pop
lret
mov
rcrb
sub
std
cwtl
addr16
int3
inc
test
sub
mov
loopne
loope
inc
pusha
inc
imul
jno
outsb
mov
movsl
sti
push
fwait
leave
jb
packuswb
sub
bound
fs
or
push
loop
mov
fs
mov
fnstenv
mov
mov
mov
lret
loope
clc
popf
ss
dec
lcall
sti
outsl
pop
mov
es
cmp
mov
je
loope
cmp
inc
cmpl
int
mov
lea
push
sti
imul
add
sbb
pop
into
dec
sub
sub
mov
cmp
add
stc
and
pop
loopne
mov
movsb
pop
hlt
jecxz
jae
into
mov
gs
nop
xchg
or
adc
jae
das
adc
xchg
push
jl
inc
scas
xor
pop
pop
xor
sarl
inc
xchg
xchg
icebp
call
test
arpl
add
push
das
fld1
inc
rolb
iret
cltd
sub
xchg
fs
outsl
push
mov
pop
or
test
or
nop
pop
mov
jo
ja
cmc
sub
inc
arpl
sbb
mov
sub
dec
jnp
push
jecxz
sub
in
lods
jecxz
jp
je
sbb
call
and
mov
rcrl
lods
push
inc
pmaxsw
stos
push
jl
imul
pop
insb
test
scas
je
test
cmp
mov
insb
mov
cwtl
cmp
ljmp
stos
movsl
or
jmp
pcmpeqd
jo
fcomip
mov
jg
insb
fadd
inc
fwait
sbb
jbe
jp
push
cmp
xor
or
xor
mov
jnp
neg
mov
sub
fidivl
loope
popa
hlt
loopne
ret
dec
adc
repnz
sub
fcomps
xchg
lods
js
or
mov
pop
xor
fldln2
lret
nop
sub
icebp
push
push
adc
jo
andb
mov
mov
or
sub
int
jge
dec
arpl
jno
and
mov
inc
push
mov
inc
cmp
xchg
push
push
inc
inc
or
push
gs
inc
adc
notb
sub
push
fistpl
int
pop
push
cmp
lods
push
sub
cmp
xchg
cli
push
shld
rcll
push
add
int
and
cmp
sbb
hlt
push
push
out
xor
mov
or
mov
xchg
xor
rcrl
jae
inc
mov
push
dec
dec
xor
lods
xor
sbb
jns
arpl
inc
pusha
push
jno
mov
dec
dec
xchg
pop
lea
xchg
cmp
mov
dec
andnps
push
sbb
mov
sub
lahf
sbb
stos
xor
or
mov
test
mov
sub
std
cltd
mov
mov
cmp
mov
hlt
insb
push
and
sbb
push
in
xor
add
dec
lea
lods
xor
imul
dec
adc
ror
and
adc
dec
sbb
dec
sub
or
and
xor
push
push
cmp
sbb
push
leave
push
test
and
inc
dec
in
pop
dec
sbb
add
inc
or
rorl
and
aaa
icebp
pop
sub
and
inc
sbb
lock
push
jge
lds
mov
cmp
inc
in
mov
push
or
cmp
aam
cmp
add
pop
repz
icebp
pop
imul
xor
push
mov
fmuls
adc
jno
sbb
adc
popf
shl
push
lds
dec
pop
rcrl
jns
arpl
leave
sbb
ffree
and
xor
mov
xor
leave
mov
insl
leave
inc
sbb
push
std
inc
sbb
lds
leave
gs
sbb
or
push
adc
mov
aad
int
sbb
xor
mov
fcoml
sub
test
push
sub
dec
xchg
pop
pop
sbb
cmp
int
adc
addr16
icebp
in
cmpsl
push
nop
or
adc
dec
or
cli
add
jecxz
lods
loop
das
add
pop
icebp
mov
mov
or
cmpsl
test
call
xchg
dec
push
cmp
movsb
pusha
daa
mov
fiaddl
push
push
icebp
push
int
mov
fcomps
test
jb
xchg
stc
mov
mov
xchg
xor
inc
xchg
mov
aad
xor
sti
sbb
bound
add
mov
ja
push
sub
add
mull
cli
cli
ja
fyl2xp1
icebp
dec
cmp
or
sar
sbb
cmpsb
daa
js
cmpl
popf
rorl
push
inc
inc
xchg
mov
mov
shlb
push
insb
cmpsl
int3
inc
imul
xor
add
jmp
bound
cli
jo
lods
negl
jno
push
jae
sbb
shl
jmp
jg
xchg
loopne
push
add
mov
xor
xchg
fwait
insb
cs
testb
mov
xchg
addl
popa
pop
aad
or
pop
mov
jne
pop
adc
add
sub
dec
jmp
ret
icebp
aad
xor
xchg
xchg
test
pushf
nop
mov
xor
add
fimuls
int3
pop
mov
mov
flds
icebp
add
fsubl
jno
mov
je
xlat
in
stos
sub
icebp
adc
stos
daa
push
out
and
cmp
bound
or
pop
scas
cmpsb
push
fstpl
pushl
testl
outsb
lcall
test
adc
stc
mov
mov
cmp
fsubs
push
jnp
popa
jbe
mov
aad
cmp
sahf
sbb
xorl
dec
out
bound
xchg
xchg
sbb
pushf
jp
sub
jo
cmpsb
loopne
mov
addr16
xor
mov
pop
pushf
add
jecxz
mov
add
pop
mov
decb
cltd
pop
dec
scas
jae
mov
push
xchg
jp
xor
pop
rol
shlb
pop
add
ret
mov
jmp
aam
dec
jno
les
xchg
sub
sbb
push
sbb
sahf
push
in
push
adc
lock
lcall
fst
jo
inc
scas
sbb
adc
fdiv
mov
pop
xchg
or
enter
sub
push
rcll
adc
xor
or
add
push
xchg
pop
gs
popa
icebp
out
mov
sub
mov
inc
mov
outsb
arpl
sub
jo
sbb
xor
call
jo
insl
std
adc
xchg
adcb
adc
mov
jo
fcoms
cli
mov
lret
popa
cltd
add
jne
inc
push
pusha
fldl2e
jo
insl
ret
sub
sbb
push
sub
leave
stos
dec
cmpsb
mov
sub
pop
pop
sbb
cwtl
push
xor
stc
cmp
jno
outsb
aad
xchg
pop
inc
sbb
push
cmp
sub
iret
shld
mulb
xchg
cli
dec
enter
pop
mov
imul
push
add
popa
lods
inc
sub
xchg
cmpsb
push
sub
dec
jne
and
sahf
cli
inc
popf
mov
pop
addb
in
cmp
shlb
arpl
xchg
adc
popf
lds
pop
adc
icebp
rcl
xor
jae
xor
mul
adc
xchg
nop
jnp
push
inc
dec
push
ja
movsl
cmp
imul
insl
rcl
bound
cmp
push
arpl
xchg
xor
adcb
or
shl
ds
rorb
add
push
icebp
shl
cmp
pop
fisttps
adc
add
aas
push
or
xor
hlt
hlt
aad
xchg
xor
sbb
jbe
jecxz
sbb
mov
push
les
push
inc
push
shll
arpl
dec
pusha
mov
bnd
sub
in
repz
pop
imul
lahf
cltd
push
fdivrs
sbb
icebp
push
sbb
or
add
es
dec
jp
arpl
cmc
dec
lods
push
mov
adc
popf
inc
jmp
mov
test
jnp
jno
pop
movsl
xchg
mov
shlb
xchg
adc
inc
pusha
or
outsb
test
in
mov
push
popf
dec
ret
xor
sbb
pusha
xor
addl
pop
dec
popf
std
jae
lods
arpl
mov
xor
pop
decl
lods
adc
jne
dec
mov
jno
imul
sub
test
inc
sahf
xchg
sti
stos
into
add
mov
cmp
divl
ret
les
xchg
xor
push
test
loop
fdivl
in
je
leave
int3
icebp
int3
sub
shll
pop
cmp
bound
cmp
jo
push
mov
loope
and
fldenv
pop
movsl
leave
stos
add
mov
adc
push
push
fwait
push
fucomp
fs
enter
mov
pop
push
push
sahf
jbe
sti
pop
sbb
icebp
dec
xchg
lret
adc
mov
shlb
mov
sub
xor
cwtl
jo
out
in
pop
pop
sub
or
inc
and
or
push
stos
std
aad
add
stc
pop
cmp
cmp
pop
inc
pusha
dec
mov
push
jne
fildl
call
mov
leave
mov
mull
or
jns
cltd
mov
jo
jge
adc
sbb
das
add
jb
mov
jno
jb
pusha
stc
sahf
jge
rcll
out
mov
pop
test
lock
cmp
push
jmp
xchg
or
xor
dec
leave
xchg
fldt
jo
inc
imulb
mov
popa
arpl
xchg
sarl
inc
add
mov
inc
cmpl
sbb
pushf
stos
xor
mov
or
sub
shll
dec
xor
popf
or
fwait
lds
xor
sub
jo,pn
cli
insb
adc
addl
push
imul
inc
fstps
fildl
mov
cmp
push
adc
inc
jg
cs
dec
adc
cmp
stc
fldt
pop
mov
stos
mov
testl
je
cmp
mov
cwtl
lret
movsb
cwtl
in
jno
insb
lock
pop
sbb
loop
pop
pop
popa
icebp
pop
stos
jo
imull
sbb
jbe
jnp
jno
jmp
add
pop
cwtl
pop
pop
push
stos
cwtl
add
lcall
arpl
mov
add
nop
push
add
jo
xchg
cmpsb
or
das
bound
add
push
test
insb
xor
ret
insl
fisubl
rolb
nop
xrelease
pushf
and
adc
test
in
or
pushf
xchg
test
add
mov
dec
jno
dec
dec
fnstenv
xchg
mov
into
cmp
lods
in
test
aad
pusha
arpl
sbbl
xchg
push
sub
imul
clc
stc
push
jo
setp
add
add
cs
sub
cmpsl
addr16
stos
cmpsb
dec
loop
push
xorb
push
dec
xchg
in
dec
xor
add
pop
jmp
mov
cwtl
addr16
and
jp
jno
jb
inc
clc
push
push
test
mov
lods
adc
sub
sbb
mov
jo
and
cmp
sbb
push
jmp
inc
int
mov
and
pop
jnp
dec
cld
mov
xchg
dec
inc
pop
xor
xchg
flds
lahf
mov
sbb
insl
testl
js
push
arpl
dec
jbe
dec
ss
cwtl
popf
cmpsl
dec
iret
push
mov
mov
push
jmp
sbb
mov
xchg
jle
add
iret
cmc
push
jno
adc
leave
repz
int
xor
icebp
mov
vpunpcklwd
aam
shlb
pop
adc
xchg
int
dec
lods
inc
cltd
test
mov
fbstp
xlat
dec
xchg
lods
push
and
daa
jmp
push
push
sub
clc
dec
roll
adc
mov
cltd
xor
inc
cmp
leave
add
xchg
dec
inc
lods
cltd
and
ror
xchg
mov
test
cmc
xlat
leave
cmpsb
test
push
sub
mov
jle
or
das
inc
mov
mov
leave
lds
sbb
shll
mov
mov
xchg
sarl
int3
enter
inc
mov
lds
mov
and
pop
icebp
cltd
orl
mov
inc
cmp
les
cmp
sbb
int
lds
xor
cmp
dec
mov
add
adc
repz
or
lds
and
mov
add
jns
mov
dec
mov
dec
int
movsl
adc
orl
push
or
shrl
xor
mov
sbb
push
std
adc
fsubrl
sub
mov
mov
pop
push
xchg
lds
shrl
stos
lcall
fwait
stc
push
push
jno
stc
mov
icebp
mov
mov
nop
lret
or
in
sti
jmp
lock
xor
lock
popa
fcmove
out
jecxz
call
cli
push
and
jle
popa
or
dec
sti
insl
imul
xchg
mov
or
mov
or
xor
scas
pop
push
imul
jns
pushf
pop
mov
cmpb
sbb
fldcw
push
jmp
mov
into
scas
xchg
cmpsb
sub
jg
fstpt
xor
jne
ret
testl
dec
popa
dec
lea
push
movsb
addr16
jp
shlb
fiaddl
in
iret
aaa
stos
arpl
aaa
xchg
cmp
jns
xchg
test
add
aaa
shll
aaa
xlat
negb
cmp
sahf
je
xchg
repz
sti
jl
jp
pop
mov
jmp
scas
push
js
pop
sarb
mov
inc
jg
outsb
xlat
sub
ss
loop
mov
mov
fnstenv
xchg
scas
dec
jno
xchg
stc
scas
sub
xorl
sbb
sub
test
popf
andb
mov
or
ds
sub
mov
push
pop
loop
push
mov
or
xor
and
rcrl
xor
mov
and
inc
sbb
cmpsl
sub
cmp
fldt
cmp
or
js
mov
cmp
loopne
iret
pop
sub
add
jo
lods
std
xor
movsb
push
jno
pop
incl
aam
jne
pop
inc
xchg
shll
lods
mov
adc
push
xor
in
sbb
and
jno
add
push
icebp
fsubs
and
lahf
rcll
jns
mov
adc
add
or
pop
pop
sbb
jp
adc
sti
sahf
nop
test
dec
push
flds
pop
daa
ja
loope
sbb
ljmp
inc
rolb
mov
aad
push
add
or
mov
fdivs
jo
mov
ljmp
icebp
push
loopne
lret
mov
lahf
adc
jno
sub
daa
xor
dec
rolb
test
sbb
jge
std
cvtps2pd
xor
pop
mov
cltd
mov
sub
add
fisttpll
add
ret
cmc
movsl
sahf
adc
mov
sbb
imul
sbb
std
xchg
ljmp
xor
push
jmp
addr16
ret
mov
leave
mov
aas
shl
sub
pop
mov
add
push
sub
push
and
popf
jle
mov
movsl
adc
pop
call
mov
test
lcall
add
aas
adcb
push
jno
scas
stos
xor
or
mov
add
enter
mov
cli
test
jb
inc
lret
cmpsb
test
mov
cmp
adc
std
xor
add
jecxz
daa
xchg
push
cmp
xor
or
pop
xchg
xor
add
mov
cltd
jns
insb
cmp
mov
mov
push
adc
mov
push
sarl
xor
inc
aam
sahf
test
pop
cmp
cmp
add
sub
cmpsb
test
jno
or
and
cltd
cltd
aam
xchg
out
mov
cmp
mov
push
pop
in
or
vaddsubps
sbb
fwait
xor
leave
add
xchg
jns
mov
into
lcall
xor
aaa
fiaddl
sarb
jae
xor
pop
add
cmc
add
adc
inc
mov
dec
popf
nop
xchg
pop
imul
mov
xchg
push
xchg
insb
inc
pusha
dec
addr16
lahf
ja
add
adc
fs
push
sarb
clc
adc
sub
fwait
shll
das
sbb
std
push
xor
pop
bound
loopne
mov
popa
mov
imul
ret
xor
ljmp
jmp
fistps
xchg
jne
xor
fcomps
xor
scas
adc
js
sub
push
popa
xchg
xor
cmp
int
pusha
loop
cli
mov
lcall
jo
test
pop
cli
mov
notb
pop
stos
xchg
pop
xor
mov
xchg
pop
lds
ret
mov
inc
xchg
js
jmp
imul
faddl
xchg
pop
mov
pop
icebp
insb
or
jno
outsb
out
or
into
pop
jo
inc
ret
fwait
mov
shl
popf
test
adc
icebp
or
xchg
mov
push
fidivrl
pusha
fs
scas
and
repz
sti
hlt
pop
adc
cmc
aad
in
cwtl
push
adc
mov
ret
lock
mov
inc
aam
adc
and
dec
cld
out
xor
test
mov
movsb
cmpsl
gs
daa
jecxz
movsb
mov
imul
outsl
aaa
add
popw
mov
fsubrl
jmp
adc
cmp
jl
pop
sahf
mov
xchg
psllw
or
inc
jo
inc
cltd
jecxz
outsl
stos
xor
push
and
add
stc
inc
and
xchg
lods
idivb
mov
and
mov
sbb
add
and
pop
rcl
nop
in
fcmovnbe
lahf
mov
jge
xor
sarl
popa
movsb
xorl
idivl
and
mov
es
pop
and
mov
push
pushl
dec
fcoms
jmp
repnz
int3
cmp
sub
std
mov
lea
inc
addr16
and
rcrl
dec
arpl
sahf
cld
xchg
out
ja
outsb
rorb
mov
xchg
flds
push
pop
loop
icebp
cmp
jmp
test
lret
jg
push
stc
arpl
push
mov
pop
push
pop
scas
cmpsl
mov
adc
push
dec
cmp
repnz
stos
jl
loop
sbb
mov
out
or
cmp
xchg
outsb
jne
mov
or
xor
push
cmp
cmp
cmc
cmc
jno
fists
mov
repz
mov
fldl
mov
and
xor
hlt
pop
push
fcompl
inc
mov
int
pop
dec
icebp
sub
cs
into
pop
jmp
loopne
out
jo
bound
inc
and
cmp
test
mov
adcl
mov
pop
fldt
fwait
aas
pop
dec
fs
fs
add
dec
cld
in
push
and
out
push
jmp
sub
adc
mov
jmp
gs
das
mov
mov
mov
lods
movsl
inc
arpl
jnp
cmpsl
sub
inc
mov
adc
pop
mov
inc
cmc
jne
sub
jae
pop
mov
inc
push
lds
fs
sbb
lock
pop
jns
pushf
jle
aam
sub
jae
or
push
inc
cwtl
mov
insb
out
xor
sub
pusha
adc
jb
jl
bound
lret
leave
cld
dec
xchg
aam
cmp
in
int
xchg
les
mov
or
adc
xchg
and
adc
jl
add
adc
cmp
popa
push
sbb
addb
pop
scas
sbbb
sub
adc
adc
or
jl
inc
xor
dec
aam
pop
jns
popa
int3
cmpsb
inc
inc
les
outsl
xor
xchg
pop
dec
or
icebp
imul
jno
out
lds
lock
fidivs
mov
ja
adc
xor
adc
add
push
insl
mov
in
mov
xchg
pop
ja
xor
pop
fistps
jno
ja
cwtl
xor
push
aaa
sbb
dec
stc
jmp
pusha
enter
xor
sbb
test
adc
jbe
arpl
inc
jno
cltd
inc
icebp
jb
dec
inc
sbb
adc
sub
adc
cmp
dec
pusha
and
jns
sub
jnp
xor
leave
and
pop
dec
test
pop
adc
ja
leave
fadds
stc
icebp
push
leave
inc
mov
push
mov
rclb
cmp
pusha
popa
mov
in
push
jo
scas
mov
add
sbb
mov
ficomps
adc
dec
out
push
jo
addl
loop
xchg
push
jno
mov
add
insb
notl
sub
dec
xor
shlb
arpl
movlps
cmpsl
mov
scas
int
sahf
lret
arpl
dec
xchg
mov
push
push
fnstcw
push
jmp
dec
xchg
mov
cmp
pop
stos
jmp
loopne
xor
push
mov
jne
xor
js
pop
lret
cmp
dec
push
mov
adc
xchg
out
cltd
pop
push
popa
mov
mov
jp
xor
mov
mov
addr16
rol
out
adc
push
mov
push
test
iret
mov
push
xchg
mov
popf
push
test
inc
arpl
mov
insl
jns
xor
sbb
pop
stc
sub
pop
int3
out
push
dec
mov
imul
cmc
jne
imul
lods
mov
cmc
jns
cmpsl
les
cmp
cwtl
test
imul
mov
xchg
xor
insb
jecxz
fnstsw
jle
mov
fsub
dec
repz
cld
ffree
pop
clc
mov
lret
jmp
or
push
adc
push
push
rorl
loop
mov
push
push
cmp
test
aam
pop
movl
sub
outsb
add
test
dec
mov
pop
or
js
pop
sbb
cmp
jmp
lret
aaa
shl
pop
push
pop
out
es
inc
scas
sar
rcll
fildll
outsb
cltd
pop
push
mov
xchg
pop
mov
sbb
jo
xlat
mov
subb
push
adc
pop
scas
jcxz
scas
inc
les
xchg
fadds
cwtl
mov
cltd
cmp
fnstcw
popa
lcall
cmp
scas
mov
gs
int
into
xchg
cmc
popl
dec
mov
mov
mov
xorb
mov
lods
aam
push
xchg
enter
jno
mov
push
sbb
jg
adc
push
cmc
int3
mov
pusha
aam
andb
xchg
and
arpl
js
xchg
xchg
hlt
sbb
scas
push
jno
ss
fwait
mov
sbb
lds
lahf
insl
cli
inc
push
out
pushf
mov
push
enter
xchg
mul
or
scas
ljmp
push
xchg
sub
rorb
xchg
or
xchg
xlat
scas
enter
xor
shr
mov
pop
xchg
push
push
shll
ljmp
cltd
or
sbb
push
xchg
jne
push
sbb
stos
jno
mov
stos
cmp
xor
sub
or
imul
xor
gs
in
aad
add
jg
icebp
aaa
xor
sub
jge
icebp
shll
outsb
pop
das
arpl
jle
xchg
push
les
xchg
clc
mov
std
inc
sbb
lret
mov
sbb
mov
test
xchg
stos
rorl
and
add
lods
add
adc
stos
in
lcall
arpl
gs
push
icebp
rorl
or
mov
sbb
shr
xlat
lret
pop
dec
push
lcall
js
add
lds
in
cmc
pop
les
ja
dec
enter
int
ss
xor
dec
frstor
cld
or
dec
aaa
aad
adc
imul
leave
dec
test
cli
pushf
xchg
pop
bound
xchg
sbb
sub
xor
xchg
dec
mov
faddl
imul
cltd
push
mov
or
lock
dec
leave
in
adc
andb
neg
mov
dec
hlt
jmp
add
dec
add
mov
jb
adc
sbb
aad
push
popa
jo
movl
xor
mov
jg
cmp
icebp
or
pop
xor
jno
shr
lcall
adc
mov
pop
scas
jnp
imul
out
negl
add
xchg
fs
push
or
imul
cwtl
cltd
pop
adc
lea
sub
daa
mov
in
push
stc
or
inc
dec
xchg
add
mov
jo
std
stos
mov
mov
add
loopne
inc
add
mov
xor
xlat
lods
jno
fimull
inc
inc
outsl
sti
orb
and
mov
fidivs
jnp
pop
or
rol
addr16
sub
cmp
loope
scas
push
mov
cli
mov
popl
pop
ljmp
jae
mov
adc
push
jo
mov
stos
rol
cs
pop
addb
scas
sub
xor
adc
movsb
add
dec
dec
mov
jno
inc
fs
xlat
arpl
loop
xchg
pop
lods
cmp
pop
push
xchg
or
pop
cmp
xchg
ficoms
lahf
int
cwtl
xor
and
mov
cltd
rclb
push
jnp
dec
popf
and
imul
dec
int3
cmp
xor
aad
int
pop
dec
jmp
mov
cmpsb
xorl
push
hlt
jnp
xor
inc
ficompl
fnstenv
fistpl
popf
sbb
xchg
sub
dec
sub
sbbl
jne
pop
jg
sti
xchg
mov
adc
mov
test
das
aam
xchg
lock
cli
insl
pop
pushf
jbe
stos
fstpl
ret
mov
jbe
popf
clc
mov
fildl
adcb
mov
nop
push
es
fidivl
cmp
pop
leave
mov
arpl
inc
in
test
mov
leave
cltd
into
adc
movsl
sub
stos
pop
adc
add
mov
in
xchg
popa
popf
or
and
or
aaa
jno
lahf
or
nop
dec
cltd
xchg
aaa
mov
out
adcb
jno
imul
xchg
add
or
mov
mov
mov
xchg
xchg
cwtl
and
mov
subl
dec
xchg
or
mov
shl
mov
adc
je
cltd
mov
mov
mov
fsubrs
xchg
shlb
int
add
dec
and
bound
rclb
call
push
cmpsl
xor
cmp
pushl
cmp
out
pop
dec
sahf
ljmp
sub
pushf
pusha
loope
out
int
push
push
icebp
leave
fisttpll
inc
enter
dec
jle
in
pop
and
scas
push
push
mov
icebp
dec
aad
in
xchg
fmuls
arpl
jo
or
mov
or
sbb
negl
jo
sub
jecxz
or
pop
mov
push
push
mov
out
pop
add
xor
out
inc
js
lret
daa
clc
push
push
test
xchg
leave
stc
icebp
push
andb
add
sub
xor
enter
ja
icebp
dec
cmp
or
mov
adc
cmp
adc
inc
push
ret
iret
movsb
aas
push
cltd
sar
idiv
cmc
sti
push
sbb
inc
js
test
push
mov
faddp
add
sbb
mov
inc
add
gs
jno
cmp
jb
xor
jp
pop
xor
xlat
fiaddl
popa
inc
cwtl
addr16
lods
bound
pop
jo
or
sbb
sbb
inc
iret
das
pushf
mov
or
insl
pop
pop
int
push
cld
inc
xor
ret
lods
adc
movsb
scas
mov
jge
push
mov
outsb
push
in
add
add
sbb
shr
cmc
stos
sub
or
repnz
jbe
add
sub
mov
out
inc
xchg
xor
inc
cmp
arpl
leave
cmp
imul
pushf
call
mov
out
push
test
push
dec
fcoms
mov
pop
dec
mov
mov
movsl
or
mov
add
fwait
xchg
xchg
add
movsb
repz
leave
popf
dec
pop
dec
and
fs
jno
aas
mov
outsb
pop
mov
xor
sbb
scas
clc
movsl
ror
mov
cli
mov
cmp
inc
pop
adc
mov
mov
mov
stos
js
pop
sub
lcall
stc
adc
mov
sub
xchg
jge
dec
rclb
add
pop
pop
pop
loopne
xchg
xchg
sub
dec
jns
jb
mov
mov
cwtl
dec
outsl
stc
add
mov
push
mov
lods
pop
push
jo
xor
lock
xchg
les
mov
fs
or
dec
jo
ret
mov
pop
icebp
sub
arpl
cmpsl
aas
pop
adc
lods
icebp
xor
jp
int3
mov
stc
xor
fsts
fstpl
jle
adc
inc
jae
adc
fs
add
sub
or
lret
clc
aam
scas
xor
add
adc
jge
push
dec
mov
sub
ja
jnp
cmpl
push
nop
sub
cmpsb
push
shrb
out
xor
ret
jmp
push
hlt
sahf
lds
or
mov
lock
repz
dec
mov
push
pop
push
and
loop
xchg
aas
inc
jo
jmp
and
arpl
inc
inc
xchg
popa
rcr
out
xlat
adc
icebp
repz
addr16
sbb
ret
pop
scas
pop
fadds
test
fdivrs
sub
out
jbe
and
fcomp
shl
idivb
mov
outsb
add
aaa
push
popl
lea
rcrb
jmp
push
ss
mov
rolb
mov
push
pop
xchg
icebp
lret
jp
mov
or
fs
add
xor
or
into
mov
out
push
fcomps
pushf
nop
jmp
pop
inc
dec
dec
cmp
cltd
xchg
cmp
mov
adc
leave
mov
cmp
daa
xor
unpcklps
in
jge
xchg
shrl
sub
iret
mov
xor
ret
mov
cld
jno
mov
test
sub
xchg
dec
cmpsb
imul
pushf
pop
mov
cs
pop
rcl
xor
iret
sub
pop
mov
lods
xchg
sub
inc
sbb
cmp
jmp
std
adc
fnstsw
test
aas
inc
jecxz
aaa
je
jecxz
in
jno
and
jmp
rclb
test
mov
xor
lret
test
idivl
inc
jno
cmp
in
iret
shll
lods
dec
rclb
out
adc
fcomps
sub
cli
repz
icebp
dec
stc
test
aad
pop
or
pop
cmp
dec
int3
movsl
or
push
and
xchg
sbb
dec
mov
adc
mov
xorw
pop
rolb
mov
fldt
adc
xchg
test
movsb
and
push
jno
and
xor
pushf
call
xor
add
cmc
in
jmp
mov
push
shlb
push
add
fwait
cmpsb
testl
negw
outsb
out
jbe
dec
push
icebp
fisubrs
movl
mov
pop
cmc
inc
xor
add
aam
pushf
add
mov
sub
cld
inc
sub
jle
cmp
pop
adc
push
into
imul
mov
dec
dec
data16
mov
push
jae
lds
sub
dec
icebp
gs
mov
aaa
adc
sbb
movsl
push
pop
dec
jno
imul
les
fadd
adc
xchg
push
das
sbb
das
aaa
sub
jnp
sbb
xchg
test
xchg
sub
fstps
movsb
and
add
add
or
push
mov
dec
ret
insb
in
into
xchg
fimuls
sbb
flds
lahf
loopne
add
and
mov
call
xor
mov
and
les
fdivl
mov
jne
sti
pop
adc
add
cmp
jp
xchg
rcrl
dec
and
stc
cld
xor
mov
push
lea
insl
stc
or
dec
push
inc
rep
or
xor
inc
or
xchg
popa
xchg
sbb
sbb
aam
push
inc
test
sub
mov
jno
mov
lcall
xor
push
test
loop
adc
out
jmp
sbb
xchg
aad
pop
xchg
popa
xlat
adc
add
lea
shll
cli
stc
inc
outsl
mov
jno
lcall
inc
jge
xchg
jecxz
mov
arpl
dec
lahf
jns
pop
in
fmull
iret
inc
sbb
mov
mov
xor
ret
xor
leave
loope
cmp
inc
adcb
lds
nop
sbb
adc
insb
push
outsb
shll
lahf
test
add
insl
sub
mov
adc
jecxz
pop
and
jg
pop
enter
popa
push
inc
insb
push
jb
push
repnz
out
fwait
add
out
dec
mov
jo
jmp
inc
jle
lock
dec
shl
pop
lret
scas
das
lods
sbb
xchg
fimuls
and
imul
lds
sbbb
movsl
shll
rol
cmc
adc
stc
les
sbb
icebp
or
outsl
mov
jno
sbb
cs
jmp
push
sub
rclb
negl
inc
js
aad
test
sarl
cmc
xorb
popa
xor
xor
sbb
push
ret
sbb
jno
lret
xchg
leave
xor
sbb
js
subb
pop
jb
fs
aam
jecxz
sahf
stc
xorl
xchg
cltd
nop
or
sub
or
inc
or
jge
adc
rorl
jnp
cld
and
mov
push
ret
push
lahf
pop
ds
outsb
ja
push
cmp
jo
push
clc
jecxz
call
dec
push
out
stos
push
adc
icebp
pop
lock
mov
inc
xor
int3
inc
int3
cmpb
inc
sbb
jle
sub
out
cmp
arpl
add
ljmp
hlt
sarl
stc
dec
cltd
cwtl
fs
mov
sub
dec
sub
insl
sub
sbb
sbb
int
mov
add
pop
icebp
jmp
cld
out
push
mov
je
outsl
xor
pop
mov
out
shll
cmc
mov
xchg
jge
imul
ret
arpl
rcr
pop
add
shll
jb
mov
into
rolb
or
fsubrp
fistpll
les
test
mov
stos
or
fs
and
mov
pop
adc
sbb
jb
push
pop
adc
and
push
lds
and
jbe
dec
push
sub
sti
sti
or
push
test
xchg
jo
ret
fiadds
push
sub
call
rcll
fdivl
incl
mov
sbb
xchg
push
sub
stos
sbbb
jo
fisttpl
ljmp
sub
leave
cli
sub
sub
jbe
xor
xacquire
loope
jae
aam
pop
mov
repnz
enter
pop
in
outsl
std
cmp
inc
enter
shlb
add
jb
out
push
sbb
pushf
xor
inc
stc
inc
fstps
push
or
das
xchg
xchg
xchg
in
and
mov
or
scas
hlt
push
fdivl
pusha
loope
jno
xor
mov
add
inc
test
testl
xor
push
jno
inc
pop
xor
pop
or
dec
xor
aaa
shll
clc
ljmp
push
icebp
int
test
dec
adc
aas
sti
and
rorb
cmpsl
pop
mov
xor
leave
out
sysretw
cmp
add
or
mov
sub
pop
icebp
xchg
arpl
sbb
ja
xor
js
sub
sbb
adcl
sub
xchg
popf
arpl
in
sbb
lret
stc
xor
dec
xor
adcb
ret
xchg
outsb
std
sbb
pop
loopne
inc
scas
pop
iret
jno
or
dec
test
fldenv
pusha
roll
addr16
jg
adc
mov
pop
adc
or
push
xor
stos
and
dec
or
roll
push
dec
cltd
jg
cs
sti
dec
rcrb
stc
scas
sbb
mov
popa
imul
inc
out
push
dec
ror
into
mov
sub
ljmp
mov
inc
add
xor
flds
icebp
mov
sub
dec
jno
lahf
in
roll
or
pop
lock
sub
dec
pop
outsl
xchg
pusha
sub
test
popa
xchg
stc
add
mov
nop
nop
stc
clc
mov
push
negl
aaa
leave
popf
insb
jnp
mov
pop
push
push
xlat
jne
les
xor
cmpsl
adc
shrb
rcl
rol
push
flds
int3
pop
sub
lahf
jae
mov
add
push
and
hlt
inc
add
dec
notl
push
cmp
aad
jge
test
lret
addr16
arpl
or
jo
adc
jo
mov
jns
fcmovnu
or
daa
in
mov
xchg
xchg
add
dec
jo
stos
xor
movsl
add
inc
and
cmp
pusha
jb
mov
mov
mov
mov
sbb
imul
mov
mov
jns
pop
sbb
jae
sbb
fsubs
fisttpll
jp
ja
testl
adc
lahf
sub
jo
mov
jae
cld
lcall
call
insl
mov
arpl
sbb
jo
loope
jmp
outsl
xor
addr16
test
rolb
add
inc
fmull
fistps
push
or
adc
jno
sbb
out
push
cmp
xorb
sti
ret
pop
pushf
and
cli
xchg
xchg
mov
loope
outsb
push
dec
jge
jo
jg
loopne
jno
arpl
mov
fwait
enter
push
add
pushf
xchg
adc
insl
cwtl
cmp
xchg
jnp
and
pop
adc
cmpsl
mov
jo
das
jecxz
xchg
mov
push
jge
xchg
cmpsl
or
jl
xchg
mov
pop
sub
jle
xor
sbb
sub
mov
les
stos
mov
push
mov
lahf
push
fwait
add
outsl
cmp
mov
sbb
pop
xchg
leave
lods
ror
adc
bound
loopne
lret
cmp
mov
mov
inc
and
out
out
je
push
mov
adc
xchg
sbb
and
mov
dec
inc
jecxz
aaa
dec
fstps
xchg
pushf
test
int3
mov
sbb
fcmovu
fstpl
push
mov
or
and
ret
sub
jo
es
cmc
popa
out
mov
ja
push
movsb
inc
xor
movsl
cmp
cmc
cmp
xchg
mov
cmpsl
test
aas
fwait
scas
xchg
mov
or
ret
xchg
pop
icebp
jmp
jb
mov
fwait
cmpsl
push
icebp
sti
push
fildl
inc
sarb
fisubl
inc
shlb
xchg
fidivrs
mov
xor
pop
cltd
cwtl
xchg
cmp
or
shll
fstl
push
into
pop
pop
lcall
enter
jg
movsb
jae
push
mov
call
mov
loopne
inc
adc
mov
test
mov
sub
js
ja
call
xor
bound
sbb
arpl
adc
cmpsb
pop
stos
cmpsb
sub
icebp
clc
in
jg
xchg
cli
lods
pop
test
jmp
jno
jae
out
add
xlat
fmuls
sub
lahf
addr16
int
sub
sahf
or
adc
xor
push
in
cmp
dec
pop
cltd
xchg
mov
scas
imul
pop
xchg
jae
mov
push
xorb
xor
mov
lods
fs
adc
xchg
push
xor
xor
push
aaa
jbe
add
jne
jb
xor
dec
ret
inc
rorl
mov
sti
hlt
mov
daa
push
and
sbb
and
dec
mov
xor
push
sbb
out
xchg
fs
pop
mov
cmpsb
jle
xchg
cmp
push
mov
imul
xor
or
mov
scas
dec
ret
pop
cwtl
mov
and
pop
or
icebp
inc
cmp
nop
shr
add
cmp
addr16
movsb
sub
push
jo
testl
push
and
scas
cld
sahf
and
adc
xor
adc
inc
jmp
daa
lods
push
xchg
dec
fsubrs
lods
pop
sbb
dec
pop
shlb
stos
clc
mov
cwtl
test
push
cmc
mov
xchg
icebp
in
imul
mov
jns
aad
mov
push
pop
inc
jae
add
jecxz
mov
or
or
mov
pop
mov
adc
call
push
dec
shlb
and
orl
mov
nop
out
pop
popf
adc
stc
scas
inc
dec
pop
sbb
es
adc
push
push
inc
lahf
pop
rep
jl
js
mov
add
int
lahf
jno
ja
fnstenv
sub
pop
insl
gs
dec
cwtl
push
rcrl
dec
fstpl
aad
xchg
push
xlat
icebp
jo
inc
sbbb
sbb
and
jne
stc
lds
ljmp
push
sub
pop
fstps
mov
loope
and
mov
and
push
ds
jg
pop
rorb
sub
mov
and
xor
es
fs
test
or
and
loope
mov
fdivl
mov
les
popa
cmp
sbb
stos
or
ja
test
fcompl
push
lcall
clc
andb
shrl
or
inc
cwtl
push
xchg
std
adc
xor
push
jmp
aam
mov
pop
or
addr16
fs
mov
cltd
sbb
fisttps
repz
filds
stc
shll
das
outsl
loop
orl
icebp
and
jg
sbb
mov
sub
jmp
jno
sub
adc
xchg
inc
or
sub
push
mov
ja
add
fldenv
in
incb
mov
dec
cmp
gs
push
movsb
test
movsb
gs
fadd
pop
pop
add
sub
cli
sub
in
lahf
pop
push
addl
mov
push
ss
xchg
dec
pop
xchg
inc
insb
loope
movsl
aas
add
pusha
xor
push
aas
popf
push
or
bound
cmp
outsb
adc
mov
lcall
adc
insb
movsb
push
aam
xorl
nop
mov
inc
mov
mov
sub
daa
pop
add
sub
fistpll
lods
adc
add
imul
sub
out
insl
push
insl
xor
and
in
jo
mov
pop
lods
pop
cmp
dec
pop
cwtl
jo
lock
popa
out
mov
inc
sahf
mov
shrb
pusha
ret
cwtl
add
adc
stc
das
pop
jo
fldt
cmp
cmpsb
mov
fadds
or
jo
mov
inc
fldl
mov
aaa
cmp
dec
cmp
aaa
hlt
push
setno
popf
and
ss
leave
fwait
mov
inc
add
add
sub
shrl
incl
inc
cmp
dec
sar
loope
mov
pcmpgtb
xchg
mov
xchg
and
dec
xchg
pop
jno
mov
pop
pop
xchg
sbb
xor
push
jno
inc
mov
dec
test
stc
popa
fadds
jno
or
xchg
xchg
or
insb
or
daa
out
cmp
xchg
stos
push
or
and
stos
fidivs
mov
or
jge
enter
push
insb
sbb
adcb
nop
sub
sbb
pop
icebp
iret
inc
in
inc
out
adc
or
in
mov
dec
mov
push
aaa
cmp
imul
or
pop
mov
mov
xor
rorl
cmp
add
fcmovne
pop
dec
scas
outsb
jbe
mov
and
xchg
push
pusha
popa
mov
icebp
pop
pusha
pop
loopne
sub
xchg
adc
mov
push
fdivrs
dec
sbb
aas
sub
inc
stos
and
jo
js
mov
faddl
lods
mov
lods
sbb
mov
xor
std
stc
cltd
inc
jno
call
icebp
inc
cmp
test
cmp
das
popa
mov
or
aad
stc
push
adc
adc
orb
adc
jle
call
or
pushf
xchg
sbb
mov
xchg
and
loopne
popa
inc
jno
scas
enter
pop
jo
sbb
push
cli
ffree
mov
out
push
icebp
add
out
aad
lahf
jbe
aaa
and
test
sahf
cwtd
sub
es
bound
pop
pop
movsb
add
idiv
adc
dec
hlt
jge
adc
mov
sbb
aam
test
dec
mov
sub
sbb
cmp
das
xor
ret
cwtl
mov
inc
imul
fwait
cltd
dec
mov
cli
sub
lret
enter
movsl
inc
adc
cli
daa
call
push
sbb
xchg
xor
pop
push
xchg
sbb
adc
into
pop
cmpsb
dec
push
stc
xor
jg
les
dec
xchg
outsl
decl
leave
cmp
push
xchg
rorl
mov
push
mov
xchg
mov
and
lods
mov
push
int3
test
xor
scas
shrl
popa
pop
xchg
int3
push
cmp
dec
xlat
sub
incb
icebp
and
jns
jo
insb
imulb
xor
loope
stc
or
stos
and
jo
push
push
fucomip
pop
sub
add
mov
mov
es
pop
inc
cmp
negb
or
push
insl
xor
ss
sahf
mov
andb
sbb
cmp
icebp
or
andl
lea
sbb
mov
pop
cld
pop
lods
or
mov
jno
xchg
fmull
std
or
fstps
push
pop
call
push
cmp
lret
pop
ficompl
insl
jle
sbb
mov
xlat
jae
jo
add
rolb
push
cltd
gs
xchg
fadds
rcll
jno
sub
sbb
push
psrlw
push
repz
xchg
sahf
movsl
loopne
or
and
clc
loop
sub
mov
sub
add
push
push
sub
push
mov
gs
add
fstp
and
arpl
xchg
and
jp
imul
cltd
push
mov
rcrl
pop
js
pop
cltd
mov
daa
test
enter
add
xchg
xor
push
test
dec
xor
xor
into
fcomps
mov
xchg
xchg
pop
repnz
mov
sub
mov
ja
cmc
fsubs
or
addr16
inc
jno
test
repz
cltd
popa
push
dec
iret
arpl
rcll
or
icebp
scas
mov
dec
jo
bound
pop
add
shrl
push
sahf
pop
mov
pop
cwtl
jp
ja
push
mov
jno
aad
and
xor
in
mov
movsl
scas
dec
cli
mov
lcall
das
push
jge
pop
or
pop
icebp
inc
sbb
cmp
es
add
dec
ja
pop
icebp
nop
cli
add
test
les
inc
js
xchg
push
imul
movsl
cmp
xlat
xor
jno
jno
clc
mov
ja
push
imulb
inc
stos
adc
dec
ret
inc
rcr
cmc
mov
clc
shlb
cmpsl
or
xchg
jo
test
inc
dec
enter
cld
stc
xchg
nop
sub
sub
addr16
cltd
aas
sbb
mov
and
adc
movsb
mov
sbb
jb
imul
mov
fbstp
xorb
jg
hlt
cmc
dec
add
mov
sahf
clc
pop
mov
fmull
and
adc
push
pop
mov
jbe
xlat
mov
xor
mov
arpl
xor
push
mov
pushl
push
jg
jp
cmpsl
sti
pop
sbb
pop
sub
std
dec
cli
rcrb
lods
aam
pushf
andl
push
adc
in
push
aad
sbb
pop
adc
stos
mov
mov
mov
dec
xor
and
scas
ljmp
push
mov
adc
push
aad
lret
sbb
adc
in
sub
mov
into
cmp
loope
add
outsb
mov
pop
cwtl
jo
mov
xchg
fs
jno
or
push
fldt
xor
jbe
cltd
ror
arpl
popa
icebp
mov
ja
push
test
lahf
cmc
imul
out
pop
cmp
sub
sub
mov
cmpsl
xlat
push
pop
push
pop
xchg
sub
mov
jo
shr
adc
add
sarb
lcall
or
test
cmp
mov
cmp
sbb
pop
inc
into
or
mov
cld
out
pop
mov
stos
into
scas
popa
out
dec
add
or
aam
add
das
leave
in
enter
jo
push
mov
outsb
cli
aaa
pop
push
fadd
push
pmovmskb
add
add
sarb
xchg
xchg
xchg
pop
out
fdivl
sub
fs
stc
icebp
sub
arpl
pop
fiaddl
push
jo
fcmovne
lcall
bound
rcl
ja
ret
in
out
jp
adc
decl
mov
add
test
in
jno
xchg
dec
and
sub
or
sub
mov
pop
sbb
mov
cmp
imul
mov
popa
das
push
fsubs
insl
ficomps
push
and
out
jns
xchg
inc
jo
loopne
nop
pop
xor
push
xlat
js
aam
scas
cmp
add
dec
gs
push
xor
out
addl
mov
arpl
cmp
push
mov
mov
andb
hlt
int3
add
sub
adc
ret
test
addb
das
adc
leave
lcall
cmp
loopne
fiadds
pop
push
test
lock
mov
xchg
xor
push
push
inc
xor
mov
and
mov
and
push
fnstenv
mov
xor
fisttps
xchg
insb
and
mov
push
cli
push
push
shrb
ja
dec
pop
fs
xor
outsl
pop
addr16
add
fcomps
jbe
xor
dec
push
mov
sub
lcall
int3
jecxz
mov
test
lret
mov
cld
sub
push
cltd
pop
cmc
in
or
test
into
sub
lods
xlat
into
mov
xchg
pop
dec
mov
inc
push
cmp
mov
das
adc
mov
sub
ds
leave
push
movsb
lea
dec
divb
inc
xchg
sbb
jne
mov
inc
adc
mov
fmull
lret
xlat
xchg
js
adc
fistl
and
xchg
add
cli
rorl
nop
into
jns
mov
fwait
ss
js
ret
aaa
orl
popa
aad
imul
or
xchg
jno
roll
jmp
mov
cli
mov
dec
jecxz
inc
arpl
sbb
xchg
fidivl
cltd
test
sbb
cli
lock
sub
vmread
xor
cmp
mov
add
push
jae
mov
sbb
je
pop
js
fidivl
xlat
pop
js
add
ds
movsb
mov
xor
jno
xchg
loop
adcb
fildl
inc
push
mov
inc
xor
test
and
jne
xchg
std
xor
cmp
setae
push
push
pusha
aad
leave
mov
mov
inc
pop
loop
pop
jmp
xchg
inc
icebp
pop
mov
popf
mov
sbb
shl
icebp
push
in
loope
cs
in
lock
call
push
aad
jmp
inc
mov
and
fsubrl
pop
stos
ds
fstps
ja
jecxz
sub
inc
jp
xor
inc
xor
mov
sub
add
bound
mov
data16
rorb
cli
enter
rol
add
xchg
jo
jle
es
sub
add
and
sti
fldenv
js
cmp
lcall
fs
jno
fwait
mov
cmpsb
adcl
pop
out
loopnew
or
insl
or
fsubs
dec
popf
lods
pop
inc
mov
or
cmp
popa
cmp
or
mov
shrl
loop
adc
sahf
add
inc
sub
shl
cmp
xchg
pop
adc
cltd
test
pushf
inc
fcomp
insb
ja
ljmp
std
dec
xchg
sub
add
push
pop
jo
sbb
inc
orb
cmp
imul
xor
or
pop
rcl
fldenv
mov
and
xor
sahf
push
icebp
fdivrp
cli
dec
pop
enter
push
ja
xchg
cmp
cli
sbb
addr16
cmp
lret
daa
push
out
mov
addl
jno
add
subb
movsb
adc
adc
dec
sti
neg
mov
mov
pop
out
std
int3
pop
dec
imul
add
out
mov
cmp
test
ret
out
inc
or
ja
push
es
and
xchg
fcmovbe
cmp
and
adc
xlat
push
xchg
add
mov
mov
aad
jle
call
test
lahf
in
mov
stc
popa
push
shl
inc
pop
push
mov
push
lods
xchg
add
sbb
sub
das
inc
xor
adc
sub
mov
mov
jecxz
sbb
mov
test
add
pop
pop
cltd
shll
jno
xchg
out
stos
icebp
stc
xchg
push
test
cmp
scas
addr16
xor
pop
jns
push
or
pop
shld
jge
outsl
push
xor
in
scas
cmp
jo
jp
sub
dec
xchg
xor
sub
popa
dec
pop
push
imul
mov
add
xchg
frstor
mov
inc
push
inc
aam
inc
jns
jo
mov
popa
jmp
dec
xlat
mov
addr16
stc
cmovae
pop
ja
popa
hlt
stc
xor
jo
lret
nop
xor
decb
popa
xor
cld
loop
inc
mov
jno
popf
add
decl
ljmp
arpl
pop
sub
mov
std
out
inc
or
pop
xor
or
add
mov
xor
pusha
sub
pop
sarb
cli
pop
xchg
aas
sbb
sub
adc
in
adc
jecxz
sub
decl
mov
xchg
sub
rcr
fldcw
pushf
mov
cmc
imull
ljmp
mov
movsb
dec
inc
sbb
fistl
push
lcall
mov
mov
mov
jno
pop
mov
and
pop
rcrb
or
jle
and
xor
mov
mov
std
inc
imul
idivb
cmpsb
or
xchg
xor
int3
in
pusha
jne
pop
pop
jno
mov
xor
or
xchg
in
xor
inc
outsl
jne
mov
or
push
mov
add
cltd
pop
pop
pop
cwtl
icebp
int
xchg
adc
loop
inc
and
scas
mov
or
mov
push
aas
inc
xor
mov
mov
pop
lcall
sub
and
sbb
or
pop
jo
lcall
mov
mov
iret
inc
push
mov
cs
xchg
pop
sbb
hlt
cmp
jno
fwait
and
fnstcw
mov
xchg
and
ja
in
sub
inc
mov
into
scas
pop
pop
iret
xchg
pop
dec
outsl
popa
cmp
arpl
loopne
xchg
mov
call
push
pusha
ret
lret
negl
arpl
or
inc
pop
icebp
xor
pop
pop
call
jae
je
popa
and
imul
test
cmpsl
dec
stc
cmp
aaa
mov
cltd
or
dec
push
push
sbb
xor
iret
jnp
repz
xor
outsl
dec
popf
or
mov
fisubl
jno
adc
pop
push
scas
aas
out
out
je
xor
outsl
push
push
ja
pop
cmovne
xor
inc
sub
clc
icebp
dec
das
ljmp
add
les
mov
sti
repz
aas
mov
cmp
add
pusha
or
andl
sbb
push
mov
mov
jno
out
mov
add
jae
xchg
imul
jl
stc
mov
scas
and
push
xchg
add
pop
sub
inc
jmp
pop
inc
popf
arpl
loop
xchg
dec
sarl
icebp
xchg
stos
xor
cmpl
xchg
fidivs
cmc
orl
fs
mov
outsl
aaa
pop
test
xchg
or
sbb
test
aam
adc
pop
icebp
and
sub
cmp
mov
fwait
sub
mov
add
inc
dec
inc
aam
adc
stos
xchg
mov
mov
gs
icebp
dec
mov
sbb
pop
aad
imul
add
jb
stc
or
pop
mov
sub
ret
fnstsw
sbb
inc
jb
xor
xchg
adc
lret
hlt
mov
sub
dec
mov
adcl
bound
movsl
xchg
lods
out
or
lods
adc
dec
outsl
scas
mov
and
outsl
or
fcoms
sbb
scas
xor
mov
xchg
ret
or
xor
insl
mov
xchg
inc
and
cmp
mov
sbb
stc
inc
jo
adc
popa
sbb
sbb
push
add
scas
insb
mov
xchg
pop
mov
add
push
pop
adc
jo
fucom
mov
stc
jno
jo
mov
out
call
sbb
dec
jo
iret
aaa
in
jge
push
addr16
pop
push
arpl
stc
inc
sub
int3
push
inc
pushf
jne
scas
loopne
insb
sub
xor
outsb
xchg
call
pop
jnp
xchg
dec
outsl
bswap
mov
insl
ret
nop
add
inc
rolb
cmc
ficoms
ds
dec
test
loop
jnp
shlb
lock
pop
cmpsw
pop
xchg
xor
lea
pop
mov
icebp
mov
iret
aas
in
lods
imul
loopne
push
jmp
roll
push
or
sar
mov
xor
lods
addb
jge
idivl
xor
loopne
fsts
icebp
jmp
mov
mov
repz
adc
xor
adc
and
stc
sbb
jo
add
jno
mov
mov
fcompl
jle
lret
pop
addr16
in
test
inc
jo
cltd
xchg
sub
or
addr16
fstps
scas
push
fs
xor
test
mov
mov
inc
add
push
mov
fsub
jl
cmp
mov
sub
or
jo
mov
jo
or
add
mov
leave
or
sub
xorb
inc
push
push
test
int3
add
cwtl
bound
imul
mov
cmp
sub
xchg
inc
xor
or
movsb
cwtl
punpcklwd
adcb
gs
div
dec
dec
jp
cmp
dec
pushf
test
out
fdivrl
and
push
icebp
aas
mov
mulb
into
push
cmp
dec
clc
sar
dec
shl
into
cmpsb
inc
jb
mov
push
cli
icebp
add
cld
orb
add
push
adc
mov
lahf
hlt
sbb
fdivs
jle
lret
inc
test
dec
mov
dec
sti
push
fbld
sbb
inc
out
inc
test
enter
jmp
les
pop
jne
bound
fldenvs
inc
inc
xchg
stc
inc
icebp
push
pushl
inc
or
dec
jno
mov
pushf
mov
fldenv
test
adc
cli
jbe
stc
out
testl
push
xor
push
mov
sub
shrb
leave
xchg
or
clc
nop
in
push
push
sub
sbb
je
inc
ret
or
lret
ja
lea
rcll
setle
inc
sbb
jns
imul
in
xchg
jo
or
jmp
inc
dec
xor
dec
jo
es
stos
mov
dec
mov
lcall
cwtl
xchg
loop
ret
arpl
mov
sub
insl
outsb
lcall
jp
mov
mov
fstps
sbb
into
filds
andl
jno
mov
cwtl
rcrb
and
repz
bound
punpcklwd
add
loopne
push
jno
dec
enter
lods
push
nop
jge
sub
dec
mov
push
mov
jp
jno
nop
int3
add
push
call
inc
cs
aas
aas
pop
hlt
push
inc
inc
dec
stos
enter
cmp
push
fnsave
sbb
aam
daa
in
stc
jl
xor
dec
pop
jmp
shrl
xchg
push
icebp
mov
fistpl
xor
popa
shrl
mov
sub
mov
xchg
repz
test
aad
aad
scas
adc
stc
iret
movsl
sti
inc
xlat
in
or
sti
lret
xor
fcomip
or
cmpsb
cli
pop
and
insb
cld
shrl
pushf
adcl
jecxz
js
xchg
or
imul
adc
mov
push
sub
sbb
mov
shlb
xchg
cltd
ljmp
cwtl
jmp
mov
push
notl
cltd
or
sub
sbb
and
test
dec
cmp
lret
dec
push
push
cmp
cmp
cmp
mov
push
jmp
add
push
xchg
add
out
mov
dec
add
and
sbb
pop
adc
inc
mov
push
dec
inc
sbb
int
mov
in
sub
push
rorl
and
sub
sub
test
jns
mov
cmp
jnp
inc
dec
mov
cmp
inc
cmp
sbb
adc
int
adc
hlt
sbb
pop
lods
pop
cltd
sbb
inc
imul
mov
xor
leave
fnstenv
adc
loope
jmp
jns
pop
cmp
xchg
adc
jge
adc
pop
flds
inc
sbb
xchg
mov
cmp
mov
cmpsl
int
lds
pop
sub
xor
push
dec
dec
adc
inc
pop
fld
jno
add
stc
popa
sbb
xchg
pop
inc
stc
stc
stc
cmp
lcall
pop
xor
adc
dec
fnstcw
push
xlat
icebp
lret
dec
in
cmp
pop
cmp
adc
std
cmp
enter
enter
xor
aad
aad
aad
lods
pop
fnstenv
leave
xchg
adc
leave
push
adc
leave
popa
sbb
xorl
adc
xlat
and
pop
push
xor
cmp
and
add
xor
mov
xchg
push
cmp
popa
leave
vpaddsw
dec
xor
cmc
add
jne
std
addb
jno
sub
adc
push
push
and
fnstenv
lods
mov
mov
clc
and
cmp
shrb
insl
xlat
cmp
repz
test
idivl
sub
inc
fidivrl
inc
jo
xlat
pop
xchg
sbb
xchg
mov
pusha
cmp
aas
lods
push
xchg
mov
daa
rorl
push
scas
lcall
rcll
inc
jo
mov
cmp
lds
fs
and
repnz
icebp
enter
jno
out
sub
sti
push
pop
daa
mov
push
xchg
jl
test
add
mov
xlat
inc
jno
add
fs
popa
jl
mov
repnz
stc
stc
jbe
arpl
cmp
pop
pushl
pop
pop
dec
cltd
fldcw
dec
mov
mov
jne
xchg
insl
jg
xchg
les
inc
jmp
adc
shlb
pop
push
mov
ljmp
jne
imul
incb
push
jno
or
mov
and
cltd
insl
push
rorl
xchg
in
adc
out
imul
pop
mov
arpl
jno
cli
scas
rol
or
xor
push
push
jno
aaa
aaa
cmp
jg
jge
or
xchg
xchg
enter
jno
mov
adc
push
ja
fldenv
and
mov
cltd
push
fs
int3
push
pusha
jo
mov
inc
dec
pop
xchg
ret
mov
pop
add
lock
insl
mov
push
jo
aam
and
iret
mov
xor
cmpsl
ds
dec
xchg
xchg
mov
push
sub
or
pop
xorb
lods
mov
add
idiv
inc
jbe
loopne
lods
dec
jno
sbb
or
or
and
ljmp
inc
push
icebp
iret
pop
add
or
cmp
sub
inc
cli
sub
sbb
mov
xor
in
adc
jo
adc
das
sub
sti
sub
mov
test
mov
or
aad
mov
stos
push
pop
mov
sbb
push
pusha
daa
push
stc
pop
mov
jmp
int
xorl
cld
mov
jbe
inc
add
adc
movsb
cmp
ret
loop
cmp
mov
xor
mov
sub
in
add
xchg
add
cmpsb
jns
pop
in
push
adc
pop
sbb
rcrl
pop
das
and
call
sub
cltd
test
xchg
mov
push
rcrl
aam
adc
jbe
cltd
lret
dec
sahf
insb
xchg
scas
inc
test
jl
out
clc
jge
jne
test
adc
xchg
mov
loope
push
sahf
ljmp
pop
or
cmp
js
adc
inc
add
push
mov
push
fildll
sub
pop
inc
jno
jp
inc
push
or
mov
lcall
cmp
push
popf
out
or
icebp
pop
cmpsb
pop
or
dec
arpl
sub
sub
popa
jmp
and
push
loope
pusha
insb
or
cmp
fstps
lahf
incl
pop
ja
add
push
stc
cmpsl
hlt
mov
popf
adc
cmc
mov
shlb
sub
mov
add
in
mov
call
jle
stc
xchg
and
inc
add
icebp
mov
mov
jno
or
mov
or
inc
sbb
pushl
sub
sahf
add
add
xchg
fidivl
adc
mov
jbe
sbb
jo
aam
fs
add
stc
jl
inc
mov
push
pusha
and
gs
paddsb
stos
daa
ss
cli
or
push
inc
stc
sti
jo
clc
pusha
mov
jno
in
dec
jo
pop
out
cmp
lods
sbb
and
lods
std
ret
test
stos
sbb
push
les
hlt
dec
jb
xor
pusha
mov
jns
jle
cmp
mov
mov
jg
push
icebp
loope
jnp
pop
pop
aad
push
mov
pop
push
mov
mov
adc
pop
xchg
inc
call
outsl
mov
les
jno
jg
cmp
push
push
dec
cltd
lea
xor
cmp
mov
lret
cs
sub
lahf
je
lods
cmp
pop
icebp
lds
push
jno
pop
test
xlat
sub
inc
xor
sbb
xchg
add
and
mov
xchg
pusha
add
sub
je
js
sbb
adc
icebp
cmp
sub
mov
sub
clc
pop
jg
pop
sti
jno
adc
sub
icebp
test
dec
jno
dec
pop
out
or
shrb
aam
push
rcrl
test
inc
xor
jns
mov
and
out
aam
js
dec
mov
xlat
fisttpl
inc
pusha
pop
adc
lods
inc
lret
cld
pusha
sub
push
jno
mov
aaa
int3
and
pop
jecxz
push
mov
icebp
jae
xor
fstpt
sbb
add
stos
int3
adc
adc
scas
mov
imul
dec
aaa
out
push
sub
push
andb
xchg
jmp
fnsave
dec
xchg
frstor
ret
jno
sub
addr16
sbb
adc
cmp
inc
xor
bound
and
mov
jecxz
pushf
or
pop
cmp
mov
outsl
xor
jno
mov
and
movsl
inc
lahf
inc
out
pop
mov
mov
lds
je
pusha
jne
movsb
punpckhdq
shlb
sub
sub
cmp
sbb
shll
push
jno
and
je
jle
mov
adc
int
xor
xor
fs
rclb
enter
sub
sub
pop
xchg
std
jo
test
pop
jg
cli
icebp
pop
rclb
add
dec
daa
rcll
and
rcll
mov
cmpsb
repnz
scas
ja
mov
xor
mov
fsubrl
dec
xchg
lock
mov
push
xlat
and
out
add
xor
xchg
xchg
pop
icebp
inc
fstps
mov
jno
dec
pop
cmpsb
or
xchg
inc
test
and
pop
cltd
push
icebp
pop
xor
jno
cmp
nop
aam
sarb
aad
add
sbb
mov
mov
inc
or
mov
sahf
loop
jge
je
add
insb
push
ret
cmp
xchg
stos
adc
adc
hlt
fadds
ja,pn
jb
xchg
mov
xchg
jo
mov
scas
xchg
movsb
addl
xchg
adc
repnz
mov
push
push
icebp
mov
test
and
sbb
cmc
inc
add
fldenv
push
cltd
xchg
push
cli
sbb
xor
cmp
push
pusha
add
scas
jo
or
rclb
lahf
mov
or
out
push
or
dec
push
stos
into
fdivl
or
rcll
jno
lea
ds
sbb
and
int3
psllw
and
inc
rcrb
insl
sbb
pusha
pop
mov
dec
xchg
ds
mov
mov
adc
mov
cmpb
xchg
dec
popf
mov
mov
xchg
gs
or
push
addr16
mov
popa
sub
cwtl
dec
arpl
leave
fmuls
cmp
idiv
stc
fistl
add
jge
jae
loop
stos
aam
xchg
incb
shlb
mov
mov
dec
mov
mov
mov
popa
mov
push
ljmp
adc
push
call
stos
dec
mov
push
lret
aam
test
xor
xchg
push
mov
and
add
pop
xchg
dec
test
insl
mov
xchg
mov
icebp
add
cmpsl
sbb
xchg
pushf
aad
add
movsl
fsubrl
mov
ret
aad
movsl
insl
mov
daa
jno
andb
scas
xchg
mov
fistps
dec
adc
gs
les
jno
fidivrl
mov
int3
test
and
pop
push
fnstenv
xchg
je
xchg
inc
pop
push
adc
out
push
jl,pt
stos
rcr
fmulp
add
cli
dec
pop
adcl
dec
cmp
js
ja
mul
mov
int3
sub
push
xlat
imul
push
xor
xchg
fists
adc
adc
gs
hlt
and
push
les
fldt
mov
pop
neg
lea
push
or
mov
cltd
imul
and
mov
ja
lea
clc
jbe
scas
cld
pop
mov
adc
jns
into
jb
mov
xchg
push
gs
push
popf
xor
fistpl
cmpsb
sub
aad
mov
insl
push
bound
xchg
pop
mov
pop
jg
xchg
push
jno
repz
dec
test
pop
mov
cmp
push
sub
push
sti
addr16
shrb
paddd
rclb
jno
je
mov
adc
lods
bound
das
ret
in
gs
mov
xchg
and
scas
cmp
jno
mov
pop
pop
in
push
pusha
cmpb
adc
mov
shrb
dec
push
or
sub
repnz
cltd
inc
fs
dec
mov
and
mull
push
test
sub
push
inc
pusha
stos
mov
pop
aad
adcl
fs
rdmsr
xchg
inc
jo
call
lcall
mov
push
jns
scas
xchg
add
adc
or
test
sbb
mov
fs
icebp
jo
lock
bound
push
jecxz
inc
adc
pop
stc
mov
bound
add
or
sbb
push
add
add
aam
cltd
je
sbb
sbb
pop
ret
movsb
fbld
ja
mov
adc
aas
test
mov
adc
sub
nop
jp
ficoms
jnp
push
pusha
es
jbe
sti
pusha
insb
push
cli
cmpsb
in
popf
pop
ljmp
xlat
add
cmp
and
xor
negl
dec
mov
das
jns
icebp
mov
loope
adc
sbb
arpl
jns
mov
add
lea
inc
dec
cwtl
xchg
mov
jmp
mov
hlt
xor
xor
rcrb
dec
fistpl
dec
shll
xor
stos
fcmovnbe
inc
imul
and
insb
inc
fistl
add
adc
cmp
jo
fldz
int
mov
popf
out
adc
int3
cmpsb
adc
mov
outsb
mov
call
mov
mov
cmp
fs
add
cmp
js
mov
fiaddl
jge
mov
mov
push
inc
push
mov
or
mov
cld
inc
xchg
cmp
in
ja
add
lea
addr16
mov
shrl
mov
xor
jl
mov
das
pop
adc
jo
movsl
int3
mov
adc
push
inc
push
arpl
add
outsb
cmp
adc
cltd
jno
mov
dec
das
les
outsl
movsl
imul
hlt
cmpsb
push
mov
testl
test
jmp
mov
adc
xor
pop
push
dec
jno
sbb
popa
adc
inc
dec
subl
out
sub
cwtl
hlt
pop
xor
sub
add
push
fadd
cmc
fisubrs
push
jle
arpl
test
or
addr16
jno
loope
bound
loopne
xchg
mov
jno
mov
adc
into
sub
xor
in
ljmp
dec
dec
and
inc
mov
popa
fnstcw
dec
cwtl
pusha
scas
jne
push
xor
arpl
jo
push
fidivl
dec
or
ja
lods
push
xlat
loope
in
sbb
add
fimull
nop
mov
ja
add
cmp
jae
test
call
add
pop
xchg
sub
out
fdiv
xchg
add
or
pop
mov
sub
inc
inc
lret
scas
xor
jo
push
dec
or
clc
stc
mov
push
add
xor
into
testl
dec
jp
int
inc
mov
push
out
jp
push
scas
pop
jge
mov
xchg
adc
sub
fdivl
nop
jb
xchg
cwtl
addr16
xor
ret
inc
cs
mov
shl
orb
aad
rcl
sub
xor
ss
jo
stos
imul
mov
cmc
push
shlb
pop
rcrl
fstl
adc
pop
push
or
sbb
cmpsl
out
add
sti
mov
in
sub
rclb
leave
clc
and
mov
push
or
or
fs
inc
inc
xor
mov
stos
push
add
popa
cmp
or
lods
sbb
es
xchg
jb
jno
push
adc
push
incl
cmpsb
outsl
dec
sub
aam
test
xchg
cmp
add
push
jmp
sbb
push
lods
pop
shrl
loop
arpl
adc
ja
in
or
push
pusha
mov
xchg
ret
adc
insb
pop
int
pop
or
pop
dec
leave
push
les
cwtl
xchg
push
add
pop
mov
cmc
mov
cmpsl
lahf
jp
fstpl
dec
loopne
xor
jecxz,pn
jno
mov
int3
mov
popf
xchg
cmp
push
push
popf
push
imul
shll
dec
jns
cmp
mov
inc
mov
imul
cwtl
mov
jge
lock
inc
packuswb
sub
cmp
jmp
push
cli
out
adc
mov
mov
and
pushf
dec
push
testl
clc
inc
cmp
inc
add
dec
xchg
test
jmp
enter
pop
aam
mov
jno
out
mov
ret
push
dec
inc
fs
inc
jnp
shll
sbb
mov
fidivrs
mov
xchg
mov
sub
lea
ret
mov
pop
fcmovb
rcrb
jo
mov
sbb
sbb
mov
fsub
push
iret
mov
pop
outsb
mov
test
push
fs
ss
pop
xchg
sub
lock
je
mov
and
pusha
pop
and
sub
mov
rolb
sub
dec
xchg
inc
lods
test
fcmovnb
add
jmp
mov
ljmp
and
mov
jge
lcall
sub
sbb
inc
jno
daa
adc
mov
sti
addr16
mov
xor
jmp
xor
inc
inc
inc
push
icebp
nop
mov
ljmp
pusha
popa
xchg
ret
pop
movsl
out
cmpsl
and
xor
jecxz
or
lret
rcrl
inc
cmp
test
and
inc
adc
js
sub
xchg
dec
pop
outsb
xchg
mov
hlt
jae
mov
jo
mov
je
outsl
loop
int3
fcomi
fldt
adc
aas
sub
jno
mov
or
dec
lret
mov
out
sub
push
pop
fimull
in
xor
fdivs
inc
test
or
sub
test
adc
sbb
xor
jno
xor
icebp
mov
lcall
imul
mov
jne
xor
dec
jnp
mov
pop
jo
or
mov
call
pop
cld
sarb
int3
fidivrl
clc
mov
syscall
jp
cs
les
sbb
shr
sub
fistl
adc
stc
push
fstps
jno
gs
xor
ss
addr16
ss
mov
bsr
stos
and
or
mov
sub
xor
mov
addr16
enter
add
jge
adc
arpl
jnp
xchg
std
imul
xchg
lea
push
adc
in
outsl
mov
pusha
inc
xor
jnp
ja
and
push
movsl
subb
mov
mov
popa
test
pop
lea
stc
mov
andl
fcomps
jbe
sarb
push
stos
cmc
test
cwtl
adc
mov
lret
outsb
cltd
fld
fs
push
jmp
sub
outsb
inc
int3
lds
gs
in
stc
ds
inc
mov
stc
arpl
jmp
dec
jecxz
pop
bound
pop
push
pop
js
jno
push
and
aad
lcall
xor
and
adc
jmp
aad
sub
lds
xor
pop
add
lret
and
outsb
rcrb
mov
xchg
aam
xor
popa
fs
mov
pop
fbld
jo
fsts
icebp
cltd
fwait
pop
lcall
es
pusha
dec
cwtl
cltd
dec
popa
ss
popf
xor
fwait
rcrl
pop
sbb
mov
negl
pop
jo
sub
lahf
inc
or
sub
xor
in
or
sbb
ret
inc
sub
hlt
or
push
xchg
flds
mov
jnp
test
pusha
push
jno
addl
pop
pop
loop
pop
dec
xchg
sbb
jb
inc
addl
sbb
and
lock
mov
and
pop
inc
cmp
push
rorl
addl
leave
lock
outsl
cmpsl
out
add
mov
dec
inc
push
pop
sbb
jge
adc
push
inc
mov
out
xlat
xchg
dec
je
faddp
lcall
push
pop
ret
fnstenv
jno
cli
jecxz
sub
inc
mov
and
decb
mov
fists
ret
aam
shll
cmp
mov
out
shll
inc
lahf
cmp
fcoms
call
addr16
inc
ja
nop
adc
cmp
dec
fnstcw
push
adc
xchg
xor
rol
stc
loop
add
pop
cmp
add
mov
sub
mov
mov
xor
pop
leave
mov
into
mov
mov
sbb
jmp
mov
cmp
int3
test
rolb
fyl2x
sbb
jmp
lcall
cmp
pop
dec
outsl
add
mov
or
out
and
mov
test
xchg
fnstcw
and
hlt
push
cli
sbbb
stos
daa
pop
addr16
pcmpgtb
mov
dec
inc
fstps
pop
outsb
inc
cmpb
ds
cwtl
nop
repnz
in
cmp
cmp
into
orb
ret
scas
lods
scas
test
push
mov
xchg
or
inc
clc
push
adc
pop
jns
call
xchg
std
xchg
insl
imul
out
jnp
aam
shr
mov
add
cmp
dec
fs
pop
sub
aas
fimull
ds
daa
std
fwait
add
dec
cmpsl
dec
inc
mov
or
fs
mov
ror
aaa
dec
pop
shrb
inc
jno
mov
inc
push
fsubs
xor
pop
fsubrl
cmp
dec
outsb
xor
adc
andl
jae
inc
jno
pop
xchg
aad
mov
jnp
sbb
xchg
aam
xchg
xchg
daa
pop
add
push
sti
sbb
jae
shll
cltd
push
cmpb
imulb
sub
or
and
cmp
mov
dec
aaa
and
xor
cmpsl
stc
lret
xor
xor
sub
dec
sbb
out
dec
jo
loope
imul
add
xlat
pop
sub
ficoml
push
and
sbb
fldenv
stos
or
cwtl
loope
ja
inc
jo
fnstsw
cmp
in
jnp
cltd
div
push
mov
out
call
fsubl
or
loop
pop
pop
adc
xor
fdivrp
loopne
dec
dec
icebp
adc
lret
adc
xchg
cmpsb
mov
flds
or
popa
xor
xchg
inc
test
add
push
adc
loop
or
jae
push
adc
into
push
push
xchg
and
in
add
push
das
dec
or
aad
pop
mov
rcrb
fnstenv
insl
ja
add
and
and
xchg
xor
push
xchg
jge
lret
jno
sbbl
push
push
push
test
xlat
add
mov
sarl
adc
mov
cmpsl
pop
mov
push
jo
push
dec
popa
lds
mov
mov
inc
adc
nop
cmp
pop
push
icebp
xchg
mov
or
imul
ss
mov
aad
repnz
test
xchg
pop
fnstenv
pusha
in
in
fs
sub
test
sub
rclb
jbe
aam
mov
pop
xor
add
xchg
or
nop
std
pop
inc
adc
cmp
shll
or
lods
in
adc
xor
mov
push
adc
cmp
les
in
sbb
xchg
fwait
pushf
or
rclb
lret
icebp
mov
sub
dec
nop
sbb
pop
jno
inc
push
fs
xchg
xchg
aam
jmp
decl
cmp
xor
cli
cmp
pop
imul
outsb
sbb
in
mov
mov
popa
in
and
outsb
or
xchg
shrl
mov
cmp
and
push
bound
popa
stos
cmpsb
pop
inc
xchg
pop
sarb
push
xchg
jge
stc
inc
jno
loopne
rclb
push
and
ret
adc
dec
andl
push
and
lock
ja
push
mov
into
mov
jno
ja
mov
fstpt
inc
mov
cwtl
sub
xor
pop
or
gs
sar
cli
lret
into
dec
pop
pop
aad
xchg
xchg
sbb
lret
inc
outsb
cmp
mov
fcmovu
xorl
inc
xchg
sub
dec
push
scas
enter
int
inc
or
mov
loope
adc
xor
add
mov
cli
jbe
sub
out
std
pop
aas
dec
xor
cli
pushf
shll
dec
rcll
mov
or
lret
fldt
add
imul
sti
jno
inc
xor
inc
xor
in
fistps
das
mov
cmpsl
sbb
inc
dec
les
and
in
jnp
jle
aam
nop
jae
jl
push
push
add
dec
dec
lods
out
dec
jp
dec
mov
jns
cmp
pop
mov
orl
imul
scas
es
loop
cmp
push
popf
arpl
bound
sub
pop
add
pmaxsw
adc
sahf
mov
cmpsl
cmp
jecxz
sbb
aaa
xchg
mov
lret
les
mov
jl
cli
leave
mov
fdivrs
dec
inc
mov
and
andl
lret
ljmp
nop
scas
pop
and
xor
mov
adc
shll
add
dec
cld
mov
inc
mov
sti
icebp
inc
push
and
lods
movsb
ljmp
pop
or
test
add
lods
xor
mov
test
rorl
cmp
ficoms
in
sbb
addr16
dec
cmp
in
sahf
vpmacsdqh
mov
xor
in
gs
imul
pop
fcomps
icebp
inc
push
popa
movsb
cld
popa
lret
sti
and
mov
out
out
test
shll
push
out
shlb
aaa
jns
pop
test
sub
add
fs
cmp
ljmp
out
cmp
mov
add
xor
add
xchg
mov
xchg
into
lds
bsf
jg
sbb
push
inc
rorl
pop
cmp
mov
call
push
mov
mov
add
and
dec
jae
sar
push
or
dec
xchg
inc
jno
mov
insb
sbb
out
add
xor
stos
push
cmc
sbb
and
xor
fs
clc
add
push
pop
fldl
jno
push
mov
push
pop
lret
aad
sub
push
stc
icebp
mov
pop
ret
jb
xchg
fldenv
jle
je
test
rorb
fsubl
dec
push
int
adc
xor
push
pop
aam
cld
scas
fdiv
jnp
inc
mov
push
icebp
mov
cmp
or
cs
icebp
in
adc
push
dec
in
inc
fs
mov
cmc
push
xchg
nop
mov
clc
data16
ds
xchg
cwtl
cmc
lea
pusha
jo
jns
fldcw
xorb
bound
ja
sbb
and
fisttps
xor
insb
cmc
lea
dec
dec
or
jno
add
repz
dec
test
outsl
dec
mov
cltd
inc
dec
or
sub
ss
out
cmp
pop
jo
cmpb
mov
xlat
or
insl
jnp
xchg
jo
xor
add
push
int3
int
mov
jmp
inc
call
adc
or
mov
outsb
das
mov
add
mov
or
mov
iret
adc
xchg
imul
ret
add
in
cmp
sub
ret
jl
sbb
push
xor
xchg
ja
pop
bound
daa
jae
fistpl
test
adc
cld
out
lods
or
fnstsw
pop
jb
xchg
or
adcb
jecxz
inc
mov
jmp
and
les
iret
bound
cmc
pop
sbb
stos
inc
subl
mov
mov
cltd
movsl
inc
dec
mov
aam
dec
inc
xorl
xor
es
jo
push
sti
fdivrl
push
mov
jb
fisttps
pusha
stos
xchg
or
push
lcall
pop
mov
jno
clc
repz
push
xor
cmp
xchg
push
sub
cmp
inc
pop
inc
xor
dec
cld
cmp
repnz
cmp
mov
shlb
add
sbb
pusha
dec
arpl
push
sub
mov
shll
add
push
add
push
xchg
pushf
adc
dec
cmp
and
add
push
leave
cmc
aas
cwtl
ret
fnstenv
icebp
sbb
fstl
bound
push
je,pt
leave
sub
inc
push
leave
dec
dec
leave
ds
aaa
or
mov
mov
xchg
cmp
rorb
in
pop
cmp
xchg
push
daa
iret
xor
push
rolb
and
popf
dec
sbb
adc
add
jge
icebp
pop
sbb
loope
adc
push
mov
and
loope
daa
popf
xchg
fadds
iret
dec
iret
or
popf
mov
leave
and
or
xchg
push
loopne
cmp
js
pop
xor
mov
rorl
pop
mov
leave
pop
push
pop
lds
adc
dec
test
and
loope
rcll
or
sbb
adc
inc
in
xchg
rcrb
ss
aaa
xchg
rorl
je
ss
xor
adc
add
adc
inc
mov
dec
and
push
sbb
push
xchg
xchg
adc
aam
int
xchg
sub
push
pop
cmp
addr16
les
or
adc
jg
inc
sbb
cmp
sbb
dec
pop
rorl
xor
mov
es
add
orl
dec
sub
mov
xlat
xor
pop
inc
jo
mov
test
icebp
cmp
inc
dec
daa
fsubl
pop
addr16
in
rolb
in
cmp
int
sbb
shll
push
mov
leave
mov
inc
jge
cltd
xor
sub
push
sbb
pop
xchg
pop
fnstsw
mov
outsb
mov
sti
pop
mov
ret
push
leave
jno
pop
pop
sbb
jns
pop
dec
fldcw
sub
pushf
test
addb
inc
popa
mov
rcrb
leave
mov
push
or
xor
lcall
jg
cltd
jae
xor
push
bound
outsb
out
push
or
xchg
cmp
pop
add
sbb
pop
fdivrs
push
pushf
push
adc
insl
push
aad
cli
mov
inc
cmc
push
push
icebp
std
dec
lock
aam
push
ja
inc
sub
mov
ffreep
outsl
or
push
arpl
xchg
adc
push
fdivs
sarl
mov
push
test
pop
add
mov
jl
icebp
data16
ret
je
adcb
mov
lcall
in
add
or
jo
bound
and
pop
jns
xor
jno
out
ret
pop
fwait
decl
clc
loope
sub
and
fimull
stc
xchg
out
push
ret
cwtl
adc
xchg
or
inc
icebp
or
sub
cmp
inc
fbstp
xchg
jno
imul
popw
pop
pop
mov
push
or
xchg
popf
mov
mov
sub
out
mov
jbe
sahf
stc
add
mov
mov
aaa
fnstcw
jo
pop
sub
push
xor
push
xchg
sbb
dec
jno
and
pusha
aam
movsb
xchg
xor
ja
cli
dec
bound
lds
mov
push
stc
and
cmpsl
or
in
aaa
sbb
clc
jge
dec
ret
pop
inc
mov
adc
mov
popa
pop
icebp
mov
daa
adc
repz
inc
pushf
jp
cwtl
addr16
cld
fwait
xchg
pusha
imul
rcl
add
in
mov
dec
call
mov
insl
insb
and
pop
inc
divl
push
mov
adc
inc
mov
inc
and
jo
popf
push
xchg
test
shrb
xchg
dec
fidivrl
shll
inc
jmp
add
sbb
adc
jno
insl
insb
pop
icebp
mov
in
std
stc
sub
and
scas
xchg
scas
cmpsb
xor
jno
icebp
jl
stc
jle
mov
in
addr16
or
xor
cmp
xchg
xor
inc
shrl
inc
fisubrl
in
sti
push
lahf
mov
sbb
xchg
les
cli
pop
not
jmp
xchg
jmp
aaa
xchg
cld
jnp
add
jle
xor
loop
cwtl
jo
jae
idiv
pushf
mov
jle
inc
add
cmp
cld
adc
pusha
push
out
fs
in
push
pop
aad
jno
jl
pop
inc
push
pop
fsts
adcl
cmp
pop
fs
xchg
mov
lea
jg
inc
jne
and
imul
scas
xchg
xchg
ret
fidivs
dec
add
shlb
leave
addr16
inc
sti
mov
in
or
icebp
shll
mov
adc
push
mov
jge
ja
sti
jge
lods
push
or
fidivrl
dec
arpl
imul
jno
adc
lcall
pop
cmp
or
arpl
inc
xor
xchg
push
fucomi
idiv
add
add
rcll
jmp
jno
out
jp
mov
ds
cltd
jo
lret
loopne
cmp
and
icebp
sbb
sbb
shr
inc
gs
pusha
stc
mov
inc
inc
loope
mov
cmpb
inc
dec
scas
shlb
paddd
bound
mov
test
cli
add
dec
es
cmp
pop
push
dec
addb
sub
inc
push
cli
xchg
mov
xchg
hlt
dec
loop
scas
jnp
repz
iret
push
or
mov
aam
dec
outsl
insb
das
push
scas
xchg
sub
out
fldcw
arpl
popa
pushf
sbb
sub
icebp
inc
xchg
insb
stos
push
inc
insb
mov
test
pop
mov
iret
mov
stos
cli
xor
mov
stc
or
mov
cwtl
mov
xchg
dec
imul
push
inc
jno
pop
xor
xlat
hlt
xor
inc
push
sbb
mov
pop
imul
cmpsb
xchg
or
sub
xchg
sahf
test
movsl
adc
sbb
or
xor
xchg
xchg
and
in
add
sub
mov
imul
xchg
mov
sub
mov
pop
xchg
nop
push
add
repz
or
pop
cwtl
or
xor
add
movsl
les
or
mov
dec
lods
aaa
cmp
lock
pusha
divb
shll
fmull
inc
aad
dec
xchg
and
in
cmpsb
sub
in
sbbb
mov
jge
mov
sub
mov
adc
pop
xor
xor
xchg
cmc
jnp
iret
or
cmp
push
jno
mov
scas
sti
pop
sbb
cmp
ret
mov
xchg
push
xchg
push
faddp
add
fs
jno
aam
aaa
bound
test
xlat
pop
sbb
aam
push
push
insb
adc
test
test
es
mov
jno
xor
mov
sbbl
idiv
push
pop
bound
and
mov
or
orb
mov
add
repz
call
bts
add
pop
inc
icebp
jge
filds
inc
les
fadds
enter
int
pop
inc
sbb
icebp
mov
aaa
or
movsl
add
test
test
xchg
xchg
xor
aad
push
xlat
jge
int
and
add
mov
sbb
popa
int3
stos
inc
mov
xchg
xchg
xchg
inc
jbe
jno
and
mov
adc
sahf
stos
or
sbb
sbb
or
mov
in
pop
aaa
les
lock
fwait
push
cmp
push
stos
lret
rcrl
int3
push
sahf
sarb
test
sub
out
ret
stos
inc
and
jbe
push
mov
jo
dec
out
jns
stc
test
inc
pop
mov
sbb
mov
sbb
test
out
xor
jne
xor
test
lahf
pop
int3
sub
aam
xchg
outsl
xchg
jecxz
cmc
pusha
pop
les
mov
in
outsl
push
jnp
and
jmp
popa
mov
adc
cmp
mov
cli
subb
dec
jno
loope
shrb
push
pop
mov
lds
pusha
jno
paddusw
cmp
mov
cmp
rcr
add
insl
mov
leave
mov
int3
inc
jno
lret
ja
xor
test
push
ret
clc
cmc
or
pop
mov
adc
push
adc
nop
inc
stc
mov
xchg
xchg
push
lods
jno
xor
cltd
fmul
aas
xor
mov
icebp
xchg
lahf
push
scas
sahf
vmaxpd
jns
push
aam
push
xchg
mov
push
dec
jno
xor
jb
scas
or
cmpsl
jmp
mov
xlat
jecxz
fwait
pop
enter
push
jnp
dec
jo
push
stc
insl
push
je
gs
dec
sub
fcomps
mov
mov
adcb
jb
stc
pop
pop
adc
xchg
int3
sbb
pop
jnp
add
jbe
xor
aam
test
je
mov
gs
pop
iret
or
mov
sub
or
adc
nop
push
leave
cltd
rorl
pusha
out
mov
scas
xchg
or
xchg
xorb
adc
aam
push
mov
jbe
loope
sub
add
xchg
ss
jne
rcl
icebp
cli
aas
fadds
js
cmp
jae
aam
push
jmp
sahf
aas
lcall
loop
dec
in
jp
xchg
pop
out
mov
clc
xchg
fidivl
dec
stos
insb
mov
test
fisttpll
mov
dec
into
adc
pop
popa
arpl
push
jo
jno
icebp
test
jp
mov
adc
test
adc
mov
out
testl
adcb
xor
mov
push
push
xchg
dec
dec
shl
pop
lret
xchg
cwtl
pop
jo
gs
sbb
mov
cmp
cmc
sbb
das
sub
or
rcrb
scas
push
sub
call
pop
aam
insl
fimuls
mov
je
sub
push
popa
cld
dec
sub
inc
push
pop
imul
mov
sub
jns
bound
test
push
mov
jno
adc
arpl
test
mov
mov
cli
lahf
popl
add
push
cmp
iret
daa
lcall
pop
fstpl
jle
push
test
cli
icebp
and
jnp
add
jno
jle
ret
sub
cwtl
test
lods
int
int3
out
pop
cwtl
push
loop
fyl2x
subl
mov
push
pop
cmp
mov
or
cld
cmp
xchg
xchg
fcmovb
sbb
bound
rorb
xor
fstpl
mov
stc
mov
fimuls
loopne
lods
outsb
xchg
retw
sub
fs
aad
in
or
add
xchg
jo
mov
mov
or
push
dec
mov
jno
stos
out
and
push
push
dec
lret
or
jno
mov
pop
fwait
pop
leave
jo
or
inc
icebp
xchg
sbb
and
xchg
aad
cld
push
xchg
jnp
jg
arpl
test
into
loop
idivl
ja
mov
sbb
arpl
divb
insb
mov
sub
pop
popa
xor
dec
xor
iret
cli
jne
jo
mov
icebp
cmp
dec
pop
push
jno
adc
or
fnstcw
icebp
or
xchg
push
and
jle
xor
mov
ror
bound
xchg
push
push
nop
xor
invd
xchg
nop
mov
cld
lods
dec
cli
jo
and
ret
or
pop
jno
push
sbb
fldl
dec
fldcw
aaa
jno
daa
mov
imul
mov
pushf
fwait
push
push
xorl
inc
xor
sahf
fwait
xorb
sub
pop
mov
pop
cmpsl
cmp
fsts
mov
cmp
cmpsb
xchg
inc
mov
push
out
imul
xlat
jg
mov
fimuls
sub
add
imul
jl
inc
sub
icebp
lock
inc
fcmove
mov
cli
clc
test
out
outsb
mov
xor
jb
cmp
cli
lret
insl
je
jle
mov
hlt
and
push
sub
or
cmp
int3
sub
mov
sbb
test
jns
mov
pop
push
pop
mov
outsl
xor
daa
sub
sahf
gs
stc
fidivs
sbb
dec
enter
jns
xlat
xchg
out
jge
enter
nop
pop
sti
xor
movsb
xor
movl
shll
inc
dec
shlb
sbbb
and
das
ljmp
jo
push
in
sub
sub
aaa
cwtl
aam
or
lods
shl
mov
jo
mov
loop
pop
jne
dec
jb
mov
push
add
push
sbb
push
nop
fidivrl
stc
add
mov
cmpsl
lcall
and
or
in
sub
lods
fsts
clc
or
das
jo
enter
ficoml
in
roll
mov
push
lret
cmpsb
xor
push
xor
stc
jge
inc
fs
xor
adc
jo
sahf
in
xor
clc
arpl
adc
aas
test
mov
clc
in
adc
popa
ss
cmpl
and
mov
cmpsb
dec
fwait
add
shr
or
pop
clc
or
sbb
dec
inc
push
xor
mov
aam
or
fnstcw
mov
xchg
adc
js
test
xlat
xchg
inc
fsubl
imul
ret
or
dec
mov
int3
cltd
add
mov
mov
xchg
or
subl
mov
dec
or
pop
and
lea
or
jl
out
out
push
fmull
scas
pop
test
and
mov
mov
loope
jle
cwtl
or
nop
jno
hlt
test
ljmp
fwait
cmp
ljmp
adc
mov
mov
mov
add
adc
push
mov
cwtl
push
jno
xchg
inc
mov
fxch
cmc
jl
xor
ja
ja
clc
adc
ja
push
int3
lret
inc
fnstcw
pop
pop
mov
sub
and
cmpsb
xchg
push
push
push
pop
sbbl
pushl
xor
mov
scas
dec
pop
aad
jne
pusha
pop
dec
fs
add
mov
push
mov
push
fdivs
daa
aam
hlt
inc
out
mov
nop
push
rclb
dec
inc
or
stc
mov
inc
add
lods
add
or
sti
adc
bound
lds
mov
rcll
cltd
int3
test
clc
imul
scas
cmpsb
xor
fcompl
imul
icebp
cs
mov
scas
ja
sbb
test
inc
nop
mov
mov
icebp
push
and
jo
dec
jg
cltd
mov
pusha
cmp
ss
xchg
and
stos
dec
adc
sbb
dec
xlat
dec
mov
jbe
idivl
sub
ljmp
gs
dec
add
xchg
add
xchg
outsb
push
les
movsb
hlt
push
xlat
dec
jo
test
sub
push
popa
shl
sub
add
xchg
stc
pushf
add
in
dec
xlat
hlt
pop
int3
fwait
pop
pop
test
xchg
leave
shrl
lahf
pop
loopne
sub
sti
test
push
inc
jno
rol
push
lods
cltd
out
icebp
mov
cld
sbb
xorl
jo
pop
pop
mov
pusha
and
nop
repnz
mov
ret
lcall
push
lcall
fs
sub
jno
sbb
xor
cld
pop
xlat
in
call
test
xor
jno
loop
outsb
inc
nop
push
mov
les
dec
jno
cld
dec
inc
push
jo
xlat
idivb
scas
test
cmp
push
pop
mov
xchg
adc
in
xor
sub
repz
rorb
cmpl
mov
repz
nop
lock
adc
jbe
ja
sub
jbe
dec
inc
shl
test
mov
sbb
cli
test
xor
mov
mov
pop
pop
out
xchg
adc
dec
stc
data16
push
int3
mov
cltd
jns
push
push
jmp
adc
popa
sbbl
pop
int3
inc
hlt
aaa
mov
lods
arpl
xchg
pushf
mov
js
jno
rcrb
cli
lcall
std
test
mov
cmp
cmpsb
xchg
ljmp
es
push
sub
into
ja
aad
outsb
test
fmuls
arpl
push
push
xchg
testb
dec
aam
cmp
add
xchg
push
shlb
stos
adc
rclb
and
pusha
xor
push
jbe
enter
loop
je
jg
rolb
pop
ret
xor
insl
push
xor
les
cmpb
fwait
xchg
lds
rcll
pusha
sub
xchg
notl
mov
daa
add
jl
fwait
xchg
movsb
adc
inc
arpl
cli
inc
or
jnp
add
and
test
aad
in
cwtl
mov
cmp
cmp
scas
cmp
sahf
adc
ja
adc
insb
das
push
inc
push
xlat
or
add
pop
lods
and
jmp
test
xchg
cmpsb
in
xor
push
out
test
inc
cmp
ror
insl
pop
or
jo
lock
push
in
xchg
pop
icebp
jbe
inc
push
jo
jp
daa
push
outsb
pushf
cmp
xorb
stos
xor
mov
movl
xlat
test
pop
arpl
aad
xor
imulb
stc
sub
imul
repnz
pop
and
adc
push
mov
arpl
pop
adc
pop
icebp
sub
iret
xchg
sub
les
sub
lahf
dec
adc
mov
cld
sti
xor
outsl
fstps
jns
loop
fsubr
aam
mov
iret
cltd
push
mov
pop
sbb
xor
add
pop
mov
pop
xchg
nop
fcmovbe
leave
push
lds
fsts
dec
jae
push
scas
outsb
xlat
add
jno
outsl
and
in
mov
cmp
fucomip
mov
cli
leave
mull
icebp
xlat
inc
dec
push
jl
xchg
cmp
adc
shrb
jle
fs
aad
jl
movsl
ret
in
cmp
mov
clc
aas
dec
cmpsb
jl
pop
mov
xchg
mov
sub
je
pushf
cmovge
pop
sub
xchg
cli
ret
hlt
cltd
mov
dec
iret
das
xchg
push
je
mov
ljmp
sub
out
fstps
fs
repz
call
jnp
pop
mov
enter
push
mov
in
roll
xor
pop
sub
push
pop
add
xchg
clc
pop
sbbl
dec
xor
notl
add
outsl
mov
push
xor
cmpsl
fcoms
inc
testb
js
adc
rclb
dec
out
push
inc
movsb
mov
sub
cmpsl
cmp
mov
mov
es
push
push
bound
out
shrb
popa
stc
ret
scas
cs
or
rclb
sub
inc
in
mov
mov
xor
arpl
fcompl
xor
xchg
pop
imul
ds
xchg
ljmp
jo
ret
ss
mov
out
pop
jne
mov
imull
lcall
mov
inc
dec
das
cmpsl
lret
jp
jb
jb
lods
mov
jne
or
imul
push
leave
mov
dec
sub
scas
and
scas
push
call
outsl
or
xchg
xor
aas
cltd
loopne
add
and
cmpsl
subb
xchg
xor
cmp
xor
push
sar
ror
test
jno
sub
fwait
adc
sub
ja
push
int3
inc
jo
lret
pop
cmp
pop
mov
je
add
repnz
addl
add
pop
cmpl
and
ja
adc
dec
aad
cmp
mov
pushf
outsl
inc
xchg
repnz
int3
lods
inc
cld
push
repnz
mov
call
scas
mov
movb
cmpsb
jnp
xchg
fnstenv
push
popa
jno
std
aaa
dec
movsl
scas
jg
test
pop
xchg
mov
into
xor
or
ret
mov
push
dec
mov
xor
loopne
outsl
lds
rcrl
inc
adc
jno
jno
push
cmp
pusha
or
or
mov
push
aad
scas
rclb
icebp
lods
mov
adc
pop
mov
add
mov
aaa
inc
jb
mov
call
adc
sub
loopne
or
js
sbb
add
movsb
or
mov
add
icebp
sbb
cli
stos
int
cld
jge
push
dec
adc
popa
mov
xchg
shl
loopne
rcl
js
mov
adc
pop
adc
mov
mov
sahf
xor
jo
sti
inc
ja
xor
add
mov
pop
fildl
pop
adc
popf
mov
aad
int3
pop
dec
adc
or
xchg
nop
add
mov
xor
fsubr
fldcw
cmp
test
sub
cwtl
pusha
rcrb
mov
mov
das
cmp
jbe
or
add
rorl
dec
arpl
dec
push
fnstcw
stc
icebp
addl
addr16
xor
pop
ja
bound
cwtl
rcll
cmc
adc
inc
pop
icebp
ja
sub
in
jl
mov
fprem1
icebp
popf
and
lods
pop
inc
adc
iret
lods
sbb
adc
pop
popl
sti
adc
sub
push
xchg
mov
mov
dec
into
dec
sahf
dec
pop
je
sub
sbb
cmp
add
in
leave
sbb
shll
rcll
xlat
pusha
fistps
sarl
dec
in
xor
inc
shll
add
insb
mov
fwait
mov
sub
pop
push
jmp
inc
inc
xor
dec
bound
fdivs
ficoms
pusha
int
mov
pop
fsubs
dec
mov
jno
ficompl
loop
xchg
cltd
dec
push
push
adc
aad
movsb
pop
mov
push
pop
cmp
jb
int3
adc
cld
gs
aas
or
sub
dec
push
mov
ds
arpl
and
leave
jmp
or
xchg
or
cmp
mov
icebp
fs
pop
sub
xor
ror
xchg
ss
rolb
das
into
fwait
pop
jb
push
inc
jae
les
neg
xchg
xorl
jl
cltd
jbe
popa
xor
push
pop
sub
testb
cmp
sti
xchg
pop
adc
dec
js
jno
lcall
add
sti
xchg
shll
cli
jge
paddd
jbe
jnp
fsubr
jo
adc
data16
or
mov
add
add
enter
pop
notb
pop
pop
std
fimull
arpl
imul
dec
loop
sbb
or
inc
push
lock
push
ss
out
int
dec
pop
out
inc
dec
sbb
push
iret
jmp
sub
sbb
xor
push
add
cmp
sub
mov
adc
add
jl
cmp
iret
sbb
push
add
sti
xor
or
pop
int
scas
sbb
stos
iret
push
popf
add
adc
dec
or
push
dec
call
xor
cmp
cmc
mov
push
out
sbb
movsl
sbb
ljmp
in
push
and
xchg
int
xor
xlat
mov
mov
xchg
leave
mov
pop
pushl
test
xlat
dec
inc
dec
in
icebp
hlt
mov
hlt
cltd
cld
pop
push
loop
ljmp
xor
pushf
clc
jge
sub
dec
pop
sbb
sbb
push
testl
out
fcomps
push
sbb
test
xor
jns
int
pop
xchg
xor
push
cwtl
inc
dec
and
test
adc
mov
add
inc
pop
or
push
mov
jmp
sub
xchg
scas
or
dec
fnsave
enter
movsl
or
push
sbb
movsl
leave
mov
xor
push
stc
push
aas
rcrl
out
rorl
push
cmc
sbb
add
push
and
xchg
test
loope
adc
fyl2x
cmp
xor
popf
sbb
pop
sub
dec
push
and
std
lods
in
int3
std
mov
jne
rcll
xor
push
cmp
sbb
aam
sahf
cmc
flds
repz
or
mov
sbb
aaa
cltd
mov
push
cmc
mov
inc
mov
lds
pop
mov
xor
int
mov
daa
leave
push
pop
jge
loope
push
cmp
es
add
push
sbb
test
sbb
jl
xchg
shl
sub
cmpsb
sub
rcll
add
mov
cmp
pop
int3
add
inc
xor
in
mul
fildl
jp
insl
xor
inc
jl
cwtl
insb
dec
outsl
jno
pop
dec
jg
pop
callw
sbb
out
mov
jge
lods
rol
inc
mov
cli
inc
mov
pushf
aas
add
dec
outsl
sysenter
sti
pop
push
cmp
test
inc
and
dec
add
add
sti
push
ret
add
dec
mov
mov
icebp
popf
je
lds
leave
mov
push
pop
or
lcall
imul
mov
shll
iret
add
dec
mov
add
bound
popf
pusha
mov
lcall
xchg
and
mov
stos
push
adcl
adc
jno
add
adc
and
lods
push
mov
add
dec
icebp
inc
mov
cmp
aam
cmc
mov
dec
test
aas
cmp
dec
sub
pop
inc
imul
add
jmp
and
insl
push
sbbl
jns
aam
jge
add
loope
sti
pop
sbb
loope
scas
into
and
fs
test
add
icebp
or
jno
aaa
inc
fimull
fwait
or
mov
pop
fyl2x
out
inc
movsl
mov
divl
pusha
add
push
test
add
sbb
cwtl
movsl
mov
imul
icebp
add
inc
nop
push
jae
vaddps
sbb
ljmp
xlat
dec
xchg
popf
ror
xchg
or
xor
sub
jnp
lcall
or
adc
lods
sbb
push
jno
mov
adc
xor
sub
jmp
mov
inc
mov
mov
fisttpl
mov
int
inc
lock
test
pop
inc
std
scas
mov
xor
add
es
add
gs
cwtl
push
repz
pop
sti
fsub
push
inc
add
sub
ficompl
das
push
ret
pop
outsl
ret
rcll
rol
jnp
sub
xchg
push
inc
jno
jne
bound
cmp
shlb
dec
pusha
xchg
xchg
jne
mov
mov
mov
dec
enter
push
js
cmpsb
idivb
jnp
jg
xor
pop
sbb
adc
mov
push
jno
cmp
iret
dec
shrb
inc
addl
mov
out
jno
add
add
cmp
in
stc
mov
arpl
out
push
add
jno
pop
into
sub
addr16
cmp
nop
sbb
pop
outsb
pop
xchg
sub
shl
inc
xlat
in
and
push
mov
jo
dec
push
mov
or
lds
mov
xorl
inc
sub
inc
add
shll
xchg
mov
icebp
mov
xor
lods
xor
cmpsl
fisttpl
shrb
mov
sarb
ds
and
dec
sub
inc
cwtl
or
aad
xchg
sbb
jecxz
loop
mov
in
ljmp
sub
adcl
aaa
or
and
sahf
sub
push
dec
mov
sbb
xchg
xchg
lret
mov
xchg
in
cwtl
outsl
pop
stc
dec
jo
bound
out
push
push
test
dec
cld
adc
mov
sbb
ret
cmp
adc
leave
xlat
xchg
lcall
sub
pop
std
ja
sbb
arpl
mov
cs
or
and
sub
pushfw
xchg
mov
cli
pop
pop
icebp
jno
xor
push
pop
icebp
mov
lcall
mov
sbb
shll
nop
mov
lcall
jne
lret
movsb
sub
or
push
push
stos
enter
cs
lea
pop
adc
jmp
test
out
add
pusha
shll
push
inc
or
in
fisubrs
leave
dec
push
jbe
out
out
outsb
mov
int3
jno
lock
test
mov
and
aam
sbb
xor
cltd
add
mov
aaa
arpl
mov
xor
xor
add
repnz
int
iret
lods
add
outsb
ret
sub
fwait
xor
or
xor
add
mov
jno
push
pop
ret
mov
pop
xchg
dec
push
sub
pop
add
loopne
rcll
mov
sub
push
fmul
andl
wbinvd
push
jnp
lret
outsb
cmpsb
in
or
shlb
cwtl
or
sahf
scas
and
dec
mov
mov
frstor
push
jno
std
scas
ja
jmp
fldt
andl
xor
int3
sub
fldl
or
push
je
hlt
cld
mov
and
sahf
cmp
jmp
outsb
add
popf
les
fs
nop
jno
add
cmp
fdivs
dec
pop
addb
push
or
xchg
cmp
xor
jp
pop
fiadds
stos
pop
mov
inc
jno
mov
aaa
lods
and
addr16
or
sbb
icebp
imul
les
cmpsl
and
dec
repz
push
lcall
dec
add
lahf
sbb
or
jo
sbb
fnsave
ffreep
test
jp
dec
popa
out
aaa
lsl
xor
or
cmc
jle
pop
mov
mov
je
pop
sti
outsb
pop
icebp
xorl
mov
shlb
jnp
fs
jmp
pop
jb
inc
add
mov
adc
xchg
push
cwtl
fadds
je
mov
nop
fmull
test
pop
mov
leave
push
jno
pop
pop
je
adc
jno
fidivrl
mov
jle
jno
stos
jmp
xor
iret
cmc
or
movsl
or
mov
push
jmp
loopne
pop
add
rclb
call
push
mov
xchg
jbe
mov
xor
repz
notl
incb
mov
pop
add
ret
out
adc
es
mov
pop
add
pop
icebp
inc
add
outsb
into
sub
fbstp
add
subl
fildl
mov
mov
push
lods
mov
popa
icebp
clc
inc
jb
call
dec
pop
fadd
jo
sbb
in
push
mov
pop
cmpb
fwait
xchg
int3
push
imul
mov
push
mov
adc
stc
addr16
push
fadds
fs
ds
xor
xchg
das
call
xchg
inc
mov
insl
mov
adc
cltd
lea
adc
adc
jno
movntps
mov
mov
and
pop
incl
xlat
adc
fcmovb
fstl
push
sub
lahf
dec
into
fpatan
pop
cli
ds
jno
adc
aam
or
jl
dec
push
add
cmp
lods
xorb
xchg
push
xor
rcll
jns
rolb
xchg
icebp
loop
enter
jecxz
jp
je
stos
nop
ljmp
mov
push
pop
xchg
lret
outsb
ja
xor
push
xchg
lock
ljmp
push
adcl
mov
pop
jp
stos
fimull
mov
add
sub
sub
xchg
inc
out
pop
jecxz
mov
int3
jno
rol
add
rol
sar
sbb
fwait
cmpsl
dec
or
das
push
sub
push
xorb
rcrb
cwtl
lcall
dec
lds
fldcw
push
mov
gs
dec
cmpsl
inc
dec
push
pusha
stc
fs
xchg
or
xchg
xchg
imul
adc
adc
jg
int
pop
mov
pushf
test
adcb
das
outsb
xor
test
into
or
pusha
lock
fxch
fs
xchg
push
dec
xchg
push
inc
sbb
ror
xor
xchg
popa
mov
pop
shrb
fldenv
inc
jl
loope
fcompl
jnp
cmp
xchg
jmp
push
pop
sbb
add
outsl
lds
ljmp
lea
cltd
add
mov
dec
sti
mov
jl
iret
jle
xor
cwtl
jo
xchg
ljmp
adc
mov
sub
jp
pop
lea
xor
jno
mov
cltd
mov
jno
push
je
rcrb
outsb
sbb
push
mov
sbb
scas
leave
pop
daa
push
icebp
sbb
fidivrl
inc
out
jo
ret
lea
repz
out
pop
loopne
push
rclb
push
icebp
je
lea
sub
iret
sbb
sbb
stos
out
add
push
cmp
add
andl
push
pop
xchg
lret
movsb
cmp
inc
pop
aam
adc
push
test
mov
add
rcrb
mov
mov
mov
das
sbb
mov
cmpsb
pusha
and
xor
jo
sub
xor
mov
xchg
lds
xor
or
mov
arpl
dec
ljmp
sbb
jno
jnp
mov
mov
shr
int
pop
nopl
adc
out
movsb
jo
lods
jl
enter
cmp
add
add
and
aad
lahf
lods
pushf
or
fnsave
xadd
iret
push
pushf
out
and
hlt
jp
aaa
pushf
add
lock
inc
fstps
push
inc
cmp
jns
adcb
jne
jno
cwtl
and
icebp
std
dec
dec
andl
push
icebp
cli
or
popa
xchg
dec
ljmp
loope
mov
mov
sbb
cmpsl
fwait
mov
mov
sahf
pop
or
push
adcb
ja
add
imul
das
call
xor
dec
cli
test
int
test
add
std
and
cmpsb
insl
gs
pop
out
push
icebp
push
jle
ret
mov
cwtl
outsl
push
lahf
xchg
jnp
push
push
int3
aad
jmp
ror
in
movsl
sbb
insl
cmp
mov
xchg
mov
shll
fnstenv
imul
icebp
bnd
das
mov
xchg
mov
inc
mov
pop
and
clc
lods
dec
leave
xchg
daa
sahf
dec
push
sub
push
jo
cmp
sub
stc
mov
jl
fmul
iret
stos
outsl
movl
pop
xchg
das
push
dec
xchg
mov
out
mov
xchg
jae
pusha
icebp
mov
out
add
out
fiaddl
jmp
xor
mov
mov
cmp
mov
nop
jge
ret
es
push
sbb
or
cmpsl
push
mov
jno
mov
inc
sub
adc
ss
mov
test
loopne
xchg
std
jno
cmpsb
cmp
movsb
ja
data16
or
or
dec
popa
inc
imul
outsb
sub
lret
ds
xor
pop
cmp
popa
cmpsb
jne
mov
sub
mov
inc
xchg
push
jbe
mov
ja
mov
or
jp
cmp
psubsw
out
push
fdivrs
not
dec
inc
cmp
imul
cmp
sub
in
clc
cld
cmc
arpl
repnz
dec
xchg
inc
out
lods
pop
mov
xchg
push
fs
mov
dec
bound
ljmp
and
stc
sub
xor
jbe
loopne
mov
mov
call
cld
jb
sbb
cld
repz
xor
dec
dec
sti
ficomps
xchg
std
jo
leave
push
pop
xor
mov
dec
push
outsl
cld
or
pop
push
xchg
aam
jno
and
stc
dec
push
je
out
xchg
imul
repnz
cli
dec
xor
cmp
lcall
bound
pushf
stos
add
daa
aam
lcall
add
mov
addr16
inc
pusha
stos
xor
or
push
jo
mov
mov
cmp
cwtl
push
dec
pop
jbe
inc
dec
shlb
sub
insl
idiv
lret
push
cwtl
push
int
bound
jmp
jmp
push
fldt
into
add
xchg
mov
mov
inc
jnp
sub
push
sbb
dec
inc
aaa
xchg
sbb
dec
dec
mov
lahf
pop
or
push
aaa
adc
stc
pop
pop
repnz
or
jo
xchg
arpl
dec
je
jle
cmp
pop
cltd
xchg
push
int3
fdiv
mov
push
lods
mov
dec
xchg
xchg
cmpsb
fcmovnbe
add
cmpsb
pop
fisttpll
xlat
cmp
cmpsb
mov
int3
sub
pop
mov
inc
cmpsl
sub
std
out
sub
xlat
out
rcrl
fdivl
push
mov
xor
sti
jno
inc
int
cmp
mov
add
pusha
arpl
push
push
pusha
jno
call
shlb
sbb
int3
mov
cwtl
cmc
ror
fwait
lea
jnp
repz
xor
adc
sub
mov
mov
rolb
or
cmp
jl
imul
imul
dec
repnz
xchg
pop
inc
gs
xor
dec
fs
in
add
into
jecxz
mov
mov
inc
mov
pusha
xchg
movsl
push
push
and
xor
outsl
and
dec
dec
push
out
xlat
fildl
nop
insl
out
jo
jo
xchg
mov
push
mov
xchg
idiv
jns
adc
dec
mov
je
dec
mov
scas
jo
fdivl
enter
sbb
sub
mov
jno
cmp
pusha
add
inc
movsl
dec
lods
arpl
movsb
cli
sahf
imul
bound
and
jns
je
pop
cwtl
adc
repz
mov
jnp
jno
pusha
test
push
icebp
scas
inc
fdivp
or
les
cli
mov
and
push
sub
enter
hlt
sbbl
push
scas
hlt
adc
jl
add
pop
xchg
nop
add
sar
sti
stc
lds
sub
jle
cmp
in
xor
mov
pop
into
je
sub
jo
xor
jg
jbe
push
addr16
incb
mov
cmpsb
test
push
stc
xor
dec
xor
sti
xor
inc
or
into
mov
fidivrs
fidivs
jg
aaa
and
push
test
mov
dec
repz
xor
push
adc
insl
jge
inc
imul
pop
inc
push
pop
loop
add
sbb
pop
data16
mov
ret
insl
mov
enter
lea
pop
leave
out
mov
dec
inc
push
mov
xor
mov
pusha
das
ss
inc
adc
cmp
inc
mov
pop
jo
fimuls
jo
fistpll
jg
add
pop
popa
cmpb
xlat
lret
stc
pop
out
push
sub
rolb
out
into
fucomip
loopne
inc
xchg
xor
aas
jecxz
inc
stc
pop
popl
adc
adc
cmp
in
repnz
lock
or
and
cmp
int
imul
push
test
fsubrs
popa
add
sbb
addr16
adcl
or
fidivl
or
dec
mov
test
inc
shl
push
add
pop
dec
sti
adc
icebp
mov
inc
sahf
xorl
jno
ds
jp
scas
out
imul
fnstcw
cwtl
jb
mov
jo
xor
sub
mov
cmpsl
movsl
in
jg
lds
adc
int
dec
addr16
sbb
jmp
adc
aaa
mov
lcall
fstps
push
aam
pop
leave
jmp
push
out
mov
xor
mov
movsl
inc
pop
inc
jno
aad
jl
out
pop
jmp
cltd
imul
push
fwait
lds
fdivrp
push
xchg
imul
pop
sbbl
shlb
pop
cmc
in
xchg
sahf
pop
push
xor
pop
dec
mov
dec
inc
cmpsl
push
pushf
pop
mov
dec
les
add
adc
jo
test
adc
stos
fdivrl
mov
je
and
jno
ficoms
dec
js
jo
stos
dec
cmpsl
sti
sbb
mov
jno
std
add
out
pusha
mov
fs
fnstcw
push
rolb
adc
push
test
pop
in
push
jl
ficomps
cld
shr
fwait
xchg
das
fsts
fwait
icebp
dec
inc
xchg
mov
lds
lods
fs
xchg
mov
dec
jno
sbb
lahf
daa
mov
fsts
arpl
test
add
and
cmp
pop
cmp
add
cwtl
daa
out
xchg
mov
js
ret
cmp
imul
mov
and
imul
add
popf
popf
or
inc
push
test
dec
arpl
fnstenv
icebp
test
xor
pop
fstpt
imull
scas
repnz
jbe
dec
push
jecxz
arpl
cs
fsubl
jne
pop
stc
lahf
popf
inc
jno
mov
data16
jne
or
add
int3
rcrb
test
mov
inc
pop
inc
mov
bound
jmp
cmc
mov
rcr
daa
popf
jle
fldcw
scas
hlt
or
leave
cli
test
sub
and
push
or
sbbb
jns
inc
out
push
cmp
rcrl
addr16
fs
cmc
jecxz
adc
roll
adc
je
movsb
pop
clc
loope
das
mov
cltd
sti
mov
xchg
jo
or
iret
xor
dec
add
jae
push
stc
jae
iret
int3
fsubl
sar
sahf
cmp
push
clc
adc
das
ret
sub
sub
cmpsb
outsl
xchg
add
decl
out
loopne
pop
call
into
out
push
lock
or
out
test
adc
mov
dec
fildl
popa
pushf
inc
or
add
rorl
insb
lret
shlb
adc
xor
addb
aaa
jmp
lahf
dec
flds
or
mov
add
rclb
lret
jle,pt
pop
add
jo
xor
jl
sub
adcb
mov
fcoms
jl
inc
dec
repz
int3
sbb
loopne
pushf
inc
or
dec
dec
loop
add
ss
sbb
and
adc
push
dec
lds
inc
sti
dec
js
add
xchg
or
sbb
xor
out
enter
loopne
inc
pop
outsl
jl
sarb
inc
cli
mov
or
in
insl
add
mull
idivb
jns
aad
xchg
mov
xchg
mov
ss
pop
insl
xchg
std
add
outsb
adc
or
aaa
lods
aad
adc
pop
jno
outsl
cmpsl
lods
xor
in
scas
sbb
push
mov
add
int3
mov
cmp
je
ret
jae
xchg
dec
push
adc
xchg
std
cli
mov
push
mov
dec
and
lods
mov
jle
xor
xchg
push
pop
jmp
stos
push
daa
sahf
fs
hlt
getsec
inc
xchg
inc
jo
jmp
xchg
mov
inc
inc
std
shlb
cld
rolb
nop
dec
cmp
stos
out
xchg
pushf
cs
xchg
fwait
subb
jbe
or
sub
add
fstpl
cmpsl
or
popl
mov
pop
cmp
mov
push
xchg
jo
shrl
fimull
adc
popa
adcl
loopne
push
sbb
pop
xlat
std
push
cltd
inc
jmp
mov
jl
ss
push
gs
sti
stos
and
test
lcall
movsb
xor
push
jns
pop
cmp
pop
pop
jbe
scas
dec
jbe
pusha
push
lods
pop
shl
jno
ja
push
mov
aaa
pop
xor
mov
stc
xor
popf
push
ds
push
in
dec
scas
or
lods
ret
mov
push
sbb
sub
repnz
dec
jno
imull
adc
xchg
pop
rcr
call
dec
lods
xchg
aad
lea
adc
inc
inc
jo
inc
fwait
nop
repnz
data16
mov
xchg
sbb
add
cwtl
jbe
mov
cmc
popa
adcl
xor
test
sbb
push
shll
xchg
mov
mov
out
test
popa
fidivrl
adc
cmp
icebp
sbb
mov
fdivl
mov
fcoms
out
cmp
inc
cmp
mov
adc
sbb
repz
lock
xchg
cmpsl
jo
add
loop
pop
icebp
xchg
jae
out
mov
jg
inc
jno
pop
fwait
int
icebp
push
dec
push
lahf
adc
cmc
and
out
sbb
std
ret
scas
lcall
shrl
jg
inc
fsubrs
rep
mov
mov
cmc
fidivl
jno
mov
sub
lcall
in
shlb
out
lods
test
or
dec
scas
orl
dec
mov
out
call
movsb
xorb
outsl
inc
std
data16
imul
push
xchg
push
jo
mov
xor
jns
aam
popf
out
mov
icebp
cld
addr16
or
lahf
xor
sub
inc
cmpsl
dec
outsl
xchg
dec
lahf
and
dec
lahf
mov
cltd
mov
push
mov
mov
pop
pusha
loop
and
and
jno
movlps
sub
xor
std
cmpsl
adc
into
fdiv
jmp
lock
dec
ret
cmp
inc
test
xor
aas
mov
push
inc
loop
xchg
xor
mov
lods
mov
push
cmp
fldcw
sub
dec
les
cld
xchg
pop
sbb
dec
jnp
test
jb
xchg
aas
jnp
jl
xor
cmp
test
mov
jo
cmp
out
push
cmpsb
jb
ja
push
fs
push
dec
mov
pop
cmpsb
cmp
jno,pn
dec
adc
xchg
fstps
pushf
jo
and
sub
jae
mov
sbb
fisttps
cld
adc
dec
push
stc
jo
inc
mov
je
inc
mov
stc
fisttps
dec
orl
and
cltd
iret
mov
in
leave
out
push
arpl
xchg
jl
xor
or
jo
imull
xchg
jae
mov
dec
setle
jbe
push
or
mov
adc
jae
jno
mov
dec
roll
jns
iret
pop
xchg
sub
mov
push
jo
mov
adc
dec
call
push
xchg
stos
dec
mov
inc
inc
dec
inc
sub
dec
cmpsl
pop
add
sub
std
pop
stc
cmp
mov
repz
pop
cmpsb
xchg
add
jns
fists
ret
inc
or
aaa
sub
ja
jge
push
bound
inc
mov
pop
lock
sti
push
addb
fdiv
idivb
js
add
xchg
mov
inc
jo
push
xchg
jns
enter
fistpl
ret
sbb
fisttps
and
dec
cmp
fdivrs
and
fldenv
cmpsl
add
add
cmpsl
jl
or
ja
sub
push
jge
and
jns
cltd
sbb
pop
and
sbb
aam
xchg
sbb
xor
andl
jg
orl
je
sbb
pop
cmp
xlat
repz
fwait
int3
int
pop
notl
lahf
inc
and
je
sbb
imul
lcall
adc
pop
adc
int3
sub
push
xor
pop
dec
push
xchg
mov
lods
jnp
addl
mov
add
je
mov
pushf
mov
push
sti
sbb
aad
jbe
lods
push
cmc
imul
stos
mov
sub
clc
stos
adc
in
jnp
or
pop
and
scas
pop
stos
jae
sub
add
push
cmp
mov
mov
cmp
pushw
mov
dec
ja
fsubl
test
push
jge
into
mov
push
sbb
xor
insl
sub
cld
mov
adc
loopne
out
push
stc
divl
pushf
mov
fwait
loop
lods
push
adc
faddl
mov
adcl
cs
adc
pop
xor
sbb
mov
xor
bound
push
shrl
aaa
or
icebp
dec
pusha
inc
dec
xchg
adc
inc
sbb
inc
jbe
push
les
and
stos
inc
xor
jge
movsb
inc
push
mov
dec
cltd
stc
popa
mov
fidivrs
push
icebp
sub
pop
fwait
inc
push
dec
sbb
pop
mov
iret
ret
js
out
mov
or
push
aam
fisttps
outsl
adc
andb
hlt
sub
fs
fdivrl
pop
jno
dec
pusha
jo
jle
scas
sbb
mov
rcrb
jo
push
jbe
je
inc
in
push
popf
xchg
cli
cmp
dec
scas
mov
sub
pop
sub
xchg
xchg
mov
stc
loope
icebp
call
cmp
mov
in
int
or
fwait
nop
xchg
jns
sub
cli
xor
loopne
shr
jo
jae
movsl
adcl
mov
xchg
fadd
add
notl
out
cwtl
sub
xor
sbb
call
pop
mov
popa
mov
jb
add
push
movl
push
jo
pushf
xor
inc
xor
inc
out
sub
or
push
mov
push
jno
push
pop
iret
push
inc
pop
mov
push
jb
adc
push
lds
jbe
andps
mov
in
add
adc
sub
cmc
push
aad
and
sub
mov
and
xchg
inc
call
hlt
pop
pop
pop
dec
lcall
dec
test
pushf
lock
sbb
mov
lcall
adc
fwait
pop
adc
xchg
xorb
cwtl
and
dec
sbb
mov
cmp
jp
insb
notl
insb
pop
fs
arpl
pop
add
popa
fwait
mov
dec
scas
jae
shld
cmc
pinsrw
dec
cmp
std
aam
and
mov
dec
mov
pop
dec
ja
or
test
adc
xchg
mov
adc
xchg
in
rcll
hlt
push
incb
fs
push
sub
xor
jp
push
rol
push
repnz
xor
lea
mov
adc
fwait
lea
mov
cli
sub
xor
or
push
sub
jmp
int3
cmp
jno
mov
cmpsb
and
iret
jle
stos
pusha
jo
pop
dec
ret
push
push
in
sbb
mov
push
and
addb
add
loope
jnp
xchg
cmp
cmp
icebp
push
lea
fdivrs
mov
pop
icebp
push
cld
xor
xor
sub
xor
mov
push
int
stc
in
dec
mov
jb
xor
rcrb
jo
sbb
sbb
add
inc
fsubrs
mov
js
out
test
cltd
xchg
xchg
ret
pop
stos
popl
mov
loop
jno
pop
pop
stc
jo
sbb
sarl
push
shll
shlb
mov
push
fistpll
sahf
mov
adc
stc
mov
frstor
mov
into
inc
jnp
and
test
sbb
xor
push
mov
enter
addr16
and
pop
rorl
lock
fcoms
pop
dec
gs
fbld
pusha
and
stc
mov
nop
sub
push
scas
mov
or
loope
arpl
adc
sub
dec
xchg
or
bswap
mov
clc
push
mov
roll
mov
dec
sarl
inc
sbb
fmul
dec
mov
and
mov
bound
cmp
shl
push
mov
jae
sub
lods
cld
sub
fldenv
push
pop
jno
lret
stos
or
push
js
sub
xchg
jge
inc
outsl
scas
orl
xacquire
dec
mov
push
sub
jb
test
loope
mov
and
stc
mov
roll
xchg
lea
sub
mov
lea
push
fldcw
insl
aad
xchg
shll
mov
xchg
and
pop
cmp
pop
add
push
jno
sahf
je
mov
inc
stc
into
insl
cmp
xor
jae
sti
xor
pop
icebp
sti
je
adc
jp
dec
sub
dec
jns
jo
inc
inc
mov
dec
pop
gs
adc
mov
out
fs
pop
loop
sbb
push
sti
int3
push
addl
insl
in
addr16
xor
push
sbb
jne
jo
movsb
jge
insb
jae
sbb
mov
pushf
negl
repz
sti
cmc
icebp
pop
inc
lret
sub
adc
mov
popa
cmp
arpl
sbb
popf
movsb
lock
add
adcl
xchg
test
pop
jmp
inc
or
daa
push
repnz
add
push
cli
and
sbb
push
inc
xchg
dec
inc
sbb
rcrl
lock
dec
pop
sbb
pop
push
ljmp
std
leave
push
dec
call
dec
adcl
mov
mov
das
push
cmp
sub
cmp
pop
push
pop
imul
inc
xor
push
ds
sub
sub
add
mov
push
sarb
mov
aaa
popf
shll
dec
push
push
push
outsl
pop
or
inc
xor
push
adc
add
cmp
sub
sub
push
xor
or
xor
roll
adc
sbb
loop
push
int
mov
icebp
add
push
xor
inc
sub
mov
push
insl
cmc
pop
lea
bound
adc
sbb
xchg
rcrl
xchg
imul
std
cmp
adc
push
or
je
insl
loope
insl
inc
inc
push
dec
or
jne
mov
ret
pop
mov
add
jmp
ret
xor
lods
push
xlat
shll
inc
fnstenv
mov
adc
or
lea
dec
cmpsl
cmp
push
and
dec
sub
fisttpll
inc
xchg
sbb
fsts
mov
push
pop
push
daa
loope
lds
and
xor
sbb
cmc
dec
cmp
sbb
xor
inc
lea
leave
sbb
xor
fstps
mov
cmc
cmp
inc
xor
cmc
mov
or
icebp
mov
fsts
push
popf
es
push
xor
push
mov
lds
repz
clc
lods
fnstenv
mov
pop
rcl
cmpsb
or
xchg
add
pop
sbb
jmp
dec
jo
lahf
fcomip
sub
mov
enter
sub
cltd
sti
inc
push
es
pop
mov
push
ljmp
add
mov
pop
and
jp
pop
push
mov
fsubrl
xchg
loope
pop
ret
cld
ja
push
jbe
push
sbb
dec
popa
stc
lock
fneni(8087
sti
ja
lock
dec
icebp
ret
fcompl
fucomip
sub
mov
cli
xor
jnp
roll
mov
mov
xor
cmp
mov
pop
pop
rol
pop
cmp
and
mov
xor
sub
mov
loop
jo
shlb
and
sub
jne
jno
dec
cmp
cltd
fcmove
aam
and
mov
xchg
daa
stos
bound
push
mov
jnp
stc
add
sbb
inc
adc
inc
push
std
jmp
xor
xchg
jg
jno
loope
and
inc
cld
scas
je
sub
shrb
sti
cwtl
jno
xchg
lcall
lcall
xchg
dec
mov
lock
push
adc
mov
imul
cld
jl
test
pushf
xchg
sub
jo
mov
xor
pop
enter
or
lea
jmp
lods
cltd
jne
stc
jo
xchg
ret
sahf
das
cmpsl
or
jmp
flds
pushf
stc
cmp
das
sbb
sub
adc
orb
ficoms
xorb
je
add
jbe
fistl
loopne
sub
pop
scas
xchg
lcall
dec
cld
pop
sub
ret
notl
mov
pop
xchg
nop
push
push
repz
cmp
cmp
cmp
popa
and
sub
pusha
outsl
rorl
xor
incb
leave
dec
das
mov
or
imulb
or
xchg
pushf
jnp
push
pop
inc
sbb
ret
cmp
mov
cmp
push
push
add
loopne
je
add
mov
mov
popf
push
xchg
pop
stc
and
imul
fs
imul
fldcw
mov
leave
mov
inc
adc
cli
sub
or
jns
push
xorb
sub
mov
xchg
dec
sub
add
and
dec
jno
mov
out
jg
jg
jge
push
jae
sub
xchg
mov
testl
add
or
push
dec
pop
push
fdivrs
rclb
add
das
jno
lock
repz
or
push
push
mov
add
sbb
aam
cwtl
arpl
sub
or
push
or
xchg
int
cmp
mov
inc
add
stos
mov
call
add
pop
mov
xor
sub
cmp
push
cmpsb
repnz
leave
xchg
cmp
stos
add
bswap
insb
push
xlat
mov
or
gs
xchg
sub
je
or
nop
cmp
xor
sub
jno
xchg
cmp
aad
lcall
jl
popa
leave
sahf
xchg
jecxz
mov
xor
mov
and
mov
lcall
xchg
inc
fs
loope
jecxz
sub
push
test
pop
add
ret
or
rclb
shr
adc
sub
mulb
fcompl
fcmovne
addr16
or
mov
mov
inc
jnp
add
fs
add
js
fidivl
cmp
cmp
stc
push
jo
cmp
movsl
fisubl
icebp
arpl
inc
cld
insl
or
push
int
addb
test
jae
mov
sub
scas
and
lods
fidivrl
icebp
mov
mov
sub
roll
aaa
adc
push
roll
mov
mov
sub
lea
dec
push
jge
test
fwait
shrb
add
and
pop
mov
jo
lods
daa
lods
or
xor
push
mov
rcll
jno
les
adc
inc
fcmove
jne
inc
push
pusha
mov
leave
or
scas
add
sub
jbe
rcll
mov
xchg
nop
mov
jne
stos
adc
cwtl
xchg
mov
add
cmpsb
bound
cmc
fadds
dec
test
add
rolb
add
mov
pop
mov
jns
dec
clc
lea
jo
and
pop
add
cmp
inc
or
or
jno
mov
adc
ljmp
jp
stos
aad
xchg
jno
aad
out
add
cli
inc
aam
push
push
lret
das
ja
sarl
push
movsl
pop
fstps
and
and
mov
les
lahf
shll
mov
push
pop
sahf
inc
jo
xchg
push
mov
fs
xchg
push
mov
jns
xchg
pushl
jmp
xor
push
insb
adc
icebp
repz
lcall
xor
inc
lret
cld
dec
mov
sub
inc
dec
or
aaa
into
fstl
sbb
jnp
out
jae
in
cmpsb
out
inc
or
cs
pop
addl
mov
or
subl
inc
iret
es
fisubrs
jg
inc
push
mov
stc
dec
sbb
lods
mov
inc
jnp
pop
adcl
ret
ret
pop
sarl
lahf
mov
xorb
xor
loop
ror
popf
push
cbtw
jae
fstpt
jo
sbb
insl
mov
or
jno
push
stos
xor
push
shlb
clc
cmp
test
mov
xor
mov
xchg
mov
mov
gs
cmp
out
into
int3
in
jl
or
jo
test
mov
lods
xchg
aad
sub
and
jo
sbb
jbe
and
xlat
stos
loopne
sbb
in
stos
push
dec
jo
and
shlb
jmp
aad
xchg
xchg
mov
mul
mov
mov
add
cmp
aaa
scas
xor
push
pusha
into
adc
mov
mov
bound
pusha
lods
mov
mov
aas
push
pop
adc
scas
and
fdivs
sbb
insl
mov
lea
add
fmuls
jno
jg
dec
test
rclb
les
add
std
and
xor
inc
sub
imul
add
leave
dec
or
lcall
fimuls
lock
dec
mov
pusha
cmpb
nop
jno
in
test
inc
pop
stos
pop
mov
cwtl
and
addb
pushf
jo
lret
les
mov
dec
mov
stos
sbb
adc
xchg
movsl
inc
mov
jmp
or
mov
or
pop
icebp
cmp
pushf
jle
rcll
cmp
and
ds
pusha
push
xchg
mov
sub
test
mov
pop
add
push
jg
mov
and
inc
jo
sbb
jl
or
cmp
xchg
js
imul
push
and
outsl
cmp
cwtl
xchg
aas
shlb
mov
aad
cld
sub
push
stc
es
mov
pusha
push
repnz
repz
dec
inc
pop
call
sub
push
jo
xchg
or
cmp
pop
pop
add
lods
push
sbb
pop
jae
popa
push
rorb
or
sub
fldl
adc
cmpsb
pop
mov
sbb
inc
mov
fcomps
xchg
mov
iret
sub
stc
pop
loop
push
or
mov
ss
or
mov
xor
or
mov
das
arpl
dec
xchg
sbb
jge
mov
push
inc
xorl
mov
ret
data16
cltd
je
or
inc
cltd
xchg
fs
sar
xchg
push
pop
jmp
inc
das
aaa
add
mov
dec
shrl
daa
dec
adcl
pop
pop
mov
xchg
push
push
repz
inc
sbb
icebp
rcrl
repz
and
push
call
xor
adc
mov
imul
sbb
mov
enter
gs
push
stos
sbbl
insl
insb
or
ja
xor
jne
or
imul
and
or
icebp
fistl
sub
push
jno
lea
cmpsl
jae
sbb
gs
ficoms
movsb
call
imul
xor
mov
xchg
fld
sub
sahf
fsubs
notl
jo
sbb
mov
jno
inc
std
ret
lods
sahf
mov
mov
out
xchg
mov
test
sub
cmpsb
jmp
shrb
test
sub
aas
fcmovnb
adc
pop
fidivrl
scas
xchg
lahf
jbe
or
pop
mov
ljmp
js
push
test
fidivrs
xchg
add
lahf
fs
into
push
pop
inc
sti
sub
mov
addl
arpl
fldenv
add
out
lods
das
nop
insl
pop
xchg
push
aaa
decl
jl
lock
ret
add
inc
mov
add
push
or
add
subl
mov
pop
sub
pushf
mov
psubusw
mov
xchg
dec
jg
ror
jno
ficomps
push
or
outsb
andb
adc
inc
ja
jno
orl
pop
push
icebp
sbbl
adc
and
loopne
sub
inc
jge
hlt
jbe
mov
adc
mov
cli
xor
aam
mov
dec
sub
shll
sub
test
dec
xor
cmp
cmc
push
mov
pop
lods
dec
aam
and
fcoms
push
stc
or
xor
in
stc
jae
shll
leave
inc
jne
pop
mov
cltd
xchg
push
and
jns
xchg
dec
inc
pushf
inc
bound
sub
outsb
mov
je
aad
dec
dec
mov
push
push
int3
cmpsb
mov
int3
or
fldl
popa
pop
or
pop
mov
cli
test
sti
fisubrs
add
mov
xchg
sbb
adc
mov
sti
xchg
rcpps
inc
test
fwait
sbbl
mov
mov
xchg
xor
fwait
dec
xor
and
and
or
testb
mov
push
mov
adc
popa
stos
add
dec
mov
lret
mov
push
fnstcw
add
jl
dec
push
int3
lret
pop
dec
or
push
and
xor
inc
inc
xchg
pushf
mov
dec
insl
inc
mov
mov
jne
cwtl
xchg
jmp
inc
jmp
stc
push
leave
rolb
xor
cld
adc
jno
add
add
adc
adc
shrl
cli
insl
test
cwtl
sar
movsb
cmpsl
ja
lret
push
pop
adc
mov
add
pop
add
je
xor
rcr
sub
aad
test
mul
cmpsl
ret
pop
push
ljmp
decb
mov
shlb
adc
inc
inc
jmp
clc
cmp
push
cmp
jne
jo
out
rcl
jp
into
xor
or
pop
mov
mov
mov
pop
pop
icebp
xchg
movsb
and
inc
shlb
mov
insl
cld
add
xor
fisubrl
fldcw
icebp
sub
cmp
mov
cmp
inc
pop
std
leave
xlat
sti
into
dec
and
and
sahf
jae
push
scas
cmp
fidivrl
xchg
outsl
pusha
loop
xchg
aad
and
dec
mov
xchg
push
jecxz
imul
jno
lcall
aaa
scas
loope
sub
jo
cs
pop
xor
pop
fsts
movsb
out
movsb
sar
ja
pop
push
mov
stos
sbbl
hlt
mov
nop
jns
and
mov
je
mov
pop
mov
push
aad
repz
xlat
cmpsl
adcl
xchg
shll
rolb
mov
mov
aam
test
pop
mov
xchg
sub
test
arpl
js
pusha
push
out
sub
sbb
cmc
aam
test
pop
xchg
push
add
inc
pop
xchg
mov
sub
out
jo
pop
aaa
mov
pop
sub
add
aam
dec
pop
cld
pop
xlat
hlt
loope
adc
ljmp
sarl
xlat
pop
stc
mov
clc
sahf
jno
mov
mov
xchg
or
pusha
adc
adc
add
or
int
sahf
dec
cli
rcrl
ret
dec
shrb
scas
aam
scas
pop
pop
outsl
push
lret
jns
jno
arpl
jo
daa
mov
inc
sub
push
jne
jne
addr16
insl
mulb
or
nop
fsubrl
xchg
sub
mov
inc
jno
cmp
add
lret
hlt
fstpt
dec
xchg
fsts
pop
push
icebp
loopne
mov
push
xchg
dec
fs
xchg
pop
outsb
push
bound
incl
pop
sub
xchg
stos
adc
into
cmpsb
jp
and
jno
dec
inc
outsb
sti
pushl
mov
push
aam
or
mov
cli
push
outsl
aaa
lahf
xchg
in
ss
pop
mov
adc
mov
push
scas
sub
push
sub
push
sahf
insb
inc
ret
shlb
inc
push
or
add
ret
dec
test
and
ja
and
lret
xchg
sub
jp
inc
stc
movsb
shll
mov
inc
mov
decb
jno
jmp
aad
sbb
adc
arpl
push
shl
ret
pop
sti
js
in
aas
mov
mov
xchg
test
and
mov
push
pop
arpl
and
sti
mov
inc
xor
sub
mov
arpl
lahf
adc
sub
lcall
jge
pop
mov
int3
shlb
outsl
and
cwtl
push
scas
add
rcl
imul
repz
dec
rol
call
xor
or
jno
and
jmp
and
sbb
jne
xor
xor
add
fs
subb
js
cmp
mov
test
ret
pop
xor
std
stos
or
mov
sbb
sbb
push
mov
sti
movsl
adc
mov
shl
add
push
maxps
fidivrl
inc
or
jae
push
cmp
push
lret
lret
jae
enter
mov
add
mov
push
out
or
in
repz
in
push
or
push
dec
fwait
push
pusha
out
add
push
sahf
cltd
fwait
inc
pop
dec
pop
jnp
sbb
dec
sub
ljmp
inc
mov
mov
inc
rcll
xchg
sub
inc
or
dec
jne
cmp
scas
push
cltd
xchg
in
ja
or
fwait
jae
dec
push
jl
sti
add
loope
pop
dec
imul
add
push
sub
cwtl
je
mov
sub
flds
adcl
and
sti
inc
mov
sti
push
adc
adc
push
icebp
sub
jl
stc
pop
push
cwtl
jo
xor
lahf
xor
pop
jae
fildll
scas
dec
add
cmpl
push
sbb
jge
into
movsb
shll
es
dec
mov
out
shl
sub
push
ret
jo
dec
mov
cmpsl
or
xchg
mov
std
push
jo
sti
jno
rcl
jl
rclb
dec
ljmp
adc
jo
add
sti
cmp
cmp
subb
leave
add
add
cmp
jmp
aad
mov
cmpsb
outsl
cmp
js
cmpsl
push
loope
or
add
cmp
out
bound
push
sub
push
sub
mov
cltd
mov
cmp
pop
int3
lods
mov
mov
test
fwait
mov
mov
dec
stc
fsts
addr16
push
sub
out
mov
mov
fnstcw
sub
pop
xchg
mov
fistl
dec
and
fwait
and
int
adc
stc
pop
add
push
jbe
test
xchg
insl
pop
and
aad
addr16
nop
pop
jg
ror
lcall
sahf
mov
push
mov
or
jo
push
in
pushf
mov
push
addr16
dec
les
pusha
cmc
rorl
fldenv
divl
iret
in
mov
hlt
fistl
jo
xchg
cmp
sub
pusha
sbb
add
pushf
sahf
rcll
jo
aas
dec
inc
popf
xor
xor
add
repnz
adc
icebp
cs
outsb
push
push
cmp
inc
das
mov
push
mov
cmpsl
mov
fnstcw
mov
sub
jo
push
push
into
xchg
sub
out
imul
fsubrp
rorb
cltd
jo
add
jp
js
ror
dec
mov
lock
clc
test
xor
nop
fs
leave
inc
jno
add
loopne
das
adcb
mov
int
push
sbb
pop
loop
mov
sbb
or
into
in
dec
fs
push
xor
mov
sub
mov
mov
jno
stos
cmp
nop
fiaddl
xor
jecxz
xchg
aaa
inc
cltd
xchg
push
andl
sbb
xor
sti
ljmp
inc
dec
and
cmpsb
or
push
adc
lahf
cltd
ss
cltd
arpl
push
imul
addr16
mov
pop
push
jno
imul
dec
pop
mov
push
jns
inc
sahf
xchg
cltd
adc
cmp
fldl
andl
add
xlat
jo
outsl
stos
adcb
out
idivl
jmp
mov
jno
dec
cltd
and
push
lods
fstl
cld
in
xchg
jno
imul
or
jo
mov
test
mov
jbe
inc
jo
xchg
ret
add
testl
incl
pusha
xor
cwtl
lcall
cmpsb
sbb
mov
pop
and
cmp
ret
iret
nop
sti
rorl
jb
repz
mov
sub
outsl
and
imul
cmp
lods
xor
mov
fistpll
xor
aam
ss
jnp
loopne
mov
inc
sbb
rolb
je
push
adc
sbb
mov
xor
jnp
testb
adc
insl
lods
cmp
pop
call
xchg
inc
sbb
andb
or
add
je
ret
mov
jnp
xchg
push
outsl
jno
test
xor
jno
xchg
lea
stc
outsb
mov
sub
cmpl
fs
repz
xor
push
push
sub
mov
push
xor
outsl
pop
mov
dec
out
jo
ret
xor
aaa
pop
sbb
pop
ret
fdivp
fidivrs
push
sbbl
sbb
dec
cli
fcmovnb
test
test
mov
xchg
pop
push
fwait
sti
cmpsb
cwtl
dec
filds
repnz
mov
lret
call
push
dec
add
jecxz
int3
mov
and
push
pushf
popf
das
ret
pop
scas
push
pusha
rclb
add
into
dec
adc
mov
add
push
mov
xchg
add
roll
ss
mov
pop
sub
divl
jo
inc
and
jae
cmp
adc
xchg
int
push
inc
cmc
jno
test
inc
jmp
xchg
adcl
xor
jo
pop
xlat
jnp
cmc
add
les
in
in
sbb
arpl
ljmp
sbb
sub
mov
scas
xchg
xchg
push
push
jecxz
loopne
add
sub
pusha
dec
jno
fsubrs
sub
xchg
int
jne
test
cwtl
sub
test
or
and
jno
jbe
fnstenv
push
into
rcll
add
adc
pop
pusha
test
xchg
mov
jnp
and
in
cltd
push
icebp
imul
sbb
mov
lret
test
pop
lea
in
sbb
ret
je
enter
arpl
push
push
dec
in
lods
dec
jnp
cmp
inc
pop
fildll
ja
les
mov
xchg
and
push
dec
stc
adc
enter
std
sbb
jp
orb
mov
cmp
popf
js
aaa
mov
aad
cltd
mov
jno
push
leave
mov
push
jo
and
add
orl
es
jle
push
mov
stc
andb
jo
sbb
mov
cmc
gs
test
xchg
jns
cmp
out
push
add
negl
xchg
jno
cmp
sub
mov
mov
inc
push
outsb
das
enter
add
enter
fld
pushf
jl
inc
sbb
insb
aad
dec
dec
loop
sub
xchg
inc
fs
loop
and
aam
mov
shrb
test
jmp
push
movsb
loop
leave
xchg
test
push
push
dec
jns
ret
mov
mov
push
rcrl
loope
cmp
out
mull
or
pop
xchg
jl
add
xlat
and
pop
xchg
push
or
xor
and
push
fcomps
push
inc
aad
rorl
incb
jne
push
inc
jno
in
std
aas
add
add
ret
loope
fstpl
dec
outsl
inc
clc
push
fistps
into
xor
inc
xlat
xchg
cwtl
lret
and
fcmovu
outsb
mov
sbb
xchg
mov
inc
jbe
cmpsl
and
sbb
mov
cmp
fcoms
pusha
push
aad
popf
xlat
dec
stc
push
nop
dec
int
pop
xor
dec
leave
mov
or
jle
sub
fldcw
es
cmp
out
adc
jl
xlat
and
neg
icebp
mov
imul
in
inc
jo
and
xchg
xor
aaa
xor
and
jno
jne
cmc
adc
adc
inc
mov
adc
fimuls
cltd
lcall
test
add
push
push
pop
mov
dec
data16
pop
xchg
push
popl
dec
mov
sbbb
icebp
cltd
and
popa
icebp
lcall
stc
fs
fdivrl
int3
fwait
push
push
clc
and
adc
sbb
push
fadds
sub
jp
roll
mov
cmp
inc
fdivs
ret
push
in
sub
jb
xor
push
sub
jge
rcrl
and
movsb
push
lock
cld
shll
jno
hlt
pop
cmp
js
lret
mov
push
dec
or
aam
stos
shll
mov
ja
gs
cmp
xchg
scas
push
shlb
and
sbbb
stos
cmpb
scas
push
test
lret
jecxz
andl
pop
add
jb
cmp
fwait
test
pop
adc
and
xor
add
dec
jo
aam
popa
fnstcw
shrb
pop
cltd
push
insb
xor
fs
addr16
pusha
push
fs
stc
outsb
cmp
lahf
cld
sub
gs
push
sbb
arpl
movsl
sub
loop
bound
sbb
add
data16
sub
adc
jo
pop
mov
sub
fldt
push
mov
push
push
cli
mov
inc
ljmp
loope
sub
xor
or
dec
jl
test
les
popa
xchg
jecxz
xchg
pop
nop
mov
mov
cmpsl
xchg
nop
insb
stc
or
push
ret
xchg
lea
mov
push
mov
dec
pushf
fwait
sub
imull
jp
sbbl
aaa
stos
jp
pop
add
push
or
data16
test
test
xchg
dec
lods
mov
pop
add
cs
inc
xchg
mov
adc
xorb
mov
sub
popa
les
nop
inc
int3
adc
icebp
cltd
and
sarl
aam
mov
mov
sub
xchg
leave
test
push
lret
pop
xchg
rcl
xor
mov
sarb
xchg
ret
push
cmpsl
jl
cmc
shlb
jbe
xchg
ja
loope
push
jo
in
pop
stos
mov
xor
add
add
jne
stc
xchg
xchg
stos
stc
clc
imul
and
int
imul
sar
nop
adc
fs
mov
pop
xchg
jmp
jp
xor
mov
xorl
jne
xor
subb
and
iret
std
imul
sbb
push
add
test
xchg
adc
test
leave
std
movsb
jmp
xchg
inc
push
ja
das
pusha
jb
bound
add
popa
fs
jecxz
outsl
push
shlb
test
cmp
outsl
icebp
pop
addr16
daa
jno
das
cmpsb
xchg
or
std
push
lock
xchg
sub
test
loopne
dec
repnz
xchg
cltd
in
inc
mov
or
jle
dec
nop
and
cltd
insb
push
cmpl
outsl
mov
cmp
pop
arpl
sub
mov
pop
shll
loope
cmc
loope
xchg
jmp
jne
icebp
fistps
aaa
pop
les
xlat
fsubrp
jne
enter
push
lahf
fsubs
and
xchg
stos
jo
stc
int
dec
cltd
and
pop
mov
push
xor
sub
sub
sahf
jbe
cmp
jecxz
mov
adc
adc
jmp
in
int3
xchg
enter
add
insl
cmp
pusha
aad
jne
adc
pop
and
jmp
xor
dec
das
push
icebp
mov
push
pop
add
pushf
xor
or
je
jns
rcl
push
pop
sub
outsb
ljmp
imul
push
dec
out
pop
mov
loopne
xchg
adc
outsb
pop
andl
outsb
inc
shlb
or
sbb
xchg
sub
cmp
or
sub
xchg
stc
std
inc
sub
in
xchg
out
int
sub
lcall
sub
push
cmpsl
mov
dec
push
adc
push
or
hlt
add
popa
jnp
jo
pop
pop
xchg
sbb
fs
movsb
ljmp
push
repnz
decb
insl
push
shrl
popf
cwtl
push
inc
and
pop
pop
adc
jb
cmpsl
xchg
xlat
sub
dec
dec
mov
stos
test
mov
mov
pop
js
push
sbb
xchg
stos
xchg
mov
popa
ret
xor
add
pop
xor
mov
adc
fsubs
loop
jne
adc
sbb
add
ficompl
push
mov
jecxz
mov
or
movsb
inc
out
jmp
xor
les
add
pop
cmp
imul
mov
push
dec
stc
mov
lds
and
out
inc
mov
pop
mov
pop
pop
sahf
cmp
lods
lcall
lea
cmp
movsb
mov
push
aam
arpl
pop
sub
pop
cmp
xor
dec
dec
jo
scas
pop
mov
icebp
cli
insl
aam
call
in
lcall
gs
jge
hlt
ficompl
mov
inc
js
flds
movsl
mov
add
pop
dec
cwtl
imul
pop
push
outsb
std
mov
decl
pop
repz
loopne
inc
popa
inc
out
idivb
dec
inc
fldcw
xlat
jle
fyl2x
fs
and
into
rcrl
stos
or
les
daa
push
or
add
sbb
jno
push
xchg
lods
xchg
inc
sub
add
pop
jge
fstps
enter
repnz
lods
adc
insb
popa
fisttpll
fwait
pop
add
stc
mov
mov
lock
out
into
outsb
mov
pushfw
cmp
pop
jg
and
or
xchg
or
cmp
rorl
push
in
or
jno
js
shrl
sahf
inc
sbb
inc
mov
sbb
loope
xor
lock
test
fstps
fildll
push
cmp
aad
cmp
mov
sarl
jae
xor
xchg
or
aas
iret
test
aam
jle
enter
aam
xor
dec
sub
ja
xchg
test
adc
or
adc
leave
inc
and
push
jo
shll
dec
cltd
xor
rcl
push
inc
popf
xlat
or
inc
sbb
in
sbb
test
mov
push
in
cmp
inc
add
jne
ret
cltd
cmp
jne
call
sub
push
pop
test
out
push
adc
pop
push
mov
cmp
or
lea
dec
fsts
shll
popf
push
cmc
xchg
or
xlat
in
dec
and
mov
cmp
sub
jne
mov
int
xlat
push
push
add
mov
test
mov
mov
and
aaa
mov
imul
popf
leave
in
or
and
dec
push
shl
std
enter
and
jne
xor
dec
mov
sub
mov
mov
and
adc
xor
xor
xor
mov
cmp
std
cmp
xor
roll
cmp
aaa
push
aaa
dec
mov
movsl
leave
cltd
leave
sub
xor
xor
inc
or
inc
in
and
or
or
cmp
xor
imul
jmp
xor
cmp
cmp
xchg
test
cmc
vshufpd
xor
adcl
cmc
add
test
stc
leave
icebp
pop
cmc
dec
mov
icebp
jns
blsfill
xor
xchg
xor
pop
mov
push
cmp
shr
cmc
xor
mov
and
lret
jno
sub
mov
cli
incb
clc
push
xor
mov
push
xchg
push
les
inc
jno
clc
pop
jo
cld
jmp
fsubl
add
notb
mov
sti
mov
xchg
xchg
cld
inc
xlat
dec
sub
les
or
cmp
aaa
adc
push
sbb
hlt
into
and
add
adc
mov
sbb
leave
mov
faddp
repz
push
sbbb
movsl
ja
jp
mov
popf
xor
sbb
xlat
scas
and
inc
or
xchg
std
add
inc
jo
lods
pop
jno
add
mov
xchg
and
or
inc
xorl
popf
shr
push
fimull
arpl
dec
sbb
push
xor
icebp
cmpsb
shl
jno
jecxz
vaddsubpd
sbb
mov
xor
les
dec
aaa
lcall
jecxz
adc
or
adc
fcmovnbe
inc
inc
push
mov
adc
and
mov
mov
test
push
jno
xorb
push
xor
icebp
and
pushf
pop
mov
and
int
cmp
sbb
dec
push
jno
repnz
xor
aaa
popa
mov
mov
jl
dec
fidivrl
aas
cmp
dec
xchg
ja
movsl
out
or
fwait
dec
rorl
sbb
or
add
fnstenv
imulb
add
pop
in
icebp
sar
cwtl
push
stc
fidivl
xor
sti
push
add
jo
cltd
mov
xchg
push
lods
xor
cwtd
mov
push
inc
jo
int3
repnz
sub
or
sub
pop
stc
xchg
sbb
and
mov
xchg
pop
arpl
jo
in
lea
dec
aad
ja
xchg
sti
push
aas
mov
xor
inc
popa
stos
mov
inc
cwtl
cltd
mov
jmp
or
sahf
aad
jbe
xchg
test
jno
icebp
push
inc
cld
cli
inc
inc
test
mov
fs
pusha
fisubrl
aas
add
lock
jno
xchg
pop
xlat
loop
xor
mov
lods
loope
dec
sbb
adc
mov
cmp
and
adc
movsb
sbb
clc
sbb
lock
or
js
lcall
rcrb
add
in
stos
push
and
xchg
xchg
sti
and
cltd
std
fisubrl
push
ret
dec
mov
cltd
fisttps
sub
clc
xchg
mov
and
mov
in
movsb
into
or
insl
xlat
sub
cmc
ret
xor
push
mov
outsb
std
dec
flds
pop
or
aad
js
aam
xorl
or
xor
jno
popf
inc
inc
loop
pusha
mov
add
dec
daa
divb
leave
fwait
mov
xor
lcall
cmp
rcl
add
mov
movl
mov
pop
movsl
pop
jo
std
ds
xlat
dec
int3
push
sub
push
outsb
and
cmp
nop
jmp
fmull
fsubrp
leave
mov
or
mov
fs
adc
out
push
rcrb
push
into
mov
jp
add
sbb
push
push
pop
nop
pop
cmpl
popa
icebp
mov
xor
xor
xchg
imul
insb
iret
fiaddl
test
pop
cmp
neg
divb
xor
aam
or
sub
adc
popa
stc
mov
movhps
xchg
faddl
or
loopne
js
mov
cmp
ds
inc
pusha
jno
cli
insl
scas
mov
sbb
je
lods
mov
jl
xchg
mov
push
bound
and
pop
pop
add
shll
dec
add
cmp
fcmovnu
lret
jl
gs
push
mov
stos
jbe
or
int
fisttpl
mov
push
pop
inc
shrb
sbb
jae
inc
lahf
and
push
addps
gs
add
xor
cmp
sbb
addl
js
icebp
cmp
dec
mov
push
das
cmpsb
push
fwait
dec
add
sahf
xor
stc
addr16
mov
xchg
and
jns
imul
push
lods
mov
fs
mov
movsl
loope
sub
movsl
fwait
outsb
das
aam
fwait
jae
jmp
xor
rorl
dec
fsts
lcall
sub
inc
dec
aad
imul
and
xor
mov
cmpsb
cmp
add
leave
sbb
xchg
cli
dec
ret
mov
add
inc
push
push
imul
je
daa
adc
int3
pop
pop
pop
notl
add
jp
imul
fsts
pop
pop
xor
push
adc
cmp
mov
push
lods
xor
add
mov
adc
dec
mov
mov
sbb
les
fdivrs
jno
push
dec
into
sub
push
mov
ds
call
dec
push
jo
push
dec
jbe
aam
inc
add
dec
xchg
aam
popf
popf
into
popa
add
pop
push
daa
pop
mov
pusha
stc
push
test
fsub
jae
dec
mov
add
shll
fadds
push
fdiv
clc
stos
movsl
xchg
inc
push
int3
mov
out
mov
mov
mov
clc
mov
xchg
adc
push
lahf
mov
mov
shll
jno
mov
cmp
mov
jle
inc
jbe
fs
test
dec
fidivl
jecxz
cli
cmpsl
sub
cmc
xlat
sub
add
inc
mov
aad
sub
addr16
jo
fwait
dec
cld
insl
adc
push
and
jmp
sub
xchg
dec
pop
in
xchg
sub
jno
pushf
insb
lcall
fdivp
mov
movb
fxch
mov
ret
sbb
mov
add
pop
subl
adc
or
aaa
lods
xor
push
dec
ret
rcrl
sbb
jno
xchg
xor
nop
addr16
hlt
pop
push
in
repz
and
mov
or
pushf
test
inc
pop
pop
std
add
sbb
and
mov
mov
sbb
fcoml
sbb
mov
and
scas
dec
push
icebp
fisttps
xchg
add
shll
icebp
dec
jbe
aad
pop
dec
jne
xor
sbb
dec
mov
xchg
xor
je
inc
dec
jb
dec
inc
dec
mov
sarl
stc
sarb
mov
mov
adc
pop
bt
push
stos
mov
mov
add
adc
jno
add
jo
push
shlb
xchg
inc
stos
in
add
out
pop
leave
cmpsl
call
adc
xor
inc
sub
push
or
dec
or
and
scas
gs
inc
adc
jg
dec
into
lods
adc
int3
jno
and
enter
aad
xchg
add
cli
inc
sahf
xchg
test
les
sbb
leave
stc
jno
push
pop
cmp
or
ja
jno
pushf
push
mov
sbb
xchg
add
inc
leave
icebp
fwait
push
daa
lods
rolb
rol
adc
and
dec
mov
sub
js
xchg
push
icebp
jns
out
pushf
sub
jo
shrl
pop
fdivrl
arpl
jl
jmp
adcl
cmp
inc
jno
dec
cmc
cld
or
bound
adc
push
frstor
xor
adc
or
push
in
cld
dec
fwait
pop
lcall
pop
cmp
cltd
inc
sahf
in
ss
pop
ret
mov
sbb
movsb
mov
fistpl
test
cmp
push
push
cwtl
xchg
lods
mov
pop
pop
inc
jle
push
sti
cwtl
fnstenv
imul
add
push
in
or
fcmovbe
fisttpl
ror
fnstcw
sub
insb
adc
shrl
into
iret
xor
pop
mov
push
enter
stos
iret
subb
inc
push
scas
push
dec
cmp
xchg
xchg
xchg
cmp
sub
outsb
lods
out
mov
insb
inc
test
rcpps
pop
mov
xchg
xor
out
push
adc
xchg
lock
sub
fldcw
sub
cmp
lcall
dec
roll
jne
out
adc
repz
mov
outsb
pop
jnp
dec
fstl
sbb
pop
pop
outsl
mov
outsb
dec
shrl
enter
mov
out
aas
rcr
mov
aad
lea
push
sub
mov
mov
loope
sub
mov
sub
mov
and
dec
movsb
lea
inc
adc
pop
add
mov
adc
ss
push
das
cmpsb
jno
std
or
addr16
leave
mov
aad
cmp
ljmp
mov
outsb
jno
sub
jbe
iret
cmp
inc
jp
xchg
push
adc
scas
and
mov
push
fidivl
scas
lret
lret
push
add
cmp
test
xchg
inc
mov
gs
pop
jg
test
push
shrl
mov
out
inc
lea
sub
xchg
stc
push
lret
call
jp
sub
add
xor
jo
aaa
push
cli
jl
sbb
jnp
inc
out
js
adc
shrl
lea
mov
adc
cltd
mov
jns
mov
xchg
inc
cmp
enter
mov
iret
dec
sub
mov
stos
jmp
icebp
inc
pop
push
jp
dec
cmp
jno
xchg
xor
mov
enter
pop
xchg
and
enter
out
sbb
adc
shll
lock
inc
loope
xchg
stc
or
cltd
test
mov
ror
arpl
nop
push
or
ljmp
mov
cmp
adc
les
sub
rcll
outsb
jno
push
pop
int
sub
ror
std
sub
mov
jo
test
inc
sub
jge
mov
add
ja
inc
dec
mov
in
mov
xor
jle
sbb
fwait
push
stc
jo
mov
pop
movsl
xor
hlt
push
in
push
jno
mov
push
cmc
cmc
xchg
xchg
stc
mov
sub
rorl
inc
cltd
leave
xchg
das
mov
xchg
aam
pushf
sbb
sbbb
mov
push
icebp
in
movsb
mov
pop
lahf
pop
daa
xchg
pop
lods
add
mov
pop
stc
mov
jg
test
inc
and
in
dec
xlat
inc
notb
pop
andl
rcrb
mov
xor
leave
xor
jne
test
mov
int
dec
push
test
push
aam
ficoml
outsl
cmp
jo
mov
push
out
mov
jo
negl
rcll
nop
xchg
mov
in
pop
dec
xchg
nop
test
addb
jp
lahf
aam
jno
pusha
rclb
in
adc
jp
test
insl
out
sub
pop
rcr
test
mov
cvtps2pd
adc
mov
les
icebp
stc
flds
adc
or
jo
mov
lcall
push
push
daa
add
mov
pop
cli
and
and
pusha
gs
ss
gs
jno
inc
fdivrl
and
repz
xor
sub
push
icebp
mov
enter
daa
push
mov
and
pop
addr16
pop
stc
repz
or
cmp
jo
arpl
pop
mov
fcoms
bound
xchg
jno
pop
repz
outsl
push
adc
iret
or
lods
adc
lcall
enter
mov
movl
mov
xchg
aad
rcr
pop
mov
push
popa
cmp
fdivrs
mov
sub
xchg
aad
in
daa
push
ss
loopne
jno
dec
or
push
mov
push
lcall
dec
pop
inc
cld
das
push
jmp
inc
push
inc
mov
addr16
fnsave
xchg
mov
dec
shlb
xchg
das
repnz
fwait
lea
scas
pop
adc
rorl
repz
or
jnp
push
sbb
mov
xor
push
pop
icebp
pop
push
addl
test
mov
int
push
insb
mov
cmpsb
in
pop
fcomps
sbb
lods
fs
das
push
testl
mov
icebp
int3
xor
sub
add
adc
push
mov
inc
inc
test
dec
mov
push
cwtl
cmc
loope
jecxz
sbb
into
mov
imul
push
xor
test
xchg
mov
nop
sub
out
xor
icebp
movb
rcl
pop
ljmp
xchg
cmc
and
dec
ljmp
and
decl
data16
xor
push
leave
jno
int3
pop
push
adc
fwait
cwtl
pop
mov
inc
push
mov
push
cvttps2pi
or
jecxz
push
push
fs
fsts
inc
aad
int
xor
or
inc
pop
ja
in
xchg
les
test
adc
enter
cmp
jo
popa
movups
push
rcr
mov
jo
daa
je
fwait
and
jl
xchg
adc
pop
fwait
or
adc
cmp
push
jle
loop
in
dec
push
ror
xor
cmp
and
push
dec
fnsave
orb
jo
sarl
outsl
sbb
int
in
outsl
nop
into
jmp
aas
mov
sbbb
movl
xchg
icebp
mov
out
xor
inc
outsb
pop
outsb
int
mov
xchg
mov
je
or
addl
ret
sub
add
daa
out
loop
call
jp,pt
loop
xchg
in
subl
stos
test
push
jmp
pop
idivl
mov
xor
lret
loop
scas
js
insl
dec
loop
dec
mov
je
mov
xchg
inc
cmpsb
mov
out
push
cmpsb
adc
sub
repz
repz
mov
arpl
aas
decl
ret
dec
pop
jge
ljmp
in
fistps
repz
push
adc
inc
and
lahf
xchg
cltd
int3
leave
mov
mov
aas
jno
mov
aas
movl
fs
cmc
sbb
xchg
sbb
jp
out
dec
xchg
outsb
pop
icebp
push
shrb
jno
addr16
lods
pushl
sub
cwtl
mov
and
jmp
push
into
lods
adc
cld
pop
lods
lret
ret
push
stc
stc
fmuls
fistpl
mov
mov
adc
jecxz
mov
mov
inc
adc
shlb
gs
cmp
or
aaa
push
push
cld
cli
ja
imul
mov
dec
test
lock
adc
mov
imul
aad
dec
lahf
mov
shrb
xorl
mov
mov
ja
fbstp
daa
movsl
sub
movsb
mov
mov
sbb
jmp
shll
push
hlt
pop
fs
jo
les
sbb
mov
insb
mov
xchg
pop
adcl
push
jbe
lret
ret
sbb
insl
jbe
dec
popa
pop
add
rcll
jb
iret
push
push
jecxz
fcomps
test
hlt
cltd
loope
imul
sbb
sub
repnz
fbld
jmp
cmc
stc
outsb
adc
push
jno
cs
push
mov
inc
inc
hlt
add
gs
push
fadds
mov
loope
fs
call
dec
cmp
fwait
pop
pop
cmc
xchg
clc
orps
jae
ud2
mov
sub
test
test
pop
add
pop
mov
sub
push
mov
jno
in
out
lret
orl
mov
push
pop
lods
pushf
fcomp
mov
imul
cli
rcrb
movsl
mov
iret
mov
xchg
jno
enter
cld
and
pop
sub
add
sbb
adc
leave
mov
fidivs
pop
popf
nop
sbb
rol
dec
sbb
jno
fldcw
icebp
cmp
adc
mov
divb
pop
aam
imul
bound
bound
shrl
inc
js
sti
pop
push
leave
ds
pop
xchg
pop
jne
shrb
in
insl
mov
xor
adc
mov
inc
sub
rcrl
sub
jno
mov
addr16
sub
add
push
inc
sti
scas
mov
arpl
jns
mov
es
sbb
jle
jp
int3
sbb
sub
aad
dec
jo
and
mov
mov
pop
add
adc
push
jo
movsb
leave
mov
dec
jbe
cmpsb
pushf
dec
das
lea
xorps
sbb
cmc
mov
das
in
out
les
addr16
ret
adc
cmp
imul
cmp
icebp
insb
adc
and
outsb
pop
mov
cmpsl
jno
aam
nop
sbb
icebp
leave
lcall
mov
or
mov
xchg
test
pop
mov
jno
out
cltd
cmpsl
mov
pop
adc
stc
ss
mov
popa
cmp
inc
push
cli
push
jo
addr16
add
icebp
add
in
int
add
inc
pop
adc
push
dec
dec
movsl
stc
dec
lock
gs
int3
mov
mov
repnz
cld
subl
adc
mov
mov
hlt
adc
xchg
push
xor
adc
dec
push
dec
sub
adc
add
xchg
imul
add
mov
shrb
int3
sbb
popf
icebp
xchg
mov
mov
add
repnz
iret
leave
fildl
movl
psubsb
fstl
push
imul
xchg
and
in
icebp
popf
into
jmp
int
lret
mov
push
punpckhwd
rcrb
sub
jno
add
testb
push
adc
push
movsb
scas
repnz
pop
dec
insl
in
jns
jl
push
cmc
pop
jno
add
movsl
push
orb
icebp
shrl
xor
mov
dec
cmp
jno
sbb
outsb
xor
adc
cmp
into
push
orb
leave
popa
sbb
pusha
sub
inc
movsl
popa
sbb
das
cmp
rolb
jbe
inc
jo
mov
mov
repnz
stc
movsl
adc
lods
add
les
cmc
sar
stos
aaa
enter
pop
imul
out
repz
cmc
cmp
stos
imull
mov
mov
retw
scas
push
inc
inc
adcb
loop
add
sub
addr16
in
insl
or
inc
or
addr16
dec
pop
xchg
xchg
into
mov
sar
or
cmp
pop
in
sub
sub
adc
xlat
xchg
mov
pop
lods
ss
mov
inc
repnz
ja
and
iret
push
rcr
dec
or
je
cwtl
popa
or
std
add
push
mov
popa
pop
shl
aad
outsl
lods
mov
push
cmp
cmpsl
adc
es
lds
xor
jo
push
iret
xchg
push
pop
scas
push
aas
jmp
das
test
jmp
aam
repz
movsl
aad
dec
mov
lahf
xchg
cwtl
lcall
push
push
loop
xchg
or
cld
push
fsub
xor
cltd
sub
sbb
inc
add
adc
sub
test
jmp
dec
push
sahf
inc
rclb
mov
push
mov
and
mov
pop
rcrb
mov
or
aad
out
cmc
fnstenv
mov
insb
cmp
push
dec
mov
pop
pop
fsub
loopne
pop
cmp
or
pop
xor
mov
jp
pop
inc
icebp
ret
repz
pushf
adc
mov
push
cmp
fisubl
je
jl
mov
push
mov
xchg
mov
push
subl
push
or
push
hlt
pop
movsl
popf
test
pop
aas
jo
jge
dec
das
out
sbb
dec
dec
add
fnstenv
leave
xchg
mov
lock
icebp
or
out
xor
xchg
pop
jge
xchg
inc
and
mov
cmp
jb
or
jne
jge
cmpsb
shrl
ljmp
sub
mov
aas
adcl
inc
shll
pop
pextrw
movsl
xchg
cmp
pop
sbb
lods
mov
js
push
ret
jae
sarb
lret
jg
nop
je
loope
jge
stc
adc
jge
jge
pop
inc
loope
add
aad
fistps
dec
fdivrs
push
xor
lock
fnstenv
xor
cmp
rolb
push
sbb
adc
movsl
stos
test
adc
pop
mov
enter
dec
vmread
pop
cmp
pop
sbb
in
fnstenv
pop
adc
add
sub
repz
aad
call
cwtl
or
pop
mov
es
mov
in
dec
ds
push
sub
jg
lret
push
vrsqrtps
loopne
pop
jp
cltd
xchg
mov
cmp
inc
adcl
std
insb
neg
sbb
fidivl
mov
jne
adc
mov
aad
imul
addr16
jbe
movsl
adc
aad
arpl
pop
xor
adc
push
cmp
fadds
movsl
stc
xchg
jbe
out
sbb
xchg
pop
in
xchg
lds
cmp
push
add
pop
aad
fnstenv
in
je
mov
xor
decl
rol
aad
xchg
add
call
push
and
insb
jnp
ret
mov
cmp
xor
lea
sub
jl
inc
jg
push
lods
imul
mov
das
fidivs
cmp
addl
pop
addr16
lahf
xor
pop
dec
cmp
jae
fsts
pop
testl
jne
cmpsb
jo
repnz
mov
push
out
pop
stos
loop
lds
push
mov
sbb
and
xchg
add
cmp
les
orb
pop
out
fimull
popf
pop
pop
mov
sbb
push
and
lds
mov
push
lea
jnp
int
pop
popa
pusha
outsl
mov
pop
int3
xor
xchg
test
enter
fcompl
std
sub
mov
mulps
xlat
fs
add
adc
leave
mov
adc
and
push
cmp
adc
xchg
fsubl
fcmovne
fnstcw
repnz
mov
ds
pop
push
pop
pop
inc
imul
or
roll
sub
pop
leave
repz
inc
and
pop
int3
repnz
mov
xor
cli
pop
rclb
insl
aaa
inc
pop
mov
jmp
pop
mov
out
add
cmc
and
ret
icebp
ss
mov
je
pop
adc
adc
cmp
out
pop
mov
push
inc
nop
sub
push
xchg
loop
pop
sub
test
pop
fidivrl
pop
push
in
ds
jb
push
xchg
inc
mov
mov
sbb
and
jle
xchg
cmpl
cltd
cmp
inc
inc
adc
inc
adc
scas
pop
imul
out
les
sti
push
mov
sbb
push
fcom
cwtl
inc
jle
fildll
xlat
fcompl
add
mov
and
or
andb
xor
xchg
cwtl
inc
or
add
pop
rcr
mov
int
and
negl
cmpsb
xchg
imul
les
or
pop
stos
lods
stc
imul
dec
xchg
les
orl
inc
inc
setl
sub
loop
xor
add
sbb
push
jmp
data16
fcomps
pop
sub
pop
out
in
outsl
jne
push
testl
nop
dec
adc
shrb
xor
out
adc
pop
sbb
jno
nop
or
pop
test
xchg
cmp
inc
pop
cld
in
dec
out
mov
mov
sbb
push
xchg
xchg
call
fdivrs
cmp
mov
insb
jl
pop
enter
jle
xchg
pop
sti
lahf
push
lea
inc
cmp
out
sbb
and
rclb
xlat
aam
sbb
sbb
cmpsb
mov
out
sbb
inc
cmp
fld
mov
loope
dec
movl
inc
sub
or
xlat
pop
ss
mov
xchg
add
daa
aam
cmp
mov
mov
push
cmp
adc
sub
or
adc
bound
inc
inc
adc
mov
xchg
leave
pop
inc
data16
test
enter
cmp
cs
ljmp
out
xchg
fdivrl
xor
mov
sbb
mov
jne
push
xchg
xorl
sbb
aam
leave
inc
push
sub
inc
out
cltd
rclb
cmp
or
lods
shll
pop
cmp
dec
fstpt
fidivrl
lds
pop
mov
mov
xchg
pop
pop
ds
das
pop
test
ret
mov
sub
sub
pop
push
xchg
movsl
mov
cmp
call
sti
insl
mov
hlt
pop
xchg
or
test
adc
pop
cmp
jnp
into
dec
test
push
fs
xchg
fnstcw
imul
cmp
arpl
pop
push
jle
jb
icebp
xlat
into
pop
pop
roll
sub
sbb
add
mov
pop
ja
xchg
push
inc
push
mov
adc
add
push
sbb
ljmp
add
ds
mov
xchg
nopl
out
movsl
pop
gs
pop
idivb
js
pop
adc
pop
or
mov
xor
sbb
icebp
das
dec
cmpsb
movsb
xchg
push
pop
mov
sbb
cltd
adc
xor
imul
lods
pop
aas
sub
insl
and
clc
adc
cmpsb
shr
ds
mov
dec
lds
mov
and
pop
inc
call
push
pop
adc
pop
sub
ret
roll
jle
dec
test
lcall
cmp
jmp
inc
cmp
and
rcrb
js
out
pop
lahf
mov
aad
pop
rclb
mov
cltd
outsl
or
jbe
jae
mov
lahf
xchg
call
mov
cmp
push
xchg
hlt
xlat
push
addb
outsb
adc
rcrl
pop
xchg
xor
push
dec
xchg
pusha
adc
push
in
rcl
sbb
lret
negb
data16
cld
imul
dec
add
mov
dec
add
inc
orl
paddb
in
pop
jp
push
jo
idivb
rcll
adc
movsb
xchg
lret
pop
xor
lahf
call
or
cmp
leave
xchg
lcall
inc
ret
sub
dec
mov
cmpsl
push
adc
push
sub
gs
cmc
dec
and
fildl
stos
in
push
ds
cmpsl
xchg
push
dec
pop
push
addb
popf
cltd
das
and
pushf
mov
mov
aaa
mov
test
mov
mov
sub
mov
out
adc
pusha
and
mov
add
jae
dec
sbb
test
jl
iret
push
insl
cmc
pop
fcompl
popf
add
stos
push
jbe
test
mov
mov
xor
inc
adc
and
test
mov
icebp
push
dec
daa
int3
lea
sbb
xlat
or
pop
push
or
sbb
repnz
or
inc
lcall
push
and
imul
xchg
and
mov
out
and
xor
jb
jo,pn
dec
negb
sbb
pop
pop
xchg
push
fs
jb
sbb
pusha
xor
xchg
ret
add
inc
xchg
push
stos
sub
adcb
lret
inc
mov
xor
cmp
idivl
cld
cmp
in
push
push
stos
out
add
xchg
cli
adc
in
mov
xor
xchg
xor
pop
scas
ret
icebp
sarb
orb
xor
cmp
ficoml
pop
call
std
or
push
or
stc
sbb
push
mov
jnp
cmp
inc
adc
lret
push
jge
jb
test
out
sbb
pop
adc
mov
pop
xorb
lea
cli
and
aad
flds
and
pop
xor
dec
adc
or
data16
push
add
sub
sbb
mov
push
subps
sub
mov
cmp
jo
shl
xchg
inc
call
xor
mov
pop
mov
faddl
in
add
and
fldln2
cmp
push
push
push
mov
and
push
jecxz
jmp
mov
or
pop
outsb
xor
adc
cmp
loop
mov
dec
ds
fldl
mov
dec
pop
leave
inc
sbb
in
mov
push
and
mov
pop
enter
sub
push
mov
inc
inc
inc
repnz
adc
adc
in
lds
std
cmc
inc
in
sbb
movsb
pop
dec
cli
jnp
rcr
inc
jl
pusha
jns
arpl
int3
add
mov
xchg
mov
notl
cmp
sbbl
dec
xlat
cli
pop
loopne
popa
mov
jno
or
popa
dec
lret
int
sbb
push
pop
popa
cmp
or
pop
or
sub
fcompl
lret
push
loop
cmp
imul
add
mov
aad
mov
setl
sub
or
xor
pop
jmp
pop
and
inc
stc
inc
dec
inc
or
lret
scas
and
pop
pop
sbb
leave
inc
mov
xchg
or
rcrl
leave
cmp
xor
mov
dec
and
sub
out
cmp
gs
cmp
push
and
push
mov
cmp
sbb
push
sub
fisttpll
push
sub
pop
mov
fdivs
add
mov
jo
dec
and
adcb
jne
bound
ficompl
jb
pop
xchg
push
or
push
sbb
and
pop
jmp
sbb
pop
stc
icebp
sbb
sub
cmpsl
daa
pop
es
and
sbb
xor
inc
cwtl
pop
sub
inc
and
cs
sbb
pop
sbb
es
fstps
and
leave
test
jno
sbb
daa
orl
xor
cmpb
and
and
adc
aad
les
mov
leave
pop
stc
and
mov
js
xor
jecxz
push
xor
sub
mov
inc
pop
adc
rcrl
push
or
sbb
mov
sbb
or
mov
dec
andl
pop
and
and
push
or
cltd
dec
and
sub
sub
leave
or
scas
pop
lcall
and
and
cmpsb
imul
sbb
mov
fldl
and
cwtl
pop
mov
push
push
and
and
pop
or
push
mov
sbb
sbb
xor
sub
ja
and
popa
cmp
and
aaa
jl
inc
ret
aaa
cltd
imul
and
fidivs
dec
and
and
sbb
and
adc
pcmpeqb
dec
dec
xlat
inc
mov
nop
scas
mov
daa
cmp
test
sar
and
cmp
xor
cli
pop
out
inc
push
sbb
cmp
and
push
and
jae
gs
adc
cmp
lds
daa
adc
dec
es
and
xor
loopne
stc
and
adc
jno
and
pop
dec
xchg
and
sbb
sbb
dec
sbb
negb
ret
nop
rcll
or
daa
xor
mov
cmp
push
aad
lds
stc
stc
push
xor
sub
shrb
xor
daa
adc
mov
xorb
push
jmp
dec
sub
es
lds
out
enter
sbb
cmp
sbb
sbb
rcr
xor
pop
insb
daa
pop
es
and
jbe
inc
and
add
adc
lods
popf
xor
mov
and
mov
add
rcrl
cmp
es
ja
fldenv
cmp
outsb
push
stos
and
sbb
int
bnd
jmp
repnz
inc
sbb
ljmp
adc
sub
aad
xchg
aad
pop
xchg
xor
jmp
fsubl
ret
aaa
fwait
adc
in
xor
sbb
and
mov
sbbl
setae
sar
bt
push
call
adc
jb
fldt
repnz
add
sub
jge
stc
js
aad
stc
jae
sub
jnp
bound
enter
lret
mov
int3
and
jb
movsb
pop
mov
mov
sub
mov
xchg
jo
lods
or
push
js
or
add
mov
cmpsb
inc
mov
call
xor
popf
into
std
decl
test
roll
add
call
imul
and
xor
fcompl
sbb
bound
add
out
icebp
dec
xchg
push
in
fbstp
imul
scas
adc
push
jmp
sbb
inc
stos
sti
push
js
pop
out
add
dec
sub
lds
jno
push
jne
stos
push
or
cmpsl
xor
rcpps
loopne
out
jmp
sbb
popf
lods
adcb
sti
lock
push
jb
push
psraw
bound
jl
ljmp
xor
fsubr
scas
and
je
cmc
stc
cmc
pushf
cmp
push
call
lea
je
pusha
pusha
lea
jmp
adc
pushf
pushl
push
movw
lea
jmp
lea
jo
or
pusha
lea
je
pusha
call
jmp
clc
cmp
push
push
call
mov
das
and
lods
jb
xchg
mov
rol
push
cmpsl
cwtl
testl
ja
cwtl
pop
aas
lret
cli
sbb
xlat
dec
lods
xor
call
ljmp
clc
jnp
mov
and
test
pop
loop,pn
mov
xchg
insb
inc
push
call
je
bt
pusha
sub
jmp
pushf
lea
je
call
jmp
call
jmp
pop
mov
pushf
pushl
mov
seta
movsbw
movzbw
jmp
add
dec
xchg
enter
in
dec
out
pop
push
mov
mov
dec
cmp
faddl
sub
movsl
cmpsl
and
xchg
sar
fmul
ret
and
push
jmp
ds
cs
std
jmp
mov
push
repz
inc
inc
negb
dec
addl
aaa
or
inc
inc
hlt
out
mov
dec
jno
imul
jno
aam
or
push
push
sbb
popl
rclb
sahf
sar
pop
add
xchg
lcall
pusha
enter
rolb
adc
sub
inc
pop
cmp
mov
adc
jb
aas
add
test
xchg
add
scas
and
dec
les
lcall
js
in
outsb
das
popl
pop
jp
fld
xchg
lret
or
call
mov
sbb
and
cwtl
les
pop
pop
jle
mov
mov
rcll
js
mov
mov
adcb
or
enter
idiv
mov
or
cmpsb
neg
xor
and
add
mov
lret
mov
add
out
add
in
fs
imul
dec
mov
add
in
sbbl
jmp
loope
lret
fsub
mov
adc
xor
loopne
mov
mov
dec
shl
xchg
test
jno
jae
jae
test
inc
js
lods
sbb
je
cli
in
lret
pop
jge
sub
fsubs
in
mov
mov
movsb
cmp
cwtl
cmp
mov
in
mov
inc
push
cmc
add
outsb
mov
push
mov
dec
xlat
arpl
lcall
out
xor
and
stos
pop
mov
xor
and
call
shr
call
fs
jo
lea
jmp
pushf
pushl
pushl
lea
ja
cmc
test
sub
shld
push
sbb
push
add
add
cmp
movsbw
mov
call
and
sbb
xor
sub
xchg
daa
sub
cmp
push
xor
xchg
xor
adcl
psllq
push
lods
rcr
add
mov
mov
add
fsub
rorb
or
mov
decl
and
ja
jmp
add
xor
jl
in
out
pop
nop
popa
hlt
cmpsb
mulb
mov
sbb
jbe
out
inc
mov
mov
popa
xchg
sub
imul
fwait
in
add
pop
add
out
add
mov
lcall
mov
pop
mov
test
xor
push
movsl
pop
xor
hlt
call
int3
call
add
lea
jb
mov
pushf
pusha
mov
mov
lea
jmp
pusha
xchg
bt
rcr
lea
cmp
mov
sar
cmp
xchg
neg
mov
sbb
mov
mov
shl
mov
bt
shld
shrd
mov
adc
mov
add
mov
cmc
bt
call
movl
pushf
call
inc
mov
cmp
and
call
imul
xchg
xchg
adc
or
fsubl
pop
ss
fldl2e
mov
dec
shll
aas
bound
subl
insb
xor
push
loop
mov
test
call
mov
bound
hlt
xchg
xchg
movsl
dec
sub
sarl
push
in
fadds
push
mov
in
mov
jmp
roll
insb
mov
out
add
mov
stc
jmp
mov
push
sub
lods
fs
bound
xchg
cmp
mov
in
rcr
add
stc
loopne
mov
sbb
loope
dec
inc
push
scas
ret
add
fsubrp
fsub
cmpsb
sbb
lock
add
add
pushl
add
lods
dec
xchg
or
incl
out
stc
adc
adc
decl
add
pushl
push
xchg
push
adc
adc
ljmp
add
add
add
enter
add
incl
jmp
adc
sti
inc
or
sub
subl
adc
sbb
sub
add
incl
int3
jmp
adc
ret
add
adc
incl
cld
push
inc
icebp
popf
and
adc
incl
repnz
add
mov
sbb
adc
incl
cld
call
add
std
push
mov
adc
incb
dec
xor
and
sub
mov
incl
xor
inc
test
adc
incl
stos
push
jnp
adc
pushl
add
ljmp
fcoms
add
mov
add
incl
sbb
incl
pushl
add
incl
cmp
in
test
faddl
adc
std
cmp
cld
aam
adc
cld
xchg
repz
sub
adc
jle
int
add
stc
cld
mov
cmp
push
std
push
test
adc
incl
popa
push
out
adc
sti
jnp
int3
call
incl
pop
ret
add
incl
mov
dec
xchg
mov
incl
outsl
ljmp
in
subl
add
add
add
pushl
mov
icebp
add
call
and
xlat
int3
add
decl
popa
out
adc
sti
sbb
dec
jl
xchg
mov
call
das
fwait
or
out
dec
xor
mov
nop
mov
fmuls
xchg
scas
jg
out
rclb
decb
out
dec
sahf
xchg
dec
jo
repnz
sahf
cmpsl
push
sub
jnp
push
test
outsb
add
fwait
jne
imul
mov
shlb
dec
out
add
lahf
aad
jge
jecxz
bound
sti
jl
cmp
mov
inc
xchg
enter
fs
pop
ret
jno
lock
inc
in
cmp
add
aas
mov
movsb
or
fsub
test
and
call
mov
push
jmp
pushf
xor
sbb
mov
lea
pusha
cmpb
jmp
mov
pop
mov
addr16
push
mov
jecxz
inc
fnstenv
cmpsb
dec
out
pusha
iret
pop
xchg
das
scas
push
dec
jae
push
or
loopne
mov
mov
icebp
jb
in
hlt
fucomp
fdivr
outsl
mov
dec
xchg
out
cmp
jne
inc
sub
dec
test
push
mov
mov
push
mov
adc
sub
ljmp
adc
sub
js
adc
std
decl
push
jecxz
aaa
insl
jecxz
ljmp
xchg
push
jbe
rcrb
pusha
mov
stos
out
dec
movsb
cmp
jnp
call
push
cmp
or
call
out
outsl
lahf
sbb
fistps
pushf
outsb
in
pop
lret
pop
cmp
inc
mov
cwtl
cli
push
lret
push
inc
imul
push
test
orl
adc
int
loope
add
test
cli
stos
negb
jl
sbb
iret
loopne
xchg
adc
imul
and
xor
push
loop
sbb
jbe
imul
lods
cld
push
pop
test
addr16
pop
imul
shlb
andl
js
aas
pop
sbb
mov
hlt
cmp
cmpsl
sbb
clc
clc
test
cmp
pushf
pusha
lea
jae
bt
xchg
cmp
mov
bts
mov
and
not
xor
mov
test
sub
cmc
cmp
pusha
bt
repnz
call
clc
mov
shl
pushf
lea
je
pushf
mov
movb
push
push
mov
movzbw
pushl
movl
lahf
pushf
lahf
lea
call
pusha
pusha
lea
jne
call
sbb
xadd
mov
rol
add
bsr
shr
sub
sub
sub
jmp
jle
mov
xchg
pop
insl
and
push
mov
jbe
add
pop
or
out
mov
fsubrp
test
lret
dec
and
std
popa
mov
or
insl
xlat
dec
mov
sbb
fcmove
loope
adc
mov
and
pop
test
insb
pop
xchg
stos
js
mov
push
mov
repnz
fdivl
inc
fcoml
popfw
adc
repz
mov
mov
or
sti
jg
push
push
pop
test
inc
iret
jmp
clc
cwtl
rolb
or
stc
scas
in
rol
mov
adc
shrl
inc
xor
pushf
and
jp
push
loopne
clc
dec
int3
movsb
ds
imul
jns
push
inc
jecxz
fmulp
sub
jg
clc
js
xor
push
ror
jp
xchg
mov
push
aad
scas
aas
cwtl
cmp
filds
imull
pop
mov
push
test
xchg
add
cmp
add
and
inc
cli
jno
xchg
je
mov
pop
inc
mov
sub
mov
repz
mov
jne
jg
test
and
int
pop
xchg
ret
popf
lock
aaa
push
xor
fstps
dec
aam
js
sbb
daa
std
push
rep
aas
xchg
dec
lahf
jae
jg
or
call
pushl
repnz
pushf
movl
call
call
xor
add
mov
or
sbb
jno
add
cmp
lock
shl
xchg
pushf
mov
mov
ss
mov
fbld
xchg
out
mov
mov
scas
gs
push
in
jns
cmp
sbb
push
gs
std
sbb
adc
xchg
cld
add
add
adc
jge
test
je
fdivl
call
js
fs
je
stc
add
cmp
cmp
call
cmp
call
pushf
lea
call
pusha
pushl
lea
jae
pushf
pushf
mov
pusha
call
pushf
dec
call
push
jmp
push
call
lea
jb
cmc
cmp
pusha
pushf
lea
jae
btc
lea
pusha
setp
mov
rcr
dec
shld
bts
mov
or
mov
pushl
xor
clc
clc
jmp
lea
je
sbb
call
call
hlt
mov
aas
shll
pop
xor
cmp
int
or
je
mov
mov
imul
push
out
add
mov
or
stos
mov
lcall
xchg
shl
mov
lret
mov
dec
add
mov
xor
push
neg
mov
push
test
push
jmp
add
pushl
movb
lea
jmp
sub
in
shlb
mov
adc
imul
mov
cwtl
out
and
and
mov
test
cltd
in
int
lds
push
movsb
sub
xor
imul
sbb
mul
imulb
dec
push
and
inc
add
shrl
xor
add
testl
in
sub
sahf
int
dec
xor
dec
sbb
jle
cmpsl
pop
adc
call
lods
fldt
out
dec
icebp
movsb
adc
push
cmpsl
sbb
mov
into
push
xor
jno
jg
dec
add
xor
push
subb
mov
jecxz
movsl
cld
ficomps
popf
insb
test
add
andl
pusha
divps
andb
fistps
jnp
testl
pushf
mov
nop
mov
pop
mov
dec
xor
repnz
sbb
addb
test
mov
and
inc
mov
ror
int
push
out
test
xchg
jbe
adc
pusha
mov
hlt
popf
das
adc
scas
add
and
lods
test
mov
xlat
cmc
out
xor
pusha
mov
pop
imul
int
in
mov
lea
jae
push
mov
lea
jmp
adc
fs
insl
and
mov
insl
in
out
dec
mov
daa
rcl
inc
mov
push
dec
dec
clc
xor
add
rcrl
push
test
enter
mov
cmp
outsl
jnp
out
popa
xchg
add
dec
in
popf
loope
inc
add
or
inc
out
and
mov
scas
arpl
call
pop
sub
lret
arpl
sbb
cmp
mov
sub
adc
lods
loop
xor
xchg
cmp
jb
mov
pop
mov
ret
xchg
sbb
cli
push
cmc
sbb
push
push
jno
add
daa
outsl
ss
cmp
xchg
cltd
add
stos
dec
aad
cld
push
push
loop
pop
lods
es
cld
add
jg
adc
mov
add
mov
daa
ljmp
xor
ljmp
negl
lahf
rorb
add
dec
rclb
mov
hlt
ljmp
and
jmp
test
stos
std
out
jp
mov
and
inc
add
std
lods
pusha
push
lret
sbb
push
and
xor
lods
add
call
adc
cwtl
add
stc
jbe
mov
lods
dec
rclb
pop
jg
add
in
sub
int
sub
test
push
stos
xchg
mov
int3
pop
ljmp
push
xabort
fdivrs
ja
xlat
andps
sbb
in
xchg
dec
out
inc
xchg
mov
xchg
fs
inc
movsb
cmp
mov
aad
out
pop
jne
imul
pusha
pop
or
jbe
pop
shr
push
push
push
mov
leave
add
pop
pop
or
and
imul
popa
and
stos
and
and
jnp
pop
pusha
inc
ret
push
push
insb
ja
test
mov
or
jns
fistpl
test
fisubl
mov
inc
sub
jmp
daa
and
hlt
clc
jge
mov
sbb
cmp
push
push
push
stos
adc
movsb
daa
out
pop
out
add
adc
jne
ljmp
xor
pusha
jmp
jmp
mov
pushaw
shl
lods
jb
inc
in
ja
pop
int
push
scas
pop
sub
or
aas
es
push
push
xor
fstps
in
push
in
lods
fisttps
pop
jge
push
xchg
jg
sahf
nop
inc
fwait
das
inc
pop
outsb
and
xchg
call
push
or
dec
and
push
push
push
call
enter
inc
xchg
sub
sbb
push
mov
gs
or
lock
dec
jmp
clc
in
shl
adc
cmp
in
div
stos
mov
cli
shl
adc
in
ljmp
xor
iret
pusha
jle
outsb
ret
push
adc
shrb
dec
mov
mov
mov
icebp
dec
cmp
aad
adc
or
cmp
testb
dec
pop
pop
push
and
ds
inc
dec
hlt
dec
push
sub
orl
in
xor
test
pop
aaa
dec
out
push
and
sbb
xor
add
xor
push
cmpsb
pop
mov
sub
and
loope
jne
cmp
cs
jno
sbb
sub
clc
out
rcrl
stos
pop
mov
mov
cltd
sub
out
divb
xchg
cs
dec
sub
clc
in
jg
ud2
repnz
or
add
sub
or
jp
push
rol
mov
pusha
push
dec
push
sub
mov
xor
js
out
push
mull
cmp
fwait
mov
es
add
xchg
mov
adc
and
bound
sub
jbe
push
cmc
sub
sbb
dec
adc
sub
dec
mov
dec
push
push
sub
lds
testl
mov
sbb
cld
pop
arpl
xchg
fnstcw
arpl
mov
test
jp
inc
adc
push
inc
lahf
int
add
inc
or
int
xchg
enter
es
sbb
and
pusha
pop
and
sbb
imul
cmp
clc
and
in
icebp
in
xchg
cmp
sbb
dec
push
test
dec
insb
imul
xor
fldcw
fsubrs
pop
mov
lret
dec
dec
push
push
or
mov
inc
ret
xor
push
aam
adc
cmp
shlb
dec
adc
cmp
es
cs
pop
adc
fnstsw
xor
dec
xor
leave
mov
mov
dec
movsl
rcll
cmp
xchg
xchg
cmc
mov
dec
xor
push
leave
jge
cmp
gs
mov
std
daa
roll
dec
insl
rcll
in
rcll
cmpl
mov
adc
dec
inc
rcll
aad
xor
cmc
cmc
daa
lea
dec
lods
rcll
or
xchg
cltd
cmc
and
dec
sub
push
popa
cmp
jno
dec
cmc
jns
mov
jne
mov
rcll
int
icebp
leave
fsts
inc
dec
sbb
outsl
push
leave
nop
fists
and
push
dec
pop
ja
or
in
loopne
xor
out
and
out
int
pop
lea
and
pminsw
push
or
jbe
dec
outsl
stos
fldcw
or
push
mov
bound
xchg
pop
or
dec
mov
stc
xchg
test
in
loopne
adc
adc
out
inc
lea
pop
pop
mov
mov
inc
repz
push
xor
xor
and
cld
loop
dec
or
das
push
sbb
adc
pop
xor
popf
sub
push
ljmp
add
sbb
mov
bound
cmpsl
push
movsl
jns
dec
push
mov
or
dec
pop
push
fcoms
hlt
dec
cmp
push
push
dec
cmp
jbe
cmpsb
jno
mov
je
sub
inc
enter
add
and
imul
div
out
cmc
in
jbe
das
int3
mov
sbb
dec
imul
div
lea
dec
xchg
negb
insl
inc
es
loope
push
aad
aam
fs
mov
push
adc
or
cmp
inc
jmp
mov
stc
inc
mov
inc
iret
test
hlt
cmc
es
in
xchg
div
xor
mov
negl
cmp
push
out
mov
gs
and
sub
fstps
pop
xchg
xchg
lock
inc
repnz
dec
dec
pop
dec
leave
aas
jmp
std
inc
push
xchg
xor
mov
mov
push
jg
stos
shll
inc
adc
iret
cmp
xchg
and
call
xchg
fldl
fsubr
xor
jo
push
ss
sbb
adc
dec
js
adc
popa
aaa
stc
wbinvd
push
mov
repz
std
push
sbb
adc
and
adc
repnz
pop
fldl
pop
or
repz
inc
adc
fldt
into
inc
pop
inc
outsl
fsubrs
push
sar
clc
push
out
mov
jecxz
not
or
add
dec
icebp
push
or
jns
cmp
jbe
push
cmp
mov
pop
adc
cli
inc
push
test
dec
nop
lret
push
lods
push
or
sarl
push
push
sub
rorl
pop
dec
movsl
sub
sbb
dec
fstps
leave
sub
jns
push
in
inc
xchg
rcrb
lahf
mov
aad
das
pop
adc
icebp
pop
jb
mov
packuswb
test
sbb
cwtl
movsb
pop
adc
mov
sub
pop
pop
pop
mov
mov
call
or
cltd
adc
in
hlt
jecxz
jmp
cmp
repz
add
jl
outsb
cmpsb
cmc
mov
std
popa
pop
and
and
sub
or
and
xchg
aaa
push
adc
cmc
push
mov
daa
jge
stc
fs
add
int
iret
mov
xor
push
cmp
hlt
out
aam
es
cmp
or
ss
das
rcrb
add
dec
cltd
push
in
pop
jns
movsl
jne
add
fucomp
mov
test
out
vcvtss2si
mov
push
and
xor
aaa
dec
jg
sub
lea
or
dec
cmp
push
dec
shrb
in
in
jns
mov
lret
fstl
inc
dec
fmuls
push
mov
hlt
test
xchg
shll
sub
lret
dec
cmc
out
dec
fbstp
pop
pop
aad
and
xor
mov
xor
dec
pop
aas
cmc
mov
inc
push
dec
push
jno
je
leave
sbb
jo
mov
ss
clc
xor
add
dec
add
sbb
jmp
pop
xchg
pop
and
rclb
in
xchg
loop
inc
loope
or
dec
divb
adc
add
sbb
mov
clc
cmp
std
inc
or
pop
pop
hlt
adc
in
mov
dec
or
in
cmp
mov
lret
icebp
lods
sub
frstor
in
in
loop
xor
out
sub
daa
lea
outsb
xchg
jbe
push
loopne
insl
in
mov
sar
cmp
jb
icebp
negw
xor
pop
sbb
dec
xor
pop
and
jmp
in
and
cmp
popf
cmp
mov
push
sub
mov
or
cmp
xor
aas
or
shll
dec
adc
popf
xor
push
mov
mov
dec
mov
add
or
push
lea
add
insl
aaa
dec
icebp
out
xor
mov
shlb
cwtl
sub
addr16
lods
xchg
adc
popa
dec
sbb
arpl
pop
pop
push
or
cmp
push
or
xchg
push
orl
int3
adc
lcall
adc
and
inc
adc
or
adc
sub
cli
inc
mov
dec
ljmp
cmp
mov
dec
aam
loopne
and
int3
add
or
leave
inc
mov
pop
loope
mov
add
popf
and
ror
mov
mov
mov
push
orl
adc
inc
mov
outsb
pop
xor
pop
push
in
pop
sub
cmp
mov
inc
jns
push
dec
pop
gs
cli
sti
leave
inc
pop
dec
sbb
into
je
xchg
rolb
adc
scas
pop
sbb
inc
sub
and
mov
imul
xchg
dec
jns
shrb
xchg
jbe
in
cmp
into
dec
push
decl
inc
mov
jge
or
lea
call
popf
idivb
push
shll
loope
pop
leave
dec
icebp
xchg
add
mov
inc
cmove
mov
daa
in
icebp
mov
stos
scas
sub
into
sbb
insl
inc
mov
add
inc
jle
push
xchg
inc
fmull
fwait
cld
sub
add
push
mov
leave
cmp
or
cmpb
cmc
loopne
and
sub
or
pop
adcb
and
aam
icebp
in
divb
jns
cmp
or
aas
jge
dec
ficomps
inc
pop
dec
into
push
and
icebp
aad
xchg
in
rcl
cltd
aam
xchg
jnp
push
cmp
lcall
lods
adc
xor
push
sbb
popa
push
sar
inc
faddl
push
in
jnp
push
lods
mov
mov
mov
orb
adc
cltd
mov
and
or
lret
daa
test
popa
mov
enter
sub
adc
sub
lds
push
add
iret
into
les
pop
and
leave
std
xor
sub
aam
int3
dec
cmp
mov
into
sbb
cmp
sbb
or
loop
xor
jmp
mov
cmp
adc
inc
cmp
ja
cmp
lods
ja
lret
cmp
add
dec
push
and
out
dec
xchg
add
cltd
hlt
cmp
test
in
enter
xor
push
out
push
xor
sub
inc
movsl
adc
cmovno
push
or
out
insb
inc
out
add
les
iret
mov
inc
test
add
xlat
rcl
aaa
jl
aam
test
push
adc
ljmp
mov
mov
push
outsb
push
sub
mov
mov
outsl
cmp
gs
sbb
push
add
pop
pop
xor
add
fcoml
adc
outsl
icebp
jge
pop
cmp
inc
fs
push
shll
mov
outsl
lods
sbb
outsl
add
mov
loope
add
out
aaa
inc
mov
xor
outsl
xchg
dec
pusha
lds
ss
or
mov
loope
cmp
rcll
iret
lcallw
add
int3
les
or
into
and
dec
adc
into
cmp
icebp
sahf
push
and
xor
pop
sub
icebp
les
shrl
js
push
lock
jl
cld
fwait
push
mov
rol
push
sub
movsb
mov
lods
adc
fbld
push
mov
outsb
add
pop
sbb
aad
aam
push
adc
inc
movsl
dec
mov
dec
add
or
push
sub
sti
enter
lret
mov
leave
sub
in
or
inc
into
in
xchg
in
dec
lret
pop
xchg
jae
add
push
fwait
dec
es
pop
das
jno
push
jne
sbb
into
sbb
mov
cmp
mov
mov
jns
mov
imul
mov
or
sub
popf
clc
enter
jno
cmp
dec
fsts
test
mov
xorl
testb
cmp
popf
and
mov
popa
add
icebp
cli
sarl
pop
enter
adc
and
sub
pop
leave
imul
int3
jno
test
int3
cmpsl
ret
fs
int3
cmc
push
mov
inc
pop
pop
xchg
fldcw
popf
lret
lea
rcll
mov
adc
popa
dec
push
sub
inc
adc
inc
pushl
or
fld
dec
adc
inc
cmpsl
xor
shrb
push
sub
lea
sbb
xchg
dec
mov
push
add
inc
shl
inc
push
lds
movsl
enter
adc
sub
aaa
and
mov
mulb
aaa
inc
lock
push
adc
mov
stos
aaa
mov
call
inc
adc
push
adc
ljmp
out
cmp
jmp
cmp
mov
push
aad
xor
insl
lock
in
and
and
jb
enter
jecxz
mov
cmp
push
mov
jb
gs
push
jne
iret
es
daa
stc
xchg
mov
mov
inc
add
inc
add
pop
rcrb
mov
cmp
or
push
test
cmc
ja
xor
repz
xor
adc
jmp
pusha
lock
sbb
jmp
pop
in
xchg
call
push
or
hlt
out
popf
push
imulb
insl
test
adc
in
addr16
jnp
and
adc
mov
repnz
pushf
arpl
xlat
movsb
cs
lock
pop
cmp
stos
lods
inc
out
das
leave
cmpsl
test
mov
lods
or
in
in
and
hlt
loope
adc
lods
aaa
jmp
movsl
scas
mov
testb
dec
sbb
xor
pop
je
fnstcw
lods
sub
dec
jns
sub
dec
xchg
shlb
inc
test
sub
pop
mov
push
filds
push
inc
xor
enter
sbb
imul
sbb
sub
dec
aaa
jmp
rcll
fsts
clc
sub
inc
pop
mov
jo
add
dec
adc
pop
inc
adc
cmp
dec
adc
xor
aam
movsl
dec
sbb
mov
lods
gs
enter
adc
mov
jmp
or
push
and
out
sbb
or
mov
inc
push
stos
inc
or
and
sub
pmuludq
and
inc
pop
mov
push
or
mov
xlat
or
xchg
aaa
dec
in
or
testb
daa
push
sub
add
test
das
arpl
cmp
push
sub
ror
test
in
popf
hlt
insb
in
sbb
aas
shll
sbb
inc
mov
cmp
sub
and
or
cmp
rcrb
adc
cmp
sub
imul
or
arpl
sub
out
mov
pop
push
sbb
inc
dec
call
add
mov
push
push
inc
push
mov
or
push
movsb
or
cld
jbe
dec
push
jmp
inc
dec
dec
jns
push
cmpsl
imul
insb
mov
sbb
popa
sbb
adc
dec
xchg
fiaddl
sub
push
nop
xor
xor
fsts
jne
pop
imul
dec
rcll
mov
fcoml
pop
pop
cmp
dec
dec
cmp
dec
fidivrl
jmp
jbe
out
cmp
imul
xchg
dec
xchg
push
pop
lret
push
pop
cmpsb
cwtl
and
sub
xchg
int
mov
push
cmp
xor
push
test
sbb
push
loope
pop
scas
pop
pop
or
push
sub
lods
enter
fcoms
push
jns
dec
push
ficoml
test
cmp
xchg
dec
popa
sbb
les
insl
cltd
int3
std
js
pop
outsb
insb
pop
jb
popf
fnstcw
inc
jmp
repz
cwtl
pop
out
nop
sbb
data16
push
ss
pop
push
stos
push
cltd
dec
push
out
sar
leave
and
dec
xor
xor
or
mov
cmp
sbb
dec
pop
jae
jl
jmp
push
push
xchg
push
dec
stos
dec
popf
jmp
push
dec
mov
add
test
or
add
mov
lods
xchg
xchg
adc
insl
test
dec
mov
pop
jmp
repnz
mov
jg
aas
push
sbb
push
hlt
in
ljmp
mov
inc
pop
fistpl
and
push
pop
pop
pop
icebp
popf
dec
aaa
push
mov
movsl
xchg
rorb
adc
rorl
dec
cmp
and
stc
shrb
push
pop
inc
xor
pop
sahf
dec
outsl
aaa
jg
xchg
mov
xor
repz
or
inc
push
aaa
popa
lahf
push
jae
or
mov
ror
inc
xlat
xor
or
cmp
dec
inc
push
shll
dec
jne
test
inc
mov
enter
adc
inc
inc
aaa
popa
mov
enter
adc
inc
jmp
sti
adc
adc
mov
inc
xchg
xor
arpl
rcll
mov
adc
xchg
aaa
xor
push
adc
inc
iret
xor
jecxz
dec
rcll
aaa
cltd
adc
inc
arpl
push
xchg
push
dec
adc
enter
adc
inc
loope
rcll
ret
enter
adc
dec
push
xchg
push
inc
xor
adc
sub
xchg
push
mov
repz
add
fstl
rcrb
adc
enter
adc
imul
xchg
adc
adc
dec
das
xchg
cmpsl
clc
push
jno
jge
scas
adc
inc
stc
xor
aaa
int
inc
push
pop
xchg
push
jae
jg
ja
scas
mov
xor
and
xor
imul
dec
mov
lret
adc
sti
enter
adc
rcll
xchg
dec
outsl
aaa
jecxz
repz
add
aaa
xor
cltd
fdivs
xorl
vaddsubps
inc
cmc
xor
sub
cmp
lcall
movsl
aaa
mov
fnop
jmp
repz
sbb
and
dec
dec
arpl
adc
adc
inc
sti
xor
and
das
adc
dec
arpl
xchg
enter
adc
inc
repz
jns
push
jmp
pop
mov
xor
or
and
xor
xchg
adc
inc
dec
pop
pop
sub
sbb
enter
xor
push
jg
xchg
lahf
shlb
mov
aas
push
inc
xor
inc
aaa
inc
adc
dec
mov
push
mov
lahf
push
mov
mov
mov
ret
xor
shlb
dec
dec
xor
adc
inc
push
xor
or
rorb
std
dec
and
dec
adc
xor
push
xorl
sarb
or
push
aad
shll
adc
inc
addr16
push
mov
adc
enter
adc
inc
shll
cltd
aaa
adc
lea
adc
enter
adc
inc
xlat
xor
cmpsl
aaa
fwait
adc
inc
gs
push
mov
adc
adc
inc
xor
xchg
aaa
jge
imul
aaa
push
das
adc
inc
inc
pop
popa
jge
or
adc
or
cmc
inc
push
dec
push
dec
push
push
jno
es
inc
jmp
imul
cmp
add
cmp
cltd
fmull
cltd
pop
push
and
push
jecxz
dec
push
or
mov
decl
or
sub
inc
daa
jecxz
dec
inc
cmp
aas
pop
inc
daa
dec
inc
push
and
dec
dec
or
bswap
push
dec
andb
lcall
dec
push
xchg
sub
sub
mov
jecxz
jo
push
dec
test
mov
push
add
add
loope
jae
cmpsb
mov
jae
repz
dec
inc
jg
or
inc
rorl
mov
popa
leave
aas
sbb
mov
sahf
js
enter
push
iret
pop
dec
out
push
pop
inc
push
inc
sti
xchg
and
shrb
cmp
jno
aam
in
aas
jno
dec
in
sub
adc
in
mov
fildl
cmp
dec
sbb
xor
pop
jle
sti
push
fstpt
sar
cmp
push
adc
xor
sub
push
and
jecxz
subb
and
ljmp
inc
in
or
jns
xchg
aas
jo
mov
or
push
imul
inc
or
sarb
cmp
iret
out
sbb
inc
icebp
ret
dec
cltd
ja
cmc
imul
jmp
aaa
pop
push
dec
jno
mov
mov
cmp
xor
jno
in
push
test
sarb
cmp
mov
scas
add
outsb
ds
mov
in
aaa
cmp
mov
sbb
flds
sub
push
rclb
imulb
repz
cs
in
or
xorl
inc
orb
cmp
scas
fmull
push
jnp
lret
hlt
outsb
lcall
test
sbb
xor
mov
push
mov
push
lret
aam
in
push
xchg
in
aad
loopne
push
int3
loop
mov
jo
or
in
push
imul
pop
add
pop
and
hlt
inc
push
adc
mov
jle
and
aaa
sbb
and
popa
fwait
aaa
adc
sbb
inc
pop
es
ret
movl
mov
adc
inc
in
dec
pop
pop
or
out
mov
out
daa
jmp
push
mov
ficompl
jo
sub
iret
inc
mov
inc
push
jo
xor
adc
sbb
jae
inc
sbb
repz
fidivl
xor
inc
and
hlt
inc
out
aad
shrl
jbe
push
lahf
imul
push
xor
test
xor
push
push
sbb
shl
fwait
sub
or
add
shr
inc
xlat
xor
clc
adc
cltd
jns
pop
pushf
fstpt
fmuls
outsl
stc
cld
into
dec
add
xchg
ja
daa
mov
xchg
ret
aam
dec
test
aaa
cltd
cmp
es
cmpsl
and
mov
and
and
enter
sbb
push
xchg
sbb
sbb
fstpl
lret
addr16
sbb
push
and
cmp
je
cltd
push
push
cmpsb
lods
dec
fadd
hlt
pop
cmp
push
sub
les
ret
ffree
lret
imul
enter
sbb
jb
jo
outsb
cmp
insb
jns
repnz
push
rcll
ss
scas
fnstsw
push
pop
push
and
loopne
cmp
aaa
jns
leave
sbb
mov
mov
pushf
into
dec
pcmpeqw
fisttpll
or
adc
xchg
push
pusha
add
push
cmp
xor
aaa
xchg
ss
fnsave
lret
pusha
int3
in
sbb
bound
mov
rcr
stc
mov
jl
dec
divl
lret
imul
hlt
fldt
loope
adc
dec
or
in
jge
xor
xor
or
in
jmp
cmp
cmp
or
cmp
mov
fisubs
jmp
pop
mov
or
cmc
fwait
cmp
nop
testb
mov
mov
insb
mov
das
loopne
insl
in
lods
in
outsb
icebp
inc
std
aad
shlb
cmpsl
ljmp
push
add
jmp
jmp
outsl
testl
jmp
jp
filds
push
popa
fldenv
sub
jmp
gs
pop
out
adc
sbb
mov
mov
and
sub
movsb
or
test
in
mov
dec
sbb
sahf
hlt
xor
dec
in
sub
xor
adc
test
push
ja
adc
cmp
and
ror
cmp
icebp
lret
sti
xlat
cmp
movsb
rclb
dec
mov
adcl
push
aas
xchg
adc
push
icebp
sbb
adc
mov
xchg
add
out
push
and
jns
xor
add
aas
jge
mov
in
jge
or
insb
mov
xor
pop
in
xor
dec
mov
sbb
push
lock
movsl
rolb
add
pop
lea
add
mov
dec
mov
xor
dec
xchg
push
in
cmpsl
ds
fisttpl
cmp
mov
out
push
mov
jns
adc
mov
push
cmp
icebp
out
sub
in
dec
sub
and
sub
std
xor
scas
xchg
sub
mov
das
sti
xlat
push
adc
add
imul
shrb
bound
cltd
mov
or
cli
sti
cld
xchg
sbb
dec
lcall
xchg
in
es
push
or
int3
rcrb
dec
bound
xchg
xor
popa
pop
popa
es
inc
sti
stc
mov
xchg
mov
lods
rep
sub
mov
push
es
pop
ss
dec
loope
outsb
test
mov
pop
inc
rcll
add
pop
pop
lea
mov
xchg
push
sbb
and
inc
dec
adc
push
push
or
adc
jmp
in
js
scas
sbb
call
push
add
aas
pop
je
das
fsub
jno
sbb
push
mov
inc
cmp
outsb
push
pop
jecxz
add
out
pop
lock
mov
aad
les
fwait
testb
js
push
nop
mov
jnp
rcr
cvttps2pi
fcoms
lret
sbb
outsl
xor
dec
les
mov
or
mov
inc
pop
or
jecxz
inc
dec
push
jbe
jnp
sbb
dec
and
decl
pop
inc
ljmp
and
jl
xor
add
fwait
mov
enter
cmp
pop
jg
push
std
adc
fcompl
out
shlb
add
push
outsb
test
cld
dec
jno
in
dec
int3
adc
or
adc
aas
insl
cmp
inc
push
push
add
xchg
sbb
aas
dec
or
inc
mov
adc
lcall
daa
cmp
inc
mov
aad
mov
or
mov
fwait
cmpsb
clc
arpl
test
xor
and
jmp
dec
push
test
cltd
dec
push
aam
xchg
pop
adc
jae
jno
pop
cmc
push
and
mov
jge
fwait
jnp
jo
andb
cmc
dec
cmp
push
jmp
xchg
pusha
dec
push
sar
pop
jmp
sbb
xchg
xlat
jmp
sti
ljmp
es
rclb
mov
inc
jns
int3
fsubrs
mov
jae
cmp
inc
mov
pop
inc
sub
mov
mov
orl
sbb
aam
out
leave
dec
mov
xor
gs
dec
push
cmp
lock
stc
jmp
in
sub
mov
nop
xchg
inc
addb
pop
cmp
imul
mov
sar
jge
test
and
xchg
xor
dec
sub
push
or
sub
dec
or
xor
or
shlb
mov
lret
mov
pop
inc
int3
fwait
mov
push
dec
sbb
enter
inc
push
cli
arpl
xor
popa
cltd
mov
xor
int3
aad
cmp
xchg
sbb
jno
or
sbb
inc
mov
out
or
in
inc
jne
jno
in
mov
cmc
mov
pusha
cmp
aad
cmpsl
cwtl
cmp
dec
push
add
out
nop
popa
cmp
popa
les
out
cmp
jno
bound
add
popa
add
push
push
cmp
hlt
push
adc
aam
inc
and
adc
xor
sbb
and
xlat
std
cmp
jecxz
sbb
inc
repz
pop
shl
xor
test
aad
or
nop
xlat
jno
sti
push
mov
inc
sub
fdivl
repz
xchg
lret
cwtl
sub
repnz
inc
push
call
or
xor
adc
sub
push
push
pop
jno
std
push
iret
dec
lcall
xchg
cmp
xor
and
dec
aam
in
ljmp
shlb
popa
jmp
adc
xor
jae
enter
inc
or
outsb
movsb
sub
push
aad
pop
daa
or
xchg
fdivrs
lret
or
xchg
jo
mov
outsb
int3
daa
sbb
in
sub
push
jmp
in
dec
push
aaa
adc
xchg
inc
dec
dec
or
jae
cmpsl
pop
gs
aam
cmp
or
push
scas
enter
push
pushf
les
xor
cmpsb
lcall
roll
pop
rcl
pop
outsb
mov
es
scas
aaa
add
mov
mov
mov
repz
jo
enter
mov
ja
dec
roll
incb
sbb
ljmp
dec
inc
cmc
in
adc
xlat
in
or
shll
mov
ficoml
xorb
loop
cmp
push
adc
sub
arpl
adcl
pop
inc
mov
pop
jo
pop
repz
frstpm(287
fldcw
mov
push
dec
add
push
push
es
int3
sbb
xor
js
add
rclb
sbb
xor
cld
dec
aas
add
inc
cmp
sub
cmp
push
sbb
inc
push
int3
int3
lods
mov
push
adc
insb
imul
sub
pop
fsubrs
push
mov
out
fcomp
push
add
inc
and
shlb
cmp
std
add
pop
push
lods
xor
enter
aam
jle
inc
pop
dec
sub
cmp
inc
pop
push
andl
xor
int
js
cmp
shrb
loope
jns
or
push
adc
or
cli
sti
nop
aam
adc
popf
or
mov
pop
stc
or
inc
dec
fsubs
mov
loopne
enter
pop
es
xchg
xor
aas
fistps
push
loopne
and
ds
adcl
add
fimull
jns
cmpsl
lcall
push
mov
or
sub
mov
call
dec
in
inc
dec
fistpl
inc
dec
xor
mov
adc
add
jae
dec
in
out
idiv
in
lock
xchg
int3
mov
jmp
fstp
outsl
cmp
daa
in
mov
sub
inc
lds
cwtd
inc
jmp
dec
jae
push
cmp
sub
xchg
in
add
dec
nop
cmp
stc
sub
push
hlt
jnp
inc
add
je
add
inc
xchg
addr16
mov
xlat
movsb
mov
dec
and
pop
or
stc
push
push
push
add
insl
push
sbb
push
dec
sbb
jmp
popa
icebp
cmp
repnz
int
xor
ljmp
into
xchg
in
push
xor
mov
adc
cwtl
in
repz
inc
push
xor
enter
leave
sub
cmp
dec
push
push
push
xor
push
sbb
stc
imul
std
push
inc
inc
xchg
sti
or
lock
ficomps
sbb
aaa
and
adc
cmp
cmp
inc
xor
mov
dec
jecxz
mov
int
sbb
adc
sub
sub
js
arpl
cmp
mov
outsl
dec
out
fidivl
call
sbb
xor
or
bound
or
movsl
daa
lret
mov
inc
sub
cmp
movsl
insl
adc
dec
clc
hlt
int3
lret
test
xor
or
stos
in
pushf
inc
shl
mov
jo
int
xor
int3
pop
fsubs
mov
inc
pop
cmp
lds
scas
pop
iret
inc
xchg
mov
or
adc
ret
pop
ds
sub
push
push
jno
das
or
mov
mov
adc
push
mov
subl
jne
aas
popa
jno
cli
xchg
sbbb
cmpsl
xchg
in
cwtl
inc
and
out
pmulhuw
xor
decb
jnp
push
mov
or
iret
push
mov
sub
jo
into
mov
and
jbe
push
xchg
push
xor
lods
cmp
mov
inc
test
push
inc
dec
js
push
notb
mov
sub
jo
sub
loop
cmp
and
inc
fsubrp
push
lret
loope
cmp
in
int
rol
sbb
imul
push
or
popf
outsl
sub
out
mov
and
push
jp
lahf
dec
popf
pop
or
rolb
fwait
pop
push
sub
pop
dec
or
or
sbb
ret
cmc
sub
dec
dec
cmp
or
inc
pop
inc
arpl
test
dec
push
cwtl
or
cmp
aad
pop
xchg
xor
inc
aad
push
icebp
push
inc
inc
pop
pop
mov
aaa
aam
psubw
jo,pt
or
jmp
adc
mov
jnp
into
xchg
and
cmpsl
dec
je
xor
jns
adc
mov
sti
inc
xchg
dec
fidivrs
pop
jne
repz
sub
sbb
out
xor
insl
push
sbb
jge
inc
repz
bound
push
addr16
xor
test
mov
mov
repz
pop
mov
inc
es
dec
repnz
pop
jo
in
and
imul
div
aas
jp
lods
or
inc
daa
outsb
sub
dec
or
push
xor
icebp
sti
dec
lcall
sti
rcll
and
push
xchg
repz
inc
in
das
jo
jbe
adc
push
jecxz
cmp
pop
lea
push
fnstenv
shrb
sub
and
jo
adcb
jno
fldcw
movl
inc
in
sub
addr16
imul
cs
hlt
inc
arpl
add
jo
into
shl
dec
push
mov
cmc
je
pop
cmp
fwait
jae
fsubs
sub
and
dec
jno
xor
dec
push
xchg
sub
xchg
repnz
jne
push
jno
orl
add
rcrb
sub
adc
int
in
lds
sbb
loope
mov
jge
cwtl
adc
pusha
fstpl
out
inc
inc
dec
push
ret
xor
negl
in
bound
lock
inc
pop
popa
aas
aam
sub
mov
or
xor
inc
xor
add
or
add
lcall
xchg
inc
jmp
scas
sub
inc
jo
and
clc
adc
sub
or
sub
sbb
in
lods
cld
cmp
adc
fs
ficompl
mov
sub
cltd
ret
aaa
xor
fidivl
out
or
mov
pushf
jle
sbb
out
repz
mov
arpl
inc
fwait
repnz
pmulhuw
loopne
imulb
test
push
mov
mov
sub
mov
dec
inc
push
jp
pop
dec
cmp
mov
xchg
xor
adc
aas
outsl
pop
fsubl
jns
inc
mov
mov
pop
inc
divl
sub
cmp
outsb
xchg
inc
leave
mov
test
jle
shlb
jecxz
out
mov
inc
inc
push
fstl
loopne
mov
sbb
sbb
incb
daa
aas
adc
or
xor
add
sarl
mov
add
ficoms
cmp
cmpsb
jmp
and
push
push
mov
push
push
cmp
or
jae
adc
sub
xlat
push
mov
push
into
std
xor
push
mov
push
mov
push
fucomi
push
jno
sub
pop
sti
cli
fildll
push
add
jno
push
fdivrl
or
cwtl
dec
mov
inc
xchg
fmull
dec
into
popa
rep
fcomi
inc
mov
push
dec
imul
xor
imul
std
jae
repz
lret
mov
cmpsl
aad
push
popl
xchg
adc
cmp
popf
pop
aad
inc
in
xchg
mov
adc
loop
sub
inc
rcrl
xchg
cmp
xchg
out
cmc
in
lds
fisubl
adc
cwtl
test
push
mov
notb
lahf
imul
pop
pop
sbb
jo
pop
outsb
mov
pop
push
lods
outsb
dec
jno
xor
push
add
xor
sbb
out
jo
and
inc
sub
jne
mov
stc
jle
rolb
or
repnz
push
push
std
inc
popl
sahf
pop
xor
cmp
pop
aaa
sub
cmp
ret
and
fnstsw
add
sbb
hlt
xorl
ljmp
fdivrl
sbb
fxch
dec
sub
lret
sbb
and
jns
addr16
into
cmp
in
push
out
adc
sbb
inc
leave
jl
cs
pusha
or
xchg
sbbl
fnstcw
fwait
addb
inc
mov
fcmovnu
cltd
or
or
push
outsb
cmc
les
inc
test
rcrl
adc
es
cs
push
mov
push
mov
jo
les
aam
add
xlat
or
fmull
shlb
mov
mov
test
shrl
push
pop
in
into
mov
adc
adc
xchg
data16
inc
scas
xor
or
xchg
enter
dec
gs
and
cmp
adc
adc
js
and
es
sbb
and
and
fnstsw
testl
pusha
aaa
xor
adc
lcall
aaa
push
push
divl
mov
push
js
es
dec
aaa
push
cmp
out
push
lret
shlb
push
sbb
mov
push
push
add
aad
nop
mov
roll
lods
sbb
inc
mov
inc
test
test
in
sub
in
pusha
das
outsb
data16
mov
mov
jo
arpl
sbb
xor
js
jae
loop
fwait
or
push
lret
dec
lret
pop
insb
and
mov
sbb
je
or
sti
pop
ss
or
adcl
inc
decl
outsb
insb
xchg
pop
call
in
push
int
mov
xor
xor
push
jns
iret
mov
push
add
adc
dec
data16
cli
iret
lock
int3
sub
enter
fadds
xchg
fstpl
inc
push
and
fs
add
xlat
insb
cmp
push
cmp
jecxz
iret
sub
pusha
aad
enter
xchg
and
sub
cmpsb
pop
shr
xor
sub
vmovq
jne
adc
mov
adc
roll
rcl
xchg
addr16
push
xchg
sub
jle
int3
jmp
shlb
addr16
dec
rclb
push
sub
aad
xchg
in
push
movsl
pop
or
cmp
mov
sbb
and
cs
lds
dec
int
mov
loop
in
push
cltd
negl
cmp
ds
mov
mov
xchg
out
pusha
inc
stc
cmp
lret
das
popf
mov
cmp
mov
daa
and
cmc
iret
sahf
push
jg
testl
inc
sub
lcall
std
dec
xchg
stc
pop
inc
popa
in
mov
shlb
adc
push
in
dec
mov
fldl
sub
push
sti
nop
xchg
insl
jmp
or
dec
icebp
push
sbb
leave
cmovnp
jp
scas
cmpsl
mov
lea
jecxz
pop
push
dec
dec
dec
push
rclb
int
mov
mov
in
das
mov
cld
test
lods
nop
pop
push
rolb
cltd
jge
jo
add
push
fnsave
loop
cs
fnstsw
pop
push
add
add
cltd
adc
ja
bound
pop
push
rorb
fucom
push
add
enter
fs
hlt
pop
enter
aaa
pop
push
pop
jnp
jg
adc
xor
or
rcrb
test
inc
push
loopne
or
fs
push
or
mov
and
daa
lcall
dec
popf
iret
inc
aam
push
cmc
stos
jnp
dec
icebp
sub
dec
xchg
push
mov
mov
add
xor
push
lea
xor
es
imul
push
lret
ret
push
and
mov
jno
xor
mov
push
add
mov
aas
mov
adc
push
xor
bound
push
cli
mov
sub
inc
data16
push
and
inc
outsb
cltd
mov
lods
lret
push
lock
xor
adc
sub
or
mov
adc
pop
mov
or
sub
adc
push
fcomps
push
add
bound
xchg
mov
rcl
dec
mov
push
push
sbb
gs
rcl
in
sub
push
imul
ss
imul
repz
push
push
repnz
mov
lock
adc
out
in
in
ret
inc
ftst
adc
or
push
fisttpl
dec
xchg
cmp
inc
push
loop
sub
pop
inc
add
lods
call
cmpsl
flds
cmc
push
inc
mov
outsb
js
jmp
or
mov
push
push
in
aad
pusha
jno
jb
outsb
xchg
lea
adc
add
cmpsb
sub
xlat
and
mov
cwtl
outsb
mov
push
pop
in
push
mov
inc
xchg
icebp
push
in
add
mov
jno
push
cmp
in
rclb
cmp
adc
ja
orb
notb
fstpl
xor
push
arpl
sub
pop
xchg
inc
loopne
rcll
add
jne
cmp
cltd
inc
add
xchg
inc
in
dec
fldcw
mov
out
movsb
push
orl
or
cltd
add
mov
movsl
adc
inc
jo
or
push
icebp
mov
mov
jge
sbb
arpl
testl
and
cmp
add
test
ret
xchg
push
sbb
sub
cmp
bound
aaa
aam
into
or
mov
fldl
xor
adc
jne
pop
xchg
adc
arpl
xchg
jnp
adc
repz
mov
dec
gs
push
cli
jno
jbe
mov
outsb
gs
enter
out
push
fsts
int3
fdivrl
scas
ja
fsubs
out
pop
fwait
stc
test
push
sbb
mov
mov
sbbb
fisubrl
arpl
lahf
xchg
mov
dec
fwait
and
sub
rolb
push
inc
and
mov
fisttps
mov
mov
xor
sub
stos
push
xor
adc
xchg
mov
sbb
mov
inc
xchg
repnz
sbb
fstps
pusha
in
out
pop
imul
dec
shlb
ret
inc
iret
aam
popa
dec
enter
lods
incb
pop
inc
add
jno
jne
jne
adc
in
movq
call
js
int3
sbb
sbb
inc
mov
xchg
addl
mov
xchg
xchg
fstl
cld
enter
lcall
xchg
jne
mov
stos
push
scas
es
ret
mov
sub
dec
jae
pop
jecxz
mov
mov
repz
sbb
loopne
cmpsl
cmp
xchg
inc
sbb
arpl
pop
pop
inc
es
adc
aaa
dec
mov
outsb
ss
push
repnz
dec
push
push
mov
xor
inc
stos
xchg
add
pop
add
adc
out
inc
jo
int3
mov
inc
scas
nop
jecxz
or
sbb
cmp
rcrb
mov
dec
xor
stc
icebp
dec
dec
fldcw
xchg
ret
hlt
out
ss
add
flds
mov
jbe
push
icebp
into
push
adc
fimull
outsl
frstor
inc
pushf
push
es
rorb
xchg
mov
test
outsb
mov
leave
xchg
push
push
push
push
in
gs
repz
in
or
cmp
mov
and
jl
sbb
push
jno
scas
mov
dec
cmove
inc
imul
aam
adc
mov
in
sub
sub
xor
push
cmpl
clc
push
out
dec
mov
das
xchg
sbb
mov
xchg
or
xchg
and
int3
aam
sarl
cld
jge
enter
mov
inc
jno
xchg
adc
dec
gs
jge
imul
adc
daa
mov
push
dec
add
adc
or
sbb
fwait
leave
movsl
inc
fistl
push
in
fsincos
stc
push
jno
std
pop
in
mov
ret
cmp
lret
sbb
push
aam
bound
dec
sarl
inc
jno
xor
lret
arpl
out
inc
jne
dec
rcll
push
inc
lcall
lds
cmp
cmc
dec
mov
cmpsb
inc
int3
stos
aad
fldcw
inc
fnsave
push
cwtl
je
out
inc
push
push
add
out
jo
and
push
push
ljmp
or
push
xchg
dec
int3
lret
dec
push
in
sbb
or
adc
in
adc
arpl
xor
icebp
or
cmp
mov
mov
lahf
xchg
xchg
outsb
adc
mov
icebp
cmp
pusha
inc
inc
or
cmp
jo
pop
cmp
xchg
jecxz
cmc
sbb
add
or
bound
dec
dec
add
ret
mov
ret
xchg
scas
imul
xor
xchg
int3
mov
pop
cli
enter
lods
adc
or
int3
adc
icebp
mov
dec
fwait
cmpsb
xor
lods
nop
arpl
cmp
sub
ljmp
jg
addr16
xchg
adc
ds
push
stos
aas
sub
cltd
in
cld
enter
push
popf
push
inc
mov
inc
divl
dec
rclb
sbb
mov
ret
jg
inc
pop
fwait
icebp
inc
xchg
insl
jl
cmp
jnp
es
add
push
insb
dec
jecxz
stc
inc
dec
les
push
sbb
dec
call
xor
cmp
dec
inc
mov
mov
movsb
mov
movsl
sub
inc
aas
je
xchg
push
loopne
inc
pop
in
cmpsb
js
aaa
ret
nop
aaa
and
add
sbb
stos
enter
push
std
xor
mov
jge
adc
out
adc
shlb
inc
mov
jmp
mov
push
dec
fldl
pop
mov
adc
icebp
xor
jne
dec
cmpsb
popa
mov
mov
sbb
lahf
dec
inc
or
jp
xlat
inc
imul
outsl
sbb
movsl
pop
pop
mov
adc
xorb
or
push
call
test
cmp
arpl
stos
sub
xsave
ret
inc
imul
stos
movsb
sub
stos
add
nop
out
into
xor
scas
fdivl
push
in
out
pop
fcmovne
ja
dec
push
lods
or
in
cmp
add
push
or
lcall
in
inc
cld
push
push
rorb
out
push
dec
repz
adc
ja
adc
xor
cmp
xchg
lods
fildl
pop
adc
outsb
dec
xchg
arpl
subl
inc
dec
leave
pop
outsb
xchg
push
cmp
mov
jge
shrl
gs
xor
adc
xor
das
sbb
add
rclb
push
pusha
mov
popa
jnp
imul
test
sub
jbe
push
cmp
imul
xor
les
add
jno
mov
push
daa
outsl
out
push
add
xchg
and
push
repz
addr16
inc
fisttpll
test
ds
repz
or
cmp
divl
add
adc
mov
stos
subl
fld
enter
dec
push
and
test
jae
cmp
fwait
mov
fildl
inc
cmpsl
es
jge
and
xchg
imulb
mov
push
xchg
pop
pop
mov
fsts
popa
fisubs
lcall
dec
enter
xor
aad
outsl
int3
test
push
sbb
jbe
repz
lahf
cltd
sub
in
aad
dec
fmuls
daa
je
or
inc
int
in
jg
dec
fmull
imul
bound
or
ret
push
xchg
loope
sti
rcl
xchg
fisttpll
jne
or
lods
xor
arpl
sub
cmc
mov
dec
int3
in
adc
nop
cwtl
cmpb
or
mov
adc
mov
outsb
fs
adc
and
sub
ljmp
xchg
fldt
data16
mov
or
loopne
cmp
push
pop
xchg
mov
sbb
or
rclb
pop
fnsave
in
flds
mov
pop
xor
inc
neg
insl
popa
jmp
and
subb
sub
les
fildl
pop
xchg
or
or
or
push
mov
add
fnstsw
movsl
fiadds
test
mov
jae
push
xchg
in
cmp
insl
push
dec
dec
xchg
rcrb
mov
sub
fnstsw
xchg
jns
into
sbb
xor
arpl
inc
fstl
inc
rclb
xchg
pop
decl
or
push
addr16
sub
aaa
push
jle
shll
xor
notb
mov
xor
xchg
fcoms
jno
sahf
arpl
mov
xchg
or
loop
das
in
shlb
mov
dec
mov
int3
mov
and
dec
or
xlat
sti
jns
repz
sbb
addr16
sub
inc
sub
int3
add
in
dec
add
jg
aam
loopne
adc
aam
or
push
add
dec
adc
adc
adc
ss
lahf
mov
push
ss
cli
incl
inc
pop
sub
stos
inc
jp
test
mov
imul
sub
xchg
sub
xchg
ss
rolb
gs
cvtdq2ps
adc
push
in
push
into
ds
movsl
inc
rcl
jle
xchg
and
push
lods
repz
ljmp
dec
imull
shrl
fimull
push
dec
frstor
mov
sbb
jecxz
popf
and
xchg
push
subl
pop
adc
shll
lods
scas
adc
movsl
jecxz
hlt
push
dec
sub
dec
imul
mov
jecxz
sub
rolb
adc
ja
iret
inc
jno
mov
pcmpgtw
dec
mov
push
add
pop
xchg
inc
xchg
inc
daa
in
dec
pop
pop
sub
adc
xchg
xor
push
in
dec
jno
scas
dec
shl
xchg
jno
les
mov
sbb
jp
or
ds
push
dec
ss
sbb
push
add
dec
pushf
mov
mov
ss
jecxz
push
ret
rorb
mov
mov
xor
enter
hlt
lock
stc
xchg
sub
lcall
enter
mov
daa
adc
xchg
push
int3
iret
jmp
loopne
push
pop
jge
sub
mov
add
cmp
adc
sarl
inc
sti
subb
jmp
sub
push
jno,pt
inc
dec
addr16
es
repz
push
aas
jb
push
cmp
mov
lock
repnz
sub
jno
ret
inc
cltd
xchg
mov
pop
and
lahf
sub
mov
aaa
pop
int
adc
mov
ret
push
xor
aam
mov
scas
fcoms
lcall
jmp
mov
mov
shlb
jl
cmp
fisttpl
jo
gs
inc
add
cwtl
pop
aad
mov
and
nop
push
lods
jae
clc
shlb
arpl
int3
push
bound
sbb
jno
and
cmp
scas
sbb
dec
jo
repnz
mov
cltd
pop
sub
sbb
fstpl
pop
adc
out
cltd
sub
inc
jno
bound
push
cmp
inc
mov
rorb
fstps
push
push
inc
add
cmp
lcall
adc
xlat
xor
fbstp
adc
jae
icebp
and
xor
lcall
xchg
sahf
popa
add
inc
or
iret
cmp
jae
sbb
jo
sti
adc
pop
shrl
gs
push
rcll
mov
lahf
hlt
push
xor
adc
cmp
jno
cmp
adc
fstpt
into
push
add
call
sub
push
icebp
imul
shrd
insl
or
dec
imul
in
mov
push
inc
or
mov
fists
movsb
mov
xor
rolb
mov
sub
add
aam
and
iret
pop
mov
mov
xchg
lret
pop
add
xor
sbb
sub
mov
mov
loopne
test
push
jne
mov
mov
lcall
push
dec
in
notb
push
or
testl
push
movsb
stos
mov
push
push
pop
push
xchg
lock
push
repz
pop
cld
pop
outsb
mov
mov
push
pop
push
in
icebp
ror
push
sbb
sbb
int
js
push
outsb
jl
dec
mov
scas
cmp
pop
inc
rclb
and
xchg
test
aad
cmp
inc
xor
sub
and
fstps
cmp
adc
sahf
in
cmpsl
jmp
sub
and
adc
sub
add
psubd
xlat
xorb
sub
addl
repz
xchg
imul
cltd
fcompl
dec
inc
lret
push
xor
rolb
add
sbb
rcrl
inc
ret
inc
paddusw
push
inc
dec
aam
inc
in
sbb
fmull
hlt
clc
push
adc
jecxz
adc
mov
es
sbb
mov
push
loop
dec
adc
icebp
arpl
sub
mov
inc
in
sbb
adc
xchg
adc
aaa
movsl
ret
dec
sbb
push
dec
xor
dec
push
es
cmp
sub
dec
in
push
adc
push
sti
sub
xor
daa
or
pop
insb
mov
mov
ret
add
stos
push
loopne
clc
inc
jno
mov
adc
or
daa
int3
dec
test
jbe
dec
cmp
repz
xorl
arpl
mov
cmp
outsb
mov
xchg
push
dec
sub
lahf
cmp
movsl
pop
movsl
lret
dec
jno
xor
jo
mov
mov
dec
pop
out
xor
or
lds
int3
add
and
ss
xchg
jno
xchg
inc
int3
or
sub
negb
aaa
dec
sub
sub
cmp
jge
mov
std
leave
mov
adc
pushf
mov
or
pop
daa
xor
push
and
cmp
clc
jle
and
fwait
push
adc
cmpsl
xor
icebp
jno
ret
pusha
sbb
hlt
and
jnp
imul
scas
dec
aas
push
dec
jp
push
ret
outsb
addl
fxch
xor
pusha
jbe
popf
push
in
or
int3
lret
mov
or
dec
push
icebp
jno
stos
mov
dec
push
mov
add
int3
xor
pop
sbb
push
icebp
sbb
jns
jno
jae
rorb
cmp
js
rorl
sarb
xchg
xchg
fsts
int
jo
ss
push
in
pop
clc
pop
popa
ljmp
push
rorl
lock
jl
sahf
dec
xchg
ljmp
jno
scas
fbld
sbb
test
enter
cmpsl
sub
xchg
push
jbe
cmpsb
inc
rolb
push
jno
mov
mov
xchg
pop
cmc
test
pop
das
shll
in
test
leave
mov
inc
jle
mov
hlt
enter
jbe
movsl
movsb
inc
xchg
sub
mov
shrb
outsb
call
fcomps
in
repz
dec
lret
mov
push
cwtl
fwait
push
sahf
ficoml
imul
xor
push
aam
push
fnstenv
and
rorb
cmp
bound
xchg
or
aam
decb
jnp
test
movl
sbb
cmp
xchg
lcall
cmp
xchg
jmp
sarb
adc
inc
aas
sbb
ficompl
and
in
inc
jmp
fistl
arpl
cld
adc
pop
sub
inc
adc
or
or
sub
int
sbb
je
cvtps2pi
mov
push
or
ljmp
jno
push
pusha
ja
sub
sub
mov
inc
jg
das
adc
movsb
cli
dec
dec
mov
sub
pop
loop
jns
jno
pop
push
loopne
sbb
dec
fsub
or
decb
xchg
int3
inc
cmp
into
xchg
outsb
insb
clc
mov
jnp
xor
cmp
imul
mov
adcl
or
add
xor
stc
dec
scas
movsl
jo
scas
add
sub
leave
pushf
or
cmp
nop
fistl
add
fcomps
xchg
fimull
adc
mov
cmp
mov
or
inc
jo
sub
sbb
mov
int
ret
mov
push
adc
adc
push
lock
cmc
cli
inc
or
add
subb
stc
aaa
pop
adcl
stos
mov
cvtps2pd
cli
test
pop
mov
ljmp
test
dec
fsub
push
inc
push
fnop
sbb
adc
jl
das
inc
push
idivl
pop
arpl
les
jb
pop
mov
addr16
push
dec
inc
into
push
sub
in
ljmp
repz
lea
arpl
sbb
imul
out
into
push
or
lds
mov
lods
fisubrs
xchg
mov
xor
test
add
jno
add
sub
cld
sbb
lcall
out
mov
insl
scas
iret
adc
fnsave
pop
pop
mov
test
in
jno
movb
mov
add
and
popa
rcrb
dec
mov
rclb
mov
int3
push
aad
mov
pop
cwtl
adc
js
sbb
sub
daa
in
in
jecxz
dec
jmp
and
pop
sbb
movl
push
in
int3
imul
add
sub
lods
stos
aas
dec
rcl
ror
jecxz
mov
add
lods
pop
or
aas
xlat
inc
push
dec
inc
push
data16
in
nop
dec
or
mov
cld
mov
sub
mov
xor
cmpsb
pop
inc
clc
add
sarl
jne
pop
mov
xchg
dec
inc
add
shlb
push
int3
into
test
mov
pop
filds
add
fwait
add
xchg
psllw
gs
fldenv
xor
lods
mov
iret
cmp
arpl
scas
loope
sbb
rcrl
cmp
aad
mov
adc
pusha
int3
fisttps
mov
lds
push
push
xchg
push
icebp
push
and
das
cmp
imul
mov
dec
adc
xchg
or
push
aad
add
idiv
mov
stc
leave
sarl
cmc
loope
icebp
clc
xor
dec
aaa
xchg
push
and
lea
adc
inc
add
icebp
lock
cwtl
fstpl
imul
pop
pusha
dec
das
xor
aaa
sub
or
sub
cmc
dec
and
xor
into
inc
cli
cmp
xor
mov
or
clc
lds
mov
ja
scas
fsts
cmp
loopne
sub
push
xor
adc
test
sub
inc
xchg
shrb
jno
in
push
xchg
adc
or
dec
dec
sbb
push
push
adc
roll
pop
adc
dec
inc
add
and
xor
popa
notb
sti
inc
icebp
pop
jno
cltd
xchg
or
inc
das
cmp
jno
pop
sbb
sarl
adc
testl
cltd
dec
add
test
stc
shrl
cmc
jmp
shl
je
cmpsl
jmp
dec
fnsave
push
out
add
daa
inc
scas
xor
int3
xchg
je
adc
movsl
cmc
fldenv
mov
mov
push
ret
mov
sarb
pop
cli
pop
nop
pop
rclb
fucompp
dec
fwait
jl
stos
and
push
addr16
test
push
xchg
rorl
xor
xor
aas
sub
frstor
sub
push
cmp
inc
or
inc
dec
cmp
dec
pop
dec
cmpsb
cwtl
movsb
push
pushl
cmp
jae
inc
in
inc
dec
repz
dec
inc
sbb
cmp
inc
xor
sub
push
mov
test
jmp
add
lock
xchg
push
push
dec
inc
cmp
sbb
push
adc
outsb
cmp
in
icebp
in
dec
clc
inc
orb
jmp
addr16
orb
lcall
dec
rcrl
cmovo
mov
nop
push
enter
sbb
xor
out
push
push
inc
push
lock
into
or
adc
jb
popa
loope
dec
xor
or
in
outsb
sbb
dec
mov
sub
xchg
push
pop
and
sti
sub
sbb
push
or
in
fstpl
dec
pop
mov
push
dec
pop
mov
ret
adc
les
cmp
or
cmp
adc
add
mov
and
pop
repz
xor
leave
daa
daa
push
inc
pop
mov
mov
inc
sub
sti
int3
es
dec
sub
dec
jno
push
sbb
jns
mov
sbb
mov
gs
sub
push
pop
leave
test
ret
pushf
sti
sub
xor
int3
lret
and
push
popa
pusha
add
sti
dec
xchg
inc
mov
ret
xchg
sti
adc
fidivrl
test
inc
int3
loopne
leave
pop
or
cwtl
inc
xchg
jno
lods
and
ss
pop
dec
aam
cli
mov
clc
push
out
and
jmp
dec
mov
in
push
dec
sub
xor
idivl
dec
and
lret
dec
lret
pop
adc
fs
repz
scas
pop
jne
add
cmpsl
lods
or
push
mov
in
mov
cli
rorl
sbb
repz
stos
add
into
enter
push
fstps
test
sahf
fsubr
push
addps
xchg
repnz
sbb
xorb
mov
sub
push
popa
and
js
je
sbb
add
cmp
sbb
xchg
fldl
sub
leave
jl
cs
and
mov
dec
mov
rolb
loopne
mov
cmp
cltd
lock
je
lods
arpl
loope
mov
arpl
sbb
insb
out
hlt
inc
push
sub
pop
mov
dec
push
sbb
adc
xor
scas
ficoml
adc
lahf
xor
or
lods
ret
ret
or
int3
jbe
xor
mov
push
cmpb
arpl
pushf
xor
leave
add
jnp
dec
out
imul
inc
cmp
jns
push
nop
or
test
adc
setb
inc
push
jbe
inc
mov
sub
std
sbb
outsb
in
ds
cwtl
movsb
jecxz
cld
jb
inc
clc
jb
mov
in
dec
push
xor
pop
cltd
out
push
or
dec
pop
or
xlat
mov
jp
imul
add
lods
adc
dec
inc
sbb
dec
sub
adc
outsl
sub
dec
add
ss
push
imul
xor
cwtl
push
inc
or
rcll
outsl
push
fstpt
xchg
test
test
or
sahf
ss
push
aad
into
sbb
push
xchg
dec
ret
out
inc
rclb
pop
lods
int3
cmc
gs
aaa
dec
add
cli
add
cs
jns
push
xlat
je
adc
les
testl
pop
add
cmp
ror
lock
adc
xchg
push
dec
dec
lods
mov
out
rol
inc
dec
loop
in
jo
rclb
imul
sahf
jecxz
or
mov
xchg
and
and
addr16
popa
push
ret
xchg
hlt
mov
xchg
xor
dec
call
mov
leave
sub
push
dec
mov
rolb
xor
and
addr16
inc
movsl
add
loop
pop
icebp
xchg
push
imul
cmc
push
outsb
lret
repz
dec
js
mul
mov
and
popf
in
add
inc
xchg
outsl
xor
xor
jmp
sub
jmp
movsb
and
insb
iret
les
aas
lret
jp
cltd
push
dec
xchg
push
add
jns
stc
sub
cld
loop
sbb
pop
dec
int3
stos
xchg
mov
push
adc
xor
not
dec
mov
xlat
shr
xchg
sbb
pop
aaa
xchg
lret
jns
das
aaa
rcr
int3
and
inc
sbb
int3
fwait
daa
lods
adc
ror
add
or
sbb
int
xor
adc
cmp
add
push
and
aad
sbb
notl
inc
or
popa
cmp
add
dec
std
push
test
cmc
fldcw
icebp
jmp
les
dec
aaa
xchg
pop
sbb
dec
aaa
lea
dec
sbb
insb
inc
cmp
mov
test
sarb
jge
jno
pop
aad
xlat
popf
adc
out
dec
idivl
dec
adc
into
mov
int
jno
push
enter
popf
call
mov
stc
cmp
sbb
dec
jo
pop
push
adc
dec
pusha
fcoml
dec
int3
fstpt
iret
fcoms
or
dec
sarb
inc
jno
xor
int
push
in
jbe
xchg
mov
add
cmp
clc
mov
sarl
shr
add
or
inc
inc
icebp
pop
jp
adc
es
insb
inc
and
pop
mov
lahf
jbe
incl
xor
mov
adc
push
add
pop
push
call
mov
icebp
ljmp
xchg
push
xlat
xchg
cld
mov
popa
cmpsl
push
xchg
dec
repz
pop
inc
jbe
hlt
ja
lahf
cmpsl
iret
and
and
sti
dec
leave
cmc
negb
adc
dec
insl
jo
mov
mov
adc
xchg
add
aad
das
ja
sub
jno
mov
xlat
add
out
pusha
pop
ficompl
popf
lock
jnp
jecxz
push
push
fldpi
push
in
int
lcall
sti
inc
mov
cmp
inc
scas
dec
jl
jecxz
or
and
xchg
nop
lret
test
movsl
lahf
aas
dec
mov
and
popf
leave
pushf
mov
jne
sbb
push
loope
inc
daa
bound
push
cltd
xor
mov
stos
dec
xchg
mov
xchg
dec
fcomps
jp
aaa
out
arpl
cld
movb
xchg
sbb
jp
aad
outsb
test
add
cmp
mov
jmp
ja
inc
and
call
xchg
jb
in
arpl
lsl
call
inc
sub
jb
cmpl
inc
lods
mov
repz
aas
jns
jg
push
jae
pushf
push
cmp
mov
in
lock
push
fmull
movsl
xchg
jl
fcmovne
and
popa
iret
je
jno
and
push
pop
lcall
push
fstpl
stc
or
adc
push
insl
loopne
or
movb
push
or
aam
jno
out
orl
pop
mov
mov
bound
outsb
addr16
sbb
push
lret
add
cmp
gs
jnp
jmp
jmp
pushl
loopne
or
xlat
pop
adc
fdivrs
jmp
in
dec
xchg
pushf
add
and
enter
icebp
add
mov
mov
pop
cld
in
sub
and
popf
sbbl
mov
xchg
inc
in
icebp
mov
outsl
test
pop
sarb
cmp
push
int
leave
leave
lds
sub
fisubl
push
int3
cld
pop
or
and
pop
xchg
cmp
jmp
or
lcall
jg
sub
lea
sub
ficoms
mov
insl
push
decl
aaa
push
leave
xor
cmp
and
xor
push
dec
inc
ss
sbb
jb
jns
popa
pop
fsubl
cs
jl
fwait
sbb
push
rcrb
lcall
fs
mov
pop
adc
dec
addr16
or
sub
pop
add
ror
mov
push
bound
mov
mov
pop
pop
enter
xor
std
sub
pop
gs
aam
dec
pop
mov
add
or
out
pop
pop
sti
cli
pop
mov
adc
lock
inc
out
push
cmp
dec
push
mov
repnz
push
lds
testb
sub
sub
push
jns
dec
mov
cmp
or
lret
xor
dec
testb
sub
adc
mov
sub
jnp
arpl
lock
or
es
lock
adc
inc
cmp
addl
out
sbb
int3
jl
cwtl
icebp
imul
dec
arpl
push
popa
cmp
pop
xchg
pop
sub
pop
sub
in
imul
push
and
into
je
jbe
stos
jp
out
cmp
dec
or
pop
cmp
outsb
fwait
jb
mov
pop
leave
mov
fimuls
jne
imul
aad
push
push
into
out
rcrb
push
imul
add
mov
sub
dec
pop
mov
inc
pushf
lods
mov
sub
fisttpll
cmp
in
push
hlt
or
mov
or
or
adc
adc
jno
sub
popa
inc
mov
adc
inc
dec
inc
andb
or
push
adc
dec
dec
or
pop
imul
lret
xchg
addr16
mov
repnz
pop
pop
orb
pop
mov
jge
nop
jl
add
jp
cmp
aad
cwtl
or
or
out
add
aam
add
ret
lds
ds
in
movsb
mov
xchg
mov
mov
xchg
insl
inc
leave
push
mov
add
ret
adc
neg
jp
jns
popf
sub
pop
mov
fs
jge
sbb
mov
cltd
or
lahf
je
push
add
mov
or
pop
inc
push
cwtl
jo
mov
xchg
shrb
outsl
xchg
xchg
cwtl
paddsw
sub
int
mov
push
push
popf
xor
stos
clc
movsl
les
cwtl
stos
outsb
xchg
in
pop
roll
xor
push
lds
or
into
ret
test
cmp
in
xchg
mov
inc
mov
mov
lret
outsb
nop
daa
adc
arpl
lock
jo
jle
mov
sti
adc
sar
leave
push
cmp
scas
sbb
loope
je
sub
dec
sub
inc
pop
and
xchg
jge
sbb
roll
in
xchg
push
lea
push
test
add
jp
out
mull
hlt
adc
cli
aam
outsb
and
xor
dec
push
xchg
enter
popa
dec
fdivrl
dec
stos
xchg
xchg
scas
or
scas
inc
cld
popa
hlt
das
das
pop
or
xlat
in
jmp
pop
pop
in
int3
fwait
data16
adc
arpl
mov
cmp
into
fisttpl
jo
xchg
cmp
push
jmp
sub
andl
shrb
sub
or
push
adc
pop
fdivl
arpl
pop
push
in
insl
push
mov
lods
jmp
pusha
or
in
push
inc
outsb
mov
rcrl
mov
add
dec
xchg
inc
dec
leave
ret
inc
int3
shll
fnstcw
lcall
sbb
fstl
and
adc
adc
sti
inc
in
dec
adcl
inc
imul
jge
mulb
rorl
lods
scas
cmc
dec
sub
jae
or
inc
arpl
cmp
fildll
loope
ficoms
pop
push
std
fidivl
js
imul
test
in
out
cmp
jl
xchg
out
or
ja
test
push
ss
sbb
add
fwait
fstps
popa
fldl
and
std
cmp
dec
lret
int3
xor
push
pop
fwait
pushf
lcall
out
into
and
dec
insb
std
cmp
rcl
repz
mov
xchg
outsb
rcrb
scas
rorb
adc
data16
pop
dec
aaa
ds
aas
cmp
add
sbb
adc
cmp
push
shlb
bound
ja
js
lret
jecxz
imul
and
adc
in
pop
jmp
and
std
ss
adc
stos
jns
inc
cmc
stos
out
inc
or
cmovns
cmp
mov
push
xchg
lds
lock
cld
imul
xchg
mov
inc
jno
mov
imul
pop
ja
orb
movl
leave
inc
dec
test
dec
sbb
je
std
inc
inc
jne
and
pop
out
and
inc
xlat
lea
outsb
sahf
adc
xorl
pop
sub
cmc
inc
mov
jae
arpl
cmp
add
mov
add
adc
in
outsb
mov
pop
jnp
pop
popf
sahf
sub
stos
jmp
pop
in
fistl
add
pop
lahf
aad
mov
movsb
lret
sub
xchg
jns
jg
and
sub
push
ret
decl
scas
addr16
xor
dec
in
mov
sbb
mov
inc
add
scas
and
jecxz
rorb
jno
jmp
push
mov
sbb
mov
sub
add
leave
ret
mov
inc
orb
push
imul
leave
pop
call
ret
sub
pop
sbb
leave
cmp
pop
lds
sub
push
jo
push
fld
aad
insl
mov
adcl
dec
es
adc
inc
out
mov
dec
clc
int
jnp
idivl
test
jmp
push
pop
jb
icebp
cmp
and
divb
repz
shll
push
push
push
inc
aaa
inc
pop
sub
pop
dec
xchg
push
sbb
and
mov
xor
cmp
aas
mov
cmp
in
or
xchg
daa
xchg
inc
popa
pop
fistl
jmp
js
or
sbbb
insb
push
aad
or
daa
aas
mov
fcmovb
and
lea
jns
gs
in
imul
movsl
xlat
push
fcmovnbe
adc
ffree
insl
or
pop
arpl
mov
or
int3
inc
hlt
outsb
fcomps
out
push
cmp
mov
inc
outsb
insb
mov
push
es
add
pop
jecxz
pop
aas
inc
sub
arpl
jnp
xor
xor
int3
jo
aas
adc
data16
stos
add
cmp
adc
add
adc
into
adc
mov
add
push
adc
sbb
adc
push
in
out
and
dec
pop
or
sub
mov
jbe
sub
add
mov
dec
push
imul
adc
jnp
sub
jnp
gs
or
int3
adc
push
xchg
enter
frstor
pop
cmc
inc
jo
cmpsl
mov
ret
push
push
jecxz
sti
dec
cmpsl
and
mov
out
sbb
aas
and
popf
sub
push
cwtl
or
cmp
sub
push
add
cwtl
cltd
pop
mov
test
push
subb
out
or
xchg
sub
aaa
in
rcrb
shll
cld
lea
inc
icebp
mov
jo
fwait
out
xor
push
rol
ja
push
repz
jmp
push
push
pop
cmpl
repz
pop
dec
sti
jmp
push
push
mov
fildll
pop
addl
insl
dec
push
dec
push
dec
repnz
lcall
cmpsl
rorb
mov
cltd
dec
mov
inc
xchg
mov
or
push
sti
aad
adc
cmp
mull
imul
jbe
mov
scas
dec
lret
loope
rcl
or
push
adc
shlb
enter
xchg
das
test
in
xlat
inc
dec
push
cwtl
aam
inc
insl
lcall
int
int
mov
mov
cli
leave
rcr
or
lea
addr16
push
and
mov
pop
xor
push
dec
lcall
adc
and
lahf
rorb
xor
cwtl
out
popf
daa
xor
imul
data16
or
das
jo
insb
dec
xor
cmp
xor
cmpsb
mov
inc
stos
push
nop
shrb
cmp
sarl
or
test
push
cmp
jmp
pop
push
dec
bound
rcrb
mov
inc
fwait
adc
data16
in
clc
stc
out
xchg
adc
inc
pop
push
xor
imull
xchg
popa
inc
push
inc
dec
das
cmp
or
sbb
out
push
mov
cmp
cmp
movsl
adcb
or
in
popf
pop
mov
inc
sbb
adc
das
pop
pop
xlat
rclb
int
fdivrs
jo
mov
dec
mov
or
mov
aas
in
xor
jle
das
aad
cs
pop
mov
subb
cmp
sub
popa
sub
xchg
jo
mov
or
fucomi
test
jmp
ljmp
dec
pop
out
sbb
or
jns,pt
pop
xor
sub
mov
and
stos
aaa
sahf
mov
or
mov
xchg
xchg
test
into
xor
fsubrs
dec
icebp
sub
mov
ss
in
in
fs
cld
sbb
push
int
into
ret
mov
jno
popf
add
push
sub
xchg
cmc
sti
icebp
and
xor
aas
popa
sbbl
push
arpl
sbb
leave
movaps
leave
mov
xor
cmpsb
popa
inc
or
mov
mov
cmp
cmp
add
inc
fdivrs
dec
enter
cltd
mov
test
or
aam
scas
add
icebp
aaa
mov
mov
xor
xchg
ret
lds
mov
mov
dec
push
dec
out
push
xchg
clc
or
test
cmp
adc
xchg
mov
icebp
cld
rcrb
cmp
dec
and
dec
lds
and
shlb
inc
xchg
rcll
int
inc
cmpsl
cmp
jnp
mov
and
es
inc
mov
jns
push
inc
adc
sub
add
push
sub
push
cmp
dec
xchg
stc
popa
inc
dec
cmc
jns
cmp
mov
inc
mov
shll
lea
jmp
jnp
jb
mov
stc
outsl
aaa
xchg
jnp
mov
add
pop
int
scas
dec
popf
aaa
fldcw
xchg
push
in
mov
jnp
jns
mov
dec
daa
inc
inc
inc
dec
cmp
xor
lret
pop
mov
xchg
ss
cmc
push
inc
popa
adc
lret
and
and
ret
test
scas
pop
daa
inc
sub
int3
adc
cmp
dec
mov
xor
inc
and
out
add
inc
movsl
int3
scas
xchg
mov
push
or
test
mull
sti
inc
jo
call
dec
shr
stc
cmp
mov
xor
pop
dec
push
mov
adc
dec
sub
insl
push
cli
test
push
push
dec
push
sub
add
xor
add
loop
pop
movsb
dec
xor
mov
rcll
into
and
or
pop
push
insl
imul
lcall
or
push
fidivl
mov
outsb
cmove
rcll
dec
std
js
fldenv
jns
fmuls
xor
sbb
pop
cld
outsl
es
mov
popa
cmpb
repz
add
icebp
rcrl
sub
sbb
orl
or
mov
pop
jmp
jae
dec
icebp
aad
dec
push
mov
inc
push
mov
pop
push
mov
push
pushl
leave
shrb
adcl
mov
nop
sbb
add
jb
scas
pop
or
xchg
xchg
imul
mov
fisttpll
jecxz
out
adc
ss
out
lds
inc
aad
inc
or
andl
add
sti
push
jno
jp
subb
popf
sub
xor
cmp
fcoms
sti
aas
call
pop
test
dec
dec
and
test
lcall
push
cltd
cwtl
js
dec
xchg
or
lds
sub
popf
pop
add
bound
xchg
icebp
lods
sub
xor
mov
cmc
xor
enter
xor
push
or
lahf
pusha
inc
pop
call
lret
pop
dec
arpl
in
adc
fstps
cmp
adc
shl
icebp
gs
push
mov
push
fisttps
push
in
sub
mov
add
jns
pop
cmp
sbb
seta
xchg
fcomps
int3
cmp
fstpt
bound
popl
xor
jae
cmp
xchg
push
add
or
sbb
adc
insl
jno
pop
imul
fst
xchg
test
mov
sub
inc
push
gs
cmp
dec
cmp
jmp
push
xorl
cmp
jnp
mov
out
fcompl
mov
nop
daa
push
cmc
aam
dec
lcall
stc
jl
push
aaa
jne
xchg
sbb
bound
cmp
inc
mov
lds
movsb
lods
xchg
push
repz
mov
test
and
xchg
xchg
stos
pusha
xchg
inc
and
jns
insl
xchg
add
pop
into
enter
xor
push
jecxz
dec
ja
pop
xchg
in
stc
inc
jno
call
dec
aaa
and
push
xchg
js
add
xchg
cmpsb
lgdtl
adcl
dec
mov
mov
cltd
outsl
dec
or
pop
jle
sbb
pop
xchg
sahf
lds
cwtl
lea
add
inc
fsub
push
dec
pop
ret
lods
orb
jae
loopne
and
out
dec
xchg
xor
outsb
dec
and
fcomps
or
cmp
ret
call
cmp
cwtl
pop
push
mov
push
inc
pushf
dec
ds
inc
xchg
jo
inc
xchg
cs
lods
in
mov
adc
fcoms
in
inc
mov
dec
cmp
cmp
xorl
mov
popa
es
xlat
test
xchg
addr16
aaa
gs
pop
push
cmpsl
jbe
inc
mov
xchg
inc
pop
pop
push
push
sbb
mov
pop
jle
cmc
mov
push
mov
fst
fistl
aam
mov
add
push
dec
add
inc
movl
or
mov
cmpsl
dec
dec
cld
decb
xchg
mov
sub
add
add
mov
jecxz
jns
inc
lcall
clts
and
cmp
popa
ss
jo
cmc
push
outsb
scas
adc
rcll
dec
sahf
in
push
addr16
inc
dec
fsts
lock
fnsave
adc
imul
add
aaa
mov
mov
sub
pusha
jb
pushf
test
cs
jecxz
xor
repz
pop
jmp
lock
rcll
inc
lock
xor
cs
mov
push
pushl
inc
shlb
pop
push
cmp
jp
outsb
ja
inc
mov
ss
pushf
push
fstl
scas
push
add
push
sub
mov
insb
repz
stos
sub
pop
pusha
jb
push
mov
or
xlat
out
push
popa
enter
aam
and
push
pop
cltd
pop
es
sbb
sub
dec
or
or
add
sarl
std
loope
stc
clc
shl
adc
mov
out
inc
test
push
fs
dec
imul
push
xchg
sub
cmpsb
mov
adc
aam
test
mov
mov
les
ss
jno
pop
add
rcrb
jmp
aad
repz
sahf
shrl
jl
mov
daa
jb
fnsave
xchg
mov
lcall
fdivrs
push
ror
xchg
pop
sub
aas
mov
rol
and
stc
icebp
repnz
inc
outsb
repnz
icebp
or
xchg
aad
dec
xchg
pop
xor
int3
or
dec
in
cmpsl
cmp
xor
fs
loopne
pop
add
jbe
popf
das
xor
cmovo
pop
pusha
pop
push
jp
and
xor
push
std
and
ret
jnp
mov
bound
sbb
roll
jno
xchg
add
aam
mov
inc
push
or
mov
inc
inc
push
push
dec
notl
and
or
shll
inc
in
mov
xor
jecxz
divl
jge
or
loop
ffree
imul
sbb
jns
dec
enter
dec
icebp
mov
push
xchg
push
cmp
data16
ja
or
adc
mov
push
push
mov
xor
rolb
or
in
mov
lods
sbb
pushf
sub
aaa
in
addl
imul
dec
imul
mov
mov
mov
adc
jmp
sub
mov
xchg
sbb
stc
xchg
push
xcrypt-ecb
cmpsl
sub
ja
cli
mov
ret
les
mov
jb
jecxz
sahf
sti
sub
push
xchg
rol
xor
add
adc
popf
ret
pop
shrb
jge
jns
outsl
arpl
pop
dec
icebp
push
daa
jno
roll
or
call
nop
icebp
add
mov
inc
popf
mov
ret
push
scas
xchg
icebp
cmp
je
mov
cmp
mov
xchg
stc
int
das
xlat
or
sti
push
iret
adc
xchg
loopne
test
fwait
int3
and
rolb
fwait
jns
repnz
std
cmpsb
aad
inc
inc
push
jns
sub
xor
jne
iret
xor
push
xchg
insl
add
mov
dec
or
sbb
pop
in
jno
jno
sub
adc
fsubl
jnp
mov
outsb
xchg
push
cmp
sbb
jne
lcall
lcall
leave
inc
je
subl
cmp
stos
testl
cwtl
push
ljmp
sbb
adc
notl
sbb
fwait
das
sub
into
xchg
or
shl
xchg
orl
leave
aad
cmp
adc
mov
xchg
fidivrl
stc
outsb
ret
jmp
in
ljmp
cmp
aaa
xchg
dec
cmc
sbb
ret
roll
leave
lea
iret
pop
daa
pop
add
jg
mov
dec
hlt
sub
fldenv
lret
gs
xor
int3
mov
test
sbb
adc
dec
addr16
inc
or
push
loope
outsb
popa
les
push
testb
pop
sbb
mov
adc
jmp
fs
fldcw
pushf
cld
push
dec
or
cmpsl
test
inc
jge
pop
and
ljmp
push
idivl
sti
lret
fwait
xchg
add
and
inc
add
out
xchg
or
jp
cli
xchg
xor
imul
cli
sub
imul
dec
sub
test
mov
sbb
mov
jae
cmp
xor
mov
gs
lret
or
sub
push
fnstenv
mov
out
lods
cmp
pop
mov
icebp
pop
add
inc
int3
sub
mov
out
push
mov
sbb
lret
lcall
ja
push
mov
sub
lcall
adc
xchg
pop
jecxz
dec
icebp
pop
lock
popa
lods
or
or
test
inc
or
mov
cs
inc
add
push
inc
in
add
jns
lods
les
lea
decl
lea
xor
jne
scas
xor
ja
add
push
jno
xchg
sbb
push
fstpl
add
inc
pop
cltd
jb
es
push
int3
cld
imul
loope
addr16
sbb
or
adc
push
sbb
iret
push
hlt
test
xchg
ss
js
sbb
push
mov
cli
iretw
xor
xchg
lcall
lds
sahf
popa
jo
push
push
jg
repz
push
cwtl
iret
adc
dec
into
dec
mov
sbb
adcb
pop
jp
stos
inc
cmp
jmp
or
inc
jns
xchg
inc
jo
mov
iret
sub
dec
scas
fwait
sti
mov
mov
inc
add
jnp
lea
inc
add
sahf
and
fucomip
popf
cwtl
lock
push
or
cmp
push
xor
push
lds
iret
leave
ss
push
dec
inc
cmp
inc
in
dec
cmc
inc
sbb
xchg
dec
inc
in
push
aas
popa
jbe
mov
sbb
ret
popf
mov
xchg
testl
inc
xor
xchg
shlb
fnstcw
icebp
adc
sarl
xor
dec
cli
push
loope
xor
push
sarl
fwait
xchg
sub
dec
jno
sbb
xchg
clc
icebp
inc
push
adc
adc
xchg
test
dec
mov
int
mov
cmpsl
dec
inc
ret
movq
mov
add
pop
xchg
jo
push
inc
pop
sbb
xor
cli
sub
outsb
push
orl
lds
inc
xchg
imull
push
pop
cli
xchg
add
push
push
scas
imul
das
jg
aas
xor
icebp
dec
or
loop
mov
push
push
lods
push
xor
sti
mov
or
or
push
repz
and
inc
sbb
adc
push
add
iret
arpl
imul
push
add
push
cmp
or
aad
mov
icebp
mov
adc
push
loop
outsb
mulb
cld
fwait
popa
ljmp
push
inc
lds
shrb
sbb
mov
jo
int3
frstor
adc
push
mov
push
aad
or
or
dec
mov
xor
iret
xor
inc
jmp
push
or
mov
pop
mov
into
jmp
andl
scas
sub
jo
adc
cmp
cmp
ret
insl
adc
or
jo
jnp
loope
int
adc
cmc
imul
mov
dec
inc
jnp
xor
push
adc
inc
xor
bts
mov
sub
jo,pt
dec
sbb
fs
inc
sub
xchg
lock
mov
and
sub
scas
cli
push
out
mov
dec
dec
dec
cmp
lods
outsl
pusha
mov
dec
cmpsl
ret
cltd
aam
push
stos
xchg
lods
cld
cld
jmp
mov
and
mov
mov
xchg
push
cmpsl
arpl
fwait
add
inc
rclb
push
mov
leave
fwait
jge
push
call
test
or
decb
test
jno
in
sahf
es
inc
out
push
push
arpl
xorl
mov
or
iret
test
iret
rcl
add
add
xor
inc
lds
fwait
loopne
xor
mov
sub
dec
jo
xor
fcmovne
cmc
push
sbb
mov
fdivs
pop
adc
add
lods
mov
ljmp
push
leave
mov
xor
call
test
dec
ret
orb
decl
dec
loop
mov
cmp
sti
outsb
aam
cmove
cmp
outsl
inc
int
mov
inc
adc
sub
fnstsw
int
sbb
add
dec
sub
ds
cmp
in
ljmp
fldenv
lret
nop
jp
pop
xlat
leave
and
out
arpl
pop
in
add
cld
dec
add
push
sbb
xor
jle
dec
xchg
inc
aas
cmp
aas
sub
aas
jo
sbb
xor
vunpckhps
add
gs
pushf
xor
mov
mov
movsl
push
mov
out
push
add
push
cltd
push
xor
cmp
xchg
bswap
xor
inc
rorb
sarb
inc
inc
push
inc
xor
arpl
jae
sti
add
sub
adc
or
sub
sbb
filds
stc
cmp
adc
dec
mov
leave
aas
sub
or
xor
rclb
ds
inc
cmp
aad
dec
xorl
jmp
jo
jecxz
les
std
xlat
inc
cs
lods
int
iret
push
xchg
sahf
lret
incl
mov
lock
rcl
mov
cs
xlat
aad
dec
sbb
inc
ficomps
in
and
out
mov
jo
push
adc
fimull
aam
push
mov
fisubrl
hlt
rcrb
cmp
add
scas
jno
xor
roll
movsl
pop
mov
inc
inc
inc
or
fs
dec
in
jo
les
adc
add
lret
outsb
add
mov
mov
xlat
in
outsb
rcr
dec
sub
mov
test
inc
std
rol
leave
inc
ljmp
inc
sti
fldcw
fisttpl
ljmp
xchg
dec
stos
mov
xchg
pop
sub
mov
inc
flds
std
outsb
call
jnp
loop
jl
push
xor
ds
xchg
xchg
es
lods
mov
jno
fsubrs
cmp
mov
insl
cmp
in
cmc
std
xor
xchg
xor
mov
dec
cmp
push
inc
in
xchg
dec
outsb
rorl
das
add
xor
ficoml
xor
aaa
and
or
insl
pop
sbb
add
dec
in
rcll
outsb
repz
cmp
inc
mov
movsb
sub
inc
in
lods
inc
ret
or
aas
inc
outsb
push
add
sbb
jbe
push
add
fcoml
push
popa
inc
pop
pusha
dec
rcll
jmp
adc
popa
scas
iret
or
aad
sbb
iret
cli
mov
jno
pop
inc
cmc
xchg
icebp
inc
push
movsb
inc
dec
push
lods
sahf
les
out
addr16
cli
push
jno
xor
mov
add
sub
repz
xor
cmp
lea
shll
movsl
inc
cmpxchg
pop
mov
aam
push
and
hlt
call
gs
mov
cmpsb
jne
cmp
sub
or
and
test
repz
or
push
imul
aaa
ret
lods
push
inc
movsb
push
xchg
lahf
out
or
sub
pop
mov
inc
rcll
pop
movsl
mov
jno
push
jne
into
lock
frstor
sbb
xchg
sub
loop
push
loope
xor
jmp
jne
shr
enter
and
into
sbb
or
jnp
xchg
shlb
fdivrl
dec
cmp
aad
subb
roll
icebp
hlt
sub
add
push
aaa
fmuls
pop
jne
and
out
rolb
pop
push
aaa
lcall
dec
lahf
fsts
cmpsl
jne
xchg
lods
cwtl
mov
or
jno
pop
mov
jb
xor
decl
xchg
movsb
test
das
pushf
popa
mov
mov
mov
in
notl
jp
cmc
inc
xor
inc
cmp
jmp
arpl
fldcw
xchg
stos
xchg
or
sbb
cmp
jmp
jmp
or
and
es
fildl
iret
fnstsw
cltd
pop
jecxz
int3
or
xchg
or
pop
clc
addr16
adc
inc
mov
fidivl
or
mov
movsl
aad
xor
jno
sub
cmc
inc
adc
sub
dec
and
mov
push
push
lret
xchg
shll
jmp
cmp
add
pop
jmp
cmp
push
mov
daa
bswap
add
popf
and
cmp
xchg
das
rcll
loope
sbb
mov
stc
shrl
popa
push
mov
pop
cmpsb
test
push
dec
dec
lds
sub
aad
jg
sbb
lret
cmp
je
icebp
aad
scas
aad
cwtl
sbb
jge
push
mov
xor
pop
subb
mov
xor
in
fstp
push
fdivs
rorb
cmc
addr16
int
xchg
leave
rcpps
inc
mov
jo
ficoml
push
add
mov
ret
dec
shlb
adc
and
fdivrl
adc
xor
mov
pop
out
das
inc
loopne
jne
cmp
into
adc
xchg
pusha
data16
aam
or
push
scas
mov
call
xor
sarb
pop
movsb
test
mov
jecxz
outsl
sahf
jne
fldcw
dec
lds
inc
iret
mov
jp
aas
adc
mulb
mov
imul
fxch
loope
xchg
xchg
dec
inc
jp
mov
xor
in
or
arpl
pusha
js
mov
sub
in
push
inc
cs
or
or
in
mov
mov
pop
lock
outsb
xor
mov
mov
pop
jo
inc
sbb
pop
rcll
icebp
xor
test
scas
testl
rorb
out
movsl
mov
or
sbb
inc
into
dec
stos
add
js
push
mov
inc
orb
lret
mov
cli
int
jo
add
sub
fwait
lret
dec
dec
xchg
mov
jo
pop
add
loopne
sbb
cmp
push
std
or
sahf
shl
mov
orb
ja
out
adc
xlat
pop
push
or
xor
adc
lahf
jnp
inc
andps
data16
in
cwtl
push
push
sbb
adc
add
fsubrs
subl
daa
dec
lock
inc
sbb
call
or
shlb
das
aad
cmpsl
gs
xchg
and
aaa
and
cmp
sub
xor
mov
sbb
jno
lds
jbe
pop
push
sbb
pop
push
xor
lea
shl
int3
lahf
ss
inc
div
cmc
dec
add
lods
mov
jmp
or
lds
add
inc
ror
fisttpll
xor
inc
adc
cld
xchg
out
jae
sub
adc
mov
jecxz
in
adc
fisttpll
jmp
and
sub
xor
test
data16
jge
and
push
adc
in
cli
in
add
add
add
arpl
cmpl
xchg
mov
inc
shrb
cmpsb
cs
mov
mov
cmp
sbb
adc
adc
shrb
rorl
int
sbb
cmp
sub
xor
popa
and
sub
push
mov
sbb
xchg
pop
ror
test
fisttpl
test
fs
adc
popf
push
repz
fisttpl
adcl
das
jmpw
sub
pop
cli
jno
mov
mov
lods
popf
ret
arpl
arpl
mov
or
mov
add
push
xchg
sbb
enter
loope
xor
xchg
mov
push
in
ja
or
in
enter
xor
mov
insl
and
sahf
xchg
sbb
xchg
ds
sti
ss
pop
fs
rclb
jg
push
xor
lcall
icebp
ljmp
loop
aam
rolb
pop
int3
lahf
sbb
mov
pop
sbb
repz
insl
imul
inc
jp
inc
inc
dec
cmp
mov
push
scas
orb
sbb
ret
push
out
aaa
loop
imul
pop
xchg
lds
sub
sub
inc
out
cmp
andl
sub
js
and
push
push
lds
jns
es
jnp
iret
mov
insl
lahf
mov
adc
gs
or
add
enter
sub
cmp
dec
xchg
mov
mov
or
in
adc
jno
adc
mov
int
cmp
cmp
shrl
xor
imul
sub
cmpsl
inc
enter
sti
jge
daa
movsb
pop
jmp
ja
push
insb
aad
inc
fdivs
adcl
sub
jg
aaa
xchg
leave
mov
lods
mov
imul
xchg
mov
xchg
and
clc
fldcw
add
jnp
pop
icebp
or
or
add
int3
sub
test
cmc
mov
adc
sti
ljmp
sub
fcmovnbe
sar
movsl
jns
xchg
sbb
fsubrl
push
and
xchg
inc
mov
cltd
lahf
pop
inc
xor
imul
or
push
maxps
xor
in
ljmp
xor
add
mov
popf
addr16
dec
push
scas
adc
mov
jne
dec
repz
fsubrs
xchg
aaa
aas
and
rcrl
in
imul
mov
std
inc
cmpsb
movsb
sub
andl
xor
inc
xor
nop
ljmp
adc
ror
je
fldcw
mov
stc
sbb
mul
cmp
ja
rol
mov
mov
test
shrb
leave
xchg
mov
jnp
pushf
leave
jg
aas
gs
cmp
pop
sub
rcrb
stos
sbb
mov
xor
push
in
iret
pop
mov
xchg
mov
push
push
inc
mov
or
and
mov
in
pop
mov
ficoml
lock
push
imul
pop
in
inc
pop
rcll
inc
mov
pop
push
push
outsb
iret
ror
jne
dec
sahf
or
ret
sbb
outsb
lods
jecxz
mov
fs
add
sti
mov
fsubr
gs
sbb
sti
scas
in
stos
sub
rcl
dec
rclb
int3
loopne
mov
rol
mov
dec
jecxz
in
mov
fmul
mov
mov
adc
sahf
and
cltd
notl
xchg
or
ds
loope
outsl
dec
ds
leave
rclb
dec
cmp
pop
inc
xchg
inc
or
jno
jne
adc
dec
xor
cwtl
or
test
mov
inc
jl
cmpsl
and
shll
inc
dec
inc
icebp
repz
sub
jecxz
jl
mov
cld
scas
sub
fisttpll
mov
leave
mov
imul
and
pop
lret
xor
mov
loope
hlt
jmp
aad
out
jmp
ss
and
test
sbb
jno
outsl
mov
popa
clc
or
imul
fidivl
sub
addl
cmp
hlt
insl
cmc
out
cmp
out
pop
sti
subb
sbb
cli
jnp
lcall
cwtl
stc
popl
test
sbb
les
outsl
xchg
xchg
jp
push
lods
out
inc
jno
mov
fnstenv
push
dec
or
rcrb
pop
shl
adc
inc
mov
sub
int3
add
fldl
popa
pop
dec
mov
dec
cmp
mov
or
sbb
arpl
mov
inc
jno
pop
roll
fldt
push
scas
popa
gs
icebp
pop
mov
or
mov
xor
adc
mov
mov
rcll
jne
xchg
out
fs
mov
sbb
popa
out
into
jmp
xchg
push
or
mov
xchg
xchg
inc
lds
lods
push
lock
push
loopne
or
adc
arpl
fbld
cmp
and
inc
adc
fcomps
data16
mov
test
dec
fdivl
ret
dec
fldenv
push
filds
push
rcl
ss
repz
cli
fldcw
fnsave
xchg
cmp
cmp
popf
aas
pop
push
mov
jo
or
ljmp
js
dec
pop
fcmovnu
xchg
fists
inc
lods
out
cmp
mov
inc
adc
hlt
jle
lea
fldcw
les
cwtl
push
jb
stos
mov
pop
or
inc
add
push
jno
push
mov
pop
call
sub
fistl
pop
loop
bound
repz
jle
std
xchg
jno
int
pushf
lock
pop
push
stos
and
mov
rolb
sub
inc
pop
cmp
xchg
mov
pop
loope
sub
add
mov
jno
ljmp
jmp
xchg
lds
sbb
cmpsb
sbb
dec
pop
daa
xchg
sbb
cli
sub
mov
xor
in
jg
xor
out
outsb
or
xor
cmp
sbb
xchg
into
rol
rorb
jmp
xor
xchg
xlat
sbb
loop
fstpl
popaw
mov
inc
sub
adcb
xlat
add
mov
int
daa
mov
loope
ljmp
loopne
xor
lds
xchg
push
icebp
xchg
loop
mov
push
into
ja,pn
jp
cmp
fistps
sti
sbb
cmp
inc
stos
fisttpl
aam
rclb
add
fwait
les
mov
adc
hlt
mov
scas
jmp
insb
dec
jae
push
pop
dec
fnsave
outsb
imul
push
in
idiv
or
ljmp
xor
rorb
jno
out
jbe
inc
add
cmp
lods
lcall
paddq
mov
hlt
aas
int
inc
lock
clc
adc
mov
xchg
mov
into
cmp
jnp
aaa
pop
ss
jp
stc
inc
add
sbb
jne
xorb
aam
aaa
aad
lcall
movsb
xchg
mov
insb
mov
fwait
imulb
mov
or
and
inc
in
mov
push
xor
sub
lods
sbb
nop
push
push
out
xlat
sbbb
dec
ficoml
shlb
mov
gs
aad
add
push
ret
mov
xchg
addr16
jne
ljmp
sar
int3
xlat
das
aad
test
mov
repz
aam
jno
sbbl
lock
cmp
sub
fucom
sub
pusha
adcb
adc
xchg
mov
xor
fs
js
lods
lds
jl
sub
imul
sti
xor
xor
mov
mov
add
pop
out
pop
dec
test
inc
xor
subb
xor
xor
cmc
fs
out
jb
sti
mov
xor
push
push
dec
loopne
pop
pop
es
xor
popa
xor
xchg
jg
sti
int3
add
scas
or
mov
test
out
dec
int3
adc
or
dec
dec
mov
push
mov
out
hlt
inc
idiv
dec
sbb
mov
add
mov
sarb
sub
or
popf
pop
test
or
cmp
mov
cli
mov
pop
imul
loopne
into
ret
leave
pop
jbe
xor
ja
cmp
inc
ret
push
mov
or
stc
andb
push
ret
sbb
call
cli
test
sbb
fucom
add
jmp
sub
mov
push
push
lahf
xor
sahf
add
mov
dec
push
out
sub
push
xchg
rolb
cmp
sub
faddl
pop
rcl
push
pop
aas
mov
cmpsb
mov
sub
fnstcw
add
outsb
stos
ss
lcall
xchg
mov
cmpl
push
aad
dec
sbb
hlt
fmuls
sub
dec
outsb
inc
rorb
cld
or
pop
imul
cli
or
pop
sub
jmp
fsts
jl
sahf
cmp
movsl
ret
add
xorl
orl
or
inc
or
adc
test
pushf
clc
dec
aaa
fnsave
shll
call
sbbb
cmp
lea
cmp
adc
cmp
push
or
lea
xor
and
xchg
xchg
push
sti
mov
dec
or
and
cmp
cmp
pop
and
adc
popf
iret
push
pop
in
add
xchg
scas
sub
aas
int3
mov
nop
or
push
aam
in
xchg
and
dec
xor
pop
int3
sbb
in
cwtl
leave
add
sbb
jge
adc
xchg
pop
fisubs
mov
jno
stos
and
jno
inc
int
addr16
addr16
inc
jecxz
cli
add
push
in
jmp
xchg
jecxz
push
sub
add
cmp
pop
sbb
inc
pop
das
inc
rclb
adc
push
mov
adcb
pop
xchg
fadd
mov
stc
fldl
mov
adc
push
push
push
lea
test
inc
in
subb
xor
cmp
mov
cmp
xchg
xor
adc
ja
mov
xchg
icebp
jnp
pop
sub
xchg
mov
jno
push
scas
xor
in
inc
push
ss
add
mov
ja
lods
scas
sbb
stc
jg
push
clc
loopne
xchg
and
push
jp
push
aad
sbb
sub
pushf
xor
sti
jmp
test
dec
xor
inc
and
push
add
add
xlat
xor
or
pop
or
xor
jns
mov
lods
pop
jl
xor
push
ss
push
into
or
and
roll
fmuls
xchg
mov
mov
cvtps2pd
inc
or
or
sub
aas
adc
aam
rcrl
push
jp
cmpsb
sbb
hlt
ss
and
push
xchg
cmp
inc
dec
loop
sub
jge
adc
mov
ret
cli
mov
sbb
mov
and
out
jbe
gs
int
sarb
jno
push
jno
addl
xor
push
mov
in
lock
mov
movsb
aad
inc
or
add
js
enter
dec
ljmp
outsb
rorb
pop
cld
cmp
add
pop
adc
xchg
push
clc
push
fdivl
add
sub
test
outsl
aam
push
cmp
jno
and
push
iret
jno
out
in
mov
mov
popa
sbb
push
dec
jne
data16
test
push
aaa
sbb
das
mov
xor
jne
pop
fwait
cmc
cwtl
jo
fisubl
test
add
jg
pop
shll
stos
test
aad
fistl
imul
fstpt
and
push
gs
stc
mov
or
fcoms
loopne
add
and
or
jo
xchg
mov
jns
inc
xor
xor
mov
packssdw
jno
push
mov
cmc
jno
ret
rorb
sbb
or
jae
push
pop
xchg
mov
in
or
push
mov
mov
test
dec
fs
dec
mov
push
les
lds
out
fmull
fwait
inc
and
push
adc
insl
cltd
fwait
mov
imul
jns
jl
jae
mov
mov
inc
cmpl
adc
sub
mov
mov
pop
dec
ud2
mov
jnp
or
dec
or
repz
gs
adc
fdivrs
insl
push
xchg
jo
jmp
mov
push
xchg
outsb
mov
dec
jo
add
std
aas
lock
mov
or
shlb
mov
add
mov
sbb
std
lret
push
stc
pop
jo
pop
pop
sbb
iret
fdivl
sbb
mov
and
sub
inc
mov
push
cmp
jo
add
mov
aaa
cli
and
xor
pop
in
mov
sub
xchg
xor
dec
pop
mov
inc
or
scas
daa
divl
fs
and
push
gs
jno
add
xchg
cwtl
out
dec
cltd
cs
jae
lcall
stos
dec
or
shr
lea
sarl
decl
mov
push
xlat
dec
or
inc
cli
bound
into
cld
add
inc
push
aad
incb
je
test
push
movsb
out
out
test
mov
int3
cli
mov
iret
in
cmp
mov
lods
out
adcb
je
cmp
ljmp
in
push
sub
inc
je
jle
inc
js
push
fadds
pop
fldl
jne
mov
fcomps
adc
cmp
cli
movl
fcompl
les
out
aaa
scas
xchg
ds
cmc
inc
add
pop
pusha
cmp
dec
inc
dec
push
or
push
rcll
inc
xor
inc
outsb
fs
cltd
push
in
test
shrb
outsb
test
popa
xor
negb
push
jmp
aas
pop
cltd
rcll
outsb
ja
lcall
mov
mov
dec
dec
repz
inc
mov
into
push
fstpt
mov
inc
mov
inc
popa
push
mov
inc
cmp
lock
lods
push
inc
aad
adc
mov
inc
stos
rcrl
jmp
in
aam
push
negl
fwait
inc
mov
repnz
xor
or
adc
push
lods
cwtl
sub
pop
in
xor
sub
mov
rcl
jae
insb
pusha
xor
xor
xor
sbb
jne
in
lods
dec
shlb
inc
stos
add
dec
jecxz
pop
in
cmp
inc
or
sahf
testl
in
aas
xor
sub
sbb
inc
dec
faddl
popa
xor
test
and
fsubrl
add
insl
push
jno
add
and
sbb
pushf
dec
and
inc
add
push
jbe
addl
push
dec
mov
je
sub
jmp
xchg
inc
mov
daa
fsts
and
js
fidivl
cmp
and
rcrb
arpl
add
fisubl
dec
lcall
dec
insl
and
mov
jno
in
xor
sub
pop
push
adcb
mov
ss
in
insl
outsb
inc
ret
jg
mov
or
mov
xchg
push
popa
bound
cmp
mov
pop
push
dec
cmp
mov
subl
pop
ror
push
jecxz
icebp
addr16
push
pop
popf
lds
dec
repnz
aad
repz
mov
iret
xchg
and
sub
push
push
and
jecxz
repz
repz
push
jo
scas
aad
in
outsb
shll
inc
pop
adc
sub
out
loope
sub
rclb
lock
mov
out
mov
mov
jnp
dec
dec
jecxz
jno
xor
pop
xchg
sub
incl
pusha
aaa
leave
cld
packuswb
int3
test
sub
clc
dec
pushf
je
int3
adc
dec
les
push
repnz
retw
stos
enter
repnz
inc
or
fcoml
adc
pop
lret
lods
nop
and
std
notl
push
adc
push
add
nop
pop
pop
sub
bound
adc
and
jae
lods
std
dec
lret
lods
dec
adc
icebp
dec
rolb
es
lods
cltd
xchg
subl
jge
sbb
push
das
pusha
pop
cmc
dec
xor
ds
arpl
jae
dec
dec
movsb
sarl
push
sub
rcrb
test
or
out
jns
jns
or
scas
add
pop
xchg
outsl
push
or
pop
les
frstor
sahf
and
pop
rcrb
xabort
test
pop
sbb
push
xor
adc
add
lds
cmp
inc
mov
repz
shrl
into
hlt
inc
popa
scas
mov
jnp
cmpl
int
rcrb
adc
hlt
fnstenv
int3
cli
push
test
add
pop
iret
add
nop
cwtl
fists
mov
dec
inc
sbb
outsl
call
jo
fldl
cmc
jl
fisttpl
jno
call
ss
int3
push
mov
cwtl
or
call
testb
adc
push
sbb
aas
in
hlt
stos
xlat
outsl
imul
add
mov
ds
add
inc
cltd
insl
and
out
sbb
daa
push
and
cwtl
xchg
pop
sbb
xor
adc
inc
shlb
int
mov
addr16
or
inc
adc
mov
mov
or
cld
cmpsl
cmp
inc
popf
shrl
push
mov
pop
jb
daa
test
jle
aam
inc
aam
ret
sti
or
push
dec
negl
push
dec
xorb
mov
xchg
jo
imul
pop
popf
mov
and
psubd
and
js
sub
push
mov
jo
aaa
insb
mov
pop
inc
dec
popa
inc
push
dec
mov
push
pop
shlb
xchg
push
sbb
fstpl
fsubs
mov
xlat
xchg
jecxz
push
je,pt
add
cmp
jge
aaa
sub
testb
fstp
sbb
cld
inc
push
and
daa
or
cmpsb
movsl
loope
adc
out
inc
ja
push
rolb
or
mov
cmc
sbb
shlb
sti
cltd
and
pop
ror
pop
xor
enter
das
xchg
xchg
adc
mov
pop
mov
add
xlat
push
mov
mov
or
pop
fstpt
xchg
dec
sub
popa
fst
cli
push
enter
sub
or
ljmp
and
cwtl
push
push
cli
cmp
fsts
roll
or
imul
push
scas
dec
rcll
adcl
xchg
dec
add
add
ljmp
xor
add
lods
sbb
fistl
jbe
or
lcall
iret
outsb
jae
dec
mov
or
fcoml
jnp
repz
pushf
bound
cmc
scas
sbb
in
push
adc
sarb
imul
dec
mov
xor
pop
jg
cmpsb
mov
andb
inc
loop
fimuls
lods
jb
pop
jns
shl
sub
xlat
int3
or
in
ljmp
scas
add
pop
dec
ss
ljmp
push
push
dec
push
ljmp
push
push
test
subl
dec
and
and
test
adc
insl
sub
gs
xchg
cmp
xchg
xchg
fmul
ja
mov
push
cld
mov
inc
dec
shr
adc
aam
mov
dec
add
cwtl
push
push
mov
xchg
dec
pop
add
aaa
push
xlat
add
lds
mov
stos
lret
fxch
out
push
lds
in
test
in
adc
leave
mov
aaa
int3
add
mov
inc
subl
clc
push
add
push
out
call
ret
cmova
rcl
push
cmc
roll
xchg
mov
mov
pop
les
sahf
rorb
stc
push
dec
mov
adc
xor
fisttps
nop
movsl
nop
sbb
pop
iret
aas
in
push
and
dec
lret
adc
sub
sar
pop
shl
out
aas
std
mov
adc
stc
stc
adc
push
or
in
xchg
and
lds
ljmp
test
je
push
sub
inc
push
enter
mov
xchg
es
imul
inc
rcr
mov
andb
jle
js
cmpb
inc
ror
fcmovb
aas
push
es
mov
push
fs
div
dec
inc
adc
sbb
movsb
test
fisttpl
mov
or
dec
pop
adc
pop
sbb
int
jle
fcomi
in
push
xor
push
xchg
push
push
std
cmp
stc
push
and
enter
jecxz
out
inc
jbe
lea
les
shr
test
cmp
sbb
jno
roll
inc
adc
les
mov
movsl
sub
cmc
pop
and
sub
adc
mov
popa
cmp
sar
or
add
cmp
sbb
int3
loope
icebp
pop
jns
les
fidivrl
adc
pusha
cmp
and
sbb
int3
rcll
lea
aad
push
gs
fsubrs
pushf
xchg
fisubrs
je
shll
fildl
sarb
push
aad
cmp
push
adc
ja
pop
cmovae
mov
jno
les
outsl
sbb
or
pop
adc
mov
out
sarl
imul
or
std
ror
dec
or
aam
jno
mov
loope
xchg
sub
or
mov
inc
ja
sbb
add
pushf
push
ss
es
loopne
arpl
sbb
mov
push
orb
and
iret
add
inc
sub
pop
sbb
leave
adcb
adc
lods
dec
ss
enter
sbb
orl
xor
xchg
xor
test
mov
dec
subb
loopne
or
mov
pop
cltd
jne
dec
pop
push
push
push
imul
dec
test
sub
inc
rcrl
add
xor
xor
out
into
xchg
pop
adc
add
pop
mov
xor
adc
out
in
pop
aam
lea
xor
sub
adc
test
pushf
sti
add
out
or
fnop
push
and
call
sti
xor
and
and
cmc
cmp
roll
add
and
das
insb
int3
inc
dec
stos
dec
push
xor
add
dec
cmp
push
lret
clc
jbe
into
sub
add
lret
add
push
cmp
push
jmp
push
jno
hlt
mov
xchg
cmp
pop
or
push
mov
dec
mov
jg
aaa
adc
sub
inc
or
test
and
xorb
add
xchg
sbb
icebp
in
push
xchg
mov
push
sub
sti
js
pop
enter
ss
inc
in
xor
mov
movsb
call
push
ds
push
repz
sbb
xchg
fmul
cltd
push
mov
bound
imul
sub
mov
popa
sbb
jno
add
xchg
shl
dec
andb
cmp
fiaddl
jno
aaa
push
icebp
dec
xor
dec
add
sub
leave
mov
cmp
mov
cli
notb
mov
jno
rclb
pop
xor
enter
fs
ror
lods
scas
sbb
xchg
push
add
lcall
out
xchg
adc
das
insb
inc
out
sar
add
dec
xor
xchg
xor
push
push
mov
leave
shl
and
xchg
adc
clc
scas
into
cmp
fnstenv
es
outsb
inc
mov
and
lds
sbb
dec
adc
pop
inc
push
fdivr
adc
int3
adc
fsubrs
clc
call
jb
in
inc
lods
popf
lds
or
nop
int
in
pushf
xchg
cwtl
lds
in
cmpsl
fidivl
sbb
lahf
sub
clc
ljmp
push
outsb
mov
push
push
movsb
mov
insl
adc
xor
sub
inc
pop
inc
mulb
int3
sub
jp
fimuls
jge
jns
cmp
shlb
jle
mov
clc
out
xchg
pop
sbb
push
fnsave
test
add
int
pop
xchg
das
sbb
addb
fldcw
and
jmp
icebp
dec
adc
mov
or
subb
imul
stos
fcmovne
xchg
or
rcl
and
aad
adc
fidivs
cmp
xor
aaa
shrb
ret
and
push
ss
sbb
add
pop
js
xor
fstps
aad
adc
push
sub
cmp
push
jno
or
xchg
sarl
push
dec
xlat
or
mul
cmp
push
ds
out
imul
push
das
dec
pop
sbb
inc
lret
or
jno
int3
pop
push
and
mov
mov
mov
add
in
decb
dec
inc
fistpl
xchg
push
test
insl
sbb
push
inc
inc
sahf
xor
push
push
outsb
cmp
inc
fldenv
aaa
arpl
sub
push
rcll
outsl
out
mov
pop
or
mov
push
fcomps
fldenv
in
icebp
call
push
pushf
push
xchg
inc
pop
shrb
jmp
outsb
cwtl
cmp
js
cmp
shr
sub
les
mov
push
iret
add
pop
pop
sbb
pop
std
in
outsb
gs
in
mov
jmp
std
test
in
mov
lds
outsb
das
sbb
std
adc
cmp
adc
jo
daa
outsb
inc
imul
mov
push
mov
sbb
inc
daa
es
mov
les
xor
shl
sarl
xorl
sbb
inc
adc
jbe
ss
sub
into
notb
sbb
popa
sbb
lods
fnstcw
xorb
inc
sbb
sbb
cltd
and
adc
roll
push
inc
inc
push
popf
stc
test
cld
cmp
sub
or
and
decb
call
iret
add
pop
aad
add
in
int3
push
push
movsb
lea
pop
or
add
dec
push
mov
mov
push
into
sub
and
add
outsl
jl
or
dec
daa
sti
xchg
sub
cmp
push
dec
daa
pop
push
int
cmp
add
sub
fwait
pop
popa
stos
bound
dec
pop
xchg
stc
push
cwtl
jge
sbb
xchg
js
iret
add
movsb
fwait
mov
xor
fdivs
pop
ja
jno
stc
add
cld
in
inc
cmc
xor
add
pusha
testb
and
xchg
mov
xchg
cmp
lahf
jmp
cmc
fucomip
push
icebp
sub
dec
jno
cmpsb
push
outsl
cmp
inc
dec
aaa
fwait
sub
cmp
in
bound
out
jno
cmp
call
adc
sbb
stc
and
rorb
and
push
pusha
mov
push
mov
push
aaa
lahf
adc
addr16
cltd
and
sbb
pop
mov
inc
fdivl
mov
dec
push
jns
adc
cmp
mov
data16
in
xchg
pop
jne
outsb
inc
sti
xchg
lahf
leave
jp
je
mov
sti
lds
std
jno
inc
lahf
dec
repnz
mov
mov
sbb
xchg
jno
mov
xor
fsubp
pop
out
push
jno
mov
insl
xor
mov
dec
push
mull
dec
fnsave
in
jns
mov
mov
or
adc
gs
movsl
pushf
aam
add
dec
xor
in
into
rclb
add
mov
sbb
dec
addr16
in
inc
pop
popf
inc
in
jmp
je
enter
push
out
sti
pop
div
cltd
adc
sbb
std
push
dec
jno
xchg
adc
xchg
push
clc
push
out
cmp
outsb
nop
push
aas
inc
testb
out
cmova
pop
and
sbb
or
jns
dec
push
out
inc
stos
int3
cs
lret
cmp
mov
lods
fdivrp
leave
loope
add
inc
jp
lcall
jne
adc
xorl
jno
fcmovne
cmp
pusha
dec
aaa
pop
and
adc
pop
cmp
pop
insb
sahf
sbbb
pop
into
sbb
lcall
xchg
icebp
or
fcomps
cmp
inc
lds
insl
jge
movsb
inc
cmp
insb
fistl
xchg
mov
aam
movsb
repnz
or
adc
cmp
jae
pop
das
fucom
pop
add
scas
and
pop
out
xor
and
inc
cs
cwtl
aad
cmpsl
push
xchg
mov
ja
cs
arpl
and
or
in
aad
mov
loope
roll
fimull
enter
stos
fsubl
push
aam
std
mov
cmp
or
sbb
pop
adcl
dec
sub
test
xor
jl
out
sbbl
jno
sbb
mov
in
dec
scas
filds
lea
std
aaa
dec
push
int3
sbb
test
inc
hlt
push
xchg
cmp
lods
and
add
inc
add
loopne
mov
inc
sbb
xor
adc
xchg
xor
push
std
arpl
inc
pushf
xor
mov
dec
aas
in
and
pcmpgtw
pop
out
push
iret
push
sbb
push
adc
test
and
into
cmpl
psubq
movsb
shll
pusha
cmp
adc
cmp
dec
push
mov
aas
pop
cs
mov
pop
sub
dec
fwait
adcb
sbb
out
test
popf
lahf
sahf
addr16
mov
push
sbb
cltd
out
mov
out
dec
xor
loopne
push
xchg
bound
aas
dec
fsts
inc
iret
loopne
push
js
push
sarl
cltd
inc
pusha
push
sbb
dec
adc
cli
jo
inc
int3
in
pop
icebp
rcll
imul
cmc
pushf
outsl
dec
jl
bound
adc
xor
push
xchg
pop
adc
aas
in
sbb
xchg
fisubs
dec
cli
push
mov
dec
mov
push
push
lods
push
sbb
ja
sub
inc
ds
fs
in
dec
sbb
shl
sti
sub
xchg
mov
aad
int
xchg
nop
push
push
out
add
adc
mov
mov
or
ret
outsb
jl
pop
pop
lds
mov
sbb
mov
stc
add
sbb
pop
pop
push
out
dec
data16
add
roll
sbb
adc
push
xor
inc
sti
jno
ret
adc
addb
sub
adc
movsb
add
pop
push
push
dec
aaa
imul
lahf
xchg
push
outsb
mov
mov
jge
or
roll
pop
outsl
setbe
aad
dec
bound
movsb
in
test
jno
mov
fwait
loop
xchg
stos
mov
in
sbb
cli
xor
pop
mov
or
sub
aas
test
dec
pop
push
xor
cs
std
sub
dec
add
cmp
add
xor
imul
xlat
rcrl
add
xlat
fs
xchg
and
inc
mov
cmp
daa
pop
fmull
push
gs
pop
mov
jp
adc
adc
jns
std
sub
int3
xor
jmp
int
sti
aaa
shll
movsb
cmp
dec
sub
add
xchg
xchg
gs
mov
bound
nop
push
cld
imul
mov
dec
mov
cmpsb
in
xor
adc
pop
xchg
and
jbe
addr16
pcmpgtw
arpl
pop
inc
pop
push
dec
inc
nop
lahf
mov
loopne
add
dec
cld
repz
andl
fnstenv
cmp
call
push
inc
inc
adc
inc
loope
inc
jl
or
lret
jp
in
std
mov
insl
arpl
or
cmp
cmp
xor
sub
push
pshufw
or
mov
dec
les
inc
fadds
jl
out
sub
inc
orl
bound
cwtl
push
mov
adc
inc
and
push
cmc
push
lods
sbb
scas
inc
xor
push
lcall
sbb
repz
enter
sub
sbb
push
and
mov
shl
or
sbb
pop
or
mov
push
add
and
or
and
ljmp
jl
das
dec
fldenv
adc
mov
and
cmp
icebp
sub
inc
and
lcall
dec
lea
int
dec
adc
xor
pop
or
jp
into
loop
mov
std
pop
cmpxchg
push
iret
or
xchg
cltd
xchg
je
dec
pop
sub
cmp
cld
mov
dec
pop
mov
test
and
sahf
xor
out
andl
mov
pop
orb
hlt
xor
xor
dec
or
ja
dec
adc
add
sarl
push
mov
jno
out
mov
xchg
push
jmp
xchg
sbb
jns
jge
das
into
arpl
fstps
rol
jnp
jae
inc
rorl
push
xor
mov
inc
cli
cmpsl
mov
push
popf
sub
rorl
sub
xchg
rorl
shrb
mov
aad
sahf
dec
push
popa
sbb
push
dec
mov
jecxz
clc
push
inc
movsb
rorl
into
xor
cmp
jge
push
ja
dec
in
inc
jg
int3
xchg
mov
or
add
or
rcl
dec
aaa
xchg
cwtl
dec
out
xor
mov
test
cmpsl
or
fisttpll
sbb
xor
sbb
push
cltd
lahf
jne
dec
and
add
dec
xor
add
inc
std
dec
adc
mov
es
xor
and
sub
lcall
pop
sbb
fdivl
cld
mov
adc
and
or
inc
push
sbb
bound
mov
aad
into
push
int
or
mov
pushf
mov
fisttpl
into
sti
inc
clc
add
pop
add
adc
adc
cmp
jno
mov
movsb
xor
adc
stos
pop
sub
out
inc
pop
or
test
push
jns
adc
sub
mov
js
mov
adc
sbb
loopne
inc
cld
dec
sbb
pop
insl
and
insl
push
dec
shl
and
sti
jns
push
rcr
in
sbb
mov
cmpsl
inc
add
pop
fstpl
xor
je
out
dec
test
adc
jns
adc
daa
mov
cmp
cmp
pop
cmp
inc
jo
pop
sarl
daa
dec
test
addb
push
cmc
push
daa
sub
push
push
out
mov
push
gs
lret
inc
inc
inc
mov
fsubr
jno
dec
ljmp
add
jns
xchg
push
lods
mov
jmp
stos
xchg
jnp
mov
sub
jne
pop
sub
sbb
xchg
xchg
mov
inc
ljmp
sti
inc
popf
push
pop
iret
push
push
mov
rcll
test
lahf
sbb
jmp
sbb
pusha
cmp
ds
cmpl
jmp
arpl
movsb
popa
imul
push
jg
inc
xor
cltd
call
and
movsb
pop
rcrl
push
gs
int3
mov
gs
or
loope
xchg
inc
gs
inc
cmp
insl
rcrl
leave
aam
fnsave
lcall
lcall
sbb
clc
cmp
into
mov
in
inc
jno
daa
xchg
sub
push
jne
fcomip
or
ficomps
stos
lock
lsl
xchg
dec
mov
ljmp
add
pop
push
sbb
insl
ffree
mov
in
sbb
and
je
pop
xor
add
xchg
jge
sbb
lcall
ret
jae
mov
pop
test
outsl
enter
pop
push
aas
push
andl
or
xchg
fldl
mov
aas
pop
push
jmp
dec
push
xchg
fwait
ds
test
test
push
cmp
aad
fcomps
mov
xor
ret
push
cmp
dec
shlb
dec
sbb
lcall
fs
push
push
pop
andl
sub
scas
add
sub
insl
add
jp
mov
sbb
jo
inc
dec
popf
pop
inc
rcl
jno
mov
sub
dec
xchg
dec
ss
aam
rorl
mov
in
inc
jno
xchg
les
dec
ror
leave
push
lds
mov
movsl
dec
rolb
xor
loop
jne
push
push
push
arpl
ss
aad
jno
rcll
icebp
popa
sbb
push
int3
push
out
push
dec
pusha
leave
fidivs
rcll
lock
or
push
lds
std
ja
popa
push
inc
in
xchg
cld
inc
js
xchg
push
int3
aaa
inc
icebp
sbb
mov
mov
fs
cmp
ss
adc
loop
push
xchg
out
dec
push
mov
and
ja
ret
sbb
inc
inc
imul
nop
sti
mov
adcl
sbb
or
xor
in
push
cld
lahf
cmp
aad
cmp
dec
add
jno
pop
arpl
push
push
xor
aaa
into
xlat
shll
mov
sbb
ss
adc
pop
inc
cld
mov
push
lcall
dec
sbb
inc
ficoms
in
out
pop
subl
repnz
jno
add
xor
aaa
aam
daa
outsb
or
addr16
in
push
xchg
or
leave
inc
jecxz
outsb
add
sub
mov
mov
add
outsb
inc
and
shlb
les
cwtl
rorl
lods
ror
ljmp
inc
fcomp
xchg
inc
dec
loopne
inc
inc
pop
pop
bound
es
xchg
sub
dec
jo
or
mov
inc
aam
or
push
or
or
ret
or
cwtl
pop
clc
pop
jmp
jo
movsl
pop
xorl
mov
adc
mov
pop
push
adc
inc
push
aas
mov
mov
mov
xchg
cmp
cmp
movsl
inc
push
dec
adc
dec
ret
jo
pop
insl
mov
dec
icebp
push
repnz
push
push
adc
mov
mov
inc
xor
inc
out
dec
inc
push
xlat
push
sarl
fldenv
xlat
mov
daa
and
or
movsb
orb
test
daa
inc
or
jecxz
dec
outsb
jg
rorb
fidivl
mov
cmp
movsb
lds
das
in
fsts
adc
xchg
push
pop
cwtl
rorl
mov
and
push
cli
fsts
jnp
xor
daa
xchg
cmp
mov
mov
mov
dec
std
sbb
mov
mov
jle
fldcw
xchg
rorl
push
cli
dec
xlat
dec
cmc
leave
dec
lret
call
push
scas
cmc
push
inc
sub
xor
mov
cwtl
jo
cmp
cmc
lahf
stc
test
dec
mov
lidtl
sbb
mov
pop
jo
sbb
popl
inc
dec
roll
hlt
movsl
sub
adc
add
inc
jo
into
pop
in
imul
jp
xor
adc
or
add
in
cmp
rclb
inc
call
xor
mov
pop
leave
mov
and
test
jg
ret
push
scas
lret
push
mull
or
xor
push
jecxz
mov
xlat
rclb
shlb
outsl
leave
mov
mov
sub
sbb
outsb
int3
test
les
into
adc
push
inc
int3
iret
popf
mov
mov
adc
mov
pop
or
mov
mov
fcomps
xor
push
cmp
jb
push
out
sbb
add
jo
xchg
mulb
stc
aas
out
outsb
pusha
jp
inc
jns
dec
ror
sbbl
add
mov
adc
js
sub
es
subb
out
out
insb
dec
iret
mov
dec
push
rcl
in
daa
jecxz
and
iret
inc
stos
mov
and
and
cmpsl
inc
mov
mov
adc
in
sbb
pop
mov
jno
xor
xchg
sbb
lea
adc
outsb
mov
fwait
ljmp
outsb
mov
aam
aaa
add
in
jns
stos
xor
js
out
out
insl
mov
loop
hlt
fldt
out
mov
sub
or
xor
call
adc
fdiv
dec
sti
xor
sub
inc
xchg
dec
loop
push
aaa
enter
adc
push
roll
inc
nopl
push
dec
pop
xchg
push
push
dec
dec
sbb
mov
push
xchg
cmp
shl
lock
inc
xlat
aaa
inc
sub
pop
mov
dec
repz
xor
repz
dec
and
pop
dec
shl
lods
push
dec
and
lds
sbb
push
mov
sbb
lock
push
mov
or
loopne
or
push
shll
mov
add
aad
lods
loope
push
adc
mov
or
mov
xchg
push
dec
jno
cld
sub
out
xchg
lods
push
add
push
adc
push
test
scas
mov
in
push
test
fwait
pop
jp
or
push
adc
mov
add
mov
push
cli
mov
js
pop
inc
pop
mov
fnstsw
xchg
cmp
inc
fs
mov
outsl
xor
loop
mov
pop
xor
or
jmp
nop
cli
mov
js
mov
ret
or
std
or
jecxz
js
add
cmp
fimuls
pop
addr16
inc
push
aad
fnstenv
test
dec
mov
test
out
push
jne
mov
sbb
outsb
adc
and
mov
in
sarb
jmp
nop
pop
jb
cmp
xchg
sbb
arpl
and
cmpsl
dec
xchg
sarl
es
iret
lret
pop
xor
pop
aaa
sbb
out
repz
sbb
and
mov
xchg
outsl
sub
leave
aam
subl
nop
rcll
aam
fldenv
adc
mov
jle
push
call
mov
push
leave
sub
ret
fwait
sarl
adc
adc
push
sub
sub
mov
push
in
sbb
dec
sarl
jo
add
mov
or
xor
xchg
ja
sub
popa
sbb
enter
push
cmp
xor
jno
pinsrw
gs
imull
stc
dec
insb
or
or
dec
jmp
and
xchg
or
call
push
rcrl
leave
pop
adc
mov
insl
push
mov
push
pop
push
sbb
sub
shrb
jno
rclb
clc
add
cs
mov
dec
decw
imul
mov
sbb
sub
add
push
sbb
push
imul
incl
sbb
sti
xchg
push
sbb
pop
cli
outsb
or
in
fbld
pushf
inc
pop
int3
fwait
sub
inc
in
pop
inc
and
push
outsl
xchg
repnz
mov
shlb
lcall
add
mov
bound
cmp
xor
cmp
mov
lds
mov
xor
xchg
fdivs
or
mov
cli
addr16
aad
adc
pop
dec
xor
dec
mov
testb
iret
dec
push
dec
xlat
inc
cld
fcomps
xchg
jp
sti
mov
add
aam
xor
and
push
or
inc
pusha
mov
xchg
scas
fyl2x
aad
push
dec
pop
loope
or
and
dec
aad
pop
scas
sub
jno
adc
stc
lcall
adc
sar
insb
imul
ss
je
in
dec
ja
xor
xor
push
aas
or
mov
or
push
inc
pusha
push
movsl
push
pop
push
mov
push
dec
popa
push
push
popf
pop
mov
test
cmp
cmc
dec
mov
inc
test
xchg
add
ljmp
and
and
leave
mov
std
jge
lock
adcl
sti
push
test
int3
push
fstpt
push
inc
andb
adc
popa
fcoml
outsb
je
pop
lcall
or
scas
or
or
cmp
or
sbb
daa
fstpt
adc
pop
jg
mov
xor
adc
fidivl
hlt
sbb
inc
mov
sbb
push
sub
into
fucom
lcall
clc
pop
push
pop
rcr
in
aad
mov
and
std
sub
sti
jno
aam
and
dec
add
pop
sub
aad
sub
pop
rcrl
bswap
mov
mov
nop
adc
lods
arpl
xchg
or
rcrl
ss
sbb
movsl
sub
shll
arpl
mov
xlat
push
aaa
mov
jb
std
mov
cmp
and
pop
sar
lock
repnz
imul
sahf
xor
push
hlt
xor
fcoml
cmp
test
or
das
pusha
mov
js
insb
push
dec
add
int3
lods
push
jg
insb
mov
fbld
shll
adc
insl
adc
scas
mov
jnp
xor
cmp
and
in
je
movl
stos
arpl
sbb
mul
sti
mov
adc
outsb
xchg
lahf
or
sbb
cmpsl
sbb
jmp
aas
inc
push
xchg
dec
shll
adc
dec
push
pop
inc
push
push
mov
add
lahf
mov
push
pop
cmpsl
jle
sbb
sarl
xor
jns
push
dec
insl
maxps
subb
xchg
inc
jns
adc
cmpl
ss
mov
jle
cmpsl
cwtl
or
xor
idivb
sub
xor
scas
pop
xor
sbb
cwtl
iret
sbb
mov
jns
jb
cmp
add
dec
pop
ds
xchg
mov
test
shl
ss
jbe
jg
fimull
dec
pop
fstl
mov
jp
enter
fnstsw
push
int3
sbb
inc
aad
pop
shl
cmp
movsb
aas
lahf
fcoml
out
inc
outsb
test
mov
in
push
jo
sbbb
jno
sbb
or
cli
stos
or
sub
dec
pop
sarb
inc
push
jno
rorb
add
jb
push
ss
push
lods
lahf
shlb
and
movsl
mov
fbstp
or
orb
push
cltd
orl
fwait
pop
inc
lea
cmc
sub
add
adc
std
sub
mov
push
addb
setbe
int3
sti
mov
or
sub
pop
inc
scas
sbb
cmp
pop
pop
xor
jno
xor
loop
mov
rcrb
aad
jno
into
mov
jne
scas
inc
pop
ss
aaa
mov
xor
in
pop
and
pop
lahf
loop
jne
jge
arpl
and
mov
push
add
leave
push
add
outsb
rcll
sbb
mov
dec
or
mov
fucomi
pop
mov
shll
cmp
out
outsl
sub
xor
push
xchg
jp
mov
stos
in
test
das
mov
inc
in
xchg
sub
sbb
cwtl
pop
std
int3
das
in
cmp
jne
xchg
mov
or
push
rcrl
inc
in
mov
push
daa
and
enter
inc
cmp
cmp
xchg
mov
mov
inc
outsb
ret
and
cmp
dec
in
icebp
pop
mov
leave
leave
inc
sar
inc
enter
pop
push
lcall
mov
mov
dec
in
adcl
fidivrl
pop
or
js
dec
cmp
sahf
int3
test
xchg
push
fs
ja
mov
and
adc
scas
push
cld
les
sahf
sub
inc
add
fbstp
clc
daa
enter
push
movaps
push
push
addr16
push
pop
cmp
push
repz
adc
xchg
push
lods
cmp
mov
cmp
xchg
push
fnstsw
rcll
and
jmp
aad
aam
push
pop
dec
cmc
std
push
repz
aad
repz
or
adcb
push
fiaddl
ss
push
sbb
and
not
push
xchg
stos
inc
sub
cmpsl
mov
movsb
cld
jns
sbb
cmp
aaa
sub
inc
in
mov
adc
or
lea
mov
inc
add
aad
push
adc
decl
roll
fsubs
inc
repnz
mov
es
inc
push
sub
movsl
daa
adc
popf
push
adc
add
cmp
pop
xor
sub
push
lea
xchg
push
jl
xor
mov
sbb
shlb
enter
sub
xor
push
movl
inc
inc
xchg
hlt
and
lods
dec
flds
je
lea
push
cmpsb
testl
push
enter
sub
xlat
rcrl
add
movsb
mov
repz
jns
mov
cmp
sbb
jno
scas
andl
cwtl
push
mov
lds
ljmp
shlb
insl
dec
fistl
adc
add
adc
in
fsts
stos
lods
adcb
or
int
jecxz
push
outsl
sbb
sub
lret
rorb
push
leave
outsl
inc
push
dec
add
dec
jge
lods
cmc
mov
imul
mov
jmp
dec
adc
insl
and
pop
movsl
sub
popa
pop
dec
cld
pop
ja
aaa
inc
push
sbb
ret
gs
push
stc
ja
adc
pop
mov
popa
push
jo
mov
out
add
xchg
or
adc
sbb
lea
inc
mov
int
sbb
xchg
inc
mov
popa
xor
adc
push
getsec
movsb
adc
pop
es
push
xor
xchg
push
cwtl
mov
pop
int
jp
cmp
add
pop
pop
dec
cs
inc
ds
dec
enter
mov
inc
lock
inc
or
pop
cmp
mov
pop
mov
cli
cltd
or
sub
jno
outsb
mov
test
arpl
test
movsb
jmp
pop
xchg
les
dec
and
das
iret
jns
and
lods
xor
or
mov
ljmp
outsl
inc
xchg
icebp
sub
loop
dec
and
cltd
rep
cs
les
jl
xor
test
clc
mov
shrb
cltd
inc
jno
outsb
les
pop
jns
xor
push
lahf
dec
jno
mov
movsl
mov
xchg
adc
push
aad
and
or
lret
pop
jmp
es
xchg
in
dec
mov
bound
dec
mov
mov
push
outsl
repz
inc
pop
push
mov
dec
inc
jb
jo
ret
pop
pusha
cli
or
xor
pop
adc
jae
jmp
mov
int
xchg
xorl
pop
dec
inc
push
into
push
jp
ret
movsb
push
nop
jl
sub
jl
adc
cld
imul
mov
adc
popa
lea
stos
aas
paddusw
dec
ss
or
scas
jecxz
sub
mov
loopne
mov
xor
and
mov
xor
sbb
rorl
sub
pop
mov
or
adc
add
cmp
into
dec
dec
xor
push
sbb
push
cmp
dec
nop
pop
hlt
aaa
inc
ljmp
cmp
cmp
std
or
xchg
or
push
adc
cmp
cmpsb
jno
jae
test
nop
xor
iret
cs
cltd
dec
xor
or
repnz
stc
pop
jl
divl
mov
cmp
insb
lcall
cwtl
jo
sbb
push
push
lock
and
sub
test
daa
and
or
nop
and
inc
aas
insl
and
xchg
cli
jmp
ret
fiaddl
cmp
movsl
sub
jecxz
shlb
or
mov
add
lcall
push
fldt
or
jno
push
inc
jbe
add
mov
in
ljmp
add
dec
js
jno
mov
mov
das
xor
mov
sbb
movsb
mov
and
dec
adc
cli
mov
adc
lahf
inc
in
lahf
aad
cmp
push
sub
adc
imul
inc
sahf
cmp
flds
inc
mov
or
adc
add
fisubs
int3
out
pop
lcall
inc
aas
cmc
es
aas
or
or
push
add
int
in
push
push
loope
and
sarl
icebp
subb
add
nop
mov
push
pop
int3
lods
in
lret
jno
cli
addr16
push
insl
push
gs
inc
and
push
in
and
fisubrl
lock
ror
arpl
push
and
xor
mov
arpl
push
scas
inc
jno
push
lcall
add
pop
xchg
mov
mov
mov
movsl
out
mov
negl
arpl
add
jp
xor
jp
aas
fldl
incl
arpl
fidivrl
lahf
fadds
decb
fiadds
jno
stos
inc
mov
je
xor
outsb
sbb
jae
sub
push
sub
pushf
outsb
cmp
lcall
das
push
cmp
jg
movsb
adcb
mov
adc
xor
lret
sbb
push
cli
pusha
inc
daa
cmp
pop
pop
fwait
xchg
xor
sarb
inc
daa
int
sbb
cmp
push
lret
push
dec
cmc
dec
jle
sub
test
adc
mov
push
fs
test
sbb
andb
mov
popf
dec
xchg
pop
sub
repz
stos
inc
cwtl
repnz
rorl
fcoml
lds
jbe
leave
test
sarl
jbe
lods
add
orl
faddl
in
icebp
push
add
or
int3
movb
ret
cmp
mov
push
fcoms
cmpsb
inc
loopne
xchg
shrl
lea
push
adc
ss
xlat
jo
push
dec
popa
xchg
in
leave
jo
xchg
ds
cwtl
loop
xchg
ja
pop
sbb
or
pop
cmp
cmpsb
pop
test
aas
testb
push
mov
int
sbb
dec
in
out
add
lcall
aam
dec
mov
jb
lcall
movsl
xor
loopne
std
mov
xor
das
add
or
scas
sbb
jle
out
popf
clc
lods
xchg
xor
out
inc
cli
adc
lcall
lret
cmp
inc
jbe
xor
inc
roll
ja
and
dec
sbb
and
push
pop
mov
mov
pop
cltd
inc
xchg
jno
cmc
in
sahf
xchg
clc
nop
inc
das
insb
push
ret
push
shll
mov
frstor
xor
mov
mov
roll
cmpl
faddl
jo
stc
aad
push
lret
pop
mov
loope
ljmp
ja
test
jno
outsl
inc
cmpsb
iret
xor
cli
lods
aaa
dec
lret
cmp
leave
lret
mov
push
push
xor
jmp
push
cs
inc
lret
push
or
call
push
pop
push
cwtl
std
pop
sbbl
aad
in
and
subb
xchg
stos
pop
fwait
adc
jl
shrb
in
outsb
inc
add
imul
sub
dec
or
sbb
pop
out
sarl
ret
push
adc
jecxz
push
dec
or
stos
sub
pop
push
cmp
inc
inc
int3
xor
pushf
gs
push
xlat
and
sub
adc
js
jno
adc
shlb
jo
or
jmp
jge
arpl
cmpb
lock
das
xlat
loop
jecxz
cmp
adc
or
add
gs
stos
jne
sbb
push
sub
xor
jns
in
jo
subb
mov
push
jl
mov
push
fadds
xor
adc
add
add
inc
dec
in
jb
jb
add
sbb
jp
dec
faddl
pushf
add
dec
dec
pop
aam
cli
outsl
cmpsb
xlat
packssdw
add
push
shll
sub
repnz
aaa
adc
insl
repz
mov
sbb
pop
push
shrl
xchg
jne
adc
insb
mov
pop
in
fcomps
shr
dec
xlat
mov
pop
ror
xor
cmc
xor
add
mov
xchg
xlat
and
decl
dec
mov
in
or
xor
call
ret
jo
int
inc
jb
in
mov
xchg
inc
sub
out
mov
sub
sub
lods
push
adc
out
jo
aam
aas
push
cmp
cmp
test
adc
xchg
in
sbb
mov
cs
jne
add
es
cmp
gs
dec
pop
xor
dec
push
ds
mov
sub
sbb
gs
mov
and
scas
mov
inc
or
push
js
int
xchg
mov
decb
subb
xor
jmp
nop
sub
popf
sub
enter
int
adc
jo
enter
repz
push
outsb
jmp
shl
push
mov
push
cmp
aas
jno
and
push
xchg
sar
popa
mov
add
lods
push
push
inc
cwtl
pop
and
pusha
push
jg
dec
dec
mov
inc
xor
int
mov
pusha
repz
fdivs
push
repz
lock
push
cmp
mov
les
mov
jge
mov
movsb
iret
std
sbb
gs
mov
xor
in
fcoms
lret
push
call
inc
ljmp
mov
sbb
mov
jmp
and
inc
mov
cmp
push
xor
addr16
mov
cmp
or
xchg
push
jno
mov
jae
sbb
nop
mov
xchg
jmp
dec
pop
push
std
mov
aas
adcl
std
cmpsb
mov
pop
xchg
sbb
out
jmp
xchg
push
lods
mov
jmp
adc
or
icebp
mov
dec
clc
jmp
mov
inc
mov
xchg
inc
sbb
inc
sldt
addr16
mov
popf
add
add
ss
push
outsb
pop
cmc
mov
xor
aad
jmp
leave
push
inc
push
inc
imul
aam
push
adc
sub
add
roll
xchg
ret
js
xchg
and
enter
push
xchg
sub
add
xchg
sbb
xchg
cmp
xor
push
mov
rcrl
nop
push
mov
adc
int
xor
fstps
les
lds
cmc
in
lea
xchg
clc
mov
fs
adc
pop
sub
fistpl
inc
inc
jg
lret
je
xchg
dec
cmp
sub
xchg
push
es
sarl
mov
data16
cmc
rcl
push
hlt
nop
sub
std
jno
jle
jne
mov
adc
adc
in
loope
aad
repz
push
in
sahf
mov
pop
inc
jns
negl
dec
aad
aaa
in
push
test
jo
push
jmp
adc
test
ljmp
dec
fxam
cmp
movsl
pop
xchg
aad
push
jo
pop
outsb
pop
loop
repz
fisubrl
imul
insl
ret
int
outsb
test
cli
and
popa
mov
mov
test
mov
cmp
jge
fldcw
aad
add
or
jno
jl
movsb
sti
push
xor
popf
bound
hlt
frstor
dec
or
adc
dec
fnsave
cld
jg
and
pop
repnz
mov
inc
nop
mov
ss
cmc
jnp
mov
icebp
cmp
xchg
sti
fstl
stos
repz
xorl
xor
xor
dec
xchg
inc
insl
push
js
push
push
jle
and
jne
pop
sti
fadds
arpl
xor
sub
and
nop
loopne
push
in
repz
fstps
inc
les
rcll
ja
jae
push
pop
dec
adc
dec
aas
and
dec
test
outsb
cmc
xchg
sti
dec
sbb
jo
leave
push
mov
fs
push
jmp
in
ret
push
sarb
push
add
xchg
push
sbb
fcoms
add
dec
cli
add
inc
sub
adc
push
or
lods
or
cmp
mull
xchg
mov
xchg
dec
enter
mov
shrl
xchg
lock
std
and
std
push
shlb
inc
cmp
cmp
push
fdivs
inc
cmc
xchg
push
lret
pop
jge
xchg
sarb
rorb
stc
data16
push
jae
movsl
mov
push
xchg
iret
mov
lret
shrb
push
mov
movsl
mov
in
dec
mov
es
aaa
push
ffreep
mov
pop
push
std
inc
movsl
mov
push
sbb
mov
push
adc
sub
popf
push
xchg
sbb
jo
insl
insl
mov
rclb
ss
popa
adc
in
push
push
ss
dec
sbb
push
pop
lret
or
mov
xchg
push
jne
mov
sbb
les
xor
and
sub
inc
rolb
shll
out
ds
sarl
dec
xchg
aaa
cmpsb
cmc
les
mov
lods
rcrl
jo
adc
fisttpll
loopne
scas
lods
int
mov
loope
add
int
adcb
pop
int3
xchg
jnp
ficoml
jns
daa
xor
push
cmc
xor
cmp
add
icebp
fxam
mov
mov
iret
cmp
or
roll
pop
ret
push
jnp
fbstp
add
ljmp
mov
lock
jmp
adc
es
clc
fisubl
push
jno
ss
rep
call
dec
out
das
loope
sbb
push
lods
sub
fldcw
mov
push
rep
pushf
xor
jnp
push
in
dec
outsb
push
lahf
pop
or
data16
inc
sbb
inc
sbb
leave
addr16
and
cwtl
fisubl
scas
je
cs
cwtl
xor
xchg
mov
fcomps
scas
js
enter
pushf
cmp
pop
xor
sbb
rcrb
rcrb
and
shlb
inc
mov
sbb
mov
cmp
adc
pusha
cmpl
orl
xor
cs
mov
jno
shlb
std
mov
jmp
push
ret
cwtl
push
cmc
cmp
xor
mul
adc
mov
dec
sahf
daa
in
push
sbb
addr16
sub
pop
jmp
push
fisubrs
mov
mov
xor
mov
and
rclb
sbb
mov
pop
pop
mov
dec
addr16
jo
jbe
movsl
out
xor
push
mov
xchg
xor
xchg
icebp
popf
repz
push
es
add
sbb
iret
jcxz
fwait
and
inc
sub
inc
sbbb
stos
xor
jo
mov
mov
outsl
inc
push
imul
imul
pop
and
sub
ds
into
adc
push
mov
xchg
inc
or
xchg
in
pop
or
iret
fs
push
jecxz
rolb
pop
fwait
shl
aad
cld
add
loopne
movsb
fldln2
xchg
repz
sti
pop
cwtl
into
aad
sub
xchg
inc
into
popa
add
and
aam
and
sti
mov
xor
xor
inc
int
shl
aas
cmp
sbb
inc
push
xchg
pop
aad
shrb
enter
aad
outsb
push
ja
cmp
dec
sub
dec
or
xlat
sub
in
scas
das
cmp
fnstenv
in
mov
shrl
sub
out
ss
imul
cmp
and
pop
and
lods
xchg
mov
ficoml
movb
stc
inc
mov
jle
cmp
cmp
out
or
orb
fnstsw
sub
jle
xchg
sbb
jmp
ret
dec
pop
or
mov
mov
cltd
fwait
es
or
daa
xor
inc
pop
push
out
lods
xchg
xor
jns
outsl
push
adc
enter
rorb
push
repz
xchg
sub
sub
lock
pusha
dec
push
enter
xchg
push
out
mov
jo
test
pop
add
mov
mov
adc
dec
arpl
cld
and
mov
add
mov
cli
fcoml
xchg
push
jb
xchg
add
cmp
cwtl
imull
negl
daa
pop
imul
push
and
ret
or
pop
push
fnstenv
dec
push
addr16
inc
cltd
int3
lea
xlat
dec
and
std
jo
out
enter
jns
cli
sub
fisubrs
cmc
mov
push
adc
push
out
push
adc
pusha
pop
lock
cmc
adcl
lock
mov
fsubrl
push
mov
adc
adc
repz
cltd
aad
cwtl
dec
push
sub
sarl
dec
jecxz
sbb
and
roll
or
dec
sub
push
in
shl
inc
cmp
sbb
add
mov
mov
mov
push
mov
jbe
jb
repz
cmc
mov
rcr
mov
sbb
into
shrb
push
sarb
dec
movsl
enter
les
sbb
testb
sbb
jns
jae
inc
cmp
out
pop
sub
mov
push
xor
xchg
jl
orl
sarl
pop
xchg
jnp
adc
imul
xchg
mov
mov
lock
xchg
cmpb
jbe
push
xchg
push
mov
rcll
dec
int
xlat
mov
cmp
shr
fs
leave
push
cmp
roll
mov
dec
mov
fldt
jp
stos
xchg
or
subb
shlb
mov
subb
mov
xor
imul
xor
jns
jmp
push
mov
gs
inc
jne
and
imul
mov
and
xlat
xchg
mov
inc
pop
mov
sbb
xor
jns
int
pop
mov
into
xorl
aas
cs
xor
adc
or
fwait
xor
inc
in
test
or
inc
jno
in
cs
add
hlt
scas
xor
mov
and
sbb
jmp
fnstsw
pop
cmp
cmp
xchg
out
cltd
push
pusha
mov
iret
xor
lea
rolb
sbb
out
addl
das
cs
xor
insl
imul
push
pop
fmull
int3
push
push
jl
js
addr16
and
push
jmp
mov
and
push
movl
dec
mov
out
test
sarl
mov
in
jge
into
jo
adc
pop
cmp
push
enter
filds
imul
ds
xor
popf
add
pop
iret
rcl
dec
dec
stos
hlt
test
mov
xchg
mov
push
loope
imul
test
shrl
pop
pop
pop
mov
mov
insl
sub
pop
insb
ljmp
lds
cmpsl
cwtl
push
sahf
lcall
fdivrs
mov
or
or
ficompl
mov
mov
mov
fsubs
add
lahf
xor
add
adc
cmp
jb
mov
dec
jns
icebp
es
xchg
les
cmc
fcoml
js
icebp
and
outsb
jo
nop
and
and
mov
scas
xchg
imul
icebp
cmp
pop
mov
mov
or
jle
cmovge
mul
out
aaa
bound
addr16
inc
out
cltd
push
jno
sub
faddp
add
mov
inc
push
push
int3
adc
test
push
into
and
xor
mov
cs
cmp
outsl
shrl
outsb
add
dec
andl
fcompl
add
dec
or
add
cmpsb
and
cwtl
xor
sbb
inc
inc
lds
sbb
add
xor
cwtl
or
and
outsl
iret
adc
cld
push
adc
and
adc
mov
cmpsl
inc
cmp
push
cmp
mov
push
aaa
cmp
je
or
jge
pop
push
jo
cmp
mov
jb
jno
scas
test
lcall
mov
xor
inc
pop
shll
pop
xor
pop
and
push
dec
jno
mov
adc
xchg
pop
adc
sub
enter
or
out
sti
lret
pusha
in
fistpl
xchg
je
jge
mov
ret
mov
xchg
mov
add
iret
jne
or
data16
push
dec
shrl
repnz
cld
mov
pushf
inc
insb
loope
sbb
arpl
cmpsb
sbb
enter
adc
dec
mov
pop
cmp
add
inc
adc
int
fnstcw
jecxz
lcall
repnz
jmp
dec
push
std
or
xchg
mov
cmp
shl
push
mov
mov
cmp
rcrl
inc
in
int3
lret
rcrb
rdtsc
mov
xchg
outsl
into
mov
xchg
outsb
test
shlb
cmpsb
or
mov
fldenv
push
sub
repnz
in
fcom
js
jmp
lea
cmp
sbb
sub
clc
std
inc
out
add
mov
dec
sub
push
jae
push
mov
push
push
jmp
fdivrs
mov
push
and
dec
or
lea
add
sub
je
mov
pop
push
inc
add
stos
push
cmp
adc
call
mov
ret
dec
ds
dec
vpackuswb
jo
fldl
jecxz
imul
adc
push
loope
es
push
ret
dec
dec
pusha
sub
mov
mov
inc
enter
dec
push
mov
add
insb
es
xor
mov
jge
pop
lea
dec
push
ds
arpl
loopne
lds
mov
cmp
cmc
jb
gs
mov
jbe
daa
sub
xchg
mulb
mov
lds
mov
mov
fsts
iret
push
or
xchg
push
in
mov
xchg
pop
rorb
or
xchg
pushf
xchg
xor
fisttpll
xchg
cmp
dec
arpl
mov
icebp
xchg
dec
mov
sub
addr16
mov
xchg
xorb
inc
jmp
xchg
xchg
mov
inc
or
pop
icebp
cld
rorl
mov
addb
bound
pop
or
mov
push
iret
sbb
rclb
mul
or
sub
inc
shlb
xchg
pop
loop
pop
mov
fisttpll
repz
lea
into
xor
push
dec
insb
or
mov
push
fists
std
xchg
int
add
cmpsl
sub
imul
cmc
fisttpll
loope
pop
dec
and
adc
xchg
fwait
shrl
call
push
dec
mov
ja
add
rcrb
icebp
loope
dec
out
pop
cltd
je
adc
add
rcll
sbb
pop
clc
repnz
cmc
psubb
or
dec
or
add
adc
test
popa
or
divl
fs
xchg
cli
add
cmp
lea
cmc
jle
pop
or
dec
ss
mov
sbbl
inc
xchg
sbb
or
xchg
inc
cmp
pop
test
dec
mov
ret
stc
cmp
test
mov
inc
icebp
jnp
add
and
push
std
xor
or
jmp
out
inc
scas
popf
mov
lahf
cmpsb
cmp
lret
cltd
dec
mov
fs
dec
xchg
shll
xchg
inc
into
mov
roll
dec
fnstcw
xchg
or
imul
mov
mov
xchg
das
scas
push
mov
xor
rcrl
fcomp
movsl
rcr
mov
jne
mov
push
rcrl
fadds
nop
xor
cmp
cltd
loope
clc
rclb
adc
fdivs
mov
adcb
pop
aaa
dec
adc
adcl
push
mov
jecxz
imul
test
andl
subl
push
icebp
push
sub
xor
mov
or
stc
sub
push
jb
adc
pop
call
cmc
xor
xor
xchg
push
jp
stc
cltd
addr16
push
mov
push
ss
lods
repnz
inc
xchg
push
out
roll
imul
dec
in
sub
cmc
push
jno
lods
push
mov
sub
inc
jg
les
mov
jbe
fidivs
mov
in
fidivl
aam
arpl
fnstsw
in
push
cmp
jne
jl
sbb
in
pop
pop
es
dec
push
scas
xor
mov
xor
jae
jae
insb
xchg
pop
mov
xor
sub
into
pop
mov
dec
xchg
jecxz
xchg
xor
and
mov
loope
xchg
movsb
jo
rorb
enter
mov
popf
mov
iret
adc
loopne
movsb
jns
push
ja
dec
lahf
shll
sub
pop
icebp
in
ltr
lcall
xchg
adc
sbb
xchg
sub
test
movsl
testl
jns
push
xchg
outsl
jo
dec
hlt
test
rclb
xor
mov
stos
notl
inc
fistpll
mov
xor
inc
in
fs
in
in
inc
mov
push
mov
es
sbb
inc
and
pop
or
ds
pop
ss
xchg
pop
jns
cmp
cmp
adc
insb
cs
outsl
adc
sub
cmp
sub
push
xchg
shrl
sub
push
not
in
or
hlt
cli
lods
repz
sbb
pop
insl
sub
je
pop
out
dec
jno
cmp
inc
cltd
add
int3
jg
and
loope
shlb
out
jbe
push
sti
outsb
mov
push
bound
push
jnp
inc
shrb
outsl
gs
adc
int3
mov
add
imul
cmp
fsubrs
pop
dec
pop
jbe
lcall
mov
and
aad
sub
and
mov
ffree
cmp
mov
inc
xchg
xchg
sbb
sbb
jo
or
mov
movd
dec
push
xchg
lods
int
push
scas
popa
xlat
push
inc
jp
and
out
into
clc
and
push
addr16
mov
inc
cmp
into
mov
push
dec
fs
push
cmc
xchg
addb
xchg
adc
mov
mov
adc
mov
or
test
inc
jne
jns
add
aaa
dec
lahf
stc
imul
das
insb
mov
out
jbe
xchg
enter
pop
mov
jae
ss
jns
sub
add
int3
cmp
inc
into
popa
and
icebp
scas
dec
sbb
add
inc
imul
mov
cs
dec
clc
je
sbbl
fmulp
jmp
sbb
or
lret
pop
xchg
jno
sub
push
pop
xor
enter
hlt
xor
in
push
adc
mov
adc
sbb
pop
inc
out
arpl
into
mov
ja
xchg
repz
pop
pop
ror
out
mov
rclb
shl
xor
imul
cwtl
pusha
mov
dec
sbb
sub
daa
or
out
mov
xchg
notl
out
add
jge
dec
pop
mov
test
in
jmp
iret
mov
sbb
out
cltd
es
out
pop
iret
lea
fldenv
sti
clc
dec
mov
testb
sti
cltd
adc
pusha
sbb
cmp
cltd
stc
int3
or
mov
push
xchg
in
faddl
mov
dec
jge
jg
pop
aad
mov
int3
jb
push
out
das
pop
divb
dec
lcall
out
movl
xor
mov
and
mov
in
pop
lods
icebp
out
inc
cwtl
dec
jl
add
mov
mov
jo
jne
lcall
in
fdivl
pop
out
dec
dec
jno
lods
add
cmpsl
sbb
sbb
adc
add
out
hlt
out
sub
es
sub
cmc
stos
lds
lret
pop
int3
xchg
loope
popf
aam
sbb
clc
rcll
leave
repnz
mov
sub
and
aad
icebp
push
cmp
sbb
inc
inc
pop
and
inc
and
add
pop
adc
outsl
dec
outsb
sbb
imul
lcall
pop
sub
push
fidivl
les
scas
jo
rcrb
scas
sub
sub
mov
sub
movl
mov
or
mov
jne
inc
lods
movsb
pop
or
and
out
mov
insb
xchg
popa
lcall
int3
and
fcompp
into
imul
loop
inc
push
repz
push
dec
push
outsb
jecxz
adc
cmp
ret
shlb
xchg
cli
lcall
jmp
mov
xorl
mov
or
pusha
sbb
outsb
mov
xchg
cmp
push
jge
std
in
push
mov
loopne
int3
adc
pop
push
mov
and
mov
cld
mov
pop
sbb
mov
pop
or
inc
lcall
leave
aas
jo
sub
aam
jle
jne
les
cs
movsb
pop
push
popa
and
xor
inc
push
dec
jne
xchg
cmpsl
mov
xchg
dec
sbb
scas
pop
jecxz
push
xor
mov
xchg
aaa
cmp
data16
mov
insb
int
daa
xchg
mov
mov
inc
outsb
lahf
mov
or
fisubs
dec
sbb
pop
insb
and
add
cltd
outsb
outsl
mov
icebp
inc
sbbl
jmp
outsb
push
popa
or
xchg
inc
into
adc
pop
sub
and
pusha
aas
or
cld
dec
xchg
sbb
inc
aaa
ret
or
and
out
popf
xchg
inc
adc
fstenvs
subb
insl
sbb
dec
and
andl
in
jb
add
mov
sti
or
fimull
mov
in
mov
xor
adc
mov
jo
ret
pop
rorl
pop
test
lahf
hlt
push
jno
pushl
mov
sbb
cmp
adc
mov
dec
or
xchg
add
dec
std
push
xor
dec
xchg
cmc
popa
cld
dec
icebp
jno
cli
fmuls
insl
xchg
dec
enter
enter
enter
mov
popaw
std
scas
cmp
inc
jno
aaa
adc
sub
icebp
adc
xchg
push
and
pop
sbb
mov
cmp
and
or
push
push
add
mov
stc
leave
dec
cmc
push
loope
icebp
xchg
sub
in
xor
inc
push
push
aas
cmp
xlat
adc
imul
or
push
icebp
cs
and
mov
cs
jp
bound
and
fdivs
mov
ljmp
add
jg
cmovle
fisubrl
adc
push
leave
push
inc
jno
insl
pop
xchg
or
sbb
rcll
push
cmp
inc
shll
cmp
push
outsl
xor
or
jmp
fbstp
lock
cli
cmp
sub
inc
rcll
jmp
dec
cmp
lock
daa
les
ss
imul
and
lods
lret
pop
je
mov
scas
rolb
into
mov
cmpl
call
nop
fdivrl
or
add
sbb
or
add
jb
and
pop
cmpsl
int
daa
into
add
aas
pop
add
mov
mulb
pop
pop
xchg
dec
fistpl
aad
lahf
mov
cmpsl
imul
mov
ja
test
mov
daa
int3
bound
and
insl
rcll
repnz
pop
shl
cmp
filds
pop
or
fnclex
xchg
cmova
pop
rolb
in
loope
outsl
je
jno
add
pop
xlat
push
jle
mov
aad
add
mov
fsub
push
into
pop
xchg
jecxz
xor
test
jnp
push
xor
and
mov
push
dec
adc
aam
mov
lret
inc
dec
in
das
sahf
or
lods
jp
inc
sahf
push
dec
inc
fildl
lock
pop
gs
push
xor
or
fistl
inc
cmp
clc
lahf
nop
shrl
pusha
pusha
clc
mov
jno
or
or
out
popa
out
xchg
aam
pop
mov
push
xchg
dec
add
cmp
pop
xchg
aaa
clc
leave
dec
in
dec
xor
xor
sbb
sub
rcrl
mov
mov
pop
into
sbb
outsb
jo
mov
rorb
mov
pop
ss
ljmp
jnp
insb
ficomps
inc
in
add
lcall
mov
inc
pop
xchg
call
mov
insl
or
pop
sahf
xor
cmp
incl
push
dec
push
xchg
and
js
push
dec
into
xor
mov
inc
and
stos
sbb
or
sub
add
push
inc
or
and
call
repz
jae
adc
jb
sub
scas
add
lret
jne
cmp
movsb
adc
jo
push
push
sbb
and
adc
sbb
in
jge
cs
xchg
out
and
es
dec
int
mov
fs
mov
pop
into
cmp
push
or
test
push
push
jge
mov
ja
xor
dec
xchg
sti
mov
mov
push
push
pop
cmc
pop
pop
mov
loope
arpl
or
fstpt
inc
test
xor
push
insb
mov
dec
mov
hlt
testb
cli
fdivl
in
notl
pop
sbb
sbb
rolb
fnsave
js
fiaddl
pushf
mov
cmp
pop
xor
movl
popa
movlps
inc
leave
gs
cmp
push
cmp
dec
adc
mov
or
xchg
jo
stc
std
cwtl
imul
jg
std
add
aad
push
movsb
cli
mov
inc
into
ret
mov
xor
mov
int
sub
insb
pop
inc
pop
inc
lods
orb
dec
fistps
scas
jle
push
cmp
sbb
dec
mov
pop
mov
inc
push
cmp
push
rcrl
pop
dec
icebp
pop
dec
add
addr16
xor
jl
push
outsl
div
mov
dec
push
add
push
notl
or
mov
pop
ret
decl
ret
sbb
ret
test
fidivs
push
xchg
cmc
sbb
or
in
repz
bound
rcrb
dec
fstpt
cmc
repz
mov
xchg
push
fldl
or
push
imul
fstps
stc
push
aaa
aas
pop
mov
jmp
lock
mov
sti
aaa
sub
fmul
in
inc
jo
mov
push
xchg
add
xor
orb
divb
incb
lds
sbb
jno
outsl
pop
into
mov
dec
xlat
sub
andb
imul
lods
popa
jns
mov
add
hlt
pop
imul
push
jb
jp
xchg
sar
cltd
int3
fistl
adc
adc
loop
andb
cmp
mov
dec
xchg
es
push
dec
aam
or
icebp
das
stc
adc
dec
sbb
jbe
add
dec
jmp
enter
pop
sub
sbbb
sbb
push
jb
and
addr16
sbb
mov
out
or
inc
push
mov
and
cmpsb
in
dec
push
cmp
sbb
iret
fistps
stos
mov
test
xorb
outsb
ja
test
pextrw
into
adcb
cmp
or
inc
dec
sub
stc
sbbl
mov
and
adc
cmp
addr16
mov
cld
shll
cs
and
les
push
xchg
mov
inc
pop
or
dec
jo
mov
mov
adc
xchg
icebp
pop
jge
arpl
adc
sub
mov
es
inc
cmp
cmp
pop
rclb
mov
pop
xchg
lds
inc
pop
in
sar
and
push
rorl
repnz
out
mov
inc
shll
jl
inc
and
sub
jo
xchg
movsb
out
or
adc
lret
inc
arpl
sbb
adc
or
pop
stos
xchg
fstps
loop
aaa
stc
xchg
xchg
inc
xor
sub
cmp
cs
ret
movsb
xchg
or
cmp
pop
shrb
in
push
add
inc
aas
pop
mov
jle
es
push
inc
outsb
jb
push
mov
sti
dec
fcomp
adc
imulb
cwtl
cli
xor
sbb
idivl
imul
xchg
pop
cli
cmp
ds
fldcw
fnstenv
fstpt
movsb
dec
dec
jmp
nop
andl
jno
or
inc
lock
adc
sub
test
insl
inc
shrb
inc
rorb
rcll
inc
dec
jp
adc
out
push
inc
pop
jne
xor
lock
rorl
into
dec
lods
in
sbb
or
xchg
dec
fdivs
popa
push
pop
in
out
xchg
sbb
inc
sbbl
lahf
cmp
dec
add
or
push
inc
jno
inc
test
lahf
repz
mov
dec
push
pop
in
in
fimull
pop
scas
fmuls
jmp
imul
push
hlt
cmpsl
push
mov
push
stos
pop
jns
test
or
xor
out
pop
int3
xor
push
and
xor
fwait
mov
lock
call
and
out
push
sbb
sub
cmp
repz
add
mov
sub
shr
lock
jge,pn
scas
push
dec
push
sbb
add
test
mov
sub
inc
xor
dec
into
xchg
roll
sarl
mov
insl
icebp
lock
xchg
gs
sub
dec
ss
lcall
push
ror
jnp
xor
loop
sub
das
or
cwtl
add
sbb
add
rcl
xchg
add
push
fisttpll
sub
pop
rcll
mov
push
repnz
dec
out
pop
subb
sbb
addr16
lret
mov
add
push
stc
and
adc
shll
push
dec
jo
outsb
inc
int3
push
xchg
addr16
fistps
inc
icebp
sbb
pop
pop
or
pop
sbb
mov
cmp
repz
cmpsl
push
dec
mov
outsb
dec
cli
mov
cmp
fdivl
notl
push
arpl
outsl
mov
inc
mov
adc
gs
xchg
mov
sub
pop
xchg
pushf
push
pop
popa
inc
data16
pop
or
push
fmull
cmp
push
bound
cwtl
pushf
inc
xchg
cmpsb
cmc
or
adc
int
stos
jp
dec
push
sbb
dec
int3
bound
sbb
pop
push
inc
pop
dec
mov
push
or
pusha
loope,pn
or
pop
fistpl
js
imul
push
cltd
cmp
xor
repz
xchg
sbb
int3
sub
mov
lea
mov
mov
mov
movsl
not
repz
inc
jae
dec
cmp
aad
imul
jl
std
pop
sbb
mov
pop
and
or
and
fnstsw
xorb
addr16
add
std
add
pusha
dec
cmp
and
stos
xor
into
dec
aad
dec
daa
adc
and
outsl
pop
sub
cmp
outsl
sbb
sbb
stos
push
mov
nop
push
push
fs
adc
fisttpll
mov
xchg
orl
jno
mov
jl
cltd
test
or
xchg
out
sub
mov
aam
fstl
lods
punpckhdq
lret
fisttpl
dec
cli
xchg
mov
mov
adc
cmp
frstor
cmp
jb
jno
and
inc
lods
adc
xchg
ljmp
push
xor
ss
mov
mov
cmp
push
lcall
mov
cmp
cmp
jnp
cmc
ds
or
xlat
pusha
es
add
push
dec
and
dec
into
cmp
xor
push
pop
adc
xchg
inc
lds
iret
push
adc
inc
cli
repz
pusha
or
repnz
pop
insl
jmp
mov
cmp
mov
in
sub
or
fadds
imul
cmp
sub
dec
pop
inc
inc
xchg
fdivs
xor
xor
xchg
aad
push
add
jno
push
int3
das
movsb
stc
addb
inc
push
lods
lods
inc
shll
and
test
pop
or
cmpsl
mov
push
inc
aaa
xchg
in
pop
enter
or
sbb
movsb
out
loopne
clc
and
xlat
add
shl
jae
mov
aas
in
dec
sbb
jl
fistps
and
cmc
cwtl
jnp
sti
and
shll
cltd
xor
jmp
test
popf
and
test
dec
dec
mov
int3
out
negb
mov
aaa
add
int
and
xchg
sbb
bound
push
out
nop
cmc
push
mov
add
ret
mov
mov
and
fcoml
pop
dec
pop
mov
sub
cmc
xor
es
dec
push
mov
sbb
jo
imul
lea
pop
shlb
bound
fistpll
int3
mov
clc
jb
dec
decl
inc
imul
add
push
or
std
pop
pop
xchg
insl
outsb
fdivr
repnz
bound
mov
mov
scas
adc
jo
dec
dec
or
cmp
cmc
daa
dec
lret
les
push
test
daa
movb
scas
clc
mov
sbb
jae
or
popa
mov
test
dec
fdivrs
shlb
push
push
sti
outsl
es
inc
push
icebp
push
ret
out
psubsw
mov
add
xor
scas
xor
sbb
fsubl
inc
and
inc
or
adc
add
dec
xor
daa
sub
mov
outsb
xor
enter
fbld
and
insb
negl
dec
mov
and
into
push
push
add
sbb
stos
or
and
addr16
popf
popa
movsl
daa
push
pop
inc
insl
push
inc
movb
pop
repz
popf
pop
popa
loopne
in
inc
add
push
jp
mov
xchg
xor
jmp
sti
popa
sub
push
aas
lods
adc
xor
xchg
push
daa
push
xchg
adc
mov
lret
cmp
push
inc
cmp
cmp
or
popa
jecxz
pop
stos
insb
gs
and
aad
mov
iret
adc
add
dec
enter
pop
add
lahf
xor
inc
leave
hlt
roll
arpl
push
shr
inc
dec
test
cmp
dec
les
fcmovnu
dec
pop
push
jl
cmp
dec
sub
std
insb
and
mov
cmp
jge
cmc
dec
scas
pushf
mov
leave
in
das
aad
cmp
rcr
popa
sti
inc
pop
lea
or
es
int3
cmp
adc
push
xchg
pop
lods
mov
lahf
xor
inc
enter
cmp
add
rorb
int
nop
inc
loopne
dec
cmpsl
sti
gs
lret
ret
scas
xchg
and
popf
pusha
push
lret
and
mov
sar
pop
leave
imul
add
cmp
inc
int3
rcl
aam
repz
lcall
xchg
inc
ret
lahf
cmp
jbe
add
das
inc
add
push
dec
mov
in
or
test
stos
imul
xchg
sub
es
ljmp
push
mov
mov
fisttpl
mov
cmp
jo
in
sub
fstl
loopne
les
jno
ljmp
imul
jo,pn
movsl
dec
std
movsb
js
xor
into
xchg
arpl
and
popa
shll
push
and
nop
jns
inc
push
xchg
push
mov
inc
inc
out
xor
xchg
adc
mov
fwait
push
arpl
inc
dec
jo
push
inc
push
or
popa
addb
add
pop
push
arpl
data16
in
xor
or
push
inc
data16
push
sub
movsb
pop
xor
mov
mov
inc
jno
inc
sahf
pop
ret
adc
inc
inc
push
jno
bound
inc
cmp
lahf
sar
ret
nop
call
and
insb
and
lahf
mov
sbb
cs
fidivl
and
clc
aaa
lret
rorb
add
jecxz
enter
push
fildl
cmp
mov
dec
ja
mov
fldt
jo
out
jb
lock
lea
add
dec
push
jns
adc
xlat
shrl
dec
ss
test
jge
or
aaa
repz
or
sub
aam
sub
add
xchg
sbb
js
push
push
xor
adc
mov
cmp
cs
mov
lcall
xchg
sbb
push
push
loop
cmp
test
outsb
cmpsl
jg
adc
inc
xor
jge
outsb
xchg
mov
insb
jae
xor
push
cmpsl
add
add
push
stos
jno
leave
sahf
dec
popa
cmp
pop
es
inc
into
inc
sub
lcall
sbb
xchg
sub
jne
inc
test
ret
jns
imul
sti
mov
out
add
mov
int3
cli
cmpxchg
enter
outsl
out
cmc
push
xor
lcall
inc
iret
dec
fadds
adc
js
lea
jecxz
push
push
dec
sti
rcr
idiv
test
outsb
or
dec
arpl
or
xchg
int
jb
ljmp
daa
cmp
xor
adc
push
add
jno
lock
ficoml
adc
jns
js
cmp
adc
or
adc
arpl
push
sub
fildl
pop
dec
popf
push
aaa
push
push
cmp
inc
clc
pop
mov
inc
into
imul
lret
push
xchg
daa
in
sub
mov
mov
popa
enter
cmp
mov
pop
jnp
mov
adc
sbb
or
cmp
sbb
add
xchg
leave
jnp
in
dec
mov
add
pop
pop
popf
test
jp
sbb
mov
jp
int
jnp
push
xchg
xchg
sub
xlat
movsb
lcall
lret
xchg
push
int3
ret
adc
in
scas
mov
pop
cwtl
jecxz
jo
fisttps
dec
lret
sbb
cwtl
out
arpl
xchg
scas
add
test
push
dec
push
loope
jbe
push
in
into
push
and
fdivr
test
sti
js
and
sarl
jge
push
dec
or
pop
mov
repz
jne
mov
int3
insb
pop
sub
xchg
lea
rorb
loop
leave
and
int3
sub
popf
loope
sbb
ja
mov
icebp
add
inc
fstpl
xchg
jo
and
les
filds
sub
or
or
cmp
popf
jmp
xor
std
mov
rcl
test
push
and
outsb
test
mov
dec
dec
push
pop
test
test
stos
mov
test
movsb
jnp
lock
es
std
adc
mov
adc
lret
jno
inc
cmpsb
inc
inc
in
lods
ljmp
leave
mov
push
cli
int
xchg
sub
loop
addb
mov
jge
iret
inc
out
mov
mov
repnz
cmp
addb
cltd
popa
push
test
rcl
inc
cli
pop
sub
pop
dec
xor
cmp
inc
sub
or
xchg
pop
or
sbb
movsb
jno
fidivl
adc
mov
dec
mov
fwait
mov
and
ja
push
push
or
mov
out
inc
cld
jo
stc
into
cltd
fmull
test
jle
jns
xor
xor
sub
popa
movsb
iret
pusha
push
jns
nop
repz
sti
sbb
bnd
pop
lret
rcll
xor
push
push
cli
xor
add
push
js
pop
jg
push
data16
xchg
mov
int3
jne
fs
sub
shlb
inc
lahf
test
cmpsl
lea
mov
lcall
rclb
scas
xor
ljmp
jp
xlat
scas
dec
aam
imul
cmpl
arpl
scas
test
push
dec
jge
cmp
dec
jns
xchg
ficompl
mov
dec
test
push
test
movb
cld
in
mov
xor
ds
loope
cld
dec
test
aam
jno
or
idivl
push
fwait
pop
pop
adc
xchg
loope
push
in
sub
outsb
mov
fcompl
mov
mov
cs
inc
xchg
in
mov
adc
sbb
cmpl
xchg
insw
outsb
arpl
in
xor
dec
mov
sbb
mov
je
sbb
fadds
movsl
adc
adc
fstl
sti
cli
xchg
add
ljmp
adc
aad
xchg
mov
adc
inc
jmp
shll
sbb
je
and
xor
pop
mov
dec
xor
add
push
mov
sti
lcall
xor
mov
out
push
dec
pop
mov
std
testb
push
pop
js
call
cmp
mov
xor
mov
sub
icebp
inc
mov
jg
dec
mov
fmull
cmp
fimull
dec
jno
enter
out
dec
cmp
imul
scas
or
daa
inc
jo
add
out
dec
es
jno
push
cs
loop
jbe
stos
outsl
stc
xor
inc
push
cmpsb
lcall
jg
mov
cs
adc
imul
fnstenv
test
cli
mov
cmc
jge
lahf
bound
rorb
sub
ret
pop
rolb
pop
mov
mov
push
cmc
inc
mov
cmp
outsb
add
outsl
lods
and
add
std
mov
sar
dec
add
test
aad
mov
cmp
sbb
push
out
aad
testl
cmc
into
mov
das
mov
jmp
cmpsl
pop
cmp
mov
dec
int3
scas
jbe
or
xchg
and
das
mov
imul
mov
inc
les
cli
insl
pop
mov
cmp
fldenv
dec
in
mov
jl
dec
dec
add
xchg
xchg
and
notl
jne
jb
jecxz
adc
sub
jb
pop
sbb
int
adc
out
fdivrs
enter
fldcw
mov
fsts
dec
es
stc
bound
ja
push
xor
mov
das
into
or
cmp
fcmovnb
dec
adc
pop
aad
xor
loopne
xchg
pop
push
push
pop
sub
push
xchg
rclb
inc
cmpsb
mov
push
fwait
push
stos
rorb
xorl
and
fwait
sub
sub
stos
fcomps
imul
dec
or
inc
pop
xor
xor
and
std
cmp
inc
xchg
dec
cmc
push
lcall
push
stos
mov
fstpl
inc
jne
lret
out
mov
xchg
adc
cwtl
pusha
addl
outsb
ds
fisubrl
pop
iret
dec
push
shrb
xchg
out
inc
sbb
push
sbb
rcr
pusha
imul
push
test
icebp
dec
push
outsl
adc
adc
jmp
dec
lahf
mov
and
inc
in
sub
xchg
xchg
sbbl
mov
inc
cmp
pop
push
fsubl
push
adc
in
and
and
and
and
es
cli
add
cmp
cmp
jmp
or
cltd
mov
mov
fisubrs
jno
mov
hlt
adc
jae
sti
pop
cmc
aad
popf
xor
stos
cmpsb
movsl
add
mov
mov
in
popa
ljmp
outsl
mov
shll
outsl
iret
xor
push
sbb
fucom
pop
nop
push
cmp
int3
inc
adc
sub
loop
or
mov
pop
mov
jno
cwtl
xchg
mov
dec
daa
or
inc
imul
pop
jl
add
and
pushf
push
or
ficompl
jg
fnstcw
pop
fistps
inc
and
jg
shlb
mov
in
clc
pop
sub
je
outsb
imul
test
push
call
in
out
bound
lock
pop
dec
cmp
aaa
sahf
imul
out
gs
rcrb
jno
cltd
or
xchg
xor
outsb
xchg
aam
enter
lcall
outsl
adc
aad
xchg
inc
dec
sahf
rclb
daa
adc
sub
inc
inc
rcrb
push
ljmp
imul
imul
pop
pop
mov
clc
adc
jmp
clc
inc
lcall
mov
or
jp
jo
mov
incb
repz
adc
jne
sahf
or
rorl
sub
add
or
mov
inc
adc
or
push
cs
in
ljmp
call
jecxz
pop
pop
push
ficoml
nop
cmp
bound
push
sbb
push
hlt
popa
push
aad
fwait
mov
cmc
enter
mov
pop
push
push
lea
inc
inc
dec
aas
cmovle
push
cmp
pop
rclb
jmp
fistpll
cmp
iret
icebp
insl
stos
enter
xor
inc
mov
dec
pop
adc
fsts
sti
pmulhw
and
cmp
flds
and
popa
and
sbb
dec
dec
cmpsl
and
daa
dec
lret
pop
sub
sub
dec
mov
dec
std
ljmp
push
mov
rclb
add
pop
mov
jnp
push
aam
inc
cltd
ja
int
mov
leave
inc
popa
push
rcll
int
jo
xor
or
push
push
rcl
leave
aaa
test
xchg
out
ret
cltd
pop
int3
rcl
push
test
dec
pop
das
imul
sbb
mov
push
jo
sub
and
push
in
or
rorl
pop
xchg
adc
mov
into
push
fmull
mov
mov
push
movsl
xor
fdivl
es
add
cmp
fcoml
cmp
jae
ljmp
xchg
call
pop
xlat
jo
pop
orb
in
or
mov
lahf
test
sar
in
sbb
cmp
in
enter
and
addb
push
mov
js
cli
fisttpll
mov
mov
and
sub
push
into
outsb
lret
pop
sbb
shrb
in
mov
push
ds
push
int3
push
call
push
pop
xchg
jl
push
and
jg
imul
outsl
dec
nop
adc
sub
xchg
mov
cmpsl
fcompl
daa
out
or
fisubs
push
inc
dec
in
test
jno
sbb
imul
test
xchg
bound
loope
repnz
xor
scas
adc
push
repz
push
bound
jo
rclb
add
outsb
mov
test
aas
xchg
nop
out
mov
lret
xor
std
sub
loope
decl
lock
jecxz
jmp
cmp
in
rolb
sbb
arpl
push
in
lods
sub
xor
xor
std
cmp
mov
pop
ret
lods
mov
xlat
cmp
ret
mov
lods
inc
loop
sbb
or
xor
jae
arpl
ret
adc
nop
pusha
xchg
aad
jns
rcr
insl
aas
fwait
stos
xor
cmp
in
mov
jecxz
mov
add
arpl
inc
sbbb
jno
rcr
loop
in
fcoml
jecxz
jne
movsl
out
xor
inc
loop
inc
jmp
jno
push
mov
outsb
jge
incl
mov
sti
lods
or
mov
repz
xor
mov
repz
cmp
jno
mov
es
push
pop
jl
xchg
push
sub
cmp
jmp
ss
push
jl
adc
addl
test
sbb
enter
adc
push
int
cmp
or
dec
dec
int3
adc
orl
cltd
dec
sbb
and
xchg
cmp
clc
pop
cwtl
mov
xchg
sbb
push
cmp
dec
mov
clc
sub
dec
sbb
cmp
dec
mov
inc
fnstenv
aaa
xchg
sbb
jo
mov
gs
adc
pop
push
fwait
sub
jecxz
hlt
popa
stos
mov
fcomps
mov
mov
push
stos
pop
xchg
jno
movsl
push
std
push
jae
jmp
dec
rolb
xor
xor
lret
sbb
jne
lret
pop
out
cs
fistpl
fmul
out
push
sub
inc
repz
mov
ljmp
lcall
dec
iret
jne
pop
ljmp
insl
xchg
ss
and
or
outsl
jle
das
adc
push
aam
inc
aam
imul
in
sbb
clc
lds
lcall
xlat
outsb
ja
andl
stos
push
xor
xchg
loop
ljmp
add
or
ds
fisubl
xchg
mov
or
xor
add
pop
and
mov
xchg
mov
and
lods
push
mov
xor
xchg
lods
and
cmp
xor
je
sub
clc
and
nop
add
adc
cmp
call
fsubrl
int3
mov
lcall
add
adc
bound
push
inc
jno
sbb
outsb
jp
add
das
pop
in
inc
inc
sbb
inc
xor
push
xor
aas
fs
imul
adc
xchg
rorl
mov
sub
cltd
dec
pop
aas
mov
push
xlat
clc
jp
jl
mov
xor
push
sub
dec
xor
negl
gs
jo
fsubl
inc
jp
test
mov
xlat
mov
or
xchg
rcr
dec
popa
inc
mov
sbb
test
inc
mov
push
push
inc
inc
add
pop
add
out
push
push
cmp
push
fstpl
les
rolb
stos
loop
xchg
popa
inc
in
repnz
lret
push
push
mov
repz
popa
ljmp
icebp
mov
aad
fwait
mov
ljmp
sub
push
or
dec
pushf
subl
dec
scas
dec
push
aad
inc
das
or
xchg
setns
scas
jecxz
and
cli
pop
je
lret
imulb
rcrb
and
iret
xchg
mov
push
xor
inc
fidivrs
push
mov
dec
jmp
sahf
push
mov
inc
jno
xchg
fwait
aad
iret
fdivrs
lahf
jb
stos
dec
rorb
fwait
cmp
test
sub
lods
dec
addb
lret
inc
jne
mov
push
push
pop
pusha
push
test
lcall
fldcw
arpl
or
jb
comiss
jne
push
mov
aaa
cmp
lcall
in
adc
xchg
ss
dec
cmp
es
repnz
xchg
int3
cmp
jns
cwtl
out
push
cmp
das
mov
adc
aad
adc
faddl
jns
sub
gs
push
push
icebp
pop
ds
sub
dec
dec
cmp
push
mov
add
dec
xor
sub
xchg
dec
ret
sub
pop
nop
arpl
cli
ja
cmp
dec
push
inc
mov
pop
adc
xor
ja
dec
int
dec
int3
rorl
inc
dec
loopne
pop
lea
bound
fwait
negl
dec
push
or
call
jae
xchg
mov
pop
cmpsl
sub
push
or
sarl
jns
xor
cli
movl
call
loopne
fidivl
xchg
je
inc
rep
xchg
mov
movsb
gs
pop
dec
aad
fnsave
mov
nop
mov
sub
mov
push
sar
sbb
rcll
loopne
aas
mov
and
cmp
mov
mov
test
cmpsl
outsb
das
inc
clc
sub
outsb
mov
adc
pop
push
mov
ss
inc
xchg
repnz
dec
mov
jl
rorb
sbbb
inc
cmp
outsb
mov
stc
sub
in
mov
inc
xchg
das
lahf
dec
stos
or
mov
je
inc
ja
repz
fwait
and
test
dec
sub
imul
and
inc
mov
movsl
das
daa
sbb
adc
cwtl
inc
out
dec
add
xchg
daa
push
cmp
and
add
xor
inc
adc
lds
push
xor
cmp
jmp
ret
mov
ss
lds
icebp
inc
cmp
call
pop
jno
aaa
shll
movsl
subl
mov
mov
dec
call
popa
fidivrl
sbb
popa
dec
popa
pusha
sub
xor
pop
add
rorb
pop
or
mov
jl
add
mov
xlat
in
jo
shll
addb
stos
imul
xlat
lcall
loope
ret
scas
adc
xor
jne
rorl
or
push
sbb
pop
aad
push
bound
xchg
pop
pop
fnstenv
data16
fsubrl
adc
mov
arpl
push
dec
fcoml
xor
ret
mov
imul
iret
inc
cwtl
push
mulb
cmc
or
cli
sti
push
stc
dec
push
pop
push
jmp
mov
fsubs
pusha
mov
lret
scas
icebp
and
push
jmp
xor
loop
jb
mov
and
in
add
xchg
inc
jne
push
movb
aas
xchg
xchg
pop
or
mov
inc
sar
add
cli
xorb
fisttps
fcmovb
sub
ja
inc
aad
popf
adc
mov
jns
popa
pop
ret
aaa
xlat
rorl
mov
or
xor
dec
popa
shll
lcall
xor
xor
aad
mov
insl
push
aad
push
rorb
mov
int
inc
dec
and
jmp
aaa
repnz
xchg
rcrl
mov
mov
ja
rol
or
lods
bound
add
mov
mov
loopne
test
rclb
inc
jno
fnstsw
add
inc
jmp
insb
imul
jno
stos
dec
fiaddl
daa
add
in
mov
int
add
movsb
mulb
out
aas
mov
cmp
int3
fadd
mov
mov
inc
fisttpll
in
sbb
movl
pop
and
in
push
out
dec
adc
push
jno
cmpsb
jl
and
ficompl
and
pusha
jae
pop
daa
and
or
gs
out
mov
push
in
lcall
xchg
and
mov
jns
in
cli
add
in
sbb
popa
or
scas
in
mov
js
mov
test
push
dec
icebp
mov
mov
and
insl
mov
sub
rcll
pushf
clc
push
dec
mov
pop
mov
mov
mov
sub
cmpsl
std
jecxz
popa
push
pop
stos
clc
push
rolb
xor
xor
sub
out
dec
mov
es
xor
cmp
xlat
cmp
sarb
add
adc
arpl
jp
push
int3
test
inc
in
lods
lods
pop
push
or
repz
cli
dec
xchg
jle
sti
dec
xchg
sub
or
leave
dec
cmc
repz
add
scas
mov
push
mov
cld
and
hlt
cmp
push
mov
sub
cmp
push
pop
pop
mov
push
inc
nop
sub
pop
and
pushf
add
xchg
sub
pop
int
inc
in
mov
jb
loop
cld
jne
or
nop
xlat
add
fwait
jge
aam
adc
push
mov
or
jno
in
pusha
outsl
rclb
lcall
addb
xchg
inc
jecxz
hlt
lcall
outsb
lods
fs
jne
enter
mov
aas
add
setl
jbe
fisubl
shll
aaa
jno
sbbl
fsubl
aas
push
dec
cmc
mov
in
cmp
mov
mov
divl
mov
pop
jns
in
lcall
lods
mov
ja
or
and
paddsw
xlat
insl
fimull
js
lea
fsubp
mov
mov
adc
dec
aas
and
fildll
imul
cmp
inc
push
jo
cmp
in
test
outsb
into
sbb
add
pop
mov
adc
inc
das
cmp
lds
cmp
popf
sub
fucom
xlat
test
sbb
xchg
add
punpcklwd
dec
test
and
stos
sbb
sub
pop
xchg
jmp
sub
int3
pop
iret
subb
daa
sbb
rorl
mov
out
mov
add
clc
insl
mov
int3
movsl
mov
movsb
fdivrp
rcll
sub
jb
push
push
mov
call
popa
add
call
pusha
xchg
negb
lods
or
xor
arpl
in
xchg
push
push
vandnpd
cli
repnz
popl
divb
mov
lds
rclb
dec
in
and
dec
inc
iret
adc
fcmovbe
cmc
inc
inc
shll
mov
rorl
fcoms
je
fbstp
xor
add
push
outsb
sbb
dec
inc
mov
ds
xor
sti
xor
sbb
or
inc
add
push
pop
pop
call
dec
add
xchg
in
push
test
loope
rcrl
or
jae
cmp
or
aad
scas
cmc
out
inc
out
mov
adc
push
sbb
dec
push
outsb
pop
cli
jb
cmp
popa
push
mov
test
lret
test
testl
inc
int
adc
xchg
jecxz
jno
and
inc
insl
xchg
inc
adc
or
xor
cwtl
imul
daa
leave
push
rorb
jle
sub
fistl
es
xchg
pop
xor
or
ret
mov
dec
inc
addb
cltd
jns
or
in
ret
push
mov
xor
daa
leave
jp
add
dec
mov
xchg
inc
lds
lret
push
xor
mov
cmp
sahf
aas
xchg
adc
int
out
les
movsl
loop
in
hlt
fnstsw
popa
add
ds
mov
cmp
gs
adc
add
repnz
add
jp
scas
sub
add
dec
repz
in
lret
mov
add
jo
pop
lahf
and
mov
es
jb
xchg
dec
inc
shrb
jmp
pop
mov
pop
dec
pop
shlb
jb
pop
dec
inc
xor
cli
das
dec
push
mov
adc
aam
into
ds
inc
shlb
xchg
inc
xor
adc
ljmp
aas
sbb
push
push
push
sbb
inc
push
shl
inc
inc
xor
mov
lea
popa
pop
sti
xchg
xor
jge
shll
pop
push
dec
xchg
rcr
mov
add
clc
mov
rorl
test
arpl
mov
or
gs
jne
loope
push
dec
into
fistpl
pushf
jecxz
mov
cmp
xlat
push
sahf
mov
mov
lds
shl
push
call
fdivs
sbb
jge
pop
xor
push
or
pop
mov
or
or
packssdw
mov
sbb
add
push
inc
or
into
mov
and
movsb
push
mov
andb
jp
in
popa
aam
gs
cltd
insb
cmc
arpl
lcall
pop
stc
repz
pop
out
jno
jne
ljmp
and
popa
and
inc
icebp
jno
mov
popa
pop
sub
fistpll
xor
sahf
sbb
dec
xchg
clc
mov
fistl
fmull
cwtl
ret
dec
out
shrl
jae
mov
jp
or
push
fidivrs
icebp
push
inc
andb
in
dec
add
iret
mov
aaa
mov
and
rol
add
xchg
pop
adc
enter
and
xchg
repnz
push
xchg
scas
ja
and
lret
push
push
or
rcll
mov
movsl
push
mull
dec
or
push
stos
cmpl
out
cmc
test
dec
ret
inc
icebp
lcall
icebp
and
xor
dec
xlat
sarb
dec
mov
fsin
jo
mov
vpunpckhqdq
dec
loopne
jo
pop
pop
mov
cmp
std
icebp
sbb
mov
inc
mov
inc
sub
addr16
add
add
ljmp
adc
jns
push
loope
pushf
inc
icebp
ss
adc
inc
nop
inc
rep
mov
sub
mov
adc
dec
sbb
xchg
je
add
cmp
fs
aaa
leave
hlt
in
push
cmp
pop
leave
xor
pushf
jo
sub
sub
lds
xchg
xchg
cmc
into
inc
sbb
push
cs
shlb
jp
or
mov
mov
adc
adcb
fdivrs
mov
nop
inc
enter
movsb
sub
ja
mov
mov
adc
push
and
cltd
lret
rcll
les
movsl
push
mov
cmpsb
test
test
or
add
adc
jge
adc
sahf
mov
xchg
enter
stos
leave
insb
xor
pop
out
dec
in
hlt
xchg
xchg
inc
sub
fistpl
mov
pop
ja
test
mov
sbb
sub
pop
push
icebp
push
mov
adc
cltd
sbb
repz
pop
jno
jo
shlb
dec
ret
int3
push
imul
push
repz
push
in
and
xchg
lods
and
scas
les
popa
mov
aam
call
les
cmp
adc
mov
mov
cld
fisttpll
nop
add
pop
ret
dec
sbb
aaa
fdivrl
or
xor
aam
cmp
sbb
in
pop
out
jns
das
cmp
loope
inc
sbb
sub
sbb
loop
popf
adc
mov
insl
xchg
loop
mov
xor
mov
jns
adc
xchg
test
hlt
push
dec
cmpsl
ret
pop
mov
mov
std
imul
mov
aam
or
cld
add
out
movsl
fildll
fwait
pop
leave
jcxz
add
and
xchg
int
inc
repz
adc
xchg
loope
add
idiv
lret
pop
jmp
adc
idivl
lret
inc
mov
lret
in
xor
push
jecxz
adc
push
dec
mov
xor
repnz
out
inc
and
sbb
xor
sub
in
dec
insl
loop
pop
ljmp
push
pop
adc
and
dec
std
mov
xchg
shll
dec
les
aas
add
mov
mov
inc
cmp
lea
jno
xor
add
out
lods
xchg
sub
nop
add
stc
stos
aad
popa
scas
data16
loope
std
aad
add
jmp
jo
call
add
add
xchg
and
js
push
sbb
and
or
bound
inc
sahf
movsb
mov
sarl
push
or
jl
or
imul
mov
push
xor
insl
cwtl
dec
pop
dec
lea
imulb
js
gs
imul
push
into
mov
shl
dec
pop
jo
xchg
addr16
inc
inc
cmp
out
leave
add
movsb
xor
popl
push
inc
mov
push
pop
call
push
in
into
lret
pop
fidivrs
mov
xor
sarl
mov
mov
xlat
push
add
les
sbb
lcall
ja
adc
mov
xchg
scas
dec
xchg
xchg
mov
jno
or
add
imul
int
jb
jo
out
scas
cmp
sub
dec
jbe
mov
jo
adc
sahf
int3
das
pop
sarl
dec
andb
popa
jl
in
or
jge
ret
dec
jne
hlt
xor
scas
push
fiaddl
rcl
loope
xor
or
jo
loopne
lcall
sbb
and
mov
inc
push
outsl
shll
cmp
test
jl
push
dec
sbb
sbbl
push
inc
cld
or
sbb
push
aad
pop
je
outsb
and
inc
pushf
pop
pop
push
outsb
call
pusha
jcxz
testl
push
inc
sbb
cmp
movb
sub
push
ds
lods
notl
pop
cmp
xor
in
out
pop
shrb
pop
repz
dec
mov
sub
mov
pop
push
xor
or
adc
pop
xchg
dec
jge
lcall
nopl
xchg
orb
aas
and
movsb
sbb
xor
xchg
pop
in
ret
mov
push
sti
cmp
mov
sti
test
mov
dec
mov
cmp
and
sbb
jns
push
sti
cli
sub
jbe
nop
orb
push
push
icebp
loop
fmull
and
imul
sub
stos
push
dec
push
pop
xor
cwtl
inc
sbb
inc
pop
xor
js
lods
jno
add
imul
push
or
xchg
cs
and
in
pushl
sbb
xor
movsl
dec
int3
pop
push
push
in
fcmovnu
adc
sub
aam
shlb
subl
ret
or
mov
loope
cmp
repnz
and
in
mov
jg
fisttpll
ss
fsqrt
push
cmpsb
and
or
xchg
adc
cmc
stc
push
jno
icebp
cld
lds
or
mov
jno
inc
mov
jl
or
rcl
dec
inc
hlt
lret
aam
in
fwait
xchg
mov
aas
xchg
int
add
xor
loope
and
adc
jo
sub
bound
rcl
fadds
shlb
ljmp
js
xcrypt-cbc
cmpsl
push
cmc
roll
or
inc
push
inc
push
je
nop
mov
and
addr16
sahf
inc
repz
sahf
leave
jp
jns
pop
inc
dec
jno
xor
jbe
aam
outsb
add
cwtl
sub
outsb
add
xor
xchg
pop
cmp
push
ds
jo
inc
xor
in
sub
push
insl
sbb
jo
dec
sub
mov
les
push
int3
into
das
xor
shlb
outsb
jecxz
mov
dec
sahf
cmp
mul
xlat
pop
sbb
fcmovb
add
aad
push
mov
sub
repz
std
pop
insb
xchg
lret
mov
call
sub
test
mov
push
enter
pop
ret
shr
pop
shrb
push
dec
and
movsl
jno
jae
pop
dec
jge
mov
add
inc
out
xchg
imul
outsb
stos
out
pop
cli
mov
cli
jns
cld
jno
notl
outsb
mov
inc
dec
shl
and
fcomp
or
mov
shl
fisttpll
arpl
cmp
xlat
cwtl
ja
pop
jecxz
wrmsr
sub
or
or
dec
jmp
cltd
mov
test
or
push
jmp
out
mov
push
push
enter
jns
lcall
repz
inc
dec
adc
push
in
icebp
dec
dec
lods
iret
add
sbb
arpl
pop
rol
movsl
dec
repnz
dec
aam
jb
or
push
sub
cmpsl
cmpsb
fcmovb
daa
int
pop
in
mov
in
adc
mov
pop
push
sub
int
xchg
adc
fistl
push
cmp
adc
aad
mov
das
popa
push
push
pop
es
adc
xor
mov
in
ret
xchg
add
movsl
mov
es
push
push
idivl
rclb
or
jg
leave
test
dec
aad
in
sahf
xor
jb
push
rcrb
xlat
dec
or
inc
push
sti
imul
arpl
dec
movsb
sbb
and
cmc
mov
or
outsb
or
sahf
cli
inc
lods
mov
add
outsb
loop
jmp
repz
cmp
pop
inc
sbb
or
repz
cmovbe
inc
sub
incl
ja
iret
adc
ja
ret
push
stos
or
div
clc
adcb
ret
or
leave
jnp
out
cs
push
jl
daa
and
mov
add
push
cmp
movsb
mov
dec
push
js
lahf
push
add
inc
add
test
push
xchg
aam
rcrb
xor
jbe
push
inc
cmp
insl
add
fnstenv
int3
adc
pop
cmp
test
xor
fcompl
adc
add
les
mov
sbb
adc
stos
lret
sti
test
push
and
sub
and
push
imul
and
clc
in
jg
pop
cmp
push
push
mov
int3
mov
and
or
push
xchg
push
push
in
add
lahf
lock
out
xchg
xor
loopne
div
mov
test
fildl
sbb
adc
out
int3
sbb
push
cs
imul
ficomps
fimull
xchg
jno
pop
ret
inc
push
stos
ja
mov
in
adc
lds
in
fmuls
xor
sub
fistl
and
mov
mov
iret
loop
push
mov
ret
mov
mov
adc
cwtl
clc
xchg
dec
shrb
jp
out
shlb
sub
xlat
lods
insb
mov
adc
adc
mov
sbb
fiadds
dec
jecxz
outsb
imul
inc
adc
mov
ret
add
jns
in
inc
popa
sbb
cmc
sbb
subl
jno
testl
leave
add
outsb
test
mov
or
frstor
mov
mov
fldenv
xor
in
fidivs
subl
dec
sbb
mov
addb
insb
xchg
cmp
mov
pop
in
pop
mov
inc
pop
sarb
outsb
and
push
xor
xchg
xchg
sbb
add
aaa
int
sub
rcrb
mov
push
ljmp
inc
adc
frstor
aam
xor
pop
jbe
sti
xor
push
cs
and
jnp
imul
ja
push
dec
xor
inc
cmp
push
sbb
dec
daa
sub
push
sbb
repnz
mov
and
loope
in
xor
jns
popf
xor
push
and
mov
fisttpl
mov
push
idivb
aam
daa
inc
xchg
push
fisubl
and
xchg
and
fcoml
outsb
push
popf
popa
push
pusha
and
enter
push
scas
mov
jns
out
sub
push
rolb
and
inc
dec
pop
mov
xchg
scas
jo
arpl
int
sub
push
cli
lods
pop
and
sub
cmp
push
sbb
and
dec
inc
push
ss
push
push
ja
and
mov
push
jne
xchg
and
lds
pop
xchg
inc
rcll
int3
mov
pop
inc
sar
int3
roll
xchg
and
push
nop
inc
lcall
repnz
ret
mov
cmp
enter
or
arpl
pop
dec
movsb
lahf
ja
mov
ljmp
test
inc
or
jbe
and
pop
test
push
dec
mov
mov
negb
sbb
dec
pop
cli
adcb
push
jb
dec
jno
inc
ja
lea
sub
cmp
mov
sub
rcrl
cmp
je
dec
repz
cmc
stos
push
mov
stc
cli
rcll
jmp
es
fcom
daa
push
jmp
hlt
pop
repz
adc
cmc
xor
clc
add
enter
popa
add
dec
or
arpl
mov
xor
push
jae
push
addr16
mov
mov
sti
push
add
jnp
es
cmp
jno
lret
ror
push
lret
push
fidivl
inc
leave
push
pop
jo
inc
rol
push
xchg
inc
add
sub
xchg
push
push
xchg
pop
xchg
jmp
call
and
push
fstl
cmp
sbb
cmp
fsubl
push
xor
dec
movsb
nop
orb
push
hlt
shr
lea
out
iret
and
rclb
or
aam
leave
add
ds
xor
sub
pop
sub
lret
std
rolb
add
push
mov
les
orl
ficoml
cli
inc
or
aaa
jmp
in
jae
xor
push
sarb
dec
sub
lret
inc
js
ret
sub
jne
push
sub
cmp
dec
push
je
sub
push
cmp
inc
dec
xchg
push
mov
cmp
aaa
sub
push
xor
inc
pop
je
push
inc
inc
sahf
clc
jp
push
inc
push
or
call
jnp
addr16
dec
adc
and
addr16
addr16
jp
ss
out
push
enter
inc
xlat
rolb
fldenv
jns
add
xchg
push
cltd
push
add
mov
lds
in
fdiv
mov
push
in
pop
ret
jne
jmp
push
dec
and
aad
subl
push
fstps
adc
or
dec
add
cltd
sar
test
cmc
cmp
jmp
or
pop
dec
push
sarl
jno
xor
pop
stc
jmp
sbb
mov
imul
hlt
icebp
pop
sub
mov
int3
loop
jle
stos
cmc
lods
pop
aas
sarl
cli
dec
inc
dec
cmp
xchg
mov
in
jno
repnz
lods
jmp
call
movsl
mov
mov
push
mov
mov
pushf
mov
mov
jg
ret
movsl
add
aas
loopne
dec
fbstp
lods
pop
dec
adc
imul
sarl
fincstp
or
xchg
xchg
les
ficoml
push
rol
or
insb
add
xchg
and
add
out
pop
fbstp
jns
add
add
sub
dec
int
xchg
aas
sahf
aaa
jecxz
jle
rcl
stos
jge
cmc
repz
testl
es
cmpsl
mov
add
fmull
mov
jecxz
lods
push
fsubrl
xchg
add
adc
sahf
out
inc
and
mul
frndint
push
testl
sar
cs
repnz
pop
jge
popa
ret
push
dec
sbb
push
xlat
call
into
aad
popa
jmp
sub
test
pusha
or
bound
sti
mov
push
out
into
dec
es
sahf
enter
clc
dec
sti
or
into
xchg
test
scas
dec
addb
jns
adc
pop
gs
inc
icebp
sub
mov
jae
in
sahf
rcpps
int3
adc
push
jmp
sub
mov
aaa
add
fistps
repz
or
push
enter
dec
aaa
inc
mov
or
fsub
jge
insl
les
sub
cmp
jns
cmpsl
js
push
popf
adc
sub
fmull
mov
cld
xchg
jg
icebp
bswap
stos
int
adc
stc
bound
ljmp
lret
stos
or
sbb
add
or
push
dec
prefetch
jle
ret
stc
sub
xlat
fisttps
aad
xor
fadd
int3
adc
push
or
mov
icebp
sbb
fistpl
pusha
jle
add
mov
add
xchg
add
push
inc
flds
stos
mov
xchg
push
mov
add
jecxz
stos
js
xchg
cs
sbb
jo
fidivrs
or
pop
xor
jb,pn
xchg
out
cli
stos
iret
dec
sub
jo
iret
xchg
fisubrs
test
add
nop
jl
cmp
sbb
cld
jae
or
pop
out
jmp
cwtl
iret
adc
je
incl
cwtl
insb
sbb
jb
mov
outsl
rcrl
cmp
pop
cwtl
ljmp
iret
push
cmp
subb
pushf
andb
inc
test
shl
les
das
mov
xor
cwtl
dec
push
dec
xchg
rclb
movb
pop
loopne
cli
push
lcall
rcl
pop
decb
mov
dec
adc
mov
dec
cmp
pop
fstpl
push
cmp
test
xchg
dec
xor
dec
push
adc
push
adc
xor
clc
mov
and
jge
dec
sub
test
dec
sub
add
clc
and
out
rclb
cmpsl
xlat
jne
cmp
stos
mov
pusha
add
imul
orb
dec
xchg
rcl
and
sbb
in
pop
rorb
sbb
push
add
aaa
in
xor
mov
dec
push
outsb
push
sbbl
sub
mov
add
jnp
scas
pushf
arpl
pop
push
mov
addr16
mov
pop
nop
xchg
icebp
xchg
mov
push
data16
pushf
add
hlt
sbb
add
sahf
pop
sub
add
ljmp
sti
sbb
mov
cmpsl
sub
mov
bound
outsb
inc
icebp
inc
xchg
adc
fwait
inc
sub
scas
pop
jl
hlt
popa
push
pop
ret
popa
mov
mull
adc
add
dec
mov
dec
push
or
sbb
inc
and
push
pop
xor
jle
dec
in
outsb
xchg
mov
insl
push
dec
and
outsb
hlt
and
orl
cmp
sub
dec
and
test
mov
add
pop
add
cmp
pop
jl
cmp
ljmp
push
xchg
xor
popa
or
fisubrs
sahf
jnp
add
xor
arpl
sbbb
lea
mov
or
inc
push
jo
aaa
popa
xlat
cmp
movsl
andb
sbb
scas
pop
mul
dec
icebp
cmp
lahf
xor
sub
or
jp
or
xor
andl
push
inc
push
push
pop
loopne
inc
outsb
push
dec
and
mov
lcall
dec
dec
fnstenv
jno
test
mov
insb
test
or
outsl
dec
in
mov
sbb
pusha
push
xor
cwtl
inc
sbb
adc
inc
mov
push
or
popf
xor
sub
leave
xchg
popl
test
lahf
and
sbb
lcall
inc
push
cs
ds
lahf
rolb
sbb
aad
xchg
inc
cmpsl
mov
cmp
pop
in
std
fldcw
xchg
daa
into
les
fadds
ja
push
cmpsl
jmp
and
cmp
jge
jo
pop
imul
cltd
sarb
das
xchg
inc
popa
cmp
in
das
movaps
lods
inc
stc
or
and
inc
inc
frstpm(287
inc
mov
xor
mov
sub
int3
daa
out
loop
movsl
adc
cmp
fst
cld
pop
adc
jnp
std
xor
cmp
data16
addr16
pop
pop
jl
sti
cmp
dec
jp
movsl
dec
mov
test
fcoml
jl
in
xor
or
in
jl
xor
andl
mov
push
add
sub
pop
cwtl
fmul
mov
adc
and
out
xchg
pop
loopne
mov
mov
aas
ss
xchg
xor
das
in
push
pop
sub
inc
in
jne
sbb
shlb
stos
xchg
sub
xchg
push
rcl
aad
inc
insl
in
inc
adc
fcomps
sub
rolb
lea
xor
in
lret
mov
sbb
decl
out
ljmp
loop
xor
add
mov
add
xor
in
cmp
adc
or
cs
subb
lods
insl
xchg
movsb
out
loopne
push
mov
aad
add
jne
lret
add
xor
mov
loopne
inc
and
test
pop
mov
xchg
jno
cwtl
insl
push
and
js
fidivl
mov
test
inc
sbb
inc
jo
lods
test
outsb
or
jno
push
xor
sbb
int
add
iret
inc
push
jno
fdivrl
out
add
mov
xchg
xor
cmpsl
dec
dec
cld
js
sub
sbb
out
jl
or
daa
or
dec
iret
lahf
cmp
imul
fcmovb
sbb
lods
mov
push
movsl
pop
iret
push
xchg
frstor
lods
icebp
xchg
in
xchg
int3
lods
jnp
mov
xchg
pop
mov
ror
push
icebp
or
enter
inc
bound
xor
flds
popa
jmp
sbb
mov
aad
fimull
jle
xchg
shll
inc
or
and
and
push
adc
dec
test
aaa
leave
inc
mov
mov
xchg
jmp
add
movsb
leave
out
cs
xchg
and
rclb
call
pop
xchg
xchg
sbbb
iret
adc
movsb
cmc
das
outsl
and
add
pop
scas
rcr
addr16
add
fidivrs
divl
test
pusha
push
or
es
pop
add
mov
movsb
cmp
adc
cmp
sahf
mov
cmp
and
or
ljmp
lahf
adc
nop
inc
in
cmc
sbb
out
xor
fcoml
dec
dec
sahf
aam
or
ds
push
sbb
add
adc
cmp
inc
fmul
sub
shl
sbb
int
push
push
rcl
pop
mov
ret
adc
icebp
mov
cmp
jbe
dec
mov
jae
lock
aam
adc
aam
mov
inc
iret
push
xor
sbb
cmp
mov
pop
sarb
jbe
cmc
lret
jge
test
pop
inc
inc
or
pop
inc
add
sub
cltd
pop
mov
gs
lea
test
repnz
rorb
cmp
dec
mov
cs
int3
cmp
or
dec
sub
inc
js
fldt
inc
pushf
mov
mov
xchg
cmp
push
xlat
pop
push
mull
imul
into
cmpl
es
xchg
sub
mov
or
inc
test
insl
inc
mov
call
and
cltd
enter
nop
push
ss
inc
jo
add
dec
out
js
lock
or
mov
popa
iret
jns
out
adc
aaa
sub
inc
inc
pop
and
dec
or
les
imull
dec
adc
subl
insb
jns
add
fimull
inc
xor
cwtl
push
pop
out
mov
imul
sbb
andb
jno
sub
inc
in
arpl
lods
sub
pop
cwtl
lret
fnstcw
fwait
and
outsb
movsl
orb
sti
aad
test
sahf
mov
pop
outsb
lcall
jne
jmp
dec
sbb
pop
pop
lock
cmp
sbb
jbe
test
and
scas
shr
pop
lods
push
dec
sbb
shl
testl
and
aam
pop
clc
xor
cmp
mov
stos
movsb
add
mov
pop
in
fdivs
stos
dec
test
add
mov
xchg
inc
mov
cli
sub
push
aaa
bound
inc
mov
popa
fmul
aad
or
pop
dec
push
lcall
xchg
xchg
adc
lea
leave
pop
out
inc
xchg
das
inc
inc
push
or
subl
xor
push
into
addr16
testb
xchg
sbb
jne
jno
lds
and
int
nop
aaa
lcall
in
sbbl
mov
aaa
test
scas
ja
out
not
inc
jo
lahf
and
outsb
xor
mov
sbb
rclb
sbb
xor
mov
dec
jno
sbb
dec
movsl
mov
ret
mov
sbb
or
test
adc
sbb
out
mov
std
jno
mov
or
adc
dec
rcrb
in
pop
icebp
mov
or
mov
orl
sti
xchg
xor
pop
outsb
insl
mov
leave
imul
dec
mov
in
and
jmp
mov
and
push
sar
scas
sub
inc
push
add
into
push
bound
or
push
negl
or
sti
subl
inc
lret
aam
ret
sti
mov
pop
test
int
lcall
sbb
lahf
mov
int3
mov
in
cli
jmp
stc
dec
pop
rcl
mov
fldenv
imul
push
jo
aad
je
gs
ficoml
gs
xor
loop
int3
sub
sbb
or
lods
mov
xchg
rcrl
pop
ret
lods
das
jp
adc
jno
or
sub
mov
movsb
in
sub
popa
jbe
hlt
jno
push
cmp
mov
dec
das
std
dec
inc
jmp
in
dec
aad
push
shll
int
cmpsl
and
idivl
xor
mov
jecxz
xchg
mov
dec
or
dec
lret
and
es
insb
inc
jmp
push
cmc
aam
icebp
pop
xchg
xchg
repnz
sub
ficoml
imul
mov
push
sti
xor
stc
icebp
inc
fnstenv
fdiv
test
scas
inc
test
mov
cs
or
jo
clc
pusha
pushf
or
inc
add
push
jno
mov
das
loopne
dec
sub
push
dec
aaa
and
pop
out
test
sbbb
insl
adc
loopne
mov
pop
push
xchg
adcb
repnz
out
cmpsl
test
shll
lods
sbb
xchg
lret
mov
fsubl
sahf
aas
stos
into
les
jl
dec
out
pop
movsl
xchg
jg
movsb
mov
inc
pop
xchg
dec
shl
mov
add
mov
aaa
fcomp
sub
nop
jl
pushf
shr
mov
jl
xor
mov
outsb
icebp
fbld
in
xor
push
outsb
xor
clc
mov
fistl
xchg
jbe
inc
add
jnp
test
xor
lock
fs
pop
pop
int3
pop
push
in
jecxz
mov
notb
repnz
xchg
sbb
pop
gs
jne
xchg
ret
cmp
icebp
dec
inc
fwait
in
test
push
cmp
into
aas
imul
pop
in
ja
dec
lret
dec
in
fsubl
nop
das
pop
arpl
sti
adc
push
adc
or
idivl
in
mov
mov
pop
dec
daa
loop
sbb
inc
repz
mov
sub
cmp
mov
ret
mov
dec
or
aas
mov
loope
cwtl
cmc
psraw
push
or
dec
pop
scas
mov
inc
mov
in
jle
icebp
add
jp
adc
bound
push
mov
push
jecxz
jo
mov
sub
add
aam
sbbl
or
popf
insl
out
mov
stos
lret
sub
icebp
dec
mov
in
sbb
add
dec
and
adc
inc
or
decl
imul
rcll
stos
xor
test
into
or
in
cvtpi2ps
pop
pop
cmp
and
insl
out
mov
jnp
aad
sub
push
stc
jl
inc
imul
adc
pusha
sub
dec
mov
pop
inc
push
dec
jo
sbb
out
cmp
call
add
sarl
filds
dec
cmp
cwtl
push
pusha
push
in
dec
mov
mov
mov
xor
std
fwait
mov
cwtl
lock
xor
fidivl
inc
fwait
rcrl
inc
mov
shrl
cltd
fstpt
in
scas
jno
or
lret
outsb
mov
cwtl
push
imul
xchg
outsb
dec
cmpsb
scas
inc
mov
popa
out
shll
fwait
mov
jo
jb
dec
pop
dec
movsl
fwait
mov
popa
cmpsl
shlb
xor
aad
xchg
adc
xchg
addr16
cmp
je
cmp
adc
inc
fcoms
pop
inc
ret
loope
aad
or
enter
mov
sub
cmp
add
pop
adc
dec
imul
lea
sub
aam
inc
orl
push
dec
jno
inc
mov
sub
cli
push
mov
inc
mov
pop
cmpsb
mov
jno
idivb
ret
mov
in
inc
fdivs
insb
std
xor
pop
or
in
mov
mov
xlat
push
xchg
negl
leave
and
or
jno
fldcw
mov
outsb
mov
aas
mov
test
push
lahf
inc
sub
rorl
outsb
roll
scas
push
pop
add
fdivrs
mov
out
add
mov
adc
iret
shll
ljmp
mov
or
cld
cmp
rcrl
sbb
lcall
add
notl
dec
ficoml
mov
push
mov
jo
int
dec
lods
aam
dec
int3
fwait
int
jno
neg
jp
mov
jle
jp
inc
pop
into
sub
ret
hlt
cld
sahf
ss
lcall
jp
in
pop
rcl
mov
iret
mov
aas
push
loope
mov
fcoml
mov
stos
mov
pop
push
inc
adc
cmp
jne,pt
push
cmp
or
xchg
sbb
test
inc
pop
insl
movsl
cmp
pop
shlb
jmp
xor
xlat
dec
sbb
repz
jo
xchg
xor
jp
xchg
adc
test
dec
sbb
ja
hlt
and
or
icebp
xor
int3
aam
inc
cmp
or
adc
scas
pcmpeqb
scas
aas
sbb
sub
add
push
adc
adc
xor
sbb
adc
mov
cmp
repnz
fdivs
test
negl
dec
dec
insb
cmp
dec
lea
scas
sbb
sti
sarl
jnp
xor
sbb
xchg
out
push
mov
xor
testl
divb
rolb
and
outsb
push
dec
fcmovne
rcll
push
sub
dec
stos
call
je
notl
add
xor
leave
aas
call
push
xor
out
aad
mov
cmp
cmp
push
imul
out
aad
lods
out
pushl
jae
insb
out
mov
stos
nop
hlt
push
jl
push
adc
dec
inc
stos
cld
inc
xchg
mov
sbb
or
dec
lahf
rclb
push
dec
sbb
cli
leave
pushf
add
jle
and
xor
dec
aaa
push
xchg
dec
or
or
xchg
lret
dec
pop
lds
mov
or
jmp
mov
xorl
ficoms
jmp
clc
mov
sub
fstpl
call
or
add
in
jmp
aaa
dec
shll
mov
ds
cmp
mov
fisubrs
pop
sub
add
inc
inc
in
xor
jb
clc
mov
xchg
jnp
leave
cmpl
xor
sub
add
push
mov
dec
sbb
call
pop
xlat
adc
outsb
gs
mov
mov
hlt
add
jle
insl
loop
xor
addl
inc
sti
xchg
aaa
push
dec
adc
pop
dec
sbb
mov
andl
xor
add
out
jp
cmpsl
gs
stc
xor
std
jp
mov
dec
mov
lcall
adc
pop
pop
fldt
add
dec
int3
and
in
repz
mov
add
push
or
dec
mov
jp
push
lcall
push
popa
fdivl
lret
loope
fwait
outsl
mov
push
sti
sbb
xchg
xchg
sbb
loop
fildll
inc
pop
imul
pop
jo
lret
push
or
lods
aad
push
cmp
roll
addb
decl
das
sahf
and
popl
addr16
stc
pop
arpl
nop
loop
iret
pop
push
mov
push
lret
sub
pop
adc
adc
push
pop
inc
inc
push
mov
xor
mov
and
or
xchg
push
pushf
or
push
add
add
lods
push
push
adc
xchg
stos
mov
into
popa
inc
loope,pt
adc
add
xor
cmpsl
test
sub
inc
lcall
or
scas
ret
push
dec
rcrl
insl
fldl
mov
out
int3
dec
ret
in
pop
add
in
pushf
lds
mov
jbe
push
movd
rorl
rorl
out
out
add
gs
insl
fs
call
add
mov
pop
xor
pop
aaa
aas
inc
daa
test
or
or
arpl
inc
ds
adc
push
sbb
jb
add
call
mov
notb
int3
jo
lods
mov
sub
mov
jb
in
sub
cmc
push
sbbl
push
adc
cli
fidivrl
les
cwtd
fdivl
adc
mov
bound
or
xchg
push
push
cld
push
pop
ds
scas
sbb
stos
mov
xlat
decb
jmp
mul
jb
push
push
add
pop
hlt
mov
lds
sub
insl
lret
push
cmp
test
add
push
sbb
sbb
sub
hlt
add
push
rclb
cmp
xlat
and
rolb
push
xor
push
dec
dec
sbb
sbb
push
or
sub
sub
jecxz
and
inc
filds
cmp
fldl
inc
cli
push
adc
hlt
mov
arpl
xchg
add
xor
xor
and
sbb
filds
xchg
xchg
adc
out
subb
aam
mov
mov
shlb
or
ja
mov
pop
dec
or
cmp
gs
mov
mov
daa
sbb
jl
repz
imul
and
sbb
aaa
or
xor
popl
sbb
push
aaa
scas
sbb
inc
or
and
inc
xor
push
push
ret
and
pop
or
jns
fdivl
xchg
mov
mov
mov
cs
or
lahf
es
push
jle
add
cmp
dec
loop
sub
aaa
faddl
fimull
sti
pop
stos
shrb
ljmp
rcrb
ret
sbb
std
dec
add
in
mov
mov
into
subl
ror
nopl
dec
dec
dec
popa
mov
or
jmp
sbb
cli
inc
outsb
cmp
adc
adc
shr
or
pop
jb
arpl
out
or
sub
cltd
ds
js
pop
cmp
adc
in
neg
aad
fs
inc
test
add
test
mov
fwait
in
fcmovnbe
cmp
popa
fistps
xchg
pusha
push
lret
mov
insb
popf
and
inc
sbb
add
dec
les
lock
adc
test
jl
mov
mov
push
sbb
mov
mov
loopne
outsl
xor
or
sarb
mov
xchg
xor
jmp
das
insl
mov
hlt
fistps
push
loope
divl
sub
lock
lods
push
jae
cmp
inc
jge
push
cmpsl
fnsave
xchg
out
test
int3
fdivrl
movsl
jg
hlt
fsubrs
jge
nop
mov
or
imul
mov
push
pop
xchg
xchg
out
hlt
outsb
jae
push
pop
fstl
cli
jge
in
cmp
mov
add
dec
repnz
iret
cli
gs
loopne
pop
scas
popa
inc
jno
cmp
pop
adc
xchg
adc
gs
and
pop
lods
or
adc
imul
xor
clc
aam
test
fsubl
dec
pop
imul
mov
pop
lea
pop
cmp
xor
pop
push
rolb
inc
in
sbb
loope
setp
cs
fnsave
dec
pushf
shll
adcl
arpl
xor
dec
inc
fdivrs
enter
sub
decl
jns
into
or
xchg
push
xchg
ret
cli
xchg
pop
mov
xor
pop
jmp
lcall
and
cwtl
jno
das
inc
and
mov
push
cltd
pop
xlat
mov
fisttpll
xchg
add
std
inc
lahf
outsb
mov
cmp
mov
dec
lea
sti
fidivl
xor
pusha
adc
push
rclb
in
add
xchg
nop
jl
adc
and
cmp
inc
icebp
sub
push
xchg
xchg
xchg
jl
xchg
outsb
in
ret
pop
xchg
xchg
aad
fsubrs
inc
mov
fwait
mov
push
fwait
inc
pop
mov
les
fbld
and
fimull
xor
or
sub
push
dec
xchg
adc
adc
fwait
arpl
cli
pop
inc
cld
pop
push
pushf
add
dec
jo
xchg
or
imul
lahf
sub
jecxz
mov
mov
jl
insl
mov
sbb
xor
push
push
mov
into
adc
mov
sub
push
push
test
cmp
out
or
mov
loope
mov
sbb
and
mov
cwtl
inc
sub
js
mov
lahf
adc
or
pop
adc
mov
mov
or
sub
in
dec
inc
in
jge
adc
scas
dec
out
sbb
mov
fs
xor
push
push
add
out
xor
bound
add
push
or
dec
xor
sbb
push
dec
pop
or
stc
aam
cmpsl
sub
adc
lock
repnz
inc
sbb
sbb
cmc
and
mov
dec
loop
and
add
lock
push
ret
int
push
fmul
hlt
lret
and
int3
and
cmp
mov
mov
fdivl
outsl
mov
mov
sbb
xchg
adc
sub
xchg
dec
outsb
xchg
das
aas
sbb
into
cld
enter
addb
ds
mov
sti
in
arpl
push
adc
pop
es
pop
pop
and
xor
push
or
xchg
push
iret
sbb
int3
jl
test
cmp
xchg
xchg
dec
mov
adc
fisttpll
out
mov
inc
and
sbb
jno
xor
cmc
insl
ja
dec
testl
dec
sbb
and
and
gs
imul
icebp
dec
dec
mov
adc
mov
out
sub
inc
sub
iret
js
mov
sub
cmpb
dec
adc
mov
mov
lds
jge
mov
mov
dec
dec
enter
into
fiadds
push
fsubl
sbb
xlat
cs
shrb
cmpb
xor
fstps
in
or
push
call
mov
cwtl
dec
cltd
shl
fstl
cmc
sub
rcr
mov
and
push
mov
dec
popa
aad
aad
push
hlt
lret
dec
imul
dec
mov
xor
jno
mov
push
sarl
and
cmpl
lds
cmp
or
cmp
push
rcll
push
inc
stos
or
cs
push
dec
and
mull
adc
imul
adc
push
in
mov
sbb
mov
push
adc
mov
ret
rolb
cltd
je
aaa
mov
add
push
incl
or
hlt
test
ret
pushf
cmp
jge
movb
cwtl
sbb
lret
cmp
fwait
mov
push
mov
jns
aam
lret
xor
adc
add
lret
inc
mov
xlat
xchg
sbb
lcall
sti
jne
pop
inc
test
add
lahf
add
inc
aaa
out
jp
repnz
mov
sub
loop
divb
sub
pop
pop
fmuls
pop
adc
mov
daa
cli
out
pop
loop
add
sbb
inc
test
lods
add
dec
jecxz
aas
jo
mov
mov
push
sbb
scas
mov
xchg
mov
fmull
jno
addr16
xchg
test
sbb
shrl
ret
cltd
fstps
push
push
xlat
or
insb
mov
dec
inc
add
loopne
push
push
jns
pusha
sub
jns
or
adc
and
test
mov
bound
xchg
lds
sahf
mov
or
mov
pop
outsb
outsl
out
xchg
pushw
dec
sub
pop
jno
or
jae
xor
mov
mov
xor
jl
xchg
in
sub
clc
loope
or
lds
mov
sub
pop
sub
nop
inc
push
test
data16
cmp
sub
inc
out
push
int
popl
dec
add
push
fcoml
insb
clc
mov
pusha
jno
xchg
push
or
and
add
out
push
adc
jns
in
dec
out
xor
jno
sti
or
outsb
int
add
xor
dec
add
jns
or
dec
inc
repz
jo
mov
lahf
cli
mov
xchg
jecxz
fwait
insl
and
mov
mov
daa
mov
out
push
mov
adc
or
filds
dec
sbb
xor
mov
pushf
stos
dec
sarb
jmp
pusha
shrb
dec
inc
pop
pop
scas
push
mov
cmp
and
xor
or
addb
mov
add
stc
mov
jb
lds
rolb
lahf
cmp
lcall
sbb
or
ret
lahf
lock
push
pop
mov
mov
icebp
cmp
lahf
mov
jle
jmp
rcll
popa
or
out
and
jb
aam
icebp
inc
sarb
or
orb
push
mov
xchg
aam
cs
jmp
push
xor
push
add
outsb
hlt
sbb
leave
data16
lods
xlat
jl
lock
mov
lods
data16
push
out
aad
jno
cmp
push
lahf
mov
push
sub
lret
stc
and
shll
sbbl
js
enter
cmp
pushf
add
cmpsl
sub
bound
xor
inc
dec
dec
dec
sarb
std
sahf
jp
inc
and
xor
rcll
sbb
and
push
clc
enter
and
pop
dec
push
push
sbb
xor
cmc
scas
mov
sub
inc
and
sbb
sbb
rol
xor
pushl
fnstenv
adc
push
sub
adc
jecxz
push
aad
dec
cwtl
cmp
push
in
lods
aaa
into
and
push
shrl
test
add
dec
xchg
xchg
or
or
xchg
dec
dec
mov
cmc
mov
sbb
addl
add
xchg
aad
cmc
enter
stos
call
es
aaa
push
ffreep
out
ljmp
punpckhdq
adc
xor
cmp
push
adc
das
jne
push
lea
push
inc
iret
add
xchg
jne
xchg
imul
popa
out
loopne
iret
sbb
movsl
inc
mov
pop
xchg
cmpsb
or
sub
xor
xchg
pop
xchg
sub
xchg
rcrl
or
in
ficoms
sub
push
fwait
jl
add
xchg
insl
or
das
addr16
insl
mov
clc
jg
shll
scas
pusha
das
addr16
mov
das
enter
xchg
ficoms
call
out
popf
adc
pop
stc
les
inc
cmpsb
stos
sub
sqrtps
mov
mov
sar
xchg
dec
and
jns
adc
int3
shrl
cmp
mov
mov
push
lret
rcr
add
mov
cli
lret
movsl
es
adc
add
xchg
xchg
mov
and
fwait
sub
fadd
sub
jno
push
cmpsb
dec
sbb
popa
push
mov
nop
add
aaa
icebp
sahf
xchg
push
idiv
repz
out
in
xlat
fiaddl
std
dec
mov
daa
and
call
dec
or
sarb
push
add
inc
cmp
imul
jno
cmp
loop
shlb
push
cmpsb
mov
rorb
adc
pop
jge
lods
xchg
mov
and
adc
call
clc
sbb
enter
inc
jg
fdivrs
mov
push
sub
inc
iret
jnp
mul
pop
sub
sbb
gs
fidivrl
loopne
or
lea
push
insl
lds
andb
sub
pop
fmuls
or
fwait
js
xchg
addr16
pop
lock
dec
fistpll
leave
add
mov
inc
add
or
int
inc
leave
sub
inc
aad
sub
inc
and
sub
sarl
xchg
and
in
sub
add
jmp
test
enter
inc
add
xchg
add
push
mov
sub
inc
adc
mov
sub
cmc
mov
push
and
insb
enter
mov
inc
clc
es
iret
add
daa
lea
sbb
sarb
inc
out
xor
pop
adc
push
in
repz
xlat
dec
add
push
push
push
push
push
push
push
push
dec
dec
dec
ds
dec
dec
dec
inc
pop
inc
inc
inc
inc
inc
inc
inc
aas
ret
outsb
popa
adc
fs
mov
sbb
push
xlat
pop
sbb
jnp
xor
nop
adcb
push
int
inc
mov
in
xor
and
or
jno
in
arpl
mov
mov
les
mov
inc
jge
xchg
xchg
clc
jge
xchg
pop
sar
ret
fs
aam
sbb
enter
lret
inc
xor
rcll
std
adc
and
adc
jns
loope
mov
jp
xchg
fcmovne
pop
inc
pop
es
mov
jnp
pushf
pop
mov
inc
jno
sub
loop
and
fnstenv
icebp
jnp
adc
mov
push
or
jo
add
leave
dec
add
scas
aad
jp
das
or
pop
mov
mov
sbb
rcll
add
mov
movsl
out
xchg
add
fstl
pop
mov
adc
push
std
out
jnp
cwtl
adc
mov
scas
rol
xchg
jno
orb
jmp
xlat
or
popf
cli
inc
cmp
in
push
inc
cmp
dec
loope
add
movsb
xor
imul
int
and
sarl
movsl
xchg
or
mov
jno
in
pop
xchg
or
and
leave
xchg
aaa
ss
inc
cmp
jl
test
clc
sub
jne
push
adcl
push
inc
push
jl
mov
or
jb
dec
popa
xchg
out
imulb
adc
test
rcll
jne
sti
xchg
stos
repz
or
mov
xorl
cs
push
pop
iret
stos
lcall
ret
cmpsl
stos
iret
nop
aaa
popa
jo
orl
fcompl
mov
inc
xor
out
imul
sti
fdivs
jg
in
push
sub
int3
rorl
inc
cmpsl
imul
adc
or
insl
mov
push
dec
sar
mov
mov
ja
jb
inc
cwtl
dec
pop
addr16
shrb
ss
mov
stc
das
ror
inc
xor
push
sub
xor
stc
out
arpl
sub
insl
xchg
aaa
push
pop
std
dec
aaa
push
add
pusha
imul
repz
xor
sub
dec
fldt
cli
enter
xor
mov
outsl
and
adc
sti
inc
rorb
popa
cmpsl
inc
dec
pop
iret
sbb
dec
ss
xchg
sti
pop
pop
test
lret
xor
cmp
loope
data16
outsb
push
sbb
insl
mov
fwait
cmp
lea
xchg
leave
pop
cmp
dec
add
xchg
dec
mov
push
cmp
xorl
adc
fwait
ljmp
add
cmp
mov
or
cmp
test
cmp
dec
mov
pop
ljmp
inc
mov
push
pop
sbbl
dec
or
rolb
scas
fs
inc
in
out
mov
or
jo
xlat
adc
imul
mov
push
fisttpl
xchg
dec
adc
dec
and
xor
loope
cli
and
adc
mov
pop
inc
xchg
cmp
push
push
pop
jecxz
jmp
sub
jg
adc
aad
aas
cmc
cmp
imul
lods
add
pop
dec
mov
xchg
jmp
or
inc
aad
aaa
lcall
icebp
mov
movsl
repz
outsb
mov
or
shrb
clc
jne
dec
sti
push
bound
mov
ficoms
rclb
gs
cmp
stc
in
xor
mov
dec
ja
cmp
jp
push
push
or
arpl
push
dec
icebp
testb
or
popa
nop
xchg
sahf
dec
pop
ja
xor
lret
lds
mov
add
push
xor
add
or
or
les
xor
and
dec
icebp
pop
jb
fmul
xor
std
subb
jae
cmp
mov
inc
adc
fisttps
dec
sub
jnp
push
imul
or
es
xor
sub
inc
loop
push
leave
rol
clc
pushl
xor
dec
stos
jmp
xchg
and
in
push
lea
jno
xorb
push
xchg
dec
in
shrb
add
lods
adc
sbb
or
and
or
sbb
add
lcall
mov
xchg
pop
mov
sub
sahf
outsb
gs
das
js
mov
mov
nopl
inc
outsl
sahf
loop
push
stos
das
cmp
lods
loope
push
dec
mov
and
icebp
and
inc
cmc
adc
daa
add
sub
cmp
test
jo
xor
addr16
outsl
mov
bound
ficoml
cwtl
sarb
adc
dec
push
pop
cld
pop
mov
xchg
xorb
popf
push
outsb
cmp
xor
scas
or
fwait
and
stos
sbb
cmc
test
dec
inc
stos
push
push
test
dec
pop
out
pop
leave
mov
xor
dec
gs
stos
push
icebp
gs
xchg
mov
sub
lods
push
cmpl
adc
mov
jle
inc
cs
leave
push
and
push
out
in
xor
loopne
dec
int3
rcll
ret
in
les
mov
aad
aad
out
and
loope
lods
addr16
mov
test
mov
xlat
subb
push
lahf
adc
mov
sbb
int3
imul
push
decl
jnp
ss
sub
sub
xchg
call
ss
inc
sarb
or
xor
int3
mov
loopne
cmp
sbb
out
cmpsl
jecxz
inc
dec
rcll
add
pop
aas
cmp
inc
in
dec
inc
cmp
loop
sub
jge
pop
popa
ljmp
adc
lock
mov
std
inc
adc
dec
dec
adc
test
xor
jne
adc
in
dec
push
jecxz
inc
push
push
loop
icebp
subl
leave
xchg
inc
outsb
jg
icebp
jne
jmp
pushf
xchg
push
in
jo
inc
outsb
cmpsb
sub
fbld
cmp
fdivl
dec
leave
out
mov
sbb
dec
jecxz
das
pop
adc
adc
push
leave
add
or
push
add
les
push
aam
push
stos
loop
or
shl
and
inc
fldl
push
inc
pop
pushf
in
cmp
adc
fildl
mov
movsl
mov
adc
add
cs
and
sub
push
and
and
mov
fdecstp
dec
inc
into
xor
insl
imul
and
into
dec
pop
outsb
dec
jbe
sbb
jp
rcrb
jp
shll
xor
jno
push
jo
filds
dec
push
fcomp
inc
dec
inc
mov
dec
dec
loopne
mov
fucom
and
add
pop
add
pop
inc
and
jae
ret
xor
addl
push
stos
sbb
in
xor
int3
loope
sbb
inc
in
pop
mov
sbb
xchg
push
out
ljmp
sub
shrl
fsub
ss
and
mov
push
scas
mov
aaa
rcll
daa
in
stos
push
push
nop
mov
add
mov
lret
mov
or
ds
inc
adc
lods
jp
dec
push
addb
sub
adc
leave
rclb
fmull
pop
ss
test
sbb
test
lods
aaa
add
adc
add
outsb
mov
in
fcom
adcl
adc
sbb
mov
leave
inc
fidivrs
in
sub
cmpb
gs
sbb
adc
addr16
xlat
arpl
inc
jno
push
pop
mov
sti
mov
ljmp
lcall
push
shr
das
popa
arpl
pop
rorl
push
push
jl
les
rclb
inc
stos
adc
mov
loope
add
shrl
stc
xor
mov
xor
mov
cmp
mov
stc
sti
ja
cmp
fsubrp
xchg
test
int3
add
jge
in
xor
inc
adc
cmp
popl
daa
push
gs
xchg
push
into
push
xor
dec
int3
adc
or
les
fdivr
je
fisubs
cmp
repz
fisubs
rorl
mov
inc
int
xor
addr16
scas
mov
aaa
fstl
dec
jl
out
outsb
cli
mov
dec
xor
cmc
sub
push
icebp
aaa
jmp
pop
dec
das
jo
and
ljmp
sub
pop
ss
push
xchg
and
cmp
mov
fsubl
fldenv
add
mov
cmp
movsl
addr16
in
and
push
jo
and
outsb
xchg
loope
jo
xchg
mov
dec
mov
add
adc
pop
mov
jo
lahf
xchg
aad
nop
mov
aaa
mov
push
int3
dec
and
ja
pop
inc
cmp
mov
add
pop
mov
sbb
or
aas
dec
jo
sub
mov
lods
inc
pop
inc
loopne
repz
jno
and
pop
xchg
jo
add
out
sub
out
mov
icebp
jbe
cwtl
dec
inc
inc
sti
push
mov
ss
adc
cs
mov
cmpl
push
bound
inc
and
pop
in
sbb
sti
pop
pop
xor
das
jmp
fdivrs
aam
pop
cmp
sub
arpl
imul
jno
repnz
push
nop
push
cwtl
fisttpl
or
out
lods
dec
dec
in
jae
push
inc
jo
daa
and
pop
push
xchg
mov
aas
jmp
xor
cmp
pop
inc
cwtl
sbb
mov
adc
popa
inc
sbb
mov
cmp
gs
in
pop
pop
pop
add
test
dec
or
repz
fnsave
add
std
xlat
mov
in
push
jbe
outsb
rolb
sub
or
in
cmp
stc
fmulp
add
cmp
jne,pn
or
mov
out
cmp
rcrb
and
aas
shlb
test
sarb
bound
xchg
pop
and
jbe
jae
pop
ret
xor
sti
or
nop
xchg
fs
cmp
mov
mov
pop
xchg
adc
dec
push
mov
pop
fdivl
std
adc
push
popa
fiaddl
test
and
cmp
cmp
leave
sbb
sbb
fnstcw
xchg
loope
gs
push
lret
xor
stos
lea
lea
inc
mov
xchg
pusha
outsb
mov
fcoml
mov
dec
sub
mov
xchg
leave
dec
aad
sub
subb
iret
adc
inc
or
jmp
sbb
pop
mov
hlt
or
cmp
or
shll
jae
add
sub
movsb
fsubrs
add
insb
lea
mov
popa
pop
or
and
in
jnp
jmp
cmp
outsl
and
daa
mov
mov
rol
adcl
fcmovb
xchg
fbstp
repz
sub
pushf
mov
jp
leave
sti
inc
mov
mov
pop
inc
rclb
scas
sbb
int3
pop
xor
adc
sbb
or
inc
out
sub
sbb
movb
daa
dec
inc
adc
cwtl
jae
ljmp
ss
loopne
insb
mov
gs
xchg
and
cmp
imul
movsb
push
imul
cmp
and
pop
clc
inc
in
fldt
and
out
addr16
mov
daa
or
nop
fdivl
or
inc
rcrb
lea
data16
push
or
dec
jg
or
out
xlat
cmp
ss
ja
fists
lds
pop
jl
js
rorl
xor
shlb
jle
mov
scas
cmp
sti
stos
mull
cli
jno
iret
fildl
xor
sbb
adc
fimuls
daa
mov
fidivrl
dec
pop
into
mov
outsl
rorb
cld
test
cmp
xchg
in
add
lock
mov
push
cmp
adcb
cmp
inc
jge
mov
push
outsb
testb
push
arpl
and
inc
in
jp
adc
aam
xchg
sarl
jo
mov
and
loope
sub
inc
jp
das
fiaddl
mov
and
nop
imul
scas
jecxz
call
xchg
fstpt
pop
jo
in
decl
mov
or
and
cmpsl
dec
jno
stc
or
mov
push
sub
out
mov
xchg
pop
fmull
adc
arpl
push
in
sub
decb
nop
data16
fdivrl
jecxz
xchg
ljmp
lcall
hlt
dec
cmp
repnz
and
sbb
clc
pop
jno
sub
dec
data16
hlt
push
mov
xor
or
xor
negb
hlt
fs
jmp
out
dec
inc
mov
in
addb
mov
sbb
sub
xor
std
mov
fdiv
shr
add
dec
mov
lcall
jge
mov
xchg
sbb
in
out
out
xorl
popa
add
aad
cmp
roll
nop
idiv
js
cmp
pop
into
adc
dec
cmpsl
mov
lret
xchg
ret
adc
adc
push
mov
xchg
out
jl
xorl
mov
lret
pop
sti
inc
dec
cmp
icebp
inc
call
cmc
mov
pop
dec
push
inc
outsb
insb
imul
jo
pop
jecxz
sbb
aam
int3
push
push
or
add
adc
push
or
cmpsb
ds
lods
or
xlat
fmul
pop
int3
and
call
outsb
dec
mov
pushl
fdivl
mov
fucomi
aam
in
ljmp
adc
add
xchg
shl
inc
inc
aam
lock
sub
dec
clc
mov
test
pop
lea
shll
test
xor
dec
adc
in
jno
xor
call
fs
lock
imul
scas
cwtl
std
mov
out
stos
jle
nop
add
out
mov
aas
das
popf
jbe
ret
or
xchg
inc
inc
push
jno
add
and
sub
dec
fimull
fiadds
lcall
movsb
cmpl
mov
outsl
int
pop
inc
push
mov
cwtl
pop
mov
in
add
dec
sub
cmpb
inc
movsl
mov
ret
loopne
push
gs
pop
cmp
and
aaa
mov
bound
fldl
popf
test
mov
inc
or
push
add
jns
addr16
add
outsl
fdivl
dec
xchg
fldl
pop
lods
movsb
shrl
addb
push
dec
scas
add
mov
jge
push
jge
xorb
imul
aam
icebp
xlat
or
ja
test
push
cmp
or
cmpl
xchg
push
insl
lock
xor
and
sbb
and
bound
jae,pn
inc
dec
mov
adc
add
dec
push
pushf
push
lds
call
jp
sbb
out
int3
lock
adc
aaa
sti
pop
jmp
and
aam
daa
nop
pop
pop
popa
adc
inc
cltd
scas
jns
int3
adc
pop
inc
jno
inc
add
sti
jge
fnsave
or
aam
add
inc
cwtl
inc
adc
aas
sub
je
mov
aam
jge
in
cmp
sub
lret
dec
inc
in
sbb
jns
gs
mov
and
pop
dec
fwait
xor
pop
fldcw
sbb
out
cmp
out
mov
mov
pop
xlat
aaa
mov
outsl
xorb
push
pop
cmp
xor
inc
xorl
testb
and
jae
dec
bound
sbb
aaa
jmp
test
cmp
push
or
lock
fdivrs
add
sub
push
ds
push
jg
push
in
cmpsb
dec
call
sbb
addr16
loopne
and
lea
add
ret
adcb
push
jo
jmp
dec
or
test
cld
jb
mov
push
pop
hlt
dec
sub
dec
mov
jmp
repz
sub
push
adc
push
lret
cmc
cmp
aaa
push
fstpt
add
call
cmp
xor
push
es
dec
xchg
dec
jmp
insb
sbb
es
and
push
sbb
insb
iret
loop
sbb
mov
mov
mov
push
test
mov
jae
sbb
adcl
test
inc
dec
dec
push
inc
int
or
fs
cmp
push
lea
adc
inc
int3
ficompl
cwtl
dec
mov
and
adc
fcoms
outsl
fistps
daa
out
or
sub
loop
sbb
clc
clc
cmp
sub
fs
jecxz
or
and
addl
mov
xor
cmp
dec
negl
dec
inc
outsb
loop
sbb
jb
push
jns
inc
lea
rcr
cmc
jnp
mul
dec
xchg
push
push
sub
mov
dec
lcall
sbb
cld
daa
ljmp
popa
add
cmp
rcrb
dec
push
call
cli
roll
out
inc
pop
dec
xor
xchg
xchg
sub
fdivs
xor
pop
push
ss
push
push
rolb
inc
shlb
lock
mov
rclb
aaa
mov
push
xrelease
push
ret
xor
aas
test
mov
cmp
push
roll
ret
xlat
loope
fiaddl
stos
cmp
fstl
sbb
sbb
adc
or
inc
add
add
stc
mov
dec
icebp
loope
jno
lret
mov
adc
pop
inc
cmp
pop
cmp
push
pushf
adc
inc
xchg
movsb
loop
sub
mov
loop
jle
ret
lock
inc
xor
punpckhdq
inc
inc
dec
inc
inc
mov
inc
sti
nop
mov
cmc
ret
or
mov
aad
push
pop
mov
aam
ja
inc
mov
cmpsb
unpcklps
mov
stos
addl
popa
cmpsl
mov
adcl
std
lret
ss
dec
or
push
rcrb
cmp
sahf
or
aad
jae
mov
mov
lret
add
gs
icebp
cmp
ret
out
clc
jno
jae
or
xor
mov
loopne
xor
fldl
shll
shlb
inc
mov
or
xor
in
add
sahf
test
into
push
gs
popf
sti
and
xchg
outsl
pusha
push
adc
or
iret
sub
inc
fisubrs
sub
mov
cmc
pop
sub
mov
pop
pop
out
push
movsb
pop
adc
popa
cmp
fsubrl
mov
sti
mov
jmp
les
inc
xchg
cmc
ss
jae
push
dec
jmp
cmp
mov
mov
mov
out
out
enter
push
wbinvd
test
cmp
inc
bound
jo
out
sub
lea
cmp
inc
pmulhuw
mov
fcmovb
sub
jno,pt
cmc
lret
mov
test
icebp
mov
cmp
jp
fnstsw
sub
sbb
int
mov
or
mov
xor
sar
jmp
mov
sbb
out
push
add
scas
bound
dec
jbe
sub
xor
push
sub
pop
xlat
leave
adc
pop
icebp
imul
popa
xlat
test
fstl
mov
aaa
into
dec
sub
pop
int
push
jns
int3
ret
pop
sahf
inc
dec
cmp
push
imul
lret
lock
sub
dec
adc
jmp
mov
pop
jmp
insb
add
test
aas
sub
jmp
subl
push
xor
aam
sub
pop
into
test
roll
daa
mov
pop
inc
xor
enter
and
inc
aas
adc
jmp
mov
mov
xor
push
cwtl
nop
xchg
push
inc
popf
sub
mov
rorl
add
and
in
lea
popa
cmp
xchg
insl
aaa
sahf
ret
icebp
cmp
pop
xchg
stos
xor
push
rclb
mov
jp
fidivrl
sub
jge
sbb
out
sub
adc
jmp
and
dec
and
dec
jle
cmp
cmp
dec
repz
mov
sbb
jecxz
jl
cmpl
out
sub
lods
pop
xor
jp
popa
sub
and
mov
js
push
sbbl
pop
jnp
xor
repz
enter
shrb
int
fstl
fwait
xchg
or
inc
lret
std
dec
sarl
mov
fsubrl
pusha
push
lods
add
lahf
shll
or
sub
and
ja
pop
mov
jno
faddl
shll
shlb
xchg
pop
inc
icebp
push
dec
scas
xor
outsb
or
or
push
mov
sbb
or
inc
jecxz
xchg
or
in
clc
stos
dec
dec
sbb
xchg
scas
mov
sub
xchg
sub
roll
aam
lret
lock
jecxz
mov
pop
push
mov
cmp
imul
cmp
mov
js
mov
pop
cmp
rcll
dec
stos
in
cvtdq2ps
or
lods
scas
jnp
lods
sbb
aad
push
loop
sub
and
insb
or
xor
dec
mov
cmp
lds
nop
pop
and
stos
add
lods
adcb
ror
dec
cmp
arpl
or
jae
in
cmpsl
dec
inc
gs
scas
dec
fildl
dec
or
adc
mov
xor
mov
mov
dec
addl
dec
aad
pop
ss
std
and
aas
inc
ret
ret
jecxz
sub
dec
out
in
cld
sti
push
aam
arpl
mov
sbb
inc
jo
int3
in
in
jge
pop
aaa
lret
pop
into
clc
test
popa
data16
mov
inc
pushf
mov
ljmp
or
jno
inc
in
jg
xor
lret
mov
inc
outsb
roll
scas
cmp
and
mov
es
dec
xlat
mov
imul
inc
mov
xor
arpl
add
mov
sbb
pop
ret
jnp
test
cmp
dec
popa
xchg
push
adc
movsl
mov
lret
sahf
push
test
sub
int
inc
lahf
rcl
and
std
into
pop
aam
minps
sbb
lcall
pop
sbb
cmp
add
push
xchg
or
fidivs
lret
in
sbb
push
lret
jo
or
xor
loope
add
outsb
faddl
jl
fildl
push
dec
aad
outsb
and
push
popa
inc
adc
push
push
push
fadds
dec
fstp
lock
mov
xor
dec
adc
pop
inc
lcall
mov
lret
jnp
inc
dec
mov
cmpb
mov
cmp
and
dec
cmp
jo
stos
jae
mov
mov
xor
clc
inc
push
or
ret
lret
sub
test
inc
sub
xor
lods
pop
mov
sti
xchg
sbb
add
lret
sbb
inc
rcrb
rcrl
cmc
ret
outsb
push
sbb
test
mov
xor
xchg
xor
xlat
inc
jo
mov
imul
int
mov
repz
dec
testl
aaa
or
pop
jo
push
or
pop
in
lret
daa
cmc
cld
and
cmp
xor
mov
incb
xchg
out
fnstenv
xchg
xchg
adc
mov
sub
addr16
mov
mov
inc
stos
into
jo
pusha
jl
imul
pop
aas
daa
fbld
stc
push
adc
pop
scas
repnz
fnstenv
and
icebp
or
mov
push
dec
les
dec
sub
mov
sub
push
mov
idivb
cli
stos
push
inc
jo
icebp
sbb
dec
imul
fnstsw
lret
push
or
repz
xor
in
outsb
imul
mov
or
mov
ds
in
xor
and
jb
mov
cmc
lea
enter
out
aaa
stos
xor
cmp
repnz
cmp
in
sbb
mov
cmp
push
mov
push
stos
cmp
mov
cld
mov
lods
fbstp
and
jl
jecxz
pop
das
les
push
ss
mov
out
popf
lock
cs
dec
xchg
lods
iret
jl
lret
sbb
ret
push
dec
or
fidivl
icebp
sub
xchg
lret
or
inc
ljmp
aam
xor
ret
cmp
add
cmp
shl
cmp
or
outsl
adc
dec
into
and
pop
or
mov
sbb
rorl
incb
movsl
mov
mov
int3
adc
ret
add
push
xchg
rorb
cmp
pop
xor
xor
scas
test
in
dec
push
into
popa
das
mov
hlt
pop
iret
push
fwait
in
adc
xlat
cmp
dec
cli
mov
jo
sbb
aaa
into
test
mov
and
das
fcom
and
sub
test
xchg
lds
pop
push
inc
sub
inc
mov
or
push
mov
fstl
xchg
lea
pop
jecxz
add
sbb
mov
sar
and
add
mov
dec
test
mov
cmp
jl
adc
idivl
sub
mov
sbb
aam
icebp
inc
daa
dec
dec
cmc
dec
add
xor
jo
xor
and
push
inc
fcoms
mov
inc
add
adc
push
xchg
gs
cli
pop
pop
inc
mov
fstps
xchg
shl
dec
ss
mov
mov
ss
inc
jo
xor
es
push
mov
lock
notl
stc
fcompl
and
push
addr16
pop
xchg
stos
clc
in
dec
ja,pn
fsubl
sub
xchg
mov
faddl
mov
movsb
sub
sti
adc
push
std
sbb
rcrl
repz
jae
fimull
cmp
dec
inc
outsb
movsl
ret
adc
jae
shl
push
fildl
mov
ds
cmpsl
popf
loop
cwtl
push
xor
je
inc
dec
dec
mov
lods
enter
cmp
xchg
into
add
sbb
adc
fprem
cmp
xor
insl
add
and
push
std
aaa
test
jecxz
jl
cmp
fs
cmp
pusha
mov
outsl
dec
xchg
push
cmp
sbb
arpl
add
mov
jl
aam
in
jno
inc
clc
inc
sub
inc
js
fadds
adc
bound
sarb
out
sbb
and
xchg
mov
mov
decb
pop
das
aaa
les
fdivrl
push
cmovns
lret
dec
shll
movsl
cmp
sbb
inc
popa
in
and
adc
push
dec
cmc
inc
lods
add
pop
enter
outsl
rolb
mov
test
cmp
jne
repz
gs
popf
mov
cmp
dec
test
inc
mov
rcrb
lds
loopne
dec
and
mov
out
insl
inc
fidivs
adc
orb
pop
lcall
scas
insb
subb
jmp
loope
or
pop
mov
pop
mov
add
xor
pop
xor
mov
xchg
sbb
xchg
in
add
and
out
lret
nop
fwait
dec
inc
lcall
or
and
or
and
inc
aam
in
imul
daa
inc
xor
jo
insl
leave
and
out
pushf
pop
push
jno
lcall
pop
lcall
mov
insb
xchg
jbe,pn
xchg
iret
pop
inc
int3
cmpsb
dec
and
pop
not
and
sbb
xchg
imul
add
test
pop
jbe
pusha
es
insb
mov
imul
and
cmp
gs
xor
jge
and
sbb
pop
cmp
in
subl
mov
jl
test
inc
call
rorl
cwtl
dec
lds
cmp
test
cmc
mov
cmp
inc
dec
xchg
add
pushf
pop
xchg
fsts
push
sub
jmp
hlt
daa
les
mov
jae
pop
xchg
adc
add
imul
inc
xorb
addr16
int
adc
aam
pop
inc
push
lahf
sbb
sbb
sub
or
aaa
push
xlat
lods
dec
dec
jbe
push
icebp
mov
fisubrl
pop
mov
rcll
or
test
outsl
std
adc
into
jge
pop
dec
andl
push
lcall
les
outsb
imul
lahf
leave
imul
sbb
shrb
mov
cmp
jmp
xor
pop
cmc
sbb
cltd
shrl
movl
jle
inc
jo
mov
cmc
xchg
xor
add
lea
mov
gs
arpl
lret
shll
jle
cmp
adc
or
lcall
dec
inc
push
fwait
push
push
push
fiaddl
cs
pop
push
les
divb
xchg
inc
fildll
popa
pop
loopne
jp
out
push
in
dec
test
inc
jo
sahf
daa
add
jl
outsb
pop
cld
ds
pop
hlt
mov
movsl
push
repnz
ss
ljmp
push
push
aad
dec
push
ret
std
aas
mov
push
add
pushw
or
push
dec
scas
fcmovnbe
pop
sti
in
push
sub
hlt
stos
aam
xchg
add
sbbl
loop
lret
xor
in
inc
add
cmp
out
es
in
gs
and
sub
adc
aas
xchg
shlb
push
iret
int
dec
sub
inc
xchg
mov
ja
mov
mov
pop
xor
jns
pop
add
dec
in
jo
inc
xchg
xchg
mov
inc
int3
aam
adc
mov
shll
xor
push
loopne
inc
insl
push
jge
jne
ror
sti
imul
jo
xchg
sti
dec
je
and
adc
add
in
sub
ss
pusha
rorb
iret
mov
cmp
adc
nop
xchg
push
adc
push
cmp
push
inc
jns
or
push
dec
pop
adc
jno
mov
sub
xor
xchg
xchg
fwait
ja
bts
fcmovne
sub
sahf
aam
rol
in
and
popa
push
pop
inc
xchg
sub
rol
pop
sbb
rcr
outsb
test
push
outsl
or
aaa
mov
or
push
insl
mov
mov
pop
pop
in
mov
shll
push
sti
stos
add
pop
in
aaa
cli
imul
hlt
or
jl
mov
pop
lock
and
lods
aam
inc
divb
or
jno
sbb
mov
mov
inc
loop
push
push
push
push
ja
mov
jge
hlt
test
cs
rcl
inc
sbb
add
fidivs
into
pop
jmp
push
dec
aaa
int
jmp
inc
ljmp
sub
mov
push
mov
loop
add
shll
push
jae
lcall
pop
cltd
or
pop
lret
push
pop
outsb
or
adc
arpl
lcall
dec
cmp
mov
pop
arpl
test
mov
sub
push
fs
mov
aam
inc
dec
jns
mov
jge
js
mov
ja
push
scas
dec
mov
cli
pop
ja
call
xor
popa
lods
push
xchg
xor
aam
adc
cmp
and
push
dec
push
or
adc
mov
gs
pop
fdivrs
push
das
and
push
sti
sub
andl
stc
inc
aam
adc
xchg
push
mov
and
mov
jg
sbb
xchg
pop
inc
aam
loope,pn
or
inc
jmp
jne
out
addr16
pushf
adc
lret
lock
jno
sub
mov
sub
dec
mov
jg
jnp
incb
in
mov
jo
pop
mov
or
aam
cmpsl
push
push
jecxz
clc
fisttpl
mov
xor
fisttpll
jno
mov
dec
outsb
lods
aam
pop
cmp
mov
nop
jo
out
xchg
aas
dec
cmpsl
lods
lcall
xchg
sbb
and
mov
push
aad
movsl
lods
inc
aad
mov
lret
sub
push
push
pop
push
cmp
mov
in
std
adc
cwtl
jns
push
rol
inc
shl
aas
inc
jno
gs
and
inc
call
dec
mov
jnp
lock
int3
scas
sbb
in
jo
cmpsl
test
shll
fists
mov
jmp
xchg
pop
daa
cmp
in
into
xor
cwtl
mov
outsb
mov
jo
fimuls
aaa
add
inc
push
dec
cmp
int3
aad
xor
jmp
xchg
push
rolb
cmp
outsl
push
aad
in
pushf
subl
push
inc
mov
xor
inc
adc
rol
in
scas
addr16
popa
cmpsl
pop
cwtl
jno
arpl
push
dec
or
frndint
sti
aad
or
push
add
add
fnstenv
mov
xor
pop
adc
or
icebp
out
xchg
mov
pop
pop
out
stc
mov
into
fcomps
leave
pop
psubw
aas
orb
mov
fistpl
mov
dec
fists
sub
cmp
or
inc
scas
orb
mov
es
icebp
add
adc
out
daa
in
or
mov
xor
jmp
mov
xchg
mov
pop
lahf
mov
xor
add
mov
rorb
dec
fistl
lret
in
pop
dec
pop
aas
cli
jne
out
out
push
jle
flds
adc
sbb
mov
mov
sub
xor
test
mov
jns
push
test
fisubs
scas
cmpsb
dec
int3
aam
shlb
rcr
enterw
push
int
xor
fdivrl
cmp
stos
cs
cltd
jno
fnclex
pop
cmp
add
xchg
shl
test
repz
jo
jecxz
xor
cmp
int
mov
add
sub
jo
lahf
popf
and
xchg
add
nop
push
shl
leave
dec
mov
xchg
fadd
shl
mov
add
inc
mov
or
sub
push
repz
or
inc
pop
int3
or
add
sub
mov
std
sub
arpl
pop
xchg
xchg
enter
inc
jb
sbb
mov
mov
or
push
add
sub
mov
or
pop
mulb
daa
dec
ds
ds
add
jp
cmpsl
xchg
lahf
inc
lret
mov
aad
mov
cs
push
pop
add
rolb
gs
cmp
fsubs
fisubrl
in
xlat
mov
mov
cli
dec
insb
nop
push
push
push
sti
aad
ret
mov
jg
jne
inc
mov
pop
push
xchg
add
sbb
cmp
mov
arpl
sub
std
daa
dec
and
or
add
jnp
shl
push
mov
leave
aad
lods
mov
add
rcr
aas
dec
mov
shrl
ds
outsb
test
add
pop
filds
decb
fldenv
push
pop
cli
mov
rorb
inc
push
cmp
dec
xor
adc
inc
mov
lahf
or
push
sar
jg
mov
cmp
mov
inc
into
or
pusha
inc
pop
push
inc
inc
subl
lds
dec
pop
or
in
push
and
mov
dec
dec
add
jecxz
mov
int3
jne
dec
or
cmp
sbb
hlt
int3
rol
mov
xchg
mov
arpl
fnsave
pop
push
addl
cld
clc
push
outsl
cmpsl
jno
outsl
or
sub
add
fisttpll
mov
out
push
sub
dec
outsb
pop
sbb
push
xchg
push
lods
sbb
fcmovnb
adc
or
inc
in
jo
call
push
sbb
out
inc
inc
push
xchg
dec
es
decl
lds
add
scas
sub
push
imul
inc
ret
push
inc
cmp
cmp
stos
addl
mov
xor
xchg
mov
cli
sbb
adc
pop
mov
negb
cli
outsb
scas
pop
fwait
xor
mov
aas
and
inc
dec
in
cmp
pop
dec
cmp
push
xor
fs
jne
mov
aam
lods
icebp
jg
xchg
inc
in
inc
fadd
mov
or
pop
push
fwait
or
jp
pusha
adc
or
dec
ficompl
xchg
stc
mov
lea
clc
aas
fwait
loope
mov
cmc
aas
xor
shrl
addl
shll
pop
xchg
into
repz
xor
sub
adc
loop
subb
into
cli
and
pop
data16
cwtl
pop
lret
inc
inc
hlt
lcall
cmp
adc
jo
test
xor
dec
mov
hlt
mov
jbe
or
lret
ds
insl
test
bound
jb
cld
push
test
lea
mov
xor
pop
xor
aam
ss
mov
jb
pop
cli
faddl
rolb
xchg
push
imul
stos
lods
lds
in
fwait
mov
cmpsb
aam
leave
outsb
fs
int
add
imul
push
dec
bound
jb
jno
data16
roll
sub
out
push
pop
fistps
push
mov
sbb
adc
add
jl
xor
in
cltd
sbb
dec
out
rolb
in
push
dec
pop
and
mov
xor
jg
dec
mov
je
xchg
sbb
cltd
pushf
test
xor
insb
add
ret
icebp
xor
stos
scas
out
jp
cmpsl
inc
and
push
sub
xor
out
push
add
jge
insl
addr16
insl
lods
xchg
pop
shr
fwait
clc
cmp
or
mov
jno
xchg
setl
sbbl
mov
adc
inc
jle
in
and
push
arpl
nop
xchg
pop
sub
gs
aam
fistpl
ret
leave
pusha
adc
das
dec
test
mov
mov
add
rorb
aas
loop
mov
cmp
pop
mov
jecxz
sbb
cmpsl
loope
add
ja
jns
sub
adc
sub
xor
inc
xchg
test
pop
mov
jno
pop
ret
movsb
sub
adc
inc
js
jne
pop
les
inc
add
test
lahf
int
push
sub
xor
lock
sar
rcll
imul
mov
adc
loopne
sub
nop
jo
fs
in
xchg
clc
and
fldt
xchg
into
enter
inc
xlat
jb
adc
sbb
cmc
cmp
sti
xor
aaa
push
inc
cmp
fpatan
test
ja
adc
dec
sbb
mov
add
leave
xchg
ret
inc
inc
push
test
push
dec
lock
ja
xor
lea
setno
aad
es
pop
xor
adc
add
fildl
pop
or
xchg
push
sub
fucomp
popa
aad
inc
and
test
imul
lods
adc
mov
btr
lea
jne
pusha
sbb
cmp
popf
push
xchg
push
pop
sbb
lds
aaa
push
mov
jo
inc
dec
hlt
push
ljmp
sub
sbb
adc
dec
movsb
popa
iret
cmp
cmp
xchg
or
dec
xor
sbb
int3
pushl
mov
cmp
insl
or
xor
sbb
movsl
cmpsl
mov
pusha
sbb
sbb
decb
jl
mov
ljmp
mov
inc
ret
loopne
dec
push
xor
jmp
push
jnp
pop
xchg
aam
iret
sbb
xor
and
mov
jg
inc
push
mov
dec
stos
sbb
test
or
outsb
pusha
dec
xor
add
xchg
in
jno
call
loope
push
adc
setne
call
repz
adcl
ljmp
rcll
das
inc
divb
push
fdivp
jle
pop
push
insl
lock
imul
dec
clc
lcall
mov
pop
iret
pop
xor
or
test
adc
dec
into
lock
sarb
push
enter
shl
xlat
fdivl
das
sub
repz
repnz
adc
imul
ret
or
rorb
addr16
shlb
mov
push
sti
es
addb
sbb
lods
aad
cli
push
aad
dec
jae
cmp
and
jecxz
xchg
roll
inc
int3
xchg
push
ror
dec
leave
lret
aaa
stos
cmp
lret
jp
pop
dec
iret
leave
push
mov
dec
push
loopne
das
push
or
push
sarb
mov
outsl
or
daa
cmp
icebp
mul
xchg
dec
jo
jns
push
sbbb
dec
xchg
in
mov
out
shlb
dec
fwait
out
lods
jno
jo
dec
cmp
rcrb
push
inc
nop
push
rclb
sbb
xchg
dec
pop
inc
push
dec
jne
sbb
add
js
arpl
push
inc
loopne
rclb
outsb
shlb
clc
stc
sbb
rcll
pusha
jbe
dec
mov
dec
xor
sbb
push
lock
cmp
cmp
mov
xchg
div
sub
and
inc
sub
movsl
adc
mov
test
inc
shll
mov
dec
mov
popf
inc
sbb
cs
push
cmp
fsubrl
loopne
push
add
fisttpll
inc
mov
xor
fldenv
cli
dec
dec
call
lock
out
jno
insl
xor
xor
xchg
icebp
cmp
repnz
mov
mov
cmp
xor
jno
inc
dec
lea
stc
call
inc
lods
leave
clc
inc
adc
xor
xor
loope
cmp
fs
aas
movups
inc
repz
pop
cmp
xor
pop
aaa
push
inc
enter
xchg
sub
loopne
inc
and
rcrb
loop
cmp
hlt
lds
cmp
and
or
rcrl
out
test
or
ds
fidivs
dec
call
ret
pop
movsb
inc
adc
rcll
cmp
adc
sbb
repz
rclb
add
cwtl
push
cmc
loopne
mov
rol
inc
sbb
repz
pop
sub
sub
xor
push
inc
inc
push
aas
push
mov
adc
enter
sbb
push
mov
cmp
push
adc
shrb
adc
and
inc
stc
rorb
loop
inc
add
and
dec
hlt
push
dec
jae
push
mov
data16
pop
cmp
mov
adc
push
inc
xor
add
sbb
push
incl
inc
or
fdivs
das
cmp
stos
in
mov
ret
xor
sbb
jbe
testb
shrb
inc
addr16
pop
jno
mov
test
adc
sbb
xor
scas
jns
push
lcall
add
sbb
dec
dec
dec
scas
out
stos
cmc
sbb
cmp
lods
dec
sub
inc
jae
cmp
push
push
shl
jo
leave
dec
sub
test
push
push
or
inc
lcall
xor
mov
push
add
inc
cmp
fisubrl
fnstsw
mov
xchg
cmp
push
into
jecxz
push
data16
sbb
lcall
lock
jecxz,pn
cmpsb
sbb
jnp
mov
pop
inc
nop
rcll
add
adc
push
fadds
mov
lcall
ret
adc
popl
pop
iret
loope
pop
stos
in
adc
cld
leave
scas
mov
jmp
mov
fcoms
mov
sti
add
cmp
jno
data16
movq
pop
lret
or
inc
inc
sti
push
addr16
cmp
das
pop
dec
inc
push
xlat
mov
or
sbb
push
cmp
cmp
push
adc
inc
or
sbb
add
inc
std
popa
pop
and
cmc
xchg
sub
mov
fs
jmp
mov
xchg
shll
adc
cmc
mov
inc
aad
addr16
mov
jb
adc
jge
into
xor
dec
or
push
push
imul
dec
and
cmp
jmp
sub
rcrb
lea
and
or
sub
js
mov
clc
js
push
dec
pushf
cmpsb
dec
dec
testb
out
mov
pop
jbe
aam
sbb
push
call
dec
jnp
idivl
pop
fs
outsb
scas
dec
or
mov
dec
sub
cmpl
adcl
insb
xor
mov
inc
adc
mov
inc
add
xchg
shrb
pop
imul
inc
adc
fsubrl
test
iret
aaa
dec
inc
push
inc
mov
insl
add
jmp
out
pop
test
sar
bound
inc
cld
std
movb
in
cmp
jmp
push
rorl
push
dec
jno
std
xor
out
jb
inc
push
mov
lods
es
cmc
call
xor
mov
xor
cli
pop
scas
mov
dec
test
icebp
cmp
call
pop
fwait
out
push
int3
sbb
inc
mov
dec
mov
push
repz
push
mov
roll
pop
in
daa
lcall
cwtl
push
icebp
popa
sbb
xchg
mov
pop
push
lock
mov
push
icebp
cmp
vunpcklpd
ret
xchg
add
cmp
stc
push
xor
or
cmovg
lea
cltd
push
dec
mov
adc
dec
xchg
sub
rcl
repnz
leave
xchg
dec
jb
mov
xor
inc
xchg
mov
inc
or
sbb
icebp
ret
mov
cwtl
jg
xchg
insl
pop
jno
cmp
cmpsb
sub
insl
dec
jle
scas
or
sub
or
push
aam
in
xor
inc
push
sbb
push
into
push
rcrb
sbb
lea
cmp
jne
mov
fisttpll
repnz
negb
or
pop
xor
fcompl
rcr
fmuls
xchg
xor
negl
add
cmc
xor
push
outsb
imul
shll
xchg
cli
fdivs
scas
repz
in
pop
adc
push
pop
aam
sbb
jno
das
sbb
shrl
jo
daa
mov
push
add
out
ret
ljmp
cmp
outsl
je
add
iret
xor
add
jno
stos
dec
fsubr
out
sub
or
sub
test
xlat
stc
filds
sub
push
int3
xor
mov
mov
pop
push
pop
outsb
sahf
into
cwtl
sahf
pop
movsb
imul
hlt
dec
int
mov
loope
xchg
inc
or
jno
xchg
inc
push
iret
lret
out
cmp
add
bound
shr
push
mov
jae
sbb
pop
shr
dec
pop
cld
shl
sub
dec
test
jp
das
push
add
inc
jle
repz
dec
dec
les
lcall
sub
dec
inc
fdivs
fcmovbe
andl
xor
dec
inc
cwtl
fdivs
pop
pop
ds
mov
pop
pop
rcll
inc
dec
cmp
dec
mov
inc
pop
bound
dec
adc
adc
cmp
int3
dec
cmp
cmp
adc
aaa
dec
call
dec
xor
dec
mov
dec
aaa
pop
adc
xor
fimull
into
xchg
into
push
adc
js
cwtl
roll
mov
xchg
stc
decb
cld
sti
push
rclb
push
cli
mov
jecxz
jp
pop
lods
pop
xor
push
pop
repnz
stos
cmp
pop
jecxz
out
cmpsb
sub
mov
xchg
lods
jge
clc
imul
fwait
ljmp
cmc
add
pop
or
xor
dec
gs
movsl
pop
push
xor
mov
icebp
xchg
sub
popa
jne
andb
add
add
xor
fsubl
shrl
ret
sub
jmp
arpl
mov
adc
or
icebp
push
pop
jecxz
or
fcomp
jne
mov
and
jg
push
mov
fldenv
pop
filds
inc
pushf
lret
lcall
mov
aad
mov
scas
push
sbb
dec
movsb
add
nop
sbb
pop
pop
xchg
fnstcw
arpl
in
and
sbb
dec
fdivl
dec
dec
or
bound
push
push
aam
int
jno
subl
inc
xor
ds
cli
sti
aaa
nop
lret
test
lret
mov
mov
test
dec
cmp
std
adc
sub
shlb
or
cmp
jno
lods
jecxz
cmp
sbb
lahf
fwait
inc
xor
adc
inc
xor
cli
cmc
xor
sub
add
mov
mov
in
icebp
es
adc
add
sar
mov
push
into
adc
dec
add
lret
mov
mov
and
popf
jmp
int3
mov
shll
clc
jno
xchg
sub
mov
ja
lea
pop
mov
pop
and
js
and
inc
add
sbb
sub
pop
sbb
imul
sub
ret
push
add
xchg
pop
shl
fld
dec
and
push
jecxz
xchg
cld
in
outsl
pop
jne
or
outsb
sub
fistpl
pop
push
scas
jns
adc
hlt
inc
pop
nop
fucomip
add
pop
dec
cmpsl
outsb
lea
out
sub
pop
movsl
rorb
sub
sub
push
notl
and
add
rorl
rclb
sarb
adc
test
bound
adc
sub
xor
mov
inc
pop
rcll
lret
xor
repz
into
cld
pop
int3
jle
cmp
xchg
popf
push
aad
sbb
in
pop
and
jmp
cmpl
outsb
call
rolb
pusha
mov
adc
cmp
clc
cmp
sti
adc
push
sbb
stos
dec
outsl
xor
imul
pop
push
mov
cmp
push
xchg
pmaxub
int3
jecxz
scas
inc
adc
mov
shlb
push
clc
jno
pop
roll
sbb
rcrl
cmp
repnz
data16
stc
rorl
add
inc
rclb
jb
rcr
je
enter
aaa
adc
pop
cmp
data16
cli
nop
xchg
pop
call
mov
imul
aaa
or
jbe
icebp
cmp
sbb
dec
push
jmp
xchg
imull
imul
sahf
cmc
loop
insl
sub
push
xchg
inc
push
push
test
xor
fdivrl
xor
pop
movsb
ljmp
sbb
and
aaa
clc
xor
ss
leave
dec
sar
jne
aaa
add
iret
lock
fnstcw
cmp
fmuls
xor
mov
and
lahf
loope
enter
and
int3
mov
add
cmc
int
lods
sub
lock
jno
mov
add
test
inc
sahf
adc
ss
push
dec
lahf
jb
popl
dec
or
and
xor
sbb
push
xchg
outsb
imul
or
xor
inc
test
sbb
push
cmpsl
adc
test
inc
adc
mul
fimull
into
or
inc
fs
mov
xchg
in
adc
adc
or
mov
or
ljmp
push
xchg
arpl
aaa
inc
sub
mov
aad
stos
movsb
daa
fnsave
inc
adc
inc
inc
adc
adc
in
dec
xor
push
pop
cli
cmp
push
mov
pop
and
enter
push
pop
insb
movsb
xor
push
pop
inc
mov
movsl
stos
adc
add
jle
outsl
in
xchg
cmp
call
sub
test
mov
xor
or
sbb
stc
imul
and
mov
jg
test
add
adc
cmp
sti
imul
lods
aas
imul
sub
adc
xor
xor
jae
push
iret
push
sti
fs
jns
aaa
xchg
mov
jge
sti
adc
jns
sti
imul
push
push
fadds
adc
push
dec
xchg
stc
mov
mov
or
sbb
push
dec
popa
sti
mov
mov
mov
mov
mov
popf
xor
pop
lret
mov
test
popa
std
dec
sbb
adc
mov
mov
fisubrl
pop
subb
xor
pop
jnp
repz
mov
addl
xchg
fmuls
pop
es
mov
subb
int
mov
and
lahf
push
adc
sahf
xlat
iret
mov
sub
mov
aad
in
in
or
fmuls
or
rclb
addr16
xchg
sbb
jo
mov
pop
cs
sub
sbb
push
pop
adc
cld
jb
xor
ss
hlt
inc
jp
push
sbb
test
add
push
sub
mov
pop
add
cmp
xchg
inc
jecxz
xor
imul
jp
jne
inc
out
jno
adcb
cli
movb
mov
dec
lret
mov
push
testl
shrb
test
lods
xor
inc
mov
in
sbb
repz
fbstp
mov
addb
rorb
add
mov
cmp
xor
sbb
dec
push
rorl
test
ss
dec
cs
or
mov
into
add
mov
test
push
mov
mov
out
xchg
lea
popf
test
into
popa
xchg
pop
push
scas
in
out
push
adc
gs
roll
lock
popa
cmp
cld
cmp
scas
outsb
movsb
or
nop
dec
sub
fbstp
mov
and
lret
addr16
in
jne
popa
inc
dec
jecxz
dec
sub
cwtl
loop
in
xor
sub
sub
or
add
and
mov
js
data16
jnp
xchg
outsb
sbb
add
bound
jle
aaa
ffreep
cltd
or
push
cmc
adc
cld
inc
stos
fcomp
fs
roll
sahf
mov
sbb
mov
repz
notl
lcall
add
int3
adc
adc
stos
push
fisubs
neg
dec
cmp
push
cmp
dec
pop
push
sahf
ret
or
cmp
lock
push
dec
adc
jge
mov
jo
cli
cmc
adc
mov
out
xor
cmc
dec
pop
add
es
adc
adc
sarb
cwtl
push
dec
cmc
pop
adc
push
dec
rcll
cmp
js
push
insl
aaa
sub
fnstenv
sub
pop
inc
insl
call
jns
sbb
and
stc
pop
cld
pop
subb
sti
fcmovnu
nop
or
aam
pusha
mov
in
push
pop
xor
ret
sbb
repnz
pop
add
fisttpll
dec
sbb
xor
or
add
icebp
jp
pop
addl
xchg
pop
mov
cltd
or
jbe
bound
adc
xchg
jne
sbb
or
adc
in
xor
pop
cmpl
and
test
mov
mull
inc
sbb
insl
and
sub
sub
fisttps
lods
jle
orl
test
add
fidivl
mov
es
das
sbb
stc
test
pop
push
pop
insl
and
cli
hlt
std
dec
popa
bound
xchg
outsb
and
les
out
dec
nop
lock
jne
add
xchg
mov
ja
mov
mov
in
ret
jl
lahf
jge
dec
addr16
sti
outsb
dec
push
test
xor
cmp
add
fstl
push
push
rcl
sbb
jnp
cmp
in
xchg
in
add
call
not
jne
roll
xor
push
out
push
lahf
mov
dec
dec
in
push
push
inc
mov
inc
dec
ret
dec
or
sbb
ret
fstps
sbb
push
pop
aaa
inc
fst
dec
add
or
sub
xor
jb
fimull
push
xor
gs
or
jns
and
or
pop
sub
pushf
and
call
pop
movsl
sub
mov
aas
push
in
fcomps
imul
imul
xchg
enter
push
jae
xchg
xor
jne
aas
icebp
and
pop
fstps
imul
xchg
mov
dec
jmp
sarb
mov
fcoml
push
or
pop
xor
out
lods
jmp
push
call
push
insl
lcall
lea
scas
dec
clc
sbb
lea
cmp
jl
ja
xor
xchg
xchg
push
and
sub
enter
mov
sub
and
xor
rclb
push
cmp
bound
dec
outsb
js
insb
push
push
jo
jl
dec
inc
add
nop
add
mov
nop
aaa
push
xchg
scas
enter
gs
lea
push
ret
mov
hlt
dec
cmc
ljmp
sub
sbb
xchg
into
sub
mov
xchg
or
or
pop
sub
popf
sub
dec
sbb
mov
insl
xor
iret
loop
sub
cmp
inc
decb
sub
mov
das
push
mov
enter
sub
mov
pop
dec
popf
std
jb
add
pop
js
mov
xor
vpaddq
imul
push
orb
or
mov
mov
dec
mov
mov
push
pop
sbb
sbb
push
add
stos
int
cmp
clc
std
leave
sub
aaa
cmp
rclb
cmc
bound
push
fmul
jge
sbb
and
lds
pop
push
or
or
aam
lods
sbb
xor
aaa
pop
inc
inc
jno
dec
fwait
adc
xlat
sub
cwtl
insl
and
stc
mov
dec
sub
jecxz
adc
rcrb
add
and
sbb
sbb
sub
sbb
cltd
nop
xchg
jae
or
test
or
stos
add
xor
icebp
jns
mov
dec
jge
xchg
add
sbb
int
popa
sarb
cmpsb
aaa
imul
pop
push
ret
gs
mov
dec
push
shll
mov
into
sti
decb
sbb
xor
enter
add
mov
inc
ret
loopne
add
sub
popf
inc
fdivl
leave
jmp
push
popa
jmp
jns
out
jae
js
mov
mov
hlt
cmp
push
jecxz
ja
testb
test
cmp
push
in
insb
jne
jbe
inc
mov
xor
jg
push
gs
lret
push
scas
in
imul
push
push
fisttps
xor
std
cmp
cli
mov
loopne
in
pusha
pusha
push
cmp
test
xchg
pop
ficoms
outsl
shl
dec
dec
dec
add
pop
loopne
popa
xchg
bound
inc
jnp
dec
cmc
hlt
or
in
pop
repz
and
rcrb
mov
mov
or
sbb
call
dec
push
popf
cli
pop
sti
bound
fstl
push
insl
push
popa
es
orl
lea
push
hlt
mov
loopne
incl
jge
or
shl
push
mov
int3
int3
popf
hlt
fistl
xchg
pusha
jb
flds
enter
add
and
sahf
push
rcl
sub
mov
or
sbb
xor
std
or
jns
ret
outsb
out
aas
xlat
xor
dec
cmpb
jne
popl
sub
outsl
imull
mov
test
xchg
pop
pop
mov
inc
add
mov
push
dec
addr16
addr16
data16
sub
jmp
sub
jns
and
mov
aad
movsl
or
out
cmp
out
or
dec
cmpsl
inc
or
leave
xchg
dec
sub
cmpsl
push
in
pop
les
movl
push
inc
inc
dec
in
in
lahf
into
push
or
push
cmp
test
inc
lret
in
imul
daa
mov
in
xchg
and
mov
sub
jmp
mov
mov
xchg
sbb
mov
inc
mov
scas
cs
shlb
popa
sub
sbb
jne,pn
xor
mov
add
jno
push
pop
and
mov
cmpsb
dec
push
pop
fmul
sbb
or
decb
imul
push
pusha
push
pop
rcr
rorl
push
push
cwtl
push
jb
cmp
je
and
and
dec
fdivl
add
add
gs
scas
cs
stos
xchg
pop
or
jno
mov
inc
fisubs
xchg
lcall
lock
inc
xor
daa
inc
push
xor
xchg
push
sub
jns
dec
xor
ljmp
cmp
divb
jo
mov
jbe
into
fldenv
mov
popf
pop
movsb
hlt
pop
jne
push
inc
add
mov
ja
inc
les
leave
xor
imul
mov
imul
ljmp
outsb
lret
push
int3
rolb
pop
dec
rorl
push
outsb
dec
outsl
push
add
test
jmp
or
lods
aaa
imul
dec
popa
mov
into
cmp
shrl
arpl
mov
push
mov
out
pushl
pop
scas
mov
push
cli
inc
jle
and
xchg
adc
or
outsb
jnp
repz
insb
fdivrp
xor
iret
or
inc
pop
fdivs
cmc
pop
xchg
subl
mov
cmc
dec
fwait
dec
popf
aaa
sub
push
sbb
mov
dec
or
dec
push
xor
jb
mov
and
leave
sbb
popa
xor
adc
fildl
xchg
cmc
daa
inc
and
inc
sti
inc
lcall
fildl
or
mov
inc
dec
sbb
pop
jmp
sahf
dec
popa
inc
or
push
ja
jle
mov
fstpl
cld
sub
push
outsl
frndint
jbe
push
mov
and
orl
pop
fmul
mov
ds
xchg
add
cld
inc
push
in
push
xor
adcb
mov
rcll
lods
adc
jle
test
jns
sub
dec
cmp
enter
testb
loope
sbb
outsl
movsl
pop
push
xchg
sub
pop
inc
fwait
test
xor
inc
jno
xchg
stos
sub
icebp
jmp
aas
into
xor
push
js
jb
push
test
cmp
pop
outsl
aaa
or
cltd
roll
or
repz
dec
cmp
iret
roll
shll
and
push
lcall
pop
pop
mov
mov
dec
loop
xchg
push
inc
clc
adc
jb
jge
aad
int3
add
xor
xchg
jo
imul
daa
inc
out
test
inc
mov
and
jno
movsl
sbb
sbb
in
inc
int3
sti
fs
imul
pop
inc
in
into
push
into
dec
fcoml
jmp
pop
dec
push
push
sbb
imul
fdivrl
leave
mov
rclb
mov
xor
cmp
fcmovu
addr16
xlat
dec
scas
sbb
rolb
loopne
cmp
jp
sbb
lds
jle
and
xchg
cld
inc
sub
imul
test
pushf
push
cmp
or
outsl
push
push
dec
add
and
out
mov
mov
cmp
outsb
push
nop
fcoml
mov
in
in
xor
std
xor
aaa
pop
push
lea
add
std
add
imul
in
lock
faddl
addr16
ds
dec
sub
sub
test
or
adc
dec
aam
fadd
adc
daa
jecxz
push
inc
in
jno
add
xchg
test
mov
adc
pop
sbb
cmc
inc
push
dec
dec
dec
fldcw
je
cmp
into
or
jb
and
xor
adc
ficomps
sti
lods
arpl
cmp
adc
test
pop
lahf
jno
scas
cld
in
adc
loope
into
inc
adc
push
in
ds
or
pop
jbe
repz
adc
or
pop
arpl
dec
popf
pop
push
into
adc
sub
adc
hlt
or
enter
or
jecxz
bound
dec
push
iret
inc
aad
cmp
fcoms
xor
xor
inc
mov
mov
and
add
aaa
xchg
or
xchg
icebp
xchg
xlat
rcrl
icebp
rcll
cmp
idivl
xchg
in
inc
jns
lcall
push
sahf
call
test
sbb
lcall
or
movb
pop
adc
pop
inc
add
push
or
popa
adc
jno
sub
inc
ror
fiaddl
loop
inc
roll
adc
dec
xorl
push
lds
dec
or
fildll
aas
xor
push
js
and
aad
in
xchg
fmull
ror
shrb
xchg
scas
or
inc
mov
push
ja
cmpsb
imul
and
popf
xor
shl
mov
push
dec
int
iret
stos
mov
gs
cld
dec
mov
push
or
jae
push
insl
push
icebp
int
incl
jmp
cld
in
clc
mov
push
dec
aaa
xor
pop
in
pop
mov
pop
or
and
push
aam
out
iret
add
ss
push
iret
jb
mov
adc
xchg
sbb
stos
addr16
movsl
pop
repnz
pop
daa
xor
mov
pushl
inc
loop
out
mov
rclb
orl
in
sbb
mov
jno
push
sti
pop
mov
and
loopne
lds
push
mov
insb
in
push
popf
in
in
mov
fcom
xchg
pushl
jb
pop
and
sbb
enter
ss
mov
les
popf
xor
inc
mov
or
in
clc
repnz
xor
les
pop
repnz
add
cmp
fidivs
insl
dec
add
xor
pop
jl
pop
xchg
add
xor
push
pop
xchg
jb
roll
std
mov
sub
popf
mov
clc
adc
push
xor
lret
fdivr
mov
fimuls
pop
and
pop
mov
xor
mov
jnp
testl
push
rorb
xchg
dec
mov
divl
push
mov
add
jns
imul
cmp
mov
inc
aam
sbb
push
mov
into
xchg
and
sbbb
cltd
add
fs
outsb
mov
bound
and
arpl
lahf
inc
add
pop
test
mov
inc
mov
xchg
ret
repz
mov
mov
cmp
adc
outsb
mov
imul
xor
push
xor
das
jmp
cmp
adc
push
inc
js
xor
ss
hlt
mov
mov
outsb
test
and
sbb
add
pop
fs
call
pop
push
cwtl
jo
mov
xor
repz
in
dec
mov
add
cwtl
cmp
lods
cs
pusha
jp
stc
sahf
add
inc
cltd
scas
nop
mov
mov
out
mov
scas
dec
and
jbe,pt
push
mov
add
insl
jg
xor
xor
dec
add
dec
and
test
addr16
lea
mov
and
js
mov
and
lock
inc
out
adcl
lcall
mov
icebp
imul
push
movsl
push
imul
and
sub
hlt
dec
dec
mov
mov
fcmovnbe
testl
mov
add
lcall
push
int3
adc
ja
stos
nop
or
mov
sbb
js
out
push
dec
mov
add
xchg
jmp
scas
xor
rcll
fisubrl
clc
outsl
repz
je
jmp
jg
lods
iret
mov
pop
mov
das
sti
mov
es
test
leave
sbb
popf
das
movsl
lcall
cltd
pop
lcall
pop
daa
xorb
push
imul
in
xchg
push
sar
dec
lods
jae
out
mov
sarl
dec
sbb
repz
sbb
fisttpl
aas
sbb
mov
imul
and
std
insl
xor
sbb
dec
das
data16
loop
adc
cltd
push
std
out
cmp
jne
adc
adc
add
lahf
mov
fsts
xchg
push
das
inc
adc
mov
and
sbb
pop
lea
sbb
clc
inc
ftst
rcll
sub
jmp
pop
jecxz
sub
mov
fiadds
loop
fmuls
pop
xchg
mov
xor
or
out
push
or
leave
adc
add
xchg
pop
adc
lods
cli
mov
mov
add
jno
lds
lahf
inc
add
inc
shrb
jo
mov
mov
bound
outsb
xorl
das
or
jbe
jecxz
fsubr
mov
xchg
jae
out
scas
cmp
std
xchg
adc
pop
sbb
pop
mov
out
dec
movsb
insl
jb
xor
stc
fstpt
mov
adcl
inc
adc
scas
cmp
sarl
push
adc
jns
xchg
sarb
lret
inc
push
fimull
rcr
push
jbe
sahf
cli
or
scas
and
push
stc
jge
mov
cmp
je
bsf
repz
fdivrl
xchg
fisubs
xlat
inc
arpl
push
adc
inc
sbb
xchg
jo
xchg
jae
add
mov
push
inc
inc
jecxz
push
aas
lock
notb
stos
xchg
jo
sti
pushf
add
negl
sahf
loop
mov
dec
push
push
push
sub
xchg
sub
xchg
cmp
mov
pop
outsb
xchg
add
js
xchg
sbb
sbb
xchg
ret
ds
cmp
loope
movsb
cmpsb
cmp
dec
std
and
jnp
dec
outsb
inc
sub
dec
adc
xor
mov
cmp
arpl
cmpsb
aas
stc
push
cmpsb
dec
add
ficoms
dec
aaa
fstl
mov
add
insl
jmp
xchg
sub
pop
fcompl
inc
iret
popa
pop
or
xor
outsb
pushw
jo
push
dec
push
in
das
mov
and
jmp
outsb
ja
mov
xor
jl
call
xor
lea
xchg
mov
adc
push
xor
add
xor
shll
in
inc
pop
jmp
jp
sbb
dec
mov
and
push
adc
and
cli
daa
ret
jg
arpl
xchg
outsl
jbe
push
movsl
sub
push
cld
in
add
and
loopne
pop
pop
pop
mov
pop
popa
jge
loopne
icebp
adc
loope
cwtl
xor
lds
mov
cltd
stos
jl
add
sarl
aad
xor
pop
into
push
jne
fists
rcll
pusha
sub
rcll
inc
and
popf
lahf
sbb
push
sub
int
sbbb
test
int
push
test
psllw
adc
adc
lds
stos
mov
bound
mov
leave
push
mov
mov
lods
scas
rcll
test
cmc
push
std
mov
dec
loope
xchg
push
pop
dec
mov
xchg
adc
leave
in
imul
repnz
test
mov
data16
rolb
aam
stos
rorl
fildll
add
pop
sbb
xor
cmp
or
pop
sbb
mov
stos
add
jmp
jno
mov
outsb
push
mov
xchg
add
rcrb
add
xor
icebp
jne
mov
fstpl
rorb
xchg
shrb
sub
int3
mov
outsl
loop
stc
push
dec
ljmp
jno
inc
and
shl
cmp
inc
dec
repz
inc
jp
and
scas
cmc
mov
jae
subb
mov
cmp
adc
add
in
loope
fcoms
pushl
push
or
jecxz
sahf
mov
dec
push
in
push
xor
out
cwtl
sti
jg
dec
push
dec
insl
pop
add
fwait
mov
rcrl
imul
outsb
jnp
aam
icebp
jns
sbb
jno
push
xchg
or
pop
call
lahf
loope
stc
cltd
mov
pop
dec
push
push
sbb
ljmp
mov
or
aas
icebp
xchg
enter
push
lahf
jg
cli
pop
inc
jge
cmpl
pop
or
js
iret
push
test
or
pop
and
push
cmp
pop
xchg
pop
and
in
xor
ret
movsl
adc
dec
adc
inc
xor
fcomi
in
push
push
loope
add
ret
fstl
push
lahf
repz
or
fisttpll
fs
rolb
dec
scas
xor
sub
outsb
cmpb
cs
adc
subb
cld
pop
outsl
popf
arpl
imul
sti
lods
push
cwtl
sub
push
ljmp
inc
stos
iret
cmc
cli
pop
loopne
lret
in
pop
fsubrl
cmc
jle
dec
push
sub
pusha
cmp
int3
aam
cmp
cltd
dec
dec
mov
pop
lret
adc
push
dec
add
xor
daa
pop
clc
sahf
addr16
int3
add
sarb
test
in
and
repz
sbb
out
movsb
loope
into
cmpb
lds
imul
add
cld
pusha
popa
dec
jne
or
dec
pop
stos
mov
rolb
pop
test
push
mov
hlt
nop
push
add
shll
inc
add
lods
push
push
aad
mov
into
fnstcw
xchg
mov
mov
jp
fwait
jl
lret
dec
loope
out
inc
jg
out
sbb
dec
add
movsb
loope
arpl
cld
lret
inc
frstor
mov
icebp
jae
cmp
loopne
sbb
or
mov
inc
int3
enter
out
dec
cmp
inc
push
repz
push
icebp
inc
lds
xchg
arpl
mov
add
test
pop
int3
shlb
adc
fwait
mov
fsts
dec
push
inc
xchg
fldl
fnstsw
or
and
lahf
adc
ja
mov
repnz
pop
pop
cmp
ds
dec
sahf
cmp
inc
xlat
inc
push
xlat
out
or
inc
mov
mov
inc
pop
xor
add
rcl
addr16
cmc
push
mov
xor
sbbl
add
cmp
arpl
pop
xor
cmp
popf
dec
dec
jle
insb
cmp
cli
aad
xchg
cs
xchg
repz
pop
dec
in
cwtl
in
jne
mov
push
push
out
push
outsb
inc
icebp
aaa
faddl
sahf
push
mov
pop
cli
imul
jmp
adc
cmovb
xor
dec
xchg
leave
icebp
or
lret
lea
jno
pop
sbb
xor
add
loop
aaa
pop
push
cmpsl
xchg
or
jmp
dec
ss
push
lahf
xchg
pop
insb
xor
jns
or
xchg
mov
lock
divb
shrb
mov
push
push
lds
pop
or
xchg
push
aad
adc
xorl
push
repz
mov
or
push
aas
mov
adc
jo
repz
ss
jae
xchg
push
dec
rol
dec
jo
adcb
mov
push
popa
pop
and
xor
insb
jmp
test
push
dec
repnz
loop
xchg
fstps
push
rolb
in
scas
sarl
or
es
push
xchg
xor
xchg
xchg
push
adc
cmc
xlat
rcrl
push
addr16
pop
cwtl
js
aam
adc
fucomi
xchg
loop
fs
mov
pop
pop
movsb
outsb
cmp
push
in
dec
sbb
stc
cmp
dec
insb
stc
adc
outsb
aas
jo
sub
cli
unpckhps
or
out
pop
pop
clc
jae
and
bound
es
dec
mov
rcll
cmp
pop
push
in
orb
test
aaa
push
fiaddl
iret
sub
lods
sti
push
mov
adc
inc
sub
int
jno
add
mov
jecxz
pop
cli
pop
repz
xchg
dec
lds
in
pop
test
mov
push
sti
test
mov
mov
xor
dec
cmp
inc
mov
fwait
call
push
andl
hlt
dec
fistpll
cmp
pusha
inc
dec
xchg
mov
ds
leave
int3
push
push
lea
ficoms
cmp
mov
in
add
mov
int3
or
test
adc
mul
dec
jl
mov
sub
jl
fwait
ror
into
and
push
push
xor
mov
sub
icebp
adcl
fcmovnu
ret
and
scas
fadds
mov
sbb
aad
mov
push
into
fxam
inc
fimull
in
mov
addr16
out
rcrl
cmp
mov
outsb
inc
ja
push
fwait
adc
in
into
mov
pop
pop
xor
adc
jp
inc
sub
pop
fucomip
dec
in
cwtl
jno
dec
loope
xor
add
bound
pop
and
push
ljmp
xchg
cmp
out
test
push
mov
fistpll
ljmp
outsb
xchg
daa
pop
fcmove
push
push
inc
pop
xor
aaa
aam
xlat
aad
push
inc
push
xor
into
xor
cmc
ret
inc
fcomps
sahf
cmp
mov
cwtl
addb
dec
addr16
adc
cmp
xchg
and
or
push
das
pop
and
jmp
mov
mov
out
nop
sahf
push
sti
fsubl
and
push
jp
addr16
pop
fnstenv
jmp
ja
imul
push
push
sbb
pop
inc
fildll
cmc
xor
pusha
stos
mov
add
dec
je
dec
lcall
adc
dec
push
in
jns
fcompp
or
jno
es
pusha
and
adc
pop
in
mov
lods
cwtl
scas
cltd
cltd
push
push
push
into
sbb
pop
in
cmp
push
icebp
fcom
xchg
mov
adc
stos
inc
lods
out
xchg
rorb
stos
out
mov
fsubs
xchg
cmp
pop
ljmp
stos
div
sbb
push
mov
and
jmp
cmp
arpl
insl
shrl
and
call
addl
push
repz
dec
sbb
adc
andb
adc
push
fnsave
inc
sbb
jno
in
inc
lds
aaa
cmp
or
adc
and
les
ficompl
pushf
mov
pop
pop
sub
inc
sbb
cld
pop
mov
push
push
mov
addb
std
ss
out
dec
or
arpl
add
into
dec
xor
sti
mov
pop
pushl
sti
cli
dec
repnz
mov
mov
cmc
add
test
mov
pop
in
jo
rclb
mov
lds
mov
sbb
sub
inc
jge
cmc
jecxz
ds
int3
gs
inc
movsb
mov
mov
shlb
xor
sbb
xchg
adc
push
aaa
adc
sbb
out
loopne
loopne
stc
sub
cwtl
ret
adc
scas
sub
adc
cmp
push
cs
ss
push
shll
xor
mov
or
jno
pop
sbb
push
fimull
loopne
cmp
int3
call
and
xor
and
pop
cmpsl
add
ret
adc
sbb
add
cmp
shll
xchg
fsubrs
cmp
pop
cmpsl
xor
inc
add
inc
dec
shlb
aad
xchg
xlat
mov
inc
add
mov
icebp
cmp
incl
lret
js
pop
add
and
stos
outsl
fs
cmpsl
sbb
mov
xchg
adc
push
cmp
pop
inc
push
stos
jb
icebp
cld
dec
or
xchg
jecxz
or
es
mov
push
or
dec
mov
jg
sub
and
xor
js
in
testb
movsl
loop
inc
mov
mov
inc
ftst
rorb
push
fs
or
pop
dec
cmp
test
dec
aam
pop
inc
cli
push
sbb
jno
pop
sbb
xchg
mov
dec
mov
js
or
mov
out
mov
cmp
jb
dec
subb
shl
or
pop
or
or
xor
dec
adc
je
sub
push
or
pop
pop
mov
incb
sbb
lret
or
mov
icebp
adc
xor
scas
and
stc
or
out
sahf
cvtdq2ps
scas
popa
sbb
sub
mov
bound
out
testl
data16
enter
dec
mov
or
mov
das
aad
in
scas
insl
or
in
push
jb
push
ret
jmp
jmp
mov
pop
or
jns
imul
out
mov
mov
sub
leave
xor
aas
decb
mov
outsb
inc
xor
push
jno
mov
cmpsl
cltd
aas
in
in
xchg
dec
andb
in
push
add
mov
fnsave
pop
adc
mov
and
dec
aad
imull
incl
push
bt
pop
xor
fwait
inc
test
mov
imul
adc
add
cmp
out
pop
pop
mov
and
rcll
dec
sub
xor
push
shlb
lods
push
and
sarb
push
cmpsb
leave
stc
adc
nop
add
push
or
inc
cmp
addr16
shll
xchg
rolb
cli
mov
push
loop
popa
add
into
pop
mov
popf
jae
push
pop
jle
lea
cltd
cmp
xchg
or
pop
ret
int3
xchg
sbb
fwait
and
sbb
dec
jae
sub
and
inc
add
nop
lock
cli
push
push
mov
lods
jmp
insl
lcall
add
inc
out
sub
sarl
jl
rclb
push
pop
aaa
xor
dec
fnstenv
inc
faddl
inc
push
push
push
push
add
or
pop
fnstcw
in
cmp
inc
jno
addb
sarl
loop
data16
xchg
inc
scas
xchg
gs
pop
jg
cmp
out
cmp
mov
push
lock
adc
shrl
outsb
les
outsl
clc
sub
push
fmul
jbe
mov
adc
xchg
push
nop
popa
ss
xchg
fisttpll
ror
xor
xlat
cmc
cmp
dec
pop
mov
xor
in
movl
xchg
mov
sbb
pusha
and
pop
add
dec
icebp
jmp
push
add
pushf
dec
sti
imul
mov
lret
ja
aad
mov
int
das
mov
xor
sarb
mov
nop
xor
ljmp
shlb
inc
fwait
data16
lds
jno
lods
subps
add
adc
pushf
push
xor
xor
lods
ds
mov
lret
pop
inc
and
push
ljmp
cld
and
shll
inc
imul
jmp
gs
sub
mov
sub
and
fnstsw
xor
dec
pushf
jno
add
cmp
lret
or
adc
adc
dec
imul
inc
movb
lds
pop
xchg
inc
in
and
and
cmovge
shl
pop
mov
cli
fldenv
pusha
cmp
pop
jecxz
push
sbb
fisttpl
dec
push
notb
push
or
inc
lcall
pop
mov
xchg
xchg
in
pop
loop
cli
inc
iret
xchg
leave
enter
loope
push
add
arpl
int
sbb
adc
dec
shr
push
pop
stc
jae
xchg
inc
pop
push
fisttps
lret
outsb
ja
int
inc
in
push
push
shrl
fs
mov
xchg
inc
adc
xor
stos
cwtl
int3
in
xor
adc
cmp
cli
xor
adc
fisttpll
cwtl
or
jl
aaa
fcomps
mov
sarl
outsl
and
or
cmpsb
push
jecxz
in
mov
add
push
cmpsl
rorb
push
fldt
out
push
cli
stc
cmp
or
adc
xchg
pushf
jecxz
inc
xchg
popl
push
dec
testb
ds
mov
cmp
fldl
jmp
adc
sub
fsubrs
inc
mov
subb
mov
add
xchg
dec
into
imul
test
cmp
test
repnz
call
jno
lret
push
ror
cmc
pop
mov
inc
fstpt
push
nop
stos
dec
mov
das
push
test
cmp
in
inc
push
pop
add
rcr
dec
loope
or
inc
cmp
imull
cltd
sbb
push
jo
leave
mov
das
jno
bound
push
sbb
fs
or
or
jmp
xchg
adc
outsb
jg
inc
std
jb
nop
mov
jl
addl
xor
inc
add
push
or
lcall
les
insl
lea
or
mov
icebp
xchg
int3
mov
sub
fs
add
rcr
xor
xor
andl
frstor
xor
sub
dec
xlat
dec
mov
xlat
push
popa
fsubl
pop
jecxz
loope
in
lock
arpl
push
mov
sub
xor
xor
int
xor
loopne
xor
out
jl
cmp
inc
ljmp
sar
frstor
dec
cmp
xlat
jb
push
inc
push
or
sub
bound
shll
push
and
and
add
jecxz
pop
pop
sub
adc
iret
inc
xor
hlt
pop
data16
and
outsl
add
add
test
addr16
add
mov
cmp
fdivs
xor
jg
xchg
inc
gs
sub
xor
scas
cmp
test
adc
out
dec
push
dec
icebp
mov
inc
rcll
ret
jmp
inc
imul
shlb
out
xchg
adc
das
xchg
add
push
add
mov
lret
fcmovnbe
mov
mov
sbb
data16
in
push
out
ja
cli
mov
mov
cmp
cmp
xchg
mov
push
popf
dec
stos
mov
push
adc
push
pop
push
arpl
aad
pop
cmpsl
shrb
sbb
mov
jl
mov
pop
xchg
int3
and
or
addb
out
sub
loope
cltd
sub
or
push
rcr
inc
cli
or
sbb
xorps
lock
push
sbb
jecxz
pop
pop
addb
sahf
fildll
pushf
adc
dec
cmp
dec
push
xchg
stc
mov
cli
lock
push
mov
cmp
pop
pop
roll
in
mov
jecxz
mov
shlb
outsb
enter
sbb
sub
or
in
adc
fwait
cmpsb
dec
push
cmp
inc
insl
jo
cld
dec
or
cmp
dec
bsf
roll
inc
pop
lcall
stos
fisttpl
or
pop
shlb
cmp
jb
sub
sar
inc
inc
flds
scas
mov
xor
cmp
cmp
leave
inc
popf
popf
xchg
jg
xor
gs
cmp
repnz
in
icebp
frstor
popf
push
add
daa
mov
push
sbb
das
stos
in
outsb
popa
sub
xor
push
and
push
ss
out
mov
cmp
inc
int3
mov
push
push
or
xor
or
xchg
jae
lahf
or
movsl
xor
push
into
xchg
les
ja
pop
int3
and
insl
mov
push
and
imul
mov
jno
xchg
push
repz
add
icebp
jmp
adc
scas
cmp
aaa
cli
jmp
mov
sub
pop
or
popa
sub
adc
popa
shlb
or
dec
add
xor
jo
mov
pop
int3
rcrb
mov
or
xchg
sbb
push
sub
rcl
push
add
sbbb
push
mov
jns
and
pop
xchg
xchg
fildl
inc
repnz
dec
xor
xchg
sti
pop
stc
out
push
xchg
bound
inc
outsb
movsb
imul
xlat
and
mov
sarl
or
bound
ljmp
sbb
addr16
lods
outsb
mull
adc
inc
fnstsw
repz
dec
dec
lret
insl
xor
cmp
icebp
dec
sti
dec
jae,pn
xor
rep
mov
fadds
mov
fiaddl
shlb
les
xor
jo
cmpsb
dec
xor
cmpl
jne
int3
sti
mov
dec
jno
inc
jl
movsl
movsl
stos
pop
in
fistpl
xchg
cli
dec
bound
xchg
and
insl
nop
xchg
cmp
push
orl
popa
jno
pop
or
dec
push
aas
jo
inc
scas
inc
insl
push
std
adc
mov
xlat
test
add
in
pushf
jge
dec
in
jmp
jno
int3
jecxz
mov
fbstp
popl
xchg
test
stos
int
decl
les
in
push
es
lahf
add
jo
fdivrl
cmp
out
and
hlt
mov
and
cli
xchg
jbe
fbld
negb
es
mov
insl
push
mov
xor
rcl
into
mov
mov
shll
in
in
jne
dec
gs
movsb
gs
movsl
ja
aad
sti
fildl
jno
stos
ficoml
cmp
mov
mov
leave
ret
inc
outsb
mov
adc
test
mov
sub
aam
jo
xor
inc
lret
out
sbb
adc
gs
jl
push
repnz
and
ja
inc
adc
push
ja
sbb
pop
sub
push
lods
out
ret
inc
jae
mov
inc
popa
in
xchg
fstl
sti
fnstsw
sbb
or
nop
ljmp
sbb
sbb
dec
push
movsb
mov
cmp
repz
xor
mov
jle
cwtl
pop
fildl
mov
dec
pop
aaa
movsb
pop
shll
xor
sti
aad
stos
inc
fdivrs
pop
out
stos
xchg
outsl
mov
or
xchg
push
inc
mov
jbe
cmp
push
in
pop
or
aad
jge
xchg
add
push
fstpt
mov
daa
push
lds
loopne
push
jecxz
or
jae
adc
loopne
push
or
lds
xor
xchg
sub
cmp
inc
and
mov
sbb
test
arpl
add
into
mov
xchg
dec
pop
xor
pop
push
mov
xchg
jae
or
int
mov
mov
jmp
imul
or
sti
imul
xchg
and
loop
adc
jno
pop
pop
stos
fmuls
stos
xchg
push
dec
scas
sbb
hlt
push
scas
lods
out
sub
jne
xchg
sahf
out
dec
cli
leave
inc
arpl
or
movsl
jecxz
popa
mov
sarb
add
xchg
test
int
inc
sahf
xchg
jl
mov
cmp
or
cmc
xchg
pop
sbb
icebp
dec
mov
loopne
cmp
shrl
stc
jno
inc
sbb
push
int
jns
dec
pop
dec
inc
jg
adc
lcall
xor
xchg
or
sub
xor
in
adc
push
scas
sub
xchg
cwtl
jbe
out
xor
dec
ss
push
xchg
shrl
push
xchg
jae
ret
or
jno
xchg
sub
je
stos
or
pushf
frstor
pushf
js
jae
xchg
popa
leave
pop
push
xchg
enter
and
dec
push
aad
je
mov
je
cmp
outsb
lods
into
adc
out
xor
imul
sub
or
dec
stos
adc
sar
sahf
js
aam
dec
in
adc
xor
or
imul
daa
cmp
cmp
or
in
adc
push
out
jne
cmp
int
xorl
rcll
sub
jecxz
push
dec
dec
js
mov
outsl
movzbl
jle
aad
repz
ja
inc
in
mov
sbb
ljmp
sbb
dec
lahf
orl
fnstsw
subb
call
cmp
jo
jge
ret
lcall
cmpl
repz
sbb
adc
mov
sbb
pop
pop
std
dec
add
dec
ljmp
mov
jl
mov
xor
lds
push
out
cmp
les
xchg
cld
dec
outsb
mov
push
jns
jno
mov
imul
jnp
outsl
ja
fdivrp
fisttpl
loop
jne
decb
xchg
ljmp
push
shlb
ja
add
inc
xchg
test
pop
adc
test
pushf
adc
decb
jae
pop
and
cli
inc
sub
xor
outsb
ret
lahf
sub
fwait
inc
pop
imul
xchg
pop
add
outsb
xchg
jno
dec
xor
clc
outsl
push
xlat
inc
cli
arpl
xchg
dec
mov
cwtl
xchg
sti
cld
xchg
sub
jnp
mov
int
cwtl
cmp
in
jmp
push
inc
or
jle
sub
pop
sti
std
adc
adc
mov
cmp
pop
out
shlb
mov
negl
mov
pop
and
xchg
cli
bound
and
push
fimull
xlat
clc
sbbl
adcb
in
in
sbb
sub
fnsave
mov
add
pop
pop
in
xor
push
out
aas
mul
jge
push
dec
mov
pop
jmp
mov
push
rorb
popf
iret
shrl
decb
inc
dec
ret
inc
dec
push
dec
lret
jl
push
out
mov
mov
rdpmc
lcall
adc
je
add
aaa
cmp
inc
dec
push
vhaddps
or
bound
outsl
pop
cmc
dec
test
dec
bound
xor
pop
fst
mov
push
pop
sti
leave
cmp
pop
add
jno
fldl
add
rclb
aam
push
sbb
hlt
int
stos
cmp
adcl
sar
mov
jl
fildl
push
imull
lcall
mov
push
add
cs
aad
jbe
insb
mov
gs
imul
adc
jno
cmp
repz
ret
cmp
jg
aaa
stos
mov
notl
xor
pusha
les
pushf
push
add
vshufps
ret
jno
pop
mov
mov
mov
xlat
pop
inc
cmc
sbb
inc
enter
sbb
xor
dec
lea
mov
mov
rclb
inc
into
sub
and
add
xchg
dec
sbb
xor
hlt
adc
push
xchg
or
mov
iret
mov
rcr
subl
jp
xor
xchg
or
mov
hlt
add
dec
inc
leave
push
xchg
test
stos
cmp
add
sub
push
jbe
fdivrl
push
jno
icebp
mov
xchg
movsl
inc
xchg
xor
adc
mov
mov
mov
mov
adc
jns
jne
jno
insl
mov
cmpsl
int
cmp
xchg
inc
inc
scas
mov
movsb
or
roll
jecxz
imul
add
sbb
pop
dec
fldl
or
call
clc
fs
hlt
mov
loope
dec
push
repz
mov
inc
pop
stc
inc
cmp
mov
paddq
push
mov
aam
into
sbb
or
es
jae
or
xchg
dec
inc
or
int
push
arpl
or
loop
xor
pop
in
ljmp
jp
es
popf
movsb
jmp
out
push
enter
pop
dec
aad
or
cmp
mov
inc
add
sub
test
xchg
pop
xor
ret
in
mov
punpckhwd
pop
cmc
inc
enter
das
inc
mov
sub
in
filds
push
xchg
and
fstps
inc
nop
ja
cmp
push
hlt
jecxz
das
jno
cmpsl
popf
addr16
aad
aaa
fcmovne
sub
mov
xor
cmp
push
push
pop
in
popa
xlat
add
subps
call
inc
mov
or
jp
in
out
mov
or
jno
push
add
mov
out
push
pop
loopne
cwtl
and
mov
and
outsb
push
fstp
addl
jbe
xor
scas
movsb
xchg
sbb
mov
fwait
js
mov
inc
jbe
sbbl
aas
cmp
dec
add
cmp
inc
out
push
mov
into
sti
subb
dec
or
lock
sbbl
mov
sbb
add
test
movsl
jo
mov
mov
cmp
nop
add
fiaddl
jnp
std
pop
jo
fidivrs
push
cld
cld
decb
inc
inc
fabs
add
cwtl
lcall
cld
push
pushf
rcrb
shrl
fnstsw
aad
cmp
ss
sub
inc
sub
and
jge
popf
lret
pushf
nop
jne
pushf
xchg
leave
cmpsl
or
rcl
ss
dec
jne
outsl
pushf
xchg
mov
popf
cmp
pop
xchg
add
push
xchg
xchg
aaa
dec
je
cs
or
sbb
aaa
in
push
mov
jmp
daa
add
repz
mov
inc
jle
and
adc
mov
push
pmaddwd
xor
or
push
cmp
or
xor
stos
imull
adc
popa
mov
push
mov
mov
cmp
adc
push
push
dec
fcoms
enter
jns
or
shlb
mov
in
andl
addb
cld
and
or
into
sbb
repz
jecxz
inc
adc
movsl
daa
pop
mov
rcll
ret
clc
dec
int
pop
clc
loope
cmp
xchg
int3
or
or
enter
aaa
aas
cmp
dec
mov
xchg
rcll
loopne
aas
inc
int3
sbb
aaa
stc
mov
pusha
rcll
inc
in
sbb
cmc
inc
dec
push
fcomps
cltd
xor
and
lods
roll
addr16
mov
or
sub
cwtl
pushf
cwtl
jno
cmp
shr
add
mov
adc
cmp
lds
in
and
fstl
stc
pop
into
jecxz
xor
pop
in
cli
push
xor
sub
mov
or
sub
dec
pushw
or
jnp
push
cmp
and
imul
pop
fadds
xchg
xchg
cwtl
push
jno
add
pushf
out
and
adc
push
mov
inc
rcrb
insb
xlat
popa
int3
sahf
adc
and
mov
mov
push
outsb
aad
jae
in
mov
push
setle
lahf
dec
fnstenv
cmpsl
pop
xor
xor
xor
mov
iret
clc
sbb
jnp
inc
jge
mov
movb
ds
popa
repz
bound
mov
jb
xchg
cmp
xlat
adc
sub
pop
mov
movl
push
shlb
data16
mov
imul
popf
mov
leave
push
gs
adc
xchg
xor
and
pusha
pop
int3
cmp
push
dec
xchg
divl
outsl
pop
push
iret
xchg
fidivrs
dec
dec
dec
sub
mov
lret
sub
dec
inc
aad
or
popa
pop
inc
dec
dec
and
je
pop
dec
fidivrl
adc
pop
sbb
sbb
test
int3
dec
xchg
aam
sub
xchg
addb
scas
xor
repnz
add
iret
push
aas
in
xchg
jno
fcomp
jno
cld
imul
aad
inc
push
outsb
jne
outsl
cld
or
or
push
rep
ja
push
aam
dec
pop
mov
mov
cmp
shl
pop
jp
xor
pop
lcall
push
mov
add
jnp
pushf
lahf
mov
les
push
inc
cli
dec
lds
divl
xor
jle
xchg
sub
cld
pop
repz
sub
dec
in
and
pop
pop
cmc
xor
xor
mov
ss
mov
mov
daa
ret
push
xchg
jmp
insl
scas
dec
nop
ds
mov
in
aad
pop
and
xchg
xchg
cmp
add
add
add
sbb
dec
jo
pop
shrb
jnp
lock
mov
cltd
ror
xlat
ret
push
std
out
repz
fchs
or
inc
jo
std
cmp
imul
push
or
test
out
rorl
into
fidivs
xchg
popaw
push
xor
out
cld
imul
movsl
pop
ret
mov
sbb
icebp
pusha
pop
adc
pop
rolb
movsb
leave
push
int
aad
in
jl
pop
ds
jns
cmc
arpl
inc
sqrtps
cmpb
cli
int3
negb
xchg
mov
dec
faddl
roll
lcall
mov
in
rorb
loop
inc
push
or
inc
mov
test
jl
leave
pop
lahf
test
jl
imull
jg
push
and
xor
pop
imul
cli
adc
mov
icebp
loope
xor
xor
insl
aas
push
push
mov
and
bound
call
push
jecxz
cmp
mov
xor
rorb
inc
xor
nop
int3
xor
sbb
jle
loope
call
test
push
or
mov
xor
mov
out
jecxz
push
and
jecxz
xorl
or
cmp
bound
nop
push
faddl
or
out
test
dec
loop
mov
cmp
push
mov
lret
test
iret
in
add
fiadds
scas
ja
xchg
push
inc
push
and
ror
enter
in
aad
push
mov
ds
lods
lds
pop
rclb
inc
in
cmc
aas
jmp
pushf
in
mov
add
push
lahf
inc
dec
add
adc
mov
fmul
mov
adc
repnz
inc
add
lods
icebp
and
jnp
lea
jbe
mov
fistps
rcr
adc
sahf
xlat
test
sti
dec
sub
shll
stc
leave
into
inc
imul
stos
rorl
mov
aaa
sbb
and
pushf
jle
xor
mov
mov
push
jo
xor
mov
dec
aad
rclb
pop
addl
mov
outsb
lods
mov
mov
xchg
jmp
mov
sbb
dec
xor
or
cwtl
mov
movsl
push
xchg
pop
inc
xchg
and
or
inc
fwait
push
mov
cmp
in
nop
adc
jnp
outsl
or
jecxz
jo
jne
mov
fsub
push
jno
xlat
fildl
jp
jbe
xchg
int3
inc
imul
push
inc
lods
dec
push
std
mov
xor
loopne
adc
lods
xor
call
xor
lds
push
out
insb
js
push
pop
in
adc
cmp
fs
outsl
in
ret
ljmp
lahf
nop
xor
push
push
out
sub
or
xchg
rclb
inc
or
sbb
js
out
cmp
xorb
add
dec
mov
push
push
sbb
sbb
cwtl
shrl
inc
xor
adc
xchg
pop
push
or
push
test
xchg
jbe,pn
loope
subl
cwtl
test
jno
and
movsl
jmp
mov
les
shll
sbb
pusha
add
xchg
xchg
arpl
and
pop
inc
inc
xchg
mov
or
mov
in
push
or
push
pop
push
sbbl
pop
iret
aam
mov
jns
push
dec
inc
int3
pop
dec
sub
cwtl
ljmp
stos
in
outsl
nop
repnz
repz
or
xor
push
add
jae
data16
pop
sub
and
mov
ss
test
cmp
or
cs
das
pop
push
dec
adc
cs
bound
inc
cmp
fdivs
mov
or
idivl
push
push
dec
ja
inc
push
dec
lcall
arpl
mov
add
sub
add
add
out
push
push
pop
stos
mov
mulb
bound
mov
aaa
imul
test
jge
sub
test
sub
std
lock
add
xor
inc
js
out
stos
pop
loop
fdivrl
in
mov
pop
jns
jmp
in
cmp
lahf
mov
cmp
jecxz
and
jbe
shlb
xor
xlat
and
rep
inc
shll
data16
push
mov
push
adc
mov
shlb
pop
les
int3
pop
xchg
cs
push
bound
sub
push
mov
push
into
xchg
outsb
xchg
or
je
xlat
shl
rcr
sbb
pop
int3
cmp
int3
push
scas
lcall
mov
push
xchg
imul
mov
sub
fsubs
inc
pop
mov
lret
pusha
inc
inc
gs
popa
mov
xchg
inc
push
into
jno
xchg
nop
leave
add
pop
inc
lock
rcll
dec
pop
pop
cwtl
js
or
pop
sahf
out
cmp
outsl
negb
mov
iret
aas
dec
and
in
add
int3
fwait
mov
jno
fsub
rorl
imul
ret
mov
aas
dec
cmp
stc
mov
icebp
push
les
mov
add
data16
sbb
pop
cmp
and
adc
xchg
in
sub
test
pop
hlt
lea
iret
fnsave
xor
add
xchg
jno
int
inc
cmp
pop
mov
inc
push
stos
lret
or
pushf
loopw
jno
pop
inc
outsb
jno
xchg
mov
mov
out
or
loopne
or
or
xor
repz
push
sahf
push
jno
roll
mov
xchg
pushf
sub
lret
xor
sub
leave
inc
mov
rcl
movsl
sbb
sub
xchg
cld
xchg
cmp
fsubp
inc
cmpsb
pop
loop
std
mov
push
push
sub
cmc
mov
jbe
cmp
icebp
inc
xor
sbb
pmaddwd
js
dec
add
pop
xor
add
out
or
iret
in
push
stc
pop
in
std
cmpsl
mov
dec
xchg
outsb
stos
sub
dec
int3
je
dec
mov
daa
ficoms
cmpsl
cltd
inc
aas
sarb
adc
pop
lea
dec
xor
xchg
push
cmpsl
pop
pop
sarl
xor
ljmp
jp
adc
ficompl
gs
popf
or
pop
les
gs
jmp
inc
add
pop
sbb
push
into
sbb
sub
push
jmp
hlt
xchg
add
cmp
push
cltd
ss
dec
outsl
ja
xchg
subb
cmc
fcoms
inc
shlb
bound
xor
je
cmc
cmp
lea
adc
mov
mov
jmp
inc
or
sub
push
push
xchg
xor
xor
repz
enter
fst
ret
test
mov
fistps
or
aas
lods
ss
insb
cmp
fstpl
movsb
push
xchg
or
out
fcmovbe
mov
mov
cmp
aaa
enter
xor
jbe
pop
sub
and
xchg
dec
or
pop
lret
lidtl
push
push
push
adc
adcb
orb
add
xor
xchg
and
pop
sub
imul
adc
sbb
or
or
stos
sbb
sub
jge
mov
sub
jno
ret
fstpl
or
mov
add
mov
sbb
repnz
or
popa
sbb
cltd
test
jg
inc
pop
dec
cwtl
cmc
sub
out
shrl
fsubl
icebp
jns
xor
aad
test
mov
daa
inc
sub
imul
inc
loop
mov
enter
cwtl
pop
push
mov
sarl
std
sbb
cwtl
add
scas
rorb
int3
sub
xor
push
inc
insl
ja
out
push
pop
lods
jb
and
mov
or
pop
aad
stos
mov
pop
cld
xchg
add
add
repz
pop
xchg
fwait
dec
mov
mov
lds
pop
stos
adc
push
fsubs
shrb
test
dec
addr16
fldt
fadd
add
cmp
mov
push
dec
adc
inc
adc
pop
pop
jnp
mov
and
into
outsb
or
mov
ficoml
leave
shll
or
pop
ret
push
fmull
xor
jne
mov
pusha
shlb
pop
cmp
jno
in
xlat
xor
jbe
cli
inc
push
adcl
adc
bound
add
fstps
arpl
mov
xchg
fxam
dec
arpl
jle
xchg
popa
add
xor
jmp
dec
sub
jle
in
pop
sub
add
add
sbb
add
and
aaa
mov
mov
lret
pop
daa
xor
leave
lods
fidivl
sub
jmp
sub
dec
dec
sub
adc
outsl
and
adc
outsl
loop
fidivrl
arpl
adc
movsb
push
in
pop
out
cmp
testl
lret
aas
scas
sub
sbb
das
xor
shrb
sub
dec
push
sbb
fisubl
in
inc
imul
mov
cmp
pop
pop
adc
and
leave
push
lods
pop
mov
icebp
adc
cltd
std
mov
and
or
pop
bound
fwait
mov
xor
inc
lcall
adc
testl
lahf
push
fwait
mov
aam
xor
sub
hlt
xor
ja
inc
mov
leave
outsl
xlat
adc
and
rol
jge
adc
aaa
mov
scas
adc
push
shlb
inc
and
cld
insl
push
fstp
out
mov
sbb
push
xchg
pop
xor
sub
int
and
or
push
sahf
jp
jne
push
cmpb
je
dec
int3
loope
sub
push
jecxz
cmp
dec
mov
sbb
shll
jno
cmp
loopne
and
sub
sar
stc
mov
rcl
sbb
jae
lds
in
bound
xchg
push
sub
push
std
push
adc
ljmp
dec
mov
jo
loope
mov
rorb
jp
sahf
insl
and
pop
in
gs
mov
mov
addr16
arpl
stc
fdivrs
mov
data16
adc
shrl
jno
cmp
stos
inc
testl
inc
arpl
test
or
cmp
xchg
dec
lsl
cmp
mov
sub
int
rorb
fiadds
stos
cmp
int3
or
scas
sbb
cli
js
sbb
inc
outsb
lods
repz
hlt
aad
loop
sub
or
fisttpl
aam
lahf
sbb
cmp
rclb
push
adc
fbld
xor
loopne
lahf
lods
adc
bound
cmp
jns
pop
push
dec
jecxz
aaa
test
sbb
mov
enter
fsubrs
or
and
xor
pop
mov
push
jo
add
sbb
mov
xchg
sub
add
pusha
sar
mov
pop
cmp
cwtl
jno
movsb
jns
dec
or
bnd
jbe
adc
icebp
xor
hlt
sub
pop
mov
hlt
xor
mov
xchg
test
sahf
sti
pop
mov
inc
dec
mov
out
xchg
test
ds
arpl
outsl
ss
or
push
or
stos
mov
loop
or
sbb
jno
mov
call
jnp
int3
push
dec
pop
lret
jno
in
pop
aam
imul
xor
lret
ret
rcrb
add
leave
mov
or
shl
movsl
push
loope
test
push
mov
and
mov
sub
adc
shrl
ja
ds
call
add
pop
add
in
mov
stc
xor
cwtl
icebp
push
push
dec
mov
push
push
aaa
cmp
add
sbb
cmp
and
std
or
push
xor
xor
push
out
mov
mov
push
sbb
xor
cs
push
dec
es
ss
jne
adc
pop
int
daa
mov
push
pop
push
jbe
in
arpl
cwtl
inc
jns
sub
and
push
push
add
loopne
mov
jge
jo
or
iret
loop
adc
push
inc
cli
aaa
push
fiaddl
stc
test
add
sarb
pop
mov
arpl
sarl
in
repz
mov
xor
adc
and
int
adc
popa
fmuls
adc
flds
fcomps
hlt
xchg
sbb
add
std
in
out
sarl
dec
add
mov
add
and
inc
and
pop
mov
cmp
and
inc
mov
stc
cmp
jns
xor
push
call
push
cmp
loope
add
jmp
or
leave
jno
testl
rol
sub
add
outsb
jo
xchg
inc
adc
adc
adc
inc
and
pop
sub
jae
mull
pop
mov
and
lahf
jno
dec
push
cmp
iret
fsubr
imul
sbb
cli
push
out
push
pop
mov
and
or
sbb
mov
je
imul
je
out
adc
inc
cmc
mov
xchg
psrld
subb
jo
adc
mov
int
dec
aad
clc
cli
sub
sub
add
inc
push
sub
cmp
ret
cmp
dec
pop
mov
add
pop
mov
insb
push
jp
in
jp
xchg
dec
out
push
test
mov
test
stc
in
dec
adc
popf
push
fndisi(8087
lock
sub
and
nop
or
sub
push
sbb
xchg
out
jno
mov
lcall
inc
outsl
movsb
gs
mov
pop
mov
push
push
push
pop
dec
sar
mov
jnp
mov
pop
das
push
inc
idivb
mov
inc
aad
das
inc
adc
int
lods
arpl
dec
xor
ret
or
sbb
stos
cmp
cmp
push
push
sbb
push
push
or
mov
nop
mov
xchg
or
ror
adc
cmc
ds
inc
push
cmp
ret
adc
xchg
push
int
lcall
fnstcw
xchg
in
and
dec
and
mov
sarl
jae
push
addl
push
into
movsl
fmulp
mov
push
pop
in
subb
adc
push
inc
mov
pop
push
imul
inc
dec
mov
dec
lcall
stos
cmp
push
pop
inc
aad
ret
jbe
jbe
in
add
xchg
cltd
js
outsb
and
jnp
cmpsl
mov
repz
inc
xchg
and
xor
jo
add
push
cmovae
imul
iret
scas
cmp
cmp
cmp
fisubrs
sub
jge
push
mov
loop
scas
jb
xor
adc
inc
fcoml
loop
pop
xlat
imul
rol
pop
or
push
daa
decl
fs
les
movsl
pushf
fwait
sbb
in
lcall
mov
outsb
insb
mov
adc
push
push
inc
subl
gs
cmc
jns
push
ret
xor
aas
sarl
cmc
xor
add
into
stc
adc
test
xchg
int
lea
mov
lods
ljmp
arpl
push
push
in
dec
pop
cmp
adc
fdivs
movl
add
clc
adc
or
into
scas
cmc
jg
push
movsl
mov
adc
es
adc
inc
ljmp
ds
add
mov
jbe
fstps
in
dec
mov
in
jmp
out
cs
ss
aaa
sti
inc
jb
cli
aad
outsl
insl
sbb
popf
cwtl
adc
loope
inc
rclb
jnp
push
sbb
jl
call
xlat
cmp
mov
insl
mov
popa
pop
nop
scas
jae
paddq
pop
outsb
mov
ss
cmp
cwtl
je
cmp
xor
cmp
push
cs
call
movsb
pop
sbbb
outsb
mov
pop
fs
xchg
outsb
out
dec
mov
shlb
cltd
mov
into
and
and
sbb
dec
inc
and
push
lahf
inc
in
xor
or
in
rcll
aam
sti
addr16
pop
jno
arpl
mov
push
add
mov
xor
aam
xchg
inc
or
aam
xor
fnsave
mull
mov
sti
cmp
xchg
pop
dec
imul
pop
or
call
les
xor
sub
test
xor
inc
aad
outsl
sub
mov
jno
jmp
adc
lcall
sub
cmc
or
aad
mov
adc
repz
rorl
out
sub
bsf
inc
inc
jno
add
lret
test
aam
pop
adc
adc
adc
push
xchg
adc
push
xor
ficoml
insl
jno
gs
cmp
out
out
push
push
js
sbb
sub
jo
or
aad
popa
push
or
or
pop
pop
ss
or
sahf
aad
jno
xchg
xchg
sbb
sub
or
adc
cmp
aam
dec
addr16
mov
push
lds
rclb
xchg
mov
mov
inc
jo
mov
or
jl
test
push
sahf
into
lret
fldt
adc
push
in
or
add
out
popa
js
jl
xchg
dec
cmc
lds
dec
repz
xchg
xor
mull
dec
fcoml
jp
lds
aam
jb
mov
xor
jo
jbe
push
int3
pusha
push
mov
pop
jmp
lods
add
test
mov
in
mov
or
cwtl
jno
outsb
adc
jecxz
or
sti
xor
mov
xor
xchg
loope
mov
pop
out
jns
test
ret
iret
push
idiv
int3
adc
sbb
imul
push
xlat
rcr
add
add
mov
mov
repnz
push
imul
push
xor
mov
sub
fisubl
pop
xor
mov
dec
cmp
pop
sarb
out
dec
add
data16
int
jecxz
shlb
hlt
aad
or
sub
mov
aad
and
add
add
mov
sbb
push
outsl
shlb
cltd
xor
fsubl
cld
mov
dec
inc
rolb
fists
inc
adc
cmpsl
adc
sub
cwtl
ds
lock
sbb
and
fldcw
loopne
and
push
outsb
ja
inc
aaa
enter
lcall
or
dec
outsb
push
lds
ldmxcsr
inc
aas
add
out
lock
sbb
xor
dec
mov
popf
int3
aam
add
mov
push
or
xchg
jle
dec
push
sbb
mov
xchg
xchg
ror
setg
and
ss
inc
push
into
dec
add
pop
push
nop
mov
lret
sub
adc
cld
jnp
jns
cltd
cmp
mov
pushf
test
mov
insl
push
mov
dec
sub
clc
mov
push
push
add
loopne
cmp
or
out
cmp
jnp
das
lods
or
loope
inc
dec
sbb
shlb
fs
add
mov
xor
adc
ficomps
iret
mov
cs
cmp
out
aam
repz
xchg
sbb
flds
dec
or
mov
stc
insl
inc
jne
loop
outsb
sbb
inc
xor
push
inc
lret
mov
lahf
inc
add
arpl
mov
sub
insl
aad
xchg
inc
jo
or
ss
push
iret
arpl
jge
inc
add
inc
in
inc
leave
xchg
pop
push
push
push
bound
shrl
fimull
push
push
shlb
xorb
jle
sub
pusha
fdivrs
std
aad
and
fisubs
push
dec
dec
and
mov
mov
add
xorl
test
fadd
lods
push
jg
shll
add
lock
xorb
inc
enter
addr16
subl
fiadds
xchg
bound
das
adc
ret
cmpsb
cmp
cmp
mov
jno
repz
or
adc
add
inc
cld
fwait
daa
fsts
sbb
pushf
insl
cmp
pushf
jp
inc
mov
dec
dec
cmp
or
loope
push
repnz
loopne
repz
aaa
mov
xchg
inc
inc
or
mov
add
lea
add
fbstp
lds
xlat
push
das
lret
int
dec
sub
sub
adc
mov
aas
push
cwtl
cmp
leave
mov
adc
inc
pop
sbb
fimull
add
pop
cmp
or
inc
or
push
ljmp
jl
stos
xchg
outsb
or
pop
and
inc
mov
ret
aad
into
cmp
or
icebp
xor
lea
or
stos
stc
cltd
popa
fdivl
std
mov
mov
fnsave
xor
outsl
push
pop
ret
xchg
fisttpl
mov
jecxz
xchg
sub
stos
cmp
and
add
stc
sbb
mov
dec
xor
jno
mov
dec
inc
lret
je
cmp
mov
dec
mov
cltd
in
or
jae
adc
enter
mov
in
dec
stc
jns
push
or
sbb
pop
in
cli
xor
mov
outsb
jmp
fstpl
ljmp
add
lods
imul
inc
add
nop
adc
das
xchg
in
or
xor
arpl
and
dec
imul
xor
push
sub
xchg
idivl
inc
cli
push
cmp
sub
call
dec
loope
xchg
push
pop
dec
xchg
aad
adc
stos
jl
mov
pop
or
inc
mov
cmc
dec
pop
jle
fldenv
or
pop
jmp
loope
push
enter
mov
outsb
xor
cmpsb
sub
push
jno
pusha
enter
pop
xchg
leave
fcomi
push
dec
fmull
gs
xor
xor
dec
fcmovnbe
ja
sub
shrd
test
add
push
cmp
into
movsl
xchg
push
jno
lcall
ret
push
inc
xchg
pop
lea
out
push
int3
outsb
push
add
je
scas
lock
add
xlat
jl
std
cmc
mov
push
aaa
mov
in
push
aas
cs
stc
dec
cld
dec
adc
cltd
sub
imul
iret
sbb
inc
xlat
imul
int3
gs
loopne
inc
cli
pusha
aam
dec
cmp
gs
or
std
jne
aad
fcmovb
jne
mov
arpl
xchg
jecxz
sub
lahf
xchg
mov
push
adc
push
add
dec
js
outsl
add
cli
cmp
adc
inc
add
out
mov
mov
imul
mov
roll
test
dec
push
sbb
or
xchg
out
in
xor
imul
adc
add
push
mov
xchg
fwait
insl
mov
sbb
and
adc
movsl
sub
and
mov
push
mov
dec
adc
adc
inc
cmp
jns
lods
push
cvtps2pd
std
xchg
sbb
xchg
xchg
cmp
into
inc
cmp
adc
ret
jmp
xchg
inc
sbb
inc
pop
test
popf
inc
aad
enter
adc
cmp
inc
inc
push
fnstenv
or
aas
insb
int
subl
sti
rolb
xchg
jns
cmp
cmp
sub
nop
pop
cmp
xlat
in
aas
sbb
xlat
sub
into
fidivs
lea
movb
xor
rolb
shrl
sbb
mov
lds
jg
or
mov
push
dec
outsb
ret
dec
inc
insl
mov
aas
inc
jns
arpl
mov
dec
dec
mov
sbb
lcallw
bound
mov
inc
cltd
je
pushf
add
or
xchg
sbb
sti
scas
sub
mov
test
push
inc
adc
aad
rolb
pushf
cli
xchg
and
lret
repnz
pop
adc
push
push
gs
or
aam
lret
sbb
jg
push
mov
stos
lods
insl
xchg
or
sub
mov
jecxz
push
adc
sbbl
fisttpl
mov
mov
scas
cmp
add
call
pop
out
cli
ss
sti
out
insl
mov
lahf
mov
pop
shll
leave
cld
mov
mov
push
outsb
int3
cmpsl
stos
adc
mov
test
incl
mov
push
cld
in
mov
or
mov
sti
stos
lods
imull
imul
pop
hlt
pop
and
or
and
dec
enter
int3
sub
pop
ficomps
repz
push
or
adc
and
xor
mov
ret
in
insl
sub
add
push
sub
xchg
or
and
jmp
pop
in
or
test
and
rorb
lar
jnp
cmc
pop
aam
pop
jmp
lcall
clc
outsl
inc
jg
push
mov
add
jb
adc
test
addr16
aad
fwait
popf
test
xorl
cmp
lret
cmpsb
dec
or
xorb
push
xchg
pushf
aas
lahf
pop
pop
mov
jb
cmp
shl
pop
sti
insb
or
bswap
or
pop
adcl
addl
pop
mov
jg
lret
arpl
sbb
xchg
inc
adc
stos
test
dec
aaa
addl
es
cwtl
popf
jmp
dec
in
xor
inc
scas
jne
xor
pop
cs
jmp
dec
inc
sbb
mov
jle
xor
out
mov
cld
xchg
repnz
dec
ret
mov
aas
fcomps
lock
sbb
xchg
dec
shl
fmuls
push
or
push
rcll
inc
push
leave
add
pop
les
fcoml
sub
repnz
mov
sti
bound
xchg
int3
dec
shll
sub
sub
stc
jo
outsb
jbe
jne
xor
cld
daa
imul
test
pop
and
repnz
push
and
lods
ja
mov
lds
dec
sbb
sbb
pop
in
lahf
sub
in
ja
inc
push
stos
jmp
filds
mov
mov
arpl
mov
in
mov
push
fstp
jge
jae
xor
push
cwtl
xchg
ficompl
or
inc
movsb
stos
xor
pop
xchg
cmp
ret
pop
xchg
push
in
fldt
movsb
cmp
push
add
xchg
fldenv
or
outsl
or
insl
test
add
push
ficoms
andl
jno
inc
or
jno
jne
std
pop
test
lahf
cmpl
jmp
pushf
xchg
sarl
mov
xor
pop
aas
testb
jno
cld
xchg
dec
pop
in
fisttpl
lcall
addb
pop
fcomps
gs
call
push
lret
cmc
push
outsb
push
inc
imul
aaa
dec
ret
cmp
rorl
cmp
cmp
push
out
inc
out
cs
dec
bound
xchg
cmpxchg
repnz
xor
rclb
filds
push
pop
xor
adc
jb
push
fcomip
ficompl
pause
cmp
pop
dec
or
inc
push
in
mov
dec
mov
sti
adc
movsb
movsb
push
iret
iret
movl
jns
push
test
test
adc
push
sub
lret
aaa
cmpsl
jp
mov
mov
shrl
testl
cmpsl
lcall
adc
xchg
xor
in
lea
arpl
inc
daa
add
push
and
es
out
gs
cld
dec
movsb
arpl
mov
insl
cmp
xor
cmp
daa
shl
dec
mov
insl
or
add
pop
cmpsl
dec
inc
mov
dec
mov
dec
dec
sbb
mov
je
imul
roll
xor
sbb
or
ja
or
xor
addb
mov
shrb
addr16
rol
out
inc
mov
pop
jo
adc
jecxz
push
shrb
and
adc
leave
ret
out
scas
inc
dec
adc
fdivr
adc
adc
inc
into
push
cmp
push
or
push
add
xchg
jbe
mov
add
and
mov
sub
and
fisttpl
leave
xlat
fildl
xor
fnstcw
call
icebp
jae
or
sub
xor
pop
scas
neg
insb
push
pop
lods
fidivl
jge
scas
push
adc
data16
fcoml
enter
push
popa
jns
push
mov
shrb
outsb
je
cld
lods
mov
movsl
cmp
sub
cmp
pop
fildl
into
outsb
add
psubd
xor
outsl
cmpsl
jl
adc
mov
cmpsl
adc
lods
sarb
or
xchg
cmpl
push
insb
inc
push
out
shll
fdivl
aaa
inc
repz
inc
outsb
arpl
xor
aam
or
cmpsl
xchg
ja
test
sbb
lss
and
jmp
aad
test
faddp
leave
dec
test
jne
cmp
mov
dec
test
test
aas
sti
mov
dec
shr
inc
mov
mov
push
popf
int3
inc
dec
push
es
push
mov
int
jecxz
add
mov
imull
sub
adc
pop
scas
and
lock
mov
fistpll
and
mov
popa
pop
mov
sbb
mov
ret
fucom
cmp
shrb
dec
push
sbb
fmuls
arpl
pop
mulb
cmp
flds
xchg
jmp
or
pop
or
ror
adc
mov
push
push
in
pop
xor
xor
adc
enter
push
in
xchg
shlb
sub
mov
pop
nop
mov
push
in
pop
call
xor
jmp
cmp
adc
into
xchg
fwait
jbe
shrb
les
jge
aam
mov
add
imul
pop
sub
inc
out
fld
dec
xor
insl
clc
clc
dec
push
jbe
push
pop
shll
pusha
scas
insl
push
or
inc
imull
dec
aaa
or
movsb
xchg
add
jb
decl
nop
nop
sbb
maxps
dec
xchg
dec
xor
jecxz
xchg
fstps
push
push
xchg
push
sbb
ja
clc
test
push
into
jg
lahf
addr16
adc
or
dec
xor
jno
out
push
inc
push
cwtl
sti
aas
sub
inc
lds
into
xlat
jl
arpl
cmp
inc
jg
adc
push
roll
add
fsubr
mov
and
pop
ljmp
mov
jmp
mov
and
jno
movsl
inc
stos
imul
pop
inc
inc
pushf
inc
xor
dec
jno
sub
int3
adc
xchg
cld
inc
mov
push
pushf
sti
mov
daa
xor
cli
aam
rol
cltd
xor
dec
push
into
popf
call
pop
fsubrs
shr
xchg
js
rcl
sbb
call
stc
cmp
xchg
daa
adc
and
aas
mov
enter
repz
pop
inc
xchg
lcall
adc
movsl
mov
lahf
push
es
push
fistpl
fildl
call
lock
icebp
xchg
or
icebp
fs
sbb
sbb
or
ds
push
mov
xor
inc
pop
pop
and
xor
inc
add
push
pushf
jns
mov
xlat
push
lods
sbb
jb
mov
dec
outsb
mov
into
xor
mov
jle
mov
push
repz
cmc
jnp
mov
mov
in
rclb
aam
push
fildl
mov
mov
inc
aam
xor
rclb
xchg
xchg
imul
out
mov
push
stos
es
sbb
test
gs
push
in
add
arpl
or
xor
push
pusha
cmp
mov
sti
sbb
sub
das
add
push
mov
cld
les
scas
leave
sub
jno
je
mov
fsts
lar
inc
in
push
lea
cli
out
rcrb
pop
test
jmp
xchg
sub
mov
aas
cld
mov
dec
cld
or
push
popf
int
pusha
mov
pop
inc
and
mov
ljmp
cmc
aaa
sbb
enter
mov
lea
xor
sub
lock
out
rorb
jmp
lods
and
xchg
cs
dec
or
out
add
mov
fnsave
and
mov
nop
dec
cs
cmc
adc
jo
idivl
das
cmpsl
xor
lock
push
std
in
lds
lcall
mov
adc
iret
popf
dec
sub
arpl
arpl
xchg
add
adc
sub
and
adc
inc
jo
dec
xor
cld
adc
cli
hlt
inc
inc
mov
mov
movsl
int
movsb
in
jae
into
adc
outsb
subb
ret
cmp
and
push
popa
fildl
push
cmpsb
mov
int3
or
jmp
sbb
scas
xchg
adc
mov
add
out
inc
xlat
shlb
add
imul
leave
dec
cmp
mov
mov
xor
push
in
faddl
shrl
sbb
dec
push
xor
in
lret
jne
dec
pop
in
stos
ret
inc
dec
pop
sbb
xor
xor
or
in
xchg
sti
roll
out
cmp
loope
push
xchg
rcll
push
push
xchg
shl
sar
xor
sbb
movsl
iret
adc
add
inc
daa
pop
push
pop
jo
or
mov
dec
and
jno
push
loope
mov
cld
cmc
scas
sbb
mov
sub
add
inc
bound
out
cld
push
inc
test
js
mov
fcoml
mov
push
arpl
jge
jb
xchg
lods
jle
stos
xchg
dec
int3
add
scas
xchg
jo
pop
sub
outsb
pop
and
adc
fdivl
stos
aaa
mov
sbb
inc
mov
cmp
cmp
mov
ret
xor
mov
popl
pop
push
dec
js
fldenv
scas
mov
popa
cltd
aam
inc
imul
jl
pop
dec
mov
std
cmp
dec
jle
cmpsl
movsb
dec
add
mov
insl
mov
outsb
adc
out
fs
push
cmp
scas
or
dec
or
fdivrl
xchg
insb
scas
ds
add
push
xor
push
push
fs
and
std
shl
mov
push
xor
leave
shll
pause
test
jp
push
mov
js
lcall
aam
out
mov
call
out
dec
sub
mov
aad
and
cmc
xor
inc
inc
jo
cmp
add
add
lock
jb
mov
jne
shl
dec
mov
xor
cmp
sti
imul
and
jns
insb
inc
xlat
mov
dec
adc
xchg
cvtdq2ps
popf
mov
push
jg
insb
test
movsb
xor
pop
sbb
or
push
mov
cltd
inc
inc
stos
adc
push
jae
sti
ficoms
shrl
push
push
pusha
outsl
cmpsb
mov
cmp
sti
mov
jb
aaa
mov
adc
adc
aam
dec
xlat
cmp
sahf
es
and
jp
jecxz
add
jno
xlat
dec
lcall
pop
hlt
sub
or
shll
or
add
fmul
inc
cmp
negb
arpl
shlb
in
sub
add
cmp
pop
out
inc
sub
dec
sub
ret
popf
pushl
and
mov
sub
imul
ljmp
xorb
fadd
repz
push
cwtl
mov
andl
inc
popa
push
popf
aaa
inc
mov
outsb
xchg
mov
xchg
add
dec
ret
sarl
movsb
mov
mov
leave
dec
and
in
ret
xchg
enter
xchg
outsb
xchg
mov
out
out
aad
jg
fiadds
push
cmp
dec
fldenv
and
mov
int3
rcll
xor
or
or
cmp
shlb
push
incb
cmpsb
cltd
aad
xor
lock
mov
mov
in
inc
or
xchg
in
pop
push
push
push
and
mov
jno
add
cli
insl
les
in
and
dec
outsb
and
jmp
in
idivb
xchg
xchg
cli
lods
nop
mov
pop
orl
mov
jmp
adc
mov
or
mov
sub
xor
and
push
dec
xor
leave
adc
xor
mov
jne
jb
xchg
lahf
push
jp
dec
icebp
xor
imul
pop
mov
push
mov
add
das
dec
pop
inc
cli
pop
inc
imul
gs
sub
mov
xchg
scas
adc
mov
or
pop
aam
in
sub
daa
jne
or
inc
shlb
xlat
aam
push
add
test
and
lret
dec
aad
rorl
inc
xchg
outsl
lods
mov
test
movsl
out
cltd
xchg
aam
xchg
fstpt
jl
orl
lcall
fistl
dec
dec
into
or
add
popf
mov
std
xchg
sbb
lret
inc
pop
incb
pop
push
mov
jns
enter
iret
adc
add
sbb
jb
dec
icebp
sub
sbb
add
add
imul
mov
rclb
jo
pop
pop
aam
cmp
cmpsb
cmpsl
fcmove
shlb
stos
jo
cmpl
add
jp
cmpsb
scas
lret
cltd
aas
ficoml
mov
mov
and
pop
clc
dec
inc
push
push
add
mov
push
dec
adc
out
mov
mov
in
fsubs
and
sahf
pop
mov
dec
movmskps
aaa
rorl
xchg
rclb
cmp
test
add
ja
cli
dec
addr16
push
dec
dec
mov
mov
ljmp
sarl
push
cmp
and
mov
gs
int3
imul
mov
xor
cli
daa
mov
xor
cmpsb
icebp
xchg
sub
rcl
in
dec
or
pop
jae
sti
cmp
jp
push
adc
jo
ret
fcmovnbe
int
cmpsb
pop
push
xchg
aaa
dec
inc
in
inc
pushf
dec
mov
cld
jno
mov
mov
outsb
pop
xchg
data16
mov
pop
ficompl
outsb
xor
push
jno
in
adc
cmp
out
mov
and
int
outsb
aas
add
mov
inc
arpl
sahf
mov
stos
xchg
adc
lcall
inc
push
ljmp
push
or
dec
pop
dec
cmp
stos
add
or
and
dec
movsb
xchg
ss
aaa
adc
or
cmpsl
adc
sbb
out
jp
mov
call
or
xchg
dec
sub
leave
dec
aas
push
or
xor
subl
repnz
adc
inc
into
dec
add
ret
or
repnz
dec
dec
leave
adc
adc
in
fwait
insl
and
push
lods
mov
push
dec
fidivl
pop
jb
or
and
cld
xor
add
shrb
enter
lahf
mov
repz
inc
inc
push
push
or
adc
aaa
mov
addr16
inc
cmpsb
shrb
gs
bound
scas
jmp
stc
xchg
push
xchg
inc
dec
int3
fists
test
pop
cmp
cmpsl
mov
inc
test
mov
or
std
rclb
inc
add
push
loop
sahf
push
jno
sbb
mov
popa
jo
sub
imul
call
inc
fistl
jbe
call
pop
xchg
jge
inc
mov
fidivrs
and
inc
push
out
add
xor
inc
dec
jno
ret
push
hlt
push
inc
push
jae
pop
sub
jo
sbb
inc
hlt
mov
push
mov
or
jge
jno
mov
xchg
sahf
cmp
icebp
push
mov
cmpsb
sbb
sbb
shll
mov
mov
in
lock
rcrb
dec
addl
xchg
int
fcomps
in
mov
dec
psubq
dec
inc
cmp
mov
dec
cmp
jne
fbld
icebp
push
dec
sub
inc
mov
cmp
mov
mov
push
xchg
shll
dec
xchg
xor
fxch
dec
fisubs
sbb
in
aas
lret
pusha
mov
mov
sub
jb
sahf
lcall
cld
enter
xchg
push
sahf
jae
cmc
xor
popa
and
or
sti
mov
xchg
out
sti
jne
sbb
cmp
mov
lods
sub
mov
cmc
push
shrb
pop
xor
icebp
xor
mov
xor
lea
test
push
push
xchg
lret
ja
test
je
mov
mov
cltd
jne
aaa
and
pusha
repz
jp
add
cmp
mov
das
out
sub
in
je
in
mov
into
and
mov
xchg
pop
or
neg
add
mov
jp
xor
mov
push
push
std
add
das
fsubl
pop
xor
mov
pop
aam
sub
out
jne
fsubrp
mov
fmuls
dec
movsb
mov
dec
jno
xor
shl
mov
in
cltd
sbb
xor
bnd
push
add
xor
insl
popl
ffree
pop
maskmovq
testl
repz
ficoml
sahf
inc
and
fildl
std
pop
and
inc
sahf
addr16
cmc
cli
arpl
sub
popl
adc
daa
dec
fidivrs
jbe
faddl
xchg
fpatan
pusha
push
xchg
xor
fldln2
lahf
and
test
inc
cmp
fcomps
clc
inc
es
pop
mov
lods
or
push
stc
out
adc
push
push
outsl
cmp
pop
and
cmp
add
fdiv
push
and
dec
mov
into
or
hlt
subl
faddl
mov
add
into
mov
rcl
sbb
inc
sbb
stc
or
inc
fldcw
xchg
and
push
out
mov
das
dec
sub
das
dec
push
sub
mov
test
push
xchg
and
inc
sbb
dec
into
fadds
push
fisttps
sub
or
xlat
add
repz
mov
or
fdivp
mov
movsb
mov
inc
push
jno
mov
out
sbb
push
out
sbbb
inc
cmp
sbb
jno
pop
add
inc
pusha
enter
loope
into
dec
gs
adc
aam
in
test
cmp
ljmp
or
push
aad
cmp
add
adc
in
push
jnp
jge
push
xlat
add
sbb
inc
add
rorl
testl
inc
testl
mov
sub
dec
mov
fcomps
out
or
push
outsb
lahf
cmp
dec
lcall
icebp
adc
xorl
cmpsb
imul
in
dec
in
int3
je
or
es
repnz
dec
dec
push
xor
int
inc
add
jne
dec
or
out
loope
xor
push
cmpsl
or
rcll
push
and
sbb
int3
aam
add
cltd
mov
xchg
xlat
push
mov
lahf
xor
stos
rol
xchg
xchg
scas
push
jge
stos
push
je
fcompl
and
adc
mov
cmp
into
sbb
aad
xor
cmp
adc
xor
cmp
aaa
adc
sbb
mov
mov
dec
rclb
sub
das
cli
xchg
xchg
daa
inc
pop
sub
xlat
pop
dec
lods
sbb
lds
or
ljmp
sbb
mov
inc
lahf
sub
mov
add
aad
test
xchg
jmp
test
xor
sbb
movsb
and
sbb
outsb
fldt
das
aad
sti
mov
sub
in
int
sbb
or
cmp
dec
push
pop
xor
out
adc
inc
lea
jp
loop
pop
inc
xchg
xor
pop
inc
jno
ds
roll
and
aad
inc
cld
shll
repz
cmc
icebp
inc
mov
popa
adc
out
lods
mov
aaa
out
sbb
inc
inc
pop
aaa
imul
or
dec
loope
mov
jno
jne
fucomp
hlt
lcall
pop
sarl
out
sbb
out
sti
inc
jo
xor
sbb
leave
mov
jecxz
cmp
hlt
fcoml
and
rorb
lods
das
lods
sbb
pop
int3
cmp
dec
shlb
dec
cmp
sbb
lods
sarl
insb
pop
mov
scas
pop
sub
rorl
int
cld
xorb
into
lds
jno
fstpt
leave
or
adc
pusha
push
inc
sbb
into
pop
inc
push
mov
sbb
out
push
or
sub
test
push
lods
aas
adc
fbstp
js
dec
add
adc
jno
pop
and
dec
leave
pop
call
daa
push
ja
cmp
test
mov
pop
pop
imul
inc
mov
int3
enter
adcl
push
mov
bound
adc
icebp
dec
loopne
iret
stos
xchg
andb
mov
pusha
xchg
sub
mov
xor
cmp
mov
inc
xor
adc
add
adc
cmpsb
test
and
test
dec
fimuls
adc
jnp
xchg
mov
jno
add
incl
leave
push
test
lcall
jl
push
jo
jbe
xchg
adc
cmp
fldcw
xor
pop
shrb
xchg
or
mov
cmc
repnz
icebp
scas
test
loop
fwait
and
cli
insb
pop
cmp
mov
or
std
daa
lcall
xor
xor
cmc
jns
fwait
popf
fsts
dec
aad
push
ret
sbb
cmp
stos
sahf
aam
and
outsb
xchg
push
stos
inc
push
in
xor
xor
jl
rcrl
cwtl
les
or
jecxz
pop
ret
popa
xor
cmc
jp
jno
sub
imul
sbb
repnz
stc
roll
jmp
cli
pop
popf
shrb
inc
and
mov
fs
rclb
in
iret
pop
dec
jnp
out
sahf
adc
pop
push
mov
adc
cmp
xor
sahf
sbb
lods
hlt
xchg
xchg
idiv
jnp
adc
adc
dec
outsb
adc
shrb
sub
rep
jecxz
push
orl
add
push
pop
pop
push
cmp
das
mov
orl
jecxz
pop
mov
push
andb
insl
divb
and
inc
imul
cmp
fldt
dec
xor
adc
adc
dec
xor
or
insl
push
cmp
jmp
or
lods
xor
xlat
xor
incb
add
adc
addr16
jno
inc
or
mov
in
stos
mov
push
jbe
cvtdq2ps
popa
add
lods
and
push
jno
add
mov
sub
add
jo
das
xchg
cltd
lcall
outsb
add
daa
push
xchg
addb
xor
popa
push
mov
push
inc
andl
pop
mov
push
pop
fstl
mov
sub
mov
dec
xchg
cmpsb
mov
inc
sti
inc
xlat
fistpll
std
xor
push
add
inc
adc
cltd
sub
inc
jnp
shlb
or
push
add
push
xchg
pushl
loope
or
fxam
daa
and
cmp
cmp
or
push
lahf
dec
xchg
hlt
mov
shl
or
pop
inc
xor
js
int3
stos
add
xchg
adc
test
fnop
sbb
push
stos
adc
add
cmp
and
dec
xchg
add
or
jp
push
mov
xchg
xor
test
xor
int3
loop
pop
scas
jmp
sub
shrl
aad
pushl
ret
lds
inc
ret
add
cmp
rorb
in
and
cmp
outsl
lret
insb
setnp
push
sub
inc
mov
inc
rep
enter
shrl
outsb
jb
mov
xchg
int3
inc
pop
push
or
out
int3
adc
mov
loope
add
sbb
lahf
aaa
outsl
cmp
cmc
inc
add
xor
pop
shll
cwtl
stc
push
add
cli
mov
out
scas
sti
jl
add
ret
mov
cmpsb
rorb
imul
or
in
insb
xchg
inc
in
insl
and
testl
xor
jno
sbb
mov
add
and
pop
cld
adc
rcr
add
xchg
ret
fistpl
inc
inc
and
inc
stos
aad
scas
popf
mov
dec
iret
sbb
dec
or
icebp
jg
xchg
inc
les
sub
cs
aam
cmp
cmp
or
adc
add
popa
leave
xchg
xchg
mov
add
push
dec
jno
pop
adc
cltd
xor
insl
dec
add
fimuls
frstor
aad
xor
mov
add
dec
movsl
inc
adc
dec
push
rorb
push
pop
stc
push
dec
pop
out
push
xor
push
iret
mov
xchg
jge
inc
pop
icebp
push
adc
xchg
fxch
and
test
gs
scas
jge
push
das
js
sub
jbe
mov
mov
mov
cwtl
xor
imul
inc
fnstsw
mov
ja
push
in
outsb
leave
cmp
popa
mov
jbe
sub
enter
popa
leave
lcall
mov
iret
notl
std
aad
loopne
icebp
test
movsb
pop
fadd
arpl
push
arpl
pop
movsl
stc
scas
xchg
inc
inc
les
sub
push
xor
dec
pop
dec
leave
pop
dec
cmp
enter
xchg
lods
jno
icebp
xchg
out
add
xchg
neg
sub
jno
movsb
push
fprem
add
pop
xor
cs
or
xchg
push
popf
add
sub
cmc
dec
mov
jmp
ja
fcompl
aad
dec
popa
aam
or
mov
mov
xchg
add
xchg
dec
ret
mov
aaa
test
scas
push
subl
push
cltd
inc
add
ret
ret
mov
das
cmc
es
add
xchg
jno
mov
in
ret
aaa
mov
inc
dec
cmp
fcmovnu
inc
ljmp
outsb
fisubl
das
std
imul
daa
hlt
cmp
dec
test
scas
inc
pop
push
ja
inc
insb
lret
cmpsl
movsl
sbb
lds
test
shlb
xor
xlat
fnstcw
add
jns
or
in
fsubrl
pop
fbstp
insb
and
mov
js
mov
jne
jmp
fcompl
xor
and
or
pop
jb
int3
sub
rep
adc
arpl
cmp
sbb
dec
into
fidivl
bound
or
cmp
mov
inc
sbb
sti
nop
jb
sub
pop
add
mov
inc
sub
jno
pop
pop
adc
push
pop
sub
jns
jnp
cmp
dec
lret
fwait
sub
ja
adcb
out
mov
sbb
ffreep
clc
dec
movsl
jne
cmc
arpl
push
out
xchg
sarb
jae
push
dec
stc
outsb
or
add
sbbb
mov
dec
push
jecxz
mov
or
dec
cld
inc
pop
fisttps
loop
or
fmuls
sub
aas
lahf
mov
subb
pop
cmp
in
mov
ret
cmp
scas
push
in
inc
fs
imul
out
add
stos
mov
into
pop
pusha
sarb
xor
fs
int
aas
cld
and
dec
lock
push
bound
jl
in
lcall
mov
push
push
jp
cs
mov
cs
in
xor
inc
cli
call
ret
push
pop
add
xor
ss
cltd
pop
sbb
jne
adc
pushf
inc
iret
outsb
mov
stos
mov
ja
pop
jmp
add
ss
push
das
pop
xchg
inc
pop
popa
pushl
adc
xchg
mov
je
fidivs
cmc
push
add
orb
cld
or
xor
fwait
cmp
addb
aaa
cmp
sbbl
xchg
ja
xlat
int
cmp
push
push
fwait
lea
shll
adc
adc
or
mov
icebp
sub
dec
or
sarl
jp
ret
lret
jp
dec
xor
in
call
or
pop
pop
and
push
jnp
lret
andl
xor
scas
inc
test
mov
fwait
ljmp
jno
bound
test
int
lea
in
out
sahf
hlt
test
push
dec
mov
cs
icebp
and
jl
push
or
in
inc
xchg
sbbb
dec
xlat
cmp
pop
mov
xlat
mov
cmp
cs
std
iret
xor
testl
jl
ss
bt
inc
fwait
mov
lds
pop
ficomps
pop
dec
jns
inc
or
incb
bound
lcall
nop
fidivrl
cmpsb
jp
ss
sbb
mov
enter
aad
add
mov
dec
mov
adc
sub
je
into
push
sti
loop
jnp
sub
cmp
sbb
add
arpl
ret
movsl
xchg
push
daa
push
xchg
pop
loopne
sahf
jno
fnstsw
pushf
movsb
jne
sbb
popa
shll
adc
cs
cwtl
adc
mov
or
sbb
xchg
push
push
xchg
mov
test
cs
mov
popf
pop
ret
lahf
das
data16
aaa
popf
movsbl
lods
test
cmc
nop
fistps
xor
icebp
cmp
shll
pop
cli
push
push
lea
aad
shrl
pop
fildl
xor
mov
hlt
imul
int
lods
or
push
fcmovu
out
mov
sti
mov
mov
xor
xor
mov
loope
pop
pop
roll
push
fcoml
pop
sub
psllq
adc
mov
and
inc
xchg
popa
dec
cmc
or
icebp
pop
dec
inc
mov
cmp
mov
xchg
push
mov
cli
jo
aad
ret
jge
cmc
inc
push
xor
cmp
mov
dec
cmpl
mov
mov
push
add
scas
jnp
stc
call
cmpl
and
mov
cmp
aam
rcr
xor
popa
out
notb
add
or
xor
mov
fsubs
cs
rcll
std
inc
cmpsl
ud0
xchg
and
in
pop
sub
jbe
aad
dec
daa
divb
sub
sub
rcr
inc
lds
gs
pop
pop
arpl
ss
mov
mov
enter
fisttpll
jae
in
mov
dec
push
mov
mov
fistl
adc
loope
and
sub
adc
cmp
jae
mov
aaa
inc
inc
ftst
and
sbb
ja
sub
aad
xchg
cli
xor
jmp
movsl
pop
pop
xor
in
sbb
jecxz
loope
adc
aad
cmp
mov
cmc
mov
int3
cmp
cmc
or
mul
mov
jo
aad
les
dec
clc
mov
in
cmp
insl
pop
enter
xlat
ds
cmc
ret
gs
aam
jno
out
sub
mov
aad
adc
pop
mov
cmc
adc
cmp
and
push
incb
out
ret
mov
or
out
mov
fadd
xchg
ljmp
icebp
imul
outsl
jno
enter
adc
mov
dec
dec
int3
pushf
sub
pop
aas
popa
push
into
sbb
rcl
mov
mov
inc
adc
arpl
push
popf
incl
cmp
pop
cmp
inc
rcrb
adc
add
mov
out
in
dec
les
adc
lds
std
xor
mov
cli
pop
scas
dec
jns
or
lret
sti
push
inc
popf
insb
mov
or
inc
das
leave
xchg
inc
aad
aas
nop
pop
ja
in
dec
mov
popf
dec
aaa
aam
pop
dec
mov
aaa
shll
xor
or
je
sti
pop
add
jno
xor
mov
inc
xor
cwtl
mov
cmp
cmp
adc
push
cmpb
loope
or
or
sti
jbe
cmc
arpl
adc
int3
and
js
cmp
sbb
jne
jne
mov
fcomps
repz
aad
clc
mov
inc
jne
loope
mov
cmp
cmp
aam
xchg
mov
mov
push
test
in
mov
fabs
out
lods
mov
ficoml
cs
sbb
pop
mov
or
mov
lock
mov
jne
or
add
fdivr
xlat
xor
addb
push
xor
inc
adc
cmc
xor
cmp
leave
inc
dec
orb
jbe
lss
punpcklwd
fiaddl
cmp
popf
popa
pop
fmulp
fadds
test
js
dec
mov
enter
and
xchg
xor
nop
loop
ret
lahf
idivl
pop
inc
mov
testl
push
aad
mov
cs
push
sarb
cmc
scas
mov
xor
xor
inc
psubw
div
pop
and
cld
nop
push
gs
addr16
fisubrl
adc
lahf
wrmsr
std
iret
nop
jnp
cmc
mov
addb
jmp
sbb
jb
es
jp
push
dec
inc
xchg
popa
lahf
sti
nop
ret
sub
fbstp
sub
add
int3
cmp
or
cmpsl
loope
out
iret
sbb
mov
lock
or
jns
push
fidivrs
cmc
sbb
dec
je
jne
insl
daa
push
orl
je
loopne
enter
push
push
jno
cmc
add
inc
into
pop
icebp
cmp
sti
push
test
aam
jmp
inc
xor
push
inc
cmp
adc
dec
pushf
cmc
fucomi
ret
inc
nop
sub
aad
dec
pop
test
dec
jl
sub
insl
push
fstps
addb
cmp
inc
popa
cltd
aam
cli
push
mov
and
xlat
jne
pop
in
xlat
mov
pop
pop
inc
cs
pop
xchg
cld
sti
es
mov
fisttpl
jle
fsubrl
ss
incb
and
sti
ror
sub
mov
popa
push
stos
enter
pop
rcr
sbb
icebp
jecxz
dec
and
fisttpl
inc
fdivrl
das
fs
mov
negl
jl
mov
adcl
pop
push
xchg
dec
add
xorl
mov
pop
test
fstl
mov
pop
push
das
push
push
mov
adcl
or
in
lret
and
xchg
outsb
mov
in
clc
imul
xor
xchg
mov
roll
rcll
test
ret
mov
imul
add
aad
lcall
pop
call
bound
push
xchg
fmull
fwait
push
flds
fstl
std
nop
rorb
jns
fisubrs
xor
or
cld
lea
xchg
xor
aad
inc
mov
sti
dec
and
movsl
sahf
dec
pop
dec
cmp
sbb
or
jle
mov
idivl
push
outsb
jne
pop
out
jo
add
arpl
push
or
push
dec
fisttpl
fdivr
mov
dec
push
js
sbb
pop
inc
jle
lcall
icebp
or
maxps
sub
imul
mov
loope,pt
cmc
xor
out
dec
add
fs
mov
clc
jl
xor
ret
bound
cli
jmp
and
pop
ljmp
sbb
inc
adc
stc
push
ret
cmp
and
cmpsb
in
xor
pop
adc
daa
adc
dec
cmp
in
xchg
rol
shll
push
push
push
mov
rcll
stos
call
and
dec
shl
push
repz
test
pop
in
dec
add
mov
dec
int
dec
into
jp
inc
in
sub
int
add
clc
ds
jge
xchg
sbb
dec
adc
popl
adc
dec
aaa
push
es
push
push
jge
jmp
inc
test
cmp
ljmp
dec
imul
push
push
adc
fxch
push
iret
sub
fistpll
stc
popa
push
sbb
sub
or
inc
sub
sub
stc
mov
add
xchg
imul
leave
test
xchg
rol
jmp
daa
or
aaa
and
bound
pop
inc
nop
jl
add
xlat
jne
pop
push
sub
cmp
lea
mov
repz
push
sbb
cmp
pop
xor
rclb
pop
pop
xorb
lock
adc
fdivs
dec
mov
xchg
pop
dec
ljmp
push
pushf
or
xchg
push
jne
xchg
sub
loop
test
push
xchg
inc
pop
test
sbb
push
mov
xor
adc
or
fidivl
aaa
mov
jns
rcll
adc
dec
sub
test
cmp
xchg
sub
inc
push
and
jno
mov
jno
out
aaa
xor
rcrb
pop
es
inc
add
aaa
push
push
inc
outsb
or
rclb
cmp
sub
xchg
jmp
mov
push
push
xchg
nop
test
push
push
dec
sub
dec
sti
pop
daa
in
push
loop
aam
rclb
mov
rep
push
add
cmp
pushf
cmc
sti
and
mov
out
xchg
and
jmp
and
push
dec
and
enter
repz
sub
in
inc
push
fildl
daa
cmp
cmp
fsubr
cwtl
rcrl
xor
sbb
fadds
gs
push
imul
pop
leave
sub
je
push
xchg
adc
sbb
adc
clc
adc
mov
sahf
rclb
and
orl
shrb
or
das
loopne
shl
cmpb
jne
xchg
jo
push
cwtl
cmp
mov
aad
lea
popf
push
xchg
iret
repnz
mov
jae
ss
daa
cmp
les
mov
fldl
adc
cmc
sub
aaa
and
out
xchg
mov
push
mov
jge
pop
addr16
push
imul
bound
jecxz
iret
fidivl
ss
out
sub
int3
sbbl
sbb
faddl
in
cld
arpl
mov
cmp
ljmp
pop
inc
movsl
test
insb
in
js
negl
fstp
xchg
testb
nop
jp
sti
out
push
dec
jno
mov
pop
insl
fdiv
mov
mov
mov
divl
int3
fwait
icebp
cltd
in
fnstenv
pop
sarb
rol
inc
push
pop
outsb
sti
mov
sbb
imul
cwtl
repnz
mov
xchg
icebp
cmp
mov
push
dec
push
int3
iret
icebp
adc
xlat
push
xor
and
pop
xor
cmp
jb
cli
in
mov
in
std
dec
adc
rcr
idivb
jp
gs
dec
push
ret
xchg
mov
jg
adc
jns
jno
xorb
sub
fadd
cmpsl
int3
in
in
jge
fidivrl
pop
add
inc
lret
and
dec
mov
jno
or
dec
int3
lret
xchg
mov
shll
pop
jnp
scas
pop
lods
lcall
pop
mov
jp
dec
dec
iret
outsb
mov
outsb
xchg
into
inc
inc
mov
aad
mov
cmpsl
pop
xchg
imul
jmp
fistl
mov
inc
lock
loop
push
or
mov
adc
int
xor
jge
jo
popa
pop
ds
inc
and
pop
mov
cmp
dec
adc
movsb
sti
mov
cmc
scas
popa
mov
aam
je
jge
or
push
popf
dec
cmp
xchg
in
cs
inc
jecxz
and
dec
les
xor
pop
sub
stos
out
cmpsb
mov
sti
shrl
rcrb
add
sub
iret
fdivl
out
cmpsb
mov
sarl
xor
pop
in
les
inc
or
jb
push
out
push
add
hlt
mov
dec
lea
xchg
lret
or
in
dec
or
xchg
je
or
leave
cmp
mov
and
mov
or
xchg
xor
ret
in
xor
sub
mov
imul
mov
push
mov
loopne
sub
push
mov
bound
in
es
jl
clc
fucomi
divb
andl
ja
incb
dec
sahf
pusha
pop
inc
testl
adc
loopne
bound
into
push
pop
xchg
loopne
fwait
cmp
out
xchg
aaa
mov
cmp
vcvttps2dq
pop
adc
xor
fildl
test
adc
jo
add
cmp
cmp
sbb
inc
push
pop
out
pop
int3
insb
jnp
mov
push
push
loop
jmp
or
popa
stos
sarb
pop
movsb
data16
pop
jo
mov
pop
mov
and
jge
sbb
fwait
nop
cmp
xchg
or
cmp
xchg
cmp
push
std
sbb
scas
daa
cwtl
push
sbb
push
shlb
xchg
cld
or
aas
jbe
popa
pop
mov
nop
dec
sahf
enter
adc
lods
mov
cmc
popa
mov
inc
inc
xchg
push
adc
pop
adc
push
testl
cmp
adc
cwtl
iret
pop
push
mov
xchg
push
lds
pushl
mov
cld
shll
jne
outsb
aad
add
push
cmc
xorb
dec
scas
into
cli
sbb
sub
push
popf
hlt
sbb
les
push
xchg
rcr
fmull
mov
sub
jle
pop
mov
add
icebp
mov
cltd
sub
jno
fistpl
add
and
cld
add
dec
aaa
pop
mov
cwtl
out
dec
and
sub
sbb
data16
inc
mov
xor
mov
xchg
lcall
fidivrl
fidivs
and
cli
and
push
add
dec
mov
das
fdivl
add
insb
les
imul
ja
outsb
fs
in
adc
lods
out
orl
add
outsb
mov
aas
stos
xchg
xor
push
or
shlb
repz
or
push
cmp
aad
cld
fidivrs
movb
into
arpl
in
sti
xor
jg
popa
pop
rclb
repz
test
lods
pop
mov
mov
cs
daa
mov
inc
xchg
pop
sti
mov
cltd
xor
and
push
outsb
lret
nop
sub
loopne
cmp
movb
mov
sahf
mov
inc
push
pop
dec
test
sbb
scas
cmc
aad
adc
hlt
cmp
and
rcll
jbe
xor
inc
fs
in
addb
inc
mov
adc
addr16
sbbl
lcall
das
dec
sbb
jp
inc
xchg
aas
pop
ds
ret
dec
imul
xchg
inc
aad
adc
push
xchg
cli
pusha
cltd
or
hlt
sub
das
mov
add
cs
cwtl
push
adc
xor
mov
mov
fmuls
cwtl
jmp
sbb
aas
test
lods
leave
sahf
daa
xor
pop
fsub
loopne
or
inc
in
lds
movsb
cmp
push
pusha
mov
or
and
and
mov
dec
xchg
sbb
sub
int3
shlb
aas
xchg
add
inc
pop
enter
mov
in
into
add
out
sub
in
imull
mov
gs
cmp
mov
add
mov
add
pop
jns
test
push
push
icebp
stos
mov
into
sbbl
sub
insl
push
add
sbb
xor
mov
adc
in
aaa
cmp
jno
sub
pop
popa
and
mov
push
cli
in
cmc
out
jmp
cmp
add
or
sbb
cs
cld
stos
arpl
jle
adc
sub
bound
sub
int3
mov
rorb
sub
push
pop
adc
cmp
jns
adc
inc
aam
push
xor
inc
pushf
call
out
push
fldl
aam
lea
icebp
inc
adc
sti
movsl
stos
inc
hlt
imul
xchg
sub
ret
jo
rorb
mov
push
rol
dec
xor
push
loop
aaa
aam
fisttpll
arpl
cmp
aas
divl
push
sub
cmp
xchg
add
jne
lahf
bound
js
sbb
js
bound
inc
push
xchg
enter
jno
sub
xchg
mov
add
fisttps
movb
int3
cmp
push
fcomps
adc
cld
test
cmc
sub
cli
push
sti
push
push
hlt
inc
data16
xchg
test
insl
repz
ficoml
into
je
jge
mov
mov
xchg
pop
sub
jno
gs
adc
sbb
ljmp
mov
daa
push
and
daa
push
scas
aas
stos
ucomiss
xor
xchg
arpl
aam
inc
dec
in
fnop
sbb
addr16
pop
and
icebp
incb
cld
pop
xchg
add
cld
xchg
and
push
pop
pop
in
rorb
push
mov
sbb
mov
sub
mov
pop
xor
mov
push
pop
test
dec
push
aam
xlat
jno
cld
inc
pop
test
inc
sbb
xchg
scas
and
xchg
xor
jmp
test
xchg
cmp
jecxz
imul
adc
in
mov
inc
dec
jo
sbb
ret
nop
dec
pop
fstpt
add
pop
in
movsb
jecxz
adc
inc
xchg
inc
inc
add
dec
jnp
mov
mov
mov
rol
je
xor
adc
mov
dec
mov
pop
out
in
jmp
outsl
push
push
hlt
inc
stos
daa
cld
sti
mov
push
scas
mov
or
int
push
cmp
xor
pop
pop
mov
aam
les
add
sub
nop
jg
test
das
and
dec
dec
cmp
dec
dec
xchg
out
push
xchg
xlat
sub
add
movsb
xor
hlt
loopne
pop
push
or
sbb
inc
cld
imul
jno
test
inc
inc
xor
int3
setnp
sarl
repz
jno
xchg
or
lcall
out
out
adcl
mov
push
jno
adc
lods
mov
mov
ljmp
frstor
push
insl
jno
pushf
rolb
out
iret
mov
jle
and
xchg
push
inc
into
pusha
xchg
arpl
push
cmp
adc
xlat
mov
dec
dec
lcall
mov
inc
arpl
add
sbb
cmp
rcrl
insb
les
jbe
sbb
jo
cmp
cmp
imul
dec
pop
aaa
xor
add
inc
cmp
rolb
add
aad
mov
clc
inc
insl
sbb
xchg
out
xor
sti
lods
push
lods
jbe
dec
popa
xor
jno
mov
sti
aaa
into
jecxz
fstps
sbb
jbe
test
jecxz
xor
adc
inc
lds
test
shlb
sarb
shlb
aam
fildl
inc
repnz
movsb
std
out
stc
mov
add
pop
dec
jno
arpl
imul
sbb
cmp
jno
and
jns
pop
addl
mov
jne
add
inc
test
pop
xor
int3
aas
rolb
push
stc
xor
dec
loop
pusha
push
push
addb
hlt
push
jno
bound
in
pop
xchg
push
int
jne
add
nop
test
jp
adc
pop
adc
pop
fadds
sbbl
adc
mov
dec
in
and
mov
cmp
or
sbb
outsl
xchg
lret
shll
rolb
mov
and
push
lea
cmp
rcrb
xchg
or
or
and
jnp
cmpsl
repnz
insl
aaa
mov
ljmp
or
outsl
pop
dec
les
movl
xor
push
lret
jae,pn
fisttps
push
pop
xchg
inc
push
mov
scas
push
subl
pusha
sbb
inc
lret
dec
sbb
adc
mov
cmp
inc
sub
fwait
inc
pop
sti
sti
icebp
mov
jno
adc
sub
push
add
or
and
inc
xor
xchg
pop
ret
mov
mov
xchg
inc
add
call
arpl
pop
pop
cld
jge
ror
or
mov
test
sti
jmp
pop
popa
inc
dec
push
cld
orb
or
cmp
repz
fdivs
lea
fldenv
aas
xlat
fidivl
mov
sbb
mov
jp
sbb
jmp
ftst
push
mov
pop
ret
or
call
nop
push
mov
sub
loop
int
xchg
fnstenv
pop
js
cmp
add
adcb
push
dec
xchg
and
test
xor
add
jo
cmp
xor
popf
mov
push
insl
repz
lret
jno
xor
xlat
stc
repnz
push
test
fnstsw
xchg
rclb
sub
push
mov
or
xor
jno
movsb
add
lods
loop
cmp
lahf
hlt
add
add
sbb
push
jae
cli
stos
adc
test
ret
xor
lds
and
outsb
pop
stos
jbe
les
ds
push
push
adc
xor
test
sub
jmp
mov
add
pop
lahf
jnp
dec
cwtl
or
inc
or
cmp
leave
inc
push
imul
and
arpl
imulb
or
outsb
sub
je
sbb
sbb
push
outsl
ss
mov
pop
push
mov
lea
xor
pop
shrb
pop
add
add
mov
mov
test
push
and
mov
inc
ja
fdivl
xchg
inc
lcall
arpl
roll
lods
or
mov
xor
jo
inc
xchg
mov
inc
roll
popf
aaa
out
mov
int
add
xchg
mov
aaa
rcrb
imul
sub
ror
xor
or
and
mov
in
enter
addr16
push
pop
icebp
push
dec
dec
int
sbb
pop
sbb
or
mov
fisubrs
in
adc
xchg
xchg
fsubrl
mov
gs
push
fdivrs
cmp
dec
outsb
js
adc
std
push
sbb
pushf
push
loop
pop
xchg
push
repnz
push
cmpl
dec
hlt
loop
aas
leave
jbe
or
movsl
test
and
dec
pop
into
daa
add
in
add
fmuls
or
inc
cmp
ljmp
push
adc
fmul
jne
mov
mov
pop
sbb
cld
loopne
inc
xchg
js
push
loop
fstl
rorb
push
pop
rol
fisubs
or
inc
mov
leave
sti
dec
scas
jnp
fstpt
movsl
std
inc
popf
xlat
dec
xchg
mov
adc
out
inc
aaa
pop
incb
pop
adc
push
sbb
add
pop
mov
xor
inc
adc
xchg
fbld
push
fstpl
ret
xor
xor
xchg
or
es
or
mov
dec
sub
movsb
mov
push
add
pop
loope
aam
jne
mov
bound
and
fstpt
lods
fcmovb
insl
inc
push
dec
inc
dec
loope
lahf
xchg
jmp
adc
in
aas
lahf
xor
hlt
lock
popf
push
sahf
xor
and
push
fwait
push
dec
mov
sbb
out
push
adc
xor
sub
mov
fs
stos
in
or
arpl
int
push
or
ja
addb
cmpl
lret
adc
jmp
mov
pop
mov
xor
pop
xor
icebp
inc
jmp
imul
imul
mov
push
cmp
sbb
or
pushf
aad
scas
rcrl
lahf
popa
add
or
mov
push
mov
pop
out
mov
nop
orl
and
jnp
ret
mov
pop
outsb
std
stos
xchg
sbb
dec
pop
cmp
arpl
adc
lret
cli
pusha
ret
stos
dec
enter
leave
decb
cmp
cmc
or
cltd
or
cld
pop
pop
push
inc
stos
and
shll
push
call
scas
inc
rolb
nop
inc
lcall
insl
fwait
mov
sti
push
pop
jno
icebp
pop
shlb
mov
sub
jno
scas
inc
movsl
fwait
fstl
fists
ficomps
push
pushf
push
nop
cmp
jno
leave
addr16
cmp
jg
xlat
jmp
mov
iret
add
orl
adcl
vandpd
and
mov
xlat
fs
repnz
out
scas
out
test
ja
xor
inc
dec
insl
in
mov
push
movsb
cmp
scas
xchg
scas
pop
and
mov
pop
and
outsb
mov
test
pop
es
cmp
inc
dec
push
rolb
lods
aad
xor
pop
fistps
or
rorb
push
rcll
inc
sub
cmp
adc
inc
imul
stc
lods
adc
cmp
xchg
inc
or
lea
loop
mov
fldl
adc
push
and
stos
mov
loope
call
push
negl
sbb
hlt
jg
xor
cmp
outsb
cli
inc
or
inc
or
dec
mov
lcall
sub
or
jbe
pop
enter
int3
xor
dec
into
lret
sub
es
cmc
mov
push
sti
jbe
mov
sub
push
pop
daa
std
call
inc
xchg
sbb
add
adc
jae
dec
or
add
lds
fiaddl
mov
mov
fstps
xlat
cli
sub
dec
imul
and
hlt
add
pusha
inc
push
gs
int
dec
dec
enter
or
sub
icebp
inc
inc
add
fstp
scas
xlat
jmp
sbb
xchg
jmp
sti
repz
pop
test
pop
in
testl
push
sub
jae
xchg
cmp
cmp
movsb
push
in
or
push
sbb
iret
loopne
adc
adc
dec
xor
adc
sub
add
xchg
and
ljmp
pop
lock
stos
setl
daa
push
inc
mov
clc
mov
adc
inc
sbb
into
fwait
pop
mov
dec
insl
dec
ljmp
pop
and
outsl
icebp
push
add
scas
test
repz
sbb
lret
cmp
sbb
in
pop
test
pop
jnp
ret
test
or
das
ljmp
dec
push
mov
pop
dec
push
pop
popa
push
aaa
sub
out
subl
xchg
or
jbe
add
ja
popa
icebp
xor
lret
jne
ret
loope,pn
push
aam
cmp
testb
adc
sub
into
adc
popa
sahf
push
pop
cwtl
pop
clc
pop
repz
test
gs
dec
lcall
push
leave
gs
jle
loop
add
test
push
aaa
shlb
inc
rolb
scas
cmp
or
pushf
xchg
rorl
pop
hlt
add
mov
jne
inc
mov
lds
jmp
mov
mov
int
sub
mov
scas
rcrb
inc
mov
add
pop
stos
add
pop
scas
add
push
pop
dec
push
push
into
and
int
add
push
add
and
cld
jns
jbe
xor
push
sbb
ljmp
adc
jle
lahf
dec
cmc
adc
push
or
icebp
daa
negl
ficompl
test
repnz
xor
gs
jno
jae
sbb
ja
xor
xor
lahf
jg
ds
cmpb
mov
jg
fmull
xchg
stos
and
push
sbb
imul
leave
in
dec
cld
mov
fwait
cmovne
or
fmul
sti
jl
gs
or
enter
mov
stos
gs
pop
jp
dec
jno
or
fsts
push
leave
mov
mov
ficoml
jl
cmpsb
andb
aaa
fwait
out
movb
jecxz
lret
inc
out
pop
mov
push
imul
pop
or
lcall
add
mov
test
or
mov
cmpsl
ljmp
movsl
ljmp
mov
xlat
add
adc
fwait
push
in
aaa
stos
in
mov
sbb
push
bound
insl
aam
sbbb
sbb
cmp
cmp
in
into
mov
add
xchg
cmovge
cmpsl
adc
mov
stos
jmp
adc
aaa
push
popa
cmpsb
mov
or
outsb
je
xchg
push
add
push
cmpsl
lcall
mov
mov
rcl
xor
nop
cli
imul
pshufw
mov
fidivrs
dec
add
data16
push
cmp
test
adc
ds
popa
mov
shrl
repnz
xchg
push
sub
sub
setb
xor
sbb
xor
and
mov
fistpl
push
inc
adc
pop
add
flds
jae
or
jne
sti
or
mov
push
pop
and
lcall
add
and
sbb
and
jg
jb
adc
lea
outsb
sets
push
shlb
out
fdivrl
dec
fsts
mov
jno
jl
push
push
push
dec
dec
sbb
insb
out
mov
jno
dec
dec
fwait
orb
mov
daa
sbb
popa
repnz
add
sarl
ret
cmp
loope
push
mov
cmc
adc
push
adcb
outsb
into
or
mov
int3
jge
fsubs
jae
adc
sbb
adcl
sti
loope
movsl
scas
mov
jmp
xchg
and
mov
inc
push
fstps
stc
lock
aam
ds
int3
cs
sti
aaa
lahf
or
cmp
pop
mov
sbb
mov
cltd
mov
jp
insb
lea
testb
jb
shrb
outsl
fimuls
mov
xchg
aas
sti
xchg
imull
aam
aas
pop
testl
xchg
clc
std
cmc
test
xchg
inc
mov
cmpsb
bound
push
or
mov
inc
bound
lret
nop
inc
testl
sbb
adc
pop
adc
inc
imulb
outsl
leave
rcr
insb
sub
fdivrs
rclb
mov
sub
dec
lods
test
xchg
repnz
add
push
jmp
xorps
inc
pop
rcrb
push
jecxz
dec
pop
adc
push
lods
add
lret
arpl
adcb
push
and
scas
addr16
cli
andl
pop
add
imul
add
outsb
jae
repnz
xor
mov
dec
fidivrs
aas
add
dec
mov
nop
pop
dec
add
jb
pop
ret
imul
cmp
jl
and
repz
fwait
lcall
pop
cmp
insl
lcall
push
cli
rcrb
cmp
jmp
push
imul
jbe
and
lea
or
dec
fdivrl
addb
jno
inc
dec
in
scas
dec
pop
pop
hlt
jns
outsb
std
push
andl
mov
xchg
push
dec
arpl
inc
push
outsl
out
mov
mov
xor
ljmp
jmp
out
stos
stc
mov
mov
xor
mov
push
add
popf
add
push
sbb
xor
or
pusha
stc
push
pop
mov
xchg
pop
and
or
in
adc
stos
cmc
dec
dec
mov
jmp
je
pusha
mov
cli
inc
adc
cmp
mov
test
push
and
rolb
mov
shll
lods
and
xor
jno
inc
sub
aad
pusha
push
faddl
jne
repnz
dec
jns
dec
and
xlat
addb
ret
adc
cmpsb
or
dec
into
cmp
xchg
adc
and
in
mov
ljmp
push
jae
jbe
je
into
cmpsl
dec
fwait
mov
test
loope
scas
sbb
jp
jo
je
push
and
sub
add
adc
pop
and
dec
or
cli
push
ja
daa
add
mov
lods
repz
aas
sar
test
arpl
fs
sbb
xchg
jmp
add
mov
loop
fs
push
jge
lea
jo
push
les
xchg
jno
aaa
aam
nop
call
sub
aaa
adcl
mov
jno
xchg
stos
cmp
inc
pop
mov
pop
push
cli
shr
xchg
and
push
jno
lea
sub
mov
adc
ds
pop
cmp
jns
test
pop
push
push
dec
jg
js
fwait
mov
xor
mov
ret
add
scas
push
push
popa
leave
mov
andb
jbe
mov
inc
pop
sbbb
add
jl
test
sub
and
shrl
mov
cmpsb
add
movsl
sub
fstp
push
loop
fsub
into
fwait
mov
pop
mov
and
pop
rcl
dec
imul
loope
aad
push
fdivs
xchg
jnp
mov
movb
pop
mov
cmp
hlt
mov
fdivrl
or
xor
pop
and
xor
mov
mov
fdivs
pop
aad
orb
push
xor
sub
push
test
xor
mov
pop
mov
cmpsb
push
ret
mov
loopne
incb
mov
fisttpl
mov
inc
sbb
cs
insb
sub
cmp
dec
push
pop
shlb
xchg
lret
out
addr16
aas
jne
clc
jp
fisttps
mov
mov
inc
sbb
gs
push
mov
fisttps
cs
inc
xchg
cmp
mov
cs
sub
cmp
xorb
nop
arpl
lds
adc
push
or
xchg
movq
enter
add
mov
mov
into
call
test
add
je
push
xchg
fnstsw
inc
dec
sbb
int3
pop
pop
mov
push
popa
outsb
cmpsl
out
popf
xor
lret
dec
cli
ficoml
pusha
and
or
addr16
shrl
dec
rcpps
cmp
xor
test
loopne
inc
popf
andb
iret
pop
inc
cmp
das
adc
cltd
and
lock
mov
push
outsb
and
or
adc
xor
fsubrs
enter
shll
int3
add
das
fcompl
hlt
xor
lcall
dec
fdiv
sub
xsha1
cmpsb
or
dec
out
and
adc
scas
push
pop
dec
xchg
sahf
dec
or
sub
test
jb
ja
int3
inc
jno
ss
sub
popa
fdivl
sub
jl
frstor
sti
mov
outsb
push
xor
mov
negb
inc
sti
mov
lret
lea
push
neg
addr16
push
mov
jo
sub
adc
sub
aaa
sbb
inc
lret
pop
pop
inc
adc
repnz
xchg
shlb
incl
add
xchg
popa
dec
cli
sti
pushf
sbb
and
mov
add
subb
addb
sub
pop
mov
mov
cli
int3
cmp
and
sbb
dec
nop
out
insl
ret
cmc
xchg
push
inc
fs
out
rclb
arpl
push
fdivl
xor
fdivrl
or
jge
mov
lea
sbb
cmpsb
mov
push
lds
and
add
insl
mov
popa
and
sub
push
pop
dec
lock
mov
ljmp
subl
pop
mov
cmpsb
push
pop
xchg
jg
mov
sbb
push
popf
lea
rsm
dec
xchg
mov
fcoml
adc
cmp
or
cmpsb
popa
push
std
xchg
or
adc
and
mov
mov
sub
adc
pushf
idiv
xor
xor
les
ret
fldl
outsb
jmp
or
scas
jo
pushf
mov
cmp
fwait
pushf
push
xchg
jl
xchg
adc
ret
fadds
push
or
jno
xchg
enter
add
int3
mov
mov
jp
fs
xchg
or
sbb
add
mov
add
je
out
lea
insl
movsb
adc
test
clc
mov
or
xchg
push
imul
cmpsb
inc
popf
int3
and
pop
out
or
ret
mov
roll
jle
add
pop
pop
xchg
pusha
push
cli
jl
push
or
fdivrs
cs
xchg
pop
adc
jae
xor
jl
sub
cmp
ret
sub
or
pop
leave
or
ret
add
inc
and
pop
jmp
nop
dec
pop
ljmp
cli
call
adc
decl
sti
xchg
inc
fiaddl
in
lods
add
fdivrs
loop
adc
push
pop
and
push
lahf
mov
outsb
jnp
arpl
in
sub
inc
add
aaa
xchg
int3
in
popa
bound
rorb
cmp
inc
movsb
dec
or
or
into
aam
ret
xlat
cld
sub
test
jno
cld
pop
push
xor
loop
xchg
in
int3
insl
adc
cmpsb
in
test
das
sub
cmp
cmp
pop
adc
or
lret
add
imul
scas
popf
popa
ret
push
xchg
pop
bound
out
jl
clc
pop
rolb
push
push
or
test
scas
adc
cmp
and
dec
add
push
inc
bound
jnp
addb
push
stc
jg
pop
ja
xchg
sahf
dec
int3
arpl
add
in
popa
push
xchg
aam
push
test
fstpl
in
push
aas
into
rorl
xor
movb
push
and
push
int
scas
adc
lock
xchg
pop
pop
inc
jl
pop
popa
pop
das
inc
into
inc
ret
push
bound
in
sbb
aad
imul
sbb
add
dec
and
decb
jo
out
lret
inc
test
ror
in
adc
mov
push
in
inc
lret
inc
add
sti
and
push
fstpt
jns
or
push
dec
mov
popf
cmp
enter
imul
fxch
mov
xchg
xlat
lahf
jo
dec
adc
mov
cmp
and
xchg
sahf
out
inc
cs
cmp
mov
notl
insl
mov
dec
ret
aad
add
int3
xchg
sbb
jbe
inc
jl
pusha
ret
cmp
xchg
jecxz
aas
xchg
in
aaa
pop
decl
add
mov
add
sbb
rolb
push
mov
stos
pusha
rcl
rcrl
pop
test
int
dec
inc
adc
cmc
mov
xchg
cvtps2pi
fsubrl
and
orl
push
lret
int3
mov
and
cmp
std
cvtdq2ps
add
push
dec
or
push
dec
push
cli
inc
iret
cmpsl
das
and
inc
gs
push
cwtl
outsl
push
xor
cmp
push
pushl
addr16
dec
mov
push
outsb
push
aaa
jg
add
cmp
dec
daa
push
inc
push
dec
out
leave
inc
xchg
push
add
dec
aam
inc
xchg
dec
add
dec
aam
aas
xchg
dec
add
cmp
dec
aam
xchg
cmp
xor
xor
inc
clc
xor
adc
inc
inc
js
cmp
push
cli
mov
mov
stos
imul
popa
addr16
lret
and
ss
jp
movb
fldcw
adc
popa
cmp
iret
add
call
js
fsubp
gs
jns
pop
fsts
adc
adc
and
ret
jb
xchg
add
cmp
add
push
pop
push
lea
mov
stos
testl
test
cltd
xchg
stos
jno
inc
jno
or
fisttpll
mov
jle
daa
add
mov
ret
xor
sahf
add
or
outsb
jle
fwait
and
inc
dec
les
call
dec
inc
dec
mov
push
ljmp
inc
fsubrs
lcall
icebp
loopne
inc
cli
or
in
stos
stos
aaa
jmp
sti
push
lcall
sub
stos
in
jo
add
fwait
sub
pop
es
idivl
cmp
mov
hlt
or
dec
pop
sbb
daa
mov
add
int3
push
mov
mov
cwtl
jno
pop
sub
loopne
xor
mov
pop
outsb
fisttpll
jo
clc
out
and
addr16
adc
inc
mov
mov
dec
orb
push
dec
add
inc
push
jp
dec
xor
and
push
fsub
dec
lods
add
jb
in
call
int3
adc
lret
or
pop
rorb
shl
fs
or
xchg
int3
mov
mov
or
out
inc
or
cwtl
push
jno
adc
sbbl
cli
cld
add
fiadds
insl
orl
pop
or
call
jl
jo
dec
lcall
fcomp
jns
dec
mov
or
mov
xchg
cmp
inc
mov
or
dec
dec
shlb
pop
and
push
pop
das
aaa
mov
pop
jno
push
xor
lds
mov
push
mov
mov
punpcklbw
insl
add
add
flds
repz
or
std
inc
push
rclb
adc
push
adc
inc
mov
push
sbb
inc
push
rcl
into
adc
jae
pusha
xchg
int
adc
fs
test
sbb
push
pop
xor
cmp
mov
or
push
das
or
mov
popa
test
adc
cmp
add
fisttpll
dec
inc
aad
inc
aas
imul
sahf
into
xchg
ljmp
jns
mov
adc
inc
cmp
fcmovne
outsb
ds
test
pop
cld
nop
nop
or
pop
les
test
cmpsl
scas
enter
xchg
jno
push
jge
stos
jmp
pop
or
inc
into
push
movsb
sub
out
mov
and
adc
sahf
mov
mov
jno
leave
sbb
roll
adc
inc
cmp
test
dec
dec
push
fidivrl
or
inc
and
test
imul
inc
push
push
mov
adc
adc
mov
push
inc
push
mov
rcll
xchg
sbb
xchg
jno
stos
pop
fmuls
fprem
xor
popf
cmp
repz
or
jmp
pop
into
in
out
test
in
xor
push
nop
and
push
sbb
pop
mov
cmp
and
sbb
out
lret
data16
fdiv
pop
push
pop
loop
dec
add
cmp
out
sub
cli
je
sbbl
lret
stos
mov
andb
adc
pop
in
scas
rcl
sub
add
mov
mov
pop
scas
push
or
push
dec
pop
mov
imul
rorl
iret
aam
pop
mov
pop
arpl
addr16
xchg
xchg
repz
out
popa
cwtl
push
outsl
pop
in
insl
flds
xorl
adc
ljmp
and
and
sti
push
inc
in
xor
mov
into
and
fmull
fsubl
lds
lds
mov
cmp
test
fisubrs
das
cmp
ja
decl
sarb
or
adc
outsb
mov
pop
push
and
popa
dec
outsb
xchg
lods
inc
inc
in
pop
iret
push
inc
adc
iret
out
iret
xor
pusha
in
arpl
test
cmpsl
iret
movsl
mov
add
jmp
push
test
mov
add
cltd
cmp
dec
sbb
jp
jle
add
pushf
adc
push
mov
add
push
incb
mov
into
sub
sbb
in
dec
in
add
dec
push
jno
mov
cmp
ret
loopne
adc
in
or
in
outsb
jb
inc
cmc
repnz
fs
or
rorb
mov
cs
lock
call
xor
push
mov
push
in
das
mov
mov
adc
xchg
lea
ror
fcmovbe
enter
xchg
lcall
jb
jp
dec
call
adc
push
pop
fstl
adc
pop
mov
push
push
pop
sahf
sub
dec
scas
cs
mov
lods
mov
sbb
fwait
xor
xchg
add
push
xchg
adc
in
add
adc
scas
dec
inc
mov
sub
shll
cmp
pop
ss
sbb
mov
call
xchg
jb
int
popa
and
sarb
scas
mov
jp
jae
pop
dec
dec
cmpps
fcoml
sbb
jecxz
pop
outsl
push
xchg
js
out
aas
cld
sbb
and
movsb
std
scas
mov
xchg
and
cmp
adc
aad
cmp
adc
orl
fisubl
lret
inc
cltd
mov
or
repnz
mov
xor
inc
insb
sti
ret
test
sbb
xchg
or
sbb
call
in
pop
in
jno
dec
jb
rorl
popa
nopl
and
mov
scas
sub
cli
in
xchg
xor
mov
inc
pop
ja
repz
cmp
push
adc
cs
sub
dec
push
sarl
pop
cli
enter
xor
cmpsb
dec
inc
bound
push
lret
pop
push
outsb
sbb
fisubrs
adc
jbe
lret
add
jl
pop
mov
xchg
out
xor
mov
add
popf
data16
gs
lock
rcr
pop
push
out
push
mov
inc
stos
adc
xchg
ss
fnsave
test
enter
push
stos
dec
repnz
push
leave
push
aaa
lahf
pushf
dec
mov
inc
es
ss
stos
jne
jg
cmp
popa
push
dec
es
ss
sahf
xchg
test
rclb
aaa
sub
jecxz
push
jne
shl
cwtl
adc
inc
fstp
mov
scas
mov
dec
push
xor
pop
je
fistpl
shl
bound
mov
xchg
adc
popa
fmull
arpl
ret
jno
popf
mov
and
mov
jg
mov
cli
mov
mov
out
das
inc
adc
aaa
iret
dec
dec
fstps
iret
xlat
mov
nop
pop
add
push
jg
cmp
loop
or
pusha
mov
or
sar
inc
push
rcrb
jno
out
push
add
cmpsl
dec
stc
inc
enter
push
xor
scas
mov
enter
jl
ficoms
sbb
aad
fistl
jae
mov
add
cmc
sbbb
ja
sbb
mov
ret
xchg
cmpsb
ss
test
add
add
rorl
mov
cmp
pop
mov
sbb
dec
enter
rorl
scas
add
inc
pushf
in
divl
lea
sbb
fadd
xchg
cmp
and
cmp
inc
into
popa
xor
imul
sub
fstpl
push
movl
adc
adc
fyl2x
pop
mov
pop
call
popf
pop
into
sub
xchg
fcoms
push
lret
xchg
insb
scas
xchg
call
mov
inc
mov
push
ret
enter
or
stc
pop
mov
gs
or
shlb
mov
call
push
inc
frstor
adc
fisubrl
sub
xrelease
outsl
stos
xlat
mov
inc
fidivrs
jmp
push
xor
into
ret
lahf
into
jne
mov
xchg
or
adc
das
std
sub
push
icebp
cmc
fdivrs
xlat
xchg
and
sbb
sbb
add
aaa
pop
cltd
cwtl
jno
push
pop
and
xchg
mov
add
icebp
or
cwtl
lahf
ficompl
hlt
popa
lea
ja
mov
xor
in
js
cwtl
dec
test
jno
and
fnsave
push
inc
mov
in
inc
mov
andl
jo
stos
pushf
ljmp
mov
cmpsl
jmp
popa
dec
int
clc
adc
pop
sar
cmpsl
sub
sbb
cmpsl
mov
push
ret
cmp
pop
cwtl
into
push
dec
add
adc
in
push
fcomps
dec
outsb
push
les
jl
mov
inc
pop
lods
mov
pop
inc
shll
pop
int3
mov
push
gs
inc
loop
adc
out
mov
add
adc
pop
mov
sub
aad
rclb
push
mov
outsl
and
add
xchg
inc
fnstenv
repz
outsb
jl
loop
leave
sub
and
lahf
push
pop
pop
subl
jmp
cmp
andl
pop
or
xor
mov
xchg
push
stos
and
inc
adc
jae
sbbb
aad
pop
cmp
inc
jmp
sbb
pop
es
lcall
adc
test
nop
xor
repnz
lds
cmp
adc
dec
les
cmp
sub
add
flds
imul
scas
inc
sbb
adc
inc
push
lock
aam
enter
mov
xlat
dec
sbbb
cmpl
xor
push
pop
xchg
xor
fmuls
inc
popa
nop
dec
push
fs
enter
push
scas
shll
test
push
or
scas
adc
addr16
dec
or
dec
in
adc
push
xchg
adc
aas
cltd
aaa
sub
repnz
nop
mov
cmp
xchg
nop
and
xchg
aam
jo
shr
add
movsb
mov
push
push
pop
sbb
add
inc
fcomi
mov
or
rcrb
dec
ficompl
sbb
outsb
mov
lods
sarb
jle
lock
addr16
inc
sahf
sbb
inc
cld
gs
or
sub
pop
shrl
pop
int3
sahf
adc
mov
into
and
push
ds
ja
sub
add
fs
push
sahf
or
ret
movsl
push
sbb
aam
xor
and
xor
int3
les
and
and
or
sub
in
push
lahf
pop
js
rclb
faddl
pop
outsb
push
call
lret
mov
and
iret
mov
adc
or
stos
in
shrb
adc
fcompl
gs
mov
adc
push
and
adcb
dec
cmc
inc
pop
push
push
push
jo
js
pusha
dec
sub
inc
arpl
popf
inc
loopne
dec
gs
and
and
movsl
or
push
or
dec
ljmp
adc
adc
jne
in
popf
mov
xchg
xor
push
insl
dec
test
sti
mov
nop
push
test
in
inc
pop
fdivs
dec
dec
cmp
daa
pop
dec
lods
sub
mov
popf
fstpt
xchg
dec
into
sub
push
rcl
adc
xlat
mov
cmp
push
in
mov
pop
mov
jge
dec
test
push
mov
sub
cltd
pop
push
aam
scas
dec
pop
clc
jecxz
dec
aas
add
cmp
push
outsb
sub
jae
xchg
lret
add
pop
xor
xchg
lea
cmpps
mov
or
cmp
jg
scas
xchg
inc
cltd
icebp
popf
outsl
fstps
xchg
push
pop
pop
jp
pop
out
and
icebp
test
popf
out
and
sub
or
xor
clc
inc
pop
outsl
shl
mov
dec
push
mov
ficoml
jae
adc
mov
jns
cmp
fisttpl
dec
lds
in
hlt
fnstsw
or
sbbb
nop
mov
pop
test
insb
das
lods
mov
fldl
fisttpll
and
mov
pop
mov
pop
inc
mov
fcomp
outsl
bound
inc
xchg
inc
inc
push
xchg
sub
cmp
rcll
sbb
scas
test
jno
mov
cld
xchg
dec
inc
sub
les
and
add
inc
mov
add
insl
in
mov
mov
xchg
xor
add
pusha
xchg
jno
add
jmp
stc
lcall
dec
pop
sbb
shrb
push
fsub
or
jl
lret
in
xchg
push
daa
or
inc
xor
inc
push
sbb
or
int
mov
sti
mov
and
std
enter
inc
xchg
jg
lods
dec
std
pusha
jge
inc
loope
addb
push
mov
daa
ficoms
loope
cmp
push
cmpsl
jae
pop
pop
sbb
fdivrl
xchg
push
mov
fstpt
xor
jbe
int3
test
mov
out
or
test
fcomip
dec
fxtract
ja
cli
in
hlt
or
cmp
or
cmp
xorb
xor
mov
enter
shr
dec
out
loope
or
movsb
andl
push
clc
dec
jnp
test
push
or
daa
xor
add
xchg
push
cmpsb
test
sbb
add
or
push
int3
and
int3
je
adc
stos
cwtl
push
jno
sbb
jae
fcmovnu
pop
push
fsubl
jno
push
or
mov
and
pop
dec
sub
pop
aaa
in
or
inc
pop
mov
iret
in
inc
je
inc
jp
mov
faddl
das
push
lock
call
inc
mov
mov
js
into
xchg
pop
and
dec
iret
cld
inc
xlat
jecxz
xor
cmp
and
js
das
push
incl
push
inc
sti
orl
pushf
mov
cmp
jb
scas
fldt
sbb
int3
loope
in
pop
push
pop
sub
jno
mov
sub
dec
push
in
stc
jnp
jnp
ret
sub
cmp
outsb
mov
cwtl
test
pop
ljmp
push
mov
lahf
jmp
aas
in
mov
xlat
cld
stos
pushl
mov
dec
push
jno
sbb
xchg
mov
and
jge
imul
mov
xor
jns
ss
sub
inc
gs
pop
cvtps2pd
lret
ds
imul
popa
inc
fldenv
js
aas
fadds
les
or
std
dec
repz
push
push
ljmp
aaa
test
dec
sbb
dec
js
or
int
mov
mov
fs
fldcw
dec
push
push
fcmovnu
pushf
mov
jle
cmp
in
or
adc
push
das
cmp
ficoml
mov
testl
xor
push
sub
and
in
int3
and
insb
push
inc
stos
mov
xor
push
cmovo
jl
out
pop
outsb
xchg
push
xorl
clts
pop
divl
pop
pop
pop
inc
rorl
dec
adc
insl
stc
jns
fidivl
ljmp
or
mov
or
jae
rcrl
mov
and
mov
mov
bound
fnstsw
mov
xorl
inc
adc
mov
leave
pusha
jle
sub
inc
shrb
iret
mov
ja
repz
xlat
or
xchg
pusha
inc
dec
xchg
clc
jl
fwait
xchg
jmp
out
pop
add
inc
nop
pop
add
out
lods
adc
adcl
pop
rcr
rcrl
mov
mov
push
jne
mov
mov
insl
or
sbb
or
sub
mov
xlat
xchg
sahf
jne
std
mov
dec
dec
rorb
icebp
cmp
inc
test
cmp
fisttpl
push
add
xchg
cli
dec
and
xor
insl
mov
fsubs
adc
pop
in
mov
or
and
adc
fnstsw
out
pop
mov
int3
inc
dec
sbb
push
into
lods
mov
in
add
add
sahf
sahf
ja
mov
xchg
pop
lds
aaa
inc
mov
jle
lret
pop
inc
or
add
movsl
stos
jno
xchg
pop
sbb
inc
in
sub
adc
add
imul
test
xchg
jle
cmc
arpl
test
cmp
movsb
push
std
push
in
dec
popa
and
or
xchg
cli
pop
mov
xor
int
mov
inc
sub
sub
sarb
fnstsw
movsl
sub
lret
test
call
movsb
lcall
fstpl
push
xorb
add
mov
or
xchg
xchg
cli
dec
and
push
xchg
aad
ficoml
jl
mov
push
lock
pop
dec
in
dec
xchg
fldl
sub
arpl
inc
iret
cmp
pop
mov
adc
mov
mov
push
add
mov
movsl
dec
fs
ret
adc
andb
popf
call
enter
aas
inc
cmp
inc
push
cmp
push
xor
fs
add
into
push
xchg
inc
iret
sbb
xchg
es
ss
xor
adc
jns
lret
xlat
push
mov
lahf
add
jecxz
int
adc
outsl
fsts
xlat
cmp
lret
aad
pop
jno
mov
into
mov
or
es
adc
xor
dec
icebp
loop
inc
cmp
sti
rclb
sbb
push
push
xchg
imul
and
insl
mov
mov
sub
pushf
dec
adcl
shlb
test
pop
jno
and
in
les
adc
jp
std
add
cmp
addb
jmp
xchg
pop
mov
mov
pop
pop
outsb
sub
shl
mov
xchg
rep
gs
inc
inc
nop
stos
mov
inc
mov
insl
inc
mov
cld
sbb
or
adc
inc
imul
push
dec
cmp
das
and
push
cmp
notl
xchg
push
or
rcll
dec
std
push
or
push
and
cmp
jne
imul
jns
xchg
into
mov
lea
leave
xorb
inc
test
cwtl
inc
jno
sbbb
and
jmp
inc
push
jge
mov
mov
lahf
mov
nop
pop
adc
aas
loope
push
sbb
cmp
push
sub
outsl
xor
scas
dec
mov
pop
sahf
xor
push
scas
jbe
xor
jno
jg
xchg
lret
jmp
push
cmpsl
jbe
and
das
mov
and
jecxz
jne
push
push
jns
jge
loope
adc
aad
rcl
push
int
leave
mov
lahf
rcr
add
pop
inc
jno
sahf
nop
add
mov
shrb
cmpsb
mov
push
pop
sub
xchg
mov
pop
sti
mov
push
call
int
xchg
add
subb
pop
cli
push
inc
dec
lods
inc
adc
in
jb
add
pop
outsl
aaa
inc
xchg
cmp
dec
aam
pop
lret
inc
cmp
pop
sub
jnp
adc
push
dec
add
dec
adc
and
push
mov
xor
dec
inc
mov
loope
push
mov
int3
inc
pop
iret
inc
inc
lock
cli
mov
xchg
mov
pop
into
mov
mov
aam
rcll
fbstp
vphsubdq
or
lahf
cmp
mov
dec
sarl
add
fmul
inc
int
add
jns
sbb
pushf
loopne
mov
out
sti
xor
orl
xor
push
jno
jbe
add
sub
xchg
mov
cli
fisubrs
dec
jle
mov
push
and
ffreep
cld
inc
or
adc
adc
adc
xlat
push
es
loop
fidivs
add
repnz
mov
add
pop
fstpt
out
push
xor
xchg
js
aas
xor
xor
lods
or
fadds
mov
push
call
lock
cmp
loopne
out
loopne
jno
jns
iret
cmp
jnp
pop
lahf
mov
sub
es
outsl
pop
rcrb
faddp
fisubl
cmp
daa
test
cltd
xor
outsb
sub
pop
cld
pop
pop
xchg
faddl
dec
cld
jno
pop
xor
outsl
push
sub
outsl
pusha
inc
dec
sbb
out
lret
dec
inc
inc
xchg
dec
in
inc
push
pop
jbe
mov
fmuls
in
cmp
ret
inc
cmp
mov
fcoms
push
add
mov
push
mov
cmp
call
int
es
and
push
shll
ljmp
push
mov
inc
aam
sahf
dec
cmp
or
sahf
mov
mov
out
ja
add
push
adc
lret
sub
popa
in
les
push
pusha
pushf
mov
xor
outsb
mov
xor
fnstcw
and
mov
sub
pop
xchg
adc
jmp
push
xchg
loope
in
insl
int
call
gs
addr16
xor
dec
sub
push
gs
movsb
pop
adc
inc
lahf
mov
popa
mov
adc
push
lret
lds
nop
cmp
or
lods
lods
xchg
mov
adc
mov
pop
pop
and
cli
pushf
pop
cwtl
jno
ror
xchg
rorl
mov
das
jo
lahf
xchg
cltd
jne
pop
das
mov
popf
mov
mov
lods
orb
mov
jo
test
inc
adc
jns
sbb
or
inc
or
mov
dec
movl
adc
in
lds
out
cs
cwtl
xor
dec
inc
fstps
sbb
mov
fmuls
push
or
lcall
in
mov
pop
dec
push
adc
inc
daa
jo
ds
xchg
xchg
roll
xchg
pop
add
lsl
mov
or
das
jne
or
cmp
ds
in
aad
int
es
cmp
cmc
movsl
scas
inc
dec
push
int
mov
icebp
lock
gs
add
jo
mov
lcall
jo
mov
sub
xlat
pop
scas
nop
add
jbe
xor
enter
mov
out
pop
push
jecxz
dec
aas
dec
jl
cmp
inc
adc
pop
pop
into
fistpll
out
sbb
inc
rorl
enter
pop
push
xchg
popa
pop
mov
mov
shlb
sbb
pop
mov
push
push
cld
cs
push
push
pusha
in
xchg
pop
inc
aad
jmp
in
leave
dec
or
shl
je
sbb
inc
idivl
lret
or
adc
pop
fs
sub
mov
into
invd
fistpl
cmp
jo
mov
lea
inc
dec
in
in
cmp
xchg
dec
and
add
cmp
adc
jecxz
xchg
jge
adc
adc
dec
bound
jl
and
mov
or
dec
in
and
test
aas
add
inc
mov
dec
imull
fildll
cmpsl
out
and
dec
rcrb
jae
pop
jne
push
imul
cs
test
jno
sub
inc
sarl
cmp
dec
sbb
dec
cmp
xor
les
aaa
fldenv
pop
xchg
aad
icebp
lea
cmc
imul
rorb
mov
sbb
aam
xor
push
jo
adc
xor
dec
inc
loope
dec
or
cli
out
xor
mov
les
rcl
xor
sarl
inc
stos
int3
add
sbb
cs
sub
add
ret
push
negb
out
inc
sbb
push
and
push
scas
inc
xchg
cmp
fwait
daa
shlb
add
lret
add
mov
mov
sti
xchg
loope
xor
mov
add
ja
loop
test
dec
xor
adc
pop
repnz
sub
pop
stos
sub
cmp
test
scas
shl
dec
fdivl
xchg
push
add
jmp
xorl
nop
dec
adc
stc
sub
xchg
pop
xchg
add
dec
inc
fdiv
cmp
mov
dec
xor
lcall
es
sbb
push
js
int
push
dec
dec
mov
jne
mov
inc
add
adc
xor
fidivrs
rclb
inc
dec
mov
icebp
lahf
ret
or
sbb
mov
popa
inc
dec
shr
mov
push
dec
or
pop
inc
xchg
inc
adc
and
sub
aas
sub
xchg
sbb
dec
pop
xor
pop
pop
fnsave
pop
xchg
adc
add
push
mov
mov
hlt
lock
inc
pop
lea
push
repz
mov
pop
hlt
push
stos
cmc
sub
sub
xor
cwtl
in
rolb
xlat
pop
push
sbb
mov
sarb
cmp
enter
mov
adc
xchg
cli
pusha
pop
sub
out
lds
mov
xchg
cmp
mov
sbb
push
pop
mov
sub
outsb
cmpsl
and
mov
rcll
cmp
aad
jno
mov
mov
cmp
push
sbb
sub
and
stos
pop
adc
lcall
mov
dec
pop
xchg
add
sub
idivl
in
ret
xchg
push
fcomps
in
xchg
dec
adc
loop
push
mov
and
scas
jecxz
repnz
in
into
xchg
adc
js
xor
cld
loopne
xor
test
cwtl
cmc
xchg
aad
sbb
jle
adc
mov
dec
push
shl
mov
jo
aas
pop
and
push
ja
xor
daa
arpl
in
cld
xchg
or
mov
pop
jl
push
add
rorl
fisubl
stc
or
into
addl
pop
test
stos
pushw
pop
adc
push
out
sub
out
lods
cmp
aam
pop
cld
call
shll
loopne
sahf
push
xchg
lcall
dec
sbb
addr16
test
bound
lods
jecxz
jns
or
push
xlat
xlat
mov
dec
or
mov
add
jle
imul
inc
push
sub
ds
in
pop
mov
xor
fs
push
sub
jne
lock
inc
jge
xchg
cld
fldenv
cwtl
add
inc
xorl
jno
fisubl
jae
inc
push
cmp
outsb
ss
stos
xchg
in
aaa
xor
xchg
daa
xor
fbstp
cmp
push
adcb
jo
test
jg
mov
ret
sahf
and
aad
repz
cmp
push
mov
or
fcoms
popa
xchg
pushf
inc
sbb
stos
mov
pop
sbb
mov
mov
out
testl
test
cli
mov
pop
mov
cs
test
and
or
mov
jge
cld
mov
in
push
int
dec
insl
xchg
push
test
jno
push
push
and
sbb
inc
fstl
ja
add
loop
lret
mov
add
std
xchg
mov
pop
cmp
pop
jo
add
push
and
out
inc
or
test
xchg
mov
mov
xchg
jno
cmp
cltd
ljmp
adc
nop
mov
cs
sbb
inc
jno
lcall
out
repnz
add
adc
repz
jne
imul
insl
mov
cltd
mov
push
mov
adc
lods
xor
pop
shrl
and
lahf
mov
pop
in
outsb
in
lret
shll
fistl
mov
push
xor
cli
mov
sub
xor
jmp
sbb
and
sub
push
setle
in
out
add
iret
movb
pop
push
sub
aas
popa
or
pop
sahf
popf
icebp
lods
and
mov
bound
rclb
in
cmp
xor
gs
sbb
pop
arpl
cmc
popa
fdivs
rclb
ret
arpl
add
outsb
shll
stos
dec
adc
out
loope
inc
pop
mov
add
or
dec
sub
lahf
loop
push
push
negl
imul
rol
scas
pop
xlat
decl
loop
mov
test
lods
pushf
adc
mov
iret
fcoml
lcall
sub
inc
xchg
pushf
lcall
mov
sbb
mov
mov
mov
or
lods
pop
fyl2x
ja
xor
pop
add
and
lds
rcrl
dec
push
cmp
pusha
divb
xor
movsb
adc
cltd
adc
fwait
xor
daa
fistl
por
inc
mov
dec
xchg
hlt
sub
imul
add
imul
idivl
movsb
xchg
pop
inc
push
enter
adc
push
gs
jno
sbb
fldenv
mov
dec
push
rcl
lods
iret
cmpsl
leave
xchg
shll
adc
gs
mov
adc
lcall
push
push
xlat
jae
xchg
popa
pop
inc
dec
es
pop
dec
xor
xor
push
inc
pop
pop
es
push
mov
push
scas
mov
push
rorb
or
stos
imul
sbb
icebp
pop
or
leave
xchg
sbb
cmp
push
push
xchg
jnp
outsl
cwtl
xchg
pushf
mov
sti
push
xor
and
fildl
js
insb
and
add
cmp
mov
mov
xchg
cmpsb
adc
jmp
lret
xor
test
in
push
pop
jge
outsl
enter
mov
outsb
push
enter
sub
or
loop
popf
je
inc
in
and
xor
testb
inc
jns
dec
fnstenv
in
rorl
icebp
and
jno
testl
repz
cmp
inc
je
stos
xor
and
mov
aad
out
sbb
sbb
push
test
test
sub
call
dec
or
or
test
cltd
dec
and
arpl
mov
push
call
jg
or
retw
pop
inc
ja
dec
into
xchg
test
add
test
stos
lds
int3
xchg
push
shll
adc
pop
repz
cli
pop
sahf
inc
sub
fcmovbe
repz
xor
rcl
inc
xor
insl
sub
inc
icebp
mov
pop
es
mov
popa
pop
call
fcmovnu
pushf
pop
dec
test
movsb
fdivp
lret
lcall
push
movsl
pop
rcr
jno
sbb
fs
scas
stos
mov
push
and
es
cmp
inc
jno
gs
mov
mov
jo
insb
mov
popf
mov
pusha
sub
cmp
inc
pusha
jno
addl
daa
loope
into
jmp
xchg
lods
push
or
lcall
adc
insb
add
inc
pusha
mov
inc
pop
fcoms
or
push
and
mov
and
pop
fcomps
bound
out
dec
jne
loop
int3
negl
ret
jno
ss
outsb
iret
aaa
pop
push
mov
cmp
aas
cs
xchg
sub
fisttpl
stos
dec
jo
or
dec
cmc
daa
add
int3
out
sub
inc
push
add
sub
xor
out
imul
mov
cmpl
aam
into
mov
sahf
fmul
jo
out
xor
inc
xor
dec
shll
mov
cmp
in
jae
testl
xor
inc
sbb
pop
mov
cmp
lea
pop
add
inc
xchg
adc
jmp
dec
sbb
inc
fimuls
pop
repnz
push
daa
daa
jno
add
mov
outsb
and
aaa
mov
mov
xchg
push
xor
test
gs
fsubr
add
mov
cmp
dec
movsb
in
dec
sysexit
and
scas
lret
jp
adc
xor
mov
cmp
cmc
dec
push
aam
scas
insl
sub
sahf
mov
xchg
lods
cmp
test
dec
inc
xchg
inc
mov
in
shll
lcall
adc
add
mov
pop
int3
and
enter
outsl
mov
adc
inc
push
xor
data16
mov
xor
cs
xchg
xchg
and
rcll
or
stos
and
and
out
dec
pop
push
imul
cli
add
daa
iret
cmp
stos
cmpsl
pop
and
add
xchg
in
push
and
adc
xor
push
movsb
addr16
xor
xchg
cmp
insl
xor
daa
xor
popf
mov
push
cltd
xor
mov
dec
pop
jl
dec
cld
cmpsb
rorb
mov
cltd
jmp
mov
jno
push
aas
jo
les
and
cmp
mov
cli
mov
add
mov
lods
mov
adc
sahf
sbb
adc
and
jb
xor
mov
xorb
xor
mov
sub
add
mov
add
insl
pushf
jge
adc
push
ljmp
xor
xchg
stc
lods
inc
ficomps
lods
jp
int3
jecxz
xor
or
sub
inc
call
push
aas
sbb
shll
arpl
adc
xor
scas
mov
mov
jno
mov
mov
mov
fs
dec
ret
insb
cmp
pop
lock
lsl
sbb
adc
sbb
add
fbstp
inc
fsts
adc
jmp
jns
lcall
test
xor
cli
in
mov
mov
icebp
inc
and
test
xchg
rcl
cmp
popa
cmp
aam
imul
dec
int
adc
aad
jle
xor
iret
push
es
out
push
push
les
or
and
shrb
rcll
movsl
push
add
test
cmp
mov
loop
pop
fadds
int3
sub
sar
fildl
xor
push
pop
and
out
add
add
cmp
rcrl
outsl
cmpsl
repnz
sub
mov
xor
sti
lret
enter
jb
cmp
jno
cmpsl
mov
sbb
pop
in
jnp
sbb
lahf
mov
loopne
mov
lds
aad
in
push
pop
cmp
rclb
bound
sbb
int3
push
insb
nop
repz
or
lds
xchg
adc
pop
sbb
jns
sub
js
push
rcrl
cmp
cmc
jge
cmp
xor
mov
adc
push
cmpsl
jecxz
or
jge
in
dec
jno
and
or
pusha
in
ja
xchg
jecxz
cs
repz
shr
inc
in
into
lahf
cli
pop
sbb
sbb
cs
cs
mov
sahf
imul
fwait
xchg
cmp
cmp
xor
sbbb
xor
push
lods
mov
inc
jl
inc
jmp
ljmp
mov
inc
mov
fcoml
sub
sbb
dec
push
test
ja
fsubrl
insl
loop
adc
xchg
pop
mov
ja
ljmp
cmp
out
pop
inc
lea
adc
xchg
or
pop
jne
lcall
xchg
pusha
cld
jne
xor
jmp
negb
int3
add
adc
in
cmp
mov
les
pop
sbb
mov
or
loop
pop
test
xor
fcoms
inc
idiv
and
add
ret
push
aad
stos
xor
in
pop
add
or
xor
sbb
push
shll
pop
outsl
dec
sub
arpl
nop
out
push
stos
shl
mov
bts
in
das
sahf
sub
xchg
mov
mov
mov
andl
pop
xlat
pusha
cmc
fidivl
out
roll
and
xlat
push
in
or
inc
shrl
pxor
nop
or
fmulp
inc
xor
stos
add
sub
and
lret
jmp
or
or
int3
adc
sub
adc
xlat
push
push
push
into
cmp
adc
cs
dec
lcall
adc
xlat
xchg
in
leave
fdivl
adc
loop
das
mov
jbe
addr16
cmp
int3
in
pop
int3
filds
out
ret
outsl
adc
xchg
lds
xchg
mov
in
ret
popa
pop
mov
adc
rclb
movsl
adc
push
pop
dec
mov
or
jno
pop
lods
std
and
inc
repz
cwtl
out
icebp
cmc
xchg
push
jno
adc
imul
jno
ret
inc
dec
lcall
pop
push
insl
jno
fwait
jge
push
stos
xchg
popf
push
into
push
xlat
stos
add
cld
popa
sbb
popf
sub
std
out
sub
xchg
inc
stc
ret
cltd
das
ja
sub
jge
loope
lods
popa
inc
xchg
out
int
mov
js
sbb
cmove
pop
mov
pop
pop
lsl
push
xor
mov
mov
push
out
xchg
mov
dec
fnstenv
daa
popf
pop
sti
xchg
add
xor
mov
pop
test
pop
push
dec
fnstsw
jg
adc
adc
mov
data16
dec
sbb
mov
mov
jnp
push
push
xor
in
xor
pop
outsl
scas
in
push
fcomps
cltd
shrl
jno
adc
call
inc
adc
xchg
mov
push
ds
fisubs
mov
stos
aas
inc
xor
pop
out
fcmovb
int3
add
or
ljmp
mov
pop
and
xchg
xchg
mov
add
out
mov
xor
cmpb
push
sbb
jo
je
cmp
pop
xchg
pop
push
or
push
in
cmp
scas
cs
cmp
sbb
out
shl
icebp
cmp
xlat
jl
jo
mov
fnstsw
sarl
xor
stos
fcmovb
scas
xchg
inc
rorl
sub
icebp
pop
push
aad
aam
lahf
dec
push
push
fnsave
inc
mov
mov
inc
xchg
shrl
push
lods
inc
decl
inc
insb
add
pop
stos
push
or
push
push
scas
imul
sti
js
xchg
in
faddl
jb
int3
add
mov
inc
rorb
sub
jns
test
testl
xor
cli
jge
je
nop
push
in
aaa
dec
push
add
sub
imul
inc
mov
jge
out
das
pop
rclb
dec
outsb
sbbl
fadds
push
xchg
mov
pop
add
push
pop
ja
inc
cmp
sub
ss
cmp
sub
inc
push
call
lods
jne
adc
jne
mov
ljmp
push
aad
outsb
xchg
je
aad
pop
jno
scas
cmp
mov
xor
inc
testb
adc
lock
in
cld
shrb
push
stos
in
insb
iret
inc
jb
or
or
jns
insb
outsl
pop
in
cmp
cli
call
inc
sbb
or
nop
sub
and
cmp
sub
in
pop
jnp
xor
sbb
outsb
and
push
in
cli
xchg
ds
fcomps
loope
aam
out
xlat
mov
clc
xchg
sub
mov
or
in
sub
outsb
pop
pop
add
mov
pop
pop
pop
or
pop
add
jg
movl
mov
mov
push
xorb
jo
jecxz
gs
daa
sbb
sub
mov
nop
aad
lods
popf
imul
inc
lcall
xor
negl
inc
dec
push
int3
scas
sub
orl
push
cli
adc
jp
pop
jno
lock
lea
and
lcall
addb
or
inc
ja
leave
shlb
adc
sbb
popa
or
add
add
icebp
dec
push
add
and
xor
test
xchg
and
mov
mov
shrl
push
scas
ret
daa
sub
adc
dec
pop
int3
test
add
cmp
les
xlat
dec
sti
rorb
mov
fcomps
mov
mov
dec
mov
add
xchg
adc
xor
incb
pop
int
and
pop
dec
mov
sbb
pop
inc
xor
mov
scas
cli
fwait
sbb
jbe
sbb
mov
mov
shll
jecxz
lahf
lods
scas
add
lret
mov
fnstcw
mov
add
push
fdivrl
sti
and
sbb
outsl
insl
adcl
loop
cmc
push
and
xor
pop
in
pop
rorb
ret
push
stc
imul
out
dec
xchg
lcall
enter
repz
push
gs
iret
fucomp
push
push
cmc
clc
mov
mov
sub
cs
adc
adc
add
orl
arpl
jo
iret
ja
mov
pop
and
xlat
sub
dec
icebp
and
js
mov
push
jo
adc
sbb
movsl
sbb
fstpt
xlat
lock
add
jmp
lahf
cmpsl
inc
sub
pop
enter
sub
jge
inc
push
push
enter
mov
pop
mov
xor
push
inc
pop
inc
out
dec
xor
jmp
push
into
dec
jl
mov
push
and
push
jo
push
dec
pop
or
dec
cmp
xchg
jge
xor
insl
loop
mov
push
adc
rclb
dec
outsb
xchg
xor
fs
inc
outsb
mov
test
outsb
xchg
dec
rcl
inc
aaa
inc
cmp
sarb
aam
popf
icebp
sbbl
lahf
add
popa
pop
dec
ret
cmpsl
popa
repz
sbb
jno
mov
and
xor
adc
push
insb
sbb
filds
in
mov
int
dec
rorb
pop
test
outsl
stmxcsr
clc
imul
adc
xor
pusha
sti
notb
jmp
test
test
sti
or
call
pop
xchg
aam
negb
sub
sub
inc
out
xor
and
movsb
call
adc
adc
dec
sbb
lea
sar
cld
mov
pop
push
inc
jns
enter
add
fcmovu
adc
pop
in
pop
xor
sti
fsubrl
and
mov
xchg
out
dec
int
push
adc
shl
xchg
test
pop
jns
cmpsb
xchg
mov
sbb
xlat
test
fdivr
fisubrl
pop
pop
inc
xlat
inc
fs
jne
or
test
sub
shr
inc
into
inc
addl
std
mov
xor
test
nop
negl
push
or
pop
adc
sub
clc
xchg
and
mov
mov
call
jo
stos
nop
inc
add
dec
adc
dec
add
xchg
adc
mov
outsb
fldenv
stc
sub
and
lldt
adc
mov
or
fsubrs
mov
mov
imul
testl
icebp
adc
es
sti
orl
mov
or
in
xchg
in
jbe
in
hlt
dec
in
aad
pop
pop
mov
xor
cmp
lods
lahf
cwtl
jno
pop
pop
das
fwait
cmp
in
sbb
xor
pop
fsubrp
sti
cs
icebp
xchg
jo
push
aam
cli
mov
push
sub
sbb
addl
mov
or
mov
or
imul
gs
movswl
or
xor
sub
test
gs
fnstcw
out
cmp
jns
psubd
popa
scas
sbbl
insl
pushf
stc
mov
xor
mov
add
popa
pop
rcl
lea
inc
add
sbb
leave
stos
daa
push
add
and
mov
incb
mov
ja
rolb
dec
dec
inc
mov
inc
or
pop
dec
rorl
adc
cmp
aaa
aaa
cmpl
mov
push
aad
repz
jg
dec
or
cmp
mov
enter
in
lds
pop
cmpsl
cmc
push
gs
mov
aaa
xor
mov
cwtl
aaa
jns
jl
fidivs
dec
rep
int3
adc
adc
pop
adc
cmp
cmp
xchg
add
aas
xor
pop
xacquire
or
gs
lcall
into
add
fstps
int3
adc
rcll
pop
jne
rolb
pop
xor
in
sub
loope
add
aaa
notl
lds
jecxz
add
dec
inc
push
cltd
push
pop
nop
lds
dec
outsb
cmp
sub
pushf
adc
cmp
lret
ret
fnsave
rcrl
aaa
fwait
lods
test
orb
mov
fdivr
lcall
dec
inc
push
outsl
ss
jns
jns
test
fcoml
jne
dec
push
cmpsb
dec
ret
fisttpll
imul
rcl
cmp
cmpl
adc
aam
pop
test
xchg
es
test
mov
jecxz
cmp
or
pusha
ret
fs
gs
fcmovnu
sbb
dec
inc
int3
sahf
push
cli
cmpsb
out
pushf
popf
mov
sub
push
push
or
pop
mov
popa
jo
pop
jbe
adc
mov
cmc
fistl
or
sbb
cwtl
push
icebp
pop
pop
xor
mov
pop
in
cmp
lcall
mov
orb
xlat
negb
push
nop
test
push
adc
push
inc
sbb
inc
push
and
inc
adc
inc
lret
arpl
in
push
pop
out
cld
gs
mov
cld
jmp
jb
icebp
push
popf
test
loop
jae
inc
in
inc
outsl
insl
and
mov
dec
xor
mov
xor
mov
ret
jae
push
stos
xor
rorb
pop
adc
jo
dec
adc
add
sub
inc
outsb
pusha
adc
insb
lcall
jge
mov
or
int3
pop
cmp
pop
xlat
cmc
lods
ds
pop
imul
sti
adc
push
lea
iret
add
pop
imul
or
sbb
daa
cwtl
rcr
cmp
leave
mov
jg
inc
bound
inc
or
push
mov
jb
cmpsb
movsb
fdivp
aas
inc
cld
sub
xlat
or
fidivl
inc
xchg
pop
jno
rcrl
mov
iret
adc
push
stos
loopne
push
jo
ficomps
into
push
icebp
test
cmp
movsb
data16
cmp
and
or
inc
jecxz
inc
leave
xor
lret
cmp
repz
lock
es
inc
mov
inc
jg
inc
push
pop
mov
cmp
push
jbe
push
rorl
mov
out
clc
inc
lret
or
push
fldcw
sbb
push
inc
pop
push
orl
rorb
in
rclb
xor
inc
nop
sub
popa
push
leave
mov
lcall
push
dec
fs
outsl
push
push
bound
aaa
xor
sub
and
pop
cmp
lahf
push
int
sbb
cmp
imul
rorl
push
fnstsw
cmp
jge
inc
stc
sub
movsl
add
addr16
lea
dec
push
dec
xor
cmc
jo
and
push
fbstp
mov
dec
xor
adc
push
into
repnz
push
jno
push
mov
sub
push
sub
mov
loope
lret
push
divl
test
es
shll
push
leave
repz
cmp
xor
mov
sarb
push
out
and
xor
dec
bswap
push
add
daa
dec
sub
aad
push
aas
push
push
fcmove
mov
mov
or
mov
sbb
or
scas
adc
dec
movsb
mull
ss
int3
das
adc
cmc
pop
sub
inc
in
push
pop
pusha
stos
aaa
cmp
fs
push
pop
push
divb
push
pop
fsts
incl
xchg
push
roll
dec
and
repnz
pop
sbb
pop
ss
shl
push
sub
outsb
daa
jne
mov
daa
adc
dec
imull
movsb
mov
or
sbb
inc
dec
out
pop
out
cmp
push
jl
enter
imul
popa
xor
icebp
push
and
adc
mov
and
test
xor
lea
popa
mov
fadds
hlt
mov
xchg
push
dec
je
inc
pusha
xchg
push
cmpsb
dec
add
das
daa
push
enter
mov
mov
pop
sbb
sbb
push
sub
add
add
mov
mov
mov
cmp
aas
jns
div
cltd
sub
dec
int3
push
lcall
lret
xchg
das
fiaddl
adc
das
test
ljmp
jne
xor
dec
repz
adc
push
add
notb
dec
push
ficompl
cmp
inc
subb
add
cmp
sub
lret
rcl
push
push
leave
inc
outsl
inc
push
movl
loopne
cmpsl
mov
imul
sti
aaa
xor
js
lock
inc
xlat
push
mov
jnp
add
shll
push
adc
inc
sbb
adc
mov
stc
ja
aaa
dec
aaa
push
mov
stos
mov
and
cmp
stos
lea
cmp
mov
cmp
mov
xor
sub
aaa
cmp
daa
mov
sbb
in
jno
cld
xor
dec
lret
push
shll
mov
pop
adc
jmp
out
dec
iret
jo
jecxz
sbb
jge
mov
cwtl
cmp
cmp
mov
outsb
bound
data16
loope
mov
mov
mov
cs
push
adc
call
mov
dec
xor
lds
or
enter
test
pop
xor
adc
pushf
push
shlb
in
and
push
aam
into
adc
push
adc
cmc
lock
jbe
cmp
cwtl
push
sub
push
inc
mov
push
jno
inc
jl
add
and
mov
mov
add
lea
fists
sbb
std
dec
pop
adc
int
sub
pop
cmp
xor
cmp
push
dec
movsl
sub
repz
push
repz
subb
lock
mov
or
rolb
rolb
push
push
and
sub
push
aaa
push
or
push
mov
rorb
mov
pop
xor
or
xchg
nop
sub
test
push
sahf
sub
add
pop
insl
cld
lcall
jmp
sbbb
add
movsl
icebp
repz
add
sub
int
pop
in
cmpsl
fwait
push
jl
and
cmp
inc
out
into
iret
in
xor
roll
ficompl
sub
jbe
negl
int3
xor
sbb
addr16
rorl
ljmp
add
adc
daa
adc
dec
inc
sti
pop
or
outsl
orb
xor
nop
jno
push
pop
lret
outsb
inc
sub
xchg
dec
icebp
aaa
out
pop
fisttps
ds
adc
cli
daa
cmp
dec
pop
loop
into
sub
fistpl
jno
iret
pop
or
outsb
inc
sbb
jne
subl
pop
loop
aad
sti
decb
add
and
fldl
mov
aas
insl
push
aad
je
jbe
je
sub
xor
in
add
mov
aas
inc
xchg
add
pop
xor
pop
enter
out
add
add
enter
imul
in
xor
sahf
sarl
adcl
shr
clc
pop
jne
sbb
mov
sahf
xchg
dec
mov
sub
into
push
aad
add
dec
rolb
gs
neg
push
movsl
dec
pop
test
pop
js
pop
pop
out
data16
mov
pop
push
stos
fisubrs
in
loop
add
and
mov
dec
xor
jns
jno
cmpsl
iret
scas
ret
pusha
inc
mov
dec
in
lret
jne
jg
inc
fucom
jle
clc
jmp
rol
xchg
es
sahf
push
jno
ja
imul
adc
sub
jge
mov
pop
jb
out
aas
add
xchg
out
mov
fisttpll
sarb
push
out
jecxz
mov
rcrb
pop
jae
cmpsl
cmp
jae
loop
sahf
xor
pop
pusha
idivl
jge
sbb
mov
add
lcall
out
arpl
cwtl
add
out
dec
xor
or
mov
jne
sub
jno
enter
imul
inc
inc
les
vandnps
popf
pusha
and
xchg
aad
pop
and
dec
rorb
mov
mov
int
pop
push
or
iret
inc
push
pop
scas
xor
inc
fisttpll
add
cmp
xor
mov
or
in
in
int
sub
jno
jge
inc
rcrl
mov
mov
ds
aad
arpl
push
pusha
xchg
dec
jge
xchg
jns
repz
or
in
push
ret
movsb
dec
shlb
xchg
in
daa
add
or
inc
sub
sub
mov
jb
shl
xchg
xor
jmp
pop
and
mov
adc
stos
scas
addl
stos
inc
scas
insl
sbb
dec
inc
adc
outsl
notl
outsl
push
in
add
and
out
inc
mov
mov
aas
lds
push
mov
xchg
pop
rorb
push
adc
ror
dec
adc
inc
mov
push
nop
adc
mov
push
inc
ret
shrl
movsb
out
aaa
adc
subl
enter
fcomip
in
out
arpl
cmp
shr
mov
sbbl
and
sbb
repz
inc
pusha
subb
push
adc
pop
inc
push
fwait
popf
fwait
jg
and
test
cmp
sub
in
pop
pop
loopne
cmp
mov
je
outsl
rorb
fucomi
push
cltd
stc
faddl
bound
push
sbb
pop
push
fistl
push
inc
jmp
ficoml
mov
cmpsl
in
in
stos
lods
add
or
rorl
mov
test
inc
lcall
mov
xchg
or
pop
add
movsb
test
xchg
pop
inc
mov
mov
xchg
or
mov
jns
inc
add
jae
stos
in
outsb
jbe
inc
ret
push
rolb
sbb
leave
lcall
movsl
push
stos
push
jne
push
mov
sti
push
imul
out
push
and
dec
aas
lcall
cmpb
test
in
and
mov
shlb
ljmp
jno
mov
xor
sub
and
xchg
push
movsb
ret
push
jge,pt
inc
pop
inc
dec
or
xlat
mov
in
mov
cmpsb
xchg
movsl
lods
into
test
sbb
and
movl
call
cmc
dec
into
adc
and
dec
dec
dec
push
fcomps
pop
jecxz
jmp
imul
shl
clc
push
pushf
jno
in
mov
nop
mov
cmpl
mov
xchg
xor
cmp
out
outsb
xor
dec
stc
roll
sub
out
jmp
jecxz
lds
jg
pop
xchg
les
sarl
cmpl
adc
out
fisttps
or
or
xlat
xor
cltd
adc
fsubl
jne
shl
pop
cmpsl
jmp
fildll
and
sub
mov
lcall
adc
movsl
add
movsl
out
adc
lods
push
or
nop
adc
dec
inc
and
or
inc
mov
popa
or
in
scas
and
mov
mov
sbb
je
sbb
jnp
imul
jno
addl
in
lods
fmulp
in
mov
cs
sbb
dec
dec
rolb
pusha
or
sub
scas
in
mov
lsl
aaa
pop
lahf
mov
xchg
sub
dec
jnp
leave
and
nop
push
aas
push
sbb
inc
add
pusha
push
inc
inc
test
jmp
add
pop
outsb
mov
push
dec
push
fidivs
std
repz
pop
into
lods
sbb
inc
sbb
jno
es
jno
xor
shl
push
or
mov
fstpt
out
ret
test
lods
roll
xchg
movsb
outsb
lahf
add
xchg
mov
xor
jno
pop
mov
jae
pop
pop
jecxz
and
jge
out
mov
push
in
fiaddl
xor
mov
lds
arpl
pop
stc
adc
mov
fsub
sub
cmp
stc
push
out
cmp
or
icebp
repnz
mov
xor
mov
mov
add
sbb
sub
pop
test
inc
aam
jbe
and
fldcw
adc
nop
pop
iret
and
in
call
jne
xor
jmp
sub
or
inc
hlt
popa
rcrb
sahf
fdivs
gs
inc
xchg
cmpsb
aas
aad
imul
push
cmp
mov
cmp
or
inc
dec
aaa
fiaddl
inc
lret
ret
aad
and
pop
testl
jno
add
iret
add
les
mov
pop
mov
push
or
fdivs
es
das
mov
dec
xchg
inc
xor
pop
and
cmp
inc
les
jecxz
pushf
add
inc
scas
xor
outsl
mov
pop
mov
and
cmp
pinsrw
mov
xchg
pop
fwait
jnp
xchg
out
xchg
mov
popa
mov
test
xchg
adc
mov
fmull
sbb
movd
mov
xchg
insb
jns
in
sbb
in
push
pop
or
mov
add
rolb
and
or
pop
stc
fwait
push
repnz
lock
movsl
xlat
bound
stos
data16
or
jns,pt
push
sub
xchg
fwait
mov
inc
popa
leave
pop
loopne
fistpll
or
out
js
pop
pushf
daa
fbld
push
inc
push
negl
std
add
sbb
cmp
push
xchg
daa
pusha
mov
fcom
in
jge
inc
sbb
aas
xchg
xor
jno
push
repz
and
shl
cmp
jno
lods
out
add
adc
out
pop
xchg
push
movsb
aas
fiadds
push
sub
xchg
cltd
lock
adc
divl
leave
cmp
dec
loop
push
inc
xor
add
les
adc
cmp
dec
scas
mov
scas
cmpsb
lock
or
mov
mov
mov
das
pop
sub
iret
inc
push
xorl
negb
pusha
dec
add
fmul
pusha
cld
imull
lret
cmp
lret
xchg
out
jae
push
es
push
ret
icebp
shll
test
dec
popa
push
int
cmp
mov
mov
xor
lea
push
mov
xchg
dec
mov
mov
shl
jo
repz
dec
add
nop
and
pop
mov
loop
pusha
sub
lock
out
pop
ret
ret
inc
inc
dec
insl
adc
push
bound
push
add
cs
pop
jmp
push
xchg
jns
aas
inc
push
sbb
mov
ds
cmp
inc
mov
adc
xchg
leave
add
pop
xor
push
jecxz
and
xchg
xchg
jg
mov
lock
pushf
sub
dec
shlb
add
adc
int3
leave
dec
xchg
or
pop
addl
sbb
xor
push
mov
in
add
add
inc
imul
push
cmp
fdivrp
dec
jo
add
push
inc
jno
ret
mov
mull
adc
dec
or
add
in
sub
shlb
xor
push
pop
pop
xchg
jp
pop
idivl
xchg
addb
lahf
out
notl
rolb
xchg
push
pmulhuw
adc
push
fldt
out
pop
lods
call
in
sub
push
or
pop
mov
int
sti
adc
ss
inc
xor
adc
jno
and
inc
cmp
bound
test
and
in
push
mov
popf
pop
sbb
std
icebp
push
int
adc
sbbb
mov
gs
sbb
roll
pop
dec
cmp
into
fistpll
movsl
fpatan
sbb
js
or
xchg
cmp
sbbl
es
mov
and
shll
adc
int
sbb
dec
mov
or
imul
aad
cmp
repnz
push
mov
mov
fldcw
sub
es
imul
pushf
add
mov
adc
cld
jns
insb
icebp
sarl
mov
aam
nop
fnsave
ss
int3
dec
lcall
inc
scas
leave
sahf
dec
int3
sbb
std
jl
out
orl
pop
imul
adc
cmp
jno
les
test
xchg
mov
xor
in
xchg
pop
test
xchg
aad
arpl
adc
pop
out
push
addr16
enter
dec
jno
popf
lcall
xor
push
jno
movsl
lahf
ss
cli
push
insl
mov
mov
icebp
xlat
insl
xor
das
fdivs
mov
ss
or
or
inc
arpl
jae
enter
mov
in
and
outsl
sbb
pcmpgtw
dec
iret
ret
push
push
adc
bound
push
lcall
sbb
adc
or
mov
clc
inc
xchg
adc
inc
mov
mov
idivl
jb
xor
stos
test
mov
inc
dec
xor
cld
jnp
ds
aas
in
cli
add
mov
inc
decl
xchg
outsl
xor
sub
jge
pop
inc
out
aas
push
xlat
aas
je
fs
lret
push
imul
stos
jge
sub
movb
pop
inc
cmc
dec
dec
jns
dec
loopne
xor
adc
dec
test
pop
mov
pop
rcr
add
shll
ret
nop
xorb
cmc
int
ret
pop
rclb
jbe
std
inc
ret
jns
mull
sub
rol
icebp
xor
pop
cld
mov
cld
adc
xchg
push
dec
xchg
nop
dec
fsubrl
add
adc
and
push
lret
insb
ds
inc
ja
add
mov
push
scas
xchg
and
adc
push
push
xchg
mov
mov
pop
or
rol
aad
inc
dec
push
or
sub
xor
arpl
inc
sub
scas
pop
pop
mov
in
cmp
xchg
cmp
push
sbb
rcrl
xchg
shlb
popa
cmp
movsb
sqrtps
into
fs
cmpsl
pop
sti
ss
dec
mov
in
ja
mov
cwtl
movsb
or
fldl
jmp
sti
add
ret
fsubrs
in
jl
mov
ficoml
aas
dec
movsl
test
sub
in
sbb
cmpsb
pop
ja
repz
jle
mov
cmpsb
xchg
imul
jne
xchg
scas
fcomps
jno
aam
out
push
push
xchg
out
lahf
je
ret
ss
push
push
push
aaa
std
shll
inc
pop
dec
sub
sub
cmp
imull
dec
sbb
xchg
xchg
loop
add
arpl
inc
pushf
pop
sarl
pop
jb
movsl
mov
pop
daa
test
pop
jae
enter
mov
dec
rcrl
add
and
adc
pushf
std
add
lea
data16
adc
mov
push
adc
cltd
loope
in
movsb
xlat
adc
pop
fsubrl
icebp
mov
sub
inc
pop
xchg
pop
and
sti
or
test
mov
enter
xor
sub
int3
dec
push
xchg
mov
lahf
add
xchg
stos
inc
mov
cmp
icebp
iret
mov
xor
enter
cmp
pop
mov
jo
sub
xchg
mov
lcall
mov
in
lret
stos
fwait
jae
mov
pop
loopne
push
in
out
push
jp
fbstp
dec
cli
mull
sub
insb
sahf
xor
aad
outsb
pushf
test
icebp
shll
pop
cmc
bound
outsb
mov
movb
inc
mov
or
adc
nop
jnp
adc
inc
pop
dec
addr16
xchg
sub
mov
sbb
fadd
pop
sbb
cltd
and
add
lds
negb
imul
inc
loope
mov
movsb
out
jle
xchg
or
sub
movsl
in
pop
pop
push
icebp
adc
sbb
in
dec
and
xchg
pop
cmp
jo
orl
imul
sbb
sub
data16
ds
push
adcl
mov
cltd
jge
push
in
in
cli
adc
sbb
out
or
mov
mov
mov
cmp
sbbl
sti
jo
xchg
and
adc
mov
sbb
and
push
ret
adc
xchg
jmp
xchg
repz
add
inc
int
bound
push
mov
mov
inc
pop
repz
ds
inc
ss
inc
mov
xchg
leave
sbbl
pop
sbb
loop
xchg
arpl
ret
add
pop
fisubl
adc
sbb
out
mov
pop
push
xor
cwtl
icebp
sahf
cwtl
dec
xorl
dec
or
adc
fbstp
push
dec
aad
roll
sbb
inc
repz
jmp
mov
test
cmp
mov
hlt
dec
iret
fnstsw
push
lcall
and
pop
or
lods
and
pop
add
xor
jno
dec
push
jno
xor
push
add
adc
out
inc
xchg
into
inc
add
dec
mov
inc
jns
push
das
jno
rcrl
sbb
inc
xchg
jno
test
sbb
aad
lahf
jno
pop
ret
jmp
mov
rcll
push
ljmp
lahf
dec
shll
adc
inc
into
sub
push
xor
or
push
cmp
dec
jno
jb
sub
scas
ds
sub
dec
inc
jno
ret
adc
push
ja
dec
dec
cmp
xor
aas
adc
xchg
pop
jne
mov
inc
popa
jno
ret
outsl
mov
xchg
fisttps
leave
mov
int3
cmpsb
add
pop
lods
cmc
xchg
jecxz
mov
cmp
pop
sahf
mov
add
mov
faddl
orl
pop
xlat
addb
pop
int
fsubrl
pop
push
cmc
cmp
rorb
fmull
jno
xchg
mov
mov
daa
adc
addr16
into
push
sub
and
lock
mov
xor
push
or
xchg
add
add
in
mov
mov
cltd
sub
shrl
ds
addb
movsl
aas
jo
pusha
xor
cltd
pop
xor
and
shrb
pop
adc
sbb
xor
mov
mov
imul
pop
cmc
int
push
jge
add
cmp
loop
pop
int
aam
pushf
adc
dec
xchg
xchg
stos
mov
xor
jle
push
frstor
pop
sbb
gs
inc
aad
mov
push
stos
ljmp
push
dec
sub
push
cli
adc
sub
icebp
out
pop
inc
pop
cmpsl
dec
test
cmp
dec
mov
sub
and
cmp
test
call
cltd
jno
lea
shlb
sti
fistpl
adc
not
pusha
repz
push
push
push
or
pop
sarl
lret
mov
jno
mov
lods
ret
adc
das
mov
mov
xchg
loopne
lods
lcall
jno
cmpb
pop
lret
nop
sbb
jmp
pop
lcall
push
pop
hlt
mov
sbb
fisttpll
lcall
push
cmp
push
cltd
out
or
mov
addr16
push
push
push
cmp
pop
inc
cltd
cmp
inc
inc
mov
sbb
lods
or
dec
aaa
mov
pop
mov
js
je
outsl
in
ljmp
mov
xchg
imull
sub
cmp
dec
mov
das
dec
les
or
outsl
push
pop
imul
pop
add
pop
inc
adc
mov
mov
test
sbb
adc
dec
xchg
push
xchg
sub
xor
in
sbb
loope
push
ret
adc
iret
xlat
jge
pop
xchg
xor
movsl
clc
mov
jmp
std
mov
fisttpll
push
jbe
cltd
aam
pop
mov
movsl
out
sbb
lret
outsl
or
mov
push
mov
es
iret
subb
adc
gs
popa
add
sbb
fs
subb
test
aaa
mov
cs
enter
lret
in
gs
inc
ret
xchg
dec
movsb
cmc
test
pop
in
aas
fistps
push
adc
add
dec
imul
pop
pop
int
push
pop
xor
clc
dec
adc
sbb
sbb
adc
out
sub
std
sub
shlb
jb
int
in
in
fisttps
cmpsb
jp
pusha
push
adc
xchg
adc
lcall
fidivrl
pop
xchg
or
xchg
shl
and
xchg
inc
jno
xor
sub
aad
int
or
pop
and
mov
sbb
sub
sbbb
cmp
test
xor
dec
cmp
xchg
or
push
adc
jo
leave
pop
adc
xor
insl
push
scas
and
push
or
or
cmp
push
pop
adc
dec
pop
cmp
ljmp
cmpsl
sarb
dec
add
push
inc
push
and
fstp
negb
fnstcw
lret
cmp
sub
sti
loope
test
adc
xor
or
sti
popa
repz
mov
dec
adcb
fs
jge
add
aam
dec
cmc
pop
inc
ret
mov
add
xorl
jg
mov
cld
dec
or
pop
rclb
pop
icebp
jae
dec
imul
add
repz
das
jno
cmp
push
pop
lods
or
outsb
in
imul
loopne
inc
mov
loope
cmp
daa
ja
pop
pop
aas
inc
fidivl
push
les
jo
addr16
xor
add
sub
xor
fadd
test
cmp
imul
jae
out
dec
stc
bound
sbb
mov
mov
pop
ret
mov
adc
add
jno
not
inc
cmc
inc
and
lret
cmpsb
mov
push
enter
push
dec
xchg
mov
mov
mov
outsl
sbb
mov
out
or
dec
test
xchg
push
mov
or
shll
ss
aad
xchg
push
xor
shl
in
fildll
mov
pop
mov
sub
repz
movsb
cmp
and
cmpsl
push
testl
or
in
insb
daa
shll
leave
in
push
jae
push
cmp
aaa
arpl
lret
nop
xor
adc
loop
mov
xor
and
fcmovnu
jo
xchg
or
fldl
sahf
aaa
cmovne
popa
inc
push
or
mov
xlat
sbb
cmpb
pop
dec
stos
pop
popf
sub
xchg
call
cmp
nop
adc
loop
mov
push
rcrl
pop
jno
mov
xor
push
int
inc
pushf
incb
inc
cmp
insl
cmpsl
rcrl
gs
mov
mov
sbbl
pop
enter
dec
sub
xchg
push
push
and
in
in
lea
ret
movl
mov
aad
xor
popf
movsb
mov
leave
mov
daa
dec
cmp
xlat
pusha
jp
add
sub
push
sub
inc
int3
jp
movsl
pop
fnstcw
pop
sbb
cltd
inc
push
mov
push
push
pop
movsl
fisubrl
mov
cltd
inc
fsts
push
fucomi
xchg
ds
dec
fyl2x
push
aad
shlb
loopne
icebp
or
enter
int3
cmc
jnp
dec
sbb
ja
dec
xor
test
pop
ret
adc
ror
in
push
push
out
push
std
aad
lds
scas
gs
shl
pop
lods
jecxz
loope
sti
xlat
into
dec
jecxz
adc
icebp
and
dec
mul
push
push
adc
add
pusha
fs
push
and
loope
push
pusha
mov
bound
xchg
dec
test
fisubl
dec
flds
sbb
jp
xchg
lods
xor
xlat
aas
pop
mov
cmp
popl
out
iret
xchg
push
lods
orl
xchg
cltd
inc
loopne
pop
xchg
cmp
aas
scas
fdivrs
insl
mov
mov
bound
mov
inc
sub
in
inc
stos
mov
xchg
inc
push
add
dec
inc
cld
xor
dec
inc
data16
daa
dec
out
adc
mov
push
add
dec
pop
xchg
adc
and
jg
into
stos
jge
addr16
xor
dec
add
inc
inc
jno
rolb
cli
mov
sarb
inc
cld
iret
sbb
xchg
pop
je
inc
or
xor
ret
cmp
push
xor
lods
xor
xor
roll
movsb
incb
adc
gs
not
inc
mov
mov
push
lahf
push
lcall
mov
mov
test
dec
pop
xor
mov
dec
push
fistl
imul
cmp
ja
popf
aad
popa
in
lock
les
cli
inc
pop
out
pop
xchg
popa
in
pop
ljmp
addl
push
adc
mov
arpl
or
addr16
pop
jle
imul
sbb
pop
pop
nop
ret
ljmp
adc
fcompl
pop
rcrb
mov
xor
rcl
test
scas
xor
ficoml
cmc
push
stos
mov
movsb
mov
ret
call
and
repnz
push
outsl
push
fcmovnu
dec
inc
xor
lcall
in
pop
push
jno
push
fadds
xchg
cwtl
into
cmp
mov
sub
ret
icebp
sub
fsts
leave
aam
shll
sbb
adc
std
movsb
gs
into
aam
ret
cmp
push
ss
in
daa
loope
lcall
pop
outsb
icebp
popa
in
inc
sub
mov
lahf
push
xor
aas
mov
mov
add
and
icebp
pushf
push
push
aad
jnp
dec
adc
fsts
dec
aad
jmp
in
imul
addr16
mov
cld
jo
les
inc
jge
add
add
mov
cli
out
mov
fistl
dec
lock
imul
into
out
xor
imul
aad
adc
pop
pop
cmp
hlt
dec
dec
cmc
xchg
push
mov
jbe
mov
out
push
adc
inc
pop
adc
sub
popa
mov
cmc
push
pop
and
fst
mov
dec
into
and
or
inc
dec
cmp
andl
les
rorb
mov
in
rcl
add
outsb
stos
shlb
mov
sbb
sbb
or
sbb
jbe
mov
aam
leave
inc
test
fistps
popa
dec
arpl
jmp
dec
arpl
cmc
cs
jmp
into
daa
or
mov
lea
dec
inc
pop
lods
ljmp
push
adc
sbb
cmpxchg
adcb
mov
xchg
icebp
loope
pop
ret
loope
xor
pop
push
push
xchg
inc
shrb
push
iret
jne
lods
mov
ja
fs
push
lock
add
sbb
aad
xor
add
cmp
sub
les
outsb
sarb
cmp
xchg
popa
add
insl
cmpl
dec
dec
xchg
add
pop
mov
or
gs
dec
push
xor
sarl
add
push
insl
dec
rcrl
dec
jo
pop
test
fcom
inc
das
mov
dec
aas
ss
mov
enter
jmp
fldl
jae
xor
test
xchg
mov
popa
push
push
gs
and
iret
enter
sti
xchg
fcomps
dec
mov
imul
aad
push
push
ss
dec
push
daa
gs
dec
push
popa
dec
dec
inc
enter
dec
pop
cmp
cmp
das
push
sub
push
test
inc
adc
cmp
fidivl
lcall
test
xchg
cmp
add
in
jno
adc
imul
or
adc
out
push
sbb
xchg
cmc
push
cltd
pop
test
adc
mov
scas
cmp
mov
data16
push
xchg
xchg
mov
pop
cmp
jp
scas
push
in
shrb
add
adc
shrb
xchg
fs
cmpl
mov
lcall
add
push
insl
sub
add
paddw
pop
fcmovbe
jno
mov
mov
add
daa
ds
adc
repz
push
cmc
sbb
lds
stos
and
lock
xor
or
lods
movsb
adc
imul
xor
imul
xor
ds
insl
lret
lock
mov
push
aad
xchg
mov
mov
rolb
fucomp
pop
adc
push
pop
sub
push
ret
inc
cmpsb
pushf
fnop
incl
cwtl
test
cmc
sub
inc
xor
jge
shrb
dec
pop
aad
push
popf
adc
add
inc
mov
psubw
push
add
fsubrs
push
insl
dec
lods
inc
jno
mov
sbbl
lods
pop
and
and
xchg
fdivs
jns
mov
xor
xor
scas
mov
aad
out
fmuls
dec
insl
xlat
add
pop
add
xchg
test
pop
shlb
mov
mov
cmpl
out
dec
sti
mov
dec
and
inc
sub
push
dec
shll
add
or
push
dec
insl
sub
push
daa
xlat
repnz
inc
add
adcl
push
push
cmpl
add
dec
xor
inc
addl
jmp
lea
push
add
adc
enter
push
cmc
imul
adc
inc
out
sub
mov
mov
sub
in
sbb
cwtl
xor
xor
sub
push
adc
addb
cs
add
pop
mov
int
xor
nop
subl
lea
mov
push
jl
jp
movsl
dec
lahf
inc
and
xchg
dec
lcall
jl
mov
sub
daa
out
inc
jno
add
mov
je
outsl
daa
xor
lds
inc
adc
enter
sti
nop
fwait
sub
cmpsl
in
js
stos
inc
imul
jb
push
adc
mov
cs
xorl
pop
jecxz
jge
dec
cmpb
sbb
les
fcmovbe
lcall
mov
sti
add
fbld
sub
pop
mov
add
fwait
lret
daa
cmp
or
ret
les
cld
fcoml
sbb
icebp
push
mov
fistpl
xchg
inc
fs
inc
cmp
sbb
jg
pop
sti
jae
ja
mov
inc
es
ljmp
adc
aad
adc
in
jp
imul
dec
xor
repz
xor
pop
dec
mov
mov
cmp
sub
es
inc
add
stos
adc
test
mov
inc
inc
mov
add
push
inc
daa
aaa
ss
sti
cmp
and
in
adc
ret
jg
imul
add
insb
out
rclb
rcrb
cld
pushf
sbb
mov
push
ljmp
or
out
pop
dec
inc
mov
xor
mov
add
or
cwtl
in
push
movsb
dec
or
fsubrs
xchg
cmp
dec
loop
cli
test
int3
dec
dec
mov
mov
dec
daa
out
cmp
fisttpl
pop
pop
and
addr16
pop
xor
jp
and
rorl
imul
jnp
jge
jecxz
nop
fwait
cmp
adc
in
add
scas
lahf
mov
and
push
in
mov
adc
in
pop
mov
cmp
dec
aas
or
adc
ds
and
ljmp
lcall
sahf
and
inc
mov
orl
ljmp
inc
movsb
out
sbb
popf
sub
insb
in
clc
dec
test
jmp
pop
outsb
and
roll
into
sbbl
in
in
add
mov
inc
enter
sbbb
jg
orb
xor
and
pushf
rcrb
ficoms
in
ss
jo
inc
loop
jg
mov
mov
mov
popf
cmp
push
mov
je
nop
pop
addr16
inc
es
xorb
dec
icebp
sar
popf
pop
lock
xor
cmp
add
push
jp
xor
sub
adc
or
ss
dec
lahf
inc
mov
leave
cwtl
and
cmp
and
int
push
or
adc
jle
jne
mov
push
lret
out
bound
mov
or
mov
enter
fsubrs
sub
clc
ss
leave
ret
xchg
jp
inc
adc
mov
adc
sbb
lret
mov
in
adc
dec
repz
jbe
adc
sub
or
add
inc
dec
lret
cmp
shlb
out
movsl
gs
push
cs
in
adc
sub
in
pop
sbb
data16
sbb
outsb
das
push
xor
xchg
mul
inc
lods
shll
jb
xchg
inc
xor
jg
mov
cmp
xchg
frstor
push
rcll
dec
aad
and
push
insb
cmc
xor
popa
leave
outsl
packsswb
je
insl
mov
mov
jecxz
xchg
xchg
iret
jo
inc
repnz
lea
jae
pop
or
push
sub
pop
xor
subl
gs
jecxz
add
out
dec
call
outsb
mov
sub
dec
fisubrs
int3
push
pop
test
loope
fmul
push
ficompl
cmp
mov
xchg
lcall
push
out
add
inc
pop
dec
push
cmpsb
sbb
add
cmc
mov
push
arpl
push
push
pop
add
aaa
ss
add
inc
lret
pop
pushf
into
in
aas
pop
jnp
aad
push
cwtl
dec
outsb
push
mov
inc
push
jno
insl
leave
test
outsb
stos
bound
test
pop
or
loope
xchg
sub
addr16
das
repz
and
fildll
in
or
pop
repz
rolb
mov
cltd
test
outsl
jl
daa
inc
push
ja
rclb
mov
dec
sti
jo
rolb
in
mov
fisttps
lret
xor
inc
repz
xchg
push
aaa
dec
adc
inc
push
int3
adc
push
lds
pop
ds
xchg
pop
insb
aaa
inc
aaa
aad
rclb
push
inc
cld
mov
mov
scas
cmp
mov
xor
lret
dec
les
outsb
add
xchg
xor
mov
xchg
adc
adc
scas
xor
das
out
adc
testl
pop
popa
in
test
push
sbb
fwait
dec
jg
jno
pop
push
test
mov
stos
mov
nop
dec
cld
adc
in
or
sub
sbbb
gs
sbb
mov
test
js
cmp
popa
insl
imul
push
sbb
mov
adc
push
push
push
jo
insl
ja
lea
pop
cltd
dec
stos
cs
dec
dec
xchg
insl
jge
sahf
addr16
cli
mov
push
xchg
jno
mov
pop
adc
dec
cltd
fcoms
add
xchg
pop
add
push
push
jo
mov
andl
inc
xchg
xor
jp
sbb
and
popa
pop
xchg
push
add
pop
hlt
xchg
pop
sarl
subb
repz
ljmp
cmp
pop
or
xchg
in
stos
iret
pop
cmp
xchg
imulb
insl
in
or
dec
dec
rolb
adcl
pop
andl
icebp
notb
push
inc
mov
or
cmpb
test
fstl
sbb
std
sbb
int3
mov
in
add
mov
testl
or
jge
mov
jb
xor
push
incl
push
adc
jge
dec
or
andl
pop
inc
insl
mov
jne
jp
mov
dec
aaa
popa
or
not
cld
dec
stos
mov
adc
mov
int3
or
stos
mov
popf
xchg
adc
sbb
xchg
dec
mov
insb
dec
cmp
loop
movsl
add
insb
pop
movsl
lods
test
cmp
inc
ret
xchg
push
or
shl
adc
inc
outsb
sbb
faddp
pop
dec
aad
xor
mov
pop
push
pushl
xor
jge
mov
ljmp
adc
fxch
dec
rorl
mov
lods
dec
rcll
imul
fmull
pop
push
xor
cmp
sti
lods
xchg
stos
pop
xchg
pop
xchg
js
cli
clc
or
push
sub
cmp
sbb
movsb
arpl
aam
jbe
xor
push
nop
sbb
cmc
imul
mov
pop
lea
sbb
mov
xchg
out
inc
gs
test
adc
jno
test
into
int
cmp
lcall
or
mov
jns
imul
icebp
in
or
into
push
add
in
fimuls
fcomps
out
adc
add
call
xor
push
gs
shlb
mov
mov
fsubr
mov
xchg
mov
jecxz
sub
inc
out
mov
loope
mov
fs
out
cld
cmp
add
jne
pop
lahf
xchg
cmp
lods
and
movsl
pusha
cmp
jno
scas
inc
imul
into
jp
pop
or
and
sbb
fldl
push
mov
and
adc
int3
jle
inc
and
xor
jb
xor
lcall
cmp
jecxz
xchg
rclb
jle
das
adc
bound
push
sub
cmc
flds
cld
lea
lret
gs
xchg
scas
rorl
push
push
int3
fistpl
cwtl
push
mov
mov
pusha
stos
pop
or
jbe
cmp
gs
or
xchg
sub
insl
push
test
ljmp
rol
insl
mov
cmp
xchg
xor
inc
jbe
mov
in
lcall
addl
mov
or
lret
mov
lds
fdivl
sub
jg
or
cmc
lret
and
test
push
sbb
dec
jge
xchg
push
add
cwtl
mov
dec
mov
and
pop
jno
out
push
pop
xchg
adc
cmp
jns
cwtl
jmp
xchg
pushf
mov
iret
dec
dec
ds
and
lock
test
scas
mov
mov
dec
test
mov
jne
adcl
ss
imul
and
sbb
out
cmpl
jns
and
adc
mov
push
adc
sub
lcall
push
pushf
lods
fxsave
fs
and
or
xorl
or
cmc
test
mov
xor
push
inc
jge
pop
fimuls
outsb
dec
fs
daa
push
aas
or
inc
xor
into
mov
dec
jp
jbe
pusha
dec
mov
xchg
pop
aad
push
in
adc
cld
fnstcw
and
js
lods
cmp
lds
nop
test
out
leave
mov
lcall
jnp
and
ljmp
sub
fdivrs
jns
and
cmp
cmpsb
loopne
test
loop
push
test
andb
inc
pop
in
js
sbb
fcoms
push
lea
mov
jmp
push
cmc
mov
ds
xchg
pop
jno
out
lret
and
cld
sub
sub
sub
push
ja
lret
sub
fistpl
lds
adc
popa
cmp
push
fwait
adc
push
pop
xlat
jmp
mov
outsb
jno
stc
lret
ret
xor
mov
push
pop
xchg
outsl
jle
or
add
and
jns
test
sbb
data16
or
filds
jmp
mov
cmp
push
lcall
mov
out
cwtl
jnp
dec
push
popa
sbb
lods
in
push
stos
xor
xor
addl
mov
dec
subb
std
xor
inc
in
test
push
imul
repnz
test
jl
push
popa
hlt
xor
popa
dec
aas
out
cmp
or
sbb
or
pop
arpl
adc
shrl
frstor
call
insl
and
xlat
add
pop
mov
sahf
dec
and
mov
xor
pop
push
icebp
fidivrl
fstl
inc
rorl
inc
js
fwait
or
incb
mov
adc
aad
out
inc
into
xchg
adc
pop
dec
inc
pop
lods
cmp
pop
in
loop
popf
mov
dec
xchg
leave
pop
iret
lret
cmc
mov
fcomps
ret
ljmp
or
fwait
cmp
adc
fcoms
imul
push
push
psubsw
loopne
cmp
cmp
pop
in
pop
adc
add
in
pop
dec
rorl
insl
inc
stos
push
sub
test
rcll
xorl
in
test
loop
subb
xchg
cmp
inc
pop
scas
xchg
icebp
add
pop
mov
in
rcl
inc
dec
scas
rorl
mov
cs
mov
push
jno
pop
mov
adc
gs
cmp
or
jge
insl
cmp
sti
or
loop
cmp
daa
rolb
jns
popa
imul
ret
and
add
adc
mov
inc
inc
insl
sahf
sub
fstp
or
js
popf
addb
popf
mov
mov
jno
popa
dec
iret
or
in
fnstcw
sbb
cld
mov
xchg
xchg
dec
and
mov
xor
in
aas
dec
roll
dec
insl
jecxz
sub
imul
adc
clc
xor
push
out
mov
enter
xchg
pop
cmp
lret
mov
push
in
adc
enter
jmp
xor
out
push
outsl
xor
testb
or
push
add
out
push
in
fcmovnu
sbb
pop
dec
cmp
lock
enter
and
add
fwait
xor
sbb
pop
mov
mov
mov
lahf
cli
push
mov
jae
aad
enter
scas
faddp
filds
jno
adc
dec
imul
push
cmp
pop
push
imul
pop
icebp
pop
xor
pop
push
inc
nop
pop
pop
adc
push
or
icebp
cmp
cmp
test
pop
xor
sarb
call
ud1
loope
cli
push
cmc
push
outsb
jno
aam
out
sti
lret
ja
cmp
add
sub
int
adc
mov
jb
push
jno
inc
jae
test
test
test
xor
sub
fisttpll
inc
in
mov
icebp
fs
mov
cmc
das
scas
pop
push
iret
xchg
fsub
stos
sqrtps
lret
dec
les
rcrb
xchg
roll
and
push
or
push
ficoml
fistl
cmpsb
sub
aam
aad
xor
enter
push
aad
das
adc
insb
sbb
ret
sahf
adc
clc
push
popa
iret
adc
mov
call
xor
loopne
aas
hlt
push
sahf
mov
xor
hlt
sbb
push
dec
call
jo
mov
or
roll
push
ljmp
push
jp
pop
and
lret
adc
fsubp
add
inc
sub
pop
dec
or
loope
fisttpll
cmp
mov
icebp
xor
inc
pusha
mov
lret
cmp
rcrl
xorl
subb
add
les
out
shlb
int
mov
xlat
cmp
inc
test
sub
mov
inc
lods
stc
clc
inc
push
lcall
insl
cmp
int3
sbb
and
fidivl
mov
jo
ret
loop
leave
shll
sub
arpl
xor
mov
icebp
sti
leave
inc
int3
cmp
xor
dec
sub
ljmp
mov
add
push
and
lods
fwait
rcl
imul
jnp
pop
and
or
dec
lods
pop
xor
push
sub
icebp
dec
jno
gs
in
pushf
sub
icebp
jmp
stos
sti
adc
fs
jl
cmp
jns
mov
hlt
add
sbb
xchg
adc
in
dec
mov
mov
sub
cltd
sub
ljmp
fxch
mov
pop
sub
int3
sub
xchg
push
stos
cmp
daa
xchg
fcomp
outsl
xorl
dec
leave
xlat
lds
xor
dec
xchg
fadd
test
aaa
or
aas
int
xchg
jno
das
es
xchg
inc
or
push
jno
sub
inc
out
pushf
scas
icebp
in
push
pop
daa
jne
sub
jo
dec
adc
cmp
scas
negl
pop
push
adc
sbb
pop
jno
ret
inc
dec
notl
sub
pop
and
test
pop
lea
sub
inc
lea
iret
push
fsubs
cmpsl
ret
push
push
sarl
mov
outsb
test
cld
std
pushl
stos
pop
fwait
pop
and
sbb
adc
fisubrs
dec
out
xor
mov
shrl
lahf
shlb
ja
pop
lods
jmp
xor
dec
fwait
inc
mov
fwait
sub
and
push
add
pop
stos
sub
mov
aas
sub
sbb
sarb
jns
testl
mov
push
dec
pop
push
loopne
mov
clc
push
flds
push
negl
sub
pop
in
inc
inc
push
inc
xlat
icebp
cmp
adc
in
popl
push
and
mov
mov
add
fsub
dec
add
push
aad
inc
fcom
iret
push
pop
jmp
pusha
xor
fcomps
jne
cmp
xor
inc
push
sbb
into
adc
enter
outsb
push
mov
outsb
ret
jb
js
outsb
rorb
subb
imul
dec
cmp
fsub
cmp
mov
aam
push
popf
hlt
mov
or
pop
loop
push
insb
sub
movsl
pop
in
js
lret
imul
mov
add
push
in
dec
mov
pop
push
lock
dec
mov
mov
sbb
cmp
dec
push
push
in
inc
popa
arpl
fucomip
dec
push
rclb
sbb
xor
in
sub
inc
add
insb
popf
cmp
mov
fiaddl
mov
or
cli
mov
repz
mov
sarl
pop
adc
xchg
pusha
cmp
mov
add
dec
push
xor
inc
xor
adc
fistpl
jp
repnz
xchg
or
add
sub
pop
pop
dec
dec
adc
mov
fstpl
mov
dec
mov
popa
sbb
imul
push
mov
xchg
lds
subb
outsl
inc
adc
outsl
insl
fbld
lret
cmpsb
mov
pop
inc
in
inc
inc
inc
add
and
lods
repz
cltd
mov
mov
dec
sbb
pusha
push
lods
xor
int3
jg
and
push
seta
add
test
fiaddl
add
mov
dec
subb
pop
imul
cmp
inc
imul
push
pop
fcompl
mov
push
std
out
mov
jnp
insl
hlt
fsubr
into
jge
mov
adcl
dec
in
push
push
inc
adc
addr16
cli
push
insb
and
pop
int3
sbb
inc
pusha
fistl
fistpl
repnz
push
jno
xor
inc
fdivrl
mov
pop
stc
sub
inc
outsb
setge
or
test
aad
pop
in
lahf
xchg
aam
sub
ds
dec
in
out
cmc
dec
mov
cmp
in
js
cmp
and
sub
pop
xor
out
push
ret
xchg
jecxz
lods
ja
mov
xlat
inc
bound
mov
arpl
repnz
jecxz
cs
mov
ljmp
push
inc
lret
scas
mov
xor
popa
sub
add
pusha
lret
mov
je
sub
xchg
ds
shrb
cmp
ret
push
cmp
mov
inc
dec
scas
sarl
leave
mov
add
xor
sti
pop
xchg
scas
outsl
dec
inc
pusha
fstps
outsb
nop
dec
dec
sti
mov
lds
sub
lds
cmpsb
clc
negl
mov
push
fimull
dec
jo
stos
lods
insb
cmp
mov
call
dec
inc
push
dec
mov
push
pop
clc
mov
stos
stos
imul
jecxz
jo
push
cmp
and
std
xchg
out
mov
mov
or
adc
cli
inc
stos
add
fsubrl
cmpsl
mov
rclb
rcl
pop
addr16
xchg
inc
outsb
push
enter
daa
test
shll
sub
jl
sub
call
push
rcr
lcall
pop
sbb
jp
das
mov
push
inc
add
xorl
adc
mov
icebp
cmovg
push
popa
sbb
mov
lfs
push
xchg
fcomps
das
dec
out
push
dec
jecxz
in
into
adc
sub
rclb
pop
mov
jo
daa
add
or
lock
add
mov
mov
jl
pop
lods
adc
cs
loopne
push
and
cltd
mov
and
fsubrl
call
jbe
mov
out
std
pop
xor
imul
inc
shl
push
fadd
and
arpl
sub
enter
push
dec
xchg
adc
dec
fiaddl
or
movsb
daa
sarl
xor
cmpsb
inc
sub
sub
sbb
inc
adc
push
inc
shlb
sub
aas
add
dec
ret
fisttps
dec
outsb
adc
sub
int
dec
cmpsl
nop
cmp
and
and
hlt
pop
push
inc
loop
pop
shlb
into
incb
xor
mov
cmp
pop
outsl
mov
and
mov
pop
adc
insl
xor
adc
jecxz
sbb
je
shll
rorl
sub
lahf
int3
mov
xor
sbb
shll
daa
jno
mov
aaa
int
cmpsl
cli
incb
pop
dec
cmpsb
push
mov
fs
dec
push
push
lock
jge
fidivl
mov
pop
sub
cli
sub
adc
cld
xor
es
xchg
dec
pop
enter
push
push
in
push
and
dec
push
push
push
dec
popa
out
cmpsb
vcomisd
and
pop
iret
lret
sbb
mov
repz
mov
add
xchg
js
fimull
aad
rcl
dec
xor
add
adc
pop
aad
cmp
push
mov
sub
cld
xchg
xlat
je
push
ljmp
jge
mov
sub
das
mov
jb
cmp
incb
add
or
rol
sbb
or
in
ljmp
addr16
xor
ficomps
int3
dec
out
lods
or
das
lahf
pop
in
fucomp
add
js
stos
imul
jle
or
aas
inc
add
fwait
daa
add
int
stos
and
shl
in
sub
lds
in
movsb
jne
cmp
sarb
xchg
xor
pop
xor
cmpb
mov
std
jge
cwtl
xor
outsl
mov
out
or
aam
inc
fld
dec
cmpl
int
xchg
adc
icebp
jo
call
aam
lds
shlb
add
mov
adc
cmp
mov
out
lods
dec
push
adc
sbb
push
jbe
imul
adc
or
xchg
mov
outsb
arpl
adc
xorl
cmp
dec
dec
xor
mov
jl
cmpb
jg
mov
xchg
inc
mov
mov
inc
mov
scas
or
xchg
jno
fstpl
in
push
mov
cltd
cmp
fsts
push
push
xorl
or
jne
shl
sub
jbe
hlt
xchg
cltd
out
dec
or
stos
cld
loope
pop
or
testl
sbb
jno
fs
fdivs
daa
mov
xor
cmp
rcll
or
mov
mov
in
std
push
cmc
rolb
adc
movsb
pop
cs
adc
inc
pop
fwait
dec
or
ret
lea
or
stos
cwtl
xchg
ljmp
lods
mov
push
and
sub
mov
cmc
test
leave
xchg
lcall
inc
iret
sub
inc
outsb
xchg
xor
xor
arpl
jnp
push
sub
push
dec
xor
inc
pop
gs
scas
das
filds
add
jle,pt
push
sub
outsb
jno
into
nop
pop
iret
push
aad
rcll
xor
testw
aaa
sbb
sbb
aas
inc
sub
xor
sub
dec
nop
fdivs
pop
std
test
adc
fsubs
nop
inc
add
clc
into
into
imul
jb
dec
push
aad
shrl
mov
sbb
shrb
adc
xchg
push
icebp
xor
adc
test
pushf
into
or
or
arpl
fnsave
xor
push
xchg
lock
push
popa
push
gs
ret
rcl
ret
pop
inc
mov
add
jno
xchg
push
fldt
or
les
ja
sub
or
iret
int3
mov
mov
add
or
popf
roll
arpl
and
scas
repz
pop
sbb
lret
ja
jge
ret
dec
cmp
xlat
add
adc
or
test
hlt
adc
mov
imul
lods
test
adc
or
jno
orb
aam
pop
mov
cmp
call
mov
sbbb
adc
jne
loope
aas
adc
iret
sbb
imul
mov
jb
xchg
movsb
sti
mov
jns
mov
add
aas
insb
or
mov
aaa
fcomps
jecxz
ror
aas
or
cs
cwtl
push
add
faddl
lahf
subb
pushf
mov
lock
adc
in
lea
push
xor
out
and
sti
js
xor
mov
fdivl
xchg
push
lcall
aas
mov
sahf
and
clc
lcall
repz
adc
inc
adcb
mov
mov
dec
xor
sub
cmp
lcall
shlb
push
arpl
imul
dec
ss
int
jb
mov
push
push
pop
es
insb
fs
cmpsb
xchg
xor
test
adc
lods
imul
out
insl
ds
add
and
sub
icebp
sti
aam
mov
arpl
int3
inc
out
and
pop
fs
rorb
xor
lods
je
xor
xor
xorl
fldt
xor
lods
xor
aas
sbb
std
mov
or
fidivl
mov
jnp
aaa
outsl
movsb
in
lock
xchg
pop
inc
sahf
pop
addb
xor
xchg
cvtps2pd
sub
sbb
dec
inc
int
lret
rcr
xor
xchg
cltd
cmp
push
faddl
test
push
orl
movsb
mov
dec
push
rorl
xor
push
xchg
dec
cli
pop
sub
and
jl
or
jne
push
push
sub
pop
cld
test
fisubl
insl
inc
pop
push
xchg
mov
rorb
push
shll
pop
xlat
ret
xchg
dec
fists
jns
xchg
notl
icebp
push
ret
cmp
inc
pop
mov
inc
lret
add
out
sbb
dec
icebp
test
movsb
popf
xchg
jg
pop
cmc
incl
sti
not
pop
in
cli
adc
inc
or
add
pushf
test
cs
push
gs
or
mov
xchg
dec
cmp
sub
mov
mov
adc
xor
sub
push
xor
lret
outsb
jge
sub
imul
pop
cli
nop
mov
mov
or
push
xchg
loopne
mov
ja
stc
outsb
inc
push
outsb
leave
fs
jno
dec
dec
xor
pusha
cmp
fucom
lods
test
and
pushf
push
xchg
pop
ret
test
xor
and
les
push
out
add
inc
xor
mov
jne
rcrb
push
icebp
stos
add
rclb
lret
out
or
mov
ret
mov
outsl
inc
stos
pop
jbe
cmp
mov
fidivrl
dec
pop
cmc
ds
insl
adc
push
jno
fisubrl
iret
cmp
fdivl
in
out
adc
ftst
inc
popa
jg
push
shll
push
mov
or
test
inc
cli
pop
scas
adc
roll
cmp
adc
xor
ficomps
jo
jo
fbld
lds
push
add
sub
je
or
mov
in
sbb
push
sbb
sbb
lret
orb
into
enter
push
add
mov
ret
call
cmc
dec
cmp
jb
gs
sbb
scas
or
inc
sbbl
push
jl
or
mov
xor
mov
pusha
sub
aad
movsl
test
push
dec
stc
jp
pop
pop
mov
lret
inc
mov
push
ret
andl
lds
push
dec
push
adc
jne
mov
jmp
mov
inc
arpl
pop
pop
cmovle
jo
andl
inc
push
int
jb
enter
mov
out
xor
push
push
movsb
cmpl
dec
inc
mov
cmp
xor
push
mov
cmp
lcall
mov
fsubrs
enter
xchg
push
xor
out
pop
push
sub
lods
jecxz
ja
rolb
and
call
xlat
inc
popa
daa
jp
divps
das
insl
add
mov
fsub
or
insl
xchg
inc
outsb
xor
ja
add
lea
push
loopne
pop
xchg
jne
and
call
mov
inc
xchg
test
mov
dec
adc
sti
outsb
popf
arpl
outsl
pop
icebp
jo
xchg
push
or
lds
lods
and
push
pop
inc
in
dec
push
jno
cmpsb
js
scas
out
sbb
xlat
lret
leave
test
cmpsl
cld
cmpsl
push
xorb
aaa
out
pop
orb
jne
and
pop
aam
je
int3
mov
das
xchg
aas
ljmp
mov
or
fwait
mov
mov
push
insl
push
xchg
mov
adc
xlat
sarl
inc
insl
stos
mov
ret
scas
sbb
push
fistpl
int3
rorb
fcoms
xchg
insl
sahf
out
xchg
cld
jb
sub
mov
fldl
and
aam
repz
lcall
xchg
add
fwait
mov
xor
outsl
add
inc
outsb
lahf
enter
or
orl
add
aam
outsl
inc
aas
sahf
xchg
push
inc
adc
sbb
sub
test
push
dec
dec
aam
push
pop
iret
dec
dec
xchg
push
adc
inc
dec
cmc
testb
outsl
icebp
cmp
mov
shrb
push
aad
jle
negl
inc
xor
stos
mov
jne
movl
or
cs
fbld
das
mov
bound
daa
fdivl
and
adc
mov
inc
sbb
rorb
mov
adc
jp
adc
add
sbbl
sub
cmc
fstpt
sub
test
pushf
push
sbb
ret
push
out
rcr
push
fs
sub
pop
cmpb
in
pop
cmp
lea
into
pop
rcrb
jbe
pop
dec
negb
gs
jge
mov
cmc
pop
cli
adc
scas
lcall
jge
andl
mov
mov
addb
cmc
sahf
jge
gs
inc
fsubrp
push
popa
adc
sti
mov
jns
xchg
leave
popa
push
sti
dec
mov
mov
xor
out
push
dec
mov
dec
xchg
xor
das
mov
push
bound
xchg
cmp
popf
popa
movsb
imul
and
xor
jmp
imull
sar
imul
inc
xor
pop
inc
lahf
dec
push
int3
push
sarl
cmp
xchg
loope
push
push
std
jbe
or
je
jno
cmp
xor
into
scas
fcmovnbe
pop
push
sub
pop
adc
inc
inc
cmp
add
aad
jae
xchg
test
mov
fisttpl
into
test
dec
xchg
dec
fiaddl
subl
fcmovb
xchg
mov
loopne
idivl
ret
push
ss
ficoml
pop
aaa
push
divl
out
inc
insl
push
movsb
xchg
jmp
pop
lcall
xrelease
cmpsl
push
neg
gs
pop
out
push
ret
cmpsl
dec
inc
fistpl
rorl
stc
mov
pop
xlat
stc
push
fistpl
add
add
bnd
and
xlat
xlat
and
jle
dec
data16
push
mov
xor
gs
fwait
jge
inc
lcall
push
lods
aaa
addr16
es
push
jp
push
cmp
test
int3
adc
pop
aam
popf
rorb
adc
js
dec
outsl
push
mov
lret
aad
dec
pop
out
outsb
xchg
cmp
arpl
add
imul
sub
ret
xchg
sbb
arpl
push
jp
aad
or
arpl
rorb
stos
dec
testl
push
lds
out
add
sbb
inc
push
dec
and
xchg
push
in
push
dec
mov
sbb
aad
sahf
int3
pop
cs
std
iret
lods
inc
push
push
pop
or
jno
or
adc
mov
pop
dec
aad
idiv
sbb
push
inc
fsubs
inc
sbb
rol
stc
push
sbb
lock
dec
and
cmc
or
inc
pop
and
inc
xchg
or
dec
xchg
push
addr16
pop
pop
and
add
jns
xchg
dec
ret
pop
pop
cmc
adc
cld
add
sbbl
xor
jns
int3
xchg
inc
fwait
test
push
in
add
nop
adc
lahf
daa
mov
add
mov
mov
push
arpl
roll
mov
loope
into
je
xor
daa
xchg
aas
xor
jae
push
push
icebp
dec
dec
fs
jp
xchg
pop
sub
cltd
and
mov
cmp
aaa
inc
ss
rorb
call
cmp
lahf
and
in
adc
clc
add
repz
scas
mov
or
xchg
add
push
in
dec
mov
iret
cmp
inc
into
sbb
out
roll
cmp
cmpb
add
jl
jg
dec
sbb
rol
mov
insl
xchg
ljmp
and
in
cmc
xchg
shr
in
je
or
lea
andb
mov
jb
xor
push
pop
lods
push
inc
out
push
xlat
ds
cwtl
out
outsb
xchg
pop
gs
test
fcom
fs
lcall
jg
dec
adc
push
ss
mov
mov
shrl
mov
xor
hlt
sub
in
mov
push
push
int3
iret
fnstenv
fnstenv
cltd
jae
inc
xor
rcr
sti
or
cmpsl
mov
push
mov
mov
cmp
jne
mov
pop
jbe
lock
push
mov
xchg
cmp
jns
sbb
sub
sbb
or
sub
rclb
or
pop
add
mov
js
sub
sti
lcall
xorl
jecxz
dec
mov
daa
out
pusha
jl
aam
rcll
xchg
flds
iret
jp
push
dec
inc
sub
jp
cmp
xchg
or
mov
mov
dec
and
pusha
cmpsl
mov
es
jns
sbb
scas
jl
pop
insl
in
mov
sbb
imul
ja
mov
enter
outsb
xchg
outsl
arpl
inc
mov
addb
inc
mov
arpl
enter
add
push
cmp
cld
fiaddl
lods
push
cmc
xor
aam
xor
imul
mov
or
cmovge
cmc
in
mov
pop
mov
pop
or
les
shrb
add
fimull
jnp
jp
inc
adc
das
cmp
aaa
popf
leave
lds
sub
cltd
gs
dec
xchg
cmp
fldl
ret
aam
in
in
xchg
xchg
outsb
sbb
cmp
mov
rcrl
adc
lock
push
push
sbb
xchg
or
xchg
movd
pop
mov
or
loope
lret
and
pop
pop
int3
mov
pop
popl
pusha
and
mov
sbb
stc
dec
mov
aad
jmp
sub
gs
pushf
test
cld
add
movb
outsb
push
mov
jl
in
push
enter
push
shrl
mov
fcompl
scas
loop
or
rorl
mov
lret
rcr
dec
push
inc
pop
repz
sub
mov
cwtl
adcl
popfw
inc
jno
lods
orb
and
mov
mov
jb
push
or
and
add
jno
jl
cmc
sarb
mov
xchg
pop
xor
or
call
popf
sahf
jl
rorl
jo
fstl
lret
scas
loopne
push
inc
push
faddl
addr16
aad
mov
lock
dec
ret
add
xchg
mov
or
or
add
das
sahf
pusha
mov
das
test
sub
push
rcr
mov
subb
rol
sub
test
pop
or
adc
xchg
daa
mov
leave
xor
ss
lcall
inc
mov
push
mov
mov
lods
cli
adc
sar
adc
dec
pop
cmpxchg
jne
pop
xor
pop
xor
dec
ret
rcr
aas
pop
pop
lea
xor
test
add
das
and
packuswb
cmpl
jp
mov
sbb
loop
dec
addr16
sti
popa
mov
mov
lret
or
cli
mov
int3
fiaddl
scas
test
pop
lret
or
test
incl
push
mov
sbb
js
in
mov
cmp
jmp
movsl
jno
stc
sti
arpl
inc
inc
push
shlb
and
push
movsb
outsl
test
push
ljmp
jbe
loopne
xchg
out
scas
cld
adc
cmp
jo
mov
jecxz
push
add
push
fisttps
dec
lea
jmp
enter
lods
aam
fst
cmpsb
leave
mov
mov
ljmp
popa
test
fnstenv
jl
xor
das
add
jmp
push
cli
xchg
push
cmp
out
cmp
icebp
popf
out
xor
pop
push
sbb
out
add
movsl
sub
andb
popa
mov
inc
into
sbb
sarl
in
sbb
sbb
mov
lock
add
push
lds
xor
pusha
mov
stos
dec
imul
pop
dec
mov
lds
subb
leave
rcl
std
pop
and
pop
shrb
add
add
sahf
fldcw
outsl
sarl
dec
shlb
sti
or
cld
aas
sbb
rcll
dec
rcl
dec
jmp
lods
pushf
sti
ds
icebp
mov
fnstcw
mov
mov
mov
xchg
inc
mov
leave
sahf
push
pop
inc
push
push
mov
inc
sub
das
mov
int
xor
add
sub
pop
scas
xchg
shrl
rcrl
and
aam
fs
dec
mov
sub
lcall
leave
leave
inc
pop
aaa
ljmp
inc
ja
ret
inc
push
lods
adc
push
jmp
fisttpl
ret
call
aad
pop
lods
dec
inc
adc
stos
fcomps
inc
push
xchg
nop
imul
orl
aam
push
and
and
cltd
aad
push
xor
movsb
lods
jno
inc
repz
fiaddl
int
push
dec
xor
mov
idivb
dec
into
xor
aam
push
pop
dec
push
mov
shrl
addr16
inc
push
sbbl
cmpsb
add
insl
int3
fistpl
and
mov
inc
jnp
leave
lea
inc
cld
mov
inc
imul
cs
aas
cli
gs
rclb
addr16
pop
cwtl
adc
das
pop
cli
sbb
rcll
imul
enter
adc
push
cmp
pop
lds
mov
push
adc
lods
rcrl
adc
mov
out
push
push
push
arpl
popf
push
cs
ss
xor
into
add
push
iret
xchg
int
adc
call
pop
aaa
dec
xor
jae
jecxz
pop
jno
icebp
jb
jo
xchg
cmp
mov
push
or
dec
jo
dec
inc
push
or
inc
hlt
insl
pop
movl
inc
movsl
xchg
push
add
inc
lahf
xlat
xlat
pop
into
mov
je
mov
mov
pop
lods
fcomp
add
cmp
leave
leave
lock
cmp
rcll
cmc
or
rorb
adc
int
mov
andl
push
dec
xchg
add
mov
jns
fiaddl
fs
add
push
inc
out
xchg
or
mov
movsl
mov
mov
and
and
shl
mov
pop
pop
and
pop
ja
imul
lcall
mov
fcmovb
cwtl
sbb
and
push
mov
popa
add
push
push
push
imul
cmp
push
mov
and
lods
push
aam
adc
roll
movsb
ss
int
and
aas
mov
inc
mov
cmp
loop
inc
inc
cmp
repz
or
inc
in
lahf
and
cmp
cmp
dec
xchg
dec
jae
or
iret
sub
add
cmp
aam
sub
sbb
xchg
dec
in
xchg
das
add
imul
xor
push
cmc
iret
movsl
fsts
xor
or
xchg
adc
sub
adc
rcll
out
dec
sub
inc
add
push
jge
adc
push
sub
sahf
sub
inc
pop
dec
xorl
xor
push
mov
aad
dec
pop
je
mov
and
in
andl
cmc
cwtl
dec
lret
shll
cs
in
inc
cwtl
rorl
cld
xorps
cld
jecxz
bound
shrb
pop
inc
jno
add
loope
repz
jg
or
pop
outsb
cli
test
push
outsb
int
dec
mov
push
fwait
es
stos
cmc
and
and
roll
pop
mov
adc
outsb
imul
pushf
stc
inc
dec
stc
inc
dec
inc
stos
in
lds
and
xchg
roll
push
sti
les
cmp
and
add
pop
mov
aam
daa
ret
aas
sbb
fs
dec
adc
cmp
jne
push
cli
outsl
call
repnz
repz
repnz
and
iret
dec
lret
jecxz
push
sbb
icebp
push
mov
push
paddusb
sub
leave
les
dec
or
inc
sbb
lds
sub
imul
pop
xor
divb
push
xor
outsb
push
pushf
mov
fidivs
daa
js
sti
lret
icebp
cmpsb
sub
enter
or
dec
or
push
js
lock
xor
imul
sub
or
lods
sti
out
popf
xor
fcoml
xor
nop
mov
test
cmc
pop
loop
push
ss
dec
insb
or
shrb
in
jne
fstl
les
jp
jns
aas
dec
cwtl
rorl
push
xlat
dec
ja
outsb
in
or
imul
pop
aam
and
shr
xchg
ds
or
loop
dec
pop
sub
into
cmpb
push
jno
dec
inc
or
pop
ds
lret
or
dec
and
mov
cli
sbb
hlt
add
rorl
xchg
call
push
xchg
insl
in
int
cld
ljmp
cs
sbb
fsubp
call
in
insl
scas
lods
sub
test
push
cwtl
int3
adc
xchg
push
cmpsl
or
xlat
das
cmpsl
out
add
loope
test
jae
push
inc
mov
pop
daa
cmc
stos
sub
push
jno
xchg
sti
psubd
adc
pop
sbb
sub
xchg
enter
mov
mov
pop
into
jecxz
outsb
lock
in
in
ror
repz
inc
mov
cs
out
inc
out
add
pop
sub
rcl
mov
push
sahf
jne
int3
pop
push
dec
jecxz
sub
mov
fwait
inc
add
icebp
test
mov
xor
test
inc
inc
enter
push
aas
pop
adc
jecxz
pop
push
sti
inc
mov
out
and
jbe
or
mov
testl
xchg
stos
mov
push
cltd
cmp
pop
pop
sub
xchg
fdivrl
std
sti
out
push
stos
jne
outsl
enter
dec
or
lret
or
ret
mov
call
stos
popa
xchg
cmp
cmpsl
add
ljmp
das
mov
ret
lahf
es
xchg
jmp
lret
or
mov
cmp
add
cs
in
inc
in
orb
nop
shrb
aad
shlb
jo
sub
shll
xchg
inc
out
push
xchg
lods
inc
sub
push
dec
or
push
inc
push
addr16
dec
mov
xchg
outsb
push
bound
inc
xor
jb
xchg
loope
sbb
faddp
lock
xor
stc
inc
xchg
roll
inc
iret
or
lock
loop
rcll
pop
mov
jne
cmp
mov
inc
pop
nop
lahf
jge
mov
sub
pop
in
push
div
adc
lcall
pop
xchg
dec
rolb
jns
xlat
fldenv
in
xchg
inc
xchg
xlat
into
add
aad
rcrl
sub
sub
mov
mov
push
jae
add
mov
xchg
fwait
dec
mov
xor
mov
ljmp
ja
fucomip
adc
in
fstpl
cmp
ja
fnstcw
decl
insb
inc
push
mov
test
cmp
xor
out
loopne
push
dec
lds
imul
or
cmp
fistpll
or
lds
pop
xchg
add
fst
jecxz
mov
aaa
pop
fnop
pusha
fxch
sub
mov
xor
popa
test
repz
mov
jne
lahf
mov
mov
pop
mov
xchg
inc
mov
xchg
sbb
pop
adc
xor
sub
xchg
mov
push
push
jo
int3
ret
inc
ret
js
sub
out
aas
fnstenv
ss
jg
ret
xchg
rcrb
cmp
in
icebp
repz
mov
enter
lea
dec
movsb
jne
jae
ret
cwtl
nop
xchg
pop
dec
and
inc
adc
rolb
xor
pop
lock
cli
cmp
jno
test
daa
or
jns
iret
pushf
jns
lea
inc
pop
dec
cmp
into
and
push
jmp
hlt
mov
inc
mov
xlat
faddl
inc
int3
sub
in
cltd
mov
imulb
mov
xchg
mov
dec
lea
popf
xor
outsl
push
push
xchg
hlt
xor
or
les
xor
orl
imul
xchg
or
sub
dec
pop
pop
and
rcrl
dec
xor
cltd
insl
in
dec
mov
cmpsb
or
sub
lret
lock
dec
xchg
sbb
jae
jecxz
test
push
in
inc
jb
pop
cwtl
mulb
dec
rcll
push
adc
or
in
sub
or
test
cmp
aad
das
cmpsl
pop
es
addl
add
stc
leave
fisttpl
sub
and
out
cmp
out
dec
adc
xchg
xchg
and
xor
cmp
js
sub
inc
in
insl
push
pushf
push
adc
pop
or
gs
jbe
inc
xlat
jg
cmp
or
and
adc
inc
data16
inc
cmp
stc
sbb
loope
add
cmp
or
xor
sub
imul
nop
lret
outsb
jne
inc
mov
push
mov
xor
icebp
mov
xor
cmp
push
aaa
loope
into
loop
rorl
scas
xchg
push
jae
push
xchg
aad
dec
sub
in
pop
xchg
add
xor
data16
sbbb
push
andb
aad
sub
push
push
jns
pop
jecxz
add
clc
jmp
std
lods
in
and
push
sub
sbb
mov
sub
cwtl
nop
push
push
push
xor
cmc
cmpb
stos
push
add
sahf
pop
pop
mov
push
bound
push
and
mov
mov
aas
jecxz
divl
ds
mov
popf
pop
loopne
cmp
inc
push
add
sub
lds
jbe
adc
xlat
addr16
dec
aas
mov
mov
loope
in
sbb
dec
lcall
push
hlt
adc
aaa
ss
cmp
adc
cwtl
fwait
in
dec
add
cmp
cmp
dec
stos
mov
add
adc
imul
dec
test
lcall
xbegin
movsb
cmp
xchg
pop
xor
jl
cmp
fsubrl
in
push
pop
add
out
sbbl
popa
push
hlt
pop
fiaddl
ret
jge
sti
aad
push
add
scas
push
pop
clc
imul
or
add
rcrb
or
xchg
xor
imul
jno
mov
jg
push
cltd
cld
in
dec
mov
hlt
leave
gs
mov
sahf
sub
into
in
jns
cwtl
mov
or
mov
pusha
pop
lds
cmpsl
jb
int3
push
adc
cmp
push
nop
rclb
xorb
pop
daa
int3
sbb
mov
jns
fnstenv
jb
inc
inc
pop
stos
fcoml
pshufw
es
aad
popf
mov
sub
pop
add
test
data16
and
mov
sahf
shrl
iret
js
mov
pop
arpl
loope
sbb
push
push
pusha
cmp
dec
mov
pop
mov
and
in
mov
jne
pop
les
adc
repz
lret
inc
testl
inc
scas
or
sti
orl
xchg
into
jno
je
rcrb
xor
daa
sub
sti
xor
pop
inc
push
mov
xor
mov
mov
jp
and
dec
push
test
sbb
lret
adc
pop
mov
cltd
cmp
xchg
in
mov
xchg
and
push
mov
lea
or
cmp
rol
jns
cltd
push
jno
xor
mov
jb
mov
or
mov
pushf
stos
cmp
nop
pop
sti
add
scas
sahf
stos
mov
cmp
cmpsl
sub
fsubrl
movsl
dec
shlb
inc
fwait
push
lods
sahf
mov
dec
ja
inc
popf
adc
out
xchg
movb
nop
push
jb
dec
mov
pop
jns
loop
cmp
call
loop
das
insl
or
cmp
jne
sarb
outsl
dec
pop
or
adc
adc
lods
xchg
inc
testl
cmc
insb
or
mov
bound
pop
xchg
dec
cmp
ss
movsl
repnz
inc
push
adc
pop
in
mov
jne
mov
ds
jg
adc
lcall
outsl
mov
call
and
stos
cmpsl
and
aam
push
lods
aam
je
cmpsl
adc
inc
sub
adc
rorb
addl
xor
insl
push
in
mov
or
popa
int
push
cmp
jns
bound
dec
imul
arpl
fmull
push
flds
repz
fwait
in
or
das
test
scas
mov
popa
sti
pop
ja
xor
and
shl
clc
test
inc
fcoms
cmpsw
adc
pushf
mov
pop
sbb
xlat
add
fcmovnbe
sbb
lret
aad
mov
dec
test
dec
adc
add
addb
scas
arpl
cwtl
bound
sub
mov
inc
lea
dec
xor
pop
sbb
cli
and
xor
fcomp
jmp
xchg
pop
ljmp
push
arpl
call
stos
push
add
pop
xchg
mov
jp
and
popa
mov
aad
push
mov
mov
add
adc
inc
movsb
jbe
xor
mov
lods
pop
or
jno
leave
out
in
popf
rcll
lock
jo
add
cmp
push
push
jno
lods
xor
inc
int3
push
sbb
add
adc
insb
or
push
inc
cmpsb
fimuls
sbb
or
sbb
shl
lahf
sub
inc
pop
add
imul
es
mov
cmp
imull
adc
dec
mov
sti
repz
add
or
and
push
test
jecxz
xchg
je
jno
adc
pop
fwait
adc
roll
aas
out
outsl
mov
cmc
or
ss
xor
fcoml
pop
into
cld
jmp
lock
leave
inc
es
push
adc
pop
dec
fcmovne
inc
pop
sbb
pop
push
mov
test
or
sbb
and
enter
out
jl
adc
adc
push
in
decl
call
loop
hlt
sub
dec
sbb
sbb
xlat
cmp
mov
add
mov
xor
sahf
int3
in
xor
rcrl
mov
les
rorb
xor
add
jecxz
nop
loop
fiadds
jl
mov
rcl
or
out
rcll
mov
pop
inc
sub
arpl
jbe
das
inc
cltd
dec
fcoml
xlat
adc
test
mov
add
pop
cmc
cmp
rol
and
into
xor
dec
ljmp
sub
lea
add
inc
orb
lds
btr
sub
lods
pop
cli
gs
push
pop
int3
rcrb
sub
push
ficomps
stos
mov
scas
and
popl
aas
and
pop
cli
push
sub
out
je
add
mov
fwait
leave
cltd
sbb
inc
dec
pop
sub
push
jno
aam
dec
push
sbb
cmp
dec
push
icebp
cmc
lods
in
and
pop
jmp
imul
outsl
mov
test
pop
cmc
lret
dec
das
shll
loopne
in
shlb
js
adc
dec
push
xchg
inc
fldt
push
ljmp
outsl
ds
fidivrs
rorb
sarl
lock
mov
sub
xor
and
dec
fbstp
into
mov
dec
adc
addb
pop
adc
push
in
fcomps
jno
sbb
ret
or
mov
or
test
push
imul
rol
fmuls
cmp
push
or
inc
and
inc
xlat
inc
aad
pop
adc
inc
sbb
push
pop
push
sarb
fdivrp
jp
pushl
dec
jns
inc
dec
or
popl
add
jne
xchg
sub
inc
mov
std
xchg
sti
pop
add
jns
adc
scas
dec
push
push
scas
into
xchg
fwait
and
stos
jle
ffree
cld
inc
add
out
in
jp
sbb
push
popf
mov
dec
jle
nop
imul
repz
xchg
dec
fldenv
and
lcall
in
push
xchg
pop
pop
push
adcb
pop
sub
mull
sbb
scas
and
jno
enter
popa
and
mov
jno
sbbb
push
sbb
loope
adc
imul
pop
popa
push
clc
or
das
mov
outsb
xchg
popf
and
outsl
mov
sub
lcall
fucomi
xor
mov
out
dec
js
or
adc
pop
adc
fiaddl
push
pushf
adc
imul
std
int
dec
sbb
sub
or
in
or
scas
sbb
pop
xchg
xchg
std
jne
xchg
cld
outsl
dec
sti
fildl
out
fisttpll
frstor
cmp
daa
daa
push
scas
inc
sbb
aam
push
inc
fnstenv
dec
adc
dec
lods
scas
cmpsl
or
iret
pop
or
popa
add
cmp
cmp
pop
cmp
aas
jo
dec
jo
ljmp
or
and
mull
faddp
arpl
sbbb
and
ss
fsubs
es
or
and
xchg
aas
push
mov
cwtl
stc
push
dec
xor
mov
or
adc
inc
cmpsb
jno
cmp
or
rolb
and
lea
cwtl
pop
cmpsl
xor
mov
addl
lcall
imul
lret
adc
sub
in
xchg
std
scas
cmc
jp
fucom
iret
ljmp
xor
scas
int3
xchg
sbb
int
aam
cmp
pusha
jmp
fidivl
loopne
arpl
hlt
rorl
push
pop
iret
mov
enter
gs
inc
les
cli
cs
mov
mov
ficoms
sub
xchg
popa
sub
dec
sub
pop
pop
mov
xor
inc
sbb
jae
aaa
push
loop
push
lods
js
mov
in
jp
gs
int3
or
push
cs
and
jae
or
popa
int
add
aam
xchg
pop
loope
out
mov
xchg
xlat
dec
or
cmc
out
daa
lods
mov
iret
scas
popa
pop
xchg
dec
add
cmp
mov
pop
aaa
mov
xchg
divb
lahf
xchg
aas
popa
cli
pop
inc
inc
nop
fucomi
xor
gs
out
xor
jp
bound
jp
pop
or
mov
inc
sti
scas
and
mov
fadd
cmp
out
sti
nop
fadds
xor
bnd
push
cwtl
xor
scas
dec
repz
test
dec
pop
in
sbb
adc
scas
cmc
mov
rolb
cmp
mov
flds
mov
add
cld
ljmp
mov
dec
sahf
insl
add
std
sbb
test
sub
sbb
movsl
adc
dec
popa
shr
pop
cmp
push
xor
stos
xchg
adc
pusha
dec
cmp
lea
int
xor
sub
cmp
sbbl
xchg
es
ljmp
and
dec
sti
cmp
xchg
mull
lcall
and
lock
xchg
mov
add
ret
shrb
sbb
add
je
push
cmp
push
sbbl
test
adc
lcall
dec
iret
or
mov
xor
cld
js
push
cmp
test
push
nop
popf
xchg
pop
daa
xor
pushf
push
fnstenv
imul
jp
xchg
testb
push
loope
xchg
jp
sbb
and
imull
adc
js
mov
leave
inc
aaa
pop
xchg
cmp
aas
jns
dec
sti
inc
sbb
je
dec
jne
je
dec
jno
adc
push
shrl
sub
ficoms
pop
and
cld
xchg
in
ret
mov
rsm
sahf
rcr
adc
pop
aad
xchg
inc
or
sub
adc
or
pop
adc
inc
inc
mov
rolb
add
xor
test
int
popa
scas
jbe
or
inc
movl
xchg
pop
sbb
inc
out
je
out
add
push
mov
ljmp
shl
pop
aas
cwtl
or
hlt
sub
inc
mov
jnp
adc
dec
jecxz
jno
xor
dec
mov
lods
pushf
fldt
mov
stos
call
adc
mov
fs
repz
inc
mov
sahf
pop
sbb
xchg
pop
lret
ret
push
icebp
sub
popl
hlt
sub
xor
dec
fistps
sub
sbb
iret
popf
rolb
adc
pop
mov
sti
rorl
addr16
cli
lea
movsb
or
fisubl
int
cltd
push
fmull
push
push
push
cmpsb
inc
jns
push
jne
sbb
ss
jge
mov
lods
adcb
aad
scas
mov
jnp
mov
push
outsl
pop
mov
in
shll
inc
shrb
jae
popf
ja
pop
in
dec
daa
or
aaa
xlat
emms
jo
mov
out
inc
push
pop
daa
lods
into
and
sbb
dec
jg
pop
xor
out
inc
outsb
jle
ds
dec
lods
xor
imul
shll
cmc
cmp
add
cs
push
insb
mov
jne
daa
orl
dec
ljmp
cmp
lcall
arpl
inc
ja
cmp
mov
jnp
jno
ret
sub
adc
push
lods
add
fsubrl
inc
or
not
xorl
stc
test
fisttpll
sti
scas
cmp
popa
shl
lcall
jno
jmp
jp
jbe
cmp
stos
lcall
mov
adc
jns
xchg
into
or
push
or
mov
pop
pop
mov
sti
cs
push
add
dec
push
call
sub
pop
mov
mov
aad
inc
es
dec
push
testl
sub
mov
xor
rclb
add
call
iret
rcrl
xchg
cmpsb
adc
sub
shll
sub
push
sub
jp
es
popa
shl
pop
dec
sbb
rclb
add
adc
sub
adc
pop
pop
pop
rcll
mov
mov
push
cli
sub
insl
mov
sbb
pop
or
mov
push
das
inc
leave
shll
push
add
xor
daa
sbb
cmp
lock
pop
and
and
fcmovnbe
xor
sarb
jle
sub
jns
or
mov
or
cwtl
insl
aad
out
and
cmc
imul
push
in
mov
cmc
in
setp
enter
xchg
leave
rorl
ror
std
cmp
sub
fcoms
mov
cmp
std
xor
inc
mov
xor
sub
cwtl
cli
mov
mov
aas
xlat
roll
xchg
add
mov
cmp
add
sbb
mov
add
jl
mov
pop
sub
cmp
mov
scas
js
mov
lahf
jae
xchg
sbb
jp
pop
jle
or
push
mov
dec
movsb
sub
push
pop
out
in
sub
sub
fisttps
or
iret
fistl
dec
mov
sub
push
jge
mov
cmp
ss
jg
ss
cmpsl
movsl
mov
xchg
pop
mov
and
fnstcw
fmull
adc
mov
pop
jge
mov
sti
pop
jb
adcb
jge
xor
xchg
push
pop
and
jae
add
shl
out
push
int3
add
pop
or
xor
xor
icebp
add
mov
aas
push
aad
out
xchg
mov
sbb
jbe
jno
xor
pop
mov
jge
bound
sbb
mov
cmp
subl
xor
int3
jmp
imul
pop
and
movsb
rolb
add
push
ret
mov
in
xor
in
lds
lds
addr16
lds
sub
push
int
xchg
and
sbb
leave
push
adcb
pop
fidivl
cld
testl
push
lcall
jb
push
out
loope
ret
leave
mov
test
xor
inc
pop
fldcw
inc
sbb
pop
rclb
sbb
push
jns
mov
mov
sbb
gs
rol
push
mov
mov
add
xchg
pop
jno
lret
pop
sarb
and
sub
pusha
cmp
je
mov
cli
xchg
scas
out
jmp
notl
pop
out
push
jne
sub
fwait
loop
daa
rcll
inc
mov
jns
and
xchg
stc
lret
fidivl
or
std
sti
sbb
mov
aam
sub
dec
outsl
pop
xchg
mov
dec
mov
pop
enter
push
xor
lcall
lods
xchg
push
repnz
inc
pop
pushf
nop
jle
push
xchg
rcrb
jg
fs
cwtl
mov
lea
mov
cmp
push
adc
sbb
jne
in
sbbl
std
and
inc
add
pop
inc
cwtl
push
adc
push
out
in
sub
sub
ficomps
mov
jo
cmp
aad
push
jno
aad
pop
addr16
aam
test
pop
pop
ret
cmpsl
sub
cmpsl
or
mov
push
mov
cmp
push
push
mov
pop
and
and
add
push
rolb
mov
daa
mov
pop
xor
pop
xor
mov
sub
or
aad
sub
insl
sub
xor
adc
aas
adc
xor
xor
jno
ss
or
loopne
arpl
and
test
imul
fsub
fisubrl
ja
fstpt
int3
cmp
adc
aas
add
shll
jno
fcomps
pop
push
xchg
in
repnz
or
mov
in
mov
dec
cmp
mov
push
dec
fisubrs
jecxz
and
adc
outsb
dec
inc
inc
dec
jecxz
cmpsb
fildl
inc
inc
repz
jae
into
ja
pop
mov
pop
cmpsl
mov
jmp
enter
repz
cmp
cmp
inc
push
fldt
dec
inc
add
lds
push
jbe
lahf
adc
xchg
push
adc
dec
pop
ficompl
cmp
das
and
push
fwait
sbb
sbb
pop
xchg
rolb
dec
mov
xchg
stc
pop
xlat
mov
sub
mov
mov
cs
push
sbb
sub
cmp
outsb
adc
inc
int3
sahf
data16
subl
lcall
cmc
jns
jns
js
pop
aaa
pop
push
mov
cld
xor
insl
and
sbb
and
pop
xor
std
loope
cld
test
and
icebp
cmp
xchg
gs
in
sbb
xor
lea
mov
pop
in
mov
dec
pop
xor
test
push
nop
xchg
or
dec
aam
jne
out
inc
fdivs
xor
das
aam
inc
push
out
cs
into
xchg
in
jecxz
les
push
xor
xchg
jns
icebp
inc
jp
push
sub
insl
loope
dec
pop
push
or
ficomps
jno
call
and
call
push
xchg
dec
and
and
arpl
xor
push
sbb
bound
jmp
mul
in
hlt
scas
jecxz
push
es
sbb
push
and
adc
cmp
push
or
push
push
lds
xchg
adc
out
or
ds
xlat
pop
jmp
inc
cli
mov
cmpsl
or
or
add
dec
shr
and
push
dec
pop
push
xorb
inc
popa
pop
pop
ja
inc
shl
mov
jge
add
sub
in
popf
inc
icebp
add
leave
xchg
adc
mov
fwait
sti
xchg
int
jo
call
xor
sbb
push
lcall
push
fmuls
rclb
mov
lret
cmp
int
xor
icebp
cmpsl
or
or
xor
fwait
in
inc
sub
outsl
inc
mov
loopne
ret
popa
int3
adc
daa
xchg
inc
fwait
pop
stos
scas
adc
inc
cmp
push
dec
aaa
lock
fidivs
inc
in
pop
leave
mov
pop
jne
xchg
mov
pop
mov
lea
add
iret
push
xor
cmpsl
sbb
leave
and
mov
int3
mov
jmp
repnz
xor
or
int3
mov
xor
mov
fldcw
mov
rcll
cmp
xchg
jne
int3
test
testb
jo
sbb
jl
xchg
xchg
lods
jle
adc
push
xor
scas
or
subb
mov
scas
jg
inc
loop
and
ljmp
ja
inc
cmp
adc
insl
lds
lcall
jno
fimuls
mov
hlt
adc
add
xor
mov
int3
std
jae
inc
rcrl
sub
aas
jno
int
pop
jg
pop
adc
addl
outsb
xor
lret
jb
stc
test
shrl
shll
dec
andl
inc
stos
jo
lock
and
mov
fiadds
cli
cltd
adc
xchg
fistpl
push
inc
xor
cmc
sarl
push
pop
mov
or
outsb
xchg
ror
jo
cmp
adcb
daa
jae
and
movl
jo
cmpsl
sub
push
cmpsb
aas
ja
and
jg
pop
loopne
add
loope
addl
test
or
clc
icebp
orl
dec
sti
inc
dec
repz
popa
jbe
jo
movsl
rclb
scas
paddw
push
ret
fldenv
inc
scas
inc
bound
sub
jo
fsubrs
test
loope
les
movsb
add
jne
mov
dec
push
jle
rcrb
or
iret
notb
cmp
outsb
lds
lods
xchg
or
out
mov
push
push
icebp
jo
mov
inc
jo
sbb
add
mov
loop
add
push
mov
xor
arpl
int3
xor
dec
mov
test
fsubl
test
pop
frstor
rcl
repz
pop
inc
cmp
shlb
iret
loop
push
push
subb
scas
stos
sub
push
jmp
orb
leave
sub
stos
xchg
pop
dec
gs
aam
and
gs
data16
push
xor
aad
sbb
cld
jmp
xchg
shrl
lcall
es
or
popa
mov
add
add
inc
push
cmp
sub
bound
dec
pop
dec
into
addr16
xchg
or
out
xor
and
jge
jp
cmpsb
push
mov
fisttps
sbb
inc
negb
xor
adc
xor
jno
dec
divl
mov
pop
cmp
dec
push
lea
xchg
jo
sbb
pop
int3
add
xchg
jb
mov
pop
and
sarb
dec
loopne
cmp
or
sbb
push
add
push
push
dec
cmpsl
push
outsb
lock
das
scas
in
dec
jle
sbb
sub
pop
xor
fsts
inc
sbb
test
arpl
dec
int3
movsb
inc
sbb
push
lea
lcall
pop
adc
lret
pop
imul
imul
pop
adc
or
cli
imul
ret
xlat
in
movsl
lods
std
shll
out
std
pop
pop
adc
ffreep
out
loopne
xchg
xorl
push
lock
cmpsb
inc
iret
cmp
icebp
inc
mov
mov
fcomps
inc
icebp
adc
lds
inc
loopne
xor
aam
push
xor
xchg
push
mov
add
das
cmp
cmp
adc
pop
adc
clc
push
jmp
sub
push
xchg
xor
sbbl
loope
cmpl
xchg
sub
dec
inc
push
mov
sarb
mov
adc
loope
cmc
lea
mov
sahf
cld
les
sub
leave
outsb
insb
xlat
sbb
shl
ret
and
insb
fmull
mov
cmp
jmp
or
ret
in
cmp
rorl
xor
les
sti
jbe
inc
rclb
mov
add
cmp
inc
fcomps
push
xor
aad
and
jmp
cmp
rorb
rolb
scas
es
dec
lcall
push
add
incb
mov
xor
lcall
push
mov
sbb
pop
or
inc
into
cmp
xor
inc
jnp
inc
or
or
push
pusha
xor
xor
dec
outsl
aaa
fdivs
jo
push
xor
push
xor
jno
cmp
xor
xchg
dec
jb
pop
dec
jecxz
or
mov
jl
xor
push
xor
inc
xchg
dec
pop
cmp
les
lods
stos
xor
cmp
xorl
xor
popf
or
xor
lcall
dec
mov
mov
out
aas
adc
or
cmp
or
data16
and
or
out
out
call
mov
lret
lcall
pop
in
dec
sbb
mov
mov
adc
inc
jbe
lcall
xchg
out
or
or
mov
lret
cmc
pop
insl
mov
aam
push
int3
add
xchg
inc
shrl
xchg
sbb
scas
aam
iret
cmp
lahf
or
dec
inc
out
ret
enter
testb
mov
mov
xor
dec
and
jo
inc
sub
push
pop
es
mov
scas
out
add
orl
or
push
jo
push
test
out
aaa
cmpsl
lds
mov
bound
call
les
movsb
mov
into
push
or
iret
int
outsl
stos
xchg
es
scas
ret
push
cmp
push
xchg
sub
stos
xor
int3
je
jp
push
imul
mov
inc
and
adc
add
out
bound
sbb
push
xchg
jno
std
fistpl
pop
or
mov
push
or
jg
dec
ret
xorl
js
into
inc
fxch
dec
jle
pop
imul
jo
mov
enter
bound
cli
orb
dec
jno
rorb
fnstenv
push
mov
inc
or
lods
mov
jo
rolb
cli
xchg
lret
inc
int3
pop
lret
jle
sbb
out
lods
add
jl
sub
packsswb
push
fiadds
sti
push
and
orb
fmul
mov
arpl
ret
fstl
adc
dec
xchg
add
out
rcl
inc
xor
mov
hlt
repz
jmp
cmp
enter
lahf
xchg
pushf
sub
scas
aaa
sahf
ss
push
aad
lock
jecxz
aad
hlt
dec
imul
xor
ret
push
fs
sbb
jecxz
notl
mov
sbb
jo
lret
int
pop
cmp
ficomps
jne
mov
sbb
dec
icebp
dec
sahf
lahf
jo
adc
fnstenv
incb
mov
xlat
outsb
or
cmp
and
jb
hlt
in
aaa
inc
clc
test
xchg
xor
loope
cmovs
mov
and
inc
inc
dec
and
add
jo
dec
pushf
lock
int3
dec
fisubl
outsl
adc
mov
fiadds
rcr
and
mov
loope
aad
cltd
in
stos
cmp
lds
push
sarb
jne
mov
fcoms
in
mov
sahf
xchg
cmc
bound
xor
push
hlt
das
cltd
inc
pop
jo
addb
outsb
jns
cmpsl
xor
dec
cmp
cwtl
ss
inc
push
dec
adc
or
insl
scas
scas
xor
outsb
ss
xor
add
lret
hlt
push
add
fimull
pop
idiv
push
in
fstpt
dec
int3
fsubp
mov
lods
xchg
icebp
mov
mov
xlat
lcall
sub
arpl
fsub
inc
arpl
stc
push
dec
cli
mov
push
and
pop
dec
jo
test
adc
lods
cmpsb
adc
lods
mov
or
popf
fcom
and
xor
jp
test
mov
clc
arpl
cmc
fcmovnbe
into
scas
or
mov
xor
pusha
pusha
int3
jo
cmp
mov
adc
test
andl
test
sub
add
cmp
pop
fimull
push
adc
mov
mov
loopne
les
pushf
inc
int
aaa
or
cmc
xchg
in
rcl
cmp
lret
xchg
mov
xor
scas
pop
sbb
cld
pop
mov
jno
cmpb
js
aad
and
ljmp
push
int3
into
subl
cmp
nop
int3
mov
or
or
popa
in
mov
sub
dec
shll
pop
incb
fldl
fsub
cmc
mov
sub
adc
mov
sbb
les
stc
dec
pop
fcomp
push
arpl
mov
mov
add
or
cpuid
into
ss
rolb
cmpsl
sbb
push
cs
pop
inc
xchg
mov
jecxz
out
jo
jns
sbb
xor
jmp
dec
orl
out
inc
mov
cmc
cli
push
shrb
add
xchg
jmp
cltd
cld
dec
add
lock
out
fcomip
into
add
dec
push
int
xchg
dec
jo
mov
or
outsb
les
jo
pminsw
xor
ja
sub
jp
pop
inc
mov
cmp
sahf
out
mov
push
mov
nop
int3
test
adc
push
xchg
push
add
push
popf
push
push
in
push
leave
xchg
in
mov
cmp
std
pop
subl
mov
lret
fnsave
pushf
insl
mov
fs
lcall
jo
fdivrs
sbb
add
mov
std
in
shrl
outsl
push
cli
jo
vxorps
xchg
pop
sub
xorl
adc
xor
rorl
aad
push
pop
mov
adc
dec
dec
xor
dec
sti
data16
stos
sub
icebp
pop
insb
clc
cmpsl
cmp
mov
in
xor
push
fstpt
inc
cmp
dec
jo
adc
jecxz
sbb
or
push
jp
jb
test
hlt
pop
test
pop
rorl
jmp
cld
mov
pop
lcall
aas
in
mov
jb
add
or
das
repnz
loope
mov
aaa
cmp
mov
or
mov
dec
shrb
and
jge
push
jg
mov
sti
cld
jne
jmp
and
test
fcompl
int3
mov
imull
std
adc
mov
push
push
rolb
jo
adc
in
jge
cmp
jo
pop
cltd
jp
cmc
cmp
jg
lahf
inc
or
loope
and
inc
and
daa
pusha
jns
sbb
mov
dec
dec
push
pop
dec
xor
dec
dec
sub
cwtl
xor
dec
push
add
xchg
mov
sti
lods
push
mov
icebp
cmpsl
aam
int
fwait
push
int
add
push
ja
mov
outsl
mov
test
push
into
or
inc
cmp
pop
adc
cmp
inc
jo
daa
add
push
call
pushf
mov
fwait
inc
jnp
repz
lods
mov
lods
mov
out
lods
xchg
jo
andl
popf
pop
inc
or
stos
mov
dec
stc
fists
loopne
pop
sahf
jmp
lcall
int3
push
fwait
sbb
pop
arpl
xchg
cli
and
inc
inc
popa
arpl
xchg
stos
or
xor
dec
incl
push
push
push
mov
hlt
ss
xchg
lds
scas
sub
lcall
sub
dec
add
sub
pop
cs
cmp
pop
fmull
dec
adc
gs
mov
aad
roll
and
insb
imul
shrl
push
fiaddl
jle
bound
in
into
pop
cmp
dec
xor
fsubs
data16
out
jnp
dec
and
clc
int
mov
adc
push
jno
scas
pop
ret
xchg
cmp
dec
pushf
push
repnz
dec
or
pop
fwait
push
cmp
testl
push
jecxz
add
inc
jne
clc
ds
adc
ds
xchg
xchg
jae
fnstsw
jge
movsl
repz
push
lods
cld
gs
rorb
adc
mov
mov
push
movsl
push
jno
sti
push
shrb
ret
xlat
push
outsl
ret
xchg
addb
mov
icebp
in
xor
nop
pop
push
rolb
cmc
xor
cli
movsl
lcall
dec
add
fs
lcall
daa
out
insb
pop
dec
pop
and
inc
aaa
out
dec
mov
add
popa
fistpl
jg
test
test
test
sti
scas
mov
insl
push
pushf
xchg
mov
popf
push
or
xchg
ret
cltd
lds
xchg
shlb
pop
mov
adc
cmc
lea
popa
cmp
jne
pop
push
test
xor
lret
jns
mov
int3
xor
shll
jp
ss
and
call
imul
test
sub
movb
sahf
ret
dec
arpl
loopne
sbb
mov
push
push
mov
inc
lds
fsubrl
mov
repz
adc
pop
daa
mov
iret
mov
jnp
push
lods
push
jo
popa
sbb
or
adc
jne
inc
std
test
push
or
jge
push
jno
cmp
inc
cmp
cmp
test
roll
sbb
xor
adc
push
adc
aaa
or
cwtl
lret
ljmp
faddl
inc
mov
inc
ds
aas
jno
mov
shll
icebp
cwtl
add
in
stos
or
scas
lret
pop
or
clc
jo
aam
cmpsb
in
adc
xor
sub
jno
add
xor
sub
jb
pop
cmp
data16
jg
cs
mov
xchg
cwtl
flds
xchg
int3
or
test
arpl
fistl
cwtl
inc
xchg
xlat
or
popa
push
add
dec
sahf
movsb
and
jmp
imul
pushf
in
adcl
shr
aas
jo
push
loop
adc
lds
inc
insl
add
jo
inc
jecxz
shrl
mov
stos
lods
xor
push
sbb
mov
ret
add
cwtl
imul
aam
pop
rclb
inc
jno
popf
arpl
mov
sarb
or
mov
xor
mov
jno
push
shlb
addl
sub
dec
cmc
push
imul
cmp
mov
jo
cmp
int3
add
fdivs
sti
or
je
mov
jae
xchg
push
push
mov
sub
sbb
repz
xchg
jo
cmp
mov
enter
dec
or
test
insl
pop
fstps
stos
inc
and
cmp
push
sbb
movsb
pop
fcompl
push
or
inc
xor
adc
jmp
sub
inc
jmp
cltd
lret
fwait
movsb
sbb
outsb
mov
mov
aas
cmc
daa
add
lods
sub
add
sti
arpl
fldt
add
lds
mov
pop
pop
mov
fbld
pop
mov
and
sbb
lret
inc
icebp
sbb
push
xchg
int3
cld
inc
outsl
mov
ret
inc
cwtl
adc
or
adcl
push
je
outsb
jne
fwait
add
iret
outsl
insl
mov
push
xchg
jo
mov
aas
movsb
push
jmp
leave
xchg
cmc
push
pushf
test
xchg
addl
or
xchg
gs
sbb
int
insl
push
cmc
clc
adc
lods
ljmp
push
shrl
adc
popa
ljmp
into
mov
or
sbb
jg
hlt
mov
mov
cmp
cmpl
pusha
xchg
sarl
pop
adc
xor
push
push
lahf
subb
pop
mov
sbb
jno
loopne
pop
movl
jge
adc
vmovss
pop
pop
sub
lds
push
subl
pop
dec
insl
dec
lret
into
jo
jno
arpl
scas
and
stos
data16
rclb
shll
push
ja
xchg
in
inc
push
outsb
nop
hlt
push
mov
incl
aaa
dec
mov
mul
add
popa
sbb
scas
std
mov
cmc
fwait
xor
loop
gs
xchg
jno
jns
incb
cld
fsub
adc
xchg
das
aad
xor
cmp
andl
in
add
or
aad
sbb
out
shrl
mov
lods
es
sub
xchg
fidivs
xchg
fisubl
xor
cmp
sub
into
cmp
sti
fstl
pop
adc
dec
into
jo
mov
lcall
sub
xchg
mov
loop
outsl
cmp
xchg
shlb
lret
adc
pop
movsl
and
inc
mov
push
xorl
pop
jo
mov
add
and
enter
and
push
jo
int
shlb
adc
loopne
pop
jae
inc
inc
sbbb
ret
mov
mov
fwait
daa
in
sbb
clc
adc
xchg
loopne
and
lcall
loopne
pop
mov
inc
push
shl
adc
hlt
les
sub
daa
iret
jns
fstp
lret
loopne
cmpsl
add
dec
rclb
jmp
cmp
ljmp
lock
add
jno
dec
out
stos
push
pop
int
dec
xor
push
popa
and
pop
outsb
shrl
mov
jp
add
adc
aas
test
xchg
pop
and
test
lret
pop
ljmp
rcll
rorl
mov
fnstsw
je
jno
mov
insl
mov
cmp
push
cmc
sti
add
iret
dec
call
cmp
jmp
cli
scas
dec
and
push
dec
push
das
pop
mov
adc
add
sar
jbe
aad
imul
xor
push
jl
dec
xchg
std
cmp
jl
je
dec
mov
aam
xchg
lcall
xor
rclb
outsl
loop
mov
imull
inc
cli
into
mov
xor
rorl
scas
fnstsw
aam
and
rorb
int3
cmp
dec
sbb
aad
pop
push
push
inc
cmp
dec
xchg
xchg
subl
lds
xor
ja
xchg
add
mov
fwait
and
cmp
sahf
push
and
pop
into
adc
adc
xchg
mov
push
adc
pop
shl
jno
mov
nop
enter
sub
jns
dec
jbe
inc
cmp
mov
xchg
sahf
fs
bound
aad
jb
dec
mov
inc
sbb
iret
inc
and
sub
adc
js
pop
pop
dec
push
daa
xor
ret
dec
dec
sub
mov
push
mov
jae
hlt
sub
add
mov
dec
dec
sbbl
insl
stc
enter
fs
add
cmp
jo
dec
into
and
cmp
mov
test
int3
mov
adc
div
xchg
ss
nop
inc
add
inc
mov
cmpsb
add
adc
sbb
and
arpl
inc
cmpsb
push
out
enter
or
push
rcrb
jo
out
testl
scas
aaa
sbb
arpl
adc
inc
xchg
sti
shr
xchg
rorl
ljmp
cmc
lcall
dec
divb
imulb
ja
sbb
xlat
add
inc
xor
rorb
divps
ficomps
les
mov
dec
dec
push
mov
sarl
adc
dec
push
dec
aad
push
in
cli
cmpsl
mov
outsb
mov
fstpt
or
xchg
lcall
inc
in
lahf
cmp
jmp
mov
sub
ret
cmp
push
incl
aas
mov
into
push
dec
and
dec
lea
test
adc
pop
ja
std
jbe
scas
dec
add
jbe
jo
xchg
ss
lds
cltd
push
cs
add
push
or
lret
mov
adc
xchg
popa
jl
imul
xchg
push
or
sub
out
imul
jo
and
cmp
adc
cmp
pusha
movsb
sub
insb
pop
sbb
adc
and
mov
jmp
mov
xchg
out
clc
xor
sub
lods
dec
in
inc
iret
test
push
jo
push
mov
push
or
inc
pop
das
sub
xchg
pop
sub
rclb
mov
out
or
loope
jno
movsl
outsw
lea
je
test
mov
dec
push
jecxz
out
xor
sub
fildll
mov
inc
call
mov
adc
jae
dec
mov
cmpsl
jmp
imul
adc
jae
aad
ret
pop
aad
xlat
cmp
mov
adc
dec
mov
push
mov
xor
xchg
push
sahf
jns
xchg
jns
jo
lcall
scas
js
mov
jp
fstpl
in
out
push
jo
mov
iret
dec
mov
xor
mov
push
dec
arpl
cmc
into
pop
xor
and
popa
and
cmc
push
dec
jge
pop
loope
in
addb
mov
arpl
inc
sbb
sub
cmpsl
rorb
fldl
cs
test
movsl
int3
inc
push
add
das
popf
jns
ret
pop
mov
repz
sub
push
lock
add
int
sbb
icebp
dec
shl
pop
enter
incb
ja
mov
pop
cmp
cwtl
sub
addr16
popf
in
out
loopne
push
imul
out
pop
push
cmp
lds
lcall
cmp
xchg
pop
jne
adc
ret
js
xlat
mov
lods
pop
data16
imul
cmp
lods
mov
push
cld
dec
inc
jno
je
aad
aam
sahf
iret
bound
inc
mov
mov
aad
push
imul
xchg
or
and
sahf
nop
mov
mov
bound
in
and
pop
aam
aam
je
pop
pop
mov
xor
pusha
cmc
dec
mov
jmp
mov
cmovae
clc
inc
outsb
jb
xor
ficompl
pop
push
fiadds
push
and
or
cmp
rorl
or
shll
jl
pusha
push
aam
pop
cmp
sub
inc
mov
sti
push
lods
addb
mov
mov
push
aam
xchg
sub
sub
push
and
ss
push
pop
push
js
movsl
add
nop
sbb
pop
lods
inc
ja
jmp
mov
jmp
mov
mov
dec
gs
and
aaa
lock
in
pop
daa
fistl
mov
pop
xor
cmpsl
dec
inc
push
pop
call
fldt
cmpsl
int3
sub
cmp
lock
pop
sbb
xchg
pop
mov
enter
xor
leave
push
ja
sbb
dec
xor
gs
ret
dec
dec
in
mov
es
inc
push
cmp
sub
sbb
jo
inc
test
jmp
lock
push
sub
jnp
and
stc
sar
inc
mov
cli
repz
push
pop
inc
mov
add
inc
jae
leave
and
adc
mov
lds
fldcw
fucom
jg
movsb
mov
mov
xlat
inc
aam
push
sbb
push
in
movsl
iret
lahf
stos
mov
loope
fstl
pop
mul
sbb
std
repz
jno
xor
xchg
jecxz
jmp
xor
lea
push
movsl
pop
lret
fnstenv
jp
push
fisubrl
stc
cmp
xchg
or
cld
dec
push
cltd
aaa
aad
jecxz
int
add
movsb
jnp
outsl
jbe
icebp
or
mov
dec
hlt
cli
jmp
sub
pop
mov
xor
pop
pop
mov
aas
fidivrs
pop
xchg
cmpsl
xor
mov
mov
and
sbb
leave
lcall
add
add
lds
sub
in
lods
xchg
dec
int3
test
adc
dec
mov
xor
bound
add
pop
push
add
fnsave
je
sarl
enter
fnstenv
jmp
arpl
enter
cli
inc
lret
adc
data16
fdivrp
fwait
jle
sbb
fbstp
popa
sbb
push
ret
mov
icebp
orl
fdivs
pop
mov
cmpsb
inc
outsb
push
hlt
adc
push
addr16
aad
add
movsb
cmp
dec
pusha
mov
xor
enter
sarl
mov
das
inc
gs
sbb
push
popa
add
pop
push
push
xchg
xlat
int
dec
mov
jae
std
xor
cmpsl
add
adc
cmp
xchg
in
jno
aaa
mov
xchg
arpl
push
dec
sbbb
out
stos
pop
in
fcomp
dec
push
cltd
out
addr16
dec
enter
pop
sarl
dec
lret
mov
lcall
loope
loope
inc
pop
out
cmp
push
dec
ret
mov
dec
stos
rorl
adc
cmpsb
mov
incb
or
mov
xor
sbb
adc
add
movsl
cmp
fistpl
aas
daa
push
push
sbb
lods
sub
int3
pop
or
addb
pop
les
repz
dec
filds
sar
or
outsl
xchg
dec
lcall
or
jg
xor
int
jo
adc
scas
push
fsubrp
pop
stos
jmp
fdivs
sub
fisubl
orl
pop
ror
lahf
arpl
xor
shlb
in
loope
sub
cmp
mov
insb
adc
pusha
sub
or
inc
outsl
push
cmp
xor
xor
nop
rcll
movsb
dec
lds
lods
insl
xor
lcall
or
enter
cmp
aam
push
fcomps
xchg
ret
dec
ret
cmp
cmp
ss
fildl
inc
xchg
dec
cmc
cmp
adc
vorpd
adc
js
adc
sbbb
pop
imull
push
inc
pusha
aad
sub
mov
xor
sbb
aad
out
push
sub
jge
lret
sub
jno
mov
popf
test
pop
add
mov
adc
jb
lea
ret
push
dec
iret
repz
and
int3
insl
adc
pop
push
scas
push
test
dec
std
or
and
sub
pop
data16
mov
push
lret
icebp
xchg
dec
aad
xchg
sar
cld
out
xchg
push
iret
shlb
push
loopne
lea
cmp
or
adc
mov
adc
enter
add
inc
sub
inc
jmp
mov
xor
shll
xchg
push
sbb
cmp
gs
push
fisttps
mov
insl
pop
fisttps
dec
lret
mov
dec
sub
rcll
mov
adc
pop
ja
aaa
pop
xor
push
jno
jno
push
inc
inc
adc
imul
dec
popf
mov
pushl
repz
popf
lds
pushf
mov
outsb
pop
and
hlt
cmp
lcall
jp
inc
sti
test
test
push
and
push
test
orb
icebp
cmp
lret
lret
cmp
pop
movsb
jb
popf
cmpl
sub
xor
ljmp
jecxz
cmp
push
std
jecxz
sbb
fadds
add
add
sti
lret
jl
outsb
cmp
inc
fstpt
shll
and
ds
push
out
imul
popf
data16
xor
inc
fcoml
xor
push
dec
pop
mov
push
ret
cmpb
lods
ret
dec
ret
mov
pop
fwait
sub
push
mov
loopne
xor
roll
repnz
jno
insb
leave
mov
xor
push
dec
dec
sbb
addr16
movsl
icebp
popa
psubq
test
xchg
sahf
movsl
enter
add
subb
adc
lods
in
jmp
scas
xchg
fucomp
mov
or
jo
sub
push
sub
fldl
test
shll
mov
sbb
inc
sub
add
test
fwait
pop
pop
mov
cwtl
jo
adc
mov
and
xor
and
rcll
xchg
pop
xchg
imul
outsb
xchg
in
fadds
fcomps
mov
rcl
fbstp
scas
add
inc
jecxz
inc
mov
nop
test
loop
cmp
ror
mov
cmp
int3
or
push
dec
xor
push
push
xchg
dec
out
loope
push
xor
jae
xchg
add
test
dec
xor
cmp
xor
mov
and
dec
cmp
outsb
mov
push
cmp
fcomps
push
push
adc
cmp
inc
sbb
push
xorl
in
fisubl
and
lea
outsl
adc
adc
xlat
mov
mov
cs
rcll
cmp
adc
pmulhw
aad
cmp
fmuls
sub
mov
sbb
sti
push
jo
ss
xchg
repnz
ds
test
push
repz
inc
adc
rcr
push
dec
enter
fsts
inc
lods
pop
and
int
sub
dec
push
imul
sbb
and
dec
inc
sub
cld
dec
fcomp
pop
cmp
inc
mov
call
into
dec
cld
fnstenv
adc
in
mov
sub
fwait
jb
push
leave
xor
xchg
or
or
in
pop
cld
pusha
sarl
ss
jecxz
xor
add
ret
sbb
push
out
or
dec
int3
push
dec
sbb
addr16
dec
stos
fs
push
out
xor
stc
enter
cli
arpl
inc
fldl
or
out
repnz
pushf
and
add
das
push
ss
xor
xchg
sub
iret
aam
jo
adc
cmp
or
fsubrl
sub
mov
aaa
arpl
xchg
push
xor
in
jg
fdivl
pushf
daa
add
fimull
pop
cmp
lret
mov
or
xchg
dec
jo
dec
xor
mov
fisttpll
loope
out
xchg
dec
jp
dec
sbb
roll
imul
adcl
js
cmpsl
dec
movsb
cld
mov
stos
mov
out
test
stc
mull
popa
adc
outsb
cmpsl
xor
push
push
ja
fwait
mov
out
icebp
push
inc
movsb
pop
test
lea
cld
movl
sub
imul
shl
movsb
shll
mov
arpl
xchg
movsl
xor
mov
mov
mov
inc
jo
sub
jo
mov
cld
or
scas
cmpl
or
imull
lods
inc
scas
testb
hlt
push
ja
mov
jb
cmc
mov
pop
sub
hlt
jo
mov
cmp
inc
cmpsl
mov
out
xlat
xchg
es
pop
cmp
mov
pop
sub
inc
push
mov
icebp
xor
pusha
push
arpl
aam
in
push
adcb
enter
mov
push
cld
rcrb
hlt
jae
fistl
jo
lret
call
ret
push
repnz
pop
gs
xor
xchg
inc
inc
ror
mov
xor
pop
mov
or
fstpt
push
in
or
push
dec
or
out
add
aaa
inc
aas
jo
clc
inc
cmp
add
psubw
dec
aaa
je
iret
add
cltd
push
dec
ja
test
pop
fcomps
repz
adc
push
pop
outsb
sti
in
push
loope
fnstcw
loop
outsb
cmp
int3
cmpsb
adc
xchg
imul
ret
mov
xchg
mov
out
leave
sbbb
rcl
loope
mov
xor
in
lock
or
mov
push
test
xor
je
dec
jo
or
adc
ja
aad
mov
and
jno
enter
pxor
repnz
push
and
push
loope
in
rclb
ret
inc
aaa
out
adcb
dec
xchg
sarl
sahf
mov
mov
xor
pop
into
and
shlb
sbb
cmp
push
jo
xchg
xchg
adcb
sahf
push
cmp
sbb
ljmp
adc
lcall
xchg
and
aam
insl
cmpsl
loop
insl
aas
or
subb
push
push
insl
rcll
or
push
hlt
or
minps
dec
pop
adc
jae
inc
push
or
mov
mov
aas
int3
nop
cs
lods
lahf
ja
xchg
or
cld
add
repz
into
xchg
sub
xor
stc
dec
into
aam
shlb
xchg
jge
inc
outsb
iret
dec
and
push
imul
push
push
popa
jmp
xchg
sub
dec
arpl
mov
push
inc
push
aaa
test
imul
test
jecxz
inc
xor
push
fnstenv
imul
xor
fs
into
into
or
test
jle
sbb
dec
int
or
rorl
loopne
inc
insl
xchg
mov
xor
xor
mov
lea
push
inc
cmpsl
out
rolb
inc
int3
adc
xchg
and
jbe
push
push
adc
push
push
lcall
xlat
jno
dec
lods
lea
add
cs
sbb
mov
mov
dec
add
sub
dec
inc
jmp
inc
push
pop
xchg
lcall
aam
rcl
push
add
push
ds
xchg
jo
or
adc
adc
pop
sub
mov
jo
push
aad
mov
or
adc
xchg
out
ja
push
pushl
sub
dec
xchg
xchg
and
dec
aam
inc
sub
push
hlt
push
cmp
cmp
arpl
ret
and
mov
or
cmp
enter
xor
jno
mov
es
push
and
mov
pop
aaa
jge
mov
jne
push
push
adc
leave
push
daa
inc
inc
shlb
cmp
into
ret
lods
sub
xchg
or
cwtl
dec
push
dec
mov
inc
mov
lcall
xchg
and
les
fdivl
ret
add
gs
adc
gs
pusha
data16
cmp
je
orl
mov
push
mov
adc
nop
sub
or
mov
rcrb
cli
and
pop
shrb
push
lods
jle
je
sti
sub
lods
movsl
movsl
cld
jo
addr16
xlat
ljmp
ja
push
jns
popa
aad
mov
push
leave
imul
push
fnstcw
faddl
loope
shrb
insl
inc
inc
sarb
imul
call
jns
push
push
xchg
pop
in
out
xor
dec
push
cmp
inc
pop
sub
das
cmp
insb
and
lret
jge
fidivrl
loopne
push
in
xchg
pop
pop
dec
push
push
push
aas
andb
mov
outsl
mov
pop
rclb
push
dec
inc
ss
push
mov
aaa
insl
jo
sbb
jp
fcoml
test
imul
dec
pop
lds
and
into
icebp
ret
inc
xchg
int3
sub
rcl
xchg
or
pop
pop
sets
inc
sub
loop
lea
lcall
adc
in
jnp
lods
aas
cli
cmpsb
dec
ljmp
xchg
jbe
mov
inc
popa
jg
push
enter
mov
dec
push
mov
insl
fadds
jo
mov
sahf
pop
mov
nop
dec
imul
mov
pop
imul
iret
stos
imul
mov
xlat
addr16
aam
shrl
cmpsb
fbstp
call
and
sbb
fdivrs
adc
pop
and
mov
push
adc
mov
cmp
sbb
xor
jae
mov
subl
sub
lahf
bound
loop
pop
cmp
dec
das
mov
and
outsl
inc
xor
dec
rorb
test
sbbl
fld
push
or
cli
sbb
pop
xchg
dec
jecxz
push
push
dec
iret
aad
mov
and
xchg
js
pushf
pop
jl
push
xchg
jmp
cld
jo
cmp
ljmp
stc
sti
push
stos
sub
adcb
popa
rorb
shr
xchg
test
scas
adc
inc
cmp
mov
or
xor
in
xchg
das
cmp
add
and
test
pop
aam
dec
push
rcll
add
xor
hlt
cmp
add
xchg
aam
fwait
daa
xchg
movl
shr
cwtl
sub
test
jo
adc
dec
mov
inc
fwait
inc
mov
sbb
insl
xchg
call
fnsave
scas
inc
mov
iret
test
or
xor
cmp
gs
cli
xor
data16
inc
lret
push
add
xchg
in
and
shll
push
mov
mov
xor
and
cmp
xchg
daa
bswap
pop
fwait
inc
enter
and
xchg
pop
adc
ror
adc
push
and
pop
jge
mov
sbb
fimuls
out
dec
mov
mov
xchg
inc
lock
or
pop
imul
and
or
ljmp
outsb
fwait
cld
repz
and
cli
in
or
pop
js
test
xor
xor
je
mov
mov
loopne
inc
push
scas
xor
pop
dec
xchg
stos
jo
ret
push
pop
cs
sub
or
sub
mov
jmp
sbb
sub
lret
xchg
in
cli
sub
shrb
add
dec
inc
aaa
xor
inc
push
arpl
and
lret
lea
gs
fs
mov
mov
insb
rcll
jb
fldl
xlat
loopne
or
jnp
xor
lea
dec
pop
mull
adc
int3
in
aas
mov
sub
dec
push
sbb
out
pop
rcrl
jbe
xchg
mov
in
aad
dec
fcomps
outsb
jl
iret
xchg
cli
lods
xlat
fldenv
icebp
dec
cltd
icebp
and
outsb
loopne
sub
pop
icebp
or
lock
adc
icebp
or
cmp
outsb
pop
mov
dec
cs
cmp
push
scas
int3
mov
xor
pop
insb
int
dec
push
cwtl
in
gs
sarl
ss
gs
cmp
popa
pop
rolb
cwtl
outsb
js
mov
dec
in
decl
push
jo
and
es
push
adc
aam
adc
xor
in
mul
aas
add
fmul
dec
hlt
jecxz
out
icebp
out
test
rcr
pmulhw
xor
fstpt
inc
sub
int3
test
push
xor
add
cmp
dec
jg
mov
inc
or
jne
cld
push
aad
xchg
xor
mov
xchg
sub
and
cli
lcall
mov
cmp
cwtl
out
pop
call
dec
sti
test
push
jno
inc
lahf
mov
xchg
jo
push
cmp
sbb
dec
and
push
pop
and
pop
jecxz
mov
push
mov
mov
inc
dec
gs
mov
sub
mov
roll
int
std
mov
pop
inc
js
inc
dec
aad
inc
fildl
inc
mov
inc
xchg
sbb
dec
clc
jo
das
cmc
mov
loope
lock
aas
pop
hlt
inc
jmp
push
mov
enter
add
call
scas
mov
adc
addl
xor
mov
dec
pop
inc
xchg
gs
ja
imul
jecxz
gs
jl
insl
push
into
push
xor
xor
lret
inc
add
test
mov
mov
add
js
int3
stos
sub
stc
cmp
inc
push
and
shll
xlat
pop
addr16
xor
push
or
lahf
sbb
push
popa
pop
or
adc
inc
jo
aaa
sbb
rcll
int
xchg
pop
mov
daa
and
int3
or
inc
or
pop
xor
adc
pop
and
fwait
stc
add
jno
jge
cmpsb
push
mov
std
pop
rclb
push
ficompl
jne
push
jbe
rcll
and
pop
idivb
adc
fsts
int3
jns
jmp
push
addb
cld
xorl
push
dec
xchg
adc
shl
repnz
pusha
mov
faddl
xchg
sub
subl
cmp
les
imul
stos
fidivl
xchg
pop
cmp
addr16
add
rolb
inc
mov
cmp
dec
jns
pop
repz
lea
adc
push
mov
xchg
mov
notl
add
psllq
cs
pop
jmp
xchg
sbb
add
xorb
std
cltd
pop
push
inc
sti
dec
gs
fldenv
push
mov
push
push
inc
into
icebp
pop
xchg
mov
jge
outsl
jle
fyl2x
out
cltd
pop
dec
imul
sbb
pop
inc
dec
popa
in
movb
sbb
das
mov
push
sti
test
sbb
push
stc
into
adc
ret
movb
pop
sbb
push
adc
sbb
dec
inc
jge
loope
and
or
mull
push
xor
inc
xchg
add
cmp
jb
push
push
and
lahf
insl
icebp
int
jge
pop
mov
jb
inc
jns
int
jo
push
adc
jae
mov
or
in
in
das
inc
mov
dec
or
lsl
sbb
lea
mov
jecxz
mov
xchg
lahf
sahf
mov
inc
push
fadd
push
icebp
xchg
hlt
or
or
aad
add
dec
leave
fdivr
push
in
jno
sbb
cs
xor
dec
adc
xor
aad
or
jle
push
stos
in
in
jae
or
cmpb
mov
ret
inc
mov
dec
inc
pop
jp
shll
push
out
cmp
cmp
mov
xchg
stc
mov
hlt
pop
pop
adc
cli
shl
sbb
shll
fsubs
pop
stos
int
mov
mov
xchg
fisttpl
pop
ljmp
cmp
xor
xchg
jp
fistpl
adc
out
ret
iret
pushf
xor
sarl
sbb
adc
mov
icebp
mul
aaa
mov
xchg
jmp
jo
jne
test
mov
fbstp
outsl
cli
adc
cmp
add
mov
xlat
adc
rcr
push
xor
fdecstp
scas
dec
lods
shr
xchg
inc
out
adc
jne
stc
dec
jno
insb
xor
mov
dec
xor
push
ficoml
insl
not
nop
push
or
stos
bound
jecxz
sbb
pop
sub
add
in
test
movl
stc
into
lahf
push
jbe
ret
sbb
jg
and
cmp
xor
add
fdivs
or
lea
dec
les
jge
nop
imul
decl
add
jns
push
dec
jge
push
push
lock
repz
dec
mov
shl
inc
jbe
pop
addb
jns
loopne
xor
mov
shl
fsubrs
add
xchg
lcall
and
push
xor
jno
rcrl
enter
jo
call
mov
dec
stos
repnz
dec
jle
mov
and
inc
cmp
cmp
cs
out
cmp
jo
mov
mov
cmpsl
sub
in
fs
rolb
rcrb
xor
je
notl
sub
fucomp
adc
fisttpll
and
mov
into
pop
fxch
push
xchg
jg
sti
pop
jecxz
je
setne
and
test
mov
stos
das
jle
dec
int
inc
lcall
aad
push
inc
or
sub
nop
ret
mov
fildl
xchg
jns
cli
adc
dec
inc
sbb
inc
lods
out
fst
inc
inc
fisttpll
dec
mov
int
enter
inc
jno
ss
fsubs
jno
adc
ljmp
push
iret
jnp
mov
mov
sbb
cmp
loope
inc
push
in
test
stc
jmp
pop
pop
jecxz
outsb
sub
or
xchg
mov
insl
xor
jl
in
aad
adc
shrb
mov
xchg
dec
sub
inc
arpl
aas
inc
jg
call
mov
push
adc
jo
adc
jnp
add
aas
jne
dec
fdivl
mov
adc
sbb
sbb
pop
int
sbb
push
mov
test
adc
mov
pop
aam
outsb
pop
xchg
lret
jbe
test
add
jno
sahf
pop
push
jo
aad
jb
mov
test
add
imul
xchg
inc
jno
cmpsl
pop
fs
mov
sub
inc
rcl
inc
jbe
inc
shlb
and
inc
fadds
sahf
les
pop
jae
inc
pop
enter
ss
out
and
jge
sbbb
xchg
add
sbb
add
add
movsb
gs
inc
dec
mov
jno
imul
and
inc
fidivrl
out
jmp
cmp
pop
push
mov
xorb
in
cli
test
pop
inc
fnsave
addl
jno
xchg
int3
push
jp
adc
cld
ljmp
cmp
imul
lahf
pop
xor
push
pushf
inc
xchg
nop
mov
mov
rorb
in
lods
jo
push
sub
sub
addl
add
dec
cmp
imul
pop
into
sub
xor
jns
xor
xchg
cmp
stos
arpl
or
addl
inc
sbb
add
xor
test
lock
push
mov
add
mov
std
or
inc
leave
sub
mov
aad
push
or
shrl
icebp
jno
sub
call
sahf
stc
sti
lea
xlat
bound
xor
das
mov
pop
push
lods
lret
dec
xlat
lea
fs
fnstenv
leave
xor
divb
cmp
aaa
cli
dec
mov
mov
cmp
sti
add
dec
cmpl
mov
mov
insb
mov
adc
int
mov
negb
stc
dec
xchg
loop
pop
or
or
stc
push
ja
cmp
shrl
in
push
push
icebp
lds
iret
jnp
add
and
pop
xlat
xorps
les
dec
dec
into
xor
pop
pop
faddl
sbb
jns
ss
mov
pop
jnp
or
mov
test
inc
adcl
add
lods
sub
jge
dec
flds
xlat
rorb
aaa
push
lea
cmp
sub
jns
xor
push
clc
addr16
shll
mulb
add
aaa
and
sbb
fimull
dec
int3
push
loopne
rcl
outsb
fwait
movsl
inc
sub
sub
ds
leave
insl
or
ficoml
hlt
fsubl
in
imul
in
ret
stos
xor
xchg
cmp
cmp
xchg
sub
dec
outsl
inc
sub
inc
mov
inc
jecxz
jne
mov
and
in
js
pop
dec
mov
push
in
add
in
test
inc
or
jbe
adc
and
cmp
dec
cmp
push
dec
iret
sbb
mov
fwait
xchg
add
imul
outsb
inc
ds
mov
inc
add
sub
je
push
pop
sar
xlat
mov
push
sbb
inc
or
pop
and
clc
sar
dec
xor
fisttpl
aam
lods
adc
push
sub
or
movswl
add
test
inc
test
test
fildl
push
or
dec
jmp
subb
pop
xchg
aas
pop
jae
rclb
push
cmp
adc
das
sbb
dec
add
fwait
mov
sbb
idivl
popf
xor
jns
add
fildll
or
jno
test
ret
popa
mov
lock
sub
push
mov
xchg
adc
mov
adc
test
add
dec
nop
test
jo
cmp
push
outsb
je
leave
inc
lods
mov
imul
cmp
ja
js
flds
pop
add
in
fnstenv
dec
jne
loope
mov
add
fdivrl
pop
bnd
mov
push
or
mov
dec
inc
adcb
add
cmpsb
fimuls
dec
cmp
cld
jno
jns
into
lods
xor
je
pop
ret
xor
sbb
fidivrl
nop
xlat
inc
insb
xor
inc
xchg
pushf
or
gs
mov
inc
cli
enter
test
or
lods
or
xor
or
xor
xchg
in
xor
aaa
je
xchg
ja
add
pop
nop
insb
fninit
add
and
data16
test
push
subl
arpl
pop
rclb
dec
jo
imul
insl
mov
jmp
mov
inc
es
out
xchg
ja
fnstcw
sti
outsb
xor
or
pop
push
mov
fldl
mov
add
mov
mov
add
fcomi
or
int
push
inc
std
in
cmp
mov
std
aaa
adc
hlt
inc
dec
repz
adc
inc
in
cld
push
xchg
iret
lcall
cmc
fs
dec
add
mov
jae
cmp
jmp
mov
mov
sbb
dec
add
push
adc
sbb
inc
sub
sub
push
mov
addl
xor
sub
insl
cld
mov
pop
lods
jp
add
xor
sub
cmp
pop
add
pop
bound
test
sti
mov
cmp
cmp
loopne
es
sub
cmp
jge
jmp
adc
rclb
cmc
movd
repz
sub
cmp
xor
mov
sub
mov
or
jp
add
aad
push
inc
or
jl
adc
outsb
jbe
call
loop
sti
mov
push
pop
ljmp
cltd
fmuls
clc
clc
and
mov
dec
lret
jp
sub
fmul
movsl
jns
lock
mov
int
dec
aaa
push
ret
xchg
push
sbb
dec
pop
dec
push
inc
imul
mov
dec
data16
ss
push
dec
push
movb
or
xchg
xor
dec
or
sub
xchg
sub
and
adc
xchg
xchg
ja
ret
push
mov
mov
pop
push
sub
iret
leave
popa
int3
mov
icebp
push
xchg
dec
loopne
mov
popa
out
movsl
int3
rcrl
loop
jl
fnstsw
and
sub
push
sbb
push
xchg
sub
inc
add
xor
and
xor
xorb
mov
rorl
gs
mov
lock
rolb
stc
mov
pop
movsb
rcl
in
mov
in
mov
mov
or
jno
or
fisubrl
xor
pop
lds
stc
call
mov
cmp
and
sbb
int
add
xor
addr16
imul
ret
test
das
mov
cbtw
ljmp
into
pop
jns
rcll
xchg
shll
imul
add
dec
xor
fwait
bound
popf
xchg
push
add
scas
or
jo
mov
outsb
push
and
jne
fildll
push
imul
dec
neg
out
cmp
not
xor
fsts
push
sbb
fcoms
adc
adc
imul
pop
push
hlt
in
push
mov
jne
push
push
leave
push
fstpl
adc
xor
push
cs
stos
jg
or
outsb
xor
imul
push
testb
xchg
or
sbb
mov
aaa
xchg
loope
fidivrl
into
sub
int3
repz
xor
cmp
jno
sbb
xchg
jmp
mov
int3
fidivs
repnz
dec
dec
xor
jae
leave
mov
lahf
lret
std
mov
pop
sbb
mov
popa
xchg
sbb
and
iret
out
daa
ljmp
aad
and
stos
fs
jo
movsb
inc
les
int3
pop
jae
shlb
pop
rorb
sbb
ja
inc
aam
cmpsl
push
xor
sub
ja
adc
inc
xchg
shr
push
out
xor
sarl
repz
xor
scas
aad
mov
xor
pop
sbb
into
sub
inc
je
repz
mov
dec
fwait
lret
and
js
pop
imul
cmc
mov
arpl
inc
outsb
ja
lea
mov
or
cmp
or
inc
hlt
in
jo
mov
xchg
ret
jecxz
ret
mov
pop
xor
cli
xchg
popa
dec
das
sbb
sbb
int3
sbb
outsb
pminub
jne
lds
pop
mul
mov
add
lods
jle
loope
cld
insl
into
inc
imul
lahf
mov
scas
fidivrl
int3
ljmp
pusha
loope
adc
cmc
in
jle
insb
jb
cwtl
insl
cmpxchg
cmp
shrl
cld
call
inc
leave
cmc
jecxz
adc
xchg
cmp
das
pop
or
xor
loop
pop
sbb
dec
mov
dec
rcr
jmp
in
cmp
sbb
mov
mov
lahf
jge
shrb
jmp
ficoml
pop
mov
sub
fistl
test
jmp
add
insb
pop
adc
mov
jge
jecxz
fisttpll
clc
sub
push
xor
jmp
and
rclb
ficomps
inc
dec
pusha
fistps
mov
int3
paddq
fwait
in
sub
pop
in
aad
fiadds
scas
ja
xchg
jo
leave
movsb
mov
andb
loope
cmp
pop
sbbl
dec
jle
xor
add
mov
push
movsl
jo
test
push
in
push
and
push
imul
xchg
cwtl
outsb
outsl
xchg
inc
pop
cld
pop
in
sub
fisttps
loopne
pop
mov
ret
xchg
xchg
andl
dec
aam
dec
cs
test
popf
fstpl
pop
sbb
pop
mov
lock
ljmp
jo
adc
cmpsl
addl
call
xchg
fisttpl
mov
add
sbb
cmc
sar
cmpsb
fimuls
andb
les
push
xor
dec
stc
jo
ljmp
pop
sub
push
xchg
aad
cmp
in
xchg
and
pop
jbe
jno
push
lret
notb
pop
imul
and
and
stos
es
mov
push
fs
jle
add
dec
das
mov
enter
dec
pop
push
orb
jmp
shlb
or
movsb
xchg
xchg
and
adc
mov
sbb
int3
push
ret
jg
sbb
inc
cwtl
arpl
push
imul
sbb
or
sbb
xchg
cmp
push
jl
stos
sub
cld
inc
adc
lret
jp
aad
cmp
loope
stc
cli
pop
cli
mov
dec
scas
mov
xlat
mov
loop
dec
cmpb
pop
jno
aad
dec
add
jle
out
inc
inc
cld
inc
dec
dec
push
cs
ss
stos
push
xor
insl
pop
js
out
gs
rorb
rclb
cmp
inc
test
push
ret
pop
push
es
mov
aas
into
adc
fadds
or
lea
sub
lods
inc
adc
shll
push
test
ds
shll
pop
add
ds
cmp
loop
sbb
cli
xor
sub
lret
or
cmpsl
push
out
mov
dec
adc
cli
mov
or
dec
ss
testb
cmpsl
cld
gs
dec
aaa
jmp
aam
aaa
push
pop
push
insl
jbe
lcall
addr16
adc
or
push
out
cmp
push
xor
cltd
dec
jl
aad
popa
into
mov
es
repnz
into
adc
stos
inc
leave
cmp
pusha
in
adc
sbb
out
shll
push
xor
add
and
adc
popf
adc
lds
adc
mov
negl
adc
data16
shlb
ljmp
sbb
jge
gs
insl
fidivrl
inc
and
dec
hlt
jmp
jne
push
jl
dec
in
sbb
mov
dec
add
ss
int3
ljmp
aam
mov
out
fisubrl
jmp
jge
jle
push
faddl
das
cmpsl
ret
cmpsb
incl
nop
xchg
outsl
dec
xlat
lods
sarl
into
roll
ret
ficompl
ret
rorb
jecxz
pop
cmp
push
out
sbb
mov
cmp
in
adc
push
sub
stos
gs
lock
or
dec
or
cmp
stos
icebp
push
push
outsl
mov
ljmp
popf
inc
rcll
jo
jmp
insb
pop
lock
add
aaa
inc
adc
xorb
xchg
jae
add
mov
inc
mov
test
into
sub
jne
int3
mov
dec
test
es
push
lret
in
adc
mov
push
or
movsb
mov
pop
aas
dec
dec
jo
mov
push
push
pop
mov
icebp
mov
xchg
sahf
cmpl
mov
cmp
or
push
push
add
sbb
ss
popf
xor
xchg
fdivs
mov
mov
lods
aaa
fdivl
and
sbb
test
inc
mov
inc
or
cltd
push
or
push
or
add
sub
or
or
insl
sub
sub
inc
lods
std
adc
dec
insb
lcall
fnstsw
in
je
ds
inc
lods
xorb
js
jnp
push
addl
mov
sbb
xor
cmp
cmp
cld
lcall
iret
sub
sbb
stc
mov
mov
push
mov
int3
addr16
cmovno
lds
test
out
push
sbb
gs
adc
xchg
subb
sub
aaa
inc
inc
xor
mov
in
ret
pusha
jns
ret
lcall
jno
lods
aad
sub
mov
insb
inc
pushf
pop
out
cmc
sub
and
popf
xchg
dec
jno
sti
cwtl
mov
mov
pop
pop
mov
inc
sbb
sub
xchg
adc
and
dec
xlat
cmpsb
xchg
push
rclb
aad
adc
jb
push
pop
adc
push
pop
aam
mov
jo
sahf
xor
shr
xorl
icebp
sub
inc
outsl
push
cmpsb
and
cmp
sbb
jne
push
insl
in
sarl
jne
das
cmp
cmpsl
xor
loop
cltd
arpl
pusha
dec
in
mov
xor
sar
mov
aas
or
sbb
dec
dec
lods
and
aaa
pop
push
xchg
mov
imul
fldcw
mulb
or
mov
int
cmpsb
add
aas
xor
jecxz
or
outsb
jl
fisubs
enter
fcoms
jno
mov
pop
dec
test
and
push
gs
aaa
inc
jecxz
hlt
lcall
outsb
jae
enter
add
arpl
jnp
in
lret
inc
adc
pop
pop
icebp
mov
xchg
jo
dec
popa
in
add
xor
mov
daa
pop
inc
arpl
jle
scas
jecxz
or
test
xlat
je
push
inc
pop
les
and
in
mov
enter
ret
cltd
lds
pop
inc
xchg
out
mov
mov
and
sti
into
cs
test
fistpll
pusha
cwtl
jg
rorb
cmp
dec
scas
mov
xor
aam
scas
aas
seta
sbb
sbb
and
jne
gs
stos
or
pop
push
jno
sbb
dec
push
xchg
jns
movsl
push
push
scas
xchg
out
and
xchg
cs
sub
xor
pop
gs
xorb
ss
dec
jne,pn
adc
add
mov
test
mov
in
adc
loop
repz
movsl
sub
dec
out
dec
or
sub
cmp
rorb
pop
and
xchg
add
sub
mov
push
fadd
pop
insb
inc
aad
and
pop
mov
aad
jbe
xor
or
pop
mov
loopne
cmp
in
mov
or
and
and
lea
pop
pushf
xchg
sbb
std
insb
adc
fcoms
cmp
jl
sub
mov
mov
ds
dec
xor
inc
imul
stos
and
in
rol
das
jge
call
mov
lods
js
push
ret
aaa
test
pushf
pop
mov
loopne
gs
push
rcll
sub
gs
jbe
or
insl
outsl
cmpsl
stc
enter
cmp
ret
push
sub
push
int3
dec
jb
pop
cwtl
ret
dec
jno
lods
xchg
or
mov
xor
sar
outsb
pop
xor
loopne
adcb
or
adc
mov
jmp
lods
cmpb
or
stos
pop
das
xchg
dec
or
or
or
jge
jg
shrb
inc
xchg
icebp
xor
mov
cmp
int
adc
cwtl
dec
jecxz
adc
imull
addr16
test
inc
cmp
int3
mov
in
inc
mov
push
jl
dec
loope
add
sarl
imul
ss
sarb
inc
adc
or
push
cwtl
sbb
in
fmul
imul
aaa
push
gs
and
push
test
sahf
movsb
jge
mov
jo
jecxz
dec
outsl
pop
rorl
test
shlb
inc
fildll
xchg
inc
xchg
xchg
push
lea
scas
cltd
push
icebp
mov
cmc
mul
add
pop
adc
jmp
pop
cmp
cmp
rol
pop
xchg
cmp
pop
lret
add
push
cmp
std
push
clc
inc
fcomps
shlb
dec
dec
push
aad
jge
jo
jg
fwait
xchg
sub
and
enter
xchg
xor
aas
clc
or
js
shrl
mov
loop
lods
test
cmp
or
clc
jno
shrl
and
push
and
popa
in
std
adc
push
or
pop
pop
repz
arpl
push
pcmpgtw
gs
and
jns
adcb
jns
mov
jp
inc
cmp
xchg
stos
mov
inc
cli
jns
or
fimull
loopne
lds
mov
sub
mov
loop
add
filds
dec
sbb
add
jl
sti
repnz
push
pop
fiaddl
orb
inc
outsb
imul
scas
fcomp
inc
insl
inc
add
add
mov
cmp
cld
dec
or
movsl
push
cmp
je
inc
in
in
inc
push
xchg
das
mov
add
lcall
xchg
mov
fidivrs
orl
xchg
xchg
fmulp
xchg
and
add
xchg
jecxz
popa
into
sub
jbe
inc
iret
aad
pusha
mov
sbb
sti
lods
imul
je
or
sbb
jg
aas
imul
pusha
cs
mov
mov
xchg
mov
jge
popa
dec
mov
test
dec
test
mov
test
and
pop
roll
icebp
sub
mov
lods
orb
or
lahf
jge
dec
fsubrp
fmuls
add
arpl
jbe
mov
into
in
out
push
adc
mov
fistl
jno
loopne
cmpsb
lret
inc
xor
ficomps
xor
xchg
clc
enter
add
scas
in
fstp
push
pop
pop
fisttpll
pop
pop
pop
lret
dec
cmpl
dec
repnz
loope
adc
repz
mov
adc
fwait
nop
call
mov
out
inc
mov
jno
xor
mov
filds
subl
adc
movsl
xlat
dec
pop
xor
xor
and
adc
daa
or
add
setnp
nop
dec
leave
enter
or
xchg
jo
leave
test
loope
mov
rorl
mov
out
cmp
jno
hlt
add
ret
push
pop
mov
cli
push
pop
sub
imul
xchg
jo
push
mov
addb
cmp
bound
mov
push
push
inc
mov
xlat
dec
push
pop
dec
xor
dec
and
inc
daa
push
idiv
lret
int3
cld
fildl
int3
icebp
push
mov
adc
mov
jno
adcl
jb
adc
mov
jle
pop
in
push
cmp
jns
imull
shrl
mov
int3
jo
inc
lods
pop
mov
pusha
jo
dec
xor
dec
adc
xchg
iret
and
inc
xchg
in
outsb
arpl
xor
lcall
sbbb
cmp
jnp
je
mov
xor
pop
and
pop
push
sbb
sub
aam
mov
mov
in
rorl
add
and
es
int
inc
mov
inc
int
aam
inc
ja
loope
push
clc
xor
sbb
push
insb
stc
aaa
push
push
and
inc
push
shll
clc
sar
inc
push
clc
sti
imul
jge
add
pop
adc
movsl
add
dec
pop
xor
adc
call
pop
jecxz
mov
subl
mov
add
add
inc
inc
cmp
jo
dec
in
into
jmp
xchg
ss
mov
repz
inc
into
mov
cltd
dec
lcall
fnsave
fisttpll
mov
inc
lret
xor
add
jbe
xor
shrl
xorl
cmp
push
subl
shll
mov
xor
gs
scas
scas
decl
insb
pusha
sub
xchg
outsb
jg
add
rolb
int3
jmp
pusha
sub
test
pop
push
xchg
mov
outsl
ds
pop
push
in
dec
jecxz
aas
inc
into
dec
sti
rclb
add
pop
scas
or
dec
lea
cld
add
dec
push
test
mov
divb
ds
dec
or
out
mov
push
test
int
xchg
pusha
addr16
ds
push
cmp
adc
xlat
icebp
cmp
test
xor
hlt
xor
ret
xchg
xor
jnp
inc
inc
dec
xor
lcall
adc
add
add
dec
icebp
stc
es
dec
dec
xor
mov
aas
fisttpll
call
lds
xchg
mov
into
dec
pop
push
push
inc
cs
test
adc
xchg
pop
js
mov
inc
ret
outsb
imul
lahf
xchg
sarl
pop
cmp
adc
push
rorb
ja
cmp
fcomps
push
xor
sti
in
mov
pop
or
lcall
mov
sub
dec
into
syscall
and
pop
mov
mov
mov
stos
add
cmp
adc
inc
fbstp
aam
inc
cmpsl
dec
and
sbb
cmp
je
or
dec
mov
xchg
inc
mov
popa
add
int
cmp
xor
leave
lret
push
cmp
jb
xchg
fld1
cmc
adc
sub
xor
dec
or
js
jno
jl
add
cmp
xor
sbb
dec
loop
sbb
mov
push
pop
addr16
dec
js
mov
inc
jmp
movsb
xchg
rcll
add
std
sbb
stc
cmp
cmpsl
ret
inc
test
mul
pop
sub
push
int
in
out
std
mov
into
sub
mov
xor
cmp
dec
cmp
jb
int
push
jg
cmp
xor
outsb
mov
ds
lahf
hlt
adc
push
fmuls
repnz
jno
sbb
or
sub
dec
outsb
insb
lret
inc
jno
cmpsl
adc
push
imul
popf
or
pop
or
push
push
mov
mov
mov
outsb
cld
dec
or
mov
arpl
adc
int
into
xchg
push
jo
xor
lgs
rclb
add
aad
dec
adc
xchg
pop
sub
into
rorb
movq
cmp
push
aad
int3
sbb
std
out
add
int3
push
jo
pop
pop
jo
xchg
sbb
in
scas
mov
in
out
cmp
pop
lock
xchg
incb
lods
jmp
in
mov
lods
les
add
movsl
lds
arpl
inc
xor
ljmp
rclb
mov
lock
stos
dec
dec
bound
imul
jb
adc
cld
or
jo
inc
les
xchg
je
add
add
dec
pop
in
mov
push
cmpsl
cmc
xchg
xor
mov
push
jo
rorb
fcoms
push
add
rclb
cmp
sbb
jp
rcl
mov
sbb
cmp
push
mov
decl
pop
mov
push
dec
decb
push
push
and
fimull
mov
mov
lss
cli
add
xchg
mov
xor
movsb
xchg
pop
lcall
dec
repz
stos
es
sbb
adc
and
je
fiadds
sub
dec
arpl
loope
fidivrl
xlat
inc
push
pop
and
jecxz
mov
inc
cmp
cmp
lcall
lea
pop
and
pop
inc
adc
mov
or
fists
fstps
pushf
and
pop
hlt
std
jg
cmp
popa
xchg
int
ss
dec
mov
pop
dec
cld
rol
out
inc
jno
inc
xor
and
pop
pop
push
lret
xor
jo
push
aas
jge
jnp
in
or
xchg
mov
xor
inc
std
add
ljmpw
jg
add
sub
arpl
movsb
xor
mov
or
cmp
sbb
punpcklwd
sub
or
pop
into
mov
adc
shrl
cs
mov
mov
push
cltd
adc
push
mov
fildl
sbb
fcoms
cltd
push
lea
in
int3
push
xchg
xchg
rorl
pop
mov
out
std
movsl
icebp
adc
xchg
sbb
sub
inc
jne
cmp
push
es
popa
xchg
mov
ja
lea
add
cmc
popa
in
testb
jb
xor
daa
dec
sbb
jo
and
sub
add
push
add
js
mov
cmp
sbb
fcmovnu
enter
bound
pop
push
xor
adc
jbe
test
lahf
xor
ss
data16
cmp
jns
pushf
sahf
testl
inc
lret
push
inc
ss
int3
add
pop
icebp
add
leave
mov
hlt
add
adc
mov
negl
fstps
aaa
fdivr
jbe
popa
outsb
jge
frstpm(287
jno
mov
mov
adc
jns
mov
cmpsl
sbb
cmp
jne
dec
jge
pushf
cmc
sbb
fsubl
into
push
or
int3
add
push
adc
xchg
dec
and
add
pop
pop
add
xchg
or
jno
add
cli
dec
enter
pop
mov
negl
or
ss
add
dec
pop
push
test
jecxz
jns
out
mov
cli
or
adc
cmp
push
or
stc
sub
adc
inc
jne
subb
cmpsb
push
fnstsw
movsl
adcl
std
out
inc
cs
add
imul
push
lock
adc
test
adc
test
xor
rcl
xorl
and
repnz
pop
addr16
fnstenv
push
sub
gs
xchg
insl
xor
jne
adc
sbb
out
sarb
adc
sti
or
and
adc
add
adcl
add
aaa
mov
into
push
push
into
push
pop
stos
mov
inc
jo
je
test
push
mov
adc
pop
mov
cmp
call
leave
push
sbb
xlat
aaa
push
push
std
sbb
in
or
xchg
mov
lahf
inc
in
pop
inc
sbb
adc
jo
in
cmp
add
add
mov
sub
sbb
stos
cmp
sahf
jno
repnz
cmp
push
loope
dec
jne
das
jg
test
inc
rcrb
dec
lret
test
push
bound
mov
inc
mov
mov
aas
pop
call
xchg
rclb
fdivr
gs
add
cld
add
jnp
or
pop
mov
dec
xchg
inc
sub
cli
std
mov
xor
mov
push
xor
or
and
lock
rclb
icebp
pop
lcall
loop
xor
dec
push
decl
frstor
repnz
movsb
or
aam
fisttps
popa
repz
incl
sbb
shrl
dec
dec
es
stos
dec
sub
sbb
adc
or
clc
repz
out
mov
jecxz
rolb
mov
xchg
jo
cmpsl
xor
adc
js
cld
pop
std
xchg
xorl
cmpsb
or
push
repnz
add
rcl
roll
inc
iret
imul
cmp
dec
inc
adc
pop
ja
cmpsb
inc
loope
adc
push
push
or
jno
dec
sbb
or
test
pop
inc
dec
gs
jo
mov
data16
call
ficoml
mov
dec
xor
dec
outsb
idiv
inc
loop
test
mov
dec
add
xchg
mov
sti
fneni(8087
sub
and
dec
xor
movups
repnz
lock
push
xlat
nop
dec
pop
and
ljmp
movsb
adc
js
iret
call
gs
xor
add
add
xchg
sar
cmp
jecxz
outsb
xor
add
out
into
inc
mov
sti
fbstp
stc
and
adc
data16
sbb
icebp
cmp
xchg
jno
mov
ljmp
mov
xor
add
test
adc
add
in
mov
loopne
addr16
mov
nop
pop
mov
dec
or
repnz
mov
cmp
jle
shll
dec
and
sarl
addl
sub
dec
sar
adc
rcrl
dec
cmp
xchg
cmp
push
push
and
inc
repz
mov
add
mov
testl
push
pop
out
ret
and
std
or
aam
das
inc
int3
push
stos
test
in
outsb
gs
adc
sub
adc
dec
in
inc
mov
or
add
jne
push
dec
jae
xchg
and
adc
call
adc
dec
jne
icebp
cmp
outsb
arpl
xchg
fcomi
int3
cmc
pop
imul
sbb
xor
fdiv
push
jo
pushl
and
and
fidivrs
int
repz
sbb
in
sbb
jmp
lret
outsb
push
imul
rcll
cmp
push
fildl
xchg
ret
mov
shll
push
push
and
das
sub
int
mov
pop
inc
push
jle
aam
cwtl
xlat
shll
cmpsb
fldcw
inc
jb
cmp
sub
dec
mov
arpl
pop
dec
out
push
jae
pushf
xchg
movb
sti
lahf
mov
cmp
test
mul
fdivr
pusha
int
sub
fimull
xchg
push
mov
jo
aaa
dec
pop
dec
inc
inc
insb
jp
out
shl
ss
cmovae
repz
mov
xchg
dec
fnstenv
loopne
xchg
rcl
fadds
fstl
adc
leave
lods
int3
mov
or
pop
dec
mov
stos
les
pop
add
clc
mov
inc
outsb
jae
mov
xchg
lar
mov
inc
imul
test
push
sub
xchg
iret
rcll
fwait
int3
or
push
dec
bound
mov
cltd
mov
dec
sub
add
push
jl
push
daa
xchg
decw
xor
movsl
push
adc
pop
dec
clc
aad
pop
jbe
sbb
cmp
adc
pop
pushf
arpl
testl
push
fistl
cmp
xchg
push
fstpt
mov
jg
mov
out
sbb
into
mov
aad
sub
xor
ss
dec
into
sar
dec
int3
mov
lahf
ret
lods
loopne
lcall
mov
cltd
sbb
add
jmp
mov
jb
push
loope
add
mov
add
aaa
and
testl
inc
loope
mov
aam
dec
orb
inc
push
fmull
or
je
das
sbb
adc
mov
xor
dec
inc
cmpsb
mov
into
sbb
xchg
push
add
ret
aaa
sub
bound
loop
cwtl
cs
dec
enter
fsubrl
jp
aam
push
ds
add
dec
fisubl
cmc
mov
xor
scas
out
sbb
dec
daa
lds
inc
ret
mov
mov
test
data16
xor
push
aad
add
mov
aaa
pop
dec
in
into
rcrb
int3
mov
mov
or
add
xor
jae
aaa
fldl
mov
mov
add
popa
jecxz
adc
push
leave
cltd
pop
xchg
jne
pushf
add
or
push
adc
dec
mov
ss
pop
cmp
jecxz
movsl
jb
out
movsb
xchg
cmp
std
enter
adc
inc
int
andl
and
xlat
and
hlt
rcl
lret
jmp
cs
inc
in
dec
cmp
enter
aad
rcll
int3
adc
pop
scas
cwtl
clc
cltd
fisubrl
lods
nop
inc
jo
xor
mov
xor
pop
shll
ss
lahf
sbb
xchg
inc
sub
mov
shrb
mov
insl
dec
arpl
push
inc
push
xor
int
dec
sbb
addr16
aas
inc
jo
cmp
outsl
dec
mov
js
aaa
stos
in
test
lcall
adc
aam
xor
inc
inc
pop
call
jno
add
sbb
orb
pop
jecxz
inc
fbstp
or
dec
sbb
fcoml
adc
iret
jo
int
and
mov
push
das
push
push
jo
fbstp
push
in
lds
loopne
call
xor
ja
xchg
notl
iret
mov
xor
movsb
jne
nop
mov
or
in
das
cmpsl
add
sub
or
add
pop
xchg
inc
negl
push
stc
cli
inc
aaa
jnp
loop
mov
fpatan
pop
pop
jo
or
outsl
stos
sub
lods
sub
cs
add
sbb
dec
clc
push
inc
mov
mov
mov
xor
push
dec
jno
in
dec
push
pop
addr16
cmp
push
cli
jo
fcoms
outsb
arpl
aas
dec
inc
inc
push
xor
push
jnp
icebp
push
negl
jno
stos
mov
jbe
gs
cmc
pop
js
adc
fstps
punpckhbw
cs
adc
xor
adc
xor
leave
inc
rorl
mov
fidivrl
xchg
sub
clc
dec
fldl
int
push
xchg
cli
or
fisubrl
loope
int3
add
out
xchg
adc
out
in
aas
jo
fimull
sbb
or
cmpsb
mov
cmp
arpl
scas
scas
push
test
and
cmc
xchg
cmp
jo
out
imull
mov
cmc
xchg
jns
ret
out
sub
adc
loope
cmp
int
pop
xchg
frndint
jns
lock
fstl
ss
or
cld
cmp
push
in
inc
adcb
mov
loop
popf
rclb
pop
pop
loop
mov
or
cmp
cmp
push
into
and
push
stos
xor
imul
sub
int3
jp
shll
sti
imul
push
scas
iret
xor
or
dec
sbb
xchg
or
pusha
out
inc
inc
fwait
jae
sbb
pop
jne
mov
movsl
scas
mov
cmc
in
in
adc
xchg
cmp
and
rcrl
mov
jne
fsts
shlb
pop
sbb
shlb
stc
int3
fs
mov
jge
lods
sub
ljmp
in
push
bound
loop
and
xchg
and
mov
inc
pop
and
ret
sbb
jo
xchg
hlt
adc
insl
sti
inc
mov
xchg
push
push
shlb
hlt
test
outsl
cli
out
adc
cmp
adc
addl
mov
jae
clc
and
adc
mov
sub
jno
mov
ror
int3
stc
push
stc
in
test
sub
inc
mov
lds
addl
into
pop
cmp
adc
sahf
add
rolb
inc
xchg
or
add
out
repnz
jl
subb
inc
add
mov
lock
gs
mov
sub
pop
sbb
inc
int3
dec
iret
imulb
dec
data16
clc
or
push
push
dec
cmp
stc
sti
push
insb
fidivrs
push
mov
in
sbb
mov
clts
pop
xchg
ficomps
hlt
jo
fldenv
inc
adc
push
movsl
pop
fisttpl
mov
and
in
pop
mov
and
aam
sbb
test
test
rolb
icebp
ss
push
xchg
lcall
inc
inc
dec
in
adc
in
push
cli
push
std
push
xor
or
test
or
pop
mov
inc
sbb
and
and
rorb
dec
or
inc
lret
iret
dec
shl
fs
pushw
in
fildl
test
jmp
jmp
inc
ficomps
mov
popa
sbb
xchg
popa
inc
dec
in
les
aaa
sbb
sbb
sqrtps
pop
jo
fcomps
fisttpl
inc
push
push
test
fimull
into
dec
enter
dec
leave
bnd
xor
jp
mov
jl
jge
sbb
jno
or
sub
jo
rorb
adc
cmp
or
xor
jecxz
aad
in
jo
inc
dec
dec
adc
xchg
mov
adc
xor
xor
out
sbb
xor
inc
inc
iret
push
mov
aaa
dec
repz
scas
jp
push
dec
or
leave
cmp
pop
add
xchg
jl
sub
jo
and
adc
xor
dec
std
push
addr16
loope
mov
lea
mov
pop
add
mov
das
stos
out
out
inc
add
notb
dec
dec
aas
cmp
shlb
std
add
xor
dec
sbb
int3
idivb
sahf
xorb
dec
push
or
mov
sahf
xchg
cmp
out
push
push
xchg
jge
leave
in
xchg
cwtl
inc
add
pop
or
add
iret
xlat
cwtl
push
jns
mov
jge
mov
mov
int3
sbb
xchg
int
lods
inc
je
cmc
inc
sub
ja
fbld
notb
and
inc
pop
in
into
cmp
popa
mov
mov
lahf
lds
popa
push
add
inc
loop
pop
or
shrl
xchg
add
aaa
adc
mov
insb
add
roll
pop
sbb
jno
push
inc
xor
pop
jne
popa
and
inc
cli
jl
or
aaa
or
pop
pop
ffreep
inc
ss
shlb
mov
pop
subl
and
shl
dec
popa
mov
scas
in
clc
dec
rcr
dec
ds
xlat
pop
enter
push
pop
es
pop
inc
pop
inc
cmp
cmp
mov
jo
or
insl
popf
int
dec
pop
cmpsl
dec
xor
insb
push
dec
adc
ror
sub
out
xchg
repz
inc
into
je
lds
incb
mulb
mov
or
aaa
sub
pop
inc
sbb
dec
sub
mov
inc
adc
sub
out
mov
orb
push
std
or
rcl
jb
inc
jecxz
adc
cs
inc
jge
cmp
push
shl
dec
adc
xor
inc
outsb
addr16
xchg
sub
add
inc
cmp
mov
dec
or
bound
cmpsl
aam
dec
pop
inc
out
push
ret
movsl
lock
loope
ficoml
in
pop
mov
adcl
add
and
push
push
push
repz
sqrtps
pop
pop
jns
or
cmc
or
dec
pop
or
inc
or
mov
push
pop
lahf
notb
lock
dec
inc
sbb
add
mov
sbb
pop
outsb
outsl
icebp
jae
jae
mov
xchg
mul
adcl
mov
xchg
inc
pop
mov
cmc
sub
adc
sbb
sbb
mov
stc
data16
jno
adc
push
test
lds
mov
enter
dec
popa
scas
xor
xor
dec
push
lds
sbb
movsb
add
and
mov
mov
outsl
mov
cmc
inc
add
push
mov
adcb
pop
loop
lret
ss
inc
inc
insb
aas
cs
pop
xor
inc
jl
fcmovb
dec
add
aam
dec
popa
leave
int
dec
jo
fdivrs
push
and
push
fnstcw
push
push
dec
push
fimull
xor
inc
sbb
cmp
xor
popf
hlt
pop
xchg
cmp
lahf
push
out
jno,pt
sbb
repz
adc
das
pop
push
push
fsubs
je
fidivrs
gs
xchg
sbb
mov
mov
test
stos
fwait
aad
inc
aas
icebp
fsts
mov
gs
nop
mov
scas
sar
pop
into
inc
xlat
das
rclb
jno
test
or
xor
pop
out
cmp
mov
push
rclb
push
into
cmovae
inc
fcoms
mov
push
jg
cmp
xor
mov
test
mov
stos
or
mov
iret
push
movsb
pop
test
inc
in
or
lds
ja
pop
cwtl
pusha
push
jns
int3
inc
pop
fs
test
add
rclb
iret
inc
rorl
iret
or
xchg
adc
mov
jp
inc
les
aaa
push
dec
sbb
sbb
dec
cmp
adc
test
cmp
push
push
jno
sbb
pop
aaa
sbb
enter
push
es
and
es
icebp
jae
cmp
adc
fldenv
in
and
nop
inc
and
rolb
inc
pop
das
cmp
fstpl
push
rorl
aas
dec
xchg
push
bound
inc
pop
and
in
test
push
dec
adc
and
in
add
dec
mov
push
dec
lock
jbe
cmpb
cmp
sub
shrb
das
dec
adc
jno
pop
mov
lcall
cmp
inc
adc
adc
inc
das
dec
stos
icebp
sub
test
mov
add
dec
loop
outsl
shll
mov
sbb
xor
insl
and
jae
push
jmp
mov
pop
int
adc
sbb
pop
out
add
sub
push
aad
jno
sbb
inc
mov
jns
push
fxch
push
and
icebp
mov
push
xor
adc
sbb
int3
cmp
scas
adc
data16
mov
cli
push
and
sub
pop
adc
dec
test
push
leave
mov
inc
fs
jo
shr
cwtl
adc
sbbl
dec
xor
mov
divl
stos
test
imul
aas
rorb
jmp
insl
inc
lods
dec
mov
and
xor
or
and
in
mov
aas
inc
xchg
inc
repnz
cli
in
inc
mov
cld
iret
dec
xor
mov
dec
xchg
js
xlat
or
jge
enter
mov
test
ror
push
or
js
xor
sub
popa
cmp
outsb
mov
inc
jecxz
mov
push
xchg
ret
lock
cwtl
sbbb
push
mov
sbb
xchg
mov
divl
mov
push
dec
jno
sbb
push
mov
mov
cmp
scas
cld
add
sahf
dec
addr16
dec
rclb
pop
xor
insl
das
imul
sarl
push
xor
fwait
cmc
std
in
push
sahf
jno
inc
mov
gs
push
fmuls
outsl
push
and
icebp
cmp
stos
idivl
dec
or
push
or
ja
fsts
adc
cmp
cmp
xor
pop
flds
or
arpl
sub
pop
add
das
jo
mov
icebp
dec
fscale
dec
add
dec
xor
pop
sub
in
loop
add
arpl
push
stc
mov
cmp
into
pop
inc
cmp
mov
xchg
lahf
movsb
cli
xchg
inc
jecxz
pop
push
lock
pop
loopne
int3
call
out
mov
and
push
jecxz
or
popf
jne
icebp
sbb
ror
dec
and
cmp
test
out
fwait
push
inc
mov
orl
pushf
mov
in
pop
mov
jmp
fsubr
aam
test
jo
jne
ret
daa
sub
or
push
mov
mov
rolb
lahf
imul
scas
push
into
or
push
aas
cli
leave
mov
or
inc
lahf
push
fnsave
call
and
call
dec
addr16
cwtl
pop
push
shlb
pop
xor
and
xchg
fmull
mov
and
imul
jns
icebp
xor
cld
push
lret
stc
xchg
xor
ss
int3
addr16
sub
int3
adc
xlat
pop
inc
mov
les
fldenv
inc
mov
sbb
push
push
cwtl
push
or
in
sbb
int3
aam
cmp
sub
xor
out
and
inc
sbb
mov
push
dec
sar
aam
pop
push
js
mov
jg
stc
and
or
pusha
dec
je
or
mov
cli
mov
push
popf
hlt
inc
push
inc
cmp
cmp
iret
push
aad
mov
int
fcomi
int3
in
jmp
ljmp
sub
mov
mov
or
jno
int3
sub
sub
jno
pushf
scas
ljmp
fwait
fwait
ss
dec
aas
aas
xchg
aaa
jl
not
clc
adc
jns
jmp
jg
xlat
ss
lahf
jne
inc
fmull
out
stos
mov
outsb
jl
aaa
jg
push
inc
xlat
stos
lcall
cmp
push
ret
int
fcmovbe
sub
push
aam
dec
push
xchg
sbb
dec
xchg
adc
outsb
jl
sbb
mov
fwait
sahf
sub
push
adc
sub
or
xchg
mov
push
addr16
loop
sbb
jp
cmc
js
fsts
jmp
xchg
ss
aas
jno
and
xchg
sub
jno
sbb
shl
sub
adc
call
xor
sbb
das
andb
push
insl
incb
xchg
jl
adc
cmc
mov
sub
dec
mov
sbb
sbb
fistpl
sub
nop
test
jge
push
pop
jno
add
rcl
sbb
sub
mov
or
push
xor
mov
sahf
je
xchg
mov
pop
xor
jmp
into
icebp
shll
push
notl
mov
fwait
aam
cwtl
inc
dec
jno
pop
push
repnz
lahf
lahf
mov
icebp
sbb
sub
stc
popf
dec
sbb
pop
pop
rcll
int
xchg
mov
mov
cmp
dec
mov
inc
sub
aam
push
xchg
int
mov
icebp
shrl
icebp
lods
add
add
icebp
popf
cmc
inc
cmp
icebp
adc
icebp
gs
pop
cmp
and
cmp
dec
inc
icebp
sub
push
mov
adc
inc
out
push
jno
test
cwtl
inc
jo
lea
jne
ds
pop
adc
adc
inc
mov
aad
push
xchg
pop
cmp
pop
add
in
inc
push
mov
cmpsl
roll
xlat
jp
insl
rorb
push
cmp
lahf
and
shll
inc
add
dec
xchg
mov
pop
sub
insb
add
sbb
dec
or
inc
dec
daa
pop
inc
mov
push
sub
and
iret
xor
aas
sbb
pop
dec
popa
test
rcll
push
lahf
mov
fs
ljmp
jmp
push
clc
push
jp
xor
cld
and
add
ss
rcl
test
enter
jge
xchg
pop
lcall
addl
enter
sahf
inc
inc
movsb
jns
cmp
jno
insl
cmpsl
or
dec
push
and
pop
add
out
and
call
jge,pt
push
mov
fst
dec
push
inc
xor
cltd
push
popl
mov
insl
inc
cmp
pop
xchg
xor
xor
mov
sub
sub
xor
and
fdivl
inc
xlat
cld
js
jnp
mov
inc
int3
aam
into
or
push
jns
inc
adc
sbb
mov
andb
sbb
xor
daa
into
ret
pop
xor
xor
pop
dec
mov
inc
adc
cwtl
ret
or
fnstsw
mov
xor
arpl
push
cltd
pushf
ja
add
xor
movsl
dec
scas
roll
cmc
xchg
jp
pop
les
cmp
outsb
lcall
inc
or
dec
out
xlat
lds
fiaddl
ss
add
add
iret
sti
scas
adc
lods
cmp
xchg
mov
xchg
or
jns
pop
mov
outsl
data16
imul
out
scas
fnstenv
or
data16
lret
xchg
and
xchg
jp
mov
inc
mov
into
cmp
dec
xchg
sar
pop
push
mov
dec
xor
rclb
mov
or
xor
imul
sbb
lea
add
dec
pop
push
xor
rclb
adc
adc
dec
and
and
dec
jno
stos
xor
mov
scas
jne
and
adc
sbb
jb
stc
xchg
inc
jne
daa
xor
adc
sub
lcall
enter
jo
mov
sbb
push
aaa
aam
jno
idivl
xchg
xchg
int3
sub
cmp
xchg
jae
mov
scas
adc
jno
jmp
rcll
iret
push
hlt
pop
filds
adc
test
int3
into
js
push
push
xchg
pop
push
dec
mov
shll
gs
push
sbb
and
es
outsb
fadds
cmp
or
jge
push
or
call
adc
push
test
insb
jge
iret
dec
lock
and
smsw
dec
xchg
jo
push
jnp
sbb
dec
rcr
aaa
mov
inc
in
add
sub
adc
sbb
movsl
iret
subb
cmc
test
push
cltd
imul
int3
and
das
xchg
aad
pop
cmpsb
jecxz
sbb
mov
jb
jae
xlat
mov
or
cmovg
movsl
das
iret
outsb
sbb
dec
push
sub
push
jecxz
pop
sub
or
dec
push
mov
push
pop
movl
stc
jecxz
xor
push
inc
sbb
aaa
or
sti
push
test
pusha
push
std
cmp
inc
push
int
pop
or
or
lock
push
sub
ds
push
inc
cmp
out
push
fsubrs
push
js
jmp
mov
inc
arpl
cmp
mov
stc
xchg
push
sbb
cltd
pop
mov
popa
shlb
mov
test
xchg
inc
push
sub
cmp
cwtl
pop
rcll
dec
lea
push
inc
xlat
sbb
pop
push
push
popa
je
inc
clc
push
js
mov
sarl
neg
and
inc
into
push
xchg
or
cltd
fstps
dec
in
aad
sub
adc
or
sarb
inc
sub
or
push
pop
aad
es
into
xor
and
xchg
pop
jo
or
and
movsb
out
icebp
push
xor
sti
pop
movsl
adc
push
jns
and
pushf
and
les
pop
icebp
iret
xchg
test
cwtl
jne
in
sub
dec
ljmp
mov
or
mov
ret
shlb
les
jns
inc
movsb
mov
mov
cltd
lock
sbb
cmp
or
inc
and
in
stos
xor
dec
shlb
add
inc
roll
es
shll
icebp
xchg
cmp
pop
pop
cli
sub
aad
daa
stc
sbb
into
adc
ja
pop
cwtl
sarb
sbb
call
mov
inc
lahf
dec
jno
sbb
aad
std
lea
push
movsb
and
dec
cmp
push
nop
mov
jp
jl
push
andps
inc
leave
test
adc
dec
pop
jnp
js
loopne
movl
xor
rorl
jo
pop
ja
movsl
push
repz
repnz
dec
fs
mov
les
ret
push
je
adc
or
pop
xchg
inc
lcall
adc
adcb
xchg
or
pusha
cmp
sarl
push
add
call
test
pop
shlb
mov
mov
push
sbb
pop
sbb
add
fs
mov
inc
add
sub
shl
dec
mov
xchg
in
or
jbe
or
xlat
or
and
pop
mov
stos
cmpsl
push
inc
es
lods
aaa
gs
or
loopne
sahf
test
pop
dec
mov
ljmp
enter
inc
icebp
outsb
or
dec
sbb
jg
or
pavgw
dec
aas
popl
push
popa
adc
jecxz
mov
iret
out
push
adc
pop
aaa
jno
aad
aam
sbb
int3
adc
shl
cmp
leave
aam
cmp
sarb
mov
push
outsb
andl
lcall
movsl
jmp
mov
inc
sar
lock
and
sub
lahf
ret
pop
cmp
and
xchg
cld
push
cmp
fisttps
pop
dec
aaa
int3
aam
mov
mov
dec
pop
int3
adc
xor
mov
sub
call
xlat
mov
mov
mov
push
in
fadd
adc
mov
push
addb
dec
jl
and
jl
or
dec
hlt
or
push
mov
push
inc
push
hlt
lcall
adc
fadds
and
lea
or
mov
mov
inc
mov
add
xor
lods
push
jno
add
jo
and
loop
sub
cli
push
xchg
push
clc
pop
loope
jmp
fisubl
fwait
sub
jb
inc
in
stc
sub
dec
jo
xchg
adc
sahf
jne
mov
cmp
or
in
mov
push
xor
enter
jo
or
push
adc
and
push
and
call
xchg
xor
cmp
xchg
or
aam
cmpb
enter
aaa
cmp
into
aas
stc
and
inc
rcrb
movb
cltd
and
push
jo
add
mov
jo
push
cmpsl
sbb
mov
mov
push
xchg
pop
push
mov
cs
mov
adc
lret
div
cmp
out
push
into
data16
fnstsw
mov
aad
mov
addr16
andl
insl
ja
insl
push
xchg
movsl
jne
xchg
xchg
stos
lods
subb
cld
sub
pop
or
jge
dec
xchg
push
mov
push
dec
insl
cmp
push
shrl
inc
leave
push
shll
inc
scas
push
dec
jne
push
jl
repz
fs
add
test
adc
mov
mov
cmp
add
int3
fistl
sti
and
pop
dec
aas
sbb
dec
cmp
es
insb
push
xchg
in
add
push
mov
dec
imul
sbb
pop
in
add
ficoms
je
loopne
push
sbb
divb
adc
xchg
aam
or
push
out
lret
jg
inc
xchg
nop
test
test
push
lock
test
push
adc
jno
cvtps2pi
shlb
shl
jns
lods
dec
push
add
in
test
repz
xor
enter
adc
push
pop
dec
int3
inc
cmp
mov
xchg
mov
sub
stc
dec
dec
push
bound
mov
push
xlat
xchg
jo
cli
inc
lods
bound
incb
dec
push
pop
sub
or
imul
and
in
pop
lea
movsl
scas
inc
pop
fcmovb
jo,pt
les
jno
mov
mov
cmc
push
inc
int
pop
enter
xor
inc
cmpsl
and
adc
idivl
repz
xchg
adc
iret
xchg
jo
pop
or
in
push
xor
daa
and
repz
jae
in
into
jmp
cmpb
aas
sbb
add
push
sbb
cmp
scas
rorl
or
popa
cmp
push
pop
dec
xor
outsb
pop
aad
cmpsb
aam
cmp
inc
rorb
xchg
cmp
dec
sub
out
push
cld
dec
in
into
fadds
mov
xchg
cs
jle
mov
inc
mov
fmull
sub
mov
mov
mov
cs
nop
mov
adc
subb
scas
push
ds
int
and
jo
popa
jp
sub
aas
lods
popa
and
outsl
loope
lock
fdivl
gs
xchg
into
add
adc
stc
insl
aas
dec
lret
fdivl
mov
mov
or
fsubrs
adc
or
cld
dec
testb
adc
adc
cwtl
clc
fs
jno
dec
das
adc
push
add
gs
imul
mov
sub
inc
std
ss
adc
mov
int3
dec
inc
js
add
dec
sub
push
xor
xor
arpl
pop
je
dec
dec
popf
and
jno
inc
pop
data16
xchg
xor
and
or
mov
cmpsb
xchg
cmp
push
xchg
or
stos
popa
fildl
cmp
sti
js
sbb
adc
and
jne
iret
out
dec
in
cmp
daa
push
sub
mov
push
mov
mov
sub
mov
push
loope
daa
inc
in
repnz
xor
inc
mov
xor
sub
sub
add
pushf
cmp
jmp
dec
push
aad
dec
sahf
mov
rclb
out
imul
sahf
sub
into
push
cmp
dec
add
pop
sub
dec
mov
outsl
push
fdecstp
dec
pop
xor
out
push
jecxz
cmc
jmp
jb
das
or
lock
mov
mov
pop
adc
mov
push
lret
sbb
dec
arpl
push
push
pop
mov
sub
aas
push
jne
les
jns
xor
xlat
add
rol
inc
xlat
sbb
nop
dec
xlat
int
cs
mov
xor
mov
jmp
cmp
pop
pushf
pop
jg
lahf
pop
frstor
rclb
inc
not
pop
aas
dec
jo
dec
add
add
out
cwtl
cld
test
adc
lcall
push
leave
jnp
dec
stos
xchg
dec
rclb
sub
push
lahf
movsb
std
pop
test
and
fstl
bound
aad
sub
leave
sub
pop
clts
clc
mov
shll
ljmp
fnstenv
sub
clc
dec
ljmp
mov
lods
jnp
xor
jo
dec
adc
inc
shlb
pop
xor
iret
jno
jno
bound
sahf
or
fldl
in
pop
mov
scas
mov
sub
cmpsl
pop
outsl
cmp
mov
and
nop
movsb
fldt
dec
push
xchg
iret
or
cmp
push
rcrl
or
lcall
and
adc
ss
orl
shl
sbb
add
adc
xor
xor
xor
decb
push
or
mov
push
push
dec
shr
adc
cmp
dec
add
add
push
in
mov
mov
mov
scas
pop
inc
ds
jno
pop
in
dec
xchg
pop
xor
sub
icebp
imul
mov
dec
popl
mov
je
cmp
sbb
out
dec
xchg
fcoms
dec
inc
mov
into
push
pop
pop
and
inc
dec
jl
movsb
nop
sub
sub
es
xchg
push
dec
dec
test
inc
and
add
aas
push
dec
in
mov
popa
das
stos
pop
dec
aaa
xchg
jge
mov
call
dec
std
push
xor
sub
sub
imul
lods
outsl
das
push
jge
push
mov
int
mov
aas
int3
les
push
sbb
loop
sbb
dec
jbe
les
and
and
ret
das
xlat
jmp
mov
mov
mov
sub
add
mov
nop
or
xchg
test
jo
movsl
inc
jns
outsb
mov
sub
outsb
repnz
pop
xlat
push
jmp
jo
nop
faddl
and
std
call
adc
aam
xchg
mov
cs
rcrl
or
xchg
mov
inc
stos
lods
das
add
push
sub
sub
or
test
in
xor
les
shrb
jmp
sub
leave
xor
je
sub
inc
inc
inc
dec
outsb
jo
shrl
dec
int
sbb
xchg
aad
mov
adc
jge
push
loop
mov
mov
or
inc
call
cs
adcl
in
push
mov
mov
xor
stos
je
sbb
sbb
inc
jo
cmpsl
dec
push
cld
mov
add
imul
shlb
cltd
cmp
jl
push
xchg
and
mov
fcom
repz
add
pusha
xor
sub
adc
adc
call
sub
and
mov
jb
test
dec
stos
cmc
dec
pandn
imul
or
sub
xor
jo
mov
sbb
inc
sbb
xor
jo
pop
aad
popa
or
loop
mov
ljmp
push
and
lods
mov
dec
lret
testb
imul
addr16
xchg
dec
inc
js
push
push
fdivrl
pop
pop
repnz
bound
pop
adc
popf
daa
cmp
or
sbb
loopne
out
inc
sub
sbb
dec
sub
and
or
cwtl
mov
leave
and
sbb
xor
sbb
xchg
push
or
insb
jne
adc
add
mov
push
outsb
mov
xchg
sbb
fsubs
push
and
fsub
push
dec
push
jo
xchg
adc
in
push
cmp
xchg
mov
sbb
adc
xchg
xchg
xor
pop
fbld
inc
pop
in
dec
push
bound
add
push
adc
outsb
push
sbb
mov
cmpsb
cmc
xchg
cld
aaa
out
fadd
in
or
lret
inc
push
cmp
fstpt
mov
push
int3
fstpl
cmpsl
sub
adc
call
xchg
loope
pop
push
xor
into
popa
xchg
dec
pop
in
repz
push
mov
xchg
or
mov
or
adc
push
fldl
mov
mov
clc
mov
call
jg
sbb
or
xor
dec
lret
les
pop
add
dec
sbb
movsb
mov
adc
push
xchg
inc
cwtl
lods
bound
cli
ffreep
mov
xchg
dec
js
das
aad
pop
imul
jo
or
sbb
orb
push
or
jo
and
jnp
mov
pusha
rclb
ffree
aam
xor
cmp
and
ja
sbb
cli
aam
jne
xchg
adc
jno
cwtl
xor
rorl
icebp
jge
outsl
outsl
push
inc
mov
jns
nop
lret
xchg
stos
push
in
lret
pop
popa
cwtl
iret
fstpl
das
add
add
cld
test
out
adc
adc
test
xchg
or
sbb
adc
push
xor
dec
in
mov
jo
mov
rcrb
loope
and
pusha
arpl
inc
push
sar
pop
dec
fdivl
and
pop
lea
test
xchg
push
in
mov
negb
mov
jecxz
into
adc
rdmsr
inc
xchg
push
mov
arpl
fidivs
getsec
or
xor
or
mov
adc
iret
test
aad
ss
inc
dec
repnz
jmp
sub
dec
loopne
aaa
fstpl
enter
xor
loopne
rorl
sub
clc
push
mov
and
pop
or
out
clc
rolb
pusha
test
mov
int
push
push
push
jp
aam
lods
sub
int
push
pop
mov
sti
clc
xor
ror
int
jo
xor
push
dec
aaa
notb
rcr
stc
add
repz
pop
addr16
jnp
ret
cmpsb
imul
jno
aaa
loopne
jns
pushf
xor
push
test
enter
sarl
into
rclb
inc
push
addr16
rcl
add
jmp
insb
push
repz
push
push
orb
xchg
into
es
mov
dec
aam
push
arpl
dec
stc
jbe
shll
inc
inc
jecxz
xor
mov
cmp
adc
xchg
popa
and
and
jae
push
xor
sbb
into
push
in
outsl
rcll
add
adc
negb
push
icebp
lods
cs
inc
sub
cmp
push
icebp
fdivl
push
inc
shll
daa
popl
stc
dec
pop
and
aaa
icebp
inc
shl
add
decb
ret
fcoml
jnp
inc
dec
in
icebp
das
dec
pop
sbb
jo
sbb
popa
add
lock
push
push
sbbl
hlt
or
xlat
outsl
ret
add
frndint
in
jno
xor
pop
xchg
and
rcrb
or
push
mov
subl
sbb
fcoml
xchg
add
dec
test
aam
lahf
aad
fwait
ss
push
sbb
lcall
rolb
sub
mov
rcrb
xchg
arpl
int3
and
cmp
sub
jg
sub
je
gs
scas
inc
mov
movsl
mov
push
inc
fstps
sub
xchg
icebp
xor
and
adc
jl
push
lret
ret
lods
pop
shll
cmc
aam
arpl
dec
pop
cwtl
xor
movl
ss
in
out
adc
inc
dec
int3
out
mov
leave
aam
xor
out
stc
inc
jno
addr16
jmp
daa
es
es
adc
mov
jge
aad
int
dec
loop
test
dec
jo
ss
xor
lret
rclb
push
jg
lea
sbb
cld
push
jns
xchg
jle
sbb
loope
dec
mov
push
jl
push
test
mov
xchg
in
pop
dec
das
in
dec
rcrl
and
mov
aaa
mov
inc
fnsave
and
cld
lds
inc
sarb
fnstenv
dec
lret
fwait
sub
out
out
push
pop
lret
mov
push
xchg
leave
mov
pushf
imul
add
adc
andl
sbb
fcoml
xor
xlat
add
sbb
xor
jnp
xor
pusha
mov
jmp
cli
jp
xor
pop
arpl
dec
in
cmc
mov
outsb
stos
cmp
and
dec
inc
dec
adc
sbb
cmp
stos
test
es
or
iret
aaa
aaa
inc
leave
and
arpl
mov
push
inc
outsl
xchg
xchg
add
xchg
adc
xor
mov
fsubrs
xchg
rorb
cmc
outsb
mov
popf
sub
in
add
add
mov
xorl
shl
or
fmuls
or
xchg
mov
pop
ja
sarb
inc
scas
pop
aaa
mov
stos
stc
insl
in
push
or
mov
mov
imul
in
sbb
dec
jno
mov
and
fcmovnu
mov
mov
loop
add
cwtl
add
imul
popa
jp
outsb
jp
xor
jno
sarb
or
inc
mov
mov
jp
add
pop
or
push
push
aas
in
call
sub
jne
popl
inc
push
or
pop
jae
aaa
inc
inc
pop
jecxz
insl
xchg
aas
test
jbe
outsb
test
sbb
adc
std
pop
pop
subl
in
sbb
push
cs
xchg
mov
aaa
push
into
xchg
rol
stos
adc
dec
xor
inc
clc
scas
daa
outsl
in
daa
pop
xchg
cmpsl
or
or
hlt
xor
fsubrl
ljmp
sbb
sub
scas
mov
push
popl
outsb
jbe
sub
xor
adc
xor
dec
push
sbb
aam
fdivrs
cld
ja
aaa
push
cltd
jae
dec
push
push
cmpsl
iret
rcrb
addl
loop
outsb
inc
xor
sub
xor
dec
inc
int
rcll
fildl
test
pop
loop
lahf
inc
imul
scas
push
in
sbb
xor
push
cmp
sarl
jl
in
into
adc
xor
push
cmc
shlb
ret
rolb
add
mulb
test
iret
imul
cmp
stos
and
es
or
imul
push
repz
dec
bound
or
int3
or
inc
xor
sub
dec
insb
fdivs
xor
mov
rcrb
test
clc
push
outsl
dec
push
fs
loop
loope
add
or
dec
pop
xor
mov
in
jno
iret
inc
ret
cmp
jmp
jns
push
and
dec
mov
cs
push
clc
dec
push
xlat
xorb
push
scas
mov
ss
or
dec
scas
or
sbb
push
add
popa
sub
fcmovne
sub
adc
pop
push
mov
sub
rcrl
cltd
mov
mov
adc
fwait
mov
gs
sub
push
and
mov
or
test
adc
add
icebp
in
fcoms
aam
ret
sub
popf
outsb
imul
sbb
outsb
insb
mov
push
aad
rorb
xchg
ja
mov
or
out
sbb
jnp
movsl
loopne
xchg
cmp
loope
or
sbb
pop
cmpsl
jecxz
sbb
mov
dec
fimuls
in
xchg
sbb
lret
mov
sub
xchg
fcomi
cmp
or
cmp
in
mov
ljmp
test
insl
xor
mov
add
mov
mov
inc
or
sbb
xor
arpl
cmc
xchg
rcrb
test
loope
sub
push
pop
sarl
sub
popf
cmp
out
add
jo
pop
cld
xchg
sbb
and
sbb
aaa
lods
bound
clc
cmp
sub
js
adc
cs
inc
lds
movsb
push
push
dec
dec
mov
test
ss
or
or
fs
inc
out
xchg
sub
inc
mov
xor
mov
shll
insb
and
lods
cmp
ds
pop
inc
shrb
sub
adc
mov
mov
push
jo
imul
lret
fisttps
mov
ret
lea
scas
pop
shll
sbb
adc
pop
or
outsb
jg
loope
mov
enter
adc
dec
sbb
push
lods
xor
jle
pop
repz
and
push
roll
and
pop
hlt
arpl
std
cwtl
mov
inc
inc
inc
lcall
decl
xchg
sbb
dec
mov
dec
in
in
push
jb
pusha
ja
sarl
fcmove
fwait
push
add
jg
hlt
repz
xor
fldt
sub
in
int3
or
repnz
or
fcmove
mov
xor
add
rclb
or
pextrw
push
cmp
cwtl
jb
cli
cwtl
jbe
dec
in
push
cwtl
inc
pop
jno
outsl
imulb
or
mov
fsub
mov
lcall
sbb
dec
js
sbb
dec
repz
inc
jo
dec
jbe
cmp
sti
jns,pn
pop
ficomps
out
dec
cmp
and
and
xor
dec
nop
push
push
dec
mov
mov
hlt
or
insb
popf
ret
rcrb
lds
cmp
and
imul
push
push
cmc
jns
dec
cs
mov
fdivl
ja
into
mov
lds
or
sahf
sbb
push
adc
sbb
shrl
add
mov
outsl
mov
loop
or
cmpsb
rcrl
movsl
jns
dec
mov
xchg
adc
stos
movsl
push
xor
adc
pop
push
in
inc
inc
push
mov
pop
sub
mov
aam
lcall
cmpsb
pop
in
lds
or
fstpt
into
sti
xor
dec
cmp
inc
repz
inc
sbb
mov
fsts
imul
push
adc
inc
sbb
push
iret
add
in
xchg
dec
push
push
push
xchg
aaa
iret
pushw
aaa
loop
cmp
sub
pop
pop
mov
cmp
cwtl
dec
push
out
pop
or
cmp
push
insl
fdivrs
inc
cmp
sarl
push
cmc
or
sbb
or
notb
cmpsl
outsb
sbbb
mov
pop
adc
and
sub
dec
jno
sbb
popa
pop
pop
or
or
sub
sarb
adc
adc
enter
ss
push
fabs
ds
lods
inc
sub
sub
pusha
shll
xchg
sbb
aam
test
aaa
xchg
push
sarl
adc
sub
das
lcall
inc
bnd
jnp
adc
rol
cwtl
push
sbb
adc
outsb
in
adc
sti
lahf
xchg
cmp
es
fcmovu
fsubs
add
lahf
je
mov
or
jns
inc
int3
test
sbb
jno
xchg
in
mov
cmovns
out
shrl
pop
or
out
pop
inc
and
dec
stos
jns
cmpsb
cmc
stos
sbb
bound
out
pop
adc
xor
and
sti
adc
in
notl
fs
bound
inc
nop
push
or
xor
cmp
inc
inc
dec
cltd
push
inc
mov
dec
rcr
sub
or
in
pop
jp
jae
loope
les
sub
inc
insb
cmp
repz
fidivs
mov
mov
adcl
xchg
xchg
dec
sub
mov
jecxz
or
orl
jo
popa
les
cltd
leave
aaa
arpl
dec
scas
xor
xchg
mov
sbb
addl
cld
sbb
inc
xchg
mov
sub
dec
data16
popa
ret
fldenv
out
movsb
pop
pop
dec
bound
push
aam
adc
aam
sub
inc
jb
lea
shl
fs
int3
fwait
or
es
mov
sub
add
xchg
jo
pop
xor
lret
sub
mov
adc
adc
scas
or
inc
push
into
sub
scas
mov
sub
insl
stos
test
gs
dec
xorl
push
inc
pushf
xchg
mov
ret
aas
add
jnp
punpckhwd
xchg
rcrb
push
jno
add
push
int3
out
adc
call
lods
mov
add
jno
mov
or
xlat
cmp
jne
mov
xor
mov
adc
xchg
adc
cmp
popf
inc
popa
iret
xchg
or
adc
loop
in
test
aam
pop
lea
sbb
jmp
cli
inc
xchg
aam
fldl
jo
or
pop
int3
in
pop
pusha
add
das
or
adc
test
orl
ret
sbb
cmpsl
xchg
cmp
mov
pop
xchg
push
push
jno
cmpsl
cmp
jne
sub
dec
adc
dec
orb
in
push
aam
fsubs
test
rolb
mov
test
mov
lock
in
leave
inc
and
cmp
cltd
fsubrs
xchg
bound
lea
movsb
xchg
sub
jno
imul
adc
jo
xor
sti
in
fwait
testl
inc
xchg
ds
and
outsl
loop
inc
xchg
sub
cltd
xor
and
jae
mov
sub
push
add
xchg
push
dec
sub
xchg
rolb
mov
push
cmp
int
subl
pop
leave
mov
rcrl
jo
xchg
xchg
cmp
imul
mov
sub
fcoms
mov
pop
into
call
xchg
pushf
adc
xchg
test
fs
lret
ret
sub
shrl
and
jmp
into
fwait
mov
mov
xchg
jo
adc
mov
xchg
pop
rcll
sti
subl
adc
inc
cmp
es
pop
ljmp
cmp
cltd
roll
pop
sub
fs
and
inc
xor
outsb
sbb
xor
push
fisubs
rclb
aad
push
mov
stos
stos
es
jo
push
xor
fcmovnb
mov
mov
and
inc
daa
cwtl
adc
inc
jns
lea
mov
les
dec
add
jmp
fcom
pop
das
test
inc
dec
mov
sub
loopne
fwait
inc
hlt
stos
mov
nop
add
pop
or
divl
jae
pop
and
popl
shr
fwait
cmp
jno
test
mov
push
leave
cld
stos
mov
dec
push
inc
in
stos
popa
ret
aam
lret
inc
inc
adc
cmc
push
in
int
repnz
jge
dec
mov
dec
mov
dec
shrl
inc
and
mov
stos
iret
pop
push
lcall
inc
xchg
push
stos
loopne,pn
adc
jo
fmul
stos
xlat
in
or
xor
mov
pop
jnp
xchg
pop
or
ljmp
int
xlat
aam
rolb
addr16
push
xor
add
outsb
mov
pop
lods
add
out
mov
rcll
leave
lods
vmread
inc
pop
jo
lea
add
sub
cmp
xor
dec
adc
push
fcoml
test
dec
mov
rclb
push
stos
lds
xchg
inc
dec
stos
pusha
mov
xchg
sub
rorb
xchg
sarb
add
aaa
xor
jp
xchg
pop
imulb
dec
mov
push
jbe
jg
adc
pop
shll
adcl
pushf
dec
out
out
push
in
lcall
push
push
cwtl
sub
sub
cmp
daa
jae
lahf
jbe
push
outsb
aaa
popa
movsb
pusha
cmpsb
xor
rcr
sub
test
pop
jb
fsubs
add
inc
jnp
jb
popa
jl
aam
xor
dec
pop
mov
mov
mov
mov
pop
pop
push
dec
rcrl
insb
out
scas
lods
pop
push
add
lock
adc
lock
addl
aas
push
push
cs
aam
test
push
pop
adc
inc
push
push
fcomps
dec
jno
test
push
and
and
ljmp
adcl
into
jg
imul
cmpps
das
daa
dec
jns
sarl
jmp
inc
or
jno
decl
cltd
xor
les
push
xchg
cmp
xchg
testl
and
aaa
cmp
jno
mov
mul
jb
mov
mov
dec
int
and
in
lret
test
daa
xor
dec
nop
jno
icebp
daa
jmp
xor
in
xchg
into
fisubs
xor
xor
ds
pop
loope
cmpsb
clc
into
jle
fadd
sub
shl
pop
jmp
dec
push
insl
loop
push
jbe
xchg
cld
adc
lcall
in
push
or
cmpl
sbb
adc
test
fldenv
mov
mov
stos
gs
enter
mov
in
out
insl
mov
dec
adcl
xor
xor
push
mov
dec
push
fstpt
cmp
mov
push
or
mov
gs
pop
xchg
jo
dec
in
jns
xchg
xchg
movsb
push
mov
or
cmpsl
inc
push
sar
jno
stos
aas
jne
paddb
in
dec
sub
outsb
int
fcmove
pop
and
dec
in
xor
push
push
dec
push
dec
jb
sahf
xchg
xor
push
dec
mov
add
xor
fistpll
and
pop
pop
adc
imul
xor
pop
ja
out
daa
cmp
sahf
dec
loope
out
fcoml
sbb
jge
decb
shrl
or
popa
or
xorb
dec
lret
pop
pushl
adc
dec
es
fadds
out
sbb
xchg
stos
cwtl
xchg
sub
les
xor
mov
inc
push
aad
aaa
mov
mov
dec
or
out
lock
xchg
addb
int3
dec
dec
cwtl
aaa
das
popf
and
inc
fnstenv
adc
or
xor
fdivs
out
and
mov
aam
or
or
movsl
pop
push
icebp
pushf
and
jl
jmp
push
and
int
loope
inc
leave
dec
inc
test
add
mov
xchg
jo
fs
rcr
lcall
adc
dec
popa
cmpsl
or
cmp
sub
dec
dec
loope
ret
cmp
xor
jo
cmp
xor
mov
inc
sub
cmp
rcr
daa
push
jecxz
pop
adc
adc
adc
mov
testl
xorb
push
bound
addr16
mov
push
sub
mov
or
inc
arpl
sub
sbb
and
xor
and
pop
stos
xchg
xor
scas
pop
sti
or
clc
aam
mov
call
inc
jo
mov
loope
js
dec
push
fwait
lds
pop
pop
push
out
mov
lods
dec
fisubl
loopne
adc
jo
cltd
sbb
sti
and
aas
jbe
fildl
xor
push
jmp
clc
js
jb
pop
aaa
sub
fldt
or
mov
fidivl
sub
xchg
adc
and
icebp
sub
loop
iret
inc
add
inc
cmpsb
xor
or
addr16
inc
into
leave
add
cmp
mov
xchg
pop
push
test
into
mov
cmp
or
and
sbb
rclb
scas
pop
fldcw
and
ret
push
pop
dec
xchg
cmp
inc
cmp
inc
dec
push
push
cmp
fdivr
dec
popl
movsl
loope
in
rolb
push
pop
dec
push
outsb
xor
and
xchg
movsl
jae
or
xor
pushf
and
cmp
fisttpl
inc
imul
xor
inc
sub
shlb
sbb
gs
arpl
jl
push
sti
jne
fstpl
pop
push
xchg
and
decl
dec
sar
cltd
out
xchg
push
or
jo
mov
sahf
inc
sbb
sbb
mov
mov
inc
fsubrl
jno
test
test
in
mov
add
mov
ljmp
adc
jg
test
dec
mov
xchg
xchg
push
aas
aaa
aas
fs
mov
popa
mov
fcoml
ffreep
mov
mov
sub
sti
aam
rol
mov
pushf
adc
push
test
cmpsl
pop
sbb
push
les
int
aam
cmp
int3
inc
add
push
int
mov
ja
inc
call
fs
sbb
adc
or
das
sti
sbb
jne
push
inc
adc
subb
iret
mov
sbb
add
imul
push
stos
or
popa
mov
push
pop
in
push
jl
push
pop
mov
sub
ds
push
daa
xchg
sbb
push
sti
int3
cld
std
frstor
pop
push
in
xchg
xchg
jo
shll
in
rclb
fisttps
dec
or
outsb
imul
mov
jbe
sub
fisttps
insl
adc
jl
popf
push
and
ret
adc
sets
ja
jg
mov
push
cmp
in
stc
sarl
cmp
dec
cmovge
dec
jo
xor
adc
out
ljmp
std
jp
int3
push
adc
inc
push
xor
in
sbbl
add
stos
xor
inc
inc
jge
insl
jo
xor
sbbl
pop
adc
adc
mov
jb
mov
xchg
push
dec
ja
sbb
cmpsl
aad
dec
enter
xor
sar
cwtl
and
in
cmc
xchg
sub
cwtl
into
pop
mov
lds
push
jle
push
lahf
cltd
std
pop
push
int3
inc
iret
addr16
sub
xchg
in
and
loopne
cwtl
popa
sub
mov
push
and
imul
addl
push
lods
aam
push
adc
push
shlb
jle
push
jnp
lret
and
adc
mov
jecxz
out
insl
insl
ret
insl
push
mov
ret
xchg
xor
jne
xor
xorb
sbb
insl
mov
sti
push
cmc
rcrb
sub
fnsave
xchg
sbb
int3
jb
rcrl
sbb
mov
cli
push
fmuls
sbb
mov
std
cli
mov
add
sbbl
push
clc
adc
andl
mov
mov
fdivl
sub
xlat
popf
imul
xchg
mov
dec
cmpsb
in
xor
sub
rclb
xor
sbb
cs
clc
cmp
push
int3
cmp
sub
push
cmp
lret
jbe
aas
aam
inc
push
imul
or
ret
xchg
dec
in
push
mov
insl
mov
sbb
and
addr16
xor
sbb
lahf
cltd
nop
sub
mov
cmp
sti
icebp
adc
inc
fsubr
push
je
les
adc
sti
pop
xor
push
shl
lcall
aaa
xchg
mov
stos
xor
or
sub
mov
insl
adc
std
aaa
rcll
popa
or
out
and
dec
sti
pop
or
mov
cmpl
xchg
add
add
sub
add
popf
shll
or
fs
push
push
pop
inc
inc
jno
pop
dec
repnz
lods
or
mov
je
scas
xor
scas
test
dec
in
aam
addb
dec
les
pop
adc
xlat
hlt
test
adc
cs
minps
jge
cmp
dec
fidivs
loop
loope
and
cmp
push
insl
mov
mov
push
and
fwait
mov
aas
jo
ss
adc
arpl
sbb
cmp
orl
jnp
or
int3
shl
push
cmp
pop
inc
xor
stc
and
shlb
push
inc
jo
aaa
pop
push
mov
push
addb
xchg
mov
push
cmp
std
fs
cli
push
ret
movsl
push
jns
and
js
xor
aaa
inc
pushf
std
jnp
mov
inc
push
push
repz
daa
xor
dec
das
cltd
xor
js
mov
sub
mov
and
dec
aad
pop
popa
fstpt
in
shll
nop
mov
sbb
imul
xor
or
adc
ljmp
cwtl
sbb
or
enter
xor
cmc
aad
ss
cltd
pop
dec
in
ds
push
add
sbb
sbb
lds
out
dec
add
or
or
xor
dec
add
dec
mov
push
movsb
sbb
adc
mov
cmc
push
imul
pop
cmc
and
mov
into
sbb
inc
mov
pop
aaa
jl
pop
jae
cmp
sub
xchg
xchg
popf
xor
imul
sbbl
or
jecxz
and
arpl
jno
loop
cs
or
lcall
hlt
enter
dec
ss
push
push
inc
jne
sbb
xor
xor
cmp
push
jo
mov
push
mov
xor
and
lods
mov
aad
out
stos
gs
push
cld
pop
pop
push
jno
xor
repnz
int3
pop
test
inc
adc
cs
add
adc
mov
outsb
cmp
push
xchg
shrb
and
inc
sub
sbb
stc
out
push
cwtl
mov
xchg
dec
add
cli
push
cmc
and
fidivl
in
pop
test
xchg
es
and
ss
adc
fistpll
imul
inc
inc
popa
enter
mulb
xchg
and
std
adc
mov
imul
xchg
lods
jecxz
ret
dec
push
xor
cmp
les
jo
jno
jl
aad
mov
adc
sbb
or
push
icebp
sar
fistl
jns
test
cs
xor
mov
rcrl
inc
jne
cmpsl
add
shrb
xchg
push
or
out
or
dec
and
xchg
nop
or
cmp
pop
adc
bound
jg
cmp
fcoms
xchg
pushf
sbb
adc
lahf
dec
or
mov
pop
xor
cmp
clc
es
inc
push
xor
xor
jo
push
dec
xor
lret
xor
addr16
xor
in
pop
cmc
dec
sbb
xor
fisubrl
into
fisttps
jo
and
xchg
xchg
sub
cmpsb
dec
xor
dec
nop
mov
in
add
lret
je
outsb
jp
mov
fistpll
mov
call
sbb
jp
es
xchg
out
add
push
mov
jo
add
xchg
pop
cmp
sti
xor
inc
add
mov
jno
shl
rcl
adc
or
inc
push
stos
push
sub
or
loope
sbb
lret
insb
dec
dec
xor
push
inc
pop
mov
inc
and
loop
push
sbb
cld
dec
in
adc
push
add
outsb
cmp
mov
int3
lret
push
sub
jl
inc
decl
xchg
rolb
or
imul
pop
mull
lcall
dec
push
sub
xor
std
xor
lret
and
lcall
mov
cld
inc
xchg
mov
sub
dec
push
sub
outsl
sub
pop
cld
mov
mov
cltd
test
mov
inc
inc
outsb
mov
mov
sbb
jmp
and
jno
push
aad
clc
scas
or
adc
or
mov
or
dec
xor
jge
mov
mov
sbb
pop
out
inc
jno
imul
sub
adc
imul
sub
pop
xchg
aad
test
sti
aaa
jnp
jl
adcb
pop
lds
push
stos
xor
inc
in
mov
dec
ror
fwait
shll
loopne
dec
nop
push
mov
mov
sub
je
push
fists
ds
sub
xchg
xor
sub
dec
sub
fs
adc
cmp
loope
xlat
or
in
add
and
hlt
add
and
or
jo
sub
xchg
or
jo
adc
mov
pop
out
inc
sbb
add
andnps
adc
scas
je
popf
sbb
leave
pop
push
ljmp
jns
or
pop
adc
es
and
les
pop
daa
push
andb
xor
pushf
in
pusha
nop
push
cmp
rolb
mull
pop
outsb
je
dec
out
nop
nop
test
fdivs
iret
cmp
ja
cmp
mov
pop
xchg
add
mov
test
insl
mov
stos
inc
repnz
loope
jns
sti
xor
mov
fnstenv
mov
ljmp
in
pop
shr
dec
pop
push
and
lret
jne
sarl
popa
dec
incb
shlb
scas
or
xchg
mov
jmp
pop
mov
cmp
push
pop
orl
jg
notb
cmp
out
jle
xor
or
cs
and
jne
roll
xor
add
test
mov
and
mov
hlt
std
pop
insb
xchg
xor
popf
cltd
lcall
or
gs
sub
jae
cmp
mov
sbb
mov
ja
xor
adc
inc
push
frstor
mov
imul
lock
adc
lahf
lret
in
icebp
sub
dec
daa
repnz
lock
bound
leave
cmp
dec
pop
cld
jo
out
inc
outsb
xchg
mov
sbb
out
imul
and
inc
sub
dec
pop
add
std
lods
fdivs
mov
bnd
test
or
dec
lret
in
loope
cmpsb
aaa
adc
ja
into
in
jo
mov
std
jb
movsb
cmp
pusha
mov
aaa
cmp
mov
push
in
daa
or
jo
imulb
inc
neg
mov
sbb
sub
shl
or
mull
ljmp
or
rorl
xor
aaa
xor
cmp
js
push
push
in
dec
xor
lds
pop
or
arpl
nop
inc
inc
sti
cmp
in
into
jecxz
or
cwtl
leavew
pop
sub
and
enter
cmp
inc
cmp
fdivp
imul
add
push
sub
cld
icebp
std
test
lods
pop
loope
test
rorl
sbb
aaa
mov
push
lea
adc
rclb
ja
or
sbb
cmp
mov
jbe
inc
cmp
or
lret
das
inc
or
inc
push
fidivs
fistps
in
xor
insb
ljmp
push
cmp
arpl
jecxz
cmc
cs
incl
pusha
in
cld
cwtl
xchg
add
push
mov
and
aam
pop
push
inc
ds
xchg
jl
ljmp
dec
push
sub
int3
jle
sbb
push
jno
mov
lahf
icebp
push
sahf
cld
push
enter
sbb
lret
fildl
popa
adc
outsb
out
cmc
push
xchg
mov
test
pop
adc
ror
adc
push
aaa
aad
jp
adc
cmpsb
add
inc
out
jbe
cmp
popa
xor
jae
sub
pop
sub
xor
fistl
add
lcall
lret
xchg
mov
gs
jo
cmpsl
adc
jecxz
stos
fbld
data16
sbb
test
and
inc
push
ret
xor
dec
mov
dec
int3
and
cmp
xor
jns
pop
test
or
and
sub
jno
push
dec
mov
cmp
rcll
cmp
or
add
pop
adc
sub
out
or
mov
sbb
dec
inc
mov
or
jecxz
test
dec
out
push
dec
dec
sbb
mov
push
push
in
loopne
faddl
fistpl
inc
cmp
xchg
inc
daa
jns
mov
dec
repz
add
pusha
xchg
push
and
ds
inc
add
mov
lahf
sti
cwtl
lea
jg
or
xor
xor
shrl
ds
push
gs
cmp
xor
orl
mov
push
cld
adc
and
pop
xor
int
cmp
sahf
das
sub
xor
test
imul
dec
popa
or
mov
bound
push
jo
sub
cs
movsl
movsl
xor
aas
jnp
jl
test
adc
jb
mov
stos
rcll
sbb
mov
add
out
imul
pop
and
dec
and
test
and
sbb
lahf
and
mov
popa
je
scas
sbb
push
decb
mov
out
cmp
xchg
fldl
push
xor
push
push
lahf
fadds
push
mov
subl
lods
in
clc
ljmp
jns
ror
rcl
ja
push
jne
incb
pop
dec
lods
sbb
imul
push
into
dec
in
push
mov
dec
push
mov
or
in
clc
mov
pop
pop
out
xor
inc
rcll
jmp
jne
inc
cmp
sbb
adcb
nop
clc
daa
push
jle
sub
push
lods
in
or
xchg
and
cmp
inc
sbb
outsb
mov
leave
dec
inc
xor
jne
mov
int
int3
outsb
outsl
or
mov
loope
shrb
push
aam
inc
and
mov
adc
shlb
dec
xor
or
rol
jg
mov
nop
mov
mov
pushf
inc
out
cmpsl
dec
xlat
jo
std
fsubrp
mov
fistpll
cmpsb
pushf
cmp
adc
pop
into
sbb
push
and
lahf
pop
sbb
nop
popf
cmp
movl
ja
and
hlt
xor
std
sar
lcall
push
mov
imul
jp
repz
gs
jo
mov
fcmovne
or
aam
cmpsl
push
fcomps
and
mov
rclb
jno
cmpb
pop
popa
dec
inc
arpl
sub
aam
ljmp
cltd
arpl
xor
inc
sub
ret
cmp
add
and
ljmp
out
sarl
mov
or
fisubl
decl
mov
aam
fisttpl
pop
fistpl
ffree
add
sub
xor
xchg
sbb
push
rorl
or
dec
ds
inc
jns
inc
inc
or
cmovns
inc
dec
sub
iret
xor
inc
push
loope
leave
add
xor
sub
lret
pop
and
inc
cli
arpl
aad
test
aaa
imul
outsb
or
fsubp
filds
ljmp
xchg
js
insl
inc
pop
mov
imul
jbe
clc
xor
fdivrl
inc
jmp
or
add
fsubrl
cmp
inc
xchg
ljmp
inc
ljmp
fnop
xchg
xlat
icebp
mov
pop
dec
sar
pushf
sbb
inc
inc
cmp
push
and
cmpsb
sub
ss
or
cmp
pusha
xchg
pop
enter
mov
or
push
js
mov
xchg
aaa
rcl
mulb
sub
jns
jae
fisttps
addl
jnp
lahf
aaa
add
filds
inc
or
mov
jno
or
in
cmp
out
mov
push
jns
xor
sub
sti
cmp
sub
jno
sub
and
push
push
adc
push
loope
and
adc
xchg
adc
xchg
sub
das
jb
pop
test
test
sarl
mov
pop
movl
imul
outsb
xchg
aaa
insb
lods
xchg
jae
sub
fcompp
mov
pop
in
andl
mov
insl
test
mov
frstor
mov
push
popf
testb
cmp
and
ror
arpl
orl
push
inc
inc
popa
cmp
cmc
xchg
jne
in
inc
sbb
test
mov
movsb
dec
adc
jge
in
inc
cmp
mul
idiv
cmp
add
lcall
fstp
pop
popa
push
daa
das
mov
arpl
push
dec
in
xor
dec
int3
aas
daa
and
add
push
fcomp
push
dec
in
leave
mov
daa
test
ds
movsl
inc
adc
xchg
sbb
mov
hlt
pushf
cld
or
sub
ja
pop
mov
rorb
mov
and
xor
imul
dec
mov
aaa
in
into
mov
push
arpl
sbb
movb
adc
outsl
int3
jp
mov
sti
xchg
das
cs
push
dec
fistpl
xor
scas
hlt
xor
aaa
xchg
lret
jmp
lods
fdivrl
cld
mov
push
adc
xorb
dec
sarl
jne
pop
pop
mov
stos
mov
rolb
sbb
jle
fstpt
fptan
cmp
and
mov
imulb
inc
push
pop
mov
bound
sahf
mov
in
outsl
jae
xor
negl
inc
jp
dec
lds
into
push
or
push
cmp
mov
insl
dec
nop
lea
push
test
daa
fisttpl
and
out
mov
lret
int3
nop
icebp
pusha
pusha
inc
xchg
push
xor
push
adc
mov
or
inc
mov
fnstenv
aaa
fs
adc
fidivl
lcall
push
pop
pop
xor
mov
inc
adc
mov
movb
pop
push
jb
nop
inc
test
ret
cmp
xor
rolb
push
imul
dec
sti
cmp
addb
vmovdqa
fsts
popl
leave
cmc
cltd
lea
pop
mov
lea
jno
bound
push
pop
jecxz
lea
adc
mov
mov
xchg
inc
test
or
popf
adc
loopne
xchg
nop
cmp
inc
mov
cmc
gs
mov
rorb
out
fsubrs
int
andl
fadds
int3
pop
push
sbb
mov
xlat
pop
adc
jle
push
add
xchg
das
push
pop
sbb
stos
add
dec
jo
adc
leave
adc
dec
clc
add
pop
shl
xorl
mov
dec
into
or
adc
dec
cmpsb
xchg
inc
jo
dec
das
xchg
aad
xor
cmp
mov
xor
lods
dec
enter
push
jno
sub
jbe
push
push
xchg
push
in
cmp
adc
sbb
filds
ret
fldl
in
push
rclb
mov
xchg
aaa
inc
into
xor
sbb
adc
cmpsl
or
pop
dec
xchg
loope
in
loope
iret
push
pusha
pop
add
mov
sbb
cmp
fdivrl
frstor
repnz
push
es
outsb
mov
loop
mov
or
dec
push
scas
pop
jge
jno
ljmp
aam
add
pop
dec
mov
cld
push
jle
dec
dec
mov
enter
adc
push
sti
jo
cli
pop
icebp
iret
xchg
or
aam
rcrb
ror
clc
push
in
les
arpl
and
fcoms
popf
or
fmuls
mov
rcll
inc
clc
adc
jno
insl
sbb
repz
mov
add
xor
movsb
xchg
jbe
fwait
iret
xor
dec
cli
or
sub
std
outsl
jno
sub
and
or
jbe
jmp
mov
clc
mov
clc
arpl
in
lods
cmp
dec
jne
jge
out
mov
lea
out
clc
ror
jns
pop
imul
repz
pushf
push
lods
fmuls
clc
aad
push
fwait
jmp
push
aaa
mov
sub
daa
dec
es
sbbb
adc
lahf
xchg
push
ljmp
cmp
push
xchg
dec
push
sti
jmp
mov
push
cmpsl
mov
fcmovb
fcompl
in
clc
jns
sbb
bound
jnp
andl
dec
gs
lcall
sbb
mov
and
faddp
imul
xor
dec
xor
xchg
rolb
in
cmp
fs
mov
es
sub
xorl
adc
mov
leave
loope
pop
or
mov
jmp
or
mov
leave
sub
aam
sarb
cmp
ja
xor
fldenv
mov
sbb
cmp
adc
push
sahf
hlt
in
das
push
mov
cli
pusha
adc
adc
mov
mov
cs
cld
xlat
and
das
cli
add
bswap
sbb
xchg
xor
aam
mov
pop
sti
adc
jge
push
jno
cmp
mov
out
push
es
add
mov
test
jne
lods
hlt
sti
push
jns
mov
std
jb
sti
sysret
test
iret
or
icebp
testb
cmp
xor
mov
stos
popf
pop
test
push
fildll
subb
test
dec
cmp
mov
xchg
int3
cmp
pop
enter
mov
mov
push
mov
psubq
adc
push
dec
dec
add
popf
mov
fwait
xchg
inc
inc
pop
call
scas
enter
dec
gs
and
push
push
popa
enter
jmp
inc
clc
push
xchg
addr16
je
mov
push
cmp
pop
dec
into
dec
test
or
lret
dec
mov
xchg
outsb
inc
cmc
jmp
dec
shll
fsubrl
jo
cmp
ror
xchg
sbb
dec
dec
or
repz
jbe
or
xchg
dec
leave
jne
mov
pop
lcall
cmp
xlat
mov
lock
ds
add
mov
fcoms
and
cmp
or
jp
inc
rol
dec
cmp
lcall
inc
out
dec
sbb
xor
mov
xor
adc
sbb
jl
mov
dec
push
xor
shrb
push
jns
xor
pushf
je
lcall
hlt
inc
bound
adc
or
fistps
cmp
adc
cmp
pusha
int
push
incl
jb
insl
pushf
cld
push
mov
ja
std
or
in
sub
push
jno
mov
ret
cmp
sti
hlt
lret
add
push
in
pop
mov
and
dec
add
lret
mov
push
jle
les
push
adcl
aad
sub
mov
cli
aam
or
xor
or
cmp
aad
test
sub
in
sbb
lock
jo
scas
aaa
jns
push
into
xor
mov
sbb
jne
jnp
nop
fmull
sbbl
rol
push
fistpl
inc
push
jg
add
mov
or
and
dec
add
ljmp
dec
or
fdivrl
cmpsl
inc
add
dec
push
das
adc
jmp
cmp
cmp
xchg
fbld
mov
mov
daa
sub
push
cmp
mov
inc
testl
jp
xor
mov
mov
js
imulb
sub
jmp
jae
sub
jmp
pop
ss
mov
pop
shrl
testl
std
lods
loope
out
neg
add
add
in
dec
cld
push
ficoml
jp
jp
jo
xchg
mov
xor
mov
aaa
and
adc
stc
pop
cmc
sti
fdiv
outsb
jns
addr16
jle
dec
mov
xchg
pop
sub
and
sub
lock
xchg
ss
xor
inc
cmpsl
int3
adc
push
dec
les
dec
cwtl
jge
sbb
or
mov
hlt
cmp
cmp
push
dec
sarb
jo
idiv
cmc
dec
or
add
mov
push
icebp
sahf
xor
lods
xor
pop
clc
sahf
add
adc
lods
inc
and
and
lcall
dec
aaa
xor
fiadds
add
fs
push
adc
lea
scas
push
add
test
dec
sarb
dec
inc
int3
lret
ret
pusha
xor
outsb
aas
xchg
jp
jo
adc
pop
xlat
push
jp
adc
insl
test
inc
jns
sbb
lds
push
fs
sub
sbb
out
inc
dec
cli
testb
pop
xchg
aaa
xor
cmp
mov
mov
jb
rcll
or
or
mov
mov
jo
scas
xchg
loope
xor
xchg
shll
enter
jg
repnz
stc
adc
push
cmp
sub
adc
inc
lds
addr16
mov
sub
sbb
cmpsb
ss
xchg
pop
icebp
imul
pop
adc
cmp
mov
leave
sahf
imull
negl
inc
stos
xchg
push
xor
push
inc
clc
sti
xor
adc
fdivl
xchg
inc
lea
and
jecxz
dec
jno
sbbb
adc
subl
push
mov
insb
fiadds
aad
roll
stos
das
sub
push
cmpl
pusha
ficoms
rclb
cmc
fnstenv
xchg
hlt
cmp
addr16
sbb
pop
adc
lcall
xor
pop
cmp
stos
lods
jle
lods
push
sti
lods
xor
js
sub
insb
xor
adc
dec
sbb
jbe
sub
jle
sbb
cmc
gs
fnstenv
enter
or
mov
int
pop
dec
mov
xor
stc
mov
sarl
insb
es
pop
sarl
inc
and
ss
xchg
aaa
add
add
cmp
cld
int
sbb
or
cmp
jo
xor
pop
fwait
sub
jae
fidivs
mov
cmpsb
jo
ss
std
inc
and
loopne
bound
adcl
pushl
cli
jno
les
iret
pushf
or
xchg
inc
mov
pop
insb
fcmovnbe
mov
jns
mov
pop
cmp
inc
andb
inc
dec
add
loopne
int3
das
inc
push
fldenv
push
cmp
movsl
shl
sub
iret
push
andb
adc
ss
mov
sbb
loope
ljmp
aad
movsl
cmp
inc
aaa
mov
fldcw
xlat
mov
int3
push
add
pop
js
stos
or
dec
mov
enter
jo
inc
add
ficoms
sbb
xor
inc
jo
jmp
dec
push
les
in
adc
dec
mov
add
mov
fidivrl
je
push
std
and
fs
aad
xchg
dec
dec
add
push
mov
nop
sbb
inc
mov
jmp
push
cld
xorb
sbb
mov
comiss
sbb
insl
cs
fcomps
outsb
pop
cmc
aas
xorl
jno
fldenv
jg,pt
fs
push
jecxz
shlb
or
imul
push
mov
imul
cmp
fistl
or
and
or
add
push
fsubrl
xor
pushf
xorl
mov
test
in
inc
into
pop
std
js
roll
push
insb
ljmp
enter
xlat
in
addr16
pop
les
cwtl
push
lods
adc
add
push
cmp
fdivs
cltd
inc
add
pop
push
popa
fisttpll
mov
or
xchg
push
in
xchg
add
inc
and
aad
fwait
cmp
jl
mov
xchg
shll
ja
jnp
jns
dec
aad
daa
xor
aad
outsb
lea
sahf
xor
test
cmp
cmp
xchg
xor
and
push
fstps
lods
jmp
sub
mov
xor
push
pop
outsl
or
jo
ja
cld
cwtl
testl
out
jo
and
cmp
push
lea
jge
bound
inc
sbb
aad
xchg
es
add
inc
or
shlb
pop
lods
and
xor
es
push
clc
dec
lods
cs
outsb
mov
gs
pop
push
rolb
sti
ja
mov
mov
dec
jg
ljmp
and
inc
jae
dec
les
cltd
push
jno
xor
inc
push
dec
into
add
and
push
inc
out
mov
test
out
pop
jo
sbb
imul
push
xchg
fnstenv
adc
mov
xor
movsb
or
xor
jnp
inc
pop
dec
into
fmull
dec
jl
cwtl
inc
sub
inc
popa
cmc
inc
push
push
cmc
dec
dec
pop
or
sub
or
push
int3
shrl
mov
jecxz
pop
mov
popf
rcll
jo
dec
pop
add
cld
pop
sbb
lahf
fdivr
or
aad
cs
or
outsb
jl
iret
xchg
pop
aas
mov
fs
sub
sub
cmpb
cmp
mov
je
in
int3
pop
push
jns
add
mov
push
xor
outsb
mov
lods
ret
lock
mov
xor
inc
sbb
cmp
push
push
inc
adc
and
pop
ja
ror
mov
pause
xchg
jnp
sub
fldcw
inc
push
cli
aam
or
dec
push
inc
outsb
xchg
jno
sub
xchg
jbe
or
pusha
sahf
xor
aad
add
jno
sbb
cmpsb
es
addr16
xchg
in
lret
daa
pop
add
inc
jnp
scas
outsl
lods
ret
pop
add
xchg
xor
aad
mov
and
mov
xchg
jecxz
sub
jno
and
mov
mov
bnd
fists
mov
mov
sbb
push
adc
pop
jo
loope
fiaddl
loopne
ds
repz
mov
test
pop
jp
dec
sub
adc
iret
push
cld
aad
sub
iret
jge
adc
xor
enter
js
repnz
or
push
pusha
fcoml
cmp
cwtl
leave
dec
adc
xchg
and
popa
mov
fnstenv
mov
inc
das
add
cmpb
in
fstpt
mov
insl
mov
dec
sbb
cmp
icebp
rolb
cmpsl
push
xlat
dec
jo
leave
iret
mov
push
cmp
loope
jo
mov
test
mov
mov
lds
nop
push
loopne
xor
sbb
mov
xchg
inc
js
and
lahf
mov
pop
sub
push
push
push
cmp
pop
xor
xchg
lret
push
inc
and
sub
cmpsb
mov
inc
jle
xor
and
push
cmp
dec
rolb
dec
mov
pop
and
fisubrs
push
sbb
adc
aad
movlps
xchg
or
les
and
enter
or
call
lea
mov
adc
inc
scas
icebp
hlt
std
bound
out
jmp
jo
out
dec
and
mov
aaa
int
cmp
iret
pop
push
xchg
or
push
pop
loope
xchg
push
test
push
push
push
stos
xor
dec
jns
jo
pusha
adc
push
mov
mov
mov
in
cmpsl
test
jl
cli
inc
cwtl
sbb
rclb
popa
repnz
jo
add
idivl
into
dec
sbb
inc
add
mov
in
arpl
cmp
fdivrl
cmp
mov
into
in
lock
sbb
shl
xor
pop
xchg
testl
jo
mov
mov
add
addr16
and
adc
stc
rcll
aas
or
in
sub
fwait
dec
ret
int3
movsl
push
adc
jns
lock
pop
xor
mov
iret
sbb
sbb
xor
add
jecxz
in
cmp
xorl
sub
mov
flds
into
sbb
cwtl
imul
mov
adcb
test
sahf
cmp
xchg
or
sub
into
or
loope
scas
or
add
inc
inc
lods
test
xchg
in
mov
add
in
push
mov
fcoms
xor
sub
stos
shrd
into
fidivrl
repz
out
push
outsb
lahf
mov
jmp
dec
into
mov
shl
dec
int3
sahf
ss
mov
data16
bound
sub
push
jo
jmp
mov
adc
push
push
dec
xchg
adc
and
mov
loop
xor
fcmove
inc
notl
add
enter
hlt
inc
push
lahf
jle
adc
dec
in
sub
push
test
inc
jo
iret
xchg
adc
adc
dec
into
adc
or
fisubrs
sub
aad
scas
pop
shll
ret
or
leavew
mov
sub
xchg
xchg
jbe
or
lods
fdivrp
das
aad
mov
inc
shl
or
and
icebp
push
push
jo
scas
or
xor
inc
pop
sub
lret
aaa
mov
mov
dec
xor
jle
mov
fs
dec
das
xor
pop
mov
push
out
inc
lcall
clc
dec
jo
xor
pop
xor
mov
negb
cmp
cwtl
lds
pop
or
push
mov
gs
insl
sbb
in
xor
inc
leave
or
inc
imul
out
sub
jnp
rcl
add
pop
xchg
add
outsb
insl
xorl
shrl
pop
shlb
jo
pop
xor
cwtl
in
sbb
sbb
in
sbb
inc
dec
pop
or
and
mov
bound
inc
int
test
sub
stos
insb
inc
ss
xor
fwait
add
and
in
add
cli
push
pop
pop
or
sub
push
jo
cli
sub
scas
cmc
xchg
sub
icebp
sub
push
add
push
dec
repz
adc
pop
mov
addr16
push
cmp
push
mov
mov
pop
out
in
pop
xor
jns
jg
inc
adc
insb
or
jo
add
arpl
cmp
fistpll
push
xlat
out
pop
jns
cmp
sbb
dec
jmp
adc
aad
stos
cmp
xchg
xchg
outsb
xor
fstl
pop
add
and
mov
cmovae
mov
sub
dec
dec
push
ds
cmp
test
cmc
sbb
inc
ss
imul
bsr
dec
repnz
sub
inc
test
adc
pop
aas
jo
inc
loop
lods
int3
jae
imul
xor
mov
mov
lods
jns
rcr
add
int3
loop
jns
cmpsl
pop
movsb
sar
loop
xchg
inc
push
or
xchg
loope
xchg
cmp
cmc
adc
pop
movl
sar
add
sbb
pop
mov
adc
movsb
push
inc
loopne
in
xchg
outsb
push
std
jmp
pop
jo
fwait
sub
testl
sub
repnz
fdivs
stos
aas
rcll
lret
lock
add
push
inc
push
push
xor
leave
fmulp
mov
fldcw
mov
xchg
jmp
push
cmp
pushf
cmc
clc
push
adc
inc
ja
das
mov
xchg
xor
std
xchg
mov
adc
cmp
sti
rcrb
sarb
jo
mov
cmp
mull
sar
fisttpll
popa
cs
inc
rcll
sbb
add
lds
dec
mov
arpl
ja
xor
jl
mov
inc
or
adc
dec
sbb
int
or
aad
fcoms
into
sub
inc
push
jb
scas
or
adc
sti
pop
add
mov
and
cmp
dec
xchg
es
jns
dec
popa
sarl
mov
lock
and
xchg
cmp
xlat
cld
adc
push
pushf
push
in
mov
push
ja
das
pop
dec
lahf
cld
xchg
dec
dec
adc
jg
xchg
push
into
mov
push
pop
pop
dec
in
scas
push
xchg
push
dec
pminub
testl
adc
aas
pop
jmp
lret
ss
jmp
push
mov
stc
mov
lea
dec
or
jns
adc
push
aad
fwait
lods
ficoms
and
popf
mov
add
pop
push
aam
adc
inc
out
je
ss
dec
cmp
inc
cmp
dec
fisttpl
outsl
or
in
inc
jbe
sbb
xchg
mov
add
int
xchg
enter
cmp
xchg
mov
int3
outsb
mov
xor
sar
dec
mov
mov
push
iret
pop
ss
in
xchg
mov
iret
lock
icebp
mov
inc
stos
in
imul
ss
dec
jp
pop
mov
xor
sub
mov
push
test
jne
pop
adc
aad
and
or
jmp
cmp
push
aad
push
push
inc
sub
nop
dec
out
pop
pusha
pop
inc
adc
adc
insl
aaa
jmp
js
mov
pop
xchg
in
lret
jne
adc
test
in
aas
dec
mov
insl
sbb
cld
repz
nop
inc
pop
mov
jo
xor
pop
xor
xchg
psrlw
aas
loope
movsb
dec
aad
ss
test
adc
imul
arpl
mov
xchg
xor
mov
sbb
sbb
inc
lret
cwtl
shrl
jo
add
jbe
sub
out
call
rcpps
xor
leave
inc
ss
pop
sbb
inc
push
dec
and
push
dec
sarb
add
dec
inc
jo
dec
sub
popa
shll
fstpt
adc
sub
jmp
js
jno
lcall
movsb
cwtl
mov
leave
dec
int3
loop
arpl
adc
roll
cmp
jge
cmp
jo
repnz
in
in
add
jo
inc
test
xorl
and
movsb
arpl
loopne
dec
out
div
jl
aas
xor
cltd
ljmp
icebp
xor
add
push
stos
mov
ja
stos
or
mov
lock
inc
add
imul
and
aaa
inc
loop
sub
js
cmp
lods
jne
test
inc
xchg
inc
mov
add
inc
cltd
add
shll
aas
test
sti
imul
outsl
cmpsb
out
ficoml
push
rcrl
lret
jo
inc
adc
xchg
pop
mov
cmp
push
cmp
and
xor
dec
ret
pop
pushf
pop
loop
adc
adc
adc
adc
icebp
imul
push
lock
pop
int
push
inc
adc
dec
jno
inc
icebp
out
fs
aad
scas
pop
pop
xor
dec
pop
inc
push
inc
jno
xchg
mov
lods
push
xchg
mov
inc
inc
das
out
sub
imul
repnz
mov
adc
ds
and
pop
sbb
push
inc
lret
adc
push
mov
add
fisttpll
sbb
dec
leave
jg
bnd
xorb
dec
fiaddl
das
test
mov
lock
div
or
adc
sub
fdivrl
inc
or
int3
cmpsl
sbb
cltd
jecxz
in
or
ja
loope
push
jo
gs
push
dec
rol
adc
bound
clc
pop
mov
dec
data16
push
std
inc
mov
mov
inc
pop
cmc
pop
test
mov
jmp
dec
push
les
pop
xor
int3
negl
clc
cli
pop
notb
cmp
cmpsl
mov
adc
iret
in
ret
lret
iret
sub
or
mov
inc
fcmovne
mov
imull
push
cwtl
sbb
sbb
add
dec
cmp
aas
mov
cltd
xor
add
xor
jecxz
out
and
push
stos
sub
pshufw
inc
pushf
shll
inc
sbb
jo
xor
adc
and
xchg
int
idiv
lock
outsb
aaa
hlt
mov
jecxz
ds
mov
enter
icebp
sub
aam
shlb
xor
jecxz
inc
lods
and
xchg
rcl
sub
xor
and
cld
dec
cmp
or
test
loop
out
add
sbb
xorl
in
jno
mov
hlt
fmuls
jne
inc
mov
into
lret
outsb
sub
sub
js
sbb
out
arpl
sarl
sbb
mov
dec
sub
fistl
xchg
jo
sub
pop
jne
push
push
outsb
fwait
int3
or
mov
lret
sbbb
roll
cmpsb
cs
gs
pop
xchg
mov
sbb
adc
pandn
push
int3
loope
aaa
int
xchg
pop
gs
cmp
aas
sub
aam
scas
cmp
xchg
call
popa
test
jns
dec
xor
jecxz
mov
outsl
or
inc
into
dec
in
sbbl
shlb
lret
sahf
dec
push
frstor
loopne
bound
mov
or
add
xor
jne
xor
loop
cmp
popf
cmc
cmp
fldt
pop
xor
ss
ds
stos
cltd
push
test
cwtl
ret
pop
fists
jne
cli
push
popf
vminpd
jo
xchg
jns
xor
lods
stos
sbbl
cmpsl
inc
rorl
adc
std
and
jle
dec
inc
jl
daa
iret
jno
clc
xchg
lret
imul
das
fdivl
js
mov
movsl
pushf
xor
leave
mov
je
fdivl
aas
in
nop
call
xor
add
gs
sub
sub
adc
enter
inc
push
xchg
cmp
rcl
testb
adc
push
filds
in
dec
xor
cmp
addl
inc
mov
lea
aaa
pop
push
fdivrs
push
xor
repnz
shll
mov
clc
pop
into
pop
push
mov
data16
cmp
xorl
in
out
push
adc
repz
sbb
mov
dec
roll
push
mov
cmp
xchg
cmovb
or
dec
cwtl
dec
test
pop
out
negl
lds
dec
push
mov
push
ja
outsb
push
dec
dec
shll
mov
mull
fildl
ljmp
xchg
cld
push
dec
insb
mov
sbb
ret
adc
dec
cmp
mov
lret
sub
cld
xchg
stc
cwtl
subl
dec
dec
or
adc
push
inc
xchg
jp
rcll
popf
outsl
push
cli
int3
push
sti
push
xchg
aaa
icebp
leave
jl
lock
xchg
in
sub
mov
in
xlat
add
or
inc
cs
outsb
add
fstps
fists
jns
cwtl
fisttpll
inc
dec
cmpsl
ja
movb
lods
sarb
int
inc
pop
xlat
pushl
pop
push
dec
xlat
popf
sarl
lea
adc
xchg
push
lcall
dec
adc
iret
adcl
sub
icebp
push
aad
into
lret
xor
int
inc
pop
cmpb
cmp
add
addr16
bound
add
stc
xor
outsl
inc
addr16
xor
jno
jg
xchg
xor
outsl
lds
test
vmovss
adc
jnp
out
or
call
xor
sbb
rolb
sub
mov
pop
shll
mov
push
stos
lret
inc
inc
cmpb
add
dec
push
mov
enter
aaa
iret
mov
fisttps
inc
xchg
stc
jo
out
lds
push
push
add
testl
dec
sbb
sub
daa
cmp
mov
pop
mov
push
roll
seta
xchg
aam
adcl
outsb
xchg
add
mov
daa
into
xlat
mov
scas
fcmovne
xor
push
jle
data16
les
adc
or
out
lods
call
movsb
lods
jecxz
fxam
push
int3
in
mov
push
cmp
push
and
inc
into
and
jmp
and
cli
int3
std
sub
or
mov
inc
dec
cmp
add
icebp
push
outsb
lds
aaa
and
mov
or
mov
decl
sbb
ret
icebp
insl
xchg
cltd
into
dec
xor
mov
sub
add
call
icebp
push
unpckhps
inc
adc
fbstp
jne
inc
lods
inc
adc
mov
push
popf
fists
adc
psrlw
or
fsubl
repz
cld
cmp
insb
aam
or
mov
inc
push
sub
sbb
notb
cmp
xorb
xchg
movsb
hlt
or
jl
xor
xor
inc
shll
pop
adc
stos
nop
scas
dec
pop
jmp
ret
and
mov
test
mov
cs
sub
pop
push
aam
mov
int3
sub
sbb
in
push
minps
jo
fldenv
rcrb
inc
ss
xor
lds
nop
mov
rorb
rorl
sahf
ljmp
mov
lds
das
xor
mov
adc
mov
push
xorb
cmp
test
lret
add
aaa
push
pop
int
ss
jo
orb
cmp
dec
cmp
push
mov
stc
mov
ja
fstps
pop
in
arpl
pop
testl
mov
cmp
jne
inc
or
adc
mov
jno
scas
push
jge
and
arpl
mov
les
fsubp
insb
lock
push
jecxz
or
push
movb
cmc
sbb
fptan
mov
sbb
or
dec
adc
ret
and
or
cltd
pop
cwtl
in
mov
dec
iret
pop
or
inc
lcall
inc
nop
xchg
dec
or
mov
pushf
mov
or
nop
or
and
pop
sbb
orl
push
push
inc
imul
cmp
pop
aaa
shr
mov
adc
jae
ror
sbb
shll
fmull
xchg
xchg
sbb
mov
sarb
testb
mov
cmpsl
inc
sbb
add
push
xchg
cmp
xor
rcl
cld
mov
mov
cmc
cmp
push
push
stos
nop
fwait
out
lea
flds
or
iret
add
lods
push
repz
mov
fdivr
pop
gs
push
insl
adc
add
push
mov
icebp
cmp
push
adc
xchg
inc
cmp
lock
addl
push
enter
bts
pusha
xor
bound
pop
js
aad
jno
push
lret
test
sub
or
jno
adc
adc
or
popa
inc
in
into
pop
xor
dec
mov
in
inc
pop
cmp
mov
cld
xchg
dec
xchg
outsb
ja
sbb
xor
adc
and
pusha
mov
sub
xor
mov
shr
inc
inc
sub
add
aaa
pop
ficoml
ss
divb
inc
fsubl
sub
xor
push
or
adc
cmp
mov
repz
and
push
or
icebp
xor
repz
leave
cmc
or
dec
dec
push
jo
add
cmp
push
xlat
pop
cmp
xchg
mov
mov
mov
mov
repz
inc
push
insl
fdivl
pop
adc
cmp
mov
xchg
cmc
pop
repz
imul
fnstsw
test
scas
jno
les
mov
push
lods
pop
pop
cmc
pushf
or
jle
orb
sub
fidivrl
ficoml
sbb
lock
ss
imul
pop
icebp
dec
and
xor
jl
pop
adc
enter
repz
bound
sbb
dec
mov
cwtl
cld
xchg
sbb
popa
outsl
ficompl
or
icebp
pop
inc
push
fdiv
aad
sbb
lcall
sub
pop
test
into
mov
jp
add
xchg
push
decl
sbb
mov
xor
mov
ds
sbb
inc
xor
stc
pop
add
repz
mov
or
add
pushf
addb
ret
ss
xor
mov
adc
sub
push
mov
push
cwtl
rorl
dec
shll
testb
pop
dec
lret
scas
mov
mov
push
pop
jecxz
test
fistl
inc
int3
iret
push
outsb
jl
sub
pop
mov
push
rclb
sub
js
mov
or
mov
adc
mov
pop
jl
aas
aas
jo
es
clc
lock
imul
dec
aam
adc
push
jecxz
jno
popf
fistps
jb
adc
test
push
test
pop
xor
xor
mov
cli
mov
inc
std
xor
mov
mov
fucomi
iret
dec
jecxz
dec
scas
test
jp
test
sbb
cld
test
xor
or
inc
bound
sbb
das
aad
xor
cmpsb
test
pop
sub
inc
mov
sbb
push
or
xor
loope
dec
dec
test
les
push
sbb
rcll
inc
aas
sarl
aad
mov
gs
mov
and
sbbb
sbb
adc
lds
icebp
mov
les
fdivs
push
inc
mov
add
fidivs
bound
lods
adc
fisttps
push
cmp
push
xchg
fistpll
xchg
xchg
lds
loope
pushf
into
xchg
dec
jae
inc
adc
push
xor
inc
roll
int3
pop
lret
push
jle
inc
scas
dec
push
jp
outsb
insb
add
sub
sub
adc
and
test
js
jb
add
mov
sbb
jg
into
test
dec
leave
inc
lcall
or
cmp
movsl
cmp
test
push
rclb
ja
xor
std
xchg
fnsave
outsb
cmpb
push
test
push
jae
inc
and
mov
scas
pop
xor
jns
test
enter
scas
aaa
lret
cmp
inc
dec
daa
mov
mov
mov
push
inc
daa
xchg
dec
inc
mov
pop
push
lret
jnp
jb
xor
pop
adc
add
mov
shl
pop
int
outsb
dec
jns
jmp
adc
loope
push
xorb
push
inc
or
adc
push
pop
test
inc
imul
adc
xchg
pushf
adc
dec
pop
nop
sbb
js
or
push
int
cmp
inc
sub
pop
mov
xchg
aad
inc
pop
jne
dec
rol
aas
or
cmovns
adc
push
cwtl
cwtl
cmpsl
sbb
test
ficompl
sti
cmp
inc
pop
fwait
movsl
or
sub
cmp
add
xor
add
cmp
sahf
popa
pop
pop
and
push
leave
mov
loop
push
xchg
cwtl
and
sub
push
loope
popf
mov
inc
add
push
push
jno
mov
inc
and
outsl
sbb
xchg
cmc
or
out
std
and
cmp
and
leave
loopne
mov
jnp
dec
pop
out
xor
sbb
mov
add
cmp
dec
in
dec
push
pop
xchg
mov
cli
lds
imul
xchg
int
sbb
mov
adc
pop
xor
shlb
xchg
popa
cmp
iret
lods
dec
xchg
fildl
rorb
push
xchg
daa
popl
fimuls
pop
adc
adc
adc
test
jecxz
inc
mov
notl
je
adc
push
add
cmp
iret
dec
mov
hlt
movl
sar
cs
fs
gs
fs
push
mov
xor
add
cld
jo
dec
push
addb
push
arpl
ss
dec
int
shll
scas
cli
xchg
imul
insl
or
add
adc
dec
or
sbbl
stos
or
adcl
aam
arpl
aaa
jae
mov
pcmpeqw
jae
mov
gs
add
out
cmp
pop
int3
cmp
xchg
sbb
sarl
inc
and
dec
inc
lea
stos
push
add
dec
jl
xor
push
addl
adc
test
xchg
xchg
mov
enter
xor
ja
ss
hlt
inc
pop
jne
arpl
inc
or
nop
mov
jle
rcll
jns
xor
rolb
cmpsl
xor
orl
imul
and
or
xor
clc
push
roll
ss
jns
jne
or
jns
jno
xchg
ss
test
add
mov
out
push
mov
add
mov
test
sub
push
xchg
adc
xor
pop
xor
mov
push
frstor
xor
add
or
adc
stos
cwtl
dec
shrl
stos
aas
mov
dec
iret
push
adc
mov
xor
cmp
call
shrb
dec
xchg
fnsave
inc
mov
rolb
pop
add
clc
dec
mov
cmp
rcrl
imul
xor
adc
dec
dec
dec
jnp
int
dec
dec
popa
inc
mov
pop
sti
or
outsl
pop
repz
pop
push
insl
lock
or
mov
mov
mov
faddl
pop
out
push
aaa
lods
test
push
dec
push
fmull
popa
out
xlat
jb
jns
ss
bound
cmpsl
movsb
and
cmp
test
and
dec
push
adc
mov
mov
xor
insb
jo
mov
sbb
movsb
inc
cmpsl
dec
add
mov
inc
repnz
add
jns
rclb
inc
jo
mov
mov
and
ds
out
fsts
outsb
arpl
cmp
push
sbb
jnp
mov
in
les
or
sub
inc
jno
mov
or
outsb
mov
adc
stos
adc
lret
adc
jge
into
inc
leave
mov
mov
cs
ljmp
push
fcompl
insb
into
in
xchg
adc
jge
jmp
pop
inc
dec
sbb
fmuls
mov
cmp
and
in
or
dec
lock
inc
in
pop
mov
out
xor
jnp
xchg
adc
daa
or
and
out
cs
fwait
or
xchg
pop
xchg
cmp
jno
add
fstpl
lret
test
and
enter
and
inc
outsb
sahf
cmp
xor
jg
or
mov
mov
in
and
xchg
sub
mov
out
xor
icebp
rorb
dec
jo
dec
cmp
pop
sbb
std
cs
pop
lods
adc
dec
movsb
fisttps
xchg
inc
cwtl
push
sub
je
push
adc
lods
add
jo
int
dec
aas
mov
jge
inc
inc
cwtl
jb
mov
inc
fildll
or
and
inc
into
lahf
lcall
or
mov
inc
out
ficomps
lret
cli
adc
sahf
rorb
mov
xchg
ds
dec
cmp
sbb
lods
push
ss
xor
or
xor
adc
shl
dec
jp
ss
jo
mov
sbb
test
fildl
or
mov
xor
iret
pop
mov
sahf
xchg
sub
stos
and
movsb
and
or
mov
pop
push
in
fnstcw
rolb
test
adc
lock
das
pop
mov
sub
mov
mov
xchg
sbb
mov
dec
jo
sbb
nopl
adc
rolb
fldenv
fnstenv
bound
cli
dec
cld
cwtl
adc
pop
into
sbb
add
movsl
jp
andb
xor
add
dec
shl
jb
or
imul
and
orl
and
insl
xor
dec
sub
mov
fstpt
xchg
cmp
pop
icebp
jecxz,pn
cmp
stos
mov
xchg
push
or
sub
sub
xchg
push
sti
jmp
adc
mov
mov
xlat
sahf
sub
repnz
and
inc
pop
in
sub
dec
mov
push
movsb
pop
icebp
sub
xor
das
push
adc
imul
xor
in
mov
out
add
call
lock
add
xchg
add
mov
int
sbb
lret
cmp
ret
mov
adc
pushf
test
inc
xchg
scas
xor
pop
stos
cmpb
mov
xchg
dec
addr16
and
dec
out
xor
dec
push
dec
dec
fiadds
imul
xchg
or
inc
paddsw
push
loopne
test
and
adc
xchg
dec
jae
cvtps2pi
sub
mov
pop
xor
dec
outsb
addr16
aaa
add
jmp
xor
scas
inc
or
inc
shl
call
sbb
jle
lods
mov
xchg
les
rolb
mov
insb
dec
rolb
nop
push
dec
or
in
out
mov
add
or
pop
mov
jmp
sub
xor
imul
push
xor
add
pop
or
ljmp
or
sbb
rcl
jecxz
xchg
jno
push
mov
daa
fildll
lea
xor
pop
outsl
inc
scas
adcb
out
and
jae
dec
les
outsb
sub
or
cmp
ja
and
add
leave
xor
shlb
aad
push
jo
and
imul
jge
les
add
int
inc
int3
sub
stc
fistps
shlb
xor
or
cmp
inc
sti
rorb
mov
push
insb
xchg
push
aam
shl
xchg
das
loope
xlat
loop
push
xchg
sub
push
xor
sbb
aam
rclb
sub
push
dec
mov
dec
out
push
sub
jp
insl
mov
or
jle
and
xor
adc
gs
push
jge
jne
push
lea
roll
or
sbb
outsb
testl
shrl
inc
test
cmpsl
arpl
xor
add
mov
lea
dec
xchg
pusha
mov
in
mov
xchg
push
push
int3
sub
imul
xchg
inc
inc
into
push
scas
lock
cltd
pop
lods
dec
lock
pop
repz
fldl
jae
cwtl
negl
sub
mov
and
aad
aas
push
dec
xor
push
repz
dec
adcl
jb
or
iret
mov
addr16
mov
or
test
or
jae
dec
mov
std
inc
jno
inc
hlt
movsl
cmp
shll
in
test
test
push
fwait
dec
cmp
adc
push
gs
sub
dec
into
push
in
dec
sar
mov
call
push
out
fdivs
mov
testl
xchg
shlb
das
sbb
push
push
or
inc
fneni(8087
adc
cli
xor
lahf
sti
fisttpl
int3
push
adc
push
movsb
mov
pop
dec
les
jae
stc
or
push
mul
aas
add
lods
sbb
pop
fcoml
rcll
pusha
jo
aad
repz
inc
cmp
inc
xor
ror
dec
lds
movsl
or
data16
fnstenv
jnp
push
cli
dec
and
cmp
loop
push
mov
cs
push
mov
inc
inc
aaa
int3
cs
nop
daa
cmp
push
adc
jo
ret
ror
fwait
gs
and
xor
in
push
stc
dec
cmpsb
imull
js
sahf
movl
mov
or
mov
jmp
test
mov
popa
or
adc
jecxz
out
idivl
ss
mov
pop
nop
jno,pt
push
inc
lods
xchg
push
insl
add
out
mov
push
rorb
sbb
inc
xchg
inc
mov
dec
int
fistpll
jnp
rep
jp
mov
stos
and
fs
mov
xchg
icebp
and
sbb
fnstenv
in
adc
dec
and
inc
adc
aaa
dec
popa
lret
das
aaa
imul
mov
stos
add
inc
bound
mov
xor
loopne
das
jecxz
incl
lods
cmpl
filds
sbb
movsb
sbbb
dec
pop
xor
add
dec
xor
sub
adc
sbb
inc
ficoml
push
cltd
mov
jno
lcall
push
fwait
xorb
das
dec
xlat
cld
push
data16
xorb
sub
pop
or
testb
cmpsl
lret
jecxz
jb
pop
fistps
sti
popa
stos
xor
test
lock
out
push
arpl
mov
or
lret
jne
xchg
fnsave
sub
shll
add
push
rcll
inc
dec
aam
add
push
push
mov
cld
adc
inc
push
outsl
int
lret
jno
mov
jo
lret
in
enter
fidivs
add
sub
dec
dec
into
rcrl
dec
enter
cs
arpl
imul
ds
cs
nop
cltd
cli
xchg
stos
lea
xor
xor
pop
aas
xorl
enter
adc
dec
push
stos
cmp
adc
aad
adc
bnd
cmp
sti
dec
ret
std
enter
loopne
or
add
imul
inc
xlat
arpl
xlat
dec
nop
ljmp
inc
shl
push
in
dec
in
mov
push
ficoml
repnz
push
lea
cli
inc
lods
jns
mov
mov
mov
push
popl
vunpckhpd
and
imul
mull
arpl
inc
add
xor
ds
add
movb
fdivrs
or
rcrl
jo
push
sub
ficoml
lahf
bound
pushf
std
rorl
push
jge
dec
jo
fyl2x
push
mov
lods
xchg
cmp
adc
xor
mov
mov
das
ljmp
jo
enter
push
ljmp
fcmovnu
push
addr16
lret
and
adc
inc
jecxz
pop
addl
cmp
push
ljmp
or
add
out
aam
dec
cmp
dec
push
aas
fldenv
mov
mov
ss
xor
inc
and
push
sub
scas
xor
in
xor
rsqrtps
icebp
mov
iret
mov
je
sub
push
adc
and
push
pop
pop
in
frstor
incl
repnz
or
iret
xorl
mov
mov
nop
dec
dec
fdiv
cs
int3
adc
mov
push
cld
mov
movzwl
cmp
int3
jne
mov
int
push
cmp
mov
add
mov
cld
push
and
lods
dec
into
gs
xchg
pop
jno
sub
fdiv
xchg
jg
inc
mov
mov
xor
je
mov
in
outsl
mov
cmp
in
stos
mov
or
arpl
xchg
and
add
dec
into
lret
frndint
ret
sbb
xor
fsubp
fcoms
mov
xchg
mov
xchg
pop
dec
jle
add
push
in
push
sub
sbb
imul
ret
dec
popa
sbb
lds
pop
pop
fstps
mov
inc
fisubrl
je
mov
push
jo
lret
movsb
inc
mov
dec
adc
xchg
ljmp
stos
adc
jo
les
jl
push
fildl
xchg
jnp
adc
sahf
fnstsw
inc
sub
or
xchg
push
sti
loope
adc
xor
dec
push
faddl
sbb
mov
mov
cmp
dec
adc
dec
cmpsb
push
adc
test
dec
xorb
dec
push
out
adc
xlat
daa
xor
cmp
jo
ss
es
sarl
in
xor
and
nop
test
jno
notb
adc
aam
shl
andnps
inc
xorb
push
test
push
std
jo
and
push
test
fs
insl
mov
sqrtps
sbb
xchg
pop
call
xlat
xor
xor
push
aam
push
mov
xchg
cmp
mov
or
daa
minps
mov
minps
xchg
push
daa
in
adc
fld
sbb
mov
je
sub
ja
cs
push
mov
add
shl
inc
idivb
mov
cmp
sbbb
lcall
mov
insl
sahf
mov
mov
pop
and
mov
faddl
out
std
cld
es
push
xor
jno
in
fidivl
push
shlb
into
ds
xor
dec
pop
push
lock
mov
ret
pop
xor
xor
and
add
cs
das
or
inc
sbb
xor
je
int
out
cltd
dec
sti
pop
inc
adc
loop
out
dec
sti
ds
and
jo
mov
sbb
jbe
out
roll
fisttpl
dec
xchg
jo
divb
jecxz
test
xor
mov
dec
xchg
push
sar
jecxz
mov
push
popa
xchg
cmp
push
mov
jb
inc
icebp
shll
outsb
push
inc
push
and
in
adc
jecxz
push
push
in
dec
aas
cmp
push
sub
stos
xchg
fld
sub
push
aam
push
scas
andb
stos
cmpsb
dec
add
pop
push
in
inc
push
or
cmp
sti
aad
jne
mov
iret
dec
push
mov
dec
dec
dec
int3
roll
scas
pop
lock
xlat
pop
jno
push
adc
popf
mov
dec
push
jo
mov
movsb
jmp
jmp
sub
or
jbe
jo
add
push
imul
xchg
jo
inc
mov
int3
fistpll
mov
sub
push
mov
xorb
inc
repz
jp
int
daa
cmc
les
fwait
stos
push
cld
ja
scas
xchg
or
xchg
add
sbb
int3
push
pop
cs
and
inc
iret
push
popf
dec
cltd
push
rcll
mov
rcll
inc
inc
and
push
inc
push
aam
push
pop
cmp
iret
adc
addr16
loope
repz
ljmp
pop
jne
jbe
enter
hlt
outsb
lea
fimull
js
jle
push
jo
decb
sbb
or
test
push
pop
add
dec
shl
cmp
lods
dec
cltd
push
push
cltd
je
sti
and
int3
push
xor
jp
ljmp
jae
adc
mov
pop
pop
or
add
data16
jo
sub
stc
inc
push
std
xor
int
pop
inc
into
movsl
pop
rcll
fildll
jo
std
cmp
nop
dec
rcr
in
or
iret
shrl
jmp
ficompl
dec
jbe,pn
fnsave
and
and
lret
out
outsb
jne
inc
fimuls
into
je
cmpsb
pop
push
dec
mov
xor
shl
in
and
clc
inc
xchg
lcall
jnp
pop
fucomp
lock
inc
push
inc
into
pop
icebp
adc
cmc
xchg
ds
jae
out
cmp
dec
xor
cltd
pop
loope
sub
adc
negb
cmp
dec
shl
sub
into
es
aad
mov
or
fcomi
mov
add
jns
int3
pop
out
xchg
dec
dec
negl
xor
xchg
inc
enter
filds
xchg
mov
in
insb
or
sbb
sbb
and
add
or
mov
outsl
aam
or
or
or
pop
push
out
inc
mov
loop
jae
dec
stc
sub
xchg
jns
aas
std
leave
xchg
imul
xlat
fnstcw
jp
std
jnp
testl
stos
and
sbb
repz
shrb
cli
es
push
push
xchg
in
mov
push
sbb
mov
jnp
dec
mov
dec
add
xor
push
adc
jae
jo
addl
hlt
mov
dec
stos
adc
shr
jo
divl
xlat
sub
or
ficoms
in
das
add
or
jb
dec
mov
mov
and
adc
push
mov
inc
in
shrl
lcall
repnz
shrb
xchg
adc
outsb
xor
icebp
xor
xchg
int
aam
daa
and
imul
pop
jo
int
aam
mov
xchg
inc
outsb
jb
inc
lcall
inc
pushaw
out
aas
iret
adc
mov
in
repnz
dec
loop
loopne
jo
cld
sub
sub
int3
add
dec
jg
addr16
mov
and
jbe
cli
pop
mov
add
movsl
scas
cmpsl
jg
and
jne
pushf
mov
out
sub
fnstcw
cli
xor
cs
and
push
out
cltd
js
js
lea
xor
xor
aad
ds
pop
cmp
xchg
xchg
cmp
sti
mov
jno
in
add
mov
jo
adc
pop
xor
sbb
mov
inc
adc
out
cli
inc
insb
adc
dec
jno
js
ds
arpl
flds
lods
pop
dec
pop
sbb
inc
sbb
push
fnstcw
outsb
fwait
pop
std
sub
inc
lret
inc
cmp
push
push
pop
adc
inc
jno
inc
insb
scas
or
xlat
jmp
push
movsb
loop
sahf
cmovge
dec
add
jbe
inc
xchg
sarb
cmp
jns
popa
fmuls
pusha
stos
xchg
dec
mov
xor
or
les
aas
jnp
adc
push
pop
jno
push
aam
or
adc
jge
test
shlb
push
jge
js
sbb
sbb
or
cwtl
jns
push
sbb
sub
orl
test
inc
cmp
ficoml
and
inc
push
into
in
aaa
outsb
mov
push
jmp
push
jno
gs
or
sbb
sbb
pop
popf
sub
cwtl
cmp
xchg
in
aaa
mov
dec
push
loope
inc
add
push
or
scas
test
scas
aad
jo
outsl
mov
int3
add
je
push
dec
or
loope
ds
push
xor
icebp
dec
cmp
and
jo
or
mov
xchg
pop
or
es
iret
loope
pop
cmp
adc
push
outsl
btr
filds
adc
cs
mov
je
bound
stos
jbe
adc
push
mov
lock
push
or
push
inc
or
sub
das
inc
adc
fisttpl
or
jle
xor
loope
imul
inc
fnsave
cli
lcall
push
scas
rorl
mov
jl
fcmovne
ljmp
mov
jmp
lds
stos
mov
xor
repnz
dec
insl
push
or
stc
xor
in
fcomps
push
ja
sub
cmp
xlat
rcll
pop
mov
cmp
addr16
mov
adc
dec
mov
cmp
rolb
lahf
ret
sarl
and
push
sbb
jmp
test
scas
push
inc
jae
outsb
adc
jmp
jnp
mov
sarb
icebp
int
jo
add
or
fmull
popa
xchg
data16
pop
add
mov
rcr
add
bound
shl
test
fisubl
cmpsl
das
inc
subb
in
fmul
fstpl
mov
in
loope
inc
int3
adc
js
fs
imul
aad
popa
cmpsl
std
xor
mov
xlat
mov
pop
fcoms
jno
ss
adc
pop
fldl
sti
mov
cmp
in
cli
jo
and
adc
test
iret
into
aam
lds
rclb
ret
adc
mov
push
sti
xor
push
cltd
mov
ja
push
xor
int3
xlat
test
outsl
inc
or
jne
inc
add
mov
pop
or
mov
fnstsw
push
xchg
mov
jo
stos
sbb
mov
fnstenv
pop
adc
jmp
jo
cmc
xor
cmp
inc
ss
iret
cmp
dec
aaa
sbb
mov
test
inc
mov
push
ret
push
push
jecxz
je
xor
dec
pop
stos
jb
out
or
insl
nop
or
out
leave
data16
dec
and
pop
adc
enter
inc
ret
mov
xchg
sbb
or
pop
outsl
test
mov
imul
push
rolb
test
in
shlb
stos
inc
or
pushf
fs
xchg
shrl
xchg
sbb
xchg
mov
mov
out
inc
lcall
sbb
or
lods
les
in
mov
xor
test
pop
push
push
jno
insl
mov
psubw
cwtl
nop
imul
es
aam
rolb
cmpsl
inc
fadd
sbb
repz
jbe
filds
inc
sub
mov
adc
dec
pushf
je
stc
ja
sub
push
jne
jne
and
jbe
xchg
lret
sar
test
incl
aad
mov
jo
adc
sbb
testb
dec
cs
sbb
mov
pop
daa
jbe
sarb
pslld
push
sub
lds
cmp
dec
out
push
ret
ss
jnp
pop
cwtl
jae
shlb
fstpt
js
stos
adc
cmp
scas
cmpsl
jmp
dec
cmpsl
xchg
pop
out
push
adcl
je
cmp
add
aas
pop
es
stos
mov
xchg
inc
cwtl
aas
fisttpll
js
aam
int3
iret
mov
mov
mov
pop
adc
adc
or
rol
cmp
xor
rorl
and
sub
out
xchg
mov
test
cmp
and
leave
push
mov
xor
popf
icebp
add
pop
xchg
stc
mul
shr
xchg
mov
inc
push
mov
lods
adcl
push
push
xchg
dec
or
rolb
fisubl
ficoms
inc
xchg
jae
pop
clc
aam
cld
adc
pop
push
xchg
loope
rcll
sbb
dec
dec
or
cmp
shlb
pop
xor
sbb
mov
stos
xor
inc
pop
jns
xchg
dec
jne
pop
repnz
aad
insl
aaa
jle
outsl
rcl
frstor
xchg
in
or
pop
xchg
pop
js,pt
inc
sbb
jns
imul
es
insb
int
out
call
cltd
pop
pop
popa
loope
fnsave
xchg
into
xchg
xchg
out
repz
xlat
pop
repnz
pop
leave
aam
pop
pop
push
sti
arpl
lret
jo
pop
xor
sub
inc
pop
test
inc
cmp
int
xlat
lock
dec
adc
addr16
enter
pusha
repnz
shrb
lock
dec
ja
ljmp
into
xchg
rclb
iret
test
push
shlb
js
cs
pop
pop
int
dec
fldln2
test
push
jno
cmp
rolb
dec
aad
xor
xchg
mov
cmc
lret
clc
loopne
int3
cmpsl
lods
pop
stc
popa
jne
or
dec
push
add
aas
aaa
clc
shl
jns
fistl
popa
push
add
in
mov
pushf
js
xchg
filds
or
push
inc
repz
inc
fimuls
bound
cmp
adc
mov
pusha
ljmp
dec
dec
sbb
mov
jo
aad
das
lods
ret
scas
loop
aam
outsb
scas
adc
dec
push
pop
lea
jnp
jb
popf
jg
sarb
jge
mov
jne
data16
arpl
push
push
jp
test
sub
imul
mov
dec
mov
jl
dec
dec
add
or
dec
adc
push
push
or
or
scas
jmp
dec
sbb
mov
mov
sub
xchg
aas
mov
or
push
loop
inc
pop
pop
daa
xor
sahf
sub
dec
adc
or
xchg
xor
xchg
fsubl
push
adc
xor
and
bnd
fnstcw
mov
push
in
ret
leave
push
push
mov
adc
or
cmpsl
mov
xchg
adc
push
sub
sbb
push
arpl
push
pop
in
xor
and
xor
ret
stos
xor
stos
dec
mov
dec
mov
mov
inc
cmp
add
cltd
jns
adc
adcl
addl
lea
cmp
or
cmc
or
push
and
pusha
xorb
xchg
cmp
fldenv
push
incl
xchg
inc
subl
popa
pop
lcall
aad
push
dec
lret
and
gs
mov
mov
sti
inc
mov
pop
punpcklwd
fisubs
sti
leave
xlat
pusha
test
adc
lcall
mov
add
fimull
rcll
sbb
pop
cmp
clc
jo,pn
mov
mov
push
add
and
and
or
ds
pop
mov
stc
test
sbb
outsb
shl
cs
dec
jo
dec
sbb
icebp
sub
jo
adc
outsb
jae
xchg
dec
jo,pt
cs
jl
icebp
sub
push
cmpsb
inc
nop
das
cmp
mov
cwtl
decl
ss
mov
cwtl
popf
cmp
mov
ss
cmp
inc
mov
inc
push
dec
outsb
imul
daa
pop
sbb
aad
arpl
xor
shl
outsl
or
xor
pop
fdivl
dec
or
jle
sub
push
out
pop
or
and
inc
jo
stos
sub
or
test
data16
cmp
push
inc
repz
mov
jnp
scas
sub
dec
xchg
dec
into
jmp
push
inc
shrb
jl
jnp
jmp
mov
push
int
aam
inc
push
jmp
sbb
jno
xchg
inc
jo
dec
mov
xor
cwtl
cmp
push
insb
sub
ja
outsl
pop
xor
pop
sbb
inc
or
out
dec
xlat
xchg
into
hlt
push
dec
bound
jmp
and
pop
fidivl
dec
cwtl
and
jne
jno,pn
xor
clc
sub
add
inc
mov
inc
adc
inc
fmul
and
push
mov
jne
fisttpl
push
sbb
add
push
outsl
loopne
or
fdivrl
xchg
int
mov
inc
mov
push
or
pop
rcrl
cmp
lock
test
pop
repz
insb
push
cs
repnz
divb
push
inc
sbb
shlw
maskmovq
adc
cmpsb
rorb
push
push
icebp
mov
loopne
push
push
arpl
inc
in
push
jnp
sub
jmp
sub
mov
int
sahf
pop
add
cs
enter
repz
push
std
jns
les
rcll
call
fidivl
dec
mov
out
out
xchg
int
or
push
ss
dec
dec
mov
enter
jno
add
repz
out
adc
push
inc
outsb
addr16
cmp
div
inc
jecxz
ret
inc
scas
lds
cmp
into
sti
fcomps
nop
stos
in
pop
loop
adcl
mov
cmc
jl
cmp
cltd
sub
fidivrs
cmp
xor
adc
ds
push
dec
jmp
adcl
inc
movsl
inc
mov
add
adc
imull
divl
aam
jne
int3
jns
mov
dec
xchg
mov
dec
and
and
fdivrp
loope
pop
rolb
shrl
jo
cmp
cwtl
lcall
lret
gs
int3
adc
push
les
les
and
xchg
fxch
add
ja
es
jl
repnz
js
loopne
lcall
leave
xchg
cmc
ds
push
cmp
cmp
imul
rcr
jmp
pop
xchg
sub
ds
xor
cmp
push
cmp
stos
fs
lcall
adc
dec
pop
addl
out
mov
or
mov
leave
mov
jns
cmp
or
fisttpl
push
out
into
push
fnstsw
xchg
mov
ret
mov
pop
or
push
loope
push
hlt
repz
push
or
inc
pop
rorl
adc
pop
dec
aaa
xlat
sti
and
inc
inc
aad
or
pop
xor
cld
pop
inc
gs
push
jns
xchg
lock
push
push
clc
dec
adc
cwtl
or
xor
dec
std
sbb
lahf
xor
push
mov
and
xchg
push
xchg
push
mov
pop
xchg
dec
lcall
sbbl
in
push
mov
outsb
and
inc
jo
add
xchg
xchg
add
shl
push
out
jno
add
cmp
icebp
jo
xor
push
inc
jno
mov
jl
jo
jo
sbb
js
lret
je
adc
test
xchg
adc
gs
cli
mov
fistpl
push
dec
aaa
std
es
dec
cs
xchg
jne
into
push
push
sbb
stos
inc
add
loope
subl
add
test
add
insb
gs
repz
push
add
push
fildll
jp
lods
adc
fidivrl
fs
add
mov
mov
jp
lds
adc
mov
pop
pushf
outsl
xchg
jge
enter
xchg
bound
arpl
enter
and
cwtl
into
lcall
dec
fnstenv
adc
cmp
in
push
inc
push
jo
sbb
push
sar
test
push
and
fwait
mov
sahf
scas
push
sbb
fdivrs
insl
fsincos
pusha
xchg
push
enter
inc
iret
enter
ds
xor
int
inc
nop
dec
add
lods
fdivrl
aaa
jp
xorl
mov
pop
mov
adc
movsl
rolb
push
xchg
lahf
sbb
into
sbb
adc
cwtl
js
enter
add
call
pop
rcll
and
inc
imul
jmp
lret
and
push
int3
or
dec
dec
adc
inc
jo
cmc
cmp
addr16
push
sbb
int
in
cmp
popf
xchg
inc
sub
xor
pop
and
push
dec
ja
xchg
xchg
sbb
push
mov
rcrl
or
mov
sbb
push
lret
jge
pop
mov
nop
cmc
push
jle
lahf
jge
ret
xchg
in
shll
xchg
adc
aam
leave
xchg
adc
les
inc
hlt
shrb
popf
out
mov
push
int
cwtl
popa
loopne
mov
pop
clc
mov
mov
daa
lcall
or
sti
or
mov
xchg
aas
or
cs
xchg
sub
adc
std
aaa
pop
pop
pop
notb
adc
cmp
inc
arpl
sahf
adc
imul
cwtl
cmp
js
xor
sarl
add
scas
adc
les
jp
shlb
sub
cmp
inc
ret
les
inc
xor
xor
dec
loope
inc
popa
xchg
lahf
roll
xchg
xchg
jno
push
xchg
imul
mov
mov
in
dec
cmc
bound
repz
ss
ror
xor
cmp
out
lret
xchg
cltd
les
out
cli
push
dec
mov
inc
in
pop
dec
cs
mov
dec
out
pop
sub
pop
pop
or
jge
jns
jne
jno
jae
ret
jns
xchg
and
dec
dec
lea
cmp
mov
enter
sub
jno
pop
fiadds
and
mov
je
inc
sub
sbb
lods
mov
test
sub
adc
dec
dec
bound
mov
add
and
fstpt
insl
mov
or
rolb
mov
fwait
dec
imul
addl
push
sbb
lcall
adc
inc
jo
inc
das
lea
in
and
jmp
nop
xchg
xor
or
sub
push
and
jnp
cmp
test
sbb
cmp
jnp
adc
in
popa
loopne
jno
jp
lahf
adc
les
sub
or
in
and
pop
dec
sub
cli
xor
mov
sub
add
xchg
sub
sbb
mov
pop
sub
mov
sub
lahf
cmpsb
add
push
mov
cmp
sub
out
add
jae
jno
jnp
jo
mov
or
sub
and
dec
lret
roll
inc
jo
dec
testl
clc
mov
inc
popl
push
add
cmp
adc
or
mov
sub
pop
adc
adc
cmpsb
dec
sbb
adc
repz
mov
int3
daa
lds
dec
int3
xor
or
jnp
xchg
inc
popf
lcall
inc
shl
sti
push
add
and
aad
lds
leave
push
fnstenv
loop
leave
push
popf
fidivl
pop
pop
js
push
cld
mov
sbb
cmpsl
call
scas
mov
push
sub
cmpsb
inc
jmp
mov
into
adcl
sub
jmp
lods
inc
lret
adc
cmpsb
mov
xor
hlt
pop
ficoml
je
shlb
pop
cmpsb
pop
shrb
into
lods
sbb
xchg
in
push
out
or
sbb
xchg
in
mov
pop
xor
lahf
cmp
in
in
leave
les
sbb
shll
rclb
in
inc
out
outsb
fs
pop
cli
dec
lea
faddl
pusha
icebp
push
lea
ss
xor
pusha
addr16
push
xchg
pop
and
adc
mov
pop
inc
scas
sub
cmp
loopne
gs
fldenv
jmp
xchg
aam
lods
cwtl
inc
aam
cs
xor
sbb
mov
ret
dec
dec
es
movsl
sbb
push
popf
mov
fildl
mov
int3
push
add
sub
out
push
outsl
mov
pop
jb
enter
not
dec
mov
cltd
push
pop
mov
mov
sarb
sbb
add
cwtl
iret
adc
subb
or
mov
push
sub
imul
cmc
jbe
jmp
sub
or
shrl
xchg
xor
pop
jbe
jp
rcll
sbb
sbb
in
mov
into
push
arpl
sbb
lcall
push
repz
lret
adc
add
add
push
push
xor
adc
and
or
xlat
adc
cwtd
and
inc
ss
push
xchg
jl
xchg
aam
push
fwait
jl
imul
outsb
sub
rorb
jle
gs
dec
inc
into
cmp
xchg
xchg
notl
pop
mov
pop
popa
iret
movsl
cmp
or
aas
adc
mov
ficomps
mov
cmp
adc
js
mov
fisubl
aas
stos
nop
faddl
xor
dec
rorl
mov
cmp
leave
cmc
add
stos
and
pop
pop
movsl
mov
insl
pop
mov
and
jp
inc
test
xchg
mov
jne
push
xchg
lds
inc
rorl
jno
mov
push
inc
push
cwtl
pop
xchg
fisubs
sub
fwait
rorb
das
mov
sbbl
cmp
push
fmull
in
inc
pusha
cmp
sub
mov
cmp
xchg
ja
gs
test
fwait
or
jne
rclb
in
aam
frstor
add
ja
arpl
pusha
mov
cmp
adc
cmpsl
lds
xchg
inc
add
dec
xchg
push
mov
cli
pop
f2xm1
dec
fdiv
jb
sbb
imul
dec
fbld
inc
xchg
dec
push
fcompl
push
leave
rorl
push
sub
cmp
mov
push
push
movsl
enter
arpl
sub
mov
cs
shlb
mov
gs
and
ss
iret
test
fldenv
add
aam
or
pop
rcll
sub
mov
inc
fnstcw
in
pop
rorl
dec
addr16
adc
or
fldcw
gs
xor
ja
mov
iret
rclb
fdivrs
inc
aam
sahf
dec
xor
imul
inc
out
cmp
imul
sbb
mov
push
add
cwtl
push
test
lock
adc
je
jo
mov
iret
push
push
pshufw
sbb
lcall
scas
sti
and
adc
das
push
or
in
push
mov
lock
ja
outsl
bound
push
add
fdivs
cmc
dec
shrl
loopne
or
in
jmp
fstp
shl
leave
and
outsl
mov
xor
or
call
ss
loope
faddl
xor
mov
pop
mov
je
xchg
mov
lods
fucomi
int3
lcall
push
push
ret
rcrb
xchg
mov
adc
pop
ja
int3
lret
shrl
or
add
repnz
stos
jge
outsl
nop
inc
and
inc
xor
push
push
mov
mov
sbb
add
mov
add
jno
test
xchg
or
cmp
fimull
xchg
xchg
rcll
cltd
push
mov
mov
loopne
es
test
sbb
inc
ds
fisubrs
ds
es
movsl
push
mov
mov
pop
cmp
lahf
hlt
inc
jge
mov
push
aam
jns
mov
in
pop
sbb
mov
pop
pop
inc
push
dec
adc
mov
and
jae
je
jo
dec
pop
or
inc
repz
aaa
push
aaa
aam
mov
dec
adc
or
ds
xchg
cmp
jo
add
mov
xchg
inc
push
mov
xor
pop
shrl
xor
push
jecxz
inc
adc
dec
test
pop
mov
cmp
adc
sbb
and
xor
test
xchg
and
sbb
xor
imul
jno
nop
add
jns
cmp
ret
or
jo
es
add
sub
rcrb
or
clc
jns
or
stos
or
inc
inc
dec
lret
jo
outsb
and
fmuls
addl
mov
or
aaa
dec
pop
or
adc
lds
shl
xchg
dec
mov
pop
and
jnp
cmc
push
xor
aam
jge
inc
jp
mov
cmp
xchg
lock
lods
sahf
dec
sbb
insl
loopne
cmpsb
shrl
xor
jo
dec
pushf
xchg
push
es
pop
in
jle
cmp
shll
adc
add
nop
push
push
push
cli
repz
fisttpl
push
js
xchg
ss
cld
fbstp
mov
adc
xchg
pop
mov
lahf
scas
pop
push
ret
mov
inc
push
rcr
aam
fchs
and
pop
pop
cmp
inc
popa
test
sbbl
adc
inc
out
inc
sub
outsb
mov
inc
jl
xlat
das
inc
incb
cmc
jo
cmp
or
daa
call
mov
push
add
push
les
mov
xor
xor
ds
into
xor
push
xchg
cmp
mov
sbb
adc
add
and
cmp
ds
lock
push
ja
adc
sub
mov
ret
mov
loopne
lcall
or
int
in
jno
out
xor
xchg
adc
std
dec
push
into
sbb
sub
xchg
add
mov
cltd
cld
divb
jg
mov
jno
add
dec
pop
outsb
xchg
jno
call
xor
ret
nop
jge
pop
jne
mov
dec
jne
mov
push
mov
data16
movsl
jno
sbb
or
mov
lds
jbe
add
cmp
add
inc
insb
daa
movb
sarl
scas
stos
orl
pop
hlt
sub
or
out
push
mov
cmc
inc
imul
aam
push
pop
repnz
jns
stos
push
inc
rcpps
int
lcall
add
mov
enter
es
and
xchg
int3
mov
insl
cltd
mov
jecxz
xchg
and
push
lea
xor
test
cltd
push
ret
shlb
add
inc
pop
ja
xchg
or
jbe
inc
in
stos
mov
sbb
hlt
adc
test
cs
sarl
pop
inc
ret
sub
sub
jbe
sbb
popa
repnz
sbb
push
ret
xchg
in
fs
stc
insl
add
pop
je
cmpsb
inc
cs
out
gs
into
insl
mov
mov
fsub
dec
lret
adc
mov
xorb
mov
push
sub
push
add
and
push
add
popa
mov
iret
push
lret
add
lret
jmp
jno
lahf
insb
dec
aam
stos
lret
xor
lea
popf
or
xor
xchg
leave
sub
lock
addr16
fdivl
int3
mov
adc
repz
push
dec
inc
leave
dec
inc
xchg
dec
cmc
inc
push
jo
scas
lea
leave
or
ror
jae
xor
aam
push
stos
push
adcb
push
stc
fimull
inc
lock
test
dec
and
test
pop
xor
incl
push
stos
inc
dec
xor
je
and
bound
pop
nop
push
push
stc
inc
pop
lcall
cmp
lahf
inc
fsubrs
dec
push
clc
add
mov
or
mov
nop
sub
dec
ret
aad
aam
push
xchg
fwait
pop
dec
imul
jge
test
hlt
adc
sti
in
push
inc
in
xchg
xorb
pop
fnstenv
arpl
ds
bound
outsl
mov
inc
sbb
sub
jecxz
pop
inc
sub
inc
std
or
xor
add
pop
out
loope
adc
cmp
test
fiadds
inc
pusha
gs
jns
jge
lea
insl
and
cvtps2pi
adc
rorb
xchg
cmp
jg
cmp
jae
or
push
loope
add
mov
mov
mov
es
movsl
pop
pop
mov
xor
adc
sbb
mov
je
dec
or
xor
xor
fstps
mov
ret
pop
mov
cltd
adc
mov
insb
dec
xlat
and
arpl
pop
adc
dec
sbb
insb
in
dec
push
js
jo
push
push
or
lods
pop
subl
daa
xchg
lock
push
add
andl
push
xor
in
inc
repz
ss
inc
sbb
sub
in
jmp
adc
shlb
dec
mov
jmp
dec
icebp
push
xor
push
cld
dec
cs
cs
push
mov
fisttpl
jp
fcomps
jmp
dec
pop
inc
add
xor
add
adc
fcoml
or
jg
dec
arpl
test
mov
xor
dec
xchg
fsubl
mov
mov
mov
sub
pop
jge
mov
mov
notb
dec
stos
fwait
mov
cmp
jo
cmp
sbb
iret
push
sub
stos
adc
or
scas
jne
out
cvtps2pi
ret
add
inc
push
outsl
hlt
mov
dec
mov
dec
bound
add
movsb
fistpl
fwait
and
xor
out
xchg
mov
sub
fdivr
sbb
dec
lea
xor
add
aas
push
cmp
dec
inc
aad
insb
dec
jl
xor
ljmp
mov
in
loop
ret
mov
xchg
sub
push
ret
inc
shl
inc
fnstsw
incb
push
fsubl
in
scas
cmp
icebp
add
cmc
in
adc
dec
outsb
jp
mov
push
lock
mov
repz
sbb
xorl
sti
jg
xlat
cmp
mov
rorb
cs
pop
push
dec
arpl
mov
and
xchg
test
mov
je
aad
inc
cmp
mov
dec
or
xor
daa
gs
in
sub
in
mov
into
decb
lea
loope
ja
cmp
adc
pop
js
fnsave
dec
ds
xchg
daa
push
aam
inc
push
xchg
jo
xchg
ss
nop
sbb
adc
cmpsl
mov
jg
shl
mov
dec
bound
jo
incb
and
fists
rorl
fldt
out
xlat
jbe
fcoms
cmc
push
add
sbb
cmp
fnstenv
xchg
outsl
push
stc
ss
pop
enter
fimull
repnz
clc
inc
sub
scas
fisttps
in
pop
dec
in
add
es
cmp
xchg
inc
pusha
dec
pushf
sub
data16
and
sub
mov
fstp
push
cs
das
push
push
es
inc
aam
sbb
xor
push
cmp
xchg
out
rorl
and
xor
and
ret
dec
into
mov
push
subl
mov
or
mov
sub
mov
mov
test
inc
dec
add
xlat
push
cmp
jns
gs
cmp
pop
insb
inc
pushl
jge
popa
push
inc
stos
inc
mov
fstl
mov
xor
out
ja
inc
sub
mov
loopne
shlb
ret
fsubrs
ss
jo
sub
mulb
inc
jg
mov
pop
dec
cmp
dec
inc
icebp
std
pop
or
sbbl
flds
jbe
pusha
sbb
and
cmp
cmp
mov
icebp
push
ss
outsl
mov
dec
in
sbb
movsb
cld
or
dec
iret
dec
inc
loope
sbb
mov
sbb
xor
xchg
std
lea
cmpsl
and
jb
xor
jle
push
mov
into
aad
xchg
push
dec
push
aas
sbb
pop
inc
ja
push
sub
ja
sub
imul
lret
mov
into
sub
cltd
cld
jg
in
dec
jp
test
xchg
cmp
adc
sbb
aaa
pushf
stos
xchg
dec
int3
fiadds
in
aad
dec
adc
cmp
sbb
test
mov
xchg
add
mov
dec
in
mov
xchg
push
xchg
aas
fisttpl
ret
adc
enter
jno
inc
dec
xor
inc
leave
push
ror
clc
sbb
dec
mov
adc
test
test
mov
icebp
adc
mov
push
or
fdivrl
cltd
push
cwtl
jae
int
mov
lcall
xor
sub
xorl
adc
outsl
dec
dec
jge
add
push
mov
test
stos
adc
push
mov
sti
inc
insb
mov
mov
shrb
popf
sub
popf
sbb
or
cmp
fstpt
stos
enter
jno
test
or
mov
jno
out
jo
cs
sahf
mov
mov
push
xchg
xchg
lods
push
fisttpl
xor
add
inc
cli
cltd
xlat
jo
inc
xchg
dec
pop
pop
mov
fadds
dec
es
movsb
jg,pt
xchg
sbb
sub
jp
push
mov
movsb
xchg
pop
sbb
dec
cmpl
xchg
mov
mov
pop
in
sbb
rorb
sub
dec
push
shlb
and
push
into
and
or
mov
push
adc
add
les
push
push
cmp
inc
aam
imul
xchg
loop
into
lahf
ja
and
das
dec
jl
dec
jns
fimull
aas
movsl
fs
xchg
inc
dec
adc
dec
jge
dec
cs
inc
cld
aas
leave
stc
pop
fistl
jno
leave
mov
jl
sub
int3
adc
sbb
jae
lds
xchg
aas
xchg
dec
loop
leave
dec
sbb
ret
jne
or
lcall
mov
lds
enter
xor
sbb
or
xchg
jecxz
fcmovne
push
push
in
movsl
xor
inc
cs
push
mov
bound
rolb
jo
pop
in
push
or
push
lea
jae
leave
out
sub
jo
jns
outsl
or
jnp
cs
cld
dec
ja,pt
fstpt
pop
std
jnp
dec
inc
jne
jge
ja
ret
movsl
or
outsb
je
push
jg
jno
push
dec
shrb
sbb
cmp
outsb
xor
sub
mov
xchg
inc
out
xor
lret
and
in
jno
xchg
inc
cmp
and
ret
jg
mov
pop
adc
int3
test
mov
dec
pop
pushf
mov
jne
cmp
dec
popa
jmp
cmp
xor
xchg
adc
icebp
mov
mov
dec
sub
xchg
push
push
add
int3
jecxz
sbb
dec
jno
push
jbe
adc
add
shlb
scas
mov
sub
sub
shll
ret
aaa
pop
push
jno
mov
xor
push
in
icebp
rcrb
xor
pop
or
cmp
pop
jns
cmp
in
shrb
cmc
push
pop
mov
scas
mov
xchg
loopne
stos
or
xchg
pop
mov
inc
sub
ja
sbb
fisttpll
pop
out
in
lock
adc
clc
mov
inc
inc
dec
push
insl
stos
dec
jo
mov
adc
dec
lahf
mov
jmp
test
mov
jno
idivb
mov
sub
xorl
jno
repz
out
mov
sarb
pop
pop
cltd
imul
push
mov
mov
sbb
test
inc
xchg
push
xchg
shrl
push
xchg
adc
pop
jo
and
ficoms
xchg
jno
and
jmp
int3
hlt
and
repnz
test
or
xor
ljmp
dec
mov
pop
adc
ss
push
and
mov
enter
push
test
and
sub
lret
rolb
xchg
inc
dec
into
or
or
and
and
icebp
lods
jno
xchg
dec
jne
fistps
iret
fidivs
sahf
into
gs
repnz
jecxz
xor
xchg
ja
mov
inc
lods
cli
push
cmp
aaa
jle
mov
shrl
in
bound
lds
ds
test
daa
inc
sub
add
or
xchg
int3
icebp
nop
sbb
fidivrs
pusha
dec
jo
dec
push
ds
lret
out
incb
mov
inc
into
and
rcrb
shll
sbb
rorl
es
push
push
jo
mov
outsb
punpcklbw
pushf
jae
sbb
fcomps
out
jecxz
mov
sub
test
inc
mov
xchg
inc
testb
mov
mov
sub
in
xor
push
ja
in
push
jno
icebp
mov
nop
jmp
jo
jne
or
push
ja
repz
push
in
or
outsb
jns
xor
das
inc
inc
imul
sarb
clc
or
mov
test
jo
sbb
mov
int
mov
dec
xor
fcmovu
push
fsub
adc
fbstp
pop
xchg
jo
dec
adc
data16
addr16
sub
sub
pop
pop
dec
repz
and
pop
push
mov
sub
push
sarl
icebp
mov
mov
mov
xchg
cmp
jo
sub
dec
inc
jmp
push
adc
mov
negl
pop
test
cld
je
xor
add
inc
aad
out
loop
lcall
adc
mov
xchg
or
sbb
imul
xor
into
bound
push
or
sub
outsb
or
pop
movb
int3
or
push
cli
pop
xchg
lret
push
add
mov
aad
xor
mov
ror
dec
push
push
adc
fldl
in
sub
sbbb
rorb
pop
jle
cmpsb
cmc
jnp
js
sbb
cmp
xorl
xor
int3
inc
jl
push
xchg
popf
push
and
js
rorb
scas
das
pop
cmp
in
aam
fistpl
jnp
pop
dec
shlb
xchg
sbb
dec
sub
popa
inc
stc
pop
and
bound
aas
nop
out
shll
xchg
andnps
add
pushf
push
push
jno
outsb
pusha
lcall
imul
adc
call
sub
jns
into
or
addb
outsl
adcb
pop
push
and
addb
add
fisttpll
mov
jb
in
popf
into
fwait
add
mov
insl
ret
daa
imul
hlt
movsl
std
jne
inc
stos
mov
lds
cld
mov
push
push
movsb
sbb
ja
cmp
jge
js
shrb
jns
jne
stc
lods
shll
or
icebp
sbb
xchg
fmul
sbb
mov
jmp
push
arpl
sub
je
mov
pop
and
xchg
or
pop
fsubl
inc
icebp
cmp
pop
enter
sub
cld
test
add
mov
inc
lds
mov
into
pop
leave
icebp
push
mov
pop
or
outsb
mov
shlb
push
xor
adc
add
mov
jo
xor
sub
test
xchg
inc
aaa
dec
rcl
xor
xor
gs
pusha
add
js
data16
or
std
mov
imul
push
cvtps2pi
leave
jae
inc
cli
std
mov
lods
pop
or
int3
cs
out
bound
dec
sbbl
jno
repnz
aaa
dec
iret
push
cmp
jno
push
roll
sbb
loope
mov
insl
xchg
sahf
mov
call
sub
loopne
popf
loop
and
add
fildl
push
jg
cltd
mov
das
rcrl
icebp
mov
or
push
shlb
xor
sub
loop
push
mov
outsb
jb
in
mov
test
push
shr
lock
sub
addr16
or
aas
icebp
call
cmpsl
std
imul
aad
xor
inc
test
adc
xor
push
lret
je
cld
push
imul
rclb
dec
sbbl
lahf
pop
jmp
in
fwait
add
fwait
sarl
popa
rol
pop
and
jp
ret
push
leave
inc
xchg
push
or
das
rcrl
daa
out
imul
cmc
cmp
enter
xor
inc
jo
rolb
jmp
popa
inc
push
mov
mov
push
push
xor
cmc
xchg
sbb
push
mov
xchg
cmp
push
imul
clc
in
push
lahf
pop
push
cwtl
orb
pushf
xor
adc
xor
or
pusha
rclb
jb
push
push
or
ds
hlt
in
cmp
in
jnp
cmp
mov
in
inc
push
stos
stos
add
pop
jecxz
cmc
or
loop
mov
push
pop
mov
out
mov
lahf
inc
cmp
dec
repnz
fwait
shl
push
jecxz
ds
imull
dec
pop
les
cmp
nop
dec
mov
pop
lcall
aam
cmp
xor
jne
lods
dec
fsubrs
dec
loope
enter
hlt
pop
cmp
ror
enter
adc
cwtl
jns
repz
cmp
js
ja
jbe
push
mov
cmp
mov
mov
mov
ss
or
jl
dec
or
push
pushf
into
sbb
addr16
adc
cltd
repnz
jl
rcr
ss
lret
pop
dec
ds
aad
es
sbb
xchg
inc
xor
or
sbb
sbb
pop
ss
mov
dec
mov
aam
mov
adc
stc
addr16
sbb
mov
imul
sub
jno
push
xor
mov
outsl
das
inc
int3
mov
or
pop
je
in
sub
lods
cmp
add
push
xor
xor
lret
or
movsb
rorl
sahf
xlat
dec
scas
pop
pushf
mov
cmp
pop
pop
pop
add
sub
pop
xchg
push
dec
cmpsl
push
mov
in
test
lock
popf
js
jp
push
jg
inc
sbb
lock
cli
adc
mov
lret
xor
and
dec
xor
out
pop
or
cli
dec
adc
mov
inc
dec
push
out
into
jns
orl
in
mov
popa
sub
loope
cmp
xor
push
dec
pop
or
leave
sub
xor
cmp
ja
pop
push
push
push
mov
je
inc
cltd
cmp
inc
loopne
lds
cmp
adc
lock
dec
daa
adc
adc
dec
aaa
inc
adc
xor
xchg
dec
mov
sbb
adc
enter
adc
shlb
push
pop
lret
js
nop
rorb
sbb
push
dec
popa
rorl
dec
shlb
scas
push
cmp
inc
and
stc
aaa
ss
or
fistpll
stc
pusha
sub
push
inc
push
add
shrb
push
inc
dec
inc
into
mov
push
mov
cmp
xchg
sub
push
inc
dec
adc
addr16
loopne
adc
int
sub
xlat
push
rcr
cmp
and
push
jns
in
ja
cmp
adc
sbb
or
lock
pop
rorb
cwtl
jmp
mov
cmpsb
dec
cmp
aam
cmp
mov
dec
repnz
or
repnz
jbe
cli
aam
xor
iret
cltd
div
and
dec
jmp
pop
sbb
add
dec
or
shll
push
sub
loope
icebp
inc
push
addr16
inc
inc
push
or
test
inc
pusha
inc
sbb
bound
sbb
inc
ror
mov
cmc
inc
push
lret
pop
aad
cmp
xlat
cmp
fldenv
push
ss
jge
aas
mov
sub
dec
fstp
xlat
xor
cmc
cmp
xchg
xchg
inc
and
sbb
std
cmp
adc
iret
sub
or
call
aaa
test
pop
xlat
in
movsl
aam
in
mov
scas
aad
push
jbe
add
sub
inc
sbb
scas
mov
xchg
sub
call
mov
push
enter
adc
stos
aad
in
dec
jno
mov
into
add
rclb
les
and
dec
pop
aaa
lret
jo
pop
cli
lods
mov
mov
lds
mov
aad
push
pusha
cmpsb
out
js
mov
daa
add
fwait
popa
mov
sub
out
fnstcw
xchg
dec
int
sub
xchg
fxch
xchg
rolb
ret
and
jg
insl
hlt
aas
sub
mov
add
xchg
jno
push
mov
lea
xchg
fwait
dec
mov
pusha
adc
fldenv
push
ja
inc
xor
push
push
jbe
push
sbb
mov
adc
clc
in
hlt
add
test
repz
sub
popa
push
lock
gs
sbb
jno
leave
pop
mov
mov
pop
je
or
push
sub
ret
push
xchg
cmp
shrl
imul
add
addr16
xchg
flds
sarl
rclb
ds
test
inc
cmp
paddsb
pop
pop
cmp
ret
cld
push
inc
mov
jae
stc
push
xor
fld1
cltd
pop
bound
fmull
mov
add
fisttps
sbb
dec
sbb
xchg
mov
pop
out
jno
scas
push
mov
xor
sbb
scas
push
dec
cmc
add
test
pop
sbb
xor
fldenv
push
jns
out
ss
dec
adc
cmpl
test
stc
aam
ret
test
movsl
lahf
aas
dec
mov
cmp
shr
dec
ror
enter
sbb
or
sub
call
sub
cmp
sub
ds
into
stc
xchg
cmp
push
xor
stos
mov
inc
sbb
dec
xchg
push
popa
mov
xor
fxtract
adc
lods
or
test
mov
and
adc
jp
mov
xchg
jecxz
fldenv
dec
xor
dec
test
das
dec
xchg
sbb
mov
bswap
shll
cmp
aaa
push
in
ret
in
dec
sbb
ficoms
out
push
gs
loopne
out
adc
std
aaa
push
loopne
mov
pop
lods
or
in
push
add
push
mov
sahf
movsl
sbb
xchg
dec
or
std
rorb
add
push
ss
in
js
in
sbb
mov
push
xchg
enter
jns
movsl
adc
lret
adc
sarb
enter
sbb
icebp
loop
rorb
loope
std
mov
sub
enter
push
adc
aas
push
pop
cwtl
and
adc
sub
out
dec
repnz
jmp
out
dec
dec
js
in
and
das
in
rcrl
adc
repnz
notb
adc
ljmp
push
popf
push
push
fidivs
cltd
push
aad
pop
ljmp
mov
ds
lea
in
push
in
in
hlt
cmp
or
stc
dec
push
add
adc
dec
dec
mov
or
cmp
mov
xor
pop
and
daa
and
cmp
push
in
test
stos
push
insl
fistpll
adc
push
xor
dec
jmp
in
in
dec
in
repnz
xor
repz
in
xor
lock
add
lods
jno
cmc
int3
jne
cmp
in
xchg
add
lock
int3
adc
divb
mov
stc
pop
cli
jnp
add
lahf
sub
inc
jbe
stc
sub
stos
popa
and
jmp
bound
sub
lret
xlat
cmc
and
lock
and
fucomp
or
lods
je
push
cltd
clc
or
testb
sub
inc
mov
mov
mov
adc
jmp
into
pop
fcmovb
leave
and
or
aaa
pop
lods
add
and
ljmp
enter
cmp
jp
repnz
sbb
out
xor
and
fnstenv
dec
pop
repz
scas
and
cs
or
mov
movsb
xchg
dec
or
inc
xor
xor
or
push
jns
mov
cmp
or
out
mov
and
push
or
xchg
jg
sbb
dec
adc
loopne
call
sbb
dec
out
in
inc
xor
mov
shrb
test
test
stos
addl
jno
cmp
inc
xlat
enter
jge
daa
push
xchg
cmp
mov
sahf
dec
jb
push
ficompl
mov
movsb
stc
fldlg2
out
idiv
shll
cmpsl
pusha
je
in
dec
push
inc
test
jmp
cmp
ljmp
sub
lcall
push
mov
or
sub
std
add
and
outsl
sbb
ljmp
add
cmp
dec
sub
or
shrl
test
cmp
imul
mov
pop
cmp
or
xor
aad
inc
add
adc
idiv
aaa
cmp
adc
push
push
lods
push
cmp
inc
adc
mov
dec
xchg
pop
jns
rorl
arpl
and
mov
jmp
lcall
or
adc
sub
adc
mov
sbb
stos
dec
sub
and
in
stos
stc
icebp
inc
aam
adc
cmp
insb
adc
dec
or
dec
cvtpi2ps
movsl
adc
adc
and
sub
in
push
int
push
rcrb
mov
dec
cmp
mov
rorb
adc
enter
adc
inc
int
push
adc
mov
pop
push
pop
jbe
enter
dec
mov
mov
ret
aaa
mov
cmc
dec
fstl
fnstenv
std
xor
and
dec
mov
rcll
sbb
dec
cmp
lock
shll
stc
or
add
xor
or
push
mov
adc
sub
and
pop
leave
inc
mov
aad
negl
xchg
leave
or
cmp
daa
lahf
or
inc
xor
pop
sub
adc
adc
cld
inc
add
and
sbb
push
pop
int
faddl
mov
sbb
pop
daa
in
lahf
test
inc
push
ds
lds
xchg
dec
cmp
push
push
or
adc
dec
cmp
mov
cmp
mov
icebp
adc
out
test
adc
cli
or
shlb
mov
mov
pop
cmp
fdivr
jecxz
adc
jmp
mov
aam
insl
add
xchg
sti
add
movsb
jle
sti
in
xchg
incb
push
addr16
mov
in
out
dec
lcall
in
sub
jp
jb
add
push
addr16
xchg
cmp
ss
add
pop
or
mov
rorb
scas
nop
jmp
call
and
or
cmp
xchg
fs
rorb
jne
jb
cli
dec
or
cwtl
pop
shrl
out
repnz
xor
and
mov
fidivrl
jne
mov
or
nop
xchg
dec
cwtl
adc
imul
popa
add
or
mov
icebp
fiadds
into
mov
fwait
xor
cwtl
out
dec
ret
lahf
movhps
out
xadd
cli
outsb
test
les
mov
ret
loop
xor
dec
pop
out
sub
enter
pop
out
sub
pop
outsb
cmpsl
cld
dec
push
into
xchg
scas
call
aaa
std
xor
sbbl
aam
inc
aad
inc
in
stos
mov
sbb
pop
ret
push
cld
fucom
mov
outsb
lods
adc
mov
mov
xorl
outsb
xchg
or
out
test
sub
push
sahf
push
fcomps
fcoml
mov
aam
jno
pushf
xchg
call
adc
adc
sarb
repnz
cwtl
mov
clc
add
outsb
cmpsl
es
inc
push
add
cmp
xchg
jle
iret
pop
jmp
add
pop
icebp
sbb
outsl
cmc
add
mov
add
cmp
outsb
mov
stos
pop
cld
ljmp
adc
xchg
xchg
push
xchg
add
jecxz
lret
pop
jb
xchg
jp
fisttpll
subb
push
xor
fyl2x
xor
jl
lret
xor
cmp
xchg
loop
xor
rclb
aad
sarb
jl
mov
sti
or
addr16
out
push
pop
mov
lahf
scas
xor
dec
pop
cmp
int
sub
popa
pop
push
jmp
sbb
sar
popa
jbe
dec
fcomi
int3
loopne
push
cmc
test
mov
aad
push
outsl
jbe
push
in
fisubrl
sbbl
cltd
push
inc
or
cld
repz
scas
lahf
adc
sahf
icebp
lds
xorb
out
mov
int
in
fmul
dec
das
aam
sti
jo
inc
inc
cld
pop
popa
or
pusha
pop
scas
add
xor
push
jae
cmp
outsb
pop
ljmp
sub
fstl
notl
outsb
adc
fadd
lret
in
or
cmp
cmp
pop
inc
xchg
push
jno
orb
sub
xchg
and
xor
dec
lds
and
into
dec
xor
sarl
dec
bound
orb
imul
and
dec
dec
xor
add
scas
push
cmc
push
dec
enter
fwait
or
push
dec
icebp
mov
in
outsb
lods
mov
adc
outsb
test
popf
xchg
inc
shlb
and
mov
xorps
sub
xlat
lret
fisttps
dec
fsubl
rcrb
add
pop
cmp
xchg
push
jmp
icebp
dec
cli
or
mov
movsl
loopne
or
ret
sub
sahf
into
jmp
push
shr
inc
test
mov
imul
mov
add
pop
and
iret
addr16
rolb
loopne
pop
cltd
push
mov
xor
pop
pushf
or
add
rcrb
adc
aad
dec
jnp
movb
pushf
in
xor
xlat
enter
and
dec
inc
pop
or
ret
mov
pop
xor
iret
and
leave
roll
clc
int
and
fildl
cmp
nop
mov
inc
pop
int3
push
jmp
pop
and
push
mov
adc
xor
xchg
sub
mull
jno
inc
aad
sahf
adc
sbb
add
or
scas
rcrl
test
xor
push
fcomps
cmp
pop
xchg
outsb
sub
in
aas
cmpb
aad
mov
lock
dec
add
gs
cmp
mov
je
sub
testl
push
cwtl
push
jb
add
test
testl
xchg
test
sti
adc
sub
mov
push
idivl
xchg
and
push
int3
sbb
test
sbb
outsb
add
lea
out
inc
push
rolb
sti
scas
or
sub
dec
push
push
test
or
nop
dec
sbb
xchg
in
call
lea
cwtl
or
outsb
xchg
test
insl
stc
pusha
dec
cs
jge
push
in
jo
adc
sbb
push
jno
lret
jmp
iret
dec
push
jmp
pusha
sbb
fbld
xor
lods
mov
shl
arpl
add
push
fwait
jl
cmp
pusha
push
xor
mov
dec
ss
mov
data16
cmp
mov
lret
cmpb
out
push
sub
xchg
adc
popa
loope
dec
icebp
test
inc
pop
jecxz
xlat
cmp
push
pop
mov
sarb
hlt
inc
hlt
popa
push
test
pushf
xchg
xchg
fisttpll
inc
adcb
push
jno
int3
loop
pop
insl
mov
addr16
cmc
fsub
movsl
outsb
fs
push
stc
jne
mov
mov
mov
xor
mov
dec
cld
push
fdivrl
pop
add
push
pop
push
xchg
mov
test
mov
negl
xor
cmp
arpl
xor
push
ds
loope
dec
mov
dec
mov
jno
jge
adc
mov
hlt
das
ja
jae
scas
jbe
push
adc
inc
push
out
inc
hlt
into
insl
popa
jl
sarl
or
cmp
bound
shl
loop
and
sub
add
and
cmp
or
jno
inc
or
push
cltd
push
sahf
xor
or
out
inc
fists
mov
pop
push
dec
test
aad
pop
sub
imul
imul
rorl
fcmovb
add
xchg
sbb
pop
dec
adc
xchg
hlt
inc
stc
test
lret
outsb
pop
adc
cmc
xor
add
pop
mov
sti
stc
fisttpl
je
movsl
sub
push
arpl
mov
arpl
and
push
xchg
loop
push
xchg
or
lret
xchg
pop
xor
push
or
xchg
enter
jp
frstor
fsubrs
stc
jns
dec
cmp
sbb
pushf
pusha
cli
inc
jne
xchg
rcll
pop
xlat
xchg
ss
cli
lock
or
mov
push
shll
push
loope
mov
dec
add
or
mov
dec
fwait
popa
mov
cli
jbe
jle
or
sub
ljmp
xor
imul
xchg
cmp
xchg
dec
push
xor
fsubl
sbb
fbld
popa
loopne
push
dec
outsb
test
daa
adc
jae
ss
aaa
pop
xchg
and
xchg
adc
dec
loope
lock
fsub
push
sub
adcl
lea
inc
sarb
enter
out
or
pop
leave
es
aaa
std
adc
dec
dec
int
inc
push
jecxz
inc
int3
lret
insl
xchg
jno
fsubrs
jno
pop
push
outsl
xchg
ss
scas
jo
mov
ret
and
test
dec
mov
xor
hlt
inc
xor
int3
ja
cli
xor
lods
adc
mov
sub
dec
cmp
fcoml
js
stos
xor
mov
scas
inc
adc
pop
loopne
jno
inc
test
mov
and
das
dec
xor
scas
cmp
inc
in
mov
fsubl
std
add
jecxz
in
hlt
xchg
jmp
cmpsb
xlat
cmc
cli
inc
or
out
add
sbb
dec
repnz
sbb
pushf
push
xchg
fnstsw
push
lret
in
js
ja
sub
push
pop
hlt
mov
push
sub
cltd
mov
flds
cltd
mulb
pop
test
mov
pop
stos
dec
shlb
push
les
stos
ss
out
dec
nop
sti
shrb
cmp
repnz
jae
aad
out
push
jle
test
icebp
xchg
mov
icebp
lods
xchg
in
out
or
pop
lods
xchg
or
imul
inc
or
mov
dec
jno
jae
dec
and
xor
adc
mov
js
test
ds
fadd
stos
inc
sub
aaa
sub
mov
xchg
dec
push
mov
dec
imul
mov
pop
sbb
adc
adc
lcall
mov
push
pop
mov
mov
push
mov
jmp
pop
mov
sbb
les
pop
cmp
cmp
mov
pusha
and
xor
xor
dec
add
or
scas
dec
sbb
pop
test
mov
add
mov
sub
mov
xor
xchg
mov
xchg
aas
popf
scas
push
aaa
fdivr
adc
dec
aas
add
and
xchg
fs
dec
enter
je
dec
adc
adc
dec
adc
adc
cmp
dec
sbb
jns
jo
mov
enter
movhps
gs
inc
push
dec
inc
xor
cmpsb
test
jo
jl
or
sbb
pushf
mul
mov
dec
movsl
mov
inc
xor
popa
xchg
sbb
lods
loope
jb
std
dec
dec
push
push
xchg
push
push
in
adc
adc
cld
sub
jae
stos
rcr
pop
lods
push
nop
or
lods
xor
aas
enter
inc
or
in
or
or
lds
fs
cmp
cltd
cmp
inc
ret
cmp
dec
rep
jmp
ret
inc
pop
pop
add
and
movsb
loop
adc
inc
repz
add
shll
sbb
inc
adc
xchg
sbb
cmp
cmp
cmp
dec
popa
mov
pop
lds
push
dec
inc
adc
cmp
add
push
divl
push
push
gs
xchg
xor
dec
daa
lock
repz
push
daa
je
ds
sub
push
mov
add
sbb
das
dec
xchg
scas
roll
add
int
pop
pop
insl
add
fldt
lret
sbb
loope
push
fsubp
and
lret
test
stos
ret
push
int3
push
xor
pop
ss
dec
adc
ret
dec
pop
ss
mov
fadd
daa
rol
test
adc
sbb
leave
pushf
notl
sarb
imul
fsubr
sub
ja
mov
dec
lods
and
cmp
das
fldl2e
dec
jae
scas
dec
imul
mov
sahf
into
dec
inc
outsb
scas
mov
rolb
mov
enter
push
xchg
mov
cmp
mov
aam
cmpsl
subb
imul
daa
xchg
add
dec
sub
sbb
lret
mov
inc
shl
sub
mov
or
inc
or
sbb
setge
dec
das
fcoms
js
dec
sarb
xor
arpl
dec
add
movsb
mov
cld
mov
lahf
popa
fsubrl
sub
pop
sbb
rorb
clc
fistl
cmc
inc
push
dec
mov
rcr
out
and
sub
xor
aaa
xlat
dec
fiaddl
icebp
outsl
shlb
jl
in
insl
loope
adc
or
lret
gs
out
push
xchg
xor
insl
mov
fistpll
xchg
and
fldcw
jno
mov
mov
jle
adcl
push
push
andl
mov
pop
fdiv
push
int
xor
push
outsl
rolb
cmp
mov
mov
lods
aad
jle
xor
push
leave
add
jno
push
sahf
push
fmuls
dec
push
inc
mov
leave
ss
jno
sbb
pop
test
push
xchg
loope
jns
pop
sbb
cmpsl
xchg
sub
xor
push
cmovns
mov
scas
mov
jl
dec
push
leave
xchg
jl
enter
push
mov
push
xor
adc
or
and
loopne
add
xor
xor
arpl
sub
faddl
js
ja
sbb
xor
push
and
insl
cli
popa
xchg
xchg
int
mov
insb
mov
rorb
arpl
dec
int3
mov
push
jno
cmp
push
fsubrl
push
inc
js
dec
cmp
push
pop
ss
in
insb
insl
nop
jmp
mov
inc
rorl
mov
roll
xchg
xchg
push
push
daa
jae
je
jo
ljmp
adc
sti
js
sti
repz
xor
and
das
in
ds
dec
js
dec
jno
push
fldenv
jmp
push
adc
pinsrw
cltd
call
lock
pop
push
fwait
out
data16
cmp
add
cmc
sbbb
jg
std
jb
in
into
ror
sub
in
cltd
pop
add
and
pop
dec
mov
mov
rcl
mov
jno
popf
mov
movsl
outsl
mov
cmpsb
mov
lea
jle
pop
mov
dec
insl
mov
aas
int
dec
jns
cmc
pop
inc
mov
lock
fdivr
inc
rorb
sbb
pop
outsb
jo
jle
mov
jns
mov
test
ljmp
jno
icebp
aam
push
push
adc
lods
aam
cld
pop
adc
shrb
mov
in
repz
outsl
or
add
xchg
fmuls
and
push
mov
dec
push
jno
lea
pop
call
xchg
dec
sub
push
dec
jp
adc
dec
mov
insl
bound
xchg
testl
sbb
aam
sarl
cmp
xchg
mov
cwtl
shrl
pop
sahf
mov
or
fbstp
and
xor
xor
push
sub
sub
inc
fisttpl
xor
push
and
inc
xor
xor
pop
fwait
cmp
fstps
int3
aad
push
in
rcrl
sbb
or
fnsave
dec
push
sbb
or
cld
push
or
mov
cmc
fadd
sbb
aam
jae
mov
aad
and
ss
inc
xchg
dec
inc
cmp
push
push
push
cs
in
adc
cmp
push
mov
push
in
out
xchg
xchg
sarl
inc
flds
call
sbb
push
stos
add
ficompl
clc
pusha
and
or
push
jecxz
mov
stc
push
fisubrs
stos
push
mov
aas
nop
add
adc
sbb
int
in
xor
dec
fcompl
addl
cmp
pop
call
xor
loopne
out
fdivs
mov
push
pop
rol
cmp
iret
adc
sbb
sarl
add
jecxz
push
inc
mov
mov
dec
popa
sarl
jg
add
xchg
fcmovnb
pop
lret
mov
or
addr16
xchg
dec
add
adc
add
push
fsubl
sahf
xchg
cmp
mov
mov
xorb
sub
shlb
xchg
cmp
ds
gs
clc
pop
add
sbb
pop
mov
fistps
push
xchg
shl
jne
aam
mov
pop
pushf
ret
push
repz
mov
clc
mov
repz
dec
xor
out
fwait
lds
add
cmp
cwtl
pushf
mov
fsubp
lods
scas
or
fs
arpl
cmp
pop
insl
or
and
add
xor
sub
mov
xor
stc
or
leave
fnstenv
lea
mov
mov
insl
or
dec
jno
jns
push
xchg
outsb
xchg
add
push
dec
add
jg
dec
sub
push
inc
setl
mov
xor
mov
es
xor
pop
jbe
pop
loope
insl
inc
cmp
and
ret
and
frstor
sbb
gs
inc
cmp
push
cs
mov
xchg
inc
dec
add
cmp
add
stos
push
push
iret
sbb
arpl
adc
sbb
adcl
shrl
sbb
mov
mov
mov
adc
mov
out
adc
xchg
mov
mov
idivb
shll
mov
or
pop
pushl
shll
jo
ljmp
cmp
cmp
jbe
xchg
or
or
adc
dec
ss
out
dec
mov
faddl
fwait
xchg
or
rcr
rorb
loopne
stos
xchg
popa
aam
pop
add
pop
pop
pop
fimull
adc
lret
pop
int3
rcr
push
push
mov
sub
les
dec
pop
sbb
popa
mov
lret
insl
sub
dec
push
push
inc
jno
in
jecxz
call
pop
int3
rcll
je
xchg
xor
jne
shrl
aam
dec
and
aaa
cmp
mov
aaa
fwait
int
fdivrl
xchg
sbb
shll
sub
pop
push
push
adc
pop
fdivrs
aam
lret
xor
mov
push
push
xchg
and
xor
mov
jbe
jecxz
mov
dec
rcl
ss
jno
mov
inc
sbb
xor
jae
jle
ret
fwait
scas
cwtl
mov
movsl
sub
cld
in
test
mov
sub
mov
and
icebp
dec
dec
adc
push
mov
pop
pop
xor
jae
adc
sti
cmp
adc
pop
iret
dec
in
rcrb
roll
pop
lret
or
fcompl
xchg
dec
sub
jae
shl
adc
mov
mov
jmp
lea
or
in
sub
inc
jecxz
sub
mov
mov
les
outsb
cmp
pop
sub
gs
xor
xchg
adc
sub
test
scas
popf
add
pushf
sahf
loope
sub
pop
lods
pop
inc
adc
fstpt
arpl
inc
xor
inc
cld
fwait
xor
dec
das
pop
out
jno
cmpsb
aaa
xlat
push
in
out
imul
or
or
sbb
mov
dec
xchg
fistl
push
popa
xchg
cmp
cmp
push
adc
call
in
cmp
xor
add
sti
lods
mov
bound
push
dec
push
jne
daa
pop
pushl
andl
in
mov
sub
mov
jb
push
popa
add
add
pop
mov
inc
popf
out
inc
push
jno
test
cli
cmpsl
rcl
cmp
stos
rcll
push
push
pop
push
outsb
mov
adc
xchg
or
push
aad
negl
push
xor
mov
jae
xor
mov
push
mov
cmp
push
jne
adc
xchg
add
out
cmp
ss
scas
xor
addr16
mov
jbe
insl
mov
jge
inc
daa
dec
fisttpll
in
orb
mov
push
mov
cmp
lds
loop
sbb
push
lret
xlat
or
rcl
push
in
xor
sbb
pop
rorb
test
or
leave
lea
enter
sbb
sbb
adcl
cmp
dec
sub
and
mov
push
push
cmp
xor
lods
iret
fmull
push
push
daa
jle
cmp
xchg
cmp
lds
mov
xchg
ss
rorb
adc
xor
mull
mov
icebp
sub
jb
inc
movsb
jmp
inc
call
pop
xor
inc
inc
dec
out
jp
repz
inc
leave
dec
outsb
ss
leave
sbb
mov
call
cmp
dec
je
jg
rorl
enter
mov
sub
mov
aas
xchg
ljmp
mov
ret
sti
pop
push
lods
xor
sbb
in
or
aad
jg
sub
xchg
mov
das
jmp
pop
mov
ja,pt
out
push
sti
dec
cmc
in
or
pop
cmp
xor
mov
or
or
sbb
inc
add
loope
imul
fwait
out
dec
mov
push
push
cld
inc
nop
lods
mov
mov
pop
add
xchg
sarl
sbb
sahf
movsb
adc
cs
ja
outsl
ss
daa
and
arpl
mov
arpl
aam
cmp
faddl
push
mov
xor
aam
jecxz
rorl
inc
and
push
addr16
push
xchg
cmp
push
outsb
mov
cmp
adc
cmp
cmp
arpl
mov
into
inc
cmpsb
les
sbb
xchg
lar
into
orl
add
jae
ret
add
inc
leave
dec
insb
sbb
dec
adc
adc
ljmp
int3
mov
in
mov
push
lcall
dec
mov
fwait
test
or
pop
xor
lret
cmp
repz
sbb
ret
push
push
mov
data16
mov
jo
cs
pop
cmp
dec
inc
movsl
xor
ja
push
inc
dec
mov
cmpsb
popf
lahf
fiaddl
in
cli
pop
sub
in
xchg
jmp
ja
fdivs
fidivl
addr16
xor
andb
rorb
insb
ja
mov
or
or
lods
fcoms
xchg
cmp
out
inc
inc
push
icebp
mov
aaa
fcomp
dec
roll
jno
cmpsb
popf
fcomp
arpl
cmc
fldt
popf
mov
ret
or
int3
add
sub
std
repz
cmc
pop
sti
add
mov
inc
jno
or
jno
pop
sbb
push
aam
xor
push
test
js
sbb
insl
add
int
cmc
ljmp
nop
fs
and
inc
cmp
repz
out
cmp
loop
cwtl
mov
push
xchg
lahf
or
lahf
mov
add
test
mov
or
or
push
dec
inc
rclb
push
orl
dec
push
dec
jge
dec
bnd
inc
push
fs
sbb
jno
xchg
stos
out
push
iret
addb
sti
xlat
sbb
popa
mov
dec
and
cmp
out
mov
hlt
ret
mov
sarl
inc
pushf
arpl
push
gs
and
pop
sti
fwait
clc
mov
clc
inc
add
adc
xchg
in
xchg
out
std
push
mov
orb
add
repnz
and
ds
jno
cmp
in
aaa
and
enter
jmp
test
or
adc
xor
int3
pop
pop
adc
fsubl
jl
xor
pop
pop
imul
jle
push
adc
movl
icebp
shlb
mov
dec
or
out
sbb
jge
dec
loop
cmpsb
dec
adc
adc
cmp
or
lods
adcb
sbb
in
xchg
es
lods
push
cmp
into
lret
push
xor
xchg
pusha
je
int
mov
mov
pop
int3
mov
xlat
pop
int3
fstpt
pop
sbb
ret
push
bnd
fwait
aam
and
push
lret
pop
popa
or
out
pop
cmp
dec
mov
aaa
add
pop
add
add
pop
data16
repz
push
cmp
pop
adc
test
adc
add
mov
push
stos
and
push
aaa
lret
dec
adc
xchg
inc
push
dec
fistl
lock
xor
adc
call
adc
int3
push
rcl
push
or
or
cmp
dec
cmpsb
das
mov
pop
xchg
pop
mov
aaa
ret
bound
gs
fs
aad
xchg
mov
push
int3
or
cmp
lock
add
xchg
repz
scas
lock
shll
or
or
push
add
das
xchg
dec
jne
and
das
adc
adc
sbb
dec
sbb
rcll
inc
cmp
dec
cld
xchg
dec
ljmp
pop
call
aas
mov
movsb
out
cmpsl
test
or
shl
ja
cmpsl
mov
jne
rorb
fistps
lahf
icebp
inc
psubq
pop
add
sbbl
mov
jno
rcrl
inc
loop
push
cmc
xchg
mov
add
cmp
lds
cs
out
inc
sbb
or
cmc
jno
xor
cmp
loopne
mov
pop
push
adcl
pop
in
popf
sbb
imul
aaa
dec
mov
pop
or
push
outsl
pop
mov
hlt
adc
out
lea
or
aas
mov
or
pop
inc
add
lods
addr16
test
add
push
push
pop
adc
aaa
movsb
xor
jns
push
data16
inc
mov
push
loop
popf
test
xor
xchg
lods
adc
icebp
imul
cmpsl
xor
pop
push
push
xchg
outsb
jge
push
mov
inc
cmc
divb
cmp
orl
dec
into
imul
mov
int
mov
mov
pop
push
or
lcall
jbe
adc
notb
jno
pop
mov
dec
xlat
loope
faddl
int
lcall
lcall
or
movsl
rcrb
in
adcb
or
push
xchg
xchg
dec
and
xchg
fisubrl
jmp
xorl
sub
subl
jecxz
iret
mov
rclb
mov
loopne
xchg
inc
dec
dec
push
in
jo
jecxz
aam
subb
mov
sahf
sbb
add
in
jmp
bound
xchg
pop
or
mov
jecxz,pt
adc
dec
push
ljmp
dec
movsb
inc
pop
test
insl
jae
jbe
rcll
pop
mov
xor
mov
popl
into
push
in
add
inc
pop
rcrb
lock
adcb
fwait
sub
sbb
hlt
pusha
add
jo
sahf
sub
inc
mov
inc
popf
cmp
adcl
cmp
adc
lret
cmp
xlat
mov
cmp
out
ret
or
daa
and
std
outsl
aaa
stos
adc
push
dec
stos
sarl
clc
dec
xchg
loopne
jecxz
add
int3
ja
mov
loop
bound
push
dec
shll
sub
sub
inc
leave
std
jns
out
mov
scas
xor
inc
cld
sub
sbb
inc
std
aas
adc
ret
push
dec
cmpsl
xor
iret
add
ret
dec
aam
or
mov
cmpsb
cmp
or
lret
xorl
orb
outsl
inc
dec
ja
sti
data16
cmpsb
cmp
punpcklwd
or
lods
xchg
mov
lret
roll
inc
push
ss
push
icebp
cmp
pop
jecxz
repz
popa
outsb
lds
sub
push
in
adc
cs
cwtl
rcrl
iret
adc
loopne
or
aad
cmp
push
add
jne
mov
inc
or
xor
push
mov
jge
add
pusha
push
sbbl
shrl
add
cmp
adc
mov
xchg
cmp
js
cs
or
inc
test
fsubl
inc
adc
jne
popl
or
push
xchg
xor
fcmovne
in
and
and
in
sbb
mov
gs
dec
ds
cltd
lcall
rolb
mov
out
xchg
or
js
jge
std
nop
gs
das
adc
filds
das
xchg
jle
mov
sbb
or
inc
dec
lret
das
enter
jmp
mov
add
xor
push
pop
dec
push
sti
jp
aad
ljmp
sbb
mov
aas
setno
and
pop
mov
adc
testb
sti
sbb
push
pusha
in
pop
mov
es
ret
dec
rcrb
xchg
xorl
sti
imul
push
icebp
push
dec
fsubp
add
out
add
aaa
push
cmpsl
mov
inc
mov
scas
jae
int
into
jmp
mov
repnz
aam
sub
fidivs
push
mov
int
xchg
inc
call
out
xchg
mov
mov
cli
pop
aad
in
jecxz
push
jae
inc
jne
out
cmp
adc
bound
addr16
cmp
inc
dec
jbe
mov
inc
jne
icebp
push
push
cmp
push
je
inc
jne
in
sub
popf
dec
push
mov
jbe
dec
outsl
fnstenv
mov
fildll
ss
mov
jae
mov
dec
xor
scas
insl
push
pushf
es
mov
jo
pusha
jp
in
lret
fldt
sub
enter
adc
add
ss
mov
fimull
dec
inc
mov
dec
sbb
imul
jo
or
lret
xchg
inc
stos
add
jle
dec
dec
iret
mov
and
divb
int3
lret
les
rclw
aad
ficompl
cmp
jae
int3
sarl
sarb
xchg
xchg
mov
and
push
jno
shll
outsl
mov
cmc
pushf
mov
ror
int3
popa
mov
mov
sub
inc
push
inc
adc
or
pushf
or
xor
mov
inc
xor
inc
xchg
test
iret
fisttpll
loop
sub
jmp
int3
mov
lock
ljmp
inc
test
stc
int3
leave
in
insl
sbb
and
jb
jno
jmp
push
inc
sti
in
arpl
cmpb
mov
sti
jno
or
imull
out
pop
add
ficoms
push
pusha
add
xlat
pop
cmc
aas
arpl
mov
pop
outsb
mov
pop
push
xor
push
ret
xchg
push
test
int3
adc
clc
jp
adc
or
inc
imul
push
push
stc
adc
xor
xchg
sbb
xchg
pusha
jl
sbb
mov
or
and
aad
in
cmp
push
xchg
or
test
or
test
xor
jecxz
ret
int3
out
out
xor
mov
xchg
lds
inc
mov
mov
movsl
xor
and
push
js
rorl
ss
xchg
leave
jns
add
cmp
sbb
and
bound
dec
cmpsb
popf
adc
xchg
shll
sti
fwait
dec
push
xchg
out
jno
out
jno
loop
pop
pop
lods
dec
sbb
cwtl
cmp
cmp
js
test
fsubp
jmp
mov
or
or
ficoms
inc
pusha
and
add
fcompl
cmp
loopne
add
xchg
push
xchg
leave
sbb
scas
push
lds
loope
cli
sub
xchg
repz
jge
popa
fcomps
add
adc
pop
popaw
push
mov
clc
or
fldlg2
pop
or
mov
dec
mov
adc
lock
or
rcrb
push
stc
repz
xchg
pop
dec
jnp
mov
dec
std
mov
in
lods
cmp
and
clc
cmp
pop
adc
fisttps
adc
pop
iret
xchg
adc
adc
jg
mov
dec
or
sarl
mov
ret
mov
mov
cmpsl
test
seto
cmc
pop
popf
mov
lods
mov
mov
add
sub
jb
nop
inc
pop
xchg
fstpt
repnz
in
lock
cli
inc
test
sbb
dec
in
fimull
dec
repnz
dec
mov
pop
stc
iret
xor
int3
aaa
fwait
jge
out
imul
jbe
inc
imul
mov
movsl
dec
cmp
outsb
mov
jno
inc
dec
ror
fmuls
stc
rorb
rcrb
bound
add
ja
inc
enter
lods
test
jg
cltd
cli
outsb
mov
pusha
outsb
xchg
jns
pop
pusha
add
push
adc
add
mov
xchg
sbb
mov
cmove
dec
into
xchg
ja
dec
mov
pop
inc
push
rol
and
in
sbb
pop
push
adc
inc
fsubrl
jp
mov
mov
imul
pop
mov
add
iret
sub
inc
xchg
leave
fcoml
cmp
daa
add
mov
arpl
sbb
pop
andnps
rcll
outsl
in
cs
ret
add
jbe
sub
movsb
sbb
movsb
imul
popa
cmp
stc
cmp
les
add
and
pop
inc
cmpb
jmp
fs
jl
jl
mov
xchg
outsb
mov
sub
mov
or
lret
push
xor
push
xchg
xchg
clc
cs
add
pushf
cmp
cwtl
jo
aad
mov
das
popa
aaa
push
push
icebp
and
loop
push
mov
push
push
or
mov
test
xor
dec
je
addl
out
push
scas
imul
sub
jno
pop
or
sbb
lods
nop
cld
mov
dec
cmpl
jp
mov
jae
fs
nop
int
ss
scas
adc
dec
or
jle
xchg
gs
cs
add
ja
add
push
sub
push
push
in
add
push
shll
push
sub
ret
cmp
pop
adc
das
sbb
pop
inc
stos
pop
insl
dec
sbb
jno
push
xchg
dec
insl
push
jno
inc
ret
mov
dec
stos
jo
sub
and
loope
mov
inc
iret
push
icebp
daa
rcll
jg
dec
in
push
mov
pop
out
cmp
adc
or
dec
and
aam
shll
mov
sbb
xchg
divl
mov
sub
sbb
ss
mov
addl
iret
sub
out
enter
pop
dec
out
push
mov
mov
adc
cmp
cmp
test
rol
stc
dec
ja
pop
scas
adc
or
sbb
adc
sub
in
add
dec
push
sub
loop
pop
xor
jne
in
inc
fs
xchg
daa
xor
xor
push
and
insb
das
pop
rorl
and
jbe
adc
hlt
arpl
adc
mov
icebp
dec
sub
jno
aad
push
or
xchg
stos
sub
fadd
mov
adc
add
out
jne
sbb
into
popa
push
aad
cmp
jge
ret
pop
cmpsl
add
xchg
sub
xor
dec
xor
or
js
mov
bound
repz
mov
xchg
jno
loopne
xchg
adc
sti
pop
fldenv
es
and
pop
push
pop
insb
addl
add
jno
aas
and
dec
out
call
jo
push
pop
fldt
lcall
mov
ficomps
jno
icebp
popf
data16
push
push
push
sub
or
pop
dec
int
mov
shrb
inc
pop
insl
call
popa
and
outsb
cvtdq2ps
pop
inc
dec
push
popf
adc
lcall
iret
push
jo
dec
xchg
icebp
lea
xor
pop
jno
or
jo
and
add
jo
ljmp
faddl
mov
cmp
in
push
es
adc
in
sbb
jmpw
vpacksswb
mov
lods
rcl
ljmp
movl
daa
push
adc
mov
ljmp
ljmp
dec
sbb
push
js
ficomps
mov
push
sub
cwtl
lea
push
je
adc
pop
aad
mov
mov
dec
int
repnz
mov
int3
imul
mov
enter
jecxz
push
into
int3
in
and
lods
adc
xor
xor
dec
mov
sbb
sarb
mov
cmp
or
stos
cwtl
stc
push
xor
rcrb
repz
dec
out
and
aam
or
es
push
and
lods
or
push
addr16
lcall
shrb
icebp
push
bound
out
xchg
jp
pop
mov
push
or
jno
mov
fstpl
nop
icebp
jno
cmp
psrlw
fistpl
sbb
adc
repnz
dec
sbbl
call
ret
xchg
sub
filds
mov
xor
pop
mov
adc
leave
dec
cmpsb
es
inc
inc
xor
daa
mov
or
and
rcl
enter
cmp
inc
adc
imul
xchg
jo
lret
int
bound
je
inc
cmpsl
sbb
cld
mov
xchg
pop
mov
insl
mov
pop
mov
pop
mov
jno
insl
mov
push
sti
jne
inc
sub
sub
stc
mov
aam
adc
sahf
lea
fldl
cs
cmp
dec
push
aam
es
dec
ss
test
subl
jo
out
xchg
push
xchg
xchg
enter
shll
or
and
jne
out
push
pop
or
pop
inc
movsb
sbb
dec
lock
adc
cltd
je
xor
aam
sbb
arpl
adc
xor
push
mov
xor
enter
leave
and
push
ljmp
sub
inc
dec
movb
push
mov
lods
cmp
into
sahf
inc
mov
xchg
mov
js
fs
xchg
sbb
ds
sbb
and
push
inc
xor
xor
not
into
mov
lea
cmp
js
sarl
sbb
popf
dec
mov
out
adc
xchg
add
stos
cld
push
jge
je
mov
adc
mov
fwait
push
lea
es
dec
dec
cli
xchg
mov
repz
dec
loopne
xor
mov
cmp
popf
out
xchg
out
std
inc
loope
inc
ret
pop
fdivl
mov
pop
movsb
xchg
and
pusha
fstpt
nop
test
mov
push
mov
aas
mov
outsl
cmc
ja
mov
hlt
push
js
sbb
lds
mov
inc
imul
mov
sbb
mov
les
iret
push
sub
add
push
ds
pop
ja
inc
lahf
xor
and
out
pop
rolb
aad
xchg
in
dec
inc
outsl
cmp
mov
cwtl
fwait
mov
out
dec
jns
xor
test
cld
repnz
cs
mov
loope
xchg
and
dec
cmp
xchg
or
sub
call
sbb
pop
iret
jne
jne
sub
pop
xchg
xchg
loope
leave
cmp
leave
jmp
iret
dec
cmp
andb
mov
sub
xor
imul
sub
or
repz
test
imul
cwtl
push
repz
aam
in
imul
adc
xor
lcall
mov
rcr
push
xchg
inc
mov
dec
adc
mov
xor
cmp
loopne
popf
es
cmp
loope
fsubrs
push
push
push
fisttpll
add
out
dec
dec
jno
stc
pop
dec
inc
xchg
aaa
fxtract
inc
push
sbb
andb
or
xorl
inc
icebp
sub
pop
ss
jno
arpl
sbb
test
adc
adc
inc
xchg
jg
mov
mov
jmp
push
or
je
xchg
inc
sbb
mov
pop
push
int
dec
movsb
js
pusha
mov
lods
faddl
add
loopne
fcoml
in
mov
inc
cmp
fcmovnu
in
push
pop
jecxz
push
adcl
mov
jns
cmp
iret
pop
sar
dec
sbb
fldt
push
add
nop
mov
lods
shll
out
aam
push
jo
dec
cmp
cmc
repnz
push
xchg
push
sbb
sar
imulb
dec
iret
push
jecxz
sub
dec
jbe
dec
ss
stos
inc
push
pop
and
aad
dec
pop
call
loope
mov
lds
je
out
shlb
std
divl
push
pop
subb
adc
mov
insb
xchg
movsl
std
xchg
loop
stc
dec
sbb
add
push
push
or
std
icebp
adc
dec
stc
cmp
iret
push
mov
inc
dec
cmp
test
push
sub
inc
stc
xchg
xor
mov
and
sbb
popf
lock
insb
dec
into
mov
fldl
sub
cwtl
push
pop
or
data16
jmp
inc
dec
push
inc
popa
cmp
shr
aas
pop
cmp
ss
add
jle
dec
call
adcl
sar
outsb
rcll
fisubrs
leave
xchg
cli
ret
or
mov
adc
in
sub
in
in
mov
cmp
mov
lret
mov
in
cmp
sbb
shr
mov
dec
and
pop
out
mov
or
stos
mov
lahf
fiadds
or
in
in
movsb
dec
push
and
in
fiaddl
flds
mov
pusha
popw
dec
cmp
in
xchg
outsl
arpl
mov
dec
push
mov
scas
push
in
icebp
sub
gs
mov
and
xchg
in
scas
push
ret
lock
push
dec
or
sahf
xor
push
cmpsl
fisttps
mov
aam
ds
imul
arpl
in
sbb
ljmp
mov
pop
xchg
fisttpll
mov
dec
int3
inc
and
in
sub
popl
mov
shll
into
sub
adc
aam
and
hlt
popl
shl
lret
movsb
add
push
mov
les
mov
in
or
dec
mov
cmp
shlb
cld
xor
call
cmp
xor
ret
aad
pop
sub
insl
push
pop
pop
out
aam
dec
push
icebp
aas
jne
sbbl
jns
xchg
pop
fsubp
mov
dec
test
addl
adc
fcompl
or
daa
sbb
inc
cmpb
sbb
inc
ss
mov
lock
cli
push
mov
adc
or
push
jne
inc
mov
push
out
out
add
stos
ljmp
pop
or
outsl
idiv
adc
lods
fs
pop
push
or
push
aad
cmc
pop
inc
jns
dec
cwtl
cmp
push
test
add
pushf
adc
sub
mov
and
ret
mov
cmp
pop
out
xchg
std
lret
cmpl
outsl
xchg
jp
xor
out
or
cmpsb
adc
arpl
aad
cmp
popf
jno
xor
inc
in
xor
es
in
hlt
dec
adc
pop
loopne
sbb
pusha
fmull
cmc
xchg
gs
xchg
popf
dec
cld
outsb
jg
clc
sbb
mov
vmovq
gs
jno
add
and
rcll
test
push
push
jae
inc
sbb
inc
hlt
fldcw
pop
fwait
cmpsb
and
cmpsl
or
jno
ja
daa
fistl
ds
mov
pop
cmp
aaa
adc
mov
or
ja
pop
sbb
fisttpll
or
jmp
ret
ja
dec
jno
fisubrl
testb
pop
dec
add
jmp
in
outsb
add
dec
pushf
out
mov
cmp
in
xchg
lcall
adc
jle
or
cltd
test
jmp
jb
dec
mov
scas
icebp
xor
movsb
scas
push
jno
daa
lahf
and
js
push
ret
jge
push
adc
fsts
icebp
in
sti
sti
add
popf
imul
jne
fldcw
inc
aam
jo
mov
mov
cmpl
cmc
cmc
mov
and
sub
das
imul
or
xchg
jno
bound
jne
add
inc
dec
cmp
mov
mov
outsb
cmp
lods
mov
xor
push
mov
xchg
add
push
add
mov
into
mov
xchg
js
mov
aaa
mov
push
pushf
lock
mov
push
les
push
or
jbe
fiaddl
outsb
cmpb
rorb
cmc
or
mov
icebp
shll
or
enter
or
mov
and
push
out
push
dec
xor
push
xor
cld
arpl
lcall
mov
mov
pop
addl
xor
push
xor
xchg
inc
fs
in
dec
push
mov
test
mov
pop
sub
aam
adc
enter
cmp
mov
add
jno
mov
cwtl
cli
out
and
push
add
push
and
xchg
aaa
cmp
pop
ja
mov
or
jno
sub
push
faddl
or
jecxz
mov
mov
lahf
or
lods
adcl
pop
out
mov
ret
push
ljmp
dec
enter
push
xchg
jp
cmp
in
insb
mov
mov
pusha
shll
jo
out
xchg
cmpsb
add
cs
dec
enter
adc
add
dec
ss
mov
xor
sbb
sub
pop
call
mov
ss
mulb
jns
in
mov
imul
or
xchg
loope
out
rclb
jo
add
cmp
cmc
fsub
bound
xor
inc
sub
pusha
dec
xchg
inc
push
add
sti
pop
add
mov
xchg
jp
mov
push
loope
adc
das
xlat
jl
pusha
cmp
and
inc
cvtps2pi
lret
les
jmp
add
xor
sub
mov
dec
add
dec
jnp
adc
inc
scas
mov
dec
adcl
xor
and
lods
jle
pop
sub
mov
mov
xchg
lahf
sbbl
cli
nop
xchg
pop
sub
out
insb
lret
xlat
push
in
out
sub
inc
push
jno
stc
sub
or
test
push
push
imul
dec
xlat
adc
xchg
mov
into
fyl2x
decb
scas
out
push
add
pushf
xchg
sub
in
loopne
or
inc
sub
push
dec
push
mov
das
sbb
loope
mov
test
pop
mov
sbb
jnp
jg
fwait
push
popa
jbe
stos
inc
daa
outsl
jmp
imul
int3
or
mov
xor
push
rcll
xor
sub
pop
and
ficoml
mov
jne
aad
test
insb
or
mov
pop
sub
gs
fistps
sub
rorb
cmpb
xor
xchg
ljmp
repz
pop
sub
sub
sub
and
and
jecxz
pop
xchg
sub
push
lods
add
insl
xchg
lret
add
xor
call
push
aaa
ss
pop
push
jl
mov
jo
fisttpl
xchg
push
push
jecxz
xchg
pop
repz
cmp
xor
xchg
cmpsl
jo
add
cltd
mov
or
aam
sti
cmpsl
jecxz
cwtl
test
std
dec
sbb
enter
es
pop
lret
test
enter
adc
sub
lods
adc
dec
push
or
or
sbb
dec
xchg
enter
pop
test
and
xor
sarb
rcl
or
and
dec
ss
or
push
test
lea
mov
fcoml
inc
push
imul
xor
addr16
test
jns
shlb
popf
sub
sbb
push
mov
pop
in
mov
add
cmp
outsb
and
outsb
imul
xchg
rorl
cmc
xchg
arpl
xchg
pand
mov
push
cwtl
lea
lcall
dec
in
imul
push
sti
or
dec
xor
xchg
rolb
into
imul
adc
dec
or
test
pop
outsb
stos
push
ja
lahf
dec
pop
addr16
and
add
test
adcl
cmp
leave
xor
test
icebp
andb
pop
push
mov
je
dec
popa
je
popa
lods
xchg
pushf
or
mov
mov
inc
add
push
sub
nop
andl
cmc
loopne
or
fnstenv
dec
add
sbb
adc
bound
stc
push
lock
cwtl
mov
xchg
ds
jp
jmp
in
sahf
aaa
div
movsb
or
loopne
sub
imulb
jno
mov
cmp
xchg
fdivl
cli
fcoms
bound
or
dec
sahf
aaa
sub
mov
mov
mov
sbb
cmp
and
fwait
je
in
in
xor
popa
fs
cmc
jno
std
add
out
jmp
adc
inc
push
jo
pop
iret
out
inc
sub
sub
das
nop
mov
outsl
jl
or
leave
mov
adc
push
mov
jno
out
sbb
leave
ss
hlt
sub
fisttpll
or
mov
and
mov
add
push
movsb
adc
scas
nop
cmpsb
cmpsl
cmp
mov
shrl
adc
push
add
iret
and
aad
inc
arpl
xchg
push
sbb
movsb
or
sub
mov
jg
shl
cmc
jge
jns
jne
jno
and
lret
idivb
xchg
pop
xchg
mov
add
jbe
or
sub
cwtl
sbb
xor
xor
pop
jg
dec
sti
push
dec
inc
aad
int
adc
xor
lods
pop
xchg
add
movsb
sbb
lock
mov
and
out
push
aam
jns
movsl
lcall
out
cmc
add
fcoml
fsubs
cmp
mov
pop
xchg
inc
cltd
pop
xchg
cmp
gs
dec
gs
aam
enter
std
outsb
aad
enter
mov
popa
jno
add
nop
lea
xchg
cmp
out
ja
movsb
scas
rcrl
popf
add
testb
push
push
xor
push
adc
sub
dec
mov
inc
or
pop
rclb
dec
xchg
pop
add
xor
inc
mov
jmp
rcl
test
sbb
push
mov
fwait
dec
movsb
sti
add
xchg
out
dec
subb
lret
inc
cmp
gs
push
mov
sbb
mov
jmp
mov
sub
lock
in
sub
ja
rol
pop
push
scas
icebp
lds
cmp
add
repz
rclb
hlt
push
xchg
cmpsb
dec
lcall
call
or
inc
adc
xchg
xchg
in
xor
outsb
test
sti
and
xrelease
loop
adc
dec
push
cmp
sub
add
filds
rdmsr
addl
push
mov
adc
jecxz
sub
dec
cli
lcall
sub
stos
imul
mov
xchg
or
mov
sub
cmp
push
mov
inc
movsb
pop
push
sub
iret
xor
xor
imul
out
cmpsl
je
sub
ret
jno
rclb
mov
scas
dec
sarb
cmc
sbb
xor
mov
mov
sub
xor
dec
sbb
xor
jg
rorl
jecxz
leave
jmp
ror
fcompl
fmuls
cwtl
mov
out
movsb
xor
cmpsl
and
dec
mov
jno
addl
fbstp
and
dec
cwtl
push
cltd
jns
push
out
xchg
aaa
jae
fistpl
push
add
lock
outsb
js
adc
repz
jg
sub
pop
in
fcoml
iret
mov
sbb
adc
out
xor
in
or
imul
pop
into
add
or
daa
add
mov
xor
xor
add
or
jno
aam
fsubl
dec
cld
movl
lcall
add
jne
xchg
mov
ss
pop
imul
jge
sub
xchg
ljmp
dec
fwait
int3
cmp
jo
shl
dec
adc
int
inc
push
mov
je
ret
mov
rclb
cmp
insb
fstpt
cmpsl
jp
adc
leave
cmpsl
imul
aas
lock
cli
xor
push
inc
mov
inc
pop
out
or
jmp
gs
dec
push
mov
enter
adc
mov
xchg
mov
jo
or
mov
js
adc
jecxz
push
dec
xchg
cmp
and
sub
fdivs
cwtl
pop
fmul
aad
adc
add
adc
dec
mov
ljmp
adc
stos
shll
and
adc
lcall
jge
imul
push
in
lea
pop
add
sahf
ret
push
lods
dec
in
add
jno
aas
push
lret
or
test
and
fimull
mov
test
push
stos
dec
cmp
xchg
add
and
xchg
sub
mov
dec
ss
dec
inc
into
dec
xchg
sbb
add
cmp
stos
dec
pop
cmp
or
or
pop
aam
dec
push
or
xchg
dec
ss
lods
rcrl
icebp
cwtl
lret
pop
test
je
and
sbb
pop
dec
dec
mov
addr16
mov
icebp
je
cmpxchg
push
cmpsl
arpl
js
ljmp
imul
push
inc
fists
mov
mov
push
lcall
repnz
icebp
dec
daa
mov
jmp
adc
cmp
sbb
xor
jne
add
sub
lods
fiaddl
sbbl
call
pop
inc
sbb
ljmp
icebp
sbb
and
push
push
xchg
pop
sub
icebp
insl
inc
mov
or
pop
dec
mov
add
jo
xor
int
ja
neg
jno
and
hlt
adc
lret
sbb
in
int
add
mov
dec
decl
add
scas
aam
jb
test
mov
dec
repnz
fimull
sub
adc
mov
xchg
mov
sbb
pop
sbb
adc
je
out
inc
mov
dec
jl
into
add
inc
imul
adc
test
lock
lret
in
dec
push
push
loope
and
sbb
rcrl
dec
insb
or
in
dec
loop
mov
sub
inc
cmp
lcall
adcl
andb
push
fistpl
jno
sbb
je
js
pop
std
ljmp
jp
inc
sub
inc
sbb
sbb
pop
outsl
movsb
fimuls
loop
mov
and
adc
sub
in
xor
pop
lcall
push
adc
sarb
mov
mov
sbb
sub
lahf
dec
or
pop
iret
aaa
xor
or
adc
add
es
dec
outsl
push
addl
out
cli
or
aas
std
and
roll
pushl
sar
into
sbb
out
cltd
push
loope
loope
sbb
adc
es
sub
pop
rorl
int
xor
shll
mov
dec
ss
sbb
inc
adc
dec
leave
enter
clc
std
cwtl
std
dec
out
enter
sbb
push
mov
pop
push
xchg
divb
shll
mov
or
lods
dec
das
aas
dec
sbbb
imul
push
push
or
sub
aad
pop
rclb
pop
loopne
or
mov
xchg
cmp
dec
dec
push
push
push
ja
sbbl
mov
cmpsb
or
pop
idivb
inc
sub
dec
fwait
push
adc
cwtl
repz
pop
sti
addb
sahf
cmp
jno
inc
or
push
into
inc
das
out
jl
fistl
fisubs
mov
jno
aaa
out
xchg
fs
and
dec
pop
not
jge
in
or
mov
in
jl
je
jg
or
inc
adc
sbb
xor
fsubr
sub
rorb
dec
int
int
movsb
xchg
enter
jnp
pop
insl
or
mov
insb
decl
aad
dec
sub
inc
and
lret
mov
mov
add
adc
mov
cld
outsl
inc
add
dec
cmp
in
movsl
and
dec
jb
aam
xchg
or
dec
iret
nop
inc
jb
scas
inc
movsl
push
enter
xchg
jle
mov
sahf
dec
movsl
sub
lds
adc
cmp
and
dec
divl
cmp
xchg
mov
jp
jmp
mov
inc
roll
loop
repz
icebp
mov
daa
ret
sub
push
push
fisubl
sti
aam
lds
ror
add
xchg
fcomip
inc
cltd
dec
push
fistl
out
incl
push
cmpsl
sbb
dec
stos
mov
bound
xor
push
push
mov
sub
inc
sub
xor
icebp
adc
cwtl
and
mov
cmp
adc
popa
scas
jp
insl
pop
inc
mov
testl
cwtl
sub
push
xchg
and
int
pop
cmc
and
cmp
ds
sti
push
test
xchg
adc
mov
push
xlat
loop
pop
sub
in
enter
adc
xchg
pushf
xchg
imul
in
fwait
out
stos
sti
lret
pop
or
enter
cmp
int3
and
test
and
scas
mov
fldl
mov
and
push
cmpsl
push
cmp
or
push
and
pop
push
add
inc
dec
sub
imul
pop
jl
cmp
cmpsl
pop
jecxz
aad
adc
into
dec
int3
fcomp
mov
or
add
pop
and
mov
or
sbb
pop
lret
mov
test
ret
stos
dec
pop
adc
ss
leave
das
cmpsl
pop
pop
jp
adc
pop
pop
jp
adc
inc
sub
pushf
or
outsl
inc
add
dec
xchg
daa
mov
cs
mov
dec
shll
aad
lea
lods
dec
lcall
test
pop
adc
mov
aas
or
mov
add
pop
lcall
mov
push
aas
lds
pop
pusha
cmp
pushf
or
dec
adc
fmulp
and
insb
push
pop
mov
mov
adc
lret
cmp
and
es
xchg
sbb
lcall
lods
inc
sub
jge
xor
inc
fidivrs
inc
pop
mov
stos
push
push
lds
push
fists
dec
out
inc
push
lret
ret
dec
mov
xor
sub
push
fs
in
inc
dec
sbb
adc
fistps
scas
mov
movsb
jge
sub
mov
sub
dec
insl
dec
daa
cmp
out
pop
or
sub
mov
sarb
inc
mov
aad
ss
lods
sub
xlat
inc
add
adc
jo
movsl
es
daa
sub
in
xchg
loopne
sub
or
retw
cmpsl
popa
cmp
mov
outsb
mov
shr
ljmp
adc
mov
sub
jnp
stos
cmp
cmpsb
adc
jne
pushf
push
lahf
jno
test
aas
ss
movsb
mov
push
push
inc
scas
jg
push
jg
cmpsb
inc
fiaddl
push
sbb
mov
cli
aad
mov
shl
test
shrb
adc
mov
stc
pop
pop
cmp
push
int
lea
loopne
int
mov
add
adc
mov
lods
add
imul
mov
pop
dec
sbb
add
push
xchg
cmc
or
hlt
das
cli
adc
lods
and
cld
iret
imul
cmp
or
mov
aas
scas
inc
call
mov
dec
fldenv
adc
push
fs
or
xor
ret
orb
adc
mov
jno
jb
cmp
enter
int3
cmp
pop
or
and
loop
cmpsl
call
push
js
mov
xor
cmp
stos
jge
enter
push
pusha
add
mov
popa
push
xchg
push
or
cmp
add
add
dec
into
add
rorb
xor
mov
cmp
fmul
nop
fmuls
lret
js
test
xchg
or
xor
xchg
add
add
cmp
adc
cmp
in
and
add
repnz
jno
adc
in
xchg
mov
lds
mov
in
arpl
mov
divb
adc
fwait
sar
jge
sbb
mov
rcll
mov
outsb
add
xchg
out
cmpsb
and
xchg
mov
rclb
add
pop
mov
stos
aaa
add
cmc
xor
and
sti
xor
pop
sbb
sub
scas
int3
adc
mov
cmpsl
out
pop
or
roll
cltd
fdiv
sub
outsl
out
addr16
insl
cmp
jns
int
orb
fisttpll
xor
arpl
push
insb
sbb
mov
push
mov
cmc
call
adc
int
cmp
popf
adcb
inc
scas
mov
and
icebp
adc
push
jnp
rcr
xor
aad
das
jg
fcom
mov
shll
adc
pop
sbb
dec
stc
mov
and
xchg
aad
or
cmp
sahf
aaa
jp
pop
outsb
mov
ljmp
aaa
stos
test
lds
aaa
outsl
ret
pop
int3
lret
xchg
inc
mov
dec
sbb
pop
repz
cmp
mov
rolb
clc
mov
inc
psubusb
or
inc
rolb
aad
int
inc
pusha
into
enter
mov
ss
mov
aad
xlat
xchg
ficoml
mov
repz
into
inc
cmpsl
mov
adc
inc
add
add
sub
hlt
sub
es
mov
xchg
sub
jno
xchg
data16
mov
pusha
push
xchg
dec
pop
mov
fnsave
add
adc
cmp
sub
sbb
icebp
fstps
lret
mov
push
xchg
popf
xor
out
cmp
adc
add
in
add
mov
in
pop
adc
cmp
fmull
imul
fs
icebp
inc
xor
cmp
adc
outsb
jae
mov
cli
jno
or
sub
lcall
mov
je
outsl
popf
push
xor
aad
lds
fstpt
push
xchg
shll
popa
lret
push
mov
pop
dec
stc
xchg
loope
fwait
in
lahf
ja
arpl
rorl
adc
iret
outsb
insb
daa
add
pop
xor
mov
or
fsubrs
insl
das
adc
ja
mov
repnz
add
neg
popf
add
adc
out
or
sub
sub
rclb
stos
or
or
roll
xor
push
xor
fistpl
int3
push
pop
iret
dec
cmp
push
mov
call
mov
andb
dec
sbb
test
adc
out
pop
aaa
xor
adc
push
out
sbb
js
or
rclb
adc
or
add
pause
inc
or
adc
mov
push
add
jge
inc
xor
fdivr
push
into
fildl
test
adc
adc
inc
sbb
and
cmc
and
push
push
sbb
fnsave
mov
inc
enter
cmp
or
push
push
pop
sub
out
dec
jg
daa
adc
cmp
push
sbb
push
dec
in
into
push
stos
xchg
ret
sub
stos
int3
clc
subb
imul
push
jp
adc
cmp
lcall
mov
add
push
dec
add
bound
and
push
sarb
and
div
in
adc
mov
fistl
push
pop
lods
or
clc
mov
jecxz
or
lds
adc
mov
shll
rcrb
aaa
pop
sub
inc
cltd
inc
push
push
xchg
adc
gs
dec
repz
and
les
bound
xchg
inc
inc
lods
mov
push
gs
or
jnp
popw
loopne
ficoml
lcall
sub
clc
lret
fsubl
pop
rcrb
push
cwtl
mov
mov
jns
lcall
or
enter
fisubs
push
push
scas
mov
popa
faddl
sbb
dec
stc
adc
pop
inc
jnp
out
mov
adc
push
fs
add
dec
fdivr
test
cmp
fistpll
scas
inc
aaa
fwait
xor
lock
push
adc
cli
mov
dec
enter
xchg
mov
inc
jo
xchg
mov
movsl
mov
push
pop
dec
jecxz
xchg
xchg
cs
and
and
sbb
cmp
jecxz
ret
rolb
mov
and
aam
push
dec
test
sub
sub
adc
xchg
loope
ja
adc
lock
dec
aam
aas
outsb
xchg
xor
dec
push
or
adc
inc
cmp
jmp
dec
mov
imul
and
dec
jo
mov
adc
push
repnz
fidivl
xchg
dec
xlat
sbb
mov
cmp
pop
int3
push
lock
cwtl
and
mov
into
fstps
cmp
int3
mov
cwtl
push
arpl
xchg
jg
cmc
inc
and
jo
int
sbb
pop
mov
out
dec
pop
fstl
fcoms
rcrl
mov
cmc
aas
pop
fimull
dec
pop
jmp
sub
dec
dec
and
dec
and
cwtl
xor
enter
jne
lods
lret
mov
push
or
aam
or
loop
dec
int3
jle
xor
divb
add
dec
xchg
adc
in
dec
mov
imul
pop
adc
pop
sub
popf
sbb
jno
and
fcoml
in
lea
xor
mov
sbbl
mov
ljmp
jno
rolb
cmp
jmp
and
cld
dec
jle
in
fsts
push
cltd
pop
rcrb
outsb
and
sbb
sbb
rcrb
daa
rolb
jle
jbe
pop
sub
cmc
clc
lahf
sbb
orb
int3
and
jnp
fsub
add
lods
jae
imul
jnp
into
adc
into
xchg
push
jo
mov
addr16
les
in
push
ljmp
jae
xchg
rcrb
pop
data16
add
mov
inc
jno
inc
add
cmp
xchg
xchg
inc
aad
aam
push
addr16
jns
fucomp
gs
sub
dec
out
dec
sbb
sub
insl
jecxz
lea
and
adc
jge
adc
pop
mov
out
test
xchg
add
mov
dec
gs
into
pop
push
xchg
mov
push
fstpt
outsb
aaa
and
xor
adc
pusha
pop
push
push
sub
in
adc
jmp
push
cld
dec
insl
xor
je
aaa
lock
or
daa
js
dec
jne
xor
sub
std
push
push
int3
iret
pop
inc
in
es
cmpsb
nop
jnp
aad
scas
pusha
inc
in
jno
test
sahf
cmp
push
inc
mov
out
inc
orl
repnz
dec
sbb
mov
jns
insl
sahf
lds
or
mov
pop
add
pop
lret
mov
repz
push
or
pop
push
out
call
cmp
into
xor
push
push
negb
xchg
dec
test
inc
and
mov
addl
cwtl
push
push
jno
and
mov
movsb
arpl
jbe
inc
fldl
and
movsl
aam
pushf
std
stos
testl
in
in
cmp
mov
lcall
out
andl
icebp
out
aam
shrb
sti
dec
sbb
push
arpl
inc
in
dec
lcall
mov
les
imul
adc
dec
decl
mulb
inc
sbb
sbb
lret
push
push
sbb
jle
jl
fisttpl
push
push
call
or
stos
inc
fstpl
xchg
adc
sysexit
push
xor
mov
and
out
and
data16
mov
xchg
out
hlt
fwait
dec
dec
add
adc
jmp
mov
pop
add
xchg
adc
pop
lock
mov
leave
jns
or
or
mov
mov
lea
jne
pop
pop
movsl
rcr
push
shr
in
and
sbb
sub
imul
rcrl
inc
bound
dec
sub
push
add
and
insb
push
imul
sub
fldl
dec
fnsave
into
pusha
pop
fwait
lock
int
push
xchg
jno
adc
add
lcall
push
xor
or
mov
jns
xlat
push
sub
mov
inc
jnp
dec
xor
jp
add
icebp
cmp
inc
mov
in
lret
cmpsb
adc
addl
repz
aaa
push
pushf
pop
stos
movsb
notb
movsb
or
jl
or
jno
cmp
inc
stos
push
mov
push
and
adc
adc
testb
loopne
fld
dec
movsl
negl
push
jl
jae
pop
cmpl
xchg
xor
sarl
inc
adc
popf
les
pop
dec
ret
pop
cmp
lahf
adc
mov
das
add
js
add
in
pop
inc
ss
add
add
lds
icebp
dec
enter
cmp
cmc
out
div
sub
dec
ss
dec
insl
cmpsl
dec
inc
push
jmp
enter
xchg
push
sub
leave
andl
sahf
cmc
in
sbb
mov
sub
inc
adc
in
xor
jmp
dec
add
add
and
xchg
fstl
adc
lea
sub
sbb
cmc
inc
or
pop
mov
inc
cmp
dec
xor
jbe
add
inc
bound
jb
ret
or
pop
sbb
movsl
aad
and
sti
dec
and
cmp
push
push
int3
or
push
negl
loope
out
addr16
lds
cmp
shr
or
inc
and
push
fwait
xchg
lret
mov
xchg
dec
movsl
jnp
or
adc
adc
or
roll
xor
mov
adc
xor
popa
aam
cmp
or
gs
std
cmp
int
imul
insl
mov
leave
adc
ss
cmc
dec
das
sar
xchg
jne
xchg
addl
and
mov
jge
sbb
out
add
mov
fsts
roll
xor
xchg
in
xchg
mov
jno
xchg
and
jmp
lea
xor
ss
jmp
scas
ss
xchg
ss
in
cltd
push
sbb
jne
negl
aam
loope
mov
in
add
add
fdivrl
stos
call
cld
out
mov
add
lcall
ret
lds
ljmp
js
negl
adc
pop
adc
out
sub
ss
inc
cwtl
or
mov
push
cld
and
pop
repz
pop
push
adc
pusha
sub
jge
and
jne
and
dec
test
inc
push
mov
xchg
daa
divl
xchg
cmp
xchg
xchg
and
rcrl
mov
rorb
aam
xchg
push
push
lahf
aaa
cld
cmp
pusha
pop
cli
fimull
in
mov
push
data16
or
cmp
test
ror
jns
cli
push
rcll
repz
mov
pop
and
xchg
in
lcall
xchg
ficoml
in
xor
jno
das
outsb
mov
push
outsb
rcrl
dec
lret
adc
cwtl
cmp
cli
mov
in
nop
push
sbb
call
mov
ljmp
xchg
out
jo
mov
fisttpll
jo
pop
ss
mov
in
jo
adc
jo
or
dec
xchg
add
repnz
cmp
aas
fcomp
adc
sub
insl
cmc
stc
and
and
sub
jo
es
mov
sbb
jo
sub
sbb
pop
pushl
adc
jno
in
jne
push
push
xor
mov
sub
pop
or
sbb
dec
ds
jecxz
movsl
dec
and
rorb
xchg
jmp
fisttpl
dec
xchg
in
testb
xchg
jmp
out
fbstp
push
daa
stc
push
neg
or
push
jno
xor
push
dec
mov
or
jb
or
push
insb
pop
loope
lahf
or
dec
pop
push
das
rol
jl
lock
les
push
fcmovu
in
and
inc
in
cwtl
ljmp
lret
mov
adc
xchg
mov
shlb
popa
das
outsb
sub
adc
cmp
inc
fwait
or
inc
sub
xchg
jo
mov
add
inc
sub
adc
in
adc
add
mov
xor
adc
adc
or
xor
dec
mov
into
lret
jne
jns
jns
cmp
shlb
dec
adc
data16
xor
push
dec
xchg
mov
lea
sub
daa
add
enter
aas
aaa
and
ficompl
addl
sub
int
push
aam
xor
loope
cs
lods
or
testb
int
cmc
cs
stc
adc
adc
ss
dec
out
pop
add
pop
dec
cmp
adc
popf
loope
aad
ss
xchg
and
inc
movsl
cs
lret
push
jmp
enter
inc
jb
sub
pop
inc
das
out
inc
dec
aad
sub
lea
leave
xor
and
and
aas
aam
pop
xchg
fcomip
add
cmp
repnz
xchg
or
rcl
or
inc
adc
and
dec
ss
sbb
ss
imul
xchg
and
xchg
and
sub
aaa
aaa
movl
rcr
mov
xchg
inc
push
sub
ret
sbb
pop
or
stc
cmp
aad
pop
pop
ret
or
subb
cmp
js
adc
stc
xchg
sbb
jo
stos
imul
data16
mov
cli
ret
jg
stc
sub
divb
dec
push
int
ds
movsl
mov
fwait
cmp
push
outsl
aaa
push
lods
jnp
adc
mulb
mov
adc
mov
pop
seto
inc
fwait
les
les
cmp
inc
pop
sub
daa
fistpll
cmp
cmp
push
mov
push
push
repz
adc
in
mov
adc
movl
int
add
adc
ja
cmp
inc
dec
cmp
add
adc
arpl
sbb
outsb
xor
out
pop
int3
and
pop
rcll
out
mov
addr16
stos
jge
icebp
in
int
daa
outsb
mov
test
mov
fstl
imul
cmpsb
add
rolb
push
ret
xchg
pop
shr
aad
pop
xchg
jno
lret
mov
std
in
jbe
mov
popa
inc
jne
push
fwait
mov
dec
shll
xor
sbb
xchg
imul
xchg
adc
stos
inc
test
fdivrs
aad
and
push
push
rcrb
into
cmp
cs
or
mov
push
imul
mov
test
icebp
dec
inc
xchg
mov
sub
out
xor
fidivl
popf
ret
xchg
fcomp
or
in
and
cmpsb
xchg
pop
cwtl
push
in
mov
inc
jnp
adc
push
jo
push
imul
add
dec
into
sti
in
adc
mov
mov
popa
or
shll
outsb
xchg
add
imul
pop
inc
fcoml
call
push
cmp
in
clc
int3
or
fldl
push
and
mov
xchg
cli
outsb
add
pop
mov
xor
or
cmpsl
mov
leave
sub
sbb
mov
push
xor
or
adc
push
cmp
or
jns
xchg
stos
dec
cmp
xchg
jns
xchg
ss
push
popa
dec
aad
add
push
pop
in
es
adc
push
jns
cmp
pop
xchg
pop
ret
fsqrt
jae
pop
sub
push
push
int
mov
dec
cmp
fdivrl
sbb
pushw
icebp
inc
and
loope
dec
jo
cmc
inc
jmp
or
push
ja
jo
pop
std
xchg
push
jp
repnz
xor
lret
fistl
ret
and
mov
call
xchg
das
mov
mov
xor
cli
shlb
movsb
lahf
in
imulb
dec
and
dec
cmp
mov
jno
arpl
dec
xor
mov
pop
imul
dec
dec
jno
imul
or
jl
ret
sbb
push
out
fcoms
push
jg
jg
lret
fisttpll
rclb
mov
dec
in
jno
lcall
cmpsl
mov
das
sub
inc
hlt
dec
enter
jbe
adcb
or
pop
rcl
adc
adc
push
pop
mov
aad
sbb
add
aas
adc
aaa
xchg
dec
jno
cmpsl
popa
cmp
push
pop
sbb
sub
inc
add
andb
inc
xor
lock
loop
push
adc
pop
xor
divb
arpl
dec
hlt
ret
sub
test
in
xchg
jno
pop
aad
adc
dec
jmp
jno
pop
daa
or
xchg
inc
and
jo
lds
push
adc
clc
adc
mov
gs
iret
mov
push
cmovns
pop
cmp
cmp
adc
lock
in
stos
and
das
bswap
or
cmpsl
andb
dec
dec
int
dec
cmp
in
gs
es
aas
ljmp
lods
pop
lret
or
leave
gs
dec
scas
jl
dec
adc
lds
repnz
pop
add
pop
aad
adc
loopne
pop
push
mov
or
cwtl
stc
sub
jo
adc
inc
push
inc
mov
inc
cmp
stos
or
test
mov
jmp
push
or
push
in
add
push
std
sbb
icebp
and
jmp
stos
pop
out
adc
aam
push
scas
sub
jbe
push
inc
or
jle
mov
data16
adc
pop
cmp
stc
ljmp
icebp
ljmp
mov
adc
sub
mov
or
negl
sub
and
clc
cmp
out
sub
inc
push
mov
js
jno
movsl
imul
adc
out
mov
push
paddsw
sub
pop
push
add
fidivs
add
adc
add
sysexit
dec
mov
std
and
inc
stos
into
mov
sub
ror
out
mov
aaa
adc
dec
movsb
push
lret
and
stc
mov
cmc
icebp
daa
sub
xchg
xchg
cmc
push
xchg
clc
std
xor
ret
clc
or
or
xor
out
das
pushf
push
add
ss
rol
dec
mov
add
xor
fwait
aad
insl
dec
in
dec
lea
test
sbb
jns
inc
inc
outsb
xchg
aas
std
pop
daa
sbb
dec
cmp
adc
lret
sub
xor
shrl
mov
jl
jl
add
inc
ss
inc
ja
data16
into
fstp
add
push
enter
sub
jl
ljmp
mov
push
in
in
xchg
aaa
adc
dec
aaa
and
jo
into
adcb
adc
xor
adc
sub
adc
xor
insl
fs
out
jns
cmp
mov
ljmp
jge
in
imul
inc
sbb
sub
jns
jecxz
xchg
mov
movsl
inc
test
stc
sbb
in
arpl
or
xor
inc
dec
xor
hlt
stc
push
hlt
int3
jne
hlt
rolb
mov
lock
repnz
in
sar
xchg
std
mov
xchg
std
addb
jo
idiv
sub
jno
lods
dec
imull
cli
icebp
int3
shll
pop
in
orb
sbb
dec
or
xor
jno
inc
mov
aas
sub
loope
in
jbe
xchg
scas
loope
lods
push
fcoms
stos
push
test
or
pop
inc
pop
notl
mov
pop
and
mov
jno
outsl
adc
sahf
mov
call
fucomp
adc
mov
mov
fdivrl
out
out
aaa
mov
call
mov
nop
xchg
icebp
jl
or
or
cmpsb
cs
aad
lea
pop
call
aam
enter
and
dec
and
xor
jecxz
pop
std
xchg
and
clc
rorb
xchg
in
pop
leave
mov
ret
inc
in
push
shlb
test
dec
enter
rorl
dec
sub
fiaddl
or
xor
test
dec
adc
jno
icebp
mov
xchg
sarl
pop
sbb
xchg
push
add
jne
dec
inc
pop
icebp
cmpl
jg
and
jb
cmp
adc
std
lret
mov
inc
jns
out
icebp
xchg
or
dec
fs
pop
shrb
vunpckhpd
int
aad
fwait
push
lcall
mov
dec
lds
sahf
jp
icebp
cli
ja
mov
xorl
cmp
dec
fisttpl
ljmp
or
xchg
popa
sub
mov
out
rorl
or
mov
cmp
ds
repz
xor
aad
call
notl
scas
leave
cmpsb
push
popf
inc
shll
sub
mov
push
lods
ss
dec
int
cmp
sub
push
in
repz
jge
add
insl
push
xchg
iret
loope
ret
xor
enter
repz
push
or
popf
mov
xor
dec
stc
sbb
test
dec
push
arpl
loopne
sbb
mov
shlb
dec
scas
das
xor
nop
lret
ljmp
push
xchg
movsb
adc
mov
pop
mov
out
xchg
xor
lea
ret
ret
adc
jae
add
loop
aaa
cmp
jo
mov
adc
ret
repnz
dec
mov
outsb
imul
das
cmp
decl
cmp
cmp
jno
jb
jecxz
aam
mov
fcmovnu
scas
jge
icebp
movsb
arpl
or
jne
add
sbb
testb
xchg
xor
ss
or
jmp
pop
fnstsw
fsubl
inc
adc
push
sub
or
fwait
fwait
repz
jp
or
rcrl
subl
jmp
pushf
sbb
inc
lock
add
adc
out
orl
pushf
and
lea
or
cs
adc
pop
rcrb
push
dec
mov
pushf
push
pop
inc
out
push
inc
jno
arpl
jo
add
jo
popf
sbb
test
xlat
or
rcl
repz
sub
xchg
cmp
out
fdivl
and
inc
push
push
jbe
ja
dec
pusha
push
insl
and
cmp
jno
mov
push
pop
nop
add
int3
adc
sub
xchg
pop
mov
sub
fnsave
jbe
inc
xchg
cld
xor
sbb
in
dec
push
and
push
mov
int
inc
and
adc
push
pop
dec
or
fistl
adc
test
or
xchg
jo
movsb
cmp
scas
push
andl
das
fdivrl
fdiv
jo
xchg
std
mov
push
dec
mov
das
push
cmp
cmc
stos
inc
pmovmskb
push
pop
sub
xor
fdivrs
adc
and
stos
inc
fstps
xchg
shrl
xlat
in
push
test
outsb
ds
pop
or
in
jno
adc
mov
out
dec
aaa
and
fiaddl
fnstenv
and
mov
sub
mov
mov
xchg
pop
sub
pop
mov
xor
pop
lret
adc
xor
jo
sbb
ret
outsb
dec
add
dec
sbb
sub
bound
dec
mov
cmp
in
pcmpeqd
dec
push
sub
dec
sbb
cmp
in
fs
popf
sbb
xchg
jo
xor
jecxz
lock
test
pop
icebp
mov
dec
push
inc
mov
leave
out
nop
shll
pusha
pop
dec
push
or
or
inc
mov
fcoms
aad
cmp
or
or
enter
mov
cmp
and
jle
hlt
inc
aad
pop
test
xchg
xor
inc
aas
push
push
sub
xor
and
xor
lcall
adc
add
aad
push
sub
and
push
stc
in
fwait
jecxz
cli
mov
jbe
push
dec
addr16
push
pop
add
push
ljmp
ret
popl
cli
push
lcall
push
shll
xor
cmp
and
pop
cwtl
in
xor
icebp
loop
cli
loop
ss
adc
popf
loop
popa
lret
popf
cmpsl
imul
inc
das
rorl
push
push
cmp
lcall
scas
in
pop
xor
xchg
data16
push
adc
pop
popa
dec
cmpsl
dec
movsb
push
xor
divb
cmp
sub
jns
dec
pop
dec
ss
cmp
movsl
jbe
ret
mov
les
mov
cmp
pop
cmc
jno
cmp
dec
jne
aaa
cmp
call
xchg
cmc
aas
movsl
sub
rorl
or
inc
mov
lcall
push
out
divl
std
inc
or
or
adc
adc
cmpsb
daa
sub
ja
cmp
mov
aad
or
mov
shll
and
xchg
in
mov
into
fildl
mov
std
call
sub
pop
cmp
dec
add
subl
orb
adc
fs
add
movsl
arpl
leave
adc
dec
es
xchg
dec
invd
add
lea
jns
jb
mov
adc
add
shlb
movsl
rcll
mov
jmp
popa
pop
adc
sub
dec
das
insl
sti
adc
daa
roll
xor
jno
mov
aad
pop
dec
shll
pop
sub
shll
aam
jnp
test
std
daa
xchg
aam
lea
xor
cmp
adc
fstp
mov
popf
dec
mov
and
inc
mov
into
jo
incl
pop
imul
push
or
dec
repz
pushf
cmp
dec
cld
icebp
adc
pop
sbb
inc
shl
push
mov
cmp
enter
sarb
push
dec
dec
mov
add
into
adc
inc
xor
stc
stc
or
stos
repz
xor
or
or
cmc
sbbl
inc
xchg
lods
cmp
jmp
daa
mov
dec
jno
movsl
aam
mov
imul
jne
enter
adc
adc
test
shrl
xchg
inc
negl
push
js
adc
pop
shll
ljmp
fbstp
scas
inc
pop
imul
jno
hlt
cmpsb
nop
fcmovne
pop
in
xor
arpl
inc
dec
fimuls
movsb
xor
mov
pop
stos
addl
pop
aam
add
inc
sub
jns
mov
push
mov
cmpsl
jmp
sbb
adc
enter
adc
inc
cltd
mov
add
wrmsr
hlt
inc
dec
jns
add
xor
pop
add
mov
nop
movsl
out
add
dec
fimull
popf
pop
mov
push
dec
iret
test
pop
pop
repnz
pushl
inc
icebp
ja
sahf
mov
es
add
push
push
xchg
jno
mov
jne
rcll
sarl
cmp
xchg
lea
add
or
test
xor
cltd
clc
arpl
adc
scas
cli
mov
pop
dec
int3
fldt
sub
movl
dec
jo
cli
into
test
xchg
sbb
pop
fisubl
push
xchg
cmp
ss
push
fldl
mov
js
in
das
xchg
out
aas
sub
cli
jge
push
fcomps
add
outsb
insb
pop
cmp
ficompl
jnp
aad
fsubrl
xor
fldt
or
enter
fisttpl
mov
shl
push
jo
adc
sub
mov
pop
xor
fnstsw
ja
adc
icebp
xchg
lock
push
push
std
jmp
out
fadd
int
mov
aas
inc
pusha
jns
es
arpl
jo
xchg
push
insb
addr16
xor
jbe
xlat
jecxz
pop
inc
dec
aam
pop
sbb
imul
and
jns
jno
xchg
jo
lods
and
movsl
ja
xor
cmpsl
out
bound
cmp
outsb
mov
push
out
in
loop
shlb
arpl
jne
and
int3
lds
xor
cs
push
imul
sub
jo
push
mov
je
adc
pop
dec
aam
rcl
icebp
movsl
pop
xor
cli
xor
int
cmp
adc
pop
or
in
stos
ja
xchg
push
in
inc
xchg
sbb
or
mov
mov
add
jne
clc
sub
in
push
cmp
jbe
in
add
cmp
bound
std
xchg
jmp
jnp
loopne
dec
and
pop
mov
movsb
pop
ljmp
push
push
jnp
sub
jl
and
aad
arpl
imul
add
cli
icebp
lods
outsb
adc
outsl
movsl
adc
cmc
push
push
repnz
and
rorb
jno
aad
inc
jl
pop
test
pop
dec
xchg
cmp
jns
sbb
ret
aad
scas
xchg
imul
adc
dec
cmp
xor
gs
jg
sti
jp
mov
and
pop
sti
inc
adc
adc
xor
sbb
push
dec
mov
pop
or
push
insl
fldl
out
notb
test
jo
inc
ficoml
hlt
xchg
adc
push
dec
add
mov
arpl
jo
pop
xor
lds
dec
or
lods
adc
mov
mov
aas
cmp
addr16
dec
adc
dec
push
push
aaa
xchg
adc
xor
push
rorl
inc
sti
inc
movsl
dec
push
mov
jnp
push
sbb
inc
shl
mov
xchg
cli
push
dec
test
xchg
pusha
aaa
adc
adc
mov
rcr
adc
cwtl
xchg
lret
pop
add
push
nop
push
es
push
dec
add
dec
test
out
rcrb
push
and
je
xchg
add
and
insl
xchg
shrl
in
sbb
std
pop
xchg
inc
mov
cli
aaa
xlat
icebp
push
shll
fisttpl
xchg
jmp
pop
xchg
mov
push
test
rorl
xchg
add
daa
pop
add
mov
rolb
pushf
aaa
ja
and
subl
imul
movsl
aaa
adc
xor
push
outsb
pop
xchg
sub
ds
xor
lods
or
cmp
pop
dec
adcb
dec
add
arpl
lcall
mov
shrl
cld
aad
cmp
add
movl
lahf
in
and
sub
mov
mov
pop
aaa
xchg
pop
dec
gs
movsb
mov
inc
push
lcall
cli
dec
scas
pop
adc
popa
xchg
pop
sbb
push
dec
jno
clc
loop
jp
popa
mov
inc
adc
pop
or
std
push
mov
inc
mov
or
cltd
ret
add
adc
cmp
adc
scas
mov
mov
ljmp
add
jno
adc
inc
push
aam
lea
das
inc
push
movsl
cmp
rcll
orl
inc
push
cmpl
cmpb
imul
xchg
leave
nop
movsb
scas
test
mov
adc
fcmovnb
insl
pop
jmp
push
or
lods
mov
push
ret
lcall
jo
pop
mov
and
outsb
mov
xchg
jge
stos
mov
push
and
fdivl
adc
mov
fistl
into
pop
mov
xchg
and
aas
push
cltd
lret
cmp
dec
dec
inc
enter
adc
add
test
mov
cs
scas
xchg
mov
add
enter
jne
test
jns
jge
xor
mov
pop
add
jle
test
sub
cwtl
movsl
xor
ret
jecxz
getsec
pop
adc
mov
sbb
inc
add
dec
sub
jno
inc
push
pop
movsb
push
sub
aam
in
ss
pop
jb
loopne
mov
fs
add
pop
cld
or
icebp
push
or
xchg
and
out
dec
mov
mov
popf
or
pop
nop
mov
flds
push
adc
xchg
xor
add
outsl
pop
sub
fs
jnp
cs
push
int3
daa
fadds
add
inc
movsl
sub
incl
mov
aam
jne
sarl
fidivs
lret
cmp
mov
inc
push
cmp
int3
mov
xchg
sub
iret
xchg
cli
adc
xchg
jo
popa
push
enter
sub
xchg
insl
loop
sub
push
xchg
fiaddl
in
jbe
push
push
mov
out
sbb
cmp
fldt
push
jl
sub
in
inc
pusha
aas
push
dec
andl
jo
call
out
pop
push
xchg
and
cmpsl
sbb
mov
dec
sbb
mov
mov
outsb
sub
pop
jecxz
inc
rcr
jne
xchg
rcll
notb
dec
push
pop
cmp
mov
push
loope
adc
pusha
pop
std
add
and
test
cmp
mov
fcoml
out
out
push
pop
lcall
ss
jae
sti
enter
xchg
mov
xchg
sub
xchg
jne
cmp
push
inc
int3
sbb
and
shrb
push
loope
aad
add
lret
mov
xor
pop
jae
shll
add
gs
sbb
add
pop
push
mov
in
push
std
xchg
loope
push
stos
arpl
jo
rorl
mov
jb
mov
nop
sti
cli
mov
push
out
and
mov
jmp
loop
shll
repnz
push
add
lock
pop
push
sti
sub
rolb
or
pushf
in
mov
imul
test
xchg
iret
ret
jg
push
pusha
test
cwtl
xor
aaa
push
xor
mov
xor
loope
jne
lds
cmp
and
rorb
jno
aad
inc
xchg
jge
test
sbb
jae
cmp
jne
sbbb
leave
cmp
insl
dec
aaa
mov
mov
dec
mov
xchg
psllw
rorb
push
movsl
sarl
adc
inc
sub
dec
push
dec
fmull
stc
mov
or
jo
inc
mov
inc
adc
inc
push
inc
inc
es
mov
pop
and
add
xchg
mov
aaa
out
ror
pop
out
leave
add
fldt
mov
push
push
ss
add
sahf
jns
mov
dec
subb
ss
or
push
adc
movsb
aam
mov
pop
hlt
dec
sub
add
mov
rcrl
dec
push
pop
xor
dec
push
fcoms
lock
out
test
fnstsw
xor
push
jnp
arpl
adc
and
sub
mov
mov
and
sbb
insl
insl
inc
jno
dec
adc
sub
adc
mov
mov
mov
mov
push
aaa
pushf
jae
icebp
loope
add
das
inc
popa
cmpsl
stos
popf
sar
loop
pop
lock
pusha
std
movsl
notl
out
ret
hlt
xor
pushf
push
das
push
push
sub
adc
stos
and
mov
cli
adc
dec
in
daa
mov
push
test
outsb
push
jmp
pop
pushf
xchg
or
fwait
xchg
in
jbe
mov
sub
adc
push
rclb
mov
dec
outsb
outsl
je
shrl
icebp
sub
xlat
pop
xchg
mov
inc
mov
sbb
sahf
push
inc
fstpl
adc
or
jno
dec
xor
fsubrp
add
mov
sti
push
add
lcall
imul
or
test
pop
movsl
sub
inc
adc
and
inc
das
adc
or
sbb
out
or
sbb
mov
push
xchg
mov
int3
into
pop
add
ret
repz
cld
inc
andl
inc
dec
es
cmp
test
inc
mov
push
add
pop
pusha
push
mov
xchg
out
and
dec
mov
ret
imul
push
and
cwtl
pop
outsb
aam
imul
jno
add
cld
mov
aam
cmp
fistl
roll
aas
repz
fst
inc
pop
scas
cmc
mov
icebp
mov
push
jno
jbe
jl
jne
jb
mov
sbb
add
scas
dec
lcall
adc
rolb
xchg
ret
les
outsb
xchg
push
frstor
int
or
mov
aaa
jno
mov
add
jecxz
push
dec
fwait
mov
dec
mov
and
mov
sbb
popa
scas
mov
mov
mov
pushf
jb
adc
cmpsl
jecxz
adc
dec
jo
jo,pt
xor
out
mov
mov
outsb
ret
lods
mov
sahf
fnstenv
xchg
sub
pop
ja
test
mov
cltd
mov
xor
xchg
jno
adc
xchg
xor
dec
scas
pop
cld
je
xchg
mov
sbb
xor
cli
cltd
or
fistl
mov
cmp
dec
push
fiadds
ror
and
popa
inc
dec
adcb
mov
roll
and
xlat
and
cmpl
test
scas
sbb
pop
add
sbb
adc
imul
shl
lcall
inc
jns
mov
pop
sbb
mov
mulb
imul
mov
mov
xor
scas
xor
dec
andl
mov
lods
aaa
popf
sbb
and
adcl
cmp
adc
or
test
ficompl
stos
and
mov
fcoml
and
dec
pop
jnp
pop
jge
push
jo
pop
xchg
clc
in
inc
mov
xchg
push
pop
jno
ja
mov
fs
arpl
jne
sbb
cmpl
jne
jno
sub
std
inc
leave
add
mov
cmp
inc
sbb
aam
lcall
cwtl
or
and
sub
loope
xorb
inc
inc
xor
imul
imul
imul
add
lea
icebp
data16
sbb
dec
lea
mov
lret
int3
movsl
mov
jne
xchg
jo
daa
les
mov
js
pop
inc
jge
lcall
xchg
jge
adc
ja
xor
dec
pop
jne
mov
pushf
xchg
inc
out
dec
scas
sbb
dec
fnstsw
cltd
lret
fdivrs
mov
cmp
iret
pushf
dec
xor
cwtl
add
jle
inc
mov
lret
adc
leave
ror
scas
pop
jmp
in
inc
aaa
xchg
dec
mull
sbb
aad
mov
jno
jno
lahf
sbb
jo
pop
fistl
rclb
jo
outsl
data16
ljmp
sub
sub
pop
aam
aas
mov
push
jle
outsb
shlb
push
test
fdivp
jns
ror
pushw
inc
int3
or
mov
xor
leave
sub
push
fbstp
popa
or
loope
popf
sahf
or
sahf
sbb
popf
add
ficompl
sub
aam
int
out
adc
shlb
int
call
xchg
or
mov
dec
push
push
insb
and
ss
cmp
xorl
adc
out
fidivl
iret
fdivrl
mov
or
and
adc
cltd
dec
cmp
pusha
rcrl
std
hlt
addr16
cmp
xchg
inc
fimuls
lods
or
out
push
and
push
push
ficoml
int3
sub
aaa
mov
ret
inc
lcall
mov
std
adc
out
aad
jb
pop
sti
leave
xchg
cmp
aas
sbb
aaa
mov
and
pop
hlt
mov
test
and
ljmpw
loope
cmp
imul
inc
outsb
lret
int
push
or
and
xor
sub
fwait
mov
xchg
lods
jno
jmp
dec
arpl
fwait
mov
xchg
pop
jae
pop
adc
mov
xor
adc
scas
mov
inc
je
xchg
jno
adc
mov
sbb
subl
mov
sarb
insb
xchg
arpl
add
cli
inc
mov
xchg
into
dec
cli
mov
pop
mov
ret
cmp
ja
lods
nop
sub
or
ret
lods
xor
addr16
nop
adc
push
test
imul
add
insb
test
lock
dec
sub
push
fwait
mov
xor
dec
xor
add
movsl
cli
mov
xchg
or
pop
js
sbb
ss
ret
jge
inc
mov
xchg
sbb
adc
fsts
adc
pop
sub
test
push
gs
imul
add
add
and
xor
in
into
cmp
mov
cmp
fwait
jl
imul
cmp
adc
sub
pop
adc
faddl
adc
pop
xchg
push
xchg
push
pop
dec
mov
iret
xor
dec
inc
inc
repnz
push
xor
dec
outsb
ret
cmc
add
dec
in
out
fimull
js
pop
jnp
iret
inc
jl
or
leave
inc
shl
mov
mov
loop
sahf
adc
mov
addr16
into
sbbb
xchg
in
push
cmp
aaa
and
push
push
inc
mov
inc
cmc
outsb
cmpsl
fistpl
push
xor
pop
sub
mov
xchg
push
jns
or
lock
mov
aam
jne
and
xor
sub
test
aas
push
dec
inc
lock
fnstsw
jbe
mov
push
jo
shrb
movzbl
xor
ret
xorl
lods
ret
mov
pop
inc
lret
mov
test
dec
pop
lret
pop
cltd
sub
add
scas
and
adc
cpuid
pop
leave
cmp
mov
roll
inc
or
dec
inc
movsl
stos
gs
cli
cmpsl
or
push
cmc
shl
push
pop
xor
dec
inc
jge
inc
cmpsl
scas
out
inc
jg
xor
push
add
gs
jns
mov
xchg
cmp
adc
test
clc
dec
xor
js
sbb
cmc
les
pop
test
fcoml
jb
gs
in
aaa
inc
cmc
inc
or
arpl
inc
push
or
inc
and
push
test
in
dec
cmp
push
aam
lea
xchg
push
inc
add
mov
add
xor
mov
cmp
mov
cmpsb
xor
inc
sub
pop
inc
push
sbbb
pop
ss
mov
pop
int
dec
xchg
mov
dec
jno
mov
jge
cmc
dec
scas
in
jg
stos
inc
packuswb
xor
test
roll
cs
jno
push
mov
fildl
lds
cmp
stc
test
jb
dec
mov
pop
cmp
mov
gs
call
mov
jns
dec
jne
jno
hlt
xor
int3
adc
test
aaa
dec
xor
inc
cmc
sub
dec
dec
sbb
push
mov
pop
dec
sub
aaa
inc
jne
ljmp
pop
clc
call
pop
add
xchg
aad
in
dec
flds
imul
xor
add
add
addr16
repnz
jb
and
das
mov
syscall
cmpsb
xlat
mov
addr16
popf
xchg
adc
subb
loope
fxch
fcmovbe
shr
sub
pop
decl
sbb
movd
mov
rcll
fwait
sbbl
push
testl
out
dec
mov
rol
sar
ljmp
dec
xchg
cmp
xchg
inc
and
inc
jb
and
dec
pop
inc
out
dec
in
mov
mov
jp
rclb
subl
or
inc
inc
dec
ja
rcrl
push
jge
xchg
jo
xchg
loope
jno
push
and
xor
inc
dec
gs
mov
sbb
and
and
mov
mov
pusha
xor
imul
subl
les
push
in
sub
cmc
add
push
sbb
rorb
aad
pop
loop
xchg
cld
movb
xchg
jecxz
dec
or
xchg
fistps
dec
cmp
popf
jbe
orb
ja
cmp
mov
xor
mov
jno
sub
insl
into
pushf
cmp
dec
repz
mov
and
mov
inc
movsb
xchg
fdivr
aad
inc
fisubl
pop
lock
gs
arpl
pop
inc
lret
xor
mov
xor
pop
stos
test
xchg
cmp
inc
sub
mov
gs
fldenv
jmp
cmc
shll
mov
sub
scas
cmc
jo
lods
add
fidivrl
insl
push
dec
js
fcomps
subl
xchg
inc
outsb
cmpsl
test
inc
std
adc
loopne
xchg
in
les
fcmovnb
adc
sbb
fnstenv
pop
fnstenv
xchg
sub
adc
sub
inc
jo
pcmpgtw
je
data16
dec
popa
es
imul
cmp
pop
inc
lds
ja
fisubrs
stos
push
jg
pop
xchg
mov
insl
flds
sbb
cli
xchg
add
gs
outsb
roll
xchg
cmp
mul
insl
inc
push
pop
int3
enter
insb
xor
push
dec
outsb
into
mov
out
sbb
mov
xor
push
push
hlt
or
outsb
iret
stc
clc
scas
push
push
add
stos
xor
mov
or
out
arpl
xor
fldl
push
mov
movsb
mov
xor
sti
mov
or
pop
fdivl
dec
loop
outsb
fwait
pop
leave
mov
in
int
test
mov
rorl
cmp
add
xlat
add
or
adc
dec
push
leave
adc
cmpsl
adc
or
add
pusha
push
push
sub
adc
cmp
fsubrs
inc
jge
les
xchg
sub
and
nop
add
sbb
test
sub
std
aaa
add
cs
shll
ss
adc
pusha
sarl
xlat
jnp
aad
popa
repnz
jne
and
frstor
hlt
mov
lret
mov
push
inc
sbbb
mov
ja
and
add
mov
pop
or
xlat
sub
dec
dec
aad
pop
pop
jno
fcomp
push
add
xor
mov
or
dec
push
adc
lret
stc
mov
or
mov
shlb
fcoml
ret
mov
lret
pop
rcll
je
add
pop
sub
sub
ret
lcall
movsl
stos
in
inc
imulb
imul
int
cld
cmpsl
mov
fadds
xchg
sahf
sbbb
scas
sub
adc
xchg
scas
or
jmp
popa
fwait
xchg
es
shlb
fs
push
sbb
popf
inc
mov
jge
adc
out
inc
sbb
sub
xor
or
jp
sub
cmp
into
adc
daa
rclb
add
cs
cmp
inc
push
inc
dec
leave
push
mov
jns
cmp
xchg
push
aas
xlat
mov
js
movsb
pusha
sti
shrl
cmp
push
pop
sahf
sbbl
xchg
inc
in
lock
enter
ret
cmp
and
ss
xchg
or
sub
and
sbb
push
mov
adc
push
cwtl
in
jle
xor
dec
and
or
clc
and
scas
into
cmp
in
cwtl
and
dec
push
sbb
clc
imulb
cs
jne
daa
in
repz
int3
imul
cmp
lds
mov
mov
and
sbb
in
dec
mov
sbb
fmull
dec
dec
rorl
adcl
xchg
cwtl
mov
ss
ret
cmp
push
xor
repnz
icebp
shl
mov
push
push
mov
cmpsl
push
sbb
pop
fbld
fsubs
dec
ljmp
cmp
pushf
adc
and
fidivl
pop
dec
inc
adcb
inc
aad
mov
lea
mov
sbb
sbb
inc
jne
or
jmp
sbb
push
dec
push
pop
or
dec
jnp
push
arpl
mov
or
aas
aad
aad
dec
add
pop
sub
rcll
pop
loopne
mov
orl
cli
dec
das
icebp
inc
cli
sbb
cwtl
adc
ret
push
xor
mov
adc
cmpsb
or
inc
enter
inc
jl
add
int
cmp
addr16
rorb
call
or
mov
minps
and
mov
pop
rcrl
xor
mov
jnp
pop
into
aam
xchg
stc
and
mov
shrl
xlat
jmp
imul
call
mov
test
call
cmp
loop
popa
mov
pop
jo
pop
aaa
push
aad
dec
repnz
sub
push
cmp
sbb
subb
inc
call
sbb
push
lock
mov
int3
lods
ja
clc
jno
pop
push
mov
add
add
or
icebp
fldenv
aad
cltd
and
int3
add
push
dec
push
jo
test
adc
sbb
shl
jecxz
int
aam
testl
xor
pop
daa
push
push
movsl
insl
pop
and
aam
adc
jo
pushl
gs
jns
jo
scas
out
dec
add
sarb
pop
adc
mov
dec
jecxz
adc
lods
inc
fstpl
int
push
lret
inc
movb
pop
cs
or
aad
pop
test
push
js
outsb
mov
lea
add
xor
pop
push
jne
stos
push
inc
aam
stos
int
in
mov
xor
cli
mov
inc
pop
adc
mov
mov
enter
inc
xchg
into
push
cmp
xchg
js
and
jno
lcall
xchg
icebp
inc
mov
scas
xor
xchg
sahf
and
push
in
fdivr
and
movsl
lcall
jp
loop
jae
out
dec
push
cwtl
mov
jo
roll
mov
add
jecxz
add
cmp
icebp
jge
xchg
jns
sub
fstp
mov
mov
sbb
xchg
aaa
movsl
fisubrl
xorb
cmc
jmp
lods
and
nop
pushf
cmc
and
jge
push
and
nop
sbb
andb
shlb
xor
daa
cltd
les
cmc
xchg
frstor
sub
cltd
jle
icebp
and
fcompl
and
mov
and
and
sbb
xor
jo
cmp
cld
popf
stos
adc
int3
add
or
rcr
xchg
jno
inc
or
cmp
out
sbb
mov
pop
xor
mov
cmp
popf
cmc
movsl
lcall
sahf
sub
xor
enter
std
jo
cli
xor
aam
movsl
ja
inc
xchg
lea
pop
ja
sahf
inc
add
and
pop
test
inc
in
sub
lock
jnp
and
and
daa
mov
pop
push
push
jno
mov
cmp
adc
pop
mov
inc
and
dec
leave
and
rol
mov
mov
movq
push
jg
cmc
add
xor
add
movsl
in
pop
aam
pop
test
pop
inc
subl
pop
in
mov
and
daa
add
movl
fcompl
lea
pop
dec
add
mov
call
cmp
pop
mov
dec
sti
xchg
xor
test
lods
clc
lods
mov
or
add
sbbl
ret
adc
inc
push
cmc
jnp
lahf
jo
scas
cli
xor
dec
jne
inc
mov
cmp
jo
pop
mov
aaa
or
cltd
xchg
and
cli
adc
iret
xor
push
pop
ja
mov
xchg
popa
push
dec
push
leave
sbb
shrl
xchg
pop
mov
insl
lods
xchg
xchg
push
outsb
in
pop
dec
mov
mov
test
pop
dec
cli
jbe
inc
mov
mov
cmpsl
movsl
inc
mov
lcall
mov
add
push
xor
push
sbb
add
mov
or
inc
rorl
int3
xor
jae
pusha
orl
mov
ds
or
or
jbe
nopl
add
jnp
sub
imul
sub
push
insl
int3
dec
push
in
leave
cmpb
inc
push
aas
sbb
int
sahf
and
ret
mul
cli
jecxz
push
jl
sbb
add
enter
mov
pop
or
inc
int3
xor
inc
pop
aam
bnd
aad
loop
push
dec
fst
xor
fists
inc
push
repnz
push
lret
mov
je
and
xor
add
inc
dec
mov
fwait
or
rolb
push
mov
sub
das
int
and
sub
outsl
lea
cli
push
ret
add
adc
mov
cmpsl
adc
test
fmul
push
daa
add
cmpsb
leave
sub
dec
cmp
das
addr16
loope
cli
outsb
in
sub
jo
movl
mov
pop
inc
aad
add
test
xor
clc
adc
push
gs
decb
movsl
arpl
filds
movsb
out
mov
dec
mov
cmove
inc
ror
jb
popa
leave
lds
imul
xchg
mov
outsb
aam
sub
inc
or
add
mov
inc
int
xor
mov
es
pushf
mov
mov
push
pop
rcrb
in
xor
leave
cmc
add
in
lcall
addb
pop
xchg
adc
xchg
push
xchg
enter
jecxz
push
inc
xchg
and
sti
in
add
js
and
in
add
jno
jnp
jb
out
gs
outsb
jle
subb
adc
mov
ret
mov
jp
jb
mov
loopne
fisubl
push
xchg
adc
in
pushf
mov
add
adc
push
es
pop
xor
ret
loope
insl
push
push
jno
mov
aad
adc
pop
push
jl
pop
les
jl
and
pop
xchg
insl
in
pop
mov
call
mov
dec
pop
and
test
or
sub
xor
pop
pop
in
insb
cmp
jno
jg
aas
setge
sub
rorl
mov
adc
add
ret
repz
daa
ss
dec
and
es
das
mov
mov
mov
xchg
cmp
lock
in
or
lea
cmp
icebp
xor
fidivrl
ja
call
test
arpl
push
rolb
std
adc
or
xchg
daa
push
dec
xor
adc
lret
pop
lea
xchg
mov
dec
jno
pop
movd
dec
xchg
push
mov
jns
gs
xchg
aad
loop
fs
lds
insl
ja
inc
test
int3
enter
mov
cs
in
insl
rol
imul
and
mov
xlat
mov
dec
andl
cmp
test
fldt
jg
test
stos
cmpsl
test
sub
cmpl
mov
inc
adc
daa
mov
lock
bnd
sub
jl
cmc
add
stos
lcall
dec
icebp
sub
xchg
pop
sbb
sub
gs
sub
pushf
add
mov
push
jo
fwait
xchg
cmc
outsl
aaa
and
test
mov
int3
and
cld
push
mov
pop
lds
cs
and
mov
adc
aam
push
sbb
pop
outsb
jno
cli
adc
unpcklps
mov
push
cmp
adc
xchg
mov
sahf
sub
adc
adc
addr16
rolb
fsts
adc
xorb
and
insl
push
mov
adc
sub
mov
imul
add
cmc
adc
cld
repz
in
lcall
outsl
xchg
cmp
adc
sbb
lret
outsl
dec
fistpl
imul
or
cs
nop
andl
sti
add
push
and
jbe
imull
movsl
aaa
jge
out
adc
fistps
sub
subb
test
mov
hlt
and
sub
sub
adc
xchg
mov
dec
loopne
jb
xor
xchg
sub
stos
aam
jge
xor
xor
jae
push
xchg
add
loop
ljmp
push
add
insb
add
lock
add
test
lret
into
cmp
xor
roll
add
daa
adc
pop
stc
cmpsb
cld
add
das
mov
subb
xor
xor
sbb
sub
pop
and
add
out
pop
cs
lods
push
adc
clc
filds
xor
jp
mov
mov
push
popa
or
inc
mov
lods
loopne
pop
cmp
mov
mov
stos
in
mov
cli
aas
adc
jne,pn
dec
dec
sbb
push
dec
push
in
pop
push
in
ret
les
mov
push
out
in
mov
xchg
adcl
sbb
pop
fistpl
enter
dec
test
pop
dec
jge
pop
ja
jl
and
jp
xor
cpuid
jp
lods
pushf
xor
es
into
leave
sub
fldl
xchg
push
sub
popa
jnp
push
dec
and
outsl
sbb
daa
iret
sub
ficoml
loop
dec
xchg
popa
das
cltd
xlat
and
aad
fst
dec
cmp
fstpl
movsb
testl
enter
mov
xchg
or
aaa
inc
in
sti
xchg
and
dec
jecxz
xchg
cmp
mov
out
mov
fwait
cmp
xor
into
xchg
mov
push
xchg
outsb
add
and
pop
into
pop
jl
das
lock
push
or
push
icebp
adc
push
repz
cmpsl
add
or
cmp
inc
add
outsb
mov
shlb
jle
inc
sar
adc
mov
in
cmovp
push
fisubs
push
test
add
jno
mov
mov
cli
fwait
pop
fwait
and
adc
das
lcall
cmc
ss
inc
add
fdiv
es
lret
dec
rcl
in
outsl
popf
cmp
ret
push
call
sbb
adc
push
sti
sbb
outsl
inc
push
fstpt
test
dec
in
pop
rclb
push
fdivr
rorl
shll
adc
inc
dec
pop
push
add
aas
jl
and
dec
lret
test
push
pop
fcom
pop
jo
mov
nop
stos
push
in
xchg
sub
fldlg2
mov
shlb
rsm
mov
xlat
pop
icebp
shlb
lcall
inc
cmp
mov
inc
cmp
fnstenv
call
rcr
or
aaa
hlt
xchg
or
add
mov
lea
imul
imul
cmp
push
cwtl
call
iret
mov
sub
sub
roll
xchg
xchg
in
push
xor
aam
jno
mov
pop
mov
sbb
les
jno
btr
addb
lret
dec
adc
xchg
dec
sub
outsb
push
mov
and
aam
es
pop
test
or
push
insl
mov
outsl
aad
stos
and
pop
outsl
or
movsl
mov
imul
push
rorl
dec
arpl
aaa
lcall
insl
loop
leave
add
push
ffree
ror
loopne
mov
push
incb
scas
adc
inc
dec
into
mov
sbb
test
mov
lahf
mov
pop
sti
jne
add
cs
xor
cmp
ds
popf
jl
imul
out
mov
aaa
fsts
shlb
lods
inc
shr
lret
mov
pop
fmuls
js
cs
in
cmp
insl
pushf
dec
cmp
xchg
dec
add
pop
mov
cmp
pusha
shll
xor
inc
dec
cmp
add
dec
push
imul
lock
xchg
outsb
aam
mov
and
and
dec
dec
cltd
popa
lea
add
push
sub
outsb
jb
call
jno
add
xor
mov
or
xchg
cltd
sub
and
or
leave
pop
inc
hlt
and
and
push
leave
pop
repnz
repnz
por
add
cs
and
repnz
lcall
fsts
insl
jno
push
cmp
rep
fisttpl
inc
mov
dec
loopne
xor
data16
data16
fbld
jp
and
pop
movsb
icebp
sarl
and
popa
cs
test
outsb
arpl
or
xor
xor
xor
fstps
fisubl
ret
loop
adc
and
in
push
jmp
sub
jae
adc
cmp
scas
dec
sub
and
jp
movsl
out
sbb
pop
push
dec
add
es
sbb
or
add
out
nop
xchg
and
stc
dec
jb
sbb
arpl
mov
aaa
push
xor
add
dec
jo
shll
or
in
cmp
es
push
adc
push
inc
rclb
dec
enter
pop
push
xchg
in
xor
fwait
subl
sub
pop
xchg
or
pop
pop
stos
mov
divl
push
cmp
xchg
fdivs
pop
push
shlb
inc
push
daa
in
dec
cmp
data16
cmp
aaa
dec
in
cwtl
call
aas
push
or
inc
pop
fisubrs
outsb
mov
xor
test
xor
ds
inc
xor
dec
popf
jmp
jne
icebp
dec
xchg
adc
int
scas
mov
ljmp
movl
fwait
pop
fadd
dec
cmc
add
bound
and
adc
push
jne
xor
mov
add
pop
jo
mov
lock
int
into
int3
xor
sbb
add
daa
xor
notl
push
push
jg
inc
jle
rorl
shll
and
testl
sbb
xor
inc
dec
push
inc
idiv
std
call
shrb
push
pop
xorl
test
push
xchg
popa
into
jb
fdivrs
out
dec
loop
dec
loop
inc
dec
icebp
xorl
inc
movsb
add
dec
sub
cmpsl
inc
nop
push
jo
shlb
push
gs
xor
fwait
add
jns
insb
into
jns
daa
jmp
les
and
fwait
call
sub
mov
push
dec
and
test
sti
cmpsl
je
gs
sub
imul
or
repnz
outsl
dec
in
or
lcall
icebp
inc
push
sub
les
adc
adc
or
add
rolb
cld
push
sbb
or
cmpsb
xorl
push
mov
mov
arpl
push
push
adc
scas
dec
inc
pop
push
test
fsubp
mov
dec
cltd
mov
push
adc
rcrl
pop
xchg
idivl
xchg
pop
and
das
es
push
in
int3
out
dec
adc
sarb
add
inc
dec
fidivl
lcall
pop
insb
or
push
jecxz
lock
pop
adcb
jno
rclb
cmp
mov
out
pushf
imull
push
daa
inc
xor
pop
daa
imul
and
mov
add
xchg
imul
and
pop
lcall
movsb
jge
fstl
ja
rcrb
cmp
shll
pop
ret
add
out
in
mov
scas
cli
jle
movb
icebp
sti
xchg
out
pop
inc
add
stos
shll
mov
cmp
sahf
fwait
add
cmp
aad
cmc
add
lock
and
inc
outsb
dec
xchg
jns
and
iret
in
adc
cld
inc
int
das
outsl
and
push
js
and
popa
movsl
add
dec
mov
lret
aas
lret
enter
movsb
adc
push
sub
xor
sarl
jno
dec
shrl
cmp
sbb
xchg
fs
mov
dec
outsb
les
ret
inc
add
aaa
out
fisttps
jne
push
jmp
pop
jne
idivl
test
cs
fmuls
dec
bound
cmp
movsl
ss
fwait
arpl
in
cmpsl
pop
clc
sub
add
sbb
adc
sbb
int3
or
mov
bound
adc
inc
fstps
int3
aad
push
cld
frstor
pop
push
mov
jno
push
xor
fwait
lret
in
into
xchg
aad
mov
adc
inc
rcl
mov
insb
mov
int
sbb
movsb
pop
mov
ror
xchg
aam
inc
or
shrl
dec
jno,pt
out
repnz
icebp
inc
inc
xchg
enter
cmpsl
in
repnz
leave
mov
lds
xlat
ja
int
sbb
int
pop
lds
mov
sub
jno
mov
sbb
mov
push
cmp
nop
shl
stc
fdivl
mov
push
outsw
xor
lock
xor
out
xor
jno
sbb
rorl
scas
jp
leave
push
out
xor
cld
or
jmp
jae
popf
fwait
push
jns
dec
mov
lds
hlt
mov
cmp
dec
xchg
inc
popf
mov
jns
xchg
insb
mov
mov
or
int3
rorb
cmpsb
push
pop
xor
into
mov
xchg
aas
pop
flds
dec
push
into
scas
push
movsb
cmp
xchg
xor
cmp
jb
iret
dec
cmp
mov
fstpl
dec
sbb
outsb
jb
dec
sti
pop
int3
or
popl
loope
adc
cmp
std
sbb
aas
outsb
push
cmp
icebp
divl
xor
repnz
int3
orl
cmp
adc
push
andb
dec
into
or
sbb
in
add
cltd
rorl
pop
xchg
mov
test
cmpsb
jae
cmpsl
mov
mov
or
push
mov
dec
cltd
push
orl
inc
push
in
negl
mov
push
inc
xchg
loopne
pop
stos
xor
cmp
in
push
imull
insl
adc
scas
lea
xchg
or
enter
aaa
xorb
lods
push
jo
movsl
pop
xor
int
push
popa
mov
and
outsb
subl
mov
pop
push
in
cmp
in
ror
imul
addr16
sub
jo
sub
jo
mov
push
in
adc
test
xchg
push
std
adc
xchg
pop
dec
xor
fmull
iret
mov
cld
fs
or
cmp
push
xor
sub
and
cmp
test
shll
inc
inc
dec
mov
jnp
pop
pop
sub
data16
lds
call
cmp
push
mov
push
xchg
push
add
call
incl
mov
scas
and
pushf
sbb
jno
fs
pop
mov
fucomp
int3
push
sub
inc
icebp
xlat
push
ret
mov
adc
inc
cmp
adc
and
inc
ret
outsl
aad
inc
push
rol
push
push
into
cmovg
roll
dec
xchg
enter
gs
xor
gs
push
mov
sti
gs
push
pusha
in
add
rclb
loop
loop
outsb
ret
js
pop
stos
shrl
xlat
mov
dec
hlt
push
jns
insl
push
lret
test
xchg
das
ds
dec
mov
aaa
xor
sub
or
push
or
push
cmc
fnstenv
pop
sti
xor
daa
sbb
or
push
push
or
inc
ret
sbb
in
xchg
icebp
je
xor
into
in
add
add
xchg
cs
dec
push
push
or
test
cmp
inc
dec
in
sbb
pop
or
arpl
sti
in
invd
shrl
adc
hlt
xchg
popa
dec
jmp
inc
icebp
movsl
loope
xor
cli
insb
aas
adc
add
popa
shlb
dec
pushf
jmp
les
mov
fildl
ror
idiv
add
push
pop
pop
in
out
dec
aaa
movl
data16
sub
test
inc
push
pop
push
inc
push
xor
adc
cs
or
outsl
push
aaa
cmp
dec
dec
loope
pop
push
rcrb
jnp
mov
sbb
out
jno
adc
in
es
cmp
repz
push
sbb
cmp
cli
cld
pop
cmp
or
and
push
pop
cmp
jmp
adc
hlt
push
add
lcall
cmp
test
push
add
dec
or
enter
jo
outsl
xor
jmp
and
pop
jle
gs
push
sbb
imul
xchg
pop
lret
fs
cmp
push
adc
jo
imul
push
xchg
std
lret
sahf
mov
mov
pop
lahf
jge
or
or
scas
xor
mov
movsb
cmp
pop
hlt
pop
pop
dec
xchg
ja
cld
adc
fisttps
lock
or
in
dec
push
add
cld
jb
xchg
insb
ldmxcsr
test
sti
bound
imul
push
add
rolb
push
pop
inc
rclb
inc
imul
or
fidivl
adcl
jecxz
xor
dec
xor
mov
xor
adc
push
push
inc
pop
pop
jecxz
mov
cld
inc
jo
repnz
cmp
hlt
lret
fistpl
mov
add
push
pop
or
leave
push
cmp
ljmp
js
push
dec
push
push
dec
mov
mov
push
xchg
mov
mov
call
jb
punpcklwd
sub
aam
je
sarl
mov
bound
imul
inc
int3
aam
mov
cmpsb
mov
sahf
mov
adc
sbb
pop
lahf
sub
test
sub
mov
mov
or
fldcw
popa
push
lds
pop
test
repz
enter
ret
sub
add
xchg
cli
adc
jg
jne
cmp
and
inc
xchg
aam
dec
pop
xor
pop
sub
add
add
mov
inc
rcl
fwait
mov
inc
or
inc
inc
fucom
push
mov
mov
cmp
cli
jo
cmc
fwait
in
lea
insl
ret
mov
lods
lahf
dec
lods
pop
stos
cld
lcall
inc
rolb
imul
aas
aaa
fwait
push
lahf
int3
aaa
add
gs
mov
adc
pop
enter
into
fs
lods
cli
pop
jl
sub
int
outsb
sbb
adc
test
dec
inc
push
in
clc
scas
mov
fstpl
pop
dec
adc
lds
jb
mov
cmc
ret
pop
xor
fnstcw
movsl
inc
pushf
dec
sahf
jno
mov
aad
push
cmc
adc
add
mov
gs
iret
xchg
mov
loope
ret
push
inc
adc
inc
xlat
lahf
ja
mov
arpl
xchg
mov
inc
push
push
aad
pop
cmpsl
repnz
sub
dec
fistl
push
inc
xor
cmp
push
jno
subb
jae
inc
int3
sub
shl
fs
loope
roll
je
jo
dec
aad
push
lds
int3
shll
dec
pop
int
popa
outsb
adc
add
xchg
push
jns
xor
push
cmpsb
rcr
int
mov
scas
xor
sub
fnstsw
mov
bnd
add
inc
adc
rolb
popf
inc
aad
and
and
pop
mov
mov
xchg
stos
aam
stos
mov
mov
cmp
add
nop
dec
loope
fcom
dec
add
fcmovbe
sbb
rcrb
xchg
xchg
movsl
aad
pushf
loope
inc
insb
rcll
loope
lcall
dec
stc
mov
xchg
jo
into
dec
sbb
cmc
xor
xchg
rclb
int
or
int3
call
dec
and
add
stos
adc
push
add
in
sti
fstl
fisttpl
int
ror
and
inc
push
loop
xor
push
loopne
out
adc
repnz
mov
mov
sti
shlb
out
pop
ss
cmc
jns
push
inc
iret
outsb
lods
cmp
cmp
lret
rcll
cmp
xor
jne
fdivs
xor
cmp
xor
invd
xor
xor
imul
add
cmp
ficompl
int3
mov
pushf
add
adc
aaa
cmp
movsb
imul
jo
jns
shll
xchg
icebp
mov
clc
aad
std
jl
outsl
push
inc
mov
adc
adc
popl
lds
jb
pushf
icebp
pop
or
std
out
leave
dec
inc
inc
pop
scas
sbb
inc
cmp
push
mov
jle
xor
inc
leave
adc
xchg
xlat
xor
test
inc
fmull
mov
push
push
bound
lahf
jno
cs
lods
decl
sub
std
sbb
movsl
mov
jmp
adc
daa
inc
imul
mov
adc
ja
pop
push
or
stos
les
push
imul
sub
dec
jno
pop
fmuls
mov
call
xchg
addr16
cmp
dec
push
xchg
ss
outsb
movsb
inc
or
int
cmp
mov
dec
aam
ss
imul
mov
ds
adc
outsl
inc
jno
or
xor
sub
add
push
pop
inc
adc
inc
pop
jne
in
shl
call
mov
mov
or
push
sub
mov
cmpsb
addr16
outsb
lret
std
add
mov
fsubl
aaa
xor
call
adc
or
das
addl
inc
xor
mov
adc
inc
dec
dec
jns
ss
sbb
cmp
jge
xor
and
xor
xchg
aad
push
arpl
push
sbb
pop
mov
lcall
pusha
xor
push
push
or
cmp
mov
arpl
loopne
push
jp
leave
mov
fnstcw
mov
popa
xorb
in
in
jae
sti
aam
jmp
mov
mov
insb
pop
nopl
pushf
jo
fldenv
lds
and
push
in
popf
lahf
aad
push
sbb
outsb
enter
jno
dec
xchg
aad
dec
push
in
push
push
cvttps2pi
mov
dec
or
out
xor
lods
pop
addr16
xchg
out
xchg
std
nopl
jo
in
cmp
xor
addr16
shll
fs
sbb
fwait
rcrl
and
dec
xchg
ss
dec
stos
sbb
cmp
dec
dec
add
mov
enter
pop
into
or
subb
ret
push
sub
leave
jp
in
int3
out
xor
ss
popa
add
and
jno
and
cs
loop
ficoml
or
out
or
push
sbb
mov
cmpsb
jo
popf
cmp
sub
inc
das
paddusb
sarl
xchg
dec
sbb
fmuls
dec
adc
push
sarb
adc
adc
fucomp
add
nop
cld
adc
pop
jle
xor
inc
inc
mov
jp
jmp
outsb
sub
inc
fstp
into
in
enter
repz
jo
xor
add
add
mov
adc
adc
in
cmp
pop
dec
xorb
add
sti
xchg
add
inc
pop
cld
sbb
cltd
stos
sub
loopne
cs
loopne
pop
cmc
xor
das
icebp
std
fwait
inc
lds
add
sub
add
test
leave
dec
mov
mov
fwait
push
das
rolb
xchg
jo
mov
dec
cmp
in
xor
dec
lret
mov
sarl
dec
jno
push
dec
aam
pop
jl
sub
aam
adc
push
mov
add
sub
icebp
xchg
inc
cmpb
jo
pop
outsl
lods
cmpsb
movsl
mov
pop
aad
mov
dec
mov
lret
scas
ret
divl
sbb
xchg
mov
loop
aad
dec
dec
or
in
fstpl
loopne
adc
stc
sbb
mov
aad
or
mov
dec
das
push
ss
adc
daa
add
arpl
inc
add
bound
inc
cmp
shrl
shlb
or
inc
adc
sub
inc
js
daa
cmp
dec
leave
inc
or
and
leave
sub
jnp
and
out
inc
fmuls
pop
push
fs
inc
out
jnp
cmp
fwait
xchg
sub
int3
push
dec
stos
iret
stos
or
jecxz
stos
or
cmp
push
icebp
push
popa
leave
xchg
es
sub
cmpsl
xchg
and
and
push
jo
lods
dec
rorb
push
enter
insl
inc
pop
xchg
push
jbe
outsl
xor
loopne
into
add
jnp
cmp
ret
pop
adc
test
xor
cmp
jmp
cli
dec
js
jno
popl
leave
cmp
sub
mov
ret
gs
insl
push
add
dec
add
pop
inc
xlat
pop
out
andl
ss
xor
push
pop
pusha
cmc
std
mov
dec
push
pop
movsl
pusha
or
dec
in
int
cmpl
sarl
sbb
lret
sub
fld
shlb
mov
jb
and
in
fs
fsincos
push
shrl
rcr
xor
sub
jbe
aad
loope
fs
inc
or
outsb
loop
mov
jno
push
in
dec
xchg
int3
dec
mov
cwtl
fs
sbb
mov
mov
mov
mov
add
je
add
pusha
xchg
jne
lock
jne
sbb
mov
dec
adcb
push
push
or
scas
xor
or
mov
loop
mov
dec
push
lcall
cmp
punpckhwd
ja
push
push
xchg
fwait
jg
xor
mov
sbb
push
push
shll
sub
mov
and
aad
mov
ss
sub
mov
mov
fcoms
ret
xor
xchg
imul
jnp
dec
push
movsl
fwait
jnp
lods
jne
add
xchg
push
push
rcr
aas
mov
and
jle
inc
dec
into
out
mov
mov
jl
mov
ss
push
aaa
mov
pop
arpl
sub
scas
into
xchg
pop
push
out
push
popa
shl
add
adc
adc
sbb
adc
adc
and
lcall
cmp
movsl
in
pop
jne
cmp
push
adc
xor
clc
push
in
mov
neg
loope
test
xorl
sbb
push
fsubr
mov
adc
mov
das
rcll
subb
pop
fiadds
fsubrs
cmp
bound
ja
pusha
int3
call
pop
rclb
popf
out
or
pop
xchg
jle
repz
or
adc
dec
rol
loopne
inc
mov
cmpsl
stc
leave
and
pop
lods
jl
imul
or
insl
xor
loop
movsb
repz
adc
cmp
add
inc
js
fcmovne
push
invd
lods
sub
adc
popa
ja
jno
sbb
jmp
lcall
pop
xor
and
fstpt
lea
ret
repz
jl
lret
test
jmp
xlat
call
je
dec
rcll
pop
jmp
pop
ret
lea
sub
ret
lcall
roll
mov
dec
lret
cli
jo
push
cmc
xor
outsb
insl
aaa
and
or
aam
jno
push
inc
and
jns
sbb
inc
btr
xchg
push
cli
ret
test
xchg
sbb
cwtl
push
es
sub
sarl
lods
or
xor
xor
xchg
adc
popf
xchg
out
jecxz
inc
xor
testb
enter
aaa
sub
or
mov
cmp
sarl
push
daa
jo
popa
dec
loop
dec
mov
gs
dec
mov
inc
rclb
subl
jg
or
jp
je
cs
loope
icebp
push
mov
adcb
sub
push
dec
jo
out
lods
jp
cmp
dec
shl
pop
add
dec
rorl
fstp
insl
stos
test
in
sbb
loop
std
xor
in
sbb
mov
jg
loop
std
test
shlb
jp
std
sbbb
mov
cmp
ss
push
jae
inc
movsl
pop
outsb
ffree
mov
iret
paddq
pop
mov
lcall
pop
xlat
xchg
in
sbb
add
mov
jnp
xchg
orb
stos
out
mov
outsl
in
hlt
lahf
xchg
std
and
xor
lcall
icebp
xor
mov
jo
out
nop
dec
sarb
or
call
inc
ss
or
out
xor
insl
xchg
mov
or
adc
rcll
int3
pop
jmp
xor
mov
iret
aaa
push
test
push
dec
nop
jmp
call
je
insb
push
xchg
cli
mov
pop
hlt
inc
shll
adc
repz
add
popa
sbb
inc
cmp
adc
xor
lret
movsb
adc
jecxz
or
xor
rcr
sub
push
pop
push
sahf
mul
insl
push
jge
gs
jne
jno
adc
xlat
aad
push
adc
divb
ret
sbb
and
adc
cmc
xchg
push
jge
popf
in
mov
shrl
xchg
and
mov
shll
loope
shll
cs
cmc
and
pop
into
dec
shll
inc
icebp
push
or
sub
mov
jecxz
loopne
sub
scas
xchg
or
pop
push
adc
movsl
lods
cmpsl
lock
cld
mov
call
push
mov
enter
pop
adc
movsl
cmpsl
sub
movsl
shll
leave
sub
inc
in
shrd
pop
xchg
out
inc
adc
dec
inc
pop
lds
into
scas
add
push
mov
stos
aaa
push
and
lret
das
fs
sbb
fnstsw
cwtl
push
and
lret
hlt
aaa
mov
push
fs
pop
adc
daa
js
add
cltd
ja
sahf
dec
push
fbld
push
and
pop
mov
ja
cld
adc
fildll
lea
cmp
movsl
fwait
sbb
enter
lcall
ja
pushf
arpl
adc
cmc
ja,pt
add
mov
shlb
es
inc
in
daa
imul
mov
and
sub
test
pop
push
cld
jmp
inc
mov
mov
mov
push
push
daa
ljmp
sarl
push
jne
or
sbb
jns
insl
cmp
add
push
shlb
test
adc
push
scas
jb
or
pop
cmp
ds
jnp
push
jnp
dec
fs
or
movb
and
sub
pop
sbb
sbb
xchg
sbb
sub
cmp
cmc
xchg
mov
movsb
mov
xchg
lcall
pop
std
fidivs
icebp
push
jo
xchg
call
sbb
adc
cs
jl
jno
lcall
jecxz
adc
or
lahf
setb
or
out
xchg
scas
jns
popa
mov
iret
imul
ss
cmp
xor
xchg
mov
shl
sbb
add
lret
cmp
ret
rorb
or
inc
test
mov
jne
icebp
insl
push
sub
cmpsb
testl
sbbb
out
in
xchg
adc
mov
or
jg
mov
inc
mov
movsl
mov
call
test
in
out
xchg
push
push
mov
loopne
ds
xor
icebp
mov
or
jo
bound
aas
ss
out
mov
dec
dec
notl
fcoms
hlt
fmul
lea
fisttpl
popa
push
insl
jl
movsl
push
dec
cmp
popf
push
jae
aaa
movsl
and
cmp
sahf
inc
inc
pop
xor
addr16
adc
negl
sbb
leave
inc
xor
in
jb
dec
movsl
xchg
xchg
enter
in
dec
push
test
popa
cs
popa
out
inc
bound
in
arpl
std
icebp
inc
pop
ja
adc
dec
jg
pop
lahf
or
sti
lea
insb
cs
add
pop
jl
mov
pop
fwait
aas
test
mov
jb
add
jae
leave
xor
in
xrelease
xchg
add
adc
adc
jae
stos
and
popa
mov
lods
les
in
mov
mov
add
iretw
jmp
pop
dec
push
in
rclb
in
push
pop
leave
andb
leave
aaa
mov
inc
inc
sahf
or
lods
mov
repnz
xchg
pop
and
sarl
add
mov
jae
scas
and
or
and
xchg
loopne
sbb
aaa
add
cs
sbbb
cmc
xor
stos
inc
xor
add
aad
xchg
push
jnp
stos
repz
in
cmp
pop
shl
jl
jp
jp
add
icebp
sbb
xchg
adc
shlb
or
repz
arpl
lahf
xor
push
lret
shll
sub
icebp
sti
jp
jno
jae
xlat
push
in
daa
out
mov
add
jo
pop
in
rorb
sbb
dec
pop
push
mov
outsb
and
faddl
pop
cmc
xchg
shlb
sbbb
jno
cld
gs
xchg
mov
aaa
lods
sub
stc
fwait
div
jne
and
inc
insl
pop
sub
or
roll
add
inc
ss
add
add
call
xor
outsl
bound
jl
ret
std
cmp
jb
dec
push
negl
mov
xor
add
fwait
jno
add
cmp
cmp
cmp
fisttps
repnz
lds
in
sahf
fucomp
sub
movsl
add
add
add
das
stc
push
fs
pop
push
sti
ja
cli
push
mov
sti
aam
imul
jno
push
pushf
insb
jg
pop
push
pop
fimuls
xchg
mov
orl
pushf
jns
mov
cmp
cmp
push
fdivrl
mov
and
sahf
jl
cwtl
add
rol
xorl
mov
test
mov
loope
js
dec
pop
out
and
inc
out
inc
popf
inc
cs
xchg
test
shlb
divl
jnp
dec
inc
xchg
jno
test
cmc
add
es
insl
jo
clc
and
or
cmp
and
in
mov
push
aam
in
fldenv
rorb
push
sbb
das
movsl
cli
dec
repnz
std
adcl
arpl
ljmp
push
cmc
sbb
jp
fstl
xchg
mov
rcrb
pusha
es
cmp
jne
xor
sub
imul
insb
push
push
movsl
xor
outsl
add
cs
mov
test
out
neg
cmpsl
inc
dec
aaa
in
push
out
inc
sbb
xor
loopne
push
pop
call
ret
or
push
jno
and
pop
xchg
inc
loopne
fldenv
cmc
adc
out
sub
imul
pop
and
out
push
or
stos
adc
pusha
test
testl
cmpsl
addr16
test
imul
negl
and
mov
aam
or
pusha
and
ja
jne
sub
xorl
jno
inc
lret
icebp
jmp
or
aas
int
adc
cmp
sub
movsb
shrb
inc
fxch
add
inc
jnp
ficomps
nop
jne
bound
stos
xchg
mov
in
dec
sub
jmp
pushf
jecxz
pop
aad
cmp
popf
cmc
mov
hlt
push
push
pop
fistl
push
scas
and
loop
mov
adc
mov
dec
push
or
jp
aaa
pop
fwait
out
mov
out
or
aaa
sub
fimull
xchg
inc
faddl
ret
stc
add
pop
in
nop
popa
mov
popa
xlat
xchg
repnz
mov
mov
and
gs
or
js
pop
pop
or
jno
aam
cmpsl
nop
leave
xor
test
cmc
int3
cmp
mov
sbb
xchg
mov
fcomi
movsb
cmp
cld
dec
jg
out
sub
jg
mov
pop
incl
inc
repz
xor
mov
adc
push
clc
loop
mov
or
rclb
std
inc
mov
and
mov
fmuls
loope
aaa
mov
adc
in
stc
sub
sub
push
mov
nop
inc
inc
push
xor
add
push
outsb
xchg
outsl
inc
push
add
jno
add
mov
cli
pop
add
xchg
aaa
mov
mov
pop
movsb
std
cmp
out
push
jl
push
push
xchg
mov
lcall
int
push
insl
incb
pop
in
adc
das
jecxz
sbb
call
xor
sbb
and
add
pop
add
incb
sub
das
pop
hlt
fucomi
aad
xor
out
lods
insl
movsb
xor
and
jno
push
dec
adc
outsb
xchg
add
push
mov
adc
mov
popa
cmp
loopne
adc
xchg
popa
inc
mov
mov
xchg
jmp
dec
xor
dec
adc
lds
push
push
jno
mov
xor
mov
xor
pop
sbb
std
nop
and
or
dec
dec
dec
dec
rorl
dec
aaa
dec
dec
push
push
push
fsubs
shll
sub
gs
xchg
and
out
dec
and
mov
mov
pop
sub
mov
incb
outsl
dec
mov
dec
ja
push
fistpll
outsb
jg
or
inc
into
sbb
sbb
icebp
xor
test
mov
nop
das
gs
mov
add
and
cs
mov
jnp
cs
or
add
cmpsb
in
xchg
out
pop
add
xchg
and
repz
xchg
jbe
insl
add
mov
or
xchg
stos
and
in
add
pop
hlt
cmp
notb
or
dec
mov
std
push
mov
call
sbb
shl
and
mov
or
lcall
icebp
in
rcll
or
push
push
or
mov
xor
cmp
sbb
das
xlat
int3
pop
push
pop
mov
jmp
xchg
inc
cmp
icebp
ffree
or
lret
cli
test
cmc
add
movzwl
xchg
push
dec
dec
push
jp
aaa
dec
and
dec
xor
daa
dec
jns
ret
ficoml
xorb
xchg
lret
lods
cmpsl
add
cmp
fimuls
scas
cs
pop
pop
or
into
rolb
sar
inc
or
pop
cld
popf
xor
push
pop
jbe
lret
lods
ret
push
icebp
add
out
xor
in
mov
ficoms
mov
stc
mov
out
icebp
mov
mov
or
cmp
inc
push
add
jnp
test
loop
inc
lods
pop
lods
enter
pop
jnp
dec
hlt
pop
mov
xchg
or
pop
enter
adc
imul
jnp
jmp
xchg
inc
dec
gs
cs
call
dec
add
push
cmp
pop
clc
in
ss
hlt
sub
add
sbb
dec
push
loope
push
push
xor
inc
and
dec
xor
test
dec
mov
or
dec
loope
loop
pop
inc
cmp
icebp
dec
daa
enter
cli
add
sbb
push
mov
leave
sub
adc
sbb
div
push
rolb
inc
dec
sahf
cmp
xchg
jo
out
movl
int
arpl
lcall
daa
xor
sub
lods
std
insb
add
xchg
inc
daa
ljmp
roll
cmp
test
mov
and
and
cmp
push
lret
aaa
icebp
fisttpll
fidivl
mov
dec
adc
mov
shlb
dec
fsts
inc
xor
out
push
movb
xchg
mov
dec
push
sarl
sub
js
xor
leave
popa
xchg
aad
and
pop
and
mov
jne
loopne
das
mov
loopne
insl
and
push
sar
out
jecxz
les
ja
and
pop
sahf
in
xlat
pop
sub
xor
mov
scas
xor
shll
adc
insl
cmp
cmpsb
fstl
pop
cmp
in
iret
xchg
lock
push
mov
test
fistl
xor
sub
sub
pop
fsubs
dec
dec
faddl
sub
pop
mov
fcoms
xchg
or
aam
ja
or
aas
movsb
sub
xor
dec
jns
inc
mov
mov
dec
movsb
stos
cmp
jne
xor
inc
jmp
call
ror
lds
sbb
sub
mov
pop
mov
sub
mov
fs
mov
pop
xchg
adc
pop
hlt
sbb
and
xor
js
jno
fstl
and
inc
and
stc
lock
scas
cmpsb
sbb
sub
pop
inc
into
imul
jns
stos
mov
popa
pop
js
addb
lock
sbb
mov
movb
sti
dec
into
cs
jmp
and
jmp
into
aad
pop
lcall
pop
mov
mov
pop
daa
jno
mov
sbb
pop
xor
push
sbb
or
fst
dec
rclb
inc
sub
pop
pop
or
dec
or
xor
pop
pop
adc
or
out
test
pop
xlat
cs
sub
daa
adc
add
dec
int
std
push
jle
pop
jns
mov
adc
adc
popa
nop
in
icebp
mov
movsl
adc
mov
jne
push
out
dec
xor
jno
es
and
mov
xchg
insb
xchg
cmp
adc
push
fdivrp
dec
pop
das
mov
fs
cmp
pushf
jmp
xor
xchg
shll
inc
ret
cmp
mov
aad
sub
lcall
mov
ds
and
xchg
jl
setp
rolb
cltd
scas
leave
and
jae
cmp
data16
xor
add
pop
add
pop
rcl
or
push
jle,pt
xchg
push
cmp
xor
xor
mov
mov
mov
mov
cmp
aaa
adc
add
fistl
fisttps
repz
dec
enter
inc
incl
push
xchg
sti
imull
gs
add
js
jno
mov
push
test
pop
decl
dec
lds
inc
mov
xor
lahf
test
mov
mov
xor
push
cmc
pop
ds
add
sub
loope
mov
and
pop
push
outsb
int3
xor
jbe
popa
xchg
push
adc
push
xor
rcl
xor
test
xchg
xor
adc
movsb
lods
pushf
xor
pop
and
xchg
sub
popl
push
scas
stos
lds
or
cmpsb
add
fs
inc
adc
adc
dec
sub
sbb
gs
cmp
lcall
popa
popf
leave
enter
rcl
loop
ds
pop
imul
outsl
xor
scas
mov
daa
push
in
xchg
cmp
pop
popa
repnz
and
mov
cmp
outsb
lea
dec
pslld
dec
punpckhwd
ret
inc
lahf
pop
adc
and
je
jle
adc
dec
mov
lods
mov
das
jno
jns
test
inc
jecxz
addl
ja
adc
push
xor
inc
jl
insb
pop
fwait
shlb
test
or
dec
inc
out
inc
rolb
std
mov
test
out
fldenv
sub
aam
push
outsb
gs
xchg
cld
fsubrs
in
in
add
out
push
cmc
test
pushf
idiv
pop
rorl
cmp
sub
aas
adc
adc
aaa
dec
and
mov
mov
sbb
jo
arpl
push
outsl
cmpsb
pop
push
ds
xor
and
adc
push
xchg
adc
xorl
and
fcoms
pop
adc
pop
jmp
xchg
mov
daa
out
dec
aad
jns
data16
iret
movsl
flds
push
lods
insb
mov
subl
cli
add
stos
fstpl
lock
fldcw
out
jno
cmp
test
xchg
imul
push
std
jno
pop
cmp
inc
mov
xchg
mov
outsl
ja
movsb
sahf
mov
and
lods
loope
jns
sbb
or
adc
sbb
int
mov
inc
in
mov
es
dec
inc
test
in
aaa
punpckhdq
cld
sub
adc
and
aam
xor
mov
xor
ja
mov
out
dec
mov
adc
mov
call
dec
xor
jecxz
jo
push
or
or
add
inc
inc
ret
mov
iret
dec
inc
leave
inc
sbb
repz
dec
push
movsb
push
scas
aaa
popa
or
test
dec
outsb
fs
push
adc
pop
add
icebp
sbb
inc
mov
andl
gs
jno
testl
std
nop
das
push
bound
repz
inc
int3
adc
cltd
dec
out
sbb
stos
test
popa
rcrb
xor
push
loope
adc
cmp
std
inc
loop
int
into
or
in
in
add
stc
sti
lahf
shll
xchg
ret
push
push
push
push
shll
lret
xor
lds
imul
imul
push
stos
mov
repz
loopew
test
dec
xlat
ds
push
xor
fwait
jns
mov
fstp
mov
mov
sub
adc
icebp
imul
nop
stc
and
cwtl
cmp
mov
push
dec
popf
dec
push
lcall
adc
dec
jne
sub
jns
push
or
in
adc
push
sub
scas
xchg
dec
inc
push
rclb
adc
adc
cmc
fisttpl
inc
dec
icebp
rclb
add
or
rol
adc
mov
fistpll
icebp
test
and
push
stos
mov
xor
pop
sbb
push
push
in
outsb
imul
sbbb
pop
cli
outsl
das
and
arpl
daa
mov
call
aam
into
jno
add
inc
jb
repz
pop
mov
cmp
lcall
xchg
jno
push
sarl
pop
pusha
mov
xchg
xor
out
push
mov
in
inc
jmp
sbb
push
andl
pop
jne
repnz
aam
jge
inc
jb
inc
xor
xchg
aaa
sub
lcall
test
push
bound
lods
in
add
mov
stc
push
inc
rolb
jno
jo
test
sub
fcomps
jle
mov
ljmp
cmp
and
sub
fmull
nop
xor
mov
adc
bound
dec
popa
pop
inc
inc
fbld
pusha
fistpl
push
cli
pop
dec
in
daa
push
adc
enter
inc
shl
dec
cmp
sbb
mov
fildl
hlt
dec
sub
pop
aaa
dec
jmp
or
jbe
pop
popa
add
aad
jns
bound
push
das
pop
push
bound
jbe
xchg
push
aam
push
xchg
xchg
fnstenv
pushf
inc
enter
sahf
fadds
inc
dec
pop
inc
lods
js
sub
jl
adcb
cmp
insb
scas
loop
push
in
dec
dec
iret
inc
jmp
push
mov
punpcklbw
cwtl
or
or
imul
and
aaa
daa
int
adcl
in
pushf
call
int
adc
xor
cmpsb
int
dec
jbe
xchg
cmp
loope
ja
xchg
ds
shl
pop
js
cli
mov
xor
adc
shrl
cmp
xlat
into
jmp
sbb
dec
and
jl
insb
in
leave
lret
jmp
movsb
insl
xor
icebp
mov
test
sbb
xor
icebp
push
loop
cmp
jb
dec
xor
mov
dec
jno
jae
push
dec
jo
pop
jge
leave
aad
jo
jmp
dec
popa
jl
jne
invd
lcall
add
xor
pop
inc
cmp
inc
xchg
sub
pop
jmp
push
pop
xchg
inc
dec
xor
cmp
loope
xor
cmp
xor
and
pop
sbb
psubsw
stos
stc
inc
add
sbb
cmp
cmp
or
push
mov
jp
dec
inc
ud1
sub
leave
cmp
cmc
aas
dec
dec
push
sbb
ret
call
lock
lock
popf
mov
inc
mov
jne
loopne
enter
movsl
inc
xchg
push
repz
or
push
cmp
enter
dec
je
mov
push
popf
inc
inc
pop
jnp
pmulhw
in
mov
loope
or
data16
cmp
jns
adc
shll
push
xor
into
push
popf
and
aas
jno
mov
or
jecxz
es
out
iret
xchg
jb
push
mov
es
leave
or
dec
leave
jns
out
mov
test
fwait
mov
scas
adc
push
arpl
cmp
fisubl
pop
cltd
adc
mov
jbe
push
cmp
sbb
jbe
js
pop
pop
out
and
or
sbb
dec
sub
shll
outsb
lock
iret
outsb
movsl
inc
nop
faddl
pop
dec
outsb
mov
jg
jge
or
mov
test
cmp
fstps
inc
xchg
in
dec
mov
inc
xor
dec
jmp
push
ss
sbb
adc
pop
test
lcall
loopne
std
pop
cmp
push
push
gs
sub
dec
xchg
movb
mov
push
push
enter
int3
fwait
mov
inc
push
xor
sub
add
iret
jno
sbb
jmp
jge
jb
mov
pop
ds
outsb
cmpps
aam
rcl
sahf
mov
insl
int
cmp
lods
dec
push
cmp
dec
or
mov
dec
imul
push
aaa
mov
mov
stc
mov
stos
dec
pop
mov
mov
sub
mov
adc
jecxz
and
inc
adc
fisubs
cmp
repz
inc
inc
adc
sbb
cmp
negl
inc
push
inc
inc
sbb
cs
dec
sarl
or
adc
dec
cs
inc
lds
aaa
dec
jne
sub
aaa
adc
xlat
cmc
mov
into
movsl
or
and
inc
mov
setb
inc
mov
mov
adc
test
fistl
push
dec
jl
addr16
pop
int3
addr16
jp
jmp
shlb
mov
push
dec
jo
pop
out
lods
aaa
xlat
sbb
xchg
sub
sbb
in
dec
dec
pop
in
es
bound
jns
pop
add
fwait
repz
bswap
jnp
jno
popa
test
add
repnz
fs
sub
pop
xchg
push
mov
out
insl
mov
jg
dec
mov
mov
outsb
stos
into
xchg
lahf
pop
mov
imul
fwait
sub
add
push
popa
data16
imul
cs
mov
insl
xor
test
aaa
and
push
roll
cwtl
js
hlt
xor
jge
cs
inc
push
test
and
iret
rorb
push
sub
in
cmp
nop
adc
xchg
inc
add
ljmp
dec
out
inc
jo
popf
movsl
mov
pop
adc
or
cmp
inc
sub
mov
les
inc
pop
leave
imulb
cmc
hlt
fistpll
xor
rorb
stos
mov
push
add
loope
pop
jb
add
or
movsb
jb
mov
push
aad
or
scas
popf
and
dec
lret
cmpl
inc
push
dec
fs
push
mov
cld
imul
inc
outsb
push
mov
outsb
js
jge
xchg
and
out
leave
fwait
xor
es
loop
jecxz
add
dec
push
out
dec
imul
jmp
subb
lcall
jns
xchg
hlt
pop
mov
pop
sbb
cltd
int3
or
or
dec
std
xor
outsl
js
sbb
jmp
cmp
xchg
sahf
dec
and
or
dec
test
dec
sub
ss
add
cmc
push
inc
aad
or
or
or
sub
or
cmpsb
dec
lds
mov
or
add
rorb
mov
cmp
xor
cmp
hlt
insl
adc
mov
rorl
xor
fwait
lock
dec
icebp
or
shr
loopne
cmp
cmc
pop
lea
divb
shll
sbb
ss
add
or
cld
pop
pop
lods
jno
fstpt
test
repz
pop
into
pop
gs
xchg
mov
test
cld
push
stos
mov
sbb
jae
jb
sbb
stc
mov
inc
arpl
pop
sarb
adc
add
pop
or
cmp
and
cli
mov
fsts
pop
push
cvtdq2ps
pusha
adc
cmp
popf
inc
es
dec
dec
xchg
inc
jmp
imull
jge
loopne
stc
mov
adc
pop
leave
ljmp
sub
popa
pop
ret
pop
or
push
in
cs
add
das
dec
ret
lcall
xchg
arpl
xchg
xchg
sub
mov
mov
pop
push
ret
adc
mov
pop
push
in
mov
sub
add
enter
insl
push
jno
lods
shll
jns
mov
adc
enter
popf
mov
jae
adc
rclb
lret
mov
shll
dec
adc
popa
aam
lock
out
in
and
aas
aad
aas
jns
xor
cmp
and
clc
rcl
in
or
xchg
cmp
cmc
cmp
dec
das
movsl
or
mov
sbb
push
or
inc
sti
outsb
andl
cmpb
mov
scas
dec
sarb
rorb
lock
cmp
pop
lcall
mov
sbb
lods
cltd
gs
push
ret
xor
mov
outsb
psrad
ficoms
imul
je
add
into
fnsave
in
or
jno
js
insb
fldl
in
inc
pop
pop
mov
dec
xchg
pop
aad
subl
adc
rorb
dec
mov
xor
inc
in
inc
xor
cmp
sbb
iret
outsb
jl
xchg
and
lock
into
mov
aad
sub
and
jge
mov
das
in
ffree
bound
cmpsb
add
test
xchg
int
push
sub
outsb
push
jo
push
xchg
push
adc
jo
shl
inc
mov
rcr
sub
je
orl
rorl
push
mov
and
push
inc
cwtl
push
jmp
int3
loop
shlb
mov
aaa
add
mov
popa
push
xor
pop
mov
pop
xor
call
lea
add
in
pop
cmp
clc
and
imul
pop
xchg
in
pop
aaa
and
pop
int
gs
out
or
inc
push
out
pop
stos
subl
aam
xchg
daa
cmp
or
lret
push
int3
loop
cmp
popfw
dec
add
pop
loopne
adc
pop
add
push
pushf
orl
sti
cmp
pop
das
push
xor
scas
or
xchg
popf
out
push
pop
push
nop
or
ret
pop
in
and
out
jno
in
stos
sub
lods
mov
jno
cmp
fimuls
icebp
mov
mov
sbb
into
xchg
push
adc
pop
out
scas
out
xor
push
mov
lock
cwtl
js
adc
jns
gs
sub
fadd
and
sub
daa
popf
xchg
mov
lcall
adc
sahf
mov
xchg
test
pop
iret
xor
add
dec
add
jg
sub
lods
jae
add
add
xchg
pusha
arpl
cs
aam
jp
jmp
cmc
jae
jl
adc
repz
rclb
cmp
add
fsubrs
mov
ror
xchg
loop
inc
push
xor
sub
or
les
fidivrl
push
and
pop
pop
and
les
dec
pop
and
sub
inc
addr16
cltd
pop
in
pop
pop
test
push
jno
iret
fsubrl
jno
decl
outsb
and
scas
pop
and
mov
sub
fisubl
stc
add
fldt
sbb
push
mov
inc
mov
imul
dec
sub
push
inc
or
lods
mov
loop
out
push
inc
push
std
arpl
or
sti
test
cmc
hlt
push
pop
xor
xchg
hlt
pushf
inc
push
mov
rorb
add
bound
outsl
push
xor
pop
pop
lds
mov
int3
push
popa
jno
ret
mov
dec
aad
pop
data16
addr16
add
adc
jno
or
inc
sbb
sub
inc
jnp
or
sbb
fstps
cmp
push
and
inc
jmp
sub
inc
xchg
xor
repnz
dec
add
lahf
pop
cmp
push
sbb
cmp
sub
inc
leave
xor
add
and
cmp
inc
fmuls
enter
cmp
int
fstl
int
pop
sahf
dec
test
incb
mov
repz
add
idiv
sub
inc
jno
pop
int
xchg
jle
subl
cmp
xchg
cwtl
jns
decb
pop
iret
arpl
bound
in
jbe
sub
push
push
shll
rorb
mov
fadds
je
stos
cmc
into
mov
rolb
mov
lds
lds
inc
imul
das
inc
dec
add
out
testl
loope
cs
jne
pushf
not
mov
add
pop
sub
mov
sbb
cli
aaa
jne
mov
daa
icebp
pop
adc
inc
adc
cmp
xor
sbb
xchg
mov
cwtl
fsubs
test
cmp
mov
loopne
pop
test
sbb
jl
add
adc
sar
dec
sbb
xor
add
inc
inc
sbb
or
icebp
ret
cmpsl
ss
pushl
inc
inc
cmpsl
jmp
add
aam
in
mov
lret
aas
adc
jecxz
push
es
dec
cltd
dec
mov
lods
popa
mov
pushf
shll
sub
ss
xor
cmp
jo
es
iret
shrl
filds
int3
out
dec
sub
lret
add
sub
gs
loope
sub
pop
aaa
cltd
in
adc
icebp
int
data16
add
cmpb
inc
cmp
ror
xor
pop
mov
dec
leave
jo
xor
or
shrl
out
ja
daa
in
sti
sbb
mov
jo
mov
sub
add
pop
inc
mov
xor
adc
jns
push
pop
dec
repnz
addl
mov
insl
push
adc
inc
in
popa
push
xorl
rclb
rcrl
in
inc
loop
push
push
das
stos
ss
and
into
andl
out
mov
shrb
rorb
aam
push
in
push
aam
push
fcom
ficoml
inc
adc
sub
test
dec
int
dec
push
mov
xor
xchg
xor
mov
les
push
push
in
ja
cmpsl
pop
add
filds
aam
push
jp
cli
push
push
sbb
dec
pop
jnp
xor
push
xchg
ret
inc
out
mov
dec
mov
divb
aad
cwtl
hlt
inc
lea
dec
ret
adc
sub
fcomp
push
sti
clc
adc
cmpsl
ds
mov
dec
ret
cmp
push
dec
mov
cvtpi2ps
pop
jle
cs
xor
pop
test
xchg
or
xchg
inc
adc
xchg
sbb
shl
outsb
lret
out
adc
out
lcall
setp
ret
adc
shr
test
stc
xor
push
cmp
xor
jne
pushf
mov
add
pop
inc
sbb
inc
dec
in
push
add
jl
adc
or
xor
pop
pop
sub
xor
ret
xchg
cli
nop
stc
push
dec
push
pushf
mov
pop
cld
mov
aam
int
gs
dec
test
stc
rorl
popa
daa
or
pop
xor
lock
imul
inc
stc
sbb
test
jb
outsb
dec
daa
push
fidivs
movb
xor
inc
jge
jno
adc
out
mov
int
dec
xor
push
and
dec
dec
pop
dec
jg
mov
inc
arpl
xor
aas
lods
inc
cmp
dec
inc
or
out
mov
and
es
dec
jecxz
push
xor
cmc
add
push
push
fldt
xor
repz
nop
xchg
jecxz
out
add
cld
clc
lret
push
push
je
xor
mov
xchg
xor
push
dec
shr
cmp
xchg
mov
jns
mov
sub
or
sbb
push
xor
fists
xor
xchg
out
inc
pop
scas
int3
inc
fcom
pop
mov
test
xor
gs
pop
ret
in
add
xor
pop
mov
outsb
push
fidivl
or
xor
add
mov
inc
lds
jp
aas
xchg
cmp
xor
sbb
popf
cmp
test
push
or
repz
sbb
and
adc
xor
xlat
cmp
addr16
jns
inc
inc
sub
and
fimuls
xchg
push
cmp
pop
mov
dec
lock
outsb
cmpsb
scas
out
mov
arpl
stos
sbb
or
push
push
xchg
or
xor
xchg
push
shrl
int3
fiadds
sub
lret
dec
imulb
xchg
and
cmc
cmp
fadds
ds
sahf
neg
xor
and
xchg
sti
in
std
in
cmc
and
add
pop
cmp
cmp
adc
cmp
xor
xchg
mov
mull
stos
test
outsb
test
mov
add
push
in
push
dec
xchg
imul
push
test
adc
mov
push
or
push
data16
loopne
rcrb
or
push
stos
mov
xchg
cld
sub
fildl
dec
stos
dec
cmp
cmp
shl
xor
pop
push
cmp
inc
add
add
push
sti
adc
movsb
pusha
mov
dec
out
jle
incb
mov
inc
dec
xchg
cmpsl
jg
nop
sti
repnz
sti
dec
mov
mov
adc
push
cmp
mov
not
stc
jl
and
push
ret
shll
mov
inc
ja
cld
filds
dec
or
cmp
inc
inc
sti
or
push
sarl
dec
les
pop
int3
adc
rclb
add
cwtl
ret
xchg
dec
and
add
or
cmp
fcompl
loop
and
outsb
in
or
push
test
cmpsl
fildl
in
pop
neg
dec
mov
and
loopne
add
adcl
movsl
and
dec
dec
inc
rcrb
pusha
xchg
lret
leave
shr
dec
mov
addr16
jo
sbb
dec
mov
or
loope
or
jno
pop
adcl
out
insl
push
rdtsc
adc
scas
sub
sbb
aam
or
xor
push
mov
xor
ja
movsb
or
sarb
loope
notl
jno
cltd
push
xlat
mov
or
movsl
push
out
mov
mov
sub
mov
cmp
push
mov
leave
pop
jno
adc
inc
mov
js
inc
inc
push
xor
pushf
push
mov
push
cmp
aad
jmp
stos
adc
push
push
pop
add
push
lret
cld
cmp
xor
cmp
mov
sbb
dec
std
mov
cltd
xchg
adc
push
push
ret
nopl
mov
sbbb
loope
in
lods
jo
pop
xchg
xchg
push
aam
pop
testl
jl
xor
lcall
jge,pt
les
in
dec
dec
adc
adc
fbld
mov
nop
in
sbb
mov
aam
scas
clc
repz
shr
into
and
pop
mul
dec
mov
adc
sbb
enter
xchg
aas
rolb
ds
lahf
push
ss
dec
or
imul
push
nop
xlat
sti
ss
dec
aam
sbb
push
xor
jg,pn
push
inc
or
mov
scas
in
sbb
popa
scas
jecxz
call
dec
adc
leave
hlt
mov
aaa
outsl
pop
fisttpl
addr16
into
xchg
addr16
gs
aaa
mov
cmp
ret
mov
sbb
imul
dec
loope
xor
cmp
sub
or
jp
rclb
mov
fbstp
popa
fsubs
xor
dec
int3
loop
adc
push
pop
lahf
arpl
adc
outsb
ret
les
sbbl
cmc
cmp
repz
sbb
in
bound
cmpb
cmp
std
mov
adc
add
popa
outsl
xor
ret
cmp
xor
popa
and
jo
sti
shrl
ja
cli
xor
mov
out
and
test
or
adc
loope
adc
rclb
ret
out
dec
mov
leave
mov
xchg
jo
flds
fsubrl
push
imul
out
push
lea
leave
fnsave
jle
pop
test
adc
cmp
jae
mov
movups
cmpb
push
or
cld
mov
sbb
lea
bound
pop
out
sbb
aam
jno
les
insl
cmc
dec
cmp
dec
cmp
in
sti
lods
bound
xor
imul
fucom
outsl
inc
frstor
fcomp
out
out
dec
xchg
addl
pop
sahf
or
add
jns
xchg
int
mov
stos
add
sbb
xor
pusha
cld
adc
repnz
mov
clc
mov
push
mov
loop
es
jl
jbe
jle
jg
pop
lahf
add
mov
inc
push
mov
push
add
pop
outsb
pop
push
add
sbb
cmp
inc
pop
xor
das
pop
push
adc
or
jb
fdivs
ss
sub
in
adc
cmp
dec
cmp
push
inc
call
stos
shl
outsb
pop
lods
xchg
pusha
mov
jecxz
in
push
or
inc
or
popf
out
ss
adcb
dec
in
fdivrl
sub
lea
xor
sub
ja
lea
pop
les
add
sub
pop
aad
inc
stos
xor
cs
and
fs
add
std
cmp
fwait
adc
int3
rol
cmc
dec
and
mov
or
xchg
in
scas
dec
adc
pop
daa
jns
add
inc
push
in
mov
fcmovu
pop
sbb
sar
sbb
insb
dec
leave
ljmp
sub
icebp
rcll
test
push
jl
sbb
jl
pop
dec
jl
mov
add
pop
outsb
test
adc
lret
popf
push
clc
mov
xchg
fsub
push
mov
pop
push
xabort
outsb
nop
rol
testb
mov
jmp
mov
dec
lcall
cmp
ret
xor
add
mov
lret
adc
repnz
push
in
cs
clc
shrl
lcall
lahf
mov
popf
out
and
mov
push
js,pt
fsubrl
outsb
xor
and
in
xor
sarl
dec
pop
dec
sub
adc
xor
fdivrs
inc
fwait
jno
xor
imul
mov
add
outsl
sbb
in
cmp
hlt
inc
sarl
sub
test
lods
pop
pop
sub
out
push
pushl
adc
shrb
push
outsb
lahf
fcomps
enter
dec
push
pop
int3
inc
and
cmpsb
adc
xor
repz
push
adc
es
dec
icebp
ja
test
and
push
ret
test
test
jo
rcll
mov
add
mov
adc
sbb
insl
je
leave
les
inc
imul
push
fidivrl
dec
dec
sbb
pusha
ljmp
std
incb
movsb
lock
inc
adc
push
lds
rcl
jmp
rclb
jmp
fstpl
mov
in
push
sub
sub
pop
mov
push
sub
jle
in
leave
aas
dec
lcall
dec
setns
aas
into
inc
mov
mov
stos
push
out
pop
sub
movsb
adc
mov
sub
into
hlt
test
mov
push
jno
xchg
cmpsl
sbbl
call
mov
arpl
xor
add
jl
divl
cld
jne,pn
xchg
lcall
es
shll
push
cmp
fwait
inc
push
pop
shl
xor
push
mov
adc
aad
push
pop
aaa
aad
and
in
stos
add
ljmp
jo
das
jge
pop
arpl
test
and
lcall
imul
xchg
leave
mov
fsubr
js
cltd
or
dec
mov
push
or
jns
jp
mov
push
or
jb
hlt
dec
mov
leave
lods
andb
movsl
ret
and
aam
inc
pop
xchg
dec
in
add
and
pop
cmc
mov
cmp
and
adc
fldl
int3
dec
pop
mov
inc
sbb
push
mov
inc
movsb
adc
jae
jg
and
sbb
shr
mov
insl
pop
pop
push
xchg
pusha
test
gs
mov
out
mov
jno,pt
inc
inc
ficoml
outsb
push
mov
or
fildl
popa
mov
jnp
clc
repnz
cli
fdivs
mov
pop
dec
sbb
pop
mov
mov
jne
push
lret
hlt
cli
push
aad
cmp
sub
int3
aas
adc
stc
push
jecxz
inc
ret
xor
push
dec
or
movsb
mov
sti
sbb
jnp
xor
sarb
jg
cmp
mov
mov
inc
cmp
adc
dec
mov
fmul
data16
pusha
aam
adc
dec
add
in
add
xor
xor
push
ret
xor
dec
mov
sbb
push
cmp
mov
push
xor
xor
lock
mov
rcrl
push
scas
js
fnstenv
dec
pop
shrl
mov
call
sbb
pop
leave
leave
mov
adc
pop
ds
adc
int3
pop
pop
pop
mov
xchg
dec
jge
and
daa
and
or
xlat
cmpsl
out
mov
fwait
ds
ss
jo,pn
inc
mov
cmpb
bound
sub
in
rorb
jo
in
dec
fsubrs
outsb
mov
or
testl
int
cmp
inc
sbb
push
pop
stos
aad
repnz
pop
aam
cmp
sahf
mov
sub
sub
nop
mov
ja
mov
jnp
movsl
ror
sbb
out
pop
imul
out
lods
and
pop
jle
lcall
mov
fwait
js
xchg
jo
cs
or
jbe
fisubrl
sti
pop
pop
push
or
mov
sub
pop
test
adc
iret
sbb
sbbl
cmp
sbb
es
push
sahf
lds
jns
cmpl
xchg
sub
in
push
adc
rcl
inc
movsl
mov
hlt
cmp
jne
aas
pusha
sub
js
clc
mov
fldenv
push
in
lea
adc
push
fnsave
cmp
inc
in
test
xchg
cmp
repz
sbb
clc
xchg
aas
sub
imul
imul
sbb
jnp
mov
int
xchg
fisubrs
jb
sbb
clc
xor
inc
sarb
dec
sbb
inc
fnstcw
pop
cmpsl
pop
adc
lcall
mov
test
inc
adc
scas
or
mov
push
add
movsl
inc
lahf
nop
and
stos
cwtl
push
sbb
push
mov
call
inc
bswap
jnp
inc
add
nop
jno
mov
in
cltd
mov
jnp
xor
lock
test
xor
xchg
les
int
or
outsb
or
sbb
imul
push
xor
xor
xchg
enter
jno
pop
push
dec
popa
push
or
out
leave
inc
inc
jo
pop
sbb
lcall
xor
jge
test
shlb
and
popa
sarb
push
jo
cmpsl
or
or
gs
cmpsb
pop
stos
popa
inc
jne
push
xor
arpl
mov
fisttps
sub
aaa
xchg
add
pop
or
fcoml
sti
xlat
dec
push
mov
loope
sarl
sub
push
lock
movsl
cmp
in
daa
or
mov
inc
dec
xor
aaa
sub
jae
cltd
push
gs
ret
adc
sbb
cli
ror
pop
sub
scas
outsb
jge
mov
inc
mov
mov
and
mov
rclb
cwtl
push
sahf
xor
mov
xchg
sbb
andb
jns
xor
xor
adc
add
fmull
mov
adcl
jns
in
into
xchg
mov
cs
std
jbe
notb
inc
inc
pop
push
sbb
rclb
cmp
push
xor
testl
frstor
xor
xor
xor
sbb
xchg
mov
cmp
mov
xchg
orps
pop
inc
lods
push
xor
daa
std
das
movsb
pop
push
lds
ret
stos
push
out
dec
mov
dec
dec
outsb
and
push
test
xor
aas
pop
push
in
loop
test
mov
jne
inc
xor
popa
add
sbb
inc
mov
outsb
xchg
mov
lods
add
pop
pop
inc
rolb
je
das
cmp
push
jno
add
jp
fwait
inc
xchg
fs
sub
clc
daa
add
lahf
xchg
add
add
push
sub
je
outsl
dec
adc
rorl
cmp
lock
xchg
daa
adc
repnz
pop
not
pop
cli
sti
jae
outsb
mov
xchg
ret
xchg
push
ja
std
xchg
jae
mov
push
outsl
cmp
cmp
int
mov
mov
pushf
jno
add
into
push
mov
in
fcoml
jp
sbb
clc
es
movsl
lods
lods
stc
and
push
into
xchg
pop
xor
dec
ljmp
xchg
xchg
push
cltd
push
imul
inc
outsb
xchg
scas
jbe
rclb
fiadds
inc
push
cmp
rcll
dec
sbb
add
inc
push
and
dec
xlat
repnz
jmp
aad
and
faddl
fiadds
or
cmp
jge
movsl
fsubrs
inc
mov
cmp
or
and
dec
xchg
insb
jmp
mov
and
inc
cmp
popa
and
mov
inc
add
out
dec
repnz
shlb
out
popf
push
rcll
and
mov
daa
loop
jnp
mov
sbb
je
movsl
mov
mov
mov
cmp
jmp
xor
add
inc
inc
sub
gs
int
lahf
pop
push
ret
mov
out
mov
add
mov
ljmp
rep
xor
mov
rcrl
xchg
addr16
adc
xchg
inc
out
add
out
push
lods
dec
sub
inc
add
leave
inc
aaa
pop
out
cmp
arpl
push
fisubl
cli
inc
xor
adc
dec
and
dec
test
xor
sbb
lea
add
in
fldcw
push
test
mov
shl
gs
dec
leave
ds
je
gs
adc
idivb
pop
nop
shrb
scas
mov
cmpsl
pop
pop
pop
loopne
and
pop
fwait
movsb
pop
sbb
adc
bound
loop
inc
fisubrl
js
sbbl
jns
mov
xchg
add
sarl
rcr
lcall
cmp
push
test
add
mov
sub
lds
xor
or
incb
mov
push
xor
movsl
lahf
out
hlt
inc
xchg
xchg
lea
mov
jnp
mov
in
fiaddl
dec
cmp
cmp
push
pop
mov
push
jae
pop
lea
and
mov
mov
push
xlat
sbb
sub
ret
stos
pop
xor
inc
xchg
inc
or
sahf
jne
shlb
and
lods
sbb
xor
xor
lods
loopne
mov
daa
popa
pop
shlb
mov
inc
enter
and
cli
hlt
sub
inc
xchg
test
jp
pop
or
push
sbb
sbb
sub
outsb
incl
push
push
pushf
adc
xor
or
inc
inc
leave
pop
sbb
sbb
in
mov
mov
and
mov
lret
sub
sbb
sbb
in
jle
pop
add
cld
hlt
fisttpll
xor
jno
inc
push
in
icebp
or
fs
mov
mov
mov
sub
insl
cwtl
jns
stos
stos
jmp
out
ja
inc
imul
insl
aam
mov
movb
and
mov
and
mov
inc
aas
xchg
clc
cwtl
jbe
push
jno
es
sarb
cli
fldt
push
pop
jp
add
jne
lahf
pop
std
and
or
in
faddp
fidivl
pop
fisubrs
jl
aad
leave
fsts
dec
out
enter
movl
scas
xor
jle
inc
lock
jle
dec
sub
push
or
bound
stos
dec
mov
adc
shlb
and
xor
sub
push
xlat
pusha
xor
pop
cmp
repz
and
push
sub
fs
pop
aas
cmc
xchg
ds
pop
mov
rorl
fsubs
adc
inc
dec
push
fwait
adc
sub
xchg
cs
stos
enter
sub
jmp
push
push
push
cld
adc
aam
push
xor
mov
lock
push
int3
push
dec
mov
inc
xchg
shrb
pushf
pop
cmc
pop
into
sbb
aaa
mov
leave
or
aad
mov
rol
fstp
mov
insl
cmp
push
dec
rolb
lea
cltd
adc
nop
push
cmpl
inc
mov
cmp
fcomps
scas
out
xchg
pusha
mov
shrb
inc
cld
mov
lahf
lahf
xchg
xchg
sahf
push
cmpsl
push
lds
int
xor
rcr
push
outsb
movsb
mov
xor
fstpl
inc
insl
out
mov
pusha
adc
sbb
nop
cwtl
jo
pop
mov
pop
shl
or
mov
cld
dec
popf
jecxz
jmp
andb
pop
je
ror
scas
and
or
inc
pusha
pop
call
divl
push
inc
or
xor
push
push
popa
jno
adc
inc
insl
pop
not
fs
ret
popf
xorb
adc
dec
inc
dec
ret
out
movsl
inc
rcl
enter
scas
idivb
xorb
jns
or
mov
fsubrs
cli
sbb
xchg
loopne
jno
adc
xor
jb
mov
add
pop
stc
add
leave
inc
pop
add
icebp
or
into
aaa
dec
in
lcall
enter
bound
pusha
es
sti
insb
enter
push
lahf
inc
mov
sti
mov
shll
scas
fsubrs
mov
sti
jo
dec
lock
mov
sub
outsl
sarl
and
mov
sbb
push
mov
mov
divb
int3
cs
xchg
xchg
xchg
pop
gs
cmp
or
es
and
adc
or
mov
sub
scas
inc
popa
jb
sub
gs
int3
aam
test
cltd
in
ret
popa
stos
into
inc
or
add
pop
icebp
push
dec
out
push
cmpsb
outsl
sbb
ja
das
test
lcall
jecxz
mov
xchg
das
pop
repz
or
fisttpl
push
and
mov
mov
popa
xor
lods
aam
inc
sahf
addr16
jns
andl
cmp
dec
jp
jns
nop
add
or
sbb
lea
jb
mov
adc
call
hlt
or
xor
shll
inc
and
data16
outsb
mov
repnz
and
push
fnsave
les
jno
andl
xor
aas
movsl
inc
xchg
sub
jo
ret
xlat
inc
shlb
lcall
icebp
add
push
xchg
ja
inc
inc
mov
xor
fldenv
in
adc
and
sbb
dec
add
xor
ljmp
lods
jno
test
mov
sbb
aad
push
sbb
sub
sti
cli
jmp
cld
popl
in
arpl
cmp
cmc
mov
lods
repnz
push
shrl
or
push
inc
pop
lds
mov
iret
in
push
adc
adc
push
mov
stc
mov
xor
xchg
cmp
adc
xor
pop
fstpt
in
push
sbb
and
and
insl
push
int3
ljmp
adc
xchg
xchg
popa
add
xchg
cmp
xor
sub
mov
inc
mul
sarb
push
sbb
pushl
inc
xchg
add
sub
inc
mov
mov
int3
fstpt
pop
es
nop
sbb
or
xchg
in
ret
mov
add
add
pop
sbb
sub
insb
pop
and
mov
cli
or
jo
in
dec
push
dec
in
lcall
dec
fisttpl
jle,pt
sub
sub
xor
shlb
in
inc
push
push
int
jno
jmp
sub
xor
outsl
xorl
push
mov
or
test
adc
mov
pusha
sbb
ret
lahf
lret
cli
sahf
inc
cmp
leave
gs
icebp
add
or
sti
mov
cmc
std
or
xorl
jmp
xor
dec
daa
inc
lret
cmp
pop
gs
pop
insl
loop
dec
inc
inc
bound
and
sbb
in
push
add
push
cmpl
and
bound
pop
int3
insb
setnp
mov
mov
data16
jecxz
shlb
adc
ss
add
cld
add
test
les
push
mov
cli
xor
adc
and
cmc
int
sub
cwtl
int
and
push
aam
fisttpll
and
outsb
xchg
lods
idivl
in
es
movsl
cmc
ds
mov
lret
je
test
cwtl
or
dec
pop
cmp
mov
xchg
adc
sub
push
sahf
mov
cli
enter
and
sub
fimuls
nop
pop
fisubl
push
loopne
push
or
cwtl
sub
or
sbb
cmpb
fildl
sub
jno
inc
in
adc
outsb
lahf
stos
cmp
faddl
xchg
outsb
mov
mov
jmp
xchg
ret
test
imul
xor
fisttps
pop
xchg
xor
xor
xor
insb
mov
add
push
cli
add
fmull
pop
mov
cmpl
mov
in
stos
mov
sub
xor
enter
mov
out
push
cmp
popa
lds
push
add
frstor
push
or
jne
push
fisttpll
push
fisubrl
or
out
mov
cmp
add
mov
ja
pop
jb
iret
dec
sub
add
aas
sbb
mov
sub
insb
pop
mov
fs
pop
cmp
std
sub
pop
dec
mov
push
mov
sub
jmp
cmp
pop
data16
xor
pop
rclb
stc
xchg
mov
xchg
sub
shlb
notl
inc
mov
xchg
inc
ja
and
orl
mov
out
and
push
mov
push
xchg
dec
inc
jno
xor
outsb
cmpsb
xchg
inc
jge
xlat
ret
push
or
movl
sub
push
frstor
dec
ljmp
xchg
pop
adc
lcall
imul
xchg
sbb
rclb
iret
fistpl
xchg
xor
xchg
flds
enter
outsb
and
jae
sub
enter
mov
add
mov
fsubr
pop
call
sub
mov
jns
dec
cli
sub
int
fstpl
jns
fbld
rolb
fdivl
fwait
adc
jno
aam
andb
into
cmp
inc
dec
mov
xchg
lahf
mov
movsl
mov
test
imul
xor
mov
mov
cmp
xchg
xor
pop
xor
push
ret
sbb
mov
mov
jne
scas
jno
mov
icebp
mov
jnp
test
adc
jne
and
mov
push
punpckldq
imul
in
mov
push
xchg
scas
add
mov
mov
mov
pop
pop
sbb
adc
cmp
add
imul
fistpl
adc
adc
fstpl
inc
mov
rcr
lds
sub
std
fistps
mov
push
jo
jp
dec
mov
pop
insb
aaa
push
pop
int
lret
sub
or
jno
std
sbb
std
call
inc
jecxz
aaa
jb
or
and
not
int3
jno
in
data16
inc
jno
stos
and
and
cld
pop
sahf
and
sbb
mov
imul
scas
adc
repz
cmp
cmc
sub
int3
xchg
push
gs
ror
pop
mov
in
jge
inc
jns
sbb
xchg
lea
dec
int
inc
test
cmp
xchg
add
cmpsb
xchg
or
xchg
and
fstpl
sub
movsl
int
push
pop
ss
dec
xchg
rclb
sub
sarl
out
and
lods
mulb
mov
push
xor
clc
pop
in
out
lock
xlat
sub
or
jno
jmp
pop
and
pmullw
popa
inc
out
push
pop
cmpsl
xor
es
push
sub
clc
into
sub
dec
jl
mov
cld
in
add
jecxz
inc
dec
imul
cmp
push
cmp
scas
dec
jne
xchg
pop
add
mov
popf
das
in
push
inc
pop
outsb
mov
dec
dec
dec
aad
xchg
xchg
cmpsl
stc
mov
or
push
bound
mov
and
adc
pop
dec
sub
pop
sub
daa
push
and
mov
xlat
or
lcall
ljmp
addr16
mov
mov
dec
push
xor
adc
sub
ja
pop
daa
sbb
sbb
loope
daa
in
in
xor
inc
xchg
adc
and
xor
in
xchg
pushf
mov
or
gs
jb
fldl
or
ss
imul
decl
insl
add
clc
dec
in
out
sar
lods
rorl
in
xor
insl
push
dec
dec
inc
sti
enter
int3
sub
push
dec
jno
outsb
mov
pop
es
mov
loopne
add
xchg
lret
fidivrl
daa
mov
jle
push
in
cld
or
adc
int3
push
sub
sarl
sbb
add
add
jae
adc
inc
push
push
push
stc
idiv
xchg
lcall
inc
fldt
pop
shll
ficoml
cld
mov
shll
sti
imul
sbb
mov
xabort
shl
dec
daa
or
xor
and
xor
or
cmp
jo
push
aaa
jno
cmp
imul
pop
push
and
adcl
fnstcw
sbb
sbb
movl
push
test
lock
dec
gs
aaa
jno
cmpsl
mov
xor
test
push
dec
push
push
jno
mov
loopne
jo
enter
je
xor
and
adc
in
or
pop
pop
or
fdivl
or
pop
lcall
dec
pop
add
pop
shlb
inc
pop
pop
jnp
mov
and
xchg
iret
in
xchg
adc
fcoml
and
stos
mov
daa
sahf
push
push
in
and
dec
int3
add
push
pop
or
adc
mov
fistpl
std
cmp
aaa
xor
outsb
mov
les
sti
int
cld
inc
call
xor
fistl
popa
lret
lahf
inc
hlt
dec
push
push
ss
int3
leave
add
jno
adc
pop
sarb
push
dec
dec
or
or
inc
inc
dec
aad
push
xchg
xchg
and
push
dec
jno
push
mov
inc
mov
incb
inc
sub
jge
mov
out
js
sub
push
push
mov
dec
sub
fldcw
enter
mov
or
arpl
movsb
add
loopne
xor
xor
add
jns
and
dec
scas
imul
or
adc
ja
adc
aad
stos
cmp
push
inc
mov
push
xchg
push
rorl
xor
dec
enter
daa
push
adcl
xor
mov
dec
aaa
pop
mov
and
inc
xor
mov
adc
mov
mov
aam
mov
loopne
dec
pop
aam
adc
push
ffreep
aas
push
pop
aas
inc
jno
push
xor
sbb
and
pop
push
es
xchg
stc
cmc
popa
jnp
aaa
pop
movsl
mov
cmp
and
cmp
dec
mov
mov
clc
fstpt
jnp
inc
dec
or
sti
jne
mov
rolb
dec
movsl
adc
push
jno
xchg
adc
outsb
int
aas
push
movsl
into
cwtl
jnp
mov
inc
shl
adc
stos
test
xchg
repnz
xchg
push
adc
dec
mov
or
xor
xor
or
sbb
push
jmp
pushf
xor
cwtl
add
dec
mov
aad
mul
inc
xchg
adc
jae
cmp
popa
dec
jb
fwait
sub
in
xor
mov
nop
jns
leave
adc
inc
ja
sub
rorb
pop
jns
test
aas
sti
cmpb
int3
add
inc
gs
dec
shlb
lods
xor
and
mov
mov
shlb
setne
xchg
and
sbb
and
sbb
inc
cmpsl
or
push
mov
push
outsl
ret
jmp
div
dec
mov
push
inc
push
cmpsl
and
sub
sub
pop
push
adc
cli
rorl
daa
xor
mov
cs
or
popa
mov
inc
inc
lods
cmpsl
pop
sub
ret
add
shl
xor
shrl
fwait
inc
adc
and
in
subb
push
and
push
aam
mov
call
ret
pushf
pop
push
add
sbb
js
mov
sbb
jp
lock
js
imul
inc
fisubl
pusha
aas
cmp
std
adc
gs
xor
imul
fwait
inc
and
pop
add
inc
out
xchg
cmp
sub
ret
mov
inc
and
test
out
rorb
sub
lahf
jne
cmp
inc
dec
insl
inc
xlat
in
sahf
cmc
fnstsw
nop
in
int
mov
jecxz
icebp
adc
xchg
inc
mov
lea
imul
push
call
push
cmpsb
push
inc
out
addl
outsb
mov
je
pop
push
nop
adc
push
aam
into
roll
and
outsb
xor
inc
repz
inc
sti
cwtl
cmpsb
jl
ret
ffree
or
nop
fcmovbe
cltd
imul
jb
mov
int
xchg
mov
jae
pusha
ffreep
movsb
fs
xchg
dec
jo
call
in
rcrl
pop
push
add
pop
pop
hlt
mov
jge
sub
xchg
add
or
and
mov
xchg
adc
mov
mov
sbb
lahf
pop
cs
out
mov
cli
enter
movsb
pusha
pop
rolb
push
in
xor
out
js
adc
fimull
gs
mov
dec
insl
cs
rorb
mov
pusha
ds
loop
in
xchg
inc
rorb
or
fwait
sti
adc
imull
sbb
or
push
sahf
inc
ljmp
jp
das
call
mov
jp
dec
cmp
push
xor
roll
aad
sub
aam
cmp
out
dec
daa
mov
or
xor
test
iret
cmc
cmp
push
stc
int3
dec
and
test
sarb
xchg
in
xchg
or
mov
inc
adc
sub
cmpl
adcb
xor
mov
jno
mov
jns
mov
out
das
scas
daa
cltd
popf
adc
dec
jge
imul
inc
stos
stos
mov
push
jno
mov
xchg
shll
xchg
push
dec
jne
es
std
xor
sub
add
test
dec
outsb
add
cmp
shrb
stos
fistpll
mov
faddl
mov
das
stos
pop
scas
movsl
dec
popa
aam
insl
ljmp
rcl
dec
mov
sbb
mov
xchg
dec
in
pop
sbb
dec
aas
in
sub
xchg
mov
push
pop
pop
lcall
jbe
xor
push
pop
cwtl
pushf
in
stc
mov
popf
loop
lock
add
jns
xchg
out
mov
inc
xchg
jno
pop
dec
pop
push
call
add
inc
fcmovb
loope
mov
adc
jns
mulb
push
pop
sbb
icebp
add
stc
jge
sbb
cmpsb
pop
popa
sub
or
pop
dec
jo
cld
sub
xor
add
cmp
scas
lods
jne
fisttpll
sub
test
pop
daa
inc
leave
cmp
add
sbb
sbb
or
push
mov
xchg
inc
add
incb
push
cmovle
adc
stos
mov
iret
add
push
subl
fldl
push
fisttpl
fcoms
dec
push
push
xchg
cmp
in
cli
movsb
xor
repz
pop
movsb
xchg
sub
das
mov
pop
pop
add
sub
sbb
repnz
jno
lret
fcomps
dec
test
mov
push
push
dec
pop
mov
mov
outsb
xchg
push
cltd
lahf
enter
ljmp
pop
aam
aaa
popf
paddb
int
repz
inc
fdivrs
popa
pop
dec
cmpsl
adc
dec
hlt
dec
fidivs
in
mov
cltd
adc
test
and
lea
mov
imul
cmp
inc
test
push
orl
dec
bound
xor
das
mov
push
cmp
add
pop
fdivrs
gs
jge
test
dec
cmp
aad
pop
sub
in
inc
outsl
adc
repz
or
inc
lcall
test
dec
push
fmull
lds
mov
mov
pop
into
xchg
outsb
mov
cltd
jp
inc
icebp
dec
xchg
sti
jecxz
sbb
pop
or
sub
or
xor
rcl
cwtl
jge
daa
dec
inc
loope
rorb
dec
into
cli
fsubl
or
stos
std
int3
xchg
icebp
mov
les
into
fists
push
enter
test
imul
clc
int3
es
and
push
xchg
in
pop
ja
loopne
das
jne
nop
xor
mov
js
cwtl
mov
orb
jno
adc
out
push
mov
xor
or
inc
pop
mov
dec
div
shl
lahf
pushf
fcoms
outsb
nop
push
push
adc
add
jno
pop
enter
int
ror
sbbl
mov
mov
movsl
nop
add
jnp
pop
ja
jp
movsl
mov
push
or
xor
cltd
inc
cmc
cmp
incl
add
mov
jae
xor
push
pop
mov
jmp
mov
ds
fcomps
jge
jno
imul
push
outsb
adc
adc
ret
push
in
ss
sarl
rclb
pop
pop
xlat
jo
lea
mov
inc
push
dec
cltd
inc
enter
push
scas
imul
xchg
rclb
add
aaa
dec
fcoms
mov
aaa
lahf
dec
fisubl
sahf
sub
jne
dec
or
mov
dec
fnsave
xor
adc
mov
or
xor
lods
jle
pop
je
dec
aad
sub
jae
and
xor
movsb
mov
jl
sub
add
dec
dec
cmpsl
dec
rclb
ficoms
pop
cmp
cmp
arpl
cli
mov
xchg
shlb
stos
adc
and
ja
push
sub
das
add
rorl
in
out
dec
mov
push
das
or
aaa
sbb
leave
xor
daa
int
xor
add
dec
outsb
test
scas
popl
and
cmp
icebp
fcmovnbe
push
lock
inc
or
cld
js
and
dec
xchg
cmp
sahf
int
pop
add
arpl
cmpsl
and
add
aaa
popa
push
dec
rclb
jbe
imul
xor
das
inc
icebp
insb
inc
cmp
add
dec
inc
dec
push
hlt
cmp
inc
xlat
push
cwtl
adc
aad
enter
push
in
bound
cmp
ret
inc
push
rcr
aam
out
adc
cmp
push
xchg
aas
xor
mov
aaa
or
or
sbb
divl
cmpsb
push
test
movsb
add
lret
inc
cmpsl
sbbl
mov
adc
xor
mov
int3
imul
adc
lock
pop
mov
adc
push
test
stos
pop
and
lahf
mov
jmp
or
sti
and
in
pop
jnp
out
orb
int3
jne
repnz
das
gs
nop
jnp
add
push
or
out
dec
mov
in
das
xchg
in
aad
insl
jl
mov
lahf
aad
inc
mov
out
cmp
xchg
popa
popa
outsb
lds
aad
fisttpll
mov
cs
mov
jb
mov
add
out
out
mov
adc
dec
adc
add
push
cmpsl
pop
cmp
sub
lcall
ss
scas
push
mov
push
loope
pop
pop
in
out
xor
bound
repnz
in
outsb
push
aad
pop
inc
scas
in
xchg
jp
and
add
xchg
adc
jge
push
or
lcall
rcrb
dec
push
jns
and
test
mov
and
popf
jno
cmc
dec
addl
inc
add
push
hlt
jge
sub
cld
jns
ret
jne
and
dec
pop
cmc
lock
pop
shr
fldl
sub
jnp
sbb
adc
dec
dec
gs
int3
ret
jge
cmp
popa
aas
xor
bound
dec
and
lock
sub
and
xchg
xchg
jno
lret
repz
xchg
push
jno
es
cmp
stos
adcb
and
movsb
gs
push
mov
icebp
sbb
pusha
pop
clc
leave
jne
mov
cmpsl
push
sub
jecxz
dec
fwait
rcrl
adc
mov
or
add
add
xor
push
leave
dec
add
dec
xor
mov
pop
sbb
sbb
adc
dec
mov
fists
aaa
adc
roll
mov
push
mov
adc
cltd
stos
mov
sahf
cmpsb
shlb
sbbb
add
retw
xor
and
fistpl
jns
aaa
push
mov
dec
jne
adc
push
mov
out
or
push
fcoms
outsl
jge
mov
icebp
or
sub
cmp
into
push
xchg
incb
pop
or
enter
call
addr16
lret
das
xor
mov
dec
push
sbb
push
scas
mov
imul
xchg
out
std
sub
inc
xor
popa
xchg
jp
test
cmc
stos
hlt
stc
stos
mov
ret
leave
popa
pop
push
xchg
push
or
add
cmc
or
pop
fnstcw
pop
int3
push
es
pop
mov
sub
push
imul
adc
iret
mov
ss
cmc
leave
jns
mov
pushf
decl
out
xor
mov
inc
and
adc
push
cmpl
mov
push
sub
xor
out
jo
mov
ss
in
add
and
pop
dec
in
out
sbb
test
pushf
dec
lock
dec
hlt
lea
int3
sbb
pop
outsb
in
push
xchg
xchg
cmp
sbb
cld
inc
jp
xchg
push
mov
mov
cmp
les
mov
lods
rcll
xor
sub
cs
das
or
xor
int3
push
outsl
daa
mov
in
pusha
pushf
adc
pop
pop
out
dec
fs
repnz
int3
dec
mov
ljmp
ret
push
add
dec
lret
jno
cmp
jne
and
add
and
scas
int
andl
movsl
outsb
adc
ret
aas
ljmp
push
jno
xor
scas
outsl
shlb
nop
mov
movsw
cmpxchg
decb
sub
js
out
cmpsb
les
in
das
and
pop
in
xor
sti
push
push
dec
jno
jne
sti
cld
verw
sbb
push
or
and
push
xor
cmp
mov
push
xchg
dec
or
call
decl
sbb
jbe
xlat
xor
dec
or
fldcw
jne
jge
xchg
push
cli
outsb
mov
push
loopne
cmp
or
mov
pusha
cwtl
setne
and
mov
and
sbb
aam
cmpsb
arpl
cmp
pop
loop
cmp
jbe
inc
sbb
in
cld
fcomp
mov
addr16
jmp
jmp
das
cmp
out
out
icebp
loop
in
jno
out
dec
or
jns
xchg
inc
add
decl
xchg
outsb
sub
ret
or
push
xchg
push
sub
add
addb
cmp
add
mov
imul
adc
pop
sarb
fsub
test
xor
sbb
sub
push
jo
xor
adc
shll
jno
imul
push
out
mov
jno
push
insl
pusha
xchg
in
xlat
stos
push
outsb
adc
rep
aas
sti
inc
cmp
add
out
in
mov
adc
pop
cs
ficoml
and
lahf
xor
int
test
popa
lcall
fisubrl
dec
dec
mov
pushf
xor
fiadds
and
push
insl
cmp
sbb
push
push
les
adc
push
pop
loopne
inc
dec
inc
mov
inc
fs
xchg
jns
in
dec
sbb
jne
push
dec
imul
mov
lds
outsb
ljmp
mov
inc
loope
push
add
pop
and
mov
inc
push
push
fistl
inc
xor
mov
or
jge
or
dec
pusha
in
int
xchg
jmp
mov
xchg
out
add
clc
into
lods
cli
xchg
imul
add
or
fstpt
cmc
rol
or
mov
or
push
cltd
lds
cmp
aad
dec
dec
push
lds
dec
sub
fs
outsl
mov
dec
or
push
gs
mov
sub
jg
repnz
jge
aaa
fistl
cmp
adc
stos
lock
inc
jno
rcrb
dec
push
ret
pop
dec
jb
aas
or
mov
cwtl
scas
pop
xlat
cwtl
cmp
inc
xor
xchg
push
push
add
fldcw
xchg
testl
dec
inc
sbb
cmp
pop
repz
dec
cli
xor
aaa
cld
jmp
or
cmp
jg
inc
and
mov
sbb
xchg
jne
jmp
pop
push
xor
cmp
xchg
xor
adc
push
add
pop
rolb
outsb
cli
adcl
push
or
jo
or
fnsave
test
push
imul
cmp
mov
fmul
sub
fidivl
lds
add
call
push
mov
or
mov
jo
seta
shll
inc
ret
movsb
mov
stos
idiv
test
cld
cltd
pushf
add
out
jecxz
addl
sbb
loopne
xchg
dec
mov
movsl
into
jno
jp
mov
lods
jne
int
jnp
sbb
jecxz
mov
pop
call
jns
cmp
push
sub
inc
enter
and
adc
out
loop
xchg
mov
adc
std
cwtl
andb
test
jno
outsb
pop
les
sub
pop
dec
xchg
push
enter
lret
pop
iret
pop
xor
outsb
push
std
cltd
or
fs
lret
ret
out
cld
fsubrs
lcall
or
gs
cmp
pop
add
inc
xor
pushf
pop
adc
dec
jno
inc
in
cwtl
fsubrl
outsb
xor
loope
mov
jecxz
sbb
xor
pop
in
sbb
nop
sbb
es
xor
aaa
imul
inc
lds
xchg
xlat
inc
rcll
mov
push
shrb
test
jl
fimull
test
xor
imulb
movsl
inc
xor
mov
cwtl
imul
icebp
out
pop
cmovg
xchg
fwait
dec
ds
repz
pop
test
repz
adc
in
fwait
inc
adc
aas
pop
dec
or
outsl
lock
rcll
push
outsb
inc
mov
fdivrl
cmp
mov
dec
push
or
fstp
push
adc
or
jno
popa
stc
notl
cwtl
aaa
cwtl
pop
xchg
std
adc
jbe
test
dec
popf
mov
scas
pop
xchg
add
xchg
mov
mov
dec
mov
or
dec
ror
cmp
int3
jns
lock
pop
jno
bound
imul
mov
enter
sti
sub
in
hlt
imul
mov
add
mov
adc
lea
loope
xor
cli
aas
sub
jne
mov
aaa
add
jecxz
cmp
jns
sub
das
push
imul
jmp
mov
in
nop
into
inc
xor
cmp
pushf
ret
cmpsb
mov
enter
rolb
adc
imul
sub
shrb
movsl
push
fstl
lahf
mov
mov
or
and
pop
scas
sub
jnp
sub
dec
nop
or
push
xor
sbb
ja
loopne
inc
and
cmp
mov
cmp
mov
push
sbbl
sub
adc
ficoml
loope
sub
mov
js
xor
leave
adc
push
push
sbb
cmp
in
pop
inc
cmp
push
aaa
loopne
lea
or
dec
jno
jo
pop
push
mov
outsl
cmp
fwait
test
and
or
test
in
out
js
sub
push
daa
pop
stc
test
std
jmp
or
call
roll
ret
adc
xor
add
leave
jo
pop
xchg
adc
push
jno
dec
rolb
add
push
es
lahf
inc
sbb
rorb
dec
jecxz
adc
mov
shll
cmc
fs
fcoms
push
in
and
rcr
outsl
adc
xchg
aas
jle
sub
push
gs
push
scas
xlat
inc
lret
xlat
add
push
adc
push
sub
cld
push
pushl
repnz
dec
jno
popa
xchg
mov
jp
add
int3
loope
lcall
rorb
xchg
shl
add
test
and
inc
push
mov
scas
in
lcall
movsb
dec
mov
push
mov
scas
ja
xor
jno
inc
loop
push
es
gs
scas
mov
mov
rcl
inc
outsb
mov
mov
pop
adc
movsb
push
fcomps
cli
adc
lock
rcll
inc
rclb
cmpsb
adc
xchg
cld
and
pop
arpl
adc
dec
pop
sbb
push
mov
jp
imul
dec
adc
lods
adc
mov
mov
mov
adc
scas
mov
out
mov
inc
sub
xchg
xor
mov
in
lret
pop
sbb
jno
pop
push
test
add
jne
pop
cmpsb
icebp
lret
sbb
adc
or
dec
jns
out
and
shlb
push
or
dec
aam
push
in
pop
push
sbb
inc
lds
jne
aam
adc
in
sub
rcr
inc
add
pop
lea
gs
inc
out
push
outsl
add
push
lret
es
mov
mov
in
aad
xchg
out
sarb
popf
outsl
insl
push
movsb
push
push
push
bound
fisubrl
dec
push
sbb
sbb
mov
leave
cli
adc
dec
leave
popf
sbb
push
lcall
or
adc
aas
mov
adc
sub
addr16
add
cmp
cmp
mov
dec
add
push
mov
fnstsw
push
aam
push
jecxz
jno
dec
mov
inc
rclb
xchg
mov
dec
iret
cld
push
or
movsb
inc
mov
dec
mov
incb
xorb
sbb
or
fdiv
bound
push
push
xor
popa
add
incb
jo
ret
jle
out
icebp
es
iret
mov
pop
lods
int3
push
sub
and
xor
test
jle
movsl
add
inc
add
data16
sub
dec
xor
push
xor
movl
add
mov
cmova
rorl
mov
mov
inc
sub
mov
push
into
addr16
xchg
mov
xchg
sti
mov
cmpsl
push
adc
cltd
dec
aad
cmp
sarl
mov
sbb
sbb
jl
xchg
jne
imul
xor
ret
xchg
cmp
xor
cmp
sbb
push
push
jne
dec
mov
dec
jecxz
ret
sub
fidivrl
nop
cmp
dec
lcall
mov
and
faddl
cwtl
incb
jb
sbb
push
shl
iret
fidivrl
es
push
jecxz
jns
mov
fistpl
sbb
xchg
test
dec
mov
lret
dec
in
iret
xchg
xor
hlt
lea
push
stos
ja
daa
and
or
movsl
les
or
aas
push
fsubrs
fdivr
nop
cmpsl
mov
mov
xchg
imul
imul
cmp
int
ret
add
dec
adc
dec
pushf
cwtl
adc
dec
movl
cmp
sub
mov
imul
sarl
pop
push
fimull
sbb
xor
in
inc
stos
aad
cmp
xchg
loop
sbb
cmc
cmp
and
stos
cmp
loop
incb
fdivrl
aaa
popa
mov
ds
inc
push
hlt
push
push
fstl
dec
pop
data16
scas
mov
inc
ja
insb
jmp
add
sub
jmp
loopne
xchg
frstor
or
sub
das
cmp
xor
push
cs
dec
lds
negb
fbstp
adc
cmp
movsb
push
cmpsl
dec
or
xchg
push
sub
pop
add
lods
mov
out
dec
jno
fnstsw
orl
and
nop
adc
jno
sub
fsubrl
mov
xor
dec
jno
mov
jecxz
stos
push
inc
jne
into
xor
mov
jno
cs
outsb
or
add
scas
add
call
data16
pop
mulb
push
push
jecxz
push
outsb
je
inc
inc
sbb
jmp
pop
add
pushf
mov
sub
movsb
xchg
xor
mov
mov
or
outsb
mov
dec
or
cs
popa
incl
dec
push
dec
or
dec
add
adc
add
xchg
icebp
pop
jnp
xor
cld
lahf
ficoml
sbb
xchg
jns
in
push
fidivl
test
or
jne
mov
mov
jg
push
out
pop
push
in
or
sahf
xchg
movsl
add
add
mov
xor
clc
insb
sbb
repz
push
sahf
loopne
ficomps
inc
push
pop
ret
jmp
fbld
push
clc
repnz
stc
pop
fisttpll
or
xchg
xor
jg
insb
mov
xchg
cmpsb
dec
jno
aad
pop
adc
cmp
cmc
dec
lcall
int3
sti
push
pushf
xchg
dec
aaa
inc
jge
inc
add
leave
inc
xchg
jns
fdivrl
xor
push
clc
mov
lcall
push
cs
sbb
jno
xor
mov
adc
jp
xchg
jno
ss
add
adcb
cmp
push
sub
pop
clc
ret
adc
jg
add
adc
sbb
pop
enter
clc
add
jns
fstpl
les
inc
pop
add
addr16
inc
rclb
mov
inc
push
push
jns
mov
imul
sahf
insl
mov
cmc
hlt
test
std
pop
insb
sti
scas
mov
sub
in
jecxz
pushf
pop
stos
add
or
pop
imul
lcall
sbbb
mov
fisttpl
inc
stos
xor
pop
testl
mov
jp
les
mov
ret
aad
loope
xor
scas
pop
jb
hlt
cmp
adc
arpl
pushf
data16
mov
mov
mov
jp
sti
dec
xchg
pop
adc
mov
lcall
push
pop
xor
or
add
clc
imull
daa
inc
ss
pushf
push
bound
popf
cmc
xchg
mov
cmp
xchg
out
cmp
pop
adc
fisubs
add
pop
push
jge
mov
mov
enter
ja
daa
pop
xchg
in
push
pop
jecxz
xor
daa
fcmovbe
xchg
pop
icebp
leave
std
pop
push
jno
mov
jmp
or
xchg
pop
sbbb
cmc
push
jecxz
popa
in
aas
push
jno
push
push
xchg
jge
push
rorb
into
lahf
dec
or
xchg
popa
ja
pop
and
das
es
lret
mov
aas
gs
lock
mov
add
scas
lahf
add
xchg
pop
fildll
sub
sar
sbb
pop
ss
jno
int3
adc
or
mov
jle
cltd
cmc
sbb
out
lcall
test
sbbb
and
inc
cmc
xchg
xchg
fstps
sbb
jnp
sbb
pop
xchg
shlb
daa
and
dec
scas
cmp
cltd
sub
and
mov
shl
sar
add
jne
mov
jnp
jmp
ffree
popa
icebp
mov
push
dec
push
dec
fsts
xor
mov
lds
sub
cltd
dec
fsubr
dec
mov
subl
xchg
inc
dec
dec
mov
inc
insl
and
out
dec
xchg
inc
push
push
les
cwtl
xor
fs
jg
add
dec
jle
lods
sti
cli
popa
in
mov
cld
lahf
fimuls
inc
dec
and
pop
in
jno
pop
les
fwait
xlat
jle
xor
inc
xchg
sahf
mov
clc
xor
jbe
xor
xor
cmp
cld
dec
jg
sbb
xor
ss
idivb
or
cwtl
stos
cwtl
pop
push
pmulhuw
cmp
cmpsl
push
cmpsb
jecxz
xor
jns
adc
jl
xchg
add
cmpsl
int
test
xchg
cmp
mov
inc
mov
in
mov
push
xor
push
test
inc
test
cmc
mov
xchg
add
inc
push
push
mov
and
jne
lock
in
push
adc
pop
jnp
ret
push
pop
inc
addb
xor
push
js
or
push
xor
gs
cld
out
dec
int3
in
fisubl
and
adc
daa
mov
in
test
adc
jle
sahf
shlb
insl
insb
pop
aad
leave
fsubs
nop
scas
jmp
pop
cmpsb
or
js
mov
div
or
push
dec
pop
push
or
test
or
sahf
test
iret
aaa
sarb
bound
imul
enter
xchg
adc
cmp
sub
push
enter
push
pop
sub
jecxz
stos
adc
lahf
dec
mov
rdtsc
rorl
icebp
adc
out
lret
add
adc
add
dec
inc
iret
push
sbb
push
rorl
adc
pop
out
insb
bound
insl
push
or
inc
sbb
sbb
fdivl
xchg
mov
push
push
or
add
nop
loope
push
or
xor
out
jecxz
xor
shrb
add
in
add
out
test
pop
test
add
cmc
pop
or
push
push
add
mov
adc
stos
adc
jns
outsl
jl
sbb
int
aad
shlb
add
je
cmp
nop
jno
cld
decb
add
xor
push
push
dec
fadds
popf
add
mov
mov
sti
popf
mov
dec
mov
packsswb
add
xor
cld
pop
xor
xor
dec
jne
nop
lret
push
orl
jbe
pop
or
cmc
jl
icebp
xor
aas
inc
gs
dec
insb
hlt
push
gs
xor
loop
scas
mov
push
mov
movl
inc
dec
jb
mov
jns
outsb
mov
pop
lea
push
insl
arpl
fidivs
xchg
lret
push
sbb
in
pop
push
sbb
test
inc
jl
mov
call
inc
into
cld
fwait
sbb
sbb
jno
mov
fsubrl
inc
mov
jp
dec
mov
aam
add
cmp
sbbl
bound
xor
push
sub
nop
or
js
int3
jno
dec
and
mov
stos
push
sub
add
push
mov
pop
roll
pusha
lcall
lret
jbe
dec
andb
sub
mov
daa
pusha
test
stc
cmp
push
inc
dec
lds
xchg
xchg
dec
push
cmp
adc
int
hlt
jne
jmp
sub
mov
mov
inc
and
mov
iret
adc
std
repnz
rorl
and
insl
pop
dec
push
mov
stc
adc
insl
dec
dec
and
xchg
fistpl
mov
movsb
shll
in
in
mov
push
in
lahf
cmp
repz
adc
push
iret
xchg
push
mov
inc
fcompl
insb
push
fdiv
xchg
icebp
pop
in
push
dec
dec
iret
dec
adc
rorl
fcmovu
push
iret
psubusw
push
into
dec
cwtl
pusha
stc
dec
dec
push
fyl2xp1
push
js
ret
inc
xchg
push
add
add
popa
data16
xchg
jo
sbb
mov
sbb
lcall
movsl
dec
xor
dec
in
sbb
pop
xor
sbb
push
xchg
add
sti
push
jo
sub
pop
cli
jo
lea
push
push
push
lret
inc
xchg
mov
bound
mov
jne
stos
cmp
sbb
xor
adc
sub
sbb
mov
adc
cld
jae
push
das
imul
push
enter
scas
daa
das
jo
push
iret
rcll
dec
bound
into
add
adc
ljmp
out
imul
mov
sbb
pop
xchg
inc
fnstcw
sub
pop
pop
aas
push
testb
dec
jns
out
in
js
xor
or
dec
fmuls
ret
adc
sub
ljmpw
test
nop
jmp
mov
inc
inc
and
pop
mov
pop
shrb
mov
push
sbb
pusha
push
out
fists
hlt
pop
dec
xchg
xor
inc
or
xchg
mov
ds
xchg
ret
push
cs
fsts
pop
jbe
mov
xchg
adc
outsb
loopne
jo
pop
addr16
fsubrs
dec
or
out
jne
out
adc
dec
int3
sbb
js
arpl
mov
lret
inc
xchg
addr16
or
jmp
sbb
cmp
lahf
cmp
xor
in
xor
cmp
je
mov
dec
bound
in
push
out
mov
dec
mov
dec
rclb
xchg
mov
loop
cmc
add
sub
xchg
stc
jmp
in
push
mov
std
rcrb
jecxz
dec
cmpsb
rol
xchg
cmpsb
mov
fldl
pop
sbb
xchg
lret
pop
cli
dec
imul
adc
or
add
testb
push
push
cmpsl
out
js
push
out
push
xor
inc
cld
enter
or
sub
dec
sahf
shr
jb
out
adc
cmp
repnz
jo
leave
popa
lret
adc
add
out
dec
jae
inc
cld
sti
aam
push
cltd
in
loope
or
addr16
jp
push
sbb
sbb
inc
pop
and
ljmp
mov
mov
lods
dec
loopne
pmaxub
push
sbb
inc
outsb
mov
movsb
sub
outsb
push
ror
mov
cld
aaa
inc
jg
mov
mov
es
xchg
movsb
pop
xchg
test
mov
insl
aad
dec
lahf
call
pop
out
in
jno,pt
sysret
in
cmp
xor
aad
add
xor
andl
xor
push
andnps
xor
lret
push
test
push
inc
mov
xchg
inc
mov
pop
jle
add
xor
loope
mov
dec
xlat
push
cmp
stos
jle
aad
and
dec
rorl
aam
and
scas
or
inc
mov
idivb
fwait
pop
xlat
push
push
int3
or
sbb
subb
sub
fnstcw
push
iret
rorl
int3
and
dec
mov
pop
mov
push
pop
inc
dec
sbb
je
cmp
xor
xor
xor
pop
add
cmp
xchg
negl
data16
scas
inc
cli
ds
push
inc
scas
jns
push
jno
insl
dec
imul
test
xor
pop
int
jno
dec
mov
mov
inc
pop
mov
movsb
int
fmuls
insl
adc
jg
enter
fists
dec
frstor
adc
rcrl
cmp
out
dec
insb
cmp
or
jmp
mov
cmp
je
insb
aaa
ja
fsubs
loop
ljmp
ds
data16
in
mov
leave
imul
fxrstor
mov
lock
mov
fs
mov
xchg
sbb
leave
inc
pop
adc
push
into
or
cmp
icebp
lods
les
addb
mov
adc
jno
icebp
mov
pop
sbb
jo
sbbb
inc
pop
sbb
mov
cmpsb
push
loope
inc
add
cmp
data16
out
mov
icebp
adc
icebp
pop
xor
cmpb
insb
pop
xchg
adc
in
adc
outsb
pop
sahf
add
inc
push
fsts
push
loopne
adc
cmp
test
in
inc
sub
loopne
les
inc
int3
or
stos
outsl
jge
adc
lds
adc
push
lcall
loop
or
cwtl
xor
push
pop
push
inc
jno
lods
and
sarl
cmp
ljmp
cmpsl
aad
repz
icebp
fldcw
dec
pop
or
and
mov
dec
fadds
push
ja
push
xor
jl
je
test
jmp
inc
outsb
or
jno
sbb
add
mov
push
xchg
push
inc
or
lret
into
sub
lahf
inc
adc
cmp
cmp
push
imul
cmp
adc
jl
out
push
push
xchg
dec
fs
in
pop
cvttps2pi
inc
imul
and
pop
cmp
and
loop
xchg
dec
adc
fwait
push
mov
dec
fsubrs
dec
imul
jle
sbb
es
add
pop
sub
push
sbb
int3
lea
aas
dec
jecxz
adc
push
jno
pop
jno
adc
in
xchg
mov
pop
pop
pop
mov
pusha
movsb
pop
lret
in
icebp
imul
roll
cmp
add
sub
inc
push
icebp
popf
dec
mov
mov
loop,pn
hlt
pop
dec
mov
inc
xchg
pop
adc
or
inc
inc
flds
adc
or
push
and
rcrb
cmp
add
push
mov
add
bound
xchg
push
push
stos
adc
in
fs
fldz
iret
push
adc
push
adc
aad
or
shll
push
hlt
inc
xor
cmp
outsb
mov
jbe
jbe
inc
je
imul
leave
jmp
enter
cs
pop
or
push
add
inc
in
jne
setns
roll
mov
pop
inc
test
ja
dec
in
aad
lret
adc
push
cmp
bound
xor
push
inc
in
xchg
pop
push
xchg
loope
dec
dec
iret
push
adc
popa
rcll
ja
inc
inc
outsb
cmpb
rorl
mov
sbb
pop
xor
cmc
push
les
stos
pop
ror
push
pop
arpl
dec
sbb
adc
mov
pop
pop
shlb
inc
lcall
jl
test
popa
sarl
fdivp
lret
cmp
push
pop
movsl
dec
in
addr16
dec
cmc
out
jae
testl
and
adc
pop
inc
mov
push
push
popa
out
and
out
clc
inc
jns
test
popa
and
mov
push
sub
pop
xlat
imul
fldl
out
daa
inc
xor
or
ret
aam
sahf
es
sub
jno
lahf
ret
loop
out
scas
dec
std
outsl
cmp
mov
push
pop
dec
das
xor
mov
shlb
enter
xchg
cmpsb
cld
cmpsl
mov
and
adc
movsb
mov
cwtl
pusha
push
mov
cltd
adcb
adc
dec
leave
xor
rorb
stos
xchg
lea
movsl
ljmp
add
mov
shr
out
cmp
adc
fsubrs
cmp
xor
pop
add
jl
out
fisttps
push
cmp
dec
dec
test
ds
xor
rcrl
or
and
inc
inc
push
cmp
out
mov
outsl
test
xchg
arpl
inc
add
hlt
and
xor
pop
dec
sub
dec
pushf
xor
mov
mov
fxch
dec
adc
xor
mov
cmp
jnp
or
push
jne
mov
mov
pop
mov
sub
cmp
fiaddl
cmpsb
pop
sub
add
or
sbb
inc
xor
pop
aas
je
insl
imul
test
sub
cltd
outsb
cs
popa
xchg
es
addb
dec
add
int
pop
lds
xchg
mov
imul
adc
les
adc
aaa
leave
fisttps
mov
rorl
inc
roll
faddl
fldl
jno
addr16
xor
cmp
cwtl
add
out
shlb
into
dec
arpl
pop
push
enter
in
shl
jo
inc
dec
sbb
push
ficoms
jecxz
mov
call
push
bnd
stos
mov
stc
addps
out
cmp
call
jne
loope
sbb
push
add
xor
or
cmc
inc
inc
ffreep
add
cli
popa
mov
sarb
inc
and
iret
fwait
xor
push
fnstenv
ftst
push
outsb
nop
add
mov
out
xchg
cmp
test
cld
xor
pop
inc
push
addr16
cli
push
ret
push
sti
mov
sub
push
pop
sub
add
repz
std
cmp
mov
pop
aad
in
or
insb
lea
inc
movsl
gs
bnd
and
gs
add
push
push
xchg
push
sub
sti
out
xchg
es
outsb
je
cltd
sub
pop
pop
enter
or
mov
lds
push
cwtl
out
xchg
xchg
adc
pop
iret
or
arpl
psubsb
or
call
sbb
xor
and
push
or
punpckldq
sub
xchg
mov
xor
ss
inc
int3
add
jecxz
dec
cmp
xor
fwait
mov
cwtl
push
sub
aas
sub
mov
fs
btc
lock
jecxz
jae
movsb
or
add
jmp
adc
sbb
pusha
inc
test
dec
xor
mov
enter
rorl
inc
dec
cmc
push
xor
push
outsl
inc
mov
inc
testl
jp
mov
addr16
into
cmp
dec
sub
ffreep
aas
shrl
mov
xor
les
lcall
cltd
inc
mov
inc
inc
or
xchg
and
sbb
scas
jnp
mov
mov
push
dec
js
shlb
adc
inc
mov
test
cmp
dec
jmp
jnp
cmp
dec
cmpsl
dec
sub
push
in
fadds
std
ret
fmuls
ret
mov
mov
in
sub
fsubr
insl
inc
daa
xor
mov
push
push
arpl
push
negl
loop
popa
fnstsw
add
jg
dec
cli
xchg
fisubrs
fstl
pop
dec
fbld
adc
jge
inc
jl
sub
jno
ret
inc
mov
inc
leave
pushl
push
ret
je
icebp
and
fstpt
dec
sub
sbb
sti
jge
iret
push
faddl
and
add
sub
sub
adc
in
enter
aas
orl
jge
cmp
loop
int
jno
mov
cmp
jne
cmc
jp
test
mov
xchg
call
in
or
sub
in
shl
add
or
out
lret
mov
mov
ljmp
push
push
add
sbb
xchg
jnp
shl
sti
pop
ds
and
adc
sar
das
testl
xchg
xor
leave
and
stos
pop
cmpl
push
int3
jno
mov
and
xchg
sbb
imul
inc
ja
xchg
pop
testl
mov
add
pop
push
sub
inc
dec
push
fstpt
lock
xchg
es
inc
jle
xchg
pop
roll
pop
push
sbb
jp
outsb
sub
hlt
adc
pop
cmp
int3
in
into
xlat
shlb
pushf
push
in
and
push
xor
fmull
pop
and
push
jno
shl
or
adc
repnz
popa
inc
shl
mov
add
aaa
mov
sub
adc
mov
jmp
out
and
ss
xor
pop
insb
sbb
cmp
dec
out
pop
push
and
mov
jle
add
ret
mov
push
sbb
popw
sbb
jne
xlat
adc
jns
jl
aam
daa
jp
in
scas
push
mov
pop
out
sbb
mov
inc
push
stos
dec
push
cmp
sub
pop
movzbl
ljmp
out
push
loope
lcall
loope
xchg
push
fcos
jg
sub
jmp
into
jl
mov
into
mov
lea
ret
cmp
or
adc
insl
loop
fldl
bound
adc
pop
push
outsb
xor
lds
jb
out
dec
ror
sub
daa
add
dec
mov
jge
push
pop
popa
mov
xchg
inc
pop
xchg
dec
sahf
cmc
loopne
dec
dec
xor
and
xchg
scas
fs
xor
jmp
xor
xchg
bound
nop
das
push
inc
dec
jno
incl
icebp
cmp
int
iret
xchg
cmp
xchg
fistpl
sbb
push
pop
dec
imul
push
shrb
outsb
push
mov
xor
inc
mov
or
gs
imul
pusha
or
jne
pop
fadd
sbb
push
pop
in
push
push
xor
and
adc
mov
cmp
stos
inc
mov
sub
lcall
sub
or
daa
pop
out
mov
adc
sub
andb
cmc
xor
lock
sarb
sti
flds
iret
mov
inc
insb
into
mov
aam
xchg
fsubrs
dec
jge
cltd
popa
and
cmp
adc
shll
inc
or
sbb
push
cmp
int3
mov
jne
lock
xor
push
sub
shlb
popa
imul
add
jno
std
pop
xchg
popf
lods
mov
lods
mov
inc
lahf
rorl
inc
icebp
xor
inc
lods
jns
push
movsb
lcall
push
and
aas
sub
aad
cmp
adc
pop
xor
ss
xor
and
push
inc
mov
outsb
mov
jb
sbb
dec
jbe
push
pop
dec
shlb
sbb
sbb
pmulhuw
rcrl
adc
sbb
lods
mov
icebp
mov
mov
nop
jb
inc
xchg
arpl
loopne,pn
stos
adc
rcr
xor
fimuls
nop
push
xchg
flds
jmp
mov
cmp
ss
imul
pop
imul
lss
add
popa
sbb
inc
fwait
pop
stos
inc
pop
push
mov
push
sub
sbb
push
pop
xchg
or
fisubrs
xchg
pop
cmp
push
mov
test
mov
inc
mov
hlt
leave
inc
cmp
or
ja
cwtl
pop
add
mov
insl
push
fidivrl
pop
push
ja
cmp
pop
xor
dec
push
pusha
lret
sub
jb
arpl
pop
xchg
sbb
pop
push
orl
push
push
xor
mov
push
repz
dec
dec
xor
cmp
jae
pop
jo
fbstp
nop
sub
outsl
pop
divb
and
push
shlb
and
and
dec
adc
xor
jno
loope
push
fnop
in
fidivl
push
push
dec
mov
jl
xor
push
lcall
and
pop
imul
push
daa
sub
xchg
xor
rorl
adc
orb
mov
and
imul
mov
test
jmp
fs
mov
int3
inc
inc
push
pop
push
xor
mov
add
xor
lds
sub
int
das
and
jge
jecxz
sub
push
pop
in
repz
loop
dec
push
popa
ficoml
dec
in
test
add
loope
shl
shrb
dec
in
cmp
outsb
xchg
movsb
cmp
add
mov
dec
dec
jbe
jno
pminub
sar
jno
or
pop
xchg
mov
push
jno
fdivr
inc
mov
cmc
add
inc
push
xchg
jne
add
inc
imul
mov
imul
int3
cmp
fdivs
rolb
jp
cmp
mov
mov
add
cmpsl
dec
jmp
fs
fcomp
push
and
sbb
inc
xchg
sahf
xchg
push
mov
dec
ret
outsl
xor
negb
cwtl
push
int3
or
call
or
aam
mov
cmp
sbb
iret
inc
sub
fwait
loop
cmpsb
jno
fldt
mov
insl
pop
push
push
push
jge
lahf
cmc
addl
addr16
aas
mov
in
jno
cwtl
adc
dec
loope
mov
xchg
jecxz
jns
shlb
push
jno
std
adc
mov
sbb
or
jge
dec
jno
sbb
or
adc
push
push
je
cwtl
jecxz
sbb
push
sbb
inc
dec
sbb
jno
pop
ss
mov
or
int
jno
ret
lock
mov
mov
mov
mov
popa
hlt
inc
cmp
sbb
aad
int
or
aas
inc
div
inc
scas
dec
push
mov
push
push
dec
ljmp
test
dec
push
lea
addr16
push
mov
xchg
repz
or
dec
lea
sti
sbbl
push
cmp
push
clc
dec
pop
rcrb
xor
fstps
jno
jl
cmc
adc
test
stos
mov
icebp
push
insb
sub
pop
cmp
aaa
insl
insl
or
jne
movb
outsl
adc
gs
mov
and
sbb
addl
orl
adc
shll
cld
repz
xchg
daa
mov
adc
and
and
cmp
test
sub
xor
xor
and
fdivs
das
pop
sti
jno
addr16
pop
fiaddl
inc
push
loop
cmc
aas
dec
xor
arpl
pop
rcrl
out
gs
mov
mov
xor
cmpsl
rclb
aas
imulb
pusha
push
jmp
mov
add
aam
fisubs
ret
cmp
xchg
out
xor
ds
ja
adc
cmp
pop
gs
mov
xchg
xchg
rolb
into
jo
in
xor
add
push
inc
jno
fs
xchg
push
xchg
mov
lret
and
mov
scas
xor
orb
int
sbb
xchg
dec
cmp
and
xor
dec
push
mov
add
dec
and
jl
add
fimull
fbld
imul
and
aam
fdivs
cli
mov
jno
mov
out
cld
pop
lods
or
cmp
add
out
and
stos
addr16
jno
inc
in
popa
mov
xlat
js
xor
mov
inc
frstor
aas
mov
out
cmp
jne
jns
sbb
repnz
mov
out
cmp
add
add
or
xlat
adc
jne
pop
jno
call
test
sbb
xchg
sbb
aad
fsubp
sub
and
leave
into
add
fidivl
adc
ja
inc
mov
jo
mov
inc
xorps
rclb
fwait
negb
mov
dec
push
push
repz
push
or
stos
mov
les
pusha
sub
lock
jbe
and
lea
pop
loope
in
insb
ret
xchg
mov
inc
arpl
and
cmpsl
jae
add
jb
pop
inc
inc
sub
mov
lret
or
sbb
nop
cltd
test
sbb
mov
or
daa
mov
or
push
adc
aad
hlt
dec
cmp
icebp
xor
jae
dec
adc
js
in
xchg
aaa
jmp
aam
cmpsl
inc
lods
fdivrl
cmp
bound
int3
insb
cmp
js
cmp
adc
fbld
adc
add
rolb
in
stc
add
pop
push
repz
xor
cmp
cmpsl
or
dec
inc
adc
dec
dec
add
cwtl
dec
push
and
sbbb
repnz
adcb
sbb
fisttpl
xchg
in
and
or
icebp
xchg
cwtl
rcll
sbb
mov
dec
add
andl
inc
call
fwait
xor
dec
mov
pop
fisubrs
outsb
loope
cmp
arpl
add
push
xchg
inc
push
sub
mov
xchg
adc
aaa
mov
inc
jl
ret
and
jns
push
and
call
dec
repz
add
popf
mov
pop
cs
js
jg
imul
or
dec
xchg
dec
dec
in
push
pushf
push
push
or
testb
leave
out
das
dec
pop
movsb
mov
dec
lcall
inc
inc
stos
cmp
icebp
negl
and
test
dec
ret
xchg
sub
or
mov
je
pop
xor
aas
mov
enter
movntps
cld
inc
ret
mov
lods
add
push
adc
xlat
leave
mov
xorl
es
and
mov
inc
cmp
test
sbb
es
daa
stc
add
pop
es
shll
add
inc
enter
sub
jno
push
cmp
xchg
xchg
fistpl
cmc
out
fwait
xchg
sbb
ret
cmp
xor
cmc
mov
lcall
jne
ss
insb
inc
arpl
hlt
lock
insb
popf
cmp
inc
outsb
or
stos
or
addr16
inc
call
addl
in
and
stc
es
jl
pusha
fistpll
mov
push
jp
jne
loopne
lcall
dec
in
leave
pop
daa
cli
aam
dec
mov
movsb
sub
xchg
or
add
pop
xor
sub
push
fdiv
test
popa
bound
insl
adc
mov
push
jge
scas
adc
dec
popa
sub
push
ss
xor
and
jge
and
es
div
pop
push
pop
ljmp
sbb
sub
repnz
lock
in
cmp
int3
sub
adc
cmp
rorb
mov
stos
cmpsb
xor
and
rorb
jno
scas
pop
mov
cmp
xor
repz
and
fs
outsb
lods
fs
mov
ds
test
add
out
pop
xor
ss
xor
pop
sahf
js
sbb
jb
sub
bound
cltd
and
cmp
sbb
inc
out
sub
lods
add
mov
or
shrl
sbb
push
xchg
push
mov
or
sbb
iret
addr16
pop
mov
pop
mov
cs
xor
or
push
cmpsb
fildll
and
lods
dec
mov
xor
push
sti
movsl
jp
xor
xchg
leave
xor
std
inc
notl
and
hlt
inc
push
sub
inc
pop
mov
test
ss
cmp
adc
in
mov
int3
pop
pop
and
dec
adc
adcl
xor
sub
aad
int3
inc
arpl
cmpsl
adc
push
and
jnp
add
and
sbb
aad
icebp
js
mov
stos
or
mov
test
jne
ljmp
push
xchg
sub
fdivrl
inc
or
inc
adc
pop
push
sub
sti
xchg
inc
jecxz
jmp
mov
gs
leave
in
leave
and
push
add
bound
jecxz
push
gs
push
nop
pop
dec
add
jae
in
movsb
in
pop
into
xchg
cwtl
aas
push
push
xor
mov
push
insl
fstpt
lcall
into
wbinvd
jo
cmp
pop
add
push
ja
push
popl
outsb
jb
xor
xlat
int3
adc
cmp
cmp
dec
and
dec
mov
movl
dec
xor
xchg
mov
or
mov
in
add
xor
fbld
cmp
cmpsb
add
add
dec
sarb
sub
aam
jo
imul
and
sbb
inc
jo
ss
or
push
imul
fists
leave
ja
push
push
orb
sbb
stos
jmp
out
rorl
addr16
pop
inc
test
and
rcr
xchg
mov
push
out
sbb
cmovns
sbb
inc
push
in
push
dec
dec
fmull
or
outsb
aaa
lea
or
sub
lret
adc
movsl
push
lahf
std
popa
inc
jno
push
cmp
sub
cwtl
push
in
nop
andb
cmp
leave
jl
or
aam
int
mov
icebp
inc
push
cmp
arpl
mov
xor
mov
pusha
pop
xchg
inc
gs
daa
icebp
pop
xor
xchg
out
bound
bound
add
mov
into
repz
lcall
push
imul
fisubl
dec
fldt
aam
adc
lea
inc
and
sbb
cs
push
or
dec
faddp
scas
xchg
push
inc
fisubrs
push
nop
jmp
pop
outsb
xchg
jmp
jmp
dec
pushf
arpl
sub
or
clc
mov
jge
movl
xor
movsb
sub
pop
loop
stc
int3
push
repnz
and
pop
and
mov
cld
mov
push
dec
into
icebp
fdivrl
push
or
icebp
and
jno
fistpll
sub
xor
ljmp
scas
dec
push
mov
aaa
dec
push
xchg
scas
pop
add
or
add
mov
stos
pusha
in
dec
in
and
stc
add
repnz
or
jmp
jle
add
sbb
dec
sub
sub
inc
mov
xchg
mov
mov
imul
daa
xchg
popa
out
adc
xor
adc
cli
pusha
lock
sar
mov
iret
es
sub
icebp
outsb
adc
dec
push
push
loop
imul
lea
fldcw
push
inc
sbb
in
rorl
and
mov
paddb
adc
sbb
mov
cmp
sbb
mov
subl
ja
add
dec
int
xorl
or
and
jle
push
pop
jmp
jmp
inc
pop
sub
aaa
into
popa
jl
loope
xor
incb
out
push
dec
sub
imul
adc
pop
cmp
arpl
xor
push
imul
adc
adc
mov
pop
fists
repnz
xor
lret
out
imul
or
dec
add
sub
in
test
mov
loop
inc
sar
outsb
lahf
fildl
cwtl
outsl
lcall
rclb
adc
aam
dec
jno
add
cltd
std
fwait
adc
sti
jle
xor
pop
inc
fs
pop
sahf
stc
add
xchg
push
mov
mov
dec
jno
jo
cmp
jno
push
push
jno
es
push
lods
xchg
push
mov
call
into
iret
stos
movsb
push
in
dec
pop
inc
fbld
cs
xchg
insl
or
pop
repz
mov
sbb
xchg
scas
pop
xorb
and
fnsave
jp
mov
popa
rol
lahf
cmovl
mov
sub
mov
push
jo
add
aaa
jecxz
aas
or
inc
dec
adc
insl
aaa
mov
add
jbe
out
inc
enter
mov
pop
leave
pop
aad
pop
xor
lahf
cmc
hlt
int3
and
repnz
test
fisubs
in
in
xchg
inc
sbb
cmp
rorb
add
add
aam
adc
xchg
dec
inc
push
dec
enter
sub
das
pop
aaa
scas
popa
pop
gs
xchg
fcompl
and
xchg
pop
pop
cmp
jbe
lds
push
movsl
pop
movsl
add
mov
in
lahf
shlb
cmp
popf
aad
sub
add
mov
leave
pop
nop
cli
dec
loop
rclb
daa
mov
sarb
fildl
jns
cs
cmc
shll
xor
icebp
lds
sub
add
pop
push
sbb
call
fistpl
and
outsl
sub
sub
dec
lret
inc
ret
sbb
imul
push
xor
lret
fidivrs
vandps
out
cltd
push
imul
fwait
or
or
fistps
jne
ds
jno
jnp
dec
push
push
jae
inc
call
pop
or
lret
jno
jg
cmp
cmp
sub
jne
jno
sub
sub
adc
out
and
in
popa
xor
or
mov
mov
fcomi
mov
and
insl
outsb
in
lods
decl
mov
push
mov
call
xchg
mov
ljmp
sti
xor
cmpsl
orb
mov
cmp
popa
inc
or
xor
ds
jno
fwait
inc
in
sub
ret
cmp
mov
cmp
jge
fdivs
jns
push
fiadds
xchg
xor
mov
fistl
cmp
mov
push
push
push
xchg
cs
xor
xchg
stos
xchg
ds
sub
push
push
push
inc
mov
adcb
push
xchg
push
mov
cmp
adc
adc
popa
mov
rolb
repz
xor
mov
cmpsl
jg
sar
imulb
leave
fcompp
or
sbb
iret
or
push
out
loop
addb
xor
sbb
adc
fs
inc
mov
fs
mov
xchg
dec
dec
aam
jbe
arpl
push
mov
push
push
push
fwait
sti
xchg
dec
sub
mov
inc
aam
xor
clc
lret
rcr
xor
repnz
daa
repz
cmp
xchg
enter
enter
or
or
in
lea
mov
cli
fisubs
ljmp
sbb
outsl
arpl
and
repnz
sti
fwait
and
inc
cmc
call
pusha
ljmp
popf
mov
push
xchg
cwtl
xor
mov
dec
in
leave
cmp
popa
outsb
enter
in
cmp
sarl
dec
lcall
inc
xchg
dec
pop
and
xor
adcl
aam
outsl
sbb
das
jns
or
dec
add
mov
test
test
dec
fdiv
aaa
jae
fisttpl
jmp
cmc
rcll
pop
frstor
out
xchg
stc
jno
fidivrl
sub
test
faddl
xor
idivl
adc
push
sbb
adc
jae
sbb
and
rcll
cmp
popa
sub
vcvtps2dq
add
adc
aas
pop
jnp
push
push
sub
je
push
in
push
in
out
xchg
push
test
addr16
add
mov
in
xor
scas
push
cmp
popa
lock
or
jno
mov
push
sub
push
shl
mov
push
cli
cwtl
movsb
mov
jb
xor
jae
xlat
ficomps
push
xor
inc
nop
push
mov
or
je
sub
jle
mov
rorl
inc
es
imul
xor
dec
pop
int3
push
lds
and
addr16
in
sub
push
xor
and
adc
in
adc
or
fistps
push
test
mov
dec
js
enter
dec
lcall
inc
arpl
jecxz
loope
test
hlt
xor
pop
mov
cmp
sahf
push
fisttpll
jo
aaa
sub
or
dec
and
mov
push
dec
nop
push
rclb
sub
clc
fstl
aas
xchg
gs
fwait
sub
call
or
sti
mulb
dec
punpckldq
mov
inc
sahf
sub
sub
in
xor
push
pop
add
adc
add
sub
adc
cli
sti
cmc
dec
push
adcb
add
imul
mov
and
imull
iret
pop
add
mov
popf
mov
jmp
inc
insl
sub
push
mov
mov
out
mov
nop
fcoml
adc
add
fldenv
and
xor
in
ss
inc
push
sub
push
rclb
mov
adcl
cmp
xchg
push
xor
clc
cld
xchg
xchg
sub
add
xor
or
int
fdivl
test
push
sub
notl
inc
xchg
lock
adc
xor
pop
push
outsb
fimull
dec
inc
and
inc
push
repz
call
fstps
pop
and
push
cwtl
lret
xchg
jo
push
and
xchg
inc
lea
pop
imull
jo
add
test
aad
dec
and
je
fcmovb
shll
daa
in
rcrl
sahf
pop
stos
jbe
arpl
xor
push
cmp
push
icebp
jno
lret
movsl
and
stos
cmp
hlt
aam
fsubrp
xlat
pusha
add
push
sub
rcr
sbb
cli
push
das
icebp
shl
pop
inc
or
jno
cmpsb
pop
xorl
adc
adc
call
imul
pusha
shll
fimuls
push
add
or
sbb
dec
mov
mov
push
mov
cmp
pop
in
fcomps
enter
or
inc
xlat
adcl
cmp
andb
arpl
dec
adc
xor
sbb
pushf
lock
imul
ds
iret
std
mov
add
scas
sub
sbb
add
imul
loop
mov
loope
add
lsl
ljmp
out
add
movsb
push
push
mov
ss
icebp
xlat
push
or
jae
mov
fcomps
jl
xor
sbb
daa
rol
pop
xchg
rcl
dec
mov
out
enter
scas
push
popa
pop
or
ret
cmpsl
pop
push
mov
jge
mov
daa
cmp
cmp
inc
push
and
out
gs
loope
cld
inc
xor
sbb
push
cmp
cmp
sbb
cmp
rcrl
gs
popa
cmc
dec
das
cwtl
xor
adc
push
ds
test
je
xor
or
and
push
mov
sub
sub
or
gs
inc
add
jge
ss
sbb
and
int3
cmc
aaa
enter
test
inc
imul
and
sbb
outsb
jnp
shlb
mov
dec
jno
cltd
pop
js
adc
xor
mov
pop
or
scas
push
int3
outsb
mov
cmp
imul
das
jne
push
inc
out
aad
pop
adc
mov
cmp
jo
fdivr
sbb
push
popf
aaa
xchg
adc
inc
pop
aaa
into
or
dec
dec
jge
sbb
lock
xchg
xchg
and
loope
out
inc
mov
jbe
aaa
mov
fnstsw
push
inc
pushf
mov
sbb
out
pop
ds
pop
ret
cltd
in
out
inc
cmp
add
roll
arpl
xor
push
push
in
adc
int3
dec
sti
cmp
gs
out
aaa
out
dec
cmp
sub
or
stos
xor
stos
or
rcl
pushf
push
inc
outsb
lea
sbb
cld
fcomp
jbe
add
and
sbb
pusha
lret
aaa
pop
or
xchg
and
jo
in
cmp
adc
or
clc
jmp
leave
cmp
aad
or
cmp
xor
inc
dec
es
sbb
dec
mov
adcb
lock
cli
aam
repz
cmp
dec
and
jae
hlt
or
adc
fbld
sahf
mov
push
stc
cmp
mov
pop
xchg
aas
mov
fisttpl
push
mov
or
push
mov
jns
movsb
fisttps
sbb
sbb
insl
xchg
cmp
and
push
dec
pusha
leave
add
inc
adc
dec
pop
sbb
xlat
fimull
test
mov
adc
aaa
adc
dec
pusha
cld
push
in
pop
xchg
rcll
jb
aaa
xor
ret
mov
lcall
push
mov
fnstsw
enter
cmp
insl
jo
lods
clc
ljmp
pop
movsb
aad
or
shll
idivb
jno
int
push
jns
jmp
dec
sbb
js
xor
pop
fsubs
dec
gs
movsb
lds
movsl
loope
jge
mov
filds
add
push
sti
aas
pusha
repz
das
add
insl
into
xchg
iret
push
push
sbb
and
cmp
sbb
push
in
fwait
pop
cwtl
or
mov
inc
pop
mov
jnp
jp
sahf
adc
or
inc
dec
fwait
insl
std
subl
jmp
imul
sub
add
sub
fcom
cmp
stc
sbb
aam
pop
shrl
push
es
xor
jb
mov
push
les
fiaddl
push
sub
cltd
push
push
dec
int3
sti
inc
mov
pop
sbb
std
test
inc
rorb
push
leave
push
jge
mov
inc
dec
jbe
inc
out
sub
lahf
xchg
and
adc
jp
add
sub
inc
insb
jl
add
pop
lahf
pop
or
in
lahf
mov
push
movl
rcr
jg
sbb
mov
outsb
es
sti
xchg
lahf
scas
inc
add
pop
stos
inc
sbb
and
dec
into
xchg
adc
out
test
mov
loopne
adc
mov
pop
dec
sub
xchg
push
dec
push
in
add
xor
dec
jecxz
out
lahf
pop
xor
xor
or
popl
inc
inc
push
push
scas
out
lds
aam
pushf
outsb
sub
cmpl
icebp
sti
mov
out
movsl
out
xchg
mov
fnstenv
in
or
xor
xchg
jge
imul
cmc
xor
das
stos
cmc
sbb
sbb
jp
push
mov
rclb
subl
push
icebp
xchg
jle
and
xchg
pop
dec
dec
popa
fdiv
mov
lods
cmp
xchg
push
jno
sub
out
pop
fnsave
jb
aad
xchg
cli
push
sbb
add
in
add
cli
jecxz
shll
pop
test
mov
xor
jno
push
add
xlat
mov
sub
cmp
ficompl
jo
xor
or
dec
push
gs
repnz
cltd
iret
xchg
and
leave
add
pop
push
inc
adc
sub
sbb
cwtl
hlt
jecxz
mov
adc
repz
out
lea
adcb
dec
push
push
lcall
stos
cmpsl
ds
int3
adc
fdivr
xor
stos
cs
icebp
popf
pop
shlb
pop
add
rcll
cmp
jb
cli
xchg
xchg
or
incl
rcll
pop
or
enter
dec
inc
push
cmp
shll
outsl
push
dec
repnz
inc
gs
or
scas
mov
es
aad
hlt
lods
cmp
repz
add
ja
xchg
arpl
xchg
and
mov
out
popa
sub
add
jno
fnsave
xor
cmpsb
aaa
fldenv
sbb
in
push
push
cli
andl
mov
mov
fmuls
inc
xchg
xchg
roll
push
push
mov
mov
mov
jmp
dec
xor
fidivrs
cmp
sbb
adc
inc
adc
sbb
mov
push
pusha
out
ret
ret
xchg
mov
jae
xor
mov
push
icebp
mov
in
cmp
inc
adc
sub
std
dec
out
rol
jo
fstp
fcoml
or
mov
test
mov
push
nop
aad
inc
std
dec
sbb
sbb
cmp
xlat
xor
fnsave
and
inc
inc
jno
aad
lret
sub
dec
and
jg
xor
fincstp
pop
in
hlt
popa
cmpsl
shl
dec
mov
or
lods
outsb
xchg
mov
outsb
xchg
pop
xchg
xchg
add
es
sbb
cld
mov
clc
inc
rolb
pop
pop
push
cmpsl
pop
mov
push
pop
push
adc
loop
sub
sbb
jb
leave
pop
pop
xchg
test
das
cmp
xor
and
pop
popl
and
in
out
ret
insl
jno
cmp
bound
jo
mov
dec
cmp
dec
sbb
mov
mov
sub
sbb
and
add
adc
enter
in
orl
pusha
scas
into
xor
mov
or
pop
mov
std
and
es
or
ret
pop
cwtl
cmp
pop
test
pop
rol
adc
insb
sbb
add
fst
es
mov
into
inc
push
add
mov
pusha
fsubrs
dec
dec
dec
jmp
add
clc
or
jo
cli
mov
cmp
xchg
inc
sub
push
shlb
adc
dec
pusha
pop
test
int
adc
ret
lcall
push
sbb
loope
pop
sbb
not
cmc
mov
adc
mov
fmull
cmp
lock
stc
and
jno
fildll
sbb
out
dec
push
push
sbb
test
add
jo
repz
test
pop
or
or
jno
ret
mov
xor
add
dec
mov
flds
cmp
or
adc
adc
jo
add
scas
mov
setnp
andl
adc
pop
jl
lds
push
and
xchg
jne
lds
push
xor
notl
and
paddq
jae
pushf
jg
lahf
xor
inc
xor
popa
xchg
aas
in
push
fsubs
aam
cmovge
and
cli
adc
or
jne
jecxz
mov
movsb
dec
mov
pop
repnz
mov
mov
in
xlat
test
movsb
inc
inc
pop
pop
mov
add
cmp
xlat
push
rorb
jno
idiv
mov
xchg
sub
fisttpl
sub
fadd
rcll
aaa
repz
pop
scas
aaa
aam
enter
test
test
xor
jae
ret
cwtl
roll
push
daa
inc
in
pushf
push
out
push
icebp
push
mov
rolb
out
pop
sub
aam
jo
mov
cmpsl
nop
xlat
mul
adcb
jp
rol
mov
shrl
out
and
sbb
xchg
mov
mov
repz
mov
enter
fs
dec
xor
pop
outsb
rolb
pop
jne
movsb
xor
xor
in
xor
std
add
add
jne
ja
addr16
add
sbb
dec
xlat
aam
iret
ds
jp
fistpll
sub
sub
xor
and
inc
lds
in
dec
lahf
push
push
push
inc
push
outsb
sub
in
shrl
mov
inc
or
notb
outsb
enter
xor
mov
sub
sti
aas
adc
xor
push
adc
lret
jbe
add
mov
pop
fdivrp
fstl
out
sub
jecxz
dec
inc
jo
int3
pop
out
insl
or
mov
repnz
adc
inc
call
inc
icebp
outsb
out
or
inc
outsl
div
and
xlat
test
out
sub
icebp
test
shl
fisubl
int3
xor
int3
mov
dec
xchg
push
or
adc
fsubs
adc
mov
roll
aam
rcll
clc
repz
out
cmpsb
jecxz
mov
pop
pop
jb
cld
popa
push
gs
mov
pop
xor
insl
or
push
out
cmp
push
push
xchg
fildl
ljmp
add
aaa
xor
int3
xchg
sub
stos
xor
mov
out
xchg
mov
iret
icebp
xchg
mov
adc
add
adc
cmc
push
pop
dec
push
push
cmp
mov
sub
xor
sbb
lods
loope
dec
lcall
pop
test
xchg
xchg
jno
and
int3
and
enter
shll
xor
xchg
push
lret
sbb
pop
adc
int3
jne
mov
insb
aad
cmp
stos
es
icebp
movsb
popf
mov
cmpsl
data16
jns
sbb
and
sub
test
aam
add
cmp
nop
mov
mov
sub
inc
push
stos
inc
shlb
push
insl
fldt
jl
cmp
inc
popa
pushf
sbb
popa
mov
stos
adc
add
cmp
bound
lea
cmp
addl
test
sbb
pop
adc
xchg
rcl
fldt
or
jne
xchg
inc
inc
push
sbbb
dec
cmp
leave
push
jno
lock
gs
push
dec
movsl
mov
outsb
mov
mov
sahf
rcrb
xchg
mov
xor
fists
pop
test
add
fsubrl
push
cmpl
jns
daa
cld
jno
insl
std
push
imul
push
mov
adc
cmp
gs
popa
add
xor
xchg
cmp
clc
cmp
sub
int3
daa
ret
fcomi
out
lcall
dec
mov
sbb
pop
pop
mov
out
sahf
dec
icebp
adc
xor
inc
roll
mov
adc
inc
dec
stc
into
xchg
iret
call
fldenvs
scas
dec
sub
xchg
xor
adcl
jns
ficomps
mov
test
xchg
inc
sbb
ret
movsl
and
pop
enter
sub
push
shlb
cmp
in
scas
sub
jbe
cwtl
fnstsw
sbb
sub
dec
xchg
sub
ss
aaa
dec
sbb
pop
arpl
les
jecxz
mov
xor
dec
xor
push
fisttpl
pop
xor
jno
rcl
pop
mov
pushf
sbb
add
loope
push
dec
lret
movsb
sbb
rclb
imul
das
pmulhuw
leave
and
and
dec
cmp
icebp
push
mov
add
xchg
in
cmp
mov
fwait
icebp
ror
negl
psllq
rcrl
shr
inc
cmpsb
xchg
dec
xlat
xor
mov
gs
xor
das
mov
sbb
xchg
shrl
jo
add
cmp
jae
mov
rolb
test
inc
jno
mov
js
adc
sub
arpl
es
push
sbb
mov
cmpsb
repz
nop
ljmp
fmul
pop
into
cmp
in
lods
xchg
xchg
ds
mov
mov
in
push
push
fwait
dec
ss
shrl
lret
pop
int3
ret
pop
adc
ja
xlat
iret
dec
xchg
in
inc
pop
inc
dec
ds
rclb
push
outsb
sahf
adc
mov
adc
mov
and
vcvtsd2si
clc
adc
xchg
inc
jno
or
xlat
inc
push
or
insl
add
cmc
inc
jge
lods
leave
loopne
gs
in
adc
je
adc
push
lock
xchg
mov
sbb
dec
add
je
inc
cs
fmuls
notb
shl
and
mov
movsl
shl
dec
nop
mov
rcrb
add
aaa
sub
les
adc
or
xchg
jmp
sub
inc
jo
pop
mov
adc
xlat
jmp
jle
fs
lods
cmp
dec
dec
push
in
ret
sub
and
stos
mov
pop
or
push
inc
mov
dec
sarb
lods
dec
jo
inc
into
add
int
clc
subl
js
test
aas
out
leave
inc
pop
and
sub
aas
push
jo
call
enter
jnp
pop
lea
mov
mov
xor
jae
mov
loope
xor
xchg
jne
inc
inc
sbb
sbbl
movsb
std
loope
gs
mov
in
xlat
pminsw
xchg
mov
add
pop
add
inc
or
mov
pop
push
lcall
inc
sub
loope
cmp
inc
int3
mov
or
rorl
fldl
dec
adc
in
xor
add
sahf
jmp
xor
xor
lock
pop
push
loop
sbb
mov
mov
pop
xor
jo
xor
or
ja
inc
scas
push
das
add
dec
push
in
imul
sub
jne
arpl
mov
sub
jecxz
ret
mov
js
repz
pop
jl
dec
cwtl
out
int3
pop
cmp
sub
cmp
xchg
mov
imul
aam
mov
cmp
cli
dec
testl
shll
add
adc
aas
outsl
scas
or
mov
aas
loop
xchg
add
inc
in
hlt
add
mov
std
pop
fsubrs
es
shl
jmp
sbb
fisttps
cmp
ds
out
and
test
lods
sbb
ret
es
or
movsl
and
iret
fistpll
xchg
push
clc
cmp
outsb
sbb
in
sub
xorl
inc
call
dec
mov
popa
loop
in
xchg
add
dec
sub
cmp
pop
shrb
adc
rcll
dec
xlat
mov
or
sbb
loope
pop
cmp
mov
pop
rorb
imul
or
shll
jo
mov
leave
daa
push
roll
and
and
inc
das
cmp
push
xorl
push
mov
imul
add
sub
adc
sub
lds
mov
loopne
stos
not
loope
mov
lcall
mov
sbb
call
inc
in
mov
mov
mov
cmpsl
loope
mov
lahf
and
cli
std
mov
data16
pop
and
sub
rorl
push
push
cmp
data16
pop
push
and
dec
fdivs
daa
inc
das
mov
adc
pop
jb
fadd
insb
push
xlat
push
and
icebp
and
xor
cmp
ja
imul
outsl
xchg
xchg
gs
jns
push
arpl
push
push
js
xchg
inc
pop
fstpl
pop
scas
inc
push
int3
cmpsb
ret
push
inc
repnz
pop
pop
jno
loope
pop
sbb
push
rolb
pusha
xor
pop
or
out
int
lock
xlat
push
pop
jno
add
aaa
and
cmp
dec
nop
adc
adc
adc
cmpsl
outsb
sub
negb
and
call
push
push
movsb
dec
push
xor
mov
stc
xor
sarb
push
mov
and
daa
cmpl
cmp
inc
jmp
aad
rolb
inc
inc
js
nop
inc
fistl
int
inc
das
shlb
pop
xchg
mov
fs
add
scas
aaa
sub
xchg
stos
in
dec
jno
cltd
push
dec
insl
sub
push
sub
cltd
ficoms
or
int
gs
mov
jno
push
xor
xlat
jo
pop
test
fnclex
add
in
enter
sub
add
lea
jl
pop
dec
loopne
xor
push
fildll
pop
sub
push
push
and
mov
mov
dec
dec
dec
ss
and
or
mov
call
movsw
pop
jb
aas
es
push
and
push
aad
inc
jno
dec
push
fsubrl
ja
xor
sub
inc
adc
adc
cmc
xchg
pop
out
cli
mov
push
jecxz
faddl
sarb
and
mov
addr16
mov
push
and
xor
dec
inc
push
js
clc
pop
pop
sub
rorb
add
enter
rorl
cmc
push
fcomp
pop
xor
jae
inc
in
xchg
cmpsl
and
and
add
add
mov
xchg
aam
frstpm(287
rcl
popf
adc
std
mov
push
jo
mov
sub
mov
or
pop
std
push
ret
cmpsb
xor
popa
divl
mov
mov
aam
jo
aas
aam
into
addl
jns
sbb
lcall
or
sbb
sbb
aad
arpl
inc
dec
scas
or
into
into
dec
add
mov
in
mov
add
arpl
aaa
jl
xor
out
mov
pop
push
inc
mov
dec
xchg
scas
dec
in
pop
inc
test
rorb
dec
mov
loope
add
dec
rcrl
jg
dec
add
and
mov
sar
aas
adc
pop
loop
or
adc
inc
daa
add
and
aad
in
popa
test
lret
dec
popa
lcall
push
aaa
sub
inc
mov
push
rolb
sub
jo
sub
aad
fisubl
outsl
and
cmp
inc
inc
and
cs
ss
inc
mov
in
or
div
addr16
pop
inc
push
fsubrl
sub
fwait
xchg
rcl
xlat
pop
outsb
addl
dec
fdivrs
add
jo
bound
aad
popa
insl
xor
std
pop
mov
jge
mov
fsubs
cltd
inc
xchg
inc
mov
fcoms
pop
test
sbb
push
shll
dec
lds
stc
mov
dec
sub
or
or
cmp
inc
mov
ds
inc
dec
xchg
dec
and
loop
dec
das
mov
test
adc
cmp
cmp
arpl
and
call
xchg
cmp
sahf
shrb
add
xchg
lahf
adcl
adc
arpl
cmp
adc
repz
idiv
xor
pop
adc
or
ret
mov
rcrb
lret
inc
dec
jo
pusha
cmp
dec
cltd
rorl
gs
or
sbb
cmp
ds
xor
gs
jp
mov
mov
cmp
cmpsb
cld
adc
arpl
pusha
out
out
pop
mov
fcoms
pop
cmp
insb
gs
dec
xlat
jns
xor
dec
cmp
cmc
leave
push
mov
xchg
shrl
ja
fs
cli
jne
mov
add
inc
out
xchg
adc
rcl
jb
mov
roll
rolb
mov
xchg
pop
sub
pop
push
aas
adcl
pop
rclb
inc
dec
movlps
dec
push
push
push
xor
dec
cmp
dec
inc
orl
cmp
ret
push
bound
cmp
cmpsl
push
pusha
mov
add
pop
xchg
loopne
jecxz
push
cmp
into
push
mov
inc
arpl
mov
sub
sbb
and
mov
in
cmpsl
dec
xor
inc
sbb
dec
aaa
mov
out
inc
or
sub
sub
in
aas
int3
into
lea
int
dec
jmp
cmpsb
cmp
or
test
adc
mov
enter
xchg
xchg
dec
jmp
leave
push
rcrl
push
sub
pop
dec
dec
nop
dec
in
inc
xchg
mov
dec
cmc
inc
sahf
push
adc
cli
inc
test
dec
pop
dec
cmp
ret
jg
push
movsl
rclb
dec
es
adc
mov
jl
fdivrs
cmp
out
xor
lods
xor
adc
sub
or
shll
mov
stos
mov
inc
sub
adc
dec
insb
addr16
ficoml
mov
mov
nop
inc
mov
sbb
pop
inc
jg
dec
inc
or
push
dec
loop
push
add
cltd
test
les
notl
clc
out
push
aaa
aad
or
or
rorb
filds
mov
cmp
jns
imul
push
push
es
ja
ret
jns
mov
fnstenv
push
add
hlt
xorb
pop
rol
pop
sti
push
and
inc
add
js
and
pop
mov
into
xchg
leave
xor
dec
dec
ret
aad
pop
fwait
inc
scas
inc
aaa
bound
ret
dec
ja
inc
pop
dec
cmpsb
out
pop
xchg
popa
loopne
dec
insl
xor
inc
adc
jno
pop
xor
xor
enter
test
arpl
cmpsb
call
aam
adcl
cmc
jg
sbb
cmp
and
push
cmp
sarb
adc
sbb
inc
or
add
repnz
adc
xor
iret
std
lods
dec
push
push
aad
test
cmp
or
cmp
adc
test
loopne
xchg
sub
test
add
lods
nop
insb
aas
or
adc
add
add
rclb
sub
je
imul
andl
add
fs
fisubl
leave
js
rclb
mov
push
push
sbb
test
movsb
adc
push
mov
daa
insl
cmp
lcall
test
sti
add
leave
dec
popa
push
mov
push
jno
int
mov
imul
stos
add
dec
insb
jb
mov
test
int
mov
inc
ret
push
lds
push
rclb
adc
test
sbb
addr16
int3
add
or
je
mov
cmp
mov
add
cli
mov
andb
push
into
cltd
aad
xchg
inc
aaa
add
mov
aaa
cmc
leave
xchg
pop
int
int3
or
in
mov
jmp
pop
and
arpl
lods
push
pop
jl
cltd
push
orl
dec
mov
xchg
xchg
sarb
fstl
mov
dec
cmp
pop
mov
arpl
cltd
fsubrs
negb
mov
xor
icebp
and
jae
test
dec
in
imul
int3
fwait
add
pop
sbbl
frstor
push
push
jno
dec
push
mov
insl
arpl
movsb
push
cmp
sti
hlt
insl
cmc
xchg
cltd
inc
in
mov
add
mov
cwtl
add
adcb
jno
adc
inc
adc
daa
mov
pop
pop
add
mov
pmulhuw
cwtl
les
mov
add
push
xchg
cmp
mov
xchg
pop
push
cmp
ds
add
push
mov
loopne
mov
std
lret
or
ret
pop
gs
mov
rol
js
je
pop
push
popa
push
inc
dec
xor
mov
cmp
mov
gs
dec
iret
sub
addr16
nop
ret
hlt
jne
dec
imul
adc
cs
and
cmc
push
fcomi
loope
aad
or
pop
aas
popf
xor
shlb
cmpsl
pop
jecxz
xor
xlat
dec
sub
call
dec
setg
mov
sub
pop
sbb
mov
fnstenv
pop
push
xorb
dec
mov
and
pop
movsb
xor
stos
and
ficompl
sub
rol
mov
arpl
pushl
in
xor
sub
push
cmc
or
cmp
jne
xchg
sti
push
enter
mov
mov
jge
push
out
stos
sub
je
mov
adc
in
mov
mov
push
pop
sub
mov
out
push
loop
push
mov
push
int3
cmpsb
inc
and
enter
mov
cmpsl
aam
sbb
sti
notl
jnp
out
hlt
lds
enter
insl
js
add
or
mov
xor
popa
xlat
rcll
mov
mov
daa
inc
cmc
cs
xor
mov
mov
test
or
dec
lret
mov
roll
insl
subb
into
push
fucomi
add
sub
xor
add
or
push
jecxz
inc
orb
or
inc
push
mov
fidivl
push
fsubrl
dec
fisttpl
inc
test
pop
inc
inc
pop
adc
out
inc
ffree
or
dec
addl
push
int
test
fimuls
gs
push
mov
ja
cmc
fldt
push
mov
sbb
mov
stos
dec
sub
dec
adc
pop
dec
mov
xor
adc
nop
mov
sbb
incb
jge
enter
adc
push
es
shrb
add
fisttps
mov
xchg
and
sub
cmc
aaa
sbbl
xchg
enter
xor
stos
xor
push
pop
cmpsb
or
insb
aad
cmp
fisttps
dec
int3
mov
add
gs
test
aas
daa
dec
cmp
sahf
sub
mull
and
sub
js
xchg
sub
jp
jne
xchg
fldcw
outsb
xchg
inc
hlt
test
jbe
scas
xchg
xchg
xor
es
repz
mov
addr16
sub
inc
rorl
leave
dec
pop
cmpsb
mulb
je
mov
cld
sbb
pop
push
pop
lea
inc
imul
lcall
mov
gs
int3
add
pop
dec
enter
inc
dec
jno
xlat
inc
sbb
hlt
mov
test
push
xor
adcb
out
sbb
inc
repz
cmpsl
in
add
ret
xlat
sub
icebp
adc
roll
mov
mov
rcr
cmp
push
int
jle
and
xchg
cmpb
aad
add
lea
lds
ljmp
xchg
jg
mov
ljmp
stos
push
push
stos
dec
test
dec
out
xchg
movsl
aas
gs
add
movsl
inc
into
sbb
jae
push
fstpl
cmpsl
xor
test
jecxz
dec
add
add
push
in
cmp
mov
insl
rcrl
in
cmp
aad
or
mov
dec
inc
inc
and
rclb
sub
jno
testl
xor
ret
icebp
iret
push
aaa
add
dec
or
mov
out
xchg
sahf
mov
cmp
repnz
cmpsl
adc
adc
jb
jns
js
gs
adc
push
xor
dec
inc
add
inc
xor
inc
shll
call
mov
mov
dec
jno
sbb
movsb
or
inc
outsb
aad
mov
out
inc
add
xchg
jmp
sbb
push
xor
out
xchg
cmp
ret
mov
das
xlat
or
in
leave
popa
jns
addr16
sbb
sbb
movsl
dec
xchg
shrb
xchg
adc
cmpsl
xor
aad
and
push
outsb
cli
in
jl
popf
cmpsl
xchg
push
dec
pop
lea
add
cli
cmpsl
or
shll
jle
stos
lea
cltd
cmc
jno
in
dec
pop
xlat
and
fxrstor
roll
lret
fistpl
les
add
lock
ret
es
push
popa
outsl
mov
js
lret
inc
in
neg
add
pusha
mov
adc
out
mov
div
add
loop
jb
mov
add
inc
xor
lea
mov
js
leave
fistl
sub
dec
pop
and
push
mov
xchg
cmc
cmp
jns
jge
mov
dec
addl
or
insl
aas
xchg
cs
shrl
jo
inc
sti
mov
inc
dec
adc
sbb
add
jo
addl
ret
in
mov
xor
inc
idivb
in
sub
rcll
hlt
in
xchg
inc
test
roll
lea
int
dec
scas
gs
push
push
inc
mov
xor
xor
add
xor
dec
mov
add
cmp
cmp
leave
mov
push
sbb
dec
ret
adc
dec
popa
inc
incb
inc
push
adc
inc
inc
inc
es
insl
push
cmc
cwtl
out
sahf
mov
mov
daa
jmp
dec
mov
test
rcll
or
out
cmc
mov
mov
daa
lea
lods
inc
addr16
sub
nop
xchg
jo
aad
addl
sbb
rclb
sub
dec
xor
add
int
add
ret
mov
jo
pop
mov
pop
popf
imul
mov
cld
inc
cmpsb
frstor
push
out
enter
pop
cmp
pop
xor
jns
xchg
ljmp
bound
and
cmp
sub
pop
xor
jae
pushw
jo
cmc
inc
addr16
aas
out
fdiv
sbb
add
dec
andl
push
cltd
inc
in
fmuls
xchg
nop
je
mov
and
sub
xlat
dec
pop
mov
outsb
dec
aam
inc
lret
pop
pop
xchg
mov
call
sub
jb
jnp
xchg
roll
inc
cmp
enter
incl
aam
mov
in
mov
jo
stos
mov
sbb
cli
cmp
sahf
mov
rcrl
cmp
negl
cmc
inc
cmp
popf
aad
push
cmp
inc
dec
push
fsubs
pop
inc
int
dec
or
or
inc
outsl
jbe
pop
dec
aaa
jno
cli
addr16
xchg
inc
lcall
pusha
enter
sbb
jmp
leave
xchg
int3
mov
inc
enter
sub
and
dec
cs
outsb
cmp
scas
imul
iret
das
stos
xor
mov
hlt
test
dec
sbb
popf
pop
push
fcompl
xchg
dec
push
stc
repnz
and
leave
inc
jge
enter
xchg
mov
push
inc
into
xor
stos
cmp
dec
fisttpl
push
jno
push
movd
or
xchg
dec
gs
imul
rcll
push
mov
mov
in
jo
loope
xlat
fisttpll
mov
movsl
sbb
add
call
test
push
loopne
gs
js
and
repz
and
pop
xchg
mov
dec
int
hlt
inc
adcl
fistps
push
gs
fdivr
test
repz
insl
unpcklps
inc
mov
fidivrl
imul
mov
dec
mov
fcmovnbe
jo
jle
enter
mov
std
sarl
pusha
fwait
aad
sbb
inc
sahf
jne
push
subb
jecxz
sub
sub
bound
inc
cmp
lcall
and
sub
push
icebp
popa
ret
repnz
adc
push
ljmp
dec
mov
dec
push
inc
push
lcall
mov
call
and
pop
out
in
inc
mov
xchg
mov
int
ret
lret
mov
or
push
fwait
xor
lahf
data16
jg
rcl
shll
jnp
xchg
loope
or
ss
and
repnz
xor
adc
dec
iret
add
inc
sbb
scas
jmp
mov
mov
push
inc
leave
popa
cmpsl
addb
insl
push
adc
mov
mov
jl
sub
adc
leave
rclb
xchg
mov
test
xchg
stos
test
adc
sarb
push
in
cs
and
dec
add
pusha
testb
fisubrl
push
adc
rcl
jae
or
add
jno
daa
jo
aad
in
xchg
adc
xor
sub
xchg
xor
push
push
or
mov
xchg
sti
adc
push
inc
xchg
notl
lret
popf
mov
sub
jecxz
inc
data16
jae
push
fists
jge
and
stos
pop
mov
xchg
mov
fcoms
cmp
call
leave
je
in
add
push
push
or
inc
in
mov
das
cli
into
clc
mov
add
push
mov
stc
pusha
pop
and
leave
sahf
test
test
stc
loop
or
cli
mov
in
and
test
pop
cltd
dec
loop
hlt
sbb
adc
rolb
add
stos
cmp
jbe
notl
pusha
shlb
dec
in
adc
mov
cmp
or
sub
test
sbb
xchg
fisttps
jo
mov
daa
subl
sub
adc
adc
xor
pop
dec
inc
inc
enter
jecxz
sub
xchg
psllq
pop
add
pop
dec
xor
xchg
dec
add
sbb
int
push
adc
cs
mov
inc
imul
lret
dec
pushf
add
mov
or
inc
adc
rorb
jne
stc
dec
mov
push
mov
mov
das
jp
call
and
into
adc
xor
cltd
mov
or
cmp
cli
int3
or
xor
push
mov
inc
ret
enter
das
jb
or
jg
adc
lock
mov
in
jns
inc
and
add
mov
lea
in
cmp
jg
mov
cmp
and
pop
lds
mov
cmp
popf
stos
shrl
test
sub
pop
rcr
mov
fnstsw
xchg
fmuls
and
aaa
dec
mov
xchg
mov
daa
xchg
lods
lods
call
test
lds
mov
xchg
xchg
ret
adc
push
push
xchg
pusha
call
cmp
adc
xor
adc
in
out
push
fistps
sub
jne
push
xor
ud1
icebp
inc
mov
inc
outsl
pop
ret
gs
xor
cmc
xor
push
ja
sbb
or
mov
dec
shlb
arpl
push
pmulhuw
bound
out
out
lock
cmp
inc
adc
xchg
or
je
or
out
dec
add
movlps
mov
jns
ficomps
jae
in
ds
add
push
and
dec
arpl
test
imul
stos
mov
or
or
xlat
xor
repz
int3
lret
sub
das
or
aaa
sub
mov
pushf
fiaddl
enter
lods
je
jae
cs
sub
dec
loope
add
enter
ljmp
pushl
enter
shr
xchg
push
cs
enter
lods
push
fstl
add
stos
int
sub
inc
cli
sarb
ds
lock
sbb
jns
sub
mov
jmp
xlat
sbb
aas
pop
cmp
jp
das
cmp
sti
aas
dec
test
dec
mov
pop
add
inc
inc
push
dec
inc
arpl
jge
shrb
aam
mov
add
add
test
enter
out
mov
cmc
dec
lahf
dec
lods
dec
sub
xchg
push
mov
data16
push
pop
popa
inc
into
rclb
pop
daa
adc
dec
call
or
les
sub
mov
or
pop
xor
push
pop
int
sbb
jno
or
into
sbb
fs
imul
and
jns
cmp
and
push
add
repnz
in
imul
push
mov
loopne
fisubl
call
fmuls
jge
cs
inc
push
nop
pop
ret
addr16
sbb
in
inc
pop
repz
sub
lds
aad
cmp
inc
out
hlt
push
xor
sbb
inc
pop
stos
adc
cwtl
push
sub
repz
cli
iret
dec
dec
pop
ds
mov
push
pop
arpl
or
shrb
adc
pop
ror
adc
sub
push
into
stos
sahf
jmp
orb
add
jb
shl
pop
cli
repz
or
fwait
xchg
sti
hlt
stos
mov
push
dec
int3
fwait
iret
dec
mov
mov
ficoml
inc
roll
imul
sub
push
xorl
lock
push
enter
mov
mov
shrb
inc
imul
int3
mov
push
repz
cs
fwait
xor
jnp
repz
xchg
sub
inc
pop
xchg
cmp
rorl
push
push
add
mov
arpl
and
fprem1
jl
lock
inc
or
inc
jno
xor
lods
mov
loop
push
adc
dec
lods
push
inc
jle
test
scas
xchg
sub
test
adc
ja
add
lcall
mov
test
xor
shl
outsb
and
push
add
nop
int3
in
pop
sub
sub
stc
out
in
push
mov
lcall
mov
push
mov
icebp
xor
gs
push
xchg
outsb
out
mov
iret
dec
dec
dec
cmp
pop
into
fdivl
mov
sub
inc
push
movsl
sar
into
lods
jge
inc
lret
adc
cmp
movsl
mov
jnp
jo
mov
dec
jno
xor
or
stos
inc
cmp
rol
dec
jo
out
dec
cvtps2pi
int3
dec
xor
mov
push
sbb
xor
testl
daa
dec
pop
jp
ficomps
test
mov
mov
jb
sub
jne
pop
cmp
add
adc
inc
gs
outsl
or
mov
movsl
mov
mov
push
inc
xchg
lahf
cli
rcl
es
adc
push
sbbb
and
inc
data16
pop
jne
movsl
push
push
jbe
into
push
mov
jns
mov
xchg
test
add
jnp
in
in
fcmovnb
adc
stc
jb
test
dec
test
in
test
dec
mov
jo
push
bound
aaa
mov
push
rcll
adc
repz
adc
pusha
sub
push
aaa
int
dec
loopne
ret
push
enter
out
enter
xor
xchg
daa
sbb
fs
adc
fwait
xor
rcrb
xchg
sbb
pop
into
inc
test
lds
das
xor
inc
rcl
cli
lods
push
push
adc
shrd
push
add
arpl
jno
dec
aam
sub
push
rcrl
push
mov
call
cmovle
hlt
cld
lods
test
out
dec
les
sar
aad
fsubl
ja
ljmp
push
or
imul
loop
xchg
mov
int
add
mov
dec
sbb
jbe
mov
push
cmp
bound
ret
rcl
lret
adc
push
xor
mov
xchg
add
mov
adc
xchg
and
fiadds
in
inc
add
jno
push
cmp
adcb
repz
mov
mov
aad
testl
lods
imul
mov
cmp
pop
sub
ss
dec
inc
xchg
xchg
or
notl
inc
loopw
pushf
lods
fisttps
jns
push
adc
js
out
nop
mov
or
int
sbb
rorl
sti
inc
push
mov
int3
fisttpll
pop
xor
mov
outsb
jbe
jb
jl
cmp
movsl
leave
jg
fnstcw
xor
fisttpll
sub
adc
cmp
add
xor
push
rcll
arpl
lock
cmp
jb
and
mov
outsb
push
xor
cmp
imul
addr16
lea
enter
ja
popf
xor
fmull
aam
jecxz
mov
add
or
xor
ss
loopne
cmpsb
cmp
inc
cmp
dec
imul
jno
inc
shl
lock
push
xor
pop
and
enter
mov
es
mov
jne
push
pop
sub
xor
cld
les
daa
inc
jae
shrl
loop
ss
and
mov
lret
mov
and
int3
frstor
push
repnz
sub
push
ficoms
jae
jge
cmp
imul
push
add
data16
jo
movsb
push
dec
lret
dec
js
push
faddl
and
mov
ja
out
mov
out
sbb
mov
xchg
sti
xor
shl
dec
add
mov
jns
sub
xor
dec
push
add
jo
adc
add
adc
lds
pop
fwait
pusha
pop
sub
faddl
jne
dec
jae
inc
icebp
inc
xchg
mov
lock
mov
mov
push
outsb
nop
pushf
std
fdivl
dec
inc
push
in
cltd
mov
pcmpgtw
ja
pop
ret
xchg
or
adc
iret
jecxz
lahf
bts
mov
inc
lods
dec
or
mov
into
sti
cmp
pushf
pop
sbb
outsb
fdivrl
xchg
arpl
push
loop
enter
mov
out
mov
cmpsb
in
xchg
inc
sub
das
out
cmp
jno
clc
xor
fisttpll
out
jmp
mov
xor
mov
std
xor
mov
dec
pop
mov
bound
aas
fwait
xchg
mov
cwtl
jecxz
movsb
jne
bound
cmp
scas
sub
push
fldenv
add
push
int3
into
dec
pushf
add
decb
jecxz
sub
lahf
in
lahf
hlt
in
sahf
dec
fisubs
cmp
arpl
nop
js
xchg
stc
fsub
lds
xchg
iret
mov
xchg
je
imul
or
inc
decb
add
pop
mov
and
mov
subl
js
mov
adc
in
dec
mov
imul
jns
push
add
hlt
inc
insl
fwait
and
mov
ret
insb
jg
incl
jno
mov
adc
pop
inc
pop
es
mov
int
inc
pusha
das
push
loope
sbb
movsb
imul
loope
jle
xor
add
lods
cmp
lcall
jo
xor
push
jecxz
daa
mov
sub
jl
pop
clc
sbb
enter
into
jle
inc
movsl
aas
bound
and
sub
cmc
mov
sbb
out
add
idivl
sbb
sub
jo
inc
push
pop
mov
sbb
ss
cmp
xor
int3
popf
es
cmp
rcr
dec
xor
mov
sti
bsf
add
int
add
icebp
iret
pop
inc
pusha
enter
lcall
int3
inc
pop
adc
bound
ja
and
in
mov
mov
testl
xor
cltd
sub
call
inc
dec
arpl
pop
movsb
pop
inc
dec
mov
fstpl
dec
adc
sarb
add
cwtl
xchg
pop
sahf
sbb
gs
pop
int3
jmp
imul
or
xchg
js
or
xor
jmp
ss
jge
push
cltd
call
inc
fs
jo
pop
pop
fsts
cmp
in
test
and
int3
mov
test
int3
fwait
rolb
aaa
loopne
sbb
lcall
popa
iret
add
xchg
push
in
lcall
mov
jmp
das
sub
es
add
in
push
mov
mov
cmpsb
inc
cltd
syscall
mov
mov
jno
mov
xchg
dec
mov
out
sub
call
push
ret
xchg
push
dec
push
andb
cmp
mov
mov
dec
inc
push
dec
jno
cmp
xor
inc
aas
fdivl
adc
insl
or
test
push
outsb
add
mov
lret
enter
mov
dec
cmp
movsb
add
and
cmp
into
lcall
aad
add
popl
imul
add
scas
cmpsl
lods
push
cmpb
add
das
push
aad
cmp
lahf
push
enter
or
add
aam
in
pop
scas
adc
ss
out
fisubrl
xor
ret
mov
shlb
imul
test
arpl
jmp
loopne
dec
push
aad
dec
inc
in
inc
fsts
pop
hlt
xor
push
sbb
mov
sbb
mov
std
cmc
dec
es
sbb
mov
cmpsl
sahf
sarb
jg
ja
mov
outsb
fwait
or
insb
aam
pushf
and
sbb
call
cmp
ret
ror
jp
into
popa
cmp
dec
push
aam
inc
into
push
cmp
in
pop
loope
mov
rcr
int
out
dec
nop
test
das
xor
xor
loope
sub
cmp
push
ljmp
mov
aad
out
out
push
testl
movsb
sbb
sti
mov
cmpsl
pop
js
cs
clc
lret
xor
inc
repz
daa
or
inc
push
sub
dec
adc
push
cmp
xor
dec
outsb
decb
cmp
test
scas
test
ret
in
lahf
lahf
call
mov
imul
cmp
shll
lret
leave
iret
push
sar
aad
adc
push
inc
fiadds
xor
mov
xchg
dec
aad
in
test
adc
in
pop
xor
push
xchg
and
push
cmc
jmp
pop
jno
addr16
mov
inc
stos
or
in
mov
sahf
inc
iret
pop
sub
xchg
xor
mov
cmp
aad
mov
pop
arpl
pop
mov
jno
sbb
lock
push
add
jno
aas
mov
adc
pop
scas
push
pop
icebp
orl
cld
roll
fs
mov
push
imul
or
jo
ss
jno
insb
scas
nop
iret
push
mov
jno
outsl
cli
fs
sbb
pop
mov
xor
scas
xchg
out
imul
mov
inc
movl
push
cmp
mov
cwtl
loop
cld
add
sbb
xchg
dec
outsb
jns
cmp
inc
mul
rcrl
aam
mov
stos
jno
outsl
mov
xchg
dec
out
push
cmp
in
das
jns
mov
push
imul
dec
jne
clc
adc
fldl
pushf
cltd
add
outsl
mov
jae
lock
push
es
sbb
ja
dec
outsb
mov
mov
lahf
in
lea
jecxz
sub
cmp
ljmp
sub
cmp
aam
addr16
xor
pop
adc
out
dec
into
sbb
mov
inc
xchg
xor
mov
xchg
addr16
xorl
add
lret
mov
test
addr16
xor
mov
or
cs
cmp
xor
repnz
adc
pop
sti
rcll
pop
scas
jb
int3
fisubrs
xor
dec
add
push
jns
sub
lea
jne
in
jbe
jg
stos
fbstp
sbb
cmp
dec
lret
scas
shlb
xor
repz
push
push
jecxz
addr16
idivl
xlat
cmpsb
out
faddl
push
push
push
pop
fmuls
js
add
pop
inc
cmp
jno
icebp
dec
scas
pop
push
pop
jno
dec
bound
es
jno
insl
stc
dec
fsubl
xchg
and
sbb
sub
mov
gs
jns
push
repnz
std
dec
test
xchg
ljmp
xor
dec
sbb
or
mov
test
sub
push
int3
aam
or
mov
push
fidivl
jl
ficomps
fwait
dec
fistps
das
push
pop
inc
mov
inc
push
nop
lret
or
sub
push
pop
dec
mov
aaa
dec
push
dec
aaa
dec
mov
in
xchg
dec
xchg
mov
push
xchg
sbb
cmp
or
gs
jb
pop
push
orb
inc
mov
in
sbb
mov
cmp
push
cwtl
hlt
faddl
int3
les
ret
jl
pop
leave
adc
out
push
popa
or
pop
mov
jmp
pushf
lods
repz
or
or
mov
repnz
inc
cltd
or
outsb
iret
stos
add
scas
insl
pushf
mov
and
xor
outsl
fstps
jne
inc
dec
fwait
push
sahf
inc
pop
lahf
sub
iret
leave
jno
sbb
adc
movsb
in
inc
push
pop
cwtl
xor
add
lcall
out
fs
mov
inc
push
sbb
outsl
in
out
pop
push
or
insl
inc
adc
mov
push
push
data16
sbb
notb
cmp
ret
into
mov
imul
and
sbb
mov
or
mov
les
jmp
daa
pop
loopne
stc
sub
dec
or
in
int3
or
rorb
add
xchg
adc
dec
cmp
or
xor
dec
lods
push
roll
push
ss
inc
cmc
in
mov
sbb
sbb
clc
int3
adc
scas
sti
lcall
mov
shl
leave
sbb
push
sbb
push
shlb
ss
fs
jo
fcompl
repz
sub
lods
push
ror
cmp
in
cmp
pop
enter
es
fsubrs
cmp
fwait
and
inc
sbb
xchg
inc
adc
cwtl
in
dec
aam
dec
push
out
das
xchg
and
adc
sub
data16
movsl
inc
or
les
sbb
into
xor
jne
xchg
frstor
dec
aaa
add
adc
xchg
dec
jl
add
imul
dec
dec
adc
leave
cmc
leave
pop
outsb
aaa
jl
cmc
mov
aas
and
dec
sarl
inc
adc
or
inc
pop
ds
or
sub
imul
xchg
push
or
xchg
xor
adc
icebp
leave
outsl
jno
or
dec
pop
mov
mov
adc
stos
test
outsb
jl
add
lds
cmp
xor
pop
mov
xor
jno
and
dec
pop
sub
iret
pop
shrl
outsl
push
mov
inc
push
sbb
cmp
pop
push
in
iret
adc
iret
rclb
hlt
adc
mov
adc
push
jg
ds
outsb
jp
aaa
xor
inc
and
popf
inc
push
scas
cmc
pminub
adc
int
and
jl
in
dec
aad
xchg
cld
lods
out
lahf
xchg
ficompl
ficompl
mov
shr
or
nop
xchg
sbb
jp
addl
sti
inc
cli
mov
push
push
nop
pop
mov
movsb
cmp
push
inc
imul
push
out
cltd
and
push
sbb
aam
scas
push
cs
sbb
xor
or
in
out
arpl
sbb
sbb
push
inc
cmp
cli
add
mov
aas
dec
xchg
dec
inc
inc
fsubs
fildl
inc
pop
lret
sti
nop
jnp
inc
je
mov
sub
in
xchg
call
push
sahf
addb
push
cmp
les
mov
and
stc
or
addl
fsubp
push
sub
inc
jbe
push
js
push
and
adc
pop
fwait
sbb
or
aad
sahf
and
push
jne
dec
popa
aad
sbb
or
push
icebp
out
inc
dec
into
test
idivl
xor
scas
sbb
adc
fmuls
sbb
loop
mov
sub
insl
mov
mov
or
stos
fildl
sub
jno
adc
mov
mov
pop
rep
ss
sbb
cmp
cmp
lods
and
dec
dec
cmp
int3
inc
in
sbb
insb
push
adc
in
push
xor
pop
mov
push
xchg
outsb
push
inc
add
xchg
xchg
pop
dec
mov
dec
add
xor
xchg
std
push
mov
dec
push
pop
pop
xchg
push
or
cmc
push
inc
jno
aam
stos
and
cmc
mov
es
lret
ljmp
in
leave
or
push
ljmp
test
inc
and
adc
dec
mov
int3
adc
add
leave
xorb
repz
push
jl
xor
addr16
add
cmp
inc
jno
aaa
jmp
push
in
lods
xor
dec
adc
pop
iret
mov
aad
das
or
out
sbb
dec
or
adc
xor
mov
xor
pop
jmp
mov
ja
push
sbb
stc
data16
lret
clc
xchg
cmp
xor
rclb
rcll
inc
pusha
push
cmp
out
nop
push
sbb
jne
or
cmp
pop
inc
aam
fistl
stos
fisttpl
inc
lea
jbe
pop
push
mov
fdivrl
jg,pn
int3
or
scas
stos
push
out
adc
jno
fwait
das
out
jl
push
mov
xchg
lret
adcb
cmpsl
and
leave
jno
push
cli
loope
popf
sub
stos
lds
sahf
ja
sbb
xchg
mov
push
sbb
pop
movsl
cltd
inc
shlb
scas
jge
out
push
sub
sbb
pop
mov
xchg
dec
push
pop
ja
push
icebp
dec
pop
jno
jno
sbb
cmp
test
adc
das
inc
addr16
inc
sub
adc
shlb
inc
pop
xchg
and
xorl
xor
mov
mov
or
test
loop
icebp
mov
mov
cmc
sub
inc
gs
loop
mov
aam
xor
les
in
mov
inc
add
sbbl
aad
mov
fistpl
or
pop
mov
dec
xchg
ss
dec
xor
xor
inc
xor
fcompl
jbe
in
pusha
mov
fcmovbe
outsb
pop
inc
mov
xor
insb
pop
mov
out
pop
mov
sbb
push
cmc
mov
cld
push
and
xor
jo
dec
inc
push
cs
and
jo
les
or
adc
push
push
cmp
loop
and
push
inc
fnsave
mov
in
imul
nop
out
and
and
sub
pop
in
test
inc
sbb
dec
lods
push
adc
fcompl
push
adc
cltd
xor
mov
test
cmp
andb
roll
inc
mov
dec
mov
out
adc
xor
xor
mov
and
push
push
mov
push
popf
mov
jo
and
inc
test
out
out
push
in
mov
gs
popf
xrelease
dec
pop
inc
jge
into
and
insl
outsb
in
hlt
dec
pop
imul
or
in
xor
push
add
movsb
fwait
pop
pop
add
cmp
xchg
cmp
aam
std
or
dec
bound
mov
outsl
xor
and
mov
dec
loope,pn
xor
fidivrs
enter
mov
adc
pop
shll
jmp
icebp
jno
shll
xchg
mov
scas
ss
lcall
ds
aaa
mov
sbb
out
add
xchg
jmp
adc
dec
int
or
sarl
je
sbb
dec
pop
maxps
popf
xor
je
imul
jo
xor
inc
sbb
loope
in
scas
pop
sbb
sbb
sbb
xchg
aad
dec
fmuls
loopne
xchg
cli
shll
dec
pop
adc
jbe
xchg
outsl
loope
lcall
xor
pusha
inc
sub
push
sub
pusha
sti
cwtl
insl
push
push
in
sub
inc
loope
lds
xor
test
outsb
divl
into
out
fs
pusha
xor
jne
xlat
pop
jp
add
xchg
push
gs
and
adc
jecxz
jne
push
push
xorb
lcall
shll
and
fisttpll
jns
jb
xor
push
mov
mov
scas
mov
xchg
adc
add
cli
push
outsb
sbb
mov
jmp
sbb
int3
add
enter
jns
imul
cmp
sbb
inc
aad
les
fcoml
mov
sub
or
sub
mov
repnz
push
inc
jl
pop
sub
mov
pop
and
std
rcrb
add
xlat
cli
xchg
cmp
das
cmpsb
scas
fldt
sbb
sbb
imul
dec
dec
pusha
mov
push
pop
push
iret
xchg
imulb
mov
jo
dec
and
add
xchg
insb
ss
into
push
xchg
push
fmull
cmp
inc
dec
in
push
or
sbb
and
push
aas
sub
adc
call
dec
dec
movsl
inc
push
aaa
aam
or
dec
lahf
jb
dec
push
inc
loop
mov
pop
cs
lds
dec
xchg
int3
push
xor
setb
jo
push
ss
dec
dec
inc
enter
lods
jb
push
cld
outsl
mov
mov
aam
daa
jbe
xor
mov
adc
sbb
sub
sbb
arpl
fldenv
adc
xor
pop
inc
xchg
sub
cld
cld
inc
arpl
jns
fstp
repz
rcl
jge
push
mov
mov
and
in
cmp
push
cmp
leave
in
push
and
in
sub
arpl
popf
pop
sbb
or
xchg
cltd
push
daa
subl
leave
dec
adc
xor
pop
inc
dec
mov
mov
leave
add
adc
xor
in
xorl
cltd
xlat
mov
jmp
sbb
inc
cli
fnsave
sub
mov
lret
stos
mov
cmp
je
add
jmp
push
and
sub
pop
mov
idiv
jne
push
into
shl
xchg
sub
xchg
fildl
and
cmp
push
ret
pop
stos
pop
sbb
push
mov
addr16
pop
rol
std
push
or
data16
into
jp
mov
or
stos
push
inc
and
cmpsb
ja
mov
dec
or
cmp
bound
jg
mov
sahf
sub
pop
inc
dec
ror
loop
add
add
cmp
add
aad
mov
push
cmp
push
lret
rcrl
or
iret
pop
xor
push
imul
in
popf
jns
inc
insl
xchg
push
push
xor
pop
fistpll
push
pop
xlat
das
push
xchg
pushf
xchg
mov
das
in
or
jnp
loope
pop
inc
push
or
andl
xlat
sbb
repz
or
cmp
adc
adc
adc
xor
pop
imul
push
add
int3
or
lods
and
in
movsb
or
inc
mov
sub
push
add
jo
cs
jnp
jae
xor
shrb
jb
sbb
nop
inc
push
cwtl
aaa
int3
ja
orb
pop
mov
push
cmp
imul
ficompl
inc
or
fs
nop
scas
sbb
dec
in
adc
bswap
add
into
sahf
rcll
xor
lock
std
cli
adc
push
fsubrs
add
iret
pop
lret
xlat
adc
mov
fldl
or
adc
jnp
jne
popa
and
mov
cmp
repnz
clc
or
sub
sub
push
lods
repnz
mov
outsb
arpl
xchg
pop
divl
sbb
out
out
addr16
inc
bound
pop
lods
inc
add
dec
into
lods
cmpsb
cld
dec
pop
aam
jns
pop
xlat
daa
dec
jl
or
cmpl
inc
jno
push
mov
lock
push
push
jmp
cmp
push
popa
dec
xor
mov
or
mov
inc
imul
int
xor
mov
repz
inc
sub
adc
fildll
jo
xor
rorl
push
in
mov
push
fisttpl
adc
rorb
dec
fcoms
je
xorb
jo
cwtl
inc
push
jbe
dec
lods
inc
hlt
in
outsb
pop
add
jno
pop
xor
repnz
or
inc
jmp
stc
jns
mov
jg
imulb
aaa
sbb
popf
lock
push
push
lret
mov
loop
xor
sub
adc
in
insl
call
out
hlt
push
cmpsb
call
adc
sbb
cmp
adc
xchg
cli
insl
imul
lock
repnz
jmp
mov
fisttpl
xor
push
jmp
or
notl
arpl
repnz
inc
shll
lods
cs
aam
sub
fs
dec
jo
inc
adc
in
sbb
jecxz
lahf
cmp
xor
mov
mov
adc
les
sahf
lods
test
ljmp
fmull
pop
mov
cmp
adc
mov
or
incb
push
and
into
es
sbb
add
pop
daa
adc
dec
inc
sbb
adc
shrl
add
in
clc
test
clc
push
pop
inc
sub
imul
test
pop
and
push
bound
cmp
outsb
leave
dec
adc
sub
iret
ret
clc
xchg
std
push
push
in
iret
xor
adc
xor
inc
ds
lcall
enter
loope
in
push
clc
or
int3
out
and
inc
mov
inc
adc
or
inc
dec
ds
mov
xor
push
call
std
sbb
hlt
fnstcw
js
pop
xchg
inc
push
lds
popl
xlat
movsl
ja
aad
ja
jp
xorl
inc
stos
inc
sub
and
xor
dec
stos
or
mov
js
xchg
cmc
hlt
pop
or
fs
mov
insl
cmp
dec
cmpsl
mov
arpl
mov
xchg
shlb
inc
mov
xchg
jbe
daa
iret
enter
nop
iret
adc
xor
mov
cwtl
dec
push
cmp
shlb
dec
movsb
int3
ficomps
jo
ret
cmp
dec
push
dec
aam
xchg
and
pop
dec
lods
lea
push
iret
aad
and
sub
xor
sbb
clc
pop
cmp
fstpt
mov
addl
push
sub
sub
popa
or
mov
mov
shrl
movl
jo
ret
jmp
add
imul
push
out
mov
xor
clc
cmp
or
icebp
dec
stos
xor
das
jo
inc
popa
sub
jo
xchg
sahf
adc
pop
stos
lret
addr16
cmp
insl
js
push
sbb
inc
pusha
or
or
sub
jo
pop
xor
cmp
inc
jle
push
pop
adc
push
cmp
and
lock
and
stc
inc
lret
adc
mov
add
inc
mov
add
loopne
shl
jmp
lock
sbb
sub
ret
ljmp
mov
push
sub
flds
fildll
sbb
xor
dec
jne
or
cmp
xchg
in
pusha
mov
orl
sub
popa
adc
jg
xor
es
push
push
sbb
pop
pusha
lret
shll
push
push
icebp
push
ja
nop
add
or
jmp
xor
lock
stos
dec
lock
xchg
arpl
shlb
rcrl
int3
push
mov
or
push
sbb
pusha
xchg
sbb
dec
sbb
inc
sbb
shlb
ss
and
bndstx
dec
mov
or
shr
dec
push
jae
pop
jno
mov
xor
cltd
in
dec
push
jbe
idivl
out
push
push
push
xor
pop
cmpsl
xchg
pop
popf
xchg
aam
add
in
loopne
rorb
push
imul
mov
add
frstor
loopne
add
into
mov
int
in
das
adc
or
fnstenv
cli
or
inc
inc
daa
dec
flds
jne
pop
mov
stos
das
dec
out
cmp
lret
cmp
mov
xchg
dec
dec
scas
fcoml
cli
xor
xchg
cltd
scas
adc
cmp
ja
aas
xchg
ds
bound
lock
mov
fdivrl
adc
cmpsb
movsb
xor
repnz
ret
and
nop
pushf
jmp
push
sub
mov
movsb
pop
sub
lahf
push
pop
mov
push
aam
in
mov
pop
in
dec
jne
lcall
rcll
xchg
mov
fwait
xor
fisttpl
aaa
imul
sub
or
mov
cwtl
icebp
or
outsw
inc
push
insb
outsb
mov
loope
mov
jns
dec
addr16
roll
inc
push
in
cs
push
pop
xorl
int3
aam
xor
das
or
push
pop
je
les
movsl
dec
pushf
xor
aaa
inc
inc
inc
push
out
inc
into
pop
cli
xchg
jbe
inc
inc
push
loop
cmp
xlat
lcall
jbe
test
adc
xor
popa
shr
mov
mov
push
int3
in
rorl
enter
das
lea
shll
cwtl
lret
imul
jns
repnz
xchg
push
jg
stos
dec
test
mov
mov
xchg
gs
call
std
mov
fildl
xchg
lahf
push
adc
and
hlt
popa
sub
mov
mov
sub
popa
inc
jo
pop
mov
in
sbb
jne
stos
push
daa
fs
inc
pop
adc
aam
insl
jo
outsb
lea
or
jns
out
jecxz
xchg
jo
xchg
mov
jne
leave
and
cwtl
test
cwtl
hlt
pushf
outsb
inc
repz
ret
adc
push
pusha
pop
shlb
ds
mov
cmp
add
xchg
adc
lock
sahf
add
add
insb
cmp
mov
mov
jle
popa
adc
mov
pop
sbb
adc
das
insl
or
or
cmpsb
mov
iret
add
xchg
insb
pop
hlt
jo
mov
lret
dec
jl
movsl
xor
push
fcompl
in
sbbl
adc
call
mov
fisttpll
jp
cmpsl
pop
or
lock
xchg
nop
das
mov
push
add
mov
lods
push
mov
inc
mov
inc
mov
pop
push
lods
dec
leave
inc
inc
mov
jecxz
rorb
adc
inc
jge
push
xchg
fwait
inc
dec
adc
sbb
and
sbb
outsb
add
push
and
or
mov
dec
pusha
inc
push
aaa
insb
arpl
ja
into
push
cld
inc
mov
pop
sbb
mov
pop
rcl
pushf
sbb
add
push
jg
ret
nop
in
mov
repz
js
push
xchg
cld
pusha
lock
xchg
add
cs
push
ficompl
sbb
xchg
and
jl
dec
adc
orb
in
adc
test
adc
xchg
ss
dec
jge
setg
push
rolb
dec
shll
xlat
das
lods
xchg
mov
mov
sahf
jg
push
mov
jo
xchg
push
mov
pop
lret
mov
jnp
xor
fiadds
clc
inc
inc
pop
insl
and
aaa
push
xchg
int
popa
dec
mov
int
inc
insl
mov
inc
cmp
sbb
push
mov
dec
mov
pushf
call
fsubs
inc
in
xchg
pop
and
mov
mov
pop
sub
dec
pop
inc
push
fsubrs
aas
inc
loope
out
adc
jb
mov
pusha
dec
ret
cli
and
ss
or
divl
mov
fistpll
adc
or
push
xor
fistl
movsb
addr16
inc
jae
add
push
cmpsb
xor
cvtdq2ps
cs
dec
mov
push
sub
int3
xchg
std
adc
notl
je
jo
cwtl
sub
xchg
data16
sti
inc
lock
push
xor
jnp
lock
sbb
aaa
xchg
dec
cs
and
and
xchg
push
in
gs
or
add
xor
mov
sbb
mov
test
lret
cmpsl
push
push
inc
add
shl
inc
sbb
outsb
je
lds
push
mov
add
or
and
dec
jmp
ret
shl
cld
scas
in
test
cmp
push
jo
rcl
adc
jmp
scas
xor
cmp
shrl
into
aad
pop
adc
xor
out
sbb
push
adc
in
mov
mov
inc
adc
sub
mov
sbb
orb
xchg
hlt
ret
ffreep
aam
mov
inc
pop
shll
jbe
cmpb
or
rcrl
lock
fdivrs
dec
pop
jge
imul
adc
loopne
xor
ljmp
js
xlat
mov
adc
lods
les
aad
hlt
lock
nop
fisttpl
je
adc
mov
movsl
or
popf
ret
popa
xchg
cmp
sbb
or
inc
push
cli
cs
xchg
cmp
nop
dec
cmc
rcll
aam
pop
cmp
mov
sahf
cmp
out
push
shlb
adcl
push
mov
xchg
mov
stc
das
rorb
fcoml
push
inc
push
inc
or
into
jo
jge
call
pop
leave
xor
adc
add
fwait
xor
jo
inc
adc
cmp
int3
push
mov
cltd
push
sbb
xlat
or
mov
inc
in
jno
mov
cli
jb
hlt
loop
xor
push
popf
adc
in
pop
dec
fld
mov
pop
cmpsl
add
and
push
push
pop
iret
stos
shrl
lret
cli
jl
or
call
pop
xor
imul
xchg
aam
sbb
and
js
and
xor
jo
and
cmpsl
xor
and
push
xor
or
or
mov
sahf
sub
pop
cwtl
add
and
mov
push
fcmovnu
loope
fistps
fwait
stos
js
outsb
fsub
leave
xchg
mov
lods
int
cmp
and
jg
xor
xchg
xor
cmpb
stos
sti
and
outsb
push
jne
sbb
lcall
rclb
xchg
nop
jnp
outsb
xchg
fs
out
inc
add
add
movsl
jne
test
or
mov
cmp
cmc
aas
add
jbe
popf
scas
rcl
push
push
cmp
cli
out
or
inc
loope
mov
subb
mov
adc
pop
scas
sub
shlb
leave
mov
mov
xlat
ret
xor
jnp
hlt
insl
mov
ret
sub
aam
addr16
repz
jae
sbb
push
and
mov
mov
adcb
aaa
imul
sbb
cmp
sub
jae
fldt
incl
sbb
push
adc
sub
fnsave
rolb
xor
shll
std
fwait
sub
push
outsb
or
lods
jbe
jg
fs
sub
push
inc
gs
arpl
fldenv
adc
ret
mov
push
imulb
int3
mov
push
into
add
pop
cmp
adc
outsb
popa
dec
mov
pusha
sub
push
in
inc
dec
js
insl
sub
clc
inc
dec
and
dec
cs
adc
sbb
pop
sub
in
mov
cmp
icebp
fldln2
ss
mov
push
xor
inc
icebp
xchg
or
outsl
sbbb
filds
mov
cmp
mov
push
xchg
push
or
mov
leave
clc
adcb
jl
jno
lret
dec
inc
shl
outsl
adc
mov
lock
and
sub
dec
test
scas
stc
arpl
mov
xor
xchg
mull
pop
dec
aaa
and
repz
xor
out
add
pop
mov
push
into
or
cmp
mov
bound
push
repz
jcxz
dec
in
mov
xchg
push
push
icebp
dec
xor
and
pop
push
ret
add
xor
push
clc
ljmp
dec
xchg
jle
jle
ja
sub
xor
add
pusha
xlat
cmpsl
popf
cli
test
movsl
push
pusha
xorps
hlt
inc
push
scas
es
xchg
and
inc
sbb
xor
lds
jno
mov
inc
dec
sbb
mov
cmp
push
scas
gs
or
clc
dec
adc
rcrb
pop
push
in
mov
sbb
cmp
ficoml
adc
filds
fnsave
dec
leave
mov
js
ljmp
mov
movsl
cmp
das
pushf
aad
xor
les
sar
jo
enter
xchg
mov
mov
sub
xor
or
mov
sub
or
popa
cmp
sub
sbb
xor
push
fldenv
loope
adc
push
pop
dec
jecxz
outsb
adc
out
dec
das
loopne
inc
idiv
push
std
insl
ja
lcall
lods
mov
cld
dec
push
push
imul
inc
imul
les
sbb
fnsave
insb
pop
loopne
inc
cmp
clc
xchg
fs
hlt
adcb
fstps
inc
mov
getsec
mov
push
addr16
pusha
dec
out
cwtl
and
mov
jno
pop
ret
adc
lds
clc
sub
jmp
outsb
out
xchg
mov
lock
cli
int
dec
push
gs
xchg
ljmp
or
sub
xor
sti
jae
inc
push
int3
add
sar
adc
adc
sbb
vunpckhps
jo
loopne
rclb
rolb
dec
mov
stc
mov
xor
dec
push
add
out
not
loop
popf
pusha
jno
hlt
stc
mov
dec
xor
mov
mov
jno
dec
xor
cmp
outsb
inc
test
push
bound
fildl
dec
jo
fstpt
add
add
or
je
lods
shlb
hlt
jae
inc
push
clc
xor
adcl
bound
fcompl
sub
xchg
insb
popa
ret
gs
inc
nop
imul
maxps
das
mov
in
int3
aam
mov
bound
stos
dec
inc
imul
pop
aas
add
in
sub
dec
adc
push
fildll
cltd
xor
leave
sti
insl
and
sbb
dec
in
adc
dec
sbb
in
pop
or
or
andps
call
or
adc
in
and
pusha
add
lret
mov
mov
inc
push
dec
xchg
mov
cmp
rcll
sbb
dec
dec
adc
inc
sub
add
in
adc
rdtsc
fs
xor
ficomps
ret
adc
pop
push
test
jge
dec
gs
xor
iret
adc
out
cmpsb
out
ficoms
lcall
inc
mov
mov
dec
push
shrb
sub
mov
jge
fmulp
xor
into
pushf
dec
mov
xchg
pop
and
mov
push
fsubl
bndstx
ret
movsl
xchg
or
aaa
add
sub
cmp
out
insl
sti
jns
xchg
and
test
fbstp
dec
ljmp
in
movsb
sub
dec
adc
outsb
ret
dec
stos
je
inc
mov
rorl
fwait
add
punpckhdq
sbb
ja
dec
mov
pop
fwait
pinsrw
nop
test
aam
jecxz
add
push
push
or
imul
fildl
xchg
repz
stos
jecxz
mov
push
jne
sbb
repz
lcall
add
aaa
cmpsl
outsb
js
fstpt
repnz
mov
clc
xor
dec
leave
lret
adc
mov
insl
push
xchg
aam
popf
inc
movsl
imul
outsb
cmp
fildl
inc
mov
or
cmp
or
fisubs
mov
push
int3
or
loope
es
sbb
fcoml
call
mov
or
adc
adc
push
mov
push
add
gs
pusha
xor
add
mov
inc
pushf
adc
mov
cld
jne
xchg
aad
popf
cmp
stos
lcall
outsb
orb
arpl
push
ljmp
dec
fsubl
dec
mov
in
invd
cwtl
imul
lret
jbe
nop
xor
cmp
test
or
adc
ret
insl
xlat
lahf
int3
pop
sbb
cmp
mov
adc
cli
and
add
and
push
and
xor
jno
testl
ljmp
in
ficompl
aad
in
pop
sub
nop
add
xor
adc
in
cwtl
and
mov
dec
mov
mov
push
dec
aad
push
jno
inc
push
aaa
or
sahf
xchg
mull
les
inc
mov
nop
pop
cmp
jae
jecxz
xchg
lea
dec
rcll
mov
xchg
lahf
and
in
in
or
imul
sti
imul
movl
push
jp
and
daa
rolb
pop
xchg
adc
sub
sbb
or
add
mov
and
mov
push
fldl
iret
mov
push
jo
iret
add
add
sbb
xor
add
xor
test
sbb
xchg
inc
or
dec
stos
cmp
jb
std
mov
mov
and
push
test
setp
pop
sahf
pop
pop
outsb
mov
cli
std
into
xor
sarb
or
sbb
xor
stc
cmp
fdivl
xor
mov
push
push
in
mov
stc
mov
lock
pusha
or
adc
inc
jns
dec
test
enter
repz
les
mov
dec
mov
ret
pop
rclb
xor
lods
cmpl
inc
adc
movsb
pop
dec
dec
push
add
push
int
jne
rorl
in
inc
and
xchg
aam
add
adc
jp
leave
popa
push
vmwrite
inc
dec
push
pop
test
in
inc
jne
pop
xorl
ret
cli
xchg
out
push
add
lods
mov
pop
cld
out
movsl
negl
or
lret
dec
scas
xchg
int3
out
adc
inc
xor
sarb
mov
dec
and
push
add
inc
cs
and
pop
stc
out
pop
out
inc
xchg
icebp
push
jno
andb
mov
enter
lds
in
rclb
pop
ficomps
aaa
cmp
push
pop
push
push
mov
leave
cmp
lea
lods
cmp
fsubrl
pop
sbb
jnp
out
loope
push
pop
jecxz
repz
mov
inc
test
jl
push
or
inc
xor
insb
movsl
repnz
sub
loopne
loopne
sub
pop
enter
popa
push
or
scas
lcall
ret
mov
popa
scas
addb
xchg
out
push
fwait
imull
int3
and
clc
out
mov
or
in
pop
add
sub
iret
sbbl
stos
jbe
xor
xchg
hlt
loop
les
push
out
cwtl
or
cmpsl
sub
cltd
jae
test
jle
dec
fnstenv
cmp
or
xor
jno
out
mov
xor
arpl
pusha
cs
ss
arpl
add
sbb
daa
cvttps2pi
jno
mov
pop
jns
cld
dec
cmp
pop
test
and
hlt
out
dec
and
bound
and
or
add
xor
add
add
sub
add
sub
sbb
xor
dec
fsub
and
jnp
xor
lock
push
lock
or
jle
push
in
push
lcall
rcr
repnz
leave
add
inc
scas
cmp
gs
add
in
std
add
into
add
inc
addr16
cmp
mov
imul
add
loop
in
lcall
mov
pop
ljmp
and
cmpsb
out
push
loopne
push
outsb
dec
inc
xchg
adc
orl
cmp
cltd
dec
daa
outsb
mov
bound
outsl
xor
lahf
mov
iret
or
xor
lret
pop
or
adc
xchg
xor
pop
cmp
repnz
stc
fsubrp
in
flds
add
mov
rolb
shr
cmpsb
int3
insl
jnp
es
in
dec
sub
xor
pop
outsb
add
js
xchg
movsl
int
hlt
cwtl
sbb
outsb
xchg
pop
aas
lret
loope
or
adc
push
popa
loop
in
pop
shrl
sahf
add
dec
stos
cmpsb
xor
or
cmpxchg
inc
in
fcmovu
push
shlb
xor
add
cmp
push
dec
sarb
and
and
pop
sub
mov
inc
push
cmp
xchg
inc
loopne
rcrl
pop
scas
cs
pop
or
mov
lahf
insl
push
xchg
out
dec
jb
rorl
aaa
gs
fisubrs
pusha
test
pop
mov
dec
xor
cltd
ljmp
es
ds
outsb
push
sbb
aaa
sub
dec
sub
push
aam
int3
mov
pop
aaa
inc
leave
mov
pop
push
cmpsl
rolb
popf
xor
aam
arpl
dec
push
push
shll
jge
popf
jle
ljmp
adc
jno
xchg
pop
loopne
icebp
or
pop
enter
ss
push
mov
jb
dec
cltd
push
aas
xchg
jo
adc
cwtl
push
sub
xor
or
dec
int3
push
mov
call
or
subb
inc
jecxz
xchg
dec
ds
push
cmp
and
ljmp
cld
clc
xor
mov
pop
popa
leave
addl
rol
and
pop
pop
aaa
xor
cli
mov
xor
loope
sub
sbb
movsl
lods
pop
add
stos
repz
pop
insl
pusha
sbb
sub
jecxz
mov
sbb
pushf
xor
mov
pop
mov
sti
add
pop
push
cwtl
xor
ret
je
xchg
inc
rcl
mov
mov
mov
dec
cwtl
into
pusha
jne
or
ss
xchg
ds
es
pusha
pop
insb
xchg
movsb
jmp
pop
inc
cmp
icebp
or
jmp
mov
cmp
mov
cmp
pop
xor
jb
popa
mov
cmp
icebp
loopne
in
inc
arpl
cmpsl
sbb
push
adc
bound
outsb
psrld
dec
push
push
jmp
mov
dec
adc
scas
sub
xor
rcrb
push
icebp
lods
jnp
inc
jno
js
stos
adc
jnp
xorl
sub
in
xchg
dec
cmp
pop
mov
sub
add
push
aaa
fisttpl
push
dec
push
xor
pop
les
leave
push
int3
and
shrl
push
pop
or
jno
sub
js
mov
outsl
js
hlt
popa
cmp
inc
aad
sub
nop
sbb
cwtl
das
dec
jmp
bound
lods
idivl
inc
iret
aaa
test
loop
into
or
xchg
fwait
cltd
int3
dec
out
popf
jp
stos
cmp
outsb
mov
cli
sub
loope
repnz
daa
or
iret
rorb
push
dec
add
xor
push
pop
sbb
adc
inc
sub
push
push
push
xchg
lds
roll
fstl
repz
cmpl
xor
sbb
pop
push
dec
sub
rorb
cmp
out
inc
add
pop
lods
aad
cmp
or
adc
adc
dec
int3
add
push
jecxz
nop
outsl
test
aam
mov
and
out
ret
test
pop
mov
mov
add
sub
aad
aad
popa
pop
push
push
jo
bound
inc
ja
daa
loope
sub
push
gs
pop
dec
pop
jno
sub
mov
lret
cwtl
pop
adcl
pop
insl
dec
sbb
fstpt
pop
std
push
mov
jp
mov
dec
and
mov
inc
or
fmuls
gs
pop
ret
scas
je
pop
sbb
push
cmp
mov
cmp
enter
xchg
imul
gs
cmp
add
sub
es
xchg
cmp
addl
jno,pn
mov
daa
rclb
jmp
add
jl
pop
inc
cmp
jns
mov
xchg
push
cmp
loope
ljmp
aad
or
or
push
leave
out
ret
mov
or
lock
int3
pcmpeqd
pusha
fsts
cli
mov
sbb
mov
dec
or
cmp
cmp
lcall
dec
mov
imul
testl
sub
add
cmp
fistpll
xchg
jbe
add
in
or
push
inc
push
jmp
adcl
sbb
aam
mov
add
adc
imul
loop
cld
cmpsl
jmp
stos
insb
in
or
mov
dec
and
jo
adc
pop
iret
adc
xchg
xor
mov
insl
pop
jge
inc
dec
pop
ja
gs
incb
xchg
sub
pop
int3
jge
gs
shlb
xorb
mov
push
cld
or
pop
inc
cmp
push
int3
add
stos
xchg
out
adc
dec
inc
repz
push
push
push
dec
mov
or
lahf
xor
push
push
push
in
les
or
and
loope
hlt
inc
dec
xor
mov
xor
cli
or
popa
aam
xchg
or
inc
dec
nop
rolb
in
pop
clc
es
cmp
mov
fstl
dec
mov
fdivrl
fs
pop
ja
in
and
add
push
adc
adc
inc
in
push
push
xchg
loop
xchg
mov
cmp
pop
xchg
jo
sub
fstpt
int3
loope
mov
outsl
icebp
mov
cwtl
sub
or
popf
pusha
divl
or
je
sub
mov
pusha
mov
cli
imul
or
mov
sub
or
cmp
dec
aam
jl
inc
inc
jns
cmp
das
mov
in
lock
inc
or
inc
jno
aam
sbb
outsb
cmpsl
js
andb
jno
out
dec
dec
pop
jo
jne
dec
icebp
and
clc
cmc
mov
ds
sub
arpl
push
aad
scas
js
das
jae
xor
mov
or
popa
mov
dec
pusha
dec
call
xor
pop
jb
add
fisttps
push
jmp
pop
cmp
dec
roll
outsb
push
sbb
jle
mov
lock
outsb
dec
stos
in
ret
outsb
out
insl
fsubrl
outsb
dec
xor
mov
or
push
fnsave
fs
adc
leave
inc
fdivl
jecxz
dec
xor
sbb
adc
pop
imul
push
pop
outsb
mov
cmp
stos
mov
add
insb
sub
mov
push
lock
into
imul
ljmp
add
cmp
fcmovnb
cli
sahf
addr16
ret
sbb
cmp
neg
dec
adc
stos
xor
push
inc
xor
lods
add
mov
cmp
outsb
jle
sahf
push
test
mov
lods
repnz
push
or
dec
push
cli
lods
arpl
jo
in
adc
inc
jg
sti
imul
sub
je
xchg
push
push
adc
xor
fadd
mov
inc
push
loop
int3
adc
cmpsb
add
jl
test
push
aad
push
jno
xchg
push
and
or
xchg
jg
xor
fadds
dec
shrl
or
popa
adc
divl
hlt
mov
ret
mov
add
push
xor
xor
pop
jecxz
xchg
push
inc
mov
and
inc
nop
xchg
inc
mov
mov
push
dec
and
iret
inc
pop
aas
arpl
adcb
in
and
movsb
ds
xchg
fsubrs
dec
cmp
xchg
adc
outsl
sub
mov
cmpsb
aas
addr16
fdivs
xchg
and
mov
and
inc
dec
adc
push
or
cmpsb
sub
add
inc
push
lahf
or
inc
rolb
icebp
inc
adcb
popf
xchg
sbb
es
scas
push
stc
gs
push
and
fidivs
movb
dec
pop
xchg
notl
jbe
inc
outsb
test
xor
cld
jne
adc
fmuls
ja
dec
xor
or
incb
or
subl
push
push
xor
lcall
and
dec
test
inc
outsb
andl
addr16
dec
xchg
sahf
xlat
loop
cwtl
imul
pop
jno
fistpll
jp
into
std
push
push
mov
add
or
inc
dec
mov
sahf
ja
and
push
stos
lret
fbstp
or
in
cmp
push
ja
fadds
gs
cmc
mov
insl
stos
movsb
fsubrl
icebp
clc
int
xchg
cmc
xchg
jp
test
or
mov
adc
fcoml
adc
dec
int
inc
dec
push
les
out
pop
mov
inc
test
xor
mov
and
inc
push
dec
movswl
adc
add
fcompl
and
mov
out
mov
push
jp
push
daa
inc
movsl
jne
dec
or
mov
push
mov
lods
lods
push
inc
cmp
imul
jecxz
inc
inc
add
jne
xlat
xor
loopne
or
mov
mov
fsub
push
lcall
pusha
inc
xlat
dec
jno
mov
and
sbb
inc
or
or
dec
pushf
mov
fadd
sbb
cmp
gs
dec
fsubs
push
popa
jno
repz
aaa
repz
ficomps
inc
cmp
xchg
push
dec
dec
dec
push
mov
push
imulb
mov
push
into
fldenv
sbb
insl
xchg
inc
and
popa
sbb
jbe
into
sbb
or
xchg
outsb
lods
mov
pop
aad
aas
enter
ljmp
dec
cwtl
cmp
adc
fisubl
pop
xorl
shl
push
pushf
fs
gs
out
mov
out
mov
lds
lock
repz
sbb
fiaddl
nop
fwait
xchg
xor
dec
ljmp
in
ss
outsb
das
jnp
inc
mov
or
lcall
cmp
gs
xor
shrl
and
stc
clc
xchg
ja
mov
dec
dec
shrb
xor
jae
shl
mov
xchg
out
cmp
add
xor
repz
je
int3
popa
pop
in
outsb
push
dec
adc
pop
rcrb
jae
daa
sar
sti
jl
mov
jbe
adc
xor
popa
mov
jns
imul
mov
loop
xlat
fmuls
push
shlb
stc
rorl
and
sub
xchg
aas
xchg
rclb
add
dec
bound
fmuls
sti
popa
ds
pop
cwtl
ja
gs
jno
or
lahf
adc
and
arpl
push
dec
in
int3
or
int
dec
cmp
xchg
cmpsb
lea
stc
das
cli
mov
mov
mov
addr16
xchg
and
adc
sub
xchg
int
inc
lcall
outsb
mov
cmc
xchg
rcll
ret
sub
adc
outsb
mov
repnz
mov
dec
or
inc
scas
int3
mov
push
loopne
addl
je
push
xor
cwtl
adc
aam
mov
jge
mov
aas
icebp
test
push
into
jne
push
fnstenv
test
aad
shl
pop
push
jne
test
or
xchg
divb
cltd
sbb
icebp
sub
movsb
inc
ss
cmp
fcoms
dec
or
pop
cmove
adc
mov
or
popf
inc
pop
bound
mov
ljmp
fimull
cmc
popf
mov
xor
repnz
xchg
adc
adc
pop
test
add
loop
mov
add
or
sti
icebp
dec
das
sbb
adc
xchg
cli
xchg
xchg
loop
push
repz
fisubrl
lock
or
movsb
pop
sub
dec
jecxz
jno
fldl
stos
dec
add
xor
pusha
xchg
and
sub
xchg
gs
cmp
push
popa
repz
or
xor
lahf
dec
jns
xlat
or
xchg
in
lock
pusha
xlat
xor
jne
add
xor
push
aaa
out
movsl
dec
mov
inc
inc
gs
pop
mov
cmp
out
jbe
fcomip
cmp
sti
scas
ljmpw
pop
daa
push
cmp
adc
or
fcoms
and
mov
xorl
in
dec
ds
dec
inc
popa
into
test
dec
shrb
add
je
xchg
lahf
xchg
xor
out
sub
adc
add
lahf
std
mov
decb
roll
shlb
pop
lea
repnz
cmp
mov
and
adc
xchg
and
iret
dec
jge
inc
mov
inc
adc
scas
out
loop
jecxz
dec
xor
or
into
push
and
aad
pop
push
ficoms
push
aas
or
adc
outsb
push
dec
je
mov
dec
pop
int3
out
mov
or
fwait
popa
xchg
dec
out
stos
aas
scas
cmp
or
mov
or
push
insl
inc
test
xor
les
stos
in
pop
fadd
adc
rorb
jbe
mov
and
mov
out
sbb
or
pop
pop
mov
imul
xchg
sub
cwtl
stos
in
out
push
or
lods
imul
int3
push
es
idivl
nop
jge
push
subl
pop
rol
xor
lret
pop
cs
adc
pop
dec
jg
jns
outsb
mov
insl
shlb
pop
xlat
enter
jo
sbb
jg
iret
sbb
jno
mov
cmp
xor
ljmp
pop
xchg
test
mov
fwait
xor
adc
in
lcall
mov
mov
jno
lods
mov
daa
sub
fcmovnbe
dec
pop
fcmovb
stc
dec
mov
jle
pop
fcmovbe
shl
das
jo
mov
inc
aad
jno
xchg
imul
adc
imul
bound
add
sti
sub
push
movsb
xor
cli
push
dec
sbb
or
data16
xchg
iret
add
jecxz
mov
mov
shll
inc
or
movsb
out
push
push
inc
cmp
bound
push
out
ret
inc
sub
adc
jge
and
in
mov
adc
xor
gs
int3
fildl
data16
outsl
fs
push
xchg
pop
inc
sub
sahf
cmpsl
ret
jmp
outsb
ss
andb
loopne
push
push
sbb
stc
in
xchg
and
gs
dec
inc
add
daa
or
je
ret
lret
push
xor
mov
sbb
cmp
push
or
jle
sub
in
dec
fsubl
incb
into
cwtl
or
in
fbstp
out
or
inc
xor
cld
shrb
push
lret
rorl
mov
xchg
and
mov
cmp
inc
mov
xor
lds
and
jl
inc
scas
sbb
pop
mov
repnz
jl
sarl
xchg
mov
and
mov
xchg
in
jmp
adc
bound
in
mov
fnsave
mov
leave
cmp
sbb
cs
sbb
adc
rcrb
les
aam
xchg
scas
aaa
push
add
fdivrl
outsb
sbbl
mov
ja
xor
ret
xor
movsb
lods
push
inc
cld
xchg
ja
clc
out
pop
je
outsb
mov
addl
cs
addl
sbb
sub
or
xor
aas
ret
sub
test
dec
mov
xor
shl
cltd
aad
cmp
push
incb
cwtl
inc
and
xor
adc
repz
xorl
jbe
lea
xchg
lahf
arpl
outsb
dec
popa
push
je
es
ficoms
xor
xchg
or
sbb
je
aaa
xchg
cltd
int3
ds
xchg
mov
stos
daa
arpl
jecxz
add
out
lods
push
push
pop
fsubs
stc
std
les
in
lods
dec
pop
test
jle
imul
aas
add
fimuls
mov
ljmp
out
xchg
fdivrp
nop
and
arpl
cmp
call
push
lcall
ljmp
sti
mov
sub
popa
inc
adc
jg
dec
push
pop
cmp
ficoml
cmpsl
ss
push
or
xchg
jecxz
jno
xchg
mov
mov
loope
daa
loope
movsb
fidivs
sub
mov
cli
xchg
push
daa
mov
cmpsl
aam
es
gs
lcall
mov
ret
cmp
shrb
flds
in
inc
fmul
lods
sub
push
rclb
lds
ja
popa
dec
sbb
into
imul
push
ret
sbb
sbb
push
jbe
mov
cmpsb
pop
fstl
dec
pop
decb
mov
dec
lods
add
scas
xor
roll
test
repz
repz
push
dec
aam
fnsave
pop
cmp
popa
pop
aaa
inc
inc
push
push
push
inc
jns
dec
xor
lcall
loopne
push
int
in
sbb
sti
and
push
repz
or
dec
or
mov
pcmpeqb
pop
xlat
push
add
and
mov
adc
sbb
adc
push
cs
popf
in
lahf
cmp
inc
xor
jl
fsubrl
out
xor
dec
jge
inc
dec
mov
adc
stc
pop
push
push
bound
add
aad
add
push
in
xlat
push
test
outsb
add
cmc
shlb
pop
pusha
jb
pop
lcall
sbbb
lea
stc
shrl
dec
stos
xchg
adc
cmp
mov
loope
sbb
sbb
xor
in
outsl
add
fbld
xor
dec
push
fimull
aam
cmc
add
fistpl
popa
outsb
mov
and
aas
xchg
cmp
addb
shl
xchg
xchg
xchg
sbb
shl
out
adcl
xchg
cmp
jno
or
ja
sbb
mov
push
inc
mov
pop
dec
inc
push
add
jo
idiv
lds
lahf
jecxz
push
sti
cmc
push
cmp
adc
and
sbb
je
push
fstpt
dec
adc
dec
mov
bound
outsb
jge
jg
int3
sbb
cmc
into
jne
cs
int3
mov
insl
or
xor
scas
lds
mov
xor
fs
sub
inc
stc
xorl
insb
out
adc
mov
mov
xlat
int3
dec
sbb
jle
or
xchg
add
not
cld
adc
sbb
ret
or
dec
dec
xlat
pop
andb
ficoml
push
loope,pn
push
jnp
pop
dec
int
mov
add
pop
cs
call
xchg
dec
pop
fisttps
ljmp
cmpb
xor
sbb
dec
adc
mov
xlat
jae
cmp
int3
and
fidivl
sbb
rcrl
push
outsb
add
mov
jbe
or
jnp
gs
movb
push
xor
pop
adc
or
imul
xchg
push
or
xor
js
xor
xor
dec
mov
cmp
sbb
xchg
inc
ret
or
sar
jmp
xor
pop
aaa
xor
adcb
cmp
leave
or
sbb
popa
in
icebp
ror
out
movsl
test
and
add
sub
or
in
sub
mov
cmp
rcrb
bound
shl
sub
fnstsw
mov
xchg
pop
jo
jmp
sahf
das
xor
pop
xor
adc
arpl
mov
lods
test
test
fdivp
or
repz
in
aam
jno
aaa
popf
arpl
mov
lret
mov
cmp
sbb
test
faddl
in
push
push
and
push
lods
dec
jge
adc
xlat
fldl
insl
jg
fbld
cmp
adc
cs
mov
sub
roll
xor
push
outsb
push
popa
mov
mov
adc
push
in
mov
jbe
imul
in
cmp
xchg
arpl
mov
ret
inc
push
jecxz
sti
dec
shlb
push
xor
cld
scas
adc
mov
imul
xchg
cs
xor
in
pop
and
push
fimull
cmpsl
clc
test
cmp
push
add
xchg
bound
or
fidivl
lock
or
out
inc
mov
test
in
pop
mov
fsubrl
adc
pop
push
push
pop
xchg
push
ret
scas
xorl
add
loop
in
xchg
inc
frstor
and
add
stos
pop
loop
repnz
insl
xchg
mov
sbb
and
and
test
bound
inc
insl
xor
jl
pop
push
mov
push
xor
jb
je
mov
xchg
cmp
sbb
out
or
scas
mov
test
push
int3
adc
add
mov
push
sahf
addr16
aam
jg
inc
pop
cmp
dec
ret
push
fdivrs
dec
sub
loop
nop
fidivrs
call
aaa
push
sbb
adc
lcall
mov
in
clc
dec
imul
dec
mov
adc
bound
jns
mov
cmp
lods
dec
mov
aas
in
ja
jnp
mov
add
shrb
popa
inc
cmp
or
or
inc
loope
xor
xchg
adc
popa
xor
or
testl
mov
nop
dec
mov
icebp
push
ret
insl
aad
kxnorw
jb
sti
push
aas
push
lds
dec
push
inc
fstpt
rclb
dec
in
xorb
add
xchg
push
and
lahf
and
xchg
into
xor
sub
cmc
aam
mov
lods
xor
adc
push
xchg
rolb
lcall
xchg
outsb
test
dec
fidivrl
daa
push
cmpsl
pop
xor
sub
pop
push
sbb
inc
rdtsc
pop
addr16
stos
pop
rcll
xorps
call
xor
fdivrl
jge
xchg
push
adc
inc
xor
push
dec
push
xchg
inc
and
outsl
pop
leave
lcall
fsubrl
xchg
out
inc
xor
pop
pop
dec
adc
mov
xor
out
xchg
out
dec
and
jo
push
cs
ljmp
dec
sbb
cmp
sub
and
lcall
lahf
or
rorb
les
push
ja
xor
cltd
scas
test
les
stos
rclb
imul
pop
push
push
sub
into
frstpm(287
xchg
ret
pop
sarl
faddl
mov
sti
pop
fdivs
sbb
cmpsl
mov
imul
jle
xor
cmpsb
syscall
jg
pusha
int
xchg
int
fsub
sbb
loopne
hlt
cmp
clc
sub
scas
dec
xorb
lods
xlat
mov
mov
push
pushf
mov
mov
popa
fsubl
adc
xor
addr16
push
pushl
mov
in
test
jle
jg
xor
inc
dec
repz
in
or
adc
push
stos
daa
popa
lret
xchg
jne
in
push
sbb
mov
sbb
pop
push
pusha
push
mov
add
fstpt
bound
insl
addr16
add
rorl
filds
jae
dec
sahf
sbb
iret
pop
fists
outsb
aad
cmp
push
adc
cmp
sbb
dec
setp
ljmp
cs
inc
pop
int
sub
fstl
decl
or
inc
push
cmp
jo
pop
mov
xchg
sub
cmp
sub
pop
ficoml
push
inc
push
mov
ds
or
out
lret
std
dec
jbe,pn
jo
int
cs
ret
dec
or
insb
rclb
aas
jo
inc
adc
test
mov
loop
popf
pushf
and
in
inc
ret
push
adc
push
push
and
xor
scas
cltd
jl
xor
xor
dec
fsubrs
pop
lcall
js
nop
in
out
or
les
and
xor
xchg
cmp
or
aad
inc
mov
popf
mov
jne
jl
pusha
adc
add
iret
rcr
mov
outsl
push
andb
jne
xlat
jp
adc
scas
mov
push
sbb
inc
sbb
in
or
test
test
dec
xchg
xchg
inc
ret
pop
push
arpl
sbb
dec
push
mov
pushf
leave
mull
mov
dec
mov
in
ds
in
jae
sub
pop
cmp
lock
adc
ds
ret
mov
inc
and
jb
mov
scas
sub
das
nop
push
or
out
or
jle
and
inc
rcll
call
cmpsl
daa
aaa
jge
aad
or
mov
leave
xor
cltd
pop
aas
cmp
dec
pop
fidivs
leave
fdivrl
test
pop
rorb
dec
outsb
jp
lds
jo
jno
dec
adc
outsb
pushf
jns
and
shrl
lods
cmp
in
icebp
pop
rcll
mov
and
dec
loopne
add
adc
mov
push
mov
fisttpl
add
sbb
jnp
repz
leave
popa
mov
fisubs
xor
cmovns
cmpsl
push
xchg
insb
lods
cmp
mov
stos
add
mov
mov
mov
mov
std
add
in
xchg
inc
and
mov
xchg
mov
jne
pushf
push
in
hlt
inc
mov
or
cltd
or
mov
mov
test
imul
lret
cmpsb
je
fcmovbe
or
inc
xchg
mov
and
shl
xchg
int3
xchg
addl
mov
inc
sub
popa
xchg
push
rcl
daa
int3
ja
fistpll
fldenv
cmpsl
scas
cmp
xor
mov
lret
adc
rcrl
inc
push
insl
ja
sti
popa
or
pop
aaa
int
dec
xor
adc
mov
out
cmp
insb
adc
dec
cmc
aaa
das
sti
mov
inc
sbbl
cmp
fdivrl
icebp
push
scas
cwtl
jns
mov
lret
arpl
test
or
xchg
popf
cmp
push
test
pop
fsubl
popf
fildl
sub
jmp
inc
mov
fs
test
dec
and
pop
xor
sti
cli
outsb
dec
popf
es
scas
mov
inc
pop
push
mov
push
cli
mov
lea
inc
repz
daa
xor
movsl
and
jbe
xor
or
inc
data16
add
int
orl
roll
and
scas
shrb
adc
jge
lret
inc
jno
fsubl
add
add
shlb
ret
aaa
sub
nop
dec
push
push
xchg
enter
out
xchg
lret
or
fld
jns
dec
push
fistl
ss
mov
movsl
mov
das
or
adc
xchg
adc
lahf
mov
test
adcl
xchg
loopne
and
push
push
jo
fcomp
fildl
jle
add
rcrb
inc
sbb
pop
sub
adc
subb
cmp
es
inc
inc
and
pop
aad
js
sbb
mov
shll
into
dec
xchg
into
aaa
addl
enter
adc
or
jne
adc
pop
mov
into
add
cli
je
mov
adc
in
xlat
les
fists
out
loopne
xchg
pop
mov
outsl
in
jo
fidivs
pop
xor
mov
fistl
stos
arpl
mov
inc
iret
aad
stos
adc
inc
popa
push
xchg
jle
shll
in
leave
xchg
push
sti
and
push
mov
xor
js
xor
aad
jmp
ljmp
add
dec
dec
and
fwait
pop
and
daa
xlat
nop
inc
cmp
rol
cmp
jns
test
jg
inc
insl
mov
cmp
stos
mov
aaa
push
and
into
lock
push
rorb
mov
push
adc
mov
add
xchg
movsl
es
push
mov
xchg
es
jo
imul
pop
out
repnz
push
gs
aad
and
pop
pop
xchg
dec
cmp
mull
jl
push
push
test
lret
or
pop
mov
stc
xor
adc
xor
xchg
jno
jno
jecxz
test
pop
push
cmovae
xlat
shrb
adc
xor
xor
xsha256
cmpsb
push
int3
xorl
jno
stc
mov
inc
xchg
popa
dec
pop
dec
icebp
pop
aas
jne
out
adcb
fxch
cmp
mov
daa
movl
sar
gs
fwait
pop
pop
fwait
rcll
enter
xchg
sbb
pop
xor
pop
js
pusha
jns
gs
bound
sbb
ljmp
icebp
dec
sbb
gs
cmc
adc
adc
insl
jno
inc
sti
xorl
loopne
call
xor
cmp
push
sbb
fisttps
mov
mov
adc
inc
jno
adc
rcrb
push
int
inc
imul
out
lods
xchg
addr16
std
or
test
mov
push
insl
or
lret
mov
mov
das
sar
popa
cmpsb
iret
xor
movl
int3
into
jns
data16
fistl
xchg
orl
ret
lahf
les
outsl
xor
inc
repz
outsb
dec
jno
and
outsb
in
scas
add
fcomps
lea
adc
into
xor
std
push
xor
dec
leave
mov
ss
aam
xchg
loop
pop
mov
fcomp
push
js
push
xchg
lret
inc
and
add
cli
xchg
popa
jl
fsts
rcll
imul
xchg
aas
pop
pusha
add
int3
mov
jae
dec
dec
add
dec
test
loope
xor
icebp
scas
push
xchg
les
add
or
rcl
repz
jns
popa
push
sub
adc
fsubp
vshufps
inc
orb
repnz
dec
fwait
lahf
sbb
enter
sub
and
add
xor
xchg
sbb
test
js
mov
push
mov
dec
push
je
iret
cmp
fdivrl
xor
pusha
push
mov
addr16
test
adc
stc
pop
mov
outsb
rolb
into
into
lods
and
mov
xor
xor
into
ret
cmp
or
ds
ja
or
inc
insb
stos
ss
inc
outsb
ja
outsl
sbb
sbb
push
dec
mov
mov
jg
add
add
inc
add
arpl
mov
and
dec
lret
inc
fsubrl
inc
push
jmp
fldl
pusha
dec
adc
in
jns
or
loope
sub
popa
cmpl
std
sub
dec
xchg
lahf
jns
jp
cmc
loop
pop
paddusw
adc
add
in
daa
inc
in
out
push
add
shrl
mov
adc
xchg
mov
in
insl
test
rolb
les
sbb
sbb
in
add
mov
jle
mov
in
shr
add
adc
or
ljmp
sub
push
loop
addr16
popa
orb
dec
sub
cmp
mov
shlb
test
inc
mov
jbe
sti
jne
xchg
outsb
popa
dec
out
jne
cmc
sub
fwait
je
out
jno
rorl
pusha
mov
lods
pop
sbb
xchg
loope
insb
jo
ret
shl
dec
xlat
mov
icebp
mov
push
inc
adc
pop
in
cmp
xchg
movsb
push
pop
and
cmp
inc
dec
gs
jo
push
jo
int3
imul
sar
int
add
inc
lods
icebp
xor
enter
inc
pop
push
sahf
dec
in
xchg
or
push
aad
mov
scas
pop
fwait
mov
cmpps
adc
ds
jnp
mov
push
stc
sub
lcall
lods
or
mov
sub
xchg
adc
sar
icebp
scas
push
and
and
mov
pop
push
jbe
cmp
jae
or
insl
mov
pop
cwtl
test
cmc
inc
xchg
adc
mov
pusha
or
or
sbb
ljmp
andl
ret
enter
cmp
mov
xchg
test
and
mov
pop
xchg
sub
dec
xchg
xlat
jne
xor
jb
ss
inc
insl
lret
rorb
stos
inc
imull
ja
std
push
xor
imul
repz
pushf
cmovns
push
fnstsw
insb
aaa
inc
fdivl
lods
lcall
arpl
pop
push
mov
inc
popa
mov
lret
add
in
push
arpl
adc
mov
inc
xchg
inc
add
pusha
daa
push
icebp
jp
xchg
cwtl
add
mov
push
xor
jno
int3
fwait
push
adc
pop
cs
cmp
sub
les
int3
shrl
nop
out
lret
int
scas
mov
push
inc
jecxz
push
xor
add
sbb
mov
imul
push
out
mov
cmc
repz
cld
gs
or
icebp
mov
std
movnti
test
mov
adc
ljmp
add
shrl
sbb
sti
add
jo
cmpl
add
ljmp
ret
dec
dec
dec
rclb
xchg
add
outsb
xor
adcb
push
pop
int3
xor
arpl
jb
out
adcb
push
dec
cmovno
jb
cmpsl
or
sbb
mov
imul
inc
adc
cli
stos
pop
lds
xor
cwtl
mov
in
inc
adc
and
sti
loope
mov
jo
or
cs
dec
jbe
push
and
or
mov
popf
or
add
xchg
ret
adc
xchg
jb
push
fisubs
jle
daa
out
pop
or
sbb
xchg
subb
and
cmp
jno
mov
int3
or
jl
fcomps
or
and
sub
inc
inc
arpl
mov
cld
sbb
add
push
push
ud0
xlat
lea
rclb
ret
aaa
lods
sub
movsl
int3
push
xchg
test
popf
sub
sbb
sbb
jg
clc
stc
jno
cmp
popa
push
push
jne
or
push
rcrb
fistpll
add
ret
in
aaa
mov
inc
mov
push
xlat
mov
ljmp
push
mov
add
jecxz
push
jg
movsb
mov
push
lods
lods
loopne
cmp
sub
ret
popf
sub
insl
xor
xchg
and
add
sbb
mov
outsl
inc
dec
cmp
ljmp
xchg
pop
xlat
mov
loop
fildl
scas
xor
jle
mov
dec
xor
pusha
jle
mov
sbb
xchg
ljmp
jbe
enter
xor
sbb
sbb
inc
pop
jb
and
and
fcmovnb
mov
mov
out
or
push
dec
aad
cltd
push
adc
in
inc
icebp
xor
sub
xchg
ret
lcall
aaa
es
mov
ja
adc
repnz
subl
mov
mov
aaa
xchg
mov
lds
add
sub
mov
test
jmp
and
pop
adc
sarb
adc
and
cmp
sbb
push
scas
xchg
or
sub
cli
or
mov
repz
push
push
sahf
mov
fstpl
out
int
adc
pop
xor
dec
popa
je
test
nop
or
mov
icebp
stos
mov
pop
aad
push
in
mov
shlb
mov
rcrb
jo
mov
popl
pop
movsb
ds
mov
ftst
xchg
pmulhw
dec
aad
ja
inc
sbb
fisttpll
ror
popa
jb
push
pop
cmp
pop
leave
aad
push
adc
daa
push
nop
or
in
imull
in
pop
push
sti
mov
insl
push
lcall
push
or
push
mov
lds
in
mov
xlat
cmp
pop
rorb
and
mov
adc
inc
fistl
add
bound
jle
dec
cmc
cmc
inc
jno
int3
sti
rorl
movsl
addr16
mov
mov
or
in
sbb
call
jmp
xchg
cwtl
cli
shl
fbld
push
nop
ja
inc
xchg
and
jl
add
aas
sub
xor
push
outsl
cli
fadd
dec
adc
outsb
mov
mov
fists
outsl
push
shll
mov
lds
aam
inc
andb
cmp
inc
mov
rolb
inc
cli
imul
xor
pop
sbb
pop
repnz
jno
or
xor
inc
pop
aaa
leave
sub
dec
das
adc
in
arpl
cmp
dec
out
movsb
stc
fwait
icebp
rcl
xor
mov
test
das
movsb
push
fdivrl
in
inc
xchg
dec
add
inc
mov
fimuls
shll
dec
xor
bound
jmp
or
mov
loopne
jno
push
sar
sub
dec
std
pop
inc
or
in
stos
push
outsb
jbe
pop
pop
sub
and
sbb
pusha
pop
push
popa
mov
sti
test
mov
loop
dec
stos
divb
and
out
int
icebp
xor
or
mov
pop
sub
push
add
dec
push
lcall
mov
popf
int
sahf
in
mov
lds
dec
cs
push
scas
cmp
push
jg
lock
push
xorl
std
pop
xor
stc
mov
iret
fimull
jo
loop,pn
pop
pop
loop
imul
push
jge
lcall
lcall
push
xchg
rcr
inc
mov
lea
sub
in
jns
cli
mov
xchg
and
cmc
dec
aas
mov
or
mov
jno
cli
ss
rcl
cmc
rorl
lods
mov
popa
sarl
xor
xlat
out
mov
push
pop
lcall
adc
mov
mov
push
paddsb
inc
xor
xchg
pop
hlt
dec
inc
lea
je
dec
pop
idiv
movsl
sbb
pop
pop
scas
lea
orl
and
dec
pop
mov
in
in
popf
movb
call
test
leave
mov
in
cmp
cwtl
sbb
sti
dec
stos
fdivl
pop
pop
jns
inc
out
lret
lds
xchg
jge
gs
xchg
stos
popa
mov
pop
jb
negl
or
jae
dec
jns
shl
cmp
fwait
xor
stos
bound
cmc
push
jns
mov
push
xchg
dec
and
scas
xor
jo
arpl
add
outsb
xor
orl
push
mov
test
push
and
sahf
jge
repz
mov
xchg
addr16
sbb
int
sub
push
cmp
fsts
je
inc
clc
mov
cld
insl
lahf
ds
dec
mov
xchg
pop
outsb
loopne
or
push
pop
stos
les
xchg
lods
xlat
cli
xchg
pop
xor
mov
ret
add
pushf
in
and
or
cmp
cmc
push
lret
into
arpl
mov
in
dec
ret
iret
imul
push
leave
push
ficoml
mov
xchg
push
xchg
fmull
loopne
and
ss
xlat
fcompl
adc
add
xchg
js
adc
mov
mov
add
jp
inc
outsb
and
push
pop
fldl
xlat
push
add
xchg
adc
imul
cmp
frstpm(287
mov
shrl
das
sub
mov
pop
lds
dec
jmp
iret
outsb
mov
iretw
xchg
sub
jne
aad
scas
lds
imul
and
pop
imul
adc
mov
jne
jo
lret
mov
add
add
push
insb
in
pusha
test
sbbl
lds
dec
push
dec
fistpll
mov
adc
xchg
lds
push
and
das
out
dec
cmp
xchg
scas
aaa
or
jo
scas
shll
dec
push
inc
orb
or
into
pop
arpl
inc
ss
aad
mov
stos
loop
movsb
inc
in
xchg
push
icebp
pop
cli
das
inc
int3
sub
and
cwtl
fisttpll
js
xlat
xor
push
mov
mov
cmp
xchg
punpcklwd
mov
arpl
ja
mov
out
or
cltd
dec
pop
adc
push
xor
push
subb
scas
inc
push
mov
fildl
mov
jmp
pop
iret
mov
ljmp
jnp
loop
in
aad
xchg
subl
mov
sub
daa
es
outsb
jns
xchg
cmc
ret
xor
mov
add
fldenv
inc
ljmp
ret
insl
shr
bound
or
decb
pop
lods
in
add
xor
fstpt
push
or
sbb
in
ret
inc
jno
mov
js
pop
int
ja
fnstenv
in
jle
in
pop
stc
outsl
jnp
adc
cmc
fstl
push
push
dec
pop
adc
clc
pop
cmpsl
inc
int3
push
or
lcall
mov
xor
xor
and
pop
mov
xor
aad
outsb
loope
shl
jo
stos
jno
inc
lea
pop
xor
cmp
into
cli
dec
and
mov
outsb
cmc
or
sub
pop
aas
js
xor
push
aaa
test
mov
aas
aad
push
ja
aaa
push
fisttpl
pop
mov
outsb
sub
lahf
jg
or
mov
mov
outsb
ja
int3
push
aam
in
cmp
test
pop
mov
push
or
js
mov
hlt
pop
push
dec
pop
lret
cltd
fisubrl
push
or
xor
or
mov
nop
cli
imul
inc
cmp
shll
inc
fisttpl
add
and
movsl
ret
pop
sub
xor
jo
xor
jmp
loope
add
jo
jno
adc
inc
scas
xor
sub
aad
repz
adc
mov
aad
push
ljmp
dec
dec
andb
jno
adc
into
inc
dec
iret
add
ljmp
jge
and
adc
cmp
pop
in
mov
inc
out
mov
imul
cmp
sub
mov
movsl
adc
ljmp
fcmovnb
add
mov
outsb
mov
cmp
mov
push
test
iret
add
xor
out
hlt
sbb
mov
int3
mov
rcll
push
insl
faddl
push
pop
orb
xchg
xchg
xchg
push
inc
jge
pushf
add
and
dec
scas
cs
push
scas
cltd
dec
jno
lret
push
adc
dec
adc
pop
sbb
fs
test
mov
testl
bound
xchg
pop
pop
shll
mov
mov
jo
bound
minps
mov
inc
inc
imul
pop
lret
xchg
adc
xor
std
xor
fadd
bound
repnz
sbb
pop
or
and
popa
ret
xor
push
mov
out
sbb
adc
sbb
std
rclb
mov
sahf
inc
outsb
dec
push
imul
arpl
cmp
sub
pop
insb
xor
int
xor
mov
mov
and
inc
jb
lahf
adc
int3
push
xor
jb
inc
shlb
xchg
icebp
out
rcrb
jb
inc
inc
add
bound
fcomps
dec
out
dec
rorb
test
gs
decl
push
inc
aad
cmpsb
in
add
and
pop
xor
int
cmp
pop
mov
pop
sti
add
push
outsl
inc
ljmp
cld
jns
in
fnsave
lock
cmp
dec
sub
dec
fcoms
push
pusha
jns
ds
js
and
rdmsr
leave
imul
cmpsb
arpl
xor
pop
jecxz
cwtl
inc
cmpsb
pop
sub
push
jo
and
popf
in
and
mov
push
dec
sub
cmp
aad
pop
mov
push
mov
out
push
bound
pushf
cmpsb
fdivs
fdivrl
inc
stos
xchg
add
push
pop
sarb
or
push
pushf
pop
jmp
in
dec
cmp
push
xchg
pop
cmp
ret
je
cs
out
inc
adc
imul
dec
gs
mov
adc
in
and
jl
into
clc
push
and
cmp
and
fists
and
fiaddl
push
push
cmpsb
enter
adc
mov
aam
mov
jmp
sarl
mov
adc
add
dec
insl
aad
mov
inc
jne
pop
rclb
popa
xchg
push
pop
sub
arpl
cmp
push
cmpsl
inc
xor
or
pop
and
xor
pop
pusha
je
push
add
inc
cmc
sub
push
icebp
cmp
cld
cmp
add
xor
pusha
dec
mov
imul
dec
ds
je
sub
or
inc
jmp
imul
sub
xchg
dec
aam
mov
outsb
jmp
scas
and
sbb
mov
inc
mov
mov
cmp
sbb
jmp
add
jl
fildl
mov
inc
outsb
mov
xor
and
mov
push
pop
ljmp
push
dec
shll
lahf
dec
dec
in
or
aas
jge
jecxz
push
sbb
stos
sahf
lods
out
pop
stos
mov
ja
ret
mov
test
std
fdivs
movsl
xchg
vcvtpd2psy
sti
add
mov
mov
fstpt
cltd
pusha
cmpsl
cmpl
pop
in
inc
mov
cld
add
insb
clc
mov
in
push
leave
mov
or
in
or
test
aas
dec
or
dec
hlt
aaa
lea
daa
test
jmp
dec
and
add
jmp
stos
inc
and
mov
sbbl
push
insl
fistl
cmp
mov
and
aaa
dec
jmp
ds
push
icebp
ljmp
ja
xchg
ja
mov
lahf
dec
enter
je
xor
lea
sub
pushf
fistps
sbb
xor
bound
sub
cld
mov
mov
xor
arpl
mov
jno
cmp
fcmovnu
sti
cmp
loope
sbb
ljmp
leave
fnstcw
jo
mov
jge
xor
insl
shr
adc
xchg
and
daa
xor
inc
imul
cmp
push
mov
test
fiaddl
pop
test
scas
xchg
aam
cmp
mov
fcomp
mov
mov
inc
mov
push
int
andb
add
push
mov
xchg
inc
dec
sub
inc
and
adc
inc
inc
dec
push
push
fdivs
jno
mov
mov
inc
int
popa
sbb
addb
in
add
gs
inc
into
cmp
xchg
inc
arpl
inc
push
add
dec
int3
cli
pushf
aaa
and
ljmp
ret
cmp
sbb
and
mov
add
mov
gs
jno
mov
jnp
rcrl
movsl
add
pop
in
es
test
test
sbb
pop
bound
and
icebp
testl
es
ret
sub
push
cltd
lods
testl
pushf
cmpsl
loop
lods
add
xchg
sub
lods
or
add
inc
cwtl
add
adc
push
xor
adc
lock
fsubr
add
lea
pop
rcll
icebp
inc
push
pop
and
push
inc
mov
mov
cmc
mov
ret
loope
fwait
loop
daa
mov
mov
mov
inc
push
add
inc
mov
cmc
pop
ds
lods
fnstenv
sbb
xor
repz
fisttpll
je
mov
push
das
dec
add
adc
add
mov
sub
inc
mov
jno
xlat
jb
cwtl
xchg
orl
rclb
push
inc
xchg
cmpsb
lret
jnp
sbb
or
push
aas
add
cmp
adc
sbb
inc
arpl
mov
ret
jle
sarb
push
pop
lret
fstl
pop
mov
sub
arpl
outsb
jnp
fwait
scas
pop
mov
subb
fildl
jno
push
aaa
add
mov
imul
popa
dec
cltd
dec
or
dec
setl
daa
pop
add
push
pop
ss
ds
sub
sbb
sub
fnstenv
cmp
dec
inc
aam
dec
loope
fxch
testb
cmpsl
push
add
and
add
insb
push
mov
xor
jl
pop
dec
xor
sbb
dec
inc
icebp
sbb
jne
xor
pop
je
jl
and
push
aas
popa
pop
push
fisttpll
test
fildl
outsb
push
push
jecxz
dec
in
sbb
push
inc
push
pusha
mov
sub
setnp
lret
mov
push
stc
xor
in
add
jg
imul
push
inc
dec
scas
xor
dec
inc
ss
sub
push
lcall
int3
push
lock
lds
loop
and
dec
cmp
rolb
pop
popa
jg
les
push
add
fmull
or
mov
push
call
pop
sub
jo
mov
nop
dec
sub
fcmovnb
push
aaa
push
cld
pop
xchg
sub
mov
imul
addr16
cs
adc
push
in
cmpl
jmp
xor
xor
lret
sub
cwtl
pop
shrb
jne
out
xchg
ljmp
int
jb
push
or
inc
pop
sub
hlt
xor
sub
add
push
fildl
pop
xor
dec
xlat
xorb
jge
xchg
mov
mov
mov
cmp
daa
cmp
mov
cmp
js
je
movsl
push
andb
ds
nop
fs
inc
sbb
adc
xor
push
push
mov
shl
mov
sahf
xor
sbb
or
inc
push
shrb
pop
jge
fisttpll
jns
cmp
addr16
into
mov
je
lods
and
xchg
sbb
das
pop
or
int
cmp
mov
fnop
pop
sti
cli
or
lret
cmp
mov
jns
int3
inc
push
lcall
sub
mov
out
add
pop
cmpsb
or
mov
into
out
inc
sbb
popa
and
fstps
xor
add
addb
sahf
ror
call
mov
xchg
icebp
mov
imul
mov
xchg
cmp
int3
fwait
mov
js
adc
add
scas
je
int
pop
mov
fisttpll
pop
add
xchg
imul
push
push
xchg
inc
bound
sbb
push
mov
lods
shl
das
xor
ret
cmp
fcoml
ror
dec
pop
inc
ja
repz
dec
inc
push
leave
cmp
lds
cmc
stc
add
fwait
ror
stos
lret
push
push
in
mov
xor
push
add
or
inc
mov
push
xor
ret
mov
outsb
xor
int3
push
outsl
mov
push
cmp
dec
lock
in
out
inc
stos
add
stos
jmp
stos
inc
lret
int3
rclb
rorb
inc
cmc
movsb
aad
mov
cmp
ljmp
dec
inc
mov
cmc
mov
jne
mov
dec
inc
lds
mov
add
inc
dec
push
outsb
xchg
mov
push
int
bound
daa
sti
insl
or
push
in
fisttps
jno
jl
xchg
pop
cli
push
stos
or
cld
or
adc
cmp
setge
lahf
inc
ds
pop
mov
adc
inc
cli
cmp
mov
outsb
jnp
idivb
adc
mov
mov
gs
pop
jns
cmp
sbb
ret
sbb
xor
and
jnp
rolb
jno
xchg
add
add
outsb
ret
fdivl
sub
sub
mov
subb
xor
pop
inc
das
popa
mov
int3
loope
mov
daa
xchg
int
dec
or
jno
cmp
cltd
outsl
xchg
jp
mov
xchg
cmp
imul
aad
nop
push
into
andl
sbb
lds
jmp
mov
or
push
xor
lods
xor
push
fisubl
in
dec
inc
dec
or
out
push
in
or
mov
les
xor
ds
push
std
push
sub
sbb
mov
negl
cmp
leave
or
inc
popa
aaa
and
mov
add
mov
xor
rcll
cmpsl
inc
ret
fs
or
push
outsb
cmp
xchg
in
mov
adc
mov
mov
lret
cmc
leave
rol
fmuls
aam
rclb
ja
xor
pop
jae
xchg
fwait
xchg
jo
mulb
add
inc
mov
insl
or
push
jg
xchg
filds
push
mov
xor
call
hlt
push
lret
jb
fcomp
push
imul
out
sbb
adc
jl
imul
add
pop
int
cmp
add
add
and
fwait
push
cltd
jnp
cmp
add
cs
leave
in
cmp
xchg
leave
test
ljmp
and
jbe
outsb
not
in
popf
or
mov
inc
dec
sbb
jp
daa
iret
mov
pushf
aas
jnp
or
pop
cwtl
push
push
push
pop
mov
je
fs
nop
lock
rol
mov
jno
lods
and
loopne
xor
enter
insl
addr16
aaa
mov
sbbl
sub
mov
scas
adc
and
cmp
mov
push
popf
push
xor
xor
mov
sub
cmp
push
mul
enter
xchg
testl
add
cs
jno
movsb
fistpl
xchg
out
inc
test
imul
sbb
or
outsb
out
repnz
dec
mov
adc
bound
sub
add
dec
inc
loop
xchg
leave
les
cmpsl
lcall
gs
mov
scas
jle
dec
pop
and
imul
pushf
sub
or
push
aam
and
adc
iret
pop
sub
adc
test
int3
aam
and
sbb
stos
popa
sub
punpckhdq
cmp
repz
xchg
shll
ret
sub
addr16
imul
jne
dec
pop
cli
in
addr16
add
pop
stos
jo
lret
lea
arpl
pop
push
sarl
cli
rolb
mov
dec
push
rorl
xor
dec
or
xchg
in
cs
test
arpl
xchg
pop
daa
cmp
jle
test
repz
addr16
mov
loop
sub
in
faddp
lock
cli
cmpsb
adc
into
or
mov
inc
inc
push
ret
fdivr
scas
rol
fidivl
xchg
push
rol
sub
or
xchg
fdivs
pop
in
scas
aaa
std
pop
out
sbbl
sub
sub
inc
pushf
pop
cli
jnp
push
and
adc
dec
in
inc
inc
icebp
test
data16
push
adc
sbb
jge
mov
adc
stc
in
pop
imul
xlat
add
lock
icebp
test
push
clc
mov
adc
stos
dec
cmp
aaa
dec
adc
add
hlt
jb
push
and
sbb
add
dec
or
mov
mov
pop
sub
loope
into
add
mov
sbb
pop
dec
repz
nop
inc
adc
divl
in
push
cmp
lcall
in
into
sbb
fadds
out
cld
adc
mov
f2xm1
cmc
and
stos
aam
stos
aad
lahf
push
aaa
and
dec
and
mov
test
sti
cltd
jae
dec
sbb
nop
sub
mov
fs
inc
cmp
mov
adc
mov
adc
sbb
jmp
dec
int3
scas
xor
jbe
mov
pop
or
mov
push
aad
add
jmp
lods
adc
inc
popa
sbb
push
inc
sub
testb
jb
sar
or
lods
divl
sub
dec
nop
jmp
loop
in
xchg
loop
ret
mov
in
orl
xchg
scas
shrl
sbb
and
dec
fsts
gs
cs
jb
jae
sub
xchg
pushl
inc
jle
push
and
xor
mov
cwtl
lret
popa
sub
dec
aas
cltd
leave
test
add
das
or
aas
cmp
gs
xchg
jno
cli
mov
or
dec
fs
aaa
push
xchg
int3
fistpl
adc
test
fwait
xor
cmp
push
pop
or
dec
cs
aad
add
vpmulhuw
repz
scas
movb
dec
sbb
insb
insb
xchg
or
adc
or
cmp
icebp
out
int3
adc
xchg
fldz
bound
adc
rcrb
in
in
cli
rolb
fs
daa
sti
in
mov
jae
aas
pop
aam
xchg
inc
mov
and
inc
push
mov
inc
stos
in
lahf
cmpsl
ss
xchg
std
lahf
fistl
inc
pushf
clc
cmc
out
and
xor
xor
push
loopne
mov
mov
or
fimull
aas
outsb
or
adc
fadds
push
dec
push
adc
mov
pop
in
add
jno
jge
pop
cmova
in
sbb
mov
js
std
xlat
shlb
mov
movsl
and
test
push
pop
in
mov
dec
and
hlt
add
sub
inc
add
inc
outsb
xchg
data16
push
sub
adc
das
jnp
pop
ljmp
inc
rclb
fmuls
fcmovne
sub
movsb
fdivl
dec
sub
aam
dec
lods
popf
jg
fcmove
ja
int3
xor
dec
bound
push
inc
jge
sbb
pop
push
fwait
mov
xchg
mov
jae
cli
or
inc
arpl
rol
stc
int3
push
shrl
out
movsb
xor
int3
sbb
mov
in
jl
daa
mov
fdivs
negl
cmp
ret
xchg
mov
mov
mov
aad
pop
fwait
xor
fs
jmp
and
or
aas
dec
and
jp
insl
and
push
inc
insl
jb
arpl
inc
push
dec
push
sub
xorl
pop
cli
dec
add
and
xchg
or
frstor
or
mov
jle
mov
jle
cltd
jg
xor
movsl
and
sbb
jns
and
in
ja
mov
jge
cmc
pop
push
sbb
int3
lret
lret
clc
and
xor
fldl
push
pop
ds
xor
push
push
xchg
dec
and
pop
jl
xchg
rolb
or
sub
leave
cmovbe
in
push
aaa
insl
cs
rorb
dec
jge
cld
fsubl
pop
repz
gs
sbb
cli
mov
pop
xor
push
cwtl
xor
push
bound
mov
jg
or
iret
mov
pop
aas
jo
inc
sbb
inc
and
add
jmp
mov
cs
adcb
orl
push
inc
ret
loop
pop
sti
pop
fistl
outsl
push
mov
xchg
xchg
push
aam
scas
mov
add
or
mov
add
in
dec
lea
xor
mov
test
xor
mov
add
push
std
fcompl
bt
movb
xlat
push
clc
pop
cli
cmp
sbb
push
jno
les
ljmp
in
inc
or
fcoml
out
int3
jae
cwtl
jo
push
jno
xor
jecxz
mov
icebp
jne
lcall
sub
mov
fidivl
or
out
cmpsb
cli
adc
mov
mov
mov
outsl
daa
sbb
mov
es
lahf
cmp
pop
push
jmp
sub
leavew
stos
iret
or
inc
ret
fdivl
mov
mov
add
jo
pop
daa
lods
mov
adcb
arpl
pop
call
aam
xchg
notl
dec
in
and
inc
repz
lcall
lea
aam
xchg
inc
out
push
daa
jl
into
cmp
mov
lcall
cmc
popa
lcall
pushf
movsb
mov
iret
cwtl
stos
inc
add
es
fiadds
jl
je
inc
adc
pushf
jp
jp
imul
add
call
cmp
inc
push
or
aad
aam
mov
sti
in
divl
jno
addl
sbb
lahf
test
out
add
das
xor
lds
cmovb
dec
adc
in
sbbb
in
sub
rolb
xchg
pop
sti
mov
stos
int3
pop
cmp
or
sbb
push
mov
rcrl
clc
xor
push
out
adcl
add
test
call
in
cwtl
in
mov
les
clc
or
incb
popa
pop
testl
stc
cmc
push
push
and
nop
sbb
fsubl
aas
insb
pop
xchg
mov
sub
out
push
loop
hlt
xor
aas
dec
push
out
mov
mov
fdivrs
mov
xchg
shrb
lods
pop
adc
push
adc
mov
inc
and
imul
fisubrl
int
push
int3
sbb
sbb
pop
mov
sub
jmp
into
out
sub
adc
mov
dec
shlb
int
stc
mov
mov
push
sti
popf
mov
int
rcrl
cmp
push
cld
insl
cwtl
add
bound
lret
aad
imul
pop
sti
cmc
cmc
sub
ret
jle
mov
std
sub
daa
push
jbe
pop
or
fwait
add
sub
push
push
fcomp
xchg
and
dec
negl
sahf
mov
push
movsl
xchg
dec
and
in
hlt
arpl
or
scas
add
or
add
add
add
mov
cli
push
mov
or
mov
xor
ljmp
pop
sub
jo
inc
push
inc
cmp
notb
inc
outsb
cli
mov
imul
jp
dec
mov
pop
sub
outsb
rcrb
or
mov
mov
and
cmc
or
pop
adc
adc
out
pop
pusha
hlt
sbb
cmpsl
dec
add
loope
push
filds
nop
ja
lret
dec
cltd
sub
std
push
mov
fxch
sti
push
and
sbb
inc
add
pop
mov
inc
xchg
les
into
data16
sahf
aaa
jmp
cmp
fs
fldcw
jns
mov
sbb
pushf
insl
sbb
lret
or
sahf
repz
jnp
cmpl
sarb
sub
dec
cmp
xchg
mov
cmp
stc
popa
ja
cltd
pop
push
jo
hlt
cs
sub
gs
fadds
or
pop
divl
nop
push
cmpsb
mov
mov
dec
xlat
ds
test
mov
pop
or
add
xorl
clc
jge
orl
adc
push
or
loop
push
dec
add
std
mov
push
push
cs
mov
bound
movsb
add
xchg
jno
enter
out
daa
icebp
stos
dec
pop
adc
std
ret
dec
sahf
jns
adc
bound
adc
adc
sub
dec
dec
fcoms
leave
pusha
in
cmp
xchg
sbb
xor
add
dec
into
or
loop
push
jno
lock
add
sbb
push
cld
jae
leave
fcoms
inc
ds
cmp
cmpl
out
xchg
lret
rcll
jae
mov
jl
push
lret
in
int3
fstpl
ret
push
icebp
xchg
loopne
daa
cmp
mov
inc
inc
adc
adc
aad
sti
sub
fnstsw
subb
jno
into
pop
in
push
in
mov
mov
ficoml
dec
add
inc
rclb
incl
jecxz
mov
arpl
dec
shl
sbb
xchg
nop
inc
gs
mov
pop
jge
cli
roll
aas
push
leave
mov
inc
push
jp
xor
insb
inc
outsb
js
out
mov
jae
mov
jmp
mov
xchg
jp
je
inc
push
push
and
mov
jecxz
shll
jle
xor
pop
mov
mov
arpl
js
rorb
xchg
cmp
loope
pop
dec
and
push
loopne
add
push
cs
cmp
dec
dec
ret
push
aam
push
lods
and
pop
xor
pop
push
pusha
sbb
and
xchg
xor
mov
stc
scas
adc
ret
or
aam
xchg
inc
pop
adc
arpl
push
int3
loopne
xorl
stc
fmull
cld
imul
push
popa
push
xor
adc
xor
es
adc
and
scas
sub
std
adcl
lock
push
shl
dec
mov
pop
lahf
cmp
pop
loop
pop
adc
les
lock
cmpsl
lock
loopne
adc
cmp
mov
mov
test
scas
adc
adc
sub
xor
add
pusha
cmp
shrb
or
jne
rcl
inc
inc
popf
xchg
mov
cmp
push
sub
cld
icebp
pop
or
ja
adc
out
cmp
es
pop
adc
push
xor
cmp
dec
cmp
xchg
inc
cld
pop
pop
or
add
fisttpl
in
push
inc
out
dec
in
cltd
xor
jg
outsb
push
fstl
rorl
enter
test
cs
add
fstpl
adc
pop
test
fistpl
xchg
cs
rcr
jge
stc
cmp
jno
cmpb
adcb
jno
rclb
jge
inc
or
mov
scas
push
in
lods
clc
arpl
mov
nop
mov
pusha
into
xor
cmpsb
ficoms
mov
arpl
inc
add
sub
jle
inc
and
addr16
sub
jo
in
lock
in
mov
xchg
lcall
dec
lds
cli
pop
popa
xor
cltd
mov
ja
out
inc
push
and
pop
or
data16
cmovl
arpl
fsubs
popa
ds
pop
mov
dec
inc
cmpsb
clc
aaa
xor
jae
mov
xchg
push
or
sub
or
lods
jo
jp
jb
fsubl
addr16
sbb
add
mov
jp
add
roll
cmp
push
sbb
jno
lds
sbb
jb
dec
loope
sub
or
in
xbegin
sub
jnp
fwait
lahf
inc
daa
lcall
add
popa
fdivs
adc
inc
dec
mov
xlat
loope
jp
cmpsb
out
dec
fwait
imul
std
pop
mov
adc
pop
loop
ficoml
out
or
sub
mov
jns
and
xor
xchg
jecxz
hlt
mov
pop
mov
shlb
fmul
daa
out
mov
lock
pop
scas
rcr
push
jmp
call
mov
cmc
out
push
outsl
test
imul
fdiv
push
sti
sarl
inc
mov
insb
cmc
movsb
imul
out
imul
mov
stos
into
or
hlt
mov
push
jg
xor
dec
push
call
push
push
cli
and
leave
sub
stc
xchg
popa
pop
pop
push
xchg
popf
js
rorl
jecxz
push
mov
in
add
movsbl
leave
mov
into
repnz
cmp
lcall
sub
sbb
cmp
and
or
les
ljmp
push
adc
rorb
inc
fcoml
dec
mov
jle
jecxz
ss
mov
inc
and
pop
not
inc
jo
bound
outsb
out
dec
ds
scas
and
incl
cld
mov
push
inc
mov
push
sub
push
arpl
push
into
or
inc
test
mov
lods
mov
or
popa
jo
and
pop
ds
or
push
cs
imul
jo
mov
and
popa
dec
push
sub
jno
sbb
ljmp
mov
je
and
ds
dec
pop
mov
loopne
push
push
and
repz
test
jmp
add
mov
xor
mov
cmc
sub
push
xchg
jno
fwait
aad
inc
push
xchg
mov
mov
pop
out
cmp
add
int3
inc
inc
sbb
pop
xchg
stc
imul
xchg
mov
jge
scas
jns
xor
dec
xlat
inc
pop
sbb
jo
pop
mov
int3
jns
dec
popa
jo
push
cs
ds
aam
and
jbe
xor
push
mov
add
inc
xor
dec
inc
sub
cmp
and
pop
xchg
adc
call
roll
sub
hlt
mov
in
subl
jnp
mov
iret
stos
or
add
xlat
rcll
push
outsl
jge
leave
pushf
push
xchg
bound
pop
pushf
push
mov
jo
adc
divl
mov
push
cld
aaa
fdiv
cwtl
mov
push
repz
pop
mov
adc
movsl
jmp
shll
inc
adc
mov
xchg
push
sub
pop
cs
aaa
sti
pop
fistpl
inc
jle
or
loopne
fldt
pushf
lcall
lds
into
cmp
ficompl
xchg
pusha
xchg
sti
hlt
pop
cmp
test
cld
pop
xor
fsubl
sbb
scas
out
push
inc
les
test
sbb
je
push
out
pop
sub
push
xchg
push
ja
ret
jmp
jnp
mov
gs
popf
outsb
adc
leave
stos
sbb
and
dec
cs
mov
js
jecxz
das
cmpsl
xchg
sub
push
ficoms
pop
outsb
rclb
xchg
push
in
lea
sbb
sub
out
movsl
pushf
cmpsb
int
xor
pop
add
push
stos
cld
xlat
xchg
pop
push
sub
push
int
mov
push
dec
fpatan
cmp
jno
adc
daa
in
xchg
dec
pop
sbb
xor
lcall
or
push
sbb
das
in
int3
into
lods
xor
or
sbb
rcl
adc
andb
or
add
mov
cmpsb
je
stos
cmp
pushaw
mov
mov
add
xor
data16
add
ret
inc
mov
cmp
push
ret
pop
inc
arpl
lcallw
jb
cmp
cmc
xor
into
jae
ret
lds
mov
sub
sub
dec
lcall
or
leave
lea
inc
sub
dec
aad
or
mov
xchg
xor
popa
fsubl
fldcw
push
cmpsl
fstpl
dec
jno
shll
push
pop
adc
mov
fstps
loope
xchg
les
sti
dec
lods
out
mov
mov
and
jg
pop
adc
adc
mov
into
mov
sbb
sbb
adc
inc
push
pop
or
es
xor
scas
movsl
or
adc
mov
js
xchg
mov
or
or
pop
xor
xchg
sub
push
fidivl
xchg
cli
leave
push
dec
jno
ljmp
add
mov
aaa
ficompl
adc
sahf
ss
fiadds
out
dec
add
inc
fistps
sbb
push
and
test
adc
cltd
mov
mov
in
adc
mov
xchg
add
mov
or
stos
shrl
fisttpll
mov
push
call
or
xchg
mov
adc
lods
adc
mov
out
inc
lcall
mov
push
lea
and
mov
popa
add
adc
in
icebp
or
cmp
imul
loop
jns
mov
mov
test
push
je
and
push
enter
aaa
pop
cwtl
and
lods
xor
jno
lcall
push
imul
imul
xor
test
int3
mov
movsl
je
adc
lret
aas
dec
inc
jle
push
adc
inc
dec
jo
mov
pop
pop
cld
cs
dec
dec
addr16
ret
ret
mov
pop
je
sbb
jno
ret
repz
push
adc
das
and
add
rorb
imull
pop
movsb
popf
stos
inc
xchg
stc
lea
arpl
mov
mov
adc
sahf
jge
out
sub
clc
out
add
adc
fs
mov
inc
enter
fldcw
stos
sub
loopne
call
xor
cmp
add
push
xchg
xchg
mov
in
xchg
xor
xchg
mov
cmp
stos
ss
inc
adcb
adc
stos
xchg
lods
imul
subl
daa
xchg
ds
add
xchg
cmpl
nop
and
or
add
xchg
aad
lahf
jno
xor
pusha
sbb
cmp
lods
xor
outsb
lcall
push
shll
xor
popa
inc
pop
mov
popa
sahf
sbb
inc
sbb
inc
dec
jno
inc
jo
sbb
xor
or
pop
mov
rcrb
iret
shrl
add
cld
mov
mov
adc
addr16
hlt
sbb
jmp
add
aam
lds
pop
gs
loope
xor
sbb
jmp
cmp
xchg
and
cmovae
mov
inc
fimull
mov
cmp
fistl
xor
rcll
xor
xchg
lcall
rcrb
out
into
add
sbb
inc
cli
xchg
push
mov
inc
into
or
xchg
fxam
inc
sub
xchg
dec
fistpl
fcompl
and
outsb
daa
aam
pushf
mov
out
addb
push
popf
aad
push
adc
gs
inc
lods
scas
xchg
add
or
test
outsb
xchg
rclb
push
int3
mov
roll
or
lcall
cmp
out
pop
insl
lcall
mov
aam
xchg
gs
paddw
cltd
outsb
mov
bound
or
lods
xor
outsb
push
lock
fwait
aad
xor
popf
gs
stos
js
das
mov
nop
adc
dec
xor
mov
dec
cmp
call
inc
shrl
jb
and
or
mov
ss
or
or
nopl
mov
xor
and
adc
int3
adc
cmpsl
idivb
push
pop
xchg
or
xor
das
hlt
jge
pop
cmpl
jbe
das
movl
or
fistl
adc
mov
push
sub
outsb
xchg
loop
in
outsb
jbe
cli
inc
inc
inc
push
int3
mov
arpl
movsb
cmpsl
dec
bound
leave
push
xchg
lahf
enter
dec
das
jmp
push
dec
xlat
jnp
push
popf
push
mov
sub
pop
adc
push
lret
xor
pop
fidivrs
sub
inc
inc
or
sbb
or
mov
mov
leave
pop
mov
cmp
pop
inc
jp
ljmp
xchg
pop
insl
mov
push
lds
sbb
iret
jo
in
xchg
xor
imul
les
aad
cwtl
push
jne
dec
add
add
push
mov
push
loopne,pt
push
and
inc
add
jo
push
adc
lods
fisttpl
dec
int
sbb
mull
xchg
jmp
ror
and
movsb
aam
pop
mov
push
mov
jp
fstp
sub
jno
sub
push
in
dec
pop
jl
jl
in
and
outsl
or
xchg
sbb
push
pop
xor
jmp
push
jecxz
adc
xor
test
jno
jae
push
and
fidivl
xchg
aaa
popl
aam
add
in
pop
add
and
push
adc
into
dec
loope
addr16
or
rolb
dec
xor
push
mov
dec
push
imul
push
in
dec
aad
adc
xchg
out
daa
push
inc
adc
mov
adc
push
imul
xor
adc
pushf
lret
stos
sub
sbb
push
pop
jp
mov
sti
inc
pop
or
lcall
cmovno
outsl
popf
mov
enter
push
mov
xor
ret
aad
or
ret
adc
inc
adc
cmp
inc
push
cmp
pop
or
lcall
xor
xor
popf
inc
cmc
dec
or
dec
add
and
sbb
pop
push
dec
or
dec
std
xor
mov
sbb
fisubl
cli
test
inc
push
sbb
fnstcw
shlb
dec
repnz
inc
outsb
int
or
lret
dec
pop
sbb
lds
and
inc
out
movsb
cmc
add
pop
or
shlb
or
imul
xchg
cltd
push
or
inc
xor
xchg
rol
rolb
imul
push
xchg
mov
mov
sbb
or
pop
shll
int3
and
out
pop
sub
lcall
out
loop
incb
push
dec
xor
pop
push
pusha
pop
mov
pop
das
rcrl
daa
push
dec
cmp
hlt
jge
sub
jo
add
iret
jecxz
movsl
add
jb
data16
leave
loope
push
rclb
xchg
sahf
lds
or
mov
adc
xchg
inc
aam
mov
or
adc
adc
rolb
das
in
sbb
xchg
or
mov
inc
xchg
repnz
in
xor
push
lea
aas
fwait
adc
or
nop
stc
das
mov
fmuls
test
popaw
sub
push
shl
dec
xor
leave
cltd
enter
jp
adc
or
rorb
repz
lcall
repz
sti
inc
in
dec
inc
cmc
addr16
popf
and
daa
jge
adc
imul
insb
push
mov
enter
mov
adc
dec
out
cmp
or
orl
ret
scas
nop
sbb
jecxz
adc
inc
inc
xor
push
jae
push
sbb
cmp
loop
sub
out
push
cmp
addr16
repnz
sub
add
and
jg
imul
popa
add
mov
add
or
and
add
and
and
out
dec
jle
arpl
add
cmp
pop
rol
ds
inc
or
aas
lock
adcl
mull
mov
push
nop
jns
push
es
xor
fildl
inc
inc
shll
lahf
adc
sbb
cmp
mov
sub
cwtl
add
or
push
fldcw
mov
ds
int3
aam
leave
js
add
ret
loop
xor
sub
fwait
addr16
or
inc
xor
pusha
xchg
pop
adcb
push
or
xchg
decl
in
jbe
dec
test
stos
or
dec
jns
push
mov
fbld
push
sub
push
lock
ret
push
inc
add
inc
pop
shlb
je
orb
jmp
lock
movl
loope
movb
inc
xor
jo
sub
icebp
pop
or
movsb
inc
clc
popf
jns
or
enter
mov
scas
mov
and
and
push
dec
xor
pop
mov
sub
ret
cmc
sahf
mov
pop
add
jecxz
jno
scas
loop
jno
dec
repnz
rorb
pop
xor
push
mov
adc
sbb
es
cs
cmp
sub
mov
jo
je
mov
sub
cmp
dec
test
push
mov
leave
xchg
push
ret
popa
dec
leave
setno
pop
movsb
mov
cmp
push
sbb
xchg
ljmp
in
sbb
jmp
xor
push
pop
scas
sar
or
inc
sbb
xor
jno
pop
fs
fsubrs
push
data16
fstpl
or
mov
jp
add
inc
das
jl
push
cmp
xchg
dec
add
inc
scas
sbb
das
inc
dec
push
sbb
popl
outsb
cltd
pop
scas
in
lcall
or
push
jne
jle
int3
ja
push
negl
push
or
or
mov
das
or
jno
jle
divl
push
adc
jg
push
adc
or
aas
aad
push
scas
mov
pop
mov
orl
add
aad
push
scas
cmc
and
aam
push
xor
cmp
inc
cltd
cli
cwtl
xor
loop
bound
adc
sbb
outsl
sti
fwait
push
stc
in
pop
push
xor
in
dec
out
outsl
xchg
pavgw
and
cli
addr16
cmp
push
and
xor
xchg
lds
inc
out
sub
lds
xor
or
shrl
mov
hlt
test
xchg
movsl
xchg
xchg
pop
cmc
add
lret
cmpsb
dec
or
decb
test
cld
fimuls
sub
sub
jp
push
push
sbb
pop
and
sbbl
cs
or
pop
sub
pop
and
nop
into
clc
xchg
bound
adc
push
aam
push
push
fwait
cltd
pop
and
icebp
lahf
add
xor
push
cmp
cmc
inc
inc
sbb
sti
push
out
loop
dec
push
into
mov
add
pop
outsb
leave
cs
imul
adc
dec
das
sub
sahf
ret
enter
xor
fs
mov
push
mov
movsb
mov
or
sbb
mov
push
inc
xor
outsb
mov
fimuls
sub
mul
insl
cs
popa
lahf
cmp
pusha
inc
outsl
inc
sub
mov
xchg
push
imul
pushl
and
cwtl
jecxz
pop
cwtl
stos
mov
add
or
push
std
pop
xorb
loop
das
loopne
sbb
movsb
inc
mov
xchg
jns
sbb
int3
sbb
xchg
xorb
xchg
dec
aam
pop
dec
cmc
cmp
idivb
aaa
sbb
sbb
cltd
pop
bound
inc
xor
imul
sti
push
adc
sti
xor
dec
xchg
in
ds
pop
lds
dec
cltd
sub
push
dec
xchg
push
inc
or
sti
cmp
adc
ret
in
mov
inc
jmp
lea
imul
or
pop
mov
inc
cld
xchg
cmpsl
orb
jbe
das
enter
xor
push
fiadds
imul
jle
jecxz
pop
dec
add
fsts
jecxz
movsb
ret
mov
xor
xchg
nop
mov
xlat
pop
out
sarl
ds
lahf
sbb
adc
pop
in
pop
outsb
jle
test
mov
call
xchg
out
lods
push
mov
rcrb
xchg
out
jg
add
and
mov
push
fs
in
mov
sub
push
mov
imulb
inc
fcom
push
fucomp
dec
pushf
pop
std
mov
xor
cmp
xchg
shl
cmp
xchg
hlt
lock
mov
adc
push
into
or
in
cs
adc
hlt
imul
adc
in
outsl
aaa
dec
push
inc
out
add
jns
xor
push
or
cmp
int3
add
fs
iret
lock
out
add
inc
in
scas
ja
jno
loopne
xlat
sti
and
cwtl
insb
xlat
fists
pop
punpckldq
inc
jns
push
pop
push
in
jno
jbe
cs
xor
mov
sub
mov
push
out
push
dec
xchg
adc
add
jno
adc
out
sahf
adcb
inc
cltd
in
jle
xlat
sbb
or
addb
inc
jnp
mov
pop
std
mov
xor
push
xchg
cwtl
clc
adc
mov
adc
jmp
xchg
mov
jo
cmp
xor
dec
cmp
dec
icebp
and
sbb
lods
in
cmpsb
sti
dec
pop
sub
scas
and
adc
cmp
push
in
mov
fwait
mov
fnstcw
iret
outsb
lcall
out
or
gs
fwait
xor
dec
cmp
sbb
push
push
xor
outsb
jge
sub
pusha
adc
mov
notl
icebp
das
rcr
xchg
loop
js
push
mov
mov
fistpll
loopne
push
and
sub
sub
add
or
popa
mov
xor
or
xchg
jno
into
dec
adc
mov
add
and
or
push
or
gs
sub
and
dec
xchg
adc
sub
inc
push
mov
lock
out
dec
insl
into
inc
das
xor
bound
and
sub
fisubs
xor
sbb
lcall
xchg
orps
sub
mov
ss
in
jb
cmp
mov
or
add
jo
mov
add
aaa
rcpps
cli
sbb
lahf
add
aaa
shrb
mov
ds
fcompl
or
cli
pop
sub
jno
pop
xor
dec
sub
push
dec
jo
cli
pop
pop
nop
lahf
add
dec
rcr
or
in
insl
aaa
sbb
sbb
inc
xchg
lahf
push
iret
push
cltd
xchg
out
dec
fimull
leave
bound
in
add
xor
or
sbb
pop
adc
cwtl
gs
dec
popa
incl
rorl
psubsw
push
mov
mov
pop
push
test
pop
ds
push
add
jno
into
mov
mov
inc
or
sub
cli
push
pushf
stos
sbb
fildl
ja
xchg
jle
xor
test
mov
cli
xor
add
sbb
pop
push
pop
clc
or
cmp
lret
mov
mov
cmp
push
push
stc
orb
lret
cs
inc
dec
ficoms
repz
pop
outsb
loopew
xchg
push
sbb
fnstsw
cld
int3
inc
lret
popa
pop
mov
inc
mov
xor
sti
mov
mov
cs
shlb
int3
or
test
sbb
loope
fidivrs
ja
xor
push
xchg
mov
push
sbb
or
inc
cmp
and
push
add
add
ret
sub
mov
inc
ljmp
jbe
adc
dec
arpl
push
cltd
bnd
pop
mov
push
adc
lahf
jl
push
jns
push
adc
inc
cmp
addb
jno
or
fwait
mov
xchg
bound
push
mov
adc
fs
pop
add
jnp
inc
loop
ds
pop
xchg
mov
cmpl
test
mov
lods
mov
into
push
mov
add
cwtl
in
dec
test
daa
outsb
and
pop
nop
lret
pop
jo
adc
fldcw
xor
in
push
xchg
psrlw
into
sub
xchg
aaa
cmp
fwait
mov
push
sub
xor
enter
mov
add
mov
mov
xchg
int
pop
mov
std
cs
xchg
jnp
les
in
jns
push
adcl
and
cmp
xchg
out
adc
push
jle
mov
cmp
cmpsb
mov
adc
xchg
or
jne
std
fmull
in
pop
mov
xchg
sbb
aaa
sub
scas
inc
pop
push
ficompl
lock
xor
push
sub
cs
mov
or
mov
sub
icebp
pushf
in
sub
or
imul
mov
jb
lret
adc
sub
arpl
xlat
pop
int3
push
in
shll
popf
and
sub
xlat
xor
pop
into
sbb
in
dec
push
push
daa
cmp
mov
sbb
cltd
sbb
ret
pop
into
jg
pop
out
jb
lcall
push
push
xor
xor
mov
fs
shr
xor
jp
test
pop
popa
pop
out
repnz
lahf
push
inc
jp
cmp
insl
push
mov
cmpsb
jecxz
or
or
adc
dec
sbb
pop
add
sub
negl
push
jl
mov
outsb
scas
fiaddl
outsb
pop
fildl
loopne
divl
mov
fsts
pushf
jp
jge
add
jl
dec
xchg
daa
sar
test
xor
movsb
jg
xlat
xor
mov
jnp
or
push
mov
push
push
leave
xchg
push
sbb
add
fstpt
inc
mov
jecxz
add
or
dec
roll
data16
xor
loop
or
pop
mov
add
sbbb
mov
cwtl
inc
push
mov
pushf
push
mov
mov
cltd
fisubrl
push
mov
and
inc
jle
das
test
ljmp
cmp
pop
movsl
lcall
js
jo
je
push
dec
mov
sbb
push
add
emms
aam
outsb
rcll
stos
jae
mov
push
shrl
xchg
jo
inc
data16
cmp
add
sub
dec
mov
inc
cli
inc
mov
mov
add
rol
adc
cli
imul
push
fisubrs
fcoml
sbbb
push
push
inc
add
adc
push
jne
xor
stos
pop
add
dec
stos
xchg
pop
gs
push
cmp
cmp
push
push
cltd
or
sbb
ret
jge
cmpb
sub
and
xchg
fcoml
cmp
cmpl
and
outsl
adc
arpl
test
or
pop
sti
xchg
xor
dec
repz
push
outsb
addr16
cmp
mov
sbb
mov
dec
out
inc
inc
push
cmp
lcall
fisttpl
jae
push
js
lock
jno
xlat
jno
addr16
call
and
mov
hlt
inc
fmulp
dec
sbb
std
popa
leave
aad
sub
aas
and
hlt
jo
cmc
push
imul
xor
mov
mov
or
popa
pop
mov
fdiv
ljmp
int3
inc
jbe
and
cmc
adc
fidivs
mov
mov
sbb
nop
sti
push
daa
add
push
and
ljmp
in
push
repnz
insb
pushf
cmp
inc
sub
push
pop
cld
mov
sti
data16
xlat
cltd
cmp
push
sbb
xchg
pusha
add
leave
adc
call
shlb
ret
fisubs
jno,pt
popf
or
inc
outsb
std
push
fstpt
dec
mov
cmp
mov
sbbl
loop
lret
loope
mov
xchg
mov
test
sub
mov
fidivl
cmc
hlt
mov
aam
jae
sbb
clc
popa
repz
or
fldl
or
mov
xor
jge
pop
push
add
sbb
fmuls
pusha
and
xor
das
daa
gs
and
sub
push
inc
shlb
adc
xchg
add
or
push
ret
cld
dec
mov
les
les
out
xlat
arpl
fimuls
inc
mov
sub
jl
int3
popa
pop
into
das
lahf
or
mov
jmp
loope
dec
aam
cmp
daa
into
movsb
gs
iret
mov
pop
shr
divb
xor
test
push
fsubs
ret
lds
xor
jno
adc
cwtl
adc
ss
sub
push
paddd
outsl
push
pop
pop
sti
push
sti
add
mov
inc
inc
mov
jecxz
push
mov
dec
and
aaa
fistpll
pop
ss
testl
jmp
adc
adc
push
mov
ret
into
pop
rolb
xor
popa
xor
mov
adc
jae
jbe
int
fisttpl
rol
aam
mov
add
adc
cmc
mov
or
sbb
dec
cwtl
gs
lcall
xchg
inc
push
lcall
enter
outsl
imul
sub
mull
mov
scas
jo
pop
jne
mov
jmp
mov
and
adc
dec
rorb
or
cmp
repz
sbb
sbb
push
mov
or
mov
icebp
inc
in
addr16
test
nop
adc
imul
cmpsl
push
sub
or
add
cmc
xchg
sti
and
jecxz
rcrb
mov
lret
out
movsl
sub
addr16
push
mov
and
cmc
inc
sbb
clc
xor
jno
es
test
cmp
jno
inc
xor
push
push
arpl
mov
add
adcb
leave
arpl
or
in
inc
in
in
stos
test
dec
in
in
dec
xchg
jno
pop
cmp
ds
mov
in
aad
or
dec
icebp
xor
lods
inc
outsl
bound
push
subl
mov
das
in
dec
dec
dec
in
mov
mov
sub
outsb
mov
cmp
rcrb
rorb
jecxz
sbb
inc
in
add
out
rol
in
push
inc
adc
jmp
lret
arpl
inc
jo
mov
cmp
leave
hlt
das
jle
inc
into
jecxz
push
sbb
ljmp
inc
out
aas
add
test
xchg
dec
cs
les
ja
push
cs
insl
pop
pop
inc
jo
push
mov
adc
mov
mov
xchg
insl
lahf
jns
sbb
pop
rol
dec
sbb
pop
or
push
mov
aad
pop
or
clc
aad
sub
cmpsl
mov
cmp
sub
pop
aad
icebp
lcall
daa
mov
cmovne
dec
dec
or
int3
mov
jno
ror
popa
pop
in
add
loop
es
dec
add
mov
cmpsl
ljmp
js
daa
xor
pop
dec
mov
repz
mov
rorl
sub
fdivs
cmc
pop
test
in
xchg
inc
aam
pop
enter
dec
loopne
dec
and
mov
les
xchg
imul
call
rcl
xchg
std
jmp
dec
test
xor
mov
jl
mov
or
jge
xchg
les
fistl
pop
inc
popa
mov
mov
out
cmp
and
scas
xchg
lea
xchg
cltd
sub
arpl
rclb
outsb
push
mov
pop
daa
mov
test
mov
into
jo
mov
jno
pop
aad
icebp
aad
and
cli
sti
imul
in
or
icebp
sarl
mov
loope
in
jno
out
leave
in
inc
mov
rorb
pop
into
mov
or
test
test
sbb
fldl
rol
imul
lcall
mov
in
iret
lret
inc
and
nop
mov
movl
in
clc
in
cmpsl
mov
js
inc
push
aad
aam
in
shrb
inc
cmp
sbb
dec
cmpsl
inc
lret
stos
inc
js
adc
pop
mov
loope
test
jo
ljmp
fisttpl
sbb
loop
cmp
xchg
inc
push
fsts
inc
or
jp
mov
push
inc
add
pop
add
stc
mov
jno
adc
call
aaa
sti
xchg
push
fmull
packuswb
xor
clc
jnp
xchg
pop
jo
std
stos
inc
into
test
adc
stos
and
cmc
imul
cli
mov
add
jg
jecxz
repz
out
jge
jne
cmc
push
inc
xchg
int3
cmp
push
into
xchg
mov
inc
movsb
nop
cmpsb
dec
inc
mov
enter
xor
ror
xor
mov
inc
or
pusha
arpl
adc
push
sub
aas
add
in
iret
pop
fmuls
xchg
call
aaa
mov
mov
cmp
outsb
sbb
adcl
or
mov
test
pop
rolb
add
jmp
scas
xchg
dec
inc
imul
pusha
mov
mov
cld
jno
xor
push
inc
in
imul
fisubs
cmp
es
jo
stos
pop
or
int3
loope
mov
leave
inc
inc
aaa
mov
mov
pusha
test
rcr
imul
xor
in
aas
adc
into
das
fdivl
stos
mov
scas
and
add
sub
sub
cmp
std
loop
push
dec
mov
sti
pop
fisttpll
ljmp
ret
cmp
add
mov
aad
ret
push
inc
cmpsb
push
inc
arpl
cmpsl
sub
xor
lods
push
ret
jo
cmc
movsl
push
xor
mov
sub
int3
aam
ret
clc
push
mov
nop
shlb
lds
leave
popf
xchg
into
mov
push
cmp
rol
xor
repnz
ror
pop
mov
shll
mov
xor
leave
pop
pop
sbb
lea
dec
in
loopne
divl
pop
in
iret
das
insl
std
cwtl
add
pop
push
roll
pop
stos
popa
and
mov
jne
sbb
imul
cld
cmpsl
call
xor
insl
in
push
push
sub
shrl
imul
xchg
dec
xchg
lret
mov
ja
pop
bound
imul
mov
adc
xor
aad
inc
in
fcomi
xor
push
mov
inc
mov
es
js
push
or
inc
inc
icebp
sarb
inc
cmpsl
dec
faddp
fdivs
mov
inc
pop
xchg
testl
rclb
loope
adc
mov
ds
sarl
xor
pusha
addl
rorb
jmp
sbb
fs
and
jo
xor
stos
lds
or
dec
dec
in
sub
push
dec
and
cmp
push
inc
sbb
jo
arpl
xchg
jl
bt
jmp
xor
sub
mov
in
add
popa
xorb
xchg
mov
popa
cmp
add
dec
scas
add
sbb
clc
jo
dec
pop
push
sub
pop
xor
fists
adc
dec
test
dec
nop
pop
sbb
test
outsb
pop
xchg
out
dec
push
mov
jnp
ds
shrb
and
dec
jp
clc
push
shlb
fmull
mov
aaa
push
sbb
inc
pop
sub
or
pop
rorb
push
mov
and
icebp
addr16
add
adc
add
jbe
push
push
xor
dec
out
outsl
mov
js
adc
jecxz
shlb
fsub
adc
push
push
mov
shrb
pop
dec
das
xor
je
fnstcw
or
and
in
addr16
out
imul
in
ret
setns
shrl
mov
sbb
bound
push
out
jno
jns
aas
pop
mov
fsin
arpl
adc
jb
out
std
sbb
scas
gs
mov
mov
mov
and
cmp
loope
js
lret
lahf
jns
dec
fisubl
addr16
pop
and
std
repz
aaa
cmp
push
into
xor
dec
add
sbbb
jno
sarb
mov
cld
push
inc
mov
sub
lret
out
sub
out
dec
mov
cs
leave
inc
push
in
aaa
out
push
lods
inc
jns
fadd
data16
jb
dec
scas
int3
xchg
das
adc
fsubl
xlat
les
popf
data16
sub
sub
mov
lea
movsl
dec
fbstp
mov
int
test
fiadds
fwait
repnz
inc
mov
sub
mov
adc
sub
adc
sbb
mov
push
repz
pop
and
sbb
pop
bound
sbb
dec
push
pop
push
pop
or
cmp
cmpsl
pusha
sti
cmc
inc
pop
sahf
xor
mov
sub
int3
fldl
das
pop
jb
mov
pop
and
pop
outsb
cwtl
sti
les
les
jg
dec
fldcw
shll
sbb
xor
aam
scas
push
xor
popf
inc
cmc
inc
mull
mov
sbb
xchg
jne
cmpsl
shll
xor
pusha
imul
sbb
imul
sbb
aas
mov
jno
push
push
or
rorb
mov
push
in
or
ds
in
add
stc
fdivl
sti
pop
cmp
loope
es
cmp
push
scas
inc
mov
test
loopne
or
jge
mov
adc
out
std
mov
cld
std
repz
dec
imul
adc
and
pop
icebp
or
jne,pt
test
pop
cmpsl
add
iret
test
xchg
lahf
scas
dec
nop
inc
push
xchg
nop
jne
pop
adc
das
dec
mov
pop
or
lds
jle
jbe
pop
jae
iret
push
xchg
sub
adc
gs
mov
mov
dec
add
dec
imul
lcall
mov
mov
push
or
ljmp
testl
push
ds
int
adc
pop
adc
rclb
push
stos
rcrl
pop
inc
and
xor
dec
imul
shrl
inc
repnz
cmc
stos
push
jl
jmp
rol
jp
cmp
ficoms
inc
push
mov
jbe
push
aam
fcoml
in
int
inc
adcb
ss
jno
xchg
pop
insl
in
scas
push
sbb
lods
jne
push
in
xchg
out
in
cmp
hlt
or
aad
sahf
xchg
scas
mov
aad
dec
adc
gs
icebp
and
xor
or
ja
xor
push
sub
push
and
and
stc
dec
jmp
or
cs
dec
pop
pop
std
ror
sarb
mov
faddl
jg
sbb
gs
inc
enter
loopne
outsb
push
push
sub
cmp
cmp
xchg
addr16
mov
and
xchg
ljmp
mov
add
dec
repz
aaa
push
sbb
adc
and
cmp
repz
push
add
aas
xchg
inc
cli
mov
aad
stos
xchg
mov
fimuls
push
cwtl
inc
je
inc
in
pop
mov
loop
fdivrl
in
sbb
rol
pop
dec
ss
pop
lea
xor
pop
inc
lahf
sti
jp
fimuls
jmp
mov
add
adc
mov
adc
push
scas
mov
xor
adc
or
pop
loop
aam
fldt
int3
xor
aas
stos
inc
mov
iret
xor
inc
jnp
mov
dec
scas
int
fldz
xor
mov
cmc
fldl
call
dec
adc
outsl
shrl
loop
in
sbbl
and
in
ret
adc
push
addr16
in
rclb
ljmp
push
dec
inc
rcll
adc
mov
push
jns
aaa
mov
cltd
jno
xchg
das
fstl
dec
adc
and
rcr
into
lea
xor
cwtl
sbb
mov
subl
fucom
cmc
sti
outsb
push
test
cmpb
xchg
pop
rorb
inc
aam
mov
add
push
push
push
mov
dec
stos
adc
outsb
mov
jne
xor
adc
sbb
insl
sub
dec
mov
mull
mov
sub
sbbl
nop
orb
cmp
aad
push
scas
shrl
test
dec
nop
in
fldenv
jae
test
inc
push
mov
mov
inc
adc
mov
jp
push
test
jge
fcmovnb
push
pop
data16
addr16
stc
xor
xchg
inc
lds
sahf
mov
pop
xchg
icebp
add
gs
inc
mov
cmpb
repz
les
push
adc
dec
cmpsl
fucomp
lahf
fcmovb
cltd
pop
lret
sbb
inc
in
sub
xchg
sbb
dec
mov
sub
pop
and
outsl
fsts
into
mov
push
xchg
xlat
pop
xchg
xchg
sub
pop
inc
inc
push
push
xchg
data16
sbb
sub
nopl
fidivrl
xor
push
xchg
lock
dec
sbb
fldt
js
xor
mov
or
fnstenv
lea
inc
jno
pop
adc
jl
adc
sahf
push
imulb
push
mov
xor
push
dec
popa
push
jecxz
dec
push
outsl
cmp
inc
mov
push
jbe
fildll
xchg
stos
mov
inc
jp
das
outsb
jo
adc
cmp
subl
pop
data16
jno
arpl
pop
stos
ja
fcoml
std
adc
popa
pop
mov
pop
push
outsl
push
clc
sub
or
or
lcall
jno
in
faddl
pop
aas
movsb
pop
int3
xor
mov
outsl
sbb
test
stos
sub
dec
andl
mov
mov
add
lret
sub
and
popa
in
sti
ds
icebp
pop
cmp
jecxz
xlat
push
or
lret
icebp
mov
adc
push
mov
jmp
lret
xor
repz
in
cmp
push
push
inc
mov
leave
push
outsb
dec
mov
xchg
adc
insl
scas
push
dec
adc
mov
movsb
adc
ret
mov
sti
mov
imul
fidivs
xlat
aam
xor
jle
inc
inc
xor
mov
jno
xchg
add
mov
pop
test
aaa
jne
das
xor
dec
stos
mov
iret
inc
outsb
mov
mov
add
xor
stc
test
les
adc
pop
icebp
shrl
popa
lret
mov
pop
mov
imul
fdivr
dec
and
sub
jne
inc
dec
cmpsl
pop
fisttps
pop
pop
in
jmp
cwtl
dec
or
and
les
add
out
sbb
arpl
outsb
popaw
mov
shrl
setne
insb
notl
or
adc
pop
push
daa
mov
scas
adc
and
jne
sbb
push
outsb
push
stos
arpl
sub
lods
popf
shlb
fdivs
push
sbb
imul
scas
lahf
jg
mov
js
pop
pop
loopne
jp
push
sub
lret
popf
test
loopne
jo
mov
jl
int3
or
add
test
push
sti
or
jmp
sar
adc
push
clc
fadd
pop
mov
sbb
xchg
stc
pop
inc
jle
xor
dec
push
dec
int
mov
in
pop
dec
cmpsb
ja
pop
ss
ja
in
or
add
orb
outsl
js
mov
add
pop
sbb
xor
test
mov
jno
jle
lahf
fmul
and
fwait
or
cld
push
mov
lock
sub
and
int3
or
out
push
mov
cmp
xor
addl
push
mov
out
push
xchg
pop
add
mov
pop
shll
adc
pusha
popa
out
jge
push
jmp
push
movsl
pop
fadds
jns
iret
scas
pop
adc
xor
lds
cmpsb
fcoms
in
push
mov
pop
les
sti
inc
pop
cwtl
jecxz
mov
cmp
jb
es
in
and
jno
mov
in
mov
in
int
dec
cld
push
sahf
iret
mov
insl
xor
mov
inc
adc
push
aad
pop
cmpsl
and
cmp
add
lcall
mov
in
lods
inc
xor
or
cmp
pop
push
xlat
push
jno
repz
jo
or
push
sbb
mov
rclb
push
jne
insl
scas
inc
pop
out
imul
outsb
rol
insl
pusha
fisubl
inc
out
pop
mov
fiadds
dec
pop
sub
push
push
and
cmp
mov
jmp
cmp
mov
pop
xchg
push
pusha
outsb
jp
pop
lea
and
icebp
aaa
les
fsub
jge
iret
ret
insl
xchg
push
daa
sbb
or
in
add
je
sbbl
dec
sub
cmpsl
inc
repz
adc
or
mov
or
movsl
movsl
add
cmpsl
and
jmp
sub
fs
das
or
xchg
icebp
push
push
imul
mov
daa
add
xor
push
inc
push
xor
psubd
mov
jnp
into
sbb
pop
cmc
stos
lds
mov
xor
popa
outsb
mov
mov
outsl
and
out
repnz
push
in
iret
or
add
push
mov
cmp
jns
add
addr16
test
sub
inc
dec
cmp
inc
sbb
stc
inc
out
pop
insb
jmp
rcll
and
push
cmpsl
adc
daa
pop
push
repz
repnz
xchg
loop
mov
or
sub
call
fs
out
mov
lret
fdivrs
sub
push
inc
dec
inc
cmp
loope
xor
and
aas
and
shlb
insb
cmp
mov
iret
ja
loop
inc
inc
fdivrl
fcoms
movb
adc
jecxz
push
mov
mov
push
das
sub
cmpsl
fiaddl
cli
or
jmp
rclb
sub
iret
aas
inc
sarl
xor
dec
test
xchg
popf
dec
imul
inc
inc
pusha
push
pop
cmp
popa
inc
inc
sahf
jge
dec
ret
bound
and
aas
ds
or
or
cmp
filds
loopne
pop
adc
add
dec
out
xor
xchg
es
inc
roll
pusha
xor
dec
fwait
xorl
push
jle
xchg
stos
cmpsb
out
subl
xor
aad
push
push
xor
sub
sbb
push
insb
mov
mov
repz
inc
arpl
lret
je
rolb
gs
iret
sti
push
popa
add
xor
push
loop
movsl
cli
sahf
inc
dec
jae
outsb
pop
in
out
xor
pop
jns
int3
xor
insl
loopne
cmpsl
and
es
xor
cmp
push
sbb
inc
jg
xchg
inc
push
icebp
fisttpll
xorl
stc
sbb
or
jb
in
fwait
xchg
das
push
pop
fistpl
int3
adc
pop
pop
cmp
lcall
out
jle
in
push
cmc
push
adc
in
fcomp
push
push
sbb
mov
in
pop
int3
dec
jp
popl
adc
pop
dec
mov
sub
cmpsb
aam
fwait
mov
push
adc
or
fwait
xchg
pop
jge
filds
dec
dec
push
imul
aas
out
mov
push
jmp
negb
push
sub
test
add
inc
call
sub
or
push
inc
mov
push
iret
lret
sti
sbb
lock
loopne
enter
enter
pop
ss
lds
sti
mov
mov
mov
push
or
add
mov
pushl
fcmovnbe
adc
imulb
popa
push
pop
sbb
push
cli
xchg
out
imul
dec
inc
popa
dec
inc
mov
adc
xchg
in
and
lret
out
xor
add
in
ret
in
or
mov
push
push
xlat
inc
in
pop
es
sub
jp
in
outsl
sub
ror
outsl
xor
shufps
loop
and
xchg
or
ret
adc
pop
cmp
pop
in
popa
les
scas
mov
dec
test
adc
jne,pn
jno
push
inc
jne
or
test
and
add
push
dec
xor
or
push
xor
ds
push
sti
push
add
push
push
cs
inc
jo
shl
add
out
rorl
ja
add
or
ja
cli
push
sub
or
mov
cmp
sub
aad
icebp
pop
xchg
cmp
shll
add
icebp
push
addb
pop
mov
pop
rcr
lret
xlat
aam
clc
mov
mov
cmp
jg
cmc
mov
pushf
adcb
sahf
jne
adc
imul
inc
int3
lret
push
push
mov
in
dec
pop
xlat
dec
imul
inc
aas
gs
int
jno
data16
sbb
pop
cs
adc
out
aad
and
cli
aam
xor
cmp
dec
dec
icebp
and
shlb
daa
jno
jbe
lcall
sub
xor
add
mov
sbb
push
inc
pop
inc
push
mov
test
push
push
pop
dec
aam
add
add
test
xor
pop
enter
push
sti
mov
cmpb
test
ret
pop
ds
push
call
push
jo
pop
mov
sti
xchg
repz
in
addl
int3
push
inc
and
insl
mov
push
xlat
int3
fwait
test
inc
add
loop
insb
sti
cli
mov
adc
es
in
lds
das
out
jno
push
out
inc
stos
lds
mov
pop
push
popa
xor
cld
push
out
inc
popf
xor
std
lcall
sub
scas
dec
inc
mov
and
or
push
negb
or
adc
in
rorl
inc
jp
and
sbb
shl
mov
cs
and
nop
aam
mov
sub
dec
push
addr16
push
xchg
cs
imul
dec
outsb
jmp
jne
sub
outsl
into
leave
sub
xorb
push
cmp
out
leave
in
push
loop
lahf
sbb
loopne
bswap
gs
push
xchg
int
jo
in
repz
ja
cld
xor
cli
mov
add
cmp
mov
and
cs
lock
dec
pop
push
dec
fs
jno
in
xlat
repz
pop
push
or
inc
dec
push
sahf
adc
jno
iret
outsl
push
sahf
mov
lcall
ljmp
pop
dec
pop
popf
fadd
jge
movb
inc
insl
popa
clc
jne
or
scas
xor
incb
fiaddl
call
mov
add
xor
sub
frstpm(287
jns
pop
or
mov
xchg
in
xchg
in
nop
iret
jle
lea
fcoml
nop
sub
mov
inc
mov
pop
xchg
lds
xor
ja
pop
fs
in
inc
rcll
sti
stos
cmpsl
fabs
out
inc
adc
dec
xchg
das
cmp
fadd
aad
rclb
das
outsl
popf
mov
pop
push
push
cmp
jo
inc
ss
pop
mov
pop
shll
ret
xor
push
push
and
push
jmp
mov
mov
pop
inc
or
mov
add
lret
jo
xor
cmpsb
and
jle
jb
cmc
test
mov
outsb
sbb
inc
cs
and
push
xchg
xor
inc
or
adc
xchg
ret
stos
jl
aam
jo
pop
jbe
mov
sub
adc
push
jo
sar
out
jnp
pop
sub
dec
rclb
adc
out
rdmsr
cs
fdivl
fwait
mov
in
sub
outsb
mov
ret
and
orl
sti
mov
mov
dec
mov
aas
cld
xchg
sbb
adc
in
push
cmpsl
loopne
fstps
fildl
int3
test
nop
xchg
sbb
sub
cmp
es
fldcw
call
pop
lds
push
xchg
mov
mov
inc
bound
mov
test
cwtl
push
xchg
shrb
xor
inc
std
outsb
jle
test
sbb
xchg
sbb
adc
cmp
or
push
cmp
mov
aas
push
xor
scas
xchg
mov
sbb
add
mov
fsubl
push
daa
pop
out
insb
jno
in
dec
movsb
add
push
lock
dec
rcll
cmp
inc
sbb
xchg
cmp
adc
das
xlat
cli
pop
push
or
ret
repnz
push
in
sub
aaa
fnstenv
xchg
push
fildl
fdivrs
sbb
in
bound
push
imul
in
movsl
mov
xor
imul
popa
add
add
xchg
pop
seto
inc
cmpsb
lahf
lea
or
adc
arpl
nop
test
aad
jmp
cld
cmp
or
das
xor
mov
sub
jmp
xor
jmp
shrl
mov
push
pop
sub
fdivr
push
mov
pop
out
push
sub
daa
aas
enter
outsl
mov
fucomip
pop
fisubl
iret
or
iret
xchg
jle
fadd
fadds
insl
sbb
mov
loop
stos
loop
cld
or
sub
in
cmp
popf
leave
and
adc
inc
fs
sarb
dec
sub
push
into
shll
dec
movsb
jg
fcoms
jle
push
push
rclb
xchg
push
pop
inc
sub
jg
xchg
cwtl
push
or
xchg
lret
movsb
pop
nop
scas
jnp
push
cs
jo
cld
stc
pushf
inc
dec
es
sub
or
outsb
dec
cmp
mov
dec
xchg
add
mov
jmp
cltd
push
cmp
mov
in
add
ret
das
lods
adc
into
mov
cs
orl
dec
pop
dec
push
dec
xor
xchg
and
notl
push
or
jb
adc
or
outsl
fbstp
fistpl
xor
fdivs
inc
push
dec
pop
cmpsl
add
and
cltd
cltd
mov
shrl
ljmp
push
xchg
js
ljmp
cmp
sbb
adc
pop
fadd
push
les
push
int3
cmp
jne
push
cmp
test
sub
movl
sahf
out
pop
les
cltd
push
adc
scas
fdivl
xor
orb
adc
je
sbb
adc
ret
std
fidivs
xor
mov
inc
es
icebp
xor
dec
dec
adc
in
jbe
mov
mov
sub
mov
stos
jae
sub
inc
jno
inc
insl
add
xchg
popa
jo
addr16
push
pop
jbe
cmp
roll
jo
and
sub
adc
sbb
or
nop
aad
pop
outsl
or
aam
push
push
inc
dec
fwait
push
push
add
loope
test
in
cmp
xchg
add
aaa
jne
pop
sbbl
jecxz
pop
or
add
mov
adc
test
addl
mov
and
pop
mov
subb
loopne
iret
outsb
jle
or
adc
mov
cmp
fldenv
sub
andl
sti
sbb
dec
out
pop
dec
push
dec
and
dec
fwait
xchg
mov
mov
sub
scas
cs
test
imulb
das
jno
ret
dec
dec
xor
ds
cmp
inc
mov
fidivs
xor
lea
repnz
cmp
fcoml
xor
add
add
ret
iret
pop
pop
and
addr16
xor
xchg
xor
cmc
dec
push
and
xor
jecxz
sub
add
and
mov
stc
adc
and
or
int3
push
push
push
mov
mov
ss
inc
dec
or
xlat
jno
sub
push
xor
inc
inc
xchg
sbb
adc
xor
inc
inc
imul
push
in
roll
xor
sti
rcll
into
ds
cmp
dec
in
and
arpl
push
add
icebp
add
ljmp
in
shl
xchg
iret
push
pop
sar
mov
dec
dec
dec
push
pusha
mov
and
lret
push
icebp
pop
dec
fxch
xchg
push
dec
aaa
inc
mov
aam
pop
jo
push
cmp
push
repz
imul
ret
add
rol
pop
push
icebp
in
fwait
jo
mov
imul
sub
bound
push
pop
jecxz
fwait
gs
sti
enter
mov
inc
dec
repz
orl
icebp
loope
sub
aas
into
addl
push
xor
cmc
fisttps
sti
adc
cmpsl
ja
sbb
roll
xchg
push
sub
cld
pop
push
cli
daa
repnz
mov
in
push
cmpsl
and
dec
inc
out
inc
add
or
cmp
and
push
enter
lahf
sub
ljmp
or
pop
adc
out
dec
cmp
xor
int3
dec
mov
outsl
lds
jp
xchg
pop
mov
lds
xor
pop
loopne
xchg
stos
addr16
aam
adc
push
add
stc
addr16
jo
adcb
inc
scas
mov
pop
pop
sbb
dec
call
push
data16
xchg
xor
jns
pop
pop
or
jo
daa
mov
push
pop
cmp
out
push
xor
pop
cmp
xchg
inc
dec
in
loope
push
stc
and
push
jno
push
adc
pop
xor
or
sahf
dec
in
cmp
add
mov
rcrb
adc
mov
fsub
jae
push
test
pop
cli
jnp
out
cld
daa
in
je
pop
lret
adc
enter
pop
dec
pop
in
mov
nop
pushf
add
roll
dec
xchg
xor
cs
mov
mov
add
adc
rcll
pusha
pop
aaa
rolb
sarb
jmp
insl
pop
push
cmp
ljmp
fs
push
cmp
addl
test
mov
ficompl
xchg
inc
or
popf
pop
mov
dec
push
lahf
adc
repnz
dec
movsb
in
and
in
add
test
sub
jne
pop
push
jle
and
fdivrl
xchg
sbb
addr16
int
dec
cmp
enter
outsb
lcall
dec
mov
int3
in
pop
inc
fmul
mov
pusha
mov
fnstenv
sub
xchg
gs
cmovns
inc
cmp
push
out
push
cmc
xor
jnp
and
or
jo
ljmp
add
outsb
push
and
cmc
and
pop
fwait
jo
movsl
pop
mov
sub
jae
les
inc
dec
scas
aaa
adc
sti
stos
mov
popa
or
lret
xor
out
aas
inc
sub
pop
leave
mov
repz
mov
jp
roll
jno
inc
mov
sti
cmpsb
mov
sbb
push
inc
add
and
push
dec
into
xchg
push
xor
out
repz
aas
push
sbb
mov
push
mov
lret
push
cmpsl
or
sub
or
jmp
out
or
pop
cwtl
or
mov
mov
push
mov
outsb
push
xor
lods
jge
inc
xchg
mov
lahf
mov
pop
scas
push
pop
das
and
push
sbb
fldenv
xchg
sub
jns
jno
push
push
inc
inc
inc
cmp
clc
mov
inc
fwait
xor
xchg
cld
insl
mov
mov
data16
aaa
xor
dec
imul
pop
adc
push
iret
cli
or
or
das
pop
sbb
push
fisttpll
mov
addr16
iret
pusha
test
insl
xchg
and
add
push
ret
dec
mov
leave
inc
cli
mov
jl
push
lock
push
enter
outsb
aam
into
jns
or
push
sti
cmp
dec
mov
loop
xor
sbb
jbe
adc
insl
cmp
add
lcall
xor
cli
iret
ljmp
aam
je
in
mov
inc
sti
xor
mov
and
popf
adc
nop
pop
push
sub
xchg
les
mov
or
push
mov
mov
jle
outsb
jb
cmpsl
fmuls
daa
adc
gs
popa
mov
xor
pop
xchg
or
les
jno
pusha
dec
nop
dec
pop
shlb
outsl
sti
inc
cmp
pop
stos
push
cmp
fsubrl
std
mov
pop
xorb
add
mov
jg
jge
lods
ret
mov
adc
push
xchg
lds
loopne
lock
pop
vpackuswb
mov
ret
push
sub
and
push
int3
add
into
and
jb
sub
or
out
dec
push
push
lods
mov
jl
pop
push
sbb
and
pusha
into
dec
pop
call
hlt
and
sahf
nop
inc
loop
xorl
mov
mov
mov
pop
jmp
and
fisttps
dec
dec
fnstsw
add
inc
and
repnz
xor
nop
push
xchg
pop
dec
pop
xor
inc
setp
dec
lahf
ss
hlt
in
rorl
sub
pop
push
insl
loopne
jne,pn
pop
push
sbb
xchg
rolb
sbb
sbb
fxch
fldt
into
decl
mov
add
stos
adcb
jno
jno
push
iret
popa
mov
test
insb
ljmp
push
outsl
nop
add
daa
mov
xchg
cmp
xchg
in
and
fcom
add
fidivl
add
hlt
or
pop
sbb
cli
inc
lcall
sbb
and
and
push
call
loop
cli
xor
add
aam
fadds
mov
and
push
out
jbe
mov
jnp
push
mov
inc
fsubl
dec
dec
mov
into
jnp
jp
xor
outsb
push
test
jno
xchg
sbb
jmp
cmpsb
or
xor
dec
outsb
push
shr
cli
in
stc
inc
cmpsb
lahf
bnd
xchg
cmpsb
sub
fistps
sbb
push
pop
sbb
data16
testl
ss
inc
dec
push
aaa
sbb
out
pop
dec
ret
sarl
aaa
frstor
dec
mov
imul
push
pop
push
leave
imul
int3
push
inc
dec
push
mov
add
xchg
jp
cli
pop
ficomps
or
push
shrl
jmp
loopne
xchg
xor
push
xchg
fisubrl
jp
sub
cwtl
inc
add
aas
aas
adc
loope
xlat
int3
pop
sbb
sahf
ret
pusha
cwtl
cmp
xchg
in
sub
dec
fdivl
aad
mov
xor
sbb
lcall
adc
sbb
xchg
dec
jle
push
mov
push
or
add
cltd
push
and
loop
dec
inc
or
dec
inc
jecxz
movsb
xchg
xor
push
movzbl
notl
jecxz
xchg
dec
or
stos
jne
adc
icebp
push
pop
sub
cmp
pop
sbb
xchg
call
enter
cmc
add
xchg
rcpps
add
xor
mov
int
jp
sbb
dec
jecxz
rorb
shl
dec
or
jg
adc
loop
sub
stc
jecxz
arpl
dec
fcomps
push
int3
cmp
das
jns
out
push
cmc
sar
pop
pop
dec
pop
dec
inc
fwait
cli
leave
popa
test
shl
mov
in
sbb
jmp
enter
clc
cli
bound
jp
in
ds
mov
push
sbb
and
pop
sbb
sbb
int
aas
ss
out
dec
pushf
mov
and
out
sbb
into
cwtl
or
mov
leave
bound
int3
sbb
cwtl
popa
xor
sub
hlt
push
push
push
mov
xor
testb
mov
into
push
pop
inc
xchg
cmp
rorb
push
fs
jmp
push
and
ja
arpl
pusha
sbbl
and
sbb
frstor
pop
or
jg
push
xor
das
mov
xor
lahf
fld1
inc
push
lods
test
cmp
xchg
mov
add
int3
adc
shr
jmp
or
fs
shrl
pop
push
fmul
inc
add
sbb
dec
out
lds
adc
pop
sbb
xor
cmp
testl
idivl
lods
outsb
mov
sbb
jo
mov
sti
sub
xchg
push
inc
arpl
nop
lret
pop
push
xchg
push
repz
fwait
xchg
test
js
stc
stc
fmull
cmp
add
jns
fisubrl
pop
push
ja
pop
cmp
rorb
ret
pop
cli
pop
push
inc
out
movsb
push
pushf
push
push
outsb
gs
rep
aas
jge
add
and
mov
inc
add
addr16
outsb
movsb
pop
inc
and
rclb
push
sub
xor
ret
mov
inc
adc
cmpsb
pop
push
mov
shll
jp
popf
fsub
xchg
jo
fisubs
or
and
and
cmp
mov
lds
pop
jecxz
jl
pop
out
mov
mov
pop
cmpsl
sub
mov
pop
loope
inc
loop
lret
dec
dec
push
jno
leave
dec
maxps
ss
pusha
hlt
xchg
pop
sub
xchg
and
dec
cs
nop
repz
cmp
lods
inc
jg
lods
clc
xchg
popa
dec
jno
push
out
adc
repz
push
lock
mov
das
pop
fxtract
dec
jns
dec
xchg
rcll
movsl
mov
aas
pop
cli
bound
pop
rcl
fwait
xor
and
outsb
jle
fmull
dec
data16
inc
push
xchg
leave
cmpsb
popa
jecxz
ret
jg
xlat
pop
sbb
push
test
cwtl
in
sub
cwtl
mov
and
in
xor
jmp
sbbl
les
in
ret
test
and
outsb
jge
loop
sahf
mov
enter
cmc
and
loop
out
js
ret
dec
push
ret
lods
pushl
fnstcw
shll
leave
pop
outsb
cltd
scas
mov
jle
push
push
xchg
add
mov
mov
mov
fdivrl
sbb
dec
sub
push
ret
cmp
mov
addb
int
mov
dec
jns
dec
mov
bound
int3
jmp
xor
push
pop
jp
dec
iret
push
pop
push
std
in
insb
test
inc
push
pop
cmp
ret
or
mov
add
pop
mov
std
jge
enter
loope
pcmpeqd
and
lea
pop
test
fcomps
push
mov
push
rcrb
add
filds
xor
xlat
data16
cmp
or
ficompl
aaa
adc
jns
outsb
je
ds
dec
outsb
int
aaa
out
int3
inc
outsb
shlb
xor
shll
mov
sbb
icebp
nop
and
lods
in
add
xor
ss
ds
lret
decb
push
in
test
cmp
pop
pop
xor
fildl
mov
adc
adc
ja
jae
loop
mov
fwait
sti
std
ret
cmc
adc
cmc
in
daa
jmp
or
test
in
outsb
xchg
bound
add
cmp
xlat
es
or
subl
xor
into
jo
xchg
lret
inc
push
sub
mov
push
sub
adc
sarb
in
fsubs
adc
xchg
js
xchg
dec
pop
sbb
pop
cmp
xchg
inc
fsubrs
sub
fsubr
shlb
lea
xor
sub
push
into
inc
cmp
lock
or
stos
rcrb
push
add
in
out
pop
lods
cmp
jbe
sbb
in
mov
leave
jle
shlb
sbb
push
out
lret
pop
cmp
stc
sub
xchg
or
ficompl
push
pushw
cmp
out
shll
inc
sahf
rorb
cmc
inc
cs
cmc
inc
cmp
rcll
inc
cmp
enter
add
dec
jno
ljmp
shlb
push
out
cmpsl
ljmp
adcb
lods
hlt
push
clc
push
iret
cltd
aad
inc
inc
push
leave
xor
mov
xor
jmp
aam
or
aas
adc
sbb
mov
xor
xchg
ljmp
pop
in
cli
xlat
and
push
mov
and
stc
jo
or
popf
xchg
cmp
push
sbb
add
xor
pushf
lahf
idivl
adc
rcll
sbb
ljmp
icebp
cmc
out
in
rolb
jnp
mov
lea
dec
in
fiadds
adc
cmp
pop
adc
ret
xchg
add
out
mov
dec
xchg
sub
push
inc
mov
xchg
stc
pusha
in
and
leave
imul
inc
or
fisttpl
sub
in
pop
sbb
inc
xor
push
jle
xor
push
mov
xor
mov
int3
insl
js
scas
fmuls
int
push
sbb
cmp
in
inc
fisubrs
mov
pop
xchg
or
add
adc
std
mov
xor
mov
jns
xchg
jae
das
sbb
sti
shll
shll
jne
lea
pop
sub
out
fst
mov
sub
push
fsubs
repz
in
push
xchg
loop
ja
enter
inc
je
adc
loopne
add
loop
jne
lret
cwtl
jae
pop
xchg
into
jmp
jne
or
xor
add
sub
xor
xor
cvtps2pd
cmp
fidivrl
sti
sub
push
popa
mov
adc
repnz
in
or
add
sbb
jbe
sbb
jp
inc
in
inc
cmp
jp
sbb
push
push
pop
fiaddl
std
mov
enter
add
outsb
jo
push
adc
roll
pop
icebp
and
fildl
lds
jae
jno
xchg
jle
stos
in
and
sub
js
out
rcll
push
add
push
or
imul
jb
out
loopne
loopne
into
xchg
ficoms
movsbl
pop
out
sbb
pushf
stos
shlb
mov
out
dec
add
out
push
icebp
mov
push
in
dec
lods
push
and
stos
or
push
xor
aam
fcomps
dec
out
imul
sub
fstl
test
loop
in
icebp
cltd
dec
sbb
test
xchg
jge
xor
sti
cli
lcall
mov
inc
sti
fs
popf
jo
or
fsubrs
test
ret
pop
loop
lods
dec
cmp
adc
add
pop
push
pop
ret
cmpsb
xor
jno
mov
xor
adc
adc
rcl
sbb
mov
push
cmp
aaa
pushf
push
mov
dec
push
mov
lods
push
mov
loop
out
cmp
or
adc
mov
pop
jbe
jg
jl
rol
aaa
fwait
pop
cld
jae
jle
pop
outsb
dec
sub
hlt
sub
jno
mov
scas
insl
lret
push
sti
dec
ja
jecxz
dec
push
cmp
xor
inc
push
mov
jecxz
push
ds
push
inc
sti
dec
dec
aad
aam
or
push
dec
stos
cmp
outsl
repnz
loope
pop
inc
lahf
cmp
incb
mov
push
cs
jb
xchg
lock
daa
adc
cs
in
clc
test
or
in
mov
lods
repz
ljmp
imul
xchg
lods
filds
ja
sub
std
and
lahf
out
add
mov
or
dec
insl
sub
sub
jle
pop
subl
repz
adc
sub
push
adc
mov
aam
loope
lret
dec
addr16
dec
jne
popa
and
mov
int3
adc
shrb
iret
lea
push
pop
popf
lods
mov
ret
rclb
jle
adc
test
decl
or
imul
gs
sub
test
out
ret
pusha
enter
outsb
jnp
stos
sub
leave
xlat
jl
nop
mov
shl
xor
icebp
sbbw
rol
add
push
jo
loop
xchg
adc
pop
loope
sub
scas
lods
push
xchg
cmp
mov
fisubl
mov
xor
xchg
push
mov
out
pushl
push
push
or
pop
sub
cmp
dec
xor
fisubrl
loopne
mov
push
and
shlb
sti
pop
ret
add
pop
sahf
and
outsl
add
add
leave
shrl
cwtl
leave
push
cmp
int3
fsubr
push
imul
push
rorb
jmp
xchg
es
xor
bound
sbb
dec
sbb
dec
xchg
arpl
sub
cmp
test
test
pop
inc
insb
inc
arpl
xchg
fisubrl
dec
and
fnstcw
rcll
mov
dec
xor
cmp
push
jp
cmp
dec
mov
into
ja
and
jno
sbb
dec
adc
adc
cmp
mov
adc
xor
jg
leave
dec
cmp
sbb
cmp
adc
ficoms
shrl
xor
jp
mov
ret
add
mov
inc
or
xor
mov
mov
filds
xchg
jbe
pop
ja
jns
inc
dec
ret
adc
fcmovne
push
cmpsl
rcll
cmp
and
sbb
pushf
xor
daa
icebp
jl
adc
stos
jl
cmp
inc
lahf
stc
xchg
dec
push
imul
xchg
xchg
push
gs
clc
addr16
sub
int3
cvtdq2ps
stc
dec
aad
jge
out
inc
dec
mov
sbb
sti
xlat
les
aad
xchg
mull
jae
mov
nopl
arpl
inc
pop
pop
add
jnp
call
dec
pop
mov
loopne
pop
mov
lods
sti
mov
lods
push
rcll
insl
sti
pop
jecxz
inc
or
outsl
xor
popl
xorb
push
data16
in
sub
shlb
mull
inc
fnstsw
xor
pop
or
insb
push
adc
lret
cld
or
cs
adc
mov
and
icebp
aad
insl
xchg
add
rorb
scas
xor
test
inc
gs
push
outsb
inc
mov
bound
lret
fs
add
push
fcom
jle
fcomps
inc
cmpsl
sub
cmp
lret
xchg
adc
push
or
repz
jno
jb
xor
mov
popf
scas
xchg
xorl
imul
and
outsb
pushf
pop
es
xor
cmc
scas
leave
push
xchg
mov
mov
daa
outsl
incb
xchg
mov
jno
or
dec
or
pop
adc
jecxz
adc
mov
out
or
fldl
mov
ds
mov
or
cwtl
dec
push
mov
xchg
fmull
sar
mov
inc
push
sti
inc
ja
push
dec
imul
scas
mov
rcl
adc
in
push
pop
mov
mov
pop
imul
mov
inc
cli
jo
lahf
mov
adc
arpl
cmovns
and
push
sbb
daa
cmpl
push
sar
lahf
xchg
dec
rcll
pop
call
push
addr16
in
sarb
inc
dec
or
sub
push
jb
outsb
lea
ds
adc
push
push
outsb
mov
and
das
mov
adc
add
adc
scas
xchg
rolb
testb
repz
dec
xor
das
enter
in
or
xor
inc
jnp
push
nop
adc
daa
shlb
popf
out
sub
cli
test
push
in
jmp
in
in
pop
jp
or
cmp
push
aas
xchg
out
repz
mov
test
sarb
data16
jg
int
cmp
popf
mov
push
stos
shlb
inc
pushl
insl
mov
pop
bound
dec
call
dec
fimuls
mov
icebp
insb
or
in
loope
cmp
pop
xchg
jns
and
std
xor
icebp
mov
xchg
cltd
sarb
lds
adc
mov
arpl
cltd
add
imul
cmp
xor
cli
xor
or
mov
push
scas
adc
es
rclb
nop
push
mov
in
fstpt
push
fsubl
cmp
inc
dec
out
loope
cmc
or
sbb
sub
dec
and
sarb
mov
mov
pop
push
stos
addl
in
test
pop
in
imul
mov
scas
inc
add
fnsave
lock
jmp
push
or
pop
imul
push
dec
pop
mov
and
aam
cs
jns
xlat
lods
mov
dec
rcrb
cmp
ret
or
jno
ljmp
dec
or
push
rcrb
out
fadds
sbb
pop
add
pusha
hlt
aaa
and
fdivrl
xor
xchg
push
adc
sub
push
jns
lret
scas
in
sti
and
xchg
mov
jne
jle
icebp
das
mov
pop
adc
xchg
in
mov
inc
inc
cli
push
cld
jg
insl
jnp
cmp
rclb
add
leave
push
rcrl
xchg
or
test
inc
push
pusha
adc
imul
pop
dec
mov
inc
cmp
rcrb
mov
or
pop
loop
push
pop
xchg
xchg
shlb
in
lea
das
dec
adc
fldl
dec
jbe
ljmp
into
jge
xor
aam
xchg
es
push
xchg
pop
arpl
push
scas
mov
push
push
ljmp
jg
in
sub
cmp
ffree
push
ja
dec
cmpsl
fwait
shll
add
adc
adc
outsl
add
dec
daa
add
nop
mov
add
push
jg
jbe
fstps
in
outsl
test
mov
push
xchg
xor
icebp
xchg
in
jmp
daa
push
push
inc
in
dec
pop
popa
sub
dec
dec
stos
or
inc
mov
or
push
jl
jbe
test
and
adc
fsubrs
dec
inc
pop
xor
mov
xchg
sti
icebp
nop
hlt
sahf
pop
frstor
addl
lock
push
push
repnz
lcall
xor
jno
int3
adc
insl
dec
or
add
loope
lcall
js
mov
inc
loope
ret
lods
add
or
xchg
fistpl
outsb
movb
add
sub
xchg
lret
sub
adc
repnz
push
rclb
fstpl
jcxz
lock
fwait
mov
pop
cmp
enter
push
idiv
jnp
outsb
les
iret
jecxz
dec
mov
faddl
mov
mov
jp
dec
sub
inc
stos
cmpsl
sbb
add
xchg
inc
ficoml
aam
ds
sbb
and
jmp
adc
xchg
ret
pushf
mov
enter
xchg
dec
inc
push
imul
std
dec
mov
push
pop
dec
lret
ds
or
jno
sub
outsl
cmp
sar
pop
cli
popa
icebp
or
mov
pop
or
pop
sub
push
gs
pusha
sbbb
inc
sub
xor
dec
jns
ret
xor
iret
popf
dec
add
lea
jge
mov
movsb
pop
xlat
iret
out
push
xor
test
popf
push
dec
pop
sti
push
jmp
lea
pushf
mov
pusha
xor
loop
fwait
aaa
fisubs
mov
xchg
gs
dec
add
dec
fildl
jge
outsb
mov
dec
push
out
jmp
mov
sbbl
outsb
sub
fcmovnu
mov
arpl
lret
or
test
dec
adc
inc
cmpsl
push
adc
aam
inc
push
mov
or
movsl
xchg
addr16
add
push
inc
test
sub
arpl
mov
sub
lret
das
ret
mov
inc
jo
jge
and
mov
cmp
and
add
sub
jb
mull
cltd
jmp
add
push
stc
dec
mov
xor
fbstp
addb
sbb
cld
popa
mov
push
rcrl
jno
inc
pop
test
in
aaa
push
out
ret
sbb
cld
jo
scas
mov
pop
dec
mov
rorl
incb
aaa
mov
loop
push
sub
jmp
lds
insb
mov
cwtl
icebp
sub
ss
xor
jg
pop
sub
adc
mov
aas
sar
push
pop
lds
loope
or
pop
jae
mov
inc
rcrl
and
xor
inc
or
cmpsl
xlat
lds
aam
ret
xchg
ss
insb
adc
cmp
cmp
xchg
fdivr
pusha
jl
in
push
adcb
repnz
jo
dec
icebp
and
mov
popa
push
pop
inc
xchg
stos
icebp
jl
testl
jp
add
shll
push
jg
mov
sub
inc
pop
sub
loope
imul
sahf
adc
dec
setle
lds
jbe
mov
fwait
pop
icebp
jns
dec
cmp
bound
rcr
sub
push
pop
daa
sbb
bound
xor
push
int
xor
fiaddl
idivl
mov
fimull
add
insb
adc
inc
sub
mov
addr16
idivl
inc
out
jno
mov
aam
and
jg
pop
out
mov
push
pop
jno
out
adc
mov
jmp
cmp
sub
pop
pop
int3
pop
dec
out
xchg
lods
push
pushf
add
adc
or
adc
inc
and
push
shl
adc
std
or
mov
movsl
mov
add
adc
dec
insl
and
fwait
xor
or
scas
jecxz
outsl
push
mov
pcmpgtw
sti
fwait
enter
int3
testl
push
fsubr
jno
adc
mov
push
xchg
std
rol
test
fldl
xor
jl
test
aaa
imull
outsb
mov
dec
sub
daa
aas
aam
dec
test
pop
xchg
push
inc
jge
ror
aas
mov
sbb
adcl
push
sub
xchg
adc
inc
lods
xor
faddl
add
fsubrs
das
inc
pop
scas
mov
push
mov
mov
jl
test
fs
xchg
fnstcw
mov
xor
out
or
jae
mov
inc
lock
pop
or
ret
dec
pop
subb
jno
adc
sbb
sbb
dec
loopne
inc
or
or
mov
jecxz
es
in
inc
dec
inc
cld
dec
ds
cmp
outsb
js
jno
pop
dec
rcl
jg
fildl
push
jno
data16
mov
outsb
sbb
in
sbb
out
fsts
cmp
outsb
shl
repz
std
js
sbb
dec
pop
nop
shl
cmpsl
ss
dec
inc
jecxz
ja
in
fisttps
inc
inc
fcomi
hlt
inc
fidivl
ret
mov
iret
dec
push
add
or
orb
into
addr16
lret
scas
push
cmp
pop
dec
leave
pop
jo
lds
xchg
adc
mov
test
push
stos
dec
cmpsb
int3
loope
sub
xchg
cmp
jle
mov
push
movsb
mov
mov
fstpt
icebp
fstl
push
xor
aam
adc
jle
add
cli
hlt
movsb
add
mov
xchg
jmp
mov
pop
pushf
jnp
test
popl
dec
inc
out
mov
dec
sub
movsl
into
sub
adc
pop
and
mov
sbb
and
inc
cmpsl
rcr
nop
stc
sub
int3
pop
packssdw
sbb
rcrl
add
or
jge
jns
jno
sbb
popa
xor
dec
push
rclb
jne
cmc
das
add
inc
xchg
jge
cli
popa
sahf
daa
xchg
aad
dec
rcrb
dec
cltd
fnstcw
out
loop
inc
sahf
fcomps
or
sbb
imul
jle
mov
out
add
testl
mov
fxch
test
mov
std
dec
push
xor
clc
sub
sbb
sbb
out
ret
test
fs
daa
jl
iret
mov
sbb
enter
sub
adc
pop
iret
test
mov
cmp
push
test
push
mov
loopne
outsb
lea
inc
fcoml
ljmp
insl
push
mov
dec
int
jg
or
inc
dec
movsl
inc
jp
sbb
bound
xlat
adcb
xchg
adc
push
push
outsl
cmpsl
or
inc
push
jle
pop
les
divb
xchg
aaa
and
inc
icebp
out
add
out
pop
or
les
inc
ret
cmp
icebp
icebp
test
popa
dec
sub
add
inc
or
fildll
bound
int
and
scas
xor
out
in
iret
push
fidivl
dec
xchg
jp
push
test
adc
adc
xchg
mov
fildll
pop
icebp
mov
push
pop
out
insl
pop
iret
jl
xor
cmp
mov
mov
inc
mov
inc
dec
icebp
xchg
pop
popl
subl
or
add
into
sti
test
es
ja
add
int
push
scas
pop
lock
imul
imul
imul
jge
cmc
pop
iret
jno
insl
xor
lds
cltd
pop
and
std
xor
dec
sub
enter
mov
sbb
cwtl
jle
out
mov
cmp
pop
mov
loope
ljmp
fisttps
dec
mov
lods
and
int3
daa
pop
mov
cmp
les
sub
jecxz
iret
add
rcrb
push
iret
lock
fwait
decl
mov
sti
cltd
mov
nop
loop
push
fildl
inc
jno
nop
mov
xchg
and
stos
mov
cmp
xor
jl
insb
bound
mov
leave
inc
test
sbb
push
popa
or
or
aam
xor
lahf
pushf
vmread
imul
scas
cmpsb
and
inc
cld
scas
cmpsl
stc
mov
mov
and
mov
das
sahf
cmc
push
scas
jno
xchg
sti
mov
scas
cmp
dec
fiadds
pop
ds
imul
loop
push
das
pop
daa
aad
jp
adc
mov
imul
xchg
sub
or
mov
or
dec
jno
sbb
inc
fisttps
mov
cmp
ss
icebp
mov
out
add
push
and
or
push
iret
xor
popa
cs
adc
sbb
and
fiaddl
and
jnp
rcrb
pop
cltd
insl
or
jo
aad
add
leave
push
aaa
jne
dec
jns
sbb
cmp
cmp
sbb
xor
mov
push
or
divb
jnp
push
dec
shrl
jbe
imul
frstor
mov
push
fidivrl
ror
pop
xor
push
lea
into
mov
jecxz
adc
dec
adc
xor
jbe
or
sub
jp
xor
sub
arpl
out
aaa
psubb
and
xchg
push
cwtl
jo
xor
push
and
push
sub
sub
loopne
xor
add
or
pop
add
hlt
inc
xchg
jb
repz
xchg
sahf
int3
inc
push
lahf
cltd
inc
jns
adc
inc
lds
dec
clc
dec
popf
push
xchg
pop
adc
sub
adc
xchg
jae
lahf
rcl
clc
mov
fisubrl
inc
movsl
sub
xchg
jno
popa
pop
mov
insl
adc
shll
xor
out
xor
loop
push
xchg
outsl
cmpsl
nop
dec
jns
dec
dec
fstpt
imul
test
repnz
outsb
test
jbe
enter
sbb
sbb
dec
in
xor
xor
adcl
cmp
dec
and
xchg
push
jno
xor
in
imull
les
cmp
adc
dec
cmc
icebp
jg
sub
push
pop
mov
repnz
icebp
test
cmp
push
xor
adc
fadd
scas
mov
cmpsb
into
cmp
jl
xchg
aam
xchg
xor
fcoml
leave
or
scas
jbe
or
or
sub
cmc
cmp
pop
xlat
mov
xchg
idivb
daa
dec
mov
or
mov
xor
adc
dec
inc
rclb
outsb
inc
int3
mov
cmp
das
repz
jbe
xlat
xor
mov
xchg
idiv
inc
adc
cs
dec
mov
fldenv
cwtl
push
jno
push
gs
enter
fsubrl
int3
stc
dec
shll
pop
scas
adc
jo
xchg
push
sub
in
or
outsl
and
hlt
and
dec
xor
cmc
loop
dec
dec
rcll
pop
or
jno
mov
loop
or
jnp
in
xor
cmpsb
movsb
test
pop
push
in
fs
fdecstp
cmp
paddb
inc
inc
cld
mov
scas
add
imul
add
inc
cmp
add
push
out
sbb
xchg
mov
and
cmp
sarl
and
jno
aam
add
mov
dec
loop
and
jmp
adc
or
sub
leave
push
push
mov
mov
adc
pop
mov
popa
fldcw
fcoml
sub
pop
mov
lcall
dec
push
fnstenv
in
ja
or
fs
mov
or
fdiv
pushf
adc
repnz
dec
dec
iret
aas
add
int
push
and
fmul
fldt
into
dec
hlt
lods
cmp
mov
call
push
xor
fnstcw
bound
add
mov
mov
out
mov
inc
repz
fstl
pop
testl
pop
cld
inc
mov
or
mov
lds
jg
sbb
aam
roll
pop
adc
fcomp
mov
cs
pop
rolb
inc
cwtl
dec
setg
sub
outsb
mov
loopne
xor
jb
sahf
mov
imul
mov
bound
pop
cld
xchg
in
popf
xchg
fwait
aad
nop
cmp
xor
push
push
fs
cwtl
aam
cltd
ja
inc
or
outsl
mov
popa
movsb
jge
inc
push
fwait
ret
lret
and
mov
mov
test
loope
inc
mov
hlt
mov
mov
inc
add
leave
inc
add
mov
fildll
or
rol
xor
leave
push
movsl
inc
push
or
jnp
test
xchg
sub
imull
cmp
mov
in
sbb
push
cmp
stos
add
fldenv
insl
cs
xchg
cmp
fstpl
std
stos
cs
xchg
xchg
pop
push
cli
bound
fcmovb
sti
or
sub
mov
loopne
pop
push
sahf
insl
add
mov
push
pop
dec
lret
pop
pop
mov
mov
dec
cmpsb
cmp
pop
jge
clc
into
sarl
mov
push
ret
cli
lds
xchg
mov
push
jo
sub
or
cli
cmp
mov
xor
push
add
jl
aad
int
jmp
insl
push
xor
jnp
mov
cmc
mov
test
int
pushf
xlat
jg
stos
pop
scas
cmc
hlt
stos
sub
jp
push
sbb
xchg
test
xor
xor
lea
enter
js
adc
sahf
int
cwtl
mov
mov
popa
adc
dec
or
mov
cmpsl
inc
fnsave
int3
adc
fcompp
mov
xor
push
jp
jae
test
dec
or
mov
mov
jmp
mov
pushf
adc
les
pop
mov
jno
icebp
popa
outsl
shl
lea
in
sti
sub
in
mov
test
push
es
sub
inc
shlb
dec
push
rol
push
or
hlt
in
ret
jecxz
mov
outsl
push
mov
cmp
pop
rclb
mov
daa
mov
shlb
enter
int
cld
jno
test
jae
xchg
fdivrs
repnz
jns
xor
jo
mov
push
popf
sub
pop
mov
cmp
mov
pop
adc
jp
cmp
rolb
lock
jge
adc
push
push
and
aaa
jno
sbb
inc
dec
jns
test
je
adc
mov
test
loop
fisubrl
mov
icebp
gs
inc
inc
mov
dec
jnp
cld
into
xchg
add
out
or
cmp
shll
xor
adc
dec
rclb
push
xchg
je
xchg
cmpsb
fwait
out
xlat
jno
inc
faddl
in
imul
jno
dec
mov
wbinvd
xor
mov
push
xchg
mov
jno
es
cmp
mov
adc
sub
dec
leave
or
xor
ret
mov
inc
pop
sahf
les
aad
push
jge
or
dec
sub
or
lods
push
imul
es
ss
dec
dec
sub
scas
int3
fldenv
jae
inc
pop
inc
imul
xchg
subb
in
sub
pop
inc
mov
mov
jne
sbb
add
adc
shrb
repz
jecxz
push
into
push
mov
lcall
push
push
inc
mov
call
les
inc
stc
sahf
add
and
in
push
mov
xchg
jmp
inc
imul
sahf
adc
addr16
stc
pop
add
mov
pop
pushf
jecxz
adc
addr16
fsub
dec
mov
push
sbb
fstp
pop
jmp
add
jecxz
adc
nop
push
nop
mov
sbb
repnz
mov
inc
cli
push
cmp
inc
mov
push
int
into
js
shr
lret
pop
testl
jne
aam
mul
jl,pn
ret
xor
pushf
push
dec
push
dec
jno
ficoml
cltd
xor
loopne
xchg
mov
mov
mov
add
jmp
cmp
out
and
iret
shll
jne
hlt
and
sub
dec
lret
sub
aad
rcrb
inc
es
sub
and
mov
pusha
jae
add
flds
mov
bound
mov
lcall
and
movsl
dec
popf
push
sbb
pop
adc
or
xchg
or
jge
mov
lret
jno
gs
and
scas
sub
and
das
push
mov
inc
or
mov
or
cmp
out
sub
sahf
or
scas
mov
adc
mov
adc
vandnpd
adc
loop
push
fs
out
xor
mov
xlat
and
cld
dec
addr16
inc
sub
lahf
mov
cli
test
sub
and
out
mov
cwtl
andb
mov
xor
jno
nop
ficompl
fwait
and
adc
aas
sbb
or
inc
or
mov
jbe
jg
fs
sub
add
sbb
cwtl
outsb
xchg
es
lret
je
fidivs
out
fidivrl
cltd
dec
sub
xor
scas
sarl
pop
pop
movl
dec
icebp
dec
sti
pusha
repnz
mov
loopne
andnps
fstpl
lret
push
cmp
rorl
inc
int3
sbb
and
mov
push
mov
xor
mov
orl
scas
fisttpll
jns
adc
pop
sahf
xor
adc
jno
cmp
xor
push
je
push
xchg
aam
cmp
jo
or
les
out
push
cmc
popa
notl
add
ret
int
outsb
adc
fsubrs
sub
push
dec
rcrb
iret
mov
daa
push
lret
bound
jno
mov
inc
shlb
cmp
incb
sub
insl
xlat
jae
inc
push
cs
cmp
arpl
sub
fs
popf
mov
arpl
adc
fmull
cs
aad
xchg
pop
lea
mov
xor
mov
push
cmp
mov
push
push
mov
adc
fdivrs
and
ds
in
push
sub
popf
and
add
nop
xor
inc
aam
push
xchg
lahf
addb
out
push
pop
pop
lret
roll
rorl
std
jno
mov
jbe
add
ret
push
pop
sbb
mov
lods
icebp
sub
aam
jecxz
mov
pop
inc
outsb
sub
or
sbb
adc
pop
cld
cmp
adc
mov
in
mov
mov
xorl
mov
call
xchg
es
dec
adc
jp
adc
inc
mov
aas
dec
and
mov
push
jno
outsb
pushf
mov
mov
sbb
push
jbe
cmp
pop
jb
rorb
push
aaa
inc
sub
cld
out
xor
pop
push
out
sarl
xchg
push
sahf
es
add
loop
pop
cwtl
rcll
out
cltd
cmc
fldcw
cmp
pop
pop
and
push
fdivrl
pop
inc
push
fldl
mov
lods
add
dec
push
cmc
mov
pop
sub
es
sbb
or
ljmp
add
jb
int3
loope
jno
cmp
and
imul
or
push
xchg
pop
rorb
mov
jae
sub
jp
fisttpll
cmp
popf
inc
add
push
mov
sbb
loopne
and
bound
rcr
or
cs
je
cmc
and
cld
pop
cltd
xor
scas
lock
dec
fs
aaa
lea
shrl
mov
cmp
push
lock
push
fdivrl
cwtl
jae
out
dec
cmp
push
les
mov
xchg
jb
iret
xor
insl
pop
jno
subl
mov
jp
ljmp
adc
sbb
outsb
pop
sbb
push
sbb
push
mov
ds
sbb
push
cs
and
std
and
iret
pop
jp
inc
and
cmp
pop
subb
cmp
mov
js
movsl
xchg
pop
fs
outsb
js
mov
mov
sub
fcmovnu
dec
push
out
dec
adc
fldcw
xor
jne
xor
mov
std
pop
adc
pop
or
sbb
out
cmpsb
xchg
outsb
cmp
adc
sub
fsub
push
add
jno
mov
repnz
ret
mov
dec
or
adc
dec
popf
xchg
aam
and
mov
loope
mov
je
xor
pop
sub
gs
push
movsl
push
jle
dec
fs
sti
or
xor
popf
divl
imul
loopne
mov
jg
add
dec
xchg
cmpsl
stos
out
dec
scas
rorb
or
jne
icebp
aaa
loopne
lock
mov
fnstsw
imul
and
fcomps
fstpl
outsb
sahf
xchg
test
push
mov
dec
in
cwtl
push
int3
adc
clc
add
pop
or
pop
inc
outsb
lods
jbe
aad
xchg
xor
mov
xorb
in
jno
lahf
daa
inc
orl
dec
shrl
xchg
aam
xchg
or
or
jb
dec
rcrb
sub
gs
stc
pop
adc
scas
insb
and
cld
adc
push
or
popa
xchg
aaa
xchg
adc
imul
pop
jg
adc
das
xchg
fcompl
mov
xchg
cld
insl
cmpsl
add
push
sbb
lret
and
in
cltd
jno
decb
hlt
or
inc
mov
adc
push
test
std
push
pop
data16
mov
and
insl
push
addr16
push
jb
in
xor
inc
inc
mov
in
adc
daa
xchg
adc
add
mov
jb
sti
inc
inc
sbb
mov
popf
xor
sbb
les
popf
in
ret
aaa
inc
jle
test
fcoms
pop
call
cs
push
inc
sbb
mul
dec
loop
nop
mov
push
pop
push
mov
cmp
fldt
sbb
inc
cmp
push
sub
push
push
mov
in
xor
pop
sub
inc
mov
jnp
sub
mov
or
push
fldl
outsb
mov
shll
mov
outsl
fs
push
push
lret
adc
daa
lcall
into
push
jmp
jle
aaa
mov
mov
cmp
cmc
push
andb
push
in
fcompl
and
add
inc
stos
push
jmp
push
xchg
pop
shr
mov
xchg
mov
mov
sbb
ljmp
popa
adc
mov
or
mov
mov
xor
push
mov
adcl
or
sbbb
gs
dec
into
pusha
dec
je
pusha
test
dec
movnti
push
sbb
xor
lds
jge
mov
mov
cmp
dec
test
movsl
aad
scas
mov
inc
cmpsb
ds
in
test
adc
sub
sbb
rcr
enter
mov
jmp
test
dec
cmp
or
xchg
lods
mov
cli
gs
or
stc
popa
fidivrl
in
mov
in
clc
gs
hlt
xchg
imul
insl
push
xchg
clc
mov
call
sub
std
mov
lret
lcall
push
xor
adc
es
sbb
mov
push
dec
xlat
test
shrb
push
adcl
mov
mov
in
addr16
ds
in
pop
movlps
bound
jae
mov
scas
mov
fwait
xor
adc
adc
pop
xor
dec
aam
popf
test
pop
cmp
cmp
outsb
ja
aaa
fwait
mov
in
push
inc
leave
pop
adc
xor
ljmp
das
jl
imull
lret
nop
movsb
or
sti
shrl
sub
pop
rolb
xchg
adcl
xor
xor
enter
mov
xor
es
jl
gs
push
xchg
xor
inc
jo
pop
ja
adcb
or
dec
frstor
push
jno
jmp
inc
pop
in
mov
mov
hlt
cmpsl
sahf
int3
adc
movaps
push
sahf
mov
cli
push
addr16
cmp
fmull
mov
icebp
aas
inc
sbb
pusha
les
adc
in
inc
sbb
mov
sbb
icebp
sbb
into
fmull
or
sub
xchg
int
add
push
add
ljmp
andb
ljmp
dec
inc
jmp
pop
imul
nop
ret
dec
cmp
dec
xor
adc
dec
rcrl
pop
fadds
push
int
sbb
imul
ds
push
in
lods
mov
cmp
rcll
mov
aaa
xchg
pop
and
scas
aas
mov
popf
int3
inc
sub
aaa
test
mov
mov
es
fstpt
push
mov
loopne
pop
repz
pop
les
push
push
std
shrl
loop
dec
jno
sbb
dec
push
arpl
cmp
dec
es
dec
lahf
xor
sbbl
andb
popa
in
ret
adc
push
rolb
pop
aaa
mov
shrl
aad
inc
jo
stos
cmpsb
inc
in
xor
pop
notl
sub
adc
jno
popf
and
das
mov
lcall
repnz
dec
pop
aas
dec
jns
rcrl
mov
inc
mov
sbb
fistpl
jne
or
bound
movsl
mov
push
jno
shlb
fucomip
lahf
daa
and
cmp
cmp
test
stos
adc
pusha
cmp
dec
jo
aam
add
insb
popa
sti
mov
sub
xchg
int3
scas
cmp
fbstp
shl
das
shll
xor
fdivr
and
std
cmp
add
sahf
mov
lock
jmp
jo
add
pop
fadd
mov
test
cmp
das
push
pop
in
inc
inc
push
mov
xor
out
lret
fidivrl
add
lods
pop
xor
xchg
rcl
int3
or
jbe
xor
mov
movsb
xor
shrl
fnstenv
jns
data16
sbb
inc
push
daa
and
loope
and
push
scas
or
dec
popf
shll
dec
daa
jo
pop
jne
adc
xchg
mov
outsb
cli
adcb
fsts
leave
xchg
adc
xchg
sub
xor
popf
rcl
pusha
pushf
xor
mov
push
jno
adc
and
pop
adc
rcrl
or
out
aad
sarl
mov
mov
and
nop
and
pop
xor
ss
inc
sbb
inc
sbb
pop
adc
rcll
or
and
mov
push
cmp
inc
dec
jl
add
mov
cmp
imul
inc
xorl
hlt
imul
or
imul
sahf
adc
std
cs
xor
pop
shll
jne
aad
push
pop
lret
in
adc
push
iret
jo
or
pop
pushl
push
lods
je
adc
aas
add
aas
jb
mov
push
bound
push
or
mov
lret
fwait
mov
dec
fisttps
movl
ss
aas
jo
sub
sbb
rcr
notl
fmull
leave
int
mov
jo
mov
add
repnz
pop
aaa
jecxz
cmp
xor
out
insb
jae
sbb
jae
mov
push
inc
xchg
add
xor
push
jl
mov
rolb
das
xchg
sbb
or
push
addr16
jo
gs
push
jle
repz
in
mov
push
repz
test
clc
jae
lahf
shlb
imul
push
mov
cmc
lret
sub
loop
dec
in
fmuls
shlb
adc
inc
aad
mov
cmp
pushf
outsb
setge
xor
sti
push
pop
cs
cwtl
adc
rorl
in
push
sbb
pop
aas
fdivs
cmp
cmp
inc
in
adc
sub
stos
jmp
sti
pusha
into
mov
add
inc
cld
pop
cwtl
rol
pop
cs
and
adc
pop
cmp
mov
lds
pop
pop
loopne
mov
jo
adc
or
inc
in
inc
loop
stos
xor
inc
and
mov
insl
dec
lret
push
test
pop
push
imul
xchg
pop
pusha
xchg
push
add
push
outsb
ss
jns
inc
stos
shl
outsl
ss
out
inc
iret
cmp
adc
mov
sbb
sub
lcall
lods
xor
test
push
mov
add
push
aaa
arpl
sub
or
xchg
dec
popa
sub
inc
shlb
dec
xchg
inc
shlb
aad
pop
outsl
or
push
shll
dec
sbb
xor
sti
data16
inc
out
inc
stos
xor
inc
mov
jno
aam
sbb
lret
fdiv
jo
iret
cmp
push
sarl
adc
mov
rcrl
adc
lods
xor
and
inc
push
hlt
and
sub
mov
imul
inc
xchg
mov
mov
mov
push
stc
inc
jle
xor
jo
inc
popf
out
mov
rorb
fdivs
outsb
data16
push
push
adc
hlt
into
dec
int3
loopne
sbb
push
cmp
inc
aad
test
pop
bound
mov
sti
int
rorb
cli
mov
cmp
cmc
mov
mov
mov
cmp
in
es
jne
repz
push
xchg
aad
jge
mov
push
adc
jno
dec
dec
and
sbb
push
mov
inc
dec
aam
add
mov
popa
in
push
push
cld
xchg
jno
jge
or
xchg
icebp
push
xor
add
jne
fcom
dec
pop
ss
fsubrl
in
sbb
pop
pop
mov
rcr
repz
xchg
jae
xchg
not
push
mov
xor
push
mov
add
pop
dec
cs
ficoml
in
inc
push
cmovne
inc
dec
int
lods
cs
pushf
test
dec
mov
outsb
sub
inc
inc
push
push
daa
stos
push
out
inc
daa
and
mov
push
xchg
fldpi
addl
mov
mov
inc
test
push
mov
xchg
icebp
dec
icebp
add
push
leave
mov
inc
adc
dec
movsl
push
adc
push
pop
jbe
lock
cli
outsl
inc
fmull
cmpsl
scas
xor
out
movsl
and
mov
xor
sub
insl
mov
es
cmp
mov
pop
jno
pop
inc
in
jnp
cmovge
push
mov
add
pop
lock
test
rcl
addr16
adc
mov
incb
mov
das
adc
shlb
xor
push
mov
mulps
add
and
sub
out
ret
and
xor
leave
adc
cmp
outsl
mov
jno
mov
pop
sub
pop
in
adc
movsb
stos
mov
cmp
imul
notl
scas
inc
cli
dec
aas
sbb
mov
add
and
mov
jecxz
je
out
ja
mov
es
adc
pop
or
push
xchg
sahf
nop
or
ret
jecxz
test
out
push
adc
cmp
xor
ja
adcl
sbb
pushf
push
test
leave
sbbl
push
or
lds
das
lods
pop
mov
test
loop
int3
fnstenv
jge
jge
dec
in
fnstsw
pop
call
adc
dec
cmpsl
sbb
outsl
ss
xchg
stos
dec
sbb
ret
mov
push
pop
dec
sbb
inc
push
mov
adc
xchg
inc
mov
mov
add
test
push
dec
gs
or
adc
pop
pusha
push
stos
mov
adc
push
pop
sbb
ficoms
dec
xor
cwtl
cld
adc
xchg
fisttpl
test
or
cmp
lahf
insl
scas
xchg
outsb
subl
int3
mov
shrl
outsl
adc
cmp
xchg
divl
mov
and
in
test
imul
ljmp
or
push
push
jno
adc
fndisi(8087
dec
pop
iret
es
and
adc
lret
sti
xlat
dec
lcall
cld
aad
push
push
outsb
popf
push
enter
xor
in
or
fistpl
ja
jmp
popf
fs
xor
sub
lea
repnz
mov
adc
sahf
adc
xor
sarb
xchg
mov
lcall
stos
mov
pop
push
sbb
sbb
lds
add
shll
push
ds
rolb
test
lods
xor
xchg
shrb
push
adc
pop
xor
inc
movsl
std
adc
pop
adcl
frstpm(287
and
loope
jbe
xor
fcmove
dec
jle
addr16
adcb
and
imull
jae
rcr
xor
cmc
es
push
pop
lret
rorl
insl
fcmovne
push
pop
jno
mov
or
fcmovb
sbb
flds
leave
cmpsl
sbbl
shrb
jmp
loopne
or
xchg
cs
pop
sbb
into
aam
xchg
and
icebp
push
push
sti
dec
xor
fwait
int
push
lcall
rcrb
or
int3
inc
pop
imul
call
je
jns
testl
mov
in
sub
adc
or
js
xchg
mov
mov
fsubs
movsb
cli
shll
adc
pop
add
sub
push
iret
lods
inc
or
imul
aas
cmp
cmp
cmp
xchg
or
and
pop
jno
mov
push
and
jmp
push
icebp
arpl
nop
imul
aaa
popf
fisttpl
aad
xor
or
mov
enter
cli
adc
cs
mov
ret
movl
cmp
pop
rolb
test
sbb
pop
fmuls
pusha
jp
mov
shlb
inc
push
push
cmp
fisttpl
xor
xor
inc
loope
push
cs
mov
cmp
jmp
out
mov
inc
or
mov
mov
outsb
aam
jae
bound
and
out
xlat
ror
das
outsb
add
jl
stos
push
stos
jle
mov
imul
loope
into
ljmp
pushf
push
popa
dec
addl
sbb
cmp
popa
xchg
xor
adc
pop
cmp
lds
dec
inc
adc
xchg
pop
push
fnsave
and
faddl
push
icebp
inc
mov
sbbl
cmp
loope
test
sub
xchg
xlat
icebp
out
pop
ljmp
xchg
lcall
jne
shlb
fnstenv
aad
cmpsl
enter
jno
fdivl
mov
fucom
push
mov
sbb
dec
add
mov
dec
fiaddl
mov
rorb
in
aaa
dec
addb
cmp
inc
or
loope
push
push
sub
adc
cld
cmc
xchg
lock
icebp
jbe
pop
mov
xchg
xor
add
in
insl
fs
adcb
stos
jmp
push
mov
push
push
cs
add
jae
in
adc
fsubrl
cmp
int3
imul
mov
xchg
cmpsl
sar
push
cmp
mov
xor
mov
mov
xchg
ret
or
push
mov
loope
dec
jecxz
imul
fxch
inc
inc
push
sarl
lret
add
out
dec
loope
xor
scas
dec
les
cmp
pop
roll
sub
dec
dec
in
sbb
les
push
or
lret
adc
add
adc
pop
fistpl
cmc
arpl
push
pop
in
test
xchg
subb
cmp
push
lahf
inc
mov
add
icebp
xchg
ret
push
mov
arpl
and
sub
pop
adc
mov
jo
cmp
or
mov
icebp
mov
pop
cmp
add
rclb
dec
push
fistpl
ret
leave
cmp
inc
repz
mov
jo
xlat
sbb
sbb
jbe
sub
icebp
lret
cmc
lret
shll
int3
fwait
lods
mov
in
mov
push
fdivl
push
jns
fadd
jns
mov
or
mov
pop
xor
adc
sbb
rclb
inc
into
lret
test
cmp
cmc
push
stc
push
clc
loopne
xor
cmc
shlb
inc
push
or
jecxz
sti
jne
push
pop
adc
and
push
adc
dec
xor
sahf
dec
shll
cmp
dec
adc
adc
sub
and
cmpsb
fadds
pop
sbb
xchg
push
iret
scas
mov
pop
lods
xchg
cmc
adc
push
mov
stos
out
lcall
push
jno
add
xor
xor
pushf
dec
in
es
mov
cmp
es
and
xorl
ret
bound
cmpsl
addr16
rcl
in
push
pop
pusha
push
fidivl
push
dec
stos
jno
jle
mov
fsts
and
xchg
pushf
gs
dec
gs
push
pop
outsl
fadds
dec
cmpsb
dec
andl
test
arpl
pop
adc
sbb
lods
sub
cmp
dec
hlt
push
jle
cmpsb
ss
mov
inc
pop
cltd
daa
ret
dec
popf
dec
lret
push
test
push
mov
jo
pop
xor
xchg
jl
sbb
mov
mov
inc
add
add
xor
xchg
and
outsb
cld
jns
jecxz
push
lahf
imul
inc
dec
add
iret
negl
fbstp
dec
sbb
sti
push
adc
lea
lcall
inc
pop
push
cmp
dec
je
cmp
xchg
pop
loop
or
sbb
lret
popa
das
cmp
adc
inc
add
push
lret
popa
dec
cmpsl
lock
fldl
into
sbb
jb
jo
loop
lret
cs
mov
jbe
inc
cld
mov
cmc
pop
scas
sub
loop
mov
dec
imul
dec
bound
ds
cmp
mov
pusha
inc
push
or
jo
pop
dec
inc
dec
push
shll
push
enter
inc
nop
mov
push
sbb
aaa
outsl
jae
xor
pop
xchg
xchg
jg
cli
insl
pop
into
pop
pop
cmpsl
mov
jnp
adc
lcall
test
push
popf
aaa
cltd
mov
clc
cld
pop
mov
push
cltd
pop
cs
xchg
sub
xor
les
pushf
test
nop
mov
inc
stos
pop
das
je
xchg
outsl
push
test
test
loopne
cltd
out
imul
push
enter
aaa
push
cld
loope
cli
xchg
pop
in
fwait
xchg
dec
push
or
popf
ret
out
dec
pop
lods
aaa
mov
das
pop
push
sbb
cmp
push
pop
ss
gs
jns
dec
cmp
dec
push
push
pop
out
insl
repnz
nopl
repz
sbb
adc
popa
in
jo
jmp
test
mov
pop
lea
inc
or
cmp
je
dec
push
roll
jmp
aaa
ror
loop
pause
inc
or
push
aas
dec
push
fwait
mov
cmc
cmp
pushf
jge
hlt
rolb
clc
or
rcr
push
imul
leave
push
push
lea
fdivr
add
loope
cli
or
mov
into
std
pop
mov
push
insb
enter
sbb
cmp
clc
dec
fwait
jmp
imul
icebp
or
lock
shrb
out
cmp
push
adc
hlt
sahf
xchg
sbb
inc
sbb
xor
adc
sarb
pop
sub
adc
sbb
dec
inc
jb
out
or
mov
inc
push
in
test
imul
sti
aam
fcoml
push
xor
cmp
dec
aas
dec
int3
out
mov
xor
roll
sbb
lods
fists
ror
or
xchg
shlb
dec
js
mov
xchg
test
sbb
orl
mov
fs
dec
adc
xchg
xor
scas
dec
push
imul
mov
push
and
or
imul
shlb
push
filds
jae
cli
xor
or
push
or
inc
dec
push
repnz
addr16
sti
inc
imul
push
stos
je
orb
jo
lds
dec
xor
push
andb
cs
adc
add
mov
jecxz
loopne
fstl
xor
data16
dec
fisubl
popa
ljmp
and
sub
push
jo
pop
iret
xchg
mov
movsb
daa
hlt
pop
dec
mov
mov
xlat
jno
dec
xor
dec
cld
movsl
andl
aad
rolb
sub
adc
pusha
dec
dec
sbb
mov
shlb
addl
inc
das
int3
imul
scas
lods
xlat
xor
jne
dec
mov
jne
adc
push
popa
cmpsb
pop
mov
push
out
push
pop
sbb
cwtl
inc
dec
orb
sbb
jns
or
lret
lret
add
insl
pop
andl
sbb
push
gs
ss
dec
and
rcll
inc
dec
pop
xor
in
outsl
adc
push
mov
dec
popa
bound
movsb
dec
lcall
jge
xchg
and
lret
scas
inc
xor
gs
push
or
xchg
imul
xchg
loopne
cmp
pusha
out
in
mov
arpl
push
or
mov
pop
jns
xchg
mov
push
xchg
int3
std
sti
inc
insb
dec
cmp
sbb
pop
ds
xor
jge
xchg
sti
repz
dec
sbb
imul
xor
dec
or
dec
in
or
aam
fistl
mov
sbb
cmc
fisttpll
sub
ss
and
jne
sbb
push
jp
sub
in
and
in
and
stos
aas
adc
and
stos
mov
xlat
cmpsl
add
pop
sub
jecxz
sbb
sbb
cmp
xor
adc
rclb
cltd
push
xorb
jg
dec
loope
mov
or
mov
call
ret
mov
xchg
in
test
pop
ja
add
popa
mov
shl
xchg
inc
mov
pop
outsb
cmpb
xchg
in
xlat
sub
popf
icebp
sbb
inc
mov
xorl
mov
add
mov
or
xor
pop
sahf
popa
push
or
testl
xchg
cli
mov
daa
cs
popf
sub
jo
add
xlat
cwtl
rclb
into
fcoml
pop
test
out
add
xchg
js
mov
dec
pop
in
inc
sbb
stc
jg
push
jo
sub
into
add
aad
mov
cmp
rcll
sbb
rol
add
aam
add
ficomps
js
jecxz
and
in
not
iret
dec
in
sub
in
sbb
mov
fsub
stc
leave
pop
xchg
dec
push
dec
dec
cmp
in
lods
mov
pop
inc
mov
xchg
adc
fldenv
mov
cmp
cmp
adc
inc
idivl
push
fstpt
outsb
mov
hlt
cld
insl
add
rorb
or
inc
push
pop
repz
jle
lsl
les
pop
xor
sub
inc
bound
ds
js
push
mov
fstpl
push
arpl
dec
aam
ficomps
mull
or
dec
xlat
out
push
add
test
data16
push
pop
jns
or
shrb
xchg
arpl
cmp
push
pop
inc
je
and
arpl
add
out
mov
into
cld
dec
aaa
insb
ds
inc
pop
add
sti
xor
or
xchg
arpl
sub
xchg
dec
inc
add
push
int
mov
cwtl
jmp
lcall
sbb
inc
inc
jno
mov
mov
push
das
mov
arpl
enter
es
xor
sahf
or
in
xor
nop
cmp
sahf
sub
lret
sub
aas
add
fistps
pop
cli
mov
into
adcl
sub
mov
push
adc
ss
enter
push
push
mov
adc
insb
sub
mov
mov
jmp
jb
pop
xorb
jne
int
or
int3
mov
popa
jne
out
enter
pop
or
or
xor
into
stc
push
cmp
into
and
movups
cmpsb
in
inc
nop
scas
dec
jp
fwait
lret
inc
cltd
xchg
ljmp
sbb
ja
cli
xchg
sub
iret
fsubrl
jnp
dec
dec
ret
xchg
outsb
scas
mov
push
int3
xchg
mov
movsb
dec
dec
loope
or
dec
stos
aam
xchg
pop
mov
inc
push
ficomps
std
sahf
arpl
int3
cmpsb
cmpsl
call
xor
les
sbb
mov
cmpsl
sub
pop
inc
cmp
mov
in
inc
sub
push
sbb
inc
aaa
int3
mov
data16
mov
adc
daa
sbbl
test
movsl
mov
jmp
lods
scas
add
int
jbe
cmp
das
lcall
mov
popa
fcoms
inc
subl
fstpl
mov
leave
cmp
push
das
sub
fs
sub
jge
popf
xor
arpl
mov
arpl
lods
mov
and
push
xchg
out
pop
xchg
add
repnz
push
pop
push
cmpsb
lock
push
sbb
cltd
cmp
adc
and
aaa
cmpsb
push
push
or
lods
fwait
pusha
inc
mov
mov
pop
arpl
pop
arpl
ret
or
dec
xchg
sbb
in
dec
aad
pop
fmulp
cli
xorl
incb
shl
xchg
adc
or
pop
inc
xor
or
pop
lcall
push
cmp
fs
mov
test
jp
sbb
and
pusha
notl
push
inc
push
jns
add
sub
mov
xor
or
adc
ss
inc
push
bound
stc
sbb
add
xchg
xchg
cwtl
mov
outsb
insb
cli
inc
pop
xor
das
xorb
imul
cmp
adc
leave
inc
enter
pop
cli
push
rol
push
and
ret
adc
xchg
mov
out
adc
pop
add
jno
jmp
mov
adc
mov
xor
xchg
adc
arpl
sub
cltd
fsubl
js
and
out
pop
and
in
sub
nop
lock
or
cmp
xchg
loopne
hlt
std
push
movsl
dec
loopne
ret
icebp
sbb
lea
inc
jno
and
sub
add
repz
ja
movsl
lds
pop
cmp
jno
or
cmp
jno
fwait
push
xchg
mov
push
pop
mov
add
pop
push
stos
testl
sbb
and
push
pop
movsl
ret
mov
leave
push
shl
lahf
leave
jae
in
movsl
push
mov
adc
or
xchg
outsb
les
test
add
shr
xor
arpl
bound
addl
pop
sbb
cwtl
outsl
dec
push
imul
lret
in
mov
cmp
ljmp
xor
dec
js
cmp
cld
test
test
mov
movsb
add
pop
inc
pop
push
nop
sbb
adc
cs
test
xor
stos
repz
mov
aad
jns
cmp
xchg
mov
lret
enter
lods
lahf
shlb
test
in
in
mov
lcall
ret
movl
mov
jno
or
fistpl
push
subl
fs
in
push
adc
mov
mov
pop
xchg
in
icebp
sbb
or
shlb
mov
push
mov
loop
jmp
or
cmp
cmp
jp
shlb
lret
loope
push
pop
mov
jg
dec
in
cmp
adc
iret
sub
inc
pop
jno
lcall
jg
pop
inc
clc
jno
insb
bound
stos
stc
lock
or
push
and
sbb
and
hlt
imul
jge
xchg
adc
pop
ret
fdivs
inc
stos
enter
lcall
shll
or
push
cmp
jmp
enter
sub
inc
xor
daa
test
mov
cmpsl
or
inc
and
sahf
inc
sbb
outsb
mov
pop
aaa
icebp
jle
jnp
xor
cmp
out
dec
dec
popf
mov
inc
lock
cmp
mov
scas
lcall
mov
sahf
inc
test
cmp
cltd
xchg
sbb
movsb
in
adc
push
push
lods
xor
adc
pop
ret
faddl
mov
add
sbb
sahf
popf
sti
popa
sbbb
and
lret
dec
jl
push
jl
xor
int3
xchg
stos
xchg
arpl
test
mov
push
out
pop
add
jmp
leave
push
aam
lret
cmp
insb
nop
aas
and
cmp
pusha
stc
int
inc
cld
inc
cmp
dec
dec
in
mov
push
add
pop
jmp
xor
pop
mov
inc
fmull
cmc
stos
dec
pop
imul
xor
cli
mov
xchg
bound
sti
shrb
sub
dec
fisttpll
rorl
ljmp
addb
or
inc
movsb
cmpl
xor
inc
jecxz
adc
cs
push
das
dec
push
mov
dec
das
inc
jo
stos
xchg
and
fnstenv
pushf
jae
insl
add
inc
out
or
lods
push
sbbb
mov
loopne
ret
push
mov
fidivl
push
int
repz
jno
icebp
fsubs
cld
and
xchg
ja
adc
cmp
mov
add
push
adc
xor
dec
dec
flds
rcrb
push
popa
adc
fdivl
push
mov
xchg
mov
fimuls
addr16
adc
stos
addr16
sub
fadd
push
aaa
xlat
pop
push
jo
movl
icebp
fscale
xchg
icebp
fnstcw
pop
and
xchg
pop
rcll
jnp
xor
sahf
jl
or
imul
movsb
shrl
sti
ret
push
adc
jle
je
iret
je
sahf
mov
bound
mov
mov
xor
jbe
add
inc
inc
inc
mov
call
cmp
fldl
or
bnd
daa
addb
mov
or
and
sub
test
pmuludq
and
lahf
lds
jno
cmpsb
cmc
push
xorb
push
enter
pop
das
scas
mov
aaa
aad
xlat
xor
cs
addb
cmp
mov
push
sub
aam
pop
mov
aam
xor
scas
sub
xor
xchg
and
and
rcll
out
and
lock
icebp
and
mov
or
mov
in
adc
jmp
jno
pop
or
out
es
sbb
outsb
test
repz
shlb
pusha
add
popa
mov
push
push
jmp
mov
nopl
mov
pop
push
cmp
or
ja
mov
sub
push
xchg
fnsave
ror
aam
ud1
jp
loope
dec
daa
pop
shl
push
inc
adc
pop
xor
or
int3
dec
add
adc
inc
icebp
imul
inc
dec
or
pop
jmp
push
out
and
loop
pop
add
xchg
xor
mov
inc
jg
inc
xor
cli
jo
jle
xchg
push
sbb
add
stos
sub
push
scas
in
mov
push
or
cmp
ja
scas
addb
mov
movsb
insl
movsl
les
dec
dec
in
xorb
loopne
testl
ret
xor
lret
lea
cmp
lahf
test
fcompl
mov
pop
lcall
mov
push
sub
test
icebp
out
test
pop
shl
add
or
dec
jne
or
out
or
dec
jecxz
push
dec
cs
mov
inc
cmp
jnp
stc
xchg
cs
icebp
movsb
andl
xchg
nop
int3
cmp
xor
shrb
insb
imul
add
out
sqrtps
dec
mov
outsl
popa
fcoms
jmp
mov
dec
cmc
test
cltd
ret
xchg
jl
pop
fldl
gs
cwtl
dec
push
pop
imul
push
loop
pop
cmpsl
xorl
mov
and
jecxz
inc
mov
out
push
adc
pop
cld
dec
fmull
arpl
cmpsl
jle
movzbw
mov
fadds
aaa
inc
rcrb
or
sahf
mov
lods
data16
sti
mov
mov
xor
and
cmp
inc
sti
add
lret
or
sahf
cli
in
dec
cmp
iret
cmp
notl
dec
pop
rolb
cmp
add
push
rcrl
rcrb
xchg
cmp
cmp
push
inc
sub
jecxz
mov
cmp
inc
push
dec
fnstenv
inc
aaa
cmc
push
adc
dec
cmp
jns
xor
mov
jmp
inc
pop
pop
test
mov
test
inc
dec
stos
dec
mov
ja
aaa
icebp
inc
push
rcrl
cmp
movsb
rorb
or
inc
jge
inc
imul
inc
sub
push
adc
or
or
cmc
in
jbe
add
adc
dec
pop
ljmp
add
or
test
adc
add
dec
push
imul
in
dec
add
dec
inc
adc
icebp
popf
popa
cmc
push
mov
movsl
enter
adc
dec
dec
pushf
push
cmp
add
stc
sub
aaa
push
pop
adc
dec
pop
sahf
push
outsl
xor
mov
lret
rcr
inc
repz
aas
aaa
dec
adc
jae
addl
enter
adc
inc
or
enter
js
addr16
xor
lahf
aaa
lods
adc
inc
icebp
xor
and
aaa
adc
jae
test
xor
iret
aaa
fists
inc
pop
xor
dec
ds
mov
adc
dec
arpl
dec
push
mov
jnp
outsl
mov
inc
dec
sub
aaa
out
iret
pop
pop
jecxz
rorb
mov
adc
adc
dec
sarb
inc
das
xor
pushl
out
adc
inc
mov
popf
adc
cmp
adc
inc
adc
shrb
push
mov
or
push
mov
push
cmp
sbb
jmp
adc
imul
shlb
adc
enter
and
xchg
clc
push
adc
inc
mov
enter
adc
inc
aaa
mov
inc
push
cmp
adc
adc
adc
inc
and
dec
xchg
dec
imul
dec
mov
adc
rolb
inc
or
xor
aas
push
adcl
add
inc
and
enter
cltd
aaa
jne
orl
enter
adc
inc
sub
popa
lcall
movsl
xor
fnstenv
jmp
repz
or
xor
cmp
dec
cmp
adc
inc
test
enter
adc
inc
and
inc
aaa
push
cmp
adc
inc
test
enter
adc
jmp
pop
inc
push
pop
aad
ret
xor
shlb
inc
xor
xchg
push
jno
xorl
shrl
pop
popl
push
cmp
xor
insl
push
jg
xchg
enter
fcomps
int
fnstcw
push
inc
rorb
dec
xor
inc
aaa
inc
adc
mov
lahf
push
mov
xor
mov
ret
shlb
dec
cmc
mov
dec
or
push
enter
push
adc
inc
cmpsl
sbb
pop
dec
xlat
mov
xchg
push
std
shll
dec
adc
jne
adc
mov
mov
repz
enter
aad
shrb
adc
addr16
push
mov
inc
adc
inc
add
shll
mov
popl
xor
aaa
aaa
adc
inc
add
xlat
aaa
ret
adc
inc
xor
gs
push
mov
inc
adc
inc
pushl
aaa
mov
fwait
xchg
sarb
imul
inc
and
pop
push
loopne
adc
lock
clc
in
test
hlt
es
out
negb
push
in
dec
ljmp
mov
jp
or
aad
cwtl
xlat
pop
adc
jmp
push
add
lock
stc
icebp
push
sub
aas
std
pop
loopne
clc
pop
push
outsl
pop
out
sub
icebp
sub
sbb
ljmp
jecxz
cli
mov
adc
jmp
out
xchg
inc
pop
adc
lret
or
jecxz
call
xor
push
mov
out
aam
in
in
fidivrs
inc
call
neg
mov
loopne
jmp
mov
rclb
out
mov
mov
xchg
add
pop
push
ljmp
and
scas
pop
imul
dec
addl
in
int
add
mov
add
or
daa
add
mov
xor
in
fwait
lods
cmpb
adc
out
mov
dec
add
fs
or
cmp
sbb
xchg
pop
outsl
adc
hlt
or
pop
dec
pop
sub
scas
fdecstp
lock
or
hlt
not
xor
stc
cmp
loop
adc
pop
mov
leave
pop
xchg
add
gs
cmp
jecxz
push
sub
int
inc
enter
cmc
pop
jmp
loope
and
pop
es
jmp
jnp
cmc
push
fidivs
add
jecxz
or
mul
stos
hlt
out
gs
mov
push
pushf
dec
int
jbe
ljmp
outsl
push
lds
dec
lret
rclb
lock
xlat
pop
imul
clc
jle
pushf
xor
adc
fcomip
es
adc
cmp
cltd
pop
pop
mov
rol
stc
or
push
aad
cmp
fisttps
insb
xchg
mov
mov
sub
mov
jns,pt
mov
scas
mov
outsb
or
imul
jmp
xor
push
ja
add
mov
sbb
inc
inc
push
test
repz
in
outsl
adc
cli
and
adc
insb
fistpll
adc
stc
cmpsl
paddq
adc
and
xchg
mov
das
adc
xor
pop
push
xlat
add
xor
in
inc
xchg
mov
rorl
dec
dec
mov
xor
push
xor
adc
dec
sub
aad
jecxz
out
aad
nop
mov
inc
pop
pop
ret
mov
or
dec
inc
mov
pop
stc
in
xchg
arpl
ljmp
cwtl
and
push
add
add
out
fisubs
add
mov
add
xor
bound
icebp
mov
xchg
out
sahf
xor
inc
testb
clc
or
xorl
xor
inc
leave
jge
jbe
xlat
ret
daa
xchg
adc
xor
sbb
xor
and
lret
or
das
push
jle
aaa
or
out
mov
inc
mov
rolb
pop
jecxz
push
lgdtl
jecxz
adc
and
mov
mov
mov
xor
mov
xlat
xchg
sbb
in
stos
push
dec
mov
mov
ja
hlt
dec
loopne
xchg
xlat
fdivp
psubb
or
or
hlt
loop
repz
sub
and
or
push
push
clc
pop
in
or
xor
or
jecxz
or
cmp
jg
dec
iret
cmp
or
sbb
add
sbb
jecxz
loopne
in
jge
inc
sub
clc
divb
jecxz
sbb
fdiv
rcrl
movsl
leave
adc
clc
and
fwait
push
int
lock
mov
mov
adc
lea
mov
shrl
xor
dec
call
loopne
cmp
sub
loope
add
sbb
out
in
mov
push
repz
push
stos
movsl
fcoms
mov
adc
scas
mov
inc
aad
pop
out
std
fcmovb
popf
adc
sbb
dec
adc
into
push
dec
mov
iret
sbb
xor
nop
dec
xchg
inc
stc
push
sbb
arpl
add
xor
fdivs
xor
daa
fsub
adc
ret
sbbl
sbb
cwtl
dec
or
dec
jge
cld
adc
push
daa
popa
aad
push
jl
in
lock
pop
ds
cltd
mov
rcll
add
repnz
shlb
subb
hlt
dec
ds
or
pop
cmc
in
inc
or
inc
inc
cmc
jge
adc
pop
lods
loope
outsl
xchg
mov
push
mov
in
repz
leave
sbb
aas
sti
div
rorb
adc
add
lods
adc
test
pop
dec
xor
xor
jmp
pop
xrelease
loopne
notb
xlat
das
or
cmp
xor
inc
aad
mov
jmp
push
ret
int
adc
sbbb
lods
xor
mov
fnstcw
adc
leave
jb
mov
cmp
movsb
out
imul
cmp
adc
or
jg
jmp
adc
ret
sti
aaa
add
pop
fsub
scas
les
scas
push
cmp
dec
pop
xor
xchg
or
outsl
pop
sbb
lret
or
jmp
dec
push
push
cwtl
sbb
int3
movsl
cmpsl
cmp
add
jns
mov
enter
mov
inc
roll
add
pop
push
clc
add
sub
or
dec
aaa
adc
mov
dec
fcoms
in
repnz
lahf
mov
inc
jnp
ss
insb
jl
add
leave
and
call
and
push
shlb
repz
loopne
repz
fs
dec
or
into
cmpl
movsl
rorb
xlat
retw
pop
nop
jns
push
sub
dec
cmp
in
daa
ss
push
addr16
push
sbb
divl
stos
aas
or
xlat
lds
add
pop
shlb
rcl
add
cmp
add
je
xor
out
popf
mov
sub
pushf
push
push
push
aad
cltd
adc
or
push
pop
mov
adc
daa
nop
or
imull
xor
or
mov
cmpsl
cmp
imul
sub
icebp
xchg
in
popf
fcmovb
cmp
icebp
stc
add
cmc
enter
cmpsl
adc
testb
adc
jno
inc
dec
mov
jns
xchg
in
cmc
mov
in
cs
inc
add
mov
mov
jbe
lods
lods
or
or
push
add
xchg
dec
negb
jecxz
test
out
lds
add
cmpsl
or
sar
sub
xor
lds
xchg
sub
testl
inc
imul
pop
cmp
nop
test
sbb
push
jle
mov
mov
adc
or
push
and
fdivrl
aas
rorb
pop
pop
dec
xor
push
sub
into
lds
inc
imul
xor
and
xor
xor
xor
adc
call
mov
push
dec
pop
stc
cmc
out
std
inc
xor
push
mov
xor
jmp
or
cmpsl
xor
mov
gs
xchg
pop
inc
scas
mov
adc
xor
jo
xchg
movsb
inc
xor
xchg
loopne
scas
adc
sub
xor
xor
sbb
mov
mov
daa
js
repz
scas
popl
psubq
xor
and
jne
int3
pop
cwtl
xor
xor
push
xchg
push
pop
psadbw
xchg
xor
push
mov
adc
jnp
rorb
shlb
lds
dec
movsl
ss
cmpsl
add
cmp
and
out
push
sub
int
rol
dec
inc
es
adc
xor
in
mov
mov
mov
outsb
into
fwait
jmp
ret
xchg
cmp
idivl
mov
cmpsb
mov
ficomps
jmp
sub
xchg
inc
orb
inc
rorb
sub
cmpsl
sahf
sub
cwtl
mov
fwait
in
lds
inc
jns
cmp
or
in
repz
imul
roll
dec
dec
rolb
loopne
and
and
or
in
test
mov
sub
jge
mov
cmp
lds
or
decl
jp
andl
xor
in
fwait
cltd
adc
xor
add
add
cmc
xor
lock
add
mov
xor
in
xor
in
jmp
and
sbb
dec
inc
add
or
adc
inc
jecxz
out
xchg
insl
repnz
push
cmpsb
jmp
jne
inc
iret
std
leave
push
xchg
jle
subb
mov
in
xlat
aas
pop
aas
aad
mov
dec
mov
seto
xor
dec
inc
cmp
dec
add
leave
pop
jne
inc
sub
or
lds
testl
pop
lds
add
add
cmp
cmpsl
push
dec
popf
xchg
jb
lods
xor
inc
jns
mov
dec
xchg
sbb
or
es
stos
adc
in
imul
negb
pop
std
repnz
aam
pop
mov
push
inc
imul
roll
clc
or
push
lds
mov
cmp
sub
hlt
push
push
mov
mov
cmpsl
xchg
ficoml
pop
int3
pop
mov
sbb
adc
out
fldl
inc
icebp
sub
adc
or
stos
aad
ds
sub
ja
and
dec
sti
test
inc
push
iret
mov
aaa
pop
inc
pop
pop
pusha
imul
sub
jo
xchg
push
rclb
outsb
pop
jge
iret
xor
mov
inc
cmp
fs
mov
sub
es
sbb
sbb
aaa
push
aaa
or
lods
lret
daa
leave
dec
repnz
pop
int
clc
ret
xchg
sub
sub
stos
insl
movl
dec
pop
imul
or
cld
adc
mov
pusha
pop
mov
ja
cmc
mov
enter
add
mov
or
int
inc
scas
dec
sbb
cmovbe
and
jecxz
and
das
xor
adc
xor
fcmove
add
dec
cmp
ss
scas
adc
or
je
jecxz
sbb
mov
mov
sti
mov
rolb
shl
insb
in
popf
xor
add
in
rep
sbb
shlb
cwtl
adc
push
imul
adc
aaa
mov
test
cltd
inc
shr
cli
out
lods
add
mull
jmp
adc
mov
clc
jecxz
leave
cs
or
jne
jo
pop
in
xchg
mull
xchg
shl
xchg
sbbl
jne
add
xor
inc
enter
sbb
jmp
testl
jno
int
ret
xor
jmp
xchg
sub
dec
cmp
inc
pop
push
mov
add
idivb
std
out
and
int3
pop
test
jge
jecxz
add
push
inc
mov
cmp
add
rcl
test
pop
cmp
and
shl
mov
aam
sub
popa
daa
push
push
in
cmp
clc
rorb
xchg
cmp
cmc
int3
je
push
and
mov
sub
ss
shrl
dec
cmp
cmp
xchg
pop
sti
add
out
out
and
adc
gs
push
call
jno
adc
andl
int3
jne
sbb
call
dec
es
jmp
aaa
push
add
loope
mov
inc
xchg
sarl
loopne
or
icebp
sub
js
jno
and
sbb
les
dec
push
jg
mov
popa
int3
jne
ljmp
xchg
cmpl
sub
int
or
lea
xor
cmp
cmc
rcll
add
dec
adc
aaa
shll
ja
aaa
mov
jge
mov
cmpsl
and
shlb
rol
jmp
add
hlt
push
sbb
inc
sarl
aaa
in
adc
inc
jl
xorl
dec
ds
mov
dec
cmp
stc
dec
sbb
adc
xor
add
lods
cltd
jne
adc
push
and
add
cmp
xor
xor
jnp
lods
and
xchg
loope
cmp
xchg
push
cmp
and
aad
call
sar
in
inc
mov
xor
jmp
dec
fstl
sbb
repnz
sar
cmp
push
cmp
xchg
aad
cli
mov
repz
jecxz
push
inc
leave
pusha
adc
jge
or
jbe
inc
fdivrl
push
insl
push
cmp
sub
mov
icebp
sub
push
jns
push
loope
movsl
loope
in
aas
sti
pop
inc
push
inc
xor
push
xchg
das
or
movsl
adc
loope
mov
and
xor
fsubrs
push
or
cmp
push
xchg
mov
movsb
inc
dec
and
xor
inc
fwait
lds
or
mov
jno
js
xchg
inc
cmp
xor
cmpl
sub
sbb
dec
fs
cmp
xchg
xor
popa
inc
int
or
push
cmp
lret
or
cmp
mov
pop
sbb
adc
js
filds
push
mov
xchg
sahf
adc
stc
jne
out
xor
push
add
jno
adc
mov
push
mov
inc
or
mov
xchg
jmp
dec
rorl
inc
sub
cmp
loope
mov
adc
push
push
jns
cmp
sbb
addb
and
loope
mov
dec
push
dec
flds
out
and
or
adc
jmp
jne
call
lret
adc
ss
test
jle
pop
hlt
test
ds
popa
aaa
push
jno
insl
popa
aas
jl
aaa
cmpl
add
aaa
xor
and
ss
loope
xor
adc
adc
leave
xor
sub
mov
or
cmp
push
xor
cmp
sbb
push
push
push
sti
sbb
movsb
negl
dec
aaa
mov
push
stc
lds
mov
shl
inc
mov
pop
adc
lds
scas
and
dec
mov
sbb
rcll
pop
or
int
mov
repz
lret
cmp
clc
push
fldt
insb
jmp
adc
test
outsl
sbb
aas
stos
lahf
push
stc
int
repz
cwtl
mov
rcll
dec
into
ss
int
jbe
pop
rclb
adc
jmp
or
fdivrp
mov
mulb
inc
xchg
cmp
inc
add
mov
dec
jmp
fdivs
orb
lahf
lret
js
xchg
mov
sahf
add
xor
test
lret
enter
inc
jb
dec
call
pusha
xor
pop
pop
jmp
in
xchg
push
add
ljmp
jno
push
sub
mov
lea
push
popa
jbe
shl
push
sub
pop
inc
mov
ss
mov
mov
divl
pop
aas
imul
fwait
or
mov
push
inc
or
mov
xchg
push
ja
sbb
inc
sbb
addps
lcall
jle
mov
push
lods
cmp
cmpsl
push
sbb
pop
loop
jns
jns
ja
jp
and
jge
push
push
add
cmp
loope
jecxz
paddw
in
push
xchg
pop
mov
or
in
imull
push
mov
add
sub
push
cltd
dec
mov
adc
ret
xchg
int3
enter
loopne
dec
cmp
jne
sbb
negl
mov
nop
cmp
push
dec
mov
jns
push
sbb
fcmovnu
shll
mov
pop
enter
movsb
mov
sbbb
mov
jne
aas
jecxz
loope
adc
movsl
dec
leave
mov
push
jg
sti
mov
daa
std
push
xchg
sub
in
insl
add
outsb
test
push
dec
inc
clc
inc
out
push
jle
or
push
lret
pop
and
or
out
add
movsl
aas
cmp
pop
inc
or
out
cmp
in
cmp
adc
or
pop
mov
fcmovb
and
lods
sub
or
cli
adc
pop
jmp
jmp
add
inc
cmp
mov
out
push
les
dec
pop
pop
and
and
and
xor
inc
je
or
cmc
cld
rorb
loopne
and
sub
push
jmp
out
ljmp
clc
in
out
or
jecxz
mov
add
pop
pop
cmc
sahf
rcll
sbb
mov
roll
adc
inc
hlt
lock
mov
rolb
xor
mov
int
adc
mov
iret
repnz
in
in
cmp
hlt
mov
mulb
out
cmp
es
xor
rorb
loopne
rclb
icebp
push
sub
sub
out
enter
or
dec
cmp
rcll
lock
xchg
and
or
and
adc
movsb
icebp
lods
sbb
inc
out
jno
jns
hlt
pop
sub
fdivl
pop
leave
jno
xlat
cmc
mov
addr16
icebp
lods
or
jmp
outsl
jle
fnsave
pop
je
dec
add
pop
ret
pop
aad
jmp
jbe
sbb
dec
and
clc
ss
hlt
adc
clc
addr16
inc
push
sbb
jmp
ss
and
jns
xor
lods
inc
lds
jnp
leave
lock
xor
jno
inc
icebp
and
lahf
inc
cmp
or
pop
mov
stos
icebp
xor
add
pop
mov
jmp
in
out
or
leave
or
not
loope
jmp
pop
leave
cmp
adc
pop
rorl
cmc
loope
mov
daa
mov
pop
imul
dec
dec
aas
in
aas
fs
ljmp
xor
cli
sahf
ret
add
or
add
pop
mov
sarl
jns
sti
jnp
in
clc
loopne
push
clc
cmp
dec
mov
mov
push
lds
popf
aaa
inc
adc
addr16
ret
dec
push
push
xchg
push
filds
vpunpckhbw
popa
pop
adc
push
add
lahf
xchg
sbb
loope
or
clc
insl
icebp
jno
int3
lods
test
cmp
push
ljmp
incl
cmp
ss
fstl
pusha
addr16
inc
or
fsts
fisttpl
push
pop
jns
roll
dec
dec
popf
jno
in
pop
dec
push
inc
dec
xor
ss
ret
push
sbb
into
dec
inc
add
mov
push
in
and
push
int
xor
mov
inc
jae
inc
lar
push
in
repnz
ljmp
rol
out
mov
dec
in
scas
inc
mov
das
out
ret
sub
sbb
cmpsl
cld
cvtps2pi
inc
icebp
pop
inc
in
adc
and
mov
ret
inc
xchg
ljmp
push
mov
mov
adc
adc
or
sbb
push
rcr
and
xor
add
cmp
pop
mov
test
ja
xor
in
xor
mov
sti
adc
aaa
insl
icebp
cmp
jp
cmp
loope
push
inc
enter
popf
mov
xor
ja
cmp
xchg
sub
test
push
lds
xor
ret
cmp
sub
test
sbb
out
outsl
push
repnz
adc
mov
jmp
mov
xor
lahf
aas
inc
or
xor
call
fnstenv
cmp
jmp
outsb
jns
sbb
xor
adc
xor
enter
shll
jecxz
out
setge
js
mov
in
xchg
adc
mov
test
mov
nop
in
jmp
pop
mov
cmp
pop
push
mov
aas
ror
adc
out
aas
mov
cli
in
lock
push
in
sbb
loope
jmp
ljmp
push
std
or
fistl
stos
cmpb
jp
lret
pushf
out
sbb
adc
jmp
mov
popf
test
sub
xor
sbb
mov
or
cmpsl
or
dec
push
in
inc
fnstcw
sbb
dec
leave
cmp
mov
push
inc
cmp
loope
push
dec
xchg
shll
popa
cs
daa
add
dec
inc
shr
inc
dec
xchg
imul
rcrl
cmpl
cmp
clc
cmp
shrl
cmp
les
les
cltd
mov
popa
jne
xor
push
push
cmpsb
push
les
and
jecxz
xor
xor
ja
mov
dec
les
cmp
or
lahf
leave
aam
cmc
icebp
adc
adc
divl
adc
or
dec
popf
mov
push
xor
cmpsb
mov
cwtl
dec
inc
add
dec
shll
repnz
xchg
leave
cs
fldenv
repnz
pop
jne
jmp
sbb
in
adc
lret
sbb
xor
mov
hlt
ljmp
sub
aaa
sbb
inc
loopne
repz
jmp
or
jno
icebp
stc
popf
cltd
mov
pop
xchg
push
or
aaa
pop
icebp
call
lret
inc
repz
inc
andb
out
add
scas
das
orl
adc
in
hlt
xor
inc
daa
rol
outsl
jle
nop
pop
mov
mov
sub
iret
push
inc
xorb
mov
rolb
lock
adc
dec
lods
inc
mov
pop
std
jmp
sub
adc
sti
adc
stc
sysexit
mov
adc
fprem
pop
sub
mov
vaddpd
xor
dec
and
add
daa
mov
mov
push
fadd
and
push
adc
popa
cmp
bound
pop
dec
dec
push
pushf
jmp
push
in
imul
ljmp
mov
clc
sub
inc
mov
lods
or
in
mov
sub
push
cmc
xor
lds
or
lret
jmp
imul
xor
adc
je
test
pop
aad
repnz
aas
and
ljmp
outsl
gs
popa
in
sub
add
sub
mov
loope
and
dec
push
mov
std
or
mov
mov
push
std
mov
and
xor
stc
adc
or
in
jmp
mov
cmp
inc
lcall
add
adc
out
push
or
push
jae
pop
push
mov
cmpsl
jne
sbb
es
cmp
ljmp
xchg
fildll
adc
or
xor
or
sahf
pop
pop
push
push
sbb
repz
icebp
out
push
pop
cmp
daa
mov
cmpsl
inc
xor
jb
nop
adc
or
fbld
sub
jmp
cmp
add
dec
enter
in
xchg
add
pop
mov
add
inc
sub
in
jno
insb
xor
mov
loopne
or
xor
ret
push
in
xor
mov
push
and
ficoml
dec
mov
push
int3
and
adc
lods
and
mov
xchg
xchg
push
mov
test
pusha
mov
push
jp
jecxz
xchg
cmp
ret
push
pop
dec
cmc
or
stc
js
adc
aam
pop
mov
xor
aad
sub
movsl
xchg
test
popl
shrb
aaa
mov
dec
mov
jnp
scas
sbb
push
dec
mov
and
pushf
leave
icebp
ss
in
inc
jno
add
jmp
inc
lods
sti
or
aam
lcall
in
xor
lods
sub
push
dec
mov
sub
dec
dec
adc
clc
add
xor
xor
sbb
adc
icebp
clc
mov
fistpll
loope
das
push
or
std
out
test
mov
aad
jmp
pop
addb
imul
sti
jo
ja
add
mov
sub
scas
adc
inc
jns
icebp
imul
cmp
add
pop
inc
mov
imul
pop
push
fildll
sub
xchg
push
add
adc
or
mov
pop
imul
dec
lcall
ds
push
popf
les
inc
out
cmp
or
ret
insl
sub
ljmp
xor
push
pushw
div
or
dec
sub
mov
dec
xor
popa
into
sbb
jecxz
iret
sbb
vmwrite
es
and
mov
pop
mov
pusha
jl
dec
out
inc
push
test
xchg
mov
cmp
inc
xchg
push
cmp
xor
sti
xor
push
aaa
popa
add
adc
pop
mov
addr16
xor
fwait
femms
xchg
mov
mov
sbb
insl
loope
mov
push
jmp
cmp
test
pop
jle
sub
imul
rclb
xor
pop
jbe
icebp
add
movsb
mov
jno
push
mov
pop
xchg
rcrb
and
sbb
daa
adc
xor
dec
inc
and
jmp
xor
xchg
popa
gs
sbb
or
loope
aaa
mov
mov
lret
push
icebp
ja
inc
inc
sub
xor
popa
mov
mov
leave
int
adc
push
stc
xor
dec
jmp
mov
and
adc
enter
js
push
push
shll
shr
rcll
add
inc
or
mov
adc
jmp
rorl
jle
icebp
stc
scas
stc
or
push
rcl
loopne
jne
mov
or
inc
push
andl
test
push
dec
cmp
dec
sbb
push
cli
imul
push
sbb
dec
push
mov
into
adc
ret
cmpsb
pop
mov
cmc
dec
cld
jno
ret
dec
adc
pop
lods
push
dec
dec
mov
ja
xor
sub
lcall
sbb
leave
or
inc
stc
xor
stos
fdivrs
push
movb
xchg
push
push
push
je
dec
cmp
imul
mov
dec
inc
adc
enter
cld
aaa
inc
adc
push
clc
lds
dec
aas
adc
inc
cmp
or
sarb
fbstp
xchg
aaa
pop
adc
xor
push
out
notl
fisttpll
push
mov
dec
push
inc
xchg
and
out
inc
push
in
idivl
mov
inc
dec
rolb
push
push
inc
cmp
and
dec
sbb
adc
xor
and
push
push
hlt
add
stc
add
fucomp
or
enter
adc
xor
fldenv
xlat
daa
cmp
and
or
inc
mov
leave
mov
jmp
mov
xorb
inc
dec
ljmp
cli
aam
loopne
imul
push
sub
and
clc
and
cmp
inc
loope
ret
and
inc
dec
daa
sub
xor
xor
vaddps
ja
in
lods
pop
imul
fsts
jmp
cltd
adc
push
rcrb
push
dec
aaa
adc
adc
enter
pop
iret
add
push
decl
inc
cmp
push
inc
and
icebp
or
icebp
dec
push
into
insl
or
sbb
dec
push
xor
jns
addr16
inc
popa
cmp
push
inc
xor
sbb
aaa
dec
adc
inc
dec
xor
mov
fst
jno
fsubl
daa
inc
dec
xor
adc
push
aaa
stc
lret
dec
mov
pop
loope
loope
leave
dec
dec
xor
cltd
aaa
dec
adc
inc
dec
sub
rcll
adc
inc
icebp
xor
jmp
rcll
repz
xchg
xor
adc
dec
dec
push
mov
sbb
xchg
jmp
xor
inc
aaa
mov
inc
inc
jno
inc
pop
pushf
jnp
inc
dec
inc
inc
sti
xor
adc
adc
dec
cmp
cmp
mov
cmp
cltd
adc
inc
imul
aaa
fists
inc
loope
or
pop
shl
dec
cmpsb
sub
ja
test
xchg
adc
inc
popa
xor
push
cmp
adc
inc
cs
shll
sbb
mov
xor
loopne
sbb
rolb
adc
sub
adc
loope
movups
enter
adc
inc
xorl
aaa
or
inc
pop
xor
icebp
aaa
add
rcll
enter
adc
inc
add
dec
stc
adc
inc
sbb
sti
aaa
jmp
stc
inc
mov
enter
adc
inc
push
dec
push
lock
adc
inc
in
xor
loope
jmp
leave
jmp
xor
xorl
rcll
fsub
inc
cmp
loop
or
inc
or
fisubrs
xor
popa
cmp
cmp
cmp
push
adc
dec
cmpsl
push
push
add
mov
mov
dec
adc
adc
sub
jno
adc
cwtl
inc
push
lock
sub
out
adc
inc
shlb
aaa
ret
cmc
leave
sub
rcrb
adc
imul
adc
inc
and
jbe
icebp
cmp
pop
pop
dec
fcoml
shrl
test
push
sbb
inc
xchg
aad
cmp
popa
fstpt
push
inc
push
fistl
and
cmp
add
shlb
sbb
shll
dec
xchg
mov
push
mov
andl
push
push
inc
ja
cmp
xor
shlb
sbb
add
dec
xchg
loope
push
shll
cmp
mov
mov
adc
popa
popa
push
inc
rclb
pusha
and
adc
push
add
cmp
loope
rcl
jne
sbb
mov
mov
orl
push
inc
fistl
xor
cmp
adc
shlb
sbb
loope
rorl
rcr
mov
mov
cmpl
shlb
aas
cmp
pop
xor
jne
sbb
adc
dec
xchg
icebp
fistl
loope
sarl
leave
rcrl
jne
sbb
shlb
sbb
jno
popa
dec
xchg
push
sbb
inc
pusha
xor
and
push
adc
cmp
icebp
pop
loope
jne
sbb
shll
xchg
mov
sbb
cmp
push
cmp
xor
leave
and
shlb
sbb
icebp
pusha
loope
xchg
rcr
push
shll
leave
mov
sbbl
dec
push
cmp
inc
shlb
sbb
and
dec
xchg
add
push
icebp
loopew
leave
rcrl
shlb
sbb
mov
andl
cmp
push
fistl
and
cmp
add
shlb
sbb
shll
dec
xchg
mov
push
mov
andl
push
push
cmp
cmp
xor
shlb
sbb
add
dec
xchg
loope
push
shll
cmp
mov
mov
adc
popa
popa
push
cmp
xchg
inc
sbb
xor
jnp
dec
add
fnstenv
int3
jmp
push
dec
lods
imul
stos
imul
imul
rol
sbb
jns
dec
adc
lret
mov
push
mov
push
icebp
mov
inc
push
dec
dec
imul
push
dec
dec
test
mov
pop
sti
push
dec
dec
push
sbbl
xchg
aam
inc
dec
imul
dec
rcrl
sub
pop
sarl
iret
jns
dec
mov
lret
leave
lret
mov
loope
sbb
aad
dec
in
fsts
add
popf
loop
sub
hlt
fidivrl
out
sbb
xchg
xchg
sub
inc
push
push
aad
sub
push
and
hlt
fldenv
sub
sub
sbb
pop
loopne
decl
dec
or
xor
mul
inc
push
mov
push
mov
inc
xor
inc
icebp
mov
divl
sbb
cmp
int
cmp
int3
inc
mov
mov
adc
fldenv
push
dec
sub
push
ror
or
push
js
iret
stc
inc
mov
fnstcw
and
stc
xchg
push
cmp
fadds
dec
dec
mov
xor
sub
add
dec
in
sbb
mov
inc
jecxz
test
out
dec
cld
push
add
dec
test
or
enter
jbe
jmp
mov
ret
loope
scas
fdivr
dec
inc
pop
ficompl
adc
jmp
inc
fisttps
test
popfw
dec
sbb
push
js
call
cltd
aam
pop
insl
mov
test
pop
jbe
mov
cmp
aad
mov
jmp
add
test
shlb
sub
dec
dec
xor
dec
das
push
js
lret
pop
xchg
push
dec
dec
and
xor
xor
or
testl
push
cmp
xchg
or
sub
xchg
jbe
mov
outsb
inc
sbb
test
imul
pop
sub
push
xchg
cwtl
dec
mov
push
pop
cmp
push
aad
inc
dec
popa
jmp
cmp
movhps
add
xor
cmp
or
ret
sbb
jno
pop
jge
xchg
xchg
adc
mov
dec
dec
jne
xor
or
std
cld
push
out
cmp
lods
hlt
inc
sarl
test
out
sub
jmp
leave
sbb
xchg
mov
sbb
movsl
fcom
or
jns
cmp
cmp
sub
inc
sbb
adc
or
sbb
xchg
dec
lock
adc
add
adc
cmp
push
xchg
jge
xor
cmp
aad
mov
jns
shll
or
popf
cltd
push
mov
dec
daa
adc
xor
jbe
jl
stc
adc
mov
movsl
imul
cmp
sub
adc
repz
xchg
dec
jecxz
cmp
pop
js
call
dec
add
int3
dec
scas
dec
cmp
loope
fadds
dec
movsl
scas
dec
dec
loope
scas
lret
lods
imul
stos
imul
test
xchg
cmpsb
lret
lds
fxch
push
jge
imul
leave
imul
shrb
loop
push
mov
imul
icebp
add
add
jg
mov
add
sub
sub
sbb
pop
hlt
dec
dec
adc
lret
orl
pop
jg
sbb
clc
jmp
imull
clc
add
xchg
sub
and
adc
and
cmp
ljmp
lcall
push
out
fsubr
inc
lock
adc
xor
sbb
xor
test
xor
data16
dec
loope
scas
sarl
push
jg
push
and
das
sbb
call
clc
and
movsl
out
cld
cmpsl
aad
add
pop
jbe
pop
mov
jae
clc
cli
adc
inc
hlt
test
std
pop
cmp
dec
push
mov
leave
adc
inc
sbb
fists
andl
fistpl
mov
stos
mov
and
das
in
adc
fstpt
out
orb
mov
int
negb
mov
push
divl
mov
or
iret
xor
test
mov
xor
arpl
add
jae,pn
fcmovne
loope
xchg
ret
xor
fchs
dec
aaa
push
cmpsl
out
mov
push
inc
xchg
seto
aas
jne
cmc
pop
jo
xchg
push
add
in
mov
fcompl
movsl
fsubl
in
and
xor
mov
loope
lea
cmp
clc
sbb
pop
iret
cmc
arpl
in
je
sbb
mov
push
pop
inc
or
lock
push
pop
stos
subb
adc
in
ret
in
mov
jnp
fnstsw
dec
aaa
rep
jg
sub
cmp
jg
repnz
movsb
mov
mov
fucom
mov
mov
std
insb
bsr
lock
je
out
notl
movsl
imul
std
in
movsl
repz
enter
xchg
inc
loop
lods
leave
push
cmc
incl
leave
or
clc
or
jg
enter
scas
cmc
shl
lahf
aaa
in
iret
in
movsl
add
or
sub
sbb
jo
adc
mov
or
push
int
lahf
inc
push
sbb
xor
ret
xor
in
cld
jg
cld
jne
mov
lods
fwait
or
out
push
xlat
or
in
and
ret
in
loop
nop
and
lock
inc
mov
lret
sub
ljmp
mov
xlat
and
icebp
jno
push
std
adc
lods
sub
test
jo
pop
int
push
cmp
nop
dec
push
call
xor
cmp
mov
in
mov
fldcw
dec
push
inc
cltd
jg
dec
dec
push
dec
pop
push
mov
push
cmp
dec
popa
shl
pop
bound
loop
loope
pop
pop
ret
pop
jg
push
and
fwait
mov
pop
adc
or
pop
jmp
imul
mov
mov
push
aaa
xchg
iret
negl
mov
sbb
addr16
pop
inc
inc
and
mov
mov
popf
jno
js
mov
dec
push
inc
cmpsl
or
insl
hlt
xlat
dec
jle
adc
xor
scas
push
push
in
cmc
cmc
inc
sbb
add
int
cmp
sahf
lahf
jae
std
mov
stc
or
dec
xor
mov
jg
loopne
dec
sbb
jmp
mov
mov
mov
cwtl
daa
shll
sub
mov
adc
fcoms
out
shrb
sub
jge
jge
in
dec
cmp
push
sub
xchg
lods
cmp
rcrl
pop
pop
xchg
push
pop
dec
imul
pop
sub
dec
push
push
cmp
adc
fisubrl
xchg
xor
cmp
jp
lret
mov
in
iret
loope
ja
subl
mov
and
cmc
pop
mov
jp
in
add
cmpsl
push
call
cmp
out
leave
adc
mov
lcall
in
ljmp
mov
push
sub
pop
sbb
ljmp
aam
mov
xchg
rorb
push
push
fcoms
daa
icebp
dec
jno
hlt
pop
push
fadd
pushl
add
adc
imul
ret
mov
int
dec
repnz
adc
in
je
cwtl
sub
ret
movsb
in
daa
lods
hlt
xchg
fnstsw
xor
inc
xchg
repz
add
hlt
rolb
mov
subl
rcll
mov
or
jg
cmp
icebp
add
or
dec
mov
imul
jmp
push
push
dec
dec
imul
into
in
add
insl
les
insb
jmp
pop
sbb
dec
test
ljmp
aam
int
xor
das
int
mov
or
cmp
leave
lea
std
pop
jle
aaa
cltd
lret
mov
mov
mov
push
push
pop
into
pop
int
shrb
push
jne
or
jg
pop
push
hlt
add
or
adc
jge
jnp
add
filds
cmp
mov
mov
dec
cmp
mov
pop
movsb
push
mov
or
lahf
push
inc
stc
mov
das
inc
imul
pusha
inc
adcl
xchg
or
incl
shll
sti
sti
cmpsb
stc
call
je
sti
pusha
cs
test
fstps
addl
and
mov
loop
pushf
inc
loopw
dec
mov
push
cmp
inc
sub
dec
outsb
inc
jmp
fsubl
jmp
add
cmp
dec
sbb
push
popf
sbb
jmp
bnd
cmpb
in
ss
sbb
clc
jle
push
in
dec
mov
loop
insb
out
loopne
out
push
outsb
push
jmp
repnz
and
mov
in
dec
shrb
mov
in
movsb
iret
jmp
ljmp
addl
add
not
lahf
xchg
es
mov
divb
push
xor
xchg
fidivrl
or
shlb
push
dec
outsb
or
adc
jae
aad
je
aas
cmc
cwtl
aam
stos
dec
jg
decl
test
pop
sbb
sbb
cmp
dec
cld
sub
pop
mov
dec
cmp
lret
fstps
pop
mov
adc
aam
jns
cld
pusha
mov
mov
ror
push
call
dec
fldcw
bound
gs
jns
ss
xchg
imul
popf
inc
push
mov
sub
in
loopne
sti
cltd
pop
push
mov
jo
xlat
mov
mov
sub
xchg
clc
int
mov
enter
cltd
mov
xor
enter
adc
push
push
xor
loop
pop
pop
arpl
jns
or
je
jns
jae
test
loop
dec
repnz
cmp
and
loop
mov
insl
fld
pop
int3
push
imul
icebp
mov
pop
push
dec
cmp
xchg
dec
imul
jmp
jg
push
aad
jg
fisttps
mov
add
sub
mov
dec
scas
aaa
stos
imul
dec
fimull
or
dec
testb
sub
dec
jae
sbb
testb
mov
mov
dec
mov
mov
fstps
lods
push
movsl
sub
xlat
popa
rclb
push
dec
jecxz
loope
jnp,pt
dec
xor
pop
cmp
leave
fnstcw
loopne
or
and
xchg
mov
xlat
dec
leave
or
popa
pop
push
mov
dec
jnp
cmp
and
mov
ret
push
cmp
dec
bound
stc
jbe
sbb
dec
aas
push
js
or
dec
scas
or
adc
and
es
or
pusha
xchg
xor
es
xor
or
mov
pop
sub
push
fistps
pop
pop
and
fdivl
outsb
ss
inc
icebp
xor
sar
dec
stos
gs
jle
ret
loopne
ss
addr16
adc
cmp
pop
pusha
dec
in
pop
stos
push
std
les
jo
pop
add
mov
jl
mov
iret
cmp
fsubl
add
pop
sub
sbb
cmc
jmp
test
fs
and
ffreep
mov
mov
sbb
mov
sbb
rcl
push
lods
cmp
mov
call
sbb
jns
pop
jbe
xlat
pop
mov
fisttpl
dec
cmpsl
dec
mov
inc
xor
mov
stc
out
scas
pop
pop
mov
push
pop
pusha
stc
add
push
pop
and
adc
mov
add
or
and
lret
mov
adc
push
mov
xor
sub
popa
cmp
dec
mov
xchg
lods
xchg
or
inc
sbb
add
lock
aam
push
push
xor
fisttpll
fxtract
dec
dec
loope
push
jns
mov
add
push
jns
dec
push
pop
fimull
sbb
fbld
and
dec
push
pop
std
dec
sbb
push
push
push
inc
dec
xor
ficompl
adc
push
add
cmc
pop
mov
jge
adc
inc
jg
mov
lods
adc
jns
lods
push
push
inc
xor
xor
or
push
aas
dec
xor
sbb
leave
or
mov
pop
jae
push
xchg
inc
fistps
fiaddl
dec
xor
dec
and
mov
jmp
fsts
lods
push
push
aas
adcl
push
or
icebp
cltd
cld
cmp
dec
pop
xor
pushf
icebp
xchg
pop
dec
les
jne
push
xchg
push
inc
icebp
and
and
or
jmp
clc
andb
cltd
in
push
dec
dec
xorb
clc
or
add
dec
sbb
mov
xor
sbb
hlt
jmp
adc
cmp
icebp
push
popw
and
leave
and
adc
jmp
sbb
pop
adc
adc
dec
sarb
aaa
push
inc
adc
pop
fsts
sarb
subl
push
push
mov
lds
imul
mov
mov
xchg
push
adc
push
inc
push
push
sbb
push
push
mov
addr16
hlt
sbb
dec
sbb
push
ss
push
in
mov
push
cmp
aad
and
mov
or
add
dec
icebp
inc
inc
mov
and
push
aaa
xor
imul
scas
push
sbb
push
addr16
lods
cwtl
repz
aaa
add
adc
dec
popw
imul
dec
js
mov
mov
add
push
dec
rep
icebp
sub
aad
adc
arpl
hlt
push
stc
sbb
mov
movsl
xor
and
mov
pop
std
shll
push
cmpb
mulb
cli
sahf
sbb
push
fs
mov
movsl
dec
xor
lret
jmp
sub
dec
fldt
pop
jp
repnz
and
mov
sub
and
lcall
cmc
dec
dec
dec
pop
mov
jmp
outsl
cmp
orl
fwait
inc
mov
xlat
scas
and
adc
xor
out
jg
cmp
fldz
not
push
push
jmp
imul
jnp
dec
rorl
dec
jno
stc
loope
cmc
dec
cmp
dec
into
sahf
movsb
cvtdq2ps
add
jl
dec
jle
cmc
punpckhwd
add
pop
dec
mov
jne
int
icebp
mov
fwait
cltd
push
scas
into
fsts
repnz
pop
pop
jno
sbb
rcll
adc
adc
aas
push
shl
mov
cmp
imul
dec
arpl
xlat
lret
push
mov
leave
iret
push
shll
mov
add
mov
dec
test
sub
and
rorb
inc
shlb
mov
daa
xchg
aad
dec
movl
cmp
arpl
xchg
inc
and
mov
movsl
pop
not
adc
cli
xor
jmp
test
cmpsb
cmp
adc
and
cmp
aaa
in
pop
pop
inc
movsb
dec
cmp
cmp
rorl
xchg
rolb
int3
adc
sti
inc
addr16
adc
setae
jns
sub
repnz
and
and
imul
aaa
dec
jle
sahf
loopne
xor
push
mov
fimull
sbb
pop
push
cmpsl
dec
cmpsb
ret
inc
or
cmc
push
aad
lock
xorl
push
pop
iret
jl
pop
test
add
mov
out
sub
idivl
jp
adc
int
stos
adc
inc
fcomps
mov
mov
int3
clc
dec
sub
scas
xchg
sarl
leave
lret
das
icebp
mov
mov
repz
dec
mov
mov
mov
fsubs
pop
in
adc
mov
enter
mov
imul
shrl
ret
lret
and
das
pop
mov
xor
mov
addr16
mov
insl
sti
lds
dec
int
inc
mov
popa
push
js
aas
mov
arpl
adc
out
repz
inc
inc
dec
shll
xor
loope
adc
shll
out
sahf
popa
jne
pop
cltd
inc
adc
mov
jmp
icebp
imul
jmp
inc
sahf
push
icebp
xor
jmp
jp
aaa
mov
push
in
or
stc
je
dec
repz
out
adc
jns
ficoms
jmp
or
shl
sbb
leave
ja
rep
ret
into
test
xor
movl
sbb
rcrl
daa
leave
fcoml
add
dec
mov
fcmovnb
popa
mov
das
popf
sbb
xchg
int
xor
icebp
dec
inc
lret
inc
inc
stc
dec
data16
lods
xchg
inc
push
loop
xor
int
adc
popa
pop
adc
push
inc
int3
dec
adc
dec
xlat
cmp
inc
dec
inc
sub
sub
adc
push
mov
rclb
rorl
dec
pop
inc
mov
lret
movsl
es
cmp
dec
push
add
push
mov
movsl
sarb
mov
sub
inc
pusha
cmpsl
push
adc
cmp
or
lds
push
fnsave
repz
test
push
mov
and
mov
push
in
out
out
push
mov
inc
sbb
dec
scas
push
inc
fbld
jmp
xor
xchg
and
push
js
dec
cmp
push
rorl
sub
js
mov
adc
mov
dec
push
adc
and
or
jmp
push
push
shlb
gs
inc
mov
imul
stc
push
push
enter
push
push
mov
jo
inc
push
cmp
fcoms
mov
rorb
aaa
adc
push
push
sub
aad
push
push
and
dec
inc
pusha
adc
ffree
js
ret
ret
xchg
dec
push
pop
or
rcll
cmpsl
push
clc
rorb
cltd
imul
dec
jns
adcb
sbb
shlb
shlb
pop
xor
sahf
sub
lahf
lds
mov
xor
or
xchg
imul
cmp
dec
lcall
push
rol
xor
xor
insl
jb
adc
mov
push
push
adc
cmp
ret
ljmp
test
fwait
push
push
mov
dec
shlb
mov
and
xchg
aas
ror
mov
push
imul
mov
daa
push
lret
jns
or
push
mov
dec
inc
xchg
adc
push
inc
mov
inc
push
mov
lret
stos
mov
adc
sbb
inc
dec
int3
sbb
push
push
out
popa
sarl
lds
call
push
movsl
insl
lea
jle
test
lret
push
sbb
adc
or
inc
cltd
adcl
cmp
xor
dec
add
mov
ret
push
into
dec
ds
xchg
and
cmp
mov
fwait
in
dec
inc
popf
or
das
mov
cmpsl
push
test
dec
loope
push
imul
push
cmp
cmc
sub
xchg
and
push
enter
and
adc
cmp
xor
cmp
inc
dec
dec
push
std
fs
sub
push
sbb
icebp
and
xchg
fwait
sub
dec
inc
cltd
je
push
rorl
dec
adc
std
mov
imul
in
push
push
mov
mov
add
or
fisubl
fs
mov
nop
dec
dec
sub
inc
xor
fsubrl
nop
dec
or
xor
adc
push
mov
sbb
lea
adc
popa
mov
cmp
ja
mov
dec
leave
orl
mov
pop
sbb
cmp
jne
xchg
mov
inc
std
enter
sbb
in
push
and
mov
push
mov
sysenter
pop
add
xchg
inc
and
push
mov
dec
inc
mov
dec
leave
lret
test
mov
in
xchg
rcrb
xchg
aad
mov
adc
mov
mov
xor
adc
pop
inc
mov
xchg
dec
lahf
sbb
test
dec
push
or
icebp
jecxz
pop
rcpps
jno
pop
push
inc
fwait
mov
scas
adcl
add
pop
in
dec
test
roll
div
push
push
xlat
push
mov
ret
out
ret
xchg
or
pop
jbe
adc
adc
setae
in
push
add
sub
sub
icebp
xorb
lret
cmc
mov
xor
add
dec
xor
ss
push
add
pop
or
popa
aam
test
gs
leave
iret
dec
aaa
mov
mov
mov
dec
icebp
rcrl
flds
jne
adc
aad
cwtl
decl
je
sahf
push
push
fisttps
mov
mov
loope
lods
roll
inc
mov
jge
inc
sbb
stc
jne
fldenv
jmp
imul
outsl
push
aaa
mov
dec
les
pop
adc
imul
or
inc
daa
out
aas
add
push
mov
xchg
stc
add
mov
arpl
inc
mov
push
inc
mov
insb
cmp
dec
lock
out
cmp
xchg
xor
push
mov
jge
movsl
je
xor
lock
in
mov
jg
adc
ja
dec
push
and
call
sbb
push
push
inc
ret
fmull
sbbl
dec
dec
int
inc
xchg
push
push
in
or
push
lds
adc
loope
lcall
mov
and
dec
arpl
push
int
adc
pushf
dec
imul
jmp
sub
pop
movl
aaa
in
jmp
push
or
call
lods
test
inc
dec
dec
xor
lods
dec
push
dec
lcall
sbb
cltd
add
imull
stc
mov
in
jae
mov
push
lods
hlt
das
flds
mov
cmpsl
inc
dec
pop
scas
mov
adc
or
cmp
add
inc
dec
sbb
jmp
leave
xchg
inc
lcall
xchg
aas
xchg
mov
dec
inc
add
mov
inc
push
sbb
lret
dec
pop
gs
fstpt
imul
insb
xor
mov
nop
mov
inc
fwait
xlat
push
inc
mov
dec
cmc
subb
inc
ja
cmpsl
mov
call
jnp
add
mov
jae
enter
rolb
xchg
push
aaa
mov
fiaddl
pop
mov
imul
incl
scas
jno
in
call
adc
in
inc
test
dec
bound
mov
xchg
call
dec
das
xlat
leave
fimull
mov
mov
jns
shlb
mov
lcall
int
xor
ljmp
mov
dec
lahf
orb
push
repz
sbb
mov
cli
pop
aad
dec
mov
or
cmpsl
mov
pop
xchg
cmp
cmpsl
push
pop
push
sub
dec
insb
pop
and
fmul
repz
movsl
fdivrl
or
add
cs
push
inc
cld
push
push
fdiv
fwait
loope
test
repnz
sbb
jle
or
cmc
push
dec
in
gs
adc
add
xor
and
popa
cmp
jnp
adc
push
daa
mov
out
xor
mov
icebp
push
adc
aaa
js
orb
inc
mov
out
cmc
xor
jmp
dec
in
inc
sbbb
cmp
xor
push
sbb
gs
xor
repz
cmp
dec
sbb
addl
mov
lea
jmp
jo
fucomp
dec
je
adc
or
xlat
icebp
mov
loope
js
cmp
push
lea
out
lea
push
push
inc
dec
sahf
push
fdivl
sahf
xchg
fnsave
dec
dec
add
push
jecxz
pusha
movb
xchg
jp
iret
std
das
pop
push
outsl
or
pop
mov
int3
lds
push
cmc
inc
dec
imul
movsl
enter
icebp
add
adc
movsl
call
and
leave
xchg
jg
push
pop
loope
dec
mov
scas
or
mov
scas
mov
add
sti
lea
cmc
xchg
jae
xchg
arpl
cmp
sti
mov
stos
aas
mov
lods
and
add
sbb
dec
and
mov
mov
push
mov
inc
sub
bound
add
pop
cmp
lret
push
movsb
fists
xlat
ljmp
pop
sub
movq
insl
cmpsl
sub
mov
fisttpl
lcall
or
push
dec
ljmp
dec
rorl
dec
xlat
xor
call
xor
inc
pop
lock
adc
xor
aaa
xor
jmp
push
mov
bound
xchg
roll
pop
pop
mov
lcall
test
sarl
dec
iret
mov
outsb
ret
int3
push
or
dec
test
repnz
pop
inc
mov
add
xor
xor
inc
mov
fidivrl
inc
jne
jecxz
xlat
xchg
imul
in
mov
xor
cmp
push
out
lea
push
adc
inc
mov
push
push
dec
gs
jp
inc
dec
hlt
ror
or
adc
dec
inc
push
pop
push
loope
stc
in
cmp
cwtl
popa
lcall
sti
xchg
xor
jmp
stos
inc
add
adc
loopne
imul
sbb
jae
push
rorb
je
sbb
or
pop
push
inc
mov
mov
mov
in
pop
xchg
in
inc
mov
ja
inc
movb
push
test
or
xchg
and
nop
lds
mov
mov
jo
sbbl
dec
ret
sbb
adc
aad
int
inc
or
dec
mov
aad
and
icebp
or
sub
out
popa
xchg
xchg
mov
dec
inc
sub
mov
xchg
dec
add
push
dec
cltd
imul
xor
lret
les
mov
dec
mov
adc
les
in
mov
adcl
or
or
dec
movsl
mov
adc
cmpsl
jmp
mov
or
stos
pop
xchg
cmpsl
or
cmp
inc
dec
ja
sbb
dec
dec
popa
stc
gs
repnz
mov
inc
sbb
pushf
dec
out
push
or
push
fisttpll
dec
adc
sbb
jmp
push
insl
jg
stos
adc
pop
movsl
test
clc
insb
pushf
inc
lcall
adc
xchg
or
mov
movsl
mov
adc
sub
cmp
jmp
push
mov
jecxz
push
into
mov
mov
mov
pop
mov
ret
add
sub
dec
das
jl
cmp
push
ret
addr16
dec
mov
push
pop
mov
popa
xchg
mov
or
or
ja
xor
sub
stc
aaa
push
lcall
pop
unpcklps
pop
aaa
xchg
add
xor
xchg
mov
ljmp
and
lds
push
repz
mov
inc
mov
dec
js
push
es
stos
aaa
loope
or
push
popl
notl
dec
hlt
inc
std
dec
cmp
dec
test
mov
mov
xor
sbbl
xor
dec
mov
push
mov
dec
xor
sub
movsl
mov
jge
xor
testl
sbb
dec
adc
sbb
push
pop
pop
adc
dec
lds
dec
mov
movsl
mov
das
dec
mov
sbb
xchg
dec
mov
loopne
je
movsb
pop
fistl
sbb
aad
aaa
adc
and
les
push
push
decl
adc
mov
mov
xlat
push
lock
aas
adc
push
dec
fxch
sbb
fisttpl
xor
lock
rcr
add
aas
sbb
mov
mov
out
inc
add
pop
ss
ljmp
cmc
lds
arpl
leave
dec
out
mov
aad
sub
xor
and
adc
repz
shl
sbb
inc
dec
shrb
cmovne
and
add
inc
add
mov
inc
pop
inc
adc
xchg
dec
or
cmp
push
pushf
push
push
outsb
and
and
scas
lea
ret
sub
pop
jb
and
cmp
xchg
jecxz
xor
xor
push
and
adc
mov
sub
stos
adc
or
lret
jmp
pop
ret
pusha
jno
mov
pop
cmp
rcr
fs
lea
mov
repz
cmp
adc
stos
push
movsl
sub
xor
rolb
dec
mov
mov
inc
subl
dec
jp
mov
xchg
xor
imul
mov
or
jno
mov
dec
les
repz
lock
sbb
add
mov
lods
xchg
fs
or
outsl
das
or
mov
lcall
out
test
lods
pop
stos
mov
sahf
addl
popf
iret
mov
or
imul
out
mov
mov
fnstenv
fnstcw
out
out
pop
pop
push
dec
push
pop
push
or
popa
sbb
popf
lods
sub
mov
mov
jmp
or
in
popa
mov
xchg
and
and
cmc
shlb
div
subl
cmpsl
sbb
jmp
out
daa
add
add
loope
pop
fiaddl
out
push
call
pop
xchg
pop
push
pop
adc
add
xor
and
in
xor
xchg
push
push
jne
or
adc
add
repz
or
std
fnstenv
out
or
and
cs
cmp
sbb
shrl
or
shrb
cmp
push
sub
gs
popf
dec
push
cmp
aad
jno
subl
inc
cmc
push
push
loope
jge
sbb
mov
push
push
aaa
in
adc
shll
xchg
shll
dec
dec
int
imul
cmp
jne
adc
aaa
dec
dec
push
in
adc
dec
push
dec
aaa
icebp
adc
dec
std
inc
push
cltd
aaa
xor
insl
rorl
inc
dec
movsl
dec
inc
inc
aaa
fstl
mov
dec
inc
fsubr
inc
test
and
mov
cmc
adc
leave
shlb
add
push
popf
aaa
cmp
rorl
inc
cmp
loope
jge
sbb
mov
push
cmp
in
inc
mov
and
pop
sar
aaa
dec
xchg
dec
xor
aaa
int
imul
inc
jne
adc
push
lods
adc
enter
xor
mov
icebp
shrl
das
fadd
inc
popa
aaa
std
cs
cltd
adc
roll
cmp
insl
xchg
dec
adc
push
xor
jmp
jo
dec
mov
ret
cmp
dec
inc
fnstcw
mov
dec
scas
test
and
push
flds
sarl
sub
mov
and
mov
call
mov
xchg
dec
pop
adc
fsts
lcall
jge
std
mov
or
and
and
dec
xchg
iret
push
inc
jbe
aaa
cmp
sbb
xchg
out
pop
or
cmc
scas
lea
push
cmc
rcrb
loopne
cmp
sbb
lods
push
adc
in
pop
adc
cmp
push
mov
icebp
add
xchg
cmc
mov
inc
enter
jo
sub
push
push
adc
xor
and
sbb
dec
aam
leave
out
and
dec
or
or
xchg
pop
push
xchg
pusha
inc
std
lea
cwtl
cs
pop
xlat
mov
adc
xor
inc
insl
sbb
adc
mov
fdivrl
sub
pop
inc
rcll
sbb
cmp
cli
dec
adcl
pop
mov
shrl
cmc
subb
lret
adc
xchg
jne
cld
lds
in
push
cmc
sub
lcall
pop
lds
cs
rcll
fsub
cwtl
stos
cmc
jne
rcll
repnz
out
or
push
and
xor
dec
fcomps
dec
das
lds
xchg
sub
jo
pop
mov
adc
daa
push
imul
cmc
sbbb
dec
fcoml
cmc
dec
lods
icebp
lret
adc
xor
mov
add
inc
aaa
leave
popa
fxch
ss
push
inc
sbb
xchg
inc
mov
mov
cmp
ror
das
nop
inc
push
stc
inc
into
leave
ja
and
in
mov
add
inc
dec
mov
xchg
xor
rorl
cmc
aad
aaa
inc
stc
inc
loop
rorb
or
sub
or
cmc
mov
and
sbb
aaa
jmp
sbb
pop
push
cmc
rorl
adc
mov
ret
push
add
and
mov
sahf
daa
dec
mov
xchg
fcmovb
sub
iret
inc
cmc
adc
and
dec
xchg
and
xchg
adc
xchg
iret
inc
roll
fwait
xor
std
lds
xchg
jns
mov
and
inc
xor
push
and
adc
popf
jl
cs
kmovb
test
popa
jmp
push
das
ds
lahf
loope
push
xchg
push
add
shl
ss
rcr
nop
lahf
cwtl
add
sub
sub
iret
mov
xor
and
cwtl
pmaddwd
cmp
pop
cmc
insl
mov
cltd
cmp
and
inc
adc
ret
mov
loope
jge
mov
ret
mov
push
lods
and
add
cmp
loopne
repnz
push
into
and
cmpsb
jno
mov
adc
rorl
sarb
push
movsl
xchg
idivb
mov
mov
add
popf
movl
xchg
lods
or
in
rorl
test
jne
xor
mov
or
or
popa
mov
imul
xchg
add
xor
icebp
dec
xchg
xchg
xor
ss
rorl
xchg
add
sbbl
sub
sbb
jmp
cmpsl
xor
cmc
mov
sub
ss
lds
lds
and
das
leave
shlb
aam
cld
sub
sbb
jmp
cmpsb
xor
nop
xchg
dec
fsts
dec
inc
enter
jno
ds
std
mov
in
clc
cli
dec
orl
add
fldenv
cmp
push
mov
inc
jo
jns
test
add
sahf
or
aas
dec
xchg
push
push
subb
lds
mov
mov
test
gs
jbe
xor
cmpsl
and
push
out
push
inc
test
in
cli
push
and
jno
xchg
add
sub
xor
popa
pop
jg
push
hlt
cmp
sub
adc
mov
push
mov
imul
les
mov
fst
cmc
adc
daa
inc
dec
push
push
int
addr16
sub
pop
call
adc
xchg
push
xchg
sub
or
std
es
adcb
icebp
dec
into
mov
adc
out
mov
push
rorb
popf
jns
push
test
inc
xchg
sub
shll
xchg
sbb
jmp
lods
and
push
rorb
popf
dec
adc
enter
and
leave
or
inc
aam
sub
sub
fldenv
sahf
or
movsl
shrl
inc
xor
or
pusha
cld
push
or
xchg
add
jge
adcb
je
daa
cmc
jns
xor
cmpsl
cltd
mov
jns
pop
shlb
inc
iret
adc
cmc
popa
adc
shll
cmp
in
lea
sub
cmc
pusha
sbb
lret
jge
mov
inc
enter
jne
adc
lahf
adc
popf
sbb
in
icebp
xchg
xchg
push
dec
and
jne
jge
movsl
mov
adc
jecxz
push
dec
mov
sbb
mov
in
inc
aam
mov
lea
sbb
xchg
pusha
sbb
jno
ja
xchg
mov
push
dec
pop
mov
js
mov
stc
lret
push
xchg
pop
popf
repz
clc
cwtl
jo
push
scas
xor
mov
jne
std
dec
push
or
mov
lods
pop
mov
sbb
les
sub
pop
shl
inc
adc
imul
movsb
fsqrt
ss
lds
cmc
pop
xchg
inc
or
or
movsb
dec
ja
shl
cmp
not
mov
sbb
add
loope
cmp
cmc
std
rcr
and
mov
add
adc
push
iret
lea
mov
in
xchg
and
cmp
mov
fldl
into
loope
jo
cmpsb
adc
mov
out
and
mov
cmc
xor
mov
insl
xorl
jo
cmpsb
jge
les
imul
inc
lret
sub
scas
and
dec
fstpl
rorl
lahf
pop
lods
or
leave
fwait
dec
cmp
in
repz
dec
jmp
cwtl
sbb
sbb
cmc
into
pushl
push
orl
les
jb
rorb
push
leave
test
ja
inc
rorl
push
xchg
test
stos
and
cmp
or
xor
xor
rcrb
or
das
loope
or
dec
push
or
sub
daa
pop
das
xchg
sub
xor
sbb
fsubs
push
inc
popa
mov
imul
xchg
add
pop
cmc
cmp
mov
xchg
xchg
xor
ss
mov
nop
lahf
pop
xchg
cltd
fisttpl
xchg
fstl
xchg
xor
cmc
pop
aad
leave
les
push
inc
adc
mov
push
loopne
std
xchg
sbb
sbbb
xchg
jne
xlat
xor
lret
xchg
push
add
bound
mov
cmc
xor
repnz
inc
popf
dec
add
ss
loope
jp
dec
cmp
pusha
add
mov
xchg
imul
cmc
bound
test
lock
ret
sbb
mov
cmpsl
aas
push
push
hlt
cmp
add
add
push
xchg
cmc
aaa
lods
adc
xchg
cltd
push
push
bswap
into
add
inc
jmp
push
icebp
data16
fdivs
dec
ja
and
cmc
jge
ret
mov
stc
int3
std
nop
sub
lahf
and
inc
lea
push
ficompl
xor
mull
sub
out
lahf
adc
lret
xor
lea
aam
push
aaa
fcoml
dec
stos
xchg
sbb
adc
hlt
cli
sub
xchg
jno
xor
push
stc
xchg
gs
cmp
stc
lods
nop
adc
jle
push
or
in
mov
dec
clc
and
sub
xchg
push
xchg
int
cmc
jmp
mov
mov
sahf
loope
dec
sub
sub
sub
cmpsl
adc
shl
push
push
xchg
ja
and
into
dec
push
inc
cmp
or
cmc
enter
xor
dec
dec
ret
iret
xchg
mov
push
push
push
inc
hlt
loope
cmc
imul
jne
push
xor
leave
dec
ja
inc
ror
push
xchg
inc
dec
sub
nop
push
and
rdtsc
jge
test
pusha
repnz
sbb
push
lods
mov
popfw
imul
dec
test
fnstenv
das
popf
lds
inc
aad
sub
cltd
enter
xchg
pop
std
push
push
lea
das
lock
mov
leave
dec
in
rolb
add
add
aaa
popf
jbe
xor
inc
xchg
fstl
imul
adc
test
out
cmc
adc
xchg
adc
aaa
cltd
cmp
and
mov
and
inc
fnstcw
xchg
fwait
dec
cmp
mov
or
push
push
faddp
pusha
and
xchg
movsl
lret
cmp
adc
xchg
add
jmp
std
cmp
cmc
fstpt
stc
mov
cmc
mov
lahf
inc
icebp
dec
test
nop
and
mov
dec
inc
enter
and
aam
push
dec
int
in
dec
daa
cwtl
jo
xchg
sub
call
sbb
fsts
xchg
call
leave
mov
cwtl
mov
xor
jno
out
adc
cli
push
test
xchg
or
sub
fsts
dec
mov
ror
repz
dec
xchg
sub
stc
cmp
sub
jne
popa
cmp
cmc
mov
ret
imul
frstor
popf
repz
push
adc
cmp
std
dec
xchg
stc
pop
enter
pop
pop
pop
pop
pop
test
and
cmp
scas
sete
cmpsl
incb
cmc
enter
and
mov
loopne
mov
test
sub
push
leave
inc
ss
jne
out
sbb
add
xchg
push
lret
mov
cmp
subl
sub
sub
add
inc
xchg
or
cmc
addr16
pop
pop
xor
cmp
loope
inc
xchg
fwait
leave
ss
pop
leave
hlt
pop
cmp
push
inc
dec
sbb
enter
lret
push
xchg
fucomp
sar
les
inc
cmpsl
mov
and
ret
inc
cmpsl
shll
push
mov
adc
xchg
stc
push
aaa
inc
rcrb
xchg
ss
jns
out
mov
enter
js
inc
lahf
adc
ja
add
mov
dec
inc
je
enter
pusha
jne
jb
rcll
dec
xchg
jno
lods
iret
addl
dec
push
icebp
xor
push
adc
xorl
cmp
enter
jge
mov
adc
cmp
shll
push
aaa
or
lea
shlb
leave
cs
cmc
lds
aaa
jge
mov
ss
std
inc
enter
in
adc
mov
adc
sbb
adc
cmp
inc
aaa
xchg
adc
push
cmp
push
and
cmp
inc
inc
ret
cmp
inc
aaa
frstor
aaa
sbb
leave
sbb
add
test
cmpsl
mov
rcll
popa
dec
inc
fmuls
inc
cmpsb
sbb
cmp
test
and
adc
loope
push
mov
ljmp
dec
aam
ds
stos
cld
pop
pop
shrl
int3
mov
sub
enter
shll
aas
jae
fcompl
inc
mov
addr16
sbb
gs
ja
andb
push
inc
cmpsl
popf
xor
cmp
sbb
inc
cmc
jno
jne
adc
mov
adc
push
pusha
sbb
adc
inc
cmp
adc
paddsw
iret
gs
push
inc
cmpsl
jge
adc
or
pop
cmc
add
xchg
mov
xchg
or
cmp
mov
in
shlb
cmp
mov
xchg
and
or
add
sub
clc
pop
incb
pop
adc
stc
aaa
xchg
cmp
add
decl
mov
sti
xchg
add
cltd
clc
cmp
xor
adc
psrlw
inc
addb
in
inc
mov
sbb
xor
icebp
loop
enter
adc
xchg
adc
popf
jmp
lods
inc
popa
cmp
pusha
int3
pop
dec
inc
dec
xor
or
in
add
pop
xorl
inc
cmpsb
sbb
add
dec
sub
mov
dec
inc
push
xor
cmc
icebp
std
aaa
push
stc
mov
jl
sbb
clc
inc
test
das
out
daa
loope
mov
enter
popa
das
add
std
sub
adc
mov
xor
lods
test
roll
aaa
sub
add
mov
xchg
js
inc
aaa
pop
stc
jno
inc
push
or
push
dec
fwait
aas
dec
into
sahf
mov
xor
lds
cmpsl
add
arpl
mov
sahf
xchg
pop
lret
pop
or
ljmp
mov
nop
outsl
loope
flds
push
cmp
add
aad
dec
and
xchg
dec
sbb
adc
dec
loope
lods
dec
sarl
rolb
insl
iret
dec
stc
mov
lret
inc
imul
fldl
push
test
sub
inc
and
xchg
inc
or
mov
testl
loope
movsl
sbb
sbb
xchg
push
cmp
sarl
stc
adc
aad
ss
push
xor
icebp
cmp
dec
fnstenv
adc
cmp
xor
out
leave
testl
dec
lds
das
aad
cs
xchg
mov
sbb
idivl
mov
push
push
dec
cmp
mov
cmpsl
pop
pop
mov
popa
adc
push
aaa
xor
clc
je
and
push
dec
enter
xor
dec
ror
dec
addr16
cmp
dec
dec
push
dec
xor
hlt
inc
sub
inc
addr16
cmp
inc
xchg
inc
loopne
dec
cmp
aas
sub
leave
cmp
adc
push
xchg
sbb
cmp
cmp
cmp
push
dec
xor
dec
xor
leave
xor
cmp
xor
cmp
rol
sub
addr16
dec
push
sub
push
dec
cmp
paddd
out
cmc
ljmp
div
add
pop
lock
adc
repz
and
cmp
mul
xchg
icebp
and
adc
xchg
push
mov
fnstcw
outsb
jns
popa
push
fldl2t
and
loopne
sbb
rcr
cmp
pop
rcrb
pop
mov
test
or
xor
std
xorb
cmp
add
sbb
and
fs
js
and
test
shlb
cmp
pusha
mov
push
cmp
fsubrs
loopne
push
test
popa
les
lods
and
or
rol
fcoms
adc
or
inc
shll
adcb
rorl
aad
ds
mov
adc
or
lds
insl
scas
test
fldenv
mov
xor
imul
mov
clc
push
adc
or
mov
roll
leave
sbb
insl
xor
and
adc
dec
in
nop
shlb
in
rclb
rcl
leave
push
inc
stc
sarb
and
ds
imul
sbb
push
pop
shrb
inc
icebp
inc
push
inc
push
inc
and
mov
in
or
push
ljmp
sub
pop
jmp
pop
dec
adc
pop
adc
add
in
dec
and
in
inc
and
inc
mov
call
fnstsw
and
push
fldenv
inc
and
jmp
hlt
lea
in
loopne
enter
movsl
fdiv
jmp
dec
inc
and
jp
pop
faddl
shll
pusha
mov
clc
out
test
xor
popf
cmp
inc
and
sbb
mov
mov
scas
push
cld
add
mov
enter
pop
insb
orb
lock
mov
sbb
lds
cltd
dec
and
adc
cltd
inc
sbb
lods
cmp
ljmp
and
cs
jge
inc
push
and
fdivl
fcomps
loope
jge
cmp
repz
psubd
adc
dec
and
rclb
adc
test
add
scas
sti
xlat
cmc
adc
or
lret
or
sbb
push
adc
sbb
inc
hlt
in
push
mov
rcrl
and
adc
or
jmp
popa
jge
push
and
pop
inc
add
jae
loop
and
xchg
mov
hlt
or
mov
sbb
or
mov
push
dec
jmp
mov
cmp
pop
push
lods
inc
jb
ja
adc
or
or
gs
dec
xchg
inc
pop
je
adc
cs
inc
and
mov
push
xor
mov
xor
xor
xchg
ja
cmpsl
inc
sahf
dec
int
xor
daa
add
inc
roll
adc
adc
cld
inc
aam
dec
dec
clc
sbb
add
popf
test
jae
inc
jbe
jmp
push
xorl
or
cwtl
lds
inc
xor
ss
test
mov
and
push
dec
out
mov
inc
icebp
pusha
lds
inc
jb
push
sub
lea
aam
lds
pop
shrb
pop
jb
loopne
das
sub
dec
add
xchg
lds
std
dec
mov
add
bound
lds
xor
lods
mov
mov
loope
inc
or
xor
movsb
xor
adc
push
test
push
dec
popf
inc
roll
mov
add
adc
and
push
icebp
pop
popa
or
mov
test
shrb
jno
inc
les
cmc
push
mov
sbb
shrl
xor
out
push
fldl
xor
inc
nop
inc
sbb
inc
jae
mov
cmp
add
mov
xchg
adc
lock
mov
lds
popa
stos
jmp
out
xor
lock
shll
adc
sbb
adc
or
cmp
lea
add
inc
mov
aad
cmp
push
pop
mov
jge
mov
jmp
xchg
add
mov
adc
xor
push
adc
ljmp
fisttps
jae
xor
inc
mov
stc
int
pop
xor
xor
pop
sbb
dec
and
or
pop
push
scas
nop
mov
and
out
sbb
gs
aas
add
sbb
test
out
jmp
and
cmp
lock
jmp
push
popf
ds
in
sub
sub
leave
mov
notl
adc
dec
push
sbb
cld
push
aad
or
daa
fs
loop
and
mov
jmp
nop
jg
cmp
xchg
mov
cmp
xor
in
mov
mov
jno
test
xchg
ja
xor
ljmp
xlat
push
fwait
adc
iret
int
icebp
mov
cmp
dec
xchg
shl
inc
iret
popf
inc
jge
mov
cmp
sub
push
lock
push
xor
cmp
sub
adc
mov
and
push
adc
inc
push
adc
clc
sub
cmp
sbb
inc
cmc
lods
mov
and
and
jmp
sbb
ds
stc
aaa
and
roll
divl
dec
xor
or
fimull
ss
and
push
sub
sub
jge
lds
adc
xchg
ret
js
xor
movsl
in
sbb
or
cmp
and
jno
loope
ficomps
jno
sub
icebp
xor
frstor
jmp
je
fimuls
pop
sub
lods
xchg
xor
das
adc
aad
ja
add
mov
add
adc
mov
aam
sub
iret
push
push
xchg
sbb
add
cmc
push
pop
xor
mov
mov
ljmp
rolb
add
mov
cltd
push
and
mov
mov
jge
jo
or
enter
jbe
sbb
xchg
xor
xor
mov
mov
idivl
jne
xchg
inc
popa
lds
das
mov
or
rcrl
sub
ret
inc
ja
or
cmpsb
cmp
and
jne
cltd
inc
popf
push
add
xor
add
sbb
not
sub
in
out
xchg
sbb
es
jbe
push
mov
in
aam
sub
hlt
in
push
add
pop
popa
stc
xor
mov
shrl
arpl
add
xor
pop
or
loopne
das
jbe
sbb
add
dec
fsubr
testl
jb
hlt
cmc
in
lea
stc
test
adc
jge
mov
pop
adc
or
and
in
sti
mov
pop
xchg
ss
insb
jmp
jnp
lock
mov
stc
push
jo
in
adc
pop
repnz
and
sub
jecxz
movsb
negl
out
adc
dec
inc
cltd
sub
push
push
dec
xor
push
push
jmp
xor
out
cmc
xchg
mov
adc
or
in
jo
dec
push
xchg
pop
xchg
xor
loope
sbb
mov
jecxz
ss
cltd
sbb
loope
sbb
or
sbb
in
movsl
push
mov
push
sbb
out
mov
leave
pop
cld
inc
movsl
push
sub
or
hlt
inc
push
jecxz
dec
sub
loope
repz
add
enter
and
stos
and
aas
inc
inc
test
cmp
stos
sub
addr16
xor
xchg
dec
push
xor
jbe
xor
mov
and
inc
jno
dec
outsb
js
mov
sub
and
cmc
push
dec
sub
aad
inc
or
mov
push
sub
mov
outsb
pop
inc
lea
jp
add
adc
and
sub
inc
in
adc
jmp
pop
pop
dec
sub
cmc
lea
adc
mov
sbb
or
adc
insl
leave
dec
push
dec
sub
and
push
cmp
and
lret
or
adc
ret
leave
sbb
in
mov
xor
dec
mov
push
jb
push
in
sub
das
in
push
inc
data16
dec
adc
in
cltd
push
sub
adc
xchg
cmp
xor
xor
adc
pop
pushf
icebp
sub
and
push
mov
cmp
das
inc
out
cmp
mov
lcall
add
in
inc
sub
aaa
leave
addr16
ds
mov
xchg
pop
gs
sbb
add
dec
notb
push
lock
enter
testl
sbb
xlat
inc
sub
mov
in
int3
mul
les
mov
mov
cmp
push
mov
pop
cmp
aad
jge
push
flds
jno
adc
cli
adc
dec
loope
xor
inc
add
shrl
dec
or
mov
add
sub
mov
lds
adc
std
mov
pushf
xchg
scas
nop
inc
push
sub
dec
sub
aam
hlt
dec
pop
repz
xchg
push
pop
dec
inc
adc
adc
mov
pusha
addr16
xor
jne
sub
lea
adc
dec
cmp
or
rolb
add
movsl
dec
dec
imul
pop
lds
mov
dec
xor
fstl
popl
cmp
xchg
jne
mov
rorl
dec
sti
sub
jg
sbb
add
mov
leave
jne
jecxz
mov
ret
pop
push
fidivrl
dec
imul
repz
mov
loopne
sbb
dec
fsts
stos
hlt
add
or
or
dec
fldl
icebp
cmp
mov
out
add
nop
lock
dec
inc
js
aad
cmp
add
fnstcw
sub
leave
xor
inc
sub
fildll
lds
out
sti
in
cmp
or
jno
fimuls
lods
sbb
lock
movsl
dec
xlat
sbb
push
adc
add
je
xor
cmp
pop
sbb
jno
xchg
add
lds
sbb
pop
sarb
mov
push
in
push
xor
decb
or
pop
cmp
movsl
lea
sub
adc
and
repnz
in
dec
mov
push
icebp
pop
sbb
xlat
push
or
jg
pop
repnz
dec
aad
adc
jecxz
jbe
pop
loopne
pop
dec
push
cmp
mov
mov
cmc
or
add
xor
out
or
jno
popf
rcl
call
in
mov
cltd
adc
shlb
pop
push
cmc
test
add
lock
loopne
pop
test
or
mov
or
sahf
movsb
or
shl
jb
mov
cmp
or
inc
push
cmp
xchg
push
ds
xchg
add
dec
dec
shrb
out
in
lds
push
jno
les
fidivrl
adc
dec
popf
mov
shlb
sub
test
fadds
stos
xchg
push
out
lahf
cmp
leave
jne
or
xchg
sbb
clc
mov
cmpsb
pop
jmp
lea
add
aad
mov
push
in
sbbb
mov
stc
inc
xor
inc
sub
or
adc
xor
cmc
push
rorb
loopne
repz
popf
mov
dec
push
cmp
hlt
jae
or
add
or
xor
inc
cmp
or
lcall
inc
add
and
sub
clc
loope
aas
rclb
dec
xchg
sbb
mov
daa
test
cmp
dec
aaa
xchg
inc
in
push
sub
push
flds
aas
mov
xchg
in
cmpsb
repnz
push
push
data16
movzbl
xlat
inc
sti
icebp
dec
sub
sub
adc
adc
adc
dec
and
clc
int
push
sub
rcrl
jmp
sub
xor
loop
inc
mov
out
loopne
sbb
ror
mov
xlat
loope
xorb
add
dec
inc
shrl
or
sbb
sub
push
and
lds
cmp
jmp
xor
add
mov
and
lret
cltd
ja
enter
fldcw
xor
leave
cmp
xchg
adc
mov
aas
lds
fcmovnu
hlt
mov
mov
addr16
xor
pop
sub
lods
inc
xchg
xor
mov
mov
rcl
inc
xchg
sub
ds
add
adc
pop
or
inc
inc
adc
push
mov
icebp
pop
rol
xor
jmp
fstl
xchg
inc
cmc
sub
clc
jne
movsl
sbb
mov
dec
mov
aas
xlat
sub
test
mov
ljmp
fxch
jno
mov
inc
dec
std
jge
mov
inc
cmovo
or
ds
xor
sbb
xchg
not
add
cld
shrl
cmp
idiv
cmp
dec
push
adc
and
cmp
enter
call
add
rol
xor
fidivl
adc
dec
loope
jns
xor
adc
mov
aam
dec
gs
mov
and
aas
pop
push
sub
fmul
inc
adc
jp
or
push
stc
aas
les
popa
jne
aas
adc
and
stos
pop
pushf
push
icebp
aas
in
ja
xchg
imul
mov
pop
cmp
pop
inc
icebp
xor
xchg
jmp
or
xor
inc
mov
xlat
cltd
push
int
mov
push
push
test
mov
arpl
pop
push
mov
inc
sub
das
xchg
andb
or
aad
dec
lds
out
icebp
out
mov
lahf
iret
lret
inc
lds
bound
and
lds
sub
dec
dec
jnp
dec
inc
inc
pushf
push
sbb
divl
add
jns
xor
jns
and
xchg
xor
out
xchg
pop
std
jmp
jg
test
jne
jmp
popl
adc
iret
cmp
loope
aas
pop
and
dec
adc
aad
push
aaa
dec
and
test
xor
in
push
cmp
xchg
xor
push
movsb
lods
sub
jmp
inc
cmp
add
pop
mov
movsb
dec
pop
rorl
xor
adc
push
pop
in
and
and
mov
sub
xchg
inc
xchg
dec
sbbl
fdiv
jb
adc
fst
sti
ror
sbb
es
jbe
imul
mov
xor
clc
loope
or
int
jno
inc
push
insb
rol
xor
aas
sbb
lock
test
dec
call
out
inc
icebp
xchg
xor
sbb
out
lock
xlat
xor
dec
sbb
add
cmp
in
out
test
movsb
fs
ljmp
push
loopne
and
dec
jecxz
adcl
inc
movsl
inc
int3
inc
inc
icebp
lea
aad
push
cmp
shl
in
adc
xchg
in
pop
adc
in
sbb
ret
mov
enter
ret
pop
std
lcall
pop
andl
dec
xchg
inc
pop
mov
add
push
mov
jns
push
mov
adc
sbb
and
stc
inc
cmp
adc
inc
jge
or
or
push
and
push
lret
mov
xadd
xchg
popa
dec
xlat
inc
or
inc
or
fldcw
fisttpll
sub
iret
in
inc
jmp
mov
aam
add
sbbl
mov
call
adc
stc
aam
cmp
jge
jns
je
fdivrl
aad
inc
sub
sbb
sub
jmp
in
inc
mov
cmc
vmwrite
inc
inc
outsb
dec
adc
cmp
inc
inc
insl
cmp
xor
cmpsl
pop
aam
cmp
aad
xorb
inc
inc
sub
in
mov
ficoml
sub
cmp
stc
icebp
mov
insl
inc
or
jmp
pop
and
aad
cmc
jecxz
inc
lea
push
push
xor
mov
push
xor
in
xor
cmp
push
xor
sub
out
pop
inc
pushl
test
or
sbb
fbstp
sub
insl
div
sbb
push
lret
mov
jecxz
mov
imul
push
and
icebp
or
mov
adc
inc
xor
inc
aaa
std
ret
insl
into
ret
adc
and
jmp
aad
fnstenv
sarl
jg
in
ds
jge
adc
xor
inc
lds
cmp
fisubs
stc
or
xchg
addl
hlt
push
push
std
add
jg
push
stos
repz
sub
inc
fisubrl
inc
sbb
test
dec
xor
adc
aad
cmp
psrlw
out
stos
aaa
pop
add
adc
notl
out
movsl
push
inc
cmpl
mov
push
icebp
xor
inc
sub
cmp
xor
popf
adc
inc
jmp
lret
dec
sub
inc
inc
xchg
pop
and
aaa
dec
icebp
pop
iret
sbbl
push
dec
sub
cmp
enter
subl
sub
pop
dec
add
jmp
flds
inc
mov
aaa
les
pop
or
cmpsb
roll
cmp
dec
insb
jle
xor
loopne
aas
xor
jecxz
adc
xor
std
int
jle
mov
dec
sub
fidivl
add
mov
into
aaa
das
cld
ret
add
cltd
lea
cli
inc
std
jmp
sub
inc
roll
mov
cmp
lock
and
dec
mov
cmp
mov
test
enter
test
sub
mov
xor
mov
stos
shrl
pop
push
sahf
cli
cmp
icebp
aam
sarb
cmp
test
mov
mov
int
mov
mov
sub
nop
les
scas
ret
into
sub
push
cwtl
dec
aas
jne
cmc
xchg
or
dec
mov
adc
cmpl
aas
leave
and
cmp
in
pop
add
mov
mov
pop
jmp
and
mov
push
aas
adc
dec
dec
lods
aaa
aam
or
cmp
or
pop
inc
adc
stos
adc
icebp
fldenv
cmp
loope
inc
lock
pop
mov
pop
cmc
inc
out
or
jns
and
push
in
rcrl
jns
enter
cli
pop
hlt
cs
push
mov
cmp
call
xor
fists
dec
cmp
cmpsl
dec
push
loop
add
enter
clc
pop
jg
inc
rolb
in
pop
mov
pop
gs
cmc
or
inc
or
or
dec
push
jne
pop
mov
inc
subl
xor
shrl
or
inc
inc
push
jno
aad
xchg
jno
mov
jns
xor
adc
inc
movsl
data16
subb
fst
lahf
jbe
cmp
or
dec
mov
sub
jns
add
and
push
inc
cmp
arpl
pop
mov
push
cmp
mov
ja
xor
stc
icebp
cmc
inc
mov
sub
adc
sbb
cmp
cmp
out
out
jbe
pushl
jne
shrl
dec
loope
cmp
jle
mov
or
jmp
xchg
icebp
dec
adc
into
xor
repz
shll
cmp
jge
ret
aad
insb
scas
add
iret
into
lea
leave
lock
xchg
stos
ja
push
lock
and
dec
jnp
mov
into
xor
cmc
jmp
sahf
add
xchg
jns
std
xor
fnstcw
out
sub
or
in
sub
inc
push
cmpsb
adc
in
jmp
sub
clc
push
push
sti
push
xor
in
push
jge
push
inc
stc
pop
cmp
cmp
aad
shlb
sbb
xor
xchg
movsb
push
inc
arpl
lock
out
cmp
test
or
and
gs
lret
rorl
jbe
and
fs
add
rorb
or
aad
add
inc
aaa
xchg
ret
cmp
dec
jbe
or
mov
sub
jo
jno
xor
das
mov
popa
aad
xchg
xor
push
push
cmp
cmp
inc
jne
lds
mov
xor
hlt
ret
xor
add
adc
sub
fdivrs
pop
dec
sub
adc
xchg
jg
push
cmp
adc
fldt
cmp
mov
dec
sub
xchg
cmp
add
or
loope
adc
xor
in
xor
das
std
aaa
cmp
sarb
mov
aaa
mov
inc
xor
adc
pop
inc
sarl
sub
rclb
pop
mov
leave
inc
aam
xor
sbb
stc
in
mov
adc
lret
rcr
inc
shll
negl
inc
xlat
aas
dec
mov
rorb
cmp
adc
or
adc
imul
aas
adc
dec
insl
adc
inc
cmp
xor
push
sub
cmpsb
push
add
call
push
pop
fsubrl
or
mov
push
nop
jg
aad
shlb
shr
rcrl
dec
mov
lahf
jnp
jno
icebp
stos
fbstp
repz
lods
xor
mov
xchg
loopew
enter
adc
adc
cmpsl
jp
cmpsb
mov
xorl
cmpsl
or
jae
cmp
mov
xor
xor
aaa
xor
jnp
loope
std
mov
vpmullw
jmp
leave
inc
sub
leave
stos
xor
mov
sub
add
fnop
dec
cmp
cmp
jge
rcrl
jno
mov
adc
cli
loop
repz
icebp
cmpsb
push
pusha
pop
cmp
and
sub
sub
cmc
das
adc
inc
xor
and
movsl
imul
jecxz
pop
iret
pop
push
inc
jns
leave
popa
and
dec
sub
lods
sub
sub
out
lods
sub
das
pop
inc
inc
or
aam
or
inc
sub
xor
or
sub
adc
cld
or
cmp
jne
pop
or
push
mov
or
push
inc
sub
jmp
mov
rcll
bound
xor
sub
push
out
xor
leave
icebp
mov
fnstcw
sub
mov
filds
imul
add
sub
xchg
add
xor
xor
push
inc
mov
cmp
dec
or
loope
adc
sbb
dec
add
sarb
add
inc
adc
push
add
icebp
lock
cmc
adc
xchg
lds
mov
stos
js
jne
les
int
es
push
mov
dec
cltd
cmp
out
add
and
jns
das
dec
jns
inc
call
push
and
cmp
adc
xlat
or
icebp
xchg
or
stc
cmp
insl
push
icebp
inc
sbb
pop
dec
and
mov
sub
sbb
leave
mov
lcall
icebp
cmp
fstl
or
and
inc
sbb
sbb
inc
xor
push
arpl
lds
imul
fisttpll
jecxz
je
cmpsl
std
cmp
aas
jne
adc
sbb
aas
sub
xchg
inc
cmp
pop
sarb
sti
push
xchg
out
test
in
daa
lahf
add
add
lods
gs
cmp
jmp
and
and
sbb
pop
cmp
inc
int3
cmpsl
push
and
fstpl
sub
or
jge
dec
aas
sbb
mov
jp
adc
xor
xchg
sub
cmp
xor
mov
cmp
and
imul
inc
mov
stc
push
inc
pop
xor
cs
aaa
test
fsubl
or
dec
aas
sub
fdivs
mov
jl
cmp
mov
into
sbb
aad
sbb
fidivrs
addl
and
dec
push
in
jae
mov
hlt
xor
int3
xor
add
cmp
dec
fnstenv
sbb
and
mov
push
cmp
icebp
insb
inc
cmp
xor
push
sbb
dec
ret
pop
sbb
sbb
cmc
inc
pop
add
jae
sbb
mov
leave
sbb
jmp
xor
sub
jmp
pop
movsb
inc
sub
insl
inc
or
add
inc
cltd
sarb
data16
popa
inc
aad
cltd
dec
inc
leave
sub
cs
push
xchg
inc
dec
jmp
cmp
and
out
lea
outsl
test
mov
jo
popf
cmp
xchg
and
roll
or
ret
dec
lds
cmp
inc
cmp
aam
fucompp
sub
and
test
aad
xor
negb
dec
xchg
aas
push
and
and
sbb
add
xor
pop
divl
in
xor
insl
mov
mov
adc
jns
push
or
or
push
xor
leave
rcrb
je
jmp
sub
dec
dec
push
imul
add
sbb
push
test
xor
gs
inc
daa
add
adc
cmovb
jle
inc
jns
or
mov
int3
cmp
and
add
test
popa
scas
inc
lds
cmp
xchg
inc
jmp
sub
xor
pusha
pop
adc
or
imul
cs
adc
test
icebp
pop
hlt
jne
inc
push
sub
inc
jbe
dec
hlt
fcoms
lret
movsb
adc
sub
cmp
out
jmp
lods
and
lea
cmc
or
call
sub
std
cmc
in
xor
cmp
inc
inc
inc
leave
std
mov
out
xchg
rcr
loope
fwait
cmp
out
js
lock
xor
dec
loope
inc
sub
pop
sub
jbe
inc
insl
decl
xchg
lret
adc
xchg
mov
cmp
cmp
push
lods
lret
stos
lds
inc
sub
in
rcrl
lret
arpl
cltd
sbb
or
adc
cltd
mov
popa
inc
int
sub
insl
shl
negb
inc
adc
daa
lods
dec
xor
inc
into
add
cmc
decb
push
adc
mov
sbb
or
and
jecxz
push
inc
dec
inc
sub
and
leave
inc
xor
sub
xor
hlt
pop
inc
movsb
in
mov
aaa
outsl
sbb
cmp
sub
pop
lahf
cmp
jge
pop
dec
sub
aam
xor
or
xlat
les
inc
adc
pushl
sbb
push
xlat
loope
shrb
cmc
mov
inc
xor
movsb
push
xor
sbb
sbb
enter
jno
popa
xchg
int
pop
mov
adc
inc
or
pop
shlb
xchg
mov
jmp
mov
popa
icebp
std
dec
dec
sub
movsl
fldt
sbb
sub
sub
aaa
adc
es
rclb
cmp
sbb
mov
stos
jne
inc
inc
push
inc
and
lahf
dec
std
pop
decl
sbb
or
push
xchg
hlt
in
or
cmp
jb
fstpt
sub
insl
add
popa
or
cmc
push
into
jno
popa
and
dec
xchg
pop
cwtl
cmc
enter
cmpsl
mov
sbb
out
inc
roll
jmp
imul
dec
lcall
sbb
fadd
dec
and
and
push
ficoml
jmp
sub
or
mov
xor
jecxz
jmp
pushl
or
fabs
or
imulb
out
mov
jmp
std
test
pop
sbb
xchg
das
adc
pop
inc
push
and
sub
mov
loope
add
jae
idivl
add
or
push
push
sub
out
push
gs
push
sub
int3
xor
in
push
or
popa
pop
xor
inc
andl
cld
mov
addb
xor
hlt
add
les
or
movsl
aam
adc
sti
dec
push
loope
lcall
sub
pop
add
sub
aaa
std
jnp
clc
xor
insb
cmp
cmc
icebp
or
and
test
lock
sarl
gs
lock
rcrl
dec
inc
cs
inc
stos
xchg
lahf
mov
mov
int
pop
mov
dec
cltd
and
push
out
popf
movaps
cmp
pusha
push
push
sahf
lret
mov
stc
in
std
lret
cmp
cmp
mov
test
dec
xor
and
cmp
and
test
jg
in
push
inc
fsubs
dec
cmp
xchg
loopne
sub
jne
in
lods
pushl
inc
inc
inc
xchg
shlb
jns
dec
pop
ret
shll
xor
cmp
rcll
and
xor
xchg
or
push
lds
fwait
outsb
inc
push
mov
adc
test
lcall
packssdw
push
push
inc
inc
xchg
jle
jmp
ja
aas
repnz
add
push
xor
dec
add
xor
pusha
xchg
aas
mov
xor
adc
dec
rcrl
data16
xor
gs
stc
jmp
pop
movsl
inc
popf
out
or
jmp
push
mov
mov
test
cmp
leave
sbb
push
fwait
sub
dec
cltd
sbb
xlat
call
fldenv
test
mov
test
movaps
mov
mov
dec
mov
popf
inc
cli
add
push
and
inc
inc
stos
xor
xor
mov
sub
xor
and
loope
test
dec
inc
xchg
mov
add
inc
inc
adc
ljmp
test
popf
lock
xor
mov
stc
xchg
jno
inc
jg
test
push
mulb
cld
push
inc
imul
sub
xor
in
in
lods
sbb
mov
mov
sub
and
and
xor
inc
aas
and
cwtl
jno
pop
dec
dec
popf
fildl
and
and
cmp
sbb
shll
xor
out
mov
shl
cmp
ffreep
jnp
sub
xor
inc
aas
fsubrs
push
inc
pop
in
test
clc
out
mov
cmc
jns
in
divb
in
out
xchg
and
push
sarb
pop
sbb
lods
mov
sbb
in
aas
int3
push
inc
adc
leave
ljmp
and
fsubp
stc
lods
rolb
dec
push
cmpsl
pop
aaa
lds
leave
mov
aad
pop
int3
leave
iret
stc
sbb
push
pop
jmp
clc
repz
sbb
mov
rcrl
mov
aad
sub
icebp
xor
shrl
or
cmp
dec
adc
xorl
repnz
push
pop
hlt
shl
add
leave
mov
or
adc
cmp
dec
cmp
xor
in
push
mov
in
das
push
pop
dec
cmc
dec
out
dec
lock
pop
mov
imul
push
sub
cmpsl
aaa
and
and
sub
in
test
sub
jg
cli
iret
mov
adc
inc
lds
movsl
pop
lcall
mov
aam
sbb
mov
sub
cli
pusha
jne
gs
dec
mov
inc
fdivs
jno
jmp
into
cltd
fistpl
jmp
sbb
dec
aas
pop
std
xor
xchg
or
push
dec
mov
aad
bnd
push
push
idiv
jmp
aam
iret
fisttpll
cmp
adc
ret
test
adc
cmp
cmp
dec
xlat
sub
pop
std
in
pop
sbb
and
leave
aas
jne
mov
xchg
jmp
and
xorb
hlt
sub
sbb
inc
xchg
sub
pop
repz
sub
imul
xor
and
aas
pop
sub
and
sti
push
addr16
leave
sub
push
jmp
mov
add
fcompl
inc
adc
js,pn
jmp
cli
and
fsubrs
mov
cmp
and
and
adc
mov
xchg
mov
and
push
cmp
and
in
and
std
movsl
mov
leave
out
add
inc
jno
mov
sahf
add
cmp
sbb
xor
lock
imul
lds
gs
movsl
andb
lock
nop
mov
fldcw
cli
movsb
xchg
cmp
fcoms
cltd
inc
sbb
inc
sub
cmp
sub
cmp
adc
nop
hlt
popa
push
mov
mov
jl
dec
jmp
leave
push
stos
sub
pop
sbb
ret
loope
out
xor
dec
add
jo
sbb
adc
pop
inc
pushl
xor
cmp
mov
adc
cltd
stos
mov
fdivr
lds
xor
lds
sbb
adc
test
loope
hlt
repz
pop
sbb
aas
mov
adc
sub
jae
add
cmp
outsb
cmp
pop
mov
sub
adc
push
or
xor
push
or
testb
push
dec
mul
mov
sub
mov
adc
dec
cmp
pop
das
or
movsl
jo
inc
cmp
mov
inc
mov
leave
inc
jb
cmp
cmp
xchg
imul
push
testl
lods
stos
adc
sbb
data16
cmp
fsubr
fs
mov
sub
std
ljmp
jb
push
xchg
cmp
cmp
adc
mov
jb
loop
idivb
fwait
xor
pop
adc
cmp
idivl
adc
jle
mov
cmc
mov
mov
lods
jmp
int
inc
xchg
test
inc
and
leave
imul
cmp
push
mov
push
cmc
aas
mov
xor
mov
cmp
xchg
out
mov
in
mov
test
insb
jmp
mov
or
pop
cmp
jp
lods
aas
and
inc
popf
adc
in
ljmp
es
cmc
or
popa
sub
es
sub
repnz
push
std
jmp
and
jmp
pop
jae
or
inc
cmp
jl
and
push
xor
cmp
lahf
cmp
cmp
add
sub
add
fcoms
adc
mov
nop
xor
movsl
sarl
inc
dec
movsl
lahf
out
inc
les
mov
inc
adc
test
int
xor
sub
mov
addr16
xchg
push
aad
inc
pop
and
in
cmp
inc
iret
inc
cmp
inc
jmp
inc
inc
mov
shll
gs
mov
pop
jae
xor
aam
nop
sarl
pop
hlt
popf
adc
xor
inc
shrd
imul
lret
xor
jecxz
call
dec
lret
testb
das
ret
sub
in
ret
fs
daa
out
cmp
jno
or
inc
loop
push
out
or
inc
fucomi
lahf
push
ds
hlt
push
xor
neg
sarb
daa
inc
faddp
mov
call
aad
loopne
jae
sbb
mov
jl
hlt
push
in
mov
popl
sti
or
or
and
jle
adc
stos
mov
aad
cmpsl
or
loopne
lock
popa
dec
mov
in
cmc
sub
lea
xor
in
in
pop
movsb
leave
inc
leave
gs
jne
sub
sub
inc
mov
or
add
lock
in
cltd
clc
dec
fcmovb
add
insl
lea
mov
shll
mov
dec
push
and
inc
aad
mov
in
enter
loope
sub
xor
add
mov
adc
sub
icebp
shrb
or
push
sbb
out
popf
or
cmp
lds
jp
fbstp
lock
inc
ret
mov
adc
cmp
loopne
mov
adc
push
xor
out
xor
lret
movsl
jg
sbb
cmp
movsl
xchg
ja
jns
enter
jecxz
out
ret
add
sub
sub
lds
lcall
pop
push
jg
test
rol
stos
jo
sbb
icebp
xchg
rorb
fcomip
cmp
out
stc
das
aas
data16
insb
mov
xchg
mov
inc
dec
jb
mov
cmpsl
roll
mul
and
dec
mov
imul
ja
ss
nop
jecxz,pt
loope
int
aaa
mov
mov
enter
mov
jne
popa
pop
in
or
es
add
ja
mov
mov
js
and
imul
sub
xchg
fistpll
mov
lcall
xlat
test
and
mov
inc
imulb
adc
in
xor
ja
jg
and
sub
popf
push
std
lods
shll
mov
insl
lock
mov
pop
decb
push
and
sbb
inc
jae
jo
xor
cmp
insl
ret
arpl
or
out
xor
rcll
movsb
inc
loope
hlt
xchg
xor
push
sub
push
jae
push
push
nop
or
cltd
lahf
sbbl
out
sbb
and
adc
pop
addr16
dec
sub
sbb
test
xor
in
cmpsb
jnp
ljmp
jp
pop
outsl
repz
in
cmp
xor
insl
xchg
repnz
inc
adc
jbe
enter
sbb
inc
push
adc
sub
loop
xor
mov
xor
repnz
jmp
sbb
pop
stos
cmpsl
and
std
jge
stc
pop
inc
mov
mulb
ror
pushf
je
aaa
mov
std
xchg
cld
xchg
ret
int3
xchg
mov
in
cltd
push
aad
lea
js
xchg
cmpb
out
mov
call
xor
in
mov
pop
mov
inc
inc
jns
push
sub
mov
sub
aas
inc
out
xor
or
inc
enter
adc
lret
add
mov
push
adc
movsl
and
aas
mov
clc
jle
inc
xchg
cld
xchg
fidivrl
jge
inc
xor
cs
xor
fldl
xor
xchg
xchg
adc
fsubr
xor
test
lret
sbb
insl
add
add
jne
insb
das
mov
ret
add
push
jns
fcoml
and
pop
xor
dec
js
jbe
pop
inc
rorb
xchg
cld
xchg
mov
aam
pop
xchg
sti
sbb
int
loop
lock
sub
xchg
ds
scas
in
adc
nop
add
in
adc
inc
out
adc
mov
out
jbe
xor
jp
adc
mov
cwtl
in
mov
popa
hlt
jmp
mov
ret
and
ss
jmp
sti
test
outsl
mov
ss
test
inc
push
sbb
fsubl
or
mov
das
lds
xor
push
out
jmp
mov
and
xor
dec
movsl
cmp
movsb
dec
int
xor
iret
mov
xor
lret
in
sub
adc
sub
addb
dec
pushf
inc
xlat
pop
mov
shl
cmp
xor
icebp
popl
or
inc
jmp
mov
cmp
xor
jmp
fisttpll
pop
mov
ret
adc
mov
push
cwtl
mov
xor
lds
sbb
xchg
sub
lahf
lds
or
enter
lds
and
in
iret
mov
adc
adc
les
std
and
ss
je
mov
push
dec
lods
mov
mov
std
push
add
testl
xchg
push
push
cmp
sub
daa
xchg
jecxz
sbbb
add
inc
vpmaxsw
pusha
jbe
dec
sub
fs
sub
xlat
or
sub
divl
sub
xor
leave
cmp
sbb
inc
cmp
ljmp
xor
je
cmp
fildl
sub
xchg
adc
in
mov
sub
xor
out
out
lock
xor
mov
push
and
lock
xchg
fwait
inc
xlat
and
sbb
out
mov
fwait
mov
out
pop
je
xor
imul
cmp
imul
repz
sub
das
outsl
or
xlat
push
out
or
xor
iret
xor
add
out
mov
div
movsb
inc
jno
nop
adc
and
cmp
ja
loope
xchg
les
outsw
adc
icebp
xchg
movl
lods
xor
cmp
pop
xor
add
movsb
cs
pop
lods
cmove
mov
loop
mov
or
xor
pushf
or
mov
mov
sub
adc
shll
sarb
imul
repz
das
cmc
lcall
aaa
jae
sarl
pop
add
adcb
push
pop
xor
fbstp
jle
arpl
push
imul
lock
cmc
shl
adc
and
lock
mov
mov
cmpsl
rcr
aas
test
imul
orb
outsl
movsl
cli
xor
les
jge
shrl
roll
sti
or
or
mov
xor
sbb
loopne
lods
xchg
sbb
test
cmp
rolb
insl
fwait
mov
mov
ficomps
in
xor
movsl
pop
mov
ret
jecxz
jno
fwait
xchg
mov
fdivs
or
stc
out
cmp
nop
mov
adc
xor
cmp
adc
mov
xchg
daa
sub
cmp
cmp
ss
xchg
test
rolb
fwait
mov
dec
or
xchg
push
js
sub
push
add
repnz
push
add
dec
push
xchg
add
xor
roll
xchg
push
mov
mov
jmp
sub
mov
daa
sti
cmc
add
xor
clc
inc
jp
adc
je
mov
xor
icebp
ret
gs
inc
and
pop
mov
mov
ret
inc
cmpsl
cmp
cmc
in
or
sub
inc
mov
xchg
lahf
call
xor
adc
xchg
and
test
test
sbb
sub
std
mov
movsb
mov
mov
mov
xor
mov
add
das
aaa
push
icebp
cli
inc
sarl
sub
push
xchg
sub
cli
xor
pavgb
mov
mov
xchg
loop
es
jge
in
cli
lds
outsb
gs
orl
mov
cmp
cmc
stc
shll
popf
mov
out
incl
data16
adc
sbb
and
and
fxam
adc
test
push
stos
xor
loopne
jmp
sbb
loope
shr
jecxz
mov
jmp
int
das
or
mov
sub
xchg
fdivrl
push
mov
nop
or
sub
stos
xor
cmp
sti
mov
les
cmp
xchg
cmc
push
xchg
test
jo
enter
imul
das
cld
adc
mov
lahf
hlt
test
add
xor
xchg
inc
mov
dec
mov
mov
lahf
xchg
push
add
pop
push
mov
fmul
lds
sub
bound
lret
push
out
add
in
out
pop
repz
hlt
sub
xor
xorl
adc
push
add
bound
xor
imulb
mov
les
xchg
lret
mov
pop
xor
popf
inc
pop
loop
push
in
inc
shl
daa
lret
clc
scas
out
inc
cs
xchg
cmpsl
inc
rol
or
mov
sub
jmp
in
popa
cmp
leave
or
inc
cmc
or
mov
unpckhps
sbb
ljmp
cmpsl
xor
add
lds
mov
adc
sub
xor
push
insb
mov
cmpsb
cmpsb
or
and
ss
rorb
dec
or
and
jb
lods
cmp
lods
inc
lods
xor
mov
dec
iret
sbb
arpl
sbb
mov
or
sbb
lds
sbb
push
adc
mov
and
sahf
pop
fdivl
ss
pop
adc
or
aad
and
les
or
pop
dec
loopne
ret
loopne
adc
xor
ret
pop
enter
je
mov
pop
adc
out
fmull
orl
mov
mov
xchg
add
data16
cmp
xchg
ret
in
xchg
test
mov
in
ljmp
or
in
loopne
mov
bswap
aas
mov
loopne
das
imulb
dec
aad
dec
gs
mov
es
dec
aad
das
sub
inc
mov
add
xchg
lds
sbb
sub
mov
int
sti
clc
mov
std
jp
loopne
stos
jnp
dec
enter
cmpsb
jne
or
leave
sub
xor
pop
mov
outsb
paddusb
sbb
jge
movb
push
xchg
fstpl
into
sti
and
pop
jmp
or
lahf
push
jo
push
pop
or
ljmp
pushw
mov
fisubrl
in
xor
sub
test
pushf
lahf
movsl
sbb
pusha
pop
das
xor
sub
xchg
std
pop
sbb
mov
mov
jo
fsts
into
cmp
outsl
out
fwait
sti
push
hlt
sbb
xor
sbb
sbb
xor
repnz
test
pop
ret
lds
push
fs
jmp
enter
in
pusha
icebp
pop
enter
cmp
jmp
or
cli
cmc
jnp
punpckldq
adc
push
cmpsb
testb
aaa
add
and
lcall
rclb
mov
push
in
repnz
push
dec
fucomp
repnz
push
test
add
xchg
pop
lock
inc
mov
jbe
or
pop
add
inc
or
fs
lock
ror
pop
jmp
xor
out
sub
inc
mov
or
adc
int3
add
pop
lock
movsl
or
adc
pop
rclb
cmp
nop
sets
cmp
insl
add
cmc
mov
push
xor
fbstp
sahf
and
ds
iret
cmc
emms
adc
data16
mov
add
insb
xorb
mov
andb
ds
ja
ja
fcmovb
sbb
add
mov
ret
inc
loop
or
xor
into
xor
aad
xor
popa
imul
aaa
js
adc
pop
test
or
mull
imul
mov
out
mov
or
lds
out
mov
adc
enter
or
adc
out
mov
pop
aaa
enter
stc
sub
mov
mov
adc
sub
retw
xor
mov
shlb
lock
pop
mov
insb
in
jnp
or
mov
inc
inc
xor
xor
push
mov
out
pop
pop
aad
in
sub
adc
nop
sub
or
ja
or
aad
push
pop
repz
pop
lock
cmp
sbb
mov
mov
pop
xchg
inc
lock
rolb
das
lock
xchg
sbb
pop
cmp
adc
inc
sub
cmpsb
and
popa
cs
xchg
ja
xchg
xorl
jge
movsl
adc
ljmp
xlat
push
mov
lds
add
xor
arpl
cmp
pop
fisubs
xor
sub
mov
jb
clc
bound
mov
leave
das
mov
inc
orb
cs
bswap
inc
xchg
ret
rcrb
cmc
mov
outsb
in
iret
add
sub
mov
adc
fs
loopne
test
daa
push
aad
insl
aam
mov
insw
test
jecxz
push
cli
cmpb
imul
jno
push
or
xor
loope
xchg
lea
in
adc
nop
add
shrb
pop
gs
xchg
clc
mov
mov
out
cmp
ret
outsl
frstor
loopne
dec
cmp
lcall
xchg
repz
fwait
in
add
inc
mov
fidivrl
rcr
inc
mov
mov
out
jl
push
adc
fsubr
mov
add
jne
loopne
out
sub
pusha
stc
addr16
push
fs
mov
es
or
ja
mov
mov
xor
mov
arpl
jne
push
lods
sub
ret
adc
out
jo
insb
mov
imul
push
sub
clc
mov
mov
fcompl
xchg
mov
test
les
inc
cmp
pop
cld
cmpsl
dec
mov
outsl
xor
inc
adc
xorl
xchg
push
ret
movsl
dec
imul
lcall
mov
jecxz
out
imul
push
leave
or
in
sub
fidivl
xchg
xor
dec
mov
jecxz
adc
clc
scas
ret
inc
xor
sub
xor
mov
jmp
mov
mov
in
lods
popa
or
mov
scas
xor
cs
scas
lret
cld
jmp
mov
jle
or
pop
repnz
jbe
adc
repz
and
inc
sbb
mull
out
into
mov
cli
jae
in
int
jmp
rol
push
sub
push
jecxz
bound
dec
mov
subl
add
icebp
and
into
mov
xor
add
or
cmpsb
stc
jne
sub
orb
push
cld
jne
push
ss
xor
addr16
jecxz
in
pushf
jo
iret
sub
dec
es
and
hlt
out
lods
push
push
and
mov
and
repz
lods
fistpll
les
mov
sbb
cmp
sub
mov
loopne
mov
mov
out
jecxz
out
jecxz
and
push
dec
xchg
jl
mov
jmp
int
jg
cmp
inc
dec
inc
add
and
nop
orb
in
add
cli
jae
sti
push
addr16
int3
out
sbb
neg
adc
cs
mov
xor
orl
inc
mov
clc
lods
dec
and
inc
inc
outsl
xor
inc
cmp
out
cmp
xor
cmp
or
xor
ret
dec
pop
push
inc
dec
push
cmp
hlt
loope
push
pop
sbbb
inc
inc
jmp
ret
out
mov
daa
jo
lret
call
xor
add
out
je
divb
push
stos
icebp
add
adc
stos
les
add
xor
pop
mov
aam
ja
mov
mov
mov
outsb
sub
jecxz
sti
bound
mov
pop
lods
repz
xor
in
push
sbbb
out
popf
frstor
std
mov
or
mov
inc
and
and
outsl
dec
cmpl
cs
js
jbe
lock
insl
fsubs
outsb
cmp
adc
daa
ret
mov
into
sub
out
inc
lret
iret
mov
inc
jmp
and
jecxz
jp
fisubs
loopne
mov
or
adc
fmul
lods
loope
aad
shll
jb
popa
fsubrl
roll
daa
xor
mov
add
xchg
pop
fsubl
je
in
andl
bound
mov
lea
insb
es
mov
mov
pop
hlt
imul
add
xlat
outsb
loopne
ljmp
push
sub
rcr
shr
fstpt
ror
push
aaa
test
arpl
out
and
test
xchg
push
nop
push
gs
lcall
ja
out
push
cmpb
icebp
cmc
mov
mov
mov
or
adc
mov
cltd
aad
mov
cli
rol
push
nop
or
ss
pusha
push
bound
in
lods
in
xchg
mov
in
cmp
xchg
or
in
mov
or
cmc
xor
sub
out
xchg
sahf
mov
mov
mov
sbb
lods
loopne
aaa
dec
and
xor
hlt
xchg
ret
lods
sbb
push
imul
ds
push
pushf
jecxz
cmpsl
add
hlt
icebp
add
hlt
popa
sub
pop
mov
mov
loopne
in
dec
das
cmpsb
je
int
cmp
pop
dec
sbb
je
or
sub
sub
cmp
es
pushw
lret
mov
mov
nop
in
pop
pop
push
cmp
and
mov
icebp
jno
sub
jmp
dec
sub
nop
xchg
mov
les
mov
lock
andb
test
lcall
sbb
into
les
pop
movsl
inc
pop
cmpsb
roll
scas
jmp
inc
push
jecxz
pushf
ret
stc
enter
cmp
andb
sub
in
sbb
inc
out
and
push
mov
cmp
insb
into
mov
xor
jno
sub
xor
lahf
call
sub
lds
dec
sbb
jge
sbb
loop
add
adc
in
and
adc
gs
inc
mov
ljmp
jl,pn
sub
mov
adc
fidivs
add
and
stos
xor
mov
sbb
jmp
add
mov
inc
scas
and
sahf
push
inc
sub
hlt
mov
stos
mov
lods
scas
lods
mov
addr16
jne
mov
sbbl
ret
xchg
push
in
mov
test
sub
adc
test
pop
pop
adc
imul
mov
out
mov
push
push
xchg
mov
in
std
test
ljmp
mov
sub
cmc
orl
mov
mov
adc
xor
sub
sub
mov
icebp
idiv
add
in
mov
pop
icebp
clc
stc
or
dec
jb
call
jge
inc
in
mov
push
pop
xchg
or
or
scas
xor
ficoml
push
or
xchg
lahf
movsl
xor
test
sub
lods
jbe
lods
sti
pop
icebp
mov
xor
lods
and
sarb
or
jmp
test
in
jno
jne
ja
fcmovu
or
cmp
jg
pushf
movsl
adc
jge
filds
mov
lcall
mov
filds
data16
xorb
insb
ror
pop
mov
mov
scas
sbb
and
fildl
repz
sub
or
nop
inc
sub
mov
jne
outsb
mov
nop
les
pop
mov
push
mov
inc
mov
leave
jne
jno
jbe
jbe
test
adc
lds
dec
and
mov
mov
pop
filds
adcl
jne
or
mov
xor
add
vmresume
mov
cmpsl
add
jmp
in
sar
dec
add
mov
sub
dec
xchg
sub
jmp
or
push
iret
sub
mov
add
pop
out
and
sub
push
cmpsl
sbb
imul
loopne
insl
clc
insb
sub
push
push
ret
xchg
xor
dec
xchg
repnz
sti
mov
imulb
pushf
mov
sub
pop
ljmp
test
shlb
scas
test
in
xor
test
ja
shlb
in
and
lods
loop
jle
or
or
ja
cmc
movsb
daa
jge
in
subb
ret
cld
mov
xchg
mov
xor
stos
int
sub
fwait
mov
jmp
fmulp
and
mov
and
out
mov
add
pop
ret
nop
jge
cld
xor
dec
ret
rcll
jnp
sub
leave
pop
mov
jg
mov
aad
mov
xor
ret
add
imul
inc
aam
xor
mov
fidivl
dec
xchg
je
iret
mov
lret
popa
mov
mov
in
sti
add
ljmp
jo
or
adc
xchg
movsl
inc
ja
std
mov
cmp
leave
push
mov
or
sub
in
cmp
insl
xchg
xor
inc
out
mov
in
ret
mov
or
push
pop
sti
pusha
xorb
mov
stos
inc
and
add
push
imul
call
pop
sbb
push
movsl
jecxz
enter
out
repnz
lods
mov
sbb
mov
cld
in
adc
push
mov
loopne
xor
ja
nop
repz
mov
mov
adc
pop
movsb
iret
push
jne
jne
out
or
mov
leave
call
ret
icebp
add
bound
mov
sahf
xchg
add
or
xlat
jl
and
mov
lcall
xchg
cs
fisttpll
sub
mov
sub
sub
xchg
fs
imul
jge
mov
int3
cmpsb
sub
mov
int
fldenv
mov
mov
pop
cld
movsl
add
mov
cmp
xor
cmp
mov
pop
sub
test
cmpsl
and
mov
loop
aad
out
addr16
xor
loopne
and
dec
inc
mov
popf
ffree
or
or
xorb
adc
das
jbe
sbb
or
fdivs
adc
push
jae
shr
fcompl
xchg
jecxz
icebp
ds
dec
jno
ss
sarb
rolb
test
push
mov
mov
in
pop
push
sub
or
icebp
mov
clc
sarl
jae
and
lods
push
enter
sbb
or
push
popf
out
xor
ror
fstl
mov
lods
push
out
jno
subb
pushf
push
shll
ljmp
sbb
nop
test
add
push
jg
mov
popf
adc
mov
cmp
iret
sub
lea
adc
xor
or
add
iret
loopne
inc
dec
mov
jne
adc
xor
andl
push
xchg
test
addl
pop
cmp
mov
fimuls
mov
lods
mov
adc
or
and
pmaddwd
xor
into
dec
adc
lret
sub
nop
mov
and
mov
ret
outsb
xor
daa
ljmp
int3
cltd
cmpsb
add
ljmp
lock
sub
outsb
icebp
sub
mov
jae
lods
cmpsl
push
out
cmp
mov
or
xor
add
jno
mov
movsb
inc
out
mov
add
andl
or
xchg
mov
adc
pop
cli
and
sti
inc
jne
lret
scas
and
ret
inc
push
stos
sub
test
or
mov
ret
xor
fcmovne
nop
sti
cmc
dec
lcall
call
adc
sub
sub
rolb
test
ja
movsl
dec
push
sub
adc
out
xor
and
sub
xor
sub
jnp
cmpb
pop
imul
scas
sti
ja
mov
sar
mov
or
movsl
fistpl
cmpsb
inc
sub
add
lock
sbb
in
xchg
lods
or
mov
add
xor
fdivr
push
movsb
jne
mov
mov
aad
jp
or
pushl
shl
push
outsb
rolb
gs
out
cli
mov
in
mov
jo
sub
lds
ret
push
add
push
in
aad
or
add
sbb
pop
lret
js
mov
cmpsb
icebp
fs
jle
fstpl
dec
out
orl
sbb
inc
lea
mov
adc
out
lahf
aaa
mov
ficoml
jmp
mov
int
out
sahf
xor
std
add
xor
mov
xchg
lds
out
pop
cli
jb
pop
cld
hlt
outsb
lock
stos
mov
movsl
addr16
and
popa
adc
mov
std
xor
jb
adc
push
ja
mov
add
xchg
add
mov
pop
xor
inc
dec
xor
mov
pop
les
adc
call
and
icebp
inc
popa
test
or
jmp
fildll
sub
push
leave
adc
insl
adcl
mov
imul
xor
imul
adc
rcr
add
sub
scas
sbb
pushf
xor
sub
std
sub
cmp
mov
push
jae
sub
int3
andb
xorl
push
arpl
stos
aaa
push
cld
out
je
inc
xor
nop
es
jno
fmuls
in
nop
adc
cld
mov
xchg
mov
lret
aas
push
dec
sbb
dec
cmp
pop
pop
ficoml
dec
dec
out
inc
push
sbb
or
sub
mov
push
sub
pop
push
xchg
sbb
adc
inc
inc
dec
dec
popl
push
hlt
stc
daa
inc
inc
and
or
fnstenv
sub
leave
push
pop
inc
cmc
sbb
mov
dec
adc
mov
mov
push
mov
add
adc
jne
es
pop
sub
dec
inc
gs
inc
popa
shl
push
je
push
mov
pop
xchg
inc
iret
stc
pop
or
dec
push
adc
and
in
xchg
adc
jmp
clc
push
cs
test
jmp
pop
xchg
pop
jno
notl
sub
in
int
cltd
ss
enter
dec
cmc
aam
jno
loope
ja
popa
or
dec
push
push
shll
xor
dec
sbb
dec
xchg
push
dec
mull
push
pop
dec
sub
push
mov
push
or
dec
imul
out
shlb
cmp
inc
dec
mov
mov
inc
test
dec
cltd
xchg
xchg
jb
push
xchg
and
cmp
mov
adc
movsb
enter
inc
or
xor
movsl
inc
shll
jne
out
shlb
dec
rorb
inc
pop
pop
inc
dec
xor
ss
fsts
mov
daa
inc
andb
or
mov
dec
xchg
push
jns
pop
cmp
push
pop
and
push
add
dec
xchg
cmp
sbbb
push
pop
mov
xchg
adc
dec
mov
add
xor
and
jmp
fldenv
dec
sub
leave
cmp
inc
inc
mov
stc
dec
dec
inc
iret
mov
xchg
xchg
sub
and
or
adc
imul
xchg
sub
cld
pop
inc
cmp
xchg
rdtsc
inc
cmc
lock
gs
inc
adc
inc
add
xchg
stc
je
daa
inc
jmp
adc
ss
leave
add
and
pop
int
test
pop
xchg
xchg
daa
dec
int3
and
cmp
aad
popa
sub
shr
push
xor
int
mov
dec
xchg
test
sub
xor
and
inc
add
jno
xchg
icebp
rorb
sub
or
xor
dec
shr
cmp
or
ss
aaa
inc
cltd
inc
xchg
xchg
ja
cmp
cmpl
xchg
xor
repnz
push
mov
fnstenv
sarl
xchg
sub
and
adc
int
cmp
sub
stc
enter
inc
hlt
loope
dec
push
push
inc
shll
test
mov
test
adc
dec
xor
orl
shll
push
push
xchg
and
dec
push
xor
inc
ss
xor
or
and
lds
inc
adc
add
stc
inc
xchg
icebp
jne
out
rorb
rcl
fldcw
sarl
pop
and
rclb
adc
ljmp
and
and
test
int
inc
adc
popf
in
stc
into
jb
sub
inc
dec
dec
jl
jle
lds
add
push
dec
cmp
shll
xor
aas
fisttpll
push
dec
and
cmp
ret
lock
movsl
inc
inc
test
dec
dec
push
dec
inc
sbb
adc
push
in
hlt
ret
in
adc
inc
pop
lahf
mov
xchg
test
push
inc
xor
sbb
add
sarl
dec
pop
xor
inc
loope
leave
xchg
shl
push
adc
aad
mov
iret
shrl
inc
push
inc
flds
icebp
rcll
or
shl
lods
adc
rclb
inc
leave
dec
pop
leave
pop
adc
push
fnstsw
mov
movsl
aad
adc
lea
mov
pop
idivl
adc
sti
loope
adc
xor
in
sub
mov
push
sbb
or
sub
push
push
dec
xchg
jp
xorl
enter
lods
daa
jns
or
lea
int
or
in
movb
scas
inc
or
pushf
pextrw
dec
mov
dec
dec
or
lcall
dec
mov
cmp
xchg
cmc
dec
mov
in
in
pop
xor
push
shrb
dec
das
push
xor
push
jp
adc
add
aaa
add
stc
xchg
add
push
in
pop
xor
add
int3
lcall
rcll
push
jp
adc
add
add
popf
add
ds
incl
cmp
pushl
push
ljmp
cmc
dec
in
pop
xor
and
rcll
dec
jp
adc
cld
xchg
dec
jle
adc
leave
sbb
ds
cli
inc
add
dec
ljmp
stc
cmc
dec
in
pop
xor
clc
dec
dec
int3
enter
push
mov
ljmp
push
push
rclb
push
xor
dec
aaa
dec
adc
inc
dec
xor
loope
int
mov
jns
gs
dec
daa
cmp
xor
fnstenv
mov
xchg
or
xor
pop
mov
icebp
cmp
jns
gs
xchg
push
add
or
repz
adc
cwtl
inc
dec
xor
pop
mov
fwait
mov
in
pop
sbb
aam
insl
inc
push
dec
sbb
rcl
icebp
and
adc
xchg
lock
cmp
in
xor
sub
in
xchg
push
and
sub
push
and
xchg
push
sub
sbb
in
dec
or
in
cmp
and
adc
loopne
pushl
add
inc
imul
shll
popa
fidivrs
enter
inc
ja
cmp
loope
fcmovnbe
std
push
adc
fiaddl
cmp
out
lods
ret
xor
jmp
and
pop
mov
leave
insl
xlat
ret
loope
cwtl
inc
dec
xor
mov
lds
cmpsl
aad
mov
xorl
push
or
or
push
xor
mov
add
dec
push
lds
add
sub
push
mov
mov
xor
adc
in
push
adc
inc
mov
ret
sarb
xor
adc
inc
xchg
int
aaa
int3
pop
or
mov
aaa
lret
xor
mov
cmp
inc
stc
xor
jno
mov
xchg
push
push
xlat
jge
std
mov
test
pop
xor
stc
mov
leave
sbb
inc
xor
dec
icebp
test
lahf
or
xchg
push
sbb
pop
adc
loope
fisttpl
jo
std
cmp
push
cmc
aaa
push
fsts
into
mov
shl
dec
push
int3
enter
cltd
dec
cmp
enter
sub
cmp
and
xchg
adc
mov
cmp
aas
push
idivl
xor
mov
addr16
mov
inc
test
dec
cmc
mov
aaa
push
jne
mov
dec
in
mov
mov
in
and
dec
into
ds
xlat
xchg
ret
xor
cmc
dec
cld
aaa
push
jge
dec
cmc
inc
in
inc
into
mov
imul
enter
inc
inc
rorb
xchg
inc
jle
cld
aaa
push
xor
in
pop
sub
cmp
and
xchg
adc
inc
lahf
adc
xchg
inc
cmpb
adc
movsl
addr16
movsl
in
in
mov
xchg
loopne
dec
ds
enter
imul
ds
dec
sub
ja
inc
cmp
fcmovne
mov
icebp
loopne
dec
cmp
enter
mov
adc
ror
cmp
aaa
cmp
xchg
cmp
cmp
adc
xchg
adc
mov
test
jno,pn
dec
or
daa
inc
push
inc
xor
inc
aaa
inc
adc
inc
cmp
enter
adc
ror
push
xchg
inc
jns
push
mov
xor
adc
enter
jge
shrb
inc
mov
leave
jne
movsl
enter
add
push
or
adc
dec
cmp
cltd
in
push
rol
jp
test
sti
das
loope
mov
or
popa
sahf
test
adc
jmp
movsl
cltd
cld
pusha
jns
dec
aaa
and
stc
push
rcll
in
in
movsb
mov
or
in
and
vpaddsw
jmp
ret
sub
loope
nop
ret
loopne
push
xor
ret
inc
dec
inc
pop
rcrl
push
mov
xchg
rcr
mov
pop
in
and
push
aad
mov
pop
movsl
or
loop
popf
ret
xor
loop
mov
sbb
cmp
repz
pop
lea
jg
loopne
add
push
jge
popa
jmp
std
cmpsl
fidivrs
jns
fstpl
and
dec
push
sbb
pop
aad
mov
bound
and
inc
jb
negb
push
aam
sbb
pop
pop
sbb
xor
adc
leave
inc
daa
push
and
mov
push
xchg
adc
lods
sbb
loope
push
and
add
adc
or
cmp
icebp
and
sbb
sbb
push
dec
mov
leave
push
xchg
mov
dec
inc
shll
xchg
stos
loope
push
sbb
push
sbb
push
sub
shrb
mov
inc
daa
add
push
sbb
imul
addr16
inc
adc
jnp
cltd
xchg
dec
add
ss
ss
cmp
inc
iret
dec
sbb
dec
lods
sbb
dec
sbb
dec
aaa
mov
inc
sub
mov
out
dec
inc
push
add
xchg
imul
dec
inc
mov
add
les
fucom
xchg
dec
add
dec
dec
lods
sbb
imul
inc
dec
mov
cltd
cmp
inc
leave
inc
cmpsl
cmc
inc
dec
sbb
inc
daa
mov
xchg
mov
dec
cmp
inc
lock
stos
sbb
lods
sbb
imul
loope
inc
xchg
mov
add
aas
aam
inc
cmpsl
in
inc
sbb
inc
push
loope
inc
enter
jne
out
inc
pop
inc
xchg
inc
ljmp
lods
daa
aas
inc
mov
test
adc
cmpsl
aad
fs
cmp
rcll
leave
inc
sbb
stos
loope
cmp
add
sbb
les
cmp
inc
inc
movsl
mov
xchg
ljmp
cmp
mov
cmp
sbb
mov
scas
sub
push
or
dec
cmp
and
aaa
add
scas
int
movsl
scas
shl
stos
loope
ss
mov
aaa
ljmp
add
lods
xchg
leave
xor
pusha
inc
test
cmp
push
stc
loope
xor
jne
cmpsl
add
inc
pop
mov
sbb
xor
icebp
xor
xor
and
mov
sbb
push
lds
popf
enter
sbb
mov
nop
cltd
add
lods
jge
inc
cmp
push
inc
stc
pop
das
xchg
xchg
cmc
das
es
cs
sub
inc
sub
leave
mov
mov
cs
stc
inc
lea
sub
fsubl
push
leave
in
adc
cmp
xor
pushf
xor
test
loope
cmc
fistl
jno
fstpt
cmpsl
addl
mov
adc
les
cmp
enter
cmp
inc
sbb
in
stos
loope
sub
sub
lds
movsl
cmpsl
jne
loope
daa
fnstenv
imul
jno
daa
lods
sbb
dec
cmp
and
fcomps
pop
movl
sbb
sbb
and
gs
and
les
leave
sbb
cmp
cmp
shll
add
and
cmp
cmc
pop
daa
and
les
gs
aam
push
pop
pop
cmp
push
pop
inc
push
fisubl
out
or
push
out
and
push
lret
adc
dec
enter
jne
sbb
ss
adc
rorl
pop
cmp
push
adc
inc
enter
jne
adc
inc
inc
leave
lret
adc
inc
sub
cmp
mov
xchg
cmc
jne
call
jne
aad
notl
cmp
fnsave
test
insl
cmp
add
jne
loop
cmp
lahf
lea
add
movsl
jo
shrb
mov
xor
roll
pop
testl
insl
aaa
xor
jge
push
inc
push
sub
fisubrl
fnop
popf
inc
popa
jne
and
lods
aaa
jno
xor
rorb
pop
jbe
sub
bound
push
dec
mov
push
mov
ret
dec
jne
mov
sub
adcl
inc
cmp
inc
outsl
dec
inc
sub
or
stos
and
sub
stos
test
std
xor
or
adc
cld
adc
or
xchg
test
test
push
push
sbb
push
inc
test
jno
adc
inc
jmp
xchg
popf
mull
adc
cmpsl
clc
push
cmp
adc
add
inc
jno
jne
sub
aaa
cmpsb
adc
xchg
cmpsb
jl
push
mov
movsl
xor
loopne
cwtl
push
dec
xor
daa
movsb
xor
in
stc
movsb
icebp
rcrb
push
mov
push
in
leave
push
xchg
mov
push
leave
xor
push
inc
loope
cmpsb
outsb
cmp
dec
cmpsl
leave
push
inc
lea
enter
mov
jno
test
xchg
out
dec
inc
push
xor
cmp
mov
popf
jne
fldl
jns
aam
sub
xchg
lock
cmpsl
xchg
sbb
loopne
dec
imul
je
sbb
adc
adc
imul
xor
loope
dec
sub
rorb
int
js
stos
aad
test
mov
push
mov
mov
mov
sarb
ret
mov
enter
inc
repz
aad
rcrb
test
adc
enter
cmp
sub
or
pop
sar
inc
popf
or
das
sub
adc
addr16
adc
shlb
mov
in
inc
sbb
cmp
xor
addl
adc
nop
test
sub
xchg
cmp
sub
xchg
adc
dec
push
mov
arpl
shl
insl
leave
push
aam
sub
call
leave
push
push
push
push
rcll
enter
add
sub
dec
rcll
jg
inc
in
pop
lea
cmp
jno
hlt
sahf
sub
lds
adc
cmp
xor
jo
adcl
inc
loop
ret
sbb
add
cmp
sbb
lea
gs
sub
test
into
xor
mov
xor
pop
sub
xchg
int
push
fldenv
aaa
pushf
ss
xor
rcrb
xchg
and
lods
shll
mov
sbb
loope
jge
jle
and
loopne
push
test
sarb
inc
ja
cmp
data16
dec
sbb
lock
mov
or
or
insl
sbb
xchg
dec
decl
sbb
in
shll
dec
sub
leave
imul
loope
repnz
xchg
adc
nop
xchg
pop
fstl
cmp
adc
push
loope
ljmp
rcrl
loope
rcll
xchg
xchg
adc
adc
push
loope
ljmp
mov
out
adc
xchg
adc
shll
inc
dec
sbb
mov
sbb
inc
rcll
rcll
leave
icebp
popl
jnp
loope
inc
cmpsl
in
inc
inc
dec
xchg
sarb
sbb
mov
jmp
mov
popf
leave
inc
cmpsl
in
inc
dec
xchg
mov
int3
sbb
sub
xchg
shll
lods
sbb
inc
xchg
fucomp
mov
das
loope
mov
imul
inc
sbb
aas
cmpsl
aad
std
adc
mov
mov
xchg
out
popf
lea
xchg
lcall
adc
xchg
movsl
jne
call
lret
adc
ss
mov
mov
jecxz
int
ret
pop
sub
popa
adc
aaa
push
test
movsl
cmc
jle
dec
jge
inc
adc
rcll
push
dec
adc
popa
shll
lods
xor
leave
mov
rorl
enter
lahf
sbb
lea
aad
xor
lea
lds
jge
mov
mov
lret
mov
dec
test
mov
test
aaa
rorb
adc
or
pusha
add
popf
in
mov
sbb
ficoms
cmp
dec
movsl
pusha
pop
fildll
leave
xchg
xchg
leave
sbb
enter
xchg
enter
shlb
addr16
popf
or
mov
cmpsl
mov
popf
xor
mov
push
mov
jge
jg
xchg
jo
jne
addr16
inc
rcrl
sub
ss
lea
leave
xchg
loope,pn
lds
lds
jle
jg
sbb
cmp
outsb
xadd
push
sub
ss
loopne
icebp
sbb
lea
loope
rcll
inc
mull
cmp
sub
mov
shrb
mov
add
fs
push
pushf
lds
jns
insb
sahf
sub
push
movsl
sub
sbb
mov
add
mov
push
inc
mov
mov
add
mov
jnp
mov
sti
mov
mov
xchg
imul
mov
shrb
roll
nop
add
jne
daa
imul
imul
mov
and
movsl
cmp
adc
push
mov
cmp
mov
add
mov
dec
ss
paddusw
jg
inc
icebp
sbb
xor
dec
ss
sbb
les
dec
ja
xor
in
sbb
pop
aad
dec
cmp
sbb
mov
ss
gs
cltd
ret
stos
xchg
mov
add
mov
jnp
je
loopne
inc
popa
mov
cmp
rcrb
fwait
mov
cmp
and
sub
lods
test
xchg
jns
cld
sbb
mov
data16
push
loope
cmc
adc
pop
push
inc
out
fnstsw
push
dec
mov
mov
loope
sbb
pop
cmp
push
sbb
dec
cmp
ss
cmp
bound
aam
lods
xchg
xor
xchg
jne
inc
and
test
enter
and
sub
cmp
fscale
pop
xor
shr
insl
mov
aam
movsl
xchg
xor
pop
adc
pusha
pop
dec
addr16
and
xor
push
popf
xor
sub
mov
cltd
xor
cmp
cmc
xchg
daa
xor
cs
xor
dec
xchg
das
or
jae
push
sub
mov
sbb
xchg
mov
movsl
popa
inc
pop
sub
popf
xchg
sbb
add
sub
sbb
andl
inc
dec
push
inc
push
add
inc
xchg
cmp
push
push
push
sbb
jns
daa
repz
add
mov
cmp
adc
jne
sub
ret
sbb
gs
in
stos
loop
fists
push
mov
nop
push
call
mov
push
jp
gs
sbb
jge
mov
cmovs
jne
push
dec
jne
call
lret
ss
push
push
jmp
add
mov
cmp
add
inc
popa
ss
ss
leave
jne
out
pop
add
sbb
adc
adc
jns
les
push
xor
sbb
lds
adc
enter
enter
fcoml
enter
mov
stos
icebp
xor
pop
sar
sub
cmp
pop
imul
pushf
sub
pop
or
mov
xchg
pop
adc
inc
mov
add
leave
cmp
stc
arpl
in
fiadds
mov
jg
cmp
pop
mov
ret
aad
aad
scas
fcoml
sub
movsl
xor
pop
xchg
rolb
stc
push
inc
adc
and
mov
leave
cmp
cmpsl
xor
dec
inc
push
xor
dec
jnp
dec
xchg
sub
dec
inc
push
sub
int3
jecxz
sbb
cmc
pop
adc
sub
pop
inc
sbb
fstl
push
dec
sbb
inc
test
sbb
out
mov
popf
sub
sub
icebp
xor
jnp
dec
lds
mov
adc
fisubs
mov
inc
adc
and
rcl
adc
mov
sub
sbb
add
das
sbb
push
stos
das
sbb
test
loope
stos
sbb
leave
stos
das
sbb
test
xchg
jno
inc
loope
fnstenv
push
push
xchg
addb
sub
mov
add
push
mov
sub
shll
pop
xchg
or
dec
dec
xor
sbbb
mov
pop
jg
jg
jno
ffree
xchg
adc
jle
sub
adc
adc
rcrb
xchg
adc
jge
mov
sarb
cltd
add
sbb
xchg
adc
jl
mov
sarb
add
sbb
loopne
cs
sarb
cltd
add
sbb
adc
daa
xchg
jp
jns
pushl
jnp
mov
das
adc
jns
pop
std
push
jns
and
mov
loopne
call
mov
mov
loopne
call
mov
mov
adc
xor
mov
pop
add
mov
ja
mov
nop
or
icebp
push
flds
xor
push
icebp
sbb
les
ds
je
gs
inc
loope
inc
jno
movsb
mov
gs
loope
sbb
xorl
enter
es
mov
mov
mov
cs
sub
sub
jb
sub
jb
xor
mov
sbb
les
xchg
xor
fs
and
dec
add
aad
sub
push
and
je
add
shll
jns
mov
xchg
movsl
cmpsl
adc
pop
pop
das
imul
xchg
pushf
pop
in
lahf
sbb
jo
pop
out
cld
shll
jmp
ret
fnstsw
push
xor
imul
stc
push
mov
inc
push
xor
pop
int3
xchg
xchg
push
cmp
adc
xor
and
cmp
and
rcrb
mov
insl
xor
mov
inc
and
sbb
pop
adc
xchg
ret
push
ret
push
shll
fadds
in
stc
mov
add
sbb
sub
mov
cli
xor
xor
xor
inc
mov
dec
push
and
in
aam
sub
xor
dec
push
sbb
dec
mov
and
xor
orb
adc
dec
scas
inc
mov
xor
outsb
jb
icebp
sbb
dec
push
or
and
mull
fstpt
adc
push
sbb
fimull
mov
xor
jg
sbb
dec
or
addr16
les
mov
sti
cmp
aam
cmp
xor
in
xor
add
push
ret
jno
push
push
adc
mov
fstpl
call
iret
mov
stc
popa
outsb
rorb
jge
out
test
cmc
inc
jge
mov
xchg
jne
xor
cmp
mov
mov
in
sbb
lock
imulb
sbb
jb
imul
int
icebp
inc
sub
mov
xor
jnp
leave
sbb
imull
push
and
dec
ja
in
or
sbb
loopne
add
push
inc
jno
push
loop
mov
jns
je
pop
cmp
loop
mov
mov
inc
xchg
fdiv
mov
push
or
mov
mov
dec
dec
test
and
adc
push
xor
dec
cld
sbb
sbb
push
mov
cmpsl
gs
sub
movsl
sahf
cs
mov
movsl
pop
adc
addr16
in
jnp
jecxz
sbb
sub
data16
cs
sbb
jb
pop
jns
dec
mov
inc
inc
sbb
inc
ret
mov
mov
sbb
insb
dec
sbb
sub
pop
xchg
push
inc
inc
fs
std
lods
push
inc
sub
xchg
inc
lcall
jp
cmp
inc
lret
pop
push
in
stos
in
stos
lret
lahf
sbb
xchg
mov
inc
push
xor
stos
sbb
jge,pn
insl
pop
xor
jno
pop
das
test
xor
xchg
arpl
icebp
and
sbb
stos
sub
sbb
loope
lret
jo
mov
ds
jge,pn
popa
and
pcmpgtd
jb
jg
add
sbb
jge
pop
jl
push
cmpsl
inc
inc
push
dec
pop
iret
cld
sbb
mov
aam
pop
das
outsb
and
stos
sbb
lds
adc
roll
int
jge
sbb
xchg
sub
cld
inc
rcrl
and
rcrl
std
ss
and
xor
sbb
cld
loope
xor
fnstsw
push
shl
jg
mov
push
daa
pop
mov
lods
mov
mov
mov
fnstenv
xor
and
lods
imul
pop
call
jae
shr
cmc
push
adc
lods
scas
xor
add
loopne
mov
cmp
adc
pop
xchg
imul
push
and
std
xchg
jp
sbb
arpl
jo
in
sub
or
jmp
xor
push
loopne
mov
std
push
adc
cmpsb
imul
sub
jecxz
fstl
ret
push
sahf
loope
lods
test
es
adcl
and
mov
cmp
push
addr16
xor
sub
enter
das
pop
cmp
popa
dec
lret
addr16
xor
jne
adc
and
hlt
or
fnstsw
dec
sub
mov
jne
sbb
inc
push
adc
and
inc
sub
arpl
jecxz
inc
sub
andb
inc
lds
std
xor
addb
cmc
xor
subb
scas
jl
in
pop
xor
leave
push
adc
inc
jns
gs
ret
scas
fsubrl
push
out
fisubrs
std
add
inc
xchg
inc
in
loopne
push
inc
icebp
mov
pop
insb
dec
sbb
mov
inc
or
loope
stc
movsb
pushf
imul
aas
or
and
loopne
jecxz,pn
arpl
sbb
fstpl
xor
and
jne
lret
pop
mov
popa
pop
scas
daa
cmp
adc
jmp
add
subl
sbb
imul
movsl
sbb
xorl
iret
imul
cmc
cmp
jo
movsb
mov
insb
dec
sbb
lea
or
loope
xchg
cs
out
pop
cmp
jns
mov
mov
addr16
gs
xchg
cmp
ficompl
cmp
inc
push
lcall
out
sbb
sub
pop
mov
sub
xor
gs
xorl
cltd
xchg
insb
dec
sbb
mov
or
movsl
xorl
cltd
xchg
insb
dec
sbb
ficompl
jecxz
mov
adc
pop
jecxz
sbb
cmp
shlb
xor
jecxz
sbb
pop
add
xor
mov
sbb
pop
cli
cmp
mov
cli
and
xor
dec
mov
push
jae
xchg
inc
mov
pop
ret
jo
and
jecxz
jo
std
pusha
push
cmp
call
push
or
mov
xchg
inc
cs
aad
xor
pusha
aad
mov
pop
mov
andb
lods
and
xchg
in
cs
ja
sbb
xchg
shll
sarl
sbb
mov
ja
mov
xchg
or
mov
pop
sbb
pusha
mov
call
jno
mov
dec
add
sbb
leave
push
xchg
shlb
mull
sub
dec
sbb
out
cmc
or
sbb
das
cmc
iret
or
icebp
insb
xor
fldl
sbb
and
sbbl
movsb
insl
cmc
insl
into
ret
call
inc
int
jb
movsl
sbb
call
sub
dec
mov
data16
jg
sbb
cld
pushf
leave
inc
int3
popf
and
add
xchg
sub
dec
sbb
jle
roll
lahf
mov
stc
ljmp
lock
push
push
fldl
popa
push
add
sbb
mov
inc
lods
into
gs
frstor
and
cmp
loopne
sub
and
cmp
xchg
push
mov
bnd
add
jle
mov
icebp
jo
pop
cmp
jmp
mov
mov
imul
sub
in
pusha
push
xchg
push
add
push
stos
mov
jge
push
push
dec
sub
test
enter
adc
rcll
push
push
stc
push
stos
mov
cmp
and
lret
xor
jbe
xchg
in
sbb
shrb
lcall
stc
ss
jg
cmp
rolb
pop
sbb
jmp
xorb
cmc
out
jle
jecxz
cmp
frstor
cmpsl
adc
pushf
pushf
pop
aad
lea
frstor
fs
jmp
fsubrp
cmc
sub
cmp
mov
or
sub
loopne
das
pushf
xor
shlb
aaa
cs
imul
call
jo
in
in
dec
in
shrl
popa
addr16
enter
sbb
cmp
repnz
jae
lock
dec
adc
adc
cmp
sub
xor
daa
dec
out
cs
daa
sub
ret
xor
decl
icebp
ret
xor
and
and
fnsave
cmc
lea
sub
andl
popf
xor
cmp
das
cmc
xchg
mov
dec
popf
push
adc
push
sub
hlt
cmc
pop
adc
and
jno
loopne
ss
pop
xor
jne
adc
shlb
cmovno
add
xor
sub
pusha
mov
push
popf
xchg
push
mov
jne
pop
inc
push
aaa
add
adc
rcrl
mov
jge
push
xor
add
sbb
in
add
push
rol
sar
sbb
les
out
sbb
or
add
add
sub
sbb
xchg
sbb
add
and
jo
cs
sbb
mov
and
push
sbb
lea
or
sbb
and
mov
ja
mov
jg
inc
or
xchg
sub
arpl
sbb
jge
pop
hlt
push
or
stc
inc
loopne
sub
movsl
sbb
jecxz
add
mov
aam
cmp
pop
add
std
flds
push
fldenv
mov
movsl
sbb
lret
mov
xchg
rcrb
jbe
xchg
add
imul
insb
in
inc
movsl
pop
sbb
dec
sbb
arpl
adc
sbb
cli
add
jno
movsl
sbb
lret
add
or
add
xor
mov
aam
fnstsw
sbb
fucomp
jg
notl
sbb
scas
daa
adc
fstps
cmc
sub
icebp
arpl
sbb
mov
or
sbb
pushf
mov
mov
test
enter
jno
inc
mov
shrl
mov
addr16
or
inc
pusha
mov
andb
push
sub
inc
push
and
jmp
lods
mov
sub
fwait
push
in
push
sbb
jbe
ja
bound
xor
jmp
or
adc
sbb
in
pushf
xchg
aad
imul
sbb
rcl
xor
mov
jo
mov
xor
dec
or
jno
sub
shl
jl
jns
imul
add
and
push
push
adc
mov
aaa
xchg
fsubs
xchg
rcll
sub
mov
jb
push
sub
sbb
push
adc
or
jmp
or
inc
lds
jno
cld
sbb
les
fsubs
add
mov
pop
sub
pop
inc
or
aas
loop
insl
mov
push
loopne
out
inc
inc
push
sub
sub
mov
inc
daa
mov
mov
aad
out
jno
test
and
lds
push
sbb
dec
cmp
es
and
imul
inc
dec
enter
jmp
gs
and
sbb
sub
aaa
rclb
mov
dec
sub
loope
push
loope
ljmp
sbb
loope
rcll
rcl
ja
sub
pop
xchg
push
pop
aaa
and
push
sub
aaa
rclb
aad
shlb
sub
inc
push
dec
cs
sbb
out
jmp
movzbl
gs
lret
inc
mov
xor
and
in
pop
subl
pop
rcrl
mov
and
dec
rclb
sub
sbb
xor
push
push
dec
sub
sub
mov
push
jp
mov
fstpl
mov
pop
push
mov
movsl
lea
add
int
xchg
movsl
jecxz
pushf
pusha
lds
leave
aaa
jns
cmp
xchg
mov
loope
movsl
xor
push
icebp
fdivl
idivb
mov
out
fnstenv
add
jg
ljmp
outsl
xor
sbb
adc
loope
pop
test
lea
jg
inc
inc
adc
and
sbb
aas
push
sbb
loope
aam
call
push
sbb
add
movsb
mov
add
lods
xchg
add
jle
cmp
idiv
and
hlt
jmp
decl
pop
gs
and
stc
mov
out
std
fisttps
lods
repnz
cld
add
cld
movsb
fwait
sbb
sbb
fisttps
lods
push
dec
pop
cli
orl
cli
jbe
xchg
and
dec
call
push
xchg
add
fst
adcb
mov
inc
sti
and
lea
adc
dec
aam
sbb
cmpsl
adc
inc
inc
push
adc
inc
or
cmpsl
or
adc
mov
mov
out
cmp
mov
lcall
cmp
cmc
and
popf
cli
mov
sub
fisttpll
fnstenv
jge
push
lcall
daa
and
stc
int3
push
push
test
push
shll
cmp
push
sti
frstor
leave
divl
sbb
orb
cmp
mov
mov
mov
mul
in
adc
testb
mov
mov
mov
xor
adc
adc
cmc
pop
and
cmc
and
iret
hlt
cmp
xor
cmp
cs
adc
repz
and
repz
mov
adc
dec
sub
aad
jge
repnz
icebp
and
rcrl
push
sarl
roll
test
lock
xor
mov
push
cltd
push
sbb
out
inc
or
sbb
xchg
sbb
cltd
icebp
sbb
sti
hlt
out
or
in
sbb
jmp
cmp
cmp
dec
add
in
sbb
mov
adc
faddl
rcrb
stos
aaa
in
add
mov
fsubrp
dec
test
jle
jg
sbb
xor
and
test
xchg
imul
sbb
xor
pop
mov
xchg
pop
fdivl
mov
mov
cmpsl
xor
pop
mov
lods
xor
jo
mov
mov
fs
call
sbb
cmp
lock
add
sbb
xor
xor
sbb
adc
inc
ljmp
fisttpll
out
movsl
sbb
out
insl
xor
mov
imul
xor
loope
jmp
push
loope
ljmp
dec
add
push
icebp
sbb
roll
cmp
rcll
xor
pop
gs
rcrb
les
frstor
lods
and
sbb
push
gs
loope
sub
push
mov
jg
sbb
stos
adc
dec
and
subl
rorl
sti
lret
rcll
push
xchg
and
sbb
ror
loope
xor
fimuls
daa
jae
mov
ror
adc
icebp
ret
mov
dec
fisttpll
or
push
dec
popa
imul
enter
fmull
fdivr
movsl
sub
xchg
inc
cld
add
adc
jg
inc
sbb
stc
and
fidivrl
fcomi
sbb
outsl
cs
mov
xor
sbb
sub
push
scas
cs
int
mov
loope
dec
push
scas
pop
sub
sbb
sbb
sub
jne
sbb
jns
jno
gs
cmpsl
sub
sbb
mov
xor
aad
pop
mov
and
out
loopne
inc
inc
rclb
inc
lret
adc
aaa
inc
pushf
jmp
xor
xchg
xor
testl
sub
pop
ja
and
pop
xor
pusha
inc
ror
ss
push
mov
mov
popf
fcomi
jge
dec
and
adc
loope
mov
ret
cmc
fstl
adc
sub
jne
cmp
roll
sarl
out
cmp
sarl
dec
sub
dec
test
and
jle
cmc
mov
ret
and
and
in
mov
leave
dec
fldenv
fmuls
and
popa
cmpsl
fcomp
mov
movsl
xor
xlat
pop
loope
sub
add
add
test
sbb
xchg
push
jns
cmp
mov
or
sub
xor
rol
nop
sub
push
xor
nop
mov
sub
mov
out
add
xor
mov
adc
gs
cmpsl
xchg
mov
dec
aad
aam
leave
aam
outsl
xchg
cmp
in
rcl
lds
in
enter
xor
shrl
dec
cmp
cmp
iret
addr16
xor
movsl
pop
int
pop
xor
int
lret
int3
iret
push
or
or
out
into
in
icebp
cltd
rcr
lds
jne
movsl
out
shrl
or
xor
enter
ja
fwait
lods
add
push
popa
mov
sarb
or
sbb
or
pop
inc
xor
mov
or
ret
or
ret
rcl
dec
xor
loope
add
xchg
inc
inc
mov
and
cmp
push
sub
and
mov
int
mov
push
inc
icebp
loopne
mov
jb
cmc
cmp
sbb
int
loope
add
int
inc
inc
fchs
xchg
and
xsaves
mov
inc
stos
lret
js
ds
inc
movsl
scas
addr16
mov
ret
cmp
jbe
xchg
jne
addr16
dec
dec
cmpsb
mov
sbb
mov
jge
cmp
cmp
sarb
mov
and
pop
or
sbb
add
shl
sbb
jns
js
fcmovne
or
flds
push
fldenv
and
cmp
std
mov
mov
je
stos
sub
sbb
xchg
loopne
and
dec
sbb
mov
sub
push
and
addr16
jge
inc
sub
call
cltd
push
push
gs
fcmovne
jecxz
cmp
sbb
outsb
out
test
sbb
stos
pop
jge
mov
gs
shr
and
in
jnp
sbb
add
xorps
movsl
adc
shlb
mov
mov
add
jge
push
push
leave
add
xor
sbb
push
mov
cmp
les
insl
fnstenv
imul
sbb
int
mov
jmp
les
cld
popf
flds
cmp
mov
xchg
movsl
sub
shlb
aaa
jns
scas
data16
sbb
in
test
pusha
mov
negl
lahf
loope
in
test
sbb
xchg
int
loope
xor
mov
insl
mov
imul
int
fsub
xor
sbb
insb
fstps
xchg
or
add
pushf
sbb
and
mov
loope
stos
loope
das
mov
loopne
xchg
int
add
loopne
jge
cmp
movsb
hlt
inc
lods
loopne
jecxz
cmp
in
or
xor
data16
nop
add
gs
cmp
mov
stos
pop
xor
inc
les
xchg
pop
dec
xor
mov
jecxz
xor
lcall
lods
mov
pop
setg
gs
sbb
out
mov
std
cld
stos
and
mov
jg
xchg
add
mov
inc
dec
inc
push
pop
mov
nop
adc
sbb
adc
addr16
subl
jns
and
leave
push
add
cmp
test
std
add
adc
mov
mov
std
adc
or
cmpsl
pusha
cmpsl
sbb
jns
scas
xchg
in
dec
cli
mov
mov
sub
lods
xchg
test
inc
add
mov
std
sbb
test
loopne
add
inc
movsl
popa
push
mov
sbb
test
push
sbb
xchg
ja
inc
sbb
inc
sub
sbb
mov
arpl
or
ja
mov
cmp
ret
mov
roll
sub
cmp
xor
loope
xor
cmp
xchg
mov
push
xor
aam
xor
pop
ljmp
add
adc
xchg
xchg
sbb
adc
cmp
lahf
add
aam
and
adc
lret
pop
in
adc
and
lods
sbb
dec
fst
push
adc
lahf
bound
ss
leave
leave
cmpsl
adc
sbb
adc
setno
xor
pop
xchg
xchg
push
add
dec
shrd
push
or
popf
adc
sub
or
dec
or
pushf
rcrb
ss
roll
or
dec
cmp
les
sbb
or
std
pop
add
dec
sub
cmp
inc
sbb
push
pop
cmpsl
sub
add
addr16
add
xchg
loopne
push
or
stc
cmpsl
push
inc
adc
sub
psllw
push
push
pop
inc
lods
pop
add
push
mov
addr16
push
jmp
ss
insb
xor
jne
add
in
inc
add
add
loope
xor
frstor
sub
gs
inc
fsts
rol
add
add
add
outsb
test
stos
je
fistps
jnp
mov
outsb
test
push
push
adc
cs
andl
or
lcall
cmp
cmp
cmp
cmp
call
adc
mov
xchg
jge
xor
outsl
call
push
dec
popa
push
ret
xchg
stc
and
jne
mov
xchg
movsl
and
push
xchg
lea
and
pop
int
adc
or
test
jne
popf
outsb
hlt
cltd
popf
dec
sti
mov
mov
mov
mov
lds
mov
mov
orl
adc
jecxz
pushf
adc
xor
inc
rcll
push
sar
stos
es
sub
sub
pop
pop
repz
mov
jns
cmp
lds
mov
dec
inc
dec
adc
aad
cltd
pop
shll
inc
fsub
out
popf
sub
and
push
mov
bound
in
dec
mov
mov
enter
add
and
mov
cmpsl
sbb
lahf
lds
loopne
dec
mov
dec
push
cmpsb
dec
xlat
std
in
in
sahf
mov
out
and
sti
popf
ja
ja
sbb
push
mov
pushf
inc
leave
pushf
lods
push
aam
cmp
sub
fwait
jecxz
repnz
hlt
lcall
leave
loop
cltd
mov
orb
xor
dec
inc
sub
dec
fisttps
sub
fadds
fidivrs
push
gs
dec
xchg
and
lods
aad
fistpll
pusha
dec
dec
shl
dec
dec
cmp
enter
dec
add
sti
sbb
in
mov
add
fistpll
sti
mov
xor
inc
imul
add
add
xorl
adc
pop
shrl
jle
inc
inc
ror
rolb
std
push
sti
jns
xor
add
incb
rcrb
xor
mov
xchg
ret
pop
adc
push
cmc
xchg
adc
sti
xchg
mov
imul
dec
mov
sbb
test
int
outsb
leave
int
xchg
fs
xchg
andl
scas
addr16
xchg
cmpl
xor
xchg
and
dec
xchg
and
xor
pop
pop
sub
push
test
pop
pushf
adc
stos
or
pop
loop
mov
test
lods
test
scas
sub
xor
sbb
movsb
call
and
scas
iret
adc
add
add
sbb
test
add
mov
pop
loope
mov
inc
lods
shll
sbb
iret
shll
movsl
lea
pushf
or
adc
in
dec
or
mov
xor
dec
jecxz
sbb
lods
mov
mov
jmp
lods
insb
dec
sbb
aaa
mov
sub
dec
sti
mov
movsl
sbb
sub
push
mov
sbb
das
rcl
mov
xchg
fnstsw
add
add
pop
lods
add
dec
xchg
das
xchg
popf
lods
insb
dec
sbb
lods
popa
test
add
jns
fcos
jl
lods
icebp
sbb
add
and
xchg
or
daa
loope
inc
movsb
call
cmp
xchg
adc
push
orl
jmp
and
popf
mov
lds
add
addr16
xchg
out
xchg
push
cmp
out
inc
mov
dec
test
jge
subl
jmp
sti
ret
adc
shll
and
pop
push
inc
mov
jmp
add
or
pop
fisttpll
mov
lea
or
rcl
inc
sbb
jne
cs
andb
sub
inc
andb
sub
inc
jp
mov
xor
add
xor
inc
rcrl
pop
stos
icebp
pop
sub
sbb
ret
mov
cmpsl
subl
mov
test
outsb
jecxz
popa
inc
sbb
push
mov
push
dec
and
hlt
fwait
mov
subl
sbb
ret
insb
stc
xchg
lea
push
ss
sub
icebp
mov
push
sub
cmc
outsb
fcompl
push
mov
adc
inc
sub
enter
or
lahf
daa
stc
mov
frstor
pop
jg
jg
mov
cmp
cmp
ss
jle
leave
dec
dec
jle
dec
dec
cmp
cs
dec
loope
sbb
ds
jl
sbb
mov
jb
jne
sub
jnp
aad
xor
stc
ret
popf
es
push
xor
lock
jno
xchg
xor
add
stc
sbb
lgs
shlb
inc
leave
jae
push
sbb
aaa
jns
insl
xchg
inc
push
popa
push
push
leave
sbb
stc
jg
sbb
dec
add
js
and
add
sbb
stc
mov
add
pop
into
add
pop
cs
call
bswap
stc
mov
iret
stc
mov
aaa
sbb
popa
popa
mov
push
stc
push
sbb
stc
mov
sub
sub
xor
stc
icebp
sbb
sti
cli
jb
adc
xor
stc
icebp
sbb
xchg
add
movsl
outsl
lret
mov
mov
mov
or
rcrb
mov
push
movsb
jmp
mov
cmp
test
jmp
cmp
subl
fwait
packuswb
lcall
sbb
push
sbb
xchg
inc
ret
xor
adcl
mov
ss
std
xchg
mov
inc
xchg
sbb
rorl
dec
insl
bound
scas
les
ret
jno
rcll
call
loope
sbb
dec
scas
and
lods
and
cs
icebp
xor
mov
and
pushl
mov
dec
adc
popa
pushf
mov
dec
or
sub
mov
daa
movsl
or
mov
lods
xchg
mov
sbb
das
mov
movsb
or
sbb
mov
mov
sbb
and
sbb
jg
sbb
std
mov
mov
mov
mov
jno
lods
lods
xor
dec
mov
mov
push
rorb
xor
dec
gs
movsl
sbb
mov
and
mov
mov
sbb
or
sbb
test
jmp
movsb
or
jnp
mov
std
gs
insl
iret
push
sbb
ficoms
fwait
cltd
pop
icebp
push
xchg
jns
in
popf
dec
fnstsw
sbb
fnstenv
jmp
test
cmc
ljmp
popf
jecxz
jmp
jmp
cmp
xor
push
adc
dec
out
pop
movsl
push
fdivrp
add
ret
fldl
mov
std
movsl
sbb
sub
sbb
lea
sub
rcrb
scas
sub
or
lcall
rcrl
pop
rcrb
mov
fsub
sbb
adc
jne
sbb
jp
in
les
movsl
push
inc
xor
adc
pushf
dec
sbb
sub
jbe
inc
or
stc
sbb
insl
xor
sbb
sbb
sub
and
jecxz
jns
lods
mov
add
add
rorl
loop
std
cli
movsl
sub
popf
sbb
jmp
push
sub
test
loope
add
addl
jmp
in
jo
fldenv
push
push
movsl
and
inc
adc
dec
int
lret
pusha
cmp
mov
pop
aaa
mov
cmp
and
cmp
xor
mov
jge
cld
loopne
test
popa
je
jle
xor
rcr
out
ss
xchg
fistps
cmp
aas
sbb
sbb
inc
push
fisubs
cs
fnsave
push
adc
aad
adc
das
cmp
fsubl
sub
jno
mov
imul
nop
fisubl
cmc
ficompl
or
jne
or
inc
add
push
or
frstor
insl
test
sub
mov
sub
add
sub
inc
jmp
fldenv
xchg
ljmp
popf
dec
int
aaa
jge
xor
in
sbb
push
sbb
leave
dec
cmpl
in
jmp
aad
shrb
or
sub
mov
or
mov
mov
andb
sti
sbb
xor
pop
sbb
stc
ja
and
imul
push
divl
xor
orb
xor
push
pop
sbb
rolb
xor
pop
sbb
add
push
loope
int
inc
stc
popf
push
test
and
ret
std
mov
test
push
cmp
int
js
mov
rcr
dec
xchg
sbb
lret
push
cmp
and
sbb
aad
inc
pop
jp
leave
sbb
mov
int
dec
loope
or
sbb
add
dec
jge,pn
hlt
dec
daa
loope
inc
mov
mov
dec
adc
iret
dec
loope
push
lea
sbb
lea
dec
or
sbb
inc
push
inc
leave
pop
mov
movsl
sbb
add
rcrl
cltd
cltd
pop
loopne
insb
dec
sbb
lea
sbb
cmp
loopne
jg
sbb
scas
aaa
inc
ss
cmc
xchg
inc
sub
cmp
pop
fimuls
mov
movaps
push
push
or
mov
mov
fldenv
inc
or
mov
cmp
lock
jecxz
sbb
test
lea
jg
or
sbb
fisttpll
add
cli
xchg
adc
xor
cltd
sub
std
in
cmp
sbb
movsb
jne
gs
ss
pop
pop
lods
xor
pop
aad
xorb
into
or
sub
incb
lcall
std
cli
inc
mov
sbb
cmp
popf
add
andb
inc
stos
mov
rolb
les
jbe
leave
sbb
das
popf
sarb
in
test
pop
das
sub
jbe
movsl
sbb
imul
push
mov
popf
movsb
stos
addr16
mov
cmpsl
sarl
ds
xor
cmp
dec
cmp
frstor
and
add
and
xor
sub
jns
ret
sub
iret
das
mov
mov
leave
shl
and
add
mov
push
leave
icebp
sbb
cli
adc
repz
add
imul
sbb
dec
inc
fisubrl
mov
popf
add
mov
addb
sbb
insl
jno
addl
pop
ss
push
jge
dec
mov
mov
xchg
and
icebp
and
xor
les
filds
lahf
fldl
shl
movsl
push
xchg
pop
lcall
push
adc
push
pop
jmp
jge
mov
leave
push
mov
push
dec
subb
int
and
sarl
and
cmp
cmp
xchg
cmp
xchg
cmp
push
cmp
push
aaa
and
ss
and
cmp
and
ss
jge
xor
inc
jmp
xor
and
sub
and
iret
rorb
xchg
sub
mov
xor
sub
stos
pop
roll
dec
xchg
xor
dec
ljmp
int3
pusha
dec
dec
cmp
mov
leave
and
dec
sub
pop
das
rcrl
int
sub
or
lds
mov
lods
fstpl
repz
lock
pop
les
adc
out
or
mov
push
ja
orl
jnp
filds
lds
aad
jge
push
shll
jns
jge
xor
sbb
mov
xor
and
sbb
adc
lea
sbb
addr16
cld
ret
xor
sbb
lea
andb
xor
insb
dec
sbb
daa
sbb
int
sub
loope
lret
lea
add
scas
aaa
sbb
mov
mov
icebp
sbb
and
or
xor
ret
sbb
lock
xchg
incl
adc
bnd
sbb
add
sbb
pop
cli
xorb
sbb
mov
pop
or
push
xchg
inc
loopne
cmp
adc
dec
loope
ret
bound
pop
imul
mov
adc
or
inc
in
iret
cltd
cli
mov
adc
and
cmc
mov
jb
stos
adc
adc
rclb
pop
flds
sbb
out
mov
cmpsl
adc
adc
adc
movsl
insl
aad
pushw
adc
aad
std
xchg
xchg
push
and
lock
stos
adc
jno
gs
xor
stc
popf
incl
xchg
adc
add
pusha
adc
and
sub
lods
inc
pop
pop
mov
add
insl
inc
in
cltd
out
push
fcomi
push
pop
and
mov
out
in
scas
data16
nop
insl
jecxz
out
adc
and
xchg
adc
std
aaa
and
mov
jp
arpl
fstl
xor
and
popf
dec
add
push
jne
xchg
pop
into
insl
dec
adc
popf
or
xchg
call
jmp
add
or
adc
int
sbb
pop
repnz
pcmpeqw
gs
push
inc
cltd
mov
fdivl
sbb
jmp
cmp
or
mov
xor
xor
dec
cmpb
dec
sbb
out
lea
push
push
sbb
outsl
push
leave
xor
inc
out
sbb
in
leave
mov
adcb
les
in
cmpsl
or
decb
dec
sub
popa
jge
sbb
in
pop
dec
cmp
fcoml
test
or
sbb
test
sbb
pusha
inc
adc
repz
add
imul
sbb
or
jae
or
inc
dec
sbb
push
dec
push
adc
outsl
mov
popl
jnp
or
cltd
add
iret
or
sbb
test
sbb
mov
roll
cld
pusha
icebp
pop
pop
and
add
inc
jmp
xor
cltd
mov
adc
cmpsb
push
ja
loop
dec
mov
loope
loope
inc
push
or
cli
sbbl
aam
lahf
mov
popa
js
das
mov
sahf
sub
andb
movsb
imul
jno
sahf
sti
imul
ljmp
sahf
punpcklwd
insb
outsl
xor
inc
sbb
cmp
cmc
in
jns
sbb
sbbl
xor
inc
dec
lcall
inc
in
sbb
jns
ss
cmp
popa
insl
or
fs
sbb
je
in
pop
mov
sbb
push
add
and
add
xchg
in
sbb
add
sbb
sbb
sbb
push
int3
lds
movsl
shr
addr16
inc
mov
aam
mov
ss
sbb
push
outsl
fmul
push
sbb
cmc
decb
aad
cmp
dec
shll
xchg
mov
das
sbb
jns
popf
loope
loope
shrl
jge
leave
sub
std
fdivs
add
add
cli
sub
shl
cld
or
in
sbb
adc
pop
mov
in
push
insl
nop
pop
fwait
lods
mov
dec
jo
and
mov
sub
mov
stc
fildl
inc
push
ss
stos
nop
push
cmp
lods
mov
popf
mov
xchg
stc
aam
dec
cmp
adc
fisubrs
popa
or
mov
push
cli
mov
fstl
push
and
inc
sbb
adc
lds
xchg
fldcw
pop
mov
lods
pop
jge
push
mov
or
addr16
cmc
nop
pop
mov
push
push
dec
stc
and
ljmp
hlt
mulb
jne
sub
rcrl
and
dec
inc
jle
cmc
add
icebp
mov
or
jg
jne
add
hlt
lock
sub
sbb
inc
pop
dec
repz
cs
push
popf
test
andb
push
pushf
and
lock
dec
xchg
test
xorb
jne
pushf
sbb
jmp
loopne
dec
sub
or
push
adc
sub
sbb
sti
mov
leave
mov
into
std
lahf
leave
bound
sbb
cmc
dec
push
xor
xchg
icebp
dec
pop
sti
sbb
and
dec
outsl
inc
sbb
movsb
jns
test
and
cmp
push
sub
jb
jmp
jle
aaa
and
sbb
mov
or
dec
pop
sbb
inc
aad
dec
pop
shrl
push
jle
push
pop
lds
jns
pop
cmp
popa
insb
adc
or
dec
fstpl
cmp
sbb
jmp
push
pop
out
sbb
push
push
aas
and
roll
xor
daa
daa
and
xor
push
jae
mov
lods
fnstenv
push
dec
push
inc
cltd
jg
dec
push
push
shlb
push
iret
lret
inc
push
dec
push
neg
scas
mov
adc
xor
sbb
dec
push
insl
xor
rcrl
pop
loope
jae
outsl
jmp
in
shl
loope
sbb
inc
pop
dec
jmp
or
push
push
cmp
clc
jmp
hlt
jns
jns
jns
mov
push
push
lock
mov
xchg
rcl
xor
inc
add
adc
pop
inc
cmp
fdivs
push
dec
sbb
sbb
dec
cmp
repnz
cs
shr
mov
icebp
popf
hlt
repnz
mov
ss
mov
mov
or
push
jns
rol
or
ljmp
or
add
push
nop
add
sahf
aam
or
pop
dec
rol
sub
sub
cmp
mov
in
cmc
stos
sub
cmp
negb
lea
sub
cmp
dec
adc
push
jg
xor
sub
shlb
push
mov
mov
fbld
sbb
push
cmp
inc
mov
add
dec
sbb
mov
pop
repnz
ljmp
imul
rol
aam
mov
inc
or
aam
pop
out
ss
xor
pusha
inc
inc
adc
mov
or
cmpxchg
adc
out
call
xor
loopne
arpl
inc
cmp
jmp
inc
stc
and
out
lods
sbbb
lock
add
sub
dec
mov
and
jecxz
adc
adc
cwtl
in
pop
mov
and
fadds
cwtl
int
push
or
or
cmpsl
add
mov
loope
rclb
pop
mov
call
xor
dec
jmp
hlt
sbb
mov
jae
cld
and
stos
daa
and
inc
mov
lock
out
lods
adc
rolb
js
es
popa
out
xchg
cmp
aad
pop
scas
sbb
sub
and
nop
xchg
jge
repnz
mov
call
adcb
cwtl
aaa
sub
mov
adc
movsb
icebp
mov
xchg
xor
xor
xor
push
lods
adc
cmc
js
and
or
pop
push
or
shll
jno
cltd
inc
mov
prefetchwt1
and
cmp
insl
add
or
sub
jne
lret
sbb
xor
hlt
daa
mov
xchg
addr16
je
std
or
jo
leave
and
xor
cmpb
fistpl
or
xchg
inc
sti
jmp
data16
inc
ja
cmc
sub
sarb
fwait
or
insl
mov
or
xchg
cmp
movsb
cmp
mov
addr16
ja
or
push
add
xchg
leave
push
orb
jbe
mov
hlt
sub
ljmp
pop
xor
cli
push
mov
dec
in
jecxz
pop
das
mov
jne
stc
out
mov
loop
leave
aaa
xchg
testl
shlb
push
test
mov
movsl
loope
lret
xor
inc
iret
xchg
and
add
out
adc
divl
out
and
push
lds
cmp
jns
int3
loopne
rep
nop
jmp
popf
jle
jae
add
inc
pop
xor
adc
cmp
int
jmp
dec
push
enter
out
icebp
cmpl
add
dec
and
incl
sbb
mov
lods
sub
ret
push
fisttpl
and
movb
xor
adc
fmuls
xor
pop
pop
or
xor
aas
pop
call
adc
mov
adcl
adc
mov
adc
sbb
enter
mov
sub
cmp
add
mov
cmp
pop
jge
fbstp
aaa
loope
add
pop
leave
mov
mov
mov
mov
push
add
out
ss
stos
sub
flds
xor
sub
jmp
movsl
movsl
add
shl
xor
mov
ja
movsl
xchg
hlt
fucomp
stos
adc
xor
pop
xor
in
ljmp
rcl
sbb
jle
or
add
loopne
or
lock
pop
dec
push
add
push
fldt
cli
sub
dec
push
and
mov
nop
add
loopne
adc
scas
push
sbb
jno
or
adc
aam
push
inc
mov
sub
xlat
adc
lds
add
in
sub
int
sub
out
inc
adcl
inc
jns
shr
jne
ret
test
push
sub
lahf
lods
test
shrb
sub
jmp
adc
mov
add
cmc
inc
push
insl
fnstenv
sbb
icebp
dec
adc
jge
roll
jmp
add
mov
or
pop
leave
aas
insl
or
in
sub
cli
adc
xor
jns
xor
movsl
and
cmp
add
inc
cmp
xor
jecxz
gs
mov
pop
scas
adc
and
xchg
std
pop
and
mov
xor
push
shl
cmc
daa
add
mov
fcoml
adcb
pop
cmp
dec
mov
mov
ss
movsl
pop
daa
nop
adc
movsl
ror
inc
or
xor
enter
push
cmpsl
pop
sub
inc
pop
sub
shl
xchg
inc
mov
daa
aaa
push
add
adc
hlt
int
pop
sub
sub
rorl
ret
xchg
cmpsl
icebp
test
stos
rolb
jno
xchg
sub
jno
lret
xor
test
xlat
sbb
and
std
gs
lds
cmc
jle
hlt
dec
inc
jp
mov
loop
push
inc
xchg
ret
push
mov
xchg
sub
push
pusha
hlt
in
stos
enter
push
rorb
pop
xor
add
in
xchg
call
cmc
in
adc
add
popa
repnz
push
ficoml
mov
mov
aas
push
pop
lret
xor
sarl
push
fisubrl
xor
into
pushl
adc
jne
pop
cmpb
sti
int3
sbb
loopne
das
dec
repz
sub
xor
jns
lret
lret
mov
pop
jge
cs
xor
sbb
mov
rcll
enter
sbb
add
sbb
inc
mov
adc
inc
xor
sub
and
aad
xlat
mov
fidivrl
push
xchg
xchg
std
dec
aad
jl
add
pop
add
xchg
shrb
jo
es
movsl
inc
and
xor
xchg
dec
push
in
xor
nop
sbb
cmc
adc
xchg
cmc
ljmp
inc
jne
imul
dec
or
and
jg
icebp
mov
rolb
xchg
add
push
incb
xchg
negb
aam
in
mov
rcrb
in
push
in
adc
in
xor
jne
std
in
xchg
push
sub
xchg
mov
xchg
enter
outsb
in
xor
test
stos
and
sub
in
mov
das
cmp
adc
popa
adc
dec
add
jbe
xlat
cmp
pop
lret
inc
jge
adc
out
and
shr
rclb
sub
ljmp
inc
push
dec
mov
inc
divl
out
lods
and
cmp
lret
mov
call
hlt
push
inc
mov
jmp
mov
push
xchg
and
sbb
fnstenv
or
sub
cli
jb
xchg
aad
decl
xor
push
inc
out
lock
xor
andb
cmp
cmc
lock
cmp
movsl
popa
xor
daa
aaa
jge
add
xchg
cmp
jge
jg
std
add
push
subl
insl
arpl
jnp
xor
mov
or
mov
das
xor
adc
sbb
push
out
adc
mov
xor
mov
nopl
movsb
dec
xchg
in
stos
mov
dec
mov
push
and
hlt
inc
push
lods
jmp
fimuls
xchg
adc
add
popa
or
pop
std
cmc
shlb
xor
loope
jno
mov
sar
dec
fists
lock
mov
mov
and
push
call
ret
stc
adc
mov
lea
pop
call
xor
pop
incb
cmp
sbb
or
in
dec
dec
cmpb
leave
xor
and
aas
popl
imul
mov
iret
frstor
mov
ret
fnsave
popa
sub
cmp
cmp
add
push
loope
jne
push
xchg
sbbb
sbb
sub
popa
cmpsl
mov
add
shll
pop
test
cltd
or
lret
ja
pop
and
inc
scas
sub
popa
out
xchg
adcl
adc
dec
xchg
dec
push
jmp
notl
pop
mov
scas
mov
mov
xchg
or
mov
cmp
push
add
nop
cmp
mov
sub
cmp
xchg
push
sub
push
pop
jmp
xchg
int
in
push
and
xchg
daa
inc
sub
sub
divb
out
push
jne
stos
lds
adc
push
jae
and
sbb
inc
mov
push
inc
xchg
dec
out
cmp
lods
int
aaa
insb
sbb
mov
mov
lds
xchg
push
lcall
dec
insl
xor
ret
mov
mov
lret
inc
shlb
sbb
leave
data16
mov
leave
pushf
cmp
mov
nop
icebp
cmc
xchg
movsl
lea
cli
inc
cmc
sarl
sub
out
mov
pushl
rcll
sub
dec
xor
ret
dec
dec
mov
lea
iret
mov
scas
or
imul
dec
xchg
fldenv
out
cmp
xor
scas
inc
dec
addr16
ret
mov
movsl
xor
jns
xchg
inc
adcl
mov
adc
outsl
gs
or
enter
or
xor
cmp
pop
popa
push
lahf
lret
pop
es
inc
xor
pop
out
add
rorl
enter
add
cs
or
pop
in
psllw
dec
bound
mov
add
and
iret
inc
xorb
add
jae
or
and
sub
mov
mov
xor
add
cmp
dec
sbbl
aas
add
xor
adc
and
sub
jecxz
das
adc
xchg
aas
jo
je
cmc
lock
push
test
pop
jo
int
mov
mov
or
or
test
aas
mov
push
sub
lock
mov
mov
add
cmp
jo
pop
pusha
loope
out
int
mov
movsl
inc
cltd
pusha
aad
in
mov
add
jmp
dec
iret
out
pusha
xor
ret
cld
ret
jg
xor
mov
push
daa
cmp
push
mov
fmull
sub
aas
add
sahf
jns,pn
add
dec
daa
fwait
lea
push
adc
ss
enter
aas
cli
inc
cmp
leave
jmp
and
shl
mov
and
and
push
jae
xor
sub
jmp
cmc
jae
push
jb
addb
dec
pop
sub
sub
mov
cmpsb
loope
pusha
cmpl
jg
cli
into
cmp
out
xor
aas
xchg
stc
insl
popf
lcall
test
out
rcll
mov
fldl
ret
xchg
and
aam
dec
das
gs
jne,pn
xor
fstpt
add
rorb
add
in
and
sysenter
xor
adc
add
in
mov
add
out
jb
push
divb
lods
icebp
mov
and
jb
or
lods
jmp
mov
mov
push
jle
jbe
sbb
mov
dec
xor
cmpsl
cmp
sbb
in
ffree
call
sub
xor
sub
lods
incl
dec
jae
rorb
icebp
pop
push
dec
lods
fistl
fdivrl
xchg
in
pop
pop
cmp
mov
outsl
xor
mov
jmp
xor
inc
mov
push
pop
ret
leave
xor
mov
ljmp
xor
and
gs
push
mov
and
sbb
pshufw
stc
imul
jmp
pop
mov
and
ljmp
and
or
mov
mov
or
cs
push
iret
and
leave
inc
insl
psrld
mov
mov
aam
mov
sub
rorl
adc
aas
out
mov
jae
orb
fyl2xp1
fistl
jns
mov
adc
andl
jmp
mov
mov
add
sub
rolb
dec
out
push
and
cmp
push
das
int
jp
fldt
jecxz
fcoml
inc
icebp
aam
inc
pop
shl
push
sub
cmpsl
roll
adc
out
jmp
das
and
xor
xor
or
call
cmp
xor
std
push
xchg
movsb
les
mov
test
das
dec
ret
push
mov
mov
mov
xor
ret
or
mov
sti
push
pop
inc
inc
mov
pusha
lock
loope
pop
cmpsl
xor
cmpsl
xor
iret
pop
ret
mov
popf
mov
sti
sbb
pop
adc
arpl
and
arpl
cs
sti
push
aad
out
xchg
ss
decl
add
leave
out
stos
ss
loopne
or
and
push
ret
xchg
sub
push
lret
scas
fbld
pop
pop
ss
icebp
dec
add
int
dec
dec
mov
sub
mov
inc
rcrl
cmp
push
inc
dec
adc
inc
popa
push
jge
pop
fidivl
lods
adc
pop
sbb
stos
iret
popa
lea
cmp
shlb
push
inc
inc
push
pop
mov
lfence
dec
jnp
dec
pusha
fistps
push
push
sbb
mov
mov
dec
fxch
bound
xor
jp
stc
ficoml
push
sub
or
stc
test
test
or
mov
jne
dec
push
rorl
fistpl
sbb
add
stos
adc
inc
mov
mov
in
into
out
add
adc
dec
mov
idiv
cmp
outsl
sub
das
hlt
push
mov
inc
sub
inc
sub
mov
jecxz
or
stos
sahf
insl
les
or
mov
shll
xchg
push
cmpsl
sub
imul
dec
sbb
stc
loop
dec
xor
inc
push
jmp
cld
lahf
mov
sub
inc
cltd
cs
in
das
loopne
pop
and
cltd
mov
mov
inc
adc
cltd
add
clc
stc
adcl
cmp
adc
cmp
int3
add
xlat
pop
int
inc
jns
scas
cmp
jae
lds
inc
fiadds
movsl
and
daa
inc
leave
jmp
cmp
jg
or
mov
pop
loope
repnz
adc
loopne
inc
out
in
gs
push
cmpsb
add
in
sbb
out
shrl
mov
icebp
insl
add
jecxz
scas
leave
ja
repz
adc
stos
inc
shl
data16
jnp
cli
or
icebp
scas
and
enter
xchg
cmpsl
jecxz
inc
sub
mov
cmpsl
std
shrb
fucom
or
add
cmpsl
repnz
cli
sub
cmp
insb
push
and
idivb
outsl
xchg
test
sbb
test
mov
rorb
xchg
adc
cmp
jno
and
aam
icebp
mov
cmpsl
and
push
mull
and
mov
loop
movsl
icebp
sub
mov
fildll
nop
out
jecxz
sub
test
sti
mov
xchg
test
mov
fdivr
xor
inc
cmpsl
or
movsl
or
sarb
aas
lods
xor
adc
ja
fsubl
subl
lahf
adc
mov
or
jmp
and
filds
popf
aas
ja
add
cmp
stc
jne
fbld
add
lds
push
xchg
and
xchg
or
sbb
jae
aam
scas
and
out
jnp
jmp
ljmp
ret
clc
out
cmc
hlt
lods
lock
out
sbb
adc
xor
sub
fwait
add
daa
mov
inc
aas
adc
inc
mov
inc
out
repz
or
std
clc
enter
in
add
clc
ret
test
out
lahf
xor
lock
xor
xor
std
push
push
and
std
mov
stc
popf
lods
adc
fwait
movsb
cmp
scas
mov
in
std
outsl
lock
fldt
insl
jae
repz
inc
xor
pop
and
xchg
inc
mov
mov
xor
mov
pop
xor
mov
adc
xor
aaa
shll
cmc
lret
cmp
jno
out
mov
shl
adc
inc
jmp
mov
and
dec
out
out
xchg
xchg
sub
ret
add
add
leave
mov
xor
in
mov
fnsave
imul
adc
mov
loope
enter
lea
pop
xchg
xchg
mov
mov
fucomip
mov
and
das
cmc
cltd
add
cmpsl
dec
xorl
push
dec
lock
out
clc
push
xor
pop
jp
mov
adc
xor
test
pop
test
inc
or
cmp
add
adc
jmp
aaa
mov
xor
insb
inc
in
insl
push
mov
jmp
fmul
sbb
jmp
divl
ret
xor
xor
dec
arpl
or
jecxz
pmulhw
aad
mov
addr16
rorl
sbb
sbb
cmpsl
pop
pop
adc
mov
ret
sbb
xor
dec
ret
and
enter
cmc
jnp
aaa
xor
fst
in
dec
addr16
out
lock
mov
pop
add
leave
fmull
repnz
xor
jae
sar
xchg
push
jecxz
pop
imul
jmp
mov
les
pop
imul
mov
mov
clc
and
push
and
cmp
cmc
xor
mov
enter
pop
cli
adc
xor
lods
in
repz
mov
mov
push
loop
cmpsb
add
push
les
leave
xor
ja
sti
jns
andb
aaa
pusha
mov
adc
cmc
pop
mov
lret
lock
xorl
cmc
rcll
adc
nop
xchg
jns
lea
mov
cltd
sbb
mov
outsb
jo
cmc
out
xchg
adc
out
imul
out
roll
out
mov
leave
inc
xor
pop
sbb
movsl
ljmp
adc
jg
adc
loopne
sub
adc
mov
mov
movswl
lret
repz
fucom
xor
push
fcmovne
out
cmp
pop
mov
rep
nop
cmc
inc
or
mov
or
fst
sbb
adc
pop
lds
adc
in
lds
xor
std
arpl
adc
filds
fisubs
clc
in
mov
sbb
jns,pt
test
ret
jmp
nop
repz
sub
sub
popf
cmp
dec
cli
out
xor
test
ret
mov
xor
xor
xor
test
call
loop
repz
aas
jmp
icebp
jecxz
xlat
nop
dec
sub
mov
xor
xchg
out
mov
dec
cli
cmp
je
out
mov
in
icebp
adc
inc
cmc
arpl
pop
jb
sti
cli
das
addr16
jo
sub
sbb
mov
dec
jmp
pop
cmp
pop
sub
cltd
or
xor
aas
and
es
push
in
mov
in
iret
dec
and
xchg
or
or
cmpsb
jecxz
dec
out
das
xor
sub
int3
dec
lds
cmc
xor
sbb
arpl
out
jge
adc
sbb
xchg
cmp
pushf
sub
hlt
push
adc
aad
in
and
mov
cli
and
and
cmp
rclb
loopne
nop
adc
xor
and
jnp
xor
subb
sub
popf
sti
mov
ret
out
push
sti
inc
cmc
sbb
negl
loop
out
push
pop
sub
push
gs
fisttps
daa
icebp
imulb
or
in
jns
out
repnz
scas
jb
nop
insb
aaa
sbbb
sub
frstor
lea
xchg
sub
das
mov
nop
adc
adc
jae
mov
les
outsl
adc
mov
stos
mov
adc
mov
pop
xchg
jecxz
pop
and
pop
inc
jecxz
xor
ja
sub
pop
xor
add
int3
mov
lcall
stc
adc
mov
cmpl
jo
test
sbb
push
push
adc
iret
out
pop
sub
jmp
sbb
jecxz
ret
sbb
flds
cmp
cmp
xor
xchg
ret
ret
mov
loope
or
enter
sahf
nop
add
xor
test
jne
pop
out
dec
out
fwait
mov
jmp
daa
push
outsb
lret
dec
push
adc
out
xchg
cs
jne
int
lock
cmp
inc
add
mov
sub
ret
jecxz
adc
xorb
mov
xchg
push
arpl
mov
mov
inc
les
lock
insl
xchg
adc
movsl
sbb
aaa
mov
clts
pop
mov
cs
adc
mov
jg
pop
cmc
xlat
insl
inc
movsb
xchg
sbb
cmc
shrb
or
cmp
push
das
push
leave
ja
push
inc
frstor
mov
add
jne
jb
xchg
loopne
fisttps
push
out
sub
ljmp
cmc
mov
mov
mov
cmc
cmp
sti
ret
jb
ffree
mov
in
lret
mov
cmp
xlat
adc
out
enter
jno
inc
outsl
ja
mov
clc
aas
lods
das
das
mov
int3
in
nop
call
inc
out
lahf
das
jno,pn
fnstenv
lock
xor
cmp
data16
pop
adc
xor
hlt
inc
push
adc
adc
cmp
test
mov
clc
lahf
cmc
addl
mov
mov
dec
pop
fiaddl
adc
xchg
movsl
addr16
and
mov
sub
or
lock
sub
jno
stc
add
out
cmp
orb
xchg
sbb
mov
stos
loop
mov
cmc
jae
sub
fisubs
jnp
das
lods
jg
fs
add
sti
hlt
loop
xor
mov
ja
jg
add
cmc
mov
fistps
xchg
decl
scas
xor
in
jno
jo
mov
popw
inc
icebp
cmpsl
pop
mov
or
xchg
inc
lea
iret
aaa
adc
sub
ja
mov
stc
in
mov
or
into
and
jl
pushl
movsb
insb
fbld
sahf
dec
scas
mov
imul
mov
shl
xchg
imul
jle
or
stc
sub
lret
cmp
orb
mov
pop
mov
out
mov
pusha
sbb
push
arpl
test
icebp
or
bswap
mov
mov
cmc
mov
das
icebp
lock
popl
loopne
aaa
mov
xor
xlat
dec
add
popf
sub
or
xchg
xchg
icebp
popa
jae
xchg
push
jge
imul
repz
jne
dec
cmp
jge
mov
jno
popf
cli
mov
mov
pusha
xor
das
mov
push
testl
fsubl
sub
arpl
leave
cltd
shl
bound
ljmp
pop
mov
lods
cmp
push
das
push
dec
nop
push
add
call
ret
inc
sarl
ficomps
data16
sub
mov
out
daa
adc
stos
pop
mov
fildll
pop
pop
scas
in
loopne
ret
push
sbb
movsb
flds
adc
adc
vcvtdq2pd
pop
sub
bswap
daa
das
jg
movsl
and
sub
mov
dec
jg
jmp
fidivs
cmc
sti
pop
xor
dec
sub
into
xchg
cli
sbb
or
lods
push
push
xor
mov
in
cmpsl
lods
mov
iret
sub
dec
and
popf
xor
jmp
iret
mov
xchg
das
cmpsl
or
cmpsl
cmp
mov
jo
out
sub
shr
xor
imulb
and
divl
fs
xchg
sub
add
decb
movsl
or
insl
or
add
mov
or
lret
inc
mov
fs
cmpsl
jmp
out
in
inc
push
fdivrl
lret
xor
inc
xor
test
xor
push
add
mov
mov
cltd
outsb
sub
add
pop
inc
repz
stos
dec
insb
jmp
cmpsl
mov
and
jge
sub
pop
jmp
add
mov
add
movsb
into
cmc
fistl
adc
out
push
xor
mov
aad
fmulp
or
jge
sti
push
xor
lods
pop
int
in
insb
xlat
or
xchg
test
pop
adc
xor
pop
out
mov
sub
dec
cmp
add
mov
and
jg
inc
push
aas
pop
adc
popa
shll
mov
mov
adcb
xor
mov
sub
adc
cmp
icebp
xor
jno
jge
push
xor
inc
push
stos
mov
insl
int
leave
icebp
mov
fs
mov
adc
leave
pop
roll
push
adc
cld
shll
pusha
sub
stos
xor
cmc
xchg
xchg
adc
push
or
and
ffreep
jle
dec
sub
mov
das
xchg
push
jb
mov
aas
call
call
inc
push
out
dec
jne
or
jns
iret
cmpsl
jno
addr16
pusha
push
seta
pop
sub
mov
movsb
scas
xchg
lods
pop
xor
cmp
mov
mov
and
insl
cmc
push
rcrb
lret
cmp
scas
adc
out
int
push
push
or
sti
mov
jl
test
outsl
sbb
push
sub
out
mov
pop
jne
into
push
add
xor
lods
bound
push
hlt
stos
adc
pop
loopne
fistpll
xchg
aad
xchg
and
nop
push
xor
stos
iret
std
cmpl
mov
sbb
lret
fisubs
push
mov
lds
mov
shll
test
insb
adc
lret
push
xor
mov
nop
clc
mov
jg
xlat
stos
xchg
xor
scas
xor
std
addr16
cmc
fcmovne
repz
sub
or
iret
sub
mov
sbb
mov
scas
or
jge
out
movsl
flds
jmp
enter
adc
mov
mov
daa
test
or
mov
or
aad
divl
adc
cmpsl
in
push
pop
xlat
add
and
mov
and
or
sti
cmpsl
cli
faddp
cs
das
ja
fs
je
out
popf
jne
in
fsts
xchg
jno
xchg
sub
testb
std
xchg
in
out
je
adc
xor
daa
pop
xchg
push
lret
mov
pusha
out
and
fisubrs
out
test
or
int
repnz
ret
xchg
outsl
add
lds
xchg
dec
stos
aas
std
and
test
mov
push
std
mov
test
dec
xlat
popf
icebp
movsl
mov
clc
cld
shl
inc
push
lock
mov
pop
cmpsl
cli
addr16
gs
in
bound
popf
sub
in
insb
sub
mov
mov
mov
insl
lret
and
adc
dec
pusha
add
aaa
out
pop
add
in
add
loope
xchg
mov
cmp
mov
test
pop
xchg
jnp
insl
mov
push
xchg
fbstp
mov
das
lock
dec
ret
idivb
jg
rclb
jnp
ljmp
test
xor
das
or
and
xor
pop
in
test
rol
pop
jge
cmc
nop
or
mov
or
nop
pop
mov
pop
in
fwait
sbb
mov
xcrypt-ctr
cmpsl
pop
xchg
sbb
andb
scas
xor
sub
cli
les
inc
shrd
push
shlb
or
and
mov
cmpsl
out
lea
lss
call
out
and
in
xchg
idivl
mov
push
adc
jp
rep
mov
or
ret
out
daa
jne
pusha
sbb
push
mov
pushf
sub
mov
lods
mov
jmp
push
jne
movsl
cvttps2pi
inc
test
xchg
imul
in
sti
in
notl
sub
movsw
xor
pop
inc
test
flds
push
lret
adc
lea
xor
test
mov
shrb
xsaves
testb
imul
imull
or
fsubl
pop
jg
hlt
imul
cs
mov
gs
filds
xor
mov
ficoml
aas
mov
sub
in
cmp
jge
std
mov
mov
push
lds
in
inc
mov
lds
mov
add
leave
outsb
cmp
mov
sub
repz
xor
ret
incl
and
mov
out
imul
imul
xchg
pushf
out
lret
sbb
lcall
out
nop
cmp
in
cmp
jge
push
mov
adc
lahf
in
pop
in
mov
in
xor
insl
orl
popf
dec
pusha
out
push
xchg
mov
or
ret
test
pop
subl
aaa
dec
add
or
inc
adc
push
gs
push
cld
pop
ficompl
cmc
jmp
xchg
adc
ret
lahf
pop
emms
xor
pushf
out
fucomi
sti
aam
pop
mov
je
sub
mov
adc
mov
push
icebp
sbb
sub
mov
rcrb
ret
ret
int3
xchg
mov
sub
arpl
in
pop
lods
or
mov
adc
hlt
sbb
cmpsl
out
icebp
pop
stos
or
or
das
jne
ljmp
stc
out
mov
cli
push
pop
pop
ja
mov
sarl
push
mov
dec
outsb
push
imul
repz
shlb
xchg
push
fldl
xchg
xorb
xor
in
cmp
mov
add
cmpps
in
lret
mov
xor
or
bound
in
pop
sbb
test
mov
lock
push
popa
mov
outsb
int
icebp
mov
lods
xchg
lret
jb
push
adc
insl
add
mov
cmp
and
subl
jmp
loopne
es
arpl
out
mov
mov
cld
and
xor
pop
lds
rcr
ds
xor
lock
das
push
or
or
addr16
incl
push
pop
pusha
xor
or
mov
pop
pop
ss
sahf
faddl
fcompl
xchg
cmc
xchg
jne
lret
popf
sub
adc
sub
push
inc
xchg
pusha
cmp
or
cmpsl
pop
call
jmp
scas
ss
jo
push
pop
xchg
or
mov
sti
or
loope
sub
leave
sahf
mov
lahf
xchg
lcall
jmp
push
shl
adcb
lds
mov
iret
addl
mov
stos
or
mov
cli
popf
jnp
or
mov
fistpll
je
lods
nop
xor
adc
std
jg
sbb
add
negl
jae
fwait
adc
adc
mov
gs
fbld
inc
hlt
leave
jg
popa
jp
adc
jge
iret
divl
in
xchg
loop
mov
cmp
lock
pop
js
cs
ret
imul
add
mull
jmp
mov
stos
pop
movsb
inc
jns
mov
lock
lock
inc
mov
jae
xchg
icebp
flds
cld
or
cli
ret
jg
adc
mov
sbb
ja
je
mov
popf
dec
subb
test
dec
jecxz
push
add
add
sti
fbld
dec
jnp
in
out
mov
addr16
pop
nop
add
mov
jo
and
add
lahf
mov
mov
emms
push
sbb
cmpsl
add
mov
cmc
out
or
outsb
addb
jo
cmp
popf
movq
fmul
and
add
and
pop
xchg
inc
jo
inc
sbbl
or
scas
sbb
dec
out
mov
subb
cmc
pushl
andb
push
inc
pop
cmpsb
mov
lahf
push
adc
scas
je
sbb
xchg
outsb
jl
mov
inc
mov
das
mov
dec
cmc
sub
xchg
push
cmpsl
jno
and
xor
pusha
dec
mov
ljmp
jne
lret
pop
push
icebp
jno
or
sub
loopne
lock
adc
fsubr
and
mov
leave
bound
lret
adc
add
loop
mov
out
xor
pop
jp
ret
icebp
xor
lds
mov
sbb
mov
lods
mov
cmp
out
mov
jp
or
gs
lret
lcall
mov
sub
or
lahf
shufps
clc
adc
cmp
inc
repz
outsl
in
mov
ret
push
dec
das
sti
popa
mov
aaa
sub
arpl
call
jns
sub
pop
ret
sub
in
push
cmp
sub
mov
mov
test
pop
loope
rclb
pop
mov
loopne
xor
gs
mov
loope
lock
mov
pop
sub
cmc
cli
mov
add
jge
loopne
jle
mov
xchg
mov
dec
mov
cmpsl
jmp
scas
lods
cmc
lods
mov
loope
call
lods
inc
outsb
adc
popa
push
jns
mov
jmp
lea
dec
out
adc
repz
lock
popl
sub
das
cmpsb
sbb
test
sarb
ljmp
add
inc
or
insb
xor
jo
sahf
sub
sbbb
loop
xor
je
addr16
mov
mov
gs
nop
bound
iret
pop
inc
inc
mov
adc
cmc
pop
sub
mov
adc
sbb
adc
pop
movsb
mov
pop
jmp
popa
sbb
xchg
adc
mov
test
add
pop
addr16
imul
mov
xor
fistps
lret
scas
sub
cs
ja
into
sbb
sbb
cmpsb
sub
sub
fidivl
arpl
xchg
das
idivl
jp
test
ret
sbb
in
outsb
loopne
jo
shll
in
cmp
push
jno
jge
push
xor
jmp
out
cmc
jnp
addr16
out
mov
sub
iret
fisubrl
mov
fidivl
push
push
cs
sti
scas
hlt
dec
mov
sub
and
adc
mov
mov
loope
gs
mov
nop
and
adc
add
push
inc
mov
add
mov
xlat
adc
je
nop
add
loop
and
insb
inc
jno
xlat
std
fwait
sti
pop
fisubrs
cli
call
jo
mov
sbb
xorb
jl
inc
leave
cs
xchg
mov
fimull
xlat
les
mov
mov
or
add
add
push
test
pusha
push
cli
daa
sbb
ret
icebp
inc
or
xor
stos
or
out
or
xorl
or
in
lret
ljmp
pop
and
cmp
testl
xor
aam
sti
add
and
mov
mov
inc
cmp
sti
lcall
xchg
add
gs
daa
push
in
popf
pop
xchg
aas
cmc
or
pop
adc
movl
cmp
cmpxchg
out
cli
and
xchg
or
sub
or
fs
cs
movd
push
and
into
out
frstor
testl
testl
or
out
ja
xchg
out
push
add
push
mov
mov
scas
iret
add
sub
xchg
fidivl
pop
cli
sbb
or
in
test
stos
pop
lahf
mov
cmpsb
out
mov
adc
xor
sub
dec
fwait
sti
aam
stos
lret
xor
mov
mov
pop
sbb
sti
mov
jp
dec
pop
lods
pop
xchg
add
cmp
repz
mov
add
imul
jae
incb
rol
fwait
into
adc
scas
rorl
sbb
cld
adc
pop
mov
push
movsl
mov
movsl
lret
orl
xor
sub
pop
or
push
icebp
mov
jmp
lods
fisubs
mov
mov
fiaddl
jmp
xchg
stc
das
sbb
jmp
inc
xchg
add
test
jne
push
repz
jne
mov
sbb
fsubrl
adc
xchg
lcall
lods
sbb
aaa
pop
or
push
aaa
repz
sub
sub
mov
pop
stc
mov
mov
dec
mov
flds
ljmp
movsb
scas
jp
test
scas
add
sbb
out
sahf
orb
lods
add
pop
jno
rcrb
inc
sub
scas
mov
arpl
fstpl
sub
add
add
rcr
stos
add
incb
mov
std
fisubl
inc
out
das
cltd
or
jnp
addl
sbb
outsl
jg
scas
xorb
std
cld
xchg
inc
mov
shl
add
out
xchg
sub
sbb
or
cltd
xchg
mov
pop
data16
sub
xor
jne
add
lock
push
rolb
add
mov
aaa
fwait
inc
jp
repz
lret
ret
out
jb
ja
xchg
pop
jg
rcrl
cmp
inc
mov
fwait
in
jl
in
mov
xchg
arpl
addl
in
push
icebp
jne
fdivr
ffree
orl
pop
mov
leave
xchg
xchg
xor
xor
adc
jmp
xchg
pusha
loopne
rolb
mov
shll
daa
pop
adcl
call
lret
decl
pop
xor
aaa
mov
pop
cli
ja
lahf
cmpsl
sbb
fistpl
out
fucom
mov
test
xchg
and
dec
mov
jmp
pop
scas
ret
ret
mov
arpl
fisubrl
jmp
adc
xor
cli
sub
cmpsl
fs
pop
es
lret
sahf
mov
je
outsl
mov
icebp
pop
nop
add
adc
pop
or
sub
mov
std
std
xchg
jge
xchg
inc
jmp
andl
andl
mov
in
mov
add
cmpsb
lods
mov
addr16
mov
fmul
sbb
pop
xor
leave
jo
in
sarl
cli
movsb
das
xchg
jge
mov
xor
fisttpl
repz
pop
movsl
cmpsl
ljmp
jecxz
add
sbb
mov
sub
cs
mov
mov
or
pop
and
or
cmp
pop
mov
dec
fisubl
mov
dec
add
pop
test
inc
push
jp
sbb
inc
xchg
push
into
aaa
sbb
xchg
inc
sahf
cmpsb
loope
stos
sub
test
jb
add
hlt
out
popf
xor
jge
add
mov
nop
push
cli
popf
and
push
outsb
daa
jge
fwait
pop
pushf
notl
jmp
ljmp
sbbl
testl
sbb
xor
scas
pop
xchg
ret
sub
cmp
or
lock
cmc
push
mov
pop
fbld
pusha
sub
or
jmp
cvtdq2ps
sub
mov
lock
mov
adc
into
pop
add
out
push
std
mov
fwait
movsw
popf
out
aad
pop
sbb
add
mov
adc
lods
loop
sbb
sub
xchg
or
popa
mov
or
out
pop
lods
stc
ret
add
xor
xchg
push
mov
cld
sbb
mov
cmpsl
leave
add
fidivl
imul
lahf
mov
mov
cs
lods
mov
xor
mov
sti
mov
nop
in
or
ret
nop
sti
or
outsb
mov
fmull
in
addr16
incl
shl
add
aaa
add
ret
xchg
pop
push
stos
sub
adc
xor
test
mov
and
lods
inc
cmpsl
scas
mov
mov
loop
test
out
cmp
test
pop
sub
cmpsl
sbb
out
bound
flds
lcall
popa
rcrl
jbe
jne
movsl
sbb
pop
fbstp
mov
in
pop
das
xor
cmpsl
jecxz
insl
push
jmp
mov
adc
fdivrl
add
and
mov
add
lock
cld
pop
and
cmpsl
xchg
pop
mov
out
cltd
lods
inc
lds
test
nop
gs
fs
pop
pop
mov
fs
mov
fs
jg
scas
mov
adc
in
fdivrl
leave
mov
and
stos
repnz
inc
sub
sub
test
add
jnp
jle
in
xchg
mov
mov
cmc
fwait
push
imul
or
loopne
fmull
sbbl
addr16
pushf
jge
arpl
std
mov
nop
pop
xchg
pop
out
les
test
rcrl
in
test
addr16
out
jecxz
fidivrs
cli
outsb
jl
roll
push
repnz
movsl
mov
pop
pop
lea
stos
lock
sbb
scas
xor
ret
add
arpl
ljmp
test
cmp
xorb
mov
pop
push
imul
ljmp
sub
insb
cmc
pop
addr16
repnz
jl
adc
and
mov
fcmovne
ljmp
stos
nop
cld
or
std
les
mov
or
fstpt
sahf
mov
gs
pop
inc
xor
mov
or
repz
inc
fistpl
xor
sub
or
cmc
outsb
out
icebp
test
mov
mov
jmp
pop
insb
pop
mov
cltd
test
ffree
pop
popl
xor
dec
nop
xor
lods
inc
in
ljmp
gs
cli
xchg
or
pop
jae
pop
xchg
fcmovnb
pop
dec
bound
in
jo
xor
jl
xor
sub
or
mov
xchg
cmc
mov
xchg
and
ret
mov
pop
loopne
adc
sub
mov
test
adc
movsb
sub
pop
daa
mov
pop
mov
adc
ret
inc
jecxz
mov
or
stos
pop
das
mov
sub
popf
pop
fildll
add
mov
jno
add
pop
add
in
sub
jno
pop
cli
mov
xorb
inc
mov
push
pop
cmp
jmp
xchg
out
jb
iret
inc
std
pop
and
push
outsb
mov
cli
cmpsb
iret
or
or
adc
mov
mov
xor
jecxz
xchg
push
rcl
push
cmc
sub
rolb
addb
xchg
sub
pop
cli
add
outsl
sar
inc
scas
mov
mov
int
sub
mov
sub
lret
out
inc
cmpb
insl
aaa
jbe
into
insb
push
xchg
xchg
xchg
lret
call
je
jae
jne
jns
js
jmp
jns
lahf
lret
movsb
or
mov
loope
mov
mov
cmovne
imul
xchg
movsl
lret
imul
cltd
stos
mov
subl
mov
out
fisubrs
ja
subl
mov
mov
jl
movsl
mov
cmpsl
out
cli
cmp
stos
mov
sbb
push
daa
adcl
int
sub
hlt
jg
ret
ficoml
pop
push
mov
fdivl
push
adc
js
sub
sti
sub
lcall
or
lahf
mov
into
dec
pop
je
lcall
das
lods
dec
pop
ret
mov
pop
xchg
pop
mov
mov
sub
mov
lcall
out
mov
fists
jle
je
fidivl
sub
std
out
jno
mov
lea
sahf
add
mov
imul
fistpll
and
pusha
shll
loopne
dec
sti
enter
pop
shr
cli
incl
or
mov
xorl
popf
out
inc
xor
pop
loopne
movsb
aas
cmp
mov
aaa
add
fisttpl
or
scas
sub
mov
loop
cmc
mov
cmp
xlat
data16
and
lcall
or
into
dec
into
out
mov
sub
sub
cmp
ret
pop
mov
xor
scas
mov
leave
adc
jl
sbb
rorb
sub
imul
in
cli
push
push
sbb
call
or
jne
ret
fists
add
pop
cs
and
ss
insb
ljmp
jg
fldenv
and
bound
mov
aas
iret
scas
dec
int
les
fstl
sarl
je
jo
xchg
shr
or
and
imul
outsl
cmp
ljmp
stos
pop
ret
outsb
xor
sub
jae
dec
push
ficompl
addr16
inc
sub
test
cmpsl
xor
frstor
sub
arpl
lock
mov
pop
pop
and
xor
cmc
scas
scas
jp
leave
fcmovnb
sbb
lock
sbb
pusha
or
pop
cmc
fwait
xchg
in
fwait
push
inc
cli
mov
pop
mov
out
add
adc
dec
loopne
fiaddl
xor
icebp
xor
xchg
into
out
push
jge
cld
push
andl
pop
mov
movsl
cmpsb
movl
mov
data16
pop
out
scas
push
insw
scas
xstore-rng
cmpsl
add
xor
and
xchg
pop
or
adc
push
cld
mov
xchg
inc
sub
mov
test
out
fs
iret
pusha
stos
jne
jmp
adc
add
fucomi
push
mov
ret
pop
mov
or
dec
xchg
sbb
fiaddl
out
in
add
shrl
pushf
pop
jns
fisttps
cmp
jle
adc
enter
jno
shlb
and
sbb
div
jne
lcall
movsb
mov
jnp
adc
repnz
xchg
add
insb
push
xor
arpl
scas
push
mov
movsb
xor
insl
mov
orb
xor
movsl
push
dec
mov
aaa
xchg
std
and
mov
add
mov
ljmp
ret
out
into
dec
push
jo
stos
xchg
adc
nop
fcoml
mov
pop
mov
lods
sbb
cmp
test
sub
addr16
mov
mov
jle
nop
fidivrs
pusha
cld
jecxz
stos
push
mov
scas
jl
stc
pop
fcmovb
sbb
stos
andb
add
pop
imul
adc
xchg
das
push
into
sahf
icebp
sti
repz
or
mov
arpl
imull
push
mov
lahf
add
jmp
jbe
xchg
mov
add
mov
fdivrs
adc
ret
mov
test
or
andb
lcall
jnp
das
icebp
sub
or
xchg
pop
cmpsb
xchg
enter
cmp
or
stos
sbb
loopne
fsubl
adc
in
add
jp
dec
pop
jne
addr16
lods
push
movsb
xchg
popa
test
loope
add
jle
mov
mov
call
out
mov
pop
mov
pusha
xchg
dec
mov
addr16
aaa
xor
pop
scas
lret
sub
addr16
pop
cli
arpl
jg
lcall
std
enter
jno
adc
mov
jae
cvttps2pi
lods
adc
lods
xchg
pop
outsb
jp
insl
mov
mov
and
lcall
bound
jg
loopne
ljmp
movsb
lahf
ja
mov
mov
sahf
arpl
pop
sub
cmpb
pop
les
cld
stos
or
fs
dec
insb
pop
mov
cs
sub
aad
fs
repz
jnp
fidivl
popf
jo
sbb
push
ret
out
out
cmp
lods
call
std
pushf
fstl
cld
sub
les
popl
stos
jp
lods
dec
mov
in
jae
lods
jl
fisttps
jl
gs
xchg
mov
mov
outsl
or
out
popa
fiaddl
dec
outsb
ret
or
popa
sub
sub
mov
jo
rol
fcmovnb
fcompl
sti
pop
sub
sti
jo
imul
sub
push
xor
pop
xchg
pop
jle
adc
jp
xor
or
adc
jle
pop
ror
sub
loop
popa
test
mov
gs
in
mov
cmpsl
cmc
adc
ret
lods
ja
dec
not
adc
insb
dec
sti
ret
mov
sub
stos
subl
adc
rclb
jnp
mov
bound
mov
scas
mov
cmp
jo
into
sub
test
hlt
es
lret
cmpsl
inc
xchg
stos
rcrl
jmp
mov
rcrb
xor
shl
loopne
nop
in
cmp
fdivl
addr16
cmp
xchg
xor
out
mov
in
adc
pop
mov
jmp
stos
push
or
cld
ss
add
mov
rcrb
push
scas
mov
lahf
pop
mov
fadds
add
xor
add
lea
and
adc
xchg
xchg
push
xor
inc
pop
add
dec
xchg
push
mov
jb
daa
xor
jae
and
jp
mov
call
xchg
cs
cmp
gs
lret
xrelease
mov
shl
push
fwait
jbe
andb
pop
in
leave
dec
mov
dec
push
pop
push
mov
imul
dec
mov
push
add
pop
inc
inc
aaa
lods
aas
or
inc
add
inc
mov
mov
sub
dec
jg
scas
sub
adc
lea
popf
xlat
sahf
xor
xchg
int3
jecxz
dec
imul
out
add
lods
push
xlat
mov
push
sub
lahf
popf
and
xor
hlt
cmc
dec
inc
movsl
jmp
or
pop
pop
jo
mov
icebp
dec
push
ret
adc
data16
fdivl
les
dec
mov
xlat
das
cli
xorl
add
dec
idivl
dec
xor
in
or
dec
int3
out
in
cmp
mov
xor
jecxz
xor
fstpl
addr16
xor
add
cmp
cmpsb
sub
sub
ss
and
inc
sysret
sub
inc
imul
jne
sub
sub
push
dec
cld
repnz
jp
popl
add
filds
or
out
pop
sub
sti
jns
or
fnstenv
mov
pop
popa
or
fcompl
inc
add
popa
nop
add
aad
mov
popf
sub
mov
xor
fwait
iret
mov
hlt
or
in
imul
into
cmp
jp
jg
roll
or
es
daa
lods
adc
pop
cli
orb
add
fsubs
rolb
clc
xor
sbb
dec
pop
out
in
jecxz
loope
fst
fcmovnbe
fcmovne
fcmovne
fcmovnb
fcmovnb
fstpt
fistpl
fisttpl
fildl
int3
jns
cltd
mov
and
and
imul
push
or
lret
ficoml
sub
bnd
jno
mov
pop
rol
push
out
or
in
mov
test
and
xchg
sbb
or
data16
data16
arpl
sbb
jne
jno
insl
and
popa
ret
pop
mov
pop
test
pop
popf
pop
cltd
pop
xchg
pop
inc
and
cmp
jo
cmpsb
test
ret
and
out
jo
jge
loopne
out
mov
inc
cmpb
jno
insl
inc
and
cmp
cmp
xor
xor
sbb
sbb
and
sbb
sbb
adc
adc
or
or
add
add
cld
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
lods
xor
movsl
or
and
repnz
int
xchg
lods
js
sbb
adc
repnz
or
fildll
push
clc
sub
mov
icebp
and
pop
xchg
push
and
leave
pop
and
das
jno
insl
aad
pusha
gs
and
ss
or
sbb
pop
dec
push
and
out
js
jno
and
xor
adc
icebp
loope
fucomip
fucom
fndisi(8087
fcmovnu
fcmovnu
popa
add
leave
cmp
sub
adc
repnz
xchg
cs
adc
icebp
ret
lods
or
dec
iret
and
enter
lods
sbb
pusha
or
jno
insl
mov
mov
and
ljmp
sbb
mov
cmpsb
sbb
and
xchg
push
nop
sbb
jne
jno
insl
stos
cmp
mov
push
adc
xchg
inc
movl
mov
jmp
mov
and
push
xchg
or
jns
pop
fs
push
cmp
icebp
sbb
jmp
xchg
roll
dec
jne
jno
insl
sub
gs
fistpl
fisttpl
daa
sbb
pop
sbb
dec
lret
inc
mov
dec
das
or
push
loope
rclb
sub
xor
adc
and
xchg
adc
jb
jb
jb
jb
jb
jb
outsl
jae
shll
mov
lods
jb
jb
jb
jb
jb
jb
jae
sbb
sub
jcxz
loope
cmp
lahf
cmp
mov
sbbl
sarl
inc
shll
mov
mov
lods
fldt
fistpl
fisttpl
fildl
insl
fldt
pop
jns
out
in
jecxz
loope
filds
inc
fstpt
or
mov
adc
pop
or
pop
add
pop
stc
pop
cmc
pop
cmp
pop
jmp
pop
fstpl
pop
aad
rcrl
pop
leave
pop
rcrl
cmp
mov
mov
lods
pop
test
pop
popf
pop
cltd
pop
xchg
pop
xchg
pop
xlat
fildl
gs
pop
bound
push
push
mov
cmpsb
dec
xchg
inc
xchg
cmp
xor
and
sbb
adc
or
add
data16
data16
data16
in
jmpw
data16
frstor
data16
shll
leavew
lds
mov
data16
mov
lods
test
mov
imul
dec
and
or
jno
fsubs
rol
enter
mov
jbe
data16
data16
bound
imul
cmp
movsl
fistpll
jb
imul
dec
push
push
dec
or
inc
mov
dec
xor
sub
and
or
pusha
repz
in
pusha
loop
fsubs
pusha
mov
pusha
jo
stc
cmp
sbb
pop
sbbb
adc
pop
fstps
mov
leave
fcmovnb
fcmovnb
or
mov
mov
mov
lods
sbb
sbb
sbb
sbb
sbb
jne
jno
insl
sbb
sbb
and
sbb
inc
sbb
xor
icebp
lods
pop
popf
pop
addr16
pop
mov
xor
or
fbld
pop
inc
push
sbb
in
dec
in
into
lret
lcall
lock
test
mov
stc
or
out
adc
sbb
pop
dec
pop
sub
inc
lret
cmp
popa
pop
pop
adc
pop
add
test
xchg
fstpt
outsb
cmp
mov
test
mov
in
mov
push
es
movb
xor
jbe
adc
jmpw
in
out
loop
xchg
das
lcall
jecxz
xchg
or
or
fisttpl
xor
sub
mov
dec
cmp
sub
xchg
aas
and
into
mov
mov
mov
cmp
push
cmp
sbb
hlt
mov
test
ljmp
pop
push
xchg
dec
and
pop
mov
cmpsb
in
xchg
loop
shll
mov
jge
ja
jo
imul
es
nop
inc
mov
xorb
outsb
sub
cmp
std
fcomi
add
into
pop
out
and
insl
int3
imul
pop
mov
xchg
pop
jae
lods
lcall
mov
pop
push
dec
and
notb
fldpi
jb
les
scas
adc
inc
and
xorb
sub
mov
mov
or
add
stc
mov
mov
mov
mov
mov
nop
loope
fldenv
pusha
shll
pusha
leave
pusha
lds
pusha
mov
pusha
mov
lods
pusha
test
pusha
popf
pusha
cltd
pusha
xchg
pusha
xchg
pusha
lea
pusha
test
pusha
jge
jns
jne
popf
insl
pop
imul
mov
xchg
cmp
jb
jb
jb
jb
jb
jb
jb
jb
jb
je
xchg
std
data16
data16
addr16
or
xchg
aad
shll
jb
jae
std
mov
pop
cmp
mov
cmp
adc
push
aas
sbb
xor
adc
mov
xchg
mov
data16
stos
addr16
fistl
fildl
fldt
fistpl
push
sbb
aas
cmp
das
xchg
jae
leave
lret
pop
pop
and
dec
push
inc
xor
push
std
push
or
pop
lret
mov
sub
cmp
sti
popa
push
push
nop
push
mov
dec
js
jo
push
xor
pusha
sub
pop
clc
loope
pusha
sbb
pusha
adc
pusha
or
pusha
add
pusha
stc
pusha
cmc
pusha
icebp
xor
pop
loope
fstpl
pop
aad
pop
fcmovne
fcmovne
push
lds
mov
mov
movsl
xchg
addr16
lock
xchg
pusha
lea
pusha
test
and
mov
sbb
popa
sbb
and
push
xor
mov
cmp
inc
cmp
xor
jb
jb
jb
jne
xchg
or
addr16
sbb
icebp
and
cmp
jnp
jg
inc
and
sub
xchg
in
xlat
jbe
pushfw
xchg
xchg
jmp
cmp
and
movswl
and
pop
push
push
push
sbb
mov
mov
xor
xchg
jne
jno
add
sub
or
mulb
pusha
jecxz
or
aam
into
sbb
sbb
push
push
sbb
stc
in
cmp
push
push
xchg
mov
std
in
sub
jne
jno
insl
int
leave
gs
cmp
mov
sub
fistpl
outsl
and
mov
lahf
xor
cmp
mov
adc
sbb
adc
jns
test
ret
and
add
stos
mov
jne
sarb
lret
mov
mov
in
fldt
push
and
dec
sub
xor
shlb
and
daa
xchg
pop
xor
xchg
jecxz
rcr
fstpt
fldt
fstpt
imul
push
sbb
adc
rclb
jae
ds
mov
cmp
sbb
xor
popf
mov
xor
fcom
dec
cwtl
sub
push
and
lock
jmp
loopne
push
and
and
sbb
mov
and
dec
pop
or
movsb
or
sbb
sub
mov
std
pop
mov
test
and
inc
dec
or
or
cmp
inc
xor
je
ret
aas
lret
fistpl
fistl
fisttpl
fildl
dec
sti
mov
sbb
xor
dec
or
push
daa
dec
and
cmp
aad
test
test
and
outsl
in
inc
adc
scas
xchg
icebp
push
mov
adc
push
sub
or
imul
daa
push
and
push
and
hlt
pop
mov
pop
xor
incl
xchg
jecxz
call
fcmovnb
fstpt
fstpt
xor
adc
sbb
and
or
lret
stc
mov
dec
rorb
mov
jnp
push
and
xchg
cwtl
movsl
call
rol
push
lds
mov
cmp
ss
xor
gs
cmp
push
shll
lds
mov
test
insl
repz
pop
mov
movsb
ret
outsl
inc
xchg
rcrl
ds
mov
sbbl
sbb
faddl
data16
test
addr16
lock
nop
inc
sub
or
loope
je
jns
jg
js
dec
lahf
or
adc
add
mov
pop
jns
mov
push
or
jmp
loopne
out
in
cmp
or
cmovp
push
cld
mov
call
jne
test
add
xchg
xor
rcrb
xchg
jb
jb
jb
jne
xchg
movl
sub
cld
mov
xor
cwtl
je
mov
jp
je
popf
inc
and
mov
es
mov
ja
loope
or
dec
mov
and
inc
mov
push
sbb
pusha
cli
pusha
out
xor
pop
mov
mov
jl
mov
inc
cmp
mov
adc
out
xchg
loope
adc
aad
inc
sbb
xor
shrb
cmpsb
jb
jb
je
and
pop
imul
adc
jecxz
das
lret
int3
or
mov
xor
sub
pop
sysexit
shlb
mov
imul
sbb
sbb
sbb
push
sub
sub
or
pop
add
sub
xchg
jge
xchg
fistl
test
pusha
jne
jno
insl
pusha
imul
inc
sub
in
fbstp
xchg
js
and
sbb
jp
push
cmp
leave
mov
inc
clc
gs
xchg
js
jo
icebp
xchg
lret
pop
xchg
push
pop
dec
movl
mov
fldt
mov
mov
mov
mov
ja
pusha
insl
pusha
imul
push
push
nop
push
and
cmp
mov
and
faddl
fistpll
cmc
stos
ret
dec
mov
int
aaa
cmp
mov
mov
lods
lock
pop
push
adc
shlb
nop
daa
mov
orb
imul
xchg
xchg
jb
jb
js
sub
daa
out
in
jecxz
push
out
jno
rcl
clc
jne
pusha
ret
sbb
mov
xor
mov
mov
mov
jb
inc
mov
mov
xor
mov
sti
in
aaa
lds
push
test
shll
jecxz
loope
filds
inc
fstpt
xor
and
mov
nop
adc
or
pusha
add
pusha
cmc
pusha
icebp
pusha
in
pusha
jmp
frstor
sarl
lds
mov
mov
movsl
mov
cltd
mov
lea
subl
jb
jne
mov
and
push
jno
lahf
or
inc
pop
cmp
sbb
sub
add
std
adc
or
jb
jne
mov
jmp
je
xchg
frstor
jo
shll
in
lds
cmpsl
adc
mov
lods
clc
adc
pusha
cltd
pusha
xchg
pusha
lea
in
sbbl
pop
insl
pop
imul
sub
mov
les
sbb
jge
ja
xchg
imul
push
sbb
imul
jb
imul
xor
dec
repnz
aam
sarb
cmp
jns
sub
andb
sbb
adc
add
fcomi
fcomi
or
dec
ja
nop
fldl
mov
pop
jmp
sbb
dec
adc
pop
or
into
call
inc
push
pop
dec
sub
jne
movsl
shll
test
push
sub
daa
inc
test
jnp
sub
daa
shll
adc
pusha
xor
ja
ljmp
in
shll
enter
es
xchg
jne
ret
jo
lds
lods
add
sub
adc
test
cmp
pop
mov
push
cmp
mov
cmp
mov
sub
and
shlb
or
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jne
popf
jg
mov
jbe
rcrb
aas
in
jecxz
loope
fbstp
add
cmp
ficoml
and
mov
sarb
mov
sbbl
mov
popf
inc
cmp
pop
sarb
cmp
addb
lret
aas
xor
cwtl
pop
jmp
sbb
sbb
xor
push
adc
jb
jne
popa
in
sbb
adc
adc
xor
jns
jne
jno
push
aad
add
or
inc
push
sbb
iret
cmp
mov
inc
jns
xor
pop
sub
sbb
jb
jb
jne
jno
sbb
sbb
sbb
sub
mov
loope
fnstcw
int
leave
mov
mov
mov
movsb
push
cmpsl
mov
mov
sbb
xorl
pop
insl
pop
imul
dec
cmp
push
dec
sub
push
jno
insl
dec
push
cmp
xor
arpl
and
fistpl
fistl
xchg
push
add
in
cmp
ret
icebp
xchg
xchg
data16
fldl
lea
test
pop
jge
jns
jne
jno
lea
imul
push
mov
jne
fs
pop
xor
mov
and
sbb
xor
or
pusha
std
pop
dec
gs
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
lds
fstpt
mov
lods
test
test
cmp
mov
test
jns
jne
jno
insl
imul
push
dec
sbb
push
ja
rcl
repnz
rol
mov
xchg
cmpsl
mov
mov
jb
fisttpl
and
or
inc
mov
dec
or
std
xchg
jnp
mov
jg
lahf
mov
cltd
jne
jb
lret
jno
ret
cltd
sbbl
out
arpl
adc
test
repz
out
in
jecxz
cld
sbb
pop
aam
xchg
cwtl
sub
mov
shr
inc
dec
dec
repz
cli
lods
daa
ret
pushf
aaa
inc
sub
push
push
push
jp
adc
aad
mov
popf
mov
leave
mov
or
mov
pop
in
mov
lret
mov
jle
pop
popa
mov
pop
mov
loope
imul
sbb
jo
icebp
mov
add
sub
sbb
js
icebp
xor
ficompl
rcrl
mov
mov
stos
xchg
jae
mov
popf
xor
cli
push
xchg
rorl
cmpsl
cli
pop
fildl
imul
mov
push
daa
mov
out
sbb
dec
sar
das
adc
jno
sbb
sbb
sbb
xor
cwtl
jecxz
pusha
xchg
fisttps
xchg
lret
mov
repnz
cmpsb
mov
push
in
jecxz
loope
mov
lods
cmpsl
jmp
xchg
adcb
sbb
sbb
ds
mov
sbb
xor
fwait
jb
jb
jne
jns
insb
pop
gs
pop
mov
add
dec
mov
sub
stc
loop
sbb
sub
pop
sahf
inc
mov
es
add
push
decb
xchg
lea
jecxz
adc
or
data16
rclb
cmc
adc
xchg
pop
sub
ret
addr16
jne
mov
das
call
pop
adc
mov
push
sbb
and
out
mov
bnd
in
mov
enter
pusha
mov
lods
pusha
movsl
xlat
adc
sub
push
sarl
jb
insb
pusha
fcmovnu
cmp
mov
and
sub
rcrb
push
adc
or
gs
movsl
gs
mov
imul
rorb
mov
jg
jne
scas
dec
xchg
push
sbb
cmpsl
cli
arpl
mov
lret
ja
pop
sbb
adc
fistl
cli
or
pop
decb
pusha
loop
fcomi
addr16
clc
fwait
mov
dec
mov
jbe
outsl
sti
push
push
in
and
sbb
ljmp
and
inc
cmc
push
sbb
sub
jnp
mov
pop
in
jecxz
sti
cmc
xlat
fxch
fucomp
inc
mov
cmpsl
mov
mov
jb
jb
jb
jb
jo
pop
dec
xor
adc
hlt
sbb
gs
adc
jno
ret
dec
sub
inc
insl
and
addr16
fwait
repnz
lcall
jne
jns
pop
pop
pop
pop
mov
jecxz
add
sarb
and
mov
fisttpl
mov
inc
push
push
sbbl
fnstcw
movsl
out
flds
cmp
fistpll
mov
rclb
daa
inc
xor
orb
aaa
jo
fnstsw
or
add
addr16
adc
xchg
out
push
or
or
or
and
adc
js
pop
sbb
ret
sbb
or
inc
stos
test
pop
jl
jbe
push
fs
push
nop
inc
das
xchg
out
xchg
jo,pn
pop
pusha
ljmp
pusha
in
mov
xchg
pop
pop
pop
push
sub
test
cmpsl
mov
push
dec
dec
cmpl
push
push
xchg
popa
aad
add
pop
lock
jns
test
dec
xchg
mov
jne
mov
cli
jnp
or
out
imul
stos
mov
test
cltd
inc
imul
sub
movmskps
fcomps
sub
movsb
in
jecxz
inc
int
xchg
jns
cmp
add
loopne
fidivl
cmp
cltd
ret
sub
or
mov
pop
mov
daa
cli
inc
into
inc
cli
fstenv
daa
and
std
repnz
dec
call
lret
mov
xor
sbb
jge
inc
ss
mov
xchg
or
pop
daa
andb
adc
sbb
cmpsb
nop
sbb
int
pop
push
loope
mov
xlat
xchg
pop
je
mov
inc
sbb
push
adc
leave
xlat
cltd
lea
lcall
fimull
fs
cmp
jmp
ja
lret
dec
xchg
into
cmc
stos
sti
jns
jle
cmp
cmp
aas
and
mov
mov
and
jns
sbbl
adc
adc
sbb
pop
pop
mov
add
movsl
into
rorl
add
sbb
sub
clc
jg
sbb
sub
and
push
push
pushf
mov
or
pop
sub
rorb
cltd
outsb
mov
pop
cli
push
inc
fcmovnbe
sub
aam
mov
dec
inc
jo
cmp
pop
push
sub
cmp
jg
arpl
out
out
mov
inc
pop
mov
divl
aaa
push
in
cli
movb
xchg
mov
and
mov
fistpll
pop
cmp
std
add
mov
lock
iret
sbb
sbb
xor
int
stc
pop
ret
mov
mov
loope
frstor
mov
ljmp
pop
out
popa
ljmp
arpl
pop
shl
pop
ret
add
cld
lods
cmp
sbb
jmp
pusha
and
push
in
ret
sub
xchg
rcrl
and
xchg
fldl
add
cmp
pusha
rclb
dec
xor
xor
rcr
or
or
xlat
mov
sahf
seta
fstpt
push
and
inc
test
mov
popf
cld
pop
aas
sub
adc
push
xchg
bnd
mov
push
push
cmc
mov
fsub
mov
push
cmp
sarb
pop
mov
jno
insl
lret
rorl
ret
or
test
pop
add
sbb
ret
fucom
loope
xchg
adc
push
xchg
das
adc
or
iret
xchg
cltd
cmp
or
add
or
xlat
test
sub
or
out
or
dec
daa
orb
fs
jne
xor
jp
pop
rclb
mov
sub
dec
or
add
pop
mov
scas
std
mov
xchg
and
pop
push
xor
add
fcomip
fstp
or
aaa
repz
sub
repnz
sub
inc
lods
and
jb
cmp
shlb
mov
stos
mov
inc
push
arpl
mov
xor
inc
cmc
cmp
xor
add
sti
pusha
icebp
pusha
out
pop
shll
addr16
mov
fiadds
clc
std
aas
cmp
imul
cmp
hlt
mov
sbb
lods
and
cltd
bound
push
push
inc
sub
xchg
pop
pop
push
and
pop
xor
aam
fadd
xchg
xchg
fwait
xchg
int
adc
sbbl
popa
fndisi(8087
insl
push
cmpsl
push
leave
pop
test
jno
cmp
xor
xchg
rclb
mov
xchg
pop
mov
js
fs
aas
xor
popa
test
ja
jge
sub
pop
jmp
mov
xor
mov
gs
xor
mov
ljmp
dec
imul
hlt
mov
lea
push
dec
imul
and
and
xlat
test
orl
push
cmp
fnstenv
movsb
adc
mov
dec
add
fmuls
mov
popf
cmc
jne
movsb
push
push
adc
mov
pop
sbb
sub
inc
lret
and
rcll
lods
out
pushf
xor
addr16
dec
pop
sarb
mov
sbb
inc
fisttpll
xor
leave
gs
inc
adc
mov
cmpsl
in
add
addr16
int
or
sti
xlat
fdiv
insl
cmpsl
lret
mov
out
rorl
out
lret
comiss
xchg
insb
xor
outsb
xor
mov
mov
roll
xchg
xchg
lods
popa
push
test
outsl
sti
jmp
cmp
mov
mov
data16
aad
ret
jno
xor
js
lcall
jle
push
pop
jo
addr16
bound
push
loope
push
inc
jns
xor
sub
jne
cli
or
in
xchg
fcmovnbe
push
iret
mov
cmp
push
and
popf
fistpl
push
sub
push
rorl
xchg
add
jne
popf
out
out
fbstp
js
lret
fisttps
scas
mov
sti
fwait
pop
mov
imul
rorb
lret
jne
lods
pop
push
sbb
out
mov
xlat
mov
or
inc
jmp
enter
mov
or
subb
adc
add
inc
aam
dec
mov
sbb
xor
add
and
cmp
stos
xchg
fisttpll
and
popa
jnp
inc
and
add
jecxz
decl
out
test
mov
mov
dec
fistps
pop
shlb
clc
or
cmp
stc
mov
imul
cltd
cli
out
dec
dec
cltd
xchg
xchg
mov
adc
arpl
test
rolb
hlt
add
mov
fdivrs
jo
addl
jmpw
push
popf
dec
les
adcl
mov
ret
jo
jg
leave
in
test
jle
pop
pop
jmp
out
inc
pop
in
cli
or
pop
loope
push
sub
adc
hlt
add
add
dec
out
rcll
mov
movsb
mov
sub
jl
jb
imul
into
daa
sbb
add
out
in
xchg
data16
sti
pop
inc
je
pop
data16
aad
ja
cmpsl
cmp
push
mov
pop
dec
add
mov
mov
add
call
rorb
jb
jne
jns
dec
mov
fcmovnb
into
mov
dec
adcl
test
push
add
out
pop
cmp
cmp
je
jge
movsl
or
inc
imul
sub
imul
push
dec
pop
aaa
mov
sbb
mov
mull
xchg
sub
ja
in
movsl
icebp
inc
push
fldt
cmp
jne
mov
out
or
push
je
mov
cmpsb
mov
nop
jmp
out
add
xor
clc
rorl
pop
test
and
fisttpl
xchg
lret
jo
lcall
int3
fcmovbe
xor
arpl
sub
js
jno
daa
sub
es
jg
sar
ret
lock
out
call
aas
incl
pushf
xlat
stos
xchg
pop
incb
pushf
dec
out
pushf
dec
out
push
mov
stos
inc
add
sbbl
inc
cld
cmc
jns
pop
dec
and
xor
cwtl
scas
jmp
push
inc
mov
lcall
adc
adc
hlt
pop
fistpl
sbb
out
adc
jno
xlat
cmc
pop
push
push
imul
ja
jo
icebp
bound
push
sub
loopne
cmp
mov
sbb
adc
arpl
pop
loopne
push
mov
sbbl
insb
xor
push
cmc
inc
adc
hlt
cmp
sbb
aam
mov
pop
xchg
mov
push
mov
jmp
or
icebp
dec
testl
std
pushf
and
and
out
inc
jmp
pop
mov
add
xor
ja
cwtl
loope
popa
cmp
cs
cmp
sti
pop
pop
sahf
and
cmp
sub
repz
aad
das
xchg
pop
out
aad
into
outsb
dec
cmp
inc
aas
pop
addr16
mov
fldt
adc
filds
test
push
dec
cmp
std
xor
filds
subl
jmp
in
das
sti
mov
inc
xor
test
rcrl
inc
ret
dec
inc
xor
fisttpl
or
std
add
xlat
in
jecxz
or
xchg
pop
mov
and
fisttpl
jg
dec
call
push
imul
add
fs
jne
pop
dec
dec
addr16
lock
ja
xchg
fistpl
fstl
imul
and
pushf
fbstp
pusha
adc
push
iret
outsl
pusha
ret
push
stc
push
cmp
lcall
mov
lock
fucomi
cld
in
xor
cwtl
mov
pusha
lahf
cmc
mov
mov
inc
daa
cmp
mov
cmpsb
jmp
iret
in
push
lods
jb
jae
xor
mov
cmc
and
add
stc
mov
ds
push
pop
xor
push
or
push
sbb
stos
xchg
test
outsl
rclb
js
cli
fidivs
inc
fndisi(8087
mov
mov
stc
xchg
loope
incl
or
mov
pop
lret
cmp
inc
and
imul
enter
pop
aad
pop
jns
fnstcw
pop
mov
dec
push
sbbl
xchg
jmp
gs
mov
xor
xorl
sbb
xor
dec
in
faddp
add
inc
out
les
lret
mov
mov
ret
xorl
xlat
lds
pop
add
push
dec
xchg
jmp
mov
test
cmpb
pop
icebp
out
push
out
add
in
lock
cwtl
pop
ret
pusha
shr
mov
mov
jl
imul
jg
imul
insl
fsts
leave
push
sub
out
in
push
pusha
push
aaa
dec
xor
aad
mov
xor
push
cmp
das
xchg
rorl
xchg
out
test
xlat
mov
lahf
jb
outsb
shrb
mov
mov
mov
push
push
and
push
jnp
cmp
ret
push
lret
mov
sbb
and
fimull
jmp
mov
sub
in
and
add
fnsaves
and
ja
cmc
movsb
imul
adcl
adc
push
sbb
out
lahf
inc
add
outsl
sub
xchg
adc
cmp
xor
push
mov
ljmp
and
xor
mov
push
jns
out
or
mov
sub
sbb
jmp
sbb
jne
bound
mov
xor
cwtl
mov
orl
add
and
pop
aas
mov
aad
jg
aas
daa
push
xor
pop
hlt
xor
and
jp
sub
inc
and
jns
mov
pop
aaa
push
mov
dec
inc
mov
jl
insb
xchg
aaa
jo
and
pop
push
nop
sti
add
mov
lea
out
mov
test
xchg
or
fbstp
cmp
and
mov
lret
push
push
and
sahf
dec
pop
jp
incl
jns
mov
stos
mov
aaa
adc
mov
popa
xchg
mov
sub
fnstenv
sub
push
inc
lahf
jne
lods
xor
minps
dec
aas
in
out
push
push
sbb
push
das
jb
int
ljmp
sbb
mov
sbb
pusha
jmp
dec
push
sub
jno
iret
cmp
adc
push
add
inc
hlt
es
xchg
mov
mov
jle
cmp
xchg
ss
in
shll
xor
and
cld
fwait
push
stos
testl
ja
loope
rcll
cltd
sti
cmp
jp
cmc
popa
leave
add
lods
sbb
xor
insl
ret
and
leave
and
rcll
and
sub
enter
cmp
jnp
cmp
inc
mov
cwtl
imul
xor
sub
sbb
sbb
js
jo
loope
sbb
xor
sbb
adcb
nop
mov
dec
int
push
inc
push
sub
mov
in
inc
jmp
sbb
or
std
inc
xlat
sbb
test
push
mov
push
xor
adc
mov
loope
test
repz
push
inc
and
out
inc
pop
cmp
das
and
jnp
repz
dec
das
jae
mov
dec
pop
sub
pop
xor
ror
jne
push
pop
mov
inc
stos
dec
xor
adc
or
inc
push
and
mov
imul
sbb
mov
dec
push
mov
mov
test
pop
mov
and
test
cmp
mov
das
sbb
nop
mov
sbb
xchg
mov
rdpmc
dec
test
cmpsb
push
shll
jmp
and
xlat
push
lahf
mov
jns
adc
or
add
xchg
mov
neg
xchg
mov
dec
push
mov
aas
aad
push
mov
adc
nop
push
adc
lods
fwait
sbb
mov
sbb
ret
add
mov
cmpsl
incl
sbb
mov
mov
cmp
sub
icebp
or
ds
test
mov
push
test
shlb
insl
cmp
jb
cmp
hlt
xor
cwtl
sub
inc
xlat
movsl
cld
dec
stos
mov
mov
xchg
fs
mov
push
and
dec
cltd
leave
lcall
pop
dec
sbb
mov
xchg
mov
cmpsl
pop
fldl
sub
aas
in
faddl
popa
jns
mov
jmp
clc
popa
je
int
out
adc
xor
pop
sbb
aas
in
mov
mov
movl
leave
movsl
lods
lret
insb
cs
jle
mov
pushf
inc
sahf
xchg
popf
scas
pop
or
les
mov
cmc
mov
loopne
cmp
inc
in
xlat
inc
mov
outsl
out
test
arpl
or
ret
dec
mov
aaa
mov
adc
and
xchg
std
or
inc
mov
rorl
mov
jne
fistps
je
sbb
or
dec
fisttpll
into
cwtl
adc
das
rcrl
sbb
jno
dec
cmp
xor
jp
out
add
add
mov
aaa
xchg
cmp
loope
scas
xor
jmp
jmp
adc
sbb
bound
ss
mov
xchg
sub
jmp
xlat
testl
push
mov
movsb
add
push
xor
imul
inc
push
aas
out
cmp
stc
adc
stos
sarb
hlt
pop
test
ret
stos
xlat
sub
hlt
sub
xor
mov
shrl
sbb
xchg
xlat
sti
inc
cmp
fwait
xor
mov
inc
adcl
dec
inc
test
inc
fldt
iret
pop
mov
ds
fnstsw
mov
lcall
inc
lret
xor
dec
inc
gs
xor
or
pop
mov
mov
ljmp
dec
sbb
mov
push
ret
sub
dec
jns
mov
mov
cmp
push
daa
mov
dec
jmp
in
pop
sbb
imul
push
mov
jae
mov
xchg
push
enter
sub
test
add
adc
mov
push
cmp
inc
or
pop
adc
mov
fcomi
push
cwtl
dec
mov
loope
jle
sbb
test
popa
jecxz
loope
fnstsw
xor
pop
or
sbb
nop
loopne
xchg
in
xchg
rolb
xchg
les
jno
mov
movsl
add
imul
ret
and
add
jecxz
lods
inc
icebp
icebp
pop
ret
xor
push
add
pop
gs
lods
addl
cmpsl
dec
mov
aam
mov
xchg
inc
and
repz
loopne
dec
popa
inc
in
cmpsl
int
test
dec
imul
inc
popa
pop
xor
sti
aas
inc
pop
popf
repz
cwtl
adc
andl
popa
ret
fidivrl
pusha
inc
push
inc
or
shrl
sbb
pusha
loopne
cmp
cmp
mov
mov
cmp
movsl
cmc
mov
sub
fs
aaa
push
pop
mov
sbb
out
push
ja
jno
cltd
andl
inc
rclb
push
and
enter
mov
fs
inc
push
push
imull
sub
aam
sahf
test
sbb
loopne
xchg
jg
mull
rcl
push
das
dec
jmp
shr
adc
add
std
aad
out
xchg
je
shlb
pop
hlt
push
mov
shrl
dec
sbb
pop
xchg
jnp
add
cmp
scas
xchg
sub
xchg
out
int
sbb
sbb
or
in
push
mov
popa
stos
hlt
and
arpl
sub
cs
insl
jecxz
cmpsl
leave
aam
test
and
cmp
sbb
or
scas
dec
inc
push
rclb
jmp
cld
jb
lret
mov
or
jbe
addr16
and
ret
sub
lahf
sti
ret
das
jecxz
xor
out
adcb
xor
jnp
and
stos
out
add
mov
lods
or
out
or
add
nop
add
add
dec
xchg
lock
inc
call
fsubrl
fcmovnbe
sti
rclb
nop
xchg
mov
mov
aam
test
test
popa
leave
fistpl
mov
addr16
pop
sbb
xchg
in
das
test
fidivl
ljmp
inc
xchg
scas
inc
andb
or
xchg
inc
faddl
adc
pop
out
lss
lahf
das
fstpt
imul
sub
adc
jnp
sub
mov
mov
dec
and
pop
push
jns
and
ss
repz
pop
outsl
lahf
push
adc
xcrypt-ctr
cmpsl
fdivr
movsl
sbb
xchg
push
jmp
ficoml
and
dec
fisttpl
iret
push
popa
aas
testl
fwait
imul
push
cmp
xchg
mov
test
push
mov
inc
in
imul
testl
mov
inc
cmpsb
in
push
mov
cs
cmpsl
adc
push
in
out
xchg
ret
imul
loopne
fidivs
push
or
pop
xlat
cmpsb
push
xchg
or
or
cltd
rcrb
sarb
push
aaa
daa
pop
es
xor
or
push
movsb
mov
inc
sbb
mov
movl
dec
xor
ss
fldl
xchg
test
or
inc
pop
fbstp
rcl
pop
mov
pop
sbb
jmp
rclb
test
inc
push
xchg
imul
pop
out
sbbl
es
xor
mov
orl
fnsave
adc
enter
scas
out
xchg
sbb
xchg
xchg
cmpsl
imul
pop
insl
idivb
add
notl
push
int3
or
mov
sub
icebp
push
jns
daa
sbb
sub
add
fadds
push
jmp
in
cmp
dec
mov
inc
sub
outsl
dec
lahf
push
insb
mov
and
xchg
mov
aas
jp
inc
es
sbb
ljmp
mov
aam
sbb
adc
cli
push
ja
sahf
dec
gs
inc
dec
mov
pop
cmp
sub
xor
mov
pop
scas
daa
mov
jo
out
and
imul
and
mov
xorps
and
cmp
pop
push
pop
repz
movsb
add
adc
and
pop
mov
hlt
dec
shrl
test
adc
pop
mov
adc
insl
cmpsl
popf
das
push
push
and
mov
leave
xor
lahf
inc
sub
jne
enter
dec
in
sysexit
push
sub
sbb
xchg
sbb
add
xchg
mov
dec
mov
cwtl
lret
push
cmp
dec
xchg
lahf
cmpl
cmpsl
mov
out
inc
lcall
mov
das
test
loop
cmp
lret
push
stos
mov
and
stc
in
mov
pusha
push
xchg
fldt
imul
out
or
pop
push
or
and
sub
rcll
xchg
inc
dec
aam
xlat
cmpsl
lret
cmp
inc
sbb
jns
js
rclb
or
sub
stc
out
inc
sub
cmp
dec
aad
es
dec
std
pop
cmp
inc
adc
icebp
mov
or
nop
adc
shrb
adc
arpl
sar
out
cli
mov
xchg
sbb
sbb
clc
jmp
add
dec
mov
mov
inc
dec
test
popf
adc
mov
das
sbb
push
and
sbb
jbe
arpl
push
fstpl
xchg
push
xchg
mov
or
or
mov
push
add
pusha
sub
sahf
mov
icebp
lods
and
add
movsl
in
popa
inc
into
aad
cltd
daa
shll
les
inc
inc
fyl2x
and
fcmovnb
inc
xor
out
jno
push
sub
push
movsl
add
int3
mov
jnp
imul
mov
add
cmp
test
push
mov
and
mov
das
stos
or
movsl
or
dec
dec
icebp
push
in
or
xlat
push
pop
ret
inc
jno
sub
pop
xchg
lcall
int3
insb
addr16
fists
shrl
and
sbb
add
dec
daa
inc
clc
xlat
ljmp
enter
sahf
ret
insb
mov
jge
ljmp
sbbl
dec
jnp
pop
das
mov
or
dec
lret
rorb
pop
dec
xor
loopne
lahf
shrb
mov
outsl
xchg
aas
mov
xchg
jmp
mov
sub
fldt
pusha
popa
out
sti
adc
xlat
push
cmp
push
subl
sbb
cld
fisttps
out
or
test
mov
pop
dec
cmc
or
or
push
mov
xor
das
sbb
inc
in
cmpsl
push
mov
xlat
fisttpl
pop
mov
out
jno
or
push
and
mov
adc
and
cmpl
mov
in
fwait
ret
xchg
mov
cltd
jb
and
int3
cmpsb
cwtl
cltd
cmp
lret
mov
push
and
stc
xchg
bnd
jno
ret
jecxz
outsl
xor
insl
mov
cmp
ret
lahf
adc
or
mov
leave
lds
jmp
mov
sub
gs
dec
test
lcall
dec
add
mov
sti
mov
and
das
or
das
aad
iret
xor
gs
pop
pusha
sahf
dec
sub
in
jns
jmp
imul
sbb
inc
mov
aas
xchg
stos
push
cltd
jns
inc
aas
ja
jnp
inc
cmp
mov
push
outsl
pop
loopne
lar
jnp
mov
cli
jne
adc
pop
mov
lcall
es
push
aaa
and
fcmovnu
push
mov
sbb
outsl
xlat
ljmp
popa
sar
movsl
cmp
jno
les
jae
push
sbb
pop
mov
cld
mov
xlat
push
sub
loop
iret
xlat
hlt
into
xchg
jb
sbb
aad
mov
subb
push
daa
test
sbb
repnz
jmp
mov
mov
xchg
jecxz
cli
inc
dec
mov
sbb
sub
jnp
daa
push
ljmp
adc
imul
fwait
nop
inc
ljmp
mov
xchg
loope
sbb
jmp
sbb
imul
rorl
or
mov
pop
sub
std
pop
out
jnp
add
mov
mov
jb
aam
cld
mov
sbb
or
pop
std
popf
aaa
inc
aad
jg
and
xchg
fcomp
cmp
pusha
xor
test
pop
lcall
ja
mov
rcll
dec
movl
scas
clc
subl
cmovb
sbb
sbb
mov
cwtl
imul
xor
push
sti
xchg
adc
mov
dec
in
rclb
shl
adc
inc
inc
inc
sub
loopne
imul
xchg
outsl
xchg
jnp
inc
pusha
pop
dec
sbb
clc
jg
sbb
or
test
and
out
xchg
push
lds
shlb
sbb
imul
sbb
sbb
scas
imul
jo
adc
add
inc
pop
lsl
int3
mov
cmpsb
pushf
xor
pop
or
das
jno
rcl
mov
mov
scas
pop
mov
jle
mov
push
clc
cmp
dec
inc
dec
adc
mov
pop
test
and
push
sub
or
inc
sub
push
inc
lret
lea
inc
sub
stc
lea
imul
mov
cli
enter
dec
inc
push
fs
push
sbb
fistpl
cmp
push
mov
add
repnz
and
daa
aam
lods
pop
call
xchg
icebp
fdivs
dec
sub
inc
mov
invd
xlat
pop
mov
jns
pop
fwait
gs
sti
xchg
outsl
jge
dec
mov
cli
dec
push
rcl
cmpsl
xchg
out
dec
pop
ss
out
adc
sbb
xor
inc
mov
stc
dec
in
aad
jno
into
fcompl
mov
sbb
push
sbb
les
call
push
cld
jmp
notb
js
shlb
sbb
pop
dec
push
sub
and
or
push
mov
xlat
sub
clc
jae
xor
out
mov
stos
jmp
sti
jnp
jae
imul
jnp
mov
adc
in
sub
repz
shlb
mov
mov
cmp
pusha
sub
mov
loope
cpuid
dec
sbb
xor
xchg
pop
cmp
in
aam
fwait
inc
cwtl
lods
sbb
add
sbb
js
sbb
xor
push
xchg
in
cmc
sub
push
cmpsb
outsl
dec
jae
cwtl
rcll
fnstenv
inc
mov
pop
in
addr16
das
fildl
sbb
xchg
cmp
aas
dec
sbb
inc
mov
inc
sub
sbb
arpl
pop
mov
cs
pop
hlt
and
nop
xor
call
shrb
jge
or
adc
pushl
ret
pop
push
lcall
clc
xchg
lret
jnp
mov
cmpsl
jae
test
sar
push
jge
sbb
inc
fisubs
sbb
lods
dec
sub
js
aas
xor
xor
add
jns
sub
aam
sbb
mov
jbe
and
push
fidivs
fsubrs
sti
xchg
imul
push
and
sbb
dec
and
cmc
xor
shlb
pusha
mov
xlat
lods
insb
fiaddl
push
ja
imul
xor
sub
fcomip
add
xchg
sub
mov
mov
mov
xchg
pop
out
movsl
test
pop
xchg
xchg
aas
xchg
mov
or
cli
or
negb
iret
ret
push
mov
pop
test
gs
ror
js
and
sbb
pop
pop
jo
sbb
cmp
sub
imul
popa
mov
push
inc
mov
loope
fstl
sti
or
xor
ljmp
or
inc
cmpsb
adc
nop
clc
xor
inc
jnp
mov
mov
imul
adc
pop
mov
ret
inc
jnp
mov
filds
test
dec
cwtl
inc
pop
cs
arpl
pop
xchg
cwtl
xchg
cmc
out
xlat
or
aad
mov
xor
aam
sbb
mov
out
in
cli
test
lcall
repnz
fstpt
inc
adcb
gs
mov
mov
jae
out
xchg
movsl
gs
mov
cmp
sbb
js
fdivs
and
inc
in
lret
sub
test
xchg
xchg
rcrl
test
mov
xchg
inc
inc
or
pushf
enter
push
out
push
loope
jmp
pop
mov
pop
sub
int3
dec
lret
mov
adc
inc
mov
popa
je
adc
stos
test
xor
add
inc
jmp
movsb
mov
xchg
dec
sub
aas
mov
sub
sub
shlb
ffree
fwait
xchg
in
add
pop
mov
xor
imul
mov
test
push
pop
dec
sub
popa
cmp
fstpt
or
dec
roll
sbb
or
mov
xor
loope
mov
xchg
adc
mov
push
pop
daa
adc
out
pop
mov
and
ja
inc
and
mull
lret
sub
xchg
adc
outsl
cmovbe
orl
adc
xor
insl
xchg
sub
push
push
sbb
pop
add
fwait
sbb
xor
xlat
push
sub
test
enter
adc
add
mov
xor
mov
mov
push
and
xor
xor
jmp
pop
dec
mov
inc
mov
mov
mov
sub
xchg
inc
test
push
dec
je
movsl
dec
add
push
hlt
add
addr16
roll
popa
xchg
xchg
cmp
mov
addb
clc
sbb
mov
sar
mov
pop
push
test
cmp
or
jns
mov
inc
stc
push
lds
xchg
sub
ret
cltd
sub
jne
jno
mov
flds
push
push
adc
rcll
adc
mov
es
jb
aas
lock
test
imul
mov
xchg
imul
push
test
xor
iret
or
addr16
cwtl
mov
sub
adc
lds
mov
imull
dec
fsts
insl
add
jns
dec
sub
jecxz
dec
loope
lret
clc
add
cmc
or
and
push
int
loope
aam
outsl
xchg
sbb
jnp
jb
mov
shll
sub
sbb
pop
nop
add
mov
sbb
in
and
rcrb
jo
loopne
inc
xchg
mov
jno
les
cli
es
pop
fnstenv
lds
repz
dec
adc
or
cmp
sbb
mov
xor
andl
outsb
dec
in
aad
and
push
iret
pop
ja
loope
test
add
xchg
adc
cwtl
adc
xchg
jo
push
sarb
jne
jno
insl
sub
pushl
sbb
sub
sbb
ret
add
xlat
movsl
shl
test
or
in
dec
cmpl
mov
sub
sbb
dec
sub
sbb
lahf
les
arpl
cmp
adc
mov
sub
scas
inc
push
jns
adc
test
and
lods
xor
jo
push
subl
cld
or
xchg
xlat
mov
std
inc
sbb
pusha
ljmp
sbb
cwtl
inc
jp
or
cwtl
pop
and
dec
mov
lret
jle
aas
add
or
sub
aaa
sub
sbb
aad
imul
push
sub
cmpsl
mov
sbb
xor
pop
ror
pop
lods
push
lahf
sbb
push
jo
jg
pushf
push
jne
stos
xlat
cmc
cld
fstp
inc
rcll
stc
push
pop
inc
movb
neg
dec
cmp
push
or
push
lds
inc
sub
add
lcall
imul
xor
push
adc
push
sub
push
stos
sub
cmc
add
inc
loope
inc
cmp
and
sbb
adc
mov
sbb
mov
mov
xor
aad
fmuls
das
fldl
push
and
repnz
cmp
inc
idivb
lret
jmp
pop
add
or
inc
cld
jl
pusha
jmp
xlat
stc
loopne
push
iret
leave
je
xchg
movsl
jmp
in
add
movb
imul
xchg
jns
push
xchg
insb
inc
int3
xlat
daa
fldl
dec
push
jg
cwtl
sbb
pop
fbld
push
outsl
push
lods
jnp
mov
or
stc
pop
cmp
push
ror
adc
aad
sub
jmp
ffreep
mov
push
insl
sbbl
and
int
aad
dec
pop
jno
std
xor
sbb
sub
push
adc
repz
mov
imul
ljmp
test
scas
xlat
std
push
pop
int
sub
sbb
out
testb
imul
pop
mov
adc
sbb
mov
mov
incl
jge
cli
push
pop
sahf
mov
insb
jg
dec
sbb
jno
pop
pop
push
sub
or
or
mov
addb
les
mov
aaa
je
dec
es
fwait
jp
xor
sbb
jecxz
shll
cs
mov
das
dec
pop
push
jmp
mov
mov
movsb
popa
mov
inc
test
inc
adc
lahf
aad
cltd
pop
repz
dec
mov
inc
or
cmp
jns
sub
pop
and
lds
mov
mov
js
stc
pusha
cmc
push
dec
arpl
nop
jmp
test
leave
dec
stos
rcll
cltd
jno
sbb
test
pop
push
add
jno
push
imul
adc
mov
fstpt
arpl
inc
mov
pop
fstpt
pop
mov
out
loop
popa
mov
arpl
jnp
arpl
incl
in
loopne
pusha
sbb
bound
imul
or
aam
push
popf
mov
ja
imul
or
xchg
orl
mov
pop
pop
daa
stos
push
pop
popa
insb
sbb
leave
or
movsb
push
ret
pop
cmp
ja
subb
insl
jecxz
sahf
fsubp
push
insb
inc
pushf
sub
xchg
lods
fldt
iret
dec
xchg
jne
insl
sbb
movsl
lahf
pop
imul
insl
jg
and
sti
fisttpll
movsb
jno
lods
int
push
cmpsl
push
pushf
jecxz
mov
xchg
sub
mov
movsl
mov
push
add
cmp
inc
add
mov
xlat
idivl
add
cmp
pop
and
aam
insl
dec
sub
ret
xlat
test
mov
pop
push
mov
cmp
loope
push
sub
arpl
jg
nop
cs
xchg
add
add
scas
dec
sbb
mov
call
je
outsb
pushf
push
or
xor
jno
ret
push
push
ljmp
push
rorl
cwtl
jae
call
push
movsl
sub
jo
and
mov
jmp
enter
or
sub
mov
jno
sbb
lods
sbb
adc
inc
sub
movsb
jecxz
push
cld
xchg
sahf
mov
push
es
pop
rcll
and
enter
inc
and
xchg
adc
test
jno
out
sbb
push
movaps
aad
push
aam
xlat
dec
mov
movsl
clc
mov
fwait
cmc
add
sub
fldcw
push
cmpsl
dec
in
bts
mov
jae
arpl
les
mov
cmpsl
loope
adc
xor
in
inc
or
pop
test
xchg
sbb
sbb
nop
ljmp
sbb
add
movsl
movlps
xchg
daa
xor
jnp
xchg
scas
and
mov
jecxz
or
push
dec
stos
mov
jbe
cmp
pop
sbb
dec
arpl
test
shll
mov
mov
jge
into
data16
dec
imul
or
repnz
aam
mov
push
xor
sbb
xor
pop
les
xchg
push
pop
loop
cmpsl
pop
adc
gs
cmp
sbb
test
cmpsl
gs
daa
jg
inc
and
xor
add
addr16
sbb
cmp
xlat
jne
int
insl
add
call
bnd
rcrb
aam
push
xchg
jo
inc
sub
add
rcrb
pop
cwtl
jmp
repz
push
divl
xchg
mov
xor
sub
jecxz
mov
push
xor
pusha
xchg
test
decl
and
xor
push
jne
inc
sub
xlat
mov
add
push
cmp
xor
push
nop
mov
or
shrb
dec
test
subb
jo
out
dec
outsl
or
std
loopne
inc
int3
xchg
xchg
popf
addr16
jecxz
inc
jg
add
mov
and
mov
pop
xor
jne
push
jle
xor
sub
ret
or
add
sub
sbb
jecxz
cmp
dec
aad
add
xor
subl
sti
loop
rclb
inc
es
push
cmp
sub
aad
clc
stc
cmc
fimuls
xchg
jbe
lods
push
aas
push
sub
clc
inc
test
sbb
data16
int
stos
in
and
js
mov
ja
into
roll
push
inc
dec
sbb
jns
inc
movsb
push
sbb
call
mov
inc
movsl
jnp
sub
fsubrl
xor
jge
and
movsb
aam
shrb
fwait
ja
and
or
push
jge
lret
insb
gs
sub
push
fistpl
or
lret
mov
mov
mov
cmp
dec
sbb
mov
push
mov
sbb
scas
xorl
cmp
rclb
loope
or
jns
xchg
gs
daa
jae
jnp
lods
stc
lret
push
adc
ds
and
add
mov
cwtl
mov
negl
inc
mov
sbb
add
push
xchg
movsl
mov
or
sub
lahf
dec
fstpl
imul
divl
insb
in
rorl
cmp
sub
sub
jmp
lahf
les
mov
insl
inc
sub
push
push
xchg
dec
shll
cwtl
cmp
dec
mov
dec
xor
mov
mov
data16
mov
mov
insl
xchg
imul
adc
fbld
fbstp
pop
adc
hlt
cmpsl
loop
pop
cmp
xor
fcomps
cs
xor
dec
in
push
in
mov
xchg
and
mov
cmpsl
sti
andl
adc
pop
fcmovbe
jns
rcrl
loope
or
pop
mov
mov
cmpsl
int3
mov
xchg
or
or
orl
or
xchg
sub
adc
jns
lea
addr16
and
jo
sbb
movsl
push
adc
or
aam
and
insl
xchg
push
shlb
clc
jmp
push
push
leave
xchg
jecxz
push
mov
adc
mov
mov
and
dec
and
and
xor
cli
movsb
xchg
int
xchg
imul
test
mov
in
xchg
jge
lret
sub
xchg
mov
fistpl
cmc
push
cmpsl
xor
jmp
insb
mov
push
rcll
in
sti
pop
sub
mov
das
adc
jo
ljmp
divl
push
xchg
add
push
ret
dec
gs
fistpl
and
ret
push
adc
in
jle
or
pop
push
mov
in
incb
lods
popa
sub
aam
outsl
test
imul
mov
arpl
xor
sahf
xor
mov
dec
pop
xchg
and
jle
push
inc
lds
xor
sub
mov
stos
xchg
int
push
jo
jecxz
dec
scas
ret
test
imul
mov
mov
push
sub
andb
js
jnp
sti
push
dec
rep
jne
fdivrs
mov
mov
mov
je
jo
outsl
lock
and
pop
dec
pop
and
popf
es
movsb
jmp
loope
pop
dec
mov
stos
xchg
mov
popf
push
push
and
xor
icebp
sub
rcrb
adc
repnz
rcrl
push
std
fcmovnb
cwtl
test
push
or
jns
fld
push
cmpsl
mov
jae
jne
push
sbb
decl
mul
mov
mov
aaa
inc
mov
outsl
sub
daa
xchg
roll
dec
push
mov
jns
fstpt
jmp
adc
jg
cmp
mov
movsb
shrb
push
and
sub
in
dec
popa
aaa
std
popf
xor
lahf
mov
sbb
push
adcl
jmp
pop
dec
adc
xchg
xlat
jne
nop
aaa
jge
outsb
sbbb
cmp
mov
mov
and
fs
mov
lret
pusha
inc
and
xor
inc
je
insl
into
xor
pop
xor
mov
rcll
mov
sbb
fs
sbb
aad
test
adc
int
xchg
scas
xchg
fsts
lds
les
notb
outsb
rcll
sbb
pop
std
xor
or
cmp
out
or
dec
jne
dec
mov
push
jns
xor
int3
inc
cmpsl
imul
and
out
mov
aaa
mov
imull
into
popf
lea
mov
lcall
sbb
insl
mov
or
loopne
xor
mov
xor
mov
xchg
sub
or
jns
dec
ret
push
mov
ffreep
cmc
xor
adc
cli
jae
les
mov
hlt
leave
push
lea
pop
shrl
lahf
setle
loope
jns
push
insl
mov
imul
notl
mov
clc
aam
imul
mov
jnp
and
cmp
out
jno
mov
popa
sbb
popf
mov
imul
xlat
add
imul
mov
sti
leave
inc
or
cmp
jns
andl
push
arpl
push
lds
movsb
imul
fisttpll
push
pop
add
mov
push
fldenv
or
inc
xor
push
nop
xor
aam
sbb
lds
push
outsl
dec
pop
and
jp
xchg
xorl
or
cmc
sar
push
pushw
adc
push
mov
movb
push
int
add
mov
aaa
pop
cltd
jecxz
push
pop
sbb
xor
subb
inc
test
test
fs
jb
insb
das
in
sahf
shrl
and
cvttps2pi
js
loope
xor
pop
popf
inc
daa
sbb
dec
mov
inc
add
daa
fwait
leave
fisttpll
fstl
mov
sti
insl
mov
push
imul
push
insb
jae
adc
push
in
lods
or
jne
cli
xor
add
arpl
pop
nop
sarb
mov
mov
xor
ds
mov
lahf
dec
inc
fimull
loope
fcmovnb
or
jmp
movsl
imul
out
jae
mov
xor
pop
popa
pop
pushl
shrb
inc
repnz
imul
mov
xor
and
dec
and
xchg
jns
loope
jnp
cmp
xor
cmc
mov
adc
lods
mov
add
xchg
arpl
outsl
cmp
fcos
xor
mov
cmp
jge
sub
inc
jno
insl
cmp
aam
xor
lods
dec
and
out
jmp
mov
cmp
sbb
cwtl
and
mov
in
repz
push
sbb
cli
ror
xor
push
mov
mov
cmp
outsl
push
leave
cmpsl
add
arpl
inc
push
incl
add
lret
push
sbb
xchg
clc
in
and
inc
ljmp
mov
sbb
cmp
xor
lcall
aaa
pop
popa
cmovl
leave
insl
mov
test
std
push
pop
cmpsl
gs
int
lcall
inc
in
inc
or
fidivrs
pop
ss
xchg
in
cmp
sahf
cmpsl
fisubl
inc
enter
ret
or
mov
cwtl
dec
jo
cmp
rcr
mov
cmpsl
xorb
push
sbb
out
jmp
jne
nop
lcall
xor
rolb
fwait
ret
mov
or
or
fnsave
js
fdivrl
jo
ljmp
pop
dec
mov
shr
jmp
inc
movsl
nop
sub
dec
xchg
fwait
sub
jne
arpl
pop
jg
mov
xchg
enter
sbb
or
pop
aam
mov
cs
xor
iret
sub
cmp
jbe
aam
outsb
xchg
dec
pop
int
sbb
mov
xlat
in
ja
ljmp
pop
and
and
and
hlt
sbb
pusha
shr
sub
js
in
rol
into
push
or
xchg
push
cmpsl
adcl
jge
cmpsl
add
psrad
sbb
popa
into
xor
xlat
jge
popa
decl
dec
dec
cmp
js
jo
in
pop
or
and
repnz
outsb
mov
imul
sbb
shlb
popa
mov
cmp
cli
adc
pop
push
aad
cmc
lds
scas
push
pop
rolb
mov
std
push
cwtl
jns
sbbb
jne
in
fs
subl
addr16
sbb
ja
cli
cmc
test
jge
ficoms
lret
sbb
lahf
pop
push
mov
mov
pop
pop
inc
inc
xor
add
rclb
jp
push
sbb
imul
sbb
or
fildl
sbb
fwait
ss
mov
cld
push
dec
dec
xchg
lret
mov
xor
push
cwtl
test
sub
out
ficoml
jmp
dec
xor
xchg
pushf
xchg
xchg
sbb
pop
push
fadds
jno
dec
and
jecxz
push
push
scas
int
or
scas
push
pop
dec
adc
push
popa
outsl
adc
push
xor
jmp
sub
xlat
mov
mov
mov
xor
idivb
push
cli
into
jns
jnp
fists
je
pop
mov
push
sub
and
in
imul
push
iret
mov
cmpsl
paddd
xchg
enter
test
xchg
sub
sbb
movl
js
hlt
sub
mov
cli
inc
xchg
dec
mov
lods
mov
sbb
popf
xchg
sub
push
dec
dec
popa
sub
adc
test
cmp
add
inc
rcl
lods
nop
sbb
and
xor
aam
xchg
insl
fldt
fsubrs
and
loope
push
jecxz
rcrl
adc
scas
push
and
pop
mov
sti
int
fisubs
mov
scas
sub
xlat
aaa
add
jmp
int
hlt
movsl
pop
inc
jno,pn
xor
clc
jecxz
sub
repnz
mov
pop
xlat
or
push
pop
es
push
fisttpll
fildl
or
xchg
pop
dec
dec
mov
decb
ja
cmp
sbb
adc
cmpsl
push
adc
outsb
in
pop
pop
dec
movsb
aad
cmp
mov
inc
insb
sbb
call
inc
fs
jns
rcrb
daa
or
xor
push
mov
jo
cmpsb
pusha
je
imul
pop
mov
aaa
lret
adc
dec
incb
or
pop
js
and
and
fisttps
aas
mov
jno
xor
push
cmp
mov
push
sbb
xorb
sub
lods
jo
or
scas
inc
iret
xor
aad
insl
insl
aad
sub
adc
mov
add
or
mov
mov
xor
mov
out
sub
shl
imul
mov
daa
aas
scas
xlat
xor
nop
mov
ror
mov
test
mov
inc
mov
loop
dec
in
aaa
and
fstpt
ds
mov
into
xlat
xor
xchg
cmpsl
scas
xlat
test
jns
add
sub
pushf
push
push
fs
cmp
sti
imul
jg
popf
aas
sbb
push
push
lret
out
in
or
inc
stc
lahf
or
outsl
fs
jge
sbbb
out
xor
test
insl
jno
icebp
cmpl
insl
jmp
shll
push
shll
popf
rorb
pop
and
or
out
pop
daa
add
les
mov
sbbl
mov
int
push
pop
mov
shll
jne
push
sbb
mov
test
iret
lds
pop
cmpl
and
cmp
cmc
adc
push
dec
push
inc
popa
stc
jecxz
pushf
push
fistps
sub
cmp
adc
rcll
popa
sarl
inc
mov
int
aad
cltd
jae
fidivrs
outsl
aad
mov
cmp
sbb
xchg
repnz
rclb
and
aad
jl
dec
sbb
or
push
nop
xchg
ja
fwait
pop
orl
xlat
scas
or
lea
jne
mov
inc
mov
jge
popa
xor
jge
aad
adcl
mov
cld
pop
iret
and
pop
sub
js
and
pop
cmp
aaa
jne
jno
mov
mov
aaa
jns
std
arpl
test
loope
je
imul
mov
sbb
jmp
daa
mov
cli
inc
xchg
push
das
sti
pop
cmp
inc
call
leave
fwait
shlb
mov
repz
mov
jmp
das
xchg
int
nop
xchg
lds
out
xlat
out
mov
fbstp
pop
or
sub
push
inc
test
mov
jno
adc
cmc
or
xor
xor
xor
js
js
cmp
dec
jne
ja
push
xorl
inc
mov
push
jae
scas
push
stc
test
fstp
jne
outsb
mov
xor
imul
sti
sbb
out
cwtl
lahf
aad
xchg
popf
mov
in
ret
inc
jmp
pop
sbb
loopne
sub
pop
imull
or
call
mov
scas
mov
xchg
cld
push
out
pop
sub
dec
aas
push
std
cmp
cld
xor
jns
je
mull
inc
popa
push
sbb
ds
movsl
popf
cmp
xor
add
stc
pop
xor
jmp
sub
sti
outsl
adc
test
sub
dec
xor
sub
dec
fwait
xor
push
push
mov
js
pushaw
dec
xor
cmp
push
mov
xchg
scas
imul
std
rorb
adc
das
mov
pop
dec
decl
cmp
mov
sti
stc
adc
xchg
xchg
push
push
push
xchg
xchg
or
psubd
mov
icebp
shld
bound
mov
push
xor
aad
shlb
scas
sbb
imul
loope
push
imul
jno
xor
push
add
stos
dec
jnp
jmp
jge
jmp
lahf
add
out
fnstsw
pusha
mov
and
loope
jge
pop
rcrb
pushf
pusha
leave
inc
mov
sbb
push
sbb
inc
pop
aad
sar
inc
imul
xor
clc
js
fildl
popa
fwait
mov
orl
insb
jmp
repz
dec
jmp
nop
xchg
or
cmp
xor
icebp
or
sbb
push
xor
cwtl
dec
mov
sub
jecxz
rdmsr
test
das
add
in
inc
cltd
lahf
dec
imul
push
dec
and
orl
mov
push
xor
pop
das
xor
aad
mov
sub
loope
incl
dec
ficoml
imul
inc
movb
in
cmpsl
fists
js
add
xchg
aad
mov
dec
add
aaa
xchg
sub
fucomi
cmp
inc
stc
mov
push
leave
sub
lods
js
cwtl
icebp
mov
dec
jmp
lret
adc
cwtl
mov
test
xchg
gs
das
mov
cmpsb
std
xchg
lret
adc
repz
lcall
jnp
jno
pushf
aam
call
pop
mov
adc
pop
xchg
mov
leave
ss
frstor
jmp
fwait
roll
rorl
inc
dec
and
scas
sub
push
or
addr16
sub
cwtl
and
arpl
jle
mov
sub
push
push
roll
xchg
ja
popa
xlat
mov
mov
dec
dec
test
sbb
icebp
xor
sbb
pop
xchg
movsl
popf
pop
test
imul
leave
and
inc
lods
stos
lret
sbb
adc
out
adc
mov
lahf
push
fldt
xchg
out
adc
dec
fimuls
xor
sub
mov
lcall
bound
xor
sbb
ficoms
fwait
or
and
push
fwait
jg
pop
insl
subl
popa
dec
jecxz
cli
lds
push
add
cmp
inc
sub
xor
sbb
pusha
insl
sbb
cmp
sbb
js
jo
push
pop
sub
adc
stc
js
mov
xchg
xchg
pop
inc
pop
insl
inc
sub
push
mov
popa
cltd
sub
jg
adc
lods
pop
inc
fwait
imul
mov
cmp
stos
xchg
in
push
mov
xchg
push
leave
xchg
jle
sub
cltd
inc
divb
jne
push
ret
adc
arpl
sbb
js
pop
orb
daa
cmpsb
rcrb
xor
lea
fmuls
pop
sub
ficoms
wbinvd
arpl
mov
pop
cld
das
pop
dec
and
popf
and
lret
je
and
sbb
push
mov
push
inc
push
mov
push
aas
popf
js
je
insb
jmp
lahf
dec
and
xchg
sar
out
xchg
mov
xchg
jae
xlat
pop
inc
lock
daa
sub
mov
sahf
pusha
jge
rcll
aam
mov
pop
mov
xchg
cmp
push
mov
sub
cwtl
jne
in
movsb
pop
stc
jnp
pop
out
push
jnp
xor
jns
stc
imul
inc
mov
inc
mov
add
xchg
nop
inc
push
iret
pusha
and
and
sub
mov
push
add
addl
xchg
cmpsl
out
add
push
push
xchg
ja
xor
mov
out
push
aas
xlat
std
add
inc
cmpsb
insl
push
dec
sub
popa
xchg
or
int
test
cmc
push
pop
xchg
cmp
or
imul
xlat
jnp
add
dec
cltd
sub
inc
popf
sbb
fcmovnu
fcoms
sub
nop
jbe
rorl
and
push
stos
sbb
mov
mov
mov
mov
xor
dec
popf
pop
inc
lods
push
xor
imull
leave
insl
cmpsl
lcall
or
inc
xor
adc
xchg
xorl
icebp
pop
sar
and
mov
dec
popf
jno
imul
mov
adc
mov
ss
mov
orl
cmp
mov
sbb
aam
adc
das
seto
sbb
mov
xchg
xor
cmp
jns
sbb
pop
mov
nop
jmp
and
shl
lock
push
enter
std
pop
push
push
sbb
xor
insl
sbb
popf
inc
sbb
mov
rorl
jns
loop
and
aam
and
std
mov
sbb
pop
push
rep
sbb
lds
jmp
xor
sbb
rcl
and
and
pop
add
cmp
pop
push
inc
inc
push
std
xor
push
sysret
jno
add
sbb
sbb
jmp
dec
pand
dec
inc
xchg
mov
inc
fisttpll
movsb
imul
insl
aas
push
cmpsl
sbb
jns
pop
dec
sub
imul
flds
addr16
push
loope
push
xchg
push
out
push
movsl
lods
cmpsl
cmp
ret
pop
stc
movsl
pop
cmpsl
inc
adc
sbb
add
or
sahf
push
jnp
sti
cwtl
inc
adc
pop
in
xlat
cmp
push
add
inc
test
das
in
and
inc
aam
add
scas
fildl
push
cmc
cmp
dec
movsl
sub
daa
push
add
aad
outsw
push
dec
adc
jmp
xlat
or
xchg
inc
inc
popf
xor
scas
lods
movl
pop
inc
test
xchg
jl
cmc
inc
je
adc
pusha
xlat
adc
mov
cld
xchg
repnz
mov
and
cmpl
stos
sarb
dec
dec
jge
inc
loopne
push
or
cwtl
mov
jne
mov
dec
inc
sbb
or
lret
jmp
enter
mov
sub
cmp
jno
xor
mov
and
jo
loope
push
stos
insb
mov
add
pop
push
mov
jnp
inc
movsb
push
xor
adc
push
sar
out
test
mov
jg
sti
movl
pop
sub
pop
inc
cmp
inc
mov
scas
das
push
and
mov
push
out
push
fwait
xchg
inc
xor
popa
aad
or
fbstp
jb
je
lahf
enter
rclb
sub
xlat
xlat
in
gs
xlat
aad
jnp
cmp
inc
clc
insl
mov
les
cmp
loope
jecxz
fistl
or
add
mov
mov
xchg
test
cmp
mov
pop
xchg
neg
jmp
xchg
push
and
sti
sbb
xchg
mov
mov
orl
jno
loope
and
mov
jne
test
fidivs
sbb
rorb
add
mov
lds
pop
xor
js
cmc
sub
push
sbb
xor
or
imul
push
xor
mov
repnz
stos
pushl
fwait
cmp
lret
inc
xchg
mov
jmp
sub
sub
arpl
sub
push
and
jmp
xchg
jns
dec
mov
scas
push
dec
dec
and
xlat
pop
xchg
lods
push
pop
sarl
mov
out
jb
mov
pop
jmp
xchg
in
aad
lret
clc
fcomip
sbb
add
adc
mov
lcall
lahf
sbb
cwtl
sar
sbb
and
mov
push
mov
adc
push
shrl
adc
lahf
cmp
in
xchg
or
dec
xchg
test
cmpsl
out
push
add
sbb
mov
jns
lea
sub
mov
sbb
mov
pushf
in
cmpsl
subl
sub
popf
inc
pop
sbb
popf
aad
mov
inc
sub
xchg
xor
clc
or
pop
xor
and
pop
sub
repz
imul
movsl
xchg
add
arpl
inc
jns
add
cmc
xor
inc
js
fisubs
xchg
xor
mov
test
icebp
gs
cwtl
repz
std
dec
cld
push
cmc
loopne
ss
xchg
mov
pusha
xor
gs
inc
insl
adc
fmulp
lret
cwtl
mov
int3
xor
pop
insl
sub
into
pop
xchg
xchg
inc
mov
aad
jecxz
inc
imul
stc
in
jae
out
imul
das
dec
loope
nop
out
int
push
push
cli
xchg
bswap
cld
aad
jno
push
aas
dec
sbb
out
and
int
mov
out
mov
imul
test
scas
add
addr16
dec
and
pop
pop
sbb
xchg
push
movb
daa
rol
fwait
inc
cmpsl
xchg
out
adcb
xor
stc
loope
out
lret
cmp
out
inc
movsb
notb
pop
push
inc
sahf
jmp
mov
sub
sbb
test
dec
out
dec
lods
jno
or
in
imul
out
pop
sub
clc
mov
bound
dec
or
sti
notb
sbb
out
jno
pop
mov
xor
fsubrs
inc
and
nop
cli
and
into
aam
mov
popa
cmp
les
inc
push
sbb
ret
sarl
test
insb
dec
cmc
sbb
jg
rcl
push
sbb
xor
sbb
add
sti
sbb
sbb
dec
sub
sub
fwait
or
lcall
dec
xlat
loop
fisttps
push
xchg
and
testl
push
push
add
jnp
push
aad
call
mov
clc
sub
inc
in
xlat
mov
fisttpll
popf
test
pop
adc
pop
sub
cmp
and
or
add
rorb
pop
loope
das
ja
inc
dec
sbb
push
int
loope
inc
loop
ficoml
shll
int
ret
sub
dec
push
lret
mov
test
pop
ja
pop
das
aaa
ret
xchg
xor
sbb
iret
out
sarl
mov
fcmovbe
and
mov
sub
jle
clc
and
filds
ss
sub
in
cs
pop
cmc
aad
lds
sub
sarb
pop
cmc
jns
add
push
ficoml
call
cmp
or
into
or
jecxz
les
push
bound
jecxz
mov
sbb
nop
cmpsl
dec
cmpb
fimuls
jne
xor
insb
inc
inc
imul
insl
sbb
in
push
scas
sub
push
loope
xlat
idivl
inc
sbb
pop
test
fwait
push
push
loopne
nop
test
pop
movsl
add
out
mov
push
sbb
sbb
sbb
cltd
ljmp
sub
fcmovnb
das
dec
pop
pop
adc
lds
insb
gs
add
push
xchg
es
xchg
mov
jg
push
xor
aam
outsl
xchg
pop
sbb
and
xchg
mov
inc
dec
imul
or
nop
daa
xor
xor
nop
adc
daa
fisttpl
cli
pop
xlat
ud0
jb
je
jno
pop
jmp
shl
subb
xchg
adcb
dec
push
repz
dec
icebp
jmp
mov
mov
and
push
pop
test
dec
adc
popa
cmp
jmp
push
push
es
popa
lods
push
pusha
and
test
adc
in
jmp
add
xchg
xor
push
sub
adc
int
adc
jnp
je
daa
cmp
popa
das
pop
cmp
mov
jnp
jne
sarl
xchg
int3
jnp
inc
cmpsl
mov
sbb
pop
ror
and
shrb
fidivs
mov
inc
cmp
or
sub
xor
inc
sti
js
push
fldcw
xchg
xchg
jne
lret
jae
adc
cmp
cmc
wrmsr
xlat
or
xchg
shl
filds
mov
fldcw
lahf
dec
ret
mov
into
insl
clc
test
xchg
add
adc
push
dec
inc
mov
andl
dec
loope
or
lahf
movswl
mov
dec
repnz
and
sub
notl
xor
or
out
imul
in
sbb
inc
xchg
loope
fistps
add
mov
jo
pop
mov
insl
imul
cwtl
repz
sbb
into
jle
pop
sbb
enter
ja
in
clc
push
int3
xchg
std
xor
inc
stos
inc
and
xchg
push
sbb
push
lcall
push
subb
aam
sub
pop
sbb
jno
sbb
sub
inc
adc
push
or
sbb
lea
int
lock
mov
movsl
xor
js
je
xchg
or
jecxz
mov
pusha
mov
add
clc
std
sarl
mov
push
inc
sbb
adcb
jp
mov
aaa
xor
das
push
lret
cld
imul
cli
jmp
or
mov
fs
out
nop
pop
dec
inc
or
dec
mov
loopne
fldl2t
sbb
cmp
aad
mov
sub
hlt
jno
pushf
sarb
xchg
xor
inc
pop
sti
xor
imul
das
dec
mov
sbb
seta
pusha
mov
dec
aaa
ja
gs
inc
daa
movsl
add
inc
lahf
mov
jmp
adc
sbbl
addr16
sbb
lods
jns
mov
pop
out
in
jecxz
decb
cmp
ror
mov
xchg
insb
pop
bound
jno
xor
dec
fnstsw
push
std
cltd
inc
and
popf
mov
xor
adc
lds
push
jg
daa
scas
add
pop
out
fists
fs
adc
xor
or
mov
or
or
xchg
mov
and
rcrl
dec
inc
and
adc
mov
out
mov
jmp
xlat
pop
out
cmp
xchg
rorl
xor
repz
push
test
insl
arpl
jmp
or
std
dec
mov
fsubrl
mov
leave
cmp
mov
scas
jns
mov
lcall
dec
cltd
jnp
and
fabs
pop
sti
lea
jbe
movsb
std
imul
rorl
sbb
cwtl
sbb
jo
dec
nop
sub
cmp
std
dec
adc
test
inc
pop
lea
push
btc
jns
jge
xlat
mov
mov
insl
test
roll
lods
sbb
mov
std
xor
dec
mov
pusha
adc
insl
fadd
fsubs
push
subb
mov
testl
add
jne
adc
sbb
pop
js
in
aad
jne
test
ret
loope
cmp
inc
xchg
insl
cmp
cwtl
xchg
sub
fists
and
pop
jecxz
cmp
xor
cmp
int
mov
dec
inc
and
clc
sbb
sub
outsl
clc
popf
loop
push
and
or
push
cmp
add
into
pop
test
sub
xchg
test
negb
aam
stos
xor
or
aad
inc
cs
inc
cld
jmp
xchg
cwtl
test
jg
sub
adc
imul
xor
push
popa
pop
pop
mov
clc
xchg
scas
cs
or
xor
sbb
ds
push
mov
push
lea
filds
mov
mov
and
ja
xor
mov
adc
xchg
fistpl
xchg
jecxz
inc
insb
jns
inc
jne
les
mov
das
xlat
mov
lret
lahf
mov
fwait
sub
sbb
xor
mov
jmp
sbb
lea
dec
mov
mov
mov
mov
mov
adcl
xchg
cmc
ret
fnstsw
test
and
insl
inc
mov
iret
xchg
or
add
adc
push
sbb
pushf
aad
mov
mov
inc
add
push
in
adc
sub
imul
imul
movsl
add
mov
push
sub
lret
in
fsubrl
scas
leave
sub
lea
xchg
inc
imul
mov
shll
xchg
and
shrb
fsubp
cmp
in
pop
aaa
push
leave
popa
mov
mov
andl
sub
loop
popl
das
popa
mov
mov
or
mov
mov
jne
mov
call
sub
std
and
aaa
movsl
jmp
mov
je
scas
aaa
mov
fstpt
jno
daa
mov
popa
out
jae
and
or
xlat
in
in
std
or
lods
mov
int
mov
lods
test
movsl
lret
cmp
insl
add
sbb
cmp
lods
jne
adc
sub
in
movsl
sub
mov
sub
imul
in
pop
jmp
popa
sub
xchg
dec
leave
shlb
in
inc
dec
sbb
cmc
sub
cmpsl
mov
sbb
jmp
or
xchg
and
sbb
pop
inc
das
jno
ret
jno
or
sbb
fstl
in
in
insl
cmp
xor
aad
aad
outsb
lret
xor
sub
sbb
icebp
mov
ljmp
sub
cmc
outsl
test
stos
cmp
push
es
mov
sti
ja
popf
xchg
test
pop
cmp
adc
and
cmp
cmp
roll
push
pop
pop
in
sub
ret
jmp
dec
test
inc
cltd
pop
pop
scas
adc
xchg
xchg
mov
lods
popf
xchg
sub
loope
dec
inc
outsb
sbb
sub
add
mov
inc
in
sub
dec
add
movsl
mov
les
pop
popf
packsswb
jne
imul
outsl
movl
jns
jnp
add
movsb
push
xor
pop
jne
popl
xor
aaa
add
aad
aam
pop
fwait
pop
pop
push
dec
xchg
ljmp
lcall
testl
push
push
loope
sub
sbb
adc
push
dec
pop
push
push
mov
and
aaa
dec
push
push
aas
pop
push
lret
add
cs
and
sub
xor
inc
repnz
jbe
push
jp
mov
fnstcw
or
mov
or
push
sub
cmp
fsts
loop
insb
pop
xor
icebp
shlb
inc
pusha
pop
repnz
inc
popf
xor
jecxz
push
dec
cmovo
cmp
cli
inc
fdivrs
sub
icebp
gs
fdivrs
push
push
faddl
dec
inc
inc
add
out
push
jne
cmp
cmp
repnz
loop
mov
or
cmp
sbb
sub
sub
sub
inc
inc
ss
mov
in
fwait
fwait
lret
in
mov
jp
insl
inc
sub
imul
dec
in
and
pop
or
cmp
xchg
dec
add
xor
lret
in
adc
mov
dec
sub
inc
dec
das
sbb
pop
fdivrl
jp
fwait
into
and
es
cwtl
std
xor
lds
fmul
adc
rclb
jbe
xchg
cmp
icebp
test
cmpsl
mov
dec
mov
push
adcl
imul
pop
jmp
pop
jmp
test
pop
cltd
shlb
faddl
dec
out
out
loope
call
arpl
fldt
shrb
dec
int
dec
call
sub
lea
aad
fstpl
pshufw
pop
lods
add
fstpt
mov
pop
adc
out
movsl
mov
test
push
sub
push
and
fwait
inc
add
add
sbb
xchg
movl
aaa
lea
jno
pop
jne
loope
mov
data16
push
out
ja
push
aad
jbe
lds
cmpsb
mov
pop
adc
and
add
das
fiaddl
je
negb
sub
fs
scas
mov
pop
cld
mov
dec
push
lret
cmpsb
stos
xor
xchg
loopne
aad
jge
lahf
repnz
adc
lcall
mov
sbb
pop
mov
add
and
lea
push
out
out
test
push
pop
fucomip
std
ljmp
pop
push
js
inc
mov
or
xchg
pop
and
dec
mov
dec
orl
and
daa
add
ljmp
clc
adc
adc
sub
push
and
jecxz
xchg
popf
jle
mov
hlt
jmp
add
dec
loope
out
inc
cmp
xlat
lret
pop
aaa
hlt
xchg
or
sub
push
pop
fstps
outsb
xchg
pop
push
idivb
cs
jno
fstps
inc
cmp
into
leave
sbb
pop
xor
aad
and
mov
xor
repz
jae
pop
imul
movsb
mov
jo
jbe
or
stos
les
mov
lret
push
mov
jmp
pop
ret
sahf
sbb
xor
pop
pop
add
arpl
addr16
jb
pop
sarb
or
jge
inc
lret
test
jbe
cmp
adcl
mov
test
adc
orb
idivb
mov
xchg
pop
push
popf
xor
sbb
adc
mov
pop
or
fcomip
ficoms
aad
xchg
adc
loope
push
aas
bound
das
les
pop
ror
inc
jle
pop
sub
addr16
jae
mov
stc
fwait
pop
pop
scas
or
mov
pop
aaa
sub
mov
push
outsl
adc
or
sub
push
pop
das
loope
aad
sbb
gs
xchg
mov
mov
sbb
push
dec
adcb
mov
dec
sbb
xor
lds
les
or
xor
push
jmp
cmp
adc
fldcw
shll
xchg
mov
add
xor
xor
inc
adc
xor
dec
add
es
inc
dec
inc
cmp
push
stos
cltd
push
sti
pop
sub
or
stc
sub
xor
outsb
lea
ss
lret
mov
or
data16
cmp
jle
icebp
into
push
sahf
push
shrb
push
stc
lcall
mov
fldenv
dec
xchg
dec
shll
push
push
cltd
stos
dec
dec
out
mov
push
mov
ss
xor
sbb
data16
mov
cmp
mov
xchg
push
sbb
jno
jg
mov
pop
pop
ja
jbe
sbb
cld
ret
push
cmp
push
pop
xor
into
sbb
sbb
imulb
sbb
push
push
jmp
rcll
push
ljmp
inc
xor
sub
nop
or
mov
ljmp
rorb
add
sub
and
dec
fdiv
jns
sub
sub
cmpsb
inc
inc
inc
cmp
addr16
mov
lock
loopne
mov
movsb
mov
cmp
movl
jmp
or
xor
pop
outsl
mov
int3
xor
popa
pop
dec
les
mov
test
daa
out
mov
cmc
loopne
lods
pop
jecxz
add
rcrl
lret
repz
xchg
out
pop
fcomip
cmpl
jno
xchg
lcall
xor
mov
sub
addr16
push
adc
sbb
ret
jno
xor
pop
mov
adc
pop
jbe
dec
pop
sahf
mov
xlat
fstpl
stc
sub
or
cmc
push
mov
xor
jb
cs
fdiv
shl
stc
add
push
hlt
fnstcw
pop
shlb
push
lds
xchg
rcr
rcrb
insl
add
mov
fucomip
in
stos
inc
ret
push
xor
cmp
leave
stc
lock
sbb
mov
push
dec
push
mov
fsubrs
sbb
push
jg
fwait
stos
fstps
pop
test
aas
pop
out
sbb
mov
inc
dec
cmpsb
push
aam
cmp
inc
cmpsl
jp
mov
mov
nop
push
mov
pop
push
push
mov
ret
decb
out
ss
inc
cmpsl
push
or
pop
mov
xlat
and
push
adc
dec
cltd
int3
retw
and
mov
dec
jg
sbb
mov
push
enter
pop
pop
jae
imul
mov
pop
andb
push
fcos
mov
add
in
sbb
fnstsw
int3
sbb
dec
jmp
inc
or
cltd
pop
mov
dec
jbe
cmp
outsl
neg
stos
scas
pop
inc
xchg
and
fwait
hlt
cmp
inc
iret
cltd
dec
divb
pusha
cmp
lods
pop
jmp
daa
push
pop
xlat
inc
popa
pop
je
in
dec
or
push
jb
sub
dec
push
sarl
les
dec
cmp
fsts
push
movsl
gs
xchg
add
hlt
adc
push
xor
pop
leave
sbbl
and
loop
jecxz
mov
cwtl
xchg
iret
jns
sbb
and
ds
jle
js
cmp
pop
xchg
jmp
and
or
dec
pop
mull
test
sbb
jmp
rol
in
mov
mov
push
test
push
dec
out
dec
rorb
fnstcw
dec
pop
test
jae
inc
stos
jl
push
lods
inc
enter
lcall
sbb
push
mov
outsl
push
pop
subb
dec
push
mov
clc
out
icebp
dec
in
mov
sub
push
inc
sbb
hlt
cmc
in
lahf
aaa
pop
mov
jb
out
and
sub
notl
cmc
hlt
mov
push
xchg
sbb
pop
mov
mov
mov
inc
push
cmpl
xchg
data16
dec
in
and
or
xchg
je
stos
jne
push
push
and
mov
fistpl
adc
inc
dec
or
and
cmpsl
movsl
int
adc
and
jmp
xchg
sub
in
and
mov
push
orb
sbb
cmp
addr16
mov
lods
mov
add
pop
lods
sub
mov
clc
pop
mov
dec
inc
mov
rclb
in
movsl
xchg
dec
mov
push
inc
pop
scas
js
int
rcll
pop
dec
movsb
fnstcw
pop
cmc
pop
ljmp
mov
pusha
push
ss
pop
xor
lea
addr16
rcrb
jle
jmp
sbb
mov
repz
std
ds
cmp
es
mov
sbb
leave
mov
sub
push
push
bound
jae
lods
adc
out
das
dec
negl
imul
rcll
push
cltd
jns
dec
jg
jne
adc
push
mov
push
xor
dec
or
testb
and
dec
cmc
jmp
pop
inc
pop
xor
mov
imul
add
bound
inc
xchg
dec
and
iret
inc
push
push
repz
push
or
and
adc
jp
nop
xchg
jb
pop
xchg
shlb
dec
testb
sbb
pop
mov
stos
pop
int
jae
xchg
add
mov
out
and
loopne
pop
xor
mov
and
iret
pop
cmc
aaa
pop
jp
sub
push
mov
mov
aam
jle
push
sbb
aaa
pop
xchg
inc
adc
fsts
jle
leave
and
pop
mov
jecxz
js
xorb
aad
int3
push
pop
add
sbb
dec
popf
imul
movsb
adc
daa
lock
pop
cmp
cmc
dec
jb
sbb
pop
rcll
jae
sbb
imul
mov
lahf
dec
cmpsb
add
test
cmp
flds
xor
jmp
ds
add
push
pop
mov
inc
mov
dec
push
cltd
adc
cmpsb
jo
cltd
inc
sbb
pop
push
lcall
pop
push
pop
divb
xor
and
cmp
pop
loopne
lahf
sub
pop
int
lcall
push
cld
dec
mov
bound
clc
push
dec
push
xchg
aad
and
sbb
and
add
frstor
ret
xlat
outsb
andl
cmp
nop
adc
push
mov
fldcw
pop
inc
xor
sbb
or
sub
movsb
mov
dec
xchg
dec
pop
in
cmp
push
sbb
pop
sti
mov
mov
adc
xchg
push
dec
sbb
popa
push
sbb
xchg
ret
pop
popf
sub
add
aam
jno
enter
data16
inc
je
mov
push
test
mov
sbb
add
xor
ja
loop
sbb
push
into
mov
cmp
arpl
pop
or
popa
jg
mov
push
movsb
call
xchg
jp
pushf
inc
adc
inc
xor
xchg
mov
push
pop
xchg
add
lret
aam
iret
mov
dec
adc
pop
fxch
ret
loop
shlb
mov
push
xchg
pop
dec
jo
or
pop
xchg
add
jmp
pop
sub
sbb
das
loopne
les
pop
repnz
jbe
push
pop
or
shll
sbbl
push
clc
shlb
popa
ja
jae
push
mov
or
movl
add
adc
dec
mov
add
or
imul
xor
mov
inc
mov
cmp
push
idivb
inc
inc
mov
mov
sti
mov
scas
dec
cmp
es
insb
sbb
xor
push
shll
add
cs
adc
leave
fucomip
out
pop
adc
xchg
xor
in
in
insb
shrb
daa
sub
and
std
inc
fldenv
pop
inc
add
imul
cmpsb
mov
xchg
lahf
je
arpl
pop
push
jle
shlb
pop
outsb
xlat
adc
pop
jb
sbb
inc
enter
pop
push
pop
movsl
mov
cld
test
sbb
je
mov
jne
pop
mov
adc
jecxz
ret
les
enter
adc
push
sbb
fstps
xor
dec
xlat
dec
xchg
push
jbe
adc
mov
in
jmp
xchg
jge
mov
pop
dec
int
pop
movsb
insb
mov
pop
call
cmpsb
jne
pop
fsubl
xchg
add
cmpsl
shr
cli
pop
xchg
addr16
adc
jo
nop
rclb
ljmp
cs
inc
stos
add
es
gs
xlat
scas
jo
pop
jge
pop
jp
adc
mov
sbbb
jmp
dec
pop
idivl
pop
pop
pusha
fnsave
mov
dec
stos
or
xor
pop
ljmp
mov
mov
push
pusha
movsl
jne
fs
push
pusha
lods
jecxz
arpl
sub
jno
push
push
sub
dec
fists
dec
add
dec
and
jbe
addr16
and
dec
fs
mov
and
add
int
push
sbb
lods
sub
sub
std
sub
mov
cli
inc
loope
push
inc
in
sahf
push
jmp
mov
xchg
loop
push
xchg
popa
jecxz
leave
out
xorl
dec
cmp
sub
mov
leave
dec
mov
mov
or
pop
fld
movsb
jae
push
call
fimuls
popl
push
out
ljmp
test
iret
imul
dec
movsb
pop
arpl
xor
or
data16
stc
mov
adc
pop
xchg
and
lcall
in
or
scas
mov
cs
jbe
pop
xor
mov
push
inc
movsb
loope
in
pop
xlat
dec
sahf
incl
push
clc
and
mov
and
xlat
imulb
push
loopne
ret
cwtl
out
cmp
js
jno
cld
xchg
add
cltd
inc
inc
xor
or
and
stc
mov
fs
ret
lahf
loop
jno
loopne
pop
inc
stc
mov
pop
pop
imulw
je
jle
and
sbb
arpl
xlat
push
insl
repz
xchg
push
dec
jle
cmpsb
pushf
inc
cmp
mov
mov
cld
cmp
or
jno
pop
inc
or
push
push
or
mov
sub
and
xor
cmc
cmpsb
pop
mov
mov
sub
pushf
inc
dec
dec
push
jns
cmp
dec
mov
cmpsb
dec
push
and
testb
pop
stc
cli
nop
mov
loopne
sti
cmp
arpl
lock
adc
cmc
push
lret
inc
pop
pop
and
roll
dec
pop
sub
and
movsl
aad
xchg
adc
cltd
pop
aas
into
not
inc
push
sti
loope
xchg
dec
dec
cmp
test
popa
rorb
mov
xor
call
js
xchg
mov
sub
aad
and
pop
mov
sbb
sar
xor
cmp
icebp
adc
push
roll
addr16
loopne
dec
test
and
mov
mov
movb
adc
jno
pop
scas
sub
cmp
pushf
pop
mov
int3
pop
and
leave
les
cmp
xchg
cmp
dec
and
in
cmp
scas
pop
or
xchg
dec
rolb
cld
outsl
and
pop
mov
imul
loope
loope
pop
jmp
inc
call
push
jnp
jno
popf
mov
js
push
adc
test
mov
loopne
cmp
push
pop
pop
lods
fstps
fs
jne
clc
mov
jmp
lea
je
cmp
stc
cmp
pushf
lea
je
pusha
push
pushf
push
lea
jmp
cmp
pusha
bt
neg
jmp
mov
pusha
pusha
pushf
mov
pushf
lea
je
call
push
movw
pushl
mov
pushf
pushf
pusha
lea
jmp
clc
or
push
jmp
movsl
and
xor
roll
fsubrs
dec
jo
pop
fst
fldl
addr16
pop
or
or
addr16
loope
xchg
and
mov
sbb
add
sbb
pop
inc
fsubl
in
add
addb
dec
or
mov
mov
repz
jbe
dec
and
lcall
das
mov
in
sub
sub
repnz
adc
fld1
aam
lods
and
jmp
mov
push
pushl
call
lea
je
shl
add
shl
mov
sub
sar
jae
and
shr
neg
mov
btc
add
movzbw
ror
add
movzbw
setbe
adc
bswap
mov
test
stc
shr
cmc
jmp
call
cmp
aaa
repnz
call
ret
xlat
test
lahf
fsubrs
out
sti
mov
das
mov
cmp
sub
jg
mov
jnp
adc
or
shlb
lods
mov
outsl
inc
test
cmpsl
call
add
mov
push
sbb
popa
shl
jmp
fs
jne
cmc
bswap
mov
btc
shr
sub
add
sbb
and
ror
mov
pusha
movb
mov
push
sub
push
bt
test
jmp
push
lea
jne
inc
stc
cwtl
xor
movsbw
test
mov
setge
add
inc
push
pusha
and
mov
call
out
push
das
xchg
fwait
in
jl
pushl
sub
shrb
mov
sti
lret
adc
inc
ret
inc
flds
das
pop
das
out
stos
dec
jnp
inc
loop
inc
mov
push
fidivs
pop
fidivs
mov
aam
add
sub
test
div
decl
mov
pushf
jmp
pushf
jmp
jmp
add
push
pusha
pushf
pushl
lea
jmp
pushf
pushl
add
test
test
mov
test
push
lea
jno
jne
pushf
jmp
movl
pushl
lea
jmp
pushf
movb
pusha
mov
lea
pusha
lea
call
jmp
movl
pop
pushf
lea
pusha
movl
pushf
jmp
movl
pushf
mov
pushf
pushl
ret
bswap
movsbw
mov
test
sub
pushf
rep
movsbl
push
call
es
jo
pop
arpl
ljmp
mov
hlt
and
call
stc
pop
in
pop
or
jb
stos
and
cmc
shr
cmpsl
dec
nop
mov
adc
or
mov
mov
jp
cmp
outsl
and
xor
sbb
adc
cmpsb
xchg
mov
testb
push
cmpsl
lret
xor
stos
pop
mov
mov
jge
out
inc
inc
std
and
aas
stos
dec
scas
addr16
xchg
data16
lods
loopne
dec
add
mov
mov
push
adc
mov
lods
jo
inc
push
pop
ds
out
mov
mov
lret
mov
int3
lret
insb
mov
xor
fsubs
xchg
push
outsl
gs
xchg
clc
scas
bound
and
pushw
lret
mov
xchg
push
add
and
call
out
dec
bsr
mov
test
push
or
movw
pusha
call
clc
js
add
lods
jo
pop
negl
or
adc
inc
je
pop
enter
pop
fnstsw
lds
mov
aaa
inc
aas
shlb
push
test
je
cltd
gs
ss
sbb
mov
stos
pop
repnz
xchg
or
call
subb
aad
pop
dec
inc
mov
sti
pop
xchg
pop
sbb
adc
divl
leave
jne
mov
imulb
xchg
cli
lret
cwtl
sti
dec
negb
int3
jp
jns
xchg
sub
imul
shr
adc
xorl
mov
inc
fisttpll
xchg
cli
lret
and
dec
and
ficomps
mov
pop
or
and
xchg
enter
aam
into
pushf
fmull
lcall
int3
jno
lahf
jo
lods
mov
cld
addl
jno
mov
jge
mov
mov
dec
out
enter
add
push
push
mov
ret
cwtl
imul
scas
andl
fsubl
pop
xchg
adc
insb
adc
mov
pushf
push
mov
cmpsb
xchg
mov
lods
ret
jae
outsb
xlat
jmp
idivl
es
cs
pop
jmp
push
xchg
push
mov
add
sbb
lea
xchg
jle
andb
shlb
stc
sub
ljmp
jge
mov
in
pop
aaa
sbb
mov
xchg
ljmp
or
pusha
inc
aaa
cmp
adc
fistl
inc
xchg
enter
mov
idivl
and
jmp
push
adc
xchg
icebp
andl
xchg
cmp
popa
js
or
add
loope
push
xchg
or
or
push
inc
xchg
shl
iret
sbb
arpl
push
and
repnz
stos
jg
mov
clc
mov
inc
add
adc
repnz
loopne
cpuid
gs
cmpsl
std
push
xor
jmp
aaa
stos
ret
add
test
sbbb
pop
inc
fnstenv
fmuls
push
xchg
mov
and
es
iret
scas
imul
fildll
int3
mov
jp
pop
cltd
in
jmp
sbb
mov
add
inc
jl
pop
push
movsl
cld
repnz
adc
popf
fucomip
aam
shlb
push
mov
pushf
call
ja
mov
pop
mov
pop
out
sahf
mov
jge
jle
xchg
rcl
in
push
dec
add
jecxz
test
sbb
cmp
sbb
insb
sub
mov
xchg
popa
mov
jae
push
xchg
xchg
mov
stos
fnsave
push
scas
imul
out
divb
imul
data16
pop
push
push
loop
push
je
leave
lcall
push
rorb
adc
or
mov
sarb
jmp
inc
jnp
inc
cmpsb
pop
insb
mov
sahf
fmulp
push
cs
push
mov
filds
and
test
es
insb
dec
fstpt
ret
ss
pop
gs
pop
arpl
popf
addr16
sbb
push
movsb
ret
xor
aas
jno
aad
or
sar
sti
cmp
movsb
and
push
push
mov
mov
mov
idiv
jmp
mov
jmp
call
pop
test
push
pop
outsb
fists
push
and
mov
cmpsl
xor
push
add
call
fcompl
dec
add
add
jo
xchg
fdivrl
jmp
dec
adc
lcall
lea
mov
imul
mov
push
pop
scas
shll
js
mov
xchg
sub
cmpsb
jp
jno
mov
icebp
sbb
inc
jb
enter
aam
aad
out
jmp
aam
test
mov
bt
cmc
stc
or
mov
pushf
jmp
jmp
dec
sbb
pop
or
in
pop
pop
test
mov
repz
sbb
push
stc
jl
sbb
fstps
into
fpatan
addr16
xor
mov
js
dec
mov
lock
fisubl
out
dec
popf
repz
pop
mov
imul
dec
adc
test
xchg
test
jb
aas
xchg
daa
pop
xchg
cmpsb
jns
fstpt
add
fs
xchg
icebp
push
int
daa
inc
push
test
aam
insl
popa
loopne
dec
jmp
jmp
scas
lods
jp
dec
cmp
out
xorl
dec
jecxz
sbb
jmp
aas
iret
pop
jecxz
jmp
push
iret
xor
xchg
call
loop
xchg
in
xor
fsubs
pop
cmpsb
jecxz
add
sub
xor
call
stos
lahf
adc
inc
push
call
sbb
out
cmp
cmc
jmp
push
and
es
out
ljmp
andb
xchg
mov
inc
jns
mull
les
fadds
push
dec
mov
jge
popf
jns
popa
push
arpl
movsb
clc
or
scas
out
sahf
es
sbb
pushf
mov
add
cmp
mov
call
rcrl
mov
pushf
pushf
movw
lea
call
pushf
pushf
movw
push
adc
pushf
lea
jae
jmp
call
add
test
clc
pushl
call
call
add
inc
gs
outsl
fs
gs
imul
add
test
idiv
lea
call
clc
sub
jmp
jmp
pushf
pushf
lea
call
push
pushl
movb
lea
jne
lea
lahf
mov
pusha
lea
jmp
pusha
pushf
mov
adc
pusha
push
push
pushf
lea
jmp
lea
jne
bsr
rol
jmp
pushl
movl
pushf
movb
push
pushl
popl
movl
pushl
ret
mov
push
rcrl
push
in
fldcw
mov
add
inc
adc
xor
pop
adc
push
imul
loope
and
lahf
and
xchg
cwtl
lods
lock
test
mov
mov
dec
jmp
mov
or
dec
lods
and
jg
lods
xor
push
mov
or
cmc
insb
xorb
push
or
call
cmp
mov
lea
ja
pusha
cmc
call
shl
call
cmp
push
pusha
lea
ja
call
add
add
pop
add
add
add
add
add
add
add
adc
add
adc
add
pop
add
add
add
add
adc
add
and
andl
xchg
and
mov
sbb
mov
mov
push
xchg
sub
mov
hlt
rcl
xchg
sarl
dec
outsl
inc
leave
lea
cmpb
sub
insl
movsl
sub
stc
cld
cmp
xchg
xchg
lea
jae
or
fstps
je
jecxz
sub
imul
and
nop
test
and
test
push
jmp
cld
cs
addr16
adc
lret
cmp
lods
or
hlt
push
andl
outsb
xor
mov
std
fcom
add
cmc
lods
ror
xorb
lcall
enter
dec
mov
adc
ja
or
sbb
je
js
repz
shl
clc
addr16
pop
inc
pusha
shlb
cmp
sti
test
ds
imul
inc
mov
ja
xchg
loop
xchg
and
sbb
in
cmp
neg
out
xor
loopne
cmpl
hlt
mov
test
jne
xor
dec
popf
lahf
xchg
decb
fildll
mov
lret
pop
push
je
rclb
mov
push
test
or
cmp
adc
dec
insl
push
insb
mov
xchg
scas
test
mov
daa
loopne
out
pop
mov
dec
mov
and
mov
mov
and
sbb
into
push
xor
mov
cmpsb
xor
hlt
jle
mov
rolb
cmc
cmpsb
xchg
addr16
outsb
lods
pop
mov
mov
les
rcl
fnstsw
adc
inc
pusha
imul
push
lea
in
ljmp
jno
dec
jmp
pop
mov
cmpsb
lods
aaa
fmull
or
leave
scas
insb
mov
jp
insl
pop
or
in
pop
or
outsb
mov
and
xchg
adc
out
jg
fnsave
dec
jo
clc
push
or
stos
arpl
in
inc
cmp
mov
pop
arpl
call
inc
movsl
dec
mov
dec
aaa
out
adc
fs
orl
loop
repnz
test
mov
and
adc
pop
loopne
popf
ret
test
dec
subb
sbb
push
sbbl
xor
inc
jg
aas
rcrl
stos
adc
nop
ret
das
ficompl
jecxz
out
std
mov
push
cwtl
push
rcll
inc
ss
and
mov
xchg
xor
stc
jmp
fld
sarl
jg
outsb
mov
shl
inc
add
dec
and
or
imul
mov
add
icebp
mov
cmp
loopne
xchg
insb
ds
push
xchg
popf
xchg
add
arpl
ret
xchg
es
push
and
outsb
int
lock
jmp
or
aas
mov
and
or
xor
hlt
loopne
aam
inc
lret
sbb
imul
and
xor
leave
ds
mov
sbb
jno
pop
mov
les
icebp
pop
andb
int3
push
cmpl
daa
movzbl
ja
imul
std
flds
sbb
scas
neg
sbb
xchg
sahf
cs
stc
pop
sbb
outsl
xchg
mov
push
xor
adc
jmp
loop
icebp
iret
repnz
popf
mov
adc
data16
fbld
dec
stc
imul
test
adc
pop
imul
add
cwtl
lret
movsb
pop
rcrb
push
inc
cmp
mov
test
test
orb
in
out
stos
sub
shl
mov
ljmp
cld
mov
rcll
scas
mov
sub
mov
icebp
mov
jb
and
lret
pop
leave
imul
sti
mov
inc
push
mov
inc
sar
mov
mov
or
sbb
fwait
fwait
cli
adc
mov
jl
outsl
jo
pusha
pop
and
in
pop
mov
gs
scas
out
ret
push
dec
mov
adc
inc
cmp
mov
sub
sti
jle
pop
xchg
clc
cmp
mov
test
test
mov
in
rolb
pop
sub
mov
pop
adcb
movsl
movsl
inc
js
xchg
in
sbb
cmc
cmp
pop
pop
push
js
adc
data16
mov
and
cltd
fadds
cltd
jmp
dec
orb
mov
add
fisubs
adc
and
pushl
xor
in
fisubl
xor
shl
in
lds
cmp
mov
seto
cmpsb
and
in
js
jne
xor
add
cmp
xor
mov
out
icebp
dec
add
jg
sub
sbb
stos
jne
call
movsb
xchg
test
rolb
sub
stos
stos
mov
jb
xchg
push
fcmovnbe
push
sbb
das
mov
or
insb
add
inc
add
les
pop
sbb
in
pusha
aaa
xchg
outsl
mov
xchg
ss
shlb
aas
or
addr16
fwait
cmp
shll
sar
cli
mov
jl
lods
inc
fcmovnb
jae
adc
mov
repnz
loop
fnstsw
sbb
into
push
sbb
sbb
cmpb
push
xchg
sub
xchg
pop
or
in
test
shl
adc
mov
cmp
or
push
out
push
inc
and
jns
xor
adc
and
sbb
sbb
fwait
cmp
call
adc
faddl
cmp
xlat
aaa
pushf
gs
and
mov
in
vphaddbw
popf
popa
fcom
cmpsb
jns
fucomi
in
aaa
cmc
in
adc
lods
mov
test
xchg
cmp
pop
push
mov
or
lods
repnz
jno
sbb
js
fimuls
mov
cld
lods
adcb
out
xchg
jo
cmp
imul
jmp
xlat
adc
and
adc
add
stos
imul
imul
loopne
sub
xchg
jo
xchg
cmp
dec
push
xor
inc
stc
jecxz
jl
dec
adc
lods
addl
iret
rcll
cltd
mov
sbb
lret
or
xlat
imul
cmp
cmp
ret
jmp
daa
jge
or
lds
adc
ljmp
push
push
leave
mov
cli
insl
nop
insb
or
jno
or
and
mov
loope
cli
pop
adc
pop
mov
inc
mov
hlt
jmp
inc
pop
std
nop
cmpsl
test
inc
push
int3
in
mov
mov
ljmp
fmuls
ficomps
or
cmp
test
les
imul
loop
xchg
jo
mov
out
gs
cmp
divb
sub
jb
test
xor
pop
and
inc
cld
xchg
aam
ret
xlat
jns
mov
or
data16
dec
jg
or
pop
fists
mov
fstpt
cmp
cmc
cmpsl
aad
push
push
imull
push
movsl
lret
mov
push
push
test
sbb
push
mov
dec
nop
sbb
shlb
sub
xor
movsb
xchg
ret
jb
cltd
arpl
or
mov
stos
in
dec
mov
xchg
pop
mov
repnz
xor
movsl
mov
je
movl
addr16
lea
push
test
adc
lods
out
add
adc
mov
push
das
cmp
sbb
rclb
cmc
outsb
cmp
or
mov
sahf
repz
and
shrb
aam
xor
mov
in
push
nop
aam
fucom
and
hlt
mov
adc
outsl
loope
sub
je
sub
and
mov
jb
sahf
cltd
push
ret
jno
inc
pop
sub
or
or
pop
aad
fucomp
push
mov
outsl
inc
mov
mov
jne
insl
pop
xchg
adc
lcall
sub
push
jecxz
inc
sti
and
mull
pop
shll
jae
inc
mov
lock
or
and
cmpsl
aad
mov
mov
xor
aas
nop
pop
scas
adc
sbb
leave
daa
jge
ss
push
adc
roll
mov
adc
test
jmp
lcall
call
push
ds
cmc
std
dec
inc
push
mov
into
call
cmp
push
jg
cmp
leave
cltd
test
addb
out
jmp
inc
shll
sbb
sbb
and
pop
jp
repnz
xchg
dec
leave
and
mull
loopne
pop
mov
pop
push
push
dec
int
shll
test
xlat
idivb
adc
insl
fimuls
push
mov
xchg
cmp
lock
xchg
test
js
jbe
inc
int3
sub
cmp
popa
aas
xchg
stos
inc
pushf
jg
xor
cs
mov
xor
add
int
xchg
cmpsb
xlat
add
pop
push
bound
mov
pop
mov
icebp
insb
mov
insl
movsb
push
lods
xor
fwait
sbb
lea
sbbb
movsb
and
fidivs
int3
pusha
rorl
cli
or
insl
insb
sbb
stos
dec
or
cmpb
aas
enter
ret
mov
fisttpll
push
arpl
jp
ljmp
add
adc
sbb
xchg
std
cmpb
xor
lahf
cmp
xchg
adc
les
mov
sbb
pop
icebp
mov
dec
mov
xor
mov
xchg
sarl
mov
shrl
and
adc
xor
int
dec
out
call
jg
mov
lods
jb
mov
mov
inc
inc
decb
in
xchg
sub
in
mov
cmp
jg
js
jo
dec
or
and
mov
push
jp
mov
cmp
jg
cld
or
ja
roll
loopne
cmpsl
pusha
rcrb
cwtl
aam
jmp
lcall
cmp
repnz
sarb
and
jp
inc
mov
jbe
test
hlt
fistpl
fsubrl
cmp
iret
cmc
ret
cmp
pop
out
in
pop
adc
or
dec
insb
loop
sbb
dec
fdivp
mov
scas
fs
jmp
xchg
arpl
je
sub
push
lods
rol
imul
hlt
cmc
fistpl
lock
mov
inc
ret
cld
stos
sub
call
cltd
mov
je
pop
adc
push
mov
in
scas
push
lret
and
mov
imul
rcrl
push
out
sarl
nop
push
in
cli
icebp
push
dec
adc
fmulp
cltd
in
gs
or
aas
or
mov
outsb
mov
loop,pt
cmp
inc
leave
cmp
pushf
push
cli
bswap
leave
or
add
test
idiv
push
pushf
pusha
movl
jmp
mov
sub
clc
pusha
clc
cmp
cmp
pushf
lea
jbe
cmp
sbb
sub
bsf
lea
rcl
mov
shld
mov
call
push
add
jmp
push
movl
push
movl
push
pushf
pushf
lea
jmp
lea
jg
pusha
movl
push
pusha
jmp
clc
test
cmp
push
lea
je
test
bt
jmp
mov
mov
imul
les
loopne
mov
and
cmp
sti
xor
fcoml
mov
rcr
add
pop
dec
stos
jg
jl
out
add
pop
push
sbb
mov
int3
pop
loopne
lods
mov
mov
add
push
mov
jge
test
mov
mov
mov
or
xchg
popa
dec
xabort
js
sahf
repz
mov
jecxz
jl
ds
jbe
xchg
xchg
mov
clc
jns
push
mov
mov
xchg
outsb
rclb
push
mov
lds
lcall
jmp
inc
lret
rcrl
adc
add
xlat
mov
push
dec
jns
mov
fwait
jnp
daa
adc
lahf
aas
push
cmp
sahf
in
lds
push
in
push
push
cmp
lret
lret
bound
daa
cmp
in
stos
and
subl
enter
setno
adc
sub
pop
xor
jl
sbb
add
dec
lahf
xor
loop
fs
xchg
dec
push
mov
cs
push
cltd
outsl
or
inc
stos
mov
aam
jne
cmp
or
add
pushf
mov
mov
pushl
add
push
pushf
pushf
pusha
lea
jmp
mov
lea
call
pushf
call
pushl
lea
ja
cmp
sub
shrd
bsf
add
add
add
lea
pusha
mov
xor
mov
clc
repnz
pushf
call
shrb
lods
jo
fwait
nop
leave
sbb
outsb
jg
and
sahf
aas
lds
mov
add
arpl
mov
xchg
sub
shrl
jne
and
jmp
push
stos
and
bound
jge
aam
add
int3
popf
pusha
pusha
movl
call
push
movsbl
movzwl
movsbw
mov
jmp
shrd
rol
xchg
add
bsf
clc
push
sbb
movzbw
lea
mov
mov
shrd
mov
sbb
pusha
or
mov
shl
adc
sub
lea
mov
pusha
call
pushl
pushl
popl
pushf
pushl
ret
cmc
fists
fdivs
out
xor
int3
sbb
sbb
out
push
inc
std
push
jns
out
sub
shl
int
repz
test
mov
xchg
mov
push
lret
pop
xor
sbb
notb
or
pop
and
sahf
shl
sarl
sahf
add
lcall
aam
cmc
sti
addb
fcoml
popl
in
fisttpl
loopne
jecxz
sbb
fwait
lods
dec
jnp
and
inc
cwtl
scas
and
inc
call
ljmp
add
mov
jle
lret
jo
push
push
pop
xlat
xchg
lcall
pop
pop
cli
xor
add
rclb
or
cltd
fsts
jo
incb
xchg
adc
cltd
xor
cmp
shr
popf
adc
gs
cmp
mov
data16
mov
mov
dec
sahf
out
xor
out
dec
mov
lret
add
aam
int
xchg
scas
and
std
and
mov
iret
sahf
out
adc
data16
jge
lahf
push
nop
ds
fists
repz
imulb
xchg
enter
in
es
sub
andl
out
push
mov
pop
xchg
loopne
call
daa
cmp
inc
and
adc
sbb
add
or
mov
cmp
mov
arpl
pop
or
idiv
jge
in
cltd
loope
dec
push
cmp
inc
sbb
call
inc
jae
add
and
mov
pop
adc
ss
adc
or
xchg
mov
mov
mov
mov
lods
sti
cld
cmp
mov
cmc
clc
arpl
jns
sahf
or
add
fistl
mov
push
fstp
sub
jne
or
and
std
pop
xor
lods
cld
jle
jg
dec
cld
sbb
and
popa
mov
cmp
arpl
jo
cltd
into
jecxz
dec
jge
aam
add
jne
rcrl
lds
inc
clc
pusha
pusha
call
jns
pushf
pusha
pushf
movl
call
lea
jne
bswap
mov
cmp
call
lods
ljmp
pop
dec
inc
imul
mov
mov
popa
add
jl
pop
sarb
xchg
push
xchg
js
mov
adc
pop
push
and
push
ja
cmovo
add
fdivr
loope
jge
stos
sub
sbb
dec
shl
shr
pop
cmp
lods
shlb
jg
sub
push
xchg
or
mov
cmova
arpl
scas
and
int
sbb
movsl
stc
cs
pop
add
xor
loopne
mov
aam
cs
push
inc
cltd
call
and
es
push
xor
mov
insl
bswap
leave
add
aam
dec
lcall
arpl
xor
and
loope
add
fidivl
ja
loopne
mov
xchg
push
and
xorb
pop
sahf
sbb
add
aad
mov
sub
imul
jecxz
jmp
cmc
test
mov
sub
push
not
cmc
pushf
push
neg
mov
lea
call
jmp
jmp
cmp
jmp
jmp
pushl
popl
mov
pushl
ret
pushf
lea
ja
pushf
jmp
lea
je
jmp
push
pusha
lea
je
push
cmc
add
clc
test
cmp
pusha
pusha
push
lea
jb
jmp
pushfw
popw
rcr
rol
shl
mov
pusha
pushl
jmp
sarl
add
adcb
inc
xor
mov
mov
inc
aas
push
inc
pop
pop
loopne
dec
mov
mov
jae
mov
mov
sti
and
cmp
movb
lcall
hlt
cld
push
ljmp
jl
jne
in
xor
cwtl
adc
sbb
xchg
ja
cmp
imul
test
mov
imul
jns
ret
ljmp
pop
imul
mov
fs
adc
xchg
push
fs
and
cli
je
inc
xchg
fisttpl
pop
xor
dec
add
mov
aam
sbb
enter
in
xchg
mov
fxch
jnp
popf
push
and
and
test
mov
neg
in
lock
sub
sub
sub
movsl
cld
in
das
pop
or
push
sub
es
ja
mov
jmp
xor
dec
pop
jo
inc
add
add
rcr
shr
pop
call
popf
rdtsc
nop
pushf
movl
call
bt
imul
push
bt
stc
add
pushl
pushf
pushf
lea
jmp
mov
jmp
call
jmp
add
movb
movb
push
movzwl
neg
bts
mov
cmc
add
call
pushl
lea
jne
clc
clc
or
mov
cmp
rol
sbb
sub
adc
shr
mov
jmp
pushl
mov
jmp
stc
cmp
jb
pusha
pusha
lea
je
pusha
pusha
lea
jmp
mov
lea
je
sar
cmp
xor
setae
test
and
ror
mov
shld
stc
pusha
mov
stc
setl
test
shr
lea
and
mov
stc
jmp
lea
jns
push
movw
inc
call
subb
ja
and
add
xchg
adc
imul
push
add
scas
and
sbb
jnp
add
idivl
clc
mov
fcoms
pop
lcall
ja
jge
aam
add
bsr
btr
lahf
mov
push
call
push
movl
mov
lea
jmp
pusha
movl
push
movl
movb
pushf
lea
jmp
lea
movsbw
pop
pushf
movsbw
mov
mov
jmp
stc
pusha
cmc
bt
or
mov
lea
jno
pushf
pusha
lea
je
pushf
or
call
neg
cmc
shld
xor
movsbw
bswap
mov
movsbw
pop
call
sub
clc
test
movb
cmp
cmp
movb
call
pushf
push
lea
ja
pushf
bt
add
cmc
or
jmp
mov
xorb
subb
outsl
xchg
insb
sub
pop
loope
xor
cmpsl
cltd
in
pop
add
push
mov
popa
ss
mov
xor
fst
push
xchg
ja
sub
leave
lea
jmp
lea
je
bt
pushf
clc
test
add
pushf
push
push
lea
jmp
push
pushf
call
not
mov
push
jmp
and
xchg
push
aas
sahf
mov
mov
push
movsl
cmc
inc
mov
pop
mov
out
imul
shll
jbe
push
inc
movsl
mov
xchg
scas
repnz
cmp
sub
les
xor
insl
dec
in
pop
or
xchg
jns
and
jmp
scas
inc
inc
dec
jmp
loope
out
adc
mov
jns
and
int
js
fisubrl
push
pop
pop
mov
adcl
stc
pop
rorb
repz
pmaddwd
mov
ret
jmp
pushf
lea
lea
jmp
mov
pushf
lea
jmp
pushf
call
call
pusha
pushf
jmp
push
call
mov
bt
stc
repnz
push
pushf
pusha
mov
lea
jne
lahf
mov
movb
setns
push
bswap
lahf
call
lea
jne
rcr
shr
lea
mov
bt
pushf
add
jmp
jmp
xchg
cmc
sub
pushl
pusha
stc
cmc
add
bt
test
movl
call
mov
call
jmp
mov
test
sub
shrd
mov
inc
adc
mov
mov
mov
jp
test
add
call
test
movb
pushf
xor
pusha
call
rcr
rcl
not
ror
mov
bt
clc
add
pusha
pusha
pushl
mov
lea
jmp
mov
movl
movb
pushl
mov
pushl
ret
pushf
mov
jmp
pushf
pushf
popl
push
pushf
mov
pushl
popl
pusha
pushf
lea
jmp
movb
dec
or
shr
test
not
add
shrd
sub
movzbl
jmp
ror
push
dec
clc
add
pushf
mov
mov
push
pushl
ret
mov
movb
cld
call
call
aaa
aam
mov
rol
ror
lea
sub
mov
stc
add
pushl
pusha
call
call
pushl
popl
push
bt
mov
add
pusha
pushl
popf
mov
mov
movb
push
lea
jmp
not
call
add
pusha
push
lea
jmp
lahf
mov
pusha
mov
pusha
mov
mov
pushf
movb
push
lea
jmp
pushf
mov
dec
push
cmc
bt
add
cmc
cbtw
push
cwtl
push
jmp
call
pushf
push
pusha
mov
movw
lea
jmp
movzbl
test
cmp
jmp
call
movzbw
bswap
jmp
sub
mov
stc
add
pushf
pushf
mov
mov
pusha
mov
pushf
pushf
push
lea
jmp
pushf
mov
jmp
jg
pushf
mov
mov
pusha
pushf
movb
lea
jmp
pushf
mov
push
pushl
lea
jmp
mov
pusha
movb
jmp
not
mov
jmp
jae
test
cmp
add
pusha
pusha
mov
pushf
mov
mov
pushf
lea
jmp
mov
mov
push
lea
jmp
pushf
mov
pushl
lea
jmp
pushf
popl
movw
movb
movb
pushl
popl
push
mov
mov
pushf
lea
jmp
clc
cwtl
mov
bsr
pushf
neg
btr
mov
inc
mov
movb
test
call
pushf
pushf
mov
pusha
push
mov
pushf
mov
push
movb
mov
jmp
pushf
mov
mov
call
mov
pushf
jmp
sar
rcr
cmc
clc
mov
cmp
pusha
push
add
jmp
divl
push
call
jmp
movsbw
add
sub
movzbl
bswap
bsr
btr
movsbw
sub
shl
shr
sub
sub
ror
rcr
pushf
bts
ror
pusha
dec
shl
btc
movzbw
sub
pushf
not
bswap
movzbw
dec
dec
or
rcl
mov
cmc
add
jmp
push
pushf
pusha
push
lea
jmp
push
mov
pushf
lea
jmp
lea
mov
jmp
pushf
bt
sub
pusha
mov
dec
jmp
mov
clc
sub
pusha
dec
push
movl
push
mov
movb
pushf
push
lea
jmp
add
mov
pushl
mov
push
lea
jmp
je
bsf
adc
mov
add
mov
jmp
mov
push
lea
jmp
mov
mov
mov
lea
jmp
sbb
mov
push
mov
test
bswap
call
jmp
bts
shl
adc
call
mov
pushf
popl
jmp
stc
bsf
rcl
cbtw
mov
add
mov
pushf
bt
sub
cmp
movb
shr
pushf
call
call
push
pushf
mov
push
push
pushl
lea
jmp
pushf
call
neg
movb
pushf
rol
clc
pushf
sub
cmc
add
bt
sub
push
call
dec
sub
jbe
pusha
stc
sub
cmc
cmc
test
cmc
mov
pushl
test
call
test
pushf
neg
pusha
rol
cmc
test
stc
jmp
mov
push
dec
push
pushf
not
call
pushl
popl
movb
pushf
lea
jmp
push
call
call
pushl
dec
jmp
pushl
pushl
dec
jmp
add
add
pushf
pusha
mov
push
push
mov
lea
jmp
jmp
call
add
pushf
jmp
cmp
call
add
pushl
mov
pusha
movl
pushf
lea
jmp
dec
test
clc
add
call
add
push
cmc
stc
call
bswap
cmp
movb
stc
pushl
add
clc
call
push
jmp
cltd
bswap
push
lea
mov
lea
lahf
mov
pushf
call
pusha
mov
movl
pusha
movb
call
mov
pusha
push
mov
jmp
lea
cmp
movzbl
add
add
jmp
pushl
popl
pusha
push
lea
jmp
jmp
jmp
lea
je
pusha
call
mov
pushf
mov
pushl
popl
mov
push
push
pushf
lea
jmp
pusha
mov
movw
lea
jmp
movb
xchg
pushl
jmp
push
decl
jmp
adc
sar
shrd
mov
pushf
add
pushf
lea
jmp
sub
push
stc
call
call
aam
setge
mov
mov
btr
btr
mov
bt
pusha
not
cmp
bt
cmp
pusha
not
cmc
bt
and
push
push
movb
mov
call
cld
call
mov
sub
neg
stc
not
add
setg
setg
lea
jp
not
mov
call
pushl
mov
pushl
movb
lea
jmp
mov
pushf
movw
pushf
lea
jmp
pushl
jmp
lea
jp
pusha
mov
push
pushl
pushf
mov
jmp
pushf
pushl
rol
movl
xor
cmp
sub
movb
pushf
call
pusha
shl
pushf
sub
push
and
sar
cmc
dec
adc
mov
jmp
pusha
cmc
sub
call
not
mov
pusha
pusha
pushf
lea
jmp
jmp
pushl
push
jmp
mov
movzbw
cwtl
mov
jmp
sub
bt
cmp
shr
pushf
mov
movb
pushf
popl
pushl
mov
pushl
popl
push
lea
jmp
jmp
cmp
push
add
cmp
call
mov
movb
mov
pushl
ret
xadd
mov
btr
movzbw
mov
clc
bt
test
call
cmp
xadd
mov
push
cmp
add
pushl
mov
pusha
mov
push
movb
lea
jmp
shr
aaa
mov
sub
test
clc
mov
bt
xor
stc
rcl
mov
test
pusha
add
stc
test
push
shld
pusha
mov
jmp
pusha
mov
call
call
push
jmp
add
pushf
pusha
mov
pushf
popl
push
pushf
pushl
popl
mov
movb
pushf
push
lea
jmp
neg
bt
jmp
mov
pusha
lea
jmp
mov
pusha
lea
jmp
add
jno
pushf
movw
movw
pushf
popl
jmp
pusha
call
pushl
popl
mov
push
lea
jmp
pop
add
mov
sbb
neg
mov
call
movw
lea
pushl
mov
mov
movzbl
jmp
lea
jne
adc
shrd
cmc
clc
mov
call
test
add
pusha
call
push
movb
pusha
pushl
mov
pushl
push
lea
jmp
call
cmpl
mov
mov
call
push
push
mov
movw
lea
jmp
mov
pushl
movw
movw
pushf
lea
jmp
movsbw
pusha
mov
sbb
mov
mov
push
mov
sub
cmp
clc
shl
movb
jmp
call
pushf
call
jmp
pushf
seta
add
movzbw
movsbw
rol
call
mov
push
push
lea
jmp
jmp
mov
pusha
lea
pushf
mov
std
pop
call
call
pushl
popl
pushf
lea
jmp
pushf
push
mov
pusha
pusha
jmp
jmp
lea
jne
cmp
pusha
test
sub
call
jmp
jmp
pusha
lea
jns
pushf
mov
pushf
lea
jmp
or
cmp
clc
jmp
pushf
popl
push
pushl
popl
movb
movw
mov
lea
jmp
jmp
jbe
pusha
pushf
mov
call
mov
pushf
pushf
pusha
lea
jmp
add
call
cmc
cmp
add
pusha
mov
jmp
jmp
shr
mov
cmp
not
mov
clc
sub
push
cmp
shl
jmp
not
cbtw
mov
or
call
bsf
mov
bt
stc
jmp
clc
notl
shl
rcr
cbtw
btc
mov
pushf
call
mov
pusha
push
mov
push
lea
jmp
xchg
xchg
pushf
mov
pusha
jmp
push
call
mov
mov
pushf
push
pushl
lea
jmp
sub
call
shrd
shl
sub
add
stc
bt
rol
add
sub
btc
sar
shrd
btr
and
sar
test
sbb
mov
pusha
test
add
lea
je
pusha
pusha
pushl
mov
pushl
push
movb
lea
jmp
call
pushf
popl
push
call
cmc
xadd
sub
shrd
rdtsc
push
cmc
movb
cmc
sub
pushf
jmp
call
mov
pushf
pusha
push
push
lea
jmp
and
mov
sbb
rcr
pop
rcl
and
pop
push
pop
cltd
neg
popf
lahf
lea
pop
mov
pop
cwtl
cwtl
cltd
pop
setbe
jmp
pushl
popl
mov
pushf
pushf
lea
jmp
sar
shl
cmp
not
mov
push
push
pusha
add
movb
push
lea
jmp
cmp
stc
sub
call
shl
movzbl
mov
bt
add
pushf
pusha
pushl
movb
lea
jmp
sub
clc
clc
call
clc
rcr
mov
stc
cmc
pusha
cmp
sub
pusha
jmp
bswap
cld
lea
call
pushf
mov
pushf
lea
jmp
pushf
cmc
pushl
sub
bt
add
bt
add
call
jmp
call
clc
and
shr
adc
mov
stc
sub
stc
clc
add
push
call
pusha
pushf
call
pusha
pushf
movb
mov
jmp
movsbw
shld
add
add
shld
btr
mov
rol
push
sbb
cmp
sub
adc
shr
or
shl
neg
bswap
pusha
inc
pushf
dec
pop
movsbw
shr
neg
cmc
sub
stc
movzbl
bt
setns
mov
call
mov
pushf
test
shl
pushl
clc
pushf
shr
pushf
movb
or
stc
xor
pusha
inc
pushf
jmp
pushf
mov
mov
pushf
movw
lea
jno
pushf
pushf
pop
mov
bswap
push
push
call
sub
jmp
pushf
popl
mov
jmp
pushf
jmp
jmp
mov
push
clc
sub
push
pusha
stc
push
shr
call
push
mov
jmp
call
shr
cbtw
movzww
clc
test
xchg
jmp
call
mov
push
movsbw
mov
movw
cld
pusha
jmp
pushf
shrd
call
mov
pushf
pusha
mov
mov
pushf
lea
jmp
cpuid
cmc
pusha
sub
pushf
stc
jmp
stc
mov
lea
shld
mov
call
mov
rep
neg
sub
clc
mov
cmc
neg
shld
mov
clc
mov
jmp
jmp
bswap
mov
not
movzbw
btr
add
rcr
or
bt
xor
shld
adc
mov
call
jmp
lea
neg
ror
call
mov
mov
push
pushf
popl
call
sar
mov
cmc
sub
pushf
jmp
sub
pushf
pushf
clc
movb
add
jmp
mov
pusha
pushf
push
push
lea
jmp
pusha
push
mov
call
push
mov
mov
pusha
movw
mov
pushf
lea
jmp
call
call
pushf
pusha
movb
mov
pusha
lea
ja
pusha
mov
pusha
lea
jmp
lea
pushf
pushf
mov
mov
movsbw
bswap
lea
mov
cld
call
rcl
rol
pushf
cmp
mov
mov
mov
mov
jmp
pusha
mov
pushl
lea
jmp
aaa
dec
mov
cmp
push
add
pushf
mov
pushf
mov
pushf
pusha
movw
mov
mov
mov
push
pushl
lea
jmp
push
movb
jmp
jmp
pushl
popf
mov
lea
jmp
inc
not
xor
btc
mov
movsbw
bswap
rol
inc
mov
clc
cmc
cmc
add
jg
push
pushf
mov
push
pusha
lea
jmp
clc
clc
test
add
pusha
mov
push
lea
jmp
pushl
pusha
lea
pushl
jmp
pushf
push
sub
movb
bt
clc
movb
and
pusha
pushl
lea
jo
pushf
pushf
popl
jb
push
pushl
popl
push
lea
jmp
xchg
pushf
movl
movb
jmp
call
sub
call
and
cmc
call
test
cmp
sub
pushf
push
push
lea
jne
cmp
xor
push
jmp
mov
jmp
pushf
mov
jmp
cmp
btr
dec
shrd
mov
cmc
pushf
add
mov
pusha
lea
jmp
mov
jmp
setne
mov
cmc
mov
clc
sub
push
pushf
pushf
shl
push
jmp
call
movzbw
mov
mov
inc
bswap
bswap
movsbw
rcr
pop
rol
jmp
pusha
pushl
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
jmp
push
add
pushf
lea
jmp
push
pusha
mov
lea
lea
xchg
xchg
pushf
mov
lea
mov
push
push
movzbl
mov
jmp
jmp
pushl
pushl
jmp
call
pushf
mov
movb
pushl
pushf
push
lea
jmp
clc
mov
bt
sub
jmp
jmp
mov
mov
lea
jmp
call
not
movsbw
pop
movsbw
pop
pusha
push
pusha
mov
mov
mov
lea
mov
jmp
adc
cmc
setl
movzbl
cmc
stc
add
pushf
dec
push
pusha
pushl
jmp
push
pusha
pusha
mov
mov
movb
pushf
pushf
lea
jmp
stc
lea
neg
sar
sub
sar
mov
and
add
mov
pusha
call
pushl
pushl
popl
pushf
movb
push
lea
jmp
call
or
mov
cmc
pushf
pusha
test
add
pushl
lea
jmp
mov
pushf
lea
jmp
mov
clc
add
pusha
mov
pusha
lea
jmp
call
push
push
pushf
mov
pushf
pushl
lea
jmp
mov
movw
movl
pushf
pusha
mov
pusha
mov
pushf
pushl
ret
mov
lea
js
pushf
pushf
mov
pusha
pusha
push
pushl
lea
jmp
neg
dec
cmp
stc
mov
pushf
clc
call
setp
lea
test
cmp
pusha
lea
ja
adc
mov
sub
rol
or
lea
xor
lahf
sub
sar
cmp
lea
cmp
and
bt
cmp
add
sub
movzbl
not
js
mov
push
pushf
popl
push
cld
std
call
pushf
mov
call
call
bswap
inc
lea
movl
setg
call
movl
pushl
lea
jne
pushf
jmp
lea
jge
mov
pushf
lea
jmp
call
mov
mov
push
pushf
lea
jmp
dec
seto
not
call
jmp
jmp
pushf
pushf
pushf
popl
movb
pusha
call
pusha
pushl
pushf
popl
jmp
clc
xor
pushf
xchg
pushl
mov
pushf
add
jge
pusha
sub
pusha
pushf
call
call
jmp
pushl
cmp
pusha
mov
movw
lea
jne
btc
bsf
neg
and
xorb
push
call
pushl
lea
jl
push
rep
bswap
std
shl
ror
mov
pushf
call
sets
mov
push
pushf
pusha
mov
pushf
push
pushf
mov
lea
jmp
jmp
push
push
call
jmp
push
mov
pushf
push
call
sub
mov
cmc
sub
push
mov
movb
pushf
lea
jmp
pushf
daa
bswap
mov
inc
mov
call
push
mov
movl
pushl
movb
lea
jmp
mov
mov
pushf
movb
lea
jmp
pushl
cwtl
mov
cmc
sub
mov
mov
movb
lea
jmp
mov
cmc
clc
push
mov
cmp
add
mov
pusha
call
movzbl
pushf
jmp
pushl
popl
movb
pushf
pushf
pushl
lea
jmp
stc
mov
test
sub
mov
mov
push
pushf
pushf
lea
jmp
pusha
xadd
mov
bt
xor
clc
mov
call
pushf
popl
pushf
pushl
popl
push
lea
jmp
shl
pushf
cmc
mov
call
mov
test
mov
pushl
popf
pusha
pushl
push
pushf
lea
jmp
pushf
stc
add
pushf
pusha
mov
mov
lea
jmp
pushf
pushf
pusha
mov
push
mov
movl
lea
jmp
pusha
push
movw
call
pushl
popf
pushf
push
pushf
lea
jmp
call
mov
jmp
or
adc
or
mov
or
cmc
in
rolb
or
mov
or
or
or
shl
xorb
or
out
rorb
or
lret
and
out
inc
or
or
in
subb
or
or
out
inc
sbb
or
jg
or
jne
or
push
out
mov
ss
or
adc
out
inc
mov
call
or
jp
or
mov
or
jo
or
fs
pusha
psubsb
rol
or
out
rcrb
or
or
or
out
inc
mov
or
mov
out
sbbb
addb
shlb
or
data16
loopne
out
and
out
sub
or
sub
inc
mov
or
mov
or
push
jmp
or
out
mov
fxam
or
fsub
or
out
in
pusha
fsub
or
sub
or
xchg
out
loopne
jmp
or
jne
or
or
or
out
inc
psubsb
rcrb
or
jp
or
or
out
inc
call
out
adcb
add
out
shlb
or
mov
or
jp
or
xor
or
jmp
or
out
inc
or
call
or
lods
out
inc
sub
inc
mov
call
or
out
inc
push
jmp
or
pop
out
adcb
or
cmp
in
xorb
and
out
shlb
or
data16
loopne
out
inc
sbb
or
call
in
shrb
or
out
inc
cs
pusha
jne
or
sahf
call
or
data16
loopne
in
add
call
or
out
inc
xor
or
out
pusha
pop
out
sbbb
sbb
or
sub
or
data16
loopne
out
and
or
push
or
in
mov
jo
or
call
out
and
or
sahf
out
inc
xor
or
out
pusha
fxam
or
xchg
out
loopne
jmp
or
mov
or
mov
out
inc
or
or
jmp
or
pop
out
sbbb
or
or
mov
out
rcrb
or
pop
call
or
out
add
or
cmp
or
jo
or
push
out
and
call
or
sahf
call
or
adc
or
push
jmp
or
in
sbb
or
out
inc
xor
or
out
inc
jg
or
or
out
sbbb
sub
or
or
or
out
mov
xor
or
out
loopne
out
pusha
out
inc
or
or
push
or
out
mov
cmp
call
or
out
inc
mov
or
sub
or
fs
pusha
fs
pusha
sahf
out
inc
xor
or
in
mov
or
or
out
sbb
or
out
sbbb
adcb
mov
or
or
call
or
jmp
or
out
xorb
or
jmp
bswap
shl
mov
jmp
call
pushl
mov
push
pushf
lea
jmp
not
mov
pushf
jmp
lea
pusha
pushl
mov
cmc
or
call
mov
push
pushf
push
mov
lea
jmp
mov
pusha
pushl
call
jmp
pushf
popl
call
ror
jmp
pushf
pusha
call
pushf
push
mov
mov
mov
pushl
push
push
lea
jne
shl
mov
xor
push
mov
clc
stc
bt
and
pusha
stc
clc
cmp
mov
pushf
lea
jne
cmp
sub
xorb
lea
mov
pop
pusha
movb
lea
jmp
jmp
das
mov
rol
cmp
call
pusha
mov
mov
movb
pushf
pusha
pushl
mov
pushl
lea
jmp
pushl
popl
pushl
mov
push
lea
jmp
mov
mov
pushf
lea
jmp
pusha
pushf
pushl
popl
movb
lea
jmp
shr
mov
call
lahf
movsbw
shld
mov
stc
sub
call
shl
add
add
rcl
sub
bsr
shl
sub
mov
ror
rcl
neg
shl
bswap
add
bswap
push
pushf
dec
bsf
pushf
stc
add
mov
pushf
clc
test
jmp
pushf
not
mov
movsbw
push
not
bswap
push
bswap
bswap
bswap
not
repz
xchg
pusha
movsbw
not
pushl
popl
jmp
pushf
mov
mov
pusha
call
rep
shrd
call
clc
cmc
pushl
and
call
jmp
call
mov
pushf
lea
jmp
pushf
jmp
mov
cmc
ror
mov
push
neg
lea
je
clc
add
cmp
mov
jne
sub
pushf
dec
mov
mov
pusha
pusha
push
lea
jmp
mov
clc
not
bt
stc
not
pushf
cmc
mov
sub
jmp
call
jmp
mov
push
pushf
pushf
lea
jmp
push
mov
jmp
push
pusha
push
mov
mov
lea
jmp
mov
call
pusha
rep
shl
mov
or
mov
pushf
pushl
popf
movb
movb
lea
jmp
sub
stc
shr
cmp
movzbl
pusha
call
add
jmp
add
jmp
jmp
test
bt
jmp
push
pushf
mov
push
mov
movb
push
lea
jmp
pushf
pushf
popl
jmp
mov
mov
mov
lea
jmp
push
pusha
pusha
mov
push
movb
lea
jmp
