cmp
roll
dec
inc
jp
imul
push
adc
in
pop
push
xchg
sbb
lock
cmp
xchg
fimull
cmp
sbb
daa
add
les
call
shrb
ss
push
inc
stos
loop
dec
jmp
lods
bound
ret
add
cwtl
adc
xchg
sarb
xor
ficoms
fdivl
sub
inc
cmp
push
push
dec
test
dec
sahf
push
sbbb
lret
pop
repnz
loop
fsubp
dec
lods
mov
push
dec
scas
outsl
inc
dec
leave
inc
movsb
adc
cmc
jno
pushf
push
xor
jg
popa
and
sbb
mov
sbb
rorb
inc
xchg
popf
dec
jns
into
addr16
lcall
adc
cmp
cld
dec
xlat
push
fwait
outsl
adc
push
enter
nop
inc
mov
cmp
test
out
sub
hlt
outsl
das
jecxz
jmp
setae
movsbw
mov
bt
cmp
jo
bt
and
pushf
cmc
call
pusha
lea
call
pushf
call
xor
add
movzbw
neg
mov
ror
inc
and
mov
mov
push
jmp
call
jns
pushf
mov
lea
jb
cmc
push
cmp
pusha
cmpb
push
pushf
movw
pushf
lea
jne
sbb
mov
test
pusha
cmp
pusha
add
jmp
push
stc
repnz
pushf
pushf
lea
jne
not
lea
movsbl
movb
call
icebp
sti
jae
inc
arpl
pop
pop
ret
hlt
lahf
push
cli
cli
stos
andps
enter
imul
jb
enter
data16
in
sub
das
aas
shrb
fisubrl
and
sub
push
int3
mov
jmp
and
iret
cltd
int
test
jmp
add
pop
jnp
fsubs
add
pop
mov
imul
add
mov
add
mov
inc
imul
add
andb
dec
dec
xchg
lcall
fidivrl
lds
xchg
cld
add
inc
gs
jmp
icebp
sbb
or
aad
mov
rolb
popf
and
and
dec
mov
inc
stos
dec
les
jno
pop
repnz
loope
fisttpl
jo
push
inc
jl
jbe
xchg
in
mov
shrl
out
sub
out
add
add
xchg
popf
cmc
inc
sbb
or
xlat
out
add
in
imul
ffreep
lret
into
sti
fmulp
xor
ss
mov
pop
mov
push
adc
push
mov
fwait
or
pushf
pop
mov
repz
aas
lods
xlat
add
clc
xchg
push
jge
icebp
or
jecxz
pop
pop
gs
std
fimuls
test
fstl
pusha
jge
fstpl
dec
adc
xchg
push
add
push
mov
xor
cld
mov
testb
scas
mov
lahf
push
nop
pusha
cmp
inc
arpl
js
test
insl
dec
xchg
out
cltd
cmc
cld
sbb
je
fdiv
in
sbb
imul
jg
mov
pop
cmp
out
inc
shlb
push
das
or
test
shlb
add
jae
repz
into
adc
iret
and
push
push
jg
fildl
pusha
xchg
push
or
jno
add
mov
pop
inc
xchg
cli
jns
xlat
mov
or
fs
push
push
mov
pushl
popl
movb
pushl
mov
pushl
ret
pushf
lea
je
push
bswap
lea
lea
pushf
push
not
movzwl
pushl
push
call
pusha
or
jmp
cwtl
pusha
scas
addl
aas
scas
lods
insl
jecxz
pop
push
addr16
outsl
mov
pusha
cmp
push
push
out
adc
bound
pop
sbb
xchg
xchg
adc
add
fidivrs
repnz
cmpsl
cmpsl
test
adc
fdivl
adcl
imul
pop
fsubs
mov
jecxz
sub
fwait
push
fs
mov
xor
and
aaa
cs
stc
out
inc
out
xchg
ja
loope
in
inc
das
int3
cli
orb
adc
sbb
pop
lahf
lea
jae
lea
mov
ror
sub
setae
xchg
mov
bswap
dec
rol
mov
push
xor
push
stc
pusha
call
jae
clc
addb
xchg
push
pop
push
or
lds
mov
outsb
xchg
inc
adc
mov
add
call
loope
lods
and
test
xchg
sbb
das
adc
std
push
iret
int3
xchg
mov
jl
or
xchg
outsb
les
es
and
test
jbe
xchg
xor
addb
in
xchg
xor
ljmp
ja
mov
sub
add
push
jmp
jns
out
and
and
cli
popf
push
bound
int3
dec
add
pusha
xor
gs
andl
inc
add
xchg
jl
and
lret
push
xlat
test
push
xor
dec
xor
dec
xchg
cmp
cmpsb
jmp
push
or
gs
mov
test
jno
frstor
cltd
clc
es
out
fwait
pop
push
mov
sub
ljmp
add
xchg
mov
cmp
pushf
pushf
push
lea
not
bswap
movsbw
mov
pushf
lea
ja
jmp
pusha
cmp
push
mov
lea
jb
call
lea
jb
bt
push
cmp
movb
cmpb
jmp
jmp
jmp
jmp
push
inc
movb
pushf
pushl
lea
jmp
arpl
fimull
mov
cmpsl
pop
ss
or
daa
out
push
outsb
sub
ffreep
inc
fmuls
dec
in
test
push
jne
push
mov
cmc
push
push
and
push
jl
pop
xlat
add
pop
cmp
das
jl
sbb
bts
ror
rol
mov
bt
cmpb
pusha
pushf
pusha
mov
lea
jmp
popf
cpuid
nop
call
movb
movl
mov
pushl
popl
movw
mov
pushl
ret
lea
jle
push
lea
lahf
lea
push
jmp
push
pushl
sub
push
cmp
test
pushl
popl
pushf
movb
cmp
jmp
pushl
movl
pushf
push
mov
push
push
pushf
mov
pushl
ret
cmc
push
lea
jb
cmc
sub
pusha
call
pushf
movl
call
cmc
jmp
lea
je
pusha
call
push
data16
inc
arpl
movsb
ret
fadd
jne
sti
ret
mov
mov
std
repz
sub
xor
loop
sub
stc
ds
xor
xchg
pop
outsl
popf
nop
xchg
lea
jne
jge
add
mov
in
jno
cmpsl
js
leave
roll
pop
jbe
sbb
add
jecxz
mov
dec
les
adc
lock
jno
enter
jno
jmp
out
jg
jecxz
in
push
mov
dec
sahf
pushf
jl
push
scas
fisttpll
pop
arpl
aas
int
sub
test
xchg
mov
das
out
lret
mov
xor
pop
in
push
jnp
jbe
pop
add
ja
cmp
cs
shrl
xchg
inc
je
gs
in
stc
add
lea
jns
push
test
mov
call
bound
lods
insb
mov
leave
addr16
cmp
pop
or
lcall
jo
in
mov
mov
cmp
pushl
imul
inc
jae
pop
ja
loop
popf
out
xchg
jmp
je
or
ret
push
imul
dec
arpl
push
cmp
mov
in
test
pop
imull
or
xorw
inc
xchg
cmpsl
fwait
jne
and
lods
pop
dec
sbb
into
mov
sub
and
inc
ds
or
in
das
inc
mov
ljmp
pop
cld
jne
jnp
dec
lods
jne
sbb
jmp
mov
popf
add
comiss
add
dec
loope
mov
lret
sbb
scas
mov
dec
loop
push
mov
add
pop
inc
jmp
adc
mov
sub
pop
dec
stos
xchg
sub
repnz
pop
mov
xchg
int
adc
push
cmp
push
pop
pop
adc
fnstenv
lods
lds
rorl
lds
mov
mov
data16
sahf
dec
push
pop
in
add
add
in
daa
push
push
mov
aad
sub
rcrb
mov
int3
cmp
imul
sbb
rclb
sbb
cmp
lcall
fsubrs
movsb
cwtl
rcr
dec
mov
out
loop,pt
jbe
sub
cmp
sbb
dec
int3
push
in
mov
aam
push
cmp
add
arpl
and
fistpl
inc
rorl
repz
xchg
xor
pop
in
lds
pop
popl
pop
stos
jno
iret
aaa
or
mov
mov
sub
inc
or
mov
jbe
mov
sbb
push
movsl
into
lret
cmp
lret
jno
and
push
mov
pop
jg
les
nop
std
dec
popf
jg
ljmp
ret
mov
cmpsl
xchg
add
ss
add
mov
add
lea
jb
call
jmp
call
call
pusha
mov
lea
jne
bswap
seta
lahf
call
movsbw
rcr
bswap
mov
test
stc
cmp
pushf
jmp
push
jmp
pushf
clc
add
pusha
mov
clc
mov
jmp
call
mov
jmp
cmp
lea
jnp
pushf
pushf
lea
ja
clc
rcr
cmp
sub
rcl
shr
jmp
inc
and
add
add
and
add
xor
push
add
lock
movb
movb
call
mov
push
inc
jmp
data16
inc
arpl
cld
push
adc
lds
mov
test
in
dec
xchg
mov
fidivl
js
es
jp
push
rcl
test
lcall
jg
addr16
mov
xchg
pushf
add
xchg
pcmpgtw
shll
or
outsb
bound
pop
iret
xchg
push
lods
push
cld
stos
xor
shll
or
movsb
ljmp
cmp
xor
add
rcrb
nop
sub
pop
stos
mov
lods
rcrl
cmp
iret
push
and
push
dec
lea
jb
test
cmp
call
mov
pushf
pushl
ret
push
lea
jb
clc
push
stc
jmp
ret
movsl
movsl
mov
push
sbb
orb
adc
scas
sub
xchg
sti
cld
sbb
mov
push
icebp
cmp
and
adc
xor
dec
add
test
cmpsb
push
test
aas
cmp
mov
xor
mov
push
push
push
jg
xchg
dec
int3
xchg
mov
addr16
inc
vandps
mov
inc
add
or
lock
sbb
mov
add
mov
pop
push
and
and
and
ja
mov
mov
das
stc
test
jmp
lea
jne
add
mov
bt
bt
bt
cmc
or
pushf
lea
je
push
pop
lea
movzbl
lea
mov
movzbl
pushf
movzwl
not
lea
movsbw
pushf
mov
jmp
call
push
pushf
mov
jmp
movzbw
mov
pop
xchg
movb
xchg
mov
call
call
mov
lea
call
call
cmc
test
mov
pusha
movw
lea
je
cmc
test
cmp
pushf
sub
movb
lea
jmp
jb
lods
mov
adc
sub
in
fwait
bound
jo
ds
pop
fstl
xchg
mov
out
mov
adc
and
inc
sub
jne
adc
daa
xor
gs
push
jmp
mov
mov
pop
pop
push
in
or
xor
dec
adc
adc
std
mov
cld
pop
pop
mov
sub
jecxz
sbb
vmwrite
xor
clc
cld
inc
arpl
lret
aad
stc
jge
fldenv
mov
xlat
call
enter
push
add
cmp
cmpb
call
call
lea
jne
btc
clc
rcr
shl
sub
rcl
lahf
cwtl
btr
mov
rcr
sub
clc
shl
add
sbb
bt
stc
cmp
mov
clc
cmp
pushf
test
movw
jmp
pushf
movl
jmp
push
lea
je
not
lea
push
lea
mov
setle
lea
pop
push
not
not
not
lea
jmp
lea
jne
bsr
lea
mov
bsr
sub
rcr
rol
mov
test
sub
clc
call
mov
lea
je
pusha
pushf
lea
jmp
pushl
popl
pusha
test
pushf
mov
cmp
pusha
lea
ja
not
sub
mov
pusha
cmp
xor
lea
add
jmp
bswap
lahf
call
test
push
push
push
lea
je
push
pusha
cmp
movb
add
test
pusha
cmp
pushf
jmp
movl
pushf
pushl
popl
pushl
push
pushf
pushf
pushl
ret
pusha
call
add
inc
js
je
jb
arpl
jae
pusha
or
jmp
call
call
call
push
jmp
and
shl
pushf
call
lea
ja
jmp
repnz
push
pushf
pushf
lea
jne
adc
movzbw
mov
push
neg
jmp
mov
bt
stc
cmp
mov
call
movl
pushl
popl
pushf
push
pushf
mov
pushl
ret
or
adcl
loop
mov
jae
jne
loop
insb
inc
ret
sbb
cmc
or
mov
jl
inc
loopne
out
sbb
jno
push
gs
jnp
mov
jmpw
lods
push
cmp
xor
arpl
jl
mov
pop
jle
mov
mov
je
inc
movsb
inc
jae
or
dec
xchg
inc
arpl
and
out
xor
mov
mov
sub
xchg
and
inc
sub
jge
jl
mov
aas
mov
neg
pop
adc
inc
out
fwait
push
pusha
test
cmc
pop
movsl
mull
jge
jnp
ret
xor
shll
mov
lea
xchg
push
cmp
loope
xacquire
xchg
ret
jnp
scas
and
cmp
mov
sahf
mov
dec
rcll
aas
push
cmp
jmp
cltd
cmp
inc
pop
jbe
mov
movsl
add
test
mov
cmp
ret
add
add
pop
xchg
pop
fnstsw
aad
jmp
sub
loopne
cmp
jae
xor
sub
shll
dec
and
sub
dec
lds
cmp
mov
or
nop
addl
adc
pushf
stos
clc
into
mov
outsl
add
outsl
dec
pop
mov
inc
incl
movzbw
movsbl
pusha
pushf
mov
mov
movsbw
pushl
movzbw
lea
pushf
pushl
pushl
jmp
btc
mov
pushf
call
pushf
lea
je
mov
lea
push
movzwl
pusha
movzbw
pushf
movsbw
lea
pop
mov
mov
lea
call
call
call
lea
jne
pusha
call
lea
call
call
repnz
pusha
movw
lea
jne
jmp
xchg
xor
xchg
inc
arpl
adc
pop
or
cmc
and
pusha
loop
xchg
aam
pop
add
sub
popf
testl
jne
cld
lods
jmp
sti
mov
insb
ljmp
mov
xlat
call
aad
dec
and
movb
lea
je
push
movw
pushf
pushf
lea
jmp
shl
xor
pushf
adc
mov
rol
shr
add
inc
ror
mov
jmp
pusha
movl
pushl
lea
jmp
or
xchg
inc
arpl
rorl
addb
movsl
les
int
xor
dec
mov
popf
add
xchg
mov
push
mov
je
clc
cld
notb
cmc
mov
sub
mov
xlat
jb
sbb
call
imul
rep
call
call
cmp
pusha
lea
ja
call
movl
push
call
bt
cmp
push
call
jnp
in
inc
arpl
mov
jo
or
out
mov
xchg
mov
outsl
ljmp
je
sub
inc
nop
inc
pop
push
cmp
fxch
jnp
cmpsb
pop
pop
and
mov
inc
cmp
mov
arpl
cmpsb
rorl
inc
das
jne
xchg
aaa
sarb
pop
jnp
scas
test
sti
fs
and
mov
add
gs
inc
inc
pop
pop
or
nop
inc
arpl
cmpsl
into
xchg
sub
pop
pop
les
jnp
scas
int
repz
adc
and
and
inc
cmp
cwtl
cmp
aam
jne
cmpsl
das
aad
lods
mov
mov
es
lock
mov
dec
out
mov
inc
hlt
adc
dec
xchg
shl
movsb
inc
adc
aam
push
or
ljmp
cmpsb
ljmp
mov
jo
sbbl
fldl
ljmp
in
jge
es
adc
mov
xchg
mov
inc
and
in
jle
xor
ja
push
loopne
dec
sub
jnp
mov
fildll
testb
pusha
add
fstps
push
adc
leave
ja
mov
push
xor
test
gs
push
nop
jnp
mov
pusha
cmovs
outsl
movb
test
stc
test
movb
movb
jmp
lods
lock
and
stc
adc
jp
add
repnz
push
iret
inc
pop
test
mov
testb
jb
add
cmpsl
sbb
jmp
mov
shll
jbe
je
pop
dec
stos
je
xchg
mov
enter
add
loope
andl
fldt
mov
das
aad
sti
mov
iret
sti
inc
adc
xchg
mov
mov
xor
lret
inc
dec
aad
cli
mov
inc
adc
faddp
fiadds
stc
jmp
inc
inc
pop
pop
xor
in
cld
addl
fbld
jb
pop
sub
shl
inc
insb
sbbb
xchg
ret
addr16
loopne
pop
aaa
mov
dec
popf
mov
jnp
inc
xchg
repnz
out
test
pop
inc
sbb
scas
mov
jecxz
adc
inc
out
and
pop
ret
sahf
adc
xor
pop
add
xchg
mov
repz
dec
insl
xchg
cs
adc
and
lret
ficoms
sbb
pushf
lea
jbe
rcr
or
or
mov
mov
add
add
push
shrd
pusha
mov
mov
shr
add
shl
movl
bsf
ror
sar
lea
mov
lea
jmp
clc
add
pushl
cmp
pushf
pushf
call
mov
xchg
inc
arpl
mov
movsb
add
or
sub
or
jmp
add
mov
sti
aam
lret
fstps
aaa
je
arpl
sti
inc
inc
lret
movsb
mov
addr16
push
icebp
push
loop
inc
scas
das
ds
dec
cmp
out
into
push
mov
pop
stos
icebp
dec
stc
movsb
rcr
lret
fimuls
inc
faddl
lret
mov
xchg
mov
fsubp
xor
sbb
dec
test
fs
or
add
pushf
pusha
pusha
lea
jmp
push
or
pusha
lea
jne
sbb
bsr
setl
mov
pushf
pushl
stc
test
or
call
call
clc
or
call
mov
lea
jb
push
pusha
stc
cmc
cmp
pusha
lea
jae
bts
mov
bts
test
mov
rol
or
mov
clc
call
aaa
das
lea
clc
pusha
sub
rcl
aam
lea
bsr
push
cwtl
cmc
push
aam
not
test
push
btr
sbb
shr
push
clc
mov
clc
test
call
mov
mov
push
movb
pushf
movw
pushl
ret
mov
pushf
inc
arpl
call
fstpt
test
mov
mulb
sub
xchg
or
mov
lds
dec
aad
shrl
repnz
sbb
mov
lock
not
lea
pusha
push
mov
push
mov
push
lea
ja
jns
push
push
push
lea
jb
test
cmpb
jb
push
pushf
pushf
lea
jne
push
mov
stc
clc
pushf
movb
add
movb
pusha
cmp
movzwl
not
call
aas
fildll
pushf
inc
arpl
out
inc
pop
repnz
aam
dec
stos
pop
andl
fwait
push
mov
mov
and
adc
das
test
push
mov
and
jnp
jle
adc
xchg
mov
and
ss
icebp
xlat
cltd
es
lahf
add
push
fnstenv
add
mov
jb
pop
or
pop
xchg
push
mov
leave
adc
xor
mov
aas
insl
into
pop
lea
hlt
mov
ljmp
loope
scas
testb
out
test
lret
sub
add
imul
sbb
jnp
adc
scas
les
shr
stc
incl
aaa
popl
call
pusha
bt
stc
pusha
sub
jmp
call
movl
pusha
cmp
repnz
push
lea
jne
not
mov
inc
inc
sub
bts
rcl
mov
pushf
stc
sub
push
pusha
call
pushl
dec
cmc
bt
cld
cmc
pushw
popfw
jmp
pusha
call
lea
ja
push
jmp
cmc
cmp
jmp
movzbw
bswap
movzwl
pusha
jmp
push
lea
je
pushf
lea
ja
dec
sub
not
and
sar
sar
add
shr
shrd
bswap
mov
dec
pusha
jmp
mov
lea
jb
jmp
shld
lea
mov
cmc
pusha
shl
pusha
movw
push
call
lea
pusha
jmp
pusha
jmp
lea
lea
jb
sete
setns
pop
push
pusha
lea
ja
jns
jb
pusha
cmpb
pusha
jmp
lea
ja
push
inc
mov
dec
inc
inc
rcr
sbb
not
cmc
xchg
sub
neg
mov
mov
test
bt
mov
bt
stc
cmc
pushf
xchg
pushl
bts
dec
mov
cmc
stc
pushf
mov
sub
pusha
pushf
call
sub
movsbw
mov
push
call
jmp
jmp
movzwl
neg
mov
call
pop
push
pushf
pushf
push
pushl
ret
pop
and
inc
arpl
jl
cmp
mov
fildl
jl
xor
xchg
ljmp
xor
mov
lods
jmp
cmp
push
pop
or
call
inc
xchg
movsl
fisttpll
clc
addb
les
push
fldl
in
popa
mov
mov
inc
pop
imul
stos
ljmp
jmp
xchg
cmpsb
shl
out
and
ret
cltd
mov
mov
jnp
sbb
jns
andb
inc
rorb
adc
clc
popa
movsl
adc
loop
test
lea
lea
jge
cwtl
bswap
push
cwtl
lea
pusha
movl
pushl
pushl
pushl
popl
mov
pushl
pusha
pushf
pushl
ret
pushf
cmp
pushl
lea
jae
sar
btc
xadd
mov
btc
call
sub
pushf
pushl
pushf
lea
jmp
mov
test
mov
jmp
lea
je
pusha
push
mov
lea
jmp
sbb
mov
bt
clc
cmpb
push
pushf
pushf
lea
jmp
adc
test
rolb
xorb
cmpsl
fldenv
or
lock
ss
jmp
mov
push
dec
cwtl
pop
out
imul
aad
pop
outsb
data16
pop
cmp
sub
lret
pop
nop
sub
std
sbb
outsl
xlat
stos
sbb
in
adc
in
cmp
out
jle
sahf
aaa
rcll
jns
lea
je
call
loop
lea
repz
shlb
pop
xor
add
mov
sbb
sarl
outsb
test
stos
sarl
mov
and
das
push
fmuls
adc
adc
lret
mov
dec
out
adc
scas
test
mov
mov
cmp
movl
mov
mov
movw
pushl
ret
or
inc
fwait
inc
arpl
sbbb
clc
dec
data16
sub
xchg
rcll
lock
jae
mov
xor
icebp
adc
pop
jne
in
repz
lahf
mov
xchg
sbb
pop
pop
mov
jl
xchg
insl
test
mov
add
xor
lds
lods
jge
inc
mov
pop
pop
mov
xor
mov
outsb
sahf
add
mov
jmp
out
pop
repz
test
inc
lock
cld
imul
mov
push
sbb
add
dec
das
sbb
mov
mov
mov
js
aam
rol
ret
pushf
lea
jne
btc
sub
btr
aam
sbb
mov
inc
cmp
sbb
add
not
cmc
mov
jmp
call
pusha
imul
add
jno
cmc
add
push
lea
jmp
cmpb
pushf
push
pusha
lea
jne
movsbw
dec
push
aam
sub
inc
btc
mov
setns
mov
add
sbb
mov
bt
cmc
mov
movb
jmp
pushf
movl
pushf
pushf
movb
pushf
movl
pusha
mov
movb
pushf
lea
jmp
icebp
fcoml
test
dec
and
inc
lea
daa
xor
scas
loopne
loop
jae
mov
cmp
sbb
gs
jb
and
mov
std
lea
cmpsl
loopne
pop
cmp
notb
rol
add
add
cmp
inc
mov
dec
mov
jb
xlat
mov
outsl
lods
jecxz
icebp
rcr
xchg
mov
mov
pop
xchg
roll
jmp
movzbw
lea
pushf
pushl
sub
clc
pushf
clc
pushl
popl
test
jmp
jmp
jmp
movsbw
push
mov
lea
call
pusha
pusha
mov
push
push
lea
jmp
push
mov
pushf
mov
mov
lea
jmp
pushf
lea
jne
pusha
pushl
movsbw
mov
movb
lea
jmp
stc
call
stos
mov
sbb
fwait
and
and
pushf
sbb
inc
and
and
popf
sbb
les
and
lcall
and
and
les
sahf
and
les
aam
inc
and
pusha
movb
push
pushf
pushl
ret
pushf
push
mov
movsbl
bswap
movzbw
pushl
popl
lahf
lahf
mov
mov
not
cwtl
call
rcl
add
sub
neg
cmc
mov
cmp
test
pusha
jmp
jmp
mov
pusha
sub
cmp
pusha
cmp
repnz
jmp
movzbw
movzbw
not
push
lea
call
pusha
push
lea
ja
neg
xor
pushf
pushl
sub
call
pushf
pusha
movl
movw
pushf
call
xchg
mov
cmpsl
inc
arpl
xchg
mov
jnp
mov
into
icebp
mov
dec
xchg
fwait
scas
inc
aam
sbb
fdivl
mov
sub
test
and
push
inc
das
mov
pop
rcr
dec
imul
out
pop
lock
pop
sti
xor
loope
fsubl
mov
jne
inc
pop
divl
in
push
popa
inc
jae
mov
pop
jno
or
mov
mov
outsb
sti
popa
mov
cmp
add
test
sub
jl
into
and
mov
push
and
inc
or
xchg
daa
xchg
add
adc
je
add
inc
and
movw
push
pushl
ret
mov
lea
je
test
or
pusha
pusha
lea
je
xadd
bt
xor
aas
mov
shld
mov
sbb
shr
or
or
mov
jo
bt
stc
push
or
pushf
mov
lea
je
push
add
btr
ror
neg
movb
sub
shr
add
test
add
shr
bt
pusha
bsr
test
mov
sub
add
adc
neg
bsf
add
sub
xor
shl
sbb
mov
bt
push
shr
cmc
cmp
cmp
test
cmp
movw
call
pushl
popl
push
mov
pushl
ret
mov
or
mov
test
pusha
repnz
pushf
lea
jne
jmp
pusha
movl
movzbw
lea
cwtl
cwtl
lea
pushf
call
push
mov
lea
jne
movzbw
sbb
bsf
lea
mov
test
cmc
pusha
add
push
pusha
pushf
movzwl
btr
mov
jmp
mov
push
pushf
bswap
mov
mov
pusha
pushl
movb
movl
pushl
ret
lea
movl
jmp
pushf
movsbw
movb
bswap
mov
not
mov
pusha
lea
pusha
pushf
movw
jmp
jmp
cmc
cmpb
push
pusha
pushl
lea
jne
call
add
pushf
mov
lea
jmp
or
lret
mov
dec
in
pushf
repz
scas
test
xchg
cltd
ljmp
xchg
das
das
jmp
sbb
sub
pop
leave
xor
cmpb
loope
insl
push
jno
sub
movsl
mov
lea
push
xor
pop
lcall
jmp
mov
imul
dec
cmpsb
sub
inc
int
test
leave
mov
movsb
leave
inc
movsl
inc
imul
addl
cwtl
cwtl
mov
lea
push
push
movl
mov
jmp
pusha
pusha
call
pushf
mov
bswap
movzbl
jmp
jmp
ror
neg
jmp
push
not
push
shrd
push
pushf
bt
adc
mov
or
ror
lea
rol
mov
or
pushl
sub
mov
add
inc
sub
lea
not
lods
mov
shl
add
or
call
stc
jno
mov
outsl
std
sbb
lcall
mov
lods
aam
dec
test
jle
clc
xchg
or
ljmp
xchg
addb
sub
fcompl
add
jbe
and
jae
scas
mov
and
in
jmp
insb
pop
iret
enter
aas
ljmp
das
push
add
addr16
js
add
jge
mov
lock
roll
adc
pop
mov
sbb
or
xchg
xchg
mov
pop
pop
bnd
movb
js
cli
insl
cmp
adc
mov
sub
adc
fisubrs
repz
int3
pop
xor
rorl
mov
out
sub
cmpsl
repnz
icebp
ljmp
sub
mov
jl
xor
mov
sub
mov
xor
mov
cmp
xor
popl
jb
adc
imul
pop
sbb
pop
inc
jns
loope
or
mov
inc
mov
in
pop
leave
rcr
pop
mov
xchg
repz
bnd
sbb
icebp
jecxz
gs
stos
xchg
loope
and
sub
and
insb
mov
mov
mov
pop
sbb
jne
scas
mul
sti
jle
adc
mov
mov
mov
jge
andl
daa
pop
pop
add
sub
lds
pusha
shll
jmp
fs
jne
aad
aad
pusha
shld
sub
setle
sub
btc
pusha
mov
stc
or
shl
shl
add
bt
sub
mov
stc
jmp
cmpb
pusha
pushl
movb
lea
jne
test
rol
ror
shrd
sub
not
not
setl
bswap
mov
pusha
lea
jmp
pusha
pusha
push
mov
pusha
pushf
pusha
pushf
mov
mov
movb
mov
pushl
pushl
ret
not
mov
sar
inc
stc
sub
sub
pushf
lea
pusha
movl
cmp
sub
movb
pushf
mov
clc
pushl
popl
pushf
cmp
pushf
pushf
pushl
lea
ja
setbe
sub
sbb
dec
sub
shl
adc
xor
add
not
mov
or
mov
clc
cmp
pushf
clc
repnz
pusha
jmp
jmp
pop
nop
sahf
lods
inc
arpl
imul
xor
fstpl
cmc
daa
loope
testb
addb
inc
jbe
pop
fnsave
imul
pop
test
imul
xchg
mov
sub
test
adc
fildl
arpl
subl
daa
nop
ret
mov
pop
ror
adc
aaa
dec
add
lahf
movb
movsbw
lahf
push
mov
not
call
mov
bt
cmc
mov
add
cmc
clc
movzwl
dec
mov
test
jmp
movl
pusha
lea
jmp
mov
lea
jmp
add
setg
sbb
shl
mov
rcl
shl
adc
add
mov
bt
repnz
push
pusha
call
pusha
movl
pushf
lea
jmp
stc
cmc
cmc
call
aaa
xchg
lods
inc
arpl
push
lret
aas
mov
movsb
insb
stos
jb
rorl
adc
fnsave
mov
insb
lahf
int3
sub
pop
sbb
fisubl
scas
pop
jnp
daa
movsb
jp
dec
mov
xchg
pop
or
and
scas
jmp
ljmp
push
xchg
and
ret
add
xchg
adc
dec
xchg
cld
sbb
dec
outsb
sub
sub
daa
jge
xor
pop
popf
push
jg
push
sub
mov
mov
xor
aam
add
sub
aas
pusha
ficomps
aaa
mov
imul
lock
ret
cmp
bswap
and
dec
insl
inc
je
jnp
aad
stos
pop
jns
shl
mov
push
pushl
repnz
call
inc
leave
push
scas
inc
arpl
loopne
lea
inc
imul
mov
cwtl
negb
add
jg
cmp
aas
sub
adc
pop
sub
jl
and
ljmp
dec
sbb
es
adc
pop
jbe
mov
sbb
gs
out
and
jne
cmp
daa
mov
sti
sub
clc
mov
add
add
push
push
xchg
ret
imul
imul
cltd
mov
popa
jmp
fwait
mov
push
mov
jns
push
test
js
nop
inc
out
sarl
imul
rcrl
ja
out
cwtl
cmp
ret
iret
sbbl
push
test
mov
adc
mov
mov
imul
lea
mov
cld
push
dec
imul
mov
or
push
adc
shll
adc
subl
sub
push
push
pop
notl
add
cmp
out
add
ss
lret
mov
xchg
stos
cli
and
in
bound
mov
push
dec
in
shl
and
mov
xchg
push
and
jl
push
cmp
pop
ja
cmp
incl
jecxz
imul
or
mov
inc
or
inc
and
jae
enter
jmp
ret
xchg
pop
popf
xchg
and
aaa
pop
jmp
xchg
cwtl
mov
scas
xchg
add
jecxz
sub
mov
xsha256
cmpsb
shll
xchg
jno
mov
movlps
jmp
lea
jbe
or
cmc
shr
sub
shl
mov
test
rol
mov
rol
xadd
push
add
bt
mov
shr
call
pushf
not
jmp
fimull
test
inc
jl
sub
inc
out
jmp
inc
mov
xlat
inc
dec
xchg
push
mov
lods
gs
mov
scas
aad
pop
cmp
sub
mov
push
idivl
out
inc
pusha
pop
pop
fdivs
cli
xchg
je
sbbl
mov
xchg
mov
jmp
cmpsl
ficompl
dec
das
in
lods
and
ret
mov
lock
sub
push
imul
dec
cld
ret
dec
cmp
jno
xor
hlt
sbb
sub
adc
add
inc
imul
fadds
add
adc
add
lcall
pop
jecxz
jmp
pushf
pushf
pusha
pushf
movl
jmp
shl
test
adc
mov
pushf
pushf
bt
mov
cmpb
movb
mov
pushf
lea
jne
bt
xor
cwtl
movsbw
mov
pusha
lea
jmp
stc
sbb
test
arpl
push
lods
pop
mov
xchg
mov
or
fcmovb
cmp
jl
lea
decb
cli
and
stos
cmpb
pushf
je
sub
dec
mov
in
mov
insb
mov
mov
push
add
adc
mov
mov
and
aam
pop
push
dec
add
lcall
cld
cmpsb
jp
mov
mov
rcrl
jecxz
inc
xchg
fs
add
out
fnstsw
inc
aad
mov
push
das
jmp
jne
pusha
call
lods
and
mov
or
jo
pop
js
dec
xchg
xor
xlat
fdivr
sbb
pop
mov
movsl
aam
ds
cmp
shll
xchg
stc
in
test
cmp
inc
push
dec
aad
mov
or
stos
adcl
xor
mov
stos
add
inc
push
add
mov
add
xchg
movsb
popa
test
mov
inc
in
in
mov
xchg
ret
js
xor
sub
pop
cmp
bt
or
pushf
jmp
push
ds
stos
inc
arpl
sti
add
lret
hlt
pushl
xchg
pushf
aam
ret
push
mov
out
pop
and
jno
es
mov
sub
push
push
pop
jle
mov
das
push
stc
lahf
bnd
repnz
ljmp
adcl
js
test
mov
jecxz
aad
test
jle
xor
int3
lret
xor
lret
inc
jp
mov
mov
lea
jae
push
bt
pushf
bt
xor
pushl
jmp
movzbl
pushf
lea
pusha
push
movl
mov
movb
jmp
fidivs
lret
fstl
xchg
sub
add
fisubrs
stc
adc
push
adc
and
inc
imul
mov
in
mov
xor
xlat
cmp
rorl
int3
xor
mov
std
and
ja
mov
arpl
cmpl
inc
ret
mov
pop
int
pop
mov
mov
cmc
arpl
mov
mov
movb
call
lea
je
call
pushf
call
pushf
movl
pushl
call
pusha
pushl
pushf
lea
ja
call
clc
call
pusha
lea
not
movzwl
movzbl
lea
pop
mov
pushf
lea
call
pushf
lea
jne
call
or
arpl
stos
stos
stc
jno
jle
shrl
pop
pushf
cmpsb
test
pop
push
cltd
adcb
cmpb
out
js
xchg
inc
repnz
rclb
sub
sub
jns
lret
mov
ret
xlat
aam
cmp
or
in
cmpb
scas
jb
mov
mov
pop
add
cmp
test
test
into
mov
jnp
pop
push
das
push
push
mov
shll
test
mov
hlt
mov
sub
icebp
in
lods
mov
dec
loope
fcompl
inc
inc
xlat
gs
lret
and
add
mov
xlat
jbe
rorb
loope
push
les
lock
adc
loope
and
jmp
jmp
jmp
movb
jmp
pusha
add
movb
push
pushl
push
lea
jmp
pushf
imul
call
pushf
mov
jmp
call
addr16
mov
arpl
sub
mov
mov
xchg
fwait
jb
loopne
ret
push
adc
push
cmp
inc
add
jmp
enter
les
pop
sarl
fadds
stos
jbe
cmp
repz
adc
shll
inc
add
ret
scas
push
rcrb
lret
pop
inc
inc
imul
mov
mov
insb
push
xchg
xchg
mov
out
std
insb
mov
aam
nop
ljmp
sub
cmp
call
mov
mov
movw
pushl
ret
aas
and
inc
arpl
pop
ss
adc
xchg
add
popa
test
mov
or
shrb
lods
in
sub
or
scas
adc
arpl
cltd
cmc
push
shll
mov
fsubs
mov
cmc
mov
fldl
adc
pushf
mov
inc
arpl
mov
adc
sar
imulb
mov
push
shll
pop
xor
aam
xor
test
daa
adc
mov
add
lods
fidivrs
jae
xchg
imul
mov
outsb
mov
adcl
test
repz
inc
add
mov
arpl
mov
or
sbb
rcr
jno
jae
cld
mov
sub
repz
icebp
scas
pop
and
loopne
lds
mov
mov
pop
cld
adc
stc
pusha
dec
pop
fs
xchg
data16
jae
aam
out
xor
inc
arpl
shrl
push
push
jle
js
cmp
cltd
test
push
bound
xchg
mov
jg
rolb
addb
inc
xchg
sub
hlt
mull
dec
push
jmp
mov
cmp
xor
pop
ret
mov
stos
push
into
or
pusha
scas
int3
sti
test
mov
test
addr16
sub
add
lock
pushl
ret
lea
ja
rcl
shr
not
pusha
sub
bt
btr
shl
cmp
add
add
neg
bts
cmp
cmc
mov
rcr
mov
cmp
pushf
repnz
call
pushf
pushf
lea
jae
not
push
pushl
pusha
dec
mov
stc
call
scas
pop
adc
pushl
dec
jmp
fdivl
sub
fs
or
jecxz
pop
and
add
out
pop
popf
pushf
arpl
and
inc
push
mov
loope
lea
loop
push
daa
pop
mov
adc
jns
mov
mov
outsl
int3
lret
adc
cmp
mov
repnz
addr16
gs
add
mov
inc
add
lret
fs
arpl
pop
jp
stos
mov
jp
xchg
add
mov
mov
test
shll
roll
sub
dec
cmpsl
sbb
cltd
or
add
sbb
aam
fmul
daa
cmp
clc
cmp
jmp
add
call
pop
lock
arpl
push
rcrb
pop
mov
fimuls
push
mov
mov
out
fwait
push
mov
paddw
sbb
sar
or
xor
or
insl
sub
ja
inc
sarl
sbb
xchg
or
ret
icebp
cwtl
in
cmp
xorl
sbb
add
inc
push
es
jg
jmp
jmp
jecxz
xorb
push
repnz
or
orb
faddp
dec
test
sbb
test
pop
into
mov
idivl
mov
pop
outsb
sbb
mov
stc
es
nop
jnp
xor
mov
sbb
sbb
loopne
fs
insl
xor
es
pop
xchg
mov
or
fs
lea
je
stc
pushf
movl
add
cmc
call
call
shr
pusha
mov
test
movl
call
adc
pusha
movb
lea
call
pushf
pushl
movb
pushf
lea
jb
pushf
push
movb
pushl
ret
out
je
inc
arpl
aad
mov
cwtl
push
push
rorb
mov
jne
mov
fs
mov
int
adc
jns
mov
inc
mulb
stos
fdivp
sub
lret
call
fs
fcmovne
or
dec
push
add
xchg
cs
sub
outsb
mov
ja
jo
adc
mov
adc
cmc
leave
pop
xchg
jnp
out
sbb
push
pushl
call
lea
jae
cmc
pusha
cmp
call
movl
call
jmp
pushf
pusha
pusha
movl
pushf
movl
movb
movl
lea
jmp
out
stc
mov
arpl
out
ja
aad
repnz
aas
pop
dec
xchg
pop
cs
cld
sbb
dec
or
jp
lock
jb
out
sub
adc
push
test
xlat
sbb
movl
movw
jmp
movl
jmp
call
test
sub
bt
pusha
pushl
popl
test
jmp
neg
mov
push
jmp
lea
jb
call
cmpb
call
lea
jne
movsbl
adc
sub
shl
cmc
shrd
mov
ror
not
rcl
add
call
mov
movl
mov
movw
lea
jmp
je
pusha
lea
jmp
xchg
test
xchg
mov
and
xchg
mov
pop
out
loope
out
in
jp
mov
ret
clc
xchg
aam
jp
mov
sbb
xchg
cmp
je
test
call
mov
push
xor
mov
adc
mov
xor
add
push
cmp
movzbw
rcr
stc
push
test
not
ror
push
bts
or
push
rol
and
inc
btr
push
mov
ror
mov
xchg
or
mov
not
test
mov
test
cmp
test
or
call
pushf
pushl
popl
cmp
test
push
pushl
cmp
push
lea
ja
adc
cmc
cmc
sub
seta
not
add
shrd
bsf
mov
dec
test
mov
test
repnz
pushf
call
pusha
lea
je
shl
bsr
adc
add
sub
bswap
sub
bswap
neg
dec
call
pusha
lea
je
bswap
not
pusha
setno
mov
call
pushf
call
dec
sbb
inc
arpl
pop
fwait
rcrb
div
dec
rcll
xchg
lods
inc
aam
cld
sbb
es
sbb
xchg
cs
xchg
repz
fisttpl
loopne
push
push
push
icebp
fildl
or
sbb
clc
mov
shrl
push
test
and
dec
out
push
int3
pop
imul
lock
adc
jle
sub
add
mov
pop
fwait
out
stc
mov
orb
nop
adc
cmp
hlt
jbe
jb
movsb
mov
movsl
iret
bnd
push
iret
pusha
cwtl
movb
pushf
pop
setg
pushf
mov
cwtl
pop
push
cwtl
lea
mov
call
pusha
lea
jae
sete
bsr
dec
mov
xor
xor
sub
bsf
mov
dec
shld
mov
call
movsbw
pop
push
mov
pushf
jmp
call
pusha
jmp
push
mov
pushf
pushl
ret
add
bt
test
clc
pusha
mov
clc
movb
cmp
test
call
mov
lea
jbe
pusha
movw
movw
xchg
movzbl
mov
setl
lea
pushf
pusha
mov
xchg
lea
jno
push
pusha
movl
lahf
cwtl
push
mov
lea
pusha
jmp
shl
movzbw
mov
test
sub
clc
pushl
jmp
mov
arpl
and
fistpll
xor
pop
ds
xor
mov
jo
mov
or
aad
inc
std
inc
dec
loopne
fsubl
and
mov
sub
call
xchg
xlat
jle
movl
pushl
lea
jmp
call
cmpb
push
pushf
pushf
lea
jne
call
sub
mov
data16
stos
pop
mov
or
dec
push
dec
xchg
pop
rcr
jae
cld
sbb
adc
lea
mov
xchg
loopne
cmp
push
adc
jecxz
lock
inc
icebp
sti
lds
rclb
jmp
or
mov
sbb
ds
imul
sbb
je
scas
cld
cwtl
cli
js
cmpsl
push
leave
pop
ss
daa
jle
sti
lret
das
sbb
add
nop
mov
mov
pop
xor
mov
or
pop
and
imul
and
jae
jmp
rcrb
mov
clc
cs
faddl
or
dec
in
int3
roll
push
sti
jp
add
xor
jg
mov
subl
lock
ret
jne
ljmp
ljmp
dec
inc
lds
out
adc
ljmp
test
imul
fwait
mov
cwtl
adc
push
mov
cmc
inc
and
lods
push
cmp
mov
xchg
repnz
add
out
add
adc
lahf
mov
jmp
out
sub
cs
cld
arpl
popa
sub
adc
daa
mov
sbb
aas
xchg
jp
cmp
cmpl
ret
sbb
and
test
sbbb
fldcw
mov
push
push
jle
movsl
jmp
lea
jne
shrd
rcl
cmp
sub
call
stc
test
call
cmp
or
aad
xor
sbb
push
dec
xchg
mov
jno
pop
popf
lods
cmp
repnz
add
jne
sub
push
aaa
mov
xor
inc
mov
xor
jmp
mov
call
lea
call
pusha
movw
movw
pushf
lea
jmp
scas
rorb
andb
in
sub
inc
notl
fisubrs
cmp
stc
add
cltd
inc
out
stc
push
cmpsl
sub
notl
mov
xchg
cmpb
addb
scas
fwait
jnp
pop
aad
ret
dec
jle
jb
aam
mov
lea
cmp
pop
push
fnsave
mov
imul
sti
jbe
jae
pop
push
adc
aam
pop
sbb
sub
mov
jae
pop
mov
clc
dec
je
pushf
pushl
popl
pushf
movl
pushl
pushl
ret
pushf
lea
jne
pushf
movzbw
call
add
push
add
push
add
lock
add
aas
push
add
pop
push
mov
pushf
pusha
jmp
lea
je
pusha
lea
jmp
lea
jne
jmp
pusha
lea
jb
pushf
call
pusha
pushf
pusha
lea
jne
push
rcl
jmp
lea
jne
jmp
jmp
pushf
movl
test
sub
pushl
call
cmp
pushf
pushf
pusha
lea
jae
pusha
rol
mov
shl
pusha
mov
shrd
adc
jmp
cmc
sub
jmp
jne
movsbw
xor
sub
sar
mov
rcr
jge
rol
cmp
add
bt
mov
jg
test
jmp
cmp
and
pop
pop
imul
sub
xlat
in
cli
lods
int3
test
call
cld
lret
add
push
sub
pop
jns
inc
cwtl
dec
push
imul
xchg
mov
fimuls
dec
mov
loop
adc
dec
mov
lds
add
scas
div
adc
jae
mov
jp
sub
mov
jno
aas
mov
fimuls
ss
jne
rorb
pop
sbb
adc
jle
sbb
popf
jmp
rorb
lret
out
jae
dec
ss
xchg
ja
xlat
push
cmovp
push
cmp
loopne
mov
cmp
push
fs
data16
push
jp
inc
xlat
fcomps
or
cltd
and
xchg
aad
xchg
inc
push
push
ss
lcall
sti
inc
outsb
cmc
jnp
or
push
lock
std
std
mov
pop
ret
jge
packuswb
out
or
mov
pop
cmc
ss
dec
outsl
sub
jge
or
xor
xor
pop
push
int
mov
dec
xchg
cmpsb
pop
test
mov
ds
add
repz
xchg
push
mov
je
stos
and
adc
or
roll
inc
and
movl
pushl
ret
lea
call
jno
pusha
pushf
mov
push
pushf
pushl
mov
lea
jmp
sub
mov
cmc
neg
pushf
call
xor
shr
or
neg
add
sbb
or
pushf
mov
pushf
jmp
lea
call
jmp
stc
sub
call
mov
ror
rcl
mov
clc
pusha
mov
jmp
jmp
pushf
mov
mov
movw
push
pushl
ret
add
dec
outsl
popa
fs
imul
add
xchg
les
and
or
add
cwtl
movb
lea
lea
call
push
mov
inc
imul
xchg
mov
push
dec
ror
popf
cvtps2pd
lea
fidivs
jmp
imul
leave
je
jge
outsl
andb
sbb
orl
movsl
inc
dec
subb
dec
mov
fistpl
fisubrl
mov
andps
and
arpl
movsb
rclb
fwait
sub
call
jge
into
movl
popa
xor
xor
sub
dec
xchg
mov
sbb
dec
int
gs
sbb
xor
mov
add
pop
jmp
std
cmp
adc
pop
into
loopne
jae
xor
test
push
iret
std
mov
test
inc
adc
daa
cmpb
fimuls
mov
push
fisubrs
int
push
sbb
test
mov
xchg
jmp
cmpsl
data16
mov
nop
data16
jae
xchg
test
imul
sti
hlt
lcall
cld
mov
movw
pushf
pusha
lea
jmp
call
bt
push
add
pushf
movb
pusha
mov
lea
jmp
jne
gs
xor
fs
insb
add
clc
or
push
lea
je
movzbw
call
pushf
or
movb
mov
push
push
lea
jne
cmp
rcr
or
mov
jb
clc
or
jmp
pusha
add
jmp
not
inc
push
not
mov
call
pusha
jmp
or
movb
and
xor
dec
mov
int3
stos
insl
aas
jae
test
cmp
mov
xor
loope
or
xchg
pop
addl
fcoms
ja
or
test
gs
cmp
stc
jl
cmpsb
xchg
lods
pop
lock
add
imul
shrl
incl
pop
in
sub
imul
loop
pop
js
pop
mov
lahf
xor
adc
mov
cmp
cmp
xchg
and
push
insb
cmpsl
es
mov
je
cmp
movsb
je
aas
add
adc
jl
lcall
cli
lock
loopne
pop
jmp
sbb
sub
lcall
andb
je
add
or
lea
jnp
push
lea
jne
adc
mov
add
xor
sub
add
pusha
call
movsb
arpl
out
xlat
push
outsl
in
sub
pop
xchg
pushf
mov
push
mov
sub
or
mov
pop
lea
pop
mov
dec
jge
pop
xlat
pop
pop
outsb
xchg
xor
pop
jle
sbb
mov
sbb
xchg
imul
cmp
aaa
cwtl
out
jle
jl
pop
das
pop
inc
decl
rolb
mov
jne
fistpl
adc
dec
pop
and
push
cmp
inc
insl
leave
and
inc
xchg
notl
insl
xchg
mov
aas
pop
scas
imul
xor
lock
push
addl
es
add
mov
in
or
sahf
mov
mov
inc
call
shl
outsl
pop
and
jle
dec
inc
in
dec
xchg
jnp
out
int3
add
clc
test
and
pusha
stc
add
pusha
lea
jmp
pushl
lea
je
pusha
test
pushf
test
add
sub
bt
cmp
push
clc
cmp
pusha
jmp
jmp
add
test
pushl
clc
jmp
sbbl
inc
arpl
repz
inc
packuswb
fnsave
shll
sub
sti
pop
push
mov
imul
insb
jmp
pop
push
mov
adc
and
cld
push
test
inc
mov
mov
out
ret
mov
call
fs
and
je
movsbl
pushf
movsbl
pusha
lea
movzbl
movzwl
pusha
bswap
pop
movzbw
lea
mov
call
jmp
call
mov
insb
ret
inc
arpl
pop
outsl
addr16
lds
adc
int3
mov
xchg
add
shr
push
add
jle
shll
and
inc
lahf
push
adc
and
int
fcoms
jnp
hlt
sbb
jnp
repz
sbb
pusha
push
call
mov
push
pusha
pushf
lea
jmp
pushf
pushl
popl
movw
pushf
pushl
ret
lea
jb
call
bt
shr
movb
push
lea
je
push
jmp
lea
jne
aad
btc
xor
aad
daa
aaa
dec
mov
rcr
ror
test
add
dec
mov
pusha
cmc
cmp
test
mov
push
lea
je
pushf
lea
jmp
pushl
movl
jmp
call
mov
sub
bsr
not
mov
push
xor
mov
test
stc
repnz
jmp
pusha
movb
lea
je
adc
bsf
clc
mov
shl
add
sar
neg
mov
movsbw
mov
cmp
pusha
test
pushl
pushf
call
movl
pushf
pushl
popl
push
mov
mov
movb
pushl
ret
jmp
dec
cwtl
int
arpl
mov
mov
popa
in
movsb
or
outsb
adc
xrelease
adc
mov
adc
cmc
dec
jnp
adc
pop
or
fwait
push
call
push
cld
cmp
int
test
push
or
cmp
inc
arpl
jo
xchg
push
lea
xchg
fmuls
fiaddl
cmp
in
mov
rcrl
imul
mov
push
jp
sbb
adc
outsb
xchg
sub
ret
mov
lahf
jg
mov
out
add
adc
mov
scas
push
repnz
loopne
jp
dec
mov
sbb
rol
lahf
mov
mov
cli
cmp
pop
mov
pop
test
mov
xlat
les
fildll
mov
mov
repz
imul
dec
mov
out
bound
cmp
cmp
and
cmpsl
mov
jns
xor
sbb
cmp
push
cltd
or
mov
std
fdivs
inc
in
mov
sub
test
std
pop
scas
std
xor
sbb
das
fstpl
xor
xchg
xor
cmp
hlt
push
and
or
lret
jg
test
sbb
mov
gs
fnsetpm(287
inc
lea
mov
sub
popa
mov
dec
std
xor
xor
xor
je
pop
insl
jmp
pushf
xchg
add
test
push
mov
dec
das
es
xor
mov
xor
mov
incl
fs
js
adc
pusha
pushl
ret
stc
add
pusha
mov
bt
test
movb
cmc
test
movl
jmp
fldl
test
dec
and
xchg
lods
mov
sub
fwait
mov
scas
addr16
nop
aam
lcall
mov
or
mov
adc
mov
xchg
inc
cwtl
pop
push
loop
mov
fstpt
or
stos
test
decb
and
gs
lret
dec
or
push
addb
inc
inc
mov
xchg
inc
xchg
inc
mov
dec
imul
mov
outsl
jmp
out
sub
loope
and
cmpsl
in
or
push
movsb
mov
cs
lret
in
cwtl
xchg
and
test
jmp
rorb
add
or
add
pusha
movl
call
lea
jg
pusha
lea
je
shl
jmp
jmp
clc
stc
cmp
or
push
lea
jne
mov
mov
clc
stc
pushf
stc
or
push
call
mov
push
lea
jb
stc
cmp
pushf
lea
jae
pusha
shrd
inc
mov
bt
shrd
mov
add
movzbw
not
mov
clc
movb
xor
stc
bt
repnz
lea
jle
push
pusha
mov
lea
jne
sub
rol
shrd
mov
and
sar
cmc
rol
sub
test
ror
rol
bsf
mov
cmc
test
sub
clc
pushf
pushl
popl
pusha
cmp
jmp
call
jmp
pushf
lea
jae
pusha
xor
pushf
lea
jo
call
call
setne
call
test
clc
pushl
add
bt
push
clc
call
movl
lahf
lahf
lea
pushf
lea
jb
push
jmp
lea
jne
adc
btr
sar
bsf
mov
pusha
test
pushl
add
pusha
stc
movzwl
dec
ror
shrd
movsbw
mov
call
adc
pushf
lea
call
push
pushf
lea
jb
pusha
pusha
movb
pushl
ret
lea
mov
bt
stc
stc
cmpb
pusha
lea
je
pushf
lea
jne
rol
movzbw
adc
xor
cmc
bsr
lea
mov
cmc
rcr
pusha
add
jmp
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
hlt
push
sub
add
test
jmp
sti
add
inc
arpl
sub
add
mov
stos
sbb
rclb
test
jecxz
leave
adc
pop
mov
and
out
sbb
jo
mov
fistps
and
dec
loope
push
shll
out
adc
ror
xor
int
jg
inc
arpl
mov
ret
repz
loope
in
push
mov
xchg
xor
test
dec
lods
shll
les
jl
adc
add
sub
aam
call
fldl2t
adc
call
cmc
or
call
movb
call
movl
jmp
push
pusha
mov
jmp
neg
mov
call
cmp
stc
test
jmp
cmp
cmc
not
bt
mov
pusha
stc
jmp
mov
pushf
push
push
lea
call
call
pusha
lea
ja
cmc
inc
not
inc
sub
inc
movsbl
rol
rol
add
add
cmp
movsbl
mov
neg
sbb
sbb
cmp
mov
test
pusha
pushf
repnz
pusha
pushf
pushf
lea
jne
mov
mov
lahf
movb
jmp
push
movl
push
pushf
call
mov
jmp
push
call
pusha
movl
movb
pusha
pushf
lea
jmp
lea
bswap
mov
jmp
lea
jb
push
cmpb
pushf
lea
jne
shrd
btc
test
mov
pushf
clc
cmp
add
test
pushl
clc
movzwl
shrd
ror
rol
rcr
mov
cmp
jmp
lods
lock
or
lret
and
jl
mov
push
xor
push
ret
jne
lcall
loopne
jb
add
out
arpl
popa
push
ja
push
roll
jae
insb
add
jle
xchg
mov
enter
add
in
jecxz
into
sub
push
sub
sbb
fcomi
jnp
or
mov
das
lret
inc
push
adc
repnz
movsl
xor
in
sub
outsl
popf
rorl
pop
repnz
mov
and
fdivr
out
mov
clc
push
jmp
cmpsl
inc
xor
fstpl
and
fcoml
out
popa
orb
popf
out
push
test
cmp
inc
jae
repz
popl
nop
xchg
inc
clc
xchg
and
std
rcrb
jae
jae
xchg
jae
sub
pop
rcrl
or
sahf
icebp
jnp
repz
sub
fucomip
cs
ficoms
dec
loope
fs
je
pushf
rol
pusha
movw
push
sub
bt
cmc
neg
cmc
pushf
add
stc
test
bt
cmc
cmp
lea
jg
call
pushf
call
pop
pushf
push
movl
pusha
pusha
pushf
pushf
movl
push
pushf
pushf
mov
lea
jmp
mov
push
mov
movb
pushf
mov
mov
pushl
ret
pusha
pusha
lea
jg
pushf
movl
pusha
push
pushl
popl
pusha
pushl
ret
cmpb
push
call
pushf
jmp
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outsb
je
jb
popa
arpl
push
mov
call
mov
lea
je
pushf
pushf
push
lea
jmp
btr
sub
mov
btr
clc
movb
movsbl
mov
mov
clc
pusha
mov
sub
test
repnz
call
not
jmp
lea
call
call
pushf
cmpb
movb
jmp
lea
jb
bt
pushf
cmpb
push
mov
lea
jne
sbb
inc
pusha
mov
mov
test
push
movb
add
pusha
movzwl
sub
mov
cmp
cmc
mov
add
call
stc
mov
fildl
add
adc
fadds
xor
lcall
pop
and
ficoml
mov
add
lea
dec
xchg
and
sbb
add
cmp
pop
cld
or
or
int3
icebp
out
sub
or
push
fidivrl
popf
test
mov
sub
out
cmpb
gs
aaa
test
and
xlat
inc
arpl
xor
mov
lea
test
add
das
add
lea
mov
dec
jnp
inc
stos
mov
sub
lret
fisubs
cmp
jecxz
in
inc
sbb
push
sub
pop
cs
gs
mov
lahf
cmc
or
sbbb
and
push
cmp
rcll
cmc
and
sbb
aam
cwtl
into
movsb
repnz
insl
push
into
sbb
dec
cmpsl
divb
sub
mov
xchg
cld
adc
fiaddl
inc
stos
sbb
pop
or
call
mov
ja
stos
pop
les
pop
lock
sbb
fisttps
out
or
xchg
mov
dec
add
push
cmc
sub
mov
repnz
movw
lea
jne
inc
pushf
rcl
mov
inc
bts
rcr
sub
test
movsbl
lea
sub
jmp
shr
or
mov
cmc
jmp
jmp
cmp
sub
btc
pushl
or
adc
lea
cmp
sub
stc
stc
cmp
pushl
popl
push
clc
pushf
cmp
pusha
jmp
jmp
lea
jne
pushf
pusha
movzbl
pushf
mov
push
movw
pushf
push
lea
jmp
pushf
movl
mov
lea
je
pusha
mov
pushf
jmp
pusha
mov
jmp
mov
roll
movsl
fildll
insb
fwait
testb
ja
mov
mov
mov
cld
cmp
jns
iret
out
xor
in
mov
or
dec
mov
fcmovb
inc
adc
push
out
cmp
xor
insl
lods
call
pop
stc
lcall
push
lahf
stos
scas
insb
jno
popf
jg
xor
and
jnp
inc
arpl
or
mov
sub
stos
scas
xor
mov
xchg
lret
push
jne
jnp
sbb
xchg
mov
adc
stos
sub
or
iret
or
pop
loope
rolb
jle
prefetchw
or
cmp
mov
enter
jge
jnp
sbb
fidivl
push
jl
cmp
idiv
pop
add
xchg
jnp
cmp
mov
inc
and
je
arpl
cltd
cmp
sub
cmp
add
cld
jo
das
mov
dec
sbb
mov
sub
decl
jmp
or
aas
xchg
addr16
rcrl
cmp
or
pop
out
mov
add
inc
pop
pop
push
notl
addr16
mov
negb
daa
and
jo
lods
sub
adc
push
lods
xor
rcrb
and
jne
cmp
test
cmp
xor
mov
stc
cmc
stc
call
pushf
setge
mov
lea
pushf
mov
pushf
movb
lea
jns
mov
pusha
call
pusha
add
push
lea
je
stc
pusha
pushf
add
pusha
movb
pushf
pushl
lea
jmp
rorb
adc
pop
dec
mov
add
loope
inc
mov
cmpsl
rcrl
xchg
fnstenv
pop
push
adc
pop
andl
popa
inc
icebp
mov
and
fisttpll
dec
stc
jl
sbb
xchg
sbb
jne
and
in
dec
cli
xchg
ret
movsb
and
jnp
xchg
add
push
ret
call
jnp
xlat
in
mov
outsl
push
or
repz
pop
mov
pushf
sbb
sub
pushf
cmp
pusha
lea
ja
stc
imul
push
pusha
clc
pusha
add
pushf
movb
mov
mov
lea
jmp
add
push
clc
call
cwtl
pushf
lea
pusha
jmp
add
btr
mov
cmc
cmp
stc
mov
mov
cmc
test
pusha
xor
cmp
push
repnz
pushf
movb
lea
jne
push
sbb
mov
shrd
stc
sbb
bsf
sub
pusha
bt
stc
lea
cmc
test
sub
pusha
pushl
popl
mov
mov
cmp
call
bt
stc
mov
cmp
call
pushl
pusha
pushl
ret
movb
movl
movb
pushf
pushl
popl
pusha
push
pushf
pushl
ret
int
jp
inc
arpl
jecxz
xor
imul
pop
jnp
jg
push
cmp
scas
dec
or
in
outsb
mov
lods
sbb
sub
or
jl
test
bound
lret
push
ficoml
pop
xor
jp
jb
sbbl
mov
fnsave
adc
or
jne
mov
ljmp
sbb
mov
insl
sti
decl
add
mov
add
pushf
pusha
lea
ja
call
add
add
btc
setns
push
xchg
ror
lea
shld
rcl
mov
and
movsbw
push
or
sub
rcr
push
btc
push
shld
push
add
shl
sub
not
lea
jmp
bts
cmc
add
mov
mov
call
jmp
ss
shlb
fisubrl
ljmp
xor
lock
jmp
jge
xor
mov
xchg
out
push
int3
in
loope
dec
mov
loope
int
mov
adc
dec
xlat
imulb
pop
sbb
adc
dec
push
jne
out
in
mov
daa
popf
cmp
inc
xor
sub
faddl
sbb
ss
sub
pop
or
call
xlat
testb
movl
das
or
cld
jg
mov
sub
mov
popf
push
xlat
rol
testl
pop
mov
clc
jnp
jge
sbb
fwait
icebp
add
adc
out
out
lcall
rcll
jno
andb
push
push
xchg
push
imul
inc
push
sbb
es
dec
lret
gs
jns
lahf
iret
imul
pop
xor
gs
ljmp
lret
add
jmp
add
outsb
arpl
inc
or
dec
stc
cmp
fs
data16
xor
lret
add
cmp
insl
loopne
pop
pusha
lea
jae
not
jmp
push
cmp
call
push
cmc
cmc
imul
clc
call
pushf
jmp
pusha
lea
jne
mov
jmp
lea
mov
movl
push
pushl
jmp
xchg
sbb
filds
out
dec
lods
jmp
mov
rolb
mov
mov
outsb
inc
sahf
mov
cmp
mov
sbb
cwtl
jge
xchg
sub
mov
test
xor
mov
rol
rep
and
mov
jge
push
shlb
sub
pop
shll
xor
xchg
add
inc
inc
out
push
insl
push
dec
test
mov
dec
cmp
fistpll
ss
xchg
sarb
pop
sarb
dec
mov
adcl
and
scas
mov
pusha
movb
lea
jne
movsbl
jmp
setns
lea
jp
pusha
movb
movl
mov
lea
ja
push
pushf
pushl
popl
pusha
pushl
ret
xchg
iret
fiadds
nop
and
jl
cltd
pop
das
push
push
push
mov
pusha
or
jp
xchg
dec
mov
push
popa
cmpsl
outsl
or
paddsb
not
lret
cmp
pop
cmp
push
loope
cmc
rcll
add
call
js
movw
pushf
pushl
popl
pushf
pusha
pushl
ret
push
push
xchg
pusha
jmp
aas
push
or
inc
arpl
daa
divl
les
cmpsl
sbb
push
or
in
xchg
add
adc
jl
sti
xor
cmp
inc
or
and
dec
mov
les
jmp
cmp
push
push
popa
jl
ss
pop
pop
lcall
mov
inc
xor
cmp
ljmp
push
popf
jecxz
add
ret
bound
jge
mov
add
andl
mov
add
pushf
push
jg
sbb
rorb
test
add
pushf
pusha
push
stos
movb
push
mov
lea
jmp
add
dec
gs
popa
addr16
outsl
js
add
cwtl
movb
movsbw
mov
movb
lea
ja
jmp
jmp
pop
pop
movsbw
xchg
xchg
jmp
xor
pop
flds
or
cmp
mov
hlt
out
mov
dec
xchg
cld
sbb
lcall
inc
and
jg
push
sub
mov
xchg
jmp
bound
adc
push
fildll
ljmp
test
js
daa
cmpl
inc
pop
pushf
jmp
movl
jmp
in
push
pusha
movl
call
lea
jne
stc
daa
movsbw
xor
daa
bswap
shr
mov
and
rcl
pusha
setp
add
rcl
rcl
setnp
rcr
mov
test
movl
clc
test
movb
movw
lea
je
cmc
stc
pushf
sub
pushl
bt
call
lea
jb
pusha
lea
call
call
pushl
cmp
call
jmp
rorb
fildl
les
jecxz
mov
fs
stos
in
mov
jl
jg
pop
and
jb
imul
sub
push
inc
test
inc
mov
int
and
aad
int3
xor
dec
adc
add
fbstp
popf
mov
mov
sub
repz
movsl
scas
lcall
jae
popa
out
cmpsl
xchg
ljmp
adc
hlt
js
pop
loop
es
call
aaa
fstl
ds
data16
cmp
add
call
fidivl
fildl
jp
ljmp
inc
bound
xor
push
push
lea
fimuls
mov
mov
cmp
xchg
mov
out
jmp
andb
and
hlt
xchg
jne
pop
jns,pn
iret
lods
mov
sbb
je
xchg
sub
hlt
mov
fmull
xor
add
ja
sub
xorl
fdivrl
adc
bound
fs
je
cmp
add
pushf
cmp
pushf
lea
jb
call
push
jmp
cmc
push
pushf
stc
sub
pusha
pushf
movb
cmp
movb
call
jmp
movb
cmp
cmp
call
stc
test
or
push
lea
je
call
jmp
mov
arpl
push
adc
or
test
sti
aaa
adc
outsl
pusha
mov
leave
inc
ss
push
jge
xor
into
add
inc
mov
sub
cwtl
fiadds
mull
imul
rcrb
pause
shlb
cmp
es
lcall
dec
push
mov
jnp
add
fucompp
mov
movl
jle
pushf
add
stc
outsl
xchg
lock
add
jl
scas
and
mov
test
dec
cli
movsl
gs
and
aad
aad
cmp
mov
pushf
stos
test
fldt
scas
test
stc
out
popa
adc
xor
and
xchg
and
and
fwait
sbb
mov
test
jmp
xor
xor
pushl
ret
mov
arpl
fwait
xorl
sbb
sbb
sub
pop
pop
daa
jbe
jae
and
mov
adc
std
test
popf
divb
pusha
mov
fstl
pop
adc
and
cmp
pop
sahf
lods
mov
ljmp
subl
jl
pop
into
data16
test
dec
xchg
sbbb
push
xchg
cld
sbb
xchg
pop
xor
pop
scas
and
les
xchg
in
mov
xchg
xchg
and
mov
mov
pop
stos
inc
sti
and
and
xor
pop
sbb
sub
mov
dec
enter
sub
dec
in
js
mul
test
lcall
scas
mov
sub
jmp
dec
pop
pop
jg
popf
mov
stos
outsb
stc
mov
adc
sbb
jb
push
in
gs
lock
xor
out
cmc
movsb
jmp
test
cmp
cld
lea
pusha
movw
pusha
pushl
ret
bt
pushl
jmp
aaa
jb
in
arpl
and
xlat
insl
clc
and
dec
les
jmp
aam
dec
mov
jno
scas
out
cmp
subb
cmp
aaa
ret
int3
mov
xchg
jmp
or
sub
mov
js
sub
jecxz
jle
push
xor
movsb
cmp
and
mov
pop
fldlg2
fiaddl
and
and
sbb
jmp
ds
push
or
or
int
scas
xor
sbb
shll
mov
stos
sub
push
lcall
fstpl
lock
pushf
add
bt
mov
call
neg
shl
sub
mov
call
clc
cmpb
mov
pusha
lea
jne
sar
sub
rcr
rol
pusha
mov
call
repnz
jmp
call
pusha
pushf
call
cmpb
pushf
pusha
lea
jne
movzbw
sub
lea
bsr
pushf
mov
shr
test
add
setbe
mov
pushl
test
jmp
adc
mov
cmc
cmpb
jmp
lea
jb
clc
stc
stc
cmp
call
jmp
pusha
mov
stos
pop
clc
addr16
dec
fildl
add
mov
ja
sub
enter
stos
and
inc
loope
sahf
cmp
pop
push
cwtl
ret
dec
and
loope
cmpsb
arpl
xor
jl
mov
fldenv
xchg
rolb
xor
mov
in
mov
int
adc
clc
loope
rcpps
out
mov
mov
mov
out
enter
jo
ljmp
mov
jp
mov
xor
enter
or
not
inc
mov
not
inc
rol
inc
xor
xchg
daa
mov
or
neg
mov
jmp
pushl
mov
lea
jae
pusha
push
jmp
call
lea
movzbl
mov
call
stc
xor
loope
arpl
cmpsb
insl
faddl
shl
mov
sub
sub
mov
pop
adc
mov
cli
roll
push
jne
cld
jno
xor
out
lock
lret
push
fwait
pop
jl
jge
loopne
push
inc
loop
fisubs
jne
xchg
incl
mov
stos
gs
cmc
call
lea
jne
push
pushf
movb
lea
lea
mov
push
bswap
lea
movb
push
mov
movl
mov
movb
pusha
call
pushf
mov
lea
jle
ja
bt
setge
cmc
shr
sub
jmp
sub
adc
jmp
or
movw
lea
jne
ror
mov
cmp
cmc
or
pusha
movw
jmp
neg
jmp
pusha
adc
jmp
pushf
movl
pushf
movl
pusha
pushf
pushf
pushl
lea
jmp
ss
xor
push
and
dec
icebp
add
dec
sub
add
xchg
xlat
or
in
int3
pusha
dec
rep
mov
push
lahf
push
push
or
in
sub
mov
jbe
xor
fildll
loop
mov
or
aad
adc
ficoms
cli
lock
test
push
xor
xor
inc
mov
bound
int3
fidivrl
mov
gs
stc
cmp
mov
sub
add
js
mov
shlb
fsts
fsubl
mov
add
jmp
psrlw
pop
pop
cmp
xor
sarl
xor
sub
pop
sahf
inc
cmp
dec
inc
fwait
push
sbb
cli
shrb
add
and
scas
xor
mov
xchg
loopne
jp
test
push
and
mov
fwait
inc
push
jle
clc
and
sbb
or
push
fcoml
clc
lret
lret
mov
inc
int
stos
andb
int3
push
mov
or
dec
in
lea
jne
shl
call
mov
arpl
sbb
xchg
jecxz
f2xm1
or
movsl
je
adc
mov
cli
jg
push
out
jge
jp
sub
push
stos
shll
cmp
push
add
shll
cvttps2pi
loopne
rcr
adc
testl
call
add
cmc
test
mov
adc
sbb
bsr
cmp
mov
stc
bt
pusha
cmp
pusha
jmp
jmp
jmp
cmpb
movb
pushf
call
jp
shl
arpl
push
push
mov
add
dec
xchg
cld
sbb
pop
or
mov
mov
fcoml
mov
mov
adc
xor
inc
loope
cmpsb
cmc
push
add
jbe
or
bound
and
pop
pop
lret
pop
addps
popa
fwait
lock
shll
stos
adc
mov
aaa
fistpl
fadd
xchg
imul
popa
and
enter
cmpsb
mov
scas
lretw
test
mov
scas
inc
inc
jp
sbb
mov
mov
push
sbb
inc
pop
lods
aaa
andl
xchg
std
mov
mov
push
inc
jge
in
inc
arpl
mov
ficoml
inc
cmpsb
add
fldt
push
mov
jb
add
pop
in
pushf
add
sbb
jmp
cmp
adc
imul
or
ja
mov
push
sbbl
xor
add
lahf
aas
push
inc
stos
cwtl
nop
sub
bound
es
jbe
xor
mov
popf
inc
std
add
mov
push
loope
not
movsb
inc
inc
push
daa
aaa
sahf
nop
jns
cmpsl
and
in
add
dec
or
inc
push
push
push
stc
jb
aam
cs
or
dec
ds
jmp
xor
sub
movsl
insb
and
ror
jg
add
cwtl
lret
aas
bound
rcll
sahf
lea
stc
push
sbb
xchg
in
xchg
test
fsubrl
bt
add
call
add
js
cwtl
decl
popf
push
fsts
cli
sbb
inc
test
stos
inc
test
stc
sbb
cmpsl
daa
int
int3
jle
repnz
jnp
in
scas
insl
mov
ret
jns
xchg
sbb
xor
hlt
mov
out
das
push
jl
sbb
adcl
cmp
jle
sarl
push
and
and
dec
sbb
loope
insl
mov
addr16
mov
gs
xchg
outsb
fisubrs
jecxz
cmpb
jmp
lea
je
call
cmp
jmp
pusha
shr
sar
or
mov
pushf
call
push
test
cmp
movb
or
mov
lea
je
bswap
mov
movzbw
movsbw
lea
pusha
xchg
movzbl
pushl
popl
movsbw
bswap
pushf
mov
not
jmp
call
movl
pusha
pushl
jmp
bt
add
jmp
lea
jne
neg
mov
pushf
movb
or
pushf
call
call
mov
mov
pushf
pushf
mov
push
pushl
ret
pusha
call
xchg
sbb
xor
jb
leave
mov
sti
cmp
xor
jle
aas
stos
dec
fisubl
xor
pxor
arpl
call
push
in
cmpsb
dec
mov
xor
adc
mov
iret
ficomps
mov
out
cmp
sbb
and
push
pop
test
popa
mov
enter
inc
jmp
dec
inc
add
mov
adc
daa
lock
je
pop
pop
dec
jecxz
mov
imul
xchg
mov
xorb
sub
scas
mov
decb
lock
test
pushf
lea
je
bsf
add
clc
mov
bt
add
bt
mov
cmp
call
mov
not
pushf
lahf
cwtl
mov
lea
lea
call
lea
jne
pushf
call
lahf
mov
lea
lea
mov
call
sub
mov
pusha
mov
pusha
lea
jmp
pusha
or
call
shl
lea
btr
mov
call
lea
jne
pusha
pop
mov
pusha
pushf
pushf
lea
jmp
pushf
jmp
jmp
lahf
lea
push
pusha
movl
jmp
jmp
jnp
imul
arpl
imul
das
add
test
jg
cld
sbb
std
imul
leave
mov
push
scas
aad
fisubrl
jo
outsb
lahf
dec
xchg
test
dec
or
fdivr
xor
loopne
adc
int3
mov
pop
aad
mov
aas
jge
xchg
and
es
adc
mov
out
and
fcomps
sti
and
xor
and
outsb
push
xor
add
adc
xchg
shlb
scas
sub
test
shrb
mov
lea
mov
push
pushf
mov
mov
mov
movzbw
cwtl
lea
call
push
mov
movl
call
jmp
cmp
push
cmp
call
mov
push
push
pushf
push
pushl
ret
jmp
pushf
lea
jne
clc
dec
bswap
sub
mov
call
jmp
xchg
popf
fucomp
inc
arpl
repnz
xlat
jmp
outsl
pop
imul
cmp
inc
loopne
stos
out
xchg
xchg
lods
add
cmpsl
xchg
add
call
sub
outsb
stos
out
xchg
cmpsl
add
call
mov
dec
outsb
notl
stos
cmp
inc
cmpsb
pusha
scas
lea
xchg
add
adc
pop
mov
sub
ja
insb
adc
push
add
mov
lock
adc
jb
ficoms
fs
jb
cmp
bt
bt
cmp
push
lea
jae
xadd
mov
rol
rol
mov
bsf
cmp
mov
pushf
clc
cmc
xor
test
bt
repnz
jmp
push
rorl
std
fucomp
jmp
enter
sub
mov
fldl
push
in
jns
arpl
gs
pop
xor
cmp
shll
xchg
dec
xchg
mov
aam
jns
sub
nop
data16
sarb
add
adc
mov
enter
jae
aam
inc
arpl
sub
mov
mov
lret
int
jp
mov
out
dec
cmp
mov
popa
enter
lea
es
lds
xchg
loop
xor
insl
jle
lds
roll
sahf
xorb
pop
daa
loope
xchg
mov
add
sahf
inc
enter
ja
xchg
test
mov
nop
sbb
push
ds
lret
jmp
dec
inc
pusha
movb
mov
lea
jmp
jmp
pushf
lea
jb
bt
push
pushl
cmpb
jmp
test
pushf
movb
lea
je
cmp
cmc
add
pushf
jmp
loopne
imul
arpl
dec
dec
iret
or
mov
sbb
imul
nop
jb
pop
inc
inc
dec
xchg
les
mov
in
jp
mov
fisttpll
mov
push
mov
outsl
jno
mov
aad
ret
and
jo
fwait
int
push
stos
pop
sub
xorb
inc
jp
xchg
pop
in
leave
mov
sti
aam
mov
daa
push
paddsb
gs
xor
jae
pop
or
jmp
jno
aad
jnp
les
divb
xor
mov
aaa
movaps
xchg
loopne
imul
dec
jle
mov
push
les
or
subps
enter
add
xchg
mov
pusha
pusha
mov
pushl
ret
mov
arpl
aad
xchg
mov
rcrl
mov
divl
repnz
hlt
adc
in
inc
shl
jns
sbb
sbb
adc
inc
sbb
add
sub
loopne
push
popf
shr
add
xor
cwtl
cmp
rcrb
xor
jl
add
enter
call
add
and
jmp
jmp
cmc
test
call
movl
jmp
pushf
lea
jne
jmp
mov
not
pusha
not
seta
inc
not
call
xor
bnd
push
cmc
add
lret
hlt
sbb
jae
ljmp
lds
mov
sbb
test
in
or
cmp
lock
push
cmp
jecxz
pop
les
xchg
es
xor
inc
pushf
add
movsl
mov
cmc
push
xchg
and
mov
out
cmc
in
jmp
dec
push
add
sti
fbstp
xchg
pop
mov
ret
pop
pop
xchg
outsb
xor
fists
xchg
aam
and
add
fucomi
call
shl
pushf
pushf
movb
pusha
lea
je
pushf
push
mov
call
pushl
movl
call
cltd
test
hlt
inc
arpl
in
mov
jno
clc
cmpsb
movsb
stos
cmp
jno
push
cmp
imul
mov
out
mov
pop
gs
insb
adc
in
inc
jle
sub
into
mov
fs
mov
sub
pmulhw
xchg
mov
dec
adc
rcrb
xchg
sub
inc
dec
xchg
movsb
scas
andb
add
outsb
adc
imul
in
inc
mov
dec
xchg
outsl
sbb
mov
inc
arpl
mov
cltd
push
orl
cmpsl
lock
int
mov
insb
jae
adc
enter
xor
nop
shlb
test
pop
add
stc
xor
add
jle
test
das
dec
int
ret
mov
xchg
push
stos
jl
imul
in
sarl
mov
pop
fs
xor
daa
js
outsb
and
adc
dec
dec
int
icebp
cmp
loopne
adc
aaa
jl
mov
imul
cmp
jp
xor
inc
mov
loopne
lret
stc
stc
rorb
outsb
ja
orl
xchg
inc
rep
cmp
sub
xchg
out
push
pop
cmc
shlb
sbb
je
jmp
mov
add
flds
lea
ja
jmp
lea
jne
not
rcl
bsf
mov
mov
clc
sub
pushf
shl
bsr
pushf
lea
call
mov
jmp
lea
jo
pusha
pushl
lea
jb
cmp
jmp
pop
test
mov
xchg
sbb
mov
xchg
lea
mov
ret
aas
addr16
cltd
xchg
pop
aam
pop
imul
cmp
xchg
ds
shll
cmpsl
inc
cmpsb
sbb
add
test
out
loopne
cld
shl
test
lret
xchg
add
leave
in
dec
lret
xor
pop
xor
fildl
int3
lea
mov
add
mov
into
data16
xor
aad
jno
cmp
cltd
and
mov
es
mov
das
mov
mov
mov
scas
jbe
mov
mov
ret
lea
ljmp
cmp
xchg
mov
add
mov
mull
shrl
stc
dec
in
xor
shl
mov
mov
and
inc
push
loopne
xchg
fbld
add
shrb
mov
int3
aaa
popf
ret
out
test
or
push
mov
mov
mov
sbbb
pop
and
jmp
lds
push
dec
mov
adc
xorl
xor
mov
test
test
bound
mov
lods
or
adc
or
push
bswap
jle
xor
repnz
jle
xor
hlt
je
in
xlat
cli
daa
mov
mov
jg
adc
loope
ret
lret
shlb
jg
loope
icebp
lods
loop
inc
mov
xchg
addb
ffreep
xchg
outsb
mov
cwtl
cwtl
roll
addr16
data16
mov
adc
lahf
cld
mov
push
outsb
shr
mull
xchg
test
adc
mov
xor
xchg
divps
mov
xchg
out
icebp
adc
arpl
push
dec
adc
xchg
cmp
mov
leave
sbb
movsb
add
mov
les
pop
jle
adc
jl
scas
sahf
cli
mov
das
jbe
xor
ja
inc
bts
mov
fmull
jle
in
sbb
mov
add
xor
ficoms
xchg
push
rolb
mov
and
sahf
addr16
ljmp
xorl
and
xchg
into
mov
cmpsl
pop
xchg
scas
cmpl
mov
rol
int3
ret
test
lods
int
lea
mov
call
inc
xchg
push
or
stos
sarb
pop
cmp
xchg
push
scas
cs
xchg
out
xchg
add
adc
sub
xchg
xchg
sahf
mov
xchg
lods
lods
ljmp
adc
addl
loop
xchg
cs
ss
outsb
xchg
dec
movsb
pop
mov
es
ja
mov
ds
xchg
adc
pop
mov
mulb
push
mov
pop
lahf
dec
popl
dec
mov
push
xchg
push
mov
jp
xlat
push
sahf
mov
push
scas
mov
popl
and
mul
pop
push
nop
push
mov
push
push
sahf
mov
mov
and
lret
sub
mov
out
mov
movsb
nop
scas
adc
mov
test
sbb
les
push
movl
test
lds
jg
mov
cmp
mov
add
inc
ret
add
adc
xchg
pop
lcall
icebp
add
xchg
movsb
jb
scas
out
sahf
or
testb
dec
mov
adc
adc
pop
mov
loopne
decb
or
lcall
inc
mov
arpl
hlt
add
loope
add
jg
movsb
push
xchg
adc
add
xchg
cmpsb
ljmp
out
nop
or
lahf
lret
fldl
or
cltd
jle
xchg
ss
xor
movsb
xchg
popf
aam
nop
or
ss
pop
mov
outsb
cmpsl
mov
xchg
stos
popa
lret
xchg
cmp
rorb
jmp
pop
xchg
testb
inc
pop
xchg
shrb
sahf
or
cmpsb
push
xchg
fimuls
xchg
mov
or
dec
into
sahf
ds
in
lahf
xor
cmpb
inc
xchg
iret
out
mov
xchg
jp
xchg
mov
dec
bound
das
cmc
es
mov
repnz
cli
mov
mov
es
xchg
sbbb
dec
pmaxub
pop
popl
xchg
nop
push
mov
sbb
dec
punpckldq
enter
dec
xchg
xacquire
pop
push
nop
xor
mov
ja
ret
pop
push
nop
push
mov
testb
mov
xor
bound
lods
adc
push
mov
and
jp
xchg
cwtl
cmpsl
sahf
pop
xchg
push
mov
les
in
cmpsl
push
xchg
inc
pushw
xchg
sar
nop
push
mov
mov
or
loope
loop
cmpb
addb
push
mov
jb
xorb
out
xor
out
inc
xchg
scas
lret
fcmovb
sub
mov
mov
sahf
mov
fbld
mov
lahf
rclb
es
xchg
cmpsb
dec
scas
negb
dec
mov
mov
xchg
inc
stos
lahf
loopne
sbb
cwtl
mov
lahf
mov
ficoml
scas
push
adc
ret
and
jmp
push
scas
mov
xchg
adc
ds
mov
xchg
insb
adc
scas
dec
dec
lahf
xchg
push
nop
pop
sbb
jg
lds
push
push
cmpsb
lds
lahf
test
mov
andb
pop
adc
and
mov
mov
aad
outsb
mov
cmp
or
negb
lea
cmpsb
inc
lcall
adc
cmpb
lds
outsl
ret
mov
xchg
lcall
cmpsb
in
dec
mov
mov
andb
lds
andb
into
mov
orl
adcl
lahf
nop
cmpsb
mov
out
sbb
es
lcall
sahf
push
scas
push
mov
cmpsl
outsb
xchg
xchg
jbe
push
xchg
push
mov
rcll
mov
xchg
xor
pop
pop
jno
test
mov
aad
jmp
and
popa
pcmpeqw
ret
pop
fnstenv
and
sahf
loop
xchg
xor
out
push
loop
and
xchg
sbbb
add
shrl
adc
mov
cmpb
jnp
loop
and
dec
stc
jb
outsl
jb
in
jl
jg
lcall
ja
lea
stos
inc
push
loop
mov
pop
cmp
loop
xor
pusha
mov
inc
mov
add
rcr
loop
cmpsl
add
jnp
sub
lar
push
push
jp
and
hlt
sarl
xchg
jbe
popf
add
test
fimull
mov
fisttpll
repnz
arpl
sbb
popf
dec
jne
ss
in
mov
cmp
cmpsl
cmc
inc
xchg
loop
stos
add
mov
xchg
cmpsl
pop
loope
into
loop
and
sarb
xchg
xchg
mov
repz
push
push
pop
xchg
mov
cmpsl
cmpsb
inc
xchg
lahf
jb
in
cs
mov
mov
xchg
rorb
sahf
mov
push
mov
xchg
lahf
outsb
mov
and
lcall
mov
sub
aaa
push
movsl
mov
xchg
in
lahf
mov
mov
cwtl
ret
xor
push
lcall
movsl
cmp
xchg
sbbb
xchg
sarl
stos
or
mov
call
cmp
xchg
scas
mov
mov
dec
cli
xchg
ja
mov
mov
scas
add
cmc
ds
in
loop
lcall
lock
sahf
cmp
jbe
int3
push
inc
fadd
add
ret
xchg
les
cmp
jbe
mov
mov
lods
int
inc
iret
aas
sarb
sarl
sarb
sarl
aam
aad
aas
xlat
aas
fdivrs
fucomip
mov
jecxz
xchg
in
out
out
out
call
jmp
in
add
pop
enter
lock
icebp
lcall
cmp
clc
push
in
mov
mov
mov
mov
and
mov
icebp
pop
lods
add
mov
xchg
mov
jmp
ljmp
push
rol
cmp
push
int
inc
bound
dec
adc
mov
cltd
jg
repnz
std
sar
xchg
mov
std
jp
or
icebp
and
sbb
ds
in
loop
inc
xchg
cmc
in
repnz
mov
mov
sarl
out
icebp
fbld
das
add
repnz
loope
cmp
ret
shl
lret
inc
dec
notl
loop
out
add
adc
scas
and
out
lock
repz
jb
insb
icebp
pusha
jno
add
loopne
mov
add
shrb
dec
or
out
shr
xlat
iret
and
filds
rolb
dec
loop
mov
shr
fadd
ffreep
sub
and
lcall
mov
hlt
fistps
in
mov
in
mov
inc
repnz
add
cltd
xchg
aad
add
hlt
call
loop
decb
mov
pusha
mov
in
jmp
repnz
jbe
in
dec
rcrl
jbe
mov
and
icebp
shll
decl
loop
or
adc
bound
cmp
aaa
mov
mov
cmpsb
ret
xor
out
jecxz
jmp
in
adc
shll
aad
xchg
loop
div
and
mov
orb
loope
ret
lcall
mov
js
xor
out
lods
dec
xchg
cmc
sbb
in
xchg
sub
call
sti
subb
xchg
repnz
mov
xchg
adc
in
ret
lcall
scas
xchg
sarb
jecxz
mov
mov
push
xchg
mov
mov
xor
mov
mov
jg
int
sub
xor
ficoms
and
fisubl
xchg
into
push
or
mov
dec
ret
sbb
pusha
lods
daa
stos
jmp
dec
xor
cmpsb
mov
mov
push
push
arpl
in
push
or
bound
mov
inc
and
cmp
and
mov
ss
data16
jle
sbb
scas
les
imul
mov
jne
jle
inc
int3
cmp
cmp
xor
fidivrs
jmp
jle
mov
sub
andb
adc
mov
int3
movsl
in
mov
sahf
mov
sbb
sahf
cmp
mov
sahf
aam
jbe
fcomip
ljmp
fisubl
cwtl
mov
mov
sub
lret
jo
add
inc
test
adc
dec
xchg
pop
jbe
push
xor
test
jp
push
incb
jle
ss
in
lcall
aad
int3
insb
int
roll
ds
icebp
pop
fadd
dec
test
filds
sahf
cld
lret
mov
dec
xchg
jbe
int3
adc
jecxz
ljmp
lcall
repnz
mov
xchg
jo
sub
adc
xchg
mov
in
xchg
mov
divl
xor
mov
mov
mov
mov
dec
arpl
lock
scas
pop
xchg
mov
sub
push
and
out
out
loop
dec
lcall
nop
mov
dec
repz
dec
ljmp
xlat
jbe
push
rcll
mov
bswap
mov
pop
ficoml
out
ljmp
addl
mov
cli
xchg
cmp
ljmp
adc
mov
fstpt
aaa
jle
cmpsb
out
fs
or
bswap
adc
adc
sbb
add
inc
cmpsl
mov
xchg
shrb
test
mov
aam
lret
adc
fimuls
hlt
mov
sbb
movb
imul
fst
push
cmp
stos
adc
scas
xchg
decb
cmpsb
aad
add
mov
repz
loopne
or
insb
adc
pusha
pop
test
push
ljmp
pop
shl
aam
repnz
and
arpl
js
sub
jne
jg
dec
shrd
insl
or
cli
lret
out
iret
push
or
stos
in
enter
js
push
lods
rclb
test
inc
ficompl
pop
sarl
lret
rclb
mov
rolb
add
or
mov
jb
jae,pn
ljmp
js
xor
je
add
add
xchg
ffreep
outsl
int3
fwait
nop
ljmp
out
repnz
lcall
lods
stos
inc
adc
mov
mov
push
adc
loopne
jmp
rcll
lock
mov
sbb
scas
cmpsb
in
cmp
in
out
pop
jmp
mov
out
cmc
or
xor
or
movsl
fists
dec
loopne
mov
push
xchg
idiv
inc
jmp
and
out
xor
cvtpi2ps
rep
cmpl
fnsave
rcrb
push
adc
nop
push
pop
mov
adc
rcrl
scas
jle
or
xchg
int3
lret
mov
aam
adc
lock
and
jo
lahf
pop
ret
push
cmp
adc
push
push
stc
fwait
add
pop
addb
enter
cs
mov
xchg
loop,pt
iret
aaa
fldenv
mov
sbb
or
adc
lea
jmp
mov
jmp
movsb
fsub
in
mul
cmp
mov
mov
sbb
stos
lret
jbe
std
int
repz
cmp
int3
insl
shll
stos
stc
and
into
cwtl
push
jbe
dec
push
sbb
xlat
mov
jb
dec
roll
dec
call
add
pop
jg
dec
cld
lods
in
pop
out
nop
je
pushf
push
mov
and
int
sbb
adc
fcoml
dec
mov
nop
jg
add
bnd
xchg
push
jo
push
daa
bound
cmpsb
call
xchg
push
scas
mov
es
shlb
iret
lcall
stos
ret
sbbb
iret
movsl
iret
std
repz
scas
movsb
rcl
pop
fsub
data16
and
stos
ds
roll
jmp
fisubl
pop
push
adc
stos
data16
daa
jl
xchg
pop
mov
out
mov
lock
jle
inc
sahf
lock
xchg
lcall
mov
test
clc
daa
push
sbb
repz
ffreep
mov
lahf
les
cmp
pop
sahf
outsb
and
mov
sub
mov
shlb
cmp
sub
hlt
icebp
mov
ret
xchg
dec
lret
inc
ljmp
decl
in
rcr
test
insl
or
sbbb
sbbb
ret
dec
fisubrs
fdivp
test
add
ficoml
je
sub
sub
adc
mov
movsl
aam
lret
cmp
or
sbb
cmc
mov
faddl
shll
jnp
adc
lret
push
jmp
add
or
and
push
and
iret
lock
out
cmp
cmp
mov
inc
push
in
notl
mov
jbe
mov
enter
jmp
ljmp
fisttpl
xor
es
add
out
xor
push
xor
and
loopne
dec
lcall
loopne
cmpsb
enter
mov
popf
mov
and
out
dec
nop
out
dec
lods
rolb
cmp
xchg
mov
cmc
mov
mov
mov
out
int
lret
cmpsl
inc
mov
mov
out
xor
loop
sub
in
sbb
mov
and
jns
cs
adc
bound
fdivrs
jb
je
sbb
ljmp
scas
sbb
pop
add
lock
jb
lcall
push
and
movsb
rolb
loop
sarl
push
cs
mov
rcll
mov
sarl
lods
loop
mov
xchg
out
shl
adc
adc
fstpt
or
icebp
adc
jo
fcmovne
pusha
adc
mov
out
mov
adc
iret
stos
rol
xchg
cmpsb
mov
shlb
dec
adc
xchg
mov
add
test
cmp
stc
out
push
sub
sbb
mulb
sbb
sahf
test
push
stos
or
int3
sbb
les
mov
loopne
mov
or
push
les
cmpsb
arpl
leave
hlt
test
fsubl
shlb
and
pop
cmpb
in
repnz
sub
jge
or
sti
ja
sti
sub
test
xchg
push
jbe
mov
push
ljmp
push
mov
popf
lcall
inc
jle
cmpsl
out
mov
mov
shr
scas
add
and
fdivs
scas
loopne
iret
das
scas
sahf
addb
cmpsb
dec
jmp
test
movq
jle
bound
lret
pop
into
popa
push
movsb
rsqrtps
xchg
out
push
dec
mov
pop
addr16
dec
or
lcall
stos
dec
cmpsl
test
scas
xchg
mov
mov
push
jno
lahf
push
testl
cwtl
mov
ljmp
adc
pop
in
into
out
lcall
push
cmpsl
mov
inc
into
into
mov
repnz
mov
ret
decl
dec
dec
xchg
push
iret
sbb
xchg
stos
push
and
push
icebp
out
or
out
or
mov
pop
pop
inc
and
push
psrlq
push
sub
ljmp
inc
add
pop
cmpsl
dec
xchg
scas
out
adc
pop
out
rclb
dec
xchg
addb
in
ficomps
inc
dec
movsb
iret
ds
mov
xor
xchg
push
push
or
xlat
sbb
not
push
sbb
push
fildll
lcall
in
and
xor
pop
fnstcw
jecxz
lret
outsl
dec
pop
inc
adc
dec
cmp
lret
lcall
bound
dec
outsb
push
out
cmp
sahf
or
pop
and
scas
rclb
sub
jle
cmp
or
aas
dec
cmpsl
xor
mov
cwtl
rcr
add
cs
and
iret
mov
xchg
xchg
test
cmp
shrl
call
ljmp
or
in
mov
ds
pop
das
mov
dec
mov
push
in
sahf
rclb
out
test
sahf
pushf
mov
lock
mov
faddl
pop
mov
inc
push
aad
or
mov
cwtl
push
int
push
testb
xchg
sbb
hlt
icebp
les
inc
cli
pop
dec
push
dec
sbb
xchg
or
pop
rclb
pusha
push
fistpll
pop
sahf
sub
push
cmpsb
push
inc
into
sahf
lcall
mov
ja
and
dec
rsqrtps
fwait
mov
repnz
imulb
push
cmp
and
cmp
es
mov
sahf
mov
pop
out
es
into
push
push
xchg
call
scas
cmpsb
add
mov
xlat
pop
faddp
inc
iret
cmpsb
data16
pop
adc
add
pop
test
es
sahf
stos
cli
daa
es
xchg
or
into
in
or
pop
xchg
out
test
push
adc
mov
adc
fs
xor
adc
in
add
xchg
loop
cmpsl
dec
adc
push
mov
push
outsl
pop
call
xchg
loopne
mov
stos
fs
pusha
cmp
inc
cmp
add
das
xchg
xchg
pop
popf
push
out
nop
or
outsb
or
add
xchg
xchg
or
inc
mov
mov
mov
add
stos
or
ds
xchg
or
dec
mov
jnp
or
cld
clc
rorb
cmp
xchg
loope
jle
mov
mov
mov
dec
add
movsb
inc
mov
adc
push
nop
cmp
scas
and
add
jg
sbbb
sahf
or
xchg
and
pop
xor
mov
cli
ret
orl
std
in
fsin
jbe
popl
popl
cmpsl
icebp
cmp
fwait
or
sub
add
leave
std
pushw
rclb
pop
sub
xchg
test
aas
dec
andb
std
push
mov
mov
adc
and
rorb
or
std
fadds
decb
xor
pop
addl
popl
ds
xchg
cld
lods
add
add
sub
mov
add
sbb
repnz
adc
cmp
xorb
test
sbb
lea
fsubl
sub
or
clc
orb
mov
out
add
inc
lcall
outsl
ss
mov
mov
push
pop
or
dec
js
nop
popa
dec
ret
gs
scas
push
pop
inc
sbb
popa
stos
fists
xchg
xorb
cmc
orl
pop
push
adc
mov
fs
mov
xor
add
popl
lcall
xchg
mov
insb
inc
addb
movsb
xchg
lea
add
jge
or
xchg
add
mov
pop
or
mov
loope
mov
scas
imul
or
xchg
sbb
xchg
or
int3
cmp
mov
or
xchg
clc
mov
or
adc
mov
push
xchg
es
test
loope
mov
push
or
sbb
or
pop
pusha
adc
cmpsl
cmc
xchg
mov
add
xchg
mov
lahf
mov
adc
mov
xchg
mov
test
pop
mov
dec
jmp
movsl
lret
sbb
pusha
jnp
cwtl
push
xchg
sub
idivl
and
repz
outsb
sub
cs
xchg
mov
movsl
xchg
mov
mov
lock
jecxz
xchg
orl
jmp
lods
das
cmp
mov
in
mov
sbb
incl
and
cli
xchg
orl
mov
mov
inc
xor
push
loope
xchg
adc
mov
imul
xchg
mov
mov
jae
and
add
add
xchg
adc
aas
xchg
or
stos
add
push
mov
mov
ret
ljmp
out
push
xchg
and
nop
add
push
dec
test
or
sub
call
pop
arpl
inc
add
into
mov
pop
mov
mov
and
xchg
adc
clc
xchg
sub
das
xor
cwtl
push
dec
ja
fldl
sub
jecxz
fs
push
xor
xchg
push
outsb
mov
decb
enter
mull
fwait
jge
nop
sbb
orb
cmpsb
xor
addb
or
xchg
in
push
lods
insb
movsl
pop
sbb
dec
fiaddl
test
int3
sub
or
fcompl
or
dec
mov
mov
ficompl
lret
fmuls
into
sub
xchg
test
scas
outsb
or
mov
sahf
sbb
faddl
xchg
ss
mov
or
popf
pop
cmpsl
xor
pop
xchg
mov
sub
cli
push
stos
or
sbb
sub
xor
iret
add
das
inc
cmp
fisttpll
adc
mov
out
sti
adc
out
xchg
cld
rcrb
arpl
xchg
or
sbbb
xchg
fildl
stos
mov
dec
stos
insb
out
iret
repz
lds
pusha
lcall
sub
mov
dec
jl
lret
xchg
mov
sbbb
sbb
pop
xchg
mov
add
jle
sbbb
mov
xchg
mov
orb
inc
jl
fistpll
jnp
mov
xlat
mov
xchg
mov
in
inc
push
cmc
mov
xchg
lods
or
and
addb
cltd
sub
jge
mov
dec
jnp
jbe
loopne
sub
aam
or
cmpsb
add
mov
mov
xor
dec
jo
lods
mov
js
jg
in
jp
add
sahf
mov
xor
xchg
adc
fistps
and
jp
shll
adc
das
fcmovu
nop
sbb
xchg
repnz
pop
inc
adc
lahf
or
pop
gs
sub
xchg
dec
dec
test
outsb
or
adc
inc
jl
lea
lahf
std
mov
test
lea
mov
or
mov
orb
fimull
and
loope
sahf
faddl
jge
mov
cmp
pop
lods
mov
adc
dec
sbb
daa
test
mov
faddl
test
mov
and
mov
cmpsb
dec
test
cmp
pusha
and
xorb
jno
jb
dec
gs
cwtl
ja
lret
or
jg
lcall
mov
or
test
mov
adc
fimuls
leave
or
test
fwait
add
outsb
sub
nop
jp
add
int3
inc
jg
mov
enter
cmc
push
testb
jnp
cmpsl
push
les
imul
or
fwait
ljmp
xchg
js
or
or
sbb
dec
dec
cwtl
ficompl
je
pop
jne
xchg
or
or
xchg
rorl
jo
inc
lcall
int3
push
addr16
fimull
ret
or
jo
lret
pushw
lahf
adc
mov
xchg
add
and
or
sbb
adc
xchg
inc
test
pop
push
lret
mov
or
ljmp
ljmp
dec
cmpsb
test
mov
fimull
push
incl
mov
xor
adc
or
and
inc
xchg
nop
adc
pop
jp
orl
jb
sti
nop
add
cwtl
fwait
daa
fldcw
or
mov
mov
or
cmp
in
mov
push
loop
jno
outsl
adc
test
mov
mov
and
orl
sub
fwait
pop
xchg
push
enter
aas
sub
xchg
adc
ret
aam
sbb
xchg
ret
mov
adc
jg
mov
mov
ret
scas
or
cmp
sub
adc
and
imul
aam
inc
aas
orl
jle
lods
jge
sub
daa
cwtl
sbb
sbb
or
inc
or
xor
and
idiv
and
or
lods
leave
pop
mov
cmp
leave
or
outsl
fwait
mov
sbb
adc
mov
les
iret
pop
rcr
cs
test
sahf
adc
and
out
or
mov
fnstenv
inc
test
cmc
jl
or
mov
add
xor
adc
xor
xor
dec
cmp
mov
cmp
mov
xchg
xchg
cld
incb
add
mov
ja
sub
gs
sub
mov
mov
lods
dec
pop
loopne
nop
dec
ror
sbb
xchg
xchg
js,pn
sub
out
mov
sti
and
idivl
push
xchg
mov
and
add
dec
dec
mov
addb
fimull
jle
sbb
mov
mov
fdivr
push
nop
sbb
fcoms
sbbb
cmp
mov
ljmp
add
sub
mov
scas
sub
adcl
sbb
dec
test
pop
add
push
adc
push
xchg
mov
lret
es
sub
addb
inc
sbb
pop
pop
push
outsb
test
adc
jg
add
add
in
cld
mov
xor
stc
xchg
add
icebp
sub
sti
iret
sub
lods
mov
dec
enter
fcoms
add
out
fisttpll
mov
mov
xchg
pop
add
or
popa
add
or
and
mov
adc
repz
ja
mov
add
inc
mov
leave
popl
test
mov
add
adc
fsubrl
jle
mov
mov
aad
and
aaa
cmp
aam
icebp
fsubl
cmp
cmp
add
out
mov
pusha
cmp
pop
sbb
xor
lahf
fsubs
xor
sub
mov
pop
stos
xor
std
cmp
add
jp
int
stos
insb
xchg
adc
and
les
xchg
sub
js
and
je
mov
adc
ds
in
dec
jge
mov
or
add
add
rolb
sbb
add
imul
or
rolb
jmp
push
cwtl
lret
sbbb
add
push
inc
adc
movsl
jecxz
xorb
sbbl
xchg
ljmp
stos
push
add
mov
scas
sub
addr16
std
insb
sbb
push
jmp
loopne
or
mov
adc
insl
adc
xchg
sub
add
jg
fimuls
pop
jp,pn
or
std
jae
lcall
xchg
scas
jl
lcall
iret
outsl
jl
mov
mov
jp
add
mov
std
push
idivb
std
mov
mov
ds
inc
mov
inc
testb
or
push
add
or
pop
popf
or
add
lahf
and
xchg
jp
add
outsl
ret
xchg
inc
test
inc
cmpsl
xchg
jl
in
sbb
loop
out
jle
jl
or
cmpl
inc
pushf
inc
add
lcall
xchg
inc
out
jbe
xor
nop
icebp
jp
mov
pop
jno
lea
test
outsb
setle
mov
jp
outsb
aam
int3
aam
cmpsl
jl
xchg
xchg
mov
aas
xchg
popf
mov
pop
mov
shlb
popf
mov
and
sbb
dec
daa
push
or
scas
test
test
rolb
and
mov
fdivrl
mov
jno
sahf
add
mov
jbe
ret
fldl
cmp
sahf
xchg
mov
xchg
jbe
cmpsb
loop
es
outsb
std
and
push
lahf
loope
pop
xor
aam
xchg
ds
out
xlat
jl
fisttpl
or
nop
test
dec
lahf
jbe
mov
xchg
inc
mov
or
mov
jns
roll
lret
shlb
aas
mov
inc
stos
dec
pushf
std
ss
aas
jl
add
xchg
inc
jp
mov
jmp
lahf
jp
loop
mov
mov
or
add
incb
loop
lret
mov
and
push
inc
lcall
mov
mov
mov
mov
add
mov
sahf
enter
sahf
mov
sbb
movsl
rorb
mov
jbe
std
inc
int
dec
push
or
mov
or
mov
test
imul
mov
rorb
aad
in
lcall
jns
jp
lret
lea
pop
jl
mov
cmp
arpl
mov
lea
leave
popf
lcall
pop
sbb
push
dec
test
es
mov
and
xchg
ud0
in
mov
das
dec
dec
rolb
sbb
inc
ret
addb
lea
cmp
inc
adc
vpcmpeqw
pop
popf
mov
jge
jg
cmp
mov
int3
decb
leave
ja
popa
xchg
or
xchg
adc
dec
xchg
nop
popf
cltd
ret
mov
mov
jno
iret
push
je
lds
dec
push
adc
popf
lods
push
mov
push
lods
and
lea
fwait
fwait
scas
lods
and
sahf
popa
sbb
or
aaa
scas
lcall
icebp
cmpsb
lods
or
out
mov
mov
mov
ret
out
push
out
lahf
dec
incb
mov
xor
mov
out
push
lret
popa
and
mov
cltd
in
pop
push
aas
outsl
xor
adc
pop
leave
dec
jp
pop
adcb
push
sub
mov
dec
push
pop
xchg
cwtl
inc
or
scas
outsb
mov
sbb
push
mov
xchg
pop
pop
sbb
in
movsl
xchg
push
xlat
ss
inc
mov
mov
xor
push
mov
sahf
out
test
push
sti
test
mov
mov
push
out
bound
push
scas
mov
shlb
pop
pop
mov
scas
mov
xor
push
cli
push
sub
psrad
cmp
dec
pop
dec
xchg
mov
loop
mov
jb
inc
mov
cmpsl
sub
push
lahf
sbb
lods
xchg
inc
and
lods
xchg
dec
lods
sbb
scas
mov
xchg
pop
ja
jno
xchg
inc
lods
cmp
add
stc
adc
pop
mov
mov
mov
iret
mov
and
stos
xchg
inc
xchg
mov
xchg
subb
adc
icebp
repnz
shll
or
add
sahf
xchg
test
subb
lcall
and
cwtl
mov
jb
lret
out
sbbl
add
cmpsb
push
push
push
outsl
rorb
addb
ljmp
outsl
mov
and
push
push
jns
push
mov
mov
sub
pop
ds
mov
lret
stos
lret
xchg
stos
dec
scas
pusha
push
dec
dec
movsb
rorb
dec
ficoml
jp
or
repz
in
sbb
sbb
out
dec
cmpsb
aad
leave
ja
mov
ss
mov
xor
inc
add
sub
loop
jbe
or
mov
mov
mov
sahf
call
push
xchg
fsubrs
ljmp
mov
mov
out
mov
jmp
adc
mov
call
into
loopew,pt
mov
in
in
mov
sbb
addl
ljmp
nop
pop
fcomp
fcoms
sarl
out
filds
into
iret
cmp
inc
sahf
and
mov
enter
int3
mov
int
sbb
loop
cmp
and
adc
xchg
addr16
or
lahf
lds
xchg
lds
rcl
ret
mov
les
xor
roll
nop
mov
jg
mov
mov
mov
mov
fildl
scas
push
fwait
scas
xchg
pop
divl
cmpsl
adc
or
shrb
inc
xchg
mov
int
push
fld
pushf
popf
adc
fsubs
cmp
cwtl
out
cltd
test
sahf
orl
xchg
sbb
lock
xor
add
push
or
subb
pop
test
mov
inc
inc
inc
cmp
ds
mov
xchg
pop
popf
pusha
int
dec
fbstp
sbb
test
mov
pop
dec
xchg
sbb
sbb
pop
sbb
pop
pop
in
sbb
dec
rorb
jb
outsb
test
bound
xchg
outsl
push
xor
sbbb
inc
mov
int3
icebp
es
mov
aas
mov
mov
dec
scas
push
ficoml
movsl
popl
inc
test
data16
mov
ret
clc
xchg
sbb
xor
xchg
or
mov
dec
mov
stos
or
repz
stos
mov
dec
lret
and
sbb
scas
clc
in
push
aaa
in
dec
inc
nop
push
es
lock
cmp
in
pop
rolb
xor
sub
sub
sarl
mov
test
xchg
shrb
repnz
call
dec
fidivl
push
lret
and
lds
ljmp
mov
jge
mov
cmpsb
mov
dec
mov
push
or
and
rcll
and
loop
cltd
jp
or
cmpsl
mov
mov
mov
dec
shl
mov
nop
fiaddl
xchg
sub
aad
and
inc
dec
xchg
xchg
lds
orb
inc
insl
bound
fisubrl
stos
pop
adcb
dec
xchg
ljmp
ljmp
ss
xchg
mov
dec
hlt
arpl
cmpsl
xchg
repnz
xlat
mov
xor
ficoml
and
xchg
mov
adc
cs
pop
mov
xchg
rcl
stc
dec
mov
loop
or
adc
xchg
insb
mov
lcall
leave
xor
sub
lcall
mov
popf
mov
lret
loop
sarb
mov
insb
mov
push
add
sub
sbb
push
inc
xchg
cmpsb
mov
xor
xchg
mov
lcall
pusha
mov
popa
xchg
add
aas
adcb
xchg
sub
movsb
mov
icebp
xchg
mov
mov
xchg
dec
loopne
or
cli
sbb
cld
cmp
jns
jbe
mov
std
pop
stc
incb
dec
mov
xchg
jno
jp
scas
jnp
mov
mov
insl
add
mov
mov
pop
add
mov
int3
jbe
hlt
rclb
sub
fsts
cmp
idivb
ljmp
mov
subl
ret
jl,pt
xor
test
pop
adc
xor
outsl
jbe
mov
pop
mov
cmpb
test
fstpl
dec
out
xchg
nop
xorl
push
jge
dec
int
addr16
int
dec
lcall
arpl
mov
push
out
push
sbb
dec
push
rcr
push
mov
push
sub
popf
or
push
push
adcb
out
pop
mov
ret
and
jnp
inc
pop
mov
fidivrl
nop
push
fsubrl
hlt
rcrb
dec
push
enter
xlat
mov
sahf
mov
or
jg
mov
cli
add
xchg
in
sub
pop
mov
repnz
mov
mov
inc
cmpsb
dec
jg
jbe
add
mov
inc
test
das
mov
mov
inc
dec
das
sbb
push
jb
xor
pop
pop
movsb
fiadds
jge
andb
lcall
push
nop
pop
or
dec
add
rorl
mov
or
pop
int3
addl
mov
jg
push
pop
mov
xor
dec
xacquire
andl
jbe
mov
mov
loopne
cmpsb
dec
jnp
bound
aam
cmp
pushf
mov
js
pop
add
adc
inc
mov
js
out
rcrl
cmpsl
inc
push
mov
mov
stos
jg
testb
xchg
push
xor
jbe
loope
out
push
lods
or
jnp
bound
mov
or
cmpsb
pusha
sti
out
cmp
sahf
xchg
dec
jg
xchg
inc
xorl
or
nop
push
shll
lret
aam
dec
lods
sahf
or
test
shl
or
cs
xorb
cmp
pop
lods
test
ret
dec
sbb
into
cmpsb
ja
xchg
jbe
in
orl
fdivs
push
push
jg
or
adc
cld
mov
addl
xchg
jge
lcall
jno
mov
call
mov
pop
cmpsb
sahf
fcoms
xchg
mov
push
mov
push
xor
je
loope
es
jg
and
cld
shrl
rcl
xchg
push
or
cmpb
adc
ret
inc
out
add
outsl
cmpsb
xchg
or
jle
pop
mov
jo
inc
pop
inc
lods
outsb
adc
xchg
dec
xchg
sub
push
cmp
int
add
rol
clc
lds
hlt
add
out
mov
mov
pop
cld
adc
pop
lods
scas
push
add
mov
lods
inc
mov
mov
pop
mov
pop
in
outsl
ss
xchg
mov
fildl
pop
shl
in
xor
add
sub
jne
push
inc
lahf
and
push
lret
into
push
sarl
nop
push
push
xchg
dec
mov
cmp
xlat
inc
testb
cmp
adc
rcll
sub
xchg
xchg
push
sub
out
push
ret
imul
pop
out
out
pop
stos
dec
xchg
and
insl
out
scas
push
mov
jmp
pop
into
pop
push
in
cmp
or
out
leave
rcrb
fisttpll
cli
testl
lds
popa
into
mov
jge
xchg
and
adc
shrb
xchg
push
cs
arpl
orb
aas
out
push
out
mov
mov
bound
jbe
movsl
adc
xor
clc
xor
push
cmp
adc
dec
out
adc
add
add
pop
xchg
mov
adc
cmpsb
jge
mov
test
ljmp
sub
sub
sub
push
xchg
sub
inc
xorl
fstpl
pop
subb
test
push
xchg
jle
xor
test
dec
sahf
push
dec
sbb
xchg
push
pop
inc
xchg
pop
es
pop
xchg
mov
sbbl
pop
ret
jecxz
pop
mov
xlat
incb
push
jmp
push
inc
and
dec
mov
mov
mov
xor
pusha
arpl
sahf
adc
lods
push
fcmovnu
mov
loop,pt
orb
sub
pop
adc
dec
sbbl
pop
sbb
mov
inc
inc
setp
xchg
ljmp
xchg
add
filds
test
cmp
cmp
jecxz
fsubp
clts
test
pusha
pop
adc
cmp
xor
pop
ds
push
pop
push
jg
outsb
rcrb
inc
lret
mov
movsl
dec
cmpsl
xchg
fbstp
push
mov
dec
mov
into
fimuls
adcb
ficompl
adc
ljmp
mov
orb
and
flds
mov
adc
push
loop
ss
repnz
cs
push
loope
push
stos
adc
data16
dec
dec
lods
shrb
or
shrl
imulb
leave
cli
inc
sub
mov
es
es
cli
push
ficompl
xchg
push
lods
jp
push
mov
and
inc
add
aad
mov
sub
adc
ds
xchg
mov
xchg
shlb
out
mov
into
mov
mov
outsb
repz
sahf
dec
lods
push
or
adc
sarl
test
mov
adc
add
push
bound
movsb
dec
xchg
dec
out
leave
xchg
and
nop
mov
pop
in
xchg
ja
es
push
xchg
push
add
xlat
pushf
inc
stos
pop
sub
cmp
out
movsl
push
push
inc
pop
out
daa
fstl
notb
fisubs
push
inc
push
fadds
xchg
outsb
call
movsb
mov
aas
adc
push
fsubrs
aas
xchg
adc
xchg
addb
into
xorb
into
dec
scas
cmp
nop
imul
push
fbld
sbb
mov
mov
in
popl
and
or
push
mov
out
xor
pop
lret
cmp
mov
xchg
pop
dec
mov
cld
fbld
aas
mov
jg
psrld
in
rcrl
cmp
xchg
push
test
addr16
lcall
pop
arpl
push
je
push
jl
popa
scas
adc
repnz
test
pop
fildll
xlat
jo
mov
mov
pop
xor
inc
adc
pop
add
xchg
push
lods
mov
dec
or
inc
xor
test
dec
inc
dec
jg
and
adcb
sbbb
aas
dec
jno
push
jge
xchg
mov
in
pusha
pop
mov
repz
jg
cmp
sub
rorb
adc
sarl
sahf
movsb
jl
adc
xor
mov
cwtl
and
inc
xor
addl
cmp
sub
sbb
nop
subb
out
in
push
or
push
adcb
lea
ljmp
ss
mov
sbb
ficoms
and
test
push
rorb
dec
shll
and
push
lret
mov
mov
and
loopne
montmul
cmpsb
cmp
into
jg
pop
and
xchg
fimull
aas
loop
add
inc
xor
dec
test
mov
mov
xchg
push
cmp
pop
orl
or
insb
or
mov
sbb
pop
test
jp
pop
loopne
mov
arpl
xor
add
popa
mov
sahf
loop
push
cmpb
xchg
xor
jb
leave
ss
or
imul
jp
scas
cmp
inc
out
push
clc
orb
shll
push
adc
xor
orb
enter
pusha
push
mov
xchg
test
lcall
add
pop
dec
ja
pop
test
test
arpl
pop
sarb
jb
adc
ret
cmp
mov
das
out
jmp
mov
out
idivl
and
inc
jg
cmp
dec
stc
pop
cs
stos
fildll
mov
cmpsb
dec
jo
stos
jg
and
pop
iret
outsb
es
daa
sbb
cmpsb
cs
jge
inc
mov
pusha
pop
xor
or
inc
inc
mov
cli
loop
xorl
inc
pop
nop
dec
mov
jg
pusha
push
adc
lods
push
test
pop
sbb
cmp
dec
loop
mul
sub
push
mov
sbb
ss
data16
inc
cmp
pop
sub
stos
jo
ds
xchg
movsl
ds
xchg
pop
jle,pn
fdivl
bound
xor
popf
push
gs
or
or
out
addl
es
xchg
ljmpw
push
out
dec
jns
xlat
lcall
outsb
sbb
mov
arpl
lock
xchg
push
mov
dec
jmp
adc
daa
ljmp
fmull
ret
xorb
int3
dec
lcall
dec
mov
cmpsb
xchg
pop
xchg
sahf
dec
pop
out
dec
push
nop
pop
cmpsb
or
inc
fstl
sbb
push
sahf
push
outsb
out
adc
pop
call
mov
inc
ljmp
clc
leave
push
inc
mov
rolb
es
adc
and
dec
ljmp
xchg
xor
sub
push
cltd
adc
mov
mov
dec
mov
mov
inc
push
jl
popa
cmpsb
and
push
aad
add
ds
xacquire
mov
ret
jbe
push
mov
stos
repnz
inc
jbe
les
jns
mov
ss
xchg
out
sarw
cli
xchg
cmp
xchg
and
fisttpl
scas
mov
mov
push
ljmp
inc
addb
pusha
popa
mov
fnstcw
pop
rolb
xlat
sub
stc
out
mov
test
dec
aad
fisubl
push
push
addr16
lods
scas
adc
lahf
outsb
ret
loopne
pop
mov
and
xchg
bsr
and
jo
popf
lahf
subb
mov
jl
in
stos
mov
ret
cmpsb
mov
fcompl
sub
pop
cmp
sbb
movsl
sub
add
inc
subb
iret
ds
jbe
xchg
mov
xbegin
mov
mov
dec
push
pop
stos
fisttpl
dec
lahf
leave
out
cmpb
mov
mov
test
sbbl
cmova
bound
sbb
mov
pop
jbe
xlat
arpl
out
addb
dec
les
lret
fldl
jg
movl
cli
stos
test
lods
cmpsl
fstpl
or
addb
xor
push
rcrl
or
lret
sar
das
xchg
clc
jo
loop
dec
bound
mov
jl
push
mov
lret
pop
test
lret
xorl
and
or
sbbb
xchg
cmp
scas
ss
fcoms
sbb
or
pop
cs
inc
xchg
iret
fisttpll
sarl
out
leave
push
xchg
lahf
inc
notl
inc
leave
xchg
shr
xchg
jmp
and
jbe
xor
and
leave
and
adc
mov
add
inc
ss
dec
addl
shll
jg
xchg
adc
ljmp
xor
cmp
xchg
imul
outsb
mov
pop
mov
xor
dec
das
and
jbe
ret
xor
lcall
mov
pop
pop
push
fsubl
mov
adc
adc
pop
stos
pop
add
mov
dec
stos
xchg
dec
push
testb
mov
cmp
jg
pop
add
push
pusha
fcmove
repnz
and
push
add
push
xchg
add
popa
mov
mov
dec
inc
notb
or
mov
orb
pop
dec
inc
pop
repnz
int3
loopne
mov
mov
pop
cmp
adc
add
or
mov
push
addl
mov
dec
push
xchg
push
adc
jmp
loop
adc
mov
outsb
andl
leave
push
and
push
push
imul
dec
inc
scas
mull
ds
imul
jbe
hlt
enter
xchg
dec
push
push
repnz
xor
jo
push
lret
movsl
push
call
fidivrl
adc
push
mov
pop
jmp
cmpsl
outsb
in
jg
adc
dec
sbb
xchg
push
mov
lret
push
stos
mov
ficoml
or
into
push
shlb
sbb
nop
fcmovbe
outsb
xchg
out
mov
push
fimuls
dec
test
mov
adc
out
ficompl
movsl
lock
push
xor
cmpsb
jbe
ss
ljmp
cmpl
divl
mov
mov
push
push
inc
leave
imul
fisttpl
pop
xchg
mov
cmc
inc
mov
loopne
xchg
fidivrl
out
xchg
pop
mov
push
es
movsl
mov
xchg
xorb
or
pop
inc
xchg
es
fcmovne
movsl
subl
mov
outsb
pop
adc
or
mov
dec
ds
orb
fcoms
enter
lea
bound
sbb
dec
cwtl
cmpsb
rorl
adc
out
movsb
pop
or
fimull
and
loop
sub
bnd
stos
int
out
dec
sbb
xor
and
push
int
outsb
cmp
xor
mov
sub
jg
or
xchg
aas
sub
inc
adc
xchg
test
adcl
dec
mov
push
mov
enter
orl
jg
cmp
movb
inc
push
cmpsl
mov
mov
scas
jg
xor
into
mov
xchg
mov
mov
outsb
push
adc
push
jne
outsb
fcomi
movsb
jge
adc
sub
push
push
and
mul
and
inc
cs
inc
adc
bound
notl
push
push
mov
call
daa
loop
dec
jae,pt
push
lds
mov
cmpsb
pop
xchg
jg
sbb
test
push
xor
js
jl
push
je
dec
lret
push
testb
aas
ljmp
cmp
mov
call
jle
call
inc
jl
jnp
test
dec
jg
mov
mov
xor
leave
jg
inc
fldl
fmulp
adc
mov
adc
mov
repnz
add
jl
rcr
cli
xchg
sub
xchg
jbe
add
or
idivb
push
jbe
adc
mov
into
sub
xchg
sbb
movsl
mov
mov
popa
jo
ds
sbb
loop
jo
mov
pop
adcb
sub
lret
jle
add
lcall
int
sub
scas
add
or
mov
dec
dec
inc
push
fdiv
inc
xor
mov
xor
add
push
sbb
hlt
out
ret
movsl
pop
subl
in
leave
jp
rol
push
popl
cli
movsl
into
inc
add
jno
je
fs
std
bound
sub
mov
cmpl
mov
mov
add
jl
add
in
jbe
jl
loopne
outsb
in
mov
mov
jns
or
in
sahf
xchg
jl
mov
add
iret
loope
cmp
loop
outsb
fs
inc
jnp
xchg
mov
jge
pop
add
bound
add
test
or
dec
mov
jnp
cld
std
sahf
ja
mov
pop
pushf
push
pop
outsb
popa
rorb
mov
std
or
push
sahf
xchg
or
pushf
xchg
mov
xchg
popa
lock
xor
jmp
lods
push
mov
std
stos
mov
ret
adc
lret
xchg
push
xorb
rorb
jmp
fldl
jbe
dec
push
mov
mov
push
subb
popf
and
mov
int
imul
dec
mov
test
xchg
scas
sub
arpl
inc
ds
lcall
and
imul
lcall
or
rolb
divb
and
test
inc
adc
lods
ret
add
mov
out
test
rclb
out
cmpsb
mov
mov
lods
inc
cmpsb
sbb
adc
ss
jg
sbb
and
es
scas
out
push
push
lods
add
roll
test
sbb
jae
jmp
test
in
xor
push
dec
lcall
sbb
bound
adc
push
dec
outsb
cmp
push
jno
test
sbb
add
dec
in
push
cmp
mov
outsb
xchg
sbb
fstl
xchg
lods
sbb
stos
ret
dec
ret
push
jg
pop
mov
ljmp
test
inc
or
adc
jns
fsubrl
imul
lret
xchg
push
xchg
xacquire
adc
fsubs
push
fmuls
dec
mov
add
dec
push
push
ficoms
mov
pop
add
shlb
clc
xchg
xor
add
pop
and
mov
and
fildl
adc
push
or
inc
xchg
cmp
adc
jbe
leave
cmp
fsubr
mov
les
nop
arpl
lcall
fisubrs
dec
adc
pop
add
mov
ret
fcmove
pop
pop
mov
data16
adc
enter
mov
adc
or
ret
scas
dec
sub
cli
js
mov
out
dec
test
mov
dec
xchg
out
inc
sbb
addb
ss
lret
push
dec
fsubr
cs
adc
subb
adc
push
dec
and
mul
or
mov
scas
xchg
dec
int3
idivb
add
sbb
leave
ffreep
mov
aad
add
ret
pop
ss
ds
pop
adc
mov
jbe
hlt
outsb
aam
lods
nop
pop
cld
sbb
es
cs
test
call
cmp
mov
ficoms
push
mov
sbb
dec
lock
pop
outsb
xorl
mov
xchg
xchg
cmp
stos
sbb
mov
sahf
ficomps
mov
jg
cmpsb
mov
push
cmpsl
push
mov
xchg
inc
push
loop
cmp
out
cmp
mov
mov
add
pop
push
outsb
sub
lods
iret
push
mov
mov
pop
or
xchg
mov
xchg
xchg
inc
add
leave
add
in
repnz
test
adc
dec
scas
cs
and
adcb
dec
nop
push
stos
xor
mov
dec
cli
jmp
out
add
pop
push
clc
sahf
enter
or
cmp
adc
int3
inc
cmp
mov
lret
inc
mov
inc
xchg
out
push
mov
push
stos
pop
ja
mov
rorb
jge
xor
sbb
adc
int
xchg
out
lods
dec
push
xchg
mov
cli
xor
mov
imul
pop
push
sbb
in
call
sbbb
jle
rclb
pop
sahf
orb
ja
sbb
jb
subb
data16
test
mov
cmpsl
pop
jo
inc
fists
lret
data16
mov
add
pop
add
sub
shlb
mov
jp
adc
in
push
and
cmp
ja
mov
ret
rclb
ss
sub
and
xchg
pop
lcall
xor
xchg
mov
daa
and
add
data16
xchg
xchg
and
call
into
adc
ficoml
mov
adc
lret
push
push
negb
loop
out
call
movb
aaa
incb
pusha
mov
push
mov
daa
jbe
sbb
jbe
or
xor
aad
pop
lods
dec
dec
push
inc
adc
push
xchg
scas
push
test
push
sub
loop
push
test
lahf
and
ret
das
jo
adc
nop
sbb
mov
and
push
or
inc
dec
lret
cmp
es
out
mov
xchg
or
out
in
mov
das
pop
stos
cmpsb
inc
ret
inc
pop
inc
or
mov
cmp
adc
mov
lret
testb
push
ljmp
and
ss
sahf
mov
dec
mov
lcall
popa
xchg
mov
std
or
popa
sahf
loope,pn
pop
mov
adc
pusha
cs
sbb
movsb
xchg
sbb
clc
iret
or
push
or
jbe
cmp
xchg
adc
dec
mov
loopne
xchg
call
leave
aaa
mov
out
bound
xchg
aas
xchg
dec
gs
mov
and
push
mov
pop
cltd
jbe
ret
pop
fimuls
inc
out
loope
fimuls
mov
jp
stc
mov
ljmp
xchg
sub
cmpsb
fildll
xchg
andb
xchg
adc
repz
push
out
out
sbb
or
mov
pop
popf
mov
bound
xchg
or
xchg
push
mov
add
lcall
cmpsl
push
adc
rorb
add
loop
ficompl
addr16
xchg
into
cli
outsb
mov
dec
dec
addb
adc
pop
push
adc
jge
jb
outsb
push
loopne
into
push
push
out
ljmp
adc
test
xchg
adc
push
xor
ja,pn
xlat
mov
das
stos
adc
shrb
out
sbb
and
adc
cld
xor
dec
adc
jbe
into
jmp
push
stos
push
dec
andb
test
inc
sub
fmul
adc
jmp
bound
mov
push
faddl
loopne
int
sahf
jg
inc
dec
inc
pop
cmp
push
out
pop
loop
mov
xchg
cmpsl
xchg
shll
lret
shlb
xchg
fiaddl
xchg
jo
lret
mov
mov
xchg
popf
or
push
and
push
mov
push
inc
ds
pop
pop
mov
push
cltd
shlb
es
cmp
mov
das
dec
mov
pop
xchg
mov
mov
and
aaa
xor
inc
repnz
inc
iret
ficoml
loop
pop
sub
bound
mov
mov
pop
dec
mov
jae
lret
xchg
xchg
pop
cmp
or
fdivs
lods
add
aam
ret
dec
stc
inc
repnz
push
sbb
cmpsl
stos
int
mov
sbb
jb
adc
push
add
aad
bound
out
mov
dec
ficomps
jg
repnz
mov
mov
rorb
push
sub
jb
push
ja
mov
cmp
fmull
arpl
ljmp
repnz
and
mov
in
sub
xor
pop
cmp
dec
inc
jp
push
int
fsts
xchg
leave
push
adcb
mov
push
xor
ficompl
sub
out
mov
push
cwtl
popa
xlat
push
xchg
dec
aam
das
xchg
mov
push
add
pop
adcb
lcall
es
push
fisttpl
adc
jp
pushf
leave
sbbb
inc
ljmp
push
dec
sub
sbb
mov
mov
scas
out
loop
mov
jle
mov
inc
xor
push
inc
cmpb
jge
lret
push
jle
cmp
xchg
sbb
xchg
scas
mov
push
mov
es
incb
les
jb
mov
xchg
addr16
pop
loop
cmc
cmp
sbbl
add
push
add
push
adc
push
rclb
test
push
ret
push
inc
negb
cmp
scas
out
mov
mov
or
sbbb
sar
out
aam
push
movsb
bound
dec
adc
ret
into
xor
clc
decl
push
xchg
sbb
lret
pop
cli
enter
mov
add
push
movsl
xor
xorb
and
sti
pop
negb
xor
lea
mov
iret
push
ds
inc
leave
fmuls
add
push
ja
shlb
out
add
mov
push
scas
out
pop
push
addr16
mov
push
mov
imull
dec
inc
test
jbe
stos
cmp
pop
jg
fldt
mov
adc
push
arpl
ret
or
add
iret
andb
mov
cli
rolb
lret
cli
pop
xor
lret
mov
dec
cltd
addr16
inc
adc
in
stos
ds
sbb
lret
ds
mov
scas
scas
sarl
out
push
mov
mov
xchg
test
xor
roll
enter
aaa
mov
and
xchg
les
or
sbb
pop
jp
fidivrl
in
jle
sub
mov
adc
ret
xchg
cmp
inc
push
xchg
cmpsb
add
mov
xchg
inc
push
jo
test
dec
xor
and
jns
mov
mov
jnp
mov
mov
mov
fiadds
inc
xchg
lods
push
pop
pop
and
cmpsl
mov
sub
mov
xchg
inc
cmpsl
mov
pop
jle
and
pusha
out
loope
push
test
xchg
fwait
push
adc
mov
loope
popf
daa
inc
fistps
and
mov
es
dec
pop
ret
adc
repnz
hlt
add
rcl
push
mov
into
mov
flds
xchg
xchg
push
pushf
push
lods
inc
jp
mov
mov
jo
es
xor
push
bnd
dec
inc
mov
and
aas
jb
adcb
test
icebp
adc
or
xorl
add
sbb
xchg
cwtl
loop
scas
outsl
cmp
popf
aad
test
xor
fsubr
inc
nop
aam
lea
pop
mov
add
mov
addb
mov
xor
inc
dec
inc
sahf
shlb
mov
leave
bound
cmpsl
xchg
nop
stos
ret
mov
mov
jbe
mov
cs
das
mov
stos
or
test
mov
in
pushf
jle
lea
test
mov
mov
jg
roll
mov
jb
jge
push
lret
mov
jg
dec
rep
ds
jge
mov
in
dec
inc
ret
add
jg
jo
cmc
push
addl
js
aaa
mov
outsl
cmpsb
lret
pop
scas
inc
xor
cltd
sbb
mov
out
sbb
push
xchg
mov
xchg
xchg
outsb
icebp
dec
mov
vpsrlw
bound
lock
repnz
sahf
pop
sub
mov
scas
cmpsl
push
jg
mulb
fidivrs
pop
sub
test
cmc
and
inc
push
js
lcall
ret
jge
fiaddl
fisubs
xchg
lods
jge
lahf
push
add
ror
jp
orl
shll
xchg
sbb
jb
mov
mov
mov
push
xchg
fistps
hlt
test
sub
jnp
idivb
cs
gs
sbb
orl
bound
fmuls
xchg
cmpl
xchg
test
imul
jg
or
sbbl
iret
xchg
push
adc
push
pop
sbb
divl
lea
mov
jle
pushl
das
jle
mov
loopne
jle
lock
test
pop
outsl
loope
mov
jle
xor
movsb
ret
loop
ret
inc
and
mov
push
sarl
jecxz
xor
inc
push
repz
jno
movsl
adc
add
jle
inc
push
bound
xor
push
arpl
in
add
jle
xor
push
fs
lds
in
add
mov
jne
bound
mov
dec
add
shll
nop
cmpb
mov
decl
xchg
aas
rorb
mov
mov
adc
xchg
xchg
jp
outsl
cmpsl
mov
movsb
mov
push
iret
add
xchg
mov
cmpsl
jecxz
add
add
movsl
add
jge
add
repnz
adc
mov
jnp
jmp
xor
sub
push
mov
nop
sub
js
hlt
mov
cmp
cmp
arpl
and
sub
imul
sbb
hlt
push
jle
pop
movsl
pop
push
clc
sbb
test
jb
pop
dec
pop
jne
out
dec
shll
xchg
lea
loop
ds
jns
mov
mov
fstpt
push
jmp
push
fistps
cmc
jle
push
xchg
sbb
and
jle
jmp
test
movsb
sub
and
pop
sbb
ds
movsl
jb
and
mov
sar
jle
xlat
lods
aad
lock
jle
mov
nop
pop
push
out
dec
mov
push
sub
loop
push
in
push
movsl
inc
icebp
sbb
notb
leave
fcomps
mov
js
push
fimuls
das
std
dec
mov
fimull
pop
push
mov
ret
jle
stc
std
mov
mov
cwtl
jno
mov
jg
in
into
pop
adc
jae
jnp
jbe
loopne
fdivl
aad
push
lcall
sbb
xor
int
into
sti
pop
dec
daa
repz
ficomps
pop
and
jle
aam
lret
sub
ds
and
jnp
jle
in
les
cltd
or
push
add
push
dec
movsb
mov
xlat
mov
adc
flds
hlt
jle
repz
or
aaa
sub
sbb
aam
std
dec
adc
xchg
mov
or
sub
cmp
shrl
adc
jle
jno
pop
adc
jle
in
fidivrs
jle
push
pop
adc
addl
and
leave
iret
and
mov
mov
loope
js
mov
jle
jnp
daa
outsl
ret
jle
sub
or
clc
idivl
push
ja
aaa
add
std
ds
add
data16
jo
xchg
enter
jle
or
int3
add
mov
dec
out
leave
jle
mov
and
or
adc
mov
in
mov
fwait
mov
fidivs
mov
test
sub
jle
loope
rol
aam
stc
into
jg
add
in
jmp
ret
cmp
jae
lock
daa
loope
popf
enter
jle
test
cmp
adc
jnp
push
std
fcomps
addr16
shll
aas
loop
jp
jmp
in
insl
imul
cmpb
sti
add
addr16
das
lock
lcall
jle
pop
sbb
xchg
dec
stos
cmc
adc
mov
jb
jle
ret
jle
pop
jne
push
cld
fmuls
add
push
sub
cmp
sub
sbb
xor
add
pop
pop
stc
push
push
test
mov
push
mov
es
or
jno
in
sarl
xchg
into
sti
dec
add
in
jo
and
sbb
sbb
push
mov
or
xchg
fsubp
dec
mov
sbb
stos
xor
jae
lods
addr16
popa
add
data16
jle
mov
mov
jle
jns
cmp
jle
push
push
fdivrl
aaa
push
cs
jns
dec
jecxz
lds
mov
sbb
cmp
pop
push
pop
sub
sub
out
in
sti
xchg
enter
cmc
jle
xchg
pop
sbb
hlt
or
lods
daa
or
lcall
jmp
fsin
sub
loope
push
xchg
incb
dec
sbb
dec
sti
inc
dec
lcall
mov
mov
ss
push
imul
mov
imul
lea
push
fstps
jbe
loopne
push
cmp
jl
add
in
xor
sarl
loope
lea
pop
jle
xlat
js
invd
jmp
jle
adc
cmp
jle
cs
imul
push
jl
iret
push
pushf
sbb
jle
push
inc
sarb
jle
pop
inc
aam
jnp
jle
pop
sbb
mov
negb
xor
rolb
imul
popf
sarb
cli
test
jle
aad
cmp
add
cmpb
push
or
imul
sub
add
incb
jle
hlt
aam
pop
aas
imul
cmp
xlat
mov
pushf
inc
andl
push
pusha
lahf
xchg
loopne
imul
psubusw
testl
pop
jb
cmc
jo
movsb
loop
jle
int3
mov
xchg
jmp
jle
pop
lock
inc
mov
rolb
loope
push
int
cli
subl
pop
mov
inc
xor
pop
jle
fidivl
jae
enter
movsb
sti
in
sub
movsb
ret
fnsave
mov
loope
mov
cmp
pop
adc
cs
sub
cmc
jle
fsubr
jmp
insb
testl
shl
cld
xor
jle
xor
and
out
mov
addb
gs
nop
inc
cltd
add
sysenter
inc
mov
inc
push
sub
ljmp
aam
pop
fdivrl
lahf
aas
add
cmp
mov
addb
jmp
lret
fistpl
mov
lds
jae
ds
cmpl
shrl
repz
psllw
mov
dec
sbb
cmc
jp
call
sbb
sub
cmp
jle
mov
js
dec
outsl
orl
xchg
je
push
and
or
jno
adc
xchg
jo
sahf
push
mov
pushf
xchg
mov
notb
jle
inc
lock
dec
push
push
mov
xchg
and
adc
adcl
jb
pushf
or
jl
aaa
gs
mov
int3
test
movsl
rolb
push
addr16
inc
scas
pop
mov
out
lds
mov
inc
stos
jle
mov
sbb
jg
mov
fsubl
mov
jo
sti
iret
imul
add
or
xor
adc
mov
imul
fadd
jl
es
push
and
pusha
jne
ret
cmpsb
jp
sbb
or
jb
dec
inc
popf
pop
lods
mov
lcall
jp
push
jle
js
jae
and
dec
jnp
ljmp
sti
test
lds
fs
jo
or
sub
out
add
popa
or
int
mov
mov
outsl
jl
es
bound
pushf
clc
fucomp
pop
cmp
shlb
js
imul
cmp
pop
xchg
arpl
int3
mov
jne
jns
mov
std
adcl
jg
aas
sub
fistpl
std
push
in
shrb
jmp
lcall
mov
rclb
mov
xorb
push
mov
mov
push
call
inc
push
or
sbb
pop
lds
xor
je
and
push
test
jae
jmp
mov
or
jmp
cmp
push
shrb
push
rcr
lods
scas
ds
nop
lret
subb
sub
add
xorb
mov
lcall
mov
xchg
pushf
rorb
jno
xchg
mov
push
inc
mov
mov
ret
repnz
icebp
mov
cmpsl
mov
pop
sbb
xchg
loopne
mov
stos
mov
shlb
out
out
pop
jge
jg
xorl
shll
cli
fsubs
adcb
mov
cwtl
ret
push
jg
dec
gs
inc
sti
incb
add
push
and
xchg
ljmp
mov
jg
repz
cmp
cld
test
in
jns
loop
jbe
cmpsl
loope
leave
sbbb
rcr
mov
jecxz
repnz
mov
roll
sti
popf
test
in
pop
fwait
jecxz
aam
lret
add
in
nop
xchg
test
dec
test
xchg
jno
push
lock
adc
jmp
mov
int
add
or
mov
jecxz
scas
cmp
out
jl
stos
mov
jmp
sahf
movsb
jle
lea
ret
sbb
les
jecxz
test
in
testl
arpl
lret
std
dec
xchg
xchg
xchg
add
xchg
lock
mov
test
lea
test
and
scas
push
subb
lods
mov
lods
test
in
jp
adc
jo
scas
rol
xchg
add
xchg
int
popf
icebp
mov
enter
iret
mov
enter
mov
out
inc
pop
cmpsb
mov
jns
out
outsb
and
aaa
or
loopne
inc
jg
mov
ret
in
xor
xchg
enter
push
lahf
xchg
shl
push
push
orb
movsl
loopne
movsl
pushf
into
test
xchg
jecxz
xchg
leave
mov
cmpsb
rcll
cs
test
test
pop
xchg
and
repnz
lods
fists
push
push
out
scas
jb
outsl
aas
mov
incb
mov
cld
mov
mov
nop
aad
lret
scas
inc
out
sarl
dec
roll
int3
shl
inc
jmp
cmpl
dec
xchg
ljmp
lcall
xchg
lods
and
mov
lret
into
insl
or
pop
out
dec
ds
stos
mov
imulb
int3
cmc
in
push
jae
add
movsl
cmp
jg
in
rol
lret
int
fwait
out
icebp
ss
mov
in
xor
mov
icebp
in
stos
ret
add
imul
mov
mov
dec
in
insl
addr16
scas
insb
xor
jmp
pop
out
mov
fbld
mov
dec
js
mov
repz
mov
mov
lods
stos
loopne
sahf
sub
jns
push
imul
jecxz
mov
loopne
pushf
loope
fistpll
mov
push
xchg
icebp
jecxz
mov
repz
xchg
rcll
lock
lcall
mov
mov
aad
lcall
ljmp
lahf
sub
clc
mov
rcl
mov
loop
xchg
push
mov
sahf
cmp
loop
jnp
mov
shll
jecxz
or
jb
xchg
mov
xchg
lock
cmp
mov
out
lea
cmpsb
fwait
or
scas
sbb
rol
and
div
and
fsts
lea
repnz
mov
mov
lods
xchg
aam
cmp
insl
jmp
mov
add
hlt
mov
xchg
pop
rcl
inc
push
sbb
xor
test
mov
mov
mov
lcall
mov
loop
push
test
jmp
lods
xchg
xor
sbb
stos
arpl
add
lret
or
pop
fs
inc
jbe
loope
sub
jo
adc
ljmp
mov
mov
arpl
lea
outsb
sub
imul
mov
clc
jecxz
movb
insb
stos
mov
in
jmp
push
jno
orl
lahf
xchg
cs
add
xchg
jecxz
mov
call
sub
push
fs
xor
cs
mov
sbbl
addl
shl
pop
push
xchg
mov
cmp
sub
enter
mov
sbb
cli
or
arpl
inc
out
pop
and
inc
adc
lcall
pusha
sub
push
lret
pushf
pop
sti
mov
icebp
dec
mov
sub
iret
jl
ret
xorb
scas
loopne
mov
jle
outsb
mov
sarl
adc
xor
icebp
inc
jle
ret
and
mov
jle
loop
inc
push
pusha
xchg
add
jle
les
xor
push
shll
jno
loop
jecxz
add
fistpl
jle
out
push
jle
es
push
data16
jle
xlat
out
pop
pop
daa
jle
inc
push
addr16
mov
clc
or
sub
dec
nop
pop
push
int3
ror
test
cmp
lods
dec
adc
adc
das
outsb
xchg
aas
push
sub
shl
lock
mov
mov
roll
adc
mov
inc
test
push
mov
ret
das
adc
xchg
andb
shll
cmpsb
cmpsl
iret
push
sub
xor
fistpl
lcall
lret
ret
jns
or
xchg
hlt
jle
push
push
sub
aad
xchg
sub
fisttpl
ds
xor
into
xlat
push
test
iret
aam
jle,pn
mov
xchg
jle
icebp
inc
popf
jno
cld
mov
push
mov
pop
lcall
mov
lahf
add
in
orl
and
stc
mov
jg
mov
dec
jb
push
jge
ljmp
outsb
popa
pop
fimuls
lahf
cmpsl
dec
jle
mov
sahf
in
jle
cs
testl
pop
imul
add
jg
movsb
sbb
dec
xor
fcmovnu
add
inc
push
movsb
xchg
test
and
mov
jle
js
pop
inc
adc
mov
jecxz
clc
lods
out
jnp
je
inc
inc
repnz
lret
lea
xor
fldln2
lahf
inc
mov
mov
mov
jl
inc
inc
push
push
lcall
cli
sub
push
mov
dec
pop
add
mov
mov
lds
int
test
sub
dec
push
mov
mov
push
sub
imul
test
push
lods
inc
mov
test
mov
lahf
push
mov
pusha
nop
addl
pop
cmpl
xor
pop
jle
jp
mov
lods
pop
fs
push
dec
sub
nop
pop
mov
lret
dec
mov
std
xchg
xchg
jle
and
cmpsl
xlat
test
jle
pushf
lahf
xchg
sti
xor
jle
jecxz
popf
leave
sbb
lods
mov
or
in
mov
fstl
jg
dec
add
and
cmp
aas
cmp
and
aaa
adcb
jle
cs
or
add
fadds
dec
push
into
outsl
ss
lea
out
adc
adc
jp
xchg
sub
sahf
clc
xor
jno
jle
sbb
adc
lock
imul
inc
push
inc
pushf
sbb
lahf
push
mov
popa
push
fs
stos
dec
adc
mov
loope
fsubrp
jno
sbb
jle
sub
pop
inc
cmp
xor
shlb
jle
lahf
jmp
cmpsl
jle
pop
ljmp
adc
sub
jns
mov
mul
jle
cwtl
cmp
pop
inc
add
cmp
in
lret
ret
dec
ja
push
xor
mov
mov
mov
stc
decb
and
jg
pop
out
push
in
jb
jle
jmp
mov
jle
daa
jmp
addr16
aaa
pop
orl
pop
fdivrl
add
and
aas
push
mov
cmp
inc
stos
aaa
cmp
dec
pop
fistpl
sbb
icebp
mov
cmpsb
outsl
test
insl
jg
xchg
inc
roll
pop
pushf
cwtl
lea
cld
and
mov
fs
sbbb
jnp
or
out
out
lcallw
aam
add
js
xchg
xchg
les
jle
inc
push
mov
mov
adc
dec
xor
mov
jb
inc
in
and
les
lea
inc
jbe
adc
jno
cmp
dec
xor
ja
mov
sbb
mul
dec
subb
je
hlt
push
xor
jle
testl
jle
aaa
and
in
cs
mov
in
adc
movsb
ds
pop
pop
ja
insb
jb
stc
fwait
push
adc
mov
in
mov
lcall
jg
icebp
adc
xchg
inc
pushf
push
js
gs
clc
movsl
adc
std
dec
cmpsb
jle
sub
sti
and
leave
test
inc
adc
jle
icebp
mov
bnd
test
pusha
shlb
sbb
and
lock
add
adc
cmp
fwait
xor
mov
rolb
dec
mov
or
xchg
test
stos
jl
ja
shll
arpl
bound
mov
xor
jnp
mov
xlat
and
mov
fwait
cmp
push
and
dec
jle
mov
inc
inc
lea
pop
adc
call
fisttpll
inc
mov
or
jns
pop
out
pop
jle
mov
cmp
hlt
dec
mov
jle
jno
adc
push
test
std
sub
mov
or
iret
enter
arpl
jb
clc
push
imul
hlt
mov
je
and
stos
outsl
pop
jle
or
push
add
pop
inc
jle
add
jo
cmp
int
mov
lret
jmp
cwtl
jle
addl
inc
pusha
sub
inc
jle
and
mov
add
scas
push
adc
ss
ret
icebp
gs
jle
cmpsb
addr16
dec
jl
aam
sbb
repnz
and
jno
test
cmp
mov
or
cmp
shlb
andl
in
push
mov
lock
inc
cmpl
pop
fiaddl
sti
sub
jle
lods
dec
xchg
mov
scas
fwait
sbb
aad
jle
mov
jmp
popf
fs
and
lock
pusha
xchg
pop
aam
cld
fmull
ds
xchg
stos
dec
jle
iret
push
sub
add
outsl
jle
mov
or
jle
pusha
lock
popf
dec
mov
pop
lahf
andb
dec
cli
push
jle
mov
insl
pop
jle
mov
sub
add
mov
js
ret
sbb
jb
or
scas
sub
es
popf
dec
test
mov
push
loope
sarb
in
mov
sub
out
pop
sub
sti
xchg
subl
mov
mov
andl
sub
fwait
movsl
dec
sbb
cmp
push
js
add
dec
pop
in
jle
lret
lahf
loop
mov
mov
rcl
xchg
cmpl
clc
pop
dec
neg
xchg
mov
dec
popa
jecxz,pn
test
scas
inc
rcrl
sbb
jle
mov
or
test
dec
mov
gs
dec
ds
adc
jnp
in
je
scas
arpl
xor
push
mov
or
jle
cmp
shlb
call
sbb
mov
pop
xchg
push
ds
pop
dec
repz
sbb
mov
push
xlat
and
mov
dec
lret
jle
add
or
push
aaa
fildl
arpl
sub
fldl
jle
sub
aad
mov
lds
sub
sbb
jg
xor
insb
mov
imul
jle
and
and
jg
std
popf
push
ja
in
pop
dec
gs
inc
loop
jle
push
xchg
mov
pop
fcmovb
add
bound
jle
ss
mov
daa
popf
call
pusha
mov
cmp
cmp
lods
push
jle
loope
xlat
mov
mov
jle
mov
lds
mov
lea
pcmpeqd
popf
dec
aad
mov
adc
mov
jle
dec
push
mov
sub
add
aad
push
aam
loop
enter
icebp
cltd
mov
xor
xor
sbb
into
mov
fucomp
sub
shrl
bound
hlt
adc
lret
push
xchg
adc
test
call
mov
cli
sbb
jo
movd
in
mov
jp
das
xor
xchg
cs
test
mov
xlat
out
scas
jg
pushf
xchg
hlt
movsl
cmp
fwait
lods
pushl
xchg
xchg
ja
adc
popa
push
push
cmp
repz
mov
pop
add
push
jle
nop
sahf
std
aad
jne
sti
jp
and
sarb
jae
movsb
addr16
orl
mov
mov
sbb
scas
jg
sahf
mov
mov
xor
adc
jecxz
mov
push
mov
std
dec
int3
jl
push
sbb
fs
mov
stc
dec
ss
ds
mov
jg
jmp
shrb
or
stos
jle
inc
push
jno
ljmp
mov
dec
jle
aas
pop
je
rorl
mov
jecxz
mov
push
push
ljmp
dec
sbb
jle
ret
pop
clc
pop
std
xorb
sub
adc
cmp
cmp
cmp
into
xor
mov
test
in
mov
mov
adc
nop
push
inc
jbe
jle
stos
out
in
call
fnstcw
xor
jle
jecxz
push
out
movb
js
xchg
mov
sub
movsl
jle
cld
lret
dec
cli
pop
and
clc
fdivl
lret
jle
icebp
scas
adc
lock
imul
and
sarb
nop
xchg
scas
mov
jle
mov
pop
pushf
lcall
jmp
jg
pusha
repnz
sbb
les
mov
lcall
dec
pop
fiaddl
push
icebp
outsl
pop
or
fs
adc
loopne
jle
movsl
xchg
inc
fidivs
mov
adc
dec
mov
std
dec
test
enter
movsl
add
mov
jle
scas
negl
sti
xchg
jle
mov
call
jle
xor
sahf
add
jmp
je
push
lds
clc
or
ret
jmp
clc
mov
push
dec
loopne
push
mov
pop
mov
pop
jle
xchg
gs
fcoml
mov
pushf
cli
ret
mov
fs
stc
addr16
jle
jp
push
lret
daa
jle
mov
dec
lds
mov
mov
in
inc
out
sub
mov
jns
jne
mov
fiadds
cmp
sub
lea
lock
popf
push
lcall
pushl
xchg
dec
pusha
cmp
aad
jg
jno
xor
jo
dec
jmp
lea
bnd
or
aad
push
das
pusha
clc
jle
mov
push
and
in
inc
ret
push
insl
popf
dec
jle
popa
dec
pop
jae
outsb
mov
cmpsl
fidivs
jle
fdivrl
mov
cmp
inc
subl
sbb
mov
pop
fdivs
mov
scas
fs
fsubl
les
lcall
mov
mov
xor
xchg
shlb
lahf
jns
dec
mov
mov
mov
pop
jecxz,pt
inc
in
scas
mov
inc
in
cmpsl
std
ret
jle
mov
cltd
jno
sbb
pop
or
decb
jle
sbb
shl
mov
stos
xchg
aaa
mov
enter
lock
testl
pop
stos
xchg
outsl
loopne
inc
mov
jbe
pop
jp
jmp
pop
stc
jmp
in
cwtl
mov
mov
mov
int3
ss
and
sub
push
jle
mov
and
mov
fs
adc
mov
bnd
dec
imul
sub
pop
xor
inc
sbb
jmp
jle
jbe,pn
testl
mov
push
jns
fldcw
out
pop
mov
sbb
outsl
leave
subb
jle
mov
inc
les
addb
testb
ds
test
mov
pushf
and
push
mov
mov
jo
add
jle
add
lret
test
out
clc
leave
lea
insb
mov
xchg
mov
xchg
xor
outsb
dec
test
pop
inc
push
and
mov
call
out
jle
popl
int
das
jle
outsl
in
out
xchg
push
jg
loope
loopne
jb
scas
push
stc
mov
ja
sub
cmc
dec
mov
ficoms
clc
fidivrs
stos
testl
stos
ds
xor
push
int3
xlat
xchg
pop
cltd
or
jle
push
stos
rorl
scas
in
cmpsb
xchg
cmpsl
adc
sbb
mov
push
je
and
xchg
lods
and
nop
inc
lcall
mov
mov
cmp
pop
fs
bound
arpl
icebp
mov
out
jle
and
or
xor
aam
jne
ja
push
imul
test
or
int3
dec
out
fwait
sbb
loop
xor
scas
nop
lea
jecxz
ss
imul
jle
popa
sbb
daa
push
pop
xchg
or
ljmp
imul
sahf
lock
daa
sub
xchg
adc
and
or
cs
jle
stc
push
sub
outsb
into
jle
mov
outsl
mov
out
jle
push
mov
inc
mov
call
fistl
cli
mov
mov
xor
out
ds
lds
rcl
xchg
lret
jle
and
ljmp
dec
mov
imull
mov
hlt
xor
sti
mov
or
jle
sub
test
add
jle
add
pop
int3
sub
xor
fistpll
mov
in
data16
jle
in
or
imul
addr16
adc
mov
lods
jle
inc
scas
test
jbe
jg
xor
sbb
dec
ja
fwait
xor
test
hlt
pop
sub
mov
jmp
lahf
test
in
insb
push
outsl
bound
gs
cmp
add
inc
ds
insb
xchg
mov
push
lret
repnz
jle
std
sbb
sahf
or
mov
mov
mov
lods
jg
mov
jge
jns
out
add
cld
add
cmpb
das
push
aaa
jle
sbb
jg
add
jle
lea
pop
pop
ret
popf
mov
je
xorb
push
stc
cmp
jle
mov
mov
jle
ds
sbb
xchg
jmp
inc
mov
data16
mov
je
mov
pop
std
adc
ret
dec
sbb
jg,pt
and
dec
popa
cwtl
aad
into
cmp
lock
fisubs
insl
repz
inc
in
sahf
cmp
fiaddl
jle
mov
in
mov
jle
xor
lods
out
push
out
call
jne
pushf
xor
pop
dec
dec
fs
popa
or
xor
orl
cmp
push
mov
bound
mov
xlat
xor
jle
and
pusha
dec
rep
or
dec
mov
or
dec
in
dec
je
push
pop
inc
xor
movb
jle
mov
icebp
inc
repnz
dec
or
ds
popf
jg
std
push
nop
inc
icebp
ja
mov
xor
jle
or
push
mov
aam
sbb
in
repnz
popa
pcmpeqw
addl
cmp
xchg
lea
sub
jle
jne
sbb
movsl
out
mov
cmp
fstpt
pop
insb
and
jle
jae
notl
adc
sub
shrb
jns
hlt
in
jbe
mov
out
jle
pop
ljmp
pop
insb
test
fnsave
std
adc
imul
cmp
in
sarl
jle
mov
sub
jle
inc
stc
and
jno
flds
stos
out
outsb
dec
inc
popf
clc
jne
ret
adc
lret
xchg
or
out
test
idiv
jle
js
mov
orb
ja
push
loope
cmpl
lds
scas
popf
insl
rol
cmpsb
mov
loopne
pop
adc
into
jg
orb
inc
pop
pop
push
jle
jo
inc
adc
pop
jg
in
xor
in
scas
orb
scas
xchg
mov
lret
push
ds
jae
push
out
mov
sbb
mov
push
jle
jo
int3
rcll
xor
push
loop
test
jmp
sahf
mov
dec
mov
std
rcl
fstps
repz
cmpsb
adc
sti
cli
push
jle
xor
subl
iret
adcl
cmp
jmp
mov
sbb
stos
jle
ja
dec
jl
jo
cli
cmpsl
jle
lret
jno
push
cmpsb
mov
push
inc
je
out
jg
add
outsl
popf
das
in
into
orb
in
dec
or
inc
xchg
jne
cmp
mov
jle
icebp
cmc
imul
ja
lea
jg
lods
pusha
xor
pop
mov
inc
aas
stos
lret
jg
movsl
mov
sti
sub
jg
jle
cmp
mov
jle
pop
mov
into
mov
fiaddl
xchg
lock
sbbb
test
adc
cmp
clc
inc
jle
push
add
in
adc
aaa
xorb
push
dec
test
xlat
arpl
cli
movaps
jle
inc
or
ljmp
xor
fsubp
in
jb
adc
jle
xchg
xchg
nop
mov
push
call
insl
in
xlat
or
jge
jns
popf
sub
jb
flds
push
xor
in
movd
out
jle
and
mov
xlat
jecxz
loopne
fs
add
and
mov
int
add
stc
push
mov
pushf
fwait
into
int3
jle
inc
in
inc
insl
movsb
enter
test
or
cmp
pushf
jle
sub
add
dec
lret
mov
mov
ds
dec
in
xchg
cmc
das
imul
mov
or
push
cmpb
or
pop
jle
push
push
mov
jle
aam
mov
jmp
jmp
andb
cmp
mov
lret
adc
mul
jecxz
in
int
ljmp
dec
mov
push
jne
jg
adc
ds
mov
fbld
leave
xorb
dec
mov
out
sahf
cmp
xchg
pop
ret
and
adcl
adcb
cmpl
sbbb
cmpb
addl
iret
adc
jmp
outsb
xor
mov
mov
outsb
int3
xor
xor
dec
les
jmp
dec
out
mov
data16
jbe
jl
xlat
cwtl
xchg
std
xorb
dec
popf
push
pop
inc
inc
xor
mov
out
pop
jge
sbbb
adc
shrb
jmp
imul
outsb
incb
test
xchg
jg
push
xor
cs
xchg
dec
scas
sti
idivl
push
sbb
and
xchg
addl
repz
fwait
inc
movl
sbbb
out
nop
inc
add
scas
ljmp
test
arpl
mov
jg
sahf
pop
mov
lahf
add
mov
in
pop
xor
xor
xor
js
xchg
jne
fs
add
mov
jns
or
mov
je
dec
xchg
loopne
pusha
lods
or
mov
lea
xchg
xchg
mov
mov
mov
insl
inc
inc
fdivs
xchg
es
js
mov
addl
lock
out
sbb
lcall
popl
les
les
xchg
or
nop
or
movsb
adc
xchg
xchg
xchg
mov
mov
lcall
cmp
bnd
mov
mov
in
repnz
xor
bnd
arpl
dec
push
lahf
cmc
push
add
dec
sub
adc
or
xchg
rcl
aaa
mov
adc
lock
daa
dec
jnp
jb
lds
cli
adc
jp
cmpsl
jg
roll
mov
sbb
mov
hlt
insb
inc
movsl
in
dec
pusha
mov
lds
jae
sbb
out
mov
cmp
aaa
or
add
jnp
xor
mov
daa
mov
aaa
mov
ja
sub
pushf
out
xlat
add
lock
dec
push
ret
push
fadd
jp
jecxz
aam
sbb
jmp
and
xchg
push
out
pushf
mov
inc
mov
mov
xor
cmp
and
inc
dec
pop
addl
outsb
test
out
xchg
fwait
xchg
andb
and
dec
dec
arpl
insb
in
inc
shll
popf
jg
andl
pop
dec
mov
lea
mov
fldt
and
ret
popf
mov
mov
lds
nop
add
xor
jg
add
pop
mov
test
mov
in
mov
mov
ret
enter
pop
jnp
lods
imul
rcrl
inc
imul
jecxz
test
xchg
and
add
cmp
cmpsb
add
pop
add
les
test
push
push
xor
xchg
xchg
test
adcb
rcrb
lret
mov
subb
inc
xchg
lods
xchg
mov
mov
dec
dec
out
mov
mov
aaa
adc
push
mov
mov
orb
jbe
cmpsb
or
test
lcall
sarb
into
jne
jmp
lcall
lret
test
loop
sahf
ds
mov
jb
lahf
test
hlt
xchg
cwtl
daa
mov
rol
cmp
ljmp
movsl
fidivrl
subl
subb
into
out
sahf
rcrl
ja
rorb
int3
mov
addb
rclb
xchg
xchg
into
cmpsb
pop
lcall
push
or
std
pusha
mov
lcall
test
pop
mov
int3
adc
stos
push
xor
add
stos
dec
mov
jbe
xchg
xchg
dec
in
ljmp
mov
mov
es
mov
mov
push
cs
nop
xor
lcall
sahf
inc
mov
or
ljmp
jns
data16
and
fisubrl
imul
fisubrs
pop
xor
stos
cwtl
lret
xchg
push
pop
ret
cmpsb
movsb
ret
jne
mov
push
hlt
add
movb
leave
es
xchg
ljmp
pop
sti
or
xchg
roll
andl
mov
notb
add
and
fstps
pop
xchg
xor
addb
push
out
lar
movsl
jp
fs
xchg
jl
or
test
mov
out
popf
and
jecxz
es
mov
jmp
mov
test
adc
movsb
lock
mov
cmp
add
xchg
out
xchg
xchg
adc
dec
lret
xchg
in
push
cmp
or
cmpsb
add
std
lahf
pop
lods
mov
cmp
add
push
xchg
inc
inc
xchg
lcall
sbb
push
loop
nop
out
xchg
lret
xor
pushf
stc
and
sbb
or
dec
leave
mov
andb
add
add
push
xlat
fisubl
out
sub
sub
mov
xchg
mov
cmp
cwtl
sarb
mov
xchg
clc
inc
in
rclb
sbb
stos
xchg
rcrb
in
mov
pop
stc
iret
iret
mov
or
lods
mov
pop
sub
jmp
mov
push
and
repnz
ret
xor
pushf
push
popa
lock
cmp
fiaddl
into
mov
inc
mov
mov
cmp
xchg
divps
xchg
repnz
pushf
xchg
xchg
enter
stc
add
out
shl
xchg
enter
das
pop
loope
in
sub
sbb
pop
lahf
mov
cltd
add
add
fimuls
xchg
lock
jae
orb
mov
mov
mov
xor
rcll
ljmp
out
pop
arpl
mov
dec
enter
call
jnp
ret
and
mov
in
mov
push
movsl
pop
in
fdivp
loopne
test
dec
mov
sub
sarl
pop
rcl
nop
repz
mov
lret
jmp
jns
sub
push
shrb
aas
out
push
nop
out
push
push
repnz
fcompl
test
xlat
and
sbb
scas
mov
push
cmp
aas
mov
outsb
lahf
lcall
adc
outsl
ret
dec
fisubrs
add
and
sbb
and
sbbb
mov
out
mov
mov
jge
inc
cwtl
repnz
pop
mov
lret
fcomi
add
mov
test
shrb
push
mov
mov
cmpsl
lcall
lret
adc
mov
ljmp
mov
daa
mov
pop
lds
mov
imul
out
push
jbe
push
pop
cmp
xlat
and
ljmp
adc
movl
sahf
ror
xchg
fmull
mov
mov
into
in
pop
and
lret
sahf
repnz
fnstenv
loopew
mov
xchg
es
mov
scas
or
dec
jle
or
mov
jle
cmpsb
movsl
insl
adc
xchg
mov
into
adc
sub
jmp
and
fisubrl
into
cwtl
or
ljmp
dec
inc
stos
divl
lret
mov
scas
mov
mov
mov
mov
push
pop
lods
mov
out
or
movb
dec
sbb
mov
sahf
xlat
ret
pop
in
push
push
dec
jae
adc
scas
lcall
adc
or
mov
hlt
mov
xchg
inc
out
mov
xchg
cwtl
lret
mov
call
aas
pop
sahf
rcr
mov
cmc
cmp
mov
jg
mov
leave
in
shlb
insl
sti
decb
sahf
mov
jb
movsl
pop
jl
iret
lcall
lods
jae
in
fsubr
lock
xchg
fdivl
inc
iret
jns
lret
mov
in
cld
mov
add
pushf
in
pop
xchg
rorl
fists
lea
jl
loopne
push
popf
and
mov
loop
sti
mov
xor
pop
int3
ret
add
xchg
ja
push
cs
data16
xor
xor
dec
pop
jnp
inc
mov
xchg
dec
pop
dec
xchg
mov
addl
gs
mov
out
ret
xchg
inc
lods
mull
pop
lcall
mov
xchg
mov
jb
adc
faddl
mov
movsb
jo
sub
and
pop
mov
mov
xchg
add
repnz
lods
in
faddl
int3
roll
ficoms
cmp
sbb
mov
or
fcomps
test
jl
out
cld
fdiv
jmp
testl
lea
test
sarb
pop
inc
lahf
cmpsl
mov
jecxz
scas
xchg
xchg
push
mov
jb
jmp
bound
mov
ljmp
mov
into
fwait
pusha
mov
mov
fistpll
mov
scas
stc
mov
jmp
clc
sub
or
lahf
lea
cmpsb
movsl
mov
jmp
fwait
inc
xchg
xchg
inc
mov
jnp
xlat
and
jmp
xchg
xorl
orl
pushf
leave
or
mov
cli
adcb
add
push
mov
mov
sbb
add
pop
lret
mov
push
push
test
stos
sub
fcmove
lea
icebp
jmp
fldl2t
mov
xchg
lcall
out
mov
mov
call
leave
mov
pop
jmp
jbe
mov
dec
fdivp
and
sahf
fidivrl
jo
out
ljmp
rcrb
jne
mov
loop
push
jmp
and
repz
fdivp
or
test
ficoms
test
sti
les
rcrb
adc
shufps
jb
addb
inc
mov
loop
cld
dec
mov
roll
mov
es
movsb
jae
movl
movsl
fildll
jb
out
push
xchg
push
inc
test
mov
sahf
mov
insb
decl
out
xchg
xor
rcr
push
fs
lock
movsb
iret
pusha
dec
add
mov
daa
repz
lahf
fistps
jb
idivl
out
xchg
ret
sarl
mov
test
fsubrl
xor
lret
mov
dec
lea
out
ss
scas
mov
push
adc
push
xchg
enter
push
adc
sahf
inc
xchg
adc
push
mov
pop
add
sti
movsl
lcall
std
xchg
fwait
pop
imul
mov
popf
push
mov
jnp
ret
mov
std
mov
test
pop
outsb
lods
ret
inc
xchg
mov
ljmp
cmpsl
fildll
std
jl
test
mov
pop
daa
and
xchg
push
inc
data16
pop
cwtl
imul
nop
push
jbe
inc
and
fcomps
mov
push
lods
cmp
jg
outsl
orb
push
inc
xchg
jno
test
cmp
mov
insb
or
pop
nop
les
pop
fbld
push
addl
mov
insb
sahf
mov
push
add
pop
test
andb
nop
and
push
lcall
xchg
adc
mov
in
adc
inc
int3
into
lahf
and
mov
mov
loopne
xchg
xchg
iret
inc
adc
subb
ficomps
mov
aaa
inc
lret
jp
cmp
andb
adc
fld
xor
mov
mov
cwtl
repnz
jb
adc
xchg
ret
inc
mov
jg,pn
or
jne
js
jle
push
ja
xchg
gs
repnz
push
mov
and
je
pusha
mov
je
pushf
mov
mov
movsl
jno
jmp
test
test
sub
imul
aaa
pop
xchg
dec
xchg
mov
sti
push
inc
dec
scas
cmp
lret
xchg
int3
mov
mov
lret
outsb
mov
cmp
dec
mov
cmpsb
data16
test
push
nop
std
inc
mov
cmp
adc
inc
das
jecxz
enter
int3
movsl
popf
rcl
jg
bound
les
iret
push
fidivrs
orb
jns
xor
dec
xchg
inc
mov
sub
scas
orl
mov
movsl
les
aas
cwtl
xchg
daa
stos
add
xor
mov
movsl
out
sbb
loopne
ficoms
popf
scas
aad
ret
pop
cmpsb
xor
out
add
out
lahf
test
mov
in
mov
adc
out
dec
mov
adc
inc
xchg
xchg
loope
inc
jp
ljmp
xchg
imul
push
rol
sbbb
ljmp
mov
adc
xchg
mov
xchg
adc
fistl
lods
mov
lods
mov
or
call
jmp
js
mov
xchg
lret
bswap
push
ret
mov
sub
outsl
mov
sub
out
fists
fisubrl
mov
addr16
sbb
sbb
mov
and
inc
push
loopne
clc
xchg
scas
add
xchg
andl
add
andb
mov
inc
mov
test
cwtl
inc
out
aam
mov
mov
dec
mov
mov
jecxz
shlb
test
test
jmp
test
mov
sbb
xor
xchg
test
stc
or
mov
fiadds
bound
out
push
mov
jo
sbb
sahf
cs
xor
insl
into
sahf
mov
lret
mov
loop
mov
mov
lods
outsb
jl
adc
adcb
mov
andb
in
cmpsb
stos
mov
imul
cltd
ret
test
les
xchg
lods
pushf
mov
cltd
xchg
out
in
aam
mov
lea
cmp
cmp
xchg
sub
dec
ds
mov
mov
loopne
sarb
fidivl
int
rol
and
dec
into
cmpsb
lcall
and
je
sub
jp
pop
xchg
sbb
loopne
add
xchg
subl
mov
hlt
and
xor
fadds
dec
xor
sbb
adc
outsl
add
mov
cmp
in
test
adc
mov
sub
ret
mov
fstpt
mov
push
call
push
mov
adc
dec
sbb
out
in
mov
push
pop
inc
insl
lcall
mov
jo
jb
inc
xchg
out
mov
pop
xchg
pop
ss
roll
into
mov
push
mov
and
test
xor
hlt
add
cmpsb
loop
sub
ret
mov
mov
in
xchg
loopne
pop
add
inc
je
sbb
out
jmp
lret
mov
jno
mov
cli
shlb
and
out
xchg
fisubrl
jl
and
xchg
pusha
fxch
iret
sbb
jno
scas
jb
mov
xchg
sbb
pushf
inc
sbbl
sbb
rep
ret
dec
cld
adc
aas
push
call
xor
cmp
mov
lcall
sahf
outsb
dec
cmp
push
or
fisubs
mov
mov
xor
cltd
jmp
jnp
push
mov
outsl
inc
int
inc
repnz
bound
dec
inc
mov
jl
adc
lock
xchg
lcall
fisubl
dec
inc
and
mov
clc
mov
pop
scas
sbbl
cmc
cmp
and
mov
rcrb
jmp
loop
mov
jne
fisubrl
mov
jg
test
roll
imul
cmpb
mov
test
stos
sar
aaa
mov
andl
xchg
adc
pop
ret
mov
jmp
jp
testb
pop
fmul
bound
adc
insb
es
movsl
outsb
pop
jbe
scas
movsb
mov
dec
int
sahf
or
pop
test
int3
movsb
xor
out
clc
scas
lcall
mov
xchg
cwtl
or
adc
mov
pop
aaa
or
aaa
bt
roll
inc
xchg
or
cmpsb
jbe
add
jmp
lcall
movsl
xor
and
into
stos
ljmp
call
mov
xchg
in
roll
into
rcrl
and
xchg
lock
ror
xchg
mov
popa
cmc
popa
xchg
gs
mov
mov
or
sbb
xchg
mov
add
cmpsl
cld
aaa
jmp
push
lds
cmpsl
push
aad
cmp
or
imul
lret
mov
jecxz
pushf
xchg
mov
push
mov
in
rorb
mov
fwait
and
clc
and
dec
push
loop
out
push
aad
xchg
das
out
lcall
inc
nop
xor
cmp
jae
adc
enter
lods
jo
mov
scas
mov
or
or
mov
mov
adc
sbbl
cmpsb
fdiv
imul
lcall
mov
or
mov
jg
mov
icebp
repnz
addb
lret
test
das
in
icebp
mov
lods
mov
xchg
sub
aas
call
cltd
clc
mov
add
notb
pusha
jb
stc
inc
push
mov
sar
sub
loope
fyl2x
cs
nop
xchg
imul
lcall
js
jg
inc
mov
push
arpl
popf
or
fdivr
cmpsb
push
pop
pop
push
ret
les
lea
bound
inc
pop
pop
lcall
div
xchg
pushf
add
sbb
enter
stc
mov
movsl
xchg
mov
mov
test
scas
xchg
mov
sbb
test
dec
mov
push
fwait
test
xchg
test
xchg
test
xchg
test
pusha
ja
iret
lds
pop
add
cmp
test
imul
push
stos
loopne
lea
lcall
ret
mov
xchg
in
popf
rclb
pop
enter
pmulhuw
fstpl
inc
out
lahf
xchg
push
ljmp
hlt
out
cli
lahf
cltd
mov
rclb
pop
push
xchg
xchg
aaa
and
lret
jecxz
mov
pushf
movsb
pop
xchg
rol
outsl
cmpsb
lea
sbb
ret
lcall
jecxz
rcrl
movsb
mov
mov
sub
sbb
push
mov
cli
xchg
jmp
lods
mov
sub
popf
add
mov
cmp
mov
inc
mov
add
mov
mov
mov
aas
mov
mov
popf
mov
mov
sub
fmull
mov
jne
xor
ret
les
sub
cmp
mov
xchg
push
sbb
and
daa
inc
xchg
insl
dec
stos
mov
lds
jl
into
adc
xor
pop
addr16
arpl
xor
test
xchg
ljmp
xorl
mov
cmp
rclb
repnz
mov
mov
sub
dec
lcall
sahf
mov
sub
in
adc
mov
fimuls
jl
inc
xchg
xor
and
test
loop
xchg
inc
sti
inc
mov
mov
mov
subb
inc
mov
scas
ret
jp
mov
jg
lcall
xchg
cwtl
test
mov
cltd
movl
dec
movsl
clc
mov
and
add
rolb
jl
stos
mov
xchg
nop
adc
add
in
lcall
mov
cwtl
xchg
add
addr16
les
sahf
dec
cld
rcr
xchg
jg
push
and
int3
into
jne
pop
jl
mov
loopne
mov
xchg
mov
cwtl
lods
les
icebp
jns
ret
mov
out
sbb
jnp
lcall
rorb
push
outsl
mov
out
test
sahf
cltd
pushf
fsubrs
fisttps
out
lds
mov
mov
mov
mov
jl
pop
pusha
mov
mov
inc
sub
pop
mov
setae
fildl
jae
fmul
and
xchg
pushf
in
mov
in
movsl
lahf
mov
pushf
sahf
xchg
loopne
jp
jbe
cs
xchg
scas
rolb
lcall
add
nop
dec
push
adc
mov
pop
cmpsl
mov
mov
ficompl
cltd
test
inc
and
roll
inc
xor
sbb
rolb
fmull
hlt
xchg
je
and
stos
in
les
mov
hlt
les
pop
les
and
daa
sbb
jmp
pushf
lds
mov
push
push
mov
and
mov
test
pop
cmp
mov
mul
mov
mov
jnp
mov
dec
pushf
divb
addr16
pop
into
lods
fidivrs
insl
jbe
lods
xchg
nop
and
push
xchg
loop
out
scas
push
test
nop
mov
xchg
addl
nop
push
push
nop
inc
inc
ss
es
mov
push
dec
mov
ret
sahf
dec
mov
sbb
add
in
enter
add
mov
cmp
jmp
stos
fld
xchg
leave
out
sub
mov
add
mov
iret
movsl
lds
xchg
pop
mov
hlt
loop
sub
daa
popf
jl
movsl
ja
ret
les
xchg
mov
stc
leave
push
add
outsb
movsl
sub
dec
in
push
stos
mov
cmp
call
ret
movsb
pop
xlat
mov
mov
sub
bnd
add
push
or
mov
push
sub
rcrb
xchg
pop
jp
add
nop
push
mov
dec
pop
es
aam
test
out
imul
lahf
rclb
sub
mov
xchg
xchg
imul
push
mov
jecxz
mov
lcall
das
rcrl
xchg
pushf
in
jmp
mov
clc
cli
cltd
mov
add
mov
jb
popf
and
sahf
push
into
lcall
push
movb
mov
insb
mov
addb
movsl
pop
stos
jnp
cmpsb
mov
cmpsb
jns
lret
test
test
nop
mov
xor
stc
jmp
or
xor
lock
pop
lret
sbb
cmp
sbb
rcrl
mov
sahf
aaa
pop
mov
lahf
cli
rcrl
mov
mov
ficompl
push
mov
ljmp
aad
mov
rol
jnp,pn
shl
inc
cwtl
or
js
add
scas
ljmp
rcr
sub
push
pushf
cmpsl
scas
sbb
dec
sub
xchg
jae
hlt
add
test
shlb
xchg
add
cmpsb
and
xchg
lahf
fisttpll
stc
popf
mov
cli
or
mov
mov
push
mov
sbb
push
aas
mov
push
loop
out
pop
adc
adcl
add
aam
bound
cmp
xchg
and
fsubl
movsl
cwtl
les
cmp
adc
mov
mov
adc
in
mov
and
inc
popa
mov
xor
lret
leave
call
push
rcll
cltd
int3
lret
adc
jo
int3
push
mov
cwtl
or
mov
test
xchg
cltd
int3
add
lcall
add
subb
push
mov
ret
ucomiss
xchg
addb
out
rcll
mov
xchg
mov
ret
mov
rorb
loop
test
ret
mov
mov
fnstcw
cli
ret
dec
sahf
mov
jae
xchg
xor
stos
cmpsl
sub
mov
mov
sarb
out
shll
rorb
pop
push
in
mov
cld
movsl
jecxz
xlat
aam
test
cmpsl
scas
mov
rorb
mov
mov
xor
mov
movsb
aad
jmp
mov
les
rcrl
mov
push
or
test
loop
or
je
mov
xchg
or
out
inc
stos
xlat
sub
ljmp
xchg
lcall
js
push
call
cmpsb
ja
daa
sbb
movsl
insb
divb
out
pop
cmc
push
test
dec
adc
dec
mov
das
lcall
add
mov
mov
loope
outsb
jo
xchg
shlb
mov
leave
scas
push
jp
adc
dec
sti
ljmp
stc
sub
ret
cmp
lds
adc
aad
test
out
fnsave
data16
in
dec
xchg
pop
lods
pop
push
mov
jnp
mov
jp
xor
push
scas
mov
call
lret
repnz
pop
push
mov
ljmp
int3
sahf
test
push
jl
sub
mov
mov
loop
xchg
mov
pop
xchg
xchg
xchg
aaa
inc
dec
dec
xchg
inc
sub
push
push
psadbw
or
xrelease
ss
push
mov
mov
dec
jg
fstpl
sbb
pop
cli
mov
inc
mov
lret
mov
inc
mov
mov
adc
insb
or
push
iret
mov
rolb
xchg
mov
jnp
ret
inc
sbb
mov
movsb
seta
cmpsb
mov
xchg
fldl
fimuls
dec
mov
cmpsl
xchg
mov
sub
loop
xchg
mov
jnp
cmpsl
lcall
mov
and
call
jle
ret
data16
cmp
filds
in
push
test
dec
scas
mov
ja
jg
stos
gs
push
lods
sub
les
loop
orb
jl
jae
ja
mov
and
add
jg
dec
add
inc
add
addb
test
mov
test
pop
ret
loope
push
addb
xchg
addr16
popl
dec
inc
cmp
mov
jg
jp
jle
movl
pushf
bt
movb
cmc
test
mov
lea
je
pusha
sub
pusha
lea
jmp
pushf
jmp
stos
mov
mov
les
les
sbb
popf
sbb
les
and
lcall
and
and
les
sahf
and
les
aam
cwtl
call
dec
call
push
push
pushl
lea
jne
lea
push
mov
push
pusha
push
lea
jmp
movl
lea
ja
push
movl
pushf
pusha
pushf
mov
lea
jmp
mov
setno
lea
bswap
not
movl
call
call
pushfw
popw
clc
ror
sar
mov
cmp
cmp
movb
pusha
add
pusha
stc
bt
jmp
setp
movb
setl
pushl
not
pusha
mov
call
movsbw
bsf
push
call
movb
cmc
cmpb
lea
pusha
lea
jne
btr
dec
neg
sub
cmp
movzbw
mov
push
add
setno
mov
pusha
cmp
stc
pushf
test
pushf
lea
jl
push
lea
je
cmc
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
mov
push
test
call
lea
jne
shl
mov
bsf
sub
lea
mov
sbb
and
add
add
shl
sar
mov
jmp
pushl
popl
mov
pushf
mov
pushl
ret
ja
adc
mov
les
js
lds
outsl
scas
inc
cmp
lcall
addl
insb
jae
mov
cmp
fs
mov
push
or
sbb
shr
lock
cs
outsl
enter
stos
jmp
jmp
push
bound
sahf
shl
pop
cli
dec
in
lock
dec
xor
es
sub
add
and
dec
inc
adc
mov
fwait
jns
shlb
jecxz
loope
into
pushf
das
mov
add
sti
add
in
jnp
and
jle
xlat
mov
insb
and
push
call
jmp
call
pop
pusha
movb
mov
not
mov
setl
jmp
cmp
test
call
pusha
jmp
call
add
movw
movb
cmp
jmp
mov
movl
pushf
lea
call
pushf
call
movl
pushl
pushf
pushl
pushl
lea
jmp
shr
bsr
mov
btc
stc
shrd
add
shrd
add
sar
add
stc
mov
pushf
clc
test
shr
bt
cmp
movw
push
movb
pusha
lea
je
cmc
cmp
call
pushl
popl
push
pusha
pushl
ret
pusha
jmp
ror
sar
mov
pushf
cmc
jmp
sub
xchg
addl
add
repz
xchg
into
add
xchg
aad
inc
scas
pop
and
icebp
mov
mov
xchg
cmc
push
push
aam
sbb
xlat
inc
sti
outsb
mov
clc
je
fwait
inc
pop
inc
pushf
packuswb
in
xor
inc
stos
xor
jp
sbb
lcall
popf
sbb
push
insl
aam
cmp
shlb
xorl
fcmovbe
cwtl
test
xor
lea
jae
movzbl
xadd
rcr
mov
pusha
cmp
dec
xadd
mov
setns
shr
movzbw
mov
pusha
xor
push
clc
lea
jae
push
repnz
call
pusha
jmp
cmp
pusha
push
movb
movb
lea
ja
pushf
movw
push
lea
jmp
jmp
shl
pushf
not
lods
test
clc
clc
add
clc
cmc
pushf
mov
neg
mov
not
lea
jbe
pushf
movb
pushf
dec
pushl
lea
call
jmp
pushf
pusha
mov
bt
cmc
clc
cmp
jmp
movw
pushl
popl
push
lea
mov
pop
jmp
jmp
cmp
pushl
lea
ja
cmc
setnp
shl
sub
pusha
stc
xor
btc
sub
add
btr
sbb
mov
ror
mov
push
repnz
pushf
lea
jne
sete
pushf
call
ror
mov
stc
call
xadd
adc
mov
xchg
xadd
shrd
jmp
call
lahf
pushl
popl
lea
je
push
lea
setne
push
call
add
pushf
pusha
lea
jmp
push
pusha
pusha
jmp
push
repnz
push
movb
lea
jne
adc
rol
xchg
mov
or
not
bsf
btr
sub
add
mov
call
call
test
lock
inc
fists
xor
pop
movsl
rcr
mov
fistpll
mov
or
and
subl
jnp
jae
and
adcb
jb
and
pop
mov
in
jnp
or
and
stos
not
push
das
jo
inc
jo
out
mov
shll
push
sbb
and
not
mov
add
adc
cli
mov
lods
jl
ljmp
jecxz
adc
xor
mov
stos
adc
inc
push
mov
dec
sti
xlat
xchg
jbe
mov
adc
push
push
lock
jae
cmp
stos
pop
or
jl
jb
jl
rcr
or
pop
lret
xor
xchg
call
popa
fbstp
mov
hlt
cmp
pop
pop
lds
jo
leave
pop
mov
pop
jb
xchg
pop
out
aad
ffree
jae
push
std
dec
fistpll
inc
mov
adc
mov
xor
jl
das
adc
pop
push
add
test
push
and
xlat
call
fwait
add
stos
pop
jne
and
xchg
inc
outsb
sub
or
cmp
mov
xchg
insb
outsb
inc
lret
andl
fnsave
out
pop
stc
lods
gs
or
cli
lock
es
and
lock
mov
adc
pop
mov
mov
fwait
inc
xchg
sub
cmpsb
sub
jl
or
dec
jmp
mov
shr
xchg
loopne
xchg
add
jns
sbb
dec
sahf
sbb
call
fcmove
subb
fs
xchg
jmp
jl
cvtpi2ps
movsb
and
mov
mov
push
into
jnp
jnp
jno
out
inc
sbb
imul
pop
int3
pop
jg
mov
cmp
push
lret
cmp
ffree
pop
or
stos
nop
pop
stos
xor
jecxz
sti
xchg
shrb
mov
lea
pop
mov
xchg
inc
jae
mulb
inc
cmc
fstpt
outsb
out
pop
dec
and
push
add
sub
dec
cwtl
add
xchg
imul
sub
negl
jg
adc
or
sbb
inc
jae
jb
imul
push
jae
and
xchg
cmp
cmpsl
dec
inc
mov
test
mov
cmp
nop
mov
mov
enter
inc
pop
xor
mov
sbb
dec
ds
sarl
pop
push
push
xorl
adc
xor
test
xchg
mov
enter
mov
jae
daa
mov
sub
pop
mov
xor
add
xor
inc
outsl
aaa
mov
adc
mov
fbstp
push
dec
rclb
sbb
scas
push
out
lods
jge
mov
add
xlat
repnz
adc
pop
sbb
out
pop
jae
in
cs
aad
jae
ja
lods
fimull
std
or
jp
jo
inc
sub
sbb
fistl
cmp
and
jg
ret
fdivrl
ja
in
into
movsl
cmp
sbb
pop
jno
scas
cmpsl
cmp
push
pop
mov
push
sarb
clc
pop
sbb
add
xlat
fdivrs
fistpll
mov
iret
mov
mov
xchg
addr16
mov
mov
mov
in
movsl
imull
cwtl
nop
lcall
jmp
movsb
xor
inc
jo
and
mov
mov
je
xchg
stos
or
cmp
out
jno
adc
add
adc
frstor
inc
add
out
adc
dec
jecxz
aas
inc
arpl
mov
sbb
gs
jo
jmp
sbbb
push
repnz
pop
int3
in
jmp
pushf
cmp
pushf
lea
ja
cmp
sub
push
neg
pop
add
add
mov
ror
sar
call
push
pushf
mov
push
lea
call
push
movw
movb
pushf
lea
jne
cwtl
setp
pushf
lea
mov
pusha
movw
pusha
pushf
lea
jmp
mov
arpl
or
in
ret
jbe
sbb
or
add
ljmp
lock
adc
pop
jp
inc
fcomip
jle
std
mov
cmp
mov
add
jo
push
add
inc
fnstenv
shll
arpl
loope
addr16
cmc
daa
fwait
jecxz
and
cli
cmp
call
jb
dec
mov
daa
popf
bnd
les
push
dec
or
rolb
mov
loopne
out
mov
shrl
into
int
jo
pop
push
xlat
mov
sub
mov
lcall
icebp
lahf
testb
aas
adc
cmpsb
dec
xor
inc
repnz
mov
push
jge
adc
int
popa
test
xor
nop
ror
sub
jb
push
shr
insl
out
int3
push
lock
lods
xor
jb
adc
mov
jge
xchg
test
inc
clc
mov
mov
jnp
xchg
aam
jnp
dec
ljmp
dec
xchg
test
in
xor
adc
mov
jp
lahf
fs
sub
cmp
hlt
jo
sub
insb
sub
rol
bound
adc
cmp
and
add
fisttps
in
xchg
push
mov
jecxz
mov
in
jl
cmp
aas
xadd
sbbb
xor
adc
cmp
nop
jmp
pop
icebp
adc
mov
mov
out
stos
roll
sub
lds
out
or
lds
ret
ds
xor
ficoms
sub
adcb
push
test
imul
mov
inc
in
push
mov
stc
mov
inc
testb
mov
cmp
jnp
or
jae
dec
in
lock
shrb
roll
inc
jae
les
sbb
xor
dec
nop
dec
in
and
mov
mov
int
outsl
sbb
push
cmp
jo
mov
divb
call
adc
outsl
arpl
mov
add
popa
insb
inc
jb
add
fs
jne
pusha
setae
mov
mov
pushf
lea
jmp
push
lock
std
std
popl
xchg
les
dec
add
sbb
mov
pop
addr16
leave
outsl
mov
adc
dec
inc
aam
ja
pop
push
rolb
fisubs
adc
test
sub
daa
add
not
inc
inc
inc
in
xchg
push
mov
repz
add
pusha
enter
clc
cmc
cmp
jmp
call
stc
movzwl
dec
mov
cmc
pusha
add
cmp
pushf
mov
call
pushf
pushf
push
mov
pushl
pushl
popl
not
mov
pusha
pop
movl
call
test
btc
or
mov
cmp
stc
stc
jmp
call
push
jmp
call
stos
pushf
lea
jmp
sete
jmp
lea
jb
push
call
lea
je
push
pushf
lea
jmp
test
push
mov
sub
jo
into
es
lret
or
sub
sub
cwtl
les
out
icebp
scas
and
insb
mov
hlt
dec
pop
sub
or
fs
cmp
pop
mov
fwait
lea
mov
adc
xchg
dec
xor
xorl
pop
out
clc
lock
mov
cwtl
call
rcrb
and
or
xorb
inc
addr16
stc
mov
jne
movsbw
call
stc
mov
pusha
neg
call
jmp
call
cmpsb
loope
mov
xor
add
leave
sbb
int3
mov
lcall
cmp
sub
mov
mov
jecxz
nop
popa
shrb
pop
enter
cltd
pop
mov
push
push
mov
jle
cmpb
push
jg
fisttpl
sbb
and
and
je
dec
xor
shrd
add
add
rcl
mov
jmp
rcrb
imul
pushf
call
pusha
lea
jne
mov
rcl
mov
jmp
jmp
movzbw
movb
lea
bswap
not
movzbw
mov
call
lea
jne
adc
sub
add
mov
mov
add
neg
pusha
mov
call
pop
mov
movsbw
pushf
call
call
dec
dec
rclb
testb
and
sbb
mov
shl
sub
mov
adc
or
jb
or
faddp
sbb
in
xlat
jl
push
pop
decb
jnp
cmp
jns
int
loop
outsb
stos
xor
dec
mov
sbb
and
lret
mov
mov
push
adc
stos
xchg
dec
sbb
xchg
sbb
shl
lea
pop
mov
lcall
in
test
movsb
jno
xchg
fldenv
jg
sub
inc
xor
in
mov
inc
mov
fs
mov
lods
dec
pop
icebp
push
dec
push
popf
push
jge
loopne
mov
or
xchg
js
xor
or
lea
jne
rcl
mov
cmc
not
rcr
sub
rol
jmp
call
movl
movb
push
lea
jmp
call
lea
je
bswap
pusha
xchg
jmp
lea
je
pusha
cmp
jmp
sub
cmc
btc
xor
mov
cmp
clc
bt
cmpb
call
stc
or
pushl
lea
je
push
pop
not
bswap
lea
pusha
movzwl
push
lea
bswap
mov
pushl
jmp
cmp
sub
pusha
jmp
mov
movb
lea
ja
push
lea
jb
call
cmc
clc
clc
cmp
push
lea
cwtl
cwtl
pushl
mov
movw
lea
jns
pushf
lea
ja
pusha
lea
jb
call
pusha
call
pushf
push
rol
cmp
push
pushf
sub
clc
call
cmp
test
pushf
call
mov
lea
jae
push
pusha
pushl
pushf
lea
jmp
scas
pop
push
xchg
inc
arpl
inc
mov
cmp
pop
xchg
out
push
insb
jnp
pop
lods
sbb
arpl
add
mov
roll
jno
loope
bswap
pop
lea
or
cmpsb
sarl
into
fidivl
add
loopne
push
add
loopne
mov
ds
in
scas
xor
imul
jl
cmp
out
fwait
and
loop
bsf
adc
dec
shl
mov
jmp
lea
jne
mov
movzbw
pushf
movb
not
movsbw
not
mov
push
movsbw
lea
pusha
mov
movl
pusha
pushf
mov
mov
pushf
pushf
pushl
ret
lea
jae
bt
add
pusha
movb
pusha
lea
jae
mov
push
pusha
lea
jmp
mov
call
cltd
test
xchg
inc
arpl
dec
mov
push
xlat
jle
call
push
in
cld
mov
cltd
addr16
mov
mov
fs
inc
mov
add
sar
sahf
mov
sub
cmp
out
mov
push
roll
fsubl
pop
jmp
arpl
loopne
xchg
stc
jne
lahf
jae
in
jecxz
dec
xchg
movsb
idivb
in
sbb
cmp
adc
add
push
rol
js
adcl
test
add
mov
mov
pop
popf
push
fistpl
fidivl
div
cs
popa
cmp
sahf
lods
lods
push
shll
cs
mov
sub
test
lahf
push
pop
jle
push
flds
jns
fistpl
arpl
mov
mov
ss
aas
adc
stos
mov
out
rclb
xlat
rcl
jns
call
call
sub
xchg
inc
arpl
jno
aas
add
test
outsb
es
adc
pop
in
testb
inc
lahf
popf
jnp
sub
jo
nop
jle
cmpsl
daa
xorl
mov
push
fwait
movb
mov
aaa
data16
mov
sub
insl
mov
inc
and
pop
jmp
pushf
pushl
movl
pushf
pushl
mov
pusha
pushl
ret
mov
push
push
pusha
pushl
ret
popf
rdtsc
nop
call
pushf
mov
movw
pusha
pusha
pushl
ret
test
pusha
lea
je
push
pusha
pusha
pushl
lea
jmp
int3
popf
push
movl
push
pusha
call
mov
call
cmc
cmp
stc
add
pushf
movzwl
add
rol
mov
cmp
test
test
add
pusha
movb
push
mov
bt
jmp
daa
bound
nop
inc
arpl
jno
inc
or
out
cmc
or
jp
mov
repnz
repz
push
xchg
andl
sbb
jns
mov
xchg
out
pop
daa
add
test
jg
lretw
push
push
daa
das
or
lods
xor
rolb
adc
jl
adc
push
jp
dec
inc
fadds
cli
push
or
jg
adc
movsb
rcr
xchg
jae
inc
iret
sub
add
loopne
inc
arpl
test
xchg
cmp
ljmp
fidivl
add
mov
pop
cmc
lock
push
imul
inc
das
inc
and
inc
rcll
sub
arpl
out
leave
add
out
jae
fidivl
adc
and
repz
mulb
imul
jae
pusha
mov
lds
movsl
push
pop
dec
mov
pop
shl
cs
rsm
cmp
mov
jbe
cmp
dec
icebp
subl
and
inc
pop
scas
das
insl
lahf
cmp
imul
mov
clc
imul
fcmovnbe
decb
iret
jmp
jns
lea
dec
dec
loope
jp
inc
arpl
cmp
pop
jns
aam
jne
and
mov
mov
mov
popf
rcll
mov
movsl
and
fmuls
fiaddl
cmc
cmp
push
lea
jae
cmc
cmc
cmp
pushf
jmp
lea
jae
or
add
mov
xchg
mov
sub
shld
setbe
call
push
movb
pusha
mov
test
pushf
pushl
jmp
mov
pushf
pushl
ret
pushf
lods
clc
add
jmp
pushf
rep
jmp
lods
call
movl
push
pushl
lea
jmp
pushf
stos
pushf
pushf
call
lea
jne
setns
lea
jg
lea
movb
lea
pusha
movw
push
mov
call
add
mov
xor
pop
out
mov
jnp
jnp
lods
aas
cmc
jle
mov
rorb
xor
bound
rcl
roll
imul
xchg
mov
sti
mov
outsl
std
test
and
mov
and
cmpsl
pop
pop
mov
push
inc
mov
mov
fs
mov
and
push
sti
lods
push
js
or
xor
pushf
stos
test
sub
xchg
mov
cld
sub
xchg
in
shr
mov
mov
mov
pop
mov
pop
mov
push
mov
call
lea
je
call
cmp
jmp
push
inc
ds
inc
arpl
jbe
gs
mov
decb
fnstenv
push
adc
rolb
add
jbe
inc
fldcw
mov
pop
cmp
push
call
not
lea
push
setnp
movzbw
pusha
lea
pushf
lea
jo
push
movl
call
mov
arpl
leave
inc
enter
mov
sbb
daa
push
out
sahf
push
pop
hlt
out
daa
and
insb
cmp
mov
sub
mov
testb
mov
push
jae
sbb
out
arpl
or
ljmp
lea
js
hlt
int3
add
in
icebp
lcall
push
xor
xlat
pop
dec
cmp
cmpsb
push
xchg
xor
inc
add
call
adcl
adc
dec
insb
in
jnp
das
cmp
ja
xchg
mull
out
lcall
push
add
fcompl
loop
push
cmp
inc
adc
out
scas
sarb
fbstp
cmp
lret
xor
jl
outsl
nop
push
shrb
push
out
adc
cmp
sub
mov
mov
mov
cmp
jns
add
clc
call
leave
xchg
sbb
adc
pop
xchg
jmp
imul
push
int
leave
cli
add
jno
imul
mov
loop
cli
in
pop
js
int
mov
mov
xor
cmp
pop
sbb
sub
xchg
sbb
fwait
dec
cmp
mov
adc
iret
dec
negl
xchg
xor
insl
pushf
lret
shll
pop
inc
movsb
mov
iret
push
fsts
setp
call
and
mov
cmp
lea
add
or
rol
mov
jmp
push
pushl
movb
lea
ja
mov
add
sub
ror
bsr
sar
sar
add
shld
pusha
adc
xor
mov
bt
mov
clc
test
movb
repnz
call
lea
jae
push
cmp
call
pusha
mov
adc
movw
pushf
mov
lea
jmp
pushl
call
sub
sbb
inc
arpl
sub
lods
fstp
add
dec
sahf
xor
aas
stos
lock
cmp
cmpsb
pop
cmp
or
cmp
adc
mov
cmc
leave
and
lea
pop
inc
push
sbb
or
or
pop
adc
icebp
imul
testb
rorb
jnp
stos
cmovle
sub
pusha
stc
sbb
jecxz
fmuls
insl
xchg
shlb
mov
shr
add
daa
cmc
je
jmp
cltd
mov
sbb
mov
add
xor
add
les
pushw
mov
fnstcw
mov
mov
insb
and
sub
xor
imul
pop
sbb
enter
pop
insb
icebp
dec
ss
and
sub
mov
pop
jnp
cwtl
or
and
add
sbb
mov
sbb
clc
mov
mov
bt
test
push
call
or
loop
xor
cld
movsb
push
pop
call
arpl
mov
add
jae
jnp
shrb
cmp
fadds
xor
stos
sbb
test
mov
jne
dec
sub
lods
aas
dec
mov
jmp
rcrl
jge
jns
lret
into
jns
daa
call
loope
addl
movsb
jb
call
add
xor
pop
fs
lea
je
bt
bt
pushf
add
pushf
push
lea
jmp
lea
je
pushf
pusha
sub
cmc
cmp
cmp
jmp
call
push
lea
jne
pusha
movsbl
mov
push
lea
jmp
jmp
lea
jne
pusha
mov
jmp
add
inc
gs
outsl
fs
gs
imul
add
leave
and
add
mov
push
scas
jg
inc
arpl
jp
cmp
inc
stos
add
shrl
xchg
incl
sbb
addr16
add
bound
add
jp
xchg
and
orl
imul
into
sub
outsl
aad
add
pop
pop
adc
sub
dec
mov
out
lock
jne
dec
stos
jmp
inc
cld
inc
sub
xor
and
and
mov
sbb
jecxz
shlb
stos
movsb
rep
cmp
nop
mov
lret
repnz
xor
push
sub
dec
mov
lea
jne
mov
movb
lahf
pusha
movsbw
lahf
mov
pushf
lea
pushf
jmp
cwtl
lea
lea
movw
pusha
movl
pushf
jmp
cmp
lea
jl
movzbw
setg
cwtl
lea
bswap
pop
jmp
call
movb
clc
stc
ror
pushf
clc
test
mov
movb
cmp
add
cmc
test
push
call
test
shl
jmp
xor
jle
xchg
cmp
sbb
push
scas
jo
dec
and
adc
jge
cmp
mov
dec
jne
mov
ljmp
adc
cmpsb
add
cmc
addr16
or
sub
pop
mov
lret
sbb
das
lahf
mov
mov
and
push
jp
pabsd
aad
sub
loopne
and
inc
shl
imul
addr16
cli
icebp
popf
mov
and
mov
adc
daa
mov
and
add
clc
mov
cmc
clc
cmc
test
jmp
xor
xor
mov
jecxz
jmp
mov
xor
adc
mov
ljmp
in
ljmp
shll
dec
in
sub
mov
movsb
push
pop
mov
mov
xor
data16
inc
mov
mov
xor
sub
mov
test
test
push
neg
mov
test
call
bts
mov
cmp
cmp
call
lods
clc
jbe
inc
arpl
xchg
leave
mov
cmpsb
outsb
insl
add
fwait
fs
ja
mov
sbb
icebp
daa
lds
into
xchg
xor
lret
push
sub
jbe
pop
xchg
dec
or
nop
xchg
gs
sbb
inc
loopne
lds
addr16
xchg
mov
dec
mov
cmpsl
stc
ret
cs
push
movsl
inc
arpl
push
cmp
mov
jne
shl
xchg
lock
sbb
fbstp
lds
arpl
mov
jp
cs
mov
adc
fs
inc
mov
iret
cmpsl
or
push
mov
add
xlat
push
inc
inc
sahf
mov
push
hlt
dec
jecxz
shl
xchg
movsl
push
jns
out
jl
jae
or
arpl
data16
xchg
dec
inc
dec
das
jp
enter
pop
loop
jns
mov
cmpsl
movsl
cli
cmp
fs
mov
mov
cmp
adc
inc
and
or
add
lea
pushf
movzbw
lea
call
push
lea
seto
lea
mov
mov
lea
pushf
jmp
lea
jne
rol
pusha
test
add
jbe
mov
clc
bt
cmp
cmp
push
lea
ja
pusha
jmp
push
lea
call
call
movb
pushf
pop
setp
mov
not
pusha
lea
jmp
lea
jne
stc
cmp
mov
mov
btc
sub
adc
sar
mov
clc
jmp
dec
xor
cmpsl
inc
arpl
ret
inc
xchg
in
adc
cmp
pushf
out
mov
and
adc
leave
mov
cmp
shrl
jp
or
pop
xor
aad
ror
das
mov
movl
pushf
pushf
mov
lea
jmp
cmp
pushf
call
call
test
clc
cmp
call
call
btc
mov
mov
push
cmp
cmpb
call
rcll
std
sbb
ret
inc
divl
cmp
xor
out
mov
mov
nop
clc
mov
test
loop
scas
loop
inc
mov
adc
cmp
mov
or
push
jb
clc
xchg
arpl
inc
push
arpl
lock
cmp
mov
js
jae
ja
into
loopne
or
xor
int3
mov
aaa
xor
jecxz
je
outsl
sub
mov
subl
mov
mov
pop
xchg
cs
cmpsb
inc
arpl
pop
mov
xor
and
shlb
jecxz
dec
test
gs
adc
sub
test
rclb
push
sub
or
adc
mov
cmp
loop
scas
pushf
pop
stos
out
adc
jns
xchg
in
push
mov
lea
jne
sar
sub
and
not
ror
pushf
mov
ror
mov
jmp
mov
push
test
cmp
xor
movw
test
clc
repnz
push
mov
call
lea
je
pushf
test
bt
add
clc
pushf
call
or
jmp
movb
push
lea
ja
rol
add
mov
shl
sub
jmp
call
pusha
jmp
pusha
mov
pushf
pusha
lea
jb
stc
pushf
stc
cmpb
pusha
call
imul
add
add
add
das
push
add
inc
adc
add
push
add
adc
add
xorl
incl
dec
mov
dec
call
jmp
xlat
pop
adc
push
mov
jno
arpl
and
pop
adc
mov
ds
mov
mov
jno
cmpsl
cmp
lea
and
testb
fst
mov
xchg
xchg
push
push
int3
fcmovb
fmulp
cmp
js
movsl
icebp
cmp
int3
jb
pushf
mov
pushf
pusha
pushf
pushl
ret
jmp
pushf
pusha
mov
lea
push
push
lea
movb
pushl
mov
bswap
pop
lahf
cwtl
pushl
popl
cwtl
mov
pushf
lea
movl
cwtl
lea
pusha
lea
call
pushf
lea
ja
sub
ror
sub
xor
sub
lea
add
sar
mov
shl
mov
cmc
mov
mov
jmp
push
pushl
popl
pushf
pushl
push
pushf
pushl
ret
pushf
lea
ja
movzbw
mov
pop
movzbw
lea
call
call
movl
pusha
push
lea
jmp
movzbw
pushl
mov
call
call
cmp
test
push
pushf
pusha
jmp
mov
movsbw
xchg
lea
mov
mov
pop
mov
push
mov
pushl
ret
jmp
push
jmp
pushf
mov
pushl
popl
pushf
push
mov
pushf
pushl
ret
jmp
movb
or
pushf
push
pushl
pushf
lea
je
mov
mov
not
movzbw
lea
pusha
call
pusha
call
pushf
pusha
lea
je
test
push
cmp
push
lea
je
pushf
pushf
lea
jmp
btr
pushf
clc
mov
call
bt
bt
sub
stc
mov
test
pushl
popl
push
pusha
cmc
cmp
call
pushf
pushf
movl
jmp
mov
push
movb
lea
jmp
pushf
pop
lea
call
lea
ja
call
call
stc
call
xchg
mov
jbe
push
cmp
js
inc
adc
fs
js
sbb
lods
dec
add
or
mov
pusha
das
out
shrl
insl
cltd
or
stos
push
rcll
mov
pop
pop
ja
push
mov
aam
adc
subb
and
in
mov
cmp
adc
scas
rolb
push
int3
jb
xor
imul
test
inc
add
andl
in
mov
mov
lret
mov
mov
pop
pushl
cltd
or
mov
push
stos
fldl
mov
dec
frstor
mov
push
mov
add
int
push
jnp
shlb
xchg
adc
cwtl
push
mov
pop
pop
jl
gs
shr
add
inc
mov
sbb
ss
shll
push
xchg
cmc
xchg
jbe
aas
mov
inc
mov
into
push
cmpsl
scas
pop
cs
push
mov
mov
repz
sub
push
xchg
xor
add
jae
fcomps
das
xchg
xor
xchg
add
fmul
xor
int
arpl
in
rcr
stos
nop
inc
rep
repz
fisubrs
bswap
movsbl
mov
sets
movzbl
not
lea
call
pushf
pushf
movl
mov
jmp
lods
xchg
fwait
lods
inc
arpl
mov
dec
mov
lds
sbb
jl
lcall
subl
movups
gs
into
bswap
xor
xor
sbbb
adc
jb
lahf
and
pop
insb
cmpsl
scas
shlb
mov
sub
cmp
or
imul
xchg
lds
push
xchg
imul
add
dec
xorb
push
rorb
lods
fwait
stc
xchg
movl
inc
add
out
mov
lret
dec
rorb
pusha
mov
dec
int3
mov
lds
aaa
popf
add
leave
xchg
mov
daa
jbe
pop
les
fsubrl
mov
pop
add
and
xor
mov
call
lret
pop
imul
outsl
or
and
ret
mov
mov
sub
scas
ljmp
mov
xor
pop
jmp
mov
rol
adc
cmp
jo
xor
dec
pusha
mov
pop
lcall
imul
shlb
into
mov
stos
fisubl
orb
cmp
or
add
loop
stc
shr
jns
inc
mov
popa
adc
or
dec
cwtl
ds
push
outsl
out
pop
pop
mov
mov
push
lret
adc
jne
fiaddl
lret
and
ret
fisttps
scas
dec
jmp
pop
mov
dec
xchg
and
scas
inc
arpl
ljmp
add
dec
mov
and
ret
push
add
mov
pop
sbb
jp
pop
mov
shl
push
fldl2t
dec
push
push
dec
push
push
pop
pop
loopne
jecxz
popf
mov
pop
les
sub
sub
addl
cmp
push
addl
dec
in
or
or
bound
add
jo
outsl
cs
jno
add
inc
xchg
push
lods
subl
jmp
in
sarb
cmp
sub
push
push
add
fildl
mov
dec
loope
loopne
push
pop
pop
in
sbb
xor
jne
push
cltd
mov
push
ret
in
and
xchg
stc
mov
jecxz
sahf
sbb
jbe
inc
jp
loopne
add
and
lea
jne
stc
shl
cmc
mov
bts
dec
sub
cmc
push
bsf
adc
lea
pushf
sub
stc
pushl
popl
stc
cmp
pushf
lea
ja
shl
shl
clc
sub
movzbw
lea
pushf
btc
lea
add
shl
test
add
mov
sub
mov
pushf
call
jbe
push
pushf
movl
call
jmp
in
xchg
xor
sbb
and
call
divb
lock
mov
jns
push
mov
ret
adc
movsb
push
cmp
jb
lea
mov
sbb
aam
clc
aam
popf
inc
cmp
movsb
test
mov
mov
jb
daa
cld
pop
inc
in
mov
pop
scas
jle
push
jge
rolb
sahf
push
leave
dec
push
mov
mov
dec
cmp
dec
pop
or
shl
dec
cmc
mov
sahf
dec
mov
cmp
lea
bound
lret
sarl
adc
arpl
cmp
inc
fildll
or
dec
jg
fmuls
cli
stc
orb
clc
cmc
popa
or
fdivs
push
ja
dec
mov
jno
roll
dec
or
mov
int
xchg
xchg
cltd
cltd
jg
cli
push
test
xor
pop
dec
stc
fildll
inc
or
fsts
je
ds
push
mov
imull
cwtl
jno
sbb
lods
out
inc
in
hlt
les
xchg
mov
pop
lahf
add
insl
mov
mov
adcb
or
or
mov
je
mov
push
loope
jno
test
mov
dec
adc
test
inc
inc
jnp
jle
add
mov
lods
icebp
mov
ficoml
daa
in
mov
lret
in
sti
cli
arpl
call
lea
jae
lea
mov
movsbw
sbb
call
push
dec
pushf
lea
call
stc
pusha
pushl
cmp
pushl
pushf
lea
jae
pusha
stc
cmc
bt
cmp
call
pushf
test
jmp
push
dec
pushf
jmp
call
push
arpl
xor
negl
pusha
addr16
xchg
int3
jp
ffree
lds
dec
mov
mov
or
push
sbb
lret
inc
inc
mov
lahf
pop
push
push
fwait
out
sbb
enter
js
push
in
test
icebp
call
xchg
push
jl
push
popf
push
xor
and
ja
mov
addb
add
xor
inc
imul
push
push
dec
adc
leavew
clc
adc
test
pop
orl
dec
cld
bound
scas
adc
sub
cmp
movsb
imul
lea
test
push
or
ret
adc
int3
popl
dec
xor
out
pop
mov
adc
test
ficomps
repnz
jle
sbb
mov
or
or
or
call
pushf
pushf
lea
jne
rcl
neg
cmp
mov
clc
cmp
cmc
push
add
stc
stc
cmp
bt
movzwl
cmc
cmc
mov
test
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
movl
mov
movl
pushf
pushf
mov
pushf
lea
jmp
mov
bswap
lea
lea
jl
push
movb
push
xchg
call
push
pushl
lea
jbe
push
pushf
movb
lea
jmp
sar
jmp
jmp
not
pusha
movzbw
mov
lea
jmp
movb
movb
lea
jle
call
pushf
movb
push
adc
pushf
call
push
xchg
fidivl
push
dec
jmp
icebp
jecxz
cmp
rcrb
jle
xor
jae
mov
cmp
push
inc
fmull
xor
shrb
jns
adc
mov
cli
cli
andb
hlt
bound
imulb
xlat
mov
faddl
repnz
fwait
rorl
loope
repnz
enter
and
pushf
icebp
jo
cmp
inc
xchg
je
pop
addl
lea
fld
xor
adc
add
pushf
movl
movl
pushl
call
pushf
cmp
add
stc
mov
jmp
lea
call
jmp
jmp
movl
lea
jne
setle
mov
not
mov
pushf
lea
jmp
jmp
jmp
call
repnz
push
call
mov
pusha
pushl
xchg
pop
movl
not
lea
pushf
push
mov
movl
pushf
movl
lea
jno
pushl
push
push
push
pusha
pushl
ret
je
jge
pusha
clc
sub
cmp
cmp
pushf
pushf
call
pushf
fs
mov
arpl
push
jne
fs
shll
lret
loop
xor
jmp
icebp
push
and
mov
std
adc
fiadds
or
insl
arpl
dec
mov
clc
int3
push
xchg
cmpl
cmp
jbe
movsb
insb
jmp
call
test
inc
lock
adc
pop
bound
lock
xchg
and
lret
stc
cltd
adc
push
mov
mov
insb
stos
iret
pop
xor
jb
mov
out
pushf
pusha
xlat
fnstcw
cltd
lret
arpl
ret
pop
es
cmp
jmp
add
ficomps
negb
loop
adc
pop
lods
mov
or
mov
and
lods
in
inc
cmc
add
pcmpeqw
xor
cmpsb
into
push
ret
push
push
nop
pushl
popl
movw
pushf
pushl
pushl
ret
push
cwtl
movb
bswap
movl
push
not
mov
not
lea
movb
call
rclb
cmp
lds
notl
shrb
xlat
sub
aaa
cmp
dec
lcall
nop
nop
int3
inc
push
mov
push
add
lock
out
cltd
cmp
jne
and
mov
bound
rolb
aas
sub
and
add
inc
call
addr16
fmuls
in
adc
mov
push
sbb
lret
jmp
mov
bound
adc
test
les
inc
arpl
push
mov
enter
xchg
bound
movsb
dec
pop
inc
sbb
jae
adc
push
or
repz
or
idivl
sti
insb
xchg
imul
js
jnp
or
inc
dec
xchg
cmc
inc
in
fdivrp
sbb
or
push
fs
jns
or
and
and
xchg
sar
decl
xchg
sub
ljmp
add
mov
rcl
test
mov
test
stc
lea
add
cmc
mov
rcl
add
bt
test
btr
bsr
movl
bts
rcl
sub
mov
jmp
or
mov
cmp
mov
bt
repnz
jmp
lea
jne
pusha
mov
pusha
lea
jmp
jmp
movb
push
mov
push
movw
pushl
ret
movl
pusha
pushf
push
lea
jmp
aad
cmpsl
mov
arpl
sarb
sar
loopne
sbb
mov
xor
fs
jl
imul
stos
or
dec
lcall
in
or
stos
xor
cmpsb
pushf
lret
and
pop
ds
jg
je
inc
sub
pop
adc
sbb
pop
adc
arpl
and
push
jg
cmpsb
inc
pop
mov
ljmp
je
arpl
and
movb
mov
jae
adc
fs
mov
aam
sub
ficomps
jge
je
cmp
jb
ljmp
daa
pop
call
aas
sub
or
jo
rorb
push
out
insl
sub
les
sub
adc
data16
dec
cmp
mov
xor
fidivrl
push
in
inc
orl
mov
fimull
inc
and
into
movb
lea
add
lea
inc
mov
rol
shl
mov
jmp
movl
pusha
jmp
add
adc
add
add
add
das
push
add
inc
adc
add
push
add
adc
add
add
inc
and
add
test
or
clc
pusha
call
mov
dec
mov
arpl
dec
inc
jo
lds
mov
aas
push
call
mov
ljmp
test
fistl
xchg
jne,pn
sbb
scas
dec
loopne
xlat
ljmp
inc
aas
stc
xchg
cmp
add
mov
adc
imul
adc
aaa
pushf
pushf
lea
je
clc
clc
cmp
pusha
call
jle
mov
arpl
push
rclb
notl
lds
mov
push
cmp
push
sahf
cmp
ljmp
in
ss
inc
xor
dec
xchg
gs
enter
lahf
jecxz
sbb
jb
and
sub
in
adc
je
call
loopne
cmp
stc
mov
movb
cmpb
movw
movb
push
jmp
lea
shr
mov
pusha
cmpb
movl
call
mov
mov
arpl
mov
push
out
repz
mov
loopne
mov
gs
dec
icebp
mov
pop
push
jo
sub
xchg
pop
out
sbb
fistpl
in
outsb
outsb
ljmp
or
test
mov
or
dec
cmp
inc
adc
xchg
cmpl
push
mov
loop
insb
add
jnp
mov
lock
sbb
aas
cmp
mov
add
jns
andl
mov
fs
jmp
movsl
ja
mov
arpl
lret
pop
out
sbb
mov
cltd
adc
btc
and
outsb
xchg
xchg
rolb
sar
mov
mov
fwait
repnz
bound
lods
pop
push
aam
gs
test
xchg
and
xchg
leave
lcall
das
xor
flds
insb
fisubrs
xchg
cmp
call
std
shrb
sbb
movsb
mov
test
rclb
mov
bound
ja
call
cmp
ret
and
mov
aas
jnp
jp
xchg
shlb
mov
es
sti
cmc
add
jne
andb
std
mov
dec
ret
fcoms
fcompl
xor
std
std
and
sub
mov
xor
popa
shr
and
sti
pop
or
arpl
cmp
pusha
and
or
pop
pop
mov
xor
jl
testb
mov
inc
arpl
dec
rolb
inc
and
ret
xor
push
mov
jp
sub
add
dec
push
jns
test
pop
and
and
jle
jno
out
pop
mov
outsb
in
lret
inc
lea
cmp
jb
js
out
pop
cmpsl
cmpsb
push
mov
inc
push
xor
jbe
xchg
push
popf
aaa
ret
push
fdivl
pop
dec
loop
pusha
loop
icebp
jns
outsb
push
scas
lret
xor
test
xchg
pop
pop
pushf
dec
pop
lods
mov
pop
lcall
mov
mov
cmp
ljmp
outsl
incb
adc
sbb
pop
loopne
scas
fcompl
xor
mov
push
bound
jmp
mov
inc
cmp
es
and
jmp
and
cmpsl
push
adc
gs
imul
cmp
call
lcall
adc
dec
orl
dec
jnp
dec
and
repnz
fistl
cld
push
and
insb
and
sahf
pop
pop
push
adc
jmp
mov
inc
out
enter
mov
std
adc
pop
mov
cmc
mov
xchg
cld
lods
out
inc
jns
xchg
adc
xor
hlt
lods
int3
lahf
mov
icebp
jmp
or
test
mov
jb
jne
sbb
jns
lret
lods
dec
outsl
call
xor
xchg
mov
fwait
aaa
xchg
cli
and
jl
or
push
jecxz
addr16
pop
ljmp
jge
ljmp
dec
nop
es
inc
ret
xchg
jno
stos
pop
mov
fwait
aaa
push
xchg
fstl
std
jl
jo
jle
jmp
add
fsubrs
test
call
cwtl
and
sarl
lock
inc
push
mov
xor
jns
rcrb
jmp
orb
lock
stc
adc
jle
mov
pusha
jne
push
shl
aaa
jno
int
add
cmc
test
cld
gs
out
pop
inc
xchg
cmpsl
es
mull
xchg
mov
sub
cmp
and
test
jmp
sub
xor
mov
inc
mov
test
add
dec
lcall
mov
fldl
push
cmp
xor
ret
mov
mov
mov
push
loopne
cmp
pop
jg
ljmp
ljmp
dec
fdivrl
hlt
fisubl
pop
xchg
js
adc
sbb
out
sub
icebp
nop
pop
push
jl
in
mov
pop
cmp
jae
cmp
rorb
pop
mov
push
loop
mov
mov
sbb
cmc
in
mov
idivb
xor
aad
and
je
jg
dec
push
pop
mov
test
lea
pop
add
cmp
jo
aas
fs
into
mov
ja
pop
ror
mov
outsl
cmc
stos
jo
pushf
push
push
or
mov
outsb
add
mov
dec
add
andb
rolb
sbbb
sbb
cmpsl
or
rcrl
and
iret
lods
xchg
lock
dec
sbb
out
dec
pop
fimull
pop
jns
xchg
sub
pushf
cmp
decb
add
cmpsb
add
cmpsl
cmp
dec
adc
xchg
cmp
fsts
jmp
push
sbb
aas
and
adc
xor
lods
lret
lods
loope
sub
cmp
stos
and
cmp
mov
stos
mov
out
iret
xchg
and
aas
jbe
push
dec
xchg
out
out
ror
lcall
sbb
scas
fnsave
mov
sub
and
movsl
inc
dec
std
and
mov
out
or
les
adc
and
cld
cmpsb
adc
outsl
test
cld
lock
or
scas
cmc
cltd
xchg
or
jge
xor
cmp
xor
fstl
mov
sarl
and
cld
jge
pushf
mov
movl
pushf
pushl
mov
pushf
lea
jmp
cmp
cmc
and
cmp
add
add
test
add
pusha
dec
jmp
call
cmp
or
jmp
call
repz
call
movb
movsbl
bswap
pop
mov
not
movsbl
setle
movsbw
lea
jmp
test
push
or
push
pushf
call
lea
je
call
xchg
cmp
inc
arpl
and
movsb
hlt
and
loope
enter
sahf
push
sahf
movsl
adc
or
ljmp
xchg
add
or
mov
inc
sub
or
sahf
test
outsl
xor
adc
push
mov
ja
mov
test
in
lret
inc
aaa
int
dec
mov
sub
inc
into
aas
rol
mov
stc
jmp
call
mov
cmc
sbb
sub
add
bswap
mov
pushf
mov
sete
pusha
lods
pushf
pushf
call
cmp
pushf
mov
pushl
lea
ja
bt
clc
sub
add
shr
btr
add
cmc
inc
jmp
push
call
lret
mov
mov
je
stc
lods
cld
push
add
mov
or
dec
hlt
xor
mov
ficoml
sub
ljmp
inc
jle
lods
cmp
mov
adcb
xor
js
cmc
popa
mov
xor
jmp
sub
mov
call
lret
aaa
push
je
aas
inc
cmpsb
icebp
iret
or
and
or
nop
mov
jge
cmp
cmp
out
mov
mov
js
lds
outsl
int3
xor
mov
lock
cmpsl
cmpsl
mov
fsts
cmpsl
movsb
dec
pop
inc
loop,pt
dec
xchg
pop
dec
loope
leave
lcall
rcrb
and
xor
push
pop
mov
mov
js
outsb
fdivrl
in
ds
dec
mov
lods
add
mov
push
pop
int3
mov
and
outsb
pop
jns
aaa
push
adc
mov
pop
or
and
jmp
push
test
inc
and
insb
inc
arpl
loopne
rcll
jae
and
dec
mov
pop
shrl
jl
data16
adc
movb
call
push
pusha
lea
jae
clc
lea
btc
mov
or
mov
setbe
sar
mov
pushf
sub
movb
repnz
call
bswap
mov
mov
lea
jmp
call
push
enter
arpl
mov
nop
addr16
movsb
pushf
fimull
leave
xchg
addr16
aam
cmp
jbe
movsl
in
repz
jb
xchg
imul
decb
mov
xor
jp
lret
xchg
push
int3
loopne,pt
sub
add
jecxz
cltd
in
adc
add
je
daa
outsb
mov
pop
dec
in
loopne
pop
int3
ror
push
mov
je
test
cmc
adc
add
mov
sbb
sub
push
push
loop
fbstp
inc
adc
and
push
inc
xchg
out
sbb
pop
cmpsb
xor
ds
jae
ljmp
dec
lods
sbb
pop
mov
xor
in
test
inc
push
shrl
inc
and
movb
pushl
call
pusha
add
clc
bt
movzwl
btr
mov
cmc
stc
movw
add
pushf
push
mov
clc
bt
clc
test
mov
call
pushf
call
pusha
lea
call
pushf
pushl
lea
jne
push
mov
mov
pusha
pushf
lea
jmp
jmp
pusha
lea
pushl
xchg
jmp
pusha
movw
pushf
call
clc
clc
add
mov
pusha
pushf
pushf
lea
jmp
bt
cmpb
lea
jp
pushf
pushl
lea
jne
lea
xor
xor
call
call
pusha
movb
movl
push
mov
pushf
call
call
lea
jne
pushf
mov
and
and
movsbw
sub
cmc
stc
lea
test
jmp
push
movl
jmp
repz
inc
movl
mov
jnp
inc
mov
aaa
and
push
mov
pop
sbb
dec
je
xor
fidivrs
cmp
cmp
aad
lock
cmp
ret
mov
lods
sub
mov
mov
cmp
lret
dec
sbb
xchg
xor
sbb
fistpl
adc
push
sahf
lret
inc
push
cmpsl
xor
lret
lret
cmp
dec
mov
push
xchg
sub
lods
or
cmp
inc
and
or
add
lahf
setno
setp
push
lea
movb
call
out
dec
movl
cmp
jb
inc
mov
cmc
sub
xchg
shll
sbb
lahf
les
mov
push
in
pop
jbe
jne
jge
mov
jbe
aaa
mov
adc
xor
iret
ret
pushf
lds
fwait
int
nop
les
fstpl
out
lock
adcl
inc
pop
push
daa
push
sub
out
mov
push
lods
dec
add
hlt
sub
into
int3
or
sub
sbb
fs
mov
cmpsb
mov
mov
movb
mov
pushl
ret
call
xchg
xor
movb
jl
test
mov
dec
hlt
aaa
out
pop
jnp
sahf
push
lret
xlat
gs
das
sti
push
mov
cwtl
cmpsl
adc
lret
inc
xchg
and
mov
pusha
pusha
pushf
lea
ja
inc
ror
sub
mov
sub
sbb
shld
add
add
btc
movzbw
mov
rol
mov
adc
mov
test
repnz
pusha
pusha
pushl
lea
jne
pushf
movb
pushl
mov
bswap
lea
pusha
movb
call
movl
lea
jl
pushl
pusha
movw
pusha
push
pushl
ret
dec
jp
roll
mov
jge
movsb
xor
mov
sub
push
push
inc
cmp
mov
mov
loop
xor
cmp
mov
sub
fwait
mov
imul
mov
shrd
mov
cmp
cmc
push
movb
cmpb
push
lea
jmp
sub
test
bt
pusha
pushf
pushl
popl
jmp
lea
jne
movzbw
movb
lahf
cwtl
not
push
seta
setne
push
lahf
lea
mov
jmp
jmp
add
cmp
bt
movzwl
bsr
mov
clc
add
pusha
cmc
mov
call
or
arpl
jp
push
dec
mov
stos
flds
pop
mov
idivl
stc
fcoms
xchg
mov
call
xor
pop
xchg
push
aas
xlat
and
mov
mov
mov
or
and
imul
repz
arpl
cmc
inc
mov
sgdtl
jecxz
inc
jbe
mov
push
insl
repnz
ja
cli
lret
inc
sub
test
fmuls
mov
in
addb
movq
test
xchg
jb
lret
shl
out
sahf
mov
lock
in
fucomip
add
int
gs
sub
out
ret
roll
lods
mov
mov
or
dec
imul
dec
and
add
mov
out
out
sahf
cli
add
ret
or
cmpl
loope
pop
decl
mov
sahf
cltd
enter
mov
mov
mov
outsb
ret
jg
jbe
iret
lahf
xchg
push
push
addl
mov
cmpsb
and
mov
xchg
jg
cmpsb
aad
xor
sbb
repnz
testb
popf
pop
sahf
pop
xchg
mov
lock
jp
sub
and
add
lods
lock
adc
cmpsb
inc
test
jnp
popf
fucomip
pop
fxch
int3
in
lret
rcl
shrb
popa
inc
xor
add
and
ja
lea
cmpsl
xchg
and
call
popf
push
cmp
mov
subb
sbb
hlt
mov
jne
scas
repnz
sahf
and
xchg
mov
enter
sbb
xchg
scas
dec
addb
insb
adc
mov
out
adc
stc
mov
adc
pop
xchg
je
add
xchg
loopne
xchg
add
sbbl
xchg
cmp
pop
aam
xchg
xchg
into
repz
mov
mov
mov
in
mov
lahf
daa
jnp
mov
mov
mov
ss
out
sub
adc
push
mov
insb
xchg
ret
pop
push
ljmp
rorb
mov
jg
aam
xchg
adc
test
xchg
lods
mov
lcall
mov
test
sahf
jbe
mov
test
sar
cltd
mov
push
and
mov
add
lcall
loop
mov
xchg
cli
mov
add
cmpsb
lahf
orb
pop
lahf
push
jb
and
fidivl
push
shl
add
push
lahf
cmp
testb
ret
xchg
into
mov
mov
loop
mov
xchg
sahf
mov
add
lret
push
jp
loop,pt
mov
xchg
stos
mov
xchg
push
inc
mov
pop
mov
loop
mov
xchg
xchg
lahf
out
incb
add
ficoml
push
add
mov
orb
mov
in
lcall
mov
repnz
lock
or
cmp
jle
enter
lret
jle
popa
lds
hlt
outsb
jle
lret
sub
pop
or
jle
xchg
inc
mov
pop
in
xor
ficoms
das
push
loop
xchg
ficompl
lock
dec
mov
enter
inc
dec
lcall
adc
loope
movsb
add
fcomi
and
test
mov
cmpsl
lods
cmp
pusha
fbstp
insb
mov
sub
pushf
xor
orl
int3
xchg
push
mov
incl
test
ret
into
mov
xor
and
xchg
jle
shlb
loopne
loope
icebp
lods
loop
popa
xchg
orb
pop
xchg
out
mov
and
sub
loope
dec
xchg
loope
das
push
mov
negb
rolb
push
jae
ss
test
push
sahf
lret
pushf
pushf
nop
dec
out
cmpsl
xchg
scas
es
ficoms
sahf
xchg
or
jecxz
mov
ljmp
addl
push
push
sahf
add
bound
pushl
mov
popf
scas
mov
mov
ss
rcll
mov
mov
cwtl
out
xchg
orl
inc
cmpsl
iret
push
xchg
pop
ds
dec
ja
mov
xchg
lret
xchg
popf
jg
push
out
jg
adc
adc
cli
rcr
ljmp
sub
ret
loopne
pop
call
or
mov
push
jb
xchg
out
test
fiaddl
mov
jle
in
sarl
xchg
sarb
mov
cs
jecxz
aam
lock
stos
mov
sbb
or
sub
or
icebp
xchg
mov
xchg
pop
int3
insl
xchg
aad
out
lret
mov
cs
lcall
adc
ret
mov
push
testb
lret
outsl
xor
lahf
xchg
rolb
mov
rorb
ss
push
iret
sahf
add
push
scas
outsb
loopne
jne
ljmp
push
and
les
out
gs
cli
push
xor
xlat
insb
mov
fwait
aas
xor
xor
push
lods
mov
push
out
and
mov
out
xor
mov
ds
out
jecxz
icebp
hlt
lret
in
loope
jp
in
sahf
aam
pop
repz
pop
shrl
loop
in
fidivl
mov
mov
mov
int
jae
xchg
mov
inc
mov
dec
lahf
loop
dec
shll
pop
xorl
or
or
movsb
lods
sbbb
ljmp
or
cs
loop,pt
les
rclb
ds
jge
out
bound
xlat
outsb
jae
ljmp
das
fwait
lock
in
dec
xchg
xchg
mov
dec
pop
mov
mov
mov
lods
sahf
adc
int3
dec
test
xchg
jmp
out
dec
xchg
xchg
mov
dec
lods
aas
icebp
nop
xchg
mov
sbb
ret
push
jne
lods
dec
int3
or
dec
or
jmp
jg
add
dec
lcall
mov
or
setbe
arpl
ss
frstor
jecxz
rclb
aad
mov
xchg
mov
mov
jge
jge
int
cmp
cs
mul
lret
repnz
cmp
ret
lcall
lock
int
call
ficoml
jecxz
mov
repz
and
mov
repz
out
int
and
mov
sub
sub
out
and
mov
cmpsb
sub
repnz
cmpsl
loope
stos
ds
jecxz
mov
dec
sbb
fimuls
imul
testl
add
aam
jno
mov
mov
sahf
shlb
aad
ret
es
jg
cmp
ja
test
push
fwait
scas
and
ds
sbb
mov
cwtl
int3
enter
mov
xor
cmp
xchg
sub
and
daa
mov
push
xchg
orl
add
cmpsb
loop
cmpsl
cmc
into
cmpsb
pop
mov
rcl
aad
fisubrs
inc
ret
scas
jbe
mov
jp
or
jge
or
mov
inc
mov
ret
ljmp
mov
mov
sti
pop
mov
fstl
xchg
les
xchg
and
in
mov
and
xchg
add
add
testl
inc
into
rorb
xchg
sbb
notb
data16
cmp
dec
lods
xchg
pop
daa
mov
mov
push
iret
shr
andl
cld
cs
jg
je
jp
repnz
lods
jbe
lcall
xchg
pop
cwtl
orb
fmull
xchg
rorb
inc
add
add
push
sub
loop
lods
lcall
xchg
or
fldt
inc
lea
pop
jg
insb
jb
popa
jl
lcall
rcr
iret
nop
and
decl
test
fadds
test
cmp
sbb
addl
jp
mov
inc
cmp
and
enter
mov
pop
mov
and
scas
cs
or
jge
into
jle
jge
xchg
pop
pusha
mov
call
aad
enter
mov
lcall
mov
xor
push
loop
enter
push
invd
popf
push
into
mov
ror
iret
setb
fwait
out
cltd
loope
pop
loopne
cs
shl
stos
into
pop
cwtl
pop
iret
stc
ds
pop
pushf
cmp
mov
shl
add
inc
ljmp
rcrb
sahf
lret
pop
into
cmp
inc
sahf
sub
mov
jbe
add
xchg
sti
nop
out
repz
sub
and
sbb
adc
or
cli
ret
dec
lds
ds
mov
dec
xchg
xchg
or
push
jbe
repz
lgs
xchg
pop
mov
or
lods
rcl
ret
adc
or
adc
push
fisubl
lods
fiadds
or
mov
mov
or
shll
int
cs
roll
aad
rcrl
adc
pop
negl
lds
ror
mov
lcall
ds
pop
ror
scas
xor
shll
add
orb
fnstsw
push
inc
movb
xor
ljmp
or
call
pop
loop
or
enter
xchg
pop
jmp
aad
inc
adc
rorb
dec
adc
jmp
mov
push
add
push
or
js
in
xor
ret
xlat
sbb
divl
push
subl
and
push
pop
mov
xchg
push
sarb
std
aad
sti
inc
sbb
stc
adc
rcrb
jae
roll
ss
ss
dec
xchg
lock
push
sarb
sub
not
inc
inc
cltd
inc
into
jmp
jbe
cmp
loope
push
repnz
stos
aaa
mov
ss
mov
lcall
xchg
ficoms
xchg
or
test
lret
push
or
lret
sub
lahf
shl
shll
adc
lret
scas
sbb
adc
lds
pop
push
and
pop
daa
adc
cmp
xor
pop
push
subb
sub
sub
adc
xor
sbb
or
lret
call
add
call
sub
xor
pop
mov
jb
int3
ljmp
adc
mov
into
ss
add
xchg
or
es
ljmp
aam
popf
shrb
mov
testb
mov
sti
outsb
fwait
pop
xor
iret
push
mov
mov
mov
enter
add
push
outsl
roll
mov
jo
xchg
xchg
sbbw
xchg
xchg
and
aaa
lahf
scas
cmp
out
jbe
out
out
add
sarb
mov
shld
lds
jp
outsb
lcall
and
or
loope
dec
adc
xor
mov
cli
je
xchg
jge
inc
stos
ss
jg
or
mov
xchg
xor
inc
mov
jbe
xchg
mov
ret
mov
iret
addb
pop
rcll
ret
pop
insb
xchg
test
mov
mov
rolb
xchg
cld
mov
fiadds
xor
inc
mov
push
subb
mov
pop
shlb
loope
and
mov
popl
xchg
adc
inc
lahf
and
sub
ss
xchg
cmp
rol
in
icebp
es
loop
call
push
in
pusha
lcall
ja
lods
adc
add
fisubrs
hlt
jo
mov
mov
dec
clc
push
cmp
push
sbb
sahf
mov
dec
mov
cmp
shlb
jbe
scas
pop
scas
mov
sbb
aam
xchg
rol
icebp
jge
mov
sbb
add
dec
rcr
rol
push
leave
push
mov
jecxz
int
mov
repz
loope
out
push
or
int3
mov
shr
xor
dec
das
add
lock
lock
outsl
fisttps
sbb
xchg
addr16
sbb
mov
xchg
pop
xchg
mov
test
into
mov
adc
int3
in
xor
int3
bound
je
add
test
cwtl
js
loopne
pushf
mov
sub
xor
adc
cwtl
sub
cmc
jmp
push
adc
jecxz
ret
or
mov
push
mov
addl
mov
cmpsb
or
nop
sbb
sub
scas
mov
inc
pop
mov
adc
jbe
xor
test
xchg
jo
popf
movzbl
cs
mov
enter
lahf
cmpsb
jg
push
ret
sbbb
sahf
xchg
jg
es
aam
sarl
fstpl
mov
xchg
rclb
int3
cmp
push
cmpsb
cmp
add
xor
nop
fdivs
movsl
out
jb
mov
out
add
jecxz
int3
in
cs
cwtl
mov
mov
mov
mov
sub
into
jg
mov
scas
lret
in
enter
mov
mov
rcrb
fidivs
scas
ror
pop
inc
xchg
loop
add
lods
push
sub
or
ljmp
arpl
dec
push
mov
subb
xor
sbb
je
jecxz
mov
pushf
mov
scas
clts
push
push
or
movsb
cmp
imul
or
xchg
int
dec
in
cmpsl
stos
pop
push
int
mov
mov
or
and
mov
xorb
mov
lret
xor
xchg
ds
jp
test
out
ds
mov
roll
mov
sbb
xchg
cmc
test
lret
inc
popl
in
xchg
mov
adc
cli
add
mov
ds
pop
lea
scas
rolb
mov
in
bound
shr
mov
addb
sub
sahf
pop
mov
pop
cltd
out
pop
cltd
pushw
popa
cwtl
call
mov
inc
mov
xchg
jg
sarl
mov
jp
std
jg
popf
inc
or
std
cmpsl
jg
adcb
cmpl
jg
int
mov
lods
mov
sub
cmp
mov
mov
cld
sahf
aas
sahf
jp
filds
jbe
mov
scas
push
or
pop
fdivrl
imul
inc
xchg
fdiv
in
aas
jp
es
mov
jno
addl
test
push
fisttps
mov
orb
int3
movsl
ss
jne
lcall
mov
out
or
inc
orb
into
mov
scas
aam
cwtl
or
lea
into
lcall
test
popf
int3
sub
cmp
push
xor
mov
incb
in
ss
fiaddl
xchg
loope
push
or
push
and
or
push
jge
add
cmp
and
xor
dec
nop
pop
mov
mov
pushf
mov
pop
ficoms
scas
enter
cmpsb
mov
jp
ret
pop
sub
decb
in
int3
ret
pop
mov
andb
inc
mov
pop
or
add
lret
ret
pop
mov
bound
pop
sub
testb
mov
pop
mov
andb
inc
mov
pop
clc
nop
in
mov
mov
mov
js
push
outsl
xchg
inc
mov
je
xchg
push
ss
dec
mov
mov
scas
xchg
fadds
lock
or
mov
xchg
cvttps2pi
pop
bound
orb
mov
call
adc
mov
pop
jb
addb
mov
ret
ret
dec
aas
add
rdmsr
mov
rolb
xchg
mov
add
mov
nop
push
mov
and
pop
lock
filds
dec
sysenter
mov
pop
lock
fisubs
mov
jl
andb
pusha
ret
pop
cld
nop
out
mov
mov
movsb
ret
mov
pop
rsqrtps
mov
inc
scas
fmull
int3
mov
pop
cwtl
push
xchg
shl
cmp
inc
xchg
lss
push
jo
jmp
push
mov
sub
pop
repnz
loop
rol
rorb
mov
mov
xchg
jbe
xor
pop
in
nop
in
fadd
int3
movsbl
pop
mov
mov
mov
pop
out
nop
fsubl
mov
test
pushf
nop
pop
orb
push
movb
mov
pop
repnz
in
pop
inc
sub
jl
jg
add
xor
mov
mov
inc
ret
pop
inc
xchg
mov
scas
sarb
jp
mov
cmp
es
nop
jg
and
mov
xchg
mov
pop
inc
and
pop
movsb
xor
and
dec
cmova
pop
adc
ret
pop
and
xchg
mov
test
xchg
push
add
dec
fists
add
ljmp
movsb
mov
jb
bound
xchg
inc
ret
pop
sbb
loop
repnz
xchg
movhps
pop
bound
adcb
mov
loop
notb
cs
mov
or
andb
lret
loop
out
nop
add
xor
pop
xchg
jb
orb
stos
movzbl
pop
cli
nop
adc
inc
mov
pop
mov
bound
mov
pop
int3
xchg
xchg
jg
pop
jle
or
jp
jge
loop
test
data16
mov
pusha
sbb
cmp
out
andl
xchg
movsl
inc
inc
js
lcall
pushf
aad
sti
mov
mov
xor
lea
sbb
in
idiv
fmuls
lods
mov
mov
rclb
mov
test
enter
jecxz
push
xor
cltd
fildl
mov
test
xchg
ret
dec
add
dec
addr16
sbb
testb
xor
and
mov
in
mov
mov
cwtl
nop
push
lret
jmp
js
jbe
cwtl
mov
pop
push
orb
mov
push
cmpl
xchg
faddl
or
dec
lcall
add
ljmp
scas
sub
inc
mov
loope
dec
jo
cmp
sahf
mov
cmpsl
mov
pop
mov
cmp
pop
fistpl
add
nop
cmpsb
dec
incb
cwtl
stos
scas
sarl
hlt
fs
sub
inc
lret
out
in
arpl
and
mov
into
dec
lods
aam
pop
lods
pop
cmovbe
sub
into
or
mov
sub
roll
pushf
lahf
mov
or
mov
int
out
lcall
mov
dec
mov
ret
js
mov
dec
sahf
push
add
fldenv
cmpsl
dec
sub
push
fiadds
data16
repnz
xchg
loopne
fwait
imul
mov
cltd
mov
test
cmp
xchg
mov
sub
mov
xchg
jne
mov
stos
inc
imul
mov
dec
int
push
and
nop
push
popl
out
mov
add
mov
int3
cmpsb
jecxz
cmp
inc
jno
cld
mov
cmpsl
mov
add
sbb
or
repnz
outsl
add
sarb
ljmp
cmc
mov
negb
and
jmp
outsb
int3
dec
mov
shlb
jne
stos
pop
cmpsl
fistl
sbb
mov
shll
jbe
mov
aad
xor
xchg
jl
not
adc
mov
mov
ret
mov
jnp
into
addr16
dec
rorb
lahf
mov
mov
and
inc
std
jp
addr16
stos
rorl
and
nop
test
movsl
mov
mov
mov
addr16
movsl
shr
xchg
mov
xchg
nop
icebp
mov
stos
cwtl
xchg
inc
popa
add
inc
jne
mov
popf
mov
sbb
das
dec
cmpsl
flds
pop
hlt
cmp
fs
int
ret
pop
jmp
add
pop
sub
cld
sahf
decl
pop
sbb
or
pusha
jbe
dec
jg
inc
adc
dec
das
sahf
mov
mov
mov
xor
and
cli
mov
movzwl
mov
ja
popf
mov
mov
sarb
out
sbbb
xorl
mov
adc
jns
cli
leave
scas
test
cli
adc
bound
packsswb
mov
ja
popf
mov
mov
roll
ja
popf
mov
sahf
xchg
lahf
popf
mov
mov
jo
mov
ja
push
pop
cmp
lea
lret
int3
jo
mov
ja
popf
sbbb
lds
cli
movsb
or
repnz
jne
pop
and
add
pop
adc
cli
jecxz
pmulhuw
jmp
movsl
in
cld
sub
negb
lock
mov
sub
repnz
mov
mov
ljmp
rcrb
sahf
pop
shr
pop
stos
fidivl
stc
mov
popf
jge
es
shlb
call
ljmp
out
test
enter
aam
dec
sahf
dec
mov
add
test
imul
sub
imul
add
push
xor
in
adc
adc
in
pop
in
mov
sbb
mov
sarb
push
clc
shll
mov
aad
loop
ljmp
xor
nop
in
pop
lea
bound
into
cmp
repnz
jecxz
icebp
mov
scas
aam
rol
mov
notb
loope
mov
pop
lcall
add
or
add
mov
call
dec
cmp
lahf
shl
fadd
cwtl
daa
xchg
push
cmp
add
mov
xchg
cmpsl
test
mov
dec
xacquire
adc
mov
rorb
shl
cmpsl
les
dec
icebp
xchg
adc
add
add
out
dec
mov
aaa
sar
icebp
sub
data16
shl
loopne
cltd
lcall
dec
mov
cmpsb
sbb
adc
xchg
pop
lock
stos
fadds
jmp
loope
jbe
lea
out
cmpsl
lcall
lods
mov
outsl
test
add
ret
mov
aad
xchg
add
cmp
push
add
mov
call
mov
inc
push
call
xlat
cli
adcl
out
into
mov
jne
push
repnz
add
jbe
movb
xor
cld
inc
push
lcall
into
sub
sub
call
neg
imul
xchg
push
inc
or
bound
mov
inc
and
mov
ds
mov
iretw
test
cmp
push
repnz
sub
out
shlb
adc
cwtl
jg
jo
sti
hlt
data16
repz
xchg
popf
inc
dec
test
test
hlt
add
rcll
ret
call
or
pop
add
lea
pop
adc
cmp
mov
sbbb
inc
dec
aad
icebp
add
enter
sbb
mov
mov
lahf
cmpsl
stos
xlat
dec
add
lret
out
int3
pop
fiadds
iret
bound
popa
add
cltd
fnstcw
xor
cmpsb
fmuls
repz
dec
outsb
mov
pop
loopne
movsl
aam
cmovbe
addr16
sarl
lods
rcrb
xchg
mov
jg
xlat
inc
imul
pop
repz
inc
mov
loop
cwtl
push
mov
adc
mov
rcll
add
sarb
out
lahf
sbb
inc
xchg
xchg
std
call
and
into
pop
cmc
and
cmp
fbstp
adc
mov
out
cmc
xchg
rorb
mov
lds
sahf
mov
test
loop
mov
gs
decl
rcrb
cmp
outsb
addr16
mov
jl
out
iret
sbb
jle
add
addb
jp
ss
xor
mov
fsubr
mov
pop
add
adc
or
ljmp
dec
ret
add
mov
inc
mov
xchg
andl
jecxz
lret
push
mov
inc
call
data16
ja
jb
orb
out
out
fsubrp
popf
addr16
mov
loopne
int
xchg
xchg
push
xchg
aas
je
sahf
xchg
xor
pop
jo
aas
iret
dec
out
pop
fcomps
cs
nop
push
sbb
popf
jle
mov
ror
pushf
cmp
scas
shlb
adc
mov
xchg
movsb
jecxz
sub
mov
shrb
and
or
mov
xchg
or
lea
mov
sbb
sbb
fwait
jb
call
ds
fcomip
add
mov
lcall
test
data16
es
addr16
xchg
bound
dec
mov
loop
mov
sahf
nop
xor
lahf
adcb
outsl
shlb
lds
shlb
xchg
into
mov
push
inc
jbe
cmp
adc
xchg
jg
call
jne
add
gs
addb
add
sbbl
jecxz
mov
add
xchg
mov
sbb
mov
mov
cmp
ret
add
lahf
addr16
hlt
mov
xchg
insl
nop
in
movsb
mov
push
jbe
add
int3
dec
xor
add
faddl
adc
in
lcall
jg
repnz
or
cmpsb
imul
mov
cmpl
lea
xchg
out
sahf
dec
pushw
fsts
dec
jp
jge
mov
ficoms
rep
in
mov
ljmp
jbe
rol
movsb
cmpsl
fs
paddusw
sub
xor
adc
into
mov
inc
jo
cltd
inc
or
out
dec
and
sbb
pop
jg
or
scas
add
fdivs
mov
mov
xor
add
fwait
call
xor
sub
cld
cmp
test
adc
sbb
or
mov
fdivrs
jp
add
and
mov
jl
mov
outsb
and
sbb
ss
aad
xchg
in
cvttps2pi
loopne
mov
push
shlb
adc
call
mov
or
and
rcll
add
fmulp
in
and
rolb
sub
dec
repz
lods
jge
mov
pmaddwd
into
xchg
icebp
bswap
clc
lods
je
push
ret
cltd
test
xchg
sbb
in
fnstcw
lcall
imul
aad
test
mov
cmc
leave
enter
or
pop
jle
pop
test
mov
xchg
in
or
sub
cwtl
xlat
xchg
xchg
lahf
or
lahf
adc
or
sub
push
cmpsl
imul
xchg
and
stos
xor
cld
jns
sub
cld
sahf
inc
xchg
stos
mov
incl
mov
pop
fs
mov
sahf
imul
shrl
mov
roll
pop
int3
xchg
jp
scas
mov
ljmp
rorb
movsl
pop
rcrb
testb
mov
int3
inc
adc
inc
xchg
fstp
inc
add
imul
and
jle
int
mov
rorb
mov
push
leave
xorb
add
femms
push
cmpb
inc
movsb
pop
outsb
fdivl
das
cwtl
clc
cmp
nop
mov
mov
out
lds
cmpsl
std
out
popf
xor
mov
lret
arpl
jge
fadds
mov
mov
es
inc
test
psraw
outsb
imul
fucomp
out
xchg
inc
or
push
mov
cli
push
repnz
fiadds
mov
jno
nop
in
inc
mov
sahf
lds
push
popl
cli
fisubrs
pop
pop
xchg
imul
xchg
inc
jo
out
xchg
jo
sub
incb
xor
mov
adc
mov
jl
ss
je
fiadds
push
xor
les
faddl
out
mov
out
jg
in
add
scas
or
cmp
lret
repz
shrl
or
mov
and
mov
mov
outsb
out
sahf
andw
movsl
hlt
movsb
mov
shufps
push
lods
sahf
pop
lea
mov
mov
dec
push
repz
adcl
cwtl
stc
aas
push
jb
xor
cld
adc
push
fstps
sbb
hlt
mov
lcall
scas
xor
mov
daa
les
je
iret
popf
mov
xchg
cltd
push
out
add
xchg
repnz
push
movsl
sub
stc
into
andl
andb
xor
mov
scas
sbb
shll
fwait
js
push
mov
mov
or
add
pop
sub
push
repz
cmpsl
stos
add
jp
jbe
pop
push
fldl2t
nop
mov
insb
add
xor
rorb
inc
aaa
mov
stos
fs
adc
cltd
mov
test
lret
out
dec
lret
and
les
mov
dec
lret
dec
mov
sub
mov
mov
jbe
xchg
inc
push
cmp
xlat
xor
test
xchg
mov
sbbb
lock
enter
mov
mov
and
rcrl
or
cmc
sahf
scas
pop
mov
in
out
or
popa
ud1
mov
sub
and
xchg
cs
push
cltd
outsl
popf
repz
inc
shl
adcl
subb
fimuls
out
cmc
loop
xchg
repnz
xchg
stc
jmp
or
cmp
addr16
movsl
or
xlat
insb
out
test
inc
imul
movsl
jmp
cmp
sarl
cmp
pop
nop
cwtl
jg
jg
scas
jl
int3
dec
addb
sti
adc
insl
mov
and
or
sbb
jns
je
jb
lahf
mov
dec
sahf
inc
add
popa
rolb
or
xchg
jne
add
mov
jno
add
enter
cltd
addr16
int3
fsubrp
mov
addb
addr16
dec
scas
pop
mov
inc
mov
jne
or
cmpsl
int3
pop
pop
ret
xchg
sbb
xchg
inc
mov
sbb
xchg
jg
xor
lea
cmp
mov
xchg
push
pop
stc
decb
jne
sbb
int3
outsl
xchg
add
and
in
jns
and
mov
jbe
addr16
mov
insb
inc
loopne
push
imul
sub
sub
xchg
sahf
ds
mov
push
jmp
mov
xchg
ret
out
out
mov
cmp
push
xchg
cmp
in
xchg
repnz
test
shlb
loop
hlt
cli
sahf
jp
mov
cmp
pop
outsl
mov
cmp
push
ret
cs
imul
shrl
jo
pop
outsb
pop
xchg
push
inc
shrl
jecxz
je
rorb
or
sbb
movsl
aas
loop
mov
sahf
sarb
pushl
scas
loopne
or
mov
in
test
push
into
call
xchg
pop
mov
scas
ffreep
or
std
repnz
scas
mov
sub
aas
movb
cmpsl
cmpsb
jmp
adc
lock
das
repz
jnp
add
xchg
xchg
shlb
mov
pop
cltd
ss
sbb
cmpsl
xchg
jg
shl
cmpsb
outsl
into
xchg
cmpsb
xor
pushf
mov
xchg
add
dec
fwait
dec
adc
xchg
in
into
sub
mov
ffreep
loopne
or
cwtl
lods
cltd
mov
fistpl
ss
jae
out
std
cmp
sbb
push
repnz
adc
aam
gs
lret
mov
cmp
pop
dec
mov
pop
mov
les
xchg
jns
enter
ret
idivl
loope
cs
jnp
dec
stos
iret
inc
hlt
or
and
xor
xchg
jg
popf
shlb
cmpsb
mov
cwtl
push
pop
xchg
xchg
pop
lcall
xchg
loopne
scas
pop
mov
test
sbb
push
sub
repz
pop
mov
hlt
mov
xchg
dec
mov
mov
lcall
xchg
xchg
xorb
cmpsb
repnz
push
sbb
mov
jg
shrb
ffree
pushf
call
add
mov
xchg
sahf
ror
fs
lahf
add
pop
scas
les
leave
dec
jns
rorl
fisubl
xchg
jp
arpl
aam
cmp
xchg
lods
xchg
scas
test
shll
cmp
push
aas
mov
xchg
inc
sti
mov
in
cld
jecxz
and
orb
xchg
sahf
push
out
insb
xor
fisubl
or
push
insl
mov
add
dec
roll
pop
lcall
flds
fcoml
or
mov
mov
add
mov
lds
mov
call
xchg
mov
ss
in
aas
sarl
cs
push
bound
cwtl
outsb
or
cmp
insb
mov
jl
mov
and
addr16
imul
sar
clc
xchg
imul
lret
mov
lock
mov
xchg
stos
aad
ror
enter
pop
and
lret
outsb
sub
lret
or
in
roll
cmp
arpl
mov
into
adc
stos
adc
mov
nop
ret
push
fcmovbe
cmpb
mov
mov
aas
addb
decb
mov
dec
mov
lds
jno
popf
jo
or
lcall
mov
mov
pop
push
test
mov
pop
jle
push
sahf
cmp
xchg
in
nop
dec
mov
lret
add
push
subb
cmpsl
xchg
loopne
scas
sahf
imul
cltd
mov
test
pop
push
xchg
hlt
adc
jnp
jb
out
jmp
into
or
add
and
inc
mov
repnz
and
push
push
add
pop
pushf
inc
jno
nop
sub
inc
shufps
jb
lcall
fwait
xchg
cmp
mov
fistpl
mov
test
mov
mov
cli
lahf
loopne
clc
xchg
movzwl
push
in
xchg
mov
dec
xchg
cmp
nop
dec
mov
loopne
xchg
sbbb
xchg
mov
mov
or
and
mov
xor
xchg
xor
xchg
inc
xor
scas
mov
sub
inc
xchg
and
or
negl
stos
ret
mov
jne
test
jno
xor
adc
mov
pop
orb
mov
jae
xchg
fs
mov
rcrb
mov
adc
pop
mov
cld
fdivrl
cwtl
push
inc
inc
cltd
rorb
mov
imul
mov
in
repnz
jmp
cmpsl
and
push
mov
mov
push
sub
fadds
adc
or
jns
scas
sub
movswl
add
xchg
mov
loop
xchg
inc
jae
shll
test
hlt
mov
fnstcw
sub
mov
stos
push
test
mov
lods
adc
add
movb
mov
mov
xchg
adc
inc
jo
addb
pushf
add
pop
decl
out
data16
xchg
mov
test
shrl
cmpsb
xorl
iret
outsb
outsl
lcall
mov
mov
lea
sbb
and
mov
shr
sarl
dec
dec
push
mov
daa
ss
lods
enter
inc
adc
mov
movsl
inc
call
ret
push
cwtl
dec
or
cmp
adc
xchg
lahf
mov
mov
mov
loop
or
test
loopne
jg
inc
jge
nop
scas
addr16
jle
popf
add
mov
daa
fidivrs
jbe
lret
pop
adc
add
mov
repnz
daa
xchg
shrb
faddl
push
mov
test
into
xchg
mov
mov
enter
pusha
sub
sbb
lods
rorl
cmp
mov
or
xor
adc
sbb
dec
xchg
mov
xor
fldt
inc
call
jns
pop
push
in
sub
mov
jne
sahf
mov
mov
div
movsb
test
jl
aam
xlat
pop
lds
inc
test
pusha
jl
push
js
jg
dec
adc
adc
js
jae
aad
js
out
imul
movsb
mov
sti
push
repnz
jg
push
pop
xchg
xor
repnz
jae
xchg
or
sbb
jbe
xor
iret
cmp
mov
or
sub
stos
int
xlat
and
in
xchg
xor
stos
xchg
or
xlat
sbb
adc
or
mov
lcall
or
into
shll
jnp
mov
xchg
nop
and
ljmp
andb
imulb
dec
push
test
xor
sub
out
mov
lods
cli
enter
xchg
ss
jg
xchg
shrl
mov
xchg
subb
add
lds
incl
jbe
lea
insl
clc
insb
mov
je
daa
mov
and
add
call
xchg
repz
or
scas
mov
add
mov
mov
mov
xor
lods
lods
jnp
aam
sub
adc
inc
sahf
xor
nop
sbb
adcb
pop
mov
add
fidivrl
repnz
add
dec
mov
inc
dec
mov
sahf
mov
dec
xor
add
xchg
cmpsb
aas
imul
jns
adc
mov
xchg
inc
out
repnz
aad
or
imul
pop
test
lahf
cmp
out
sub
push
int
loope
stos
adc
aas
jnp
or
xorl
rolb
testl
mov
lcall
mov
mov
outsl
sbb
scas
fwait
icebp
jg
test
mov
dec
aas
int3
rclb
mov
xor
xchg
pop
xchg
outsl
iret
imul
mov
pop
pop
mov
push
mov
ret
push
mov
cmp
sbb
imul
insb
mov
dec
cmp
lods
xchg
jmp
jb
mov
scas
daa
in
cli
shlb
in
ret
jmp
js
ljmp
pop
push
ret
add
push
jns
inc
dec
adc
sbb
add
aaa
stos
lahf
bound
pandn
xlat
or
pop
jno
pusha
cmp
mov
mov
cmp
cs
cmpsl
aas
cmpb
dec
sub
jb,pt
add
je
cmp
cld
pushf
lock
cmp
dec
fs
lds
rep
mov
mov
std
and
iret
and
dec
mov
xchg
lods
xchg
shrl
cld
inc
and
mov
and
xchg
fsub
xchg
mov
mov
xchg
insb
aam
mov
xor
xchg
into
xchg
or
push
jbe
pmaxsw
push
into
dec
bnd
xlat
xchg
shlb
bound
bound
jmp
enter
out
push
add
jp
mov
mov
xchg
and
push
push
lret
xchg
sbb
mov
fcoml
inc
cli
xchg
fisttpl
pop
jbe
cmp
int3
movl
aad
sub
pop
aam
jge
and
mov
hlt
xchg
and
jne
mov
out
repz
bnd
mov
jns
mov
repz
mov
mov
test
in
aam
xchg
xchg
sub
inc
xlat
bnd
push
xor
lods
xor
pop
jmp
and
fcoms
int3
jbe
mov
test
aas
fwait
xchg
ss
movsl
jo
fsubp
mov
adc
call
rcrl
cltd
adc
out
mov
push
push
xchg
cmp
pop
mov
subb
inc
push
inc
addl
mov
ljmp
pop
jne
shll
jge
loope
data16
push
sbb
imul
xchg
outsb
mov
add
ret
ljmp
cli
mov
push
filds
out
rcll
test
mov
push
inc
pop
sub
pop
iret
mov
outsl
mov
or
inc
push
push
jecxz
jbe
fistpl
dec
sysret
xchg
into
fcoml
push
data16
lea
sahf
mov
pop
mov
ret
mov
xchg
xchg
xchg
movb
adc
iret
jl
mov
xchg
cld
lds
data16
adc
rol
cmc
or
out
mov
push
sbb
xchg
xchg
sbb
xchg
xchg
mov
or
shl
xchg
bound
mov
ljmp
cmp
nop
aam
xchg
lea
loop
ss
int3
fbstp
xchg
or
add
sub
and
icebp
xchg
cli
daa
push
push
add
xchg
subl
and
mov
test
sub
fiaddl
inc
int3
jge
cmpl
leave
repz
mov
mov
inc
repnz
mov
lock
xchg
adc
int3
xor
xchg
adc
lea
inc
imul
push
cltd
out
lret
mov
ret
add
addr16
fwait
ret
pop
loop
repz
sbb
pop
jne
mov
dec
xor
inc
sub
cmpsb
mov
or
enter
mov
std
mov
insb
test
cmpsb
or
scas
out
fwait
mov
cmpsb
cmp
xor
and
dec
mov
stos
add
pop
mov
add
jne
cltd
mov
test
ds
psubsb
movsb
cmpb
rcll
add
cmp
test
sbb
jb
sbb
adc
pop
xchg
jnp
out
inc
push
and
xorl
mov
out
xchg
lea
aas
xor
mov
orb
repnz
lods
lcall
sbb
int3
dec
enter
and
cmp
inc
mov
mov
inc
rorl
je
shl
xor
mov
rcl
outsb
mov
imul
sbb
inc
cmpsl
jbe
jb
mov
jl
push
in
outsb
popa
jo
pusha
shlb
adc
jmp
sarw
xchg
dec
adc
mov
xor
lcall
cmp
cmp
pop
push
add
mov
lahf
movsb
ret
jl
sub
adc
push
and
mov
int
adc
flds
subb
clc
mov
fwait
pop
je
repnz
lods
cmp
ds
mov
sub
adc
into
sahf
push
data16
xlat
cmpsl
inc
jmp
sub
aas
adcb
cld
or
orb
xlat
mov
insl
aam
sub
aas
inc
dec
add
repz
xchg
fildl
roll
mov
pusha
mov
cmpsl
call
cld
push
xchg
ficoml
mov
inc
je
test
xor
mov
xchg
mov
shrb
leave
sahf
lahf
cmpl
stos
repz
nop
jb
cmpsb
in
dec
sar
js
frstor
test
jno
aam
mov
inc
or
repnz
dec
lret
jae
jbe
ss
lret
jns
xor
jo
sti
scas
call
out
outsb
mov
mov
leave
pop
call
push
xor
and
xor
mov
lock
mov
inc
mov
leave
in
ss
push
ss
nop
cli
mov
inc
in
pop
mov
cmpsl
pushf
std
insl
lahf
mov
push
sub
xor
es
push
cs
shlb
or
hlt
adc
adc
push
mov
add
xchg
andb
cmp
sbb
rcrb
xchg
push
nop
xor
mov
inc
loope
leave
xor
fldenv
inc
insl
and
mov
xchg
and
mov
into
cmp
mov
or
and
into
push
popa
fnsetpm(287
outsb
test
mov
lods
ljmp
out
arpl
or
repnz
or
lret
outsb
mov
ljmp
adc
inc
not
faddl
bound
sub
stos
push
jae
test
xor
mov
repz
xchg
adc
push
sbb
inc
loope
push
stc
into
loop
loopne
aad
sbb
mov
data16
vmwrite
iret
cmp
sahf
rclb
test
clc
stos
mov
test
sahf
xor
test
inc
pop
out
pop
das
mov
ja
push
add
mov
adc
push
sti
jp
mov
mov
cli
push
jne
cmc
mov
cmpsb
push
mov
mov
push
cld
nop
add
push
inc
into
test
lods
into
dec
nop
jle
or
stos
aam
inc
jg
xrelease
shlb
mov
stc
xchg
std
jo,pn
insb
and
cmpl
dec
aas
push
mov
dec
lods
out
pop
jl
flds
mov
repnz
cmpsl
je
add
aas
push
jg
lea
into
sarb
mov
arpl
jmp
mov
dec
loope
in
lea
or
push
cmp
fimuls
jbe
mov
int3
test
pop
jbe
dec
mov
dec
cmp
or
leave
pop
push
mov
mov
lea
in
idivb
jo
scas
repz
scas
ljmp
into
pop
fadds
pop
testl
xchg
jp
and
test
ret
aad
pop
ds
mov
sahf
loopne
xchg
andl
lods
mov
das
sbb
insb
mov
lods
xchg
je
stos
adc
ret
xchg
cltd
pop
rorb
test
jl
stos
push
or
ret
or
ljmp
xchg
push
add
inc
mov
subl
ret
test
sub
or
fcompl
std
int3
rorl
mov
ret
mov
mov
inc
xchg
aad
rorl
jg
popa
pop
push
addr16
sub
xor
pushf
adc
hlt
mov
mov
outsb
notb
stos
ds
daa
sbb
and
int3
pop
and
icebp
pop
scas
push
pusha
int3
or
enter
adc
push
xor
aam
rolb
jne
xchg
mov
xchg
mov
scas
outsl
push
es
mov
xchg
popa
mov
sub
rclb
lcall
idivb
int3
xchg
ret
test
rcl
pop
mov
and
sbb
mov
hlt
test
adcb
sub
sbb
out
push
lret
push
xchg
in
mov
pmullw
fwait
jecxz
lods
push
fiadds
repnz
cmp
push
pmaxsw
es
mov
sbb
cld
mov
out
jnp
lret
inc
xchg
jne
das
in
mov
xchg
mov
sahf
push
out
stc
ret
sbb
push
sahf
xchg
fcoml
xchg
push
mov
loop
inc
scas
mov
xchg
mov
cmpxchg
mov
filds
lcall
shrb
xchg
in
lods
xchg
sbb
adc
ds
push
or
sarl
mov
and
jp
adc
xor
adc
mov
dec
sub
inc
into
or
lret
clc
jp
pop
mov
scas
push
sbb
loop
aad
pop
mov
sbb
push
jb
repnz
xlat
xchg
and
rolb
and
sub
pop
adc
rorl
test
in
inc
mov
push
enter
sub
in
and
add
and
mov
jmp
cmc
mov
inc
adc
xlat
sbbb
roll
cmp
jmp
stc
mov
js
fs
in
xchg
sub
add
xchg
and
pop
nop
fs
mov
mov
cmp
fcom
inc
cmp
inc
add
sbb
in
xchg
jmp
push
mov
mov
ret
sub
jns
outsb
ret
roll
adcb
cmp
xchg
lcall
fwait
mov
add
lcall
aad
subl
iret
push
lods
es
jmp
outsb
int3
in
lahf
cli
enter
int
repz
sub
mov
outsb
sub
or
and
mov
add
lds
sbb
pop
aas
mov
and
mov
xorb
sbb
aaa
xchg
call
cmp
sahf
mov
cmpsb
ret
adc
mov
ret
mov
call
aas
jg
add
pop
push
repz
scas
or
add
or
loope
inc
test
clc
loopne
aam
cli
out
xor
add
rolb
and
imul
pop
leave
jg
repnz
add
mov
pop
lahf
test
push
mov
lahf
dec
xchg
add
add
pop
les
pop
iret
rcrb
mov
mov
stos
mov
cmpb
mov
sahf
mov
cmp
leave
xor
je
push
sbb
mov
push
push
sub
cld
data16
fnsave
add
cld
aas
stos
rcll
mov
repnz
jp
lret
mov
cmpsl
push
pop
xchg
mov
nop
sub
xchg
adc
cli
movb
xacquire
jecxz
cli
flds
movsl
lds
sbbl
mov
mov
cmc
orl
pop
mov
outsl
scas
or
mov
call
mov
push
inc
movb
out
mov
movsl
rorl
popf
dec
push
sbb
jp
mov
mov
les
sbb
mov
ret
jbe
imul
mov
adc
inc
pop
test
loopne
xchg
dec
fists
inc
cli
mov
mov
or
inc
out
mov
push
sub
cli
sub
popa
xchg
mov
push
cmpsb
sub
xor
scas
fwait
mov
add
data16
lea
shlb
or
data16
fistps
cmpsb
push
jo
and
int3
push
loop
shll
adc
or
lahf
mov
mov
addw
int3
ja
scas
push
loope
data16
outsb
into
pushf
jne
pop
pushf
ss
push
ss
cwtl
aaa
cmpsb
ret
push
push
cmp
inc
sub
mov
test
das
shrb
fistps
mov
fadds
cmpsb
or
movb
mov
call
mov
cmp
inc
outsb
sahf
and
push
sub
adc
push
push
arpl
pop
inc
mov
or
out
ja
in
leave
repz
jge
or
xchg
inc
sarb
out
aad
dec
out
mov
into
aam
or
xchg
mov
cmpsw
fs
mov
pushf
push
pop
out
leave
pop
popf
loopne
push
push
faddl
mov
clc
xchg
nop
jp
adc
in
and
mov
add
out
push
xor
ret
stos
ja
sbb
inc
in
orl
rcrl
data16
sub
xor
xchg
mov
test
stos
out
or
call
pop
xlat
xchg
and
sbb
push
xchg
dec
jle
push
push
aad
daa
imul
pop
push
lods
bnd
push
jb
mov
pop
add
add
push
lds
xor
call
mov
nop
rolb
lods
imul
inc
mov
add
jecxz
mov
add
std
orl
int3
xchg
repz
and
mov
pop
mov
sahf
pop
jne
aam
lret
add
dec
ja
mov
add
xchg
push
cld
leave
cmpsl
inc
mov
and
outsb
sub
and
inc
mov
cmp
dec
inc
loop
flds
mov
lcall
addr16
imul
push
mov
repz
pop
mov
je
fcmovnb
adc
lods
loop
lds
or
lret
jge
arpl
enter
cli
addl
ja
mul
dec
cmp
xchg
or
pusha
mov
xchg
xchg
add
jb
movsl
xor
lea
cld
scas
ds
repnz
jge
fstps
jmpw
mull
repnz
xchg
xchg
movsl
sub
xchg
lahf
pushf
or
imul
xchg
xchg
pop
xchg
cmpsb
addr16
inc
scas
nop
dec
outsb
and
nop
imul
sbb
popa
imul
imul
fimuls
jmp
daa
lret
lods
cmpb
lahf
xchg
cld
aad
mov
js
dec
jecxz
aam
mov
lods
loopne
jns
flds
sbb
or
pop
sbb
nop
imul
insl
shl
push
mov
loop
xchg
lret
cmpsl
pushf
aam
xchg
xor
test
fisubs
push
sub
addr16
enter
fstl
jg
inc
in
mov
ret
popa
pushf
pop
add
sub
sbb
pop
mov
pop
test
mov
je
push
adc
mov
adc
xchg
or
scas
jnp
sub
int3
in
pop
push
cmpsl
lret
in
dec
xchg
outsb
adc
push
jmp
adc
add
andb
call
inc
and
mov
cs
rolb
xlat
out
mov
pop
push
fsubrs
pop
stc
repz
imul
dec
pop
cli
es
fdivs
sarb
mov
jg
repnz
xchg
adc
imul
push
mov
mov
jp
mov
sbb
jb
fcoml
ret
ret
mov
insl
xchg
or
into
sbb
movl
scas
bound
hlt
jmp
out
add
sub
mov
mov
add
ljmp
mov
cwtl
mov
add
dec
mov
xlat
inc
movsb
ljmp
push
orl
into
repnz
rcr
adc
stos
mov
std
mov
and
pop
pop
bound
shlb
aad
inc
pop
mov
or
mov
ret
imul
cmp
mov
xor
mov
dec
mov
mov
sub
add
mov
je
cmp
testb
lcall
ss
inc
xlat
pop
pop
dec
ja
adc
lret
and
test
out
mov
shrl
outsb
addb
dec
scas
mov
testb
scas
into
outsb
addl
ss
es
fimuls
add
loop
sbb
fbld
mov
dec
ret
cmpsl
cmp
xor
outsb
adc
xchg
lea
aas
cli
mov
ja
test
mov
js
stos
out
or
pop
mov
xchg
out
movsl
add
xchg
fstpl
xchg
and
lret
jl
fists
es
push
test
add
push
cs
pop
sub
xchg
jnp
add
daa
lods
mov
cltd
fnsave
stos
cs
or
cs
fldt
stos
mov
repnz
xchg
and
ljmp
mov
roll
push
xchg
lret
xchg
into
out
mov
shll
mov
or
nop
out
lods
ds
int3
push
fiadds
movb
mov
add
ret
scas
loopne
mov
test
ds
shrl
ficompl
inc
fiadds
scas
loop
mov
jge
pop
hlt
arpl
xor
cli
arpl
xchg
add
add
loop
or
mov
sub
dec
push
test
and
loop
mov
xchg
mov
push
or
sahf
pop
pop
popf
lahf
jl
rolb
xchg
out
mov
jbe
adc
ss
xchg
jecxz,pn
mov
inc
push
int3
cmpsb
add
mov
cwtl
stos
inc
dec
mov
cli
mov
fwait
mov
lcall
nop
into
repz
mov
mov
aas
jb
test
mov
fs
xchg
repz
xchg
mov
jne
mov
lods
sahf
xchg
mov
stos
jle
aas
xchg
push
gs
jbe
data16
stos
inc
mov
cmp
out
inc
test
mov
cmpb
mov
pop
mov
out
mov
xchg
push
repz
mov
int
fisttpll
push
mov
mov
add
inc
cld
inc
rorl
xchg
stc
lea
mov
addb
or
dec
fbld
push
or
gs
mov
int3
andb
movsl
imul
pop
addr16
cmpl
jg
scas
and
mov
and
lret
repz
mov
cmp
cltd
rorl
cmc
mov
mov
ds
sar
bound
dec
arpl
lods
or
cs
mov
stc
leave
push
js
mov
cmpsl
jbe
push
mov
rcll
push
aaa
mov
lods
ret
mov
fmull
mov
mov
mov
outsl
jno
out
add
inc
addr16
out
pop
and
xor
jb
scas
jb
push
outsb
js
xor
fsubrl
or
int3
addl
ja
fmull
adc
ret
jp
lahf
push
mov
test
jnp
add
nop
inc
pushw
mov
mov
jnp
add
fstpl
call
movsb
filds
idivb
data16
mov
jecxz
imul
cmpsl
mov
or
or
sbb
jae
in
mov
or
int3
inc
das
data16
stc
andl
sahf
fldl
dec
xchg
sub
inc
movsl
in
std
ljmp
mov
js
mov
mov
cmp
jmp
enter
inc
in
fnstsw
enter
pop
dec
cmpsb
lods
cmp
pop
scas
arpl
mov
add
lcall
push
je
les
fisttpll
pop
mov
movsb
fbstp
aaa
leave
sbb
pop
adc
pop
aad
xor
mov
shlb
jg
arpl
sub
imul
push
adc
mov
out
imul
xchg
subl
xchg
mov
std
cmpl
int
sub
into
adc
popa
sub
ss
aas
sub
add
mov
push
rorl
outsb
into
push
pop
call
leave
xchg
jae
push
xchg
xchg
ja
stos
les
sbb
xor
xchg
shll
and
xchg
fidivrl
cmpb
xor
neg
gs
nop
fbld
sbb
jecxz
jmp
mov
les
call
jp
jns
jb
dec
mov
pop
mov
lret
jnp
stos
push
add
push
xchg
rorl
jne
jo,pn
dec
movsb
mov
lahf
push
inc
and
cld
fwait
aam
sub
cs
push
sbb
arpl
mov
or
les
cmc
cmpsl
call
fidivrl
or
jb
imul
mov
aad
adc
add
ret
inc
iret
adc
loopne
cmp
jg
repz
mov
lret
cmpsb
add
adc
mov
mov
es
xchg
cmc
xchg
loop
lret
pop
subl
lock
cmp
in
int
dec
dec
sahf
inc
mov
mov
jo
jbe
adc
jecxz
xchg
mov
inc
movsl
call
push
mov
xchg
lahf
push
lods
outsl
repz
mov
xchg
int
mov
loope
fldcw
mov
xchg
xor
jno
cmc
daa
jg
inc
test
mov
outsb
shll
cmpsb
and
xchg
in
mov
loopne
dec
xchg
pushl
push
xlat
lea
inc
push
mov
xchg
ds
subb
or
out
mov
xor
xor
les
pop
add
xchg
pop
jb
lods
enter
mov
sub
pop
or
icebp
jb
movsl
enterw
dec
sbbl
jb
add
inc
mov
or
or
or
adc
cmp
sub
mov
jecxz
into
mov
in
push
inc
test
into
test
mov
loopne
xchg
jl
lret
mov
jbe
add
dec
scas
ds
shrl
ficoms
inc
loop
scas
out
xchg
stos
adc
mov
test
mov
mov
dec
sbb
data16
cs
bound
mov
add
call
movl
decl
mov
andl
out
dec
dec
cmp
fwait
mov
mov
add
mov
test
or
into
call
fldenvs
jmp
insl
inc
push
js
test
jbe
inc
mov
dec
test
sahf
push
jmp
popl
out
pop
push
add
aaa
fnsave
mov
jge
cmp
popa
sbb
inc
aam
clc
mov
stos
data16
bound
or
mov
out
nop
xor
out
cmpsb
fildl
test
inc
fisttpl
jbe
xchg
iret
shrl
adc
cmpsb
js
popa
shl
mov
mov
add
loop
mov
mov
xor
xchg
call
pusha
mov
outsl
test
loop
pop
data16
lods
add
in
ja
std
js
cmp
cmp
cmpb
cmpsb
or
cmp
jo
fcoml
out
xchg
sub
int
mov
cmpsb
ret
fiadds
xor
xorb
cwtl
mov
movb
cmp
cmp
das
jo
je
incb
mov
xchg
mov
lds
scas
cltd
lods
cmp
enter
ss
xchg
jg
inc
mov
jl
pop
pop
mov
imul
mov
mov
aam
sahf
cmp
mov
adcb
xchg
repz
je
sbb
call
out
xchg
xchg
mov
lods
iret
gs
push
pop
mov
test
jb
sbb
mov
cwtl
pop
xchg
pop
push
andb
lahf
imul
add
int
in
push
sti
int3
xor
mov
mov
mov
adc
push
pop
fstpt
cmp
pop
fmulp
lahf
ret
pop
dec
test
bswap
xchg
adc
ret
hlt
add
data16
cmc
shl
jp
and
cltd
jne
insl
imul
leave
or
rcrb
push
or
dec
pop
popfw
push
in
sub
jbe
jb
das
push
cltd
add
stos
rcl
cmp
lods
into
rorl
repnz
cltd
mov
adc
js
out
jns
xor
es
stos
cld
mov
lea
cmp
and
inc
xchg
repnz
out
lock
das
imul
les
push
push
adc
loop
mov
imul
cld
mov
jp
push
push
cwtl
push
out
fwait
in
out
mov
xchg
fmul
dec
sub
ss
inc
test
dec
les
cmp
inc
jl
jo
es
push
movsb
or
mov
mov
cmpsl
pop
xchg
xchg
or
in
jbe
sti
jbe
test
cmp
bound
fsubrs
rorb
jb
mov
jmp
jo
insb
pop
dec
fcomps
roll
mov
mov
fwait
lock
push
lods
rcr
adc
ja
xlat
in
push
or
or
shll
dec
aaa
adc
jg
mov
fisubrl
dec
shlb
xchg
push
adc
rorl
adc
mov
inc
jp
fnstsw
pop
ret
mov
inc
nop
call
xchg
iret
in
test
cmpsb
loope
dec
mov
nop
arpl
rcrl
and
cltd
or
lds
lcall
pop
push
xchg
xor
scas
orl
pop
push
je
mov
lret
ficomps
out
ret
xchg
rclb
push
xchg
and
dec
or
aas
out
sub
mov
loopne
jb
je
shll
push
jp
jl
mov
mov
outsb
into
ja
cltd
xchg
ljmp
sub
mov
aas
mov
adc
sahf
loopne
cmp
test
idivb
and
insb
fidivrs
add
cli
pop
mov
insb
addl
jg
cmpsl
lods
and
jp
adc
dec
cmc
adc
aaa
pop
lods
fcomps
repnz
jecxz
lods
dec
ret
or
lret
movsb
iret
into
fadd
sbb
lcall
jne
sub
pop
sub
xchg
push
xor
mov
repz
subl
andb
iret
xchg
xchg
jnp
test
iret
test
mov
pop
in
jb
sarb
rcrb
add
leave
pop
ret
inc
pop
dec
add
rcrb
mov
push
loope
out
iret
lret
or
call
lcall
shlb
xor
dec
repz
inc
add
inc
inc
push
push
leave
and
add
push
add
pop
and
scas
cld
jg
adc
adc
mov
dec
es
stc
xor
add
into
lahf
cmp
adc
pushl
nop
mov
pop
cmp
aas
inc
pop
imul
ljmp
inc
push
xchg
nop
addb
fbstp
adc
jle
add
sbb
lret
mov
adc
adc
fwait
cmp
nop
or
xchg
mov
imul
out
addr16
push
and
fadd
or
test
neg
arpl
lods
cli
mov
mov
mov
push
xlat
repnz
inc
test
dec
test
sti
outsb
lods
loop
out
pop
and
ret
loopne
out
cld
pushfw
les
fldl
jle
mov
mov
bound
inc
xadd
leave
jbe
sti
cltd
lea
push
addl
test
ror
add
dec
in
xchg
jl
xchg
or
jno
les
dec
popa
aad
aam
cld
into
addr16
popf
dec
shr
push
scas
xor
push
mov
cli
sti
mov
imul
rol
jle
mov
repz
test
push
dec
mov
push
mov
pop
repz
ficoms
ret
xchg
loop
inc
xchg
push
adc
add
xorb
cmp
mov
inc
scas
mov
mov
idiv
mov
pop
mov
mov
nop
repnz
mov
xor
xor
rol
add
sub
loop
lods
shlb
popa
je
je
pushf
cwtl
clc
scas
notb
dec
stc
adcb
test
std
cmpsl
pop
jp
test
ret
imul
ja
popa
call
inc
lock
xchg
pusha
test
add
andl
mov
int3
ficompl
lea
mov
cmp
daa
aam
call
imul
adc
add
out
out
into
jbe
ja
and
pop
push
xchg
inc
imul
repnz
or
mov
xchg
ret
cwtl
lahf
inc
test
rolb
cli
cwtl
pushf
push
add
into
lahf
mov
inc
or
std
test
mov
cltd
insb
push
test
imul
sbb
inc
les
sub
popf
nop
loop
lock
into
scas
enter
iret
xchg
xorb
push
lahf
inc
xor
adc
lea
fldt
mov
inc
xor
data16
outsb
sub
pusha
imul
inc
dec
push
pop
push
xchg
mov
xor
add
ficoml
mov
add
call
mov
add
push
filds
add
sbb
arpl
scas
jl
or
xchg
dec
iret
fs
je
sahf
stc
shrb
push
add
aam
xor
das
mov
mov
jo
xor
add
jnp
out
sarb
cmp
jmp
fdivr
xchg
aad
out
mov
mov
or
pop
stos
inc
mov
pushf
pop
fistpl
mov
scas
sbb
xlat
dec
mov
sub
movsb
daa
xchg
fimull
mov
mov
mov
call
and
xchg
shlb
sub
movsl
insl
lret
nop
hlt
pusha
pop
enter
mov
push
sbb
or
and
stos
sbb
mov
adc
adc
nop
lds
test
sbb
fadds
scas
nop
loop
mov
add
push
popf
jge
rclb
push
adc
push
add
daa
cmpsl
push
rorl
xchg
mov
lock
dec
movsl
mov
or
mov
jp
in
fiaddl
out
mov
mov
loopne
arpl
xchg
mov
bound
or
xchg
jge
imul
inc
dec
dec
leave
mov
and
pop
cs
mov
sahf
push
cwtl
es
rcrl
pop
iret
adc
inc
xchg
jbe
cld
inc
mov
xchg
push
out
or
mov
call
lea
fmulp
sbb
stc
mov
es
adc
inc
dec
mov
ljmp
adc
add
addr16
adc
es
mov
js
mov
or
lahf
imul
mov
lea
dec
scas
aas
xchg
imul
xchg
jp
jp
xchg
lods
push
je
or
inc
mov
pop
shlb
xchg
movsl
lods
or
cwtl
dec
push
add
jno
cmpsb
sub
xchg
call
data16
or
pop
imul
addr16
mov
outsl
faddp
rol
mov
repnz
mov
mov
in
mov
mov
movsb
aam
mov
jb
pop
mov
ret
lea
loopne
loope
xorl
iret
test
setns
imul
xchg
addr16
test
hlt
neg
xor
and
xor
stos
push
mov
test
mov
and
shl
lcall
adc
data16
jnp,pt
ds
cmp
test
ja
lock
jmp
bnd
cmp
imul
movsb
fisttpl
xchg
out
fs
test
mov
jecxz
imul
add
jp
pop
pop
xor
pop
icebp
mov
testb
fsubr
repz
jl
aad
push
leave
mov
mov
cmpl
imul
dec
adcl
or
and
mov
into
iret
test
xchg
push
decb
jb
cmp
test
add
das
lahf
loopne
mov
mov
das
dec
stc
or
xor
sub
mov
add
push
xchg
inc
addl
ret
movlps
inc
jb
ss
xchg
mov
cmp
jg
or
xchg
inc
fisttpll
pop
dec
mov
xchg
test
or
pop
jg
hlt
xchg
add
xchg
test
push
repnz
cmp
cmpsb
xlat
or
aas
lock
cmp
insb
ret
fdivrl
jno
test
ljmp
mov
fwait
mov
call
xchg
addb
addb
dec
push
aas
insb
lcall
xor
sub
push
mov
fwait
es
fcomps
lret
mov
inc
dec
push
pop
mov
out
and
repnz
fsubrp
push
and
mull
xchg
jnp
cmpsb
mov
loopne
inc
jbe
adcl
lahf
lahf
xchg
mov
xchg
popa
pushf
mov
fdivs
push
or
int
mov
mov
jg
ficoms
mov
mov
pop
xchg
orb
lcall
ret
add
lea
into
xchg
push
sbb
cwtl
ljmp
lahf
test
push
insl
pop
jge
mov
mov
jp
and
jl
sbb
inc
addr16
or
jl
lcall
out
or
in
cwtl
cwtl
xchg
xchg
in
xchg
mov
mov
dec
push
mov
cwtd
pop
jae
movsb
cs
jmp
xor
mov
xchg
sub
cmp
andl
outsl
addb
mov
mov
out
push
mov
jmp
xchg
mov
rorl
or
repnz
lahf
pushaw
cmp
pop
int3
roll
fsub
mov
ret
mov
cmp
mov
leave
je
mov
push
push
and
cmpsb
xlat
xor
into
stos
popf
sbb
dec
scas
daa
mov
addr16
inc
nop
lcall
test
ds
add
adc
ss
icebp
add
out
sbb
fsubp
shll
cmpsb
jb
inc
adc
mov
add
sub
lea
aad
mov
lahf
push
hlt
pop
mov
out
out
pop
aas
xchg
add
mov
mov
mov
in
fimuls
shlb
or
xchg
xor
pop
push
pop
ret
ss
mov
inc
scas
mov
sbb
ret
adcl
scas
into
mov
shrl
mov
jbe
mov
pop
add
out
stos
inc
test
add
roll
dec
shr
ret
mov
mulb
iret
fisubrs
inc
pop
xchg
dec
xchg
inc
rorb
push
ss
push
sub
inc
xchg
push
add
pop
sbbl
mov
mov
mov
or
dec
sbb
mov
xchg
jbe
fwait
add
or
rcrl
mov
adc
xorb
xchg
scas
and
mov
mov
stc
into
lahf
mov
mov
cmpsb
pop
xchg
mov
lock
xlat
addl
xchg
xchg
sarl
into
fsts
lret
xor
lcall
out
inc
loop
jecxz
push
out
leave
ficomps
es
or
mov
lea
fcomp
das
add
out
es
xchg
mov
or
xchg
mov
aaa
dec
cmpsb
xor
dec
out
dec
or
lret
inc
xor
decb
outsb
pop
mov
mov
mov
iret
lret
aas
addr16
jge
imul
add
ficomps
ja
pop
int
dec
pop
xchg
inc
mov
dec
scas
jns
push
int
iret
jbe
pop
gs
sub
into
cmp
jl
cld
scas
pop
or
cmpb
ss
add
jp
adc
add
mov
cltd
xchg
shll
jb
shll
fs
sbb
test
push
addb
sahf
frstor
test
je
inc
cmp
xlat
aas
subb
gs
dec
add
push
cmpsb
inc
outsb
jno
mov
push
cli
dec
inc
js
xchg
jp
lds
adc
push
cmpsl
add
add
xchg
lret
add
icebp
pop
mov
xchg
pop
mov
lds
cmp
mov
inc
sbb
cwtl
out
mov
or
mov
cs
ret
inc
nop
add
aas
pop
mov
or
leave
adc
lods
fwait
xor
jl
and
popl
jae
pop
stos
xchg
jg
sub
mov
imul
and
test
cmp
xchg
adc
lret
pop
div
or
mov
fdivr
jle,pt
mov
ret
mov
jb
adc
sbb
jl
loopne
clc
enter
stos
jl
inc
fcompl
xor
sbbl
pushf
hlt
mov
or
push
ror
ret
mov
lds
dec
aad
mov
inc
adc
orb
test
imul
aam
inc
fisubrl
cmpsl
shrb
pop
inc
cld
ss
xor
ss
addb
insl
mov
fwait
test
popf
mov
fiaddl
sti
fcomp
fwait
push
pop
sbb
pop
loope
sti
mov
testl
lea
pop
inc
fsub
mov
xor
cmpsb
pop
movsl
jne
hlt
sahf
das
pushf
sbb
xchg
or
xor
xchg
jnp
gs
aaa
cs
stos
add
mov
mov
sub
cmp
jnp
pop
enter
or
sbb
pminub
hlt
in
pusha
pop
jl
ljmp
dec
sbb
mov
and
xchg
clc
jecxz
inc
xor
inc
adc
fists
data16
xchg
call
push
in
xchg
inc
and
push
jns
aad
or
cmp
orl
je
inc
sahf
aam
call
push
orb
push
mov
repnz
cmpsb
imul
into
sahf
xchg
mov
dec
ljmp
aas
js
daa
mov
add
inc
test
mov
jge
sahf
ljmp
mov
mov
lcall
or
jbe
insl
addb
addr16
lods
jo
mov
xor
nop
pop
mov
pop
call
insl
or
mov
test
dec
loop
jbe
xor
pop
cld
test
jmp
nop
aad
push
leave
mov
test
adc
sbb
cs
sbb
mov
enter
inc
sbb
scas
into
sarl
aam
xor
into
pop
ret
jmp
in
cmp
push
ss
sub
dec
inc
add
pop
jbe
xchg
addr16
loop
imul
test
mov
repz
jo
xchg
mov
adcl
mov
ret
sbb
or
mov
add
aam
jge
inc
rcrw
adc
push
cmp
movsl
test
hlt
in
jg
adc
xchg
popa
add
add
out
insl
shlb
test
enter
bound
jl
pop
fmuls
imul
mov
cli
test
sub
jb
subl
in
sub
adc
add
test
push
adc
test
sahf
test
shlb
out
scas
ret
push
xchg
xchg
loopne,pt
push
xchg
push
add
sbb
filds
loop
out
mov
push
cmpsb
xchg
mov
and
mov
dec
ss
and
push
ret
orb
ljmp
adc
ss
sarb
popa
mov
mov
sub
pop
cmp
addb
add
inc
cmp
sub
pop
stos
xor
mov
add
and
add
or
fdivrs
or
scas
adc
mov
fsubp
in
push
in
in
imul
cs
ja
push
inc
add
mov
mov
or
jnp
inc
mov
xor
lcall
adc
je
popa
sub
test
daa
inc
mov
or
iret
shlb
pop
mov
ret
sbb
aad
fstps
dec
sbbl
push
mov
inc
xor
into
xor
add
repz
dec
or
xchg
xchg
xchg
xchg
jecxz
add
and
jno
bound
sbb
or
loopne
adc
int
mov
nop
aad
xchg
cli
adc
cltd
sub
shrl
aas
orl
inc
xchg
stos
fldenv
into
push
ret
roll
call
mov
pop
xchg
mov
shrb
mov
and
in
push
xchg
push
push
insb
cmpsl
or
insb
call
xor
cmp
xchg
inc
cwtl
in
add
add
mov
ficoms
es
xor
pop
stos
jnp
mov
pusha
enter
adc
mov
hlt
pushf
cmp
scas
mov
leave
test
cmp
pop
scas
pop
test
push
iret
jns
mov
xorb
flds
push
push
cmp
inc
pop
mov
inc
out
xlat
fs
adc
xor
adc
sub
fwait
cmp
adc
sub
stos
and
lahf
es
outsb
sbb
fimuls
and
xchg
les
mov
mov
pop
shll
fcomp
xor
stos
xchg
xchg
sbbb
sub
mov
bound
inc
push
ficomps
mov
bound
cwtl
es
mov
xchg
stos
or
mov
je
pop
mov
xchg
imul
pusha
mov
bound
or
inc
lcall
push
jp
push
xchg
arpl
stos
cmp
pushf
lahf
sub
mov
aas
shr
xchg
sbb
xor
repnz
mov
xchg
mov
lods
or
arpl
inc
push
mov
add
sahf
dec
sbb
push
sbb
inc
std
push
xchg
rorb
imul
bnd
fsubrs
lcall
inc
mov
jae
jg
adc
push
dec
xchg
call
sarb
ficompl
sbb
in
ljmp
je
or
cmp
xor
sbb
ret
cs
out
mov
lea
push
mov
xchg
int
xor
imul
or
mov
pop
and
jae
stos
pop
test
mov
xor
nop
pop
mov
mov
mov
in
mov
lds
pop
or
cmp
aad
adc
test
push
xchg
aam
in
xchg
add
iret
ljmp
pop
cltd
jmp
scas
mov
mov
cli
outsb
mov
inc
mov
mov
and
mov
pop
sahf
xchg
jmp
jb
inc
cmp
jo
and
leave
and
pop
test
cmp
sub
lcall
adc
or
insl
adc
test
add
cmp
dec
jle
pusha
jg
dec
repnz
mov
aas
pop
mov
xchg
or
nop
mov
jg
out
mov
sub
push
add
and
lret
xchg
cs
outsb
pop
nop
into
sahf
es
test
push
mov
jbe
xchg
dec
jnp
nop
repnz
aad
fs
int3
sub
push
mov
pushl
push
popa
ret
bound
cmpsl
frstor
aad
xchg
inc
mov
pop
cmp
xlat
mov
jl
gs
inc
xchg
fldt
pop
mov
mov
mov
mov
push
push
push
jns
mov
shlb
jl
incb
fnsave
movsb
mov
inc
cmp
inc
pop
adc
pop
addl
or
test
pop
lods
mov
mov
mov
sti
adc
and
lahf
jns
in
enter
xchg
pop
xor
xchg
jcxz
addr16
jno
pop
shll
sub
adcb
pop
test
xchg
roll
stos
mov
out
adc
xlat
jecxz
dec
enter
nop
ja
adcb
daa
xchg
nop
mov
push
mov
lahf
mov
repnz
xchg
cld
mov
xchg
xacquire
daa
fnstcw
dec
xchg
fildl
loopne
mov
les
inc
pop
test
push
cmp
lahf
out
cmp
js
das
push
sahf
movsb
jecxz
fldl
xchg
scas
lea
cmp
scas
out
test
out
xchg
loop
into
inc
push
aaa
aas
in
or
and
xor
push
xchg
jg
inc
rolb
mov
stos
push
imul
xchg
xchg
inc
loopne
xchg
fldl
inc
mov
subl
pop
movsb
in
inc
xor
mov
mov
jb
iret
sbb
test
sub
int
fdivl
iret
inc
cmpsl
mov
and
ja
mov
xchg
xchg
mov
xchg
mov
je
mov
mov
hlt
addl
adc
adcb
push
int3
mov
cmp
or
and
ret
popf
xor
imul
jbe
mov
dec
mov
xchg
adc
pop
stos
clc
and
cmpsb
mov
mov
or
sub
cli
xor
pushf
jp
out
test
test
add
pop
mov
xchg
in
ljmp
shlb
mov
outsl
push
jno
repnz
addr16
and
nop
in
jp
lahf
out
sahf
in
adc
inc
sub
push
int
addr16
fwait
idivb
push
dec
loop
scas
cmpsb
cmp
daa
cmp
rol
adc
lret
sub
mov
jp
pop
call
mov
mov
stos
push
inc
out
test
fiadds
loopne
add
lods
bound
iret
imul
inc
lods
imull
push
xor
add
fcmovnu
in
in
testl
and
xor
je
xor
pop
inc
mov
and
xchg
xchg
xchg
pop
push
test
add
mov
das
fwait
data16
ljmp
fsubr
addl
mov
jg
mov
xlat
or
or
add
mov
push
cmpsl
fstl
divl
adc
xor
scas
pop
mov
mov
xchg
mov
and
jge
hlt
rcrb
aam
sub
pop
imul
inc
push
lahf
insl
lock
and
cmpsl
pop
adc
movsb
cli
stos
leave
push
js
adc
and
mov
cmc
das
sbb
rcl
dec
sahf
imul
xchg
popa
ss
in
mov
sti
and
outsb
mov
pop
daa
or
mov
iret
orl
lds
aad
sahf
fdiv
je
negb
xor
mov
jl
push
mov
lock
bnd
xchg
mov
mov
xchg
mov
movsb
adc
cli
pop
orb
les
addr16
movsb
inc
mov
hlt
adc
ret
mov
mov
andb
xor
sbb
call
or
mov
repz
int3
sahf
jge
inc
enter
xchg
pop
mov
int3
xchg
movsl
xchg
xchg
outsl
aad
call
cld
je
fs
mov
mov
mov
lret
sub
test
ficomps
ret
mov
pop
xchg
mov
addr16
cwtl
scas
sbb
out
test
xor
fsubl
fwait
cltd
xchg
xchg
fwait
testb
push
mov
addr16
hlt
mov
cwtl
fiaddl
xchg
test
stos
or
xor
xor
pushl
out
ja
pop
add
add
mov
cmp
aas
sahf
repnz
call
xchg
or
jg
mov
leave
add
andb
std
push
jecxz
mov
lret
sub
cmpsb
int3
push
xchg
cmp
rcrb
clc
inc
xchg
xchg
nop
int3
lcall
ja
repnz
and
enter
xchg
mov
gs
imul
or
repnz
imul
push
sbb
dec
les
xchg
xor
push
xchg
in
mov
mov
mov
jne
jns
or
cs
dec
inc
lea
inc
or
shrb
and
xchg
xchg
je
imul
pop
out
cmc
out
pop
and
out
inc
mov
out
and
pushf
std
es
push
mov
movsl
add
movsb
xor
arpl
mov
adcb
add
insb
test
stos
cmpsb
andb
mov
jl
lret
outsb
test
jns
cli
test
mov
lea
imul
lcall
lcall
imul
test
xchg
adc
add
xchg
imul
mov
pop
adc
fsincos
xchg
jbe
jp
mov
inc
mov
cmp
xor
and
sub
into
fildl
mov
sbb
jg
shll
mov
nop
outsl
inc
test
mov
mov
xchg
jo
xchg
movsl
xor
fadds
or
push
push
out
sahf
out
dec
dec
lret
insl
adc
jbe
pushl
xchg
enter
push
mov
data16
xorl
scas
pushl
mov
aad
bound
repz
into
sbb
jp
cmpsl
mov
push
into
in
inc
mov
movsb
mov
xchg
fsub
loopne
mov
outsl
xchg
std
scas
jno
xor
addb
int3
xchg
mov
jge
push
addb
and
add
out
cli
je
mov
inc
scas
data16
ret
mov
inc
out
pop
jmp
mov
inc
or
or
xchg
pop
mov
pop
mov
call
xchg
xchg
adc
scas
mov
lret
xchg
and
test
movsb
andl
mov
lock
xchg
pop
int3
mov
push
and
mov
inc
xor
inc
sub
pop
testl
data16
jns
stos
jecxz
push
gs
mov
fmuls
sub
cmp
pop
std
xchg
and
dec
jmp
ret
xchg
rcrb
xchg
movsb
movsb
xchg
lcall
je
paddd
dec
or
pop
fdivp
mov
fwait
pop
out
xor
cmp
mov
cmpsl
push
pushf
loop
sti
mov
cld
adc
mov
add
inc
push
ds
or
jg
iret
cmp
sbbb
jo
adc
ss
pusha
xchg
and
imul
push
movsl
xor
aam
iret
imulw
loop
hlt
lods
adc
mov
cmp
outsb
call
pop
or
aaa
rcll
sbb
stos
mov
scas
sbbb
dec
es
scas
mov
or
fdivrl
mov
retw
pushf
ss
dec
les
inc
test
test
cmp
rcr
and
jbe
xor
mov
rorl
js
inc
out
decb
cmpsb
add
xchg
mov
in
popf
pop
sbb
iret
out
out
add
aas
add
dec
in
fldenv
xchg
out
dec
test
movsb
xlat
repnz
cli
leave
jmp
scas
sbb
add
push
and
enter
adc
xchg
mov
pop
addr16
ret
jmp
subb
adc
movsl
sahf
adc
add
or
xchg
cli
mov
adcb
add
inc
mov
xor
test
add
or
sahf
pop
or
dec
clc
xchg
mov
rolb
into
mov
out
sbb
jnp
movsl
adc
pushf
jge
xor
js
ljmp
cmp
test
bound
xchg
or
mov
pop
in
cwtl
lds
loope
pop
sub
mov
subl
decb
notb
inc
mov
and
mov
jmp
xor
lds
outsl
and
scas
add
xchg
insl
mov
and
sbbb
push
loop
cmpsb
dec
dec
test
dec
in
addr16
mov
stos
mov
movsl
gs
add
loopne
mov
jl
insl
lock
pop
mov
and
aaa
jb
and
into
sahf
mov
mov
xchg
pop
mov
imul
iret
push
or
fisttpll
cmpsl
addr16
cmp
and
lods
fidivrs
inc
sbb
xchg
xchg
jl
out
ds
fwait
iret
sbb
pop
or
push
icebp
dec
mov
mov
clc
lret
add
insl
aaa
cltd
iret
mov
mov
arpl
pop
and
cmc
je,pn
cmpsl
scas
repnz
cmpb
loop
rol
ljmp
push
jnp,pn
into
outsb
adc
pop
in
xchg
mov
scas
jle
into
lods
pop
arpl
sbb
test
int3
add
jb
jmp
mov
pop
mov
outsb
stos
repz
mov
pop
add
adc
fldenv
jle
push
cli
dec
add
mov
jecxz
cmp
in
mov
xchg
inc
sub
push
imul
adc
scas
rol
xchg
push
or
mov
xchg
adc
aaa
loop
into
pop
fildl
and
movsl
and
cmp
pop
cli
lret
ret
cltd
lods
out
mov
cld
lods
fldenv
int
jno
and
mov
not
or
repz
rcrl
je
fbld
push
adcb
mov
pop
adc
inc
and
test
fistl
mov
ret
push
nop
ret
pop
inc
pop
sub
mov
inc
push
mov
lea
iret
mov
lahf
add
lcall
lods
stos
fistpll
mov
sahf
in
mov
xchg
inc
jp
or
aam
cld
leave
push
nop
in
jae
fwait
les
cmp
push
jp
dec
push
les
test
out
pushf
xchg
jno
dec
mov
lock
sub
adc
int3
je
sbb
loope
es
mov
sub
add
inc
xchg
jnp
dec
mov
notb
push
mov
pusha
cs
push
outsl
or
and
repnz
pcmpeqd
std
mov
sbb
stos
hlt
lahf
push
jb
iret
fstpt
inc
mov
mov
cmp
pop
pop
shll
cmpb
fsubs
movsb
cmc
xchg
add
sub
cmp
sti
daa
pop
jns
xorb
mov
popa
mov
xchg
push
xchg
mov
xchg
xchg
push
fadds
push
iret
outsb
mov
xchg
mov
int
out
inc
adc
scas
scas
xchg
jmp
out
sbb
sbb
nop
inc
jb
data16
pop
mov
and
xchg
cmp
test
mov
cmpsl
pop
xchg
dec
imulb
dec
or
mov
leave
lret
fnstenv
xlat
test
pfsub
lret
or
mov
or
jbe
dec
mov
mov
mov
into
mov
lretw
sbb
call
cli
jecxz
pushf
lcall
mov
cmpsb
mov
insb
or
xchg
cvtdq2ps
mov
js
jne
mov
xchg
jmp
push
ret
adc
inc
fsts
mov
pop
mov
mov
push
insb
int3
out
push
cmp
cmp
sbb
repz
sub
ficomps
out
mov
movsb
or
cmp
xor
mov
in
xor
push
sub
add
pop
mov
mov
shll
std
fstl
rclb
incl
adc
test
js
adc
dec
mull
and
test
xchg
xlat
les
and
jo
mov
sub
ja
daa
ret
sub
addl
mov
or
push
jg
rep
mov
and
stos
call
mov
clc
icebp
lods
pop
sbb
and
xchg
cmpsb
rolb
add
cmc
ret
inc
cs
packsswb
sub
sbb
fidivrs
loopne
lcall
add
sbb
adc
pusha
divb
scas
jne
inc
cli
ficomps
dec
push
icebp
pop
mov
cwtl
jb
sahf
cmp
repnz
push
je
cmp
sbb
in
mov
sbb
mov
or
data16
push
xor
push
and
into
add
repz
sub
or
les
and
out
cltd
shrl
jge
adcb
mov
mov
or
imul
mov
into
xchg
and
iret
cmpl
xor
jae
data16
fcompl
push
loop
ret
in
jb
inc
adc
mov
fsubrl
repnz
sub
stos
scas
pop
push
pop
mov
subb
aas
xor
cld
push
push
les
fmull
sbb
decl
dec
std
sbb
inc
mov
pop
sbb
mov
xchg
mov
loopne,pt
add
push
or
gs
jg
lea
rorl
add
int
mov
les
cld
imul
lret
stos
dec
push
mov
add
inc
add
mov
xchg
out
scas
push
subl
lods
mov
pop
test
lods
fldt
lods
sub
pop
adc
into
push
imul
outsb
cmp
fsubr
test
dec
jns
mov
cmpsl
jl
push
mov
idiv
jecxz
subb
out
xchg
jle
cld
mov
aas
fs
sarb
into
data16
shlb
add
std
popa
fwait
stos
jo
push
mov
cmpsb
dec
sahf
inc
mov
jecxz
loop
push
popf
data16
icebp
std
fnstcw
push
sub
mov
cmp
fwait
cmp
cs
or
sbb
push
mov
rcrl
popa
nop
or
bound
inc
leave
mov
jb
mov
sub
or
xchg
sbb
leave
subl
cli
xchg
les
mov
add
lds
sub
xchg
ret
jnp
sbb
ret
push
mov
arpl
pushw
jge
push
mov
xchg
stos
pop
mov
jbe
xchg
out
es
addl
xchg
lret
cli
ss
pop
das
arpl
add
jl
scas
push
adc
leave
jae
xor
dec
or
lcall
pop
or
rcll
push
lock
mov
mov
adcl
sub
test
rol
sbb
mov
ja
lcall
enter
jmp
jl
jno
in
sbb
push
das
icebp
sti
movsb
adc
mov
clc
xchg
call
mov
test
sahf
rcrb
cwtl
rolb
iret
enter
mov
jl
incb
clc
nop
sub
fwait
andb
xchg
shl
pop
aad
dec
sbb
testb
aad
outsl
data16
nop
gs
sub
stos
rclb
cwtl
leave
sbb
in
mov
cli
enter
xchg
inc
inc
aaa
cld
inc
int
cwtl
outsl
jge
xorb
push
or
in
lds
fiaddl
sub
adc
sub
pop
push
lock
imull
mov
shl
scas
and
nop
ret
pop
dec
adc
in
jnp
mov
mov
adc
mov
xor
push
adc
into
mov
sbb
movsl
repnz
mov
jns
movsl
mov
outsb
inc
or
pop
mov
test
insb
addb
adc
push
jno
sbb
add
inc
add
push
jns
movsl
imul
or
pop
jg
mulb
repz
test
add
mov
repnz
in
jnp
nop
push
sub
pop
in
and
cmc
inc
and
pusha
jo
sahf
sahf
out
cmp
xchg
fdivrl
xchg
cld
mov
add
xorb
sub
cmp
pop
add
sub
nop
cld
insb
aad
jecxz
xor
adc
sub
out
jne
imul
fs
roll
loope
push
or
mov
shll
int3
jmp
and
loop
fwait
and
cmp
xchg
out
add
dec
jge
jecxz
or
xchg
out
out
les
sbb
and
or
mov
mov
cmp
gs
add
add
mov
call
imul
cmp
scas
and
iret
mov
repz
movsl
mov
xor
add
mov
inc
adc
mov
pop
jp
out
and
xor
push
cld
jb
add
push
fmul
ja
jo
pop
bound
pusha
inc
pop
mov
mov
add
outsl
xor
adc
sbb
adc
mov
xor
int3
sub
mov
or
and
jns
hlt
scas
shlb
xchg
cmpsb
push
pop
inc
dec
push
movsb
xorb
sub
ret
add
xchg
stos
insb
jg
clc
fsubl
es
and
stc
das
fmuls
jnp
adc
push
ljmp
shlb
jae
jmp
outsl
adc
testl
movsl
incl
fmull
jecxz
lret
sbb
push
xor
lock
mov
lods
xchg
push
call
mov
repnz
scas
sbb
pop
sbb
fists
pushf
cmp
lods
mov
sub
jnp
out
sub
out
mov
jmp
lcall
div
or
shlb
outsb
pusha
out
int3
xchg
adc
and
lahf
adc
ficoms
bound
sbb
push
cmpb
cmp
in
adc
adc
dec
sarl
mov
mov
icebp
sub
aam
cmp
jle
push
stos
stos
hlt
adc
xchg
in
js
pop
test
sbb
xor
rcl
and
shll
sub
mov
inc
lods
repz
inc
daa
cld
push
pop
repnz
popa
test
add
and
outsl
imul
mov
pop
dec
dec
inc
mov
mov
outsb
into
mov
adc
add
in
dec
incb
fwait
rdmsr
adc
arpl
pop
push
fs
xor
mov
push
lret
push
xchg
int
sbb
xchg
lret
cmp
fmuls
mov
int
push
mov
and
pop
mov
aad
dec
aam
inc
scas
xchg
hlt
push
lds
rorl
aad
or
rcr
and
mov
outsb
adc
fucomp
pushf
pusha
jbe
mov
sahf
lret
out
out
or
or
sub
cwtl
or
sbb
inc
int3
incb
inc
mov
mov
push
or
mov
icebp
mov
xchg
jbe
inc
jge
jo
adc
or
popw
sub
xchg
or
jo
enter
hlt
mov
aam
pop
lret
inc
inc
dec
leave
repz
push
inc
hlt
in
shrl
xor
mov
jge
xchg
add
mov
cwtl
enter
mov
cmp
ret
fdivrp
xchg
inc
and
ret
sub
xchg
dec
das
mov
insb
movsl
mov
push
stos
inc
and
mov
out
pushf
xchg
sbb
outsl
mov
mov
dec
dec
pop
ja
mov
xchg
addr16
iret
inc
out
scas
shrb
push
xor
data16
sub
repnz
cmp
pusha
dec
sub
mov
cmp
pop
add
inc
mov
loop
xchg
insl
or
mov
addr16
scas
mov
cmp
cs
or
xchg
mov
sub
sarl
mov
mov
movsl
les
sbb
jno
ret
pop
push
jp
out
push
mov
xorb
push
nop
ret
mov
cld
ret
outsb
daa
cmp
ror
jge
xchg
lret
int3
int
pop
cwtl
lds
add
push
cmp
xchg
xor
lcall
mov
xlat
rol
xchg
cmc
mov
les
dec
dec
xchg
es
adc
outsl
in
pop
mov
jp
xchg
push
mov
mov
data16
sbb
jb
or
add
insl
stos
data16
push
xchg
incl
test
mov
movsb
test
int
jl
and
adc
pop
sti
inc
fsubrs
imul
lcall
sahf
push
jle
sbb
rcr
xchg
add
mov
dec
js
jo
rep
pop
push
xor
sahf
ret
add
and
xorl
xor
jmp
dec
in
mov
data16
adc
jno
sub
adc
mov
inc
test
cmpsl
int3
bound
cmp
aas
addr16
xor
das
cltd
pop
cmp
jbe
lcall
shrl
mov
cld
lcall
rorb
jno
sbb
fmuls
push
into
push
lea
jg
inc
subb
inc
idivl
jmp
cwtl
pop
lret
jp
outsl
inc
dec
aad
pop
nop
cmpsl
add
pop
push
enter
data16
leave
adc
push
movsb
enter
xchg
adc
jg
add
fimuls
rolb
and
repnz
repnz
inc
sbb
das
clc
mov
or
adcb
aad
arpl
sti
jb
jno
mov
dec
leave
ret
push
cmp
dec
insb
aaa
cmpsl
or
pop
or
pop
jg
xchg
ss
and
mov
xchg
and
ret
gs
ljmp
mov
int3
mov
into
add
nop
jb
mov
dec
lcall
mov
push
fdiv
dec
inc
cwtl
out
pop
mov
push
add
addr16
pop
and
movsl
ficompl
jne
mov
lcall
xchg
sub
jl
into
and
fcmovnu
rcr
jnp
mov
orb
or
cmpsb
mov
ss
push
daa
mov
or
mov
dec
pop
scas
sbbl
dec
or
fnstenv
pop
hlt
jnp
mov
insb
inc
mov
xchg
dec
lahf
jg
into
sub
mov
cmpsl
jae
bound
xchg
enterw
inc
aas
call
push
fs
cmp
adc
mov
xchg
jmp
mov
push
aam
or
int
xchg
fnsave
leave
pop
mov
aad
xchg
addb
arpl
push
roll
daa
aaa
or
es
repnz
mov
sub
push
test
add
cmp
fisubl
push
ljmp
pop
int
pop
test
call
pop
data16
jns
bound
mov
xchg
js
ret
add
lcall
push
add
xchg
sti
jp
adc
cltd
and
js
sahf
cmpsl
mov
adcb
adc
nop
cmpsb
xchg
mov
sarl
xchg
cmp
repnz
insl
pop
scas
imul
jbe
imul
sahf
test
jle
or
cwtl
jl
push
les
add
jecxz
sbb
or
push
sub
int3
xchg
dec
es
xorb
dec
clc
nop
sbb
mov
mov
lea
adc
add
adc
mov
mov
pop
add
mov
add
push
repnz
aam
loopne
lret
add
es
mov
faddp
mov
sub
scas
movsb
mov
sub
fildll
mov
pop
add
lock
movsl
cmpsl
mov
mov
shrb
mov
and
stos
imul
hlt
and
repnz
aam
mov
rolb
cwtl
cmpsb
rsm
xor
mov
mov
rclb
mov
fnstcw
sti
outsb
jp
or
data16
xlat
mov
jg
ret
repz
pushf
xchg
push
xchg
mov
sbb
mov
adc
imul
mov
incb
into
adc
mov
pushf
repnz
add
sbb
push
adc
xchg
hlt
orb
mov
push
adc
mov
ds
mov
lods
push
ror
push
ficompl
orl
repz
imul
into
mov
jb
mov
faddl
mov
and
sahf
inc
outsb
repz
ficoms
fidivrs
jp
or
xchg
jge
jo
jae
jg
adc
popf
addr16
in
daa
arpl
addl
in
mov
mov
lods
mov
addl
cmc
inc
in
mov
addr16
sub
aam
xchg
cmpsb
xchg
jnp
sub
jno
lods
outsb
enter
inc
lods
outsl
adc
pop
inc
pop
sub
ss
jg
push
jmp
in
ss
lret
iret
mov
mov
xchg
ja
push
fcmovne
jo
or
lods
stc
fisttps
ret
or
mov
mov
jno
and
sub
pop
mov
addr16
xchg
int
sti
inc
lret
mov
xor
mov
xorb
loopne
insb
out
test
xchg
ret
add
shrb
ret
xchg
add
fimull
rcrb
lea
push
sub
cmp
mov
divl
ds
push
das
mov
je
lret
pop
dec
mov
jg
mov
pop
dec
cltd
xchg
je
fs
lea
subl
mov
dec
xchg
or
add
xor
test
vdivpd
inc
lret
dec
sub
ret
out
jns
push
jp
aas
xor
testb
mov
jge
aas
adc
cmp
fistpll
adc
mov
andb
les
movsl
jns
add
repnz
adc
jge
ret
and
push
sub
rclb
nop
jbe
sbb
cmp
jno
jnp
or
pop
jg
repnz
je
jecxz
cmpsl
or
test
mov
aas
clc
test
xor
insl
lahf
push
mov
fsubs
addr16
cli
xchg
jb
loop
pop
cld
dec
mov
sub
clc
add
mov
add
fdivrs
lret
mov
xor
daa
outsb
lock
add
mov
insl
jecxz
add
shl
adc
repnz
rol
pop
mov
call
les
mov
xchg
mov
dec
mov
aas
inc
js
push
push
or
ljmp
add
xchg
pop
and
clc
leave
push
push
xor
lret
pop
bound
test
aaa
out
sbb
xor
lcall
push
sub
cmp
shlb
push
jge
pop
faddl
jbe
add
fmul
jecxz
mov
cmp
xchg
outsl
add
push
and
xor
inc
fsubrs
cld
es
sbb
sarb
es
dec
add
frstor
mov
mov
jg
clc
scas
xchg
mov
or
mov
loope
adc
mov
xchg
pop
cmpsl
inc
cmpb
dec
mov
mov
in
inc
hlt
outsb
insl
stos
cltd
arpl
mov
loopne
pop
shll
loope
sbb
cld
mov
xchg
shll
nop
xor
imul
fld
inc
loope
roll
addb
gs
insb
int3
dec
push
ss
xchg
loop
mov
ds
std
int3
sub
or
shlb
es
flds
add
sub
sbb
shl
mov
jnp
aam
dec
add
sbb
and
into
inc
dec
sti
mov
cld
lcall
scas
push
pop
icebp
aam
jbe
add
orb
jno
lods
push
ret
jbe
sub
in
cli
in
dec
rcrb
aas
addb
jae
sub
inc
inc
repnz
int3
jecxz
into
outsb
enter
jnp
loop
sub
inc
sub
push
xor
xlat
addr16
mov
movl
push
mov
mov
or
mov
or
imul
jle
mov
pop
in
addr16
cmp
pop
loop
jo
ss
jmp
jg
mov
mov
pop
out
add
jmp
mov
orb
pop
hlt
xor
mov
xchg
cmc
fdivr
dec
sub
jnp
sbb
hlt
stos
jecxz
int3
es
xor
sbb
sub
or
mov
push
or
data16
sub
and
xchg
out
push
stos
or
aam
dec
push
push
sti
lea
push
or
xor
jne
stos
mov
lahf
mov
xchg
mov
enter
sbb
mov
inc
sbb
add
xchg
lea
mov
mov
mov
call
aam
mov
adc
or
sub
push
pop
decb
call
dec
mov
repnz
add
das
push
and
shr
bound
push
sub
mov
inc
cmpsl
adc
cld
aam
mov
enter
cmpsl
mov
pop
push
rol
loop
xlat
inc
and
jl
adc
dec
sarl
fiadds
mov
pop
clc
enter
cltd
mov
cwtl
repnz
xchg
add
les
jns
out
mov
ret
int
faddp
loop
into
jg
repnz
adc
in
inc
cli
xchg
out
xchg
pop
push
pop
fldenv
xchg
dec
stos
lods
pushf
mov
xchg
test
dec
scas
xchg
or
adc
xchg
add
mov
pop
xchg
push
sbb
xchg
add
or
adc
and
xorl
dec
ret
cmpb
cltd
xor
mov
xor
cli
inc
aam
mov
les
cmc
push
jb
xchg
or
outsl
shlb
mov
leave
inc
addb
xorb
mov
popa
cld
dec
popf
adc
add
mov
jae
xlat
xchg
ret
arpl
adc
call
loop
mov
roll
test
loopne
jp
nop
xchg
mov
xlat
pop
fwait
adc
mov
out
pop
xor
sbb
cmp
push
lds
dec
hlt
mov
repnz
add
inc
or
dec
les
adc
ljmp
jg
data16
cmp
sub
push
adc
push
mov
rcrb
ja
xchg
sbb
pop
lcall
add
pusha
ljmp
movsb
sbb
mov
lcallw
mov
lret
adc
push
and
lock
outsb
sahf
imul
fiaddl
mov
push
or
data16
pop
add
testb
mov
out
int3
push
cltd
ss
inc
pop
xchg
pusha
nop
mov
aad
push
pop
or
mov
fdivp
call
mov
dec
clc
cmpsb
cmp
movsl
mov
jecxz
dec
or
shlb
lods
jnp
loop
push
pop
xchg
xchg
sub
lret
iret
push
lret
xchg
jo
int
mov
push
sub
out
push
push
mov
push
push
push
orb
add
pop
iret
jge
idivl
mov
popa
aaa
stc
cmp
cmpl
mov
addl
mov
and
mov
jge
aam
lods
and
push
cmp
or
sar
cmpsl
inc
sub
jo
pop
or
lds
mov
mov
and
mov
repnz
jg
ljmp
outsl
xchg
push
stos
pop
ret
mov
cltd
shlb
jo
jmp
incb
test
fadd
cmpsb
repnz
or
push
pop
mov
lahf
iret
push
xchg
xchg
rorb
rcrb
cwtl
aam
imul
lea
jns
pop
aad
mov
test
or
popa
outsb
or
or
mov
pop
mov
mul
es
inc
fstps
jnp
or
aaa
mov
das
in
sbb
pop
jae
ret
xchg
push
scas
repz
lret
or
push
and
hlt
hlt
push
movsl
fcmovnbe
jno
inc
mov
push
mov
cltd
shrl
sbb
enter
lea
ret
xlat
cmpsb
and
movsl
sbbb
int
decl
mov
repz
aas
insb
test
scas
jbe
mov
mov
test
pop
inc
pop
testb
std
aad
outsb
mov
ret
out
movsl
movsl
mov
shrl
repnz
popf
cwtl
dec
fucom
inc
xchg
aad
and
data16
les
ud1
jae
mov
mov
sub
mov
bound
mov
mov
imul
push
movsb
add
inc
mov
mov
or
xchg
rolb
push
add
les
fildll
or
imul
je
sti
dec
mov
adc
ret
add
cmp
ret
jp
ljmp
addr16
sub
imul
sub
jb
mov
inc
or
fdivrl
inc
aas
adc
repz
std
mov
cmp
scas
int
in
nop
xor
imul
cmpl
jg
movb
scas
movsl
movsb
xor
mov
jp
loope
mov
stos
stos
sahf
rcrl
mov
test
fwait
jb
ss
loop
cmp
ss
sahf
insb
scas
fcomip
xchg
push
ss
aaa
mov
decb
sbb
scas
sarb
imul
mov
mov
test
mov
mov
mov
cli
loope
mov
sbb
and
ret
pop
push
sub
jb
iret
data16
rolb
mov
cld
or
xchg
pop
add
jb
push
sub
cmp
sub
add
and
xchg
lcall
mov
mov
andb
insl
rolb
mov
pop
push
cmpsl
xchg
movsl
mov
xchg
xchg
movsb
iret
fsub
ror
adc
sahf
test
lcall
jmpw
pushf
lahf
sbbb
subb
or
repnz
jle
mov
pop
bound
frstor
jbe
mov
es
ret
mov
lret
mov
mov
je
inc
test
push
sarb
jge
les
xchg
mov
je
xchg
addr16
push
lds
call
pusha
jge
add
push
adc
pop
xorb
ja
repnz
out
icebp
sarb
cmp
sub
mov
imul
popf
repz
jmp
pop
adc
sbb
mov
idivl
mov
fildll
cmp
add
mov
push
dec
loop
out
sub
das
repnz
dec
imul
les
popf
rol
outsb
mov
xchg
insb
lcall
or
outsb
pop
orb
cmc
jge
mov
inc
aaa
cmp
repnz
push
sbb
push
loopne
push
repz
sbb
push
mov
mov
dec
xor
xchg
jmp
mov
xchg
mov
es
pop
test
xlat
xchg
mov
ds
scas
into
and
ret
sbb
sub
adcl
jge
fistl
popf
fsubrs
or
sahf
std
cmc
mov
iret
sbb
and
adcb
jmp
or
dec
scas
ror
fists
cmpsb
je
mov
orb
add
mov
pop
mov
lahf
add
lea
push
fxch
xlat
mov
jle
jo
jne
add
ret
inc
fiadds
mov
inc
pop
std
or
fwait
xor
or
or
sar
mov
shlb
inc
fisubrl
sbb
xchg
loop
pop
stc
pop
aam
ja
xchg
cmp
push
das
push
data16
dec
mov
shrl
clc
jmp
push
dec
mov
xchg
add
inc
pop
mov
sbbb
xchg
fldenv
rclb
out
jge
and
dec
rorl
add
fidivs
add
insl
test
mov
xchg
imul
jo
ds
mov
xchg
sti
cmpsb
push
cmpsb
aas
pusha
jl
addl
popf
ret
and
sub
mov
add
repz
inc
jns
in
imul
push
add
pop
setae
adc
repnz
cmp
daa
dec
sbb
aam
out
mov
mov
fsubs
dec
lods
movsb
xor
roll
call
cmpsl
push
mov
push
inc
rcll
dec
push
mov
into
mov
and
test
and
pop
xor
insb
push
mov
and
and
ret
cmp
jb
out
cmp
mov
aam
movsb
fdiv
rorl
xchg
rcr
cmp
sbb
repnz
xchg
nop
add
jo
repnz
repz
cltd
incl
inc
xchg
loope
ds
fwait
sti
mov
mov
inc
ret
push
mov
xchg
xor
pushf
cwtl
imul
lods
lcall
in
adc
mov
and
enter
xchg
iret
mov
pop
jo
xor
xchg
sub
dec
test
cmp
dec
and
adc
fmuls
testb
cmp
pop
cmpb
fsubs
ret
sbb
leave
out
aaa
xchg
cld
setp
mov
mov
les
mov
adc
arpl
jg
mov
jge
or
inc
out
daa
not
pop
sub
mov
nop
adc
xchg
popf
call
push
cmpsl
push
jb
push
xchg
out
pop
add
xor
mov
mov
jbe
shll
fs
jp
cli
hlt
jno
aad
in
mov
inc
fcomi
int
call
loop
cmp
daa
sub
add
xor
daa
lods
pusha
mov
or
mov
into
div
mov
repnz
xchg
push
mulb
push
sar
lret
dec
arpl
dec
fstl
sub
rcr
aaa
mov
clc
inc
sahf
jbe
into
push
movl
shlb
mov
popa
jge
arpl
call
data16
mov
fnstenv
ljmp
dec
nop
aam
mov
or
mov
addl
mov
jnp
sub
jmp
xchg
aam
rcll
sbb
mov
movsl
mov
ljmp
adc
xchg
cmp
orl
repz
ljmp
pushf
xchg
cmpb
push
popf
mov
pushf
or
enter
add
ja
std
lds
dec
icebp
cwtl
mov
jg
orb
ja
xchg
test
insl
das
lret
cmp
dec
icebp
test
js
fs
leave
adcl
mov
inc
fistpll
testl
xchg
ja
mov
imul
repnz
shl
ret
notb
adc
das
out
adc
adc
push
dec
pop
push
mov
loope
not
push
xchg
xchg
adc
test
fldl
xchg
pusha
movsl
lods
outsl
xchg
cltd
mov
jae
dec
test
and
push
mov
loopne
fsubrl
add
jg
inc
xchg
push
data16
leave
or
mov
into
jp
adc
dec
jg
cmc
jg
pop
add
movsb
aad
jp
dec
add
sbb
int
jp
adc
sub
jno
pushf
push
push
pop
fstl
ret
pop
and
mov
xchg
fsubl
adc
push
push
ret
xchg
in
sub
outsl
xor
push
pushl
add
addb
imul
inc
xchg
jl
mov
mov
or
mov
lar
mov
xor
subb
sahf
fcoml
cmp
inc
add
and
jmp
mov
mov
lret
inc
adc
mov
pop
test
fisubrl
mov
jl
mov
pop
bound
sti
cltd
outsb
mov
add
mov
and
add
inc
mov
xchg
and
fdivl
mov
leave
jb
jp
nop
jb
xor
jne
ret
nop
pop
mov
lods
cmpsl
or
fsubl
lods
push
xor
in
mov
mov
and
pop
or
mov
xchg
and
jne
dec
inc
leave
fldt
pop
out
xor
and
stc
xor
cmpsb
and
push
mov
mov
popa
mov
or
jb
push
je
jbe
js
jp
jl
mov
not
aad
mov
in
icebp
push
mov
and
sahf
ficoms
out
sbb
xchg
aad
mulb
pop
mov
insl
repnz
enter
push
sub
and
add
sbb
lahf
sbb
inc
push
jmp
insl
push
enter
std
int
and
loop
or
insb
pop
and
mov
push
dec
jg
ret
mov
jne
push
fistps
aas
rcrl
stos
incb
les
mov
loop
sub
xchg
scas
cmpb
mov
or
in
iret
jmp
adc
dec
loope
loope
pop
mov
and
mov
mov
into
andb
loop
xchg
test
dec
mov
mov
into
mov
sahf
mov
scas
xchg
mov
pop
test
mov
ljmp
pop
mov
push
test
std
outsb
int
lret
jecxz
pop
or
cmc
out
dec
push
fidivrl
daa
nop
aad
or
and
dec
push
mov
inc
arpl
lcall
pop
stos
mov
sahf
movsb
lods
xchg
mov
ret
out
cmp
repnz
jg
mov
fsubp
mov
movsb
pusha
loop
into
xchg
pop
xchg
jns
mov
mov
call
xchg
cs
adc
pop
mov
or
mov
fs
xchg
add
shll
out
cwtl
aam
xchg
fnsave
aaa
mov
push
mov
push
dec
pusha
cmpsl
jg
stos
inc
push
into
pop
lods
and
xorl
shrb
hlt
or
insl
mov
xor
lea
aas
or
mov
inc
mov
xchg
xchg
pop
xchg
or
loop
ss
and
iret
int
cmpsl
pop
add
aas
out
cmp
ret
imul
xor
test
enter
mov
push
xchg
cmpl
mov
rcrb
push
xchg
idivb
nop
fimull
mov
cmpsb
mov
add
xlat
test
shl
movsb
adc
mov
sti
addr16
aaa
or
inc
adc
aam
mov
pop
scas
xchg
sarl
jne
int
mov
scas
cmp
push
or
jp
pop
filds
cmpsl
cld
dec
leave
mov
xchg
dec
add
aam
ret
shll
inc
cmp
into
push
and
adc
jp
jg
call
push
icebp
leave
pop
jns
sub
jl
scas
testl
sbb
ret
mov
xchg
fisttpl
sbb
push
and
cmp
dec
push
lea
fcompl
outsl
mov
out
add
jne
sarb
push
push
xor
cli
mov
jmp
cmpsl
inc
adc
ret
dec
data16
mov
jg
test
addr16
push
pop
push
mov
jo
inc
dec
mov
loop
mov
xchg
jbe
xchg
dec
loop
jb
or
xchg
xchg
daa
insb
out
data16
les
pop
mov
sub
gs
cmp
pop
nop
notl
stos
loop
xor
scas
inc
inc
nop
movsl
cmp
sbb
scas
das
and
in
cli
xor
cmp
cmp
jle
add
sbb
add
mov
inc
imul
cltd
or
mov
out
fcomi
cmp
je
xor
cmpsl
pop
mov
xchg
xchg
xchg
cmpsl
mov
out
int
mov
inc
xor
add
outsb
test
ss
pop
or
test
repz
xchg
jb
xchg
lcall
mov
push
add
mov
jo
jle
cld
lock
push
scas
mov
fmull
and
data16
mov
add
clc
out
dec
adc
mov
push
sub
imull
aam
adc
ret
inc
mov
mov
shrl
jns
mov
and
mov
ret
aam
aad
pop
mov
adc
inc
adc
ss
push
imul
push
rolb
xorb
lea
inc
cli
xchg
mov
mov
out
les
testb
push
ja
das
cltd
xchg
add
jl
pop
lret
setbe
ss
add
sbbb
mov
or
iret
movl
fisttpl
sub
jl
stos
out
rcl
lock
lret
sbb
bound
stc
inc
insb
addr16
xchg
mov
mov
rorl
stos
inc
xchg
jge
mov
mov
dec
movsl
movsl
adc
out
and
inc
incb
adc
push
test
cmpsb
ss
mov
nop
cs
test
bound
xchg
repnz
mov
roll
iret
data16
inc
xor
dec
jmp
or
or
push
stc
and
xchg
add
adc
fisubl
jbe
xchg
repnz
push
fistl
cli
lret
call
xchg
out
test
push
aaa
sti
xchg
aad
mov
les
inc
call
mov
pusha
or
enter
xchg
xchg
insb
mov
or
push
sub
es
sarb
mov
sbbb
cmc
cmpsl
out
repnz
test
cmp
xchg
push
leave
aad
add
mov
xchg
mov
es
movsb
mov
jp
dec
xchg
test
or
mov
cmp
repz
mov
shlb
xlat
andl
popf
adc
into
and
cmpsb
sbb
adc
xchg
hlt
imul
dec
stos
fildll
insl
and
adc
test
imul
aas
push
into
sub
or
in
sub
pop
mov
xchg
sti
push
outsb
stos
xchg
mov
cmpsb
xchg
xchg
jns
jne
mov
push
imul
lea
lret
pop
and
xchg
add
sub
daa
aam
or
ljmp
cmpsl
repz
xchg
jg
jge
cmpb
jle
mov
sbb
stos
xor
ret
sub
sbb
jns
les
sarl
mov
xchg
xchg
data16
inc
lcall
test
xchg
test
xchg
inc
clc
pop
addr16
jge
and
mov
and
pop
insb
push
sahf
test
xor
test
adcl
mov
pop
outsb
je
add
je
repz
mov
push
lret
or
push
lret
mov
mov
int3
cmpsl
hlt
jbe
imul
adc
std
and
push
cld
xchg
adc
incl
bound
rol
inc
xchg
mov
addb
xchg
or
pop
repnz
aad
inc
fwait
cmp
cmp
sub
mov
mov
mov
dec
dec
xchg
sar
pop
add
push
int3
loop
fisttpll
mov
sub
mov
nop
lods
and
jb
aaa
xor
sbb
mov
lahf
push
sbb
cltd
lea
enter
mov
mov
enter
addr16
mov
adcl
xor
or
mov
shr
add
xchg
xchg
pop
icebp
movsl
mov
adc
jmp
addr16
add
fldenv
out
movsl
es
pop
popf
in
daa
test
and
in
fwait
into
pop
fsts
sub
loopne
iret
add
or
sbb
pop
xchg
ds
sbb
ss
ja
jae
popa
xchg
and
jecxz
or
jbe
add
adc
push
lea
pop
xor
push
sub
mov
and
imul
int
add
jne
xor
dec
mov
sahf
mov
ljmp
mov
cmp
pop
loope
ficomps
outsl
xchg
pop
orl
int3
aaa
arpl
ret
mov
lret
jbe
push
mov
pop
ja
jle
mov
adcl
xchg
lock
imul
add
repz
or
fnstenv
mov
sbb
or
lea
data16
or
sti
rorb
movb
pushf
pop
imul
cmp
test
hlt
jo
mov
mov
stos
mov
pop
ret
sub
mov
lock
push
add
add
cld
sub
call
fs
cmc
lret
cmpsb
out
out
loop
xchg
mov
movsl
sbb
mov
dec
pop
scas
xchg
xchg
push
mov
xchg
ret
inc
mov
push
push
insl
mov
mov
outsl
lret
mov
inc
xchg
lea
scas
xchg
cld
push
pop
mull
mov
daa
rorb
in
xchg
push
out
sub
testb
adc
xor
mov
inc
xchg
cmpsl
ud1
mov
test
mov
out
cmpsl
flds
inc
lret
imul
xchg
cmpsl
adc
ror
add
sub
enter
subl
insb
rorb
or
mov
fldt
sub
les
and
cld
inc
dec
repz
pop
xor
sahf
xchg
mov
mov
out
push
fisttpll
mov
scas
jns
jg
mov
sahf
inc
lahf
repnz
jae
and
push
dec
push
mov
cmp
repz
jae
in
pusha
inc
frstor
aam
imul
cs
mov
fcmove
or
icebp
pop
dec
aam
lcall
adc
jo
xchg
roll
xchg
mov
incl
xor
call
push
mov
mov
fisubrs
xchg
add
jp
movsb
aaa
cmc
sarb
mull
ds
or
gs
lcall
bnd
clc
mov
add
mov
sahf
mov
or
mov
jns
mov
push
mov
mov
clc
push
inc
push
push
push
lods
inc
inc
push
ret
pop
xlat
decb
xor
mov
mov
add
sti
adc
push
mov
sbb
addr16
orb
in
adc
add
stos
ret
sbb
and
out
inc
stos
iret
scas
lcall
xor
mov
int3
iret
addr16
push
add
int
cmpsb
int
pusha
lods
scas
push
pusha
into
test
push
mov
leave
sahf
or
xchg
insb
subb
test
jb
loopne
fimuls
loop
pusha
into
into
mov
cmp
out
lcall
cld
add
mov
je
dec
cmp
dec
fwait
test
js
mov
cmpl
data16
test
aam
test
mov
dec
jbe
outsb
mov
xchg
sub
mov
ret
mov
outsb
call
fcoms
fstl
xor
inc
cmpl
cmp
mov
movsb
clc
je
cmp
jge
repz
jge
mov
xchg
in
sbb
adc
mov
idivl
cli
mov
aas
sub
in
xor
jmp
fwait
or
dec
loop
push
adc
jnp
or
int3
stos
fsubrs
nop
js
fnsave
add
cmpsl
xchg
mov
sbb
stos
or
jp
inc
pop
in
ss
jmp
add
sub
mov
test
scas
xchg
ja
popl
sub
out
arpl
mov
gs
push
jmp
cltd
mov
imul
lods
inc
xchg
nop
sbb
ret
jl
fidivrs
xchg
imul
int3
sub
sub
stos
mov
mov
mov
cwtl
into
jbe
push
loop
xchg
out
and
xchg
ja
xor
cwtl
addl
cmpb
sbb
insl
cwtl
add
or
lea
xlat
fmuls
int
jo
scas
or
je
mov
orl
sbb
lea
jl
shrl
imul
rolb
jne
fdivp
lds
imul
xor
sub
stc
aad
hlt
int3
mov
cli
into
mov
cld
lcall
rcrb
in
xchg
push
std
pusha
mov
fwait
into
sbb
fdivrl
subl
sarl
and
jnp
jns
cld
repz
xor
data16
jge
push
mov
fdivrs
incl
in
xlat
imul
lods
scas
mov
xchg
mov
ret
xchg
sub
inc
lret
xchg
push
cmp
dec
cmc
mov
sahf
mov
xchg
scas
or
fs
mov
xchg
dec
testl
dec
lds
push
gs
sahf
ds
adc
fsub
bswap
in
xor
add
sub
sub
cmc
enter
xchg
cli
and
sahf
data16
xor
ret
dec
push
test
dec
lods
pop
repnz
imul
push
imul
je
mov
add
aas
cmp
addr16
sbb
xor
pop
cmpsl
shlb
movsl
pop
pushf
std
mov
add
jge
arpl
adc
mov
xchg
pop
sub
aas
mov
dec
lods
leave
call
dec
adc
rolb
inc
cmp
aas
cmp
mov
hlt
add
or
xor
xchg
xchg
push
cmpl
movl
aad
cmp
mov
outsl
ret
pusha
js
xor
mov
test
pushf
sbb
repz
out
mov
mov
dec
mov
jns
add
xchg
xlat
cmp
stos
mov
jae
pop
inc
xor
into
gs
mov
stos
jnp
lret
sub
movsl
subb
out
or
add
gs
sahf
test
js
mov
pop
sti
xchg
subb
shll
outsb
std
iret
pop
cli
shlb
pop
dec
add
lahf
insl
jno
mov
jp
negb
inc
movsb
cmc
jno
icebp
and
repz
jns
mulb
mov
or
mov
scas
mov
pop
pop
nop
mov
scas
lds
mov
cmp
adc
cli
push
push
xor
xchg
clc
fsubrs
push
int
bound
push
push
dec
or
ds
mov
js
cmp
xchg
dec
popa
sbb
stos
jb
mov
shll
adc
push
xchg
mov
enter
or
sbb
mov
gs
lret
cmc
stos
out
pop
pop
rclb
push
sahf
in
sarb
and
lret
cmc
inc
and
jge
sti
add
data16
dec
out
in
xchg
shlb
movsl
stos
es
dec
jns
cmc
pop
bound
push
je
mov
mov
xchg
fildll
rcl
xchg
addr16
sbb
lret
or
and
add
pop
xchg
out
xchg
sahf
pop
ljmp
std
mov
mov
mov
ljmp
repnz
stos
jae
sbb
jl
or
bound
push
jo
roll
xchg
repz
inc
jg
nop
xorl
out
shrd
cmp
repz
inc
push
stc
xchg
jmp
mov
scas
fwait
lcall
cwtl
push
lcall
xchg
cpuid
pushf
and
sarl
mov
and
and
inc
push
mov
pop
cltd
jnp
insl
inc
pop
mov
sub
mov
cmp
lds
jae
pusha
xor
icebp
xor
push
in
mov
push
push
xor
aam
clc
daa
inc
jno
sbb
jbe
scas
data16
flds
xchg
pop
loopne
lds
orl
loop
xchg
lret
mov
outsl
cmp
lahf
push
xchg
mov
sub
add
loop
xchg
testl
inc
iret
loopne
xchg
mov
mov
mov
add
wrmsr
ss
lea
pop
mov
mov
xchg
jmp
mov
sahf
ret
insb
lret
xchg
xchg
rorl
mov
or
dec
xchg
xor
pushl
mov
bound
mov
mov
and
mov
xor
lret
ficomps
lock
push
icebp
sahf
cmp
pop
shlb
sbb
pop
shll
mov
mov
paddd
cmpsb
dec
enter
outsl
es
pop
notl
xlat
cmp
call
push
sub
dec
xchg
ja
xor
mov
adc
leave
lret
aad
jmp
stos
adc
push
jge
push
adc
push
fsubs
xchg
xor
dec
or
aas
cwtl
js
mov
push
jno
scas
sub
aas
xchg
aas
adc
in
ret
lcall
les
cld
xchg
lds
mov
leave
std
sahf
repz
inc
cmc
inc
mov
test
cmpsb
hlt
cmp
loope
sub
mov
xchg
xchg
or
sub
daa
mov
push
cmp
pmaxsw
fwait
jbe
mov
sbb
mov
jge
scas
or
mov
jg
insb
mov
sbb
push
sbb
stos
jbe
shlb
mov
dec
shlb
push
inc
jmp
inc
cmc
mov
jge
dec
xchg
xchg
sbb
rorb
cmp
dec
les
scas
lds
xchg
mov
mov
rol
movsl
xchg
dec
or
or
aam
push
jle
mov
xchg
mov
int3
insb
push
es
in
jmp
jle
shl
mov
add
cmp
fnstsw
iret
je
stos
addb
and
imul
je
cs
xorb
out
pop
leave
fldt
jle
adc
mov
xchg
outsl
test
mov
sub
sahf
gs
in
jge
in
inc
out
push
daa
sub
xchg
cmc
mov
ds
test
pop
jp
mov
pop
xchg
adc
adc
stos
repz
fisubrl
imul
enter
mov
or
inc
pop
test
dec
and
mov
mov
pop
or
out
xchg
int3
stos
call
lea
fpatan
movsb
jne
orl
in
xchg
jl
sbb
aas
sahf
mov
adc
decb
aad
xchg
js
pusha
sbb
fstl
in
shll
sti
push
sub
jl
push
data16
rorb
pop
inc
dec
adc
fld
inc
pop
cmpsl
lods
xchg
pop
xchg
les
fiaddl
xchg
and
dec
stos
lcall
enter
ffree
pop
xchg
mov
xor
sahf
aam
hlt
mov
insl
dec
cmp
and
mov
push
xchg
mov
scas
pop
test
ret
and
sbb
xchg
cmp
outsl
rcrb
xchg
jnp
jp
mov
daa
test
test
inc
jnp
mov
mull
sahf
ret
mov
push
inc
lret
scas
flds
fdivs
data16
sub
mov
inc
mov
or
cwtl
lret
into
or
mov
pop
ja
and
sbb
loop
popf
mov
pop
fldt
xchg
mov
aas
addr16
mov
out
jo
js
lods
addl
cltd
int3
pushf
inc
mov
lcall
fucomp
adc
sahf
xor
out
outsb
rdmsr
stos
xchg
popf
cmp
and
es
xor
ficomps
push
cmpsl
adc
cmp
push
lret
ljmp
stos
popf
fsubl
test
mov
push
jmp
mov
push
aad
mov
bound
in
pusha
push
fmull
jmp
sbbl
fsubl
mov
repz
aad
adc
es
fdivrl
nop
jmp
dec
add
mov
add
sahf
test
xlat
pusha
xchg
cmp
xchg
test
or
imul
stc
jb
or
inc
jnp
xchg
jb
jge
xchg
cwtl
loop
inc
cwtl
jae
sbb
xor
jp
mov
mov
enter
addl
mov
mov
sbb
adc
std
add
out
rorb
sub
sbb
dec
fnsave
leave
push
lock
ret
pop
xchg
mov
cli
xor
mov
lods
and
sbb
std
sub
xor
inc
out
pop
or
fwait
mov
inc
cmpsb
imul
mov
int
aam
into
mov
leave
cmp
shll
aam
rolb
ret
fsubl
or
xor
push
and
loopne
cmp
jge
mov
fisubl
mov
cmp
xchg
dec
je
fwait
inc
cmpsb
mov
pop
cmp
xchg
pop
mov
inc
shrw
movsl
xchg
mov
mov
fs
lods
les
fwait
mov
push
jno
fsubrs
test
popf
lea
pop
dec
xor
or
sbb
addl
jo
mov
mov
test
ja
mov
imul
js
cmp
mov
pop
daa
mov
mov
lahf
inc
int
adc
or
mov
lea
lods
addr16
das
dec
ret
mov
xor
xchg
das
pop
mov
push
mov
jl
sbb
es
cmp
scas
mul
inc
sub
outsl
mov
iret
sti
inc
xchg
pop
mov
adc
das
push
pop
rcll
cld
jne
popa
leave
sub
mov
push
push
ret
repz
xchg
dec
ror
outsb
or
xchg
repz
adc
fs
ret
dec
xchg
xchg
xor
sub
jp
add
dec
mov
mov
dec
add
orl
cltd
mov
mov
movl
or
jl
adc
jp
ja
cwtl
loope
mov
or
mov
shrl
cmp
daa
loope
add
mov
push
gs
es
int3
and
jne
out
mul
adc
and
mov
int3
ljmp
stos
imul
sub
cmpsb
in
jmp
aaa
cmp
inc
mov
popf
test
xchg
popa
push
mov
nop
push
xchg
imul
mov
inc
xchg
and
and
or
cmp
inc
xchg
test
adcl
ss
push
mov
cmpsb
insb
enter
loopne
sbb
pop
or
push
push
xchg
daa
mov
sti
xchg
outsb
addr16
std
add
or
fdivr
ljmp
inc
xchg
sub
sub
mov
adc
xor
mov
mov
sahf
or
or
icebp
std
inc
push
xchg
xchg
ror
jp
loope
out
and
lods
cld
xor
sbb
test
jg
jle
add
xchg
mov
push
scas
add
jg
ret
test
adc
xchg
aam
adc
or
int
scas
sti
mov
mov
dec
mov
add
mov
sahf
adc
push
add
add
scas
orl
mov
test
data16
and
add
repnz
xchg
repz
mov
xchg
lock
movsl
shll
in
sbb
je
andl
push
sbb
out
test
cmc
shl
popf
jns
mov
fwait
jb
mov
bound
dec
subl
repnz
push
test
dec
lret
xchg
outsl
jae
ficomps
and
cmc
ret
repz
movsb
mov
adc
mov
repnz
and
aad
mov
stos
pop
les
jmp
mov
shlb
jg
hlt
add
insb
mov
sarl
xchg
ss
repnz
ret
sbb
loope
in
xor
imul
aaa
iret
xchg
mov
cmp
int3
jns
add
lea
sbb
add
movsb
cmp
inc
shrl
sub
aad
inc
add
and
jmp
xlat
movsb
jge
out
js
loopne
adc
lret
or
and
call
scas
addr16
sub
mov
jmp
cwtl
insl
or
repnz
push
dec
int3
hlt
and
jmp
aad
sub
test
loope
cmp
lret
push
popf
cmp
les
mov
loop
xchg
scas
in
xchg
jb
dec
scas
mov
xchg
dec
or
xor
xchg
mov
push
scas
cli
cmpsl
mov
fdivs
inc
scas
sub
xchg
add
or
pop
xchg
orb
mov
pushf
xchg
pop
testl
cwtl
data16
xchg
fisubrs
mov
xlat
cmp
addl
xchg
ja
pop
jns
mov
xchg
cmpsl
jp
or
mov
mov
add
int
es
adc
xchg
int3
pop
into
sbb
xchg
or
mov
cmpsl
push
out
addr16
out
repnz
mov
jo
in
aam
xlat
xchg
xchg
aaa
out
scas
lret
add
push
enter
dec
lods
pop
scas
mov
rclb
lahf
cwtl
xchg
jo
jp
xchg
xchg
pop
inc
xchg
dec
out
fs
mov
outsl
push
jo
out
rcrl
lcall
iret
aas
lods
cwtl
push
xchg
out
popl
mov
mov
push
jmp
inc
xchg
and
fs
mov
xchg
mov
int3
xchg
and
mov
out
mov
xchg
out
pop
clc
xchg
and
nop
mov
mov
add
jo
push
mov
xlat
mov
stos
xor
psrlq
out
mov
jge
loop
add
les
adcl
rolb
popl
push
aam
cs
inc
adc
inc
mov
ja
scas
inc
sbb
adc
lods
inc
mov
es
lahf
mov
push
out
dec
cmpsl
ja
jbe
cmp
inc
adc
sub
mulb
ret
or
mov
cmp
shlb
loop
repnz
and
cmp
adc
ss
adc
sbb
mov
jge
xor
cmp
lret
push
mov
xchg
pop
mov
adc
popf
ljmp
mov
jmp
std
mov
jecxz
scas
loope
data16
pop
jno
mov
mov
xchg
jbe
shr
ss
in
mov
jl
in
ja
xchg
pop
jge
jnp
pop
mov
xchg
fisubs
repz
addr16
dec
out
jg
repnz
ret
xchg
cs
xlat
xor
in
push
pop
jecxz
mov
sahf
dec
mov
js
add
imul
cmp
xchg
insb
lds
adc
imul
jbe
xchg
add
das
rorl
mov
aaa
xchg
leave
mov
imul
or
jb
lahf
data16
pop
pusha
xor
test
push
jge
or
jne
cli
je
loope
dec
sub
pop
xchg
cli
fs
pop
mov
fnstsw
inc
sbb
nop
inc
and
mov
dec
out
or
cli
inc
sbb
or
in
push
mov
outsb
mov
mov
mov
lcall
push
pop
mov
mov
jns
mov
call
je
cmpsb
ljmp
inc
notl
xor
cmp
cmpsb
or
xchg
add
ja
push
ret
aas
add
fs
push
cwtl
mov
lea
add
ljmp
mov
andb
jae
test
inc
orl
adc
pushf
outsl
lods
aas
pop
sar
pop
push
filds
mov
incl
fst
xchg
pop
xchg
stos
mov
mov
or
dec
lahf
popf
xchg
loopne
cmpsb
mov
pop
inc
mov
prefetchw
and
mov
push
into
out
mov
mov
xchg
fiaddl
xchg
stos
push
inc
js
test
mov
or
pop
push
push
dec
scas
pop
xchg
pop
or
mov
fidivs
pop
push
xchg
push
sub
aaa
xchg
push
push
adc
or
scas
push
xchg
xchg
xor
add
out
mov
lock
push
mov
scas
out
mov
test
ficoml
mov
mov
mov
stos
push
cmp
mov
sbb
test
mov
testb
outsl
and
shll
add
mov
dec
dec
lcall
xchg
dec
mov
mov
and
push
arpl
sub
movsb
sbb
push
mov
or
dec
pop
push
push
icebp
push
sti
push
addr16
icebp
pusha
cltd
test
lahf
lret
lea
xor
adc
push
mov
sub
addr16
popf
cli
mov
mull
negb
jmp
into
ss
inc
pop
push
std
inc
pushf
sbb
fcomp
mov
testl
repnz
es
lahf
cmp
scas
ret
aam
fiadds
push
xchg
xor
jp
rcrl
xlat
in
ljmp
pop
pop
xchg
xor
and
stc
xlat
adc
nop
xchg
mov
mov
data16
es
push
ret
test
nop
mov
mov
sub
sahf
sub
ss
mov
cmp
xchg
adc
jnp
cltd
jno
scas
xchg
mov
adc
add
mov
fsubrl
adc
arpl
fldl
sahf
inc
cmpsl
mov
xchg
xchg
enter
js
idivl
jge
ds
cmp
aad
sbb
add
int
daa
dec
mov
test
ret
lea
push
mov
xchg
sbb
test
rcl
data16
pop
addr16
adc
and
in
pop
rcll
insl
imul
int3
loope
std
out
sbb
xchg
loop
mov
cmp
imul
mov
stc
sub
loop
mov
and
or
int3
sbb
dec
mov
pop
ret
scas
enter
mov
xchg
sbb
jo
addr16
cmp
xor
pop
cmpsl
mov
dec
sahf
inc
cmpsl
jg
inc
out
in
push
cmp
roll
into
or
mov
push
sub
mov
mov
mov
dec
les
insb
jecxz
insb
mov
lods
jle
out
scas
repnz
test
mov
dec
notl
nop
iret
jbe
push
je
ljmp
adc
hlt
xor
xchg
cmp
in
fcmovnbe
cmpsb
negl
mov
or
lods
lods
stos
fidivrs
lret
or
fnsave
lahf
add
shll
xchg
or
jecxz
cwtl
sahf
repz
rolb
test
test
add
lahf
or
mov
scas
mov
subl
lahf
or
bound
bnd
dec
subb
sub
xchg
add
lods
adc
xchg
cmp
shll
xchg
or
fdivr
les
xlat
rcr
dec
lcall
fwait
or
hlt
push
mov
cli
lahf
lods
adc
inc
push
stc
ds
or
decl
jl
ljmp
in
xchg
mov
int3
xchg
mov
sub
xchg
js
icebp
movsb
sub
in
imull
ret
push
pop
bound
mov
and
in
scas
dec
xchg
push
in
lods
pop
xchg
rcl
fwait
stc
ja
orl
xchg
cmp
addr16
jge
aad
mov
or
ss
xchg
scas
push
push
sahf
mov
mov
clc
nop
sub
xlat
lods
and
xorb
push
pop
or
dec
aas
loopne
data16
lahf
push
cmp
jb
mov
mov
mov
test
into
xchg
mov
or
add
addr16
xsaveopt
scas
test
stc
insb
xchg
push
push
lret
ret
xchg
mov
cmpsb
call
icebp
mov
ja
out
mov
imul
xchg
push
mov
out
mov
adc
pop
sti
outsl
cltd
rcrl
mov
in
push
in
add
mov
push
pop
and
adc
mov
cwtl
xchg
push
push
insl
adc
int3
xlat
mov
cmc
nop
sahf
mov
mov
dec
sbb
jmp
push
iret
xchg
pop
dec
stos
push
imul
pop
loop
xchg
pop
cli
dec
xlat
mov
adc
xor
xchg
jb
mov
shll
loopne
fs
fcoms
fwait
outsl
call
mov
movsl
add
sub
mov
repz
jnp
adc
outsb
cs
adc
aad
push
xor
mov
out
fs
push
lcall
addb
inc
icebp
mov
cmp
or
xchg
add
movsb
lahf
mov
aam
out
jae
scas
push
sbbl
cmp
cld
push
pop
ds
push
sub
rcrl
divb
or
push
jb
iret
mov
push
outsb
popf
hlt
aad
ret
aam
add
pop
xchg
pop
adc
into
jb
xchg
bound
mov
insb
pop
sbb
pop
daa
mov
inc
dec
jl
xchg
jp
sarl
jl
inc
stos
pop
lea
je
es
or
dec
jns
xchg
xchg
cwtl
test
or
pop
xchg
addr16
lahf
cmp
aad
repz
and
addl
xchg
inc
repz
adc
cmpsb
jecxz
cmpsl
cltd
sbb
jbe
out
clc
mov
in
dec
cli
lcall
int3
sahf
jmp
lock
xorl
dec
mov
aad
mov
sbb
sahf
jbe
test
push
mov
sarl
or
mov
mov
cwtl
outsb
out
in
rcrb
pop
cmpsl
shll
outsl
adc
stos
mov
nop
mov
call
sbb
ret
repnz
je
addr16
jg
jg
imul
pop
jmp
call
xchg
leave
adc
mov
addr16
add
sub
das
and
dec
push
add
ja
xor
cs
test
movsb
xor
push
jge
in
push
sbb
icebp
jg
cmpb
xchg
cmp
je
lcall
mov
iret
pop
inc
int
ret
or
jae
rcrl
mov
rcrb
sbbl
ljmp
idivl
push
repz
cs
jmp
xchg
out
adc
sarl
loop
xchg
test
mov
inc
cld
mov
dec
cmpl
imul
int3
lcall
dec
xchg
std
aaa
orl
jae
jnp
or
mov
mov
rcll
je
mov
stc
pop
xlat
lret
jne
pushf
xchg
rorl
pop
and
or
mov
dec
adc
faddl
jl
orl
lds
or
scas
daa
mov
test
pop
sti
add
xchg
add
ret
into
cmp
nop
lcall
push
int
mov
lret
in
call
xchg
sbb
push
loope
call
mov
movsb
andl
stos
mov
loope
add
adc
sbb
sbbl
inc
lret
pop
jmp
andb
sbb
gs
data16
sub
cmp
cmp
dec
jno
cmpsb
movsl
xchg
rolb
jg
addl
mov
pop
mov
dec
dec
sti
ret
jl
inc
jg
into
scas
push
imul
aas
lret
add
call
cld
jl
inc
arpl
xchg
xor
adc
cltd
inc
pop
ja
imul
bound
lret
mov
jno
fadds
in
pop
fisttpl
call
mov
jne
js
xor
jno
xchg
daa
mov
or
jl
xchg
lds
bnd
jne
or
xor
add
add
testb
pop
fcmove
lret
jno
scas
aaa
mov
xchg
cmp
and
xor
sahf
sahf
push
jge
xchg
ljmp
enter
ret
inc
push
imul
addb
aaa
push
cli
sbb
push
in
scas
loop
xchg
incl
pop
inc
out
es
mov
lret
dec
xchg
mov
ficoml
pop
push
cmpsb
xchg
decb
jmp
xlat
xchg
push
xchg
ret
stc
repz
cld
scas
cli
arpl
aaa
mov
adcb
nop
call
aaa
fadds
adc
and
adc
mov
dec
cmp
xchg
push
stc
les
testb
lea
dec
notl
pop
pmaddwd
adc
cmc
dec
packssdw
xchg
out
ja
jg
scas
mov
negl
adc
ss
inc
inc
sahf
pop
and
xchg
xor
popa
cmp
cmpsl
pop
inc
loope
cmp
mov
inc
mov
scas
sbb
xchg
sbb
in
lahf
incb
inc
loopne
xchg
and
pop
xchg
xchg
imul
mov
cli
dec
outsl
inc
loopne
inc
lcall
and
and
and
scas
push
jo
sbb
push
pusha
or
xchg
in
push
mov
and
iret
ret
int3
push
jp
fistl
dec
fbld
ljmp
xchg
dec
lds
dec
out
mov
int
sbb
mov
pop
test
out
stos
je
shld
pop
inc
jg
cld
jg
call
mov
jg
lods
or
push
push
or
dec
sar
fiaddl
cltd
xor
pop
cmp
cli
lea
mul
js
mov
loop
xchg
ret
xchg
scas
out
addr16
xchg
lds
aad
pop
cmp
mov
in
notb
arpl
push
xchg
in
xchg
enter
jmp
int3
dec
push
nop
idivb
ret
mov
dec
xchg
xor
jne
mov
jg
sbb
inc
cmp
fst
fcomps
pusha
sbb
lods
loop
pop
jge
mov
imul
jge
cmp
iret
ja
push
jge
xchg
lahf
test
push
jl
mov
mov
adc
adc
sahf
cs
rcrb
xchg
out
xchg
js
mov
test
cmpsb
jge
or
out
into
mov
icebp
xor
cmp
pushf
mov
or
mov
jecxz
xchg
jae
cld
imul
xchg
dec
sub
xchg
loop
adc
push
mov
pop
ret
sbb
outsb
xor
or
jbe
daa
test
nop
inc
fmull
inc
test
andb
mov
push
jg
sbb
xor
and
test
jg
call
fistps
ds
add
push
daa
ds
and
xchg
xor
push
inc
mov
mov
mov
sbb
push
xchg
xor
loopne
xchg
hlt
sahf
loopne
loopne
xchg
loope
je
push
outsl
xchg
out
scas
mull
icebp
and
mov
gs
mov
mov
loop
xchg
adc
sbb
jo,pt
andb
xchg
xchg
inc
xchg
and
xchg
movd
ss
xrstor
loop
in
loop
les
xchg
xchg
pop
or
xchg
mov
sbb
in
dec
std
and
add
shl
outsl
mov
mov
mov
stos
lcall
mov
lods
mov
aaa
in
add
xchg
mov
add
rorb
add
mov
movsb
add
and
inc
movsl
mov
aad
adc
mov
xor
pop
cltd
mov
rclb
and
cmp
sarb
imul
jb
pop
adc
andl
and
loopne
test
dec
mov
repnz
les
add
xor
inc
mov
shlb
push
hlt
xor
xchg
pop
add
push
mov
inc
push
push
cltd
pop
shlb
or
bound
xchg
clc
sbb
inc
movsl
mov
or
xacquire
mov
push
mov
lahf
ljmp
xchg
mov
jp
dec
out
loopne
or
mov
mov
sahf
pop
les
imul
mov
lahf
out
lods
and
inc
push
sub
scas
and
repnz
adc
in
outsb
mov
fdivrs
stos
pop
arpl
cmp
arpl
stos
jg
ds
or
mov
testb
xlat
xchg
int
jmp
imul
cmpsb
cmp
leave
pop
push
nop
pop
sub
or
sahf
ret
lea
push
jne
pushf
outsl
add
lcall
mov
fdivrs
scas
mov
add
stos
shrl
add
mov
dec
popa
dec
cli
adc
sub
push
push
int
sbb
add
mov
cmpsb
imulb
lahf
dec
mov
adc
mov
outsl
cltd
or
adcl
jle
pusha
icebp
mov
xorl
jae
xchg
pushf
decb
dec
xchg
test
loop
push
aad
inc
lds
outsb
mov
mov
adc
pop
push
adc
mov
iret
cmp
bound
aad
add
fisubrs
loope
cld
push
stos
test
push
cltd
rorl
popa
mov
fidivrl
loopne
sub
shll
lods
lods
sbb
push
xlat
cmp
in
or
mov
out
mov
pop
mov
xchg
insb
shlb
ss
push
movsl
iret
test
cmp
into
xor
repnz
ret
into
call
fs
sub
mov
jne
or
dec
iret
jp
jmp
movb
mov
mov
icebp
mov
aas
repz
pusha
repz
in
js
push
or
stos
dec
xchg
lock
mov
inc
xchg
pushf
jmp
xchg
aas
ja
imul
xchg
mov
mov
mov
shlb
mov
dec
add
xchg
icebp
je
inc
pop
bnd
jge
imul
test
dec
fnstsw
ds
call
mov
pop
lods
addr16
mov
and
mov
arpl
dec
les
mov
popf
cltd
fimuls
lret
out
dec
push
int3
jmp
fdivr
add
xlat
pop
mov
and
pop
cmpsb
pop
cmc
jnp
mov
jge
adc
mov
gs
cwtl
and
adc
sub
pop
adc
or
nop
jns
out
nop
aas
mov
rorl
sbbl
repnz
addr16
ljmp
repz
sti
cmpsb
mov
push
sub
dec
xchg
mov
mov
int3
dec
test
scas
ljmp
adc
jns
and
jg
inc
imulb
lcall
push
in
xchg
sti
addr16
jge
mov
jnp
add
out
sahf
ret
mov
xchg
nop
js
cs
mov
sbb
cmp
jge
scas
push
insb
dec
sbbl
mov
std
bound
loope
cmp
xchg
jge
sub
and
mov
fsubrl
stos
fldt
int
repz
into
imul
sub
jg
stos
lock
fsubr
ss
fs
cmp
sahf
or
insb
pop
addl
in
leave
mov
xchg
faddp
xchg
lds
rcrl
pop
mov
inc
fnstsw
or
out
icebp
jne
dec
and
aaa
lods
xchg
and
push
pop
icebp
addb
sbbb
repz
mov
or
stc
jge
dec
sti
mov
stc
push
ss
addl
dec
dec
repnz
imul
sahf
dec
cmp
push
or
clc
sti
xchg
cmp
mov
push
cwtl
addr16
stos
movsl
add
pop
bound
adc
test
test
cld
cmpsb
repz
insl
fmuls
dec
insb
jbe
lea
adc
movsl
out
lock
mov
bnd
dec
cmp
or
mov
daa
loope
add
imul
stc
aaa
jne
mov
lahf
pusha
jg
shrb
aad
test
mov
sbb
out
push
cmp
inc
inc
mov
out
jb
add
imul
or
ljmp
stos
aad
add
int
fisttpl
mov
rcl
lods
mov
icebp
sub
inc
xchg
les
cmp
and
push
push
call
push
nop
mov
jbe
push
repnz
gs
inc
dec
aad
lret
xchg
std
mov
mov
movsb
sbb
int3
mov
lcall
addr16
adc
push
dec
aam
or
jge
push
cmp
outsl
and
fiaddl
dec
and
into
add
mov
fcompl
rcll
into
out
inc
rol
scas
mov
fcmovb
cmpsb
mov
mov
jbe
mov
data16
dec
push
mov
inc
lahf
cmovbe
push
and
sub
ret
push
scas
repnz
cmpl
add
dec
and
testb
mov
lret
into
outsb
addl
es
fimuls
mov
shl
out
lods
add
mov
inc
rclb
sahf
cmpsl
add
out
orb
aad
sub
add
out
mov
sahf
push
cltd
xor
add
jne
mov
jmp
xor
in
dec
cmp
and
pop
pop
cmp
mov
inc
in
push
and
lds
push
xchg
int3
dec
outsb
dec
xlat
dec
mov
xchg
ja
lcall
mov
add
mov
out
andb
aad
movb
jae
push
fstpl
loopne
xchg
jb
shr
repnz
testb
adc
mov
bound
add
shlb
std
sub
xchg
dec
or
push
inc
xor
push
push
lret
cmp
out
stos
divb
inc
sti
cltd
lret
mov
enter
xlat
xlat
gs
xor
enter
jnp
sti
cwtl
enter
sti
and
jbe
js
inc
cld
mov
jecxz
sub
outsb
ret
push
loop
stos
orb
pusha
pop
push
jmp
jne
mov
sti
push
cmpb
outsb
test
jg
repnz
push
cmc
xchg
nop
mov
jbe
cld
cmc
inc
enter
rolb
imul
arpl
lods
aam
xchg
xchg
dec
js
sbbl
push
cwtl
adc
cmpsb
dec
fstps
or
xchg
movsl
imul
movsl
pop
mov
and
int3
add
int3
or
repnz
pop
and
cld
xchg
jne
ret
and
mov
movsl
repz
mov
pushf
sub
adc
cmp
test
dec
cld
data16
int
nop
les
lret
sbb
jbe
inc
add
add
addl
icebp
nop
sahf
or
inc
mov
mov
cmp
mov
jb
aas
repnz
add
push
js
dec
testl
imul
sub
leave
dec
and
imul
in
xchg
ljmp
cwtl
es
repnz
dec
inc
nop
jnp
out
rcll
aaa
fsubr
mov
push
lret
lea
pop
mov
nop
loopne
mov
mov
pop
dec
xchg
xchg
cmpxchg
xchg
mov
sub
mov
lahf
sub
aam
and
lret
mov
mov
pop
out
mov
mov
fs
mov
gs
stos
roll
cmc
or
adc
xor
das
imul
cmpb
sahf
insb
stc
xchg
mov
test
lret
mov
in
or
xorl
cmpb
or
push
and
mov
cmp
jns
mov
lahf
mov
movsw
fmull
xor
addl
loop
jge
sub
sbb
cld
pop
fists
mov
mov
jecxz
rclb
and
jmp
rclb
push
stc
enter
xchg
sbb
daa
mov
std
push
rcll
fwait
sarb
lret
mov
into
out
mov
push
jb
test
lcall
pop
xchg
mov
into
es
ds
push
push
or
aas
outsb
push
dec
pop
xchg
fcmovbe
jne
add
mov
dec
or
or
or
scas
mov
imul
jns
sub
mov
js
push
push
sub
rcll
sub
sub
and
fisttps
ds
mov
insl
mov
jnp
jbe
mov
jnp
jnp
cmp
or
insl
fwait
push
mov
leave
aad
jmp
shl
bswap
lcall
rclb
adc
aad
insb
scas
sub
roll
mov
mov
xchg
fiadds
in
jne
pop
cmp
mov
inc
mov
sahf
loop
xchg
xor
lea
xchg
push
testb
insb
jo
jge
fiadds
jp
leave
cmc
in
daa
out
dec
jne
fsubl
repnz
jbe
lret
push
stc
aad
cltd
leave
scas
imul
cmpsl
inc
jl
bound
xchg
adc
jg
pop
push
mov
scas
pop
adcl
std
mov
mov
sub
pop
sbb
jns
rcrl
push
and
add
xchg
push
stos
stos
cmc
mov
aas
in
scas
and
inc
orl
nop
nop
out
faddp
rolb
mov
rcl
add
push
mov
repz
cmc
mov
push
cmp
mov
mov
xchg
stc
js
inc
mov
out
lret
data16
sbbl
mov
mov
sahf
xor
cwtl
mov
mov
cli
or
jns
sub
mov
mov
mov
dec
das
and
adc
testb
inc
fldenv
xor
pushf
sahf
into
sbb
lods
into
ficoms
movsbl
push
movsl
jb
xor
out
jle
test
jg
xchg
sbb
xchg
repnz
adc
cmp
or
nop
jl
add
addr16
push
sub
call
addr16
push
inc
adc
jge
mov
test
xchg
sbb
lods
dec
cli
mov
movsb
xchg
lahf
jg
lahf
pop
mov
xor
mov
mov
jg
mov
sub
dec
jb
push
into
out
xchg
call
xchg
xchg
add
mov
cmc
scas
loopne
dec
push
cmp
adc
fbstp
icebp
pop
int3
insl
fadd
push
inc
cmp
push
les
sub
mov
inc
inc
nop
mov
stos
lcall
outsl
dec
test
xor
fiaddl
ds
pop
jnp
imul
repz
or
cwtl
jnp
movsb
pop
hlt
mov
ret
test
dec
sahf
fmull
imul
and
outsl
mov
add
jne
outsb
inc
dec
push
jg
cmp
fstpl
imul
xor
push
jbe
cmpsb
imul
xchg
out
ret
pop
cmp
dec
mov
sbb
xchg
pop
stos
hlt
xchg
add
cmc
jmp
mov
ret
xchg
add
jmp
inc
mov
out
push
enter
sub
mov
lds
jl
inc
jmp
call
cmp
pushf
xchg
push
jge
cmpsb
mov
cmp
lret
wbinvd
adcl
cmp
and
sbb
push
mov
loop
into
jg
cli
or
dec
insl
call
mov
outsb
mul
adc
or
jecxz
test
insl
mov
rcrb
xchg
in
mov
xchg
call
cvtps2pd
movsl
sub
fwait
or
sbb
rcl
out
stos
dec
mov
call
xchg
hlt
lcall
rcr
and
jmp
out
or
mov
into
jno
mov
push
rep
stos
xchg
add
xchg
mov
xchg
or
rcrl
and
push
out
mov
clc
stc
jle
fisttpll
sbb
or
xor
lods
mov
cmc
nop
scas
push
outsb
or
test
aas
rcll
xlat
loop
add
in
clc
sbb
fwait
out
insl
xor
dec
inc
arpl
fsubs
push
inc
sbb
inc
sub
xchg
aad
sahf
mov
jp
sub
cmp
jo
or
or
sbb
fidivs
cmpsb
jb
push
jb
xchg
xchg
or
and
out
jbe
adc
int
mov
push
es
mov
in
pop
xor
lea
notl
pushf
and
and
dec
push
inc
loopne
xchg
xorb
and
xchg
cltd
dec
xchg
icebp
ret
lret
inc
xor
stos
repz
fisubs
fnstenv
jno
mov
sbb
sti
dec
cli
testl
push
iret
adc
loop
cmp
pop
mov
pop
call
mov
jne
mov
int
leave
xchg
jge
dec
mov
jbe
test
mov
dec
xorl
imul
fisubl
stc
in
and
push
fnstsw
aam
push
js
adc
shl
cwtl
and
xor
add
rcll
mov
pop
sbb
pop
cwtl
fcmovb
mov
fstps
aas
push
dec
rcl
adc
shrl
mov
jp
cli
pop
call
xchg
rcr
fcmovbe
aam
mov
mov
int
mov
or
and
xlat
mov
test
lods
push
cwtl
iret
pop
cmpsb
popf
mov
mov
jne
aad
xchg
jae
push
cli
mov
xor
dec
mov
push
mov
shll
loopne
sub
lret
addr16
inc
jmp
lods
add
into
imulb
enter
mov
stos
or
mov
mov
inc
and
ss
push
sahf
mov
je
andb
inc
xchg
repz
add
sub
test
push
imul
iret
in
cli
addr16
pushf
addl
ss
frstor
nop
mov
dec
push
pushf
fwait
or
push
pusha
dec
pop
movsb
mov
lahf
or
loop
inc
iret
jbe
add
imul
orl
and
xchg
inc
scas
cmpsb
and
ret
pop
xchg
mov
xchg
adc
pushf
pop
int
fucom
pop
scas
ja
or
in
jge
out
adc
or
sbbb
scas
inc
icebp
leave
sahf
cmp
xchg
xchg
subb
xchg
mov
dec
ljmp
xchg
inc
jmp
pop
movsl
repz
add
adc
data16
xchg
test
ficoms
test
xchg
add
aaa
int3
xchg
adc
mov
push
mov
dec
or
pop
xchg
test
out
into
sbb
loopne
add
nop
test
xor
mul
fbstp
ret
or
repz
add
clc
mov
pop
rcr
sbb
cmp
insb
push
es
or
mov
cmpl
loopne
nop
sahf
mov
mov
cwtl
and
mov
mov
inc
mov
push
jne
xchg
sub
loop
dec
inc
nop
cmpsl
es
leave
xor
xchg
xchg
cmpl
sub
scas
sub
add
cmpsb
xchg
xchg
mov
mov
inc
mov
insb
mov
jns
xor
inc
dec
jne
sahf
clc
pop
mov
sti
and
fmuls
lods
jge
xchg
outsb
ja
out
push
xchg
xchg
roll
xchg
sub
push
xchg
fcmovb
jp
push
fsubp
loopew,pn
inc
jne
cmp
cmp
subl
push
addr16
lea
loop
mov
cltd
mov
adc
push
mov
push
enter
fs
into
clc
jbe
pop
push
sti
lcall
pop
aaa
fidivs
fsubrl
stos
push
xchg
shl
adcl
out
call
add
pop
sub
sti
jbe
xchg
mov
jg
jecxz
xchg
lret
push
cmpsl
lds
aam
xchg
out
pop
mov
mov
jp
mov
repz
jno
mov
imul
test
mov
adcb
inc
sbb
or
inc
orl
xchg
mov
cmp
mov
jl
push
xchg
adc
pop
sahf
mov
pop
sub
jge
out
je
nop
leave
cmp
idivl
test
ss
lea
sub
scas
std
sbbl
adc
push
sbb
cmp
dec
repnz
fstpt
fdivr
cltd
sbbl
xchg
js
add
inc
mov
add
and
or
mov
jmp
leave
js
sub
push
jecxz
rcll
je
or
add
xchg
mov
in
fldcw
inc
fmull
mov
jg
pop
xchg
sahf
mov
fisubrl
mov
pushf
adcb
jns
loopne
repnz
test
mov
sub
cld
jbe
xchg
jp
push
jne
push
iret
push
mov
test
sahf
and
enter
jns
sub
leave
cmp
stos
xor
pop
lea
stos
inc
xchg
mul
xor
jb
or
mov
inc
mov
add
sbb
cmp
or
jne
mov
fisubrl
push
clc
and
ja
sahf
mov
add
fsubs
lds
sahf
sub
popa
sub
nop
push
test
rcll
mov
xor
into
arpl
flds
decb
outsb
inc
lods
mov
xor
roll
ds
enter
inc
pop
sahf
and
aaa
imul
cli
testl
in
pop
adc
jge
and
test
fidivl
pop
test
sbb
pop
mov
je
pop
mov
jbe
jbe
pop
xchg
xchg
addl
xchg
nop
icebp
andb
cmp
idivb
je
xchg
mov
xchg
jbe
xchg
cltd
sbb
xchg
jl
je
jno
test
repz
movsl
sahf
into
aad
xchg
jno
mov
lods
xchg
adc
jge
movsl
and
data16
fcoms
jne
xchg
sahf
cmpb
cmp
fisubrs
out
inc
in
mov
mov
mov
cmp
mov
adc
cmc
add
sbb
cmpsb
fbld
int3
and
or
insl
cld
rcrl
cld
push
or
stos
sbb
add
cld
scas
adc
adc
gs
aam
nop
fcmovnbe
fimull
je
add
lods
mov
mov
lcall
mov
in
int
mov
stos
or
mov
pop
int
xchg
cmp
and
jnp
lret
cmp
popf
lcall
test
mov
xchg
xchg
insl
push
shl
dec
fwait
lret
imul
xchg
cmpsb
cmp
cmp
push
test
fs
cmpsb
faddl
shll
push
cmp
mov
imul
or
fdivrs
mov
mov
call
bound
das
fsts
ds
mov
sbb
and
sti
push
mov
rcll
mov
or
enter
adc
pusha
add
js
in
push
add
xchg
aad
pop
jg
pusha
jne
addb
loope
fldcw
add
mov
je
int3
cld
push
pop
add
cmp
xorl
adc
xchg
test
sahf
rcl
cmpsl
ds
aad
or
dec
mov
inc
mov
mov
nop
cs
fistps
popf
push
cmpsl
int3
add
adc
xchg
jge
cmp
xchg
and
nop
or
movsl
or
mov
xchg
lods
cmovle
inc
mov
shld
js
push
and
mov
xchg
into
std
popf
cwtl
mov
lock
push
inc
mov
pop
stc
repz
mov
shrl
jns
cs
fildl
xor
pop
add
fistpl
test
mov
add
cmp
pop
mov
adc
jle
repz
test
push
addr16
mov
je
popf
inc
sub
xchg
pop
das
mov
lcall
or
fsincos
fcoml
mov
pop
insb
mov
add
pop
mov
and
in
bound
or
scas
push
inc
lret
inc
dec
add
in
mov
or
mov
xor
sarb
cli
jns
inc
adc
mov
mov
clc
shrl
fnstsw
add
sahf
dec
inc
andl
add
les
fisubl
rorb
push
nop
inc
sub
je
int3
into
pop
lret
xor
and
mov
fcmovb
dec
xor
sbb
movb
xchg
xchg
repz
in
push
cmp
cwtl
rorl
sbb
fisttpll
sub
mov
sub
lods
push
xchg
lock
mov
pop
mov
aas
lcall
push
pop
jbe,pt
cs
add
fnstsw
sub
jns
movsb
and
adc
lahf
mov
lret
and
int3
aad
std
jg
outsw
std
and
lds
sbb
cmp
mov
and
push
loopne
inc
mov
sahf
sub
jns
jns
subb
clc
int3
es
fimuls
ds
mov
push
xchg
dec
pop
bound
add
ret
pop
pcmpeqd
or
pop
mov
in
movsl
fdivrl
jl
push
inc
or
jg
mov
frstor
aam
rcrl
pop
inc
xorb
inc
pop
test
push
int3
or
jae
stos
mov
jge
pop
mov
xchg
cmp
sub
dec
lret
cmp
xor
cmp
sbb
mov
in
dec
dec
xchg
add
lea
or
jp
flds
push
pop
mov
je
sub
loop
roll
pop
mov
jge
pop
popl
cmp
nop
cmpsb
xchg
cmp
ficompl
movsl
mov
imul
ds
insb
pop
cmpsb
pop
mov
mov
mov
data16
incb
scas
pop
loopne
push
cmpl
inc
adc
movb
out
ret
imul
sbbb
dec
mov
inc
ljmp
bound
jo
shlb
div
clc
jg
jno
add
mov
xor
mov
nop
sbb
jns
jecxz
push
dec
dec
test
xchg
push
cld
xchg
aam
xor
mov
push
mov
mov
inc
aad
dec
lods
aam
fsubrs
out
ss
adc
out
xchg
push
pop
sub
mov
mov
pop
aam
dec
mov
rorb
mov
andb
cmp
xchg
pop
mov
sbb
icebp
push
repnz
xchg
or
js
shr
inc
test
fwait
sahf
int
push
and
and
scas
rcl
out
and
ljmp
nop
xchg
add
std
lret
sub
mov
sahf
ret
cltd
subb
into
push
fadds
cmp
xchg
addr16
jmp
clc
shrl
sub
movsb
sbb
shll
add
cs
pop
fbld
sub
outsb
cli
fs
add
or
frstor
loop
jg
jne
leave
pop
iret
scas
cwtl
adc
pop
xlat
jnp
xchg
mov
and
xchg
xchg
and
pop
push
cltd
shll
fidivl
adc
add
filds
shll
lahf
add
sbb
loopne
mov
into
ret
mov
test
mov
or
sti
stc
rcrb
stos
add
lea
sub
int
lcall
nop
dec
push
jle
test
xor
cld
je
add
mov
xor
sahf
pop
ja
mov
mov
xchg
mov
scas
inc
inc
mov
sbb
test
lahf
ret
push
mov
in
lods
jl
int
jb
addr16
mov
nopl
adcl
jne
andb
movsl
ja
and
or
icebp
sahf
enter
lds
rolb
mov
div
inc
jg
outsl
lock
or
flds
andl
pop
mov
and
cltd
mov
cmp
push
mov
mov
outsb
add
shl
iret
ds
xchg
loop
xchg
shlb
mov
stos
lret
xor
fwait
xchg
xchg
inc
mov
xchg
pushl
cli
mov
imul
xchg
mov
ja
nop
repnz
imul
jo
scas
inc
call
mov
ja
mov
add
pusha
ss
das
out
leave
push
in
adc
add
xchg
repz
jp
push
js
mov
push
int3
xor
cmp
movsl
jge
sti
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
fldl
aam
lahf
lock
mov
stc
jb
xorl
adc
loop
inc
dec
jl
jecxz
ret
iret
lock
add
mov
xor
aad
xor
and
or
pop
mov
xor
add
repnz
in
scas
je
pushf
or
xor
adc
adc
cmpsl
aam
mov
cli
icebp
jl
test
jge
lods
mov
cmc
push
int3
inc
data16
les
js
cmpsl
push
xchg
aas
inc
dec
cld
lea
mov
jl
jle
adc
cmc
mov
int
add
std
cmp
movsl
mov
sub
sbb
jg
mov
pop
pop
xor
pop
mov
jl
repnz
arpl
insb
add
fadds
jne
cli
shrb
out
rorb
into
mov
jb
pop
jg
data16
into
adc
xchg
add
dec
dec
mov
inc
ja
rcrb
lcall
lods
fidivs
mov
xchg
nop
pop
jge
shr
daa
shlb
outsb
sarb
sarb
and
lds
out
xor
mov
and
stc
adc
xchg
movsl
into
mov
sbb
clc
loop
fsts
mov
ffree
xor
ds
out
lret
enter
jbe
mov
in
daa
xchg
ret
sbb
iret
push
test
fsubrs
mov
hlt
std
sarb
inc
xor
or
inc
popf
cmp
jne
fiadds
xor
outsl
test
jbe
add
cmp
cmpsb
or
ljmp
xchg
cwtl
enter
sahf
jns
jl
xchg
sahf
push
mov
pop
sahf
sbbb
cli
orb
push
pmullw
movsb
lds
jl
scas
incb
scas
loop
fmul
repnz
add
in
mov
test
or
mov
mov
popl
or
scas
orb
addb
in
andb
test
pushf
shll
pop
mov
int3
jl
lret
pop
enter
add
xchg
ds
pop
or
dec
femms
xchg
jbe
inc
push
cmp
addr16
cmpsb
inc
shrb
addb
cli
push
in
call
add
test
mov
andl
mov
sbb
test
sub
mov
add
xchg
int
adc
sarb
insl
daa
sbb
ret
or
dec
sbb
addr16
dec
and
xor
xorl
or
pusha
lea
mov
pushf
lret
imul
dec
inc
out
iret
subb
jg
adc
dec
push
addr16
and
ljmp
mov
ljmp
lods
jbe
lret
push
ret
stos
cmp
int3
sbb
ljmp
scas
sub
mov
lahf
in
orb
or
mov
xchg
repz
mov
or
out
mov
imul
push
pop
popf
outsb
les
repnz
mov
out
stos
repz
ss
sbbb
xor
cmp
insl
clc
mov
stc
je
rcll
data16
and
insb
ss
push
sahf
inc
jne
testb
cs
or
mov
outsb
daa
xchg
icebp
and
xorl
lcall
sbb
lret
andb
and
ja
movsb
icebp
fisubrl
lret
pop
inc
out
hlt
popf
fdivs
dec
pop
data16
pop
aad
pop
xchg
cwtl
mov
je
xchg
xchg
sahf
xchg
ljmp
mov
fcoml
sub
out
imul
add
xor
adc
adc
stos
gs
adc
mov
nop
cmc
dec
mov
bnd
adc
push
loop
fadds
inc
add
push
cwtl
cmp
mov
mov
nop
and
hlt
pop
and
mov
into
nop
push
mov
push
std
call
sti
xchg
hlt
stos
bound
ja
cli
xchg
cmc
mov
and
lods
mov
jae
pop
mov
fsubrl
into
xchg
and
stc
mov
and
movsb
fcompl
in
fcomps
sbb
mov
leave
rcrb
inc
subb
ret
inc
in
and
mov
pop
ret
jge
xchg
test
call
mov
test
clc
push
fisttpll
and
or
orb
cld
popf
add
mov
data16
dec
mov
sbbl
scas
or
shlb
lea
push
mov
adc
ficomps
in
enter
ret
jp
fdivrl
xor
pop
jl
hlt
cmp
jbe
and
jnp
push
add
and
sub
xor
mov
fs
repnz
xchg
mov
mull
mov
mov
cld
cmp
decl
mov
xchg
and
in
lea
cmpsl
andl
cmp
mov
mov
fdivrl
adc
pop
loop
mov
nop
add
xor
lret
shrl
test
or
lret
ror
cli
nop
add
insb
fdiv
sub
daa
fists
jno
cmp
fcoms
push
xor
je
push
sub
movsb
data16
adc
mov
sahf
aaa
addl
xlat
cld
std
mov
test
dec
dec
test
into
jns
mov
mov
sbb
cs
inc
sbb
lahf
sub
pop
push
insb
and
mov
xchg
xchg
lahf
mov
mov
rcrb
mov
icebp
cmp
inc
aad
adc
aad
fisttpll
inc
orl
cmp
xor
shll
movsl
jne
loope
xchg
cwtd
mov
aam
shrb
mov
xchg
js
sub
mov
adc
xchg
ret
or
dec
mov
int3
andb
lods
les
mov
sbb
mov
nop
pop
xorb
bound
lods
xchg
dec
mov
loopne
aaa
mov
lea
sti
mov
pop
jno
sub
sbb
sbb
lret
test
sbb
cli
jbe
and
iret
xchg
and
xchg
or
js
out
into
push
shr
outsl
inc
push
and
sub
cmpsb
pop
nop
lea
sub
jbe
out
ljmp
sub
rorl
in
pusha
test
jb
inc
cli
pop
cmp
daa
inc
add
cmp
or
cli
stc
loop
push
scas
jp
xchg
rorl
mov
popl
push
or
lea
sub
shlb
arpl
pop
cmp
mov
dec
or
jnp
jmp
outsl
xor
test
imul
decb
sbb
or
mov
push
add
or
lcall
push
mov
into
cmp
out
test
add
mov
push
rcrb
sbb
cmc
and
mov
shr
outsb
aad
rolb
push
insl
xchg
dec
je
lret
orb
iret
mov
shll
jg
fwait
jp
jl
ret
popa
bnd
adc
mov
lret
mov
mov
mov
sahf
in
pop
nop
aas
call
test
int3
mov
scas
addr16
ret
and
push
pusha
icebp
and
jb
addb
bound
andb
xlat
scas
mov
push
enter
add
addr16
cli
movsl
frstor
sahf
pop
sti
mov
add
aad
add
or
lods
rorl
notl
dec
mov
sti
cmp
mov
ror
test
mov
dec
out
jg
dec
or
xor
fwait
out
and
pop
pop
pop
cmpsb
or
adc
cwtl
ret
add
in
test
xchg
xor
pusha
out
push
cmp
jb
jl
nop
xchg
in
push
jle
dec
xor
push
jg
add
movsb
dec
adc
ficoms
sbb
lcall
mov
cmp
lds
add
mov
and
cs
fdivl
imul
inc
inc
ret
fwait
jg
sbb
es
mov
std
xchg
inc
in
or
in
pop
mov
push
cmp
push
dec
es
fsts
popf
stos
enter
ror
and
repz
xor
sub
xchg
inc
test
mov
jae
daa
mov
loop
pusha
shl
and
mov
cmc
les
stos
leave
outsb
cmp
repnz
mov
xchg
sbb
int3
xorb
mov
inc
inc
leave
insb
push
ret
or
aas
xchg
call
mov
lcall
rcrl
pusha
add
adc
leave
movsb
jmp
in
fwait
adc
inc
and
mov
out
ljmp
mov
imul
cli
enter
dec
and
jg
mov
push
les
jbe
stos
cli
movsl
cmpsl
js
jle
pop
mov
jge
test
jae
xorb
into
aam
dec
in
repz
addr16
mov
rcrl
sub
mov
add
aas
pusha
adc
imul
adc
ret
imul
dec
cld
lods
int3
xchg
into
xchg
add
mov
jnp
movsl
jno
mov
outsl
mov
es
leave
stc
sbb
cld
test
mov
adc
movsl
shrl
call
loope
push
outsl
loop
nop
add
fstp
mov
sti
cli
xchg
es
pushl
adc
mov
out
repz
in
cmc
in
cmpsl
mov
gs
dec
fbstp
repnz
fiadds
out
push
adc
stos
cld
enter
push
adc
int3
mov
xor
xchg
pop
xchg
out
push
arpl
xchg
stos
mov
xchg
cmp
xchg
pushf
repnz
pop
cmp
adc
mov
push
popf
xor
lret
cmp
mov
push
xchg
into
mov
add
xchg
mov
push
push
addb
addb
loopne
or
out
add
in
mov
mov
shlb
adc
insb
pusha
xchg
pop
adc
xchg
std
cmp
cmovns
adc
bound
test
xchg
data16
pop
dec
aad
int3
xchg
in
sub
aas
push
inc
in
fildll
std
nop
and
mov
lea
repnz
or
cmpl
sahf
mov
sbb
daa
int
jb
dec
js
mov
mov
xchg
mov
pop
fs
stos
jge
jp
jmp
jmp
adcb
and
pop
stos
mov
mov
ja
mov
adc
cmc
jb
call
mov
sub
mov
inc
mov
and
out
ljmp
mov
jbe
movsl
sub
ja
sbbl
cs
lret
xchg
lea
cmp
and
jl
add
xorb
and
add
ss
out
xor
filds
jbe
jle
filds
push
cmp
jl
test
rol
push
call
ret
into
mov
mov
sahf
sbb
pop
mov
adc
sti
pop
cwtl
shll
call
pop
xchg
orb
test
adc
jo
shl
xor
mov
neg
mov
jge
int3
push
in
aam
adc
sar
sub
push
test
pushw
shll
pop
scas
rcrl
xor
mov
fnstsw
rol
xchg
cmpsb
inc
stos
test
jecxz
ljmp
mov
or
insl
inc
add
or
add
inc
aad
sbb
mov
movsw
repnz
ja
pop
xchg
fdivrs
push
out
mov
jecxz
js
mov
inc
fnsave
adc
lidtl
int3
daa
xchg
inc
cwtl
xlat
repz
insl
jo
popa
rcll
std
bound
jbe
add
mov
mov
sti
jbe
cwtl
xchg
mov
lret
test
loopne
nop
cmpb
repz
jg
loope
dec
enter
push
push
sbbl
inc
lods
sub
cli
add
leave
pop
test
xchg
sbb
cmp
cwtl
mov
jae
das
enter
insb
push
pop
lcall
addr16
fwait
dec
ljmp
mov
and
ret
sbb
test
sahf
adc
cmp
cli
testl
addl
or
scas
mov
mov
clc
push
inc
in
xchg
stos
push
push
or
pop
int
mov
push
leave
dec
pop
call
add
push
data16
or
sbb
sarb
inc
andb
mov
xchg
mov
aad
nop
addr16
mov
out
sub
xorb
cmp
scas
fnstenv
jb
movsl
outsb
mov
jp
repnz
inc
xchg
fucom
sub
clc
inc
xchg
add
cmpsb
and
mov
fidivl
loop
xchg
or
adc
push
loop
nop
push
mov
pop
xchg
lcall
orl
inc
rcrl
lea
bound
mov
rcr
jge
outsb
subb
hlt
rol
or
lea
repnz
mov
fsubl
addr16
aam
add
jp
fadds
xor
mov
popa
clc
push
sub
repnz
subl
div
add
push
andb
rol
or
pushf
xchg
mov
lock
xchg
call
add
js
mov
imul
jg
push
leave
mov
cmpsb
movsb
or
movsl
hlt
push
nop
or
inc
hlt
into
data16
xchg
push
xchg
jle
iret
out
jmp
sti
jb
mov
addl
dec
call
add
lds
mov
into
or
pop
sar
xchg
push
shl
movsb
sub
mov
or
and
test
push
pop
es
lea
or
in
inc
xchg
adc
test
xchg
or
push
rolb
dec
xor
xchg
mov
cmp
cwtl
inc
ret
into
or
lock
xchg
shlb
cmc
data16
cli
sbb
jbe
add
push
jb
add
les
aam
in
jg
aad
pop
dec
sub
xchg
xlat
sbb
bound
rorl
cli
out
xor
jg
idivl
push
or
daa
aaa
cld
and
fldenv
xchg
jne
das
nop
fwait
or
out
pushf
add
dec
pusha
or
jl
aaa
and
jns
xchg
cmpsl
test
sbb
push
pop
lsl
add
mov
xor
cwtl
mov
test
xchg
xchg
xchg
nop
cmpsb
xlat
ss
rcr
inc
mov
pop
or
pusha
sbb
flds
jmp
xchg
aad
fbstp
push
lret
or
inc
adc
push
sub
and
into
cmp
mov
pop
jb
int
pusha
orl
hlt
xchg
dec
jae
test
jl
sarl
adc
jnp
jno
sbb
pusha
mov
sbb
ljmp
sub
mov
rcrb
cli
adc
into
cmpsb
int
jo
enter
mov
mov
xlat
jnp
xchg
adcl
dec
sbb
mov
xor
xchg
mov
add
jb
out
ds
inc
testb
mov
fsubp
mov
ljmp
mov
xlat
jbe
push
xchg
out
ret
dec
jp
jbe
scas
scas
clc
cltd
mov
sbb
pop
push
fbstp
xchg
jg
cld
subl
aad
adc
jmp
ret
mov
pop
dec
int
loopne
adc
int
mov
push
xor
outsb
repnz
mov
repnz
and
mov
mov
mov
pop
adc
lret
mov
comiss
fidivs
sub
es
inc
sub
mov
mov
inc
or
mov
jecxz
lds
xor
xor
loopne
out
int
leave
sub
cltd
mov
mov
adc
cmp
cmp
out
daa
mov
lock
movsl
add
pop
mov
fildll
fldenv
aaa
xchg
lods
sub
adc
push
adc
mull
addr16
jp
and
popf
lock
mov
es
add
jo
pop
xchg
not
data16
in
xor
fisttpll
divb
ret
sub
shl
adc
xchg
out
outsl
xchg
push
and
cmpsb
nop
add
in
dec
and
outsb
ficoml
lods
call
lret
ret
pushw
lea
inc
arpl
aam
fstps
jae
aad
jnp
mov
mov
cmp
movsl
dec
jg
pop
mov
addr16
lods
sbb
or
inc
adc
loop
xchg
mov
xchg
xchg
lret
lret
add
and
or
ret
scas
inc
lcall
sbb
ja
inc
xchg
ucomiss
pusha
xor
shr
icebp
pop
ja
push
inc
cmp
stos
hlt
adc
xor
dec
cmp
cs
adcl
dec
in
dec
mov
or
into
cmp
and
bswap
adc
sub
jp
lods
mov
jne
inc
inc
xchg
scas
push
cld
cmp
add
pusha
inc
das
into
and
jnp
mov
out
and
lds
ds
jp
mov
pop
es
cmp
push
mov
outsb
cli
cmpsb
push
xchg
out
ljmp
sub
lcall
mov
mov
add
dec
popf
mov
out
fwait
mov
fsubs
jle
sbb
inc
shrl
jle
mov
mov
inc
xor
into
adc
movsl
mov
stos
repnz
jg
add
test
xchg
mov
test
scas
out
fs
cmpsl
cmc
fidivrl
frstor
ljmp
daa
fsubs
das
std
adc
ret
imul
jecxz
mov
adc
dec
gs
ja
outsb
mov
repnz
lods
cmpsb
stc
add
lret
inc
fcmovnbe
lret
jmp
inc
cmp
push
jo
aaa
aam
fimull
addr16
push
sbb
or
fwait
cmp
rcll
fimuls
out
and
xchg
inc
stos
aas
sub
or
sbb
cmp
or
cmpsb
in
hlt
inc
ret
js
sbb
rcr
pop
cmpsl
or
push
iret
mov
mov
dec
lcall
shrl
shrb
out
repnz
jle
outsb
xchg
jnp
xchg
push
mov
jmp
cld
enter
and
lea
cwtl
aad
hlt
jp
jmp
and
imul
test
mov
icebp
movsl
sub
aad
pusha
inc
shl
fisubrs
jno
testb
fiaddl
and
nop
jecxz
xchg
in
out
sub
out
fs
push
sar
xlat
cmp
mov
xchg
stc
add
cmpb
shlb
jne
or
mov
mov
mov
push
inc
sub
out
lret
int3
outsb
imul
and
mov
jg
dec
stos
loopew
pop
addr16
outsb
imul
test
and
loop
js
outsb
push
lret
jecxz
cmpsl
push
nop
xchg
lahf
dec
push
int3
xchg
mov
mov
rcll
xchg
addl
stc
or
stc
sbb
and
movsl
mov
push
cwtl
add
sbb
addr16
subl
add
push
cmp
daa
shll
fld
movsl
aaa
les
mov
sbb
jnp
sti
dec
enterw
movsl
insb
iret
icebp
or
and
jmp
pop
xchg
scas
leave
mov
sbb
loopw
ret
in
or
and
add
jbe
enter
std
pop
pop
adc
bound
jecxz
push
mov
cmp
add
testb
lret
xchg
addr16
testl
mov
js
scas
dec
add
ret
mov
imul
mov
cwtl
pop
adcb
mov
xor
cmp
jp
push
imul
loop
mov
test
adc
push
sti
mov
sbbl
mov
repnz
mov
sbb
jg
orl
sbb
sbb
rolb
gs
mov
jg
pop
add
xorl
push
jl
cwtl
mov
push
xor
in
adc
repnz
xchg
popf
mov
es
fsubrl
aam
ljmp
mov
jl
test
lcall
mov
scas
cmp
stos
dec
ljmp
outsb
subb
pop
dec
out
adc
mov
mov
insb
cld
jnp
ljmp
mov
aas
xchg
mov
nop
js
pop
cld
pop
lods
sub
aam
rolb
ljmp
inc
test
and
fsubs
test
cmpb
cmp
das
int
mov
cmpsl
dec
push
push
inc
pop
mov
and
out
add
repz
into
mov
idivl
sti
mov
fiadds
adc
jl
push
into
addr16
sbb
sub
xchg
xchg
sbb
into
lock
mov
repnz
aaa
addr16
xor
inc
or
sar
movsl
cld
mul
mov
ret
shll
inc
lcall
sub
add
add
movsl
mov
xor
loop
push
rorl
das
lcall
arpl
mov
jo
mov
test
mov
cmp
pop
and
jp
mov
jae
lods
popa
jns
addr16
in
stos
pop
or
repnz
jb
inc
rcrb
loope
inc
cltd
leave
addr16
xchg
cmpsl
mov
repnz
lods
ret
sub
add
dec
stos
and
pop
xchg
push
out
addr16
mov
or
test
pop
es
sbb
cmp
loope
dec
outsb
cs
xchg
mov
add
ja
in
mov
jg
inc
or
shlb
lods
mov
sbb
icebp
lahf
xchg
test
ret
int
dec
js
aaa
push
add
out
ret
addr16
inc
mov
xor
fs
sbb
les
les
daa
adc
loopne
fsubrs
add
push
repz
cld
into
into
sbb
icebp
cli
mov
les
pusha
addr16
bswap
cmpsl
scas
mov
imul
out
and
ds
iret
mov
mov
js
jmp
leave
addps
fs
cli
in
in
fnstenv
and
nop
mov
aad
xor
out
mov
adc
aad
mov
cmp
mov
and
add
lea
jmp
lret
lds
leave
xor
std
adc
adc
cmp
pop
sbb
outsl
into
sahf
jl
scas
pushf
or
inc
ret
lret
cmp
or
add
test
js
xchg
sub
fildll
and
ljmp
adc
xor
add
add
xchg
pop
repz
test
iret
ds
sbb
push
push
fimull
cmp
pop
mov
xchg
xchg
insb
aad
je
rorb
inc
mov
mov
mov
mov
repnz
xchg
mov
int3
pop
movsl
dec
cmp
xchg
sub
jne
pop
dec
rcl
xlat
jns
imul
mov
in
push
mov
ja
xchg
rclb
into
or
xchg
push
xchg
xor
aam
or
lds
es
lea
sbb
loope
push
test
int3
jnp
or
pop
loop
test
mov
and
aam
icebp
test
xor
orb
test
xchg
shl
push
push
mov
sub
addl
leave
scas
cmp
xchg
lahf
stos
or
cmpsl
imul
jge
cmpsb
or
shlb
lret
imul
mov
adc
les
jp
adc
pop
test
mov
mov
sub
xor
lods
std
mov
scas
mov
cmc
fcomip
mov
test
mov
ss
mov
fstpt
icebp
cmpsb
addl
repz
cmp
cltd
shr
cmpsl
repz
dec
stos
lcall
jno
cltd
or
xchg
push
mov
or
subl
outsb
stc
jg
std
iret
add
call
nop
subb
les
decl
test
stos
mov
inc
jp
pop
pop
mov
sbb
repz
dec
dec
fdiv
push
movsb
or
cld
leave
and
ss
aam
int
imul
jae
mov
filds
aas
filds
imul
addr16
mov
pop
adc
fadd
aaa
add
sbb
lods
and
mov
xchg
stc
push
or
cmc
repz
hlt
cmpsb
imul
xchg
decb
jg
inc
insl
mov
inc
adc
pop
fdivp
aad
jbe
cmp
loop
cmpsb
push
stos
fwait
cwtl
stos
push
push
data16
dec
js
inc
aam
mov
nop
subb
dec
xor
dec
mov
dec
jb
cli
mov
fisubl
mov
sbb
shrd
lahf
stc
data16
push
test
xchg
cmpsl
arpl
shrl
cmp
enter
mov
repnz
shlb
pusha
push
nop
jle
popf
imul
add
fst
loopne
or
mov
dec
jno
inc
lds
in
vpsubd
add
cmpsl
out
jl
xchg
fsubl
mov
pop
icebp
fldcw
or
xlat
sahf
leave
push
mov
pusha
sahf
orb
jmp
cmpsb
xor
mov
xrelease
outsb
add
pop
mov
inc
mulb
psubd
test
mov
xor
out
push
cld
mov
sbb
mov
pop
ja
push
mov
inc
xchg
test
pop
scas
inc
xchg
cmp
sti
imul
ja
mov
mov
xor
pop
out
icebp
pop
scas
sti
xchg
out
jg
push
inc
sub
je
or
scas
roll
jp
imull
mov
lea
test
lret
xchg
push
dec
outsl
xor
std
and
inc
mov
adc
in
iret
test
or
enter
jle
push
push
push
mov
push
pop
imul
xchg
cmp
mov
jmp
std
adc
mov
xor
shr
push
int
in
je
jns
xor
pusha
icebp
and
in
lahf
jb
movsb
int
adc
mov
sub
sbb
jns
movsb
mov
sub
push
loope
pusha
xchg
mov
push
xchg
test
mov
xchg
pusha
and
jo
scas
pusha
fs
scas
daa
adc
xchg
mov
mov
mov
loop
xchg
outsl
sub
andb
or
xlat
mov
incl
mov
call
in
jge
jle
dec
xlat
std
loop
jp
inc
fists
xchg
xlat
push
ja
jno
mov
pop
push
cmpsb
je
loopne
into
movsb
out
andb
lods
loope
out
add
loop
xchg
fsubrl
sub
data16
mov
lahf
imul
testl
ljmp
std
bound
addr16
xchg
pop
pop
sub
scas
push
in
xchg
subb
stc
jge
out
in
je
cmpsl
ja
mov
xchg
jb
xor
xor
movsb
jmp
xor
dec
xchg
mov
pop
call
inc
xlat
icebp
outsb
or
lret
nop
add
cmp
cmpsl
loop
xchg
mov
pop
add
xlat
xor
ja
adc
std
ret
fstl
in
int
fs
movsl
push
outsl
xchg
outsb
mov
cmpsl
jg
mov
pop
push
sahf
ret
fildl
xor
arpl
adc
mov
gs
dec
mov
or
movsb
mov
xchg
adcb
rorb
jo
adc
ret
loop
mov
jo
jo
pop
shll
aad
xchg
add
data16
fmull
pop
mov
ds
bound
adc
ret
add
sub
adc
out
rcrl
test
mov
mov
sar
movb
sahf
inc
into
jbe
mov
dec
add
ds
fisubrl
loopne
push
xchg
loop
add
out
movsl
pop
out
in
into
xor
jle
addl
lret
int3
movsb
pop
cmpb
in
push
add
xchg
out
jns
out
scas
dec
data16
sbb
dec
jp
or
sbbb
loop
jl
add
fisttpll
aam
leave
inc
sbb
repnz
cmc
in
shrb
out
adc
cmp
xor
cmp
mov
and
std
daa
xor
negl
mov
sub
outsb
pop
mov
dec
push
test
sahf
loopne
ficomps
and
jns
adc
std
inc
adc
jmp
adc
jg
imul
inc
mov
and
jnp
daa
xlat
mov
fst
inc
les
lea
or
xchg
cwtl
cmp
add
sub
popf
loop
mov
dec
stos
mov
add
cmc
in
ret
jb
xor
adc
enter
dec
aam
repnz
adc
mull
sti
insb
faddl
pop
mov
icebp
cmp
adc
lods
or
icebp
fildl
inc
fistl
test
pop
fdivs
mov
jp
leave
add
inc
fistpl
or
fbstp
into
data16
scas
mov
lret
enter
and
xchg
or
mov
push
lahf
fisttps
inc
push
movaps
mov
mov
inc
adc
inc
iret
mov
out
and
adc
xlat
and
je
sbb
enter
or
out
sti
outsb
xor
dec
mov
mov
xchg
setns
pop
mov
xchg
jo
negl
push
xor
adc
rcr
xor
mov
jo
sti
mov
daa
pop
fistl
pop
xor
enter
and
mov
xlat
insw
inc
fsubrs
movsb
push
movsb
mov
sub
loop
sbb
out
push
aad
ss
add
iret
mov
pop
pop
adc
mov
jae
mov
call
or
dec
ret
push
ror
pop
xor
dec
sub
out
or
push
xchg
push
aad
and
rolb
iret
rcll
repz
inc
outsl
xchg
cmc
mov
sbb
xor
sub
mov
pop
sti
inc
test
mov
stos
aad
lret
mov
push
inc
icebp
jb
sub
and
stos
or
adc
add
fcmovbe
adc
jp
mov
xchg
and
xchg
iret
jle
out
mov
or
andb
fcoms
lods
gs
sbb
incl
lcall
in
mov
ret
jae
jae
rcrl
in
add
fnstcw
push
mov
xchg
cs
push
orb
icebp
leave
pop
xor
repnz
test
int
int
cmpsb
jg
std
repz
mov
adc
mov
add
arpl
int3
add
sarl
cmp
add
rcr
in
sub
and
add
jnp
cmpsb
jle
jge
test
sti
imul
mov
clc
add
rolb
int3
fistps
in
idivl
mov
lcall
cmp
mov
fsubr
pop
add
xor
bound
xor
sub
jle
outsb
rcrl
popl
push
mov
mov
cmp
add
cmp
jge
leave
lods
mov
data16
dec
fiadds
lea
or
cmc
fldcw
sub
pushf
sub
je
jp
insl
sbb
or
sbb
dec
mov
sti
fsub
inc
dec
sub
mov
cmp
stos
jecxz
movsb
and
cmp
rolb
dec
popf
adc
popl
fdivrl
mov
cwtl
xor
jne
imul
stos
cmc
sub
bound
jbe
jp
mov
loopne
mov
stos
fstpl
adc
stos
stc
lds
js
shlb
dec
sahf
mov
push
imul
push
fs
cli
mov
imul
cmp
mov
scas
nop
mov
mov
sub
sarb
fstpl
movsl
lcall
mov
push
pop
roll
icebp
jp
jbe
cli
stc
scas
adc
pop
adc
out
test
add
dec
outsb
out
dec
loope
xchg
mov
nop
mov
add
inc
xor
dec
sub
lds
sub
repz
pushf
mov
push
sti
cmp
shl
pop
jmp
mov
mov
lea
pop
xchg
ficoms
dec
enter
xchg
faddl
les
insb
ss
push
andb
sbb
inc
enter
imul
loopne
int3
or
mov
dec
loopne
sti
ja
dec
mov
sub
into
fdivs
nop
dec
jg
xchg
call
lods
cli
stos
iret
push
inc
dec
rcll
cmp
cmp
nop
lds
or
pop
aad
jbe
add
cmpsb
lcall
cs
outsl
push
inc
mov
adc
call
add
fdivr
pusha
ljmp
orb
cmpb
sarb
xchg
adc
popa
cmpl
cltd
test
xchg
jbe
and
imul
jae
scas
dec
in
xchg
pop
cwtl
sub
jg
outsb
xchg
xchg
cld
repnz
sbb
ljmp
and
gs
lods
fimull
mov
cmc
rdmsr
ret
outsb
lcall
fstpt
sbb
lods
cs
std
fisubl
fnsave
in
jnp
pop
mov
lahf
xchg
mov
xor
push
imul
mov
mov
into
push
mov
fcompl
cmpsl
cmp
push
mov
sbb
push
mov
jg
scas
addb
aaa
xor
sbb
jb
lods
icebp
mov
and
or
mov
test
mov
stos
jbe
xchg
repz
pop
jbe
sub
mov
xchg
push
xchg
ret
add
aas
or
jp
pop
sarb
rol
shr
or
mov
fmuls
cmpsl
lret
cli
lock
mov
or
mov
aad
bound
cmpsb
pop
repnz
lcall
iret
mov
imul
jmp
add
data16
and
bound
or
movsb
mov
dec
mov
nop
out
stc
mov
pusha
inc
add
stc
aas
push
push
lock
std
mov
xor
sub
push
sub
into
cltd
imul
movsb
add
loopne
or
aad
adc
enter
shll
cmp
sti
sahf
adc
call
inc
cmpsb
or
mov
mov
mov
pop
aas
stos
es
pushf
adc
cmp
pop
push
mov
mov
jbe
and
jle
outsb
cli
sbb
add
pop
mov
or
inc
cli
xor
stos
adc
out
repnz
inc
or
adc
mov
loop
addb
out
adc
or
mov
js
adc
xchg
fdivr
push
sbb
and
jbe
sbb
div
mov
and
pop
xor
aam
and
nop
into
mov
xchg
xchg
outsl
std
mov
or
push
inc
cli
decb
mov
dec
dec
testb
ret
cmp
lahf
sbbb
push
add
test
mov
pop
ret
cmp
out
add
inc
inc
push
mov
xor
test
mov
inc
mov
mov
mov
shl
stc
sahf
loopne
notl
ja
int
mov
ret
js
xlat
test
add
sahf
mov
pop
adc
pop
cmp
or
xor
ret
mov
xchg
fsubrs
cmpb
pop
inc
xchg
repnz
jmp
xor
cmp
mov
loop
mov
xlat
aam
mov
mov
lahf
mov
shrd
add
roll
jnp
scas
rclb
cmp
out
sahf
adc
add
lds
mov
aad
ficomps
fs
xor
cmc
ret
push
out
or
mov
or
ljmp
cmp
dec
and
jle
lcall
loop
pop
cmp
js
nop
xchg
into
sarl
aam
cmp
js,pt
fnsave
dec
cmp
lahf
scas
test
repnz
cmp
sbb
pop
int
cmp
pop
add
or
int3
xchg
std
mov
cld
imul
xchg
cmp
ret
xchg
subl
aad
mov
insb
xor
push
xchg
or
push
pop
ljmp
sub
pop
int3
sbb
dec
mov
mov
xchg
dec
adc
sub
inc
lcall
inc
int
inc
andb
jmp
call
sahf
iret
shll
xorb
addr16
cmpsl
mov
js
lahf
push
jo
mov
data16
pop
xlat
loopne
lret
mov
inc
icebp
data16
push
push
das
imul
aad
std
iret
xchg
movsl
icebp
aas
cmpb
aaa
mov
je
insb
mov
ret
push
aaa
sub
data16
xor
nop
repnz
xchg
nop
sub
jg
or
pop
std
cmp
shrb
push
mov
add
cs
shrb
and
shrb
pop
mov
or
lcall
push
pop
xchg
jp
out
sahf
dec
leave
xchg
mov
popa
mov
cld
sti
leave
xchg
pop
jmp
mov
stos
leave
pop
repnz
push
mov
inc
mov
dec
add
jl
mov
int3
lcall
sub
lret
jl
bnd
mov
dec
sub
sbb
subb
inc
xchg
dec
xorb
faddl
ljmp
mov
cmp
cmc
lods
inc
inc
ret
ja
dec
sar
adc
jne
jnp
nop
inc
test
xchg
or
push
test
leave
lea
mov
xchg
jo
adc
loope
lods
mov
pop
bound
or
inc
mov
mov
push
jle
add
fdivs
enter
adc
pusha
cmc
icebp
cmp
add
hlt
imul
dec
pop
pop
ret
push
imul
test
je
or
mov
and
xlat
into
dec
jl
mov
and
js
cs
lret
mov
cmp
into
call
xor
fisubl
xor
int
fcmovnb
inc
popa
call
add
fwait
repnz
and
int3
mov
and
push
mov
faddl
adc
imul
push
insb
mov
jp
jnp
add
dec
mov
sub
push
fsubrs
scas
mov
nop
adc
or
jne
test
leave
loopne
into
ja
fcoml
stos
addr16
jmp
dec
or
push
adc
jp,pt
ret
rorb
cmp
adc
mov
and
and
fimuls
pop
mov
cmp
jb
fisubs
test
andl
dec
arpl
jb
std
jb
test
push
mov
push
int
aas
aad
subl
addl
gs
test
sub
lcall
int
sahf
scas
bound
stos
sub
test
retw
push
scas
mov
mov
fimuls
aam
ljmp
or
xor
pop
fisubl
fs
xor
hlt
repnz
xor
mov
int3
ljmp
into
cmp
mov
imul
testb
push
cmp
das
call
inc
in
pop
sahf
xchg
lods
jl
std
inc
stos
or
inc
outsb
or
and
inc
and
fdivrp
jmp
xchg
and
jmp
jne
js,pn
jno
sub
push
test
adc
ja
into
aad
rorl
fstps
adc
lods
imul
push
mov
push
insb
sub
and
push
sahf
js
testl
push
push
push
sbbl
jne
push
cmpsb
add
call
inc
or
jbe
adc
call
or
ss
push
or
mov
rclb
push
loopne
ret
xor
xchg
jg
mov
out
xchg
ret
lea
inc
pop
mov
add
adc
mulb
push
pop
sbb
sbbl
imul
mov
es
imul
movl
aas
loopne
jnp
out
mov
xchg
jnp
rolb
xor
jno
mov
in
test
adc
jns
cltd
mov
jbe
mov
adc
repnz
rol
out
xchg
cmp
cs
push
stos
xchg
jg
push
test
add
lea
mov
sti
ss
inc
das
xchg
inc
test
je
movsl
fadd
xlat
add
cmp
sbb
repz
sbb
repz
nop
popa
xor
jge
mov
les
xchg
in
aam
mov
into
pop
stos
ret
leave
mov
popf
xchg
rol
pop
scas
lods
ss
adc
mov
movsl
mov
add
add
fs
testb
loop
data16
add
lret
pushf
cli
mov
dec
pop
mov
ss
mov
repz
jbe
aad
imul
xchg
andl
xchg
test
add
pop
dec
jecxz
or
push
jbe
lds
sub
lods
test
ljmp
lods
pop
mov
ret
and
xchg
fcomp
dec
out
rclb
dec
enter
jnp
push
sub
pop
jle
cmpsl
or
sbb
cmpsl
enter
aas
iret
jge
lcall
lock
dec
loopne
xchg
add
adcb
pop
mov
movb
mov
fwait
or
sbb
jl
test
pop
mov
or
cmp
nop
shll
push
pop
rorb
clc
xchg
xchg
mov
aas
insl
fs
hlt
ja
repnz
lea
dec
lods
xor
cmpsb
mov
aas
out
cmpsl
sub
cs
mov
cmp
cmp
xchg
dec
mov
outsb
inc
ds
cwtl
repz
sub
into
add
xlat
mov
and
stos
push
pop
push
hlt
imul
dec
loopne
lock
aaa
fs
jb
daa
adc
orl
or
xor
inc
adc
fistps
pop
lds
iret
and
incl
mov
xchg
adc
add
inc
nop
sub
jae
cmpsb
push
xorl
stos
sbbb
add
mov
xchg
push
mov
rorl
stos
in
andl
xchg
xor
mov
loope
adc
repnz
jmp
imul
xchg
dec
mov
xchg
repz
fisubl
add
inc
loopne
subb
push
mov
int3
cwtl
idiv
lods
and
imul
mov
cmpl
dec
jns
ja
subb
sub
pop
and
addr16
mov
subb
mov
pop
jge
adc
dec
sub
enter
fistpl
inc
mov
cltd
roll
aad
outsl
loopne
js
std
and
mov
andl
or
mov
add
cmp
loopne
pop
and
pop
jl
and
adc
cmp
mov
mov
jns
add
pusha
outsl
gs
or
xchg
inc
daa
xchg
sbbb
add
pop
mov
xchg
les
mov
sbbl
mov
add
popf
mov
add
and
fs
lcall
mov
addr16
push
cmpsl
xchg
xor
xchg
inc
nop
and
xchg
adc
mov
jecxz
test
addr16
and
test
lahf
aaa
sub
mov
enter
loop
mov
cwtl
mov
scas
fcmovbe
sub
mov
test
aam
push
mov
sbbl
das
stos
loopne
test
inc
lcall
dec
test
mov
loopne
pop
repnz
idivb
fs
aam
mov
push
ret
adc
bound
xchg
inc
nop
mov
imul
xchg
scas
repz
sub
adc
sbb
movsl
stos
repnz
or
scas
call
popf
and
mov
insb
sti
ds
fsubs
dec
xlat
imul
or
imul
inc
adc
jecxz
pop
cwtl
mov
das
mov
repz
mov
mov
add
test
ret
cmovnp
push
cmp
cmpsl
cmp
adc
mov
jae
lea
push
or
sti
inc
or
jg
cs
data16
dec
bswap
ret
xchg
in
jp
fs
mov
in
jbe
xor
mov
push
sbb
cli
jg
fadds
lret
sbb
cmp
pause
fdivs
push
scas
and
cltd
mov
lahf
lcall
stc
cs
lahf
sbb
mov
mov
nop
bnd
adc
rcr
and
push
lods
enter
push
push
pop
es
jmp
mov
mov
lods
xchg
rcl
leave
xor
mov
push
sub
add
imulb
jb
sub
sahf
and
aad
pop
es
cmpsl
jl
push
xchg
mov
inc
adc
xchg
faddl
orl
xchg
testb
push
ss
aam
mov
cmpsl
call
mov
pop
push
es
lea
cmp
repz
leave
jns
cld
das
mov
roll
mov
mov
adc
xacquire
pop
add
aam
jbe
leave
pop
ror
pop
loopne
dec
xchg
adc
cmp
addb
pop
in
push
outsl
or
repnz
and
xchg
mov
push
sbb
mulps
inc
mov
cmc
cmp
fisubrs
inc
addr16
fnstcw
mov
js
xchg
sub
pop
push
inc
sub
incb
xchg
push
mov
fmul
sub
mov
jo
loopne
fidivrs
mov
cmc
aaa
or
push
xchg
mov
dec
jmp
push
test
jp
nop
mov
xchg
push
fwait
sbb
xchg
mov
lret
xchg
and
cmp
pop
call
aad
outsl
mov
outsl
js
push
mov
inc
sub
xchg
cltd
idivb
int3
shl
sti
ret
sub
xor
add
jne
test
sub
add
push
rcrl
decl
call
aas
js
xchg
mov
cmp
test
lret
outsb
popa
mov
mov
lock
mov
add
jbe
shrb
pop
pusha
push
dec
out
rcl
mov
mov
jecxz
mov
clc
into
xor
lret
xchg
push
imul
ficoms
aas
inc
les
rolb
mov
fldl
fsubs
pop
jae
xchg
daa
adc
jbe
mov
je
scas
loop
cmp
jge
jo
test
lcall
lahf
adc
jno
sti
repnz
int3
sahf
inc
addl
jg
sub
insl
add
mov
jmp
repz
jp
sbb
pop
push
adc
lods
xor
clc
or
push
fsubp
push
nop
push
fiadds
testl
outsb
in
lahf
jecxz
adc
pop
lds
add
pop
push
push
mov
andb
insl
rorb
push
mov
je
lds
cmp
in
xchg
clc
xchg
pop
popf
pop
sbb
xchg
fldl
push
mov
aad
movsb
enter
xor
aad
cmpsl
xchg
clc
aad
inc
ret
cli
lock
lret
dec
addl
adc
pop
inc
xorl
xchg
adc
xchg
pusha
xchg
and
jg
lret
std
sahf
lock
sbb
and
xor
test
in
mov
pop
or
addr16
outsb
xchg
adc
mov
pop
mov
mov
lods
cld
scas
push
cmpsb
push
dec
sarb
mov
test
cli
xchg
movsl
lret
call
inc
mov
cmc
jb
ror
pop
data16
bound
inc
and
sbb
icebp
dec
cmpsb
and
test
cmp
xchg
rcrb
nop
mov
stos
scas
dec
aas
call
xchg
add
mov
fdivrl
pop
outsl
pop
in
scas
insl
outsw
fnsave
pop
mov
mov
fimull
pop
xchg
repz
es
pop
cmp
cmpsb
testb
test
cwtl
loopne
push
or
enter
test
pusha
into
inc
lock
insb
test
in
cld
fnstcw
imul
ret
ss
ljmp
jp
das
je
icebp
gs
mov
cltd
push
pop
add
mov
clc
add
jae
ds
xchg
das
add
dec
pop
or
add
out
and
cmp
test
add
jge
inc
ja
movsl
or
scas
imul
xchg
mov
mov
inc
xchg
dec
popf
cmpsb
out
and
pop
popf
into
ret
mov
cs
out
inc
pop
jnp
das
mov
jg
cmpb
inc
nop
fdivrl
int3
push
fmul
cmp
jp
push
pop
sbb
and
lret
pop
out
jmp
pop
ljmp
clc
jg
shl
loopne
mov
andl
sub
xchg
pop
ja
xor
mov
cs
mov
sti
pop
mov
ljmp
jp
shrl
mov
dec
xchg
leave
jp
inc
icebp
mul
imul
fstpl
ljmp
xchg
xor
ja
dec
dec
mov
lcall
jb
fildl
imul
jl
jbe
data16
call
lds
adc
adc
shll
jge
lret
mov
adc
movsl
add
rol
mov
cmp
sti
mov
lea
nop
mov
lret
js
pop
fistl
ret
dec
sub
out
data16
adc
push
int3
mov
jp
pop
xchg
add
mov
cmp
xor
aas
cli
and
movsl
sbb
mov
push
xor
lds
test
pop
xchg
cs
sbb
mov
cltd
mov
lods
ja
fmuls
int3
add
test
and
inc
jg
leave
movsl
imul
jge
out
mov
mov
data16
mov
leave
js,pt
ss
in
mov
mov
push
inc
add
pop
ficoml
lahf
pop
leave
dec
push
stos
repnz
dec
dec
xchg
imul
rcrb
and
pop
ret
cwtl
cmp
push
push
adc
xchg
sub
movsl
push
les
negb
xchg
out
jb
arpl
pop
lods
inc
imul
jp
inc
add
or
test
fs
jae
nop
mov
stos
xor
jb
mov
insl
into
int
std
enter
loope
addl
in
stos
orb
cmp
mov
rolb
mov
inc
lret
pop
insb
adc
adc
hlt
popa
dec
ss
faddl
push
pop
iret
push
inc
lods
cmp
lods
mov
xor
orl
lods
adc
scas
fistl
mov
fdiv
sahf
lret
or
or
movsl
aas
xchg
stos
xchg
mov
adc
les
data16
cwtl
dec
jmp
inc
iret
aad
jge
repz
nop
repnz
pop
push
ret
fisubrs
and
cmp
or
mov
rorb
aad
call
aaa
frstor
cmp
mov
mov
mov
mov
test
fiadds
pop
xor
scas
out
xchg
in
rorb
mov
into
loop
jg
test
jo
cmc
mov
shll
rcll
cmp
jecxz
mov
imul
cld
arpl
cmp
bound
es
inc
xor
push
and
mov
scas
stos
lods
sub
push
mov
sbb
fisttpl
nop
fildll
jns
sbb
rol
cld
jge
add
jge
jns
jmp
ds
xchg
xchg
fisubs
or
pop
or
cs
lcall
dec
andl
xorl
mov
nop
mov
mov
jmpw
and
cmp
push
and
loopne
xchg
addb
jbe
mov
jmp
cwtl
jg
inc
insb
dec
add
nop
rcll
jo
and
stos
repz
cmp
mov
dec
dec
dec
push
add
andb
pop
sbb
lahf
pop
adc
imul
or
aas
test
sti
jbe
mov
mov
mov
pop
scas
jae
lahf
and
test
cmp
cltd
int
test
cwtl
jg
nopl
xchg
jge
mov
pop
idiv
inc
lea
repz
insl
push
xchg
int
stc
push
pop
icebp
scas
adc
push
andb
jbe
aas
add
xchg
jecxz
xor
mov
jne
jb
mov
out
and
or
xchg
sbb
cmc
mov
pop
nop
jne
lcall
ret
imul
sahf
movb
sub
cmpsl
test
xchg
sbb
mov
js
jb
cmp
mov
sti
xor
std
fdivrs
cmpsb
repnz
ss
dec
sub
adc
xchg
lods
arpl
mov
push
mov
xchg
or
mov
push
outsl
mov
cmp
aas
mov
cmp
into
jp
dec
andl
pop
jg
push
or
jne
ret
push
aad
or
sbb
adc
add
mov
mov
fsubl
jp
push
jae
xor
xchg
jbe
aam
xchg
mov
in
leave
jge
jns
mov
or
sbbl
loope
leave
scas
push
jl
dec
and
sbb
call
fucomp
jl
outsb
push
adc
jmp
push
int3
sub
fimuls
pop
and
mov
inc
sbb
sti
mov
or
jne
add
jl
inc
add
xchg
adc
jg
roll
imul
mov
in
xchg
dec
leave
insl
pop
pop
fdivs
adc
leave
xor
into
or
jns
mov
and
pusha
sbb
shrb
dec
fcmovb
cmc
lock
push
adc
in
adc
scas
xchg
hlt
dec
cmp
into
fstps
das
push
gs
push
outsl
repnz
lods
cltd
jns
out
into
test
add
xchg
rorb
aad
sbb
push
xlat
ljmp
leave
adc
sahf
xchg
adc
push
add
add
fildl
adcl
in
xchg
lcall
xchg
call
push
pop
ret
cld
jge
sahf
cmp
and
add
ror
repz
stc
repnz
dec
xlat
sbb
mov
leave
cmp
sbb
movsb
into
mov
iret
inc
adc
fcmovbe
push
inc
or
mov
mov
push
xchg
pop
ret
lret
loop
xchg
in
push
lcall
sbb
hlt
stos
cmp
dec
mov
cltd
xorl
stos
mov
mov
rcrl
mov
enter
cld
jae
jb
iret
xchg
addr16
push
mov
mov
cmpsb
cmp
test
sbb
sub
pop
sbb
in
dec
ja
sub
nop
jp
jnp
andl
popf
cmp
jp
fwait
xor
push
push
xchg
or
mov
fisubs
popf
gs
adc
pop
rcrb
outsl
es
cmp
inc
pop
mov
lret
adc
or
repz
sbb
cmp
xor
cmp
hlt
aam
pop
daa
in
mov
lret
sbb
mov
gs
mov
xchg
pop
pop
outsb
fwait
pop
int
push
int3
mov
and
test
or
mov
sbb
mov
push
jno
sub
pop
jecxz
xchg
dec
fdivrl
pop
xchg
add
bound
sbb
pop
and
movsb
cld
fidivs
xchg
mov
push
mov
pop
push
ja
sbb
cmp
inc
sub
sbbl
mov
push
cmpsb
fs
xchg
mov
rclb
ret
mov
iret
push
xchg
xchg
pop
daa
lcall
mov
mov
cmp
mov
mov
loop
sbb
arpl
lods
and
mov
ret
mov
mov
and
sbb
xchg
das
addl
pop
mov
mov
shll
mov
out
je
shlb
or
push
outsb
push
inc
into
mov
subl
inc
shrb
inc
cmc
daa
push
push
shlb
sub
aad
inc
add
shrb
inc
aam
mov
xchg
adc
inc
in
fimull
enter
xor
cmpsl
aad
inc
in
lahf
test
ret
mov
bound
dec
or
inc
inc
inc
insb
mov
inc
negl
mov
and
ss
xor
bound
cmpsb
dec
into
adc
scas
xor
fiaddl
inc
push
mov
adc
inc
hlt
loopne
ljmp
mov
dec
inc
push
cmp
dec
inc
addr16
inc
push
dec
fistps
push
bound
jo
and
cmovge
push
adc
inc
sti
push
cld
gs
mov
lahf
adc
xchg
subb
nop
mov
sub
and
stos
lcall
iret
ds
fildll
insl
mov
fs
pop
ret
fimull
push
sub
inc
cmp
popf
outsb
and
incl
loop
and
or
lcall
sahf
push
sbb
xchg
pop
mov
xor
mov
ret
int3
xchg
mov
inc
inc
and
mov
les
in
adc
pop
data16
jbe
addl
mov
loopne
in
xchg
xlat
repnz
std
push
cmpsb
aas
test
fimull
cmp
mov
cmpsb
out
xor
ss
sahf
ljmp
jmp
iret
out
mov
pop
xor
scas
mov
pop
and
xchg
dec
lods
int3
push
adc
out
inc
dec
fdivl
fadds
pcmpeqd
adc
lahf
and
or
hlt
shrb
decl
std
lahf
add
idivl
fisttps
push
ja
inc
xchg
mov
push
xor
dec
es
scas
les
mov
pop
jae
jo
jns
out
dec
mov
xchg
roll
jae
shlb
movsb
lods
loopne
mov
stos
loope
add
push
xchg
mov
jl
dec
mov
push
rol
mov
mov
scas
into
dec
je
scas
xchg
adc
cmovbe
push
jle
nop
scas
aam
pop
xchg
push
xorw
xchg
xor
movsl
xor
jle
loop
mov
pop
imul
int3
mov
mov
or
dec
mov
mov
lahf
mov
xchg
icebp
mov
fmuls
repnz
in
xchg
xchg
ret
call
addb
xchg
sbb
lea
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
adc
ret
push
enter
lods
imul
add
rcrl
jl
inc
push
and
rorl
mov
pusha
movsl
pop
mov
int3
xchg
pop
data16
je
test
xchg
dec
sti
push
or
stc
mov
sahf
ds
inc
fstl
pop
sub
rclb
adc
mov
mov
mov
mov
add
adc
mov
ret
testb
testb
and
inc
cld
or
js
jb
dec
dec
xor
pop
add
rcrb
and
scas
inc
flds
mov
in
inc
pusha
xchg
out
xchg
js
ss
cmpsb
iret
test
xchg
mov
aad
fiadds
aam
adc
add
pop
subb
out
jnp
inc
loop
push
and
mov
repz
add
ficomps
divb
scas
xor
inc
aad
and
cmp
rcrb
jnp
sbb
add
cmp
icebp
shr
pop
lcall
pop
adc
subb
push
mov
xchg
out
pop
jnp
fs
and
enter
fstl
adc
xchg
divb
or
test
mov
cmc
or
cmp
sbb
xor
ds
or
stc
ljmp
push
inc
mov
sti
pop
adc
dec
movsb
fildll
push
inc
pop
cmp
xchg
xchg
adcb
pop
into
dec
sub
lds
push
push
gs
mov
lock
imul
cmc
push
addb
fcoml
sub
xchg
mov
lock
mov
cmpl
adc
or
jbe
movsl
push
popl
sbb
sub
and
cmp
adc
divb
fdivr
mov
jmp
scas
jecxz
add
xor
mov
lahf
bound
sbb
data16
or
pop
fnsave
and
mov
cmp
cmp
pusha
add
mov
xlat
orl
xchg
or
jecxz
or
fisubrs
into
subb
lods
fsubrp
je
pop
scas
aaa
enter
inc
mov
mov
mov
ja
in
in
movsl
inc
push
out
jbe
scas
mov
outsb
imul
mov
xchg
subb
xchg
pop
fcoml
xchg
add
inc
mov
fnstcw
jle
or
mov
idivb
jno
adcb
and
cmp
test
jno
inc
push
rcrb
addb
cmpsb
leave
lahf
imul
movsb
imul
mov
lcall
lret
stos
bound
lods
jp
inc
in
add
fsubrs
jl
jl
mov
sub
pop
shll
sub
mov
repnz
in
lret
xchg
xchg
sub
add
and
xchg
arpl
mov
mov
pushf
mov
mov
lahf
mov
hlt
sarl
inc
popf
dec
add
scas
aas
push
cld
and
mov
cwtl
loop
xor
lret
insb
loop
sub
lock
and
sub
cmpsb
cmp
cmp
xor
out
add
imul
hlt
pop
lods
cmp
bound
faddl
or
pop
xchg
test
out
fdivp
andl
aaa
pop
movsb
int
mov
fwait
pop
pop
mov
orb
call
add
mov
inc
cmp
mov
scas
das
or
ret
mov
aad
andb
cld
lret
push
int3
loop
popa
and
jecxz
mov
js
xor
or
fldenv
pop
push
cmpsl
cmp
or
fdivs
clc
dec
cs
stos
aad
mov
outsb
rep
jl
xchg
push
pop
lds
cmp
cmc
lea
fsubs
adc
lods
mov
mov
inc
mov
mov
aam
sub
outsb
addl
pop
imul
sub
add
xorl
mov
or
cmpsb
mov
data16
loop
stos
lods
xor
and
and
rol
cltd
mov
pause
cmp
xchg
dec
inc
loop
add
mov
rcll
outsl
hlt
leave
jl
sub
testb
dec
or
adcl
out
adc
mov
loop
lret
cmpsb
mov
and
mov
fldenv
cld
cmpsb
jo
push
std
inc
xchg
lods
mov
lcall
mov
mov
push
or
imul
int
or
sub
cmp
scas
sub
mov
xchg
sub
cwtl
mov
jp
dec
sti
movsl
test
and
xor
insb
cmp
pop
shrb
fwait
cld
orb
jae
cmp
lret
cltd
dec
mov
mov
xchg
je
shl
adc
adc
repz
adc
add
jp
and
dec
icebp
shlb
jo
imul
ss
sahf
mov
out
int3
mov
sub
mov
ja
outsb
lahf
leave
xchg
or
pop
jg
pop
jns
mov
incl
rorb
sahf
fdivl
rcrl
pop
lcall
mov
fcomip
mov
mov
addr16
xchg
sub
hlt
inc
xchg
mov
inc
int3
xchg
cmp
pop
rcrb
xchg
lahf
cmc
movsb
stos
pop
pop
cli
shlb
add
hlt
lcall
dec
and
ficoml
ret
into
dec
push
mov
xchg
xor
mov
xor
out
scas
imul
imul
imul
xchg
push
rolb
xchg
imul
xabort
jl
mov
jno
mov
sub
test
lock
jg
push
shrl
outsb
xchg
ret
cltd
rclb
test
cmc
out
push
jg
cwtl
mov
cmc
mov
xchg
add
nop
lcall
lahf
ret
xchg
cld
xchg
dec
ss
testb
inc
dec
nop
ds
rclb
cmp
in
mov
out
mov
xorl
nop
jne
or
sub
arpl
into
or
leave
mov
popa
pop
mov
mov
cmpsl
shll
adc
andl
xchg
cmpsb
mov
call
mov
repnz
jge
icebp
cli
repz
xchg
mov
jnp
mov
jp
fs
sub
rcll
mov
ljmp
ds
mov
mov
icebp
mov
scas
lods
int3
push
sub
xchg
mov
mov
sti
repnz
cmp
mov
ss
ja
imul
inc
and
aam
sbb
and
lods
xchg
repz
mov
stos
mov
mov
aad
call
xchg
push
jns
stos
push
aas
pop
push
cs
sub
aad
imul
xchg
incl
push
inc
jae
push
cmp
push
outsl
xchg
cs
addb
movsl
sbb
push
xchg
add
lcall
cld
cmpsb
scas
mov
push
sbb
popa
jbe
lds
mov
sti
clc
jo
add
xchg
jne
fcompl
imul
push
cmp
mov
pop
xlat
pop
in
into
test
je
loop
xchg
aad
push
mov
pop
enter
mov
aas
pop
ret
loope
sub
pop
mulb
outsb
adc
mov
or
xchg
add
je
sbb
leave
stos
xchg
dec
scas
pusha
inc
fwait
pop
stc
out
inc
push
add
aad
adc
cmpsb
push
nop
push
adc
dec
xchg
mov
jb
push
leave
or
mov
lea
fwait
mov
push
or
fldenv
stc
jo
pushf
add
sub
xor
push
insb
rolb
es
ljmp
mov
mov
lock
frstor
mov
mov
loop
xchg
mov
add
out
mov
or
subl
mov
xchg
addb
xchg
pushf
leave
ss
test
mov
xor
stc
mov
aas
push
or
fdivs
jo
adc
adc
addr16
mov
or
inc
cli
testb
inc
adc
repnz
hlt
mov
sub
subl
ret
xor
repnz
cmp
popf
inc
and
and
or
mov
xchg
lahf
mov
cli
mov
rorl
or
test
cwtl
addr16
stos
rcrb
jle
negl
cwtl
ret
adc
add
jp
addr16
mov
lods
scas
call
test
popa
mov
mov
scas
mov
dec
or
adc
sbb
imul
in
shl
mov
js
sbb
in
aaa
lcall
xchg
mov
pop
lret
call
sbb
sub
sbb
popw
in
push
nop
pop
jg
addl
int3
lret
mov
inc
sub
ret
pushl
jl
inc
sbb
shlb
in
mov
inc
or
orb
mov
aam
push
stos
test
push
inc
inc
add
and
sahf
jl
jb
or
lods
jnp
rcl
sti
das
mov
in
cli
pusha
xor
daa
push
add
es
or
pop
rcl
scas
inc
inc
pop
push
and
mov
push
popf
mov
lock
out
jae
jmp
xchg
xchg
icebp
je
sahf
pop
mov
rcrl
leave
loop
xchg
pushf
fnsave
push
inc
mov
jp
and
cmpsb
or
into
in
inc
inc
jae
lahf
xchg
out
fnstenv
scas
xchg
mov
jnp
pop
test
mov
movsb
fcmovb
push
test
shrb
cld
mov
mov
loope
inc
push
inc
aaa
mov
mov
mov
cltd
data16
testb
leave
or
mov
dec
dec
mov
daa
dec
inc
ja
and
and
and
push
pop
aam
mov
xor
cmp
sbbb
jb
test
test
into
mov
mov
int3
mov
push
mov
dec
mov
mov
push
push
dec
lret
push
push
and
fnstenv
iret
add
mov
js
inc
fwait
push
push
out
and
add
push
inc
inc
mov
adc
inc
clc
data16
in
scas
imul
lret
push
push
fcoml
loopne
nop
pop
test
mov
or
mov
out
into
sahf
xchg
call
lret
ret
aam
mov
xchg
mov
fs
xchg
mov
dec
repz
call
dec
or
test
shll
subb
popf
sahf
mov
mov
xchg
repnz
lods
mov
jmp
push
mov
movb
imul
add
imul
out
sahf
ljmp
cli
add
mov
rclb
sub
push
sbb
fcomps
add
call
jae
lahf
les
and
adc
sub
sub
frstor
or
xchg
ret
movsb
sub
push
adc
mov
xor
dec
pop
push
icebp
repnz
mov
shrb
sbb
rorb
or
jno
pop
mov
pop
fldt
pop
lcall
inc
aad
out
aam
xchg
rol
loop
pop
sub
lds
mov
adc
mov
mov
ljmp
inc
add
lods
in
stos
fmull
out
mov
imulb
icebp
xchg
pop
cmpsl
test
xchg
lahf
xor
mov
xchg
mov
loopne
sub
jg
inc
xor
pop
inc
cld
pop
popa
shlb
repz
fmuls
mov
leave
movsl
dec
test
icebp
dec
in
xor
ds
push
aaa
movsl
repnz
stos
cmp
daa
lret
sti
mov
adc
repnz
inc
jno
sahf
sti
sahf
hlt
test
in
pop
repz
stc
sub
and
jecxz
lcall
xor
mov
xorb
dec
stos
mov
xchg
jecxz
sbb
mov
sub
pushf
mov
mov
out
lahf
or
into
jmp
dec
repnz
std
pop
gs
xor
push
call
sbb
push
jmp
mov
cmp
rclb
push
bsf
jmp
mov
incb
jecxz
or
jbe
or
out
pushf
test
nop
inc
loopne
pop
mov
movsl
rclb
xchg
push
mov
sbb
or
ret
push
add
orl
push
and
mov
cltd
push
dec
or
fcoml
int3
into
adc
xchg
out
sbbb
lods
loop
inc
lods
ret
jge
adcb
movsl
mov
mulb
jge
loop
mov
rorl
mov
cmc
xlat
in
jns
ror
sub
cltd
out
mov
int
fldl
or
sti
or
or
pop
subb
pop
aaa
jbe
fsubs
js
jg
cld
out
add
in
and
cltd
js
push
adc
xchg
subb
add
in
nop
add
out
aam
and
stos
sti
jbe
aam
fistps
int
in
das
jmp
push
cmpsl
xor
out
stc
sti
loope
jmp
andl
mov
jp
mov
dec
lcall
jmp
shll
dec
jg
cwtl
test
popa
iret
adc
dec
inc
mov
xchg
xchg
leave
cbtw
rcr
sbb
sbb
lods
lock
std
mov
stc
nop
lock
sbb
xor
aad
lea
or
rclb
inc
fcomi
cltd
hlt
aas
jge
push
mov
xlat
jmp
xlat
mov
sbb
cmp
cmp
jns
notl
test
push
jg
divl
jne
fsqrt
aad
push
xchg
mov
pop
cmc
in
xchg
into
mov
sarl
pop
aam
push
push
pop
and
xchg
dec
jge
xor
push
nop
xchg
outsb
test
or
pop
lret
test
push
cmpsl
jae
cwtl
fmull
sahf
inc
add
add
fxch
inc
xor
cwtl
add
push
mov
lcall
test
into
std
mov
shlb
push
push
sbb
out
cmpsb
add
es
jg
mov
scas
jp
jb
pop
out
fs
xchg
mov
mov
nop
mov
cmpsl
aam
push
mov
cmp
adc
mov
mov
mov
decl
out
les
mov
ret
mov
jecxz
lea
add
jbe
call
ret
sbb
xchg
ss
aam
scas
fcompl
cli
cmpsb
iret
ret
pop
add
rclb
scas
shlb
in
cwtl
in
cmc
add
pop
scas
jmp
out
stos
xchg
or
xchg
repz
sbb
pop
push
jb
xor
mov
rorb
imul
test
es
hlt
jge
mov
popa
mov
imul
in
cmp
cli
lea
mov
xchg
mov
int3
push
out
lcall
jb
pop
jmp
inc
out
cltd
mov
les
mov
dec
shrd
lahf
mov
clc
cmc
mov
and
cld
ljmp
xchg
push
xchg
addr16
push
daa
mov
scas
xor
inc
loope
mov
out
or
xchg
or
mov
lahf
out
mov
mov
xchg
xchg
insb
out
mov
popf
scas
cmpsl
mov
mov
mov
in
repnz
imul
mov
and
mov
xchg
cmc
movsb
mov
xchg
aaa
mov
mov
mov
push
inc
xchg
mov
cmp
pop
xchg
or
iret
xchg
into
jae
fwait
addr16
xchg
or
mov
mov
repz
jnp
jmp
push
in
fistps
jae
xchg
in
push
getsec
mov
pusha
cmc
xor
rcr
jmp
pop
jnp
inc
mov
sahf
add
imul
xchg
xchg
xchg
dec
lret
or
scas
ds
stc
loop
mov
insl
and
cwtl
dec
lea
imul
sbb
fadd
mov
lcall
popl
fldl
xchg
test
mov
inc
inc
scas
and
pop
xchg
jne
popa
xcrypt-ctr
cmpsl
fwait
mov
xchg
pop
aad
add
xor
pop
inc
inc
xchg
psllw
push
xchg
dec
xchg
pop
xchg
cwtl
jno
sbb
and
fwait
xchg
insl
lods
add
jbe
add
xchg
std
xlat
sub
fdivrp
inc
mov
into
test
mov
in
xchg
loopne
cmpsb
xchg
into
inc
xchg
rclb
test
ss
ficomps
mov
roll
out
adc
or
cmp
mov
xchg
pushf
sahf
jg
mov
xchg
inc
xor
push
stos
pop
push
mov
mov
xchg
pop
dec
adc
inc
fwait
mov
xchg
cmpsb
pop
cmpsl
enter
xchg
mov
inc
and
loop
int3
shlb
add
xchg
fldt
xchg
ss
aad
xor
ret
mov
fistl
sub
jbe
sbb
push
inc
sahf
or
cmpsl
aaa
and
mov
pop
xchg
adcb
pushfw
iret
cmp
loop
shlb
add
dec
or
stc
jb
or
jecxz
lcall
push
jmp
lahf
into
lods
jno
add
and
idiv
mov
cli
rcll
inc
repnz
jo
push
nop
dec
aaa
iret
mov
lods
testb
movsl
push
lods
dec
xchg
xor
jle,pn
imul
push
add
or
dec
or
outsb
in
stos
pop
daa
in
jp
inc
push
sar
outsb
xor
sarb
mov
mov
repz
dec
sti
sub
imul
adc
jg
sub
cmp
mov
out
incb
decb
sbb
adc
ja
sahf
aad
fsubr
call
xchg
into
jbe,pn
loop
sahf
push
xchg
jne
addr16
scas
aaa
fcomps
xchg
dec
mov
repz
decl
std
push
scas
aad
adc
daa
inc
loope
mov
sbb
xor
cmp
xchg
pop
aam
pop
jp
xor
mov
mov
or
and
repnz
ja
jno
loop
flds
fsubr
test
negb
sbb
mov
pop
sub
add
jne
int
popa
and
fiaddl
lods
in
add
ret
into
cmpl
data16
int3
insb
aad
jbe
das
cli
shlb
mov
push
jnp
xor
xor
xchg
pushf
push
mov
outsb
xor
inc
idiv
inc
or
fldcw
mov
sbb
addr16
in
shll
imul
les
cwtl
lods
pop
js
out
ret
inc
insl
add
test
leave
cmpsl
pop
pop
add
lods
nop
cmpsb
jns
das
cwtl
add
cmpsl
mov
and
rclb
xsha256
cmpsb
xchg
in
jl
xchg
cwtl
ret
lods
in
pusha
pop
enter
sbb
test
xchg
inc
inc
rcll
lods
mov
push
aad
mov
repz
roll
mov
cmp
jns
inc
jnp
sub
ret
addb
imul
pop
add
cld
xor
iret
orl
add
mov
or
orb
filds
pop
mov
xchg
stc
popf
xor
xchg
sbb
mov
mov
sbb
pushf
jo
mov
mov
call
mov
pop
inc
jbe
jne
push
sbb
pop
inc
adcb
xor
pop
cltd
movsl
in
push
and
mov
or
push
mov
iret
stos
add
pop
dec
andb
aad
loope
sub
push
cmp
and
lock
int3
mov
les
jns
sbb
fwait
sti
xchg
test
mov
out
mov
cmpsb
add
push
sub
xorb
pusha
pushf
mov
in
push
or
into
jbe
repnz
fildll
fstl
fildll
std
stos
imul
lcall
out
hlt
and
lahf
outsb
dec
cmp
mov
xchg
pop
xchg
dec
adc
lcall
jae
sub
pusha
enter
dec
sub
loope
mov
add
adc
daa
dec
inc
dec
mov
mov
dec
dec
lcall
inc
jp
nop
sub
test
lea
mov
add
int3
or
xor
sub
cmp
int3
inc
data16
stos
pushf
sbb
lods
and
adc
pop
stos
test
idivl
push
xchg
cmp
mov
push
js
scas
pminub
cwtl
nop
adc
negl
hlt
stos
adc
roll
and
cltd
mov
dec
or
repnz
pop
int3
jl
or
or
push
jne
jbe
sub
repz
xchg
cmp
xor
jbe
or
std
add
xchg
repz
movsb
cltd
or
mov
imul
xorl
icebp
cmc
imul
test
pop
mov
and
insb
inc
inc
sahf
or
jge
xchg
push
mov
jg
mov
cli
imul
xchg
mov
xlat
pop
add
mov
rol
fstpt
lea
cmp
push
mov
sahf
adc
sub
imulb
or
enterw
xchg
adc
mov
js
or
add
push
and
and
jne
sbb
stc
addr16
repnz
xchg
addr16
movsl
fdiv
push
shll
sti
push
inc
pop
fisttpl
orl
repnz
daa
xchg
jg
addb
jmp
add
mov
push
lahf
adc
ficompl
xchg
xor
xchg
or
nop
es
push
popf
mov
mov
popf
xor
add
mov
pop
cmpsb
or
xchg
insl
jmp
mov
sti
push
or
mov
mov
and
sub
stc
jno
repnz
push
push
cmp
mov
or
lds
mov
in
data16
add
xchg
mov
sarl
fistps
add
sahf
inc
mov
sbb
pop
xchg
sub
repnz
mov
movsl
loopne
lods
add
pop
call
sub
dec
or
adc
or
loop
mov
xchg
mov
ficompl
leave
fsts
test
inc
call
ret
fdivs
mov
ds
and
lods
jo
add
pusha
fs
jle
jnp
cli
or
ja
mov
xor
daa
in
jg
mov
jno
fiadds
sub
aas
data16
mov
out
jecxz
cmp
xchg
rorl
inc
mov
mov
mov
sub
xchg
addr16
mov
pop
test
cmp
cli
lcall
stos
outsl
and
fldl
test
test
repnz
fiaddl
cld
in
xor
scas
imul
and
cli
sti
xor
shl
xchg
mov
mov
sub
inc
in
gs
es
loop
popa
mov
inc
adc
mov
lahf
sbb
ljmp
and
sahf
xchg
mov
lcall
adc
cmp
sub
xorb
cmp
int3
mov
push
dec
dec
mov
call
pop
int
jbe
push
xchg
lret
sub
pop
jno
xchg
mov
into
data16
cmpsb
out
in
inc
or
sbb
mov
dec
xchg
in
mov
add
out
fcomps
rcl
mov
add
pop
loope
lahf
jnp
test
push
mov
or
js
push
xor
mov
cld
mov
push
push
loop
xor
mov
push
js
and
add
mov
stc
outsl
fdivrs
mov
xchg
dec
fwait
adc
movsb
aad
enter
adc
jae
ljmp
or
pop
push
cmp
movsb
mov
fstpl
xchg
addr16
mov
cs
or
xchg
aaa
or
push
scas
mov
shrb
enter
stos
sub
ret
sub
push
scas
mov
fwait
jo
test
xchg
jp
int
out
aaa
mov
inc
dec
movsl
jnp
das
fwait
lods
mov
push
adc
dec
nop
or
mov
loopne
aas
dec
mov
loop
and
mov
add
nop
mov
int
mov
aam
mov
mov
mov
adcl
pop
pop
bound
jmp
insb
jne
jp
inc
jb
fnstsw
xchg
and
add
mov
stos
pop
les
mov
adc
orl
test
cli
xchg
lods
loopne
mov
sti
mov
cmpb
xacquire
je
stos
mull
daa
std
mov
and
les
mov
sbb
mov
push
mov
std
mov
mov
imul
fsubl
out
mov
ss
or
cltd
and
xor
cmc
into
aas
leave
dec
mov
mov
mov
pop
lahf
filds
sarb
mov
mov
test
push
dec
mov
lods
xor
add
fisubl
insl
hlt
sub
sahf
nop
push
jg
add
ja
pop
mov
sahf
out
mov
aam
and
jp
mov
data16
fists
adc
mov
jecxz
les
mov
dec
push
int3
lret
pop
arpl
mov
add
insb
inc
and
adc
jnp
mov
pop
scas
xchg
fmulp
mov
or
ss
inc
ret
xor
mov
xchg
jbe
stos
mov
xchg
mov
mov
nop
sub
bnd
nop
inc
enter
pop
and
orb
aad
popa
in
mov
add
dec
nop
imul
sbb
popf
mov
ss
cmp
adc
sahf
sub
not
mov
call
inc
xchg
addl
or
jbe
sarl
adcl
imul
enter
jecxz
jb
adc
cmp
daa
jg
or
cmp
mov
mov
cmc
xor
mov
fdivs
sub
inc
cmp
xchg
cmp
jg
lret
outsb
mov
pop
cltd
loop
add
repz
insb
jnp
mov
mov
cmpsl
cmc
cmp
mov
sbb
cmp
shll
cmp
mov
fistpl
hlt
fcomps
add
mov
imul
jae
ss
inc
cmp
jle
or
mov
add
nop
inc
mov
mov
das
fcompp
jg
xorl
outsb
int
or
cmp
sti
sahf
out
jb
cmpsl
subb
jb
mov
fwait
xor
push
push
test
cs
inc
ss
xchg
out
and
xchg
add
push
add
inc
scas
in
add
mov
lcall
inc
aad
cmp
incb
mov
xchg
jecxz
adc
mov
out
dec
pop
adc
inc
ret
mov
cmp
outsb
cld
xchg
push
and
aam
jo
or
stc
add
jg
xchg
cmp
jecxz
sub
mov
mov
shl
xchg
mov
std
scas
dec
jge
bswap
mov
lret
xchg
push
xor
mov
rorb
xchg
cmp
aad
adc
mov
cmp
insb
push
std
mov
xchg
and
cld
out
jge
in
mov
jge
mov
repnz
adc
pop
push
xchg
xchg
in
loop
repz
dec
xor
xor
dec
dec
into
jbe
or
outsb
mov
pop
jno
clc
loopne
fstpt
cmp
mov
adcb
xchg
or
cltd
loope
inc
nop
clc
sub
sbb
jbe
testl
xchg
addr16
pop
sbb
adc
cltd
sarb
and
cmpsb
sub
jge
mov
sarl
add
cwtl
push
iret
mov
rcl
enter
sub
or
add
ljmp
add
rcll
push
mov
cmpsl
jmp
jp
inc
lcall
fsubr
jb
mov
lods
mov
scas
leave
cwtl
inc
pop
jne
cli
orl
fisttpl
pusha
nop
push
aad
or
mov
pusha
jg
fidivrl
sbb
iret
shlb
jg
je
jl
mov
jmp
xchg
inc
push
push
or
mov
add
xchg
cmp
stos
ds
push
mov
xor
xor
xchg
push
pop
andb
or
add
iret
in
lcall
pop
mov
dec
or
and
repnz
lods
cmp
mov
or
jnp
jno
flds
das
adc
pop
hlt
adcb
loop
nop
pop
vcvtpd2dqy
data16
shrl
movsb
lcall
int
pusha
lock
adc
daa
cld
or
iret
fnsave
jns
cmp
sbb
adc
clc
mov
adc
nop
jbe
jns
inc
lods
mov
push
adc
mov
push
xchg
test
mov
and
shrl
and
adc
popf
push
ja
outsl
hlt
sub
inc
fsubrl
in
mov
test
test
jecxz
mov
shl
shlb
loope
pop
int3
movsl
inc
mov
fcmove
std
dec
js
xchg
cmc
mov
and
into
repz
test
fists
add
sar
pusha
fimull
rcr
rorl
xchg
in
mov
push
add
orb
aam
xlat
push
mov
mov
mov
jns
adc
int3
xor
push
cmp
cmp
cmpsl
adc
into
jns
adc
repz
rcll
mov
mov
and
add
cli
stos
sbb
cmpsl
cmp
jp
pop
orb
pusha
cs
sub
pusha
pop
out
daa
enter
sahf
jbe
mov
or
xchg
xchg
popf
insb
or
int3
sub
daa
insl
dec
mov
xchg
ret
jb
jns
lcall
test
ss
fistps
sti
sbb
pusha
repz
mov
xchg
pop
pop
ficoms
add
mov
dec
test
imul
insb
or
add
imulb
pop
ss
in
mov
jo
cmp
decb
outsl
xchg
daa
xor
mov
xlat
dec
lods
nop
repnz
adc
out
mov
xchg
xor
pop
or
jge
adcb
lret
ja
add
xchg
hlt
popa
into
and
jp
dec
rcrl
aaa
and
imul
or
xor
inc
addr16
addb
xor
cmp
in
inc
mov
xor
addb
xlat
xchg
add
push
and
pop
lods
inc
or
and
addl
fstpt
fcmovb
jg
aas
pop
addb
cwtl
xchg
adc
fnstenv
and
inc
cs
loop
add
repz
and
movsl
into
clc
les
or
pushf
cmp
xchg
ss
ljmp
aas
aaa
out
fisttpl
xor
addr16
stc
leave
mov
push
ret
repz
jecxz
mov
or
inc
mov
xchg
xchg
or
lahf
inc
dec
or
aas
push
repnz
cmp
mov
adcl
xchg
ret
sub
repz
jbe
jg
xchg
inc
sahf
addb
faddl
js
xchg
adc
pusha
inc
and
xchg
mov
inc
dec
loop
jns
sub
dec
std
or
cmp
cmpb
jg
fidivrs
adc
mov
cmovns
negb
xor
je
inc
xchg
stos
and
sub
xlat
aaa
and
mov
out
push
sbb
push
mov
mov
mov
cmp
adc
dec
adc
xchg
bnd
sub
inc
es
cmp
mov
xor
dec
sbb
lock
pop
lret
inc
cmp
ja
repnz
jge
rcrb
call
aam
push
xchg
ljmp
sbb
sbb
push
outsl
aad
mov
cs
int3
addb
pop
adc
das
jg
xor
nop
hlt
cmpsb
sub
adc
and
mov
jno
xchg
fildl
test
movsw
xchg
mov
push
sub
test
cld
cmc
jp
pop
sti
mov
flds
out
das
mov
hlt
xchg
lea
ret
aam
fstl
adc
xor
cmp
mov
push
test
mov
mov
addl
push
mov
ss
sti
push
push
loopne
mov
icebp
xchg
and
lret
mov
lods
rolb
jle
add
fcmovbe
jge
into
daa
lods
mov
aaa
fisubrl
push
xchg
insb
inc
jp
popf
mov
mov
rep
ret
aam
stos
mov
aas
sbb
iret
cltd
jns
mov
mov
imul
push
sarb
or
mov
push
dec
sbb
test
sarb
or
jbe
rcr
jb
rcrl
pushl
std
lods
repnz
and
mov
addb
rolb
test
xchg
sbb
mov
mov
push
fwait
orl
je
mov
cld
fidivl
repz
ficompl
notb
test
movsw
dec
ds
add
sub
xlat
in
pop
sti
cwtl
and
stos
les
negl
xchg
mov
out
xlat
push
jg
push
add
push
rcr
sbb
repnz
xchg
sbbb
loopne
in
xchg
aaa
loope
ret
jp
int
int
std
xor
and
lahf
nop
jo
jb
add
sahf
xchg
or
lea
ja
jp
es
xchg
push
lods
and
pop
daa
mov
repnz
push
and
mov
mov
mov
or
into
adc
or
adc
enter
push
sbb
push
jle
into
je
cli
and
lcall
jbe
rolb
push
int
xchg
add
lds
cmp
cld
xor
mov
data16
test
scas
push
enter
cs
inc
subb
into
cld
adc
fisubrl
cli
imul
xchg
rep
insl
out
lods
lret
sarl
add
mov
fmuls
jns
sahf
aad
cmp
lods
jp
outsl
jbe
sbb
insb
lcall
sahf
adc
pop
push
push
nop
sbb
fbld
data16
cmpsb
pop
imul
fnstsw
inc
shlb
xchg
imul
jle
cmpsb
mov
fstl
hlt
rorb
jae
bound
roll
mov
out
fadds
repnz
call
leave
iret
xchg
xchg
in
test
insb
and
sub
and
into
rorb
mov
inc
fisubs
adc
int
jp
fistps
and
cwtl
mov
mov
mov
inc
or
stos
jno
out
shll
push
les
lods
cmc
mov
mov
or
mov
shlb
in
jg
xchg
xchg
jecxz
decl
cltd
mov
adcb
cmpsb
jns
pop
mov
and
ret
xor
or
test
arpl
je
js
gs
das
push
dec
ret
or
test
insb
mov
jl
sbb
jno
cli
mov
frstor
jle
sti
push
into
out
mov
outsb
sub
xor
sub
adc
cmp
xchg
aam
and
push
imul
imul
mov
aas
insl
jle
add
data16
call
scas
loope
mov
addb
and
lds
pop
cli
movsb
mov
ds
rcll
pop
xchg
scas
mov
repnz
mov
push
movsb
mov
and
cmpsl
negl
and
arpl
inc
mov
cmp
pop
xchg
mov
mov
imul
fcomps
mov
pop
or
nop
mov
jg
mov
stos
nop
movsl
inc
cmp
call
push
push
sahf
fsubrs
inc
adc
cmp
sahf
jmp
negb
mov
mov
enter
aas
xor
addr16
dec
and
lds
xchg
pop
xor
mov
out
pop
test
inc
jg
xchg
js
adc
mov
jns
adc
push
test
into
dec
out
mov
mov
scas
aam
repz
fstpl
nop
mov
cltd
lahf
mov
loope
arpl
ds
popf
mov
aad
push
ja
or
pop
les
test
pop
mov
push
movsb
rorb
data16
js
sbb
ja
nop
pop
cmp
jp
fs
aam
cs
or
jb
out
cli
push
fadds
xchg
icebp
jns
cmp
sbb
fcomi
subb
inc
addr16
jae
repz
mov
or
fisttpll
sub
gs
mov
gs
jp
fsubl
xchg
sahf
or
in
lahf
pusha
xchg
insl
and
and
shl
push
inc
adc
xchg
xchg
nop
cmp
fldenv
mov
dec
mov
aad
pop
mov
jl
push
loope
xchg
cld
push
mov
adc
mov
and
cli
out
jbe
push
xchg
mov
push
push
xchg
mov
out
and
enter
dec
scas
pop
inc
xchg
ja
xor
sarl
mov
sbb
xchg
sbb
jecxz
in
xchg
jge
mov
loop
cmp
lods
sub
pop
pop
in
xchg
mov
jbe
lahf
out
popf
xchg
sahf
push
xchg
into
jno
mov
fsubs
push
mov
xlat
addr16
or
gs
jge
mov
daa
xor
and
mov
pop
cmovle
in
mov
xchg
and
lahf
test
scas
in
xchg
jg
add
or
cmp
cs
sbb
pop
ds
fsub
and
mov
or
mov
sarb
jmp
fadds
add
push
jecxz
mov
inc
fwait
dec
adc
inc
mov
xchg
and
ret
mov
xchg
pop
lods
bound
lods
push
test
test
loope
fiaddl
mov
lahf
js
push
lcall
mov
cmp
sahf
loope
xchg
or
outsb
cs
mov
xor
scas
mov
out
stos
pop
sahf
xchg
push
xchg
out
pop
cmc
lret
add
inc
test
dec
mov
xchg
in
scas
in
ret
xlat
mov
scas
dec
mov
je
xchg
xor
dec
nop
cmp
adc
xchg
fdivl
xchg
mov
mov
mov
and
xchg
xchg
loope
incl
xchg
jno
nop
or
pop
mov
or
sub
pop
pop
jl
or
andb
fmuls
xor
test
xchg
pop
xchg
fwait
adc
xchg
xorl
loopne
inc
mov
pop
mov
popl
sahf
dec
inc
xchg
sub
jae
inc
cmp
data16
pop
pop
fs
jns
xchg
jbe
sti
shll
sub
xchg
jns
orb
inc
xchg
pop
pop
divl
xchg
divl
pop
jbe
pop
mov
outsl
ja
inc
mov
and
in
mov
xchg
pop
xchg
lahf
xchg
xchg
dec
inc
loope
scas
and
and
dec
mov
fsts
xchg
lcall
in
ds
das
mov
idivl
xchg
leave
mov
mov
xchg
scas
dec
idivl
mov
xchg
fldenv
movsb
push
mov
mov
fisttpll
xchg
out
jnp
ss
sbb
movsl
add
in
in
fistps
ja
idiv
pushf
add
nop
mov
setb
adc
xchg
xchg
sub
dec
fists
cmpsb
jne
testb
pop
mov
cwtl
enter
outsl
lcall
pushf
jo
mov
shlb
xchg
femms
lahf
movsb
push
cmpsl
scas
mov
notl
mov
add
lcall
icebp
lcall
into
mov
mov
std
jmp
aad
lret
xchg
lods
cltd
xchg
pusha
xchg
mov
xchg
ret
pop
jp
xchg
movsb
ret
in
mov
xchg
add
in
sahf
aas
xchg
imull
jg
mov
in
fnstcw
scas
inc
xchg
mov
pop
xchg
xchg
ret
pop
in
jg
xorb
xchg
lea
scas
and
fwait
pop
scas
mov
pop
mov
xchg
ficoms
pop
xchg
pop
xchg
xlat
scas
mov
jecxz
mov
cmpsl
push
fs
xchg
cmpsl
ja
jl
cltd
aaa
ret
mov
mov
ja
aaa
xlat
mov
xchg
fists
aam
jmp
add
or
bnd
xchg
idivb
jge
test
dec
leave
add
adc
mov
push
cmpsb
push
pop
mov
xchg
ret
pop
call
fs
cmpl
int3
mov
mov
icebp
adc
mov
push
mov
mov
lahf
es
cmp
addl
cli
push
mov
ror
push
xchg
lret
xchg
cmp
inc
cmp
je
cltd
dec
gs
xchg
fwait
jg
sub
push
notb
pop
enter
es
inc
fwait
jb
or
push
mov
sbb
fs
test
xor
pop
sub
inc
push
aam
ret
mov
cmp
xlat
test
or
mov
cmp
sbb
adc
xchg
dec
xchg
fdivrl
idivb
repnz
push
sub
in
cmpsb
dec
inc
call
inc
out
loop
and
cmp
std
addr16
imul
test
jno
push
enter
outsl
mov
arpl
xchg
nop
faddl
dec
cmp
mov
fmuls
mov
sti
lahf
outsb
mov
ret
movb
lret
lahf
into
mov
xchg
mov
pop
inc
loop
scas
out
xchg
fcoms
jae
pop
addb
mov
aad
adc
mov
and
xchg
add
orb
gs
jp
pop
out
or
push
or
lcall
je
mov
dec
sahf
test
out
add
pop
jb
outsb
mov
aas
rorl
aad
jnp
jl
mov
mov
into
outsb
dec
scas
dec
dec
cs
pop
pop
xchg
loop
mov
fistps
orl
dec
out
clc
or
add
mov
fs
pop
outsl
and
cltd
jge
xchg
imul
es
stos
mov
das
scas
cltd
aas
push
inc
sbbl
aad
inc
jbe
sub
iret
mov
xchg
aad
mov
shr
inc
cltd
pop
sub
leave
or
outsb
loope
adc
es
movl
pop
or
dec
xchg
test
in
movsl
call
pop
fnstenv
pusha
xchg
fcmovnu
adc
push
jmp
cmp
out
das
lahf
pop
in
pop
test
mov
orl
mov
lods
jnp
sub
mov
loop
jge
mov
cmpsb
xchg
sbb
cmpsb
sbb
rclb
sub
mov
xchg
lahf
rcr
xchg
js
dec
lock
mov
mov
pusha
adcb
add
into
xchg
out
nop
shl
bound
ja
repz
shl
jbe
hlt
xchg
inc
es
xchg
cmpsl
cltd
aaa
sbb
mov
or
push
ret
pop
or
mov
inc
mov
setle
fiadds
or
test
mov
dec
mov
xchg
out
orl
lea
lcall
inc
shll
test
sbb
xchg
inc
aaa
ljmp
xchg
mov
mov
dec
data16
aas
pop
cltd
push
mov
lahf
jl
scas
int
mov
sub
lock
aas
xchg
aam
mov
mov
lcall
test
insl
mov
jge
dec
jne
lcall
dec
push
and
lahf
pop
cli
mov
ja
jnp
xor
fdivrl
shlb
sar
cmp
mov
sahf
pop
cli
dec
inc
cmpsb
add
mov
inc
insl
mov
outsb
pop
jnp
int
ja
and
stos
jp
pop
inc
mov
rep
jl
push
sarl
in
mov
test
pusha
in
push
sub
pop
fcmove
addr16
mov
jge
dec
mov
adc
dec
movsb
or
add
call
aad
orl
fldt
in
jmp
jmp
mov
shll
xlat
scas
mov
fiadds
aam
jnp
rorl
shrb
aas
cmp
xor
repz
jecxz
or
ss
and
xchg
into
adcb
or
jns
inc
jp
jo
rorl
xchg
mov
popa
mov
call
pop
imulb
int3
pop
push
test
shlb
pop
xlat
in
jg
mov
add
cmp
jns
stos
adcb
std
add
mov
test
jno
jne
mov
jl
cltd
xchg
mov
xchg
mov
push
xchg
mov
xchg
xchg
shlb
ret
insl
add
mov
lcall
pushf
and
sahf
ret
push
dec
mov
mov
mov
dec
movsb
mov
cmpsb
xlat
std
mov
push
xor
add
aas
push
xchg
jmp
mov
fcompp
mov
faddl
daa
jge
add
pop
stc
mov
xchg
sub
mov
das
or
and
dec
fildll
iret
cmp
or
adc
jge
pop
lods
mov
mov
xor
movsb
lret
pop
daa
addr16
mov
lock
shlb
xor
pop
jmp
jmp
shlb
sti
mov
stos
jbe
shr
adc
cmp
andb
push
mov
out
jge
lret
lret
imul
pop
mov
cmp
addb
fsubl
jns
rclb
and
add
sub
shrb
pushl
jp
lahf
je
repz
xor
mov
bound
ret
cltd
jne
mov
xchg
data16
movsl
dec
jp
loopne
cltd
sbb
mov
ret
cmp
pop
add
mov
stos
pop
xor
repnz
jg
lcall
data16
hlt
pop
lcall
cmp
movsl
imul
test
loop
pop
pusha
jno
scas
sti
rcr
mov
or
repnz
mov
add
test
decb
xchg
xchg
jge
rolb
push
bound
addb
in
mov
mov
mov
sti
cmp
sub
lret
outsb
add
sub
push
sti
stos
mov
mov
or
pusha
stos
dec
cs
mov
shlb
jge
xchg
pop
loopne
mov
mov
mov
xlat
scas
daa
cmp
bound
leave
aad
jae
jg
out
adc
mov
repnz
push
into
jge
imul
pop
sub
neg
jbe
jecxz
jns
clc
in
aad
jp
fnstenv
imul
call
xor
into
lods
call
loopne
pop
pusha
stos
jae
mov
aad
or
fcoml
int
pop
movb
cmpsl
jae
movb
sbb
adc
addb
movsb
ret
cmp
xchg
repnz
jns
xchg
fwait
mov
fstpt
pop
repz
or
roll
lcall
jl
xchg
in
or
jno
mov
xchg
gs
pop
push
mov
mov
sub
xor
ret
mov
lcall
lret
mov
mov
ret
loopne
sarl
dec
sub
jo
fmuls
mov
cld
xchg
stos
sahf
or
push
xor
enter
or
sbb
xchg
mov
bound
push
add
adc
flds
mov
popf
lock
jno
in
add
jl
fs
aad
jbe
pop
test
in
push
aad
mov
adc
fldl
jnp
cmp
xor
insb
mov
repnz
aad
dec
out
popa
popf
mov
mov
imul
enter
cmc
jb
scas
cmp
jecxz
call
leave
adcb
mov
xor
mov
in
mov
cmp
pushf
loop
mov
shlb
bound
xchg
or
xchg
sahf
popf
test
mov
dec
mov
mov
cmp
or
int3
jg
mov
inc
xchg
rorb
xor
sahf
push
adc
mov
lods
push
add
jns
out
or
sub
xchg
into
das
jg
cmp
sub
ret
movsb
orl
mov
push
mov
mov
mov
outsb
xchg
inc
pop
mov
movsl
repnz
das
jge
testb
arpl
cmp
nop
ret
pop
or
hlt
std
lret
stos
push
int3
cmp
jae
and
inc
jmp
jl
lds
int3
sahf
and
fildl
mov
mov
jae
sahf
add
xor
mov
ret
jp
repnz
cmpsb
xchg
jo
leave
and
mov
js
jp
xor
cmpb
xor
adc
pop
jne
adc
adc
sbb
dec
adc
stos
or
adc
nop
rcll
jp
movsb
stos
lret
mov
xchg
mov
pop
int
in
aad
push
inc
sahf
std
cmpsl
push
fistl
jecxz
sub
cld
rep
in
jae
andl
lods
orb
fdivl
pop
jg
inc
pop
xchg
mov
fadd
pop
mov
out
cmp
addb
xchg
rcr
dec
inc
mov
sarl
dec
outsb
dec
push
dec
dec
out
dec
dec
dec
dec
mov
dec
cmpsb
dec
dec
mov
jbe
mov
cmp
rorb
lahf
jbe
mov
mov
xor
inc
mov
stos
push
jns
insb
icebp
frstor
out
pop
nop
in
pop
jae
addb
decl
sahf
pop
popf
shlb
lods
or
ss
mov
add
cmp
or
aad
jle
lods
cmp
orb
push
jl
mov
add
iret
ds
aas
or
dec
adc
ror
pop
subl
fmull
jnp
rorb
mov
sub
jns
outsl
dec
mov
xchg
pop
inc
cmp
add
test
xchg
insl
outsl
xchg
mov
lret
mov
cmp
xchg
hlt
in
movsb
std
outsb
dec
test
fnstsw
sbb
pop
insb
bound
lock
in
push
xchg
push
fstl
shll
sbb
mov
ja
or
shl
xchg
dec
cltd
xor
lea
dec
sub
pop
cwtl
scas
repz
mov
pop
jp
cmp
and
dec
pushf
push
push
push
jbe
dec
jg
iret
shrl
movsb
lcall
ret
in
and
push
popa
mov
cltd
scas
pop
fwait
push
vpshad
es
adc
and
data16
mov
sbbb
pop
loopne
and
call
cmp
mov
jbe
inc
jns
sub
mov
ret
xchg
bnd
xchg
push
xchg
test
out
jbe
xor
and
mov
das
sub
lret
dec
inc
mov
and
mov
or
cmp
cmpsl
bound
xchg
hlt
lods
mov
and
out
sahf
scas
cmp
pop
into
aad
xor
sbb
pop
mov
in
imul
mov
add
repnz
lcall
sub
lods
inc
sbb
add
push
cmp
orb
push
sti
mov
aaa
jg
jmp
or
ret
fadds
cmp
repz
andl
xor
loope
mov
gs
mov
cmp
repnz
nop
jge
mov
sub
icebp
push
add
dec
sbb
es
addr16
loop
inc
mov
mov
ljmp
add
sbb
xchg
ret
out
pop
pushf
aas
leave
mov
rol
rorl
xchg
mov
or
pop
lcall
dec
or
mov
push
add
out
pop
pop
mov
rcll
push
faddp
jge
sub
jl
addr16
int3
jl
add
jb
repnz
mov
xchg
mov
xchg
xchg
mov
mov
movsl
xchg
imul
aaa
out
in
push
pop
push
mov
cmp
inc
ds
andw
xor
je
inc
bound
xor
push
and
int
and
jne
mov
push
repnz
push
loop
jle
sahf
pop
ja
pop
mov
cmp
sbb
arpl
jo
mov
mov
sar
push
imul
stos
mov
stos
push
mov
jmp
lods
loopne
push
push
es
mov
dec
xchg
shll
mov
jp
jp
mov
mov
fimull
rclb
cmpsb
adc
cmp
mov
mov
aad
hlt
push
jns
and
pusha
ret
inc
mov
repnz
adc
pop
cmp
lea
fsubrl
xchg
xchg
movsb
push
adc
aad
jae,pt
cli
inc
clc
dec
test
mov
fwait
mov
repnz
fs
out
addb
sub
add
add
or
pop
dec
shr
cmpl
or
fimull
xchg
adc
iret
sub
jae
adcb
leave
cmpb
shrl
inc
mov
scas
ret
pop
movsb
jne
gs
shrl
xchg
jl
ret
ror
sti
data16
inc
mov
pusha
into
inc
stos
sti
push
adc
sahf
mov
ret
out
mov
pop
test
xor
cwtl
xchg
xor
mov
cltd
inc
pop
shrd
cli
pop
cli
imul
xor
test
sbb
dec
inc
jns
sbb
and
jl
jg
insb
sbb
mov
outsb
mov
dec
mov
sbb
sti
ret
mov
lret
xchg
inc
mov
sub
fmull
sub
and
push
leave
push
sbb
add
push
dec
mov
imul
sahf
pop
xchg
clc
cmpsl
mov
mov
stc
scas
pop
shrl
int
out
jno
mov
mov
les
nop
ja
mov
subl
scas
pop
or
aad
sbb
mov
scas
pop
pop
lahf
sub
xchg
int3
jb
add
or
scas
jecxz
loop
xchg
mov
fnstcw
insl
push
mov
dec
pop
ja
jo
iret
adc
mov
mov
jl
cmp
fidivrl
push
dec
pushl
xor
xchg
adc
cmp
ss
sbb
adc
loop
mov
jns
cmp
gs
jnp
or
push
movsb
in
push
add
scas
loopne
dec
adcb
mov
mov
ds
loopne
sbb
ss
or
aam
adc
into
sub
rcr
push
scas
mov
or
jne
xchg
xchg
or
mov
pop
leave
jg
lret
loop
int
add
out
jbe
mov
pop
mov
sbb
add
push
mov
cmp
lods
jp
hlt
add
pop
mov
inc
test
ret
cmpsb
pop
scas
xor
pop
mov
out
mov
ds
inc
fs
int
sahf
sub
cs
sti
sarb
gs
sbbl
mov
inc
xlat
add
or
pop
stos
xor
data16
enter
jb
es
bound
fxch
mov
psubsb
aad
ss
aaa
xchg
xchg
adc
aam
imul
cli
push
out
pop
pop
push
test
and
icebp
movsl
fs
stc
daa
mov
sahf
xchg
mov
loope
xchg
ret
insb
popf
out
xlat
dec
pushf
xchg
repz
bound
add
gs
mov
data16
jmp
mov
jp
and
addb
ficompl
gs
add
nop
lcall
xchg
push
sub
jnp
inc
cwtl
xchg
push
mov
insl
pop
and
test
jne
xchg
pop
scas
mov
jecxz
sbb
jg
fldenv
lds
cltd
jl
xchg
sbb
stos
repnz
int
test
xchg
jmp
mov
mov
ffree
fdivl
cld
cli
inc
ret
mov
sub
push
mov
js
inc
dec
mov
dec
jecxz
inc
jne
add
aad
push
iret
xchg
out
xor
or
cmp
cld
inc
inc
mov
add
push
jnp
mov
scas
rcl
cwtl
mov
out
filds
cmp
scas
rcr
call
aam
aam
push
dec
add
cwtl
movsb
mov
pop
mov
lock
cwtl
add
xchg
cld
addr16
stos
call
loopne
popa
and
mov
aam
inc
jns
and
sar
pop
insl
in
xor
lock
out
jo
std
jo
jno
stos
popl
add
pop
mulb
stos
or
mov
and
jmp
iret
lahf
xor
inc
jl
inc
mov
loop
adc
jg
sub
jp
rcll
add
or
lahf
jo
push
inc
clc
stos
lods
xchg
or
aas
outsb
add
ds
and
adc
out
xchg
pop
mov
icebp
inc
mov
or
xchg
dec
sub
loopne
xor
test
bound
scas
mov
frstor
sahf
shlb
sub
xchg
pushaw
cmpl
mov
idiv
clc
es
je
or
sarl
push
dec
xchg
pop
adc
outsl
jp
or
xchg
insl
xchg
add
sahf
sub
icebp
mov
push
mov
mov
cmpsl
aad
aam
enter
jb
jg
sarb
test
jle
inc
jg
xchg
dec
sbb
xchg
stc
mov
add
jge
inc
sbb
fisttpll
movsl
ret
mov
cmpsl
jl
inc
subb
aad
inc
stos
iret
push
jbe
pushf
xor
dec
fimuls
push
call
leave
or
jae
push
and
cmp
jecxz
bound
leave
xchg
shlb
fcoms
adc
idivl
inc
insb
mov
xchg
cmp
in
aas
loop
data16
dec
scas
push
sub
sub
clc
jnp
push
dec
addr16
pop
out
imul
scas
in
enter
mov
and
mov
xchg
aam
jbe
es
mov
cld
push
fcomps
lahf
call
sub
push
or
pop
mov
loopne
cmpsb
imul
mov
xchg
nop
jg
fs
jle
mov
mov
push
sub
aaa
fs
test
mov
cmp
insl
mov
btr
mov
decb
jo
pushl
loop
mov
add
jl
lret
cmp
roll
mov
mov
xchg
fcoml
xchg
cwtl
cmp
ror
fsubl
sbb
inc
dec
clc
jnp
fdivrl
mov
iret
xchg
mov
pop
call
sbb
ds
lods
movsl
leave
push
sbbl
mov
push
lret
mov
sar
cmovnp
cltd
test
mov
insb
push
mov
ds
xchg
leave
repnz
push
inc
xor
arpl
outsl
adc
rclb
mov
pop
cmp
sti
cld
jnp
pop
aad
aas
fcoms
or
aam
lret
jne
xchg
cltd
fcom
testb
shrb
js
inc
lods
jge
rclb
movsl
xchg
xchg
pop
push
jecxz
adc
out
mov
pop
jl
push
xchg
popf
fnstcw
mov
ds
rolb
rolb
jne
fimuls
sahf
or
xlat
mov
mov
jl
jecxz
xchg
rcll
dec
dec
mov
aas
or
pop
inc
xchg
sbbb
sahf
or
nop
mov
loopne
cmpsb
movl
cmpsb
mov
icebp
cmpsl
push
jecxz
and
mov
repz
mov
sub
cltd
add
fdivl
insb
adc
xor
xchg
repz
orl
in
push
jl
mov
outsb
data16
dec
shll
mov
push
scas
push
and
pop
ret
push
or
cld
fsubs
aas
adcb
std
jo
cmpsb
cmp
test
lea
lcall
pop
add
pop
adc
xchg
scas
mov
mov
sarl
rclb
push
nop
add
xchg
pushl
xlat
mov
xchg
mov
fbstp
mov
lds
inc
sti
ret
lret
mov
cmpsb
cmpsb
fisubl
dec
mov
xchg
adc
popa
fcmovbe
add
ljmp
add
mov
lods
fisubrl
ret
and
test
add
rcr
mov
lcall
rcrb
push
adc
aam
and
les
xchg
test
arpl
add
or
push
dec
scas
stc
mov
sahf
cs
xor
sbb
adcl
cmp
sub
repnz
shl
or
filds
xor
scas
jg
repz
and
push
xchg
sbb
adc
cmc
into
mov
mov
and
cmp
or
into
stos
dec
addr16
mov
xor
into
adc
add
out
shll
xchg
xchg
add
cmp
dec
in
xchg
sbb
xchg
test
push
mov
pop
push
push
xlat
aas
xchg
out
andl
cmp
and
xchg
loopne
lods
mov
pop
inc
ljmp
sub
femms
out
imul
pusha
call
addr16
cmp
xchg
leave
jns
sub
mov
rcrl
insl
lret
jbe
jle
int3
xchg
lods
jl
xchg
pop
or
std
xlat
cmc
mov
jg
lcall
mov
xchg
lret
add
xchg
inc
cwtl
mov
test
pop
mov
pop
add
ljmp
pop
cs
lea
sub
or
xchg
cmp
jp
xchg
xor
mov
mov
ss
and
push
repnz
or
sub
test
repnz
fisttpl
aad
add
orb
repnz
pushf
push
fbld
or
jl
xchg
jle
or
mov
sub
inc
jbe
add
call
mov
xchg
cli
xchg
gs
jge
inc
mov
push
jo
xor
and
mov
or
add
lds
rcrb
jmp
es
mov
mov
data16
or
and
aaa
rolb
push
fldt
cmpb
fsubr
sbb
nop
incl
inc
fsubs
cmp
xchg
xor
pusha
xor
pminsw
movsl
mov
adc
negb
xchg
es
xchg
jle
jmp
in
mov
leave
jge
and
rorb
ret
idiv
and
xchg
test
mov
jl
cld
mov
cmpsb
je
mov
gs
xchg
ja
fidivl
push
bound
shrb
cmp
call
cmpsb
cli
sbb
and
jg
loop
xor
cmpsb
xor
movhps
and
loop
int
sub
jo
lret
inc
lea
xor
and
aaa
mov
xchg
loop
jecxz
jg
repz
pop
or
lret
cmc
and
xchg
add
mov
inc
mov
add
pop
cmpb
mov
pop
ret
imul
sbb
lds
xchg
shr
clc
enter
mov
in
mov
xchg
xchg
nop
sbb
cltd
xchg
leave
sahf
nop
xchg
xchg
or
insb
pop
push
mov
mov
test
int3
mov
cld
loopne
xchg
mov
test
jl
ret
shl
sbb
and
push
divl
dec
or
out
pop
idiv
push
jg
aas
test
repz
movsl
fnsetpm(287
xlat
mov
add
inc
rcll
lahf
fwait
or
xor
pop
sub
fidivrs
xlat
sub
pop
and
ss
aad
pop
mov
lea
lea
xorb
cmp
pop
lret
mov
xorl
lahf
dec
jae
mov
xor
stc
lods
out
jp
shrl
mov
movntq
out
or
xchg
inc
cmp
fimuls
repnz
or
out
or
fisttps
int
xor
lcall
sbb
lea
push
dec
clc
adc
add
leave
ljmp
and
not
orb
xchg
add
sub
int
dec
mov
pop
inc
call
out
inc
in
outsl
sub
dec
push
rclb
in
arpl
in
xor
sub
sbb
mov
jp
dec
ja
test
xor
mov
push
mov
cmp
fdivl
lods
jl,pt
mov
and
mov
repz
xchg
enter
pop
je
mov
movsb
mov
lret
lock
outsb
add
rclb
mov
decl
push
pop
rclb
mov
and
testl
frstor
push
jae,pn
xchg
xor
mov
adc
dec
adcb
test
dec
js
mov
inc
mov
sarl
cmp
rcrb
xchg
add
cmpl
add
scas
pop
dec
pop
sbb
fsubrs
xchg
movsl
cmc
ud0
add
ds
iret
push
cwtl
xchg
mov
int3
ret
dec
dec
jmp
push
lds
and
jp
jno
fcompl
frstor
xchg
push
cltd
lret
aam
data16
pop
or
lret
xchg
aad
rorl
adc
addr16
sbb
test
dec
cs
mov
sub
xchg
ja
test
std
popa
movsl
hlt
mov
ljmp
inc
fs
sub
sahf
movsb
fiaddl
les
stos
into
setp
daa
hlt
add
cmpb
xorb
mov
mov
fdivrp
lcall
or
push
addb
test
cmc
add
add
pop
cwtl
or
cmp
popa
cld
cmp
lret
cwtl
xlat
sub
ficomps
sbb
popf
mov
lcall
in
add
pop
enter
add
pop
or
inc
fs
pop
xchg
pop
leave
xchg
xchg
hlt
inc
sbbb
sub
addr16
cmp
push
xchg
rcrb
daa
push
lahf
sub
subl
aaa
xchg
add
inc
scas
outsl
adc
ret
dec
mov
jg
inc
xlat
stos
push
mov
inc
mov
test
ljmp
lcall
add
xor
pop
push
mov
push
call
mov
dec
inc
sahf
xchg
shlb
xchg
jge
cwtl
fisubrs
xor
xchg
stc
inc
mov
jg
mov
ret
into
aad
fwait
out
pop
push
xchg
cmp
mov
jg
cmp
xchg
or
lret
inc
movsl
mov
addr16
xchg
sbb
rcll
out
mov
dec
inc
cld
mov
pop
cmpsb
push
hlt
mov
fadds
mov
mov
movsl
imul
mov
jb
je
xacquire
into
pop
bound
mov
mov
lcall
lea
clc
fnsave
outsb
je
cltd
dec
inc
push
xor
mov
sbb
and
negl
add
pop
cmp
adc
aas
mov
adc
sub
add
lahf
dec
add
movsb
repnz
andb
xchg
add
ja
or
adc
loop
cmp
mov
sbb
add
inc
mov
push
jmp
bnd
mov
ret
xchg
push
mov
in
adc
push
sub
jne
sub
push
push
test
sahf
es
shrb
loop
ficompl
add
pop
jns
divb
inc
cmpb
mov
sub
inc
and
or
ds
jmp
xor
sub
xchg
push
test
xor
shll
jno
cmpsl
pop
push
cltd
push
mov
push
mov
sar
shlb
mov
jl
cwtl
cmpsl
sti
sahf
ror
adc
mov
shll
cld
bswap
xchg
and
imul
pop
mov
stos
cmpsl
aas
pop
or
es
mov
sub
mov
pop
sub
in
les
mov
cmc
and
orl
xchg
mov
pushf
imul
mov
pop
fcoml
mov
sub
imul
ss
push
and
lods
addr16
sub
shl
not
inc
fsubs
or
push
hlt
jl
and
add
icebp
add
mov
push
icebp
add
cmp
jnp
mov
insb
arpl
idivl
addl
out
cmp
loopne
cwtl
outsl
jl
data16
aam
out
jg
and
cmp
iret
fidivrs
dec
fstpt
leave
adcb
fsubrs
mov
inc
psrad
test
pop
mov
jge
pop
insl
push
sbb
data16
cmp
push
jg
out
pop
jl
test
jg
mov
lds
int3
sbbb
jns
jl
jl
ljmp
ret
adc
adc
pushf
pop
in
nop
mov
cld
loop
mov
adcb
leave
cmp
gs
mov
inc
add
in
mov
mov
lods
push
adc
pop
cld
pop
sbb
insb
or
fstpt
cmp
sti
xchg
outsb
test
jne
imul
sub
and
dec
in
sub
notl
add
pop
jge
stos
mov
subl
and
mov
not
or
cmpsb
rorl
mov
mov
fistpll
jo
fmuls
roll
push
xor
xchg
stos
repz
div
xchg
xor
xchg
or
xlat
mov
nop
pop
adc
outsb
push
pop
sbb
ja
mov
lret
addl
jg
daa
xchg
pop
push
pop
and
push
xorb
jp
jecxz
adc
push
movsb
push
arpl
les
roll
sbb
cmpsb
pop
pushf
leave
or
pop
js
and
sbb
pop
cwtl
cmp
outsl
or
testb
nop
pop
jmp
mov
mov
popa
inc
xor
mov
aam
fisttpl
je
and
cmp
lahf
int
notl
test
outsb
dec
inc
xor
test
xchg
icebp
lcall
in
jnp
out
adc
jo
je
inc
and
loope
or
pop
mov
ret
mov
push
adc
inc
mov
adc
pop
pop
dec
nop
pop
iret
dec
movb
ret
jg
pusha
sbb
and
mov
sahf
jg
sahf
das
jo
sti
rcrb
lcall
xchg
addb
lret
and
xchg
sbb
mov
shlb
xchg
jns
repnz
lea
jo
sub
jge
loop
pop
xorl
push
mov
shlb
jnp
cmpsb
mov
mov
imul
test
fwait
pop
rorb
adc
sahf
dec
mov
xchg
mov
subl
mov
jle
cmp
jp
outsb
loope
sbb
in
mov
shrb
xchg
lahf
mov
out
scas
or
test
iret
jns
xchg
mov
jb
jl
cmc
and
lret
xchg
mov
lret
pop
leave
cmp
jp
mov
pop
cmp
popf
jecxz
inc
xor
lds
call
pop
test
and
cld
mov
decb
adc
push
imul
jl
mov
filds
stc
push
cmpsb
cmpsl
divb
and
into
and
into
movl
cmp
add
addr16
mov
pop
repnz
fs
xchg
je
ret
push
xchg
jbe
stos
dec
sbb
andb
mov
mov
das
pop
rorl
insb
adc
inc
inc
mov
repnz
sub
push
nop
mov
fcmove
xchg
mov
stos
outsl
fnstsw
push
sub
adc
inc
add
loop
push
mov
mov
push
les
mov
scas
cld
out
inc
cmc
xchg
dec
stos
xor
jle
imul
mov
popf
pop
imul
xorb
cwtl
add
enter
mov
mov
jl
fbld
jb
jne
pop
mov
inc
lea
adc
sahf
mov
xor
push
mov
cwtl
push
add
or
sub
rcrl
lods
add
lds
lods
or
sbb
leave
sahf
hlt
inc
rcr
jnp
shlb
mov
nop
inc
repnz
jl
inc
inc
mov
cmpsb
push
aad
mov
adc
and
mov
xchg
sbb
ljmp
call
inc
jecxz
jb
sbb
pop
ja
mov
cwtl
cltd
xchg
push
or
stc
inc
stos
je
fcompl
add
les
repnz
aad
and
push
lcall
leave
jg
or
das
mov
repnz
aaa
lret
iret
stos
pop
nop
cmp
push
or
mov
inc
insb
out
xlat
leave
outsl
cmpsb
test
cmp
mov
repnz
mov
push
sarl
fmull
cld
sti
adc
subl
call
jl
mov
sbb
out
mov
repnz
std
lret
xchg
ss
daa
std
jo
jo
cmc
push
call
cmpsb
dec
mov
xchg
pusha
jbe
cmp
jle
repnz
or
xchg
mov
jg
mov
js
jmp
data16
neg
movsb
mov
nop
push
es
jne
xchg
jp
add
mov
mov
adc
adc
sahf
sahf
mov
outsl
in
jp
movsl
iret
add
imul
addb
add
add
pop
adcb
adc
cmpsb
push
inc
jle
cmp
jl
cmp
sub
adc
mov
ss
clc
inc
mov
int
test
xchg
sub
pop
and
push
mov
inc
cmp
mov
xchg
jo
jp
and
pusha
leave
insb
push
mov
xchg
sbb
subb
stos
cmpl
aad
movsb
ja
sbb
jmp
and
mov
negb
xor
pop
mov
dec
dec
xor
mov
ja
outsb
inc
ret
lods
adc
mov
sub
xchg
fcomp
adc
out
xor
leave
out
add
xor
rcll
data16
push
scas
xchg
cmpsl
or
ja
pop
dec
pop
xor
pop
pop
cli
inc
pushl
inc
sahf
jmp
stos
or
std
sub
out
stc
insl
push
dec
mov
mov
fdiv
lcall
cmp
sub
add
mov
sub
shlb
sub
mov
xor
push
jl
les
xchg
cmpsl
xchg
mov
repnz
fstl
sahf
lcall
shr
push
dec
ret
pop
mov
adc
inc
adc
add
jg
cmp
mov
js
xchg
mov
sti
inc
fstpt
jge
test
aaa
data16
mov
push
push
pushf
mov
fisubl
push
insb
sub
mov
pop
or
addr16
fsubs
xchg
fisttpll
leave
sarb
mov
js
aad
and
lret
jg
inc
addr16
adc
and
cs
fwait
stos
jge
sub
xchg
pop
cwtl
loop
popf
cltd
or
mov
xor
data16
sub
dec
sbb
adcb
push
out
or
mov
dec
test
pop
cmp
mov
aam
pop
fisubrs
aas
adc
sub
mov
stos
cmpsb
ret
add
adc
addb
cmpsb
imul
repnz
out
sbb
jp
jo
mov
dec
cmpsb
add
pop
fwait
aam
out
shl
jge
das
and
rolb
mov
mov
xor
fisubs
jbe
xchg
gs
rorl
sahf
inc
repz
mov
and
push
insl
sar
sub
sahf
jns
shlb
or
cmpsb
nop
mov
jne
rolb
aam
add
xchg
rol
and
push
or
pop
mov
xchg
mov
sub
jae
xor
dec
and
inc
ret
vfrczps
pusha
repz
adc
fisttpl
hlt
ja
pop
aam
pop
mov
or
mov
fwait
mov
cltd
mov
lods
pop
push
stos
mov
push
adc
lcall
push
xor
jnp
cli
xchg
xor
and
nop
repz
mov
jae
adc
fmul
into
jns
jns
lahf
xor
out
xchg
dec
fmuls
add
jle
fnstsw
dec
jl
xchg
test
bound
add
int
dec
rorl
call
push
cld
jbe
gs
xchg
pop
test
call
jg
mov
insl
dec
lret
repnz
imul
lods
xchg
lret
cld
mov
fsts
or
and
or
clc
or
push
movsl
ret
js
sub
fmulp
xchg
jmp
pop
sub
pop
sti
add
add
or
stos
fcomi
pop
mov
dec
sbb
pop
in
adc
push
leave
repnz
lret
into
iret
xor
test
xchg
cwtl
sub
push
ljmp
xchg
fdivs
nop
repz
outsb
pop
jp
mov
lock
and
jne
lods
xchg
adc
movsl
imul
imul
ds
repnz
cmpsl
flds
push
xor
test
add
xchg
sti
and
cmpsl
jge
jmp
repnz
es
add
push
sub
fcom
int
pop
inc
addr16
sbb
or
das
mov
add
lods
lahf
call
addl
jl
sbb
addr16
mov
push
xchg
mov
scas
addl
sub
js
pop
sbb
lods
sbb
faddp
cmpsl
out
inc
roll
mov
cmp
jb
inc
pop
rcr
dec
cmp
adc
xorb
aas
mov
or
push
cmp
mov
out
ds
push
inc
jb
inc
mov
mov
jg
aad
or
push
rolb
mov
outsl
push
in
and
lods
inc
out
jbe
mov
leave
xchg
xor
bound
fdivs
xor
nop
imul
push
sub
sbb
pop
daa
mov
call
jae
sahf
pop
dec
pop
test
mov
dec
mov
rcll
mov
sahf
repnz
pushf
jns
xchg
popw
jb
shlb
into
adc
push
pop
cmp
adc
sahf
add
sub
gs
jg
inc
lahf
cmp
jmp
add
test
xor
fildl
scas
imul
stos
es
punpcklwd
and
mov
push
push
roll
mov
incb
or
lahf
add
popf
xrelease
add
nop
loop
stos
mov
stos
adc
out
mov
fwait
jge
mov
movsl
jl
fisttps
pop
jo
xlat
or
fsubrl
inc
aaa
popl
push
or
mov
pop
daa
mov
mov
adc
pop
rcrb
push
sub
xor
in
cwtl
int
fwait
add
mov
xchg
cmp
mov
movsl
test
data16
sub
jnp
aad
jne
mov
cmp
shlb
sub
inc
mov
rclb
cld
xchg
inc
enter
lock
aas
mov
repnz
jb
scas
int3
and
outsl
mov
cli
cwtl
cmpsb
aam
cmp
aad
and
rol
fwait
push
or
cs
xchg
and
sbb
mov
xchg
adc
fildl
sahf
clc
out
mov
repz
jge
mov
push
repnz
cli
adc
xor
xchg
call
mov
jo
sub
mov
mov
int3
mov
add
dec
filds
xchg
inc
inc
repnz
jp
popf
fstl
mov
cmp
xor
imul
andl
out
mov
jl
lds
inc
xchg
jg
clc
mov
or
pusha
push
or
xchg
repnz
subb
imul
xchg
lods
inc
xchg
movl
add
repnz
movsb
ffree
neg
sbb
lcall
loop
ljmp
negb
cli
mov
aas
jae
xchg
aam
mov
outsb
adc
push
push
movsl
repz
ja
cltd
xor
sbb
stc
data16
xor
leave
xor
lret
popf
cmp
ficomps
pop
ret
xchg
and
hlt
scas
xchg
inc
dec
xchg
lret
loope
sbb
inc
dec
mov
push
aam
cld
movsb
fdiv
ret
or
scas
cmp
enter
push
scas
or
dec
aam
adc
or
push
lea
pushf
scas
stc
add
add
in
fadds
mov
rcll
or
jl
ret
movsl
adc
jno
cld
lcall
lds
mov
scas
test
cs
adc
aam
aas
add
scas
repz
xchg
adc
add
cs
push
adc
neg
int
xchg
ds
xor
sbb
jg
cld
test
fidivl
mov
jae
int3
repz
or
out
dec
enter
shrl
in
xchg
fisubl
inc
push
push
rclb
xchg
bound
mov
testb
cmp
push
adc
pop
push
lahf
into
push
and
inc
or
push
scas
cmp
cmc
dec
jae
add
mov
mov
out
sbb
mov
jno
cmc
or
mov
lret
mov
lods
lcall
mov
mov
outsl
repz
insb
jbe
ja
jg
imul
pushf
out
je
clc
mov
lret
sub
xchg
stos
jb
out
je
loop
fisttpll
data16
shl
mov
pushf
mov
lods
cmp
into
push
fcomps
ja
lcall
push
adcb
les
ror
add
insl
push
sbb
push
mov
mov
rol
stos
popl
inc
lcall
mov
jecxz
jno
pusha
mov
aam
aad
sub
daa
idivb
loopne
cld
jo
sarb
lcall
andb
icebp
inc
xchg
jb
stos
jl
push
frstor
and
cmpsb
sbb
mov
push
push
xchg
jb
in
jge
outsb
sub
test
repnz
incl
adc
inc
les
test
aad
das
adc
or
fwait
and
pop
sbb
es
mov
repz
int3
repnz
pusha
push
fstpl
stos
call
frndint
pushf
fwait
out
popf
sahf
push
icebp
es
leave
cmp
dec
xlat
or
insl
mov
jns
jae
add
mov
mov
inc
dec
jge
or
push
xchg
jg
lock
repz
or
int
jb
lods
enter
xchg
cmpb
push
aad
cmp
lods
cmp
rorl
ficomps
or
mov
imul
push
rcl
es
divl
ljmp
aaa
pusha
pop
mov
psrlq
mov
stos
jg
gs
ret
add
sahf
lea
fisttpl
xor
cmp
mov
sbb
push
xchg
push
mov
fwait
xchg
jae
popa
sub
pushf
fsubrs
lahf
call
xchg
push
ficoml
adc
and
pushf
scas
push
nop
cmp
inc
pop
mov
jb
mov
int3
mov
out
xor
push
xlat
shll
push
sbb
sub
pop
imul
mov
imul
shr
and
pushf
int
or
fs
mov
mov
or
mov
sarl
int
mov
mov
xchg
inc
adc
aas
sbb
dec
jg
mov
push
pop
xorb
cmc
xchg
xchg
icebp
aaa
ret
push
data16
push
jbe
test
jne
sahf
shl
lods
aad
out
jae
test
lahf
loopne
fucomp
jns
xchg
mov
xchg
push
mov
iret
mov
fbstp
push
xlat
test
pop
jo
lods
int3
dec
fisubrs
mov
mov
sbb
or
jne
int
push
cmpsb
insl
add
mov
mov
pop
add
xor
pop
mov
fsubrl
aam
imul
cltd
lea
mov
fsubrp
xorl
adc
loop
mov
jnp
stc
fcomps
insl
xchg
iret
shll
jne
in
lods
jno
fs
mov
jo
sub
jb
les
xchg
cli
cwtl
in
mov
jg
pushf
lahf
out
fcomp
mov
in
sbb
xchg
add
addl
popa
pop
mov
push
or
movsl
cltd
mov
mov
adc
fisttps
fdivl
pop
dec
mov
mov
xchg
pop
repz
sub
cmp
roll
jne
inc
mov
push
push
add
ljmp
hlt
mov
iret
pop
inc
mov
cwtl
add
push
fcmovb
mov
call
das
jmp
popl
repnz
pop
adc
jmpw
dec
test
cmp
and
enter
loop
call
push
sub
sbb
pop
icebp
adc
repnz
call
mov
sbb
test
mov
lock
jecxz
or
xchg
xchg
mov
xchg
popa
movsl
clc
xor
leave
cmp
in
fsts
dec
xchg
int3
push
push
mov
repz
icebp
pop
cli
out
nop
push
xor
push
call
xchg
ljmp
fbstp
pusha
jg
push
fdivr
shlb
sub
fwait
ret
and
lods
xchg
pop
push
adc
imul
ret
lods
cld
xor
sub
into
lods
data16
pop
shlb
xchg
or
mov
mov
fists
in
sarl
lock
mov
fldenv
mov
xchg
call
dec
icebp
nop
jbe
lds
add
fdivr
pop
clc
mov
inc
jne
es
sahf
sbb
mov
loop
xorl
out
clc
xor
fldenv
mov
push
add
aas
js
nop
mov
int3
mov
xor
and
cmp
add
sub
lcall
js
sub
int
inc
leave
xchg
sbb
popa
rcrl
outsl
sbb
shl
mov
nop
pop
jge
mov
sar
cwtl
pop
lds
mov
adc
negl
rep
ret
jcxz
daa
or
imul
or
mov
movsl
std
inc
scas
popl
fsts
mov
push
mov
shrl
and
mov
jge
test
pop
push
inc
jl
mov
pop
or
aaa
cmc
ja
jg
int
data16
add
psubsw
mov
cmp
mov
les
hlt
mov
loop
mov
jno
jae
movsb
sarb
jo
int
inc
orl
mov
call
flds
lock
push
mov
sub
hlt
jp
mov
sbb
add
pop
hlt
mov
xlat
lods
inc
das
mov
pop
nop
cmp
pusha
dec
push
push
sbb
mov
iret
outsb
es
sarb
mov
jmp
cli
fincstp
cwtl
sahf
inc
iret
mov
mov
fisubs
xchg
mov
orl
rorb
jae
sbb
movsl
dec
rol
sub
inc
iret
mov
ljmpw
lods
dec
jb
leave
aad
aas
popa
repz
mov
mov
outsb
dec
outsl
push
sub
inc
lods
adc
data16
inc
lods
and
dec
and
mov
int3
int
cli
xor
mov
adc
roll
push
jp
stos
xchg
xor
inc
sub
push
call
addl
arpl
aaa
xor
les
sahf
shrl
or
jmp
out
imul
dec
cltd
ficompl
jo
lea
fnstcw
pop
stos
add
mov
mov
jae
push
push
loop
iret
cs
into
daa
mov
push
push
int
xchg
mov
into
stos
aaa
xchg
jmp
xor
xchg
aam
or
and
and
int3
push
jp
xchg
lods
aas
psubsw
div
dec
xchg
mov
enter
repz
fistpl
add
sub
nop
repz
and
test
in
repnz
mov
push
dec
jb
mov
xchg
cs
scas
cli
pop
and
loopne
sub
sahf
int
inc
pop
rclb
cmp
push
sbb
xor
fstl
in
mov
ret
popf
mov
jl
fimull
sub
int3
fidivrl
sbb
insb
or
sub
sbbb
shl
push
sahf
ret
adcb
push
pop
add
mov
repnz
pop
outsl
data16
push
je
xor
cli
in
jo
adc
pusha
addr16
fdivr
leave
cmc
fsubl
fxch
inc
in
mov
or
sub
mov
mov
push
mov
xor
or
clc
or
movb
push
mov
fstl
movsl
movsl
pushf
imul
adc
xchg
shrb
mov
push
addb
scas
imul
movsb
ret
jno
push
je
inc
mov
inc
and
aas
inc
inc
stos
ja
cwtl
imul
pushf
cmp
fsubl
repz
test
mov
jg
fcmovb
xchg
push
scas
out
lret
imul
ret
sbb
lock
push
mov
inc
fnsave
movl
jo
repnz
add
push
mov
push
shrb
mov
or
movsb
and
aam
jp
fptan
inc
cmpsb
sbb
imul
stc
push
jmp
test
jp
out
mov
pop
inc
dec
repz
or
insb
xchg
mov
mov
mov
pop
cmp
lock
xor
shrl
mov
ror
movsb
cmp
daa
bound
test
or
aam
mov
adc
pop
and
jno
mov
push
push
xchg
sub
mov
and
sahf
pop
rcl
mov
cli
xchg
inc
out
aad
sub
insb
add
push
jp
or
sub
jne
mov
mov
pop
sbb
cld
xchg
repz
sub
xlat
inc
cmp
in
add
adc
dec
mov
push
pop
imul
jb
outsb
popl
pop
dec
push
fwait
sbb
adcl
jnp
inc
mov
push
shl
xchg
repz
cmp
movhlps
adc
mov
jp
sub
xlat
sub
scas
iret
xchg
add
xchg
loop
mov
push
push
mov
xchg
push
or
ss
pop
push
dec
mov
test
xchg
or
push
out
mov
push
xchg
inc
mov
movsl
mov
dec
aas
roll
sub
rolb
dec
pop
or
nop
iret
push
lret
add
push
stos
push
or
inc
out
icebp
lods
inc
into
std
dec
push
jecxz
sub
xchg
push
xchg
inc
cmpsb
into
cmp
scas
mov
add
add
leave
data16
push
mov
xor
xchg
adc
or
and
adc
pop
mov
stos
push
xlat
rclb
outsb
xor
movsl
lcall
xchg
sub
adc
int
xor
testb
hlt
mov
add
mov
idivb
push
stos
sarl
aas
lret
or
les
sahf
cli
jecxz
mov
scas
jb
int
outsl
pop
test
data16
cmp
repz
xchg
rcr
nop
sahf
jbe
and
enter
enter
aaa
out
loopne
add
or
mov
fs
lret
or
nop
push
or
insl
cmp
test
movsl
call
or
xor
jge
pop
rcr
mov
cmp
out
push
dec
loope
jmp
pop
push
lods
pusha
rorb
sti
pop
cwtl
bound
aam
lods
adc
inc
jp
xchg
cmp
and
outsb
data16
xchg
adc
cmp
test
fnstenv
lods
mov
clc
xlat
rcll
or
es
mov
data16
jnp
mov
lahf
jbe
test
hlt
cmp
data16
cmp
add
adc
mov
and
mov
lcall
jl
pushf
jbe
add
xchg
xchg
dec
shlb
into
xchg
pop
pop
push
repnz
inc
sbb
xor
in
aam
sbb
xchg
and
cmpl
adc
ss
addb
cli
push
nop
add
mov
mov
cmp
push
sbb
xchg
adc
push
mov
cwtl
popf
pop
mov
lock
cwtl
sbbl
call
in
lret
or
push
sub
mov
mov
movsb
enter
inc
add
cmp
sub
lods
push
cli
sub
jne
rorl
int
xor
rcrl
int
aad
pop
ret
xchg
cmp
rcll
aad
ret
fidivrl
mov
fcmovnu
fxch
xchg
xchg
not
aas
cmp
aas
scas
fildl
push
and
jecxz
add
loope
mov
mov
mov
cmp
bound
inc
push
xor
sub
sbb
xchg
mov
push
cmp
mov
inc
add
or
inc
mov
test
mov
mov
xchg
in
or
push
or
sbb
xchg
pop
test
or
mov
daa
jbe
enter
popf
mov
jge
lahf
leave
sahf
imul
add
insb
mov
ret
shll
mov
adc
add
ss
inc
sbb
inc
setl
enter
rolb
jbe
cmpsl
push
xor
push
sbb
negb
push
sbb
mov
enter
lret
cmpsb
stos
xchg
or
inc
hlt
add
xor
adc
dec
or
sbbb
dec
fcomip
rcrl
dec
xor
mov
sbbb
mov
sbb
push
inc
sti
or
dec
divl
mov
sbb
shlb
xchg
repz
mov
cmp
es
adc
andl
int3
cmp
scas
scas
aas
cmp
data16
sbb
jne
and
subl
sahf
push
adc
add
and
jl
hlt
push
out
jg
das
dec
and
xchg
mov
stos
mov
inc
ret
adc
jno
push
aam
push
nop
mov
cld
cli
rcrb
inc
aas
shll
xlat
xchg
inc
cmp
mov
outsb
mov
push
lcall
pop
jmp
xchg
pop
jg
imul
or
ret
lcall
pop
add
dec
sub
add
adc
xor
arpl
xor
mov
data16
mov
mov
fistpll
pop
movsl
nop
pop
outsb
sbb
dec
sbb
push
jb
jl
inc
cltd
adc
in
jne
dec
pop
movsl
push
pop
test
jecxz
jns
adc
add
or
push
push
jo
scas
pop
or
test
and
scas
jbe
xor
movsb
jg
fsubrs
adc
sbb
lahf
xchg
push
test
xchg
and
xchg
sbb
xchg
sahf
adc
mov
ja
or
loopne
push
xchg
inc
stc
lahf
mov
test
cltd
or
mov
jnp
mov
jns
std
pop
cmp
imul
pop
mov
or
scas
xchg
inc
push
test
std
aam
out
sbbb
sti
data16
outsb
outsb
leave
inc
mov
nop
subb
push
iret
lret
jmp
in
pusha
mov
mov
insb
inc
xor
icebp
pushf
xchg
pop
add
loop
pop
shlb
mov
push
adc
orb
aad
adc
lea
and
adcl
loopne
dec
ja
or
pop
mov
push
ljmp
in
movsb
lods
sbb
cwtl
dec
push
mov
nop
mov
movsb
mov
in
shl
mov
cmpsl
xchg
dec
cmpsb
mov
lods
movsb
dec
fbstp
cmpsb
inc
or
sub
xor
repnz
shlb
sub
inc
inc
sahf
mov
aad
sbb
mov
stos
js
addr16
adc
lods
pop
dec
out
and
ds
ud1
adc
push
in
xor
test
cld
lock
sbb
mov
fyl2x
jle
mov
or
mov
inc
jno
xchg
sub
push
jecxz
sbb
jl
adc
mov
ret
xchg
sarb
add
divb
push
rorl
popa
add
repz
pop
out
cltd
ds
repnz
rcll
sbb
adc
loope
mov
xor
inc
add
sti
xchg
lret
push
xchg
cmc
mov
push
pop
dec
xor
ljmp
leave
int3
push
sub
dec
repz
xchg
icebp
pop
aaa
push
sarb
or
int
or
mov
ja
push
mov
jp
jnp
cltd
pop
icebp
movsb
adc
shlb
xor
imul
mov
mov
andb
mov
jne
or
nop
das
cmp
hlt
repz
out
mov
pushf
pop
into
nop
mov
inc
or
dec
negb
xor
cmp
xchg
int3
mov
out
add
mov
mov
stc
leave
mov
hlt
lods
push
mov
cmc
stos
movsl
aad
sti
dec
mov
jne
inc
cmp
lret
mov
cmc
mov
mov
orl
sbb
add
xchg
mov
addr16
xlat
adc
pusha
out
xor
mov
je
nop
test
wbinvd
pop
mov
mov
fsubrl
xor
mov
adc
or
adc
bnd
cwtl
in
push
cmp
and
cmp
cmp
and
xchg
sti
or
scas
lcall
xchg
xlat
push
sub
mov
pop
testl
daa
add
cmp
pop
aas
fadds
add
xor
mov
fimuls
or
and
push
dec
inc
sub
mov
mov
mov
and
addr16
lret
mov
pop
inc
addr16
les
push
nop
sbb
std
arpl
lock
fwait
sbb
adc
pop
call
aam
mov
test
xchg
inc
mov
in
lods
int3
mov
xchg
cmp
and
out
ret
shlb
hlt
mov
frstor
sbb
sti
cs
cmc
cli
or
lahf
data16
cld
xchg
xchg
clc
pop
insb
popa
xor
push
insb
add
loopne
adcb
dec
movsb
movsb
mov
sub
out
mov
ja
mov
adc
xchg
call
jl
test
pop
rcrb
jecxz
push
jl
sub
rcll
cmp
mov
xchg
call
ds
or
nop
lret
hlt
mov
sbb
lret
mov
cld
inc
loop
xchg
test
add
jb
and
xchg
cmpsb
cli
les
out
dec
hlt
inc
jg
int3
cmpb
or
test
push
imul
cs
mov
mov
pop
xchg
add
in
lret
mov
sub
xor
aas
into
dec
test
out
inc
inc
je
mov
jg
xchg
inc
push
imul
xchg
test
fiaddl
adcb
imul
xchg
xlat
and
mov
mov
popa
xor
insb
push
mov
inc
movsb
xchg
pushf
test
sbb
xchg
sti
push
fnstenv
jp
sub
orb
mov
dec
shll
arpl
cmpsb
test
jp
mov
das
movsl
pusha
fsubrl
test
xchg
popf
push
xchg
scas
jmp
mov
xchg
sbb
pop
jge
xchg
pop
outsl
scas
cmpl
cmp
pop
push
je
fsubs
lods
jge
shrb
lock
dec
jmp
and
inc
jne
daa
sbb
sbb
mov
or
into
das
pop
daa
stos
into
and
adc
test
in
repnz
pop
fsubr
sub
pop
jmp
rcr
mov
aam
aad
rcrl
pushf
hlt
scas
mov
into
out
mov
mov
adcl
lcall
add
xchg
mov
adcl
ret
pop
push
push
push
or
jl
push
mov
jg
test
stos
pop
or
lahf
shll
cwtl
orb
imul
add
testb
aad
add
dec
jge
lcall
sub
mov
inc
inc
addl
lcall
scas
adc
xor
xchg
sub
dec
out
ja
nop
jb
jbe
xlat
inc
nop
mov
inc
push
sarl
jl
out
push
cmpl
add
pop
or
push
cmp
lds
fildl
or
adc
imul
adc
aad
cmp
inc
fmull
cmc
push
int3
subl
sbb
xor
out
adc
aad
sub
aad
push
je
or
fs
jp
jg
repz
pop
test
sbb
lea
push
das
push
shl
xchg
cli
or
and
xor
push
push
mov
ret
sahf
sub
ss
lcall
sub
mov
xchg
subl
out
jo
mulb
mov
adc
shll
mov
movsl
incl
int
iret
hlt
movsb
sbb
out
int
xor
cmpl
pop
push
aad
pop
or
cmc
sub
cmp
mov
lods
push
test
xchg
xor
xchg
mov
push
add
mov
sbb
lcall
xor
cmc
sbb
data16
insl
shrb
loop
popa
leave
lcall
cmpsl
sub
mov
jg
loop
int
cltd
pop
popf
mov
imul
lock
mov
sti
or
add
jg
test
xor
mov
stos
rol
out
lea
arpl
mov
stc
xor
nop
cwtl
add
jl
enter
inc
test
sarb
pop
push
xchg
movsb
insl
addr16
xorl
pop
add
cltd
pop
mov
mov
and
jbe
fnstcw
iret
xchg
or
cmp
xchg
in
dec
xchg
aad
xchg
or
mov
out
into
inc
test
jecxz
rcrb
push
mov
sahf
cmpl
cs
lea
inc
push
das
push
add
mov
out
xchg
pop
and
xor
shrb
dec
loop
scas
dec
mov
insb
test
inc
test
movsb
xor
push
pop
add
js
ficomps
js
scas
mov
daa
cmpsl
ss
negb
xchg
test
add
pop
imul
cmp
jge
mov
negb
out
imul
addb
xor
imul
mov
push
movsl
fldenv
js
lods
push
xchg
xchg
lcall
lret
sub
js
test
jae
movsl
push
lret
xchg
daa
rclb
push
jnp
nop
inc
mov
cmpsl
jge
data16
push
insb
popa
sbb
and
sub
add
inc
sub
xchg
call
scas
data16
loopne
cli
jns
int3
dec
insb
sbb
add
daa
mov
in
adc
xchg
jbe
addr16
and
sbb
xchg
jl
aas
loop
cmp
mov
jmp
add
pop
jmp
cs
and
lods
insl
aad
enter
sbb
lea
bound
dec
add
lcall
mov
aas
aad
inc
stc
ljmp
lods
pop
cmpsb
clc
leave
xchg
push
add
adc
mov
iret
fnstcw
subb
cmp
inc
rol
inc
sahf
xlat
mov
scas
and
push
dec
repz
cmp
or
sbb
idivb
roll
push
mov
cld
lods
sti
pop
rcr
xchg
aam
sahf
js
and
out
xchg
into
rcl
pop
or
loop
rclb
imul
std
push
add
lcall
xchg
mov
xchg
sti
bound
into
ja
mov
fwait
jp
shr
add
popa
mov
nop
xorb
mov
fadds
mov
xorb
not
dec
stos
push
inc
mov
jnp
xor
inc
repnz
inc
inc
jbe
sbb
adc
and
scas
push
cwtl
cmp
pop
inc
repnz
pop
shl
mov
aad
in
xchg
aad
mov
mov
mov
aad
jp
cmpsl
mov
push
sub
mov
scas
jnp
or
call
lock
popl
addr16
mov
push
sub
cmc
dec
std
sbb
mov
je
push
push
sub
sub
xor
ljmp
int3
popf
lods
add
sub
test
jg
pop
insb
add
hlt
mov
mov
xchg
insb
pusha
ret
scas
lcall
les
mov
or
sub
into
out
movsl
fidivl
or
stos
leave
mov
lret
mov
jl
dec
mov
mov
cmp
cmpsl
call
xchg
cmp
es
mov
mov
cmp
pushf
add
mov
lods
inc
ror
cmp
jecxz
pop
pusha
push
xchg
dec
cs
mov
mov
push
repz
adc
ret
cmp
xchg
aas
sub
mov
mov
mov
add
push
cli
cld
call
mov
adcb
cmpsb
xchg
daa
out
sbb
xor
divl
cmp
bound
push
fwait
xchg
arpl
lods
cli
enter
hlt
sub
test
mov
jle
cli
xchg
data16
fs
or
xor
push
pop
call
icebp
in
adc
bnd
imul
mov
fcmove
les
in
in
mov
and
addr16
xor
flds
cmp
inc
in
pandn
jg
jb
xchg
push
jne
mov
dec
sbb
outsl
adc
shlb
xchg
je
fdivrp
pop
and
jno
sbb
xchg
ret
jmp
fwait
pop
sub
loopne
cmpsb
jae
push
nop
mov
aad
mov
enter
adc
aam
jb
negb
lods
jp
or
dec
mov
stc
push
enter
sub
orb
es
cmp
mov
mov
sub
add
repnz
int
cld
into
add
mov
inc
ja
inc
and
xor
jo
mov
sub
push
dec
fxch
push
jne
pop
popf
adc
jl
hlt
lret
and
mov
xor
subps
push
stos
iret
into
out
mov
dec
lods
xor
addr16
movsl
mov
push
sbb
pop
nop
xor
jecxz
xchg
ja
fcomps
fwait
cmpsb
cmp
sahf
mov
test
pop
rorl
adc
in
and
sahf
cmp
or
mov
cmpsb
out
mov
add
add
shl
cmp
inc
mov
es
inc
push
push
xor
jl
dec
sub
nop
lea
call
xchg
je
mov
sbb
push
roll
ja
push
cld
ja
mov
in
out
mov
or
repnz
jns
pop
insb
push
stos
je
fldenv
movsl
cld
or
push
add
push
sbb
lret
mov
insb
and
or
xorl
mov
icebp
pop
mov
mov
into
stos
mov
sbb
les
push
outsb
mov
push
jnp
cmpsb
mov
jb
mov
outsb
push
or
xchg
xor
fisubs
rorl
xchg
mov
adcb
or
inc
push
fcmove
mov
movsl
jb
insl
add
mov
test
xchg
test
aas
mov
test
sbb
out
jp
std
mov
into
cmpb
mov
xchg
je
aas
xchg
pop
jg
les
testb
sarb
ret
test
scas
pop
addr16
lret
into
cmc
jmp
test
ficoms
shlb
pop
push
test
add
push
lcall
jo
fadd
xchg
std
mov
sub
cmp
hlt
jbe
int
mov
xor
jnp
sub
inc
mov
push
sar
mov
in
push
sbb
into
add
mov
cmpsl
inc
xchg
out
cli
cmpb
call
mov
out
mov
rcrb
sbb
cmp
mov
xchg
dec
or
add
prefetcht2
sbb
notb
leave
adc
cmpsb
scas
addl
sarl
fcomp
je
insl
jge
add
stos
in
dec
scas
aad
dec
imul
test
add
and
movl
xchg
das
shrb
fs
xor
and
mov
xor
mov
jo
or
out
outsb
movsb
insl
mov
mov
cmp
jp
fdivl
aam
mov
and
orl
push
arpl
mov
lret
sahf
fwait
inc
enter
adc
push
scas
adc
and
test
aam
xchg
xchg
adc
adc
aad
jle
jge
imul
inc
cmp
std
nop
leave
dec
adc
dec
fdivp
out
ret
mov
mul
int
ret
out
pop
js
push
lock
iret
cmpsb
lods
xchg
loop
mov
cmp
inc
call
sub
mov
mov
jb
and
es
addb
jge
pop
fisttpl
pop
mov
js
mov
lcall
inc
test
les
je
pop
pushf
movsb
insb
mov
into
loope
dec
out
test
popf
xor
mov
mov
or
mov
cmpsl
test
dec
adc
add
push
or
push
loop
sbb
xchg
fwait
icebp
xchg
rcrl
out
push
inc
xchg
xor
mov
cmp
repnz
mov
test
pop
mov
dec
cmp
push
pop
mov
xchg
pop
cmp
or
fimuls
xrelease
cwtl
push
int
dec
movsl
sti
bound
xchg
dec
mov
xchg
shll
xchg
mov
mov
lods
cmpsb
jge
sub
repz
test
ret
ljmp
jl
mov
fcompl
xor
dec
in
inc
in
inc
xchg
inc
mov
mov
addr16
xchg
xchg
mov
or
lcall
sahf
push
and
fcoml
pop
out
pop
stc
leave
sbb
cmc
int3
sub
cmpsb
push
xchg
rcrl
fildl
xchg
sti
cmc
push
fwait
repz
mov
jb
adc
mov
lret
jae
adc
xor
cmp
and
js
and
xchg
cmp
and
sbb
imul
adcb
jmp
pop
jp
adc
cmp
xchg
jp
push
sahf
loop
jp
or
pop
adc
jl
or
fsts
inc
or
or
sub
inc
sti
andl
je
test
lcall
imul
jmp
adc
xchg
aad
fists
sub
push
pop
inc
adc
or
loop
jl
xor
mov
xchg
cmp
adc
push
into
loope
inc
cltd
or
xchg
sbb
fnstcw
popa
nop
jns
repnz
xchg
in
adc
test
or
fldl
ss
aas
ret
jp
sub
add
mov
sti
out
mov
popf
ljmp
jbe
inc
sub
add
shrb
fisubrl
mov
or
jg
arpl
pushf
xchg
ret
test
xor
push
mov
fisubrl
push
addr16
xchg
jae
es
jno
imul
ret
jl
pop
addr16
test
or
mov
xchg
inc
mov
mov
mov
mov
iret
in
repz
push
xchg
jo
cmpl
je
aaa
dec
icebp
loopne
adc
dec
out
jae
sub
fwait
cmpsl
jg
add
inc
xchg
int3
sti
add
push
jo
cmpsl
loopne
into
cwtl
dec
push
sbb
push
fcompl
push
inc
jg
insb
sahf
imul
out
xchg
mov
jge
loop
xchg
push
xchg
add
scas
sbb
sub
add
mov
xchg
ret
add
cmpsl
dec
pusha
stos
daa
loop
and
adc
sti
add
dec
sti
les
mov
or
icebp
outsb
lods
cmpsb
add
sbb
mov
xchg
out
push
or
mov
cwtl
jg
xchg
in
mov
in
inc
mov
mov
addl
cmpsl
outsb
std
add
sub
dec
sahf
cmp
ss
pop
icebp
mov
xchg
pop
pop
mov
addr16
fildl
push
jbe
int
insl
push
jbe
int
sarb
add
aas
adc
mov
cmp
frstor
push
lock
mov
lods
and
int3
jns
and
and
xchg
jno
std
add
mov
pop
mov
jo
rcll
dec
test
add
xchg
xor
int3
push
pop
gs
sub
addr16
lods
adc
pop
dec
cs
mov
in
leave
cmp
or
lods
jbe
xchg
je
push
push
inc
jg
aad
icebp
out
jbe
sbbb
mov
adc
inc
movsb
xlat
loopne
jmp
adc
adc
add
cmp
bound
outsl
mov
add
sbb
scas
jge
mov
xlat
adc
imul
dec
iret
hlt
aas
cmp
inc
jnp
or
mov
dec
push
imul
dec
fbld
sbb
jp
pop
data16
push
insl
in
fisttps
mov
insl
jno
push
cld
jae
mov
mov
add
push
imul
test
sbb
orl
lods
das
push
push
xchg
cmpsl
xchg
andl
ss
scas
addr16
jle
mov
pop
mov
test
mov
popf
inc
or
insl
fdivrs
sahf
lock
aam
jno
int
hlt
hlt
push
add
lret
scas
ja
dec
cld
add
cltd
aam
inc
shl
and
pop
je
mov
fistpl
mov
xor
mov
fmull
les
ret
mov
aas
cltd
ds
mov
test
sub
jnp
pop
mul
mov
mov
xchg
mov
cmp
int3
push
cmp
adc
mov
sarl
xchg
xchg
cwtl
rcrl
and
jbe
cmpsb
loopne
xor
cmovbe
sbb
push
xchg
popf
ss
sti
ds
inc
pop
cwtl
popl
je
or
inc
dec
add
enter
shrb
popf
xor
insl
dec
xchg
xchg
mov
fdivrl
inc
dec
mov
stos
ret
or
rol
test
adc
ds
fistl
lea
sahf
loopne
mov
inc
lcall
test
sbb
addl
stos
ret
clc
mov
lahf
pop
int
sub
xchg
mov
jb
xor
add
xlat
nop
lahf
es
les
jb
pop
pop
stc
aas
sbb
es
test
lock
roll
xchg
xchg
or
ds
mov
push
bound
lahf
nop
cmpsl
orl
stc
cmp
std
je
hlt
cmpsb
adc
and
dec
int3
stos
push
push
adc
addr16
push
mov
sub
dec
cld
jno
adc
pop
pop
nop
aad
xchg
repz
roll
std
enter
aaa
pop
or
push
movsl
js
int
or
pop
mov
add
pop
stc
xor
inc
mov
lea
sbb
adc
ficoml
stc
cs
je
call
push
jo
scas
aam
sub
ret
mov
stos
dec
jmp
mov
setnp
fdivl
adc
stc
xchg
stos
rolb
mov
stos
xchg
popf
loopne
push
in
cmp
dec
cmp
push
ljmp
js
inc
icebp
iret
scas
ret
hlt
push
aad
mov
add
fstpt
incb
push
adc
pop
inc
xchg
pop
mov
mov
lret
push
loop
in
adc
sahf
in
mov
mov
pop
inc
xchg
nop
int3
outsl
lret
lcall
hlt
aam
clc
leavew
adc
lea
or
stos
repnz
mov
ret
subb
jg
cmpl
sti
push
sbb
outsb
fs
out
xchg
sarb
add
inc
jg
clc
lret
sahf
nop
nop
into
push
sbb
and
pop
stos
sub
jg
repnz
and
out
add
or
push
inc
out
sbb
enter
mov
sub
mov
ss
jb
pop
cli
cmpsl
mov
adc
leave
dec
push
push
sbb
jg
scas
stc
sub
cs
aad
fidivrs
and
movsl
mov
icebp
push
inc
mov
out
lea
ret
lcall
leave
xchg
out
mov
push
jp
nop
ds
fs
mov
mov
leave
ljmp
or
frstor
xchg
imul
cli
cmp
cmpsl
jle
imul
cmp
insb
push
into
sub
mov
jnp
aad
push
inc
lds
lret
test
xor
into
or
mov
jns
outsb
sub
xchg
mov
out
mov
loopne
nop
fldl
out
mov
fsubrl
lods
outsl
mov
sbb
inc
les
sub
cmp
sti
js
adc
fnstenv
jle
push
sub
mov
sar
lret
xor
insl
xor
shl
je
nopl
add
xor
shll
ja
out
mov
jge
sbb
out
push
dec
cld
jecxz
mov
mov
jb
mov
cld
pop
pusha
ljmp
add
adc
lods
js
fadds
inc
adcb
cmp
cmp
adc
inc
jns
scas
icebp
or
fisubs
sub
outsl
ret
mov
pop
jl
loop
mov
pop
jae
sbbl
pop
jg
ds
jb
xchg
outsb
jmp
mov
icebp
xchg
mov
or
adc
xchg
fnsave
pop
mov
out
fisubl
add
clc
sbb
push
loopne
incl
stos
ljmp
mov
rcl
inc
into
push
mov
push
lret
fstl
pushf
mov
ret
sbb
pop
push
jae
call
inc
or
outsb
dec
sub
and
es
push
and
mov
adc
jg
outsb
cmp
cmpsl
push
xor
mov
iret
pop
pop
adc
cmpxchg
aad
inc
orb
inc
cmp
dec
push
cmp
adc
pushf
mov
mov
ret
xchg
xor
mov
fstps
sbb
std
andb
pop
out
ret
inc
mov
adc
mov
dec
fiaddl
mov
les
cmpsb
or
jae
ret
inc
cmp
push
lahf
inc
xchg
mov
mov
repz
enter
xchg
xchg
and
hlt
xchg
cmp
imul
push
das
aas
lea
lahf
pop
jne
faddl
push
sbb
xchg
addl
and
mov
jns
mov
repnz
mov
bound
cld
or
mov
xchg
xchg
andb
sub
lcall
and
cmp
repnz
adc
pop
bswap
xchg
sbb
mov
mov
mov
xchg
sahf
cwtl
xchg
pop
nop
je
mov
ss
jg
jno
leave
adc
jne
sub
mov
cld
int3
fistl
cmpsb
fsubrl
ret
add
sub
adc
xchg
lds
xchg
cmp
fstl
mov
or
repnz
les
sbb
jbe
xor
xchg
or
pop
pop
cmc
andb
sub
cmp
pop
xor
mov
outsb
scas
movsl
and
es
ljmp
cltd
ds
dec
cmpsb
stos
push
mov
test
jno
lahf
adc
in
sub
out
retw
mov
inc
fsubr
push
adc
push
cmp
xchg
rolb
sbbl
sbb
mov
out
leave
imul
xchg
aam
dec
imulb
orl
aad
data16
and
sbb
ror
adc
fsubrl
insb
test
jl
jle
adc
bound
xor
or
jnp
jnp
xchg
mov
mov
bound
sti
rorb
aaa
adc
cmpb
dec
push
cld
xchg
out
jg
out
xor
repnz
mov
push
movhps
and
enter
pop
jnp
adc
push
jnp
inc
mov
repz
mov
fildll
std
jmp
fiadds
mull
xchg
gs
in
push
clc
jo
ja
pop
cmp
pop
cmp
push
inc
add
int
push
and
out
sub
inc
lahf
mov
or
int
xlat
push
mov
stc
sti
cwtl
cmp
jl
out
gs
fwait
dec
pop
loopne
fsubrl
xchg
xchg
jg
xorb
rcr
or
or
imul
lds
and
mov
test
sub
add
daa
arpl
cmp
sti
stos
adc
movsl
clc
add
pop
cmpsb
or
nop
mov
pop
mov
icebp
andb
fildl
fisttpll
jle
out
add
mov
push
cmc
dec
ror
sarb
fs
sbb
ja
js
shlb
out
lods
sti
ret
add
fs
aam
add
fdivl
add
or
jae
lods
popf
scas
daa
shl
sbb
subb
bound
movsl
jbe
sarl
loop
xchg
addr16
jbe
mov
inc
and
adc
mov
int
repnz
cmp
shlb
test
int3
lcall
mov
ret
repz
push
js
sbb
cmp
pop
and
outsl
push
ror
ljmp
outsb
pushf
mov
sub
mov
mov
inc
xor
add
stos
and
push
divl
sahf
jmp
mov
iretw
push
andl
outsb
push
pop
leave
aad
insb
leave
stc
sbb
push
xor
mov
andb
lret
mov
sti
bound
jge
pop
rcll
cmp
in
fdivs
jmp
movsl
lods
cmp
add
imul
or
loope
mov
lahf
sub
fiaddl
clc
fildl
repnz
cld
mov
paddusb
push
nop
mov
jp
aas
cmp
shlb
into
pushf
out
add
insl
fstl
adc
lcall
iret
int
mov
das
or
xrelease
push
aad
daa
jo
in
cmpsl
lret
xchg
and
push
loopne
rclb
mov
mov
mov
push
rorb
ljmp
dec
repz
xchg
xor
test
or
xchg
sub
aad
pop
sub
adc
push
push
aas
cli
fnsave
ret
test
or
xor
dec
clc
dec
scas
push
sub
loopne
hlt
mov
mov
leave
sub
mov
sub
in
jg
je
xchg
mov
push
xchg
mov
add
push
jb
push
fisttpl
push
push
dec
and
push
imul
dec
movsl
cwtl
lcall
loopne
dec
mov
push
fsubs
lret
cmp
rcll
dec
cmpsl
mov
mov
mov
mov
mov
out
xchg
xor
push
movsl
rclb
push
adc
sahf
push
push
mov
pop
mov
push
jo
pop
adc
push
inc
xchg
test
shlb
sbb
adcb
rcll
scas
and
push
adc
sub
int
sti
fadd
imul
add
pusha
adc
repz
popa
pop
dec
and
push
divb
dec
fldt
cld
mov
push
add
push
shrb
mov
imul
or
out
ror
sbb
lods
test
movsl
jp
loopne
imul
jl
rcrb
sub
das
jno
inc
sti
test
movswl
gs
and
pop
imul
adc
sbb
xlat
push
in
sbb
repz
imul
ja
movsl
dec
mov
rcrb
xor
frstor
push
xor
jb
sub
pop
mov
lret
in
inc
push
pop
cmpsl
pop
cmp
test
lret
pop
sti
mov
lods
xchg
imul
add
pusha
cs
pop
enter
jl
sub
das
sbb
pop
push
fldcw
add
pushf
push
xor
mov
mov
pop
pop
cwtl
fsubl
xchg
adc
pop
call
mov
mov
xchg
mov
and
or
pop
ss
pop
jb
loopne
push
scas
jmp
mov
out
inc
dec
iret
clc
pop
loop
jge
dec
push
jbe
es
mov
mov
movsl
adc
adc
add
mov
pop
sar
mov
in
jg
mov
pushf
xchg
movl
lret
cmpsb
and
jl
outsb
repnz
sarl
call
mov
pop
add
mov
dec
xchg
pop
add
mov
ja
faddp
inc
push
cmpsb
add
imul
mov
out
insb
jne
sahf
repnz
push
cmp
sub
or
stos
repnz
inc
rclb
mov
sbb
push
push
jg
inc
xchg
outsb
adcb
stos
adc
mov
mov
push
mov
push
into
dec
sti
arpl
adc
xchg
loopne
mov
mov
dec
xorl
aad
gs
dec
ss
inc
inc
inc
mov
adc
cmpsl
xchg
sahf
hlt
test
cmp
lods
cmpl
cs
pop
adcl
jo
stos
mov
xchg
ret
mov
push
pop
mov
xchg
mov
mov
jp
adc
pop
mov
aad
inc
sahf
xchg
pop
add
lea
push
nop
fs
call
stos
mov
jg
test
add
inc
addb
mov
push
xor
xchg
nop
cmp
push
lods
lret
and
or
mov
sbb
aas
stc
fistl
fcompl
les
adc
mov
xchg
add
pop
adc
mov
cmp
fwait
int3
mov
or
jmp
add
mov
sub
sahf
mov
mov
xorb
sbb
lcall
in
jle
inc
cmp
jl
ret
jp
dec
mov
xchg
cmp
cld
push
pushf
insb
inc
jo
or
stos
inc
int3
lret
mov
out
mov
sahf
cld
ja
cltd
test
dec
cmpsb
nop
push
jp
mov
cmpsb
cs
test
cld
mov
aad
cmpb
test
cli
add
or
xchg
loop
fimuls
leave
mov
and
pop
add
add
push
pop
shl
loop
movsb
dec
mov
add
cld
shlb
or
sbb
push
mov
add
xchg
and
addb
mov
jmp
mov
cmpb
and
xchg
jbe
push
je
enter
pushf
or
ja
inc
add
and
inc
xor
jb
inc
mov
and
fistl
leave
sub
lods
aad
fldenv
dec
nop
mov
andl
repnz
mov
dec
inc
incl
mov
repz
stos
mov
mov
into
cld
cwtl
inc
mov
iret
dec
stos
inc
scas
addl
inc
jne
inc
nop
mov
dec
sbb
cld
pusha
fadds
mov
mov
shrb
stc
dec
into
mov
stos
and
pushf
aad
pop
int3
in
cmp
mov
adc
test
lea
aam
and
cli
cmpsl
mov
sbb
inc
mov
xlat
repz
adc
xor
xchg
cmpl
pop
and
mov
cmp
sahf
push
mov
aam
or
lods
cmp
jae
data16
mov
iret
jge
nop
addr16
mov
mov
jecxz
xchg
es
out
fidivl
or
xor
enter
sbb
push
sub
outsl
adc
inc
pop
clc
mov
mov
lea
inc
xorb
scas
or
imul
inc
bound
movsl
aas
aad
call
mov
movsl
outsb
insl
lahf
add
sahf
dec
xchg
pop
rorl
movsb
lcall
out
xchg
dec
push
scas
mov
mov
int
leave
xchg
bound
sub
mov
fwait
mov
cmpsl
pop
lcall
push
aad
leave
lcall
adcb
mov
inc
pop
loop
faddl
mov
pop
adc
movsl
nop
mov
xchg
in
iret
mov
pop
mov
mov
xchg
fnclex
sub
add
stos
push
aam
xchg
jne
icebp
nop
fcmovne
xchg
xlat
push
jecxz
xor
cs
xchg
rcrb
test
ljmp
inc
sub
sub
lea
rcrb
mov
sub
sahf
push
dec
and
sti
add
mov
and
cmpsb
sub
sbb
daa
mov
sbb
lahf
fcmovnu
sahf
pop
xor
adc
pusha
mov
and
ss
adc
mov
add
jp
popl
pop
ja
sub
std
jbe
add
js
bound
sahf
dec
bound
xor
xchg
xchg
push
add
sbb
inc
jmp
mov
lret
sarl
sahf
inc
imul
fst
xchg
loop
xor
leave
jae
mov
ficoml
repnz
cmpsb
pop
stos
push
push
mov
sbb
inc
push
mov
pop
addl
dec
dec
xchg
mov
daa
repz
shrb
mov
and
add
mov
xchg
nop
fistl
nop
aad
pop
mov
out
mov
gs
push
push
sahf
addr16
bound
testb
add
inc
and
addr16
fwait
imul
or
je
enter
cmpsb
test
repz
mov
mov
imul
xor
xorb
repz
ds
xchg
sub
dec
insl
std
jbe
outsl
fmulp
or
stc
rolb
lret
cmpl
popf
or
sbb
insl
jl
mov
les
lea
lcall
mov
mov
rcl
bound
popa
jg
mov
lods
cmp
int3
xchg
push
movsl
into
rcl
test
loopne
mov
jp
add
popf
jmp
out
insl
scas
into
inc
lahf
scas
jg
nop
lods
je
mov
and
mov
cmp
xchg
mov
imul
mov
in
insb
mov
pushf
ret
cmp
std
mov
mov
xchg
jbe
cmp
mov
imul
jp
adc
cmpl
pop
push
push
mov
jmp
push
and
add
test
and
in
call
stc
aam
lcall
mov
repnz
or
add
mov
leave
aaa
sub
repz
lcall
push
jp
call
add
nop
insb
out
pop
shll
ljmp
repnz
nop
int3
sub
test
jns
mov
lret
push
sbb
dec
and
mov
inc
bound
sbb
push
ret
fidivrl
cmp
decl
cld
int3
mov
loope
sbb
inc
and
jnp
lret
xchg
lcall
cmp
push
dec
mov
push
outsb
test
scas
popf
movsl
adc
cmp
cld
insl
cltd
orl
add
dec
xchg
cmpsl
fsubs
fbld
gs
inc
cmp
mov
es
jl
inc
test
mov
sahf
push
aam
test
jp
fnstsw
adc
imul
pop
mov
inc
stos
push
daa
dec
test
jmp
sbb
add
mov
lods
mov
lret
fs
xchg
pop
jne
jge
add
xchg
clc
push
stos
xchg
mov
popf
or
add
add
xchg
inc
push
lods
push
mov
data16
enter
cmp
sahf
fcomps
push
mov
cmp
ret
mov
xchg
loop
hlt
cmp
ficoml
lods
push
cld
xchg
adc
rcr
js
rcrl
pop
xchg
cmp
iret
xlat
aad
into
gs
cmpl
mov
movaps
outsb
and
mov
xchg
pop
roll
jp
add
pushf
inc
into
jne
pop
xor
std
or
mov
jnp
shl
sub
push
push
cwtl
sub
push
xor
int
pop
imul
std
rcrb
and
dec
xchg
pushl
addb
mov
push
call
add
pushl
mov
xchg
mov
mov
inc
add
push
push
shll
jo
orb
mov
cmp
rolb
and
jb
mov
outsb
jge
sbb
test
pop
data16
mov
jnp
or
mov
adc
out
lods
lods
pop
add
mov
sub
jge
sbb
sahf
dec
shrl
adc
fisubs
adc
add
imul
rorl
lods
addr16
repnz
xchg
cmp
fistpl
rcrb
dec
add
mov
sbb
mov
mov
addl
mov
adc
sbb
dec
lock
imul
pop
mov
lcall
dec
stos
inc
out
adc
test
pushf
adc
or
outsl
cmpsl
push
xor
iret
inc
stc
aam
xchg
mov
addr16
sub
lahf
enter
lea
xor
mov
ror
popl
ret
mov
pop
out
push
and
into
dec
mov
fadds
mov
cwtl
ror
jbe
insb
mov
push
sub
scas
mov
inc
lds
mov
movsb
adc
test
in
mov
les
repnz
mov
mov
sub
cmpsb
orl
and
push
int
or
mulb
mov
cmp
sbb
jns
pop
stos
fimuls
mov
cmpl
jb
xchg
xchg
nop
roll
ja
mov
cmp
xchg
mov
add
jb
add
xor
and
fiadds
inc
nop
lea
clc
inc
or
mov
push
cli
imul
scas
push
out
fwait
lods
xor
xchg
push
movsb
and
inc
xor
mov
lret
inc
xchg
or
sbb
jbe
scas
sti
outsb
xchg
mov
sahf
inc
insb
out
cmp
icebp
bound
popa
lods
out
inc
jmp
add
xchg
pop
mov
lret
stc
lcall
stos
xchg
xchg
clc
xchg
adcb
jecxz
xchg
xchg
jns
out
addr16
fs
jecxz
test
into
rcrl
iret
mov
pop
and
dec
xor
inc
cmp
mov
xor
mov
and
and
push
mov
out
addl
cmc
sub
push
inc
or
mov
mov
lea
lahf
into
aad
xor
fdivl
out
lea
xchg
push
sbb
nop
and
lcall
jbe
ret
repnz
enter
test
mov
decb
mov
mov
int3
ljmp
stos
dec
dec
jmp
inc
cld
lret
gs
cmp
jo
fisttpl
outsl
clc
inc
cmpl
pop
loop
fisubs
int3
jbe
or
mov
and
bound
jo
dec
push
mov
stos
test
subb
pop
pop
fucom
mov
addb
jg
mov
jns
push
cmp
call
dec
mov
rorl
pop
insl
pop
add
adc
or
push
add
aaa
popf
push
jp
sbb
xchg
ret
bound
mov
sbb
movsl
xchg
popf
out
and
and
ljmp
cmp
or
dec
xor
ror
jbe
loopne
aad
dec
test
pop
add
leave
insl
lahf
fcmovbe
pop
test
std
sti
ss
xlat
jl
enter
add
cld
jmp
sbb
iret
push
fnstcw
cmp
dec
and
xchg
repnz
pop
ficoms
movsl
lcall
and
stc
sub
pop
adc
dec
sub
push
xchg
mov
adc
loopne
repnz
cwtl
std
xchg
cmp
xlat
fidivrl
rcll
fnsave
mov
dec
push
imul
mov
pop
and
aam
xchg
in
addb
adc
ljmp
sbbb
xchg
popf
cmp
jne
xchg
mov
js
mov
mov
sub
add
fsubrp
mov
test
push
sbb
lahf
mov
jecxz
mov
negl
outsl
popl
xchg
or
and
jecxz
stos
inc
data16
xchg
inc
sbb
pop
mov
andl
jae
add
pop
mov
int
xchg
imul
insl
add
xor
test
lods
js
test
mov
jnp,pn
jge
addb
lcall
sti
mov
call
nop
mov
clc
int3
lods
jo
int3
dec
pop
add
add
loop
push
xchg
pushf
call
lods
xlat
into
iret
stc
loop
sub
pop
mull
inc
aaa
into
fsts
icebp
sarb
sarb
mull
fwait
icebp
mov
data16
cmp
nop
ja
cld
inc
mov
jb
pop
push
add
mov
in
test
jg
cmpsb
ljmp
and
mov
roll
aam
test
jmp
add
arpl
pop
jge
xchg
aam
push
dec
push
je
out
loopne
mov
data16
imul
fbld
inc
pop
sarb
daa
into
lods
mov
sub
into
shll
subb
test
jb
jp
ret
pop
aas
push
mov
aad
cmp
xor
jno
popf
je
mov
xchg
into
sbbl
in
imul
cmpsb
jo
or
nop
aad
bound
mov
inc
std
and
divb
sbb
adc
sbb
xor
lret
cs
shlb
adc
add
out
lds
mov
xorl
mov
push
jmp
cmpsb
sub
mov
mov
mov
mov
xchg
bound
mov
cwtl
pushf
push
ret
in
xor
mov
sahf
jnp
mov
or
mov
test
pop
shrl
fldl
into
mov
jg
nop
in
jnp
sub
adc
xchg
inc
addr16
xorl
dec
mov
in
add
movsl
or
ret
out
pop
sbb
adc
push
test
mov
cmp
push
sub
fisttpl
loopne
add
fsubl
push
lods
ret
inc
cmpsl
jmp
pop
mov
mov
xchg
in
mov
icebp
mov
push
xchg
dec
cmpsl
pop
inc
cmc
out
xchg
inc
movsl
fdivrs
pushw
es
xchg
adc
xchg
fildl
je
in
loop
xchg
dec
divb
repz
inc
stos
mov
xchg
xchg
jge
outsb
jb
fld
ret
jbe
not
es
cli
out
jecxz
int3
mov
rolb
adc
and
mov
icebp
and
xchg
addr16
movsb
test
iret
mov
pushf
adc
sti
inc
stos
stos
xor
mov
xchg
push
sub
push
or
or
insb
lock
xor
mov
pop
mov
imul
lcall
mov
int3
or
push
movsl
jl
adc
pop
lods
push
push
or
ret
cmpsl
data16
xchg
mov
xchg
shll
mov
call
jo
push
mov
loop
daa
push
cmpsb
call
aad
xchg
movl
dec
rolb
push
jnp
pop
mov
pusha
add
xchg
dec
loopne
xchg
scas
js
sbb
cmp
data16
jg
ss
popa
in
and
push
mov
aaa
addb
clc
jne
leave
xchg
push
jge
add
out
imull
cli
out
inc
push
mov
iret
test
mov
je
inc
mov
mov
mov
pop
pusha
jecxz
rcll
ss
sub
mov
mov
add
enter
lods
pusha
xchg
pop
adc
or
dec
mov
sbb
orl
push
or
addb
cmpsl
flds
jne
or
xchg
lcall
mov
jnp
scas
inc
iret
test
ss
jge
mov
in
xchg
sub
jno
xchg
cmp
and
push
and
lret
inc
repz
cmpsb
in
pop
leave
cmp
incb
push
in
add
test
popf
lds
es
sbb
inc
push
imul
aad
leave
es
insb
inc
aas
adc
lret
pushl
and
sub
jbe
lods
loop
and
push
add
movsb
lods
sahf
loopne
mov
sti
mov
xchg
mov
mov
loopne
ret
pop
fnstsw
push
lret
nop
mov
push
mov
lea
repnz
pop
or
cmp
cltd
js
pop
mov
fs
mov
push
insb
lahf
sahf
mov
adc
push
incl
loopne
pop
mov
and
or
imul
xchg
insb
cmpsl
in
hlt
pop
xchg
and
jno
shl
test
xchg
add
mov
hlt
jp
sbb
jmp
adcb
int
mov
mov
bound
lds
sahf
mov
scas
mov
ret
mov
mov
into
aad
xchg
xor
std
fsubl
fsts
add
test
xchg
aam
jo
add
nop
int3
mov
sub
scas
lods
push
ret
mov
jl
jbe
out
sub
add
adc
add
and
arpl
ds
leave
in
rclb
addb
cltd
mov
adc
rclb
or
inc
and
or
loopne
mov
stos
loopne
enter
jb
lret
mov
outsb
xor
and
sahf
fisubl
or
sbb
stos
cld
nop
pop
and
pop
cwtl
test
cli
mov
inc
fsubs
imulb
repnz
xchg
cld
popf
push
lahf
xchg
mov
ror
cmp
mov
into
sarl
cli
pop
dec
or
jnp
mov
in
cmp
test
push
sub
dec
fwait
inc
mov
dec
popl
shl
inc
lret
fcoml
movb
inc
movsb
out
xchg
nop
cmpsb
dec
mov
pop
movsb
or
sahf
mov
stos
lods
sbb
jns
sahf
add
add
cltd
fsubs
adc
push
xchg
adc
xchg
lahf
pop
mov
data16
and
or
enter
jle
stos
mov
add
in
vmwrite
add
les
fcomps
push
loop
nop
mov
jg
lahf
xchg
or
mov
aad
push
cli
jmp
sub
add
dec
cmpsb
pop
call
add
mov
fiadds
shll
pop
movsl
xlat
unpckhps
das
and
insb
xchg
adc
pminsw
xchg
repnz
mov
les
loopne
sub
push
xlat
pop
insl
data16
jmp
push
xchg
hlt
mov
jg
mov
jp
les
mov
mov
lock
cld
mov
fsts
xchg
mov
lret
add
mov
mov
and
imul
enter
add
popf
inc
push
cld
leave
xchg
lahf
mov
int3
dec
ss
push
cltd
ret
sub
aad
jp
xchg
aam
push
push
lahf
push
scas
pop
cmp
xor
xor
jl
and
mov
leave
stc
int3
cli
jbe
add
movsb
xchg
sub
jbe
enter
ret
push
mov
pop
xlat
mov
js
xchg
mov
shl
add
inc
decb
push
repnz
jge,pn
sub
pop
ret
xchg
popa
out
dec
data16
decl
aas
mov
addb
mov
cld
pusha
scas
test
bound
sahf
ret
dec
xchg
jbe
cmpsl
sub
stos
aad
pusha
orl
push
cmp
or
sbb
xchg
fiaddl
mov
cmp
push
movl
mov
mov
fisubrs
inc
xchg
xchg
adc
lods
inc
rorl
scas
mov
push
jl
sahf
cmpb
sub
out
pop
inc
lock
pop
clc
data16
insl
inc
dec
or
jns
xor
aaa
and
mov
test
push
adc
mov
scas
sub
test
mov
in
lret
pusha
add
loopne
add
mov
xchg
lret
ss
sub
add
mov
mov
mov
mov
adcl
les
cmpb
jl
adc
adc
scas
fstl
test
mov
imul
adc
inc
jmp
shll
int3
subb
nop
mov
adc
stc
xchg
in
dec
xchg
daa
cmc
or
jae
std
jno
test
outsb
sbb
addr16
lcall
xchg
sub
xchg
imul
mov
xor
dec
mov
cld
add
data16
push
in
add
cwtl
shll
lods
int3
push
adc
xor
mov
xchg
sub
mov
sbb
scas
mov
add
call
jns
mov
jp
int
jp
push
or
cli
test
push
rcrl
or
mov
jne
iret
sbb
lcall
sub
xchg
mov
faddl
mov
ror
dec
dec
dec
sbbl
imul
push
push
ljmp
mov
sahf
xchg
cmp
aas
mov
sahf
push
test
dec
stos
mov
js
clc
adc
xor
loop
sub
inc
mov
dec
call
repz
jo
mov
imul
push
add
sbb
or
popl
lret
pop
jno
fistl
cmc
adc
push
and
ja
into
stos
sbb
imul
mov
jb
fdivs
add
mov
sahf
sub
add
or
shll
sub
ja
sbb
xchg
mov
or
mov
xchg
xorl
pop
sbb
cmp
std
dec
xchg
cwtl
leave
rcrl
test
cld
test
xchg
pop
cli
adc
jp
loope
xor
ffree
imul
ret
sub
xchg
or
sbb
sub
pop
pusha
adc
jmp
mov
rolb
jbe
arpl
test
sbb
je
loop
shll
iret
stc
mov
lahf
or
stos
mov
lret
add
inc
pusha
mov
or
xchg
mov
push
and
lds
or
xor
imul
stos
loop
cmp
fistpl
out
arpl
pushf
adc
adc
pop
lcall
out
ja
lret
insb
pusha
mov
leave
pop
ja
push
aaa
push
push
xchg
jp
mov
data16
cmp
sbb
nop
inc
lock
xchg
push
mov
shll
test
jmp
aam
leave
orb
mov
add
cmpsb
pop
leave
pop
stos
repnz
xchg
inc
push
jle
sub
add
mov
or
fimull
movsl
add
push
dec
add
fs
leave
pop
mov
xchg
mov
fnstenv
into
adc
jnp
jnp
fnstcw
pop
mov
shlb
jae
sub
inc
std
cwtl
xor
mov
add
cld
cltd
add
sbb
dec
rol
scas
cli
arpl
rcr
aas
pop
imul
pop
xor
je
adc
inc
test
lods
cmp
dec
cli
cwtl
adc
xor
mov
std
stos
inc
cs
test
cld
andb
into
or
dec
addl
sub
int
jp
das
adc
pop
cmp
adc
jno
aaa
mov
pop
adc
xor
lock
xor
inc
clc
mov
aad
add
xor
imul
leave
test
jg
add
test
outsl
push
jne
mov
insb
int
or
std
cld
call
cmpsb
or
es
sbb
mov
jp
fcoms
mov
xor
fsincos
inc
xchg
dec
mov
pop
shrb
in
lahf
push
std
adc
mov
xchg
inc
jbe
loop
aaa
imul
inc
out
xchg
dec
loop
shll
xchg
imul
dec
iret
mov
imul
push
mov
cmp
pop
mov
jbe
xchg
and
dec
rolb
fsubrp
lret
popf
push
fwait
adc
sub
push
aad
sbb
lea
jge
jbe
out
sbbl
jo
test
xchg
xor
fmul
inc
mov
add
inc
sub
mov
popa
addb
mov
scas
mov
cld
xchg
adc
sbb
sarb
mov
mov
imul
mov
mov
inc
xor
iret
cmp
mov
sbb
push
out
or
mulb
xor
test
xor
mov
mov
xchg
xchg
andb
cmp
flds
fistl
sub
mov
jp
cmpsb
add
pusha
test
hlt
fdiv
or
aad
adc
imul
xchg
loop
mov
loope
int3
sub
je
and
push
shl
addr16
cwtl
adc
mov
fistps
adc
mov
xchg
push
pand
loop
imul
lods
out
nop
nop
add
pop
clc
jle
push
test
cmpsl
push
pop
mov
push
insl
hlt
jmp
data16
adc
and
in
mov
or
leave
push
out
jecxz
sbb
push
or
ret
mov
inc
data16
stos
push
jno
sub
push
sti
rcl
decb
pop
add
cmp
aaa
pushf
and
xchg
les
lret
stos
je
cmpl
xchg
pop
sahf
int
pushf
repz
pop
cmp
ret
add
jmp
nop
mov
rcll
fisubl
mov
int
cli
sub
repnz
adcb
ljmp
xchg
cwtl
inc
jnp
inc
repz
mov
cmp
mov
repnz
pop
and
mov
mov
into
lcall
fdivrl
mov
push
mov
dec
dec
push
nop
cmpsb
mov
mov
lcall
xchg
ret
pop
test
jmp
loopne
push
idivb
dec
add
lret
cmp
popa
mov
jo
and
or
pop
jne
add
mov
push
mov
xchg
in
push
lar
fisttps
xchg
bound
notb
mov
xchg
sahf
lds
dec
inc
and
and
leave
cs
and
div
sub
xlat
adc
pop
std
xchg
lar
lret
pop
inc
mov
jp
pop
int3
out
and
out
dec
ljmp
adc
sti
fiadds
cmpsl
add
xorb
xchg
cmpsb
outsb
lea
push
xchg
push
mov
enter
adc
or
jbe
push
std
xchg
out
lcall
adc
push
call
mov
sbb
lods
into
orl
ret
lret
call
cmc
rcll
sbb
imul
into
mov
movsb
roll
test
jbe
test
xchg
push
xchg
mov
ret
movsl
mov
cmp
daa
mov
xchg
enter
out
mov
fildl
jb
jo
std
scas
pop
bound
cmp
cmpsl
fimull
inc
pop
cli
loop
insb
cmp
push
push
cwtl
loop
pop
pop
fdivs
add
mov
je
dec
ds
pop
aas
insl
sbb
inc
adc
add
adc
sub
pusha
xchg
or
pop
mov
call
jl
mov
lret
imul
mov
push
adcl
adc
mov
loop
or
imul
lcall
xchg
cmpsl
sahf
adcl
jnp
clc
cmp
cld
in
adc
inc
stos
iret
or
roll
cmp
pop
test
cmp
push
push
and
popf
mov
jbe
add
fcomp
xchg
mov
add
jnp
add
xlat
fadd
add
jp
test
sbb
mov
xor
repz
cld
dec
push
mov
sti
lods
mov
test
push
xchg
faddl
scas
sbb
and
shrl
mov
xchg
stc
dec
out
daa
mov
into
nop
sti
pop
test
inc
dec
push
xchg
lods
mov
cmp
stos
daa
test
mov
icebp
loopne
xor
inc
mov
addl
xor
mov
cmpsb
cmp
stos
cli
les
insl
sbb
or
push
inc
mov
subl
test
or
mov
imul
outsb
addl
xchg
fsubr
inc
sbb
call
add
push
mov
adc
stos
insb
leave
pusha
xlat
add
and
cmp
shr
pushf
xchg
pop
ds
cmp
nop
stos
cli
cmpb
pop
dec
hlt
fcomp
iret
pop
das
stc
outsb
in
cmpsb
xorl
cwtl
jp
dec
jl
inc
cmpsl
ds
int
push
add
xchg
and
mov
xor
mov
lahf
outsb
mov
pop
push
and
loopne
pop
subb
jle
jne
addr16
clc
je
xchg
cmp
test
fmull
movsb
dec
jle
mov
jnp
pop
xor
and
movsl
bt
out
js
enter
add
push
scas
pop
dec
addb
negb
mov
inc
mov
in
sti
and
fistps
cmpsb
rcll
fstp
ss
outsb
push
mov
jns
jbe
mov
add
orb
lcall
xor
fsubl
mov
xchg
repnz
push
mov
xchg
rorl
add
mov
data16
loop
xchg
les
mov
or
jp
mov
arpl
xchg
and
mov
inc
xchg
jmp
hlt
or
dec
fistps
mov
in
mov
xchg
mov
mov
sbbb
out
mov
call
mov
fcoms
test
xchg
mov
hlt
daa
decb
xchg
scas
insb
iret
clc
sahf
fidivs
mov
jl
into
ljmp
and
insb
in
push
push
das
arpl
xchg
pop
adc
in
jbe
into
xchg
mov
push
rclb
shr
add
rolb
mov
dec
xchg
mov
mov
shlb
sarb
movsb
add
push
and
loop
inc
xchg
pop
jmp
sbb
inc
jge
in
daa
xchg
mov
dec
aaa
pop
inc
xchg
push
repz
cs
xor
scas
cmp
mov
xchg
jno
xlat
xchg
pop
mov
int3
push
sub
idivb
daa
or
ja
push
test
idivb
lods
test
push
mov
inc
lods
push
scas
adcl
xchg
data16
or
mov
outsb
jb
aas
std
out
inc
rcll
jl
xchg
xchg
xlat
scas
mov
lret
sbb
inc
pop
inc
js
lcall
cmc
inc
out
fsubrl
call
inc
inc
push
and
xchg
jp
ljmp
add
sbb
in
xchg
xchg
ret
cltd
pushf
andb
dec
push
icebp
xchg
inc
mov
xor
or
jmp
mov
xchg
xorb
das
mov
xchg
sahf
repnz
xchg
mov
mov
out
aas
push
jg
pop
movsb
mov
xchg
sbb
xchg
sahf
fcmovnbe
es
push
inc
arpl
xchg
xchg
cs
ffreep
xchg
sbb
iret
mov
mov
cmpsl
mov
cmpl
cmpsl
int
mov
negl
push
in
push
pop
xchg
bound
aas
sahf
mov
or
mov
cmp
mov
popf
fs
mov
push
fadds
sbb
adc
cld
add
aad
mov
test
mov
inc
sbb
scas
add
call
or
add
sub
add
repz
xchg
cltd
hlt
xchg
or
movsb
mov
out
fimull
push
aas
data16
add
push
mov
aad
je
orl
mov
repz
decb
roll
xchg
mov
mov
in
repnz
pop
jbe
aas
xchg
or
cli
sti
inc
loope
pop
adc
xchg
fsubr
orl
inc
jge
sti
loop
cltd
dec
in
sbb
fwait
and
cmpsl
or
ds
bound
sbb
and
adc
xchg
cmpl
push
xor
mov
mov
es
outsl
aas
in
int3
fs
outsb
inc
out
fistpl
mov
inc
orl
out
pop
add
or
mov
fistl
addr16
sbb
pop
jns
jmp
adc
jmp
popf
pop
sub
repz
adc
enter
lcall
adc
inc
mov
or
mov
sbb
jg
js
xchg
add
in
xor
data16
roll
mov
or
dec
flds
cmp
pop
push
sub
sub
xor
shlb
insl
mov
xlat
mov
imul
popa
loope
add
dec
imul
push
push
jp
cli
adc
in
cld
add
sub
out
stos
cmc
arpl
dec
and
les
mov
addr16
jbe
cltd
mov
add
and
lahf
daa
cmp
cmpb
sbb
aad
sahf
loop
jbe
adc
popf
sub
pop
into
iret
cmp
mov
cmp
test
xchg
hlt
fnsave
pop
movsb
stos
subb
jp
mov
lock
xor
rcr
stos
fldl
mov
add
sti
mov
mov
mov
adc
xchg
int3
cs
push
mov
sub
imul
int
add
repz
mov
test
incb
dec
lret
lea
dec
push
fwait
sbb
and
sbb
and
int3
mov
jle
andb
enter
ror
mov
mov
insl
inc
sbb
idivl
and
repz
mov
sbb
in
loope
xchg
leave
push
mov
in
loopne
pusha
neg
push
stos
push
inc
loop
cmp
nop
loopne
imul
repnz
int
outsb
jne
or
cmp
ffree
call
adc
xchg
stc
jl
pop
into
rol
cmpsl
push
adc
pop
cld
rclb
aam
je,pn
dec
pop
cltd
cmp
aad
jb
stos
int3
cmc
inc
jb
sub
scas
push
mov
icebp
idivb
pop
rorl
leave
shl
xchg
out
cmp
stos
jbe
adc
sbb
jno
mov
ss
xor
jbe
and
pop
add
mov
jl
inc
pushf
inc
leave
cld
dec
sbb
fidivrl
cmpl
xchg
jno
push
out
iret
std
cwtl
popa
stos
jbe
sbb
inc
mov
movups
fadd
fldenv
repnz
sti
loop
sbb
lret
nop
xchg
sti
incl
ret
xchg
jnp
mov
push
ret
inc
sahf
pop
outsb
ja
or
or
dec
test
push
and
adc
cmp
stos
dec
sub
enter
add
inc
loope
fimull
or
jbe
loop
mov
xrelease
or
mov
leave
cmp
mov
add
add
add
sti
iret
and
scas
and
or
rcrb
add
push
pop
dec
aad
stos
scas
data16
mov
jp
mov
sbb
inc
fcmovnbe
lret
and
mov
jbe
aas
call
jo
mov
jno
xchg
and
stos
adc
dec
addb
push
mov
cmpsb
mov
fnsave
mov
dec
push
pop
mov
jg
sti
popa
mov
lods
mov
xor
mov
fldt
fcmovnu
inc
lahf
pusha
fldt
ja
inc
les
sub
rcll
cmp
xchg
cmpsb
imul
cwtl
sub
repnz
leave
int3
and
or
out
lcall
adc
or
stc
pushf
adc
xor
repz
shll
xchg
jbe
pop
inc
jmp
in
mov
push
movsb
sub
lods
or
repnz
dec
xor
leave
xchg
jno
enter
sbb
xor
cmpsl
and
mov
shrl
inc
stos
aad
jle
jb
adc
cmpb
sbb
and
cs
jmp
jge
loop
test
inc
insb
cmpsl
jecxz
or
popa
clc
mov
nop
jae
ljmp
xchg
xor
les
cs
aas
imul
mov
xchg
aas
repz
mov
push
repnz
dec
jg
adcb
movsl
xor
add
adcb
fnsave
int
adc
sub
cmp
mov
adc
push
test
stos
sub
notl
push
adc
into
aas
out
into
sbb
mov
aad
cs
lds
sub
cmp
lock
test
mov
xor
sbb
xlat
mov
mov
daa
stos
mov
hlt
scas
mov
cmpsb
cwtl
inc
rcrl
adc
xchg
test
inc
repz
aam
cmc
mov
pop
jmp
loopne
dec
sbb
xchg
inc
cmp
adc
je
adc
mov
clc
repnz
shl
dec
subb
cmp
dec
cmp
int
insl
mov
sub
jp
or
test
add
add
cltd
mov
lahf
mov
sbb
xchg
into
sub
or
jb
mov
mov
fdiv
loope
dec
push
xchg
mov
repnz
loop
in
aad
bound
out
mov
js
xor
cmp
adc
ret
fwait
dec
lods
add
stos
add
test
nop
enter
jp
add
mov
push
xchg
add
xchg
cmp
clc
sarl
xchg
roll
imul
fdivl
sub
and
stos
js
jno
addr16
pop
dec
xchg
in
es
and
mov
es
mov
cli
mov
push
cwtl
loopne
rorb
test
lahf
test
xchg
cmp
jg
inc
pop
stos
mov
jne
push
pop
jne
xchg
cmp
scas
in
and
std
clc
mov
xchg
subl
ret
xchg
cmp
jl
popf
fldt
lcall
sbb
and
jno
inc
push
push
call
mov
arpl
pop
in
mov
jne
test
shrb
les
mov
push
inc
mov
or
scas
scas
jbe
rcll
or
mov
mov
mov
sub
adc
cmp
mov
mov
pop
mov
jo
dec
into
mov
dec
push
pop
es
xchg
je
jp
xor
fildl
repnz
test
jl
xrelease
mov
xor
stos
pop
dec
and
xor
lods
pop
xlat
xchg
xchg
or
add
data16
fistl
mov
sub
mov
push
cmp
inc
cmpsb
mov
and
lahf
pop
mov
les
jae
add
dec
les
mov
xchg
xchg
mov
addr16
jo
adc
jl
cltd
aad
dec
push
jnp
shl
xor
push
pop
scas
cli
xchg
push
cmp
push
mov
xchg
aam
mov
in
lret
cmp
mov
mov
mov
inc
xor
jl
shr
jmp
incl
fildll
and
sub
mov
mov
mov
pushf
or
test
cmpsb
mov
jge
dec
sub
std
cmp
add
adc
xlat
pop
mov
mov
pop
push
push
out
sti
add
mov
icebp
sub
adc
lods
xor
xor
mov
xor
jnp
into
or
outsb
shrb
lea
das
mov
xchg
cmpsl
lahf
or
cmp
std
add
push
lahf
in
mov
lea
psrlw
lock
jmp
push
push
dec
test
data16
pop
test
and
cs
jmp
add
test
pop
push
repnz
jne
sbb
adcb
inc
lea
or
je
jecxz
and
dec
xchg
pop
push
add
sbb
testl
cmp
insb
mov
xlat
dec
fcoml
mov
mov
lock
outsl
add
cli
imul
add
jmp
sub
pushf
add
add
dec
into
int
inc
iret
lea
mov
aam
mov
pop
shl
sti
add
mov
xchg
push
fiadds
mov
sub
sub
mov
cmp
data16
mov
jnp
add
and
inc
mov
xchg
adc
push
lcall
pop
sahf
pop
xor
add
cld
shrb
sub
xchg
in
and
out
ljmp
and
data16
je
insb
inc
mov
mov
dec
sahf
frstor
mov
pop
mov
push
aam
mov
sbb
mov
mov
xchg
das
stos
jnp
pop
jmp
push
ljmp
mov
sbb
mov
mov
scas
cmp
andl
test
repnz
inc
mov
clc
aad
dec
inc
push
es
adc
and
fs
inc
xchg
mov
rcll
pop
adc
inc
loopne
add
dec
icebp
mov
mov
popf
js
into
inc
imul
xchg
loop
push
add
and
xchg
jns
xor
push
inc
insl
mov
mov
nop
add
les
shll
sbb
test
adcb
xchg
xor
dec
inc
into
xor
fists
adc
in
inc
ret
fs
dec
adc
lods
mov
leave
shlb
lea
popl
nop
ljmp
jecxz
pop
inc
jl
or
fs
dec
fimull
push
xchg
andb
sub
ja
loopne
or
lea
jge
aad
and
scas
sub
or
jns
fsub
xor
aad
pop
jge
scas
into
xchg
xchg
add
fidivs
xchg
mov
mov
dec
mov
push
repz
aam
inc
xchg
aad
fadd
mov
int3
jg
fistpl
push
bswap
add
std
es
push
cmpsl
fsubr
cwtl
leave
outsb
cmp
jbe
mov
pop
lret
push
popf
cmp
pop
into
jl
push
nop
pop
test
mov
mov
add
sbb
push
cli
mov
pop
adc
add
add
mov
shll
lret
jbe
jb
enter
sbb
lods
cld
cmc
insb
or
inc
cmpsb
jg
sbbb
xchg
fsts
push
add
sahf
das
push
and
filds
push
adc
cmpsl
sbb
data16
add
in
subb
nop
push
cli
sahf
inc
pop
les
xchg
pop
and
jo
aas
add
aam
sahf
test
xlat
lock
adc
fst
cmp
aam
xchg
lods
jp
sub
shll
sub
ret
cli
adc
jg
cmpsb
data16
pop
lcall
imul
adc
cltd
inc
xchg
sub
mov
in
sub
jbe
xor
fs
pop
hlt
mov
lret
jno
int
dec
pushf
sbb
push
nop
adc
mov
je
loope
arpl
push
imul
or
push
scas
mov
jp
ss
fisttpl
aad
dec
pop
stc
xchg
xchg
jl
pop
lods
push
jns
gs
shlb
lods
sbb
push
out
shll
pusha
and
popa
dec
push
leave
xchg
cmp
cli
je
ret
arpl
xchg
fiadds
push
sub
fldenv
adc
imul
aaa
das
add
repnz
add
lds
mov
mov
mov
pop
rorb
pop
cmp
mov
adc
stos
popl
or
iret
or
cmp
jb
jmp
pop
iret
enter
jp
mov
mov
into
mov
sub
test
cmpsl
push
int
jo
inc
inc
sti
stos
dec
mov
lcall
rorl
jne
cli
rcr
xchg
and
shl
mov
inc
xchg
icebp
add
cwtl
jecxz
cmp
add
cs
hlt
and
jno
rorb
mov
mov
adc
jle,pt
decl
mov
iret
pop
mov
stos
pusha
xchg
mov
or
ss
xorb
push
mov
mov
nop
inc
pop
hlt
outsl
lods
pushf
icebp
cmc
movsb
cli
xchg
pop
adc
push
leave
add
xor
push
fcomp
mov
pop
xchg
cld
cwtl
xor
xchg
cmp
mov
pop
loop
mov
xchg
cli
push
mov
jp
mov
jb
mov
jl
mov
xchg
lds
inc
clc
mov
fsqrt
cmp
push
push
cmpsl
into
push
cmp
lahf
cmp
cwtl
loopne
jnp
adc
leave
shlb
mov
outsl
imul
jbe
mov
lds
xchg
fstpt
mov
std
pop
push
rorl
adc
inc
in
int
das
add
cmp
test
cmpsb
leave
cmp
mov
mov
hlt
movsb
inc
pop
add
into
scas
adcb
jae
sub
jo
je
mov
repnz
aam
push
out
lds
enter
or
ret
out
out
xchg
mov
icebp
mov
and
out
sbb
xchg
push
cmp
or
xchg
and
sbbl
mov
add
sub
cmp
dec
int
cmp
aad
fdivs
es
sbb
inc
push
mov
movl
dec
mov
pop
daa
and
sub
mov
movsb
je
es
ljmp
ja
adc
mov
je
mov
lret
jecxz,pn
iret
subb
sub
sub
pop
vmovaps
cmpsb
fs
xchg
cmp
xchg
add
and
faddl
jge
popa
xchg
mov
cmpsl
push
aad
lahf
mov
xor
or
jne
mov
or
and
inc
sahf
rcrl
mov
add
jo
sbb
or
out
int3
mov
lds
out
sbb
mov
sbb
cs
jae
in
xlat
call
pusha
sbb
push
adc
push
insl
test
pushf
bound
nop
sub
mov
insl
jns
or
inc
test
ss
cs
mov
mov
andb
ret
sub
push
movsb
mov
lret
pop
pop
int3
xchg
xchg
jne
stos
adc
jns
int
mov
ret
and
or
xor
sub
flds
xchg
add
rorb
cmc
lret
cli
xchg
mov
xorl
sub
out
lods
jecxz
and
int3
mov
cmpsb
lods
lahf
push
imul
int3
lds
mov
and
adc
rorb
shrb
rorl
icebp
test
mov
test
sbb
push
fwait
gs
popa
frstor
bound
addl
out
xor
je
xchg
inc
mov
inc
dec
sar
mulb
into
mov
mov
sbb
or
call
stos
inc
inc
ret
outsb
mov
mov
mov
aad
ja
shll
loop
lret
shrd
lods
jmp
xchg
nop
aam
cli
ljmp
add
sbb
popa
mov
jbe
scas
fsub
mov
inc
or
xchg
jnp
mov
xlat
ror
pop
xchg
insl
xor
iret
out
imul
adc
rcrb
aas
int3
into
cmpb
mov
iret
stos
lds
mov
int
pop
mov
pop
stos
adc
mov
push
xchg
inc
mov
in
and
jp
mov
in
mov
nop
and
fbld
les
xchg
mov
mov
mov
lahf
dec
movsb
enter
shlb
adc
leave
xlat
mov
sub
divb
push
and
mov
mov
jo
repz
pop
daa
adc
lock
iret
into
mov
test
inc
or
fwait
mov
mov
mov
mov
inc
lock
test
jge
jp
lret
jl
popa
out
ljmp
or
xor
cmpsb
leave
add
jae
int
movb
stos
cmp
or
fdivs
leave
jle
jge
jnp
mov
or
push
iret
mov
push
jb
pop
or
cs
xchg
aad
mov
fucomip
call
sub
nop
iret
leave
cmp
mov
cmp
fsubl
nop
and
adc
std
ror
out
out
repnz
sbb
sbb
or
lods
mov
push
sub
jp
xchg
dec
sbb
scas
adc
sub
mov
jl
push
adc
xchg
mov
or
adc
xlat
mov
mov
sub
clc
fistpl
popa
cmp
add
mov
add
dec
ret
pop
in
cmp
iret
cmpb
mov
mov
in
jne
movsb
or
adc
mov
cmpsl
push
in
lahf
jmp
cmp
cltd
push
add
push
pop
xor
test
sbb
int3
inc
sub
es
mov
push
repz
fistpl
aam
shlb
enter
mov
xchg
lret
cwtl
data16
or
in
xchg
lret
pusha
add
cmp
or
jb
mov
mov
into
cld
inc
pop
leave
or
push
sbb
out
add
add
sbb
or
inc
pop
pop
xor
lcall
push
xchg
lock
and
fstpt
subb
cmp
and
sbb
push
sbb
test
xchg
inc
sbb
fcomp
push
xor
sub
mov
ret
add
sbb
sbb
cmpsl
nop
insl
cmp
repz
pop
ror
and
mov
dec
push
jl
lods
mov
sahf
xchg
jb
mov
adc
xchg
stos
pop
divl
jge
xor
ja
into
xorb
clc
lret
repnz
imul
int3
shll
fbld
cmpsb
out
mov
xchg
dec
push
push
push
movsl
test
inc
enter
dec
mov
push
adcl
sub
and
out
ret
loopne
cltd
fdivl
es
pop
sti
push
stos
adc
xchg
nop
fcoml
fiadds
push
push
scas
mov
cli
repz
movsl
mov
cmc
sbb
rolb
cld
mov
mov
jp
adc
xchg
fsubl
mov
into
dec
repz
outsl
fdivrl
adc
ret
dec
inc
mov
jne
popf
sbb
or
mov
pop
mov
dec
xchg
imul
push
adc
call
mov
pop
push
or
movsw
pop
sub
mov
dec
shl
ljmp
cmp
enter
mov
xchg
jbe
sub
push
cmp
push
cmp
sbb
ja
sub
pop
adc
mulb
and
push
mov
pop
imul
test
pushl
push
xchg
sbb
leave
pop
xor
fcomip
fdiv
add
rol
data16
outsb
inc
mov
nop
repz
or
cmp
mov
or
mov
mov
cmpsl
rorb
mov
sahf
mov
fcmovu
je
ds
aad
mov
jae
pop
xor
shl
gs
stc
dec
or
jne
fldl
cwtl
faddl
stos
push
mov
or
aad
jl
loopne
ja
out
inc
repz
push
loop
or
ss
xchg
xor
aam
aad
xchg
fimull
out
jne
or
xchg
loopne
sbb
jno
int
test
rol
xchg
loope
mov
push
push
stc
sbb
stos
outsb
lcall
add
dec
pop
and
mov
sub
sahf
stos
or
nop
xchg
mov
or
addb
mov
data16
mov
mov
sub
and
je
push
sarb
jo
neg
push
jae
outsl
std
jnp
sbb
insb
push
shrb
shlb
imul
jb
stc
pop
sbb
push
loope
or
inc
jp
mov
sarb
mov
jns
fwait
mov
in
cmp
test
jge
sahf
fisubrl
iret
add
mov
fldl
mov
pop
out
aad
lods
movsl
xchg
bound
sahf
popa
and
jecxz
inc
lret
ret
mov
pop
sub
in
add
xchg
mov
subl
pop
cmpsl
imul
lea
lods
daa
int3
push
mov
mov
xchg
sbb
shr
jge
mov
mov
in
shll
icebp
dec
in
mov
dec
test
push
pop
cmpsl
mov
roll
mov
cmpsl
icebp
iret
mov
push
scas
inc
test
sub
dec
clc
outsb
into
bound
jmp
jno
loop
mov
leave
sub
in
adc
ja
mov
xchg
ret
xor
subb
push
jecxz
test
push
daa
xchg
add
sub
movsl
mov
lods
xchg
lods
sbb
add
insl
xor
sarl
mov
mov
mov
test
or
inc
mov
xchg
jmp
nop
mov
mov
shll
arpl
or
mov
and
push
cmc
mul
sub
sbb
xorb
push
ret
or
mov
ffree
pusha
cmp
mov
in
cwtl
pop
fstl
jb
inc
ret
xchg
sti
xchg
jae
mov
jae
cmp
cmp
in
mov
push
push
cmc
out
jae
sbbl
mov
adc
cmp
cmp
xchg
cmp
mov
inc
divl
enter
lcall
pop
fistpl
push
xchg
jbe
mov
inc
sub
cmpsl
xchg
jp
push
rolb
mov
andb
inc
mov
in
stos
add
bound
pop
cltd
lea
sbb
jp
push
into
rcl
mov
pop
mov
lods
mov
dec
daa
mov
sar
sub
xchg
addr16
ss
popa
call
push
mov
pop
mov
mov
pop
mov
push
sub
and
int3
jne
lds
aam
adc
lods
mov
cmp
or
inc
popa
push
rcrb
lret
mov
jns
pop
mov
lea
push
mov
xchg
popa
sub
pop
jae
push
pop
faddl
adcl
xor
adc
dec
jae
je
pop
jb
hlt
cmpsb
loope
mov
movsb
imul
ss
sub
arpl
out
jge
push
push
mov
xchg
xchg
movsl
pop
adc
sbb
shlb
xor
fsts
cld
lret
cmp
and
mov
lods
add
mov
shrb
inc
or
cmp
bound
fistps
clc
dec
cmpsb
leave
and
clc
add
push
and
xchg
mov
mov
leave
aaa
xor
ret
jmp
xchg
push
fwait
mov
test
mov
je
dec
and
lods
adc
dec
and
xorb
das
push
inc
les
cmp
adcl
xchg
lea
inc
dec
inc
adc
rcll
fs
or
sar
arpl
mov
lahf
call
fwait
xchg
sarb
jp
jbe
xor
cmp
mov
std
inc
pop
mov
and
mov
jo
add
fmuls
pushf
pop
xor
movsl
sahf
push
sbb
ljmp
inc
pop
fnstsw
shrl
dec
movsb
test
daa
mov
sbb
pusha
sbb
and
dec
dec
push
jbe
subb
mov
mov
mov
push
ljmp
add
or
cmp
test
jns
jecxz
sbb
jge
hlt
and
out
mov
jecxz
pop
enter
mov
mov
lahf
sub
cmp
xor
nop
das
xchg
pusha
pop
dec
or
data16
repz
and
dec
mov
mov
pop
psubd
fmull
int3
es
test
fadds
loope
sbb
dec
mov
loope
jo
push
outsl
test
mov
dec
stos
lea
ret
movb
fwait
adc
ss
jbe
in
das
push
jmp
clc
ljmp
jbe
fstp
cmp
sbb
inc
cmp
xchg
lret
orb
xchg
scas
add
and
cwtl
dec
or
or
mov
mov
call
loop
xchg
pop
inc
inc
insl
sub
sti
mov
leave
sti
sbb
pop
jecxz
into
dec
lock
iret
dec
xchg
jns
xor
mov
adc
jae
sbb
in
xor
xchg
rcll
sbb
inc
jae
adc
dec
jbe
inc
pop
adc
stos
mov
es
pop
in
call
nop
cmp
mov
cmpb
mov
mov
xchg
enter
dec
cmp
andl
xor
into
in
xor
ficoml
push
into
or
ret
mov
scas
outsl
data16
sti
ret
fidivrl
loope
cmpsb
shll
adc
push
scas
jnp
mov
push
iret
pop
repnz
cmp
dec
pushf
dec
push
dec
jl
xchg
cmp
outsl
fsubr
repz
pop
mov
cmp
push
jge
in
or
int
fistl
inc
bswap
cmp
shrl
push
mov
push
jae
in
inc
iret
mov
shlb
rcll
mov
dec
movsb
push
ret
pop
hlt
push
add
es
mov
xor
into
add
ja
jmp
cmc
cmp
pop
mov
pop
push
shrl
xor
jecxz
jge
ja
fstpl
xchg
lods
lcall
movl
orl
or
int
push
lret
in
shll
xchg
mov
xchg
dec
mov
in
mov
cmc
mov
out
js
gs
mov
faddl
std
xlat
jmp
xlat
adc
mov
sbb
sub
inc
cmc
pop
ret
mov
or
cmp
cld
adc
imul
adc
lods
inc
aam
call
xchg
cli
mov
jbe
ret
ljmp
aad
popf
xchg
xor
xchg
test
or
xchg
adc
stos
int
mov
andl
xor
push
lods
xor
loopne
dec
add
cld
sahf
cwtl
sahf
fnstsw
xor
pushf
orb
xchg
data16
jns
test
adc
jbe
roll
cmpsl
icebp
rcrl
jl
push
setbe
mov
add
push
shrl
ret
repnz
push
jg
push
repnz
mov
or
xchg
jne
inc
dec
mov
push
xchg
in
xchg
pop
data16
jp
cmp
test
clc
xor
outsb
add
add
leave
push
cs
jbe
cli
cmp
xor
push
repnz
dec
cltd
divb
loop
movsl
adc
data16
xchg
ret
sub
xchg
rclb
test
or
mov
mov
outsb
sub
jp
stos
iret
mov
rorl
mov
and
fxch
decb
push
or
push
popf
add
les
xor
cltd
movsl
cli
push
xor
cmp
add
fdivl
imul
repz
push
lcall
mov
outsb
push
fistpll
aad
decb
rolb
addr16
mov
lcall
loopne
cmp
inc
cmp
mov
cltd
push
jno
movsl
pop
cltd
loopne
lret
mov
gs
adc
test
xchg
and
sahf
mov
inc
hlt
cmp
cmp
fmuls
xor
and
mov
pop
xchg
mov
test
sub
jg
adc
sti
or
mov
test
dec
xor
enter
sti
insl
xchg
mov
push
jmp
xor
cmp
xor
jmp
fnstenv
fcmove
jl
mov
or
popl
mov
xchg
jb
cmpl
test
dec
out
jg
sbb
jo
cwtl
out
mov
xlat
subb
pop
jne
pop
inc
sahf
mov
icebp
add
nop
inc
xchg
xchg
mov
mov
xchg
mov
mov
lcall
xlat
sahf
mov
loop
mov
xchg
shll
jle
xchg
add
cmpsb
lret
mov
leave
outsl
jp
fsubrs
dec
hlt
or
mov
jbe
icebp
jb
nop
push
mov
jbe
mov
neg
out
mov
pop
or
hlt
jb
jbe
adc
inc
ret
jns
ret
push
mov
adc
and
xlat
cltd
lcall
leave
jge
mov
inc
pop
js
in
dec
hlt
sub
test
mov
jbe
push
sub
add
leave
ds
sub
push
loopne
mov
pop
xor
adc
mov
ror
dec
pop
mov
xchg
imul
lea
sub
push
scas
loopne
lea
mov
orb
inc
pop
xchg
ljmp
cmp
movsb
or
mull
aam
xchg
sub
push
aad
cmp
ret
xchg
lods
and
popf
sub
addr16
out
cmp
or
jecxz
lahf
lahf
push
fildl
shlb
jecxz
mov
dec
nop
fmulp
mov
mov
adc
aad
or
test
sbb
rcll
pushf
aas
imul
test
ret
jge
cli
leave
addr16
fcomip
xor
jp
jbe
shlb
xchg
push
cmp
stos
movsl
dec
arpl
orb
shlb
pop
cli
lea
push
mov
repnz
icebp
sub
mov
out
call
ret
js
or
jg
mov
or
push
cmp
int
or
sbb
mov
cwtl
int
push
rclb
aam
andl
jnp
ss
mov
xchg
lock
enter
lcall
ror
into
out
lods
insb
push
iret
mov
inc
call
mov
lahf
and
bound
mov
xchg
mov
lahf
loopne
xchg
sbb
data16
lret
adc
add
sbb
shrb
pop
test
pop
stos
addr16
sbbb
and
test
ret
int3
and
push
inc
shl
xchg
jp
xchg
mov
ficoml
xchg
sbb
popl
push
cld
mov
xchg
add
ret
fisubs
push
push
adc
pop
lods
or
mov
popf
jae
xor
hlt
mov
mov
and
lret
int3
aaa
outsl
fwait
or
fs
mov
popa
lcall
ret
cmpsl
push
fldt
cs
cli
int3
mov
insb
cmp
mov
inc
cmp
inc
fsubrs
rorl
pop
mov
test
and
call
pushf
popa
mov
punpckhwd
or
jnp
inc
inc
iret
push
rclb
xchg
shrb
in
sub
sub
add
xchg
inc
lcallw
out
fcmovbe
mov
out
cmp
lods
push
call
mov
mov
ret
xchg
cmp
mov
mov
es
push
aad
cmp
xchg
lahf
rorb
add
cli
movsl
mov
push
movsl
lea
cs
jle
aas
insb
xchg
add
mov
ret
pushf
or
test
pop
outsl
clc
pop
xchg
leave
and
mov
test
fbld
mov
in
int
lahf
sbb
shr
adc
lock
repnz
inc
mov
cmpb
and
or
fnstenv
lahf
sti
loop
xchg
mov
and
jmp
jmp
mov
or
add
ja
dec
fwait
rclb
repnz
scas
test
insb
dec
daa
and
orb
cmp
ljmp
js
pop
sbbl
insb
movsb
sub
imul
lret
ret
jmp
push
fsin
xchg
test
enter
or
sbb
mov
fsubrs
or
mov
faddl
and
or
sti
mov
inc
shll
repnz
std
push
inc
add
das
stc
push
test
xor
pusha
enter
int
dec
lahf
rolb
imul
xchg
jns
adcb
or
mov
addr16
push
je
xor
xor
inc
pop
dec
aad
outsb
mov
shr
or
fxch
push
inc
mov
sbb
sbb
andl
lahf
sbb
mov
repnz
cmp
push
into
xchg
test
mov
xchg
repz
test
rcrl
or
mov
mov
test
xchg
shll
dec
sub
pop
mov
sahf
jae
sahf
adc
mov
repnz
into
jg
repz
gs
loop
mov
jae
je
fbstp
cmp
mov
and
test
insl
lcall
mov
test
jg
dec
ss
sbb
inc
dec
cmp
push
sub
or
pop
mov
adc
gs
repnz
cmpl
ret
aad
nop
and
repnz
test
scas
jo
lea
test
sub
pop
icebp
adc
mov
adc
pop
cmpsb
inc
aam
adcb
mov
rol
ret
cmpsb
repz
setbe
mov
dec
mov
addr16
cmp
pushf
and
movsb
shlb
xchg
dec
fadds
sbb
je
adc
or
or
mov
add
jns
dec
sbb
fs
jp
mov
adc
jge
sti
xchg
mov
dec
jp
xchg
jp
fistpl
fstpt
mov
xor
sub
jp
lahf
fwait
addr16
mov
or
sub
mov
in
push
into
into
dec
add
mov
push
cld
nop
ds
int3
xor
hlt
sarb
in
sbb
cmpsb
movsl
mov
iret
call
adc
mov
mov
mov
cli
aaa
push
repnz
dec
ljmp
mov
adc
mov
mov
push
sub
push
lret
movsl
movsl
shll
addr16
jge
mov
xchg
lcall
cmp
divb
adc
lock
lods
inc
add
adcl
jg
movntq
movsb
mov
or
leave
imul
or
sahf
fstps
js
roll
movsl
jbe
sbb
mov
cmp
lods
jb
cmpsl
out
push
push
jg
call
or
mov
sbb
aad
rorl
xchg
push
andb
xor
sub
popf
dec
test
mov
inc
das
aas
pop
les
jp
int3
leave
bound
add
xchg
cli
sti
and
dec
rcrl
mov
arpl
cmp
xor
pop
jecxz
rcrl
and
les
jbe
dec
outsl
repnz
adc
cmp
mov
cmp
inc
or
pop
pop
cmp
nop
sub
fnsave
mov
mov
and
xchg
in
mov
cmp
addr16
xchg
or
cltd
add
mov
shl
xchg
lcall
lret
push
sbb
mov
ficoml
data16
adc
mov
ficoms
shll
sbb
divps
pop
outsl
stc
sarb
pop
fs
stc
fs
and
push
fimull
loop
jns
test
mov
and
adc
xor
movsl
das
jp
adc
roll
push
sbb
cli
lcall
outsb
sarl
mov
clc
xchg
stos
push
leave
sub
daa
pop
lods
xor
and
jp
dec
dec
lahf
mov
inc
fwait
stc
mov
jnp
mov
in
xchg
or
adc
aad
ret
push
sbb
scas
lret
cli
mov
or
cli
repz
call
push
popa
out
and
fadds
scas
enter
cmpsl
or
roll
imul
out
cmp
dec
nop
dec
cmp
xchg
testb
add
bts
jmp
ja
jle
pop
repz
repz
cmp
scas
test
je
dec
jmp
sbb
mov
int
stos
nop
stos
sub
push
outsl
stos
push
xchg
stc
lahf
out
adc
adc
mov
bound
sbb
push
xchg
test
stos
mov
out
lcall
mov
push
ljmp
cmpsb
mov
and
je
js
adc
data16
cmpl
inc
xor
xlat
fsub
int
aas
cmp
mov
aas
in
in
mov
clc
repz
pop
gs
mov
dec
push
pushf
mov
mov
je
cli
mov
inc
inc
jp
arpl
cmp
insb
sub
in
nop
push
sbb
in
dec
jbe
or
ffreep
lret
faddl
cmc
mov
dec
repnz
aas
or
stos
dec
bnd
out
mov
mov
adc
pop
scas
and
xchg
jl
dec
lahf
rclb
or
mov
cmc
es
xchg
xor
and
lds
push
stos
loop
xchg
xorb
mov
jnp
add
jo
cmpsl
in
imul
hlt
mov
cmp
sarb
push
inc
out
nop
jbe
negb
aam
xchg
fdivs
aad
jg
pop
mov
dec
sub
push
cmp
cwtl
or
xchg
ret
push
fs
push
cmp
add
jge
rclb
jge
out
dec
push
leave
sub
xor
pushf
fadds
addl
xor
xchg
lahf
mov
sahf
push
stos
scas
push
adc
push
int3
jbe
lcall
fwait
sub
mov
or
popa
movlps
add
fwait
xchg
mov
inc
xor
mov
cmc
ret
inc
mov
mov
xor
loopne
xchg
mov
or
sub
jp
inc
jns
push
wrmsr
pop
in
xor
jge
ror
mov
ret
and
nop
mov
adc
xchg
add
loop
inc
mov
adc
dec
xor
call
cmpsl
xor
sahf
test
aam
sti
xchg
cld
in
mov
or
lds
stos
std
mov
imul
sub
lahf
pop
inc
out
aad
lcall
add
mov
jb
iret
sub
scas
aad
push
stos
xchg
cmp
cmp
mov
bound
orl
cmp
stos
xchg
jb
in
leave
cmp
sub
jae
xor
pusha
add
jge
mov
cmpsb
out
or
push
shlb
xlat
pop
popa
sbb
test
loopne
outsb
xchg
ror
dec
daa
hlt
repnz
pop
inc
test
xchg
cmc
jp
xchg
in
add
ret
or
dec
outsl
cmp
subb
repz
push
daa
std
sti
mov
ds
mov
mov
bound
push
subb
loop
xchg
jl
insl
mov
pop
xchg
ja
lods
cmp
add
fnstenv
test
adc
xchg
test
lahf
movsl
mov
mov
push
xor
xor
enter
adc
mov
or
mov
outsl
test
add
xchg
xchg
bound
pop
and
inc
mov
movsb
shrb
or
and
lcall
nop
jge
movsb
mov
lea
sub
add
out
cld
sbb
vphaddubd
cld
shrb
test
inc
add
xor
push
pusha
mov
movsl
pop
push
mov
lea
ud1
mov
outsl
out
sahf
aas
mov
subb
jl
hlt
aas
enter
lcall
stos
push
pop
inc
or
dec
cwtl
mov
rclb
cmp
push
mov
enter
dec
push
popa
movsl
fcmovbe
int
fwait
out
pop
sub
out
push
xchg
pop
push
jns
bound
imul
leave
lods
push
mov
lret
push
mov
push
mov
dec
xchg
mov
adcl
fs
mov
ljmp
lea
inc
add
cli
lcall
pusha
push
mov
xor
jp
insb
sbb
sub
mov
addr16
cmp
cli
mov
mov
jae
mov
pop
mov
sbb
push
mov
jns
xor
ljmp
inc
int
pop
ja
inc
xchg
nop
rcll
rorb
ret
cmp
sub
jl
inc
sub
mov
fildl
xchg
lods
xor
add
mov
andb
aam
mov
mov
in
andl
push
xor
and
mov
xlat
daa
or
mov
push
ret
test
out
or
mov
fiadds
cmp
cltd
out
mov
or
cmpsb
cmp
lret
and
sub
mov
scas
or
notl
mov
or
adc
adcb
mov
or
add
fimull
dec
add
sub
xchg
divb
sbb
and
mov
ret
xchg
nop
testb
lahf
shll
fs
jp
mov
adc
inc
orl
mov
mov
cs
orb
and
call
iret
clc
in
jecxz
jl
ljmp
xchg
mov
mov
mov
sbb
add
movups
pop
jmp
call
xor
dec
mov
sbb
in
or
mov
inc
push
test
iret
or
inc
xorl
mov
aam
dec
out
orb
mov
or
arpl
fs
xchg
mov
jg
sti
jb
data16
lret
sbb
sbb
mov
push
iret
xchg
daa
xchg
shlb
repz
arpl
test
cli
xchg
test
out
jecxz
iret
adc
mov
jbe
jbe
flds
sti
mov
fistl
fistps
mov
xchg
aad
nop
fcoml
cmp
nop
adc
cli
mov
lods
mov
jg
outsl
mov
xor
sarl
int
movsb
popl
mov
sub
xor
jno
add
push
cmp
sbb
sub
mov
repz
cwtl
repnz
push
xchg
jo
fsubs
dec
adc
mov
bound
xchg
in
xchg
pop
mov
inc
xchg
xor
inc
sbb
pop
fsubl
mov
call
jmp
enter
dec
push
push
or
shrb
jno
jne
pop
and
mov
in
add
insl
inc
mov
mov
test
or
nop/reserved
xchg
jae
adc
sub
test
mov
neg
fidivrl
cmp
pop
mov
pop
in
lods
add
lret
dec
jae
cltd
mov
std
cmpb
loopne
js
push
xchg
mov
sub
mov
inc
repnz
sbb
adcl
xchg
xchg
xchg
pop
dec
call
push
mov
enterw
mov
push
mov
adc
stc
fildll
pop
cld
mov
and
aad
fldcw
sbb
outsb
push
jno
mov
jge
dec
mov
mov
dec
cs
rorb
add
orb
push
adc
addr16
inc
mov
gs
and
scas
push
xchg
add
adc
cmp
outsb
pop
add
test
cli
test
cmp
out
dec
clc
mov
add
pop
push
ret
xchg
sub
mov
jp
clc
push
data16
test
dec
pop
pop
sti
xchg
arpl
insl
lods
mov
ret
cld
scas
out
ss
mov
bound
and
lea
sahf
jnp
cmp
cld
dec
push
xchg
mov
js
daa
sub
mov
cmpsl
aad
and
pushl
js
repnz
lods
xor
cmpsl
mov
lds
cli
lahf
lock
dec
pop
xchg
sub
xchg
mov
dec
dec
mov
in
mov
cld
cmp
pusha
mov
adc
mov
jg
rclb
add
pop
xor
adc
jl
add
mov
int3
es
push
cmp
insb
fucomi
push
xchg
sub
pop
cld
loop
notb
in
add
dec
lcall
fiaddl
jo
iret
mov
mov
scas
aas
or
xor
xchg
stos
cmp
push
add
dec
cli
sbb
scas
add
mov
jnp,pn
std
es
xor
mov
insl
jae
cli
jge
leave
push
dec
stc
add
repnz
inc
add
mov
push
std
xchg
xchg
dec
xchg
or
out
ss
sbb
mov
add
test
je
mov
or
fwait
jp
ds
sbbb
inc
adc
xor
xor
mov
push
jo
sarb
out
push
adc
jo
lret
fstps
lea
cmpsb
jae
pop
fisttpl
sbb
inc
xchg
or
iret
push
inc
mov
mov
mov
repz
or
cwtl
into
or
sbb
cmp
fdivp
cmp
sbb
int3
push
sahf
add
push
jge
mov
mov
or
int3
xor
xor
movb
out
mov
les
mov
outsb
mov
jb
inc
aam
into
push
adc
inc
and
mov
push
roll
dec
enter
mov
jl
addr16
and
int3
cs
inc
fcmovbe
movsb
lcall
aas
out
jne
jbe
push
jg
inc
lods
cmp
mov
negb
mov
inc
fnsetpm(287
sub
xchg
xchg
inc
fldcw
sub
or
xchg
sbb
push
das
out
mov
into
aad
sbb
push
dec
scas
pushf
xchg
outsb
inc
loop
insb
sbb
test
mov
jbe
test
push
test
loopne
sahf
cltd
addr16
inc
xchg
sarl
into
push
inc
shr
scas
fimuls
shll
mov
into
inc
mov
pop
mov
and
mov
sbb
pop
jmp
xchg
push
push
aas
xchg
gs
jp
mov
jae
mov
aaa
test
xchg
adc
dec
lret
add
inc
jp
ds
stos
push
cwtl
testb
mov
ret
xchg
mov
sub
into
jge
cmpsb
mov
cmpsl
dec
sbb
push
in
pop
xor
cmpsb
or
xor
mov
test
pop
fnstenv
bound
rcrl
push
testb
add
lahf
push
sbb
fidivrs
push
call
movsb
jns
data16
inc
aam
daa
clc
pop
push
xor
inc
sub
fs
push
jle
ss
jnp
fdivl
outsl
add
xor
lcall
scas
pushf
jg
leave
xchg
mov
xchg
les
fldl
dec
repz
gs
push
adc
jg
mov
inc
pushf
fisttpll
movb
xchg
data16
pop
pop
xchg
ret
jns
mov
loop
repnz
xchg
xchg
cmpsl
loope
xchg
daa
mov
mov
jns
xchg
xchg
jo
push
enter
ss
dec
jns
xor
jns
sbb
imul
push
inc
mov
clc
mov
dec
push
mov
jnp
scas
cmp
mov
sbb
scas
and
aad
pop
jnp
insl
sti
push
xchg
or
aad
sbb
mov
and
push
into
jle
mov
data16
xlat
xchg
or
fsubrs
daa
das
stos
mov
pop
and
mov
clc
adc
repz
and
ret
test
std
lods
add
and
lcall
pusha
test
mov
aad
jp
sbb
test
jnp
shll
gs
mov
cmpb
and
xchg
nop
adc
stc
repz
mov
add
in
mov
imull
data16
pop
jo
fwait
add
cmp
out
lahf
jl
insl
cli
mov
push
stc
adc
mov
mov
adc
mov
shl
fnstcw
sti
nop
aas
mov
data16
js
movsb
cli
sub
cmp
int
mov
lcall
mov
cmp
push
orl
jl
sub
decl
inc
push
dec
repz
add
sub
nop
sahf
jmp
mov
icebp
or
pusha
jg
ja
mov
xchg
mov
hlt
mov
mov
mov
in
xchg
xchg
cmp
dec
cwtl
nop
add
cmp
js
cmp
int
push
rcll
jl
or
jbe
cwtl
adc
leave
ja
push
or
add
cmpsl
xchg
fsubrs
push
push
aaa
add
inc
pop
adc
pop
imul
js
stos
add
mov
in
test
repnz
push
mov
adc
jo
adc
repnz
adc
sbb
adcb
sub
jns
inc
sbbb
cmp
rcrb
mov
adc
leave
or
jb
inc
sahf
rcrb
dec
push
int3
loope
icebp
sub
inc
pop
sbb
sub
or
or
fnstenv
jl
data16
or
int
aad
addr16
cmp
bound
shrb
pusha
xlat
fcmovnu
ss
push
lea
into
les
push
popf
xchg
mov
xchg
mov
lret
addr16
xchg
into
movsl
aaa
out
arpl
adc
call
pop
sub
sbb
adc
jmp
mov
mov
jbe
mov
dec
loopne
adc
ror
inc
pop
or
stos
cmp
data16
aaa
xor
mov
xchg
mov
jg
or
push
push
sbb
xlat
inc
jns
xchg
ror
aam
push
or
popl
sahf
rcrb
orb
mov
popf
add
xor
xchg
mov
out
mov
jb
xlat
pop
mov
leave
fdivrs
out
lahf
mov
and
pop
stos
mov
shrl
inc
insl
pop
ud1
aaa
js
jg
icebp
add
hlt
cli
adc
lahf
push
nop
les
clc
lahf
lock
mov
mov
jge
push
mov
mov
rolb
lcall
mov
jl
fwait
jbe
test
test
daa
lods
test
repz
add
test
iret
xchg
or
aam
xor
loopne
or
leave
jg
test
cld
and
enter
popf
sti
addr16
dec
jg
dec
push
mov
add
mov
mov
lcall
mov
cwtl
stos
into
aad
lahf
addr16
loope
lcall
mov
mov
pop
imul
mov
test
test
test
and
mov
test
mov
lea
cmp
fs
bound
outsb
mov
out
fwait
adc
jmp
aaa
adc
addr16
xchg
push
sahf
xlat
popf
xor
add
addr16
loopne
mov
and
adc
jl
add
out
xchg
loop
and
roll
add
mov
mov
andl
mov
cmp
mov
or
icebp
jecxz
cli
xor
adc
add
leave
xchg
sub
aad
mov
xchg
test
push
aad
jge
inc
cmpsb
adc
mov
xorl
leave
cmp
pop
addr16
in
in
xchg
aam
sbb
pushf
es
dec
mov
add
ficoms
imul
mov
ret
ret
mov
xchg
push
lods
inc
add
stos
sbbl
push
out
mov
fiaddl
shll
xor
inc
loopne
inc
fcmovu
fldcw
push
lea
or
test
testl
aas
add
imul
sbbb
hlt
orb
jae
lods
dec
lock
roll
mov
stc
sbb
pop
lds
adc
xorb
dec
and
xchg
dec
jbe
mov
out
xor
sahf
sahf
movsl
orb
inc
xchg
lds
adc
lods
and
cmc
iret
cbtw
lods
push
inc
mov
inc
mov
sar
mov
xchg
jns
movl
sbb
out
nop
js
sbb
test
mov
aam
dec
jb
jecxz
sub
pusha
add
imul
pop
push
mov
xchg
add
mov
jg
pop
pop
ficomps
imul
ret
scas
adc
fcmovu
ja
stos
ficompl
jno
leave
daa
adc
lcall
mov
mov
repnz
jnp
mov
cltd
imul
inc
aad
push
fstps
add
imul
in
es
inc
mov
mov
scas
in
stc
pop
mov
sub
ret
int3
repnz
pop
fs
mov
jl
aad
stos
mov
sahf
ljmp
adc
in
mov
add
mov
cmp
fdivrs
test
mov
inc
mov
pop
addr16
loopne
int3
call
mov
mov
aas
loop
add
mov
ret
cmp
addb
and
addr16
cwtl
jl
repz
mov
mov
mov
lret
daa
orb
pop
les
fisttpl
push
mov
sbb
mov
jge
add
int3
in
push
shll
mov
jnp
in
jno
mov
scas
push
movsl
push
mov
adc
push
add
out
fcoms
fldl
xor
test
notl
push
hlt
movsb
ret
mov
ret
sti
xchg
pop
sub
or
lret
leave
add
jecxz
add
scas
je
movsb
mov
xchg
cwtl
xor
adc
xlat
aas
movsb
mov
insb
mov
nop
outsl
gs
push
mov
bnd
mov
xchg
inc
xchg
pop
adc
mov
ss
mov
aas
xchg
mov
xchg
push
addr16
or
sub
mov
xchg
nop
mov
jnp
inc
ljmp
mov
adc
pusha
xchg
icebp
repz
push
or
aaa
mov
mov
sub
rolb
ljmp
lds
xchg
lret
mov
jbe
cmp
pop
adc
pop
mov
sarb
sbb
test
sbb
push
push
cmpsl
sti
mov
lcall
dec
push
xchg
lret
mov
test
mov
int3
sub
es
mov
xchg
test
cmp
test
rclb
aad
cmp
xchg
mov
rorb
int3
fiaddl
mov
or
dec
pop
fidivl
shll
imul
push
sub
mov
pop
dec
lods
xor
cmp
flds
stos
or
lret
jge
sbb
sub
mov
cmp
js
call
iret
dec
test
inc
bound
shr
sub
push
ds
cli
leave
and
repz
mov
cmp
shl
mov
or
arpl
pop
mov
not
mov
mov
jns
lods
popf
cmpsl
inc
mov
fdiv
mov
movsl
bound
and
enter
fldz
aad
fucomp
xlat
pushf
or
aam
jns
lods
orb
into
sarl
cmp
sub
cmp
iret
jne
mov
pop
shr
cmpsb
pop
jb
inc
mov
psrad
movsl
pop
test
adc
jo
dec
and
jns
imul
cmp
lock
negb
jl
mov
aad
push
cli
or
xchg
loopne
mov
jmp
add
sub
jo
into
cmc
das
sbb
test
dec
dec
data16
cmp
xor
jnp
aaa
mov
sti
ret
xchg
cmp
jge
lods
or
xor
daa
sti
mov
dec
data16
sbb
int
mov
inc
test
pusha
pop
fldenv
sub
xchg
jnp
mov
sti
push
vmovlps
push
pop
inc
mov
cmp
mov
imul
cmp
ljmp
in
aam
sbb
inc
jecxz
add
mov
nop
in
ret
cli
aad
adc
loop
ss
xor
lcall
outsl
or
test
jg
inc
ret
mov
xchg
lea
jo
cmpsb
mov
mov
push
rorb
addl
push
inc
add
lds
jb
ficompl
adc
jecxz
test
fnstsw
insl
movb
int
jbe
xchg
mov
cmpsl
into
movsb
scas
leave
xchg
jg
mov
shll
leave
or
leave
sub
or
addl
lret
mov
sub
shr
mov
ror
add
inc
mov
mov
subl
pop
mov
inc
cmp
clc
mov
jb
cmp
repnz
inc
imul
mov
into
dec
mov
inc
xor
mov
cmp
in
adc
cltd
das
xor
mov
sysret
sub
lret
leave
cvttps2pi
lret
movsl
add
xchg
cmp
xchg
repz
jl
mov
xchg
pop
repz
movsb
repz
mov
out
aad
stos
loopne
xor
fucom
cltd
ss
nop
je
sahf
push
adc
arpl
in
ss
ret
add
icebp
dec
mov
sti
insl
jmp
scas
xor
push
out
mov
lret
into
shrb
test
mov
je
and
sbb
jp
bound
mov
add
pusha
add
roll
push
sbb
lahf
mov
sub
or
push
mov
sbb
in
push
fnstsw
xchg
lods
push
xchg
add
pop
mov
stos
add
cmpsb
push
iret
push
cmp
push
nop
sbb
out
cs
push
xor
orl
fadds
cld
cmp
push
push
lods
xor
in
cmp
adc
jmp
mov
push
xor
sub
pop
pop
mov
lcall
inc
jb
xor
hlt
jbe
sbb
fadd
cwtl
addr16
dec
idivl
es
ja
hlt
push
mov
lcall
stos
push
push
push
ljmp
or
setbe
inc
sub
push
mov
int
pop
cmp
cmc
nop
ret
rcr
imul
xor
fsubrl
ja
xchg
sar
or
leave
inc
dec
xorb
mov
push
idivb
jns
jne
lock
xchg
or
cmp
adc
mov
mov
sbb
mov
insb
inc
dec
inc
fldcw
leave
mov
sub
addr16
lock
mov
jg
or
lcall
rcll
jl
lods
jp
mov
lock
outsb
xchg
nop
cmp
sbb
mov
repnz
xor
add
sbb
out
adc
decl
addr16
cmpsb
fcoml
movsb
and
lcall
sahf
addb
cmp
mov
std
shlb
leave
sbb
dec
lcall
jnp
xchg
test
nop
inc
ret
push
out
in
pop
in
mov
cmpb
jno
testl
imul
outsl
inc
push
ja
cmpsb
dec
jbe
fisttpll
mov
out
push
adc
jmp
sahf
adc
enter
sub
shlb
xlat
dec
sahf
clc
dec
scas
cli
loopw
test
lock
push
adc
sub
sbb
popf
pop
loop
xchg
mov
nop
sbb
stos
push
movsb
inc
fdivrs
push
insb
push
cmc
aam
dec
daa
jns
mov
cmpxchg
enter
in
daa
inc
aam
mov
xchg
xchg
inc
jno
push
nop
out
insb
cmpsb
addr16
test
cmp
ja
push
cmpb
sub
loope
fnstenv
xchg
call
insb
dec
xor
fst
cmp
dec
mov
sub
sarb
mov
inc
repnz
mov
movsl
test
jo
cmpsb
add
lcall
test
mov
into
popf
mov
mov
aam
test
add
ds
repz
sub
lock
cwtl
addr16
adc
jmp
clc
popf
fistps
aaa
test
dec
dec
sbb
xchg
aad
movsl
xor
sub
rol
cmp
xchg
clc
mov
inc
mov
and
and
movsl
sbb
cmp
int3
xor
aam
inc
inc
imul
ret
bound
in
stos
outsl
mov
dec
mov
sub
inc
stc
sub
or
arpl
mov
sbb
push
loopne
out
mov
mov
xchg
je
ret
mov
sub
dec
mov
dec
xchg
lcall
adc
jb
jp
dec
ror
aam
mov
dec
test
xchg
rol
clc
mov
test
add
lea
pop
sbb
inc
js
xchg
cmpsb
mov
fstl
repnz
dec
and
out
mov
das
out
pop
add
popf
pop
add
outsb
dec
mov
out
xchg
mov
ret
std
cwtl
dec
add
jo
mov
call
xchg
push
fwait
iret
inc
and
pop
stos
repnz
adc
xor
push
ljmp
aam
adc
push
mov
out
or
aam
movsb
outsl
movsl
rcll
mov
adc
dec
adc
in
stos
mov
movsl
test
fmull
scas
push
mov
shlb
dec
loop
loop
data16
shl
ret
pop
mov
and
int
xchg
mov
repnz
xchg
jne
push
mov
dec
or
adc
cmp
shrl
push
sub
xchg
cltd
or
sub
scas
xor
pop
xchg
push
testl
mov
xor
fdivr
sbb
mov
xor
ja
scas
pop
inc
repnz
into
inc
mov
repz
or
mov
fiadds
call
cmp
jnp
movsl
push
hlt
sarb
sbb
mov
mov
jae
push
repnz
lret
icebp
and
xchg
push
cmp
fs
add
movsl
leave
sub
sbb
xchg
pop
notb
in
cwtl
mov
xor
cld
int
xor
mov
mov
lret
adc
jno
cs
pop
cmp
sti
test
jbe
jg
jmp
ds
faddp
inc
jecxz
or
mov
fwait
mov
ds
js
push
push
bound
jp
rcr
jb
xchg
mov
cmp
loope
aad
mov
dec
xor
or
repz
fstps
es
mov
sbb
mov
sub
xor
sbbl
movsl
xchg
incl
lret
adc
fdivs
outsl
mov
add
movsb
repz
js
jnp
lahf
bswap
jnp
aam
cmp
xchg
and
aad
add
jge
push
seta
lock
repnz
push
in
enter
hlt
inc
cmpsb
repnz
addl
xor
and
stos
jg
ja
std
movsl
call
add
xchg
add
scas
enter
inc
lret
mov
mov
sub
test
lods
mov
inc
popa
in
jnp
add
cli
or
sbb
sub
int3
add
jae
sbb
mov
xchg
mov
jo
ret
mov
add
pop
push
sti
gs
push
arpl
push
cmc
jp
and
popa
ss
popf
xchg
repz
rorb
shrb
cmp
sub
adc
add
cmp
and
ljmp
and
pop
ret
push
lret
aad
movl
mov
dec
repz
jbe
movsw
js
fidivl
xchg
aas
lock
out
inc
xchg
lds
outsl
outsb
mov
and
test
mov
out
jg
leave
push
stos
cmp
mov
xchg
cwtl
cmp
rcll
adc
clc
cmp
pop
stos
dec
inc
xchg
ficoms
pusha
mov
data16
jbe
inc
lock
or
ss
lods
rcrw
mov
mov
repnz
pop
jne
jns
aam
rolb
adc
push
sbb
aad
fldcw
lock
push
movsb
and
mov
mov
mov
jg
inc
ror
cmpsl
jmp
into
shrb
aam
xchg
jno
jb
ret
enter
jo
jno
mov
adcl
andl
ljmp
push
fcos
jns
ds
das
sub
add
or
repnz
les
iret
sbbl
enter
sub
xchg
mov
jge
jbe
adc
mov
int
and
sahf
cmpsb
pop
sbb
out
mov
aam
std
in
inc
push
insb
test
outsb
gs
push
popf
sbb
mov
jg
jp
lret
add
repnz
test
aad
jae
inc
xchg
aam
addr16
out
jo
add
addr16
test
out
cli
lcall
mov
sub
nop
push
dec
jae
sti
mov
push
pop
fsub
jnp
add
add
mov
cmp
ret
sbb
push
stos
push
add
fstl
dec
sub
lods
call
jg
test
int
sub
xchg
fcompl
push
cwtl
jmp
push
stos
addb
or
cld
pop
xchg
scas
lods
jmp
pop
add
divb
and
mov
dec
xor
movsl
pop
shll
inc
outsl
push
je
outsb
repz
mov
or
mov
pop
xchg
sahf
and
test
pop
lds
subb
xchg
addl
leave
jnp
add
xchg
fisubl
scas
rcll
bound
and
in
out
mov
xchg
fisubrl
arpl
fldt
popf
mov
mov
push
xchg
loope
sub
xor
add
lcall
stos
cmc
test
sub
xchg
gs
int3
inc
lcall
push
pop
pop
fucomp
push
mov
notl
fnsave
fwait
leave
inc
stos
sarl
fstpl
scas
loop
xchg
jp
fsubl
imul
lcall
shr
add
cmc
filds
in
mov
int
ljmp
jp
repz
rol
js
imul
insb
jp
lret
sub
inc
jne
repnz
scas
icebp
ss
daa
lods
push
or
sar
push
fs
insl
hlt
test
xor
lods
pop
jmp
es
inc
add
outsl
adc
scas
sar
xchg
cmp
idivb
cli
loopne
fstps
mov
leave
push
lea
sti
shlb
push
jns
cmp
xor
push
add
dec
into
mov
sbb
cwtl
cmp
cmp
fdivl
push
or
xchg
pusha
loop
pop
mov
jbe
adc
jae
push
out
leave
aad
mov
add
mov
push
dec
mov
xchg
adc
stos
pop
jg
das
mov
test
repnz
mov
pop
mov
and
sahf
ja
stos
imul
lea
xchg
sbbb
inc
ret
movsl
movsb
addl
js
cmp
jnp
pop
or
test
mov
rclb
movsb
sub
cmp
mov
jl
cmpsl
fnstcw
mov
dec
call
hlt
cmp
sub
and
xchg
aaa
repnz
aad
fwait
pop
daa
call
test
cwtl
mov
fdivl
pop
push
add
xchg
jl
rolb
lret
mov
push
rol
sbb
dec
xor
imul
inc
cmp
out
lds
or
mov
call
loope
sbb
hlt
mov
and
movb
movb
orl
je
xchg
adc
pusha
adc
xlat
jle
iret
xchg
mov
pop
adc
pop
data16
xor
or
ret
xorl
jge
add
mov
xchg
aam
sahf
out
cmp
xchg
scas
push
lret
pop
imull
orb
or
cmpsl
stc
adcb
mov
in
addb
cmpsl
xchg
mov
mov
inc
pop
out
xchg
and
les
dec
clc
test
rorl
inc
add
jle
imul
cltd
push
adcb
push
sub
imul
push
cmp
cmp
repz
mov
fnstenv
jae
mov
cmp
mov
inc
lds
aad
outsb
and
imul
fcomps
cmp
lea
mov
in
das
or
push
mov
push
ret
cltd
data16
and
bnd
loope
mov
jge
enter
int3
js
out
mov
inc
add
sbb
xchg
lock
fildl
mov
xor
test
push
mov
lahf
mov
lods
dec
addb
jge
cld
xor
xchg
pop
dec
pmulhw
in
xlat
xchg
lods
std
std
movl
mov
jl
and
out
and
inc
lock
pop
pop
mov
push
out
inc
push
mov
sbb
fidivrl
loopne
lret
inc
insb
mov
xchg
add
sbb
aad
pop
fldcw
xchg
or
xorb
cmp
fidivl
mov
outsb
das
jne
loopne
shr
out
or
rol
scas
movsl
fists
mov
xor
and
sub
xchg
xlat
adc
push
xchg
shrl
rorl
imul
pop
push
mov
xlat
inc
mov
pop
fisubrs
and
lret
xor
ret
and
loopne
shlb
mov
and
pop
mov
cli
scas
cli
clc
pop
adc
and
inc
repz
jmp
mov
addl
and
adc
dec
mov
lahf
mov
jns
test
lahf
movsb
repnz
mov
jg
jmp
test
addr16
mov
mov
push
aam
push
int3
stos
and
int3
cmp
fmulp
cmp
iret
iret
out
and
sti
push
jns
xor
add
cltd
enter
inc
xchg
lret
repz
shrl
sar
lahf
jmp
enter
sub
ficoms
fimuls
fsubl
ja
loop
or
jg
jbe
add
das
mov
xchg
xlat
adc
test
sub
fstpt
and
aaa
and
loope
jo
rorb
mov
jns
push
lea
push
in
mov
mov
jnp
lahf
sbb
xchg
test
addb
in
cmpsb
sar
dec
pop
push
adc
dec
lcall
xchg
rcll
mov
test
outsb
adc
test
mov
mov
and
aas
mov
stc
and
mov
push
cmp
sbb
jb
ret
or
aad
cwtl
mov
mov
ret
int
jb
cmp
cmpsb
jbe
fdivr
jp
or
mov
inc
xchg
nop
test
push
sbb
in
cli
loopne
movsl
cli
repz
scas
notb
aad
xchg
mov
call
int
adc
xchg
js
nop
cmpl
xor
mov
or
lcall
unpckhps
and
movsb
jae
cmp
sub
mov
mov
enter
shl
std
or
cmp
xor
xchg
xchg
mov
dec
lods
and
jo
adc
data16
dec
and
dec
cmpxchg
push
sbb
call
lahf
lea
add
push
in
sbb
mov
push
cwtl
sbb
hlt
push
lcall
in
adc
jb
cld
sti
mov
or
test
xor
adc
lods
pop
test
push
xchg
fadds
aad
sbb
jbe
and
scas
sahf
pop
popa
and
adc
mov
cld
inc
ret
mov
add
aas
xchg
sarb
sbb
js
xchg
popf
cmp
popf
xchg
push
lret
inc
and
jl
inc
push
pop
adc
cwtl
xchg
shll
adc
or
xchg
sbb
outsl
lea
jo
jmp
jecxz
and
in
icebp
gs
out
cmp
clc
cmc
es
xchg
repz
and
sbb
movsl
push
loop
inc
shlb
je
fs
leave
sub
adc
lret
push
inc
js
les
cmp
mov
outsb
or
insb
cli
stos
or
imul
imul
pop
pop
dec
and
iret
out
rcrb
sub
outsb
addr16
enter
ret
xchg
adc
push
jnp
test
iret
lds
aas
add
lcall
adc
xchg
jne
sub
shlb
cmpsl
gs
xor
stc
loop
xchg
adc
scas
js
add
jnp
sbb
pusha
ds
inc
jg
hlt
push
mov
testb
fdivr
jnp
and
and
sub
jg
xor
lcall
into
mov
nop
push
movsb
sbb
or
pop
in
lahf
out
mov
and
sbb
cmpsl
loope
xchg
pop
jns
xchg
xchg
pushf
pop
xchg
mov
xchg
lock
nop
or
out
pop
inc
xchg
sub
jb
xchg
jns
push
mov
xchg
out
xchg
pop
xchg
les
loope
inc
scas
pop
jbe
push
daa
cmpb
cmp
push
test
push
mov
ja
jnp
mov
jno
js
sahf
inc
scas
jnp
loope
xchg
cmp
test
mov
push
lret
xor
xchg
sbb
fwait
mov
lods
inc
rorb
xchg
je
jo
dec
mov
xchg
in
out
loop
scas
mov
mov
xchg
xchg
daa
inc
pop
lahf
dec
xchg
jno
fimuls
movsb
xchg
in
xchg
andb
and
mov
sbb
lods
or
loopne
cmp
xor
cli
scas
add
xchg
in
lahf
mov
pop
lahf
out
lock
mov
pop
cmpsb
mov
rcrb
mov
lret
push
inc
xchg
ss
xchg
and
jecxz
popw
lret
movl
jnp
xor
fsubrs
ret
mov
xor
jbe
mov
mov
nop
ret
xchg
jmp
jp
sub
sahf
andb
loope
aaa
xchg
mov
cmp
xor
dec
push
xchg
mov
sbb
js
jg
pop
sub
push
pop
out
xchg
and
mov
outsb
iret
xor
test
fimuls
lock
inc
sahf
cmp
pop
mov
insb
or
mov
pop
fdivs
xor
out
mov
push
sub
dec
enter
dec
dec
daa
notl
jbe
subb
mov
mov
arpl
mov
mov
repz
test
outsl
aad
jmp
sbb
mov
js
and
mov
xchg
xlat
enter
push
popa
and
and
call
out
xchg
cwtl
pop
and
ds
jnp
mov
cmpb
fimuls
std
push
jecxz
xchg
sub
cmp
xchg
ret
xor
bound
cmpsl
and
repnz
addr16
cld
cmpsb
lds
mov
xchg
sahf
cmp
inc
loop
mov
test
cmpsb
hlt
cmp
lods
or
xchg
xchg
xlat
fs
imull
xor
fildll
push
fsubl
push
or
pop
and
sbb
push
in
mov
push
inc
clc
jge
data16
mov
mov
lahf
fisubs
mov
shrl
data16
mov
lahf
sub
push
fiadds
xchg
sub
xchg
jns
mov
sbb
iret
mov
push
adc
mov
adc
mov
cwtd
sbb
push
xor
lock
fsubrp
jno
adc
dec
hlt
ss
scas
aas
adc
fstl
jne
pushf
loope
jp
mov
mov
sbb
subb
test
lcall
fcmovnu
cmpsl
and
mov
ja
shlb
lahf
cmp
repnz
mov
addb
or
ret
xchg
loop
repnz
popa
enter
in
cld
aas
xchg
lret
jne
xchg
xchg
pop
cmpsl
aam
popa
xchg
pop
cs
inc
xchg
adc
dec
push
xlat
sahf
dec
xabort
inc
mov
add
sahf
or
scas
data16
jo
cmc
fwait
orb
xor
pop
out
xchg
mov
xchg
fisttpl
cmpsb
adc
lret
xchg
push
test
mov
imul
insl
xor
leave
aaa
fisttpll
add
and
loopne
inc
lods
cmp
mov
cs
fistps
cli
pop
out
adc
data16
fdivrs
fstpt
rol
in
inc
push
mov
out
pusha
cmp
test
mov
or
js
xor
cmp
pop
lock
lcall
stos
or
repz
xor
test
push
nop
adc
cmp
popa
mov
cmpsb
fidivrl
push
mov
cmp
ret
push
mov
xchg
rorl
mov
push
dec
test
push
inc
data16
xchg
imul
mov
mov
lret
lds
pop
push
fnsave
mov
cmc
nop
or
push
or
imul
int3
inc
lret
cmc
adc
sbb
fxch
aad
mov
mov
xlat
cwtl
push
add
addr16
andl
test
jmp
mov
jl
or
jle
xchg
jmp
psllq
mov
aam
cmovb
xchg
adc
inc
ljmp
cmp
orl
push
call
add
repnz
inc
sbb
in
roll
sarl
jo
push
push
xchg
jb
loopne
test
mov
adc
loopne
push
sub
adc
and
dec
and
js
sub
outsb
xor
cmc
jl
divb
dec
pop
sbb
pop
fsubs
xor
sub
dec
dec
cmp
repz
repz
bound
jb
cli
repnz
out
out
test
das
and
adc
cmp
insb
lock
shrb
mov
gs
dec
cwtl
aad
inc
call
mov
pop
cwtl
insw
popa
lock
add
repz
scas
aad
xor
xlat
jb
cmpsl
cmc
adc
mov
jp
loopne
mov
jp
adc
sarl
sbb
jnp
aas
shll
mov
leave
pop
jp
and
test
mov
data16
pop
mov
xchg
xchg
adc
and
push
adc
xorb
ja
addl
lea
leave
push
cmp
xor
cmp
lret
push
or
test
add
call
dec
imul
lret
xor
mov
pop
xor
sbb
fnstenv
xchg
mov
je
leave
ja
mov
inc
pop
push
in
clc
lret
and
cltd
inc
xor
cld
xor
jbe
xchg
repz
adc
cmp
and
shrb
push
dec
mov
push
fwait
xchg
mov
pushf
andb
loop
sub
ret
push
adc
mov
mov
loopne
data16
lret
bnd
mov
call
xlat
mov
pop
cwtl
adc
dec
add
sbb
mov
add
pop
or
push
cld
fcoml
fcompl
rcll
call
nop
int3
push
sub
ficomps
int3
clc
in
gs
add
out
push
push
cmp
mov
lahf
inc
pusha
mov
jnp
xchg
xchg
ja
lods
movsb
insl
lcall
fsts
test
cmp
imul
insb
mov
in
ljmp
fistpl
and
mov
jg
call
sti
push
leave
xlat
xor
jne
outsl
pop
or
cmp
repz
std
test
ss
adc
fptan
pusha
sub
arpl
sub
mov
sahf
in
push
mov
xchg
cmp
xchg
mov
lock
aad
push
fwait
jl
jle
sbb
sbb
lret
inc
nop
and
pop
mov
scas
sub
xchg
adc
pop
xchg
mov
into
jb
inc
arpl
mov
xchg
fmul
insb
pushf
cmc
icebp
stos
xorb
daa
js
pop
into
push
lahf
leave
push
xchg
or
fidivs
cmc
lods
pop
mov
aam
add
data16
mov
movsb
daa
xor
mov
inc
leave
xor
pop
or
jmpw
out
repz
leave
push
xor
xor
or
mov
in
xchg
stos
push
movsb
aad
out
pusha
rcrl
loop
or
dec
lahf
int
ja
loop
mov
hlt
popf
in
inc
outsb
outsb
pop
cmp
ret
cmp
ljmp
and
push
lahf
inc
jl
and
push
jp
cmpsl
imul
outsl
imul
out
out
pop
mov
pop
hlt
in
adc
pop
cmpsl
rolb
pop
push
pop
xchg
push
sbb
nop
rcll
pop
push
les
add
clc
dec
fsubs
jbe
inc
shlb
inc
loop,pn
daa
les
shrl
mov
iret
pop
idivl
imul
mov
or
cmp
inc
repnz
push
xor
insl
mov
mov
jne
lret
adc
add
repnz
adc
jbe
fdiv
fsubrl
mov
mov
mov
fmull
or
es
push
cli
out
arpl
sbb
pop
insb
out
loopne
ficoml
cmc
leave
mov
repz
sub
or
jg
mov
inc
mov
mov
xlat
jne
into
adc
mov
jmp
aam
pop
lds
cmp
test
mov
scas
jge
mov
mov
inc
sbbb
aad
ja
xchg
xchg
push
inc
mov
imul
shl
xchg
push
addr16
dec
call
and
ret
jp,pn
sub
xchg
les
fisubl
mov
lods
jne
sbbb
orb
lcall
mov
add
mov
xor
shl
inc
dec
cmc
cmpsl
fildl
sti
data16
jns
int3
sub
adc
dec
jns
hlt
outsb
mov
pop
pop
call
ljmp
movsl
arpl
dec
adc
dec
repnz
je
rcr
push
pop
or
fwait
sti
hlt
lods
fistps
fiadds
repnz
sbbb
or
jge
iret
push
daa
rcl
mov
in
jne
leave
jl
push
xor
add
dec
push
repnz
sub
xchg
int3
ljmp
cmpsl
orb
std
and
mov
js
cmp
mov
lea
fistl
cwtl
add
cltd
insb
sbb
stos
insl
dec
popf
and
dec
xchg
or
ss
int3
xchg
setge
lret
out
adc
xchg
or
out
roll
mov
jns
iret
mov
test
mov
aad
std
adc
adc
int
or
mov
mov
lea
test
jecxz
inc
nop
mov
sahf
repnz
adc
sbb
push
cmp
mov
jge
sbb
sbb
mov
lcall
jb
dec
and
inc
jp
pop
pop
inc
call
pop
leave
jbe
fcoml
inc
ret
mov
and
sti
mov
mov
and
mov
xchg
mov
std
cli
pop
shlb
sub
or
fidivrs
call
adc
add
sub
sbb
pop
xor
loopne
inc
cmp
sbb
jbe
jp
scas
clc
pushf
into
loop
xor
jno
cmp
xchg
and
in
jle
fcmovbe
out
mov
lahf
test
ja
aas
leave
jne
incl
ljmp
inc
mov
dec
in
aad
push
lock
fwait
scas
data16
adc
jecxz
xlat
and
lds
jns
mov
xor
scas
test
repz
pusha
push
sahf
movsl
mov
loope
xchg
cmpsb
call
stos
adc
xchg
mov
mov
pushf
vmovaps
out
lret
or
xor
stc
ljmp
push
loopne
cmp
or
push
loope
addr16
mov
ja
aam
sti
push
ja
loopne
mov
dec
jg
add
inc
jge
icebp
sbb
mov
mov
adc
push
daa
dec
or
mov
jbe
or
fwait
rcrl
and
cmpsb
stos
dec
mov
dec
enter
fisubs
inc
leave
cmp
out
jmp
ret
cs
faddl
js
js
push
cmc
jb
stos
xchg
dec
mov
mov
lock
jp
out
adcl
push
cltd
stc
incl
insl
add
stos
out
int
shr
push
mov
cwtl
xchg
cmpb
lcall
bound
push
rcll
les
inc
dec
in
hlt
push
mov
inc
push
sub
decb
mov
out
cmp
pop
mov
data16
add
mov
or
push
push
ret
xchg
cmp
movsb
cld
mov
xlat
into
rol
nop
outsb
jno
ss
cmp
sahf
mov
push
cltd
aad
mov
push
fildl
xchg
dec
loopne
ret
enter
ja
aad
repnz
mov
jp
inc
pop
jnp
loopne
inc
push
push
sub
or
cmp
dec
loopne
add
fisubs
or
jb
mov
cmp
out
gs
jge
ljmp
jl
dec
inc
push
push
orl
js
out
push
jecxz
dec
add
mov
mov
mov
jns
mov
ljmp
pop
cld
repnz
orl
ret
push
lods
push
jns
movsl
sbb
jb
fnstcw
cltd
push
xchg
xchg
fwait
movsl
or
sbb
out
mov
mov
cwtl
push
mov
mov
and
mov
sbb
lahf
push
jae
push
xchg
lds
mov
adc
jbe
push
mov
pushf
mov
ljmp
sahf
sub
push
in
andb
and
outsl
call
aam
mov
outsb
repnz
cwtl
bound
aam
dec
jo
ret
fistpl
imul
push
loopne
or
inc
cli
mov
cmp
pop
ret
xchg
sub
cmp
pop
sbb
pushf
push
into
mov
or
loope
fadd
scas
lahf
movl
pop
dec
adc
jno
inc
and
movsb
push
jg
ds
add
ret
jecxz
mov
fucom
jo
jl
notb
cld
data16
cmp
xor
cmpsb
aaa
inc
xchg
cmp
sbb
push
push
insl
cltd
adc
cwtl
out
push
dec
js
int
test
movsb
and
mov
and
pop
stos
xchg
je
sub
sahf
in
fs
das
test
and
jmp
loop
mov
mov
adc
add
out
fstpt
sarl
fs
mov
into
es
arpl
xor
cmp
xor
xchg
add
ds
xchg
ss
and
cmp
mov
in
push
and
jg
fcomps
stos
cmp
jge
mov
mov
test
aam
inc
adc
dec
mov
push
pop
mov
test
cwtl
arpl
jae
cli
or
dec
cmp
nop
cmp
pop
fs
and
adcl
sub
jle
loop
mov
mov
call
mov
ret
movb
jp
decb
out
push
xor
inc
sbb
pop
adc
push
data16
or
mov
sub
xchg
adc
loopne
stos
xchg
push
push
iret
out
pop
jg
sbb
mov
mov
ret
inc
inc
inc
leave
lea
mov
scas
inc
sar
fsub
les
out
dec
orb
xchg
pusha
xchg
roll
mov
sub
shlb
daa
inc
ret
mov
xchg
cmp
jl
les
adc
out
popl
sub
test
mov
xchg
lods
xchg
sbb
adc
cmp
xor
ljmp
inc
sahf
pushf
test
inc
pop
data16
enter
rclb
cmp
jae
xor
mov
repnz
sbb
mov
ret
into
jle
cli
push
jb
js
in
and
aam
adc
repz
std
ret
mov
pop
mov
or
jb
add
jecxz
add
in
inc
mov
ljmp
dec
sub
inc
insb
ret
int3
pop
mov
sub
mov
call
cmp
adc
bound
fiaddl
and
xchg
js
scas
sub
xchg
fwait
cmp
das
mov
adc
add
cmc
pushf
aam
dec
filds
lods
rcll
cwtl
mov
push
inc
lds
jg
push
adc
psubb
mov
popf
clc
mov
adc
jl
cmp
sarb
mov
mov
pusha
push
ret
xchg
and
mov
divb
lods
xor
lds
jg
outsl
pop
out
xchg
bound
inc
jge
cmp
dec
repz
sub
sub
lods
pop
ret
mov
dec
addb
xchg
or
test
or
or
mov
pop
mov
cltd
lods
pop
stos
outsl
push
imul
dec
cmp
or
and
repnz
or
cmp
lods
fstps
cmp
test
repz
call
movsl
mov
loopne
scas
mov
xchg
insb
add
imul
fldcw
imul
adc
sbb
mov
iret
lret
xchg
dec
ret
sbb
stos
loop
rorb
mov
jecxz
out
adc
ds
aad
rclb
jae
jbe
aas
dec
cmc
shl
outsb
js
movups
icebp
outsb
pop
in
int
xchg
stos
imul
shl
gs
push
loopne
lcall
cmc
imul
andps
outsb
inc
ss
jg
fisttps
inc
stos
lods
jno
mov
cltd
push
push
rcr
test
jp
add
addr16
nop
imul
clc
xor
push
lret
icebp
aaa
lret
jne
sbb
pop
dec
andb
mov
push
jns
pushf
fsubl
inc
mov
cmp
xchg
int
push
xchg
pop
xlat
push
std
jns
loop
mov
adc
adc
adcl
add
fsts
call
enter
test
sub
xchg
jle
jne
stc
cltd
adc
cmp
and
push
push
cmp
xchg
xor
lahf
xchg
and
dec
cmc
push
inc
je
adc
lock
push
sar
mov
add
mov
cmp
movsl
fidivrs
out
aas
mov
lret
and
popa
mov
mov
into
xchg
mov
sar
gs
add
xchg
sub
in
in
adc
jp
sahf
xchg
add
mov
mov
cli
pop
cltd
xchg
push
ds
jg
pop
push
imul
dec
and
iret
cmp
pushf
data16
shll
fldenv
xchg
and
inc
and
jp
inc
or
mov
xor
xchg
fstps
test
mov
nop
inc
mov
mov
mov
add
cmp
rclb
add
sbb
in
nop
jbe
scas
xchg
cltd
cmp
push
cmp
lds
insl
mov
out
mov
data16
gs
scas
push
sub
and
pop
adc
mov
mov
mov
inc
jp
test
aad
push
adcb
and
push
jns
clc
int3
push
mov
xor
push
cmpsb
rcl
sub
inc
hlt
adc
inc
cmpsl
std
bound
and
iret
or
dec
push
lret
leave
mov
push
jl
js
add
fwait
in
jg
cmpsl
sti
stos
popl
and
jp
loop
lahf
add
int3
sti
mov
data16
dec
imul
cmp
shrl
std
negb
cmpsl
call
shrb
aad
xor
mov
inc
push
mov
xchg
push
ds
movhps
xchg
pop
repnz
repz
xlat
ds
mov
mov
ret
jbe
inc
push
or
shlb
out
adc
pusha
imul
loop
pop
test
xlat
fstps
rorb
or
pop
cmp
lea
inc
inc
sub
or
push
movsw
mov
pusha
sar
sarb
add
and
cmp
inc
test
movsl
test
ret
stos
stos
jmp
lock
xor
insb
rcrb
stos
mov
lcall
das
test
data16
data16
xchg
clc
dec
lds
mov
ja
loopne
sbb
xor
movsl
loopne
ja
test
or
js
push
mov
xchg
lds
push
sahf
ss
mov
int
daa
test
int
jge
pop
sub
negl
push
test
push
pop
cmp
jns
inc
mov
cmp
enter
jecxz
cmp
push
cli
enter
int
jge
popf
std
sarl
inc
into
mov
hlt
divl
jo
nop
addl
adc
ds
or
xor
mov
cmp
int3
fimull
sbb
std
and
imul
inc
enter
ret
and
push
movsl
loopne
scas
and
mov
sub
sbb
mov
cmp
int3
mov
push
jns
rcrb
les
rolb
mov
inc
addb
mov
ljmp
testb
add
jl
mov
xor
orb
out
cmpsb
mov
sahf
ficoml
sbb
into
leave
popa
pop
ds
jp
push
lret
xor
mov
fs
sbb
test
out
loop
into
mov
pushf
or
push
ret
sub
sbb
jl
sub
jae
pop
push
insb
mov
cmpsl
mov
inc
pavgb
or
jb
xchg
adc
mov
loop
mov
repz
clc
mov
test
jp
or
jp
neg
mov
push
jecxz
mov
xor
lret
or
mov
fisubrl
gs
ljmp
ja
loopne
lcall
les
mov
inc
int3
xchg
mov
mov
movb
sti
movsb
push
jb
je
rorl
and
cwtl
js
nop
insl
aaa
and
mov
scas
pop
imul
push
fisubl
je
mov
montmul
cmpsb
sbbl
lret
stc
inc
add
stos
push
jnp
pop
mov
mov
push
jecxz
ror
mov
push
test
mov
jb
in
mov
out
xor
cltd
aam
cvtpi2ps
jno
xchg
xorl
movsl
pop
push
or
mov
notb
mov
jge
cmpsb
cli
adc
pop
fdivl
in
mov
test
pop
sti
rorb
mov
loop
xchg
adc
sarb
fcoms
rol
lcall
pop
fisttpll
and
jnp
xchg
inc
jp
fs
insb
dec
and
jo
cli
aad
in
test
push
pushf
mov
dec
int3
adc
test
sbb
or
mulb
mov
aas
mov
popa
call
addr16
lea
dec
mov
lret
loopne
mov
insb
adc
fs
jmp
sbb
adc
shll
mov
jp
dec
ffree
clc
jbe
mov
xchg
loop
mov
or
add
dec
dec
pop
dec
xlat
dec
jo
imul
cmp
addr16
sbb
push
push
lock
or
mov
mov
sbb
push
lahf
jmp
addb
enter
stos
icebp
push
pop
push
mov
mov
inc
xchg
jne
clc
test
xor
jl
jp
fcmove
mulb
mov
lahf
xor
and
adc
loopne
or
pop
fadd
into
xchg
imul
andb
repnz
jl
cmpsl
sahf
movl
jns
pop
mov
mov
movsl
sub
mov
int
add
cli
push
jl
fnstsw
mov
xchg
or
dec
nop
push
and
add
inc
sti
out
rorb
out
xchg
clc
daa
in
popf
lock
pop
aaa
push
mov
out
mov
xchg
data16
push
daa
sbb
lock
mov
pusha
xchg
cmp
xchg
or
sahf
mov
jb
or
xorb
pop
fdivl
cmp
movsb
inc
sbb
testl
mov
imul
adc
sti
sbbb
mov
push
add
push
cmpsl
idivb
xor
push
mov
add
mov
pop
mov
lods
cld
nop
or
xor
sahf
jnp
add
xchg
mov
or
cmpb
push
push
jp
mov
cld
call
out
add
jns
xor
out
rorl
out
orb
pop
bound
lcall
push
mov
jnp
jbe
add
shrb
dec
fiaddl
dec
adc
sub
add
out
jg
hlt
fcomi
int
add
mov
ret
les
out
jno
loope
roll
add
ja
jle
mov
idiv
xorl
xchg
and
push
mov
dec
ror
outsl
std
jno
xchg
cltd
mov
sub
and
lcall
mov
subl
leave
daa
inc
adc
add
adc
sahf
je
lods
push
cmpsl
add
mov
loopne
dec
mov
and
jmp
sub
loope
test
jge
mov
aas
xlat
bound
mov
pop
lock
xchg
push
dec
push
test
xchg
roll
push
mov
mov
pop
jbe
sub
mov
lret
or
xchg
xchg
pushw
dec
fstpl
push
fbld
pop
sbb
les
outsb
xchg
fisttpl
mov
arpl
xchg
lret
or
adc
movsl
mov
mov
push
shlb
fsts
jb
add
shl
add
inc
lds
cmp
sahf
hlt
mov
test
xchg
mov
fldt
dec
mov
inc
push
fimull
shll
cld
lds
mov
or
pusha
mov
repnz
out
pop
pop
adc
jl
jbe
mov
adc
fcomps
pushf
fnstenv
xchg
fidivrs
loop
sub
sub
xchg
dec
mov
pop
sub
movsb
or
insb
or
adc
cmpl
mov
mov
push
mov
in
lods
mov
int3
sub
std
subb
xor
mov
cmp
mov
jg
in
subl
cli
xchg
mov
fcmovbe
and
bnd
shll
sar
inc
aas
or
xchg
lods
sub
repnz
add
adc
inc
inc
pop
decl
jb
mov
and
jg
xor
mov
add
cmc
sar
mov
divb
cmp
lahf
xchg
and
imul
cld
and
ret
fldcw
out
and
daa
not
mov
test
cmp
decb
and
test
mov
sbb
mov
mov
jnp
jo
in
inc
dec
sub
pop
or
adc
cmpb
adc
pop
addr16
dec
push
fucomp
dec
pusha
into
cld
test
out
outsb
shll
or
movsb
lock
hlt
push
add
cmpl
jl
fwait
ret
mov
inc
andb
popa
sbb
or
test
mov
jp
push
cmp
sbb
cli
push
sbb
mov
into
xor
xchg
mov
adc
pop
mov
and
into
imul
mov
or
leave
mov
int3
ss
and
mov
cs
mov
adc
xchg
addr16
mov
test
outsb
pusha
xchg
in
xchg
or
push
dec
mov
in
shlb
ret
je
mov
jb
xlat
push
test
sbb
cmpsb
icebp
movsl
inc
out
jg,pt
jp
test
ret
lahf
ss
mov
mov
xor
bound
sub
rcll
out
adc
jae
test
and
bound
mov
add
bound
cmpsb
imul
mov
inc
jbe
mov
loope
push
pop
xchg
mov
jge
or
mov
test
xchg
rcr
outsl
jecxz
out
or
push
cmp
repnz
mov
mov
shrb
sahf
dec
jg
add
stos
mov
cwtl
mov
nop
xchg
add
std
or
push
cmp
rcll
ret
jbe
xorl
mov
or
mov
into
aas
mov
and
outsb
sbb
mov
adcb
andb
mov
xchg
jb
sahf
xchg
mov
sbb
adcl
xchg
leave
pushf
jne
std
lret
lock
or
lea
ds
repz
push
push
enter
xchg
aad
inc
push
call
push
xchg
loop
jge,pt
cmpsb
jo
imul
mov
mov
mov
mov
pusha
sub
ds
aad
lahf
andb
je
lods
rcrl
ret
sahf
jmp
jae
push
popf
bound
data16
cmp
nop
adc
fcmove
push
sbb
push
insb
aam
popf
cltd
dec
or
fwait
loop
jnp
add
xor
mov
btl
push
int3
mov
add
and
cld
mov
mov
out
stos
mov
sub
jmp
aam
cmpsb
mov
mov
xor
mov
cltd
mov
ret
adc
dec
push
push
inc
dec
iretw
mov
jp
roll
xchg
xor
incb
fcom
pop
aas
push
cltd
loop
ret
aad
jle
pop
xchg
pop
scas
cld
mov
add
cmpb
sahf
cli
xchg
sbb
fisubrs
inc
mov
xor
outsb
rolb
arpl
push
aad
cmp
cmpsb
sub
bound
sbbb
or
out
movsl
push
sub
cli
mov
add
jmp
push
aad
js
inc
push
stc
das
sarb
sbb
pop
sahf
pcmpgtb
push
sub
lock
xchg
stos
mov
popl
jbe
push
add
add
addb
shl
push
ret
addl
push
hlt
test
cmp
rcll
mov
mov
push
adc
dec
dec
iret
and
mov
bound
test
leave
loop
xchg
imul
es
icebp
pop
stos
or
out
in
lods
and
mov
xchg
xchg
dec
stos
ret
fsubrl
lds
test
xlat
fdivrs
decw
andl
inc
push
push
lret
add
sbbb
or
lea
xchg
mov
inc
mov
nop
nop
pop
dec
push
aas
add
jle
mov
xchg
data16
jp
aaa
sub
xchg
push
pushf
inc
adc
lsl
nop
faddl
stos
aaa
pop
fstps
sub
outsb
out
pop
pop
xchg
andl
fisubrl
ss
popf
sub
dec
jl
push
pop
or
clc
add
mov
adc
add
les
mov
aam
clc
mov
les
loope
les
add
mov
push
mov
loop
int
adc
ret
lea
and
adc
cmp
inc
xchg
jae
xchg
popf
mov
jnp
fs
popl
in
lahf
xchg
mov
xchg
mov
fidivs
andl
into
jp
out
lea
movsl
imul
inc
or
xor
lcall
mov
xchg
aad
sub
cli
rcll
push
nop
xchg
dec
push
rorb
add
or
xchg
mov
mov
jg
in
test
adcl
sahf
lock
imul
pop
test
cmp
mov
fcmovbe
sub
cmpl
lcall
mov
sbb
movsb
lahf
and
aad
cld
lcall
cmp
xor
mov
inc
sahf
push
mov
lret
fstl
xchg
or
fisubl
mov
mov
xchg
pushf
movsb
cld
mov
repz
jp
fstpl
mov
adc
mov
mov
orb
outsl
pop
sbb
or
lahf
jge
ret
inc
jg
sbb
movsl
sub
dec
ljmp
and
ret
push
sti
repz
mov
cltd
inc
mov
fsubrs
inc
dec
push
clc
mov
cmpl
addl
push
in
add
xchg
xor
mov
lcall
mov
in
jnp
imul
cs
bnd
sahf
pause
add
dec
aad
push
adc
test
movsl
push
aas
lret
ljmp
dec
loopne
pop
mov
nop
test
push
cmp
mov
sti
mov
aaa
add
xchg
cmc
dec
pop
ret
sbb
popa
stos
mov
mov
leave
mov
fwait
push
dec
inc
mov
repnz
jp
xchg
nop
mov
push
mov
fidivrl
shl
shlb
xchg
aam
lret
mov
mov
lods
xchg
cli
test
fwait
and
xchg
pop
and
mov
xchg
popf
cld
lahf
in
mov
or
rcll
lret
inc
push
add
repnz
aam
aad
shll
insb
xchg
jne
dec
in
int
outsw
xor
je
ljmp
in
pop
stos
xchg
xor
add
mov
in
pop
pop
xchg
ret
pusha
sbb
les
pop
out
xor
inc
or
in
mov
cmpb
popa
mov
subb
int3
dec
cmp
aad
lea
add
sahf
jmp
push
jmp
test
mov
test
xchg
mov
mov
jno
mov
cltd
imul
sub
or
nop
cmpsb
jns
pop
popa
adc
nop
pushf
add
mov
xor
lahf
cmp
xchg
adc
icebp
mov
add
data16
imul
rcrl
sbb
push
push
mov
push
and
sbb
cmp
or
loop
inc
or
xchg
in
bound
sbb
nop
push
fs
iret
xchg
mov
stos
pusha
adc
pop
movsl
lcall
scas
loope
outsb
pop
jb
hlt
xchg
xlat
inc
flds
jecxz
mov
cmp
test
fwait
das
lods
sbb
lods
sbb
stc
stos
or
xchg
mov
imulb
or
sahf
or
std
inc
cmp
enter
xlat
cld
xchg
mov
mov
sahf
nop
test
xchg
xchg
xchg
sbb
pop
shlb
or
or
fcompl
rolb
movsb
notb
xchg
cmp
push
das
scas
imul
inc
aad
sub
jg
int3
dec
pop
incb
notb
inc
scas
retw
jo
test
and
mov
clc
scas
repnz
fidivrs
dec
addl
inc
pop
roll
ds
sub
inc
insl
push
shll
pop
inc
sti
arpl
cmp
inc
lret
bnd
pop
out
or
xchg
in
inc
andb
push
repnz
orl
jp
adc
or
jp
mov
pop
test
sbb
mov
cmpsl
add
sahf
xor
and
cmpsb
xchg
lret
adc
subb
imul
sbb
inc
movsl
ret
leave
pop
sub
lret
add
push
stos
mov
xchg
ja
xchg
xchg
jp
repz
jl
xchg
and
rolb
sbb
mov
lds
dec
and
cli
enter
push
aas
arpl
jl
sbb
incb
mov
test
cs
into
add
outsb
push
jbe
outsb
add
leave
mov
adc
iret
fistpl
lds
xchg
andb
pusha
mov
jle
ds
sub
loop
mov
pop
push
cmp
frstor
movb
push
adc
ret
ret
incl
mov
mov
jp
in
test
xchg
xchg
push
inc
push
xchg
cmpsl
jmp
jecxz
mov
mov
xlat
inc
lcall
jns
pushf
sti
push
sub
cmp
push
in
jge
mov
call
js
cmp
ds
push
repz
jge
sarb
inc
inc
loope
push
outsl
jae
push
jbe
mov
aam
lds
push
jae
in
mov
loope
mov
inc
pop
adcl
movsl
cli
mov
or
mov
adc
dec
and
adc
sbb
mov
ss
nop
icebp
gs
call
pushl
mov
lds
push
sahf
pop
mov
push
xor
daa
mov
nop
push
xchg
bound
mov
in
mov
mov
add
mov
cmp
popf
or
xor
mov
inc
les
add
mov
mov
xchg
rcr
imul
xlat
jns
imul
push
cmp
fwait
movsl
xchg
adc
int
data16
dec
push
in
int3
xchg
imul
add
mov
sbb
sub
cmp
in
test
repnz
decb
sbb
shrl
mov
inc
and
outsb
pop
sbb
popl
mov
xchg
sub
pop
jb
lcall
jne
mov
jmp
push
mov
out
add
test
mov
andl
and
fwait
sbb
sub
push
inc
lock
xchg
jb
adc
int3
out
fsubl
push
popf
or
jnp
cmpsb
cmp
call
sbb
roll
pop
les
in
ss
out
cltd
into
mov
or
jb
mov
jecxz
or
mov
add
jb
pop
xor
daa
loop
fildll
ficoms
mov
push
hlt
icebp
stos
inc
mov
daa
out
or
cmp
inc
fistpl
cli
xor
sub
jns
xchg
inc
pushf
xchg
leave
mov
xor
out
add
xchg
insb
jl
mov
lret
mov
insl
cli
xchg
mov
xchg
add
addb
adc
push
xchg
pop
into
mov
roll
push
inc
or
inc
pop
xchg
pop
imul
shrl
loop
rolb
dec
test
inc
sub
iret
sarl
aas
insl
orb
dec
pushl
jns
into
jbe
popa
cmp
fmulp
pop
mov
push
push
sbb
cld
pop
adc
mov
cli
add
push
cmp
out
pop
dec
inc
cmpsl
inc
cwtl
add
xchg
popa
inc
and
jbe
lds
bound
push
sbb
pop
cmp
or
scas
adc
sti
subl
mov
push
sti
sarl
inc
mov
cli
mov
mov
test
popa
jl
mov
xlat
fwait
mov
aas
out
test
std
cmp
ja
out
xor
mov
pop
mov
out
mov
cs
push
push
std
sub
daa
imul
es
jge
inc
shrb
adc
scas
xchg
sti
mov
outsb
cmp
mov
mov
pop
movsb
xor
out
pop
imul
dec
mov
xchg
push
stos
push
test
wrmsr
or
mov
jae
or
iret
ds
scas
and
cwtl
lret
dec
jp
jp
and
popa
xor
mov
pop
sti
sar
inc
imul
cmpsl
iret
or
test
jns
pop
xlat
add
ja
dec
fsts
pop
jg
push
test
dec
lds
push
cli
mov
sub
adc
sub
adc
aad
mov
jmp
lds
sub
dec
pop
pop
mov
xor
pushf
add
clc
lcall
pop
xchg
pop
sahf
aad
imull
xchg
xchg
jmp
xchg
sub
nop
mov
in
sbb
pop
les
or
sbb
push
loop
in
xchg
shl
pusha
push
or
jp
xor
xor
loopne
lods
jge
scas
aam
les
add
jnp
dec
adc
jbe
adc
jnp
in
or
cmpsb
imul
adc
add
insb
andb
sarl
jecxz
and
push
cmp
inc
xor
enter
lret
mov
add
int
xchg
mov
jp
popa
and
cli
xchg
and
cmp
nop
cld
es
pop
push
mov
inc
adc
sub
lods
movsl
adc
or
push
stos
pop
fwait
xchg
mov
mov
adc
outsl
add
sahf
mov
in
xchg
dec
push
into
pop
pop
shll
es
call
clc
fwait
scas
lret
cltd
ret
int3
push
xor
mov
mov
int
cli
data16
cli
mov
pop
push
inc
mov
jbe
jge
cmp
shll
mov
jl
sbb
or
sar
adcl
xchg
push
into
xchg
pop
jp
int3
and
sbb
add
cltd
les
or
inc
adc
mov
sarl
into
int
jmp
lods
cmp
sti
aad
inc
push
jl
or
sub
not
and
adc
int
cmp
addb
ret
in
incl
pushf
xlat
outsb
nop
inc
mov
inc
roll
je
enter
lcall
fnstsw
movsl
rcll
jge
push
mov
push
sub
stos
jb
inc
ljmp
dec
movsl
shll
jmp
push
scas
adc
fwait
leave
xchg
shrb
out
lahf
adc
lahf
ret
pop
add
jbe
pop
cs
lods
imul
sti
jbe
pop
jg
nop
repz
push
jb
fwait
push
into
xchg
push
pop
imull
andb
cmc
ficomps
pop
std
jbe
adc
mov
sub
ret
jmp
out
rcll
test
cld
iret
in
stc
cmp
int
cmp
adc
into
and
mov
lret
jle
push
pop
jp
mov
dec
inc
test
lea
mov
and
mov
repz
cwtl
mov
mov
cmp
outsb
inc
jg
arpl
aas
sahf
outsb
and
push
nop
sub
fbld
sub
sbb
and
sbb
outsl
mov
mov
repz
lds
sbb
pop
add
outsb
mov
icebp
adc
push
cli
lahf
adc
aam
lret
shlb
pusha
pop
icebp
jb
adc
cld
mov
jns
sahf
mov
and
int3
aam
andb
mov
int
cmp
xor
call
sarb
ffree
xor
add
xor
repz
stc
adc
or
sbb
cmp
push
lcall
rolb
dec
jg
jg
xchg
les
inc
jge
lds
jne
daa
outsb
out
negb
push
lahf
jp
testl
in
dec
pop
enter
notb
test
xchg
testb
aas
jmp
sahf
data16
pop
aad
scas
mov
je
jmp
or
gs
test
xchg
fs
push
jno
push
sahf
das
fadds
movsl
je
scas
xorb
adcl
pop
lods
and
test
rolb
sub
xchg
or
adc
pop
mov
push
into
cmp
popf
mov
mov
add
xor
jno
daa
jg
fsubs
xchg
popa
test
imul
adc
les
or
shll
imul
sbb
cmpsl
xchg
repz
cmp
in
cmpsb
ljmp
out
mov
xchg
sbb
pusha
sbb
dec
je
pop
imul
xchg
xchg
sub
outsl
pop
mov
sbbl
ret
mov
xchg
scas
sub
int
cmp
lods
cli
into
pushf
jne
sbb
fdivrl
xchg
ja
mov
std
roll
jp
push
and
imul
jge
jae
mov
sbbb
gs
es
int3
sub
add
and
add
dec
repnz
sub
xchg
sarl
fxch
push
xor
mov
out
mov
std
data16
mov
movsl
cmc
fs
push
xor
std
add
je
mov
and
or
mov
sub
pop
stos
jb
fadds
leave
popl
cmpsl
push
fs
aad
outsl
push
sub
mov
sub
add
jp
pop
mov
mov
lret
push
mov
jnp
in
subl
jb
loopne
cltd
cmp
lret
fcomp
lds
jae
cmp
pop
pop
dec
lcall
xor
jecxz
sbb
fstl
cs
inc
lds
jmp
xorb
mov
mov
xor
cwtl
aam
loope
lods
xchg
and
popa
push
decb
xor
rcrb
repnz
clc
subb
mov
cld
push
das
add
jp
push
orb
mov
push
adc
or
mov
addr16
pop
and
xchg
int3
ss
jne
shll
scas
jno
xchg
jmp
scas
xchg
bound
scas
xchg
data16
add
mov
push
mov
mov
adc
mov
inc
fadd
mov
mov
and
xlat
push
out
dec
ds
loop
dec
scas
int3
xchg
dec
xorl
cwtl
xor
insl
int3
push
pop
orl
imul
mov
sub
dec
cmp
js
push
mulb
adc
stc
imul
mov
cmpsb
jg
xor
add
pusha
cmp
addr16
sahf
std
fnstcw
dec
push
mov
pop
fnstsw
adc
sbb
repnz
mov
adc
lcall
faddl
pop
cwtl
scas
out
fisubl
xchg
pop
pop
mov
aas
cltd
xchg
sbb
xchg
push
notl
dec
fstp
xchg
xchg
lcall
jns
repnz
xchg
xchg
xchg
mov
xchg
sbb
dec
xchg
mov
fwait
data16
nop
jg
rcrb
lock
pop
mov
add
add
sahf
mov
ds
nop
jg
rcrb
seto
mov
xor
mov
imul
add
imul
imul
movsl
outsb
clc
out
add
loop
icebp
lcall
add
xchg
jecxz
dec
lret
repnz
imul
shl
pop
add
roll
aas
sbb
cwtl
xor
mov
xchg
std
fidivrs
out
lea
dec
cltd
mov
mov
jbe
mov
clc
call
mov
jbe
push
add
cld
and
aad
add
and
add
sbb
bound
frstor
cli
in
dec
and
push
push
inc
roll
iret
jbe
addb
loope
or
lea
rclb
inc
js
fldenv
lds
xchg
push
pop
in
dec
inc
lret
fcmovne
aam
sbb
push
lods
ja
jns
mov
insb
monitorx
jg
xor
cli
adc
and
outsb
fsubrl
inc
xchg
andb
push
test
and
xchg
das
xchg
push
jb,pt
push
lahf
mov
xor
jnp
adc
xchg
xchg
nop
xchg
sar
mov
sub
movsl
outsb
dec
and
js
mov
sub
sub
mov
test
inc
pop
xchg
aad
push
sar
cmc
rcr
fisttpll
out
mov
nop
xor
cmpsl
fld
insb
mov
rcrb
insl
gs
jp
aas
imul
mov
aaa
stc
std
xchg
pop
cmc
push
jmp
add
and
sbb
xchg
ret
push
jo
fldl
or
xchg
ja
xchg
cld
jge
in
je
andl
jp
xchg
sti
sahf
test
lea
lods
es
mov
add
popa
cmpsl
iret
out
mov
mov
cmp
add
stos
sub
mov
and
mov
loop
and
lahf
push
dec
subb
stos
pop
fstps
mov
hlt
bound
icebp
testl
cmp
add
gs
je
arpl
cmp
cmp
lcall
fsts
adcl
sub
ss
and
sbb
mov
arpl
scas
xchg
add
sbb
movsl
adc
fwait
adcl
fisubl
xlat
inc
xchg
sahf
in
jne
jl
sub
xchg
ja
cmp
decb
cli
imul
aad
jbe
dec
or
mov
dec
adc
cmp
cs
std
dec
adc
imul
xchg
cld
out
mov
and
mov
adc
cmpl
sub
aam
xlat
jecxz
hlt
fsubl
outsl
jo
mov
lahf
in
mov
add
fiaddl
and
sbb
int
jns
lds
fstl
sti
stos
orb
xor
pop
test
add
jl
adc
push
inc
xchg
mov
orl
test
loopne
int3
mov
push
movsb
scas
and
cmpsb
loope
lahf
pop
xchg
lods
jl
out
lcall
aam
push
enter
sarb
pop
jbe
push
inc
sahf
cmpb
xchg
shlb
sti
lret
int
lods
ss
out
mov
jbe
sub
cmpsl
frstor
mov
inc
jge
test
icebp
mov
repz
jnp
and
jbe
add
nop
mov
data16
nop
lret
inc
inc
out
xlat
aam
cmc
xor
dec
in
mov
sbb
dec
dec
mov
and
mov
sti
push
out
rcll
dec
nop
mov
mov
pop
mov
ret
mov
hlt
cmp
mov
je
stos
stos
btc
ret
inc
les
pop
xor
xor
loopne
sahf
mov
xchg
ret
mov
adcb
into
cwtl
rclb
adc
inc
mov
jo
scas
test
mov
inc
popf
addr16
mov
jnp
jle
cmpsb
mov
jecxz
adcb
mov
aam
or
xchg
int3
mov
and
fwait
mov
pop
lahf
pop
dec
mov
xchg
xor
out
sbb
mov
add
hlt
gs
cmpsl
push
dec
add
cmp
sbb
dec
rep
mov
mov
mov
loopne
xchg
mov
js
xor
arpl
leave
dec
shll
push
mov
mov
ljmp
push
ret
jmp
mov
clc
inc
jns
add
xorl
leave
jbe
xor
add
lret
aas
call
sahf
fldenv
dec
or
mov
add
std
mov
add
repnz
imul
sub
popl
mov
fildl
arpl
xchg
or
fstps
dec
nop
pop
scas
andb
sbb
push
or
cmp
inc
nop
and
rorb
sbb
adc
pop
push
push
dec
mov
add
in
test
pushf
bound
sar
jns
or
sub
movsl
test
shl
cli
jmp
sub
ljmp
aad
cmpl
das
in
cmp
mov
add
repnz
inc
xchg
ds
mov
bound
sahf
add
sbb
inc
movsl
je
shlb
nop
push
pop
pop
mov
into
ficompl
aas
movsb
or
shl
mov
aas
popa
mulb
adc
mov
jb
or
inc
les
out
push
out
jmp
sbb
push
sub
mov
add
lret
xlat
mov
dec
loop
mov
mov
xlat
xlat
mov
call
in
mov
andb
ljmp
cmp
mov
sbb
imul
imul
lahf
sbb
jmp
mov
or
dec
adc
push
sbb
pop
out
popl
cmovb
xchg
sbb
lret
sbb
inc
pop
cli
cmp
addr16
mov
popl
push
dec
ds
inc
xlat
pop
roll
arpl
cmp
bound
in
insl
repz
es
jp
ds
dec
mov
fcomi
and
push
out
mov
sbb
data16
jmp
in
mov
rcr
jecxz
mov
add
push
int
mov
xchg
outsl
dec
mov
pusha
dec
sbb
cmpsb
adc
pop
rcll
ret
fcompl
dec
xor
mov
xor
xchg
jns
mov
pop
adc
int
in
scas
int3
nop
cli
sub
inc
in
rorl
sub
movsb
mov
loop
push
mov
xchg
loope
pusha
loop
jns
push
push
mov
or
push
cmp
mov
je
pop
ja
stos
or
fnstenv
mov
pushf
in
test
xchg
leave
aam
hlt
cltd
pop
sbb
scas
into
imul
test
ds
test
xor
loopne
xchg
push
jecxz
mov
mov
cwtl
nop
scas
xchg
lds
aaa
add
mov
fisubrl
push
ret
test
dec
pushl
xchg
aam
fisttps
or
or
mov
lods
xor
jno
add
call
enter
test
imul
inc
inc
add
xlat
les
or
aad
lds
cli
mov
out
xchg
test
fnstenv
jb
adc
adc
adc
add
jb
xchg
cld
das
mov
sub
add
adc
ret
scas
pop
or
sbb
and
mov
jg
inc
ret
aam
pushf
and
push
insl
int
push
aad
xchg
or
shll
or
pop
lcall
add
pop
int
push
mov
jp
pop
xchg
jecxz
adc
in
outsb
inc
movsl
fucom
sti
mov
sahf
adc
testl
jo
stos
into
pop
data16
loop
add
xor
xor
mov
sub
sbb
push
jns
add
bound
sbb
mov
or
pop
sbb
jno
sub
fcompl
rolb
into
pop
adc
jmp
ss
decb
fisttpl
jg
imul
daa
push
mov
pop
or
int3
adc
shlb
xor
push
sub
ret
mov
adc
in
out
out
insl
push
repz
xchg
arpl
icebp
xchg
mov
fwait
in
fcompl
cmpsb
inc
movsl
scas
jae
and
sti
arpl
clc
inc
cmpb
imul
cmp
adc
pop
out
les
fwait
lret
fdivrl
int3
mov
nop
ss
and
aad
and
jne
or
mov
decb
mov
cmc
mov
mov
jl
mov
inc
mov
into
jb
outsb
sbb
icebp
lods
shll
jbe
cltd
icebp
subb
or
dec
mov
lods
mov
daa
add
into
stc
loopne
xchg
call
push
jae
pop
lret
jae
push
jae
aad
push
sub
movsl
shll
sbb
mov
stos
ja
stos
dec
movsb
sub
push
mov
mov
mov
cmc
into
jb
std
cmpsb
push
push
sbb
out
sbbb
js
xlat
je
stc
inc
enter
mov
cli
lret
pop
xchg
rorl
ror
cli
movsl
mov
inc
ds
pop
cmp
subb
adcb
sub
inc
int
add
xor
mov
andl
jp
shrb
mov
lahf
or
pop
xchg
dec
bound
out
jns
fistl
fmuls
cmpsb
idiv
xor
push
sarb
test
data16
jp
adc
mov
xchg
out
adc
or
adc
hlt
sti
nop
or
jp
call
out
scas
xor
inc
pop
sarl
fcom
fsub
pop
shr
lds
xchg
into
das
push
mov
and
adc
rolb
push
jg
test
bswap
fsubs
mov
les
push
lea
push
mov
fwait
mov
stos
pop
leave
mov
imul
js
adc
xchg
inc
fistpl
movsl
popa
jns
int
xchg
imull
fisubrs
xchg
jae
jb
lods
mov
aaa
mov
sub
mov
jns
lods
cmp
shl
cvtps2pd
out
push
movsl
cld
mov
mov
mov
xor
dec
add
xchg
cmpsb
adc
int3
fidivrs
bound
aas
push
rcr
test
sub
xchg
or
iret
out
xchg
adc
cld
jecxz
cmpsl
push
fstpl
sbb
outsb
mov
cltd
cmp
ret
pusha
mov
scas
call
lret
in
fs
mov
xchg
pop
enter
aad
and
xchg
fists
int3
out
and
adc
push
xchg
mov
rcll
or
cmp
loop
inc
addr16
mov
adc
leave
rcll
mov
iret
outsl
dec
repz
mov
push
cld
and
mov
push
mov
push
repz
orb
adc
inc
lock
mov
out
xchg
mov
fsubrs
int3
enter
jne
pop
push
lret
lds
push
mov
std
and
xor
sbb
fmulp
dec
popw
lock
jl
dec
or
fildl
je
adc
xor
sub
popl
dec
dec
out
pusha
push
fadds
push
enter
nop
je
lret
or
xchg
mov
xchg
pushf
dec
dec
addr16
rcll
xchg
mov
rorb
dec
push
push
and
cmpsl
fldt
xchg
xor
pushf
shrb
jg
in
pop
lcall
or
das
sahf
data16
loope
cmp
aas
lock
das
push
or
inc
test
shrl
or
out
iret
sub
jbe
pop
dec
enter
test
aad
add
push
lret
jg
push
nop
imul
pop
dec
xor
jp
lods
bound
pop
xlat
out
call
les
enter
cs
dec
cmp
lea
lea
fsubrl
mov
cmp
push
push
add
int3
lods
adc
sbb
sub
movsb
outsl
std
pop
push
cmpsl
jge
repz
data16
pop
inc
sub
mov
in
or
push
push
inc
scas
sub
push
cmpsl
scas
mov
dec
pushf
ret
inc
bound
arpl
sub
in
movsb
mov
xor
into
sub
cmp
stos
mov
aam
jbe
push
push
add
testb
pop
and
adc
sbb
cmp
cld
mov
incl
xchg
and
push
jmp
scas
pop
ss
fsubr
cwtl
cli
xchg
push
push
div
add
in
cmp
and
pop
sub
mov
imul
into
xchg
fsubl
xchg
fimuls
aad
and
push
xor
jp
xor
xchg
fdivrl
jge
mov
mov
mov
nop
loop
nop
xchg
or
lahf
mov
xchg
fldl
add
pop
jns
mov
xchg
mov
bound
nop
push
dec
dec
cs
cmp
test
dec
mov
cwtl
mov
mov
mov
and
lahf
mov
xorb
mov
insb
and
inc
mov
ljmp
push
cmp
cltd
inc
sub
stos
add
pushf
lods
and
jnp
int
test
or
cmp
sti
adc
lock
std
mov
jae
stos
push
jl
pop
xor
lahf
dec
rorb
int
repz
jl
mov
jo
cmp
pop
mov
nop
pop
loop
jg
les
dec
loop
mov
and
sub
outsb
push
push
nop
add
mov
shll
in
xchg
stc
out
xchg
or
dec
mov
lods
push
jbe
fmull
cmc
and
jns
mov
and
mov
test
pop
mov
jne
mov
mov
cmp
insb
xor
enter
mov
call
shlb
jae
push
sbb
loopne
pop
fldt
in
add
lret
es
rclb
push
lcall
add
enter
popa
mov
int3
cs
popf
mov
mov
or
cld
add
subb
fbstp
nop
xchg
pushf
vpsadbw
mov
ljmp
cld
dec
orb
dec
popl
xchg
lret
push
push
inc
inc
xchg
inc
push
dec
pop
enter
loopne
ds
jb
mov
ret
adc
js
test
and
pop
jns
test
xchg
push
xor
cmp
mov
jnp
loop
lods
or
shl
dec
mov
dec
xor
shr
adc
xchg
jo
cmp
roll
xor
mov
cld
mov
lcall
mov
push
inc
add
push
divl
data16
sub
cmp
and
cmp
in
popf
xchg
sub
rcrl
sbbb
push
sub
mov
push
sahf
xlat
and
add
pop
mov
ljmp
mov
pop
sbb
inc
xchg
or
pop
mov
imul
je
roll
cmpsb
mov
ret
inc
adc
dec
lret
xchg
je
inc
push
inc
pop
sbbb
lret
xor
add
loopne
lahf
inc
loop
mov
icebp
out
aam
push
cli
nop
xchg
orb
jmp
mov
mov
sahf
add
nop
fimull
sub
sbb
jns
push
push
push
push
cli
data16
lret
loop
movsl
ja
pop
daa
push
jns
add
loope
mov
mov
xchg
mov
fiadds
mov
out
mov
or
mov
xchg
jge
into
xchg
push
jnp
dec
mov
jns
mov
jo
mov
in
sub
js
mov
rcrb
pop
loopne
icebp
push
xchg
cmp
adc
shl
xchg
sahf
fcmovnbe
adcb
repnz
test
pushf
pop
inc
or
add
mov
sti
stc
inc
lods
cmp
xchg
sub
sahf
push
es
je
add
push
cmpsb
add
xchg
insb
and
sbb
imul
sub
movsl
mov
mov
cwtl
cmpsl
cmc
cmp
jae
pop
nop
inc
jns
int3
ds
sbb
insb
jne
xchg
mov
out
aas
aam
inc
fwait
mov
pop
repnz
mov
xchg
out
in
sub
ror
or
nop
push
xor
lea
or
lcall
xlat
sahf
adc
repz
cwtl
pop
stos
mov
mov
addr16
in
pop
xchg
cmp
adc
push
imul
inc
push
out
test
arpl
enter
push
xor
js
outsb
xlat
sbb
gs
mov
cmpl
adcb
js
call
lds
push
test
add
stos
mov
lea
pop
jns
mov
dec
push
sbb
leave
testb
sbb
hlt
ret
mov
push
jmp
repz
movsb
popa
jg
adcl
int3
fnstenv
dec
dec
cmpsb
cmp
insl
inc
xor
int3
pop
jbe
inc
cltd
lahf
mov
mov
cld
out
or
lcall
mov
mov
psubsb
xchg
add
push
loope
gs
and
mov
or
pop
popa
scas
movsl
jnp
mov
movsl
je
test
push
mov
ja
movsb
add
push
subl
or
orl
cmp
sahf
jg
inc
mov
cld
pop
inc
add
data16
mov
ja
and
mov
add
mov
data16
push
jno
inc
xchg
shrl
shrb
sbb
cmp
pop
mov
psubsb
xchg
imul
xchg
cmp
test
xchg
sbb
mov
push
fcompl
aam
test
std
push
push
mov
loop
addr16
cmpsl
leave
insb
mov
into
test
es
ret
sbb
in
mov
int3
push
mov
fisttpll
imul
loopne
pop
les
pop
mov
repnz
iret
mov
cmp
fwait
inc
cli
xchg
jno
add
inc
imul
call
mov
scas
inc
enter
and
int3
xchg
xlat
or
rorl
rorb
and
push
xchg
or
mov
dec
jl
mov
add
cmpsb
lods
adc
mov
fcmovnbe
push
mov
jg
xchg
cmpl
mov
push
test
movsl
sti
mov
lret
outsl
push
mov
jp
aaa
es
push
mov
mov
adc
pop
std
aas
push
test
jno
xchg
data16
sub
jnp
outsl
and
in
xor
push
inc
enter
into
popfw
mov
cli
mov
popa
test
loop
pop
fwait
push
jo
movsl
loopne
jnp
xchg
fbstp
pop
iret
inc
stos
xchg
fsub
out
mov
jmp
cmp
pop
outsl
push
dec
outsl
lahf
into
std
addr16
xchg
negl
test
xchg
mov
and
out
xchg
adc
sub
iret
mov
test
test
ja
adc
mov
clc
jae
lods
rolb
mov
mov
push
inc
jne
mov
mov
and
push
in
mov
push
xor
adcb
test
es
lds
fimuls
xor
mov
fdivrl
xor
xchg
jl
ret
push
leave
mov
cwtl
jnp
dec
popf
movsl
xchg
lret
test
sub
test
mov
test
push
or
sbbl
mov
cmp
jo
jns
jbe
pop
xor
or
cli
fisttpll
popa
xchg
mov
or
std
nop
test
cs
mov
lret
iret
inc
outsl
add
gs
push
mov
xchg
xor
inc
push
sub
sarl
repz
jns
jo
int
subb
cwtl
lea
je
xchg
xchg
addb
pop
mov
lahf
insl
leave
xor
push
jno
adc
in
mov
in
xor
sub
aam
popa
cmp
hlt
dec
adc
pop
lcall
adc
add
add
sub
pop
cli
push
xor
and
into
call
inc
cs
jbe
mov
xchg
mov
mov
cmp
test
cmp
call
inc
xchg
fsub
cmp
cmpsb
lret
ret
jnp
mov
test
orl
ja
sub
add
cmpsb
xchg
or
mov
mov
rcl
adc
adc
mov
add
sub
add
and
adc
push
push
add
fidivrl
movsb
js
imul
xchg
ficompl
and
sbb
rcr
add
pop
jno
fmul
aam
cwtl
mov
push
inc
repz
add
or
mov
cmp
cltd
in
jns
and
jne
inc
dec
jl
push
notl
push
push
cmp
pop
mov
bound
mov
daa
test
sti
movsl
insb
lods
push
scas
jmp
push
stos
inc
addb
lods
push
cmp
mov
pop
mov
add
jae
adc
cmp
daa
les
push
xchg
jp
in
sbb
xor
push
xchg
xchg
jmp
or
adc
add
mov
jg
xchg
addl
scas
cltd
push
dec
jg
xchg
outsb
stc
mov
xorb
pop
clc
stc
insl
cmpsl
test
jp
xor
data16
xchg
in
std
xchg
push
or
test
into
sbb
push
and
mov
adc
cmc
cmpl
push
test
aad
adcl
or
arpl
sbb
pop
loop
dec
mov
stos
xchg
outsb
loop
and
les
ljmpw
out
jge
ret
into
test
fnstsw
push
les
les
sar
jmp
ret
xchg
pushf
shl
pushf
cmp
push
rol
sub
clc
ret
in
lcall
roll
pop
dec
cmp
sarb
sbb
mov
in
les
xchg
inc
or
ret
mov
mov
andl
jmp
repnz
push
rcll
imul
push
add
push
mov
mov
jl
xchg
jecxz
jnp
push
add
ss
and
loop
xchg
xor
adc
jl
cmp
add
or
pop
movl
lds
sub
clc
shll
jmp
test
rolb
iret
and
dec
repz
int3
cmp
aaa
push
mov
ud1
adc
stos
pop
sbb
cli
mov
pop
enter
jae
aam
push
test
mov
sub
je
xor
cli
popf
ficompl
dec
fwait
lret
idivb
mov
mov
loopne
jg
fidivrl
or
push
outsb
sti
push
das
stc
nop
cmp
test
adc
xchg
std
adc
mov
cmc
dec
or
dec
sub
adc
sub
test
enter
dec
pop
cmp
ret
test
mov
push
xchg
aad
mov
mov
cwtl
xor
xchg
push
popa
lea
out
or
notl
addr16
in
lret
mov
cmp
mov
ret
sahf
inc
es
out
mov
fs
into
shll
jg
lods
xor
mov
mov
lods
je
push
mov
test
xor
pop
jns
movsl
loop
loop
xor
ret
xor
je
insl
addr16
xor
scas
jbe
push
and
stos
xchg
lds
push
ret
push
xchg
or
mov
xlat
es
and
testb
subb
jecxz
int3
and
and
call
movsl
pop
sbbl
add
xor
mov
dec
ljmp
loop
mov
and
xchg
inc
cli
test
xchg
aas
push
mov
fcmovne
addb
jne
or
imul
and
or
sbbl
insb
ret
js
leave
imul
sarl
inc
idivb
int3
sub
pmulhw
sub
xchg
push
leave
jg
sub
mov
flds
stos
mov
mov
jno
out
cmp
xchg
mov
xchg
mov
xchg
mov
cmp
push
imul
adc
cs
sbb
les
and
add
mov
cwtl
mov
mov
pop
leavew
cs
pushf
aad
stos
insl
or
xchg
data16
in
in
addr16
in
and
ds
repz
xchg
hlt
adc
sbb
enter
sahf
xchg
data16
outsb
adc
into
mov
movsl
xchg
jne
dec
or
or
movsl
cvtps2pd
push
jl
mov
arpl
nop
pop
test
movsl
stc
and
pop
jecxz
or
xor
add
ret
lahf
xchg
mov
pop
xchg
out
pop
movsb
bound
add
mov
pop
or
push
iret
cmp
adc
scas
and
fsubr
cmp
insl
imull
loop
sbb
cmc
and
push
push
outsb
cwtl
rolb
adc
jo
mov
mov
outsb
out
repnz
cli
adc
pop
ds
sbbl
push
movsb
inc
xchg
mov
imul
push
and
and
rolb
cmpsb
mov
xor
mov
mov
shrl
leave
or
mov
push
or
pop
mov
nop
andl
add
into
ret
ret
mov
add
dec
fnstsw
int3
and
sub
movsb
add
gs
fucomi
mov
test
xchg
stc
repz
adc
xchg
mov
lds
sub
rcrl
cs
xchg
test
mov
dec
addb
iret
mov
xlat
mov
fs
nop
and
shlb
data16
fmul
fnsave
ret
jge
xor
jbe
lods
mov
inc
loope
push
insl
decl
nop
sub
and
jle
hlt
subb
bnd
ljmp
xchg
adc
sub
aam
test
lock
inc
mov
shrb
add
pause
in
mov
js
mov
subl
sbb
sahf
out
aaa
loop
int3
dec
dec
and
test
ss
or
dec
xchg
xchg
cpuid
es
test
push
jnp
fcoml
xchg
popa
js
push
inc
xchg
test
test
xchg
jae
sub
cmp
insl
mov
out
sti
lcall
call
push
lea
jae
enter
push
notb
sarb
out
push
es
shrl
sahf
add
xlat
jb
in
mov
xor
shrl
cmp
inc
adc
insb
push
stos
pushf
or
cmpsb
dec
or
rol
xchg
cmp
enter
repnz
leave
add
sysret
arpl
movsb
scas
mov
xchg
lock
lods
movsb
mov
xchg
xorl
cltd
call
test
mov
in
gs
stc
adc
push
ficoms
or
adc
mov
into
push
inc
push
into
cmp
sti
jnp
adc
pushf
xor
sbb
cld
add
xchg
jp
xor
stos
mov
inc
cmp
dec
inc
push
enter
sub
jno
repz
loopne
ret
xchg
cmp
lahf
lds
and
pop
xchg
out
push
add
je
repz
add
mov
add
push
cmp
cmpsb
cmp
mov
xchg
es
fs
ret
xorb
rclb
mov
or
fs
push
in
sbbb
dec
clc
jmp
lods
ljmp
popf
sahf
pusha
mov
sahf
fmuls
les
dec
mov
cmpsb
cli
call
adc
jecxz
mov
insb
inc
aaa
jbe
jecxz
add
in
mov
mov
sbb
add
hlt
sub
lcall
pop
ja
or
push
pop
sub
jecxz
mov
inc
fwait
add
adc
push
fimull
cmp
add
sbb
mov
push
sub
xchg
sbb
mov
push
stos
fmul
movsl
jns
stos
fcoms
es
dec
push
mov
insl
scas
addr16
or
jg
cmp
cwtl
bound
pop
adc
mov
out
mulb
in
push
sbb
mov
lds
push
xor
fs
adc
inc
rorb
cmp
mov
xchg
repz
xor
fstpl
dec
push
xor
jne
out
jb
mov
ret
jne
pop
sbb
or
xchg
nop
jnp
sahf
jbe
adc
mov
xchg
xchg
jecxz
pop
cmp
xchg
dec
mov
add
push
xchg
jae
mov
repz
dec
or
push
pusha
icebp
inc
push
pop
mov
push
cmpsl
stos
addr16
xchg
leave
inc
jecxz
xor
cwtl
mov
pop
and
push
mov
shrl
cltd
scas
jbe
mov
cltd
mov
push
aas
adc
mov
repz
xor
shrb
out
mov
fs
leave
cs
out
mov
jns
loope
pop
outsl
imul
fisubrs
movb
mov
ss
jnp
das
loop
repnz
insl
add
mov
xchg
mov
aad
add
push
cld
mov
inc
jns
mov
mov
jmp
movl
mov
lcall
scas
hlt
xchg
repnz
ret
mov
iret
dec
and
outsl
and
nop
add
sahf
mov
jge
mov
fimuls
xchg
jno
mov
xchg
sahf
push
mov
int3
notb
sub
popf
add
or
mov
bound
xchg
xor
call
ret
cmp
out
or
mov
dec
jo
cmpsl
test
sahf
push
into
sub
cmp
enter
mov
rorb
js
sarl
push
jge
adc
movsb
stos
aam
addb
test
cli
fucomip
test
mov
in
push
subb
subb
shll
imul
test
push
loop
icebp
loope
jp
es
fdivs
repz
xor
lea
sub
addr16
mul
dec
mov
cmp
push
pushf
inc
aam
sub
adc
ja
dec
scas
push
aad
fdivrl
adc
add
das
je
pushf
cwtl
xor
xor
ficoml
dec
or
rorb
jae
xchg
lds
mov
movl
mov
adc
pushf
into
mov
and
fld
mov
sub
aaa
mov
pop
cmp
push
ficoms
fistpll
fwait
adc
pop
jns
pop
daa
sahf
push
std
movsl
out
sti
outsb
movsl
repz
push
xchg
sbb
jmp
insl
sbb
jp
std
xchg
aad
jnp
pop
out
faddl
insw
jo
lea
jp
outsb
repnz
mov
dec
inc
rdmsr
fstl
jg
mov
mov
and
xchg
sahf
imul
pop
leave
ds
mov
mul
push
jb
daa
aam
scas
xchg
adc
inc
pop
fs
sbb
je
iret
jb
aaa
adc
data16
adc
xor
or
add
dec
bnd
bound
push
jp
or
dec
je
pop
hlt
mov
xchg
jp
sti
ret
mov
ja
xchg
add
sbb
int
lods
xchg
jp
or
shll
jno
loop
jg
sub
dec
adc
push
scas
or
dec
jl
pop
div
sub
outsl
inc
jmp
stc
mov
sarb
jl
and
repnz
dec
add
push
bound
xchg
lret
inc
add
ret
hlt
int3
or
loopne
out
repz
leave
xchg
sub
int3
sub
fcoml
xchg
cmpsl
ss
xchg
mov
arpl
add
xchg
xor
mov
and
jmp
pop
dec
push
pop
enter
mov
or
adc
ds
inc
cmpsb
pop
jg
jno
sbb
mov
cltd
test
sbbl
dec
cwtl
iret
orb
pop
adc
test
mov
dec
xor
mov
xor
sbb
int3
ja
sbb
loope
cmp
xchg
mov
rcr
xchg
cmp
sub
add
pushf
adc
stos
xchg
jbe
or
push
xor
ds
xchg
cmp
sub
and
add
xchg
cmp
or
decb
pop
outsl
rcll
rolb
xchg
mov
rcrb
sahf
data16
out
sbb
push
test
repnz
lret
lcall
pop
cwtl
push
paddusw
lds
fwait
cwtl
test
frstor
lods
xchg
loopne
enter
and
cmc
aad
sbb
jne
jp
xor
aaa
mov
xor
shll
push
and
jg
xorb
enter
mov
jae
xchg
pop
push
ret
add
fwait
pop
andl
sbb
push
out
add
shrb
xor
leave
sub
sbb
xor
adcb
dec
sbb
mov
movsl
or
repz
dec
adc
lret
jb
pop
jbe
roll
jne
outsb
adcb
xchg
sbb
dec
add
js
js
aam
xchg
iret
sbb
push
sub
mov
fdivrl
add
pop
repz
xchg
incl
test
lret
movb
test
jg
jbe
add
iret
cld
add
and
es
repnz
pop
rcrb
sbb
shrl
je
aas
jne
in
lret
add
adc
push
test
pop
mov
js
mov
cmpsb
jl
in
pop
inc
jle
jbe
stos
dec
mov
shr
mov
aas
xor
js
push
or
fstps
mov
sub
add
mov
cmpsb
les
movsl
sbb
pop
jns
sub
iret
repnz
jmp
dec
out
addr16
adc
lods
cmp
sub
or
shlb
mov
imul
jb
xchg
xor
lret
dec
cli
mov
xor
mov
cmp
pop
outsb
jb
cmp
and
inc
inc
loopne
mov
xrelease
sbb
xchg
fsub
fxch
xlat
dec
fwait
in
pop
int3
insl
sub
xchg
inc
imul
arpl
pop
xor
push
outsl
sbb
push
test
sub
mov
sti
lds
fucomi
add
jp
push
xchg
mov
fmul
and
neg
daa
jnp
cld
or
jl
dec
push
mov
movsb
into
nop
out
mov
subl
inc
jmp
shl
push
fmuls
mov
jecxz
mov
mov
push
mov
fdivrp
add
call
sbb
iret
stos
out
push
movaps
repz
into
cmp
cli
pslld
or
cmp
push
aad
dec
mov
das
xor
mov
mov
in
mov
faddl
pop
stc
push
lods
loopne
movsl
pop
mov
test
add
push
shll
lods
cltd
je
popa
xlat
test
ds
sti
lds
ret
pushf
adc
dec
das
sub
cmc
shl
gs
jp
popf
fiadds
adc
rorb
mov
stos
dec
xchg
ljmp
add
pop
jg
push
mov
adc
popf
enter
scas
add
jns
jb
push
scas
xchg
sarl
lods
pop
cmp
or
fsubrs
mov
imul
movsb
jno
int
lods
repz
aad
jl
xchg
cmp
ds
jns
xchg
mov
inc
mov
or
out
sub
ds
in
sbb
xor
pop
insb
adc
es
or
add
xchg
call
scas
mov
pop
pop
pop
out
mov
push
mov
cltd
loop
pop
incb
mov
dec
sbb
cmp
cld
bound
add
jg
repz
clc
mov
sbb
mov
cmp
mov
nop
jmp
jmp
mov
data16
mov
int
movups
lret
xchg
outsb
les
bound
outsb
xchg
xor
jecxz
pop
decl
outsl
pop
cwtl
add
nop
mov
insl
adc
add
jl
push
adc
test
loop
mov
pop
sahf
stc
fstps
fsubs
int
dec
rcl
lock
xchg
sbb
inc
fadd
aad
pop
xchg
jno
pop
or
shrb
adc
leave
sub
inc
adc
fldcw
adc
addr16
mov
enter
or
insb
imul
imul
jge
push
sub
ss
pusha
roll
pop
xchg
mov
jl
testl
mov
rolb
scas
jg
loopne
mov
in
mov
out
jbe
push
aam
or
mov
mov
sub
ret
outsb
shr
push
mov
jnp
leave
fists
mov
cmp
imul
pop
test
push
scas
stos
jg
aaa
es
inc
lcall
call
iret
mov
or
push
mov
cmp
mov
mov
mov
push
fimull
rorb
and
and
fldcw
pushf
repnz
fmuls
mov
test
aam
fldt
adc
cld
shr
cli
mov
cli
mov
sahf
mov
subl
cli
bsr
add
test
ret
xorb
sub
xor
xchg
xchg
jp
setp
inc
aaa
sbb
xchg
jge
pushf
std
cwtl
addr16
lea
in
dec
cld
lcall
jnp
add
push
loopne
adc
push
je
adc
stc
inc
push
mov
mov
mov
push
out
lret
or
inc
cwtl
add
orl
into
ss
mov
mov
jbe
ret
out
xchg
xor
pushf
xor
xor
outsb
into
jne
pop
xchg
pop
stos
mov
or
repz
dec
push
scas
push
das
mov
nop
push
loop
pop
repnz
adc
mov
lcall
or
or
std
stos
cmp
mov
pop
outsb
cli
hlt
or
push
cmpsl
cmp
or
outsl
inc
or
add
mov
in
add
movsl
test
iret
test
sbb
jl
jg
aam
xchg
adc
ret
xchg
stos
loop
loopne
lods
sbb
ret
jp
sbb
repz
mov
mov
sub
es
xchg
pop
push
jb
or
add
popf
mov
fwait
imul
popf
add
sbb
inc
add
imul
mov
jecxz
cmpsb
push
mov
or
mov
enter
cli
or
inc
cwtl
jbe
rclb
sbb
jmp
pusha
xlat
icebp
pop
mov
pop
shlb
vmwrite
adc
jb
repz
xchg
fsubrl
mov
push
testl
xchg
lock
faddl
xchg
movsw
sbb
sahf
aad
in
inc
mov
mov
mov
mov
repz
out
ret
mov
dec
dec
loop
scas
pop
push
insb
addl
sbb
jp
dec
pop
add
repnz
cmp
push
pop
sbbb
in
jo
addl
cmp
xor
cmc
int3
cli
fidivrl
mov
jecxz
jbe
jmp
pushf
iret
dec
xchg
pop
inc
mov
imul
dec
mov
fldenv
scas
cwtl
lahf
lods
push
mov
in
jnp
pop
cmc
mov
fimull
cmp
cmp
out
mov
and
adc
xchg
adc
cltd
adc
leave
mov
enter
lcall
pop
les
das
cwtl
ret
mov
test
cli
dec
ret
adc
sbb
push
mov
inc
jnp
mov
arpl
xlat
push
shrb
adc
aam
xor
inc
pop
xchg
mov
ss
ret
and
pop
mov
mov
and
cwtl
pop
xchg
mov
nop
push
decl
mov
arpl
mov
arpl
mov
les
jbe
and
js
inc
aad
xchg
jnp
cs
fiaddl
mov
dec
push
cli
rol
pop
dec
jl
into
inc
xchg
lret
mov
cwtl
ret
cli
iret
xchg
je
ljmp
fidivrl
and
fldenv
sti
jbe
popa
cli
mov
nop
adc
ret
mov
sub
call
shll
in
loopne
repnz
xchg
iret
mov
jb
sub
xlat
data16
dec
popf
pop
pop
ret
lea
xchg
cmpsb
push
mov
std
dec
fwait
sub
cld
stos
sar
xlat
mov
xchg
push
sbb
sub
fcmovb
jp
and
push
or
xchg
sbb
cmp
popl
les
out
inc
fstpl
add
jecxz
arpl
mov
jnp
loope
dec
pop
jecxz
xchg
mov
mov
cmp
aad
push
adc
dec
orl
mov
into
inc
iret
ds
mov
or
ds
dec
icebp
lahf
fsts
xchg
test
mov
pop
int
sub
in
sub
mov
mov
sub
pop
add
test
es
repnz
je
xchg
pop
das
or
add
pusha
enter
mov
enter
and
aam
mov
push
test
sti
xor
lea
shlb
shr
xchg
imul
movsl
loop
aad
imul
add
loop
mov
addr16
test
ss
mov
bound
xchg
and
fimuls
jns
pop
std
xor
push
je
xchg
pusha
sbb
xorb
and
sbb
sti
mov
subl
jae
lahf
sti
insl
mov
add
ficoms
cli
leave
fsubrl
dec
lahf
xchg
repnz
jbe
out
js
pop
in
jp
fs
mov
mov
cmp
mov
rol
loop
push
push
dec
mov
inc
cmp
int3
mov
xchg
xchg
imul
sarb
fsubrl
or
sar
mov
sti
mov
xor
sbb
insb
nop
mov
mov
pop
call
dec
das
inc
stc
jno
or
dec
mov
adc
add
aam
inc
xor
push
scas
xchg
jg
fmull
popl
jbe
lods
leave
mov
mov
jbe
jecxz
mov
push
mov
pushf
ret
push
sarb
push
push
es
pop
mov
and
lods
pop
push
push
cmp
movsb
mov
cltd
ror
and
push
mov
test
cmpsl
push
pop
cltd
movsl
or
rcrl
mov
mov
test
pop
cwtl
pop
loope
dec
adc
int
pop
mov
mov
add
dec
jmp
outsb
nop
push
mov
andb
repnz
daa
sub
ljmp
popa
inc
push
cltd
push
lret
and
lcall
mov
into
sbb
adc
xchg
xchg
pop
pop
test
cmpsb
lret
ljmp
aas
frstor
dec
mov
xchg
and
loope
fwait
sahf
stos
push
ror
mov
repnz
mov
shrb
je
pushf
sahf
sbb
pop
leavew
sub
and
inc
mov
lods
and
jnp
lahf
iret
test
dec
add
xor
leave
jl
sub
dec
lods
outsl
dec
stos
lock
leave
lret
add
cld
inc
cmp
xor
pop
pop
pop
mov
repnz
arpl
pop
mov
xor
fnstenv
inc
xor
jl
mov
jne
sbb
jno
mov
lds
and
mov
push
xchg
pop
shll
add
push
aam
pop
icebp
adc
push
orl
pop
ror
mov
add
mov
jne
out
adc
push
cwtl
roll
icebp
pop
inc
dec
or
cwtd
movsl
fadd
dec
adc
mov
fisubrl
aam
fcomps
mov
add
movsb
inc
into
or
add
subb
iret
jge
shlb
xchg
jae
lock
leave
rcll
ljmp
repnz
mov
adc
lods
xchg
pop
outsl
adc
dec
movsl
or
mov
push
insl
lods
push
xchg
std
arpl
feni(8087
lret
xchg
xchg
pop
lret
test
xchg
aas
gs
xor
testb
cmpb
cmpsb
movsb
mov
aam
jo
pop
test
ret
jge
mov
int
pop
adc
daa
sti
mov
adc
mov
jb
jg
xchg
addl
jl
flds
lods
lret
or
ja
inc
arpl
sub
dec
in
stc
loopne
shr
test
lods
mov
cmp
cmc
cli
mov
adcb
mov
inc
fimuls
fdivrl
add
scas
sti
mov
inc
and
mov
inc
add
xchg
ljmp
xlat
and
and
inc
pop
push
inc
pop
jnp
xchg
pop
mov
cmpl
shr
or
lea
add
sub
rcll
cs
adc
repnz
hlt
ljmpw
popa
ja
rcrb
adc
add
add
xchg
lcall
popf
stos
mov
mov
sahf
xchg
add
cmovp
sub
jo
add
insb
jb
jp
xor
and
mov
cld
lcall
test
jbe
mov
data16
mov
inc
imul
mov
insb
mov
inc
jp
dec
shlb
lods
push
push
js
cmpsb
into
lds
inc
stos
std
jecxz
enter
mov
pop
adc
add
movsb
rolb
or
mov
divl
push
cmp
mov
inc
push
mov
xor
rol
mov
les
lock
imul
or
ret
popa
cwtl
aad
add
mov
add
inc
repz
in
cmp
push
xchg
and
repnz
sbb
sbb
orb
adc
mov
stc
scas
hlt
ja
popf
movsl
cltd
imul
mov
add
sbb
pusha
add
das
or
xor
fcmovnb
xchg
in
pop
mulps
popf
in
pushf
sub
data16
mov
stos
xchg
xchg
aam
adc
cmp
cltd
inc
add
mov
std
cmp
cwtl
dec
loopne
cmc
test
hlt
cmp
jne
fnstcw
xchg
rorb
fidivrs
xor
stos
test
aam
xor
and
inc
mov
adc
cli
lcall
pop
nop
or
jno
add
pop
imul
int3
pop
in
pop
loop
jecxz
icebp
pop
fdivrl
jge
and
xchg
mov
mov
mov
enter
mov
fistl
cli
addr16
pusha
mov
js
dec
out
je
inc
jb
push
sti
jl
ljmp
xor
xchg
jns
sbb
xchg
mov
jl
out
or
add
lock
xchg
jmp
cmpsb
stos
subl
push
inc
or
cwtl
hlt
pop
adc
mov
inc
out
pop
fiadds
mov
lret
ret
mov
hlt
scas
mov
les
pusha
roll
mov
or
cmp
cmpsb
sti
fcmovb
in
out
loope
repnz
sub
xchg
test
pop
mov
cmp
sahf
jp
outsl
push
jg
loopne
mov
inc
or
adc
sub
mov
jg
pop
sub
and
xor
pop
lret
fstl
lea
in
mov
out
cwtl
addr16
mov
jge
mov
push
addr16
xchg
jbe
jl
notb
pop
popf
aam
jne
mov
and
jbe
pusha
add
push
add
mov
inc
or
sbb
jo
bound
cmp
leave
roll
inc
mov
xchg
sub
repnz
fwait
lahf
or
into
mov
cmp
mov
les
xchg
scas
sub
pusha
mov
jns
and
cli
dec
jbe
lds
mov
xchg
cmp
sub
pushf
jns
orb
stc
addr16
nop
repnz
sbb
bound
inc
and
sti
or
sbb
aam
js
adc
rcl
dec
or
cmpsb
xchg
jp
cli
test
push
push
mov
mov
mov
dec
sbb
dec
mov
movsb
hlt
iret
mov
xor
cmpsl
cmp
aas
movsb
xchg
mov
fistpll
jmp
push
push
push
bound
or
mov
dec
and
mov
mov
push
push
lods
sub
les
test
aam
lret
xchg
addr16
lods
into
mov
pop
sub
xchg
cmc
stos
mov
in
jecxz
push
cmp
scas
pusha
test
out
imul
idivl
and
data16
lea
push
call
ret
mov
pop
and
fisubl
push
mov
lods
jo
cwtl
sub
mov
pop
xchg
lds
xchg
xor
imul
das
in
les
mov
addr16
inc
icebp
xchg
sub
jl
popf
mov
fisttpll
stc
xchg
sbb
cld
jns
leave
xchg
cmpsb
loop
pop
movb
addr16
sub
pop
add
imul
lods
push
inc
mov
mov
das
mov
adc
sbb
xor
cwtl
pusha
call
jl
pop
xlat
mov
addr16
shrl
cwtl
pop
mov
cld
cmpsl
push
lret
adc
pop
fcoml
popa
pop
addr16
xor
ret
lds
lods
dec
and
adc
xor
rolb
nop
sub
addr16
scas
push
outsl
add
addr16
xor
pop
imul
pop
out
jns
adc
test
test
popf
sbb
and
cmp
inc
iret
inc
mov
jge
icebp
lds
xor
dec
call
test
cmpsb
mov
xchg
sub
aam
rolb
cmp
mov
jnp
dec
cmpsl
mov
or
push
scas
sti
mov
jg
jp
ss
jnp
mov
fidivrs
and
add
cmpsl
or
mov
outsl
sub
jae
cmp
iret
xor
scas
adc
adc
mov
or
out
aad
cmpsl
cmp
cmpsl
jnp
inc
add
mov
inc
dec
push
scas
cmp
mov
lret
sbb
add
xchg
vsubsd
ret
add
mov
jo
inc
lret
sarb
mov
pop
inc
pop
into
xor
and
clc
lret
mov
mov
cmpsb
xchg
out
mov
cmpsl
pop
xchg
std
dec
adc
mov
xorl
jp
nop
repnz
dec
cmp
movsb
mov
imul
jns
xchg
nop
pop
popf
mov
sub
iret
push
cmpsb
mov
push
xchg
cmp
imul
sub
or
lods
ja
js
cmpsb
icebp
dec
popf
cltd
inc
xchg
mov
xchg
adc
or
xchg
mov
sbb
dec
adc
addb
pop
jne
cmpsl
xor
int3
mov
rol
push
movsb
add
push
jle
add
data16
xor
sub
push
cmp
fcmovbe
jle
test
cli
inc
push
or
decl
out
adc
xchg
or
mov
xchg
sbb
and
mov
out
or
jp
xchg
idiv
cmpsb
cmp
add
andl
adc
shl
cltd
test
rol
push
sub
filds
test
push
xchg
dec
cs
xchg
xchg
push
jg
sahf
xchg
testb
pop
cld
inc
scas
add
flds
pop
xchg
and
sbb
xchg
xchg
inc
inc
cmp
adc
lods
ret
or
push
imul
in
adc
imul
outsl
dec
leave
sahf
cmp
adc
lock
fmulp
inc
adc
mov
movsl
test
jbe
fsubl
xchg
dec
pop
xchg
xor
sbb
mov
jae
add
xchg
out
aaa
rolb
mov
xchg
xchg
sub
cmp
xchg
add
xchg
or
push
movsl
int3
cmp
addr16
rcrl
inc
fadd
mov
iret
sub
xchg
or
xchg
pop
into
xchg
iret
xor
xchg
int
roll
movsl
icebp
mov
jmp
xchg
test
data16
lods
inc
mov
jl
hlt
mov
xchg
dec
pop
sbb
cld
cmp
jnp
cmp
adc
pop
pushf
push
out
test
gs
bound
cmpsl
xor
cmp
leave
mov
data16
xchg
mov
jmp
jmp
sbb
cwtl
ret
into
jmp
or
pop
iret
dec
dec
test
ja
cmp
jmp
jge
sbb
cmp
mov
jg
pushf
mov
mov
pop
outsb
call
popa
cmpl
cmp
call
dec
push
and
shrb
inc
dec
mov
fildl
push
orl
addr16
xchg
push
sub
xor
xchg
push
sub
xor
pushf
enter
mov
nop
call
mov
shll
out
cmpsb
clc
push
cmpsb
xor
xorb
addr16
lods
call
cmp
cmc
sub
aad
push
mov
lret
mov
xchg
or
inc
mov
cmpsb
xor
aad
pop
insb
fadds
adc
or
or
fisubrl
cli
or
mov
int3
pop
sub
xchg
pop
fwait
jl
inc
stos
aam
mov
pop
iret
outsl
in
and
jg
aad
sbb
xchg
mov
mov
ret
push
aad
xchg
inc
jmp
or
inc
pushw
jp
jp
jae
popf
pop
xchg
orl
push
mov
pop
hlt
adc
xchg
decb
pop
jg
insb
scas
loope
loope
movsl
movntq
movsl
jne
fstl
mov
mov
pop
dec
adc
and
test
mov
iret
fisubrs
and
addr16
shll
jae
push
pop
xchg
or
or
movsl
mov
aam
pop
xchg
lods
push
sahf
jge
rorl
add
add
inc
fadd
mov
addr16
dec
xor
lods
jne
sti
or
icebp
je
bound
mov
icebp
ret
jmp
lock
pop
add
mov
in
out
lahf
jno
fcomps
mov
xor
mov
test
sbb
scas
add
jecxz
insb
and
and
les
adc
mov
rcrl
mov
mov
or
jge
pop
stc
cmp
or
dec
mov
cmp
addr16
inc
cmpsl
fsts
imul
dec
lcall
add
jecxz
dec
mov
mov
rolb
mov
enter
mov
xchg
xchg
adc
jne
cltd
xlat
mov
out
iret
or
push
xchg
icebp
mov
xchg
cmp
insb
dec
negb
leave
sub
addb
jno
fidivrs
incl
rcr
xorb
inc
loop
xor
movsb
mov
or
jg
pop
push
xchg
fs
xchg
imul
mov
sahf
cmpsb
aas
mov
ja
xchg
test
xchg
int
lret
pushw
sub
add
cmc
aad
or
adc
dec
std
lea
add
repnz
sahf
mov
stc
cmc
push
dec
adcb
sub
push
push
dec
inc
popa
and
add
lahf
ret
lods
push
mov
pop
repz
je
fisubrs
mov
xor
cld
and
or
jns
cmp
pop
lds
ret
daa
xchg
sub
int3
adc
incl
mov
cmpsb
cwtl
pop
sbb
or
sbb
je
loop
add
sub
repz
cmpsb
pop
ret
cmp
or
fwait
lods
ss
mov
lods
pop
daa
push
push
mov
ss
mov
shrl
adc
into
xchg
sbbl
out
and
idivl
adc
xchg
or
inc
repz
add
or
mull
sub
flds
pop
cmp
jp
fbld
push
sbb
and
mov
fdivs
stos
shrl
daa
orb
push
sub
add
push
sub
inc
or
cmpsl
rorl
pop
mov
lcall
stos
repnz
cli
xchg
mov
push
lods
jl
fldenv
inc
mov
sub
les
std
xchg
daa
sbb
jge
xlat
into
inc
fcmovu
mov
xor
aam
mov
jp
xchg
push
mov
pop
hlt
fucomp
addr16
xchg
in
cmpsl
mov
cmp
mov
mov
jno
call
loop
addl
out
nop
fdivrs
push
sub
push
insb
out
sub
xor
fisttpl
jns
out
mov
cmp
mov
mov
and
into
lret
scas
imul
enter
std
enter
push
pusha
subl
adc
cmp
jmp
fcompl
cs
leave
cmp
les
outsb
xchg
xchg
push
inc
repnz
es
lcall
push
sub
dec
test
and
push
adc
and
sbb
sahf
mov
rcr
repz
add
ljmp
addr16
adc
jp
mov
add
ret
in
cmpsb
cmpsb
push
mov
add
cmpl
mov
ret
inc
sub
nop
shl
js
fbstp
sahf
xchg
pushf
aaa
inc
mov
movsl
dec
data16
test
cltd
xchg
lahf
repz
push
add
inc
mov
pop
andb
cmp
jecxz
push
lahf
jge
dec
mov
or
mov
lods
push
dec
xchg
mov
fsubrs
es
sbb
jbe
fisubs
aam
int
xchg
or
add
cld
fdivp
addr16
mov
sbb
add
mov
ja
cmpsb
jb
ret
mov
push
icebp
mov
pop
outsb
rcrl
sbb
xchg
bound
out
mov
sub
mov
repz
in
jl
or
jnp
in
loopne
lods
sahf
xchg
jl
ret
and
mov
test
lds
sahf
cmp
pop
inc
addr16
ds
loop
or
cmp
mov
xchg
mov
adcl
test
or
orl
xchg
mov
mov
jb
roll
lea
lret
sub
repz
cmp
out
add
dec
or
insl
sti
or
aad
xor
jbe
imull
push
out
push
movsb
orb
ror
pushw
arpl
mov
xchg
fnsave
aad
xchg
fadds
jl
stc
cmp
mov
xchg
cmp
pop
inc
in
cltd
sub
bound
jl
mov
addr16
push
aaa
and
mov
xchg
iret
and
fadds
icebp
sub
clc
inc
push
addr16
aaa
divl
cmp
sbb
jl
or
cmp
inc
fnsave
jecxz
xchg
jbe
sub
sub
mov
and
push
and
popa
mov
xchg
push
insl
mov
shll
arpl
mov
into
lods
sub
lahf
ss
jp
pop
push
mov
int3
stos
mov
lcall
leave
ret
add
jb
pop
and
mov
imul
scas
sar
nop
pop
clc
jne
mov
or
pop
decl
mov
repz
icebp
pop
pop
jo
mov
fisttps
dec
sbb
cmp
test
pop
sub
out
inc
lahf
adc
cmp
inc
ret
leave
feni(8087
dec
aad
mov
stos
shl
xlat
push
nop
bound
fistps
out
sbbb
cli
fwait
cmp
xor
aam
cmp
pop
leave
mov
push
adc
mov
xor
pop
test
add
push
fiaddl
jp
in
and
out
repnz
mov
pop
xchg
call
xor
or
push
adc
mov
jmp
jnp
mov
dec
sbb
fcmovb
cltd
mov
mov
cld
loop,pt
push
push
pop
mov
sbb
push
adc
sub
pop
sarb
enter
cmp
jae
fidivrs
into
push
inc
adc
lea
imul
test
push
les
jbe
jl
mov
xchg
pop
movsb
bound
or
mov
or
push
and
in
mov
add
inc
fadds
push
cmp
dec
fldt
addr16
adc
mov
lret
out
idiv
mov
addb
xlat
xchg
adc
sti
outsl
or
add
xor
push
into
xchg
ss
dec
pushf
pop
jae
sub
push
mov
sbb
shll
xchg
ficoml
mov
iret
call
pop
fwait
inc
xchg
sahf
push
notl
cmp
nop
je
fisubs
shrb
inc
and
mov
aam
iret
outsl
fidivrs
or
sahf
int3
jp
xchg
sbb
rolb
aaa
and
bound
repnz
sub
addr16
addr16
add
dec
mov
fists
stos
xchg
fwait
lret
mov
pop
xchg
jns
cmc
xor
jno
and
adc
shrb
inc
aas
xchg
mov
into
das
icebp
pop
scas
ljmp
addr16
cld
aas
xchg
inc
add
xchg
jbe
or
xchg
sahf
mov
xor
outsb
sub
inc
addr16
scas
xchg
mov
ljmp
sti
pop
ljmp
shlb
cmpsl
xchg
push
add
leave
or
xchg
hlt
ret
add
dec
pop
sub
sub
ss
das
and
adc
call
insb
xorl
add
rclb
xchg
fnstenv
or
sbb
outsb
cmpsb
pop
xor
data16
outsl
pop
out
shl
pop
mov
stos
cwtl
loop
outsb
jbe
xchg
fisubl
popf
pop
sahf
mov
push
popf
mov
xor
push
pop
or
test
and
or
adc
addl
dec
sbb
lods
mov
fucom
data16
inc
addr16
dec
ficompl
push
sbb
movsl
push
adc
mov
push
xchg
sub
mov
sub
pushf
movb
mov
and
iret
sbbb
xchg
les
xchg
out
pop
pop
inc
nop
ds
mov
sbb
test
loop
aam
sub
add
fdivl
lods
push
adc
rcl
mov
push
mov
jns
out
jae
clc
mov
shlb
mov
mov
mov
xchg
cmp
xchg
push
adc
aas
les
adc
push
inc
mov
push
jge
mov
sbb
imul
push
jns
adcl
loop
mov
xor
int3
loop
cmp
clc
cmp
xchg
push
loop
sbb
inc
jb
xchg
repnz
mov
loop
aad
in
iret
jl
out
fiadds
lcall
outsb
xchg
or
mov
jnp
std
pop
cmp
sbb
xchg
nop
inc
or
js
push
sbb
inc
sbb
ja
push
lahf
pop
rol
repnz
push
sub
js
inc
inc
or
mov
mull
adc
lret
pop
sbb
or
cmc
jge
lods
mov
push
sub
cli
mov
push
or
in
sbb
mov
sub
mov
xor
push
fsubrs
or
push
xchg
test
jecxz
dec
push
repz
rcr
push
dec
pop
push
cmc
mov
pop
sub
repnz
fiaddl
data16
sub
ss
out
lods
jbe
cmp
cmc
fbstp
in
push
inc
data16
pop
iret
cmc
ret
repz
sub
test
inc
cmpsb
xor
pushl
pop
popf
imul
inc
ds
aam
mov
scas
adc
mov
lahf
sarl
mov
stos
and
pushf
scas
push
dec
lahf
mov
jp
in
pusha
inc
std
xor
fwait
inc
scas
jg
or
loop
scas
scas
jns
mov
or
es
and
das
lods
in
inc
sbb
cmc
xchg
push
jno
dec
or
xchg
movsl
or
mov
or
data16
mov
sbb
pop
mov
adc
mov
cmp
les
mov
test
or
les
movsb
idivl
fs
xchg
xchg
push
jns
mov
addr16
fldenv
push
mov
cmpb
inc
testl
clc
cmpsb
pop
das
mov
lahf
xchg
adcb
jp
push
jecxz
movsl
lods
push
shll
mov
pop
mov
mov
jp
aam
mov
out
arpl
mov
clc
out
xchg
pop
push
shrl
xchg
mov
subl
jbe
int3
jl
push
insl
mov
xchg
push
xchg
nop
pop
adc
xlat
sar
cwtl
push
mov
nop
or
nop
or
fsubrs
sub
pop
pop
add
popl
dec
aad
inc
clc
dec
xlat
cli
pop
cli
jl
and
data16
fldcw
data16
call
inc
and
fadd
pushf
adc
mov
xor
fs
sub
mov
ret
je
aam
add
popa
mov
loopne
xchg
repnz
jae
pop
mov
mov
xchg
arpl
and
add
inc
cmp
mov
pop
shrb
sbb
repnz
or
xor
jnp
sbb
sub
testl
mov
inc
add
xchg
push
mov
sti
xor
xor
push
adc
inc
xlat
out
and
cmp
cmpsb
add
cmp
cltd
jp
ret
add
test
mov
inc
pop
in
mov
sub
test
loop
data16
cmp
cld
push
push
lods
inc
xchg
mov
loope
adc
aaa
push
adc
push
rorl
sub
jne
movl
and
mov
mov
inc
xchg
inc
mov
ja
sub
pop
cmpb
mov
aam
adc
scas
imul
int3
rcrl
fsubl
jecxz
mov
pop
sub
xor
cs
fimull
or
cvtps2pi
jae
aad
lcall
adc
imul
push
fwait
rorb
or
loop
mov
loopne
dec
add
xlat
popf
lds
icebp
inc
or
je
roll
stos
push
vmwrite
pop
mov
aad
pop
imul
je
in
cld
push
ret
in
nop
inc
fcoml
jmp
inc
add
mov
fwait
jnp
sbb
mul
cmp
mov
in
mov
loope
test
or
mov
int3
enter
mov
lea
shll
mov
mov
mov
ret
enter
aas
imul
int3
es
cmp
jp
xchg
repnz
jecxz
clc
and
scas
mov
dec
adc
xor
and
inc
rcr
xchg
imul
jl
adc
xor
addr16
push
jge
je
popa
stos
sub
addr16
add
adc
outsl
xor
sub
lds
into
cmp
sub
dec
mov
inc
test
mov
pop
stc
inc
inc
or
xchg
xchg
scas
into
call
lcall
dec
cmp
cmp
lcall
scas
sahf
imul
daa
rcrl
ret
mov
out
ret
push
sbb
bound
adc
movsl
mov
scas
repnz
push
fldt
stos
adc
lea
mov
mov
icebp
jns
insb
xor
inc
or
jb
mov
inc
test
arpl
xor
dec
adc
das
ja
ret
lea
mov
stos
xchg
test
je
mov
xchg
out
jp
pop
inc
dec
stos
push
ret
shlb
sbb
sub
iret
xor
daa
outsb
ja
sarl
leave
jp
fs
add
pop
add
int3
rol
mov
test
jno
mov
inc
cmpb
pop
fstl
mov
shll
mov
and
mov
mov
andb
push
in
mov
add
imul
pop
fnstenv
or
repnz
js
repz
fnsave
mov
pop
sub
imulb
push
push
cltd
je
pop
push
push
test
je
out
mov
lods
fwait
mov
adc
pop
lret
movsb
cmpsb
cli
xchg
ss
in
ret
xchg
cld
xor
xchg
adc
stos
test
pop
outsb
adc
xor
mov
out
shl
or
mov
out
ja
loop
add
jmp
push
test
cli
aas
scas
mov
jo
pop
ret
lret
cmp
lock
inc
jnp
push
and
jnp
ret
mov
xlat
push
and
and
bound
pop
jl
aaa
jb
adc
sub
mov
pop
cmpb
inc
iret
into
shrb
mov
roll
ja
add
inc
add
mov
and
cmp
outsb
mov
inc
lret
or
shlb
in
and
jne
cltd
xor
jge
mov
into
jnp
sbb
nop
arpl
jge
sbb
add
mov
and
fbstp
xchg
fists
mov
mov
jnp
mov
cmp
ret
add
std
lahf
mov
into
int3
mov
ja
add
jp
dec
sub
xchg
sbb
push
sub
rep
push
dec
or
test
iret
mov
adc
loop
aad
pop
inc
mov
jns
sub
loop
push
pop
mov
loop
shl
dec
adc
mov
jb
mov
mov
jge
cld
test
sbb
andb
cmpsb
fdivs
xchg
leave
js
shll
cld
outsb
imul
pusha
test
jge
adc
test
cmpsl
orb
xchg
mov
mov
mov
fstl
ret
movsl
scas
bts
mov
loopnew
push
jo
out
push
push
callw
inc
aam
sbb
lods
push
or
mov
fiadds
fistl
loop
in
leave
sarl
daa
stc
aam
add
les
push
fmull
test
and
push
cli
hlt
pop
sbb
sbb
add
mov
xor
cmp
fdivr
sarl
mov
lods
sub
data16
push
popf
movsb
pushf
cmp
out
sar
dec
cmpsl
xchg
dec
inc
pop
mov
jle
addr16
pop
jne
std
scas
ficomps
jl
jp
fisttpl
mov
xor
add
out
and
and
mov
fucomp
jnp
fwait
jnp
and
mov
cwtl
movsb
sbb
cwtl
stc
pop
fiadds
rolb
loopne
xchg
add
mov
movsl
ret
push
cmp
lds
sub
je
mov
inc
mov
sub
mov
adc
mov
cli
movsl
push
and
push
jne
ja
mov
cli
and
arpl
sahf
adc
pause
pop
shr
cmc
dec
dec
ret
insb
out
xchg
or
mov
add
idivl
test
xchg
adc
nop
cwtl
fucom
push
dec
jb
loop
loop
inc
xchg
bound
and
jecxz
outsl
int
sahf
xchg
addb
aad
jns
sub
xor
dec
enter
mov
lfence
ja
pop
adc
pop
test
jb
inc
mov
or
add
mov
popa
add
mov
dec
jns
and
jns
fwait
lahf
es
repz
and
inc
je
orl
xchg
stc
mov
inc
mov
jl
xchg
pop
enter
adc
insl
mov
out
nop
repz
testb
jp
popf
test
rorl
mov
sub
mov
les
shlb
push
pusha
sbb
ror
shll
icebp
xor
ss
pop
inc
shll
xor
mov
xchg
adc
lods
xlat
or
lret
outsb
push
xchg
or
adc
repz
clc
push
cmp
or
fmulp
adcb
inc
lea
fcmovnb
lret
mov
cmp
out
or
sub
out
cmp
jns
arpl
lods
xchg
or
mov
push
mov
dec
jl
or
je
cmpsl
mov
pop
ja
ljmp
lds
or
int
imul
ja
repz
lds
mov
out
mov
inc
push
test
xor
push
lcall
ror
mov
sahf
jnp
test
mov
inc
adc
adc
xchg
mov
mov
adcl
loop
adc
and
fdivl
pop
push
mov
subb
ficoms
pop
fsubl
xchg
dec
push
lds
add
subb
dec
or
arpl
int
push
sbb
das
inc
jg
adc
xchg
dec
pop
jl
aaa
pop
xchg
mov
adc
mov
rolb
mov
int3
std
mov
out
dec
lods
bound
popf
leave
or
out
mov
push
inc
push
fcomp
call
addr16
idivl
loopne
or
xchg
ret
and
sarl
in
jecxz
pop
cmpsb
sub
xor
cmp
mov
jb
insl
int3
clc
dec
push
push
pop
mov
push
clc
mov
or
xchg
sub
in
stos
test
popf
push
ss
cwtl
outsl
out
jb
pusha
cmp
inc
leave
ljmpw
jno
xchg
push
add
push
stos
shrl
pop
mov
lcall
and
in
xchg
cmp
pop
iret
cmp
add
mov
jecxz
loop
jbe
dec
cmp
mov
cs
sbbb
sub
mov
mov
lahf
out
or
jg
gs
cmp
lods
dec
stos
jb
inc
mov
add
in
or
sub
lock
test
hlt
add
mov
aam
fst
repz
mov
cld
push
popf
add
add
int
adc
jo
ds
iret
out
jno
int
push
adc
mov
sbb
imul
push
sub
adc
repnz
insl
jl
inc
idivl
out
inc
data16
imul
and
mov
xor
jbe
fdivrl
push
xor
inc
push
jbe
push
xchg
jnp
xor
and
sbb
xlat
push
cs
mov
xor
repz
in
or
inc
cli
ljmp
into
sub
addr16
mov
popf
xchg
mov
add
push
or
mov
addr16
lods
mov
sbb
push
popf
cmp
rorb
mov
and
ret
aam
dec
dec
addr16
mov
ficomps
mov
xlat
scas
fdivs
xchg
inc
jp
cwtl
insb
mov
call
dec
jbe
jge
sbb
push
add
clc
add
xlat
jno
xchg
hlt
mov
add
outsb
mov
sahf
inc
mov
lea
and
iret
xor
test
or
xchg
call
insl
aaa
fiaddl
imul
sahf
lahf
mov
and
ret
mov
sahf
cwtl
imul
dec
jns
mov
sbb
test
push
cmpsl
addb
jo
mov
dec
mov
push
xor
push
pop
xor
aam
push
xchg
sbb
ret
mov
repnz
testb
sahf
decl
push
mov
les
mov
push
xchg
mov
cltd
push
enter
xchg
ret
mov
lea
add
mov
xchg
xchg
sub
in
popl
or
scas
daa
xchg
outsb
rorb
mov
lea
sub
jp
inc
into
bound
xchg
xor
jg
mov
rorb
mov
sbb
xchg
lods
aas
movsl
imul
movsl
sbb
inc
clc
mov
jl
into
xchg
jns
ja
sbb
mov
movsb
int
pusha
rcll
mov
test
int
mov
sbb
es
and
cmp
xchg
mov
in
pop
shl
mov
add
fnsave
xchg
cli
xchg
inc
lret
into
icebp
xor
int
cmp
cld
jno
shrl
test
mov
addb
jns
add
fwait
ljmp
insl
and
mov
xchg
jp
and
jb
mov
mov
add
daa
cld
mov
and
mov
aad
int
pushf
cmpsl
or
dec
into
lret
mov
inc
addr16
mov
dec
into
mov
negb
inc
mov
aam
mov
push
inc
dec
pop
mov
xor
add
push
int
loopne
jbe
cwtl
imul
pusha
sarl
sub
sub
icebp
xchg
out
xchg
xor
cmp
jmp
xchg
adc
lds
pop
stos
mov
sub
addr16
icebp
xor
xor
push
xchg
dec
jp
je
push
xchg
daa
xor
ror
es
dec
push
ret
in
and
xchg
adc
mov
lea
xchg
fcmovne
loopne
push
sahf
push
into
pop
sahf
lret
fucom
lods
sub
lock
pusha
push
and
loop
push
jp
gs
arpl
xchg
mov
setno
dec
mov
cs
pop
sti
jns
out
test
aaa
notl
scas
shrb
ja
ja
push
rcr
hlt
je
add
pop
leave
push
inc
mov
dec
push
clc
aaa
jecxz
aas
call
push
jecxz
stos
cld
inc
inc
sbb
out
out
inc
rcl
adc
mov
andl
or
xchg
mov
or
lret
rcrb
cld
sbb
insl
jle
or
orb
mov
xchg
cwtl
addr16
push
fld
addr16
dec
aam
mov
mov
insb
sbb
leave
mov
mov
mov
xchg
mulb
cwtl
cmc
stos
imul
xor
sub
test
jae
xor
push
jmp
jns
ljmp
adc
ja
loopne
repnz
std
and
frstor
mov
int3
push
rclb
test
sbb
clc
into
pusha
push
add
dec
aaa
add
repnz
data16
fs
adc
call
test
movsl
xrelease
inc
cmp
leave
ror
xchg
mov
jecxz
add
hlt
mov
btr
cltd
cmp
xchg
jmp
js
mov
add
push
lcall
rolb
test
in
mov
mov
outsb
inc
cmp
push
sbb
push
mov
add
push
cmc
xchg
push
iret
pop
cltd
push
test
leave
shrl
loop
jns
shl
into
stos
enter
rcrb
jp
fs
daa
lret
dec
mov
loope
sub
pusha
adc
dec
inc
int3
jge
fcmovnbe
mov
stos
xchg
movsl
insl
je
mov
add
pop
mov
outsl
lret
or
pop
cld
xchg
add
mov
mov
lds
jae
in
push
inc
scas
nop
out
mov
and
mov
mov
lods
sbb
rclb
inc
inc
sar
and
and
xchg
adc
out
jae
or
int3
into
push
push
jg
xor
mov
iret
insb
sbb
mov
idivl
xchg
push
dec
addr16
movsl
gs
or
cmp
dec
shrb
xchg
xor
jmp
xchg
or
bound
test
leave
insl
or
out
cmpl
sahf
add
mov
dec
push
addr16
pop
rorl
sub
dec
push
dec
rorb
arpl
data16
sub
xchg
xchg
add
rcl
leave
cltd
jo
inc
addr16
xor
clc
lods
xor
dec
popa
popf
addr16
insl
aaa
add
xor
int3
mov
and
inc
lock
add
cmp
out
sarb
inc
push
mov
mov
iret
in
mov
and
outsl
or
btr
lcall
adc
dec
jl
int
lahf
push
bswap
sbb
je
data16
pusha
mov
xchg
mov
or
pop
imul
mov
xchg
daa
cld
mov
push
shll
jecxz
adc
lods
ficoms
cmp
test
gs
leave
inc
inc
mov
xchg
adc
mov
push
gs
jb
jb
ja
xlat
fwait
test
push
mov
jp
std
and
mov
or
cs
lods
or
test
pusha
add
lock
pop
sub
loop
xchg
pop
or
fsubrl
sub
xor
or
add
or
repnz
dec
pusha
jp
pop
ljmp
outsl
dec
jl
jns
outsb
icebp
pushl
cmp
fdivr
xchg
xor
jo
outsb
subb
pop
lcall
cltd
xor
cmp
out
pop
iret
cmp
mov
call
leave
jo
je
sbb
nop
jl
test
lcall
pop
cld
movsl
or
int3
std
sbb
mov
xchg
jnp
add
mov
push
mov
ss
xchg
in
dec
inc
add
daa
fdivrl
pop
mov
nop
mov
xor
mov
lahf
fsubrs
pop
adcb
andb
mov
fldcw
mov
cmp
mov
or
adc
or
iret
pop
push
jecxz
lret
pop
mov
xchg
stos
pop
cmc
and
stc
ret
or
aaa
cld
push
jae
pop
xor
pop
mov
inc
popa
sub
xchg
or
xor
aaa
mov
dec
pop
icebp
push
push
jge
sub
addr16
xor
cmp
mov
sbb
jp
inc
cmp
lahf
push
or
sub
mov
mov
pop
shlb
add
add
clc
gs
out
jmp
push
mov
mov
clc
sub
test
add
add
dec
xor
rcll
mov
fs
outsb
imul
inc
repnz
cmp
and
mov
adc
jg
xchg
mov
fldenv
mov
addr16
out
push
cmp
mov
adc
cmp
fnstsw
hlt
jbe
incl
and
mov
loope
xchg
ret
adc
cmp
addb
sbb
fwait
sbb
add
shrl
std
push
inc
shrb
add
inc
das
jecxz
stos
mov
xchg
lahf
add
std
int3
jns
movsb
push
lahf
xor
or
iret
cwtl
inc
mov
mov
lods
aad
movsb
addr16
lock
scas
add
cmp
push
jmp
xchg
xchg
cmp
aas
lods
push
dec
cli
shrl
sahf
jge
pop
addr16
mov
nop
cmp
dec
leave
mov
test
push
cmp
scas
jp
xchg
adc
push
ljmp
push
lahf
lret
xchg
cmpsl
push
fcomps
frstor
jne
jno
dec
xor
or
nop
or
test
inc
repnz
mov
push
mov
repz
je
push
out
loope
pop
loop
lcall
rcrl
or
xchg
bsr
sbb
ret
stos
mov
or
fwait
shlb
xchg
mov
sarb
dec
outsb
stc
dec
es
icebp
and
inc
xchg
out
iret
call
inc
or
mov
into
jmp
sbb
adc
fnsetpm(287
je
mov
lods
jbe
inc
fucomp
int
jge
inc
push
int
cmc
mov
mov
shrb
sbb
testl
xchg
sbb
loopew
scas
call
fldcw
stos
dec
aam
xchg
sbb
pop
mov
add
scas
cmp
test
jb
xchg
mov
je
fbstp
rorl
pusha
jb
pop
jae
aam
cmp
lahf
push
js
imul
inc
imul
sbb
gs
cli
nop
push
jae
imull
xor
scas
movsl
fisttpl
pop
repnz
jno
ret
hlt
push
or
rcrl
scas
lret
jno
mov
push
mov
filds
ret
addr16
add
mov
inc
add
jae
push
out
ds
mov
cmp
out
addr16
lods
call
in
test
js
add
dec
mov
roll
clc
cmpsb
fidivrs
adc
jb
push
fwait
stos
or
xor
mov
jnp
xlat
aas
imul
repz
fmuls
mov
mov
orb
nop
out
add
mov
repz
aad
mov
push
mov
hlt
in
out
cltd
push
mov
repnz
mov
xchg
stos
mov
pop
rorb
or
sarb
mov
mov
and
add
inc
mov
sbb
fcmovnu
test
or
jg
fnstsw
dec
ret
lahf
xchg
mov
call
fsubrl
out
adc
cmp
cmp
les
mov
xor
hlt
in
ss
xor
insl
sbb
xchg
es
xchg
mov
ss
pop
stos
dec
addb
and
es
rclb
xchg
cld
xchg
loopne
xor
xchg
inc
mov
pop
fbld
test
and
divb
aam
xchg
sbb
aam
shr
divb
and
or
sbb
jb
mov
fmuls
add
pusha
outsb
stos
adc
and
adc
pop
mov
orl
fldenv
movsl
icebp
or
jmp
ja
dec
jb
sbb
imul
or
scas
cli
ficomps
mov
jge
fisubs
mov
push
test
sub
mov
into
xchg
addr16
orb
jo
mov
or
add
dec
movsb
jp
ret
xor
jns
xchg
mov
rcrb
add
inc
lretw
pop
test
push
sub
fidivrl
sub
sar
mov
pusha
push
les
push
sarl
inc
in
incb
mov
and
pop
mov
in
push
rolb
sub
push
and
rcrl
or
mov
loop
mul
add
sahf
ja
out
imul
inc
lods
push
mov
scas
push
scas
lods
out
push
lahf
movlps
jnp
sub
adc
in
mov
inc
sub
ret
icebp
mov
lods
jns
fisttpl
push
xor
popf
shlb
pushf
int3
es
nop
ds
and
inc
loop
mov
pop
loop
in
mov
ret
xchg
outsb
ficoml
push
loopne
jbe
sbb
aad
inc
mov
adc
jbe
out
ljmp
aad
loopne
movsl
jbe
and
mov
rolb
repnz
mov
dec
cmp
insl
push
xchg
or
jp
pop
out
dec
push
pop
pop
push
call
fcmove
xor
cmp
mov
xchg
lea
jbe
notb
shll
pop
mov
fcoml
mov
or
xchg
adc
xchg
loop
mov
jmp
cmp
lahf
testb
loopne
jae
imul
rolb
movzbl
or
pop
aaa
rcrb
add
inc
gs
xchg
pop
cld
or
sahf
fs
pop
add
lods
repz
repz
shll
std
enter
mov
dec
mov
ss
cs
hlt
mov
scas
push
mov
sbb
paddq
test
inc
jecxz
mov
mov
in
mov
sti
fildl
mov
test
mov
cmpsb
cmp
add
dec
jb
scas
enter
xchg
int
sub
mov
add
pop
mulb
inc
adc
sbb
xchg
rcrb
push
cmpsb
xor
add
out
xchg
mov
nop
mov
movsb
xchg
xchg
ret
fisubs
pop
fstl
hlt
je
and
mov
mov
ja
jp
or
and
cld
iret
jl
popw
into
hlt
cli
push
lcall
push
mov
mov
mov
cmpsb
adc
cmp
push
pop
lds
inc
mov
imul
inc
sti
out
hlt
mov
mov
out
cli
push
bound
clc
and
and
add
jbe
pushf
imul
sbb
popf
lods
pop
add
loop
std
test
insb
loope
mov
add
imul
movsl
bound
imul
xor
loope
inc
or
dec
ja
hlt
mov
mov
cwtl
das
inc
adc
loope
or
andb
sbb
pop
push
mov
jl
xor
lahf
outsb
nop
mov
shlb
bound
lcall
int
mov
out
dec
xchg
data16
and
leave
mov
rol
out
mov
pushf
mov
leave
pop
repnz
popa
ss
aad
pop
cmp
fwait
cmpsb
jo
dec
and
pushf
das
add
ljmp
es
push
adcb
and
jbe
or
cmpsb
add
ljmp
pushf
out
insb
sbb
add
mov
adc
jns
xchg
and
jno
pop
test
andl
insb
and
xor
xor
lret
adc
push
mov
lods
in
add
mov
out
loopne
pusha
fdivrl
shlb
jecxz
cli
in
ret
lahf
cli
dec
lahf
popa
or
mov
and
or
or
sbb
sbb
jle
test
mov
push
push
daa
adc
lea
ds
cmp
in
mov
lret
and
xchg
leave
inc
adc
cld
xchg
add
mov
lds
mov
add
nop
pop
insb
nop
mov
dec
nop
popf
test
xor
xchg
cwtd
mov
lcallw
icebp
lock
ja
aaa
pop
pop
mov
pusha
into
les
cmp
fwait
in
imul
nop
xor
cs
addl
out
cmp
shll
hlt
pop
imul
inc
push
lret
xor
jns
cmpsl
jo
pop
jmp
pop
scas
pop
sub
xchg
rorl
fdivr
or
push
loopne
scas
setno
mov
popf
cwtl
xchg
pop
scas
out
mov
into
mov
test
cmpsb
addr16
sbb
sbb
add
pop
push
rorb
bound
mov
gs
cwtl
ret
test
addr16
mov
or
in
dec
das
xor
jp
and
imul
adc
movsl
aad
sbb
cmp
dec
addr16
gs
push
movsb
and
and
or
mov
insb
ljmp
jns
dec
jmp
stos
mov
mov
add
addr16
mov
xchg
call
lcall
clts
fstpt
mov
push
mov
push
jp
and
mov
aam
push
jb
xchg
mov
scas
outsb
adc
mov
xchg
dec
std
sbb
call
mov
test
dec
jg
push
bound
iret
pop
mov
sarl
mov
lahf
dec
jg
cli
xchg
icebp
pop
inc
or
daa
fucomi
rolb
ljmp
insb
mov
popa
cmp
inc
xchg
pop
pop
push
mov
dec
jp
dec
dec
test
dec
xor
fwait
imul
leave
scas
inc
sbb
push
xchg
or
aam
mov
movsb
loop
or
push
pop
push
cmpsb
les
or
mov
enter
inc
xchg
mov
leave
cs
mov
out
dec
clc
shll
aad
and
lret
sub
xor
add
lahf
add
xchg
add
out
lahf
stos
loop
mov
dec
test
fsubs
xlat
inc
addr16
sub
dec
and
mov
mov
rorb
popa
jp
jno
fisttpll
lcall
pop
orl
loopne
jo
imul
cmp
out
mov
das
xor
pop
ror
sbb
iret
adc
mov
add
jns
and
roll
push
xor
jbe
mov
mov
jl
enter
push
push
push
adc
mov
repz
xchg
dec
mov
xlat
loopne
jns
pop
loop
dec
mov
inc
inc
neg
jg
icebp
nop
push
sbbb
mov
aad
sub
rolb
pop
int
xchg
popf
mov
repz
leave
mov
xchg
jo
push
bound
loope
outsl
imul
enter
dec
push
shrl
mov
leave
not
push
add
lods
fldt
push
push
rcr
pop
addr16
shl
mov
jecxz
inc
dec
leave
mov
dec
addr16
ss
repz
loop
pop
inc
stos
jne
push
inc
fists
xchg
and
mov
jg
cmp
pop
fwait
jnp
and
repnz
xlat
inc
fistps
sub
push
mov
xchg
iret
and
fsubs
jae
or
mov
mov
sbb
add
cli
xchg
insb
xchg
into
and
xchg
cltd
test
ret
xchg
xlat
sub
mov
in
jb
arpl
faddl
sbb
mov
xchg
lret
xor
mov
filds
mov
fldcw
ret
cmp
scas
or
aas
mov
xchg
addr16
pushf
push
and
push
jecxz
lcall
cld
xchg
jp
int3
fimull
jecxz
cmp
out
rolb
fs
cltd
pop
xorl
test
mov
test
and
or
fwait
mov
cmpsl
mov
into
imul
xchg
incb
cs
out
pop
adc
xor
out
sbbl
popf
outsb
xor
jbe
sbb
inc
xor
mov
mov
xchg
roll
addr16
repnz
push
xchg
sub
fistps
pop
lcall
in
mov
sarl
sub
pop
mov
and
movsb
xor
or
pop
call
xor
aad
or
dec
addl
ficoms
test
aam
sub
stc
leave
mov
sahf
and
adc
or
cmpsl
mov
mov
movsb
push
xchg
pop
dec
inc
add
inc
cmp
jb
and
fisttpll
aas
addl
or
sub
movsl
ror
cmp
mov
mov
mov
imul
cld
hlt
jae
int
outsb
loope
jo
sbb
adcl
push
je
rol
sbb
mov
addr16
insb
cmp
add
pop
cmc
sbb
leave
out
pop
mov
xor
adc
iret
xchg
mov
lock
sbb
es
xlat
fsubrl
fmul
sbb
inc
and
dec
mov
cli
shrb
mov
test
aaa
mov
inc
aad
cld
out
jo
or
jmp
insb
cs
fisubl
mov
cmp
push
xchg
repz
mov
mov
loop
mov
imul
rclb
out
rcrl
test
mov
test
sbb
mov
xchg
shrb
xor
stos
mov
mov
aaa
sbb
rclb
cmpsb
rcll
sbb
movsb
aad
sub
aam
xchg
cmpsb
addr16
mov
push
or
js
or
roll
data16
and
pop
lret
negl
dec
scas
fbstp
xchg
mov
lds
pop
loop
imul
pushf
stos
sub
or
add
and
inc
xchg
sbb
jns
pop
and
adcb
xchg
or
nop
imul
adc
scas
fsubl
mov
fldt
addr16
cltd
mov
mov
and
jecxz
scas
decl
pop
push
out
pop
lods
xchg
mov
inc
xchg
dec
mov
mov
fcoml
jno
add
adcb
aad
pop
ja
mov
scas
xchg
inc
lods
push
ret
or
xchg
jbe
inc
jp
test
xchg
ficompl
pop
shrl
ror
dec
push
stos
jbe
or
jbe
and
out
inc
mov
push
and
or
cmc
lods
pop
xchg
cli
pop
pop
mov
scas
xor
dec
leave
mov
inc
lods
scas
xchg
aam
mov
xlat
jge
fidivs
cmpsb
lcall
lods
pop
dec
lahf
push
mov
in
dec
sbb
xchg
jp
sbb
pop
fwait
out
add
fisubs
add
add
dec
sub
daa
lcall
loope
inc
dec
jns
data16
iret
dec
mov
outsl
pop
mov
add
fsubrp
xor
int
and
popf
test
mov
inc
sbb
mov
movsb
fnstenv
lahf
outsb
mov
adc
jne
orps
mov
aas
in
dec
and
rcrb
inc
and
cmovbe
data16
sbb
out
mov
iret
aad
aam
and
repnz
cmpsl
and
and
xchg
inc
xchg
mov
sbb
pop
out
addr16
dec
lea
imul
outsb
xchg
add
push
mov
cld
jmp
add
add
incl
popa
cld
pop
lds
out
inc
lds
das
mov
push
inc
jl
jecxz
xchg
add
add
in
and
cmp
data16
adc
mov
sub
cmc
lret
rcl
imul
inc
inc
lret
mov
test
test
std
pop
xchg
or
movsb
add
fistpll
mov
add
in
xor
orb
and
loop
and
jl
mov
dec
xor
cmp
fldcw
push
jle
fdivs
imul
jne
push
repnz
aas
or
mov
add
loop
dec
add
insb
push
andb
xchg
adc
ds
ret
or
dec
add
mov
popf
pusha
cmc
xchg
add
outsl
add
daa
scas
pusha
or
call
ljmp
jmp
je
popf
movsb
in
movsb
mov
xchg
mov
sub
rorl
or
clc
cmpsb
data16
stos
ds
arpl
in
mov
lret
outsb
sub
cmp
mov
cwtl
mov
xchg
lods
shrb
sbb
je
hlt
xchg
xchg
imul
test
dec
jg
into
fcomps
xchg
jecxz
mov
pop
inc
adc
mov
xchg
shlb
adc
test
mov
mov
mov
jp
hlt
sbb
mov
pop
xor
fldt
xchg
outsb
repnz
daa
jb
cmp
sub
lcall
in
imul
add
rcrb
mov
pop
xor
lods
fucomi
rolb
xchg
xchg
push
loop
add
and
xchg
lcall
into
int
xor
sarb
push
mov
in
pop
stc
out
push
jnp
cwtl
mov
lret
aad
pop
addl
shr
std
outsb
je
sarb
repnz
rcll
out
xor
cli
in
push
shrl
push
xlat
sub
out
out
push
cli
lea
jmp
movsb
sub
in
out
out
add
lock
mov
jge
dec
mov
cmp
lods
icebp
shl
popf
add
mov
cmp
mov
orb
xor
jl
cmp
clc
jl
cmp
sarb
jno
fmuls
pop
mov
xlat
nop
test
mov
loop,pn
mov
jns
mov
pop
addr16
sub
fwait
pop
mov
aas
imul
ljmp
or
pop
jp
int
ss
adc
nop
jnp
movsl
inc
push
xor
pop
int3
repz
mov
test
cmp
aas
and
add
ss
add
jnp
lea
lods
push
in
mov
iret
ficomps
addr16
xchg
call
loop
inc
cld
mov
adc
adc
mov
xor
leave
push
jb
test
xlat
xchg
push
in
movsl
mov
xchg
dec
loope
lods
rolb
jb
push
test
cli
jnp
sbb
cmp
or
dec
jge
inc
jg
jl
imul
mov
jl
lods
sub
sbb
ror
xchg
pop
adc
and
setg
push
int
out
int3
repnz
add
mov
mov
push
or
adc
mov
add
insl
pop
insb
jno
xor
sub
sub
push
xchg
push
lahf
test
stos
jl
mov
xchg
sbb
or
add
dec
jl
es
jo
and
aaa
clc
add
mov
clc
ss
mov
add
mov
addr16
pop
div
jo
xchg
fistl
and
mov
movsl
add
pop
jmp
add
fwait
pop
xchg
push
jne
leave
mov
cli
es
cwtl
or
loop,pn
insb
call
xor
dec
sbb
leave
sub
rcll
cltd
add
aad
cltd
or
in
xor
fists
frstor
into
stos
mov
jns
or
xor
sbb
or
mov
dec
xor
jb
mov
mov
popa
lods
fdivrs
pop
lsl
mov
jo
mov
mov
add
jbe
sbb
mov
in
or
aaa
cmp
fs
pushf
ja
ja
add
or
sbb
sti
cmp
push
and
orl
cmpsl
cmp
mov
outsl
ret
mov
cmp
jecxz
mov
add
and
ss
cmpsl
addr16
js
jmp
mov
pop
fsubrs
ds
cmp
stc
jge
std
sbb
roll
xchg
mov
mov
jecxz
jb
fs
bound
pop
add
inc
pop
outsb
fs
dec
mov
aad
pop
mov
cmpsl
addr16
insb
add
icebp
mov
scas
out
mov
aas
sar
test
adc
xchg
mov
add
push
popf
or
adc
mov
lret
hlt
rol
sahf
lods
xchg
mov
aam
lcall
outsb
mov
stos
adc
jno
jb
and
arpl
mov
int
in
out
subb
int3
outsl
or
aad
dec
pop
nop
imul
push
fdivs
imul
xchg
vandnps
and
inc
and
les
out
or
sbb
test
cmpsw
orl
add
repnz
test
mov
dec
fidivrs
mov
xchg
xchg
sahf
mov
sbb
subb
pop
repz
sbbl
fwait
ror
mov
dec
ret
jnp
les
or
arpl
cwtl
addr16
and
jbe
ret
mov
xchg
movsb
xchg
and
int
and
pop
mov
or
lods
aam
stos
movsl
push
xchg
into
mov
push
stos
pop
mov
lds
inc
sti
mov
mov
adc
cltd
mov
push
daa
adc
sub
mov
push
roll
lods
bound
ja
movsb
mov
mov
cmp
lock
stos
xchg
nop
mov
fidivs
add
cmp
xchg
lds
cmp
xchg
sub
fnstcw
adc
dec
es
or
and
mov
push
sub
iret
test
ja
mov
imul
adc
lods
adc
sbb
jae
xor
push
stos
jge
xchg
imul
lods
mov
imul
mov
fdivrl
sbb
and
jmp
inc
jg
daa
pusha
xchg
mov
lds
mov
mov
xor
add
dec
cmpb
xchg
sarl
sbb
bound
add
push
cmpsl
sub
scas
repz
push
lcall
mov
pop
pusha
std
sub
lahf
or
cmpsb
mov
lcall
cltd
xor
xchg
movsl
repz
fistps
movsb
mov
mov
mov
sub
mov
out
inc
dec
into
insb
push
push
insl
data16
int3
jns
sbb
int3
xor
inc
idivb
jbe
cwtl
cmpsl
add
adc
arpl
imulb
lods
stc
jo
setno
sub
xchg
rorb
cmp
xorl
push
jecxz
test
test
xor
sbbl
rcr
push
jge
lcall
ljmp
jg
dec
push
xlat
mov
addr16
popl
jbe
aam
mov
and
test
push
pop
add
hlt
aaa
int
cmp
add
outsl
or
scas
jns
rclb
lahf
mov
ret
mov
mov
adc
adc
adc
inc
dec
mov
adc
test
jmp
pop
repnz
mov
cmp
mov
add
sub
mov
jl
dec
push
mov
cld
mov
movsl
insl
leave
jb
sub
call
pop
mov
inc
add
xor
xor
mov
in
cmp
in
mov
push
lods
addr16
and
mov
mov
roll
sbb
addr16
lods
sbb
pusha
pop
cmc
push
in
test
xor
jbe
lock
mov
shrl
stos
addr16
lret
inc
push
pop
dec
loopne
sbb
mov
inc
or
pop
ss
push
or
mov
mov
movsb
dec
push
fnstcw
push
add
aam
bound
dec
hlt
leave
andl
jge
xchg
in
mov
dec
popf
mov
es
clc
mov
mov
dec
into
js
push
nop
mov
jb
incl
dec
push
rcrb
push
scas
dec
rorl
pop
dec
jo
dec
inc
push
outsl
push
insl
cltd
xchg
push
lret
xchg
outsb
jmp
sub
add
test
rcr
sbb
imul
cmp
adc
dec
in
mov
or
xchg
out
mull
imul
scas
push
jo
shrd
setno
inc
xchg
xor
scas
sub
jp
or
adc
fldcw
inc
lret
out
and
mov
jnp
mov
and
lret
nop
ret
out
jmp
jb
sub
xor
aam
outsb
int
mov
sub
into
pop
mov
mov
data16
addr16
pop
outsl
mov
xchg
inc
out
cltd
and
sahf
jl
or
ret
lahf
aas
mov
mov
xchg
shll
mov
jo
jg
ret
in
clc
xchg
fwait
cmpsl
or
push
mov
dec
icebp
sbbb
notb
pop
add
pop
cmp
add
lock
mov
xchg
ret
xchg
sub
in
mov
mov
addr16
outsb
addr16
dec
loop
mov
mov
xchg
add
xor
ss
sub
xchg
mov
push
mov
or
clc
push
inc
nop
inc
push
push
orb
xchg
sub
xchg
mov
push
jg
leave
out
fisttpl
ja
jnp
or
lea
pushf
repz
ror
outsl
mov
pusha
lcall
dec
fists
daa
lea
test
mov
addr16
lcall
cmp
stos
iret
mov
sbb
or
test
xor
push
icebp
cwtl
out
cmp
mov
adc
lcall
popf
movsl
into
pop
jns
data16
push
lods
jb
flds
fcmovb
inc
or
cmp
lret
leave
jp
in
mov
cli
leave
enter
pop
nop
sub
cmpsb
push
shlb
nop
sahf
or
sub
cli
xchg
fstpl
lret
jge
std
mov
testl
push
dec
loopne
shl
clc
xchg
fisttpl
pusha
or
in
test
xchg
mov
jns
imul
push
rorl
rorb
jb
dec
and
sub
sub
pop
xor
xchg
repnz
repz
test
dec
popf
push
faddl
mov
pop
mov
test
stc
sahf
push
dec
mov
push
mov
or
icebp
push
xchg
push
shl
add
or
and
xchg
or
xor
lods
ja
fcoml
popa
fsubrl
outsb
pusha
fs
fidivrl
loop
push
into
stos
mov
cmpsl
pop
adc
xor
sbb
sbb
lods
jecxz
pop
mov
mov
or
popw
push
les
icebp
dec
push
push
cmp
mov
test
push
aad
cmp
push
insb
adc
jl
inc
sub
adc
pop
iret
sbb
add
daa
adc
pop
jge
stc
jmp
push
aad
je
popa
repz
inc
or
jo
or
mov
lock
add
addr16
or
and
cld
xchg
data16
and
xor
movsb
mov
mov
data16
call
stos
fisttps
cmp
push
inc
out
int
sub
cli
sti
cmpl
mov
in
imulb
les
sbb
dec
mov
cmp
out
mov
push
lock
push
leave
inc
pop
sahf
data16
bound
push
sub
jl
outsb
iret
shrb
xor
mov
cmpsl
adc
repnz
inc
pop
data16
aam
enter
add
push
bsr
ror
ss
ret
addr16
push
push
adc
imul
and
dec
rol
mov
sbb
call
jecxz
imul
pop
fldl
mov
dec
scas
add
ret
sbbl
xchg
xchg
pop
pushf
mov
stos
mov
and
test
add
mov
jp
mov
nop
mov
loope
or
cld
aam
out
and
pop
xchg
sahf
push
mov
push
adcb
add
mov
cmpsl
jg
mov
loopne
loop
lods
and
or
xchg
test
fmull
mov
mov
push
or
cli
imul
mov
stos
clc
push
aas
lods
jno
inc
rcrb
pop
push
arpl
and
inc
bound
mov
mov
cmp
lods
mov
adc
cwtl
jns
sbb
es
into
ljmp
xlat
es
sbb
mov
mov
ljmp
cld
sbb
pop
xchg
pusha
mov
mov
imul
xchg
scas
std
jne
add
test
push
fdivl
outsb
cli
lock
jge
shlb
push
cmpsl
push
jp
pop
xchg
xor
adc
addr16
lods
out
int3
cmp
sbb
push
fcoml
les
xchg
adc
mov
addb
pushf
jp
addr16
mov
in
aam
sub
nop
sbb
ja
scas
in
cld
xchg
or
sbb
lea
shll
mov
pop
mov
out
xchg
or
movsb
xchg
bnd
cmp
inc
out
push
push
mov
sahf
sarl
adc
movsb
and
mov
sub
push
sub
mov
int3
imul
inc
cltd
imul
inc
ljmp
and
ja
xchg
jne
adc
ret
jp
inc
dec
xchg
sub
in
add
xchg
mov
test
pop
test
ror
jp
iret
mov
pop
mov
fcmovnbe
push
lahf
pushl
mov
and
mov
es
mov
adcl
jae
lea
pop
xchg
mov
fwait
inc
add
sahf
aam
out
mov
ds
mov
xchg
mov
mov
into
cmpsl
mov
fidivs
movsb
daa
movsl
xchg
js
sbb
cwtl
cli
mov
mov
scas
fstl
mov
ffreep
or
test
ret
push
xchg
andb
and
xchg
adc
insb
jecxz
cmp
push
lahf
addr16
enter
jbe
add
lcall
andl
xor
hlt
cmp
push
andb
scas
stc
vphaddubd
es
xorb
mov
out
mov
xchg
ret
aam
xchg
clc
mov
mov
lahf
push
arpl
xchg
inc
xchg
xor
jbe
fmuls
sub
cmpsb
xchg
mov
sahf
mov
mov
push
add
stos
and
shl
lcall
aam
lcall
mov
mov
push
adcb
jo
mov
and
out
dec
or
xor
inc
fstps
mov
mov
inc
std
loop
lcall
adc
das
repz
jle
mov
repnz
sbb
mov
pushf
mov
popf
ljmp
mov
pop
cmpsb
sahf
lea
ja
cltd
cmpb
les
cmp
in
lock
iret
sub
addr16
lahf
scas
and
js
imul
xchg
repnz
je
repz
and
int
jl
or
xorb
enter
and
sbb
mov
jbe
imul
xor
imul
xor
repnz
or
sbb
enter
ljmp
mov
cmp
andl
leave
enter
or
rcrb
addb
or
aad
xor
test
jnp
addr16
inc
mov
sub
repnz
pushf
jp
js
push
mov
sub
mov
scas
and
mov
pop
adc
mov
loop
movsl
pop
in
lea
bound
insb
and
push
imul
mov
shrl
mov
fcmovne
mov
dec
cmpsl
xchg
aam
mov
xor
test
fmuls
test
imul
test
add
sbbb
cmp
call
lahf
cmp
mov
push
sbbb
mov
fwait
call
dec
iret
mov
sahf
addr16
adc
jns
std
mov
sbb
orb
mov
add
and
mov
fst
cmp
daa
mov
cmp
mov
repnz
sub
dec
nop
or
adc
stc
xchg
jp
or
je
negb
jp
pusha
add
jbe
out
sbb
xchg
sahf
pop
lcall
rol
mov
jg
cld
rclb
pop
test
inc
or
mov
clc
sbb
jg
cmp
pop
inc
fwait
cmp
or
mov
jcxz
rorb
xchg
data16
movsb
mov
mov
shll
or
mov
addr16
pop
std
ljmp
inc
and
movsb
pop
xchg
fcmovbe
stc
jno
or
shll
xor
sbb
sbb
lea
cmpsb
stos
into
lret
jle
or
push
pop
rcll
sub
test
icebp
int
mov
shll
ds
enter
cld
xchg
adc
movsl
js
les
orb
clc
movl
fidivrs
int3
jnp
cmc
pop
cld
dec
icebp
sbb
jmp
lahf
mov
lods
js
nop
bound
sahf
inc
mov
xorb
stos
mov
jb
aad
popa
lret
loop
jmp
push
add
fldenv
xchg
mov
mov
addr16
add
cli
xchg
scas
icebp
rolb
jnp
inc
pop
test
jmp
fimull
decl
daa
mov
xor
out
add
cs
aam
lahf
cmp
jno
enter
pop
cmp
loopne
cmc
ja
mov
movsb
adcl
mov
ljmp
xor
push
dec
jmp
or
and
loopne
mov
mov
lahf
jbe
pop
adc
repnz
dec
out
aam
dec
and
pop
add
test
movsl
sti
lea
pop
adc
cmp
mov
sti
aaa
punpckhdq
mov
les
rcr
clc
sub
mov
aad
rol
sub
cld
je
lret
shlb
inc
xchg
cmp
repnz
rcrb
hlt
bnd
loopne
xchg
addr16
mov
xchg
push
lea
shrl
pop
pop
hlt
sbbb
push
and
addr16
add
xchg
repnz
outsb
repz
ret
in
bound
push
scas
aam
leave
cli
sahf
xor
jo
pushf
or
call
or
lea
and
nop
pop
les
push
pop
jmp
push
icebp
movsb
push
push
add
mov
cltd
mov
add
loop
jo
daa
clc
or
jb
push
xchg
jbe
movsl
push
in
mov
jnp
nop
icebp
loopne
fwait
rclb
in
fmul
push
mov
je
mov
jb
push
xchg
iret
push
mov
int3
add
and
cmp
xchg
sub
jl
inc
repnz
addr16
arpl
das
pop
sbbb
sbb
ret
mov
push
mov
popf
mov
loop
test
mov
pop
repz
into
les
pusha
and
cmp
mov
add
add
or
in
or
mov
push
cmp
in
pushf
and
fs
xor
mov
test
mov
jns
mov
pushl
stos
test
xlat
xchg
lret
cmp
adc
test
inc
cwtl
shr
sub
jle
inc
hlt
jmp
jb
add
pop
or
js
daa
inc
mov
inc
xchg
scas
inc
mov
fstp
mov
mov
cmpsl
jle
lret
and
mov
out
sahf
flds
cmp
clc
xor
stc
mov
mov
test
or
into
or
leave
jbe
adc
mov
cmp
mov
sub
scas
ljmp
sbb
call
movsl
jecxz
xchg
add
xor
movsb
cmp
out
movsb
aad
xor
fstpt
inc
push
cmpsl
push
mov
xor
and
rolb
add
in
mov
test
in
xchg
les
xchg
imulb
lret
push
sub
dec
dec
sbb
jg
mov
stc
lods
and
fisubrl
aaa
mov
cmpsb
pop
push
mov
fistl
fimull
dec
sbb
fdivr
imull
testl
imul
jo
sub
aad
outsl
xchg
sbb
jns
sub
in
in
mov
jae
xor
subl
out
jmp
cld
jno
mov
xchg
xchg
pop
fmulp
popf
or
xchg
imul
fdivr
movsb
fidivs
les
mov
sub
pushf
faddl
nop
jno
fsubs
ret
lahf
inc
rep
sti
and
cmpsl
xlat
aad
loopne
loopne
sub
lds
sti
repnz
add
maskmovq
notl
and
and
inc
jns
enter
shrl
daa
ss
push
mov
mov
mov
mov
loop
cmp
sbb
push
xchg
push
adc
std
push
scas
stc
lea
fcmovnb
ja
push
mov
lcall
mov
cld
xor
mov
xchg
add
jnp
retw
xlat
cld
daa
lods
loopne
sbb
inc
or
shr
and
in
push
add
test
or
inc
and
sbb
pop
fadd
ljmp
jmp
sbb
push
pop
lret
leave
or
std
icebp
movsl
stc
bound
fs
push
sub
mov
les
out
jns
lds
pop
mov
out
mov
je
dec
dec
inc
cld
in
loop
insb
popa
mov
loop
in
addr16
arpl
mov
enter
stc
pop
les
dec
in
cltd
mov
popf
repnz
dec
lea
insb
pop
mov
xchg
popf
xchg
pop
xchg
xchg
outsb
inc
adc
xchg
dec
data16
rcrl
mov
adc
addr16
mov
lea
bound
scas
jns
mov
aas
add
popa
adc
mov
push
push
xor
lods
xchg
gs
push
lods
sbb
push
xchg
mov
rorb
inc
adc
push
fdivrl
dec
popa
fstp
lahf
sti
cs
ljmp
ja
mov
xchg
inc
andb
shll
xchg
xchg
imul
push
out
mov
push
in
aaa
xor
mov
and
mov
cmp
xchg
addr16
mov
cmp
mov
sub
ss
mov
scas
sub
jns
and
sub
sub
jae
std
rcl
gs
fldcw
adc
stc
sahf
imul
and
xchg
outsb
xchg
jl
pop
loop
cs
sub
add
cmp
into
or
lea
lods
mov
mov
scas
addr16
pop
test
shll
cmp
xor
sahf
xchg
es
mov
add
lods
jnp
lahf
mov
popf
or
mov
cmp
inc
popf
sti
loopne
into
xor
mov
insl
lcall
negb
icebp
push
fldt
cld
pop
pop
and
cld
fstpl
pop
test
std
icebp
xchg
mov
or
outsl
mov
or
add
mov
fimuls
repnz
adc
and
std
pop
xor
ds
in
adc
push
mov
not
aam
jne
dec
dec
lea
inc
cmc
andb
mul
lea
decb
and
add
push
lret
or
pop
xchg
outsl
pop
leave
in
mov
arpl
inc
arpl
test
cmp
jl
aas
and
movsb
cmp
and
xchg
xor
lods
cmc
jle
mov
aam
rcrl
lods
addb
aas
test
xchg
sti
outsb
push
pop
roll
sbbb
std
mov
sbb
lret
cmpsl
mov
sub
mov
cmpsb
add
adc
jno
shll
aad
cmpsb
xor
rcrb
fbld
or
or
pushf
dec
lret
aam
out
mov
cli
xchg
push
sbb
cld
jo
and
shrb
hlt
rol
ret
push
or
inc
bound
cmp
test
aad
ss
cmp
or
pop
hlt
int3
js
hlt
sub
gs
jmp
fimull
mov
push
add
and
push
jl
xchg
or
push
xor
out
out
mov
out
mov
xchg
insl
das
push
push
add
or
lahf
push
por
inc
add
or
lahf
xchg
lcall
sub
fistpll
std
cs
inc
xchg
movsb
daa
scas
pop
imul
loopne
mov
jp
mov
add
jmp
dec
jp
pop
push
pop
and
addb
xchg
andb
fimull
out
mov
lahf
insl
movsb
mov
cwtl
xchg
addr16
popf
pop
aas
push
pop
repnz
mov
cmp
mov
add
pop
ret
nop
nop
jnp
xorb
mov
sub
mov
fwait
jg
repnz
clc
pusha
loop
outsb
mov
pop
sti
xchg
repz
or
mov
adc
test
andb
cmpsl
test
adc
inc
sbb
cmp
pop
sub
pusha
mov
pushf
loopne
mov
xor
mov
jp
aad
sbb
mov
repnz
fiaddl
scas
dec
cmp
inc
nop
loopne
jnp
xchg
mov
and
in
jl
cmpsl
int3
push
push
sub
test
lcall
adcl
insb
and
mov
repnz
jo
fwait
call
incl
cwtl
mov
mov
out
loopne
push
data16
ret
jb
adc
jl
lods
or
mov
js
cmp
adc
and
add
cli
stos
rolb
orl
inc
scas
adc
mov
xchg
pmulhuw
popf
addl
paddsb
aam
cs
jmp
or
push
ljmp
test
cmpl
and
sub
dec
jmp
mov
inc
fwait
xchg
addr16
call
loop
sbb
adc
lods
mov
call
sti
or
jp
fistpl
out
xchg
cli
inc
movsl
iret
pop
in
mov
and
popf
lret
push
cmc
xchg
adcb
add
inc
cmp
test
js
cmc
xchg
sbb
lret
ja
pushf
push
repz
loop
pushf
mov
insl
mov
xlat
fsubrl
jnp
pop
xchg
add
sbb
outsb
incl
sub
mov
das
dec
lea
inc
iret
push
mov
mov
xchg
jmp
cmpsl
mov
dec
sbb
sub
ss
repz
lcall
stos
push
mov
incb
sbb
add
mov
fiadds
mov
fimuls
jae
daa
or
sub
push
in
les
cmp
jne
adc
cmc
popf
sbb
mov
dec
xor
jp
and
mov
jecxz
jge
push
fcoml
addb
cmp
sbb
movsl
push
lret
and
xchg
rorl
fs
fbstp
vmovaps
test
add
addr16
and
repz
dec
out
lahf
lret
inc
add
mov
and
rcrb
fdivs
xchg
mov
loope
inc
adc
add
fs
in
pop
gs
stos
rolb
lret
out
xchg
ror
movsl
std
scas
and
jb
movsl
dec
jns
sbb
andb
mov
or
outsl
fwait
sub
fwait
aam
shll
lea
imul
xchg
ljmp
repnz
stc
js
jecxz
test
ja
nop
ret
fnstenv
jns
mov
dec
lock
mov
sarl
jo
pop
cwtl
add
mov
rolb
je
mov
pusha
rorb
mov
jg
cmp
adc
xchg
ljmp
inc
sbb
das
lods
into
out
jp
fidivrl
testl
mov
pop
int3
mov
xchg
xchg
addr16
or
mov
in
pop
rorb
ljmp
add
mov
in
stc
cmp
jp
pop
dec
xchg
push
jo
mov
mov
xchg
adc
dec
xchg
jp
jmp
xchg
test
xchg
std
mov
out
mov
in
fisubl
push
pop
pop
sbb
lcall
mov
aad
or
popa
jle
mov
mov
ret
pushf
or
push
mov
hlt
lea
mov
fwait
add
xchg
mov
int
pop
aas
fimull
dec
mov
mov
xchg
or
pushf
mov
pop
movl
jp
movsl
inc
pop
imull
mov
mov
mov
mov
fisubrl
adc
cmp
cmc
negb
xchg
dec
mov
and
mov
mov
addr16
icebp
push
ja
loope
xchg
sub
add
mov
fmull
loope
xchg
cmp
jmp
lea
sub
xchg
data16
cmc
nop
call
pop
sbb
sarb
nop
aad
mov
into
mov
or
aas
test
mov
dec
sbb
test
outsl
les
cltd
mov
sub
scas
data16
clc
mov
push
ss
mov
fcoml
fwait
lret
jbe
cltd
pop
jp
int3
mov
adc
jbe
mov
pushf
xchg
cmc
add
into
aad
scas
push
int3
shll
cltd
mov
sbb
shll
push
sarl
sarb
mov
shlb
mov
xchg
fstpl
lret
xchg
mov
clc
adc
mov
sbb
ss
fisttpl
push
imul
jbe
push
mov
sub
pusha
fisttps
push
jp
mov
mov
mov
lahf
ja
lcall
fbstp
mov
cmp
jnp
jl
mov
les
ret
icebp
ds
in
ds
ret
or
adc
cld
loope
sbb
push
mov
dec
mov
xchg
mov
mov
and
sub
scas
dec
inc
daa
leave
loope
repnz
push
lea
leave
fcmove
pop
lret
xchg
xchg
hlt
xchg
ret
xor
pop
test
addl
cmpsl
and
fidivrl
adcl
push
jmp
stos
adcl
data16
mov
jns
call
xor
mov
imul
std
shr
ss
xlat
add
push
xchg
or
mov
adc
test
in
enter
jp
pop
xchg
into
sahf
loop
jbe
jp
or
xchg
into
in
sbb
cmp
cmp
jns
loope
lock
es
out
scas
lea
imul
push
and
call
fs
fs
and
inc
loopne
push
addl
cmp
cmpsb
ss
mov
aas
loop
in
movb
and
andb
enter
adc
and
mov
mov
xchg
mov
mov
push
pop
loopne
mov
shll
ss
call
loop
aad
pop
xchg
xlat
push
xchg
xchg
shl
mov
addr16
imul
or
add
adc
jbe
or
lea
lcall
sar
add
mov
mov
xchg
repnz
test
rcl
push
mov
mov
cmp
jns
fwait
add
sub
outsw
mov
pop
in
dec
cmp
or
cmp
cmp
jg
pop
ja
stos
stc
cli
in
inc
mov
xchg
dec
bound
into
or
sub
cwtl
out
rorb
jb
dec
inc
and
rorb
add
mov
push
cmpsl
mov
inc
mov
inc
jle
addl
xchg
enter
xchg
incl
add
pop
pop
add
lahf
sahf
cmpsb
cli
sbb
das
or
mov
decb
mov
test
js
data16
mov
in
cs
inc
jle
ja
add
or
aam
loope
pushw
pop
test
or
add
xor
xchg
or
sbb
pop
pop
xchg
adc
movsb
invd
mov
int3
mov
ret
lea
xor
jp
addb
mov
es
adc
mov
mov
data16
push
popf
jle
jg
ja
repnz
mov
inc
nop
mov
push
clc
xchg
pop
push
test
shrb
or
lea
jne
jne
js
loopne
inc
cs
addb
mov
repz
push
mov
mov
cmpsb
jae
push
lahf
rcrb
loope
lods
mov
popf
lods
test
ret
stos
xchg
data16
and
cmp
inc
or
mov
xchg
test
sub
dec
dec
rcl
mov
xchg
push
dec
addb
xchg
mov
push
fs
in
repz
in
or
mov
pop
stos
pop
test
pushf
data16
or
cmp
xorl
mov
push
imul
cmpsl
push
movsl
into
ret
mov
mov
push
inc
or
sub
jge
popa
add
dec
or
xorl
int3
jg
inc
cmpsl
xlat
test
inc
cs
push
and
nop
jae
addb
dec
push
cltd
xchg
xor
cmp
mov
and
sub
mov
or
add
mov
out
repnz
fs
xchg
sub
cmpsb
inc
daa
scas
or
ret
add
mov
test
lea
push
cmpsb
add
xor
repnz
xchg
sbbb
movsl
push
pop
or
jmp
xchg
mov
pop
mov
addr16
adc
xchg
inc
cs
push
push
or
mov
mov
scas
mov
jbe
outsb
mov
jb
mov
sbb
imul
roll
lock
jno
aas
push
jnp
push
shll
mov
pop
jne
loopne
pop
out
sub
mov
insl
pop
xor
and
sahf
into
test
inc
lea
jo
mov
test
jns
xor
push
cltd
push
insb
ret
mov
andb
test
pop
xchg
and
decl
enter
insl
sahf
mov
lea
fsubr
inc
imul
mov
add
les
xchg
incb
pushf
mov
sahf
mov
jge
xchg
pop
lret
push
je
stos
xchg
jle
addr16
out
fimull
jnp
test
and
rcl
icebp
je
sbb
outsb
outsb
mov
and
clc
dec
stos
data16
cmp
fldl
hlt
insb
jns
out
jns
outsb
or
xchg
xchg
inc
jle
cli
popf
mov
xor
int
cmp
out
sub
icebp
out
push
or
xchg
loop
sahf
cmp
nop
pop
rolb
int3
mov
imul
adc
xlat
sbb
and
in
add
jmp
in
bound
adc
jg
pop
iret
xlat
xchg
mov
xchg
into
and
pop
xchg
cmp
test
leave
jb
test
into
xchg
lcall
fisttpll
sbb
inc
and
iret
mov
cli
cmpsl
out
xchg
xchg
fnsave
out
loop
jnp
mov
popa
aas
jge
pop
mov
cmpsb
pop
mov
mov
inc
mov
mov
and
mov
das
les
call
mov
mov
fildl
jo
rorb
jo
rclb
and
orb
or
jae
jne
jnp
and
jp
jb
xchg
aaa
cmpsb
jg
push
mov
outsl
lea
xchg
cmpsb
repz
mov
sahf
xlat
stos
lret
icebp
mov
mov
add
mov
xchg
orl
sbbl
pop
inc
fidivs
nop
ja
arpl
sbb
pop
cmpb
nop
adcb
rcll
pop
or
cld
loopne
repnz
in
aaa
in
jg
test
jp
xchg
add
ljmp
cltd
pop
int
cld
dec
or
scas
lea
in
add
cmp
mov
inc
mov
ffreep
pop
icebp
out
test
lea
mov
push
lock
cmp
xchg
sti
int3
jmp
imul
nop
add
inc
icebp
lcall
or
loop
inc
xchg
push
mov
int
test
imul
xchg
cmp
lods
and
inc
push
add
mov
ss
lret
addr16
es
insl
arpl
cmc
push
mov
pop
add
pop
push
cli
lods
incb
mov
mov
stos
pop
ret
scas
sub
cmpsl
inc
into
pushw
push
es
cmc
push
out
test
addr16
mov
sub
movsl
das
xchg
das
mov
push
mov
mov
push
fsts
xor
cmp
push
xchg
loop
fstp
push
xor
mov
nop
mov
dec
mov
pop
xchg
inc
das
aam
cmp
mov
rep
cltd
es
jnp
add
xor
cmp
push
pop
sahf
add
jge
addr16
mov
je
and
cwtl
sbb
mov
xchg
mov
jg
in
cmp
and
out
pop
repnz
neg
cmp
or
inc
jbe
lods
repnz
dec
mov
dec
push
lahf
lret
cmpsb
rorl
xchg
stos
xchg
pop
xchg
add
addb
dec
xor
push
sub
rorb
mov
loop
sahf
out
add
xchg
add
lcall
sahf
add
mov
or
mov
call
jns
enter
or
bound
mov
ficoms
test
pushf
test
loop
mov
lahf
mov
jns
add
push
int3
lods
rcrl
add
lods
mov
int
shrl
push
xchg
add
jns
dec
xchg
aam
mov
dec
mov
stos
sbb
mov
xchg
sbb
enter
stos
mov
lahf
or
data16
jbe
pusha
jg
hlt
add
cmpb
cmp
jae
mov
mov
sbbl
loop
mov
aad
out
inc
pop
add
sete
inc
jns
lods
mov
push
xchg
in
mov
pop
cmp
xchg
xor
lahf
bound
inc
push
int3
outsb
mov
jb
xchg
jbe
jp
fucompp
mov
out
negl
sbbb
xchg
rorl
cmpsb
xchg
movsb
orb
xchg
aaa
ret
stos
push
sahf
add
mov
cmpsb
cli
daa
into
stos
aad
pushw
scas
test
mov
repz
stc
xchg
add
pop
or
stos
nop
xchg
or
sub
leave
pop
ficoml
leave
dec
add
mov
jge
xchg
mov
mov
mov
mov
adc
movsl
or
std
dec
aas
push
jne
jge
dec
lds
aas
adc
cli
pop
insb
pop
xchg
je
cmpb
pusha
pop
aam
cmpsl
out
mov
push
loop
pop
addr16
dec
repz
int3
sahf
or
call
cltd
xchg
int
sbbb
adc
std
xchg
push
mov
test
or
sub
xchg
pop
xlat
js
popf
mov
lret
bound
jg
test
inc
push
mov
mov
rcll
lock
sub
test
lea
jno
int3
or
mov
inc
pop
sbb
loop
shlb
fdiv
or
push
ffree
xchg
adc
data16
mov
xchg
push
daa
nop
mov
dec
cltd
decb
data16
jno
inc
cmp
sub
jns
mov
add
sub
test
inc
movsl
or
pop
mov
lea
sub
mov
scas
sub
mov
ret
mov
inc
xchg
bound
cwtl
mov
hlt
mov
dec
andb
andb
xchg
repnz
movsb
andl
sbb
inc
inc
or
lcall
stos
xor
ret
je
sub
aad
insl
in
adc
or
mov
int3
jecxz
clc
push
inc
repnz
push
cs
ret
faddl
xchg
roll
mov
es
jmp
xchg
mov
add
mov
imul
lcall
pop
icebp
outsl
push
pop
xor
into
out
sahf
pushl
xchg
and
add
imul
mov
lret
or
testb
inc
mov
stc
mov
das
xchg
jmp
fwait
rep
jl
jl
mov
mov
das
loop
jno
cmpl
mov
adc
mov
repz
add
mov
js
int3
add
xchg
mov
xor
loop
mov
popl
mov
hlt
sarb
push
mov
mov
adc
mov
out
xor
hlt
sti
mov
mov
cmpsl
cwtl
mov
cmp
subb
xchg
jg
ja
ficompl
xchg
rorl
cltd
ror
bound
push
xchg
push
or
subl
xchg
fwait
sbb
je
cmpsb
ljmp
in
test
mov
test
jne
fiadds
inc
xchg
push
jl,pt
int3
inc
mov
jbe
jo
daa
xchg
mov
inc
xchg
subb
jl
adc
xchg
add
xorl
mov
cwtl
and
mov
jp
scas
dec
xchg
or
aas
cmpb
orl
fsubr
xor
into
iret
pop
pop
push
pop
xchg
scas
test
add
mov
testl
inc
mov
inc
jg
dec
int3
xchg
jb
ds
and
shll
fdivrl
les
sbb
out
mov
movl
adc
or
arpl
or
enter
jmp
xchg
notb
add
call
add
sbb
negl
mov
rclb
shll
imul
xor
cmp
ds
imul
aad
mov
add
scas
mov
movsl
fisttpll
rclb
xchg
addr16
push
ss
pop
imul
jp
insb
add
sub
lcall
jb
aaa
jmp
popf
arpl
scas
sbb
push
rcll
mov
adc
out
fimull
call
loope
pushf
hlt
roll
fs
pop
xchg
xchg
xor
push
push
inc
push
das
jecxz
ret
jp
mov
pop
addr16
adc
in
cmpsl
adc
leave
addr16
fsub
cmpsl
call
out
sbb
adc
cwtl
les
xchg
cmp
loop
aad
adcb
fs
scas
ja
insb
out
gs
pop
inc
inc
mov
out
sbb
enter
data16
test
mov
add
jbe
jae
sbb
sub
jo
lods
aad
jecxz
mov
push
outsl
test
lcall
data16
add
scas
mov
jg
lret
int
sub
pop
pop
sub
pop
push
dec
divl
mov
call
lret
xlat
xchg
xchg
cvtps2pd
jecxz
out
into
decl
sub
nop
int3
enter
cwtl
dec
rolb
imul
or
xchg
add
mov
cmpsb
add
add
popf
dec
add
pop
addr16
or
pushf
jmp
je
lret
cltd
cmp
ret
out
xor
jb
cld
xchg
pop
fldenv
out
lods
mov
in
push
scas
pop
out
adc
mov
stos
roll
xchg
clc
enter
or
push
std
jmp
jno
adc
cmpsb
data16
fadds
add
push
and
repnz
test
xchg
call
mov
into
adc
push
nop
mov
pop
push
mov
add
jno
out
mov
into
pop
jne
sbb
out
adc
add
dec
js
fmull
ffreep
push
pop
cmpl
flds
dec
inc
adc
add
sub
xor
into
and
aad
repz
popf
add
data16
xlat
int3
addr16
cmc
stos
lods
lea
xorl
dec
out
xchg
std
ja
cmp
dec
xchg
call
xchg
repz
scas
call
ret
jl
bound
lds
dec
cmp
test
xchg
addr16
je
pop
mov
out
inc
fldl
inc
cltd
movsb
je
pushf
sahf
inc
into
inc
xchg
sbb
rorl
pop
pmaxsw
or
inc
pop
xchg
pop
jge
adc
adc
mov
and
jl
push
jbe
sub
icebp
xchg
mov
daa
add
push
xchg
pop
xorb
xlat
xchg
sub
movl
sub
or
add
pop
cli
es
add
push
xor
mov
pusha
out
push
inc
xor
inc
inc
sub
fldt
js
push
pop
mov
imul
pushf
mov
addb
pushf
xchg
push
xchg
jb
xchg
sub
pop
in
call
jae
aam
nop
push
iret
ret
or
and
je
adc
cld
xorl
cwtl
mov
mov
mov
imul
xchg
clc
xchg
sbb
je
mov
mov
rcll
cltd
mulb
test
das
hlt
loope
ss
cmc
inc
add
iret
ret
ret
call
das
xchg
push
cmp
out
inc
push
insl
xchg
cwtl
and
vunpcklps
les
movsb
pop
mov
inc
pop
repz
jb
mov
xchg
das
nop
in
cmpsb
lahf
bsf
mov
lea
jno
fwait
imul
mov
jne
or
add
fstl
fsts
scas
inc
nop
pop
sub
in
outsb
shlb
inc
repz
dec
push
push
and
xchg
jle
adc
jmp
dec
push
aam
in
sbb
lahf
xor
adcb
cltd
mov
stos
cld
push
fwait
xchg
xor
ret
inc
loopne
xchg
jecxz
out
movl
ror
ret
repnz
xchg
mov
add
mov
or
js
out
test
mov
jecxz
mov
mov
sahf
shlb
xchg
and
pushf
pop
jbe
ja
rol
mov
add
add
pop
int3
inc
lcall
outsl
xchg
fisttpl
xlat
ss
sbb
dec
and
loopne
dec
pop
jne
pop
scas
pushf
andl
dec
dec
push
or
dec
inc
ja
push
imul
or
mov
stos
repz
cwtl
sub
mov
int
push
sti
cmpsb
jb
inc
or
scas
ret
mov
cwtl
lea
mov
into
sar
ss
dec
xchg
into
mov
fisttpl
xchg
jmp
add
iret
mov
fbstp
cmp
ret
repnz
sub
cltd
xchg
ss
xchg
outsb
into
lahf
mov
lret
cmp
ret
mov
or
mov
movsl
mov
arpl
mov
mov
xor
xchg
pop
xchg
jl
movsl
inc
cmpsb
je
mov
xchg
shl
aam
into
cld
add
xor
mov
aam
roll
outsl
sub
fcmovu
pop
lock
ljmp
imul
test
in
sahf
push
xchg
std
mov
pop
lds
sbb
xor
in
and
xchg
mov
xchg
and
lods
stc
scas
xor
shl
cmp
addb
data16
es
fsubl
xchg
pop
and
rcrl
xlat
cmp
cld
ss
mov
sub
test
loope
std
fidivrs
fdivp
push
leave
hlt
mov
out
push
mov
outsb
test
mov
out
sbb
repz
cmpb
orl
subl
xchg
sarb
cwtl
adc
jb
adc
cmpsb
push
aas
insb
push
pop
add
iret
pop
adc
cmc
inc
mov
or
test
aas
js
dec
push
imul
addr16
mov
sarl
rcrb
jnp
cli
mov
rcll
addr16
adcb
aad
aas
fistl
les
cmp
cwtl
lahf
rorl
pop
push
mov
popl
xchg
stos
addr16
ret
cmp
fidivrl
jp
inc
xchg
mov
mov
inc
push
mov
jne
cmp
add
and
scas
xor
enter
out
cmpsl
in
push
xchg
sti
dec
mov
mov
mov
stos
mov
out
mov
cmp
mov
mov
push
sahf
adc
xchg
pop
xor
jns
je
mov
data16
pop
idivb
into
adcl
jge
pop
sub
scas
pop
scas
xor
fwait
into
ss
out
scas
mov
inc
xor
das
pushf
mov
inc
or
cld
pushf
popf
test
jg
into
iret
cmp
mov
mov
iret
out
ret
xchg
mov
jg
icebp
test
lret
push
shrb
loope
out
mov
jl
leave
or
and
leave
orb
or
aam
aad
mov
jb
je
and
cltd
stos
cmp
fnstcw
adc
movsb
mov
mov
lods
add
outsb
setns
mov
push
cwtl
arpl
shl
mov
subl
test
into
jb
xchg
mov
xor
bound
dec
mov
nop
inc
rorl
mov
inc
vphadduwq
dec
orl
jb
ljmp
fiaddl
push
or
lods
cmp
bound
subb
fs
push
shll
or
es
nop
sbb
sbb
cwtl
or
lods
xchg
out
popa
jp
mov
enter
pop
test
out
mov
rorb
dec
imul
and
ret
and
cmp
mov
into
sbb
push
jno
cs
jae
mov
dec
xor
jge
jo
stos
cmc
cmp
imul
add
out
sahf
fistps
addr16
sti
push
mov
jg
mov
stos
int
mov
dec
mov
mov
add
inc
dec
jo
test
nop
lret
adc
ror
xchg
sub
test
mov
stos
jecxz
mov
scas
aas
repz
or
out
xchg
repz
popf
adc
xchg
aas
lods
pop
mov
movsl
sti
arpl
jmp
jecxz
xchg
xchg
xchg
add
incb
pop
sti
aam
or
jmp
push
in
scas
into
hlt
pop
xchg
js
ss
sbb
into
xchg
out
rolb
push
mov
ss
mov
sbb
jo
pop
cmpsl
adc
ja
sub
jecxz
addr16
xor
aas
aad
insb
cltd
addr16
mov
imul
inc
mov
sbb
fisubs
incl
in
cmp
pop
jmp
movsb
inc
bound
dec
stos
inc
xchg
fcmovnb
icebp
fadds
lock
mov
cmpsl
and
insb
mov
sbb
insb
je
cmpsb
lret
xchg
scas
int3
cmpsb
sahf
shll
xchg
mov
cmp
arpl
mov
cmc
sbbb
cld
mov
push
push
rolb
cmp
nop
add
cld
outsb
cltd
stos
xlat
jo
push
inc
xchg
pop
roll
dec
sbb
push
xor
ret
call
xchg
mov
sub
std
testl
scas
out
loopne
fistpll
dec
inc
in
push
jns
mov
mov
mov
push
jp
or
imul
and
icebp
mov
hlt
subb
push
loope
lret
pushl
push
xchg
add
lds
jmp
sahf
mov
and
mov
movb
mov
inc
mov
jl
xor
jnp
imul
test
addl
aas
popa
jno
pop
imul
decl
hlt
xor
inc
lret
lcall
lahf
in
cld
pop
inc
and
orb
mov
add
push
and
mov
notb
scas
or
mov
leave
in
adc
test
iret
pop
sbb
dec
xchg
iretw
inc
sbb
cli
push
dec
mov
jno
sbb
push
rolb
lods
fbstp
adc
inc
icebp
pop
xor
add
xchg
jnp
or
adc
jnp
sub
adcl
mov
pusha
or
test
ljmp
aas
sub
inc
je
sbb
adc
push
inc
mov
test
sarb
inc
mov
add
lret
jl
mov
ror
push
mov
addr16
mov
inc
and
pop
sar
add
stos
pushf
mov
sub
bound
test
test
pop
pushw
adcb
or
sub
lds
cli
mov
cld
sbb
push
xor
test
call
mov
mov
push
add
mov
mov
mov
push
sbb
addr16
es
pop
mov
or
xchg
xchg
fdivl
mov
movsb
mov
addr16
movsl
jp
movsl
push
gs
inc
leave
xacquire
out
aaa
cli
pop
loope
aaa
jb
dec
ss
adc
repnz
sub
movl
movsl
xchg
push
xorl
test
pop
iret
ljmp
jo
xchg
and
mov
mov
into
and
pop
and
ret
cli
or
or
push
mov
in
push
lahf
push
in
into
stos
pop
mov
lahf
mov
stc
test
cmpsl
aad
push
push
mov
xor
orl
mov
jl
out
call
ja
fwait
es
or
cmp
xchg
add
sub
jns
add
data16
cmpsl
je
add
or
sbb
mov
orl
in
jl
cmp
xor
data16
cmp
xor
xrstor
add
sbb
out
cmp
push
test
test
test
ja
xchg
jle
mov
mov
sbbb
mov
or
popa
add
and
insb
push
sbb
xchg
hlt
mov
out
fwait
or
cs
jbe
mov
fwait
cld
fldl
adc
fs
scas
stos
in
or
ljmp
xchg
loopne
mov
add
jnp
cmpsb
xchg
sub
stos
mov
sti
mov
addr16
mov
xchg
xchg
fimuls
lea
loope
stc
sti
inc
jne
leave
out
pop
out
mov
out
mov
movsb
fstpt
lahf
out
leave
adcl
push
aaa
push
jecxz
nop
mov
scas
sar
jbe
push
fucomi
mov
js
mov
cli
lret
pop
jp
lret
fs
nop
enter
push
imul
mov
xor
lea
lret
add
cmp
loopne
mov
cmpb
mov
shrl
sbb
js
inc
je
mov
inc
lea
mov
lahf
addr16
push
out
cmpsb
stos
imul
arpl
nop
daa
cwtl
xor
mov
mov
rcll
lock
cmpsb
pop
jbe
inc
out
sti
xorl
in
and
or
mov
mov
test
pop
loop
je
mov
aas
mov
adc
les
icebp
cld
les
and
call
mov
outsl
sbb
int
imul
in
mov
mov
mov
adc
clc
pop
enter
lods
mov
or
dec
mov
mov
xor
pop
rcll
pop
loopne
subb
mov
cwtl
negb
pop
cmpsl
adcl
add
add
adc
mov
and
mov
jnp
cli
movsl
mov
fistl
dec
pop
mov
xor
and
fcompl
stos
std
call
test
push
ss
cli
cmpb
lds
js
shlb
jnp
or
or
mov
outsb
add
cmpsb
push
flds
xlat
aam
xchg
mov
xchg
nop
ja
lret
shll
pop
sbb
lcall
cmp
imul
xchg
mov
les
mov
fwait
sub
mov
sbb
sub
push
mov
push
or
je
jecxz
sub
test
xchg
roll
inc
rcrl
inc
or
ljmp
imul
cmp
aas
aam
pop
push
jne
sahf
push
mov
push
hlt
iret
xor
decl
cmp
and
clc
sub
push
shlb
pop
fidivrs
out
repnz
adc
sub
ljmp
repnz
mov
aaa
es
jo
mov
icebp
add
adc
pusha
ja
fcmovbe
sarb
add
cmpsb
insb
mov
dec
jbe
cwtl
imul
bound
xchg
add
test
leave
jns
mov
test
pop
aas
loop
stos
xchg
dec
nop
xchg
jbe
les
cli
push
cwtl
das
out
popa
pop
imul
lds
fidivrl
clc
pop
push
outsl
xor
sbb
pop
repz
leave
inc
and
mov
pop
adc
insb
movsb
and
fildll
mov
repz
sbb
mov
sti
scas
in
jmp
out
outsb
stc
mov
outsb
sub
xchg
pushf
sub
gs
mov
aam
sbb
cmpsl
sub
cmpb
dec
lcall
mov
mov
cmp
push
pop
jne
mov
pop
imul
xchg
or
shrb
inc
scas
inc
js
or
loopne
aas
sub
inc
fsubrs
lahf
rcrl
pop
outsb
repz
out
dec
mov
loop
and
enter
scas
in
push
adc
sub
mov
jae
jge
xor
test
add
xchg
sahf
addr16
mov
jb
je
daa
mov
mov
mov
mov
or
cmp
mov
stos
add
imul
xchg
cmpsb
xchg
repnz
mov
rcr
xchg
test
cmc
mov
cld
iret
adc
sahf
repnz
data16
adc
xchg
adc
add
addr16
fdivs
mov
in
inc
mov
adc
xchg
inc
test
lea
push
and
shrl
addb
xchg
insl
xchg
int
lds
aam
scas
jbe
std
cld
push
scas
addb
pop
lahf
scas
sub
push
cmp
xor
bound
sbb
cmp
cmp
and
sub
fldl
scas
and
push
jle
lds
aam
mov
mov
cld
mov
adc
cmp
out
icebp
push
mov
sub
popa
mov
arpl
sbb
pop
repnz
icebp
fwait
mov
xor
xchg
inc
fwait
negb
pop
aad
aas
jp
lods
xor
hlt
pop
mov
mov
mov
jecxz
inc
mov
aad
mov
mov
pushf
lret
push
into
mov
repz
out
in
adc
loopne
popf
jno
addr16
inc
and
sar
xchg
addb
mov
je
cmpsb
loop
pop
mov
fildll
sbb
into
ret
scas
add
fwait
push
lock
or
jge
inc
mov
mov
mov
loop
lahf
repnz
ficomps
push
test
lods
adc
mov
les
pop
adc
push
mov
pop
jae
xchg
jmp
xchg
pop
scas
xchg
inc
xchg
and
cmpsl
test
jecxz
adc
shrb
inc
add
jmp
jge
pop
test
adc
cmp
mov
inc
scas
cmpsl
xchg
lea
mov
cld
jae
dec
xchg
out
sub
add
das
mov
loop
cld
jbe
ror
mov
sahf
xor
inc
xchg
bound
pop
jb
mov
subb
dec
xor
pop
mov
popf
xchg
aad
push
imulb
js
je
fidivrl
sbb
xchg
xchg
xchg
cmp
jns
fmuls
mov
and
insl
jmp
xchg
xchg
ja
addl
test
mov
pop
dec
jecxz
or
or
imul
xchg
or
ljmp
std
push
sbb
ja
movsl
dec
sub
mov
xlat
mov
iret
es
mov
sbbb
gs
aas
popa
repnz
nop
insl
adc
cmp
loope
mov
push
xchg
mov
xor
cmp
pop
xor
xor
dec
mov
sbb
sti
fs
xchg
addr16
mov
jb
dec
sti
jbe
fsubrl
mov
fwait
cwtl
dec
mov
push
cmp
adc
mov
addb
push
sbb
pop
lea
jecxz
les
subb
pop
cmp
cmpsl
pop
int
adc
ror
lcall
dec
jge
popa
mov
lcall
lea
mov
dec
add
jno
mov
mov
rorb
fistpl
or
add
push
nop
cmc
ds
jbe
xor
xor
mov
aad
cmpl
xor
inc
mov
lcall
xorb
pop
mov
test
dec
add
cmp
pause
xor
mov
aas
xchg
jne
addb
lods
inc
jg
cld
sahf
or
mov
mov
xchg
in
std
xchg
mov
into
or
insb
jp
call
cmp
cmp
sahf
mov
inc
mov
jno
mov
jns
adc
js
daa
repz
add
mov
add
andb
notb
mov
aam
jmp
xor
mov
nop
scas
jl
out
or
jbe
mov
mov
sarb
lods
outsl
pop
pop
sbb
nop
push
ffreep
mov
xchg
lret
and
mov
negb
sahf
scas
add
mov
mov
push
mov
cwtl
ret
and
jmp
nop
in
out
call
aas
test
jmp
mov
addr16
mov
add
cli
pushl
aad
mov
adc
cmpsl
int3
sub
pop
fists
adcb
ror
mov
call
and
neg
ror
xchg
mov
out
sub
sub
shrb
and
mov
test
mov
test
mov
repnz
addl
lds
mov
xchg
mov
leave
xchg
xor
mov
scas
xchg
inc
into
xchg
stos
repz
fs
pop
adc
sbb
outsb
aad
push
xchg
imul
in
xchg
jns
cmpsl
and
sbb
cmpb
add
scas
and
mov
int
ret
mov
mov
or
xor
jbe
inc
add
xchg
les
loop
sub
jp
mov
and
shrl
out
stos
and
adc
call
jne
push
roll
shll
push
scas
mov
pop
push
loope
jae
or
popf
mov
sbb
stos
mov
addr16
adc
cmp
sti
les
rclb
pop
shlb
sti
push
das
test
cld
mov
out
nop
cmp
adc
cwtl
adc
lret
cs
pop
cmpsl
enter
jle
pop
mov
xor
testl
enter
or
sbb
mov
enter
adc
fcompl
cltd
cmpsb
push
loopne
mov
ss
lret
jg
inc
ret
adc
jbe
inc
lret
addr16
xor
out
repz
push
xchg
call
pop
pop
mov
popf
adc
xchg
inc
add
inc
addr16
cmpsb
or
test
jmp
ja
shlb
fadds
test
push
ret
cmp
das
push
push
test
mov
add
inc
lcall
xor
xchg
xchg
sub
sahf
pop
sub
push
scas
test
push
leave
jbe
pop
xchg
pushl
cs
dec
mov
and
fs
scas
push
fwait
add
ljmp
push
stos
sub
scas
jne
dec
mov
push
add
dec
shll
or
sbb
fdiv
repz
mov
mov
push
loop
xor
pop
push
stos
xchg
cmpsb
repnz
fs
sbb
stc
xchg
xchg
inc
orb
inc
pop
xchg
xchg
mov
mov
popf
sbb
push
scas
les
sbb
cmp
std
mov
sub
inc
lahf
in
movb
ret
lods
jns
jb
les
jnp
fadds
inc
cmp
rcll
push
inc
add
add
nop
ret
add
adc
gs
mov
scas
push
xchg
out
sub
sbb
jmp
inc
addr16
push
lret
inc
stos
push
and
rolb
fcomp
push
sub
enter
adc
test
popf
xor
ret
lahf
or
nop
lahf
imul
js
mov
nop
cmpsb
fisubrs
data16
arpl
sub
insb
shll
mov
sub
daa
data16
nop
add
adc
leave
lods
push
jge
jae
movsl
xchg
mov
ret
das
xchg
pop
rorb
popa
adc
nop
adc
jns
add
cli
xchg
xor
scas
fcomi
bound
jecxz
daa
pop
inc
aam
jp
lret
add
loopne
out
stos
fwait
fs
mov
pop
dec
aam
call
mov
jl
mov
sbb
sub
adcb
add
or
xchg
lds
loop
repz
in
pop
nop
lea
mov
mov
into
sub
add
sarb
xchg
xchg
mov
fs
and
sub
jge
mov
mov
mov
inc
test
div
lds
scas
sti
or
push
movsl
pop
in
adc
scas
sarb
cmp
in
sbb
inc
imul
push
pop
nop
jae
ss
xchg
and
pop
inc
dec
imul
popa
lock
adc
adc
pusha
scas
xchg
mov
aad
push
stos
xchg
sahf
scas
movsb
call
xor
xchg
sbb
shlb
subb
mov
ja
pop
addl
push
mov
sbb
pop
das
imul
pop
fadds
loope
jbe
xchg
mov
add
pop
test
sub
xchg
jns
adcl
cmp
sub
or
mov
aas
stos
lock
nop
stos
test
add
sahf
sub
cmc
out
iret
mov
push
cmp
shrl
xor
movsl
jne
push
clc
lods
enter
gs
je
aam
xchg
pop
sbb
sbb
pop
sbb
mov
mov
sbbb
xor
jp
aam
mov
jg
mov
jns
imul
sub
js
aam
and
xlat
out
loop
movsl
out
push
push
leave
clc
adc
cwtl
outsl
jl
cwtl
xchg
test
and
bound
sub
xchg
xchg
jnp
mov
in
mov
mov
scas
mov
loop
nop
in
sub
push
inc
aam
ret
or
outsb
inc
jg
mov
enter
test
mov
push
pop
add
xchg
iret
cld
data16
fmuls
int
cltd
movsb
out
jl
rcll
fisttpll
loopne
in
inc
sub
inc
and
loope
shlb
out
jl
and
mov
mov
imul
imul
mov
push
inc
data16
adc
xchg
jmp
or
aaa
ss
mov
cmpsb
data16
mulb
insl
sti
pop
lods
sub
in
jp
nop
mov
push
push
shll
inc
fcmovnb
inc
mov
inc
dec
fnstcw
pushf
jbe
jmp
inc
mov
push
pop
cmp
pop
mov
sbbb
push
addr16
lods
and
sbb
sub
addb
getsec
repnz
mov
out
std
cs
insl
mov
movsb
shrb
sbb
xor
lret
cld
pop
movsl
pushf
mov
and
lcall
inc
addr16
mov
iret
pop
push
inc
push
mov
andb
add
shlb
xchg
jo
cwtl
bound
fistl
push
imul
push
testl
mov
test
xchg
cmp
sahf
dec
int
mov
xchg
aam
mov
mov
jg
jp
push
outsb
std
movsl
dec
mov
shlb
sub
divb
lock
test
cs
mov
or
scas
push
and
data16
lret
rcr
and
into
int3
sahf
std
mov
mov
mov
sub
ja
adc
push
nop
addl
mov
cmpsb
and
mov
sahf
icebp
jmp
addr16
push
xchg
jecxz
mov
mov
xchg
bound
push
cmpsb
jg
jmp
aad
dec
mov
sub
aad
inc
pop
cmp
xor
out
mov
pop
mov
lods
dec
aad
xchg
or
div
xchg
push
mov
and
inc
addr16
jae
add
xchg
push
inc
add
mov
lret
mov
xor
popf
aam
pop
test
xchg
fwait
push
movsb
clc
pop
cmp
mov
inc
mov
mov
hlt
sbb
lds
aad
pop
loopnew
cmpsl
mov
in
scas
loope
mov
js
push
jbe
inc
and
scas
mov
cs
mov
je
orb
jmp
cmp
mov
sub
jge
iret
push
filds
cltd
sbb
adc
data16
adc
and
neg
pop
add
fwait
jp
sarb
sub
ret
es
addr16
ds
jns
fistps
andb
adc
pop
gs
mov
cld
xchg
outsb
fxch
js
sbb
addr16
mov
test
add
mov
ret
mov
out
shl
mov
movl
bnd
jge
jmp
mov
nop
or
xlat
lods
sahf
jns
mov
inc
jns
push
push
mov
dec
mov
sti
xchg
mov
pop
mov
mov
sub
stos
test
sbb
inc
sahf
repz
sahf
ficoms
cwtl
pop
aad
orl
dec
push
call
mulb
xchg
outsl
xchg
test
mov
inc
xor
mov
cld
cmp
cld
dec
mov
outsb
sti
enter
movsl
imul
xchg
or
es
push
mov
test
mov
pop
inc
mov
mov
dec
mov
fldcw
fmul
lea
fidivrs
icebp
imul
cmc
xor
or
mov
das
and
fsubrl
push
test
fptan
and
xlat
and
call
mov
jge
daa
les
fldt
jle
add
mov
inc
inc
leave
cwtl
mov
or
mov
dec
rcrl
rclb
lods
addr16
jbe
push
sahf
and
cmp
or
sub
adc
movsb
xor
adc
or
add
aad
xchg
aad
adc
xchg
lds
nop
out
int3
es
mov
xchg
lret
into
adc
dec
ret
mov
xchg
mov
fisttpll
mov
insb
jns
iret
shrl
or
repnz
cmpl
stos
adc
mov
mov
fmull
fcmovnu
cli
jae
das
rolb
mov
mov
ret
dec
clc
mov
mov
aaa
addl
imul
xchg
fbld
stos
mov
dec
or
or
cmp
mov
jns
adc
scas
mov
pusha
ret
pop
xchg
lret
ficomps
leave
fwait
scas
repnz
ficoms
sbb
xchg
fcmovb
loop
mov
enter
andl
je
in
popf
sub
out
mov
pop
fisttps
add
xchg
shll
ljmp
das
rorb
movsb
iret
xchg
xchg
pop
mov
out
mov
jnp
pop
pop
mov
test
adc
push
inc
mov
mov
mov
imul
inc
clc
push
fucomp
aas
mov
gs
inc
lods
test
insl
fbstp
pop
stc
outsl
push
test
cmp
fcmovbe
orb
or
scas
add
mov
notl
inc
repnz
push
cli
popf
xorl
insb
arpl
push
subl
repz
dec
loopne
dec
jns
pop
mov
pop
add
adc
mov
ret
lahf
add
hlt
test
adc
add
addl
mov
jb
mov
cmpsb
mov
sbb
adc
shl
add
fsubrs
cli
mov
or
add
mov
lea
mov
mov
fcmovu
adc
je
rcll
test
sti
mov
inc
xchg
mov
mov
xchg
ss
cli
movsb
je
mov
mov
outsb
jg
or
push
movsl
inc
and
mov
ljmp
or
lds
test
xchg
fistps
nop
outsl
js
push
fimull
lcall
mov
push
pushf
popa
mov
shrl
jb
adc
repz
jno
adc
push
or
mov
fsubrl
add
ds
scas
pop
sbb
pop
fsub
adc
xchg
in
xchg
adc
fdivrl
pop
nop
jnp
roll
sub
mov
jae
mov
mov
das
mov
lods
sti
xor
mov
lret
sbb
mov
add
dec
mov
pop
mov
sahf
out
pop
movsl
sti
int3
ja
lock
bound
ret
lods
xor
adc
aas
mov
jno
int
jae
roll
jge
in
cld
sub
xchg
xor
mov
mov
mov
cmpsl
fwait
subl
fnsave
fbstp
rclb
jg
lea
aaa
stos
jp
cmpl
jecxz,pn
mov
ret
jg
sub
jp
ja
inc
mov
mov
stc
mov
cmc
fwait
notb
mov
lcall
and
dec
popa
xchg
xorl
cwtl
mull
cwtl
je
pop
mov
lcall
lret
xchg
iret
or
jecxz
sahf
push
jp
stos
sbb
loopne
fidivs
adcl
push
jp
sub
and
rcrl
jae
or
lret
push
sbbb
mov
pop
push
cmpsb
adc
mov
inc
loop
mov
cmpb
jb
dec
mov
mov
sbb
xorl
ss
dec
xorl
jbe
sbb
jmp
mov
ss
mov
xorb
mov
sbb
aad
in
pop
inc
inc
and
or
mov
bswap
dec
adc
mov
mov
cwtl
cltd
call
aas
shlb
outsl
xchg
mov
fcoml
mov
call
into
adc
test
ss
xor
xchg
mov
inc
loop
insb
add
jge
loop
add
pop
out
sbb
clc
or
inc
jecxz
jns
pop
mov
or
push
adc
cmpsl
pushf
insb
xor
push
js
xor
out
iret
mov
std
je
int3
mov
test
and
jecxz
jb
in
jnp
xchg
jecxz
jns
aaa
lea
bound
lods
cmpsb
mov
mov
incl
aas
test
daa
pushf
rcrl
into
popl
sbb
movsl
mov
sub
add
adc
sub
popf
push
pop
movsb
push
jl
lock
lds
out
push
adc
test
jmp
jbe
lds
mov
rorl
mov
enter
rcll
movsb
jp
xor
lock
mov
je
fldl
mov
repz
mov
nop
inc
mov
mov
imul
xlat
out
clc
pushf
insb
and
cwtl
xchg
xchg
jbe
daa
jecxz
loope
inc
mov
pop
fcmovb
jo
dec
jbe
insb
push
test
and
adc
xchg
rcrb
adc
andl
push
loop
mov
push
mov
mov
pop
faddl
cld
xchg
test
push
cmp
fsubr
push
dec
xchg
xor
adc
scas
addr16
ror
icebp
test
andb
je
mov
arpl
push
loopne
jne
ljmp
adc
inc
push
ss
dec
inc
cmp
stos
adc
sub
fildll
or
repnz
fbstp
popf
xchg
shll
mov
je
mov
jle
repnz
add
mov
stos
rorl
clc
dec
fdivl
mov
push
or
mov
mov
movsl
xor
mov
pop
mov
pop
jbe
and
lds
nop
pop
xchg
mov
sbb
mov
adc
stos
outsl
subb
ss
lahf
incb
inc
js
add
xchg
rclb
out
sbb
fildll
out
add
mov
push
mov
xchg
xchg
leave
sub
sub
rorl
mov
cmpsl
lds
pop
addr16
mov
test
cmpb
in
aad
outsl
cmp
imul
test
dec
pop
scas
xchg
fmuls
jb
jg
cwtl
into
data16
sub
aam
test
loopne
cmp
gs
leave
stos
push
mov
fisubl
mov
cltd
stos
cmp
js
sbb
repz
xchg
inc
and
scas
orl
lods
sub
jns
pop
xchg
test
arpl
lods
sbb
and
xchg
imul
sbb
dec
lea
pop
xchg
mov
mov
mov
sub
lret
fnstenv
dec
or
xchg
dec
outsb
movsl
int
iret
dec
arpl
push
shl
nop
es
aas
xchg
dec
outsb
pop
jns
cmp
sub
push
ja
insb
pop
push
sbb
adc
arpl
mov
push
inc
repz
mov
lret
aas
filds
mov
lret
call
adc
inc
push
mov
divl
test
xor
addr16
push
arpl
cmp
test
xor
nop
daa
mov
xor
movsb
rol
ret
or
add
lds
lahf
repnz
mov
adc
aam
jp
sub
outsl
mov
addr16
lret
inc
mov
and
xchg
mov
mov
enter
xchg
sub
cmp
neg
hlt
movsb
xchg
pusha
pop
and
cmpsb
enter
scas
mov
in
rcll
adc
insl
add
mov
push
mov
cmpsl
add
repnz
ja
sbbb
pop
mov
adc
ss
add
imul
das
hlt
jmp
adc
dec
fwait
and
shlb
test
fwait
js
and
sub
in
lret
popl
idiv
pop
repnz
mov
lock
xor
dec
pop
into
out
add
sub
cmp
repz
mov
mov
cwtl
or
add
push
jbe
pop
jo
sub
enter
inc
dec
jb
mov
lcall
push
iret
cmc
pop
in
xchg
lods
pop
sub
inc
mov
incb
adc
rcrb
cmpsb
add
mov
sbb
pop
dec
call
push
inc
mov
jnp
inc
adc
cmp
std
xchg
into
imul
fs
fwait
sbb
mov
leave
pusha
mov
xchg
outsl
das
mov
mov
mov
fwait
xchg
sbb
outsb
flds
lcall
lods
popf
out
add
pop
cmp
ljmp
mov
jae
out
jne
cmpsl
push
popf
stc
mov
pop
xchg
dec
imul
in
test
outsb
sahf
push
pop
pop
xor
adc
aam
add
adc
movsb
fstps
sub
in
adc
mov
mov
nop
xor
aam
insl
or
addr16
push
xor
ja
cltd
dec
adc
cli
xor
mov
xchg
loope
sbb
std
sbb
mov
out
sbb
xor
movsl
sahf
ds
xchg
lods
xchg
dec
and
fldenv
sahf
and
mov
ja
mov
cmpsl
gs
adc
ror
bound
xchg
mov
xchg
fcompl
hlt
test
inc
xor
inc
scas
dec
inc
aas
jno
shrb
mov
add
mov
call
cmp
insb
shl
aad
subb
das
jmp
jns
sub
push
push
mov
mov
aad
adc
xchg
add
pop
popf
pop
test
pusha
clc
lret
lea
lds
daa
andb
lahf
or
imul
into
jbe
xchg
cmp
sahf
adc
jp
jmp
mov
in
call
test
pop
in
into
loop
sbb
je
fcom
ja
push
lahf
dec
xchg
and
mov
out
add
jnp
add
sub
inc
pop
in
int3
push
xor
fs
mov
stos
mov
pop
fdivrs
pop
mov
leave
cmpb
cmpb
leave
mov
mov
push
or
int
lods
imul
and
mov
mov
sbb
movb
push
pop
jp
xor
push
mov
xchg
icebp
mov
popf
add
pause
sub
jp
lods
mov
lret
rcl
cmpb
repz
dec
jp
jb
cmpsb
xor
mov
mov
std
push
and
xchg
mov
push
shll
adc
adc
mov
pop
jb
mov
mov
inc
lcall
pop
addr16
mov
test
mov
pop
scas
mov
dec
adc
push
inc
push
jmp
mov
xchg
jp
rcl
cmp
sub
xchg
jp
push
pop
jae
xchg
jmp
test
call
into
fnstsw
fistps
xchg
clc
mov
test
mov
xor
sti
xchg
mov
cmp
popf
loop
xchg
sahf
mov
ret
fdivr
inc
xchg
mov
iret
and
xchg
ja
xchg
cltd
adc
or
pop
cli
fstpl
cmp
xchg
or
ljmp
out
iret
cltd
sub
repnz
rcll
xchg
xchg
and
mov
mov
shlb
mov
test
jmp
mov
insb
xchg
sbb
mov
push
test
lea
add
addr16
stos
test
movsb
sets
dec
cs
inc
mov
scas
and
sub
cmpl
cmpsl
jmp
inc
xlat
xchg
adc
mov
pop
jecxz
cs
add
fbstp
cmp
cli
in
push
rorb
mov
mov
sbb
icebp
xchg
lcall
xlat
leave
cmpsb
or
inc
orl
push
scas
inc
sub
jb
in
push
popf
std
repz
cmpsb
pop
push
mov
test
fsts
fildll
mov
orl
add
add
orb
outsb
repz
shr
mov
bound
out
lret
or
xchg
sahf
std
mov
mov
fbstp
enter
repnz
mov
mov
cld
repz
fcoml
sbb
push
xchg
mov
pop
sbb
or
push
or
xor
leave
mulb
add
mov
pop
mov
mov
loope
addr16
mov
adc
pop
jns
xchg
inc
clc
sti
and
dec
inc
enter
cmp
add
out
sbb
and
pop
xor
fwait
cmpsl
cmpsl
rorb
cld
inc
shl
xorb
cwtl
inc
cmp
sahf
es
cmpsb
mov
jecxz
or
push
fstl
sbb
or
test
xchg
outsb
nop
in
out
sub
pop
and
push
jae
inc
jb
pusha
mov
addr16
and
cld
or
or
std
xor
aad
aaa
mov
cmpsl
dec
mov
xchg
adcw
add
jbe
xchg
je
shr
lods
mov
xor
je
adc
xchg
stos
cmp
or
mov
cltd
dec
in
push
mov
sub
cmp
inc
push
sbb
sbbb
push
sbbl
jge
int3
sti
std
mov
int
mov
je
mov
add
aas
lea
shr
fidivrl
scas
fldenv
addb
adc
dec
fcomps
adcb
lret
mov
mov
or
mov
nop
xchg
jecxz
ror
xor
out
pop
or
sti
xchg
fnsave
movsl
push
jns
mov
outsb
imul
push
test
addb
xchg
test
xchg
jg
test
sbb
adc
mov
sti
pop
cltd
xchg
in
ds
cmp
xchg
mov
test
pop
xchg
inc
in
int3
repz
mov
xchg
in
in
mov
pop
inc
dec
add
sbb
jnp
add
cmp
sbb
ficompl
push
xorl
mov
mov
cmc
mov
ja
rorb
cli
add
ror
dec
add
xchg
lcall
ss
add
loope
xor
fs
clc
dec
aam
lods
pop
push
nop
cmp
mov
inc
popf
sahf
pop
xchg
iret
aad
sahf
insb
mov
add
jb
repz
xor
lret
in
pop
jbe
dec
test
sahf
xor
lods
mov
mov
cmpb
xchg
cmpsb
mov
mov
cli
inc
movl
scas
test
pop
shrb
push
stos
push
add
mov
pop
mulb
sub
nop
addr16
xchg
or
mov
rolb
imul
fs
xchg
jno
stc
xor
jp
push
push
jne
lea
hlt
test
fst
pop
aaa
and
xchg
loope
mov
push
mov
test
sub
push
pop
lock
adc
push
push
bound
jge
mov
cmp
and
xor
ljmp
loope
loopne
pushf
nop
rcl
cmp
clc
orl
mov
and
je
xchg
cmpsl
cwtl
lea
cwtl
mov
pop
xlat
sub
xchg
cld
xchg
xor
push
popa
mov
lods
test
adc
cs
add
pop
adc
nop
and
cmp
lret
loopne
lods
stos
mov
cmpsl
enter
cmpl
sub
in
adc
out
mov
ffreep
out
repnz
and
mov
mov
test
scas
aaa
int3
push
out
inc
test
sbb
mov
cmp
add
cmpsl
cld
sub
cmpsl
cmp
inc
or
cmp
sbb
test
neg
dec
outsb
pop
xchg
aad
push
cmpsl
data16
dec
paddw
sub
into
pop
xchg
stos
mov
sbb
cmpsb
adc
jl
mov
xor
loope
jb
repnz
nop
sarl
data16
adc
shl
xchg
push
loopne
xchg
pop
repnz
cmpsb
or
push
inc
divb
sbb
mov
mov
push
ds
mov
mov
sbb
imul
ja
xchg
inc
xchg
mulb
cmp
cli
cmpsb
sbb
data16
jae
and
xchg
sbb
and
mov
pop
cmp
mov
adc
test
nopl
addb
xchg
les
push
inc
or
push
adc
gs
xchg
push
aad
cmp
lahf
call
adc
sbb
mov
or
add
incb
add
dec
outsb
fidivrl
mov
cwtl
data16
jne
sti
xchg
push
pop
jge
hlt
sti
lret
inc
inc
nop
orl
divl
inc
lcall
sub
loop
xchg
and
jno
test
aad
jmp
push
jno
add
test
jl
mov
push
aaa
arpl
xor
pop
mov
rcrb
rcll
jbe
sarl
xchg
imul
and
jcxz
fisttps
ret
imul
push
mov
daa
push
mov
lret
pop
and
inc
xchg
decb
andl
cmpsb
xchg
sub
outsl
fbstp
aam
aad
enter
addl
lds
inc
lcall
fwait
cli
xchg
in
mov
xor
mov
mov
test
xchg
int
rorb
out
ljmp
repnz
in
mov
xchg
xchg
lahf
sbb
pop
mov
mov
sahf
popf
shll
cmc
rorl
lret
ret
and
lcall
adcb
push
aam
mov
pop
data16
insl
cwtl
pop
mov
ucomiss
mov
js
or
aad
addl
xor
adc
je
int
mov
mov
mov
xchg
mov
lret
xlat
sbb
mov
add
mov
push
stos
xchg
ffreep
sahf
data16
mov
adc
iret
aad
lea
popa
mov
mov
mov
iret
fisubrl
int
nop
jge
movsb
leave
jne
into
fisubl
fldlg2
adc
mov
dec
insb
xor
je
xchg
subl
pop
sbb
push
jne
pop
sti
dec
into
call
data16
xlat
dec
pop
add
sarb
sub
mov
filds
pushf
mov
or
mov
xchg
stos
scas
mov
mov
repnz
mov
inc
xchg
insl
cmpsb
sahf
lea
add
mov
push
sbb
xchg
push
test
dec
xchg
adc
aas
xor
dec
xor
mov
xor
xchg
repnz
into
mov
lds
xchg
adc
cs
stc
adc
fisubrs
in
mov
xchg
xchg
repnz
sahf
xchg
dec
jae
pop
sbbl
lcall
xchg
int
addb
aaa
fsts
lds
pop
jnp
dec
adc
ja
sbb
dec
xchg
add
xor
mov
cmpsl
pushf
imul
push
lods
lret
test
mov
adcb
mov
jae
mov
ds
sub
xchg
jecxz
pusha
test
insl
movsb
daa
mov
ja
pop
sub
dec
mov
fildl
mov
test
aam
enter
inc
cmpsb
or
lret
dec
nop
push
jp
les
out
mov
aad
or
icebp
test
xorb
cmp
bound
jecxz
xchg
pop
xchg
dec
inc
std
nop
pop
outsl
fisubl
fmul
rclb
push
or
lods
out
nop
push
aam
pop
movsw
add
mov
cwtl
cmp
mov
arpl
cmpsl
xchg
jb
adc
lret
mov
ss
rclb
inc
and
les
popf
pop
cs
scas
stc
rorb
adc
frstor
cld
leave
xor
enter
test
inc
rclb
nop
outsb
cmp
pop
cmp
repnz
xchg
jp
xchg
or
subb
lea
mov
push
bnd
xchg
jp
and
xchg
fists
adcb
jo
enter
sub
pushf
loopne
mov
adcl
in
data16
mov
fwait
mov
push
inc
mov
adc
in
and
int3
mov
bound
dec
dec
mov
fwait
in
add
xchg
shrl
cltd
in
xchg
shlb
and
mov
lahf
imul
adc
lcall
popa
andb
pop
xchg
call
mov
and
cmpsl
inc
out
outsb
fists
cmp
add
mov
rol
xchg
nop
rcrl
je
cmp
cmp
pop
jecxz
jne
add
inc
cmp
int3
insb
jge
mov
mov
ja
movb
gs
cmp
shll
daa
pusha
fcmove
ret
jmp
adc
das
clc
push
adc
addr16
fsub
or
inc
mov
lret
repnz
fwait
jnp
xlat
pop
lods
or
lret
or
push
ret
or
aad
iret
add
fldl
dec
sub
sbb
xor
int
lahf
scas
add
ljmp
lods
sub
movsl
scas
dec
jge
mov
dec
inc
sti
or
pop
adc
cld
mov
shrb
andl
int
mov
xor
in
and
sbb
sti
pop
inc
jmp
or
xchg
aad
arpl
pop
sub
out
mov
test
lahf
iret
inc
clc
mov
mov
mov
int
comiss
mov
mov
add
movsl
sbb
and
and
sbb
pop
loope
dec
pop
inc
test
jb
out
popl
fs
stos
xchg
out
jo
and
mov
mov
loope
push
jbe,pn
int3
adc
xchg
repnz
xchg
adc
test
cli
xlat
pop
aam
xchg
and
into
pop
leave
pop
jecxz
dec
inc
and
xor
mov
cwtl
faddp
loop
jmp
imul
scas
mov
or
fbstp
jne
inc
mov
lods
mov
mov
xchg
xor
ret
push
loopne
mov
sbb
dec
fwait
mov
pop
mov
stos
inc
cmp
mov
sahf
and
xor
outsl
dec
in
aaa
mov
pushf
addr16
loope
loop
int
aam
mov
push
test
adc
mov
sub
jle
cmp
xorb
mov
mov
cmp
insl
mov
mov
jg
stc
xchg
adc
pop
mov
cld
add
jbe
fisttps
outsb
sub
popl
pop
sbb
ja
xchg
mov
inc
les
in
mov
add
fists
out
loopne
movsl
jbe
and
outsb
shrl
jae
scas
and
xchg
repz
xchg
mov
loope
roll
push
cltd
mov
stos
repnz
test
jge
dec
or
add
lret
push
int3
adc
jecxz
and
xchg
addr16
inc
mulb
mov
jo
pop
inc
push
fistpll
push
addr16
js
movl
lds
mov
inc
ret
leave
xchg
adc
outsl
fisubrs
mov
xor
outsb
add
bound
jl
bound
push
fildll
mov
push
cmp
sub
adc
or
jle
xchg
sub
loopne
or
lahf
xchg
pop
jg
mov
lcall
test
in
cmp
mov
push
test
sbbb
xchg
dec
imul
repz
add
push
push
lret
imulb
lods
sub
adcl
adc
test
loop
stos
inc
adc
jecxz
inc
aam
ja
jo
mov
jl
xchg
fnsave
fcoms
cmpsl
fnstsw
add
sub
pop
cmp
outsl
push
popf
or
fsubrl
adc
scas
outsb
or
mov
mov
or
mov
loop
sar
inc
test
outsb
lret
cmp
stos
aad
sbb
cmp
int
jl
sbb
ret
mov
push
sbb
pushw
imul
jg
cwtl
xchg
mov
push
mov
es
insl
or
fisttpl
sarb
mov
pop
push
mov
cmp
sub
inc
stc
cmpsb
pop
mov
addr16
mov
lret
ficoml
jne
push
xchg
mov
lods
sbb
cmpsl
frstor
adc
push
insl
fmuls
cmp
pop
shl
and
jae
xchg
jp
cld
add
imul
jp
push
outsb
fcomps
mov
xchg
aam
imul
or
fcmovnb
push
in
mov
push
out
daa
mov
mov
pop
ret
or
mov
mov
mov
add
ja
pop
xor
xchg
add
popf
mov
xchg
add
pop
add
leave
or
js
lret
imul
push
cwtl
cmp
stc
mov
push
push
sahf
jmp
addr16
adc
cli
mov
lcall
out
mov
adc
shr
filds
dec
jmp
std
cwtl
arpl
sbb
ja
cmp
aad
andb
inc
mov
out
test
in
adc
test
push
mov
pop
mov
test
mov
push
jnp
jg
imul
push
pushf
pushf
popf
shlb
xor
adc
cltd
pop
cltd
pop
inc
jae
xor
pop
data16
lret
das
repnz
test
shll
aad
adc
insb
fisubs
lahf
add
xchg
int3
movsl
mov
movsb
xlat
cli
fs
dec
pusha
push
test
sti
test
movsb
xor
or
and
or
pop
rcll
mov
test
add
jo
iret
mov
lods
jnp
mov
mov
movb
iret
ds
shll
jbe
mov
and
int3
rolb
jmp
aam
xchg
mov
repnz
add
pop
cld
and
not
loop
pusha
mov
xchg
mov
pop
mov
xchg
pop
add
imul
cld
mov
das
and
inc
cmpsb
sarb
out
jle
sub
sbb
cld
mov
popf
xlat
cmpsb
repz
sti
jmp
adc
fstpt
loopne
jne
lock
mov
fwait
cmpsb
xchg
pop
test
adc
xchg
mov
cmpsb
mov
frstor
xchg
arpl
add
mov
cmpsl
cmp
mov
leave
fisttps
mov
xchg
imul
gs
cli
fsubl
and
in
mov
in
jnp
mov
xchg
fs
shll
cmpsl
xchg
rorl
clc
mov
cmp
outsl
mov
jmp
imul
fldt
add
ret
jg
sarb
loope
dec
dec
addb
xchg
dec
lods
movsl
clc
xor
fsubs
rorb
pop
aas
xchg
stos
cmp
jbe
nop
xchg
int
lods
lods
iret
push
xchg
xchg
and
test
add
lea
sbb
ljmp
cmp
orb
inc
mov
cwtl
aas
fcmovnb
mov
lret
mov
lret
test
imul
sbb
xchg
out
jae
or
cmp
sbb
push
add
int3
fwait
adc
and
push
push
orl
test
cld
mov
and
outsb
test
push
cmpsb
sub
pop
jge
lret
cmpsl
or
adcb
push
das
jns
pusha
push
add
inc
inc
pop
shrb
mov
inc
xchg
rcr
add
into
into
mov
inc
scas
sar
push
movsb
testb
int3
out
cmp
pop
pop
mov
dec
rcrl
jo
sbb
or
movsb
adc
jle
fisubl
add
push
jp
adc
jmp
and
mov
push
dec
ret
dec
mov
test
loopne
hlt
jnp
ss
ss
dec
in
xlat
clc
ret
mov
jg
pop
xor
mov
dec
mov
test
xchg
mov
add
mov
aad
stos
pop
cs
mov
push
stos
add
or
ja
or
shlb
lret
in
lods
int3
push
mov
lahf
lea
push
ret
mov
pop
xor
js
dec
lods
mov
mov
push
pop
mov
cltd
and
ds
out
push
lods
mov
pop
push
mov
addl
addr16
push
or
into
aaa
xor
fdivrs
dec
cmpsb
cs
xchg
or
adc
stc
in
adc
mov
cmpsb
gs
mov
add
mov
push
cmp
js
stos
jl
rcl
enter
shlb
adcb
mov
xor
xchg
sbb
sbb
push
adc
mov
xchg
adc
and
pop
mov
mov
mov
sahf
add
enter
test
push
adc
mov
mov
xchg
cmpxchg
lret
add
loope
inc
sbb
and
sub
jecxz
jne
icebp
fucomip
fbld
lock
sbb
dec
std
rcrl
mov
repz
or
add
out
inc
enter
xchg
test
push
ja
in
jo
xchg
jbe
cmp
enter
add
add
pop
xchg
aas
mov
ret
xor
andl
pusha
loopne
or
rorl
test
es
mov
inc
pushf
repnz
movsl
sti
pop
cmpsb
lcall
xchg
orb
frndint
icebp
out
xchg
push
jmp
icebp
adc
jge
adc
dec
movsb
repz
mov
jns
sbb
stc
lret
push
jo
mov
les
ficoms
ret
pusha
test
cwtl
iret
xchg
xchg
xchg
lods
mov
xor
out
xchg
scas
pminsw
cmpsl
xchg
lds
adc
lock
mov
or
xchg
cmpsl
out
jo
hlt
loop
in
mov
and
dec
xchg
outsb
ficompl
ret
pop
xchg
add
cmovg
or
pop
cltd
out
out
daa
jns
out
cmp
in
lods
es
or
adc
xchg
fcomip
push
sub
mov
fwait
mov
sub
inc
repnz
sbb
sub
stos
adc
and
sbbl
cmpsl
cmp
mov
adc
or
mov
lock
jb
cmp
sbb
dec
xor
sub
call
lock
mov
cmp
es
jno
mov
and
addr16
out
push
pop
sbb
jg
test
loop
aam
sub
dec
lret
rol
cmc
and
mov
inc
fistl
stos
jbe
cmpb
in
les
mov
loopne
inc
test
mov
addr16
or
les
pusha
mov
ret
xchg
mov
insb
xchg
stc
sub
mov
mov
push
xor
into
adc
loopne
push
sbb
sbb
lods
stos
mov
inc
popa
out
xchg
mov
stc
fldt
xchg
push
icebp
inc
int
mov
out
andb
lret
or
test
mov
jmp
fimuls
sbb
sbb
addr16
icebp
cmp
sbb
adc
sub
cmp
sub
mov
mov
pop
jb
dec
js
loope
sub
adc
daa
popf
and
aas
adc
jle
bound
mov
mov
xchg
push
iret
and
insb
cmp
call
add
push
sbb
aad
cmpsb
imul
push
jns
pop
mov
cs
in
fisubs
jge
dec
and
movsl
aas
jmp
fidivrs
pop
into
jg
mov
lret
dec
mov
push
mov
sub
and
or
push
clc
lods
cmpsb
sub
xchg
mov
fisttpll
sahf
cmp
pop
mov
data16
fstp
bound
test
ror
imul
adcb
loop
stos
out
xchg
sub
push
aas
cs
jmp
scas
or
xchg
loopne
mov
xchg
jl
sbb
pushf
mov
sahf
out
and
push
shr
repnz
jnp
imul
icebp
xchg
ret
xchg
cwtl
addr16
aad
not
jle
je
sahf
subb
sbb
insl
push
add
lock
push
mov
mov
test
mov
cs
repz
imul
daa
movsl
jg
fbstp
xor
enter
mov
fimuls
repz
add
vmovss
jno
mov
xchg
sbb
mov
push
cmpsb
xchg
push
jp
stos
dec
cmpb
cs
and
int3
jle
rclb
sub
fs
insb
int
mov
push
rorl
pop
mov
sti
aam
subl
std
pop
dec
xor
pop
fcomi
pop
push
test
or
mov
notb
jb
xchg
sbb
ret
lea
fstl
out
xorb
push
xor
nop
notl
imul
repnz
push
rcll
stos
dec
in
jmp
push
les
push
test
mov
fwait
cltd
push
stc
or
jo
mov
stos
pop
lds
sbb
out
ja
scas
mov
hlt
cmp
filds
pusha
mov
adc
inc
fiaddl
ret
or
add
and
cwtl
addr16
adc
stos
lcall
pop
fsqrt
mov
nop
push
les
dec
push
ds
adc
and
inc
mov
jmp
sbb
sbb
xchg
lret
std
cwtl
ss
push
insb
mov
sub
or
into
movb
incl
mov
mov
addb
subb
or
cmp
and
lods
fadd
mov
pushf
enter
ret
test
mov
pop
dec
ret
aad
sar
xor
out
push
repnz
push
popf
lret
cmpsb
jg
fcmovnb
les
sbb
nop
movb
cmp
push
adc
test
or
cwtl
dec
mov
sub
rorl
lret
jg
ja
jns
lret
cmp
or
into
out
fmul
cmp
mov
fisubs
rorb
cmpsl
addr16
mov
sti
pop
hlt
movsb
roll
cmp
stc
inc
iret
dec
test
lock
inc
mov
jecxz
addr16
aas
movb
xor
xchg
lock
arpl
mov
lahf
repnz
lahf
cltd
mov
dec
inc
mov
fldt
scas
ljmp
and
loop
or
or
inc
ud0
cmp
inc
and
or
repnz
add
mov
add
or
push
push
xchg
jno
and
or
sub
sbb
out
xchg
sub
outsb
mov
pushf
dec
test
pop
cwtl
jge
xchg
cmpsb
mov
das
and
jne
pop
jns
jns
add
jae
mov
stc
ret
je
add
outsl
stos
push
dec
push
rcll
icebp
mov
movl
inc
cmp
and
dec
inc
les
pop
jle
repnz
or
movb
mov
int3
push
shrb
in
in
test
ljmp
fld
cmpsl
popa
addr16
enter
cwtl
mulb
popl
leave
mov
data16
pop
ret
adc
nop
inc
mov
popf
sbb
mov
scas
push
in
insb
mov
sarl
xchg
xchg
or
push
scas
xchg
ror
popa
pop
lods
xchg
ja
out
mov
enter
xchg
arpl
push
push
nop
mov
dec
or
addr16
insl
push
mov
out
mov
popf
rorb
stos
push
mov
push
mov
ret
or
push
in
dec
pop
scas
dec
cmp
and
aas
dec
into
push
or
adc
fldl
rcrb
call
push
jmp
test
jnp
cwtl
addr16
push
add
daa
fstpl
scas
mov
mov
xor
push
rorl
pop
mov
in
xchg
addr16
jne
out
cltd
and
enter
xchg
sub
mov
aam
xor
jp
orb
pop
cwtl
mov
mov
xor
fldcw
bound
imul
mov
push
sbb
das
xchg
ds
pop
push
xor
push
test
outsb
cmp
mov
xor
std
or
roll
or
push
xchg
movb
push
xor
cld
js
sbb
cld
mov
cmp
cmc
movsb
lds
rol
sbb
outsb
ror
bound
gs
mov
into
cli
mov
xchg
out
xchg
jae
mov
jp
pop
mov
adcb
sbb
sub
inc
sbb
jo
or
lods
adcb
fldl
in
aaa
and
jl
xor
cltd
mov
mov
or
add
pop
dec
dec
push
jge
jbe
outsl
cli
int3
mov
testb
and
and
mov
mov
xchg
add
popf
es
cli
or
out
aad
jmp
shl
mov
xor
lret
and
testb
orl
stc
jne
fistpll
jnp
gs
jno
xchg
nop
sbb
add
loop
push
daa
jne
mov
cmpsl
out
jl
push
aad
insl
pop
adc
shlb
or
cmp
aad
sbb
adc
push
cmpl
or
adcl
mov
pop
sahf
out
nop
cld
or
adc
xchg
mov
or
aam
mov
fnstsw
cmpsb
stos
mov
or
shl
mov
hlt
cld
icebp
xorb
enter
in
cmp
pop
imul
in
lods
cs
ret
fwait
mov
mov
repnz
out
imul
mov
sub
pavgb
add
adc
hlt
mov
sub
add
or
mov
insb
push
aas
das
pop
outsb
je
xor
shll
pushf
add
repz
outsb
sbb
lock
dec
jle
imul
mov
pop
int3
mov
add
sbb
mov
scas
or
les
inc
stos
push
jnp
mov
xchg
or
jg
dec
iret
jne
call
ja
ss
test
inc
and
mov
xor
sbb
clc
mov
rorl
stos
mov
jb
lahf
adc
shlb
add
inc
out
sahf
mov
mov
lea
jmp
mov
into
das
sub
nop
adcl
ss
cmp
stos
pop
in
testl
into
and
fistpl
movsl
xchg
int3
cld
enter
xchg
ja
xchg
cmc
mov
lcall
jg
repnz
sbb
das
dec
cltd
lea
aas
adc
xorl
cmp
push
jp
push
iret
inc
pop
cli
cmpsl
inc
mov
sub
mov
xor
dec
cmpsl
ret
mov
fidivl
pop
lds
or
filds
outsb
cli
mov
sti
daa
pop
jns
jb
pop
xor
aaa
cld
push
xor
mov
push
sbb
pop
mov
es
ljmp
xchg
jb
nop
in
lods
jp
push
in
bnd
xchg
test
jmp
xchg
loope
jnp
sar
imul
mov
lcall
xchg
dec
nop
mov
jp
lcall
in
dec
jl
imul
sbb
adc
jns
pop
mov
sahf
cmpsl
inc
mov
jb
fwait
or
imul
movsb
add
aad
sbb
daa
stos
mov
sbb
mov
outsb
cwtl
lret
nop
mov
aas
mov
aad
lock
loopne
mov
adc
jge
xor
insl
push
dec
andl
mov
sti
cli
xor
loopne
pusha
clc
repz
xchg
xor
test
fists
orl
mov
mov
insb
dec
pop
test
jo
fildl
aas
test
std
mov
icebp
cmp
mov
push
inc
push
imul
sbb
inc
mov
out
inc
repz
decl
es
add
dec
mov
adc
mov
fldt
xchg
test
add
xchg
pop
pop
aas
cli
int3
xchg
mov
pusha
mov
sub
cli
or
xchg
jp
fsubs
add
test
inc
inc
or
cmp
in
push
xchg
inc
les
scas
paddb
or
sbb
in
or
xchg
jp
push
mov
mov
mov
jg
aad
pop
fisubs
dec
push
mov
imul
cld
push
aas
data16
push
add
add
mov
into
pop
mov
or
les
pop
aam
jecxz
xchg
push
dec
jno
add
dec
aam
sub
xchg
push
popf
mov
sbbb
addr16
btc
mov
ficoms
fisubs
lock
rcrb
rcl
lahf
xchg
in
movl
mov
mov
cmpsl
jge
dec
into
adcb
sbb
inc
add
xchg
push
imul
dec
sbb
mov
add
out
cld
or
mov
ror
adc
add
jne
xor
hlt
stc
repnz
repz
and
lcall
fistl
push
cmpsl
repnz
scas
nop
or
mulb
add
mov
and
int3
out
xchg
pop
xchg
mov
call
xchg
lahf
cs
and
fmuls
adc
push
mov
or
dec
lods
shrb
out
jnp
sub
out
enter
jo
clc
and
enter
test
sub
sbb
leavew
cmp
andb
enter
int3
lcall
in
push
lcall
xor
xchg
shrl
mov
dec
sbb
or
nop
inc
xor
iret
xchg
pop
outsl
pop
mov
pop
cmpsl
fistl
jg
jbe
inc
sub
mov
aam
mov
mov
and
adc
adc
pop
mov
repnz
jl
rolb
xlat
popf
pop
or
mov
jp
inc
cmpsl
xor
add
neg
movsl
jp
adc
mov
dec
std
pop
iret
push
int3
cmp
or
int
add
jmp
mov
ss
sub
push
es
mov
sub
das
ret
and
orl
mov
lret
fbstp
mov
add
fimuls
pusha
cmp
je
mov
loopne
data16
xor
mov
subl
push
xchg
ret
sarb
push
dec
dec
data16
test
mov
pop
enter
je
dec
push
dec
push
sbb
mov
cmc
imul
scas
xor
adcl
loop
lahf
or
stos
loop
outsb
in
adc
mov
jne
mov
int3
les
jns
repz
into
imul
pop
nop
cmp
cmp
inc
inc
mov
sbbl
cmp
lcall
int3
pop
call
mov
test
js
pop
lcall
add
adcb
sti
sbb
and
mov
mov
push
push
pxor
out
add
imul
add
lret
sbbl
mov
iret
addr16
loope
cli
mov
mov
cmpsb
aad
jp
inc
sahf
pop
movsl
std
push
add
xor
cmp
dec
loop
out
shrl
into
xchg
dec
jg
mov
or
pop
sub
loopne,pt
xchg
addr16
stc
sti
fdivrl
ret
and
ret
fistpl
lret
mov
and
rcr
call
cmp
arpl
lods
push
xchg
mov
fldl
xchg
sti
mov
ja
loopne
lea
mov
fcomps
dec
add
data16
or
mov
jmp
xchg
push
ret
into
addr16
pop
sbb
nop
repz
or
loope
mov
mov
jg
ffree
ljmp
mov
inc
lea
pusha
fstpt
xchg
add
mov
ja
sbb
ret
in
movsb
test
and
xchg
scas
xor
aad
mov
sub
ret
loope
mov
test
scas
xchg
pcmpeqd
nop
sahf
sub
mov
xchg
loop
lret
jns
out
jp
mov
fmuls
rol
fwait
dec
addl
dec
ja
sbb
mov
rorb
in
or
mov
push
movsl
rol
inc
push
flds
dec
jbe
inc
loop
in
insb
sbb
nop
pop
fldcw
cli
pop
outsl
push
push
sub
adc
adc
call
sub
loop
into
pop
xchg
push
rcl
stos
xchg
dec
dec
xchg
std
pop
dec
std
adc
ss
mov
insb
jne
sub
out
mov
movsl
jecxz
mov
stos
dec
lea
out
pushf
add
out
mov
testb
mov
jnp
out
aad
fildl
xor
xchg
jno
jbe
std
cmp
add
aad
xorl
mov
inc
fdivrs
cld
ss
cs
stos
or
dec
jg
jge
or
pop
add
jecxz
sbb
jns
lret
xchg
mov
leave
mov
xchg
cmpsl
add
jg
or
sbb
lock
int3
xchg
lahf
cmp
cltd
addr16
cmc
test
or
ret
mov
sbb
addb
dec
sub
push
and
jb
loope
push
xchg
dec
sub
adc
mov
sub
hlt
xchg
cs
mov
or
shrl
scas
sbb
stos
lahf
ss
rcl
iret
or
sbb
rolb
jns
iret
iret
and
jno
pop
aaa
cwtl
cwtl
xor
xchg
outsb
out
inc
sbb
mov
xor
clc
js
gs
cmpsl
cs
aam
adcb
push
or
jnp
mov
mov
xchg
and
fisubl
and
or
lea
push
mov
inc
fldt
cltd
cmpsl
hlt
lret
lock
xchg
jne
test
js
mov
or
jnp
call
mov
mov
mov
mov
adc
adc
enter
cmpb
and
add
xchg
add
add
sbb
jb
sbb
push
int3
mov
push
cli
jb
cmp
xchg
or
mov
sti
aad
adc
out
mov
adc
fldt
and
xchg
xchg
movsl
ror
cltd
stc
addr16
jne
lret
sub
call
sahf
sbb
cltd
inc
inc
adc
fdecstp
xchg
cmp
inc
mov
repnz
cmpsl
push
out
nop
add
mov
jl
jmp
nop
sub
jl
mov
aad
int3
stos
pop
xchg
orb
das
lret
pop
mov
sbb
mov
or
and
push
nop
cmp
test
lret
xchg
stos
pushf
imul
xchg
je
add
inc
movsb
push
fiaddl
imul
mov
lcall
sbb
enter
mov
into
pop
adc
sub
jo
xchg
mov
ja
repz
push
ds
mov
xchg
dec
sub
mov
aas
jl
or
gs
mov
shlb
lods
inc
xor
push
jecxz
rorb
imul
shl
lahf
test
mov
mov
xchg
mov
xchg
outsb
cld
mulb
mov
inc
add
push
pop
inc
mov
mov
mov
or
xchg
lods
or
int3
inc
add
mov
pop
push
cwtl
into
ds
mov
sub
aad
rolb
jns
fsubp
or
jo
add
lcall
cmp
xor
pop
scas
cld
lcall
pop
fisubs
movsb
or
aad
mov
jbe
jle
fldl
enter
mov
sub
repnz
mov
cmp
mov
xchg
pop
xchg
aad
ret
xchg
addl
mov
xchg
xchg
mov
loop
xchg
lods
or
loopne
jo
cmp
addr16
pop
or
pop
mov
shr
dec
rolb
sbb
inc
fwait
call
test
dec
int
adc
or
push
mov
add
call
jl
movsl
sub
cmpsl
mov
lahf
test
sub
pop
lret
sahf
adcb
sub
mov
dec
xchg
aam
dec
pop
inc
mov
ret
push
and
out
cli
out
xchg
hlt
push
nop
es
ret
adc
iret
sbb
and
data16
jecxz
push
loope
mov
stos
inc
aas
imul
mov
jb
jae
mov
aam
dec
mov
push
push
insb
mov
sahf
xchg
shll
ret
fisubs
push
addr16
sub
add
mov
push
mov
cmp
scas
int3
pop
repnz
inc
ds
cmpsl
xchg
shrl
bound
dec
mov
je
mov
xchg
xchg
sti
cmc
enter
fs
es
mov
push
fwait
lds
lcall
jo
push
sbb
inc
mov
mov
xchg
mov
mov
movsb
rolb
outsl
les
sub
inc
inc
sbb
pop
int
adc
movsb
lds
mov
js
push
roll
orb
pop
dec
push
ret
lcall
movsb
mov
addr16
movsl
mov
push
dec
or
in
loope
outsb
jb
jl
out
mov
xchg
mov
push
lods
xchg
test
fmul
bound
pop
xchg
data16
push
mov
cmp
imul
shll
es
push
sub
xchg
mov
fildl
iret
cmpsb
xchg
push
js
push
imul
mov
aam
iret
push
lret
add
sti
and
and
sub
icebp
mov
arpl
add
leave
and
enter
out
or
je
outsb
ret
cli
jcxz
ss
dec
out
add
add
fcomps
rol
in
xchg
stos
mov
fsubrl
push
mov
test
stos
in
iret
or
mov
mov
jnp
stos
jp
iret
xchg
push
sarb
jge
aam
sbbb
xchg
popf
es
pop
mov
sahf
or
xlat
js
fadds
rorl
jbe
add
pop
push
mov
jle
xor
sahf
xor
mov
pop
push
sti
cld
popa
mov
jp
or
xorb
xchg
out
imul
cltd
mov
mov
into
dec
cwtl
xchg
in
mov
rcrb
enter
addr16
adc
mov
shlb
xor
pusha
incb
popf
int3
cmpb
repnz
adc
lret
or
dec
rclb
mov
rol
movsb
sub
lahf
mov
or
dec
mov
push
mov
cmp
arpl
repz
shll
int3
out
in
mov
mov
fists
lods
ret
add
es
movsb
repz
nop
and
mov
jge
iret
lock
test
into
push
mov
les
cwtl
cmp
mov
push
mov
rolb
sarb
dec
lods
nop
addr16
dec
or
push
rcrl
fnsave
xchg
imul
mov
enter
dec
push
add
sub
pop
jg
addl
lods
push
cmp
xchg
xor
icebp
stc
cmpsb
shlb
out
into
mov
addr16
lahf
jo
mov
fisubrl
addr16
xor
mov
inc
xchg
aas
leave
stos
dec
arpl
test
jge
sub
cmpsb
cmp
push
addr16
or
xchg
fistl
adc
scas
out
int
jnp
lods
push
or
adc
xchg
pushf
into
out
stc
xchg
call
mov
ffree
aas
cmp
into
jne
int3
push
stos
xchg
lcall
sarb
dec
cs
shll
mov
iret
shlb
mov
enter
mov
mov
fsts
arpl
xchg
pop
lret
addr16
mov
adc
jnp
mov
xor
xchg
shll
sub
mov
call
repz
pop
mov
lret
leave
ret
sbb
test
and
fcmovu
and
mov
rclb
mov
mov
mov
pop
push
and
movsb
xchg
xchg
ja
popw
jne
and
mov
aas
into
jg
mov
xor
push
je
mov
andb
push
loopne
gs
into
pushf
insb
out
mov
push
clc
push
xchg
cmp
or
mov
and
pop
cmp
fildll
arpl
test
roll
sub
add
inc
das
jae
fildll
scas
dec
cli
push
je
push
mov
rcr
in
lahf
les
xchg
sbb
addl
scas
pop
in
nop
shlb
pause
scas
insb
repnz
xorb
out
ret
mov
xchg
xlat
outsb
insl
iret
lahf
stc
adc
mov
xchg
out
xchg
adc
sub
out
mov
cmpsb
or
mov
outsl
or
adc
sbb
xlat
push
out
das
lahf
xchg
inc
sub
jl
push
pushf
aaa
es
push
sbb
mov
lret
ret
mov
ret
mov
xchg
jecxz
cmpl
inc
iret
addr16
xchg
enter
fstp
mov
idivl
mov
add
push
flds
fs
mov
xlat
lods
xorl
fisttpl
mov
out
ljmp
fcomi
sub
jg
xchg
pop
loopne
out
into
iret
ljmp
sub
das
inc
adc
dec
push
fwait
pop
xchg
pop
daa
and
pop
mov
mov
int3
cwtl
push
js
loop
call
and
out
in
mov
cmpsl
das
mov
iret
lds
mov
call
mov
in
xlat
cmpsb
mov
mov
test
mov
dec
dec
mov
inc
push
inc
xchg
daa
mov
hlt
pop
inc
xchg
test
pop
mov
test
mov
push
popf
adc
repnz
inc
mov
outsl
imul
mov
xchg
mov
cmpsb
push
mov
iret
andb
dec
xchg
leave
shrl
pop
std
adc
xchg
loop
and
mov
sub
clc
mov
xchg
inc
into
adc
addr16
movsl
add
xchg
mov
test
mulb
inc
stos
stos
and
push
shll
add
jae
mov
call
push
mov
lea
std
into
pop
mov
cmpsb
or
adcb
stos
test
pop
dec
bound
dec
mov
push
ror
inc
mov
push
mov
dec
inc
mov
add
subl
xchg
cs
sbb
movsl
cmpsb
aad
daa
rorl
mov
push
mov
sbb
adc
test
add
pop
jp
jmp
inc
xchg
xchg
or
sub
ret
and
out
jg
ljmp
fs
aas
loopne
jl
push
and
cwtl
orl
mov
ret
push
fwait
in
ja
dec
jg
mov
or
sti
sbb
lret
xchg
in
sbb
mov
push
mov
ficoml
xor
mov
ljmp
sub
test
outsb
lods
xchg
subl
push
fistpl
xchg
jmp
mov
fwait
lods
and
pop
push
xor
dec
test
adc
or
xchg
cld
test
fnstsw
fdivr
into
or
and
test
push
fmulp
inc
mov
popf
sub
js
ret
mov
push
andb
add
lret
inc
xchg
sahf
inc
into
mov
add
stc
xchg
adc
push
add
xor
jmp
pop
daa
outsb
lcall
rcr
mov
lods
orl
test
out
xchg
mov
inc
mov
push
lret
push
leavew
ret
ss
adc
or
mov
repz
outsl
fnsave
test
xor
insb
call
xchg
call
clc
repnz
xchg
jns
out
xchg
dec
pop
sbb
decl
dec
jbe
lcall
hlt
push
jmp
testb
rolb
data16
adcl
repnz
decb
mov
aaa
mov
or
clc
pop
add
push
inc
xor
sub
test
jae
sbb
out
jo
mov
repz
repz
push
mov
push
test
insb
es
push
inc
mov
aad
push
xchg
mov
jnp
dec
mov
movsl
mov
cli
jb
shrl
push
sbb
clc
daa
xchg
sbb
xor
in
jp
jl
lds
or
jmp
iret
lds
cltd
std
or
std
ret
das
cmpsb
leave
ds
jecxz
jl
movsl
cmp
scas
xchg
xchg
and
clc
test
add
xorb
push
pusha
popa
scas
add
lret
xchg
mov
push
fstpl
or
push
gs
mov
sbbb
lock
fisubrl
jno
sub
stc
rorb
push
aad
and
inc
call
mov
jne
outsl
stos
or
pop
push
rcll
test
and
sub
or
popf
and
mov
mov
aam
and
popa
sub
mov
mov
add
xchg
int
mov
xchg
addr16
xchg
insb
xlat
jg
call
fstl
rolb
sub
jg
cmpsb
dec
jbe
mov
cwtl
push
addr16
ffreep
cs
loop
movsl
inc
rorb
jae
xchg
addl
jnp
repnz
sub
ret
loop
cmp
adc
or
int3
jg
push
adc
xchg
test
rorl
sti
xchg
add
mov
mov
xchg
push
hlt
cwtl
xor
mov
or
push
outsl
mov
in
insl
adc
xchg
out
dec
fstl
decb
int3
cli
test
rcll
adc
ret
mov
outsb
cltd
cmpsb
add
shl
xchg
je
and
xchg
push
xchg
xlat
aam
loop
test
jle
push
rcll
push
xor
xchg
je
lcall
repnz
lods
push
cmp
jl
push
xchg
testl
movsl
rol
test
fiaddl
mov
mov
pop
mov
addr16
imul
sbb
push
xchg
mov
cmp
test
xchg
data16
pop
cmp
test
adc
nop
cld
ljmp
mov
or
scas
es
or
push
xchg
mov
sahf
xchg
sub
add
jl
and
sub
mov
mov
out
aad
dec
shlb
lds
mov
mov
scas
add
cmpsb
repnz
icebp
sbb
and
or
add
jns
arpl
stos
mov
ret
mov
data16
xchg
repnz
stos
repz
scas
into
in
mov
push
shrd
loopnew
in
stos
sbb
and
cmpl
in
sbb
insl
orb
push
mov
cmpl
or
and
test
ja
bound
xchg
aad
es
cmp
lahf
aaa
mov
cltd
mov
mov
mov
jb
push
sub
jp
int
bnd
inc
pop
imul
sbb
aam
dec
cwtl
popf
fsubr
sub
or
jae
push
or
mov
mov
stos
enter
mov
fistl
mov
stc
hlt
incl
cli
push
sbb
inc
jge
pop
jb
jg
xor
lcall
loop
push
outsb
pop
jne
dec
mov
jbe
mov
adc
or
dec
adcb
cld
jnp
js
xor
xchg
std
imul
test
or
jno
and
jnp
in
repnz
cwtl
pop
int
sub
addr16
and
fiaddl
add
test
pop
xchg
pop
cmp
into
inc
xchg
not
ret
inc
cmpsb
stc
popl
jno
int3
mov
dec
es
orb
jb
xchg
insl
and
add
test
call
mov
addb
jp
add
repz
rcll
data16
loope
inc
call
lahf
enter
loop
outsb
nop
push
cmpsb
addl
add
subb
pop
mov
mov
xchg
pop
rol
enter
mov
inc
jg
push
cmpsb
scas
mov
and
xor
inc
sahf
add
pushf
outsb
and
test
sub
aam
test
jp
into
push
push
test
rol
mov
adc
sbb
push
dec
arpl
lods
jns
pusha
push
test
inc
inc
arpl
xlat
add
lock
loope
inc
mov
sahf
js
push
aas
insl
fadds
stc
xchg
and
fldcw
dec
xor
rcl
rolb
andb
jp
dec
sti
xchg
cmp
dec
fcmovu
mov
andb
and
mov
pop
popa
xchg
mov
pushf
mov
and
repz
xor
adc
movsb
mov
test
cmpsb
add
pop
cmpsl
pop
leave
arpl
call
jg
les
fcompl
mov
inc
addr16
fwait
mov
lock
push
xlat
cmpsb
cld
mov
loope
jp
dec
lods
hlt
xchg
fmull
imul
push
fcomip
sbb
in
lea
pop
mov
leave
decb
sahf
repz
and
and
imul
xchg
ret
mov
test
xor
repnz
leave
test
adc
test
push
je
test
hlt
enter
lret
xchg
or
sub
faddl
lret
bound
xchg
nop
or
mov
sub
out
mov
jp
sbb
shll
mov
andl
test
out
sub
lods
ret
sub
subb
addr16
sub
outsb
pushf
scas
dec
xchg
sbb
xchg
sbb
or
sahf
daa
sbb
push
and
xchg
in
pop
inc
or
mov
adc
cmp
rcr
pusha
bound
sub
push
push
das
jl
cmp
jae
dec
psrld
cmp
sarl
shll
test
mov
leave
push
inc
rorb
cmc
mov
add
or
adcl
lcall
pop
xchg
push
jo
idivb
mov
push
xorps
ret
std
lahf
std
mov
test
lods
xor
xor
shrb
fstp
insb
xchg
stos
out
jge
lea
mov
leave
sarl
mov
or
pop
mov
push
out
addr16
dec
jp
add
fs
call
push
xlat
jno
repz
lods
mov
movsl
pop
jmp
int3
jp
or
jl
xchg
stos
xor
sbb
cmp
lahf
fwait
scas
inc
lea
cld
ljmp
mov
mov
mov
mov
mov
or
xchg
imul
add
xor
mov
or
dec
lret
dec
add
repnz
mov
push
fists
mov
add
cli
ljmp
mov
jbe
xchg
or
test
inc
cltd
shll
lahf
cli
mov
and
lds
mov
mov
out
test
adc
add
mov
popf
sub
cld
loopne
cld
movsl
cmc
stos
in
pop
popf
or
xorb
out
loopne
jns
cmp
inc
xchg
movups
gs
xchg
pop
inc
sbb
iret
in
mov
pop
sub
lret
mov
jp
mov
addr16
pop
mov
add
cmp
or
jge
in
call
test
cmc
shlb
fisubrs
icebp
cwtl
adc
push
inc
insb
dec
hlt
push
push
jb
sahf
pop
mov
push
xorb
push
cmc
add
sub
mov
push
ret
rcrl
pop
imul
lcall
and
lea
mov
aad
fldenv
orb
dec
jae
lods
addr16
xchg
out
into
adc
loop
sub
mov
loopne,pt
add
inc
push
add
sub
test
jo
scas
pop
iret
mov
les
test
sub
je
adc
add
outsl
jnp
lret
xchg
repnz
push
outsl
cmp
insl
jmp
adc
js
stos
pop
repnz
xchg
inc
jmp
cmpsl
mov
fstl
add
mov
outsb
scas
xchg
mov
or
inc
xchg
imul
lods
clc
inc
stos
nop
jno
lock
cwtl
or
xchg
dec
in
repz
xchg
mov
push
dec
mull
mov
and
push
xchg
mov
cs
popa
push
js
fwait
xlat
push
leave
inc
icebp
out
xor
xor
push
imulb
idivl
dec
mov
push
bound
std
frstor
xchg
push
mov
std
push
inc
fwait
shr
ds
pop
orl
cmp
mov
xchg
jg
push
andl
aaa
imulb
data16
ljmp
push
mov
jg
pop
dec
mov
ret
push
mov
ret
xchg
or
cwtd
jp
push
adc
xor
sub
mov
roll
jl
stos
fcoms
aam
nop
fwait
imul
xchg
imul
mov
stos
mov
xchg
cmp
mov
popa
rclb
hlt
gs
lcall
jbe
enter
lret
lahf
or
mov
aam
mov
cwtl
pop
fcmovb
xchg
or
or
xchg
inc
shlb
add
push
add
fsubrs
sbb
xchg
or
add
mov
repz
mov
pop
repnz
mov
lahf
jne
std
adcb
or
mov
out
fldl
add
jge
hlt
inc
iret
imul
and
lretw
imul
loop
pop
cmp
fwait
add
mov
and
mov
notb
push
ror
into
andl
pop
xchg
sub
andl
aam
in
shll
xchg
rolb
lcall
shl
jecxz
addr16
add
lods
inc
jg
xorb
or
jecxz
lcall
sub
mov
xor
xchg
rol
int
aas
sbb
insl
jne
inc
cmpsl
sub
xchg
cld
out
fildl
lahf
adcb
lret
aas
test
lds
inc
lret
imul
cs
adc
xchg
cli
popa
dec
cmp
cltd
leave
shrl
push
iret
outsb
xor
pop
sub
or
and
lahf
out
xorb
bound
dec
push
ret
gs
mov
rorl
icebp
fisubs
jl
andb
cwtl
fwait
or
push
inc
and
xor
lcall
jo
out
adc
mov
cmp
cld
lea
pop
shlb
popa
cmp
mov
cmpl
cs
pop
add
sub
xchg
cmpsl
imul
push
addr16
pop
inc
and
mov
or
int3
test
int
push
xchg
sub
mov
sbb
jp
rolb
cld
dec
mov
pop
xchg
jne
ss
pop
repz
push
std
jbe
xor
mov
mov
sti
nop
or
mov
pop
fidivs
outsb
or
cli
sub
add
jbe
fisubl
jae
es
jne
shlb
add
or
cli
rorb
and
jno
inc
repz
mov
stc
notb
or
add
dec
inc
mov
subb
xchg
pop
cmp
lahf
movsl
rcrl
jns
lahf
out
fsubl
cmpb
mov
xor
mov
jno
nop
lret
and
nop
aam
nop
sahf
xchg
inc
or
dec
ror
addr16
pop
in
push
data16
and
imulb
mov
mov
xchg
data16
mov
xchg
jl
popa
mov
sub
push
out
fwait
push
fwait
lds
decb
and
inc
adcb
hlt
cmpsl
arpl
in
mov
gs
pushf
into
lods
push
mov
xchg
xchg
lock
jno
mov
mov
bound
loop
xchg
adc
notl
int3
push
jnp
push
xchg
adc
pop
xchg
lret
aaa
test
mov
xchg
iret
mov
jae
fildl
scas
inc
mov
cmpsb
push
negb
call
adc
push
std
mov
cmpsl
add
pop
sub
cmp
push
andl
xchg
ds
adc
inc
outsb
aad
and
loop
call
movsb
xor
in
popa
mov
stos
in
push
ret
cmp
rcr
pusha
sbb
mov
loop
popa
xlat
inc
or
fists
inc
fcoms
roll
dec
addr16
cwtl
mov
xchg
mov
cld
and
mov
mov
cmpsl
pop
sbb
fwait
mov
cmp
shrl
adc
mov
leave
adc
hlt
pop
lock
fs
je
cld
pop
jp
pop
jns
movl
cmp
lock
sub
out
xchg
addr16
xor
lock
xchg
dec
arpl
pusha
daa
cwtl
adc
shrb
cmpsl
pop
xchg
xchg
aas
cwtl
cli
dec
jae
sbbb
or
mov
shll
rol
rol
lret
addl
pushf
jl
movsl
pusha
xchg
push
int
enter
inc
sbb
das
mov
push
mov
cmpl
ss
pop
cmpsb
add
out
pop
mov
add
push
ror
inc
xlat
cmp
pop
jmp
inc
sbb
shll
adc
add
jg
mov
push
xchg
ret
push
adc
push
idiv
jae
das
stc
ret
push
mov
jnp
add
ret
sbbb
dec
int
push
test
mov
test
add
mov
iret
xor
mov
lods
inc
mov
shl
jmp
add
push
pop
mov
cli
mov
inc
repnz
int3
in
inc
jnp
pop
ljmp
pop
pop
fisubrl
jg
dec
imul
call
jle
jbe
enter
jnp
stos
imul
inc
lock
in
sbb
mov
in
lea
jns
add
je
adc
nop
cltd
addr16
jp
xchg
scas
pop
mov
jg
adc
fwait
pop
or
add
and
mov
push
scas
fisttpll
scas
and
mov
cld
xchg
add
ja
pusha
incl
in
cs
add
adcb
or
fsub
add
xchg
rcrb
mov
mov
ljmp
mov
je
aam
add
mov
lcall
fcomip
xchg
or
sub
fidivs
or
mov
mov
pop
cmp
shl
daa
in
xchg
repnz
aaa
cltd
into
dec
test
clc
push
mov
sahf
mov
aas
mov
addr16
stc
dec
std
inc
fwait
dec
jne
mov
xchg
mov
rorb
add
mov
xchg
xchg
rorl
dec
add
add
inc
sub
mov
xchg
imul
jns
insb
jmp
cmp
pop
lahf
pop
lods
sbb
pop
jecxz
bound
cmp
push
negb
push
leave
stos
mov
scas
push
movsl
aaa
push
hlt
mov
pop
loopne
repz
ljmp
mov
xor
xchg
mov
sub
lock
mov
sub
inc
inc
cwtl
push
sbb
leave
into
iret
inc
pop
xchg
and
cmc
or
mov
ret
xchg
push
lret
mov
push
xchg
sub
mov
mov
lds
les
insl
movsl
jl
mov
shlb
in
mov
sbb
test
repz
or
xchg
mov
inc
sbb
xor
fcom
xor
cmpsl
popf
test
subl
and
xchg
test
jg
adc
lcall
imul
icebp
mov
inc
fdiv
daa
sbb
and
shr
fistl
ds
adc
and
push
sbb
mov
rclb
xchg
xchg
iret
call
movsb
xorb
jb
mov
jbe
jb
xorb
int3
in
push
sub
push
outsb
inc
cmp
jl
sub
fdivs
xchg
xchg
pop
aas
jb
cmpsl
and
and
fcoml
enter
stc
aaa
lock
fmull
add
jb
ret
pop
cmp
cmp
dec
lret
filds
jecxz
mov
mov
inc
fildll
mov
fisttpl
sub
xlat
or
mov
push
push
outsb
sbb
fwait
add
lahf
add
pop
inc
and
mov
xchg
imul
test
inc
mov
out
test
inc
imul
test
scas
inc
lods
idivb
test
xchg
inc
test
jbe
pop
lret
jnp
lea
fmuls
mov
cmp
xchg
fwait
int3
xchg
pop
xchg
orb
nop
mov
mov
add
cmp
shld
sti
mov
pop
add
jge
push
fwait
cli
fs
mov
pop
xchg
addr16
cs
int3
xchg
mov
or
imul
into
pop
sub
mov
out
xchg
pop
scas
adcl
cmp
das
cmpsl
xchg
test
out
push
push
mov
inc
nop
addr16
mov
mov
mov
aas
lcall
scas
dec
sbb
roll
cmpsl
out
mov
xchg
int
jp
pop
sbb
fwait
mov
inc
or
test
adc
mov
mov
bound
data16
sub
pop
fildll
not
fcoml
and
sti
or
bound
cld
dec
inc
into
pushf
lds
xchg
imul
subb
lret
adc
sahf
inc
or
dec
stos
lea
aas
std
pop
leave
iret
sub
std
shl
jns
mov
pcmpeqb
out
push
sbb
in
movsb
imul
fcomi
andb
loope
mov
ds
adcb
cmpsl
or
pop
vmovhpd
out
enter
shll
mov
out
mov
rcr
stos
xchg
and
or
jns
movsl
lds
setbe
ficompl
adc
mulb
lea
pop
inc
std
and
mov
or
ficoms
lock
inc
inc
or
mov
mov
sbb
data16
shl
xor
inc
xchg
imul
loopne
nop
hlt
pop
adc
sub
ja
lahf
mov
jns
inc
sub
adc
sahf
add
xchg
loop
pop
jo
fstpt
pop
insl
sub
or
sahf
jmp
repnz
inc
test
cltd
push
adcl
xor
les
xlat
sub
jbe
lods
loopne
add
mov
dec
les
mov
mov
stc
ss
pop
xchg
data16
add
and
addr16
fwait
je
cmp
xor
or
inc
or
jbe
mov
fwait
inc
decb
aad
add
test
pusha
mov
add
xchg
pop
push
imull
aas
jp
push
inc
loop
nop
xchg
xchg
mov
sti
out
cmp
leave
xchg
jns
lods
inc
xchg
lds
movsb
xchg
sbb
xchg
inc
nop
pop
sub
mov
rorl
push
mov
shrb
or
and
inc
lahf
dec
or
lret
nop
mov
sar
push
xchg
or
dec
in
adc
jge
sbb
int
leave
imulb
add
in
and
int3
int3
xchg
jge
lret
xchg
xchg
add
fdivl
xchg
nop
xchg
add
test
jns
adc
xchg
inc
out
pop
mov
mov
ret
and
int3
data16
int3
cmp
xor
out
test
dec
fnstsw
inc
lea
addl
leave
cltd
ljmp
mov
nop
addr16
aad
and
aas
addl
pop
xchg
mov
pushf
addl
adcb
dec
addr16
addr16
jge
jo
mov
lea
ret
xor
or
cmp
fstpl
iret
ljmp
mov
mov
or
xchg
aad
add
push
push
sub
rclb
xlat
in
cs
inc
push
imul
mov
push
xchg
mov
test
push
pop
cvtpi2ps
outsb
std
cwtl
jae
roll
or
ss
add
or
adc
aad
jbe
pusha
test
fistpl
orb
jne
sub
xlat
xchg
je
cmp
jg
xchg
mov
cmp
or
enter
mov
xchg
add
add
add
call
das
xchg
mov
cltd
cmp
test
push
fdivl
orl
movsl
pop
xchg
or
mov
mov
or
cmp
dec
jo
dec
mov
aas
push
sbb
dec
xor
test
mov
or
mov
aas
pop
inc
jle
out
lahf
insl
pop
iret
rolb
ret
ret
loopne
fcoms
mov
adc
data16
mov
movb
mov
nop
addr16
loop
popf
jo
sarl
cmp
mov
inc
nop
lods
sub
adc
test
or
sti
xchg
pusha
adc
lret
dec
sbb
or
mov
xor
inc
loop
pop
aad
pop
mov
ljmp
add
push
inc
ret
add
fsts
jecxz
stos
and
mov
or
ss
mov
xor
clc
sub
dec
ljmp
js
iret
inc
sbb
sti
fmul
lret
scas
and
cmp
test
test
fcomps
inc
lods
sub
les
stos
ret
fisubl
loope
mov
ds
mov
mov
lret
nop
mov
scas
test
cmp
xor
aas
lcall
mov
push
cwtl
shlb
adc
insl
inc
cmp
pop
xchg
pop
arpl
inc
scas
cmpsb
pushf
xchg
adc
xchg
mov
mov
push
das
mov
fwait
xchg
jbe
mov
add
pushf
inc
inc
xchg
roll
xchg
shl
sbb
mov
or
cmpl
in
andl
mov
or
adc
into
inc
shrb
xchg
fldl
call
rorb
lods
and
call
jge
ljmp
pop
xchg
inc
mov
mov
lret
dec
out
je
mov
mov
rcl
push
add
push
lods
jp
push
nop
scas
insb
push
mov
idivl
das
cli
scas
or
and
jmp
inc
pop
cmpsl
xchg
and
push
mov
xchg
mov
xchg
push
scas
lret
popl
xchg
pop
dec
sub
cmp
outsb
in
mov
orps
iret
in
test
cmpl
adc
mov
addr16
xchg
test
das
enter
ljmp
fdivs
push
mov
enter
xorl
sahf
stos
jnp,pn
les
mov
nop
sbbb
repnz
inc
data16
pop
push
cmp
xchg
sub
push
pop
inc
scas
sbb
icebp
ljmp
cmp
cli
scas
mov
outsb
mov
xchg
aad
clc
test
and
lods
jo
mov
and
jnp
dec
stos
inc
xchg
aam
dec
xor
cmp
xlat
lods
insl
aas
dec
or
xlat
mov
pop
lcall
imul
push
ret
cmp
xchg
cmp
nop
je
loope,pt
cltd
decb
xchg
shll
sub
pop
pushf
mov
fwait
add
cmpsb
daa
sbb
inc
les
testl
in
pop
movsl
shl
or
cmpsb
xchg
in
int
gs
test
xchg
cmp
lock
xchg
pop
jecxz
adc
cltd
mov
add
mov
cmc
xchg
push
test
std
and
cmp
jns
pop
or
sbb
pusha
aas
mov
aas
es
aaa
and
lods
fwait
jecxz
xchg
out
arpl
lods
xor
or
ja
ja
xchg
stos
inc
sbb
xchg
or
xor
cmpsb
adc
or
mov
sub
je
shlb
rolb
aam
jecxz
xchg
lret
jle
xchg
jp
cmc
push
shlb
test
bound
adc
mov
push
mov
cmpl
inc
jg
lea
mov
sti
roll
nop
aam
cmp
outsb
aas
ja
lahf
repnz
stos
lods
and
jge
sub
sahf
mov
in
aaa
nop
ja
out
xchg
cwtl
inc
add
sub
xchg
add
test
adc
and
mov
mov
lods
test
xor
or
cld
xchg
ret
xor
test
test
into
lods
ret
inc
call
push
sbbl
mov
ds
rorb
mov
dec
sbb
add
sub
les
lahf
int
sub
xacquire
pop
repz
popa
add
xchg
sub
xchg
sbb
mov
hlt
cmpsb
movsb
add
push
test
mov
xchg
sarl
mov
or
ret
popf
lea
ds
je
mov
dec
lea
shl
cmpsb
mov
xchg
cwtl
xchg
mov
xchg
into
xchg
inc
add
jl
ja
jno
mov
out
push
pop
xchg
mov
ret
add
leave
cmp
insb
test
mov
dec
lods
and
pop
movsl
jb
mov
decb
outsl
pop
xchg
push
loopne
jp
inc
addr16
idivb
or
fstps
or
ds
pop
xchg
cwtl
mov
ds
jge
or
fwait
inc
setge
dec
pop
lret
xor
pop
rcr
pop
or
cwtl
sub
cmpsb
outsb
xchg
mov
sbb
sahf
cli
push
loop
xor
sbbb
dec
jne
fnstsw
xor
lea
daa
mov
mov
push
fldl
sar
mul
bound
movsb
xchg
push
int
push
sbb
in
jg
leave
nop
cmpl
aas
sub
jo
lods
xchg
hlt
cmp
lret
pop
test
es
mov
pushf
into
mov
or
mov
cmp
adc
test
jb
inc
cs
scas
cmp
mov
pop
or
repz
add
jno
aam
inc
pusha
xorl
dec
inc
sahf
fcmovb
loopne
and
xor
pop
adcl
adc
dec
mov
dec
popa
pop
fst
out
jmp
gs
mov
outsb
xchg
rorl
divb
inc
add
icebp
mov
cmp
push
add
jbe
mov
leave
lods
jp
lahf
mov
nop
ss
fcmove
sub
mov
cmpps
je
subl
pop
xor
pop
xchg
adc
xchg
adc
adc
adc
shlb
lds
add
int
mulb
stos
pop
sbb
jmp
sbb
fdivr
xchg
rep
js
mov
mov
jge
inc
inc
jnp
mov
xchg
imul
shlb
movsb
xchg
xchg
sub
lcall
nop
add
cmp
sbb
pop
pop
xchg
or
mov
pop
dec
dec
int3
jnp
cmp
xchg
repnz
xchg
lods
out
inc
mov
xor
or
jl
mov
cmp
and
inc
xchg
ss
xchg
mov
inc
mov
push
add
mov
cli
test
ja
jne
test
jp
pusha
ret
add
mov
ret
sbb
add
dec
repnz
in
je
clc
push
imul
push
mov
push
xchg
cmpsb
addr16
xor
frstor
xchg
add
aas
xor
data16
pop
js
mov
mov
push
xor
movsb
push
sub
in
or
add
mov
push
imul
cltd
sub
or
iret
mov
sbb
je
jo
pop
lods
push
enter
xchg
xchg
cmpsb
addr16
rcrl
mov
jb
popl
popf
aad
dec
addb
rolb
inc
lea
and
dec
mov
pop
repz
push
dec
xchg
dec
nop
push
add
bound
andb
and
push
mov
leave
daa
xchg
cltd
or
sub
cltd
mov
mov
xor
rcrb
xchg
pop
mov
xchg
pop
lcall
mov
sub
rclb
aaa
pop
mov
fldenv
adc
mov
mov
dec
and
ret
pusha
pop
iret
adcb
inc
sahf
xlat
addr16
aam
add
fiaddl
xchg
mov
aad
fidivrs
push
mov
nop
movl
xor
mov
sbb
xchg
rcr
ret
loopew
movsl
or
xor
push
jb
jb
mov
mov
imull
sarb
inc
aad
mov
popf
data16
clc
repz
addr16
aad
fsubrs
es
lods
movsb
pop
cmp
lret
sti
fistps
lret
sub
lea
imul
inc
xor
push
xchg
mov
es
int
xor
ret
mov
je
add
inc
mov
loop
mov
push
mov
enter
mov
dec
pop
sahf
jns
inc
out
and
cmp
imul
xor
scas
dec
cmpsl
test
inc
xchg
in
int3
lcall
jne
ret
add
icebp
inc
xchg
fdivr
mov
mov
clc
gs
ja
xchg
sbb
out
cli
push
sub
and
xchg
test
cli
add
divl
sbb
rcrb
jbe
adc
ret
dec
mov
imul
nop
pop
jge
test
adc
rcrb
xchg
jl
lcall
push
mov
out
fs
jecxz
and
leave
aad
sbb
popl
enter
or
mov
movsb
xor
sbb
inc
mov
inc
cld
xchg
aad
xor
mov
shll
daa
fwait
adc
mov
push
ret
test
scas
cmp
scas
adc
inc
lcall
addr16
in
int3
mov
repnz
push
lock
inc
adc
or
popl
and
stos
test
movsl
ds
sti
pop
push
sbb
push
rcrb
addb
jle
inc
data16
sbb
out
mov
adc
pusha
shlb
and
bound
leave
aaa
fidivrs
cmp
dec
or
lea
fcomps
and
mov
cmp
rcl
popa
mov
and
sarb
imul
lcall
sub
mov
jp
jecxz
jle
into
data16
orl
jno
adc
sbb
pop
fldz
pop
pop
sub
xchg
enter
or
cmp
xchg
xchg
or
mov
mov
inc
or
push
mov
jecxz
adc
adc
jl
mov
dec
test
insl
movsl
lods
adcb
aam
xchg
jp
stc
inc
lret
jg
cmp
and
ja
sarl
ss
push
pop
test
jnp
adc
repnz
jb
popa
in
sub
mov
jne
inc
repnz
jae
fisubrs
mov
sbb
dec
xor
jb
std
xor
and
es
repz
or
push
xor
enter
mov
jl
subl
jb
sub
jbe
je
xchg
xchg
es
or
mov
imul
movsl
mov
xchg
xchg
mov
push
lahf
push
lods
out
outsl
xor
sti
cmpsl
or
add
cltd
xor
mov
inc
rorl
mov
xchg
andl
dec
lods
push
int3
andb
mov
add
subb
pop
mov
mov
jl
out
xlat
loopne
mov
and
js
sub
adc
add
rcr
push
sahf
xchg
inc
incl
mov
pop
mov
pop
enter
jne
add
dec
or
xchg
xchg
sarb
inc
call
mov
xchg
cmp
scas
mov
xor
cltd
mov
lret
sub
scas
push
dec
push
lahf
rorl
add
mov
pop
or
jecxz
das
clc
jg
repnz
rcll
into
sbb
popa
xorl
mov
sbb
inc
sbb
xchg
mov
test
rclb
fcmove
sub
rcrw
jmp
stos
imul
loopne
das
ss
nop
int
ja
push
pop
lahf
pop
nop
dec
xor
addr16
es
inc
arpl
dec
rcl
sbb
push
and
mov
pop
loopne
fldcw
addr16
into
add
sbb
testl
scas
adc
jge
sbb
shlb
pop
mov
cmpl
fisubs
xchg
cmpsl
sahf
mov
sbb
mov
nop
adc
dec
push
cmpsl
jp
lds
cmp
mov
mov
je
jl
ret
icebp
mov
mov
test
push
lods
sbb
test
jmp
xor
into
xchg
repz
in
mov
addr16
mov
out
inc
mov
xchg
lea
cmp
popf
xchg
into
mov
test
xchg
mov
mov
movsl
pop
pop
mov
out
mov
rol
mov
mov
stos
and
sti
orb
std
pop
loopne
je
das
xor
xlat
jno
je
inc
cmpsb
test
test
mov
frstor
sbb
loopne
frstor
xchg
lods
call
and
stos
lea
pop
cmpsb
popf
mov
addr16
daa
fbstp
mov
sub
sub
adc
jbe
call
adc
notb
xchg
daa
testb
mov
rclb
movsl
aad
xor
aas
loopne
mov
sub
pop
bnd
fnstsw
mov
cmpsb
cmpsl
lods
shl
pop
int
cwtl
sbbl
mov
add
dec
inc
xor
dec
jo
ljmp
mov
scas
out
adcb
xchg
cli
pop
mov
xor
les
sub
out
lock
or
adcl
flds
xchg
mov
lret
ds
clc
insl
cmp
push
sarl
cmp
inc
and
pop
mov
add
je
sbb
mov
sub
add
clc
arpl
or
int3
inc
or
orl
stos
mov
add
ljmp
dec
mov
adc
pusha
leave
lcall
jg
test
cli
bound
mov
add
outsl
cmp
adc
addr16
push
mov
mov
dec
lds
push
and
push
cmc
outsb
aaa
jmp
jne
cmpb
addr16
fsts
test
lods
icebp
cmpsb
add
incl
or
xorl
fwait
decl
sahf
and
push
call
sbb
sbb
repz
push
fists
dec
insb
test
jnp
ljmp
arpl
imul
mov
scas
xchg
xorl
push
lods
leave
aaa
in
lret
movsb
cli
cld
xchg
cwtl
test
test
mov
or
movsl
dec
inc
and
imul
xchg
add
push
dec
jnp
pop
out
mov
movsl
fidivs
adc
or
adcb
gs
vpshld
daa
jg
jns
rclb
pushf
std
pop
shll
icebp
pushl
imul
push
xchg
sub
ret
aam
es
movsl
sub
aas
dec
and
pusha
outsb
xchg
stos
cs
imul
pop
notl
xor
ljmp
mov
dec
int
xor
loope
xchg
pop
fisubs
mov
lcall
out
ror
push
jg
mov
shll
dec
ja
sbb
mov
popf
sub
cld
scas
jg
cmpsb
bound
and
ja
sbb
enter
repz
mov
into
pop
fs
lea
mov
cld
sbb
mov
inc
fimull
xor
scas
pop
leavew
dec
add
orb
jp
xchg
nop
pusha
cwtl
test
pusha
and
outsb
aad
and
ret
or
hlt
call
fistpl
ljmp
sub
inc
sahf
sbb
push
sub
int3
mov
frstor
or
push
or
movsb
andb
ret
adc
pop
addr16
fmull
in
push
aad
orl
rorb
mov
push
inc
test
lea
adc
and
test
mov
addb
fists
aam
dec
add
lea
lahf
popl
cmpsl
push
fdivs
loop
arpl
out
ss
add
push
cltd
cmpl
and
cmp
inc
sub
aaa
imul
mov
sbbl
cmp
push
mov
inc
cmp
imul
pop
movl
cmp
int
dec
ret
inc
cli
lcall
sbb
shrw
mov
cwtl
pop
xor
insl
shll
call
outsb
mov
sbb
jae
stc
sbb
lcall
cld
dec
cmp
sub
fnstsw
add
xchg
inc
mov
jl
dec
xor
xchg
xchg
outsb
test
dec
cltd
pop
lahf
push
mov
jge
scas
add
xchg
fdivp
push
jl
inc
jge
fmull
push
xor
push
rclb
mov
jmp
mov
xchg
jne
and
push
repnz
and
js
lret
xor
sbb
dec
test
scas
test
mov
mov
adc
cmp
mov
test
pop
vpperm
pop
cwtl
xor
adc
mov
loopne
add
pop
fmuls
fistpl
lds
push
daa
jns
mov
jg
or
xchg
jg
movsb
mov
pusha
popf
inc
cwtl
inc
mov
or
mov
sti
lret
cmp
mov
dec
jecxz
mov
lahf
sti
cmp
mov
inc
int3
mov
or
mov
rcll
orl
inc
cli
mov
jae
repz
test
and
imul
sahf
fs
icebp
mov
pop
mov
mov
cltd
pusha
xchg
cld
popf
mov
xchg
bound
xor
xor
shll
leave
pop
push
data16
loope
add
jno
enter
jb
into
imul
inc
mov
xchg
call
mov
inc
xchg
pushf
lret
lret
pop
mov
adc
or
and
lods
and
mov
cmp
inc
test
jbe
cltd
addl
push
movsb
fildl
les
out
cltd
sbb
sub
pop
add
adc
out
or
ss
mov
leave
popa
add
movsb
in
pop
mov
xchg
sub
inc
add
pop
lods
cmp
in
arpl
shll
and
add
adc
jg
ja
and
xchg
fscale
js
out
lcall
setle
mov
sub
sub
mov
lret
stos
or
inc
idiv
sub
sub
mov
ror
adc
rorb
xchg
movsl
xchg
scas
shll
mov
jg
xor
out
sub
fisttps
and
mov
xchg
xchg
pop
push
mov
and
inc
mov
pop
adc
in
xchg
or
imul
mov
mov
fwait
sahf
add
outsb
scas
int3
push
mov
in
enter
jmp
pop
dec
jl
out
outsb
lret
repz
and
pop
xor
xor
xchg
inc
test
push
addl
stos
mov
add
inc
cld
xchg
jo
push
xlat
data16
cltd
xchg
dec
out
jl
mov
mov
mov
push
push
insb
push
mov
push
repnz
in
jp
jle
pusha
mov
inc
into
or
mov
orl
jbe
xchg
mov
scas
sub
fstp
pop
xchg
and
jnp
iret
xchg
adc
je
mov
fwait
xchg
mov
fstl
sbb
sub
inc
mov
clc
cmp
and
cmp
jb
in
fxtract
into
mov
and
fsts
sub
xchg
sbb
mov
cmp
sub
shrb
sahf
adc
daa
sub
dec
mov
lods
push
jle
into
aam
or
inc
mov
ret
xchg
popw
nop
add
lds
lea
mov
mov
xchg
jbe
xchg
or
nop
xor
push
mov
jbe
jns
push
mov
lds
fldenv
sbb
xor
dec
imul
xchg
mov
icebp
repnz
mov
dec
lea
lret
push
arpl
rclb
xchg
inc
xchg
loope
leave
lods
call
xchg
repz
mov
repz
and
in
add
bound
in
out
test
into
iret
imul
push
test
xchg
insb
ja
pop
sbb
test
into
imul
xor
mov
ret
mov
out
sbb
or
sbb
xchg
in
movsl
or
std
xchg
cmc
ret
lret
cmpsl
clc
mov
addr16
jno
jo
lods
scas
outsb
or
jg
in
stc
mov
push
icebp
fnstsw
sbb
scas
jns
adc
sbb
sbb
ficomps
call
cmc
inc
lahf
cmpsb
addr16
stos
and
out
imul
dec
lea
cmp
sub
cmp
movsl
push
je
xchg
enter
push
insb
inc
xchg
add
icebp
cmpsl
cmc
cmp
mov
ret
rorl
adc
or
mov
outsb
adcl
insl
pusha
or
xlat
xor
xchg
mov
cmpsb
or
ljmp
dec
ss
xchg
cld
mov
int
push
loop
roll
aad
xor
call
cmpsb
in
jnp
cmp
or
cli
push
inc
pop
xor
jmp
mov
push
jle
pop
pop
enter
xorb
pop
pop
pop
mov
mov
or
mov
pop
lret
addb
adc
addl
xorl
or
aas
push
sub
jle
pop
icebp
ljmp
push
icebp
add
mov
mov
mov
jbe
add
jp
mov
inc
lock
arpl
test
daa
push
cmpsb
stc
pop
rorb
mov
dec
imul
pop
xchg
insb
pop
jnp
imul
mov
scas
xchg
test
or
jbe
push
xlat
and
inc
cmpl
arpl
mov
mov
pop
push
push
xchg
mov
xchg
leave
and
gs
add
or
cmp
shlb
mov
clc
mov
xchg
mov
xor
bound
shll
or
adc
leave
ja
add
shll
pop
pusha
aad
lahf
int3
pop
jae
nop
pop
scas
sbbl
cld
fisubrs
push
fs
mov
decl
mov
rol
adc
add
in
mov
add
and
mov
inc
fsubrp
inc
int
jl
xor
sbb
rcl
xchg
out
iret
jnp
mov
fldt
jbe
arpl
pop
mov
nop
adc
sbb
jp
push
out
outsl
and
xor
pop
xor
cltd
lods
addb
popa
not
sahf
sbb
mov
jecxz
test
call
xchg
mov
cs
cmpb
jb
ja
and
jno
into
xor
cltd
repz
repnz
insb
or
or
push
fcoms
ret
and
sub
xor
sbb
mov
adc
lahf
jmp
jo
out
clc
outsb
rcll
mov
inc
shlb
lretw
mov
mov
imul
add
and
fadd
stos
aam
cmpb
mov
clc
push
mov
add
ds
cmpsb
mov
xor
aam
cs
push
inc
mov
jne
mov
inc
orb
inc
cmp
repnz
dec
test
ljmp
rorl
xchg
into
sub
nop
push
pop
cwtl
out
scas
dec
push
std
xor
outsb
pusha
sub
sahf
daa
and
jmp
pop
xchg
push
jnp
std
ret
out
movsl
pushf
rorl
fildl
ret
push
mov
adcb
jbe
aad
jle
out
in
add
mov
push
stc
cmp
push
cmp
cltd
jbe
adc
inc
mov
adc
xchg
push
daa
mov
into
out
add
ret
outsb
iret
inc
cmpsl
jne
loop
cmp
sqrtps
mov
xchg
addr16
aad
or
test
or
int3
sbb
cmpsl
roll
fiadds
pop
xchg
pusha
ret
test
xchg
addl
xchg
xor
xchg
jp
aas
push
nop
loope
cmpsb
mov
xchg
bswap
jmp
pop
cmpl
lret
rol
int
push
ror
lods
cltd
in
loope
hlt
cmp
pop
fwait
xchg
repz
in
pushf
fistps
cmp
cmpsb
ljmp
jl
mov
mov
sarl
vpavgb
and
rorb
pop
lock
imul
mov
rcrb
inc
sbb
out
jbe
cmp
hlt
testl
out
outsb
cmpsb
mov
inc
sub
inc
pop
testb
jns
cli
add
mov
mov
lds
pusha
ja
popf
sbbb
mov
add
lds
and
daa
pop
into
ja
pop
adc
insl
add
or
jo
mov
and
pop
adc
jns
jg
cltd
mov
imul
mov
into
add
pxor
mov
sbb
loope
orl
inc
lea
sbb
mov
xor
lds
insb
ja
movsl
scas
dec
sub
test
sub
xchg
or
adc
inc
ljmp
mov
aam
andb
movsl
or
scas
xor
mov
cmp
mov
jg
dec
mov
jg
jg
orl
ret
xchg
rolb
xor
jmp
add
mov
add
movsl
dec
cmp
pop
or
loop
xchg
ljmp
mov
pop
mov
int
int3
mov
mov
xchg
mov
xchg
mov
icebp
xchg
or
push
leave
lahf
ljmp
scas
mov
testb
xchg
scas
mov
cmpsb
mov
xchg
mov
daa
pop
leave
or
xchg
ds
setbe
push
adc
jg
mov
out
stos
mov
ret
mov
mov
jnp
xchg
fiadds
pop
push
lret
mov
rol
fisttpll
repnz
mov
nop
cmp
fcomps
inc
pop
mov
mov
mov
add
mov
mov
pop
mov
fidivs
aaa
fidivl
filds
xchg
scas
lea
adc
inc
lret
xchg
push
fs
inc
sahf
or
mov
mov
jne
lret
loop
testl
or
mov
add
mov
push
mov
repnz
in
lcall
mov
out
rclb
repnz
in
scas
dec
mov
icebp
add
fisttps
nop
mov
lret
test
xchg
add
test
mov
loope,pt
mov
mov
xchg
mov
out
and
lret
das
mov
cmpsb
pop
xchg
out
xorb
xchg
or
loopne
mov
xchg
ja
mov
mov
mov
aaa
pop
mov
or
rcrl
sahf
fdivr
ss
lahf
pop
test
ss
jnp
add
add
push
mov
inc
xchg
mov
xchg
mov
scas
les
or
dec
ja
pop
push
push
xchg
jg
repz
add
repnz
sbb
outsb
push
shrl
add
xchg
shll
mov
push
sub
inc
scas
mov
xchg
adc
test
xchg
xchg
add
repnz
lret
shl
or
push
add
add
int
mov
js
or
rcr
rcrl
stc
sbb
adc
ss
shrl
xor
pop
scas
xor
or
scas
mov
cmp
sub
in
jbe
inc
scas
mov
pop
std
inc
lea
ds
roll
or
pop
pop
push
mov
inc
dec
adc
lock
pop
dec
push
cwtl
scas
dec
xor
movsb
pop
dec
bound
arpl
rorl
dec
mov
cmp
es
ja
lcall
andb
mov
addl
adc
ds
les
aad
cs
jnp
popf
jbe
out
loop
cmc
pop
mov
jg
jnp
mov
jns
jg
push
int
faddl
scas
adc
inc
sahf
repnz
fwait
imull
in
sahf
add
mov
jl
push
cwtl
add
cs
aaa
scas
xchg
lcall
jnp
sahf
adc
xchg
dec
xor
andb
jne
dec
sti
xchg
loopne
aad
inc
clc
lret
add
lahf
add
inc
inc
xor
lds
ds
mov
test
mov
mov
aad
push
sub
mov
pop
xchg
mov
mov
and
mov
mov
jg
cltd
test
xor
xorl
sbb
add
mov
add
mov
xor
out
lahf
lret
lods
cmp
sahf
dec
lahf
fimuls
mov
or
inc
lahf
mov
push
adc
lds
sub
decb
out
jecxz
bound
int3
mov
cs
jmp
movsl
mov
push
pop
inc
sbb
xor
sti
lds
xor
loope
into
lea
xlat
push
inc
xchg
inc
mov
push
maxps
or
aad
xchg
ret
mov
stc
inc
mov
xorl
test
fisubl
fs
ss
int
repnz
lock
cmp
mov
repnz
rcr
pop
dec
and
sub
stos
xchg
je
pop
pop
lret
adc
inc
pcmpgtd
in
and
pop
or
lods
hlt
xchg
pop
fimull
sahf
mov
inc
stc
nop
cli
jbe
pusha
mov
cwtl
xchg
mov
mov
inc
mov
fsubrs
lock
icebp
out
mov
repz
negl
test
push
mov
repnz
in
in
jb
inc
cmpsl
incb
and
jge
xchg
addb
jg
mov
and
pop
dec
lock
test
out
jecxz
push
jb
ja
lret
mov
mov
popa
nop
test
lds
mov
mov
scas
mov
nop
stos
sahf
inc
push
fnstsw
ljmp
sub
dec
push
lcall
andb
repnz
mov
mov
out
push
in
in
repnz
mov
sub
loop
bound
inc
hlt
out
repnz
push
out
iret
loope
gs
jnp
shlb
fstpl
idivb
lods
push
xor
mov
scas
mov
jbe
mov
icebp
jne
lahf
loop
dec
stos
xlat
mov
xor
fwait
add
loop
cwtl
out
andb
ljmp
into
xchg
mov
adc
or
pop
fnstsw
lock
jg
add
in
or
std
adc
mov
scas
mov
mov
jns
mov
push
ret
mov
in
lcall
fmulp
fistps
or
in
mov
call
mov
mov
pop
ret
shrl
outsl
pop
xorb
lret
sub
xchg
mov
cmpsb
aam
push
mov
sbbb
fs
pop
push
lret
fsubr
sbb
cmc
pop
mov
lret
mov
push
xor
repz
es
mov
push
test
jnp
xchg
lahf
jmp
and
repnz
mov
mov
sahf
xchg
add
xchg
fistpl
mov
jno
xchg
or
add
mov
mov
xchg
cmp
fdivrp
jmp
hlt
loopne
push
xor
cmpsb
xor
jecxz
mov
xchg
push
cmpsl
jecxz
nop
out
mov
nop
rcll
xor
jno
ljmp
test
into
fildll
sub
clc
push
shl
in
ret
in
mov
jecxz
lret
gs
into
xchg
adcb
mov
das
stos
sahf
nop
mov
add
loopne
rcrb
loope
add
add
loope
mov
addl
adc
or
add
mov
sub
std
gs
pop
fcomip
shrl
js
jp
xor
xchg
int3
scas
lock
icebp
leave
mov
pop
sub
lods
shll
ficoms
out
add
stos
imul
push
xchg
xor
stos
lret
ret
mov
jmp
or
pop
jns
dec
mov
or
dec
nop
or
jg
or
dec
or
dec
nop
or
jg
adc
fwait
dec
sbb
push
leave
ss
subb
adc
sbb
test
cli
orl
dec
sbb
add
mov
cmp
mov
out
push
fs
rorl
mov
dec
out
push
pushf
fnstenv
xchg
enter
lahf
or
add
jns
inc
push
into
lahf
jge
mov
lret
jmp
mov
jg
inc
pop
decl
jle
roll
ss
jb
mov
or
xorb
mov
jne
cs
stos
xchg
xchg
mov
stos
inc
lea
into
aad
sub
push
and
in
vshufps
incb
lcall
push
push
rolb
push
pop
pop
stos
aad
jbe
sbb
aad
cmp
test
jns
xlat
pop
andl
pop
lret
data16
gs
clc
xorb
loop
aam
sub
inc
jg
inc
mov
xrelease
inc
jno
jo
add
pushf
cmpb
xchg
jecxz
repnz
stos
andb
aam
xorb
lcall
aam
jge
orb
pop
scas
add
inc
fdivs
out
int3
xchg
sub
test
jae
pop
dec
insb
rcll
ja
jge
mov
mov
aas
jl
sub
icebp
out
in
fsubl
sbb
sbb
lcall
sbb
lcall
mov
test
xorb
or
jbe
sub
sarl
sub
sbb
dec
daa
pop
mov
insl
cmp
std
aas
jmp
cmp
rcll
adc
jne
jbe
sbb
adc
mov
lods
xchg
adc
call
push
js
xor
lea
lods
subb
fisubl
push
mov
add
add
and
mov
scas
rclb
testb
fldcw
jae
rorb
ja
out
push
es
cmpsb
push
imul
add
and
cmp
imul
push
lcall
inc
out
jmp
orb
mov
lcall
mov
dec
and
ja
imul
aam
mov
mov
sarb
inc
pop
or
jg
or
mov
out
lods
push
cli
fs
leave
aad
pop
or
xchg
fwait
inc
imul
adc
cmpl
roll
jbe
pushf
adc
gs
inc
pop
mov
mov
insb
cmp
xor
mov
out
jbe
dec
or
imul
push
ja
cmc
andb
add
in
add
and
jo
jmp
jge
stos
cmp
sub
lahf
cltd
or
lods
inc
cmp
mov
bound
add
jbe
ret
jecxz
imull
pop
enter
add
xchg
cld
xor
add
stos
mov
cmp
mov
rorl
xchg
int3
dec
fs
dec
fnsetpm(287
fsubrl
cmp
sarb
adc
inc
adcb
call
bnd
decl
mov
stos
xchg
nop
fstpt
lret
ja
sub
cli
mov
andb
imul
push
loopne
imul
and
adc
addr16
aas
cmp
and
cmpsb
inc
xchg
lcall
mov
data16
mov
loopne
xchg
out
xlat
inc
mov
cmpsl
cmpsb
mov
mov
loop
xor
mov
add
sbb
mov
pusha
push
mov
cld
decb
xchg
das
mov
mov
sub
loop
mov
xchg
and
cmp
inc
orb
repz
imul
popf
adc
aaa
adc
inc
xchg
pop
mov
cmova
scas
sbb
test
stos
push
bound
clc
nop
mov
mov
cmp
aad
js
addr16
test
xchg
out
pop
ljmp
lds
arpl
or
cli
dec
jne
add
jmp
pop
outsb
or
jg
mov
push
push
shlb
jecxz
test
or
loop
pop
push
pushf
ds
insl
negl
sarb
outsl
mov
shl
add
cmpsl
std
sarb
lret
adc
xchg
jl
mov
mov
shl
cmp
aas
cmp
loop
xchg
mov
cwtl
add
jle
xchg
mov
mov
jg
lcall
stc
jnp
ljmp
cmp
sub
out
or
cwtl
dec
cld
nop
jecxz
popf
sbb
sbb
xchg
xchg
rorb
in
and
jg
xorl
inc
aam
icebp
movsl
addr16
sub
loop
cmp
leave
jns
loopnew
loop
push
mov
add
cmp
mov
xor
pushf
call
xchg
into
retw
sub
jl
push
fwait
jecxz
mov
jp
fwait
les
jp
cwtl
imul
adc
sbb
add
sub
and
popf
ret
aaa
arpl
std
pop
loopne
push
push
repz
gs
push
icebp
loopne
mov
inc
mov
push
js
push
outsl
pop
fadd
pop
scas
subb
inc
pusha
jnp
loopne
inc
mov
je
jp
test
mov
push
iret
add
xor
fwait
call
cmp
lods
lock
xchg
in
cli
adcb
int3
jp
inc
mov
ss
repz
out
mov
mov
repnz
imul
push
ja
test
sub
out
ret
ljmp
mov
out
jg
cmc
xchg
or
mov
push
fwait
shll
xchg
push
sub
mov
xchg
mov
pop
adc
dec
ja
mov
aaa
lcall
adc
push
cmp
mov
popl
lahf
lods
call
inc
push
fsub
lock
jbe
daa
mov
das
stos
xchg
jns
addb
fdivrp
pop
jmp
jnp
mov
xchg
jecxz
mov
ret
inc
cli
leave
xchg
push
data16
or
sbb
and
sti
hlt
xor
addb
fldenv
mov
incl
push
loopne
mov
sti
cwtl
jns
adc
jge
cli
jo
add
mov
add
and
xchg
je
cmpsb
mov
outsb
mov
jb
mov
xchg
pop
jp
bound
jecxz
pusha
imul
pop
nop
shr
jecxz
push
pop
fildl
sbb
lret
stos
xlat
fwait
and
xchg
cmc
fdivs
scas
push
mov
jbe
aad
or
jecxz
pop
fnstenv
int3
mov
jp
ds
dec
out
mov
call
adc
dec
aam
orb
jnp
inc
adc
fbstp
insb
and
mov
std
adc
or
jmp
out
jecxz
fisubrs
mov
jp
adc
movsl
stos
mov
rorl
adc
in
jg
inc
cld
int
mov
mov
xchg
mov
inc
imul
insl
sub
sbb
popa
add
into
rolb
jmp
cmp
jb
ljmp
mov
cmp
xchg
bound
inc
push
ret
out
in
add
inc
fucom
mov
mov
add
mov
test
inc
or
shrb
add
xchg
mov
lahf
int
dec
imul
frstor
adc
sbb
mov
shr
xchg
jl
out
fisubl
sarl
sahf
add
andb
mov
mov
mov
sub
mov
mov
fs
mov
push
enter
pop
xorl
mov
pop
out
movsl
sti
testl
ret
xchg
pop
sbb
fsubl
outsl
or
inc
lret
cwtl
lret
lods
dec
jge
mov
mov
lea
out
xor
push
data16
scas
data16
push
mov
cld
sub
dec
mov
jp
or
mov
adc
xchg
jecxz
movsl
fisttpll
pusha
mov
lds
nop
pop
test
aaa
lods
inc
push
les
sti
inc
fildl
pop
mov
xchg
push
dec
sub
adc
imul
mov
in
mov
nop
sbb
sti
mov
rorb
or
jecxz
cli
out
mov
add
fstl
cmpsl
mov
xchg
inc
mov
cmp
inc
cli
lcall
repnz
pop
lea
stos
mov
sbb
rcl
scas
add
ds
iret
out
xchg
inc
loope,pt
xchg
test
js
fstps
sub
xchg
xchg
cmp
jmp
push
mov
pop
sub
lahf
jecxz
add
cmpsl
icebp
lret
insl
rcrb
das
daa
out
pop
jnp
push
add
sub
mov
int
shrb
int3
jp
outsb
enter
push
xchg
into
aam
pop
mov
fs
mov
add
shll
xor
push
out
sbb
add
xchg
call
sub
stos
clc
dec
aad
mov
mov
mov
lahf
sbb
mov
lret
add
lret
push
out
jae
dec
in
cmpb
dec
xchg
leave
xlat
icebp
pop
mov
push
jg
cmpw
lcall
xor
mov
xchg
and
mov
mov
push
adc
movsl
aad
add
pop
dec
push
clc
scas
mov
xchg
daa
jl
cwtl
cmp
andl
push
pop
lea
adc
jae
jne
test
inc
arpl
mov
add
rorl
inc
cli
lahf
sbb
mov
aam
adc
lret
enter
jb
xchg
rorl
loopne
add
jp
popf
mov
xor
cmp
repnz
mov
dec
cmp
lahf
inc
xchg
movsb
pop
mov
cmpsl
arpl
mov
fisubl
fimull
adc
loopne
mov
fnsave
fs
sub
test
xlat
sub
cwtl
jle
and
push
pop
cld
repz
or
sub
cmp
ds
sub
les
imul
mov
xchg
sarb
xor
push
pop
push
mov
xchg
in
rol
test
mov
mov
inc
mov
sahf
inc
movsl
aad
pop
sahf
inc
iret
xchg
int
popf
push
loope
sub
cltd
lret
adc
xchg
cld
pushf
call
data16
loopne
or
and
adc
repnz
mov
out
in
arpl
test
mov
scas
pop
rorl
rol
pop
mov
push
test
push
pop
sub
roll
faddp
jp
aam
cld
sub
mov
test
hlt
mov
mov
xor
sub
dec
in
rorl
cmpsb
jp
jl
ret
rcrb
mov
mov
mov
adc
and
mov
mov
push
add
jb
movl
int
mov
jmp
aaa
bnd
adc
mov
mov
addr16
lock
fwait
inc
test
in
mov
mov
mov
sahf
aas
and
imul
lret
lea
nop
jp
dec
inc
cmpsl
test
sub
mov
clc
pop
pop
lcall
stos
fdivrs
sub
inc
cli
lahf
or
inc
std
mov
mov
mov
add
dec
pop
or
inc
xchg
iret
call
ss
ret
push
sti
mov
fs
pop
or
cmp
cmp
aam
dec
clc
push
leave
xor
jge
dec
push
cmp
outsl
pop
lods
xlat
mov
sub
cld
inc
mov
xchg
xchg
call
fsubrl
movsl
shlb
add
test
xchg
adc
pop
jo
push
mov
repnz
add
cmp
mov
xchg
lea
daa
push
clc
sbb
mov
mov
inc
cwtl
adc
cs
into
lret
data16
lret
lret
pop
ss
rcrl
inc
roll
iretw
jl
loop
or
push
lea
sub
dec
loopne
add
xor
push
loop
rorl
rcll
cmp
mov
or
mov
mov
call
and
sub
mov
xor
jno
cmpsb
fildll
movsb
xrelease
mov
dec
mov
insl
xchg
ret
sub
pop
pop
mov
nop
mov
cmpsl
xchg
ret
jb
lret
add
mov
pop
push
adc
push
cmpsb
shlb
xchg
adc
out
in
into
pusha
lahf
mov
scas
cmpsb
mov
mov
push
jbe
mov
dec
pop
cwtl
imul
pop
dec
push
test
aaa
inc
inc
pop
imul
xchg
add
mov
mov
push
out
out
cwtl
pop
and
xchg
add
lds
push
xchg
mov
xchg
addr16
sub
ret
mov
fsub
jp
pop
mov
mov
cmpsb
test
repz
cltd
push
pop
push
mov
cmp
inc
out
xor
mov
cmp
ds
lods
sub
mov
xchg
jno
and
or
mov
js
stos
pop
repz
repz
add
stos
out
repz
rcl
or
and
sbb
inc
and
dec
cmp
xor
call
sbb
pop
popa
shlb
aas
insb
fmull
or
pop
outsl
loop
nop
xor
out
sti
fcoms
lea
pop
mov
daa
pop
aam
xor
cmp
iret
das
add
loopne
mov
nop
dec
data16
add
insl
dec
xchg
imulb
add
fstpt
inc
xchg
push
sub
in
mov
int3
and
clc
dec
loop
sub
adc
cld
xchg
mov
shll
dec
push
sub
mov
inc
mov
mov
stos
and
xor
push
jne
call
xor
loopne
mov
xchg
jge
movsb
add
mov
inc
sbb
out
lds
push
scas
jl
sbb
out
clc
movsl
mov
mov
stos
fisubrs
roll
cld
mov
movsb
pop
cwtl
shll
mov
movsb
repnz
mov
xchg
cmp
add
xchg
addb
xchg
mov
mov
iret
jne
fildl
mov
in
mov
ljmp
aaa
fs
mov
mov
cmp
or
or
orb
repnz
lahf
test
test
cwtl
shl
call
enter
xchg
cmp
xchg
xlat
or
jno
and
mov
adc
jge
fbstp
repnz
xchg
xchg
xor
and
fmulp
stc
outsl
test
push
inc
inc
cwtl
inc
roll
ret
aaa
mov
repnz
movsl
or
lea
jge
xchg
cmpsl
cwtl
jo
dec
testl
and
rclb
daa
rolb
sahf
xchg
ret
xor
bnd
cs
cmp
into
leave
xchg
dec
and
inc
ja
es
xchg
mov
lcall
sarl
cld
push
rorb
test
mov
fnsave
adc
mov
cmp
ret
test
lea
sti
jbe
dec
cmp
push
lahf
mov
adc
call
in
pop
fldcw
jae
sub
xchg
popf
ss
jb
push
lret
outsb
cld
fistpll
shrl
call
inc
pop
repz
cld
mov
sti
sarb
adc
in
dec
xchg
nop
enter
insb
test
in
mov
and
leave
and
inc
shll
and
mov
into
test
int3
lahf
and
insl
loop
shrb
pop
mov
mov
scas
adc
xchg
mov
and
mov
push
mov
dec
xchg
sbb
adc
mov
fmull
into
loop
data16
mov
push
addr16
push
xchg
dec
jg
repnz
enter
pop
fadds
movsl
push
pop
sbb
dec
mov
cmpsb
push
inc
mov
mov
xchg
lcall
adc
or
js
mov
mov
pop
subl
xchg
xlat
movsl
fwait
sahf
sarl
sub
orl
fidivs
dec
inc
jnp
mov
addr16
push
push
rcrb
insb
gs
aad
xchg
cmpsl
dec
mov
push
data16
xchg
lds
mov
lret
xor
xchg
ret
or
inc
dec
rcrl
loope
sub
testb
dec
mov
iret
mov
fsubs
xchg
xchg
addr16
in
push
jns
push
mov
sbb
inc
lret
lds
lret
mov
mov
xor
ret
sbb
add
cmp
int
add
mov
jle
cli
rolb
js
std
lret
adc
aaa
mov
inc
les
or
test
or
push
cmc
xchg
pop
mov
mov
shrl
xchg
add
add
cli
fldt
xchg
adc
js
cmpsl
out
mov
mov
test
les
inc
cmpsl
pop
adc
test
push
add
lea
xchg
mov
test
fwait
addr16
mov
push
lret
test
ret
cli
enter
std
ret
jns
add
or
test
je
int3
pusha
test
pop
popa
cmc
hlt
shlb
mov
add
andl
arpl
lcall
pop
push
cmp
popa
adc
aas
dec
data16
xor
xchg
ss
test
stos
mov
xlat
mov
call
mov
jecxz
outsl
faddp
repnz
dec
sti
cld
cmpsb
sarb
inc
mov
out
fcompl
or
and
sbb
add
aam
jp
out
iret
mov
lea
lods
adc
repnz
orl
daa
in
aam
aaa
nop
dec
sbb
daa
lods
int3
sti
ljmp
inc
insl
xor
sbb
push
push
aaa
dec
add
pop
adc
stos
imul
xchg
cmpsb
imul
inc
or
push
push
push
xor
xor
std
mov
cmp
imulb
daa
shrb
jge
push
or
lods
jbe
fwait
mov
cmpsb
sbb
insl
xchg
movsb
xor
fildl
cmp
lea
ljmp
call
sub
fmull
mov
inc
cld
movl
xchg
jno
cmpsl
addl
movsb
or
inc
dec
mov
fsubrl
xor
jne
lods
sub
popa
outsl
dec
adc
bound
mov
fsubs
shll
repz
test
in
jbe
xor
gs
xorl
xchg
ja
js
fists
data16
test
cs
enter
ret
jnp
imul
daa
testl
mov
cmpsl
mov
mov
and
shll
popf
push
xchg
and
inc
aam
jmp
lahf
rolb
inc
or
fsubrl
mov
jo
xchg
push
sub
push
xchg
and
adc
xchg
mov
cli
mov
repz
push
lea
dec
cld
popf
jo
adc
xor
push
add
or
test
fwait
movsb
xchg
sbb
mov
push
or
in
push
dec
imul
mov
mov
push
lds
scas
orl
cmp
call
in
sbb
add
movsl
inc
cmpsb
cld
pop
sub
sti
mov
leave
xorl
push
and
dec
jecxz
loop
adc
cwtl
xchg
inc
mov
adc
pop
mov
mov
shll
mov
out
lods
popa
jmp
xchg
xor
xchg
inc
in
call
jmp
js
sub
xchg
mov
int3
pop
mov
push
mov
mov
mov
mov
xchg
fwait
ja
popf
push
mov
pop
int3
push
repz
scas
les
cwtl
inc
in
ljmp
mov
shrl
cmpsb
mov
mov
ds
aas
imul
loop
inc
and
test
mov
mov
jns
sub
ror
daa
push
cltd
pusha
inc
jmp
loop
int3
repz
mov
and
popa
hlt
mov
mov
dec
insb
or
cmp
jb
daa
jnp
insl
fistl
pop
jl
cmp
lret
push
jge
push
sahf
imul
aaa
test
nop
push
mov
xchg
je
sub
clc
je
dec
add
add
pushf
lods
sti
xchg
xacquire
dec
cmpsb
jnp
int
sub
cmpsl
add
iret
nop
cwtl
and
xchg
adc
dec
movsb
xchg
ret
jns
lahf
dec
mov
sar
je
dec
ret
jnp
or
mov
mov
imul
push
iret
pushf
loop
xor
in
mov
rclb
ret
rcll
dec
stos
mov
cltd
out
in
jecxz
xchg
add
jg
mov
les
imul
lods
lret
out
jnp
or
out
sarl
mov
jno
push
dec
and
loopw
lods
fidivrs
sti
xchg
xor
xchg
lea
fprem1
int3
xor
cmp
nop
aad
cmpsb
fnstsw
xchg
repz
push
cmp
sub
out
lea
popf
inc
add
jmp
std
fs
jo
mov
xchg
pop
aaa
imul
mov
iret
adc
inc
inc
lcall
xchg
test
sbb
decl
xor
adc
cld
je
loop
outsb
lock
ds
adc
or
push
lret
lods
push
adc
add
and
inc
cmp
fildl
es
mov
fnstsw
pop
add
adcb
aam
mov
test
sub
or
loop
lea
jae
push
cmc
out
lea
in
call
aas
sbb
lods
repz
push
scas
or
ljmp
dec
push
fsubl
mov
push
into
loope
mov
push
dec
popl
xchg
pop
mov
mov
inc
sub
test
push
xchg
cs
faddl
mov
sub
xchg
or
iret
icebp
xor
xchg
jecxz
and
je
int
daa
mov
jb
stc
mov
jg
cmp
dec
xor
xlat
pop
kandnw
push
icebp
dec
fiaddl
aas
push
dec
mov
rcr
in
mov
mov
xor
outsb
repnz
mov
setbe
enter
lret
push
rol
shll
jb
pop
movsb
ret
mov
lea
or
add
ret
mov
push
sub
mov
pop
xchg
shl
pop
addr16
call
int
add
jp
jp
pop
aaa
mov
stc
xor
mov
mov
sub
fidivrs
jo
testb
sub
or
inc
pop
test
ja
or
into
sbb
or
push
mov
sarb
lods
cmp
jg
in
xchg
into
mov
jns
sahf
jp
dec
roll
push
or
js
leave
call
or
sub
inc
sbbl
xchg
xadd
push
dec
insb
ret
mov
sub
cld
andl
inc
xchg
orl
test
add
mov
std
or
pop
add
or
add
js
dec
repz
test
rorl
test
mov
adc
sahf
daa
jb
xchg
jae
add
inc
daa
fiadds
jge
popa
negb
xchg
sti
push
int
dec
sub
inc
push
mov
mov
sub
or
lret
push
and
mov
mov
or
stos
movb
xchg
jg
rclb
mov
outsl
push
mov
jge
cwtl
dec
sbbb
xor
sub
stos
ret
or
int3
pusha
jmp
and
mov
out
enter
data16
dec
clc
cld
imul
push
cmp
xchg
cmc
int3
xchg
inc
adc
sub
adc
sahf
pop
push
adc
test
mov
fsub
popaw
movsb
inc
and
push
lcall
and
rolb
loop
repnz
cmp
mov
pop
int3
mov
in
mov
push
sub
mov
push
ret
mov
int3
into
cwtl
dec
dec
mov
xchg
mov
insl
xchg
jnp
aam
xchg
sub
push
adcb
adc
ret
and
repnz
test
ja
or
xchg
ss
loop
push
mov
dec
pop
movsb
jmp
ret
inc
sub
pop
out
loopne
mov
fstenv
jno
mov
imul
sub
sbb
adc
loope
lcall
loopne
or
xchg
mov
inc
imul
jp
dec
aas
and
inc
fmul
sub
cmp
popa
sti
ret
mov
data16
jg
in
mov
divb
nop
and
mov
fs
cmp
les
mov
je
xor
push
ret
data16
repz
outsb
jns
mov
data16
inc
std
das
stc
mov
sub
mov
lcall
stos
mov
inc
pop
inc
xchg
push
push
mov
adc
inc
xchg
lea
cmc
hlt
adc
rcll
adc
fisttpl
inc
mov
mov
repnz
out
es
daa
lahf
in
push
inc
ror
sbb
fistl
cltd
hlt
cmpsb
les
pop
and
jp
push
push
jp
sbb
jp
loopne
jg
cmpsb
mov
imul
movsb
testb
repnz
call
mov
mov
in
push
rcrb
or
jecxz
xlat
xchg
and
cmp
cmpsb
xchg
dec
sahf
xchg
cmp
push
mov
mov
lret
mov
or
add
negl
xchg
sahf
mov
lock
insl
mov
xchg
rcr
push
sub
xchg
fisttps
cmpsl
jg
or
sbb
cmc
xchg
dec
mov
adc
add
inc
jle
fsts
push
addr16
shrl
cmpsl
loop
fldt
mov
ret
leave
rcll
xor
push
or
push
adc
add
lret
fstps
rorb
xor
or
out
dec
das
movsl
rdmsr
jecxz
xchg
mov
fdivl
shlb
push
cmp
sahf
pop
dec
enter
cltd
push
data16
cli
sub
data16
xchg
stos
sti
xchg
test
mov
nop
jbe
adc
ljmp
fwait
xor
dec
mov
inc
aas
add
or
fwait
push
notl
les
xchg
rcl
aam
shlb
aaa
inc
mov
add
mov
outsl
imul
xor
leave
data16
ja
push
mov
cmpsb
push
test
push
test
inc
mov
pop
push
jle
mov
sbb
repnz
inc
lahf
bound
push
into
xor
xchg
das
sub
jbe
xchg
ret
adc
mov
inc
ss
mov
repz
or
mov
mov
repz
mov
stc
or
mov
ds
movsl
jno
nop
sysenter
enter
push
flds
cmp
pop
repz
jmp
inc
jb
test
lods
clc
shrb
and
mov
iret
mov
xchg
mov
pusha
sbb
mov
mov
movsb
mov
fcompl
add
adc
xlat
cwtl
enter
mov
push
jecxz
jl
mov
aam
lds
push
push
and
ja
les
mov
adc
pop
cmp
sarb
inc
push
gs
fsubrl
and
stc
not
xchg
or
aad
or
or
pusha
sub
push
or
xor
adc
push
ret
cmpsl
adc
cmpsb
rcrl
nop
enter
inc
nop
out
dec
subb
push
das
aaa
xchg
scas
add
jns
aaa
ljmp
xlat
jmp
addl
fcompl
daa
je
bound
popf
out
shll
jmp
lods
cmpsb
cmp
push
push
cmpsb
push
and
clc
stos
lds
scas
mov
ss
fs
inc
data16
out
mov
sub
cmp
addr16
ja
push
ljmp
scas
add
dec
mov
mov
shrb
std
mov
cmp
std
and
addr16
pushf
lret
or
xchg
sub
inc
xchg
sub
sub
mov
sub
and
mov
xchg
or
dec
inc
xchg
outsb
jno
shll
std
mov
popf
push
aaa
inc
push
and
jns
push
lcall
pop
cltd
hlt
push
push
fadds
cmp
enter
in
mov
loop
fmull
loop
dec
gs
jbe
outsb
dec
cs
add
mov
add
mov
movsl
or
push
or
cli
leave
cmc
pop
stos
repz
in
out
add
decb
and
jne
out
xor
test
xchg
push
inc
or
arpl
ljmp
mov
gs
xor
div
ror
push
pop
xchg
mov
mov
push
lock
or
mov
jns
loop
je
jb
cmp
imul
ds
adc
xchg
rcll
xor
sbb
jge
pop
test
iret
add
outsb
xchg
add
pop
js
addl
repz
mov
pop
movsl
mov
and
fdivl
push
repz
jns
loope
ror
out
push
mov
push
xchg
shll
adc
fisttps
icebp
lock
daa
mov
xchg
es
and
mov
jbe
mov
mov
pop
cmp
sahf
iret
popf
mov
mov
mov
xorb
xor
ret
add
inc
push
data16
cmp
addl
jmp
sarb
mov
scas
aas
stc
add
fwait
into
pop
adc
jnp
or
stc
lock
add
mov
test
addr16
sbb
stc
inc
vpcmpeqb
cmp
cs
fnsave
pop
xchg
jp
popf
shrl
xchg
aad
and
inc
push
mov
sub
and
adc
divb
stos
or
stc
push
cld
mov
pop
cwtl
add
aas
push
int
cmp
test
jne
js
jbe
aaa
ljmp
cmpb
lret
cli
push
adc
aam
aaa
data16
aam
sub
int
add
sbb
in
inc
jg
pop
shll
mov
leave
ljmp
fistps
repnz
outsb
inc
les
rorb
leave
ret
push
pop
push
sbb
repz
push
lcall
adc
mov
aam
sbb
xor
xchg
mov
or
sarb
daa
ret
les
arpl
adc
adc
jl
in
lahf
in
fmuls
stc
out
fstl
repz
std
dec
outsl
xor
adc
xor
or
dec
repnz
mov
or
outsb
pop
cmpsl
clc
leave
mov
out
nop
add
jecxz
and
and
aaa
ror
imul
stc
xchg
mov
dec
ficoms
dec
repz
xor
add
aad
pusha
adcb
cs
sbb
sbb
cld
ja
inc
pop
jae
ja
call
push
sti
andb
add
cltd
enter
aas
or
push
mov
pusha
orb
pop
adc
mov
test
lret
adc
mov
rorl
orb
mov
aad
or
jg
jp
push
sti
popf
enter
dec
mov
dec
jl
and
pop
push
adc
leave
popa
loopne
lret
add
xor
xor
jmp
lcall
call
mov
xchg
xor
inc
and
mov
imul
sbb
jno
add
pop
sbbb
lea
out
imul
xor
into
xchg
xor
mov
test
ret
fildll
sub
rcrb
sahf
test
cmc
dec
enter
test
out
xchg
xchg
jns
mov
rolb
sarb
and
pop
mov
clc
call
test
test
outsb
push
movsl
lret
outsb
sub
pop
hlt
lods
xor
stos
jp
dec
jno
iret
mov
cs
cmpsb
mov
push
pminub
icebp
mov
jae
repz
inc
or
stc
mov
dec
inc
mov
pop
mov
test
or
xchg
dec
insl
push
lods
mov
aad
fldcw
push
mov
stos
rclb
das
push
cmpsb
xlat
into
jge
scas
test
mov
jo
mov
inc
adc
push
adc
adc
ret
fstp
cvtps2pi
lods
pop
dec
mov
scas
cmp
add
cmp
int
mov
mov
ret
sub
mov
lds
pushf
jo
lds
iret
pop
lret
jb
add
add
sbb
mov
out
icebp
mov
enter
ret
stos
stos
add
sbb
push
shlb
pusha
push
or
add
rorb
or
mov
lds
das
lock
repz
fs
inc
in
repnz
xchg
lds
mov
xchg
cmc
scas
jp
mov
xchg
mov
mov
mulb
xorb
leave
mov
imul
jecxz
sub
xor
imul
mov
or
push
and
out
lcall
bound
lahf
jno
aam
lock
lods
cwtl
test
mov
pop
data16
xor
flds
in
mov
test
ss
hlt
pop
pop
in
and
andl
mov
or
lea
inc
data16
idivl
movl
enter
xor
mov
mov
inc
pushfw
js
shrb
push
adc
push
adc
outsl
cwtl
mov
push
mov
out
pop
sub
jle
outsb
add
or
and
stc
jle
iretw
out
jno
xlat
les
jge
lahf
mov
mov
test
into
pushf
fnsave
jbe
and
enter
cmp
xchg
rclb
cmp
cmpsl
mov
mov
dec
sub
jge
xchg
cmpsb
rorb
inc
or
mov
xor
outsb
xlat
imul
sti
aam
addr16
and
sti
xchg
and
popf
mov
lds
mov
lret
add
mov
jno
jo
adc
je
xor
subl
add
in
cmp
pop
lock
xchg
lds
fldcw
inc
pop
mull
jb
out
cmp
fsubr
lock
aaa
mov
mov
stc
jnp
mov
cmpsl
shrl
aas
dec
nop
sub
arpl
ret
pop
js
lock
fmull
xor
cltd
jg
or
aaa
ret
sbb
hlt
and
or
repz
mov
sub
push
cmpsl
xchg
les
mov
pop
fwait
inc
pop
xchg
add
dec
popf
sbb
mov
int
gs
fiadds
test
cmp
adc
out
out
xor
call
into
jge
mov
push
incl
push
shll
int
loop
cmp
pop
imul
inc
out
jne
cmp
call
es
int3
fisubs
dec
das
out
adc
int3
pushf
or
inc
out
jl
out
xor
push
dec
and
imul
sbb
push
mul
enter
mov
cwtl
mov
sbb
jnp
push
lods
sar
nop
jmp
scas
aad
xchg
cmpsl
insb
lods
jnp
push
ja
xchg
or
lea
mov
xchg
xchg
mov
mov
fldt
mov
sti
mov
lsl
adc
xor
inc
fldenv
or
jne
testl
xchg
xor
pop
imul
jg
jo
ss
add
mov
sahf
dec
data16
and
aad
scas
and
lods
imul
adc
daa
add
stos
jns
enter
cmpsl
cli
shrl
addb
mov
cwtl
scas
jnp
add
push
push
jp
loopne
addr16
jnp
insl
push
inc
inc
seto
and
inc
pop
lret
dec
mov
mov
mov
test
mov
add
ret
stos
arpl
sbb
xchg
mov
je
out
fadd
shlb
fs
lods
bswap
mov
xchg
nop
shll
lds
jmp
xchg
adc
repz
sub
fiadds
out
xor
inc
mov
lods
mov
mov
xchg
mov
loope
or
loope
or
lcall
push
pop
xchg
jo
cmp
stc
enter
xchg
cmp
inc
aad
stos
movsl
negl
stc
arpl
and
rorl
fistpll
mov
mov
sarb
mov
adc
xchg
xorl
lahf
dec
cmp
inc
add
ficoml
sar
and
inc
js
inc
mov
mov
cld
pop
or
pop
mov
insl
nop
or
xchg
aas
push
push
jecxz
adc
mov
mov
mov
cmp
xchg
pusha
mov
adc
call
filds
in
add
mov
mov
and
mov
add
inc
repnz
xchg
push
pop
push
es
cmp
xor
dec
mov
mov
in
test
mov
pop
inc
mov
cmpsb
test
mov
in
push
fsub
out
outsb
jbe
mov
mov
stos
sub
clc
mov
xlat
push
lcall
xor
mov
or
loop
icebp
push
jbe
lret
stos
xchg
add
stos
fldenv
xchg
testb
int3
mov
mov
xchg
xor
dec
aam
or
mov
shl
out
mov
add
dec
in
ljmp
mov
les
enter
ds
in
sti
test
dec
les
xchg
mov
movsb
lret
inc
lcall
cmp
mov
scas
addb
fs
mov
fidivrs
xchg
inc
mov
enter
mov
push
jbe
dec
and
cli
mov
nop
out
pop
cmpsl
jp
andb
jns
mov
lret
out
jle
lds
or
pop
inc
dec
sbb
rcr
rep
jge
push
arpl
inc
xchg
mov
cmp
pop
js
or
mov
pop
js
dec
sub
sti
push
cmp
ja
xlat
push
testl
push
xchg
lahf
sbb
cld
cli
repnz
push
data16
dec
xor
data16
lcall
call
mov
cld
insb
cmp
lahf
inc
daa
push
sub
and
loope
sub
add
lahf
int
in
pusha
roll
mov
push
fsubp
outsl
push
mov
mov
mov
mov
jp
add
out
jb
pushf
lahf
testb
adc
pop
mov
mov
outsl
push
xchg
aad
leave
imul
fiaddl
into
fimuls
pop
push
inc
push
mov
out
ficomps
dec
or
test
sahf
loopne,pn
push
mov
mov
xchg
fiadds
and
mov
mov
cmp
aaa
ja
enter
mov
dec
addb
aas
sarl
lods
jno
fdivs
xchg
mov
xor
cwtl
adc
push
mov
rclb
fisubrs
mov
cld
inc
add
sahf
mov
push
push
mov
adc
enter
and
out
subl
dec
daa
fisttpl
les
popa
ljmp
out
push
fsts
enter
jnp
sbb
ja
loopne
adc
sub
stc
xchg
or
andb
repz
xor
add
shll
adc
jno
mov
xchg
jo
je
and
rclb
mov
sbb
sub
dec
mov
js
divl
inc
ljmp
outsb
sbb
xchg
xchg
int3
nop
pop
xchg
jns
xchg
clc
mov
ss
push
push
add
outsb
lret
addb
xchg
xchg
lret
je
ds
shl
mov
ljmp
push
cli
int
orb
stos
or
sbb
xor
sub
sbb
stos
repz
ret
or
mov
mov
mov
mov
adc
dec
adc
sbb
dec
int
xchg
repnz
sub
xchg
jg
pop
cmpsb
or
je
unpckhps
add
jnp
mov
icebp
ljmp
bound
or
call
inc
jns
repz
xchg
jbe
push
js,pn
pop
mov
mov
mov
sti
jp
lret
lret
aas
mov
call
jb
popf
and
and
out
mov
xchg
mov
push
lea
int3
push
cmp
or
sbb
adcb
sub
addl
cltd
ret
adc
ffree
add
aam
sub
mov
cli
out
cmp
dec
add
loop
xchg
pop
sub
aas
fwait
dec
rcll
std
rol
mov
push
scas
jb
push
mov
aad
and
jmp
pop
push
cltd
mov
movsb
aam
out
iret
lret
mov
xor
dec
mov
pop
jo
fiaddl
pushfw
jecxz
or
int3
mov
repz
mov
jmp
mov
mov
repz
mov
push
dec
es
data16
cmp
in
adc
fldt
fistpll
xor
mov
adc
cli
add
shl
outsl
jb
mov
shr
sub
push
push
imul
sbb
das
in
outsl
fldl
stc
imul
xchg
in
nop
jecxz
test
cmp
mov
xor
xchg
imul
rcrl
inc
loopne
lahf
repz
inc
sbb
stos
lret
mov
jg
dec
lahf
mov
int3
mov
out
dec
ja
sbb
sar
outsl
sbb
jp
sarb
inc
repnz
dec
imul
xor
outsb
pushf
fpatan
sub
lahf
lcall
rcrb
mov
and
xor
cs
lret
in
xor
mov
subl
out
xor
push
pop
xor
shll
mov
mov
sub
mov
lds
out
lret
aam
cmp
sti
jbe
mov
add
xchg
flds
cmpsb
addr16
in
inc
movsl
mov
addr16
cwtl
out
loop
mov
out
lods
fldcw
int3
and
mov
inc
inc
adc
jge
xor
lcall
or
push
sbb
xor
imul
push
xchg
leave
pop
or
iret
rcl
adc
inc
xor
ret
push
jmp
sbb
shlb
jno
stos
sub
and
adc
or
push
mov
popa
sub
xchg
xchg
sbb
cs
dec
xchg
popa
add
lret
pop
loope
mov
loope
out
arpl
lods
add
jae
mov
test
mov
mov
cmp
pushf
sub
mov
sub
push
push
jns
cmp
sbb
inc
xchg
jae
loopne
sahf
popl
jmp
jno
jno
add
mov
add
cltd
fucomi
sahf
or
pop
test
inc
aaa
jo
in
test
fucomp
mov
adc
xchg
mov
sahf
lret
fnstcw
lds
push
leave
cld
out
xchg
imulw
inc
into
mov
repz
cmp
jb
sub
add
das
pop
jge
and
cld
sbb
mov
punpckldq
jns
inc
pop
enter
adc
cmp
insb
or
jg
xor
call
repnz
dec
xchg
adc
lds
push
cmc
xor
stos
movsb
inc
int3
test
out
ss
ljmp
je
pop
xor
xor
outsb
sahf
cmpsb
lea
xorl
negb
add
shll
push
jne
lahf
es
cld
lret
mov
mov
leave
ja
push
cmp
push
rclb
jnp
rorb
stos
adc
daa
js
pop
cmpsl
in
sbb
add
jmp
ja
loopne
call
loop
enter
adc
into
shlb
aaa
mov
xor
cmp
and
aad
mov
push
cmp
cltd
jno
sub
mov
push
ret
mov
mov
movsb
xor
adc
leave
lahf
push
pop
sub
shrb
xchg
ret
push
cmp
mov
xchg
fldl
jl
aaa
mov
subb
or
xor
call
jg
shll
fisubrs
test
aam
push
xchg
jmp
cmp
fidivs
ret
or
inc
aaa
pop
add
out
lea
cli
cmp
or
divl
test
scas
mov
mov
xor
fdivl
adc
cmp
adcb
es
idivb
inc
cmp
jbe
adc
ret
xchg
insb
sahf
pushf
or
lcall
call
push
les
mov
jg
lret
repz
xorl
xor
lock
imul
dec
imul
lods
out
pop
mov
push
pop
or
mov
adc
and
dec
and
js
imul
cmp
cmp
or
pop
jg
stos
add
shrl
xlat
or
or
cmpsb
lea
out
repnz
mov
pop
imul
addr16
int3
inc
addb
xchg
lahf
ss
ret
cmpsb
push
xchg
rcrb
xor
xlat
dec
mov
add
sbb
mov
fdivl
hlt
mov
mov
mov
stos
mov
rorb
dec
mov
gs
stos
pop
ror
jb
ret
pushf
mov
int3
cwtl
mov
cmpsl
pusha
mov
out
or
mov
xchg
push
pop
into
divl
sub
mov
push
xor
dec
xlat
sbb
sti
cmpb
mov
sub
cmpsb
cmp
jo
push
xchg
pop
jns
cmpsb
cmp
stos
cmpsb
lret
xchg
fsub
dec
adc
dec
adc
mov
jno
jne
imul
push
leave
loop
je
mov
cld
call
dec
xchg
mov
out
push
outsb
mov
mov
cltd
aam
outsl
sti
jp
out
fmul
xlat
or
ffree
mov
mov
fsts
jp
sub
mov
jo
mov
inc
sbb
push
mov
pushf
jae
in
cmpsl
stos
jbe
add
push
xor
jp
dec
xchg
arpl
sub
inc
sbb
and
sarb
dec
out
lods
push
inc
push
jae
inc
jne
div
into
scas
movsl
mov
pushw
mov
pop
ret
pushf
jne
faddp
out
aas
sbb
cltd
mov
adc
popa
repz
cmp
negl
scas
loope
data16
inc
sti
mov
inc
retw
sub
inc
mov
fnstcw
mov
sbb
sbb
out
push
stc
xor
popa
jns
arpl
cmpsl
imul
fcmovbe
enter
mov
sub
or
xchg
stos
inc
lods
aam
inc
sbb
pop
lret
push
dec
lds
sbb
jnp
scas
data16
inc
mov
sahf
jecxz
xchg
cli
dec
push
sub
es
in
mov
aam
shll
ret
xor
pop
ret
scas
aad
aam
aam
or
je
push
outsl
jae
mov
lods
xor
aaa
les
es
into
pop
repz
test
bound
adc
sub
loope
out
nop
mov
dec
xchg
out
shll
int
jb
jbe
mov
mov
mov
pop
sbb
scas
push
xchg
add
xchg
outsb
push
push
pop
movsb
xor
dec
mov
sub
push
xor
xchg
in
mov
call
adc
cmp
and
icebp
outsb
loop
cmp
add
xor
dec
pushf
mov
cmp
push
lahf
xchg
ds
aas
adc
jb
jb
add
mov
fisubrl
or
popf
inc
mov
jns
popa
inc
inc
dec
sbb
rcl
inc
sahf
pushf
lock
pusha
cli
xor
push
jns
cs
inc
push
cmpsb
loopne
loope
aas
in
outsl
inc
jp
pop
xchg
lahf
xchg
xchg
cmpsb
stos
call
and
into
or
pop
inc
and
in
das
mov
aam
stc
lret
insl
mov
xchg
dec
fdivs
bound
repnz
mov
dec
mov
aam
push
dec
test
push
das
sar
inc
out
or
sub
jb
inc
aaa
test
aaa
cli
inc
jbe
jb
es
hlt
and
stos
cli
out
add
lods
pusha
faddl
sub
adc
and
data16
loopne
std
in
xlat
sahf
in
mov
mov
addb
cmp
inc
mov
jb
lods
inc
push
pavgw
flds
inc
inc
repz
dec
mov
adc
imul
mov
out
test
mov
sub
fsubp
fdivrp
xlat
enter
mov
iret
mov
outsl
xor
add
fnsave
mov
cmp
int
stos
sub
jmp
xor
sbb
inc
cld
fmul
rcrl
jne
and
lods
sbb
push
test
sbb
sub
insb
call
lods
scas
or
outsb
hlt
ret
arpl
enter
arpl
stos
in
shll
jecxz
adc
cmpsl
sub
in
leave
loop
xor
cmc
dec
es
test
adc
cli
fisubl
mov
pop
fsts
dec
adc
hlt
cwtl
push
out
movsl
call
sti
jbe,pt
in
decl
cmp
xor
sbb
push
push
call
lret
clc
mov
adc
pop
je
push
and
test
aas
lea
add
mov
pop
mov
xchg
jge
sti
xchg
or
xor
pop
add
jmp
popf
outsb
aam
push
shr
or
mov
inc
mov
lret
jp
mov
jg
add
adc
shlb
mov
mov
add
xchg
mov
adc
cmp
scas
jp
fsubs
inc
dec
xor
aas
pop
mov
mov
outsb
or
mov
scas
mov
test
lea
popf
xchg
xchg
add
or
sahf
dec
arpl
adc
xor
test
pushf
cmp
imul
pop
shr
xor
ret
les
xor
repnz
sbb
movsb
out
dec
xchg
call
fsubr
xchg
or
outsl
pop
ja
nop
dec
xor
dec
xchg
push
xlat
or
sbb
addr16
mov
xchg
mov
hlt
insl
jae
inc
pushf
xlat
mov
test
xchg
jmp
aas
jns
lar
mov
dec
mov
in
push
loopne
dec
fildl
adc
loop
push
mov
mov
out
lret
movsl
pop
shrl
outsl
cwtl
ficompl
stos
fnstcw
pop
sarb
adc
mov
xchg
aam
addr16
lahf
les
cwtl
mov
push
jnp
pop
mov
std
dec
push
mov
cmpsb
subl
dec
icebp
stos
push
arpl
mov
mov
inc
stos
testl
daa
xlat
xchg
or
fwait
sahf
xchg
sub
rcrb
int
dec
lret
jne
add
dec
jb
pop
push
rorb
jnp
sub
aas
or
mov
mov
push
jp
mov
shlb
mov
out
out
insl
enter
leave
xor
fldln2
inc
pop
imul
or
and
test
mov
mov
sub
xchg
cld
xchg
ret
scas
sbbb
andl
leave
sub
push
daa
test
ficoml
adc
shlb
cmpsl
jl
mov
xchg
push
jns
adc
inc
inc
fnsave
js
stc
out
cli
sub
xchg
dec
or
out
sbb
jge
addr16
cmpsb
mov
loope
data16
push
inc
cmp
push
cld
pushf
repz
or
ljmp
sub
adc
sbb
in
xchg
mov
and
inc
dec
xchg
mov
push
sarb
fwait
lock
xchg
mov
add
mov
xchg
outsb
and
jp
mov
xchg
push
das
mov
xor
mov
xchg
fdivl
push
jns
xor
push
les
arpl
mov
rcl
scas
lods
xchg
cltd
lahf
dec
int
cmc
mov
mov
nop
imul
push
test
cld
mov
cmpw
jl
in
inc
sti
cmp
jnp
pop
or
xchg
xchg
mov
repnz
xor
mov
dec
and
mov
icebp
or
xchg
ljmpw
in
clc
or
dec
pop
in
orb
jbe
loop
sbb
mov
iret
xchg
bound
mov
xor
stc
aam
ret
xchg
xchg
aam
cmp
mov
push
shll
ss
fidivl
push
xchg
sbb
fistl
pop
inc
lock
xchg
fdiv
aad
add
mov
jle
mov
or
mov
out
mov
mov
jnp
sub
loope
pop
mov
wrmsr
daa
mov
mov
add
or
mov
pop
sub
ror
loope
adc
shl
mov
movsl
dec
mov
iret
sbb
vpmacssdd
insb
mov
xchg
in
pop
add
mov
mov
lods
lcall
test
mov
les
cmp
sub
xor
or
pop
aad
scas
int3
mov
fnstsw
in
jmp
rcll
in
sahf
fisubl
xchg
push
or
rorl
test
pop
aas
cld
inc
ljmp
xchg
sbb
fbld
mov
mov
mov
add
repz
int3
lahf
ss
jl
repz
pop
sub
pop
nop
lret
daa
mov
add
mov
push
movsb
push
call
cmp
xor
and
negl
push
ja
sbb
fmuls
lea
xor
shlb
aaa
mov
inc
pushf
out
pop
iret
fldt
aad
mov
inc
xor
add
xchg
mov
or
gs
sub
sub
cmovno
inc
pop
into
and
mov
stos
sbb
jecxz
adc
mov
mov
repnz
popl
and
sub
lds
ljmp
pop
jp
xchg
testl
fsts
xchg
cmc
in
out
mov
adc
or
sti
jbe
add
test
psrld
jg
lahf
push
daa
pop
xchg
push
clc
loop
mov
fcom
insl
loope
mov
sbb
mov
jne
jb
push
adc
pop
test
nop
stos
fsubl
xchg
inc
aas
mov
dec
popf
clc
les
push
sbb
pop
enter
sbb
push
idivb
push
pop
cltd
ds
out
jp
mov
or
xchg
sub
inc
mov
or
xlat
cli
jp
popf
cmp
xchg
int
add
subb
or
inc
movb
xchg
cmc
xor
stos
je
dec
push
ljmp
fidivs
inc
cmp
push
lahf
out
outsb
pop
pop
pop
mov
repz
sub
ror
insb
or
and
jb
ljmp
xor
and
mov
cmp
cli
xchg
fprem
mov
mov
repnz
fnstenv
outsl
pop
mov
in
test
mov
jb
int
jl
aam
dec
sbb
cmp
loope
cli
jnp
mov
sahf
xor
lahf
add
clc
and
into
cmp
push
adcb
jns
push
dec
push
shlb
push
jne
mov
into
and
push
cmpsb
adc
mov
movb
cli
ret
push
test
sarb
mov
ret
insb
mov
lods
test
xchg
aad
mov
test
mov
and
lcall
cmp
add
es
or
cwtl
mov
sbb
inc
adc
jp
stos
cmpsl
mov
insb
scas
lea
lret
pop
jns
lcall
sub
scas
adc
ret
inc
stc
or
mov
imul
dec
pop
les
testl
pusha
adc
adc
popf
mov
inc
mov
mov
sub
mov
sub
je
adc
xchg
out
clc
inc
cmp
sahf
les
or
dec
loop
stos
in
test
repz
xchg
mov
add
mov
xor
adc
and
stos
mov
push
mov
jmp
stos
pusha
sbb
jae
pop
pushf
fsts
mov
add
addr16
xor
lds
repnz
negl
aas
jno
in
jno
xor
adc
js
and
pop
cmp
and
outsb
adc
adc
and
sub
leave
sub
xchg
xor
inc
cli
or
cmpb
lahf
das
dec
cwtl
mov
inc
shll
sub
xchg
xor
mov
repz
dec
xchg
out
xchg
adc
pop
sub
adc
mov
jp
sub
lea
cmc
orb
dec
aaa
or
adc
xor
lock
ret
sub
enter
dec
insl
lods
jnp
mov
pop
mov
loop
mov
jecxz
ffree
pop
sub
outsb
fwait
push
add
loop
fmul
and
jbe
shlb
cwtl
sub
bound
data16
jbe
aas
nop
mov
xorl
adc
mov
outsl
xor
dec
mov
mov
pextrw
sub
int3
jbe
dec
mov
and
inc
cmc
sub
out
shll
mov
pushf
cmp
daa
xorl
cmp
shrb
adc
mov
addl
lods
data16
aam
lcall
pop
dec
push
insl
insw
movsl
jne
and
lcall
inc
decl
sbb
add
push
ja
push
popf
lret
loope
pop
inc
aam
aad
rcrl
call
push
mov
mov
shl
push
sub
in
jle
aad
mov
cli
repz
adc
cmp
jo
cli
repnz
je
dec
jg
loope
les
mov
cmpl
into
mov
inc
jmp
pop
cmpsb
roll
shrb
aad
jp
mov
mov
cmpsl
ss
lock
dec
xor
js
lds
fnstcw
arpl
sarl
jmp
scas
mov
adc
jo
push
add
or
test
enter
rol
je
pop
mov
rolb
mov
cmp
int
jge
out
add
xor
decb
push
popf
lds
push
ret
xchg
nop
sub
xchg
repnz
lods
out
jg
rcrl
cmpsb
pop
add
test
enter
aad
mov
and
sarb
fisubs
jp
jmp
push
inc
add
lret
jo
pushf
xor
inc
stos
lret
pop
cmpb
sarl
stos
xor
mov
jb
pop
frstor
jg
mov
rorb
pop
mov
pop
in
jecxz
mov
jnp
repnz
xchg
daa
push
xchg
enter
int
mov
pop
shrl
test
or
movsl
fsubs
mov
jo
mov
add
cmp
int3
in
xchg
or
pop
stos
out
xchg
rcrl
xlat
mov
pop
xchg
jecxz
adc
incb
cwtl
or
std
data16
inc
jno
sti
sbb
lods
aad
ja
rclb
aaa
ret
inc
mov
es
aam
cs
inc
imul
dec
xchg
icebp
xor
jnp
cmp
ret
test
loope
fwait
data16
jmp
stos
es
repnz
jle
repz
sti
mov
outsb
dec
xchg
xchg
nop
jae
incb
out
mov
fwait
rol
imul
int
scas
xchg
inc
fcomp
mov
arpl
out
arpl
push
xor
adc
mov
cld
sbb
mov
jbe
leave
xor
xchg
xor
jl
fiadds
testb
mov
ret
inc
push
mov
ret
ret
or
mov
mov
nop
lret
iret
inc
mov
sub
push
clc
fildl
pusha
andl
in
fadds
aad
add
cmp
lcall
lock
mov
addr16
in
stos
push
dec
out
js
xchg
cmpsl
push
xchg
outsb
mov
cld
jns
adc
sarl
popf
in
and
mov
mov
arpl
sbb
jb
mov
push
lea
jo
xor
lock
outsl
popf
xchg
mov
or
pop
test
lret
pop
int3
mov
inc
xchg
into
mov
movb
test
jge
pop
xchg
xchg
mov
sti
or
cld
rcr
xchg
cmpsb
adc
cs
and
shrb
mov
or
mov
test
mov
imul
data16
xchg
pushl
mov
icebp
inc
mov
mov
mov
lahf
stos
roll
mov
out
insl
aam
inc
adc
cmc
sub
push
test
push
lods
into
and
push
adc
adcl
mov
pop
orl
mov
mov
addb
mov
loopne
repz
cmp
nop
fistps
cmpl
ss
addl
adc
add
pop
jg
repz
ds
leave
addl
push
mov
add
adc
xchg
xchg
sub
cmp
jb
or
xchg
adc
adc
notl
xchg
mov
lods
fisttps
jae
mov
pop
js
sahf
cmpl
fcmovnbe
pop
xlat
fnstcw
lret
xor
cmp
cmp
int3
stc
jae
aas
xchg
outsb
pusha
jbe
nop
mov
mov
rclb
push
mov
mov
ja
inc
sti
adc
clc
push
daa
mov
pop
sub
out
test
adc
xor
frstor
push
mov
sbbl
sub
nop
ficoms
dec
dec
addl
mov
aad
movzbl
jb
iret
adc
push
adc
orb
jb
stos
ret
cmp
rcrb
mov
pusha
pop
ret
out
adc
jnp
add
imul
cld
ret
aas
xchg
lahf
jno
out
xchg
iret
mov
mov
add
mov
push
mov
pop
pop
scas
lea
mov
xor
xchg
ret
mov
xchg
sahf
test
mov
sti
add
pop
gs
sub
dec
stc
or
xchg
and
sub
jge
lcall
fdivrs
leave
je
inc
push
mov
xchg
mov
test
jg
addr16
or
loopne
mov
adc
std
repz
incl
xor
xchg
adc
loop
sar
int3
mov
addl
cmp
sahf
lea
mov
mov
aas
mov
psubsb
or
jbe
lret
repz
add
into
jmp
inc
mov
pop
inc
mov
loope
add
outsb
pop
mov
mov
dec
xchg
pslld
pop
addr16
mov
jns
shrb
cmp
pop
sti
addb
dec
cmp
add
imul
aas
adc
loop
mov
mov
ds
sahf
or
fstps
data16
xlat
sahf
fldenv
das
out
cvttps2pi
mov
fisttpl
inc
sarl
mov
cmp
popl
mov
mov
pusha
add
lret
pop
je
adc
stos
scas
loop
cmp
or
sti
not
pop
subb
mov
inc
shlb
cmc
pop
push
or
jns
or
addr16
xchg
mov
bound
jmp
dec
in
fucomi
jb
mov
fs
icebp
and
aad
adc
andl
cltd
xchg
aam
popf
or
cld
xchg
add
cmp
das
cltd
pop
js
jmp
mov
test
mov
scas
mov
repnz
ret
movb
add
jge
dec
stos
xor
cs
cwtl
xlat
pop
sbb
jb
or
lcall
mov
mov
mov
cmp
ja
subl
push
nop
scas
nop
cmp
repz
mov
mov
or
mov
push
push
into
ret
pop
pop
mov
xchg
bound
cmpsl
jp
stos
subb
fiaddl
xchg
repnz
cmp
add
ja
ljmp
adc
nop
and
pusha
lret
imul
push
push
push
mov
call
cmp
pop
sub
mov
jbe
aad
rorb
in
adc
jmp
mov
mov
test
jge
inc
lea
sub
jecxz
sahf
or
rclb
fimull
sti
mov
adc
mov
shll
je
and
jbe
jmp
setno
mov
inc
xor
mov
fisubrl
xchg
outsl
cld
nop
cmp
pop
mov
or
push
ja
pop
out
mov
inc
fmull
mov
cmp
ss
fistl
aam
cmp
sti
mov
mov
loope
clc
and
sbb
test
imul
insl
mov
push
pop
pop
pop
lahf
test
shr
jmp
stc
sub
inc
xchg
lock
push
cmp
mov
jecxz
adc
mov
sub
ret
add
aam
and
add
call
xlat
cld
mov
sub
dec
mov
ds
jb
out
sbb
out
push
push
pop
cld
push
push
or
adc
dec
jge
bound
cld
adcb
xchg
cmpsl
mov
pusha
mov
sub
sti
add
mov
clc
cwtl
fadds
cmp
lahf
xchg
jne
inc
pop
pop
lock
scas
mov
jg
stos
imul
imul
cli
push
fsts
ja
cmp
repz
test
xchg
cs
movsl
mov
and
call
outsl
xchg
dec
and
movsl
sahf
lret
sbb
lret
scas
inc
cmpsl
push
lds
inc
jg
sarb
xchg
pop
into
xlat
dec
lea
pop
and
lcall
arpl
pop
xchg
repnz
or
ret
jge
push
shrl
in
mov
adc
js
xor
inc
mull
cmp
xchg
clc
je
stos
lret
stos
in
data16
fcomps
xchg
sub
lock
mov
mov
sub
dec
mov
inc
loop
shlb
dec
adc
mov
mov
fwait
lods
imul
inc
mov
push
sbb
jecxz
loopne
mov
cmp
dec
clc
inc
mov
rorb
sahf
xchg
lahf
cmp
into
mov
scas
and
bound
ret
or
rclb
aam
outsl
sub
ret
fcom
out
pmullw
mov
mov
scas
movsl
mov
mov
jg
inc
outsl
xchg
out
xchg
scas
add
push
xor
scas
mov
lahf
cmp
repnz
xchg
rcrb
hlt
inc
stos
push
xchg
div
or
cli
in
xchg
clc
push
iret
aad
mov
fimull
inc
inc
cli
rol
fsubp
dec
cmpsb
stos
and
mov
mov
or
add
out
jne
xchg
gs
adc
rcl
jge
mov
or
add
mov
fmull
roll
mov
shl
dec
call
mov
popf
roll
jmp
jae
sti
nop
mov
xor
test
or
inc
lea
pop
or
push
les
add
jge
adc
loop
dec
sbb
mov
lret
add
lcall
into
scas
jb
ficompl
or
outsb
and
adc
mov
or
sub
loop,pt
test
fiadds
xchg
push
test
loopne
mov
push
mov
in
pop
mov
out
push
and
incb
rorl
loop
jns
popf
inc
ljmp
inc
mov
in
sahf
dec
mov
sub
stos
in
into
sub
mov
xchg
test
repnz
xchg
hlt
loopne
add
and
iret
notb
lahf
ljmp
xchg
jnp
jg
lcall
sbb
cs
lock
enter
stos
scas
cmp
sub
adc
xchg
in
sahf
cli
mov
ret
jp
les
jl
push
cmpb
scas
xchg
mov
lret
pop
add
leave
popa
test
ja
lret
lret
pop
and
bound
addb
push
pusha
popf
xchg
rorl
lds
cmpsb
inc
lcall
mov
jo
shlb
lahf
ss
push
cmpsb
mov
inc
outsl
add
xlat
cmp
aas
addr16
call
std
int
stos
aaa
das
test
pop
and
negb
shl
pop
or
fldl
add
in
dec
dec
mov
xorl
inc
repz
cmp
lret
cmp
lret
inc
std
shl
cmpsl
aaa
ja
push
sbb
test
and
sar
fisubrs
cmp
or
mov
cmpsb
mov
xor
dec
or
mov
mov
sbb
mov
int3
iret
inc
mov
pop
or
jno
cli
mov
addr16
mov
lahf
addr16
ret
xchg
addr16
or
xchg
shl
fisubs
push
cmp
mov
mov
mov
lods
jbe
addr16
and
out
lcall
aas
mov
fsubs
lds
data16
loopne
mov
xchg
dec
stos
in
ror
outsb
mulb
mov
cltd
inc
hlt
xor
inc
lock
mov
inc
in
addr16
mov
loope
mov
cmpsl
xchg
lock
scas
xorb
mov
xor
mov
je
mov
sahf
int
lea
or
movsl
cmp
jnp
jl
test
adc
pop
aaa
out
adc
sar
stc
repnz
mov
jbe
repz
in
or
shr
mov
dec
mov
adc
inc
and
pop
mov
lods
lods
ljmp
pop
mov
scas
cmp
fldenv
sbb
sbb
nop
scas
mov
pop
iret
rolb
cmpsb
inc
and
sub
mov
cmpsl
lret
lcall
rorl
cmp
or
pop
push
pop
xchg
pushf
sbb
pop
jmpw
mov
mov
andl
orl
test
mov
arpl
std
jns
push
sarl
or
decb
mov
mov
push
loopne
ret
mulb
test
mov
loope
add
vcvtph2ps
ret
notb
or
lahf
pushf
ret
mov
add
mov
loopne
xor
jnp
shr
cpuid
dec
aas
xchg
gs
outsl
mov
nop
dec
test
test
pop
dec
movsb
push
mov
or
clc
loopne
xchg
lds
push
sahf
ret
mul
lods
push
inc
lret
or
iret
hlt
xchg
ret
mov
mov
lcall
mov
jp
lock
mov
pop
les
mov
outsb
and
scas
stos
mov
adc
rolb
daa
addr16
xchg
xchg
jp
lret
mov
ficomps
xchg
add
lret
mov
lcall
ficomps
and
les
mov
cmpsb
sub
frstor
jo
adc
fisubrs
loope
arpl
orb
cltd
or
and
aam
cmpsl
fnstcw
pop
dec
std
loope
or
rol
mov
data16
jp
inc
and
sahf
xor
xchg
cmp
daa
stc
sbb
test
jp
xchg
mov
fwait
mov
rorl
pop
mov
ret
lret
xchg
xchg
and
imul
lea
xchg
inc
mov
es
in
pusha
les
lahf
sub
cli
mulb
shlb
cs
cltd
je
loop
and
xor
adc
imul
mov
dec
repz
test
cmp
aad
push
cmc
jo
stos
dec
sub
inc
out
fimull
mov
aaa
stc
sti
cltd
pop
push
sti
and
insb
popf
je
repnz
push
sub
mov
add
add
jg
data16
or
mov
mov
jbe
ror
dec
testb
jb
mov
frstor
cmp
aad
repz
jb
add
mov
or
sahf
lds
xchg
aaa
mov
insb
std
adc
jmp
cmp
xchg
inc
ss
xor
stos
add
std
cmpsb
cmp
dec
addr16
repnz
aas
test
cmpsb
and
into
dec
ja
addr16
das
in
mov
rcrl
or
repz
jnp
ds
imul
insl
cltd
add
imul
icebp
insb
in
xchg
js
sti
test
xchg
mov
jmp
lcall
stos
fisttps
stc
cld
lret
xor
mov
push
sbb
xor
shrb
mov
sbb
into
out
xor
popl
cld
push
dec
das
mov
stos
adc
mov
mov
fldenv
int
ret
pushf
xchg
popl
mov
inc
mov
jge
jbe
add
data16
jp
fwait
mov
mov
sbbb
std
lds
rclb
fs
das
adc
dec
xorb
aaa
sti
sbb
dec
dec
aad
out
leave
out
mov
popf
leave
jl
xor
leave
addr16
xchg
in
into
lret
or
pusha
dec
addr16
fiaddl
pop
add
push
shlb
rcll
pop
testb
out
bnd
cltd
push
and
push
aas
sub
test
cwtl
mov
mov
lods
cmc
adc
xor
repnz
adc
sub
pop
cmp
mov
lcall
jnp
scas
mov
jmp
mov
daa
loop
lret
cs
sbb
test
and
vmwrite
pop
rcrl
or
lock
inc
out
jg
dec
jl
mov
jg
xchg
cmp
cmp
xor
stos
jge
xchg
test
pop
xchg
jecxz
seto
adc
push
test
mov
push
add
ret
stos
xchg
cmc
sarl
add
push
add
mov
xor
out
js
xchg
movsl
or
jnp
mov
mov
xchg
cmpsb
dec
cmc
and
out
xchg
and
xchg
je
fs
adc
out
js
push
loop
inc
push
jp
mov
clc
mov
jg
lahf
push
popw
shlb
push
inc
xchg
mov
addr16
adc
outsl
js
lret
mov
repz
mov
xchg
jb
or
mov
call
fwait
xchg
fwait
add
cmp
or
int3
jl
repz
dec
es
adc
cli
fnsave
push
mov
mov
repz
jo
cwtl
fsubrs
int3
xchg
push
jb
mov
pop
push
mov
mov
rcll
dec
in
inc
imul
mov
mov
xor
rorl
into
clc
aas
fisubrs
pushf
xchg
test
add
cs
mov
lea
pop
fdivs
push
in
inc
test
jns
leave
repz
sahf
test
mov
rcr
ja
sub
add
sub
inc
popa
inc
rcll
sbb
fisttpll
ljmp
cwtl
fsubrp
into
lahf
into
lahf
out
xlat
test
push
xor
and
ret
push
adc
mov
push
shrb
loopne
movsl
scas
movzbl
xchg
call
mov
out
pop
call
xor
inc
cli
jl
mov
fldenv
pop
leave
enter
mov
xor
rcl
stc
gs
aam
sub
flds
loope
aad
mov
inc
fidivl
xchg
sub
inc
jo
rclb
call
add
cli
mov
xchg
fisubs
mov
mov
inc
loop
inc
movsl
cmc
adc
int3
inc
jns
into
push
mov
stc
js
cltd
icebp
ljmp
xchg
push
adc
enter
xchg
mov
mov
push
add
xchg
imul
xchg
xchg
mov
imul
push
sub
mov
push
lods
out
sbbl
xchg
mov
mov
pusha
movsb
incb
jno
mov
or
stc
call
pop
stos
sti
int3
mov
dec
in
dec
popf
test
out
repnz
movb
iret
xrelease
add
push
rcl
push
mov
mov
and
and
imul
test
pop
arpl
ret
out
pop
dec
ljmp
imul
adc
sahf
pop
xor
push
xchg
pop
xor
push
mov
push
xchg
add
fidivrs
cmpsb
repnz
je
push
push
sub
mov
fiadds
jecxz
aad
mov
repnz
in
ljmp
repz
sbb
ficoml
inc
fwait
inc
out
addr16
fisubrl
loopne
fucom
or
mov
repz
push
mov
mov
mov
iret
cmpsl
pop
test
and
scas
push
pop
and
popa
dec
mov
push
sub
inc
movsl
sub
xor
xchg
shl
inc
addr16
xchg
push
aaa
cmpsb
mov
mov
cmp
fxch
subb
push
jge
cmp
add
add
out
jge
sub
cli
call
inc
shlb
call
int3
out
and
stos
ss
cmp
in
lret
jo
into
sbb
sbb
sbb
test
dec
mov
sub
cli
dec
add
mov
mov
sti
cmpsb
cmpsl
hlt
or
fiaddl
jg
filds
ljmp
adc
ljmp
addr16
sub
add
mov
lret
leave
cmp
mov
mov
dec
adc
pop
fsubl
js
push
shr
adc
xchg
mov
jg
push
pop
cwtl
mov
mov
inc
lcall
fimull
xchg
pop
shr
inc
int3
push
jmp
mov
mov
sbb
ret
or
int3
cmp
cmp
mov
mov
into
cmp
out
pusha
pop
push
test
mov
push
and
pop
sub
dec
lcall
cld
mov
nop
ljmp
inc
jbe
push
sti
test
jge
dec
mull
ja
lret
fwait
lret
cltd
out
push
inc
sbbb
inc
mov
add
pop
test
sub
xor
cmp
aad
stos
fldcw
rorb
add
dec
add
nop
lods
adcl
pop
sahf
rcrb
xchg
testb
xchg
rorb
dec
in
ror
jb
cmp
xor
fidivrs
cs
aam
jmp
xchg
stos
mov
mov
cltd
add
jae
sub
popa
in
inc
or
push
cmpsl
lret
xchg
jp
xchg
ret
lcall
daa
sub
dec
ja
add
cmpsb
fwait
xor
adc
sub
cmc
arpl
daa
popf
gs
mov
xchg
roll
imul
test
lcall
pushf
push
sub
push
sub
mov
adc
push
add
in
adc
sti
sub
out
je
int3
xorl
popa
cli
scas
mov
aam
dec
mov
mov
pop
and
das
js
popf
dec
scas
pushf
xchg
mov
ret
sahf
jge
push
out
inc
into
xchg
cmp
mov
pop
mov
jl
push
mov
pop
in
or
mov
inc
cmpsl
ret
sub
push
int3
andl
dec
stos
into
add
scas
data16
cmp
inc
xchg
mov
xchg
icebp
or
loop
nop
in
imul
sbb
mov
iret
int3
add
in
mov
movsl
inc
lcall
mov
xchg
pusha
mov
dec
fisttpll
jo
lods
data16
pop
cmpl
or
fs
xor
pop
in
xor
and
and
xchg
inc
mov
mov
xchg
or
xchg
mov
mov
or
jg
mov
into
cld
orb
lret
fcoml
hlt
fists
xor
ja
test
out
imul
fidivl
dec
adc
stc
mov
test
lods
lcall
sub
outsl
ret
ret
shr
scas
mov
pop
aam
test
pop
sub
adc
test
test
pusha
imul
jl
adc
movsl
iret
shr
mov
adc
daa
sarl
mov
outsb
or
add
ljmp
loopne
jp
adc
dec
mov
rorb
xchg
sbb
addr16
mov
imul
stos
ljmp
pop
xchg
ljmp
mov
xchg
enter
shrl
mov
repz
jae
push
cmp
mov
sbb
hlt
ds
ljmp
adc
mov
icebp
addr16
add
ja
mov
xchg
daa
inc
in
ds
add
sahf
jnp
sbb
mov
inc
int3
in
push
bswap
push
int3
dec
outsl
sahf
push
inc
pop
subb
mov
mov
jl
push
push
xchg
mov
subl
movsl
mov
jmp
les
add
mov
sahf
sbb
fdivp
cmp
sbb
xor
popa
jecxz
mov
push
fst
sarl
push
test
out
xchg
mov
adc
adc
ffree
cmp
dec
sub
inc
data16
jb
sahf
repnz
sarb
ljmp
cmc
cwtl
mov
cmc
push
jbe
fsubl
cmp
outsb
cmpsl
jnp
dec
add
test
dec
pop
push
dec
jno
adc
fildl
push
movsb
jno
ds
sub
idivl
fldl
filds
jbe
xor
loope
popf
xchg
dec
stos
popa
jp
lock
jle
mov
jg
push
fldl
adc
xor
adc
xor
xchg
dec
dec
mov
ss
lahf
push
jg
data16
lahf
add
lcall
mov
cwtl
xor
inc
inc
xchg
add
xor
pop
cmp
loopne
ficoml
cmp
arpl
pextrw
mov
loopne
addr16
movsl
sub
add
int
and
mov
mov
repz
dec
mov
cld
aad
pusha
dec
inc
movsl
fcmovu
out
inc
xchg
mov
push
mov
jl
jns
shl
push
sub
mov
scas
lea
inc
and
mov
xor
repz
push
ret
outsb
mov
enter
ret
pop
add
xchg
xor
mov
inc
movb
push
adc
xchg
add
es
in
iret
jbe
repnz
mov
lahf
rol
mov
xchg
shlb
add
loop
stos
jne
lcall
pop
and
push
mov
add
bound
cmpsb
inc
add
or
adc
dec
mov
mov
cld
daa
xchg
cmp
dec
mov
xchg
dec
and
or
fcoms
push
mov
adc
jae
xchg
pop
mov
fldenv
arpl
negb
rcll
push
sahf
dec
cmpsl
imul
add
ss
sbb
clc
or
pop
xchg
movsb
sbb
enter
adc
int
sub
inc
mov
iret
rorb
ucomiss
ret
cmp
pop
lahf
xor
sub
mov
inc
push
cmpsb
mov
push
lcall
add
push
outsb
lahf
sub
sbb
bound
les
lds
push
lcall
iret
inc
xchg
loopne
fadds
insl
fwait
jp
mov
in
addb
in
mov
out
sahf
push
push
xchg
dec
jecxz
inc
cld
or
repnz
inc
je
cmp
stc
mov
xor
and
shrb
rolb
into
aad
nop
lods
ja
pop
mov
mov
push
cld
cmp
xor
xor
lods
mov
ret
push
push
setge
xor
rcll
out
cmpsl
jecxz
lea
shrl
fadd
aad
lea
push
sarb
xor
rcll
xchg
add
xchg
leave
test
and
push
jbe
jge
in
fsubs
cmp
mov
pop
mov
shll
lds
out
bound
pop
ret
push
add
mov
mov
dec
push
popa
mov
push
push
sub
xor
mov
je
sahf
sub
add
adc
lahf
and
cld
scas
stos
js
nop
orl
add
cs
xchg
jg
mov
mov
and
push
push
cld
cld
fisubs
pop
mov
test
cwtl
stos
daa
fstpl
xchg
js
cmpb
std
mov
sti
scas
cmpsb
jp
cld
test
jl
unpcklps
cld
dec
sbb
push
and
add
ret
mov
imul
jg
xor
cmp
ret
imul
jp
adc
sbb
adc
mov
cmp
nop
ja
inc
mov
je
add
repz
xor
movsb
or
or
hlt
repnz
jmp
repnz
mov
pop
sub
push
ss
inc
sub
cmpsl
jp
xor
aam
mov
mov
js
sub
mov
adc
mov
mov
or
jl
cmpsl
add
jecxz
lods
ljmp
dec
sbb
add
nop
pop
add
addl
ret
frstor
lcall
jnp
xor
repnz
sub
imul
inc
mov
test
sbb
xchg
cli
and
bound
subb
bnd
and
cmc
lcall
or
loopne
sub
pop
jnp
repnz
aam
jbe
jge
xor
outsl
sbb
mov
insl
jno
test
stos
data16
je
outsb
xor
sbb
dec
aad
fucom
sub
inc
sub
add
test
test
in
mov
add
add
xchg
pop
dec
jg
dec
jl
inc
lahf
rcrb
out
add
adc
sub
out
loopne
push
mov
jg
lahf
stos
dec
mov
jb
push
xchg
pop
fists
xor
mov
add
rcr
ret
adc
pusha
mov
sbb
bound
jmp
push
shr
loope
lock
cmpsb
addr16
fwait
jecxz
lods
xchg
outsl
imul
fwait
or
mov
mov
sub
ret
js
pop
jo
aam
sbb
lahf
xchg
xchg
mov
ret
xchg
rorb
ret
shlb
xchg
fcoml
cmpsl
pop
inc
xchg
and
je,pn
lahf
lcall
fiadds
mov
push
or
fiadds
movb
inc
or
shlb
xorb
xchg
roll
push
xlat
jmp
mov
arpl
enter
lods
mov
xchg
mov
xchg
sbb
sbb
out
fisubrl
push
jne
cld
int3
push
aas
mov
outsb
add
cmpb
popf
and
cmp
dec
iret
mov
inc
aad
mov
shrb
mov
dec
mov
inc
cmp
xchg
outsb
xor
adc
popf
mov
xor
bound
subb
stos
sub
in
cltd
and
mov
sub
adc
push
inc
sub
shlb
mov
mov
pop
push
es
stos
push
fildl
iret
pushf
stos
rcl
nop
aam
out
nop
inc
loop
sub
cmp
mov
stos
mov
pushf
dec
sbb
shlb
xor
xchg
cmpb
or
mov
jg
lea
les
cmc
cmp
fcoms
call
pop
ror
fisubrl
out
loopne
ss
fsubs
daa
lods
lret
lcall
sbb
test
lods
les
sub
xor
lahf
in
ret
push
lods
rolb
cmpsb
data16
ret
loop
roll
dec
sub
xchg
shll
dec
loop
cmpsb
bound
push
dec
jbe
inc
pop
in
dec
xor
rcll
loop
loope
sbb
test
fwait
daa
mov
add
jbe
push
inc
fnstenv
sub
outsl
dec
stos
push
ret
cmp
adc
out
outsb
or
jp
mov
aaa
jno
pushf
psrlw
out
pop
mov
fidivs
fwait
imul
insl
pusha
pop
inc
sub
subb
dec
fbstp
xorl
jo
dec
bound
cld
lds
mov
in
flds
cwtl
leave
ds
scas
iret
mov
clts
sub
push
push
push
pop
orb
test
sbb
ss
lahf
xor
cmovp
xchg
les
pop
ret
bound
fs
adc
push
fsubrs
mov
lods
enter
addb
mov
xchg
aam
ret
xchg
insl
pop
mov
jmp
xor
stos
sbb
xchg
jmp
sarl
dec
adc
inc
aad
pop
mov
mov
mov
push
test
xchg
mov
pop
pop
rcl
fisttpl
and
push
mov
xchg
ret
dec
pop
mov
jns
outsl
dec
push
data16
jae
pop
je
insl
xchg
ja
out
xlat
data16
xchg
xor
fcoms
lcall
cli
mov
push
popf
stc
mov
lods
and
rcrl
aaa
jb
outsl
jb
scas
sub
inc
ffree
pushf
mov
shll
pop
out
stos
mov
and
xchg
in
push
push
scas
sti
mov
repnz
mov
mov
icebp
int3
mov
repnz
cld
cld
imul
lahf
repz
ja
rorl
out
mov
xor
mov
cmp
lods
xor
add
fimull
inc
imul
xchg
popa
mov
hlt
scas
nop
pop
sti
xlat
inc
add
loope
lret
mov
jle
fnstcw
repnz
jl
shlb
scas
ret
lahf
jmp
xchg
xchg
icebp
pushf
jmp
jl
fdivrs
jg
cmovno
inc
mov
inc
sahf
cld
adcl
sub
pop
shl
and
add
rorl
movsl
xor
xchg
dec
push
mov
xlat
xchg
daa
jb
aad
std
stos
or
xchg
cmp
test
inc
mulb
sub
outsb
fisubl
push
mov
jb
and
lods
push
mov
dec
mov
shll
in
shl
dec
add
sti
in
push
ds
arpl
xlat
push
aad
out
jp
fsubrl
xor
mov
repnz
push
outsb
pop
and
shlb
push
leave
inc
or
jl
addr16
dec
jnp
cs
inc
cli
aas
movsl
fisubs
insl
test
fisubs
divb
cld
xor
dec
shll
adc
ret
ljmp
popf
add
xchg
inc
pop
lock
es
mov
lahf
bound
jl
loope
lcall
mov
mov
cmp
mov
inc
enter
add
push
pushf
ret
ss
xchg
popl
sbb
inc
xchg
loope
scas
xchg
xchg
andb
in
sbb
mov
roll
or
int3
ds
inc
pop
or
call
call
scas
xor
addb
pop
das
and
jne
jl
mov
les
std
xor
jmp
shl
scas
pushf
aam
add
dec
test
sbb
xor
adc
cmp
ljmp
movsb
hlt
mov
inc
stos
out
icebp
add
mov
jle
sub
insl
sbbl
ret
lea
lret
mov
add
stos
mov
cmp
scas
xor
xor
adc
dec
mov
mov
xchg
data16
rol
ja
fdivs
and
pop
dec
mov
aad
cld
mov
fs
negb
jbe
sub
xor
or
out
outsl
mov
loopne
lock
jecxz
xlat
cmp
mov
inc
leave
mov
mov
lds
sbb
inc
mov
aam
das
xchg
imul
mov
cmp
dec
xchg
shrb
pop
test
sbb
xchg
mov
imul
test
mov
add
dec
jge
xchg
xor
mov
cli
aas
fcoms
movsb
lret
xchg
clc
stc
out
xlat
push
xchg
fistpll
sbb
lock
into
test
mov
xchg
ret
stos
or
xchg
test
or
lret
push
mov
and
test
dec
ss
push
add
cmpsl
or
jnp
rclb
fistl
cs
loop
xchg
mov
rcrl
xchg
aaa
lcall
mov
add
cmp
jmp
push
push
stos
es
pop
sbb
loope
mov
aas
shrb
in
insb
dec
sub
std
aam
push
scas
cld
fstp
and
add
lcall
push
push
movsb
pop
jae
push
add
and
jmp
xchg
bound
xor
mov
sub
aas
cld
add
pop
xchg
les
cmpsl
imul
jo
or
mov
and
dec
aad
hlt
test
mov
out
in
das
push
repz
mov
xchg
ret
and
dec
dec
mov
adc
movsl
pop
stos
bound
hlt
or
jle
addr16
shll
xor
sub
adc
dec
out
cmp
mov
stos
jg
pusha
jp
push
repnz
into
sbb
int
push
ret
dec
sbb
movsw
filds
vphaddudq
inc
sbb
mov
fnstsw
lret
nop
jbe
adc
orl
lahf
cld
mov
daa
mov
or
jbe
mov
cmp
imul
data16
mov
imul
addb
jnp
adc
aad
jge
jne
mov
test
outsb
sub
dec
jb
push
cmc
cmp
dec
adcb
jns
mov
and
rcll
subb
rclb
adc
cmp
dec
sub
mov
xor
ret
add
lahf
push
and
sub
into
loopne
popa
push
xchg
or
and
mov
cmpsb
push
push
lahf
out
std
mov
dec
dec
dec
idivl
sti
shll
mov
xchg
js
sub
pop
in
out
addr16
jl
fcomip
bound
dec
inc
cmpl
pusha
movsb
and
je
test
pop
push
pushf
lahf
bound
loopne
xchg
cli
xchg
adc
xchg
push
aam
in
push
sahf
pop
popf
repnz
mov
cmp
faddp
aas
iret
push
xlat
pop
fimuls
mov
mov
xchg
stos
xchg
mulb
addr16
xchg
cmpsl
rep
inc
ret
dec
rcrb
bound
or
jl
insb
loope
aam
dec
leave
out
test
adc
iret
test
scas
or
xor
bound
adc
mov
pop
dec
jnp
pop
adc
cmp
inc
pop
fcmovb
repnz
scas
mov
jnp
movsl
and
cmp
lock
int3
mov
pop
jmp
or
pop
and
loope
aam
or
lea
pop
mov
sbb
or
dec
or
into
push
pop
push
sub
shr
daa
mov
xchg
mov
je
mov
lea
mov
mov
cld
xchg
andb
push
in
jo
negl
xchg
aam
es
inc
xchg
push
out
xchg
jg
push
cwtl
and
add
jg
push
and
push
rcrb
push
jno
xchg
or
shll
cmpsb
xor
adc
xchg
and
jbe
test
outsl
cmp
int3
fstpt
mov
sub
xlat
xor
std
cmp
in
ret
scas
clc
add
or
ret
je
cmpsb
or
out
in
outsb
jns
lret
cmp
pusha
ret
mov
jge
mov
push
mov
lea
daa
imul
sbb
sti
pop
fwait
and
fmul
mov
ret
cltd
lcall
pushf
lds
mov
aad
mov
into
sub
push
lock
mov
outsl
push
std
inc
jmp
or
rcr
sbb
adc
mov
xor
lds
push
fcmovb
fsubr
add
gs
push
inc
lahf
aas
sub
mov
sub
push
mov
in
les
notb
popa
lahf
outsb
ret
push
fldt
or
insl
aad
jbe
pop
loope
loope
and
scas
ss
pop
mov
and
inc
sub
out
push
cmp
mov
adc
cmpsl
outsb
mov
fs
fldenv
andb
push
push
imul
mov
cmp
bound
push
xchg
aad
addr16
push
sub
bound
sbb
addr16
roll
push
pop
fstl
clc
push
and
cmp
daa
adc
sbb
xchg
lcall
sub
nop
iret
stos
sbb
pop
sub
jo
js
add
push
outsl
jmp
fsubrs
aam
lock
out
cltd
mov
stos
xchg
xor
aam
xor
sbb
shll
rcrb
pop
inc
adc
mov
mov
les
ds
incb
out
adc
and
jl
insb
lods
cs
mov
push
jb
outsb
xchg
and
loop
rorb
sub
cmpsl
test
sbb
les
cmp
shrl
mov
es
inc
lcall
mov
mov
fistpll
pop
nop
sti
xchg
jl
push
jno
inc
test
jl
and
xlat
mov
push
adc
xchg
mov
mov
jno
std
int
mov
xchg
pop
lret
rorb
sbb
test
cmp
mov
push
jo
or
call
xchg
mov
xchg
sub
mov
lods
pop
pop
mov
mov
orl
mov
es
mov
mov
cwtd
enter
mov
out
cli
pushf
popa
lea
mov
mov
and
push
mov
mov
xchg
or
popl
out
jg
sarb
rcl
xor
dec
mov
nop
mov
add
push
popf
mov
rclb
push
cwtl
lods
test
or
mov
fnsave
into
inc
insb
mov
push
lock
cmpb
movsb
xchg
mov
sub
nop
pop
add
xorl
movsl
cmp
mov
xchg
push
mov
pop
adc
subb
jb
repnz
outsb
push
bound
test
mov
push
mov
ds
mov
dec
jl
inc
xchg
and
repnz
shll
rcrb
cs
mov
xor
jns
xchg
imul
rcrb
or
flds
mov
adc
fcmovb
cmp
sub
pop
bound
enter
inc
jbe
cmpsb
push
cs
addr16
sbb
xchg
cmp
insl
leave
dec
leave
cld
aam
imul
lea
pop
rcrb
xor
outsb
mov
call
pop
orl
mov
lock
mov
scas
lock
xchg
rorl
jge
mov
mov
bound
lcall
rclb
nop
sub
std
ljmp
push
call
or
scas
jo
xchg
mov
out
jge
push
mov
mov
jae
test
jp
enter
sbb
jo
xchg
cs
ja
movlhps
mov
femms
sub
sub
or
pop
pop
in
stos
sarb
inc
fld
push
mov
pop
or
sarb
push
pushf
outsl
mov
fcmove
pop
daa
call
sub
in
push
ljmp
test
jp
adcl
or
xchg
gs
lock
jp
adc
mov
rorb
dec
leave
pop
mov
ret
xchg
push
insb
or
push
mov
xchg
mov
push
movb
sbbb
sbb
jb
mov
dec
or
push
xchg
jb
pop
jb
outsb
dec
and
inc
ret
outsb
je
lret
test
dec
or
mov
dec
outsb
cmp
cmp
mov
aam
loopne
xchg
into
shr
jne
stos
push
loop
mov
out
dec
add
jg
dec
add
adc
nop
mov
push
cmpsl
adcb
lea
bound
popa
pop
push
mov
mov
and
mov
aad
cmpsl
xchg
dec
sbb
data16
mov
sbb
out
in
push
aaa
sub
int3
mov
xchg
xor
mov
lret
ljmp
inc
jne
fldl
add
lds
sub
sarb
or
cs
and
lahf
movsb
loop
sub
sahf
aas
std
mov
sbb
mov
mov
xor
push
xchg
leave
out
mov
add
sbb
enter
or
cltd
xlat
jno
std
popf
push
sti
cld
dec
pop
xchg
cmp
jb
push
push
push
out
xchg
imul
fcmovb
mov
cld
push
testl
ret
cmpsb
or
sahf
shlb
repz
addr16
out
sub
stos
dec
xchg
addr16
jb
mov
cmp
adc
enter
lcallw
jnp
jb
int
inc
sti
std
stc
scas
sub
inc
sbb
adc
jnp
nop
repz
cwtl
fldl
jbe
jb
imul
lahf
jbe
loopne
push
leave
jp
subps
fadds
fcmovb
and
mov
and
loop
and
sbb
or
fildll
xchg
aad
pop
sub
in
and
fwait
aas
aam
icebp
bnd
repz
and
cli
xchg
and
jbe
mov
mov
mov
adc
xor
cmc
inc
imul
cmpsb
or
cs
shl
mov
int3
lahf
sahf
rorb
lods
idiv
add
xor
xor
mov
mov
push
ret
nop
push
xor
xchg
and
test
out
mov
xchg
pop
ljmp
pop
insb
adc
inc
scas
into
mov
jp
xor
in
inc
shlb
pop
inc
mov
rcr
mov
mov
lods
push
psubusw
dec
add
mov
or
shll
add
enter
jbe
xchg
jecxz
jmp
lds
xchg
push
jnp
icebp
ret
dec
push
mov
pusha
push
mov
jnp
cmp
mov
mov
lods
ror
add
mov
dec
into
sub
sub
clc
xchg
call
loopne
fwait
dec
packssdw
adc
push
iret
or
dec
dec
sahf
das
cmp
lret
mov
enter
sti
rcll
and
inc
xchg
into
iret
ficoml
arpl
addl
cmp
push
xor
xchg
loope
outsb
jl
ficompl
inc
sbb
setge
call
mov
ret
add
fdiv
add
lcall
mov
outsl
ss
loopne
cmp
ret
push
inc
xchg
mov
cli
into
xchg
mov
shll
or
lret
std
test
mov
rcll
andl
adc
cwtl
add
pop
pop
xorb
faddl
ret
xchg
into
rcrl
sarl
push
aas
mov
sti
add
out
or
sbb
xor
insb
cmpsl
adc
roll
inc
xchg
cmpsb
jg
lret
or
xchg
push
mov
scas
mov
test
jmp
cmp
mov
leave
fbstp
or
repz
mov
popl
loope
movsl
jg
test
mov
lahf
in
jns
or
aad
mov
inc
js
sti
adc
iret
enter
int
jle
and
aaa
push
fdivl
pop
mov
and
jl
sti
int
lea
cltd
push
inc
mov
pop
in
xchg
sub
nop
xchg
adc
andb
pop
repz
arpl
addb
xor
mov
pushl
aad
aaa
rorl
mov
leave
pop
fdivrl
ret
or
mov
jb
std
mov
push
ret
jno
jbe
add
xor
dec
loopw
fwait
mov
xchg
bound
lret
adc
mov
jg
lcall
add
xchg
xor
push
jmp
pop
xchg
cwtl
add
test
jbe
jp
daa
lahf
xchg
mov
push
push
add
aam
push
enter
aaa
fisttpll
mov
pop
xchg
adc
or
cli
cmpsl
ljmp
ret
push
sub
int3
mov
xchg
paddsb
xchg
pop
rcll
or
xchg
xor
fadds
sbb
lods
xchg
dec
popa
push
enter
jmp
dec
mov
sbb
jns
cmp
cli
movsb
mov
xor
pop
sarb
push
inc
fidivs
sub
out
fwait
add
xor
lret
outsb
cmp
mov
adc
ss
sarb
es
sahf
adc
iret
jbe
add
xor
jns
leave
add
xchg
sbb
mov
push
test
repz
mov
mov
mov
dec
lea
sub
fbld
jg
aaa
cmp
mov
mov
loope
inc
cld
adc
adc
jo
add
dec
or
mov
orb
faddp
fwait
mov
xor
hlt
scas
or
inc
loopne
cmp
cmpsb
lods
jns
insl
pop
test
push
mov
add
pop
lds
addr16
fsubs
jb
pop
xchg
imulb
lock
aad
add
jns
sbb
js
mov
js
push
nop
cli
mov
or
orb
adc
jae
lods
or
add
add
jo
xchg
lret
xchg
imul
dec
mov
pop
arpl
sub
nop
add
leave
sbb
jo
mov
fstpl
sbbb
xchg
jp
bound
xor
sub
sbb
fstl
push
xchg
inc
or
fwait
fwait
push
or
mov
aad
mov
aaa
popa
sbb
out
and
cmpsb
loop
cmp
repz
sti
fidivl
lahf
xor
push
xchg
pop
cmp
pop
fs
inc
lret
dec
aam
sbb
addr16
push
push
pop
sbb
mov
push
hlt
cmp
ss
out
cmp
mov
pushl
cltd
mov
inc
mov
mov
std
stos
add
adcb
cmp
in
lock
loop
lock
lcall
cli
in
push
ss
cli
or
jmp
ss
mov
mov
adc
loop
cli
mov
jmp
mov
add
js
mov
ret
cmc
addr16
inc
iret
ficoml
cwtl
mov
mov
mov
dec
cmpsl
shll
mov
or
cmp
ljmp
push
clc
inc
xchg
xchg
into
or
icebp
and
mov
jnp
lahf
xlat
cmp
xor
adcb
ud2
mov
frstor
add
inc
dec
sub
xchg
xchg
aad
or
push
push
repz
jmp
ja
out
out
pop
les
mov
xor
sbb
push
jp
shll
sbb
push
or
pushf
leave
les
jp
pop
lahf
outsl
inc
xchg
mov
mov
mov
mov
adc
and
and
enter
outsl
cli
lods
adc
pop
imul
push
shrb
sbb
xor
jnp
jp
mov
nop
push
stos
aas
push
add
xchg
insb
shr
daa
mov
daa
loopne
daa
mov
jb
sti
mov
push
int3
and
or
xchg
test
xchg
lahf
sahf
in
sbb
sub
shl
adc
sub
sub
pop
xchg
gs
pusha
adc
push
mov
repz
xchg
and
xlat
cmp
sub
mov
mov
nop
pop
lods
iret
call
arpl
lret
mov
stos
ds
mov
ffree
sub
pop
pop
or
jbe
daa
js
jbe
mov
outsl
cmp
inc
pop
mov
adc
inc
inc
subb
jge
dec
insl
rcrb
loopne
xor
jb
frstor
xchg
andl
sbb
jo
xchg
cmp
int3
ja
pop
push
dec
test
xor
cmpsb
cmpsb
xchg
mov
mov
push
dec
negb
or
push
xorl
or
das
push
addb
sbb
pop
sti
scas
shrl
shrb
ret
fstpt
repz
push
push
pop
mov
xchg
rcrl
mov
adc
lock
mov
pop
enter
pop
xchg
or
psubb
loope
lret
rorb
xlat
js
jnp
movsb
xchg
or
xchg
jg
shl
mov
xchg
cmc
insl
mov
jl
clc
sbb
and
jecxz
cli
jecxz
or
stc
arpl
gs
movsl
push
stc
addl
mov
pusha
cmp
aaa
mov
sarl
pop
test
cmpsl
mov
stos
push
fldl
insb
fld
test
and
add
rol
sti
or
mov
xchg
mov
movsl
lea
jo
pop
test
imul
outsb
adc
dec
pop
ret
ret
add
rcrl
outsb
loop
jl
sbb
ffreep
sbb
les
fxch
xor
jp
inc
clc
xchg
mov
icebp
push
and
and
xchg
imul
xchg
jbe
adc
divb
xchg
stc
insb
mov
fisubl
lcall
pop
pop
nop
int
nop
aad
push
and
xchg
into
dec
mov
adc
sbb
add
pop
data16
xchg
sarl
mov
mov
loop
es
scas
lret
cwtl
cmp
fwait
lcall
or
addb
mov
arpl
dec
mov
xchg
inc
mov
fdiv
cmpsl
xlat
add
adc
popf
repz
aad
mov
gs
jb
add
pop
or
or
dec
data16
adc
aam
nop
or
bound
negl
xor
and
addb
push
repz
cmp
push
pop
cli
adc
rol
stos
insl
jo
fdivrl
jbe
test
test
pop
daa
bound
test
rolb
pop
jmp
push
cmp
pop
out
arpl
mov
push
cld
leave
dec
or
push
jmp
xor
test
cli
movsl
add
jp
mov
imul
enter
jb
push
leave
lcall
repnz
xchg
out
adc
lahf
mov
mov
mov
out
adc
sbb
nop
adc
adc
movsl
inc
popf
push
out
repz
in
dec
outsb
hlt
fwait
out
pop
pusha
imul
add
out
push
mov
push
cs
adc
mov
mov
int
mov
lea
rorb
dec
inc
dec
add
imul
sbb
out
push
mov
jb
push
push
pop
popf
add
adc
xor
pusha
rclb
rolb
dec
outsb
add
adc
sti
fdivl
dec
mov
mov
sub
add
and
imul
mov
xor
add
inc
outsb
mov
leave
inc
push
rclb
dec
sbb
xchg
lds
shl
lcall
mov
jl
pop
cld
lods
mov
pop
ss
jl
mov
dec
aad
push
lea
xor
pop
push
mov
mov
lods
mov
jb
lods
and
cmp
aam
dec
dec
dec
inc
shlb
andb
inc
loop
mov
push
and
shlb
rorl
mov
push
test
fildl
sbb
ret
add
test
xchg
lods
cli
les
pop
mov
out
imul
adc
push
jle
data16
adc
ret
jb
dec
aas
sbbb
cmpb
inc
push
sbb
ret
inc
movl
addb
jb
push
popa
or
mov
lds
dec
dec
das
fwait
inc
xchg
icebp
stos
leave
dec
outsb
icebp
lcall
mov
lahf
outsb
fcomp
in
mov
mov
inc
lcall
mov
or
mov
jg
outsb
or
sub
pop
int
stos
test
lods
mov
rol
stos
xor
mov
loopne
push
cltd
xor
xor
sub
outsl
cmovae
push
stos
lods
je
cmpsl
dec
mov
mov
push
dec
push
in
mov
push
mov
inc
and
mov
push
sub
movsl
xor
lahf
andl
outsl
inc
sub
inc
aam
xor
repnz
lods
pop
addr16
mov
aam
out
aad
int
rorl
das
scas
or
out
out
aad
xchg
mov
mov
int3
mov
pop
rcr
xor
shrl
and
lahf
cmpsb
bound
stos
jo
pushf
shlb
shll
jns
dec
sub
clc
xchg
call
xor
and
test
mov
xchg
test
scas
push
sub
popa
jl
jbe
sbb
pop
sbb
repz
pop
fstpl
xlat
test
mov
arpl
mov
rep
adc
cmpsl
mov
daa
jg
xchg
jae
and
mov
pusha
adc
add
orb
mov
mov
mov
imul
movsb
xor
mov
push
stos
cmpsb
cli
xchg
dec
pusha
add
sbb
mov
mov
push
stos
jb
xchg
loopne
inc
jbe
add
pushf
mov
mov
jns
sub
call
inc
iret
cmpsb
mov
push
jecxz
mov
cltd
popf
jb
dec
scas
jmp
sahf
mulb
and
inc
imul
and
rorb
jns
adc
lret
dec
outsl
aas
shrl
out
xchg
mov
xor
ror
nop
fistps
xchg
xlat
cmp
and
pop
mov
sahf
nop
pop
ffree
mov
repnz
stc
mov
fildll
aam
jnp
std
sbb
mov
mov
rol
aaa
test
mov
mov
adc
in
loop
dec
or
add
cmp
adc
jecxz
mov
xchg
push
stc
xor
xchg
mov
repnz
js
rolb
into
ret
push
mov
cmp
xchg
pop
add
pop
xchg
sub
js
add
jg
sbb
fildl
xchg
push
inc
stos
pop
jmp
add
push
sub
out
pop
mov
pop
jl
xchg
sahf
xchg
enter
sbb
mov
movsl
out
adc
pop
sti
int
cmp
jecxz
into
lret
loope
shlb
jp
and
shrl
lahf
jl
outsb
rorb
sarl
jp
aas
out
and
cltd
movsl
xchg
scas
inc
pop
mov
cwtl
adc
mov
push
or
scas
jo
pop
mov
mov
mov
lods
insb
jp
add
data16
dec
cmp
cmp
pop
mov
enter
pop
or
gs
inc
mov
imul
push
mov
jp
xchg
scas
test
xchg
push
lret
add
adc
pop
mov
push
les
addb
insl
je
mov
aad
shrl
push
push
aad
insl
es
cmpsb
xchg
adc
or
notl
cmc
sbb
aaa
stos
adc
sub
scas
xchg
mov
dec
loopne
push
and
sbb
and
fsubl
aad
sub
popf
movsb
cltd
fnstcw
pop
subb
cld
lahf
repnz
ss
adc
and
jo
add
nop
push
in
or
test
dec
pop
mov
lret
pop
shrl
sahf
jns
push
mov
mov
test
jns
loop
in
popf
shll
popa
lea
fisubs
and
xor
subb
aam
adc
sahf
adc
mov
aam
gs
mov
mov
mov
push
adc
shrl
fadds
je
movsb
xchg
int3
movb
mov
mov
movsl
push
rclb
mov
push
xchg
shl
into
mul
mov
push
enter
sbb
cld
mov
mov
mov
dec
std
lret
or
sahf
mov
sub
dec
xchg
aaa
lahf
cli
xchg
mov
je
xlat
jno
push
jno
xchg
clc
xor
iret
in
pop
mov
xor
push
pushf
cmc
mov
jbe
daa
mov
repz
cltd
cmpsb
repnz
mov
cmpsl
out
mov
std
mov
shl
test
xchg
adc
in
outsl
lods
test
jge
jecxz
xchg
mov
mov
mov
mov
shlb
aad
data16
mov
shl
xchg
dec
and
dec
bnd
fimuls
repz
xorb
cmpsb
sbb
fcmovbe
stos
insb
mov
lret
inc
adc
push
jne
into
xchg
pop
repnz
fwait
mov
mov
pop
adcb
mov
fwait
insl
repnz
mov
stos
sub
les
scas
rclb
ret
lret
xorl
jl
xor
loopne
sub
imul
jmp
jle
pop
outsl
fwait
sbbb
xorl
jno
popf
mov
mov
out
fdivs
loop
test
pop
xchg
jg
sub
imul
movsb
mov
or
pop
popf
out
movsl
cmpsb
cltd
or
out
sbb
out
inc
lds
or
pop
fwait
or
xlat
adc
sub
sar
mov
loop
shlb
xor
and
xorb
shll
cmpsl
dec
xchg
adc
sbb
outsb
scas
aad
sbb
xlat
out
adcl
or
imul
test
lret
pop
ss
pop
call
and
mov
loopne
movsl
repnz
ja
movsl
ds
mov
mov
xchg
cltd
inc
xchg
loopne
lcall
sbb
push
and
mov
push
adc
roll
or
lcall
mov
xor
in
xchg
xor
xchg
mov
xor
pop
mov
dec
mov
movsl
inc
les
cmpb
push
imul
clc
mov
adcl
jp
into
lods
sti
sarl
add
xchg
daa
and
push
clc
fdivl
arpl
lods
hlt
lods
cmp
pop
push
xlat
insb
jecxz
adc
sub
in
stos
adc
mov
dec
pop
sarl
inc
nop
out
adcb
mov
jno
cld
adc
sbb
int3
jmp
fcmovne
mov
pop
int
dec
pop
mov
cld
and
test
cmp
push
negb
and
stos
aam
not
leave
ret
in
into
sub
aas
std
je
movsl
rcrl
stc
cmc
dec
out
add
outsl
xchg
repz
enter
push
lds
sbb
or
pop
xchg
push
and
mov
adc
mov
mov
mov
pop
fwait
xor
push
bound
or
push
xchg
std
movsl
fdivrs
aas
lods
imul
hlt
pop
out
pop
rclb
lea
pop
sahf
aam
ret
mov
insb
aam
mov
lcall
mov
repnz
mov
add
gs
xchg
aad
das
dec
icebp
mov
outsb
les
or
popa
mov
xor
cli
inc
sub
fstpl
push
pop
ds
call
pop
add
jg
add
aad
icebp
lahf
repz
fstpl
adc
out
inc
cmp
icebp
mov
leavew
mov
push
jo
sbb
pop
stc
popf
jb
cmp
rcll
add
loop
shl
jae
xchg
imul
ret
fistl
mov
xchg
mov
jbe
xor
cmc
mov
cmp
psubsw
pop
xor
pop
movb
adc
pushf
sbb
push
dec
sahf
test
push
push
addb
cmc
and
mov
adc
mov
xchg
aam
cmc
mov
test
icebp
fdivrp
mov
bound
bound
dec
test
or
mov
jo,pt
sbb
xor
loop
aam
ja
xor
lods
bound
jbe
jns
ret
ljmp
mov
enter
or
sub
jg
repnz
cmp
add
xchg
cli
jno
sarb
cmpsb
xchg
cs
popa
jmp
inc
add
and
call
sbb
sarb
imul
idivl
or
mov
out
or
mov
mov
mov
in
out
xchg
inc
setbe
wrmsr
ljmp
add
adc
or
jp
stos
push
add
sbb
pop
push
mov
rorl
in
sbb
add
inc
pop
repz
sti
addr16
and
mov
out
mov
sbb
cmp
push
push
lea
mov
pop
addr16
shr
cmpsb
cld
fcmovne
inc
push
xchg
inc
out
push
or
cmp
cli
sub
xchg
mov
test
out
xchg
stos
jecxz
add
repz
cmp
test
imul
dec
and
lret
or
add
jg
jo
and
mov
push
ljmp
sub
movsb
mov
or
jle
mov
mov
jg
int3
fimull
cmp
test
je
lcall
push
repz
fwait
cwtl
imul
ja
out
pusha
shlb
in
or
out
add
mov
xchg
bound
mov
push
or
push
repz
mov
push
sarb
addb
cmp
xor
dec
sbbb
lret
jb
rcrl
mov
leave
push
leave
adc
sub
pop
loopne
test
xor
xchg
inc
divl
jg
movsl
and
orl
repnz
loopne
cld
push
outsb
mov
dec
scas
push
add
iret
add
add
mov
xchg
xor
movsl
sbbb
dec
mov
mov
rcl
imul
and
loop
cld
sarb
sahf
xchg
test
mov
push
jo
stos
xchg
aad
push
addr16
mov
xchg
movsl
dec
sub
xor
mov
fcmovb
outsl
addr16
jl
movsb
cmp
into
or
lds
push
into
cmp
sbbb
sub
mov
push
cmpsl
cmc
xchg
xchg
ss
cmp
jge
scas
or
xor
xchg
and
aam
pushf
push
outsl
cmp
das
jo
xchg
cmp
push
test
cltd
out
mov
push
popa
xor
push
sub
jnp
xorb
jae
jp
cli
in
or
stos
cmpsl
xchg
out
rcll
cld
xchg
mov
std
sahf
xchg
lahf
or
fbstp
xchg
adc
add
xchg
mov
or
mov
push
rorl
pminub
jb
mov
jb
insl
sahf
sbb
sahf
ror
fdivl
or
cmp
mov
push
pop
cmc
lcall
jl
push
lods
mov
dec
outsl
push
mov
xchg
push
or
inc
test
loopne
mov
sbb
mov
scas
lcall
ror
outsl
mov
lcall
cmpsl
mov
mov
jp
ror
nop
adc
repnz
dec
cmpsl
imul
or
adc
shrl
insl
lahf
or
movsb
fwait
mov
mov
test
nop
je
stos
aad
je
fsubr
enter
adc
ljmp
ror
xchg
xchg
out
notb
cmpsl
inc
mov
dec
cwtl
mov
jne
testb
mov
pop
leave
mov
mov
jbe
or
mov
jns
repz
lea
es
jno
mov
fcompl
xchg
jmp
mov
mov
les
nop
push
out
mov
xor
pop
mov
aas
mov
data16
lds
repz
mov
adc
and
fstpt
and
pop
and
mov
sahf
xor
mov
xchg
je
mov
insb
and
test
push
and
dec
or
das
push
test
jno
mov
dec
add
push
movsb
test
in
cmp
jbe
jp
xor
cmpb
js
adc
sub
les
jge
and
test
or
in
mov
adc
pop
fs
inc
test
mov
int
sub
xor
jns
mov
fcmovnb
mov
enter
rep
adc
cmpsb
push
ret
fldcw
sub
loope
aas
fdivl
sti
lcall
sahf
fwait
into
leave
shrl
nop
lods
cmpl
cmp
cmpsb
xchg
dec
dec
int3
mov
std
cmpsb
push
inc
inc
hlt
adc
hlt
cmp
loope
mov
xor
into
nop
xsha1
cmpsb
mov
insl
addb
and
in
sbb
jecxz
data16
cmp
sti
ljmp
into
shll
sbb
iret
cmpsb
push
xchg
in
mov
fwait
pop
push
xchg
rorb
sub
mov
inc
dec
shlb
sbb
lods
gs
jbe
lods
ss
cmc
jmp
push
cltd
fisttps
jne
fnsave
jns
outsb
or
jp
add
and
dec
or
cwtl
mov
out
addr16
pop
outsl
out
cld
jo
and
dec
aad
xlat
scas
jbe
adc
mov
adc
sub
inc
ffree
sbb
push
pcmpgtw
bound
iret
mov
xchg
inc
add
jns
cli
pop
or
out
sbb
jbe
xchg
jno
add
xchg
nop
cli
repnz
mov
push
sub
addr16
loop
repz
into
pop
mov
adc
pop
sub
sub
fstpt
in
xchg
pop
shl
fsubs
outsb
push
push
popa
xlat
dec
cwtl
mov
mov
shlb
jg
fisttpl
jae
pushf
sub
jp
sbb
adc
adc
imul
pop
cmpsl
mov
sbb
xlat
cmp
cli
js
jp
ret
arpl
ds
data16
loop
fsubrl
js
xchg
lcall
cmp
and
add
xchg
xchg
jbe
adc
or
dec
cmp
lcall
sbb
pop
adc
ret
in
xchg
add
pusha
jbe
jl
adc
mov
dec
jnp
in
scas
mov
nop
movsl
repz
lods
push
lods
das
fs
or
jae
test
xchg
imul
xchg
adc
insl
inc
fldcw
mov
int3
jbe
ret
pop
aam
sub
add
dec
jbe
sbb
xchg
xorb
decl
sti
sbb
mov
stos
jp
sbb
or
icebp
aad
pop
lods
xlat
and
xchg
pop
xchg
mov
push
fstpt
pop
ret
add
mov
mov
fmuls
enter
xor
add
sbb
mov
lcall
inc
mov
inc
incl
mov
scas
std
add
dec
dec
xchg
inc
inc
xor
mov
testb
add
jb
add
divb
outsb
addr16
jl
adc
test
push
or
mov
inc
pop
xchg
or
into
add
mov
out
push
xchg
into
insl
mov
mov
ret
cwtl
test
mov
fdivr
cld
xchg
or
movzwl
add
jmp
test
fcoms
in
bound
sbb
faddl
insb
icebp
inc
jp
and
xchg
or
popf
setg
push
lahf
xchg
les
xchg
mov
mov
push
movsl
push
enter
movsl
pop
hlt
outsb
ret
mov
aam
inc
cli
ret
inc
pushf
test
mov
shll
les
mov
insb
mov
pop
cli
push
movsl
inc
out
jmp
add
pop
jl
dec
adcb
loopne
repz
adc
sbb
inc
adc
gs
out
iret
cmpsb
fucompp
push
mov
in
shrl
push
mov
jae
mov
push
les
outsb
shr
flds
mov
mov
sti
mov
mov
xchg
in
push
cmp
test
or
fmuls
mov
cmpsl
xor
out
push
stc
lahf
ret
fidivs
cltd
push
sub
imul
ret
ficoms
add
jb
adc
aam
cmp
insb
scas
sti
mov
sar
aaa
lahf
pusha
in
fucomip
inc
add
jo
pushf
cmp
popl
xor
rcrb
sahf
popl
mov
addr16
lret
add
int
xchg
data16
cmpsl
loop
add
jge
push
outsl
leave
jl
ret
mov
fsubr
pop
out
sti
xchg
pop
mov
and
dec
fsubl
xor
xor
sbb
in
sbb
divl
idiv
arpl
imul
sti
jno
mov
inc
stos
pop
mov
push
test
xchg
shrb
mov
and
ret
inc
mov
mov
mov
add
mov
push
xchg
int
aad
add
je
xchg
adc
scas
popf
cld
stos
ja
xchg
or
pushf
cmp
and
xchg
push
ss
xchg
sarb
inc
ss
leave
test
and
std
ljmp
cmp
leave
aaa
add
leave
imul
cmpb
mov
addr16
mov
pop
mov
cmp
add
xlat
imul
ljmp
shl
xchg
lods
iret
push
fwait
or
lcall
adc
shlb
fyl2x
pushf
inc
fcmove
mov
ret
addr16
lahf
rolb
xor
jo
xchg
adc
xchg
mov
jae
mov
cmp
cmp
mov
sahf
push
popf
mov
mov
outsl
pop
mov
inc
test
or
add
dec
mov
rorb
dec
push
rorb
mov
xchg
test
xorb
pop
add
lret
add
cmp
dec
sbb
mov
subb
data16
xchg
cmc
sar
jne
sbb
lds
stos
xor
lods
push
xor
cmp
test
sti
push
xchg
bound
icebp
pop
dec
aad
mov
adc
xchg
pop
xlat
les
cli
out
xlat
push
inc
fcmovnb
mov
ss
frstor
xor
inc
out
xlat
xor
xchg
cli
stc
or
xchg
rsqrtps
sbb
adc
cmpsb
jp
aad
sub
clc
and
jnp
and
sbb
adc
jp
add
mov
mov
xchg
jl
mov
ds
dec
test
adc
ljmp
jnp
mov
test
fidivrl
adc
shr
stos
jnp
js
das
outsb
push
mov
ret
clc
cmc
jmp
sahf
mov
push
cmp
test
pop
xchg
push
mov
push
and
rep
cmpsl
push
lea
push
js
push
push
fwait
cld
mov
xchg
cmp
mov
or
test
xchg
mov
lahf
in
add
jnp
sub
xor
adc
lods
es
mov
pushf
and
sub
cmpl
and
int3
sub
enter
dec
add
xchg
ret
dec
fidivrs
add
insb
sbb
inc
ret
in
mov
sbb
rcll
jne
xchg
lcall
pop
addr16
xchg
ret
xor
or
xchg
pop
inc
mov
inc
test
push
xchg
into
insl
mov
scas
into
pop
xchg
mov
mov
dec
jp
jo,pn
xorb
call
adcb
pop
cmp
stos
iret
or
adc
mov
imull
sub
and
cld
jbe
inc
cli
stos
mov
lds
dec
xor
sti
mov
ja
nop
aad
movsl
sub
pshufw
xchg
jns
andl
push
or
jge
pop
ficompl
jl
cli
das
shll
xor
mov
data16
push
popf
mov
cwtl
lods
and
adc
push
xlat
rcr
enter
fwait
push
jl
add
push
mov
scas
cmp
pushf
mov
cmpb
fisubl
sub
lret
iret
bound
pop
or
push
push
add
sub
adc
jne
mov
sub
dec
ljmp
outsb
jl
jmp
xchg
insl
mov
popa
adc
movsb
mulb
jae
xchg
lret
ret
cmc
xor
xchg
data16
repnz
mov
xor
xor
aaa
aas
jae
mov
std
and
sbb
dec
fsubr
xchg
imull
arpl
jno
inc
out
inc
bound
cli
mov
push
ret
xchg
mov
adc
cli
lods
iret
stc
sub
sub
push
adc
push
and
push
pop
cmpsl
xlat
mov
mov
aad
lahf
sbb
enter
pusha
notb
add
outsl
adc
and
in
jmp
cmp
ret
movsl
pushaw
dec
xchg
lea
push
jb
lods
pop
addr16
dec
pop
mov
add
stos
push
xchg
cltd
incl
add
mov
pop
cmp
inc
popa
cld
inc
cmp
mov
sub
xlat
mov
xchg
addr16
xchg
inc
mov
pop
rclb
jns
mov
outsl
xor
xchg
mov
or
inc
jnp
lock
jbe
repz
jns
cmpsl
adc
insb
mov
adc
out
stos
xchg
jne
sbb
cli
pop
cmp
sahf
jl
dec
xor
sbb
lcall
sbbl
test
lods
loopne
test
out
and
sbb
pop
outsb
mov
adc
sti
out
sbb
movsl
dec
xchg
xchg
cli
test
lds
xchg
stc
aam
test
mov
ja
fadds
dec
cmp
lret
mov
in
int
aaa
xorb
jno
xor
adc
mov
fimuls
mov
jl
pop
mov
stos
mov
dec
test
cmpsb
or
pushl
in
cmp
mov
xchg
pop
ss
or
enter
rol
jbe
push
ret
mov
mov
iret
iret
pop
sbb
mov
out
push
leave
nop
sbb
aam
jne
in
aam
jmp
inc
or
mov
out
mov
pop
repz
in
subb
test
adc
in
fcmovb
adc
mov
sub
les
iretw
mov
cmpsl
mov
mov
mov
mov
mov
adcl
mov
cld
xor
add
enter
mov
das
test
fsubrs
int
shll
sub
outsb
xor
inc
ret
dec
xchg
cmp
hlt
jae
movsl
leave
loope
adc
push
stos
popa
shld
push
mov
aaa
xchg
sub
mov
cwtl
add
xorl
cmc
lods
lea
lods
cmpsl
dec
jb
test
outsl
fmull
ret
mov
loopne
mov
pop
in
inc
pop
push
icebp
testb
push
xor
mov
and
add
sub
pushf
xlat
mov
idiv
xor
std
push
jg
leave
mov
dec
cmp
mov
push
push
stc
bnd
cmp
hlt
cmc
xchg
fisubl
repz
insb
dec
ficompl
cmc
in
push
mov
cmpsb
pop
mov
push
aas
es
push
jnp
sbb
sbb
mov
xchg
xor
cli
adc
or
add
or
cmp
rolb
repz
jmp
cmpb
push
lods
inc
sub
std
loop
push
lret
and
cmp
mov
cmpsl
push
aam
mov
cmp
sbbl
cmpsb
mov
ljmp
test
into
mov
repnz
xchg
mov
movsl
insl
xchg
lock
dec
and
cmpb
into
lock
cltd
insb
push
adcb
jge
ljmp
dec
sbb
xchg
dec
loopne
xchg
orb
icebp
out
subb
arpl
sbb
enter
nop
push
mov
pop
mov
cwtl
enter
dec
mov
pushf
mov
data16
movsb
and
push
inc
imul
add
pop
test
sahf
pop
stc
stos
jne
jp
adc
loopne
push
pop
mov
bound
test
add
lret
pop
sub
loope
ret
js
pop
adc
mov
loop
xchg
cmp
add
dec
inc
mov
dec
mov
gs
jbe
mov
mov
lock
jnp
or
out
lret
xlat
mov
and
add
cs
pop
sar
xchg
hlt
push
negl
or
jns
jmp
sub
dec
out
pushl
mov
mov
or
jnp
inc
and
out
xor
scas
xchg
lds
push
mov
mov
push
lods
inc
mov
cltd
mov
sub
xchg
lds
mov
sub
mov
mov
mov
or
mov
cmp
or
daa
mov
test
sbb
mov
rcl
hlt
ds
dec
cmp
and
adc
ret
ljmp
inc
rorb
dec
fcmovnb
pop
xor
clc
scas
dec
adcb
xor
rorl
lret
mov
lods
fcmovu
pusha
cmp
pushf
loop
pusha
xor
sub
jb
mov
adc
xchg
jmp
outsb
aam
push
fwait
xchg
ss
mov
dec
jecxz
sub
loop
jp
rcrl
xchg
in
inc
xchg
and
push
mov
test
ret
push
pop
aam
bound
pop
sbb
or
ret
push
dec
xchg
mov
inc
mov
shrl
gs
jbe
jns
mov
jmp
stos
cltd
jbe
mov
bound
mov
mov
inc
scas
pop
cwtl
lods
or
adc
push
out
mov
in
fwait
or
jp
push
inc
xor
push
adc
dec
jb
cmpsl
out
adc
adc
movsl
out
hlt
iret
pusha
mov
sahf
test
mov
inc
fwait
sub
test
jbe
cmp
inc
dec
ja
stc
or
test
xchg
jbe
ret
sub
sti
insb
dec
pop
aad
fwait
movsb
notl
push
and
pop
idivl
mov
aam
loop
adc
icebp
lret
aaa
scas
xchg
das
push
aaa
adc
rcr
scas
out
xchg
xor
xchg
lret
mov
xchg
push
fiaddl
inc
push
adc
jmp
inc
les
and
popf
bswap
pusha
pop
mov
dec
iret
pop
cmp
mov
push
das
pxor
fwait
adc
jmp
xor
cltd
test
sbbl
mov
pop
in
aaa
pop
mov
adc
loopne
xchg
sbb
incl
cwtl
fs
decl
dec
into
cld
pop
jbe
push
cltd
xor
mov
cmp
mov
sahf
fnstcw
xchg
xchg
jns
mov
jo
lds
xchg
fbstp
mov
and
fdivl
ret
inc
inc
punpckhbw
rcll
loopne
fildll
jmp
movsl
add
xchg
jns
rol
mov
adc
lret
dec
icebp
fmull
clc
hlt
add
test
jge
je
aaa
je
loope
sarb
iret
es
gs
aad
fs
movsl
shrb
push
mov
dec
bound
and
loopne
adc
out
out
in
add
sub
jno
adc
out
repnz
jmp
and
arpl
imul
out
mov
rcl
lea
test
fsubrs
jl
push
jae
lret
cltd
push
mov
cmp
dec
dec
jo
mov
sbb
clc
mov
shlb
aad
aaa
repz
fs
pop
nop
mov
inc
not
mov
test
out
test
sub
aad
pop
pop
movsl
fs
inc
insl
dec
pop
mov
mov
jmp
lea
add
out
mov
out
mov
adc
ret
pop
mov
in
mov
jl
lods
mov
fdivrl
mov
xor
lods
ret
icebp
int3
out
pop
ss
fs
mov
xor
adc
mov
cmp
mov
mulb
jge
daa
pop
leave
mov
mov
dec
hlt
imul
popf
das
roll
addr16
push
jge
or
inc
daa
xor
fidivrs
loope
jnp
push
push
lods
mov
int3
mov
aad
inc
imul
aam
sbb
rclb
pop
imul
jne
and
adc
lcall
lea
loopne
push
adc
shrb
mov
stos
xlat
jbe
cmp
or
adc
clc
enter
lcall
mov
out
scas
insb
mov
aam
imul
pop
test
test
fmul
xchg
fsubl
fldl
mov
sahf
pop
add
imul
sarl
pop
out
inc
push
jl
insb
mov
repnz
cmp
push
jl
outsl
pusha
lahf
cmp
pop
gs
scas
cmp
push
stc
push
cmp
dec
addr16
push
daa
pop
lods
cmp
pop
adc
aad
clc
pop
pop
in
pop
adc
lods
jge
out
xlat
push
adc
and
jo
jge
push
ja
xchg
call
inc
inc
push
mov
movsb
pop
inc
mov
cs
insb
clc
loop
dec
jno
adc
mov
push
inc
mov
push
pushf
sub
pop
loopne
cmp
jne
repz
inc
addl
mov
iret
cmpl
ficoml
jp
daa
fs
ja
adc
leave
loop
mov
pop
mov
jae
mov
mov
xor
ret
jo
stos
mov
cmp
xorb
cmp
push
daa
iret
cs
jns
sbb
inc
loopne
xor
shl
xchg
mov
mov
js
out
or
iret
ja
xchg
mov
addr16
jns
xchg
test
xchg
call
ja
outsb
test
lret
ljmp
sbb
sbb
push
pop
movsl
loopne
xchg
and
pop
adc
jo
jmp
xor
les
rclb
cwtl
push
int3
mov
and
push
into
xor
pop
mov
mov
pusha
or
push
mov
xchg
or
mov
mov
or
lcall
lods
test
pop
test
inc
jg
sarb
mov
inc
hlt
jne
push
sub
cmp
inc
rolb
out
popf
and
loop
mov
addb
outsl
ret
int
sub
sbb
pop
mov
push
push
lock
sbb
aam
mov
enter
sbb
iret
punpckhwd
dec
cmp
mov
mov
les
arpl
mov
and
in
or
jecxz
and
push
not
movsl
data16
imul
jnp
into
cmp
rcll
mov
inc
adc
mov
or
xor
mov
push
imul
xor
pop
jge
sahf
lods
mov
repnz
stos
jge
xchg
xchg
xchg
in
jp
mov
ss
lret
cltd
mov
jne
test
cmc
inc
sbb
into
mov
ficoml
jmp
imul
sub
mov
jmp
mov
xor
inc
xchg
xchg
test
aam
rorl
inc
push
xchg
aad
pop
inc
mov
ficoms
out
adc
sbb
add
xor
popf
inc
push
mov
mov
xor
cmp
inc
or
push
aad
repz
scas
test
xchg
mov
mov
sub
cmpsb
sub
rcl
inc
sub
push
inc
hlt
lcall
add
ja
inc
jmp
imul
call
imul
cmp
js
and
jbe
aam
and
ja
add
xchg
es
sbb
in
cli
cmpsb
out
into
adc
sbb
icebp
cltd
mov
inc
pop
movsb
cmpsb
dec
sarb
xor
sbb
lahf
mov
mov
xchg
xor
push
mov
scas
out
push
loope
mov
std
icebp
enter
or
mov
push
dec
jo
jge
lock
out
lea
push
pusha
aas
xchg
sbb
in
lret
imul
xchg
or
and
scas
loope
dec
and
test
out
adc
fisubl
pop
xchg
aam
popf
aam
mov
test
adc
sbb
dec
pop
and
loop
mov
mov
or
mov
pop
inc
call
inc
mov
in
insl
inc
popa
jp
push
mov
push
int
fcmovnu
orb
mov
mov
roll
jp
fwait
cmp
test
int3
call
mov
fcmovb
sbb
fadds
mov
addl
mov
xchg
pushf
int3
daa
lcall
xchg
lcall
pushf
out
push
ret
dec
hlt
xchg
pop
push
addb
adc
ja
mov
mov
test
or
cmpb
fwait
fucomip
or
xchg
sahf
lea
cli
pop
lret
lea
sbb
shrb
and
inc
orl
mov
ficoml
fwait
push
sbb
or
xchg
or
test
data16
iret
mov
xchg
xor
das
pop
fcoml
cmp
adc
shlb
mov
sub
aam
pop
or
repz
and
sbb
loop
filds
or
add
jbe
fwait
or
xor
mov
sti
push
and
cmc
jns
mov
sti
jp
mov
jecxz
ss
ljmp
pushf
push
mov
pop
shr
push
inc
inc
xchg
mov
test
mov
mov
aam
sbbb
mov
test
shl
xchg
mov
xchg
mov
mov
das
push
mov
push
cmpsb
cmp
xchg
mov
inc
cmc
into
jnp
lcall
mov
add
test
push
mov
jecxz
ljmp
cli
mov
out
pop
xchg
pop
xchg
mov
lahf
insl
and
iret
icebp
xor
push
push
mov
imul
nop
daa
js
mov
xor
sti
stos
mov
fisubrl
cltd
push
and
dec
shl
mov
inc
xchg
aad
ret
aaa
lahf
xchg
pop
ss
mov
mov
sahf
or
test
out
leave
std
mov
dec
push
inc
call
addb
incb
fadd
xchg
add
adc
rorl
inc
daa
xchg
mov
or
loopne
jg
fmuls
jbe
add
mov
jp
xor
bound
imulb
or
iret
push
mov
pop
jmp
fsubs
mov
sarb
adc
push
add
pop
and
mov
xor
inc
sahf
sub
xchg
sbb
xor
jp
xor
mov
mov
aaa
and
cltd
scas
cld
ret
scas
pop
cmpsl
or
inc
add
pushl
mov
js
jge
inc
add
sbbb
inc
mov
pusha
or
lcall
sbb
sahf
xchg
pop
shlb
lret
outsl
push
rolb
lcall
movsl
xlat
xchg
out
call
rclb
adc
push
addr16
jnp
pop
lods
add
es
int
jnp
cltd
fldenv
dec
popf
dec
adc
ret
nop
shl
mov
adc
mov
cli
xchg
mov
and
repz
xor
jg
or
imul
and
jbe
pop
test
adc
enter
adc
xchg
mov
test
mull
outsl
repz
out
shl
push
into
or
xchg
sarb
xchg
aad
sbb
cmp
jg
data16
xor
fnsave
mov
jle
jecxz
mov
push
mov
inc
pop
xchg
mov
sub
stos
iret
jp
int
xchg
mov
adc
xchg
lret
pushf
out
call
mov
jns
test
mov
iret
xlat
mov
or
fidivrl
pop
mov
adc
outsl
outsl
jne
inc
repz
out
shlb
add
xchg
and
enter
mov
je
mov
sbb
imul
int
fidivl
ret
dec
xchg
cmp
mov
cmpsl
jae
adc
cmp
xlat
cmpsb
cld
push
inc
dec
mov
jb
inc
xchg
adc
and
jl
sub
cmp
xchg
lcall
mov
mov
cs
pop
jbe
cmp
sub
mov
adc
mov
call
std
mov
inc
outsb
sbb
push
mov
and
rolb
fwait
repz
cltd
pop
std
inc
outsl
xchg
das
mov
int3
cmpsl
nop
add
jae
and
dec
mov
lahf
pushf
imul
mov
mov
push
and
mov
adc
mov
jb
aam
fcom
test
loopne
jb
add
ss
aam
shll
subb
rcr
dec
add
mov
lea
es
out
xor
xchg
mov
sbb
jecxz
xor
movsl
xlat
shl
jp
jp
lods
or
mov
jp
imul
jbe
leave
movl
movsb
dec
and
popf
pop
add
adc
movb
fmuls
outsb
and
sub
movsb
fwait
mov
or
xchg
pop
popa
inc
stos
push
dec
push
sti
sub
shrl
sub
lods
int3
push
jbe
xor
xor
push
cld
fadd
insb
lret
mov
mov
mov
sbb
cmp
jne
jbe
push
seta
or
cltd
inc
js
ret
mov
mov
mov
aad
ds
mov
shll
adc
lds
sub
lcall
pop
mov
icebp
mov
mov
mov
mov
jae
in
inc
push
mov
outsb
in
xchg
cmp
cmp
out
mov
arpl
pop
lods
ret
xchg
push
mov
add
outsb
jnp
sbb
xor
shrl
push
daa
shr
xchg
movsb
nop
hlt
xlat
push
xchg
movsl
pop
inc
mov
adc
jo
les
cmp
mov
loopne
xchg
orb
lcall
pop
ret
push
lock
mov
fiadds
movb
test
ret
mov
adc
and
loopne
js
into
adc
sub
int
mov
cs
enter
int
mov
adc
cltd
or
mov
ret
and
fldl
adc
pop
add
incl
jge
sub
es
mov
xlat
pop
aas
jno
adc
xor
xchg
into
xchg
imul
imul
aam
sub
fdivr
scas
jmp
faddl
repnz
mov
inc
outsb
push
lret
jnp
fisubl
rcrb
push
or
insl
imul
xor
dec
mov
xor
pop
inc
add
repz
int
test
mov
xchg
or
and
xchg
repnz
pop
cmpsl
mov
mov
fldt
mov
ljmp
mov
cmpsl
xchg
andb
adc
ret
into
ljmp
jbe
push
in
repnz
shl
fsubs
mov
aam
es
int3
jge
xchg
xchg
adc
int3
and
mov
cmp
sbb
mov
pop
mov
jbe
pop
stc
dec
push
ja
mov
clc
call
jge
mov
xchg
ss
rclb
mov
pop
into
dec
jb
frstor
loopne
cld
hlt
sahf
xlat
lahf
push
leave
fiaddl
xchg
jb
outsb
xlat
insl
ret
xchg
or
addb
xchg
dec
sub
out
lods
jns
pop
aas
mov
movsl
dec
cli
orb
pop
testb
cmc
inc
or
pop
jg
lcall
fdivrl
push
movsl
push
inc
xchg
iret
adc
mov
repz
movsb
cmp
adc
or
mov
leave
sub
subb
inc
push
repz
cltd
jb
outsl
inc
cmp
repz
and
cli
clc
dec
call
mov
scas
out
mov
inc
fidivs
test
cmp
mov
sahf
pop
pop
mov
pop
nop
or
test
push
fisttpll
pop
test
lds
jo
ja
dec
loop
int3
nop
mov
pop
lret
or
adc
push
leave
add
pushf
sbb
lahf
mov
out
cs
cld
and
mov
subb
inc
pop
jg
mov
leave
bnd
insb
mov
push
push
cmp
inc
sub
fldcw
mov
test
stos
sub
out
pushf
mov
mov
pop
cmp
jge
push
pushf
mov
cmpl
inc
mov
shlb
inc
mov
icebp
and
xchg
out
mov
mov
insl
mov
jle
repnz
add
pop
xchg
mov
in
cmp
mov
out
movsl
mov
repz
fistpl
adc
fiadds
lea
outsb
loope
jg
in
mov
hlt
out
in
inc
push
orb
mov
stos
jb
xchg
push
popl
inc
cmpsb
mov
movsl
repz
pushf
data16
add
xchg
xchg
clc
mov
ja
cmp
sbb
adc
mov
pop
pop
xchg
push
repnz
lahf
xchg
xchg
or
shl
mov
out
jnp
imulb
mull
shlb
mov
add
loop
add
xorb
imul
inc
inc
add
and
nop
xchg
jg
mov
sub
lods
dec
fwait
add
xchg
push
inc
subb
setge
imul
daa
xchg
mov
call
ljmp
ret
aas
into
ss
imulb
lds
mov
jmp
xchg
inc
rolb
sub
imul
cmp
aaa
jecxz
cmp
sub
cwtl
cmpsb
addr16
xor
xchg
mov
inc
lahf
js
negb
jae
and
fstl
sbb
jb
outsb
movsl
rol
pop
mov
push
ret
out
mov
or
mov
std
mov
iret
mov
pop
mov
or
lcall
xchg
xchg
data16
imul
cmpsb
out
out
cmc
mov
pushf
scas
gs
mov
dec
popf
mov
fs
orl
push
add
addr16
mov
push
enter
mov
aad
repz
mov
nop
sahf
andb
test
enter
test
xchg
mov
pop
sahf
mov
fwait
sub
stos
out
jl
cli
enter
sti
int
sub
xchg
aam
mov
pushf
sti
fstps
lret
push
jl
and
enter
sbb
push
mov
adc
loop
mov
adc
mov
mov
jae
lahf
ret
test
mov
jne
xchg
and
bound
testl
nop
inc
insl
loopne
jae
ror
jns
leave
popf
shll
pshufw
arpl
sbb
cmp
stos
enter
repz
sbb
mov
idivb
int
cltd
jno
pushf
inc
outsw
test
pop
jl
mov
inc
fucomi
pop
test
leave
cmp
cwtl
data16
push
push
sbb
test
hlt
aas
mov
icebp
mov
push
ja
addb
push
lret
hlt
mov
pop
jo
leave
and
push
adc
psubusw
pop
addl
call
pop
adc
lds
lcall
rcrl
out
faddl
sbb
pop
insb
mov
jp
mov
mov
lea
imul
xor
mov
or
into
pop
cmp
into
xor
cs
sub
lcall
xchg
inc
repnz
nop
movsl
pop
mov
mov
add
les
cli
xchg
cmp
repz
adc
add
jns
cltd
or
xchg
stos
sti
mov
mov
mov
push
insl
inc
rorl
movsb
xor
xchg
andl
or
mov
stos
mov
mov
popa
inc
rcrb
adc
jp
pop
jg
sbb
rolb
or
lcall
xchg
iret
mov
xchg
sahf
jae
mov
insb
pop
mov
ss
xchg
dec
lret
mov
and
mov
sbb
gs
and
cli
add
adc
sub
fmull
push
or
mov
jb
lahf
js,pn
mov
in
jbe
xchg
xchg
lds
loopne
sahf
xchg
rcll
test
push
pop
sahf
iret
jb
ret
aam
mov
mov
xchg
ss
lret
mov
cmp
int3
adc
cmp
sub
xchg
push
xchg
and
ret
xchg
inc
dec
aam
jmp
das
in
xchg
mov
jo
jp
jo
pop
or
pop
pop
mov
fldt
or
sahf
lea
jns
sub
inc
scas
or
mov
je
xor
mov
fidivs
aas
data16
movsb
cmp
mov
test
lcall
shr
in
xchg
jb
inc
jae
std
lods
scas
jle
orl
dec
stos
add
jle
repz
ss
jg
clc
sbb
test
imul
jnp
in
nop
outsb
cmp
push
xor
aaa
call
aam
xorl
lds
std
loope
or
popa
sbb
cmpsl
cmp
in
mov
pop
mov
push
roll
jecxz
rcrb
test
push
nop
lock
mov
or
out
ds
out
pushf
fiadds
inc
inc
rcr
jp
xchg
xlat
andl
and
mov
jge
stos
cmp
dec
pusha
data16
inc
push
mov
sahf
mov
xchg
lods
mov
xchg
adc
jg
loope
outsl
adc
sbb
jecxz
pop
cmp
jnp
test
sub
test
jl
push
aad
setae
fmul
sar
mov
test
sub
mov
ds
lock
lahf
in
lea
xchg
mov
insb
les
xchg
cmp
mov
pop
mov
inc
mov
cmp
out
jmp
je
inc
cmc
int3
hlt
pusha
mov
cmc
lcall
xchg
or
lods
cmp
push
mov
adc
rorb
js
les
or
dec
pop
bound
lret
xchg
mov
pop
je
ljmp
cmp
mov
dec
mov
test
aas
aad
loop
xchg
add
into
adc
insb
pop
xchg
mov
inc
iret
aas
push
lcall
imul
ror
pop
mov
ss
nop
int3
popf
inc
mov
pop
pushf
push
std
xchg
inc
jecxz
insl
jae
dec
shll
pop
nop
jbe
in
cmpsb
push
push
sub
cmpsb
mov
pop
in
sbb
pop
dec
cwtl
lods
loop
dec
pop
add
mov
rorb
jne
ret
xchg
mov
mov
int3
out
jg
sub
cld
popf
push
popf
in
jl
adc
int
inc
sbb
cmp
fildl
mov
cmp
call
fimuls
adcl
dec
jl
popf
xlat
shlb
iret
xchg
rol
sbb
cli
inc
jge
enter
aad
stc
cmp
push
mov
xchg
in
push
loopne
xor
sahf
fstpl
negl
inc
xchg
ret
jge
push
in
xchg
dec
fadds
mov
mov
xchg
xchg
mov
lock
sti
inc
inc
je
inc
push
xor
adc
stos
shll
ds
lcall
adc
dec
in
jns
repnz
sti
and
stos
rcl
sub
cmp
loop,pn
push
cvtpi2pd
bound
pop
mov
xchg
sahf
mov
fld
xor
inc
addr16
rorl
filds
or
mov
inc
jbe
dec
out
leave
call
addr16
cwtl
add
pop
pop
movsl
mov
sahf
xchg
add
push
repnz
into
loopne
lcall
inc
or
vpcomd
int
xor
into
or
mov
dec
adc
inc
ss
enter
mov
popf
xchg
pop
mov
out
pushf
lahf
ljmp
add
sub
outsl
sti
mov
jb,pt
adcb
xor
imul
fsts
push
fsubl
cmc
jo
mov
or
cli
and
xchg
int
sub
pop
into
data16
pop
repz
repnz
lea
add
sub
in
or
popa
dec
mov
add
mov
pop
rclb
sahf
cmpsl
mov
imul
or
and
lahf
lret
lcall
ss
test
adc
jne
xor
or
jmp
scas
imul
add
addr16
and
cli
push
std
scas
adc
push
leave
movsl
add
sarb
and
aas
xchg
addb
add
in
mov
xor
jbe
mov
push
subb
insb
mov
imul
sbb
push
sub
mov
mov
jge
out
pushf
ljmp
outsb
push
jb
push
jl
ljmp
in
mov
scas
sti
icebp
xchg
add
push
sub
jg
scas
or
sti
push
mov
aad
movsb
mov
sahf
push
cmp
mov
and
jl
mov
cmc
mov
inc
fsubl
push
fcompl
push
loop
sub
pop
movsb
dec
loop
cmp
xchg
cmpl
into
repz
divl
xchg
xchg
fldl2e
sub
lods
push
push
lret
sub
jmp
lea
mov
and
mov
lahf
jle
dec
or
dec
sbb
sub
movsl
pop
ss
jnp
js
cmp
aaa
les
pop
out
aas
pop
cmp
xor
mov
jb
shrl
cltd
scas
xchg
add
push
loope
jns
leave
cmp
pop
fwait
pop
js
push
fistpll
mov
ror
inc
ja
add
fs
mov
rclb
faddl
je
mov
push
add
xor
enter
decl
pop
sbb
add
cmpsb
sysret
les
sahf
mov
dec
xchg
xchg
test
sar
xor
shrl
pop
or
xchg
andb
loope
insl
pop
std
pop
inc
xorl
mov
jp
iret
adc
ret
mov
mov
repz
xchg
jo
jg,pt
sahf
js
cs
imul
sub
push
rclb
and
and
int
cmp
jnp
sbb
sub
jae
stos
addr16
ja
or
push
mov
seto
or
lods
cmp
hlt
pop
push
adcb
mov
test
adcl
mov
sub
and
data16
cmpb
shrb
cmp
mov
aad
jne
push
jge
test
je
leave
jbe
movsb
adc
mov
mov
jno
jo
sarl
lretw
xchg
mov
xchg
pop
mov
mov
lcall
out
sahf
adc
push
loope
mov
xchg
out
leave
mov
xchg
lods
in
push
mov
in
scas
mov
scas
cmp
stos
or
xchg
inc
xchg
push
cmpsl
or
fnsave
cld
nop
jb
mov
fwait
leave
or
ret
movsb
jmp
movsb
jl
mov
sbb
pusha
sbb
push
and
shlb
xchg
data16
jge
sti
inc
pop
ss
test
xchg
sbb
mov
fxch
jnp
je
adc
insl
push
add
repnz
int3
test
pop
mov
arpl
xchg
xchg
mov
sub
or
ret
imul
cmp
adc
adc
pop
dec
movsl
imul
repnz
mov
jmp
dec
inc
div
icebp
test
loopne
dec
xchg
leave
aam
jl
push
jae
frstor
enter
mov
jl
scas
xchg
ret
sti
jmp
mov
movsb
popf
mov
je
pushl
xchg
mov
hlt
addb
es
test
push
jo
adc
sub
les
fsubl
out
rcl
push
rclb
out
xor
iret
xchg
xchg
xor
mov
cmpsb
mov
repnz
add
mov
xchg
xchg
call
lea
aas
cmc
pop
mov
ss
cmp
imulb
cmpsl
mov
lock
insl
outsb
or
sub
add
push
clc
xchg
sbb
call
stos
aad
aas
lods
sbb
aad
sbb
jb
mov
xchg
lods
dec
sbb
xlat
fdivrl
aas
mov
or
mov
xor
cmpsb
push
pop
jmp
push
or
xor
push
mov
inc
pusha
iret
jg
push
sub
xchg
lahf
popa
call
fdivrl
mov
outsb
stos
rcl
mov
lock
movsl
lds
mov
repz
aad
add
in
mov
fdivs
mov
xchg
repnz
jbe
push
data16
pop
add
push
push
mov
mov
mov
movsb
or
fadd
adc
jno
ss
pusha
fcoms
lods
jg
into
add
insl
inc
repnz
add
test
add
xchg
cmpsb
stos
stos
xlat
xchg
jge
insb
lds
dec
loopne
add
divl
enter
adc
pushl
leave
shl
stos
pusha
adc
jg
pop
clc
nop
add
pop
rcr
roll
pop
call
inc
adc
lock
out
mov
aas
mov
or
dec
aas
adc
xchg
dec
rorl
stos
push
xrelease
ffreep
lods
xor
mov
inc
outsl
push
mov
mov
hlt
enter
pop
fldt
js
testl
ret
push
adc
and
lock
aad
xor
test
enter
adc
push
call
push
mov
cmp
bound
xchg
pop
mov
mov
mov
aad
fstpl
lds
add
inc
leave
arpl
mov
sbb
in
in
mov
inc
dec
fisubrs
aad
add
les
cmp
add
inc
jb
mov
ficoms
dec
dec
and
xchg
jp
ret
mov
data16
xchg
fidivrs
popa
andl
imul
mov
add
into
lock
aaa
push
xchg
jp
or
mov
mov
or
pop
iret
and
xchg
je
cmpsb
mov
sub
jns
xchg
iret
cld
call
stos
inc
mov
mov
mov
sbb
ss
lds
push
jb
add
mov
inc
push
xlat
hlt
lods
jmp
fisttps
andb
cwtl
xchg
jns
dec
nop
pushf
inc
mov
out
lcall
aaa
push
push
mov
adc
adc
mov
clc
inc
push
bound
add
inc
icebp
int3
xchg
jle
or
ja
mov
lock
lea
repnz
cmpsb
into
jg
cmp
xchg
imul
es
cmp
rorb
insl
leave
cmpsb
cmc
xlat
data16
mov
pop
mov
cmpsb
sbbb
mov
popf
jecxz
repz
mov
in
mov
or
ret
outsl
mov
add
jo
sbb
aad
pop
jb
nop
scas
cmp
pop
sahf
xchg
mov
scas
mov
inc
sbbl
es
cli
js
imul
and
sub
jg
push
or
xchg
aad
test
pop
add
pop
stos
test
stos
and
jg
add
scas
inc
mov
mov
popf
stos
mov
lcall
into
cmp
clc
cmpsb
xchg
out
int
fdiv
gs
loop
or
bnd
repnz
or
lods
popf
out
mov
loopne
es
sub
ficompl
out
cmpsb
mov
test
mov
orb
enter
mov
shrl
xlat
adc
pop
lea
adcl
shll
mull
adc
inc
jb
jne
fldt
lea
sahf
cld
flds
hlt
mov
cmp
fwait
addl
cmpsb
mov
add
lods
jns
xor
pop
lret
pop
fsts
cmp
pop
pusha
inc
fsub
inc
fmull
dec
jns
ret
cld
enter
std
test
add
test
sbb
loope
ficomps
mov
xchg
mov
push
sbb
push
nop
pusha
xchg
push
fcoml
sbbb
iret
inc
int
pop
aad
push
cltd
mov
gs
aam
aas
adc
add
aam
sbb
inc
cli
hlt
lret
movsl
sti
jp
cmc
xchg
mov
xchg
stos
iret
out
push
mov
push
inc
sub
jg
cli
mov
xchg
pop
aam
imull
sbb
xchg
jmp
mov
lea
inc
cmc
ja
or
out
cli
lea
jo
pop
cmpl
dec
and
int
jne
fmulp
into
mov
and
cli
jae
jmp
ret
xchg
cli
scas
sub
add
insb
movsb
inc
iret
push
int
ss
or
cmp
pusha
lea
int3
cmp
stc
lods
sbb
popf
negb
xchg
add
dec
cltd
negl
ja
pop
xchg
jae
sbb
lods
mov
mov
lahf
incb
xchg
nop
cmp
fmuls
jns
out
push
push
adc
ret
pop
sbb
sub
cmp
addl
in
inc
sub
jns
sub
xchg
cmpsb
rorl
mov
sahf
fisubs
repz
dec
ret
mov
test
dec
pop
sti
daa
andnps
adc
mov
mov
addr16
js
inc
addl
jg
xchg
inc
addr16
iret
stos
repnz
mov
cmp
cwtl
xchg
cltd
pop
mov
loopne
mov
into
inc
lock
les
cmc
adc
push
mov
add
es
add
out
pop
jmp
loopne
mov
xchg
pop
push
and
scas
movsb
mov
mov
fidivl
inc
dec
cwtl
pop
xchg
push
cltd
pop
xor
push
mov
xchg
cmpsl
iret
xor
inc
add
mov
mov
pusha
push
movsl
iret
test
into
add
mov
inc
sub
mov
jbe
hlt
mov
pop
mov
fmull
jecxz
mov
int
mov
or
lret
jb
jne
daa
movsb
sahf
repz
lock
mov
scas
adc
negb
mov
fcompl
into
add
pop
les
jbe
ja
mov
dec
ret
xchg
inc
cmpb
xchg
xchg
lds
outsl
sbb
inc
push
mov
call
loop
popf
in
mov
iret
push
sahf
das
lahf
pop
pushf
ficompl
jge
jl
push
add
bound
movsb
push
decl
jbe
adc
cmpsb
cwtl
jbe
insl
ss
push
addr16
push
bound
frstor
fistpl
jmp
or
icebp
push
mov
das
ljmp
and
lds
inc
xchg
mov
adc
leave
nop
inc
addr16
xchg
sti
outsb
int
loopne
icebp
repz
dec
inc
mov
mov
cli
mov
jmp
lods
fwait
xlat
fs
and
push
popf
mov
int
fistpl
mov
jne,pn
jp
mov
mov
inc
xchg
push
mov
lcall
adc
jne
loopne
in
sub
shlb
xchg
push
cli
hlt
push
scas
cld
jmp
push
xchg
sbb
jg
int
aad
int3
pop
inc
or
sbb
int
pop
sub
cmpsb
mov
cmp
ret
xchg
fcoml
in
or
stc
fistps
sarl
into
mov
mov
jb
mov
pop
inc
sarb
adc
sbb
dec
push
xchg
rcrl
stos
into
xor
shlb
imul
popf
repz
jl
mov
test
mov
dec
lods
jmp
imul
scas
ljmp
add
xchg
mov
xchg
out
sbb
pop
loop
imul
loope
test
hlt
stos
repnz
or
adc
into
xchg
jne
lock
mov
arpl
stos
into
pop
sbb
dec
dec
cmpsb
mov
test
dec
mov
aad
mov
xor
cmpsb
xchg
sub
aad
mov
xlat
add
sbb
xchg
ficompl
add
push
adc
mov
sbb
test
jp
xchg
mov
jmp
mov
inc
mov
sbb
pop
xchg
mov
std
stc
sarb
cmp
mov
fmuls
push
in
mov
js
cli
out
sbb
xor
movsl
jp
pop
popa
mov
and
mov
xor
idivb
push
mov
sbb
repnz
sti
idivb
xlat
rolb
inc
add
leave
es
jae
jnp
sbb
lea
int3
fcompl
aam
data16
movsl
out
and
aas
xor
filds
fdivrs
sub
dec
cmp
mov
dec
lret
mov
cltd
pop
adc
imul
imul
movsl
test
popf
mov
mov
ljmp
cmp
xchg
cmp
cwtl
cmpsb
imul
mov
inc
mov
ds
dec
dec
repz
push
popf
iret
lods
imul
jle
stos
mov
sbb
xchg
imul
xchg
scas
subb
js
mov
push
mov
push
xor
mov
cli
xor
jp
in
loop
divb
add
mov
nop
pop
adc
leave
adc
jns
push
xlat
push
and
rcl
sbb
ret
adc
imul
cmc
adc
inc
fcmovnbe
std
pop
out
mov
ja
das
mov
fsts
out
ss
mov
cmp
leave
adcl
pop
add
xchg
call
out
push
jne
lahf
cli
aas
mov
mov
je
mov
out
js
mov
jecxz
pop
shl
push
cwtl
mov
aad
mov
ds
or
movsl
dec
imulb
repnz
das
mov
push
dec
inc
shrl
cs
jg
jnp
pop
test
push
and
clc
mov
add
xchg
out
inc
mov
je
movsb
stos
sbb
stos
out
pop
jg
pop
fldt
push
jl
sub
mov
sahf
or
test
lock
mov
je
xor
xchg
sarl
loope
shl
subl
xchg
enter
mov
ds
add
leave
dec
inc
push
dec
in
out
pop
repnz
loopne
mov
sbb
pop
sbb
inc
push
xchg
mov
daa
outsl
push
sub
cs
adc
mov
and
add
cmc
jecxz
lods
shl
and
popf
loop
mov
mov
nop
jge
mov
xchg
mov
xchg
insl
negl
lods
imul
xchg
xor
shll
mov
or
push
in
dec
ja
push
jge
inc
ja
mov
lock
sbbb
xchg
data16
add
and
es
adc
in
xlat
and
push
aam
and
mov
sbb
xchg
bound
test
fldl
stos
call
ficoms
push
cltd
xor
xchg
adc
dec
aam
outsl
shlb
jne
xor
fdivrl
pop
leave
mov
pop
pop
pushf
lahf
and
lahf
test
mov
dec
inc
jmp
add
ret
jle
xlat
or
inc
mov
push
ret
xchg
add
push
cmpsb
add
mov
mov
sbbb
movsb
pop
out
shl
fisttpll
icebp
mov
add
jl
dec
adc
stos
mov
addr16
xor
jge
push
sbb
jp
bound
ret
adc
rol
jl
jg
pop
rclb
jne
mov
pop
cli
das
jl,pn
ret
pop
leave
mov
jns
cmpsb
mov
pop
push
or
and
cmp
ja
fdiv
test
push
push
sbb
and
mov
jne
add
pop
mov
ljmp
out
subb
int3
mov
fmul
cli
ja
or
lahf
mov
mov
add
in
cwtl
fwait
sub
rolb
lahf
add
sbb
adcl
iret
sbb
or
dec
ret
or
pop
mov
mov
insb
inc
rcrb
sub
cmp
xchg
mov
pop
cmp
xchg
inc
add
mov
and
sub
sarb
adc
out
lods
pop
and
lods
addr16
das
adc
cmp
or
push
jge
in
pushf
inc
sarl
cmp
mov
sbb
xchg
jne
dec
inc
lcall
daa
push
inc
lods
jp
dec
dec
push
repz
leave
ret
sbb
add
sub
jecxz
pop
jg
shll
cwtl
ja
mov
dec
jne
xor
dec
rol
les
mov
mov
dec
xchg
xchg
repnz
out
int
inc
popf
xchg
fidivl
shll
push
sets
insb
push
dec
leave
popf
cmp
outsb
outsl
faddl
repz
and
dec
xchg
in
xchg
inc
stc
push
xor
jecxz
cmpsb
repnz
add
mov
jl
jl
negb
pop
jo
mov
xchg
les
inc
or
cmp
lret
addr16
fldl
or
xor
sub
pop
push
dec
mov
jno
repnz
mov
pop
sti
nop
aad
inc
dec
pop
or
xor
ds
mov
repz
push
cmpsl
sub
cmp
mov
xor
and
jl
or
int3
add
into
push
jnp
mov
cmpl
adc
pop
push
pop
add
mov
test
test
push
xchg
xchg
addr16
mov
cmp
mov
movsl
xlat
pop
enter
mov
pop
cwtl
test
fnstenv
into
push
lret
mov
xor
xchg
bound
shll
lea
mov
pop
ror
add
xchg
add
stos
add
stos
cli
jecxz
sub
out
xor
repnz
loope
xchg
mov
stos
jno
mov
xorl
sbb
mov
shrl
mov
mov
fstl
or
repnz
adc
lock
xor
mov
bound
pop
xchg
shll
pop
xchg
cmc
and
push
aaa
or
cmpsb
aam
add
lds
lods
aam
adc
jb
sti
dec
addr16
xchg
daa
inc
push
adc
pop
pop
repz
or
mov
popa
jmp
rclb
pop
aas
movl
std
sbb
aad
push
loopne
jp
adc
cli
mov
push
cmpsb
adc
mov
test
stos
jle
fcoms
dec
popf
inc
enter
cmp
xchg
test
js
adc
adc
icebp
mov
cmp
andl
jl
repz
push
imul
movsl
lds
sub
xchg
lock
imul
nop
pop
xchg
jl
stos
test
std
xchg
aad
sbbl
xchg
add
xchg
stos
sbb
mov
mov
xlat
sbb
pop
rorb
lods
imul
push
int3
lcall
aad
jnp
inc
mov
ret
data16
in
mov
loopne
jg
fsubl
sbb
adc
adc
add
enter
sub
es
loop
push
or
dec
adc
es
push
xchg
cmp
movsb
or
sti
ret
flds
jmp
mov
fidivs
inc
mov
test
out
and
inc
inc
cmpl
mov
imul
imul
sar
adc
jp
xchg
test
decb
xchg
mov
in
out
in
scas
add
push
stc
xchg
sub
into
lcall
xor
sub
aaa
xchg
sahf
nop
ss
xchg
dec
lods
mov
jge
mov
imul
fdivs
imul
lahf
cwtl
jbe
ret
and
nop
and
in
sbb
and
and
jbe
call
inc
enter
je
sbb
mov
mov
ror
mov
arpl
sbbb
sbb
sahf
xchg
xchg
dec
fdivs
mov
shrb
xchg
scas
adc
jb
or
dec
mov
xchg
loop
aam
dec
cmp
std
push
jl
mov
mov
cltd
adc
mov
mov
inc
jo
cld
mov
xchg
call
sub
push
xchg
mov
fnsave
adc
movsb
loope
mov
push
popf
movsl
pop
ds
mov
aam
fs
insl
sahf
test
dec
dec
inc
mov
mov
jb
adcl
lea
jb
pop
sub
inc
loope
sub
inc
pop
test
adcl
jnp
lfs
xor
lds
jne
and
inc
xchg
std
push
pop
movsl
push
jg
aam
nop
bound
dec
rolb
sti
push
pop
add
pop
clc
nop
cmp
pop
inc
lcall
and
into
and
fwait
jmp
mov
mov
and
cmp
jecxz
inc
inc
dec
push
repnz
ja
mov
inc
sbb
std
xchg
mov
sahf
test
jp
jecxz
nop
roll
mov
dec
xchg
adc
sbb
dec
cli
mov
out
add
iret
lods
dec
test
jb
sub
inc
xchg
iret
adc
bound
mov
shrl
mov
jae
call
push
fdivs
testl
jbe
pop
jbe
out
pop
xchg
psrlw
fucom
scas
xchg
mov
es
add
js
jbe
adcl
jmp
stos
repz
pop
pushf
imul
cmp
xlat
movsl
ror
rcll
mov
xor
sbb
xchg
xchg
cld
mov
mulb
testb
mov
mov
pop
lcall
fninit
cli
dec
dec
jo
jne
mov
sbb
xchg
das
out
sub
and
and
dec
xor
into
xor
lods
fldt
pop
scas
sub
stc
sub
pusha
ljmp
push
mov
outsb
adc
dec
es
aad
mov
pushf
nop
cwtl
inc
fistpll
popa
xchg
gs
xchg
inc
das
and
mov
imul
cmp
mov
xor
cmp
stc
push
std
data16
stc
sub
jae
and
pop
add
call
adc
subl
xchg
out
pop
push
mov
jne
roll
cli
sub
dec
orb
shl
cwtl
push
into
xchg
mov
add
or
ja
push
fcoml
repz
xchg
jge
loop
cltd
sbb
pop
mov
rcrb
jl
in
push
out
pop
pushl
xchg
mov
movb
mov
add
inc
test
fwait
repnz
aaa
sub
addb
mov
mov
dec
das
sbb
lea
addl
mov
cltd
repnz
jle
jp
fisttpll
mov
push
into
or
sbbl
mov
cli
cld
ss
clc
xor
inc
test
sub
dec
mov
inc
leave
push
cwtl
ljmp
lcall
cli
sub
push
nop
mov
xchg
xchg
cltd
pop
stos
fcoml
xor
cmp
cmp
xor
mov
push
decb
cmp
xchg
fdivr
cmp
pop
into
leave
xchg
push
sbb
in
int
fs
xor
mov
add
addr16
mov
cmc
lret
pop
dec
xchg
mov
hlt
stos
out
mov
insl
push
mov
shlb
or
mov
lret
imul
movsl
adcb
movsb
or
js
xchg
adc
into
adc
push
loopne
jae
icebp
adc
and
fwait
les
frstor
push
or
insl
lock
nop
pop
add
sub
sahf
push
and
daa
pop
inc
push
or
mov
outsb
call
testl
jmp
jo
mov
aad
jae
call
rcl
out
pop
mov
mov
popa
fucomp
in
sqrtps
jne
sbb
cmp
imul
mov
insl
pop
cmp
inc
das
aad
push
movsl
sub
sub
xor
addr16
push
cmpsb
test
shrl
popa
test
push
mov
push
and
xlat
test
and
loope
push
negb
pop
or
inc
inc
jg
xchg
sahf
pop
lret
push
cmp
les
int
xor
stos
movaps
test
jb
adc
add
push
mov
and
jbe
or
push
push
add
out
sti
cli
lock
xchg
push
test
push
cmpsb
fdivrs
dec
inc
test
in
lret
js
leave
test
adc
test
mov
cmp
mov
mov
iret
aaa
mov
pop
fwait
inc
aam
into
inc
pop
lods
aad
or
pop
xor
orl
into
cmp
jmp
cmpsl
icebp
jae
jb
xchg
mov
jno
adc
jl
push
xor
test
cli
mov
xchg
push
xor
fisttps
adc
rcrb
stos
fdivr
int
addr16
adc
xchg
pop
mov
pop
aas
out
cwtl
addl
sub
xor
ljmp
cwtl
into
adc
mov
mov
data16
push
and
sahf
add
mov
fucomp
out
mov
fisttpl
nop
repz
fwait
mov
mov
push
sub
icebp
cli
pop
xchg
call
test
and
ljmp
mov
ret
xor
ficomps
test
push
inc
fwait
mov
jg
cmpsb
fdivrl
testb
mov
push
mov
push
or
insl
insb
ret
lds
push
or
inc
mov
push
inc
fsts
movsl
sub
fsubs
lods
xor
dec
push
jno
jb
xchg
loope
pop
pop
mov
test
fcomp
pusha
jns
inc
xlat
test
addb
test
push
or
sbb
push
cmp
mov
inc
mov
push
sti
inc
repnz
dec
sbb
aad
cwtl
adc
stos
js
fldt
imul
daa
pop
push
sahf
mov
loopne
orb
cltd
pop
add
pusha
pop
mov
mov
sarl
in
bound
inc
and
movsb
ret
and
and
push
dec
lds
mov
les
add
shrb
mov
ja
jo
adc
fnstsw
nop
lahf
aam
push
jb
push
out
ror
int
fdivl
or
repnz
int3
xor
mov
xchg
in
outsb
movsb
je
mov
sahf
add
jb
cmp
jge
cmc
dec
mov
mov
xor
call
out
jmp
rcl
mov
xorl
cld
sub
or
cmp
and
and
incb
repnz
fcmovnbe
data16
cmp
dec
inc
imul
and
fnsave
loop
int3
scas
jmp
cmpsb
jne
mov
add
dec
pop
jbe
sahf
fdivl
sub
sbb
mov
xchg
mov
divl
loop
dec
repnz
pop
into
or
push
stc
aas
into
dec
lock
scas
mov
sahf
cld
daa
test
xchg
inc
mov
arpl
and
aam
mov
push
stos
aam
int3
inc
jge
jno
leave
mull
xchg
xchg
sarb
stos
fmul
sbb
pop
xchg
inc
mov
mov
lea
cld
xchg
stos
stos
mov
lahf
xchg
repnz
ret
imul
data16
push
push
adc
pop
jecxz
pop
and
lahf
inc
adc
iret
mov
pop
xchg
add
movsb
sub
clc
enter
mov
les
imul
xlat
mov
sbb
adc
sti
adc
std
mov
mov
shlb
jl
inc
sub
fisttps
pop
mov
push
sbb
test
movsl
rcl
mov
adcb
into
pop
fcomi
bound
xchg
outsl
push
lret
cmp
lock
inc
mov
cmp
xchg
mov
lahf
or
cwtl
mov
ja
subl
jae
lds
push
fisubrl
sbb
adc
insl
inc
sbb
pop
adc
out
xchg
jo
lahf
int
jno
mov
fiadds
mov
jo
loopne
xchg
sbb
sar
push
push
mov
xchg
pusha
insl
mov
sahf
pop
mov
scas
repz
pop
imul
bound
jo
push
sub
xchg
cmpsl
les
inc
xchg
pop
and
adc
iret
enter
ret
scas
fmul
cli
mov
in
mov
push
pop
rol
xor
movsl
notb
dec
inc
cli
push
repz
in
adc
ja
pop
aad
cld
ds
push
das
mov
mov
loopne
inc
push
rcrb
dec
push
imul
jp
and
stos
dec
dec
out
jp
jnp
popa
jecxz
fwait
and
pop
mov
sti
decb
or
mov
mov
xchg
orl
ret
mov
add
push
jae
in
mov
fwait
xor
cmp
aas
xor
rcll
jo
movsl
and
dec
shlb
out
lods
jo
lods
inc
cmpsb
rcl
pop
adcb
rorb
bound
push
mov
push
stos
sub
xor
push
inc
ret
or
jne
outsb
xchg
loop
or
ljmp
push
stc
sub
adc
imul
popa
dec
sbb
jle
mov
adc
repnz
jecxz
add
xchg
daa
or
cld
jnp
sbb
loopne
cmpsb
cli
jns
xchg
sbb
add
adc
jge
and
test
pop
cmpsl
mov
jns
mov
or
sbb
jp
lret
mov
leave
out
out
xchg
hlt
mov
lret
mov
loope
or
repz
and
mov
xorb
inc
loopne
jns
mov
cli
jns
mov
insb
mov
lods
mov
cld
in
lcall
les
inc
test
add
or
push
mov
xchg
pop
cmpsb
mov
and
loope
mov
out
enter
int
xchg
mov
cli
cmp
scas
sub
jae
test
jnp
inc
mov
ret
lcall
mov
push
pop
xorb
push
sub
mov
add
cmp
andl
call
dec
stos
add
into
mov
rcr
mov
mov
clc
pandn
add
jbe
call
pop
mov
test
aas
cmp
pop
loop
sbb
nop
xor
repnz
sbb
shl
hlt
enter
adcb
mov
shrl
inc
jnp
jp
and
cmp
imul
mov
inc
xor
sbb
fstps
jne
mov
mov
iret
mov
addr16
jle
scas
mov
jp
fldcw
les
mov
mov
mov
add
mov
dec
jns
in
shlb
js
jo
xor
dec
iret
mov
cmpsb
xchg
add
inc
add
imulb
mov
fildl
xchg
mov
test
shlb
xchg
inc
lds
inc
aas
imul
movsb
mov
and
gs
cli
xchg
bswap
add
jl
jnp
inc
mov
sub
fmul
push
pop
jecxz
mov
call
mov
dec
cli
xchg
and
push
ds
mov
setl
xchg
fsub
or
jg
pushf
fistpl
mov
int3
aam
xchg
push
movsb
or
mov
push
xchg
mov
pop
test
ljmp
adc
push
or
call
push
in
xchg
aam
aad
andl
add
nop
mov
faddl
sbb
push
fdivl
nop
jo
sub
jg
movsl
std
ret
js
and
mov
outsb
cmovle
or
dec
adc
cmpsb
pop
testb
xchg
sub
sub
mov
jecxz
test
mov
insb
int
adc
adc
out
push
rolb
xchg
pop
or
aas
mov
adc
lcall
test
cmp
mov
mov
xchg
mov
test
adc
mov
mov
push
arpl
mov
test
dec
repnz
lret
xchg
lret
jp
int
sti
cmpsl
iret
lock
mov
xchg
aad
mov
push
rolb
jo
nop
js
pop
inc
sbb
movb
enter
sti
lds
imul
xor
mov
repnz
xchg
ror
data16
xchg
loop
lcall
cmp
imul
outsb
jl
fmull
cltd
fistl
andl
cmp
xchg
aad
or
les
popl
lods
rorl
das
iret
ret
lods
nop
xchg
cli
test
inc
inc
mov
orl
fsts
mov
jb
call
lds
and
mov
pop
rsm
cmp
xor
fisubrs
cmpsb
lret
iret
jg
sahf
xor
push
jne
pop
adc
mov
aam
lahf
pop
xorb
iret
mov
mov
add
sub
and
nop
dec
mov
pop
push
in
push
iret
jb
xor
punpckhdq
les
mov
fnsave
adc
xchg
jbe
mov
jbe
adcb
add
mov
inc
mov
cmp
xchg
or
into
cmp
cwtl
outsl
movl
test
mov
mov
jnp
mov
inc
fsubp
jbe
andl
shlb
repnz
and
fisttps
jecxz
mov
and
bound
push
pop
xchg
ja
mov
lds
mov
scas
pop
jg
imul
or
pop
jno
inc
nop
scas
outsb
xchg
pop
jecxz
nop
mov
jae
add
mov
mov
jecxz
mov
jge
cmpsl
jg
movsl
fxch
pop
inc
mov
sub
adc
cmp
mov
stos
ror
cmp
dec
loope
xchg
inc
mov
adc
sahf
cmp
sbb
cmpb
xor
mov
ss
imul
les
xchg
add
lods
dec
push
mov
pop
iret
js
enter
fcoml
add
or
jbe
sub
xchg
mov
outsl
push
xchg
test
enter
mov
test
mov
movsb
mov
pusha
xchg
fnstenv
int
sbbb
add
test
mov
adc
cmpsl
lock
loope
mov
nop
outsl
push
leave
xchg
xorl
stos
mov
leave
ret
add
adc
leave
mov
mov
call
xchg
jp
mov
mov
xchg
sub
adc
es
and
adc
pop
rep
fcoml
stos
inc
add
test
nop
ds
les
or
movsb
into
iret
shr
sbb
pop
mov
pop
mov
mov
out
pop
fsubrl
mov
std
jno
ja
popf
mov
mov
movsl
cli
outsb
push
ret
loope
jbe
cmpb
and
out
lods
jle
jp
pop
xchg
icebp
mov
lcall
and
jge
push
xchg
mov
push
repz
cmp
dec
dec
mov
cltd
lods
inc
mov
bound
fcompl
and
rep
cmp
cli
sbb
leave
push
mov
repz
or
sbb
hlt
or
les
inc
xchg
dec
daa
icebp
push
lret
mov
xorl
sti
fcomps
sub
je
xor
sub
dec
nop
mov
dec
shll
leave
inc
sub
dec
leave
xchg
xchg
mov
push
xchg
xchg
mov
xchg
fdivrl
xor
adc
adc
mov
std
add
outsb
cmc
mov
jp
add
nop
inc
daa
xor
clc
adc
jae
out
mov
out
mov
push
mov
jp
jecxz
stos
jg
std
mov
hlt
lods
rclb
shrb
mov
into
into
andb
and
or
popf
push
pop
and
test
xchg
fisttpll
xor
jl
rclb
repnz
movsb
xor
pop
je
call
fwait
pusha
std
mov
bound
jg
push
movsl
test
or
inc
rcrb
bound
cltd
xor
xchg
pop
lret
dec
iret
cmp
pusha
push
loopne
xchg
int3
or
icebp
iret
and
mov
pop
ss
xorb
mov
pop
push
mov
cmpsl
pop
xchg
xlat
push
xlat
add
lods
clc
add
fwait
cmp
movsl
mov
mov
jno
inc
or
push
into
or
pushf
xchg
outsl
pop
adc
add
sbb
das
or
dec
inc
repz
jmp
cwtl
xchg
lds
rcl
adc
test
push
subb
xor
nop
xchg
dec
or
dec
mov
test
mov
cmp
push
mov
outsb
xchg
sahf
mov
sub
and
andb
jbe
mov
ret
dec
rcrb
push
ja
leave
mov
mov
out
sbb
cmpsb
ljmp
adcl
popa
sub
aad
pushf
mov
sub
rcrb
sahf
sbb
or
sti
push
outsl
stc
ret
push
jmp
shrb
lea
out
in
jge
mov
add
pop
pop
ds
inc
mov
lret
js
cwtl
repnz
dec
mov
jg
repz
cmp
imul
sbb
cmc
pop
out
loop
xchg
pop
cmpsb
mov
mov
xchg
mov
rcl
imul
std
adc
imul
loope
push
les
mov
ss
sub
pop
mov
jbe
bswap
xchg
jns
addr16
lea
imul
sahf
repz
sub
cli
mov
inc
xchg
pop
push
dec
and
aad
jnp
lock
repz
repz
outsl
out
lret
add
mov
inc
xchg
aam
fsts
outsb
or
inc
cmp
lcall
or
fldcw
mov
push
pop
mov
xchg
mov
push
mov
mov
mov
repz
in
cmp
out
xor
xchg
mov
test
adc
jbe
jp
mov
in
mov
adc
dec
jae
mov
cs
into
xchg
and
xchg
out
pop
mov
inc
sarl
cmp
mov
test
mov
cmp
xor
out
ret
xchg
lcall
xor
aad
jecxz
stc
cmpsb
repz
dec
std
movb
in
mov
dec
mov
insb
fistps
nop
xchg
push
loop
push
mov
mov
movsb
call
test
jns
sbb
mov
sbb
ret
rorl
stos
push
insb
mov
push
into
mov
inc
or
cmp
ss
dec
mov
int3
jg
inc
imul
pop
push
xchg
out
push
xor
pop
arpl
mov
add
cli
stos
or
cmpsb
cmp
jb
cmpsb
pop
add
aas
adc
mov
xchg
notb
mov
or
sti
mov
pusha
stos
sub
or
push
mov
rclb
clc
inc
ja
orb
cwtl
push
add
ljmp
insl
adc
addl
jns
sbb
loop
cmpsl
js
and
scas
push
enter
jecxz
outsl
push
enter
cltd
or
mov
mov
out
cmc
jo
cmp
shrb
add
aad
or
mov
cmpps
push
jg
jns
sti
xchg
out
aas
and
inc
rcll
pop
js
xor
xchg
pushf
cmpsb
jmp
xchg
loop
ja
fcom
mov
cmp
pop
xchg
sbb
add
mov
dec
lret
into
jge
pop
mov
repz
cmp
cli
clc
jbe
add
insb
in
xchg
lea
adc
jmp
xchg
add
pop
sarb
dec
lds
setge
and
repz
xor
movl
dec
loopne
mov
imul
push
bound
mov
aad
xchg
mov
out
jnp
xor
xchg
cmp
push
inc
xchg
push
mov
sub
jp
int
add
scas
mov
mov
xor
sub
pop
mov
mov
stc
xchg
jnp
cmp
je
frstor
mov
bound
aad
mulb
mov
popa
add
or
addl
in
shrl
shlb
mov
cmpsl
mov
add
lcall
pop
shl
lcall
pushf
fistpl
mov
mov
lods
pop
mov
data16
cmp
imul
mov
pop
xchg
imul
mov
test
pop
add
xchg
push
scas
les
xchg
out
xchg
lcall
mov
adc
add
into
add
test
call
adc
xchg
cld
add
sbb
cmpsl
lahf
push
dec
sahf
mov
and
adc
push
jl
pop
xchg
mov
loopne
mov
pop
sbb
test
mov
xor
dec
nop
shrl
jecxz
xchg
xor
fidivl
lahf
lds
mov
loopne
ret
add
xor
or
rorl
adc
xor
out
lods
jp
arpl
push
mov
push
mov
jge
xor
dec
sbb
daa
add
jg
fdivl
pop
shl
clc
push
lcall
loop
jb
inc
pop
dec
sar
ror
call
ss
repz
mov
mov
push
xchg
and
inc
jbe
imul
mov
jl
and
scas
test
mov
into
data16
icebp
fistpl
dec
rorb
movsl
push
adc
shll
jnp
pop
pop
scas
addr16
mov
xchg
ja
pop
xchg
mov
dec
mov
jne
leave
in
sbb
repnz
add
xchg
sub
repz
pop
out
xchg
loopne
je
ret
xor
adc
into
cmp
aam
pop
mov
mov
cld
in
push
aam
inc
fsubrs
mov
cmp
loop
push
xlat
fst
inc
std
xchg
xlat
inc
cmp
pop
mov
scas
fistpl
adc
adc
loop
mov
cli
shll
out
mov
loope
or
sahf
sub
jl
push
jbe
mov
mov
out
scas
fidivl
iret
or
inc
xchg
mov
pushf
dec
cwtl
xchg
push
mov
test
jp
jb
js
add
out
xchg
mov
bound
lods
xor
cltd
mov
cmp
ret
or
push
fcoms
enter
iret
mov
int
push
mov
adc
bnd
mov
adc
mov
fwait
or
outsb
fmuls
pop
icebp
ss
clc
inc
pushf
addr16
mov
or
adc
sub
sbb
jo
mov
xor
jne
aad
jge
xchg
xchg
imul
jl
mov
cld
jns
pop
mov
bound
jp
test
sub
iret
sbb
xchg
incl
ret
addr16
pop
adc
sbb
lret
adc
add
inc
fsts
sub
rorb
adc
nop
adc
jo
imul
out
push
mov
ss
jmp
mov
in
inc
lock
lods
sub
xchg
movsb
pop
jne
inc
pop
gs
cmp
xchg
or
loop
jecxz
sub
iret
adc
jbe
test
into
sbb
sbb
int3
aad
loop
sub
jg
cwtl
jp
xorb
mov
scas
mov
mov
or
int
bound
cmp
push
pop
pop
and
jmp
sahf
dec
loope
mov
les
and
imul
cmp
and
xchg
dec
fistps
je
enter
mov
mov
dec
mov
jmp
adc
cmp
dec
or
xchg
inc
sahf
test
or
xchg
pop
fwait
inc
andl
addr16
inc
pushf
xorl
dec
imul
nop
aam
mov
mov
sarl
mov
lret
mov
dec
sahf
jp
aad
adc
ljmp
add
lock
mov
in
or
aam
das
add
adc
pop
sar
pop
rorl
sbb
bound
mov
xchg
ret
mov
lea
jno
xor
or
imul
adc
pop
test
add
mov
lahf
jns
jno
enter
fldl
fucomip
pop
adc
xor
xchg
pop
ljmp
cmpsl
aas
and
push
test
roll
enter
xchg
or
pusha
jo
int3
inc
inc
adc
mov
shll
push
dec
xchg
dec
addl
das
or
dec
fmuls
scas
mov
repnz
ror
cs
lods
in
pop
aam
xchg
imul
notl
fmul
pop
xor
stos
fdivs
aas
enter
fs
mov
push
mov
inc
push
push
mov
mov
mov
je
pushf
xchg
cwtl
jge
xor
shll
mov
cld
es
cli
in
jl
cmp
lcall
icebp
out
fsubrp
pushw
mov
cmp
cmp
fmuls
or
mov
inc
fldcw
add
imul
subb
cmpsl
cmc
fwait
cli
push
adc
adc
insb
inc
adc
ret
xchg
jnp
pop
cmpsl
dec
add
mov
shll
mov
repnz
into
call
add
xchg
pop
les
xchg
mov
and
push
jb
pop
cs
out
jmp
dec
data16
in
sub
in
cwtl
fcoml
sarl
lods
and
mov
xorl
dec
push
mov
push
cmp
cmp
add
mov
mov
movsl
nop
add
nop
mov
pushf
xorb
cmc
xchg
adc
jg
jnp
sbb
movsb
push
xchg
outsl
push
lcall
movsl
lea
mov
mov
imul
daa
int
imulb
aad
fnstcw
enter
ja
xchg
xchg
mov
sbb
iret
aaa
repz
push
int3
ljmp
push
xchg
or
addl
dec
jb
pop
pop
icebp
rcl
cmc
fisttps
sub
inc
insb
movsl
inc
aad
lret
mov
adc
loop
adc
xchg
mov
test
jb
mov
ret
push
lea
lea
stos
jae
push
les
jns
xorb
fisubrs
cmp
in
in
push
mov
std
out
sub
data16
dec
data16
pop
mov
int3
jns
int3
sti
dec
insb
aas
sub
add
add
push
dec
data16
inc
insl
mov
imull
lods
loopne
mov
cmp
lods
pushf
fidivrl
cmpsb
inc
mov
mov
lret
xchg
lahf
mov
cltd
xchg
mov
cmp
in
mov
inc
xchg
movsl
mov
les
rcl
lret
xchg
cmp
pop
push
nop
test
dec
inc
xchg
xchg
addr16
movsl
jb
and
cltd
out
mov
subl
mov
sahf
fidivs
jbe
mov
sti
or
mov
aam
mov
inc
push
cmp
andb
int
push
sarb
dec
addr16
shlb
mov
push
mov
xchg
adc
lods
sub
fstpt
cmp
aam
hlt
movsb
push
xchg
xchg
xchg
test
or
pop
out
movsb
sub
or
pop
dec
mov
hlt
outsb
sbb
sarb
or
jge
hlt
fcompl
fwait
adc
ret
mov
push
repnz
and
je
jmp
out
ret
out
fidivrl
push
jae
imul
imul
mov
imul
fisttps
mov
fidivrl
iret
inc
imul
or
into
cmp
push
outsl
lea
sub
int
sbb
sahf
add
aad
xchg
mov
call
jmp
sti
lods
imul
sub
jno
mov
shl
mov
add
outsb
jno
cmpsb
add
xor
repnz
adc
inc
add
and
cmpsb
sub
std
dec
into
lods
pusha
adcb
test
test
xchg
mov
dec
cmpsb
add
insb
shrb
out
jns
mov
in
mov
push
shl
push
loopne
xchg
ljmp
rorb
fdivr
jno
out
jl
push
in
imul
pop
pop
imul
push
mov
mov
and
cli
std
add
int3
jmp
jbe
loopne
ret
aas
mov
fcmovb
jecxz
mov
lds
jns
push
pop
in
repz
sbb
lock
lock
leave
mov
push
lcall
jmp
cmpsb
fnstcw
repz
ret
mov
cltd
xchg
mov
push
fmull
aas
mov
jmp
insb
cmp
cmpsb
sbb
xor
xlat
repz
sarb
push
mov
popa
movsl
test
fstpl
sbb
popa
repnz
mov
sahf
sub
push
insb
mov
sub
test
outsb
mov
ss
sbb
lcall
xchg
cmpsb
popf
fstps
cmp
sbb
movb
xchg
scas
xchg
ret
jns
outsb
add
popa
in
push
lods
jmp
xor
cmp
outsl
and
out
pop
push
xchg
je
leave
mov
add
scas
jmp
and
repz
nop
mov
pushf
jl
dec
mov
sahf
mov
adcl
test
movb
shl
stos
out
nop
pop
ds
in
adc
cwtl
push
filds
mov
xchg
xchg
pushf
cld
andl
rorl
sub
jnp
pop
repz
dec
mov
cmp
add
adc
lcall
dec
jmp
xorb
sbb
out
mov
lret
mov
adcb
andb
pop
add
scas
xor
xor
imul
jl
mov
clc
leave
data16
pop
aad
insb
or
lahf
adc
sarb
mov
pop
mov
hlt
pop
lds
and
je
loop
addr16
incl
pop
ljmp
scas
inc
cwtl
pop
xor
xchg
mov
add
data16
add
push
mov
pop
jbe
and
aam
or
lcall
addl
lahf
adc
pop
mov
jp
out
xchg
sub
idivb
jl
xor
imul
outsb
bound
pusha
dec
mov
out
cmc
push
shll
es
jg
repnz
pop
nop
imul
and
inc
ja
cmp
and
or
pop
xchg
xchg
nop
add
inc
mov
xchg
ss
mov
shlb
fimull
sub
adc
cmp
xor
les
cmp
shl
lock
xchg
sbb
stos
adc
icebp
ja
fsubl
jnp
loopne
add
xchg
int3
int3
mov
xchg
sbb
jge
xor
or
imul
gs
jmp
mov
scas
cld
xchg
ror
and
lea
mov
leave
mov
cmp
cmpsb
add
xchg
pop
clc
xchg
aam
pusha
mov
mov
adc
xchg
lahf
sub
xchg
call
cmp
pop
outsl
mov
add
mov
dec
jno
dec
push
bnd
es
jp
call
cmp
xchg
addb
lods
mov
mov
lretw
push
ffree
jecxz
push
cmp
add
xchg
aad
sub
mov
sbb
push
stos
arpl
into
stos
dec
data16
jo
aam
dec
sahf
xchg
adc
fcoml
mov
pop
push
addb
shl
push
mov
les
and
mov
fldt
lods
push
insb
into
fnstenv
xchg
daa
rorb
inc
fsts
mov
add
push
sti
cld
int3
stos
outsb
insl
add
jmp
jne
addb
jbe
and
jb
nop
add
adc
mov
adc
mov
decl
daa
xor
or
les
rcr
cwtl
xor
cmp
pop
out
xchg
xor
jno
cmp
mov
jp
movsl
fs
xchg
nop
sbb
dec
lret
and
stos
xchg
add
jbe
and
xor
xchg
stos
dec
icebp
mov
jo
inc
dec
mov
fsubl
push
xor
mov
out
sahf
imul
lods
push
mov
addr16
jle
bound
sbbl
xor
cmp
mov
sahf
cmp
mov
dec
cmpl
and
ss
sub
jno
stos
cmpsl
std
pop
jle
pusha
sbb
adc
sbb
add
mov
gs
mov
out
std
cwtl
mov
outsl
xchg
jb
shl
movsl
pop
jb
arpl
cmp
sub
inc
push
outsb
adc
xor
or
repz
inc
movsl
inc
aad
jo
jecxz
popf
mov
mov
outsb
sti
aad
int3
inc
fldenv
cwtl
int
dec
cwtl
leave
ljmp
sti
fiaddl
sbb
jno
insb
sub
bound
xor
or
loopne
push
pop
dec
imul
or
adc
sub
fldcw
jecxz
das
sub
xchg
jmp
sbb
rolb
add
movsl
nop
cli
ljmp
in
outsb
lds
inc
cmc
dec
mov
pushf
cmp
movsb
xchg
adc
sub
outsb
mov
sti
lahf
mov
xchg
cltd
cltd
xchg
cli
inc
adc
mov
cwtl
adc
dec
dec
cmpl
movsb
imul
aad
lods
outsb
jns
mov
jg
cli
mov
jecxz
xchg
dec
lods
mov
cli
lahf
sbb
out
outsb
mov
cmpsl
mov
dec
add
cmc
repnz
jb
and
pop
xchg
sahf
xchg
test
xorl
push
imul
lods
mov
dec
out
call
pop
cmp
mov
test
dec
lods
dec
xor
xchg
push
sti
test
movsl
mov
mov
dec
pop
fxtract
int
adcb
sbb
sub
mov
test
push
aad
sub
movhlps
dec
out
shll
lods
sub
aaa
shl
or
out
xchg
xor
imul
ljmp
mov
mov
popf
sarb
out
adcb
adc
aaa
xor
cmpsb
fcompl
in
lds
push
add
nop
cltd
imul
mov
stos
nop
cmp
ret
sub
mov
mov
xchg
clc
aam
inc
out
pop
xor
std
inc
push
inc
push
mov
imul
addr16
sar
popa
mov
dec
call
dec
add
outsl
inc
xchg
and
mov
sbb
cmp
xchg
push
xlat
push
fstps
outsl
loope
stc
mov
mov
cmp
xor
jl
jno
out
inc
shll
clc
xor
mov
pop
leave
mov
lret
pusha
out
inc
movsl
mov
pop
push
imul
push
xchg
inc
xor
fiaddl
aaa
jnp
sbb
mov
mov
sbb
stos
or
cmpb
mov
xchg
or
xchg
inc
pop
into
sti
cwtl
cmpsl
or
dec
clc
fistpl
mov
andl
stc
daa
pop
pop
sti
inc
data16
cmp
sarb
mov
push
inc
cmp
je
rcrl
mov
adc
mov
mov
fwait
ljmp
jnp
dec
into
icebp
adc
pop
jbe
mov
jp
hlt
jo
xchg
pop
lds
arpl
add
mov
fdivrl
push
dec
loop
das
fcmovnu
js
fsubrl
and
repnz
hlt
outsl
cmp
push
inc
add
push
pop
pop
xor
fdivrs
push
mov
into
push
jg
mov
xchg
sub
mov
ljmp
dec
sub
push
dec
adc
dec
div
cmpsb
mov
jecxz
jbe
push
je
cmp
and
pop
adc
dec
dec
adc
sbb
push
fcoml
mov
lds
dec
mov
push
dec
push
adc
sub
sar
xchg
int
xor
aam
jne
or
insb
lods
mov
mov
push
cmp
jne
cmp
inc
daa
and
flds
arpl
mov
xchg
shlb
push
and
rorl
cmp
jae
mov
dec
xor
mov
inc
ljmp
mov
add
lret
xchg
sub
out
fidivrl
or
dec
xor
adc
cmp
inc
jl
ds
repz
ss
leave
hlt
adc
cwtl
test
mov
xchg
dec
mov
mov
scas
or
mov
xchg
fldenv
mov
pusha
inc
jge
cmp
jmp
or
sub
jb
out
les
aad
leave
sub
aad
mov
jl
das
ds
cld
scas
adc
fidivrl
rorw
les
into
aad
pop
or
loop
in
call
scas
xor
lret
push
cmp
data16
push
cmp
dec
jb
inc
cmp
sbb
add
mov
inc
pop
mov
adc
sub
ds
stc
mov
sbb
xchg
lock
add
data16
bound
xor
imul
out
test
mov
inc
ja
mov
add
nop
loopne
adc
cmp
mov
mov
call
sub
and
push
ret
inc
xchg
mov
lea
call
leave
adc
jl
cmpsl
and
mov
pop
cld
rorl
pop
xchg
sub
fnsave
dec
fcmovu
cmp
dec
pop
je
test
sarl
data16
adc
int
pop
outsl
cmpsb
push
xchg
inc
cmp
fbld
fwait
jecxz
repnz
pop
loope
insl
fisttpl
adc
loope
xchg
pop
aas
sub
repz
and
stc
sti
xor
andl
push
pop
pushf
rcrl
or
push
ficoms
lcall
es
xchg
mov
dec
or
and
cmpsb
add
pusha
int
cs
out
jnp,pn
mov
loop
stos
mov
jge
inc
test
xchg
roll
inc
out
mov
lret
xchg
inc
adc
shl
jnp
push
push
push
add
and
rcl
mov
jb
loop
imul
mov
repz
jo
mov
out
sbb
repnz
push
pop
cmp
jnp
cmp
cmp
retw
rolb
push
pushl
jp
int3
add
aaa
dec
sub
cltd
loope
lret
iret
outsb
leave
rolb
rorl
ror
cmp
or
icebp
daa
jne
sti
outsb
pop
cmpsb
xlat
adc
jp
inc
jmp
fisubrs
mov
xlat
cmpl
xchg
sub
icebp
shll
cmp
lret
push
mov
lock
ret
xor
rorb
xchg
mov
mov
addb
inc
les
push
les
imul
dec
push
in
dec
scas
adc
mov
inc
dec
pop
lahf
xchg
inc
idiv
or
mov
icebp
and
inc
mov
add
xchg
xchg
xchg
aam
ds
imul
xor
mov
loop
ror
addl
insb
xchg
sub
pop
pop
cmpsb
push
rcll
or
mov
sub
dec
sahf
sub
data16
enter
mov
leave
insl
adc
shrb
daa
imul
dec
test
sbb
je
xlat
lods
mov
fstpt
pop
adc
ds
or
push
dec
xchg
fs
mov
sbb
movsl
rcrb
cltd
add
imul
jb
movsb
shl
sub
jl
sbb
adc
adc
les
adc
adc
pop
xchg
imul
mov
test
push
mov
nop
cmp
fcmove
addb
mov
repz
xchg
xor
in
xor
out
dec
mov
mov
lock
psubq
andl
sub
pop
lock
loop
add
fdiv
popf
jne
push
cmp
andl
pop
jne
pop
cmpsl
cld
subb
outsl
or
lea
subl
push
push
outsb
popf
cmc
shll
adc
orb
push
mov
lods
and
out
cs
pushl
inc
jl
sahf
test
xchg
lea
int3
inc
inc
dec
mov
repz
mov
or
bound
in
subb
or
mov
and
or
cmp
in
cltd
push
lea
jp
xorb
les
add
leave
jge
cld
jge
sbb
push
mov
repz
xor
jnp
repnz
lahf
push
in
ret
push
orb
mov
mov
push
popa
add
jp
mov
mov
jb
push
lret
das
xor
incl
movb
mov
pop
stos
adc
inc
adc
repz
xchg
nop
jbe
addr16
inc
sub
mov
mov
call
mov
mov
lea
movsb
mov
jmp
adc
adc
nop
mov
sub
xchg
mov
andb
inc
cmpsl
mov
enter
mov
addb
xor
jo
daa
pop
sti
xchg
pop
sbb
out
lcall
imul
push
pop
lods
in
leave
dec
cmpsb
les
test
faddl
stos
jne
mov
addr16
dec
push
test
mov
lret
jo
adc
rolb
mov
in
jbe
pusha
into
xorl
loop
xchg
jmp
fdivs
aas
data16
jg
xchg
sahf
scas
mov
cwtl
xorl
mov
lock
call
int3
jo
mov
mov
pop
aas
ret
in
jp
push
jno
movsb
xchg
sub
add
or
add
mov
jo
sub
xchg
add
cmpb
clc
vhsubps
into
sub
push
cmpl
dec
inc
jge
aam
call
repz
jo
ret
mov
into
inc
addr16
jmp
mov
mov
mov
dec
inc
jge
and
xor
push
xchg
or
add
out
jge
fdivs
dec
push
cmp
ret
cmpsb
jmp
or
fistpl
or
dec
pushf
mov
ljmp
repnz
xchg
mov
pop
xorb
and
ss
jl
cmc
add
aam
subl
sahf
data16
inc
fsubrp
mov
jmp
repnz
mov
pop
jle
hlt
or
xor
cli
sarl
repz
out
inc
or
outsb
sar
nop
imul
jp
push
dec
iret
cmp
pop
xor
test
xorb
pop
push
fnstcw
jl
nop
fisttpl
sbb
scas
sub
ret
mov
pop
jmp
loop
ret
stc
xchg
hlt
push
jbe
clc
popf
ret
aam
mov
mov
fcmovnu
add
idivb
pop
jo
mov
mov
shlb
ret
daa
arpl
arpl
idivl
stc
cltd
mov
pop
cmp
jno
xor
loope
jge
or
sub
push
sbb
mov
inc
xor
push
mov
pop
cmpsb
leave
cmpb
push
mov
jo
test
shr
repnz
jmp
pop
mov
add
cs
mov
mov
ror
scas
movsb
or
std
dec
xchg
jg
xchg
and
xchg
dec
jnp
dec
aad
fsubs
int3
pop
jns
mov
outsl
repnz
or
das
add
mov
cmpsb
mov
dec
iret
scas
xchg
cmp
mov
sub
mov
ret
sahf
cmp
add
mov
jns
adc
pop
nop
cmc
xor
xchg
push
lret
sub
or
sub
call
rclb
arpl
lcall
lods
mov
movsl
jg
jg
addb
inc
loopne
push
test
xchg
fstpl
sub
andl
outsb
xchg
mov
jns
loopne
sbb
lahf
lods
mov
sbb
mov
push
das
out
inc
xchg
jge
das
sti
sub
int3
push
aad
jbe
pop
js
ja
imul
inc
mov
jbe
ret
mov
lock
dec
mov
mov
mov
add
int3
fwait
inc
arpl
pushl
cmc
xchg
in
pop
or
xor
cmp
lods
daa
jno
repz
aaa
inc
shlb
xchg
or
mov
and
pusha
sbb
mov
and
inc
mov
push
xchg
jle
call
or
mov
lret
lods
cmpsb
fstp
mov
test
pop
out
fsubrl
mov
addr16
push
jns
xchg
int
shl
xchg
rol
and
sahf
jg
jno
cmp
das
call
out
out
cmpsl
mov
lcall
jp
lahf
mov
lods
repnz
into
fsubl
jg
and
xchg
orb
nop
insl
lahf
imul
repz
in
das
inc
ljmp
xchg
fistl
iret
push
sub
pop
inc
js
adc
cwtl
loop
xchg
cmp
jo
mov
xchg
mov
aas
mov
xchg
data16
mov
add
lcall
mov
xor
xor
cwtl
in
out
out
sub
js
clc
mov
or
xrelease
mov
nop
jl
pusha
push
mov
test
mov
mov
push
mov
jecxz
inc
adcl
push
or
scas
mov
mov
xchg
ret
push
sahf
sbb
cli
xor
subb
in
mov
or
add
mov
jae
repz
enter
dec
or
roll
test
fmuls
shlb
mov
cmp
and
mov
imul
push
inc
std
fidivs
lods
clc
cmpb
enter
cwtl
mov
mov
ret
push
outsb
into
test
shlb
les
sarl
inc
dec
lea
into
pop
jb
ja
jge
stos
aad
out
outsb
or
lods
jecxz
push
push
call
or
dec
lods
aam
jo
into
and
cmp
cltd
and
cmc
cwtl
jecxz
lea
mov
push
aaa
decl
iret
rcll
ret
movsl
xchg
into
xchg
mov
adc
andl
sub
pop
pop
push
jne
inc
ror
sub
fpatan
jp
cmp
jmp
test
loope
and
leave
push
mov
cld
jecxz
mov
imul
popa
jge
dec
nop
arpl
iret
inc
lcall
shl
push
rcrb
int3
scas
flds
fmulp
cmp
pusha
cld
push
xchg
mov
push
pushf
inc
rclb
pusha
decl
adc
mov
jge
cmpsl
or
mov
mov
repz
ret
fsubl
xchg
xchg
imul
mov
mov
loope
mov
stos
lods
cwtl
loop
adc
sub
test
les
mov
or
mov
xchg
cmpsb
mov
jb
push
mov
cs
jbe
pop
iret
stc
out
or
xor
lock
add
sub
mov
mov
orl
jge
and
out
pop
and
stos
add
mov
popf
push
lret
inc
jbe
ds
enter
xchg
insb
addr16
rcll
movsl
orb
or
cmp
mov
scas
push
sub
cmpsl
push
data16
jmp
lahf
insb
mov
test
test
push
aaa
leave
mov
pop
mov
stc
inc
xor
xor
xchg
aam
dec
ret
adc
ja
and
and
add
mov
pop
lret
rcrb
lods
xor
call
and
mov
call
fstl
mov
push
lcall
adc
aam
pop
aad
add
mov
mov
cltd
lcall
scas
repz
aas
mov
mov
lret
xchg
mov
stos
lea
and
jl
pop
ror
ss
test
xchg
decb
sub
adc
mov
jnp
lods
add
mov
mov
test
decb
ja
add
mov
mov
xchg
dec
push
dec
cmpsb
mov
fistpll
cmpsb
repz
xlat
xor
scas
push
aam
iret
popf
mov
rcrb
adc
cs
rcrl
test
lock
mov
mov
mov
jecxz
adc
inc
and
pop
add
mov
mov
sbb
xchg
and
push
xchg
lcall
xlat
sar
into
jo
in
cld
lock
pop
popf
ret
popf
test
lock
and
out
mov
or
add
mov
outsl
je
je
xadd
jmp
loope
addr16
xchg
mov
inc
mov
push
and
adc
pop
dec
inc
cmpsb
and
sbb
ss
loope
fmulp
jg
ljmp
repnz
jmp
mov
bound
rcl
mov
lret
repnz
xchg
xchg
clc
adc
push
repz
sub
add
sbb
xchg
mov
into
jge
ret
movsb
xchg
xchg
cmp
jg
sbb
repz
ds
fadds
es
icebp
mov
xchg
jnp
inc
cmp
and
das
cmpsl
jo
repz
dec
ja
lods
adc
jg
inc
aad
in
xor
xchg
or
pushf
scas
aaa
repnz
cmp
add
mov
dec
mov
xor
repz
addr16
mov
mov
sub
jb
add
nop
sbb
icebp
les
cwtl
jae
arpl
jl
psrlq
push
into
cmp
mov
lcall
adc
inc
inc
ret
cmp
or
xchg
mov
out
or
out
lret
insb
in
and
aam
mov
mov
into
mov
enter
lods
popl
inc
and
cmpsl
js
mov
mov
hlt
decb
mov
subl
push
sub
and
jae
enter
mov
pop
xor
push
repnz
fdivl
aam
inc
fdivs
les
ja
push
nop
decl
rcrb
inc
outsl
xchg
cmovle
push
lock
mov
xchg
and
or
xor
sahf
movsl
mov
xchg
mov
mov
push
sub
pop
push
push
mov
push
movsl
inc
cmp
cmp
mov
sbb
adc
inc
mov
mov
sub
es
jnp
fs
lds
jo
in
adc
xchg
dec
cs
pop
rolb
cmpsl
pop
stos
sahf
rorl
xor
call
dec
pop
lcall
les
and
mov
subb
push
mov
xchg
adc
iret
xchg
loopne
cmc
and
pushf
rcl
pop
in
mov
inc
stc
das
dec
dec
popf
mov
clc
jno
ret
lcall
nop
pop
inc
scas
pop
data16
loope
push
fsubs
rcll
adc
mov
clc
cld
cltd
mov
outsb
int
and
pop
in
test
aam
mov
aam
inc
push
lods
add
stos
sub
pop
inc
ret
add
insl
rcrl
popf
xor
pop
xchg
fwait
push
cmc
aaa
or
cs
nop
popf
aad
and
pop
arpl
sub
dec
push
inc
pop
in
adc
inc
dec
nop
decl
fildll
repnz
add
cmpsb
lock
enter
mov
inc
test
lods
nop
pop
arpl
jae
lock
and
add
test
mov
mov
cmpsb
xchg
out
mov
sub
push
pop
inc
test
or
bound
fwait
mov
adcb
mov
sub
pusha
pop
push
xchg
xor
loopne
mov
sbb
fisubrs
xchg
cld
sahf
out
inc
mov
mov
xchg
jae
jle
mov
stos
jl
fcmovb
lahf
or
mov
mov
shll
repz
mov
repnz
xor
fwait
shll
sti
int
mov
mov
int
sub
mul
enter
pop
icebp
and
aam
and
mov
push
scas
faddp
pop
addl
out
add
mov
mov
mov
imul
jmp
clc
pop
cmp
adc
mov
jae
lock
xchg
inc
mov
push
bound
out
xchg
add
test
xchg
jl
mov
subb
into
in
xlat
jns
and
fucomip
xchg
imul
cld
and
mov
jno
mov
ret
outsb
inc
leave
fcomps
lods
xchg
add
mov
xchg
or
dec
dec
shrb
out
dec
dec
mov
or
push
cmp
pop
jne
cld
les
add
pusha
xor
adc
xor
push
mov
gs
sti
call
popa
inc
mov
sub
lea
addb
jbe
dec
cwtl
jns
ds
xchg
jl
mov
loop
mov
sahf
inc
sub
jae
movsl
adc
sbb
lret
movb
jne
flds
xchg
fcom
xchg
lcall
or
test
cld
aas
pop
xchg
movsb
mov
outsb
gs
lds
fcoml
lret
leave
and
stos
stos
dec
aam
pop
xchg
pop
sub
nop
mov
pop
subl
xchg
xchg
ja
xchg
cmpsb
out
adc
adc
mov
cld
sub
shrb
cmp
fnstenv
js
outsb
mov
sub
dec
test
test
pop
xchg
outsb
xchg
xchg
jmp
lret
mov
shl
xor
lahf
ljmp
jmp
loop
js
out
add
cmc
fdivr
push
add
jmp
hlt
add
ljmp
xchg
add
jbe
cld
sahf
xor
or
push
xchg
mov
lahf
lods
or
and
call
shlb
pop
mov
cmpb
gs
iret
aad
data16
fidivrl
cmp
sbb
and
mov
sbb
xchg
cmp
push
lret
sub
outsl
lret
dec
xor
or
lods
test
add
sahf
aas
and
mov
adc
addr16
in
mov
test
and
xor
cmpl
mov
fs
jl
xchg
jb
mov
and
gs
nop
inc
je
lret
movsb
sub
mov
stc
dec
test
dec
inc
test
test
shlb
add
cmpb
andl
pushf
lcall
icebp
dec
dec
add
enter
rorl
jbe
sti
xchg
cmp
sub
adc
dec
jbe
insl
mov
les
and
rolb
stc
push
or
sbb
shrb
dec
addr16
push
cltd
dec
mov
jecxz
xchg
lcall
scas
pusha
push
aas
jns
test
or
pop
push
std
pop
test
andb
add
mov
mov
lods
inc
cmp
subl
add
mov
jbe
jnp
push
leave
test
and
addb
xlat
sbb
movsl
jg
mov
cmpsb
into
sahf
pcmpgtb
mov
mov
shl
mov
jb
scas
mov
mov
mov
sub
mov
nop
andl
bound
jl
cmpsl
test
and
ljmp
repz
aad
outsb
fidivrl
ljmp
insb
lret
test
push
push
cmpsb
roll
ret
push
dec
into
lods
pop
jl
push
mov
outsb
xchg
rcrl
pop
pop
xor
sahf
in
xchg
jae
and
rolb
into
inc
cld
and
xchg
xchg
aad
push
nop
dec
test
movsb
push
loopne
in
adc
lods
sarb
enter
test
jbe
push
in
std
testb
ret
js
scas
mov
mov
movsb
and
inc
aam
in
jns
notb
add
pop
sub
stos
in
js
mov
mov
mov
jl
imul
adc
lea
enter
cmp
xchg
iretw
lret
or
jp
and
pop
ficoml
loop
loop
scas
xchg
xchg
sbb
insl
xchg
outsb
shrl
sbb
jp
mov
outsb
sahf
or
jb
fs
pop
push
aam
push
aas
pop
inc
sahf
lahf
and
ss
stc
aad
and
loopne
xor
hlt
jae
std
xchg
imul
cld
mov
test
pop
mov
loope
inc
ret
push
sti
aas
dec
xchg
into
jg
out
mov
pop
add
and
lcall
add
stos
ror
imul
inc
xchg
pusha
sbb
mov
xchg
loop
xchg
xchg
xchg
mov
loop
dec
int
inc
pushfw
aas
ret
and
mul
and
into
pop
mov
test
fcmovb
mov
push
xchg
pop
add
into
test
xchg
mov
and
push
mov
hlt
lods
mov
leave
mov
mov
shll
or
cmpsl
adc
imul
and
dec
test
and
mov
or
lret
xchg
cwtl
xchg
loopne
xchg
sub
test
in
dec
mov
test
inc
mov
dec
xor
mov
divb
dec
and
sub
mov
inc
xor
pop
xchg
fcoml
dec
sbb
inc
stos
xchg
xchg
movl
mov
loop
test
add
icebp
sub
ret
imul
rcr
sub
push
lret
test
shlb
mov
and
dec
mov
jl
fidivrl
aam
into
rorl
push
ret
mov
add
ss
aad
inc
mov
hlt
jmp
les
jge
lcall
pop
mov
pushf
push
aad
lds
dec
adc
mov
movsb
in
mov
sub
jmp
ret
loope
rcr
clc
jo
jp
push
inc
int
adcl
mov
je
jb
mov
cmpb
push
fsubrs
call
dec
in
and
xchg
cwtl
jb
stos
inc
pop
stc
lods
pusha
ja
out
rorl
imul
lods
stc
xor
aam
pushf
cmp
xchg
adc
add
icebp
test
mov
adc
cltd
adc
les
sahf
cwtl
jg
pop
fisubs
push
xor
lea
pushf
or
decb
jg
push
repnz
and
xchg
clc
test
mov
pop
repnz
and
sub
xchg
or
mov
mov
movsb
xchg
andl
mov
jg
outsb
pop
cwtl
rclb
jmp
fscale
dec
xor
mov
sahf
ret
push
mov
mov
lahf
dec
add
xchg
aam
mov
daa
dec
repz
int
cmp
fwait
lcall
mov
push
xchg
add
xchg
ljmp
add
cmpsb
cmp
mov
aam
adc
mov
cli
jbe
cwtl
push
pop
sub
call
adc
pop
into
mov
loop
mov
lods
jno
fstps
rcl
xor
daa
jbe
and
testb
ret
mov
xchg
shlb
inc
and
addr16
movsl
mov
push
ja
mov
inc
add
stc
repnz
xor
sub
and
pop
inc
ret
fmul
pusha
sbb
mov
push
pop
jns
add
add
cmp
mov
xchg
mov
test
aas
sub
inc
adc
cmp
daa
out
lret
adc
dec
xor
shl
repnz
imul
jne
clc
mov
xchg
je
out
dec
mov
xor
jno
sbb
jbe
jg
dec
xchg
aam
iret
push
mov
loope
lock
cmc
int
push
mov
xchg
and
les
push
add
cmp
movsb
pop
fs
mov
cmp
pop
lret
jmp
mov
js
dec
xor
xchg
lcall
push
adc
or
mov
std
addb
ret
repnz
clc
mov
cmp
pushf
mov
pop
outsb
repz
and
sbb
jae
imul
mov
xor
shlb
mov
stos
push
jns
movsl
jb
iret
mov
push
xorb
mov
cld
mov
data16
adc
inc
adc
cmpsl
adc
iret
movsl
lret
cmc
sbb
shlb
xor
or
hlt
or
cmp
stos
mov
fisttps
outsb
shrb
sahf
jg
je
xchg
aam
mov
lods
and
in
cwtl
add
pop
push
aam
dec
xchg
pop
dec
adc
fsubrs
pop
fildl
mov
ret
in
xor
mov
pop
fcoml
cmp
jp
cwtl
pop
out
pop
cmp
leave
jl
lods
into
lcall
decb
jg
ja
mov
test
fsub
dec
std
xor
and
push
jmp
sbb
xchg
int
fists
rcll
out
cmp
mov
es
sbb
rorb
int3
xor
movsb
mov
arpl
jns
cmp
mov
dec
mov
enter
jmp
js
fistl
sbb
cli
sub
loopne
into
add
sbb
lea
push
movsb
jecxz
outsb
out
push
mov
sbb
lahf
cs
mov
shl
int3
mov
mov
aad
and
inc
push
mov
add
or
cmp
lcall
cld
mov
adc
xchg
cld
adc
cmpsb
fsubp
sbb
mov
cmp
mov
mov
jb
jecxz
cmc
inc
imul
into
nop
imul
jns
jo
cld
and
xchg
out
sub
xchg
jae
ljmp
mov
rcrb
ja
sbb
adc
pop
mov
divl
je
pop
mov
sahf
push
js
fldl
sub
scas
imul
js
ror
xchg
cli
sub
jg
xchg
cmp
push
ret
sub
lds
pop
int3
sub
add
mov
mov
mov
nop
jb
pop
mov
mov
loopne
shrb
fsubrs
clc
jmp
lods
ret
pushf
in
popf
out
std
push
cmp
dec
data16
or
or
jp
pop
mov
ljmp
adc
aad
movaps
mov
repz
mov
lcall
ljmp
mov
add
jae
shll
xlat
jecxz
xor
repnz
cmpsl
jmp
jns
jp
jp
pop
mov
xchg
gs
stos
divb
push
ds
lds
call
xlat
frstor
pop
into
pop
push
lods
mov
outsl
push
add
lret
inc
test
xchg
cmpsb
mov
cli
mov
frstor
js
add
or
test
stc
pop
xchg
clc
scas
mov
inc
repnz
outsl
sub
outsl
pop
mov
sbb
mov
lds
inc
push
adc
loopne
xchg
shrl
movsl
std
xchg
adc
adc
mov
add
push
into
repz
or
mov
imul
xorb
pop
movsb
lods
pop
add
xchg
je
xor
mov
mov
pop
rcl
inc
push
pop
mov
out
out
es
sub
mov
fsubrs
sti
sahf
xchg
iret
push
jge
stos
out
pop
aas
lods
faddl
hlt
xchg
pop
sbb
and
xchg
push
mov
adc
sbbl
inc
add
aad
fs
jmp
repnz
or
cwtl
mov
int3
and
lret
adc
test
cld
cltd
cmp
cwtl
sbb
enter
pushf
imul
stc
orl
xchg
mov
or
adcb
inc
lahf
xor
mov
inc
int3
lea
adc
mov
push
les
cmpsl
stos
adc
test
push
sbb
push
clc
jno
adc
pop
subb
sbb
in
jbe
stos
mov
push
les
mov
mov
inc
lock
aaa
lret
lahf
addb
pop
clc
rorb
push
mov
lock
dec
mov
mov
mov
jnp
push
subb
mov
push
cli
xchg
inc
daa
rolb
aad
ror
mov
xrelease
lea
jecxz,pn
imul
stos
push
or
cmp
leave
cmp
jbe
cmp
jbe
scas
jg
aas
xchg
cmp
inc
push
mov
pop
cwtl
cmp
imul
into
cld
add
or
sbb
inc
push
out
rcrl
dec
notb
push
repnz
sbb
mov
inc
nop
jb
mov
jg
or
xor
jne
and
lods
imul
and
push
aad
sahf
push
cmp
cld
stos
mov
jbe
dec
data16
ja
cld
lods
add
cmp
dec
popf
nop
mov
mov
mov
jbe
outsl
idiv
inc
outsb
lret
sub
mov
pop
sub
inc
adcb
fdivs
jp
inc
in
pop
out
sub
adc
mov
add
push
and
pop
pop
adc
adc
lock
push
pop
jg
push
fimuls
leave
in
outsb
ljmp
mov
and
fistpl
xchg
mov
or
fsincos
push
push
rol
ror
sbb
mov
shlb
pop
inc
lods
mov
test
sub
or
xchg
lret
sub
ljmp
sub
jns
or
sti
sub
xor
hlt
cwtl
push
sub
ljmp
jg
in
lret
int
in
mov
rorl
ljmp
flds
inc
dec
push
xor
or
imul
push
aad
js
push
ret
pop
fnsave
sub
out
out
fildl
mov
stos
rorb
dec
out
or
outsb
push
push
fidivrl
insb
rolb
repz
mov
xor
add
fildl
fwait
mov
test
xchg
lea
push
adc
lods
pop
sbb
push
sub
adc
rcrb
or
push
movsl
test
push
ret
xor
in
in
pause
shrb
pop
ljmp
xchg
cltd
call
mov
cli
xchg
punpckhdq
cmpsl
mov
mov
subb
push
lret
jbe
fimull
repz
ljmp
in
movsb
jbe
or
sub
xlat
inc
xchg
xor
out
aad
push
lods
cmp
rolb
stc
dec
or
rcll
cld
xchg
outsb
cmpl
popa
sub
mov
add
add
pushw
aad
fidivrl
add
pop
sub
repz
cmp
shll
sbb
sub
mov
imul
or
dec
mov
mov
orb
fadds
xor
nop
clc
jb
test
lret
test
jmp
inc
mov
push
movsl
or
pop
sahf
enter
les
adc
enter
and
scas
add
mov
pop
jmp
into
xchg
adcb
jmp
imul
popa
dec
call
jnp
mov
add
cmpsb
sbb
add
cmp
jecxz
mov
int3
in
enter
jb
repnz
inc
nop
mov
cmp
mov
fcmovbe
add
mov
xchg
xchg
rcr
seta
jge
sub
jb
inc
sti
jp
push
div
inc
jnp
pushf
data16
pop
adc
xor
out
fdivrl
hlt
repnz
cmp
mov
outsb
xchg
cmp
inc
cltd
scas
xor
aad
add
rolb
mov
inc
add
push
jmp
sahf
cld
xchg
pop
pop
mov
mov
mov
mov
lock
xor
mov
mov
sub
mov
add
pusha
add
xor
xor
mov
or
adc
lahf
outsb
out
and
sub
leave
cmpsb
lcall
orl
mov
mov
and
lods
sub
mov
cmp
fcmovu
movsl
sti
cltd
leave
dec
mov
mov
andb
jne
push
mov
lret
or
pop
test
ja
lcall
mov
ljmpw
movsb
call
fdivs
jbe
adc
jecxz
aad
out
loop
ret
ljmp
jecxz
xorl
ret
into
fcom
jnp
and
jo
jmp
cmpsb
rcrb
xor
rcrl
push
loop
sahf
gs
movsl
jbe
into
movsb
fstpl
cmp
ljmp
sahf
push
out
xchg
sbb
rcrb
popa
dec
pop
dec
mov
lods
bound
cmp
pop
cld
rcrb
test
jecxz
lods
inc
sub
scas
dec
sub
cwtl
insl
call
adcb
pop
iret
roll
lahf
out
ret
pushf
out
jbe
clc
pop
xchg
and
in
mov
aaa
and
data16
pop
fnstsw
sub
mov
push
or
or
and
push
push
cmp
movsl
xorb
outsl
les
jae
xchg
and
jae
and
flds
jae
stc
je
faddl
xchg
mov
jl
add
cmpsl
fisttps
std
movsl
sbb
in
mov
sbb
mov
inc
paddsw
mov
stos
push
nop
pop
stos
repnz
dec
dec
je
inc
divb
mov
xor
shrl
fnstcw
xchg
dec
push
hlt
cmc
or
out
fdivrl
or
in
jg
loop
ret
and
ja
or
nop
loope
imul
aas
cmpsl
mov
sub
jbe
js
popf
sbb
push
pushf
lea
mov
lcall
sub
push
mov
repz
jge
mov
incb
int3
subl
sbb
adc
sti
out
fs
dec
xor
pop
dec
mov
adc
jns
mov
or
mov
inc
fisubs
std
pop
sti
lods
or
sbb
dec
dec
loopne
aad
push
xlat
enter
mov
xchg
add
jb
outsb
shlb
inc
sbb
xchg
add
xlat
bound
pusha
jb
jp
out
outsl
or
fmull
mov
test
bnd
test
mov
cli
xorb
es
mov
popa
sub
out
lret
jg
jl
rcrb
inc
aaa
mov
insl
and
add
loopne
test
aas
xor
ret
dec
fldenv
mov
stc
aas
jbe
xchg
inc
shll
arpl
stos
inc
inc
pop
lods
pop
scas
sbb
cmp
jne
mov
outsb
ljmp
js
adcb
fs
pop
sar
jo
jmp
int
mov
andb
push
lds
int
clc
cmp
insl
in
das
inc
sbb
mov
mov
fdivrs
xchg
cltd
je
or
jge
popf
push
hlt
jecxz
mov
dec
lret
inc
jl
add
int3
jle
sahf
jns
cmp
or
stos
add
xor
mov
dec
incb
pop
xchg
stos
push
test
cwtl
inc
jb
icebp
cmp
pop
jp
aam
adc
or
loope
mov
jne
inc
dec
sahf
xchg
cmp
repnz
jle
cmp
dec
shlb
push
pop
dec
ret
fstp
loop
leave
push
inc
cmpsl
data16
jmp
loope
loope
and
mov
loopne
data16
pop
inc
and
cmp
and
nop
push
loope
and
cli
jmp
test
inc
sti
xorb
cli
scas
cmp
jo
mov
mov
test
xchg
ret
call
xchg
js
das
ja
sbb
loop
xchg
push
mov
inc
lods
ret
pop
pop
aam
loop
repz
dec
stos
or
sti
or
test
movsb
pop
xor
les
push
scas
repz
jno
subb
mov
in
out
or
add
jl
jnp
cmc
int3
mov
inc
loopew
mov
sahf
test
es
cld
ja
fcoms
dec
jb
jnp
insl
sbb
sub
sub
cs
sbb
lea
arpl
xchg
mov
sahf
push
aas
mov
cmp
popa
lahf
je
mov
and
out
xor
pop
jecxz
cwtl
add
ljmp
sbb
loope
push
push
sti
fstpt
out
bnd
iret
ret
adc
data16
xor
movsb
mov
test
xchg
ret
fstpt
mov
stc
hlt
int3
mov
jb
and
fimuls
leave
sbb
mov
aaa
sahf
dec
mov
repnz
jl
addps
je
or
inc
iret
in
stc
adc
push
jo
mov
imul
jecxz
out
xor
mov
or
jg
and
fisubl
xor
mov
xor
lods
push
mov
adc
jmp
xchg
cmc
repz
divb
mov
aam
in
test
icebp
sahf
rol
xor
mov
add
mov
inc
jns
pop
mov
add
mov
jg
push
add
call
sub
aam
adc
xor
xor
pop
xchg
ss
xchg
mov
repnz
mov
inc
in
lock
jb
idivb
mov
mov
lcall
lahf
or
mov
mov
add
test
jmp
push
arpl
mov
shll
adc
mov
pop
fsts
into
pop
mov
jno
aaa
inc
or
loop
shufps
sbb
test
mov
ljmp
xor
push
mov
rcrb
test
cmpsb
pop
sbb
lods
ficoms
rclb
lret
movsb
sti
sub
or
out
lahf
into
insb
aaa
mov
shrb
mov
jnp
je
lock
hlt
lcall
fnstcw
xchg
mov
cmp
pop
jb
jp
or
cmc
out
jo
mov
out
inc
inc
mov
div
lock
nop
dec
jmp
mov
push
xor
fldenv
add
cltd
rclb
jbe
jge
jnp
ds
mov
add
test
fwait
add
lds
mov
sahf
pop
jb
mov
call
xchg
movsb
push
sub
pop
push
push
fcmovnu
cmp
sarl
adc
pop
mov
mov
mov
or
jl
add
push
repz
iret
nop
repnz
imul
data16
xchg
add
lret
jbe
pushf
mov
mov
mov
push
inc
sbb
out
fldl
mov
mov
mov
fs
add
into
sub
aad
mov
loopne
ss
in
dec
adc
and
xchg
lcall
jl
cwtl
pop
mov
dec
cld
into
andl
iret
xchg
pop
out
xor
mov
sti
adc
xlat
mov
lcall
mov
mov
aam
popl
adc
adc
std
mov
push
ficompl
cmp
jbe
add
or
ja
xor
jl
push
xchg
mov
adc
test
sub
cli
pop
ss
cmpsl
mov
addr16
fucomip
orb
xor
jge
jg
push
mov
fwait
stc
rorw
xchg
in
mov
mov
movsl
pop
fmull
pushl
or
jb
sbb
xor
sbb
add
cmp
decb
in
test
push
inc
or
mov
outsl
jg
pop
out
inc
mov
aas
int3
mov
adc
adc
cmp
add
aas
xchg
sarb
lea
adc
outsb
xor
fdivs
cs
jge
loopne
dec
lods
rol
jmp
fwait
movsb
fidivrs
jge
das
aad
call
out
mov
mov
outsb
test
sbb
imul
test
or
xchg
sbb
cmc
mov
sarb
bound
ss
pop
int3
xchg
sbbl
popa
ficoml
notb
xchg
cmp
hlt
movb
stos
pause
imul
inc
mov
jge
jbe
cmp
jo
hlt
adcb
lods
cmp
pop
dec
fnstcw
mov
faddl
xchg
xlat
add
xchg
mov
mov
pop
add
pushf
mov
inc
repnz
mov
test
fincstp
mov
sbb
cmc
subb
stos
out
add
mov
repz
aam
movsl
mov
psubusb
cmp
mov
push
out
dec
xchg
mov
test
call
sarl
imul
sbb
xchg
xor
adc
fdivr
mov
int3
xchg
jge
inc
pop
icebp
loope
loop
orl
mov
push
incb
bound
and
lcall
pop
pop
mov
in
inc
jp
mov
out
dec
fisubrs
popf
outsb
and
xchg
andl
inc
fsubr
jp
mov
gs
push
and
addb
js
dec
cmpl
int
outsb
sarb
fxtract
xchg
push
daa
imul
js
shlb
mov
repz
add
shll
fwait
data16
jnp
xchg
addr16
mov
add
cmpsl
mov
lahf
in
or
rorl
fwait
enter
les
inc
enter
dec
mov
xchg
and
les
dec
outsl
inc
in
jne
dec
inc
sbb
mov
pop
addr16
jl
fiaddl
sub
fbld
out
jns
gs
rcl
add
add
repz
inc
push
addr16
fcom
push
inc
addr16
mov
jns
scas
mov
in
mov
std
loop
jl
cmpsb
push
nop
jb
int
pop
sub
mov
add
hlt
xchg
in
in
add
aad
xor
push
inc
je
inc
mov
popa
sub
cmp
ret
dec
aad
icebp
or
rcl
aad
add
insl
lods
in
cmpsl
push
and
pusha
pusha
xor
add
push
outsl
inc
jo
ljmp
enter
pop
decl
out
mov
fs
sbb
jo
adc
int
inc
push
inc
sti
insb
and
dec
test
ficoml
subb
inc
xor
jns
and
movsl
lea
sbb
bound
outsb
adc
xor
sbb
ja
mov
cmp
std
mov
dec
add
arpl
pause
sub
push
adc
sti
inc
data16
adc
mov
cld
cs
enter
test
pushf
or
addl
cld
mov
push
mov
add
mov
lret
xchg
data16
pop
xor
pop
xchg
movsb
adc
jbe
push
loop
mov
and
push
sub
imul
push
xor
jge
inc
rcll
mov
fidivrs
fists
rolb
pop
insl
mov
clc
cmc
cmp
gs
push
jns
inc
push
mov
out
xchg
movsl
ss
cmc
mov
cmpsl
jge
xchg
jmp
add
jmp
add
pushf
pop
jne
scas
je
dec
out
lahf
decb
outsb
lahf
dec
dec
dec
mov
jle
push
mov
push
ret
mov
fptan
lods
push
mov
pop
ja
or
and
int3
rorb
mov
xor
mov
mov
or
xchg
mov
incl
add
sahf
mov
jno
jnp
adc
fidivrl
mov
js
into
cli
push
mov
adc
cld
or
mov
ljmp
mov
pop
rcl
aad
jg
lret
js
addr16
dec
push
lahf
fwait
or
stos
loop
jne
and
mov
push
mov
cwtl
adc
mov
sarl
cmpsl
mulb
sub
loope
loop
add
inc
ja
and
pusha
sti
mov
fwait
lock
loop
mov
data16
test
inc
add
push
addl
sbbl
into
addr16
jns
inc
mov
repnz
lret
xor
test
dec
adc
mov
mov
xor
add
xchg
out
lahf
aas
xchg
push
cmpsb
je
or
addr16
add
sbb
cmp
push
mov
cmpb
jbe
jns
dec
adc
inc
cli
adc
shll
mov
fmulp
add
fs
cmp
cmp
int3
xchg
mov
ljmp
mov
scas
scas
lock
mov
fstl
int
jl
bound
hlt
rcrb
jnp
test
xor
jge,pn
push
xchg
push
repz
shl
xor
icebp
nop
rcl
pushf
imul
add
loopne
and
dec
mov
xchg
fistpll
call
add
xchg
sbb
in
shrb
mov
add
dec
dec
push
outsb
dec
cmpsl
mov
out
push
push
jge
hlt
add
repnz
sub
out
xor
enter
push
push
inc
jecxz
call
add
lock
shlb
inc
add
repnz
rol
push
add
dec
dec
adc
inc
add
lock
push
mov
imul
in
dec
xchg
mov
pop
jae
mov
xchg
call
xor
mov
movsb
repz
movsl
fcmovbe
rcrl
jo
aam
lret
push
cmc
push
mov
add
or
pop
pop
stos
jg
pop
fldcw
inc
add
not
xchg
adc
repz
push
ret
addb
movsl
cltd
andb
bswap
out
and
xchg
lret
and
lock
xchg
imul
pop
pop
and
mov
ja
fcompl
mov
jns
or
rcl
jne
dec
push
mov
call
jno
xchg
xlat
or
push
push
mov
in
ret
add
outsb
stos
xchg
out
jne
lret
dec
xchg
xchg
push
cmpsl
add
fucomp
scas
mov
std
mov
movsb
push
or
mov
push
mov
stos
gs
cmpsl
leave
leave
dec
pushl
dec
and
push
or
add
in
adc
hlt
data16
jl
rcr
xchg
and
mov
enter
mov
cld
xchg
xchg
in
andb
cmp
mov
stos
lret
sub
cmp
pop
mov
and
or
inc
and
scas
rclb
cmpsb
lds
mov
rcrl
pop
lods
dec
fwait
mov
mov
stos
mov
add
fcoml
shrb
inc
inc
sbb
lahf
seto
inc
mov
jmp
push
inc
mov
mov
xchg
jae
inc
data16
imul
lcall
inc
out
cmp
or
out
enter
push
enter
xchg
xor
mov
dec
leave
js
scas
pusha
push
das
dec
add
adc
push
fldl
mov
xor
scas
aaa
repnz
fsts
shrl
stos
loop
mov
fld
xchg
jbe
mov
sub
inc
aad
sahf
clc
stc
sahf
mov
jne
cmp
lcall
mov
cs
mov
les
cld
outsb
xchg
into
lea
bound
jb
js
mov
andl
mov
mov
imul
faddl
jb
sbb
push
shll
cmpsl
mov
push
jno
aad
sti
test
cmpsl
fmuls
pop
clc
mov
cbtw
push
test
call
fstps
mov
pop
bswap
mov
push
jne
jnp
mov
pop
cld
scas
fistps
scas
and
inc
xchg
mov
rclb
loop
cmp
xor
mov
mov
dec
sbb
cmp
mov
sbb
adc
lods
movb
fimuls
inc
or
xchg
jno
ja
sub
push
push
lds
mov
pop
dec
stc
jg
add
adc
ljmp
xor
ret
stos
call
xchg
mov
sahf
push
lock
sub
aas
cli
pop
les
scas
push
mov
iret
mov
test
adc
movsl
sub
and
mov
lea
movsb
add
pop
add
pop
and
out
xlat
test
dec
or
mov
insb
jno
aas
test
repz
test
mov
inc
sub
sahf
aam
rcrl
mov
add
push
mov
add
dec
and
out
push
loopne
enter
sub
jne
cmp
jnp
insb
pop
call
mov
mov
inc
outsl
add
repz
movsl
into
test
xchg
cmpsb
test
mov
mov
cs
jp
dec
addr16
adc
and
jbe
pop
push
push
les
sub
scas
xchg
popw
sbb
adc
pop
pop
iret
mov
nop
add
mov
addl
test
xor
xor
mov
inc
hlt
mov
xlat
xchg
sti
push
rorb
leave
repnz
sub
xchg
nop
cltd
inc
es
xor
repz
insl
movsb
orl
mov
add
test
push
or
xchg
pop
jne
push
jne
or
jg
mov
jg
imul
les
out
stos
imul
stos
adc
ret
mov
int3
into
test
into
shrl
loop
pop
nop
sub
idivl
jb
jmp
dec
stos
subl
lods
les
sahf
inc
and
cltd
mov
out
imul
test
andb
insl
and
xor
loop
add
jbe
pop
mov
roll
lds
into
mov
mov
jbe
xchg
addr16
jl
mov
mov
jbe
adc
sahf
out
mov
int3
mov
out
and
push
mov
sub
sarb
mov
pop
pop
cmp
addr16
or
cmpsb
or
or
sub
dec
cs
jmp
cvtdq2ps
lahf
stos
lock
aad
andb
mov
jb
rcrl
inc
push
lea
sbb
daa
xchg
movsl
lea
mov
mov
out
ss
mov
xchg
mov
push
mov
jb
sbb
dec
mov
enter
push
pushf
and
aam
xchg
into
sahf
dec
sub
js
mov
mov
xchg
scas
adc
pop
fwait
repnz
or
pop
pop
call
push
mov
cli
push
mov
ret
jbe
repz
ds
add
out
das
sub
cltd
mov
mov
out
dec
incl
cmc
lahf
mov
dec
sbb
cmpsl
stos
fimull
mov
add
sub
xchg
ret
divb
das
subl
lods
dec
push
mov
outsb
pop
in
jnp
pop
inc
mov
call
stos
pop
pop
shll
sahf
ljmp
add
push
mov
jmp
xchg
into
push
mov
loopne
and
lcall
cwtl
push
and
rcll
repz
jecxz
sub
clc
movsl
sbb
sar
stos
mov
ret
ja
push
mull
daa
mov
pushf
mov
mov
out
inc
das
daa
sub
adc
into
xor
add
mov
or
clc
pushf
inc
rcr
xchg
mov
cli
cli
cmc
mov
scas
xchg
adc
xchg
push
and
xchg
out
je
cltd
sub
adc
mov
sti
scas
mov
pop
lods
mov
mov
ss
jg
add
repnz
sahf
push
dec
daa
daa
jns
iret
add
test
xchg
stc
flds
and
loopne
sub
push
mov
push
xlat
push
mov
mov
cltd
xchg
adc
xchg
add
in
xchg
sbbb
ss
inc
insb
and
test
push
mov
dec
inc
lods
scas
arpl
je
push
orb
mov
sub
sti
and
add
and
mov
out
adc
xor
lods
and
xor
mov
push
cmp
add
mov
nop
ret
stos
xchg
mov
jp
mov
insl
popl
rolb
jg
sti
push
mov
test
jp
loopne
gs
imul
shll
shl
mov
sbb
pop
sub
outsb
or
xchg
inc
aas
push
xchg
pop
sahf
test
xchg
inc
xchg
jl
cli
ds
cmp
orl
in
adc
dec
divb
pop
xlat
jne
mov
cmpb
les
xchg
jg
mov
popl
mov
xor
inc
sub
addl
xor
xchg
mov
xchg
mov
fisubs
pop
sahf
xchg
adc
mov
xchg
bound
add
ds
out
and
xchg
fcoml
push
pop
xchg
jns
xchg
pop
jp
xchg
cld
test
or
pop
xor
inc
and
jb
sub
call
mov
rorl
subl
and
jb
and
scas
add
jl
add
lock
cld
cmc
shll
into
lods
pop
shrb
lret
or
mul
mov
cmp
xchg
jl
mov
jae
and
xchg
les
aad
mov
mov
sbb
into
mov
sbb
out
mov
jnp
enter
cli
mov
outsb
xchg
push
xchg
dec
adc
pusha
loope
or
pop
lahf
lods
dec
push
xchg
xchg
dec
out
dec
aad
mov
frstor
mov
nop
mov
sti
aam
pushf
push
test
dec
movsb
xorb
xchg
fistpll
stos
cmp
adc
rsm
mov
stc
js
in
fs
repnz
xor
mov
add
mov
pop
fwait
aad
jmp
mov
repnz
add
cmp
cmpsl
fisubl
push
insl
sahf
adc
sbb
shl
sbb
int
je
scas
sub
push
out
jbe
and
mov
mov
pop
cld
add
cmp
rclb
loopne
repz
and
imul
mov
cmpsl
add
xchg
mov
into
adc
or
mov
xor
pop
xchg
mov
xchg
pop
rolb
sub
cs
fs
xchg
pop
enter
mov
aad
push
ds
cmpsl
pop
loopne
orb
mov
loopne
xor
fistpll
or
jb
nop
mov
push
mov
inc
push
add
jbe
pop
test
cmp
test
mov
jo
xor
adc
or
sub
xchg
dec
scas
xchg
inc
addr16
lods
dec
mov
add
jno
mov
xor
pushf
lea
out
lock
adc
xchg
and
repz
int3
sub
sbb
add
ret
xchg
test
push
pop
cmpb
add
shrb
pop
mov
ret
pop
xor
aas
push
dec
and
jne
loopne
mov
push
sahf
fidivrl
sbb
fs
xchg
jne
add
jbe
ds
inc
xchg
dec
cmp
inc
loopne
pop
push
jg
enter
cltd
xor
lret
mov
rcr
mov
int
pop
int3
ficomps
mov
repnz
cltd
repz
sbb
xchg
sbb
mov
mov
push
insb
add
mov
je
mov
cmpsl
adc
cwtl
inc
lcall
push
xchg
roll
shlb
ss
es
ja
sahf
nop
xchg
xor
mov
mov
jg
cwtd
lret
or
adc
xor
pop
jns
xchg
addr16
ja
cld
xchg
sahf
repnz
push
mov
jae
stos
int
mov
inc
cmpsb
mov
mov
push
fs
pop
xor
lds
je
ja
icebp
je
dec
or
xchg
inc
jle
xchg
imul
add
movsl
mov
sahf
sbbb
xchg
movb
pusha
xchg
xchg
bound
mov
pop
pushf
nop
lock
xchg
push
add
pop
scas
imul
jnp
push
pop
loop
mov
jp
push
add
scas
inc
xchg
xchg
adc
leave
cwtl
push
xchg
data16
test
enter
addb
push
sahf
mov
xchg
push
lret
sub
xorl
xchg
sbb
enter
mull
insl
decb
leave
xor
xchg
cltd
je
xchg
adc
add
xchg
and
mov
xchg
mov
sbb
iret
popa
imul
cwtl
or
dec
sbb
lret
mov
cmp
jge
xor
int3
test
or
push
bound
jne
je
inc
out
mov
inc
push
xchg
or
or
fmuls
inc
mov
ljmp
jae
loop
cmp
xchg
push
repnz
rorb
inc
adc
ret
test
pop
stos
mov
add
lcall
scas
iret
in
loopne
inc
inc
ss
icebp
aad
shll
sub
scas
fmul
je
mov
ss
adc
xchg
lods
ret
outsb
ret
je
imul
add
aas
std
test
stc
sbb
inc
adc
adc
pop
xchg
mov
cmc
xchg
test
out
push
rclb
aas
xorb
call
fcmove
xchg
fstps
ret
js
sti
pop
jnp
repz
cltd
js
outsl
orb
jmp
adc
mov
movsl
inc
jle
movsl
rcl
stos
repz
cmpsl
and
pop
mov
div
sbb
inc
xchg
aam
int3
pop
mov
push
or
mov
add
jnp
xchg
sub
inc
popf
adc
pusha
mov
jge
xor
inc
jbe
movsl
mov
adc
jp
in
movsb
jp
mov
aad
enter
xor
dec
aad
jb
out
test
bound
add
loop
push
mov
lahf
mov
popf
into
pop
pop
mov
ret
inc
push
push
clc
enter
mov
mov
sub
mov
mov
sahf
aam
into
pop
mov
cwtl
push
xor
mov
push
adc
iret
mov
push
jb
and
dec
pop
adcb
push
cmpsl
ss
cmpsl
push
mov
rorb
push
jbe
push
fstps
pop
addb
leave
push
addb
cmp
mov
cld
flds
lcall
xchg
mov
fisubrl
out
xchg
test
inc
orb
and
leave
data16
jge
aad
add
out
pushf
sub
mov
movsl
dec
jne
das
push
or
dec
or
adc
in
js
xchg
xorl
leave
cs
add
or
jg,pt
mov
iret
mov
xchg
arpl
sbb
or
nop
cld
pusha
insl
cld
jbe
aam
or
pop
addb
and
push
push
test
add
xorl
test
fiadds
mov
jns
inc
or
push
cmp
out
ljmp
cwtl
jg
jmp
xchg
cli
or
outsl
xchg
ret
add
testb
sti
or
pop
sbb
inc
mov
and
lcall
mov
pop
fbstp
cmp
and
mov
sahf
pop
adc
mov
repnz
insb
push
mov
inc
cmpl
push
mov
cli
mov
test
lea
neg
xor
fwait
cmp
jecxz
loop
addb
sbb
lea
dec
int3
aas
jb
push
lea
adcl
mov
and
dec
and
shlb
sarb
mov
jae
mov
and
push
test
push
sub
sbbl
aas
idivl
or
or
icebp
push
aaa
jb
movb
pop
in
arpl
xchg
nop
movsl
adc
pushf
push
inc
xchg
sahf
jb
dec
xchg
test
jp
jo
inc
adc
bound
mov
test
sar
imulb
cs
jg
cmp
xchg
xor
hlt
add
pop
out
jp
mov
shlb
repz
adc
and
mov
cmpsb
std
lea
outsb
inc
and
mov
jg
cmpsl
push
sub
xchg
std
cmp
lods
cmp
sub
fmuls
push
adc
fsubs
repnz
cmpsb
insb
shrb
shr
loop
or
bound
subl
pop
fcmovnbe
jmp
push
jmp
sbb
sahf
or
lds
and
decb
aam
cmp
scas
ret
lea
test
insb
xchg
adc
shlb
adc
adc
mov
insb
xor
add
pop
sti
jmp
adc
and
lret
push
add
cli
lret
inc
es
test
lea
jl
lea
movsl
test
push
in
dec
js
adc
lea
cmpsl
push
xchg
repz
stos
lods
outsb
lcall
inc
or
repnz
cltd
fisubs
shlb
aas
xor
aad
hlt
into
fsts
into
divl
xchg
test
dec
test
movsl
test
scas
mov
mov
push
jl
js
xchg
jp
mov
into
dec
subb
mov
dec
mov
or
inc
xchg
nop
adcb
cmp
sti
rep
ficoms
aad
and
add
cld
push
xchg
fstps
push
popf
andl
mov
outsb
rorb
nop
mov
inc
sbb
shlb
xchg
adc
push
jl
mov
mov
filds
sub
mov
clc
enter
int
jle
and
stos
inc
loop
push
mov
insb
mov
mov
cmp
sarl
into
shrl
sahf
cmp
clc
int
or
pop
mov
mov
rcrb
cmp
rep
add
nop
inc
stos
push
inc
or
pop
frstor
push
xchg
jecxz
sub
imul
xchg
add
xor
dec
popa
xor
inc
inc
mov
mov
in
mov
and
jo
adc
and
push
mov
mov
sbb
frstor
fldenv
std
fcomp
mov
dec
leave
xchg
insb
mov
mov
jb
loopne
aam
js
bswap
adc
xchg
mov
add
jecxz
loop
jl
shll
mov
xchg
xchg
pop
xor
movsl
shlb
lahf
shrb
add
outsb
out
mov
mov
lret
andb
syscall
lcall
or
outsl
mov
les
out
cld
sbb
mov
aad
dec
xor
sbb
in
xchg
xchg
push
push
jecxz
inc
pop
sbb
and
inc
in
mov
pop
sub
subl
push
mov
cwtl
jb
aam
cmp
and
xchg
or
mov
lcall
aad
mov
aam
pop
rorl
ljmp
push
mov
add
xchg
and
std
in
nop
xchg
mov
mov
les
xchg
mov
enter
mov
mov
add
xchg
xchg
inc
aam
inc
cmp
bound
rcrb
push
add
push
gs
pop
inc
pop
mov
call
mov
xchg
xlat
push
xchg
mov
or
in
lcall
pop
and
sub
jno
xchg
imul
mov
or
out
push
cmp
mov
sub
loop
dec
xchg
rcl
push
leave
mov
jmp
lcall
push
test
add
int
repz
push
jbe
pop
stos
jo
aam
adc
dec
mov
movsbl
mov
roll
imul
movsl
adc
hlt
mov
shrl
ljmp
mov
lea
push
and
int
sbb
movsb
loope
ja
add
sub
data16
xchg
enter
nop
push
or
cmp
mov
mov
pop
jmp
lcall
push
or
repz
loopne
aad
ja
push
adc
jg
and
adcb
cwtl
mov
xchg
cmpsb
aam
mov
leave
aad
sbb
inc
push
dec
int
stos
pop
mov
testb
inc
loop
into
pop
sbbl
mov
push
nop
pop
sbb
adc
dec
out
mov
test
mulb
xchg
fcompl
mov
mov
les
mov
push
xchg
jae
sti
xchg
aam
adc
jge
stc
mov
repnz
or
mov
repz
inc
xchg
push
mov
push
xchg
mov
or
or
out
inc
or
push
adc
jb
jae
mov
lret
data16
and
push
sbbb
mov
aad
pushf
mov
lcall
dec
out
mov
mov
into
lea
xchg
rol
cmp
test
mov
outsb
xor
push
loop
lock
dec
add
into
mov
push
mov
push
cli
push
test
call
adc
xorl
inc
addr16
inc
push
xchg
adc
inc
mov
pop
inc
fisubs
sub
stos
mov
or
icebp
xlat
rclb
jp
pop
leave
sub
jnp
loope
dec
xchg
push
fistl
call
rcrb
lret
jl
daa
movsl
jg
pop
test
dec
cmpl
mov
xchg
pushf
pop
push
stos
cmp
dec
mov
mov
mov
jo
mov
sti
out
outsb
mov
pop
or
les
mov
leave
inc
inc
arpl
daa
xor
ds
jl
add
jg
fldcw
add
nop
or
inc
add
cmc
out
loope
and
jno
gs
pop
insl
push
or
fcoml
fwait
jnp
fcoms
inc
xchg
mov
adc
xchg
repnz
jae
jnp
stos
adc
test
push
xchg
cmp
leave
cmp
and
loopne
loop
pushf
les
add
sbbb
mov
xchg
or
int3
mov
rorb
clc
add
cmp
sub
rdseed
adc
sbb
ss
inc
or
pusha
aaa
sbb
divb
imul
test
mov
es
jecxz
jb
mov
mov
sti
jge
inc
insl
jne
in
xchg
mov
xchg
pop
mov
push
mov
adcl
xchg
jo
sahf
hlt
mov
mov
mov
imul
ret
inc
add
push
enter
notl
sbbb
or
lret
das
negb
add
mov
or
mov
or
cmp
das
sti
xor
jb
pop
test
mov
mov
jl
push
stos
imul
lea
stos
jecxz
push
rclb
sbb
add
nop
jb
and
adc
insl
jno
lahf
mov
enter
popf
inc
rcll
push
leave
add
push
cmp
sbb
cmp
pop
lea
cld
add
addr16
pshufw
ja
or
sbb
ja
add
mov
sub
push
test
hlt
and
dec
jne
mov
pushf
inc
call
or
xchg
mov
call
and
mov
inc
and
mov
pop
lea
mov
xchg
test
mov
out
push
mov
and
xor
jp
repnz
stc
and
dec
mov
and
or
setnp
cmpb
cmp
push
scas
js
adcb
dec
add
outsb
lahf
push
bound
cmc
negb
iret
into
mov
leave
push
in
sar
lret
scas
les
lds
sub
or
test
xchg
mov
push
repnz
test
repnz
inc
decb
xchg
push
jbe
jb
shr
push
movb
or
fcomp
push
xchg
outsb
sub
pop
cwtl
stos
pop
pop
pop
rol
mov
push
pop
test
imul
in
cmc
sub
add
pop
rolb
lock
mov
andb
std
scas
test
mov
aas
add
fs
aad
data16
rolb
repnz
inc
ret
movsb
shrl
inc
mov
addl
loop
xchg
inc
loopne
orl
incl
repnz
enter
jno
xlat
xchg
test
pop
pusha
mov
fldcw
mov
movsb
inc
dec
out
xchg
sahf
mov
out
jp
data16
std
xlat
mov
test
test
test
or
xor
rolb
add
test
dec
movsl
fidivs
mov
push
cmp
das
test
cmc
int3
inc
mov
jg
es
jmp
test
jnp
ds
cmpsb
jecxz
jp
ret
jp
xchg
mov
mov
orb
repz
aam
pop
es
mov
mov
sahf
pop
and
xchg
xchg
dec
inc
sti
sub
addr16
dec
inc
mov
xchg
and
lods
mov
or
fst
enter
pop
repz
jg
xchg
nop
nopl
jecxz
xchg
enter
rcl
add
cmpsl
shrb
mov
rclb
fmuls
es
loopne
mov
scas
push
xchg
insb
xchg
pop
rorb
or
aad
add
or
cld
xchg
mov
into
bound
jp
sti
orb
inc
test
adc
xor
scas
mov
or
shlb
ds
hlt
int
sahf
or
enter
movsl
aas
and
add
leave
sbb
xchg
adc
loopne
ss
push
lret
pop
movsl
pop
mov
pop
iret
out
lret
jno
sbb
pop
iret
xchg
mov
inc
dec
scas
dec
shl
pushf
adc
add
adc
sbb
push
mov
cmp
fbstp
stos
lahf
add
bound
cld
sbb
cli
push
xor
adc
clc
add
dec
mov
push
rcll
imul
push
daa
mov
sub
add
popa
adc
cmpsb
inc
inc
adc
ret
leave
roll
xchg
ss
inc
sahf
adc
mov
clc
jnp
adc
cmp
push
cmp
adc
inc
out
pop
loop
ss
push
jb
sub
mov
pusha
cltd
mov
push
pop
mov
add
test
repz
jne
jmp
jp
nop
sbb
inc
into
adc
mov
jg
call
lds
bound
sbb
and
jmp
xchg
pusha
xchg
js
fs
lahf
cltd
adc
loop
mov
and
push
pop
xchg
outsb
cmpsb
cmp
push
adc
lret
addb
test
in
test
scas
inc
or
test
test
lods
mov
mov
cmp
std
xchg
xor
sub
fs
test
mov
sahf
aad
lidtl
inc
jl
lahf
fsubs
pop
mov
and
test
push
sub
lock
xchg
inc
xchg
fldl
lahf
cltd
ret
sbb
jbe
movsb
pop
das
stos
add
xchg
xchg
mov
mov
xchg
test
jecxz
cwtl
mov
decb
mov
aad
jmp
jbe
xchg
xchg
xchg
pop
scas
add
and
or
sbb
lock
es
loop
cmp
mov
add
push
jno
out
xchg
nop
or
ret
mov
jg
movb
insb
dec
fcmovne
cld
adc
in
cld
mov
mov
loop
movsl
in
js
or
out
xchg
int
fsubrl
ja
jae
add
pop
mov
pop
leave
fwait
dec
mov
adc
pop
xchg
push
in
stos
mov
repnz
ret
pushf
mov
idiv
test
stc
jp
negl
pop
stos
out
out
xchg
insb
jb
int3
pop
inc
adc
mov
mov
mov
in
lods
inc
jne
jmp
adc
cltd
lret
add
fwait
repnz
call
xchg
cmpsl
mov
sub
xchg
jp
aas
shrl
fisttpll
mov
js
xchg
mov
xchg
mov
imul
orl
lock
jecxz
push
mov
pop
aam
gs
jecxz
fucom
lods
stos
test
ja
cmp
inc
fsub
sub
roll
and
xor
lock
mov
xchg
cltd
insb
push
movsl
and
lods
mov
loop
roll
out
and
fdivrp
call
pop
movsb
popf
pop
insb
dec
xchg
outsb
js
add
bound
sbb
imul
lahf
shl
cmpsb
sub
jle
xchg
test
pusha
ljmp
lods
ficoml
in
movsl
dec
push
iret
ret
addl
mov
inc
loop
lcall
nop
and
push
pop
jp
sub
xchg
jmp
outsl
cmp
das
and
hlt
mov
xchg
sub
cmp
push
das
sbb
insl
dec
pusha
xlat
aam
push
test
pop
xchg
or
jp
lret
adc
push
jmp
mov
mov
adc
inc
or
mov
scas
addb
sahf
adc
call
sbb
adc
xchg
leave
and
out
inc
mov
orb
xchg
imul
mov
sti
mov
sbb
add
sub
nop
or
pop
adc
bound
test
add
pop
mov
xor
xchg
stos
mov
repnz
mov
pop
sub
adc
addr16
jmp
scas
or
cmpb
nop
add
xchg
imul
or
sub
es
or
enter
jns
bound
jecxz
roll
jb
mov
sbb
and
xor
sbb
mov
inc
cmp
fldl
add
push
mov
loop
enter
xchg
jp
shll
insl
xchg
leave
popa
orb
and
pop
shlb
rclb
aad
pop
aam
mov
hlt
fisubs
push
cmp
push
test
jg
adc
and
pop
in
mov
xchg
outsl
mov
sub
push
mov
cmp
imul
mov
dec
adc
js
lfs
xchg
mov
inc
mov
dec
xor
sub
data16
rclb
jp
or
push
jle
xchg
push
xchg
aad
cmpsl
adc
xchg
ljmp
mov
rcl
lahf
je
data16
or
enter
push
jl
rolb
ss
enter
fldt
cs
pop
stos
mov
aad
adc
pop
flds
into
sti
je
pusha
ljmp
xlat
outsb
loop
pop
aam
cmc
imul
aaa
push
mov
xlat
lods
sbb
leave
xchg
mov
dec
pop
flds
xchg
adc
add
ret
testb
dec
add
jb
int3
inc
mov
push
cli
push
jnp
aam
sub
shll
pushf
sarb
or
add
or
into
aaa
or
insl
xchg
iret
loopne
push
cwtl
aam
shrl
outsb
les
inc
lock
dec
adc
sbb
mov
inc
lret
enter
mov
test
sub
enter
mov
es
iret
sub
jae
mov
mov
xchg
sbbl
or
jge
mov
mov
xor
lahf
mov
es
pop
dec
shll
cli
mov
stos
popl
lahf
and
shrl
xchg
addb
cld
out
fwait
arpl
mov
fwait
jo
sbb
imul
cmpsb
insb
sti
shlb
je
and
pusha
pop
movnti
mov
das
mov
dec
mov
rolb
dec
iret
iret
cmpsl
rolb
xchg
movsb
xor
mov
outsb
add
data16
jge
mov
jp
int3
setp
leave
and
mov
enter
jo
mov
xchg
insl
nop
js
pop
lods
mov
push
mov
fildl
sub
dec
cmc
mov
movsb
je
and
or
and
xorl
aas
movsl
and
push
push
scas
je
cmp
fs
adc
lds
jo
xor
adc
jno
xlat
addr16
andb
mov
aam
sbb
xlat
pusha
fwait
jmp
jmp
out
fsubl
pop
loop
aam
aaa
test
pop
lods
aam
sub
mov
or
jbe
adc
pop
pop
repnz
stos
stos
sti
shlb
mov
out
inc
es
jno
mov
insb
xor
subb
adc
repnz
ds
mov
enter
pusha
dec
rclb
pop
mov
or
hlt
xchg
cmp
sub
mov
xor
addl
clc
fmul
cli
pop
jns
data16
fcompl
adc
inc
je
leave
cmc
and
aas
cmp
popf
pop
lock
ss
pop
add
ljmp
icebp
loop
jbe
popfw
fbld
cli
iret
jmp
xchg
es
mov
roll
cmpsb
sbbl
ret
xor
jne
mov
cmp
sbb
filds
hlt
insl
xor
jb
dec
imulb
xor
jg
pop
cmp
dec
aad
and
aam
fxch
hlt
stos
lods
addr16
cmp
add
jecxz
hlt
cmp
mov
jg
je
xchg
mov
xchg
or
push
adc
pusha
jg
inc
or
mov
inc
insb
pop
xor
jae
iret
fldcw
xchg
push
mov
sbb
clc
xor
ja
sbb
push
insb
and
push
and
dec
popa
xchg
lds
test
pop
xor
outsb
in
or
adc
enter
nop
push
mov
mov
lods
adc
pop
stc
fcoms
test
mov
in
dec
dec
sbb
or
ja
shl
outsb
mov
insb
ret
push
repnz
lods
mov
aad
into
sub
mov
dec
mov
outsl
pop
dec
pop
mov
jp
dec
xchg
mov
push
nop
mov
cwtl
jns
mov
vphaddubq
or
sti
sub
xchg
jns
daa
cmpl
sub
xchg
xchg
negb
lods
frstor
nop
xchg
sbb
jno
pop
mov
testb
mov
sahf
sub
rolb
cmpsl
mov
cmp
enter
stos
outsb
jns
pop
or
aad
nop
push
or
sqrtps
mov
clc
pop
or
jne
pusha
xchg
ss
inc
mov
xchg
and
movsb
mov
ds
jnp
sarw
xchg
mov
test
adc
mov
xor
les
sahf
mov
push
and
outsb
repnz
mov
test
xchg
decl
xorl
mov
ret
inc
inc
pop
out
loope
xchg
mov
out
mov
mov
test
fadds
addr16
jp
incb
imul
xor
cs
stc
mov
or
cmpsl
out
adc
stos
inc
or
xchg
frstor
mov
mov
popf
out
aad
or
les
push
rcl
fstpt
icebp
nop
and
out
aas
mov
mov
add
or
insl
mov
inc
sbb
repnz
xor
das
into
into
or
imul
mov
call
repz
roll
mov
outsl
or
push
je
jmp
dec
scas
mov
lcall
mov
sti
and
xchg
xchg
clc
inc
xchg
cmp
int3
mov
imul
adc
dec
or
jecxz
stos
adc
fwait
pop
xor
sbb
mov
fdivl
mov
imul
push
js
add
or
jo
outsb
jecxz
stos
pop
gs
adc
xor
leave
push
sbb
fwait
jns
inc
pop
mov
xchg
test
add
pushf
sub
cmp
cpuid
je
iret
or
out
add
repnz
jp
adc
ja
push
push
add
jle
std
push
xchg
push
sub
les
out
je
sub
out
imull
addb
mov
ret
add
movsb
iret
test
dec
xlat
mov
loop
mov
jmp
pop
and
xor
pop
sbb
pop
adc
mov
cmpb
imul
cmp
push
mov
out
sbb
mov
mov
pop
jp
jbe
push
pop
mov
mov
xchg
or
jg
or
pop
decl
call
push
xchg
test
push
movsl
imul
sbb
cmp
cmpsl
hlt
mov
jnp
jle
jg
loop
test
xchg
mov
enter
xor
mov
test
test
test
repnz
in
mov
push
test
js
orb
xchg
mov
iret
fwait
xchg
or
into
and
jo
push
scas
adc
mov
out
in
out
gs
imul
je
dec
or
or
mov
add
xchg
stc
xchg
imul
cmp
add
jmp
push
adc
repnz
inc
mov
or
popa
mov
shlb
shlb
jl
sub
movsl
repnz
mov
shrb
mov
dec
lods
frstor
movsb
or
stos
ret
mov
push
clc
add
jl
jns
xor
adc
push
data16
stos
rorl
out
test
xchg
xchg
leavew
cwtl
xor
sbb
lds
jnp
mov
je
xor
fildl
shll
std
and
push
jo
daa
xchg
popa
cmp
mov
sub
mov
lahf
sub
jae
mov
mov
lock
xchg
adc
outsb
inc
mov
jne
int3
cmc
xchg
adc
sub
bound
lahf
pusha
icebp
aaa
and
mov
fcmovnbe
test
mov
pop
aaa
popf
test
loopne
add
and
lret
leave
push
call
repnz
pop
mov
or
insb
cwtl
jge
bound
idiv
xchg
call
data16
push
outsb
fs
xchg
std
pusha
mov
cmpb
jp
cmp
stc
dec
subl
inc
in
mov
stos
lds
andl
sahf
cmpsb
and
aas
call
dec
cli
stos
scas
nop
push
mov
mov
jae
aaa
xchg
push
addr16
xor
cmpsb
or
cmp
mov
xor
xchg
xor
lock
cmpsb
or
adc
xchg
into
mov
imul
in
mov
xor
jl
push
inc
jmp
nop
shrb
gs
or
lods
cmpsl
lods
aam
jnp
pop
jge
adc
cmp
adc
popa
sub
sub
fnstcw
fwait
mov
inc
cmpsb
adc
mov
mov
jo
loopne
xchg
xchg
std
add
icebp
mov
push
pop
ret
and
outsl
cltd
test
sar
les
ss
xchg
lcall
out
sub
jp
dec
mov
ds
lret
out
mov
or
arpl
fimuls
fnstenv
scas
rorl
adc
outsb
leave
in
xchg
dec
xor
fimull
adcb
ret
mov
sub
int
push
and
xor
test
pop
lret
and
iret
or
or
addr16
mov
test
jl
pop
insb
mov
inc
or
stos
inc
call
mov
mov
mov
jle
dec
xor
inc
lea
repz
ja
addb
lcall
imul
jb
gs
sub
cwtl
mov
mov
sahf
lods
cmpb
sti
or
adc
shlb
mov
into
iret
jl
lock
fbld
in
int
xor
fdivl
adc
addr16
in
mov
xchg
ds
lds
sub
imul
mov
cmp
mov
cmp
incb
cmp
or
data16
mov
xor
sahf
xchg
cmpb
pop
aad
add
out
add
repnz
jmp
xorl
jmp
mov
xchg
mov
and
addb
loope
sahf
push
adc
bound
push
mov
out
mov
dec
in
int3
sub
mov
adc
out
xlat
or
mov
call
mov
jg
stos
or
test
mov
xchg
stos
inc
les
jo
lcall
adc
scas
mov
lret
and
roll
lret
and
adc
or
lods
sub
cmp
mov
jns
pop
loopne
mov
mov
push
addl
addr16
ds
repz
in
xchg
or
scas
mov
lahf
lcall
lahf
mov
mov
mov
ljmp
rol
mov
mov
xchg
mov
mov
push
lea
mov
test
dec
xlat
lods
push
jno
xor
cltd
adc
aad
adc
mov
ret
repz
add
mov
or
insb
pop
decb
push
loop
shrb
mov
fistpl
pop
push
les
jns
test
xchg
scas
adc
mov
mov
push
into
inc
or
clc
aas
inc
movsl
mov
push
pop
into
out
push
pop
add
mov
jg
and
js
adc
push
repz
lahf
jmp
sahf
lahf
fstps
adc
push
jp
test
mov
xrelease
lahf
or
iret
push
jmp
mov
sub
or
jg
or
adcb
sub
test
les
cltd
xchg
imul
rorb
xchg
shrl
enter
nop
imul
pop
push
repz
mov
jnp
lock
inc
std
js
std
mov
or
jmp
int3
aad
inc
mov
push
jae
cmp
sub
xor
test
inc
jnp
sbb
cmc
jecxz
xor
decb
aad
xchg
outsb
repnz
xor
mov
leave
mov
add
xchg
cmpsl
ror
xor
xor
je
mov
je
adcb
fst
cmp
fistps
mov
xchg
pushl
cld
xchg
mov
faddl
adcl
mov
or
mov
sahf
inc
pop
xrelease
push
mov
lcall
pop
add
cld
mov
ficomps
into
inc
pop
adc
cmp
cld
push
xchg
jo
jno
xchg
testl
aad
pop
cli
xorb
fdivrl
mov
aam
sub
sub
push
imull
cld
bound
mov
cld
mov
into
cmp
insb
test
xchg
mov
das
fs
fiaddl
add
mov
sub
repz
test
stos
ret
mov
push
mov
mov
loop
xchg
push
enter
ss
sahf
movsl
mov
mov
cld
rcrl
lods
cmpsl
adc
cmp
xor
xchg
jecxz
sbb
add
in
mov
shll
data16
mov
mov
repnz
ret
pop
cld
imul
call
mov
imul
push
add
mov
dec
and
sahf
push
mov
xchg
insb
mov
mov
mov
retw
add
mov
and
mov
sbb
lock
mov
or
aas
scas
sahf
test
int3
repz
xchg
out
xchg
mov
insb
xchg
mov
or
mov
push
or
out
test
popa
in
in
mov
pop
loopne
divb
aam
fwait
mov
mov
repz
sub
pop
and
or
repz
test
push
icebp
xor
xchg
pop
xchg
sbb
loope
push
push
in
jnp
ss
mov
mov
mov
jno
lea
or
lcall
jno
adc
xchg
ja
pushf
fsubr
inc
cmpb
lret
jb
xlat
sahf
adc
add
orl
dec
popa
mov
dec
sti
lahf
test
xchg
jg
ja
sub
xchg
or
jmp
in
pop
movsl
test
imul
mov
bound
data16
xchg
idivb
cmp
js
ja
cmp
mov
inc
sbb
fcoml
push
inc
mov
mov
pop
call
pop
incl
mov
mov
inc
popl
out
jnp
push
data16
xorl
lcall
ret
pop
cltd
test
jo
cmpsb
nop
lods
mov
ret
jb
pop
mov
js
mov
mov
mov
jnp
lea
cs
jecxz
sbb
jecxz
add
arpl
mov
loop
bound
pop
xchg
jb
add
cmp
std
push
loope
adc
bnd
stos
xchg
aam
push
roll
inc
mov
mov
mov
lret
imul
mov
sahf
hlt
rorl
sti
cmp
popa
jmp
and
jge
std
add
nop
es
mov
imul
fsubr
js
mov
dec
mov
mov
dec
aas
dec
lahf
mov
xchg
push
addr16
xchg
test
addr16
inc
mov
imul
ret
xor
or
repnz
adc
xchg
cli
xor
repz
mov
enter
inc
lock
js
jnp
das
push
xchg
mov
adc
jns
add
cmpsb
inc
lcall
das
add
sub
xchg
sbb
xchg
std
es
sub
movsl
movsb
sbb
bound
cmp
loopne
or
push
icebp
rcll
jp
lods
icebp
dec
ljmp
mov
in
jp
mov
xchg
pop
mov
imul
outsb
cmp
mov
xor
cmpsl
pop
repz
xor
fdiv
imul
xor
rcl
movsl
or
jb
out
lcall
fcmove
repnz
sbb
dec
xor
fnstenv
test
xor
mov
xor
mov
lahf
decl
stc
sahf
bswap
xor
push
int3
ret
adc
out
fbld
in
push
ss
inc
lods
add
push
mov
jae
cmp
test
pop
push
lret
dec
aam
iret
call
pop
add
lds
aas
mov
or
int
push
lahf
dec
arpl
or
mov
jns
js
jp
dec
cmpsl
xorb
cltd
dec
mov
scas
movsl
sub
xchg
mov
out
cmpsl
repz
sub
mov
mov
add
mov
into
imull
nop
mov
addr16
cld
inc
push
inc
iret
aad
cmpsb
jp
ja
scas
rolw
jne
fdivrl
push
xor
lods
sub
xchg
mulb
push
test
loopne
sahf
mov
popf
or
mov
mov
jge
push
incb
mov
and
jb
jg
hlt
shll
fsub
insl
mov
cmpsl
inc
fdivrs
push
movsb
inc
mov
shll
addl
jns
daa
add
or
inc
xor
daa
xor
aam
neg
mov
sahf
in
mov
js
or
adcb
lods
outsb
adc
aam
lcall
or
aam
inc
int3
and
xor
stos
js
pop
mov
push
scas
cmp
dec
sub
cmp
das
mov
jnp
hlt
ss
subl
add
inc
lahf
xchg
cs
cld
stos
inc
mov
mov
jp
pop
mov
orl
pop
addr16
mov
sub
shrl
or
sti
dec
dec
loop
or
cmc
ror
test
mov
test
movsl
loope
test
pop
sbb
xor
outsb
mov
and
jb
mov
repz
dec
push
pop
out
test
pushf
mov
shll
enter
addr16
call
and
push
cmp
sub
leave
fldt
inc
sbb
scas
xchg
pop
add
mov
out
cmpsl
mov
cltd
ret
add
mov
stos
and
mov
mov
mov
push
xchg
imull
call
xchg
inc
scas
fs
fcmovnu
xchg
je
pop
adc
std
in
push
pop
add
test
test
loop
lcall
pushf
cs
lahf
jb
push
repnz
mov
loopne
xlat
je
xchg
cmp
repnz
sahf
inc
test
decb
test
orb
inc
xchg
mov
xchg
fcoml
push
aad
andl
loop
ljmp
dec
rorl
adc
pop
stos
in
cs
and
lcall
aam
out
mov
iret
cmp
jns
fsub
fisubl
insl
orb
loop
scas
mov
cld
xchg
mov
pushf
xchg
repz
jle
mov
dec
cli
jo
loopne
rclb
push
loope
fiaddl
and
or
and
int
adc
mov
stos
xor
and
int3
and
xchg
cmp
sbb
sbb
pop
pop
push
xor
adc
stos
add
jl
lea
ljmp
jg
hlt
xchg
jne
nop
insl
lahf
mov
mov
test
xchg
mov
jnp
iret
test
or
and
pop
and
mov
cltd
mov
lcall
add
cmp
mov
lcall
mulb
xchg
or
rclb
jo
dec
push
xor
je
push
and
jbe
add
or
pushf
repz
mov
fwait
xor
stos
imul
mov
outsb
add
mov
mov
sub
lock
lret
mov
jp
stos
loop
xlat
jg
addr16
push
cmpsl
mov
inc
mov
cmpb
or
push
dec
repnz
or
jnp
xchg
mov
or
jb
mov
adc
jmp
xchg
jae
inc
sub
dec
xchg
dec
sti
push
outsb
enter
adc
cmp
les
enter
mov
nop
fimull
ret
cmp
test
inc
or
xchg
les
mov
aaa
movsl
addr16
sub
bound
xchg
mov
and
lret
jp
test
sub
and
and
je
push
pop
popa
mov
popf
or
icebp
mov
xchg
jne
add
sub
adc
or
xor
mov
sub
addr16
cmp
add
pop
movsl
mov
push
into
sahf
push
sbb
cmp
repnz
mov
hlt
out
leave
insl
add
xor
lahf
out
jbe
mov
and
into
stos
pop
and
xchg
insb
inc
enter
xchg
or
movsb
dec
add
mov
sbb
add
in
xchg
scas
in
or
outsb
xchg
addr16
cmpsl
xchg
dec
mov
repnz
xchg
test
leave
ret
lods
pop
int3
je
inc
arpl
bound
xchg
andb
sub
rcl
rolb
fnstenv
push
in
iret
inc
jbe
xchg
lret
xor
in
mov
pop
mov
pop
jae
lods
mov
out
cmpsl
roll
push
mov
xchg
push
mov
lock
xor
stos
cltd
add
fidivrs
xchg
inc
push
xchg
repz
imul
in
test
cld
dec
and
in
cwtl
ret
sub
xchg
je
adc
push
push
ja
sub
out
pushf
out
inc
jae
sbb
cmpsl
jmp
shl
cmp
mov
es
loopne
sub
in
add
sub
in
scas
mov
sti
int3
jge
nop
aad
fcompl
dec
mov
lret
adc
xchg
mov
or
insl
in
mov
mov
pop
xchg
or
mov
mov
mov
cmpb
add
jns
xchg
inc
jns
out
insl
dec
out
leave
jne
lcall
mov
pop
scas
mov
or
inc
fiaddl
cmpsb
addr16
xor
sbb
add
lock
xchg
cltd
xrelease
popf
add
xchg
fs
cmpsl
or
fidivl
xchg
decb
sahf
adc
dec
seto
ror
pop
inc
xchg
mov
into
imul
mov
pushf
fidivrl
pop
aas
pop
imul
nop
outsl
mov
adc
fimuls
add
pusha
inc
add
push
data16
jle
xchg
sub
scas
cmp
test
cld
cmpsb
repnz
mov
dec
xchg
adc
jecxz
lret
mov
jae
and
mov
and
into
cmp
jne
xchg
push
stos
pop
pop
ret
mov
cmovle
push
mov
mov
es
lock
or
leave
adcl
insl
pushf
test
or
mov
mov
sbbb
stos
orb
repnz
xchg
scas
xchg
jl
leave
mov
fistpll
cld
sahf
and
outsl
mov
cmpsl
inc
lods
ja
cltd
lods
stos
cmpsb
jbe
into
daa
shlb
push
lods
adc
addr16
adc
jmp
mov
or
insb
ficoms
inc
xlat
repnz
lcall
into
out
sub
fisubrs
lods
sbb
adcb
mov
sub
xchg
lahf
ret
sarl
into
call
sarl
sahf
dec
xchg
pop
mov
jl
mov
sahf
lods
mov
mov
shlb
mov
dec
fnstcw
and
aam
nop
and
or
lods
push
out
bound
idivl
out
out
mov
jge
jbe
adc
jecxz
cmp
dec
add
nop
data16
push
push
sub
bound
fdivr
mov
pushf
fldl
ja
dec
push
mov
lods
std
jbe
int3
pop
hlt
movsl
aas
fcoml
pop
pop
mov
dec
arpl
push
ss
ljmp
test
pop
inc
shlb
dec
push
or
mov
movsl
sub
out
sub
je
pop
bound
or
or
fidivrl
lret
mov
mov
mov
addl
cmpsb
cmp
mov
int3
mov
or
mov
arpl
push
mov
movsl
adc
cmp
call
shlb
rcl
mov
push
and
sub
repnz
popa
mov
lock
roll
sub
xor
jnp
cmp
ds
repz
or
pop
lds
test
push
lock
or
cli
mull
rclb
or
jl
ret
xor
test
pop
jp
jp
int
mov
cmc
outsl
sbb
push
jne
inc
xor
sbb
repnz
sub
std
repnz
sahf
imul
inc
mov
mov
sti
test
frstor
int
shll
cwtl
inc
cltd
inc
jne
ja
xchg
inc
out
std
sbb
sti
pushf
aaa
cmpsl
sub
xor
cmpsl
js
in
adc
inc
cmp
pop
test
sbb
xor
mov
jns
stos
icebp
cmp
add
xorl
cmpl
dec
iret
lds
push
lea
out
pop
mov
mov
cld
lret
movsl
mov
push
out
adc
and
into
out
mov
push
and
out
push
jno
xchg
xchg
aaa
lmsw
inc
notb
pusha
and
mov
push
push
enter
xchg
test
pop
test
sub
jg
push
add
bound
adc
adc
xor
orl
nop
or
inc
popa
add
dec
mov
or
or
popa
mov
inc
ret
pop
cmpsb
movsl
jbe
jmp
mov
sbb
xchg
repz
cmp
unpcklps
mov
jbe
mov
hlt
mov
jb
pop
int
mov
inc
sbbl
cmp
or
dec
mov
add
out
push
sbb
dec
ficompl
xchg
push
xchg
cld
push
pop
push
test
mov
mov
jecxz
stos
sbb
jno
and
xchg
addr16
jl
pop
repnz
mov
test
sub
cmp
mov
int3
imul
lock
pusha
inc
addr16
sub
insb
dec
inc
sbb
int3
mov
bound
push
mov
aas
cs
mov
pusha
aas
adc
cmp
in
adc
lods
lcall
pop
ja
pop
arpl
sbb
mov
xor
ret
jmp
fs
lods
dec
cmp
rorb
push
add
pushf
mov
jge
mov
mov
pop
sahf
jbe
jg
sbb
js
jns
ret
fs
test
lret
inc
iret
je
xor
or
fistl
imul
je
mov
xor
leave
sti
js
repz
mov
ret
ja
out
add
cli
leave
pop
xchg
xor
sub
aad
out
mov
xchg
into
xorl
add
xorb
and
fwait
movb
outsb
jp
sub
push
mov
addl
xchg
pop
jmp
mov
or
fdivs
subl
popa
xchg
mov
into
xor
outsb
mov
fsub
mov
test
pusha
or
sbb
sbb
mov
mov
aas
rclb
cmp
pop
aam
inc
repz
sbb
pop
pop
in
adc
mov
mov
test
ds
mov
test
rclb
ret
push
out
push
dec
arpl
sub
loop
mov
pop
xor
mov
mov
enter
jmp
sbb
lea
pusha
mov
inc
and
push
mov
pop
imul
xchg
addr16
insl
pop
sbb
inc
mov
or
mov
aad
pop
mov
stc
xlat
fists
pushl
test
adc
inc
or
jbe
dec
ja
or
sub
sbb
jge
pop
mov
cmp
sbb
out
pushl
xchg
repnz
and
test
or
mov
nop
cmp
push
repnz
sets
ret
inc
ja
popf
dec
mov
adc
adc
mov
mov
push
loopne
and
clc
cltd
xchg
sub
or
fdivr
xor
adc
mov
aad
outsl
jb
test
xor
imul
enter
mov
fwait
test
scas
leave
scas
cld
or
ret
pop
xor
arpl
lods
es
xor
fcoml
cs
push
mov
mov
mov
adc
push
xchg
cwtl
jb
ror
std
xlat
lahf
mov
sbb
xchg
jg
mov
aam
xor
add
decb
dec
push
lret
push
fdivs
outsl
sub
test
push
pop
jecxz
xchg
mov
mov
arpl
inc
int
movsb
std
dec
flds
test
shlb
push
add
pop
pop
mov
mov
pop
test
test
sub
push
adc
pop
add
xchg
aad
popa
sub
push
fwait
js
mulb
mov
divb
or
sbb
and
mov
and
adc
adc
add
dec
cmpb
xor
push
pop
ss
inc
push
pop
cmpl
push
jg
out
dec
out
ja
cltd
mov
inc
mov
aad
cmpsl
lods
mull
call
test
and
mov
cmpsl
jno
adc
adc
sub
xlat
enter
push
lds
push
cmp
jae
jae
arpl
adc
fwait
mov
nop
sbb
sahf
ss
pop
mov
inc
mov
add
xor
cmp
cld
enter
mov
call
push
jae
fsubrl
pop
jne
inc
add
movsl
fisubrs
cmpb
lds
adc
out
test
push
mov
aas
jmp
xchg
mov
rclb
cwtl
mov
ss
into
xor
add
getsec
scas
xor
xchg
ljmp
and
repz
xchg
ret
xchg
popa
jl
adc
addr16
xor
imul
fsubrs
mov
stos
cmpb
push
lods
and
mov
out
fiadds
mov
jp
xor
je
add
mov
sahf
pop
pop
inc
mov
shrb
test
cmp
imul
xor
mov
repz
loope
push
in
fnstcw
lods
or
aas
aad
movsl
jg
sub
pop
dec
and
movsl
pop
xchg
cld
cli
notb
clc
mov
imul
dec
sbb
fdivr
sub
xchg
inc
mov
mov
sbb
aam
xor
mov
insl
gs
or
xor
pop
xchg
inc
inc
pop
subb
sbb
pop
jecxz
icebp
push
xchg
aad
aam
inc
xor
das
dec
int
or
mov
popa
jb
sub
push
out
xchg
icebp
ret
stos
xchg
notb
aaa
fists
aam
push
imul
shrb
fcoml
mov
test
cltd
and
movsl
and
xchg
push
js
scas
cmpsb
bound
add
xchg
fnstcw
sub
and
push
inc
sbbl
loop
mov
popf
ret
repz
cld
imul
outsl
test
mov
add
ret
pop
mov
add
sahf
or
fidivrl
or
pop
dec
sub
adc
jae
adc
rolb
enter
andl
sub
int3
into
imul
or
aas
lret
mov
imul
mov
or
add
pop
xchg
push
cli
fists
test
dec
jle
imul
jbe
leave
sub
add
lahf
out
ljmp
imul
inc
int3
movsb
push
clc
xchg
aam
xor
aaa
sub
lods
jp
inc
xchg
test
mov
xchg
dec
cmp
pop
cmp
xor
mov
and
inc
iret
cmp
mov
es
pusha
sub
cs
adc
xor
fidivs
call
leave
pop
mov
jb
jno
mov
push
loop
cmpsl
cmp
aaa
dec
cli
xchg
orl
push
aas
mov
fnsave
test
jo
decb
lods
sub
test
mov
out
mov
mov
fdivl
push
repz
in
lock
pop
fdivrs
inc
pop
mov
add
int3
scas
les
aam
xor
add
cmp
das
scas
xor
shl
nop
subl
inc
mov
xchg
push
cli
push
mov
pop
cmpsl
mov
adc
mov
xlat
xchg
mov
and
inc
subb
int3
xor
fisttps
lahf
pop
jg
add
repnz
sbb
test
mov
pusha
jp
push
dec
leave
pop
mov
mov
leave
sbb
fwait
cmpsb
test
add
mov
fsubs
lar
mov
outsl
dec
dec
shrb
icebp
fwait
es
dec
push
mov
pop
stos
add
jbe
shrb
mov
mov
outsl
xchg
mov
mul
lea
jge
hlt
xchg
icebp
std
lea
fcmove
aaa
ficoml
push
dec
cmp
sarl
ds
mov
subl
xchg
insb
mov
inc
adc
mov
cli
movsl
imul
xchg
pushf
mov
filds
and
push
test
jns
xchg
dec
mov
enter
xchg
ja
icebp
mov
and
lcall
adc
fildll
out
lock
imul
out
and
or
mov
cwtl
aam
add
xchg
int
scas
mov
mov
or
mov
dec
jl
pop
faddl
ret
enter
repz
ret
lret
pop
test
push
adc
pop
jb
xor
ficomps
mov
push
nop
movsb
repz
shl
add
mov
cmp
test
fisubs
sahf
lea
scas
aam
data16
mov
adc
push
mov
imul
cld
xchg
ljmp
aam
jno
movsl
cmp
test
aad
pusha
sub
jbe
jecxz
add
mov
jge
cmp
sti
jns
lods
push
push
jl
imul
adc
iret
jle
inc
insb
or
js
lods
add
dec
test
repz
or
push
pusha
cs
mov
mov
xor
mov
inc
ljmp
sar
lock
jae
movsl
mov
push
fsubrl
mov
pop
mov
out
mov
scas
mov
int3
jmp
xor
mul
fadds
or
mov
loope
push
pop
adc
cmpsb
mov
push
push
xchg
push
adc
xchg
mov
mov
lret
mov
repnz
cmpsb
jae
repnz
std
inc
pop
adc
mov
jp
bound
insb
fistpl
jb
jl
mov
bound
inc
mov
adc
stos
push
sub
adc
popl
shll
lods
push
xor
aas
sbb
imul
pop
jmp
or
mov
pop
push
ret
xchg
cli
shlb
scas
pop
adc
sti
mov
out
add
adc
into
outsl
adc
popf
loopne
push
pop
ret
enter
call
xchg
xchg
xor
test
stos
jl
ret
jp
imul
and
mov
cltd
enter
scas
jle
mov
mov
sarb
adc
add
mov
add
xlat
leave
leave
int
sar
push
mov
or
xchg
jge
xchg
xchg
lret
insl
push
sub
mov
stos
mov
adc
cmp
mov
xor
sar
pop
mov
fbld
je
mov
scas
push
inc
add
xchg
xor
test
sahf
mov
xchg
inc
nop
and
or
mov
mov
orl
mov
xchg
mov
addb
orl
pop
int3
lret
sar
ret
fidivs
dec
test
sub
test
daa
mov
mov
aam
daa
xor
cmp
xchg
inc
sub
cli
push
sbb
bound
inc
add
lahf
inc
pop
jl
aad
cmp
cs
imul
dec
je
dec
push
jecxz
mov
in
repnz
mov
sti
je
lea
mov
enter
mov
add
popa
pushf
inc
cmpsb
aad
cli
inc
ds
mov
iret
outsl
sbb
lcall
cmp
sarb
jae
sub
push
mov
cltd
fnsave
mov
cmp
test
mov
das
mov
enter
sbb
xchg
mov
and
mov
adc
shrl
shl
sbb
adc
ss
push
imul
cmpsb
stos
ret
into
repz
aas
mov
and
lea
std
lret
dec
xchg
test
xchg
test
jo
adc
inc
loopne
adc
push
pop
lret
xchg
fstps
lret
xlat
test
inc
jg
imul
aam
add
lret
lods
outsl
aaa
jmp
cmp
loop
lret
cmp
add
mov
aas
push
xor
loop
push
inc
leave
pop
jmp
jnp
mov
aad
rolb
enter
ret
pop
mov
test
fidivrs
int3
fs
dec
aaa
shrl
inc
and
push
xchg
xor
clc
or
repz
mov
shll
or
sbb
cmc
aam
mov
lea
adc
cmpsb
lret
jo
fcomps
cld
xor
or
iret
mov
mov
fisubl
xlat
lods
push
adc
cmc
shrl
dec
mov
fistpll
jl
imul
rorb
pushf
adc
or
xchg
mov
les
ficomps
popf
inc
mov
and
push
mov
or
and
ja
cmp
adc
jae
packssdw
push
xchg
and
adc
sbb
into
xchg
adc
inc
xchg
test
ja
mov
cltd
push
lcall
fmulp
xchg
ret
inc
xor
mov
loope
xchg
jo
dec
aam
repz
xchg
mov
rclb
scas
aad
lods
pop
and
jbe
enter
fcoms
jp
sub
outsl
mov
xchg
bound
adc
icebp
xchg
aam
sub
mov
pop
pop
js
jmp
push
mov
adcb
inc
or
push
cmpsl
pop
test
xchg
movsl
push
pop
popf
xor
sahf
adc
mov
nop
test
sahf
push
xchg
jns
call
out
data16
je
pushf
dec
mov
push
xchg
cmp
shl
pop
ret
mov
jnp
stc
cmp
sub
xchg
mov
mov
xchg
pushf
add
orl
jge
dec
push
sub
sub
push
mov
sti
outsl
scas
jg
adc
testb
jl
int3
or
adc
ror
jp
setno
in
pop
dec
lods
imul
stos
fcom
cmovp
call
jae
fs
sub
jnp
adcl
xchg
out
inc
call
aad
dec
adc
mov
fucomip
and
into
shl
jp
mov
cmp
test
sbb
or
popf
jbe
popa
mov
cmc
jmp
hlt
mov
icebp
cmpl
pop
adc
fs
adc
pop
je
and
cmpsb
lcall
outsl
movsl
in
push
loopne
data16
pop
sbb
mov
test
pushf
je
roll
mov
stos
inc
cmp
nop
inc
and
jg
pop
xchg
mov
push
das
mov
jmp
mov
pop
stos
daa
outsl
jne
mov
test
pop
sub
mov
mov
ljmp
lock
movsb
aam
inc
call
cmpsb
push
test
adc
pop
mov
out
cli
mov
movsl
jl
int3
push
dec
mov
xchg
mov
cmp
sub
stos
mov
xchg
sub
xlat
xchg
mov
fcmovbe
call
jo
pop
popf
and
lret
push
jo
fdivp
fptan
lods
cmp
icebp
pop
ss
ret
data16
movsb
imul
mov
fmuls
xchg
push
and
push
dec
sarl
in
lea
push
or
push
outsb
adc
sbb
fistl
stos
mov
or
push
loopne
repnz
inc
movsb
mov
jl
stc
in
repnz
xchg
repz
pop
nop
add
pop
xlat
pop
in
xor
push
inc
mov
repnz
or
mov
in
pop
add
xor
sbb
aas
mov
jge
or
iret
cmpsl
les
repnz
jge
sub
or
inc
cmp
addr16
xor
lret
mov
es
ja
xchg
repnz
dec
add
mov
test
repnz
jl
popl
dec
loop
sbbb
push
jl
jl
test
sub
fstps
int
dec
jae
cmp
push
inc
lock
and
push
xor
fnsave
psubusw
or
dec
les
out
lock
test
sub
imul
scas
mov
or
movsb
xacquire
xchg
push
aaa
push
sub
xor
push
rolb
xor
mov
mov
cmp
in
popl
ret
sbbl
test
jp
loope
or
push
call
sbbl
or
in
in
into
mov
mov
xchg
rclb
adc
movsl
into
mov
push
imul
lcall
cli
mov
fsubrs
test
fwait
fcmovnu
mov
and
xchg
aam
mov
adc
js
movsl
xchg
mov
mov
cmp
mov
aam
push
sub
dec
adc
cmp
lahf
hlt
jmp
mov
rcr
mov
jge
cs
mov
out
rorl
add
inc
nop
push
add
xchg
dec
fnsave
mov
or
int3
int3
lcall
push
jg
cltd
shll
inc
xor
mov
outsb
adc
int3
mov
in
or
lods
cmp
mov
and
jns
shlb
mov
adc
cld
lcall
jp
jecxz
je
xor
jne
arpl
mov
mov
mov
test
xchg
mov
jg
sub
cmpsl
enter
test
fldcw
pop
jb
data16
add
je
push
mov
icebp
repz
jg
stos
ds
lds
xlat
das
inc
mov
jmp
mov
mov
rclb
xchg
js
leave
or
repnz
xchg
dec
sti
lods
pop
stos
pop
mov
mov
jbe
xchg
add
mov
test
in
je
enter
xchg
or
mov
sbb
lret
jle
cmp
or
cmpsb
sub
les
dec
sub
stos
addr16
push
iret
div
in
mov
loop
lret
scas
or
mov
test
mov
addr16
pusha
adc
mov
std
nop
stos
out
sbb
adc
arpl
pop
mov
and
sbbb
mov
mov
scas
imul
lock
rorl
sub
adc
int3
jle
ret
mov
testb
pushf
xor
inc
add
mov
test
hlt
icebp
xor
stc
js
daa
mov
leave
jnp
rcrb
mov
imul
jbe
leave
andl
pusha
out
mov
shrb
jb
jge
jp
subb
addr16
push
int
jne
jns
lea
rcr
mov
enter
dec
aad
mov
and
xchg
into
repnz
and
push
sub
jp
les
dec
lahf
test
push
jge
outsb
jns
dec
mov
jl
rcrl
push
lret
jg
mov
inc
fwait
mov
test
jo
inc
scas
mov
rclb
xchg
mov
pushf
cmpsb
pop
xchg
push
sarb
jo
inc
rcrl
pop
in
mov
aas
add
lods
orb
adc
iret
loopne
pop
loopne
enter
inc
frstor
mov
mov
test
aad
fstps
fwait
cltd
cmp
call
subl
loope
cmp
mov
lahf
xchg
stos
stc
inc
jl
mov
sar
pop
iret
inc
popa
jmp
iret
dec
jbe
stc
sub
xchg
sub
jg
xchg
dec
mov
addb
dec
test
inc
outsb
iret
stos
enter
dec
out
idivl
xchg
jmp
mov
and
push
mov
or
add
pop
and
ja
rcrb
jp
xorb
rolb
ss
pop
out
or
jb
popf
pop
cmpsb
cld
push
jcxz
ss
add
test
lret
mov
xchg
sahf
clc
orb
repnz
testl
dec
pop
loopne
int3
out
cmp
mov
adc
cld
mov
not
jecxz
mov
push
sub
mov
mov
lret
xlat
fsts
mov
mov
fwait
mov
add
xchg
and
shlb
ds
aad
aas
insl
ffreep
inc
pop
adc
xchg
cmc
dec
push
mov
les
inc
or
cld
pushf
or
idivb
and
adc
scas
into
iret
fdivrs
ja
daa
enter
int
arpl
scas
int
daa
ja
mov
outsb
push
movsb
mov
imul
stos
iret
data16
or
push
cmc
shlb
pop
sub
mov
and
repz
cmpsb
je
xchg
into
mov
popl
and
mov
inc
push
jno
test
icebp
ljmp
orl
and
cltd
ja
and
ficomps
push
je
insl
mov
fisubrs
dec
mov
dec
xor
mov
ja
out
mulb
daa
movsl
ffree
gs
shlb
push
stos
clc
into
sub
lea
inc
jge
pop
leave
fs
mov
push
mov
imul
dec
push
mov
dec
int
mov
popa
imul
cld
cltd
dec
mov
movsb
jp
xor
iret
jmp
cmpsb
jae
enter
jne
push
xchg
sti
cmpsb
hlt
aam
movsb
mov
mov
outsb
imul
jg
imul
inc
sub
sub
mov
lods
stos
jmp
xchg
xchg
and
or
repz
movsl
into
fs
inc
nop
aad
fwait
pop
cld
adc
cmp
adc
cld
je
sahf
push
dec
mov
les
cli
addl
adc
aam
pop
sbb
mov
add
leave
push
jecxz
leave
sub
ljmp
je
nop
sti
sahf
shlb
xchg
les
xchg
pop
push
dec
fsubrl
subb
and
stos
imul
mov
lods
call
sbb
lret
mov
cmpsb
or
aas
mov
aam
test
add
insl
pop
add
data16
push
mov
lret
cmp
aam
or
push
fimuls
push
inc
mov
sub
stos
lods
mov
xchg
adc
jns
cld
xor
out
loopne
jecxz
jb
sbb
or
aad
outsl
into
and
sti
movsl
pop
xor
lods
jnp
cmp
xchg
aaa
sub
push
into
mov
xor
clc
je
inc
inc
xchg
es
sbb
mov
cwtl
je
adc
test
push
cltd
xor
mov
pop
inc
scas
fs
dec
sub
arpl
xor
or
jne
inc
mov
mov
dec
sub
mov
mov
in
lret
xorl
sbb
xlat
repz
leave
cmp
cld
xchg
add
ret
mov
mov
mov
cmp
mov
add
sub
xorb
dec
lods
pop
sbb
lea
loopne
inc
xchg
outsb
cmp
nop
imul
mov
movb
int
xchg
mov
fsts
push
jns
push
cs
pop
fcomp
cmp
xor
cmp
ja
mov
mov
and
push
mov
imul
mov
add
xchg
aas
insb
cmpb
jg
cmpsb
clc
pop
push
pop
inc
dec
or
xchg
dec
push
aad
int
xchg
ss
cwtl
adc
pusha
js
ror
sub
clc
mov
repz
and
xchg
call
mov
lds
inc
dec
lock
push
stos
leave
or
sub
orb
out
or
inc
loop
pop
mov
xchg
into
sbb
aad
jno
sti
xchg
add
test
cmp
jp
cs
push
inc
push
lods
jno
cmpsb
inc
sbb
mov
xchg
outsl
xor
xchg
enter
fldt
sub
inc
push
mov
sti
mov
sti
xchg
lock
push
or
nop
cmp
pop
xchg
xorl
int3
testl
dec
shr
dec
out
sub
mov
xchg
mov
aam
bound
add
js
sbb
push
daa
mov
cmp
popa
mov
push
leave
cmp
cltd
std
ja
add
jp
fcmovu
mov
mov
xchg
inc
mov
fldenv
sbb
adc
lahf
mov
jb
test
or
adc
mov
push
push
mov
xchg
mov
jp
mov
mov
inc
jne
mov
divb
mov
lods
int
inc
imul
mov
jns
push
cwtl
bswap
or
mov
lahf
mov
lahf
or
cmpl
xchg
fdivl
push
cmovle
add
xchg
jae
jb
xor
sahf
xor
jmp
push
js
hlt
out
jmp
sar
rolb
inc
movsb
add
add
mov
enter
ret
xchg
imul
lret
sahf
adc
cmp
movsb
jb
movsb
stos
aad
test
inc
pusha
dec
dec
inc
into
cmp
imul
add
sbb
and
push
fistl
daa
imul
push
in
jp
arpl
jbe
jl
das
imul
gs
fcmovu
pop
inc
add
fisubl
push
xor
stos
movsb
mov
xchg
in
adc
arpl
mov
test
mov
push
mov
scas
jge
inc
cwtl
inc
pop
das
shll
dec
fdivl
xchg
aas
pusha
jle
rcrl
xchg
lret
int3
or
scas
lods
divb
orb
or
lahf
iret
push
jo
xor
and
mov
dec
sbb
xor
aam
fs
leave
jo
flds
fld
pop
stc
stos
leave
inc
or
test
inc
and
jae
ss
adc
push
jg
repnz
mov
inc
cld
cmc
sbb
sub
xor
push
mov
shl
push
push
or
xchg
sbb
arpl
push
aas
xchg
nop
add
or
and
ss
lcall
cmp
or
pop
aam
add
bound
out
inc
loope
mov
mov
shr
cmp
xchg
mov
incl
ret
int
jns
xchg
lret
adc
push
cmp
dec
add
mov
int3
loop
dec
jmp
fsubrl
les
ret
jb
jnp
or
and
add
xlat
push
xchg
cmpsl
dec
int3
insl
lahf
fsub
imul
inc
xor
fldl
incb
cmp
into
mov
mov
xor
mov
mov
loop
xchg
mov
mov
movsl
sbb
mov
scas
incb
pushf
out
jbe
out
sarb
iret
xlat
mov
cmp
ds
into
leave
in
inc
repnz
fnsave
mov
test
mov
xor
jb
jg
pop
sahf
dec
lcall
clc
jecxz
lcall
cmp
jl
sbbl
xchg
xchg
jae
mov
and
push
mov
imul
test
or
dec
wrmsr
jle
scas
arpl
dec
cmp
jb
lock
out
xchg
nop
lahf
aam
cmp
sbb
insl
cmc
fxch
push
rcrb
outsb
repnz
jb
js
stos
xchg
scas
adc
int
data16
loopne
je
inc
mov
or
repz
movb
push
sub
cmc
sub
pop
iret
jne
or
jns
lods
cmp
es
test
sbbl
mov
imul
mov
and
mov
icebp
mov
into
pushf
cmp
inc
icebp
movsb
sub
in
stc
test
lods
dec
lahf
int3
jg
outsl
mov
add
push
push
js
movsb
adc
sti
adc
cmp
sbb
test
push
js
mov
idivb
js
lock
js
pop
rolb
lret
and
push
inc
stos
mov
call
insb
out
or
xchg
inc
pop
dec
adcl
jl
pop
mov
or
lock
movb
int
jl
pop
sbbb
sbb
rcr
push
and
sbb
imul
sti
out
pop
xchg
or
and
popf
cmc
cmpsb
cs
in
inc
jbe
je,pn
rolb
add
imul
push
jbe
call
js
repnz
cmp
xchg
xchg
dec
mov
inc
pop
imul
mov
test
std
adc
mov
pop
pop
jle
std
add
icebp
test
mov
inc
iret
mov
data16
popa
ret
or
mov
cmp
jne
into
fsubrl
xchg
xchg
mov
ffree
lea
iret
jb
jno
leave
inc
or
xor
mov
hlt
ds
popf
lods
ret
mov
int3
lret
dec
fidivs
icebp
or
test
jne
pop
adc
lret
mov
lock
lods
push
adc
and
js
stos
mov
jne
mov
mov
ret
ret
shll
rorl
cld
xchg
ret
push
jl
scas
sahf
cmp
adc
adc
push
push
jbe
out
out
mov
repnz
mov
addb
jb
mov
adc
adc
movsl
cltd
sbb
repz
mov
pop
lods
add
mov
mov
aad
aas
int3
cmp
bnd
mov
movsb
sub
in
fildl
push
dec
mov
pop
sbb
jbe
out
inc
mov
dec
cli
lcall
jge
mov
xchg
rcll
mov
mov
out
popa
nop
sub
cld
rorb
idivb
pop
adc
pop
outsb
adcb
out
xlat
daa
fldenv
test
repnz
in
les
adc
aam
mov
repnz
es
movsl
sbb
push
sahf
arpl
fdivrl
hlt
lret
mov
cmp
mov
cmp
cmp
and
test
add
inc
sub
icebp
sti
sbb
push
mov
adc
lahf
lcall
inc
adc
xor
test
fcomip
xchg
mov
js
insl
xchg
push
xchg
jge
test
xchg
sahf
mov
lods
out
outsb
fbld
divb
lret
dec
fsts
cs
movsb
adc
dec
std
loop
mov
stos
add
ds
sahf
xchg
push
test
push
and
pop
cmp
xchg
mov
mov
xor
inc
sub
push
add
mov
mov
dec
mov
inc
cmp
add
inc
imul
insb
mov
stc
ret
jne
push
in
cmp
sarl
lahf
xchg
arpl
mov
or
push
cmpsb
mov
sub
adc
enter
test
ficoml
mov
repz
sub
pop
movd
sub
cwtl
aam
js
sub
xor
in
les
jmp
inc
mov
je
setns
adc
sbb
into
pop
cmpl
stos
jo
insb
sbb
pusha
xor
inc
scas
pushw
jbe
ret
int3
iret
pop
inc
lea
ja
fcmovnbe
sahf
sbb
inc
cmp
mov
out
inc
hlt
repnz
inc
ss
out
and
xor
movsl
stos
into
and
fldl
and
add
mov
out
jb
pop
fdivrs
sbb
sahf
or
stos
dec
add
stos
roll
sub
inc
or
dec
sti
adc
pusha
out
add
mov
or
cmp
inc
xchg
leave
adc
mov
mov
xchg
and
jl
inc
nop
inc
mov
mov
lods
push
in
iret
fwait
mov
movsl
mov
sar
notl
test
popa
fsubp
into
bound
test
push
jge
data16
fdivs
mov
mov
mov
fdivrs
negl
or
repz
mov
daa
dec
push
mov
incl
lret
mov
jbe
sbb
enter
insb
int3
sbb
aam
mov
js
pop
xchg
ffree
push
xchg
mov
test
cmp
adc
jl
arpl
sub
movsl
sbb
lock
lea
xchg
mov
pop
shrb
push
mov
leave
jne
dec
js
js
adc
jmp
jbe
repnz
add
pop
mov
movsl
shlb
pop
sarb
out
cmp
mov
shl
enter
push
outsb
nop
lea
push
lods
icebp
lcall
adc
idivb
call
idiv
or
mov
aad
add
jb
cmpsl
scas
cld
mov
xchg
mov
roll
sti
loop
sub
ret
inc
shl
inc
mov
cmp
mov
jbe
xor
repz
sets
cld
push
aam
add
push
out
or
in
lock
inc
test
enter
sbb
cmp
pop
iret
iret
pusha
out
mov
aaa
bound
loop
dec
inc
add
xchg
rcl
cltd
addr16
loope
adc
shrl
das
cmp
nop
mov
jge
dec
lds
mov
push
pop
dec
cld
cwtl
pop
pop
mov
mov
jne
fisttps
mov
mov
dec
test
push
cmpsb
mov
sub
mov
add
jae
scas
ja
xchg
ficoms
shrb
ret
jns
dec
cmpsl
pop
xor
mov
pop
test
push
xor
add
ret
insb
and
mov
lea
or
scas
aas
xlat
xchg
mov
xor
sarb
orb
jg
lcall
push
push
push
iret
sar
mov
fsubrs
cmpsb
cld
mov
mov
mov
or
ficomps
or
std
arpl
push
jg
adc
imul
inc
into
mov
adc
xchg
push
int3
sub
adcb
and
sahf
sbb
mov
xchg
mov
mov
cmp
cmpb
adc
test
xor
fsubr
imul
push
xchg
sahf
add
int3
xchg
ds
out
or
into
test
mov
sarb
aam
scas
iret
int3
cmp
or
and
sahf
mov
pop
jp
shll
roll
pop
das
xor
push
sbb
into
cmp
sahf
sarl
add
or
aaa
jns
mov
pop
das
outsb
stc
loop
jg
leave
inc
in
repz
add
data16
xchg
xor
mov
mov
and
shlb
filds
sub
mov
lds
pop
idiv
jne
popf
int
scas
test
lods
test
nop
je
scas
sbb
xchg
adc
leave
imul
mov
inc
mov
clc
repnz
ret
jb
xchg
popa
cld
insb
enter
cmp
loopne
and
test
test
sahf
fmull
mov
push
out
lret
pop
xchg
sbb
ret
or
sarl
inc
test
test
mov
std
jae
fildll
clc
xchg
lret
leave
cmp
jecxz
cmp
jne
aas
lret
mov
and
mov
fucomi
nop
and
cli
fsubrs
lret
es
lods
ret
xchg
mov
flds
adc
arpl
mov
repz
xor
in
outsl
mov
in
inc
movsl
imul
repnz
ss
aas
mov
mov
lds
push
jne
mov
movsl
pop
insb
rolb
test
arpl
dec
mov
sahf
sbbl
add
cmp
and
sub
push
adc
pushf
mov
xacquire
lds
rcl
int3
outsb
add
ret
lods
add
pop
xchg
xchg
jp
sahf
mov
lcall
mov
stc
pop
push
out
or
std
push
cmpsb
insl
mov
lods
fnstcw
nop
mov
out
mov
mov
mov
sbb
ja
insb
ret
mov
pop
addr16
sarb
push
cmp
stos
sbb
andl
pop
push
xor
mov
pop
scas
jbe
fwait
loope
int3
jo
lret
shr
xchg
testb
dec
cli
inc
mov
mov
mov
inc
stos
cmpsl
sbbb
and
inc
mov
ret
mov
add
adc
faddl
xchg
xor
lods
jecxz
fimull
and
cmpsl
shll
xchg
imul
cmp
add
test
mov
inc
pop
xchg
scas
cmp
je
inc
imul
sbb
enter
jl
lcall
xchg
shlb
sub
add
jbe
jge,pn
subb
sbb
std
mov
pop
call
xchg
mov
inc
xchg
mov
clc
repz
xor
insb
adcb
imul
nop
cmpsl
sub
xchg
sarb
jno
xchg
shlb
jns
cli
lock
inc
jmp
lahf
loop
addr16
xchg
iret
xchg
xchg
lret
das
inc
mov
scas
cld
mov
xor
cmp
adc
cmp
movl
mov
sub
sbb
mov
dec
mov
pop
lds
rolb
ja
or
repnz
adc
push
cltd
sti
and
or
push
adc
sub
inc
pop
adc
rcrb
ja
xchg
or
sti
hlt
mov
push
divl
jecxz
and
fildll
push
and
nop
sub
xor
dec
movsb
mov
sub
and
xor
add
cmpsl
ss
mov
adc
fisubrl
mov
mov
nop
mov
mov
repz
int3
inc
stos
mov
push
ret
push
leave
sub
mov
or
bound
sarl
fucomp
sub
mov
rolb
test
pop
xor
cmp
jo
dec
aad
push
into
add
rcrl
fs
cmp
sar
subl
or
push
add
sahf
nop
call
cmp
or
decb
test
or
inc
cli
cmpb
into
push
test
xchg
xor
in
adcb
lods
or
stos
cmpsb
jge
andl
xchg
loop
div
mov
fimull
into
or
int
imul
test
mov
or
push
cmc
bound
cmp
adc
int
leave
xorb
jbe
sub
pop
xlat
mov
mov
mov
ljmp
push
mov
sarb
stc
and
test
inc
iret
rcrb
jo
mov
cmpsl
xchg
dec
inc
pushf
aaa
cmp
bound
mov
cmpsl
cmp
test
xlat
imul
inc
insb
push
xor
sbb
push
mov
sbb
adcb
bound
nop
inc
sub
lea
xchg
js
mov
ret
insb
bound
push
rsqrtps
xchg
adc
je
mov
jo
lods
mov
loopne
xor
push
jo
mov
mov
stos
cltd
mov
movsl
fs
jno
gs
jns
fdivrl
lret
loop
pop
aaa
sub
cltd
dec
push
adc
mov
seto
sbb
sub
test
test
pop
jg
pop
int3
ret
mov
mov
fadd
xor
or
dec
loopne
movsb
test
and
mov
mov
call
mov
jl
mov
adc
imul
push
ss
push
data16
dec
inc
dec
or
imul
mov
imul
in
mov
xor
in
xchg
xchg
adc
push
mov
xchg
fwait
sbb
sbb
lods
xor
outsl
or
repz
cld
mov
sarb
and
mov
jbe
cmp
xor
add
push
ds
aaa
xor
fimull
sub
xchg
jl
sbb
out
das
cmpsl
sbb
lea
inc
fcmovbe
sub
repz
dec
inc
xchg
mov
mov
mov
dec
cmp
and
into
pop
lret
dec
ds
adc
and
cld
inc
lock
repz
arpl
add
jge
xchg
inc
jno
mov
mov
cmpb
jecxz
or
add
jae
dec
lods
push
mov
stc
xchg
lods
shrb
inc
addl
mov
pusha
cmc
clc
lcall
mov
sub
mov
push
mov
xchg
shrl
jo
jbe
ret
cld
mov
jge
or
lea
fldenv
pop
xchg
enter
fistps
mov
mov
loop
test
push
daa
lcall
test
out
mov
insb
pushf
sbb
in
pop
pushf
out
sub
pop
es
jne
clc
pop
or
sub
mov
int3
mov
iret
push
xchg
data16
aam
cs
mov
cmp
cld
push
adc
movsb
fdivs
pushf
or
das
mov
jnp
aam
ds
cmp
loopne
jge
and
jo
sbb
dec
leave
xchg
in
mov
fbstp
mov
repz
punpcklwd
xlat
xchg
jno
mov
sbbl
or
mov
psrld
xlat
lock
xor
xlat
sbb
pop
sub
pop
test
push
call
data16
sti
mov
mov
inc
jge
dec
jl
cmpsl
or
or
mov
mov
int3
clc
adc
aam
cmp
add
or
inc
xor
movsl
jp
mov
roll
lds
inc
ret
js
cmp
lea
movb
push
jbe
push
inc
or
mov
repnz
inc
mov
addr16
cld
xchg
lret
jns
out
movhps
jno
xchg
mov
jb
fists
inc
icebp
sahf
lods
mov
xchg
xchg
mov
mov
add
cmp
mov
mov
mov
sub
inc
addr16
les
pop
xchg
cmpsb
bound
enter
push
frstor
and
sbb
add
xabort
inc
icebp
cmpsl
neg
inc
js
std
push
mov
sbb
cld
inc
pop
jg
cvtps2pi
xor
or
adc
les
jnp
xchg
jbe
inc
pop
mov
lea
inc
sbb
data16
and
mov
adc
movsb
jg
add
out
and
in
xor
pusha
fisubl
enterw
mov
cld
cmp
mov
insl
adc
lahf
sysret
adc
das
mov
and
add
movsb
mov
fsubp
or
loopnew
add
mov
xchg
out
sbb
rol
icebp
and
rcrb
into
out
jbe
xor
enter
cmp
jbe
movsl
mov
repz
std
inc
cwtl
push
js
in
test
dec
add
sbb
mov
adc
mov
clc
test
push
hlt
or
aam
dec
add
repnz
pop
push
or
inc
hlt
jne
mov
mov
add
outsb
rol
or
xor
int
fstps
xchg
inc
jbe
js
out
cwtl
lret
push
inc
addr16
imul
xor
push
pushf
into
pop
test
pop
fidivl
xor
sarb
push
andl
stc
outsb
inc
mov
jge
stc
ja
inc
jb
xchg
jne
cmpsl
popa
cmp
mov
out
in
jmp
shl
mov
xchg
sub
out
mov
fildl
push
sbb
in
jbe
test
cmp
sti
clc
dec
push
mov
add
scas
xor
adc
lahf
xchg
cmp
xchg
pop
jns
js
or
xchg
outsb
add
subb
sub
fcmove
jmp
and
or
sbb
pop
cmpsl
hlt
test
fidivs
or
push
call
xlat
jno
pusha
cld
les
in
push
mov
dec
in
fnstsw
cmp
daa
sub
push
add
data16
out
xchg
fldcw
add
cmp
dec
bound
fiaddl
mov
dec
mov
cmc
jbe
dec
scas
cli
test
addl
adcb
or
add
cmpsb
or
sbb
mov
ja
cmp
movsb
std
clc
or
mov
pop
fs
mov
mov
lahf
divb
mov
cmpsl
int3
xchg
pop
add
in
scas
add
jbe
lods
xor
jns
lds
stc
repz
adc
cmp
in
mov
mov
fsubrs
aam
dec
movsl
mov
test
sbb
or
rorl
lea
dec
jb
pop
hlt
cmpsb
fnstenv
sbb
and
jo
inc
loope
es
add
shlb
ss
iret
sub
or
mov
shlb
shll
mov
or
xchg
xchg
int
cltd
outsl
mov
insl
iret
aam
imul
leave
nop
cltd
imul
mov
repz
pop
cltd
or
addr16
xlat
movsl
aam
adc
mov
rorb
mov
sti
test
out
cli
xchg
into
ja
leave
ljmp
cmc
outsb
notb
sbb
adc
mov
xor
jl
mov
pop
add
loop
lods
jns
cli
pop
out
xlat
ljmp
flds
clc
sbb
scas
cmp
and
adc
adc
adc
mov
aad
sbb
rclb
ljmp
pusha
into
in
mov
movsb
jne
nop
stos
aam
cmc
mov
jbe
mov
jns
lods
xchg
sahf
popf
movsl
and
fs
das
or
fsubl
push
pop
imul
fnclex
scas
rcll
rcr
cmp
jmp
ds
call
push
cmp
jns
mov
testb
adc
push
jecxz
add
mov
out
mov
nop
push
ret
mov
push
aam
outsl
aaa
pop
mov
mov
jb
test
xchg
or
push
fstl
or
xchg
sub
mov
lahf
xchg
mov
xor
into
pop
xchg
out
shrb
rcr
cmp
stc
enter
lds
cltd
mov
pop
cld
ss
es
mov
mov
in
push
xchg
mov
dec
mov
out
fs
xor
add
jo
fsubp
sub
add
mov
fcomps
enter
jl
popa
cmc
sahf
xchg
mov
mov
aas
push
sbbb
inc
ret
pop
sbb
ja
dec
add
lods
lods
test
out
mov
adc
incb
test
push
stos
in
mov
pop
lea
lods
xchg
push
popl
bound
cmpsl
pop
out
gs
adc
push
or
mov
sub
loopne
xor
rcr
xchg
in
cmp
mov
test
mov
imul
xchg
sti
mov
mov
je
insb
jno
xorl
lret
xchg
jbe
mov
stos
jae
pushf
jmp
je
mov
push
xchg
inc
xchg
xlat
fdivl
insl
pop
out
add
sarl
outsl
push
sahf
mov
xchg
or
ret
xor
jle
or
andl
lahf
inc
call
sbb
arpl
cmpsb
orb
shll
mov
test
and
fnstcw
call
fucom
in
rcr
push
lret
mov
push
cmp
enter
loope
jmp
cwtl
pop
in
adc
nop
cmp
fsub
pop
ret
cmp
outsb
popa
mov
cltd
inc
lcall
sbb
adc
out
push
fsubrs
nop
lea
aas
inc
adc
lea
add
shrl
mov
inc
imul
mov
or
je
gs
mov
test
inc
sarb
dec
cmp
cmp
adc
jne
dec
mov
repnz
xchg
bound
movsl
fdiv
in
subb
addr16
pop
cwtl
test
mov
ss
xchg
popf
and
iret
pushf
aad
inc
adc
mov
gs
inc
lret
inc
pop
xchg
mov
jl
mov
push
test
pop
adcb
data16
mov
inc
cmp
or
ud0
mov
stos
push
xchg
nop
je
push
sbb
ss
fistl
dec
mov
addl
add
xchg
shlb
or
push
pop
cmp
sub
lret
pop
pop
sbb
lahf
push
aam
mov
test
int3
sub
mov
sbb
out
adc
mov
mov
nop
pop
test
rcrl
adc
and
in
ss
sub
and
and
push
dec
mov
insb
xchg
sub
insb
sahf
jne
lods
imul
cmpsb
mov
rcll
mov
lea
in
xor
dec
call
inc
js
es
cmc
cld
xchg
mov
nopl
movsl
in
ja
enter
dec
cld
xchg
or
inc
in
stos
into
rcll
ret
repnz
mov
mov
dec
mov
mov
push
cld
push
dec
movsb
dec
mov
in
add
ds
out
repz
out
jg
ljmp
mov
mov
mov
sbb
pusha
push
les
add
cli
arpl
repz
call
add
aad
mov
mov
mov
push
arpl
mov
rolb
mov
xchg
test
sahf
jno
adc
or
shrl
mov
xor
repz
in
test
les
xchg
pop
movsl
repz
leave
push
push
inc
iret
cmp
imul
sub
add
xor
jo
and
ret
iret
add
and
dec
nop
out
js
cltd
mov
sbb
rclb
enter
mov
fwait
pusha
enter
lret
pop
add
cli
leave
add
adc
lahf
cmpsb
jg
add
mov
push
xchg
iret
dec
repnz
shl
rolb
push
cmp
dec
ja
int
orb
rcll
data16
cltd
sbb
in
add
mov
mov
and
ret
xchg
shlb
dec
movsl
jne
jl
inc
mov
loop
push
or
push
iret
xchg
xor
mov
dec
lcall
int
pushf
push
cmp
sahf
fadd
out
pop
jns
push
push
push
icebp
clc
xor
inc
pusha
icebp
xchg
inc
mov
mov
cmpsl
xlat
ret
mov
mov
leave
push
ret
inc
imul
or
mov
sbb
addr16
fcoml
rolb
xchg
push
jo
push
lcall
sahf
enter
shlb
sbb
cmpsl
lcall
adc
in
out
xchg
int
movsb
and
xchg
jns
push
stos
dec
mov
repz
mov
call
add
movsl
fwait
jg
adc
sahf
test
cmpb
add
cmc
sahf
repnz
inc
aam
xchg
add
lea
test
mov
mov
jne
xlat
dec
out
fdivl
cmp
mov
notl
pop
test
fsubrs
pop
mov
jle
iret
push
inc
or
xchg
pop
jns
stos
lds
mov
mov
test
mov
push
stos
xchg
test
fmull
int
push
cmc
sbb
mov
or
iret
push
jae
jo
jp
jbe
rcl
mov
mov
loope
or
or
scas
test
adc
mov
sub
insb
jnp
push
cmp
out
ds
shlb
fidivs
xchg
pop
orps
std
mov
push
test
cmc
mov
mov
pop
sarb
inc
or
sub
add
xchg
pop
enter
dec
stos
sub
add
fcomp
xor
inc
mov
imul
inc
mov
sbb
frstor
adc
mov
and
add
movsb
cmpsb
add
dec
ds
rcrl
inc
xchg
cmp
cmp
ret
outsl
call
adc
rolb
enter
xchg
mov
mov
mov
fdivs
mov
sarb
dec
stos
xchg
test
imul
sbb
aaa
jns
repz
cmp
push
jmp
jo
sbb
ret
dec
cmp
das
or
and
jmp
mov
pop
fmull
jg
pop
dec
xchg
jmp
pop
ret
ljmp
inc
sub
gs
loopne
leave
into
add
mov
negl
xchg
mov
jne
loop
pop
push
mov
addr16
imul
arpl
sub
and
push
cmc
outsl
mov
mov
mov
cmp
in
cmp
sub
mov
pop
jae
call
fildll
xchg
test
lahf
iret
jne
arpl
xor
enter
push
cltd
push
adc
add
inc
jl
divl
into
or
jg
sub
cmp
push
mov
sub
fldl
mov
sbb
jge
adc
leave
mov
mov
mov
xchg
push
loop
or
call
adc
outsb
rcrl
arpl
or
lds
mov
cmp
push
shlb
inc
sti
outsb
notl
mov
cmp
out
mov
add
mov
inc
cli
insb
insl
pop
or
xchg
cmpsb
sbb
dec
push
lret
int
iret
pop
mov
int3
cmp
cmpl
int3
add
xchg
cmp
xchg
dec
into
inc
ret
cmp
pop
add
movsb
mov
push
push
ret
mov
add
test
cmp
adc
cmpl
mov
imul
lods
lret
jmp
sub
shrb
mov
jg
outsb
ja
dec
std
ss
mov
pusha
lcall
or
int
nop
iret
subb
ja
fsts
push
adc
clc
sbb
cmpsb
ret
fs
adc
lock
mov
inc
sub
sahf
addr16
rcll
int3
add
js
push
loop
cmp
add
dec
xor
scas
sub
xlat
xor
out
mov
xchg
cli
jnp
out
add
adc
fwait
popl
jbe
xchg
or
inc
cs
ljmp
push
jmp
test
lea
not
add
push
xchg
sub
ja
cld
and
fdivrs
push
or
and
or
clc
mov
ljmp
repz
push
imul
xor
scas
imul
pop
movb
icebp
xor
pop
stos
mov
in
inc
cs
subl
jne
and
lock
ja
or
rcll
fxch
shrb
test
hlt
cmpsb
inc
cmp
cwtl
ror
mov
mov
pop
adc
mov
scas
leave
pop
sub
or
pusha
jnp
notl
ljmp
push
lahf
and
loop
subl
fcmovnb
je
xor
mov
lods
cmp
cmp
adc
into
movsb
inc
repnz
jp
mov
or
add
imul
xor
data16
xchg
dec
pop
mov
inc
sub
xor
or
mov
xor
imul
test
cwtl
pop
bound
push
jbe
and
cwtl
add
xchg
mov
js
cwtl
imul
push
xchg
inc
dec
lods
sbb
popw
imul
gs
enter
fsubrl
das
test
and
dec
out
or
pop
cmp
insl
jecxz
orb
std
das
dec
rcrl
int
mov
int3
xchg
cmpsb
and
inc
pop
andb
lahf
sbb
fldt
push
mov
int3
rolb
data16
adc
mov
in
movsl
add
cmp
lods
jae
test
int
jb
mov
pop
fmulp
xchg
sub
stos
aas
add
in
rcrl
outsl
xchg
imul
mov
mov
out
dec
mov
cmc
or
inc
in
xchg
movsb
and
mov
repz
mov
shr
dec
lods
xchg
call
push
mov
stos
cs
std
xor
pop
in
push
jbe
addr16
das
cld
adc
dec
and
sbb
int
daa
sahf
pop
sbb
idivb
iret
leave
cs
cmp
or
ds
jg
cmpsb
push
imul
insl
mov
jl
adc
dec
sbb
push
xchg
js
push
xchg
addb
inc
inc
inc
test
cmp
out
mov
loopne
and
lea
test
sub
mov
or
xchg
mov
ret
push
mov
mov
push
dec
push
mov
xchg
push
jnp
dec
add
inc
jl
push
xor
fdivrl
sbb
dec
sub
addr16
jne
enter
gs
arpl
push
test
or
les
insl
shll
push
out
sti
adc
xchg
or
in
mov
jno
mov
mov
call
hlt
ret
adc
mov
jno
pop
xchg
sbb
cmp
scas
int3
je
lahf
or
shrb
mov
in
movsb
cmp
and
mov
add
lea
mov
lods
push
sub
negb
js
push
xchg
pop
mov
push
xchg
das
out
pop
mov
aad
int3
push
aas
inc
cmp
popf
scas
cmp
fnstsw
aas
jb
sti
adc
int
xchg
add
xor
stc
xchg
xchg
popa
fwait
add
push
sahf
ret
adc
adc
roll
insl
adc
fsubrs
adc
mov
cli
movsb
out
popf
adc
incl
stos
cltd
fcomps
mov
mov
ror
movsl
push
outsb
cld
out
xor
jl
movsb
popl
xchg
xor
stos
xchg
xchg
mov
inc
cmp
mov
ds
pusha
push
and
insb
xchg
sahf
stos
pop
mov
sub
pop
rcrb
roll
icebp
cltd
xchg
imul
popf
xchg
sub
rolb
sbb
lret
push
je
cld
enter
in
xchg
ljmp
jge
fstps
mov
inc
icebp
je
lds
inc
enter
mov
pop
adcb
cltd
mov
pop
lods
or
xorl
cwtl
jbe
and
xchg
cmp
mov
inc
jo
outsl
imul
adc
cwtl
push
fs
add
shr
insl
push
pop
aam
pop
and
pop
fcom
repz
and
nop
bound
jge
inc
lds
leave
jns
fnstenv
cmp
xchg
xchg
movsl
popa
and
cmpl
imul
outsb
jl
arpl
cmpsb
aam
rclb
sahf
add
pushf
inc
push
lods
js
dec
jg
or
and
push
cltd
jns
lcall
clc
push
mov
stc
es
inc
inc
lea
pop
and
imul
sub
sbb
adc
and
lret
mov
int3
mov
xlat
lret
sbb
cld
aad
cwtl
xchg
jb
and
enter
imul
out
shr
xadd
mov
aaa
pop
int3
aas
cmpl
add
imul
mov
fsubr
jp
and
fidivs
cltd
mov
movsb
xor
add
xchg
push
sbb
int3
pop
sub
clc
cld
pushf
ja,pt
push
sahf
outsb
jl
ljmp
aad
dec
imul
stos
repz
push
es
lret
inc
ljmp
mov
nop
ud1
jecxz
dec
xor
push
jl
out
shrl
call
je
inc
mov
push
in
ja
xchg
mov
movsl
dec
dec
scas
push
test
push
mov
xchg
sbb
mov
sti
mov
inc
add
scas
sbb
pusha
roll
dec
jge
cmp
arpl
movsl
xchg
lret
dec
outsl
xchg
scas
mov
clc
ds
sbb
ret
mov
jne
inc
push
and
pop
nop
int
dec
repnz
bound
pop
andl
fcompl
mov
xor
sbb
inc
jbe
xor
mov
andl
ret
mov
inc
cmpsb
cmp
mov
addl
lahf
mov
push
xchg
das
jne
nop
xor
adc
arpl
and
lcall
mov
int
dec
push
lea
les
shrl
dec
inc
lcall
lods
inc
sub
in
ficoml
or
loopne
fcoms
mov
xchg
pusha
dec
rorw
ss
or
cld
es
or
nop
xchg
add
aaa
jbe
mov
iret
adc
mov
push
das
mov
jl
or
aas
sbb
leave
jge
lea
fnstsw
mov
xor
in
pop
fcomi
leave
adc
adc
mov
mov
fsubl
mov
fs
or
sbbb
call
xlat
jne
shr
xchg
cs
shlb
jno
stos
add
sbb
xchg
icebp
pop
out
xchg
loope
je
xchg
push
mov
adc
xchg
and
xchg
ds
push
imul
cmc
adc
lods
inc
scas
xchg
dec
sub
ret
mov
loop
nop
xchg
aas
aam
ret
mov
ret
mov
inc
sti
out
aam
mov
fcomip
dec
mov
aad
xchg
out
cmpl
adcl
and
jns
sub
cmp
out
and
es
out
nop
rcll
xchg
aaa
mov
jnp
leave
sub
cmpsl
mov
in
adc
lea
arpl
test
fs
les
mov
stos
dec
xchg
adc
push
push
jnp
data16
gs
inc
push
dec
inc
jge
scas
scas
ds
test
addl
pop
fdivrl
rcrl
ret
adc
leave
imul
xchg
je
lahf
cmpsl
mov
adc
xchg
pop
lahf
outsl
sarb
mov
cli
cmpl
je
push
imul
push
test
data16
mov
xor
push
dec
mov
jbe
ds
lret
aam
enter
rcl
lcall
aad
je,pn
push
fstpt
dec
cmpsb
popf
sbb
xchg
inc
mov
mov
or
mov
inc
xor
mov
pop
lcall
pop
pushf
mov
cmpsb
mov
out
repnz
adc
jge
ss
mov
jbe
leave
cli
mov
shl
adc
jp
jns
xchg
jo
test
cmpl
pop
enter
je
into
adc
xchg
or
test
movsb
mov
repz
aas
or
outsb
inc
mov
ja
lahf
adcb
mov
cmp
dec
push
or
cmc
stos
mov
js
cmpb
adcb
dec
adc
jo
cmpsb
stos
fcompl
xchg
mov
dec
out
jmp
lods
js
cmc
addr16
push
loope
fnstenv
mov
in
dec
cld
adc
mov
push
push
scas
loopne
cmp
pop
sti
xorb
aas
adc
stos
repnz
push
sbb
aad
sub
adc
movsb
xchg
aam
pushf
or
lea
rclb
stos
cld
frstor
jmp
stos
mov
gs
or
pop
xchg
js
scas
cli
jecxz
rep
jno
adc
sar
xchg
popa
jl
and
mov
push
and
pop
test
js
sbb
lret
xor
stos
push
xchg
dec
xchg
lahf
cmp
mov
pop
nop
arpl
dec
sub
test
cmc
push
nop
mov
movsl
mov
test
xor
inc
fwait
jno
out
cli
lret
cmp
dec
xchg
mov
shlb
rcrb
cli
int3
pop
jns
lds
or
imul
mov
inc
mov
xchg
insb
or
ss
mov
pop
jl
dec
and
xorl
lcall
pop
sub
xchg
mov
push
stc
lods
push
dec
adc
aas
xlat
out
xor
mov
cmp
or
pop
xchg
mov
rcrl
movsl
movsb
aam
push
xchg
mov
mov
add
out
leave
ret
es
out
jns
mov
outsb
lds
pushf
pop
in
sub
fisttpl
cmp
dec
fistpl
xchg
arpl
or
enter
mov
inc
test
mov
repnz
jne
jbe
xor
jp
xchg
jbe
sub
icebp
iret
test
push
mov
jecxz
lahf
inc
push
clc
or
sti
ret
test
push
or
in
mov
rclb
loop
rol
add
or
sub
roll
inc
shlb
adc
int
fbld
popa
sbb
mov
xor
adc
aad
mov
or
xor
xchg
repz
xchg
sub
fdiv
sub
or
test
xor
clc
add
lahf
cmpsb
in
mov
xchg
or
sbb
cmpsl
add
mov
and
mov
xchg
add
imul
roll
out
fsubrl
sub
xchg
clc
dec
adc
xor
inc
mov
in
fcmovne
sub
sahf
jae
cmp
movsl
mov
nop
cltd
cmp
data16
outsl
ss
popf
xchg
fstpl
imul
je
xor
out
mov
ret
pop
loop
xchg
loopne
nop
mov
mov
mov
mov
cmp
pop
repnz
xchg
and
cmp
rcrb
adc
fs
stos
je
cmp
lods
xchg
add
jne
push
jp
test
and
std
xchg
call
orl
fwait
pushf
ds
cmp
adc
imul
aaa
and
add
xchg
daa
add
ret
or
mov
fstl
sub
mov
aaa
leave
out
ss
cli
add
cmpsl
xor
movsl
pop
in
stc
sahf
sar
xacquire
ret
pop
data16
sub
and
cltd
mov
mov
push
fadds
fwait
decl
iret
add
loop
or
mov
dec
fwait
jmp
cmpl
icebp
test
adc
xchg
xchg
or
nop
mov
testl
es
dec
or
push
add
decl
pop
xchg
in
dec
into
into
mov
jno
addr16
mov
shl
xchg
dec
imul
mov
inc
mov
rcr
fisubl
mov
mov
popa
inc
xchg
pop
jecxz
or
mov
std
subb
sub
and
es
pop
push
mov
imul
push
int3
or
mov
cmp
ds
pop
fwait
sub
daa
bound
repnz
lcall
push
cs
mov
in
inc
xchg
add
js
pop
iret
popa
lods
imul
clc
or
jl
push
cmp
mov
sub
sub
mov
dec
fistpll
cwtl
pop
sbb
sarb
xchg
and
arpl
jae
inc
out
add
cmp
rep
test
stos
imul
mov
ds
push
mov
stos
xlat
pop
nop
mov
push
scas
add
push
adc
and
cmp
dec
jo
sahf
cmpsb
mov
push
scas
fwait
aam
and
and
setbe
inc
loopne
mov
hlt
bound
pushw
cld
cmp
pop
outsl
int3
inc
call
outsb
xchg
jns
movsb
daa
cmp
int3
jp
imul
mov
scas
fdivs
adc
outsl
ror
in
mov
inc
push
adc
xchg
cmp
jle
jb
and
shlb
add
les
scas
xchg
push
ds
test
ret
push
or
or
adc
adc
rcll
fisttps
add
mov
pop
lods
mov
enter
ror
insl
cmp
mov
sbb
push
in
push
xchg
rclb
xorl
scas
pop
pop
jo
or
les
jmp
jl
jp
bnd
aad
je
sub
sub
jp
dec
fwait
xorl
mov
cmp
fldl
mov
aas
lea
push
mov
dec
inc
repnz
je
inc
js
popf
push
inc
adc
andl
cmc
hlt
lods
int
lock
adc
adc
xor
or
iret
pop
jae
or
test
pop
jne
sub
pop
adc
scas
out
mov
out
adc
jnp
sbb
mov
mov
stos
mov
jp
pop
pop
test
mov
ret
out
inc
cld
xchg
leave
jno
xchg
repnz
dec
mov
ss
push
lods
ret
xchg
repnz
outsb
sbb
add
mov
loopne
sbb
rcr
push
jge
xchg
scas
sub
mov
aad
jecxz
out
mov
mov
push
adc
pop
pop
and
daa
jg
scas
xchg
daa
pop
jae
ret
cmp
rorb
nop
jb
loopne
jge
les
hlt
adc
sahf
repnz
or
xor
fcmovnb
aam
jge
dec
cmp
out
mov
shrl
sub
mov
mov
mov
mov
je
fdivrl
fs
mov
jg
sbb
jae
xchg
sahf
dec
jns
bound
push
ret
and
xor
movb
add
lea
sub
or
sbb
outsl
jo
in
add
aad
in
cmp
in
pop
sub
cmpsl
nop
jbe
mov
lods
cli
loope
outsb
gs
sub
es
iret
mov
jns
in
inc
out
rcl
fs
lcall
fwait
mov
jb
rcll
xchg
mov
push
imul
push
js
fisttpl
pop
xchg
jb
test
jnp
aaa
fs
stos
jg
js
inc
fsubs
mov
xchg
mov
daa
lret
aas
or
lods
insb
lock
cwtl
ds
push
jl
rol
adc
rclb
inc
data16
ss
and
pop
pop
pop
mov
push
fsubl
jge
dec
add
mov
cmpb
mov
mov
mov
pushl
dec
mov
imul
test
out
cs
cmpsb
sti
popa
int
pop
cli
lahf
addr16
movsb
out
push
or
jg
mov
jmp
jg
pop
jg
ljmp
mov
jmp
mulb
mov
xchg
and
mov
stos
xchg
andl
enter
cmp
xchg
cmp
loop
aas
mov
cmp
adc
daa
jl
dec
hlt
nop
lret
mov
xchg
int
daa
ret
or
lock
mov
shl
aad
insl
in
push
xchg
pushw
pop
jbe
enter
mov
push
fiaddl
pop
fisttpl
xor
push
dec
sbb
jg
mov
testb
and
mov
xlat
sub
test
jno
subb
ljmp
jo
adc
jmp
pop
test
decl
sub
scas
add
push
lods
push
or
aas
dec
xor
movsl
mov
cmp
std
push
pusha
aam
movsl
out
mov
sub
rolb
and
fs
popa
cmp
mov
je
mov
or
jl
icebp
out
movsb
and
mov
or
dec
cld
ljmp
enterw
loopne
es
push
adc
out
sbb
sbb
mov
sbb
sub
sbb
lcall
mov
lret
jp
cwtl
mov
jge
out
enter
push
scas
push
pop
and
xchg
push
fdivs
orl
cmp
jle
mov
dec
subl
inc
cli
jb
iret
mov
mov
cli
push
pop
mov
inc
xchg
pop
jmp
cmpsb
stos
mov
pop
sub
cmpsl
ficompl
pop
jns
rolb
or
fbstp
movsb
pop
mov
jnp
jmp
xchg
subb
test
scas
jge
mov
xchg
inc
push
bound
sub
mov
mov
mov
mov
sti
jno
jg
cbtw
jb
imul
fstpl
jp
clc
dec
jnp
fwait
subb
cmpl
mov
jle
adc
pop
movsb
int3
test
sbb
outsb
mov
nop
mov
shrl
cli
and
test
push
scas
insb
icebp
push
lea
imul
cmc
int3
jns
fdivrl
cld
ret
mov
push
inc
addl
mov
shrl
sarl
jb
cmpsb
cmpsl
dec
ficoml
loopne
pop
movsb
test
mov
js
enter
xchg
sti
test
fstpl
insl
jp
push
adc
cld
addr16
test
movl
mov
andb
fs
fldl
mov
mov
bound
dec
jo
scas
jb
dec
repnz
or
jmp
dec
cs
xor
sbbb
add
jp
mov
jbe
dec
jbe
mov
cmp
inc
scas
pop
test
jno
sub
fistl
jmp
addr16
shlb
ljmp
dec
jne
push
lret
je
jge
outsb
mov
inc
loopne
fcoml
repz
clc
into
push
push
add
cmp
leave
pop
dec
jbe
add
mov
mov
fwait
jp
sub
xor
cmp
sbb
cmp
adc
xor
sub
aad
ja
mov
rcrl
arpl
push
testb
nop
cmp
pop
sti
outsb
sbb
test
sahf
int
sbb
aad
out
and
lea
ror
ret
shll
les
ja
out
fdivl
loopne
pushw
addl
cmpsb
mov
cmp
loope
lcall
pop
mov
pop
pop
lcall
mov
pusha
xchg
inc
jge
xor
sub
mov
daa
mov
mov
lds
sahf
push
js
fbld
xor
push
xchg
das
shr
and
aas
jmp
dec
adc
shlb
loopne
pusha
imul
fsubp
xchg
adc
mov
xor
sbb
adc
andl
cmc
shl
cmpsl
imul
sbb
and
lcall
mov
xchg
pop
and
inc
pop
outsb
cli
sub
lods
xchg
aam
adcl
jbe
mov
or
orl
or
rorl
in
pop
out
movsl
daa
push
or
into
stos
cmp
rcl
ret
js
mov
push
mov
pop
jae
cli
or
fisubs
sbb
adc
fimuls
fadds
das
dec
test
lcall
push
roll
push
shrb
or
mov
nop
push
pop
inc
nop
push
js
loop
stos
dec
test
adc
sbb
idiv
fisubrl
leave
mov
popa
dec
jnp
or
cmp
xchg
jg
repnz
mov
mov
fsub
data16
loopne
inc
mov
leave
xchg
push
out
test
inc
mov
je
sahf
repnz
or
data16
int
adc
cmp
mov
int3
shlb
sbb
xor
mov
and
mov
fstpl
and
xchg
mov
ret
jl
nop
imul
std
das
jmp
jo
dec
mov
shrb
imul
cltd
sbb
add
mov
push
icebp
sbb
mov
mov
cwtl
test
clc
push
add
jge
inc
pusha
push
or
lods
test
fsubs
or
xorl
mov
xchg
aam
jge
rcll
psubusb
cmp
or
sub
fidivrl
stos
pop
cmp
mov
lret
sbb
fidivrl
push
push
or
lods
cmp
push
sub
iret
mov
pop
push
pop
xor
pop
pushf
push
scas
sub
mov
dec
push
mov
push
sahf
es
repz
fidivs
pop
jp,pt
addr16
movswl
jbe
fldenv
push
js
and
xchg
dec
int
repnz
cltd
ficoml
sbb
jg
imul
push
and
mov
sahf
loope
pop
dec
push
int3
adc
add
push
mov
mov
xchg
sbb
xchg
iret
pop
or
jnp
push
testl
push
arpl
aam
bound
pop
packssdw
ljmp
ret
mov
ficoml
cmp
dec
xchg
mov
sbb
and
ret
mov
cld
fisttps
push
ja
lods
fwait
je
mov
addb
out
lea
int
ret
dec
cmc
clc
andb
aas
mov
movsl
pop
imul
and
incl
mov
or
fdivp
pushf
ret
push
sub
imul
or
cmp
or
jns
or
mov
cli
mov
out
testl
xchg
xchg
ret
test
mov
stos
addr16
push
test
mov
push
mov
data16
or
popa
xor
xchg
std
les
cmp
fcom
hlt
jnp
roll
ss
lods
je
repz
mov
inc
xchg
jb
and
fstl
push
push
scas
adc
xchg
or
sbb
xchg
mov
imul
es
mov
cli
inc
mov
jbe
sbb
inc
pop
xor
xchg
sarl
xchg
push
hlt
ret
push
jo
pop
std
movsl
bound
pop
leave
mov
jb
mov
mov
lcall
pop
mov
inc
lcall
xchg
jp
mov
xor
repz
adc
rolb
js
xchg
sarb
mov
movsl
jbe
dec
outsl
std
fisubrs
les
adc
add
fidivl
test
imull
aas
fdivrp
enter
int3
insl
mov
lds
lea
or
sub
lea
mov
pop
repz
or
cmc
xchg
jle
inc
fmulp
repz
out
xor
lds
sub
pushf
mov
xor
cltd
je
push
lcall
test
lods
std
cmpsb
stos
push
inc
insl
jecxz
push
ret
mov
add
lret
shll
add
xchg
xchg
cmp
testb
mov
push
and
push
subl
and
ret
pop
xchg
jmp
xchg
mov
jnp
adc
shll
push
fadds
out
mov
fstpt
int3
mov
sbb
mov
mov
repnz
mov
repz
cmpsl
test
cli
inc
pop
lret
xchg
test
dec
xor
dec
jne
in
scas
imulb
into
add
jns
sbb
mov
push
aad
das
movsb
cld
jg
inc
test
pop
call
into
push
sbb
push
fwait
pop
jbe
inc
lahf
cmp
aam
pop
pop
push
nop
lret
dec
mov
sub
cmp
mov
or
cmp
hlt
xchg
mov
xchg
rolb
mov
fcoml
pop
xchg
mov
subb
addr16
jmp
inc
ljmp
cmp
jg
lea
inc
mov
jp
movsb
dec
aad
pop
fnstcw
sbb
fidivrl
jle
sub
xorl
or
adc
repz
je
mov
lock
mov
cltd
ds
test
jb
xchg
fs
xchg
inc
or
int3
lret
pop
fsubrl
addr16
pop
bound
sti
jbe
jo
mov
ja
pop
push
ss
dec
push
xchg
repz
fld
mov
test
mov
add
int3
mov
push
push
arpl
stos
rcrl
cmp
xor
jbe
gs
mov
out
cld
xchg
mov
mov
test
sub
adc
fldl
iret
into
fcmovb
dec
ffreep
push
xchg
loop
jp
add
test
scas
loopne
push
pop
add
hlt
xchg
jecxz
add
inc
rolb
fiadds
mov
or
fbld
sub
sub
out
mov
outsb
add
xchg
mov
cmp
pop
jmp
mov
test
notb
cs
outsb
mov
lock
jnp
ljmp
pop
mov
lods
sub
mov
jecxz
cmpsb
mov
push
pusha
mov
sbb
fiadds
sarb
or
mov
es
adc
enter
push
push
mov
movsl
mov
mov
test
loopne
xchg
repnz
cwtl
mov
into
inc
push
aaa
je
adc
outsb
inc
xchg
sahf
jl
inc
pop
dec
mov
mov
mov
sbb
sub
mov
jnp
lods
xchg
mov
cltd
sub
loopne
xchg
test
jne
jmp
and
mov
fcoms
add
jg
xchg
sbb
subb
ljmp
or
cs
dec
inc
cld
xchg
cs
inc
imul
loop
nop
ror
ret
int3
dec
jbe
fdivl
mov
int
shrl
jo
inc
pop
pop
je
addr16
inc
jg
stc
mov
adc
pushf
jbe
leave
scas
in
sarw
jmp
aam
es
lret
arpl
push
cltd
xchg
mov
and
iret
xchg
mov
aas
lock
dec
sahf
push
fsubr
std
shll
dec
xchg
xchg
or
xlat
sbb
lods
leave
xchg
adc
mov
je
and
icebp
push
lcall
les
xchg
xchg
mov
jle
inc
fisubrs
into
push
and
mov
xchg
mov
lea
xchg
jl
mov
jnp
xchg
jbe
pop
daa
jbe
adc
add
mov
mov
xchg
aam
xchg
mov
mov
test
jle
imul
xchg
push
xchg
xchg
stos
jl
jecxz
fsubr
push
test
push
or
in
sub
push
addb
cmp
stc
mov
push
jp
orb
movb
data16
nop
jbe
clc
sbb
sti
out
dec
inc
mov
fisubl
faddl
js
aad
in
xor
repz
jbe
int3
nop
ret
outsb
push
pop
jmp
jb
push
stos
cwtl
imul
test
dec
cld
cmp
xchg
pop
loop
testl
repnz
fdivrs
adc
push
std
mov
inc
adc
jecxz
popf
push
mov
js
adc
aaa
popa
jne
cmp
xchg
adc
das
xor
sahf
arpl
outsl
mov
jl
push
ret
addb
sbb
pop
aad
in
inc
hlt
loopne
cmpl
adc
sub
mov
stos
cli
pop
jbe
test
xor
fiaddl
imul
pop
push
mov
repz
add
stos
fstl
adc
cmp
or
sub
xchg
add
subl
cwtl
orb
cltd
les
lea
movsb
pop
cwtl
cmp
lock
shrb
push
cld
xchg
or
sub
pop
iret
into
mov
cmp
jae
ss
dec
or
rol
sbb
arpl
ja
or
int3
sbb
sbb
jp
jl
popa
mov
xchg
jno
pop
mov
rcrb
xchg
and
rolb
xchg
je
mov
cmp
gs
sbb
cmpsl
dec
repnz
or
sti
fs
xchg
dec
loop
test
fdivr
stos
inc
inc
insb
repnz
sub
lret
jo
adc
dec
cmp
rcll
xchg
scas
decb
xchg
popa
ss
sbb
inc
mov
jbe
mov
stos
push
bound
aad
dec
cli
cmp
lea
push
jne
cmpb
add
iret
dec
cld
fsin
jl
mulb
xchg
fmull
sbb
and
mov
pop
sarb
mov
ret
je
xor
sbb
or
loop
cmp
mov
outsb
lds
push
push
mov
cmp
sub
jbe
xor
xor
shl
lds
sbb
stos
inc
dec
mov
sbb
push
push
and
js
dec
push
cmpsb
shr
stos
lea
push
test
lcall
and
mov
or
sub
xchg
cmp
mov
pop
sub
jmp
shll
cmp
dec
data16
cmpb
test
add
push
sub
cltd
es
sub
sub
cs
jge
dec
jg
pushf
inc
xor
sub
pop
inc
daa
loop
sbb
lods
dec
mov
xor
pop
jb
pop
mov
xor
es
cmp
xchg
mov
in
pop
pop
lahf
addb
adc
jo
rcrl
dec
and
mov
xchg
mov
pop
jnp
insl
mov
mov
jg
mov
jp
popf
rclb
clc
push
movl
add
mov
sub
pop
xchg
movsb
pushf
cs
arpl
xor
cwtl
xchg
pop
lahf
rol
push
and
nop
mov
sbb
sarl
mov
inc
adc
int3
mov
mov
adcl
add
repz
cld
xor
loopne
cli
add
sub
push
lock
je,pn
and
add
fsts
cmp
jmp
fcmovnbe
cli
jae
push
jae
push
mov
repz
packsswb
scas
icebp
divl
jne
movsb
pop
add
push
popa
cs
test
push
jne
dec
js
repz
inc
mov
inc
dec
jo
fwait
ljmp
mov
sub
notl
shll
rcrb
cld
enter
push
pop
pop
sbb
lea
pop
adc
inc
add
into
ja
inc
sahf
daa
xchg
int3
popf
subl
mov
xorl
mov
push
loopew
movsb
mov
cli
scas
xchg
rorb
jbe
mov
adcl
jo
mov
push
push
outsb
mov
mov
bound
jg
cmpsl
or
imul
and
sbb
jo
clc
jecxz
out
enter
aad
subb
add
adc
out
cmpsb
mov
movsb
repz
clc
aas
jno
pushf
fiadds
outsb
shl
xchg
enter
sbbl
lahf
sbb
xchg
jae
sahf
jmp
push
inc
mov
test
cmpsb
cli
inc
cmp
sarb
or
ret
cmp
mov
xchg
fldl
and
or
jg
inc
repnz
lods
rolb
cld
jb,pt
xorl
imul
lock
pop
add
fidivl
xchg
sub
inc
xlat
xchg
sub
mov
imul
or
cmpsb
jo
inc
push
nop
push
out
mov
cmp
pusha
test
js
cmp
std
xchg
push
add
enter
jp
mov
imul
lock
mov
sub
xchg
sub
dec
inc
les
mov
shll
sbb
xchg
jecxz
mov
push
out
inc
add
addr16
push
sub
repnz
mov
int
orl
mov
iret
sub
add
enter
dec
imul
fnstenv
push
jle
dec
or
out
xor
pop
std
test
int
movsl
cmp
adc
lret
jecxz
cmp
push
pop
xchg
out
into
inc
popa
mov
add
add
stos
inc
push
or
cld
mov
sbb
jmp
push
xchg
sarl
adc
sbb
xchg
xchg
add
scas
jo
je
repnz
mov
out
push
addb
lcall
orl
cmp
xchg
jl
xchg
psrlw
push
bswap
cmpb
stc
pop
shrl
dec
sarl
addr16
xor
push
pop
aas
daa
mov
int3
nop
mov
dec
inc
jnp
pop
and
repnz
push
test
push
mov
mov
ljmp
imul
add
outsl
out
lahf
cltd
test
mov
enter
xchg
testb
insl
test
out
cltd
negl
xorb
fiadds
cmp
jo
sub
dec
pop
cmc
arpl
mov
adc
push
mov
in
adcb
cld
mov
icebp
xor
cmp
lea
lods
cli
stc
scas
mov
test
dec
test
pop
sbbl
push
jbe
mov
out
add
gs
cwtl
ret
bound
mov
daa
dec
fs
std
mov
aam
dec
aad
sbb
jg
imul
add
or
sti
into
cmpsb
add
ficompl
mov
cwtl
mov
ljmp
std
stos
lret
mov
xchg
ret
push
sub
lcall
test
jbe
mov
mov
ret
jbe
cmp
stos
mov
mov
in
mov
into
mov
pop
into
cld
push
xor
push
xchg
sete
xchg
mov
movsl
mov
sub
push
xchg
xchg
les
add
jns
scas
cmp
adc
mov
arpl
cmp
mov
mov
ljmp
jecxz
jg
mov
mov
mov
dec
mov
jo
test
lahf
add
mov
les
dec
ss
sbb
add
jmp
xchg
popf
xchg
icebp
cwtl
xor
sarl
and
pop
mov
inc
cmp
fstpl
xchg
call
jge
add
pop
rcll
mov
pop
mov
push
jno
sub
inc
aaa
cpuid
stc
push
sbb
sti
push
int
jge
and
adcl
std
push
add
bnd
cmp
into
push
call
or
xchg
and
push
mov
jb
pop
and
popf
jecxz
mov
aam
or
fs
or
jno
push
testb
pop
test
je
xchg
fldenv
lret
aad
in
nop
add
lret
int3
out
xchg
out
insb
cld
jb
pop
xchg
or
inc
into
aad
loopne
inc
in
lock
orl
cmp
pop
testb
leave
inc
fisubrs
push
dec
push
popf
jno
stos
mov
int3
mov
jo
push
comiss
xchg
test
in
cmp
test
or
xchg
dec
jmp
xchg
loop
stos
xchg
cmp
mov
std
add
lcall
incl
loope
imul
fcoms
xchg
sets
out
xlat
lret
out
rol
mov
sahf
mov
cwtl
ds
mov
sub
jbe
adc
cmpsb
ficoml
fs
push
mov
sub
movsl
hlt
xchg
xor
scas
inc
test
or
call
jecxz
cmp
in
cmpsb
scas
add
jge
pop
outsb
int3
iret
sahf
fwait
pusha
jbe
rorb
push
xchg
mov
inc
into
mov
scas
xchg
mov
mov
in
icebp
lcall
hlt
lcall
adc
aas
xchg
int3
inc
dec
pushf
dec
dec
cwtl
out
inc
mov
mov
lret
xor
int3
test
addl
mov
xchg
xchg
add
cwtl
mov
mov
add
stc
sahf
aas
and
scas
jb
aas
xor
int
test
scas
mov
cltd
xchg
or
mov
iret
sbb
sbb
cmc
call
mov
lret
sahf
nop
mov
ja
jg
xchg
mov
lret
push
jp
mov
fmuls
push
arpl
push
sub
fmuls
xchg
outsb
insb
add
jbe
subl
out
adc
aam
xchg
jge
movsl
arpl
add
fsubl
out
add
xlat
movsl
addr16
mov
jns
xchg
movsb
pushf
addr16
ret
in
out
adc
xchg
xor
lret
adc
testb
pop
or
mov
hlt
cwtl
push
mov
lret
xchg
or
sbb
push
clc
ret
scas
scas
adc
and
js
sbb
out
mov
sub
fisubl
mov
faddl
leave
jnp
js
dec
add
fidivrl
mov
test
stos
repz
clc
and
shlb
sbb
lods
stos
test
mov
push
sbb
push
push
inc
jmp
adc
push
enter
mov
dec
or
outsl
pop
in
imul
dec
adc
mov
and
cmpsb
icebp
ljmp
movsl
mov
jge
add
mov
movsb
data16
jae
ljmp
scas
mov
lret
ret
pop
jmp
pop
cmc
nop
test
pusha
test
xlat
xchg
mov
test
mov
imul
cmp
call
bound
pop
and
pusha
sbb
loopne
ror
into
push
mov
rcr
pop
out
cmp
and
cbtw
pop
adc
add
add
lret
pop
xor
lds
cwtl
jne
add
sub
rcrb
inc
push
push
into
mov
dec
mov
cmpsb
leave
sub
mov
add
lcall
fnstsw
cmpsb
or
bound
push
ret
ret
mov
cmp
fsubrp
jge
cmpsb
ljmp
hlt
cwtl
mov
fnsave
lahf
cmp
adc
xchg
inc
adc
lods
dec
mov
cmp
lcall
test
les
loop
xor
adc
jns
and
jne
or
iret
jnp
cmp
mov
imul
stos
jae
xchg
rcrb
test
mov
mov
hlt
sub
dec
hlt
gs
test
scas
pop
push
shlb
push
xchg
jnp
cmp
jl
pop
ret
clc
les
cmp
jl
shl
rcll
mov
xchg
mov
faddl
rorl
and
rcrb
imul
add
fcomi
fadd
mov
cmp
cld
ret
repz
jae
sbb
jecxz
insl
mov
xor
inc
call
mov
in
std
and
test
imul
push
cltd
lods
ret
xchg
repz
leave
jbe
lahf
mov
nop
stos
jns
push
lods
ss
and
inc
leave
insb
mov
mov
lea
jp
fldcw
push
or
rol
lret
xor
cmp
fidivrl
loop
scas
jle
cmc
cltd
test
divl
xchg
sbb
push
or
pop
mov
or
out
push
and
or
mov
sub
mov
pushf
insl
inc
loope
mov
dec
sarb
adc
lret
ret
mov
cmpsb
fsubl
cltd
jge,pt
test
ds
pusha
orl
fcompl
cmpsb
adc
xchg
dec
cmc
nop
out
mov
push
jmp
dec
inc
mov
lods
dec
mov
and
xor
pop
adc
test
or
cld
mov
xchg
mov
fimuls
ret
push
pop
pop
incb
adc
xor
rorl
inc
xor
add
jb
sbb
repnz
jge
mov
ret
xor
jg
push
shrb
das
mov
nop
mov
xorl
pop
mov
repz
inc
repz
in
enter
xorl
repz
jne
mov
add
loope
sub
incl
sar
mov
jge
daa
mov
sahf
addr16
push
fisubs
inc
jecxz
scas
leave
sbb
shll
or
mov
lea
dec
mov
pop
lea
jg
dec
repz
and
mov
mov
pop
jp
xor
out
fsubs
mov
lcall
bound
or
out
xor
loopne
out
xchg
repnz
stc
idivl
mov
or
scas
test
ret
cld
jge
jne
std
xchg
pop
into
adc
repnz
test
jnp
adc
scas
fimull
test
orl
loop
adc
xchg
cmp
mov
xchg
ds
jnp
mov
ror
mov
ljmp
mov
js
fimull
movsb
scas
mov
pop
push
sti
mov
mov
push
dec
lea
dec
ret
jno
addr16
sahf
lret
and
popa
out
mov
mov
xor
mov
repz
xor
mov
adc
mov
cmp
sahf
scas
xor
and
xor
pop
daa
testl
jmp
fnstenv
cmp
cmp
jg
sub
pushf
adc
imul
stos
fdivl
add
dec
aam
inc
repnz
push
adc
inc
cmc
push
pop
rolb
dec
clc
sbb
mov
xorl
aad
scas
push
aad
iret
mov
jbe
add
inc
data16
or
dec
aad
mov
iret
sti
outsl
xor
in
mov
push
or
test
mov
add
fwait
sub
mov
inc
in
pop
mov
xchg
andl
out
icebp
sbb
movsl
test
lcall
stos
test
movsw
dec
push
andl
in
mov
imul
repnz
push
lea
xor
mov
or
jnp
clc
orb
call
test
cmp
andl
repz
mov
shrb
jns
mov
cmc
fnstsw
cmp
aad
push
cli
repz
mov
mov
mov
inc
cmp
or
std
enter
pop
ljmp
push
stc
jg,pt
aas
fnstenv
lea
aam
mov
cmc
jl
sbb
cli
popa
das
jns
push
mov
adc
sbb
js
push
cli
aas
xor
mov
cld
aad
in
pop
jnp
inc
add
inc
std
push
xchg
sbb
enter
push
sarb
adc
push
pop
jnp
jle
add
cli
sahf
loope
sbb
sbb
lret
sahf
pop
push
insl
adc
ficoms
inc
repnz
fisttpl
test
enter
or
fidivrs
jo
mov
aas
in
sub
pop
rcr
or
nop
jno
push
popa
mov
fsubl
test
popl
or
hlt
das
and
xor
push
popa
cwtl
mulb
mov
test
mov
and
jmp
fcoml
jg
and
imul
in
or
push
inc
xchg
popa
jecxz
push
lea
in
fdivrs
mov
fstl
fstpt
pop
fldl
popf
xchg
fwait
jb
push
ds
aas
popa
andb
jge
adc
push
jne
insb
leave
xor
je
pop
call
das
jge
mov
cwtl
cltd
mov
and
mov
sbb
sub
les
andl
mov
push
data16
mov
jbe
hlt
jge
or
addr16
lcall
lds
inc
enter
or
fwait
pop
cmp
stos
sub
outsl
movsb
inc
sti
push
lret
aas
iret
xor
sti
sbb
xor
xor
push
je
or
aas
push
push
mov
rcll
xlat
repz
leave
push
subb
hlt
stos
mov
sahf
imul
inc
icebp
fcmovnb
mov
pop
mov
ja
jecxz
popf
inc
push
enter
sbb
ret
jno
lret
leave
shlb
cld
fcmovu
sti
mov
repz
and
out
inc
mov
mov
rolb
mov
xchg
test
dec
inc
std
lcall
mov
mov
add
cmp
inc
lods
cs
test
int
mov
adc
sub
movsl
push
jge
insb
cmp
xor
mov
mov
adc
xor
hlt
lret
add
shl
add
je
mov
lods
test
test
or
repz
test
jmp
popf
aad
mov
adc
rorb
xchg
mov
cmp
leave
movsb
aas
jp
test
push
test
daa
jae
push
in
cmpsl
fistps
das
add
jns
in
mov
lcall
xor
xor
mov
test
mov
rol
shlb
cmpsl
scas
push
loopne
push
xchg
ss
cmp
mov
sub
xchg
jp
jle
xchg
mov
and
daa
pop
aam
dec
repz
pop
inc
mov
int3
inc
mov
fmull
rcr
fsubl
mov
add
test
ja
xchg
outsl
lahf
outsb
in
pop
cmp
and
inc
insl
leave
mov
std
rcll
aaa
and
mov
iret
mov
xchg
test
mov
cwtl
sahf
push
test
adc
inc
push
jns
and
aas
xchg
mov
dec
dec
mov
sarb
stos
xchg
loope
sbb
dec
push
mov
xchg
pop
dec
test
cmp
or
iret
cmpsb
sahf
inc
jnp,pn
mov
xor
lahf
pop
lret
arpl
mov
bound
enter
imul
je
sub
pop
add
roll
test
adc
xchg
jno
jmp
rclb
movsl
mov
fstl
nop
aad
push
push
adc
ret
push
insb
or
stc
stos
xchg
inc
dec
ss
sti
cmpb
add
jge
subb
nop
xlat
ror
xor
mov
nop
inc
sub
aad
lea
sbbl
ds
cmc
mov
jge
adc
push
lcall
scas
mov
sti
inc
xchg
outsb
imul
push
jns
repz
dec
daa
or
shrb
mov
test
movsl
jle
mov
xchg
subb
pushf
clc
sbb
mov
ss
jmp
xchg
xchg
outsl
cs
std
sahf
jp
cmp
test
ja
fs
pop
std
out
int3
data16
add
jo
jbe
inc
cmp
jp
pop
es
xchg
stc
or
jbe
add
lods
xor
sahf
add
cwtl
mov
jecxz
push
cmp
xchg
repnz
loopne
imul
sbb
iret
lcall
sbb
in
lods
or
std
xchg
popa
mov
loop
lods
stc
cmpsb
dec
and
mov
addb
mov
pop
push
xchg
in
add
mov
inc
imul
sahf
xchg
stos
pusha
adc
xor
fdivl
push
add
fwait
push
cmpl
iret
push
ret
loop
out
aas
push
jo
pop
jo
adc
adc
jb
int
nop
imul
mov
stos
stc
inc
sahf
movsb
push
pusha
addr16
push
mov
mulb
inc
stc
pop
dec
inc
and
dec
add
adc
cwtl
mov
or
mov
mov
das
fbstp
test
aad
xchg
inc
int3
sub
lret
or
rcl
pop
mov
add
ja
in
cmpsb
hlt
test
jb
inc
and
xchg
mov
scas
dec
xor
or
xchg
pop
jno
lds
inc
fmulp
adc
sbb
adc
ficomps
lock
or
je
enter
dec
sub
cmpsb
mov
pop
or
or
push
dec
adc
in
jbe
loopne
add
adc
jb
sub
daa
call
and
xchg
sub
pushl
adc
into
movsl
dec
xorb
cmp
cmp
mov
mov
or
push
pop
mov
jg
fmul
movsb
sbb
pop
xchg
pop
push
sbb
xor
and
mov
fidivl
roll
clc
sbb
mov
push
testl
lods
leave
and
adc
rolb
xlat
jbe
fcompl
add
iret
pop
pop
fisubl
into
or
into
push
push
add
es
mov
ret
imul
aas
jb
cmp
into
mov
push
jl
pop
mov
loopne
jecxz
ud0
push
pop
out
fsub
mov
mov
mov
sub
shlb
xor
and
jmp
test
mov
xchg
test
pop
mov
int3
cmpsb
lahf
jno
in
mov
test
int3
inc
cmpsl
mov
mov
enter
out
ljmp
mov
repz
lret
xchg
subb
outsb
je
inc
fdivl
mov
popf
std
out
add
int3
xchg
lock
xor
jo
dec
xorb
push
mov
xchg
adc
xchg
mov
fbld
mov
push
les
add
data16
mov
je
sbb
inc
sti
aam
push
xchg
jge
je
iret
testb
mov
cs
cltd
repz
data16
jl
cli
cltd
push
cld
mov
jbe
or
pop
into
inc
mov
mov
sub
push
sub
negl
int
xchg
cmc
test
push
mov
es
scas
pop
imul
fwait
pop
pop
jnp
xor
add
cmc
hlt
popa
mov
and
mov
lock
adc
mov
out
in
je
or
or
dec
icebp
sahf
inc
push
mov
enter
pop
adc
mov
xchg
call
adc
stos
cmc
in
inc
mov
cmp
cmp
xchg
rclb
leave
test
shlb
push
jbe
sbb
mov
cmp
mov
mov
jnp
je
push
insl
stos
inc
or
insl
jno
int3
cmc
filds
mov
nop
lods
enter
adc
aam
add
and
push
adc
pop
pushf
enter
mov
jne
or
andb
push
jbe
repz
aam
cmc
mov
repnz
mov
test
cld
xor
jne
aad
mov
pop
das
mov
jnp
das
js
ss
sbb
jle
and
sahf
mov
fdivr
mov
cltd
ret
inc
pop
repnz
xchg
add
bswap
imul
mov
pop
xchg
inc
and
inc
jb
inc
shrb
pop
out
std
ljmp
out
gs
call
mov
cltd
aaa
stos
cs
pop
das
dec
jmp
fstps
fstpl
push
fcoml
leave
cld
ret
cmpsl
jge
jbe
ret
pop
and
mov
mov
sub
jbe
push
inc
mov
jo
lods
scas
je
das
pop
imul
aaa
inc
cmpsb
sub
pop
sub
and
push
jl
stos
out
fnsave
fstp
outsb
ret
aam
mov
inc
jmp
int3
lret
ret
push
lcall
scas
mov
test
cwtl
data16
push
bnd
xchg
addb
mov
test
lret
add
ds
daa
mov
sub
not
pop
adc
insb
adc
add
lea
mov
or
mov
orb
inc
and
in
mov
bnd
fcomip
mov
sbb
stos
xchg
addl
add
nop
fwait
jbe
loope
mov
or
and
dec
je
and
addr16
in
dec
sbb
cmp
cmc
test
xchg
inc
mov
shll
cmpsl
xchg
iret
push
pop
outsb
sbb
divl
xor
jge
fimuls
mov
lods
out
cmpsl
cmp
mov
sti
fmulp
jo
outsl
cmpsb
inc
popf
xchg
adc
mov
fisubrl
xchg
or
cmp
pop
loop
insl
and
fstpl
cwtl
cmpsl
aas
scas
ror
pop
cmp
lock
pop
js
and
xchg
push
mov
popa
nop
orl
and
xor
mov
add
push
fdivs
movsb
into
pop
or
xchg
int3
pushf
ja
dec
fwait
ss
subl
sar
mov
cltd
stos
mov
sahf
movsl
imul
into
xchg
ficomps
add
jnp
push
lcall
fdivs
sbb
mov
insb
sub
ja
cmp
adc
cmpsl
xor
outsl
push
adc
addr16
ljmp
stc
mov
push
adc
inc
imul
cmpsb
mov
or
add
xchg
push
nop
xchg
mov
dec
dec
stos
dec
ja
mov
cld
insb
cmpsl
cli
movsl
adc
xchg
cwtl
movb
sub
sbb
daa
jmp
into
stos
sbb
stos
ficomps
mov
adc
dec
test
cli
mov
add
xor
fbld
and
aad
stos
add
adc
xchg
xor
xchg
je
adc
lods
xchg
ret
movsb
loope
flds
xor
movsb
inc
addr16
js
aaa
xchg
xchg
push
scas
inc
out
mov
or
push
adc
dec
pop
mov
add
movsl
into
xchg
push
adc
inc
or
push
and
add
imul
inc
js
pop
push
movsb
sbb
add
orl
dec
xchg
inc
mov
negl
mov
test
fidivrl
aad
js
push
xchg
inc
jg
jbe
dec
test
mov
popf
loopne
aad
or
ror
jg
out
stos
lods
out
roll
xchg
adc
push
pop
xchg
sub
stos
rolb
fwait
int3
xchg
mov
inc
or
jl
nop
jp
push
es
xchg
insb
jae
popf
into
pop
pop
cmc
ret
or
sti
cltd
add
loop
loope
pop
pusha
jge
xchg
push
imul
mov
pop
jbe
out
pop
mov
mov
adc
mov
push
xchg
rolb
loopne
push
dec
ret
sarb
roll
ret
mov
push
pop
adc
nop
cwtl
mov
in
loope
orb
mov
addr16
cmpsb
or
push
and
scas
iret
orb
xchg
xchg
addr16
aam
pop
push
enter
in
jno
imul
cld
into
repz
adc
inc
es
xlat
or
test
xchg
xlat
js
stos
mov
clc
inc
cmp
nop
mov
mov
mov
inc
lock
xchg
mov
pop
push
mov
cmpl
adcb
xchg
or
xchg
dec
sti
mov
in
repz
shrb
pop
into
sub
mov
fisubs
out
xchg
bound
mov
rolb
mov
xchg
addl
push
jge
push
adc
movb
push
mov
cmc
ret
cwtl
popl
std
pop
cmp
test
xchg
imul
imul
aad
imul
call
cli
mov
mov
decb
dec
add
int3
and
mov
in
push
or
fsts
dec
pop
xor
clc
inc
outsb
fnstenv
outsl
arpl
lock
adc
and
sbb
test
js
cltd
mov
nop
push
sub
and
or
mov
mov
mov
in
mov
sbb
or
push
mov
lcall
fildl
dec
and
shrl
es
xor
mov
pop
xlat
call
jno
gs
mov
or
les
sti
jb
add
sub
mov
cmp
lret
or
and
dec
nop
mov
and
in
or
push
jne
stc
push
push
pop
jecxz
cmp
ficoms
call
jmp
fnstenv
mov
fsubs
ret
mov
add
in
jns
push
aam
or
enter
test
cmpl
sub
fsub
xchg
sarb
mov
xor
ja
int3
lods
push
lock
jno
cli
xchg
jg
jg
add
test
shrb
adc
cmp
add
fstl
add
test
add
xchg
loop
loopne
cmpsl
outsl
popf
sahf
and
push
xchg
mov
xchg
movsl
xchg
xchg
ja
cmp
pop
add
cltd
mov
and
jge
mov
dec
addb
jno
dec
jl
stos
movb
pop
xchg
aam
or
imul
mov
jg
jl
testb
pop
pushf
mov
test
xchg
mov
imulb
icebp
mul
int
pop
cmp
into
mov
enter
outsb
mov
jb
nop
std
mov
or
lds
fwait
mov
int
out
inc
mov
push
fistpll
aad
xchg
push
lcall
cmp
mov
test
bound
sbbl
cmpsb
fcompl
adc
pop
dec
popa
jb
fs
or
adc
and
add
loop
shrl
outsb
stos
iret
std
jmp
mov
mov
lods
push
add
jg
addr16
push
loopne
add
mov
xchg
or
fidivrs
lds
rcll
push
js
rclb
insb
or
in
cmp
sub
xor
adc
pushf
push
stc
ret
inc
push
push
roll
mov
inc
sti
xchg
cwtl
or
xchg
push
inc
iret
inc
or
in
mov
shrb
cmpl
repnz
repz
jmp
sarl
sub
ret
imul
mov
mov
xor
jmp
hlt
fimuls
add
jb
test
fiaddl
or
sbb
lea
xor
loope
sar
xchg
push
pop
push
mov
sahf
imul
and
xor
xor
stos
inc
or
lcall
add
fstps
or
in
mov
push
and
sahf
mov
mov
imul
mov
shrb
jns
or
xchg
or
add
sub
dec
sub
rolb
cmp
add
sbb
aas
xchg
arpl
ljmp
cmc
or
pop
mov
mov
adc
rolb
mov
cmpsl
mov
mov
mov
dec
iret
cmp
sahf
in
xchg
mov
pusha
aad
test
and
ret
mov
sub
or
out
leave
push
sub
cmc
ljmp
lcall
and
adc
mov
xchg
pop
push
and
mov
or
jmp
sbb
cli
push
cmp
repz
fbstp
pop
mov
lods
insl
jno
adc
das
xchg
cmp
jle
jne
aas
insb
ds
fs
fucomp
adc
cld
insl
clc
jo
loopne
scas
pop
les
fsubrs
xchg
movl
jbe
mov
test
rorb
jns
push
cli
cmp
dec
sbb
ja
mov
xlat
xor
push
scas
sbb
imul
pop
jge
push
fnstcw
bound
lds
xlat
jg
addb
test
cld
lods
mov
orl
imul
les
push
pop
idivb
push
pushf
mov
dec
lahf
jns
loopne
sub
fisubl
data16
sbb
loopne
jge
addl
sti
xorl
cmp
ljmp
add
or
ss
or
jg
int3
push
pop
scas
xchg
mov
sbb
sub
ret
data16
jmp
dec
pop
xchg
cld
adc
jg
push
fldln2
jo
fisubs
adc
cmp
push
xchg
inc
repz
out
jnp
xorl
xchg
sbb
pop
dec
shl
adc
popf
mov
mov
cli
in
cmp
push
rorb
cmp
add
inc
mov
lods
xchg
cmpb
movl
std
jno
or
mov
inc
lods
test
rclb
jno
mov
jae
jg
enter
std
cltd
mov
sar
fildl
sahf
test
dec
cld
insl
popa
pop
adc
aam
and
mov
sub
xchg
data16
std
pop
fadd
loop
cmp
hlt
out
jae
mov
leave
mov
hlt
mov
test
incb
lods
andl
das
mov
inc
cli
push
xchg
data16
lods
sbb
test
addr16
lea
jl
arpl
and
enter
mov
inc
sbb
adc
ret
mov
jbe
dec
xchg
fidivrs
push
mov
dec
addr16
iret
sbb
cmp
aas
jbe
lock
push
adc
lea
or
mov
stos
xchg
mov
mov
shlb
jb
rorb
adc
mov
loopne
repz
jge
pop
hlt
rolb
test
data16
sbb
sbb
shll
and
icebp
sbb
lods
or
in
repnz
roll
insl
out
and
test
sbb
into
lds
sub
mov
mov
xchg
and
xor
or
lods
bound
subb
dec
fdivl
insb
mov
pop
flds
add
cmpsb
xor
pop
push
nop
xchg
cmpsl
mov
push
xor
add
inc
rcrb
cwtl
push
and
jl
dec
pop
addr16
jl
mov
lea
imul
pop
cltd
xlat
pop
mov
adc
sbb
sbbb
push
sub
cli
adc
sbb
xchg
mov
aam
insb
sub
xchg
cld
movsb
jge
fisttpl
jne
or
test
add
repnz
out
adcl
std
pop
push
push
mov
adc
mov
je
cmpsb
sbb
lea
jbe
pop
push
sub
dec
lds
enter
loopne
cli
xchg
test
popa
ret
movsl
inc
jge
mov
subb
aaa
sub
pushl
cld
mov
test
inc
mov
push
sub
into
sub
pop
ss
je
out
jmp
cmpl
popf
dec
enter
fisttpll
and
jnp
testl
or
das
lret
imull
std
and
aad
push
les
repz
pop
in
adcl
scas
les
pop
data16
adc
ss
iret
mov
mov
fdivrp
mov
mov
mov
js
mov
pusha
fwait
jp
pop
std
pusha
adc
push
int3
sub
aam
xchg
push
mov
xchg
push
or
imul
fldcw
dec
out
loopne
and
data16
cmp
or
cmp
test
sbb
fildl
mov
dec
imul
or
push
lea
mov
jnp
sahf
push
movsl
jp
push
rcl
mov
mov
addl
jno
and
add
add
inc
xchg
movb
jbe
test
leave
out
or
js
xchg
cmp
or
jg
or
adc
xor
shr
dec
icebp
rclb
fcoml
and
sahf
mov
adc
pop
mov
data16
xor
add
mov
or
mov
xchg
or
sub
mov
dec
pop
xor
fisttpll
aam
ret
hlt
mov
cmc
test
mov
cmp
cmp
and
push
jo
cmp
addl
mov
iret
jbe
lahf
dec
cmp
add
add
je
divl
xchg
inc
cli
push
ret
or
xchg
push
add
mov
mov
add
push
std
xor
adcb
stc
xlat
mov
pop
addl
dec
cld
in
add
adc
lcall
inc
mov
adc
jnp
xchg
pop
mov
out
adc
sti
lock
repnz
test
scas
repnz
aam
mov
mov
push
pop
xlat
imul
inc
inc
insl
push
pusha
mov
mov
xor
sahf
xor
bswap
sbb
testb
dec
xor
lods
xor
fdivs
stos
push
jae
test
add
xchg
stos
push
push
pop
jnp
lods
insl
mov
orl
shl
xchg
andb
sbb
aad
negl
mov
adc
jo
and
into
and
icebp
push
in
in
mov
or
fcmovnbe
enter
xchg
mov
repnz
fwait
or
aad
jo
push
mov
xchg
mov
hlt
leave
ret
ficoms
out
enter
jp
mov
repnz
jg
in
in
inc
cmc
cmpsl
xor
lret
stos
lds
sahf
jae
call
pop
or
pop
add
xchg
sahf
shl
mov
mov
mov
mov
pop
xor
pop
jmp
mov
sbb
lret
into
cmp
pusha
into
cmc
loope
nop
sti
sahf
inc
adc
xchg
jne
fadd
mov
adc
insl
push
shrl
xchg
cmp
inc
aam
popf
add
test
push
pushf
movsl
cmp
mov
push
cli
inc
cmp
sub
pop
mov
xchg
nop
ja
jnp
pop
arpl
xchg
cmp
mov
mov
cwtl
cltd
xchg
pusha
into
dec
mov
xchg
lds
sti
xor
rol
nop
push
nop
mov
mov
adc
mov
xchg
push
push
or
mov
addl
fiaddl
xor
lcall
dec
lret
std
jg
add
subb
mov
mov
and
mov
jge
or
insl
pop
shll
or
test
xor
loopne
cmc
pusha
xor
cmp
jno
jmp
shll
jle
lods
or
xor
push
mov
cmpl
pop
mov
mov
and
push
adcb
dec
cmp
mov
gs
ljmp
cld
mov
adc
push
cmp
xchg
cs
pop
xor
and
ret
popf
lahf
repnz
std
sarl
ljmp
aad
das
imul
sti
mov
add
xchg
iret
lret
xchg
rcrb
nop
int
jno
leave
insb
fnstcw
cwtl
jmp
mov
out
loope
pop
icebp
subb
les
stos
ror
test
xchg
rorl
add
mov
mul
ret
loop
ss
leave
jl
imul
and
inc
xchg
out
fcompl
cmp
aam
and
adc
lret
cs
test
sub
and
cld
pop
ret
or
clc
bnd
and
fldl
call
jbe
nop
and
cwtl
inc
repnz
add
mov
pop
cli
repz
repnz
jmp
mov
subb
xchg
repz
mov
lods
adc
jne
push
push
cmpsl
and
arpl
inc
lret
sub
adc
mov
push
push
repnz
leave
sub
mov
js
cmp
xor
bound
bound
mov
mov
inc
mov
mov
into
cwtl
andb
mov
inc
cwtl
out
test
push
out
roll
add
iret
pusha
cmp
fwait
iret
xor
pusha
inc
xlat
mov
xor
xchg
mov
sahf
mov
stos
xchg
and
les
mov
out
push
xor
add
mov
loopne
out
push
xlat
rolb
add
jne
clc
or
add
fbld
int3
and
sahf
test
cmp
dec
sbb
ret
cmp
mov
mov
mov
adc
es
mov
mov
movsl
pop
sbb
adc
or
stos
jno
fidivrl
jg
into
out
nop
test
movb
dec
mov
test
xchg
jg
add
mov
stos
dec
mov
out
pop
sbb
mov
push
cmp
xor
lods
xor
adc
mov
ret
or
rclb
xlat
addb
mov
comiss
fdivrs
push
xlat
stc
mov
push
pushf
inc
push
stos
unpcklps
cltd
push
pop
shr
push
push
push
andl
and
faddl
xchg
ret
push
nop
lds
adc
jl
movsl
leave
push
dec
mov
dec
xchg
or
jae
movsl
xchg
aad
loopne
pop
test
fstpl
mov
sarl
ret
shlb
call
inc
xchg
leave
xchg
sub
dec
pop
dec
hlt
jg
jbe
addb
cmp
cmpsl
rcrl
sub
jge
fcmovnbe
loope
mov
jl
jmp
mov
xchg
pop
repnz
mov
and
sub
les
sti
dec
xlat
lods
mov
xchg
cld
add
dec
xor
fiaddl
mov
stos
sbb
mov
shrl
push
lods
push
aad
and
pushf
call
cmc
out
mov
enter
fsubrs
addr16
in
mov
mov
fnsave
stc
les
and
and
rclb
jnp
aaa
inc
lods
ljmp
jg
mov
xchg
addl
sti
rcrl
add
loope
popl
data16
push
inc
sti
mov
in
aad
test
roll
jge
jg
sti
adc
adc
lods
stos
xchg
push
fbld
int
sub
push
fsts
call
fadd
xor
shll
imul
lret
jb
stc
xchg
fiadds
sbb
repnz
or
dec
sar
sbb
out
push
repz
inc
xchg
and
cmpsb
push
pusha
or
xchg
xor
imul
xchg
push
push
rcr
inc
test
dec
call
dec
add
shrl
addl
mov
loopne
call
jnp
in
adc
roll
in
sub
xor
mov
rclb
jbe
pop
aam
or
pop
cmpsl
push
cmp
gs
jmp
aaa
lret
nop
repz
test
popa
xor
xorb
cmp
push
inc
mov
pop
lahf
add
mov
inc
stos
cmc
les
test
jne
mov
jmp
adc
out
enter
sti
bound
sbb
stos
cmp
mov
imul
mov
add
imul
sbb
jo
pop
ss
and
cwtl
fistl
mov
test
test
imul
jge
cld
xchg
xchg
or
jae
inc
jo
dec
test
decb
inc
xchg
int
insb
mov
imul
js
adc
push
dec
inc
mov
jns
jne
rcrb
imul
dec
lds
scas
cmpsb
mov
pusha
push
sbb
nop
out
jb
xor
retw
dec
adc
iret
out
fwait
pop
daa
pop
fcomps
sub
or
inc
dec
jns
mov
into
shll
sti
jno
xchg
data16
mov
lods
shl
jge
add
mov
xchg
popa
xchg
mov
cmp
jns
push
pushf
add
cmp
dec
std
adc
into
jne
adc
call
stos
push
mov
push
inc
mov
jbe
or
jne
mov
insb
jno
mov
push
push
pop
inc
test
aad
pop
xlat
jp
inc
jp
inc
jl
xchg
xor
dec
lret
pop
lret
sti
ret
mov
jae
leave
sub
js
add
out
call
lahf
sahf
into
sbb
or
int
fsubrl
xlat
and
shr
sub
adc
in
ret
push
cmpb
sti
fcom
and
adc
subb
cwtl
jl
cmp
xor
out
xchg
nop
or
mov
or
pop
call
call
push
pop
sbb
cmc
xor
lods
sbb
repz
jno
xchg
test
addr16
jae
pop
cltd
mov
test
add
xor
incl
mov
xchg
push
inc
std
ljmp
pop
push
call
sahf
add
iret
insb
roll
xor
sub
test
pop
fcmovnu
cmp
scas
mov
mov
pusha
xchg
pop
mov
test
jnp
xchg
add
insl
lret
xchg
mov
fmuls
daa
cld
test
movb
sahf
jp
out
dec
mov
jge
orb
inc
mov
loopne
aas
or
gs
into
mov
cld
mov
xchg
jmp
nop
mov
std
mov
xchg
pop
nop
ds
lods
in
dec
les
cmp
adc
in
jae
scas
in
pop
imul
adc
adc
and
mov
movsl
aad
bound
shll
int3
das
xchg
lods
push
adc
cmp
rclb
ds
push
xor
sti
mov
mov
les
cmpsl
outsb
xor
stc
addr16
clc
ss
sub
out
andl
icebp
xor
sti
daa
test
push
dec
mov
stos
lods
xchg
xchg
data16
nop
push
xchg
rolb
and
out
lahf
outsb
das
leave
jl
sbbl
aam
addr16
mov
stos
mov
leave
mov
iret
mov
jp
int
add
cmp
adc
test
or
inc
rcl
mov
mov
hlt
xchg
jl
loop
mov
test
enter
adc
pushf
insl
iret
push
push
and
and
sbb
cmpl
js
js
xor
mul
or
mov
xchg
jl
and
fwait
cmp
mov
fdivrl
mov
mov
ret
dec
imul
lods
sub
jecxz
ret
test
push
test
adcl
cltd
inc
lahf
mov
pop
test
pop
inc
stc
popa
mov
dec
cmpsl
in
ret
sahf
fdivrp
test
cmpsl
add
dec
add
mov
aad
or
mov
lret
lods
hlt
jo
push
loop
inc
cmpsl
fwait
or
mov
xchg
fst
add
add
or
addl
xchg
mov
or
dec
adc
push
scas
xor
andl
xchg
pop
mov
aam
or
repnz
rolb
push
xchg
xchg
jge
mov
cltd
ja
xchg
mov
mov
sub
iret
mov
fsubrs
push
cld
or
in
mov
shlb
mov
imul
decb
inc
orb
sbb
add
xor
mov
pop
adc
in
icebp
aaa
sbb
adc
adc
rolb
dec
and
mov
lods
dec
jb
sbb
fcomp
jg
jg
aad
jb
fmull
push
nop
outsb
sbb
mov
xchg
in
pop
push
mov
xchg
out
leave
lods
inc
mov
or
iret
or
fwait
repz
dec
aaa
and
in
fadd
pop
push
jae
pusha
add
mov
push
cmp
add
inc
shrl
mov
in
mov
shll
mov
adc
aad
lret
add
mov
orb
xchg
jo
stos
sub
or
in
pop
leave
sub
jl
push
mov
aam
jmp
movsl
ja
or
mov
sbb
pop
nop
inc
jnp
fs
jae
mov
inc
inc
sub
ret
inc
rcl
insl
fdivrl
fldenv
push
subb
xchg
sub
ficoms
mov
add
jno
inc
movsl
je
pop
inc
sarb
nop
outsl
addr16
mov
leave
cmpl
in
mov
xchg
mov
in
mov
mov
adc
cmpsl
jae
dec
int3
cwtl
cmp
call
lods
ss
adc
mov
jp
les
sbb
sti
mull
push
lea
icebp
jmp
mov
arpl
or
mov
dec
psubusb
jns
mov
mov
add
shr
add
cmp
sub
nop
dec
push
add
push
ror
xor
addb
add
jb
pop
pop
add
mov
rcrl
cmp
movsl
mov
push
push
nop
mov
das
lcall
mov
cmp
mov
aam
push
xchg
hlt
xchg
mov
repnz
mov
repz
stos
rolb
jl
pop
xchg
mov
sahf
jbe
sti
push
loopne
imul
xchg
or
lahf
fisttpll
sbbb
cmp
pop
mov
pop
hlt
mov
sahf
or
ljmp
sub
and
cmpsl
ja
rorl
pop
xor
pop
stc
enter
sahf
cmp
xchg
xchg
cmpsb
push
jbe
imul
jg
addr16
fsubrs
stos
loopne
aam
stc
imul
cmpsb
jp
xorl
push
fs
mov
mov
mov
jbe
jg
or
jge
inc
cwtl
xchg
scas
rcr
jns
dec
cli
in
dec
sbb
xchg
sbbb
nop
mov
xchg
dec
xchg
mov
rcll
mov
inc
test
aam
cwtl
jno
mov
fiaddl
ljmp
lods
inc
sub
or
mov
std
lds
pop
push
outsl
jg
iret
subb
push
andl
imul
sub
xchg
inc
and
cmp
jo
sub
test
inc
lods
test
pop
add
addb
fistps
iret
inc
jg
xchg
cmp
fldl
push
push
inc
xlat
cmp
push
jno
repnz
mov
ret
jge
incl
xlat
lret
jne
lret
jg
jge
and
imul
stos
jo
or
js
push
adc
mov
mov
sbb
test
push
xchg
frstor
movsb
pop
xchg
and
adc
pop
dec
into
loop
fcompl
mov
cmc
imul
imul
ret
int3
push
cmc
aad
push
orb
cmp
lret
add
push
enter
add
stos
daa
pop
xchg
fsubl
cld
mov
mov
push
mov
inc
js
sti
lods
push
inc
adc
mov
cli
adc
jmp
sub
inc
mov
insl
lods
sbb
pop
add
imul
mov
push
je
inc
imul
or
mov
or
cmpsb
adc
js
in
mov
jge
xor
jb
subl
lcall
xchg
push
fimull
xchg
rcr
push
addr16
adc
pop
push
sub
xchg
aam
arpl
cli
jge
mull
adc
jo
lea
adc
stos
adc
test
mov
cwtl
orb
movsb
or
scas
push
lret
mov
ja
mov
insl
sub
outsl
orl
pop
mov
mov
lahf
ja
mov
add
sbbb
mov
lret
xchg
cmc
mov
and
dec
jl
and
sbb
mov
mov
mov
aam
push
xchg
mov
shl
mov
rorb
enter
adc
mov
push
int
mov
les
pop
mov
scas
cmp
mov
decb
cld
lods
or
int3
push
sub
cmp
mov
push
test
data16
or
imul
push
lret
dec
dec
imul
test
cmpsl
jbe
cld
fiaddl
mov
rcrl
inc
sahf
xchg
xchg
push
xlat
repz
mov
loop
int3
fnstcw
into
sbb
into
jne
nop
cmp
lcall
fbstp
push
and
lcall
imul
xchg
lea
mov
test
popa
mov
pop
test
mov
sub
xchg
pop
test
imul
fldenv
push
cmpsb
mov
xor
cmp
cmp
cmpsb
jg
mov
push
call
ficoms
pop
inc
xor
sbbb
imul
jl
stc
jno
xor
xchg
mov
call
mov
lea
push
jmp
cli
mov
dec
shrl
mov
insb
leave
test
adcb
subb
stc
ds
inc
ror
and
dec
imull
inc
cmpsl
mov
mov
add
subl
testb
jg
lahf
cmp
popf
cld
push
dec
jg
fs
stos
call
or
add
sbb
mov
mov
push
mov
or
flds
inc
mov
orb
ja
iret
sub
stos
sbb
mov
ds
in
xchg
into
lret
addr16
xor
mov
loopne
xor
addl
push
adc
add
cmc
mov
inc
popf
test
sarb
push
adc
ret
mov
jp
adc
test
test
lock
mov
notl
movsb
pop
pop
mov
sbb
mov
loope
lret
dec
push
pop
std
mov
jl
hlt
test
inc
movb
push
test
fwait
shrb
loop
jge
jns
xchg
cmp
push
jbe
or
push
hlt
fisubl
icebp
repnz
jns
jno
fnsave
mov
jmp
orl
jns
cwtl
mov
mov
cmp
mov
lock
mov
fldenv
int3
push
jne
aam
mov
cmpsb
cmpb
xorb
test
cld
loope
fnstenv
and
insl
adc
inc
sahf
cmp
pop
into
test
in
nop
xorl
je
jg
pushf
pushl
cmp
xor
mov
lret
iret
les
insl
loope
fldt
repz
out
xchg
xchg
xor
mov
loopne
js
rcl
movb
out
ret
mov
pop
in
jmp
and
pop
sahf
jae
sub
imul
mov
adc
push
push
test
xor
mov
mov
popf
movsl
loopne
fdivl
pop
mov
imul
mov
and
stos
rcll
inc
nop
xchg
je
cmp
std
idivl
add
in
fdivrl
push
cmp
xchg
pop
dec
sti
enter
jl
pop
cmp
sbb
lcall
mov
aam
test
rcr
jp
nop
lock
test
outsl
mov
imul
pop
mov
in
or
aam
jo
imul
cli
stos
addb
cld
test
dec
dec
or
xchg
and
cmp
repnz
addr16
stc
jne
int3
mov
mov
sub
adc
test
movb
xor
jg
mov
dec
daa
fisubrs
enter
scas
fldenv
aad
add
xchg
mov
enter
mov
shrb
inc
mov
int3
ja
test
cwtl
cld
sub
fwait
lea
xchg
pop
lea
fists
jbe
test
add
fnsetpm(287
les
xchg
push
xchg
and
jecxz
pop
or
xor
adc
nop
jp
pop
add
pusha
mov
imul
jno
nop
addl
adc
add
pop
adcl
repnz
scas
sbb
test
call
into
repz
push
js
movlps
repz
adc
ss
imul
out
movsl
pop
loop
adc
pop
adcl
push
es
cmpsl
xchg
jne
jl
sub
addl
mov
sti
lahf
mov
or
cmp
out
sbb
fwait
aam
push
cmp
inc
aam
or
sbb
inc
adc
in
xor
mov
push
xor
push
fisubs
mov
cld
movsb
mov
or
jge
fcmovu
repz
imul
fidivrl
fwait
popa
adc
arpl
xor
aad
js
xor
ficompl
cmpsb
psadbw
popa
mov
rclb
jle
mov
jg
aam
call
int
jno
add
int
std
cmp
mov
mov
pop
int
arpl
cltd
adc
imul
xchg
imul
in
xchg
cmp
sbb
mov
out
mov
enter
sub
aad
mov
xchg
or
int
jmp
dec
das
das
lahf
mov
int3
cld
xchg
fisttpll
iret
les
std
fs
cld
xor
cmp
jo
adc
test
loop
mov
test
iret
das
loopne
imul
cmc
fcomps
int3
add
push
push
lds
mov
add
inc
or
stos
fimuls
xchg
pop
jmp
ja
mov
mov
js
incl
ljmp
call
xchg
movsb
icebp
idivb
orl
out
loop
scas
sub
mov
rclb
lock
adc
push
fcomip
out
out
lahf
mov
xor
push
pop
or
in
mov
or
scas
dec
or
int
sub
sar
and
lock
push
mov
cmp
paddb
loop
test
mov
add
xchg
lahf
ljmp
lds
cld
in
sbb
mov
xor
test
xor
sti
inc
mov
imul
sub
outsl
lcall
add
cmpsl
jmp
xchg
mov
out
mov
push
into
jnp
or
lds
cmpsb
sbb
inc
fsubrs
repz
fldl
mov
add
mov
rorl
jp
pop
fstp
addr16
sarb
pushf
call
add
popf
xlat
mov
cmp
loopne
lds
add
sbb
test
push
mov
repnz
add
repnz
pop
enter
aam
dec
lea
ljmp
ret
xor
xchg
jmp
jnp
ds
dec
lret
jns
inc
aam
popw
dec
pop
lock
xchg
outsl
rcrb
lds
ja
test
fldl
and
mov
lea
repz
fadd
add
sub
std
imul
leave
inc
ds
add
movsl
sbb
mov
push
subl
iret
or
mov
test
repz
scas
es
js
into
push
and
aas
push
xlat
add
and
mov
push
xor
or
inc
les
add
add
push
mov
bound
xchg
js
push
lock
stos
aas
adc
in
repz
inc
cmc
mov
mov
nop
arpl
cli
imull
sar
fimull
das
cmc
xor
or
fs
or
xchg
rclb
popf
mov
dec
loopne
mov
repz
in
enter
dec
test
std
lcall
movsb
leave
jbe
cmp
sbb
loop
in
div
push
lret
ret
mov
mov
pop
mov
fwait
or
push
cld
sahf
xchg
fisubl
cmc
wrmsr
popl
xlat
lds
or
ret
test
cmp
out
sub
inc
fisubrs
push
lock
push
insb
and
xchg
xlat
sub
stos
mov
stos
hlt
lret
cmpsb
sbb
pop
jmp
push
test
xchg
mov
rcl
push
cli
adc
jmp
or
enter
lock
pop
mov
call
call
adcb
pop
mov
mov
push
sub
jnp
nop
add
call
out
xchg
scas
sub
inc
xchg
fs
sub
out
mov
pop
mov
cmp
adc
xor
nop
fdivl
pop
cmp
into
add
sub
rcrb
sar
fmul
adc
mov
in
inc
lds
aad
jp
rclb
push
dec
outsb
add
jne
mov
hlt
dec
jl
rolb
andb
mov
es
cmc
lock
into
mov
lea
push
js
ds
outsl
pop
outsl
push
adc
mov
aas
pop
stos
mov
jbe
adc
data16
adc
push
inc
add
hlt
or
sbbl
hlt
mov
cltd
jb
xchg
mov
rorl
in
xor
out
lods
fwait
mulb
jnp
cmp
sbb
xor
mov
inc
out
leave
stc
cld
mov
lds
xchg
aam
test
mov
test
movsl
lret
jbe
nop
sbb
jne
int
dec
in
rcr
repnz
in
push
cmp
xor
sub
rcr
pusha
inc
stos
test
mov
add
pusha
cmp
inc
xor
scas
popa
int
inc
stos
xchg
add
outsl
lods
mov
add
add
mov
clc
dec
jl
add
mulb
jbe
sbb
xchg
pop
push
push
dec
jp
or
xchg
xchg
insb
inc
out
dec
mov
sub
aad
pop
insb
pop
push
les
loope
dec
xlat
imul
push
stc
jb
lods
sub
adc
aad
clc
dec
call
sub
imul
add
add
inc
and
add
out
push
mov
inc
test
addr16
bound
cld
sbb
icebp
cs
not
stos
add
movsl
sub
addl
std
jb
and
mov
mov
adc
int
inc
jb
fsubs
test
stos
je
out
sbb
aad
mov
xchg
cmpsb
test
mov
bound
fnstsw
cld
push
mov
cmpsl
push
push
stos
ret
lea
push
subb
inc
or
jmp
pop
insb
push
and
xchg
mov
roll
frstor
adc
xchg
mov
push
xor
daa
icebp
iret
stos
out
sahf
add
push
in
sub
imul
mov
push
jl
push
inc
and
rorb
movsb
sbb
call
mov
lds
pusha
mov
data16
fmuls
dec
inc
loopne
pushf
dec
lret
or
stos
test
xchg
ret
add
mov
jl
mov
jnp
push
lods
add
ss
push
mov
cld
stos
xlat
jnp
jl
iret
and
inc
addl
cli
xor
mov
and
cmc
mov
inc
popa
xchg
jns
pusha
mov
adc
out
cld
or
imul
loop
and
cmpsl
push
cmp
cmp
pop
rol
sub
out
lahf
jbe
xchg
cmp
inc
mov
sbb
jb
jne
jo
lods
or
enter
lea
mov
mov
cmp
faddl
adc
jb
and
out
repnz
or
mov
mov
jb
xchg
sarb
push
out
mov
sub
mov
js
inc
mov
lods
sub
dec
lods
sub
add
push
jge
clc
xchg
int3
shrl
xorb
inc
mov
repnz
pavgb
xchg
cli
pop
jl
push
inc
xchg
into
ror
xchg
outsl
jae
les
fcmovne
shrb
aas
pop
and
ret
rcr
fdivr
push
int3
sub
insl
push
jb
imul
or
out
push
dec
mov
aam
loopne
jbe
cmp
pop
cmpsb
ds
dec
xchg
xor
popf
mov
mov
inc
xchg
icebp
or
in
mov
sub
cmpsb
cli
cmp
push
and
insb
insl
jae
mov
imul
dec
loop
push
addl
push
cmp
out
data16
mov
cwtl
mov
les
les
call
cltd
mov
jo
test
cmpl
inc
sti
mov
in
sbb
mov
push
xchg
adc
das
into
mov
jg
sahf
pop
add
cmpl
mov
das
sarb
xchg
inc
push
inc
shrb
frstor
cmp
pop
add
ret
imul
mov
test
jmp
mov
test
mov
cmpsl
mov
repz
sbb
cmp
mov
lds
stos
and
inc
jno
pop
pop
int
xchg
mov
or
lods
andl
xchg
ret
cmp
addl
jo
xchg
and
rcr
test
sub
push
jnp
aaa
cmc
loope
jp
bnd
in
mov
push
push
repz
xchg
pop
test
add
push
cmp
stos
outsb
mov
arpl
addr16
repz
das
inc
fldcw
xor
jno
pop
fcmovne
push
sahf
filds
pop
hlt
dec
pop
push
inc
movb
add
shll
and
stos
pop
loopne
aad
ficompl
dec
or
cmp
add
js
push
jbe
jne
xchg
mov
lcall
add
lret
repz
adc
mov
sub
jo
xchg
sahf
out
stos
js
ret
add
adcl
mov
gs
dec
xchg
je
xchg
xchg
ds
dec
out
or
mov
setle
push
cmp
sbb
jmp
out
and
mov
push
add
test
inc
orl
enter
sti
xor
pushf
in
mov
divb
mov
add
mov
pop
lahf
sti
push
sahf
out
xor
fdivr
jl
sub
ljmp
adc
fsubrl
xchg
aad
mov
xchg
into
cli
and
dec
adc
pop
out
shlb
or
bnd
dec
push
jnp
fiaddl
rorl
add
add
dec
sahf
mov
jg
sahf
cmp
adc
push
pop
adc
popa
in
lods
sub
into
sbbl
repz
inc
add
mov
mov
clc
sti
ja
mov
movsl
rcll
add
scas
xor
iret
test
mov
jmp
mov
jmp
adc
ficompl
out
and
rol
push
inc
repnz
pop
inc
leave
mov
sbb
add
or
sbb
test
inc
int
pop
push
mov
nop
xorb
insb
popa
insb
ret
sbb
xchg
pushf
xchg
adc
cs
pop
lret
jnp
cmc
leave
mov
ja
repz
mov
cli
push
les
push
mov
in
rcrl
pop
sub
jno
movsb
pop
add
mov
test
jp
dec
xor
push
jb
shrl
daa
dec
test
les
lods
mov
jp
adc
adc
adc
aad
ret
jecxz
ret
xchg
push
mov
aaa
pop
dec
sti
inc
ss
subb
into
test
add
jns
repz
shlb
add
repnz
mov
xchg
mov
lea
and
iret
mov
pop
popaw
inc
cs
mov
lds
jl
imul
inc
fsub
inc
jecxz
sar
jno
push
push
mov
out
addl
sbbb
cmpsb
adc
testl
test
jmp
je
mov
xchg
imulb
cmp
into
jnp
dec
inc
cld
cmp
imul
test
sbb
or
enter
iret
in
mov
mov
sbb
cmp
pop
mov
lret
sarl
outsb
pop
ucomiss
les
imul
mov
sti
push
add
aam
dec
fdivl
out
aam
pop
ljmp
xchg
sub
inc
std
jns
sub
dec
outsb
and
inc
mov
cltd
inc
mov
inc
in
or
or
testl
mov
add
mov
fimull
lea
sub
orl
push
js
jbe
int
js
mov
es
int
adc
mov
bound
lret
sbb
mov
xchg
stos
outsb
cmpsl
xor
mov
adc
or
mov
inc
mov
jne
add
sub
and
dec
xor
or
andl
adc
xchg
inc
pop
fisttpll
lock
dec
cmp
cmp
int3
cmc
aas
cmp
stc
jbe
sbb
inc
jb
std
shrb
ljmp
pop
jp
dec
push
aam
adc
cmp
dec
sti
push
jns
mov
test
imul
jg
sub
sub
xchg
push
xchg
xor
xchg
xchg
mov
cmp
push
cwtl
xor
xchg
rorl
ret
js
je
push
aad
inc
dec
jbe
scas
dec
sbb
push
lahf
or
adc
inc
xchg
insb
pop
movsl
add
and
popf
or
bound
ljmp
gs
loopne
loop
icebp
int
out
jp
mov
dec
test
jl
or
push
xchg
mov
repz
push
mov
push
repz
jmp
sbb
fnstsw
sub
mov
call
and
jmp
scas
cld
out
sbb
or
insl
out
imul
aas
out
cli
mov
sub
lods
sbb
loop
mov
jns
or
xchg
push
cwtl
add
sarl
divb
iret
test
and
push
cmp
push
insl
mov
movsb
jmp
lret
and
add
mov
xchg
inc
mov
push
lahf
dec
mov
popa
mov
pop
add
into
mov
jbe
mov
addr16
dec
sbb
fadd
jmp
push
mov
out
xlat
loopne
mov
xlat
or
xlat
enter
pop
lret
cmp
xchg
jg
sub
sahf
sub
fsubrs
and
ret
pop
dec
enter
adc
nop
aam
and
int
shl
pop
stc
mov
addl
popa
sub
jge
mov
movsl
cld
xchg
or
pop
jnp
xchg
loopne
lret
or
xor
dec
adc
ret
pop
dec
xchg
stos
imul
ficomps
push
jmp
pop
ljmp
dec
shl
xor
xchg
mov
aad
mov
or
imul
stos
jns
or
call
aam
les
in
cmp
mov
inc
cmpsl
lcall
test
repnz
fcmove
push
sbb
jo
push
xor
mov
cmp
shrl
pop
push
lea
sbb
in
cmp
jae
aas
lret
in
cmp
hlt
mov
repz
push
xor
cmp
out
mov
or
rcll
or
lock
cmp
pop
movl
mov
ds
jp
ficoml
adc
push
cmp
cli
xchg
movsl
cmpsb
fstps
push
mov
out
imul
adc
mov
add
addr16
adcl
mov
scas
test
cmp
in
dec
xchg
dec
pop
lret
mov
sti
xchg
jg
sbb
ljmp
or
lahf
sub
insl
stos
add
imul
jae
test
test
loop
sbb
dec
movsl
jp
lock
pop
out
fs
outsl
mov
jp
xor
adc
jl
stos
pop
xchg
data16
test
mov
repnz
mov
leave
xchg
into
add
mov
mov
mov
mov
repnz
mov
mov
imul
push
add
pop
movsb
cld
rcl
data16
jno
xchg
lcall
mov
fwait
pause
mov
test
fwait
mov
in
jecxz
inc
or
adc
mov
inc
add
xor
mov
repnz
clc
mov
nop
xchg
cld
jecxz
jecxz
std
addr16
out
or
jns
push
dec
push
andb
or
lea
fwait
data16
push
js
lcall
and
dec
movsb
push
testl
aad
cmp
nop
gs
mulb
mov
dec
jo
cld
push
ret
ss
out
xchg
mov
lods
pop
mov
in
ret
fucom
xor
int3
popa
in
and
inc
fdivs
jbe
pop
xchg
mov
inc
mov
aam
xchg
lock
sbb
mov
cli
lods
arpl
repnz
mov
mov
push
inc
sub
iret
dec
mov
mov
imul
incl
stos
push
push
or
jge
mov
lret
aad
cltd
cmp
fistpll
sti
pop
lods
pop
cmp
mov
sub
cmp
bound
test
cld
movsb
shl
pop
movsl
pop
xchg
inc
pop
popa
fnsave
mov
push
add
out
jns
ds
pop
jo
div
add
mov
ret
mov
inc
insb
mov
xchg
int
ss
loopne
sbb
and
decb
addb
ss
repz
rcr
mov
or
add
xchg
call
jae
or
test
dec
mov
and
popl
sbb
mov
das
mov
ss
inc
sub
mov
xchg
call
pop
pushf
popa
push
cmpsl
testl
in
into
mov
cmp
iret
push
sbb
mov
mov
jae
mov
mov
mov
add
jne
sbb
out
xchg
cmpb
cmp
rcrl
adc
adc
loope
inc
mov
jmp
int3
test
mov
lcall
push
sub
into
mov
jbe
stos
sti
andb
rcrl
scas
jne
or
or
jmp
sar
data16
mov
push
xchg
xchg
adc
les
lds
mov
std
mov
clc
scas
jns
dec
lods
cmpb
js
pop
mov
mov
out
daa
sbb
cmp
mov
inc
jge
push
dec
adc
mov
xchg
call
jbe
int3
insb
pop
rcrb
adc
clc
fcoms
adc
pusha
mov
lret
subb
out
outsb
mov
and
or
dec
mov
movsl
fstpl
data16
push
mov
inc
adc
jp,pt
movsb
fisubl
lea
pop
dec
mov
call
inc
ds
jge
fwait
testb
out
leave
dec
lods
sub
test
mov
lods
stos
cmp
or
xor
rclb
mov
jl
jg
test
mov
or
test
cmp
fmul
ss
rcrl
fdivrl
and
inc
cmc
adc
inc
dec
fstl
mov
sub
aam
imul
pop
out
jne
dec
movsb
push
xchg
push
push
or
pop
gs
inc
orl
push
dec
inc
leave
add
movsl
test
cmp
pop
shl
insb
adc
xor
nop
fldt
xor
and
insl
mov
dec
ljmp
lods
push
out
fdivl
lahf
mov
mov
mov
push
stos
push
inc
push
jp
xchg
dec
ja
dec
cmpsb
addr16
lcall
pushf
test
mov
xchg
ret
jbe
dec
add
shll
faddl
pop
and
adc
in
clc
enter
pop
lahf
cld
mov
jmp
xchg
xchg
movsl
add
mov
mov
std
xchg
in
mov
nop
mov
pop
ret
pop
cmp
push
mov
int3
addr16
add
aam
push
inc
xchg
andl
mov
movsb
sahf
xchg
sbbb
into
mov
dec
jb
test
xchg
test
xchg
sbbb
push
sub
mov
sarl
test
or
and
jg
or
jg
xor
movsb
subl
stos
dec
mov
fdivs
hlt
fcmovnb
mov
mov
popa
dec
int
pop
bound
mov
je
call
lcall
pop
jecxz
sarl
cmp
outsl
test
scas
pop
jp
bound
dec
repnz
jg
pop
adc
jns
xchg
inc
gs
cmp
or
or
or
mov
int
adc
cmp
stos
loopne
jae
ret
stc
inc
mov
pop
add
dec
xchg
dec
std
cs
pop
sub
imul
jge
js
scas
stc
push
mov
or
jmp
fldenv
adcb
xor
pop
imul
pop
nop
push
jmp
mov
fldt
popa
mov
mov
mov
aas
jmp
mov
mov
lret
repnz
rolb
popa
mov
jmp
outsb
add
dec
ret
out
imul
mov
mov
out
iret
dec
stos
push
mov
or
sahf
loopne
das
setnp
aam
mov
adc
sbb
sub
push
fadds
sbb
inc
add
movsb
add
les
lret
xchg
subb
adc
sub
lods
stos
mov
fwait
lcall
loope
pop
mov
and
or
add
jle
mov
lds
xchg
pop
inc
xchg
imul
push
mov
xchg
mov
in
scas
popa
mov
mov
dec
cmpsb
inc
loopne
nop
lret
jle
test
jae
or
ja
aas
mov
inc
xadd
xchg
sti
test
xchg
jp
sub
stos
lds
inc
xchg
or
int3
add
jecxz
xchg
mov
push
loop
and
iret
and
sbb
sarl
cmc
add
cmpl
jb
xor
push
rolb
loope
std
enter
mov
dec
xchg
xchg
fistpl
imul
aad
insb
out
into
aam
mov
xchg
mov
and
mov
pop
pop
lods
cmp
sub
sub
adc
add
jnp
mov
sbb
cmc
mov
inc
in
repz
ror
pop
lods
inc
ljmp
adc
ret
jle
dec
aas
insl
push
in
enter
cmp
sbb
lock
js
in
or
cmp
fidivrs
sar
and
pusha
int3
lret
cmp
and
iret
and
loopne
ret
out
in
cwtl
add
adc
js
or
xorl
sub
test
jp
leave
cmpsb
pop
lock
xlat
pop
sbb
mov
and
xchg
in
cmp
jnp
xlat
je
lock
jns
xchg
sbb
push
cmp
mov
out
mov
mov
inc
push
xlat
mov
dec
or
push
call
cmp
mov
mov
and
leave
push
cs
dec
lods
jne
sbb
fildl
in
cmp
dec
mov
adc
out
outsl
pop
loopne
outsb
jae
mov
mov
aas
add
lret
outsb
push
pop
jbe
pop
aas
xchg
cmpl
and
pop
adc
rclb
xchg
xor
jecxz
lcall
fdivrl
ljmp
ss
movsl
jbe
adc
pop
cmpsl
push
add
mov
push
xchg
xchg
or
cmpsb
jg
daa
inc
lods
pop
inc
loopne
sahf
jae
das
sbb
stos
data16
cmp
mov
orb
inc
test
and
or
xor
test
adc
call
test
add
fnsave
std
push
fmul
xchg
jb
stos
imul
test
ror
and
jp
or
and
dec
js
mov
pushf
mov
fisttps
add
es
test
mov
push
mov
insl
test
scas
pop
and
nop
cmpsb
fstpl
es
jl
pop
sti
add
or
in
leave
push
mov
popf
loop
mov
in
aad
ret
cmp
pop
xchg
sub
sub
into
pop
mov
mov
push
ja
mov
xchg
sub
cmp
xchg
mov
cmp
push
cmp
iret
aas
xor
mov
sbb
mov
cs
jbe
xor
xor
out
stc
decb
mov
or
cmc
mov
push
daa
les
out
inc
sub
dec
xorl
notb
pop
jae
dec
pop
andb
jbe
push
lock
lods
repz
fsubrl
xchg
push
adc
push
roll
ljmp
push
rcrl
xor
pop
or
jnp
shlb
mov
mov
daa
lahf
cltd
fidivs
repz
cs
in
fs
int3
lcall
jnp
pop
cmpsl
mov
inc
and
cmpl
hlt
jl
out
arpl
shlb
test
sbb
jbe
in
lea
fstpl
ret
inc
roll
mov
dec
jbe
pop
imul
popf
aaa
sarl
xchg
std
scas
dec
test
out
mov
xchg
xchg
sbb
mov
fcomp
or
call
push
jne
cmpsb
nop
icebp
movb
pop
movb
inc
xor
add
xchg
jne
xchg
ret
repz
call
sbb
into
cmpsl
inc
pop
cld
aam
and
dec
shll
mov
sahf
cmp
jl
and
lods
jb
push
into
mov
sbb
leave
fstl
cmp
mov
lcall
cmp
xchg
leave
outsb
js
cli
mov
jl
lea
jae
std
mov
dec
arpl
push
scas
lahf
repnz
stos
mov
adc
jl
sbb
xchg
push
bound
aad
je
jbe
pop
imul
xchg
shll
jae
inc
adc
adcb
out
xor
mov
adc
movsl
mov
loopne
adc
rcrl
or
outsb
xchg
add
cmp
stos
fdivs
sbb
jle
ljmp
dec
ret
iret
jo
stos
push
mov
push
mov
jbe
inc
into
cmpl
cmp
xor
xor
hlt
ds
dec
xchg
in
jbe
leave
inc
sbb
lahf
mov
pushf
in
and
mov
and
rorl
or
pop
in
or
aad
pop
mov
bound
add
loopne
test
sahf
cmp
mov
lea
std
cmpl
test
push
int3
cmp
out
mov
into
pushf
ret
push
call
dec
or
jmp
in
jecxz
cmp
sbb
imul
or
mov
or
mov
lods
jbe
mov
adc
add
fwait
shrl
push
mov
pop
sarb
sub
mov
cmpl
lret
push
pop
and
or
adc
test
adc
into
imul
orl
call
xchg
dec
cmp
js
sub
rcrb
mov
test
xlat
adc
sbbb
cmc
out
outsl
lods
push
xchg
mov
push
repnz
inc
lods
mov
mov
push
nop
lods
adc
aaa
sub
das
loope
adcl
mov
ja
icebp
mov
cmp
push
jb
sbb
push
xor
inc
std
mov
cmp
outsb
movsl
stos
push
cwtl
mov
int
pusha
add
dec
push
xchg
jae
mov
dec
sbb
mov
dec
stc
push
aas
imul
and
stc
cmpsl
jmp
dec
xchg
mov
push
sub
pop
xchg
jnp
adc
or
in
push
pop
jbe
push
and
testl
mov
add
outsb
adc
test
mov
mov
dec
cs
sbb
popf
mov
dec
or
iret
inc
or
and
cli
leave
pop
popf
lds
jbe
mov
mov
cmpsb
mov
je
add
lahf
pop
shll
cmpsb
int3
scas
adc
incb
and
loopne
xchg
rolb
add
imul
das
pop
ljmp
ds
xchg
into
xchg
jge
mov
and
xor
sub
adc
xor
xchg
xchg
repz
pop
pusha
pop
lcall
popf
scas
ljmp
test
shrl
dec
cmp
fisubrl
lds
add
add
sti
mov
test
inc
js
push
or
mov
dec
sbb
xchg
mov
out
dec
adc
cmp
pop
push
cld
and
mov
cltd
mov
repnz
fldcw
or
cmp
inc
movsb
ret
xchg
nop
add
addl
jae
push
jmp
push
xchg
js
push
mov
data16
pop
lods
sub
test
adc
mov
pop
sbb
xor
jo
enter
lods
cltd
add
hlt
stos
dec
jae
push
jg
xchg
imul
mov
repz
xchg
int
fistpl
pop
andl
push
mov
lcall
adc
out
daa
sbb
in
popw
imul
push
loop
mov
adc
popa
negb
pop
enter
scas
hlt
fucomi
mov
jg
fld1
push
cltd
inc
outsl
std
and
and
jnp
add
jmp
enter
sahf
xchg
fdivrs
mov
xchg
pushf
add
test
xchg
push
out
sub
adc
scas
clc
mov
mov
fsubrs
aad
out
gs
notb
push
popf
xchg
or
sub
sbb
inc
int3
pop
xchg
pop
mov
stos
rcrl
cli
dec
add
xchg
jbe
mov
nop
shrb
xor
mov
testl
add
int3
xchg
xchg
mov
fstpt
cmpsb
std
sub
orb
cs
and
lcall
out
or
xchg
cmp
lock
mov
test
mov
push
cli
scas
or
cmpsl
fsubrs
data16
push
insb
mov
cmp
pop
imul
ret
bnd
jmp
int3
imul
mov
dec
cld
cltd
push
mov
jl
mov
fidivl
imul
rclb
adc
pop
sbb
inc
js
sbb
pop
or
and
stos
xchg
sti
popl
mov
jl
shll
aas
fidivrl
jg
or
call
fidivrl
lds
push
test
jb
data16
and
ja
and
inc
ret
xchg
mov
inc
add
aaa
mov
iret
mov
out
imulb
arpl
cmpsb
mov
jb
loop
xor
jle
jb
mov
fimull
int
loopne
outsb
ja
mov
andb
or
mov
jne
add
adc
mov
sbbl
jne
lahf
outsb
mov
aas
out
cmp
mov
movl
cli
js
imul
fwait
push
das
leave
insl
enter
repnz
aas
test
ret
mov
mov
lret
mov
xchg
imul
cld
mov
sbb
xor
xchg
push
popa
icebp
xchg
jmp
mov
enter
imul
repnz
cltd
adcl
mov
int3
fidivrs
dec
nop
xchg
imul
fcmovnb
fsubrl
call
sahf
jbe
mov
cmpb
pop
out
or
dec
movl
sti
mov
lcall
movsb
xchg
or
sbb
mov
inc
repz
ds
fxch
jecxz
and
scas
push
nop
ss
sub
stos
push
adc
push
test
mov
lret
mov
dec
cmp
test
gs
repz
cmpsl
sub
xchg
xchg
xor
dec
scas
xor
test
rcl
adc
filds
fcoml
xchg
sbb
les
movsb
mov
dec
rcll
jmp
mov
daa
mov
cmp
inc
cmp
out
in
add
scas
dec
test
xchg
mov
pop
loopne
mov
loop
pop
jo
fisttps
jp
dec
dec
jp
lcall
in
push
std
mov
jb
push
push
mov
les
repz
stos
std
push
mov
pop
subb
fildll
int
pop
cli
aam
and
push
and
dec
fisubrs
pop
das
roll
shll
mov
mov
out
xlat
mov
loop
cli
imul
int3
pop
pop
xchg
aas
sti
cmp
fmuls
sarl
clc
shr
cmp
xchg
sub
inc
jg
call
mov
int
mov
fsubrs
repz
test
cmp
push
ss
repnz
int
cs
es
push
inc
fimuls
jno
into
lret
idivb
jg
cmp
cld
arpl
ja
inc
mov
enter
xchg
mov
mulb
repnz
in
dec
jge
dec
lcall
mov
test
xchg
xor
push
sub
cmp
jmp
cmp
fisubrl
lcall
mov
mov
sti
movzbl
fsubs
jns
jbe
adc
mov
push
mov
mov
sub
cmp
sub
push
fnsave
mov
pop
sbb
fidivs
cwtl
repnz
aaa
or
fisubrl
mov
push
int3
outsb
cmp
daa
add
shrb
push
adc
xor
jp
mov
ljmp
mov
cmp
xchg
ret
test
mov
mov
and
orl
cmpl
xor
stos
sub
out
xchg
xchg
jo
cltd
xchg
ljmp
stos
jle
pop
jmp
sbb
sub
cld
dec
dec
pop
adc
sbb
cmp
jns
jb
test
mov
add
das
adc
add
mov
push
repnz
test
mov
fsubrs
test
shl
imul
xor
pop
faddl
add
and
xchg
mov
push
inc
mov
sti
mov
test
and
cmpsb
into
mov
pop
pop
mov
mov
mov
inc
mov
nop
addr16
out
into
cwtl
mov
je
shll
in
jnp
jle
push
and
xor
or
test
insl
hlt
cmp
mov
xorb
pushf
arpl
add
dec
jmp
adc
dec
fsub
cwtl
xchg
mov
pop
stos
les
push
and
mov
mov
enter
push
call
inc
or
hlt
xor
rcl
mov
or
push
ss
adc
mov
out
test
test
cmp
add
rcl
fwait
jg
cmpsl
lret
jbe
mov
jb
xchg
xchg
push
stos
add
outsb
into
rol
fdivs
cltd
cmp
sbb
es
outsb
pop
add
sbb
inc
jge
sub
xchg
scas
inc
cmp
ljmp
inc
adc
ret
int
stos
mov
repnz
pop
js
daa
fwait
notl
enter
push
sbb
and
cmpsw
mov
je
mov
xchg
mov
mov
push
jns
lea
rcr
jmp
ret
leave
roll
rcl
mov
idiv
sub
roll
test
test
fsubrl
xor
adc
jnp
push
addr16
jp
inc
fcmovb
pusha
xor
jg
data16
push
adc
pop
loopne
mov
mov
into
xchg
xor
dec
pop
je
insl
xchg
xchg
cld
jns
bound
jo
popa
add
dec
dec
loopne
addw
hlt
clc
jmp
mov
mov
push
pushf
nop
cmp
fisubrl
mov
add
jo
imul
xchg
sub
into
mov
test
es
ljmp
xchg
inc
ficompl
jecxz
xchg
cmp
xor
nop
out
or
xchg
cmp
aad
aaa
sub
sar
push
pop
fs
arpl
aad
in
pop
pushf
clc
test
js
fists
sbb
cmp
sbb
aad
pop
rclb
mov
fnstcw
or
push
cli
or
push
popa
movsl
pop
jle
adcl
sbb
inc
fstps
in
lahf
mov
mov
bound
add
sub
add
cmp
movsb
push
mov
movsb
mov
push
scas
push
cli
mov
imul
scas
and
incb
add
inc
cmpsl
push
inc
mov
insl
mov
sbb
mov
into
mov
ja
push
in
dec
xchg
mov
data16
xlat
mov
rclb
js
in
ds
cmpsl
add
lret
mov
add
push
sahf
pop
xchg
xchg
mov
dec
mov
pop
mov
inc
inc
mov
and
push
mov
das
nop
repnz
mov
push
xchg
cs
testb
sbbl
mov
xlat
decb
insb
push
cs
push
addr16
dec
jecxz
adc
iret
mov
cmp
sbb
xor
mov
nop/reserved
shrl
or
movb
or
iret
push
pop
xchg
rcr
rcrl
add
sub
fcomps
shlb
jne
bound
incl
in
inc
or
xchg
sbb
adc
outsl
mov
stos
xor
add
sahf
sti
dec
data16
adc
push
or
push
or
push
cmpsb
addr16
cwtl
bswap
loop
in
in
shlb
sbb
outsb
lock
fs
pop
lcall
aad
movsb
leave
pop
xor
sbb
jno
mov
rolb
cmpsb
jb
imul
outsl
push
aad
in
mov
data16
mov
outsb
ret
out
xchg
loopne
adc
xor
cmp
cmc
lods
mov
xchg
decl
rorb
push
sti
aad
add
call
imul
faddl
ret
adc
repnz
test
or
mov
xor
jge
jae
mov
sub
mov
ja
and
aad
nop
fstpt
add
jl
lds
cmpl
cmc
and
adc
das
outsb
loopne
jns
negl
xchg
sgdtl
jne
ret
xlat
into
rclb
mov
mov
xchg
lea
fld
mov
or
adc
ja
adc
shrl
xchg
pop
add
push
or
jb
jb
xor
xor
mov
lahf
aas
outsb
mov
mov
fnstenv
xor
adc
jp
stos
or
dec
mov
mov
sahf
xchg
pop
mov
notl
adc
mov
into
add
mov
add
fnstenv
nop
call
fwait
cmp
xchg
sbb
data16
addr16
pop
sti
loop
lods
or
mov
pop
hlt
les
dec
cmp
add
cmpsb
iret
mov
nop
shl
mov
aad
stos
stos
mov
add
subb
out
outsb
mov
push
ret
mov
cmp
dec
es
movl
fcoml
cmc
daa
lods
add
sahf
jmp
imul
or
mov
pushf
mov
xchg
add
push
mov
inc
dec
nop
sbb
sti
and
frstor
push
popf
test
leave
testl
inc
bound
xchg
test
movsl
pop
dec
pop
orb
stos
data16
test
cli
mov
xchg
lea
nop
sarb
jmp
jp
cmpsb
jbe
call
sarl
movsl
sbb
imul
sub
mov
xchg
addb
lcall
lods
sti
sub
mov
lea
xchg
xor
dec
enter
push
xchg
jae
add
in
leave
pop
bound
mov
addb
std
shl
xchg
mov
lods
outsb
cmp
sub
pop
mov
lea
xchg
ret
xchg
xchg
insl
xorb
mov
ss
lret
mov
xchg
inc
or
mov
es
nop
das
loop
sbb
pushf
imul
shlb
aam
outsl
or
sbb
les
adc
mov
jge
test
dec
pop
sti
dec
mov
sub
xor
cwtl
mov
jns
lods
pop
fwait
addr16
jl
cmpsb
stos
mov
scas
addr16
mov
lods
outsl
ret
and
pushfw
rclb
mov
orb
cli
jp
jnp
addb
jo
ret
ret
andl
es
test
jne
pop
mov
xchg
adc
fisttpll
add
outsb
xor
not
xor
mov
adc
mov
jb
cmp
popa
addr16
imul
cmc
fs
xor
insb
push
push
out
jl
loop
ja
jns
imul
popf
call
cld
push
loopne
xchg
mov
sub
shll
mov
and
aam
mov
and
hlt
insl
arpl
jmp
shll
lds
mov
addl
adc
mov
lahf
insl
adc
inc
out
adc
mov
push
jnp
and
add
xchg
mov
mov
xchg
adc
fcomip
mov
pop
push
pop
shrb
or
data16
pop
sub
mov
xchg
cli
lcall
insb
xchg
cmp
push
xchg
mov
mov
xchg
lret
push
adc
mov
leave
jge
mov
add
les
sbb
daa
aam
stos
repnz
cmp
jb
add
enter
fsubrl
sub
push
stos
lods
cmp
mov
xchg
test
mov
icebp
cmp
inc
cld
int
add
into
rcrl
cmp
inc
imul
mov
sub
cmp
push
test
and
mov
loopne
xor
sarl
xchg
out
das
pop
insb
sub
jl
fisubrs
in
hlt
dec
call
ret
add
cld
testb
mov
ljmp
cmp
js
fildl
push
addb
call
mov
addl
xchg
mov
jae
cmpsl
push
adc
dec
mov
sbb
mov
cmp
loopne
pop
mov
xchg
cmp
or
jne
dec
mov
outsl
gs
xchg
mov
dec
jbe
jl
mov
jge
rorl
repnz
cltd
into
or
sub
mov
add
add
shlb
sbb
fcoml
jnp
inc
roll
adc
repnz
fdiv
pop
popa
xor
pop
test
push
inc
push
mov
mov
mov
repz
clc
cmp
loop
pop
dec
mov
add
imul
enter
inc
dec
mov
add
adc
mov
out
dec
pop
insl
dec
out
sahf
lea
mull
jg
mov
inc
mov
subb
fmull
enter
xchg
push
lea
cmp
add
adcb
or
out
adc
jbe
mov
fnsave
dec
jnp
mov
stos
lods
lea
lcall
push
pop
jge
and
sub
pushl
jge
fstl
gs
dec
mov
aad
and
mov
sub
xor
rolb
inc
push
sahf
inc
sahf
dec
int3
outsb
fs
sahf
pop
mov
or
data16
pop
xorb
outsb
and
aad
mov
cmpsb
jge
int3
in
and
movhps
test
xchg
cmp
adc
sahf
mov
jo
push
sbb
jge
in
dec
lret
std
ja
dec
adc
push
mov
xchg
mov
adc
mov
mov
subl
push
jnp
das
add
dec
xor
flds
punpckhwd
shlb
mov
xchg
call
test
xor
insb
and
imul
xchg
insb
cli
shl
inc
or
xchg
je
or
push
roll
aad
les
negb
mov
jmp
adc
inc
js
fsqrt
popa
pop
mov
sti
push
and
jl
leave
out
xor
push
cmp
and
divb
das
lods
mov
ret
out
add
jmp
fsubrl
mov
rorl
int
sub
xor
pop
stos
and
in
xor
inc
dec
andl
dec
in
mov
test
imul
xchg
xchg
push
addb
mov
jne
sahf
rclw
leave
subl
ret
subl
out
out
cmpsl
shlb
sahf
inc
mov
mov
push
lcall
fldcw
test
insl
jnp
jmp
adc
mov
push
pop
add
pushf
xlat
or
jb
aam
dec
test
inc
xor
flds
jne
fisubl
cwtl
inc
adc
sbbl
sub
hlt
inc
outsb
cli
jg
xchg
add
psubusw
xchg
test
pop
mov
sti
or
or
mov
add
cmpl
js
aam
pop
vprotd
mov
int3
cmpsb
or
mov
xchg
les
fdivrl
mov
loop
add
jg
jmp
test
fwait
cld
adc
loopne
or
jp
and
inc
adc
ss
push
cs
mov
or
jns
ret
cmpsl
sub
xor
cmp
int3
stos
mov
push
orb
idivb
sahf
pop
xchg
add
lahf
orb
in
and
call
jne
popa
or
scas
pushf
out
int3
lret
push
pushw
or
and
repnz
and
leave
sti
and
xchg
and
ror
jns
adc
dec
pop
cmp
int
test
xchg
jp
into
les
xor
pop
inc
cltd
mov
or
mov
lcall
fiadds
xchg
loop
and
stos
mov
rcll
adc
jnp
pop
add
xchg
testb
ss
lods
outsl
js
add
les
or
stos
adc
mov
xor
push
aad
sti
aad
mov
sub
mov
addr16
sub
mov
out
loop
push
xchg
movsb
sub
in
into
mov
rcl
movsb
cmp
in
mov
cmp
mov
ror
ret
pushf
repz
stc
push
mov
push
movsl
xor
mov
push
push
push
repz
jle
ja
std
mov
sbb
cs
incb
mov
jb
mov
incl
sahf
std
repnz
mov
mov
xchg
push
repnz
mov
sub
lcall
sbbb
mov
xchg
sarb
adc
cmp
add
dec
lahf
addr16
jge
pushf
push
jl
pop
add
es
sbb
stos
aad
adc
or
jle
push
pause
aam
inc
mov
xchg
fistpl
hlt
mov
cmp
in
or
mov
or
adc
jge
clc
repnz
faddl
mov
pop
clc
xchg
rolb
addr16
loop
shl
into
test
sbbl
xchg
lea
xchg
roll
or
xor
add
nop
and
mov
addr16
cmc
sub
test
jnp
popa
sbb
sub
sub
cmc
add
lcall
mov
jbe
pop
cltd
jbe
out
bound
xorb
or
mov
rorb
xchg
daa
jecxz
xchg
inc
dec
test
cmpl
mov
xchg
lods
adc
jp
dec
add
orb
mov
pop
cmp
add
or
xor
pop
rol
cmp
bound
xchg
cmp
ss
fstpt
test
test
loopne
jg
aad
push
mov
cmc
adc
mov
and
adc
inc
push
pusha
loopne
in
testl
jecxz
into
cmp
rorl
into
adc
rcr
mulb
inc
jl
cmc
cmp
add
adc
mov
mov
mov
xor
je
cmpb
jb
xchg
pop
bound
shrl
shr
in
mov
mov
repz
mov
jo
repz
addr16
dec
das
or
rorb
lret
mov
popf
std
arpl
mov
push
add
cmc
or
inc
nop
iret
insl
ret
mov
inc
sbb
loop
pop
cmp
jecxz
jo
push
cld
cli
sub
add
lock
jb
push
outsl
ds
ret
cmpsb
sti
fcmovbe
cmp
ret
sbb
sbb
fidivrl
enter
flds
jl
ss
push
sub
sbb
cmp
fldt
inc
out
sti
and
xchg
lahf
addr16
outsl
mov
out
jecxz
inc
dec
mov
movsb
push
sahf
mov
add
ret
nop
fnstcw
gs
jmp
and
mov
and
push
mov
add
add
shll
movsb
mov
jmp
lods
push
push
ficoml
addr16
dec
pop
cmp
clc
xor
or
lods
push
inc
shll
rorl
inc
push
jp
mov
push
lea
pop
icebp
adc
outsb
jo
cmpsl
or
mov
jne
jmp
int3
shll
insb
xchg
sub
and
cmp
fs
frstor
int
adc
std
movsb
call
jo
fcoml
xchg
test
cmpsl
push
rcll
test
shrb
addb
xchg
in
shl
nop
testl
jno
std
jbe
jbe
and
mov
imul
xchg
into
jo
xchg
push
lret
data16
mov
cltd
xor
inc
addb
sbb
data16
xor
sti
les
out
sub
xlat
stos
mov
push
jl
pop
into
ja
xor
xchg
call
adc
test
pop
ja
nop
push
aam
popw
or
mov
sub
add
pop
bound
daa
cmpsb
bound
jb
lds
leave
jbe
mov
sti
add
xchg
push
lret
sub
int3
push
or
xchg
enter
sub
mov
leave
jb
cli
into
mov
mov
mov
int
push
mov
xchg
repz
ret
div
insl
ss
push
dec
mov
cwtl
xor
jecxz
pop
mov
mov
or
xchg
mov
lret
push
inc
outsb
dec
inc
add
inc
mull
inc
xchg
push
ja
movsl
repnz
or
test
xor
into
js
fs
xor
addl
mov
jg
loope
mov
pop
fsub
scas
xchg
push
mov
xorb
xchg
into
sahf
mov
lret
rolb
add
cld
inc
movsb
add
aam
mov
leave
stos
frstor
cli
mov
pop
sti
scas
lock
mov
repz
inc
pop
xor
sub
cld
mov
sub
aad
shrb
mov
xor
lcall
ret
daa
icebp
pop
inc
aad
cltd
mov
mov
pop
and
pop
pop
cmp
pop
adc
lret
sbb
pop
subl
lret
movsl
xor
inc
dec
inc
cli
fildl
mov
ja
push
xorb
jbe
dec
lret
aad
push
divl
nop
es
imul
jnp
xacquire
stos
cltd
clc
adcb
mov
mov
push
daa
fcoms
xor
xor
rcll
cmp
lods
cmpsb
jbe
sarb
or
fsubp
xchg
stos
js
addr16
frstor
repz
cmpl
push
lods
jns
push
movsl
shrl
enter
mov
inc
sahf
push
adc
mov
mov
xorb
ret
ret
testl
lahf
popf
push
xchg
mov
testb
sarb
pop
js
xchg
mov
loop
xchg
loope
or
dec
repnz
mov
mov
push
jnp
mov
mov
sub
daa
js
pop
loopne
mov
push
inc
pop
inc
mov
cmpsb
xor
dec
inc
lret
stos
sub
cmp
xchg
jo
sbb
dec
imul
jecxz
push
leave
add
mov
into
mov
cmp
mov
lea
enter
adc
cmpsb
js
xor
push
pop
aaa
cli
cltd
and
dec
orl
cli
jns
xchg
dec
test
stc
cmp
xor
loopne
cmp
sub
lea
call
cli
jno
lods
leave
jns
push
into
xchg
add
push
inc
je
mov
mov
xchg
arpl
mov
mov
mov
je
mov
daa
cltd
or
lea
nop
jp
and
mov
iret
lret
push
inc
je
lods
in
mov
pop
test
lahf
dec
sbbb
in
sub
cld
and
data16
lds
jne
mov
pop
je
adc
daa
mov
movsl
repnz
stos
ret
addr16
in
lcall
data16
or
repz
aam
clc
jge
rcr
mov
or
push
inc
mov
fdivs
mov
ret
ja
mov
mov
popa
mov
out
stos
xchg
dec
imul
jge
in
cmc
gs
bound
ss
dec
lret
orb
mull
mov
setae
mov
int3
xor
jle
ja
aad
mov
mov
loop
mov
stos
enter
repz
pop
cmp
bound
je
sbb
fsubs
fldl
dec
or
push
mov
sub
sbb
add
orb
dec
pop
sub
xor
data16
sub
xlat
inc
jnp
addr16
xchg
xchg
stc
mov
or
xor
xchg
mov
adc
mov
in
lea
push
rclb
push
sbb
dec
cmp
xchg
lods
adc
dec
repz
sahf
dec
cmp
pusha
repz
sbb
push
cmp
cmp
cmpb
test
and
in
mov
or
scas
lcall
mov
sub
xchg
xor
push
jbe
inc
sar
jno
xchg
push
outsl
fucompp
xchg
dec
movsb
cli
mov
dec
jns
push
adc
jns
test
enter
mov
pop
dec
cmp
and
xchg
mov
sub
mov
roll
jge
shlb
mov
mov
cwtl
cmpb
mov
sahf
mov
test
xor
pop
push
add
cmp
xchg
daa
cmp
mov
mov
addr16
jne
inc
mov
into
jns
or
push
cmpsb
mov
shl
push
push
push
repnz
inc
ror
push
inc
jae
or
jge
jg
fsub
enter
sbbl
dec
jae
sbb
dec
mov
mov
loopne
cmp
enter
jp
mov
leave
bound
inc
cmpsb
or
aam
mov
add
mov
adc
add
sbb
mov
fstl
push
bound
adc
lods
out
out
adc
xchg
pcmpgtd
or
fldl
xchg
cmpsb
adc
add
jl
outsb
ret
jmp
aad
adc
mov
outsl
and
xchg
negb
jne
or
movsb
je
xchg
scas
stos
add
sub
sti
jno
pop
data16
cmp
pop
call
out
scas
in
inc
out
into
adc
inc
divl
xor
add
xlat
nop
data16
mov
and
xlat
call
xor
inc
cmp
neg
jns
mov
mov
pop
fwait
jge
repnz
push
std
push
out
jg
into
add
sbb
mov
xchg
mov
jge
adc
push
outsl
lock
insb
addb
cmp
fs
sbb
outsl
sub
iret
inc
imul
int3
inc
sub
mov
insb
je
jne
dec
push
shrl
mov
subl
or
sbb
outsl
jg
mov
inc
movsb
outsb
mov
cwtl
fldt
jno
xchg
rclb
stos
mov
mov
xor
cmp
mov
ror
inc
push
sti
bound
test
jae
mov
or
in
push
sub
je
add
pop
mov
xor
xchg
pop
or
inc
cltd
leave
sub
add
repnz
and
push
outsb
xor
jp
jno
into
mov
push
push
filds
leave
push
lods
cmp
pushl
lock
rol
out
test
dec
xorl
aad
jns
jecxz
jae
xchg
push
subl
dec
xor
loopne
test
mov
xor
sahf
mov
mov
or
cli
scas
xchg
adc
pop
or
aas
sahf
pop
add
or
xchg
cmp
fsts
pop
mov
xchg
fbld
imul
fsubp
or
jg
mov
mov
insl
push
mov
jecxz
inc
xchg
lret
bound
stos
pop
jle
ret
pop
jg
loop
jmp
xchg
lea
sbb
lretw
ds
dec
xchg
sarb
vmwrite
pop
add
jno
pop
dec
enter
cld
cld
xorl
mov
rcll
cmp
xor
mov
fdivrl
out
inc
pop
sti
mov
sahf
sub
mov
out
mov
mov
push
jno
jb
sub
mov
xchg
push
cmp
test
sahf
jmp
ja
repnz
mov
je
inc
xchg
add
lcall
xchg
out
cmp
jbe
mov
pop
movsl
rcrl
movsb
inc
sbb
or
or
inc
je
fcoms
sbb
xorl
jnp
mov
xchg
xchg
out
fstps
mov
add
test
fimuls
add
mov
repnz
roll
mov
pop
mov
mov
sub
shrb
in
dec
adc
into
lret
test
sarb
pop
imul
mov
add
ret
in
fwait
mov
rol
into
adc
imul
xchg
hlt
mov
sbb
shrl
xchg
lea
inc
mov
xchg
bound
pop
nop
xchg
call
push
mov
push
notl
dec
imul
arpl
mov
daa
jg
mov
push
rcrb
int3
test
push
pop
pusha
movsl
push
push
in
mov
xchg
lahf
pop
cmp
and
popa
int
aam
repz
stc
sti
and
aaa
sub
cmpsb
fisttpll
fnstenv
loop
dec
cmp
add
adc
mov
addr16
lock
mov
out
lahf
js
sub
jnp
inc
adc
pop
nop
dec
sbbb
insb
cmp
lret
inc
mov
jnp
xor
sub
adc
xchg
clc
pop
nop
arpl
arpl
cmp
scas
jne
add
jo
and
mov
rcrb
leave
outsl
movsb
xchg
xchg
xchg
and
sbb
insl
lahf
cli
cli
xchg
loope
int3
jns
in
adc
add
and
faddl
mov
pop
stos
mov
imul
mov
cmp
mov
loop
push
es
adc
inc
mov
mov
and
mov
aam
shl
jo
xchg
jnp
lahf
jbe
and
add
push
push
mov
cmpsl
fwait
mov
lods
jae
andl
inc
mov
nop
repnz
mov
add
pushf
push
xchg
test
mov
mov
push
mov
aaa
into
cmc
ss
jns
repnz
data16
sub
mov
push
mov
mov
mov
aad
add
push
insl
inc
test
or
mov
xchg
in
test
int3
inc
nop
leave
jl
pusha
inc
dec
popa
xor
cli
pusha
pusha
add
add
enter
stos
notb
mov
ljmp
push
add
jl
xchg
pushl
nop
int3
mov
ret
lds
adc
inc
xchg
out
cmp
jp
sahf
xchg
iret
inc
and
out
cmpsl
pop
test
xchg
mov
cmc
mov
cwtl
inc
mov
xchg
pop
xchg
cmpsb
pushf
frstor
pop
mov
xchg
shrl
lods
xor
mov
mov
lcall
sub
es
jns
mov
imul
in
mov
movsb
inc
cmc
adc
or
bound
loopne
push
push
or
jp
sbb
mov
or
inc
dec
out
stos
xchg
cmpsl
adc
out
imul
adc
sub
jb
int
mov
lret
outsb
call
hlt
repz
test
fstpl
inc
test
mov
in
dec
hlt
popf
inc
or
test
lcall
xchg
cmpsb
call
adc
imul
pop
or
fadd
js
jg
call
pop
mov
mov
inc
ds
ret
sti
out
rcl
insl
cmp
or
outsb
add
adc
mov
cli
xchg
add
aas
mov
pop
xchg
test
int
vpcomb
or
hlt
fsts
movb
mov
dec
rolb
js
je
xor
jno
and
and
rcr
int3
mov
ljmp
cmpl
mov
xor
dec
leave
mov
es
cmp
push
xchg
je
or
addr16
repnz
sub
lcall
xchg
push
fwait
and
xlat
inc
sbb
push
mov
fwait
int
inc
sahf
repz
cmp
test
sbb
lcall
mov
mov
ret
inc
mov
or
out
rol
out
mov
mov
xchg
jg
cs
mov
outsb
das
and
mov
xor
mov
mov
inc
pushf
ret
push
xor
xchg
pop
stos
xchg
insb
pop
ficoms
ret
ror
scas
lret
lods
mov
ljmp
mov
add
into
cs
int
cld
ret
test
loope
jmp
aam
mov
jg
out
jbe
adc
inc
mov
pop
add
mov
aam
fisubrs
ret
pop
mov
mov
xor
sub
sbb
nop
in
int3
mov
cwtl
mov
mov
nop
inc
mov
push
mov
pop
ficoms
mov
sahf
mov
aaa
andb
movb
sub
sbb
pop
notb
movzbl
mov
nop
inc
mov
or
pop
lret
mov
mov
xchg
inc
cs
and
scas
xor
dec
mov
loop
sbb
xchg
scas
inc
xchg
psubusb
jg
inc
pop
mov
sbb
dec
psubsb
mov
nop
test
mov
mov
pop
adc
mov
pop
mov
ret
pop
mov
ret
call
pop
adc
inc
lret
rclb
daa
sar
ja
enter
nop
add
jp
outsb
mov
pop
xor
or
cld
mov
filds
dec
nop
xor
sub
adc
add
pop
mov
xchg
xchg
pop
or
sub
sbb
pop
les
xchg
push
mov
outsb
mov
rsqrtps
mov
xchg
scas
fcoml
mov
movsb
scas
cwtl
xchg
subb
enter
xchg
nop
mov
movsb
nop
jb
cmp
adc
add
bnd
pop
rclb
push
jbe
data16
mov
mov
pop
int3
nop
mov
setl
ret
pop
ds
mov
mov
pop
ret
mov
nop
mov
ret
pop
inc
nop
mov
add
mov
xchg
cmpb
adc
xchg
loopne
pop
mov
mov
inc
xchg
push
mov
push
scas
rorb
xchg
cmpsl
loop
xchg
inc
es
jg
or
lea
xchg
setne
mov
pop
xchg
cmp
inc
and
pop
mov
pop
and
xlat
andb
lret
mov
test
xchg
pop
cltd
xchg
xor
add
inc
xchg
push
mov
movsb
mov
dec
cmpsl
bound
cmp
adc
repnz
add
pop
sub
bound
jo
orb
ret
pop
nop
aam
loop
testb
mov
pop
dec
nop
bound
mov
pop
lret
mov
add
pop
cmp
dec
mov
jb
orb
ret
pop
enter
call
mov
pop
pop
nop
outsb
mov
pop
lcall
int3
push
jg
idivl
in
out
pandn
push
clc
jecxz
shl
loope
xchg
shl
inc
mov
in
cltd
rclb
sbb
xchg
arpl
add
lock
inc
lret
in
add
aas
add
jne
out
or
mov
loop
out
scas
shr
lret
repz
jle
push
in
aad
ret
mov
loope
or
cmp
and
aad
xchg
inc
xchg
jg
add
lock
repnz
icebp
and
cmpsb
mov
mov
xchg
call
repnz
xchg
add
xchg
out
sar
shlb
sbb
push
ds
imul
out
mov
pop
sar
mov
dec
mov
sbb
in
jmp
add
mov
out
mov
out
cmpsl
or
push
xchg
xor
div
jae
jnp
out
fbld
and
ror
inc
mov
inc
icebp
sub
clc
rcrl
or
adc
cmp
push
push
mov
in
lock
mov
out
nop
and
lret
lret
xchg
dec
sahf
push
mov
lds
shrb
enter
test
mov
lret
in
loop
sub
loope
xchg
loopne
adc
ficomps
in
cmc
icebp
ret
leave
stc
rorb
push
jg
aad
jb
lahf
je
hlt
testl
or
mov
inc
testb
fnstsw
ret
mov
shr
pop
popf
loop
stc
cmpsb
shlb
add
hlt
mov
repz
icebp
and
loop
sbb
cmp
in
shlb
push
mov
add
in
xchg
dec
add
fistps
cmp
ret
shl
clc
loop
sbb
mov
cld
movl
icebp
and
push
jg,pt
dec
iret
pop
pop
mov
lret
cmpsb
xchg
setp
inc
shr
clc
mov
imul
dec
movl
pop
cmp
cmpsl
loope
and
inc
aad
sub
movsb
out
test
imul
outsb
repnz
cmp
pusha
adc
xor
scas
dec
cmp
in
xchg
leave
push
into
in
shl
xor
push
mov
mov
clc
pushf
rcr
xor
add
or
mov
pushl
movsl
fwait
out
shrb
add
imul
andl
repz
inc
and
mov
mov
xchg
mov
hlt
inc
call
xlat
xchg
sarb
sbb
enter
xchg
popa
xchg
addr16
ljmp
mov
imull
aas
mov
adc
shll
icebp
jge
jno
aam
xor
aad
cmpsb
or
jne
icebp
out
lcall
mov
nop
loope
subb
in
push
dec
mov
xchg
push
pop
and
add
inc
sbb
xlat
movsl
push
in
sbb
mov
push
cs
jns
rcrl
mov
pop
add
out
pop
mov
inc
adc
add
hlt
xchg
ret
push
mov
daa
fimull
and
cmp
pusha
in
inc
dec
das
xchg
mov
jmp
orb
sbb
push
jecxz
dec
mov
divl
into
add
in
filds
push
fcmove
and
std
jg
jecxz
int
mov
stc
out
mov
into
loopne
sbb
jmp
cmpsb
mov
iret
add
pop
lret
movsb
pop
sahf
das
mov
gs
lea
popf
adc
or
mov
jmp
fwait
xchg
stos
sbb
mov
sti
jecxz
jg
xor
lds
out
adc
pandn
in
loope
ss
cmc
fbstp
sbb
push
dec
ret
test
pushf
push
stos
add
mov
push
add
mov
jg
leave
arpl
jecxz
mov
div
cmc
dec
mov
xor
lahf
out
leave
jae
je
cmc
push
mov
mov
ljmp
loop
dec
add
xor
std
adc
les
mov
cmpsl
fiadds
or
adc
inc
or
cmpsb
xchg
sahf
inc
mov
fmulp
mov
je
shll
mov
repnz
push
movl
aas
dec
insl
pop
nop
fcmovnb
inc
shl
addl
test
repz
sti
rcrb
andl
fwait
mov
in
pop
mov
push
insb
pusha
stos
jecxz
cltd
mov
lret
lret
loop
nop
iret
inc
cmp
nop
pop
nop
xchg
loop
fadd
pushf
orl
loop
pop
xor
mov
repnz
xchg
push
mov
out
into
aas
ret
adc
into
in
and
xchg
ljmp
repnz
in
jge
push
inc
dec
mov
loope
flds
test
push
lcall
dec
nop
add
cmp
leave
adc
jecxz
or
sbb
movsl
out
mov
sub
xor
out
cltd
ret
jmp
gs
dec
ret
lock
outsb
mov
icebp
push
insb
cld
xchg
and
test
loop
outsl
in
fldz
into
cmp
mov
mov
lock
rorl
push
mov
pop
inc
lret
push
into
lods
out
ja
pop
popl
jnp
xor
sahf
add
int3
orb
push
and
adc
pop
and
mov
xchg
xchg
mov
jg
mov
xchg
pop
mov
mov
in
mov
sbb
in
cmp
pop
and
pop
xchg
pop
sbb
in
mov
rclb
sarb
mov
fadd
mov
xorb
addb
fildl
jb
in
repz
in
jae
mov
pop
or
xor
xchg
ret
adc
sub
pop
into
add
mov
stos
out
psubsw
mov
call
mov
mov
cwtl
adc
jecxz
adc
movsb
push
push
inc
pusha
mov
lret
mov
fdivl
arpl
dec
aam
pusha
sub
xchg
xor
sbb
add
std
mull
sbb
jecxz
mov
into
out
loopne
mov
icebp
gs
das
xor
in
and
stos
repnz
std
adc
sarl
cmovl
mov
enter
xchg
loope
inc
cmp
xchg
stos
lods
data16
mov
push
cmpsl
jle
cmp
add
dec
lods
repnz
test
dec
push
cmpsl
rol
es
repz
int3
or
inc
out
adc
aam
inc
mov
jge
hlt
stos
fdivrs
aad
xor
and
shrl
stos
adc
mov
das
or
inc
xchg
inc
stos
cmp
imul
arpl
inc
xor
mov
cmpb
pop
loope
into
sbb
ret
ret
xorb
stos
cwtl
pop
into
mov
shrl
or
lret
out
dec
xchg
outsb
mov
cmp
out
into
iret
ss
repz
jmp
mov
jne
cmpsb
push
repz
cs
and
out
fs
sbb
pop
shl
mov
leave
jg
fsubp
call
andl
mov
in
leave
int
xor
xchg
xlat
insb
inc
dec
xchg
add
mov
dec
lods
das
loopne
mov
movsb
shll
arpl
fidivs
xchg
mov
inc
negl
jno
aam
lahf
cmpsb
xchg
add
push
xchg
lea
inc
mov
in
sub
enter
sub
mov
bound
jg
movsl
stos
clc
adc
mov
sarl
loope
test
lret
mov
sbbb
iret
lret
adc
rolb
mov
mov
adc
mov
roll
stc
add
lea
mov
icebp
in
stos
jnp
add
adc
cmpsb
sbb
std
fsubs
aaa
dec
xchg
mov
js
push
mov
imul
mov
adc
int3
loopne
shll
clc
mov
stc
cmp
adc
out
add
lods
xchg
xchg
push
dec
out
xlat
mov
scas
xor
out
arpl
cmp
stos
ret
aas
dec
loop
jmp
mov
sahf
or
in
loope
pop
mov
test
rorb
cmp
in
or
je
repz
loop
mov
mov
es
inc
pop
bound
sub
movsb
ret
cmpsl
cs
jnp
adc
cmp
ret
ret
not
pop
aam
ds
insl
loop
hlt
out
testb
inc
mov
shl
jp
test
iret
cmp
mov
lea
jg
pop
inc
mov
push
out
in
xchg
out
dec
pop
add
rclb
mov
xchg
push
test
sbb
add
repz
cwtl
rcrb
ret
sahf
xchg
mov
jno
inc
adcl
add
mov
pop
rcrb
shlb
lods
nop
xchg
int
inc
mov
pushf
adc
pop
loop
xchg
dec
rcrl
lock
aam
mov
pop
mov
pushf
xchg
orb
mov
sbb
inc
mov
push
sub
repnz
out
loope
icebp
rcr
in
add
jg
loop
nop
cld
and
insb
pop
adc
nop
pop
outsl
in
mov
call
mov
bound
roll
lret
pop
inc
adc
xor
std
inc
lock
idivb
jge
xchg
and
mov
cmp
sub
lock
xchg
notl
or
pop
mov
enter
mov
sub
mov
mov
das
les
add
jg
js
ja
cli
jbe
push
addr16
inc
insl
movb
or
xchg
popf
test
jb
addl
sbb
scas
fidivl
jg
xchg
int
mov
pop
jmp
es
mov
mov
pushf
enter
or
inc
stos
cmp
xchg
xchg
pushf
jl
mov
outsb
inc
cs
jg
or
into
mov
int3
dec
xor
sahf
int3
xchg
sbb
loop
cmp
cmpsl
pushf
imul
rcll
fisttps
adcb
enter
je
jecxz
dec
adc
test
inc
mov
xchg
aam
clc
std
paddq
sub
mov
outsl
cltd
int3
mov
arpl
sbb
mov
and
push
in
imul
cmp
aam
jmp
xor
aas
lds
out
insb
test
std
mov
cwtl
ds
add
fucomp
sub
insb
mul
mov
js
mov
out
ret
icebp
das
lods
movl
inc
lret
xor
stos
shl
push
test
push
lock
push
cmp
ljmp
out
fucomi
inc
fldenv
mov
out
xchg
jnp
mov
aam
xor
nop
ljmpw
push
movsb
mov
push
inc
stos
out
jl
add
fnstenv
mov
xchg
rolb
loope
jp
lcall
jg
pop
pop
mov
adcb
mov
xor
popf
pop
push
scas
cmp
mov
call
pop
negb
xchg
lods
or
addl
add
popl
ss
arpl
mov
stos
cmpsl
scas
sub
mov
mov
push
jg
mov
pop
popf
mov
fsubl
jmp
jb
adc
inc
pop
les
mov
inc
or
mov
ss
push
push
lret
mov
fdivs
push
mov
sar
neg
dec
ucomiss
fsts
inc
push
lcall
int3
mov
out
loop
out
mov
xlat
cltd
mov
mov
mov
cmpsb
mov
setp
jbe
bound
xlat
xchg
cltd
inc
inc
pop
stos
jb
cmpsb
fimull
mov
data16
jp
dec
pop
push
inc
movsb
negb
push
rcrb
ret
xor
pusha
sub
fwait
pop
aam
mov
mov
pop
cmpsb
scas
push
adc
out
dec
inc
outsb
and
mov
xchg
pop
lock
xchg
pop
out
push
mov
scas
rorb
mov
push
mov
lcall
negb
scas
mov
cmpsb
mov
pop
dec
lahf
movsb
cmpsb
leave
mov
xchg
ds
in
cmpsb
movsb
cmpsb
ficomps
mov
mov
nopl
mulb
mov
xchg
add
out
adc
ljmp
push
mov
test
push
fcompl
push
inc
add
test
or
mov
in
iret
mov
ret
xchg
sti
pop
cld
outsl
dec
pushf
ret
rcrl
jg
dec
andl
nop
loope
push
pop
std
outsl
pop
andb
ret
repnz
xchg
cmpsb
ret
add
dec
add
into
fnstenv
test
or
cmpsb
inc
push
push
fisubrs
sub
outsl
dec
pushf
ret
add
dec
pushf
cmc
ja
inc
ss
stos
outsl
pusha
xor
andl
xchg
cmp
mov
into
mov
pop
scas
inc
xchg
pushf
mov
cmpsb
orps
scas
dec
aas
mov
pop
sub
popf
test
nop
or
test
sub
mov
test
inc
xchg
push
outsl
lret
clc
aad
push
adc
cmp
xchg
push
xchg
fisubs
lock
cmpsb
cmpsb
xchg
dec
inc
sahf
scas
xchg
xchg
push
and
rcrl
xchg
push
or
xchg
bound
dec
or
xchg
xchg
scas
sahf
push
xchg
data16
imulb
and
pop
pop
sahf
xchg
lcall
mov
push
data16
div
ss
outsb
jg
push
bound
jbe
sahf
push
or
mov
bound
mov
mov
push
ucomiss
insb
xchg
jge
das
mov
xorl
jbe
pop
xchg
mov
mov
xchg
push
mov
sahf
or
jbe
adc
cmpsl
xchg
push
scas
loop
movb
lret
mov
and
mov
loop
addl
out
xor
mov
mov
adc
pop
pushf
ret
pop
out
and
and
mov
mov
mov
lcall
ret
rorb
sub
insb
pop
fucomi
jle
in
data16
sub
int3
xchg
popl
mov
loop
fildll
add
sub
or
mov
test
or
sbbb
in
into
loop
fistps
mov
loope
xchg
push
lahf
sahf
mov
rcrl
push
push
nop
mov
jmp
nop
mov
push
dec
xchg
xor
or
pop
in
inc
and
cmpsb
mov
sahf
or
mov
das
xchg
gs
mov
in
lahf
shlb
mov
sarl
out
push
shl
ljmp
jmp
pop
shrl
shll
push
cmovp
xchg
arpl
jecxz
scas
cmp
xchg
daa
or
push
orb
and
and
cwtl
outsb
adc
lret
cmp
add
push
fsts
int3
addr16
dec
jg
inc
xchg
mov
xchg
mov
enter
and
cmp
and
mov
sahf
xchg
mov
xor
mov
pop
push
pusha
loopne
fdivs
xchg
fstps
jecxz
fidivl
pop
push
scas
shr
insl
popa
push
out
sbb
add
cmpsb
lret
jp
cmp
sub
and
rcrl
addl
orb
inc
or
xchg
testl
push
adc
jg
pop
imul
testl
pop
xchg
sbb
lahf
cld
push
fistpll
and
pop
sbb
frstor
jl
xchg
push
mov
and
out
cwtl
hlt
arpl
data16
fnstenv
mov
pop
mov
iret
addl
fisttpll
xchg
pop
pop
ja
scas
cld
repnz
jge
imul
xchg
pop
mov
xchg
loope
xchg
mov
xor
adc
cwtl
sahf
xchg
lret
fucomp
icebp
mov
jg
ljmp
out
mov
daa
dec
std
pop
mov
sub
gs
loope
fldl
ret
add
out
repnz
jecxz
in
mov
test
les
rcll
ljmp
fbstp
arpl
lret
xchg
fistl
mov
add
cmp
in
mov
sbb
lock
ss
adc
mov
fcomip
add
movsb
into
xchg
shl
hlt
jo
loopne
or
loopne
shl
push
les
xchg
xchg
add
nop
jecxz
ret
in
and
add
adc
or
sahf
jg
xchg
ljmp
pop
dec
adc
in
pop
repz
xor
loope
or
add
lock
cmpsl
out
mov
out
out
scas
lret
mov
into
xlat
ror
dec
lea
and
push
mov
mov
mov
repnz
dec
rol
cmp
xor
sub
xchg
icebp
repnz
pop
and
stos
cmc
sti
bound
add
sbb
lret
jecxz
sub
daa
movsb
out
loopne
in
nop
shl
push
and
arpl
mov
add
jp
jg
rcl
in
movsb
popa
mov
out
mov
fbld
mul
fs
add
mov
xchg
out
sbb
and
pop
jae
xor
xchg
adc
pop
dec
push
out
cmpsb
jp
inc
nop
out
loopne
ss
cmp
adc
mov
jle
and
sub
mov
mov
jle
xchg
in
mov
inc
ja
xchg
push
push
lret
push
loopne
test
and
cmpb
rcll
roll
dec
scas
mov
aad
xchg
fmuls
mov
scas
mov
icebp
push
andb
ficompl
movsb
adc
fnstsw
adc
mov
xlat
rol
das
cmpb
test
fcompl
fcomip
repnz
sahf
es
addb
insb
nop
sbb
adc
scas
sarb
add
mov
jo
adc
roll
adc
outsl
aam
rol
fs
adc
shl
jecxz
inc
push
clc
sub
xchg
lret
icebp
fildll
ljmpw
lahf
xchg
xor
cmpsl
xchg
mulb
jo
ja
lcall
mov
repnz
inc
in
or
cld
dec
dec
xlat
insb
bound
mov
jg
leave
xchg
mov
xchg
or
dec
push
cmp
xor
or
and
push
xchg
enter
jmp
rcr
ss
stos
aam
adc
icebp
pop
sbb
push
repz
lcall
lock
scas
xlat
mov
stos
rcll
clc
mov
movsb
aad
out
adc
push
out
in
fidivrl
rorl
sbb
lcall
mov
int3
fmuls
les
movsl
cwtl
popf
pushf
mov
ljmp
mov
push
ss
inc
scas
mov
ret
mov
sahf
pop
scas
lahf
div
nop
test
cmp
lret
pusha
sbbl
push
adcb
sub
sahf
cmc
lods
push
jns
mov
mov
shl
repz
dec
push
repz
jmp
divb
ret
ss
js
enter
enter
cwtl
xchg
int3
lock
aam
cld
nop
cmc
sbb
and
mov
lahf
or
pop
imul
cmpsb
loop
mov
loop
push
and
in
adc
push
lock
cmp
pop
jo
nop
repz
daa
mov
in
add
ljmp
icebp
or
les
jmp
and
hlt
loopne
ljmp
js
std
out
sbb
repnz
jbe
xchg
lret
out
ret
fwait
push
sub
push
cmp
fistpll
ljmp
add
adc
push
scas
ss
loopne
mov
sahf
testb
lret
lock
les
popf
mov
jbe
dec
scas
adcb
mov
cmpsl
adc
xchg
mov
fisttps
xchg
mov
adc
cli
out
push
ds
das
outsb
push
popf
add
xchg
push
fistps
sahf
andb
mov
and
mov
adc
adcb
pop
xchg
hlt
sti
mov
push
roll
hlt
leave
cmpsb
fldenv
dec
mov
jle
lahf
test
cmp
add
fadd
loopne
push
xchg
jae
movb
pop
mov
xor
cmpsl
aas
mov
sahf
cmpsl
mov
pusha
cmpsb
sahf
in
inc
push
test
sahf
mov
jo
in
bound
sub
xor
adc
div
push
les
and
xor
or
add
push
in
adc
fisubs
ret
jecxz,pn
stos
into
mov
neg
in
out
add
inc
xchg
mov
out
cmp
aaa
xchg
ja
icebp
jle
dec
jo
les
out
dec
adc
or
aad
xchg
push
mov
lock
inc
xchg
lret
dec
pop
sub
out
shlb
xchg
xchg
les
push
sbb
xchg
repz
outsb
fstl
push
inc
shlb
pop
mov
lods
push
or
xchg
xchg
mov
movb
push
push
mov
xchg
mov
xchg
scas
adc
sub
ret
add
enter
ret
add
shrb
and
push
jg
stc
mov
stos
mov
dec
xchg
push
mov
lret
ret
adc
jbe
jmp
in
out
js
sarl
fdiv
test
out
mov
in
jno
out
xor
fildll
mov
lods
sub
and
incb
sahf
lcall
cmpsb
bound
or
mov
pusha
insb
cmpsb
in
add
dec
nop
push
arpl
popf
jns
jnp
mov
mov
in
gs
popf
lret
out
push
dec
stos
scas
scas
add
sbb
fwait
loopne
imulb
jle
xchg
xor
int
and
xchg
xchg
xchg
and
mov
faddp
nop
ret
lret
mov
out
fsubr
sub
rcrl
cmp
testb
int
int3
pop
insl
cld
fs
leave
dec
in
bound
sub
fnstenv
shrb
or
add
clc
sub
jp,pt
ror
lret
xlat
cmp
jnp
roll
mov
jecxz
adc
jmp
adc
mov
xor
inc
push
add
push
clc
mov
test
mov
stos
hlt
aad
mov
add
jmp
sarl
sbb
xchg
pop
dec
xlat
daa
cli
negb
sub
xchg
imul
lret
ret
mov
adc
cmpsl
cld
and
std
rorb
mov
scas
cmp
cld
vpaddb
mov
dec
jnp
sbb
insl
dec
pop
aam
int3
push
xor
inc
pop
mov
sbbb
hlt
inc
inc
popf
in
adc
mov
lret
fsubl
push
add
jge
xor
in
lods
stos
mov
and
xor
dec
push
ret
push
mov
sahf
loope
pop
mov
dec
mov
xchg
pop
lret
xchg
orb
mov
pop
movsl
fnstcw
push
out
fdivp
or
mov
aam
xchg
sub
lret
sub
cmp
xchg
jbe
cmpsl
adc
mov
scas
roll
jno
loop
pop
add
rcrb
mov
mulb
mov
xchg
and
fbld
clc
push
fcmovb
pop
imulb
out
jbe
jmp
add
in
jmp
cmc
insb
push
addl
test
aam
push
and
stos
lock
repnz
pop
nop
pop
xchg
outsb
es
cmp
js
add
lcall
mov
mov
adc
mov
cmpb
aad
ret
inc
lret
rorb
xchg
lds
and
jns
cltd
xchg
cmpl
lock
push
movsl
fsubrs
xorb
out
daa
pop
mov
or
mov
movsl
push
shlb
jbe
mov
mov
or
pop
mov
xchg
and
shlb
lcall
xchg
leave
push
adc
fdivl
push
xchg
inc
xchg
movsl
xchg
nop
xchg
movl
cs
repnz
leave
push
mov
es
enter
inc
jbe
sub
push
cmp
leave
out
dec
xchg
add
xchg
mov
ss
jg
lods
mov
outsl
out
popf
lea
es
adc
pop
fidivrs
xchg
out
movsl
xor
cmp
leave
sbb
inc
pop
jl
mov
mov
xchg
movsl
data16
xchg
mov
out
sub
outsb
mov
mov
push
jbe
loop
loop
loopne
dec
mov
int
or
pusha
dec
nop
xchg
scas
inc
xchg
loop
loopne
fwait
or
and
xchg
push
or
lds
out
dec
xchg
xchg
ret
mov
setle
mov
test
in
out
test
inc
decl
into
adc
daa
xchg
into
lods
and
ret
outsl
movsl
out
or
bound
lret
testb
nop
out
fisubrs
fmulp
icebp
test
add
jp
dec
dec
sbb
mov
mov
lea
mov
xchg
insb
lcall
mov
add
xchg
addl
xor
xchg
push
adc
ret
or
mov
sub
mov
cmp
xchg
mov
inc
rclb
into
popl
fisubs
sub
xchg
enter
addb
orl
mov
pop
nop
ret
sahf
setno
ret
cmp
cwtl
ret
pop
mov
aad
lret
testl
dec
jp
inc
mov
pop
xchg
cmpsb
ret
pop
xchg
cli
mov
sbb
mov
pop
icebp
inc
xchg
test
stos
loopne
xchg
sbb
push
mov
lret
addb
mov
into
mov
rclb
aad
pop
cli
ljmp
out
mov
test
incl
add
pop
cmpsl
nop
sbb
mov
fimull
and
lds
dec
sahf
inc
push
bound
mov
lock
adc
fldl
in
lret
insb
ds
jmp
xor
stos
mov
int
mov
loopne
jg
ret
pop
fcoms
xor
mov
scas
xchg
mov
mov
imul
sub
jg
mov
out
sahf
enter
int
lahf
out
jg
or
ds
test
movb
mov
lock
into
xchg
sahf
xchg
jo
xchg
mov
out
orb
into
out
mov
popl
adc
jo
xchg
jbe
ja
xchg
cmpsb
outsl
xchg
mov
mov
pop
push
nop
mov
mov
pop
xchg
sti
xor
xchg
popl
mov
mov
test
mov
add
push
mov
mov
pop
outsb
nop
lea
sahf
push
inc
mov
ret
pop
xchg
nop
out
xchg
fucom
or
lcall
jecxz
cs
in
inc
mov
ret
dec
mov
dec
movsbl
mov
nop
push
mov
nop
mov
pop
xchg
nop
data16
xchg
xchg
xchg
nop
fsubl
mov
pop
testb
fwait
setl
pop
sahf
nop
outsb
mov
xchg
ret
pop
into
xchg
idivb
pop
jle
out
xor
push
pusha
scas
jg,pn
xchg
pop
pop
cwtl
nop
jbe
cltd
ret
xchg
ret
pop
nop
test
clts
mov
mov
nop
dec
mov
imul
mov
pop
addl
pop
nop
mulb
leave
mov
pop
lret
nop
push
mov
int
xchg
iret
pop
mov
shlb
out
sarb
shll
mov
pop
pop
nop
xlat
mov
mov
ret
pop
ficoml
paddusb
pop
ficoms
pavgb
pop
out
orb
call
nop
ljmp
mov
pop
es
out
mov
push
mov
push
xchg
mov
cmc
mov
pop
notl
push
ret
pop
cli
nop
inc
mov
cld
mov
sahf
mov
cmpsb
das
pop
mov
mov
mov
push
pop
inc
or
xor
into
stos
dec
xchg
incb
ret
out
xchg
and
xchg
call
ret
pop
ficoms
test
mov
push
lret
push
pop
ds
pop
mov
outsb
mov
ret
pop
pop
nop
mov
pusha
into
punpcklwd
jns
sti
test
adc
xchg
sub
inc
add
lea
cld
lahf
xchg
cld
shll
jp
add
push
ja
lea
cld
shll
data16
rcll
popf
push
jbe
xchg
xchg
pusha
xchg
popf
push
cmpsb
jp
add
ja
lea
cld
roll
push
popf
push
es
add
add
jbe
xchg
lahf
cmpsb
ja
lea
cld
rcl
out
push
idivb
add
es
lea
ja
lea
cld
shll
xchg
lea
xchg
cld
shll
jp
add
divb
lea
cld
shll
ss
cmp
push
data16
add
mov
mov
lahf
ja
lea
cld
shl
push
popf
push
push
jp
add
add
data16
lea
cltd
mov
lea
cld
rol
popf
push
out
testb
ja
lea
cld
jnp
inc
push
cld
shll
popf
push
xchg
cmpsb
popf
push
mov
movb
ja
lea
cld
rcll
es
push
ss
popf
push
push
jp
add
xchg
cmpsb
mov
lea
cld
shl
negb
add
ss
mov
lea
cld
lahf
xchg
cld
shll
jp
add
push
ja
lea
cld
shll
data16
rcll
popf
push
jbe
xchg
popf
pusha
xchg
popf
push
cmpsb
jp
add
ja
lea
cld
roll
push
popf
push
es
add
add
jbe
xchg
mov
mov
daa
inc
sahf
mov
or
inc
sub
mov
sub
xchg
or
mov
push
pop
mov
sbb
xchg
or
data16
pop
xor
test
mov
inc
jg
orl
pop
and
faddl
mov
xchg
mov
cs
sbb
mov
push
mov
add
mov
adc
xchg
or
testb
add
mov
inc
aam
cmp
out
sahf
jecxz
sahf
call
add
stos
mov
mov
add
sub
mov
jecxz
mov
into
scas
mov
mov
push
sahf
and
mov
mov
nop
mov
repnz
sbbl
jnp
orb
mov
xchg
out
cmpsl
lock
loopne
clc
cmp
mov
rcrl
scas
pop
jb
push
movb
inc
add
sahf
pop
addl
fcomp
xchg
dec
or
pop
bound
jp
push
sahf
lcall
lea
scas
loopne
ret
stos
mov
mov
mov
xchg
hlt
mov
mov
insl
outsl
sar
adc
and
fsubl
out
lahf
bound
adc
or
fimuls
ret
std
out
and
mov
cs
cmp
xchg
out
cmpb
shrb
push
cmpsl
jle
jb
mov
je
add
xlat
push
rcrb
ss
fcom
push
push
orb
pop
outsb
or
inc
test
ds
sbb
loopne
xor
out
lcall
inc
mov
lock
inc
popa
push
test
mov
andb
or
stos
sahf
inc
ss
push
cmpl
mov
ficoms
cwtl
inc
sahf
xor
enter
mov
cmpsl
adc
mov
and
sahf
mov
mov
ret
out
push
lret
leave
mov
into
loopne
fildl
dec
fldl
xchg
push
sahf
das
cli
jmp
or
and
xorb
push
ret
sbb
add
outsb
xchg
pop
loope
jp
lcall
push
cwtl
fidivrl
xchg
mov
jb
push
pop
push
add
push
roll
lahf
movb
sahf
cmc
lahf
enter
loop
pop
sbb
loopne
sbb
dec
pop
notb
and
xchg
dec
xchg
cmp
dec
adc
mov
adc
sbb
decb
popa
pop
lahf
faddp
pusha
mulb
xchg
outsb
mov
and
mov
push
lahf
in
inc
mov
mov
out
cmpb
into
mov
repnz
notb
xor
mov
xchg
sub
sub
xchg
outsb
add
or
inc
xor
or
or
sahf
cli
or
out
and
xchg
add
xchg
outsb
ljmp
not
loopne
ficomps
sbbb
stos
mov
into
mov
mov
sub
push
mov
xchg
rcrb
mov
fucomip
cmpsb
loopne
push
xchg
loop
mov
mov
vphaddbd
popa
lahf
lds
sahf
inc
loope
in
sub
lahf
lcall
decl
sti
in
xchg
out
xchg
enter
icebp
shlb
pop
mov
xlat
mov
mull
testb
aas
xchg
out
out
loope
mov
sahf
pop
xchg
call
add
rcr
sub
mov
and
fs
ffree
notb
jp
fcmovbe
sahf
xchg
push
mov
daa
out
push
ret
repz
pop
mov
ficoml
cld
aas
aam
xor
sbb
fcmovnb
sub
fldl2e
and
mov
test
in
dec
in
sbb
xchg
mov
cltd
inc
xor
cmp
cmp
fcoml
pushf
ror
loopne
push
and
lret
push
xchg
lock
popf
je
dec
rcl
lcall
psadbw
inc
adc
testl
inc
enter
bound
loop
addr16
adc
aam
repnz
sti
cmp
nop
test
xor
xor
mov
cmpsl
jl
dec
dec
repnz
xor
dec
movsl
rcrb
mov
loop
je
movsb
repnz
arpl
mov
js
lret
mov
out
jl
int3
lcall
mov
nop
sahf
repz
adc
mov
jb
and
mov
stos
mov
cmc
adc
mov
daa
mov
mov
xor
adc
fisubrl
sbb
out
mov
clc
lock
loopne
xor
insb
add
cs
mov
inc
xchg
cmc
mov
push
shl
fcom
push
lret
loope
les
unpcklps
mov
cmp
push
pop
outsb
lret
xchg
lods
and
mov
mov
adc
into
xor
iret
lods
fcmove
jbe
rorl
cmp
jmp
rorb
insb
xchg
jbe
fistpl
fistl
lock
inc
pop
xor
jo
cmp
adc
fmul
add
repz
stc
mov
jmp
pusha
inc
mov
int
cmp
cmpsl
in
pusha
sub
iret
repnz
jno
add
xchg
xchg
lret
jno
push
int3
addr16
jg
jg
sahf
pusha
mov
sub
lcall
mov
roll
addl
orb
xor
sbbb
out
jne
cmc
dec
testb
pop
lcall
dec
cmp
add
jge
jg
or
int
aaa
mov
inc
outsl
pop
mov
or
jg
and
jo
adc
xchg
mov
daa
pop
sbb
xchg
cmp
pop
ljmp
into
add
add
lcall
test
loop
mov
or
lahf
sarl
fs
ficompl
fmulp
lods
pop
scas
dec
cmpsb
push
sbb
fwait
jnp
pop
repnz
pop
negl
sbb
cmpsb
lret
aaa
adc
mov
mov
aas
mov
movsb
subb
pop
lock
push
inc
lock
andl
mov
adc
xchg
leave
lods
notb
mov
popf
jg
push
jge
jl
inc
xchg
outsb
lahf
je
lahf
jne
scas
sbbb
insl
or
dec
lahf
std
scas
push
adc
xchg
subb
or
repnz
mulb
je
test
and
pop
loop
dec
negb
ljmp
test
sbb
sbbb
jg
dec
aas
cmpb
cmp
add
repnz
cmp
inc
push
lods
add
mov
dec
fsubrs
add
dec
movb
mov
aam
cmp
mov
nop
jecxz
sar
adc
es
lock
pop
int3
loope
adc
or
mov
das
rol
pop
repnz
test
stos
nop
adcb
sub
inc
cli
lahf
cmpsb
push
xchg
inc
dec
in
ror
jecxz
rcrb
into
push
sub
out
enter
movsl
lret
jp
inc
sahf
rcl
into
ja
mov
stos
adc
xor
out
cmp
in
addb
loop
iret
hlt
ss
or
rcll
push
mov
mov
das
mov
loop
inc
dec
add
or
sahf
test
das
push
in
cmp
and
lahf
mov
ret
fcmovbe
pop
data16
xor
int3
loop
sbb
xor
dec
cltd
loop
xchg
js
adcl
mov
jg
jecxz
clc
lret
out
mov
shlb
faddl
outsl
mov
push
daa
mov
dec
mov
dec
mov
shlb
dec
mov
ret
je
adcl
js
jg
nop
push
adcl
rcll
data16
xor
out
popa
cwtl
dec
fisubs
fdivl
mov
loop
mov
repnz
jns
jge
mov
nop
jo
cmp
lahf
mov
xchg
lods
add
mov
push
sti
mov
in
mov
out
push
or
add
lds
mov
cmpb
and
out
sub
or
pop
mov
repnz
mov
xor
js
pop
insl
repnz
fistl
cmc
jg
jmp
imul
mov
mov
clc
ljmp
pop
jge
ret
fsubr
xor
out
bound
aam
clc
repnz
push
push
add
inc
dec
outsb
jne
repnz
mov
imul
cmp
mov
and
loope
andb
dec
cmc
inc
into
sbb
sbb
roll
jo
orb
mov
std
fs
aas
add
fmuls
mov
popa
jmp
add
mov
mov
lods
cmp
jg
xchg
xchg
mov
data16
push
jge
js
jg
retw
lea
popa
pop
sub
ja
enter
mov
xchg
add
stos
fisubl
or
in
mov
inc
outsb
push
out
outsb
jmp
test
xchg
scas
lods
repnz
neg
fdivrl
jp
sbb
xchg
xor
sbb
xor
fisttps
inc
dec
mov
mov
ds
mov
cmovge
sbb
xchg
cmpsb
int3
cmc
ss
je
pop
push
int3
xchg
movsl
pop
or
test
out
popl
pop
or
and
std
es
arpl
in
stos
or
adc
or
cmp
push
jae
test
dec
rolb
inc
lea
mov
shr
xchg
icebp
das
cs
mov
add
mov
or
mov
lahf
into
mov
sub
testb
std
xchg
sub
loopne
or
cmp
mov
mov
and
dec
add
jp
sub
or
xchg
xchg
cltd
pop
fmull
dec
mov
dec
in
push
jo
fwait
imull
lret
jg
sub
mov
incb
sub
outsl
and
mov
lret
sahf
jbe
outsl
mov
xor
into
push
testl
mov
jmp
popf
jg
mov
sahf
cmp
popa
sbb
jns
cwtl
rcrl
int3
cld
mov
lret
pop
dec
xchg
shll
mov
xchg
leave
mov
int3
xchg
mov
mov
and
jg
ret
xchg
jnp
dec
jnp
mov
sti
cmpsb
imul
push
mov
adc
mov
repz
mov
ja
repnz
jg
sbb
fwait
addr16
aad
push
test
jnp
or
out
pop
cwtl
dec
loop
sahf
in
sti
mov
push
das
adc
lea
jg
mov
mov
xchg
push
add
mov
aad
mov
pop
sbb
mov
sbbb
mov
and
inc
shrb
mov
sub
ds
rcr
add
cs
jg
jl
jg
subb
cld
leave
lea
mov
ss
mov
jbe
call
xchg
shlb
xchg
andl
xchg
nop
rolb
pop
mov
mov
xchg
lcall
jl
andb
mov
lods
mov
test
cmpb
les
jg
inc
xor
add
inc
lret
test
adc
js
icebp
out
add
ljmp
cld
mov
testb
fidivs
xlat
jns
sbbb
xchg
jp
add
xor
testb
jg
mov
pop
addl
std
mov
loop
mov
jo
xchg
pop
test
sub
pop
ret
sub
cmpsl
mov
xchg
mov
cmpsb
nop
lcall
into
jl
and
inc
xchg
clc
jle
std
push
mov
cmpsb
xchg
andb
fdivs
incb
cwtl
push
xchg
mov
add
scas
sbb
cmp
inc
jp
adc
inc
xchg
lcall
lret
in
pushf
fists
movsb
ds
orb
mov
mov
iret
ds
fstl
add
mov
mov
movsb
mov
add
adc
out
lahf
mov
movl
cmpsb
push
mov
jl
push
enter
pop
cmpl
lahf
lea
xchg
ret
push
in
incb
test
cmp
and
jbe
adc
pop
mov
push
inc
add
fmul
icebp
test
jbe
ja
mov
cmc
lahf
jg
shl
mov
xchg
addb
lahf
and
jo
jg
sbb
int
aad
mov
xchg
xchg
sbb
mov
orb
mov
mov
xchg
mov
mov
push
xorb
aas
in
decb
cmpb
xchg
add
pushf
jno
jno
outsb
mov
add
outsl
mov
sbb
xor
rcrl
xchg
scas
movb
ret
stos
cmp
jecxz
fidivrs
push
xchg
xor
pop
jle
add
test
cld
loope
fsubrp
fnstsw
mov
jae
sbb
mov
in
scas
lods
push
in
outsb
movsb
push
cld
outsl
aad
pop
dec
in
mov
in
pop
lcall
test
cli
mov
mov
sbb
mov
add
and
mov
push
cmp
dec
stos
mov
mov
pop
or
icebp
cmpsl
pop
pop
sahf
sbb
jmp
out
rol
jecxz
outsb
testb
mov
dec
repnz
add
testb
out
mov
cmp
enter
mov
jle
pop
ret
pop
and
outsb
loop
mov
mov
rolb
or
out
dec
xor
mov
test
or
incb
hlt
mov
sahf
add
mov
bnd
nop
cmp
mov
test
mov
sahf
into
insb
add
mov
or
pop
or
or
or
mov
adc
push
nop
jmp
and
sahf
pop
stos
add
lret
pushf
pop
mov
and
adc
sbb
je
inc
xchg
mov
daa
and
jp
push
movb
lret
mov
cmpsl
push
in
gs
adc
xor
lret
or
mov
lahf
pop
mov
mov
ficompl
add
add
inc
pop
xchg
jl
or
test
xchg
jo
add
nop
dec
enter
adc
in
mov
mov
and
mov
insb
add
cmpb
cpuid
mov
sbb
xchg
in
mov
in
lret
dec
incl
mov
out
mov
adc
into
mov
out
push
cmpsb
lods
mov
shrb
mov
cmp
mov
push
ret
loopne
pop
out
pushf
or
sub
call
inc
adc
pop
mov
xchg
and
scas
mov
sub
xor
shlb
sbb
cwtl
xor
in
rorb
ja
adc
sbb
aaa
xchg
out
movsb
shr
jmp
mov
rorb
insb
in
push
loop
adc
scas
mov
mov
jp
int3
pop
mov
pop
and
leave
xchg
jo
nop
add
push
adc
add
mov
pop
cmpsb
cwtl
dec
test
and
ret
mov
icebp
jmp
add
mov
andb
add
mov
cmp
or
ds
ret
in
sbb
pop
out
lds
xor
pusha
or
sub
pop
xchg
cmp
mov
ret
push
test
adc
int3
fisubs
mov
hlt
into
jmp
je
mov
out
out
jo
pop
int3
ljmp
pusha
es
adc
push
add
fdivp
jno
and
mov
add
shll
and
sbb
loop
xchg
jbe
push
ljmp
xchg
xchg
push
mov
mov
xchg
or
xchg
fimuls
xchg
insl
add
test
add
jbe
lds
xchg
outsl
test
nop
lea
mov
xchg
pop
addb
add
int
jge
dec
mov
mov
sahf
lea
lea
xchg
sbb
dec
fisubrl
xor
xchg
pushf
sbb
test
cli
and
and
mov
dec
xchg
test
jecxz
mov
orb
jb
ss
mov
test
adc
push
movsl
jge
inc
mov
jb
fidivs
pop
pop
mov
in
push
int
sub
test
cmpsb
ret
outsb
mov
popl
in
xchg
out
int3
sar
aaa
xor
ret
pop
mov
decb
xchg
and
outsb
add
test
inc
fiadds
pop
adcl
and
sbb
add
je
incl
xchg
pop
mov
add
testb
addl
xchg
push
adc
inc
mov
rolb
sarb
loopne
mov
push
test
daa
bound
and
cs
nop
add
repnz
and
adc
sub
and
add
movsb
out
mov
push
adc
fwait
mov
mov
adcb
test
gs
test
test
movsb
sahf
rclb
mov
adc
ret
cmp
rcrl
movsb
ret
lea
frndint
daa
sahf
add
push
and
push
prefetcht0
insb
das
test
and
orb
int
aaa
push
dec
xchg
dec
mov
inc
ret
xchg
inc
xchg
cs
sbbb
jo
or
sbb
jb
mov
outsl
mov
or
mov
push
lahf
adc
mov
dec
push
inc
xchg
push
cs
pop
add
or
mov
adc
nop
or
or
outsl
and
popf
cpuid
test
daa
jns
aam
push
pop
dec
mov
outsb
adc
pop
cld
and
cltd
addb
sahf
add
scas
test
nop
cmp
sbb
fstps
add
sti
adc
xchg
mov
mov
xchg
adc
pop
or
lahf
mov
mov
fiadds
mov
ret
jne
and
movsl
cmpsb
sahf
and
adc
jae
inc
sub
xor
cmpl
cmp
adcb
arpl
loop
mov
scas
mov
stos
or
adc
xchg
insb
lcall
xchg
mov
lret
sahf
std
aaa
pop
mulb
ljmp
lea
mov
sar
das
push
mov
lret
and
orb
mov
jbe
mov
mov
and
xor
inc
mov
xchg
lea
inc
and
nop
fimull
mov
ljmp
dec
jl
enter
aam
xchg
mov
adc
adc
jns
xchg
and
mov
or
call
outsb
repnz
inc
pop
mov
inc
test
movb
dec
arpl
and
push
mov
rol
push
mov
mov
mov
sbb
lea
hlt
xchg
jp
test
xchg
cmp
push
in
and
sub
leave
jg
mov
xor
xchg
std
gs
xchg
adc
in
adc
push
mov
call
ret
in
ret
push
sub
inc
mov
jmp
xlat
and
bound
dec
or
push
movsl
sub
test
cmpsb
insb
jne
and
push
ret
loop
jnp
add
cmp
pop
rcrl
ror
jbe
in
adcb
push
or
xchg
add
cwtl
mov
and
mov
push
cmp
gs
xchg
xchg
lock
lock
fmuls
cmp
icebp
push
xchg
mov
sub
add
cli
xchg
aaa
test
xchg
mov
ja
out
inc
jp
cmp
test
push
jae
adc
push
fs
outsb
in
in
xchg
jecxz
repnz
mov
cwtl
xlat
dec
mov
mov
test
mov
push
mov
mov
xchg
sbb
push
dec
xchg
sahf
imul
test
cvttps2pi
lcall
iret
andl
arpl
cmpsb
push
sbb
pop
into
out
xor
loope
repz
cld
lds
test
xchg
xor
mov
xchg
out
ss
cmp
mov
sti
pop
adcb
mov
aam
inc
xchg
adcl
testb
xor
stos
mov
int
je
xchg
xchg
fdivrl
mov
rolb
idivb
xchg
incb
lods
mov
adc
mov
sbb
pushf
adcb
or
mov
mov
cwtl
int
loope
cmpsl
xchg
mov
outsb
sub
aaa
pop
inc
inc
mov
movb
mov
test
repz
mov
xchg
sbb
rcrb
daa
add
lret
mov
mov
mov
mov
flds
cmp
mov
push
stos
cmp
and
pop
inc
adc
scas
xchg
cmp
mov
sub
push
cmp
sub
pop
fdiv
test
imul
sbb
cmpsb
xchg
cmp
adcb
imul
xchg
pusha
jns
dec
push
fadds
dec
clc
orb
int3
mov
xchg
xchg
inc
dec
xchg
sar
sarb
nop
add
xor
hlt
inc
fcoms
out
ss
sub
repnz
test
out
sahf
xchg
shrl
and
pushf
push
test
test
push
std
dec
mov
sbb
and
mov
insb
es
mov
shl
cmpsb
xchg
or
push
mov
in
xor
push
xor
and
adc
in
ss
into
sbb
fnstsw
mov
dec
int3
xor
jecxz
into
xor
sbb
ficomps
das
xor
mov
mov
sti
or
out
mov
sti
pop
jne
int
shrb
xlat
or
in
imulb
int3
in
mov
lret
dec
shl
orl
rcl
cs
adc
stos
movsb
daa
shrb
mov
jbe
rolb
rolb
mov
dec
bound
aam
jl
mov
lret
and
call
out
pusha
pop
into
aad
dec
repz
xchg
push
cmp
xor
movsl
pushf
jecxz
test
pusha
xchg
cmpsl
xchg
test
loopne
ficompl
sahf
mov
ja
push
dec
xchg
jge
pushl
clc
test
out
leave
xchg
inc
fsubl
cli
in
mov
lds
out
aam
sbb
pop
xchg
lcall
sbb
dec
nop
addb
sti
mov
cmp
cli
outsb
lea
pop
pusha
xchg
mov
jb
pop
and
fisubrl
icebp
loop
sub
aam
adc
mov
and
vcvtdq2pd
bt
repnz
sub
out
loop
xchg
mov
out
push
inc
pop
inc
test
imul
mov
lods
sub
lea
add
jge
sbb
imull
dec
dec
mov
faddl
inc
je
out
and
lea
int
inc
sub
sbb
lret
sub
and
data16
mov
xor
xchg
and
inc
xchg
lods
mulb
jle
bound
clc
roll
daa
jno
repnz
rcl
lods
out
enter
iret
xchg
hlt
std
and
hlt
test
cmp
mov
mov
test
push
int
add
xor
mov
dec
repz
sub
outsl
pop
outsb
mov
pshufw
push
cltd
add
leave
jns
and
lea
aaa
pop
test
add
mov
imul
iret
cwtl
mov
push
notl
xchg
dec
repnz
xchg
mov
std
popf
xchg
bound
push
jae
inc
outsb
negl
mov
insb
adc
movsl
lods
sahf
push
rorl
cmovp
xchg
lret
mov
jo
outsl
add
jb
or
aam
xchg
mov
dec
add
loop
xchg
xchg
test
dec
fcomp
bnd
and
fisubrs
aas
jbe
pop
into
inc
xchg
mov
xchg
mov
add
cmovs
nop
and
insb
xlat
sub
fs
test
push
lret
push
jp
nop
sbb
inc
call
cmpsb
repnz
repnz
jge
adc
es
mov
mov
mov
xchg
lea
test
push
adc
adc
adc
aam
push
xchg
ret
fmuls
sub
outsl
xchg
lret
jbe
and
out
aaa
push
mov
adc
cmpsl
jbe
inc
pop
add
lds
nop
stos
and
xlat
ret
fidivs
das
push
enter
fsubl
or
pop
into
inc
adc
mov
inc
repz
and
cmpsb
enter
rolb
mov
and
les
xor
fmuls
sbb
into
daa
push
je
sub
inc
xor
jb
fwait
sahf
xchg
mov
mov
jbe
jb
adc
mov
scas
xor
cmp
or
xchg
leave
pop
sbb
add
sub
les
imul
cmp
or
ret
in
inc
rcl
in
mov
or
dec
and
jne
lods
mov
sahf
dec
xchg
cmpsb
adc
in
mov
pushf
shl
je
or
sbb
inc
and
shlb
nop
adc
cmp
les
aad
xchg
mov
jb
xchg
sub
es
mov
lret
mov
lret
mov
scas
cltd
fisubs
jl
adc
push
xor
shlb
orb
xor
in
dec
rclb
hlt
int
nop
adc
and
dec
testb
sub
mulb
add
lds
pushf
xchg
inc
mov
cmp
sbb
mov
mov
mov
jecxz
mov
cmp
leave
xor
int3
pop
pop
movsl
cmpsb
loopne
mov
outsl
int
xor
movl
mov
adc
in
pop
adc
lods
test
pop
dec
sbb
lds
inc
mov
xchg
mov
not
dec
arpl
hlt
pusha
cmp
mov
ret
lock
adc
xchg
inc
xchg
xchg
mov
add
std
loop
mov
cwtl
mov
nop
lret
test
sub
out
add
rcll
cwtl
mov
push
jmp
jnp
loopne
mull
cld
lcall
je
push
clc
decb
add
scas
ret
cmp
xor
nop
rol
pop
lahf
es
pop
testl
xchg
dec
cwtl
mov
mov
rorb
aam
rcrl
xchg
rclb
int3
negb
loope
cmpb
insl
jl
mov
mov
mov
xchg
xor
adc
cmp
mov
gs
fwait
sub
pop
andl
ret
xchg
or
xchg
scas
shrl
ds
testl
cmp
jo,pn
stos
push
cli
addr16
xor
aad
and
loop
cmc
ret
pop
pop
sub
push
jecxz
push
lret
rorb
and
push
lods
iret
mov
scas
mov
dec
fistl
cmpsl
mov
inc
out
jge
sbb
inc
int3
sbb
dec
dec
int
adc
dec
movsb
cmp
jecxz
in
lods
es
int3
lcall
lret
jg
sbb
xor
hlt
cmp
xchg
jmp
sub
xlat
test
fistpll
push
nop
in
push
mov
dec
int3
js
insb
jbe
jp
andb
push
test
and
cmpsl
pop
xchg
call
test
sbb
push
int3
xor
jbe
cmp
lods
pop
xchg
and
jbe
in
jno
pop
repnz
and
mov
mov
mov
in
or
pop
cmpsb
loopne
push
insl
rep
mov
sbb
inc
jmp
mov
mulb
jg
xlat
lock
out
mov
in
rolb
cmpl
cmpsb
aam
shl
js
andb
xchg
in
repz
push
lret
rol
int
pop
stos
mov
outsb
sbb
arpl
pop
jmp
and
test
mov
lret
jg
pop
scas
lcall
mov
ja
cmp
add
lretw
xor
loop
xchg
pop
push
mov
xchg
mov
adcb
jp
fiadds
mov
rorb
mov
pop
bound
mov
push
push
mov
orb
mov
ficoml
xchg
addb
push
into
xchg
xor
ret
mov
xchg
out
nop
push
mov
fimull
inc
stos
mov
cltd
cmpb
sahf
lcall
fwait
mov
pop
mov
xchg
mov
jp
fisubs
mov
sarb
mov
mov
ret
xchg
orps
sahf
andb
test
adc
cmpb
mov
xchg
sbbl
cmp
cmpsb
mov
mov
push
mov
jg
dec
lahf
rorl
scas
sar
ret
add
stos
out
bound
xchg
mov
out
jg
mov
jp
mov
scas
ss
incb
fdiv
addl
divb
inc
jle
rorb
and
mov
subl
mov
loop
dec
cmp
inc
inc
xchg
and
cmp
int
lahf
test
lcall
sub
fiadds
jl
mov
mov
aad
inc
loop
adcb
lock
xchg
dec
mov
add
cmpsl
cmp
mov
adc
inc
mov
mov
popl
loop
lock
iret
mov
int3
push
sub
clc
inc
rolb
dec
cmp
test
mov
adc
ljmp
and
push
adc
xchg
xchg
mov
cwtl
mov
mov
scas
bound
ret
fwait
mov
scas
add
push
outsb
lcall
mov
and
loop
adc
loop
lret
clc
aas
push
cmp
xchg
mov
dec
add
stc
push
test
xchg
sti
repnz
sub
addb
clc
fdiv
jp
aam
mov
mov
aas
enter
mov
inc
lods
pushf
or
push
ret
inc
mov
outsb
movsb
or
addr16
push
jns
decb
and
out
lds
cmpsb
andb
aam
xchg
mov
mov
adc
bound
data16
push
cmpsb
xchg
and
dec
push
lcall
and
xchg
or
pusha
cs
lret
push
repz
and
mov
xchg
xchg
sahf
inc
inc
cmpsl
mov
aas
push
cmp
add
xchg
cmc
stc
dec
pop
loop
mov
and
pop
inc
int
mov
es
adc
mov
mov
dec
movsl
mov
loop
mov
ret
mov
xchg
shll
xchg
pop
push
stos
mov
cmp
ds
adc
loop
addl
add
mov
push
loop
inc
ret
xor
ret
stos
adc
dec
mov
xchg
push
xchg
lods
inc
cmp
mov
inc
pop
sbb
aas
int3
xchg
mov
and
xchg
mov
test
pcmpeqd
fnstcw
pop
aas
test
jp
cs
mov
jbe
or
xchg
sahf
test
loop
test
inc
test
roll
loop
xchg
pop
decb
sub
lods
add
push
xchg
jecxz
mov
and
loop
lret
shl
ss
shlb
addr16
xchg
ret
xchg
lock
adc
subb
mov
sahf
nop
push
orl
cmp
jb
add
adc
cmp
roll
mov
mov
xchg
ja
adc
lret
lods
cmp
xchg
into
loopne
dec
sbb
fimuls
lret
addr16
repnz
add
mov
aas
push
arpl
xlat
mov
inc
outsl
lret
and
incb
shlb
out
inc
inc
mov
mov
cmp
inc
cs
inc
sbb
fsubrs
sahf
mov
push
inc
xor
std
mov
inc
out
adc
pop
movsl
add
es
mov
push
inc
xor
incb
ds
loop
scas
cltd
sbb
and
loop
sbb
ljmp
loop
pop
mov
adc
jmp
jo
fwait
adc
inc
pop
xchg
cs
test
xchg
inc
xchg
mov
aas
pop
xchg
add
inc
stos
nop
out
push
jbe
rorb
cmpsl
dec
loop
dec
mov
mov
xchg
out
xchg
cs
mov
inc
mov
and
xchg
sbb
movsl
stos
int3
sbb
aas
xchg
sahf
iret
lods
sahf
out
and
out
ds
and
pop
adc
sbb
add
lds
leave
or
jo
es
pop
mov
and
mov
test
in
addb
cs
out
lock
mov
fidivl
push
push
inc
lret
or
out
or
std
lock
sbb
scas
add
xchg
or
loop,pn
inc
xchg
push
inc
sahf
adc
mov
xchg
sti
lods
push
jbe
inc
mov
outsb
sahf
sub
test
les
mov
mov
mov
cld
lret
nop
add
std
scas
cmp
jbe
cmp
xchg
outsb
loop
xor
cs
repnz
mov
push
ja
cli
fildl
mov
xchg
inc
cli
pop
mov
inc
lods
pop
dec
arpl
cmpsl
mov
adc
ds
ja
xchg
or
loop
jbe
stos
cmp
sub
sahf
cmp
push
loop
ljmp
test
out
loop
pop
and
or
mov
lds
cmp
inc
inc
xchg
ss
cmp
and
ret
or
hlt
or
mov
pop
mov
int3
mov
ljmp
dec
and
ret
mov
into
pop
cmp
ds
add
fwait
pusha
sbb
mov
mov
fimuls
jp
cmp
fistpll
addr16
sub
dec
bound
loop
lahf
adc
loop
xchg
adc
scas
aaa
inc
mov
in
xlat
outsb
int
dec
shll
cmp
frstor
jnp
xchg
into
lock
jmp
mov
pop
loop
lcall
and
mov
shlb
ljmp
fiaddl
std
mov
and
jb
or
push
sbb
mov
lahf
rol
lds
ss
loop
jecxz
nop
test
mulb
movb
adc
pop
mov
sbb
loop
mov
push
and
mov
mov
enter
adc
outsb
lock
or
push
sub
cmp
xchg
adc
shrb
pop
lcall
test
repnz
mov
dec
mov
cmp
loop
fsubs
arpl
xchg
adc
orb
xor
xchg
xchg
push
into
test
mov
loop
sub
ret
mov
pop
cli
cmp
test
mov
jo
adc
loop
or
scas
cmp
stos
bound
or
mov
pushl
pop
mov
test
mov
inc
aam
shl
sahf
xchg
cmpsl
mov
cmpsl
lods
mov
inc
movb
inc
ds
lret
cmpsl
addr16
cli
lds
cmpsb
loop
add
shl
push
adcl
negl
inc
mov
push
aas
addr16
mov
add
or
rcl
loop
xchg
push
test
movsl
push
xchg
cmp
repnz
mov
divb
scas
dec
jo
inc
outsb
cmpsb
xchg
rorl
loop
xchg
cs
inc
adc
sbb
ljmp
sahf
iret
xlat
cmp
outsb
xchg
roll
mov
hlt
outsl
ds
loop
push
or
cmpl
pop
push
shl
fcos
data16
pusha
push
mov
int
pop
lahf
adc
or
or
inc
stos
ljmp
mov
add
xchg
mov
js
jb
cld
xor
cmp
loop
data16
jmp
xor
mov
lods
add
mov
lret
sub
mov
ret
mov
inc
data16
and
fisubrs
inc
ret
es
add
mov
dec
aas
push
pop
mov
mov
mov
pop
lods
incb
inc
or
inc
inc
es
loop
testb
test
jo
lods
push
xor
popf
pop
loope
or
pusha
mov
int
pop
lahf
or
loop
lret
cmpsl
fsubp
cmovle
mov
or
jecxz
test
loop
mov
leave
outsl
cmp
mov
push
mov
xchg
push
push
xchg
mov
mov
enter
das
add
ds
dec
push
jno
outsb
xchg
add
das
xor
addr16
test
adc
push
shld
rorl
test
loop
pop
adc
push
mov
pop
push
mov
lcall
xchg
popa
call
cli
outsb
jb
out
loop
es
fwait
lods
ja,pn
enter
loop
ret
and
xchg
mov
stos
and
mov
xchg
pushf
inc
cmp
sahf
mov
sbb
cld
pop
mov
and
jmp
loop
xchg
adc
fiaddl
or
xchg
mov
rclb
rcll
fisttpll
cld
pop
mov
aaa
lret
ret
mov
xchg
out
loopne
bound
mov
mov
adc
dec
out
mov
mov
add
mov
ljmp
stos
pop
data16
out
out
mov
fisttpll
out
lcall
fnstsw
and
adc
mov
xchg
mov
mov
out
mov
inc
pop
jmp
mov
dec
xchg
or
sbb
add
inc
into
inc
das
ficomps
bound
push
ja
loop
scas
adc
xchg
test
dec
cli
xor
cli
fidivrs
cmp
push
xchg
es
jle
popf
add
mov
daa
fidivrs
repz
pop
jl
jge
jle
push
mov
mov
or
sub
inc
subl
xor
xchg
mov
inc
mov
popf
mov
dec
xchg
das
call
mov
push
xchg
mov
inc
mov
inc
outsl
sahf
adcl
push
lods
repnz
push
jo
aam
xchg
inc
lret
push
psrad
mov
jp
pop
es
loope
mov
cmp
mov
jecxz
pushf
cli
leave
xchg
mov
and
test
cli
ljmp
xor
mov
jbe
xchg
push
xchg
adc
xor
mov
jp
and
lds
inc
fiadds
lds
sbb
inc
pop
mov
xchg
mov
cmp
mov
scas
popa
popf
mov
lcall
inc
fs
lcall
data16
sub
push
push
adc
das
mov
repnz
and
lds
mov
imul
nop
push
pop
insb
xor
sahf
orb
lahf
or
out
mov
ret
pop
and
test
aam
pop
and
shll
mov
setbe
inc
mov
ret
push
mov
xchg
ret
pop
sub
inc
lds
inc
xor
sbbb
sahf
xchg
xchg
adc
xchg
mov
mov
cs
mov
xchg
xchg
push
das
xchg
xor
mov
mov
mov
xor
xor
ret
nop
mov
sahf
xchg
in
xchg
push
xchg
test
sub
test
and
sub
push
aaa
sub
mov
cmp
or
es
xchg
inc
jb
push
mov
push
mov
rcll
ret
lcall
add
loop
aad
out
lds
xchg
push
lret
dec
mov
ja
test
pushf
fcmovb
jecxz
ljmp
leave
xchg
xor
mov
jbe
popf
add
loop
lret
xchg
inc
and
inc
mov
mov
aam
xchg
inc
ljmp
dec
sbb
ds
movsl
pop
inc
mov
sbb
scas
push
push
pop
scas
push
fsts
rorl
sahf
aam
xchg
inc
inc
and
dec
aam
xchg
pop
dec
mov
xor
ret
fistps
add
push
lahf
xchg
push
sarb
jecxz
ljmp
mov
jp
mov
out
or
lds
dec
movsl
xchg
push
sub
or
lea
test
jo
cmpsl
fsub
adc
xchg
xor
rclb
lods
jg
and
lea
test
fisubl
pop
adc
adc
xchg
das
scas
test
mov
loopne
xchg
ja
sbb
loope
or
xlat
push
adc
xchg
das
fisubrl
xor
imul
dec
in
push
push
nop
fisubs
and
and
xchg
mov
xchg
ror
orb
dec
xchg
adc
cmpsl
je
aaa
push
xchg
inc
fistpll
inc
jg
pop
out
iret
leave
in
cmc
pop
addb
dec
test
idiv
rolb
out
inc
aam
mov
lcall
mov
mov
mov
push
lea
mov
fimuls
or
xchg
xchg
add
xchg
sub
scas
or
add
loopne
pushf
lcall
mov
xchg
inc
push
lahf
neg
lds
rol
mov
out
decb
movsb
pushf
mov
pusha
scas
call
mov
dec
ljmp
test
mov
adc
pop
mov
cmpsb
test
and
mov
lds
mov
test
xchg
mov
mov
pushf
rorl
mov
stos
mov
xchg
pushf
rcll
xchg
arpl
mov
lcall
xchg
push
popf
jo
pushf
rcrl
leave
mov
stos
mov
pushf
shll
lahf
stos
bound
lods
push
jo
adc
shrl
leave
mov
push
enter
icebp
repnz
ljmp
loopne
cmp
out
mov
pmulhuw
mov
sahf
mov
xchg
mov
mov
mov
mov
lcall
fbstp
out
mov
call
es
idivl
mov
push
call
mov
dec
sub
daa
jnp
sbb
mov
jb
shlb
pop
stos
ljmp
cli
push
pop
jp
xchg
add
repnz
cmpsl
loop
sbb
xor
outsl
rclb
ljmp
divl
shrl
fidivl
imulb
mov
lret
daa
add
pop
incl
or
iret
xchg
push
aaa
shrb
cmpsl
xor
push
iret
add
les
fisubl
xchg
dec
daa
adc
sbb
in
push
cs
cli
lahf
mov
push
ja
scas
cmpsl
push
setb
pop
ror
push
push
dec
pop
outsb
cmpsl
push
dec
filds
es
lret
dec
iret
dec
push
push
xchg
push
mov
mov
movl
mov
pop
xchg
out
push
mov
mov
push
mov
cltd
mov
out
xchg
scas
mov
xchg
xchg
lods
pop
test
lret
rol
in
shl
aas
xchg
lret
cwtl
mov
cmp
aam
ret
dec
jnp
mov
mov
lock
nop
mov
xchg
sbb
movsb
out
cwtl
icebp
mov
mov
outsl
sub
mov
mov
out
shr
loop
dec
shl
out
mov
lods
sti
lods
xor
in
push
mov
enter
cmp
lahf
pushw
and
mov
sbb
fcomip
mov
adc
cmpsl
aad
sahf
add
mov
mov
addb
fcmovnbe
je
dec
in
sahf
lar
jg
push
int
out
push
test
imul
mov
mov
lret
ds
mov
lahf
xor
push
in
out
xlat
cs
int
pop
inc
xchg
adcl
movsl
mov
sti
iret
cmp
leave
lahf
xchg
testb
ficoml
inc
enter
lds
mov
pop
ret
mov
insb
xchg
rcr
loopne
and
faddl
loop
and
test
or
mov
sbb
mov
lahf
mov
xchg
mov
xchg
jecxz
shll
push
mov
aam
fucomip
inc
das
mov
jbe
push
xorl
pusha
mov
xchg
xchg
mov
push
cltd
adc
jecxz
mov
lret
fcoms
xchg
int
dec
push
adc
xchg
cmpsb
xor
mov
popf
aad
bnd
sub
lds
adc
fucomp
cmp
bound
imul
jns
mov
sub
xchg
xchg
mov
adc
or
cmpsb
adc
cmpsl
pop
cmpsl
or
mov
inc
pusha
xchg
xor
cmpsb
inc
test
aad
or
push
xchg
mov
icebp
jo
cmp
cmpsl
arpl
xchg
add
mov
cmpsb
aad
mov
fiadds
popa
mov
das
rcll
lret
jp
adc
xchg
cmpsb
add
push
xchg
mov
mov
scas
orb
xchg
xor
nop
gs
lods
mov
xchg
adc
jns
pop
test
gs
mull
fisubs
cwtl
inc
adc
sbb
dec
jb
jb
jne
into
ds
inc
sbb
lcall
ss
sbb
push
xchg
lret
sub
in
push
cmpb
mov
jns
mov
xchg
cmpsb
and
cmc
mov
fcomps
inc
push
mov
jbe
xchg
sub
xchg
mov
pop
cs
xor
sbb
adc
test
lea
in
jecxz
jno
cli
xchg
xchg
fisubl
xchg
mov
mov
sub
aad
xchg
fidivs
sahf
inc
inc
ret
loop
dec
pop
mov
xchg
adc
call
push
ss
xchg
ret
test
mov
xchg
xchg
adc
fcomi
repz
out
xchg
pop
push
xchg
lock
add
popf
cwtl
sarl
and
scas
push
xchg
pop
fisubs
int3
push
out
shlb
xor
movsb
test
loop
and
cmpsl
clc
into
cmpsb
cmpsl
mov
xchg
aaa
nop
inc
xchg
cmpsb
fimuls
sarl
push
cmpsl
stos
cwtl
dec
cmpb
scas
mov
jp
sub
mov
cmp
ficompl
andb
add
push
scas
fwait
mov
pushf
and
xchg
in
das
cmpb
mov
xchg
stos
push
addr16
loopne
cmc
sarl
fildl
lods
aas
dec
pop
mov
lcall
mov
pusha
sbb
and
inc
pop
xor
mov
dec
cmpsb
fwait
les
and
data16
cs
call
cmpsb
xchg
in
cmc
pop
xchg
pushf
mov
adc
or
shl
and
inc
add
nop
pop
pushf
sbb
xchg
mov
shrl
test
xlat
sbb
adc
addl
inc
xchg
insl
scas
xor
inc
ss
jmp
mov
cmpsl
xchg
or
jecxz
stos
ficoml
mov
lahf
fidivrs
cltd
aaa
test
dec
xchg
mov
mov
daa
aas
ss
mov
scas
push
shl
loopne
xor
cmpsb
pop
stos
int3
cltd
std
enter
push
push
pop
jge
stos
andl
stos
xchg
aad
test
push
test
inc
jb
inc
adc
pop
movsb
xchg
xor
jbe
add
ss
es
mov
testb
cmp
push
scas
jg
out
jmp
mov
shlb
stc
dec
inc
test
loop
sub
cld
test
loop
xchg
pusha
movsb
es
rcrl
stos
sub
xchg
add
stos
pop
das
hlt
pop
or
pop
rcr
mov
js
icebp
sbb
mov
in
stos
icebp
out
aas
inc
pop
push
movsl
xchg
inc
mov
xor
sar
push
mov
or
lock
push
xchg
jo
lods
pop
jecxz
mov
mov
dec
jge
mov
stos
out
cmpsl
and
dec
leave
xor
mov
xlat
jmp
loopne
xrelease
je
xchg
jbe
int3
test
cmpsb
into
ds
rolb
push
cmp
movsbl
scas
mov
int3
test
nop
gs
mov
rcrl
xchg
cmp
mov
stos
lcall
lahf
jp
push
stos
adc
cmpsl
inc
repz
inc
mov
dec
rorl
add
lds
aad
mov
fisubs
sbb
repnz
push
subl
hlt
movsl
xchg
mov
test
testl
xlat
pusha
mov
out
loopne
lea
insb
gs
loop
loopne
mov
fisubrs
lock
repnz
into
pop
xorl
hlt
and
rol
into
andb
pop
inc
inc
cmc
jns
mov
lds
pop
xchg
inc
inc
pop
lret
dec
push
clc
ret
fiadds
pusha
pop
shl
mov
stos
dec
hlt
shlb
mov
xorb
hlt
leave
rorl
push
addl
andb
jne
mov
jb
das
hlt
call
add
mov
inc
cmpsl
pop
hlt
negb
mov
dec
das
loope
fs
hlt
and
or
nop
mov
in
repz
dec
inc
or
shr
jmp
fistl
mov
mov
fiaddl
mov
jb
add
rcl
mov
jb
jmp
cmp
inc
cwtl
xchg
xchg
push
scas
fwait
out
scas
mov
xchg
pop
loop
cmpsb
cld
inc
mov
movsb
icebp
popa
leave
cmpsb
mov
mov
imul
xchg
and
jae
mov
orl
int3
ret
pop
sbb
jne
data16
imul
lds
aad
ret
xchg
scas
ret
iret
xchg
repnz
push
inc
jge
shr
xlat
cmp
stos
jle
mov
movb
lock
loopne
push
inc
ret
pop
pop
push
mov
sbb
scas
sbbb
pop
or
iret
push
lods
icebp
adc
lret
scas
into
adc
out
ljmp
xchg
fisubrl
adcb
repnz
subb
ret
bound
mov
add
fdivrs
out
xchg
scas
mov
pop
data16
into
test
lock
scas
xor
int3
sahf
leave
cmp
sahf
out
sahf
ljmp
xor
clc
cli
cltd
ljmp
mov
mov
loope
and
setbe
jg
loopne
lret
add
repz
add
lcall
notb
and
push
loop
cmpsl
daa
adc
cmp
or
ret
jnp
data16
out
add
pop
out
cmp
data16
ffree
xchg
jb
mov
adc
mov
add
mov
adc
sub
push
adc
dec
fisubrs
leave
rcr
xor
cmp
enter
xchg
mov
jecxz
jge
cmpsb
inc
xchg
xchg
xor
inc
add
adc
sbb
pop
xchg
jae
jo
xchg
cmpsl
xchg
test
stos
movsb
push
mov
stos
cmp
mov
mov
cli
or
rcl
mov
mov
xor
cmpsb
fs
mov
cli
rorl
sahf
push
decb
sbb
push
enter
stos
sahf
pop
lret
aad
push
adcl
hlt
fistps
ret
lods
sti
adc
sar
and
mov
mov
lret
dec
lock
enter
mov
aad
dec
lret
out
icebp
mov
shl
lcall
push
jle
lock
aam
inc
out
rorb
jge
lahf
mov
aam
sbb
mov
push
mov
xchg
scas
and
fnstenv
enter
mov
mov
jmp
jmp
popf
int3
imul
into
pushf
dec
jmp
out
shlb
add
jmp
pusha
sub
mov
xchg
or
mov
shl
adc
andl
pop
pop
ss
leave
shl
repnz
andl
dec
int3
dec
and
lret
jmp
xor
xchg
scas
rol
les
jg
out
cmp
into
mov
and
sahf
dec
test
sarb
add
shl
mov
xchg
ret
mov
punpcklwd
mov
sahf
push
lock
sbb
xlat
jb
loop
or
and
addr16
shlb
int3
push
pushw
cmp
add
je
xor
cli
mov
pop
mov
shl
lock
leave
adc
lcall
int
xor
add
sahf
lret
xchg
scas
cmp
into
addr16
lock
mov
loope
sub
mov
fwait
scas
push
mov
out
popa
pop
loop
mov
adc
andb
iret
std
push
sbb
loop
fisttpl
and
add
mov
es
add
and
push
bound
rcr
push
ret
shr
dec
mov
mov
add
daa
mov
ljmp
nop
cmpsl
sub
scas
lret
ds
lret
and
out
mov
loop
pop
dec
decb
ljmp
cmp
popl
mov
fs
lret
mov
loop
xchg
adcb
lcall
cmp
mov
xchg
aam
ret
cmc
mov
scas
es
jle
fcomip
sbb
inc
mov
push
sbb
push
mov
xchg
push
mov
stos
pop
cmp
mov
xor
movsl
arpl
jno
cli
loopne
and
in
incb
xchg
fsub
add
scas
mov
cltd
ret
enter
les
js
fisttps
xchg
cmpsl
pop
add
xchg
out
xchg
mov
cmpsl
hlt
cmc
xchg
sbb
mov
mov
sbb
add
push
ret
rolb
ret
lcall
int3
lcall
or
cs
or
pop
push
lcall
and
lcall
aad
sub
or
orl
scas
cmpsl
mov
lcall
xchg
inc
dec
ficompl
sti
jecxz
mov
movsb
pop
sub
clc
sub
dec
or
mov
add
push
cltd
xchg
rorl
cmpsb
aaa
jle
cmp
xchg
ret
out
xchg
mov
push
pop
cmpsb
cwtl
out
inc
subl
lret
xchg
loop
pop
fbld
xor
sbb
lahf
es
cwtl
add
add
lret
xor
and
in
cmc
add
pcmpgtd
es
mov
pop
xchg
push
out
inc
out
adc
cmpsl
mov
cltd
out
shl
xchg
mov
mov
sbb
scas
sahf
xor
fistps
mov
ret
xor
lahf
sahf
xchg
xchg
push
out
fadds
jb
push
adc
test
jb
std
and
scas
mov
xchg
pop
shll
scas
add
mov
dec
out
ficomps
popl
xchg
daa
sti
sete
push
call
daa
lret
repz
ficomps
mov
jbe
cmpsb
cwtl
bound
cwtl
push
subl
pusha
std
fcoml
outsb
rolb
jnp
and
cwtl
or
cmpsb
jp
out
pop
mov
push
lret
and
mov
xchg
sbb
mov
nop
add
mov
pushf
and
pop
mov
jge
je
out
ret
orb
loopne
mov
scas
cs
inc
push
xor
xchg
cli
add
mov
mov
push
cs
incb
xchg
adc
mov
xchg
mov
mov
xchg
sbb
fwait
xchg
mov
xchg
cmp
cmp
mov
xchg
movsb
negb
cmpsl
add
mov
inc
mov
jmp
mov
push
cwtl
bound
mov
push
mov
les
add
lcall
cwtl
shlb
push
lock
push
out
add
mov
out
movsb
repz
fwait
roll
push
shll
lods
adc
inc
push
rcrl
mov
out
mov
mov
dec
dec
cwtl
and
leave
xchg
mov
mov
loop
rclb
shr
mov
mov
out
add
push
scas
cmpsl
inc
nop
inc
mov
adc
xchg
inc
inc
pusha
bound
ret
mov
add
push
push
jb
xchg
mov
insb
aad
and
mov
fcomip
mov
ret
in
or
xchg
xchg
xchg
adc
cmpsl
pop
pop
cwtl
mov
mov
mov
mov
je
into
out
push
xchg
out
cmpsb
xchg
mov
out
add
xor
lods
cmpsl
rorl
inc
lea
ljmp
sbb
jg
in
mov
mov
ljmp
rorb
xchg
xchg
or
adc
scas
xchg
cld
and
je
into
add
sti
ret
outsl
inc
ljmp
jb
sbbb
or
mov
gs
ficompl
adc
fcmovu
mov
lea
jp
adc
add
loopne
outsl
xchg
adc
sbb
push
pop
arpl
dec
pop
les
repnz
ficoms
scas
xchg
pop
into
into
xchg
lret
adcb
insl
mov
fs
mov
enter
push
loopne
mov
xchg
int
or
cli
mov
cli
scas
in
repnz
nop
out
pop
out
out
dec
lcall
aam
out
jnp
mov
cmp
rcr
pop
mov
inc
fwait
mov
ret
fiadds
mov
pop
push
arpl
sti
sbb
push
xchg
lods
cmpsl
mov
movsl
sub
mov
xchg
push
out
lock
loop
pop
pusha
add
into
pushf
rcll
add
cmpsb
and
and
and
jle
fwait
lahf
add
and
ds
xchg
stos
cwtl
andl
std
ret
cmpsb
scas
cwtl
sahf
sbb
or
xor
out
push
xchg
es
xchg
iret
fucomp
xor
mov
jg
xor
loop
adcb
movsb
rcr
stos
repnz
push
scas
cs
ljmp
cmp
repnz
rclb
es
mov
dec
test
loopne
mov
and
hlt
dec
mov
xchg
stos
es
fadds
out
sbb
negb
and
mov
cmpsl
in
mov
push
adc
divl
pop
into
add
jb
mov
mov
dec
fstps
lds
lahf
xchg
arpl
mov
lret
jbe
inc
push
xchg
adc
call
fcmovbe
and
cmpsl
subb
xchg
xchg
std
push
in
push
mov
and
lret
je
mov
aas
sahf
insl
cmpsl
out
push
cwtl
icebp
or
jle
sub
pop
scas
je
loopne
lock
adcl
loope
scas
shl
outsb
jmp
and
mov
lds
out
scas
or
sub
mov
aas
push
xchg
xchg
inc
jg
lcall
or
mov
mov
rcrl
scas
outsb
scas
xor
mov
in
out
adc
sahf
xchg
and
mov
xchg
enter
ficompl
fsubs
sahf
negl
cwtl
movsb
test
cmpsl
lods
bound
loopne
or
pop
lret
fidivs
scas
lods
std
and
sarl
orb
test
adc
pop
ds
mov
in
cwtl
and
dec
enter
push
inc
out
scas
mov
cwtl
mov
mov
scas
les
lahf
es
mov
adc
scas
xor
and
sub
cltd
xchg
rcl
fstpl
out
add
add
add
es
lret
jge
inc
dec
fs
push
iret
push
mov
add
mov
cwtl
and
xlat
sub
stos
mov
lcall
mov
mov
jecxz
sbb
ja
push
fs
out
push
mov
cwtl
test
ljmp
sbb
loop
out
aam
pushf
push
mov
dec
push
add
sbbb
sub
sahf
xchg
xchg
int
into
jle
mov
jb
xchg
sub
out
xor
rcrl
push
rorb
nop
jmp
loop
cmpsl
mov
movsl
leave
ljmp
mov
test
lcall
out
cmp
lods
adc
loop
pushf
adcl
mov
nop
lar
mov
mov
out
cwtl
inc
rol
jb
loop
stos
mov
jg
lret
setp
sbb
out
mov
add
cwtl
lahf
cmpsl
incb
stos
add
outsb
cmp
cmp
ret
xchg
xchg
add
inc
data16
dec
stos
add
xchg
scas
pop
sub
cmpsl
adcl
push
stos
out
iret
outsb
cli
cli
add
popa
mov
nop
lret
lcall
jbe
sbbb
repz
lcall
jp
mov
sahf
lahf
pop
mov
aam
ljmp
inc
fidivs
xchg
xor
lahf
movsb
mov
inc
mov
cmpb
es
loope
out
lcall
test
mov
add
sub
in
inc
enter
movb
shl
outsb
sbb
cli
outsb
adc
and
loopne
mov
push
pop
mov
sub
jecxz
mov
or
rorb
in
jbe
scas
cmpsb
xor
pusha
jbe
out
mov
dec
cwtl
das
lret
push
xchg
loop
nop
ljmp
fisubl
icebp
loopne
lock
mov
cs
xchg
ret
nop
out
out
mov
dec
mov
filds
xchg
adc
xchg
adcl
push
add
mov
mov
xor
nop
je
mov
sahf
jbe
cs
test
in
or
push
jb
or
popa
out
mov
inc
adcl
push
aad
pop
mov
add
rcll
gs
int3
lret
xchg
and
stos
mov
addr16
retw
lret
test
pop
adc
add
mov
leave
rcrl
rclb
xchg
scas
es
shl
cwtl
mov
scas
mov
test
and
popf
jle
scas
jmp
ja
pop
filds
mov
mov
pop
xchg
pop
ljmp
fsubrp
xchg
mov
xchg
ret
scas
test
sahf
lret
inc
rcl
xchg
push
into
popf
negb
in
cmpsb
jecxz
xchg
cmpsb
into
test
mov
pop
sbb
and
mov
add
ret
mov
sahf
test
ljmp
xchg
jg
out
xchg
add
mov
aam
fsubrp
es
ret
mov
push
sti
xchg
push
mov
shlb
xchg
add
leave
lahf
add
add
ss
and
dec
push
push
ret
xchg
cmpsb
cmpsl
icebp
cwtl
scas
nop
lahf
popf
cmpsl
flds
mov
adc
cs
sar
int3
mov
int3
test
add
mov
push
ljmp
out
dec
adc
pop
inc
pushw
out
clc
mov
sub
jo
xchg
bswap
xchg
ret
ret
xor
xor
movsl
shlb
int3
mov
lret
fbld
push
fwait
mov
cmp
xchg
add
mov
or
mov
and
repnz
and
push
xchg
scas
stos
push
inc
scas
and
sub
movsl
int3
and
push
out
add
movsl
adc
pop
incb
mov
sub
pop
mov
sbbb
int
sub
xchg
es
cmc
dec
in
stos
fmulp
test
rcrb
subl
scas
fsubp
test
push
push
int3
cmpsb
mov
cmpsl
fwait
sti
mov
xor
subb
jl
rolb
mov
mov
stos
inc
xchg
movsb
subb
dec
icebp
xchg
xchg
test
xchg
cld
mov
xchg
int3
xor
scas
int
xchg
scas
aam
xor
aad
xchg
into
mov
lret
icebp
lcall
jnp
sub
rcrb
sbb
mov
nop
scas
xor
add
ljmp
scas
sub
lcall
into
inc
xchg
scas
shr
mov
push
out
stos
sahf
scas
cmpsl
dec
jbe
clc
xchg
shl
out
xlat
or
inc
xlat
sub
cmpsb
aaa
stos
or
fbld
lahf
pushfw
mov
jecxz
or
movsb
mov
add
adc
xchg
mov
mov
loop
push
ret
inc
adc
xchg
sub
adc
fdivs
mov
or
mov
xchg
mov
fwait
add
cmp
push
mov
out
mov
xchg
out
out
loopne
and
sbb
mov
loopne
xchg
add
add
inc
into
lcall
dec
sbb
mov
xchg
mov
rorb
scas
inc
cltd
lahf
or
mov
mov
mov
scas
out
cli
test
or
shll
mov
mov
xlat
xchg
cmpsl
out
shll
mov
cmpsb
loopne
cwtl
outsb
dec
out
xchg
andb
and
mov
cs
lcall
lahf
mov
pusha
mov
xchg
sahf
lret
lahf
push
jge
lahf
fdivrl
jb
stos
pslld
movsl
xor
xlat
out
jb
popf
xor
ljmp
mov
dec
mov
jg
xchg
lods
cmpsl
ficoml
mov
in
notb
dec
cli
mov
pop
pop
mov
mov
cld
pop
lods
repz
lcall
push
jns
out
push
mov
outsb
xor
repz
or
xchg
aaa
push
mov
pop
fiadds
test
fstpl
or
iret
sub
cwtl
scas
mov
and
mov
sbbl
in
and
pop
test
push
nop
and
cmpsl
dec
scas
adc
adc
cwtl
jecxz
pop
mov
mov
aam
lahf
cmpsb
mov
movsb
mov
lods
stc
sbbb
lahf
push
scas
mov
imul
movsl
xchg
shrl
hlt
push
mov
xor
mov
mov
pusha
aam
outsb
mov
push
dec
dec
inc
push
or
xor
mov
adc
out
mov
xor
xchg
iret
inc
push
les
stos
xchg
ds
pop
adc
mov
add
xchg
push
stos
pop
lcall
lahf
sbb
mov
inc
xchg
mov
mov
aam
fwait
dec
mov
mov
decl
shrl
adc
push
mov
dec
xchg
mov
cmp
sub
pop
int3
movsb
adc
test
mov
add
push
lret
add
add
fndisi(8087
cmpsb
movsb
mov
push
outsb
mov
xchg
mov
xchg
mov
cmpsl
push
jae
push
mov
jg
mov
cmpsb
movsl
push
add
fcmove
or
ret
stos
pop
mov
das
ja
into
and
mov
scas
push
sub
arpl
out
jae
enter
mov
rclb
pop
jbe
and
shll
filds
ds
adc
xor
ret
call
push
xchg
pop
pushf
into
mov
pushf
sahf
mov
shrb
push
cmpsl
jbe
xchg
adc
push
dec
inc
xchg
out
in
loope
dec
scas
xchg
cmp
rol
lret
iret
test
int3
ss
mov
test
mov
mov
out
jecxz
xchg
xchg
xchg
xchg
popa
jmp
dec
ss
mov
xor
jp,pn
jl
arpl
sahf
pop
icebp
enter
jg
sub
dec
mov
int
out
cmp
or
es
lods
rcr
loop
cmpsl
cli
sahf
lahf
xchg
xchg
xchg
push
ficompl
int
sbb
jmp
negb
pop
xchg
out
outsl
stos
rcrb
inc
mov
add
mov
cmpsb
xchg
lods
ret
xchg
jp
add
popa
mov
xchg
xchg
lret
xor
adc
hlt
or
sbb
pop
test
clc
lcall
imulb
sub
scas
lret
inc
push
fs
shl
pop
push
cmp
or
ds
ret
lods
mov
xchg
or
add
loope
xlat
loop
mov
sub
jecxz
or
and
mov
imul
ret
xchg
scas
bound
mov
aaa
scas
cmp
push
xchg
mov
not
cmpsl
mov
xor
sbb
push
sub
rcl
sarl
lcall
jle
scas
mov
sub
ret
push
ljmp
ss
js
fsubs
mov
bound
stos
or
aam
loop
daa
xchg
aad
adcl
xchg
push
mov
xor
fnstenvs
or
fnstcw
mov
xor
loop
xchg
lret
xchg
inc
jge
bound
out
inc
push
mov
aaa
pop
nop
lods
dec
jbe
sub
mov
xor
fimull
iret
xor
sub
push
imul
stos
xchg
xchg
out
in
les
mov
pop
cmp
sti
lahf
or
mov
cwtl
sub
adcb
cmp
mov
xchg
jp
addl
xchg
mov
fwait
or
frndint
popf
lods
mov
ror
cmpsb
mov
inc
testb
sahf
loop
mov
data16
cmpsb
mov
loop
and
mov
mov
icebp
xchg
push
shlb
sub
jbe
dec
orb
out
mov
mov
hlt
mov
mov
xchg
inc
das
inc
cmpsl
push
out
xchg
and
dec
addr16
shlb
mov
hlt
fdivs
fsubs
into
pop
out
loope
lock
mov
out
add
mov
ret
stos
jb
xchg
xorb
jmp
testb
mov
subb
loopne
rcll
lret
mov
addb
jb
loop
stos
push
or
lods
ljmp
movsb
xor
in
lret
xor
xchg
xor
mov
push
xchg
sub
lret
movsb
pop
jecxz
fstl
dec
rcrb
mulb
jp
fmull
mov
scas
clc
mov
movsl
icebp
imul
and
mov
push
out
pushf
jg
push
cwtl
xchg
push
out
and
mov
lock
sub
pop
push
mov
decl
lahf
mov
xchg
mov
mov
shr
enter
dec
lret
mov
call
ja
insl
aad
or
outsb
pop
pop
fsubrp
fimull
mov
mov
lcall
lcall
mov
ljmp
mov
mov
es
sahf
pop
xchg
repnz
adcl
sti
inc
not
scas
lahf
cld
repnz
sub
mov
xchg
xchg
xchg
inc
pop
mov
xchg
pop
mov
loop
jo
movsb
lcall
push
orb
lea
pop
cmpsb
movsb
mov
cld
ja
xchg
xchg
lcall
icebp
cmp
cli
enter
subb
imul
mov
cwtl
in
xlat
pusha
and
adc
fisubrl
call
xchg
jns
ja
cwtl
daa
push
cmpsl
fmull
cli
mov
mov
jno
push
cmpsb
fdivl
fsubrp
xor
mov
iret
out
out
sbb
repnz
push
sbb
out
popf
femms
mov
rorl
xchg
test
xchg
mov
mov
shl
xchg
scas
cs
mov
lock
aad
leave
mov
mov
dec
fdivrl
xchg
fldl
jo
dec
mov
shll
xchg
xchg
sub
ss
push
mov
ss
adc
xor
das
out
xchg
inc
and
shl
xchg
xchg
ret
cltd
pop
in
sbb
dec
xchg
pop
cmp
xlat
xchg
mov
stos
movsl
and
jno
pop
mov
dec
or
scas
mov
loope
inc
fistl
xchg
outsl
xchg
fsubr
dec
sub
bound
xor
sbb
or
mov
cmpsl
sbb
stos
mov
xchg
scas
aas
data16
shlb
mov
sbb
cmpsb
sahf
or
cmpsl
out
icebp
cwtl
dec
cld
push
loopne
mov
orb
pop
pop
mov
aas
mov
xchg
cwtl
ljmp
push
outsb
lret
fcomip
xor
dec
push
pop
loop
sahf
ljmp
mov
mov
lret
cltd
jl
mov
xchg
push
insl
mov
or
or
cmp
ret
mov
mov
neg
sub
xchg
adc
mov
daa
inc
add
jge
push
or
mov
repnz
ljmp
mov
pop
jae
push
mov
mov
cmpsb
scas
mov
push
imul
mov
adc
cmpsb
in
lahf
cmpl
rcrl
lret
fcmovb
add
lock
mov
xchg
repnz
test
jg
loop
icebp
fisttps
lcall
mov
outsb
xchg
push
addl
out
xchg
jb
add
ljmp
stos
sub
sub
fisttpll
dec
jg
xchg
adc
clc
ret
mov
cmc
push
es
add
push
es
stos
mov
ja
inc
jb
mov
xchg
jmp
sbb
cld
ds
out
add
pop
lcall
rcr
loopne,pt
inc
iret
mov
mov
inc
mov
lcall
addl
lret
int3
lahf
sbb
loopne
cmpsb
ret
mov
cwtl
stos
sti
out
lds
sahf
repnz
jb
mov
or
mov
push
cwtl
loopne
ljmp
mov
push
movsb
mov
pop
out
xchg
inc
stos
ret
es
outsb
jl
inc
stos
lret
in
scas
cmpsb
mov
fisubs
mov
clc
fdivrl
inc
fisubs
out
adc
add
sti
mov
test
fnsave
ljmp
mov
sbb
pop
mov
pop
push
adc
ret
mov
adcl
call
jmp
mov
xlat
push
lock
ss
data16
sbb
scas
add
cmp
jnp
xchg
mov
movsl
sbb
out
shrb
jle
inc
adc
jb
jp
push
aaa
push
stos
and
xor
idivl
inc
ss
rorl
outsl
cmpsl
fnsave
inc
popf
and
les
incl
lahf
xchg
jo
inc
ds
mov
lcall
repnz
iret
mov
orb
xchg
sbb
sahf
data16
pop
outsl
mov
push
mov
sub
sarb
cmpsl
ret
mov
xchg
mov
lret
rclb
inc
lcall
ret
scas
adc
sub
ficoms
mov
adc
out
shrb
pusha
or
idivb
cmpsb
mov
ljmp
ret
jo
enter
sti
icebp
rorl
sahf
pop
mov
popf
pushf
jge
xor
lods
scas
lds
aaa
push
in
faddp
ror
loope
lret
add
xchg
scas
mov
lods
jo
sbb
jmp
sahf
loope
test
xchg
inc
xor
xchg
lcall
in
lods
xchg
xchg
and
lcall
inc
outsb
lahf
lahf
inc
add
mov
ja
sub
mov
sub
jo
in
jae
mov
in
mov
cmpsl
lods
sub
in
push
out
sti
mov
xchg
dec
loop
cmp
mov
int3
gs
sti
dec
stos
loop
cmp
gs
cmc
jbe
sbb
cmpsl
and
rol
sahf
lret
sub
loope
mulb
out
and
add
sub
mov
push
xchg
inc
push
xor
add
mov
xchg
lock
outsb
sbb
arpl
mov
cwtl
dec
es
cmpsb
and
push
lcall
sbb
mov
dec
or
lock
dec
ror
rcrb
mov
xchg
cmp
aam
shr
loope
ds
mov
iret
hlt
jbe
mov
inc
stos
stos
mov
outsl
in
popa
xchg
out
cmp
stos
mov
lret
mov
sbb
sahf
data16
bound
leave
mov
lcall
inc
lods
imul
xchg
adc
lods
call
inc
hlt
ret
xor
adc
movsb
and
rolb
lcall
xor
lock
adc
xchg
cltd
jb,pn
movsb
mov
cmpsl
movsb
xor
test
stos
test
divl
mov
mov
mov
lcall
xchg
lcall
mov
xchg
dec
xchg
lea
daa
adc
bound
dec
shlb
hlt
add
and
jecxz
ror
inc
adc
movsb
cmp
frstor
lock
jo
sub
insb
mov
sahf
or
in
jns
movsb
out
lret
mov
loope
dec
dec
test
scas
repnz
jae
mov
adc
xchg
cmc
pop
leave
call
nop
dec
cld
ljmp
mov
loopne
pop
cwtl
mov
stc
pop
push
jo
and
xchg
lret
add
divl
xlat
mov
pop
dec
pop
and
jecxz
repz
fmul
mov
into
xchg
add
xchg
leave
pop
sti
mov
dec
xor
xchg
push
popf
add
int3
jmp
testl
rolb
into
and
repnz
lods
or
cmpsl
add
repnz
xor
xchg
push
jb
jnp
bound
and
push
jo
ss
mov
out
dec
int
nop
repz
fisttps
jmp
and
push
mov
mov
and
sahf
and
jmp
adc
pop
imulb
stos
sub
and
roll
sbb
and
dec
and
jge
lods
pop
shl
pop
push
out
stos
mov
int3
jne
sarl
cmp
loop
mov
fwait
movsl
pop
loopne
data16
xor
ds
loop
adc
pop
and
outsl
xchg
lahf
inc
arpl
pop
div
pop
and
xchg
mov
icebp
out
mov
or
pop
mov
test
pop
rorl
enter
icebp
in
adc
pushf
scas
or
adc
cmp
icebp
loop
xchg
lods
cli
cld
add
add
sub
mov
mov
dec
sbb
jecxz
repz
addr16
pop
fisubrs
imul
dec
inc
sbb
inc
xchg
mov
pop
cltd
add
out
lock
or
outsb
out
dec
sub
outsl
out
dec
or
cltd
hlt
dec
not
or
mov
daa
loope
cmc
jbe
jmp
push
mov
aad
loop
pusha
mov
pop
mov
dec
outsb
fldenv
rolb
sbb
jnp
movsl
idivl
dec
push
ss
xor
mov
scas
jmp
cwtl
ret
pusha
pop
pop
xchg
mov
lods
mov
sbb
add
jl
bound
sbb
mov
icebp
push
ret
push
and
fxch
leave
mov
cmpsl
sbb
lock
nop
cmpsb
addr16
dec
push
fdiv
je
lret
iret
adc
mov
xor
icebp
mov
leave
lods
loope
and
insl
leave
roll
cmp
insl
mov
mov
mov
inc
rclb
add
ret
dec
mov
jecxz
icebp
daa
add
repz
xor
pop
jbe
pop
mov
push
repz
repnz
in
xchg
ret
in
popa
stos
pop
test
insl
lret
xchg
add
mov
cmc
aad
jmp
mov
jg
cmpsl
lods
in
out
or
mov
mov
test
jb
pop
xchg
dec
and
xchg
fisubrl
mov
push
cmp
mov
neg
inc
fildl
inc
daa
or
xor
addb
dec
ja
pop
cld
inc
push
sahf
adc
mov
push
fcmovnb
mulb
xor
fdivl
rorb
jmp
xchg
pop
leave
stos
aaa
sbb
xchg
or
xchg
jmp
xchg
setbe
int3
ret
mov
lcall
ret
popf
xor
cmp
fistps
xchg
inc
fildl
lahf
pop
xlat
xchg
mov
out
lahf
adc
cli
shlb
inc
jmp
fadd
cs
xchg
push
dec
xchg
and
lret
or
pop
imul
shrb
dec
push
sbbb
ret
push
pop
mov
sahf
mov
lods
popa
sub
nop
pop
into
mov
inc
sbb
xchg
inc
fdivrl
shl
xor
push
out
out
repz
push
in
jmp
mov
call
dec
sbb
mov
popa
js
add
dec
and
int3
stos
aas
ljmp
jecxz
adc
popf
in
aaa
push
cmc
adc
xchg
mov
cmpsb
mov
push
add
dec
clc
mov
cli
fwait
xchg
test
sti
xor
cmpsb
psadbw
outsl
nop
pop
test
mov
icebp
mov
imul
cmpsb
cmpsl
sbb
xor
xor
adc
or
sbb
mov
or
and
push
push
mov
insb
adc
mov
xchg
add
cmc
push
imulb
out
push
andl
cmpsl
lret
js
out
test
les
fwait
pop
cmpsb
ja
fdiv
cli
dec
inc
cmpsl
fwait
pusha
jp
or
xor
leave
aas
and
movsb
inc
xor
mov
jmp
lods
cmc
cmp
ror
movq
adc
icebp
jmp
adc
xor
or
test
ret
xor
pop
pop
jmp
push
cmc
pop
and
arpl
push
iret
in
iret
xchg
cli
cmp
lods
jne
adc
nop
out
xlat
jmp
les
lcall
mov
hlt
cmp
mov
lods
aad
test
adc
jmp
sbb
scas
lahf
add
xor
sti
loopne
scas
jae
and
xchg
mov
stos
das
mov
arpl
jl
rorb
andb
pop
cld
sarb
out
inc
ret
nop
repnz
xor
xlat
ret
shlb
pusha
icebp
or
mov
jecxz
mov
or
shl
jmp
add
mov
loope
call
and
lret
icebp
jb
arpl
cld
in
call
and
push
jns
and
lret
scas
inc
test
int3
in
xchg
scas
adc
jb
arpl
or
push
sbb
adc
xchg
data16
inc
icebp
popf
and
jnp
dec
lods
pusha
shl
push
repz
mov
push
jbe
out
adc
arpl
loopne
sub
mov
test
out
int3
jmp
sub
xchg
and
cmc
jp
lret
jp
mov
js
cmp
and
or
xchg
xchg
xlat
push
and
cmp
pop
dec
pop
outsb
ret
test
repz
test
cmp
out
lret
mov
xor
loop
dec
cmpsb
enter
mov
leave
adc
jecxz
and
call
je
insl
jb
movsb
adc
and
cmpsl
xchg
into
mov
notl
cmc
sbb
mov
xor
push
fsubrl
inc
ja
inc
cs
shrl
frstor
mov
mov
lods
add
pop
adc
hlt
lret
dec
dec
in
adc
mov
test
lcall
push
sbb
adc
adc
stc
jnp
movsb
ljmp
adc
data16
mov
stc
jmp
lcall
dec
cs
scas
sbb
ret
inc
movsb
stos
sbb
ljmp
js
mov
ficompl
fwait
inc
mov
and
incb
stos
mov
out
iret
xor
push
inc
push
cmp
test
stos
lret
sub
xlat
frstpm(287
addl
enter
out
aam
jecxz
and
jb
cmp
std
adc
jae
icebp
and
mov
loop
push
fdiv
loope
movsb
fcmovu
xchg
pop
js
scas
arpl
push
mov
and
stos
add
out
sbb
jb
iret
xchg
test
jl
sbb
movsb
adc
xor
pop
or
adc
outsl
jle
push
loope
popa
clc
push
pop
dec
cmp
inc
cli
adc
inc
cmpsb
outsb
cmp
push
xor
xlat
and
sbb
mov
lods
fisubl
xor
lcall
shrl
sbb
or
cmpsl
divl
xlat
in
mov
push
fwait
mov
stos
sar
das
int3
leave
push
ljmp
enter
jp
push
leave
and
inc
cmc
xchg
mov
pop
call
fmul
adc
leave
mov
fwait
sahf
insl
jmp
fiadds
cmpsb
cmp
pusha
jmp
arpl
testb
mov
ret
jo
sbb
and
les
mov
not
out
xor
jmp
mov
add
hlt
cmpsl
sbb
das
push
inc
in
data16
and
aaa
cmp
insb
pop
lods
lahf
inc
sti
sbb
fiadds
and
ret
aad
and
sbb
mov
lods
adc
sbb
dec
jmp
cmpsb
cmp
xlat
lods
inc
outsb
loopne
loope
sbb
test
cmp
das
ret
in
inc
iret
movsl
clc
inc
xchg
sbb
jmp
mov
dec
or
fistpll
inc
outsl
push
sahf
fcmovbe
and
mov
dec
push
imul
cmpsl
shr
addr16
mov
lods
enter
out
int3
push
es
xor
jae
mov
rcl
int
shlb
arpl
sub
loope
pushf
cltd
xor
adc
xchg
cmc
xor
sbb
cmpsl
mov
mov
xchg
shl
push
mov
repnz
mov
fildll
lock
xchg
test
push
adc
push
sub
repz
imulb
popf
adc
into
out
loop
pop
sbb
divl
mov
adc
xchg
jle
adc
pop
cld
xchg
dec
dec
lahf
ret
mov
leave
imul
xor
int3
insb
or
adc
mov
mov
jns
mov
pop
repz
es
mov
sub
sbb
or
movsl
xchg
sub
push
push
addb
mov
aaa
mov
rol
pop
adc
shlb
es
lret
mov
jne
mov
popa
mov
adc
lret
cmp
mull
add
divl
mov
push
mov
mov
pop
movsl
icebp
repnz
dec
push
sahf
sub
push
int
xor
inc
shl
jno
sahf
loope
cli
adc
das
icebp
xor
imul
xchg
in
mov
les
shr
inc
adc
and
or
negl
loope
mov
daa
mov
ss
ja
bound
test
rclb
aad
inc
adc
cltd
lock
imulb
jbe
mov
fisttps
fistps
shl
xor
es
stos
xor
into
arpl
femms
cld
xor
mov
dec
into
movsl
stc
jle
push
mov
rorl
adc
jnp
xor
fdivl
shr
push
roll
andb
jge
rclb
imul
cld
mov
leave
and
std
imul
repz
pop
ficoml
ret
push
nop
fistpll
cmp
mov
cmpsl
adc
jmp
fcmovbe
mov
adc
jno
addr16
dec
mov
testl
mov
xor
jmp
inc
mov
mov
cmpsb
rorb
rcpps
enter
jnp
adc
sub
xor
inc
dec
and
pushf
adc
and
cmpps
por
lea
inc
mov
inc
mov
loop
add
jne
movl
sbb
mov
sub
test
fdivrs
dec
pop
and
push
shl
pop
adc
adc
mov
pop
cmpsb
aad
stos
push
mov
out
test
dec
jge
popa
and
jl
rcl
scas
xchg
into
mov
sub
fsubrl
rclb
jo
in
fsubl
inc
pop
or
xchg
lea
aam
js
xor
int
dec
fbstp
enter
fwait
cs
enter
cmp
jnp
push
dec
push
loop
insl
jmp
repnz
jmp
daa
ds
daa
and
mov
cltd
mov
ret
ret
jno
imul
fisubl
push
dec
push
test
inc
out
xor
repz
pusha
dec
pusha
loopne
adc
mov
ss
mov
cmc
sub
ret
dec
lods
movsb
mov
dec
inc
mov
pop
movsl
out
outsb
mov
test
insl
jp
adc
loopne
and
lret
xchg
xor
jo
adc
call
stos
lds
fisttpll
leave
sub
int3
fcoms
xor
and
shlb
fisubrs
push
in
stos
mov
movsl
fisttps
pop
mov
mov
jg
in
gs
imul
stc
int
dec
rclb
lret
pop
xchg
fists
out
leave
icebp
in
js
push
sahf
lods
dec
adc
testl
lret
pop
pusha
ror
pop
add
mov
sbb
out
pushf
mov
loop
out
sbb
sbb
rclb
xchg
out
shlb
pop
push
out
repnz
test
lcall
outsb
nop
lods
out
xor
jbe
out
movl
mov
faddp
pop
ret
cmp
hlt
adc
leave
mov
push
lock
ljmp
in
movsb
push
into
push
cmpsl
test
push
hlt
aas
icebp
rcl
stc
mov
sub
adc
jae
insl
push
and
xchg
push
imull
test
push
and
pop
jns
call
loope
imul
je
lahf
scas
and
xor
lds
pop
sbb
divl
or
adc
push
mov
iret
xor
add
add
stos
lret
jno
jno
or
sbb
mov
mov
or
leave
int
mov
dec
mov
jmp
bound
adc
pop
rclb
out
cmpsl
lods
shlb
inc
fisttps
int
or
sbb
bswap
icebp
push
pushf
leave
adc
cli
xor
mov
insb
int3
adc
xor
clc
cmp
lds
inc
and
sbb
movsl
into
cs
aad
stos
mov
mov
fldenv
adc
sbb
pop
stc
in
nop
es
dec
nop
sbb
rol
dec
push
call
bound
jmp
loope
fidivs
xorb
cmpsb
or
mov
xchg
ss
int3
cmc
pusha
mov
jecxz
js
sbb
mov
and
je
push
aad
sub
and
addr16
imul
push
pushf
sbb
jmp
mov
repnz
xor
sti
mov
push
cmp
or
ret
loop
stos
sub
and
mov
xor
pop
pop
mov
inc
sub
aaa
out
test
insb
dec
dec
xchg
pusha
cmp
inc
sbb
outsb
and
into
xor
orb
repz
xchg
cmpsb
std
and
cmp
xchg
movsb
cmpsb
fcmovu
fbstp
adc
cmpsl
mov
lods
cld
mov
jns
movsl
mov
negb
adc
jno
sub
pop
adc
aaa
out
jae
lret
imull
or
in
push
sbb
sub
lret
aaa
xchg
jp
adc
ret
add
mov
inc
ss
bound
or
push
add
frstor
ja
or
push
pop
push
enter
pusha
mov
or
out
mov
push
push
scas
aaa
in
lods
aam
pop
out
mov
cmp
or
shrl
popf
mov
mov
mov
push
pop
mov
mov
fisubs
stos
jae
les
push
leave
xor
mov
iret
movsl
divb
hlt
nop
jmp
addr16
or
stos
je
out
mov
jmp
in
jecxz
sub
adc
and
pop
sub
jmp
adc
clc
pop
lahf
stc
adc
add
js
pop
sahf
lock
sub
shl
adc
imul
sbb
cmpsl
fstl
in
jb
jns
hlt
mov
sbb
ret
and
in
pop
or
xchg
mov
mov
int3
inc
push
into
lods
repnz
xlat
test
fs
xchg
or
mov
xchg
cmc
adc
sti
ret
mov
test
jb
xchg
cmpsb
ljmp
xchg
xor
fildll
mov
cmpsl
xor
lahf
mov
adc
movsl
mov
nop
mov
icebp
sub
xchg
int3
jecxz
clc
xchg
mov
sbbl
mov
sbb
inc
int3
shll
inc
pop
mov
inc
cwtl
out
xchg
into
icebp
mull
loope
leave
sub
aam
repnz
movsb
ret
cmp
mov
repz
cmp
mov
pusha
pop
sbb
out
or
aas
mov
imul
stos
frstor
mov
sbb
ljmp
flds
push
cmp
aaa
adc
nop
fcomp
and
cli
pop
shl
and
ljmp
push
repnz
xchg
mov
xor
pop
and
jns
rcr
or
adc
or
or
adc
stos
push
xchg
out
out
ret
xchg
cs
xchg
stc
xor
notl
sub
addr16
popa
int3
jl
ret
xchg
add
or
sub
notb
ret
push
and
xor
adc
dec
adc
stos
fisttps
push
arpl
lea
shll
sti
mov
xor
push
mov
dec
adc
push
cmp
sbb
push
dec
jbe
imul
shl
cs
cmp
sub
testb
imul
push
or
adc
scas
sub
ficoml
pop
jmp
pop
push
ss
mov
leave
je
adc
ss
or
push
xor
push
jo
leave
inc
xorb
cmp
repnz
pusha
movsl
icebp
sub
push
pushf
repz
sbb
imul
fnsave
push
lret
mov
sahf
bound
es
fstl
adc
mull
shl
push
sub
push
inc
and
fsub
ljmp
repnz
mov
cmpsb
loop
dec
js
cli
rep
dec
adc
repnz
call
out
adc
and
test
pop
inc
sub
cmp
mov
push
jmp
sub
adc
ficoml
push
cmp
inc
xor
xor
cld
inc
out
out
mov
jecxz
lods
leave
shlb
and
mov
and
sti
jle
mov
mov
stos
lret
nop
pushf
out
mov
jno
or
jmp
mov
lods
mov
add
jnp
lcall
sub
out
mov
mov
mov
inc
inc
xor
adc
and
out
test
push
mov
cmpsb
clc
push
mov
sbb
xchg
mov
pop
aam
adc
xchg
shlb
push
mov
in
addr16
xor
cmp
bswap
push
je
fcoml
clc
test
mov
loope
es
enter
add
mov
mov
cmp
cli
xchg
fdivs
lods
fnstenv
leave
fmuls
mov
add
out
aad
ret
pop
div
fdivs
lcall
pop
add
sub
aad
adc
pop
in
shll
sbb
jp
aaa
lods
sbb
ficompl
sbb
xchg
shll
mov
pop
dec
sub
loope
imul
out
cli
mov
mov
inc
push
pop
cmovl
xchg
sub
je
mov
fnstenv
sbb
es
stos
rclb
sub
and
push
ret
rclb
repnz
iret
loopne
test
les
xor
xor
frstor
fdiv
or
out
roll
push
repz
mov
fsubr
sub
push
inc
rclb
inc
fnclex
push
leave
icebp
mov
pop
out
sar
mov
scas
adc
lret
out
sbb
dec
cmc
jns
iret
cmpsb
mov
out
pop
mov
mov
mov
mov
shrb
lret
xchg
sub
or
mov
int
and
sti
inc
cmp
cmpsb
imul
xor
popa
and
dec
fdivrl
dec
adcl
jo
sbb
out
and
push
int3
repnz
mov
xor
std
sti
iret
hlt
lahf
sub
pop
sarl
ret
push
and
es
fdivrs
imul
test
sub
jno
and
push
and
push
add
and
push
shlb
lods
and
bound
mov
cld
shl
pop
outsl
lods
int3
mov
arpl
and
cmp
ljmp
push
xorb
daa
jmp
push
clc
or
and
popa
jmp
jmp
mov
mov
adc
stos
cmp
sbb
xchg
jp
push
lea
jl
aam
jns
stos
xor
fisttpl
cmpsl
push
xlat
mov
jmp
adc
ja
mov
int3
pop
fisubs
pushf
scas
mov
mov
mov
dec
leavew
or
push
cld
and
inc
jle
push
mov
pop
sub
xor
notl
fildll
cmpsb
xchg
adc
lock
in
fdivl
loope
cmp
int3
pop
mov
aaa
cmp
shr
sub
push
adc
repz
mov
push
fwait
push
ljmp
sbb
pop
aaa
pop
in
cmp
and
lods
stos
sub
loop
pop
or
cmpsb
cld
push
pusha
out
xor
push
push
icebp
adc
mov
cmp
call
sub
lret
lods
sub
shlb
lahf
cmp
or
mov
or
and
mov
icebp
adc
push
lock
rcll
inc
pop
into
pop
mov
sbb
pop
out
mov
cld
sbb
cld
sbb
dec
mov
jmp
adc
mov
xor
and
std
and
test
mov
movsl
ror
or
xchg
and
jmp
in
lods
adc
jo
cmp
gs
xor
and
push
leave
cld
mov
rep
jp
mov
addr16
mov
enter
cmpsb
movsl
xchg
lock
jmp
sbb
sti
mov
adc
and
and
xor
imul
pop
aad
shrl
clc
jns
out
fdivs
lock
fsts
pop
nopl
stc
and
sub
gs
fdivrs
das
hlt
push
dec
daa
xchg
adc
movsl
fucomi
ret
fdivs
rcrl
js
xchg
imull
adc
inc
in
jbe
lods
scas
sbb
fcomp
sbb
outsl
dec
inc
sbb
rcrl
jge
add
andb
lods
jmp
push
out
daa
xchg
adc
fdivl
ss
and
test
add
mov
xor
or
mov
cmpsl
inc
test
or
and
lods
ret
inc
mov
int3
jae
out
insb
into
pop
cmp
lods
dec
out
lock
and
fisttpll
je
adc
cmpsb
nop
popf
sub
icebp
rcr
xor
enter
and
fwait
inc
pop
stos
mul
mov
push
lock
xor
and
imul
movsb
mov
and
cmp
jo
sarb
cli
adc
push
data16
jo
loop
daa
mov
pusha
jmp
lds
sti
mov
cltd
lock
mov
adc
pushf
jmp
push
cmp
leave
es
lods
repz
jnp
lods
xor
je
in
into
sbbb
sahf
jmp
fldcw
rorl
mov
mov
sbb
lret
push
mov
cmp
push
cmpsl
dec
test
or
inc
in
or
mov
outsb
sub
jmp
inc
adc
dec
into
cmp
mov
push
mov
mov
inc
push
pop
push
aad
fiaddl
stos
mov
cmp
add
pushf
adc
lods
sti
dec
cwtl
iret
ja
xlat
mov
mov
test
mov
std
cld
push
mov
jle
cli
ror
push
push
sbb
push
imul
hlt
das
sub
lret
and
mov
adc
xchg
xor
movl
mov
loop
mov
or
lods
scas
jno
inc
sbb
mov
xorl
data16
adc
cmpsl
out
in
lods
scas
bound
xor
test
push
jl
iret
push
iret
out
pop
lods
xchg
mov
sbb
cli
adc
fs
xor
rol
sahf
icebp
fstps
push
enter
int
movsl
xor
int
sarl
pop
push
adc
jmp
dec
shl
inc
xlat
xor
jb
inc
lret
sub
ret
fstpl
es
or
fnsave
fcoml
sub
adc
subb
xor
int3
push
adc
mov
or
cmp
or
out
fbld
stos
inc
stos
jb
add
pop
sarb
xor
ret
pop
lock
mov
mov
xorb
test
jl
lods
ja
pop
sbb
pop
jecxz
mov
dec
jo
fsubl
and
stc
lret
shlb
cld
jl
xor
push
cmp
out
ss
mov
fldl2e
inc
sub
sbb
push
sbb
pop
push
pop
jp
cli
sti
fsubrs
cmp
cmp
bound
enter
flds
jge
sbb
fs
pop
testl
fisttpll
clc
addr16
stos
stc
adc
push
and
adc
stos
dec
xlat
int3
insl
push
repnz
add
movsl
pop
jge
rorl
mov
xor
dec
outsl
push
xor
jae
pop
xchg
cli
cmp
mov
push
dec
jno
ficoml
mov
inc
iret
daa
push
cmp
insl
fwait
ret
scas
adc
cmp
imulb
aaa
out
cld
xor
cmpsl
aaa
lcall
idivl
movsl
fcmovnu
rclb
push
mov
sbb
mov
adc
gs
adc
ss
imulb
lds
jo
shll
jbe
jae
cltd
xor
push
sbb
movsl
cmc
gs
pusha
pusha
xchg
dec
not
sub
xlat
aam
xor
or
adc
es
cli
out
std
mov
out
jbe
dec
mov
clc
outsb
pop
stos
jmp
push
dec
sti
push
jp
push
les
dec
mov
push
cld
adc
adc
push
pop
cmpsb
sbb
rcr
stc
lds
adc
xor
ret
sub
cmp
fisubrl
sahf
in
adc
cmpsb
fdivrs
or
xor
adc
jo
push
mov
pop
sub
leave
fistl
lock
arpl
xchg
movsl
sub
ljmp
movsw
adc
dec
out
les
out
repnz
lods
mov
mov
or
test
dec
mov
fwait
jg
std
inc
test
mov
xchg
xchg
xchg
addl
mov
xchg
mov
xchg
mov
fidivs
lret
or
mov
dec
push
xchg
loop
lock
mov
lcall
and
orb
inc
xchg
push
bound
cmpb
xchg
jb
xchg
jbe
testb
inc
popa
xchg
faddp
lret
cmpsb
lret
les
inc
ljmp
xchg
inc
out
pusha
subb
mov
jg
xchg
loopne
cmpsl
scas
es
mov
push
mov
add
popw
testb
scas
jbe
mov
les
bound
mov
orb
scas
movb
outsb
mov
fimuls
pop
mov
lcall
push
lea
push
arpl
scas
mov
or
jbe
ds
inc
gs
pop
xchg
sbb
daa
out
les
testb
lret
or
cmpsb
mov
into
lock
pop
mov
mov
mov
nop
mov
xchg
or
out
mov
dec
dec
popl
push
arpl
mov
push
mov
lret
or
mov
inc
outsl
arpl
pop
mov
lcall
mov
adc
add
mov
push
aas
xchg
scas
scas
movl
pop
mov
lcall
cmpsl
out
adc
xchg
inc
lahf
arpl
mov
stos
mov
fwait
aas
xchg
xchg
push
and
shll
fimuls
mov
ss
inc
scas
mov
jg
push
or
pop
xchg
mov
inc
iret
insb
xchg
mov
fstpt
sahf
or
cmpsb
xchg
loop
out
mov
jb
xchg
and
mov
mov
fisubs
mov
out
mov
lcall
push
inc
cmp
jg
lds
mov
inc
inc
mov
or
les
add
scas
loop
out
xchg
and
mov
arpl
cmp
xchg
test
lock
out
mov
je
test
jp
lahf
cmpsl
push
mov
ljmp
into
es
or
fisubs
inc
pusha
push
lahf
scas
push
lcall
outsb
inc
cmpsb
mov
jle
push
xchg
mov
sahf
push
pop
jg
scas
lock
movsb
or
into
or
imul
ja
jecxz
scas
mov
cmpsb
rorl
cs
movsl
cmpsl
push
cmpsb
jg
mov
arpl
mov
repnz
data16
jbe
xchg
xchg
mov
lret
bound
and
xlat
adc
xchg
inc
out
jecxz
notb
mov
lcall
or
push
lahf
lcall
inc
pop
cmp
scas
xchg
in
xchg
adcb
push
mov
mov
mov
xchg
and
scas
sbb
gs
adc
mov
scas
xor
mov
adc
mov
adc
mov
outsl
adc
cli
pop
orl
adc
out
xor
es
insl
xchg
mov
ret
test
sub
adc
adcb
inc
das
adc
mov
inc
ljmp
lcall
idivb
push
inc
pop
icebp
ficoml
xchg
ljmp
push
cs
mov
cli
test
mov
push
cmpsb
adc
push
inc
mov
movq
mov
rorb
push
mov
orb
iret
sub
adc
add
push
dec
bound
push
jg
sbb
ret
mov
fdiv
mov
fnstsw
negb
mov
cmpsl
ljmp
adc
adc
xchg
push
iret
jp
pop
ret
ja
pop
jb
and
movb
dec
nop
jp
into
add
adc
adc
mov
test
loope
enter
lock
ret
xchg
lea
mov
lcall
mov
sub
ret
add
pop
scas
lea
pop
and
rol
add
in
dec
mov
shl
sub
mov
aam
orl
ret
sub
pop
and
push
add
pop
jb
xlat
push
cmp
xchg
xchg
push
pushf
rcr
xchg
dec
mov
mov
js
fcmovb
xchg
mov
ret
add
pop
jb
fmull
mov
cltd
cld
pop
fstl
mov
faddp
testb
jmp
mov
fisttps
mov
loopne
inc
in
addb
test
test
mov
mov
pop
lea
loop
xchg
or
push
mov
pop
jb
mov
mov
mov
mov
mov
outsb
xchg
out
cmp
pop
xchg
jb
scas
inc
xchg
paddd
bound
in
jbe
jbe
in
cld
ret
in
nop
mov
shlb
pop
cmp
or
sarb
xchg
orb
mov
xchg
xor
add
rcrb
ljmp
ljmp
xorb
mov
ljmp
divb
mov
cmpsb
xlat
notl
xor
jo
popf
psubd
pushf
ret
add
pop
fcmove
ret
ljmp
sahf
or
pop
lock
sub
push
sahf
testb
aaa
ss
mov
push
bound
jo
adc
add
xchg
mov
movb
xchg
cmpsb
xor
cltd
and
push
and
cmpsl
scas
scas
cmpsb
loop
mov
iret
push
iret
add
scas
lret
add
andl
fisubl
adc
cli
stos
cmpsb
push
add
test
daa
aas
pop
nop
es
push
sahf
test
inc
movsb
repnz
push
nop
mov
test
ret
cmpsl
inc
or
dec
ret
lahf
xchg
or
lret
or
rorb
cmpsb
inc
or
les
cmpsb
vpmovsdw
sbb
add
fimull
push
sub
jb
inc
test
andb
xchg
mov
mov
push
outsl
fnstcw
iret
ret
push
flds
push
cli
jg
out
xchg
ret
lahf
ret
mul
cld
iret
addr16
ficompl
std
loop
ljmp
add
repnz
lea
pop
lods
setg
pop
mov
mov
daa
push
mov
les
aas
xchg
mov
push
sub
cmpsb
push
lahf
dec
xchg
or
iret
push
lods
jo,pn
xchg
mov
cs
shll
loop
loop
ljmp
mov
add
popl
or
cmpsb
dec
sahf
cmpsb
mov
mov
loop
ljmp
nop
mov
push
xchg
xchg
add
pop
jb
mov
loop
jmp
lods
setg
bound
push
mov
les
adc
push
cwtl
xchg
push
xor
cltd
xor
repnz
movb
mov
pop
outsb
lea
cltd
lods
jle
xchg
fwait
cltd
cld
or
out
fwait
mov
push
lea
lahf
cmp
inc
add
pop
jb
mov
sahf
mov
mov
mov
mov
es
lahf
test
pop
cmp
xchg
xchg
setne
pop
cltd
nop
lcall
mov
pop
add
or
xchg
pop
movsb
andb
cmpsb
xchg
out
femms
mov
or
mov
scas
xchg
aaa
fidivl
xchg
rsqrtps
mov
mulb
pop
jp
sahf
xchg
cmpsb
ds
ljmp
inc
ja
jo
jne
scas
adc
jno
mov
xor
jle
xchg
inc
movsl
push
ljmp
jmp
in
testb
add
mulb
outsl
adc
enter
xchg
mov
outsl
mov
mov
pop
cld
ret
add
mov
repnz
nop
ljmp
hlt
call
xor
inc
hlt
iret
cmpsb
outsl
cmc
nop
cmp
shl
push
pusha
mulb
gs
imull
sahf
divl
cmp
out
cmp
ss
adc
push
fidivl
stc
sbb
pop
arpl
mov
mov
xchg
mov
sarb
pop
sbb
jle
mov
push
mov
loope
addb
mov
jg
mov
mov
ret
lds
mov
aaa
testb
lahf
addb
pop
test
mov
xlat
mov
xorl
mov
mov
aaa
testb
jae
mov
test
outsb
push
test
adc
mov
mov
sub
aad
mov
test
adc
outsb
mov
mov
jb
adc
xor
xor
jo
xchg
mov
dec
xchg
mov
mov
push
mov
lcall
lret
mov
mov
mov
mov
inc
xchg
lods
roll
mov
testl
mov
xchg
and
xchg
push
adc
xlat
fimull
addb
ficoms
ds
mov
test
xor
xchg
fnstcw
xchg
mov
dec
out
push
xchg
inc
and
mov
data16
xchg
sub
shr
notb
addb
out
testb
inc
and
shlb
mov
cwtl
add
xchg
fnstcw
xchg
shl
xchg
mov
xchg
rclb
mov
fldcw
mov
xchg
and
and
xor
cltd
jae
mov
adc
rolb
negb
lds
cs
aad
mov
cltd
mov
adc
push
popf
inc
daa
pminub
xchg
xor
sub
rcrb
mov
cmpb
idivl
push
int3
mov
sbb
lahf
lahf
adc
lods
ds
sub
xchg
push
adc
push
mov
add
sub
sub
loop
sub
shlb
mov
jecxz
adc
inc
push
mov
xor
call
testb
bound
xor
test
jg
lcall
xor
add
movsl
and
ss
cmpsb
xchg
adc
scas
dec
mov
fidivrl
movsl
mov
sbb
rcrb
ret
sub
xchg
sahf
testl
push
test
xchg
stos
fcoms
inc
and
stos
ret
ficoms
loopne
mov
push
jmp
and
xchg
aad
mov
stos
mov
lods
mov
lods
loop
data16
lcall
xchg
lods
fnstcw
ret
mov
pop
negb
lahf
bound
sub
aad
mov
scas
mov
adc
divb
cli
sub
rcrb
mov
data16
outsl
mov
lahf
push
mov
cmp
rclb
xchg
dec
aaa
divb
divb
xchg
lahf
mov
jb
mov
add
iret
push
mov
fwait
xchg
fwait
testb
xlat
jbe
mov
mov
lahf
mov
jp
mov
add
iret
jb
xor
sbb
add
cmpb
add
cmp
xchg
call
jg
test
test
lds
inc
andb
mov
test
pop
and
mov
mov
nop
mov
xchg
bound
xchg
xchg
push
or
ss
pop
pusha
mov
or
push
mov
scas
inc
loop
push
out
fimuls
add
cs
pop
push
sahf
les
inc
bound
jne
mov
dec
aam
loop
bound
stos
push
pop
xchg
and
movsl
lcall
mov
scas
dec
add
mov
repnz
inc
ret
outsl
sbbl
shlb
pop
dec
std
sub
ret
pop
cmp
xchg
data16
mov
pop
dec
nop
jp
xchg
jl
ljmp
mov
test
xchg
jb
adc
int
scas
xor
ss
mov
jae
push
sub
xchg
xchg
lcall
xchg
scas
push
aam
and
sub
movsl
sub
into
int3
mov
fcmovnb
adcl
inc
fldt
push
mov
arpl
das
nop
mov
jno
add
repnz
inc
cmp
xor
stos
mov
filds
or
push
stos
or
dec
xchg
data16
stos
xchg
add
andl
pop
push
test
xor
idivl
lcall
jb
fidivs
adc
pop
mov
xchg
ljmp
push
mov
int
imul
xchg
dec
fs
xchg
dec
and
or
mov
lock
mov
cmovg
push
pop
jbe
mov
stos
mov
mov
xor
push
out
fidivrl
mull
outsb
push
adc
mov
ret
xchg
arpl
mov
mov
les
inc
data16
testb
dec
pop
mov
jp
add
push
cmp
fucomip
and
xchg
mov
pop
pop
xchg
inc
pop
mov
inc
push
ja
mov
movb
nop
jbe
fsubrs
loop
xchg
adc
pop
mov
pop
xchg
mov
and
jp
ficoml
push
xor
test
pop
loop
xchg
loop
jnp
jo
xchg
ret
lds
popf
sbb
ljmp
popf
cs
out
ljmp
or
popf
leave
inc
push
xor
ljmp
inc
lcall
or
inc
fimuls
adc
imulb
addl
scas
imul
and
js
push
outsl
push
icebp
add
xchg
push
sub
getsec
je
aad
mov
test
mov
jnp
and
mov
ret
or
test
cmp
adc
xor
lds
sahf
or
xchg
push
ret
lods
cmc
je
clc
daa
mov
cmp
lcall
les
and
cs
es
shr
cs
push
cmp
or
push
fmul
pop
xchg
cmpsb
ret
inc
ret
movsb
inc
or
push
pop
popf
mov
inc
cmp
fisubs
jl
push
push
push
fcomps
push
daa
cmc
add
sbb
cmp
ljmp
negb
mov
imul
mov
call
cmp
lods
cmp
pop
push
jno
testl
outsl
into
fs
aam
mov
inc
mov
dec
push
lahf
ret
cli
sub
xor
xchg
aas
mov
sub
jb
testb
in
push
test
mov
inc
jns
xchg
clc
xor
in
mov
dec
push
mov
inc
sbb
fcoms
xor
in
mov
push
dec
div
add
inc
push
mov
jmp
xchg
mov
dec
push
mov
inc
scas
lds
stos
xchg
add
out
nop
mov
xchg
xor
xchg
xchg
mov
popf
movsl
inc
push
aad
negb
xchg
xor
push
xchg
xor
xchg
xchg
mov
pop
or
stos
mov
sarb
mov
cli
in
dec
inc
add
add
scas
sub
outsb
lahf
xchg
in
cs
xchg
mov
cwtl
xor
push
fcmovb
orl
push
push
sbb
adcl
bound
inc
cmp
and
inc
xor
out
mov
fisubl
dec
bound
or
jle
divl
mov
cs
push
push
xor
pop
mov
ret
pop
dec
push
xchg
inc
cmp
mov
out
nop
sub
push
cli
pop
push
dec
cld
ret
punpckldq
cmp
adc
pop
pusha
dec
mov
xor
enter
dec
in
or
mov
cmpsb
fxch
sahf
and
das
xchg
mov
ret
mov
ja
sub
or
cmp
xor
mov
stc
rcrl
mov
ja
clc
outsb
mov
push
mov
ljmp
jb
jo
fstpt
into
shll
xor
and
addr16
mov
inc
addr16
bound
mov
dec
pop
mov
push
lcall
push
mov
mov
lcall
push
mov
mov
lcall
fstl
call
add
je
or
mov
loop
mov
stos
xchg
pop
push
dec
sarb
cli
add
test
cmp
push
cmp
mov
cmp
shll
stos
ret
xchg
and
dec
pop
lock
xor
mov
fsubl
cld
pop
pop
mov
mov
lcall
insl
aam
shlb
lcall
pop
push
lcall
stos
mov
and
lcall
out
ja
mov
xor
ret
sub
cmp
mov
rclb
arpl
pop
mov
adc
lcall
mov
mov
and
mov
jo
adc
int3
pusha
jno
sbb
mov
jl
xchg
mov
adc
and
mov
dec
and
inc
jb
dec
mov
adc
inc
mov
lock
and
divl
jbe
mov
es
and
add
aad
and
pushf
mov
mov
sahf
stos
pusha
sub
inc
pop
mov
mov
and
negb
js
xchg
call
leave
mov
and
mov
popf
mov
rcrb
mov
and
stos
es
mov
mov
mov
inc
bound
mov
test
loop
mov
mov
lods
scas
dec
ja
fistps
fcmovbe
mov
movsb
add
xor
loop
out
js
jo
movsl
and
sarl
cmpsb
and
or
ret
and
push
cmpsb
scas
inc
mov
inc
mov
xor
test
inc
test
mov
fs
shrl
and
xor
shrb
mov
rcrb
xchg
stos
and
cmpsl
push
xor
scas
inc
adc
sub
xchg
mov
mov
xchg
inc
lahf
xor
leave
cmpb
inc
mov
es
aam
mov
test
lahf
bound
scas
mov
adc
andb
jb
bnd
cmc
clc
and
xor
dec
inc
sub
out
xchg
or
inc
push
aaa
out
sub
rorb
dec
fmulp
jo
bound
out
mov
jbe
xchg
mov
out
aad
fisubs
out
sahf
clc
aad
xchg
jbe
and
fiaddl
bound
jp
aad
mov
ret
shlb
dec
push
adc
dec
pop
cmpsl
stos
movsb
andb
adc
ljmp
mov
ret
pslld
ret
out
lret
jg
push
fisubrs
shrb
ljmp
cwtl
test
iret
aam
mov
xchg
dec
mov
cmpb
adc
fidivs
repnz
nop
jl
inc
ss
pop
aad
mov
aaa
jo
adc
add
mov
pusha
scas
aad
mov
jg
pop
xchg
scas
out
adcb
ljmp
push
sahf
inc
xchg
xchg
mov
mov
rorb
jo
xchg
shrl
je
push
lret
ret
cmp
idivl
mov
cmpsl
orb
bound
nop
inc
mov
adc
inc
es
stos
out
xchg
stos
cld
xor
imul
es
mov
lds
stc
mov
rclb
inc
mov
pop
add
sub
push
add
lods
dec
mov
outsl
or
pop
movsb
sub
add
subb
lds
mulb
mov
orb
test
inc
push
push
push
ss
xchg
nop
mulb
and
test
inc
push
xchg
mov
mov
and
ljmp
inc
shl
mov
add
stos
push
aad
movb
movsb
jnp
lret
xchg
mov
fadd
push
jnp
mov
mov
pop
xchg
mov
inc
negl
lods
xor
fcmovb
hlt
add
adc
iret
pop
test
fdivrl
rclb
inc
out
cli
xor
adc
iret
pop
test
fdivrl
rclb
inc
out
cli
adc
negl
add
pop
fdivrl
rclb
inc
out
cli
push
outsl
ss
sub
inc
pop
sbb
fsubs
ja
pop
sub
movb
fdivrl
leave
pop
and
lea
mov
pop
lods
or
lea
mov
pusha
lods
or
lea
mov
sub
dec
mov
aad
pop
mov
bound
dec
cmp
xchg
out
movsl
adc
out
cli
sbb
out
mov
jb
xchg
testb
stos
jb
negb
notb
dec
negb
xchg
mov
fs
rolb
outsb
push
and
mov
lds
cmp
shlb
dec
lds
xchg
clc
dec
dec
and
mov
inc
movsl
shlb
dec
pop
mov
sbb
adc
push
xchg
sahf
push
xorb
arpl
test
movsb
pop
push
and
xor
cmp
outsb
roll
inc
cmp
dec
xchg
stos
movsl
adcb
push
jnp
fistl
movsl
in
cmpsb
mov
data16
push
and
push
outsb
std
and
xchg
push
push
mov
or
sahf
addb
cmpsb
xchg
mov
lahf
adc
cmpsb
ja
pusha
push
xchg
pusha
adc
xchg
mov
mov
rol
push
adc
xchg
xchg
mov
call
sbb
cmpsb
ret
mov
mov
cmpsb
stc
cmpsb
popl
jo
insl
inc
mov
push
cmpl
sbb
sub
mov
mov
mov
addl
cmpsb
gs
push
dec
mov
ja
cli
mov
xchg
sbb
jno
imul
out
mov
mov
fdivrs
lcall
lds
cmp
std
mov
pop
cmpsb
shl
js
mov
mov
mov
push
adc
xor
int3
out
ficoml
mov
ja
fcompl
mov
jo
mov
mov
repnz
cmc
mov
jbe
cmpsb
and
dec
add
dec
adc
jge
out
stos
jbe
mov
sbb
int
fidivs
pop
dec
leave
cmpsb
movsl
imul
hlt
out
shl
xchg
pop
sbbl
dec
push
push
int
xor
and
adc
mov
imul
xchg
fnsave
out
loope
bound
gs
jno
test
xchg
lods
out
push
cmpsb
pop
mov
ja
xor
loopne
es
int3
mov
mov
repz
das
outsb
jo
mov
testl
adcb
dec
pop
mov
rcrb
cmc
sbb
daa
mov
inc
sti
out
cmpsb
ror
addr16
sbb
mov
gs
mov
sub
mov
xchg
lods
jno
dec
mov
insl
mov
imul
push
insl
mov
mov
inc
repnz
add
out
stos
outsl
rorb
test
cmpl
mov
adc
xchg
mov
xchg
adc
mov
jecxz
jmp
mov
dec
imul
scas
hlt
jle
pop
rol
xchg
xchg
jae
fisubrl
adcb
scas
xchg
cmp
in
cs
and
or
leave
repnz
push
push
cmp
push
xchg
and
andl
mov
push
cmpsb
or
dec
data16
jnp
jno
push
cmp
jge
adc
inc
mov
je
out
mov
xchg
lcall
xchg
sub
mov
divb
adc
mov
repnz
sbb
jbe
sub
mov
enter
ja
pop
gs
pop
cmpsb
aad
mov
pop
push
js
push
xorl
xchg
orl
push
cmpsl
cmp
jp
imul
adc
inc
mov
faddl
push
mov
aad
or
pop
dec
push
sti
scas
push
push
cmovbe
push
mov
mov
push
jl
fisubl
ja
mov
fcomi
mov
roll
incb
sub
fsin
pusha
push
cmpsl
mov
divl
xchg
fs
push
ljmp
xor
sub
bound
mov
gs
jns
outsb
addr16
jp
xchg
sub
and
inc
pop
and
ljmp
addr16
ljmp
mov
and
add
cltd
out
sub
outsb
pusha
orl
hlt
outsb
cli
ret
and
adc
cmp
inc
sub
push
mov
push
inc
ss
xor
inc
xchg
push
ja
nop
mov
xchg
stos
cmpsb
mov
xchg
mov
mov
bound
test
push
jecxz
xchg
cli
push
mov
lods
ror
xor
lahf
mov
nop
rol
sahf
jnp
mov
xchg
scas
lret
jmp
jecxz
scas
shrb
mov
xchg
adc
xor
adc
xor
adc
pop
jecxz
lock
push
xchg
and
pop
dec
nop
pop
mov
dec
scas
adc
sti
push
test
stc
outsb
lahf
fcmovbe
adc
mull
adcl
lea
and
iret
dec
mov
neg
test
mov
jle
push
cwtl
iret
loop
sub
testl
add
mov
cltd
mov
es
test
jle
mov
jbe
sub
xor
lcall
je
mov
outsb
rcrl
xor
push
and
mov
jno
test
pushf
shlb
xor
outsb
imul
dec
popf
iret
sub
mov
inc
test
mov
lahf
shl
sahf
iret
aam
mov
ds
leave
test
inc
test
xchg
cmp
jle
lahf
iret
xchg
mov
ds
jle
mov
lods
sbb
lahf
loopne
mov
add
push
cmpsb
jne
push
jbe
imul
dec
mov
push
cmpsb
jne
push
jbe
imul
std
jle
hlt
mov
mov
and
cli
jle
add
fstpl
fnsave
jmp
cli
jle
add
cli
jle
xchg
mov
out
push
js
fwait
jle
mov
mov
movsl
mov
mov
cltd
leave
fs
xchg
xchg
sbb
jmp
in
addr16
mov
hlt
shlb
mov
xchg
test
dec
push
push
imul
push
cmpsl
loop
add
push
push
push
jnp
out
mov
loop
push
les
bnd
out
pusha
cmpb
add
xorb
add
push
stos
lcall
enter
es
out
add
push
dec
loop
mov
rcl
enter
ss
adc
mov
stos
int
out
cli
cmp
loop
xchg
mov
popl
mov
jne
stos
aad
rclb
mov
jmp
mov
test
dec
or
into
adc
imul
jb
mov
mov
clc
lods
push
cmp
push
push
push
adc
lods
fs
xchg
or
mov
out
or
loop
stos
or
pop
push
mov
stos
jno
pop
popf
mov
fstpt
push
xchg
or
mov
or
stos
enter
lea
pop
mov
xchg
loop
cmp
pop
or
cmp
fsubrs
cli
xchg
pop
jbe
xchg
mov
dec
int
mov
jmp
ss
sub
jb
int
out
cli
xor
mov
in
or
sahf
mov
cmpsb
mull
xor
sahf
stos
notb
xchg
out
lock
imul
out
sarl
sub
js
xchg
and
stos
orb
js
pop
ja
push
sub
mov
adc
subb
addb
out
cmp
cmpsb
mov
pop
jb
xchg
sub
pop
pusha
sahf
or
inc
or
popa
movb
mov
mov
ljmp
mov
pop
ljmp
pop
push
jmp
adcb
mov
in
cli
push
popa
mov
cli
hlt
cmp
fcompl
xor
rclb
cli
imul
bound
cmp
fdivrs
testl
imul
push
jnp
sti
out
in
loop
ficomps
into
fs
pop
lcall
test
mov
pop
bound
test
test
repnz
addr16
push
stos
push
jbe
stos
popf
shrd
ret
add
scas
out
mov
dec
scas
ljmp
sahf
sub
push
dec
scas
scas
cmpsb
xlat
mov
jmp
scas
adc
shll
scas
out
cmpsb
shll
scas
cli
and
loop
mov
sbb
cmpsb
push
mov
xor
xor
jmp
jmp
stos
mov
xchg
jb
xchg
lods
subb
jecxz
rol
mov
enter
mov
and
mov
bound
mov
xchg
cmpsb
xlat
mov
mov
rsm
ja
mov
dec
punpckldq
lcall
rclb
push
mov
lods
fstps
andb
addr16
xchg
movsl
repnz
aam
addb
fidivrl
adc
enter
out
test
jno
rorb
fidivl
fcom
stc
stos
lret
sub
push
sbb
pop
mov
mov
fxch
cmpsb
aaa
mov
sub
test
and
mov
cmpl
mov
mov
mov
lods
pop
sbb
ja
xchg
add
rorb
mov
addb
add
pop
sbb
iret
sub
mov
divl
jne
xor
hlt
inc
sarl
mov
jo
mov
rcl
ret
jl
xchg
testb
sbb
lret
mov
or
inc
lret
inc
add
stc
popa
ljmp
outsb
sti
out
xchg
cs
xchg
xor
sbb
xchg
pop
inc
mov
lds
xchg
out
fstl
sbb
mov
insl
or
mov
iret
fcmovbe
cmpsb
loop
xchg
add
cli
pop
sub
cli
ljmp
xor
iret
cmp
enter
scas
je
mov
sbb
loopne
iret
into
test
mov
cmp
xor
jo
jbe
xor
test
xchg
dec
testl
pop
mov
push
xchg
ja
addr16
sbb
lods
sub
mov
pusha
out
xor
shrb
mov
popa
sbb
jne
ljmp
cmpsb
mov
mov
scas
mov
ljmp
movsl
stos
lret
idivl
push
push
movsl
xlat
mov
shlb
mov
xor
inc
xchg
xchg
stos
xlat
push
out
mov
dec
outsb
cmpsb
mov
xor
dec
cmpsl
mov
ret
test
pushl
stos
mov
xor
inc
int
test
lahf
stos
loop
mov
xor
rolb
into
in
xchg
stos
xor
scas
into
iret
out
rcr
movsl
into
cs
push
fwait
cmp
mov
push
adc
lods
mov
xor
add
jmp
stos
shrb
rclb
and
cwtl
cmc
lds
scas
shrl
test
fisubl
pop
xchg
scas
mov
xchg
xchg
mov
and
insl
add
lock
les
shll
arpl
insl
filds
mov
lahf
push
mov
cmp
outsb
shl
mov
add
lea
pusha
add
out
mov
mov
mov
stos
jbe
shll
add
cli
idiv
xor
in
mov
fnstcw
ret
push
pusha
push
scas
xchg
sarb
xor
mov
mov
inc
pop
bound
dec
xchg
rorl
mulb
in
push
enter
test
or
sbb
fadds
sbb
rclb
repnz
rclb
push
fs
push
cmp
and
xchg
lods
inc
sub
pop
mov
mov
inc
cltd
pushf
les
out
rolb
push
cli
ds
cmp
dec
xchg
jnp
sbb
aaa
inc
adc
dec
mov
rolb
push
inc
or
xor
cmpl
push
js
push
mov
or
adc
iret
btrl
ret
xchg
sti
fs
pop
xchg
add
mov
les
jne
push
sub
adc
rorl
repnz
ret
mov
neg
jp
push
dec
out
pop
adcl
jecxz
sub
lret
mov
not
add
out
xchg
mov
mov
mov
fiaddl
mov
dec
sub
mov
fcomps
lahf
fdivs
fsubr
fmuls
inc
fnstenv
fnstenv
jp
repnz
pop
dec
mov
ficompl
in
push
repnz
mov
out
fistpl
repnz
mov
push
fcompl
outsl
push
bound
push
mov
rcr
popa
ret
out
sub
xchg
insl
dec
xchg
adc
cli
push
push
shlb
inc
mov
inc
lea
jp
add
mov
xor
xchg
mov
xchg
rol
nop
push
push
xchg
xor
xchg
xchg
clc
pop
lods
and
dec
and
mov
jnp
sahf
jae
fisubs
push
cmp
mov
sahf
mov
mov
mov
cmp
aaa
scas
or
cli
dec
repnz
clc
dec
and
sti
mov
cmp
mov
fimuls
xchg
mov
fdivr
xor
pusha
loopne
push
loopne
popf
add
sarl
dec
push
fsubl
sbb
lods
xlat
sbb
lock
loope
sbb
xchg
push
jno
imul
mov
xor
shlb
jecxz
mov
scas
sbb
bound
ret
es
mov
in
lea
mov
or
adc
add
pop
xor
rolb
mov
push
mov
sbb
mov
and
push
das
jle
mov
mov
push
mov
mov
sarl
call
mov
inc
mov
ds
cli
sbb
jmp
jmp
mov
push
pop
popf
mov
popf
push
mov
xor
mov
adc
and
xchg
mov
mov
sub
jmp
jbe
dec
jmp
ljmp
popf
mov
movsl
in
mov
cs
in
out
outsb
fdivs
hlt
add
push
mov
jl
aam
cmpsb
jl
in
dec
mov
dec
mov
leave
mov
sub
cmpsb
jno
addr16
mov
out
sbb
out
xchg
iret
stos
enter
in
lahf
lcall
xchg
in
mov
mov
mov
fnstcw
xor
xchg
in
mov
xlat
cli
mov
icebp
nop
xor
addr16
xor
outsb
rolb
pop
repnz
outsb
fnstcw
out
mov
push
clc
xor
in
mov
mov
add
and
rclb
jge
into
adc
mov
push
inc
hlt
jbe
aaa
sub
jb
hlt
add
jae
mov
cli
xor
ss
mov
cmp
pop
mov
shll
idiv
lods
stos
lods
mulb
leave
dec
push
pop
popf
mov
sub
inc
imull
pop
push
imul
push
dec
mov
or
inc
clc
push
jb
outsl
clc
cmc
cs
inc
mov
push
xor
push
push
negb
cli
mov
cmpsb
xor
push
push
ret
mov
push
dec
rorb
cli
adcb
xlat
test
add
push
mov
stos
outsl
stc
testl
scas
ret
mov
xchg
mov
leave
std
sbb
pop
mov
mov
push
test
or
sub
push
mov
clc
mov
and
push
or
sbb
cs
sub
out
clc
mov
and
mov
adc
push
pop
xor
jb
xor
out
sbb
mov
out
dec
push
push
frstor
mov
imul
xchg
pop
adcb
mov
cmpsl
push
mov
jp
cmpsb
mov
shlb
mov
jp
xorb
cmpsb
xchg
fidivl
push
or
and
icebp
push
and
pop
out
mov
movl
adc
xchg
jb
scas
sub
jb
mov
sbb
ret
pop
mov
loopne
push
pop
push
lock
popf
or
pop
mov
scas
int3
mov
pop
mov
or
loop
cmpsb
adc
jbe
mov
mov
adc
shl
ljmp
mov
mov
dec
mov
jbe
sti
sbb
xor
push
stos
ljmp
sub
rolb
cs
mov
sahf
popf
push
xchg
inc
scas
mov
and
stos
inc
inc
adc
sti
adc
pop
inc
scas
out
leave
cmpsb
lahf
inc
and
adc
shl
inc
xlat
out
mov
push
push
outsb
scas
jb
xor
add
dec
mov
or
push
mov
mov
push
add
add
cmpsl
pop
cmpsb
jecxz
stos
ljmp
ja
nop
pushfw
rorl
or
xor
enter
or
or
or
iret
or
or
or
ds
cli
xchg
xchg
bound
xor
call
ja
int
inc
push
adc
xor
sbb
xchg
sarb
sbb
xchg
faddl
daa
into
jecxz
mov
mov
inc
adc
cmpsb
dec
adc
ja
sbb
xchg
push
and
sahf
and
adc
cmpsb
lea
push
shl
out
inc
xchg
xchg
aaa
shrb
pop
push
mov
or
subl
mov
movsl
dec
or
enter
test
mov
or
lahf
repnz
jo
gs
stos
sbb
inc
or
xchg
testl
or
push
xor
xchg
sub
inc
cltd
mov
xchg
xor
jo
or
iret
dec
sub
lcall
push
sub
sarl
mov
stos
iret
mov
sbb
pop
rcrb
rcrl
or
mov
mov
lret
mov
mov
ror
cli
adc
push
out
fistl
pop
dec
cld
or
sbb
xchg
push
cmp
mov
cmp
rolb
xor
and
sub
es
test
lea
sbb
scas
shrb
mov
cmp
pop
mov
or
xchg
stos
and
or
adcb
cld
or
lds
nop
mov
call
xchg
mov
sub
divl
and
push
scas
push
out
mov
repnz
pop
add
stos
xlat
xchg
fxch
subb
and
pop
lahf
mov
arpl
addb
iret
cmpsb
sarl
xchg
mov
lcall
cmp
loop
push
sbbb
outsb
cltd
sub
or
adc
mov
outsb
movsl
fstpt
aam
mov
and
xor
pop
and
mov
pop
and
jmp
stc
and
inc
xor
clc
loopne
pop
cmp
pop
jmp
xor
xor
and
shll
mov
int3
cmp
jp
cld
or
push
mov
cmpsb
mov
inc
iret
shl
mov
lcall
pop
mov
enter
test
lds
lock
jb
push
adc
jmp
es
sbb
xchg
sub
es
sbb
scas
iret
sub
or
sbb
shrl
lahf
dec
mov
enter
cmpsb
sub
adc
aad
jb
mov
aad
jb
sub
sub
mov
sarl
dec
ret
repnz
fcmovu
sub
inc
ljmp
mov
inc
rcl
sub
xchg
mov
xor
inc
xchg
mov
mov
ret
mov
pop
rolb
sub
imul
xlat
push
leave
aam
imull
in
dec
sahf
or
hlt
fcmovbe
sarb
mov
ljmp
lret
adc
push
xor
clc
fistpll
pop
int3
sub
fstpl
or
xor
xor
repnz
push
das
xor
das
xchg
shr
dec
xor
mov
repnz
idivl
jbe
xor
addr16
mov
push
cs
jg
incb
xor
inc
pusha
xor
scas
sarl
int
pusha
decb
lahf
mov
ss
sarl
and
shl
mov
sahf
ss
inc
cmp
sahf
mov
cmpsb
jg
shr
lret
add
xchg
shrb
inc
and
xlat
ret
mov
jb
test
push
mov
ret
divb
or
repnz
mov
sub
mov
add
mov
cmp
push
xor
xchg
sarl
test
inc
ret
mov
mov
rolb
xlat
mov
sub
mov
add
lret
mov
cmp
stos
lret
add
into
dec
lret
or
mov
xor
xchg
int
cmp
jp
mov
iret
int
lahf
adc
mov
into
jg
nop
rclb
pushf
mov
mov
xlat
xor
into
mov
ret
loop
idivl
fidivs
rcll
loop
enter
adcb
sub
rolb
jg
shll
jo
xchg
shr
aam
cmp
push
imul
lahf
bnd
aad
cmp
es
xchg
shl
xor
dec
cli
xor
xlat
mov
lods
adcb
rcl
fists
mov
imul
clc
jl
pop
cmp
ret
mov
xchg
ret
xchg
jnp
jbe
xor
mov
push
adc
fwait
lock
pushf
lds
mov
les
pop
mov
subb
mov
xchg
mov
subb
xor
and
inc
xor
inc
dec
arpl
mov
imul
jl
imul
bound
cmp
xchg
mov
dec
adc
sub
adcb
addb
cmpsl
mov
les
hlt
cmpl
std
xchg
push
inc
sahf
adc
fcoms
mov
cli
stos
xchg
bound
xor
outsb
xchg
and
pop
lcall
dec
push
mov
ret
push
mov
push
call
adc
lret
xchg
pop
pop
nop
adc
ljmp
mov
push
getsec
cld
fcom
divb
and
ljmp
xchg
xchg
push
test
xorb
add
repz
repnz
cmp
scas
cmp
fdivrl
pusha
scas
pusha
cmp
loop
mov
xchg
push
cmp
test
push
lcall
cmp
cmp
push
jecxz
insb
lods
scas
lods
cmp
ds
ss
mov
lods
aas
out
scas
out
aas
mov
dec
fimuls
pop
scas
xchg
stc
sbb
lahf
ljmp
inc
mov
mov
push
sub
imul
jb
lea
mov
imul
or
fdivrl
jmp
aas
inc
sti
push
mov
out
clc
pop
scas
fdivl
cmpsb
int
outsb
sub
lret
xlat
cmpsb
sarb
in
bound
push
adc
jo
pop
das
xchg
push
outsb
push
sbb
xchg
xchg
push
push
push
pop
push
nop
sahf
and
fiaddl
lcall
pop
cmpsb
pop
fsts
aam
cld
add
pop
mov
sbb
enter
adc
push
and
dec
faddl
push
insb
xchg
outsb
mov
push
sub
imul
adc
jbe
jb
jo
or
push
fcmovb
inc
push
xor
push
sub
inc
mov
popl
pusha
mov
jle
stos
test
ss
push
push
ficoml
fisubrl
jp
lds
sub
inc
dec
rsqrtps
sub
push
sub
add
out
pop
popf
mov
and
iret
mov
jp
sarb
lds
out
cli
adc
rorl
push
dec
sbb
push
mov
lea
xchg
clc
or
and
cli
cli
xor
repnz
idivb
int
mov
repz
bound
dec
ss
mov
hlt
add
jo
es
xor
in
jo
imul
mov
dec
mov
ljmp
mov
stos
dec
outsl
sub
mov
xor
bound
dec
push
adc
lcall
jp
mov
jns
xlat
pushf
mov
inc
xchg
cmp
imul
sub
mov
shlb
push
pop
inc
fcomps
sub
mov
aad
push
mov
inc
into
ret
push
mov
adc
mov
cmp
jp
inc
outsl
cltd
loop
loopne
iret
xchg
fdivs
mov
pop
sub
add
clc
pop
adc
jo
imul
loop
lcall
xchg
test
push
repnz
outsl
out
push
lcall
fcoml
negl
sbb
outsb
pusha
push
mov
jp
xchg
dec
jo
out
mov
ror
mov
leave
and
iret
and
add
sarl
jo
imul
lods
or
pop
test
aad
xor
pop
dec
and
pop
popf
mov
fwait
xchg
push
aas
iret
mov
sub
shrb
mov
adc
lret
push
push
lea
mov
imul
and
rolb
outsb
mov
push
imul
xchg
mov
push
push
andb
push
mov
stos
pop
loop
sti
cmp
pop
cmp
flds
scas
ret
pop
outsb
nop
stos
mov
pop
mov
mov
dec
mov
cli
jb
rcrb
rorb
lahf
mov
sahf
data16
cli
pop
push
push
mov
mov
fnstsw
pop
cltd
inc
pop
adc
outsb
jmp
lods
lahf
pop
jns
lods
cmpsl
neg
adc
movl
bound
sarb
mov
mov
fisubl
arpl
mov
mov
push
fs
fisubrs
flds
xchg
xchg
mov
mov
mov
nop
pop
and
rclb
ficomps
mov
fisubs
pusha
shlb
or
and
pop
popa
iret
mov
popa
test
out
enter
mov
or
and
mov
jbe
daa
test
faddp
mov
fidivs
nop
add
arpl
mov
cli
adc
lods
ret
adc
mov
cli
sub
sti
push
mov
int3
xor
or
inc
xor
and
es
add
and
xor
xor
out
les
sbb
cmpsb
adc
push
in
out
cli
adc
push
imul
cmp
jo
bound
push
cmp
outsl
es
push
pop
es
ds
clc
push
xchg
mov
inc
fiaddl
mov
inc
mov
push
mov
ja
adc
jbe
xor
adc
repz
xchg
mov
int
mov
sub
pop
sub
cmpsl
outsb
push
sbb
cld
lahf
sub
xchg
pop
subb
xor
and
mov
cmpsb
lods
es
mov
mov
iret
push
xor
push
cmpsb
xor
dec
mov
test
dec
xor
pop
sub
and
xor
mov
iret
arpl
out
sub
mov
ficompl
sbb
es
dec
lods
data16
sub
cmpsb
mov
add
test
pop
dec
std
ret
jmp
out
jb
xor
ss
add
push
mov
es
sti
insl
mov
jo
pop
jge
pop
mov
jg
cs
lret
ss
out
pop
adc
js
jb
icebp
push
xchg
and
shl
adcb
cmp
cmp
jmp
mov
push
dec
in
aad
cmp
in
mov
hlt
cmp
ret
and
push
inc
sahf
movsb
cmpsb
mov
ret
xor
icebp
mov
fcmovbe
out
adc
out
xor
jne
xor
scas
and
test
lock
dec
xchg
adc
outsl
cmpsb
scas
sub
fdivrs
push
jp
jp
mov
es
neg
mov
lds
nop
scas
jge
push
dec
repnz
adc
xor
ret
jnp
cmp
xchg
scas
popl
scas
fidivrs
push
repnz
push
mov
scas
jbe
mov
xchg
adc
icebp
pop
or
xor
aam
pop
shr
scas
xchg
add
sahf
pop
adc
xor
cmp
mov
test
xchg
lea
imulb
cmp
xor
cmp
sbb
sbb
dec
addb
les
fimull
adc
dec
es
lods
daa
ljmp
pop
lahf
divl
jo
mov
push
fcomi
sbb
jbe
ficomps
movsl
sbb
int3
xlat
pop
clc
lock
and
inc
cwtl
mov
push
stc
insb
xchg
xchg
mov
int
cmp
testb
add
aad
sahf
sbb
sti
mov
leave
cmpsb
sub
sbb
cs
pop
push
inc
std
jae
xchg
loop
js
into
push
mov
xor
cmp
sbb
cmpsb
sbb
sarl
xchg
mov
sbb
mov
iret
rorb
fistpll
or
leave
daa
jb
inc
in
mov
lret
cmp
add
adc
inc
cmpb
lcall
mulb
out
adc
stos
pop
add
sub
pop
adcl
lods
and
push
mov
push
adc
js
push
adc
pop
out
fcoms
ss
sbb
cmpsl
cmpsb
jp
sbb
fisubs
mov
outsb
mov
stos
outsl
xchg
xchg
nop
mov
leave
xchg
jbe
pop
xchg
leave
cmpsb
mov
rol
data16
negb
cmp
push
outsl
out
mov
sahf
adc
dec
sahf
push
jbe
dec
scas
stos
cmpsb
fld
sahf
add
and
and
pop
decb
or
lcall
mov
add
xchg
rcrb
mov
sbb
mov
aam
mov
lret
into
bound
rorl
jecxz
mov
out
xor
hlt
add
fadd
mov
mul
cli
stos
lods
mov
outsl
adc
iret
aam
mov
adcb
mov
fcmovbe
mov
cmp
negl
imul
dec
sub
dec
iret
dec
mov
lahf
outsb
out
dec
pop
popf
mov
sub
inc
nop
scas
negb
sarl
shll
enter
adcb
sbb
mov
leave
cmp
mov
iret
out
mov
add
pop
push
hlt
add
or
xchg
cmpsl
jne
dec
mov
pop
mov
popa
push
jb
mov
cli
leave
shrb
and
xchg
test
lds
mov
bound
negl
fdivrs
mov
push
cmpsb
push
mov
fsts
xchg
push
ljmp
pushf
sub
xor
lock
mov
cmp
addb
sub
sub
fstl
mov
push
mov
test
pop
cwtl
repz
test
int3
popa
cmp
mov
xor
leave
outsb
cmp
popa
cmp
sub
xor
xor
lahf
mov
lret
push
fisubs
lcall
inc
movsl
fstl
cli
xor
out
fwait
adc
test
cmpsb
inc
pushf
or
cmc
xchg
pop
rcll
pop
ljmp
stos
dec
jne
push
push
lock
aad
dec
lock
xchg
sarb
push
out
cli
cmp
pop
ffree
cli
in
iret
aam
mov
test
cli
push
mov
mov
sbb
sub
cmp
icebp
cmpsb
sub
sbb
loop
iret
push
shll
mov
push
sarb
mov
sub
pop
orb
xchg
inc
mov
out
out
mov
clc
push
pop
inc
inc
sarl
cli
push
push
testb
xor
in
out
lcall
jl
fisttpl
nop
pop
sti
sbb
insl
popa
and
xchg
std
mov
push
popf
mov
mov
mov
inc
sahf
mov
inc
lahf
mov
xchg
mov
mov
mov
add
mov
xchg
out
mov
mov
inc
scas
ljmp
pop
mov
ficoms
xchg
scas
sub
lahf
mov
jg
movsl
mov
jmp
and
sub
mov
loop
in
inc
mov
stos
mov
lahf
scas
aaa
sarl
add
mov
mov
mov
jl
push
cmp
or
sbb
or
scas
dec
movsb
add
push
cli
fmul
jl
out
adc
out
xchg
rcrl
add
cli
cmp
out
fsubp
pushf
mov
jle
jae
push
lds
xor
add
push
mov
pop
push
push
adc
sbb
pop
out
add
mov
pop
sti
pop
sub
fwait
dec
pop
mov
ret
dec
iret
mov
mov
ret
mov
arpl
jo
fistl
lods
mov
test
jb
int
jo
imul
mov
iret
or
stos
xor
or
dec
mov
jbe
sub
inc
mov
dec
out
cli
adc
sbb
mov
mov
mov
imul
mov
les
inc
mov
push
push
popf
mov
sbb
js
lret
addb
xchg
lcall
imulb
jnp
inc
ret
out
mov
repz
insl
enter
lret
stos
nop
ljmp
xchg
ret
pop
gs
loop
scas
xchg
jl
sar
out
sarl
ret
mov
jmp
es
push
outsl
jb
les
push
outsb
jno
jae
xchg
adc
push
pop
mov
out
sub
pop
insb
frstor
jb
mov
mov
fcoms
add
mov
and
out
ja
or
enter
sub
push
sub
fwait
icebp
push
ljmp
jnp
subb
cmpsb
and
jno
inc
push
lock
lds
mov
inc
push
divl
mov
cmpsb
pop
imul
mov
shr
cmpsb
or
push
inc
inc
xchg
inc
jle
push
ret
adc
int
inc
fadds
sbb
lods
fdivs
aad
mov
mov
mov
cmp
shl
cs
mov
icebp
jb
leave
nop
ds
fmul
push
imul
in
mov
jge
into
push
xchg
sahf
sahf
xchg
push
lahf
fwait
lea
jmp
test
push
push
xchg
jmp
ret
dec
repz
push
pop
mov
inc
pop
lds
iret
repnz
mov
mov
mov
ss
int
sti
inc
mov
int
or
adc
cli
mov
push
idivl
mov
in
iret
aad
outsb
dec
into
inc
inc
leave
push
ds
popf
mov
int
fs
xchg
mov
xchg
mov
lods
into
xchg
xlat
iret
or
sub
dec
iret
jmp
mov
jnp
push
rcr
ja
rcl
je
aam
xchg
out
xchg
sub
arpl
dec
inc
std
xor
mov
fisubrs
sub
push
not
xchg
ror
loop
push
mov
add
mov
test
push
cmp
sub
scas
xor
and
cmp
insb
mov
cmp
jbe
imul
sbb
xchg
lcall
pop
pop
lahf
fnstcw
push
cmp
bound
mov
andb
xchg
jmp
lret
cmpsb
test
pop
test
cmp
mov
jbe
lret
aam
jae
mov
arpl
add
outsl
cmp
inc
mov
aad
inc
ljmp
movsl
mov
mov
cmp
xlat
xor
in
jo
xchg
push
xchg
sbb
out
cli
mov
xchg
push
inc
jne
es
enter
fldenv
test
imulb
mov
iret
dec
mulb
stos
jmp
sahf
push
stos
dec
cmpsb
aam
rorb
fidivrl
mov
fcmovne
jmp
and
andb
sahf
repnz
arpl
jnp
sub
mov
mov
and
inc
out
jp
cld
rcll
inc
sbbb
sbb
sbb
cmp
aaa
mov
or
add
lahf
sbbb
int
add
mov
out
cli
ret
movb
fstl
xchg
sub
and
jnp
xchg
dec
push
jmp
test
lret
xorb
loop
jnp
xchg
cmp
xchg
in
cmpsl
cmp
jecxz
mov
ljmp
repnz
fbstp
shrb
out
loop
inc
sbb
not
mov
out
cli
stos
jecxz
jecxz
ja
and
xchg
jg
in
std
test
daa
mov
call
dec
loop
in
cmpb
out
xlat
mov
push
sub
push
and
stc
mov
mov
testl
adc
mov
movsb
jg
ret
stc
stos
bound
inc
ficoms
push
and
fidivrl
push
jne
mov
loop
andl
push
push
je
out
jg
mov
lea
mov
fwait
jg,pn
fwait
mov
popf
mov
pop
out
xchg
test
xchg
mov
sbb
mov
outsb
nop
push
sarb
add
mov
outsb
lea
adc
std
cmpl
adc
data16
lds
int
test
mov
out
jns
fidivrs
lock
push
test
ret
rol
jg
or
mov
lods
xchg
cmpsb
mov
mov
inc
sub
and
mov
mov
or
test
sub
jg
lock
ret
andb
shrl
lods
sahf
inc
xchg
mov
divb
or
jbe
repz
out
inc
mov
int3
xchg
js
out
sahf
jmp
roll
in
shl
mov
pop
lock
out
in
aaa
nop
into
rolb
inc
pop
add
movsb
xor
fidivrs
mov
jl
lahf
test
jmp
pushf
mov
mov
mov
add
stos
rorl
jmp
ljmp
jecxz
ss
jo
xchg
mov
stos
fldenv
ret
sbb
push
mov
add
aas
ret
in
lret
mov
sub
push
rcl
lahf
into
mov
and
add
adc
push
decb
movsb
adc
adc
loopne
ljmp
mov
mov
loope
repnz
rorb
imull
sbb
stos
xchg
lcall
xacquire
cmpsb
sub
sub
add
jo
rcrl
push
enter
or
xor
out
mov
mov
mov
add
add
push
mov
adc
shlb
outsb
int3
fmull
add
rolb
pop
shr
mov
lret
nop
loopne
xchg
lret
jb
enter
in
pxor
mull
daa
cmpsb
xchg
fwait
mov
out
fidivs
mov
shll
mov
es
aad
jb
add
aas
repnz
ss
out
jb
rol
or
dec
outsl
je
or
into
xor
neg
adc
shrb
lcall
add
mov
xor
jg
rolb
mov
mov
push
call
lock
inc
mov
shlb
mov
mov
pop
cmpsl
gs
nop
and
push
dec
inc
arpl
dec
mov
jge
pop
out
cmc
mov
loop
icebp
sbb
pushf
add
push
test
xchg
mov
inc
push
pop
inc
inc
pop
mov
lods
sbb
mov
out
testl
mov
jecxz
out
mov
lret
cmpsl
dec
push
push
mov
mov
jmp
pop
loop
jecxz
popf
lret
pop
sub
lret
push
lea
mov
ds
and
enter
loop
mov
push
in
pop
lock
into
cmp
data16
stos
jl
into
fimuls
out
mov
and
jo
add
fcmove
mov
orb
cmp
lds
mov
push
push
in
mov
mov
ja
push
cld
inc
xchg
fsubr
and
movsl
push
jno
add
shlb
push
pop
stos
cmp
scas
push
add
mov
push
adc
push
inc
pushf
dec
mov
sahf
iret
and
jo
xchg
pusha
lret
inc
rcl
lds
push
lret
adc
and
dec
es
mov
ret
out
test
jp
push
testl
or
outsl
ret
fimuls
repz
shrb
fsubrp
aaa
push
push
dec
cmc
loop
mov
sar
loopne
adc
pop
adc
pop
jb
lcall
ljmp
fisubl
xchg
or
cmpsb
rcrb
push
add
mov
loopne
adc
loope
jmp
bound
mov
adc
push
in
cwtl
cmp
fs
lret
xchg
jle
dec
rcrb
mov
pop
lcall
out
out
fldl
add
dec
icebp
or
push
sahf
adc
into
sbb
lods
lea
fcom
mov
hlt
dec
mov
test
adc
cld
leave
mov
mov
sub
push
or
or
in
push
out
or
into
movsb
leave
rol
into
push
movsb
loopne
jg
pop
mov
ret
sub
mov
xor
das
adc
dec
xlat
sarb
clc
lods
mov
outsb
adc
xchg
sahf
pop
aad
es
pop
jo
mov
mov
ret
sahf
sti
rorb
daa
xchg
loopne
pop
sbb
test
or
icebp
push
pop
test
aam
leave
lods
mov
test
xor
mov
in
fsubs
xor
fnstenv
inc
jecxz
cli
ljmp
cmpsl
push
ret
shlb
cmpsb
inc
clc
jecxz
dec
push
add
mov
mov
adc
lods
lret
loop
out
repnz
add
cld
scas
mov
push
bound
adc
mov
shlb
rolb
ret
icebp
lods
sub
lahf
data16
les
jmp
pop
aas
stos
cmpsb
ljmp
sub
aam
aam
and
xor
lea
or
adcl
mov
ret
pop
mov
ret
push
outsl
ror
jp
scas
mov
add
rcrl
outsb
cli
jecxz
xlat
inc
dec
push
push
adc
xchg
insl
add
mov
mov
out
lds
jg
out
ror
mov
mull
into
lahf
rorb
push
push
scas
dec
mov
ffree
lahf
iret
sbb
inc
pop
loop
lock
jno
movsl
iret
xchg
popf
stos
xchg
leave
xor
shl
inc
jb
xor
shrb
mov
mov
cmpsb
dec
xchg
pop
mov
hlt
loop
xlat
les
dec
sti
push
ret
pop
loope
rcrb
sbb
mov
mov
rcrl
xchg
int
mov
stos
xorb
scas
and
xchg
jg
lods
push
loop
xchg
xor
jb
ret
adc
fsub
or
pushf
jo
out
into
adc
out
xchg
sub
data16
pop
stos
and
or
dec
mov
outsl
mov
out
mov
mov
or
jb
adc
mov
cmc
add
xchg
push
sbb
adc
push
ljmp
lcall
movsl
xchg
repnz
sub
xlat
mov
xchg
lret
sub
shlb
adc
repnz
int3
mov
repnz
ret
adc
aam
mov
std
sbbb
sarl
mov
push
lcall
std
scas
cmpsb
jg
or
mov
cmpsl
jnp
lcall
or
test
in
lods
movsb
mov
pop
ret
push
fidivl
push
dec
mov
fisubl
dec
sbb
push
and
add
xchg
stos
mov
and
daa
fcmovbe
dec
lret
mov
sbb
cwtl
ret
test
movsb
mov
adc
adc
movb
inc
push
lcall
fimull
idivb
stos
jg
xchg
add
addr16
mov
stos
mov
mov
mov
xchg
cli
stos
lods
add
push
popl
mov
push
loop
aam
sbb
rcr
fsubrs
mov
xchg
bound
iret
mov
ret
mov
cmp
xchg
mov
shl
sbb
inc
mov
jmp
add
ljmp
xor
ret
dec
mov
mov
repnz
hlt
shrl
push
push
int
dec
inc
rsm
push
punpckhwd
cmpsb
imul
sub
shrb
and
fsubrl
mov
or
add
jg
xchg
pop
and
repnz
mov
push
out
dec
add
in
mulb
sbb
mov
xchg
loopne
jb
sub
dec
push
or
fisubrs
cltd
add
jno
ss
rcll
ficomps
push
mov
aas
lea
and
pop
jle
int
movsb
mov
lods
out
gs
add
jne
movsl
movsb
insl
ficoml
pushf
sbb
jecxz
and
jbe
mov
popf
dec
ss
movsb
cmp
jbe
sub
mov
decb
pop
and
fcmovbe
fildl
push
pop
mov
je
out
cwtl
fdivs
jl
push
xchg
sub
into
bound
cmpsb
test
out
les
test
mov
cli
pop
fisubrl
mov
mov
repnz
shlb
xchg
movsb
mov
mov
jecxz
xchg
out
loop
sub
stc
mov
xor
aad
jbe
jg
loop
daa
lcall
adc
das
data16
and
pop
fstps
out
add
dec
dec
fstpt
xchg
mov
mov
add
shr
push
push
adc
ret
lods
adc
dec
mov
cmpsl
mov
xor
jmp
inc
testb
xorb
xchg
mov
shlb
push
cwtl
dec
xlat
outsb
ret
fistpl
fmull
cli
jb
add
cld
test
mov
inc
lcall
mov
jl
shrb
mulb
bound
adcb
push
mov
pop
aas
pop
lods
mov
xor
adc
cmp
and
push
out
ds
xor
stos
mov
mov
xchg
sub
les
fisttps
in
sub
aad
loopne,pn
push
jg
dec
jecxz
mov
sbb
fsubp
sbb
mov
lret
xor
and
stos
adc
push
inc
sahf
mov
mov
sarl
lcall
stos
out
adc
lock
or
repnz
outsl
jb
mov
mov
inc
mov
scas
xorb
loope
icebp
mov
adc
out
iret
sub
pop
xchg
andl
push
mov
int
leave
fsts
inc
lock
popf
bound
imul
adc
int3
inc
test
mov
pop
scas
adc
adc
les
pop
es
pop
push
and
push
jno
push
dec
stos
sub
mov
mov
fiaddl
loop
xor
loop
pop
jo
xchg
adc
push
loop
lahf
lods
test
lods
sbb
fisttpll
inc
fsubs
add
lods
push
icebp
cli
xor
mov
adc
mov
jns
cld
stos
dec
andb
pop
nop
into
sub
adc
je
inc
xor
rcl
lock
sahf
mull
sub
and
pop
enter
push
xchg
xchg
xor
dec
into
inc
ret
xor
jb
lret
pop
int
inc
outsb
lret
js
mov
pushf
mov
or
mov
push
pop
or
xchg
cmpsl
icebp
shr
aam
add
xchg
pandn
mov
jb
fiadds
into
loop
adc
call
jne
sbb
sub
mov
clc
jne
test
xchg
push
and
pop
test
push
shlb
repz
leave
stos
mov
lcall
mov
lds
mov
in
orl
aam
cmpsl
cmc
ret
cli
cmp
hlt
out
test
scas
push
rcrl
loop
push
subl
lods
lahf
mov
and
and
xchg
jp
cmp
add
iret
aas
fstpl
push
sbb
out
mov
aam
inc
xchg
lods
into
lahf
mulb
jle
imulb
xor
cmp
sbb
pop
in
or
mov
or
mov
adc
pop
leave
movsb
gs
and
shll
aad
mov
scas
pusha
mov
pop
mov
enter
pop
push
aam
mov
dec
jo
xchg
shlb
loopne
fstl
adc
mov
les
push
pop
repnz
lods
mov
adc
ljmp
fs
mov
add
mov
loop
or
xor
adc
or
sbb
sahf
stos
hlt
xor
and
pop
push
out
in
mov
sahf
jns
lock
cmpsb
les
fisubrs
cmp
pop
in
test
xchg
and
imul
mov
add
mov
dec
cmpsb
xchg
cld
pop
or
fcoms
dec
lret
je
shrl
jno
cli
enter
sbb
out
mov
je
out
cli
sbb
or
xchg
jg
lahf
call
daa
rclb
daa
sub
daa
lret
leave
gs
nop
sub
out
es
sbb
sbb
xchg
flds
cmpl
sbb
lcall
xor
or
ljmp
daa
nop
lods
stos
in
lods
andb
rorl
cmpsl
out
test
mov
cld
adcb
cmp
or
test
jp
inc
xor
push
ror
loopne
inc
cmpsb
stos
les
dec
mov
bound
push
movsb
je
dec
shr
or
test
mov
fwait
sbb
leave
sbb
mov
scas
jg
mov
xchg
addr16
xor
fdivr
fisubrs
out
lea
mov
pop
scas
pusha
scas
mov
out
stos
scas
lds
dec
mov
lret
mov
and
cmpsb
ror
dec
adcb
test
into
push
xchg
push
add
xor
sbb
dec
bound
mov
ret
scas
std
adc
leave
mov
call
fs
int3
mov
fdivrp
test
pop
icebp
sbb
ljmp
das
xor
adc
pusha
out
rol
out
bound
xor
loop
sti
shrl
pop
cwtl
mov
les
jo
test
test
push
pop
lods
cld
sub
adc
mov
out
in
rolb
mov
push
cmp
push
aam
fcomi
ja
hlt
les
cmpsb
in
mov
mov
push
out
sub
xchg
mov
je
xor
stos
ror
sbb
cs
mov
cld
mov
negb
or
subb
out
pop
and
aaa
push
fmuls
push
mov
ja
fsub
jle
xchg
dec
scas
ja
sahf
inc
mov
pushf
sub
lret
cmpsb
xchg
pushl
movsb
mov
cmp
loop
ss
test
mov
movd
adc
repnz
lret
jle
es
test
fsubr
inc
mov
jo
mov
call
clc
cltd
int3
xor
fistps
testb
push
sub
scas
fldl
clc
jbe
jg
mov
iret
outsb
xchg
push
or
stc
add
or
je
mov
cmc
xor
adcl
sbbl
std
mov
jg
andb
jbe
jg
sahf
pusha
mov
fs
data16
add
mov
ja
cmp
addl
out
jb
sub
decb
jne
add
fdivrp
les
jno
fisubrs
faddl
push
out
inc
jns
push
into
lds
jle
aam
cli
mov
pop
mov
mov
mov
sahf
ds
subb
jbe
and
mov
mov
fbstp
jmp
cwtl
xor
push
lahf
pop
push
xchg
mov
jmp
inc
mov
iret
cwtl
sub
loop
lock
icebp
iret
fimuls
sti
add
adc
loope
push
das
mov
xchg
xchg
flds
fbstp
insb
or
mov
cmc
repnz
push
into
rcr
dec
xor
adc
inc
jmp
notl
movsb
adc
ss
add
inc
ds
mov
xchg
jmp
push
rcl
ret
push
ret
aad
lods
or
mov
xchg
pop
sub
and
iret
xchg
stc
push
int3
loop
mov
mov
xchg
lahf
jmp
mov
push
out
js
jg
fwait
jecxz
xlat
into
fistpl
inc
dec
idivl
in
mov
cld
imul
xchg
lock
ljmp
hlt
xor
and
dec
pusha
xchg
repz
mov
sub
sbb
lahf
out
shlb
jo
push
pusha
pusha
in
das
les
jno
inc
pop
rcr
lret
mov
inc
or
lfs
repnz
xor
jae
lods
xor
mov
in
adc
stos
cmc
inc
sub
mov
lock
mov
shll
in
inc
xchg
imul
mov
lret
loopne
push
inc
arpl
les
push
lods
dec
push
pop
lret
mov
pop
data16
mov
add
out
js
mov
shl
mov
jmp
cmpsb
cmc
mov
out
xchg
mov
and
clc
das
inc
aaa
js
icebp
ret
stos
dec
jae
sub
adc
iret
inc
cs
fdivr
fisubl
les
lret
jo
pop
pop
jmp
adc
lods
pusha
mov
test
push
sub
shr
stos
cwtl
cmp
ds
fimull
mov
mov
adc
xlat
out
add
fs
clc
xchg
mov
cwtl
pusha
sahf
aad
clc
lcall
and
jo
rcll
mov
mov
stos
mov
mov
js
mov
icebp
sbb
test
das
sbb
adc
adc
in
adc
lock
jecxz
out
dec
call
lock
les
cmp
and
dec
loopne
cwtl
ret
in
and
xchg
icebp
sbb
add
fcmovu
inc
jmp
xchg
call
das
jl
lds
cmpsl
xchg
xchg
out
mov
add
dec
pushf
and
fimull
cmp
les
aad
in
cmp
pushf
cmp
or
mov
fisubrl
xor
test
fs
mov
daa
mov
repnz
cmpsl
es
ds
loop
mov
cmpsl
inc
xchg
inc
xchg
sbb
and
movsb
cmc
push
hlt
fldl
and
ljmp
push
xor
jb
lds
loop
sahf
xchg
inc
icebp
bound
cmp
loop
in
xchg
in
push
dec
out
mov
mov
repz
lock
stos
sahf
xlat
mov
push
dec
pop
cmpsb
in
sbb
xchg
push
loop
and
outsb
adc
stos
mov
dec
and
lcall
dec
xchg
icebp
dec
xor
stos
fdivrs
inc
and
aam
jmp
mov
mov
dec
adc
loop
aad
out
xor
mov
lds
repnz
lock
mov
js
and
mov
sub
sub
push
bound
sahf
stos
in
pop
rorl
out
out
test
xlat
mov
pop
imul
xor
in
decl
movsl
in
imul
adc
mov
jecxz
dec
jbe
cmpsb
hlt
int3
enter
cmc
daa
pop
jo
add
mov
idivb
int3
xor
sub
xchg
mov
mov
rorl
add
pop
aaa
fsub
pop
test
movsl
xchg
repnz
cli
add
inc
mov
lods
lock
int3
cmp
push
xchg
sahf
mov
cmp
sti
dec
repnz
adc
stos
out
adc
fs
push
fsubrl
hlt
es
adc
leave
pop
pop
and
in
adc
cli
and
adc
xor
xor
push
mov
in
push
leave
int3
and
fbstp
sahf
adc
movsl
xchg
hlt
and
setbe
jg
les
cli
dec
sub
pop
in
and
cld
fcomps
sub
hlt
cmpsl
test
aam
add
adc
sub
mov
pop
fcoms
fdiv
xchg
mov
out
inc
mov
dec
cli
or
push
cmpsl
insb
je
jecxz
push
xchg
lods
lds
test
cmp
inc
pop
icebp
dec
test
sbb
test
mov
imul
loop
addr16
loope
sbb
call
stos
and
cmpsl
push
nop
movsl
push
adc
dec
sarb
xor
push
adc
mov
insb
mov
mov
lods
inc
movsb
dec
rclb
sub
call
xchg
lock
push
adc
cmp
sbb
pop
mov
sar
lock
jp
adc
iret
int
push
loop
into
pop
sahf
leave
jecxz
pop
jp
mov
loope
out
cli
add
dec
int
lcall
xchg
mov
out
push
sti
lret
cmpsl
mov
fcomp
ret
clc
push
cmpsb
inc
negb
jb
fcomip
xor
or
das
cmp
inc
pushf
cmpsl
ret
iret
xor
repnz
push
out
inc
mov
sahf
rorl
notl
rclb
cmpsl
out
cmpsb
xor
lcall
sub
fdivrl
fadds
ja
in
mov
inc
mov
js
inc
lock
push
xchg
clc
inc
ljmp
sbb
lock
push
mov
movsl
out
in
loop
pushf
rclb
push
test
adc
lods
jmp
xor
cmpsb
dec
sbb
mov
testb
mov
cmpsl
ds
call
test
adc
jmp
mov
arpl
mov
mov
push
adc
sbb
lds
jae
hlt
push
mov
test
fisubrs
cmc
or
xor
xchg
mov
and
lds
xchg
loope
clc
mov
int3
das
xchg
popf
add
lods
dec
xchg
rolb
jecxz
call
mov
in
pop
cmc
sbb
add
mov
rcrl
inc
ret
in
push
jecxz
mov
out
xor
sahf
push
test
fdivl
out
xchg
adc
push
or
icebp
add
fcoml
mov
shlb
dec
or
jp
jb
clc
leave
mov
loope
lretw
stos
ljmp
repz
push
inc
imul
cli
aaa
loopne
mov
pop
stos
in
lods
xchg
daa
ret
sbb
lret
mov
ret
int
fs
dec
cwtl
adc
clc
icebp
and
lds
adc
sar
iret
push
lret
and
mov
sub
lods
and
hlt
and
and
ret
fimull
cmpsb
adc
hlt
or
cmpsl
sbb
out
sub
dec
cmp
into
int3
faddp
cmp
scas
cmp
jp
mov
pusha
icebp
push
jl
mov
roll
dec
jns
pop
in
arpl
mov
pushf
inc
rcrb
pushf
frstor
sub
sbb
addr16
fmuls
pop
rorb
aad
sub
adc
cmpsb
in
cs
loope
bound
call
cmp
lock
inc
pop
out
fcmove
shlb
adc
ja
subb
xchg
aam
dec
push
xor
cwtl
jg
lods
or
or
adc
lahf
aam
aad
inc
jmp
lods
ficoml
ljmp
dec
fsubl
leave
je
adc
dec
jg
xchg
adc
adc
push
lock
stos
mov
mov
out
rcll
shlb
enter
les
ja
pop
js
loop
push
xor
int3
hlt
push
push
loop
scas
fmul
cwtl
lahf
dec
cld
out
stos
int
test
push
pusha
daa
xchg
cmp
sbb
mov
jb
pusha
push
and
dec
xchg
movsb
idivl
sahf
stos
aam
lods
xlat
in
mov
leave
loop
ss
jb
push
mov
xchg
jle
dec
adc
popf
sub
movaps
and
cli
adc
jecxz
sub
add
jb
in
call
data16
xchg
loop
fcmovu
cwtl
sub
repnz
pushf
stos
ret
lock
icebp
pop
cmp
daa
test
int3
lods
out
shlb
sahf
cmp
cld
mov
rol
repnz
test
ss
jle
lods
jecxz
add
ret
movsl
lock
loop
daa
xlat
cmp
fistpll
loop
push
mov
stos
and
cmpsb
and
dec
push
mov
std
xchg
movsb
icebp
inc
xor
pop
push
sub
sbb
xor
leave
int
out
cwtl
stos
in
mov
mov
arpl
lcall
mov
mov
dec
loop
sub
in
test
pop
mov
mov
cmp
adc
jecxz
cmp
xor
pop
mov
sbb
lods
cmp
fsub
dec
inc
bound
mov
fmuls
stos
ljmp
adc
addr16
xor
cs
adc
nop
out
dec
adc
inc
jo
outsl
push
push
fistl
ret
adc
pusha
cmpsl
sbb
adc
xor
add
outsl
iret
mov
mov
in
mov
pop
dec
fsubs
ds
cmp
imul
stos
sbb
sub
dec
mov
adc
rorl
and
push
xchg
jmp
sbb
jecxz
outsb
xchg
lock
push
fdivr
fcomps
int3
add
lods
and
call
pusha
je
mov
enter
pop
call
icebp
mov
mov
dec
jp
pop
ljmp
out
in
sbb
sbb
sbb
adc
mov
test
adc
rorb
push
sbb
shl
loop
and
mov
add
cmp
xchg
iret
call
push
push
out
cli
pcmpgtb
inc
leave
dec
pop
jb
ljmp
jp
fdivl
push
callw
sbb
shll
xor
cmpsb
test
dec
not
loopne
fs
adc
sti
mov
lret
lods
test
aam
ds
loop
xor
or
cwtl
cmp
sub
mov
jb
out
loope
je
adc
sbb
mov
jb
stc
js
jno
imul
sub
lods
lods
clc
sub
adc
adc
bnd
lret
mov
xor
rol
push
aaa
mov
aaa
adc
icebp
sbb
sub
jp
pushf
enter
pop
adc
mov
mov
push
xchg
stos
dec
sbb
pop
sbb
sbb
cmpsb
loop
jge
add
fnstsw
int3
mov
sub
test
xor
sub
adc
stos
lock
dec
shr
cmpsl
or
pop
push
leave
test
push
or
sbb
call
movsl
popf
dec
loope
push
icebp
test
inc
inc
lods
mov
xor
outsb
into
push
pop
fsubl
push
int3
out
or
fldenv
jae
cmp
es
out
repnz
lock
sti
pop
in
or
stc
xchg
cmpsb
or
adc
loope
cmp
cmpsb
mov
in
sbb
fldenv
imul
sub
xor
ret
test
bound
js
in
pusha
rclb
into
enter
movsb
aam
cmc
lahf
push
shlb
or
cld
test
ret
fmuls
nop
daa
loopne
ja
or
xor
hlt
rorb
into
movsb
les
mov
imul
int3
ret
push
or
bound
and
lock
lods
dec
push
shll
mov
movsl
mov
mov
inc
pop
pushf
xchg
leave
cwtl
mov
xor
mov
dec
xchg
repz
push
xchg
enter
dec
into
stos
mov
je
lcall
xchg
push
data16
roll
sub
dec
loop
leave
push
cmp
cmp
and
les
insb
cmp
push
jge
xchg
hlt
rol
out
fildl
jae
cmp
stos
adc
inc
inc
lds
mov
mov
clc
adc
fcomps
int3
push
ret
pushf
leave
gs
ja
fadds
movsl
xchg
pushf
xchg
leave
icebp
and
mov
or
bound
mov
dec
cs
stos
jns
xchg
and
jns
mov
xor
insb
dec
dec
lods
jmp
inc
dec
mov
mov
test
push
push
adcb
loop
or
fsubrs
les
or
mov
int
jnp
and
pop
xor
icebp
inc
repnz
push
cs
mov
or
sub
xchg
xor
icebp
jecxz
ret
icebp
jns
lock
sbb
mov
mov
mov
inc
shll
sub
ficoml
and
std
dec
cs
sbb
std
mov
scas
or
sbb
fcomps
cmp
jo
mov
adc
das
mov
enter
dec
jp
pop
dec
mov
adc
enter
data16
pop
pop
out
sub
daa
insb
and
add
mov
jp
cld
or
and
dec
jo
xchg
outsb
or
test
mov
imul
pop
outsb
call
adc
mov
test
loopne
adc
iret
dec
mov
dec
lret
cmp
dec
mov
ljmp
int3
pop
add
xor
sarl
add
mov
mov
and
xchg
in
rcr
xor
stc
adc
cmp
mov
lock
cmp
bnd
inc
fwait
ret
pop
push
flds
cmp
imul
loope
adc
push
fcomip
push
adc
callw
mull
push
sub
or
adc
ja
mov
xor
into
push
mov
fists
lock
lahf
adc
push
rclb
lock
mov
sbb
fsts
mov
mov
fcomps
ficompl
mov
das
or
push
inc
push
pop
push
out
leave
out
shll
insb
mov
jb
repnz
xlat
test
cmp
lods
sbb
jb
adc
mov
or
lods
ret
rclb
ja
mov
rcrl
neg
inc
aaa
loopne
insb
mov
cwtl
and
push
cmp
hlt
leave
ja
push
gs
pop
movsl
push
decl
lea
xlat
pop
mov
and
test
out
adc
adc
adc
cmp
ret
in
jbe
rcll
mov
test
adc
mov
sub
adc
jle
xor
inc
int3
adc
out
pusha
adc
enter
lret
js
jmp
mov
adc
jl
xor
xor
push
insl
xchg
sub
outsb
pop
cmpsb
fstl
lret
fstl
roll
ret
cmc
mov
test
adc
lcall
xchg
fistpll
enter
mov
int3
mov
sub
loopne
ljmp
pop
inc
in
dec
je
int3
repnz
divl
sub
adc
dec
cmp
and
sub
imulb
xchg
xor
stos
mov
lods
outsb
inc
in
js
outsb
repz
jmp
loopne
lods
repz
mov
mov
sub
std
xor
imul
les
dec
dec
ljmp
aam
shll
test
enter
dec
loope
xor
loop
mov
loopne
int
addr16
mov
pop
fucom
outsb
fisttpl
lret
test
popf
sbb
mov
clc
xchg
adc
shlb
ljmp
lds
aaa
notl
clc
or
pushf
pop
out
nop
mov
cmp
sbb
mov
adcb
mov
xchg
and
adc
mov
stc
scas
push
sarl
push
imul
shrb
pusha
fists
mov
imul
jmp
push
mov
jno
adc
inc
cmp
or
lret
and
stos
movsl
icebp
sbb
outsb
mov
insb
pop
in
leave
pop
xchg
jl
ss
aam
cmp
and
repnz
dec
pusha
ljmp
cmp
ror
aam
push
das
loop
movsl
lret
ret
xlat
push
int3
es
js
xchg
adc
mov
jb
leave
aam
fstpt
mov
sti
adc
ror
mov
cld
out
faddl
lret
xchg
arpl
inc
cld
mov
xor
les
lret
sub
out
push
adc
stos
mov
dec
push
clc
add
or
mov
mov
mov
js
lret
inc
push
lods
cmp
and
pop
clc
xor
outsl
out
jle
iret
mov
int3
xchg
jno
bound
mov
fsubrp
dec
push
imul
jp
pusha
mov
enter
sahf
dec
xchg
hlt
into
aam
mov
outsb
mov
pop
mov
test
push
xlat
insl
or
push
and
movsl
in
jmp
movsl
xor
cmp
jecxz
adc
or
add
mov
mov
insl
out
cmpsb
mov
lds
out
cmp
jbe
and
into
out
pusha
jae
inc
or
xchg
lahf
push
sbb
and
fucom
and
popf
jl
fnstenv
out
mov
jbe
fcoml
je
xor
mov
lock
sub
lock
adc
adc
cmp
sti
cltd
shll
xor
test
data16
int3
cmp
cld
movsl
outsl
dec
js
js
cmpsb
repz
xor
ja
sbb
adc
jb
cmp
push
mov
or
sti
mov
inc
loop
sub
inc
shll
or
lods
hlt
ret
out
cmp
inc
ja
and
add
fimull
inc
out
icebp
lods
in
and
mov
js
lret
jo
dec
mov
lret
mov
imul
cmp
fdivrs
je
in
or
lds
out
push
or
sbb
stos
jb
cld
int3
mov
jne
dec
loopne
cmp
pop
jmp
enter
arpl
inc
movsl
pop
xchg
adc
iret
ficompl
mov
cmp
mov
sarl
jae
jl
out
int3
jb
clc
je
nop
jecxz
pop
shll
test
loopne
sub
dec
in
mov
pop
in
test
mov
insb
push
fwait
aad
loopne
xchg
jbe
psubusb
sbb
sub
xor
out
dec
fcompl
jno
out
mov
jae
sbb
imul
rcl
fcmovne
into
fstl
adc
jl
and
arpl
pushf
out
push
mov
pop
outsl
mov
cmp
fstpt
lret
fdivr
jne
mov
lock
mov
mov
fdiv
mov
push
shlb
push
cmp
cmp
dec
adc
pusha
orb
xor
lock
shlb
loop
std
int
imul
fstpl
cmp
decl
mov
fdivl
sarl
mov
adc
rclb
gs
sub
xchg
addr16
xchg
push
cmp
test
xor
mov
sbb
xor
push
lods
loope
fsubs
push
jo
insl
leave
xchg
shlb
and
mov
sub
mov
imul
and
xchg
mov
rcrb
lods
insb
pop
inc
leave
xor
mov
in
jno
dec
inc
ja
sbb
enter
in
ficompl
insb
or
rcrb
icebp
out
jg
lods
sbb
addr16
shl
sbb
fadd
pop
jae
pop
sti
in
mov
repnz
cwtl
std
sbb
push
jne
mov
ret
jp
rclb
js
dec
rcrl
fidivrl
lods
adc
fcoml
pop
lahf
lret
mov
dec
sub
add
popf
mov
jmp
jmp
adc
jmp
jb
or
ljmp
adc
stos
sbb
ret
sbb
pusha
cmp
adc
add
mov
in
push
mov
js
xchg
mov
out
lods
xchg
cmp
pop
mov
lret
js
stos
and
imul
stos
adc
push
out
scas
sbb
cs
cmp
xchg
idivb
or
rorb
loop
enter
data16
inc
imul
out
dec
sub
fwait
mov
lods
mul
fstpl
rcrb
xlat
movsb
pop
adc
and
daa
mov
daa
test
daa
mov
sbb
fs
sub
lods
out
and
test
shlb
sub
mov
pop
mov
pusha
in
jmp
sub
xchg
fcoml
repnz
sti
lds
in
out
dec
aam
out
lock
mov
rolb
lcall
lods
lods
jo
pop
xlat
test
xchg
into
xchg
mov
and
adc
stos
lock
mov
dec
cmc
lock
into
ljmp
addr16
inc
jne
data16
xchg
sbb
les
mov
mov
sub
or
and
dec
aam
sbb
xchg
addr16
dec
cmp
jns
or
fdivs
jbe
fadds
aad
dec
push
add
movsb
jle
out
rcr
shll
push
movsb
and
clc
jle
or
fldcw
and
mov
add
cli
pusha
neg
mov
pop
je
add
loopne
add
push
sub
adc
and
push
addr16
push
and
repnz
mov
outsl
cs
pop
callw
mov
in
pop
xchg
lock
pop
dec
jo
icebp
outsl
es
stos
lret
or
sub
cmc
imul
aam
gs
adc
sub
sub
mov
mov
jecxz
add
push
adc
sahf
cld
xor
adc
test
ror
dec
idivb
jb
dec
add
mov
inc
sti
stos
in
les
mov
movsl
fcmovnbe
adc
std
hlt
xlat
xchg
xor
cmp
and
inc
aad
and
cmc
arpl
outsl
mov
data16
fidivrl
jnp
and
jmp
fucomp
repnz
in
repnz
ljmp
push
imul
test
std
dec
out
ljmp
nop
mov
test
fcoms
push
dec
sub
flds
xchg
mov
xchg
rclb
iret
xchg
fisubl
stc
lock
sub
std
cmp
mov
fucomp
or
lods
jl
es
add
xor
loopne
nop
xlat
ljmp
add
aad
pushf
mov
mov
sbb
sub
fdivrl
sub
pop
mov
jb
in
leave
repnz
cmp
push
sub
jb
and
js
cwtl
adc
jle
test
xor
push
and
fnsave
je
push
sub
into
int3
pusha
fdivl
test
shll
icebp
sbb
mov
xchg
lret
mov
ret
js
imul
pusha
jp
sub
call
and
or
enter
std
gs
jp
mov
std
iret
data16
repz
cs
push
cmp
imul
pop
mov
mov
in
ja
cmp
add
or
dec
mov
mov
leave
mov
cmp
mov
inc
mov
mov
lcall
aam
lock
adc
jmp
xchg
and
les
push
dec
into
sub
cmp
mov
jge
rclb
sbb
xor
int3
fbld
es
adc
test
pop
cwtl
stos
fsubr
inc
sub
xor
sbb
sbb
into
cmp
std
nop
xlat
out
ja
jo
push
out
test
push
in
xor
imulb
lret
insl
sbb
push
bound
bound
popa
mov
sti
stos
lods
push
adc
repnz
cmp
in
and
mov
mov
mov
pop
lcall
daa
and
ja
jge
fisubs
and
dec
dec
lds
mov
ljmp
sub
push
mov
addr16
loop
mov
icebp
sub
push
dec
inc
xor
int
aam
fcomps
sbb
shlb
cmp
sbb
leave
rcll
dec
fnstenv
cmp
cmp
aam
jo
mov
cld
sub
aam
je
fdivr
aaa
push
loope
das
xchg
jmp
pop
in
push
push
insb
test
clc
push
push
and
pop
movsl
fildl
and
push
hlt
xlat
int3
icebp
push
jl
scas
xor
int
ds
cmp
hlt
jl
daa
js,pt
mov
mov
aam
rorl
pop
cmp
pop
dec
xlat
out
and
mov
in
adc
gs
push
js
pushf
enter
cmp
repnz
and
mov
sbb
out
js
or
repnz
out
leave
sti
fmull
adc
adc
cld
push
push
call
shrl
push
fdiv
inc
ja
mov
and
add
mov
push
inc
dec
rep
lret
jnp
adc
or
leave
jns
add
xchg
jge
pusha
mov
cld
js
lock
and
push
cmp
mov
mov
or
ja
mov
ret
sub
test
xor
jl
adc
add
je
fwait
or
inc
std
insl
nop
dec
in
cmp
js
movsl
jp
fdivrl
loop
js
sub
cmp
les
jo
js
xlat
std
ret
out
js
push
stos
sbb
adc
in
daa
inc
nop
out
cmp
push
xor
sub
pop
ret
daa
mov
cld
sbb
test
stc
xor
and
andb
sti
or
test
addr16
ljmp
fnsave
test
pop
rcrb
pop
push
dec
cmpsl
movsb
repnz
iret
in
jp
xor
jae
ss
push
xchg
lods
mov
sahf
cmp
cmpsl
fsubrs
and
int3
xor
mov
int
xor
es
enter
jecxz
testl
add
push
push
pusha
ret
mov
xchg
mov
or
ja
inc
xchg
cmp
notb
adc
gs
xor
push
xor
jecxz
cmp
cmpsl
pop
ret
aad
mov
mov
adc
out
inc
test
cmp
xchg
cmp
cmp
ret
adc
ljmp
in
fcmovnbe
xor
mov
fisubrl
clc
test
int3
mov
sub
fcmovb
push
adc
clc
iret
fsubp
mov
fsub
lods
loop
and
mov
or
push
sub
cmp
stos
cmc
xor
out
jmp
or
aad
shlb
ficompl
in
loop
cmp
xor
icebp
sub
outsl
sarb
leave
ret
xor
cmc
fwait
mov
sbb
stos
xor
int3
sub
jbe
or
shrb
ficoms
inc
fiaddl
aad
and
fstpt
push
push
aaa
mov
xor
aad
dec
std
and
cli
int
insb
repnz
cmp
repnz
inc
fldcw
xor
mov
daa
cmpsb
shlb
dec
out
cmp
and
inc
jmp
es
mov
into
cmc
imul
fdivr
iret
ljmp
cmc
xlat
mov
rorb
and
push
lods
adc
push
adc
mov
loopne
les
dec
mov
push
sub
clc
cmc
xor
sbb
repz
fwait
notb
jbe
xor
pushf
xor
ret
pop
insl
aam
or
push
aaa
fisubrl
cmp
mov
cmp
popa
in
mov
mov
mov
xor
push
jl
movsb
insl
int
hlt
imul
in
clc
sti
popf
aam
mov
imul
jl
ret
jb
fstpt
int
inc
jl
js
sub
cmp
cmp
loop
jl
jae
dec
fdivs
pop
shrb
dec
daa
mov
repnz
sti
pushf
push
xor
mov
sub
dec
data16
lods
push
out
rclb
test
push
push
clc
jae
push
push
push
inc
sub
jmp
and
stc
mov
pop
dec
cld
enter
cmp
outsb
int3
dec
cld
and
int
negl
sti
into
push
jl
jo,pn
cmc
cmp
dec
pop
and
fs
jge
jle
cmc
adc
push
mov
jmp
dec
sub
adc
call
xchg
add
shl
xor
dec
enter
call
mov
adc
je
in
jl
jo
jnp
rcrb
jo
pop
dec
nop
dec
jle
insb
cmpsl
adc
stos
push
lods
imul
xchg
in
pop
movsl
or
fwait
pop
std
mov
and
daa
test
sbb
lret
test
pop
ficoml
push
jl
adc
pop
and
mov
loop
cmp
mov
cmp
xor
rclb
push
dec
lea
xor
mov
xchg
cld
cmp
jb
lcall
int3
ret
cmc
mov
out
repnz
dec
out
in
push
imul
ds
push
cli
pop
mov
movsb
mov
jecxz
nop
jmp
fmul
popa
cs
mov
cmp
inc
into
stos
in
sbb
cmp
loope
dec
cld
adc
xlat
fidivrs
sub
mov
shlb
sti
adc
stos
fcmove
hlt
sbb
inc
loop
xor
mov
or
rcll
jge
testl
clc
push
mov
ret
stos
mov
shlb
out
inc
je
hlt
mov
lods
pusha
push
cmpsb
imul
clc
scas
jo
mov
push
data16
mov
lock
pop
repnz
lods
push
out
xchg
movsb
push
data16
frstor
push
data16
xor
adc
aam
jp
imul
into
out
and
gs
mov
mov
and
lret
sub
je
into
adc
lods
icebp
movsl
xchg
shl
inc
orl
lods
xorb
ljmp
ret
lods
lea
fst
test
sub
or
sbb
ret
stos
es
lods
stos
ret
lret
or
jmp
jnp
xor
adc
adc
push
sti
push
dec
icebp
call
loopne
dec
sbb
fs
es
xor
in
and
cmp
sbb
push
adc
xor
fld
cmpsl
div
sbb
dec
dec
fnsave
ss
pusha
stos
insb
outsb
push
cmp
or
stos
stos
push
lret
sti
ds
enter
dec
mov
out
stos
pop
iret
scas
cld
and
aaa
loope
jbe
and
fcomps
xor
pushf
xor
sbb
and
mov
xorb
cmp
cmp
mov
hlt
xchg
std
jg
xchg
clc
jp
dec
mov
rcr
pop
bound
fnstsw
shll
or
mov
test
mov
sbb
push
aad
and
xor
stos
jb
ja
es
jp
aad
in
and
dec
test
clc
pop
push
arpl
std
mov
lods
xor
push
call
dec
enter
cmp
fcoml
insb
cs
pop
clc
sbb
test
enter
ja
and
fmul
jns
mov
and
fcoms
test
insl
xor
adc
pusha
push
pusha
sar
in
cmp
fstl
jecxz
lock
jne
cwtl
lahf
dec
sarl
dec
loope
pop
mov
sub
and
or
sub
lret
loop
cmc
popf
pop
movsb
add
and
sub
mov
cmp
out
ror
int3
or
sbb
iret
scas
inc
out
popa
or
stos
rcrl
sbb
mov
push
bound
cs
pop
mov
fsubrs
ljmp
cmpb
out
jmp
lret
jecxz
jl
out
mov
ret
data16
mov
cwtl
mov
mov
and
adc
fisubrs
pop
out
jo
mov
cli
cwtl
lock
or
out
or
mov
hlt
adc
inc
ljmp
arpl
out
lret
cltd
int3
insb
in
mov
insb
mov
fsubrs
sub
in
lods
jne
cmpsl
mov
lock
std
mov
test
in
xchg
lods
test
push
cmp
jmp
jb
lods
inc
pop
int
sub
jae
dec
out
cmpsb
and
mov
loope
movsb
and
adc
adc
sub
pop
rorl
cld
adc
inc
ja
call
cmp
ds
sahf
repz
cmp
xchg
frstor
fdivrl
lods
sar
lock
xlat
movsb
mov
xchg
in
mov
pop
mov
jecxz
pop
insl
mov
jns
scas
xor
adc
sbb
rorb
mov
and
icebp
outsb
sub
jno
sub
xor
jo
push
ja
clc
gs
xlat
mov
jno
js
test
into
leave
fistpl
push
aas
dec
mov
cmc
dec
mov
lock
rorb
ja
bound
loop
jge
mov
shll
in
rorl
adc
daa
lret
pusha
mov
pop
repnz
add
mov
sbb
jmp
fsubrl
mov
jns
dec
clc
lret
data16
lds
pshufw
data16
ss
jle
xorb
jmp
loope
bound
fdivrs
xor
pop
inc
ret
pop
in
andb
int3
imul
sub
and
cmpsl
test
push
dec
movsb
jnp
mov
sbb
in
mov
xor
popa
sbb
andb
xor
in
push
sbb
jnp
and
cmp
mov
mov
push
cmp
shlb
and
sti
inc
add
sub
dec
pop
inc
cmpsl
jns
push
fldcw
jb
cmp
sbb
jo
adc
push
and
bound
xchg
pop
adc
stc
pushf
ja
hlt
xor
pop
int
js
adc
jnp
push
xor
js
int
insb
popa
jle
movl
in
test
or
leave
cmp
fsub
cmp
and
ljmp
daa
idiv
mull
jmp
adcb
sub
push
pusha
xchg
push
in
pop
lods
aad
cmpsb
dec
cmp
out
inc
je
cld
jb
lcall
ret
sbb
aaa
sub
push
cmp
iret
call
jnp
ss
bound
ret
loopne
push
and
xor
sbb
lock
dec
in
aad
or
sub
push
lds
xor
icebp
outsl
je
push
repz
aad
in
pusha
and
pop
jns
jns
jge
test
mov
or
jmp
test
mov
je
xor
movsb
dec
mov
jnp
ljmp
mov
and
jo
and
jl
mov
adc
sub
jo
or
fnsave
add
clc
aaa
fcomp
xor
test
xor
sbb
fs
stos
push
push
jae
cld
sub
mov
pop
jmp
dec
pop
mov
rcll
loop
mov
test
cwtl
cmp
dec
push
jne
jb
mov
jmp
sub
cmp
daa
in
and
je
insl
adc
jp
adc
aad
jl
insl
dec
fldt
lea
and
stos
fnstsw
lods
cmp
fdivs
in
sarl
pop
pushf
std
movsl
fnstcw
addr16
push
cltd
adc
icebp
add
repnz
stos
mov
cli
fldt
dec
xchg
into
sub
and
jne
fs
sub
clc
leave
pop
int
out
lret
lea
inc
and
adc
into
cmp
cmpsl
jbe
push
adc
dec
mov
lret
cmp
clc
inc
fisubrs
inc
addr16
adc
push
sti
mov
fsubl
jae
pop
ds
lods
push
adc
daa
out
fsub
mov
pop
lock
pop
enter
call
rolb
or
jbe
and
sar
pop
jb
repz
lds
jae
xor
sub
mov
pop
ret
jnp
mov
adc
jecxz
sbb
test
les
pop
xorb
jne
int3
or
jno
out
call
and
addr16
or
mov
jns
push
adc
xchg
push
sub
cwtl
and
sub
add
ljmp
cmp
push
repz
sahf
pop
lock
repnz
fdivr
and
sbb
xchg
xor
pop
sbb
fmuls
xor
cmpsb
sub
pop
aam
mov
ret
lcall
scas
fdiv
sub
lret
je
xor
xchg
cwtl
je
jg
xchg
sbb
loop
xchg
jp
jae
lcall
cmpsb
cmp
sub
imul
cli
jg
dec
sbb
jecxz
adc
cli
filds
imul
fstl
inc
xchg
jae
jp
mov
fs
mov
pop
cmp
popf
mov
test
xchg
pushf
jmp
xchg
sub
mov
loop
jbe
mov
sbb
aam
mov
mov
cmc
inc
insb
out
xchg
mov
mov
pop
xchg
or
xchg
xchg
mov
xchg
aad
scas
or
and
scas
lahf
pop
xchg
sub
jne
dec
pop
into
ret
cmp
cmp
or
ret
lea
xor
aam
xchg
sub
leave
add
cltd
jg
test
lods
push
cmp
mov
mov
xchg
xor
mov
pop
nop
sarb
and
mov
jno
orb
adcb
push
out
les
test
push
pusha
arpl
loopne
mov
pop
mov
in
into
push
mov
call
sbb
fdiv
shll
jmp
xchg
movsb
mov
sub
xor
daa
fwait
cwtl
xor
xor
enter
sti
stos
mov
xchg
enter
mov
mov
xchg
outsb
and
jl
call
bound
pop
movsl
orb
enter
clc
dec
xchg
mov
int
inc
jg
mov
call
repz
pop
hlt
int3
mov
bound
jg
into
adc
fnstenv
sarl
add
adc
xor
cmp
mov
push
adc
je
leave
cmp
and
repnz
adc
sahf
mov
data16
ror
adc
mov
adcb
test
lea
pushl
fbld
mov
hlt
cmc
idiv
clc
std
cli
add
add
cld
adc
adc
cld
and
and
cld
xor
xor
cld
inc
cld
inc
cld
dec
cld
dec
cld
push
cld
push
cld
pop
cld
pop
cld
popa
cmp
pop
ds
jge
fwait
mov
mov
bound
mov
inc
mov
push
lods
mov
bound
data16
push
mov
jmp
js
lea
mov
jge
mov
jno
jno
jno
jno
jno
jno
jno
jno
outsb
xchg
mov
lods
push
outsb
mov
or
adc
pop
jp
jp
jp
jp
jp
jp
jp
jp
jp
mov
fwait
cld
addr16
xor
es
fstpl
adc
lock
addr16
inc
divl
lret
rol
fsts
push
push
aam
cli
bound
mov
fwait
mov
cmpsl
mov
mov
mov
mov
mov
iret
mov
fstpt
out
jmp
out
mov
sti
mov
pop
mov
adc
pop
mov
sub
xor
pop
add
and
and
inc
sub
mov
faddp
cmp
and
adc
scas
sbb
and
add
mov
int3
outsb
or
inc
test
mov
test
cld
push
outsb
ja
cwtl
mov
mov
mov
jge
xchg
mov
xchg
mov
movsb
repnz
imul
clc
out
cli
repnz
idiv
cli
cld
cld
addr16
jbe
lods
inc
add
mov
int
in
lds
in
pushl
mov
adc
int3
mov
or
mov
jge
ja
fisubs
push
outsb
ss
jbe
mov
in
cli
data16
push
mov
mov
mov
mov
inc
mov
pop
mov
push
lcall
jge
mov
mov
mov
adc
push
pop
cltd
mov
mov
pushl
mov
sub
pop
cmp
mov
out
ljmp
inc
push
push
or
bound
adc
adc
cld
inc
cld
inc
cld
dec
cld
push
cld
pop
cld
arpl
push
mov
xchg
lea
dec
sahf
lea
scas
fiadds
scas
popf
movsl
movsb
movl
gs
gs
fsubl
gs
gs
add
lds
gs
xor
gs
gs
gs
gs
fs
mov
hlt
sbb
mov
sbb
fwait
inc
sbb
pushf
dec
sbb
push
sbb
fwait
push
sbb
xchg
push
jbe
cld
and
es
sub
cs
ss
cmp
ds
inc
cld
inc
cld
dec
cld
dec
cld
push
cld
push
cld
pop
cld
pop
cld
data16
push
outsb
cld
jb
jbe
jp
mov
xor
hlt
mov
mov
xchg
cli
xchg
cld
lcall
iret
stos
adc
mov
jp
jp
jp
jl
jp
jp
jp
jp
jnp
jbe
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jnp
lock
jp
jp
jp
jp
jp
jp
jp
jp
jp
adc
cld
push
pop
add
jb
jbe
jp
xorl
xchg
push
xchg
popa
lcall
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsb
pop
mov
bound
mov
mov
int3
sbb
dec
dec
lea
pushl
sbb
sbb
popa
inc
jno
jno
jno
jno
jno
outsb
cmpl
pop
cli
gs
insb
outsb
lret
pop
mov
or
dec
popf
lea
add
lret
ja
ja
ja
ja
jnp
ja
ja
ja
ja
js
pushf
mov
scas
jge
mov
aam
fstpt
jp
sbb
cld
push
cld
adc
push
lret
sbb
mov
cs
cmp
inc
mov
push
mov
pop
mov
push
outsb
mov
mov
cmpb
mov
lcall
stos
adc
jp
jp
jp
sbb
push
repnz
hlt
lret
neg
clc
xor
inc
cld
push
cld
jp
cmpl
ljmp
dec
cmp
push
inc
out
push
dec
std
subb
neg
lret
hlt
call
mov
jns
jg
mov
xchg
or
dec
movsb
popf
inc
jbe
jp
jp
jp
jp
xor
cs
add
cld
imul
cmp
pop
dec
dec
outsl
dec
js
xorl
stos
push
mov
mov
jno
jno
jno
jno
jno
jae
test
out
pop
ja
mov
ja
int3
ror
or
dec
add
mov
mov
sbb
cmp
stos
int3
dec
or
inc
cwtl
mov
adc
push
test
and
and
dec
rcrl
and
in
and
daa
mov
jg
inc
mov
and
xor
inc
cmc
push
push
pusha
ss
gs
gs
jl
xchg
pushf
push
mov
cmpb
cld
in
out
push
jp
jp
mov
clc
mulb
push
outsb
adc
jbe
jp
jp
jp
jp
sbb
cld
jno
cmp
fwait
pop
sbb
pushf
je
jns
mov
in
gs
movsl
sub
popa
fists
dec
mov
scas
repz
ret
sbb
ror
je
dec
fimuls
dec
out
ljmp
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
mov
push
outsb
jp
cmp
gs
and
sahf
mov
gs
gs
mov
mov
gs
arpl
push
shlb
jno
jno
jno
jo
iret
out
inc
add
or
fs
ss
inc
hlt
js
icebp
mov
and
lcall
int3
sbb
test
ret
aad
fldenv
in
outsb
push
jno
jno
jno
jno
jo
push
cld
inc
cld
dec
cld
push
cld
push
cld
pop
cld
gs
insb
cld
jae
jp
test
adc
or
jb
jns
mov
mov
lcall
xchg
mov
addl
out
jbe
jp
pushl
mov
pop
xchg
addr16
outsl
sahf
ja
ja
ja
ja
ja
js
idivb
ja
ja
ja
ja
ja
ja
ja
ja
ja
mov
jp
jp
jp
jp
adc
or
push
leave
adc
dec
and
inc
sub
sub
push
mov
jo
out
inc
ja
ja
ja
ja
mov
pop
jp
sbb
push
mov
jp
mov
andb
sbb
sahf
dec
cmpsb
and
gs
mov
push
mov
jno
jno
jo
out
fidivs
ja
mov
sahf
rcrb
xchg
mov
adc
repz
add
jno
jno
jno
jo
out
lcall
add
mov
fisubs
enter
mov
mov
shlb
adc
int
pop
ds
mov
jno
jp
mov
adc
lret
aam
loope
out
hlt
mov
or
inc
mov
or
ljmp
add
add
jmp
bound
pushw
push
outsb
push
jb
adc
popf
sbb
add
cld
cmp
xlat
inc
push
mov
sbb
fwait
add
pushf
jae
push
mov
hlt
mov
pop
pop
jp,pn
jp
adc
addl
mov
negb
add
and
into
ljmp
lcall
inc
pushf
fwait
pushf
mov
add
mov
jge
ljmp
cld
push
cld
and
es
sub
cs
xor
ss
cmp
ds
pop
in
mov
and
xor
inc
pop
fisubl
repnz
and
mov
icebp
cmp
test
mov
fisubrl
incl
mov
scas
dec
bound
jp
mov
mov
mov
adc
and
lcall
xorl
mov
jnp
xchg
mov
lods
xor
inc
out
push
sbb
fidivrl
pop
mov
sbbb
xchg
mov
nop
xchg
int
or
stos
arpl
mov
cld
cld
into
cld
sar
fcomp
fcompl
dec
jnp
and
cmpsb
ds
int
xorl
jg
lgs
inc
cmp
in
mov
push
mov
dec
mov
outsb
subl
mov
mov
mov
and
push
adc
jbe
jp
adc
xchg
rolb
imul
clc
add
or
adc
sbb
cld
pop
lcall
fistpl
add
mov
int3
rorb
testb
inc
xorb
out
mov
lods
adc
adc
and
pop
push
test
mov
jb
adc
jb
lcall
movsl
adc
push
in
add
jp,pn
data16
outsb
bnd
jbe
jp
jp
adc
nop
inc
push
cmp
fwait
mov
int
mov
mov
ja
xchg
sbb
jno
jno
jo
out
mov
stos
push
or
mov
cld
gs
arpl
cmpsb
pop
jp
jp
cmp
repnz
hlt
shl
clc
clc
and
xor
test
out
or
lock
jge
popf
mov
adc
aam
gs
inc
cs
inc
mov
inc
cld
gs
sbb
bound
push
adc
lea
in
dec
lock
gs
arpl
dec
pop
jno
jo
idivb
cld
je
nop
mov
sbb
inc
and
pusha
int
mov
lahf
pushf
test
mov
cmpb
jmp
push
jp
adc
popf
inc
sbb
pop
sbb
mov
xchg
fwait
mov
sbb
idiv
out
add
adc
and
xor
gs
arpl
mov
jno
outsb
mov
mov
test
or
negl
mov
movsb
mov
mov
adc
dec
mov
pop
out
mov
movsb
xchg
ficoml
mov
mov
dec
and
push
out
stos
out
pusha
lret
pop
cld
inc
cld
inc
fmull
notb
enter
ja
ja
ja
ja
ja
repnz
mov
out
in
add
and
mov
mov
mov
xor
sbb
push
push
dec
inc
popa
loopne
dec
xchg
fbstp
push
inc
pop
dec
addr16
out
or
cmpl
xor
inc
push
divb
fsubrs
lea
lea
dec
dec
dec
dec
dec
push
dec
push
dec
pop
mov
ja
ja
ja
jns
mov
cmp
cmp
popf
sub
jp
jp
mov
add
sti
hlt
sti
push
dec
test
clc
popf
loop
adc
pop
add
mov
or
mov
sbb
and
cmpsb
sub
dec
xor
test
jp
jo
and
pop
mov
rclb
push
push
pop
outsb
addl
push
gs
gs
jnp
or
dec
jg
lock
cltd
hlt
call
sti
pop
add
bound
ja
stos
pop
mov
cmpsb
and
push
dec
repnz
testb
decb
mov
lods
xor
cmpsb
adc
mov
cmp
pop
cld
dec
rcll
sbb
lods
push
and
pop
hlt
mov
mov
xchg
cli
xchg
cld
lcall
stos
dec
scas
inc
mov
and
dec
mov
lret
ja
ja
ja
ja
ja
ja
ja
mov
idivb
xor
popf
add
push
sbb
sbb
es
xor
ds
dec
sbb
push
or
add
outsb
bound
push
jp
ds
bound
xchg
jle
fistpl
scas
and
xchg
mov
movsl
mov
ficompl
loop,pt
test
out
arpl
push
in
cli
jo
addr16
ja
repnz
adc
xor
cld
push
enter
sub
xor
ja
ja
ja
ja
ja
repnz
pop
jp
jp
jp
jp
cmp
jbe
jp
mov
lods
xchg
mov
mov
pop
xor
push
sbb
mov
bound
mov
push
inc
outsb
dec
jb
adc
push
jo
test
mov
mov
xchg
add
sahf
bound
scas
push
aas
add
sbb
lea
inc
lret
cld
sar
cld
fdivrp
loop
out
ljmp
dec
ret
push
push
jp
mov
adc
or
dec
mov
cmpb
icebp
clc
xor
movsb
push
mov
nop
das
mov
inc
mov
push
jb
adc
adc
adc
in
adc
stos
std
adc
ljmp
out
inc
mov
push
xchg
bound
cmp
jae
mov
inc
ja
stos
dec
mov
xchg
cs
outsb
xor
popf
jbe
jp
lcall
sbb
pushf
xchg
sbb
mov
sbb
lcall
gs
shlb
fisubl
gs
out
ljmp
gs
gs
add
or
cmp
sbb
xchg
pop
jp
cwtl
repnz
hlt
cltd
negb
sahf
lret
out
std
andb
insb
adc
outsb
adc
adc
arpl
mov
pop
adc
mov
jp
cmp
pop
lcall
clc
push
xchg
adc
loop
js
ja
mov
movsl
add
bound
jbe
mov
and
lds
dec
jbe
movsl
push
pop
sub
ja
ja
ja
mov
or
jbe
xchg
cmpb
sbb
pushf
xchg
adc
cmpsb
jp
jp
sbb
mov
gs
data16
mov
loop
sbb
repnz
add
push
sbb
sbb
aam
jp
xor
arpl
es
push
push
arpl
cld
bound
jp
jp
jp
jp
aaa
xchg
mov
scas
andb
mov
outsl
js
cwtl
popa
lcall
jno
je
lret
add
cld
mov
int
inc
xchg
jno
jo
repnz
popf
loop
out
push
bnd
jo
rclb
popf
inc
adc
mov
pop
jp
jp
jp
cmp
popf
outsb
sbb
jp
lcall
push
bound
jp
jp
jp
jp
sbb
data16
mov
jo
ja
ja
ja
mov
out
ljmp
dec
cli
dec
decb
dec
or
inc
adc
cld
sbb
push
add
es
jno
jo
push
negb
inc
sbb
push
sbb
pop
sbb
push
outsb
pusha
push
pusha
lcall
lods
mov
add
add
xor
mov
sub
data16
mov
or
dec
rorl
dec
sbb
pop
cmp
cmpsb
pop
mov
gs
or
adc
push
cmp
jmp
sub
mov
mov
inc
in
lock
movsb
mov
stos
lahf
mulb
pop
and
in
xchg
mov
adc
mov
addb
cmp
adc
in
dec
movsb
cmp
push
dec
lret
jb
push
mov
imul
int3
or
push
dec
jp
pop
js
mov
js
repnz
lods
dec
mov
addr16
out
mov
stos
fstpt
out
mov
sbb
xor
adc
xor
in
hlt
push
and
sub
and
movsb
mov
int3
xor
jl
xchg
in
outsb
clc
push
cmp
xchg
mov
lea
data16
mov
mov
ja
ja
clc
mov
mov
inc
xor
pop
push
mov
hlt
push
add
and
out
insb
cld
inc
cld
push
int3
push
inc
mov
cli
mov
movsl
cltd
ret
lods
mov
push
xor
gs
bound
or
jp
jp
aaa
repnz
filds
stos
repnz
in
fdivp
arpl
jbe
mov
mov
pusha
aam
cmp
data16
mov
xor
hlt
rcr
inc
dec
hlt
stos
ret
jmp
int3
stc
jno
jo
inc
sbb
ret
mov
pop
mov
imul
test
sbb
shlb
mov
rcrl
bswap
push
mov
xlat
jmp
add
push
sbb
jno
jo
out
sbb
ja
mov
xabort
or
dec
xor
mov
adc
cld
lcall
mov
stos
or
test
add
lret
outsb
fdivs
xor
in
sbb
insb
or
jo
dec
push
cmp
push
sub
mov
xor
je
stc
es
or
jg
test
mov
cld
mov
lea
loopne
insb
out
ja
ja
out
lods
adc
cmp
stc
mov
cmp
cld
popa
cld
push
jge
test
mov
xor
scas
xchg
bound
cmpb
es
cld
movsb
adc
fdivr
add
add
or
int
sub
dec
aaa
and
gs
gs
gs
jnp
test
mov
int
aam
or
pop
data16
pop
xchg
push
enter
cltd
sbb
hlt
add
push
gs
bound
divb
js
jg
lock
sub
mov
add
and
cld
mov
jge
mov
mov
xor
xchg
shrl
sbb
fwait
add
pushf
adc
pop
inc
xchg
xchg
cmpsl
mov
push
mov
ljmp
into
inc
leave
ljmp
jo
addr16
cmp
int3
push
int3
mov
pop
mov
mov
adc
iret
ficoms
jp
jp
jp
jp
jp
daa
test
test
lock
inc
test
in
ja
ja
ja
ja
repnz
jp
jp
jp
jp
stos
mov
push
outsl
xchg
fnsave
xchg
popf
lea
jbe
jl
adc
aad
pop
negl
push
cmp
mov
or
dec
dec
jbe
fstpl
jo
jmp
cmp
sub
mov
jo
mov
ds
sahf
scas
fxch
xchg
aas
popa
cwtd
scas
lock
aas
hlt
pop
xchg
or
mov
xlat
mov
or
sbb
sub
stos
popf
push
adc
outsb
outsb
dec
je
jge
or
fstl
stc
bound
adc
cmpsb
xchg
fnstsw
cmpsb
mov
xor
adc
cmpsb
cwtl
mov
mov
int3
pop
or
dec
pop
or
sarb
inc
pop
push
nop
mov
add
inc
int
push
or
mov
mov
les
sub
pop
add
inc
mov
xchg
lock
arpl
ss
testl
add
dec
leave
fdivrs
addb
lea
lcall
int3
cli
lea
or
or
sub
pop
push
pop
jb
sbb
push
sub
cwtl
mov
add
adc
mov
pop
mov
cmc
mov
data16
les
jp
daa
xor
inc
in
iret
repnz
push
mov
mov
mov
mov
mov
test
cmp
outsb
lret
mov
add
push
imul
xchg
cld
add
outsb
ret
mov
dec
push
gs
scas
xchg
cmp
fwait
add
pop
inc
je
pusha
jmp
add
xchg
jp
loopne
mov
nop
sub
dec
leave
mov
xor
clc
lahf
jp
outsb
rcr
adc
movsl
out
dec
fbld
push
mov
adc
cs
or
js
sbb
sbb
shll
mulb
cli
xor
inc
cmp
push
inc
mov
lods
js
jmp
dec
and
push
jl
repz
js
iret
jb
sub
out
in
iret
jo
mov
mov
inc
add
ljmp
cmpsb
xchg
inc
inc
cli
push
jno
jo
aam
popf
insl
sbb
mov
movsl
mov
int
add
cld
cmp
inc
inc
in
dec
insb
cld
pop
lcall
rcrb
mov
cmp
jp
stos
mov
add
dec
mov
mov
mov
dec
cwtl
mov
sbb
fwait
das
adc
or
enter
or
xchg
mov
pop
das
bnd
lcall
adc
lock
ret
mov
addb
adc
and
fildl
cld
or
inc
ds
shlb
aam
cs
scas
mov
jbe
mov
jmp
push
lea
jae
in
movsl
push
lea
jl
addb
stos
test
iret
int3
inc
inc
mov
add
and
fisubl
push
push
mov
mov
or
jecxz
cld
int3
add
in
scas
stos
inc
int3
push
jne
sbb
and
lods
xor
sar
imul
push
xor
popf
mov
adc
and
pop
xchg
insl
jp
adc
test
lds
mov
ror
ja
ja
ja
ja
lods
add
add
sbb
push
hlt
popf
sub
lret
ret
push
cwtl
popf
sbb
sub
data16
pop
lcall
jmp
clc
sub
pop
sub
add
jne
add
push
ret
mov
mov
shlb
adc
cmp
or
jle
push
js
xchg
jbe
imulb
xor
xchg
mov
lcallw
jns
int
fiadds
pop
adcb
daa
and
jae
cwtl
mov
lods
mov
pusha
mov
mov
xchg
enter
leave
mov
dec
add
movsb
scas
and
in
addr16
inc
mov
push
dec
scas
dec
cmp
leave
mov
stos
adc
lock
mov
push
adc
ret
jbe
jp
sbb
movsl
xor
cmp
inc
add
test
pop
and
loop
lock
and
mov
xchg
or
mov
mov
or
sub
cmp
push
jp
cwtl
inc
sbb
mov
push
pusha
push
fsts
mov
adc
or
or
and
xor
xlat
or
rorl
out
or
faddl
sti
loop
xor
lods
sbb
jmp
push
jbe
imul
or
cmc
pop
and
push
rcll
leave
cs
mov
xchg
dec
pop
out
dec
jno
jo
fildl
rclb
test
repnz
jbe
push
jo
jne
pusha
xor
leave
xchg
pop
aam
push
scas
adc
xchg
testb
leave
or
sbbb
dec
popf
pop
add
mov
add
inc
aad
fsubl
cmp
mov
lcall
or
lret
fdivrl
rorb
sbb
jmp
icebp
add
bound
sub
mov
mov
or
rolb
loopne
aas
xchg
int3
loop
push
imul
faddp
lcall
clc
xchg
add
mov
lahf
orb
jge
mov
popf
pop
adc
out
nop
repnz
jbe
mov
hlt
arpl
mov
stos
push
add
and
imul
cmp
lods
xchg
ficomps
notb
push
outsb
enter
ds
mov
aaa
aad
push
sub
pop
mov
push
loop
push
jecxz
sbb
pop
mov
mov
jno
sub
adc
push
adc
push
jae
jmp
addr16
adc
pop
adc
push
repz
xchg
pop
or
out
push
adc
xchg
jl
pop
dec
hlt
pusha
adc
test
aad
jecxz
pop
rolb
inc
clc
sub
inc
leave
sbb
sub
sbb
lods
mov
outsb
mov
or
or
call
dec
jo
fdivrl
push
jle
xor
add
add
xor
js
aam
dec
rorl
aad
fbstp
enter
sub
add
bound
cmp
enter
or
sbb
push
cmpb
adc
dec
mov
jg
xchg
mov
scas
arpl
pop
gs
movsb
xchg
jp
stos
ss
mov
mov
mov
and
nop
cmp
jne
inc
lods
mov
xor
nop
cmp
xchg
popf
mov
dec
cmp
or
mov
inc
int3
clc
outsl
mov
and
xor
inc
sub
inc
inc
out
jns
test
enter
push
dec
loop
push
push
mov
inc
or
inc
fdivrs
sub
inc
add
sbb
inc
scas
dec
mov
jl
sbb
mov
iret
adc
lds
jmp
outsl
cwtl
fcom
cmp
sub
xchg
jmp
mov
outsl
jge
inc
and
sub
shll
stc
push
push
cmp
xchg
fnclex
pop
push
jle
mov
cmpsb
stos
mov
jo
cmp
cmp
and
pop
cld
es
dec
lcall
jecxz
cld
cmp
jae
xchg
push
data16
add
jg
subl
cmp
pushf
inc
pushf
pop
sbb
out
rolb
stos
xchg
mull
popf
mov
mov
adc
je,pn
jp
xor
bound
fs
loop
lds
mov
gs
arpl
push
and
jp
xor
xchg
cwtl
hlt
fmul
out
or
js
cld
arpl
push
ficoml
cmp
clc
std
mov
addr16
adc
xchg
in
es
mov
cli
mov
idivb
pushf
mov
test
mov
adc
rcl
mov
into
sahf
scas
jbe
in
add
test
jl
repz
inc
leave
addr16
dec
xchg
cwtl
jp
mov
push
negb
adc
cld
sub
inc
pop
ret
mov
clc
xchg
inc
cs
mov
dec
out
into
xchg
adc
clc
push
pop
pop
sub
adc
in
xor
test
and
xchg
mov
cs
insl
xor
lods
nop
adc
nop
movsb
inc
xchg
int
add
ror
add
repz
sub
cwtl
inc
jle
push
jg
mov
rcrb
mov
pusha
fwait
pop
adc
xor
sbb
mov
and
mov
out
sbb
pop
es
pusha
jp
cld
jl
cli
inc
sbb
hlt
adc
clc
and
ja
popf
leave
or
adc
fiadds
cli
cmp
repnz
out
jmp
out
fcomi
movsl
sti
aas
and
ja
loop
inc
jp
aaa
sub
outsl
sbb
popf
adc
mov
repz
mov
dec
mov
mov
jb
cmp
mov
sbb
adc
mov
lret
shrb
mov
daa
subb
push
mov
fsubs
inc
fiadds
sub
xchg
inc
into
mov
pushf
jo
xchg
mov
outsb
sahf
lret
sbb
xchg
ltr
jnp
push
sbb
jo
jbe
mov
out
pop
inc
mov
pop
repnz
xor
mov
xbegin
aaa
mov
mov
stc
adc
jl
lock
xchg
lock
push
or
stos
or
jae
mov
push
mov
xchg
adc
lods
xchg
cld
leave
mov
inc
in
xor
jl
popf
push
cwtl
pop
jp
lock
iret
repnz
jp
ja
in
add
push
and
sub
pop
or
clc
push
loopne
push
cmpb
lods
scas
lock
xchg
loop
adc
dec
into
mov
xchg
test
push
int3
inc
jmp
and
imul
or
fimuls
aam
repnz
addl
leave
pop
adc
or
jbe
scas
mov
std
mov
out
and
pop
add
dec
insb
enter
mov
jno
movsl
mov
add
outsb
xor
jbe
cmp
int3
adc
pop
test
push
inc
or
aad
mov
cmp
add
cmp
push
inc
addb
ret
inc
ss
inc
mov
xchg
inc
in
hlt
add
hlt
movsl
pop
int
add
mov
adc
pop
and
scas
test
mov
call
sbb
cli
bound
inc
repz
add
es
xlat
and
add
cwtl
and
lcall
mov
cmp
lret
inc
pop
dec
adc
mov
dec
adcl
xchg
push
inc
loopne
and
imul
push
mov
add
inc
jl
pusha
inc
dec
in
mov
pop
dec
mov
add
mov
xchg
push
ss
xor
xchg
and
clc
bound
jo
dec
fmull
xorl
mov
and
sbb
ret
rcrl
and
sub
sbb
mov
test
stos
push
jbe
enter
mov
sarl
xchg
in
xchg
mov
dec
xchg
ret
mov
dec
ja
stos
call
loop
subl
lcall
adc
rclb
jo
dec
fstpl
lcall
mov
add
add
mov
mov
mov
fstpt
sub
pushf
fsubs
mov
idivl
fcompl
ret
loop
push
shl
mov
jl
mov
dec
insl
xorl
xchg
test
inc
or
mov
faddl
addr16
add
cs
xor
orb
outsb
pop
ja
mul
mov
aas
mov
xlat
divb
mov
xor
movsb
mov
adc
inc
adc
in
lea
adcl
leave
repnz
out
sub
cmpl
add
ret
inc
andb
adc
push
sbb
pop
lret
mov
mov
fdiv
xchg
shrb
pop
in
pusha
leave
in
test
dec
sbb
outsb
sbb
lea
movsl
clc
add
mov
mov
cld
nop
xorl
jb
adc
cmp
dec
mov
sbb
fisubl
xorl
mov
push
fwait
pop
fwait
inc
sbb
jg
mov
sbb
xchg
fiaddl
mov
mov
cs
mov
popw
out
sahf
shl
adc
dec
cmp
lcall
inc
xor
loopne
inc
push
jne
cmpsl
into
mov
and
cwtl
add
xorb
repnz
mov
rol
sub
cmp
mov
push
mov
cmpsb
mov
adc
arpl
pop
adc
jp
push
mov
fcoms
in
mov
mov
into
movsl
cltd
or
test
lahf
sbb
nop
subb
mov
xor
and
aam
cmc
nop
cmp
lods
jl
xchg
cld
mov
sub
xchg
dec
inc
sub
xor
jbe
lcall
push
fdivrs
mov
in
sub
inc
and
jl
stos
dec
xchg
movsb
add
jbe
sahf
dec
jbe
out
mov
scas
jmp
jbe
push
or
sub
stos
mov
add
sub
cwtl
repnz
push
push
loop
sbb
adc
sbb
enter
xor
imul
imul
and
cmp
cmp
jp
js
adc
loop
jge
repnz
ljmp
lock
cs
je
into
push
fmul
lea
xor
sbb
into
popf
push
add
int3
inc
jmp
and
into
ss
add
arpl
punpckldq
call
leave
or
aas
arpl
test
ds
sbb
data16
lahf
scas
movsl
outsb
mov
dec
add
insb
push
decb
mov
xor
xlat
dec
ror
test
inc
sahf
or
jg
cmpsl
mov
out
loop
into
inc
out
lret
inc
ret
pmullw
test
jge
and
mov
mov
adc
loopne
and
mov
pusha
nop
sub
mov
fisubl
dec
xchg
addl
faddp
into
imulb
popa
jecxz
cs
jmp
icebp
adc
add
jecxz
scas
insb
xor
add
push
push
mov
lcall
rorl
push
inc
mov
adc
xor
fimull
xor
nop
cld
cs
mov
mov
adc
pop
mov
mov
nop
or
out
mov
jecxz
push
enter
mov
mov
lock
cmp
orl
adc
and
pop
ss
and
dec
mov
mov
stos
fimull
mov
cld
lods
xchg
cli
fs
sbb
out
fdiv
inc
orb
daa
out
cmp
push
mov
addr16
imul
adc
lods
xchg
adc
mov
dec
adc
in
aas
mov
test
test
mov
jno
dec
push
cmpsb
repnz
loope
in
clc
stc
cli
push
enter
movsl
out
jg
jmp
icebp
inc
idivl
shlb
push
jp
adc
sbb
shl
adc
cmp
nop
adc
xlat
adc
sub
mov
pop
and
js
stos
lods
mov
pop
sub
leave
xor
loop
insl
addl
addr16
repnz
jbe
repnz
or
das
lret
lea
addl
fcompl
pop
add
push
clc
inc
dec
fs
jbe
jae
adc
sbb
sbb
nop
adcl
ds
cmp
pop
mov
mov
adc
xchg
rolb
ss
and
sahf
pushl
loop
ss
xchg
scas
and
push
jae
add
mov
repnz
leave
pusha
inc
data16
push
mov
adc
adc
mov
jae
jns
test
or
dec
cmp
hlt
mov
divl
inc
pop
fnstsw
xor
inc
mov
test
in
add
in
mov
shrl
push
dec
sbb
outsl
lods
arpl
add
push
ljmp
hlt
rcr
mov
mov
test
pushf
jp
jo
inc
lods
in
adc
or
mov
mov
cmpb
mov
je
lods
xor
ss
movsb
test
xor
add
das
xchg
mov
sbbb
and
mov
push
xchg
leave
pop
inc
jo
push
mov
int
gs
or
and
push
cld
xor
cmp
aas
int
xor
bnd
out
mov
in
mov
adc
pop
push
cmp
adc
hlt
adc
fucomi
push
inc
addr16
and
movsb
sub
xor
xlat
mov
sub
shrl
sbb
adc
shrl
lret
xor
iret
cs
inc
mov
dec
xlat
push
fistpl
cld
mov
aam
xchg
out
int
testl
faddl
inc
les
jo
inc
inc
sbb
dec
and
cmp
shrb
jbe
mov
aas
fldl
pop
dec
jno
jo
jge
sub
bnd
mov
movsl
in
xlat
addr16
mov
push
xor
int3
dec
aam
jmp
push
xor
std
stos
rclb
push
enter
cmp
xlat
leave
pop
mov
adc
sub
lods
movsb
and
inc
fwait
dec
add
pop
nop
mov
adc
montmul
cmpsb
xorl
fwait
mov
enter
xor
add
push
mov
cld
lret
lea
leave
adc
loopne
lcall
pop
cmp
fistps
lcall
clc
push
js
test
xor
xor
aam
and
loopne
call
test
repz
or
sbbl
lahf
adc
cmc
test
jmp
outsb
ds
dec
sub
fnstsw
addr16
insl
or
sub
xor
pusha
ds
mov
outsb
mov
jg
movsl
ret
vpandn
movsl
repnz
sbb
pushf
repnz
mov
mov
add
mov
das
and
mov
mov
std
add
push
xchg
xchg
jb
push
or
xchg
mov
add
xchg
push
lea
int
pop
inc
jbe
fsubs
and
addb
sbb
mov
scas
adc
jl
push
jp
mov
cmpsb
fisubl
dec
sbb
push
dec
inc
sbb
sbb
icebp
add
movsb
fimuls
dec
insl
fildll
jmp
inc
inc
std
out
insb
push
xorl
loope
ficoms
sub
orb
sbb
xchg
stos
scas
out
pop
xorl
call
rclb
mov
mov
add
daa
xchg
inc
aam
mov
repnz
lcall
cmp
hlt
lods
inc
dec
and
pop
test
pop
lret
loopne
adc
into
mov
pushf
fdivrs
mov
fldl
jb
nop
mov
sahf
inc
jbe
add
mov
dec
imul
xor
addr16
mov
insb
loope
mov
adc
enter
sbb
fdivl
lods
fwait
jns
jg
jle
jo
xor
jo
mov
add
push
insb
mov
push
movsl
push
add
inc
bound
sbb
cmp
pop
test
outsb
push
mov
push
mov
adc
xchg
test
aam
adc
pop
inc
sbb
fsubp
cmp
jl
or
sahf
lods
mov
push
pop
fstps
call
ljmp
js
and
cmc
xor
or
sbb
scas
fsubrp
xor
dec
aas
mov
das
fmull
adc
lret
int
rolb
test
add
adc
popf
inc
nop
popl
out
xor
xchg
mov
pop
push
pop
rcr
mov
lods
out
fsubrp
xchg
scas
fcompl
adc
rcrb
daa
out
into
movl
pop
movl
fdiv
lcall
inc
mov
fucomip
or
fiadds
cs
adc
xchg
bound
mov
mov
mov
popl
pushfw
cmp
inc
mov
rolb
mov
sub
xor
adc
adc
ss
ret
inc
cmp
push
push
pop
pop
out
mov
stos
sarb
repnz
or
hlt
ds
mov
es
test
out
jmp
xor
lods
mov
pop
xchg
mov
xor
or
and
dec
jne
inc
std
and
xor
or
lcall
flds
es
loopne
subb
lods
sahf
into
xor
rorb
into
or
xchg
and
xchg
pushaw
stos
push
test
jbe
push
sar
fwait
cmp
push
or
pop
add
sbbl
cmp
add
mov
aam
loop
xor
rorb
in
add
setge
push
push
sbb
add
and
push
ds
jmp
mov
int3
fmull
imul
mov
cmp
push
sub
pop
inc
out
xchg
mov
stos
ljmp
jbe
mov
les
mov
sub
inc
dec
lea
clc
mov
pop
cs
jo
andb
jl
loop
xchg
int3
cmpsb
sbbb
ret
mov
xchg
ljmp
mov
jnp
adc
add
into
cs
mov
sbb
pop
fisubrs
push
out
and
repz
inc
dec
imul
and
xor
ds
mov
mov
fiadds
bound
pushf
push
push
iret
cmpsb
fwait
xchg
fwait
popf
adc
or
mov
out
adc
mov
lods
scas
daa
add
push
jb
xor
cs
cmp
stos
mov
mov
mov
adc
dec
cltd
mov
push
add
cli
xchg
push
or
jae
add
scas
pop
mov
in
cmp
xchg
push
add
push
mov
sti
cwtl
flds
test
pop
imul
nop
sahf
cmpsb
ss
dec
fiadds
push
enter
add
cmp
bound
jle
sbb
fdivrs
lea
mov
or
mov
std
orl
ret
into
mov
add
sub
addr16
fnstenv
sahf
data16
ret
pop
cld
fs
cmpb
and
dec
repnz
or
jecxz
push
push
arpl
gs
cld
add
push
movsl
mov
xorb
mov
in
lea
dec
leave
add
repnz
hlt
push
fstl
dec
or
pop
mov
xorb
outsb
div
sbb
xchg
in
add
fcmovbe
or
sbb
inc
notb
std
mov
mov
push
lret
idivl
jbe
scas
fcmovu
js
repnz
xchg
aad
dec
frstor
sbb
int3
xchg
into
xchg
pop
rcr
mov
mov
std
popf
fdivs
int3
cs
pushf
jo
jg
mov
or
pusha
clc
aaa
cli
inc
pop
add
stos
mov
push
movsl
mov
adc
insb
in
inc
enter
call
mov
dec
sbb
enter
outsb
pop
jb
mov
add
sbb
ret
es
mov
mov
push
testb
sbb
jns
xchg
mov
mov
mov
adc
add
outsb
mov
inc
pop
sub
mov
jmp
lret
test
push
pop
xchg
mov
call
ucomiss
out
jae
addr16
js
sbb
mov
mov
cmpl
adc
mov
aam
xchg
jge
enter
and
jg
je
test
popw
pop
and
jp
movsl
pop
pop
push
insl
scas
and
xchg
and
lcall
mov
in
cld
xchg
add
shrb
jp
jp
mov
shrl
inc
nop
lods
fiaddl
pusha
jmp
mov
dec
imul
mov
neg
punpcklbw
lea
cmpb
pushf
inc
pushf
pop
adc
mov
scas
xlat
xchg
cmp
xorb
jl
inc
pop
shll
inc
out
and
stos
mov
dec
or
iret
add
jbe
sbb
cmp
xchg
faddl
add
push
movsl
ss
mov
add
xor
mov
mov
hlt
jmp
cmp
clc
cmp
repz
xor
aas
mov
je
outsb
mov
aas
pop
and
add
adc
out
lcall
push
inc
mov
mov
cmpsb
mov
scas
xchg
outsb
mov
iret
inc
sbb
test
add
push
in
lock
int3
fsts
fs
insb
xchg
xchg
pop
xchg
sbb
mov
add
adc
ljmp
mov
add
adc
dec
cwtl
mulb
enter
jbe
mov
sbb
sub
gs
xor
mov
cmp
xchg
aas
sub
inc
lods
pusha
mov
pop
mov
mov
cmp
lods
pop
adcb
push
add
idiv
movsb
xchg
sbb
nop
roll
shr
jo
imulb
inc
nop
mov
enter
and
rolb
daa
sub
scas
xorl
subb
rcrb
mov
cmpb
inc
cmpsb
pop
push
out
mov
sub
pop
jg
repnz
out
fsubs
outsl
fdivrl
add
mov
inc
or
aam
clc
xor
lock
fsubs
sbbb
sahf
cli
fcoms
push
push
adc
mov
dec
movsl
mov
rorb
pop
subb
insb
movsl
ljmp
mov
outsb
movsb
faddl
sbb
bound
push
xor
test
xor
mov
loop
out
push
outsb
pop
jb
jbe
sbb
nop
mov
add
imul
inc
push
and
leave
pusha
arpl
jb
xorl
sub
loopne
in
jmp
stos
std
dec
js
sbb
mov
cld
ret
jl
daa
xor
jp
inc
cwtl
push
je
and
into
out
iret
outsb
push
loope
mov
adc
sbb
nop
mov
xlat
add
jo
mov
mov
mov
pushf
movsl
stos
add
xorb
adc
movsw
imul
fmul
inc
push
out
in
jp
adc
xchg
or
into
sbb
cld
push
xchg
xor
push
inc
fbld
sbb
xchg
repnz
out
inc
push
std
push
movsb
in
mov
jl
xchg
je
xchg
pop
shlb
mov
xchg
cmp
mov
aas
xchg
mov
rolb
loop
add
sbb
les
sub
mov
les
sbb
lock
subb
in
cld
popf
xchg
push
ret
fisubl
xchg
addl
dec
pop
ds
mov
fldl2t
inc
xor
int3
xchg
and
xchg
dec
cmp
fs
push
jmp
mov
push
sbb
or
mov
das
dec
inc
inc
push
jnp
cwtl
push
sub
lock
ss
jl
stos
xchg
nop
lret
adc
outsl
sub
notb
out
mov
xor
pushf
mov
and
or
rorl
cmp
xchg
dec
add
cmc
ret
jnp
sub
adc
cmp
mov
sbb
and
and
pop
pop
inc
mov
push
lods
movl
inc
repnz
xchg
shlb
in
movsl
cmp
lods
insb
mov
push
xorb
mov
clc
xchg
cli
cwtl
cld
pushf
cld
mov
fdivr
insb
sahf
push
xchg
int
aam
push
push
es
out
mov
pop
gs
les
xor
lock
js
mov
pusha
nop
nop
mov
pop
loopne
repnz
push
xchg
add
inc
imulb
xchg
inc
subb
push
inc
out
jo
fadd
xchg
hlt
jp
popa
pop
push
lods
cmp
mov
call
inc
jle
push
subb
test
or
repnz
pop
mov
movsl
sbb
mov
cld
cmpsb
fwait
icebp
mov
add
jbe
dec
and
bound
sbb
pushf
sub
scas
stos
lock
push
aad
mov
xor
jecxz
push
in
jo
jne
movsb
repnz
dec
jbe
mov
inc
fwait
inc
mov
pop
fistpll
pop
fistps
call
push
mov
cmc
pop
dec
sbb
adc
nop
fiadds
cli
mov
adc
lods
ds
xorb
sbb
mov
jp
push
add
addb
inc
hlt
push
mov
les
push
mov
imul
out
jno
push
and
mov
outsb
jge
xchg
cmp
fadds
outsb
push
xchg
std
add
rcll
mov
or
pop
jo
mov
and
and
push
dec
sbb
pop
stos
loopne
or
push
cmc
pop
xchg
mov
mulb
aam
loop
dec
sbb
lods
mov
lds
add
push
addr16
pop
mov
mov
and
mov
in
mov
negl
shll
data16
jg
fnsave
adc
in
out
add
fsubs
mov
mov
cmp
mov
jo
mov
mov
imul
or
imulb
push
int
test
mov
jmp
push
add
addr16
outsl
imul
inc
mov
test
data16
push
xor
lds
stos
sti
mov
test
add
push
out
outsl
push
ja
into
sub
xrelease
mov
lds
ret
cmp
mov
push
mov
mov
cmp
test
adc
fmulp
pop
inc
stos
aam
xchg
sbbb
adc
nop
xor
xchg
mov
sub
push
sub
cmpsb
mov
mov
js
fcmovne
jmp
lods
ficoml
mov
leave
adc
mov
inc
int3
mov
aas
jle
in
mov
push
or
inc
cwtl
aam
int3
mov
fisubs
scas
leave
cwtl
add
aaa
outsb
cmpsb
jbe
movsl
pop
xor
dec
sub
pushf
dec
adc
cmp
leave
ficomps
cmp
loop
cli
cli
xchg
push
rcr
mov
loope
mov
xchg
pusha
pusha
nop
stos
push
loopne
addr16
mov
jb
adc
test
rolb
mov
aas
loop
mov
xchg
ss
negb
xchg
fwait
stos
mov
mov
mov
out
mov
enter
ja
mov
clc
add
imul
push
pop
inc
fsubrl
mov
in
lods
fwait
xchg
loope
in
adc
mov
adc
pop
repnz
popf
xchg
fistpl
ja
clc
add
neg
test
push
arpl
push
fdivs
out
clc
lock
fptan
add
aad
push
sub
push
dec
pusha
pop
inc
outsb
jbe
mov
lods
inc
inc
pop
pop
addl
or
mov
push
inc
pushf
jne
mov
pop
dec
aas
mov
loop
clc
ss
movsl
mov
sub
mov
mov
test
push
ret
xor
mov
ret
clc
adc
subl
xchg
jp
jp
mov
lret
add
lods
mov
mov
sbb
loopne
in
add
imul
push
fsubrl
add
leave
rorb
shrb
mov
call
int3
std
outsb
push
xor
jl
sbb
lcall
bsf
mov
adc
js
fcom
or
pop
mov
insl
mov
dec
xchg
mov
mov
data16
dec
into
lret
ds
int
sbb
push
pop
jb
sub
adc
cmp
mov
mov
pusha
mov
mov
pop
jb
ja
test
inc
pop
test
jp
out
cs
add
out
std
push
daa
cld
xor
xor
push
shl
outsb
push
cmp
int3
jnp,pt
or
dec
mov
lcall
scas
jp
jp
jp
adc
popf
ret
sbb
and
pop
fidivs
mov
out
mov
jp
sbb
fmull
lea
inc
sbb
sub
inc
mov
ja
mov
push
nop
inc
subb
push
movb
je
sbb
je
adc
out
js
sbb
js
jno
pop
cmc
xchg
jbe
out
je
pop
pusha
je
arpl
pop
jb
roll
idivl
jne
xor
int3
gs
add
test
and
pusha
pop
jb
test
push
ss
xor
int3
pusha
push
xor
sbb
push
jge
js
ss
leave
jp
imul
xor
adc
ss
jge
pusha
add
fisubrl
dec
fcoms
hlt
xor
stc
repnz
imul
push
sub
stos
xchg
cld
stc
nop
fisttpll
mov
lods
bound
mov
xor
mov
shlb
push
pop
mov
fdivr
dec
inc
fsubl
sub
or
imul
dec
cmpsb
inc
stos
std
adc
pop
ss
xor
dec
xor
xchg
sbb
lcall
sbb
ss
aas
mov
add
pop
inc
shrb
scas
lahf
movsl
mov
enter
mov
adc
add
out
ja
push
cld
xchg
adc
pop
dec
sbb
lcall
mov
push
divb
stos
insl
pop
pop
xchg
std
add
roll
mov
and
or
out
mov
cs
cmp
cs
addb
jae
xchg
dec
aas
fs
sbb
scas
cltd
addr16
mov
sbb
movsb
add
out
add
mov
mov
into
sbb
cmp
mov
push
and
mov
imul
push
into
mov
hlt
add
and
fstpt
push
test
push
xorb
inc
push
push
adc
fisubl
xchg
mov
push
add
sbb
adc
fldenv
lock
pop
push
push
sub
enter
add
roll
add
lods
inc
jecxz
cmp
rorb
mov
adc
outsb
cwtl
xorb
repnz
sub
xor
xchg
push
mulb
mov
cmp
xor
ds
pop
mov
int
enter
adc
mov
sub
pop
push
mov
mov
cmpsl
cmp
addb
mov
negb
mov
mov
mov
mov
dec
int
xchg
lcall
dec
jg
jecxz
or
mov
lcall
flds
push
fwait
sbb
push
mov
cmp
xor
dec
leave
iret
and
in
add
mov
mov
mov
es
push
js
push
inc
mov
jg
add
cs
pop
jb
jbe
sbb
lcall
adc
inc
adc
in
mov
ljmp
mov
xchg
ficompl
push
add
and
mov
stos
mov
in
and
jp
adc
clc
rcll
cmp
shll
cmp
jge
in
mov
test
loopne
jl
ret
adc
push
xor
sbb
push
stos
pusha
fcomip
and
cli
sbb
xchg
ja
cs
dec
or
out
adc
dec
test
xchg
test
xor
dec
int3
inc
add
outsl
gs
aam
fwait
int
testb
test
mov
pop
sub
cs
into
data16
outsl
dec
push
mov
leave
sbb
or
cmp
hlt
mov
pop
push
lds
xchg
and
mov
leave
pop
inc
movsb
mov
dec
adc
jb
mov
movsl
mov
sbb
hlt
mov
outsb
xchg
push
movsl
movsb
push
stos
xor
mov
fdiv
ret
dec
pop
ficoml
pop
stos
nop
xchg
xchg
movl
stc
lea
or
sub
cwtl
xchg
cmpsb
jo
popa
mov
cmpsb
sub
lods
mov
pop
clc
sbb
mov
push
push
hlt
into
mov
mov
pop
ret
cmpb
notb
data16
ss
xor
ret
sti
push
mov
pop
push
mov
or
xor
les
sub
stos
cmp
mov
xor
add
cmp
or
jb
lods
dec
into
ret
xchg
mov
inc
cmp
shlb
pushf
sub
into
ss
xlat
pop
test
adc
stos
sub
lcall
add
scas
clc
int
pop
mov
movsl
mov
sbbl
or
repz
insb
lds
mov
mov
mov
mov
dec
xor
sbb
jp
xchg
ss
dec
lea
mov
inc
xor
int3
pop
add
cmp
fdivs
mov
xor
bound
lahf
xchg
repz
dec
int
mov
adc
push
mov
mov
into
push
pop
push
stos
mov
sub
mov
mov
repnz
nop
xor
movsl
sbb
fwait
pop
xchg
dec
ds
cli
mov
daa
es
xchg
mov
mov
outsb
sbb
jbe
movsl
clc
jbe
clc
pusha
fnstsw
ret
int3
and
xor
aam
popf
jne
movsl
mov
mov
sbb
jmp
repnz
sbb
inc
int
inc
mov
and
fcoml
push
mov
mov
call
jae
bound
std
pop
pop
addb
mov
mov
pop
inc
jl
dec
shlb
add
or
lret
xor
mov
push
push
mov
push
lret
sub
mov
mov
dec
repnz
movl
jo
mov
mov
ret
and
cli
clc
pushf
in
add
mov
in
jne
dec
test
inc
hlt
out
leave
dec
inc
dec
adc
and
fisttps
subb
in
sub
fdivl
lcall
or
push
rep
add
add
mov
insb
mov
inc
pop
stos
or
inc
inc
sbb
cld
mov
cmpb
ret
inc
imul
add
mov
dec
jl
out
jp
push
xchg
mov
sbb
adcl
fucomip
jbe
mov
popf
push
js
sbb
inc
xlat
lretw
mov
cwtl
ja
data16
cmp
pushf
xor
data16
ljmp
sbbb
js
or
fcomp
aad
jbe
das
add
push
mov
sub
rcrb
je
mov
cmp
ja
mov
mov
pop
push
adcb
inc
scas
movsb
fstps
clc
cld
out
sub
xchg
hlt
repnz
adc
outsb
mov
daa
sbb
dec
daa
test
fs
rcll
loop
lret
cwtl
adc
pop
dec
fdivrl
cmp
ss
ret
in
lods
sbb
adc
sbb
lret
arpl
imul
jae
mov
adc
push
cmp
insl
xchg
xor
xchg
int3
dec
negb
mov
dec
sub
add
stos
cmp
test
push
mov
stos
mov
dec
add
mov
sbb
xchg
adc
ds
arpl
add
cs
cmp
test
fwait
scas
nop
mov
es
adc
mov
xchg
sbb
push
jge
sbb
xor
mov
sbb
mov
mov
flds
push
outsb
jne
fcomp
mov
aam
repnz
sbb
xchg
in
popa
jo
push
jp
pop
out
pushf
xchg
mov
mov
add
pop
inc
lods
mov
jmp
jbe
fidivrl
cmpsb
xor
cmp
int3
jne
mov
mov
inc
adc
test
xchg
rorb
fadds
bound
imul
or
out
test
cmpsb
xlat
out
and
mov
hlt
cmpsb
dec
mov
ja
mov
lds
shlb
arpl
or
shlb
orl
ss
out
mov
mov
mov
dec
dec
loop
in
add
cs
fmull
sub
rclb
xchg
incb
test
loope
call
adc
mov
or
add
call
or
cld
insl
in
pop
push
xor
fwait
repz
xchg
xor
push
jp
jp
mov
mov
aam
icebp
dec
sbb
adc
mov
fsub
outsb
add
cmp
scas
adc
repnz
mov
push
push
push
int3
lds
dec
divl
movsl
js
ss
mov
mov
into
nop
pop
pop
mov
scas
stos
add
adc
mov
fs
push
jp
jecxz
xchg
adc
lcall
cmp
cmp
jge
xor
pop
insb
shrl
outsb
mov
aas
outsb
dec
mov
into
pusha
int3
sbb
inc
popfw
lret
push
mov
fxam
filds
jmp
and
jp
xor
pop
aam
xor
lcall
outsb
fcomps
jbe
insl
mov
mov
push
loopne
adc
add
xor
enter
adc
fldl
push
fmull
nop
lret
clc
pushfw
xor
pop
ficoml
mov
sub
cmp
sbb
adc
jp
adc
je
loopne
cli
mov
adc
mov
xchg
mov
mov
mov
outsb
rclb
mov
mov
enter
sub
int3
cmpsb
outsb
lods
mov
aas
sbb
stos
jl
loopne,pt
add
adc
adc
and
xchg
inc
push
insl
push
or
aam
repnz
sbb
js
hlt
pusha
test
shll
stos
popa
xchg
jp,pn
xchg
jae
sbb
ja
test
repnz
lods
xchg
mov
enter
or
mov
mov
mov
inc
lock
lods
mov
add
cli
dec
xchg
fs
ds
shlb
jecxz
faddl
push
adc
leave
imul
clc
fmul
filds
inc
inc
bound
lock
je
xchg
shrb
inc
pop
popf
dec
jo
and
movsl
mov
aam
lea
stos
cld
push
int
mov
xchg
xor
scas
adc
xor
sbb
fs
fsubl
add
jbe
fsubs
xchg
in
in
push
xor
outsb
int3
leave
daa
add
mov
mov
xor
fcmove
incb
add
fwait
clc
mov
loop
xor
sub
es
push
push
into
mov
cmp
je
push
pop
fsubs
inc
jmp
ficomps
scas
bound
xor
and
scas
lock
sub
add
lcall
adc
mov
mov
ljmp
cmp
or
push
mov
sub
push
stos
add
repz
outsb
cld
je
nop
xchg
rcl
es
ss
or
dec
in
inc
lods
inc
fcomip
lcall
in
leave
sarb
mov
sarl
popf
mov
mov
dec
enter
push
push
cmp
jnp
fiaddl
or
je
ret
clc
xchg
int3
outsb
enter
rclb
xchg
push
jo
repnz
add
xchg
nopl
adc
xchg
or
mov
pushf
mov
dec
xor
push
ja
movsl
jmp
call
lea
inc
cmp
cmpsb
mov
out
lea
dec
dec
dec
push
into
or
xchg
cs
mov
pop
add
in
mov
jns
mov
jp
in
out
stos
fdivr
lea
cmp
fmull
mov
ret
bound
je
jl
popf
and
xchg
int
push
out
xor
adc
or
pop
out
jo
mov
pushf
sbb
outsb
pop
popa
cmp
inc
mov
je
xor
cld
add
sbb
and
xor
ljmp
xchg
sub
lea
mov
push
cmp
jno
push
adc
repnz
fdivrp
mov
outsb
inc
shll
ret
fdivl
aam
xor
cmc
mov
dec
mov
mov
out
and
pop
push
jbe
int3
mov
pop
pop
dec
addr16
mov
in
add
add
inc
mov
mov
pop
jb
jbe
adc
fmuls
mov
pop
movsb
js
rolb
fldl
loop
int3
sub
jl
push
dec
cld
push
enter
sub
leave
aas
pop
pusha
push
jp
jp
adc
popf
jae
jns
push
stos
xchg
jo
mov
loop
ret
int
xor
stos
or
xor
cmp
jbe,pn
leave
push
inc
in
jp
xchg
movsl
add
mov
xchg
pop
add
mov
mov
cs
xor
out
mov
xor
fildl
or
sub
xchg
cs
mov
stos
rcrb
std
inc
and
mov
mov
inc
cmp
inc
inc
mov
fidivrs
mov
xchg
cli
data16
xchg
or
popf
sub
cmpl
and
mov
loope
movsl
clc
out
pusha
rclb
jo
sbb
add
push
and
mov
loope
add
pop
push
clc
xchg
arpl
shlb
xchg
loope
xchg
push
inc
scas
cmp
xor
fstps
inc
punpckhbw
hlt
jle
lods
jp
mov
adc
mull
jecxz
mov
ss
in
cld
jo
xchg
inc
mov
sub
cmp
orb
aas
loopne
mov
mov
lods
mov
pop
sub
mov
xchg
push
add
inc
mov
or
cld
stos
pop
ljmp
shl
mov
lcall
mov
and
or
jbe
adc
lods
pop
pop
cmp
call
sub
or
xor
xchg
test
fcomip
int
xchg
stc
dec
and
jl
into
xchg
roll
cmp
cld
aad
clc
inc
jle
mov
inc
out
int3
sbbb
aas
sahf
jnp
add
ret
jecxz
insl
push
ret
fbld
imul
xor
pop
pushf
imul
es
fadds
and
sbb
pop
jge
mov
push
mov
insl
mov
xor
ja
xchg
jle
nop
int3
mov
xchg
inc
mov
push
pusha
je
sbb
adc
mov
cwtl
push
inc
xlat
xor
lcallw
or
cs
cmp
xchg
push
addr16
lods
lea
sub
into
ss
sub
sahf
push
add
pop
inc
les
push
in
cli
pushf
dec
cmpb
mov
dec
sbb
mov
and
icebp
int
push
add
outsb
std
xor
xchg
sub
add
lods
inc
sbb
call
daa
dec
aaa
repnz
pusha
cs
js
dec
and
xchg
xor
inc
fmulp
cmc
add
sub
cld
pop
fcomps
add
sub
sub
push
push
jbe
int
pop
rcl
adc
pop
mov
loop
cs
lret
outsb
xchg
pop
push
adc
mov
outsl
mov
or
into
ljmp
xchg
cs
push
ret
test
test
push
cmp
iret
mov
lods
out
pop
jb
push
xor
add
pop
mov
rolb
pop
mov
lret
in
scas
lock
mov
mov
hlt
adc
sbb
ljmp
daa
push
call
cs
adc
std
out
mov
loop
push
cs
pop
or
mov
jns
sbb
pop
mov
xlat
adc
or
xor
ss
call
jbe
hlt
jbe
cmp
lods
ja
sahf
push
ret
sbb
add
mov
or
fs
mov
sbb
sbbl
add
mov
add
push
mov
je
pop
test
add
mov
insl
mov
rolb
mov
jbe
pusha
add
add
sub
fimull
scas
adc
sbb
lcall
adc
movsl
cmp
cmp
addr16
fiadds
push
push
test
lret
add
pop
into
inc
cli
jne
jnp
mov
mov
lock
repnz
fwait
push
mov
sbb
daa
insl
mov
xchg
sbb
sub
test
insb
arpl
adc
ss
aas
mov
xor
jle
dec
fstl
jp
loopne
out
add
int3
push
cmp
mov
enter
sarb
inc
adc
call
clc
movsl
jl
adc
cs
adc
test
nop
das
dec
and
pushw
sbb
cs
movsl
cmp
movsb
cs
push
sbb
inc
mov
fstpl
fwait
clc
mov
pusha
loop
push
and
into
scas
sbb
cmp
movsb
mov
andb
ficoms
cli
cli
scas
mov
lods
divb
aas
cmp
mov
cmp
add
outsb
repnz
adc
mov
stos
int
inc
cmpsb
jl
lods
into
loop
mov
jmp
push
and
cmp
inc
fildl
or
popf
mov
pop
insb
arpl
loopne
call
jbe
mov
adc
cmp
dec
rclb
and
out
push
cmpsb
stos
jecxz
push
cmp
stos
nop
xchg
pop
cmp
subl
dec
lods
push
mov
leave
xchg
out
push
jno
lea
push
cmp
outsb
sbb
xor
fiaddl
mov
je
sub
dec
jp
rorb
mov
inc
adc
inc
push
test
push
es
sbb
enter
outsb
xorb
movsl
cli
add
data16
imul
leave
outsb
inc
add
test
inc
movsl
lods
adc
sub
and
jno
pop
xchg
out
adc
mov
cmp
hlt
lock
cli
pop
mov
xchg
std
mov
out
pusha
int3
imulb
add
jp
cmp
xchg
ss
mov
pop
push
fadd
xchg
insb
outsb
loopne
mov
cld
push
sbb
insb
xor
ret
push
lea
stos
cld
popf
jo
out
outsb
cli
fdivr
in
hlt
in
cmp
iret
sahf
lcall
out
mov
jo
outsl
repnz
aas
mov
scas
sub
repnz
hlt
pusha
enter
push
adc
test
sbb
xchg
cmp
dec
data16
mov
stc
push
sub
daa
jl
cmpsb
push
mov
push
sbb
mov
divb
rorl
outsb
out
fcoml
mov
dec
xor
inc
int3
push
mov
xchg
pop
push
aam
inc
add
xor
mov
xor
fldenv
call
push
sbb
jp
adc
movsw
sub
aas
out
mov
in
mov
sbb
dec
xor
lods
inc
jb
adc
inc
or
push
in
faddl
mov
cmp
mov
pop
sarw
add
js
loop
jp
adc
xor
dec
jp
xor
xchg
jne
es
push
mov
mov
pop
enter
add
push
fcompl
add
lock
pop
xchg
lea
mov
lock
or
jo
stos
idivb
mov
mov
movsl
cmp
pop
pop
and
push
xchg
jl
pusha
hlt
jbe
sbb
xchg
sbb
dec
push
inc
cmpsb
in
mov
mov
insb
mov
out
out
mov
mov
push
xor
insb
orb
fstl
mov
ret
cli
push
or
cld
sub
cmp
inc
inc
lock
rorb
jp
pop
dec
nop
fdivrl
adc
cmp
sbb
scas
xchg
stc
inc
call
lret
and
cmpl
jl
push
push
jl
lcall
adc
fwait
xchg
nop
lods
pusha
shlb
ja
mov
jmp
out
fstps
and
ja
ja
lods
xor
sarl
sbb
mov
jle
jg
nop
stos
mov
lods
mov
xor
jl
cmp
cmp
mov
lcall
xor
add
test
add
mov
and
push
add
lods
cli
ds
loope
mov
mov
test
or
jns
mov
mov
lock
jb
xor
dec
cmp
mov
jp
lods
scas
mov
into
je
dec
idivb
test
mov
cmp
pushf
mov
mov
xchg
mov
pop
fldcw
cwtl
cmp
arpl
in
cmpb
mov
std
inc
add
icebp
inc
inc
dec
movl
out
mov
lea
out
ja
mov
sub
mov
mov
sub
fs
push
ficoml
aas
in
jl
jnp
pop
fstpt
test
pushf
pop
movsb
fisubrs
jb
cmp
dec
xor
push
inc
inc
nop
xchg
ja
adc
mov
stos
sbb
jl
push
scas
cs
pushf
adcl
stos
inc
dec
inc
xor
rcr
test
inc
pusha
lcall
mov
fcomp
aam
xchg
xor
mov
lret
sub
lods
push
mul
leave
jns
pushf
jmp
xor
sti
mov
outsb
hlt
sub
add
adcb
or
into
test
or
mov
mov
cld
std
incl
popa
out
mov
mov
lock
std
and
les
mov
rclb
loopne
mov
push
cmp
mov
mov
mov
jnp
addr16
inc
addr16
lods
xchg
out
ss
fidivl
xchg
dec
clc
lea
mov
pushf
cmpsl
mov
pusha
inc
ret
mov
xchg
mov
sbb
cld
mov
push
mov
inc
xchg
push
inc
mov
cmp
enter
xchg
aam
xchg
cmpsl
inc
cmpsb
cmp
add
pushf
mov
and
pop
push
shlb
cmpsb
inc
in
dec
mov
cmpsl
cmp
hlt
add
daa
fidivrl
cmpb
jecxz
sub
cmp
xchg
pop
fdiv
movsl
mov
add
pop
fisubl
mov
in
mov
adc
out
cmp
pop
mov
mov
add
lock
bnd
mov
xchg
aad
enter
loopne
or
out
stos
hlt
ja
mov
nop
inc
dec
sbb
lahf
xchg
cli
mov
cmp
xchg
arpl
xchg
mov
sahf
pop
inc
mov
jmp
xchg
jo
iret
xor
mov
shll
xor
jp
xor
xor
fs
xchg
sbb
into
cmp
pop
or
aas
xchg
ret
mov
popf
dec
nop
push
inc
sub
xchg
xchg
cs
adc
cmp
xor
xchg
add
shrb
sub
push
mov
loop
imulb
clc
inc
mov
scas
movsb
mov
rcll
xchg
repz
jl
inc
nop
nop
cmp
push
cs
jg
add
inc
stos
jle
push
add
cli
loop
arpl
ret
outsl
adc
ja
jg
ss
mov
int3
fildl
into
mov
aaa
fcompl
nop
mov
push
fwait
add
xchg
sub
adc
cs
aas
sbb
loop
shll
dec
xchg
mov
or
dec
pxor
sahf
sbb
adc
pop
and
into
movsb
lret
pop
sbb
adc
xor
mov
add
cmc
rolb
jle
xor
out
push
test
outsb
push
sbb
inc
inc
pop
pop
fcoml
xchg
hlt
rcrb
mov
lods
leave
jl
fwait
add
sbb
pop
mov
test
push
lock
sbb
jb
sbb
xchg
mov
jbe
lods
int
adc
sbb
arpl
bswap
into
xchg
push
pop
adcb
mov
repz
adc
add
nop
fildll
lods
adc
insb
jne
inc
sahf
cmpsb
negb
hlt
frndint
inc
test
and
mov
aam
ret
and
inc
jp
sbb
xchg
xchg
cmpsb
sahf
jbe
xor
fwait
enter
loopne
out
ss
cmp
dec
lea
test
adc
inc
ss
fcomps
pushf
data16
negb
sbb
dec
sbb
bound
mov
add
sub
lods
aaa
into
xor
push
adc
stos
loop
xchg
movsb
test
sbb
adc
andl
inc
or
shl
adc
adc
add
popf
inc
jl
jne
or
push
push
data16
enter
scas
clc
stos
fsubs
scas
mov
je
cmp
inc
pop
and
xor
sub
mov
int3
cmp
mov
cmpl
mov
lock
xchg
mov
in
pop
inc
repz
cs
out
add
stos
and
push
hlt
movsb
jo
cmp
adc
aas
push
fdivrs
sbb
xchg
mov
gs
lcall
das
adc
dec
repnz
lret
repnz
inc
push
jecxz
icebp
roll
ror
fdiv
push
xchg
test
dec
cmp
test
dec
mov
push
aad
repz
push
stos
xchg
addb
mov
mov
cmp
mov
mov
mov
mov
shlb
ljmp
outsb
ss
stos
je
adc
inc
aam
outsb
je
xchg
pop
or
ss
mov
mov
movsl
sbb
push
or
xor
push
xlat
out
mov
adc
loopne
mov
and
cmp
and
sub
dec
ljmp
nop
push
les
aas
push
pop
lods
mov
or
mov
adc
push
test
inc
xchg
sbb
push
push
add
rclb
pop
and
lods
mov
repnz
ja
mov
inc
icebp
pop
or
enter
cmpsb
cmp
aam
xor
mov
or
pop
adc
mov
scas
sbb
push
cwtl
push
outsb
fldl
pop
push
sub
mov
mov
movsl
jo
stos
mov
hlt
push
pushf
rcll
xlat
outsb
mov
adc
xchg
xor
push
push
test
mov
fdivp
jo
or
add
cs
jae
pusha
enter
cmp
scas
cld
bound
ss
pop
mov
or
xchg
pop
jo
dec
lock
xchg
enter
mov
mov
stos
xchg
fbstp
or
lea
int3
neg
fabs
xchg
mov
lods
jns
push
int
pusha
andb
lds
mov
stos
or
pop
sbb
adc
sbb
push
nop
jno
sbb
adc
xchg
mov
sbb
sub
imul
hlt
pop
xor
mov
cmpsl
shlb
or
fdivrl
mov
cs
out
repnz
nop
sub
clc
int3
xchg
pushf
jb
pushf
loopne
pop
jmp
mov
adc
pop
stos
roll
sub
and
scas
pop
std
nop
repnz
dec
scas
cli
mov
mov
jge
pusha
sbb
sahf
mov
mov
out
add
mov
pusha
sbb
mov
notb
xchg
cmc
mov
cmp
push
bound
or
decb
or
inc
push
dec
mov
in
repnz
jl
push
mov
adc
mov
jmp
xchg
std
add
pop
cmp
xchg
cmpsb
mov
out
adc
xchg
test
loop
lock
stos
out
pop
sbb
movsb
pop
icebp
jp
pop
jbe
ret
mov
jns
enter
push
out
jnp
sub
int3
adc
or
jl
in
hlt
movlps
leave
jne
rcrb
aas
hlt
push
dec
cmpsb
mov
inc
xor
stc
mov
mov
outsb
xchg
pop
push
shrb
push
ljmp
jp
call
add
lcall
jbe
mov
xor
inc
das
clc
jle
xlat
mov
push
filds
mov
add
in
mov
popa
rolb
mov
jl
ret
rclb
into
imul
mov
data16
add
xor
nop
xchg
pop
xchg
push
and
into
sbb
js
mov
mov
mov
adc
mov
movsb
rolb
mov
int3
fst
add
fsubs
gs
arpl
data16
in
mov
cs
adc
les
pop
addr16
out
movsl
lret
and
sbb
fidivrl
aam
xlat
add
cs
mov
add
jbe
dec
mov
mov
adc
xchg
roll
xchg
and
pushl
mov
in
xor
movb
xchg
mov
arpl
test
lcall
pop
test
push
lcall
pop
je
xor
or
push
mov
rol
call
mov
xor
xchg
sahf
mov
xor
pop
jb
cmp
nop
aaa
sub
lods
push
add
push
sub
pop
lcall
test
pop
adc
hlt
mov
insb
xchg
fwait
loop
cmpsl
add
mov
inc
push
in
clc
rcl
lds
bound
cmp
lods
cmp
or
push
mov
inc
aam
push
add
lods
lcall
xchg
and
adc
negb
ret
loop
cmp
sbb
dec
ss
push
stos
xor
in
add
sbb
sub
stos
push
orb
mov
hlt
rcrb
outsb
fld1
outsb
incb
xchg
mov
and
jns
aam
js
cmc
dec
pop
addr16
data16
push
outsb
inc
jb
fdivrl
aas
in
mov
pop
push
js
mov
pcmpgtd
pusha
lods
ljmp
movsb
xchg
mov
xchg
sub
mov
inc
test
mov
outsl
ret
adc
stos
mov
add
jp
mov
adc
loope
in
and
xchg
ret
cmc
adc
mov
rorb
sti
out
dec
push
dec
repnz
xor
push
sub
rcrb
int3
pop
add
daa
and
ja
mov
stos
int
add
sbb
mov
push
xchg
mov
cs
movsl
scas
test
or
insb
push
sbb
adc
ror
mov
sbb
outsl
fnsave
lock
jg
xchg
int3
xchg
dec
test
adc
jae
fldl
out
dec
pop
mov
data16
add
mov
mov
xchg
fnstcw
mov
xor
and
mov
loope
bnd
lods
mov
push
stos
xchg
xor
xchg
mov
xor
inc
sbb
jle
cmp
pop
stos
push
pop
in
add
push
jl
roll
call
sbbb
dec
out
shl
repnz
out
pushf
popf
pop
nopl
dec
imul
test
mov
pop
psubd
fidivrl
nop
mov
pop
out
or
outsb
mov
sbb
adc
sub
or
call
pop
add
cmp
out
daa
outsb
iret
jmp
sbb
mov
mov
movsb
lods
and
cs
sbb
hlt
stos
int3
enter
out
sahf
movl
enter
subb
mov
adc
push
frndint
jb
out
fimull
and
push
lcall
jo
sub
dec
outsb
insb
cmp
shrl
mov
ret
xchg
idivb
popa
mov
fisubrl
stc
add
push
ficoml
mov
mov
inc
scas
in
lcall
ret
mov
rclb
enter
xchg
jmp
mov
pusha
movsb
and
enter
mov
lods
aaa
add
rolb
push
adc
cld
inc
loopne
push
adc
call
pusha
sbb
mov
hlt
lods
push
lret
insb
bound
or
mov
repz
add
test
or
xchg
fwait
cs
inc
push
adc
inc
push
in
andps
mov
inc
push
jg
push
mov
leave
mov
jns
scas
lcall
sahf
push
mov
es
inc
inc
fistpll
push
xchg
es
sbbb
mov
rclb
jg
in
lods
xchg
mov
es
ss
dec
int
mov
cld
loop
fildl
in
and
push
sbbl
outsb
sub
lds
outsb
adc
xor
movsb
js
leave
jbe
mov
inc
sub
movsl
adc
aaa
sbb
dec
pop
dec
clc
xchg
jnp
int3
lea
sbb
push
lods
pop
mov
pusha
xchg
movsl
in
dec
push
cmp
mov
jnp
std
add
and
dec
hlt
inc
xchg
imul
bound
xlat
adc
xor
sub
or
ds
movsb
dec
mov
mov
mov
mov
notb
mov
dec
xor
mov
xor
aaa
mov
sbb
push
push
sub
push
ret
stos
stos
xlat
push
pushf
loop
incb
cli
sbb
mov
bound
outsb
mov
int
xchg
dec
xchg
aam
inc
lret
ljmp
mov
es
mov
movl
stos
bound
push
cmp
outsb
jecxz
sub
ret
push
ss
lret
scas
addr16
scas
sub
lods
and
mov
inc
xchg
outsb
daa
or
and
cli
loopne
inc
mov
mov
cli
pop
scas
stc
repnz
loop
ljmp
adc
cmp
adc
aaa
add
scas
xchg
test
adc
dec
push
push
or
es
dec
lods
bound
xor
fadds
fidivl
sub
std
and
sub
xchg
cld
pop
enter
and
int3
mov
jle
jo
addr16
add
ljmp
mov
sub
arpl
cs
jp
xor
xor
lods
xchg
jp
mov
lcall
add
fildll
lods
inc
data16
add
outsl
xor
jp
sbb
jne
adc
cmp
js
or
mov
ljmp
bound
push
repnz
xchg
mov
loop
push
inc
inc
fldcw
fcomp
and
mov
into
in
add
cmp
cmp
mov
xchg
test
mov
data16
pop
mov
cli
repnz
lcall
out
and
loop
and
loop
dec
or
xor
cmpsb
or
stos
mov
es
rclb
mov
scas
dec
inc
xor
pop
loop
push
daa
test
mov
mov
cmp
dec
lods
mov
pusha
inc
cmp
push
pusha
push
jp
xchg
test
es
rclb
rcrb
out
sarl
adc
ret
xor
xor
ds
sub
pushf
mov
out
rclb
push
andb
scas
mov
pop
mov
stos
ficomps
adc
aam
ss
pop
mov
sub
mov
xor
add
and
jle
jl
enter
adc
insb
push
subb
shlb
mov
cld
sar
loop
shll
dec
xchg
mov
ret
ret
pop
add
stc
jg
jno
mov
jg
loope
icebp
push
cmp
lods
loop
leave
in
jle
outsl
cwtl
sbb
add
add
bound
mov
sbbb
in
movsl
mov
sbb
mov
or
cld
in
mov
add
mov
aad
mov
in
popa
mov
sahf
and
or
sub
and
repz
add
mov
aad
orb
and
addr16
xchg
out
je
xchg
ja
in
mov
hlt
mov
push
mov
outsb
xlat
lcall
lcall
scas
mov
sub
lcall
popf
es
test
xchg
xchg
aam
lock
in
in
sahf
rolb
int3
jl
cmc
in
push
jmp
xchg
lahf
mov
sahf
dec
loope
cmc
scas
cmpsl
scas
test
xchg
mov
cmp
or
fisttps
pop
std
push
lods
hlt
outsb
loope
mov
scas
mov
shlb
int
lret
icebp
rolb
xlat
sub
into
or
ret
int3
loope
scas
pop
xor
mov
mov
sarl
sti
pushf
pop
adc
mov
mov
int
jl
aas
fisubl
adc
testb
insl
popa
push
lods
sahf
test
cli
stos
stos
std
pop
lcall
xor
rcll
repz
inc
mov
outsb
push
je
flds
jl
mov
cltd
jle
aaa
dec
gs
das
sbb
add
mov
jg
testb
jnp
data16
cld
sub
loopne
dec
or
out
adc
mov
add
lret
enter
mov
cld
lahf
sbb
add
jle,pt
adc
push
jp
xchg
adcb
cmp
rolb
mov
jg
mov
dec
push
xor
jle
mov
sbb
cld
jno
jle
lock
pusha
xlat
insl
dec
add
pop
adc
pop
int3
fbld
and
les
out
jle
je
test
xchg
dec
arpl
cmp
lods
jle,pn
cmpsb
or
sub
push
jle
dec
mov
xchg
cmpsb
adc
mull
jge
in
and
push
mov
fbstp
roll
mov
add
loope
cmp
jmp
jno
mov
in
loopne
int
jg
jnp
pop
xchg
xchg
sbb
xor
shlb
dec
pop
inc
mov
scas
mov
mov
jle
icebp
sahf
in
in
push
mov
out
or
xchg
cmc
xorb
pop
lea
lods
jecxz
fbld
movsl
mov
mov
jl
add
mov
lea
scas
mov
clc
fbld
loope
test
jle
xchg
fwait
push
or
mov
add
mulb
and
and
dec
lods
xchg
inc
jl
push
lahf
dec
addr16
jle
outsb
jp
adc
ss
stos
fs
dec
xchg
dec
out
cs
inc
imul
mov
sarb
je
jo
or
lcall
test
mov
or
and
pushf
pop
ds
inc
out
jle
lock
jbe
int
mov
pop
dec
add
inc
jle
cmp
fs
jle
les
dec
jle
cmp
rcr
jecxz
test
inc
lds
sub
mov
cwtl
jne
mov
jno
test
jns
std
fdivrl
dec
jle
repz
jmp
fidivrs
jg
int
fldenv
mov
nop
xchg
ja
pop
jle
add
subb
jmp
popf
into
lods
adc
jg
testb
leave
inc
and
ss
test
xchg
sbb
mov
enter
cmc
icebp
adc
inc
nop
mov
mov
adc
je
pop
mov
data16
push
jbe
push
int3
xor
xlat
push
movsl
mov
cmpsb
scas
xchg
les
mov
sbbl
subb
fdivrl
jno
loope
stos
xchg
pop
jg
mov
imul
mov
dec
jg
lret
cmp
cli
clc
sahf
mov
mov
outsb
adc
mov
in
mov
jno
mov
push
arpl
ds
outsb
mov
je
cmpsl
fstpt
rcrl
inc
mov
mov
jecxz
icebp
mov
sub
jge
push
data16
mov
xchg
popa
jnp
mov
fistl
sahf
nop
mov
lcall
dec
mov
pop
mov
scas
test
mov
idivl
in
nop
movsl
shrb
dec
lock
icebp
cs
aad
scas
lcall
jmp
pop
in
scas
lahf
scas
popf
xor
pop
subb
enter
ljmp
sbb
lcall
push
and
rcrl
out
fs
cmpsb
sbb
jle
and
or
adc
and
mov
pop
or
dec
shl
insb
sub
inc
rcrb
imul
sbb
jmp
push
fwait
mov
adc
inc
cmp
and
stos
push
mov
jo
add
adc
daa
cmpsb
mov
es
add
popa
add
rcr
sub
cli
jle
fisubrs
xor
jle
xchg
gs
xchg
jmp
push
loope
mov
mov
add
adc
rol
fwait
xor
incb
int3
sub
and
ds
cmpsb
out
lahf
jle
push
fsubp
mov
leave
nop
jle
mov
and
test
cs
xor
mov
sbbb
sub
jle
jl
dec
std
push
and
mov
and
nop
mov
test
inc
add
dec
and
and
jl
mov
adc
out
insl
jle
lock
iret
cld
xchg
xor
pop
inc
mov
bound
ret
adc
or
xchg
popf
mov
add
fidivrl
mov
orl
or
lahf
jo
aad
stos
jle
push
lds
insl
jp
mov
mov
shl
jl
popf
jmp
inc
mov
pop
scas
jle
mov
cmp
int
out
jp
rorl
push
jle
inc
test
jecxz
pop
nop
or
loope
jne
lcall
jno
sub
shll
jle
in
mov
je
outsl
mov
inc
scas
jp
mov
cmpsl
mov
outsl
pop
cmpl
inc
aad
and
xor
andl
cld
ss
stos
clc
sahf
es
popa
hlt
out
push
jle
call
or
mov
cltd
sub
pop
pop
push
lcall
fdivs
mov
xor
push
rcrb
shll
pop
nop
mov
sbb
xchg
inc
incb
call
pop
sub
sbb
cmp
lock
sub
lods
xchg
xchg
movzbl
adc
in
mov
pop
orb
push
popl
aad
icebp
int3
out
repnz
mov
xchg
mov
cmp
push
or
call
mov
cwtl
sbb
rolb
mov
int3
sbb
mov
rcll
dec
mov
cltd
inc
jno
stc
mov
mov
lret
pop
push
or
sub
mov
mov
shrb
cld
jle
lds
pop
mov
xchg
xchg
iret
cmpsl
mov
xor
or
int3
in
rolb
mov
mov
dec
decb
sbb
push
enter
inc
or
popf
jo
sbb
mov
and
mov
sub
rcrb
ror
lea
adc
ret
jle
repz
push
cmp
xor
mov
int
icebp
lea
add
lret
jbe
int3
jle
xor
loop
in
ret
cmp
adc
jle
and
ja
mov
or
sbb
jle
es
mov
stc
push
mov
mov
inc
ficompl
mov
rolb
push
ss
gs
insl
jle
mov
xor
jg
jmp
fildll
in
jg
mov
outsl
outsl
les
ds
lds
mov
sahf
xchg
lods
fsubrp
aaa
loope
inc
mov
mov
mov
out
data16
jp
jle
fidivl
cltd
xor
mov
jle
sbb
sti
jne
dec
lods
xchg
inc
mov
or
mov
in
out
ror
mov
lds
gs
jge
add
dec
push
ret
pusha
jle
mov
cmc
pusha
sub
or
xchg
inc
aad
cwtl
icebp
cmp
fldl
xlat
divl
movsl
sbb
bound
mov
test
dec
xor
ss
cli
pop
iret
xchg
push
ds
call
add
inc
daa
adc
mov
jle
push
fisttps
push
mov
or
pop
lcall
and
leave
jle
fnsave
js
mov
jle
popf
shrb
repz
pop
loop
gs
mov
jns
inc
lcall
ret
insb
jmp
cmp
xor
bound
and
sarl
ljmp
stc
leave
jle
das
in
daa
xchg
and
lds
xor
ds
mov
jge
pop
or
data16
mov
mov
jle
jae
push
fcompl
idiv
cmp
jg
or
call
lea
jne
mov
test
mov
stos
leave
add
pop
cli
mov
adc
imul
mov
popf
cmp
sahf
inc
lds
sub
xor
rcrl
mov
sub
cmp
jb
mov
cli
cmc
lods
jle
xor
mov
mov
pop
push
leave
mov
ret
int
mull
cwtl
lds
xchg
jo
fstl
dec
adc
cmp
movsl
mov
dec
add
data16
jle
cmp
arpl
fwait
subl
dec
mov
aad
dec
cmpsl
and
jle
and
inc
jle
cmp
mov
adc
roll
jbe
scas
xor
sahf
pop
aad
xor
rclb
dec
jo
pop
and
xchg
mov
in
sbb
aas
call
mov
jle
or
or
inc
leave
jnp
or
daa
mov
addr16
aad
inc
out
jle
dec
mov
scas
pop
cltd
mov
test
jl
pop
mov
lods
dec
mov
cmpl
dec
mov
sbb
filds
inc
jbe
ret
fs
andl
into
mov
sub
jae
popw
icebp
mov
or
jle
inc
inc
iret
sahf
outsb
xor
push
push
xor
std
fsubl
cmpsl
inc
xchg
daa
add
xchg
xchg
sbb
mov
and
scas
fcompl
ror
sub
mov
or
sarb
add
test
push
clc
out
jmp
inc
cmpsb
loop
adc
icebp
imul
mov
lret
test
lods
mov
ficoml
xchg
sarb
addr16
outsb
pop
mov
xor
mov
je
cmpl
push
sbb
lds
jg
in
xchg
pmaxub
dec
jle
shlb
cltd
fldt
jno
mov
mov
test
jle
cld
ret
shl
cltd
adc
scas
movntq
jno
jle
insl
out
mov
jle
addl
mov
mov
popa
clc
jle
test
adc
pop
jbe
insl
mov
jle
or
dec
jle
add
bound
jg
test
xor
ljmp
mov
jge
jo
ret
repnz
adcl
test
insl
jecxz
pop
push
leave
add
lea
jg
pop
fdivrp
in
jle
dec
stos
out
dec
stc
int3
push
jle
ss
or
shlb
and
mov
dec
mov
movsl
movd
movsb
cmp
js
mov
inc
sbb
add
xor
jae
ret
lret
sub
cmp
je
push
incl
pcmpgtd
addb
xchg
mov
mov
mov
adc
mov
or
mov
aad
or
call
scas
fisubrl
mov
fstl
jmp
sub
in
cmp
adc
xchg
mov
cmc
and
push
jmp
sahf
sbbb
in
sbb
dec
push
lea
xorl
pop
xor
int
pop
jle
adc
fs
out
fwait
jle
pop
stc
popl
dec
nop
push
xor
or
push
push
push
jle
or
mov
jle
pop
shll
int3
outsb
inc
jno
sub
push
jle
jmp
pop
enter
js
cmp
add
sub
mov
inc
js
movsb
iret
dec
jle
insl
push
xchg
xor
cmp
jp
mov
fcoms
and
jle
fbstp
mov
mov
and
loope
xor
jmp
adc
lock
pop
aad
gs
fildl
stos
mov
xchg
xchg
test
shll
jae
add
data16
das
jle
dec
fidivs
pop
rcl
jle
jno
stos
mov
push
pop
mov
mov
jl
leave
adc
xchg
mov
cmp
cmp
xor
lcall
out
iret
insl
repz
xchg
int
and
or
inc
and
lds
mov
pushf
mov
movsl
mov
loop
jp
push
movsl
cmp
xlat
scas
xchg
jmp
xchg
mov
lcall
js
lock
jecxz
loope
mov
jle
fldl
add
inc
pop
movsb
ss
mov
out
jb
or
cmpl
loop
or
push
sarb
push
xor
jle
mov
ss
sub
dec
pusha
xchg
les
add
mov
loopne
xchg
mov
mov
push
dec
es
jle
lods
mov
cmpsb
sbbl
dec
mov
cmp
pop
add
mov
mov
adc
add
movsl
inc
push
mov
push
lcall
mov
dec
loope
test
idivl
mov
cmpsb
xor
dec
mov
daa
jle
dec
dec
mov
sbb
aad
mov
outsb
fsubl
jle
scas
cmp
jecxz
movsb
sahf
jle
cmp
push
or
jle
push
adc
aaa
pop
mov
lahf
inc
push
mov
rep
pushf
out
sub
push
jg
ret
inc
lea
push
lods
sahf
ds
push
push
outsb
adc
aaa
xchg
shl
pop
not
jle
aad
out
inc
jge
pop
sbb
cmp
stos
pop
jecxz
les
sbb
loopne
lcall
jge
jle
inc
incl
cwtl
pusha
movsbw
mov
lahf
lea
mov
pushf
pusha
call
jne
pusha
movzbl
or
mov
push
add
clc
movzwl
cmp
jmp
in
inc
dec
arpl
xchg
mov
adc
pop
je
stc
shll
cmp
xor
nop/reserved
push
add
lahf
sub
push
ret
call
pop
aam
or
callw
jecxz
mov
mov
stc
shll
scas
dec
pop
fisubs
xchg
jns
cmp
and
in
ljmp
aaa
cli
push
in
dec
mov
mov
idiv
pusha
mov
lea
je
call
jmp
mov
arpl
test
push
aad
loop
sbb
mov
sub
push
scas
shll
pop
dec
xchg
and
imul
sub
push
xchg
add
jmp
dec
rolb
push
mov
push
pushl
ret
push
dec
cmc
bsf
btc
mov
jmp
xor
popa
dec
arpl
mov
stc
push
adc
dec
std
lcall
inc
pop
mov
dec
loopne
and
leave
addr16
fsubrp
jae
jnp
into
jo
popa
pop
lock
out
sub
cmpsl
or
mov
mov
xor
enter
jae
mov
lods
jns
insl
or
pop
pop
sbb
pusha
inc
and
mov
cmp
and
cmp
bt
jmp
lea
jne
push
inc
lea
jmp
movl
pusha
pushf
call
xchg
sbb
dec
arpl
jne
rcrl
fistl
adc
test
repz
repz
or
lock
jl
or
test
ds
mov
std
xchg
jne
fwait
pop
dec
mov
js
cmp
cmp
scas
xor
addr16
jl
dec
aam
out
ret
mov
add
or
scas
xchg
jno
pushl
pop
movzwl
not
not
lea
movsbw
pushf
pushf
mov
call
call
push
jmp
mov
push
jle
stos
mov
dec
movsl
add
ss
jae
and
in
mov
adc
mov
test
pop
cmc
sbb
cmp
shl
shll
mov
test
cld
cmp
cmp
loope
xchg
sbb
mov
jns
mov
sub
lods
mov
add
pushf
jmp
cmp
cmp
push
pushf
mov
lea
ja
dec
setb
add
ror
clc
mov
call
lea
je
pusha
movb
add
stc
cmp
call
jmp
loopne
dec
arpl
xchg
mov
cld
push
dec
mov
jbe
adc
jecxz
out
jnp
in
ja
mov
sbb
call
mov
or
test
cmp
sbb
lret
test
jae
iret
sub
in
push
loope
arpl
inc
outsb
mov
lret
or
push
inc
dec
dec
mov
xchg
inc
sbb
in
mov
into
inc
popa
xchg
lea
xchg
repz
fnstcw
aad
shl
gs
popa
mov
cmp
cmpsb
test
push
pushf
cmp
pusha
lea
jbe
cmc
sub
shrd
mov
push
mov
cmc
rcl
pushf
add
mov
shr
cmc
mov
btc
mov
mov
pop
bsr
adc
add
not
mov
mov
lea
jbe
pushf
mov
jmp
push
pushf
pusha
lea
jmp
movl
lea
call
pusha
mov
movw
pushl
adc
push
pushf
jmp
jns
dec
insl
dec
arpl
ljmp
int3
and
bound
adc
inc
xchg
hlt
sbb
testb
push
aam
xchg
sub
and
loope
int3
arpl
stc
sub
pop
loop
negb
rorb
insl
imul
mov
pushf
pushl
ret
or
subl
test
flds
jle
jnp
lret
adc
movsb
movsl
jg
scas
inc
shr
lods
loop
adc
fstpl
push
mov
stos
adc
sub
add
dec
mov
pop
loopne
push
sbbl
shl
xchg
add
cmp
sub
mov
mov
inc
ja
jle
mov
clc
mov
in
pusha
jae
inc
lods
nop
xor
adc
dec
mov
insb
jae
sub
fiaddl
mov
cmp
idiv
jns
xor
arpl
mov
cmc
cwtl
sbb
punpckhdq
inc
addr16
ja
or
or
aas
adc
loop
arpl
cmpsb
xor
int
in
pop
or
dec
cli
and
cmpsb
movb
pop
dec
shll
int3
ja
das
mov
sbb
mov
lds
cmpsl
cmp
inc
cmc
test
std
sbb
popa
and
lahf
jecxz
mov
inc
fcompl
loope
lret
xor
add
adc
outsb
lret
mov
fnstcw
add
and
das
inc
push
mov
out
or
jae
in
pushf
or
pop
xor
repz
dec
out
repnz
xchg
bound
cmp
clc
ss
je
cmpb
insb
outsb
movl
pushl
pushf
call
seta
movzbw
bswap
pop
bswap
call
call
pusha
cwtl
mov
push
lea
jmp
bsr
mov
inc
rol
rcl
bswap
sub
bt
bt
shld
lea
pushf
sub
cmp
pushf
pushl
popl
test
cmc
push
cmp
pusha
push
movl
push
lea
ja
sbb
sub
movzbw
cmc
add
bswap
mov
mov
pushf
clc
shl
mov
movb
jmp
mov
lea
movsbl
pop
push
pushl
push
pushl
ret
jmp
pop
setle
not
bswap
call
push
mov
outsl
dec
arpl
sbb
mov
push
lock
inc
xchg
or
jg
add
dec
bound
cmp
addr16
jmp
daa
mov
je
mov
je
clc
jae
pushf
popa
jae
sbb
dec
pop
enter
adc
push
fldt
lods
xor
cmp
or
push
xor
add
add
adc
ret
sysexit
or
test
mov
dec
mov
mov
popa
sub
arpl
jge
push
xchg
inc
aas
in
std
test
fdivl
addr16
xchg
lea
loope
mov
fcoml
pusha
test
rol
sbb
adc
mov
or
sbb
push
xlat
addr16
mov
add
sub
jg
dec
pop
pop
jmp
sahf
adc
stos
jne
fmull
adc
pop
cmpsl
pusha
int
lcall
sbb
cmp
xor
jecxz
pop
fldl
dec
arpl
out
sahf
pushf
sbb
negb
out
mov
inc
xchg
hlt
sbb
or
in
mov
jno
lahf
pop
mov
mov
inc
xor
mov
mov
sar
movl
lock
adc
idiv
lea
je
pusha
mov
bswap
call
movl
push
pusha
pusha
pushl
popl
mov
push
pushl
ret
jmp
pushl
popl
mov
mov
pushf
pushl
ret
push
inc
aam
dec
arpl
or
subb
out
inc
fwait
mov
test
jbe
int3
loope
in
andb
inc
mov
cld
ficoms
push
lret
insb
fistpl
in
sbb
or
cmp
mov
ret
fnsave
xlat
jl
jnp
adc
jecxz
dec
sub
div
jmp
movw
lea
je
push
adc
pushl
lea
jmp
pushf
mov
mov
lea
jne
pushf
lahf
pushl
movb
lea
jns
lea
push
push
mov
setg
pop
not
movzbl
lea
call
test
push
or
movb
push
pushl
lea
je
sete
movsbw
lea
lea
lea
movzwl
pusha
movsbw
pusha
bswap
lea
bswap
jmp
pushf
mov
lea
jne
jmp
push
lea
call
call
adcb
arpl
lcall
cmp
mov
mov
test
ja
clc
iret
mov
pop
cmp
jns
cmpsb
add
ret
fxch
pop
shll
sbb
aam
dec
xor
mov
pop
movsb
ret
cs
or
mov
ja
cmp
mov
adc
sqrtps
icebp
lock
scas
xchg
jle
push
aam
sbb
pop
popf
insl
mov
mov
mov
push
loope
pop
add
jne
lods
or
jecxz
sti
int3
push
pop
add
jmp
mov
inc
shlb
cwtl
fadds
sbb
jne
jmp
roll
rcr
jl
popf
es
stc
sbb
call
leave
repz
das
dec
fdivl
and
mov
lahf
push
mov
out
scas
sahf
xchg
sub
sbb
inc
jno
mov
js
add
aad
jnp
aad
push
das
push
sbb
rolb
aas
mov
cmp
adc
jl
popf
cmp
dec
mov
repnz
mov
adc
scas
pop
or
adc
push
js
push
pop
dec
adc
das
mov
popf
cs
adcb
loope
or
xchg
mov
inc
test
and
sub
insl
xor
bswap
add
jbe
adc
pop
ja
cli
stc
ds
scas
inc
lret
rolb
lea
mov
push
xor
add
add
cwtl
lea
mov
jmp
and
mov
bt
movb
repnz
call
movsbl
movb
lea
jmp
call
jmp
pusha
pusha
push
lea
ja
pushf
pusha
pusha
lea
jmp
test
call
call
pusha
out
push
arpl
jno
fistpll
sbb
mov
pop
ror
je
push
mov
sti
sbb
dec
push
ret
xchg
and
scas
lock
ret
and
dec
pop
nop
mov
jns
jmp
test
dec
sbb
leave
mov
jmp
es
popf
test
push
imul
gs
xor
cs
insb
add
fwait
add
pop
fcmovbe
andb
add
jg
in
ret
sub
jge
push
mov
mov
or
push
ret
fidivs
mov
jne
pusha
push
lea
mov
add
add
out
sbb
mov
fsubp
pop
mov
in
mov
mov
test
mov
divb
mov
scas
xlat
add
insw
and
test
stc
imul
xor
bnd
subb
lock
ret
lcall
addr16
add
ret
decl
test
inc
mov
adc
call
jb
and
sahf
cmp
scas
sbb
cwtl
stos
xchg
add
es
mov
mov
dec
lcall
mov
adc
push
stos
push
push
ds
adc
inc
ja
push
and
scas
and
push
push
lcall
aas
decb
test
xchg
dec
lea
fs
addr16
or
push
push
add
add
push
loop
mov
or
adc
inc
aas
rcl
inc
test
push
lcall
or
addr16
xorb
mov
scas
push
movsl
push
fimull
scas
ds
rorl
pop
jl
cwtl
xchg
mov
pop
ljmp
lea
into
mov
lea
dec
sarl
jl
mov
jl
mov
jne
lea
shll
cmp
outsb
call
pop
mov
inc
loope
iret
ja
pop
sarb
cmpb
fcom
aas
or
rcrb
setb
pop
sub
lcall
out
xorb
jp
sahf
jo
repnz
jg
dec
enter
lahf
push
shll
adc
push
hlt
lret
xchg
out
fcomi
cmpsl
push
sbb
inc
fistps
or
jle
mov
and
or
jp
mov
int
pushl
movsb
or
cltd
enter
subl
mov
jne
and
pop
gs
sub
hlt
xchg
lea
push
lods
inc
inc
jae
pop
or
jnp
jbe
pop
inc
mov
mov
je
dec
jno
or
stos
jl
push
dec
jbe
test
arpl
mov
mov
dec
adc
push
sbb
xchg
xchg
fisubs
inc
or
fstp
in
out
lock
orb
add
popl
adc
jge
jle
aas
inc
xchg
jbe
push
insl
jmp
nop
rorl
out
jns
dec
ds
mov
jmp
dec
test
faddp
inc
jle
or
cltd
sub
sbb
ret
loop
pop
ja
addb
cmp
out
dec
adc
sub
pcmpgtw
adc
adc
stos
pop
rcrb
jnp
scas
test
mov
or
addr16
sub
shl
and
mov
xchg
add
lds
push
sbb
popf
je
sbb
xchg
sub
js
and
cmp
add
or
data16
adc
xchg
jecxz
jmp
sbb
scas
inc
cmp
stos
lea
pop
add
fisubs
dec
lahf
lock
add
lcall
or
cld
mov
aas
xlat
addr16
fbld
or
aaa
jge
mov
jno
jbe
aam
sbb
cmp
bswap
or
xchg
jbe
mov
jecxz
inc
rorl
dec
pop
mov
cmpsl
inc
mov
jnp
mov
ret
push
icebp
add
enter
mov
dec
mov
in
aad
jbe
mov
lea
iret
nop
lahf
nop
das
fstpt
mov
jb
mov
mov
add
ret
andl
iret
stos
insl
pop
xchg
cmpsl
dec
call
xor
imul
in
or
sbb
rcrl
cltd
add
xchg
ja
data16
insb
xchg
pop
rcll
inc
fdivl
or
lret
jle
xchg
xor
inc
orl
push
push
xor
dec
mov
mov
pop
cs
pop
dec
sahf
xor
fiaddl
dec
fdivs
sarl
and
orb
inc
ds
sub
lods
jns
add
fadds
xor
jg
dec
pop
loope
orl
or
sbb
jno
fisttpll
jo
cmp
sahf
mov
outsl
or
gs
pop
shlb
fimuls
cmp
dec
mov
inc
dec
sarb
and
insl
pop
scas
mov
pop
arpl
jno
scas
fimuls
insl
loop
pop
subb
popa
addr16
ss
into
mov
lret
aas
or
add
or
rcll
mov
lds
push
push
or
mov
out
shlb
xchg
xchg
jmp
addr16
dec
adc
in
adc
push
addl
dec
imul
fisubs
adc
lahf
pop
pushf
xchg
sbb
fdivl
push
and
and
push
ret
cltd
addr16
inc
scas
cmp
cmp
lahf
dec
add
xchg
pushf
inc
add
dec
outsb
nop
aas
dec
xchg
lods
add
lret
loopne
enter
push
sub
imul
mov
loop
test
push
jns
and
daa
in
adc
adc
fldcw
ss
ja
imul
loope
test
je
leave
push
out
out
pop
outsl
lcall
mov
xchg
and
insl
mov
jbe
xchg
in
push
mov
icebp
sti
mov
jae
cli
dec
jbe
push
mov
dec
ret
cmp
mov
or
repnz
fiadds
push
mov
and
cmp
leave
push
jmp
pop
xchg
bound
ljmp
mov
xchg
imul
push
addl
pop
add
dec
mov
xor
push
dec
inc
pop
inc
jbe
popa
leave
outsb
sub
mov
loope
jge
mov
shll
outsb
addl
jg
xor
sbb
mov
movb
inc
add
cmp
jg
testl
inc
nop
add
xor
xor
sbb
xchg
xlat
popf
leave
xchg
and
sbb
mov
push
jmp
xchg
sbb
mov
dec
loop
ficoms
jbe
xchg
fistl
mov
push
mov
inc
jp
inc
pop
mov
sub
in
fs
pop
jl
loopne
cmpsl
sahf
testb
mov
leave
xchg
rorl
xchg
addr16
repz
xchg
inc
jo
aad
cmc
or
dec
cmp
push
sub
add
sbb
je
push
shll
into
mov
lock
dec
mov
aaa
hlt
mov
stc
xchg
pop
lret
subb
mov
sbb
aas
in
jno
gs
push
adc
rolb
movsl
adc
in
sbb
jg,pt
inc
mov
xorl
mov
sbb
mov
call
shl
scas
dec
jl
mov
jg
jmp
pusha
push
cltd
mov
xchg
inc
xchg
cmpsb
xchg
inc
daa
lcall
aas
cmp
sahf
mov
jge
fidivrl
lret
inc
ret
scas
into
jne
adc
ficoms
or
xchg
or
jg
dec
cmp
mov
jg
out
fsubrs
xchg
cmp
mov
add
repnz
adc
aas
mov
jo
lea
jbe
lahf
gs
push
cli
mov
jns
shl
jl
mov
xchg
push
enter
dec
out
pop
bound
pop
pop
scas
es
add
gs
pushf
and
movsb
pop
sbb
nop
push
adc
aas
in
sbb
jg
jne
into
fidivs
addr16
outsl
jle
shl
add
push
cwtl
iret
ret
inc
addr16
jp
cmp
inc
pop
and
mov
lock
xchg
fdivr
push
aam
inc
mov
leave
clc
jg
into
and
nop
test
out
mov
jmp
sbb
inc
inc
insb
data16
adc
stos
adc
mov
dec
out
jns
and
outsl
jne
aas
or
mov
mov
das
xchg
jle
mov
mov
or
dec
push
loop
sahf
mov
test
ja
cmpsl
sub
and
xchg
pop
inc
add
js
inc
imul
movsb
jg
pop
orb
adcl
data16
cmc
xlat
xchg
sbb
scas
int3
sbb
and
stos
clc
add
fs
mov
call
inc
cmp
cltd
mov
xor
out
fcoms
cmp
mov
mov
xor
xchg
nop
test
inc
mov
ljmp
push
add
scas
fcoms
cmc
xchg
pop
ljmp
addr16
lret
movsl
add
ret
xor
add
outsl
addl
es
mov
pop
test
shrb
pop
xchg
jg
cmp
mov
cs
cmp
cmpsl
mov
push
repz
add
push
icebp
mov
stos
jmp
shlb
and
add
fiadds
jl
mov
pop
outsb
je
bound
add
aam
inc
aam
push
mov
hlt
stos
ja
aaa
jmp
dec
js
sub
or
mov
dec
test
pop
jge
jle
push
mov
scas
out
dec
lods
inc
movl
pop
inc
adc
cmpsb
sar
shrl
dec
je
push
hlt
movsb
and
jbe
jle
sub
call
jle
inc
pop
jno
sbb
push
pushl
inc
push
arpl
jle
pop
dec
add
mov
lahf
or
mov
jl
and
in
mov
out
push
addr16
aad
jg
jbe
jo
in
les
jecxz
stos
add
imul
lods
jae
mov
cmp
lea
cld
cltd
movl
inc
iret
jg
stos
xor
push
xor
and
push
add
sub
jp
popa
call
push
pop
fs
sbb
adc
inc
pop
or
loope
and
rol
rcll
jnp
aaa
je
cmp
test
or
or
xchg
adc
fs
lret
out
mov
xchg
andl
cmp
xchg
add
inc
leave
and
sbb
xor
pusha
addl
ss
push
mov
inc
xchg
lret
lds
jl
add
mov
test
insb
mov
inc
cmpl
push
xor
dec
sbb
data16
out
sub
jo
loop
addr16
push
call
lcall
sub
fadds
in
roll
mov
sub
inc
or
arpl
and
pop
lea
inc
inc
dec
adcl
or
mov
jp
repnz
adcb
out
sub
or
lret
xor
daa
pop
aam
xchg
cmpsl
pop
ds
mov
rcrl
mul
mov
push
das
mov
cs
andl
xor
int3
sbb
sbb
rcl
lods
fstps
adc
bound
xor
sahf
mov
jg
ja
jmp
and
outsb
inc
push
es
ljmp
mov
adc
cmp
cmpsb
cmpsb
adc
xchg
lods
lcall
inc
nop
pop
mov
xchg
test
push
or
ss
dec
xchg
imul
add
ss
lret
loop
mov
push
pop
push
lcall
mov
mov
test
outsb
mov
xchg
gs
mov
dec
faddp
shl
pop
das
sub
sbb
cmp
dec
iret
mov
jg
out
iret
mov
inc
int3
jg
xlat
mov
dec
insb
js
push
add
inc
pushf
mov
cmp
movsb
jnp
push
fwait
scas
dec
aas
jae
out
fwait
add
in
jnp
gs
xchg
xlat
cmpsb
shrb
mov
jg
cmp
inc
sbb
mov
sbb
dec
jg
mov
cld
inc
push
les
lods
xchg
fldenv
scas
lock
shll
popf
xchg
add
std
lret
jae
mov
mov
mov
adcl
mov
mov
shlb
pop
mov
push
mov
xorb
push
imul
cmp
mov
aas
not
xchg
mov
sub
orl
or
addr16
inc
fdivrs
sub
daa
sbb
lods
sbb
pop
and
enter
mov
orps
pop
pop
inc
out
hlt
mov
or
jnp
pop
rcrl
jb
xchg
inc
int
inc
pop
test
pop
add
adc
stos
sub
jb
xor
std
sub
out
sbb
inc
pop
fcmovbe
out
decl
lret
lods
xchg
data16
xchg
mov
push
mov
fmulp
push
jp
fisttpll
movsl
mov
movb
add
lcall
inc
cmp
adc
sarb
and
or
orb
jg
pop
data16
add
repz
test
cwtl
arpl
ficoms
faddp
daa
stos
test
cmp
and
pop
add
mov
lahf
pusha
outsb
dec
mov
mov
lret
in
iret
in
loopne
cs
xchg
sbb
push
addr16
xor
rorl
dec
int3
cmp
je
mov
mov
dec
mov
mov
sub
mov
sarl
stos
repnz
xorl
pop
into
sbb
mov
or
pop
mov
iret
add
xlat
adc
rcrb
icebp
mov
mov
ja
fdivp
frndint
sbb
and
scas
sub
inc
cltd
push
pop
in
xchg
mov
rcl
mov
sbb
mov
mov
sub
push
add
mov
mov
and
pushf
call
pop
dec
xor
xchg
mov
test
sub
xchg
loope
xchg
aam
xchg
mov
inc
xchg
sub
lahf
sbbb
jg
jg
gs
mov
xchg
shlb
push
xchg
out
mov
inc
mulb
das
mov
xchg
and
mov
cmpsb
scas
rclb
and
dec
loopne
add
pop
xor
mov
rorl
divb
mov
inc
inc
push
cli
sahf
fimull
cmp
inc
push
mov
and
ss
mov
test
push
mov
add
nop
and
jb
sbb
cmpsl
test
es
xchg
scas
mov
stos
sarb
test
push
rcr
jnp
ljmp
mov
cmpsb
mov
sahf
mov
enterw
shll
xchg
mov
xchg
addr16
dec
cmp
lcall
xchg
ret
fidivrs
mov
lahf
scas
push
movsb
scas
mov
or
dec
enter
xchg
push
jg
push
movsb
mov
fisubs
inc
scas
xlat
cmp
out
mov
ficoms
push
mov
fisubrl
scas
out
cmpsl
bound
mov
mov
nop
sahf
xchg
ljmp
lods
or
mov
inc
dec
cmp
lret
mov
mov
stos
xchg
mulb
movd
mov
ljmp
add
cs
add
pop
data16
rcrl
sbb
nop
rclb
movb
test
mulb
and
and
adc
mov
loop
inc
sub
xchg
out
test
mov
dec
jp
daa
push
movsl
dec
sarl
push
xor
xchg
sbb
data16
inc
xchg
aam
icebp
insb
and
sahf
or
sbb
add
subl
jae
scas
inc
cmp
add
push
xor
les
sub
cmc
lcall
cmp
cld
mov
mov
call
stc
int
ficoms
xor
imul
loopne
sub
aas
xor
lods
inc
clc
dec
repnz
ficomps
sub
rcrl
test
ds
test
push
cmp
ljmp
jns
mov
pop
dec
dec
adcb
or
push
jle
out
sahf
imul
hlt
stc
jg
adc
jo
rorb
push
jl
cmp
cmpsb
ja
rclb
pop
pop
sahf
clc
inc
nop
sbb
inc
xchg
ja
push
xor
out
mov
dec
dec
xchg
push
or
pop
or
adc
xchg
lcall
inc
test
mov
lock
mov
mov
inc
out
xchg
sbb
mov
out
mov
cli
sahf
add
sahf
xor
cmp
add
jge
mov
cli
sbb
int
bound
xchg
mov
iret
sahf
sahf
and
scas
jp
xchg
inc
ja
sbb
sahf
sbb
test
sub
scas
xor
cs
mov
adc
dec
into
loop
scas
mov
cmp
sahf
fst
fildl
sub
or
outsb
push
sahf
cwtl
lea
inc
jp
es
jp
incb
add
mov
xchg
imul
jb
sbb
sahf
pop
ret
xor
sahf
mov
incl
fsubrs
loop
jb
dec
sahf
ficoml
inc
mov
sub
test
sahf
lret
xchg
dec
enter
mov
mov
ficomps
mov
repnz
adc
sahf
push
or
lret
ljmp
das
sar
fsubp
into
scas
enter
mov
sbb
mov
lahf
rcrb
push
les
iret
jp
scas
xchg
push
ret
pop
testb
rcrb
scas
rcr
cmc
jecxz
fidivrs
push
loop
aam
dec
call
mov
out
mov
sbb
out
fcmovb
xchg
mov
mov
xchg
pop
enter
mov
movb
push
mov
and
ret
lret
mov
repnz
rcrb
test
ljmp
mov
fidivs
xchg
add
sahf
mov
mov
nop
mov
adc
dec
sahf
xchg
adcl
sub
scas
ficoms
mov
testb
mov
jb
fidivrs
xchg
rcl
push
aam
or
icebp
fsubl
adc
and
fsubrp
repnz
lcall
addr16
mov
faddl
rolb
sub
mov
push
andl
movsl
dec
jmp
fxch
sbb
cwtl
test
data16
dec
dec
pop
nop
addr16
enter
aas
aam
insl
aam
lods
sahf
dec
mov
lea
mov
xchg
fiadds
and
push
out
dec
cmpsl
leave
sbb
and
pop
imull
xchg
out
push
or
rolb
out
aad
fldl
data16
dec
lods
push
push
mov
jae
or
mov
out
jl
mov
dec
cmp
mov
dec
test
imul
jmp
push
aam
rol
add
adc
stc
fsts
mov
adc
outsb
jo
icebp
lret
sahf
nop
addr16
adc
and
mov
xchg
and
clc
dec
mov
pop
test
add
inc
mov
lds
stos
sbb
sti
sbb
aad
push
mov
mov
xchg
dec
adc
cld
ljmp
mov
inc
or
mov
mov
cmpl
js
sti
jg
jmp
aaa
icebp
add
add
xlat
incl
sub
out
iret
push
out
stos
add
cmpsb
aas
dec
jo
push
into
cmp
add
pop
inc
mov
and
fst
lret
nop
mov
mov
mulb
imul
adc
jne
jnp
dec
inc
push
push
addb
inc
scas
inc
and
xchg
arpl
push
mov
je,pt
push
jae
fs
pop
mov
daa
xchg
mov
les
lea
inc
add
ja
jl
inc
mov
sbb
rcr
and
test
xor
sbb
push
sbb
addr16
dec
mov
rol
adcb
adc
loope
sbb
sbbb
mov
sub
lret
xor
or
and
lahf
mov
sub
inc
movsb
outsl
pop
jns
inc
lea
pusha
ficoms
shl
mov
repz
movsb
pop
int3
incb
add
mov
mov
repnz
pop
das
je
xchg
xchg
push
filds
inc
xor
jp
sbb
adc
movsl
addr16
push
loop
add
outsb
dec
negb
mov
dec
into
mov
adc
adc
or
sbb
movsb
bound
int3
fimuls
mov
push
stos
outsl
mov
push
mov
dec
and
mov
lods
ja
hlt
cli
pop
popl
and
leave
fwait
inc
cltd
xor
adc
fstps
jmp
pop
sbb
rcll
cwtl
xchg
out
cpuid
add
xor
push
fcmovu
shlb
icebp
aaa
jb
ror
xchg
and
movsb
ljmp
iret
push
mov
mov
sbb
fiaddl
jae
int3
push
ffree
imul
fs
inc
add
mov
jecxz
addr16
out
mov
fwait
lds
xchg
rcll
popaw
into
outsl
xor
test
inc
inc
in
jnp
data16
je
jle
push
push
out
pop
leave
mov
test
inc
addr16
lret
pushf
jg
cmpsl
push
data16
push
xor
sub
cmp
nop
pop
mov
adc
in
popa
cmpsb
inc
ficoms
enter
add
clc
mov
cmp
jecxz
addr16
pop
aam
inc
andb
movsb
mov
sbb
jns
jbe
mov
sbb
mov
repnz
mov
std
xchg
roll
inc
enter
ret
xor
mov
dec
inc
adc
sub
fisttps
pop
add
sahf
in
mov
add
xchg
out
and
int3
jle
or
cltd
fsub
scas
int3
push
aas
add
and
stos
outsl
mov
sub
jne
int
or
mov
popa
inc
sbb
cs
adc
shlb
mov
les
in
ljmp
xchg
jno
cmp
out
xor
ret
mov
in
aad
xchg
mov
xor
mov
out
data16
pop
inc
mov
in
stos
outsl
icebp
xchg
or
mov
add
stos
enter
stos
inc
push
inc
outsb
fxch
int
rolb
lcall
enter
lods
and
arpl
jg
out
sbb
rorb
pushf
or
fistpll
enter
outsl
nop
jbe
dec
int
xchg
adc
dec
pusha
orl
nop
add
jbe
and
dec
nop
faddl
add
in
push
sub
lods
inc
sahf
stos
pop
sbb
jnp
sub
cmpsb
shlb
or
scas
jle
mov
xchg
ror
nop
aam
sub
lret
js
std
insb
mov
scas
sbb
xchg
xchg
pop
inc
int3
and
push
fimuls
push
mov
lods
aas
fsubrs
inc
mov
lea
lahf
jge
inc
loop
test
pop
jno
sbb
gs
mov
xchg
sub
mov
push
jno
pop
adc
test
push
mov
mov
ds
shl
je
jne
xlat
rorl
insb
mov
ja
add
dec
sbb
inc
jl
xlat
je
imul
loop
add
mov
test
je
loopne
test
xchg
xchg
lea
std
stos
push
fwait
ja
mov
mov
fsubp
cmp
test
scas
in
mov
leave
xchg
ja
mov
cmp
inc
aaa
sbb
sti
push
insb
jnp
dec
mov
ret
push
into
filds
pop
sbb
sahf
movsb
aad
ret
call
dec
je
aas
mov
out
lods
or
jg
pop
or
cmpsl
inc
retw
pop
cli
lahf
ret
aam
out
push
rol
mov
sbb
insl
mov
sub
push
ljmp
into
xchg
xchg
sbbb
pop
pop
je
push
subb
fisttps
and
icebp
ljmp
sti
leave
jg
push
and
imul
push
jne
fwait
test
insb
bound
enter
cmpb
jge
xlat
push
movsb
jns
xchg
mov
test
push
loope
test
and
cmpsb
mov
shlb
lea
mov
out
into
int3
nop
and
movsl
mov
inc
push
mov
data16
arpl
xor
mov
sbb
and
add
mov
mov
xchg
les
testl
xor
sbb
or
mov
loopne
xchg
test
xor
inc
scas
push
aas
push
add
mov
xchg
mov
into
ljmp
scas
jl
popl
jge
aas
mov
loopne
mov
jo
dec
rclb
xchg
push
scas
inc
mov
enter
mov
sahf
call
stos
jae
push
test
cmp
test
std
ret
jl
scas
push
movsb
xchg
adc
out
clc
pop
in
rolb
or
add
mov
sbb
mov
ret
push
sub
inc
sahf
dec
lahf
addr16
mov
sbb
inc
mov
out
inc
push
push
jns
das
cmp
add
push
mov
xor
add
aad
cmp
es
das
pushf
mov
mov
ret
into
addr16
mov
sub
loopne
fcom
inc
incl
std
jle
stos
fistl
xchg
outsl
cld
lahf
clc
lahf
scas
mov
inc
xchg
inc
xor
addb
inc
nop
pop
xchg
aam
jmp
sbb
jbe
nop
nop
or
incl
rcrl
xchg
xor
push
sahf
jns
popa
adc
or
sub
daa
jmp
pop
shrb
adc
aas
push
das
int
nop
aad
push
out
icebp
lret
test
xorb
mov
mov
push
jns
push
push
andl
jo
test
shlb
ret
dec
mov
imul
cmp
fisubrs
addr16
or
xchg
pop
mov
pop
aam
sbb
mull
push
sbb
push
push
out
mov
xorb
adc
xchg
fsubp
lcall
xor
iret
insl
gs
pop
cmpsb
inc
je
jp
lods
jns
ret
or
scas
rcrl
das
adc
and
loop
xchg
lret
inc
lods
lret
sbbb
jb
jle
cmc
push
cmp
and
xchg
lods
imul
push
jbe
stos
or
mov
cmpsb
rcrb
les
testl
imulb
cmp
aad
pushf
sub
shrd
imul
pop
lahf
ja
js
push
xchg
push
rorl
jae
addr16
out
insb
je
pop
jl
movsb
push
pop
add
pop
or
sbb
cmp
int3
mov
sub
leave
mov
test
mov
xchg
gs
bound
jbe
mov
lret
xchg
add
add
mov
stos
loop
leave
fdivp
std
xchg
test
mov
out
fisttpl
loope
pop
xor
mov
mov
movsw
shrb
cmp
cmpsl
dec
and
addb
pop
jp
xchg
ja
hlt
nop
test
je
data16
imul
inc
orb
repnz
in
pusha
pop
aas
add
sub
lcall
mov
mov
add
idiv
push
lods
loop
inc
es
int3
mov
jne
mov
rolb
ljmp
addr16
popa
lods
inc
adc
nop
push
inc
inc
call
and
loope
lret
data16
xlat
loopne
aas
iret
add
inc
andb
sbb
cmp
mov
adc
icebp
arpl
push
jae
pop
xchg
jnp
cld
xchg
shlb
mov
stos
add
pushl
add
pop
out
fidivrs
movsl
outsb
pop
clc
xchg
fildl
push
or
jge
stc
cmp
sbb
xchg
mov
loopne
sub
add
arpl
lods
dec
rorb
mov
xchg
add
xchg
mov
xchg
xchg
pop
loope
iret
inc
mov
std
in
push
addr16
dec
bound
inc
xchg
add
in
push
aaa
xor
lock
mov
cmc
fildll
gs
cmp
add
ss
dec
cmpsb
stc
daa
jo
jg
pop
pop
loop
or
out
fwait
int3
fisubs
mov
data16
cmp
pop
push
xor
push
xchg
ret
repz
jle
out
into
inc
sbb
xchg
mov
push
je
lea
xchg
add
psubb
mov
sbb
sbb
dec
scas
pop
stos
inc
into
mov
and
push
nop
mov
adc
jb
jl
loop
andb
push
inc
push
loop
jnp
cltd
call
cmpsl
fs
add
add
mov
outsb
and
ja
jg
jp
sbb
data16
mov
and
inc
mov
mov
cs
jle
or
aaa
sbb
push
iret
push
outsb
mov
mov
push
xchg
pop
xchg
lret
xchg
inc
je
mov
mov
adc
popa
inc
shrb
mov
adc
inc
je
xchg
ret
mov
push
push
mov
scas
mov
add
cli
mov
cmpsl
mov
enter
sub
push
scas
aas
movsb
jnp
mov
inc
stos
xchg
dec
subl
dec
or
stc
mov
add
jnp
mov
movsl
mov
addr16
pop
dec
push
loope
pusha
fsubrp
sub
lods
jno
xchg
nop
jo
add
ret
imul
scas
xchg
scas
addr16
divb
fdivrl
loopne
jbe
jle
fsubrl
loopne
sub
fwait
xchg
gs
cld
add
push
mov
addr16
cmp
xchg
add
xchg
sahf
test
dec
mov
mov
or
adc
push
cmpsb
aas
inc
fwait
push
clc
sbb
dec
rcrb
clc
int3
cmp
and
fcomps
aad
insb
jb
cmp
xchg
xchg
rcll
lret
aam
push
in
idivl
outsb
scas
movb
les
inc
orb
jg
lea
push
orb
loop
scas
inc
push
push
js
enter
pushl
fdivs
mov
shlb
enter
int3
lahf
adc
push
loope
xchg
mov
push
pusha
sbb
sub
sti
push
pop
ja
inc
loop
sbb
sbb
fisubrs
mov
cmp
imul
xor
rcll
and
dec
xor
jecxz
cmpsb
add
jno
sbb
cmp
sbb
jb
movsb
or
mov
fistpl
dec
sub
sbb
out
mov
and
ja
xchg
mov
cmp
jnp
scas
imul
cmp
stos
hlt
inc
mov
test
inc
repz
push
mov
add
movsb
sbb
nop
data16
idivl
cmp
andb
dec
add
pop
push
mov
mov
addr16
push
aas
xchg
test
arpl
loop
dec
addr16
mov
inc
call
and
call
test
out
js
jno
jno
faddl
cmp
push
sahf
dec
or
lea
dec
repz
loope
jle
arpl
add
jge
mov
add
leave
mov
test
mov
mov
mov
rclb
adc
sgdtl
int3
dec
push
out
mov
push
fldenv
lea
int
jb
dec
push
adc
xchg
ret
jns
jae
push
je
cli
jp
mov
jp
adc
push
mov
addr16
lock
stos
out
shlb
scas
ja
jecxz
dec
hlt
cmp
rcrl
xchg
lahf
and
int
pop
shrb
iret
mov
movsl
jo
mov
sub
push
jnp
lods
dec
lahf
mov
movsb
adc
nop
pcmpeqw
es
pop
rol
mov
sarb
out
xchg
popf
adc
rcl
and
mov
jbe
jne
out
xorl
push
cli
and
add
fs
and
mov
les
lcall
xchg
lds
loope
push
adc
outsb
adc
adc
repnz
mov
jnp
aaa
inc
repnz
jl
adc
sub
stos
jae
movb
lea
adcb
outsb
addl
imul
inc
inc
jne
sbb
fimull
ja
fistpl
rclb
insb
jns
sahf
fnsetpm(287
xchg
cmp
outsb
bound
inc
mov
pop
sub
andl
dec
orl
xchg
ja
test
xchg
std
mov
mov
and
bound
daa
push
aas
lcall
mov
add
addr16
clc
les
xchg
mov
out
jnp
mov
sub
subl
test
inc
add
inc
test
data16
insb
test
imul
lret
sub
sub
lods
push
xchg
jae
and
mov
add
jbe
imul
leave
js
xor
inc
pop
and
aaa
pusha
es
jne
adc
aas
or
popf
subb
ror
iret
pop
stos
mov
add
popa
daa
rolb
lret
negl
bound
lcall
stos
data16
adc
lahf
cmp
shrl
fwait
hlt
mov
jno
lods
dec
add
adc
push
js
jp
fmuls
xchg
idivw
mov
fistps
sbb
out
and
fs
daa
adc
push
jae
mov
dec
xorb
rcrb
mov
push
jae
cld
mov
mov
pushf
xchg
xchg
mov
inc
push
fs
pop
adc
cmp
mov
mov
xchg
icebp
stc
mov
mov
test
push
loopne
in
dec
fimull
cmpsl
iret
inc
sub
cwtl
adc
mov
loop
jge
cmp
push
ds
iret
push
cmp
jnp
jmp
xchg
jae
mov
mov
cwtl
iret
xor
sahf
es
lea
dec
push
pop
fistpl
rorb
cmp
pop
xor
scas
adc
xchg
and
mov
stos
jbe
push
cli
ds
lock
imul
imul
dec
popf
mov
adc
xor
sahf
jg
xchg
dec
jl
lcall
pop
pop
cmp
sahf
fildl
inc
cld
and
ret
clc
xchg
sub
or
test
addl
addr16
push
xor
rol
jl
cs
cltd
xor
pop
jne
pusha
sbb
add
and
pop
jnp
out
mov
mov
js
sub
pusha
jg
stos
mov
aas
inc
xorb
pop
push
enter
add
ret
pop
and
addr16
jl
cmpsl
fidivs
push
add
imul
sbb
xor
jb
out
mov
sub
push
mov
lods
push
sbb
mov
rolb
leave
jecxz
aas
shrl
lds
mov
inc
xchg
icebp
pop
cli
fildll
movsb
inc
xchg
add
pushf
cmp
aam
rclb
pusha
fimuls
inc
mov
xadd
adc
dec
test
in
or
xchg
mov
outsl
out
mov
aas
mov
cmpsl
fmuls
dec
push
mov
ja
sbbb
jns
jl
cmp
xchg
add
dec
pop
lahf
jg
push
loopne
test
xchg
hlt
dec
and
daa
cltd
mov
jp
pop
sbb
lods
fidivrs
addr16
dec
incb
add
pop
mov
adc
jb
jae
dec
jnp
test
xchg
std
mov
mov
or
das
xchg
les
mov
pop
xor
rorl
arpl
sarb
iret
cs
push
pusha
push
dec
mov
mov
xchg
mov
and
enterw
xchg
aad
loopne
sbb
xchg
cli
outsb
and
mov
push
cmp
and
cltd
dec
nop
pop
push
dec
sub
sub
fwait
pop
idivl
xchg
roll
out
rorl
xor
dec
in
push
out
scas
mov
jno
jle
xlat
mov
adc
movsb
xchg
pop
jmp
cmp
ret
mov
sahf
add
lahf
inc
cmpsl
mov
push
ficoms
jp
jecxz
cmpsb
shrb
mov
lds
fldt
inc
loope
jne
and
mov
stos
sahf
stos
jae
adcb
das
ret
or
lcall
xchg
iret
push
inc
cmp
ss
enter
or
and
mov
lea
push
scas
leave
fcoml
leave
cli
aam
mov
dec
push
sbb
js
sbb
imul
mov
add
loopne
dec
jecxz
test
rcl
mov
loop
or
idivl
sbb
mov
xchg
sbbl
data16
xchg
mov
addl
hlt
cmpsb
inc
scas
in
test
js
xchg
xchg
sbbl
test
mov
and
mov
loopne
add
inc
inc
rolb
stc
push
aam
into
flds
jge
jo
adc
nop
fidivs
ret
xor
adcl
sbb
sub
lods
ret
iret
pop
mov
fstps
mov
and
icebp
dec
lcall
sbb
mov
outsl
aas
push
xorl
stc
fdivl
outsb
aas
inc
jg
or
jmp
and
jne
into
les
in
sarl
add
cmp
and
add
out
ds
xchg
test
pop
sahf
idiv
mov
inc
decl
jge
mov
jg
data16
stos
pusha
or
fwait
loop
add
in
out
mov
cmpsb
cmc
push
int
cmpl
into
scas
loop
fimuls
cwtl
xchg
inc
jl
int3
jae
mov
fisubrs
repz
xor
in
decb
jge
stos
cs
cmp
mov
fs
out
xchg
xchg
mov
pushf
in
out
call
rcl
imul
cmp
jg
fiadds
into
mov
mov
inc
sub
rolb
jnp
mov
js
jb,pt
fnstenv
xchg
sbb
rolb
jg
jge
pop
jge
inc
ja
cmp
mov
data16
add
inc
shrl
and
aaa
sub
sahf
out
and
lret
add
lea
repz
push
pop
and
or
dec
sub
push
filds
add
decb
inc
pop
mov
xchg
fldcw
mov
adc
push
jne
add
mov
sahf
jge
sub
push
gs
notl
jbe
lret
dec
das
insb
jle
jne
out
scas
les
sub
add
inc
mov
ret
mov
sub
inc
fcmove
repz
xchg
jl
add
sub
ret
loopew
testb
aaa
stc
add
jnp
xlat
add
push
fdivs
int
pop
mov
ds
inc
cmp
inc
add
push
inc
das
int3
subb
add
shll
xchg
addr16
inc
inc
movsb
pushl
shl
pop
sahf
repnz
ret
enter
stos
xchg
notb
cmp
cwtl
addl
scas
push
add
dec
loope
sbb
les
addr16
sbb
inc
lea
sti
insb
jp
xchg
addr16
jae
clc
ljmp
data16
mov
sahf
cli
add
mov
sbb
lcall
push
mov
lods
jge
inc
jmp
dec
out
test
rcl
push
inc
frstor
inc
and
arpl
pop
add
movb
xor
inc
inc
ret
pop
jnp
repnz
std
arpl
dec
adc
cmpsb
outsb
js
fcoms
xor
stos
push
jbe
lahf
test
dec
mov
pop
test
mov
popa
mov
test
jo
addr16
jo
push
mov
jae
xchg
xor
or
call
inc
lds
mov
mov
jmp
xchg
mov
ret
add
lret
iret
cmc
dec
mov
sub
lock
and
add
gs
xchg
ja
xchg
xchg
push
xchg
pop
ss
loope
cmp
faddl
mov
pop
shl
pop
lcall
nop
std
adc
jo
pop
inc
xor
scas
dec
fmull
jae
and
push
into
movsb
dec
jne
pop
inc
pushf
sbb
sbb
addl
or
clc
mov
xchg
jecxz
adc
addr16
mov
pop
aas
mov
les
jbe
lret
mov
int
or
or
and
lods
pop
stc
imul
jp
popf
iret
push
push
xchg
or
push
loop
inc
add
std
movsb
jmp
popf
ja
jne
nop
sub
push
lret
mov
pusha
mov
and
addr16
push
add
jbe
nop
clc
jo
xorl
pop
mov
dec
out
sarl
scas
dec
jg
js
rcl
call
or
mov
lods
mov
pop
adc
push
xchg
jg
jge
es
and
mov
sbb
lods
int
lret
inc
mov
inc
push
jne
daa
arpl
pop
pop
addr16
push
mov
mov
adc
int3
fcmovne
les
mov
mov
inc
jbe
mov
ret
das
cli
mov
in
pop
stos
sub
popf
subb
inc
xchg
dec
add
mov
lds
xchg
scas
cmp
iret
cmp
xchg
mov
ja
ret
addr16
sub
or
mov
inc
imul
mov
sahf
fmuls
fisubrl
mov
flds
dec
mov
dec
repz
out
and
shrb
xor
stos
dec
push
sub
xor
incl
movsl
cmpsl
dec
jae
fisubs
push
leave
add
movb
lea
pop
mov
popf
pop
insl
div
mov
sbb
pusha
adcb
lcall
xchg
mov
push
jl
test
add
outsl
push
and
or
loope
lds
lcall
imul
jle
sbb
insl
fisubs
sub
aas
mov
scas
inc
mov
lcall
mov
sub
dec
stos
data16
call
ds
js
add
mov
xchg
pop
xorb
mov
cmp
add
cmpsl
and
pusha
repnz
add
loopne
in
sbb
sahf
mov
jmp
push
aas
dec
mov
xchg
lcall
aam
jp
les
lods
mov
fildll
andl
subb
and
mov
pop
pop
shll
lret
xchg
cmpb
sbb
js
flds
sahf
jle
nop
push
xchg
xchg
das
jb
arpl
lods
mov
popw
adc
pop
pop
fisttps
jl
mov
jae
cmp
inc
mov
sub
mov
js
and
mov
addr16
fsubrs
psubusb
enter
es
std
jb
orl
dec
adc
xchg
jno
adc
lret
lret
dec
dec
jle
ds
orb
les
cmpb
pop
daa
jbe
data16
das
mov
mov
jmp
std
arpl
push
repz
movsb
arpl
stos
or
adc
mov
pop
data16
mov
or
or
lahf
dec
aad
call
dec
mov
mov
mov
lea
orb
adc
cmp
pop
rcr
mov
mov
xchg
adc
in
lods
xchg
bound
bound
xor
push
cmp
xor
into
int
cs
cld
sbb
dec
xchg
cmp
fsubl
fs
sub
or
dec
je
mov
push
ljmp
inc
inc
sub
repnz
mov
sbbb
add
dec
mov
out
add
dec
das
and
int3
jae
mov
ss
push
ss
xor
sbb
lret
xchg
add
pop
fimuls
pop
scas
mov
fisttpll
das
push
mov
xchg
movl
gs
movsl
jae
sarl
xchg
sahf
inc
andb
push
cwtl
push
add
dec
scas
and
pop
jg
add
lahf
xchg
ret
ret
iret
arpl
lret
push
scas
popa
fbstp
sahf
enter
shlb
stc
dec
mov
iret
mov
stos
cltd
in
scas
aam
js
int
jno
mov
sbb
lea
sahf
xchg
xchg
shlb
or
enter
xchg
shlb
mov
stos
loope
fcompl
neg
pop
pop
jecxz
adc
add
fnstenv
jae
icebp
adc
adc
jmp
add
mov
or
bswap
xchg
push
loop
push
popf
adc
mov
inc
sub
imul
pop
sub
je
adc
les
and
sub
push
addr16
jge
ret
jmp
shll
or
xchg
das
clc
or
ds
outsb
adc
cwtl
scas
xchg
addr16
or
out
subl
add
jo
sarl
add
jmp
daa
ss
push
and
cmpsb
imul
jnp
test
jne
cs
leave
dec
cmpsb
pushl
aas
push
fisubrl
xor
add
dec
jbe
loopne
loop
pusha
mov
adcl
fwait
scas
dec
mov
dec
jae
adc
outsb
inc
jne
shrl
cmp
sahf
xor
call
xchg
lods
push
xchg
fistl
mov
movsb
mov
ja
es
ja
bswap
mov
in
shlb
push
ljmp
mov
inc
movb
outsb
adc
pop
mov
jae
loop
mov
je
cmpsl
test
adc
jns
mov
lods
fldt
add
push
sub
icebp
addr16
aad
mov
xorps
adc
mov
jae
fistps
mov
into
inc
mov
pop
rcll
inc
add
loopne
jl
and
cmpsb
sarl
xchg
mov
dec
jmp
pusha
cmpsb
push
ds
lret
jp
dec
xor
xor
push
fiadds
inc
insl
nop
ss
loop
sbb
add
dec
mov
nop
jle
dec
sbb
outsb
add
push
push
addr16
mov
jae
cmp
or
mov
rcl
cli
mov
orl
mov
ret
lcall
icebp
xchg
call
mov
push
push
gs
out
scas
icebp
ja
scas
or
lea
jmp
xor
sub
or
in
xor
push
adc
mov
adc
in
xor
sbb
js
movsl
pushf
in
sub
fnstsw
xor
nop
mov
sbbl
mov
adc
mov
sbb
ss
cmpsl
xchg
cmp
push
jge
mov
pop
adc
js
mov
std
int3
push
pop
xchg
sbbb
xor
mov
inc
shrb
fsubs
cmpsb
or
mov
test
xchg
and
cli
movb
cmc
orb
mov
sub
push
pop
arpl
or
push
xchg
ja
xchg
mov
xchg
fcomip
les
or
push
add
repz
loopne
notb
mov
jbe
pushl
add
fdivrs
mov
mov
xchg
or
pop
cmpl
into
pushf
mov
push
mov
add
inc
outsl
add
pop
test
cmp
lods
jmp
or
xchg
mov
xlat
out
push
cs
loop
xchg
dec
xorb
xchg
adc
scas
push
subl
addl
cmpl
inc
inc
add
and
cli
cmc
mov
addr16
push
int3
jg
pop
out
mov
push
pusha
lcall
mov
and
fistps
add
nop
sub
ret
fs
push
mov
add
roll
push
sbb
aam
outsb
inc
add
nop
jp
push
sahf
lds
xor
pop
aas
loope
sub
add
divb
adc
mov
mov
or
in
sahf
out
orb
enter
repnz
xorb
mov
cmp
ds
xorl
sub
rcl
stos
gs
andl
dec
aad
inc
push
xchg
mov
inc
add
xchg
es
mov
pop
sbb
subb
pop
pop
mov
cmpsl
fistl
sti
mov
push
dec
jb
out
mov
jbe
nop
push
inc
push
push
mov
jnp
loopne
aam
leave
mov
pop
ja
dec
iret
movsl
xchg
jnp
addr16
aam
ja
and
cmp
data16
iret
stos
mov
mov
dec
cmp
addr16
mov
popa
mov
flds
into
aaa
loope
mov
inc
jnp
fcompl
leave
sbb
cs
pusha
in
daa
clc
into
dec
movsl
sub
add
mov
data16
in
aad
xor
aam
aaa
dec
sbb
les
ds
mov
cli
sarb
and
or
repz
pop
stos
daa
xor
movsb
stc
sbb
sub
leave
jb
jmp
inc
dec
lret
mov
push
inc
jg
inc
ret
mov
add
cmp
in
loop
data16
out
or
sahf
dec
ret
cmp
orb
ret
mov
xor
add
data16
rcl
adc
shlb
loop
data16
test
outsl
movsb
mov
mov
scas
xchg
addr16
lret
decl
je
test
mov
push
arpl
inc
jnp
cmpsl
aam
loop
jge
or
adc
xchg
data16
dec
add
push
jbe
shrb
bound
dec
leave
insl
aad
outsb
push
mov
inc
push
ss
popf
mov
arpl
fwait
add
push
lods
outsb
adc
mov
int3
insl
inc
add
mov
nop
mov
in
add
sbb
pusha
sub
enter
fcompl
test
xchg
dec
leave
jg
cmp
mov
sbb
ja
mov
leave
dec
sar
add
mov
jo
int3
mov
xchg
mov
jb
push
xchg
and
lea
lods
pop
lods
rcll
sub
add
sbb
push
cmp
inc
lods
fsubs
pop
pop
push
mov
lcall
out
fldenv
cmp
es
cmpsb
dec
cmp
jbe
cmp
and
stc
idivl
jbe
out
xor
int3
aad
dec
sbb
xchg
cwtl
add
xlat
jg
inc
xorb
dec
xchg
sahf
sub
arpl
lahf
scas
inc
out
push
mov
je
mov
movsl
mov
ljmp
lret
jp
popw
mov
stos
push
lcall
add
cmc
out
push
stos
insb
jbe
xchg
mov
cs
push
push
sbb
dec
lods
notb
fisttps
inc
jl
incb
jbe
fdivrs
xlat
lea
ds
cmpsb
dec
lock
lods
es
push
and
xchg
call
sbb
mov
push
sub
push
inc
scas
xor
fsubrp
lret
mov
mov
xchg
xchg
mov
sbb
out
clc
lds
mov
mov
dec
xchg
mov
outsb
xchg
les
xchg
mov
rcrb
vprotq
mov
decl
mov
xor
add
movb
andb
pop
mov
push
pop
adc
sahf
cmp
out
mov
ss
jp
xorb
pop
xchg
mov
mov
jbe
cli
lret
cmc
xchg
mov
xchg
scas
cmpl
and
sub
xchg
pop
mov
jg
jg
les
xchg
xchg
sahf
into
mov
xchg
movb
adc
xchg
xchg
pop
dec
xchg
sub
lret
mov
arpl
xchg
cmpsl
xchg
insl
jb
mov
lret
mov
inc
add
xchg
outsb
add
cmpsl
pushf
cmpsl
mov
stos
add
bound
mov
xchg
mov
je
inc
xchg
jb
outsb
mov
jmp
mov
push
mov
mov
xchg
lods
out
xchg
out
leave
dec
xchg
shlb
xchg
cmpb
add
mov
into
lock
shrb
inc
mov
rorb
out
inc
mov
ljmp
idivb
adc
mov
xchg
ret
push
mulb
mov
fiadds
sahf
pusha
nop
cmp
pop
out
out
xchg
stos
adc
xacquire
mov
out
mov
dec
rclb
je
push
push
xchg
add
data16
jp
fimuls
push
fidivrl
pushl
jle
mov
leave
mov
sahf
iret
xchg
xchg
xchg
mov
test
lret
jbe
dec
jae
add
pop
rolb
data16
cmp
fs
jae
and
cmp
lret
mov
fmuls
hlt
xchg
xor
ljmp
ret
insl
popfw
outsl
fsts
gs
stos
push
and
je
flds
pushf
popa
lcall
or
jno
cld
sbb
in
mov
add
imul
add
xchg
adc
out
int
ret
mov
sub
pop
fxch
push
push
cmpsb
and
and
in
popf
jae
hlt
pop
sar
xchg
mov
mov
pop
subl
xchg
je
fcmovb
push
push
aaa
nop
push
push
pop
pusha
mov
mov
addr16
sbb
mov
in
iret
xchg
ja
push
test
and
hlt
bnd
cmp
pop
xchg
outsl
pop
jae
inc
scas
push
cs
ja
cmpb
inc
push
push
je
pop
or
cmp
sbb
ja
xor
popa
leave
jae
orl
clc
bound
push
imul
sub
xchg
addr16
inc
neg
xchg
outsb
nop
fidivrs
sub
imull
repz
lea
xchg
jbe
inc
push
or
dec
dec
jl
inc
push
jns
xor
sarl
pop
pop
test
adc
into
xor
ret
popf
in
add
push
imul
mov
mov
cwtl
sub
in
dec
mov
pop
push
sbb
int
incl
pop
mov
dec
daa
add
stos
mov
subl
fs
mov
or
pop
push
dec
dec
notb
push
scas
and
xchg
xchg
loop
add
pop
pop
out
mov
sub
nop
insl
lock
rorb
stos
mulb
mov
cmpsb
adc
cwtl
and
enter
testb
popf
shlb
jo
js
fnclex
cmp
ja
les
push
mov
add
jmp
push
sahf
int3
push
pop
sub
xchg
pop
fwait
jae
add
xorb
data16
push
lea
outsb
addr16
adc
lds
cmpl
push
es
cmpsb
addr16
out
add
loopne
jbe
fdivs
and
pop
sbb
movsb
int
inc
adc
sbb
cmp
jmp
xor
cmp
xchg
dec
test
xchg
xchg
mov
pop
mov
push
enter
xlat
fisubs
and
popf
cmp
jg
inc
xor
je
mov
ret
dec
frstor
out
lds
jmp
xchg
pusha
addb
sahf
xor
addr16
push
sub
dec
jae
mov
flds
jns
lea
push
iret
ficomps
sahf
dec
xor
ja
out
mov
inc
addr16
out
cwtl
sub
orb
inc
test
repnz
js
in
adc
push
jae
pop
cld
pusha
ds
sbb
je
orl
int3
cmp
lahf
and
or
push
movb
jb
pop
sahf
test
dec
gs
and
xchg
inc
mov
dec
xor
xchg
mov
sub
sub
xor
adc
scas
negb
push
xor
mov
fisubs
xchg
pop
jb
mov
push
mov
mov
test
mov
inc
repz
push
out
rcll
aas
jb
mov
stos
inc
cmp
mov
mov
insl
test
sbb
nop
ret
aas
rolb
aam
lret
mov
out
rcll
pop
pop
and
mov
mov
sbb
dec
mov
xchg
test
sub
pop
mov
arpl
hlt
adcb
jmp
fimuls
int
das
into
adc
inc
rorb
cli
pop
and
cmp
adc
push
cmp
mov
mov
ret
enter
sbb
divl
imull
inc
xchg
push
je
push
addr16
push
movsb
sub
add
scas
jg
and
or
insb
mov
loopne
mov
and
int
mov
shlb
push
cmpsb
mov
jb
sbb
pop
adc
mov
mov
cmp
decl
enter
mov
stos
jecxz
sbb
mov
movsl
stos
or
in
xsave
push
ja
mov
xchg
sbb
fstpl
push
sahf
jg
stos
push
mov
adc
inc
dec
in
add
add
xchg
imul
fimuls
es
add
leave
fwait
lods
sarb
ds
lods
or
cmpl
les
aam
push
push
jbe
loope
xorb
lea
sbb
mov
hlt
jno
or
sarb
adc
and
jmp
dec
jmp
mov
add
repz
data16
aas
mov
lcall
or
cmp
lcallw
popf
cmp
mov
ss
ja
leave
adc
push
lds
notl
rcrb
dec
pop
mov
out
cs
rorl
sub
sub
pop
xchg
aam
stos
rcll
jp
insb
jo,pn
repnz
xchg
call
sub
jns
cwtl
arpl
addr16
and
sahf
cmp
mov
setle
push
addr16
pop
mov
int
push
out
dec
popa
pop
mov
pop
lret
mov
lahf
fisubl
test
cmp
add
data16
xchg
sub
push
push
addr16
pop
lods
xchg
data16
inc
jl
iret
inc
call
lahf
int3
sub
jnp
jo
cmp
add
push
shlb
sub
push
xchg
incb
mov
iret
js
ret
pushf
or
iret
xchg
rcr
mov
mov
adc
jns
lahf
daa
scas
mov
cwtl
mov
shll
cmpsb
test
bound
lea
inc
mov
dec
sbb
push
jmp
les
out
out
popf
and
lock
sbb
lock
xlat
movsb
rclb
fwait
shrb
clc
pushf
dec
pop
mov
dec
lsl
cmpsl
xor
dec
xor
inc
adc
jne
push
fwait
and
jne
xchg
xorb
jl
inc
or
sahf
push
sub
mov
scas
xor
mov
es
data16
mov
scas
adc
sahf
mov
aas
push
xorb
jl
adcb
jae
or
lret
mov
fs
xchg
repnz
loop
into
mov
cmp
or
scas
dec
call
mov
insb
cmpb
addr16
jo
pop
ret
mov
adc
jg
fs
pop
pop
loop
rclb
jns
repz
add
fiadds
jae
or
ja
sub
and
mov
inc
add
enter
cmpsb
mov
cltd
sub
push
clc
sbb
mov
leave
jne
sbb
cmp
xchg
push
shrb
push
lcall
das
add
jae
jg
fmul
add
mov
shrl
and
je
mov
cmpsb
inc
out
int3
jg
pop
jbe
inc
mov
lods
pop
andb
movsb
jnp
clc
scas
dec
cli
insl
in
lahf
jp
sbb
push
mov
inc
inc
xlat
cli
aam
aaa
iret
push
lret
mov
mov
xchg
clc
fcoml
jge
push
lcall
push
aad
aas
std
aas
scas
cmpsb
repnz
decb
fcoms
push
movsb
push
stos
jae
ja
push
inc
sub
cli
mov
inc
mov
imul
inc
mov
ret
jnp
mov
mov
adc
sti
mov
pop
nop
stos
xor
sbb
bound
pop
cmp
lds
les
out
push
xchg
lods
ret
xchg
pop
sti
lods
mov
jle
jne
push
dec
xchg
in
jo
dec
sar
adc
jnp,pt
int3
ds
scas
inc
fcmove
jl
add
jnp
test
dec
jmp
xor
loopne
xchg
das
cld
into
lcall
jns
iret
mov
das
mov
push
fs
das
jns
addl
xor
push
xor
movsb
inc
pop
mov
leave
sub
sbb
pop
addr16
mov
mov
insb
adc
ss
psubd
test
jl
adc
adc
icebp
repz
mov
mov
fsts
mov
cs
xchg
jl
andl
sub
dec
andb
sbb
mov
push
xor
inc
push
ss
das
lods
push
repnz
cld
dec
dec
movsl
xchg
dec
fisttpl
mov
movb
fwait
js
mov
jl
sub
fsts
stc
orb
sar
inc
and
jae
stos
push
add
mov
xchg
cmpsb
jbe
lock
inc
int3
cmp
or
dec
aas
push
xchg
pop
pop
movsb
repz
ss
nop
push
push
add
jg
push
leave
push
fdivl
lcall
shl
int3
fnsave
pop
mov
mov
clc
iret
ficoms
mov
add
je
data16
mov
xor
in
ja
scas
add
out
repnz
sar
jge
jbe
mov
cs
pop
jecxz
xchg
jg
inc
cmp
add
or
jp
push
dec
push
xchg
sbbb
and
in
mov
lcall
outsb
ja
cmp
into
mov
lock
pop
and
lea
scas
mov
sbbl
xchg
mov
push
inc
filds
jl
aam
cltd
les
adc
dec
pop
adc
jecxz
js
scas
cmp
and
mov
ljmp
xchg
popf
sub
jge
sub
push
lret
pusha
sbb
inc
push
xchg
lea
insl
sub
cmpsb
lret
mov
repnz
push
mov
bnd
push
cli
out
inc
xlat
sub
fistps
icebp
sbb
fsubp
and
push
ret
test
or
adc
jge
rolb
scas
lods
addr16
add
adc
push
sub
add
jae
pusha
aaa
push
xchg
jo
stc
inc
jb
cmp
idivb
mov
jg
fidivs
jbe
scas
sub
es
mov
outsb
sahf
shrl
cmp
push
or
push
adc
lret
cmp
leave
mov
jo
bound
lret
dec
mov
jo
mov
ret
inc
dec
test
xchg
mov
lock
repz
daa
add
out
xor
outsb
adc
or
xorb
xchg
jb
cmpsb
cmp
push
cmp
xor
sahf
rorl
or
out
sbb
push
orl
cmpsb
pop
cltd
bound
mov
loop
pop
mov
sbb
mov
lods
xchg
incl
aam
outsb
push
outsl
add
loopne
inc
lock
call
inc
aam
or
push
test
addr16
push
scas
jp
xchg
ds
jae
in
pop
cmp
mov
mov
dec
mov
sub
fidivrl
jae
fcomps
ljmp
jp
push
sbb
js
mov
xor
cmp
dec
ja
insl
mov
movsb
xor
adc
arpl
nop
mov
call
jmp
inc
je
xchg
push
cmc
adcl
or
adc
adc
sub
add
xchg
lcall
push
cmp
mov
inc
push
dec
les
jg
or
mov
sbb
jmp
loop
loopne
push
loopne
aaa
das
xchg
xchg
jae
adc
sub
or
push
cmp
bound
dec
jge
hlt
repz
sbb
push
iret
ja
xchg
xor
lret
pop
ret
mov
push
jae
push
adc
jae
jns
test
push
shlb
mov
fisubs
sub
push
push
xchg
or
and
out
stos
jae
pop
xchg
or
sub
push
ja
adc
rorb
pop
addr16
jg
orb
mov
inc
mov
sub
inc
or
jae
xchg
jbe
xchg
inc
lahf
jne
pop
jg
pop
pop
js
pop
jle
or
shlb
dec
ficoms
imulw
subb
aas
data16
iret
cmp
sub
addb
rolb
inc
xchg
push
pop
mov
fmull
sub
inc
stos
sbb
bound
movl
ds
dec
inc
pushf
into
adc
mov
movl
repz
rclb
push
lods
mov
loope
cmpsb
cli
call
add
jns
adc
xor
cmp
stos
mov
push
adc
cmpsb
jo
leave
je
jle
iret
xchg
push
lret
dec
lea
cmpsl
push
mov
xchg
insb
enterw
sub
and
lahf
popa
inc
orb
fs
enter
add
xchg
adc
jbe
out
add
xchg
add
add
fimuls
ret
std
xchg
inc
sbb
in
out
pop
shlb
mov
push
dec
movsl
sarl
fimull
push
ja
addr16
mov
pop
sbb
dec
or
lods
sbb
sub
fdivr
push
or
aas
mov
mov
bound
lock
mov
ret
jecxz
jp
adc
cld
xchg
aam
pop
inc
jo
cwtl
mov
out
mov
flds
je
fsubrl
mov
adc
ret
fadds
dec
leave
shlb
repnz
push
jge
mov
dec
stos
lahf
nop
jne
jae
xchg
adc
jo
ds
xchg
popf
xor
pushf
aas
push
adc
mov
jmp
adcb
cmp
std
repz
dec
out
in
int3
in
scas
xor
dec
test
xor
dec
cmp
jmp
mov
lods
es
sbb
dec
jle
or
fdivr
mov
add
rcll
sub
ljmp
fidivrl
pop
rclb
es
ja
push
movsl
cli
rolb
inc
jmp
sbbb
pop
pop
mov
xchg
xchg
ljmp
arpl
sbb
jae
mov
and
neg
jecxz
jae
lahf
dec
movb
adc
jmp
xchg
sti
lods
xchg
or
in
mov
int3
ja
mov
lock
into
fsts
push
xchg
xor
movsb
jg
sbb
loope
sbb
adc
push
sti
pop
fwait
test
sub
push
inc
incb
mov
jp
jno
shlb
daa
aad
outsl
or
pusha
jg
mov
sbbl
xchg
cmpsl
mov
dec
fisubs
mov
lret
out
out
add
fsubl
xchg
pop
rcrl
mov
cmp
push
and
jle
out
ss
lret
imul
sbb
test
mov
daa
and
mov
sub
adc
aas
aad
fidivrs
into
or
ljmp
push
push
test
xor
lret
mov
sahf
test
jge
aad
jmp
jbe
mov
movsb
test
sub
add
mov
dec
fs
lods
push
iret
shll
cmp
push
cmpsb
mov
rcl
ds
addr16
inc
pop
sub
or
xlat
adc
adc
lods
outsl
and
movsb
outsb
push
pop
lret
ja
xchg
ja
xchg
xorl
push
add
cld
addr16
xor
jnp
nop
or
lds
xchg
fimull
shl
rcrl
lds
mov
sbb
fldenv
pushf
push
push
dec
adc
data16
xchg
scas
sarb
mov
pop
aas
fbld
mulb
movb
daa
int
inc
dec
lock
mov
or
pushaw
pop
mov
sbb
cmp
mov
movsb
push
pop
es
push
push
mov
aad
dec
sbb
loopne
stos
xchg
push
in
jp
mov
addr16
pop
dec
hlt
scas
sub
std
addl
mov
ret
jl
leave
ret
jp
sbb
inc
mov
inc
ja
ss
sbb
int3
mov
push
jg
rcl
add
and
xor
jns
test
adcb
xchg
lods
dec
or
ret
aad
lret
loop
aas
incb
lret
inc
jmp
nop
mov
pop
push
ja
addr16
mov
fildll
ds
pop
cli
js,pn
movsl
or
pop
xchg
incb
xchg
pop
mov
or
je
push
in
push
stos
cmpsl
lds
inc
push
lcall
jnp,pt
sub
push
sarb
movsl
inc
xor
je
jbe
sbb
lods
scas
lds
pop
mov
pop
fidivl
roll
cld
add
adc
andl
dec
dec
mov
mov
sbb
movsl
and
cli
lds
out
add
stos
pushw
out
pop
fistpl
movsb
push
dec
push
mov
addr16
mov
fldl
cmp
mov
add
je
sub
inc
sbb
in
lods
lcall
dec
fucomi
shll
xor
and
pushl
cld
pop
movsl
xor
loopne
pop
lods
clc
aad
jmp
pop
das
push
frstor
jp
jmp
jg
push
pop
push
inc
and
jecxz
lret
mov
xor
mov
sahf
inc
jbe
dec
icebp
jmp
rcrl
pop
mov
fisubrs
imulb
or
add
fistps
ret
repz
cwtl
and
xchg
cmpb
xchg
andl
lret
sub
leave
jp
push
xchg
dec
dec
dec
sbb
lea
mov
push
fildl
mov
shll
out
pop
sub
addr16
out
rep
pop
pop
fldcw
jno
push
jl
mov
ret
add
outsl
rolb
mov
jg
test
popa
out
fimull
rolb
insl
frstor
shlb
mov
iret
addl
and
aam
hlt
cmp
pop
jmp
popa
lods
and
int
aam
sbbb
pop
iret
aad
shrb
in
shll
lods
and
lods
pop
call
sbb
jmp
out
cmpsb
into
icebp
xor
scas
test
or
call
adc
fimull
mov
cmp
push
out
pop
inc
inc
lods
sbb
add
aam
and
sbb
or
xchg
stos
sub
inc
mov
mov
inc
sbb
int
jbe
inc
dec
and
imul
jecxz
pop
jno
stos
adc
pop
js
adc
loopne
adc
inc
stos
push
pop
hlt
loopne
sahf
scas
data16
aam
jno
cmpsb
or
insl
and
cwtl
nop
shll
dec
into
or
fcoms
enterw
add
adc
insb
cltd
pcmpgtd
mov
mov
jae
dec
fwait
push
imul
cmp
mov
insb
xlat
jae
cmp
cmp
inc
sbb
mov
mov
inc
jmp
lea
pop
adcb
outsl
pusha
or
jbe
rclb
sub
xor
mov
xchg
cmc
cs
sub
stos
loope
or
cmp
push
jnp
data16
push
jp
xchg
test
sub
rol
stos
push
and
push
jno
lea
jne
repnz
lock
inc
push
inc
insb
mov
sub
outsl
fldcw
leave
cltd
inc
or
mov
out
and
in
adc
rolb
and
popf
into
pop
mov
cmp
adcl
lods
jg
jecxz
movsb
hlt
mov
and
jns
cmpl
popa
xorb
jo
leave
outsb
xor
sbb
aaa
ficompl
xchg
lret
out
into
adcl
add
mov
scas
dec
fimuls
and
fimuls
xor
xchg
xor
fldt
lods
inc
ljmp
or
movsl
cmpsb
jg
xchg
and
pop
insb
add
push
sbb
in
or
enter
cmp
mov
das
and
mov
rorb
mov
ja
les
pop
push
mov
fcoms
inc
mov
data16
sbb
ljmp
stos
xchg
jbe
notl
repz
das
test
adc
aam
push
adc
xchg
fisubs
int
or
addr16
rcr
test
mov
and
cmpsb
lcall
aad
lds
inc
jl
cli
pop
test
ret
pusha
sub
clc
push
mov
sahf
sub
or
shll
mov
ds
mov
sbb
pop
aaa
not
clc
stos
dec
sbb
xchg
cmpsb
shlb
dec
lods
stos
nop
inc
fdivl
cli
sti
mov
aas
add
dec
out
and
inc
roll
scas
add
sub
fwait
mov
inc
loop
shl
adc
xchg
ret
addr16
mov
xlat
ret
cmp
fwait
cmp
pop
inc
jp
xor
test
lahf
mov
fldl
push
movsl
data16
jp
bound
loop
leave
mov
int3
and
cld
jbe
lea
jae
cmp
jo
addb
aad
cmp
xchg
mov
sbb
nop
jl
mov
ret
mov
subb
jmp
mov
fcom
sbb
jp
imul
cltd
cli
or
rcrl
imul
jg
pop
out
cmp
popf
mov
xchg
adc
jb
ja
fisubrs
aam
sbb
or
xchg
add
push
mov
jmp
xor
xchg
rcrl
dec
scas
add
dec
adc
push
push
jg
lret
sbb
adc
mov
mov
call
in
pop
jge
scas
push
pop
cmpsb
fdivp
push
fisttpll
scas
push
popa
repz
movsl
ret
jo
xlat
std
addl
dec
ret
xchg
arpl
xor
cld
scas
std
test
cmc
mov
ja
fsubs
push
or
xchg
data16
out
xor
xlat
movsl
mov
mov
add
mov
loopne
pop
mov
pop
sbb
jae
jbe
adc
xchg
inc
sar
insb
mov
pop
add
pop
push
scas
je
lock
jp
popa
jecxz
fwait
mov
fs
xchg
scas
imul
jae
scas
cmc
arpl
scas
int3
ljmp
movsl
sub
sub
leave
scas
xchg
xor
out
add
aam
pusha
inc
mov
mov
mov
push
nop
jmp
dec
push
mov
mov
out
call
lods
fsubrl
shl
subb
sbb
stos
inc
jl
mov
lret
jnp
sbb
or
or
ret
add
test
adc
pop
incb
add
das
mov
mov
shll
inc
cmp
in
mov
pop
adc
mov
out
xchg
in
rcrl
lret
fsubl
sahf
mov
push
mov
fsubrp
cmp
xor
mov
mov
test
mov
ss
pusha
mov
jp
inc
roll
aad
mov
cmp
adc
lret
mov
stc
lret
data16
imul
lea
aaa
push
pop
ret
cmpsb
dec
aas
aas
outsb
ficomps
inc
push
adc
add
cmp
or
pop
mov
les
inc
mov
xor
or
push
cs
or
cwtl
lret
inc
fldcw
xchg
pop
test
ljmp
mov
test
cmp
lret
lods
add
iret
xor
push
inc
cmpsb
mov
cmp
jbe,pt
jnp
xor
adc
fdivs
or
loope
and
pop
xchg
js
inc
das
adc
rcrl
lods
push
aaa
clc
inc
movsl
pop
mov
test
sahf
pop
insl
les
push
and
jne
arpl
mov
fiadds
adc
out
stc
test
add
pop
das
jl
or
out
inc
sub
fisubl
leave
mov
into
out
or
mov
push
jae
dec
cmp
sub
mov
pop
mov
jno
mov
stos
mov
outsb
dec
cwtl
rcrb
jne
xchg
leave
ja
or
and
mov
jns
ret
cmpsb
stos
addr16
into
aad
movsb
sarl
aad
fdivrs
mov
mov
test
jg
into
out
js
daa
mov
int
xor
inc
pop
icebp
jnp
xorl
ja
or
jge
test
pop
scas
ja
jb
ror
push
popf
cmp
cmp
lods
fists
inc
pop
jl
dec
mov
or
jl
jae
jbe
pop
data16
daa
add
push
fdivl
divb
out
repnz
inc
push
mov
incl
xor
lods
add
loop
enter
lret
inc
jae
test
sbb
fisttps
push
xor
inc
js
sahf
pop
xorb
pushf
add
cwtl
fnstsw
lods
xchg
shll
mov
adc
xchg
jl
dec
mov
xchg
sbb
aad
imul
xchg
mov
or
mov
aas
addr16
aaa
sbb
pop
cmpsb
cmp
push
mov
ret
or
leave
divb
add
jg
push
push
sahf
lret
mov
movaps
imul
sbb
mov
in
fs
scas
pop
ja
add
in
mov
das
mov
pop
dec
push
out
mov
lahf
mov
mov
andb
mov
ret
xchg
dec
push
push
and
cmp
add
jp
pop
or
mov
sahf
xchg
je
rclb
inc
xchg
scas
push
cmp
mov
mov
add
cmpsl
inc
data16
or
dec
scas
add
xchg
fisubrl
outsb
test
test
sub
movsb
mov
mov
xchg
sbb
stos
adc
cltd
xchg
push
jo
sahf
sub
movsb
sub
pop
mov
shlb
pushf
push
ret
orb
xchg
out
mov
jne
push
dec
mov
dec
push
ljmp
push
lods
xor
rcl
in
movl
cld
add
mov
sahf
cs
iret
js
loop
mov
aam
faddl
cs
shrb
mov
sahf
add
dec
jbe
jmp
push
pop
test
or
or
push
adc
inc
or
cmpl
dec
xchg
imul
lods
sbb
stos
inc
adc
sub
mov
cmpsb
xor
xor
outsl
notl
cwtl
inc
pop
mov
jnp
addr16
iret
in
stos
dec
sub
pushl
test
sub
sbb
arpl
les
jg
add
cmpsl
xor
mov
mov
mov
or
jbe
inc
daa
dec
xchg
rorl
out
or
into
inc
sahf
stos
xchg
outsl
gs
stc
push
sub
add
xchg
mov
addr16
cltd
add
jecxz
lea
je
jns
sub
insl
dec
push
xchg
aas
pop
jge
iret
jno
das
dec
stos
mov
loope
cmp
clc
jg
jmp
xchg
sub
push
call
adc
push
stos
fisubrs
hlt
outsb
out
cmpsb
movsl
mov
out
mov
mov
data16
and
xor
push
or
movl
fistpll
jecxz
scas
jmp
aas
xchg
nop
sarb
loop
mov
mov
jae
mov
xor
dec
add
xor
sub
push
inc
les
adc
cld
test
mov
add
es
in
mov
sub
add
lods
popa
sar
pusha
mov
pop
jle
push
xlat
aad
cmp
or
lock
mov
and
fsubp
mov
int
inc
xchg
sbb
xor
lods
mov
push
mov
movsl
mov
add
ljmp
fiadds
xor
rorb
dec
fnstsw
xor
jne
adc
je
dec
dec
inc
sahf
and
das
mov
mov
or
mov
sbb
pop
sub
test
adc
sbb
xor
push
and
xchg
cmp
sub
or
xchg
dec
mov
mov
pusha
pop
int
push
imul
mov
cmp
jne
repnz
pop
xorb
or
xor
add
mov
or
push
mov
lret
cmp
addl
mov
or
sbbl
int
add
movsl
fdivrl
faddp
popf
insl
inc
int3
or
sti
int
rcll
addb
or
out
push
adc
repnz
push
shlb
xor
out
inc
je
inc
sub
ret
dec
dec
inc
pslld
mov
ja
aam
or
xchg
add
sbb
les
mov
xchg
sbb
roll
mov
add
cli
test
sub
rcrb
aaa
icebp
adc
pop
jno
sbb
aad
and
add
in
scas
or
int3
js
adc
aaa
or
jae
push
call
mov
fwait
addr16
mov
movsb
jle
pop
or
push
mov
out
in
je
repnz
mulb
cmpsl
dec
xor
cmp
cmpl
xchg
adc
movsl
xor
cli
call
outsb
and
dec
xor
jae
outsb
xchg
aaa
stos
mov
cmp
adc
test
das
push
pop
loope
sub
cli
into
daa
xor
sbb
nop
dec
pop
cli
mov
or
mov
xchg
or
lds
out
inc
pop
jecxz
pusha
adc
or
mov
add
adc
sub
mov
fisttpl
test
cmp
hlt
add
pand
sbb
test
in
in
in
push
and
jnp
jmp
jae
test
inc
xchg
xchg
inc
outsl
data16
fcmovnb
leave
mov
push
pop
xchg
dec
pusha
mov
and
jb
dec
data16
addl
sbb
fstps
lret
fsubp
xor
dec
jp
pop
push
fldpi
mov
imul
arpl
addr16
mov
fwait
jne
mov
jl
cli
jae
sahf
cmc
test
es
outsl
out
add
adc
mov
sbb
ds
adc
fisttpl
addr16
xlat
sub
into
dec
out
mov
dec
ficomps
das
insl
mov
mov
mov
faddp
enter
mov
aas
pop
mov
addr16
bound
push
es
cmp
sahf
mov
mov
sbb
in
cmp
out
jnp
test
aas
dec
pop
pop
mov
enter
mov
inc
and
lret
jp
xchg
xor
stos
rclb
jecxz
imul
cmp
pop
es
jns
repz
and
xchg
mov
push
and
lea
mov
stc
rcll
mov
adc
cltd
punpcklwd
mov
cmp
inc
and
push
fidivl
stc
xlat
fildl
pop
repz
lret
imul
aam
inc
push
cmp
stos
iret
sbb
mov
test
mov
into
enter
mov
mov
jo
rcr
cmp
cmp
jge
xor
xchg
lods
lock
je
sub
xchg
adc
mov
ficomps
lock
jle
popa
xor
fisubs
jmp
pop
jne
inc
out
jge
jg
add
imul
lods
into
daa
sub
lods
mov
sbb
scas
ljmp
fcompl
fsubp
in
outsb
push
mov
rcrl
push
outsl
cs
jecxz
fnstsw
inc
adc
and
mov
mov
fisubs
mov
fcoml
push
sbb
dec
xchg
movsl
push
jb
fsub
rcll
mov
mov
imulb
xor
rorl
jg
dec
ret
sub
hlt
add
jge
push
mov
bound
out
jne
jmp
imul
in
push
mov
push
push
leave
add
adc
inc
pop
cld
push
pop
jg
and
sub
ja
or
cmpsb
cmp
inc
cmpsl
jge,pt
jb
push
fadds
mov
jo
jg
sub
jge
or
sbb
add
daa
test
dec
or
addr16
fidivrs
test
push
es
addr16
or
push
lcall
xchg
into
jb
dec
mov
xchg
sbb
adc
jae
mov
popf
push
sub
lret
add
cs
pop
pusha
jle
lods
or
mov
je
fistps
mov
xchg
cmpsl
dec
mov
enter
or
or
lret
cmc
lret
pop
sbb
cmp
sbbb
incb
idivb
mov
fidivs
mov
inc
mov
fcoms
xorl
xorb
mov
sub
pop
and
push
cmp
adc
or
rclb
inc
movsb
icebp
lods
xor
jbe
adc
clc
int
push
je
sub
ja
jle
imul
pop
addr16
push
push
lods
cmp
inc
cld
dec
adc
xor
fstpt
lcall
cmp
dec
dec
add
repnz
movsb
mov
fimull
mov
aam
icebp
sub
xchg
mov
call
fstpt
in
mov
jnp
cwtl
inc
outsb
adc
dec
cmp
scas
js
fistpl
test
mov
adc
nop
aas
pusha
test
dec
test
sub
lds
jnp
scas
rcrb
dec
mov
sti
adc
ret
xchg
fcmovu
cmp
mov
daa
push
cmc
and
shr
bound
inc
cld
push
movsl
lock
xor
dec
xchg
aad
push
push
push
inc
stos
pusha
call
out
jmp
loopne
push
pop
iret
inc
push
test
data16
xorb
push
jmp
mov
ljmp
cmpsl
xchg
or
or
stos
xchg
addr16
push
xrelease
je
cmp
jo
out
add
cmp
push
mov
dec
inc
mov
dec
jge
lods
ja
pushf
shrd
mov
cld
dec
cltd
sahf
pop
stos
or
ret
aad
push
mov
stos
jl
loopne
in
ja
mov
loopne
fcompl
sub
xor
add
jbe
push
push
push
dec
ss
iret
mull
cmp
mov
into
cmpsb
mov
mov
push
add
inc
jbe
xorb
pop
gs
push
sahf
inc
inc
addr16
add
dec
push
sub
lret
lahf
add
mov
inc
insl
cmp
sbb
int
push
shll
leave
add
dec
mov
movsb
xor
leave
sub
dec
lods
into
dec
pusha
cmpl
add
ss
mov
xor
add
les
repz
dec
mov
push
and
outsb
mov
jp
cli
cwtl
movsb
cld
mov
ja
js
pop
jge
test
outsb
jbe
cli
fists
je
les
fdivrl
arpl
daa
mov
cmp
inc
sbb
loopne
sub
jle
jl
int
fsubl
or
outsl
incl
mov
cs
ror
add
dec
into
mov
mov
pop
sti
and
or
push
jge
dec
fiadds
je
fstp
cmp
stos
xchg
jae
idiv
out
mov
xchg
lods
das
jo
out
dec
mov
push
mov
mov
ss
xor
fs
in
loope
and
or
pop
add
or
insb
stos
mov
or
pop
pusha
adc
jnp
mov
popf
into
add
addl
test
inc
dec
mov
in
mov
xchg
xchg
movsb
dec
sub
jae
xor
jle
insl
jg
ja
mov
sub
shlb
dec
fmull
pop
insb
into
xor
mov
jns
add
inc
cmp
cltd
lret
pop
xchg
fimull
scas
push
fidivl
xchg
xchg
inc
xchg
add
or
call
adc
jmp
incb
inc
sahf
cmpl
imul
cmpsb
scas
out
mov
add
adcb
adc
cwtl
decb
adc
and
or
jecxz
xor
adc
mov
xchg
cmpsb
pop
loopne
xchg
push
xchg
xchg
xchg
es
mov
dec
xchg
mov
stos
push
xchg
pop
xchg
mov
lds
xlat
inc
and
ljmp
xchg
test
mov
mov
and
call
pop
iret
pop
inc
add
fiaddl
add
pop
mov
dec
pop
es
lret
push
mov
jp
aad
or
dec
sbb
movsl
testb
dec
mov
into
add
mov
add
shll
out
lret
cmpsl
bound
xchg
push
xchg
jmp
xor
out
push
adc
inc
sahf
data16
and
dec
xchg
scas
xchg
sbb
push
retw
mov
push
out
sub
bndldx
mov
pop
xchg
cmovle
add
ljmp
xchg
push
and
jp
push
add
dec
jbe
push
iret
add
mov
sub
push
push
or
incb
add
push
inc
cmp
test
aam
iret
inc
xchg
sbbb
push
add
add
adc
add
ljmp
sahf
aad
and
xor
cmpsl
es
jle
ret
lahf
ds
inc
xchg
inc
repnz
nop
push
jecxz
nop
push
in
scas
add
and
test
push
or
push
mul
out
inc
cmpsb
push
inc
movl
movsl
jg
mov
push
mov
mov
push
pop
sbb
add
loopne
shr
sarl
add
bound
inc
xor
je
inc
jbe
je
lea
das
xor
arpl
imul
in
xchg
pushf
movsl
fildl
inc
adc
fcmovu
xchg
repz
or
popa
jg
test
sti
add
push
dec
cmpsl
lock
jl
cmp
lock
or
rol
sti
xor
cld
adc
or
test
adc
cmp
pop
mov
push
dec
add
or
pop
movsl
push
jp
lea
xchg
pop
je
and
xchg
cltd
pop
cmc
push
outsl
inc
inc
push
xchg
aad
lea
shrb
dec
scas
and
mov
stos
cli
push
flds
adc
hlt
test
sahf
frstor
rcr
push
andl
cwtl
shl
mov
ds
aam
mov
jg
inc
push
das
mov
stos
and
adc
push
xchg
data16
mov
sahf
or
mov
dec
jb
lods
sub
push
addr16
xor
dec
fldt
insl
mov
roll
lock
faddl
cmp
add
das
outsb
push
rcll
xor
movsb
xor
or
xchg
leave
cmp
movsb
push
xor
lahf
mov
stos
mov
or
movb
mov
test
mov
popf
adc
cmp
xchg
mov
cmp
insb
xchg
adcb
mov
ret
lcall
or
jmp
inc
adc
fcompl
scas
ret
mov
push
push
lods
or
nop
mov
jg
mov
cmp
sbb
adc
cld
inc
lds
jl
xchg
repz
jle
mov
and
cmc
outsb
xchg
int
xchg
or
xchg
push
xchg
mov
inc
xchg
pop
and
mov
dec
adc
jge
sahf
ret
inc
xchg
mov
or
in
scas
int3
sar
inc
adc
mov
push
lds
push
mov
sbb
jbe
popf
inc
jo
shl
repnz
jg
iret
or
loopne
lock
ljmp
mov
cli
dec
cs
faddp
xchg
scas
xchg
mov
mov
mov
es
and
sub
xchg
mov
fisttps
fs
pop
sahf
mov
jmp
adc
mov
lcall
push
xchg
jne
and
aam
and
sahf
adc
sahf
and
mov
or
push
xchg
aam
xchg
lret
sahf
xchg
dec
mov
pop
inc
adc
into
xchg
lahf
lret
mov
mov
imul
and
aam
ljmp
mov
push
iret
push
mov
fimuls
stos
xchg
rorl
pushl
xor
mov
add
xchg
into
lds
repnz
mov
les
sub
xchg
xchg
mov
pop
xor
xchg
into
mov
or
data16
mov
jbe
andb
mov
mov
call
mov
es
mov
imul
adc
shlb
fildll
test
sbb
add
add
nop
ret
mov
ret
aaa
mov
push
data16
sub
faddp
scas
xchg
stos
les
mov
mov
cmpsb
push
inc
mov
mov
bound
lret
push
push
mov
mov
loop
cmpsl
jp
push
ret
push
mov
adc
movsl
inc
lods
je
sub
cmp
leave
sub
dec
xchg
ja
fcoml
lcall
lea
push
cmp
arpl
test
faddl
popa
or
mov
add
mov
jne
push
movsl
sahf
mov
mov
lds
scas
pop
aad
leave
xor
mov
scas
aaa
xchg
fs
nop
sbb
push
test
adc
incl
jp
add
inc
ds
jl
jne
daa
inc
cli
outsb
jo
inc
pop
jmp
xchg
movsl
aam
scas
lods
orb
lods
ret
lods
sbb
rcrb
pop
nop
stos
pop
xchg
mov
cmp
add
sub
cwtl
in
xchg
sahf
and
xchg
js
or
addr16
dec
xor
inc
jb
push
sub
mov
mov
dec
pop
scas
dec
sti
das
xchg
js
int3
dec
shl
daa
inc
add
cs
sarb
add
sub
mov
sbb
fisubs
loop
ret
and
adc
mov
test
add
js
mov
fdivp
jbe
push
jl
je
inc
pop
dec
lods
or
es
mov
int
js
decb
mov
loope
sub
stos
sbb
in
adc
push
aad
push
sarb
add
out
movsl
mov
out
mov
mov
push
sahf
out
aaa
adc
mov
adc
hlt
jmp
xchg
shlb
cld
scas
inc
sub
inc
dec
pop
loop
add
ds
push
ret
cli
jb
dec
mov
adcb
popa
out
outsb
dec
push
addr16
sub
or
cli
sarb
ds
shl
fistps
stc
movsl
xchg
imul
add
push
es
cmp
sbb
jns
ficoms
addl
repz
dec
mov
jg
inc
stc
addr16
pop
add
adcl
mov
push
popf
lret
inc
pop
fisubrs
data16
push
int3
daa
adcl
mov
mov
push
imul
pop
or
hlt
or
inc
ljmp
out
clc
adc
mov
push
movsb
fdivl
sahf
mov
loop
mov
pop
push
sarl
mov
sub
fidivrl
hlt
sub
mov
or
std
xchg
push
cmpsb
sar
jne,pt
push
stos
push
pop
data16
dec
and
jae
cmp
roll
stos
test
or
xlat
or
insb
jecxz
jge
dec
lret
daa
mov
push
push
xor
adc
ljmp
decb
mov
inc
mov
pop
push
pop
in
pusha
xchg
test
imull
movsl
cmp
inc
addr16
dec
lea
or
int3
stos
fdivrp
mov
add
jb
das
les
stc
jae
xor
sbb
cmpsl
outsb
lcall
data16
icebp
sbb
sar
scas
or
or
lahf
cltd
int
pop
push
pop
xchg
loopne
aad
daa
movsb
or
mov
jae
sbb
dec
ret
add
fsubrp
jmp
mov
jae
push
cmp
push
add
pop
mov
sbb
adc
pop
into
mov
mov
subb
inc
es
cmpsb
push
and
rorl
push
lods
add
mov
pushf
or
in
pop
int3
adc
cmpsl
lods
jno
xchg
inc
lcall
in
inc
pop
xor
dec
popa
out
inc
aaa
inc
sbb
es
jg
in
push
gs
mov
add
dec
inc
dec
test
fnstenv
outsl
addl
ljmp
nop
sbb
xchg
sarl
xchg
sbb
cmp
inc
jne
xchg
shl
xchg
sbb
shlb
mov
xor
jns
xchg
rol
out
mov
enter
cli
pushf
mov
cs
repnz
inc
movsb
cs
mov
int
cmpsb
mov
sbb
jnp
push
icebp
pop
pop
mov
xchg
fisubs
test
xchg
cmp
pop
sub
push
push
add
adc
mov
sub
dec
lods
fucomp
inc
pop
insl
bound
fdivrl
jnp
adc
cmc
mov
mov
xchg
xlat
pop
fstps
adc
push
adc
sahf
jl
int3
les
jecxz
shrb
addr16
xor
jnp
add
inc
rcrb
pop
mov
lcall
rorl
jnp
movsb
jp
pop
sub
gs
ja
iret
cmpsl
pop
sbb
add
pop
mov
call
loopne
fucomip
mov
jae
lods
leave
repnz
ds
cmp
cmpsb
xchg
data16
ljmp
shll
xchg
fucomp
aas
call
mov
stos
push
fidivl
sahf
sbb
popa
adc
inc
pop
gs
cltd
push
sbb
aad
sub
push
xchg
cwtl
mov
cmpsl
out
fwait
lcall
ds
aas
out
push
repnz
popa
outsb
ljmp
addb
lret
or
dec
mov
pop
fcomip
subl
aam
pusha
push
pop
fdivrl
mov
xlat
fdivrs
addl
je
push
push
xchg
dec
fnstcw
push
test
ficompl
push
popa
xchg
data16
mov
xor
or
jae,pt
sub
test
xchg
pop
xchg
out
mov
rolb
mov
push
ss
idiv
cmpsb
cmp
jl
xor
cmpsw
sbb
lock
aad
xchg
jns
test
xchg
push
inc
sti
test
or
int3
xchg
ret
stos
xor
cld
pop
int
fbld
fldcw
ss
lcall
add
push
int3
sub
fs
xchg
xchg
outsl
and
imul
or
cwtl
sbb
push
ljmp
insb
mov
dec
inc
or
cmp
or
or
dec
adc
insl
lahf
dec
popa
or
mov
xchg
fadd
sbb
sub
dec
mov
jmp
push
and
es
cmp
cmpsl
loopne
repz
push
xchg
stos
xchg
lcall
lahf
pop
adc
jo
daa
jnp
jbe
cmp
jns
xchg
lods
mov
cmp
fst
inc
imul
daa
jmp
adc
mov
pusha
lods
nop
and
movsl
cmpb
orl
jge
je
pop
inc
add
test
dec
inc
arpl
pop
push
cmp
loope
or
test
mov
out
jmp
call
and
ret
cmp
lods
sbbl
mov
push
mov
pop
and
pop
dec
inc
jne
outsl
lods
push
repz
inc
ret
into
mulb
testl
gs
jmp
inc
push
es
in
cmpsb
sub
mov
cmp
and
or
pop
push
imul
mov
xchg
sahf
mov
cmp
mov
adc
and
mov
enter
cmp
repnz
mov
mov
add
xchg
orl
mov
adc
mov
pop
xchg
push
jl
mov
sub
mov
fidivrl
pop
sub
lret
xchg
mov
ljmp
sbb
lret
pop
xchg
or
test
gs
push
scas
push
add
push
ja
roll
call
clc
mov
jp
mov
loop
jns
jno
jecxz
out
jge
dec
test
push
call
jecxz
pop
shrb
dec
xchg
mov
fmul
dec
pop
xchg
mov
xchg
daa
cmpsb
std
sub
testl
sub
cmp
fists
mov
add
sti
jecxz
adc
aam
add
fs
mov
nop
nop
jge
add
stos
dec
mov
mov
dec
aaa
dec
enter
jge
push
xor
dec
jge
cmp
add
jno
int3
fsubl
ret
lock
and
push
adc
ja
sub
in
mov
adc
xor
loop
lahf
lods
xor
ret
es
rcll
add
push
int
cmp
lods
ficomps
add
pop
xor
mov
fcompl
inc
enter
icebp
out
lods
je
jl
xor
xchg
shrb
push
lret
mov
addr16
push
or
cmp
sbb
push
xchg
int3
data16
xchg
pop
cli
or
cmp
arpl
push
pop
add
mov
xchg
inc
inc
mov
mov
sbb
sub
mov
mov
fmull
add
xlat
test
mov
stc
jl
std
jbe
adc
mov
orl
data16
or
push
mov
jmp
nop
xor
pop
push
xchg
mov
adc
or
pushf
xor
fstpl
daa
fbstp
or
lahf
insb
and
subl
push
jp
out
stos
push
cmc
loopne
ljmp
pusha
and
sub
push
and
mov
xchg
mov
mov
cld
call
jecxz
cmp
stos
adc
lock
jle
inc
or
adc
jne
and
ret
idivl
and
cmp
mov
inc
les
add
insb
lahf
sub
jae
mov
sarl
in
jp
mov
mov
inc
mov
pop
inc
ja
inc
jg
and
out
pop
into
xor
mov
xor
push
pop
mov
push
lea
je
stos
fisubl
xor
push
addr16
or
loope
cmp
or
jae
jp
fwait
push
cmp
js
lcall
lock
dec
sar
fisubl
jl
inc
cmp
and
cmpsb
mov
insl
scas
jge
xchg
mov
jae
xor
call
inc
cmpsb
mov
push
jp
adc
sub
addr16
aam
mov
pop
pop
stos
sbb
iret
jno
mov
xor
push
mov
adc
inc
pop
repnz
nop
or
fcmovnbe
sbb
adc
into
pop
fildl
js
adc
lods
mov
sbb
and
mov
aam
lods
mov
or
inc
cs
xchg
add
lcall
sarl
jnp
fs
mov
imul
pop
mov
mov
arpl
cmp
popf
mov
fs
xchg
cmp
jne
sbb
inc
xchg
int3
jae
lret
or
xor
out
jne
xchg
or
je
call
sbb
nop
jl
in
ficoms
outsb
sub
stos
ds
js
aad
into
and
mov
dec
inc
mov
inc
mov
adcb
sub
sti
sbb
faddp
mov
lock
cs
mov
popl
addr16
clc
lret
out
in
fcoms
jo
ja
fidivs
xor
roll
or
mov
cmp
push
inc
rorl
pop
push
mov
pop
mov
xchg
test
jg
push
mov
xor
inc
pop
jecxz
fwait
mov
cmp
int
mov
and
je
out
ljmp
inc
lods
std
in
adc
sbb
insl
lret
out
push
mov
sub
mov
popf
xor
js
in
or
mov
cwtl
inc
inc
shlb
mov
sbbl
add
decb
scas
jl
aas
mov
add
mov
into
loope
nop
test
add
rorb
push
mov
inc
mov
xchg
lahf
ja
jbe
ds
test
sub
cmp
pop
xor
pop
or
jp
mov
or
push
pop
sahf
lahf
lods
lea
js
xchg
and
aas
addb
addr16
jb
or
xchg
fiadds
xor
xchg
push
xchg
loop
mov
fdivrs
xlat
mov
test
out
and
int3
aad
test
ret
rclb
lret
jae
repnz
ja
ljmp
adc
sub
in
add
jae
mov
iret
repz
outsb
push
add
fisubrs
mov
data16
ja
xchg
mov
xor
pop
inc
lea
cmc
nop
push
pusha
sti
shrb
add
insl
repz
mov
and
into
popf
and
je
add
sub
ja
arpl
mov
dec
xchg
addr16
ret
mov
ret
hlt
cs
mov
movsb
jbe
decl
test
cmpsb
jns
stos
inc
addr16
sbb
or
pushf
xchg
shlb
xor
inc
cmp
mov
add
dec
sahf
mov
dec
dec
jb
loopne
push
fldl
lret
adcl
xchg
inc
aas
dec
insl
mov
jne
pop
gs
popa
mov
push
out
jg
pop
lcall
xchg
pop
ds
lods
inc
or
pop
mov
jae
push
xor
in
mov
mov
cmp
imul
mov
cmc
je
mov
and
fidivrl
mov
imul
dec
and
dec
mov
int
and
xchg
data16
pop
mov
gs
and
rorb
xchg
xchg
in
insb
into
imul
insb
jo
addr16
js
out
mov
lret
enter
cmp
mov
subl
sub
decl
cmp
lods
dec
dec
lcall
lods
sbb
ja
fists
mov
mov
xchg
int
cmp
cmovge
aaa
cmp
outsl
push
outsl
xchg
into
jae
stos
inc
xchg
adc
inc
fstl
push
dec
xchg
js
subb
fldl
idivl
sti
loope
leave
int3
arpl
dec
daa
ds
or
cmp
fbld
sbb
adc
aas
int3
aas
jns
ljmp
pop
adc
jle
adc
push
dec
mov
leave
out
pusha
outsb
xchg
sbb
add
ret
adc
mov
imul
cmp
jbe
add
dec
xor
incl
jb
fsubs
lret
add
pop
les
inc
stos
into
leave
add
push
notb
fcomi
mov
sub
jg
add
loope
xchg
aad
cmp
push
inc
loopne
sub
push
jge
ja
lock
xchg
xchg
mov
test
mov
mov
fwait
addr16
outsl
movl
mov
movsl
jmp
sbb
shlb
or
pop
dec
lods
adc
jge
das
jmp
mov
push
mov
stos
pushl
scas
int
sbb
adc
aam
cmp
inc
insb
inc
jae
cltd
cmpsb
sbb
xchg
xchg
int
aaa
jge
sahf
das
rep
addr16
sub
pop
sub
and
cmp
sub
and
mov
xchg
ficoms
inc
loopne
popa
sahf
lea
insb
xchg
subb
add
push
cmp
push
push
lods
cli
scas
sub
arpl
lock
fnstsw
add
add
test
lods
incb
push
shlb
sbb
dec
mov
out
cwtl
inc
xor
inc
ja,pt
push
testl
jnp
or
push
fsubp
ja
add
fmul
xor
test
cltd
sub
xchg
jge
lods
arpl
in
imul
sbb
push
daa
mov
repz
shlb
inc
call
mov
into
dec
lea
aas
cs
adc
nop
xlat
jle
mov
xchg
pop
mov
and
imul
sbb
dec
lock
enter
add
cltd
jge
mov
adc
mov
test
testl
cmp
push
jecxz
ja
xchg
into
iret
scas
adc
lret
pop
mov
mov
adc
xchg
xor
and
insl
dec
mov
faddl
xchg
aas
push
jae
pop
out
or
clc
fisubrs
hlt
or
nop
ja
std
mov
fildll
jne
ret
movb
aam
in
ja
adc
mov
adc
rolb
xchg
sahf
jmp
jle
inc
stos
xchg
lea
decl
lock
mov
out
pushf
xchg
clc
mov
pop
das
lret
ja
cwtl
or
in
je
cmpb
inc
ds
push
push
insb
mov
imul
or
cs
xchg
dec
adc
mov
dec
test
fwait
mov
push
pushl
mov
dec
or
or
lea
xchg
dec
leave
insb
into
nop
std
aas
stos
push
push
mov
insb
push
xchg
mov
decb
mov
jae
push
dec
mov
push
jo
mov
jnp
jb
inc
ja
pusha
movsb
mov
clc
pusha
jp
outsl
add
shll
jg
aad
mov
mov
ss
cmp
jo
xor
mov
insb
dec
mov
stos
int3
in
outsl
test
outsb
scas
gs
rolb
mov
and
xlat
mov
hlt
rclb
fs
sbb
cli
icebp
inc
pop
ds
cmp
jl
jae
enter
jp
lret
add
jae
imul
andb
enter
pop
inc
cli
or
dec
int3
push
push
addr16
shlb
lcall
mov
lret
addr16
stc
inc
inc
cs
dec
cmp
dec
movsl
lret
lea
repz
mov
pop
scas
inc
inc
pop
shrl
push
out
popf
push
gs
and
inc
pop
std
mov
roll
fnstsw
addr16
xor
sahf
jmp
addr16
test
movsl
out
fistl
mov
mov
mov
fnstcw
xchg
jne
hlt
lahf
cmp
cmp
add
xor
push
add
fld
loopne
test
dec
sarl
std
or
xchg
xchg
push
adc
inc
inc
jae
jmp
sub
jecxz
mov
and
movsb
fdivr
rorb
sub
mov
repz
inc
fistl
mov
shll
xor
lds
inc
mov
sub
mov
arpl
sbb
movsl
fisttpl
arpl
xchg
push
add
add
adc
xchg
mov
cld
inc
test
mov
xchg
daa
mov
mov
test
scas
push
sti
pushf
inc
adc
addl
call
movsb
push
iret
stos
add
scas
inc
mov
loopne
sbb
inc
xorl
fsub
and
fdivl
pusha
xchg
mov
mov
push
inc
rcrb
jne
push
xchg
imul
sahf
data16
enter
xor
leave
icebp
data16
mov
fcomp
pusha
cmpl
inc
xchg
dec
pop
addr16
adc
dec
inc
mov
jae
cmpsl
lea
stos
adc
fnstcw
add
addr16
shlb
loopne
pop
and
xchg
inc
and
jnp
ljmp
mov
incl
and
gs
jg
dec
cld
popa
cltd
xchg
mov
mov
repz
dec
xlat
sbb
mov
lock
dec
jae
jno
mov
mov
addr16
adc
scas
movb
lods
or
ljmp
mov
shlb
in
xchg
cmpsb
xchg
rolb
push
or
adc
inc
xchg
xchg
lahf
mov
outsb
sbbb
push
mov
dec
mov
sahf
jecxz
xchg
cmpsl
sahf
sbb
xchg
xchg
adc
mov
fstp
mov
inc
fcmovb
es
out
lret
pop
rcr
into
cli
shrb
loop
ficomps
scas
gs
mov
push
aam
push
add
add
cmpsl
repz
xor
fcom
divb
rcrb
subl
clc
shr
out
mov
xorb
dec
mov
push
data16
xchg
ljmp
mov
mov
cmpsb
mov
xor
pop
subb
lret
xchg
dec
sahf
cvtps2pd
push
out
add
sarb
cwtl
and
xchg
xor
cmpsb
push
sub
or
and
fisubs
es
loop
and
pop
aaa
mov
enter
or
push
lahf
mov
push
ficomps
rolb
sarl
push
movl
sahf
and
nop
divb
loop
cmpsb
sahf
and
pop
ja
and
push
pop
xchg
mov
mov
into
into
sahf
jb
fsubp
or
push
out
mov
bound
sbb
jbe
bound
ficoms
dec
mov
cmpsl
push
mov
lahf
xchg
push
lahf
xchg
xchg
into
rclb
shr
ds
adc
xor
sub
dec
ficoml
push
add
mov
mov
sbb
scas
jp
into
sbb
mov
mov
push
xchg
sub
adc
shlb
jp
bound
ljmp
and
fsubl
pop
or
add
shlb
dec
imul
fs
and
xchg
or
inc
andb
pop
xchg
insl
xchg
jne
ja
arpl
loopne
jnp
pop
mov
cs
gs
jno
int
cltd
jge
das
xor
cmp
jmp
cmp
mov
push
pop
and
fsubp
lods
add
mov
mov
xchg
xor
and
pop
adc
sti
sets
gs
dec
lea
fdivrl
dec
js
dec
inc
int
aas
adc
xchg
push
jmp
sub
mov
test
data16
push
push
arpl
std
xor
xchg
test
cmc
rolb
fdivs
mov
fcoms
pop
int
in
popf
dec
add
pop
in
pusha
and
or
jp
adcb
xchg
inc
cmp
mov
mov
cmpsb
lcall
out
aaa
xor
test
xor
fsubrp
dec
inc
adc
xor
fisubrs
fistpll
in
pop
lahf
in
jmp
inc
push
test
dec
jg
push
call
fisttpl
cmp
mov
out
bound
sbb
mov
jbe
xchg
ret
xchg
cmpsl
sbb
jbe
adc
or
fnstenv
out
shll
scas
in
rclb
adc
jle
movsl
cmp
pop
xchg
pushl
jp
mov
orl
push
cmpsb
mov
and
push
inc
push
sbb
xchg
lahf
mov
std
mov
push
pop
cltd
rorl
nop
sub
faddl
xchg
xchg
addr16
outsb
fsubl
add
ja
add
xchg
cmp
jl
mov
mov
dec
mov
mov
or
cmp
cmpb
push
outsb
js
push
dec
adc
xor
jne
test
repz
xchg
pusha
rorl
or
jae
dec
mov
and
fcmovb
jg
push
dec
cmpsl
mov
jb
fldl
push
aas
push
pop
inc
std
xor
iret
cmpsl
pop
std
jne
std
pop
mov
int3
cmp
scas
sbb
or
adc
mov
nop
fcmovbe
fcoms
sbb
adc
inc
out
adcl
xlat
out
dec
icebp
dec
cmp
fistpl
in
cs
movsb
lret
pushw
push
pmulhuw
call
and
jo
aam
test
scas
mov
add
mov
dec
jae
jp
addr16
es
sbbl
mov
dec
pop
sub
cli
pop
jae
mov
pusha
pop
adc
pop
stos
sahf
push
ret
ljmp
leave
dec
mov
push
adc
push
stos
mov
dec
loopne
imul
scas
int3
js
faddl
insl
jg
mov
cli
out
jne
fisttpl
and
popf
adc
cmp
add
out
mov
mov
pop
outsl
int3
push
cmp
mov
in
and
and
enter
mull
cmc
cmpsl
or
add
ret
dec
jl
push
sbb
and
xchg
sub
inc
mov
xchg
push
scas
xchg
test
scas
ds
sahf
jb
adc
pop
data16
jnp
or
aam
je,pt
xchg
push
xchg
jl
cmp
push
add
sbb
loopne
dec
pop
lods
out
push
jg
lahf
fisubrs
mov
ret
jae,pt
xchg
cmovb
or
fbld
push
add
pop
adc
test
fiadds
xchg
sub
cmp
xorl
pop
and
cmpl
je
sti
repz
sahf
or
mov
js
es
xchg
lods
and
clc
cmp
addr16
or
or
push
call
ljmp
push
jb
xor
shlb
jnp
pusha
sbb
sub
lock
push
lret
cmpsb
mov
mov
mov
aaa
xchg
loop
out
sbb
jns
jg
fimuls
pusha
shl
mov
mov
ds
out
lea
aas
scas
pop
decl
push
push
pop
and
jb
dec
cmc
sub
pop
adc
inc
addr16
inc
mov
fidivs
std
les
jle
orl
dec
outsb
mov
dec
jl
subb
out
cld
mov
out
inc
pop
push
pop
js
jl
into
lds
je
jmp
xor
orl
cmp
es
mov
inc
cmp
xchg
std
push
mov
add
iret
sarb
inc
bnd
and
cmp
je
out
out
add
fisubrl
and
bswap
jae
test
sbb
mov
push
test
sti
add
fisubrs
pop
ja
cmc
push
mov
leave
and
js
jb
shll
ficoms
mov
insb
idiv
mov
ja
push
pop
insb
movsb
xchg
sbb
nop
pusha
mov
out
and
cltd
adc
jne
adc
add
push
jbe
pop
es
sbb
fidivs
test
xor
adc
lret
aad
and
jbe
lret
pop
xchg
xorb
data16
nop
jbe
fs
test
addl
inc
movl
and
pop
xchg
int3
imul
ret
rclb
xchg
jl
jg
ja
es
idiv
inc
cmpsl
push
sbb
pop
test
filds
cmp
adc
xor
xchg
mov
push
es
aam
cmp
je
cmpsb
jl
mov
mov
fisttpl
icebp
out
lods
lods
sub
aaa
cmp
aam
mov
lock
cs
shrb
scas
cmp
push
push
adc
std
shll
xchg
mov
call
pop
push
stc
fwait
lock
adc
sub
sub
xor
adc
cmp
inc
mov
jnp
cmp
leave
roll
inc
mov
mov
jnp
mov
sbb
cmpsl
mov
xchg
jg
aas
out
out
ret
shrb
pop
jmp
lods
dec
iret
cwtl
sbb
and
push
push
jae
adc
fcmovnu
testb
jae
inc
shll
scas
inc
stc
mov
aam
xchg
out
pop
lods
lret
add
cmp
ficoms
sti
xchg
inc
pop
pop
and
cmpsl
sub
pop
sbb
shl
ffree
xchg
xchg
cli
std
pushf
cwtl
dec
xchg
push
pop
pop
and
shll
insb
push
push
test
imul
or
testb
or
imull
in
pusha
pusha
pop
fcmovb
fsubp
scas
adc
xchg
test
sbb
pop
fdivl
xor
xchg
fisubrs
cmp
imul
inc
pop
push
mov
mov
test
insb
jp
out
aam
daa
in
sbb
mov
movl
lret
mov
mov
test
cmp
mov
lahf
fists
sbb
insb
orb
pop
cmp
pop
mov
lds
pop
adc
iret
int3
xchg
test
pop
bound
sbb
repz
jns
mov
mov
sub
xchg
inc
pop
stc
rclb
inc
adc
sbb
pop
jnp
pushf
push
jg
decl
out
mov
lds
mov
xchg
mov
rcrb
adc
loopne
dec
jbe
mov
stos
nop
leave
sub
jne
bound
pop
movsl
xchg
jae
mov
ja
mov
inc
sub
cwtd
setae
test
xchg
pusha
lock
xor
das
shlb
sbb
cli
stos
je
mov
xchg
adcb
jmp
jl
clc
scas
sub
mov
jo
xchg
push
cmp
lea
es
cmp
out
push
jnp
subb
mov
jecxz
movsl
xchg
add
jbe
lea
jge
ds
push
call
in
loope
into
pop
push
cmpsl
ret
daa
inc
pushl
stos
lret
mov
insb
leave
cmp
sbb
inc
outsl
xor
shrb
cmp
pop
and
adc
lea
mov
in
sub
cld
jne
cmp
gs
pushf
dec
insl
mov
sbb
int
push
in
inc
xchg
adc
cmpsl
ds
and
inc
adc
sbb
ja
xor
sbb
outsw
add
dec
lock
data16
mov
mov
and
call
out
add
add
push
lea
sub
add
sarl
inc
sbb
bound
push
lea
add
pop
out
scas
mov
inc
or
jno
repnz
add
test
lea
jp
gs
jg
cmc
jle
mov
jo
pop
mov
data16
mov
pop
dec
stc
jo
mov
jae
stc
sbb
push
negb
mov
std
popa
push
int
xor
iret
xor
sahf
push
jbe
mov
xchg
test
jge
pop
lahf
add
sbb
xchg
pop
jns
movsb
out
stos
movsb
pop
or
mov
inc
cmp
sbb
sub
inc
aas
sbb
ds
out
nop
sub
xchg
jae
mov
stos
push
xchg
int3
jne
cli
mov
enter
xchg
outsb
inc
fisubl
xlat
out
mov
xchg
mov
movsl
mov
add
aas
dec
xchg
push
jne
cwtl
stos
push
test
and
mov
je
movsl
cwtl
add
rorb
sbb
push
pop
inc
in
mov
pop
les
inc
loope
ds
cmpb
fidivs
test
je
outsl
or
xchg
outsb
div
psubd
fnstsw
dec
pop
enter
add
inc
test
fisttpl
jae
je
add
push
mov
jl
mov
xchg
inc
mov
bound
movsl
rorb
xor
cmp
arpl
inc
sti
inc
int
roll
inc
pop
mov
and
je
mov
pop
andl
movsl
cmpsb
or
call
mov
mov
xor
sub
bound
push
aas
or
not
inc
push
js
out
lret
frstor
fadds
adc
aad
mov
xorb
fsubs
lea
sub
mov
mov
mov
jno
add
mov
pusha
mov
rcl
cmpb
nop
inc
lahf
or
dec
rcll
outsb
push
mov
popa
push
cli
loopne
test
xor
jne
jmp
jmp
cmp
mov
nop
pop
jecxz
cmp
je
out
and
mov
jns
and
lea
pop
mov
cltd
sub
sbb
aas
xchg
test
push
inc
lret
inc
in
fiadds
push
xchg
fcoms
sub
movsl
mov
outsb
nop
dec
rcrb
movsl
lods
into
lods
jg
je
add
stc
mov
aaa
cmp
out
mov
jnp
pushf
imul
es
movsb
ja
xor
test
cmpsb
aas
fs
fucomp
mov
lods
add
sub
fxch
das
pop
sbb
adc
xchg
xchg
sbb
leave
insl
fsub
cmpsl
inc
inc
push
xchg
ret
rcll
dec
pop
jae
in
cltd
addr16
xchg
mov
push
jo
mov
pop
push
outsb
xchg
adcb
add
imul
xchg
call
rolb
or
je
clc
data16
scas
inc
fidivs
pop
jb
cmp
out
dec
sub
push
add
imul
ret
and
sbb
in
cld
xchg
push
jnp
xor
sar
push
cmp
addr16
iret
es
arpl
push
ret
mov
movsl
adc
mov
addr16
das
lahf
das
mov
jne
jne
pop
pop
sub
int
push
test
repnz
inc
pushf
roll
add
pop
mov
push
inc
jl
inc
fsub
ljmp
mov
mov
scas
jp
and
adc
sub
lea
loop
out
stos
dec
mov
fmuls
call
xchg
inc
xor
scas
jae
push
jl
sarb
lret
repz
orb
add
jbe
mov
ja
xchg
push
out
aas
fidivrl
or
aad
pop
into
addr16
xor
out
add
test
data16
shll
push
mov
jg
inc
ja
xchg
cld
aaa
ds
mov
or
stos
sbb
arpl
mov
sub
pop
and
cwtl
xlat
add
add
inc
add
dec
insl
cmp
aas
add
fadds
sbb
out
repz
xchg
testb
or
push
push
cwtl
addr16
nop
fst
and
sub
add
xchg
aad
jge
testl
int
orl
jbe
push
cmp
into
cmp
imul
adc
inc
add
pop
cmp
sbb
repnz
push
aaa
sub
aaa
call
cmp
mov
sti
fmul
popf
mov
ljmp
loopne
loope
jl
test
sbbb
xor
scas
lock
push
cwtl
bound
pop
arpl
adc
lret
mov
sub
stos
outsl
jne
and
addr16
movl
adc
sbb
popa
mov
jns
insb
fs
pop
decb
movsl
xchg
adc
test
add
cmp
pop
in
js
mov
out
shlb
cmp
jo
mov
inc
dec
pushf
into
lods
push
aas
jnp
mov
out
mov
sbb
fdivs
fdivrl
xchg
mov
jne
das
fcomps
mov
pop
cmp
dec
mov
mov
or
mov
mov
push
in
mov
add
popa
je
dec
shll
mov
mov
sahf
inc
addb
test
lds
xor
push
sub
test
stos
adc
aam
into
aad
cmpsl
adc
lahf
adc
fstl
loopne
repz
fwait
pop
stos
lea
inc
fmuls
repz
add
sahf
sub
sti
fisttpl
insl
nop
les
push
addr16
jbe
push
cld
add
inc
push
ja
pop
add
push
divb
add
jne
out
lret
dec
loopne
fisttpll
jmp
adc
push
pop
repz
shll
and
mov
fistps
stc
cmpl
roll
sarb
jae
dec
xchg
push
inc
clc
movsl
xchg
fadd
jne
mov
inc
lcall
out
jns
dec
loop
sbb
push
and
out
shlb
scas
jae
imul
nop
ja
fwait
sti
inc
popf
data16
fadds
fidivrs
loop
sub
in
pusha
test
add
mov
jmp
ret
pop
adc
ja
dec
dec
xchg
imul
dec
pop
aad
mov
sbb
push
in
in
jp
xor
push
addb
dec
or
push
mov
jl
adc
dec
mov
imul
fidivs
imul
scas
or
icebp
fsubrl
jbe
leave
push
inc
adcb
dec
imul
inc
cwtl
insb
and
sbb
in
xchg
lock
leave
call
sub
mov
pop
jnp
fildl
inc
arpl
dec
mov
xchg
stos
stos
or
rcl
fwait
xchg
sbb
mov
mov
push
in
pop
jmp
les
jmp
mov
or
jb
cmp
cmp
mov
fmulp
dec
movsb
dec
mov
pop
add
xor
into
jp
jbe
or
outsb
adc
insb
out
sub
mov
cld
xchg
add
mov
dec
mov
sti
jo
push
fwait
je
xor
pusha
push
int3
push
cmp
sub
stc
adc
dec
and
pushf
cmp
mov
das
mov
scas
repz
call
mov
insb
jg
jg
add
aam
pop
sbb
push
or
pop
pusha
jnp
jp
mov
stc
ficompl
push
push
lret
icebp
push
mov
stos
faddl
je
notb
and
andb
ja
je
enter
xchg
shll
xor
pop
or
sahf
mov
ja
mov
outsb
mov
ret
test
popf
shll
dec
icebp
and
xchg
cmp
pusha
xorb
push
lock
dec
sahf
mov
xchg
jno
cmovae
mov
mov
out
bound
mov
test
pop
lods
add
addr16
push
pop
mov
sbb
lods
aam
lahf
add
insb
and
push
push
push
sbb
xchg
imul
es
sub
jbe
popa
dec
fwait
adc
bound
dec
pop
mov
xchg
js
fldenv
mov
cmp
push
push
cmp
adc
cmpsl
push
sbb
fcomps
std
ret
xchg
or
popf
lahf
andl
mov
xchg
mov
lret
jno
adc
cmpsl
pop
daa
rcl
lret
sub
and
scas
pop
fmuls
sti
aaa
mov
clc
jg
push
dec
pop
pusha
in
add
inc
mov
mov
jle
gs
jp
jl
cmp
mov
mov
cmpsl
adc
xchg
xchg
xor
insl
mov
xchg
sub
movsb
lds
dec
pop
and
hlt
inc
pop
ficomps
add
jg
iret
out
int
ret
mov
shll
mov
add
roll
or
test
jbe
xchg
cmp
outsl
xchg
jae
movzbl
dec
jbe
lcall
push
dec
dec
les
or
mov
mov
sbb
shll
addr16
dec
lahf
pop
push
outsl
sbb
adc
sbbl
insl
out
xor
aam
add
push
data16
cmpsb
lea
sbb
adc
and
push
aad
std
mov
rclb
mov
loopne
aam
lea
inc
mov
ljmp
pusha
lea
mov
int
cwtl
push
fsts
dec
in
bound
xor
push
dec
cmp
scas
neg
inc
neg
and
insl
cmp
aad
test
pop
data16
mov
loopne
push
inc
sahf
adcl
je
push
rcll
lahf
xchg
fdivrs
jl
mov
stos
std
stc
jl
push
sbb
pop
lcall
movsb
sbb
sbb
sub
out
xlat
scas
adc
push
call
push
jle
gs
je
jp
jg
ja
in
js
pop
inc
push
or
pop
repnz
daa
dec
pop
call
ja
mov
ret
fs
lret
mov
loop
push
adc
dec
xchg
jne
fsubrl
in
aam
outsb
jge
and
dec
pop
sbbl
ficoms
pop
fcomi
push
mov
enter
mov
int3
xchg
int3
fnsave
add
inc
adc
mov
and
sub
xchg
and
ja
in
scas
daa
dec
imul
mov
cmp
pop
adc
jno
int
pop
iret
ds
scas
shrb
add
cmpsb
push
xchg
fstl
fisubs
cld
cmp
sub
popa
lods
xor
push
push
jno
mov
fists
dec
or
ljmp
fidivs
pop
lcall
rcrb
test
out
inc
and
pop
mov
and
pusha
loopne
jg
xor
out
sahf
push
pop
iret
iret
xchg
sub
jg
adc
mov
popf
or
pushf
and
cmp
filds
mov
pop
mov
adc
adc
xchg
and
rcll
aad
dec
or
dec
jbe
add
enter
mov
pop
cltd
mov
jg
xchg
imul
jle
imul
jae
sub
test
mov
insb
orl
lretw
or
xchg
push
das
mov
push
push
int3
pop
aas
outsb
lock
lret
or
filds
bound
mov
mov
ja
hlt
adc
test
insl
xor
lods
mov
or
icebp
test
mov
repnz
in
mov
ficomps
aam
ja
cmpl
push
das
jp
inc
rorb
andb
dec
dec
adc
loope
add
xchg
xor
loopne
aam
popa
xchg
fmuls
sbb
addr16
mov
in
loope
and
xchg
add
mul
mov
inc
into
mov
xor
mov
add
or
movsl
add
fiadds
sbb
push
jg
jae
movsl
out
inc
adc
fisubrs
cmp
lods
jb
movsl
aam
and
inc
xor
inc
jg
cmc
dec
push
nop
imulb
xchg
arpl
fbstp
fidivrs
or
mov
adc
mov
fbstp
sbb
mov
pop
and
imul
or
int
xor
mov
fsubr
jne
mov
xchg
sub
push
mov
es
and
fdivrl
loopne
jnp
outsl
int3
mov
movsb
les
decl
aam
mov
movl
push
dec
jbe
stos
add
xchg
inc
mov
pop
scas
or
loopne
or
mov
jae
sub
push
inc
xchg
decb
sbb
rcll
push
push
jmp
int
inc
and
mov
add
mov
and
pop
push
xchg
fsubl
xor
sti
cmpsb
push
xchg
and
lret
jl
mov
xchg
or
inc
test
loop
out
pop
pusha
sbbl
lods
mov
xor
cwtl
sbb
cmp
xchg
pop
jl
std
adc
pop
push
movsb
jno
insb
out
pop
mov
jp
pop
dec
lret
mov
mov
sub
cld
addr16
bound
cltd
cmp
add
addr16
nop
mov
cmp
daa
pop
xor
jns
in
test
xchg
loopne
adc
jecxz
sub
jle
mov
pop
sub
push
mov
sti
sub
mov
jmp
call
jns
push
pop
lcall
shlb
cmp
or
in
xorl
push
aas
xchg
pop
int
lahf
ret
hlt
pop
jecxz
addl
std
jle
lea
inc
les
popa
xor
push
mov
data16
add
push
pop
hlt
dec
cmp
out
add
push
fisttpl
pop
popf
fdivrp
not
sub
shlb
jo
lret
ja
mov
and
mov
iret
lods
out
xchg
fdivp
sub
or
mov
movsb
lahf
adcl
push
xchg
mov
pop
icebp
xor
dec
je
test
out
enter
das
ja
movups
adc
inc
loopne
cmp
sbb
xor
pop
js
int
es
inc
in
jo
sbbl
sahf
cs
push
add
or
rcl
pusha
jb
jmp
aam
xor
cmpsb
imulb
xchg
repz
xlat
adc
push
cli
mov
sbb
dec
test
pop
ljmpw
push
jl
jo
cmp
out
sub
sub
addr16
sbb
fimull
out
loope
push
jns
mov
pop
cli
xor
fmul
mov
push
lods
xchg
shlb
and
xchg
rcll
fmull
jne
inc
adc
dec
push
dec
dec
les
sbb
or
xor
bound
sahf
les
cmpsb
clc
jg
aad
lcall
js
call
lds
or
sahf
adc
and
dec
in
fidivs
cmp
jb
mov
int
push
xchg
or
into
addr16
adc
loopne
sub
or
shlb
dec
std
cmp
jl
ret
jno
arpl
dec
jle
pop
aam
jbe
popf
test
cmpsl
jo
fnstcw
push
xchg
mov
test
loopne
xchg
sub
push
pop
cmp
mov
shrb
mov
jl
sub
jnp
data16
test
push
imul
nop
inc
inc
shrb
jle
aaa
divb
inc
loop
dec
fs
fdivrs
mov
lods
jne
inc
push
jecxz
push
add
idivl
fwait
xorb
pop
clc
jbe
sub
shll
bound
push
push
push
push
inc
sub
mov
stos
jl
lods
dec
loopne
lods
repnz
xchg
mov
shrb
push
xchg
ffree
cmp
bound
mov
mov
test
out
or
xchg
in
sub
push
jae
xor
in
leave
cmp
ljmp
je
pop
stos
sahf
pusha
int3
jle
push
jo
push
cmpb
add
add
out
xchg
imul
arpl
mov
mov
xchg
idiv
and
inc
stc
inc
cli
cmc
push
pop
push
adc
or
out
and
xchg
xchg
nop
fwait
scas
pop
lret
stos
push
fimuls
jecxz
out
push
lock
loopne
hlt
inc
push
mov
outsb
jne
xor
xchg
push
daa
subl
daa
in
stc
or
movsl
mov
in
jno
fisttpl
adc
imul
sub
sub
mov
daa
jo
mov
push
leave
test
xchg
mov
ss
push
inc
jae
adc
jle
je
or
iret
test
mov
mov
pop
enter
or
add
in
sbb
jnp
insb
pop
js
dec
into
xchg
test
xor
mov
pop
out
sti
push
adc
out
adc
add
mov
or
jne
cmp
xor
int
sahf
fnstcw
ret
push
and
adc
xor
rorl
cmp
lods
stc
and
rclb
mov
ljmp
jecxz
test
add
fnop
scas
xchg
push
test
hlt
loopne
fsubrl
xchg
cmp
pop
xor
stos
jns
in
movl
rcrb
int
mov
and
aas
mov
mov
xchg
repz
sbb
and
pop
scas
sbb
nop
or
inc
lret
fistps
push
xlat
loop
incl
push
push
scas
sub
jb
jge
lock
mov
ret
sbb
jae
ja
out
pop
xor
xor
test
or
xchg
jp
push
jae
pop
das
pop
dec
adc
mov
jp
xchg
push
mov
dec
ds
or
test
scas
sbb
xchg
ja
in
orb
jbe
inc
lock
push
cmpsl
and
addr16
inc
jl
mov
push
xchg
ljmpw
jnp
jns
adc
loopne
fsts
mov
fisubs
pop
mov
and
call
pop
insb
ret
dec
mov
jle
mov
sahf
hlt
jbe
loope
mov
lea
out
popf
xchg
stc
iret
ljmp
sub
insl
pop
seta
lahf
fadds
or
decl
mov
je
outsw
repnz
aam
popa
jmp
stos
jo
int3
outsb
jg
call
rcr
sub
push
stos
stc
fnstenv
dec
add
jnp
mov
pop
stos
int
lcall
xchg
jecxz
inc
xchg
lds
fiadds
insb
movsl
jecxz
pop
inc
int3
mov
jbe
or
adc
out
popa
test
aad
jg
rcll
push
cmpsb
movsl
jp
ds
pop
imul
icebp
and
lea
enter
jbe
dec
and
lcall
xchg
pop
or
push
pop
jge
mov
shll
xor
imull
or
mov
dec
es
out
nop
cvtdq2ps
insl
add
pop
out
enter
push
repz
fstp
dec
jno
fst
jbe
incl
cmp
sbb
rcl
mov
aas
inc
lcall
insl
fwait
stos
ret
adc
pop
mov
xchg
es
dec
data16
lret
iret
aas
movsl
mov
mov
imul
pop
mov
int3
outsb
mov
mov
add
test
dec
add
and
jns
adc
add
popa
push
pushl
push
stc
data16
out
testb
outsl
and
or
pusha
andl
pop
addr16
insl
test
mov
mov
mov
sarb
xlat
into
inc
out
sub
addr16
push
sbb
jnp
jmp
aad
adc
sbb
jo
addb
js
pop
add
cs
push
push
leave
es
stos
jg
mov
jo
adc
cli
test
cmp
cltd
dec
sub
loope
movsb
inc
fimull
mov
movsl
leave
mov
add
addr16
add
movsl
dec
lods
inc
push
jl
cmp
test
fidivs
mov
stc
pop
pusha
stos
fldl
or
xchg
push
std
jl
in
dec
js
dec
mov
jg
mov
push
loope
aas
pop
aad
push
cmpsb
inc
jg
inc
dec
dec
stos
jo
pop
xchg
sub
xor
cmp
xchg
int3
pop
pop
push
mov
cmpl
push
enter
enter
xchg
imul
push
insl
pop
gs
jle
je
fists
add
jbe
dec
cmpsb
outsl
in
repz
cmp
arpl
inc
stos
test
push
adcl
push
sub
into
scas
push
retw
or
fcmove
movl
add
loop
cmc
lcall
sub
adc
xchg
mov
add
scas
jae,pt
fisubs
mov
test
jno
jae
ljmp
bound
lea
std
dec
push
iret
outsb
test
clc
jg
sub
cmpsb
sarl
jle
jl
aad
sbb
insl
popa
aaa
pop
andl
inc
nop
cmpsb
push
cmpb
or
test
scas
aad
cmp
xor
ds
movsb
cld
aas
imul
jo
and
ret
inc
sbb
sahf
mov
sbb
or
push
imul
jl
push
dec
inc
adc
aaa
xchg
sbb
xchg
pop
andl
sub
ja
sahf
std
pop
es
lds
cmpsb
mov
inc
dec
pushf
es
adc
cmc
dec
mov
lods
int3
and
jg
sti
xor
jge
es
mov
mov
xchg
mov
imul
scas
lods
add
outsl
out
cmpb
cmpb
loopne,pn
inc
adcb
push
sub
xchg
rcr
shlb
and
ret
xchg
mov
or
xchg
mov
rcll
jno
xor
ja
mov
sub
adc
ror
mov
inc
into
mov
mov
stc
js
ss
daa
popa
lods
jb
aam
lcall
lods
ficoml
mov
subl
pop
xchg
inc
pop
enter
enter
movsb
dec
lods
adc
fsubrp
std
mov
data16
repnz
test
or
addr16
sbb
cmp
and
mov
push
mov
cli
add
xchg
sbb
xchg
push
push
push
cmp
fildl
outsl
dec
addb
jnp
dec
lcall
dec
dec
pop
push
stos
jne
dec
out
sbb
pop
inc
fmull
push
lea
lock
cmp
shlb
inc
call
fsubr
add
mov
xchg
push
leave
outsb
test
imul
leave
pop
cmp
push
dec
xor
adc
push
mov
out
adc
das
dec
xor
push
cmp
inc
aad
push
ja
adc
cmp
xchg
sub
lahf
inc
shrl
jae
movsb
mov
call
lods
sub
stos
ret
xor
sbb
ficomps
add
mov
or
in
fmuls
pop
adc
add
icebp
bound
pop
cs
js,pt
testb
andb
mov
dec
jp
pop
push
add
inc
mov
dec
pop
dec
mov
push
xchg
mov
xchg
movsb
ljmp
xlat
cmc
jp
dec
lcall
sbb
out
inc
cmp
cwtl
jne
jbe
xorb
cmp
push
push
pop
jecxz
xchg
into
lcall
xor
je
lcall
aas
int
and
mov
mov
mov
adc
iret
cmp
rol
fdivl
test
and
in
std
pop
enter
addb
fldl
popa
incb
jge
xchg
push
push
out
or
jl
inc
pop
add
addr16
mov
ja
sbb
xchg
inc
addr16
inc
add
inc
sbb
jg
out
cld
xor
jbe
mov
push
stos
repz
inc
cmp
push
shll
cmp
pop
sti
imul
sahf
sub
aam
addr16
fmuls
xorl
pusha
inc
ret
push
xchg
mov
ss
dec
add
mov
jg
data16
xchg
lods
dec
jecxz
test
add
jge
dec
adc
and
jp
andw
push
and
xor
lcall
ss
into
ja
je
push
xchg
outsb
leave
cmp
cs
mov
addr16
push
movsb
push
ljmp
loop
ljmp
inc
mov
cmp
jo
mov
lods
ficoms
sbb
in
xchg
nop
xchg
scas
pop
xor
orb
inc
push
mov
sub
pop
sub
ret
stos
aad
rcll
loope
jo
cld
subb
enter
nop
xor
dec
mov
pop
in
push
push
sub
mov
jbe
roll
xchg
mov
cs
insb
int
icebp
fdivs
add
out
cmpl
push
jmp
xchg
push
divl
jbe
add
addr16
roll
fistpll
fisubrs
or
pop
mov
dec
adc
lds
std
jae
sbb
int
and
add
jl
and
nop
stc
cmc
inc
fcmovnu
je
lods
inc
movsb
arpl
dec
stc
gs
mov
pop
jae
push
repnz
adc
adc
cli
mov
push
cld
mov
loop
insb
adc
inc
repnz
stc
mov
jo
fbld
or
dec
loop
xchg
lods
loope
push
sbb
mov
jns
cmp
out
lcall
pop
ss
jecxz
adc
movsb
mov
inc
push
and
jne
cmp
hlt
xor
push
cmc
add
jg
aad
rclb
aad
je
enter
add
outsb
jle
cld
jnp
cmc
push
or
inc
rcrb
or
mov
mov
mov
xchg
into
dec
add
test
sub
hlt
or
push
ret
aam
daa
repz
inc
xor
lea
inc
push
pop
je
dec
sbb
sbb
jnp
aam
stos
pop
cwtl
sub
xchg
push
fnstenv
pop
orl
inc
cs
pusha
mov
lret
jp
mov
pop
xchg
cli
imul
movb
repz
call
mov
fiadds
dec
fwait
mov
fsubrp
in
xchg
fcompl
and
or
mov
pop
shl
sub
test
das
std
mov
sarl
xor
push
dec
lea
jg
jge
fcomps
sbb
xchg
inc
mov
cmp
sbb
or
pop
mov
sbb
mov
shr
nop
icebp
shl
jo
push
inc
mov
mov
push
lock
pop
mov
push
pop
sub
arpl
in
dec
mov
popf
push
inc
inc
or
jg
pop
or
jne
out
out
aaa
cmp
xchg
lcall
stos
test
sbb
test
ds
inc
shll
mov
jo
mov
xchg
in
stos
insb
div
mov
lret
imul
fs
out
mov
sbb
add
je
jnp
mov
inc
sbb
sub
xchg
jne
les
mov
jecxz
imull
dec
lret
orb
mov
and
test
jle
aas
gs
in
push
enter
int
inc
test
push
orb
aam
add
jno
dec
test
hlt
jl
mov
xchg
outsl
jmp
ja
lret
mov
out
out
mov
fcmovnb
push
or
cmc
xorb
ja
push
adc
jno
cli
addr16
push
repz
popa
jne
or
scas
lods
lret
loop
les
dec
movsl
int3
scas
jns
sbb
mov
and
mov
xchg
sbb
aam
es
out
add
lahf
xor
cwtl
jecxz
inc
inc
or
jp
loop
int
push
inc
aaa
jl
add
jmp
addr16
repnz
dec
dec
adc
pusha
mov
fildll
add
mov
pusha
es
cmp
pop
rcrl
jns
dec
mov
sahf
mov
test
arpl
int3
mov
fdivrl
out
pop
movsb
mov
mov
icebp
pop
pop
adc
jnp
jmp
daa
fcoms
int3
sahf
and
fsts
pop
inc
out
nop
lret
inc
cmpsl
movsl
mov
dec
and
or
pop
stc
test
rclb
dec
in
dec
sbb
push
fbstp
adc
dec
mov
mov
push
adcb
rep
sbb
ja
lea
xchg
adc
daa
jns
or
xor
imul
ret
mov
scas
pop
xchg
addr16
int
cmp
adc
scas
pop
sub
ret
nop
inc
jbe
push
cmpsb
cmpl
and
int
movsl
inc
aad
jg
cmp
fsubs
movsb
sbb
sarb
sahf
in
xchg
push
mov
shll
stos
or
ljmp
nop
addr16
mov
ret
mov
xchg
dec
cmc
xchg
pop
loope
jbe
xorb
fdivrl
sub
xor
sbb
pop
fiadds
outsl
fcoml
and
xchg
jg
data16
jmp
repnz
add
fcmovbe
adc
mov
movsb
sbb
mov
out
addr16
xchg
in
dec
xchg
dec
jbe
inc
bound
nop
cmp
sbb
lock
cmp
subb
mov
fadds
cmc
testl
cmpsb
sti
mov
jae
lods
push
mov
call
sbbl
jns
cld
mov
adc
mov
mov
mov
push
rcll
mov
and
adc
fucomip
dec
pop
cmp
inc
movsl
xrelease
xchg
popl
mov
arpl
or
jne
lds
xchg
dec
shlb
into
xchg
fs
shl
jl
imul
and
mov
inc
mov
ret
pop
sbb
scas
push
addr16
mov
inc
xchg
mov
mov
pusha
jmp
movsl
rolb
cli
in
push
je
inc
pop
int
xchg
adc
xchg
mov
mov
stos
xchg
and
cmp
imul
pop
aas
mov
ret
xor
xchg
inc
cmc
mov
adc
pushf
aam
mov
jno
mov
pop
addr16
sbb
movsb
cmp
push
inc
xchg
xor
pusha
xor
loop
push
in
movsl
jbe
orl
int
ret
mov
rcll
jno
ret
into
je
fcmovnbe
push
mov
jae
xchg
rorb
sti
fidivl
fnstcw
scas
jp
adc
adc
inc
or
js
mov
push
fmul
int
jl
movsb
cmp
jge
adc
enter
aad
inc
mov
jne
mov
cmp
xor
enter
lods
addr16
inc
xchg
add
and
sub
mov
xor
sub
fcmovbe
imul
addr16
jle
or
sbb
xor
mov
or
cmp
inc
sbb
test
fwait
scas
pop
scas
xor
imul
data16
sub
adc
lret
dec
mov
add
mov
jl
push
push
addr16
stc
dec
hlt
mov
loopne
mov
andl
cmpsb
inc
pop
mov
outsl
clc
xor
push
or
popaw
mov
push
or
rcrl
lret
ja
pop
popa
dec
movsl
scas
and
sbb
ret
mov
outsb
sti
enter
cmpsb
mov
pop
lret
and
addb
mov
aam
mov
jae
push
aas
emms
lahf
xchg
jae
sbb
out
jbe
rcr
js
dec
cmpsl
int3
xor
dec
jmp
mov
pop
xchg
mov
xor
xchg
ds
jnp
insb
mov
lret
add
mov
sbb
scas
cmp
fcmovne
aad
nop
adc
insb
add
jbe
or
push
arpl
sar
mov
ds
jp
lods
inc
stc
lret
and
shrl
jne
fadds
xor
cmp
jge
ja
out
xchg
lock
jb
test
sub
nop
mov
test
and
sahf
pop
mov
and
cmpsl
inc
pop
cmp
push
leave
mov
fsubrs
jg
ficomps
cwtl
imul
mov
adc
mov
fisttpl
outsl
or
mov
je
pop
pushf
cwtl
sub
jae
mov
mov
inc
lods
lcall
cmpsb
bound
xor
jns
testb
adc
and
dec
push
or
je
imul
dec
adcb
out
push
inc
xor
push
push
aam
xchg
imul
pop
enter
xor
xor
rclb
mov
and
push
ret
or
addr16
int3
jmp
imul
aad
mov
scas
andb
push
xor
xchg
mov
cmp
lret
movb
pop
cs
inc
push
aas
mov
and
dec
nop
sbb
pop
je
mov
int3
add
mov
xor
mov
aaa
rcrb
mov
outsl
test
push
out
fwait
icebp
mulb
push
es
scas
add
int3
ja
fsubs
xchg
out
int3
sub
push
pusha
outsb
dec
ret
aas
sub
dec
out
or
cmp
lds
out
xor
xor
jge
add
adc
jno
or
rcr
jno
loopne
fidivs
mov
data16
jae
jns
sbb
aad
sahf
test
out
push
mov
aam
das
iret
pop
mov
cmp
inc
dec
inc
and
add
loopne
sub
xchg
cmc
pop
and
xchg
test
cs
jne,pn
xchg
mov
idivb
loope
icebp
mov
inc
inc
sbb
xchg
jnp
xor
das
lods
xchg
adc
pop
push
mov
lds
movl
lea
je
fsubrl
mov
xor
pop
ror
add
xchg
mov
iret
cmp
adc
xor
adc
int3
inc
push
xor
mov
jmp
xchg
push
cmp
lods
int
out
dec
in
scas
roll
enter
push
inc
mov
sbb
jp
scas
popf
lea
mov
add
inc
xchg
rsm
or
adc
out
cmpsl
adcb
stos
shrb
add
fcompl
addr16
mov
aam
pop
jbe
in
jb
dec
xor
lahf
loope
mov
jbe
push
enter
loopne
call
mov
add
jne
xlat
int
cli
pop
addr16
cmp
shlb
pop
push
cmp
add
cmpsl
or
sbb
push
xchg
int3
mov
loop
push
dec
pop
push
lahf
dec
adc
popf
testb
inc
mov
adc
movsb
cmpsl
lret
daa
push
push
loopne,pt
cmpsb
cmpl
mov
inc
adc
cmp
out
push
pop
out
ds
xor
pop
pop
and
sahf
les
pop
test
jns
stos
adc
sahf
les
jae
aas
repz
out
fimull
nop
adc
cwtl
addb
aas
popa
push
pop
cmpsb
adc
shr
sbb
xchg
shrl
xor
push
cs
cs
mov
ja
nop
lcall
cld
pop
mov
fdiv
xor
xchg
subb
pop
mov
inc
test
push
push
addl
mov
jbe
mov
loopne
imul
fdivl
push
xchg
popa
outsb
dec
mov
xor
jmp
jg
xchg
out
stc
mov
cld
scas
fisubrs
out
cmp
fidivs
clc
out
jne
les
out
cmc
icebp
jge
push
movsb
pop
insb
xchg
sbb
inc
lea
cmpsl
lods
inc
adc
in
mov
mov
sarb
repnz
stos
pop
mov
inc
repz
imul
or
ret
inc
and
mov
les
jle
shlb
sub
mov
xor
add
mov
rcl
mov
sbb
add
sub
jge,pn
scas
mov
jno
cmpsb
lea
scas
fcoml
pop
aam
mov
aaa
or
hlt
dec
xchg
mov
push
xchg
movb
movsb
int
xor
leave
jo
sbb
push
jae
lcall
and
push
testb
xor
nop
pushl
sahf
dec
jne
inc
out
orl
mov
xor
pop
ss
cmpsb
sbb
inc
dec
sub
out
adc
push
add
call
cltd
repnz
pop
jne
push
lods
inc
ja
xchg
xchg
fiadds
sbb
mov
cmp
scas
jmp
mov
lock
leave
sub
pop
imul
ret
dec
jl
or
mov
leave
aas
stos
stos
add
or
mov
je
mov
movsl
and
lods
push
fdivrp
arpl
mov
inc
arpl
sbb
call
rcl
jle
mov
xor
nop
in
xlat
jge
into
out
xchg
add
push
adc
imul
jne
pop
mov
rcll
imul
pop
xor
test
mov
lret
mov
sub
inc
push
fmul
and
fisttps
popfw
push
and
and
mov
dec
jmp
shll
add
clc
jo
sbb
adc
out
mov
jge
pop
scas
and
imul
imul
push
cmp
pop
aaa
into
adc
cmc
mov
movsl
xchg
mov
mov
and
enter
aad
sbb
and
fucom
or
dec
sbb
data16
ret
sub
cmp
jo
add
adc
and
loop
pmullw
cmp
repnz
ja
js
push
divl
cmp
cmpsb
jle
add
out
popf
insl
add
push
cli
fwait
add
inc
rclb
inc
fidivl
nop
loope
and
ficoms
insb
je
rdmsr
addr16
xor
adcl
test
frstor
enter
mov
sarl
jno
jp
or
aad
xchg
int3
rcr
mov
jg
je
aad
repnz
test
lds
and
iret
fnstenv
inc
into
dec
in
les
movsl
pop
ficomps
pop
mov
aam
movl
xchg
fadd
mov
loope
aas
pop
std
ds
sub
push
inc
push
into
sub
popa
push
jmp
push
lods
push
pop
or
test
lock
xchg
or
xor
ds
dec
stos
push
sub
mov
xchg
notl
xchg
mov
and
rcr
fs
outsb
clc
inc
outsl
jae
and
push
mov
stos
pop
fwait
push
or
popf
push
pop
fcmovnu
lods
cli
into
js
dec
aas
sti
pop
xchg
inc
sbb
cli
inc
test
mov
call
cmp
lods
dec
pop
mov
add
mov
sbb
movl
into
mov
stos
jnp
pop
mov
pop
cwtl
movsl
mov
cmp
mov
inc
das
movsb
je
stos
jl
call
test
sbb
sub
arpl
bound
pop
mov
and
fdivr
inc
fistpll
insl
test
sahf
push
cmp
lds
adc
mov
cmpsb
std
adc
pop
xchg
dec
jo,pn
xchg
addr16
and
pusha
loope
jo
imul
inc
pop
data16
test
jnp
jbe
repnz
les
movsl
enter
pause
cltd
fcmove
insb
push
aas
cmp
dec
shlb
push
sarb
dec
xor
mov
ret
xor
or
dec
dec
jp
or
js
add
add
jnp
lea
shrl
inc
jae
loopne
mov
into
pop
or
call
sub
add
imul
fs
mov
sub
or
xchg
in
jae
inc
mov
test
and
fdivrs
mov
push
dec
xor
cmpsl
add
iret
repnz
rcl
stc
or
mov
mov
fmull
sahf
jo
lret
mov
sub
mov
mov
jb
addr16
mov
sahf
xchg
retw
int3
daa
lret
lret
rorl
lods
lods
addr16
sub
jae
popa
add
in
inc
add
or
loopne
aam
js
movsl
nop
stos
out
adc
movsl
dec
push
jecxz
jbe
mov
cmp
or
mov
mov
test
je
pop
mov
fiadds
inc
fsubl
movsl
cwtl
jo
mov
pop
mov
mov
loopne
out
push
mov
jecxz
loope
dec
mov
lods
push
xor
cli
out
pop
aad
insb
push
das
lods
leave
xchg
mov
aad
out
cmp
imul
jae
fidivrl
das
fs
loop
xchg
pop
mov
xchg
popf
or
mov
data16
xor
sbb
xchg
adc
push
cli
scas
pop
pop
gs
std
cmp
and
inc
jns
out
xorl
cmpsb
fistps
ret
fmul
inc
xor
js
mov
data16
fdivl
fldt
adc
dec
sahf
test
out
push
dec
clc
enter
ds
push
and
cmc
pop
sub
jnp
test
mov
adc
das
xor
mov
stc
inc
cmc
out
addr16
add
xor
pop
jne
mov
pop
sbb
fimuls
in
cli
movsb
push
jl
sahf
sahf
xchg
dec
jle
ds
pop
aam
test
inc
scas
add
pop
or
xchg
xlat
lahf
jo
push
loop
fnstcw
lret
jne
ret
jmp
jbe
je
push
aaa
jl
add
int3
push
aam
jl
das
mov
je
int3
inc
xchg
adc
cs
lods
add
xchg
fadd
arpl
add
test
jmp
sarb
mov
sbb
adc
inc
xchg
or
std
mov
cli
mov
jns
mov
and
or
adc
sti
sub
mov
xchg
aad
push
mov
scas
jecxz
gs
xorl
sub
loop
mov
ficoms
out
mov
sub
scas
popf
jo
insb
cwtl
pop
mov
cmpl
clc
dec
fstl
sti
in
jbe
xchg
int
and
pop
cmp
mov
out
bound
test
xor
mov
mov
aad
fxch
das
jecxz
inc
test
cmp
loop
sub
lret
cmp
push
pop
imul
jmp
jle
xchg
shr
popf
data16
xor
mov
inc
mov
adc
nop
fidivl
mov
xchg
push
lods
test
movsl
mov
data16
out
repz
sbb
and
cwtl
sarb
push
cmpsb
mov
pop
or
add
jbe
push
cwtl
aam
lea
mov
xchg
lret
mov
int
cs
fxch
aam
mov
adc
xchg
mov
data16
cmp
loope
or
pop
fistl
ret
xlat
pop
add
jns
aad
sub
into
push
or
sub
mov
lret
cmp
xorb
sub
mov
js
test
jnp
mov
and
push
iret
jecxz
shrb
and
dec
adcl
adc
mov
lock
xchg
enter
scas
xchg
mov
jp
mov
inc
sub
test
mov
in
and
or
xchg
xor
mov
dec
adc
cmp
push
cltd
sub
mov
out
aaa
pop
es
sbb
add
pop
out
ss
test
pushl
xchg
bound
sti
int
mov
pusha
cld
stos
addr16
daa
dec
pop
push
push
mov
ss
sbb
es
int
emms
pop
mov
clc
cmp
jo
dec
adc
and
jae
inc
adc
sub
jl
jp
cmp
ret
xor
sbb
in
xor
push
bound
negl
add
test
xchg
sbb
outsb
decb
test
push
mov
and
cmp
aam
push
lret
xor
mov
fimuls
das
mov
xchg
adc
mov
imul
jp
enter
xchg
jnp
jae
ret
mov
out
xor
sub
add
xchg
testl
sbb
pop
bound
push
idivb
repnz
xchg
addr16
pop
mov
nop
outsb
outsb
dec
jl
adc
sbb
mov
enter
ret
js
and
jl
mov
mov
mov
mov
mov
data16
or
inc
or
dec
std
xor
hlt
scas
stos
and
sbb
mov
int3
adc
aad
imul
mov
in
and
inc
sbbl
and
adc
mov
loopne
mov
aaa
ret
push
lea
inc
add
sub
cmp
and
mov
incl
js
int3
js
adc
es
mov
add
fildl
imul
pop
sub
or
adc
aaa
jns
into
testb
adc
fsubr
ja
jle
sub
lock
int3
dec
cmpsb
push
push
pop
aas
pop
xchg
out
dec
mov
mull
scas
pop
aas
pop
addb
gs
js
jbe
adc
cld
xor
jno
push
jbe
loope
and
cmp
jb
push
aam
adc
call
in
mov
mov
loope
fisubs
mov
mov
fidivs
out
icebp
xchg
jecxz
das
jno
dec
ja
xchg
mov
fs
dec
or
sbb
jp
or
add
test
leave
in
popa
jo
push
test
gs
es
loopne
jnp
icebp
data16
sub
and
loop
mov
pop
sbb
push
bswap
xor
fdiv
pop
movsb
leave
push
inc
movsl
fbld
leave
cmp
fimull
jne
je
stos
jp
shlb
aaa
fisttpl
outsl
mov
subb
mov
popa
jge
push
jg
imul
nop
push
sahf
call
fdivr
jb
jp
cmp
mov
and
mov
xor
rclb
jmp
cmp
inc
mov
outsb
or
push
pinsrw
arpl
shlb
vmwrite
data16
pop
mov
lret
mov
pop
insb
addb
mov
cmc
and
xchg
mov
push
aam
nop
mov
mov
adcb
xor
adc
ja
iret
sbb
push
sbb
mov
inc
jb
mov
or
adc
iret
jne
pop
int3
adc
jns
loop
aam
loop
subl
addb
push
lods
push
imul
cmp
loop
fdivrs
stos
out
jnp
adc
mov
lret
push
das
sbb
outsl
mov
ljmp
dec
out
adc
pop
cmp
and
xlat
scas
or
in
fldenv
addb
pop
popf
stc
decl
adc
jl
lods
jp
in
ds
or
mov
inc
loopne
xchg
fwait
inc
jno
fcoms
pop
pop
sbb
mov
in
cmpsb
xlat
or
fmul
push
ljmp
imul
decl
cmp
xor
jae
repnz
ds
jbe
arpl
leave
movsl
and
lock
aam
lahf
mov
in
xchg
aam
int
sbb
xchg
das
hlt
test
xchg
pop
push
rcl
int3
cmp
add
es
nop
mov
je
jge
sub
es
mov
sbb
lret
jae
xchg
and
sub
repz
pop
test
js
int3
jge
addr16
data16
adc
cvtpi2ps
mov
js
pop
pop
xor
andb
insl
adc
mov
stos
outsl
xchg
add
mov
mov
scas
sbb
lret
sub
jl
lea
bound
jle
ja
sub
jl
dec
jbe
cmp
jmp
pop
jbe
not
mov
in
lds
jns
shrb
stos
mov
and
push
inc
fabs
push
loop
jmp
loope
lret
xor
lahf
push
cmp
xchg
scas
pop
pusha
test
mov
dec
and
fidivrl
or
popa
cmpsb
fcmovnbe
jnp
into
mov
loop
cmp
and
adc
inc
jle
xchg
adc
add
jecxz
notb
aad
xchg
data16
movsl
cmpsb
or
push
stos
mov
sbb
cmp
int3
decb
cwtl
cmp
xchg
pop
and
cmp
jge
adc
cmp
pop
sbb
fld
bound
mov
cmp
rcr
fldln2
xchg
sbbb
jb
nop
xor
dec
xchg
sahf
fsub
jp
in
stos
add
pop
jge
jne
shlb
pop
test
mov
mov
movsb
dec
orb
xchg
pop
fsubrs
push
sub
imul
aam
inc
int
sahf
outsb
or
or
aas
cmpsl
dec
pushf
push
stos
rep
xor
sahf
push
inc
mov
imul
cmp
push
int
cmp
mov
fs
out
jns
mov
cmpsb
int3
addr16
push
test
add
int3
mov
jno
mov
sub
js
cli
ds
popf
repnz
mov
sbb
mov
repnz
les
mov
jnp
aas
and
je
imul
mov
loopne
sbb
push
dec
jb
cmpsl
addr16
sub
ds
pop
insb
pop
leave
inc
cmp
or
data16
shl
jne
pushf
popa
or
adc
out
inc
movsl
or
fisubs
dec
in
xor
xchg
mov
rcl
mov
mov
inc
in
test
jl
add
cmpsb
push
add
nop
das
sub
push
adc
data16
aad
ds
sahf
shrl
mov
cmp
outsl
add
aad
faddp
adc
pop
leave
adc
dec
inc
inc
outsb
into
aaa
push
aas
sbb
pusha
subl
jmp
bound
test
mov
mov
jo
adc
pop
outsl
xchg
mov
popf
jg
and
inc
xchg
cmpsb
pusha
adc
nop
inc
inc
data16
cmp
arpl
sahf
lods
push
iret
das
mov
mov
cmp
in
add
and
xchg
jbe
adc
mov
lret
imul
cld
cmpl
xlat
lret
cmp
sub
mov
je
fnsave
xor
cmpsl
out
icebp
arpl
stos
iret
cmp
mov
frstor
rcll
imul
adc
shlb
jns
adc
fs
cmp
inc
shrb
es
cmc
jnp
shr
je
enter
xorb
xchg
xor
cmpsl
addr16
pop
inc
xchg
pop
xchg
jl
cmp
mov
pop
lret
int3
movsw
shrl
mov
sbbl
cld
pop
shll
aam
sbb
sub
push
dec
scas
mov
xorl
mov
mov
cmpsb
popf
icebp
pop
pop
scas
inc
mov
mov
movsb
adc
jne
mov
fistps
push
mov
jg
jmp
decl
stos
leave
fs
mov
inc
xchg
xor
fldl
test
arpl
sbb
push
mov
inc
jae
pop
sub
push
mov
push
ficoms
lods
rcrl
adc
adcb
dec
inc
subl
pop
xor
shll
lret
adc
pusha
xchg
jge
std
jl
ds
out
shlb
dec
mov
out
pop
iret
mov
mov
fucom
xchg
lahf
fldt
mov
pop
jae
sbb
rcrl
icebp
repz
and
inc
and
imul
xor
decl
xchg
stos
mov
ljmp
std
sub
lea
sbb
xchg
mov
pop
int3
inc
or
push
leave
sub
jle
out
adc
push
cmpb
jle
inc
xchg
lea
mov
adc
cmp
pusha
adc
sbb
jo
xchg
sbb
ds
adc
shlb
lods
je
jnp
pop
iret
push
ja
push
pop
mov
data16
inc
xchg
mull
adc
xchg
dec
nop
push
ret
jnp
sahf
jb
je
repnz
jne
imul
xchg
incl
lock
jbe
add
js
inc
inc
jp
jno
inc
add
add
js
fisubl
fs
les
mov
mov
es
mov
cltd
jne
jnp
xchg
icebp
test
push
pop
ret
jno
sub
cwtl
insb
dec
addr16
lods
jo
push
inc
xchg
push
loopne
cmpsl
data16
dec
adcl
lods
jl
lahf
sbb
js
je
or
jl
aam
mov
xor
xor
dec
lahf
xchg
lock
into
or
or
push
sahf
int3
mov
pushw
jo
add
dec
dec
bound
sub
push
xchg
xor
mov
into
scas
dec
or
adcb
stos
cs
test
fsubs
out
scas
xchg
jg
xchg
push
sahf
insl
push
mov
pop
push
xchg
es
mov
addb
scas
jecxz
mov
mov
mov
lret
push
xchg
xchg
cmp
mov
xacquire
mov
ja
mov
add
orb
xorb
cmp
mov
outsl
loopne
xchg
loope
clc
jnp
push
cmp
sbb
sbb
lcall
push
mov
out
rcrb
sahf
iret
and
dec
push
xchg
ret
ds
and
test
iret
inc
mov
xchg
test
sbb
xchg
call
jp
inc
xchg
mov
sahf
sahf
mov
mov
pop
push
ret
roll
mov
cmpsb
mov
xchg
mov
popf
adc
addb
rclb
mov
ret
inc
mov
xchg
sahf
test
push
add
xchg
xchg
cwtl
lret
addr16
inc
xchg
push
lahf
cmp
mov
adc
incb
dec
add
mov
adc
mov
movzbl
add
xchg
xchg
mov
mov
cmpsb
push
lcall
add
xchg
mov
lahf
cmp
out
lahf
adc
clc
dec
lcall
mov
lahf
push
lahf
sbb
jg
test
addb
ret
repnz
jbe
fcmove
lcall
mov
and
outsl
cmpsl
rcrl
mov
dec
lahf
or
jp
adcb
xchg
lahf
push
sahf
into
add
xchg
adc
mov
rolb
sahf
jns
es
pop
iret
and
cmp
xchg
mov
loop
xchg
cmp
jle
or
cmpsw
cs
cmpsb
add
xor
lret
mov
ljmp
cli
mov
adc
into
addr16
mov
cmp
ds
dec
fidivl
sub
lock
fldcw
andb
adc
push
xor
int
test
int
jo
enter
out
jmp
push
mov
stos
ret
push
pop
fstps
cmpsb
scas
fidivs
aaa
orl
mov
push
mov
mov
inc
test
or
std
out
pop
pop
cmp
mov
pop
shlb
mov
jl
push
lcall
jg
mov
mov
inc
inc
sub
and
xchg
ror
and
cwtl
adc
int3
xchg
std
sbb
jmp
dec
fbstp
loope
enter
mov
shll
adcb
insb
popf
iret
rclb
imul
scas
pop
jle
mov
xor
aaa
push
pushf
ret
mov
mov
jb
xchg
xor
imulb
mov
imul
jge
shrl
repz
jle
movb
pushf
je
push
push
lods
inc
lahf
shll
xor
sbb
adc
cmc
jae
test
pushf
cmpsl
dec
jbe
dec
sbb
addb
repnz
mov
das
out
data16
shrb
loopne
pop
movsb
mov
adc
jo
scas
lds
pop
inc
shl
mov
aad
sarb
js
scas
addr16
cmp
jnp
pop
out
insl
or
or
cwtl
push
sub
movsl
imull
and
mov
adc
neg
jbe
inc
xchg
sbb
inc
pop
jns
cmpsb
fcoml
test
mov
xorl
push
pop
lods
or
sbb
movsl
or
jo
lods
xchg
xchg
cs
scas
out
xlat
jp
inc
mov
xchg
xor
or
add
inc
push
pop
xchg
addr16
push
fwait
stos
xchg
aam
outsb
inc
adc
out
ljmp
jmp
int3
push
or
push
mov
pop
bound
adc
aaa
inc
mov
lahf
push
xlat
xchg
fidivs
inc
sub
add
inc
mov
fisubrs
fbld
je
inc
jae
push
test
xchg
sar
jmp
pop
push
jbe
pop
stos
push
int
adc
imul
dec
leave
jl
mov
jp
add
ja
jne
cld
lds
mov
insb
or
fidivs
mov
mov
fistpl
inc
sahf
out
xchg
aam
mov
push
dec
sub
inc
test
jge
imul
adc
mov
cmp
je
ret
jns
stos
jmp
mul
adc
pop
or
add
loop
jp
inc
or
jl
xchg
nop
cltd
and
sub
jp
adc
sbb
and
pop
jmp
dec
mov
jnp
push
into
enter
lds
and
jno
xchg
add
mov
jl
mov
mov
popf
hlt
fidivrl
or
das
xchg
repz
in
call
lds
mov
sarl
pop
pop
nop
cmpsl
push
add
push
jae
call
add
cmp
cmp
and
clc
pop
mov
pop
lcall
lods
push
mov
in
adc
imul
sub
adc
push
adc
xchg
lock
pop
aam
lahf
dec
push
flds
xlat
addr16
mov
sbb
mov
cs
sub
ret
rcrb
jl
dec
outsb
and
push
clc
add
das
lock
repnz
mov
jne
out
pop
dec
adc
nop
xchg
mov
inc
pusha
cmpb
jg
or
pop
lahf
pop
adc
dec
outsl
or
adc
ljmp
add
jae
test
test
cmp
outsb
jne
in
rol
testb
inc
pop
dec
mov
push
xor
js
xchg
mov
lret
jecxz
mov
sbb
jl
mov
jo
rorl
jmp
adc
ficoms
xor
xchg
test
arpl
jbe
pushl
ja
pusha
mov
xchg
popf
cmpsb
out
cmp
fdivrl
jo
xchg
xchg
push
push
cmp
jle
or
js
mov
fsubl
js
sbb
cmp
bound
jnp
outsl
mov
gs
pop
loopne
inc
jnp
and
std
dec
xchg
pop
ja
adc
jae
mov
aas
xor
jmp
dec
jp
shll
dec
loop
xchg
sub
inc
adc
push
jno
movsl
stos
jae
xlat
jne
out
xchg
sub
xchg
and
xlat
notl
mov
sbbl
mov
lahf
mov
in
test
add
mov
aad
je
ficoms
scas
sahf
push
xchg
adc
pop
xchg
jae
lock
aad
addr16
aam
and
outsl
mov
pushf
stos
sbb
shld
hlt
test
or
mov
adc
add
inc
xchg
push
and
adc
ret
mov
mov
mov
inc
addr16
shlb
data16
sub
fidivrs
mov
cwtl
mov
pop
in
fildl
dec
mov
jae
fiadds
dec
ljmp
xchg
js,pt
repnz
je
push
fidivs
xor
or
xchg
test
xchg
psrlq
ret
xor
and
jle
push
out
or
ja
cmp
pop
or
xor
sbb
js
and
push
fisttps
imul
push
out
and
in
decb
ja
shll
popa
adc
cld
push
and
stos
arpl
xchg
xor
aad
add
cmpsb
lea
fsubrs
repz
mul
cmc
xchg
or
orb
jl
xchg
outsb
sub
out
in
dec
cmp
mov
add
shll
fimuls
jp
push
int3
xor
imul
and
lock
es
xchg
js
mov
scas
xchg
jbe
je
rolb
int3
and
mov
shlb
sbb
iret
push
mov
cmpsb
call
push
js
rorl
cmp
add
mov
cld
add
push
xor
inc
orb
mov
pusha
mov
cmc
pop
mov
int
movsb
ret
xchg
mov
nop
sbb
lret
jmp
int
out
add
icebp
jecxz
xchg
jl
xchg
lretw
call
push
jmp
repz
mov
lea
jns
add
popa
ror
sbb
or
cmpsl
mov
push
xchg
shlb
inc
inc
push
out
jb
into
mov
mov
xor
jecxz
lcall
and
sbb
andb
fistpl
cmp
cmpsb
mov
add
pusha
popf
inc
push
cmp
dec
fsubrs
pop
addr16
dec
jne
inc
push
inc
daa
das
xlat
mov
push
stos
nop
idivl
cmp
mov
push
fisttpl
mov
sbb
pop
push
pop
adc
out
lret
or
xor
push
push
fdivrl
push
mov
out
jb
jo
fists
mov
sbb
sahf
pop
mov
inc
mov
xchg
mov
hlt
nop
push
arpl
inc
dec
test
push
in
and
cltd
out
in
jmp
jns
es
cmp
xchg
and
push
pushf
jp
inc
xchg
out
pop
or
jecxz
das
add
loopne,pt
xchg
lods
push
mov
rorb
pop
cmc
and
push
scas
jp
out
lcall
fdivs
inc
adc
or
dec
sbb
push
jae
pop
add
cmp
dec
repz
jp
push
sbb
ja
mov
xorb
int3
enter
cmp
test
lea
fs
loopne
xor
faddp
outsl
mov
fimuls
xor
mov
cs
rcrb
mov
arpl
adc
dec
insb
rcr
sbb
xchg
or
addb
lcall
adc
pop
inc
ret
push
add
jge
adcl
cmp
sbb
and
pop
adc
andb
xor
movsl
cld
pop
cmp
lds
inc
es
subb
lock
sbb
xchg
jbe
push
mov
xchg
adc
push
int3
nop
or
inc
insl
subb
add
pop
add
jae
cwtl
xchg
in
inc
dec
loop
jg
daa
mov
stc
jo
movsl
pushf
fidivrl
push
sbb
jecxz
adc
pop
push
and
orl
dec
push
testl
or
inc
xchg
mov
dec
push
xchg
xorl
cmp
rolb
mov
xchg
mov
sbb
jno
leave
xlat
xchg
mov
cmpb
add
mov
mov
mov
cmp
and
insl
int3
dec
or
pop
loope
add
fsubrl
push
xchg
xchg
add
pusha
fnstcw
sbb
xor
mov
jge
lcall
mov
sbb
int3
jo
mov
std
jo
leave
jae
outsl
inc
sub
dec
movsl
jl
mov
add
test
jp
lret
pop
xchg
stos
arpl
sbb
jl
rcrl
xchg
jne
mov
test
xchg
lods
rol
sub
rcrl
sbb
test
cmp
fildl
int3
ficoms
sub
mov
push
inc
jmp
cmpsb
lods
iret
or
dec
sub
aam
pop
cmpsb
mov
enter
scas
das
jbe
cwtl
push
sti
test
xor
imul
popf
shlb
mov
in
testb
jle
shlb
adc
push
push
sbb
jne
dec
je
movsl
outsb
sub
cmp
and
scas
sub
mov
jb
push
sbb
fldt
dec
int
jnp
int
cltd
jne
dec
mov
mov
imul
push
push
xchg
cmpsl
inc
mov
jb
decb
fnsave
push
sub
mov
and
xor
cmp
mov
xchg
andb
mov
rclb
xchg
shlb
xor
rorl
out
push
ljmp
lds
aad
and
pusha
jl
push
out
cmp
cwtd
mov
jl
scas
aam
push
int
pusha
popa
mov
popa
bound
rorb
lock
sbb
xchg
aas
rcrb
inc
ja
adc
mov
jbe
push
inc
es
rcll
pop
cwtl
mov
mov
repz
sarb
push
mov
enter
mov
xchg
shr
cmpb
push
xor
mov
cmc
xchg
out
mov
icebp
sarb
outsb
push
daa
sbb
adc
push
xchg
xchg
mov
loopne
mov
inc
decb
lcall
mov
cmpsb
sub
xchg
jp
fiadds
fldcw
movsb
ds
out
dec
and
xchg
in
mov
xchg
aas
mov
mov
test
xchg
rclb
rcrb
sbb
mov
xchg
mov
dec
ret
dec
push
xchg
xlat
mov
mov
popf
lahf
fimull
dec
pop
scas
sahf
push
xlat
sbbb
jbe
scas
and
cmp
pop
mov
rol
out
or
call
andb
mov
scas
mov
mov
lahf
push
test
sahf
test
cmpsb
mov
sbb
xchg
push
xor
rcrb
mov
mov
jp
out
xchg
inc
mov
cmpsl
xchg
cli
xor
push
imul
test
cmpsb
push
xchg
add
pop
push
jg
cmp
mov
xor
les
mov
pop
xlat
add
mov
pop
lret
push
xchg
mov
xchg
jnp
xchg
push
outsb
aam
rorb
nop
icebp
add
movsb
cmpsb
out
les
cmp
push
out
outsb
inc
push
ret
xor
ljmp
mov
mov
mulb
push
pushw
dec
aam
out
xor
mov
jp
sub
dec
add
popf
adc
dec
xchg
leavew
sbbb
fmulp
int
outsl
push
and
push
rcrb
addl
xor
fistpl
adc
jbe
jp
cmpsl
sti
xchg
aas
mov
mov
and
add
mov
mov
fsubrs
aad
popa
inc
mov
cmp
in
and
cmp
mov
fstp
inc
dec
lods
into
mov
xchg
enter
fmulp
mov
fimuls
inc
adc
fiadds
cli
jle
out
stos
ret
sbb
or
arpl
stos
shl
repz
jo
faddl
add
mov
sahf
add
and
jne
mov
cmp
add
xor
xchg
test
mov
xor
je
cmp
ja
dec
xor
movsl
push
push
push
sahf
mul
lds
sbb
lret
adc
cs
mov
mov
jo
fcoml
mov
and
imul
xor
or
mov
test
sbb
dec
bound
int
cmp
in
les
adc
mov
fadds
and
pop
out
std
sub
test
sbb
xchg
cmp
cltd
data16
inc
aaa
inc
adc
push
out
mov
jb
mov
out
dec
ja
leave
mov
lcall
ljmp
data16
xchg
add
push
mov
aam
push
xchg
std
mov
xor
cltd
int3
inc
jg
imul
sar
xchg
ror
jbe
cli
inc
sbb
xchg
nop
aas
dec
mov
mov
jbe,pt
adc
mov
mov
frstor
scas
std
and
dec
cltd
outsl
push
sbb
or
fidivs
dec
fcmove
inc
scas
sub
jg
ja
adc
mov
cli
cmp
aam
popa
cmp
jg
les
push
and
and
jo
xchg
xchg
jl
pop
cmp
push
ja
out
jnp
addr16
ret
and
int3
daa
xor
xchg
and
es
cmp
or
and
fidivs
jp
in
mov
xchg
pop
lods
push
je
frstor
out
adc
js
ja
xchg
dec
out
xchg
mov
lcall
cmc
rorb
test
lret
sahf
int3
mov
lea
cld
cld
fbld
nop
je
popa
mov
adc
ljmp
cmpsl
jg
add
dec
into
sbb
xchg
sti
insb
mov
fstl
iret
fidivs
or
adc
push
jle
jnp
pushf
pop
sbb
sub
jae
inc
fcompl
jg
or
jns
xor
shlb
fst
das
out
mov
mov
lds
ret
mov
xchg
jp
sahf
pop
cmp
inc
jae
or
sub
in
xchg
ja
pop
mov
mov
sbb
bound
mov
pop
mov
add
mov
mov
inc
and
aad
dec
icebp
jo
or
xor
pop
cmp
cmp
lret
push
and
fmulp
jbe
or
push
into
out
add
loopne
jg
mov
mov
pushf
int3
sub
jnp
jge
imul
inc
cmpb
mov
cli
or
leave
sbb
cmp
xorb
ja
inc
aas
cmp
inc
xchg
mov
cmc
nop
jp
cmp
addl
push
rolb
or
leave
push
in
inc
lods
xchg
into
dec
rol
fcoml
xchg
pop
jge
add
push
in
push
out
outsb
pop
add
ja
cmc
fisubrl
nop
xchg
repz
xorl
jbe
cmc
mov
adc
in
inc
pop
mov
xchg
and
push
cltd
stos
add
pushf
push
adc
jae
lock
xlat
mov
movb
sarb
and
movb
je
add
jl
jns
orl
and
push
xchg
mov
sti
inc
stc
inc
shl
sub
push
scas
jecxz
aad
jbe
pop
sub
je
leave
ss
jl
pop
andl
xchg
push
mov
jmp
paddw
stos
hlt
hlt
adc
xor
mov
fmul
arpl
cld
popa
popa
xchg
mov
mov
js
lods
pop
xorl
pop
xorl
inc
pop
push
lods
outsb
std
xor
add
pop
mov
cld
mov
hlt
je
jmp
mov
and
imul
adc
and
or
jp
adc
addr16
adc
fs
push
mov
das
sbb
ret
sub
rclb
loope
call
call
addr16
or
mov
mov
sbb
jl
or
inc
adc
nop
std
adc
xchg
mov
cvtps2pi
cmpsl
inc
jne
mov
sahf
jmp
inc
enter
mov
and
clc
rclb
mov
mov
jns
inc
fmul
push
mov
jb
loopne
xchg
mov
mov
lods
cmc
add
std
in
mov
cmpb
pop
gs
fwait
push
xchg
adc
jl
and
push
mov
sbb
pop
push
and
fnsave
inc
cmpsb
repz
cli
sbb
out
subb
scas
je
int
inc
jno
dec
push
out
cwtl
cld
fsubl
adc
push
ds
pop
js
shlb
xchg
dec
in
popa
dec
xchg
mov
cmp
cmpsb
jo
sbb
roll
xchg
and
sbb
mov
push
inc
movsl
and
call
or
inc
out
clc
add
aas
sub
scas
popa
nop
addr16
mov
test
nop
pop
add
shl
and
dec
insb
mov
sarb
jle
dec
cmp
fstl
xchg
cmp
pop
outsl
enter
push
cmpsb
xchg
addr16
and
in
inc
add
roll
mov
sbb
and
call
add
push
jo
dec
dec
pusha
adc
sti
mov
sbb
mov
dec
cwtl
mov
push
or
jb
aas
lock
aaa
mull
addr16
ror
movsl
fcomps
testl
in
xchg
or
xchg
je
cmp
leave
nop
inc
outsb
mov
push
faddl
scas
fsubp
push
data16
imul
mov
xchg
mov
jb
and
or
ret
lcall
pop
setae
icebp
mov
xchg
outsl
jg
inc
cmp
cmp
sarb
std
lret
inc
rolb
shrl
cmp
jnp
adc
mov
jae
pop
dec
stc
adc
test
aam
repz
sbb
notb
add
mov
repnz
mov
lret
dec
push
xchg
mov
or
xchg
cmpb
push
and
roll
std
add
dec
push
addl
sub
int
inc
in
push
loope
addr16
rolb
and
mov
inc
pushf
jbe
mov
cmp
je
xchg
push
mov
call
inc
sbb
mov
loopne
cmc
inc
mov
stos
fisubs
fdivrl
or
jle
add
cmp
fstl
rcr
jle
cmp
addb
mov
jnp
mov
xchg
push
cmpsb
mov
cs
mov
sub
aad
ss
stos
negl
out
jmp
nop
push
ljmp
cmp
movsb
mov
cmpsb
stos
cmp
cwtl
push
cmp
add
mov
mov
mov
clc
mov
adc
jne
insb
jnp
sub
sti
dec
xchg
je
ja
rcrb
icebp
stc
ficomps
stos
or
xchg
xor
jne
iret
jp
pusha
jae
int3
mov
sub
out
and
leave
xchg
sub
out
js
f2xm1
cmpsb
imul
jmp
rep
jg
mov
andb
add
hlt
pop
mov
inc
add
aas
lahf
mov
fdivrl
jbe
mov
cmp
sub
lahf
fimull
jg
into
call
or
ds
stc
xchg
repnz
out
aaa
inc
xchg
pop
shrl
pop
adc
mov
dec
arpl
int
mov
hlt
lods
fwait
mov
rolb
adc
pop
jl
push
loope
xchg
aam
mov
gs
outsb
and
loopne
lds
fwait
in
out
xchg
add
or
or
jg
inc
icebp
imul
mov
push
subb
ds
inc
xchg
stos
outsb
inc
js
bound
movsl
add
xchg
sbb
sub
cs
push
push
cli
jae
mov
pusha
daa
scas
add
mov
sti
jae
in
ds
cld
xchg
std
sub
pop
jae
jo
cmp
lods
ret
push
push
xchg
pusha
scas
mov
jle
adc
in
xor
inc
mov
lods
mov
aas
inc
xchg
pop
pop
in
outsl
nop
loop
jae
mov
lea
call
stos
pushf
xor
mov
jp
mov
jns
or
and
cmp
jge
mov
cmpb
cwtl
sti
adc
ja
mov
decl
sbb
scas
ret
fisubrs
repnz
push
add
pop
gs
push
inc
add
es
jl
or
inc
jae
pop
add
movb
mov
rcrb
dec
add
jg
dec
xchg
inc
je
sbb
inc
and
jne
inc
sub
test
pop
dec
or
sub
dec
push
inc
and
push
mov
adc
jae
mov
enter
mov
out
xchg
aas
rorb
int3
xchg
sti
dec
subl
int
sti
pop
ficompl
dec
dec
pop
dec
push
cmpsb
mov
fwait
inc
js,pt
sbb
sub
dec
jae
jno
outsl
sub
dec
xlat
out
xor
lods
loop
cld
das
mov
test
jg
push
push
mov
data16
jb
push
ss
ja
test
push
push
mov
lcall
jb
mov
jbe
mov
mov
nop
push
lcall
pop
push
data16
clc
or
mov
sbb
mov
xchg
leave
js
rolb
and
dec
outsl
sub
mov
into
add
mov
mov
mov
inc
sub
loopne
rorl
xchg
jbe
jns
mov
sub
cmpsb
mov
in
mov
inc
imul
xchg
addb
pop
inc
push
and
cmp
testl
je
pop
stos
xor
ror
inc
lahf
pop
loopne
stos
dec
movsl
push
loop
push
inc
aam
popf
lea
dec
pusha
incb
loope
cmp
jp
xchg
jbe
xchg
xchg
sub
mov
lcall
pusha
shl
inc
jb
jl
fistpl
rcrb
cli
mov
fisubl
sbb
cmp
xorl
iret
jne
fstpl
cmp
arpl
cmc
sub
push
push
pop
jae
mov
adc
addr16
mov
pop
mov
and
jae
xchg
mov
dec
dec
adc
sub
jo
stos
leave
add
scas
add
in
mov
jb
sbb
mov
xchg
mov
sahf
xor
mov
adc
push
dec
sahf
mov
mov
imul
adc
std
xchg
loope
sub
pushf
outsl
push
xchg
sbb
xchg
lret
jecxz
xchg
mov
mov
pushf
fsubp
sahf
mov
mov
sahf
adcl
fcomps
xchg
or
xchg
add
jp
testb
cmc
fcmovnbe
push
out
mov
mov
out
data16
xchg
pop
insb
jo
rolb
lret
sahf
xchg
jle
scas
leave
lahf
mov
or
out
xchg
inc
js
adc
aam
xor
push
push
lea
sbb
xchg
rclb
loop
cmp
mov
sbb
xchg
je
add
push
out
xchg
and
mov
dec
lret
adc
mov
ffreep
pop
add
xchg
sbb
ss
fimull
cli
adc
adc
ficomps
cmpsb
nop
scas
xchg
dec
daa
push
pop
and
std
adc
jle
sahf
sahf
or
sub
push
mov
dec
or
cmpsl
or
xchg
lcall
nop
rclb
into
addb
or
icebp
dec
out
sahf
push
fldl
or
iret
cli
sahf
insb
popf
or
loop
repz
into
pusha
add
ss
mov
push
pop
push
movl
iret
mov
inc
test
add
add
push
outsb
in
or
lcall
mov
dec
ficomps
mov
mov
xor
xchg
test
fisubl
xchg
sub
push
fmuls
mov
or
mov
mov
xchg
jbe
xchg
mov
pop
push
mov
sub
mov
add
sub
les
or
cli
xchg
ret
cs
or
adc
push
cmpsb
lcall
int
je
loopne
push
sbb
xor
cmp
ss
fisttpll
out
mov
jmp
sbb
jb
pop
popa
mov
fdivs
ret
dec
cmp
pop
inc
push
inc
mov
out
or
jb
das
cmp
mov
jo
xchg
data16
daa
ficoml
repnz
testl
xor
add
jo
lods
rclb
cltd
add
icebp
call
jo
int3
sub
sbb
lds
mov
dec
inc
sub
int3
jg
push
dec
dec
out
xchg
mov
jp
or
and
pusha
adc
dec
fnstenv
lock
repnz
aaa
popf
push
dec
dec
pop
xlat
bound
popa
mov
insb
push
adc
loop
or
push
cmp
pop
mov
test
popl
pushf
movsb
push
ss
mov
xchg
shrl
jno
mov
aad
rorl
jno
cmp
push
gs
aas
out
mov
pop
data16
inc
hlt
cmp
sahf
cmp
fidivrs
mov
mov
movsl
stos
andnps
outsl
xlat
in
and
mov
decb
jbe
inc
lea
dec
pop
push
xchg
aam
repz
mov
push
insb
in
andb
addr16
loopne
inc
inc
inc
xor
pusha
add
sti
and
insb
jg
xchg
inc
mov
jl
fiadds
cmc
cmp
ret
aas
out
fisubs
xor
rcl
mov
cmp
gs
jp
in
jmp
dec
rorl
addb
jp
adc
and
xchg
or
popl
std
shl
jnp
mov
stos
rclb
test
mov
adc
push
faddl
mov
mov
add
andb
std
inc
pop
mov
jno
and
out
fmul
cmp
lret
jbe
lods
ffreep
push
push
pop
xchg
mov
sbb
xchg
repnz
dec
xor
mov
xchg
inc
leave
pusha
test
icebp
cmpsl
inc
jo
jg
jae
pop
add
out
frstor
sbb
repnz
push
or
push
daa
rclb
jg
rorl
inc
fisubrl
data16
ja
iret
push
mov
scas
fcompl
fmul
sets
sub
jbe
out
jge
loopne
mov
xorl
test
pop
enter
stos
dec
das
sbb
es
mov
pop
push
andb
add
test
pushf
dec
and
loop
fnstcw
sbb
mov
and
lcall
incl
arpl
imul
icebp
stos
je
cwtl
lods
and
jnp
xchg
sbbb
jo
into
addr16
push
push
adc
cmpsb
inc
ret
out
mull
mov
xchg
xor
dec
add
and
out
jbe
jnp
push
cltd
pop
mov
jae
icebp
in
pop
aaa
call
dec
push
mov
pop
fidivrs
jle
insb
or
push
shlb
adc
dec
inc
cltd
rcl
iret
jbe
nop
imul
imul
loopne
cwtl
and
imul
xorl
cmc
add
sahf
cmpsb
fmul
pop
ljmp
aas
js
jg
inc
jmp
cmc
xchg
cmpsl
std
pop
xor
xchg
xorb
les
movsb
cmc
xchg
std
js
daa
fistl
mov
lahf
les
test
inc
jnp
jmp
xchg
rorl
imul
leave
sbb
add
pop
sub
lret
nop
faddp
pushaw
mov
push
mov
loop
xchg
into
ljmp
cltd
cs
push
cmp
lods
push
add
movsl
outsl
xchg
dec
stos
inc
leave
or
mov
xor
mov
mov
aam
int
pusha
push
mov
int
lea
jnp
jne
pusha
inc
xor
cmc
arpl
cmp
mov
lods
jns
hlt
cs
stos
add
cmpl
popa
pop
sub
lds
sub
mov
mov
fcoml
jmp
mov
mov
dec
and
insb
cmp
cld
cltd
sti
pop
push
je
mov
fldenv
lods
lret
jecxz
lcall
dec
push
dec
repz
push
or
dec
test
jg
ds
inc
mov
xor
dec
in
sahf
addr16
mov
jne
sti
arpl
push
xchg
cmp
mov
push
push
mov
cmpsb
xchg
dec
ficoms
dec
rclb
test
and
push
ret
sbb
scas
push
sub
sbb
sub
mov
subb
xlat
test
mov
xchg
or
movsb
push
mov
mov
mov
adc
add
leave
inc
movsb
xor
adc
mov
pop
inc
es
add
jl
push
repnz
roll
into
sub
jle
lret
pop
push
ds
push
pushf
cmpsl
fidivl
rcrl
inc
dec
push
leave
adc
fs
mov
xchg
int
sub
and
lods
mov
xorl
lock
cmp
neg
into
inc
lods
addr16
inc
aas
rorb
js
pop
add
mov
std
push
push
and
push
loope
push
les
push
xor
pop
les
in
movl
push
aam
int
add
cmp
and
ja
aas
fsts
sub
mov
jnp
frstor
adc
fidivs
bound
movsl
inc
hlt
ret
scas
daa
dec
push
nop
xchg
sahf
flds
cmp
ja
inc
js
fcmovu
loop
lahf
pop
pusha
mov
movb
scas
cmpsl
inc
sbb
movb
push
dec
push
inc
mov
sbb
mov
xorl
mov
pop
mov
je
shlb
mov
push
sub
nop
fnstcw
imul
add
in
aas
mov
jo
cmp
add
adc
rcrl
arpl
and
pop
cltd
mov
iret
xor
sub
jno
xor
jbe
push
cmp
arpl
inc
and
data16
xlat
and
inc
lcall
out
aad
cwtl
fldenv
adc
neg
push
inc
cmp
jle
je
sbb
inc
adc
incb
insl
mov
pop
mov
adc
ss
push
nop
or
mov
jbe
fbld
addr16
push
xchg
ret
cmp
pop
outsl
test
iret
sbb
out
mov
cmp
insb
data16
jg
push
fmull
lea
addw
cmc
das
je
stc
cmp
xchg
addr16
mov
shlb
pop
mov
lcall
sbb
scas
and
push
cmc
inc
dec
adc
xchg
or
fidivrl
addr16
mov
repnz
jo
adc
inc
xchg
mov
shl
data16
das
mov
insl
pop
pop
sub
or
call
cmp
add
jae
pop
mov
loop
sbb
push
lods
jne
loopne
inc
adcb
int
imul
push
push
jne
mov
cmp
popf
cmp
xchg
xorl
jae
mov
jnp
xchg
or
xchg
sbb
adc
js
jns
es
mov
push
pop
mov
xchg
out
jge
inc
shll
iret
mov
xchg
jge
and
xchg
rclb
loopne
fidivrs
lret
pushw
fldcw
cmp
mov
pop
test
cltd
dec
inc
scas
jb
and
fwait
je
icebp
push
test
jmp
xchg
fs
inc
xchg
push
leave
sub
movsw
xchg
pop
xchg
cmp
es
shlb
cmp
mov
cs
shl
addr16
notb
cli
std
inc
inc
fisubrl
lods
faddp
jecxz
out
cmp
dec
nop
adc
ret
xlat
mov
add
push
decl
arpl
ds
pop
dec
push
xor
xor
nop
jno
das
pop
mov
add
sub
bound
movb
push
lcall
std
push
fadd
js
sbb
out
xchg
or
int
call
adc
shlb
mov
inc
clc
add
pop
imul
pusha
loop
jo
roll
dec
scas
jg
imul
sub
lods
nop
mov
and
test
andb
jae
aam
out
cli
sbb
jae
jns
outsb
sbb
and
loopne
call
ljmp
cld
lods
push
imul
sub
addr16
pop
mov
cli
cmpps
fdivl
pop
mov
inc
mov
push
lahf
test
dec
loopne
jne
bound
loopne
fsubs
iret
cmp
ss
mov
stos
jns
bound
push
inc
mov
aaa
dec
dec
int
push
sahf
fdivrs
cmpb
jbe
jge
xor
inc
xchg
sbb
mov
testb
shrb
sub
out
sbb
fmul
inc
lock
ret
call
jne
or
flds
clc
in
jae
push
scas
inc
aad
add
jnp
xchg
fisubs
mov
jns
jl
push
xchg
fwait
mov
sbb
mov
out
lret
fnstcw
inc
idivl
rcll
cli
divl
cmc
aas
xorb
xchg
aad
add
shlb
cltd
addr16
popa
fsubs
mov
push
jb
data16
push
mov
and
std
sub
inc
popa
test
leave
std
cs
adc
xor
ficoml
sbb
sbb
out
jg
lea
fistl
mov
stc
xchg
add
mov
adc
xchg
shlb
shl
mov
incb
add
shrl
xchg
ret
inc
adc
cmpsl
xor
add
shll
nop
inc
stos
jno,pt
dec
pop
jb
mov
mov
push
mov
mov
sub
mov
pop
jp
jmp
shl
add
insl
xor
inc
addr16
ret
or
fwait
and
dec
push
iret
sti
xchg
leavew
stc
in
mov
cmc
bound
sbb
mov
fsubp
xchg
jmp
sbb
jno
jns
pop
lcall
pop
mov
push
jp
fdivs
je
mov
rcrl
dec
sub
or
fwait
adc
cmp
adc
popa
fwait
adc
scas
lods
orb
add
jl
arpl
push
dec
repnz
or
mov
dec
push
cmc
or
mov
fidivrl
jae
jns
addr16
xchg
mov
cmp
stos
sub
pop
dec
aad
push
aaa
push
cmp
xchg
and
inc
into
cmp
mov
push
adc
push
cmp
mov
scas
sbb
mov
mov
jp
mov
push
mov
movsl
lret
cmp
sub
aaa
xor
pushf
pop
test
sbb
inc
sahf
pusha
fisubl
cmpsl
cwtl
mov
jbe
push
mov
loop
xchg
aad
iret
punpcklbw
xchg
lods
cmpsl
enter
add
sub
mov
jb
js
adc
movsl
mov
ds
fs
fcoml
or
ja
les
dec
and
xchg
cmpsl
inc
fiadds
ljmp
ficoms
mov
add
mov
mov
cmc
xchg
mov
cs
jge
shll
rcr
adc
push
mov
rorb
aas
inc
nop
xlat
subl
call
push
or
mov
psubusb
jmp
sbb
push
rcrb
mov
adc
jns
incb
data16
cmp
jecxz
cmp
push
mov
pop
xor
and
aad
mov
cmp
adc
je
fnstcw
out
cmp
pop
lods
ja
add
push
cs
test
mov
xor
int
ror
flds
nop
repnz
dec
das
pusha
out
jl
mov
pop
cwtl
rcrl
out
xorl
inc
jle
scas
and
mov
sbb
daa
add
pop
fstp
pop
sub
add
sub
shr
adc
out
mov
ljmp
adc
ret
jecxz
or
mov
jg
sbb
push
fs
add
sbb
push
dec
loope
daa
arpl
repnz
fistpl
jbe
bound
xchg
dec
incb
jp
sbb
aad
inc
out
orl
jae
sub
stos
or
xchg
push
lds
dec
push
ret
stos
add
inc
loope
add
notl
or
cmp
jbe,pn
jg
andl
cmp
sbb
xor
mov
fwait
std
inc
iret
int3
jbe
std
or
outsb
outsl
enter
cmp
inc
mov
push
imul
and
pop
push
push
outsb
aam
in
sahf
pop
rclb
ja
or
dec
pop
sahf
cmp
nop
cmp
jge
data16
je
and
pop
jl
and
jno
test
adc
jnp
lret
xchg
xchg
call
outsb
and
iret
cmp
movsl
in
ljmp
decb
aas
jp
mov
loop
and
sub
sti
cmp
push
mov
mov
adc
xlat
add
mov
mov
adc
sub
clc
outsl
jl
data16
decb
add
aam
lret
sahf
jecxz
faddp
add
addr16
and
push
sbb
lahf
loope
clc
adc
outsl
clc
je
test
pop
frstor
fimuls
aaa
orl
in
add
insl
push
fs
ja
imul
orb
push
adc
filds
push
jl
adc
pop
push
test
test
inc
xor
and
insl
outsb
ds
jecxz
data16
das
addr16
jbe
cmpsb
adc
lea
test
jg
arpl
fs
arpl
addb
inc
jo
nop
sbb
mov
push
fldcw
xchg
outsl
push
add
pop
pop
mov
sbb
stos
lret
lods
dec
or
repz
enter
pop
loopne
jnp
inc
mov
xchg
cmp
jbe
add
insb
mov
cmp
lret
scas
std
enter
mov
xchg
and
cmp
adc
mov
movsl
movsb
sub
lret
shlb
jp
or
dec
ficoms
into
dec
xchg
stc
pop
mov
lea
xchg
cmp
faddl
enter
cli
sbbb
push
test
inc
lea
sbb
out
dec
addb
addr16
lea
inc
enter
push
cmpsl
mov
iret
xlat
mov
push
cmp
cmc
js
xchg
pop
cs
adc
sbbl
adc
push
cmp
int
cmp
xchg
jnp
stc
cmp
jge
ret
push
jns
xor
addr16
ja
testl
mov
jg
addr16
sub
push
je
lahf
jle
pop
data16
push
jnp
mov
int
push
adc
or
shlb
mov
and
aas
fsubr
jp
adc
push
and
fildl
roll
xor
dec
ja
push
lret
inc
push
fstl
outsb
adc
jbe
push
jo
sahf
mov
out
mov
pop
pop
mov
inc
adc
loopne
ja
incb
dec
adc
and
fdivrp
loop
enter
mov
add
aad
xchg
out
inc
addr16
ja
xchg
jbe
sahf
sub
jo
dec
mov
loop
lcall
call
shl
ret
sbb
sbb
pop
pop
xchg
mov
jge
xchg
pop
push
xor
lock
hlt
sbb
sbb
xchg
popf
movsl
jp
mov
incb
bound
movsb
push
pop
stos
pusha
xorb
je
das
lea
rorl
xchg
aad
mov
aam
inc
imul
xchg
add
movsl
aad
add
xor
xor
cltd
dec
scas
mov
les
xor
mov
inc
mov
mov
js
ss
mov
and
out
inc
push
cmp
outsb
aad
pop
mov
jae
insl
mov
je
and
jne
pop
dec
js
dec
int
xor
cmp
jo
int
push
clc
xor
movsl
fsubs
jne
fwait
movsw
adcb
xor
cwtl
jae
jecxz
sub
shll
aas
push
imul
sbb
dec
push
jno
pop
insl
mov
mov
aam
adc
push
xor
test
adc
neg
pusha
js
mov
mov
push
lcall
xlat
stos
xchg
jp
xchg
add
fstp
pop
inc
jg
out
push
jg
into
ficoms
and
in
xor
sbb
lea
inc
test
pop
das
enter
inc
cmp
test
push
push
inc
jae
cmp
out
jnp
xchg
add
pushf
add
les
jae
mov
sub
xor
scas
xchg
addr16
fdivl
and
lods
rorb
mov
jne
test
xlat
or
jb
addb
sbb
jl
test
cmp
adc
sbb
cwtl
mov
js
mov
cmpsb
or
cmp
add
mov
cmp
jae
mov
test
adc
add
addb
mov
pop
clc
cmpsb
xchg
shrl
mov
mov
mov
bound
cmc
imul
dec
push
addb
pusha
les
jle
or
inc
adc
rcr
jae
pop
mov
daa
mov
sbb
pop
in
push
mov
movsl
ds
lods
hlt
xorb
out
sbb
sbb
push
mov
inc
ficoml
fdivs
stc
fwait
test
decb
arpl
mov
or
mov
dec
mov
xchg
fsubrs
mov
add
dec
mov
insb
mov
inc
or
int3
aas
addr16
adc
arpl
adc
adc
test
jg
push
pop
mov
call
iret
adc
adc
push
lock
daa
out
ljmp
mov
cmp
movsl
mov
loopne
cmp
aam
das
insb
rclb
adc
inc
je
cmp
les
jmp
xchg
jge
mov
add
push
dec
les
addr16
jae
inc
mov
mov
jl
lret
testl
dec
jne
dec
sbb
jbe
ret
cmp
mov
push
jae
xchg
je
mov
jp
jb
mov
enter
dec
loop
mov
cmp
iret
inc
or
jmp
int
jge
mov
imul
mov
or
data16
sarb
mov
roll
jne
adc
mov
sub
shr
add
mov
cmpsb
push
lret
xor
stos
push
inc
es
aas
sarl
add
xchg
xor
mov
inc
mov
push
or
loop
lea
insl
nop
sub
and
jg
data16
stos
call
sbb
mov
xchg
adc
cmpsb
push
cmp
jne
imul
stos
aam
pop
mov
into
leave
xor
add
pop
adc
cmp
dec
mov
mov
loope
cmpl
jo
fsts
stos
scas
loope
dec
dec
lcall
andnps
lods
push
cld
sbb
je
add
push
sahf
leave
dec
push
inc
xor
es
fistpl
inc
xchg
fsubrp
ja
addr16
xor
fimull
sti
inc
lods
fwait
inc
adc
jo
inc
xchg
mov
pop
jae
xor
addr16
mov
test
add
fcomps
xor
or
loope
jae
stos
pop
cmp
je
orb
dec
jl
rcl
arpl
data16
and
sbbl
mov
xchg
rcr
subb
es
call
int
out
shr
jle
nop
fisubs
jge
loop
out
cmp
inc
outsb
push
sar
sub
arpl
inc
cs
ljmp
call
jl
js
addr16
push
icebp
dec
pusha
out
mov
fsubp
fcomip
xchg
push
test
mov
fadds
and
xor
leave
fnsave
jge
addr16
adc
out
mov
push
adc
shll
cmc
les
lret
in
adc
adc
xor
imul
mov
nop
dec
pop
arpl
out
or
mov
enter
nop
xchg
nop
inc
sub
jns
in
movsb
push
pop
pop
mov
repnz
aam
sbb
jnp
xchg
aaa
mov
lea
fs
daa
pop
push
aad
mov
sub
mov
add
push
fisubrs
sub
cmpl
or
mov
mov
push
sbb
xchg
xchg
xorw
rcrl
daa
pop
dec
jl
lcall
enter
cmp
sbb
mov
inc
push
xor
sbbb
sub
sbb
testl
cmc
mov
xor
ret
lea
xorb
add
mov
mov
jl
cmp
xor
mov
lahf
nop
test
mov
push
test
shll
cmp
sbb
mov
xor
lret
mov
sbbb
es
bnd
into
lea
movsl
les
icebp
jle
mov
sub
ds
addb
shl
outsl
shll
and
jbe
xor
jo
add
fisubs
inc
rclb
inc
out
in
cmpsl
cmpsl
bound
aam
rep
sbb
ss
rol
push
notl
sub
outsb
mov
mov
pushf
je
les
in
jae
lahf
js
movsb
test
imul
sub
aas
mov
dec
inc
popa
jb
ja
mov
pusha
rcll
lea
xorl
push
adc
ficoms
cld
adc
jl
in
xor
addr16
ds
aaa
push
std
rcrb
into
int
mov
inc
xchg
rcll
lahf
fdivs
pop
dec
push
movsl
insl
pop
mov
fdivrl
or
jns
cmp
jp
mov
arpl
les
cmp
cmc
movsb
out
add
sub
sub
das
fnstsw
lods
aad
add
cmp
lcall
mov
xchg
js
push
xchg
sahf
or
fsubs
jbe
ja,pt
cmpsb
frstor
outsl
pop
fadds
rcrb
filds
aad
insl
insb
cmp
test
inc
xchg
cmp
jl
js
dec
clc
sahf
add
sbb
andb
mov
lcall
xor
imul
adc
jns
push
sarl
xor
add
out
mov
arpl
dec
outsl
clc
test
xor
jg
ljmp
out
mov
loopne
cld
bound
sarb
jge
out
repnz
mov
jge
rcrl
enter
mov
adc
sbb
roll
mov
test
mov
adc
add
leave
pop
int3
les
mov
jmp
jae
test
mov
mov
sahf
test
leave
fwait
mov
lods
mov
outsb
rcr
xor
jg
imul
nop
mov
fnstsw
pushf
xchg
push
arpl
inc
cmp
cmpsb
mov
mov
cli
rcll
add
mov
inc
les
out
jp
test
xchg
jl
incb
mov
sub
ret
std
and
in
shl
jecxz
ds
mov
fcmovbe
in
xchg
mov
leave
shll
adc
inc
sub
xchg
mov
add
or
xor
dec
mov
push
lret
je
rol
adc
xchg
dec
or
lods
mov
test
adc
stc
or
scas
push
mulb
push
int
xchg
dec
lahf
ja
mov
jle
mov
fcompl
cmp
cs
movsb
push
shll
xchg
aam
lods
pop
xchg
rcrl
lea
add
dec
cmpsb
movsl
push
inc
sub
cli
data16
xchg
insb
jg
outsb
lea
inc
jb
data16
std
lods
mov
insl
and
andb
xorl
xchg
xlat
and
int3
jns
outsb
inc
cmp
inc
insl
mov
sub
mov
movsl
cmp
ljmp
push
sbb
cltd
sub
add
mov
mov
xchg
popa
mov
mov
mov
add
xchg
xchg
addr16
sahf
pop
ficomps
xor
test
cltd
jbe
scas
cmp
push
scas
push
adc
push
mov
mov
pop
je
mov
jle
mov
xor
movb
mov
roll
int
pusha
adcb
mov
into
xor
mulb
push
cmp
aad
rclb
sbb
dec
cmp
nop
sbb
aam
xor
fiaddl
xchg
rcrb
inc
clc
lods
rolb
sub
lds
pop
or
sbb
mov
xchg
and
and
jmp
aad
aas
pop
nop
cltd
dec
rolb
xor
call
xchg
test
andb
xchg
out
adcb
sub
leave
fwait
cmp
std
jle
push
jnp
je
inc
inc
adc
imul
addr16
ja
sahf
and
mov
out
cmp
mov
out
xchg
cmp
push
loopne
mov
out
cmpsb
mov
mov
jmp
jl
int3
ss
jge
cmp
push
test
push
and
imul
cmp
cwtl
inc
dec
rolb
pop
ss
gs
push
jo
xchg
jae
mov
test
mov
js
push
pop
push
jl
lahf
jmp
lds
stos
js
pop
xchg
xor
and
inc
cmp
xchg
subb
jge
fidivrs
lcall
gs
das
je
jbe
fs
shr
out
out
js
mov
pop
jne
jb
stos
jns
scas
mov
and
stos
dec
subl
xchg
lret
adc
mov
test
insb
adc
or
std
sahf
sbb
fdiv
push
and
and
xchg
jp
leave
fstpl
add
data16
mov
xor
nop
rcll
lods
mov
stc
cmp
xchg
push
jns
add
sub
adc
adc
lods
mov
or
enter
stc
adc
inc
mov
push
add
andb
shr
sub
cwtl
pop
int3
mov
arpl
pop
dec
add
dec
inc
sbb
aas
pop
ljmp
mov
bound
loop
repz
enter
mov
movsl
outsl
pop
andl
add
pop
ja
call
sbb
sbb
xchg
dec
sbb
cltd
cmpsb
xor
mov
mov
push
sbb
or
mov
mov
sahf
inc
gs
dec
test
sbb
loop
xchg
inc
jae
cld
add
es
addr16
fcmovnbe
mov
adc
pop
mov
movsl
aaa
mov
es
mov
adc
cmp
inc
rorl
adc
jne
or
imul
out
dec
mov
lods
fldcw
dec
xlat
push
or
mov
sbb
addr16
xchg
xor
aam
call
int
xchg
aaa
das
test
insb
inc
insl
adc
sbbl
xorb
cmpsl
int3
sbb
ja
xor
cmpsl
mov
mov
jecxz
sbb
pop
or
cmp
sar
and
mov
cmp
stc
sbb
xchg
jmp
xchg
mov
outsl
call
icebp
sti
cmpsl
pop
adc
outsb
ss
imul
icebp
dec
jg
call
out
clc
lock
cmp
out
xor
data16
lret
outsl
jnp
lock
xorb
inc
popa
pop
leave
cld
aas
enter
aas
push
lea
fsubl
sub
data16
push
lcall
mov
int3
ds
aas
dec
xchg
xor
jo
push
pop
mov
data16
push
jae
ror
dec
mov
xchg
pop
sub
sub
mov
sub
lock
stos
idivl
in
fdivs
mov
mov
pop
test
rcrb
adc
sub
and
out
clc
call
sub
adc
outsb
out
bnd
cmc
adc
lods
sub
pop
lods
adcb
jae
jae
je
sbb
jnp
dec
push
int
sub
push
loopne
jae
mov
testl
addr16
dec
ja
call
in
jae
cmc
ja
mov
into
mov
dec
sbbb
in
add
fcmovnu
xchg
xchg
xor
int
jecxz
xchg
cmpsl
fidivl
sbb
mov
call
cld
and
dec
xor
cmp
sub
mov
mov
iret
inc
pop
inc
shrl
push
jns
ss
into
aad
and
ds
inc
sbbl
sbb
cmpl
aaa
pop
sub
ja
int
mov
pushf
movsl
adc
fsubrp
scas
push
sbb
and
cltd
or
fimull
add
stc
out
jnp
mov
cltd
shrl
cltd
push
jl
sbb
sbb
jo
aam
movsl
adc
mov
jp
push
mov
pop
cmpsb
adc
fldcw
jl
push
sbb
andb
shr
jne
jns
xchg
jle
jg,pn
mov
fisttps
addl
jne
push
dec
push
enter
pop
arpl
fcmovnb
jo
call
mov
pop
mov
and
aaa
dec
pop
out
xchg
stc
sub
xor
pop
inc
add
bnd
ror
test
jno
lods
outsb
xchg
cmp
cmp
insb
pop
push
sahf
and
add
cmp
cmp
sbb
push
imul
insb
jb
rol
rclb
addr16
pop
mov
aas
and
add
jg
push
dec
imul
cmpsb
addr16
dec
dec
jecxz
mov
std
add
pop
pop
pusha
xchg
sbb
inc
mov
cmpb
add
inc
ja
dec
popf
pcmpeqw
adc
dec
push
mov
jge
mov
cmpb
stc
mov
push
insl
addr16
dec
xchg
mov
adc
sbb
rolb
pusha
or
pop
dec
fldl
push
sbb
add
in
mov
stc
add
mul
ljmp
leave
cmp
loopne
cs
pop
dec
sbb
iret
ds
cmp
adc
aam
jo
movsb
iret
dec
call
mov
outsl
andb
pop
cmp
ror
and
mov
push
inc
mov
mov
mov
popf
xor
scas
pop
mov
xchg
inc
ja
movsl
xor
cmp
int
mov
jl
icebp
push
jle
cmp
lods
sub
int
adc
cmp
mov
lret
test
and
pop
insb
popa
jecxz
cmp
test
or
pop
mov
mov
addr16
cs
out
pusha
sbb
rorb
cmp
sbb
mov
mov
add
add
imul
lea
mov
lds
test
inc
shlb
scas
fs
gs
add
ss
sti
xchg
push
arpl
lea
lcall
sbb
imul
dec
pop
popa
sub
aas
jae
test
mov
dec
dec
mov
sub
xchg
outsl
dec
or
dec
cmc
mov
cmp
enter
addl
int3
xchg
xor
pusha
jns
aaa
sub
fstpl
push
jl
jnp
jge
dec
mov
jbe
enter
fldt
lods
sbb
and
data16
adc
shrb
shlb
lods
jnp
les
and
sbb
dec
subb
cwtl
out
leave
xchg
aaa
lods
mov
xchg
push
insb
push
sub
add
daa
push
xor
lds
push
sahf
add
in
insl
or
inc
cmp
sti
test
push
lods
lods
push
pop
xorb
add
xchg
jecxz
dec
inc
mov
aas
mov
and
sub
add
push
daa
mov
in
fsubs
fldl
das
subl
mov
dec
gs
addr16
in
movhps
in
mov
cmpsb
fstpl
fsubl
int3
aam
inc
and
sahf
xchg
adc
mov
and
push
push
sbb
fimull
data16
jnp
inc
push
lret
jne
scas
clc
aaa
add
mov
adc
scas
dec
je
iret
push
pop
jmp
jg
cmp
arpl
outsl
xchg
push
jae
pop
sbb
addr16
mov
mov
jmp
adcb
pusha
and
mov
lea
aaa
mov
mov
stos
add
fwait
cmp
adc
push
test
rclb
int
bound
mov
inc
sbb
inc
cmp
jo
test
inc
int
pop
inc
dec
fnsave
lahf
jnp
mov
jae
in
xchg
data16
mov
lahf
sub
and
xor
xor
add
lds
sub
mov
push
std
sbb
repz
outsb
xchg
pushl
into
mov
int3
jae
push
adc
lret
les
jp
sbb
cmp
rorb
movsw
int3
sub
sub
fmulp
lahf
pop
adc
inc
idivb
leave
sti
out
aas
je
xchg
sub
mov
and
sub
clc
loop
jo
mov
incl
dec
fxtract
add
aad
fisttps
xchg
dec
imul
lret
push
sbb
pop
sub
fldl
push
jmp
pusha
das
pushf
inc
inc
test
iret
into
fidivs
insb
movsl
fs
mov
outsb
dec
in
push
sbb
cmovne
push
xchg
xchg
push
test
add
add
jo
sti
and
jg
cmovae
aas
int
push
pop
arpl
xchg
or
repz
mov
add
pop
mov
scas
cmp
imul
cmpsl
imull
pusha
xchg
nop
xchg
or
xorl
push
mov
mov
add
dec
xchg
test
lock
or
das
xor
jl
movb
jp
mov
popa
idivl
cmp
cmc
dec
lret
faddl
ret
adc
outsb
add
fcom
lahf
xchg
icebp
shl
test
jl
outsb
adc
dec
mov
dec
test
xchg
mov
pop
push
roll
lods
cmp
lahf
into
sub
mov
dec
orb
add
nop
push
addb
andl
popa
cs
movsb
fnsave
insl
andb
jmp
mov
fsubrl
arpl
out
push
add
inc
adc
daa
int3
inc
jecxz
mov
lods
push
add
or
mov
or
inc
push
addr16
fstl
arpl
dec
lret
xchg
or
pop
and
mov
ret
int
addb
aam
das
mov
stos
dec
rcll
mov
aad
lret
sub
addr16
mul
mov
ljmp
fstpt
cltd
scas
inc
jne
adc
iret
loopne
inc
insb
ds
ja
xorl
mov
out
xchg
or
fdivrs
pusha
js
push
jge
add
jns
mov
sbb
and
movsl
insb
inc
outsb
loopne
mov
fcom
mov
push
push
std
ds
decl
lret
jmp
inc
xor
dec
lret
ret
mov
mov
lds
sub
out
pushf
or
test
xchg
xor
xchg
push
outsb
xorl
sub
fisubl
movsb
mov
mov
iret
sti
jo
xchg
sbb
int
push
es
mull
out
dec
jne
fcomp
lretw
mov
pop
rolb
jbe
shrb
fcmovnbe
add
mov
mov
mov
add
out
fstpl
xor
or
mov
shlb
js
loopne
push
enter
stc
xor
adc
in
adc
cs
fsubrs
out
mov
sbb
inc
xor
push
cmpb
inc
xor
sub
inc
es
sub
pop
pop
ficoml
push
jb
xlat
lods
jg
popa
ret
lret
jbe
outsb
jo
mov
or
test
fsubrs
push
xchg
lea
pop
push
mov
ds
int
cmp
shrl
push
pop
and
sbb
adc
push
sarl
adc
cmc
xor
inc
xor
into
jl
loope
pushf
push
sbb
dec
mov
aas
rorb
insb
enter
popf
popf
idivl
xor
add
insl
fs
jbe
fnstsw
movsb
shld
or
stos
idivl
fildl
incb
and
scas
add
stos
jl
mov
ljmp
jecxz
xchg
mov
fdivrl
sahf
out
adc
out
lods
outsl
or
dec
inc
cltd
fimuls
je
out
subb
sub
jp
jb
mov
or
in
inc
nop
jne
imul
sbb
fisttpl
inc
mov
andl
sub
xor
mov
push
mov
push
add
loop
pop
dec
je
leave
dec
jae
xchg
push
fsts
push
aad
xchg
movsl
jmp
sub
pop
sti
rorl
push
ss
push
flds
bound
xor
scas
movsb
adc
movsb
je
dec
mov
push
mov
stos
cmp
movsb
rcr
cmp
pop
push
scas
push
mov
lods
push
xchg
jne
movsl
movsb
push
pushf
xchg
jo
stos
pop
loope
or
pop
or
mov
ja
pop
out
adc
mov
ficoms
aad
mov
aam
inc
push
out
xchg
xor
sub
loop
mov
xchg
pop
push
ret
stc
push
mov
data16
pop
and
mov
and
nop
mov
nop
pushf
adc
je
ja
mov
xchg
push
or
popl
cmc
cld
ljmp
cmp
sub
mov
mov
scas
cmc
outsb
nop
jns
and
nop
xchg
sbb
int
fs
stos
dec
mov
push
outsl
and
sbb
cmpsl
movb
xchg
stos
out
push
jnp
or
outsb
xchg
data16
cmp
mov
cli
inc
insb
jg
outsb
rolb
pop
insb
mov
push
add
fstpl
in
insb
ss
fidivs
add
push
add
and
lcall
or
or
sbb
pop
adcl
add
imul
sar
xor
out
ret
ljmp
leave
mulb
sub
fisubl
mov
jne
inc
repz
adc
push
orl
xchg
cmpsb
inc
out
adc
ds
add
ficompl
pop
xchg
data16
jns
mov
iret
loopne
frstor
or
test
icebp
or
enter
mov
push
jnp
inc
pop
or
push
add
inc
sbb
push
jo
loopne
dec
mov
lods
and
dec
adc
sub
fnclex
jg
adc
popf
out
dec
push
xor
push
dec
mov
rol
inc
loopne
repz
jge
addr16
sub
call
mov
cmpsb
cmpsl
mov
movsb
fmull
jae
and
pop
lods
pop
cmp
test
add
cmp
cmp
inc
dec
sbb
jno
mov
pop
mov
arpl
sbb
xchg
jnp
stos
rcll
mov
xlat
mov
cli
mov
jl
div
andb
mov
inc
xchg
push
pop
std
and
cmp
lea
stc
lods
out
or
imul
add
xchg
sub
insb
cmp
dec
push
and
mov
xchg
jge
int3
outsb
inc
lods
nop
jae
mov
je
mov
pop
daa
movsbl
sub
lret
mov
mov
inc
jge
fiaddl
mov
adc
movsl
addr16
add
jae,pt
cmp
sahf
add
aad
fsubl
sub
or
mov
dec
jle
push
inc
decb
push
outsl
not
jbe
jle
out
sub
iret
addr16
inc
cmp
mov
mov
push
int
push
in
jl
cmp
pop
int
int3
pushl
dec
das
shrb
dec
les
push
inc
xchg
add
cmc
jmp
test
outsb
pusha
loope
sub
popa
aas
js
and
loop
fadds
lea
movsb
hlt
jne
fsubrl
in
ss
cwtl
and
insl
and
pusha
leave
xlat
arpl
jbe
xor
lods
push
rorb
and
jl
sbb
mov
or
push
pop
adc
jb
adc
loopne
mov
push
or
add
jnp
addl
xlat
xor
mov
add
pop
push
outsb
ret
aaa
push
pop
jg
out
out
jbe
push
leave
push
cmp
push
test
sbb
movsl
bound
xor
xor
or
adc
pop
data16
out
xchg
mov
ljmp
les
ds
pop
movsl
pop
add
pop
adc
test
mov
stos
cmp
xchg
fisubs
mov
dec
roll
xor
jge
rcrl
jge
insl
je
add
or
mov
cmc
int
dec
mov
mov
mov
jle
out
or
xor
in
shlb
pop
inc
jbe
push
adc
sub
stos
fisubs
js
jb
sub
in
dec
jo
mov
inc
sbb
int
inc
aas
cmp
lock
adc
cmp
mov
jno
xchg
scas
test
sub
or
leave
or
push
inc
dec
sub
dec
add
jmp
mov
shl
scas
push
in
xor
adc
dec
aam
daa
xchg
pop
addr16
aad
and
adc
xchg
pop
sub
jp
lods
ss
push
cli
lret
pop
cmpsl
ljmp
cmp
cmp
loop
push
frstor
sbb
push
enter
push
jae
in
movb
scas
push
data16
lcall
dec
mov
mov
and
xchg
jae
ss
clc
pushf
cmp
and
faddl
call
jne
jnp
push
sarb
mov
imul
push
mov
pop
cmp
pop
js
sbb
cli
daa
movsl
into
mov
orb
mov
add
clc
jge
jne
sbb
mov
push
cwtl
dec
pop
adc
clc
jne
addr16
add
inc
or
mov
jne
out
dec
aad
imul
mov
cmpsb
push
jae
push
jl
mov
dec
or
inc
adc
popa
rclb
add
push
lret
xchg
scas
pop
cmp
mov
imul
or
mov
and
test
jo
mul
icebp
shlb
sti
or
not
sahf
subl
aas
imul
inc
ds
fisubs
pop
push
lret
cmpsl
adc
inc
add
push
fbld
outsb
frstor
xchg
fwait
cmpsl
pop
dec
inc
adc
fidivrl
lds
cmp
xchg
daa
and
dec
ja
flds
mov
mov
adcb
mov
dec
scas
xchg
insb
jp
sub
mov
push
adc
push
lret
inc
xor
imul
sarb
adc
cwtl
pop
xchg
pop
cmpsb
les
data16
dec
mov
push
inc
mov
sub
sbb
imul
scas
mov
rolb
jne
mov
jb
adc
pushf
add
push
add
stos
push
push
aaa
mov
inc
mov
cld
decb
cmp
lock
sbb
sbb
inc
hlt
fisubrl
sbb
testb
jne
fistpl
inc
mov
add
js
fisttps
mov
add
mov
movsl
cmpsl
push
scas
icebp
aas
arpl
mov
sbb
push
xchg
mov
ljmp
rorb
sbb
jo
xchg
mov
pop
adcl
ret
int3
test
mov
jge
add
sbb
sbb
pop
dec
add
xchg
push
in
stos
repz
mov
push
out
add
rolb
fadds
xchg
flds
pusha
sub
push
pop
std
and
addr16
jnp
cmp
hlt
es
lds
adc
inc
cmp
xor
lods
push
add
adc
lahf
adc
mov
cld
negb
cmpb
imul
aas
scas
sbb
or
ja
push
cli
pop
enter
push
aam
xor
adc
lea
xchg
out
mov
lret
cmp
ss
mov
adc
inc
out
dec
adc
xor
push
cwtl
fsubrp
je
scas
xchg
rcl
cld
shlb
mov
aas
mov
stc
popa
jge
sahf
fldt
sub
pop
popf
lret
mov
hlt
sbb
sbb
enter
ret
stos
nop
jb
cld
enter
mov
adc
ss
or
cmp
sbb
mov
jae
inc
sarl
jmp
int
sub
hlt
int
mov
or
add
lcall
sbb
mov
add
add
ss
mov
fsubr
faddl
fdivrl
and
cmc
mov
aas
add
jae
mov
addr16
loopne
dec
mov
pop
jo
rcl
pop
jg
out
xor
dec
call
adc
enter
data16
mov
mov
stos
sub
sub
fstp
push
inc
imul
loopnew
inc
push
fdivrp
fsubr
sahf
pop
decl
ret
push
das
loope
lret
pop
enter
xchg
stos
adc
pop
int
cmp
add
filds
push
adc
ds
adc
sub
pop
inc
sub
pop
cmpsb
pop
mov
movl
pusha
xor
js
push
or
jb
lods
push
mov
mov
fsubrl
add
pop
jo
test
sbb
fs
mov
popf
out
xor
pop
jp
fnsave
and
xchg
xchg
out
add
xor
dec
inc
movq
lahf
fistpll
add
jg
shlb
and
je
test
adc
aad
jno
jl
testl
fucom
pop
sbb
mov
aad
nop
icebp
cmp
cmpsl
insl
cmpb
cmpsb
imul
pop
je
or
test
sbb
sub
fnstcw
mov
push
cmp
dec
aaa
lcall
adc
inc
jmp
mov
mov
pop
push
rcrl
out
orl
xchg
xor
mov
clc
fadds
lcall
fs
or
bnd
sub
xchg
pop
xorb
jae
sub
and
or
ret
dec
or
and
popf
and
and
inc
xchg
fbld
ja
subb
imul
mov
jno
dec
fidivrl
mov
negb
lcall
shl
bound
insb
fdivs
mov
jp
das
sbb
push
mov
outsb
xorb
arpl
fmulp
out
inc
xchg
and
push
adc
sbbl
daa
pop
into
andl
das
lret
and
sti
sbb
pop
dec
inc
lods
es
gs
and
idivb
fisttpll
xchg
pop
adcl
xchg
int
inc
cli
jbe
fimuls
or
out
sbbl
data16
loop
lods
push
sbb
pushf
gs
fs
jl
repnz
xchg
fidivl
mov
xchg
mov
push
sarl
inc
clc
push
sub
add
mov
and
sbb
xor
push
xchg
bound
inc
inc
cmp
stos
lret
inc
arpl
jae
enter
add
cmp
xor
test
insb
mov
scas
pop
outsb
testl
adc
cmp
jmp
imul
nop
lahf
cmp
or
idivl
js
push
adc
leave
pop
pop
iret
dec
xchg
andb
mov
dec
arpl
insb
cmp
jb
lret
ds
into
out
inc
loop
rorb
pop
sbb
dec
les
xor
test
fs
clc
icebp
and
mov
js
mov
out
int
repz
dec
xorb
mov
push
inc
add
sarb
pusha
mov
sti
fiadds
sahf
sbb
mov
inc
ret
jne
mov
jae
rolb
sub
and
or
jbe
outsl
add
das
fs
int
push
jp
fisubrs
imul
push
inc
add
lods
das
mov
int3
test
xlat
add
mov
dec
or
test
inc
dec
push
jno
and
fsubr
inc
lods
pop
int3
fcoms
ret
mov
aas
jle
push
cmp
fsts
testl
push
mov
aas
adc
insl
movsb
lods
sub
lahf
imul
adc
add
je
test
stos
sbb
dec
mov
call
dec
mov
sbb
test
shll
nopl
jnp
rclb
pop
stos
jb
jge
mov
sbb
xor
sub
pop
test
cmp
and
jnp
push
sub
data16
add
nop
sub
data16
out
stos
out
mov
fisubl
or
cmc
leave
int
or
out
sti
xchg
out
out
or
sbb
cmp
xor
repnz
push
cmp
fs
mov
jbe
test
fidivrl
mov
cmp
xchg
or
pusha
lea
sbb
ret
js
sbb
scas
mov
add
incl
xchg
cmpsb
xchg
cmp
and
nop
icebp
sub
mov
jnp
outsl
push
cmp
pusha
pop
push
iret
cmp
xchg
addr16
or
aad
push
ljmp
cmp
xchg
jecxz
sub
pusha
jo
xchg
mov
insb
out
cli
enter
mov
movsl
out
enter
mov
ficoms
push
loopne
push
sahf
ret
xor
mov
mov
xchg
xchg
lods
pop
cmp
inc
pop
push
je
sub
pop
ja
insl
mov
clc
stos
jp
int
scas
mov
rol
mov
push
repz
jnp
jl
pop
sahf
imul
lea
rcrl
mov
arpl
jnp
xchg
and
jecxz
mov
and
inc
xchg
xor
jne
inc
jns
fcomps
pop
aam
mov
cli
mov
fstpl
jbe
jecxz
call
aad
in
lret
push
js
add
ficompl
mov
lds
or
sub
mov
adc
movsb
push
add
mov
lahf
xchg
pop
dec
test
jl
les
popf
xor
pop
push
mov
jle
mov
movsl
xor
push
inc
testb
add
rolb
xchg
add
dec
stos
dec
test
push
mov
sub
jae
jo
je
in
ja
jg
scas
inc
push
inc
inc
aam
daa
cmp
ret
or
adcb
xchg
repz
and
stos
test
mov
mov
fisubrl
loopne
pop
add
test
pop
adc
add
out
roll
xor
lea
mov
push
loopne
insl
xchg
loop
sbb
cld
sbb
sbb
pop
cmp
jmp
dec
out
jnp
or
int3
and
or
inc
inc
cwtl
insl
into
movb
mov
xchg
cmp
add
dec
addr16
repz
ds
outsl
daa
cmp
je
fsts
push
scas
mov
movsl
repz
xor
or
call
or
mulb
push
aad
data16
leave
repz
rcll
push
sbb
mov
sahf
xchg
cmpsl
sahf
js
loope
cmpsl
ret
rcll
xlat
and
push
lods
decb
and
inc
mov
clc
test
out
es
rol
addb
ret
mov
shlb
cmp
xorl
or
xchg
scas
cmpsb
xchg
sbb
or
pop
dec
xorb
subl
push
mov
lcall
orb
test
xchg
mov
xchg
mov
adc
and
shl
xchg
xchg
out
or
cmp
out
mov
xor
add
sub
ds
mov
divb
pop
adc
fldt
shlb
out
mov
mov
cmp
sahf
mov
fisubl
dec
cmpsl
xchg
mov
lock
adc
ret
addr16
addb
push
out
lcall
jle
xchg
mov
xchg
add
mov
mov
rcrb
add
lahf
cs
mov
add
je
mov
fmulp
inc
xchg
jp
popa
movl
dec
push
push
cmp
es
and
lahf
bound
aam
mov
out
mov
shr
shlb
pop
rol
push
push
mov
out
mov
shr
mov
loop
fwait
orl
in
sahf
add
ja
test
adc
outsl
pop
add
mov
jle
scas
or
sahf
mov
les
js
adc
cmpsb
xchg
ret
mov
pop
shrb
and
push
xchg
or
xchg
lahf
mov
outsl
call
mov
divb
and
lods
fs
cmp
sub
mov
xchg
insb
dec
inc
lods
or
cmp
push
mul
jno
or
jae
inc
add
es
cwtl
call
js
sbb
in
stos
mov
mov
or
xchg
add
inc
xchg
data16
nop
lahf
nop
mov
ja
cmc
pop
enter
dec
aaa
inc
insb
lock
mov
add
mov
leave
mov
repnz
dec
sub
fnclex
stos
pop
add
cmp
add
ds
out
nop
les
outsl
gs
xor
pop
loopne
pop
push
pop
pop
jmp
add
add
test
das
mov
push
pop
jp
aad
sahf
shrb
mov
adcb
daa
dec
idivb
int3
jae
loope
out
push
xchg
lods
add
addb
pop
jmp
pop
lcall
jl
mov
insb
adc
add
data16
insb
mov
cmpsb
and
push
adc
dec
mov
mov
xchg
int
bsr
xorl
icebp
sbb
sub
jg
dec
data16
sub
mov
imul
mov
jb
mov
push
push
jge
mov
jae
in
xor
lods
or
cld
scas
and
imul
pop
lahf
inc
xchg
jle
jnp
je
push
cmc
lcall
pop
push
jnp
fnstsw
movsl
std
out
daa
and
adc
and
mov
xchg
lahf
aas
and
pop
in
push
sbb
out
xor
jb
enter
loop
or
out
mov
add
push
bound
or
out
repz
xor
movsl
jbe
sbb
xchg
push
push
xor
scas
jp
mov
pop
mov
test
ja
ret
nop
lock
icebp
mov
sub
add
mov
adc
push
repz
jle
inc
jbe
addr16
xchg
call
insl
inc
adc
pop
inc
lods
jl
or
and
cmp
leave
gs
xchg
or
jge
or
mov
xchg
fidivl
pop
jae
and
cmpsl
mov
mov
loop
cmpl
push
dec
push
sub
and
test
imul
jbe
bound
push
shlb
inc
jo
js
inc
cmp
cmp
fistpl
dec
test
in
jecxz
cmp
or
rcrl
mov
ret
dec
ljmp
jcxz
clc
ror
das
insl
lock
inc
inc
ret
add
mov
sub
xchg
pop
adc
test
mov
add
cmp
mov
or
add
adc
clc
bound
jg
outsl
dec
push
mov
or
mov
xchg
jne
stc
adc
sbb
inc
xor
dec
scas
mov
mov
bound
pop
orl
adc
mov
jl
out
popa
push
dec
flds
push
in
insb
stos
inc
mov
shrl
add
shl
pop
adcl
cmpsb
push
addr16
popf
cmp
jle
or
mov
sbb
js
push
mov
flds
lret
addr16
popa
incl
mov
xor
lcall
pusha
iret
sbb
xor
lret
add
leave
sbb
les
or
nop
popf
leave
push
scas
mov
outsl
xorb
iret
or
sbb
inc
int3
pop
insl
testl
inc
pop
add
pop
mov
fldenv
out
push
dec
pop
cli
rclb
gs
jp
cmp
nop
outsb
fidivrl
nop
test
jl
std
iret
push
ja
push
in
data16
dec
pop
push
test
sub
loopne
sbb
sti
repnz
and
push
dec
adc
orl
jb
sbb
ffree
and
ds
jns
addb
mov
div
xlat
into
xchg
sub
fcoml
mov
or
mov
cmpsl
push
aad
scas
add
popf
ret
xor
lods
pop
cmp
popa
lock
xchg
repz
cmp
stos
mov
mov
scas
out
int3
imul
rol
pop
cmp
mov
jo
insw
bound
or
inc
sub
pop
jge
sbb
jb
sbb
adc
mov
cs
jmp
adc
jo
mov
push
mov
aas
or
sub
inc
out
nop
adc
aas
lea
subl
incl
rcr
inc
fucomp
loop
push
ficompl
aad
mov
push
rolb
gs
xor
or
mov
fcoml
ds
xchg
fiadds
add
mov
xor
loope
sub
fs
insb
fdivl
inc
je
xchg
fiadds
cmc
leave
sbb
dec
lret
inc
cmp
dec
lea
inc
popf
cmp
push
lods
aas
mov
xor
lea
cmp
ret
adc
imul
jns
or
sub
adc
js
out
ret
mov
cmp
scas
jne
dec
and
push
push
adc
jne
insl
dec
or
inc
mov
callw
lods
sbb
out
incb
nop
and
das
xchg
aas
dec
xchg
cltd
cmpl
scas
jle
cmp
lret
iret
es
scas
sti
rcll
sahf
fists
mov
jbe
imul
enter
pop
movsl
pusha
imul
sub
pop
mov
jbe
sbb
test
pushf
into
jb
and
imul
test
je
fisttps
movsb
cwtd
inc
test
popa
cmp
inc
jecxz
imul
pop
mov
andb
in
sub
xchg
cmp
add
data16
jg
cmp
out
sbb
lock
mov
sahf
and
rol
lods
mov
mov
sub
into
push
ja
or
aad
adc
xchg
mov
loopne
std
lods
jle
jbe
dec
aam
stc
sbbl
sahf
fwait
pop
pop
jmp
das
fcoms
rclb
addb
jbe
pop
push
call
push
enter
sub
lret
adc
cmp
test
fists
mov
sub
jbe
je
int3
pop
cli
adc
sbb
enter
mov
fsubr
imul
dec
adc
cmp
mov
push
xlat
cmp
ror
lods
fldlg2
sub
push
fwait
mov
push
iret
mov
mov
push
imulb
jmpw
push
adc
outsl
sar
or
xor
jns
cmp
jo
adc
xchg
cmpsl
hlt
lods
sahf
mov
ficomps
data16
cltd
addr16
or
and
mov
ret
enter
mov
int
mov
push
js
dec
jmp
data16
pop
push
dec
pop
stc
pop
rorb
sbb
test
push
sub
or
push
std
pop
pop
sub
and
andb
cmp
lret
add
adc
pusha
inc
data16
mov
sar
jb
inc
repnz
loopne
inc
mov
or
fildll
jne
dec
or
push
dec
test
pop
ret
out
jo
pop
in
mov
mov
inc
and
push
adc
int
sarb
jge
out
addb
imul
push
inc
addb
in
imul
cmp
inc
mov
imul
cmpsl
and
mov
jo
imul
add
sbb
aaa
pop
das
xchg
xchg
hlt
mov
cmp
je
addr16
mov
cs
cmp
xchg
movsb
mov
cmp
repz
xchg
ret
daa
dec
fcompl
push
sub
out
adc
sahf
mov
std
sbb
pop
push
push
xor
cmp
inc
xor
scas
xchg
mov
cmpsb
fdivrs
movsl
xor
in
bound
mov
pop
arpl
loope
mov
or
mov
sbb
xor
inc
iret
ja
or
ret
sbb
stc
xor
sbb
xlat
test
pop
mov
scas
mov
jno
xchg
leave
js
adc
cmp
xchg
jnp
scas
mov
jp
fcmovu
xor
loopne
int
xchg
dec
inc
xchg
xlat
dec
jmp
xor
addr16
cmp
out
xor
in
lahf
push
xlat
xor
sub
daa
bound
sub
jle
jl
add
dec
pop
mov
mov
dec
int3
fistpl
pop
mov
ds
incl
shl
xchg
cmp
test
mov
jle
dec
mov
jne
xor
push
sbb
pop
xchg
xchg
or
mov
iret
data16
jg,pt
je
out
push
repnz
mov
mov
inc
daa
fisubrs
fistl
lret
jns
or
enter
adc
and
scas
out
ret
mov
nop
in
js
dec
push
jo
mov
xchg
frstor
cmp
dec
mov
imul
addr16
xchg
les
jae
aad
in
sub
sub
push
xchg
loope
rcll
adc
sahf
sub
call
mov
pop
xchg
dec
dec
adc
stos
mov
stc
into
lods
xchg
xor
mov
cld
and
mov
pop
sub
ffreep
mov
xchg
jnp
xor
callw
jne
xor
stos
dec
lret
jne
aad
jle
insb
movsl
rcrl
or
cmp
inc
sbb
data16
add
jmp
out
mov
les
xlat
ret
sub
inc
fistl
fldenv
sub
cmpsb
sbb
push
dec
sahf
fimull
stos
scas
mov
pop
pushl
adc
inc
add
movsb
jae
push
cmp
ljmp
lea
dec
into
and
mov
mov
cmp
mov
push
hlt
xor
rol
adc
mov
inc
nop
shlb
pop
and
xchg
stc
xchg
leave
iret
sbb
stos
in
pop
adc
xorb
jnp
or
pop
pop
push
add
js
push
in
and
frstor
mov
out
bts
shrb
fistl
adc
jne
mov
dec
popa
scas
xchg
xchg
push
mov
cmp
inc
dec
push
dec
jmp
into
inc
pop
add
xchg
push
inc
or
jbe
notb
ficoms
call
fildl
sub
dec
loop
pop
lret
mov
das
push
or
test
roll
mov
imul
aam
inc
cmp
mov
adc
jp
mov
inc
mov
adc
shrl
mov
cmp
mov
dec
cmpl
xor
or
mov
push
mov
push
in
je
lea
or
add
push
ret
jnp
mov
pop
scas
xchg
cmp
hlt
xchg
daa
sub
mov
pushf
mov
xchg
je
adc
aas
arpl
push
lock
xor
push
stos
cmpsb
fdiv
mov
aas
jge
bound
cli
setne
stos
lcall
xchg
jp
push
or
ficomps
xor
ja
les
jecxz
mov
jnp
sar
bound
sbbw
mov
shrb
aam
loopne
push
pop
scas
ljmp
adc
repnz
adc
fiadds
sub
xchg
stos
in
xlat
loopne
lods
mov
or
ficoml
jb
jcxz
cmpsb
cmp
fdivl
insl
pusha
jb
dec
push
fadds
push
sub
sbb
pushf
lods
xchg
lods
push
fdiv
lods
xchg
sbb
neg
mov
pusha
adc
add
jb
int
mov
jnp
test
lahf
jnp
sbb
push
push
fmuls
lahf
in
test
jp
or
push
push
push
jge
mov
sarl
mov
dec
jnp
add
push
xchg
adc
xchg
xor
push
and
js
add
out
out
jbe
scas
push
pop
rol
mov
mov
mov
dec
imul
fiadds
scas
xchg
data16
in
out
jg
out
es
lods
inc
out
mov
bound
mov
fbld
jne
pop
jns
loopne
fistpll
out
lcall
push
fistpll
sbb
imul
pushf
bound
cmp
or
push
bound
movsb
inc
out
popa
loop
inc
and
int3
cmp
xchg
das
sbb
fdivrp
out
and
pop
mov
faddl
bound
aas
jnp
pop
cmpb
test
rorl
lea
aas
sbb
call
push
pop
inc
jp
push
jnp
test
or
inc
pop
or
aam
loopne
std
mov
lods
scas
dec
push
mov
sti
pop
jg
fnsave
and
aas
sub
dec
or
cmp
add
or
fldt
xor
and
add
data16
clc
fstl
repz
ret
and
nop
lcall
or
mov
adc
shrb
aad
cmp
mov
xor
hlt
scas
popf
imul
mov
or
dec
add
aad
mov
loopne
mov
jnp
rcrl
insl
test
sub
mov
lret
sub
fcoml
or
adc
jl
movsl
push
mov
inc
inc
popf
shlb
mov
ret
rclb
jb
pop
ss
orb
xchg
sub
dec
mov
cmpb
negl
out
jns
pop
and
repnz
xor
pop
sub
jle
iret
insb
into
pushaw
loope
popa
lds
mov
and
sbb
and
lret
ds
les
push
cmpsl
insl
mov
jge
add
lods
jbe
sbb
fdivs
mov
data16
dec
mov
adc
cmc
push
clc
and
int3
sub
cmp
mov
pushf
xchg
dec
jg
inc
imul
inc
jl
jo
leave
es
rorl
jae
movb
jg
movsb
mov
jg
hlt
enter
out
imul
lea
mov
mov
iret
fdivp
sbb
stos
jne
xchg
in
mov
push
sub
jae
dec
pop
mov
bound
shlb
inc
mov
pop
roll
popa
ror
xor
insb
andb
cmc
jg
dec
dec
pop
mov
jmp
xor
cs
pop
insb
and
sub
mov
xor
jae
std
sbb
insb
cmpsl
xchg
add
outsb
xchg
push
je
jbe
adc
xchg
addr16
int
je
adc
or
inc
idivb
jnp
test
cmpsb
aas
mov
int3
push
pushf
repnz
clc
fldenv
cmp
cmp
stos
mov
lods
push
jmp
addr16
push
sub
pop
add
jne
and
iret
adc
xchg
xchg
cmpsl
inc
dec
lods
jb
xchg
decl
out
imul
jl
pop
aas
data16
xorb
adc
jae
cltd
enter
jecxz
aad
inc
xchg
in
je
and
inc
jb
les
pop
jnp
mov
xchg
lds
and
ljmp
mov
and
mov
push
mov
and
insl
push
pop
jg
js
je
and
and
or
xor
or
xchg
scas
jne
cmp
dec
jae
push
popa
scas
cmc
push
mov
insb
xlat
add
xlat
sbb
mov
sbb
pop
push
cs
pop
inc
data16
imul
out
push
jl
dec
lods
ficomps
inc
push
sbb
adc
nop
add
repnz
push
in
shll
push
push
test
xor
pop
pop
dec
xor
cli
push
ja
jnp
mov
push
push
add
andb
js
xchg
leave
pop
dec
lea
pop
lods
insb
movsb
dec
loop
inc
cmp
out
xchg
into
lea
insb
inc
push
dec
int
ss
fidivrs
out
fistl
cmp
cwtl
lock
add
lea
out
add
push
mov
aad
dec
jne
test
je
fistps
jns
xor
dec
loop
incb
out
notl
mov
cltd
mov
cmpb
mov
cmpsb
or
xrelease
idivl
shll
mov
enter
mov
xchg
in
fistpl
sbb
dec
out
xchg
jae
imul
push
fdivrs
jge
mov
out
insl
scas
loope
enter
mov
gs
sub
mov
mov
or
xchg
int3
sub
xchg
push
jb
shlb
imul
xchg
pop
popa
jns
mov
push
fadds
add
push
sbb
sahf
push
mov
gs
push
xlat
fdiv
jg
ja
dec
rcrl
iret
jbe
inc
or
cmp
lret
mov
shlb
std
push
repnz
jbe
cli
xor
add
es
sbb
addl
add
jnp
dec
push
fsubs
mov
inc
mov
addr16
data16
fldt
mov
arpl
push
movsw
cs
ja
push
xchg
push
mov
jno
or
sbb
add
lcall
mov
or
adc
pusha
inc
js
test
xchg
std
mov
inc
pop
push
fldt
hlt
jo
mov
dec
shlb
test
push
pushf
pop
arpl
adc
adc
cmp
push
xor
mov
mov
lcall
sahf
push
mov
lret
stos
imul
out
movsb
cmp
sbb
adcb
sub
mov
push
roll
leave
ficomps
std
cmp
mov
add
js
mov
out
adc
xchg
int
pop
dec
in
add
mov
add
mov
mov
enter
rcr
adc
push
pop
mov
mov
and
rorl
sahf
cmpsb
cs
xor
pop
mov
lods
ja
inc
and
mov
cmp
mov
mov
into
cmp
or
hlt
jmp
daa
or
mov
fidivs
mov
scas
or
lcall
outsl
data16
mov
nop
ja
inc
scas
insb
jnp
call
addr16
pop
adc
lods
xor
dec
mov
xor
pop
fwait
ret
lds
jl
or
lods
adc
jns
hlt
seta
push
popa
fnsave
popf
inc
push
and
dec
rcrb
inc
bound
xor
out
test
testl
or
aad
lods
adc
sbbl
mov
jp
xlat
les
subb
push
pop
sarl
adc
daa
ficoms
movl
adc
jp
fimuls
aas
dec
popf
lea
add
adc
adc
call
repz
jmp
call
sahf
ffree
mov
jae
and
jne
rcll
sub
aas
cli
rcr
push
xchg
daa
sub
repnz
adc
call
aas
adc
mov
mov
cmp
nop
xor
push
inc
xchg
ret
xchg
clc
imull
push
ret
or
mov
fistpl
repnz
and
cmp
pop
fsts
sbb
inc
mov
mov
adc
inc
imul
xchg
cmp
sub
and
les
pop
out
mov
fdivl
nop
addr16
sub
int
lcall
pusha
push
jmp
add
jecxz
jb
push
cmp
lock
test
add
push
add
sbb
movb
orb
and
add
xchg
arpl
sbb
mov
aas
cmpsb
in
jb
shlb
je
pushl
lret
push
fldl
adc
scas
scas
inc
nop
cmp
test
aam
or
insb
jbe
int
addr16
enter
mov
out
scas
mov
mov
jecxz
out
dec
into
ds
cmp
popa
in
jp
enter
iret
nop
xor
mov
test
push
pusha
add
aam
fbld
pop
mov
movsl
lret
pop
sbb
sti
mov
out
adc
dec
mov
iret
dec
jo
push
push
pop
cmp
jl
iret
jge
fcmovb
cmp
jmp
adc
js
and
das
add
lods
arpl
stos
push
adc
sahf
shrb
sub
mov
ja
fst
xchg
rcrl
push
adcb
add
or
mov
out
sub
push
je
insb
jb
leave
sbb
aad
pop
sub
jl
popf
lret
push
mov
jae
inc
cwtl
out
and
push
pop
cmc
mov
cli
cmp
xchg
data16
fildl
rcrl
inc
sub
xchg
add
jp
fsubl
sbb
scas
push
push
cwtl
push
push
xchg
addr16
xchg
stos
push
jnp
and
movsl
jne
adc
pop
stos
pop
sbb
pop
mov
subl
add
jnp
pop
mov
xchg
push
or
clc
mov
stos
jbe
jbe
lcall
stc
orl
sub
mov
mov
out
xchg
cmpsb
in
hlt
pusha
jb
and
leave
js
repnz
ja
lds
jmp
or
sar
and
addb
jne
inc
mov
rol
push
bound
rcll
cmpsb
pushl
int3
stc
cmp
test
adc
add
jo
ja
pusha
xorb
movsb
sbb
outsb
cli
arpl
sbb
xchg
data16
addl
push
sbb
mov
push
imul
inc
jecxz
loope
testb
in
cmp
adc
inc
popf
push
seto
dec
dec
ds
jnp
xchg
mov
jge
divl
mov
xchg
xchg
test
outsl
test
imul
lods
cmp
adc
popa
arpl
pusha
cmc
aas
adc
movsb
cmp
stos
rcrb
pop
sahf
pop
sbb
stc
xorb
jmp
stos
outsl
jecxz
shlb
mov
imul
push
add
push
rcrl
fiadds
ss
jae
pop
sub
shll
daa
mov
adc
mov
test
inc
shlb
enter
cmc
outsl
cltd
in
daa
pop
fstl
fmuls
mov
adc
aam
cmp
inc
outsl
push
inc
xchg
dec
fistps
mov
cmp
sbb
xor
mov
out
inc
pop
adc
loopne
aam
insb
sub
dec
in
sarb
mov
mov
data16
adc
jle
out
mov
sahf
pop
cmpsl
jno
repz
jl
cmp
jns
ja
jecxz
jbe
fistpl
int3
push
mov
mov
mov
loope
add
in
fistpll
pop
test
pop
rcr
xchg
xor
pop
cli
movsl
sbb
dec
gs
jns
xchg
fisttpl
jg
add
dec
std
cmp
adc
mov
mov
mov
shrb
nop
sbb
es
jl
sbb
test
fistl
sbb
mov
add
stos
sub
fwait
adc
xchg
pop
adc
sbb
cmp
test
dec
mov
jo
mov
lahf
xchg
clc
outsb
add
fs
loop
aaa
out
inc
push
push
pop
pop
xchg
push
addr16
imul
jno
int3
push
pop
cmp
jl
jge
add
lret
js
adc
bound
pop
outsl
lahf
stos
jl
pop
iret
enter
inc
notb
jg
stos
jbe
dec
add
stos
cmpsb
push
push
lcall
or
jl
movsl
xor
push
or
mov
arpl
aam
into
aad
jg
hlt
insb
push
pop
pop
loope
inc
fsubl
aad
dec
lcall
subl
cwtl
cmpsl
rcrb
sbb
sarl
dec
adc
and
repnz
adc
fs
mov
xchg
les
addr16
push
ret
jns
sub
pushl
fistps
nop
sub
movsb
pop
jle
xor
push
jns
sbb
ljmp
call
mov
aas
test
jle
jl
jbe
out
mov
outsl
mov
rol
sbb
insb
push
lea
mov
outsl
inc
jp
cmp
stos
mov
adc
xchg
fs
jnp
dec
add
lea
cmp
fdivrl
push
je
ja
adc
sahf
dec
push
repz
jae
shll
in
and
adc
sbb
xchg
mov
pop
lods
hlt
and
fidivrs
aam
adc
stos
int
add
fistps
cmpsb
pop
decb
roll
insb
sub
mov
pushw
hlt
cmpsl
mov
add
push
ret
and
adc
xchg
mov
out
jnp
loope
push
movsb
std
push
or
inc
andl
add
pop
xor
inc
xor
pop
xchg
dec
inc
sub
mov
jb
bnd
push
ret
and
int
jge
shrl
cmpl
push
pusha
je
pop
mov
int3
andl
xchg
dec
icebp
mov
or
push
sbb
rclb
mov
inc
test
andb
daa
xor
push
loopne
nop
xor
ss
aas
and
jecxz
sub
dec
adc
xor
xchg
sub
cli
int3
mov
imul
push
divl
mov
xor
ljmp
xchg
and
out
repnz
je
stos
xchg
push
add
add
mov
data16
lcall
aad
inc
inc
sbb
mov
test
es
xchg
aas
xchg
push
add
nop
dec
fwait
push
mov
jle
repnz
test
inc
jle
mov
and
sahf
and
aam
jge
fmuls
pop
mov
movsb
gs
mov
push
dec
bound
test
cmpsl
dec
push
inc
movsl
jl
andb
lcall
inc
add
stos
mov
cmpsl
sbb
scas
repz
pop
dec
lret
mov
addr16
jg
inc
jne
aaa
jmp
add
addr16
pop
imul
mov
lahf
jle
icebp
rorb
xchg
rol
xor
xchg
pusha
fwait
add
cli
addr16
mov
add
jl
lea
das
ror
push
into
inc
inc
fisttpll
cmovbe
jg
scas
sti
std
add
xor
mov
scas
data16
decb
imul
addr16
cmp
ds
inc
je
add
push
sbb
add
cs
addr16
add
or
movsb
push
inc
and
push
addr16
mov
xor
subl
push
jmp
push
xchg
lods
xor
outsl
pop
or
sub
or
sbb
fs
addr16
mov
cmc
or
outsb
adc
sub
xchg
mov
gs
data16
scas
xchg
pop
or
push
xchg
and
and
imul
adc
mov
jl
cmp
nop
nop
roll
xor
and
xchg
jle
xor
lods
mov
data16
pop
push
jo
inc
cmp
cmp
jmp
lret
data16
jnp
js
mov
andb
dec
mov
fsubrl
arpl
out
push
andb
leave
xchg
sub
pop
mov
jno
mov
cmc
pop
fdivrp
sub
bound
imul
es
andb
mov
lea
daa
sub
lcall
mov
sarb
pop
loopne
fnstcw
push
aaa
mov
push
add
test
push
push
xor
mov
mov
sbb
rolb
mov
xchg
in
lcall
data16
insl
sahf
push
push
leave
jp
movsl
cmp
mov
or
or
inc
and
xor
pushl
repnz
mov
aaa
inc
dec
adc
push
sub
enter
fidivrs
sbb
movsl
lods
push
sub
negb
push
int3
fstps
outsl
adc
fsubp
sbb
mov
call
xchg
pop
es
popa
pop
sbb
sbb
inc
arpl
cmpb
es
cmp
adc
push
imul
xchg
add
mov
movsb
jp
and
adc
data16
push
mov
lods
mov
addl
lahf
mov
xor
push
test
fstpt
out
pop
adc
mov
das
daa
pop
add
loop
outsl
xlat
pop
into
push
push
mov
cmp
jl
and
jge
cld
mov
push
shll
out
push
fdivl
jle
frstor
jnp
test
add
mov
jp
pop
pop
cmpsl
int
fs
xor
cltd
ds
adc
int3
jno
jmp
fiadds
sub
popl
out
jg
or
mov
pop
xchg
mov
addr16
mov
push
leave
sahf
movsb
ds
mov
addr16
repnz
int
and
lods
push
mov
or
rorb
cmp
jp
jnp
out
arpl
mov
push
cli
imul
rcrb
xor
ljmp
test
sbb
cmp
push
call
or
jle
xchg
movsb
out
cs
inc
pop
stos
shl
int
shlb
mov
mov
mov
push
out
mov
or
sahf
icebp
adc
xor
adc
add
pop
out
hlt
xlat
leave
dec
push
orb
mov
inc
fistpll
push
push
pop
cmpsb
pop
mov
jle
push
sbb
out
ret
mov
sbb
or
fsubrl
xchg
mov
ficomps
or
subb
sub
cmpsl
push
rcrb
out
mov
std
push
neg
xchg
aaa
fildll
outsb
clc
jno
cmpsb
or
cmp
repz
mov
rol
mov
sbb
add
insl
mov
mov
loopne
jns
inc
fcmovu
and
pop
xor
inc
addr16
or
stos
stos
rclb
nop
js
loopne
cs
mov
mov
mov
rcll
mov
imull
xchg
out
mov
addb
dec
ja
imul
cmp
out
test
and
in
jbe
fcom
jl
aam
clc
notb
mov
cmp
mov
mov
add
adc
rcr
inc
addr16
out
xchg
je
mov
stc
lods
inc
lret
cmp
test
mov
loop
addr16
mov
adc
xchg
call
addr16
das
outsl
out
sub
pop
test
cmpsb
inc
scas
mov
or
test
mov
ss
andb
stos
cmc
adc
dec
mov
add
push
lret
decb
inc
pop
jnp
test
fdivp
jbe
xchg
js
into
enter
xor
xor
lods
std
ljmp
cmp
movsb
iret
push
add
cmp
jp
shll
movsl
rorb
jb
mov
jo
sub
mov
inc
ss
mov
test
dec
adc
mov
mov
lahf
adc
in
testb
sub
ret
mov
notl
loope
mov
fwait
cli
lret
fdivp
xchg
mov
popf
cmp
mov
aas
pop
stos
xor
add
mov
dec
daa
lahf
xor
sub
or
cli
shlb
adc
and
push
xlat
mov
in
fildl
pop
mov
jp
ret
add
bound
mov
lods
fldl
loop
jmp
roll
push
cmc
or
ficoml
jno
data16
push
addr16
jl
into
bound
adc
inc
data16
add
mov
insb
xchg
adc
xchg
in
in
fisubrs
sar
jns
cmp
mov
fdivrl
mov
addr16
sub
jae
ljmp
and
aam
and
mov
lret
call
mov
dec
and
data16
in
mov
in
jbe
and
lcall
mov
inc
or
data16
sbb
lea
pop
shll
sbb
jle
arpl
lea
iret
movsl
out
jecxz
lahf
popf
mov
or
sub
lock
lret
and
lea
and
mov
loop
sub
push
scas
push
ds
sub
ss
fiadds
inc
mov
adc
adc
addr16
into
rcll
shlb
or
xchg
mov
leave
in
cmc
push
mov
add
arpl
orl
mov
add
adc
mov
cmpsl
push
mov
jnp
xchg
or
scas
shrb
or
aad
movsl
into
xchg
pop
jb
push
jne
decl
push
in
add
stos
mov
or
repz
stos
or
andl
push
shrb
mov
dec
sahf
push
mov
jmp
cmp
mov
mov
stc
inc
out
sub
stc
push
ss
cmc
ret
insl
lods
iret
inc
jmp
xor
dec
popw
jnp
cwtl
push
test
aas
fcomp
inc
cmp
shlb
imul
xor
loopne
pushf
aam
and
out
mov
mov
mov
dec
das
rolb
stc
ret
sbb
jo
fmuls
mov
sbb
pop
scas
stos
dec
popa
add
leave
cld
mov
sbb
nop
pop
and
fnstcw
xlat
test
pop
lcall
cmp
bound
mov
data16
sub
add
ss
and
jg
mov
lret
imul
dec
sbb
enter
stos
ret
pop
mov
ror
fs
mov
inc
lcall
nop
test
mov
andb
int3
scas
push
addr16
adc
mov
add
sbb
sub
in
add
addb
sbb
test
push
dec
xchg
pop
jns
mov
and
aaa
std
pop
loopne
sbb
ss
outsl
sub
into
lods
out
xchg
xor
repz
pop
jno
and
jns
lea
shrb
push
and
std
push
sub
loope
xchg
call
std
sahf
push
xchg
nop
push
push
pop
add
xchg
addr16
icebp
push
adc
mov
ret
jae
mov
repz
mov
and
mov
jb
xchg
shl
outsb
cmp
lret
xchg
jle
pushf
and
call
sub
shll
sbbl
dec
dec
or
data16
aam
pop
fisubrs
xchg
outsl
mov
adc
pop
lcall
jle
jmp
insl
fimuls
in
lods
or
stos
aam
in
stos
sbb
sub
test
int3
xor
cs
addr16
adc
stc
push
jmp
sahf
adc
push
addr16
data16
add
popa
cmpsb
daa
mov
cmp
lahf
stos
js
out
mov
jmp
push
leave
into
loop
cwtl
scas
xor
or
fdivl
loop
call
lcall
xchg
subb
test
push
adc
mov
inc
pop
ss
shlb
sbb
mov
and
xchg
push
ret
scas
or
in
hlt
pop
xlat
lock
xchg
sbb
repz
sbb
in
add
jl
mov
leave
insb
loop
lea
xchg
shll
stc
andb
enter
out
adc
lods
jae
mov
int3
cmpsb
popf
xchg
inc
icebp
test
push
xor
mov
adc
mov
daa
shl
push
xchg
mov
fdivr
popa
xor
test
dec
xchg
push
pop
sahf
jg
mov
mov
mov
daa
int
subl
iret
push
ffreep
mov
shrb
mov
pop
scas
faddp
mov
jno
push
mov
inc
xchg
sub
pop
popf
inc
xchg
push
jle
mov
orb
push
fmul
cltd
or
sbb
movl
pop
not
ret
xchg
push
mov
xchg
xchg
cmp
adc
fcmovnb
stc
sub
jl
shl
sahf
fldcw
mov
cmpsb
pushf
leave
rolb
cmp
jbe
mov
mov
push
cmp
and
inc
push
pop
aas
ret
xchg
jno
add
shl
push
lock
mov
out
mov
xchg
push
cld
call
imul
subb
movsl
sarl
pop
mov
mov
sbb
dec
movaps
add
bnd
xchg
loopne
lea
shl
mov
addr16
daa
ljmp
jg
cli
mov
xor
and
stos
add
into
fisttpl
push
add
neg
mov
mov
hlt
mov
movsl
jle
xchg
xor
sub
test
jmp
mov
into
popf
aam
cli
jg
lcall
imul
mov
repnz
insl
mov
pop
pop
or
icebp
xor
data16
dec
loope
adc
stc
xor
push
adc
push
lret
loope
jo
add
daa
shl
movsb
out
imul
int3
fiadds
aam
push
out
sub
or
inc
mov
bound
xchg
xlat
int3
test
jo
std
xchg
pop
test
aas
fisubrs
mov
loopne
outsb
sbbb
jb
in
sbb
cmpsb
arpl
xlat
stc
enter
fidivs
sub
xchg
inc
int
mov
hlt
icebp
pop
mov
jmp
insb
shrb
xor
jg
mov
shrl
add
xor
cmp
jmp
scas
out
out
int
push
cmp
pop
or
dec
cmpsw
xchg
jo
mov
sub
adc
mov
shll
fs
out
xchg
imul
hlt
ss
outsb
adc
mov
cmp
lods
mov
sbb
cmp
sbb
fcomp
pop
push
xor
mov
pop
repz
nop
lods
cli
faddl
scas
adc
test
xor
mov
iret
mov
mov
into
aam
arpl
repz
sub
jecxz
inc
das
sub
inc
mov
mov
lahf
iret
pusha
or
fimuls
mov
fcomi
sub
out
inc
push
pop
mov
lret
sbb
subl
mov
jnp
and
js
testl
lahf
leave
in
outsb
popa
cmp
dec
loopne
mov
scas
orb
cmc
adc
movsl
movsbl
sbb
or
dec
adc
xchg
mov
jge
inc
addr16
and
or
insb
or
cmp
mov
mov
pop
xor
add
and
call
lret
je
data16
leave
or
cli
sub
fiaddl
push
inc
fidivs
cmp
dec
and
mov
imul
add
push
aas
aad
fistps
fcmovnu
push
cmp
in
mov
stos
pop
cmp
aaa
mov
fidivrs
push
js
jge
pop
scas
les
aas
push
iret
or
or
xchg
fcompl
inc
and
mov
pushf
pop
jmp
jo
dec
xchg
pop
hlt
popa
jg
mov
rcll
fnstcw
push
mov
cmp
xchg
enter
cwtd
xchg
dec
adc
rorb
inc
into
addr16
mov
inc
push
inc
jle
fisttps
xor
inc
push
push
jle
in
dec
inc
std
sub
call
pop
nop
jle
xchg
adc
mov
or
fidivrl
std
pop
arpl
mov
xlat
dec
xorb
push
lahf
xchg
jle
pinsrw
adc
fildll
jge
add
xchg
and
mov
cld
xor
inc
lock
or
push
ror
in
incl
xor
mov
inc
cmp
lahf
pop
mov
lahf
in
dec
cld
ja
arpl
jbe
shrb
aam
andb
jle
test
mov
jg
or
cmpl
out
xor
and
xor
nop
cld
stc
cmpb
push
mov
xchg
dec
xchg
or
adc
scas
xor
inc
inc
js
jle
andb
in
mov
mov
dec
xchg
jg
push
int3
leave
xchg
mov
jle
push
test
test
push
es
adc
fisttps
pop
inc
adc
pop
xor
push
hlt
sub
push
inc
sub
sub
inc
adcb
mov
test
rclb
hlt
jle
int3
ds
dec
dec
dec
sbb
xchg
into
std
fsubrs
cli
into
out
movsb
int3
mov
fcmovnbe
inc
pop
insl
push
cmpsl
xchg
xchg
sbb
test
push
das
lahf
fcompl
sahf
inc
scas
popl
inc
jecxz
out
je
orb
rcl
ret
pop
leave
incb
popf
stc
inc
gs
cli
leave
cmp
inc
dec
push
fs
test
das
pop
lea
xchg
push
add
lods
sbb
jle
arpl
ss
fsubs
inc
jle
pop
stos
xchg
out
mov
mov
push
mov
fcoml
notl
mov
jno
or
inc
jb
ret
nop
dec
adc
jle
dec
xor
xor
cmp
dec
int
lahf
jmp
addb
test
cmpsl
arpl
jle
pusha
mov
into
dec
pushf
pop
push
xchg
cmpsb
push
hlt
jne
lea
adc
mov
inc
xor
and
xchg
loop
push
clc
add
mov
cvtdq2ps
nop
pop
rol
add
out
jle
push
cs
rol
inc
orb
cmpsb
loopne
in
out
xchg
rclb
push
into
rcr
sub
arpl
mov
aam
mov
aad
inc
testb
inc
subl
cmpb
aad
mov
add
popf
push
rolb
jle
xor
adc
inc
dec
in
or
add
jg
dec
push
sti
lock
cmpb
mov
aas
push
fsubrs
jle
pop
inc
push
jg
mov
sbb
aas
dec
daa
orl
sub
pop
in
loope
or
add
sub
idivl
mov
call
mov
addb
adc
mov
pushf
js
mov
adc
test
mov
sub
sub
arpl
jnp
aas
and
jle
icebp
ja
test
jle
pop
popa
adc
mov
mov
loop,pt
iret
pusha
sub
jle
inc
test
cmpsl
rcrb
jle
sbb
lahf
pop
jle
loop
xchg
clc
lods
mov
inc
fwait
xchg
fidivrs
sar
jge
jle
pop
dec
push
scas
in
adc
rol
fnstenv
dec
pop
dec
movsb
pop
or
ja
mov
xlat
jle
cmp
rolb
push
jle
fcompl
aad
mov
xor
lea
mov
dec
push
gs
jecxz
pushf
outsb
xor
inc
les
not
mov
jns
sti
and
roll
jle
add
jle
push
sbb
cmp
xor
xchg
insb
sahf
mov
setno
jle
addb
je
xchg
jle
pushf
jns
cmp
lods
in
aad
cmpsl
addr16
insb
negl
mulb
nop
test
es
test
jle
bound
andb
xchg
and
inc
or
jle
push
lea
jle
lock
and
ds
in
inc
xor
shr
sbbl
das
push
call
dec
out
sbb
adc
inc
cmp
nop
andb
xor
and
shufps
pop
movsl
push
xchg
cmp
in
sub
bnd
sub
push
mov
mov
rcl
jae
mov
enter
iret
jg
push
ja
fstpt
inc
lods
jle
adc
push
pop
jge
xchg
pop
jge
sahf
js
and
in
mov
push
out
dec
dec
enter
shlb
or
mov
dec
mov
sub
mov
nop
pop
sub
cmp
pop
mov
imul
nop
inc
addr16
jle
xchg
xor
lret
adc
cmpsb
push
sub
add
dec
nop
xchg
es
mov
jle
sbb
push
fdiv
add
mov
out
test
push
sbb
cmpsl
lea
fidivs
loopne
mov
andl
or
js
push
pushf
lret
jle
scas
ljmp
adc
cwtl
push
aas
jns
xor
icebp
testl
orb
setbe
sbbb
mov
xchg
cwtl
sbb
xchg
mov
or
sbb
enter
jle
ljmp
mov
fnstcw
mov
add
cmpsb
push
imul
stos
in
mov
mov
cli
xchg
rcll
lea
adc
pop
xchg
es
inc
jle
fs
scas
pop
jle
dec
imul
mov
adc
mov
mov
bound
push
test
jle
mov
test
jle
stos
push
insb
lods
test
inc
mov
pop
mov
sbb
subl
sti
mov
jg
iret
loope
dec
jle
imul
and
mov
call
insb
mov
jle
out
pushf
and
lahf
orb
in
push
idiv
nop
xchg
xor
lret
xchg
mov
sahf
mov
pop
mov
pop
push
jmp
pop
lea
xchg
sub
push
push
mov
cmp
sub
call
js
mov
sahf
sub
sub
cmp
pop
sbb
aaa
sbb
mov
xchg
in
sti
jp
push
rorl
decb
inc
ret
lret
push
cmpsb
fcomi
push
jle
pop
fsubr
sbbl
fistpll
jl
lods
push
jo
jle
xchg
insb
shll
fwait
nop
mov
fistpll
daa
xchg
mov
mov
les
pop
icebp
ss
lcall
mov
fisttpl
lock
nop
outsl
xchg
in
mov
testb
iret
fwait
inc
lea
jle
jo
insb
cmpsl
test
sahf
inc
adc
mov
call
loope
mov
pop
test
jg
cli
cmpsb
pop
xchg
xchg
mov
or
xor
jo
xor
movsl
pushf
add
mov
lahf
jle
fs
out
adc
fwait
cld
gs
jle
call
sub
ljmp
adc
sahf
notb
mov
addr16
sub
inc
test
xlat
fidivl
pop
jle
sbb
push
push
mov
nop
sbb
mov
rorb
sbb
aas
push
iret
stc
mov
jp
mov
pop
ja
xorb
push
xor
jle
shll
and
jno
ret
mov
scas
mov
mov
mov
push
data16
leave
bound
lret
nop
pusha
mov
inc
inc
jb
pop
std
add
inc
cmc
xchg
movl
xor
lcall
lahf
jg
inc
or
dec
mov
andb
cmp
nop
cmc
mov
mov
inc
lock
shlb
mov
sub
add
andb
jle
pushf
loope
dec
pop
stos
inc
push
int3
nop
ja
nop
jp
popa
mov
cmpb
pop
sbb
jle
sub
pop
lds
ja
xor
ljmp
xor
xor
xchg
push
jle
pop
or
stos
dec
test
jle
fdivl
jle
pop
mov
xchg
inc
sbb
xchg
sbb
jae
sub
mov
jg
fistpl
stc
mov
addr16
or
outsl
and
sub
jge
add
xchg
je
nop
mov
jge
add
dec
andb
add
jb
aas
jle
xchg
inc
sub
imul
aam
add
mov
nop
cmpb
enter
scas
mov
sub
loope
jle
fwait
insb
test
push
nop
bound
mov
sahf
adc
test
mov
movsb
loopne
or
loope
inc
divb
xchg
fwait
ret
jecxz
add
inc
insl
data16
adc
lahf
in
jle
ss
inc
cli
xor
sbb
xchg
aam
into
xlat
lock
cwtl
or
jnp
inc
push
cs
ljmp
cmp
dec
sahf
push
fnstsw
rolb
mov
out
jle
dec
and
sbb
push
pop
pushf
sarb
add
jle
int
call
xchg
adc
jae
mov
jo
or
iret
dec
out
insb
mov
test
push
mov
outsl
gs
lahf
movsl
mov
mov
js
xor
jle
push
inc
adc
popa
cwtl
jle
mov
add
dec
or
les
in
add
test
ret
ficoms
xchg
xor
pop
mov
ret
jg
imul
fisubs
cmp
clc
inc
jg
imulb
xchg
add
filds
out
adc
mov
xor
nopl
and
mov
cwtl
dec
jle
bound
daa
sub
das
xchg
addb
pop
rorb
nop
adc
push
fadds
int
jg
daa
jb
push
dec
fs
cli
bound
fwait
sub
adc
pop
sub
in
mov
dec
xor
int
in
push
xor
cmp
push
cld
jle
addr16
leave
jb
lods
test
mov
aas
imulb
mov
cmp
addb
push
shl
and
cmp
lea
pop
jo
mov
jl
mov
xchg
lds
pop
fdivs
jg
nop
mov
out
mulb
leave
push
sbb
fisubs
jg
insb
mov
jle
xor
addb
xchg
imul
mov
std
jg
fsub
fiaddl
stc
jbe
pop
int
insl
jbe
pop
mov
xorb
popa
mov
rcrl
fnstenv
mov
lcall
xchg
mov
scas
adc
mov
rcrl
paddw
lcall
mov
bound
mov
divb
mov
lcall
add
mov
outsl
ficompl
xchg
mov
mov
bound
mov
loop
cmovl
roll
lret
lods
mov
push
push
scas
lock
add
jae
test
adc
jnp
push
out
xorb
pop
and
enter
out
mov
std
mov
xor
mov
idivb
mov
fcos
or
push
loope
push
mov
mov
push
mov
mov
lret
sbbb
scas
mov
cwtl
into
mov
push
andb
lock
lcall
and
das
mov
inc
lcall
ss
into
sahf
popf
mov
mov
xchg
mov
mov
push
mov
mov
sub
inc
add
mov
nop
repnz
xchg
jmp
jmp
cmpl
sbb
dec
lret
scas
lret
inc
pop
add
adc
pop
mov
bound
jecxz
mov
sahf
lret
sbb
cli
mov
adc
mov
mov
scas
dec
mov
push
mov
mov
or
cmpsl
outsb
lret
mov
mov
inc
xchg
lcall
aaa
movsb
cmpl
lcall
shlb
mov
pop
inc
idivb
or
loopne
leave
mov
scas
inc
pop
mov
mov
mov
xchg
stc
add
mov
cld
bound
mov
sbb
outsl
scas
sahf
xchg
imul
mov
mov
and
imul
push
xchg
lock
sahf
sub
and
bswap
scas
mov
jo
xchg
mov
lods
xorb
sbb
mov
cmp
lock
lret
xor
lret
ds
scas
sahf
mov
movsb
mov
cmp
aas
push
add
out
mov
int3
jne
xchg
mov
xabort
xchg
xchg
push
movsb
adcb
mov
std
mov
push
stos
mov
and
pop
xor
sbb
mov
push
cmp
sub
sbb
cmp
js
mov
loopne
push
orb
ss
cs
ret
scas
inc
push
mov
aad
mov
out
mov
mov
or
dec
rolb
adc
mov
mov
mov
mov
ret
inc
sub
cmpsb
sahf
jl
scas
pusha
adc
or
repnz
hlt
push
pop
sbb
dec
inc
lds
inc
push
pop
rorl
sbb
push
bound
pop
jg
mov
inc
xor
pop
jle,pt
enter
rol
xchg
push
adc
not
jmp
je
addr16
dec
arpl
lds
movhps
add
cmp
roll
jnp
mov
ret
cmc
xchg
xchg
test
addr16
movlps
add
arpl
enter
pop
inc
xchg
sbb
xor
cmc
dec
pop
cwtl
cwtl
pop
test
ja
scas
je
add
scas
jmp
pop
test
sbb
gs
cmp
mov
xlat
push
push
pop
stos
push
and
movsb
stc
lret
sbb
cld
xchg
les
and
je
lea
lea
movsbw
movsbw
jne
lea
movzwl
movzbl
lea
jmp
pusha
mov
pushl
push
movw
lea
jmp
bswap
movsbw
pushf
lea
jmp
pop
add
dec
arpl
mov
test
outsb
popf
xor
lcall
lret
aam
mov
enter
loop
loope
repnz
xchg
sub
inc
xchg
push
fnstenv
ret
les
movsb
out
sbb
mov
mov
pop
leave
sahf
cmp
loopne
movsb
test
jge
sub
call
js
into
rorl
push
ret
orb
xchg
cwtl
sbb
jg
push
mov
jmp
jmp
jmp
push
sub
popf
mov
in
cs
mov
out
cli
cli
sub
sbb
xchg
sbb
xorl
sbb
popa
sub
push
or
call
lea
jne
jmp
lea
jae
clc
push
clc
clc
sub
push
pushf
lea
js
pusha
lea
call
call
call
sub
arpl
cs
dec
pop
pop
mov
lods
sbb
clc
sub
mov
and
inc
sub
ret
scas
and
out
adc
addb
mov
jo
adc
dec
add
mov
fs
ja
mov
sub
neg
stc
bt
add
pushf
mov
adc
rcr
mov
bt
repnz
mov
jmp
movl
mov
jmp
aam
fwait
rorb
jge,pt
xchg
fcmovbe
rcll
ret
fisubrl
sbb
inc
mov
push
xchg
pop
pushf
fwait
add
test
cwtl
cmpsl
pop
pop
cmc
mov
shll
adc
inc
repz
aad
push
scas
in
idivl
sub
stos
movl
pushf
lea
jmp
lea
je
jmp
call
pushf
jmp
lea
je
cmc
test
test
call
pushf
movb
lea
je
test
add
pusha
bt
bt
movw
cmp
pusha
jmp
sub
or
dec
arpl
xchg
mov
mov
in
add
sbb
test
gs
push
cwtl
xchg
adc
popl
popf
add
ret
sbb
cmc
xchg
cltd
pop
ja
mov
push
push
lock
icebp
fiadds
jae
outsl
leave
jmp
jecxz
lods
loopne
sbb
mov
bsf
dec
add
bts
and
not
add
mov
jmp
ja
dec
rorb
iret
adcl
add
cs
xlat
add
add
jbe,pn
pop
nop
test
mov
inc
in
push
ja
popf
adc
addr16
or
push
add
out
call
je
movsl
in
pop
jbe
pop
les
sbb
loope
xor
xchg
rorb
mov
xor
xchg
push
push
test
sti
dec
inc
push
je
inc
es
jbe
pop
imul
repz
out
test
jbe
adc
dec
mov
adc
sub
adcb
dec
pop
and
lret
cld
cmp
pop
fs
add
add
add
add
add
add
add
push
pop
add
push
pop
add
push
pop
add
add
add
add
push
pop
add
cld
icebp
dec
inc
xor
cmp
movsb
or
jo
sub
loop
inc
es
js
cmp
jle
in
ljmp
pop
cld
test
add
leave
lock
mov
mov
push
fisttpl
mov
inc
ret
in
rcrl
dec
int
sti
mov
cmp
adc
push
cmp
iret
test
addr16
and
cld
adcb
sbbl
dec
lcall
ret
lcall
shll
cmp
push
inc
push
jne
xchg
mov
xor
dec
adc
out
out
adc
inc
jo
les
iret
andb
mov
pop
pop
cmp
pop
mov
or
push
jnp
xchg
bound
mov
adc
jns
mov
daa
add
loop
mov
lcall
cmc
pop
xchg
inc
out
jbe
mov
sbb
dec
mov
and
pop
dec
sbb
push
jns
decl
fadds
pop
dec
in
stos
addr16
push
dec
or
test
sub
pop
fsubs
imul
lea
insl
cli
pop
mov
or
jge
add
jmp
mov
mov
push
in
daa
les
mov
test
cmp
mov
or
adc
push
pop
xor
arpl
adc
mov
mov
test
jne
jg
jb
loope
sub
or
xchg
pop
pop
enter
xchg
fldenv
insb
push
xor
or
aas
in
mov
ja
dec
push
push
test
cmp
cmc
xorl
jp
data16
mov
pop
leave
jmp
pop
call
cld
scas
push
pop
aas
sub
sbb
ljmp
xlat
sbb
jnp
pop
cli
mov
jne
or
cmp
scas
jb
jle
cmc
aas
inc
sub
movl
shlb
inc
and
push
test
sbb
sub
ds
or
jg
les
aad
jbe
inc
or
cmp
push
notb
mov
xchg
mov
pop
ljmp
mov
dec
sub
sub
pop
dec
push
sub
leave
adc
mov
adc
inc
iret
rcr
jno
inc
vmwrite
scas
das
xchg
sbb
int3
dec
sub
sub
cld
stos
gs
mov
push
cmp
mov
or
adc
stos
mov
adc
mov
jne
cmp
arpl
fdivs
or
sti
jo
mov
outsb
dec
das
add
in
push
push
mov
ret
jl
sub
fucomp
movsb
test
xchg
add
es
faddp
mov
shl
aaa
aad
push
adc
dec
sub
pop
pop
cmp
mov
sbb
xchg
hlt
mov
mov
add
lret
adc
leave
sbb
inc
and
test
jle
or
xor
cld
dec
cld
xor
pop
movd
int
test
aad
stos
movsl
dec
dec
adc
fst
rcr
mov
out
scas
data16
xchg
ds
cltd
mov
dec
mov
ja
jno
mov
adc
cmc
hlt
mov
dec
cli
push
testb
mov
iret
movsl
jne
sbb
pop
cli
in
lds
mov
jae
or
in
adc
push
dec
loopne
int3
sbb
jnp
and
mov
aaa
cmp
out
es
mov
popf
adc
scas
andb
stc
cltd
jbe
sbb
cmp
dec
je
adc
popf
pop
adc
dec
cld
or
add
push
clc
pop
test
mov
jo
inc
jnp
jl
ljmp
pushf
scas
cmpsb
pop
mov
push
or
mov
bound
aam
adc
dec
mov
sub
adc
and
inc
mov
data16
cmpsl
sub
scas
inc
xchg
jne
leave
scas
and
nop
imul
inc
je
cmpsl
fiaddl
idivb
int
push
ljmp
movsb
fwait
add
rolb
dec
mov
loope
in
rcrb
lea
fbstp
fdivl
out
xchg
mov
jmp
int
dec
inc
outsb
lds
mov
jb
mov
sahf
das
insl
inc
mov
mov
insb
lcall
aad
testl
jmp
addb
dec
and
out
sbb
loope
jb
jmp
aas
ret
sub
iret
call
lods
cmp
sub
mov
mov
das
scas
lcall
sbb
pop
inc
mov
mov
adc
jge
rcll
dec
sahf
pop
stos
and
mov
pushf
push
stos
sarl
or
push
popa
mov
out
and
pop
push
xor
addr16
push
or
push
je
lahf
lcall
fldcw
sahf
mov
add
rcll
lret
mov
or
jp
dec
or
test
loopne
jo
sbb
repz
mov
push
mov
ss
popa
mov
dec
sub
sub
ror
fidivl
subl
sbb
inc
rclb
mov
subb
fldt
lods
inc
push
dec
stc
add
das
cmp
jo
fcoml
xor
cs
pop
push
xor
pusha
nop
scas
lock
mov
aas
jno
cmpsl
pusha
pop
mov
xchg
adc
cli
mov
shrb
outsl
loop
jb
subl
inc
add
push
jg
test
push
insl
jae
fnsave
mov
les
imul
cmp
xor
jae
pop
jecxz
inc
mov
inc
adc
std
inc
jno
das
sahf
mov
cmp
add
inc
pop
mov
ja
push
sub
sti
mov
pop
push
loopne
test
aas
cmc
shl
jbe
subb
ljmp
cmp
sub
lahf
inc
movsl
pop
mov
xor
push
jmp
jbe
and
jmp
and
xor
movsb
pop
adc
popa
loope
dec
stc
dec
jge
cmp
dec
bound
mov
adc
cmp
subb
jle
or
into
dec
jb
data16
test
ds
push
loop
mov
dec
in
add
mov
jbe
inc
push
inc
inc
mov
cmp
faddl
xchg
out
adc
sbb
or
mov
fcompl
push
xchg
mov
fdiv
loopne
insl
es
fidivrl
xor
sbb
mov
mov
xchg
sub
cmp
sbb
mov
repz
mov
inc
mov
pop
cmp
and
mov
scas
mov
or
daa
rolb
cmp
mov
mov
xchg
add
and
jb
leave
mov
dec
ficoms
sub
and
cmpsl
or
adc
das
mov
sub
stos
icebp
jbe
push
ljmp
jns
cmpl
int3
pop
inc
or
insl
les
leave
hlt
mov
push
loop
sub
jbe
out
in
push
push
daa
mov
or
inc
xchg
lret
int3
mov
dec
xlat
xlat
into
cwtl
xor
cmp
out
orl
lods
push
cmp
push
sub
scas
inc
mov
dec
inc
jno
adc
int3
ficomps
and
and
add
xlat
cltd
and
adc
test
push
out
pop
stos
lcall
sub
dec
pop
jnp
sti
test
pop
jp
mov
cmp
gs
in
notl
loop
adc
not
scas
push
sbb
dec
cwtl
inc
mov
cmp
or
fdivr
lret
sti
cli
mov
cmp
popf
test
inc
jne,pn
or
cs
push
andl
inc
les
and
daa
pop
in
sub
outsb
inc
scas
test
mov
sarb
cmp
fs
or
ret
sarl
shlb
mov
jne
in
cli
ret
sbb
xor
xchg
jl
movsl
mov
xchg
jae
inc
or
adc
mov
addr16
push
mov
push
xchg
stos
sarb
fldcw
scas
and
inc
inc
mov
lds
jl
out
test
fsubrl
mov
push
out
scas
incl
pop
adc
mov
test
insl
in
adc
sbb
rcrb
div
movsl
neg
xchg
cwtl
outsl
cld
and
lret
cmp
sbb
push
cltd
dec
cltd
lds
nop
pop
add
xor
int
or
xor
cld
pop
insb
rorb
dec
jnp
pop
je
mov
jle
jp
or
mov
mov
std
rol
jl
scas
push
faddp
in
out
xchg
jge
mov
mov
ss
xor
iret
mov
dec
hlt
shll
pop
xor
sub
mov
push
loope
test
mov
push
mov
stos
psrlq
js
into
xor
lods
sti
subl
jnp
mov
hlt
push
cwtl
das
mov
pop
dec
and
lahf
and
je
daa
lret
jg
lea
repnz
xchg
mov
out
loop
insb
jmp
test
pop
pop
lahf
lcall
push
jne
ret
dec
cmpl
sub
out
adc
out
mov
imul
push
out
scas
fisttps
push
adc
jne
pop
aam
fbld
pushf
int
loope
and
movsl
sbbb
inc
ret
cs
icebp
lods
in
std
cld
mov
cltd
xor
push
call
outsb
lcall
pop
jge
dec
sub
aas
sar
test
xor
cmp
vpmacssdqh
inc
adc
fmul
mov
pop
adc
shrb
ret
subl
ret
loope
shlb
jmp
mov
test
sarb
inc
cld
jno
and
icebp
in
ret
sub
and
dec
cmp
pop
test
loope
cmp
fcomi
dec
int
les
out
ficoml
rcrl
lret
push
daa
mov
xchg
ret
test
test
es
loop
dec
lods
mov
sbb
jno
imul
push
sub
lahf
push
mov
sub
ljmp
fdivp
testb
rclb
fidivs
adc
cmpsl
lret
outsl
loope
sub
in
add
jp
in
add
xlat
xorb
xchg
xchg
les
dec
mov
mov
aaa
dec
xchg
add
and
mov
pop
jmp
fsubs
cld
sbb
and
in
pop
pop
scas
into
into
pop
lret
push
and
xchg
cltd
pop
hlt
mov
aad
sub
lret
test
push
in
cmp
add
call
lea
jne
bt
clc
bts
shld
mov
shld
bt
shld
sub
rcr
bsf
mov
pushf
jmp
pusha
test
mov
pushl
popl
cmc
jmp
lea
je
pushf
push
cmp
jmp
movl
mov
pusha
pushl
movb
lea
jmp
xor
xor
dec
arpl
lock
xchg
or
int
movsb
jl
or
xor
negb
push
sbb
push
dec
xchg
push
std
jns
pop
push
cmp
mov
and
sub
dec
or
inc
andl
jbe
bnd
push
or
loope
scas
sub
pusha
lds
dec
stos
ljmp
sarl
ret
push
jb
scas
fs
adc
dec
ret
dec
mov
sbb
aaa
lea
mov
add
cmp
pusha
pushl
jmp
xchg
movzbw
movl
movsbw
sets
movsbw
lahf
lea
pusha
movb
pushf
movl
pushf
push
pushf
call
pushl
push
pushf
lea
jae
stc
mov
test
mov
shr
add
shl
mov
mov
adc
push
shld
mov
pusha
sub
bt
pushl
pushf
push
repnz
call
fstp
sub
mov
sub
in
xor
mov
add
daa
decl
push
xor
mov
push
stos
fiadds
inc
jae
add
cwtl
push
popa
xor
xchg
push
push
cmp
dec
dec
or
add
mov
ds
push
jns
push
cli
push
cmp
mov
or
lods
jmp
xor
sbb
pop
fwait
cmc
mov
jnp
xor
dec
sub
mov
push
inc
gs
cltd
and
inc
gs
jmp
sub
mov
adc
sub
lret
ret
shrl
sub
sub
gs
sbb
push
inc
gs
xor
imulb
push
inc
gs
mov
mov
cmpsb
push
inc
gs
jae
pop
sub
out
push
inc
gs
sub
xor
sub
jbe
xchg
lcall
inc
gs
in
dec
in
sub
push
sti
push
inc
gs
in
xor
mov
inc
gs
jnp
jae
sub
inc
gs
insl
ljmp
inc
gs
shl
push
sub
negb
push
inc
gs
fcompl
sub
ljmp
jbe
push
inc
cmp
mov
movsl
pop
inc
mov
push
mov
sub
in
inc
gs
das
sub
stos
push
inc
gs
pop
xor
das
sub
repnz
inc
gs
subb
xchg
push
inc
gs
sub
inc
gs
subb
nop
push
inc
gs
jg
fnstcw
sub
sub
sub
push
mov
inc
gs
aam
xor
sub
push
and
mov
das
sub
jecxz
inc
gs
int3
ja
lret
sub
xchg
fistl
gs
add
push
inc
gs
fs
inc
gs
push
mov
pushf
sub
adc
jno
cltd
sub
dec
push
inc
gs
lds
sub
push
inc
gs
cwtl
lret
sub
push
inc
gs
sbb
inc
dec
pop
inc
gs
mov
sub
push
inc
gs
cmpsb
daa
push
inc
gs
add
sub
aad
scas
mov
sub
xchg
fcoml
gs
movsb
xor
sub
iret
push
inc
gs
jp
sti
sub
inc
gs
lock
pop
enter
idiv
pusha
bt
cmc
sub
movw
jmp
inc
jmp
rcl
lea
bsr
mov
jmp
insl
nop
into
in
dec
arpl
mov
call
xor
roll
or
fbstp
lds
jae
fisubrs
popl
fwait
xchg
stos
add
xchg
enter
and
dec
inc
cmp
mov
popf
push
push
adc
hlt
and
jbe
repnz
jecxz
cmc
hlt
in
sbb
idiv
jmp
pop
lea
not
jmp
cld
lods
jb
dec
arpl
iret
jbe
cmp
stc
or
cmp
or
xlat
adc
adc
or
adc
in
lds
cmp
and
mov
mov
mov
int3
les
mov
je
out
jmp
add
mov
fsubrl
pop
je
fwait
orl
or
dec
mov
jne
notl
mov
or
mov
loopne
lret
cmp
dec
popa
dec
xchg
push
roll
test
dec
fsts
das
daa
jb
jae
dec
inc
insb
inc
sub
call
test
jns
lds
bswap
jmp
inc
push
jb
inc
cmc
mov
arpl
jno
es
adc
pop
cmp
rorb
push
jns
rclb
sub
pop
mov
or
je
adc
in
mov
int
loop
xor
add
sub
mov
jg
jnp
push
shlb
dec
lret
nop
push
popa
jle
sti
sbb
das
out
dec
arpl
mov
lcall
mov
cli
adc
xlat
pop
divl
dec
test
fsubs
push
shrb
leave
aam
xchg
mov
loope
mov
cltd
dec
stos
pushf
mov
clc
lds
mov
mov
inc
cwtl
dec
inc
and
cmpb
inc
sub
loope
js
aas
mov
xchg
mov
out
arpl
ljmp
int3
dec
jo
in
jg
mov
cmpsl
lds
push
lcall
and
or
int3
jg
pushl
push
or
dec
arpl
push
lods
lret
shl
inc
xor
pop
adc
loop
xchg
adc
pop
mov
cmp
xor
mov
andl
lods
je
or
inc
inc
push
mov
enter
sub
jb
out
testb
fsts
xchg
push
jbe
xor
sbb
push
mov
insl
xchg
push
int
popa
ja
mov
fmull
jecxz
push
mov
cmp
push
aam
call
jne
popa
enter
jno
sti
mov
sbb
pusha
movl
pushf
push
lea
jmp
lea
je
push
jmp
movl
pusha
movb
movw
movl
pushl
pushl
mov
pushl
lea
jmp
movl
pusha
call
push
sbb
dec
arpl
out
outsb
fsub
stos
pop
mov
pushf
adc
xchg
mov
repnz
popf
negb
lahf
add
mov
jle
lret
push
bound
out
push
mov
mov
xchg
iret
push
popa
scas
dec
fmull
js
dec
push
ret
jbe
xchg
loop
jcxz
shrb
inc
add
cltd
aaa
mov
aaa
idivb
dec
ret
mov
xor
lahf
shrl
jae
jecxz
mov
or
xchg
pop
push
mov
adc
xchg
cli
out
mov
jo
lds
call
mov
lahf
pusha
not
pushl
popl
push
movzbw
call
push
arpl
xchg
les
jb
jns
loop
mov
push
lock
xchg
test
pop
jno
inc
jnp
or
inc
repnz
and
cli
jbe
mov
jae
pop
cmc
icebp
cs
adc
xchg
adc
jmp
bswap
sub
push
lea
movzbl
pushf
mov
pushf
mov
pusha
pushf
mov
pop
bswap
bswap
mov
jmp
shl
mov
bt
jmp
jmp
pushf
lea
call
pusha
mov
lea
jae
xchg
call
lea
je
cmp
clc
pusha
pushf
sub
pushf
cmp
push
lea
ja
pusha
pushf
lea
jmp
jl
call
sbb
adc
ss
pusha
cmpl
loopne
aad
jbe
add
dec
dec
sub
inc
pusha
mov
jl
push
mov
sub
xchg
jns
divl
mov
mov
xlat
xor
sti
jns
jne
xor
lret
push
add
sbb
inc
jmp
fidivs
clc
cltd
movsbw
btr
mov
sar
adc
pushf
mov
clc
add
pushf
pusha
mov
push
movb
lea
jmp
pushf
pushl
popl
movw
push
pusha
lea
jmp
call
xor
push
jmp
btr
cmc
ror
mov
clc
cmp
push
test
sub
movb
add
jmp
cmp
test
not
mov
and
movb
pushl
pushf
pusha
mov
movb
mov
call
stc
mov
rcr
movsbl
shrd
add
not
shr
bswap
cmc
xor
shl
shr
neg
mov
pushf
clc
shl
test
shr
cmp
or
cmp
jmp
bt
jmp
setne
movsbl
pushf
pop
inc
movzbw
stc
rol
rcr
add
sbb
sub
neg
cmc
bt
shld
and
push
rol
movzbl
seta
mov
mov
jmp
add
push
pushf
lea
jmp
pusha
pop
not
bswap
lea
pusha
lea
jmp
pushf
pushf
popl
pushf
pushl
popl
pushf
pushf
mov
pushl
lea
jmp
mov
movw
cld
pushl
lea
jge
pushf
rep
sar
shl
shl
add
mov
std
call
pusha
jmp
shl
shr
sub
dec
movzbl
pushf
clc
cmp
pusha
sub
mov
call
pushf
mov
pushf
call
mov
push
pushf
popl
call
mov
pushf
pushl
movb
lea
jmp
pushf
pushf
popl
jmp
mov
pusha
cmc
pushf
mov
cmc
mov
test
bt
stc
xchg
cmc
bt
shl
rcr
mov
neg
adc
xchg
xchg
shl
bswap
mov
and
bswap
sub
or
mov
shrd
rcr
clc
pushl
popl
sbb
movl
cmp
btc
mov
shl
pusha
neg
sub
pushf
xchg
bswap
ror
xor
neg
neg
pushf
or
lea
push
neg
btc
bt
sub
pushf
jmp
movb
call
mov
clc
cmc
cmp
cmc
mov
pushf
xchg
shl
clc
btc
mov
pushf
bts
xchg
rcr
movzbw
jmp
call
mov
movb
pusha
push
lea
jmp
jmp
bsr
setne
shr
mov
shl
ror
setae
cmc
mov
cmc
push
stc
call
das
mov
ror
sub
mov
clc
push
mov
cmp
add
call
movsbw
mov
cmc
pushf
stc
add
pushf
lea
jmp
mov
lea
jnp
pushf
mov
call
add
movb
pushf
pusha
pushl
lea
jmp
cmp
stc
clc
sub
pushf
mov
pushf
lea
jmp
mov
jmp
xor
bts
ror
adc
mov
movzbl
cmc
pushl
call
call
pushf
push
call
cmc
movzbw
dec
mov
stc
stc
push
bt
sub
jmp
mov
clc
clc
sub
jbe
push
bt
push
dec
push
and
cmp
shl
sbb
push
xadd
xadd
btr
clc
push
btc
movsbl
adc
test
push
stc
pusha
stc
rcr
pushl
popl
pop
shr
movl
shld
bts
push
call
and
bt
cmp
jmp
pushf
popl
push
jmp
add
xor
ror
shrd
mov
mov
adc
rcl
mov
clc
stc
cmc
sub
jmp
neg
shl
test
mov
clc
mov
stc
pushf
mov
mov
sub
test
clc
cmc
bt
shl
pushf
pusha
mov
pushf
jmp
mov
test
cmp
add
pusha
mov
pusha
lea
jmp
pushf
repz
popl
stc
pushf
mov
pushf
clc
pushf
pusha
mov
pusha
push
mov
cmc
push
pushf
xchg
bts
mov
ror
clc
rcl
bswap
xchg
ror
rol
jmp
mov
push
pushf
jmp
cmp
stc
shl
mov
mov
pushf
jmp
jmp
jmp
bt
cmc
pushf
shl
push
mov
call
xchg
rcr
bt
push
bsr
mov
sbb
test
xchg
stc
rcr
bts
and
mov
adc
pop
xadd
mov
sbb
pushl
popl
xchg
bts
movzbw
movl
movzbl
call
push
repz
popl
jmp
pusha
push
mov
pusha
push
jmp
pop
sub
movzbw
ror
jmp
xor
stc
call
jmp
pushf
jmp
xor
stc
clc
test
cbtw
cmc
mov
cwtl
cmp
bt
pushf
lea
test
cmc
sub
jmp
push
pushf
pusha
pushf
popl
pusha
jmp
test
mov
bsf
mov
sub
rcl
ror
rol
jmp
test
pusha
pushf
mov
and
not
shl
add
pusha
mov
pushf
jmp
shl
movsbl
push
adc
sbb
pushl
movzbl
inc
call
pushf
movw
jmp
add
scas
add
lds
pop
outsb
push
add
out
add
nop
add
dec
add
stc
add
icebp
add
jnp
pop
jecxz
pop
jge
add
mov
pop
sbbb
lcall
pop
lcall
pop
push
add
sbb
pop
xchg
data16
popa
add
clc
add
iret
add
js
pop
andl
add
outsl
add
nop
add
push
add
icebp
add
loop
pop
jb
add
hlt
add
sbb
pop
jecxz
pop
pushf
inc
add
stc
add
movl
pop
xchg
sahf
add
push
add
push
add
and
pop
js
add
mov
add
popa
add
out
add
lds
pop
mov
add
movl
pop
andl
add
mov
add
mov
add
and
pop
mov
add
ljmp
outsb
cmpsb
add
call
add
mov
pop
je
add
and
pop
mov
add
ret
outsb
cmpsb
add
sub
pop
addb
pop
xchg
add
lds
pop
sbbb
cmp
pop
js
add
cmpsb
add
loop
pop
xorl
pop
jge
add
iret
add
xor
pop
icebp
add
ret
outsb
cmpsb
add
inc
add
movl
pop
jno
add
mov
add
ret
outsb
cmpsb
add
js
pop
xchg
mov
add
mov
add
mov
add
cmpsb
add
jecxz
pop
xchg
sbb
pop
pushf
inc
add
sbb
pop
xchg
add
push
add
ret
outsb
cmpsb
add
popa
add
adc
add
mov
add
push
add
ret
outsb
cmpsb
add
dec
add
popa
add
mov
add
inc
add
push
add
ret
outsb
cmpsb
add
jmp
pop
addb
pop
andl
add
out
add
ret
outsb
cmpsb
add
loop
pop
jl
add
imul
outsl
imul
mov
add
stc
add
ret
outsb
cmpsb
add
and
pop
xchg
data16
xchg
add
data16
stc
add
add
ret
outsb
cmpsb
add
testb
mov
add
imul
jp
add
popa
add
iret
add
ret
outsb
cmpsb
add
scas
add
sbb
pop
jnp
add
adc
pop
jb
add
or
pop
js
add
cmpsb
add
sub
pop
jp
add
or
pop
jp
add
push
add
movl
pop
outsb
cmpsb
add
sub
pop
adcb
pop
xchg
sub
pop
jb
add
clc
add
ret
outsb
cmpsb
add
stc
add
add
add
stc
add
push
add
stos
add
stc
add
outsl
add
and
add
adc
add
clc
add
add
add
sbb
pop
icebp
add
mov
pop
lcall
pop
jo
add
clc
add
ljmp
jo
add
mov
add
add
add
pop
add
loop
pop
mov
add
testl
pop
xchg
testb
mov
add
adc
pop
addb
pop
xchg
hlt
add
mov
pop
outsb
popa
add
add
add
add
sahf
add
and
add
nop
add
jae
pop
jp
add
pop
add
movl
pop
xorl
pop
mov
add
add
and
pop
jno
add
icebp
add
data16
iret
add
jae
pop
mov
pop
and
add
adc
add
outsl
jmp
pusha
sub
movl
pusha
call
pushf
call
pusha
inc
push
bt
pusha
rol
rcr
sub
rol
inc
and
call
push
lea
jne
bts
sar
shr
call
rcr
rdtsc
push
cmc
sub
push
movb
mov
pushl
mov
movw
pusha
pushf
mov
lea
jmp
cmc
call
cmc
cmp
shr
push
call
jmp
pushl
jmp
call
pusha
add
mov
mov
push
pushl
lea
jmp
clc
jmp
mov
movzbl
add
sub
rcr
jmp
stc
stc
add
mov
lea
jmp
push
mov
pushl
popl
push
lea
jmp
rep
movzbw
mov
dec
mov
pushf
std
pushl
popf
push
lea
jmp
add
push
pushl
call
mov
mov
pushf
call
add
pushf
pushl
movb
movw
mov
movw
pushf
lea
jmp
sbb
mov
push
call
shrd
neg
clc
dec
ror
dec
lea
cmp
bsr
pop
movzbw
sub
not
mov
mov
mov
mov
push
pushf
movl
pushf
lea
jmp
pusha
repz
popl
stc
cmc
mov
movl
bt
cmc
mov
pusha
mov
cmp
mov
jmp
call
movzbl
mov
jmp
mov
jmp
movw
pushl
pushf
popl
pushf
pusha
mov
pushl
popl
push
movw
pushl
pushf
lea
jmp
mov
movb
pushf
pushf
popl
movw
call
push
push
mov
pushf
movl
lea
jmp
mov
pushl
bt
stc
add
pushf
movw
movw
jmp
pushl
push
pushl
popl
pushl
pushf
lea
jmp
push
repz
popl
stc
jmp
mov
mov
pusha
jmp
jmp
add
pushf
pushf
mov
pushf
lea
jmp
test
sub
clc
clc
add
pushf
pushf
popl
push
pushl
popl
mov
pusha
movb
lea
jmp
lea
ror
jmp
pushl
mov
pushf
push
mov
pushl
lea
jmp
call
jmp
xor
pusha
mov
jmp
pushl
push
sub
push
jmp
repz
popl
mov
mov
pushl
clc
mov
mov
call
push
not
cmp
test
add
pushf
pushl
pushf
dec
movw
movb
cmc
jmp
pushf
popl
jmp
push
push
mov
pusha
pushf
lea
jmp
call
pushf
pusha
mov
mov
dec
xchg
adc
xchg
shl
and
bsf
jmp
aad
stc
mov
inc
dec
mov
pusha
pushf
stc
sub
stc
shr
pusha
pushl
pushl
mov
pushf
pushf
popl
call
btr
shl
or
adc
mov
shr
bts
sub
inc
not
setp
pushf
dec
neg
not
bswap
sub
sub
add
ror
clc
mov
mov
mov
add
call
call
pusha
jmp
mov
mov
mov
movb
mov
lea
jmp
call
mov
pusha
lea
jmp
bsr
movzbl
mov
and
sub
xor
neg
xor
call
push
repz
popl
cmp
test
push
pushf
call
mov
not
mov
jmp
xor
mov
clc
inc
btr
mov
stc
jmp
pushl
popl
movb
lea
jmp
mov
shl
sbb
push
xor
shl
sbb
pushl
inc
shr
bsr
push
shld
xadd
shl
mov
sub
add
sub
bt
xchg
btr
ror
rcr
shr
cmc
dec
neg
sub
mov
bsf
sub
mov
mov
push
lea
jmp
lea
jne
call
mov
push
bt
cmp
mov
clc
test
clc
test
mov
test
clc
cmp
xchg
add
xchg
stc
mov
xchg
bt
xchg
mov
inc
sbb
not
mov
mov
sar
not
sar
pushl
popl
sub
shld
movsbw
push
shld
jmp
push
pushl
push
pushl
popl
push
pushf
lea
jmp
movw
mov
pushl
movb
movw
lea
jmp
pushf
popl
call
add
jmp
stc
mov
cmc
pusha
bt
pushf
mov
cmp
bt
cmc
xchg
not
push
bts
mov
inc
movzbw
rcl
test
mov
clc
mov
rol
shl
bsf
mov
mov
adc
sub
btr
pushl
popl
test
mov
movl
sbb
mov
bsr
sub
jmp
pushf
repz
popl
test
stc
clc
pusha
mov
mov
pushl
mov
cmc
mov
movb
call
pusha
stc
call
sub
push
jmp
pushf
mov
pusha
pushf
mov
pushf
popl
movl
push
pushl
popl
pushl
pushf
lea
jmp
pusha
mov
mov
jmp
shrd
bsr
mov
sub
bswap
ror
add
movzbl
bts
neg
test
pop
call
push
pusha
pushf
mov
call
stc
bswap
mov
cmp
cmp
stc
sub
cmp
cmp
add
jmp
not
mov
pushf
pusha
mov
lea
jmp
aam
shr
shl
mov
jmp
mov
neg
cwtl
mov
rol
rcl
lahf
mov
dec
bswap
bswap
mov
bsr
movzbw
mov
pushl
pushf
pushl
popf
pushf
push
push
pushl
ret
xchg
call
push
ror
clc
sub
clc
call
stc
mov
call
movb
call
mov
push
mov
push
lea
jmp
call
test
rcl
pushf
movzbl
pusha
pushf
test
xor
bt
push
not
cmp
add
clc
push
jmp
bt
add
pusha
jmp
sub
call
pusha
repz
popl
stc
stc
call
add
pushf
mov
movw
pushf
lea
jmp
mov
lea
sub
clc
shr
and
sub
pusha
call
mov
clc
call
pushf
mov
push
movw
push
movw
lea
jmp
seta
mov
pushl
lea
jmp
setp
cltd
xchg
not
mov
push
mov
pushf
movb
movb
divl
pushl
jmp
bt
dec
rcl
shl
movzbl
lea
xor
shr
ror
mov
shl
not
bt
bsf
lea
setle
sub
and
add
add
btr
not
test
ror
stc
call
add
call
movl
call
mov
pushf
mov
jmp
pushf
mov
mov
pushf
pushl
pushf
lea
jmp
lea
pushl
movw
lea
jmp
mov
pushf
pushf
clc
mov
clc
pusha
mov
cmc
stc
sbb
movsbw
mov
rcr
shrd
shr
xchg
jmp
pusha
ror
bt
bt
pushl
test
sub
call
lea
pusha
pusha
movb
lea
jmp
shl
notl
pusha
sbb
mov
cmp
sub
bt
pushl
and
movb
pushf
popl
jmp
movsbw
pushf
setb
pusha
mov
movb
pushf
jmp
sub
sub
mov
mov
pushf
lea
jmp
pushf
pushl
popl
mov
mov
lea
jmp
push
jmp
mov
sbb
test
movsbw
rcr
sub
btr
ror
rcl
rcl
cmp
adc
neg
xor
ror
lea
call
push
pusha
lea
jne
shl
mov
shl
rcr
xorb
push
call
pushf
pushf
jmp
or
movsbw
shl
shld
push
movsbw
cmc
pushl
dec
push
adc
mov
bsr
pushf
bswap
bsr
sub
cmc
ror
adc
jmp
cmc
cmp
and
cmc
jmp
mov
ror
sar
pushf
mov
sub
rcl
bts
ror
and
pop
neg
bswap
mov
jmp
pusha
stc
not
pushf
clc
lea
bt
ror
call
mov
stc
sub
cmp
pushf
mov
call
sub
jge
clc
xor
call
mov
pusha
pushf
lea
jmp
pushf
btr
xor
neg
pusha
lea
mov
sub
cmp
rol
shl
mov
setno
push
sar
shl
mov
xadd
test
jmp
mov
call
mov
jmp
lea
mov
lea
movzbw
lea
pusha
xchg
bswap
bswap
pop
call
mov
pushf
mov
lea
jmp
pushl
popl
jmp
rol
btc
dec
mov
pusha
xor
sbb
neg
add
pushf
mov
call
daa
inc
mov
sar
mov
cmc
clc
not
jmp
pusha
sub
call
pushl
jmp
pushl
pushf
popl
call
jmp
lea
jb
pushf
mov
jmp
mov
not
add
sub
cmc
pushf
cmc
movsbw
ror
btc
not
sub
neg
btc
lea
adc
shrd
sub
lea
mov
movsbw
mov
pushf
pushf
pushl
push
lea
jmp
sub
lea
mov
shl
not
mov
cmp
add
pushf
jmp
xchg
mov
shrd
sar
shr
shr
mov
sub
js
bts
pusha
mov
and
adc
sar
mov
pushl
popl
push
rol
bt
inc
movl
call
sub
jmp
btc
xchg
neg
rol
rol
and
movzbl
lea
pop
pushf
cmp
bsf
sub
bswap
jmp
pushf
xchg
cmp
call
ror
push
aas
mov
btc
cmp
mov
cmc
cmp
jmp
call
pusha
test
pusha
cmc
mov
cmc
clc
mov
stc
pushf
cmc
mov
rol
adc
xchg
sar
xadd
mov
inc
stc
bsf
pop
mov
bswap
btc
xadd
mov
rol
or
sar
btc
pushl
popl
shl
shrd
movl
call
call
pushl
xchg
pop
bsf
and
mov
add
sbb
xchg
ror
sbb
ror
test
mov
bsr
bsf
pushf
shr
mov
bts
pushl
popl
test
movl
rcr
sar
rcl
mov
call
push
pushl
call
movb
pushf
mov
jmp
aad
lahf
shld
mov
jl
bsf
shrd
cwtl
pop
inc
clc
pop
push
shl
clc
setle
mov
mov
aad
inc
mov
pushf
inc
sub
test
mov
inc
add
xchg
mov
std
sar
sub
js
pop
shr
xchg
pop
xor
stc
movzbw
pop
and
shl
pop
cmc
push
std
pushf
pushl
popf
pushf
push
movb
mov
pushl
ret
bt
bt
cmp
mov
push
jmp
cmp
call
movsbw
mov
push
mov
pushf
lea
jmp
mov
cmc
bsf
btr
shl
mov
bswap
rcl
or
pushl
popl
btc
movl
pop
or
mov
shrd
sub
clc
sub
bswap
ror
adc
rcr
bt
neg
sbb
lea
btr
shl
sub
not
not
jmp
movb
mov
jmp
pushf
push
pusha
repz
popl
call
or
lea
call
pop
sub
pushf
btc
bt
ror
shr
sub
btr
shr
neg
bts
lea
movzbw
or
not
sub
lea
not
mov
pushf
lea
jmp
pushf
rol
movzbl
clc
stc
xor
cmp
stc
pushf
stc
add
bt
xor
call
inc
bsf
mov
jmp
call
mov
neg
clc
mov
push
jmp
stc
test
push
call
test
setns
jmp
bsr
shl
mov
shl
sar
call
dec
cmp
add
movzbw
pusha
bswap
pop
movzbl
dec
call
not
stc
call
pushl
popl
movb
movl
movl
lea
jmp
mov
pusha
mov
push
pushf
lea
jmp
sub
lea
pop
ror
ror
neg
shr
neg
mov
bts
bswap
call
lea
shr
shl
xchg
clc
movw
bsr
mov
xadd
mov
or
movzbw
shl
shr
mov
shl
xchg
movsbw
or
pushl
popl
sar
shl
movl
cmc
not
shl
mov
movw
sub
rol
clc
ror
shld
movzbw
lea
rcr
neg
sub
lea
not
sbb
sub
push
lea
pusha
pushf
lea
jmp
mov
stc
sar
push
add
stc
push
shr
sbb
push
movsbw
push
not
movsbw
shrd
pushl
xadd
clc
push
movsbw
mov
mov
clc
test
call
cmc
call
pushf
mov
push
lea
jmp
call
jl
test
push
cmc
jmp
add
lea
not
bt
call
stc
mov
cmp
mov
pusha
push
movb
lea
ja
neg
das
stc
setp
mov
shrd
push
lea
test
setge
sub
daa
test
movzbw
add
lea
adc
adc
btc
push
and
bsf
or
ror
sub
push
pushf
mov
call
push
mov
jmp
push
repz
popl
push
mov
call
pushf
jmp
btr
inc
cmc
mov
jmp
push
add
pushf
mov
pushf
pushf
mov
movb
pushl
ret
mov
pushf
pusha
test
bt
xor
pushf
not
mov
add
test
not
test
xor
cmc
sub
bt
sub
push
pushf
jmp
pop
push
shr
mov
xadd
clc
mov
sub
cmc
push
bswap
bswap
ror
call
pushf
mov
jmp
pushf
sub
push
push
pushl
jmp
stc
mov
cmp
movl
test
pusha
mov
neg
movw
mov
bt
cmc
sar
xchg
pushf
cmc
mov
inc
stc
xchg
mov
xchg
pushl
popl
shl
movl
not
shl
pop
mov
dec
sub
pushf
btr
btc
ror
xor
sub
neg
or
lea
ror
bts
cmc
sub
jmp
bt
rcl
add
neg
mov
test
add
push
movb
pusha
movw
lea
jmp
das
call
movw
lea
push
pushf
pushf
pushf
lea
jmp
pushf
pusha
repz
popl
jmp
rol
jmp
push
call
test
mov
jmp
pushf
and
movsbw
mov
cmp
stc
jmp
mov
lea
btc
mov
adc
sub
jno
pushf
sbb
mov
cmp
btc
shrd
and
pushl
rol
bswap
btr
cmp
push
bts
cmc
rol
mov
adc
inc
sub
sub
rcr
ror
btc
neg
sar
neg
shld
mov
btr
sub
pushf
lea
pushf
pusha
push
lea
jmp
add
movb
cmp
pushl
popf
pushf
pusha
push
lea
jmp
pusha
repz
popl
cmc
cmc
test
cmp
mov
pusha
stc
mov
mov
mov
cmp
jmp
cwtl
aad
mov
cmc
pushf
add
call
movw
lea
jne
rcr
mov
cmc
call
pusha
pushl
popf
push
mov
pushf
mov
pushl
ret
movb
pushf
mov
pushf
push
lea
jmp
pushf
popl
pushf
call
mov
push
mov
pusha
call
mov
push
pusha
pushl
ret
mov
movb
movw
lea
jmp
cmc
pusha
jmp
rol
neg
mov
and
mov
stc
stc
jo
sub
stc
stc
add
jmp
mov
shrd
pop
add
not
inc
pusha
rol
jmp
btc
neg
rcl
neg
lea
inc
sub
movsbw
bswap
pushf
movsbw
lea
push
mov
lea
jmp
mov
jmp
jmp
test
clc
add
push
call
jmp
inc
push
pushf
pusha
decl
pushf
movb
jmp
mov
pushf
push
pushf
movb
lea
jmp
call
add
jmp
pop
mov
bswap
mov
btr
pushl
popl
mov
movl
pusha
mov
not
xor
sub
bswap
bswap
movsbw
ror
test
btr
neg
rcl
lea
rcl
movzbl
sub
movzbw
bswap
mov
pushf
mov
pushf
pusha
lea
jmp
pusha
pushl
popl
pushf
movl
pushf
push
lea
jmp
mov
cmc
cmp
bt
bt
mov
cmp
mov
jmp
call
sub
shld
shld
mov
shl
mov
pusha
test
stc
stc
sub
bt
jmp
mov
pushf
lea
jmp
pusha
mov
pushf
pushf
push
lea
jmp
jmp
not
pusha
ror
stc
call
call
pushf
popl
movzbw
call
mov
call
call
jmp
rol
btr
pusha
mov
push
setbe
mov
pushf
bt
movb
clc
add
pushf
mov
push
lea
jmp
pushl
popl
movb
lea
jmp
mov
push
mov
mov
lea
jmp
movb
pushl
popl
pusha
pushf
mov
lea
jmp
pusha
pusha
repz
popl
pushf
cmc
mov
pushf
mov
jmp
pushl
mov
push
mov
pushl
lea
jmp
test
mov
bt
jmp
lea
jne
call
jmp
mov
mov
pusha
jmp
pushf
pushf
cwtl
jmp
sub
jmp
rcl
pushf
mov
inc
seta
pushf
sub
mov
pushf
pusha
bt
stc
sub
call
jmp
pushf
seta
seto
mov
movzbl
lea
lahf
mov
pusha
lea
jns
pusha
pusha
lea
cpuid
test
clc
test
sub
test
pushf
clc
stc
cmpl
call
stc
xor
clc
jmp
mov
pusha
mov
mov
push
xchg
bsf
and
bsf
btr
mov
pushf
bsf
sbb
call
and
movb
cmp
mov
jmp
call
push
pusha
pushf
mov
pushf
lea
jne
call
pusha
lea
cpuid
cmp
pusha
bt
sub
bt
clc
pushl
cmpl
call
add
add
xor
stc
pushf
sub
bt
movb
pushl
sub
jmp
jp
pushf
push
push
pusha
mov
pushl
popl
pushf
lea
jmp
xor
call
jmp
mov
jmp
adc
rol
sub
mov
pushf
movl
lea
mov
mov
movw
pushf
lea
jmp
lea
jno
movzbw
mov
pusha
push
lea
jmp
movw
mov
mov
push
pushf
jmp
bts
movl
shl
mov
adc
sub
bt
cmc
rol
rcl
ror
shrd
xor
shl
neg
xadd
sbb
movsbl
mov
sub
shrd
sbb
bt
sub
push
pushl
jmp
sub
call
jmp
pushl
popl
movb
lea
jmp
not
test
clc
call
push
mov
call
repz
popl
call
inc
sbb
stc
mov
adc
pusha
shr
mov
call
call
mov
pushl
movb
lea
jmp
pushf
movb
mov
jmp
shl
mov
btc
shr
push
add
mov
shr
neg
seta
mov
mov
clc
add
bt
shld
jmp
call
mov
mov
clc
bt
or
jmp
jmp
aas
bsf
mov
test
pusha
pusha
sub
mov
lea
jne
mov
pusha
movb
pusha
lea
jmp
push
pushf
pusha
mov
pushf
mov
lea
jmp
bswap
mov
test
add
pusha
pushl
lea
jmp
lea
push
pusha
lea
jmp
clc
sub
movl
mov
call
cmp
add
mov
lea
jmp
push
movb
xchg
rcr
bswap
shrd
mov
pop
dec
xchg
btr
shrd
mov
bt
neg
bts
clc
mov
rcl
xor
stc
pushl
popl
btc
bt
dec
clc
movl
movsbl
mov
cmp
jmp
bsf
mov
cmc
cld
pushl
popf
pushl
pusha
push
lea
jmp
pusha
jmp
inc
sub
cmc
push
mov
clc
xadd
or
pop
mov
not
push
mov
ror
rcl
mov
call
pushl
jmp
cmc
ror
rol
and
sbb
neg
stc
and
btc
dec
mov
rol
xor
sub
pushf
mov
lea
movb
lea
jmp
pushl
popl
movb
lea
jmp
movb
push
mov
push
mov
pushf
pushf
lea
jmp
xorb
lea
call
jmp
inc
btc
mov
pusha
push
stc
sub
jmp
mov
call
adc
neg
shld
mov
clc
call
lea
jge
mov
push
lea
jmp
call
repz
popl
clc
mov
test
jle
push
cmp
bt
push
stc
stc
push
rol
mov
push
movzbl
rol
test
xchg
push
movsbw
btr
xor
movzbw
push
or
shl
push
shr
clc
pushl
shrd
btr
push
rol
xchg
mov
ror
bsr
bswap
and
sub
push
pusha
ror
sbb
shrd
sub
bswap
neg
movsbl
ror
stc
lea
btc
not
not
sub
movsbw
movsbw
mov
push
pushf
lea
jmp
call
mov
pushl
pushf
lea
jmp
push
repz
popl
stc
mov
pushf
mov
call
neg
pushf
movsbw
bsf
mov
push
bt
xor
test
cmc
mov
neg
push
pushf
ror
pushf
stc
pushl
sub
clc
clc
jmp
xchg
call
pushf
movzbw
pushf
mov
push
pushf
pushf
movw
lea
call
jmp
mov
push
lea
jmp
lea
lea
pushf
pushf
pushf
lea
jmp
adc
pusha
mov
shl
mov
test
cmp
stc
not
cmp
cmp
clc
not
bt
pushf
push
test
sub
bt
and
call
mov
pushf
lea
jmp
mov
stc
bt
add
pusha
pusha
clc
movb
shrd
push
pushf
mov
call
mov
pushl
pusha
lea
jmp
sub
pushl
call
pusha
pusha
pushf
lea
jne
sbb
shld
sub
rcr
xorb
lea
lea
pop
pushf
lea
jmp
mov
pusha
lea
jmp
pushf
mov
bswap
shr
bsf
mov
bsr
mov
mov
bts
mov
rol
sar
mov
inc
inc
lea
bts
push
bt
bts
not
not
push
shl
push
cmc
push
not
bswap
pushl
cmc
clc
call
pushf
pushf
mov
stc
push
stc
call
not
sub
or
mov
shr
sar
mov
test
stc
test
cmc
sub
stc
cmp
shr
pusha
pusha
mov
jmp
jmp
mov
call
jmp
call
jmp
movb
lea
jne
stc
mov
jmp
movb
lea
je
cmp
pusha
sub
cmp
cmp
bt
jmp
mov
shl
inc
mov
mov
rcl
and
xor
dec
pushl
popl
movzbw
rcl
rcl
or
movl
push
bswap
clc
mov
stc
stc
shl
sub
movsbw
ror
ror
cmc
ror
btc
neg
inc
shr
btr
xadd
lea
adc
jmp
push
push
push
jmp
btr
mov
stc
stc
call
shld
bswap
daa
pushf
mov
pushf
sub
mov
push
ror
add
xadd
mov
clc
mov
or
dec
lea
mov
bsf
lea
call
cmc
test
xor
push
sub
call
pushf
push
pushf
repz
popl
bt
pusha
jmp
shr
mov
clc
add
pusha
lea
jmp
jmp
inc
btc
rcl
stc
mov
cmp
clc
bt
bswap
call
movl
pushl
popl
movb
movw
lea
jmp
mov
stc
stc
cmc
xchg
cmp
shr
xchg
shl
ror
or
btr
mov
btr
shr
mov
pop
mov
sar
xadd
clc
rol
pushl
popl
cmc
sar
movl
cmp
mov
pusha
bsf
sub
movzbw
rol
clc
stc
ror
bt
clc
sar
neg
adc
lea
btr
pushf
mov
sub
push
not
push
call
push
pushf
mov
movb
push
pushf
movb
lea
jmp
pusha
pushf
popl
pushf
call
