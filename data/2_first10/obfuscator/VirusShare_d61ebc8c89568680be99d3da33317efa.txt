push
push
lea
call
jmp
and
std
fcomi
fcomip
push
insb
jno
sbb
into
shll
mov
insl
push
shrb
stos
lods
ljmp
rcll
xchg
aaa
insb
mov
mov
mov
adcb
xor
sahf
je
loop
xor
mov
fisubrl
jb
shrl
addr16
push
pop
sub
inc
ss
pop
jae
arpl
jg
aaa
fwait
add
arpl
cmp
add
push
gs
jb
popa
je
dec
gs
js
add
mov
inc
rcrl
mov
or
mov
push
loope
mov
test
fnstenv
or
mov
xchg
rorl
mov
loope
orb
dec
loope
testb
and
call
adc
scas
push
mov
ss
test
cmp
aaa
xor
push
pop
or
pop
test
loope
mov
data16
ljmp
loop
push
xchg
scas
inc
pop
outsl
lea
shrb
sbb
shrb
and
mov
notb
iret
pop
pop
cs
rolb
push
call
loop
sar
scas
add
pushl
test
sub
in
jbe
push
fdivs
add
mov
outsb
ret
push
movsb
or
cmp
xchg
inc
addr16
mov
add
insb
xor
xlat
push
mov
cmpsl
sti
outsl
dec
fistl
mov
in
inc
mov
shr
shr
pop
mov
jmp
adc
cld
mov
imul
fcoml
mov
sbb
or
or
dec
lods
sub
adc
xlat
pop
xchg
and
mov
sbb
pop
add
pushf
es
push
xchg
lock
stos
add
lea
push
pop
mov
mov
aam
cmp
cltd
cmc
pushf
into
cmp
inc
mov
cmpsb
mov
int
mov
in
popa
in
push
xchg
lods
adc
add
popa
imul
jmp
mov
jb
pop
loope
lahf
or
inc
pushf
adc
divb
mov
fldenv
jl
mov
clc
test
push
les
mov
xor
insb
cmpb
sbb
sbb
in
lock
incb
daa
cmp
add
jmp
push
mov
lret
pop
lret
add
and
dec
scas
add
push
lret
inc
sahf
push
xchg
lods
mov
ret
pop
shl
pusha
mov
pusha
push
test
bt
and
mov
pushf
add
push
pushf
movw
lea
jmp
rolb
dec
dec
lret
push
loopne
xor
mov
jmp
xor
dec
movsl
push
int3
lea
xor
push
jbe
pop
mov
jne
popf
out
inc
push
out
in
add
or
repnz
jns
out
das
mov
pop
les
xor
ss
fs
ret
repnz
ljmp
cmp
xor
fisttpl
and
shr
pop
ficoms
mov
pop
xchg
inc
in
into
sbb
roll
mov
dec
fiadds
jge
jns
xor
or
xchg
lods
mov
fldt
xchg
or
movsb
pop
adc
pushw
jb
call
lds
cwtl
popl
sub
js
xchg
cmp
mov
xchg
sbb
ljmp
shll
scas
fdivrs
jmp
fwait
mov
pop
aam
and
call
mov
aaa
mov
rorb
pop
filds
lods
add
xor
inc
adc
jmp
test
xlat
add
mov
out
mov
aas
push
adc
mov
test
aas
test
data16
jmp
cmp
mov
and
dec
xor
imul
mov
aas
bound
call
jnp
cs
orb
scas
movsb
icebp
pop
mov
push
cmp
jb
or
pusha
xorb
or
gs
sub
std
gs
jne
pop
stos
xor
mov
enter
xchg
stos
je
popf
scas
es
push
xchg
or
inc
rcll
mov
mov
dec
mov
data16
push
cmp
dec
add
cmc
lret
outsl
mov
leave
jmp
pop
sbb
or
fs
mov
mov
arpl
mov
mov
pop
nop
pusha
test
ret
jae
stc
popl
cwtl
fmuls
pushf
clc
pop
int3
inc
enter
mov
push
xchg
stos
add
xor
or
xor
add
sub
add
cltd
adc
xchg
sti
js
cmp
dec
shll
sbb
int3
jae
sub
ja
popw
cmp
push
sbb
loop
lret
cmp
inc
cmpsb
repz
dec
mov
push
nop
sub
and
idiv
pop
in
inc
in
sbb
adc
xor
aam
scas
push
jae
jp
scas
int
ret
cltd
inc
mov
xchg
out
pop
stos
mov
test
dec
pushf
ds
xchg
mov
mov
push
push
adc
repnz
mov
sbb
cmpsb
push
xchg
stos
xor
popa
sbb
js
aad
inc
fwait
and
adc
cld
insl
cli
pop
mov
shrl
movsb
push
jbe
inc
out
push
lcall
cmp
rorl
or
inc
das
mov
sbb
mov
jb
call
fneni(8087
inc
jmp
and
add
xor
and
inc
shrb
mov
fsts
jo
and
cwtl
mov
jns
ljmp
addb
icebp
popa
shrl
mov
rcrb
and
sub
dec
push
iret
aas
movl
pop
ja
aas
push
xchg
test
dec
lahf
adc
int
xor
clc
mov
sbb
std
adc
and
adc
push
mov
mov
jae
gs
jg
popa
lret
sub
lret
sbb
push
popf
mov
dec
adcb
dec
mov
xchg
iret
cmp
xorl
rolb
jno
xchg
insb
sbb
mov
cmc
inc
inc
xchg
adc
xchg
outsl
jmp
mov
pop
push
xchg
test
cmp
enter
add
inc
pushl
inc
not
pushf
jmp
push
call
dec
sbbl
jb
imul
insb
add
lret
fisttps
add
lods
ljmp
movsbw
movsbw
mov
movzbw
not
bswap
call
push
or
in
mov
mov
mov
xchg
outsb
sahf
cli
xor
pop
nop
pop
adc
aad
or
mov
mov
cmc
cmp
add
iret
and
es
or
jmp
in
cmp
push
push
das
mov
repz
imul
jnp
xlat
xchg
dec
add
xchg
pushf
add
les
cmp
pushf
insb
cwtl
clc
and
out
shrb
push
xor
mov
pop
cmpsl
packsswb
push
out
shrl
jmp
stos
push
xchg
cmpsl
xor
pop
and
cmp
pusha
bt
or
jmp
sbb
or
jle
inc
pop
jmp
fisttpll
sbb
sub
mov
arpl
daa
and
mov
jnp
and
lods
lods
in
ja
frstor
sarb
pusha
sarl
rcrl
cmpsb
lret
sbb
cmc
cwtl
mov
stc
push
mov
push
xor
inc
cmp
fs
xor
adc
cmp
add
rolb
add
lcall
mov
mov
mov
xchg
jne
fnstenv
scas
and
sub
adc
repnz
in
into
aaa
cwtl
cmc
imul
fisttpll
loopne
mov
lds
imul
ds
lahf
jnp
xchg
test
xor
mov
inc
sbb
icebp
pop
add
pop
mov
dec
loopne
cmc
xchg
test
loop
ret
cld
jns
dec
incl
mov
add
adc
test
push
pusha
sub
sub
mov
lret
sub
out
dec
scas
push
xchg
cmpsb
rcl
push
call
data16
mov
jb
clc
pusha
call
xlat
mov
insl
jmp
add
je
roll
gs
push
mov
xor
call
xchg
pop
fldt
int
mov
fbld
enter
xchg
in
dec
leave
jo
ja
lret
xor
ss
pop
into
sub
jl
cmp
or
sub
in
adc
inc
jmp
xchg
gs
repz
push
xor
out
add
fcoml
popf
gs
out
lahf
shrl
ljmp
mov
mov
addr16
pop
mov
or
xchg
movsl
inc
push
insb
push
call
inc
push
call
repz
jne
xchg
and
xchg
cmp
fsubs
pop
mov
mov
es
adc
xlat
das
out
jns
push
push
mov
and
gs
aaa
addr16
xchg
ljmp
insb
inc
xchg
lret
shlb
mov
push
lea
ja
dec
lahf
pop
adc
inc
push
add
add
mov
pop
xor
lods
cmp
push
mov
cmp
xor
inc
shrl
cltd
and
stos
mov
and
ja
not
jmp
cmc
mov
movzwl
movzbw
mov
cmp
add
test
clc
bt
mov
mov
test
test
pushl
lea
je
pushf
pushf
add
stc
cmc
push
bt
cmp
call
imul
adc
pushf
xchg
sub
mov
dec
int3
xor
out
inc
test
or
pop
sbb
loope
dec
xor
shlb
sbb
xchg
rclb
test
les
adc
mov
push
fneni(8087
cmp
leave
xlat
mov
jmp
dec
es
mov
inc
sar
jmp
sarb
mov
shrl
sub
fdivrl
pushf
or
les
mov
popl
bt
jmp
inc
mov
mov
pop
fcompl
push
lods
xor
sub
stos
pushl
bound
mov
push
leave
movsl
fisttpll
in
xor
pop
xchg
dec
mov
jle
dec
scas
push
out
mov
aas
popa
icebp
jge
pop
int3
sbb
mov
add
jbe
xchg
inc
insb
push
sti
push
and
es
pop
and
idiv
fdivr
les
or
or
or
xor
out
dec
lret
ljmp
sub
in
mov
aad
inc
lret
sub
out
in
cli
addr16
push
movb
loope
mov
add
shrb
push
push
xchg
lock
push
aad
leave
jbe
popf
pop
fmuls
loopne
popa
add
fstps
push
mov
shl
insl
aad
sub
test
xchg
cltd
aad
jl
cmp
decb
aad
rolb
sbb
sti
pop
lds
mov
outsb
ljmp
adc
stos
or
sbb
repnz
sub
pop
fists
sub
sbb
xor
addb
or
scas
ljmp
lock
or
idivb
push
mov
dec
add
xorb
mov
fstps
sbb
and
loope
ret
sbb
jp
push
xchg
mov
fbld
cmpsb
lcall
clc
fistpl
mov
xchg
mov
cmpsb
add
mov
jae
mov
int
cmpsb
lcall
aam
push
mov
stc
push
jo
stc
ss
mov
movsl
sbb
inc
leave
dec
cmpsl
adc
mov
xchg
jae
das
fstpl
leave
xor
pop
ret
push
push
xchg
mov
rclb
data16
enter
dec
lods
sub
mov
sub
push
mov
jl
mov
cmpsb
dec
movsl
aad
insl
insl
aam
jecxz
enter
jbe
fisttpl
push
mov
xor
mov
aam
dec
into
push
repnz
std
jb
sbb
sub
outsb
test
mov
mov
iret
cmp
sub
push
xchg
mov
push
leave
es
subb
mov
mov
scas
idivb
cmp
dec
aam
push
popf
and
adc
sub
mov
das
add
lcall
and
mov
mov
stc
leave
fildll
imul
jmp
or
cmp
or
and
jno
in
dec
dec
ret
pop
mov
dec
lods
and
shll
mov
cmpb
lcall
mov
lcall
mov
das
mov
ja
mov
mov
adc
push
push
mov
jb
inc
jno
adc
and
cmpsb
push
insb
mov
in
dec
mov
or
addr16
outsb
mov
ja
into
pop
pop
orb
mov
mov
mov
mov
fwait
pop
test
and
dec
int
mov
nop
or
xor
mov
out
setbe
inc
rolb
repz
scas
or
ljmp
inc
mov
push
xchg
lahf
adc
push
call
push
pop
out
in
cmp
sbb
jmp
sbb
jo
sahf
fcmovnb
mov
sahf
add
push
push
mov
mov
sub
leave
dec
sti
adc
lret
orb
mov
pop
jl
push
stos
or
jp
xorb
in
dec
outsl
inc
mov
jns
arpl
xor
sahf
dec
lret
cld
mov
pop
negl
cmpsb
add
loop
sub
push
jecxz
jmp
mov
mov
push
xchg
mov
gs
int
mov
xchg
out
insb
loope
mov
mov
xchg
sbb
in
mov
cs
pop
sbb
mov
xlat
daa
int3
cwtl
dec
int3
mov
jl
xor
fs
icebp
mov
loop
mov
pop
paddq
sti
mov
mov
mov
jmp
movsl
xor
or
inc
mov
test
inc
cmpsl
aaa
mov
mov
ret
dec
mov
push
xchg
sahf
out
add
push
push
xor
xor
fs
insb
add
aas
rorb
ficoml
pop
loope
jo
jne
addr16
pop
pop
jmp
mov
push
rclb
mov
ss
sbb
js
in
aam
mov
xchg
pop
pop
cmpsl
push
loop
mov
ljmp
jge
inc
cmpsb
ficomps
mov
stos
loop
lahf
out
mov
push
out
cli
xor
add
cmpsb
sbb
mov
aas
nop
push
call
sub
call
mov
test
fwait
or
shrb
xchg
sbb
cmp
sub
pop
shrl
adc
cld
push
iret
daa
ret
sub
in
mov
adcl
mov
mov
push
mov
adc
lcall
sub
nop
aas
pusha
lea
call
push
pushf
pushf
adc
pushf
jmp
push
call
jecxz
mov
shll
mov
cltd
add
sbb
fmull
xorl
mov
mov
int
cwtl
pop
mov
xchg
push
fwait
adc
repnz
fbld
xor
mov
push
movsb
mov
inc
ss
outsl
push
jb
les
and
out
add
fdivs
push
xchg
loop
test
and
xor
cmc
cli
dec
mov
xchg
sbb
rcrb
cwtl
sub
xchg
clc
call
push
lea
jns
push
mov
pusha
pusha
lea
jmp
mov
inc
lea
pushf
mov
mov
lea
call
call
jmp
dec
xor
loope
subb
sarl
and
mulb
xchg
lret
lods
in
pop
cli
or
pop
cmp
dec
ror
mov
lds
outsl
das
mov
adc
xchg
jb
adc
ret
lods
arpl
ds
jmp
mov
add
mov
mov
jl
xlat
mov
test
imul
jg
and
ss
jecxz
out
jae
aas
xchg
repz
mov
scas
push
xchg
popf
cmp
pop
rcrl
push
fs
je
adc
mov
add
fldcw
lahf
pop
imul
xchg
pop
xchg
test
sbb
decl
sub
dec
add
mov
cmp
add
pop
mov
lcall
and
add
dec
sub
and
divl
jecxz
sbb
ss
push
inc
scas
dec
dec
sub
insb
aam
cwtl
push
sub
mov
mov
lock
les
aad
or
adc
adc
repnz
jg
xchg
mov
test
scas
aaa
mov
sahf
das
nop
cmc
retw
dec
rclb
fnsave
cld
push
iret
ja
js
fisttpl
arpl
add
clc
sarl
push
pop
bound
dec
xchg
adc
lahf
cmp
add
das
addr16
call
mov
shlb
movsb
mov
movsb
hlt
movsl
sub
jmp
sbb
idivl
add
mov
or
pop
sbb
or
repz
adc
not
mov
jmp
mov
call
jae
cmc
xor
call
mov
imul
fsubrl
pop
enter
dec
fucomip
adc
cld
mov
cmp
xchg
mov
xchg
mov
jmp
sahf
jo
daa
lcall
in
les
clc
push
mov
mov
dec
lret
add
inc
lea
add
in
rcr
push
push
xchg
sub
xchg
fists
mov
and
xor
mov
jmp
mov
mov
in
inc
les
mov
cmpsl
leave
push
mov
xor
icebp
lret
mov
ja
sub
pop
ret
inc
leave
sbb
jbe
movsb
dec
pop
jmp
and
mov
test
inc
stos
stos
dec
mov
aam
jecxz
jns
push
jo
pop
fimuls
outsl
adc
jge
jmp
lret
das
scas
jcxz
jne
sti
mov
inc
mov
fs
push
enter
mov
xor
push
adc
movb
pushl
mov
pushf
lea
jmp
into
inc
mov
jnp
mov
int
cmpsl
and
out
movsb
adc
fstl
or
dec
fldl
loopne
xchg
out
xor
es
push
addr16
shlb
hlt
test
sbb
lahf
pop
mov
imul
cmc
pop
xchg
cmp
jnp
imul
lret
stos
pop
lods
fnstsw
mov
mov
dec
mov
int
mov
pop
jmp
pop
shrl
xchg
lcall
ja
call
scas
sub
mov
or
jp
adc
mov
setb
sub
lea
pop
setb
push
pop
pushf
mov
call
call
push
call
mov
xchg
or
dec
popa
adc
xchg
mov
or
mov
add
adc
add
fstpl
icebp
mov
pop
shrl
mov
out
ja
insl
jb
mov
inc
ss
xor
mov
jp
mov
addr16
pop
mov
jbe
lds
jmp
shlb
fwait
call
pop
nop
jns
addr16
stc
push
add
fimuls
xchg
lret
dec
subl
gs
and
mov
in
add
mov
out
inc
push
xchg
cltd
pusha
jae
jne
push
mov
sub
jo
push
cmp
add
mov
dec
inc
pusha
jbe
inc
jmp
inc
sbb
loopne
rorb
outsl
pop
test
int
xchg
nop
out
imul
out
int3
and
popa
leave
add
data16
lcall
lods
xor
out
or
sub
pop
lock
sbb
incl
cmp
xchg
push
xchg
fs
add
addl
fdivl
ficompl
dec
std
adc
mov
insb
loopne
mov
call
xlat
pop
rolb
pop
lea
sub
mov
test
out
call
arpl
mov
popa
lds
add
and
rolb
add
test
push
out
mov
dec
iret
ret
jl
popf
loopne
dec
movsb
xor
xor
xchg
cmp
xchg
hlt
or
dec
xor
incl
jo
xchg
push
jp
push
sub
cs
lret
test
out
xadd
push
xlat
inc
jg
dec
dec
js
and
aam
aam
mov
xchg
cwtl
bound
pop
mov
xchg
sbb
pop
or
repz
add
push
enter
outsl
jecxz
mov
dec
enter
mov
pop
or
add
sbb
cmp
rorb
jo
or
mov
imul
call
cmc
cli
push
mov
ss
cmp
rol
xorb
mov
xchg
cld
outsb
call
into
movb
sahf
push
adc
xchg
xchg
out
adc
mov
sbb
mov
adc
scas
add
adc
imulb
dec
lret
in
lcall
sbb
rcl
repnz
inc
iret
add
xchg
clc
push
mov
dec
or
sub
outsl
leave
inc
sbb
fmuls
outsl
xchg
sti
push
push
lea
stos
or
jmp
xchg
pusha
enter
orb
imul
lods
scas
xor
mov
mov
xchg
xchg
inc
push
movsl
adc
std
lret
mov
pop
int3
jae
xchg
imul
scas
xor
aas
je
sbb
adc
dec
lds
lahf
sub
sub
pop
push
sbb
sarb
test
cmp
fdivs
cwtl
sbb
xchg
lret
lahf
rorl
cltd
sub
test
daa
pop
ja
xchg
push
xchg
xchg
and
cmp
clc
test
jmp
push
lea
ja
pushf
lea
jb
test
cmp
cmpb
pusha
jmp
es
cli
push
xlat
ret
adc
adc
popa
ficoms
cmp
sub
pusha
cmpsl
add
lcall
push
xor
fdivrs
mov
jle
insb
fistps
leave
xor
pop
cli
lods
push
inc
lock
repz
outsb
jp
sbb
xchg
cmp
dec
std
out
repz
push
xor
fdivs
ss
dec
stc
sbb
add
nop
inc
lock
mov
shlb
outsb
pop
out
xchg
and
clc
dec
mov
push
xchg
xchg
adcb
cmp
bt
mov
clc
call
mov
ficomps
out
ret
xchg
mov
sahf
sub
mov
fadd
cmp
cmpsb
cs
dec
les
mov
lret
and
xchg
leave
loope
cmpsb
push
or
mov
loope
stos
pop
jno
stc
decb
dec
dec
push
fdivrs
arpl
xchg
xchg
sti
mov
adc
jg
and
mov
pop
in
in
int
sub
sahf
add
sub
out
pop
into
push
xchg
xchg
stos
mov
or
pusha
dec
adc
inc
shrb
lock
fwait
insl
rcll
mov
push
ds
fnstcw
xchg
call
push
mov
cwtl
sbb
pusha
nop
sbb
in
add
jl
fwait
repnz
jecxz
push
mov
jmp
dec
mov
mov
cmc
fwait
negb
dec
call
sub
xchg
sub
pop
mov
insb
cmp
daa
dec
mov
pop
jnp
inc
mov
mov
movsb
adc
and
ret
push
fistpll
ret
and
xchg
add
call
adc
mov
ret
icebp
dec
shll
test
int3
sub
pop
stos
cmp
push
sahf
mov
jns
call
cmp
bound
lcall
jmp
sub
pusha
cmp
pusha
ljmp
and
ds
adc
imul
add
in
test
pop
lods
cmp
cmp
mov
push
xchg
xchg
lea
fs
jb
push
stc
clc
bt
cmp
jmp
push
call
cmpsl
lea
jg
pusha
stos
pushl
pushf
movl
mov
lea
jmp
lea
jne
pusha
pusha
call
arpl
fs
xor
cs
insb
add
add
add
lret
and
fs
ret
push
call
jns
movsl
rcll
adc
add
inc
gs
imul
bswap
sub
jp
xchg
test
sahf
mov
movsl
cmp
sahf
pop
icebp
inc
iret
aam
or
int3
sahf
dec
cmp
push
outsl
out
daa
push
mov
cmp
mov
sub
lret
pop
sbb
mov
xchg
sbb
jge
cmp
adc
sti
sbb
addr16
dec
fs
movsl
push
js
adc
repnz
jl
sahf
scas
pop
cmp
mov
aaa
mov
arpl
arpl
pop
jecxz
iret
inc
cmpsl
push
xchg
xchg
adcl
or
pop
adc
pusha
push
and
inc
jnp
jnp
pop
dec
fdivs
mov
int
and
insb
sbb
js
aas
movsb
adc
sbb
sahf
dec
shrl
push
imul
jle
repnz
dec
scas
pop
jne
push
lods
stc
rcrl
loope
inc
jle
xor
inc
stos
adc
dec
es
repz
dec
fists
cmpsb
jp
lret
and
xchg
push
mov
xlat
stc
cmp
pushf
mov
lea
test
cmpsb
call
call
pushf
movb
lea
je
call
lea
jne
jmp
push
call
pop
cs
psubq
popf
mov
mov
cmpsl
xor
shll
xor
push
lahf
and
xor
cltd
mov
inc
lods
sbb
jb
xchg
cld
adc
call
test
lret
xor
scas
push
test
mov
movsb
jo
jae
mov
in
outsl
test
mov
adc
xchg
xchg
aad
cmp
outsl
xchg
or
in
dec
adc
xchg
scas
bound
nop
jno
jno
inc
test
cmpsb
add
stc
dec
lds
stos
daa
ja
xor
sbb
mov
nop
stos
adc
in
lret
add
dec
rolb
xlat
mov
jbe
dec
cmp
cmp
add
xchg
out
inc
mov
movsb
adcl
stos
and
mov
inc
xchg
dec
scas
setae
jb
jne
hlt
insb
lock
pop
loopne
in
push
aam
lods
adc
xchg
xchg
sahf
mov
push
call
mov
dec
dec
dec
cs
insb
add
out
or
imul
mov
nop
or
js
push
insb
cld
lret
jmp
into
mov
scas
sub
add
pusha
pop
insl
div
mov
fadd
pop
mov
inc
jmp
sub
fldt
pop
mov
xor
jecxz
in
jge
jmp
or
das
mov
jle
je
jbe
dec
mov
pop
loop
xchg
cmp
sbb
shll
mov
cli
inc
gs
sbb
clc
adc
mov
leave
int3
insl
push
popa
adc
pop
mov
sub
mov
inc
ss
xor
sbb
aas
lods
fdivrl
sbb
cltd
out
sbb
mov
push
fcoms
mov
dec
and
daa
fadds
in
mov
mov
insb
in
js
js
sub
nop
fsubr
lcall
clc
mov
insb
fnsave
xchg
add
add
test
dec
push
movsl
cmp
dec
addr16
inc
lcall
in
lds
aaa
adc
js
mov
xchg
pop
push
mov
cmpsb
jnp
outsl
adc
fnsave
pop
movsl
jb
sub
sbbb
ljmp
fbstp
outsl
mov
data16
inc
aam
cmpsl
sbb
loop
xor
push
shlb
sahf
and
lcall
push
imul
fdivs
push
jl
pop
jl
push
mov
leave
into
xor
loope
lock
dec
cmpsb
pop
dec
adcb
push
sub
inc
inc
cmp
or
ret
lds
xchg
lods
test
sbb
mov
test
sbb
loope
cmp
xchg
or
jo
aas
icebp
jmp
jecxz
pop
sbb
jo
icebp
mov
sarl
jno
pop
loop
imul
pop
rolb
ds
and
repnz
ret
out
data16
push
xchg
push
arpl
pop
shll
es
mov
cwtl
add
lahf
sbb
repnz
loop
mov
dec
popa
repnz
cli
dec
inc
xchg
test
fneni(8087
push
xchg
pop
dec
inc
scas
sub
jmp
fldcw
inc
shll
fisubl
cmp
ljmp
xor
add
mov
testl
popf
lea
and
and
bound
lret
in
jl
ror
enter
and
mov
cli
bound
in
call
hlt
mov
pusha
and
not
add
push
add
adc
mov
pushl
push
test
pushf
jmp
pop
sarl
scas
cwtl
inc
shlb
xchg
jl
push
xor
mov
jne
rcll
ss
xchg
inc
push
mov
stos
mov
push
ret
popf
inc
mov
leave
or
adc
xor
and
adc
scas
insb
push
mov
lds
scas
sub
xchg
lahf
out
mov
sti
push
leave
jns
imull
mov
fnsave
and
xchg
aad
xlat
sub
in
mov
pop
add
xchg
xchg
inc
mov
jle
ljmp
xor
movsl
fimuls
adc
xlat
mov
cmc
test
movb
pusha
cmpb
push
mov
jmp
cmp
inc
lds
stc
test
inc
mov
stos
or
dec
jg
xor
xlat
in
dec
lret
dec
movsl
stc
jge
pop
aam
stos
out
mov
jp
in
in
xor
int
leave
scas
into
jb
in
cmpsb
cmp
adc
out
mov
std
push
loope
loope
leave
xor
pop
jmp
xchg
popf
pop
xchg
mov
push
mov
xor
hlt
jo
fcomps
adc
jl
jno
mov
ds
les
cwtl
mov
cmc
sub
cli
inc
or
cmp
sub
sub
vpunpckhqdq
or
xor
add
xorl
or
fs
and
or
mov
cli
outsb
loop
sbb
stos
or
jp
inc
into
and
push
xchg
mov
adc
mov
push
pushf
pushf
pushl
ret
jecxz
mov
cwtl
push
int3
cld
xchg
jg
stos
sbb
jnp
mov
adc
or
mov
mov
xchg
cmp
sub
repnz
pop
fisubrl
sub
shr
inc
jl
pop
mov
jge
mov
daa
mov
add
mov
mov
dec
fwait
mov
out
out
xchg
ret
pop
shl
push
mov
push
cmp
icebp
jns
inc
popf
and
mov
mov
add
dec
push
dec
dec
inc
xor
cs
insb
add
inc
mov
addb
popf
sbb
stos
adc
push
dec
cmp
aas
mov
faddl
stc
js
sti
mov
and
ss
add
fdivrl
stos
or
dec
aas
out
sahf
rclb
push
cmp
std
movsb
fxtract
push
ret
mov
cmp
je
fimull
scas
sub
aas
cli
stos
int
xchg
push
sub
cmp
aas
fwait
jnp
add
das
mov
push
xchg
mov
into
das
stos
xor
dec
imul
sahf
sti
insb
icebp
jp
cmp
out
xchg
or
mov
xchg
jno
gs
push
jg
mov
pusha
mov
add
adc
pop
dec
js
dec
scas
push
adc
rcrb
xor
mov
bound
mov
aaa
pop
mov
ja
cmp
cwtl
cmp
jg
add
in
mov
popa
scas
lds
sub
mov
into
dec
ret
xchg
mov
inc
push
mov
test
inc
mov
fisubrl
pop
mov
in
popa
cltd
es
sarl
sub
in
cltd
pop
outsl
div
mov
jbe
cmpsl
mov
outsl
adc
ficoml
sub
ds
outsl
mov
pop
fwait
and
cmp
loopne
cmpsb
push
insb
aam
mov
adc
pushf
cmp
push
lcall
push
int
mov
cmp
int
mov
test
jno
push
xchg
mov
xlat
sbb
loope
mov
cmp
movsb
adc
push
scas
adc
cmp
movsl
imulb
xor
jge
adc
xchg
repz
xchg
dec
int3
add
xor
xchg
dec
cltd
sahf
add
xor
jns
jle
sbb
push
inc
push
jns
scas
ljmp
cmp
sbb
or
and
push
jbe
pop
xchg
daa
call
mov
jbe
dec
mov
sahf
sub
push
xchg
mov
jmp
in
addb
push
aad
iret
dec
popf
pop
mov
or
pop
ljmp
add
fiaddl
or
add
testb
notl
jnp
lds
xor
cmp
add
orl
out
jae
call
stc
jne
jbe
bound
cmp
sub
ret
sbb
les
shll
mov
fs
ret
push
mov
add
xchg
test
cmpsb
mov
push
inc
movsl
add
jns
cmp
push
xchg
mov
xchg
mov
push
lea
je
test
cmp
bt
sub
stc
jmp
ficoml
sub
jmp
lret
inc
mov
push
imul
lods
adc
mov
je
jo
stos
add
jle
adc
loope
mov
mov
aam
aad
mov
ja
bound
inc
mov
or
arpl
dec
xlat
inc
mov
andps
push
call
ss
inc
adc
mov
cmp
mov
inc
aad
xchg
xor
fisttps
dec
fidivrs
mov
cmpsb
das
nop
add
ret
add
rcll
iret
mov
cmpsb
adc
and
inc
sbb
mov
inc
ds
adc
jns
sti
pop
xchg
pushf
hlt
fisubs
xchg
mov
inc
mov
mov
add
lret
gs
pop
mov
ret
push
sub
mov
andb
xlat
jns
jne
loopne
gs
jno
cmp
push
add
loop
in
popf
cmc
jle
mov
mov
xchg
movq
push
fildll
jae
push
push
xchg
xchg
outsl
push
call
fildll
pusha
lea
jb
stc
cmc
stc
cmp
cmpb
jmp
mov
stc
cmpsb
jno
dec
bound
add
outsl
add
push
test
xchg
cmp
pop
int3
out
dec
addr16
mov
out
mov
mov
mov
dec
mov
int
xchg
aaa
stos
push
xchg
pushf
cld
xor
test
fnstcw
lcall
lock
mov
arpl
xchg
mov
pop
sbb
test
add
and
dec
pop
in
popf
add
dec
jge
xchg
jnp
aas
mov
push
xchg
xchg
je
loope
rorl
in
fs
ds
sub
push
jnp
imul
jle
dec
pop
ret
les
cmp
xchg
jbe
shll
pop
jp
in
leave
dec
stc
add
jno
jmp
jle
stc
or
fwait
sar
scas
push
push
add
pop
jae
or
inc
mulb
lods
fstpl
jmp
inc
scas
or
out
ljmp
adc
ret
sub
pop
int
sahf
mov
fwait
lock
push
in
icebp
imul
pop
aad
xchg
int3
leave
xor
inc
push
mov
jmp
mov
mov
stos
or
mov
scas
popf
bound
sub
hlt
inc
push
iret
sub
repz
out
lods
and
sbb
roll
dec
repz
jecxz
push
fcmovu
xchg
fwait
stos
mov
aam
das
pop
cmp
in
pop
xchg
push
icebp
pop
rorb
leave
xchg
inc
xchg
daa
pushf
adc
dec
shll
xchg
lock
cmp
push
xchg
test
inc
mov
enter
in
subb
or
sbb
in
shl
xchg
or
dec
fistpll
iret
jbe
push
out
cli
stos
rolb
test
cmp
addr16
pop
sub
clc
test
inc
mov
hlt
roll
lahf
fwait
mull
xchg
in
and
stos
ja
xorl
xor
outsl
lret
aaa
xchg
aaa
jecxz
nop
push
mov
out
mov
cmpsb
fidivrs
pmuludq
pop
ds
jbe
push
cs
adc
pushf
scas
shrl
inc
cwtl
or
cs
adc
mov
xor
or
or
push
imul
fisubl
sbb
push
mov
popf
inc
inc
mov
mov
add
loop
shl
cmp
cmp
inc
icebp
inc
lret
ja
dec
jmp
lcall
roll
pop
into
xor
cmp
aad
pop
mov
jl
in
and
cmp
in
leave
inc
push
xchg
test
imul
call
push
call
or
lea
jae
push
bswap
mov
sub
shr
pushf
xchg
mov
pusha
mov
clc
sub
cmc
clc
pushf
repnz
push
push
lea
jne
pushf
movzbw
mov
pushf
mov
lea
jmp
push
call
jns
movl
and
je
call
out
outsl
in
fidivrl
out
cld
out
mov
dec
fsubl
xor
int3
cmp
addb
inc
mov
push
pushf
inc
in
jl
pop
push
test
outsb
repz
out
and
popf
or
jno
mov
ret
xchg
es
arpl
push
cmp
dec
scas
nop
xchg
mov
mov
push
rorl
inc
call
and
sahf
cli
xchg
mov
dec
mov
adc
les
movsb
xor
pop
add
cwtl
sbb
xor
push
jg
jno
dec
ret
cmp
mov
int
push
push
xor
or
pop
mov
cld
lods
into
ds
dec
shlb
adc
je
aad
jp
out
daa
sub
testl
dec
and
popa
sbbl
fmull
in
or
or
mov
int
jnp
in
arpl
mov
fwait
sub
cmpl
cwtl
or
aam
adc
pop
mov
mov
cmp
jp
js
pop
jg
mov
popf
int
mov
cs
mov
xchg
neg
leave
jmp
hlt
idivb
pop
outsl
inc
pop
shrl
nop
in
sarb
cmp
adc
xchg
cmp
mov
jb
pop
dec
int
push
movsl
or
push
ja
jbe
add
ljmp
sbb
aad
lret
out
push
ds
inc
and
rcl
leave
inc
lods
xor
xchg
loop
cwtl
std
jb
pusha
mov
push
jb
stos
cmp
pop
leave
push
addr16
pop
mov
int
cld
jg
adc
stc
push
loopne
popf
loope
rcrl
cmp
jge
push
out
cmp
lahf
repz
xor
add
xchg
stos
push
call
mov
dec
rorl
mov
mov
arpl
insl
ljmp
or
cmp
push
push
push
jne
push
dec
rcl
jae
jno
int3
jge
pop
scas
das
scas
in
test
dec
incl
jae
inc
mov
xchg
jo
popa
icebp
pop
inc
ret
repz
adc
adc
push
xchg
mov
jecxz
inc
es
and
add
or
dec
int3
sub
add
push
xchg
adcl
decl
add
cmc
stc
cmp
add
add
clc
add
call
push
call
xor
or
ret
add
idivl
mov
dec
dec
mov
sub
push
in
enter
sub
fwait
dec
sbb
test
adc
pop
mov
or
lcall
les
cmp
clc
lods
pop
cmp
pop
pop
movsb
push
cmpsb
pop
dec
mov
int
iret
pop
rorl
ss
xor
in
lods
lods
ret
das
addl
mov
daa
adcl
xchg
sbbb
jle
js
xlat
subl
jbe
dec
mov
inc
into
imul
cwtl
enter
dec
push
ja
and
add
imul
dec
pop
fimuls
loop
mov
sahf
jnp
xor
arpl
loope
icebp
dec
lret
sub
mov
push
loope
cmp
lahf
sub
arpl
ficompl
popa
sub
aam
dec
int
pusha
lret
sbb
mov
mov
mov
sbb
inc
mov
sbb
add
in
pop
shll
dec
xchg
xor
cmc
filds
out
int
rcll
ds
xor
adc
cld
cmpsb
push
jge
fwait
mov
pop
mov
popa
mov
and
mov
outsl
xchg
add
les
ljmp
sbb
mov
pop
call
or
lock
loopne
les
xchg
jg
jne
sbb
cmova
pop
or
xor
and
cmc
pop
add
push
bound
cld
mov
test
popf
sub
adc
mov
xchg
cltd
lock
add
xor
clc
or
or
xchg
xchg
push
mov
repz
xchg
jg
sbb
movsl
sbb
es
repnz
outsl
inc
lret
xchg
fwait
or
imul
add
repz
clc
pop
ljmp
and
mov
push
mov
js
scas
pop
cmp
cmp
shll
inc
mov
and
cmp
cmpsb
ret
and
test
dec
and
clc
push
sbbl
stc
xchg
jecxz
mov
push
fsubrs
mov
fadds
out
test
dec
mov
lahf
sbb
inc
into
dec
shlb
mov
jb
dec
push
xchg
jle
cmp
pushf
or
in
adc
xor
sub
add
add
ds
cmp
add
sub
add
add
sub
add
add
cmp
add
add
stc
movsl
sub
add
add
push
push
sub
add
add
push
and
add
add
add
imul
add
add
dec
add
add
sub
add
add
mov
add
add
add
addb
add
or
add
add
addb
add
filds
sub
xchg
sub
mov
jbe
add
add
add
aaa
add
add
add
jl
or
xor
dec
lock
cld
or
hlt
fs
push
not
fcomps
leave
push
iret
pusha
mov
sarl
mov
mov
sti
dec
pop
ret
inc
mov
mov
bound
sub
insb
cmp
inc
leave
xor
sbb
add
or
iret
fsubr
dec
gs
cmp
mov
push
xchg
jge
pop
xor
sub
in
xlat
sub
ret
stc
jp
ja
push
int
mull
xor
cmpsb
enter
out
cmpsl
sarl
leave
dec
cli
sbb
loopne
in
jb
je
xor
fstps
mov
cmp
mov
xchg
sti
stos
test
fnstenv
into
ss
pop
scas
push
cmpsb
leave
mov
fsubr
dec
scas
pop
lock
mov
shll
mov
fistl
inc
mov
xchg
jge
mov
js
call
mov
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
sub
mov
ja
inc
inc
pop
mov
fwait
stos
cmp
push
nop
shrl
popa
lds
pop
mov
mov
lea
ja
jne
outsl
les
sub
pop
divb
adc
and
lcall
mov
pop
popa
mov
in
pop
ljmp
outsb
adc
jbe
in
pop
sbb
roll
pop
scas
add
cmpsl
pop
push
xchg
jl
movsb
daa
inc
push
in
xchg
add
adc
sub
xchg
lahf
cmp
sub
and
imul
push
fldenv
sbb
mov
xor
pusha
sub
out
xor
out
shlb
int
xor
test
xchg
test
sbb
and
adc
push
call
adc
add
mov
jo
push
mov
call
cld
mov
push
jmp
rcrb
jmp
add
or
and
sub
lret
add
sub
jp
and
dec
jb
xchg
push
ja
mov
xchg
mov
sub
popa
popf
mov
js
addr16
shr
jge
fcomip
mov
mov
orl
mov
pop
mov
call
pop
mov
test
sub
mov
cmp
jo
xor
push
fsubrs
push
xchg
jnp
iret
in
gs
nop
or
pushf
ds
call
push
call
pop
pop
inc
addr16
dec
add
lds
add
lea
add
jmp
xchg
or
push
stc
sub
arpl
push
pop
mov
xchg
or
outsb
fisttpl
out
inc
and
leave
xor
mov
cmp
add
xchg
lcall
inc
dec
xlat
punpckhdq
xchg
dec
gs
lret
arpl
inc
scas
xor
sbb
push
js
jle
int3
pop
dec
rorb
fiadds
into
xor
mov
cmc
adc
rcl
cmp
sbb
jbe
loope
lret
push
loop
jmp
xor
sti
mov
and
ret
dec
mov
lret
daa
mov
mov
push
xchg
jp
adc
fiadds
sub
pop
adc
stos
shll
sub
ljmp
mov
jae
fdivrl
or
shll
js
pop
jnp
incb
add
pusha
mov
pop
jb
les
mov
and
stos
dec
jno
mov
cmp
xchg
jns
xor
mov
arpl
mov
stos
jae
ds
xchg
xor
clc
and
mov
pop
jmp
dec
lods
add
push
xchg
jns
data16
cmp
adc
test
pop
out
pop
nop
adc
jle
jmp
xlat
fdivrs
add
cmp
add
push
dec
mov
andb
adc
mov
mov
shrl
jge
idiv
jge
outsl
sti
xor
push
xchg
inc
cwtl
fbstp
mov
pop
scas
push
outsl
jmp
gs
dec
pusha
fstl
push
mov
sti
jg
xchg
mov
shrb
lock
mov
sub
xor
mov
or
adc
sbb
lret
sub
cmp
mov
jno
cltd
dec
aam
js
add
idivb
jo
inc
mov
xor
mov
pop
sarb
in
inc
mov
mov
lock
inc
int3
pusha
and
push
mov
and
mov
jge
push
sarl
pop
mov
in
or
out
in
movsb
adc
sbb
push
lods
push
xchg
js
dec
pop
sbb
and
jo
jl
jp
inc
mov
in
je
mov
mov
lcall
les
das
inc
xor
cltd
fists
lcall
pop
inc
insl
shlb
dec
add
leave
ds
test
scas
pop
sub
cs
cmp
int3
clc
xor
xor
clc
js
jle
cmp
sbb
or
mov
out
push
xchg
js
lods
ret
fidivl
call
and
dec
lds
das
addr16
dec
sub
cmp
adc
insl
lds
jnp
dec
ret
pop
push
and
test
call
arpl
jecxz
testb
jno
cmp
sub
and
mov
jae
mov
jge
sub
push
cmp
mov
ds
add
aam
dec
cmpsl
inc
insb
push
fwait
push
fs
sbb
xchg
out
pop
bound
mov
mov
sbb
jae
jae
arpl
push
xchg
jbe
add
pusha
lea
call
jmp
push
call
xchg
nop
cmp
mov
movw
sar
movw
lea
ja
inc
stc
bsf
add
rcr
rcl
shr
shr
btc
rcl
mov
inc
shld
shl
add
dec
jmp
pushf
call
lea
stc
pusha
stc
mov
call
jecxz
fstpt
mov
dec
ss
fstpl
sbb
push
ja
pop
mov
push
add
xor
adc
push
pusha
mov
mov
add
jae
sub
sub
inc
int
gs
mov
test
shrb
or
lret
fcmovbe
cmp
insb
notb
arpl
mov
dec
add
insl
into
dec
pop
dec
ret
daa
fwait
or
pop
jecxz
xchg
pop
push
xchg
jbe
mov
rcll
outsb
sahf
sub
jmp
nop
gs
mov
ret
shlb
xchg
jge
and
mov
push
std
jns
test
mov
jno
mov
enter
sub
sub
dec
push
and
lahf
sbb
lret
and
ret
push
xchg
or
mov
mov
mov
iret
dec
lahf
add
push
xchg
jbe
je
mov
mov
inc
sarb
aad
mov
addl
test
adc
xchg
cmc
out
xchg
dec
flds
add
or
outsb
lret
test
loop
or
test
mov
jbe
lret
outsl
xor
dec
jp
movsl
mov
leave
push
cmc
pop
fnstsw
mov
stos
adc
sub
inc
iret
aaa
repz
pop
sarl
xchg
or
fdivp
pop
stos
mov
pushf
pushf
pusha
lea
jmp
xor
int3
or
sarb
mov
ret
add
sbb
sbb
ss
std
mov
sbb
vminpd
fisubrl
push
lods
adc
or
repz
iret
jae
adc
lods
lods
pop
je
inc
leave
push
dec
sub
cmp
in
leave
and
xchg
jne
push
int
lahf
add
adc
fists
ret
sub
pop
push
add
ret
xchg
adc
xorl
daa
popl
jae
imul
lahf
and
push
data16
push
in
leave
push
mov
push
gs
gs
add
dec
rorl
aam
jecxz
push
adc
sbb
loop
add
push
sub
add
jge
push
mov
xorb
fildll
int
repz
inc
lret
aam
mov
out
es
cmpsb
and
loope
mov
mov
pusha
pop
cmp
lock
mov
push
ds
pop
jae
or
xor
sti
pusha
fmull
pop
mov
in
les
push
xchg
je
int
push
call
add
out
dec
xchg
push
call
mov
push
call
dec
mov
stc
sar
add
xor
clc
add
mov
pusha
cmp
cmpsb
pusha
movb
jmp
push
call
in
and
int3
loope
mov
xor
mov
cmp
inc
mov
cmp
adc
rorb
inc
lret
lods
pop
jb
cld
add
int
xor
or
push
int
dec
mov
movsl
xor
imul
jl
push
insb
mov
xor
nop
inc
arpl
lock
lods
and
lea
test
popa
shll
daa
cmp
sbb
iret
aam
add
pop
int
xchg
lock
and
xchg
cmp
shl
xchg
imul
loope
cmp
es
test
mov
insb
lock
mov
pop
mov
lea
sbb
push
mov
es
pushf
inc
push
mov
xor
and
push
mov
and
out
int
jbe
sub
call
mov
hlt
push
in
les
je
xchg
jae
jbe
push
call
mov
es
call
sbb
cmc
sub
call
les
xchg
lret
pop
ljmp
test
mov
cmpsb
movsb
inc
jbe
sahf
push
inc
adc
xchg
sbb
hlt
loope
movsb
add
outsl
inc
repz
dec
cltd
scas
adc
mov
or
in
subl
aad
sbb
mov
pushf
aam
int
insb
mov
test
mov
test
aas
out
pop
movb
ret
add
sub
das
ficoms
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
pusha
es
lods
mov
imul
sub
and
inc
int
xchg
divl
outsl
sbb
fiadds
out
rdtsc
mov
negb
or
clc
xorl
xchg
bound
add
and
scas
push
test
sub
cld
mov
cmpl
adc
ja
outsl
fists
lock
out
je
xor
add
cli
gs
push
add
mov
mov
adc
xchg
push
mov
mov
jmp
pop
pop
pushl
xchg
ljmp
ljmpw
call
movb
rol
bt
bt
test
sub
call
push
call
mov
imul
aas
xchg
or
or
jo
jle
push
loope
iret
and
std
jns
push
cwtl
inc
sub
ljmp
lods
stc
emms
aad
cmp
divl
lods
les
mov
jmp
int3
into
daa
jmp
dec
jle
mov
cltd
scas
or
mov
fmull
int
push
xchg
inc
mov
push
fstpt
mov
mov
jo
xor
push
call
test
test
or
js
adc
inc
lds
xchg
pop
movsb
adc
movl
addr16
in
adc
shll
in
rcrb
xor
add
pushf
pop
andl
adc
lcall
aas
jae
adc
mov
fbstp
popa
popf
mov
clc
shrb
mov
or
in
xchg
enter
movsb
cld
xor
std
pop
xchg
push
lret
loop
sub
and
mov
mov
idivb
push
rolb
or
xchg
outsl
pop
jo
jmp
shll
enter
out
out
fsubl
ja
xor
cmc
push
ret
stos
sbb
xor
fstpl
sti
outsl
pop
mov
xor
xchg
test
das
mov
mov
jnp,pn
add
sub
aad
fwait
or
sub
ja
sahf
daa
sub
jge
es
cld
or
lcall
cmp
scas
xor
pop
or
int
push
fldt
int
mov
leave
inc
mov
outsl
aas
push
add
je
or
cmp
nop
cmp
inc
out
adc
push
call
sub
inc
push
dec
inc
dec
dec
xor
cs
insb
add
inc
iret
pop
les
incl
mov
xchg
jge
arpl
pop
add
push
inc
scas
xor
sbb
sub
cmpsb
call
and
lock
negl
cmp
loop
sbb
shlb
mov
push
add
sbb
pop
or
int3
pop
mov
aas
inc
ffreep
ds
push
ret
xchg
jne
cltd
sub
push
jne
dec
lret
pop
lret
sub
insl
adc
les
fdivp
jo
fidivs
pop
mov
pop
mov
jnp
pop
fildl
xchg
outsb
shl
push
cmc
test
pushl
lea
je
bt
pushf
cmc
sub
pushf
test
clc
clc
cmp
push
pushf
lea
ja
push
clc
imul
pushf
push
add
pusha
pushf
movw
lea
jmp
push
call
adc
nop
or
xor
xorl
xorl
outsb
adc
add
pop
xchg
or
dec
sub
cmpsl
aad
sbb
jecxz
jecxz
shll
sbb
clc
gs
inc
jnp
or
xor
xchg
orb
arpl
push
sub
sub
fsubrl
jp
fs
mulb
pusha
add
push
pop
pusha
aam
or
outsb
test
and
sub
sub
add
push
out
inc
stos
lds
mov
lret
inc
test
pop
mov
push
xchg
insb
sti
push
and
inc
and
jmp
add
push
imul
insb
insb
outsl
arpl
fistl
sbb
mov
xchg
adcb
inc
mov
pop
mov
fsubs
cmp
fiaddl
adc
pop
sti
stos
shll
lahf
inc
cld
dec
pop
mov
dec
cmc
xorl
and
neg
mov
add
sub
mov
adc
xor
pop
addr16
das
pop
les
daa
mov
jg
outsl
ret
sbb
xchg
insb
or
insb
mov
xlat
jb
mov
pop
mov
jbe
cmp
sbb
pop
rolb
xor
mov
jp
mov
sub
icebp
dec
cmc
pushf
mov
fwait
mov
outsb
hlt
negb
cwtl
scas
mov
imul
cmpl
out
clc
aad
adc
lods
cmp
cmp
fnstcw
sbb
insl
xor
push
jae
and
sti
arpl
addr16
push
xchg
insb
mov
xchg
pop
pushf
mov
not
mov
lea
mov
push
call
setg
mov
mov
pop
bswap
pop
xchg
jge
pusha
pusha
mov
call
movzwl
sub
pusha
stc
mov
pusha
cmp
cmp
add
jmp
push
call
inc
out
imul
or
dec
jmp
jl
test
push
fmulp
cmp
jecxz
mov
mov
popf
mulb
cmp
pop
mov
jbe
enter
inc
jns
cli
jmp
xor
inc
rcll
rolb
aam
cmp
xchg
mov
roll
sub
mov
jp
add
call
mov
fmull
push
call
sbb
and
mov
loope
pop
call
in
rclb
into
movsl
xor
sbb
push
mov
fs
ds
mov
push
stos
add
pusha
pop
dec
adc
aas
iret
aas
lahf
sub
iret
dec
scas
push
xchg
imul
mov
call
mov
inc
rcrl
adc
cmp
adc
push
call
jge
mov
inc
jbe
sbb
dec
mov
adc
push
cmpsb
stos
call
cmp
ja
mov
outsl
push
dec
scas
push
pop
and
jge
dec
push
in
cmp
loop
pop
mov
scas
gs
sti
dec
imulb
inc
stos
adc
fcoml
nop
arpl
jg
lcall
out
fsubrs
pop
daa
lret
cmp
stc
unpcklps
stos
adc
jl
lcall
fwait
mov
jle
push
pop
fisubrl
mov
dec
push
xchg
push
test
and
adc
or
cwtl
sub
cmp
ljmp
sub
stos
pop
filds
mov
icebp
or
mov
cmpsl
push
sahf
insb
add
mov
outsl
aam
in
add
lock
rcll
inc
mov
stos
testl
sbb
int3
loop
mov
sbb
js
sahf
push
fs
mov
outsb
pop
inc
xchg
ljmp
idivb
push
loope
sarl
gs
push
xchg
imul
inc
mov
movsb
ffree
fstl
push
lds
xchg
lock
push
ret
push
cld
cmp
sub
addb
mov
xor
movsb
jns
xchg
insl
add
in
loopne
in
adc
addb
aad
add
jmp
incl
loope
test
sbb
push
jmp
dec
out
fbstp
imul
int
aas
lret
aaa
lahf
pop
jnp
jg
pop
jecxz
iret
dec
push
xchg
imul
add
adc
and
aaa
in
mov
push
mov
or
fs
xchg
ret
inc
test
sub
pop
hlt
or
pop
fnstcw
movsl
sub
mov
int3
outsb
lret
pop
jmp
sub
push
or
in
jg
dec
insl
in
dec
subb
pusha
insl
idivl
push
ret
lock
jne
add
aad
inc
mov
lods
sbb
fidivs
and
mov
add
call
sub
xchg
cmp
jmp
cmpsl
push
xchg
mov
lods
into
push
rclb
or
mov
pusha
jmp
jmp
int3
dec
dec
ret
push
mov
loopne
mov
ret
and
sub
mov
xor
cmpsb
enter
xor
das
fcomip
pop
xchg
popf
xchg
and
and
shlb
cli
or
mov
fdivrl
aad
imul
adc
jo
jo
out
inc
add
and
in
push
adc
mov
pushf
popf
dec
fs
in
and
andl
mov
push
xchg
push
pop
in
push
fs
xchg
mulb
dec
mov
dec
mov
popf
mov
mov
cs
xor
divb
sarl
mov
lret
dec
stc
movb
pusha
jbe
jns
mov
push
push
adc
sbb
jne
imul
xlat
mov
mov
mov
cwtl
lock
in
mov
enter
addr16
add
add
ja
imul
call
push
call
mov
jb
ficoml
xor
psadbw
mov
shll
sbb
out
insl
mul
inc
repnz
sub
mov
inc
mov
and
cwtl
jge
aas
cs
cmc
lods
xor
into
pop
xor
das
sarl
mov
xchg
shll
loop
orb
fstp
addr16
imul
into
jg
xchg
add
push
sbb
xlat
aaa
xchg
pop
ja
pop
out
fbld
push
xchg
inc
push
jbe
fs
je
rcl
xor
sbb
bts
mov
movzbw
add
rcr
neg
rol
mov
mov
pushf
bt
jmp
push
call
loop
lret
into
push
les
aad
and
outsl
lock
ret
inc
mov
jp
xchg
lds
cmp
testl
xchg
clc
push
aam
leave
dec
push
jnp
jmp
fiaddl
dec
mov
xor
testb
sub
mov
dec
fs
test
fstpt
ja
cltd
push
mov
mov
push
mulb
out
jle
jl
test
lcall
das
fwait
add
in
push
lea
fstpl
cmp
or
xchg
gs
fs
dec
aam
rcrl
adc
orb
cmc
dec
roll
pop
lahf
std
test
sti
xchg
repz
int3
cs
sbb
xchg
lods
xor
pop
aad
pop
pop
push
mov
sub
lock
mov
cld
mov
pop
fadds
xchg
gs
push
insl
or
lcall
pop
shll
scas
out
inc
fisubl
and
lods
xor
mov
mov
push
dec
imul
mov
jnp
sub
ds
scas
fxch
jge
add
mov
adc
xchg
pop
cmp
bnd
mov
sub
sbb
sar
pop
incl
jo
cmpsb
inc
jno
inc
push
inc
mov
mov
lahf
js
adc
mov
stos
pop
sbb
push
or
mov
pop
jo
cmp
aad
movsl
and
gs
mov
pusha
lea
jne
bswap
shr
bsr
sub
cmp
jmp
push
call
enter
or
cmp
pushl
jmp
pusha
push
pusha
lea
jb
pusha
push
push
pushl
ret
push
call
pop
jmp
jmp
pop
sbb
xor
mov
pop
loop
les
push
iret
sub
lret
das
fcomip
and
cld
add
iret
cmp
test
mov
les
mov
and
negb
push
cmp
testb
mov
and
push
shll
lret
jle
dec
fwait
or
ret
insb
adc
sahf
push
data16
cmpsb
push
jbe
push
into
dec
push
xchg
fs
arpl
xchg
into
add
in
in
sub
loop
rcl
fisubs
dec
xlat
pop
cmc
sbb
xor
lcall
cmp
jge
push
xchg
aas
fidivrs
mov
cmp
jmp
xchg
sub
push
sub
xor
sub
push
add
fbld
adc
push
hlt
pop
mov
adc
push
insb
loopne
mov
sbb
push
xchg
arpl
sbb
call
fisubrl
test
cmp
cmp
and
addr16
fisubrl
adc
push
jnp
into
push
aam
xchg
pop
jo
dec
mov
test
cwtl
aas
fsts
jae
cmc
js
lret
jecxz
inc
ret
mov
push
adc
xlat
addr16
add
xchg
or
cmpsl
or
lds
fs
sub
cmpsl
xor
push
xchg
popa
in
add
inc
jge
mov
xor
imul
ljmp
jne
fs
in
dec
rcl
xor
sub
push
jp
add
dec
and
adcl
fnsave
mov
xbegin
cmp
cmc
icebp
jp
dec
xchg
or
lods
xor
jg
xchg
lods
adc
or
cli
adc
insb
enter
test
mov
xchg
and
xchg
bound
insb
rorl
mov
mov
add
sub
push
jae
pop
loop
fmull
jmp
push
lock
cmp
xor
and
or
in
clc
or
xchg
mov
nop
mov
sub
fld
add
mov
xor
or
add
popf
add
cmp
dec
pop
scas
push
call
sub
dec
lea
ja
pusha
jmp
clc
outsl
clc
insl
leave
into
call
sarb
nop
cmc
outsb
repz
loope
mov
mov
mov
inc
push
and
inc
sbb
std
cmp
jg
scas
aas
iret
add
cmp
scas
ficomps
mov
cmp
mov
or
sub
call
mov
lret
das
leave
ficompl
jge
outsl
lcall
or
data16
xor
daa
iret
mov
clc
xor
sub
or
filds
sub
xchg
popa
mov
mov
cs
xor
xchg
stos
leave
xchg
xchg
sub
jo
inc
je
jae
xchg
jb
xchg
int
mov
test
fwait
popf
test
popa
mov
mov
mov
je
xchg
push
aaa
lods
fs
hlt
and
xor
iret
mov
divl
pushf
sub
mov
mov
xor
stos
add
fwait
inc
cmpsb
push
lods
push
outsb
or
lods
repnz
stos
push
lcall
xchg
lret
push
and
cmpb
addl
lods
adc
insl
inc
pushf
fistl
dec
es
pusha
inc
lods
inc
stos
inc
test
inc
movsl
inc
push
inc
push
inc
mov
scas
inc
lods
inc
scas
inc
mov
mov
outsl
add
pop
scas
and
shrb
cmp
xor
or
fs
shrl
in
or
loop
fisubl
loop
pushl
lock
mov
out
aad
jmp
out
jno
ljmp
dec
lods
orb
cmp
adc
out
repnz
rolb
cmp
xor
stos
adc
loope
in
loopne
mov
xlat
lock
aam
in
sub
add
cwtl
fidivrs
sub
stos
push
xchg
lock
repnz
fistpll
ljmp
icebp
leave
movsb
imul
sub
pop
adc
xchg
mov
outsl
cmp
dec
inc
inc
dec
cwtl
inc
inc
je
bound
popa
aas
inc
cmp
pop
dec
push
mov
js
outsb
lahf
dec
dec
dec
xchg
add
out
in
adc
cli
mov
lods
inc
xchg
jmp
sti
jp
movsb
pushf
inc
jl
inc
mov
ret
ljmp
scas
mov
mov
cmp
loope
popf
sbb
scas
jns
test
jp
ffree
mov
add
add
loopne
pop
add
out
stos
mov
test
test
loopne
enter
mov
cwtl
daa
aam
mov
stos
cmp
cmpsl
lret
mov
adc
clc
leave
das
mov
xor
inc
mov
mov
push
in
mov
mov
sub
xchg
mov
fmul
mov
jmp
mov
add
dec
in
ds
mov
mov
and
insb
aaa
or
jecxz
jge
sarb
lods
xchg
sbb
repnz
sub
adc
sbb
pop
pop
mov
mov
test
neg
add
mov
shl
push
mov
sub
pop
or
jge
cmovns
and
sti
mov
jmp
xchg
test
stos
and
or
cmp
sub
or
stos
and
pushf
push
mov
pusha
pop
pushf
lret
pop
and
dec
stos
pusha
aaa
mov
jmp
mov
nop
sbb
popa
push
jmp
mov
mov
dec
sub
shrb
pop
dec
push
mov
pop
push
outsl
enter
jp
and
and
or
push
ret
js
mov
and
ljmp
mov
fldcw
pop
sbb
aad
mov
sub
mov
test
or
mov
arpl
ss
sbb
cmp
mov
jmp
nop
test
loop
mov
lret
mov
rorb
cmpsb
mov
js
out
or
leave
mov
mov
pop
push
mov
clc
adc
sbb
enter
fadds
push
mov
cmp
mov
or
stos
xchg
in
lret
pop
imull
mov
aaa
add
imul
push
mov
or
sub
jne
mov
mov
push
mov
lods
sbb
ss
and
xchg
mov
lret
or
xlat
shrd
xchg
aas
and
jno
in
jo
mov
cmp
and
mov
nop
add
inc
lods
pop
xor
mov
cmp
mov
push
lods
call
xor
mov
repz
repz
repz
mull
dec
cmp
or
inc
mov
xorl
inc
outsb
lods
outsl
add
subb
push
xor
stos
cli
mov
clc
cmpsb
add
cmpsb
inc
cmpsb
test
push
cmpsl
pop
mov
sbb
int
xor
std
sbb
daa
xor
mov
fs
xchg
fists
mov
shll
add
sbb
or
je
adc
popa
pop
lods
mov
in
jl
mov
adc
fdivrs
mov
rcrb
movsb
fildl
mov
sti
lods
cmc
addr16
sbb
pop
lods
mov
not
lods
cmpsl
push
shl
dec
mov
mov
fwait
fwait
xor
push
jbe
sbb
push
mov
cmp
and
mov
add
fbld
adc
mov
loopne
lret
mov
push
mov
pop
sub
in
mov
outsl
mov
inc
repz
xchg
inc
jo
cmp
mov
in
mov
mov
mov
aas
jecxz
inc
mov
xor
push
leave
test
lea
mov
dec
xchg
mov
fs
mov
fsts
fmuls
xchg
and
xchg
test
jo
push
je
xor
mov
sahf
arpl
inc
dec
leave
pop
add
nop
jo
js
test
movsb
addl
lods
jae
ds
decb
lahf
mov
pop
inc
dec
inc
cmpsb
in
insl
dec
fwait
arpl
xchg
mov
call
xchg
adc
lock
add
add
mov
std
mov
test
shll
xchg
fdivr
or
iret
xchg
mov
icebp
mov
pushf
mov
or
add
in
add
loope
movsl
repz
ret
sub
add
pushf
push
sub
aam
in
jecxz
loopne
jb
jmp
jbe
in
jl
add
gs
add
jns
std
or
in
mul
insb
sbb
shl
fsubs
dec
push
adc
fnstsw
sarb
add
mov
push
push
add
in
in
out
add
sbb
lods
adc
push
mov
mov
cli
sar
in
fdivrp
jecxz
stc
add
out
mov
nop
insb
lahf
test
shl
or
add
push
cmp
repnz
lret
xchg
push
lcall
cwtl
adc
or
cld
or
lock
mov
add
stos
not
loope
lods
mov
test
push
testl
or
js
adc
repz
jo
pusha
repnz
push
subl
inc
dec
out
mov
xchg
adc
stos
inc
movsb
mov
push
inc
inc
add
push
add
push
idivb
xchg
xchg
cwtl
xor
jbe
inc
cld
jp
dec
jl
push
out
popa
fs
repz
and
gs
jo
inc
rclb
cmpl
movsb
jno
inc
in
mov
jno
inc
in
fsts
popa
jmp
dec
iret
dec
repnz
pop
inc
aam
loop
shrb
xor
leave
adc
xor
mov
or
inc
mul
je
push
frstor
add
push
stos
scas
test
clc
mov
push
dec
xchg
jmp
in
scas
jle
xor
out
rorb
or
dec
xor
and
xor
repnz
xor
popl
and
dec
aad
mov
xchg
mov
sbb
insb
xchg
inc
inc
cmp
cwtl
neg
lock
xor
sub
sbb
inc
stos
iret
repnz
xor
mov
xchg
nop
jo
mov
inc
inc
dec
dec
stos
popa
xchg
scas
xor
mov
outsl
outsb
jae
pop
push
rclw
mov
stos
test
stos
test
lods
mull
call
je
ljmp
mov
adc
xor
jb
push
cld
sub
fcomp
or
roll
push
and
mov
test
inc
inc
adc
fs
mov
cmc
pop
ret
adc
stos
jbe
nop
adc
mov
add
mov
push
ret
mov
sbb
jl
ret
xorl
add
nop
cmpsb
jno
inc
mov
cmpsb
rorl
mov
rcll
lods
test
sahf
mov
push
push
clc
dec
cmpsl
xchg
adcb
xchg
push
xor
jl
nop
xchg
mov
mov
pop
lea
sbb
ficomps
pop
fsts
lods
movsb
mov
push
test
push
movsb
test
test
push
mov
sub
jns
jp
outsl
push
inc
test
pop
imul
cmpsl
push
push
nop
clc
pop
jge
mov
and
call
mov
stos
pop
insl
xchg
mov
pop
dec
mov
sysexit
std
jbe
cmpl
mov
inc
nop
shlb
adc
dec
rcrl
stos
sbb
or
xchg
out
fdivrl
es
in
xor
test
jle
popf
fs
shrb
fnstcw
mov
aam
push
lods
js
dec
and
sub
mov
movsb
into
mov
mov
insl
movsb
mov
insb
std
push
sbb
sub
sbb
pushf
pop
pop
inc
les
fsts
dec
stos
jge
adc
add
mov
je
nop
pop
imul
inc
xchg
xchg
jae
mov
and
jmp
in
xlat
cld
inc
and
inc
sbb
push
fsubrs
mov
jle
add
popa
jno
sbbb
or
sub
inc
adc
loop
insb
or
daa
xor
nop
xchg
sbb
in
bound
jbe
mov
scas
lods
in
fs
xor
lods
out
mov
adc
stos
scas
add
mov
push
xchg
and
mov
inc
pop
fnstenv
sar
call
enter
movsb
jl
or
into
xor
lods
pop
jns
movsl
sbb
pop
pop
out
and
aam
pop
dec
mov
outsb
inc
inc
inc
pop
std
das
inc
xchg
pushf
fsubl
push
inc
fs
pushf
insb
stos
hlt
push
xor
aam
xchg
push
xor
fldcw
lods
lods
xchg
and
mov
sbb
nop
sub
sub
jo,pn
das
sub
mov
sub
jle
pusha
lods
cmpl
xor
shll
sub
into
lods
clc
jae
dec
cmp
mov
push
add
mov
push
and
pop
sub
insb
pusha
and
sub
insb
jo
test
je
cmpsl
js
cmpsb
mov
andb
xchg
test
mov
mov
insb
nop
and
cwtl
sub
insb
mov
fwait
mov
lods
and
repnz
xchg
jo
jnp
xchg
and
sub
mov
xchg
and
xchg
xchg
jo
nop
sub
mov
mov
call
mov
lock
mov
clc
xchg
mov
mov
add
xchg
or
sub
mov
andb
xchg
xorl
jg
and
jle
sub
xor
dec
dec
dec
mov
dec
inc
inc
inc
inc
inc
inc
mov
aas
ds
mov
mov
lods
test
mov
cmpsl
test
movsb
mov
mov
mov
push
rorb
addl
jge
add
jns
add
xchg
mov
fwait
pushf
jle
cwtl
cltd
mov
xchg
test
icebp
addl
mov
dec
dec
push
inc
dec
cmp
inc
dec
pushf
fwait
lcall
xchg
xchg
xchg
xchg
sbb
jb
add
js
mov
push
jns
mov
mov
sahf
jge
mov
push
pop
lcall
scas
scas
in
mov
jae
xor
ljmp
stos
push
stos
xchg
std
mov
xchg
in
fwait
cmp
adc
or
mov
mov
mov
jnp
movsl
xchg
lea
cmpsb
das
movsl
xor
test
xor
mov
mov
push
lcall
pushf
sub
out
pushf
xchg
lahf
stos
in
scas
fwait
lods
mov
repnz
xor
stos
popf
mov
scas
lcall
mov
push
cltd
mov
xor
notl
mov
test
setb
movsb
scas
jb
jge
nop
sub
mov
xor
lods
xor
mov
mov
mov
xor
lods
rcll
mov
xchg
cmpb
mov
jle
enter
xchg
and
mov
cmp
xor
adc
xor
mov
cmc
xchg
cltd
fistpl
lcall
movsb
pushf
push
mov
cwtl
ret
test
fwait
mov
jle
xorl
sbb
rclb
pushf
pop
mov
movsb
mov
mov
jg
test
cmpb
pushl
xor
jl
push
xchg
mov
jnp
mov
daa
jp
stos
mov
jns
mov
mov
ja
jbe
jne
je
nop
mov
xor
scas
jb
xchg
mov
movsb
inc
xchg
pop
xchg
mov
lods
xchg
cmp
fiaddl
rcrb
xchg
in
fwait
pop
mov
test
jge
jp
mov
insb
fwait
mov
mov
test
mov
ljmp
add
lods
pop
xchg
mov
push
and
in
sub
xchg
in
scas
fisttpl
jge
fs
cmpsb
mov
mov
loope
xchg
mov
negb
andb
cwtl
jnp
xchg
xchg
cltd
push
lcall
insb
cwtl
pusha
dec
pop
test
pop
in
stos
pop
and
mov
pop
xchg
xchg
mov
fwait
in
mov
pop
and
mov
jge
stos
pop
xor
rolb
sub
jno
push
inc
movsb
call
adc
pop
nop
cltd
in
xchg
mov
test
push
stos
xorb
mov
movsl
jle
dec
cmp
test
mov
dec
std
xchg
je
dec
arpl
or
adc
cltd
inc
jl
cmp
inc
xchg
xor
mov
pop
inc
xor
lods
cmp
dec
inc
lahf
inc
stos
jo
aas
mov
mov
xor
cmpsb
jno
jns
mov
sahf
lds
xorl
pop
mov
movsb
in
pushf
clc
mov
scas
xchg
jge
cmp
loopne
mov
cmp
mov
mov
test
aaa
xor
lods
ss
adcb
xor
xchg
in
xor
xor
movsb
cltd
mov
scas
rcrb
xor
mov
sbbb
iret
xchg
xorl
mov
xchg
sarb
subb
mov
mov
nop
ret
mov
scas
je
adcb
dec
sub
xchg
xchg
sub
sub
push
cltd
mov
daa
pushf
lcall
stos
jge
dec
out
and
and
or
scas
jle
clc
cmpl
and
ljmp
sub
xchg
pop
cld
mov
jge
sbb
movsb
sbbb
inc
mov
mov
test
sbb
cmpsl
jg
in
xor
scas
sbb
scas
xchg
add
pop
mov
mov
push
stos
in
adc
pop
scas
iret
cwtl
dec
mov
bound
xchg
adc
mov
adc
and
daa
adc
mov
lods
xchg
xchg
push
mov
in
scas
mov
or
jno
in
lea
xchg
xor
or
or
lahf
mov
xchg
pop
inc
mov
stos
xchg
push
xor
add
add
mov
lcall
add
rcrl
js
gs
lods
xor
ljmp
lea
sub
pop
jge
cld
stos
scas
mov
jg
mov
xor
rcrb
insl
lcall
cwtl
mov
dec
clc
mov
in
xchg
and
divl
test
push
test
negb
out
cmc
pushf
pop
xchg
mov
hlt
mov
cmpsb
ss
popa
jge
xor
xor
pop
push
test
shr
shr
movsb
jle
in
mov
in
mov
ja
mov
jmp
adcl
cmp
or
mov
popa
cmpsb
in
orb
cmpsl
mov
mov
loop
cmpsb
push
test
shl
xchg
in
scas
sbbl
lea
push
mov
jge
xlat
xor
fnsave
xchg
test
lret
pop
mov
call
insl
lcall
nop
xchg
test
mov
xchg
fwait
jge
in
mov
in
andb
xchg
fwait
cltd
mov
mov
xchg
pushf
and
lret
mov
les
cmpsl
es
cltd
lcall
ret
fwait
aam
rcrl
mov
jecxz
mov
xchg
ss
adc
xor
movsb
mov
iret
ljmp
into
xor
jns
mov
lods
dec
lret
cmpsl
mov
lahf
lret
leave
fs
mov
jge
enter
xor
xor
jmp
subb
scas
mov
xchg
add
je
mov
lahf
jle
ret
insl
xor
xor
and
xchg
and
or
pusha
xor
mov
mov
cmpsb
in
adcb
mov
xchg
stos
xchg
stos
mov
cltd
mov
lcall
mov
mov
mov
mov
and
mov
in
mov
and
clc
mov
push
xchg
inc
jge
and
xor
xorb
ret
mov
mov
popf
xchg
gs
cltd
insl
lcall
mov
movsb
gs
xchg
loopne
mov
mov
pop
mov
fwait
sub
stos
mov
jge
jge
jl
mov
lods
mov
xor
aad
and
mov
test
cmpsl
ljmp
das
mov
xchg
das
movsl
xor
mov
mov
xor
mov
mov
mov
mov
stos
mov
subl
lea
add
add
cli
pop
dec
mov
cmpsl
daa
mov
pushf
mov
and
adc
lcall
xchg
mov
lods
cwtl
arpl
insl
cwtl
add
xchg
mov
jge
jl
mov
lcall
xchg
xchg
cmp
or
in
in
mov
xchg
xor
xchg
jge
xchg
cmc
sub
mov
nop
pop
mov
jl
mov
mov
mov
sahf
pop
xchg
test
cmpsl
jnp
andb
sbbb
lcall
xchg
loopne
clc
xchg
inc
mov
xchg
mov
cwtl
inc
xchg
test
test
cltd
mov
lcall
in
pushf
mov
lcall
insl
xchg
ret
and
daa
jg
rcrb
mov
int3
xchg
adc
out
pop
test
xchg
mov
jp
iret
dec
mov
and
pushf
and
mov
stos
mov
pop
xchg
mov
jae
jb
loopne
sbb
mov
lods
xchg
xorb
pop
mov
sub
lods
outsb
jo
mov
pop
mov
mov
movsl
jle
adc
cltd
stos
movsl
mov
push
shrb
cwtl
inc
xchg
pop
mov
mov
test
cmp
mov
push
mov
xchg
inc
insb
push
cmp
aam
push
lahf
mov
sbb
pop
lcall
cmp
insb
scas
xchg
test
mov
mov
adc
push
or
xchg
push
loopne
movsl
lea
test
sub
mov
push
movsb
fwait
cmpsb
inc
jle
jo
pushf
lods
lods
push
xchg
es
xor
sbb
js
push
sub
cs
xor
imul
jg
repnz
cs
cld
mov
cmpsl
sbb
js
test
in
mov
xor
cs
pop
daa
inc
mov
xor
jg
push
test
sub
xchg
mov
xchg
cmpsl
mov
mov
mov
pushf
mov
stos
jg
sbb
sbb
mov
subl
test
andb
mov
inc
and
push
xchg
call
mov
scas
cwtl
xor
test
faddp
rol
xchg
call
insb
mov
xor
scas
lea
mov
xchg
in
fisubl
cli
xor
scas
outsb
movsb
outsb
in
cmpsl
nop
pop
adc
arpl
stos
cmpsb
xchg
movsl
push
jge
mov
xor
or
shlb
lods
or
jle
mov
adc
mov
bswap
sub
pop
mov
scas
xchg
stos
pushf
sub
push
je
cmpb
loope
pop
int3
pop
nop
movl
bound
nop
scas
mov
subl
inc
cs
cmpsb
nop
pusha
mov
fcompl
scas
pushf
nop
pop
lods
mov
int3
sub
stos
xchg
push
addl
test
mov
xor
add
int3
lcall
in
lods
mov
adcl
xchg
cmp
dec
cmpsb
mov
mov
test
data16
mov
test
arpl
xchg
or
rorb
call
addb
mov
sbb
add
ss
xor
xor
add
pop
xor
test
xor
xchg
pop
mov
mov
mov
nop
movsl
lods
test
cmpsl
bound
sbb
mov
sbb
adc
inc
and
ss
xor
mov
mov
cs
nop
insb
test
mov
adc
adc
xchg
mov
cltd
lods
jo
adc
test
pop
sbb
xor
jecxz
mov
cld
mov
push
push
push
sbb
mov
mov
fsubl
cld
xor
stos
mov
int3
mov
inc
mov
xor
adc
mov
jge
mov
dec
mov
orb
movsb
mov
xchg
clc
insb
xchg
adcb
in
adc
push
js
leave
push
xor
lahf
filds
adc
mov
lcall
xchg
and
dec
sub
adcb
les
out
nop
inc
xor
nop
mov
arpl
xor
fmull
mov
movsb
pushf
cmpsl
nop
dec
dec
xor
dec
dec
lcall
jno
iret
jae
mov
scas
xchg
jo
lock
lock
push
and
lret
test
lcall
ljmp
hlt
push
lahf
jl
lods
xchg
cmc
inc
mov
cmpl
xor
jb
mov
je
loopne
push
mov
call
loopne
and
add
xor
jno
pop
adc
sbb
shrl
cmp
or
dec
xor
test
scas
xchg
mov
cwtl
inc
xor
aam
mov
jg
subb
stos
loopne
xor
adc
mov
clc
sbb
lcall
xchg
loop
lcall
mov
in
pushf
in
in
cmp
mov
inc
mov
subb
loopne
jecxz
mov
mov
inc
push
mov
pusha
mov
inc
and
fadds
or
cwtl
sub
sub
add
aam
mov
lea
clc
mov
xchg
lahf
pop
loopne
outsl
add
lcall
xor
xor
xchg
or
fidivs
mov
jbe
jmp
test
ds
arpl
arpl
lret
xchg
jae
scas
mov
pushf
mov
stos
fdivl
sub
xchg
cmpb
cmp
scas
lock
test
movsl
fmull
adc
pop
les
adc
or
data16
sub
sbb
lcall
sbb
andl
stc
call
cld
pop
mov
nop
mov
leave
dec
mov
jns
jge
callw
jb
jo
shlb
mov
cltd
scas
fldl
sub
addb
push
lock
movsb
adc
xor
pushf
xor
data16
aam
scas
cmp
cld
pusha
movl
sub
scas
mov
pop
cmpsb
push
arpl
sub
scas
cs
or
xor
fwait
cmp
sbb
push
arpl
sbb
nop
sbbl
push
push
xchg
lret
out
mov
sbb
jle
or
aaa
push
pop
mov
sub
mov
cld
cwtl
xor
mov
nop
mov
and
add
mov
nop
orb
xchg
adc
xchg
add
adc
cld
mov
adc
ss
or
push
sahf
push
stos
jb
xor
rol
sbb
and
mov
incl
push
pop
and
push
stos
or
add
sub
push
or
inc
adc
dec
scas
shlb
ds
jnp
jle
rclb
fcmovb
rclb
mov
jg
dec
ss
and
xchg
jle
xchg
les
je
sub
cli
adc
sub
pushf
mov
cwtl
shl
stos
and
xchg
and
ficoml
inc
sub
in
jg
mov
adc
subb
jo
js
fisubrl
push
jae
daa
cmp
pop
dec
pop
or
mov
mov
stos
cld
jb
fs
insb
mov
xchg
xor
push
xchg
sub
faddl
test
pop
test
xor
push
loopne
inc
mov
jl
mov
jae
adc
push
push
mov
mov
test
xor
push
test
shrb
mov
lods
dec
jae
fxch
addr16
test
and
bound
push
and
cmpsb
add
stos
setp
mov
and
pop
mov
outsb
push
inc
fstpl
cs
xor
loopne
jne
cmpsw
cmp
pop
pop
sub
mov
nop
adc
xchg
inc
xor
sbb
cmp
rorb
mov
lret
pusha
stos
sbb
pop
xor
scas
lea
loop
xor
push
mov
xor
in
hlt
push
push
or
xor
sub
jmp
xchg
mov
sub
stos
pop
dec
pop
loop
and
lods
xchg
loop
mov
mov
push
sahf
xchg
sahf
sbb
je
test
ljmp
add
mov
mov
hlt
xchg
sub
lock
xor
sahf
xor
xor
pop
jmp
push
push
cwtl
adc
mov
lea
cs
jecxz
js
repz
dec
mov
sbb
stos
js
sbb
lods
sbb
jg
pop
mov
jo
and
sbb
xor
dec
mov
mov
sub
lods
andb
mov
sbb
test
lea
clc
pop
je
lods
daa
push
or
sbb
or
insb
test
cmp
stos
sbb
daa
mov
xchg
xchg
ss
dec
stc
dec
jae
xchg
cld
push
fisubrs
mov
mov
mov
cli
fs
push
xor
mov
mov
sarl
and
subb
sbb
pop
mov
hlt
rolb
or
mov
push
pop
pop
pusha
xor
adc
or
mov
mov
movsb
mov
insb
subb
sbb
adc
adc
lret
pushf
imul
and
orl
jp
faddl
adcb
cmp
mov
sub
repnz
mov
adc
jle
scas
les
mov
mov
pop
lcall
add
jg
lea
aaa
dec
test
ficompl
adcl
pop
pop
push
mov
xchg
dec
mov
popf
in
adc
mov
or
add
adc
stos
xor
js
mov
dec
test
popf
xchg
lret
mov
ret
adc
or
and
and
push
clc
mov
adc
mov
test
popa
mov
addb
dec
loopne
cmpsb
mov
push
es
mov
pop
mov
or
repnz
push
pop
aam
fwait
or
movsb
sub
mov
lods
inc
sub
in
call
xchg
pop
mulb
insl
push
inc
mov
mov
or
mov
nop
adc
subb
xchg
add
in
sub
add
adcb
lods
je
pop
xor
cli
mov
jg
and
andb
add
bound
sub
addb
add
xchg
in
in
mov
fsubs
fs
ret
and
add
sub
sbb
jmp
mov
xchg
stos
mov
jg
mov
xchg
pusha
scas
hlt
rcrb
sbb
test
adc
mov
cmp
xchg
and
rcr
loope
cld
lock
mov
addb
scas
and
mov
stos
loop
mov
les
xchg
stc
push
jb
scas
pop
movsb
iret
or
add
or
push
dec
add
adc
add
push
stos
sub
stc
imul
jne
lret
sbb
sahf
add
mov
js
mov
or
and
out
sub
dec
movsb
test
lcall
fisttpl
scas
pusha
xchg
jg
sahf
pushf
loopne
out
pop
xor
jb
repnz
stos
push
es
fisubrs
mov
stos
add
mov
shlb
mov
add
stos
mov
jg
and
push
sahf
push
pop
stos
into
lahf
ss
xchg
xor
mov
iret
ret
push
mov
xor
jo
mov
xor
add
pop
add
mov
adc
leave
ss
mov
data16
repnz
xchg
or
sahf
cmpsb
xchg
push
addb
sub
test
lcall
mov
adc
mov
add
shrl
add
lods
insb
orb
mov
adc
mov
mov
cmp
outsl
mov
add
xchg
sti
cmp
enter
jl
gs
filds
sbb
mov
nop
lcall
ljmp
cmpb
lcall
sahf
mov
cwtl
jb
xorl
les
mov
test
bnd
shlb
dec
notb
das
and
push
sub
cmc
scas
scas
xchg
mov
and
pop
insb
ret
andl
xchg
xchg
movsb
test
scas
fsubs
sbb
shlb
cwtl
hlt
add
mov
mov
out
sub
push
xor
add
cli
lahf
pushf
cmpsl
in
sbb
lret
xor
mov
xchg
sbb
jle
or
push
cs
xchg
enter
mov
sbb
je
stos
jmp
adc
adc
lcall
repnz
jo
adc
nop
mov
fidivs
in
call
nop
scas
sub
movsb
mov
mov
dec
clc
push
stos
mov
cmp
cltd
xchg
mov
fsubrl
push
mov
cmp
test
dec
pop
js
cwtl
adc
sbb
loopne
sbb
lods
fstl
movsl
and
mov
scas
idivb
out
push
pop
sub
insb
cmp
lahf
sbb
scas
and
jge
lcall
sbb
test
scas
cmpsl
push
nop
mov
mov
push
xchg
mov
bound
jmp
lahf
repnz
cmp
nop
cmpsb
mov
push
pusha
lods
add
xchg
jo
test
dec
jae
jne
push
mov
dec
dec
xor
xor
inc
xchg
or
movsb
movsb
xchg
outsb
pop
dec
sub
and
push
dec
xchg
xor
mulb
push
arpl
mov
pushf
lahf
leave
inc
insb
xchg
jo
sahf
push
or
sbb
and
cld
sbb
jg
adc
adc
mov
dec
movsb
xor
and
scas
mov
xchg
jmp
xor
stos
repnz
mov
xor
call
mov
push
pop
imul
lret
clc
pop
inc
or
push
fs
clc
xchg
ljmp
subb
test
adc
movsb
mov
pop
pop
bound
cmpsb
xchg
jmp
lock
sahf
clc
pop
sbb
cltd
push
test
inc
xchg
mov
add
sbb
and
push
jle
lods
xchg
adc
jge
jno
pop
sysenter
insb
cmp
mov
push
mov
cmpsl
mov
lods
add
mov
jecxz
aaa
sub
test
test
jbe
xor
sub
jo
xor
movsl
jne
in
loop
and
movsb
fs
stos
mov
sub
mov
inc
mov
xchg
and
cld
test
sub
cwtl
clc
inc
mov
jb
dec
or
jb
lret
cld
push
call
mov
addr16
jle
repnz
ljmp
xchg
pop
pop
hlt
in
les
fs
mov
arpl
cmp
stos
orl
imul
cwtl
jns
movsb
add
daa
jg
jg
jp
loopne
inc
test
sahf
mov
or
push
test
mov
das
call
and
cli
or
push
push
repnz
xor
mov
aaa
push
inc
pushf
nop
jmp
jne
rclb
xchg
jle
add
cmp
imul
dec
in
and
dec
lods
stos
dec
mov
popf
mov
cmp
push
enter
and
cmpsl
leave
push
repz
lcall
test
jmp
nop
lea
loop
add
loopne
dec
lahf
cmpsl
mov
jo
clc
cmp
adc
mov
or
mov
test
mov
push
xacquire
addr16
imul
in
repnz
ret
inc
nop
mov
jl
les
enter
dec
pusha
movsb
mov
stos
push
arpl
sti
shll
pop
clc
arpl
cmpsl
mov
xchg
add
pushf
out
cld
sbb
cs
fdivrl
nop
in
pop
test
dec
lock
mov
and
xor
inc
cbtw
and
iret
jns
test
mov
mov
pop
or
push
mov
sbb
lods
data16
dec
das
ds
je
js
dec
test
pop
jle
jae
mov
xor
adc
xchg
pop
lret
test
mov
fidivl
stos
xchg
fcmovne
jmp
mov
sbb
or
cmpsl
pusha
push
imul
push
cmpb
mov
fnstenv
je
test
movsl
out
in
jmp
adc
scas
in
adc
fdivs
sahf
xchg
lods
sub
mov
or
test
push
lods
mov
inc
dec
jg
outsl
adc
dec
insb
insb
cli
jbe
gs
pop
incl
popf
xchg
stos
lcall
clc
add
fdivr
fldcw
mov
adc
nop
sbb
mov
mov
rolb
into
rcl
popf
insb
adc
clc
inc
push
push
lea
push
jb
push
jns
add
stos
fdivrs
adc
xchg
repnz
mov
fcoms
push
loopne
mov
adc
int3
repnz
sub
mov
mov
xor
cli
mov
pop
mov
test
xor
rorb
popf
dec
xchg
test
pusha
test
test
lock
sbbb
pop
test
lods
movsb
clc
sub
mov
nop
sahf
psllw
insb
or
gs
mov
mov
ret
jae
dec
nop
je
mov
into
mov
pop
cwtl
adc
xor
jp
sets
xor
sbb
add
add
inc
xchg
ljmp
and
mov
adc
sub
pop
or
xchg
sahf
add
xchg
and
ja
ret
cmpsb
pop
cwtl
pop
rorb
xchg
std
cmpsl
lods
sub
cmpsl
dec
clc
mov
cwtl
mov
xchg
out
push
inc
sahf
add
ljmp
or
and
pop
or
push
arpl
shl
sub
clc
test
sub
mov
xchg
inc
popf
test
mov
mov
cmpsl
jecxz
test
sub
inc
or
scas
jb
pop
out
mov
jne
jg
das
mov
jmp
lods
fldcw
rorl
stos
mov
or
es
pop
icebp
into
pop
imul
inc
mov
cli
inc
scas
xchg
ret
sbb
inc
push
movsb
test
dec
cwtl
scas
add
jae
mov
sbb
fildl
jle
scas
or
lea
xchg
ret
jle
jge
mov
repnz
xchg
fdivrp
mov
cmpsl
push
and
sub
pushf
adc
jae
dec
sbb
xchg
in
pop
xchg
dec
cmpsl
jmp
jge
test
sarb
js
push
movsb
adc
pop
orb
pop
outsb
jg
ret
xor
cmpsl
sbbb
lret
mov
cmc
orl
icebp
orb
subb
sub
adcl
sub
mov
pop
scas
cmp
std
lods
subb
scas
jb
jg
mov
sub
outsw
mov
cltd
mov
vpmacssdql
push
add
scas
in
mov
cmpsl
xor
push
sub
lret
pushf
cmp
scas
fwait
aam
fistpl
cmp
loope
mov
imulb
bound
icebp
xor
movsb
fsubrs
mov
test
adc
mov
jge
jecxz
scas
mov
adc
sub
push
and
lcall
scas
mov
pushf
add
out
xchg
gs
in
lea
mov
sahf
pusha
mov
adc
scas
xchg
xchg
or
xchg
arpl
and
lcall
scas
sub
mov
test
jge
or
scas
cltd
sbb
lock
rolb
scas
mov
ret
mov
enter
fldcw
sub
les
arpl
jbe
loopne
add
add
test
pusha
xchg
shrl
and
cmpsl
cmc
outsl
mov
mov
pop
sub
test
lea
idivl
mov
or
and
mov
lret
mov
cmpsb
push
add
mov
mov
gs
pop
clc
xor
mov
sub
xchg
mov
inc
cmp
cmpsl
roll
cmpsl
xchg
lahf
and
loop
je
in
in
xchg
cvttps2pi
xchg
mov
push
xor
mov
icebp
push
xchg
jg
push
stos
lcall
cmpsl
push
mov
push
ret
jle
clc
imul
xor
and
imul
mov
xor
lea
lock
pushf
mov
cmpsb
out
pop
test
arpl
nop
rcrb
cwtl
lods
insl
movsl
int3
or
sahf
xchg
mov
sub
mov
test
pusha
jle
sbb
xchg
scas
ret
xorb
pushl
scas
test
lea
enter
mov
mov
cli
jp
xchg
cmpsb
dec
lods
and
pop
scas
enter
mov
jg
xchg
xchg
push
mov
out
pop
lods
mov
push
test
dec
jae
sub
fdivr
mov
fcmovb
inc
add
scas
shrb
loopne
or
jnp
xchg
imul
or
ret
mov
ret
lahf
lds
jle
or
lahf
fcmovu
test
cltd
mov
sub
push
jg
mov
jge
xchg
xor
lahf
ret
adc
mov
push
pushf
xchg
jge
jg
xchg
push
mov
xchg
sbb
jecxz
push
jbe
imul
xchg
dec
test
mov
mulb
adc
ficompl
scas
dec
dec
scas
imul
ja
ficoml
cmpsb
pop
stos
and
sub
fisubs
stos
xchg
shl
xchg
pop
ror
mov
jge
cmp
jb
inc
aam
mov
xchg
repnz
stos
sub
sbb
fisubrl
mov
and
jl
sub
xor
mov
xchg
lods
sbb
stos
les
std
sub
call
adc
mov
lahf
mov
ja
loop
and
arpl
mov
dec
xchg
mov
cmpsl
ljmp
lock
sub
sahf
movsb
xchg
xchg
mov
add
push
lret
mov
mov
or
scas
mov
add
xchg
mov
pop
bound
sub
fistpl
scas
lods
test
mov
xchg
sub
cmp
sbb
inc
xor
lea
mov
imul
mov
add
dec
push
push
movsb
or
mov
pop
pusha
jb
jo
scas
jle
ja
add
mov
mov
sbb
fnstenv
lods
enter
sub
ljmp
mov
sahf
ss
jle
sub
pop
or
push
pop
push
xor
jb
outsl
xchg
lret
bound
pinsrw
jg
jmp
sub
outsb
enter
push
movsb
or
fnsave
cs
stos
aas
sub
xor
push
fwait
loop
inc
mov
mov
imul
stos
inc
arpl
stos
notl
jo
cwtl
stos
mov
cmp
pushf
xor
cmp
push
inc
mov
pop
orl
cmpl
cmp
cmp
inc
mov
dec
adc
push
dec
stos
inc
insb
inc
and
dec
jo
inc
sub
inc
sbbb
cmp
and
jo
rcll
adc
add
in
fsubp
es
in
repnz
mov
xor
push
test
repnz
out
mov
add
jmp
add
pop
lods
add
lret
cmc
add
fstl
pop
fs
test
movsb
neg
clc
add
mul
cmp
aad
mov
jp
movzbl
or
adc
sysenter
stos
in
push
shl
sub
repz
jecxz
pushf
jp
lahf
loop
cwtl
xor
pop
jns
test
imul
cmpsl
testb
cltd
cwtl
jg
pop
popf
cmpsl
adcl
add
push
cltd
inc
cmp
mov
dec
xor
fistpll
jae
fisubl
insb
xchg
je
jl
sub
movsb
and
les
fsubl
in
in
jo
cld
sub
or
adc
sbb
and
sub
xor
cmp
inc
and
dec
jo
push
sub
pop
nop
fs
insb
cmc
lock
test
pushf
and
jo
aam
loopne
in
nop
clc
insb
add
adc
sub
dec
nop
pop
insb
push
jo
test
mov
fsubs
or
sbb
mov
and
in
stos
jb
jno
jo
outsl
outsb
sub
insb
nop
imul
xchg
push
mov
bound
popa
xchg
pusha
jo
pop
sub
pop
nop
pop
imul
mov
iret
aas
fcoms
add
push
cmp
cmp
nop
inc
insb
inc
and
aas
jo
cmp
nop
cmp
mov
insb
clc
outsl
ret
cmp
rclb
mov
ret
push
xchg
ret
popf
in
imulb
test
cmp
rclb
mov
xchg
jo
aam
imul
jno
inc
in
mov
js
dec
ds
outsb
addl
test
jnp
mov
insl
jle
jg
adcb
subl
stc
shll
inc
or
fmuls
mov
ja
repnz
sbb
gs
popa
and
jb
aad
rolb
jl
jge
jle
jg
addb
adcb
lods
pop
insb
fisubrs
out
insb
imulb
push
insb
push
and
pop
xchg
pop
and
pop
rcrb
pusha
jnp
cwtl
bound
insl
arpl
data16
push
es
imul
shrb
jo
enter
jae
adc
inc
addr16
push
loopne
pop
mov
fs
mov
jb
mulb
jns
pop
cli
cmpsl
das
pop
bound
cmp
push
in
xlat
add
sahf
popf
jecxz
lods
jecxz,pt
sahf
sbb
movsb
mov
lret
outsl
mov
mov
cld
adc
cwtl
enter
jp
insl
rolb
lea
idivb
xchg
ds
push
or
mov
sub
stos
sub
je
mov
mov
stos
xor
cmp
xor
nop
pusha
test
movsl
insl
adc
jno
mov
in
ficoml
in
aam
pop
fs
mov
addr16
je
mov
int3
mov
mov
jo
mov
nop
and
mov
jo
mov
nop
js
shll
xchg
ret
ret
sub
imul
push
sub
mov
jl
lret
jo
enter
sub
int
cmp
into
and
jo
shrb
je
rcll
cwtl
xchg
rcll
sub
mov
sbb
xlat
xchg
xor
pop
sub
mov
cwtl
and
xchg
mov
fadd
je
fsubs
fbld
and
sub
nop
push
insb
jecxz
fs
in
js
sub
insb
out
mov
shlb
cld
sub
mov
xor
in
xchg
dec
jo
pop
sub
mov
nop
and
xchg
mov
add
xchg
xchg
repz
insb
cmc
and
xchg
divb
imull
add
clc
nop
sbb
sub
sub
nop
js
std
and
jo
in
add
sub
add
sub
test
lock
fadds
aam
cld
mov
pinsrw
in
adc
arpl
scas
ja
lock
mov
pop
nop
pushf
push
mov
ret
repz
fs
in
loop
add
hlt
cmp
aam
leave
repnz
call
sti
fadds
fdiv
or
test
fnstcw
gs
movl
jp
imulb
mov
lret
xchg
mov
add
loopne
lcall
adc
xor
fdivrp
push
in
add
enter
mov
loop
push
inc
mov
loope
mov
popa
cmpb
sub
in
push
cmp
inc
sbb
xchg
mov
push
fldenv
shlb
cmpsb
insb
mov
add
xchg
sub
ss
nop
loop
mov
mov
mov
test
lods
ja
sub
push
inc
or
dec
out
mov
das
test
jp
push
shll
insb
je
or
mov
adc
sbb
xlat
test
jecxz
fst
cli
xchg
in
mov
mov
push
loop
mov
fldl
imul
mov
mov
fs
sahf
inc
pop
adc
repnz
and
jno
rclb
loop
adc
loope
pop
leave
mov
jb
into
stos
mov
dec
pop
add
outsb
mov
subps
cld
shlb
clc
rolb
cmp
jbe
inc
nop
shrb
rolb
in
xor
mov
pop
mov
adcb
jl
in
clc
insb
inc
imul
cli
push
mov
call
insb
je
out
stos
pop
add
and
pushf
stos
mov
add
jmp
mov
pop
andb
mov
push
mov
or
out
jo
lcall
scas
adc
test
movsb
dec
push
fwait
mov
lret
fwait
jle
hlt
push
sbb
insb
and
adc
push
jle
push
loopne
jo
ljmp
pushf
or
fstpl
icebp
mov
test
and
ret
shlb
cmpsb
in
or
imul
loope
movsb
das
or
cli
aam
adc
out
rorb
adc
adc
mov
in
out
xchg
adc
cld
aad
sub
std
or
xor
mov
mov
or
ret
test
pop
mov
xchg
neg
fdivr
lds
je
add
in
movsb
push
movsb
xchg
shlb
test
in
adc
arpl
mov
xchg
jnp
jle
js
cmp
xchg
sbb
or
js
inc
test
and
pushf
jne
pop
xchg
in
out
pop
call
sti
insb
enter
pop
pop
and
mov
iret
mov
stc
pushf
icebp
loope
outsl
test
enter
repnz
stc
fiaddl
jo,pn
sub
push
inc
xor
mov
dec
mov
bound
sbb
push
xor
lahf
inc
and
dec
xchg
lods
xor
std
mul
test
dec
mov
adc
or
inc
dec
xchg
aas
inc
fs
xchg
pusha
ja
xor
mov
jns
push
push
pop
lods
pop
nop
movsl
dec
inc
mov
cmp
imul
fildll
xor
lret
push
sub
fcoms
pop
cmc
cltd
test
mov
in
push
xchg
mov
sbb
cli
cmp
mov
mov
lret
jp
inc
in
imul
mov
in
aad
rorl
push
xchg
lods
jl
loop
pop
repnz
mov
loope
mov
add
mov
idivl
sub
cmpsl
shr
clc
cltd
xchg
mov
rcrl
mov
jg
movsb
ljmp
clc
loop
cmpsb
outsb
pushf
test
je
pop
mov
pop
nop
pop
insb
push
and
push
jo
push
sub
mov
arpl
lock
int3
mov
in
in
mov
jge
fldcw
movsb
jmp
or
out
mov
and
and
jb
arpl
ljmp
xchg
mov
int3
dec
frstor
adc
stos
fnstenv
hlt
sahf
inc
lret
add
stos
repnz
sub
pushf
push
cwtl
jp
dec
test
in
adc
ret
push
mov
or
xor
arpl
push
or
lods
scas
push
adc
lods
push
sbb
add
ljmp
xchg
cmp
mov
or
jb
cmpsl
lods
cmpsb
repz
pop
lods
mov
jl
insb
lods
ljmp
or
movsb
mov
pop
add
arpl
je
add
movsb
hlt
dec
push
sahf
lods
cmpsl
test
sbb
sbb
and
add
mov
aam
dec
adc
fsubrl
in
mov
add
and
pop
movsb
test
push
loopne
add
idiv
enter
mov
stc
out
mov
aam
jmp
xchg
mov
movsb
test
jo
ja
add
lods
lock
flds
cwtl
stos
fidivs
addr16
lods
add
je
test
cmp
push
lods
jns
std
je
test
movsb
jecxz
adc
movsb
in
movsb
sbb
loop
in
bound
insb
dec
fcoms
xchg
je
xor
aam
je
lock
movsb
jb
fisubl
jb
mov
dec
cmpsb
inc
dec
pop
push
push
cmp
sbb
ljmp
xchg
fisttpll
sbb
fwait
mov
aaa
push
dec
negb
in
outsl
jnp
addr16
add
loope
dec
mov
add
mov
push
mov
sbb
xchg
xor
pop
push
sbb
ss
test
pop
ljmp
adc
enter
mov
mov
xchg
mov
pop
sbb
mov
xchg
mov
movsb
xchg
pop
test
in
mov
mov
xchg
enter
test
insb
in
leave
inc
in
nop
hlt
cmp
sub
cwtl
shll
sbb
es
adcl
stos
pop
mov
call
and
and
push
loopne
or
xor
popa
push
mov
fwait
enter
stos
or
xchg
mov
sbb
push
mov
push
mov
fwait
in
xor
orl
and
mov
stos
sbb
subl
movsb
mov
lahf
inc
lods
fwait
pushf
stos
fsubs
loopne
fwait
call
pop
adc
call
sub
je
jo
mov
es
les
cld
sbbb
lock
insb
pop
and
ret
mov
in
fwait
hlt
stos
and
mov
inc
stos
outsl
nop
stos
sub
stos
lock
pop
stos
inc
mov
pop
sub
ret
jo
sub
ljmp
sub
cld
dec
hlt
mov
sub
mov
jo
js
je
lret
dec
sub
cmp
mov
lock
fwait
clc
fwait
add
stos
loopne
push
outsb
clc
mov
insb
pop
pop
leave
js
fwait
je
stos
shrb
mov
fwait
in
stos
or
and
call
xchg
les
insb
dec
shlb
mov
xchg
xchg
ds
hlt
pop
xchg
and
icebp
xor
sbb
fwait
stos
sahf
ds
fwait
inc
add
test
adc
xchg
inc
mov
pop
mov
pusha
dec
cld
pop
in
stos
mov
enter
lods
call
push
dec
sub
fwait
hlt
lret
xchg
mov
js
cmp
mov
mov
mov
in
sub
nop
xor
inc
sub
nop
lret
inc
mov
mov
inc
xor
fwait
inc
stos
nop
imul
xchg
lods
sbbl
lahf
stos
push
jp
jl
xor
jns
clc
lods
je
test
cld
mov
test
in
stos
nop
shlb
and
ljmp
pop
clc
xor
int3
cmp
xor
insb
call
sub
mov
hlt
andps
adc
fwait
sbb
js
fwait
subb
mov
and
pop
fwait
push
xchg
in
rcrb
fwait
loopne
inc
pop
mov
pop
and
mov
cmp
or
fwait
adc
xchg
subl
cmp
or
mov
pushf
sub
clc
fwait
or
fwait
pop
fwait
and
movsb
andl
sbb
js
sub
mov
adc
fwait
js
stos
mov
lods
sub
add
sub
and
stos
pusha
and
cmp
push
fdivrs
mov
sbb
in
sub
push
adc
mov
js
push
xorb
push
aam
mov
xchg
dec
and
cld
jo
bound
adc
dec
push
test
pop
mov
cmp
inc
and
inc
mov
inc
push
loopne
mov
xchg
je
mov
pop
mov
insl
mov
les
call
xchg
adc
mov
inc
js
enter
mov
shlb
xchg
jl
movsb
xchg
xchg
jo
mov
mov
xchg
mov
cmp
mov
jo
jo
xchg
mov
mov
xchg
lods
sbb
xor
loop
fs
lock
adc
mov
xchg
jl
mov
lock
push
dec
mov
dec
sti
dec
inc
je
xor
xor
xchg
mov
in
ret
mov
and
cmp
inc
push
mov
sub
and
mov
ret
lahf
repnz
push
in
xorb
cmp
xchg
mov
mov
cmc
filds
shl
jecxz
jae
stc
push
sub
rorl
jmp
fimull
xchg
outsb
xor
dec
inc
popa
inc
cmp
mov
cli
xor
xor
loope
shll
mov
jno
lahf
fsubp
stos
cmp
notl
adc
in
int
mov
or
jmp
add
inc
adc
in
imul
adc
pop
pop
xor
addr16
mov
xorb
jmp
es
ret
lock
sbb
cmp
cmpsb
and
xor
adc
loope
fcom
adc
fdivl
cltd
stc
add
mov
outsb
fwait
cli
shrl
xchg
jg
dec
sub
stos
xchg
orb
mov
sub
arpl
outsb
jle
jl
jnp
in
add
in
xchg
jmp
testl
loopne
lcall
push
pushf
add
testb
pop
movsb
cmpsb
in
jno
xchg
lcall
lret
ss
jb
fidivrl
lods
pop
popf
lods
repz
test
cs
out
add
mov
fisttpll
inc
xchg
dec
ljmp
add
idiv
ret
push
out
adc
lret
insb
pushf
dec
loopne
fwait
repz
shrl
mov
ret
cltd
repz
jb
rep
xor
mov
lock
aaa
loope
sti
fdivr
mov
pop
push
push
sbb
mov
cli
xchg
test
adc
push
je
adc
std
xor
dec
subb
push
add
xorb
jo
icebp
pusha
loop
clc
add
into
add
jb
mov
lcall
repz
cli
in
xorl
adc
subb
jb
jp
jecxz
xchg
retw
jg
add
arpl
mov
subb
enter
pop
jae
cmpsb
bound
nop
or
shl
dec
dec
jge
sbb
xor
dec
test
push
outsb
jl
insb
aas
arpl
je
sub
pop
in
inc
sbb
mov
add
fnstsw
inc
add
add
fidivrs
stc
jne
adc
sbb
into
insb
mov
mov
fists
push
push
fbstp
and
adc
aas
sub
or
aaa
stos
sar
or
dec
mov
jae
outsl
push
popa
stos
push
mov
pop
xor
and
in
jg
add
xchg
loop
repnz
mov
cmp
or
insb
fdivr
aam
ljmp
jmp
leave
xor
xor
out
add
movsb
or
jae
mov
or
push
loopne
xchg
pushf
out
ljmp
rorl
xchg
nop
arpl
fldt
xchg
add
in
push
stc
imul
cmc
or
loopne
imul
pop
xchg
fstpl
in
icebp
iret
mov
testl
push
sbb
mov
jae
addr16
adc
out
add
sbbl
lcall
call
insl
fstp
xorb
push
enter
mov
inc
loope
adc
lar
inc
jmp
add
loopne
lcall
repnz
fcmovu
mov
xchg
movsb
daa
pop
fmuls
xor
fucom
out
test
mov
mov
cmpsl
out
fdivrp
dec
lcall
xorb
jae
stos
subb
mov
adc
aad
out
or
fldl
shlb
xor
pop
aaa
arpl
arpl
mov
lcall
mov
stc
mov
insb
out
and
addb
shll
call
je
mov
or
xchg
push
xor
pop
lock
mov
in
lret
cmc
mov
in
setle
sub
sub
sub
repz
pushf
xchg
add
roll
movsb
adc
add
mov
mov
in
es
mov
mov
lcall
mov
cld
lock
sub
adc
ljmp
push
pop
inc
mov
loopne
in
nop
mov
nop
mov
mov
andb
push
loop
mov
add
nop
inc
outsb
insb
xchg
outsb
js
movsb
popf
hlt
leave
movsb
mov
jl
pop
lcall
in
insb
leave
jle
jle
imul
iret
sub
cld
pop
icebp
mov
sub
mov
push
sbb
lret
push
sbb
cltd
ljmp
mov
ret
aam
in
std
iret
inc
xchg
in
sbbl
nop
stc
imul
cs
std
mov
repz
xor
das
or
mov
imul
mov
sub
xor
loope
mov
pusha
xor
andb
and
dec
mov
mov
idiv
pop
mov
lock
mov
and
decb
adc
mov
fwait
push
shrl
nop
pop
xor
orb
jl
arpl
or
call
mul
js
push
cld
xchg
mov
cwtl
in
std
ret
loop
pop
aas
mov
xchg
out
or
repz
sbbl
inc
cli
pop
out
jle
sahf
xchg
pop
rorl
jo
lcall
push
jnp
andb
push
loop
out
in
in
push
adcb
stos
dec
outsl
xchg
cmp
mov
leave
inc
in
push
push
icebp
std
lods
lret
movsb
mov
dec
das
xchg
push
clc
sarb
adc
push
stc
pop
pusha
xchg
push
nop
popf
or
xor
inc
mov
adc
repz
ret
mov
idivb
fsubrl
mov
pop
dec
mov
and
test
xchg
outsb
sbb
in
cmpsl
call
fs
cmpsl
xchg
sbb
fdivl
push
decb
shlb
mov
xlat
shrb
fcom
jp
sub
fnsave
or
out
xlat
pop
mov
lret
push
push
and
push
out
ret
adc
mov
jl
add
lcall
mov
in
xchg
orb
xchg
stos
xchg
jl
in
imul
mov
jl
cld
jmp
int3
loop
push
sbb
stos
out
sti
mov
inc
cmpsl
sub
sbbb
push
cmpsb
cwtl
aad
in
dec
test
scas
pusha
lods
int3
adc
stos
fiaddl
cmc
mov
js
pushf
ret
lods
jbe
imul
inc
daa
fidivrs
or
add
and
and
push
movsb
cli
ror
movsb
cli
sar
xchg
data16
and
or
fcompl
mov
mov
push
in
loop
jle
push
inc
push
xlat
sbb
push
push
loope
add
mov
cmp
inc
dec
call
scas
adc
jp
pop
jmp
mov
mov
in
aaa
cli
add
outsb
xchg
add
jl
test
jl
mov
loopne
mov
push
adc
mov
pop
les
in
shl
pop
xchg
inc
and
imul
testb
test
inc
lret
in
in
mov
mov
and
add
ficoml
ficompl
jl
rorl
mov
inc
adc
mov
cmp
and
pop
add
and
lcall
xchg
stos
xchg
orb
xchg
cmp
sbb
jmp
cmovb
dec
jnp
dec
js
xchg
aas
inc
into
hlt
int3
lcall
shl
imul
popa
push
pop
sbb
arpl
mov
lock
xor
shlb
xor
hlt
stc
mov
lock
cld
xchg
popa
xchg
imul
add
enter
xchg
loop
mul
jo
incb
xor
mov
insb
loopne
push
iret
repnz
xchg
push
fbld
ss
dec
dec
push
imul
jb
adc
and
adcl
dec
jae
test
cmp
mov
and
je
jo
or
jo
mov
inc
inc
inc
cmp
or
sbb
mov
inc
dec
jnp
inc
loop
jae
stos
je
rcrl
scas
sahf
movsb
int3
outsb
push
aas
mov
fs
in
dec
addr16
xchg
push
push
insb
xchg
les
xchg
mov
out
cmpsl
cli
repz
jbe
adc
mov
outsl
cmp
sub
jmp
fwait
fs
xor
mov
lret
loop
adc
jbe
stos
inc
sahf
push
aam
inc
iret
jo
and
pusha
aas
inc
inc
imul
int
ss
push
test
les
add
jno
pop
add
mov
sub
fsubrl
inc
inc
data16
nop
add
jmp
sbb
xlat
roll
aad
data16
push
jnp
push
pop
xchg
test
pop
repnz
out
insb
inc
insb
pop
pop
cli
out
loope
xchg
inc
and
outsb
popf
loopne
mov
jae
sub
xchg
call
push
jle
add
jne
cld
inc
mov
movl
hlt
fiadds
in
hlt
mov
insb
cmp
inc
mov
loopne
in
or
sub
push
add
stos
stos
sbb
loope
pop
ret
jnp
mov
gs
stc
adc
mov
and
xchg
cmp
jl
orl
jmp
dec
inc
dec
loop
xor
sub
pushf
repz
bound
push
stos
daa
add
lods
incb
cli
sub
or
fisubrl
jnp
jae
ja
or
mov
dec
dec
inc
xchg
imul
jg
fdivrs
movsb
rcll
add
ljmp
or
mov
addl
les
and
adc
xor
es
iret
jecxz
xor
lock
hlt
iret
inc
inc
dec
in
cltd
dec
adc
jmp
nop
jg
loopne
movsb
mov
cmp
je
mov
cwtl
adc
nop
mov
pop
test
dec
xchg
cli
cmc
sub
add
clc
lret
sub
lret
dec
jbe
ret
pop
shll
inc
jae
inc
inc
adc
jp
cwtl
xor
jae
icebp
cmc
adc
pusha
and
sub
in
mov
cld
scas
shl
add
xlat
xor
fiaddl
cmp
fisttpl
mov
mov
jmp
adc
cmp
push
jmp
test
sub
insl
test
xchg
and
adc
mov
add
push
pushf
test
adc
jbe
ficoms
or
xor
hlt
sbb
or
in
loopne
pop
sbb
dec
mov
push
jl
pushf
fisubrs
nop
inc
ds
xchg
das
sbb
mov
outsb
push
jb
cmp
fistps
dec
jge
into
mov
out
cmpsb
insl
dec
pop
inc
outsb
dec
outsb
enter
mov
jmp
cmp
dec
divl
scas
test
or
fcomps
fsubp
movsb
inc
aas
insl
out
fldenv
lahf
subb
sbb
pusha
or
mov
jne
lock
pushf
inc
je
xchg
into
cmpsb
cld
and
sbb
or
sahf
aaa
lods
mov
sar
test
pushf
xor
push
bound
test
mov
cmpsb
jmp
shlb
sbb
lods
movsb
in
dec
stos
imul
dec
je
pushf
xchg
fcompl
pushf
jae
cmpb
xchg
test
ficomps
pop
inc
pop
adcl
xchg
jp
stc
mov
clc
add
sub
lcall
lahf
cli
test
mov
stc
ret
fimuls
imul
in
xlat
cmpb
fdivrp
push
adc
or
inc
pop
add
outsb
jl
xchg
xchg
bound
notb
mov
dec
jmp
js
and
and
dec
pushf
fimull
push
into
fincstp
mov
mov
adc
scas
jo
decb
pop
mov
idivb
add
adc
pop
lods
pushf
jle
arpl
adc
sub
int3
pusha
ljmp
movsb
xor
and
addl
push
mov
sub
add
push
fs
dec
in
sbb
jg
mov
adc
test
or
lock
inc
scas
hlt
aam
out
dec
and
stos
push
ret
xchg
sub
pop
lcall
icebp
adc
dec
add
repnz
ficompl
xchg
xchg
add
mov
cmp
xor
hlt
xchg
fwait
lahf
cmp
mov
loop
xor
test
push
push
das
ret
xchg
bound
add
or
mov
sti
lret
adc
cmp
sbb
xchg
std
mov
loope
jle
insb
lock
pop
hlt
test
push
in
je
mov
adc
bound
inc
dec
arpl
jle
js
js
or
mov
sub
in
push
inc
je
cwtl
xchg
and
stos
addr16
faddl
adc
repnz
rcrb
in
test
sti
add
movsb
outsb
stos
xlat
cmpsb
cs
data16
ss
loop
pop
cli
subb
call
push
repnz
test
xchg
mov
add
sbb
bound
outsb
std
sar
stc
cli
xchg
data16
dec
cld
and
or
and
mov
jb
pop
nop
movsl
dec
sbb
jb
fsubrs
fstpt
dec
mov
inc
cmpb
in
inc
in
lcall
icebp
add
mov
inc
dec
mov
xchg
sub
pusha
cmp
dec
call
in
cld
sbb
sub
repnz
push
test
pop
in
nop
imul
int3
mov
jbe
push
cmc
nop
js
fisubs
xchg
in
jmp
sahf
mov
repnz
faddl
xchg
shl
dec
out
jle
jb
dec
mov
addr16
lock
stos
xchg
test
jb
dec
je
push
pop
push
dec
mov
popa
outsb
mov
loopne
pop
cli
lret
andb
xor
xchg
adc
ret
iret
lcall
dec
imul
or
adc
jb
outsb
inc
push
inc
jmp
cmpsb
js
push
divl
in
fists
fildl
cli
shrb
xor
mov
popl
loope
push
sub
dec
inc
andb
adc
xor
js
xchg
sarb
pop
inc
arpl
pop
out
mov
pusha
pop
inc
mov
test
jp
pusha
sub
pop
stc
mov
lcall
loope
mov
add
sbb
repz
cmpsb
rorl
rcr
cmp
imul
out
push
mov
pop
jmp
imul
pop
cld
inc
fucom
xor
movsb
lahf
clc
sbb
js
xchg
bound
pop
jge
fmull
xchg
jbe
lock
and
shlb
pop
ljmp
or
ds
or
sahf
xor
loopne
push
fnstsw
xchg
push
inc
dec
push
jg
sbb
jb
pop
ja
mov
xchg
dec
cmpsb
push
and
pop
subl
popf
or
outsl
cld
push
es
fwait
data16
dec
sub
pop
adc
adc
in
pop
inc
lods
jnp
mov
jmp
test
cs
xchg
jb
push
push
dec
xlat
je
pushf
bound
mov
adc
push
pusha
popa
dec
lock
pushf
in
pushf
cmc
enter
pop
popa
notl
push
or
xchg
fdivr
dec
push
nop
cwtl
sti
xor
push
mov
cmpsb
xchg
ja
mov
pop
mov
xor
jbe
mov
adc
outsb
insb
inc
test
add
imul
sbb
ds
mov
pop
lods
mov
iret
mov
je
jae
imul
jns
dec
addb
mov
or
sti
push
imul
mov
nop
call
pop
sub
cmp
inc
push
adcb
add
and
call
and
add
inc
cmc
stos
pop
cmp
push
sub
stos
lret
mov
sub
loop
adc
shrl
xchg
mov
in
out
mov
mov
dec
fs
int3
xlat
out
pmaddwd
ds
sub
loope
sub
decl
add
jmp
imul
mov
insb
test
dec
lea
sub
fsubrp
bound
pop
sbb
std
scas
adc
rcl
imul
jo
lock
or
int
mov
cmpsb
dec
inc
mov
xor
jae
std
adc
mov
sbb
and
push
push
push
jnp
dec
mov
and
inc
movsb
jl
dec
pop
pusha
pusha
std
pushf
xor
in
mov
adc
jns
int
mov
xchg
push
xor
xor
mov
lock
jbe
jb
push
movsb
pop
dec
mov
inc
push
and
fld
sahf
fs
cmp
into
inc
int
dec
scas
xchg
test
inc
orb
ret
shl
cmp
out
or
outsb
arpl
inc
mov
push
lret
pop
cld
psubq
mov
pusha
fs
add
jmp
jb
loope
scas
jb
adc
imul
xor
clc
adc
in
sbb
jp
lahf
and
sarb
gs
inc
sbb
adc
cmp
popf
and
dec
imul
and
out
shl
insb
std
testl
jae
dec
mov
mov
push
xor
ret
jp
sbbb
mov
std
clc
test
fdivs
lcall
hlt
and
in
dec
adc
xchg
fcmovne
unpckhps
imull
cmpb
cmp
push
imul
xchg
mov
adc
lret
stc
pop
mov
mov
mov
fwait
push
fwait
push
dec
sub
arpl
push
and
stos
inc
in
rolb
fs
mov
nop
cmp
fsubl
insl
enter
enter
movsl
stos
inc
in
enter
shl
lcall
js
inc
dec
mov
into
fisubrs
nop
mov
cmpsb
pop
adc
pop
jg
and
outsb
fwait
jb
je
pop
push
in
pushf
in
je
add
loopne
negl
jmp
xor
repnz
inc
push
jecxz
in
leave
adc
test
fs
dec
fistl
xchg
or
lcall
mov
mov
mov
out
les
in
in
sti
mov
mov
insb
mov
sub
inc
xor
adc
inc
and
dec
nop
inc
lods
or
adc
imul
lea
mov
jno
dec
push
dec
ljmp
mov
jmp
pop
lock
cwtl
addr16
jae
icebp
into
xchg
dec
inc
and
scas
pop
fs
lods
mov
inc
dec
jo
pop
sub
dec
or
pop
into
mov
test
push
xlat
and
jnp
push
stos
shl
movsb
mov
push
dec
adc
clc
jb
jae
inc
subl
dec
or
cmp
stos
cmc
movsb
gs
mov
push
sbbb
mov
mov
cwtl
scas
movsb
add
clc
lcall
je
jb
inc
pusha
pop
fisubrs
dec
adc
andb
insb
shll
push
les
mov
xchg
fs
sub
outsl
pusha
cmp
rclb
data16
inc
and
popa
dec
xchg
pop
iret
fistpl
iret
ret
lods
mov
pop
shlb
imul
sahf
lcall
or
mov
loopne
loop
je
sahf
pop
mov
repz
in
pop
mov
out
or
jns
pop
js
push
adc
scas
insb
cmpsb
imul
cmp
in
jle
in
push
arpl
lods
adc
and
adc
cmp
mov
inc
sahf
cld
fcomp
xchg
cld
pop
rcll
xchg
pop
inc
jl
add
inc
out
subb
das
push
cmp
inc
sahf
or
fmuls
sub
in
inc
bound
or
adc
stos
mov
rcrb
enter
test
lock
cld
xchg
adc
and
in
stos
cmp
inc
xchg
dec
jo
je
jl
mov
xchg
adc
mov
dec
xchg
fisubrl
pop
outsb
pusha
jg
addb
ljmp
cli
inc
xchg
jg
pusha
cmp
jle
sarb
push
inc
cmp
outsl
pop
stos
push
push
inc
jnp
inc
orb
ret
or
stos
push
mov
in
cmp
inc
xchg
jl
cmp
out
jle
cmp
push
or
fwait
adcb
lods
inc
mov
xchg
dec
mov
daa
xchg
dec
stos
loop
xchg
cmp
ds
in
jg
push
push
push
sub
jnp
or
addr16
push
fs
dec
les
insb
pusha
addr16
pop
sub
pusha
fxtract
push
inc
inc
adc
nop
dec
shl
stos
lock
push
xor
andb
insb
sbb
xor
fdiv
push
inc
test
and
xchg
cmp
inc
mov
inc
je
aas
dec
rcrl
cwtl
xchg
scas
bndstx
fs
sub
repnz
mov
mov
sub
mov
je
cwtl
test
leave
out
and
es
push
sub
push
lods
pop
cmp
lods
pop
loopne
lods
mov
inc
ljmp
lods
test
fs
jae
and
iret
adc
movsb
stos
lods
push
xor
je
xchg
aam
je
es
pop
xchg
pushf
and
popa
jae
jnp
cwtl
jl
jo
arpl
mov
mov
lods
xchg
sub
insb
xchg
ljmp
jnp
mov
xor
mov
inc
rolb
cwtl
push
es
nop
xchg
or
push
mov
dec
int3
inc
xor
jnp
cwtl
cwtl
push
xchg
jo
pusha
sub
cmp
insl
js
fcoml
popf
inc
dec
jnp
cwtl
cld
push
movsb
popa
test
xchg
sub
push
shlb
lea
inc
rolb
cwtl
push
es
xchg
xchg
adc
mov
xor
jb
sarb
inc
pop
jnp
cwtl
and
insl
jno
cmp
jp
loopne
mov
cwtl
add
insl
stos
xchg
sub
push
rcl
inc
pop
jnp
mov
popa
jae
inc
jnp,pt
push
and
inc
or
cwtl
cs
outsb
xchg
enter
push
and
inc
ss
cwtl
fsubs
insl
cltd
xchg
inc
and
inc
es
cwtl
mov
inc
mov
mov
inc
jnp
cwtl
repnz
rclb
inc
mov
xor
in
pop
rcrb
cmp
dec
jnp
cwtl
add
mov
imul
nop
fs
mov
aas
es
jg
ljmp
cwtl
scas
es
das
xchg
outsl
and
ret
xchg
cwtl
sbb
rcr
cmp
insl
xchg
daa
shlb
mov
mov
mov
inc
xchg
andl
xchg
cwtl
push
sub
mov
sbb
es
cltd
xchg
push
sarb
inc
jns
ficoms
in
call
test
cwtl
mov
popf
ss
cmp
ret
lea
xchg
sub
mov
insl
push
in
xor
jbe
inc
xchg
test
imul
movsl
shlb
ja
mov
repz
mov
and
jecxz
and
mov
xchg
in
or
jne
fstpt
xor
cmpps
and
mov
xor
out
pop
jne
mov
xor
xchg
ret
and
mov
xor
xchg
in
shll
ror
xor
xchg
in
stc
mov
mov
or
sbb
insl
std
ret
shl
xor
xchg
in
adc
cmc
jne
mov
fs
push
adc
sub
mov
je
arpl
fsubrs
mov
pop
and
push
mov
and
sub
mov
pop
xchg
xchg
jo
stos
sub
push
mov
hlt
stos
movsb
push
je
mov
xor
jnp
stos
xchg
pushf
movsb
lods
adc
je
mov
jo
push
andl
test
repz
sarl
insl
movsl
stos
xorl
mov
sub
insb
xchg
and
xor
pop
add
nop
nop
mov
push
mov
call
adc
and
cmp
dec
popf
push
sbb
xchg
les
mov
test
pop
xchg
ret
rcrl
int
lods
rcll
push
mov
jmp
xor
je
push
mov
xor
pushf
xchg
sub
lods
pusha
mov
pop
inc
icebp
cs
mov
div
insb
pop
stc
lods
inc
arpl
out
in
cltd
int
lods
mov
add
xchg
xor
inc
test
push
sub
dec
es
xor
sub
aad
mov
mov
call
push
leave
mov
stos
pop
sub
hlt
pop
xor
mov
sbb
daa
adc
pusha
popf
testb
in
cld
pop
lods
stos
lahf
hlt
das
sub
cmp
add
push
push
adc
pop
or
or
inc
insb
or
pop
dec
and
pusha
jnp
std
insb
and
sub
movsb
fidivrl
das
hlt
jae
repnz
cmp
in
jecxz
mov
movsb
lahf
jmp
incb
lss
lds
adc
push
insb
mov
add
mov
incl
test
sbb
jnp
dec
mov
mov
xchg
sbb
repnz
or
pop
or
cmpsb
push
inc
dec
es
sub
add
push
enter
xchg
mov
dec
ret
mov
lea
fidivrl
mov
inc
mov
movsl
cltd
dec
jno
loopne
daa
push
add
adc
je
aas
inc
loopne
mov
loopne
xchg
sub
add
pop
loop
pop
dec
int3
cmp
mov
movsb
adc
xor
sbb
enter
cmp
shlb
test
popf
scas
push
push
dec
push
sarb
int3
push
pop
inc
pusha
fisttpll
lods
mov
lret
ljmp
outsl
cmp
icebp
movsb
pusha
jo
mov
test
cld
xor
adc
sbb
mov
cmp
cld
pop
xchg
pusha
mov
incl
or
jp
fs
mov
insb
xchg
fcompl
mov
pop
mov
rol
add
sub
adc
inc
xchg
inc
mov
add
add
lea
fcmovne
pop
xchg
int3
mov
ret
in
cmp
sub
cwtl
es
or
insl
leave
xchg
adc
in
and
xor
rcl
insb
dec
sbb
cld
mov
stos
pushf
enter
pop
rcrb
fsubrs
sbb
and
mov
pushf
stos
test
rolb
mov
mov
call
push
pop
or
movsb
or
scas
sub
out
mov
jp
mov
jno
cmp
inc
bound
in
aas
inc
shlb
add
xchg
cmp
lea
insb
mov
repz
fs
dec
mov
or
test
mov
pop
mulps
scas
mov
cmp
mov
out
push
icebp
into
stc
inc
xor
inc
adc
test
cmc
lcall
les
in
push
out
pop
xchg
fucomp
clc
cli
pop
stos
sub
add
adc
int3
mov
adc
mulb
adc
add
stc
cli
jecxz
mov
and
push
gs
sub
xchg
leave
hlt
leave
in
adc
in
push
fistpll
mov
add
add
jb
aad
jle
pop
mov
and
dec
or
dec
push
lcall
cwtl
or
bound
repnz
sub
mov
push
fdivs
sub
test
into
test
loope
push
pavgb
cmp
fldl
stos
fidivrs
dec
loope
xchg
sub
int
cmp
adc
lcall
push
lock
xor
out
sbb
xchg
xor
mov
lods
decl
add
ror
orl
jmp
xlat
and
das
movsb
pop
pusha
adc
outsb
adc
mov
rcl
mov
jl
out
cmp
into
push
push
xchg
cmc
out
sarb
lcall
pop
in
dec
cmp
inc
xor
pop
loop
inc
fsub
mov
ret
push
push
dec
ss
cmp
sub
inc
orl
push
orb
and
inc
fsubrs
or
lcall
insb
sbb
pusha
rolb
imulb
cwtl
jae
xor
add
mov
int3
adc
mov
pop
push
adc
mov
pop
fs
fistpll
jecxz
pop
sbb
jb
hlt
or
out
cmc
clc
add
es
mov
mov
les
out
mov
icebp
dec
cmc
push
or
aam
xchg
mov
jnp
dec
sub
out
or
jae
xchg
add
leave
pop
pop
scas
test
inc
adc
jo
mov
jo
mov
adc
pop
dec
sub
jl
inc
std
pushf
xchg
in
jp
pushf
dec
enter
call
cli
rcrl
push
jae
push
and
push
rolb
mov
inc
insb
bound
jg
pop
fidivrl
pop
xorb
xlat
cltd
shlb
cld
jb
repnz
out
outsb
sbb
into
cmp
and
movhps
xor
or
xchg
lret
test
and
fucom
cmpsl
sbbl
xor
stc
jge
cmc
and
jg
popl
mov
push
mov
cmpsb
sti
sbb
mov
cmp
cmpsb
aad
xor
fcoml
xchg
mov
xchg
stos
jecxz
sbb
out
js
or
cmc
or
mov
stos
xchg
inc
sahf
sub
jmp
pop
inc
std
int3
xchg
inc
pop
push
xor
stc
lcall
dec
inc
inc
imul
ret
xchg
adc
pop
and
mov
cmp
jne
push
sub
shlb
jb
pushf
rolb
xor
jns
pushf
jnp
dec
mov
inc
rorb
dec
lods
mov
sti
lahf
pushf
scas
fs
dec
addb
dec
popa
cmp
in
pushf
pop
jp
cmpsl
test
inc
dec
jb
rolb
pop
mov
cmp
add
movsb
jne
inc
mov
push
pusha
push
inc
dec
dec
mov
pushf
xor
dec
push
dec
inc
dec
in
or
imul
fs
adc
and
imul
jae
subl
xorl
outsl
je
fs
inc
std
mov
cmp
mov
mov
dec
push
hlt
inc
pusha
lret
dec
fcoml
add
insb
pop
pop
xchg
mov
subl
jo
jnp
xchg
push
into
mov
or
push
sub
dec
inc
xchg
sbb
xchg
xchg
das
sbb
pusha
insb
bound
xchg
andl
mov
addr16
push
test
dec
or
popa
pop
outsl
data16
mov
insb
hlt
jl
pop
pop
in
testl
xchg
rcrb
rorl
push
xlat
in
fnsave
in
pop
add
inc
lock
dec
fidivl
pop
imul
push
mov
addr16
or
je
inc
hlt
push
fs
jp
jo
or
imul
sbb
or
xor
dec
add
xchg
test
dec
push
arpl
outsl
mov
mov
push
mov
addr16
xchg
cwtl
sub
jne
sbb
icebp
out
jl
daa
insb
jge
and
mov
pusha
inc
test
dec
sti
ja
sub
gs
mov
inc
jno
jmp
push
pop
addr16
dec
add
in
imul
outsb
loope
in
dec
xchg
cli
test
adc
in
pushf
mov
mov
ss
stos
add
pop
xchg
mov
nop
mov
xchg
jnp
in
sub
nop
adc
cmp
inc
dec
iret
jo
int
fildl
sub
push
cmp
pop
js
das
add
xchg
bound
xchg
outsl
sbb
addr16
test
mov
ja
xchg
xchg
cwtl
gs
push
out
inc
imul
xor
aas
popa
bound
es
mov
sbb
jl
cmp
les
inc
insl
dec
femms
cld
rclb
mov
ret
xchg
mov
jns
das
out
in
add
push
cvtpi2ps
push
push
bound
and
pop
inc
mov
dec
dec
cmp
insb
xchg
cmp
mov
adc
es
and
and
jo
outsl
imul
and
pop
dec
jmp
int3
in
adc
jno
jmp
sbb
xchg
xchg
jb
add
cmpsl
in
adc
bound
pop
mov
cmp
and
pop
mov
call
xchg
jne
inc
xchg
cmc
outsb
add
adc
xchg
adc
mov
popa
cmp
and
loopne
aam
jp
mov
cwtl
mov
mov
mov
movsb
and
rolb
xor
pop
gs
dec
pop
pop
pushf
pop
repnz
add
cld
sub
lcall
pop
int3
xchg
xchg
ljmp
inc
out
fmul
addr16
xchg
xchg
aam
aas
inc
cmp
sahf
fsts
je
aas
sbb
inc
sub
xor
dec
mov
popf
aam
inc
cwtl
mov
xor
mov
inc
rclb
jl
sahf
cltd
inc
xor
mov
sub
int3
movsb
lock
fs
lods
test
mov
push
popf
es
scas
and
in
adc
and
and
push
lods
int
lcall
les
outsb
jg
mov
push
cwtl
jne
xchg
push
jge
insl
hlt
lods
out
faddl
push
stos
mov
cwtl
xchg
pushf
jo
lods
sub
jo
shrb
jo
call
nop
hlt
insb
clc
and
xchg
add
or
or
adc
sub
xor
and
inc
jo
pop
sub
insb
nop
js
jl
adcb
mov
iret
sahf
and
and
cmpsl
sub
insb
test
lods
in
stos
iret
stos
sbbb
je
movsl
push
pop
popa
movsb
mov
mov
pushf
xchg
es
jg
xchg
jae
jno
orb
pushf
popa
sbb
cmp
pushf
xchg
inc
jo
inc
sub
scas
push
popa
xor
ljmp
and
movsb
ljmp
or
out
xchg
insl
frstor
mov
mov
lods
sub
mov
push
xor
addr16
jl
push
aad
lods
adc
pushf
xor
ss
or
push
repz
nop
xchg
in
lock
imul
lcall
daa
dec
and
adc
ficoml
pop
hlt
push
push
dec
movsb
cmp
lods
aam
stos
xorl
push
cwtl
adcb
xchg
daa
insl
lods
xchg
shlb
and
and
xor
cmp
aam
pushf
gs
loopne
nop
movsb
push
mov
pop
adc
movsb
cwtl
dec
adc
sub
adc
in
xchg
xchg
sub
in
pushf
nop
sbb
fwait
and
jo
cltd
sub
insb
cwtl
sub
shll
cmp
sub
mov
in
pop
xor
out
insb
insl
mov
cltd
mov
xor
xor
or
dec
inc
add
mov
sbb
stos
mov
shrb
je
mov
push
sub
outsb
aam
sbb
pushf
add
ret
hlt
xor
jg
dec
xchg
adc
ja
jmp
jb
les
mov
repnz
push
mov
inc
add
pop
aaa
and
add
push
push
adc
mov
sub
cmpsb
mov
cmp
movsl
xchg
inc
jo
dec
sub
insb
push
and
pop
sub
insb
insb
and
jl
fwait
mov
mov
pushf
xchg
xchg
outsl
sahf
ret
insb
movsb
and
lods
sub
lret
mov
xor
lds
sbb
mov
adc
mov
stos
xor
cwtl
xchg
mov
movb
lods
jns
imul
xor
jp
stos
jne
outsl
xchg
push
fs
sub
push
nop
ss
xor
sbb
sub
mov
mov
insb
xchg
adcb
and
jecxz
ficoms
jo
jle
pop
mov
cmp
sbb
sub
lret
mov
insb
jbe
bound
sub
mov
shlb
mov
xchg
stos
jb
insl
push
sub
cs
sbb
mov
sbb
push
xchg
jecxz
pop
xchg
mov
movsb
push
add
adc
jp
push
sub
push
pusha
mov
add
mov
das
cmc
jb
insb
aam
and
xchg
sub
mov
mov
sarb
mov
mov
outsb
js
xchg
pop
xor
fwait
mov
xchg
xor
push
or
test
jl
ret
bound
and
ror
scas
shrb
mov
jno
xchg
pop
aam
stos
xchg
mov
je
inc
imul
mov
fs
pusha
testl
jb
mov
adc
movsb
and
xchg
xchg
pop
pop
add
sub
cmp
insb
loope
ret
jo
sub
sbb
nop
xchg
mov
test
xor
xor
xchg
sub
loopne
xchg
sbb
push
xor
sbb
mov
adc
je
lock
scas
jl
jb
insb
sbb
movsl
repnz
shlb
sahf
fs
clc
xchg
negb
cltd
xorb
adc
call
data16
les
mov
inc
mov
out
pop
dec
mov
iret
lcall
mov
push
fstpl
jno
scas
movsl
daa
mov
adc
cwtl
xor
push
hlt
js
push
in
imul
cmp
inc
out
aam
mov
xor
insl
cli
and
mov
das
dec
pop
lea
mov
jb
xlat
es
mov
or
adc
mov
shr
ret
xor
mov
jo
movsb
popf
or
lock
sarl
pop
in
dec
call
push
push
adc
rcll
outsb
aaa
cmpsl
lods
popf
test
xor
test
jmp
addr16
jb
or
movsl
cld
add
popa
divb
iret
push
ja
adc
pop
cmp
xchg
hlt
pusha
movaps
sub
fmull
pop
mov
adc
adc
xor
push
xchg
sub
aas
mov
lods
mov
mov
inc
ja
fstl
inc
jno
mov
mov
gs
sbb
mov
dec
fwait
rcrb
jbe
ret
mov
movsl
xchg
xor
in
or
jbe
mov
push
decl
add
cs
xor
ja
jb
mov
fbld
cmc
fmulp
shl
mov
out
mov
mov
aam
push
lock
pop
into
jmp
and
popa
lods
jns
jo
mov
dec
cli
mov
jnp
pop
xchg
add
aad
nop
xchg
out
jne
clc
xor
push
sub
int
pop
pop
repz
popa
cmp
movb
das
lahf
mov
bswap
jnp
lret
cmp
sar
push
cmp
in
pop
jbe
cmp
cmp
ja
mov
push
jno
hlt
mov
js
sub
jl
insl
jl
cld
mov
fnstsw
sub
lods
mov
add
shrl
push
mov
out
xor
aas
jge
mov
jp
inc
cwtl
loop
aam
mov
and
jnp
sub
fimull
xor
mov
mov
pop
std
mov
mov
subb
add
pop
mov
mov
repnz
mov
push
int
pop
pop
and
mov
xor
push
cmp
mov
add
mov
adc
xlat
lea
fdivrl
cmpsl
scas
mov
movsb
jne
pop
cwtl
adc
aam
scas
repz
scas
daa
icebp
mov
scas
cs
sbb
int
scas
inc
cmpsl
sbb
in
scas
inc
cltd
pop
mov
adc
scas
and
movsb
arpl
mov
add
mov
adc
int
scas
and
or
roll
cmp
nop
repnz
cmp
cmp
jg
add
cwtl
cmp
push
mov
mov
push
ss
mov
lea
fdivrs
xor
enter
outsb
outsb
jl
lods
inc
sti
mov
cmpsb
stos
lods
movsl
cld
scas
out
inc
stos
arpl
lea
cmp
in
shlb
jmp
mov
push
push
fwait
movsb
fs
fstps
in
loopne
dec
aam
shll
sub
hlt
pushf
inc
aam
adc
adc
mov
aaa
adc
pop
cwtl
bswap
mov
jae
in
xchg
jae
popa
jne
cmp
stc
cwtl
xchg
dec
sahf
outsb
negl
insl
mov
push
and
mov
stos
push
cmpsb
nop
dec
test
dec
aam
adc
adc
dec
mov
xor
dec
nop
pop
xchg
xchg
aas
push
test
lcall
rorb
push
lods
ret
xchg
test
jb
dec
test
data16
addl
jb
mov
xchg
push
push
and
sbb
mov
mov
mov
jns
or
push
dec
and
test
mov
dec
nop
adc
adc
and
adc
pop
jae
or
cmpsl
inc
pusha
and
or
inc
pusha
xchg
imul
insl
jge
xchg
xchg
insb
jl
daa
imul
lods
rcll
js
addr16
jle
mov
xor
lods
aas
sub
andb
ds
bound
and
mov
jnp
das
jp
jns
mov
stos
ja
sub
sub
jge
stos
mov
mov
mov
push
call
icebp
jae
push
jl
pop
mov
mov
cs
dec
mov
xor
or
mov
mov
mov
inc
cmp
mulb
aad
jmp
fistps
adc
inc
ret
sub
xor
cmpsb
test
sub
pop
push
jns
movsb
adc
out
inc
rorl
push
xchg
repnz
pop
outsb
stc
jo
dec
stos
inc
xorl
pop
mov
cwtl
and
ss
movsl
orl
insb
fcoml
sbb
and
xchg
xchg
sti
int
aas
imul
jmp
fs
push
int3
icebp
jle
cmpl
movsl
cs
xchg
pop
test
in
clc
test
jecxz
stos
cmp
push
loope
and
hlt
pop
orl
add
dec
push
xchg
repnz
or
test
adc
push
pushl
lea
jmp
not
clc
bt
bt
pushf
neg
bt
call
push
call
sbb
int
ljmp
mov
nop
jmp
xor
mov
imul
adc
jl
cmc
cmp
jle
jle
mov
loop
lret
popa
cmp
sti
jle
sub
pop
movsb
sbb
icebp
jmp
mov
pushf
roll
xor
mov
push
mov
mov
or
loopne
inc
push
add
jmp
lock
shlb
xchg
hlt
insb
enter
push
xchg
icebp
add
cmp
sbb
mov
xchg
jle
sti
inc
test
and
daa
test
jb
xor
add
inc
pop
inc
inc
inc
repnz
add
mov
xor
lahf
arpl
imul
sub
pop
mov
sub
out
pop
lock
mull
in
aad
ret
sub
jg
mov
fcmovne
cltd
scas
fildll
out
inc
cmp
aas
lock
outsl
les
nop
enter
or
jg
addr16
aaa
mov
push
xchg
icebp
push
data16
mov
sbb
stos
xchg
in
xchg
sbb
cmpsb
pop
jo
mov
inc
mov
aam
test
or
clc
push
test
or
mov
leave
push
xchg
icebp
movsl
mov
mov
jp
data16
mov
xlat
daa
push
loopne
cmp
testb
clc
inc
fiadds
dec
movl
test
mov
jp
lea
cmpl
mov
das
gs
sub
hlt
les
test
lea
pop
fimuls
sub
cmpsl
adc
xchg
lock
xor
cmp
fadd
call
push
mov
mov
pop
out
inc
rcr
push
push
movsl
xchg
inc
xchg
cmp
scas
push
cmpsl
out
sahf
mov
movsl
mov
sub
pop
mov
dec
hlt
movsb
cmc
jge
outsl
or
insb
andb
loope
push
hlt
add
in
outsl
inc
mov
adc
in
loope
jnp
test
pop
mov
inc
jg
cmp
sahf
dec
jno
pop
scas
fisubl
jmp
push
aad
test
in
leave
push
xchg
out
push
data16
fwait
add
dec
aam
mov
adc
imul
xor
sub
mov
daa
mov
out
dec
lcall
or
stos
or
jp
mov
dec
fcmovb
shll
inc
movsb
inc
mov
ret
dec
orl
jp
sti
or
shl
push
xchg
xchg
gs
mov
pop
mov
cs
or
cli
inc
pop
xor
inc
fnstenv
push
movb
loop
push
or
or
lds
test
add
cmp
out
mov
iret
sub
mov
mov
jno
cmp
incb
pop
push
jg
cmc
pop
or
push
clc
fwait
pop
or
lahf
push
add
scas
xchg
adc
shll
mov
cmpsl
mov
jge
jl
je
mov
jne
inc
je
loopne
sub
xor
icebp
loope
imul
push
push
popf
icebp
enter
fisubrl
mov
mov
insb
fdivl
cmp
dec
aam
nop
push
xchg
out
sbb
imul
mov
xor
negl
ss
and
std
cmc
pop
cs
jg
push
call
aas
mov
ljmp
xchg
jns
mov
inc
aam
imul
push
shlb
mov
jg
fimull
sub
add
sbb
dec
scas
push
add
mov
sahf
sub
daa
int3
sub
int
iret
push
xlat
jmp
pop
call
sub
in
fcoml
data16
push
call
xchg
test
push
into
push
xlat
push
aaa
dec
adc
adc
clc
gs
daa
jl
xchg
jp
cltd
jl
loope
jne
sub
add
cltd
ljmp
dec
loop
jb
mov
out
repz
nop
inc
push
pusha
sub
xchg
inc
testl
and
and
divl
adcl
psadbw
test
dec
mov
fwait
pop
xor
cmpsl
and
iret
and
push
lret
inc
push
xchg
in
int
mulb
icebp
repnz
pusha
mov
lea
jo
jne
jmp
push
call
jmp
xor
mov
les
mov
add
movsbw
cmc
mov
pushf
test
cmc
cmpsb
jmp
pushl
pushf
mov
lea
jmp
push
call
push
call
out
js
sbb
mov
jb
pop
in
divl
inc
movsl
adc
je
dec
fisttpll
mov
sub
sahf
and
push
and
shlb
enter
cmp
mov
push
sub
fst
test
and
cmp
push
mov
inc
mov
pushf
hlt
fs
push
enter
test
cwtl
push
xchg
in
and
jns
call
mov
adc
mov
inc
ret
cmp
rcrb
xor
imull
mov
mull
and
mov
jecxz
and
test
or
cmp
push
mov
ret
jg
dec
negl
dec
inc
div
cmpsl
mov
fists
in
sbb
cmp
xor
mov
add
test
sbbl
pop
xchg
adc
adc
rcll
sub
js
push
call
or
fistl
pusha
rorb
stos
adc
mov
aam
scas
pop
jl
jge
mov
mov
push
imul
fstps
insb
mov
lods
push
outsb
mov
or
cwtl
popf
adc
mov
dec
ret
sti
cmpb
jnp
cmp
je
std
sahf
fs
std
ljmp
gs
or
test
addr16
adc
mov
imul
sahf
mov
xchg
xchg
or
cwtl
and
rcl
loopne
test
test
pop
les
xchg
adc
lcall
or
pusha
mov
ljmp
dec
lods
insb
das
jge
jbe
jbe
inc
mov
testb
mov
lea
aam
lcall
loopne
or
jl
daa
pushfw
notb
lods
xor
cmc
xor
sub
and
pop
pop
ja
jp
jo
arpl
push
mov
mov
mov
jne
cmpl
push
push
push
push
insl
loope
mov
add
xor
shlb
xchg
or
push
xor
enter
pusha
fstps
cmp
and
adc
pop
add
sbb
fcomps
orl
lods
fnstsw
jno
add
lds
jle
popa
mov
add
add
xor
adc
scas
js
jns
cmp
dec
insl
jb
push
mov
into
lods
inc
xor
pop
js
inc
loope
test
das
fwait
pop
jae
addr16
mov
mov
mov
jb
inc
cmp
and
xchg
mov
aas
mov
je
cmp
fisttps
add
es
or
into
pop
mov
sbb
sbb
xchg
cmp
sbb
rclb
push
mov
mov
cmpsb
push
insl
rcl
arpl
and
inc
in
js
int
add
mov
inc
inc
imul
leave
xor
jne
dec
movsl
and
jmp
xor
call
cmp
jle
pop
and
push
stos
and
cmp
shrb
mov
inc
mov
jno
aad
inc
je
or
mov
aad
aaa
ret
xchg
fs
sub
rorl
xchg
xchg
call
pop
lret
mov
jb
mov
push
clc
pop
or
sbb
lods
clc
push
push
sub
push
push
loope
mov
jmp
add
jbe
jo
stos
sbb
mov
xchg
pop
xchg
call
push
mov
ja
dec
push
xchg
jmp
cmp
lock
jnp
ret
adc
cli
mov
gs
jmp
add
repnz
insl
pxor
jmp
in
test
mov
pcmpgtw
in
pusha
mov
dec
pop
shl
lds
loop
xor
out
sahf
shlb
orb
xchg
jmp
mov
bound
push
dec
test
adc
sqrtps
aas
xchg
negl
cmp
inc
lret
dec
iret
push
push
xchg
call
add
sub
std
mov
stc
jecxz
ret
cmp
cmp
cld
gs
mov
dec
jns
cmpb
dec
cmpsl
jmp
mov
xor
jp
mov
loopne
andb
test
push
add
cmc
mov
stc
bound
outsb
push
add
mov
je
pop
mov
ljmp
or
dec
dec
insb
dec
mov
dec
mov
ss
add
inc
cmpsl
and
jle
loopne
mov
mov
xchg
and
sarl
popa
subl
arpl
call
push
repz
call
inc
mov
incl
lahf
mov
lahf
movzbl
lea
mov
movl
call
jp
pop
dec
aad
pop
mov
fcomip
xchg
shrb
fistpll
add
nop
and
out
jg
xchg
push
lahf
cld
push
lret
cmc
jp
pop
fistpll
insb
inc
testb
call
dec
cmc
sub
xor
and
rep
stc
inc
cmp
in
das
xlat
mov
pusha
daa
in
push
loopne
and
mov
jmp
xor
xchg
fsts
fstl
push
mov
push
jle
outsb
outsb
ret
fisubl
outsb
out
push
xchg
out
mov
cmp
idivl
in
seto
dec
cmp
dec
ret
push
and
shll
cli
pop
iret
push
mov
ret
mov
dec
mov
mov
cmpsb
stos
sti
arpl
lcall
fisttps
or
push
pavgw
xchg
and
scas
les
xor
or
adc
sub
mov
jle
cmp
call
and
adc
cli
or
fs
mov
and
and
sbb
pushf
or
xchg
cmp
adc
dec
cmc
cli
dec
or
addb
sub
sbb
pushf
xlat
in
jl
out
jae
lods
push
inc
mov
lds
aad
leave
fwait
dec
outsb
roll
pop
aaa
lahf
andl
and
pop
fwait
dec
iret
pusha
lock
cmp
imul
cld
js
pop
fmull
add
adc
jb
fwait
adc
xor
inc
stos
aaa
xchg
in
jb
cmp
and
cltd
jns
push
loop
cmc
fistpll
sub
add
andb
mov
dec
arpl
pop
in
push
mov
dec
shl
jp
es
mov
xbegin
and
push
mov
orl
arpl
cmp
xchg
sbb
cmp
inc
lahf
in
pusha
jne
mov
lret
push
out
add
ret
mov
xor
mov
ja
cmp
sub
mov
xchg
adc
lods
and
popf
inc
cwtl
mov
xor
mov
stc
adc
add
xchg
in
mov
scas
add
jl
lahf
inc
mov
push
mov
xchg
repnz
or
fidivs
mov
scas
xor
fmuls
and
call
mov
sub
aam
les
xor
pop
or
sbb
int3
rcrb
es
inc
jl
imull
push
xlat
push
xchg
in
je
fiadds
add
adc
pop
or
inc
pop
fmul
shlb
ret
adc
cmp
push
mov
push
movsl
sub
ss
mov
sbb
or
sub
iret
pop
pushf
bound
mov
xor
push
xchg
jecxz
or
push
call
xor
aaa
push
call
cmp
mov
adc
pop
pop
or
pushf
std
jle
fstpt
incb
hlt
shlb
cmp
inc
into
sub
loope
ss
ret
xchg
movsb
sbb
xor
mov
cltd
push
mov
cld
subb
dec
push
loopne
jne
in
mov
insl
fsts
insb
outsb
push
je
out
ret
and
negl
xor
inc
ret
add
xchg
lcall
andb
lods
into
incb
ds
int
test
add
add
mov
push
outsb
dec
into
inc
mov
xchg
sbb
xchg
jecxz
leave
dec
push
call
and
fnstenv
mov
cld
out
mov
xchg
add
test
ss
xchg
pop
or
je
pop
jmp
lds
jge
cmp
pop
jmp
mov
jp
jmp
cmp
add
fcomip
dec
xlat
add
add
push
test
inc
pop
mov
scas
sbb
sahf
push
xchg
push
xchg
jecxz
jnp
out
mov
cmp
push
mov
mov
jb
cmp
and
and
aaa
in
xor
add
fstpt
jae
cld
roll
mov
dec
xchg
lods
xor
incl
sti
lods
ret
iret
test
and
mov
jns
pop
mov
rorb
sbb
and
mov
lods
add
hlt
shlb
dec
fsubs
loop
data16
pop
call
sub
pop
add
addb
sarl
cmp
push
jl
pop
sub
inc
mov
out
mov
sub
add
inc
mov
mov
daa
pop
les
xchg
xor
shrl
add
inc
xchg
cmp
or
jnp
into
movsb
jge
sub
stos
pop
mov
loop
dec
dec
add
add
bound
sbb
jmp
roll
and
push
cmpsb
xor
jmp
jecxz
jle
pop
in
movsb
in
lret
lock
push
pop
into
inc
push
mov
push
push
xchg
loop
stos
shrl
sbb
adc
push
stc
loop
aas
mov
jg
stos
sbb
sbb
mov
leave
cmp
jns
loopne
mov
jo
push
inc
cmp
insb
in
pop
iret
mov
jmp
adc
bound
imul
xchg
cltd
icebp
sub
fwait
call
movsl
push
in
data16
cmp
movsl
jg
cltd
ljmp
xchg
bound
adc
add
sub
jle
cmp
adc
dec
lret
xchg
loope
jecxz
push
call
push
add
push
inc
push
dec
xor
cs
insb
add
lea
inc
add
sar
cmp
xchg
shr
lahf
mov
or
setae
mov
clc
cmp
push
shl
inc
shl
ror
mov
jmp
push
call
out
pop
stos
and
push
ficompl
push
hlt
fdivp
push
loop
loopne
out
les
inc
xchg
sbb
inc
leave
cmp
int
xchg
test
jg
xor
mov
mov
or
call
push
leave
push
jnp
sbb
sub
inc
fwait
jb
cli
adc
frstor
push
rorl
movsl
sbb
push
xchg
loopne
and
into
cs
lret
push
imul
pushl
dec
stos
and
and
xchg
inc
jle
xchg
cmpsl
decb
int3
enter
movd
jno
push
imul
mov
mov
dec
out
aas
mov
add
or
roll
inc
cmc
movsb
jmp
scas
add
enter
add
inc
mov
push
mov
jnp
pop
adc
out
pop
shrl
scas
daa
orl
sbb
lods
shl
jne
addr16
pusha
sahf
mov
pushl
arpl
dec
inc
mov
loop
daa
into
cmp
leave
fbstp
sub
outsl
mov
adc
mov
xchg
out
sbb
push
fwait
xchg
arpl
sbb
add
in
dec
inc
je
movsl
gs
loop
cs
pop
jg
movsl
or
sub
push
lock
push
ss
jp
adc
leave
xor
insl
int
xchg
fistpll
pusha
loopne
dec
shlb
sbb
into
inc
shlb
out
dec
rorb
or
mov
out
out
sub
jno
cli
jle
xor
shlb
push
pop
in
add
mov
cmp
ficompl
lods
or
roll
repnz
aam
es
pop
roll
sbb
dec
xlat
pop
jmp
ret
pop
xchg
add
push
xchg
fildll
sahf
push
call
dec
pop
inc
cli
outsb
push
call
adc
pop
inc
int3
push
call
pushl
lea
je
call
push
call
addb
in
jne
and
sub
repz
shrl
mov
cwtl
scas
setg
aam
jp
fstpl
xor
scas
aaa
xor
out
ljmp
filds
adc
dec
ljmp
dec
call
out
pop
xchg
or
pushf
repnz
adc
sub
fisubs
mov
pushf
clc
insb
fdivl
sbb
pusha
push
xchg
fidivs
aad
movsl
mov
or
in
adc
mov
int3
jo
ljmp
lcall
cs
and
outsb
cmpsb
ljmp
ret
adc
out
dec
iret
jbe
jns
popl
add
push
stos
loop
imul
insb
pushf
call
or
inc
dec
cmpl
imul
pop
orb
adc
mov
jnp
jl
bound
sub
cmp
es
in
ret
jb
inc
pop
ret
cmp
or
mov
xor
cld
pop
les
frstor
xor
push
fwait
sub
xor
mov
push
fcoml
dec
int3
xor
pop
loope
mov
mov
pop
shll
lods
add
xchg
jp
cwtl
inc
inc
mov
loope
shrl
cltd
and
push
int3
inc
lods
sbb
clc
andb
xor
sub
inc
roll
or
jl
xchg
orb
sub
les
mov
sub
mov
pushf
test
pushf
lea
je
xadd
mov
sbb
rcl
movzbw
shl
add
and
test
rol
mov
pushf
test
cmp
jmp
lea
je
push
sub
cmp
cmp
mov
pushl
jmp
push
call
and
loop
fucomi
int
les
js
cld
xchg
inc
scas
mov
pop
mov
imul
lret
pop
clc
addr16
out
mov
cmp
push
scas
push
mov
pop
clc
jnp
mull
push
lahf
lock
mov
sbb
into
dec
xlat
and
hlt
gs
pop
int
xchg
popf
cmp
push
xor
add
pop
inc
mov
mov
pop
loopne
enter
push
mov
mov
lea
lea
lea
push
mov
pop
bswap
movzbw
mov
pusha
mov
movb
pushl
ret
ds
cmpsl
or
sbb
fdivp
jns
inc
mov
mov
cmpsl
sbb
les
mov
push
imul
pop
jo
push
xchg
sbb
addb
enter
mov
mov
inc
repz
sub
jne
nop
hlt
sub
aad
xchg
mov
push
test
jb
pop
pop
mov
mov
lods
pop
or
in
gs
jno
sub
and
sub
lods
cmp
push
xchg
fcmovnb
xlat
sub
repnz
mov
lods
xchg
lods
or
sub
dec
mov
test
inc
mov
push
jle
mov
jo
enter
sub
scas
cmp
sbb
js
out
and
lret
adc
cmp
xor
fwait
sarb
xchg
dec
rorl
jns
jb
xchg
test
cs
stos
adc
inc
mov
clc
pop
mov
es
sub
fildl
out
or
inc
xchg
adc
movsl
inc
push
call
ret
jg
cmp
push
call
xchg
push
call
push
push
call
pop
pop
call
stc
scas
addr16
std
adc
push
dec
push
mov
mov
xchg
mov
xlat
sbb
leave
sub
or
mov
movsb
inc
xlat
inc
xchg
sbb
aas
popf
push
ficompl
adc
clc
lahf
aam
imul
sub
pop
enter
sub
fiadds
aad
cmp
xchg
pushf
out
adc
cwtl
cld
test
push
fdivrl
enter
pop
mov
mov
cli
dec
cli
cld
std
pushf
xchg
in
jmp
int
jecxz
mov
pop
xchg
jae
je
dec
rol
add
jle
adc
jae
in
sahf
add
mull
and
imul
call
out
lock
sub
mov
sti
add
popf
inc
inc
pop
sub
mov
imul
jne
sub
or
call
frstor
clc
test
xor
test
jns
xchg
flds
push
sub
mov
pushf
push
pushl
ret
push
call
mov
jns
add
bound
adc
jnp
das
mov
loop
enter
movsb
and
test
lcall
mov
mov
daa
dec
mov
cld
popf
dec
add
sub
rcl
fcomp
push
mov
sti
outsl
xchg
idivl
xchg
stc
into
in
push
in
popa
lds
sub
mov
outsb
rolb
sbb
jge
or
int3
inc
enter
movsb
adc
adcb
fmull
dec
xor
xchg
jmp
lods
or
inc
cmpsb
das
cwtl
adc
pop
movsl
movsl
inc
mov
add
pop
enter
jmp
test
icebp
cwtl
adc
jns
inc
dec
in
into
data16
inc
call
outsb
inc
mov
fidivl
xor
dec
arpl
dec
fdivs
xchg
std
pop
lods
dec
clc
dec
cli
sbb
or
ss
or
xchg
fadds
pop
cmpl
or
inc
leave
push
scas
and
in
mov
and
fiadds
bound
cmpsl
mov
ss
push
adc
loop
sub
fdivs
or
push
push
push
lods
pop
jae
jnp
sbb
jg
add
inc
and
or
mov
aam
push
arpl
xor
mov
cmp
popf
inc
mov
inc
outsl
out
test
jns
or
call
clc
dec
scas
push
mov
cmp
out
data16
xchg
push
call
sub
xchg
add
and
or
pusha
jle
sbb
and
push
and
xor
pop
xchg
jmp
sbb
fwait
shll
inc
and
xor
rorb
enter
je
dec
stos
and
test
lock
jl
xchg
inc
mov
mov
dec
cltd
incb
addl
notb
leave
mov
mov
fwait
setns
pop
jo
jecxz
stc
mov
dec
movsl
xor
in
push
xchg
xlat
fsubr
add
je
add
mov
mov
mov
movw
movw
pushl
ret
push
call
test
jae
and
push
push
mov
lock
into
es
pushf
sbb
cwtl
jg
inc
push
or
les
mov
addr16
jno
aaa
mov
jno
dec
xor
mov
insb
sub
jnp
fcmovb
add
inc
les
inc
push
movsb
push
cmp
pushf
mov
mov
shlb
iret
pop
ss
add
das
scas
sub
xchg
cmp
lret
imul
negl
js
aam
fs
jne
pusha
bswap
pop
movb
mov
pusha
mov
push
mov
lea
jmp
push
movl
push
lea
call
pushf
lea
jae
jns
cmp
stc
xor
pushf
pusha
pushl
lea
call
jmp
imul
xlat
popa
or
outsl
fsubs
pop
test
mov
inc
mov
and
ss
cltd
or
xor
aad
scas
daa
and
mov
lea
mov
jno
adc
cmpb
out
repz
xchg
xor
sti
pop
adc
dec
mov
xchg
mov
fs
and
jns
mov
jge
xchg
add
sub
or
mov
pop
mov
mov
dec
inc
ret
push
xchg
aad
sbb
xchg
dec
mov
jge
fldlg2
repz
xor
loopne
mov
add
mov
dec
shlb
cld
push
test
and
push
cmc
push
cmp
les
movsb
fwait
sub
xor
adc
movsl
xchg
mov
and
xchg
aam
mov
lret
xor
inc
mov
test
mov
lret
fisttpl
sarb
jo
sub
add
roll
sub
pusha
lds
jno
gs
xor
xchg
aad
nop
mov
inc
xor
adc
dec
mov
bound
inc
mov
mov
hlt
and
testb
mov
pop
and
fwait
mov
mov
iret
aam
pusha
adc
dec
loop
pop
pop
cmp
jle
or
stos
sar
xchg
inc
pop
mov
xchg
mov
cmp
adc
push
clc
pop
into
ds
lret
pop
pop
loop
adc
lods
adc
jno
xchg
sar
push
and
movsl
cltd
jae
call
adc
or
int3
mov
sub
scas
jmp
adc
sti
jl
push
lret
push
cmp
and
adc
testl
push
jg
and
into
adc
leave
fisttps
data16
inc
mov
ss
gs
pop
pop
mov
fsts
arpl
lea
je
bt
add
stc
cmp
cmc
call
and
imul
pop
jb
push
loope
stos
sbb
imul
aad
add
pushf
insb
fwait
arpl
sub
in
cmp
ja
xor
lahf
daa
mov
lods
push
hlt
sub
mov
cwtl
adc
outsl
and
cmp
push
pop
jnp
dec
xor
stc
or
aad
dec
dec
or
cmp
stos
decb
sbb
mov
mov
mov
dec
iret
loope
fwait
push
ja
dec
mov
cmpsl
sub
cmpsl
sti
push
xchg
shr
std
adc
mov
adc
pusha
movw
lea
jae
pusha
call
push
call
jbe
arpl
dec
mov
sub
or
dec
mov
mov
mov
gs
addr16
jne
dec
fidivrl
cwtl
aas
xchg
mov
jo
cmc
sub
and
out
push
lock
xchg
popf
mov
repnz
pusha
inc
or
mov
out
push
mov
adc
les
or
insl
fstl
ret
dec
mov
jns
repz
push
push
adc
in
mov
inc
ljmp
mov
test
sub
aaa
push
jne
mov
mov
add
rolb
shlb
xor
loop
fcomps
or
stos
xchg
mov
cwtl
sbb
xchg
jne
gs
repnz
push
inc
lret
sbb
popf
int
adc
push
push
cmpsl
push
xchg
cmp
or
cmc
clc
mov
idiv
pop
popa
rcrl
mov
aas
and
outsb
cwtl
bnd
rorb
mov
or
cld
sub
lock
aas
lods
or
add
push
repz
lret
rcrb
mov
xchg
add
imul
xchg
arpl
push
call
ljmp
push
ret
arpl
pop
mov
sti
push
inc
negl
fwait
inc
mov
sub
sbb
pop
mov
addr16
sub
std
rcrl
xor
push
mov
jne
lahf
mov
push
or
xchg
add
sbb
jbe
call
bound
push
iret
dec
push
ds
loopne
mov
scas
add
xor
add
stc
or
cmp
lea
jns
jb
jno
cmp
test
push
cmp
pushf
pushf
pusha
pushf
lea
jae
movsbw
mov
mov
pusha
lea
jmp
or
mov
jb
jo
inc
mov
add
or
mov
cs
loop
test
test
movsb
xor
add
packsswb
pop
shlb
lahf
rcrb
add
sub
iret
xchg
outsb
jb,pn
jg
push
stos
pop
jno
push
jmp
daa
push
iret
sub
add
out
dec
call
mov
movb
push
dec
ret
es
dec
push
xchg
rcr
jmp
pusha
push
mov
jmp
jmp
lret
dec
shlb
cmp
outsl
lock
add
es
jbe
or
cmp
and
cmp
fidivl
pusha
add
jecxz
mov
and
lret
clc
pusha
pop
cwtl
pop
in
popf
dec
les
add
sbb
add
push
mov
or
rcll
push
cli
fs
or
out
inc
push
mov
jb
ds
cmp
dec
sahf
incb
xchg
sarb
mov
sbb
loopne
ja
pop
out
pop
mov
mov
pusha
icebp
dec
lds
and
add
lret
test
mov
and
leave
andb
sahf
jmp
insl
adc
out
loopne
xchg
sbb
loopne
xchg
lret
cmp
mov
or
fwait
jbe
pushf
push
lahf
pop
mov
test
dec
xor
inc
scas
mov
pusha
jecxz
js
lret
cmp
push
xor
sub
cld
lods
ret
cmp
or
int
popa
dec
out
lret
loopne
test
sbb
call
inc
xchg
push
xchg
iret
lret
test
mov
into
xor
mov
and
rcrb
inc
jbe
lea
es
adc
stc
mov
outsl
imul
cmp
add
fwait
jne
sahf
mov
cld
sub
jp
cwtl
stc
iret
jp
dec
stos
mov
cs
mov
pop
outsb
push
fdivrs
call
insl
clc
or
pop
xchg
packuswb
pop
ret
dec
mov
into
pop
jb
push
call
rclb
ror
push
clc
bt
not
test
push
neg
jmp
add
push
imul
push
push
pop
int
ret
xor
add
pop
leave
out
int
sti
adc
sbbl
ds
mov
dec
out
jnp
or
fwait
arpl
dec
not
xchg
sarl
or
popf
mov
std
push
ja
add
mov
jle
scas
mov
ret
cmpsl
or
daa
pop
jae
jo
aaa
mov
inc
pop
outsb
pop
test
repnz
mov
lret
push
xchg
into
mov
in
jo
mov
fcmovb
inc
aam
xor
fisubrs
insl
out
icebp
push
add
ja
vpmaddwd
dec
subb
xchg
adc
ljmp
xchg
xorl
imul
mov
pushf
fstpl
stos
lcall
xor
adc
pop
lret
push
cld
inc
push
pop
push
push
mov
jle
mov
arpl
pop
lods
cmp
cmp
int
push
xchg
int
cli
dec
into
inc
inc
mov
push
adc
icebp
fcomi
inc
iret
sub
adc
pop
fiaddl
push
scas
adc
decl
add
sbb
add
shrl
sub
or
into
push
xchg
and
in
add
mov
xor
fsin
cld
je
fdivl
dec
decb
inc
enter
es
aaa
incl
or
stc
mov
dec
aad
lea
xor
xchg
int
stos
int3
or
or
std
sahf
xor
dec
xor
mov
leave
inc
lret
pop
loopne
cwtl
enter
sbb
add
out
test
lcall
dec
pop
and
sarl
in
push
add
jmp
cwtl
mov
sbb
ret
adc
xchg
dec
scas
adc
add
push
dec
inc
das
popw
cmp
aaa
cmpsl
dec
leave
add
popf
dec
sarl
add
dec
gs
cmc
jns
cmp
xor
call
xor
inc
xchg
mov
call
mov
test
jecxz
fsubl
push
or
mov
clc
pop
lret
adc
cltd
neg
fnstsw
pusha
std
sub
out
xchg
mov
jle
aaa
pop
xor
or
fistpl
mov
sub
std
add
jmp
adc
subb
dec
cmc
dec
arpl
sub
jne
lods
mov
stos
cmp
pcmpeqd
inc
mov
push
ja
jno
jno
add
and
lret
testb
push
xchg
int3
push
arpl
push
movsl
and
pop
xor
scas
les
dec
pushl
aas
cmpsb
pop
ja
inc
movl
fisttps
push
xchg
lret
cmp
in
jns
call
pop
fcomps
inc
lock
sub
repz
mov
aad
mov
lds
ja
inc
negl
test
cmp
push
test
aaa
mov
sarb
xor
jmp
shll
inc
ljmp
sbb
out
lock
inc
jp
push
cmpsl
popw
sub
or
pop
sbb
mov
lret
sbb
lret
movsb
mov
push
call
insl
push
or
repz
or
add
ret
in
xlat
push
shrl
loopne
mov
adc
push
loope
rolb
xchg
jge
lcall
add
insb
cs
pop
mov
cmpsl
push
xchg
outsb
fs
mov
inc
shlb
and
inc
mov
iret
shlb
jo
push
sbb
push
icebp
mov
lret
mov
and
and
hlt
push
add
ja
cwtl
dec
dec
and
add
das
fwait
out
push
fistpll
daa
fwait
sti
push
xchg
lret
pop
pushl
fs
subl
insl
lret
pop
lret
sbb
cmpsb
ds
imul
stc
and
cmpsb
enter
mov
aaa
xchg
out
inc
jnp
cmp
scas
pop
loope
push
cltd
sub
cmp
into
ds
stc
test
test
dec
and
out
outsl
movl
repz
mov
ret
xchg
jmp
sbb
dec
mov
lret
sahf
lock
lods
cmp
sti
push
mov
fwait
sbb
push
xchg
jge
pop
scas
or
loop
mov
mov
push
ja
add
in
jbe
out
fstpl
and
stos
stos
scas
shlb
xchg
aas
out
add
shrb
int3
push
mov
add
push
imul
js
lahf
sub
adc
jg
and
cmp
loopne
xchg
jns
dec
arpl
std
pop
and
cmp
fistpl
ds
add
mov
inc
inc
pop
mov
lret
dec
mov
out
lret
push
push
xchg
leave
loope
push
sbb
aad
inc
push
les
jp
dec
mov
rcrl
cmp
aaa
mov
mov
jb
lret
add
push
sahf
pop
test
mov
cmp
mov
imulb
dec
jns
adc
jmp
push
cli
xchg
xchg
inc
gs
insl
xchg
xor
decl
and
sti
orl
shlb
mov
adc
sub
or
into
roll
push
pusha
ret
or
ret
loop
mov
lcall
mov
mov
out
inc
mov
push
insl
push
call
rcrl
or
inc
jl
add
push
call
jmp
mov
or
and
adc
mov
repnz
shrb
nop
adc
adcb
sbb
orl
out
hlt
dec
inc
mov
outsb
cmpsb
fbld
call
xor
out
dec
dec
je
lcall
movsb
cli
out
ror
insb
push
jnp
insl
aas
enter
subb
popf
adc
iret
in
jg
cmp
enter
mov
pop
nop
loopne
ljmp
sub
stc
fnstsw
ret
imul
loopne
jg
cmp
mov
jbe
pop
mov
fimull
pop
push
xchg
cmp
push
call
sub
xchg
or
jl
mov
mov
js
jb
mov
adcl
pop
adc
push
inc
mov
ljmp
push
int
xchg
and
lahf
mov
jnp
sahf
enter
xor
mov
add
add
xchg
notl
jae
dec
in
adc
xchg
mov
xchg
std
imul
cmp
mov
mov
insl
icebp
push
xchg
loopne
or
xchg
sbb
adc
fists
addr16
dec
into
dec
mov
jp
je
bound
jp
addr16
mov
aas
js
cmp
stos
decl
lret
out
mov
cwtl
mov
and
mov
icebp
dec
push
lcallw
imul
fstpt
cmpsl
jmp
pop
fbld
arpl
je
popf
add
pop
lock
cmp
jae
cmp
push
mov
adcl
xchg
mov
jne
cmp
data16
push
loopne
pop
inc
lret
ud2
jb
mov
pop
movsb
push
or
loope
push
or
push
jns
push
mov
or
xchg
stos
sahf
fs
imul
push
xchg
pushf
ss
adc
incb
xchg
sbb
fwait
sbb
arpl
push
stc
dec
lods
cmp
rcll
rcl
push
call
cmpsb
mov
imul
push
pop
push
clc
cmpsl
or
icebp
idivb
adc
movb
shll
jnp
xchg
mov
jnp
loop
inc
mov
rcll
and
arpl
push
les
stos
or
into
push
xchg
mov
cwtl
mov
pop
iret
lahf
mov
jne
or
ret
cmpsl
or
push
enter
push
sub
repnz
ds
negb
inc
into
push
xchg
lds
pop
stos
and
add
fs
cmpsl
cmp
rcrl
nop
xchg
add
adc
dec
inc
cmp
pop
imul
mov
adc
arpl
shl
sub
in
cmp
insb
call
insl
sbb
inc
mov
movsb
pop
and
in
repnz
or
arpl
push
cltd
insl
sub
dec
or
jae
sub
or
daa
mov
adc
ret
push
xchg
adc
mov
nop
adc
rolb
cld
je
push
xchg
icebp
mov
mov
push
test
shr
cmc
cmp
push
movb
lea
je
jmp
jmp
push
call
inc
fsubl
or
pusha
jne
add
test
lds
scas
ja
call
jns
mov
push
lret
insb
lahf
jge
push
aas
popa
mov
out
lds
fwait
hlt
gs
jle
pop
or
add
andl
push
add
jp
pop
jnp
or
scas
xor
nop
sbb
movsl
jo
xchg
arpl
iret
mov
sbb
mov
jbe
fldln2
mov
incb
cmp
cli
push
ds
sarb
sbb
aam
mov
dec
test
dec
xchg
negb
add
dec
out
mov
fstl
pop
sbb
shl
xor
jecxz
stos
sub
xchg
push
xchg
les
dec
outsl
popa
fs
imul
add
cmp
or
sub
sti
xor
mov
je
sbb
or
cmp
xor
loop
fcoms
adc
ljmp
out
iret
pop
cmpsb
mov
dec
std
adc
enter
ds
rcrl
mov
ljmp
push
test
jb
pop
sub
imul
mov
mov
fidivrs
pop
repnz
out
js
adc
out
adc
pop
out
dec
jno
adc
lods
mov
call
sti
sub
repz
and
lcall
sub
les
movsb
or
inc
repz
ror
stc
neg
mov
ror
not
rcl
rol
sub
jbe
pusha
setp
rol
sub
call
bswap
jmp
jbe
xchg
and
xchg
pop
pop
popa
dec
pushf
add
std
xor
ja
ds
pop
fucom
adc
inc
imul
mov
push
cmp
iret
adc
pop
push
inc
mov
stos
xor
loop
mov
orl
jg
adc
mulb
push
iret
in
sahf
mov
inc
jl
xchg
sbb
mov
inc
repz
inc
xor
or
enter
push
ret
sbb
mov
movb
mov
pushl
ret
cmc
insb
icebp
jb
scas
jae
out
push
mov
adcl
jmp
hlt
push
scas
scas
pop
xor
jp
sbb
push
and
xchg
das
pop
ret
sti
js
scas
insl
ljmp
sbb
adc
mov
repnz
dec
lret
sub
mov
lret
xchg
insl
aam
fistpl
fwait
dec
bound
push
cmp
cmp
add
js
inc
scas
sub
xor
movsl
push
and
into
sub
outsb
ficoms
inc
push
xchg
rcll
push
call
xor
fistpl
adc
mov
dec
ss
and
xor
push
adc
lods
add
cmpsb
xor
aad
jnp
mov
ja
push
out
repz
mov
nop
imul
jbe
inc
cmpb
mov
xchg
cmp
int
sbb
mov
push
push
dec
fbld
mov
and
pop
mov
gs
scas
add
nop
jns
sub
fldcw
dec
push
dec
sub
int3
push
mov
xlat
pop
negl
push
sbb
aas
nop
add
dec
pop
test
imul
and
mov
scas
ret
inc
stos
and
rcr
xchg
fmulp
fisubrs
jns
pop
fcompl
or
cmp
sub
fnstsw
lret
push
movsl
repnz
xorb
mov
iret
aaa
aam
jmp
add
jp
jl
js
cmp
ja
dec
fimuls
and
out
pop
in
fldenv
testb
or
sub
add
data16
scas
add
push
xchg
rcrb
xor
and
xchg
clc
popa
rcrb
cmp
push
subb
cmp
lret
inc
stos
pop
sub
sarl
inc
inc
mov
cmpsb
cs
push
xor
cltd
add
xor
sbb
loop
sub
and
add
loop
in
pushf
mov
out
xor
ss
and
in
bswap
cmpsl
dec
in
andb
gs
das
mov
push
lcall
push
jbe
fcomps
or
xor
dec
rclb
pop
in
cld
pop
shrb
push
xchg
rolb
and
cmp
mov
subb
and
mov
xchg
cld
imul
xchg
adc
imull
cwtl
push
and
cmp
and
inc
cmpsb
xchg
push
and
ret
pop
xor
sub
pop
in
jmp
int3
hlt
fidivl
outsb
mov
aas
mov
nop
jo
pusha
cwtl
jne
jae
fadd
mov
xchg
or
and
insl
cmc
jge
push
aad
lds
cltd
sbb
xchg
mov
jp
inc
rcrb
sbb
ss
hlt
gs
imul
lret
scas
movsb
push
add
call
add
std
fstl
mov
aam
mov
pop
jbe
sbb
push
jne
dec
cmp
jecxz
xchg
sbb
call
inc
fs
sbbl
jg
and
bound
inc
rep
mov
cmpsb
or
fsubrl
cmp
mov
jnp
push
pop
dec
fbstp
out
sub
scas
orb
cli
jle
jb
mov
push
lahf
jmp
sub
push
das
adc
push
lea
inc
cmpsb
incl
cmp
fidivrl
js
pop
ljmp
roll
pop
push
mov
push
jnp
xor
cmp
mov
lods
sub
shrl
rclb
inc
ds
mov
popa
ret
ret
dec
or
sahf
adc
and
mov
add
int3
mov
les
addb
push
in
push
cmp
inc
out
cltd
or
sbb
int
jne
aas
mov
call
aaa
nop
inc
out
loopnew
fldt
cwtl
sbb
pop
adc
ret
insl
cmp
aas
and
fisubrs
sbb
mov
ss
inc
lret
daa
pop
xor
stos
or
and
scas
cmp
mov
movsl
bound
adc
cmp
sub
and
cmpsb
aam
sub
outsl
dec
jg
lea
or
jecxz
fwait
sarl
pop
xchg
sahf
jo
dec
sbb
push
sub
nop
jg
cltd
sahf
daa
iret
mov
pushaw
mov
leave
stos
das
add
add
sub
jp
push
mov
cmpsl
and
clc
push
fisubl
push
mov
push
je
sub
notb
stc
arpl
mov
les
gs
jnp
push
mov
mov
mov
xlat
ljmp
sbb
int3
mov
jne
pop
mov
std
pop
int
xchg
mov
add
int
adc
shrl
adc
or
ret
add
xchg
pop
mov
adc
adc
push
loope
mov
adc
int3
sub
roll
stos
fwait
xchg
out
add
pop
js
mov
sarb
jecxz
dec
ljmp
sbbb
and
jle
pop
sbb
sbb
fists
jae
push
dec
scas
pop
outsl
jmp
out
mov
mov
xchg
push
xchg
mov
iret
clc
add
push
pushf
movb
lea
jmp
push
call
add
test
je
call
xor
lea
jae
stc
push
cmp
xor
call
push
call
loop
jl
mov
lea
jne
sets
movsbl
movb
bswap
lea
pushf
pusha
mov
movzbw
lea
lea
jae
pusha
movw
movl
jmp
pushf
pushf
lea
je
pushf
call
push
call
cmp
fisttpl
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
fs
jae
cmc
cmc
cmp
cmp
jmp
int
out
fs
dec
lcall
sti
jo
ss
sub
cmc
jno
jl
loop
test
fisttpl
sub
push
rcrb
cbtw
cmp
push
cmpsl
lods
or
adc
pop
cmp
faddl
negb
pusha
lds
mov
xorl
jle
xchg
jmp
mov
mov
adcb
int3
ret
inc
call
and
sar
jle
dec
xchg
stos
and
scas
cmp
sub
mov
ds
adc
pusha
jo
fcmovb
fisubrl
shlb
out
jl
push
ss
add
jb
push
sbb
xor
insl
mov
popw
cmpsl
roll
add
mov
insb
dec
call
adc
shlb
add
cltd
ljmp
jle
ds
out
jmp
push
mov
pop
mov
add
adc
clc
dec
mov
mov
lea
call
jge
fwait
xchg
jbe
in
inc
stos
and
dec
popa
insb
push
insb
rcrl
adc
jg
insl
ljmp
mov
ret
dec
js
mov
gs
mov
std
movl
sarb
jmp
xorl
mov
popa
rorb
mov
aas
out
add
xchg
in
lods
mov
mov
pop
jo
pop
bt
jg
xor
push
jne
addb
push
xchg
push
jb
retw
rclb
scas
roll
fs
xchg
je
add
push
call
leave
sub
push
call
lahf
mov
cltd
stc
xor
ljmp
mov
out
movsl
or
xchg
cmp
in
out
scas
or
adc
mov
fdivp
movsb
cmc
popa
incb
outsl
lahf
pop
and
sub
pop
cld
push
pop
dec
or
xchg
cmpb
or
xor
mov
sub
mov
aam
and
jnp
ret
mov
mov
push
and
cltd
cmp
sbb
scas
dec
cli
jge
ss
out
sbb
jnp
cmp
sub
mov
push
xchg
mov
or
lret
inc
jno
add
popa
xchg
insl
sub
outsb
popa
nop
xchg
mov
loopne
xor
aam
adc
not
cmpsb
pop
pop
xchg
sbb
jnp
sub
fs
dec
pusha
jmp
adc
inc
mov
dec
pop
or
jge
sub
movsl
imulb
cmp
dec
insb
rorb
outsb
xlat
pop
sti
inc
xlat
ds
xlat
mov
mov
pushf
je
jge
inc
mov
shll
ret
cmp
xchg
mov
pop
jmp
aas
ret
int
mov
dec
xchg
call
mov
mov
daa
adc
xor
jmp
icebp
dec
scas
sbb
or
call
test
pop
cmpsb
enter
dec
mov
xchg
inc
pop
leave
xchg
jo
xlat
in
dec
push
and
and
inc
mov
leave
int3
sub
jg
ja
push
mov
xchg
mov
push
push
jmp
mov
mov
jmp
pusha
mov
pusha
movl
pushf
call
push
call
out
or
cmc
push
call
mov
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
mov
mov
mov
addr16
pop
lret
xor
loope
mov
les
cmpsl
mov
sbb
mov
sbb
cmc
fcomi
mov
hlt
cmp
pop
pop
add
lods
push
lea
jnp
jo
cmp
inc
aam
pop
rcrl
mov
test
sahf
pop
add
push
mov
dec
test
mov
cmp
sub
xlat
push
xchg
mov
jne
inc
int
or
push
adcb
shrb
add
loop
pop
pusha
popf
mov
out
mov
and
ror
push
pop
and
and
loop
shlb
or
imull
sub
fsubp
mov
pusha
mov
xchg
mov
jne
outsl
lret
aam
ret
pop
test
inc
lods
movsb
adc
inc
out
sbb
push
aas
add
push
mov
outsb
addr16
add
and
sub
out
xchg
mov
aad
push
call
mov
jmp
cmpl
rorb
push
mov
add
stos
ss
add
bnd
sbb
out
ret
xchg
xchg
pop
testl
scas
dec
mov
loope
dec
leave
mov
mov
cmpsl
pop
pop
arpl
pop
push
mov
or
out
pop
rcrb
imul
iret
das
jo
leave
into
ds
out
subl
xor
nop
and
xchg
adc
stos
sbb
filds
daa
xchg
outsl
push
xchg
mov
or
push
call
sbb
mov
or
sub
adc
jne
pop
in
movsl
inc
and
vpcomud
mov
pushf
and
sub
aaa
mov
sbb
mov
das
mov
cmc
bound
xchg
adc
in
jmp
push
adc
in
push
fisubrl
stos
fisttps
data16
sbb
rolb
cli
jl
pop
or
push
lods
or
xchg
cmp
insl
ja
jns
inc
mov
push
ja
mov
or
clc
js
pop
rcrb
xchg
mov
gs
pop
push
add
push
clc
clc
cmp
pusha
push
lea
je
cmc
jmp
push
call
loop
cmp
jle
push
loope
xchg
fdivr
in
mov
pop
shrl
sbb
movsl
adc
add
cwtl
cmp
mov
sub
movsl
pop
mov
pop
add
fimull
push
fsubs
mov
add
mov
sub
dec
std
adc
jo
mov
stos
setnp
outsl
fildll
cmp
xchg
mov
add
stc
shrd
test
sbb
mov
bt
jmp
jp
push
cmp
incl
or
sub
es
cmp
ljmp
ja
arpl
cmpsl
jne
fcomps
lcall
ds
loopne
mov
jae
inc
mov
pop
xchg
or
outsl
mov
shlb
cmpsb
mov
add
sub
fidivrs
jne
inc
cmp
mov
idiv
cmpb
adc
pop
mov
stos
out
shll
mov
mov
stos
cmp
mov
add
push
call
jne
jno
sti
add
xlat
arpl
bt
xchg
bswap
pusha
rcr
cmp
mov
call
push
or
int3
ss
cld
gs
mov
ret
add
mov
xchg
mov
mov
mov
clc
leave
push
sub
xor
sbb
fbld
xchg
lcall
std
add
and
rorl
fsubl
insl
sub
xchg
repz
lods
cmpsb
push
test
es
xor
add
push
movsb
dec
push
sbb
out
jb
push
adc
sbb
loopne
in
insb
les
mov
imul
call
jmp
movsl
sti
fs
std
imul
repz
adc
jg
push
loop
cwtl
sbb
mov
add
shrb
hlt
popa
leave
gs
in
cmp
add
ja
rolb
lret
xor
sbb
pop
cmp
push
jb
jae
out
lahf
mov
pop
jg
into
cmp
nop
jo
sub
cltd
rorl
adc
aam
in
jno
mov
psllw
stc
jne
push
int
cltd
sbb
fsts
xchg
mov
jns
push
call
popa
insl
push
call
inc
lods
hlt
mov
or
lds
add
test
inc
push
mov
push
mov
push
mov
ja
addr16
dec
shrl
xor
mov
fdivp
insl
shrl
mov
popa
ficoml
ds
cmp
mov
insb
mov
sbb
call
xor
loopne
jns
pop
int3
and
aaa
test
lea
mov
mov
adc
lods
pop
scas
sub
orb
sbb
int
push
mov
inc
mov
or
xor
fisubrl
ret
mov
dec
jnp
inc
test
add
mov
ss
pop
int3
xor
push
shrl
mov
stos
cmp
xlat
pop
iret
push
xchg
mov
mov
or
addl
push
add
mov
or
lahf
insl
adc
negl
xchg
pusha
push
movb
lea
jmp
push
call
ret
pushl
lea
ja
pushf
movb
lea
jb
pushf
bt
cmpb
jmp
push
call
lods
push
call
and
aad
push
call
xchg
push
call
mov
adcb
add
fimuls
xchg
shrb
fs
jae
ror
lea
rcl
xadd
mov
sets
not
bswap
neg
mov
shrd
shrd
mov
pushf
lea
jl
test
cmc
sub
bt
repnz
jmp
push
call
jle
xchg
adc
mov
loop
sbb
js
dec
xlat
inc
mov
mov
xchg
in
outsb
sub
xchg
into
jle
jbe
out
dec
insb
or
mov
scas
jmp
fiadds
scas
pop
mov
jg
in
mov
dec
mov
fs
das
ret
jle
jmp
and
out
dec
fnstsw
pusha
push
adc
out
add
push
push
push
lret
ja
inc
jb
ds
lds
mov
pop
int3
sub
xor
adcb
sbb
add
xchg
or
shlb
add
in
sbb
mov
call
mov
movsbl
pop
pushf
mov
pushf
pushl
mov
mov
pop
pusha
pushf
pushl
ret
push
call
xlat
js
xor
adc
outsl
test
pop
les
xchg
and
imul
stos
stos
pop
jno
push
push
xlat
inc
xchg
test
stos
xor
icebp
cmp
dec
xchg
inc
pop
loop
scas
pop
and
sub
and
scas
adc
adcl
rcrl
cli
mov
je
push
enter
pop
stos
xor
into
push
cmpsb
lret
cli
lret
call
sub
fidivs
scas
es
push
push
xchg
scas
xor
push
call
sbb
sarl
lret
add
pop
mov
sarb
ret
imul
add
jns
dec
and
jl
add
scas
movsb
imul
xor
add
and
push
jo
fidivs
iret
push
mov
mov
int3
cmp
jb
pop
iret
and
sysenter
outsb
mov
jnp
jmp
mov
fisttpl
lods
adc
fimull
les
imulb
pop
cltd
add
dec
add
xchg
sbb
add
nop
lock
call
xchg
scas
mov
fildll
dec
xchg
or
mov
add
addl
adc
lods
out
pushf
adc
movw
pusha
pushf
pushl
ret
outsl
insb
gs
cs
insb
add
push
mov
xchg
loop
push
jge
mov
hlt
insb
mov
ljmp
sti
push
xor
dec
push
cmpsb
inc
and
outsb
adc
pushl
push
fbld
mov
jge
outsb
out
dec
int3
sub
pop
lahf
adc
ficoml
sbb
xor
sbb
filds
inc
xor
divb
jb
push
dec
cli
adc
jnp
pop
jno
fsubrl
jno
out
aaa
adc
sbb
and
or
test
aaa
scas
cmp
inc
insb
pop
outsl
out
iret
aas
lret
and
jecxz
push
xchg
lods
vmovaps
push
sbb
adc
xchg
push
call
nop
lcall
clc
inc
add
jne
daa
xchg
lret
jae
idiv
out
jp
je
jbe
push
fucom
push
out
jecxz
iret
aam
dec
fldenv
hlt
jmp
je
push
xchg
imul
aad
bound
daa
push
ret
dec
sbb
dec
cmpsl
loop
pop
xor
xor
sbb
inc
xchg
repz
sub
dec
jmp
decb
fnstenv
insb
xchg
pusha
insl
lock
add
push
sar
fstps
lock
push
dec
lret
and
cmc
xchg
dec
scas
push
mov
xchg
repnz
loop
push
xchg
lods
adc
fs
pop
adc
xor
pushf
push
call
int3
pop
es
ds
call
cmp
subb
sbb
hlt
js
add
lods
xor
jno
xchg
leave
adc
stos
cld
jge
adc
xchg
mov
std
outsb
lret
pop
sarl
mov
jmp
mov
sub
cmp
dec
lea
int3
jae
mov
and
int
fisttpl
out
add
sbb
sbb
pop
repnz
stc
insl
scas
inc
stc
jb
rclb
cmp
cmp
ret
sub
push
xchg
lods
push
ljmp
out
or
dec
jae
add
jae
push
call
cwtl
ret
cld
sarb
lods
sub
jbe
cmp
mov
repnz
lea
enter
std
pop
cli
mov
adc
cmpl
cmp
push
jae
jl
xor
hlt
mov
out
mov
or
fnstsw
enter
pop
imul
ss
rcll
pop
lds
mov
inc
icebp
pop
mov
inc
mov
stos
popf
mov
ret
dec
mov
lahf
and
stos
xor
mov
add
dec
sub
cli
fwait
imul
mov
inc
into
int3
push
cmp
loope
mov
insl
fisubl
xchg
add
push
sub
mov
jecxz
push
add
scas
pop
cld
lods
into
inc
pop
mov
outsb
xchg
cli
bound
dec
push
fdivrs
arpl
imul
mov
enter
lock
sti
dec
lret
das
popl
jnp
push
mov
xchg
stos
cmp
xchg
jne
call
rclb
loope
sahf
xchg
pop
add
mov
test
and
test
insl
mov
stos
and
inc
outsb
pop
sub
rcrl
shll
jae
cltd
outsl
xor
pop
iret
ret
popf
gs
scas
xor
enter
fisubl
cmc
repz
push
stc
cs
mov
test
inc
dec
sti
sbb
jecxz
sti
arpl
clc
test
jmp
nop
sbb
mov
mov
stos
movsl
mov
insb
adc
adcb
outsb
jo
call
and
jae
rol
rcr
and
shld
mov
bswap
add
not
push
mov
ror
cmp
movzbw
mov
stc
cmc
stc
cmp
xor
clc
jmp
adc
push
rolb
call
std
mov
insb
std
push
shll
es
add
loopne
fildl
movb
int
stos
cmp
lock
sbb
cwtl
add
xor
cs
lret
stos
jbe
or
stos
aam
shlb
or
or
mov
popa
jne
mov
pop
dec
sbb
inc
dec
mov
jne
mov
mov
cmp
lret
sbb
fs
push
int3
cmp
sbb
push
xchg
test
in
cltd
or
ljmp
lea
call
pusha
test
jmp
push
call
add
insl
out
jbe
jo
xor
sbb
mov
adc
loope
dec
into
or
fisubs
rcrl
call
push
rolb
xchg
pop
rol
outsb
push
add
or
mov
sbb
xchg
repz
pop
mov
ret
adc
jne
xchg
and
dec
xchg
insl
inc
iret
mov
iret
inc
icebp
inc
and
jl
pop
shll
jl
push
lret
dec
sub
lcall
sub
sbb
add
mov
pop
fisubrl
xchg
ret
push
cmp
or
popf
int
imul
andb
sub
rcl
aaa
xchg
add
push
lods
dec
xchg
inc
cmp
sub
pop
scas
cmp
lods
adc
pop
hlt
movsb
xor
and
xchg
lock
ret
mov
mov
movsl
or
adc
fs
cmp
insb
loopne
mov
clc
jl
push
xchg
test
fimuls
lds
js
add
add
fwait
cld
gs
mov
mov
ret
ret
sub
movsl
push
imul
xchg
into
sub
inc
fs
push
fldcw
das
mov
cmpsb
push
add
out
push
decb
xor
dec
mov
mov
ficoml
call
xchg
popa
sarl
popf
add
add
nop
jl
call
fcompl
lahf
sbb
rolb
in
lock
push
xchg
cmpsl
fsubr
add
fs
ja
stc
jmp
lea
call
pusha
jmp
mov
pusha
lea
jmp
push
call
cli
lods
and
ficompl
adc
rorl
xor
dec
aaa
pop
mov
adc
jecxz
in
mov
pop
shl
push
int3
out
popa
in
add
or
test
jge
sub
or
lea
das
mov
fidivs
nop
cld
das
push
rorb
and
mov
mov
idiv
cmp
and
mov
pop
sub
jl
inc
mov
adcb
or
mov
lret
inc
ljmp
push
adcb
sbb
xchg
or
xchg
insb
adc
and
ret
lds
ds
jbe
or
pushf
sub
push
add
aas
add
aas
pushf
stc
jbe
cmp
iret
xor
ljmp
push
into
loopne
mov
mov
stc
std
dec
pusha
lock
int3
out
mov
mov
mov
movsb
arpl
js
xlat
push
mov
filds
pop
mov
adc
fdivr
data16
inc
ret
push
jp
outsb
push
push
xchg
cmpsb
push
arpl
lret
xor
or
mov
les
mov
mov
repz
sti
add
xchg
mov
fisttpl
into
dec
aad
test
sahf
push
jle
cltd
inc
mov
or
xchg
test
in
or
call
rcrl
xor
pop
or
xchg
adc
or
loopne
mov
movsl
sub
cld
jg
das
mov
out
push
rcrl
nop
loope
xchg
ljmp
push
and
push
cmpsb
xor
ficoms
mov
lods
cmp
cmp
and
jp
cmp
add
sbb
gs
xor
sub
jecxz
inc
jae
add
jmp
imul
les
mov
ja
mov
mov
ljmp
out
addr16
sub
adc
test
aaa
ds
clc
test
pop
stc
mov
ficomps
pop
out
scas
push
jb
ss
xchg
movsb
and
sahf
repz
repnz
mov
jge
lcall
sarb
ss
mov
in
dec
in
push
add
cmp
dec
fdivrl
outsl
mov
inc
out
mov
insb
mov
cltd
sahf
sub
ret
push
mov
in
jle
stc
bound
test
sub
lock
mov
lahf
jnp
imul
lods
or
aad
leave
inc
push
xchg
movsb
iret
loop
push
call
dec
out
int3
aad
or
sbb
add
pushf
pop
pop
test
jno
lret
mov
lods
into
fs
inc
mov
ret
cmp
ljmp
inc
movsl
or
dec
stc
sbb
sbb
ret
mov
repnz
xchg
adc
lds
add
int
iret
in
mov
sbb
dec
lahf
add
jnp
pop
xlat
xor
adc
cmp
je
pop
xor
xor
out
pop
mov
std
jns
or
in
out
lret
push
cltd
subps
mov
in
stos
int
das
iret
inc
push
mov
aad
xchg
imul
idivb
fistpl
aaa
data16
add
aam
inc
xorl
push
add
les
and
sbb
add
rcr
out
jbe
dec
cs
repnz
push
xchg
mov
daa
pushf
std
lea
pshufw
sti
jl
inc
stos
add
mov
incb
mov
aaa
or
sub
movsl
xchg
jbe
dec
rclb
shl
pop
mov
xchg
shl
icebp
rcrl
xor
or
adc
arpl
ja
loope
add
cmpsl
lods
sbb
add
push
mull
lds
xor
mov
aad
leave
sub
insl
stc
mov
adc
dec
pushf
cmc
mov
xor
lea
pushf
call
sbb
mov
pushl
pusha
clc
cmp
jmp
push
call
push
jg
int
ss
das
mov
loope
stos
xor
loop
lods
or
jns
cwtl
adc
mov
inc
shll
movsb
outsb
out
test
push
xchg
out
mov
loop
arpl
cmp
adc
aad
scas
stos
add
xor
bound
mov
mov
push
or
and
dec
cmc
pop
push
subb
xor
ficoml
imul
dec
int3
xor
cs
push
sbb
mov
shll
repnz
push
mov
test
xor
cmpsb
pop
dec
jns
mov
cmpsl
dec
jmp
addr16
adc
sbb
sub
insb
shll
outsb
ds
add
into
xchg
ds
sub
push
push
pop
jle
xchg
push
xchg
lret
rcl
loop
push
int
insl
jb
cltd
stos
pop
fsubp
movsb
add
mov
mov
insl
leave
add
cli
testb
or
dec
popf
sub
jne
test
inc
mov
xchg
push
xchg
mov
test
call
mov
nop
or
dec
addr16
xor
fucom
fmuls
gs
fstl
xor
push
mov
lret
dec
shrb
xchg
hlt
bound
out
sahf
out
inc
push
sub
mov
pop
pop
mov
ret
std
stc
fwait
shll
sbb
jg
mov
popf
enter
dec
pop
out
add
sub
lea
incl
inc
xchg
xchg
stc
ss
int3
jp
xchg
test
sbb
cmp
aaa
dec
mov
test
movsb
or
clc
xor
inc
test
sub
test
dec
sbb
mov
jbe
dec
sahf
add
dec
out
xchg
mov
jno
push
fcoms
push
mov
cmpsb
pop
pop
loopne
call
add
or
pop
imul
jnp
icebp
dec
les
insl
mov
pop
enter
mov
and
bound
sbb
xor
sub
jns
xchg
or
out
mov
and
mov
inc
mov
xchg
jmp
prefetch
xorl
mov
sbb
xchg
add
pushf
imul
scas
dec
lcall
cmp
daa
fdivr
pop
fs
add
fcoml
gs
pop
lods
lcall
push
lahf
or
mov
mov
pop
rclb
mov
pop
outsl
push
call
mov
jnp
jne
cmp
popf
xchg
sahf
divl
data16
sub
sbb
xor
pop
xor
sbb
aad
ds
enter
iret
aam
jo
loope
cmp
push
call
dec
ret
stos
xchg
mov
lea
cmp
idivb
jp
rclb
fadds
mov
xor
test
bound
xor
fisubrl
inc
sahf
adc
jb
xchg
lahf
dec
popa
mov
xor
shr
jmp
int
cmp
sbb
pushf
std
push
inc
lds
cmpsl
sbb
or
fwait
rorl
scas
addl
pop
add
rcll
lds
xor
andb
dec
cmp
movsb
push
push
cmp
xor
lcall
ja
jg
pop
or
fimull
out
pop
hlt
xchg
adc
fnop
in
popf
mov
aam
fs
inc
push
cmc
inc
mov
mov
iret
inc
mov
stos
xor
sub
lea
je
test
cmp
sub
bt
cmp
mov
lea
shl
or
mov
stc
cmp
push
cmp
cmp
pusha
lea
ja
mov
sbb
bsf
add
movsbw
pushf
pusha
shr
lea
jmp
mov
leave
fiadds
stos
or
push
cmpsl
adc
push
sbb
inc
ret
push
mov
push
push
xor
daa
fistps
sbb
add
aas
mov
js
xchg
dec
lods
ss
xorb
sub
and
jg
adc
aas
loope
lods
xchg
sub
mov
mov
pusha
in
inc
fstl
pusha
enter
mov
add
cld
test
push
and
push
shlb
test
push
mov
sarl
sub
aam
xchg
ljmp
int3
xchg
adc
enter
push
add
negb
out
rcrl
mov
scas
push
mov
inc
xor
cmp
aas
pop
inc
push
sbb
sub
in
dec
bound
fldcw
inc
xor
rcl
push
mov
test
test
mov
lahf
push
mov
leave
pushf
adc
sbb
dec
lds
mov
pop
movl
outsb
sbb
and
inc
cmpsb
sbb
popf
adcl
pop
sub
pop
mov
cli
int
add
test
shlb
jne
mov
push
adc
push
lcall
cmpsl
pop
test
dec
jmp
fwait
rol
cmp
mov
or
xchg
inc
xchg
out
outsl
mov
jae
ss
les
and
add
enter
mov
pusha
shlb
xchg
fwait
cld
push
call
jl
loop
push
call
cmp
xchg
pusha
xlat
push
loope
insl
jp
inc
mov
adc
jnp
push
scas
setl
cmp
push
inc
or
add
adc
jecxz
mov
shrb
fwait
hlt
push
sahf
inc
jp
adc
dec
out
inc
enter
ret
mov
dec
movsb
xor
cmp
dec
mov
jo
pop
mov
jo
push
xchg
pushf
push
xchg
fs
or
arpl
add
clc
mov
pushl
clc
pushf
test
jmp
push
call
dec
mov
call
push
call
fwait
push
call
jmp
inc
sub
or
and
adc
inc
sub
or
int
or
cltd
push
adc
insl
movsl
xchg
jp
adc
das
loop
out
fdivr
xchg
jns
pop
mov
add
sub
addr16
bound
xchg
xchg
jmp
xchg
sub
movsl
push
ja
sbb
sub
cmp
add
push
sub
dec
inc
inc
xchg
dec
fsubp
and
dec
dec
cmpsb
mov
jg
and
pop
xor
mov
movsl
scas
stos
pop
lods
jb
cltd
and
hlt
push
fwait
pop
orl
push
mov
jns
dec
lcall
cmpsl
or
imul
xlat
push
xchg
fwait
popa
je
mov
xor
and
hlt
push
fisubrl
mov
sahf
pop
mov
jbe
lock
push
lret
pop
add
test
pcmpeqb
mov
ret
pop
sbb
scas
dec
fnstsw
mov
in
dec
stos
imul
arpl
sub
xlat
stc
xchg
sub
add
shrl
cltd
sub
inc
mov
sbb
test
push
xchg
lcall
inc
cltd
roll
sub
dec
leave
cmp
sbb
ja
and
in
or
popf
shlb
popa
jmp
inc
mov
subl
out
loope
jle
pop
fistl
loope
hlt
sub
cwtl
clc
push
fdivrl
lods
push
xchg
lcall
add
xchg
sbb
or
sub
pop
xchg
fldz
fs
cmp
rorl
outsl
jmp
jb
jp
push
pop
xchg
sbb
fnstsw
outsl
out
dec
fstpt
cmpsl
adc
push
daa
cmpsb
push
fadd
inc
movsb
or
pop
pop
outsl
test
dec
mov
jno
cmp
inc
push
xchg
cltd
push
gs
in
sbb
adc
imul
mov
call
pushf
adc
loopne
xchg
loop
cmp
lods
adc
pop
fistpl
out
jbe
sbb
or
mov
jnp
xor
outsl
in
push
push
loop
scas
push
mov
xor
or
push
mov
imull
ja
push
jns
enter
and
std
mov
fisubrl
mov
push
add
outsl
and
push
lret
das
nop
sub
ljmp
popf
std
jns
push
shll
in
xchg
cltd
outsl
adc
add
lret
add
test
or
xchg
dec
adc
jne
push
call
test
push
lea
call
sbb
push
call
jo
xchg
adc
cmpsl
insb
push
insb
lds
mov
or
incb
jo
clc
je
or
sub
pop
fnstenv
insb
xchg
sbb
and
loopne
jno
mov
inc
xor
xor
je
ja
push
movsl
fistpll
add
sbb
sbb
mov
cwtl
add
sub
pop
shl
jle
lods
xor
inc
adc
ss
mov
jge
rep
xor
test
mov
fisubl
loopne
hlt
pusha
sub
movsb
mov
mov
mov
movsl
sbb
or
lret
push
add
push
outsl
loopne
stos
and
and
je
addb
movsl
sub
ja
push
test
push
and
add
aaa
jp
sub
mov
out
shlb
cmpsb
dec
mov
push
cmpsl
in
sti
cmc
or
mov
rclb
sbb
xchg
pop
jo
out
mov
mov
adc
je
loope
mov
add
out
jnp
gs
jl
xor
out
gs
fcomps
in
insb
adc
or
shrb
shll
push
cmp
stos
les
div
pushl
inc
xor
mov
xor
cmp
cltd
roll
sub
pop
mov
push
insl
jns
enter
imul
popa
fldcw
dec
push
xchg
xchg
shl
cld
aad
dec
mov
sbb
sub
lret
mov
lret
adc
insb
stc
cmp
sub
jo
fwait
lods
pop
or
ja
ljmp
in
pop
mov
scas
pop
or
jae
dec
add
mov
movq
push
cmc
dec
es
pop
mov
int3
jno
sub
insl
push
xor
dec
mov
out
addr16
jnp
pop
cmp
out
ja
xchg
xchg
push
data16
lahf
arpl
call
push
lret
push
call
mov
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
loope
scas
xor
inc
inc
mov
cli
lock
lea
lret
cwtl
sbb
ds
and
cmpb
inc
in
stos
cld
pop
mov
xchg
jae
loope
jae
xchg
scas
call
in
movsb
pop
xor
clc
test
push
xchg
test
lret
dec
fiadds
mov
mov
mov
add
in
push
push
iret
pusha
shll
lods
push
sbb
fcomi
push
dec
lret
outsb
fimull
mov
xchg
xchg
stos
rorb
jmp
call
add
test
mov
cmp
mov
push
pushf
lea
jb
stc
clc
pushf
test
cmp
movb
pusha
jmp
push
call
jl
jo
cmpsb
out
out
push
lods
ss
bound
dec
roll
stos
and
out
arpl
push
pop
adc
out
and
dec
ret
popf
mov
ss
lods
sbb
pop
out
sub
std
das
xchg
aas
mov
dec
int3
lods
and
sub
inc
ret
inc
xor
out
mov
push
loope
gs
cltd
jnp
mov
mov
gs
push
iret
and
sbb
adc
push
push
shl
insb
adc
sub
push
xchg
xchg
test
shll
imul
bnd
in
icebp
dec
adcl
or
fsub
pop
rclb
scas
push
enter
les
xor
adc
fdivs
js
out
imulb
inc
mov
aaa
out
mov
dec
lret
sti
imul
inc
imul
or
sub
add
lock
jl
jo
xchg
xchg
cli
or
shll
imul
jg
push
cmpsb
adc
pop
cs
ret
inc
inc
outsl
dec
in
jo
xor
ds
pusha
and
mov
jae
out
adc
xor
mov
jg
sub
roll
arpl
addr16
pop
mov
repz
jae
inc
cmpsl
andps
std
je
inc
mov
cld
cmp
push
xchg
add
aas
movsb
add
xor
inc
bnd
dec
into
shll
inc
mov
mov
aam
mov
pop
test
xor
and
notl
movsl
add
pusha
mov
enter
test
insl
lds
xor
cmc
gs
xchg
xchg
inc
push
push
aad
mov
push
inc
push
fisttps
push
xlat
cmp
mov
jbe
sub
gs
xchg
lods
cli
out
push
mov
xchg
add
leave
and
int
add
and
dec
jg
pop
push
insl
cmp
and
inc
cwtl
add
lock
push
xchg
xchg
xlat
ljmp
rorb
shlb
xchg
shlb
jmp
and
lret
jg
cmp
sti
insb
int
mov
mov
dec
test
jl
ja
xchg
stos
movsl
and
mov
sub
cmpsl
and
or
lret
mov
jl
and
sbbl
xor
ljmp
cmp
mov
out
scas
mov
aas
int3
cmp
stos
int
xchg
sbb
jae
mov
mov
cmc
jno
dec
mov
push
xchg
xchg
sbb
inc
add
inc
imul
add
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
sbb
adc
pop
pop
loop
lret
insl
fs
in
pop
filds
sub
jp
xor
enter
ljmp
push
xor
and
jae
xchg
sahf
aaa
push
mov
stc
jle
push
sbb
inc
mov
sub
mov
out
hlt
jl
or
outsl
inc
jp
rolb
xchg
jmp
xor
mov
lock
push
xchg
xchg
data16
push
call
sbbb
push
call
cmp
loopne
sub
mov
sub
fiadds
and
mov
arpl
jp
jl
repz
add
mov
mov
hlt
ja
push
push
ret
sti
test
orl
mov
and
add
sub
lea
movsb
or
jns
adc
jmp
lret
add
leave
push
in
sahf
mov
movsl
std
xor
in
arpl
xlat
cmp
aaa
mov
xchg
arpl
push
pusha
stos
mov
movw
lea
jmp
push
call
cmp
mov
adc
mov
jmp
mov
sbb
scas
sub
imul
scas
push
ret
test
adc
xchg
out
inc
adc
mov
sub
das
sarb
mov
aam
flds
dec
mov
fnstcw
mov
sbb
mov
mov
les
mov
inc
lds
scas
cmp
cmc
gs
leave
into
scas
cwtl
adcb
mov
pop
mov
jge
test
inc
xchg
jecxz
xchg
mov
jbe
pop
push
lcall
xchg
inc
flds
jmp
push
sbb
leave
fisttps
jg
and
adc
or
and
clc
mov
jg
pop
out
idivl
dec
mov
push
call
adc
or
fisttpl
sbb
ret
not
mov
ror
pushf
call
sar
add
rolb
inc
mov
add
ds
adc
sub
sbb
cld
jae
dec
add
jmp
lret
inc
fwait
or
arpl
aas
push
push
or
dec
pop
adc
dec
mov
or
adc
sub
xchg
dec
shlb
aaa
insb
push
cmpsl
sbb
xchg
and
inc
adc
xchg
cld
sub
loopne
inc
test
or
test
pop
ja
ficomps
clc
cmp
in
ret
jb
jns
in
divl
clc
jl
mov
test
test
mull
sbb
xchg
enter
jg
xor
pop
lcall
dec
push
insl
jmp
shlb
mov
stc
gs
stos
sub
adc
push
jbe
in
jmp
scas
pop
pop
out
fistl
inc
mov
push
xchg
movsl
mov
movsl
push
imul
scas
daa
test
xchg
repz
mov
out
mov
or
push
add
pusha
sarb
jbe
adc
sub
les
mov
pop
push
xchg
mov
clc
xchg
or
fmull
add
jne
lea
jmp
push
call
xchg
out
lea
push
call
sbb
sub
jmp
mov
test
pushf
repnz
call
call
cld
mov
into
dec
mov
cmp
sbb
mov
mov
mov
mov
mov
sub
out
imul
cmpsl
out
adc
rcrl
int3
pushf
cmc
or
mov
add
das
stos
jecxz
mov
inc
shrl
and
push
mov
lahf
sti
push
xlat
sub
sti
push
xchg
mov
add
call
mov
test
arpl
call
mov
addr16
js
push
cmp
mov
test
xchg
push
push
cltd
fmulp
inc
xchg
dec
clc
gs
adc
out
and
dec
shl
mov
lods
cli
adc
add
ds
xor
dec
sti
adc
cmpsb
popf
sbb
jecxz
add
ljmp
in
subl
jp
outsb
loop
cmpsb
add
pop
out
mov
aas
push
push
call
sub
or
call
push
call
sti
or
hlt
jecxz
push
lock
adc
cltd
add
in
push
nop
in
push
mov
cltd
xor
aam
jo
add
mov
adc
rolb
inc
rclb
dec
lret
jne
movsb
mov
jb
dec
pusha
call
pop
outsl
lret
sub
std
xor
mov
hlt
movsl
mov
aaa
xor
outsl
popa
xchg
mov
xlat
fcompl
adc
jbe
pop
sub
xor
frstor
ret
loope
gs
insb
hlt
pusha
enter
lods
cmp
adc
sahf
mov
inc
lea
jae
pusha
adc
lea
push
pusha
mov
call
push
call
ss
test
gs
or
lret
dec
rclb
mov
stos
inc
inc
sar
pop
data16
xchg
std
or
dec
cmpsl
mov
cmpsb
push
inc
mov
add
adc
rorb
sbb
push
mov
add
lea
push
les
push
add
test
outsb
cld
push
mov
jmp
subb
popf
mov
hlt
sbb
lods
and
or
xchg
mov
sbb
push
adc
inc
dec
or
xor
call
jg
popa
mov
add
clc
jo
jnp
adc
shrl
or
repnz
rorb
sbb
and
adc
xchg
pushw
sub
les
and
xor
cmp
or
in
popf
mov
shrb
dec
loope
xchg
mov
dec
outsl
cmpsb
mov
or
sbb
push
xchg
mov
add
inc
mov
mov
dec
fildl
push
fsubrl
push
fmull
pop
lea
xor
mov
mov
outsb
cwtl
inc
nop
ret
and
leave
imul
adc
sub
ja
fcompl
enter
ja
je
aad
test
in
fs
jb
ja
xchg
jecxz
popa
mov
clc
xchg
mov
dec
ljmp
push
xchg
or
jb
je
pop
mov
dec
pop
in
movsb
sbb
rcrb
pop
sarb
push
xchg
mov
jnp
pushl
js
out
or
xchg
sub
es
lock
scas
and
jle
out
jle
enter
push
insl
loope
mov
push
xlat
into
adc
cmpsb
or
mov
es
mov
shr
xchg
imul
pop
ror
imul
xchg
inc
pop
ret
mov
xchg
jle
je
push
pusha
cmp
pop
push
sub
xchg
pop
jnp
outsl
call
inc
mov
lret
push
xchg
mov
push
xlat
sub
js
pop
movl
dec
scas
or
lret
sub
lock
lds
lods
and
stos
mov
jns
aas
lods
sbb
outsb
inc
inc
lea
mov
out
popl
mov
nop
lock
mov
jge
mov
outsb
sbb
dec
aas
add
inc
movsb
and
int
lods
les
xchg
inc
fs
xchg
les
xchg
add
xor
xchg
mov
xor
pop
fisubrs
jno
dec
dec
mov
aaa
mov
int
orl
imul
sub
xchg
test
cmp
call
stc
sbb
nop
call
rol
mov
es
imul
dec
out
jae
jb
lahf
dec
gs
pop
dec
xor
xor
cmp
mov
int3
jl
es
xchg
mov
pop
in
clc
pop
mov
push
mov
xchg
test
jne
call
daa
push
call
dec
push
imul
jae
push
call
test
out
xchg
or
pop
inc
inc
xchg
dec
mov
testl
push
mov
dec
sbb
xchg
or
adc
pop
aam
mov
push
mov
ds
jno
sub
jle
add
imul
mov
popa
mov
dec
mov
xor
test
aas
adc
and
sub
loop
push
xor
in
pop
into
push
adc
add
mov
rorb
adc
xchg
mov
adc
cwtl
or
test
add
dec
je
push
call
lea
cmc
mov
add
xlat
cmp
mov
jl
dec
dec
int
push
pop
xchg
lret
in
mov
scas
enter
in
pop
mov
shrb
mulb
stc
and
call
and
push
addr16
outsb
mov
add
inc
js
data16
test
into
mov
loope
in
xchg
or
xor
cld
pusha
mov
or
or
jo
xchg
xchg
or
movsl
and
clc
push
mov
xchg
repnz
adc
push
xchg
push
je
or
fisttps
int3
es
cmpsb
sub
cmp
roll
orl
pminsw
insl
jecxz
mov
sub
lahf
mov
sub
push
insb
sarb
cs
inc
cmc
or
stos
les
add
sbb
pop
lods
cmp
ret
ljmp
mov
mov
push
rclb
scas
rcl
add
loop
adc
adc
mov
dec
je
rol
mov
shr
mov
push
call
xchg
push
xchg
sbb
pop
jno
xlat
dec
xchg
xchg
leave
push
pop
push
arpl
movsl
fimuls
mov
mov
int
jecxz
test
xor
jle
adc
test
enter
int3
jl
push
inc
sub
jnp
jg
pop
mov
and
shll
jno
sbb
mov
test
leave
sub
xchg
xchg
and
lea
je
jmp
dec
ret
xor
imul
inc
mov
jecxz
fstl
and
gs
inc
arpl
pop
jb
dec
mov
or
xor
mov
dec
cli
or
xchg
add
push
pop
xchg
push
xchg
sub
loopne
sbb
addr16
pop
or
xor
cmpsb
and
addr16
jae
dec
shrl
mov
addr16
xchg
xchg
sahf
push
call
pop
data16
gs
or
xchg
cmp
out
cs
das
push
call
sahf
push
call
mov
leave
es
inc
xchg
inc
or
sbb
ficomps
cmp
fnstenv
lahf
xchg
shl
cmp
test
mov
or
imul
dec
or
adc
lahf
sub
jp
push
add
xchg
sahf
lcall
or
mov
cwtl
fistpll
in
fwait
clc
std
imul
clc
test
lea
out
push
addr16
sbb
les
push
xchg
test
lock
pop
xchg
pop
fs
jmp
jbe
loope
pop
jmp
mov
xor
test
scas
adc
mov
test
rcl
leave
or
movb
xchg
js
gs
push
sarl
mov
mov
fs
addr16
out
enter
mov
mov
and
jl
scas
mov
mov
outsb
loop
xchg
nop
or
push
in
mov
fcoms
xor
xor
pop
xor
or
les
adc
mov
lds
ja
call
dec
dec
jl
test
sbb
adcb
push
addr16
and
fs
mov
mov
sbbb
cld
xchg
xchg
clc
xchg
pop
sub
shl
xchg
sbbl
fstpt
cmp
inc
ret
push
mov
mov
outsb
xor
mov
bound
movsl
fidivl
orl
lods
pop
or
fwait
loop
shrb
or
push
dec
insb
cmc
jge
insl
stos
and
lret
out
lahf
adc
jmp
scas
push
xchg
test
ljmp
add
and
push
call
jge
out
mov
pop
xchg
lock
imul
adc
test
pop
fidivrl
aam
cs
testb
jmp
aad
jp
cmpsb
vaddsd
adc
push
xchg
pop
shrl
imul
mov
test
or
add
aaa
adc
xchg
lods
mov
jp
sbb
push
mov
fmuls
and
adc
hlt
or
dec
ficompl
dec
mov
sub
push
sbb
add
inc
outsl
push
gs
imul
popa
jae
dec
bound
arpl
cmp
jnp
jg
mov
adc
shrl
popf
adc
popa
outsb
jmp
ror
pushf
and
dec
int3
push
mov
jbe
lret
pop
dec
addr16
inc
ljmp
lea
mov
sbb
dec
bound
daa
jnp
push
lret
jbe
cs
es
xchg
cli
push
xchg
addl
inc
dec
xor
cs
insb
add
jl
or
xorl
add
dec
ljmp
or
jmp
test
mov
call
dec
and
sbb
push
push
xor
cs
insb
add
inc
mov
insl
dec
jne
test
test
outsb
fbld
lahf
add
les
lods
ja
out
lahf
mov
xchg
lahf
cmp
mov
imul
ret
orl
lret
push
leave
push
ljmp
xlat
add
cli
inc
cltd
and
sub
pop
aaa
mov
out
das
shll
das
negb
sti
jle
cmp
sbb
add
xchg
movsl
lock
imul
in
aam
rclb
cwtl
add
xchg
andb
inc
jae
push
lea
jmp
jb
jb
aas
leave
fdivs
mov
in
jmp
push
xor
out
jle
rorb
imul
and
daa
cmc
dec
out
dec
sarb
and
jbe
ljmp
mov
cmp
lock
jl
add
in
icebp
gs
in
mov
xchg
arpl
jg
jl
cmp
sahf
iret
outsb
mov
fwait
xor
or
xchg
inc
fiadds
aaa
outsb
bound
scas
ss
add
pop
mov
sahf
push
push
xchg
jp
push
xchg
xor
sbb
adc
add
clc
sub
movb
movb
jmp
mov
lret
mov
dec
mov
mov
jo
outsb
shll
mov
mov
nop
and
and
pop
js
fsts
addb
leave
out
or
and
shrb
sub
xor
adc
cmp
and
test
xchg
inc
arpl
das
loopne
sti
cmpl
adc
lds
gs
enter
nop
cmpsb
incb
mov
mov
pop
out
push
xchg
addb
les
movsl
out
fldcw
mov
shlb
jbe
pop
mov
loopne
lcall
pop
sub
lods
aaa
movsb
sub
sbb
mov
inc
lret
mov
add
push
jge
jg
dec
sub
mov
popf
sub
xchg
sbb
adc
mov
aas
adc
mov
push
call
xchg
jnp
pusha
mov
pushf
push
mov
pusha
lea
jmp
neg
movw
not
call
and
pop
lret
push
adc
fisubl
and
cmp
cs
aad
aad
clc
push
fsts
push
adc
mov
sub
xchg
dec
lret
jnp
icebp
sub
stos
mov
push
cmpsb
sahf
jp
bound
pop
test
in
out
pop
ja
add
inc
push
rcrl
and
and
dec
out
daa
cwtl
in
js
stc
movsl
sbb
sti
lods
std
push
scas
cmp
fcoms
push
sbb
add
cmp
cwtl
sbb
xchg
jg
push
xor
btc
mov
test
call
cmp
pushl
pushl
mov
lea
ja
sar
mov
inc
not
sub
shrd
bsr
cmc
add
neg
shld
mov
rcr
stc
dec
or
mov
call
sub
call
add
test
xchg
fsubl
movsb
mov
jmp
mov
sub
lock
in
fldt
inc
mov
mov
xor
pop
dec
mov
xlat
or
xor
loope
in
cmp
arpl
test
test
mov
jo
js
push
fmull
add
xchg
jle
test
jne
call
loope
fs
je
mov
adc
cmc
pushf
add
shl
shl
mov
movb
cmp
test
cmc
add
stc
clc
mov
ror
mov
call
push
call
and
test
ja
call
mov
push
call
das
push
int3
push
call
push
and
lea
je
lea
bsf
add
lea
shld
bsf
mov
call
push
call
dec
call
inc
mov
flds
loopne
loopne
fadds
out
js
shlw
push
fidivrl
cwtl
sbb
orl
adc
push
test
sbb
sarb
ds
inc
fistpll
inc
sahf
fcmovu
lds
lock
imul
out
fisubs
imul
adc
jnp
dec
je
jmp
xlat
in
repnz
in
ror
push
push
fidivrs
add
add
mov
sbb
sbb
cltd
mov
and
mov
push
sahf
es
xchg
jge
adc
fwait
pop
aas
outsl
sti
xor
movsb
fwait
push
add
jo
add
imul
call
add
add
cltd
push
jae
inc
lret
push
mov
jae
sub
add
int
lahf
sub
test
pop
jecxz
cwtl
inc
lds
lret
adc
dec
xchg
or
arpl
hlt
jmp
pushf
lcall
nop
sbb
jl
cmpsl
push
dec
scas
das
cmpsl
pop
xchg
ljmp
dec
rcll
pop
jo
call
loopne
mov
xchg
push
dec
insb
fnstenv
jb
nop
adc
inc
mov
mov
into
adc
mov
in
arpl
fucomi
ret
adc
jge
pop
or
shll
call
popf
inc
aad
lcall
dec
insb
push
xor
icebp
push
mov
mov
fmuls
mov
call
push
icebp
pop
loope
cli
mov
xchg
adc
push
imul
cwtl
sbb
sbb
fcompl
xchg
jl
cmc
pop
push
call
adc
or
mov
adc
mov
shrl
data16
call
js
sbb
xchg
cmc
mov
dec
gs
gs
dec
int3
push
lret
inc
scas
das
test
adc
notb
pop
or
and
mov
xchg
pushl
das
aam
cwtl
inc
and
repz
xorl
testl
ljmp
inc
je
adc
xor
dec
out
js
mov
cmp
lahf
push
adc
out
aaa
mov
xchg
jnp
push
push
lds
das
adc
inc
mov
xchg
and
dec
inc
das
inc
dec
mov
addr16
lret
cmp
push
pop
xchg
sub
xor
push
cltd
sbb
jne
push
scas
and
dec
push
mov
bnd
in
sahf
jmp
jne
or
out
pop
frstor
add
enter
cmp
inc
scas
loop
and
cld
xchg
sub
sub
or
mov
xchg
push
adc
xchg
gs
in
jo
xor
jns
xlat
pop
jns
xadd
das
xchg
jge
in
dec
sbb
loopne
mov
enter
push
xchg
jnp
mov
pop
jecxz
sub
jp
pusha
lds
cmp
cltd
movsl
data16
xor
sub
xchg
data16
push
sub
into
and
sub
pop
adc
mov
daa
je
sub
cmp
mov
and
jb
mov
int3
cld
pop
out
mov
call
push
outsb
inc
push
popf
sbb
sub
pop
cli
test
push
lea
lahf
int3
aas
push
cmp
loope
rcrl
cs
call
xor
jp
add
push
or
cwtl
xor
adc
aaa
xor
or
jae
adc
int3
outsb
pusha
cmc
stc
cmp
pushf
jmp
push
call
mov
in
lea
call
xor
test
out
jmp
testl
pusha
pusha
add
pushf
stc
cmc
cmp
movzwl
sbb
shr
bswap
mov
jmp
lahf
bswap
movb
pushf
mov
setbe
movzbl
lea
jmp
mov
mov
mov
into
cmp
xchg
outsl
jmp
push
adc
and
ljmp
loopne
mov
rcrl
cmp
cmc
movsl
mov
dec
in
mov
imul
xchg
loop
and
scas
rcl
push
fdivl
lods
ss
pop
ret
push
arpl
xchg
aas
les
and
push
mov
mov
push
enter
push
xchg
jns
adc
lock
adc
pop
push
leave
sub
es
lret
adc
add
xchg
lods
adc
sbb
jae
cmp
fidivrl
popa
shrl
mov
insl
lret
adc
loop
jb
xchg
inc
and
lea
inc
pop
dec
mov
lret
xchg
push
pusha
sbb
sbb
out
dec
mov
insb
cld
pop
daa
mov
mov
jmp
add
js
pop
jb
pop
fisttpl
mov
jg
rcll
lock
in
insb
push
test
bound
lahf
add
fldenv
push
adc
pop
ss
imul
sbb
cltd
adc
inc
ret
insl
cs
push
stc
pop
xchg
fwait
sti
add
lods
add
fdiv
fsubrs
rolb
jecxz
test
sahf
je
lret
push
sub
sub
mov
cltd
sub
in
or
movsb
add
mov
push
xchg
js
movsl
notb
inc
dec
dec
xor
cs
insb
add
pushf
popa
or
add
lods
loop
jmp
jo
add
cli
aad
jg
pushf
popa
or
add
in
sarb
popa
or
add
gs
data16
mov
in
cltd
xchg
pushf
popa
addb
add
roll
jb
pop
popa
and
add
and
sti
inc
pushf
popa
or
add
lods
je
jl
scas
mov
ss
add
dec
mov
add
add
pushf
popa
or
add
sub
popa
popa
mov
lods
fsin
push
stos
add
add
and
or
add
in
shr
sbb
pushf
popa
or
add
lods
cltd
fidivrs
mov
loop
xchg
mov
bound
mov
add
add
or
push
push
mov
add
jo
popa
inc
ret
mov
add
std
push
test
popa
jmp
call
mov
cmp
push
mov
mov
and
or
and
add
sub
cs
pop
popa
cmp
add
cmp
pushf
je
xchg
add
divb
mov
add
popa
into
xor
scas
lds
inc
mov
fnsave
add
adc
xor
popa
pusha
add
add
cmp
xchg
test
add
insb
jo
cltd
xchg
add
leave
ja
mov
add
nop
lods
sbb
mov
popa
ja
add
ljmp
popa
add
add
pop
shrl
or
add
lods
fwait
and
cmc
mov
popa
icebp
adc
add
cwtl
jmp
cld
mov
lods
cmp
pushf
popa
or
add
lods
jle
cli
pop
fsts
add
push
mov
sub
add
aas
push
cmp
add
lods
jmp
pushf
popa
push
add
add
adc
scas
icebp
pop
sahf
inc
out
cltd
mov
cmp
nop
pop
loop
aad
and
cs
cmc
jmp
outsb
insl
pushf
ror
inc
adc
adc
pop
mov
add
call
push
jl
cli
jecxz
rorb
mov
inc
mov
outsb
cmpsl
mov
js
js
dec
ret
and
and
fstpt
popf
sub
add
mov
idivl
out
dec
sahf
cld
test
loop
repnz
sub
mov
inc
mov
and
ljmp
data16
adc
push
lahf
mov
mov
das
sub
jae
mov
pop
sub
mov
inc
dec
shll
jno
lea
mov
jnp
aam
fwait
adc
call
and
sti
sub
out
ret
sub
push
xchg
jne
call
call
leave
lea
jp
push
lea
call
push
pusha
movl
lea
jb
push
mov
pushf
pushf
pushl
ret
mov
out
pop
sub
stos
js
jb
push
loope
pop
xchg
ret
iret
lret
xor
fwait
and
jl
inc
arpl
in
fistps
adc
ss
icebp
sbb
sbb
or
cmp
test
sbb
or
xor
in
out
das
adcl
aad
mov
inc
out
inc
stos
push
cld
push
add
ficompl
mov
les
adc
jmp
sbb
pop
inc
lock
sub
xchg
repz
pop
jg
out
popl
lock
mov
sbb
decb
mov
imul
jmp
adc
push
lods
sbb
test
push
sti
push
call
push
loop
fisubl
xchg
bound
adc
aad
test
aaa
push
jg
outsb
pop
inc
lret
pusha
les
mov
lea
push
rorl
inc
cmp
mov
pop
jae
rcll
pop
mov
jae
xchg
je
jne
push
call
in
jmp
outsl
call
mov
enter
lods
cmp
popa
mov
icebp
lcall
inc
pop
jnp
sahf
sti
pop
mov
jge
inc
jp
imul
push
jns
stos
push
mov
hlt
popf
dec
or
add
add
mov
push
fcoml
movsb
leave
add
xchg
jo
test
mov
lret
out
pop
or
scas
sub
jle
add
js
jo
dec
mov
mov
insb
int3
push
xchg
jae
mov
xchg
or
add
adc
es
pushf
lea
jne
pusha
jmp
push
call
nop
mov
insl
or
scas
and
imul
mov
mov
lods
cmp
mov
in
cwtl
icebp
push
jecxz
in
mov
jecxz
mov
add
pop
mov
push
inc
mov
and
mov
pop
fisttpl
aas
je
or
aaa
mov
lods
inc
mov
mov
outsb
decl
push
or
mov
rolb
mov
in
jae
xchg
ja
in
jns
xlat
lods
imul
mov
jno
ret
pop
dec
mov
loope
xchg
adc
ficoml
rclb
into
and
test
adcl
ss
push
movsb
add
es
mov
push
mov
add
pop
add
jbe
sbb
sbb
data16
mov
scas
push
mov
insb
or
loope
mov
xor
dec
daa
mov
or
jae
mov
jmp
jle
into
push
push
mov
adc
clc
push
sahf
lcall
lds
roll
or
into
pop
call
sarb
in
mov
jns
test
xlat
out
js
mov
xor
scas
sub
sub
lods
add
ds
push
xchg
jb
addr16
pop
mov
add
pushf
cmp
movb
mov
clc
push
test
call
push
call
xor
hlt
adc
pop
xchg
or
dec
stos
xchg
stos
sbb
test
test
lods
leave
das
loopne
cmp
in
sbb
or
das
mov
scas
arpl
in
pusha
int3
jae
sbb
xor
xchg
xchg
stos
pop
jno
jb
xchg
test
push
loop
scas
xor
cmp
shr
push
call
sub
in
fs
jae
jmp
push
call
insb
mov
in
fwait
or
in
das
adc
bound
dec
or
sahf
mov
dec
aad
xchg
and
mov
adc
shr
in
seto
adcl
jge
xchg
cmp
sub
xchg
sub
add
cli
mov
pusha
data16
pop
leave
in
ret
push
sbb
daa
dec
dec
cli
adc
or
lock
add
xchg
out
mov
js
sub
lock
mov
aas
mov
jo
inc
push
add
push
push
dec
outsl
je
data16
arpl
inc
add
leave
pushf
push
pushf
lea
call
pusha
mov
call
push
call
mov
and
and
add
frstor
call
bt
sub
pushf
mov
not
call
push
call
movnti
xlat
mov
or
cli
jnp
add
std
xchg
je
xorb
dec
and
pop
movsl
or
out
inc
test
push
inc
xorb
or
daa
loop
rorb
cmp
jl
inc
mov
adc
mov
dec
mov
jne
jo
jle
inc
sahf
idivb
lea
or
sbb
or
call
and
pop
push
call
pushf
mov
sub
push
insb
loope
mov
mov
out
int3
push
test
mov
ss
shll
xchg
lods
xor
adc
mov
cmp
cwtl
dec
test
mov
rcll
daa
xor
into
in
dec
daa
fldl
mov
xor
sar
mov
ret
jp
push
xchg
jns
inc
movsl
or
cmp
es
int
roll
adc
pop
shll
shr
push
call
adc
jne
xchg
mov
xchg
xchg
jl
repz
jns
addr16
mov
dec
mov
loopne
cmp
pop
loop
jne
and
cld
cmp
incl
jne
mov
popf
pop
sub
and
lcall
je
mov
xchg
push
xchg
fs
sub
incb
pop
jno
pop
into
imul
push
aad
jnp
xchg
jmp
cmpsl
and
lahf
and
call
sub
mov
bt
cmc
cmc
and
pushf
pusha
pushl
add
push
lea
jmp
push
call
imul
mov
loope
into
in
mov
jo
cmp
and
dec
test
adc
dec
jbe
leave
sub
leave
pop
pop
std
ficoml
aas
cli
lret
adc
faddl
mov
outsl
js
bound
adc
dec
fidivl
loopne
pop
stos
and
inc
pop
pop
movsb
sub
fisubl
movsl
fstl
push
repnz
sbb
push
mov
dec
gs
mov
xchg
negb
sub
adc
insl
push
fs
add
sub
lods
push
test
pop
fisttps
enter
cwtl
popf
icebp
sub
cs
push
into
inc
les
repnz
out
dec
cmp
fadds
jns
popa
mov
lods
cmp
jmp
mov
int
pop
jge
add
scas
mov
iret
push
xorb
or
mov
nop
inc
inc
loop
test
das
xchg
mov
ret
int
or
in
jge
pop
mov
or
insl
push
call
add
xor
push
lret
adc
dec
bound
mov
popa
loop
rorb
mov
lods
cmp
fimuls
jns
push
xchg
cli
int3
out
mov
mov
sbb
mov
cmpsb
pop
add
xchg
out
fildll
and
sbb
mov
stos
or
stc
push
dec
sti
adc
jp
stc
adc
add
icebp
popa
loope
int
lds
push
xchg
insb
aas
push
push
and
jne
setne
mov
pushf
pushfw
popw
bt
push
mov
mov
movl
bt
ror
pushf
cmc
pusha
bt
not
clc
call
int
add
lahf
push
cmp
aaa
mov
int
sti
push
mov
sbb
ja
in
scas
frstor
adc
mov
xor
mov
mov
pop
mov
pop
adc
jecxz
pop
fistpll
stos
ret
xor
mov
leave
clc
mov
and
cmpsb
sub
sbb
push
addr16
insl
push
popa
outsb
pop
jo
push
mov
sub
jecxz
out
inc
stc
movq
pop
lahf
or
jae
cmp
movsl
ret
call
inc
lret
cmp
sub
mov
fstpt
shrl
lock
fimull
xor
dec
call
jl
jno
and
in
jbe
call
jl
inc
push
or
fdivrs
dec
divl
out
pop
xor
rorl
xchg
stc
jmp
dec
fmull
cmp
mov
imul
dec
push
int
lods
jae
popa
aaa
dec
mov
sbb
mov
call
fimuls
mov
shll
jo
xchg
lds
mov
imul
mov
jg
adc
jp
and
push
inc
lret
xor
cltd
adc
fwait
and
and
fbstp
jne
push
cmp
into
repz
and
adc
pop
mov
lret
jb
inc
std
mov
dec
mov
lret
int
in
stos
sti
xchg
lahf
xor
fmull
loopne
int3
pop
hlt
in
jp
rolb
xchg
repz
cs
rorb
cmp
jo
sub
add
sub
jb
call
loopne
stc
push
mov
movl
ljmp
shll
xchg
sbb
xchg
or
daa
mov
ret
rep
cmpsl
xlat
repz
jno
jne
adc
aam
mov
fwait
xchg
mov
jmpw
fistl
addr16
dec
sti
in
jno
fstl
push
out
push
aaa
pop
iretw
in
add
shll
push
xchg
push
lcall
call
out
mov
loope
aas
shlb
cltd
scas
movsb
or
mov
mov
jb
dec
mov
sbb
adc
hlt
cmp
js
push
push
mov
sub
lahf
clc
test
es
dec
add
loope
notl
inc
les
sub
push
enter
imul
or
adc
jne
arpl
call
bound
in
or
xchg
and
scas
xchg
push
ret
dec
mov
cmpsl
sub
mov
ds
or
lods
push
mov
mov
pop
jmp
sub
xor
sub
or
sub
sahf
push
cmpsb
and
xchg
imul
sbb
and
sar
shrb
stos
pushl
lahf
loope
daa
adc
nop
cmc
jbe
pop
popa
in
or
jle
and
xchg
adc
std
loop
aam
pop
out
movsb
hlt
mov
push
lcall
insb
test
jl
lock
adcb
ja
fcoms
jge
addb
pop
faddp
ret
loop
imul
dec
ds
gs
inc
sub
xchg
cmpb
mov
mov
fidivrs
jb
dec
inc
mov
add
mov
mov
xchg
adc
inc
in
ss
pop
dec
add
xchg
ljmp
mov
sub
mov
and
xor
scas
aas
cmp
cmpl
sbb
xchg
mov
mov
js
lea
push
and
repnz
mov
push
cmpsb
mov
jb
push
mov
mov
pop
adc
xchg
push
loope
clc
ja
shl
dec
mov
mov
mov
adcl
js
mov
and
mov
lock
out
aam
stos
aaa
cmp
push
push
divl
mov
adc
popf
in
cmp
out
pop
sbb
popa
out
loope
add
icebp
pop
mov
or
int
add
addr16
jle
rorb
rolb
cmpsl
mov
mov
mov
mov
aaa
jae
repz
mov
sbb
and
in
dec
aam
in
push
les
jo
xchg
data16
or
pushf
or
imul
xor
daa
cltd
or
fistl
adc
mov
lds
sbb
int
adc
scas
int
fiadds
adc
fdivrs
test
loope
mov
cmpsl
lods
and
jmp
test
xchg
shrl
sbb
add
jmp
shrl
cmpsl
push
insl
aad
push
pusha
mov
dec
lret
mov
and
xlat
les
adc
pushf
mov
jmp
fmull
bound
dec
ret
adc
dec
xor
xchg
aam
mov
push
aas
mov
xchg
and
xchg
xchg
pop
xlat
push
xchg
popaw
je
rolb
dec
mov
nop
aas
mov
rcll
and
aad
mov
push
push
mov
add
mov
fsubrp
or
les
mov
push
dec
pusha
mov
pop
or
es
or
aas
ret
inc
scas
sbb
fists
aaa
push
xchg
rcl
push
call
lea
fucompp
leave
out
adc
push
call
and
and
fiaddl
add
jge
pop
outsb
pop
outsb
mull
repz
mov
mov
ret
and
sti
test
loop
pop
cs
sbb
imul
mov
mov
mov
inc
das
sub
fldl
jl
mov
push
sarb
xchg
test
pushf
or
pop
push
adc
jle
inc
fwait
push
call
push
and
cmp
adc
push
call
adc
and
jae
pushf
mov
movb
pusha
push
lea
jmp
pushf
push
pushl
jmp
pop
ret
xor
or
incb
imul
into
jle
aaa
xor
stos
fwait
jo
lcall
addr16
add
jns
pop
in
lret
or
sbb
pusha
adc
xorb
xor
cmp
xor
out
mov
cmp
shl
in
pop
loopne
je
cmp
cmc
cmpsb
enter
fldenv
inc
mov
push
jb
outsb
ss
mov
sbb
pushl
lea
ja
pushf
adc
call
push
call
leave
or
daa
push
call
clc
lock
call
pop
les
mov
je
push
mov
leave
push
mov
leave
cmp
mov
push
xchg
and
push
call
jne
push
call
int3
lea
jne
or
add
je
lds
sbb
shrb
movl
lea
jbe
sar
mov
xor
bsr
sbb
dec
add
adc
mov
rol
add
bts
add
clc
movl
not
mov
bt
test
push
call
push
call
inc
push
call
cwtl
xor
xchg
call
adc
mov
call
data16
scas
es
and
mov
cld
pop
ficomps
and
pop
mov
mov
mov
idivb
stos
adc
cwtl
xor
xchg
inc
push
scas
cld
dec
mov
xor
push
push
xor
fildll
insl
aas
mov
cli
stos
int
lds
mov
fcmovne
cs
xor
hlt
push
rolb
or
call
add
add
sub
push
int
push
and
jnp
adc
jnp
inc
sbbb
add
jp
cmp
xor
ss
jl
push
jecxz
rcrl
or
int
fimull
jp
aas
xchg
ds
ret
sti
mov
inc
mov
clc
mov
sarl
imul
rcrb
sub
adc
mov
fmull
sub
fcomip
jp
xor
je
push
faddl
lret
scas
data16
jbe
jle
cltd
icebp
sub
daa
pop
out
shl
xchg
ret
inc
out
hlt
fs
sub
jbe
test
jnp
pushf
sbb
mov
ret
xor
pop
mov
outsl
rorl
sub
bound
push
nop
or
popa
push
adc
subps
push
call
mov
pop
movl
jmp
push
call
adc
push
call
in
jnp
dec
lods
pop
xlat
popf
xchg
adc
mov
add
push
aam
lds
pop
loop
ss
mov
push
std
aad
nop
cmpsb
fstl
cmc
push
or
adc
sub
cmp
cld
add
mov
mov
leave
dec
int
sbb
inc
and
addl
cmpsb
adc
xor
or
pop
sbb
stos
sub
mov
xchg
sbb
popa
popa
je
lea
call
pusha
test
cmp
sub
pusha
lea
jne
jmp
pusha
pusha
lea
je
jmp
aas
bts
push
cmp
sub
push
movsbw
shld
lahf
lea
push
jmp
shlb
dec
mov
pushf
sbb
dec
popf
cli
jb
cmp
sub
aas
cmc
pop
or
daa
mov
hlt
insb
cld
push
fdivs
adc
adc
pop
rclb
ret
inc
lret
jns
call
add
push
or
xor
add
push
or
or
out
adc
in
movsl
arpl
mov
mov
outsb
lret
dec
cmp
adc
aam
loop
mov
enter
and
mov
adc
jne
mov
sbb
fsubs
jmp
xchg
dec
lret
jb
mov
movsl
inc
cmp
js
push
insb
lret
push
push
xchg
and
scas
mov
cmp
jg
hlt
add
cmp
pushl
inc
scas
aas
mov
xchg
add
repnz
add
mov
adc
inc
mov
lea
outsl
sti
arpl
jb
sbb
or
mov
jnp
iret
cmpsb
mov
sbb
pop
mov
inc
insb
lcall
outsb
mov
jo
or
loope
ret
sbb
lahf
inc
mov
jno
pop
mov
clc
adc
loop
out
jp
mov
pop
lret
inc
mov
addb
xchg
pusha
mov
sub
loopne
mov
add
stos
das
test
lret
pop
mov
mov
cmp
mov
addr16
push
and
in
into
jo
dec
inc
or
fists
jbe
cmp
outsl
mov
fisttps
jp
sub
cmp
sbb
jbe
outsb
sbb
dec
sahf
into
ds
sbb
jbe
cld
pusha
cwtl
jne
jge
xchg
dec
pop
imul
or
cmp
mov
pop
and
dec
push
call
xor
or
call
jecxz
jmp
sbb
xor
adc
imulb
popa
out
fcoml
dec
int3
and
lods
jmp
mov
jnp
pop
jmp
jb
and
dec
mov
data16
or
xchg
adc
ja
fwait
repz
loopne
ret
push
push
pop
pop
pop
mov
push
pop
mov
add
jge
outsb
ljmp
mov
sti
outsl
fildll
push
scas
adc
mov
push
loopne
xchg
lret
adc
adc
xor
mov
lods
push
mov
lea
push
out
push
mov
cmpsl
and
xor
cmpsb
and
mov
or
test
push
mov
sahf
lods
rorl
shr
push
cmpl
adc
mov
gs
pop
or
cmpl
scas
add
jnp
xchg
pop
add
and
jae
dec
call
cmpl
insb
in
out
fnsave
xchg
or
aaa
lods
cmp
sub
sub
sub
stos
test
jae
mov
test
in
imul
movsl
or
ror
jmp
fdivrl
cmp
jl
in
mov
mov
jl
inc
mov
imul
or
mov
adc
mov
pop
mov
testl
adcl
adc
lcall
jmp
inc
mov
fsubl
mov
cs
add
push
xchg
sbb
out
xchg
mov
popa
into
daa
sub
add
mov
xchg
inc
lret
and
cmc
insb
xchg
xlat
inc
cmp
xlat
in
jle
sahf
cs
push
or
sarb
mov
enter
pop
pusha
test
jmp
push
call
cmp
xchg
or
pop
and
stos
clc
xor
mov
lcall
bnd
std
mov
sub
add
outsl
xchg
hlt
mul
inc
pop
dec
push
and
popf
jbe
add
xor
ljmp
icebp
xchg
aas
jo
scas
xor
das
inc
leave
jo
xchg
sbb
jnp
dec
ljmp
mov
test
clc
and
std
sbbl
outsl
out
repz
mov
sbb
sub
push
jge
mov
and
mov
or
push
outsl
lock
loopne
mov
addr16
lcall
xchg
in
xchg
adc
inc
inc
stos
add
push
repnz
and
push
pop
gs
ljmp
sahf
push
lods
xor
adc
imulb
out
inc
scas
push
push
leave
add
inc
clc
push
outsl
iret
and
scas
fstl
xor
and
or
popa
int
push
xchg
pop
stos
mov
jns
call
mov
jg
pusha
lea
jae
not
mov
pushf
pushf
pushf
lea
jmp
push
call
sub
add
xchg
imul
jp
call
in
daa
push
shrb
or
call
xchg
movsb
sub
push
mov
ja
lcall
pop
add
dec
mov
xor
test
cld
jg
lock
test
and
xor
jmp
jnp
jne
aaa
mov
mov
icebp
add
push
aam
lcall
int3
out
inc
movsb
or
pushw
addr16
lock
mov
enter
fdivs
inc
jns
loopne,pt
inc
subb
stos
hlt
cmp
shrl
mov
mov
pop
mov
xchg
pop
test
shrl
xchg
adc
inc
or
into
or
cli
push
loopne
rorb
xor
popf
sbb
enter
xor
jbe
jmp
cmp
dec
mov
sub
sub
adc
or
mov
int
fisttps
xor
cmp
jmp
lock
mov
dec
bnd
fsubs
lea
cmp
or
mov
mov
add
pop
call
add
jge
pop
std
daa
or
cli
arpl
pop
scas
jnp
sub
lds
sbb
add
adc
pop
shrb
and
insl
xor
push
lds
add
ds
cwtl
sahf
xchg
scas
jg
pop
das
xlat
out
sub
into
test
cltd
sbb
mov
xchg
out
pop
jmp
inc
mov
sub
add
loopne
cmpsb
or
clc
dec
lds
mov
add
ja
mov
dec
in
push
mov
fimuls
fstpt
xchg
cld
mov
stos
pushf
dec
sarb
mov
ds
mov
mov
xchg
push
scas
push
xchg
pop
mov
lea
call
mov
imul
imul
push
je
jo
mov
lea
ja
pusha
movsbl
bswap
mov
push
push
mov
pushl
movsbw
mov
pushf
mov
movsbl
xchg
not
push
mov
movw
lea
bswap
call
mov
lea
jne
call
push
call
cltd
outsl
mov
cmp
add
call
xorl
nop
icebp
lods
mov
cmp
insb
mov
outsl
mov
int3
pushl
sub
das
flds
popa
pushf
int3
pop
pop
xchg
xor
inc
mov
aaa
mov
xchg
sub
jae
mov
xor
push
xchg
sub
inc
xor
movsl
ret
sub
popa
loopne
xorb
shlb
aam
sub
sub
stc
out
mov
leave
scas
cld
fsubrs
cmp
or
stos
dec
scas
dec
popf
in
mov
scas
mov
jo
int3
stos
jno
pushf
lret
jle
jge
cmp
gs
js
mov
orl
xchg
stc
pushf
cmp
or
pop
adc
mov
xchg
iret
push
icebp
lods
pusha
nop
mov
push
aas
inc
cmpsl
mov
xor
shl
mov
push
icebp
sahf
aas
stos
aaa
xchg
dec
jp
je
mov
jge
mov
jp
mov
test
mov
cltd
xchg
repz
movsb
movsl
jae
sub
sub
xor
jecxz
repnz
and
jne
xchg
inc
mov
xor
jae
pop
rorl
or
pop
mov
jmp
leave
and
in
xchg
nop
in
in
xchg
in
mov
jle
loope
fcoml
ljmp
xor
nop
popa
orl
out
insb
xchg
pop
subl
jbe
repnz
arpl
sbb
mov
dec
les
movsl
out
cld
mov
jnp
xchg
dec
scas
das
movsl
sub
mov
stos
mov
lret
mov
sub
lea
movsl
cltd
mov
fs
bound
mov
jg
lret
mov
push
and
lods
aas
in
rsm
mov
xor
lods
pop
inc
sti
jo
rcl
push
pop
jge
aas
mov
out
loope
cld
mov
fs
adc
xchg
sbb
mov
mov
int3
subl
jne
movsl
imul
mov
scas
jmp
shr
bound
out
fsts
jae
mov
int3
mov
or
dec
adc
jl
xor
mov
xor
xor
jns
inc
mov
lds
lods
adc
push
jb
push
imul
mov
mov
imul
inc
adc
shlb
aas
xchg
sbb
pop
sbb
adc
movsl
call
push
shll
sbb
mov
loope
push
jbe
and
sti
mov
les
xchg
xchg
mov
xor
addr16
addr16
lret
rorl
leave
idivb
addr16
cmc
bound
insl
std
rolb
xchg
pop
arpl
cmp
insb
mov
pop
sbb
bound
scas
lret
popa
and
shll
mov
repnz
mov
aas
mov
add
mov
pop
mov
mov
xor
cli
jns
movsl
aas
ret
xor
mov
ss
push
stos
dec
or
scas
jbe
mov
rolb
nop
cmpsl
mov
std
movsl
movsb
aam
leave
out
xor
shrb
mov
repz
aam
rcrl
nop
push
lods
push
mov
or
jle
xchg
xor
mov
and
xchg
pop
mov
mov
imul
int3
xor
inc
fsubs
cmpsb
daa
cwtl
nop
pop
sub
test
and
mov
lods
adc
xor
jmp
movhps
xchg
jns
push
imul
and
fbld
fwait
mov
ret
mov
cld
push
loopne
ljmp
cmp
cwtl
push
lods
jb
outsb
gs
xor
gs
mov
ja
jno
mov
stos
xor
inc
mov
stos
mov
adc
jo
dec
imul
pop
sub
es
movsl
inc
into
jb
or
insl
data16
hlt
data16
and
mov
inc
and
pop
jp
pop
cmp
and
push
jae
mov
in
stos
xor
sbb
xorb
arpl
movsb
daa
outsb
adc
ja
scas
and
jecxz
lret
or
xchg
jmp
jmp
clc
outsb
mov
ret
mov
mov
lods
push
fstl
sub
dec
shr
stos
adc
mov
mov
push
lea
mov
dec
xor
aam
faddl
adc
enter
lods
pop
sub
adc
sub
sub
stos
mov
dec
sar
int3
fsubrl
and
mov
lods
test
in
mov
scas
mov
jg
cmp
sti
call
sub
cs
je
xchg
dec
lds
push
mov
add
inc
movsb
sti
sbbl
jo
ds
das
xchg
scas
outsl
sub
in
mov
imul
test
cld
out
push
sbb
hlt
int
mov
les
inc
fs
bound
rolb
test
int3
fwait
imul
out
or
sar
dec
data16
lods
mov
mov
xchg
mov
je
lods
add
leave
mov
dec
ret
push
mov
push
pop
sub
push
push
lods
xchg
ja
cltd
jne
out
add
mov
imul
movsb
imul
jns
pop
sub
insb
push
xchg
insb
mov
stos
xor
dec
data16
clc
rcrl
or
scas
mov
xchg
in
mov
addr16
ja
pushf
add
fmuls
mov
add
das
cmp
push
or
xchg
lret
aas
pop
sub
add
outsb
outsb
in
ret
or
pop
outsb
push
lret
js
inc
mov
insl
add
movsb
mov
jl
stos
jecxz
pop
sahf
jo
int3
lea
lods
mov
mov
jo
rcrb
in
ret
mov
lock
xchg
ljmp
mov
mov
outsb
outsl
ljmp
mov
aam
pop
popa
daa
scas
inc
nop
movsb
xor
xchg
inc
mov
rorl
cmpsl
dec
int3
stos
pop
push
push
mov
dec
stos
ficoml
in
lcall
cmp
and
data16
sbb
movsb
aam
outsb
mov
jg
pop
imul
cmpb
shlb
std
jp
jno
lea
sbb
ret
and
test
and
fidivrl
adc
lods
movsb
insl
jo
xchg
mulb
xor
xchg
ror
les
in
cmpsb
enter
imul
xor
je
das
bound
sub
and
ret
jo
xchg
sub
shr
push
mov
lret
fidivs
xor
xchg
das
adcl
lcall
mov
fcompl
arpl
test
and
lock
clc
mov
dec
mov
jno
in
out
mov
inc
arpl
cmp
dec
mov
stos
jno
mov
pop
jns
cmp
mov
clc
mov
xor
rcrb
lock
inc
aam
xchg
pop
lahf
adc
jmp
fnstenv
rcr
mov
push
push
jb
fsubrs
xchg
arpl
fcoml
mov
test
push
xchg
aaa
lret
jecxz
int3
cmp
ja
das
sub
jae
xchg
aam
pop
in
jns
jle
mov
add
mov
js
pop
dec
jo
fs
enter
sub
adc
inc
add
lret
xor
int3
fstpt
xchg
or
push
shll
shrb
pushf
mov
xchg
push
pop
fnstenv
in
je
jo
dec
pop
mov
stos
sti
inc
adc
lds
mov
cmp
enter
jle
jnp
aam
mov
inc
mov
subb
add
jge
mov
jo
call
movsl
xchg
lret
je
lret
imul
fcmovnu
test
mov
ja
arpl
movsl
pxor
dec
gs
mov
seta
int3
push
jne
inc
flds
lea
xchg
mov
out
lahf
dec
pop
in
pop
cmpsl
or
pop
inc
test
jbe
mov
jb
sub
in
or
test
stos
pop
jbe
xchg
and
inc
ret
dec
int3
inc
cmp
jb
cmp
fs
scas
es
out
mov
ret
shlb
add
pop
loope
je
inc
das
rclb
lock
js
adc
js
cmp
cmpsb
jno
and
push
add
es
out
sbb
clc
test
cwtl
lods
test
lahf
or
or
es
aam
andb
popf
sarb
mov
adc
shrl
call
mov
sbb
dec
cmp
dec
and
cmp
fwait
lods
fistps
enter
sti
leave
mov
cs
mov
bound
mov
jns
inc
loopne
jb
pmaddwd
lods
icebp
jne
push
pop
outsb
mov
aam
mov
test
andl
xor
je
mov
das
mov
cmpsb
fmul
lret
jnp
je
sti
mov
jne
push
loopne
shr
sub
daa
fldenv
ret
jb
daa
adc
or
pop
jb
jnp
aaa
lret
pop
mov
push
jnp
aam
mov
sub
shlb
shl
and
cmp
mov
mov
mov
jge
adc
shlb
cltd
mov
jl
out
test
jno
rolb
ja
push
test
pusha
mov
pushl
add
test
pusha
call
pop
adc
mov
adc
jae
pop
mov
jb
mov
cmp
jge
repnz
jnp
into
sbb
adc
pop
and
or
cmpb
jmp
arpl
and
mov
jge
jno
mov
lock
daa
mov
jle
dec
or
shlb
lret
jo
pop
repnz
jo
xor
mov
xchg
mov
xor
loop
jnp
inc
jg
adc
nop
mov
movb
jb
adc
cmpb
mov
inc
jae
add
in
icebp
sub
sbb
mov
negb
popa
adc
test
jb
and
mov
data16
xchg
jo
clc
jns
fnstenv
mov
xchg
jb
mov
lcall
insb
inc
xchg
in
movsl
xor
icebp
add
insl
lods
mov
push
andl
in
test
pop
test
mov
sub
xor
mov
stos
test
xchg
xchg
mov
in
gs
enter
pop
cmc
outsl
movsb
xchg
push
imul
inc
imull
add
bound
cltd
nop
outsb
test
movsb
filds
movsb
arpl
sahf
dec
mov
jae
push
fisubl
dec
aas
mov
xchg
mov
xchg
pop
into
inc
inc
xor
jae
outsb
xchg
mov
and
stos
jge
push
dec
push
arpl
mov
mov
jecxz
orl
int3
jb
loop
lds
sbb
add
rolb
les
jl
adc
jg
cs
inc
bnd
pushf
imul
imul
adc
mov
and
clc
xor
lret
cmp
stos
jg
mov
push
enter
loopne
test
hlt
add
aad
loop
xchg
jbe
xchg
xchg
dec
imul
outsb
sbb
test
sub
test
test
push
mov
repnz
adc
test
or
inc
cld
fisubs
pop
std
fsubl
into
clc
add
push
insb
lret
test
lods
or
int
xchg
add
xchg
test
repz
sbb
add
cli
jg
adc
adc
in
xchg
and
dec
popf
arpl
jb
in
stos
jmp
xor
fs
out
mov
inc
cmp
xchg
pop
dec
dec
add
mov
outsl
movsb
fldl
lahf
aam
jns
and
dec
je
pushf
xor
iret
xchg
xchg
rep
pop
sub
mov
scas
data16
loopne
out
lea
jnp
and
xor
mov
std
inc
scas
sbb
sbb
mov
popl
ret
xor
dec
mov
jne
jmp
rorb
std
data16
cmpsl
loop
sbb
push
jnp
cmp
data16
jb
ror
sahf
bound
gs
xorl
mov
nop
dec
xchg
xchg
data16
cmp
scas
xchg
cld
sahf
xchg
int3
mov
mov
mov
jecxz
mov
pop
inc
add
scas
popa
jno
popf
das
fisttpl
mov
popa
fcompl
fidivrl
and
jae
adc
sbb
and
dec
sbb
insl
je
jo
pop
jno
cmp
sti
or
test
lods
popf
mov
test
and
fmull
jb
and
and
rcl
cmp
pop
jl
loop
mov
pop
outsb
mov
xor
mov
mov
mov
cwtl
xchg
loop
sbb
push
mov
mov
mov
adc
fisubrs
add
ret
mov
nop
mov
sbb
mov
loopne
mov
mov
lock
cmp
loope
push
test
mov
insb
sbb
pop
cmpsl
int3
sbb
jnp
repnz
sub
stos
mov
mov
mov
out
mov
jnp
mov
aam
jno
insb
test
jmp
bound
pop
xor
rorl
push
das
icebp
mov
stos
lods
sarb
fsubl
wrmsr
mov
add
mov
mov
les
jmp
sub
mov
push
sbb
push
add
mov
mov
or
pop
scas
mov
popa
add
add
cmp
ja
xchg
sbb
popa
test
popa
notb
and
add
mov
and
xor
adc
jnp
movd
push
data16
mov
dec
addl
pop
int
adc
mov
fsub
pop
mov
aaa
xorl
dec
nop
inc
setae
les
pop
xchg
xchg
sub
ss
lods
dec
outsb
in
ret
ret
ret
bound
mov
xchg
mov
and
sub
inc
sub
iret
mov
mov
jmp
xor
mov
pop
mov
lds
push
xor
adc
mov
mov
xchg
or
or
pop
icebp
pop
adc
ret
mov
xchg
cs
test
cltd
lock
imul
enter
xlat
push
andb
fadds
test
nop
sub
adc
xchg
inc
mov
andl
roll
cmp
add
sub
pusha
jns
cld
jl,pn
xchg
pop
je
clc
movsb
mov
cmc
mov
mov
incb
xor
iret
lcall
pop
jmp
xor
aaa
je
xor
pop
enter
sbb
imul
or
je
mov
xchg
xchg
lods
scas
fldl2e
nop
pop
loope
cld
xchg
sub
mov
out
xchg
je
aam
mov
test
sbb
or
jge
mov
mov
dec
sarl
andl
sbb
xchg
xchg
sbb
jl
mull
dec
jns
jno
in
lret
sub
pop
sub
lods
nop
lea
rcll
adcl
cmc
xchg
or
lea
mov
adcl
mov
xchg
push
shlb
dec
sub
or
fnstenv
popl
loop
cmpl
sub
lock
stos
xor
add
cld
and
insb
scas
or
int3
lahf
sbb
in
inc
xadd
mov
popa
jo
mov
in
ret
rolb
shl
mov
or
push
rcll
or
mov
outsb
pop
jb
mov
gs
cmp
and
jnp
call
xchg
mov
movsb
ss
scas
sub
push
inc
mov
dec
sbb
dec
mov
xchg
jns
hlt
stos
jbe
push
out
mov
test
fists
nop
mov
mov
xchg
dec
adc
mov
fcoms
cld
lea
mov
inc
dec
mov
insl
test
push
push
mov
lock
into
repz
mov
sti
into
add
cli
xchg
outsl
lods
ja
inc
mov
inc
imulb
rorb
mov
ret
mov
add
push
add
mov
popl
mov
jb
sub
mov
lds
out
jnp
fcomp
loop
call
ja
and
lock
popf
int3
out
mov
sub
sti
inc
pop
and
mov
mov
push
cmp
inc
scas
xchg
outsl
and
xchg
or
mov
push
hlt
sbb
sub
insb
mov
ljmp
jae
call
mov
xchg
push
cld
mov
int3
push
imul
mov
push
cmp
mov
xor
lods
dec
js
cmp
xchg
mov
inc
lock
int3
fdiv
stos
cld
sub
cwtl
popa
popa
push
sub
pop
pop
movsb
fcomi
inc
fisttpl
shlb
jbe
mov
sub
xchg
inc
mov
pop
pop
jae
aad
test
xchg
jle
xor
pop
mov
sub
jecxz
fwait
jnp
loop
inc
push
inc
cld
and
inc
inc
push
xchg
push
mov
mov
mov
stos
loope
popa
push
push
in
sti
mov
aam
mov
mov
push
and
jnp
push
testb
fwait
push
aaa
sub
lock
pop
mov
test
add
dec
lea
jns
rorl
pop
loopne
adc
mov
test
test
lods
fwait
mov
arpl
add
jle
mov
dec
in
jb
mov
mov
nop
push
sub
mov
jl
mov
sub
pop
mov
adc
sahf
outsb
lods
test
iret
dec
jo
xchg
rcrl
or
test
xchg
jno
add
mov
mov
adc
dec
addr16
mov
mov
push
pop
sub
xchg
fisttpl
test
pop
outsl
and
xchg
cld
mov
sub
and
int3
push
adc
cltd
xchg
movsb
call
pop
and
dec
sub
fwait
das
lock
jl
rorb
mov
dec
xor
rcr
loopne
scas
dec
pusha
sub
pop
adc
jo
popa
add
mov
inc
lret
int3
sahf
fwait
mov
ljmp
int3
pushf
or
jbe
push
sub
jne
add
pushf
and
dec
sub
mov
mull
push
jo
push
lret
pop
sbb
mov
or
out
stc
mov
int3
subb
call
std
movsl
into
adc
sub
popa
and
mov
mov
movsb
jno
imul
fcomps
hlt
pop
popf
fadds
cld
scas
test
imul
xor
xchg
lock
jg
fsts
mov
in
mov
lods
jb
fildl
loop
test
sub
fs
sahf
daa
adc
loop
sub
sahf
pop
jb,pt
aas
das
mov
and
push
mov
loope
lcall
stos
xor
dec
mov
mov
out
push
scas
lods
ret
js
pop
or
lahf
jnp
mov
cld
test
xchg
cmc
lahf
dec
or
mov
mov
mov
lock
mov
xchg
insb
arpl
movsl
ljmp
lahf
bound
lea
addr16
pop
bnd
es
outsl
arpl
and
sub
shrl
mov
mov
cmpsl
ret
int3
xlat
xchg
das
mov
jb
arpl
lods
mov
lcall
test
pop
arpl
aas
mov
in
cmp
and
jo
sub
iret
mov
xor
or
into
in
cs
xchg
dec
mov
push
nop
test
pop
add
dec
or
rcll
stos
sbbb
add
cmp
push
inc
lods
bound
jo
jb
popf
loope
push
sub
movsb
daa
or
jb
xchg
sub
and
mov
lea
lcall
js
xchg
lahf
mov
cld
movsb
out
mov
cli
dec
mov
jle
cmp
fmul
mov
sbb
cmpsl
and
push
push
adcl
mov
ret
jmp
rorb
dec
mov
pushf
neg
out
gs
pop
xchg
aas
loop
std
or
lds
fs
xchg
data16
es
into
push
jb
inc
add
cli
and
mov
pop
mov
jmp
stos
dec
jl
xchg
push
cmc
mov
insb
lock
mov
add
mov
ret
pop
xor
shlb
imul
lahf
and
dec
imul
jb
test
js
pop
lock
inc
cmc
dec
or
sub
sbb
fs
and
dec
cld
ss
aas
inc
enter
mov
fdivs
jb
mov
jo
ds
xor
movsb
xchg
add
xchg
jl
scas
rol
movsl
xchg
mov
in
adcb
jle
leave
in
test
dec
mov
popf
jmp
xchg
and
sahf
int3
mov
pop
xchg
test
pop
movsl
dec
cmp
sbb
sbb
jae
sbb
movsl
mov
mov
cmpsb
push
movsb
outsb
enter
cmp
mov
nop
addr16
fbld
ret
mov
xchg
jo
push
adc
rclb
into
xchg
mov
jecxz
sub
sbb
dec
insl
mov
mov
test
jns
mov
sub
pop
inc
lods
mov
leave
cmpsl
std
add
sbb
repnz
iret
mov
xor
cmp
mov
or
dec
cmpsl
push
push
add
cmpsl
inc
jb
test
je
gs
mov
xchg
xchg
jo
mov
jle
test
lods
arpl
pop
xchg
jmp
subl
xchg
pop
test
xor
incl
ljmp
sub
mov
add
test
sub
dec
dec
jle
add
jp
sbb
shrb
sbb
jno
imul
test
mov
mov
mov
pushf
jl
das
stos
lret
cld
pop
lods
jmp
xor
outsl
sub
jmp
jg
jmp
popl
pop
mov
mov
test
shrl
ljmp
cli
lea
jb
sti
sub
ror
cld
lcall
cmp
and
or
movsb
cmpsl
test
stos
pop
insl
pop
and
test
jo
std
jle
jg
in
pop
xchg
stc
mov
push
push
fadds
xor
add
stos
rcl
cwtl
shl
and
loop
xchg
lahf
mov
es
xchg
pop
and
dec
outsb
aam
int
cmp
js
cmp
jb
sub
sarb
inc
mov
not
int3
faddp
inc
mov
and
enter
arpl
cltd
rcll
lods
cltd
jne
in
sub
mov
inc
roll
jecxz
jmp
or
sbb
jg
jnp
or
mov
icebp
movsl
lods
addr16
stos
sub
fcompl
push
mov
jns
adc
es
jns
shld
fimull
int3
stos
adc
fadds
mov
mov
lahf
scas
lret
jl
and
imul
inc
xor
in
lds
jne
mov
inc
sbb
lods
in
mov
scas
jle
lret
ja
movsb
repz
enter
mov
data16
jae
sbb
subl
shl
scas
jle
mulb
sbb
cmp
jp
xchg
sarb
scas
mov
push
and
jne
mov
xchg
pop
xchg
mov
dec
sub
lods
mov
jp
xchg
fnsave
mov
adc
mov
xor
inc
sti
iret
mov
add
rclb
mov
ficoml
mov
xchg
mov
ljmp
adc
mov
lahf
dec
mov
add
jae
out
das
dec
inc
mov
enter
in
enter
mov
in
mov
push
adc
jns
insl
adc
sbb
int3
xlat
testl
mov
outsb
mov
in
fcomps
cs
mov
and
xor
mov
mov
adc
xor
dec
scas
arpl
adc
test
mov
dec
inc
or
cld
push
jno
lock
jns
pop
ja
push
mov
ret
pop
sahf
xor
xchg
insl
mov
clc
das
xchg
or
stc
movsb
push
adc
lock
in
pop
fistpl
xchg
pop
pop
aam
mov
and
dec
test
mov
pop
push
shl
add
sub
cmp
fs
push
sarl
out
stos
pop
icebp
cld
push
push
outsl
jno
repnz
xor
xchg
mov
cs
test
mov
popf
mov
leave
xor
mov
inc
pop
imul
dec
cmpsl
lret
test
jno,pn
xchg
and
call
test
loopne
cmp
scas
je
xor
jge
push
xlat
pause
das
in
jp
sarl
in
mov
add
icebp
pop
xor
jmp
add
ret
jo
nop
test
mov
mov
scas
cmp
sbb
mov
stos
leave
cmpb
mov
jge
mov
push
lret
jnp
lods
in
rcll
shlb
call
loop
scas
arpl
jp
aas
das
mov
sbb
pop
mov
jnp
lcall
shrb
insl
cmpsl
lret
xchg
jge
sub
dec
dec
movsb
mulb
mov
mov
pop
adc
lods
movsb
xlat
scas
lods
push
push
mov
fwait
aad
mov
cwtl
xchg
repnz
xor
pop
pop
cltd
push
xchg
mov
in
cwtl
add
fwait
nop
mov
add
xor
sub
mov
inc
pop
xchg
int3
mov
les
adc
pop
fstpl
mov
push
mov
mov
sub
push
sbb
mov
arpl
andl
sub
pushf
sub
test
inc
jl
outsl
adc
xchg
std
cmpsb
iret
jo
dec
les
and
lcall
cld
test
popa
mov
popa
stos
push
mov
cmp
dec
xchg
jnp
in
stos
cs
mov
pop
popa
mov
xor
mov
pushf
mov
and
jo
xor
cmp
outsl
decl
cltd
ja
mov
stos
test
inc
and
daa
cmp
loop
xorl
shll
stos
adc
lods
mov
lret
gs
sbb
inc
icebp
aaa
not
stos
into
xchg
cmp
lods
fs
insb
jae
int3
sbb
mov
mov
push
lods
addr16
mov
dec
stos
dec
je
mov
xchg
push
xchg
push
loope
mov
fwait
mov
mov
enter
popl
loopne
jno
xchg
call
push
mov
mov
push
adc
jno
lret
cmpsl
hlt
lods
mov
xor
fs
pop
movsb
daa
push
lahf
add
insb
fwait
test
pop
xor
and
adc
ret
in
mov
int3
mov
jnp
aas
stos
aaa
pop
popf
push
lcall
cmp
movsb
in
push
int3
pushf
stos
mov
xchg
push
xchg
out
mov
mov
push
mov
cmpsb
std
mov
loop
mov
sbb
push
in
ret
mov
test
leave
cmpsl
cwtl
test
sub
xchg
in
shl
cmp
testl
xchg
aas
lods
sub
xorb
ja
cmp
scas
fldcw
pushf
mov
sbb
fdivrl
mov
stos
add
xor
inc
xchg
das
mov
push
in
shl
into
xchg
pop
movsb
filds
xor
jns
xlat
in
mov
mov
mov
dec
stc
outsb
push
jno
dec
aam
loope
xor
movsb
or
cwtl
popa
dec
pop
or
sub
or
and
sbb
stos
push
sub
sahf
aas
mov
test
xchg
out
mov
jb
sbb
icebp
imul
sbb
aas
sub
out
cmp
cwtl
stos
mov
mov
outsl
ja
sahf
test
lods
aad
pop
push
lret
sub
orl
mov
fsts
xchg
leave
cwtl
movsl
es
icebp
cmc
or
dec
sub
in
mov
mov
push
xor
inc
lcall
sub
and
hlt
xlat
mov
push
jno
inc
fs
lea
ret
in
push
aas
mov
sub
leave
mov
sub
mov
xor
in
stc
das
aaa
and
mov
fwait
dec
xor
jo
push
jo
pushf
cmpsl
andb
in
int3
sub
in
fcompl
aam
adc
sub
pop
daa
sbb
insb
jns
mov
lods
xchg
adc
mov
jmp
mov
incl
xor
test
mov
sbb
push
mov
sbb
xor
push
inc
test
stos
cmp
sub
test
mov
sub
fdivrs
je
mov
leave
dec
inc
sub
pusha
shlb
fisubrs
jae
pop
sub
stos
sub
inc
xchg
jb
arpl
or
daa
xchg
movsb
andl
cmp
stos
add
fwait
ret
mov
nop
mov
pop
daa
and
adcb
or
xor
pushf
inc
scas
dec
stos
outsl
cmp
xor
js
mov
cltd
sub
jo
sub
and
hlt
rcrb
bound
iret
xchg
pushf
lods
sub
lods
cmpsl
in
and
int3
inc
xchg
sbb
je
repnz
mov
je
sub
ss
xchg
js
sub
aas
fwait
jl
sbb
nop
mov
lds
lods
sahf
aas
aad
sub
xchg
sub
sar
xchg
cwtl
in
out
scas
js
movsb
mov
dec
mov
mov
test
pop
or
push
sti
jmp
je
and
fs
mov
aas
cmpsl
xchg
pop
leave
int
adcb
mov
lds
lods
sbb
mov
push
jb
sub
jae
adc
xchg
xchg
and
mov
adc
mov
in
mov
scas
mov
xchg
lahf
outsb
leave
mov
lds
cmp
dec
or
xchg
xchg
outsl
pushf
mov
xchg
les
jmp
jl
sub
stos
andl
jo
jl
xchg
fs
test
in
xchg
jl
int3
mov
lret
sahf
mov
ljmp
les
push
nop
mov
mov
xor
icebp
aad
xor
mov
fdivrl
jns
xchg
adc
jle
aam
lods
int3
stos
mov
popf
add
pushf
leave
outsl
mov
inc
pusha
pop
int3
push
inc
sub
xchg
mov
pop
icebp
sahf
pop
dec
scas
aas
push
dec
out
iret
rep
andl
push
mov
adc
pushl
mov
icebp
leave
repz
mov
mov
add
mov
popa
daa
pop
jo
scas
fadds
out
in
xchg
mov
mov
stos
or
jmp
or
pop
cmp
push
icebp
sti
test
test
test
rcrl
mov
ret
push
jb
pop
je
cmp
cmpsl
dec
call
jno
lods
mov
ja
mov
push
pushf
mov
pop
and
xchg
mov
lock
nop
je
scas
add
mov
je
lods
sub
shrb
sub
nop
lcall
push
pop
fs
inc
movsb
jle
lods
cltd
inc
sbb
nop
cmp
xchg
shr
outsl
aam
push
shll
sub
cmpsb
mov
mov
dec
aam
cmp
push
out
mov
mov
xor
xor
inc
mov
aaa
push
mov
cwtl
stos
pushf
ss
add
cmp
jecxz
orl
ljmp
fmull
insb
mov
and
push
imul
lods
mov
jae
jns
cmp
mov
mov
in
mov
shlb
insb
push
dec
mov
push
mov
adc
in
ss
push
mov
dec
dec
imul
cmpb
in
nop
xchg
jmp
daa
cmp
lret
sub
mov
xchg
out
push
jmp
jl
imul
xchg
xchg
jg
cwtl
icebp
movsl
das
jae,pn
jbe
stos
lock
dec
adc
movsl
icebp
movsl
cmc
mov
mov
mov
sub
or
push
insb
jmp
fsubr
in
dec
test
scas
sub
aas
cli
mov
das
inc
mov
jp
lock
inc
push
xor
jae
pop
aas
jmp
les
jo
aas
sahf
cmp
push
sub
mov
or
test
push
out
out
and
jp
cmp
xchg
test
test
inc
pop
rcrb
bound
scas
insb
test
mov
lods
icebp
sub
cmp
mov
aas
ds
and
daa
stos
stos
movsb
int3
ja
lret
insb
loop
jmp
lods
leave
push
jb
mov
aas
jecxz
xchg
fwait
jle
mov
mov
bound
lods
cwtl
and
mov
test
insl
bound
or
push
add
mov
cmpsl
xor
lods
int3
or
mov
arpl
sub
xchg
lea
adc
mov
push
push
cli
popa
xchg
add
mov
xchg
xchg
cmp
xor
movsb
cli
and
jge
dec
sub
pop
xchg
daa
jl
int3
sub
popf
lods
shl
xchg
fsubr
mov
call
lods
mov
xor
sub
jge
xchg
movsb
les
aaa
js
daa
jbe
xchg
mov
fisubrs
push
arpl
in
cmp
test
lods
loopne
mov
adc
loope
inc
xchg
mov
mov
std
pop
pop
mov
cld
add
add
jno
pop
test
mov
lods
bound
aam
addb
adc
push
pop
xor
inc
sbb
jg
jecxz
fdivrs
adc
sti
in
mov
mov
mov
adc
pop
bound
inc
mov
loope
out
inc
test
sub
xchg
cli
xor
pop
mov
pushf
xchg
arpl
repnz
jbe
mov
inc
bound
xor
test
push
aas
imul
adc
jo
aad
orb
mov
cmp
insl
xchg
scas
dec
sub
mov
repnz
fldcw
or
jae
inc
pushf
xchg
lcall
sbb
mov
pop
lods
mov
cmpsb
sub
arpl
rol
jb
movsb
and
dec
push
push
rclb
xchg
and
xchg
cmp
nop
pop
lahf
test
fs
xchg
mov
cwtl
xor
int3
sub
sbb
cmp
mov
outsb
mov
pop
cmp
inc
xor
xchg
and
xchg
arpl
adc
and
add
jb
mov
hlt
mov
daa
push
int3
xchg
sbb
and
jno
mov
lods
pop
or
ret
ds
daa
insb
mov
pop
xor
insl
and
pushf
push
pop
push
imul
outsl
jecxz
and
mov
xchg
sub
push
dec
inc
lods
push
sub
movb
mov
push
xor
addr16
mov
lock
mov
dec
pop
inc
xchg
pop
outsl
push
aas
mov
in
xor
iret
gs
jae
cmp
jb
lods
int3
mov
ljmp
dec
out
push
jno
pop
adc
lods
insl
test
stos
jmp
push
ret
push
cmp
dec
test
mov
pop
sahf
mov
bound
pop
pcmpeqb
popa
lcall
xor
mov
scas
fs
daa
push
cmp
movsb
nop
or
repnz
lea
clc
mov
mov
push
push
pop
int3
sbb
imul
jmp
repnz
std
leave
mov
js
std
mov
icebp
popa
imul
lods
dec
mov
xlat
xchg
fs
je
in
mov
adc
movsb
xchg
leave
dec
adcl
hlt
les
repnz
pop
out
stos
adc
ds
mov
dec
fisubrl
sbb
mov
cli
test
jae
cmpsl
jo
daa
or
jo
lret
xor
cmpb
push
fs
xchg
out
xchg
sahf
jecxz
xor
das
mull
mov
sbb
popa
stos
dec
or
sub
sbb
loop
lret
into
sbb
sbb
addr16
lret
and
arpl
mov
faddl
mov
icebp
jno
pop
test
cs
loop
aad
mov
adc
nop
fsts
aas
movsb
pop
fists
test
lret
xor
cmp
call
jo
mov
sub
out
or
xchg
ss
adc
mov
sub
lahf
push
adc
les
mov
xor
mov
nop
mov
sbb
lock
pop
jae
mulb
daa
addr16
lcall
das
sub
clc
in
fsts
mov
pushf
popa
xor
push
test
lcall
enter
rcrb
imul
xor
sbb
insb
into
sahf
stc
xchg
aam
outsl
jne
pop
test
popa
mov
cmp
aas
inc
mov
mov
lret
pop
and
je
aaa
stos
sti
leave
fmuls
cld
fildl
lods
and
sti
ficoms
mov
inc
jl
dec
inc
cli
pushf
or
jge
lods
jp
nop
int3
mov
pop
push
stos
mov
shlb
lcall
inc
and
jae
popf
jae
mov
out
sahf
pop
fcomps
lods
bound
lods
xor
mov
adc
fwait
lods
andb
mov
in
fwait
int3
inc
pop
cmpsl
popa
hlt
mov
daa
dec
in
lret
dec
mov
lock
fbld
mov
jmp
stos
xchg
imul
pop
mov
jnp
jecxz
std
or
enter
push
fs
data16
scas
lcall
jnp
std
out
xor
mov
lcall
repnz
adc
into
sbb
call
cltd
lahf
mov
mov
xchg
in
xor
push
add
pop
xchg
mov
movsl
das
and
mov
daa
imul
testb
leave
xor
mov
cmp
jmp
fwait
dec
bound
ret
and
lahf
cmp
sahf
jae
add
or
scas
mov
sahf
subl
add
mov
mov
leave
test
stos
stc
xor
insb
arpl
ljmp
mov
mov
cmpsb
push
sub
xor
mov
mov
mov
pop
inc
xor
pop
ret
int
daa
pop
daa
out
cmpsl
sti
dec
lea
lods
inc
addr16
jbe
pushf
xchg
test
jbe
and
lea
xchg
movsl
lret
stos
xchg
enter
mov
mov
mov
mov
lods
in
xchg
xor
pusha
xchg
data16
lret
and
mov
push
in
int3
lds
inc
cmp
iret
sahf
cmc
call
ds
xor
loope
or
pop
inc
mov
movsl
sbb
dec
outsb
pop
xor
adc
popa
dec
mov
inc
dec
movsb
int3
ds
mov
jae
mov
dec
mov
bound
popa
inc
cmpsb
and
sub
pop
movsb
mov
mov
enter
into
dec
rorb
push
popf
movsl
fsubl
dec
cmp
cmpsb
leave
inc
lret
xchg
dec
and
sub
divl
mov
xchg
outsl
cld
mov
xor
jno
mov
js
scas
test
xchg
inc
popf
lahf
mov
push
lods
and
xchg
cltd
mov
jg
xchg
add
aas
jecxz
mov
sub
dec
mov
mov
je
sahf
sub
out
xor
cmpsl
negb
nop
or
mov
out
jns
test
pop
lahf
insb
stos
sub
mov
repz
adc
lret
add
js
addr16
sbbl
add
lret
xchg
lods
mov
dec
sbb
je
into
insb
testb
push
insb
sub
xor
xchg
mov
lret
syscall
pop
insl
mov
xor
jl
pop
mov
test
sub
lret
inc
xchg
xchg
fnsave
push
lock
xchg
xor
pop
jns
xor
leave
fsubrs
subl
movsb
stos
movsb
sub
adc
cmp
sub
adc
jb
mov
notb
mov
shlb
std
mov
pop
push
sbbl
pop
xlat
lods
push
inc
jae
mov
add
inc
sbb
fmuls
sub
mov
bound
pop
xchg
outsl
pop
bound
push
xor
outsb
push
sbb
fcmove
sbb
fwait
mov
and
cmp
fs
adc
cli
jns
pushf
pop
push
arpl
pop
aam
das
pop
sarb
xchg
test
movsl
je
scas
xor
pop
dec
pop
popf
dec
cwtl
in
lods
nop
mov
insl
test
sbb
pop
in
pop
ficoms
icebp
dec
xchg
adc
mov
lahf
fwait
jecxz
mov
stos
sub
stos
jb
movsl
aam
daa
and
jl
pop
xor
dec
sbb
insl
lods
cmp
mov
lret
cmc
inc
jle
adc
je
sbb
xor
lods
icebp
sub
popa
fisubrs
cmpl
enter
inc
cmpb
xchg
iret
pop
loopne
in
mov
iret
xchg
rcrb
scas
movsb
les
lret
cmpsb
stos
movsb
dec
lods
push
push
andb
in
lds
sahf
js
aas
leave
xchg
shrb
lock
xchg
fisubrs
xchg
insb
dec
fsubl
enter
cmp
push
pop
bound
or
adc
adc
sbbb
rclb
insb
sti
test
inc
jle
jle
scas
insb
scas
subb
ds
mov
and
daa
push
leave
xchg
fwait
popf
sahf
in
and
push
pusha
or
cmpsb
sub
adc
loope
pop
push
lahf
mov
sbb
adc
call
or
sub
int
xor
xchg
test
pop
cmpsb
lock
outsl
mov
stos
bound
iret
xchg
cmpsb
jno
in
mov
mov
lock
nop
pop
insb
mov
mov
mov
cmp
add
clc
insb
cwtl
mov
loopne
cmc
pop
pushf
or
test
mov
or
sti
jne
sbb
push
lcall
push
jo
jle
pop
mov
loopne
je
data16
test
bound
test
int3
xor
pop
sbb
mov
ja
cmpsl
fwait
sub
shlb
mov
mov
ficompl
and
sub
sub
lcall
es
lods
insb
fcmovne
daa
test
icebp
ja
das
lods
loop
daa
mov
lcall
test
shlb
mov
xchg
cs
jne
ljmp
popa
loopne
xor
mov
mov
mov
mov
jge
mov
aam
mov
insb
insl
xchg
sub
push
xor
test
test
inc
cmp
bound
mov
repz
scas
mov
xor
loopne
out
repnz
mov
inc
pop
fsubr
dec
icebp
icebp
mov
and
ficoml
mov
aad
hlt
sub
cmpb
adc
sbb
mov
and
dec
stos
fs
das
mov
andb
jae
push
rorb
fadd
inc
mov
subl
xchg
stos
inc
or
pop
mov
mov
and
aas
mov
mov
lret
dec
inc
je
cmc
mov
cld
imul
fsubrs
bound
push
lods
out
or
fisubs
mov
xor
cmp
das
loop
adc
les
test
daa
andb
mov
mov
sub
fwait
das
test
sub
push
cmp
pushf
mov
mov
cmp
mov
int3
adc
scas
lret
push
imul
scas
int3
mov
lret
and
scas
test
mov
lret
cmp
inc
push
ds
dec
adc
xchg
pop
lods
xor
or
aas
movsl
inc
push
lods
mov
xchg
stos
cmpl
cmp
xchg
jne
imull
sub
mov
mov
inc
outsl
outsb
cmp
fsts
data16
mov
sub
push
mov
inc
jl
lahf
mov
jg
movsb
or
ljmp
mov
sti
je
mov
mov
mov
loope
mov
mov
nop
movsb
dec
lret
pop
adc
mov
mov
sub
push
adc
pop
and
push
insb
pop
sub
fwait
call
adc
xchg
fs
mov
cltd
insb
xchg
sub
sub
popf
pop
xor
inc
mov
mov
mov
xor
mov
ja
push
sub
fwait
push
add
loopne
repz
push
jp
adc
imul
lods
jp
or
je
pop
outsl
mov
adc
andl
ret
leave
cmp
xor
test
inc
sbb
jge
inc
xchg
adc
pop
cmpl
outsl
xchg
inc
aas
mov
jge
lcall
adc
add
cmp
mov
inc
push
sbb
xchg
mov
sbb
sub
ja
addb
cmpsb
add
mov
outsl
inc
jae
fstpt
pop
xchg
xchg
cs
push
divl
inc
dec
les
adc
sbb
les
and
pop
push
je,pn
inc
mov
mov
fs
cld
stc
test
push
mov
dec
mov
rcll
jo
xchg
sub
fdivp
jbe
sub
push
sbb
sbb
pushf
repz
inc
outsl
dec
xor
push
xchg
jae
leave
jnp
insb
xor
lcall
lock
lret
stc
aas
daa
push
and
adc
add
mov
xor
adc
or
pop
fwait
xor
bound
push
and
mov
inc
cmpsb
add
repnz
call
mov
cmpl
neg
mov
test
mov
inc
nop
hlt
cmp
les
inc
jne
push
pop
aad
and
imul
movsb
or
or
cs
lods
push
and
jae
std
mov
addb
test
and
shll
fwait
ja
and
sbb
mov
lods
sub
and
aas
movsb
sub
jae
ja
stos
xchg
shlb
xor
movsb
test
mov
ret
jae
ja
stos
xchg
les
inc
cwtl
and
xor
stos
inc
mov
mov
mov
hlt
mov
mov
loope
jb
mov
adc
shll
dec
and
lock
das
rcrl
fcoms
int3
ret
out
outsb
jb
push
loope
scas
call
stos
mov
and
loope
movsb
lahf
leave
mov
inc
xor
pusha
adcl
mov
lcall
popf
scas
shlb
ljmp
mov
test
in
mov
xchg
and
adc
movsb
bound
int3
mov
mov
sub
pusha
xor
hlt
shlb
and
mov
or
or
pusha
ljmp
shrb
mov
fwait
cmc
inc
test
mov
icebp
pop
inc
aam
ret
psllw
cli
xor
pop
xor
pop
lcall
testl
jl
scas
xor
xor
js
xchg
xor
loope
scas
mov
test
pop
out
aaa
lahf
adc
jb
int
mov
sbb
daa
jo
push
push
aas
dec
movsb
dec
adc
repz
sarb
test
mov
daa
adc
push
enter
call
add
scas
movsb
adc
pop
mov
mov
inc
mov
pop
int3
insb
test
jns
movl
mov
push
pop
push
imulb
pop
stos
sub
rsm
adc
movsl
arpl
jae
mov
dec
mov
inc
movsb
out
mov
out
pushf
xor
mov
inc
inc
and
cmp
incb
cwtl
sbbl
incb
pop
aas
add
daa
xchg
cli
arpl
cli
dec
pop
push
push
cltd
inc
lds
cmpsb
lret
aaa
mov
out
inc
lods
pop
jecxz
jmp
pushw
pusha
arpl
mov
push
jns
es
add
daa
fs
fwait
pop
dec
out
mov
rcrb
inc
test
xchg
mov
test
mov
mov
jno
andb
gs
inc
mov
outsb
mov
inc
mov
push
pushf
mov
dec
mov
sbb
int3
jae
mov
repz
das
pop
jae
push
mov
sbb
xchg
mov
pop
fs
mov
int
aad
inc
xor
arpl
mov
mov
sub
cmpsl
cli
cmpsb
and
pxor
adc
je
mov
jb
mov
leave
pop
jb
cmpb
mov
in
sahf
test
popa
sub
sub
cwtl
jns
bound
in
mov
shlb
dec
or
inc
mov
aas
pushf
call
sbb
scas
mov
popa
dec
add
mov
mov
jbe
mov
loopne
push
mov
mov
in
lods
shl
mov
dec
add
pop
nop
sub
daa
test
insl
mov
ss
movsb
lods
lret
sub
in
dec
mov
shl
jmp
add
outsb
data16
adc
jns
cmpsl
cmpsl
mov
outsb
pusha
ja
incb
insb
cmpl
sub
push
sarb
shlb
dec
bswap
jb
mov
jge
movsl
and
adc
fistpl
addr16
sub
mov
xchg
in
iret
lea
and
rorl
mov
popf
sarl
sbb
push
stos
jae
repnz
flds
les
push
cmp
fs
mov
pop
sub
fildll
insl
inc
fistpl
xchg
sar
pop
in
lock
mov
jl
sub
hlt
negl
jb
cld
jg
je
fdivs
icebp
arpl
fwait
jbe
mov
call
in
pop
cwtl
and
daa
and
push
bound
fs
test
rclb
pop
cltd
mov
fiadds
mov
loop
jae
les
push
mov
imul
fldt
xchg
cmc
cltd
jmp
push
add
push
xor
mov
mov
push
cmp
lcall
mov
mov
mov
mov
pop
pop
test
xchg
arpl
loop
stos
push
pop
enter
cld
push
test
int3
or
adc
mov
push
in
negb
mov
push
sub
jns
aas
mov
jg
inc
sub
mov
nop
out
mov
sub
scas
adc
pushf
aaa
xchg
movsb
mov
mov
test
mov
int3
repz
mov
push
pop
pushf
pop
subb
jl
push
mov
jge
je
imul
movsb
mov
ja
out
daa
mov
enter
and
fs
mov
out
jmp
inc
cld
mov
movsl
push
dec
jne
call
sbb
xchg
movsb
shlb
and
sub
cmp
sub
xlat
pop
cmc
jo
jns
fnstsw
daa
sub
xchg
adcb
popa
int3
dec
adc
pop
repnz
or
enter
ror
loope
icebp
repnz
pop
popa
rol
jnp
mov
lods
or
push
imul
sbb
xor
xchg
add
leave
jae
lods
nop
jle
and
enter
ret
dec
mov
insl
lods
push
or
adc
dec
sahf
popf
repz
lea
nop
push
mov
imul
sbb
and
scas
mov
ret
ljmp
adc
lret
mov
cmp
cmp
in
inc
mov
mov
mov
and
lods
xchg
int3
mov
sub
and
jge
pusha
sbb
ja
andl
es
in
imul
jno
and
or
fistpl
pop
push
xchg
mov
lock
or
movsb
decb
in
int3
stc
pop
subl
mov
pop
mov
dec
out
inc
jnp
xchg
inc
xchg
icebp
ljmp
push
sub
shlb
test
mov
mov
jae
aas
lods
push
inc
push
jecxz
pop
fs
xor
aaa
lods
mov
insb
jae
subl
xlat
test
push
popa
add
jb
ret
mov
sub
mov
adc
test
fnstenv
sahf
fs
std
and
push
pshufw
mov
xchg
subb
mov
clc
shrb
dec
pop
push
scas
js
ret
movsl
data16
mov
sub
stos
pop
fs
dec
ljmp
or
mov
mov
shrl
xor
jb
mov
jl
ja
dec
in
push
outsl
in
mov
aaa
sub
inc
sub
push
scas
jle
pop
inc
jl
fs
mov
adc
mov
mov
xor
jp
mov
fwait
and
into
xchg
pop
or
lock
or
loope
adc
add
cmc
or
xor
push
ljmp
add
jne
pop
pop
cltd
pushf
jmp
sub
pop
inc
imul
movsl
jo
dec
pop
pushw
inc
es
subb
lcall
mov
xor
imul
push
mov
cmp
push
push
fwait
idiv
test
push
dec
lods
movsl
int3
and
aad
je
test
pop
adc
add
aas
and
movsb
addr16
repnz
mov
ss
aas
push
orl
mov
icebp
int3
sbb
inc
push
cmpsb
popa
mov
pushf
xchg
test
xor
aam
aad
outsl
mov
lods
cmc
xchg
adc
pop
mov
mov
jne
leave
or
outsb
mov
mov
fs
inc
lods
add
push
push
sub
pushf
popa
mov
xor
cli
outsb
adc
mov
add
mov
popa
cmp
xchg
cwtl
sub
ds
dec
pop
pop
mov
aad
inc
sub
push
insb
imul
sub
call
xchg
mov
lods
lock
aas
aam
jle
xor
cbtw
sub
loopew
out
sti
test
hlt
mov
in
add
sub
sub
movsb
insl
ds
pop
mov
in
sub
mov
jge
pushf
test
test
scas
aas
cwtl
shll
sbb
or
push
adcb
cmp
jle
test
add
pusha
es
icebp
movsb
xchg
mov
push
add
pushf
and
sahf
data16
mov
xchg
cltd
fiadds
mov
cwtl
cltd
jbe
mov
sub
sbb
movsl
xchg
xchg
xor
push
repnz
push
dec
mov
pop
mull
cld
dec
xchg
cmp
arpl
cmp
int3
push
in
scas
adc
ja
mov
sub
shlb
insl
mov
xchg
insb
push
add
test
lahf
xor
mov
mov
popa
pop
fs
jmp
pop
stos
bound
imul
or
ss
cmpsl
xchg
sbb
gs
cwtl
dec
add
arpl
loope
pop
jp
stos
std
in
xchg
bound
int3
mov
mov
jae
dec
sub
push
pop
mov
push
xchg
add
push
add
cmpsl
mov
lds
pop
jne
arpl
cmp
pop
xor
pop
hlt
insb
or
mov
je
fsubrl
sbb
mov
lret
pop
push
loop
cmp
sub
cs
addl
and
imul
and
and
imul
mov
aam
shrb
arpl
test
in
pusha
sub
dec
lods
jl
outsb
rcr
sbb
and
outsb
jns
outsb
jb
push
lods
mov
lea
aas
movl
dec
push
aas
movsb
cmpsb
push
mov
rcr
pop
out
cltd
mov
mov
cmpsl
mov
mov
pop
mov
dec
dec
jo
aas
jns
aaa
cwtl
rcrb
pushf
lods
arpl
fs
cs
push
rcll
aaa
loop
sbb
jae
jo
push
loopne
ljmp
mov
cmpsb
loopne
shr
and
pop
dec
adcb
push
in
pop
mov
xchg
lcall
cwtl
cmp
mov
dec
mov
sbb
and
lods
sub
adc
mov
cmp
inc
sub
mov
push
fisttpl
xor
pop
xor
pop
mov
bound
mov
push
shl
arpl
dec
push
rcrb
cpuid
dec
mov
lods
out
insl
shll
je
jo
jmp
push
or
add
repnz
js
scas
jo
dec
jl
cltd
cmp
inc
pop
je
xchg
mov
int3
mov
cmp
ds
adc
or
cwtl
pusha
lods
jb
pop
scas
insb
sbb
test
mov
stos
loopne
scas
cmpsb
ljmp
insb
adc
or
andl
enter
rcrl
mov
and
mov
int3
add
stos
rcll
nop
outsl
pusha
pop
dec
sbb
add
xor
int3
loope
mov
addr16
jno
mov
adc
out
idivl
repnz
je
jecxz
ret
push
pmaxsw
repz
xchg
jb
data16
push
push
sbbl
jbe
hlt
das
xor
es
and
faddp
inc
je
and
test
in
xor
imul
fisttps
adc
rclb
push
cld
mov
push
push
dec
mov
mov
pop
sub
scas
sub
cmc
arpl
cli
jne
jo
int3
pop
ret
mov
gs
jo
dec
in
pop
popa
test
and
sbb
push
aaa
or
xchg
lods
inc
pop
push
nop
mov
or
fs
sbb
push
sti
mov
lods
stos
mov
or
ret
in
lods
xchg
mov
push
imul
xor
mov
or
xor
addr16
or
sbb
stos
xor
jmp
sbb
cmp
and
xor
mov
cmpb
xchg
add
lock
add
rcrl
bound
mov
adc
test
int3
push
icebp
jno
mov
cld
and
xor
mul
lock
xchg
sbb
nop
dec
mov
pop
push
jno
adc
andl
xor
adc
push
adc
jmp
lods
adc
xchg
or
adc
pop
sbb
mov
lcall
inc
out
push
jae
push
mov
mov
test
lods
mov
stos
cmp
mov
xor
jo
jnp
mov
stos
xchg
mov
int3
mov
add
jl
sti
mov
jo
lods
mov
imul
movsl
sub
mov
mov
or
ror
add
ja
outsl
or
jmp
pop
and
mov
sahf
bound
cld
xor
cwtl
mov
fsubl
xchg
or
mov
cld
jae
leave
nop
jb
cli
push
mov
lods
stos
leave
test
leave
retw
pop
fs
xchg
stos
lret
es
es
xchg
das
loop
cltd
cmpl
cmp
mov
arpl
and
inc
movsl
cld
adc
jle
data16
pushf
xor
lods
std
cmp
in
test
inc
clc
xor
les
loop
jge
push
imul
aam
sub
or
ss
mov
nop
addr16
data16
mov
push
adc
fcomps
imul
push
cltd
outsl
jno
xor
into
bound
fcoms
push
mov
std
sbb
outsb
push
add
test
in
cmp
mov
cwtl
inc
dec
jmp
into
pop
cmpsl
aas
mov
jno
push
andl
dec
pop
pushf
inc
popa
fwait
shrl
stos
sub
scas
out
or
mov
xor
or
jnp
or
lods
aaa
sub
or
push
push
and
cld
pop
and
pop
jl
lock
pop
inc
outsb
testl
das
in
rolb
push
aad
std
push
pop
pop
and
jb
popf
dec
add
push
jl
pop
enter
movsb
fs
xor
cmp
iret
inc
mov
incl
push
adc
dec
xchg
sub
es
mov
xchg
insb
int3
cmc
roll
mov
int3
mov
je
repz
adc
pop
sbb
sub
js
jo
sub
xor
icebp
insl
mul
sub
outsl
push
add
cltd
cld
lcall
insb
not
or
or
sub
mov
dec
xor
and
pop
scas
insl
xchg
lock
xorb
push
xor
sub
push
enter
inc
aaa
mov
inc
call
imul
sub
outsb
outsl
dec
jmp
es
mov
insb
xor
sbb
mov
es
mov
js
fistpl
call
push
fs
bound
lcall
gs
push
fisubl
mov
in
lods
sti
jo
pushf
fmulp
cmp
aad
mov
ret
js
mov
repz
popf
sub
inc
arpl
cmp
xchg
gs
xor
cmc
fs
xor
out
mov
cltd
inc
jb
cld
shrb
mov
sub
ljmp
test
push
sbbb
jns
sbb
int3
sbbl
test
imul
cmp
aam
pop
xor
cs
addr16
movsl
insb
or
inc
popf
xor
xchg
cmp
and
jb
int3
adc
mov
dec
mov
je
sub
cmpsl
aam
or
jo
mov
repnz
imul
dec
pop
or
adc
lods
roll
nop
xchg
fs
popa
clc
pop
pop
mov
and
push
pop
cmp
mov
out
popa
sbb
sbb
mov
icebp
jb
inc
shrl
sti
xor
pop
fistpll
test
test
lret
inc
push
and
jg
repnz
pop
mov
inc
sub
mov
lds
sahf
loope
btr
stos
cwtl
jo
jl
int3
pop
stc
push
cmp
test
imulb
loope
inc
add
mov
cmc
mov
push
std
out
test
mov
xchg
xor
cld
data16
loopne
pop
mov
andb
inc
fcmove
pop
lcall
ret
inc
mov
and
add
jo
divl
xor
pop
icebp
jp
add
pop
sub
xchg
mov
arpl
add
push
and
shll
and
fistl
inc
test
and
sahf
pop
lea
push
sub
jp
inc
scas
cmc
dec
pop
mov
mov
dec
popf
push
test
movb
mov
sub
mov
ret
pushf
jo
mov
xchg
jnp
cwtl
js
xchg
repz
bound
xor
jecxz
lds
stos
subps
pop
jl
push
movsb
movsb
xor
test
shlb
data16
stos
sub
aad
push
movsb
or
loopne
xlat
and
mov
xchg
jns
cltd
insb
inc
in
add
lds
nop
aaa
adc
andb
fildll
add
loop
inc
push
mov
sbb
cld
and
psubsw
rorb
nop
mov
aam
or
repnz
leave
lahf
jo
push
add
pop
jno
aas
sub
ret
lock
cwtl
ljmp
mov
sub
iret
repnz
rolb
push
xchg
es
and
fcomps
jns
push
jnp
in
mov
dec
bound
lahf
mov
and
in
push
sub
nop
je
or
jl
mov
push
jl
arpl
pop
dec
jb
jb
mov
sbb
int
sub
sub
scas
outsl
lret
push
enter
mov
sub
sub
sti
insb
inc
lods
dec
and
push
push
push
addr16
das
sbb
orl
ss
or
cmp
cmp
or
mov
jbe
sub
jecxz
jns
xor
in
movsl
push
test
sub
xor
cmp
dec
fnstcw
push
inc
stos
movsb
fadd
sub
out
inc
cwtl
leave
ss
fcom
xchg
sbb
lcall
xor
cli
in
dec
cltd
dec
pushf
sahf
sub
pop
pop
cltd
xlat
in
pushl
sbb
xor
sub
cltd
cmp
bnd
jae
pop
xchg
nop
es
push
sbb
xor
dec
into
movsb
aaa
cwtl
insb
pop
mov
cmp
xchg
or
sub
pop
cmpsb
int3
in
jmp
clc
xchg
xor
xchg
dec
dec
ds
add
mov
sbb
sub
test
movsb
lret
arpl
mov
movsl
and
mov
jns
xchg
sub
mov
mov
sub
or
rcll
mov
cld
xor
pop
pusha
test
xchg
adc
mov
movsl
test
xchg
mov
int3
outsb
adcb
mov
lahf
inc
and
outsl
subl
cmp
lret
inc
iret
mov
jecxz
mov
fnstsw
clc
xchg
and
lret
adc
sub
sbbb
faddl
pop
sub
add
xor
sbb
icebp
cmc
dec
rorl
jne
mov
lahf
xor
xchg
mov
int3
in
sbb
insb
mov
outsb
xor
sbb
pop
mov
lahf
lods
insb
pop
push
sbb
add
je
sbb
aas
push
sbb
popa
ja
cmp
push
sub
lcall
mov
hlt
ljmp
adc
adc
cmpb
push
xchg
insb
stc
aas
or
pop
jle
das
icebp
jnp
push
xchg
outsl
xorl
adc
mov
scas
scas
clc
cwtl
insl
xchg
outsb
pop
and
mov
xchg
daa
jae
add
int3
sti
cmp
mov
push
xchg
or
fs
dec
mov
outsl
cld
pop
bound
jbe
arpl
loopne
add
cmp
aad
int3
sahf
daa
orl
adc
std
mov
stos
mov
fs
jl
in
pop
xor
mov
push
pop
jb
sub
adc
repz
jge
out
xor
dec
jl
sub
mov
fs
sbb
push
push
imul
adc
test
dec
xchg
cmc
pushf
fldt
inc
mov
stc
jge
sub
xor
inc
push
jnp
push
loop
aas
das
imull
scas
mov
out
mov
arpl
mov
and
push
cmp
out
je
sub
clc
sbb
lcall
or
sahf
mov
fdivs
pushf
lret
rcll
out
and
sarb
cs
test
clc
cmp
jmp
sahf
push
pop
jno
lock
sub
sbb
nop
pop
mov
sub
inc
sub
inc
jae
int3
bound
pushf
stos
add
sub
js
or
stos
movsb
fmull
das
mov
stc
sub
std
mov
adc
test
je
xor
fistps
jmp
insb
jo
or
push
ret
mov
std
dec
sahf
push
push
stos
movsl
flds
xor
popf
aad
lods
add
jmp
arpl
mov
push
ret
scas
lock
xchg
inc
rcrl
scas
psrlw
leave
and
xchg
js
loopne
adc
jae
push
stos
mov
xorb
mov
aaa
sub
mov
aas
xchg
hlt
jge
fwait
outsb
push
mov
adc
in
daa
jle
lret
push
pop
dec
jge
mov
test
sub
test
adc
cmc
popf
mov
mov
lahf
leave
repz
mov
scas
rorl
sahf
notb
jno
cmp
in
leave
xchg
push
outsl
or
pusha
movsb
lahf
nop
leave
cmpsl
mov
mov
jmp
mov
outsb
jo
test
mov
shrl
xor
mov
arpl
cmp
loop
xor
xchg
lret
or
dec
imul
inc
dec
xchg
sbbb
jle
xor
dec
push
mov
add
imul
and
icebp
subl
push
push
outsl
jo
test
inc
sub
daa
mov
push
clc
and
pop
neg
xor
adc
pop
adc
and
aas
xor
stos
int3
adc
xchg
lahf
xor
jmp
and
mov
pop
in
push
ret
jo
int
mov
mov
push
jg
xchg
cmove
pop
stos
xor
enter
fistpl
mov
test
mov
cmp
add
sub
fstl
mov
test
jbe
in
shlb
in
scas
lods
mov
inc
stos
mov
pop
fld
xchg
and
movsb
out
inc
mov
or
movsb
sbb
cwtl
daa
sub
jo
movsl
cwtl
test
and
sub
lret
add
mov
fcomip
ret
insb
push
push
je
lods
in
out
add
mov
adc
xor
mov
add
mov
mov
insl
jne
icebp
test
call
mov
mov
mov
lcall
shll
xchg
pop
ret
test
inc
je
sub
cli
call
xchg
add
xchg
fisttpl
xchg
jmp
movsb
jnp
mov
cwtl
int3
jbe
mov
sarl
rorb
jge
dec
aas
fsubrl
std
and
jo
add
inc
push
mov
lods
mov
pop
inc
lea
pushf
fwait
xchg
out
lods
imul
inc
popa
ja
mov
repnz
out
fnstenv
lods
fs
or
pop
xchg
and
xchg
pusha
fdivrs
push
and
pop
das
jb
enter
roll
in
sbb
ret
sub
mov
addr16
jo
sbb
inc
mov
hlt
xchg
sbb
cmp
add
scas
dec
sub
fs
fdivp
int3
mov
push
lret
mov
faddp
inc
nop
jg
je
insb
and
push
mov
push
push
js
jno
push
scas
cmp
dec
out
scas
movsl
test
adc
popf
fwait
pop
adc
sub
or
xchg
mov
popf
dec
lea
repz
or
lods
push
push
insb
mov
mov
pop
cwtl
out
dec
jl
jae
mov
loop
jno
addb
cmpsb
pusha
push
mov
fs
xchg
testl
mov
jmp
jo
xor
and
cmpsb
cmp
or
leave
lcall
and
test
xor
loopne
mov
inc
movsl
aad
xchg
aas
loop
xor
stos
and
mov
je
int3
rcr
inc
div
test
jg
mov
stos
sti
lock
jne
int3
sahf
mov
gs
jge
int
mov
and
dec
xchg
aam
rorl
adc
jnp
inc
movsb
inc
push
decl
push
pop
mov
cmp
push
aas
cmpb
repnz
xor
rorb
xchg
mov
leave
ljmp
insb
lcall
xchg
imul
dec
jl
shl
adc
mov
sbb
test
pop
imul
inc
loop
push
sub
sbb
push
mov
cmp
ret
xor
aaa
stos
xchg
and
push
jl
xchg
push
and
xor
das
testb
mov
sub
outsl
mov
sub
insb
jo
out
mov
nopl
pop
and
clc
dec
sarb
lret
shll
lcall
je
test
cld
test
mov
jecxz
mov
xchg
mov
or
mov
cwtl
mov
or
pop
inc
xchg
aad
hlt
outsb
xor
leave
dec
adc
xor
mov
arpl
xor
inc
xchg
test
int3
ljmp
push
cmpl
push
outsl
xchg
and
push
and
jmp
jle
bound
nop
xchg
je
or
push
mov
and
mov
test
insb
sub
or
cmpsb
std
lea
xlat
in
imul
push
push
push
scas
int3
mov
loop
lods
int3
outsb
into
sub
inc
lods
int3
jecxz
pop
or
test
lods
mov
adc
xchg
mov
and
mov
int3
int
hlt
scas
rorb
popf
jb
adcl
lods
jmp
cmp
enter
push
enter
imul
nop
sub
xlat
clc
inc
push
or
and
outsl
xor
int3
xchg
push
pop
lret
fs
or
lret
mov
aam
fwait
clc
adc
push
pop
into
cmc
std
push
hlt
cbtw
xchg
adc
fsubrs
jne
sub
fsubp
outsb
inc
pop
dec
addr16
ds
cld
xor
cmp
sbbl
mov
and
movsl
sahf
dec
sub
ds
in
adc
pop
bound
hlt
pop
rcll
mov
pop
sbb
cmp
fcmove
mov
inc
xor
adc
dec
addl
lods
fildll
xlat
adc
inc
or
jo
subb
test
pop
sbb
jno
and
pop
movsb
mov
test
xor
jnp
fiadds
sti
jno
faddl
cmp
jo
add
xchg
jbe
pushf
adcl
inc
pop
pop
xchg
and
fsubrs
fidivrs
xchg
gs
test
shlb
inc
pusha
inc
push
sub
adc
cmp
pop
in
ret
ss
and
adcl
les
repz
jns
sub
loop
sub
xor
pop
adc
andb
pop
fimull
shll
stos
mov
jo
insb
int3
cmp
fildl
push
mov
and
stos
sub
out
movsb
pop
nop
pop
adc
stos
mov
jne
jae
insb
into
test
cmpsb
and
jmp
les
movsb
adc
lds
sbb
mov
inc
and
pop
pcmpgtb
aaa
fcompl
add
sub
xor
add
cwtl
pop
xorl
cmp
scas
pop
inc
sub
sub
pop
psubusw
mov
stos
xchg
sub
int3
push
scas
jmp
mov
fstl
add
aaa
push
jbe
xor
mov
mov
movsl
dec
mov
stos
add
lret
xchg
pop
in
test
xor
mov
pusha
push
sbb
jo
adc
sub
lock
jecxz
es
out
movsb
pop
and
ljmp
test
imul
or
loopne
jb
call
repz
aad
sbb
loop
je
in
test
and
lock
jmp
adc
sub
add
ror
adc
scas
or
jmp
popf
mov
xchg
adc
loopne
hlt
in
sahf
pop
test
pop
subl
and
movsb
int
jbe
cmp
jmp
dec
stc
push
xchg
ja
pop
inc
je
pop
int3
jnp
scas
lea
scas
mov
mov
mov
dec
call
in
aas
push
or
sbb
mov
mov
mov
and
stos
xor
mov
js
lock
adc
pop
ds
mov
dec
sbb
pop
fisubl
sub
add
jge
sub
pop
std
xor
aaa
imul
xchg
pop
aam
mov
push
add
xchg
cld
and
cld
and
mov
out
xchg
mov
test
xchg
mov
test
sub
stos
popf
je
mov
push
dec
aam
or
push
mov
xchg
or
imul
lods
fistpl
cmp
xchg
sbb
icebp
je
fstps
add
lea
xchg
aas
imul
sahf
insl
jecxz
mov
push
push
aas
scas
scas
sub
je
jae
cwtl
popa
fs
jmp
sub
je
inc
ret
ds
popa
arpl
pusha
gs
cwtl
movsl
pop
cmpsl
xchg
stos
mov
aam
int
mov
xchg
hlt
xchg
inc
addr16
or
mov
push
add
insb
mov
outsb
mov
repz
push
dec
pusha
cld
test
add
enter
push
sub
sti
adc
outsl
adc
imul
xor
mov
add
in
bound
data16
lcall
sub
cmpsl
rolb
pop
xor
mov
scas
fwait
mov
cld
jae
xor
inc
cmpsb
pop
xchg
test
int3
std
cli
nop
rclb
cmpsb
data16
jne
paddw
push
mov
xchg
or
test
imul
pop
jmp
nop
sbb
stc
xchg
arpl
movsb
inc
dec
adc
std
mov
mov
mov
pop
pop
sahf
test
mov
or
xchg
cmp
mov
insb
xor
inc
mov
xchg
leave
imul
cmp
cltd
lock
xchg
loope
push
and
cmp
sbb
int3
imul
cwtl
in
inc
dec
mov
insl
push
sbb
mov
cmp
loopne
or
subb
pusha
shrl
mov
sub
mov
sarb
sub
push
jae
jecxz
pop
aas
mov
bound
test
sbb
sub
mov
dec
stos
and
mov
and
add
push
sbb
dec
lods
lods
pop
mov
test
push
pusha
shr
or
mov
pusha
std
mov
les
int3
jmp
roll
popa
nop
pushf
adcb
cwtl
bound
mov
mov
sbb
fs
jecxz
cmpsb
pop
arpl
gs
stc
lea
loope
jne
jecxz
and
xchg
inc
int
jmp
cmc
pop
iret
mov
stos
sub
test
or
add
push
sbb
popf
dec
bound
inc
inc
dec
mov
or
adc
push
and
xchg
xchg
arpl
xchg
inc
cli
dec
xchg
mov
popa
je
mov
pop
xorb
pop
call
or
inc
dec
jle
mov
pop
jb
in
arpl
pop
xchg
ljmp
mov
sbbb
xchg
imul
push
dec
xor
stos
dec
loope
mov
shlb
or
inc
push
adc
push
outsl
mov
loope
jl
cld
inc
out
test
adc
fstps
lods
xor
and
pop
outsb
pop
cld
adc
lods
adc
pop
xor
add
fs
pushf
jp
fcoms
mov
mov
gs
adc
or
mov
pop
stos
dec
cmpsl
xlat
stos
aas
stos
push
nop
iret
mov
push
shl
xchg
mov
lcall
icebp
and
repnz
push
ret
lock
add
xchg
rclb
ficomps
aam
mov
lock
outsb
pop
add
insb
popf
and
insb
push
repz
scas
add
pop
addr16
sbb
mov
jb
stos
fistpll
loop
mov
mov
inc
pusha
push
pop
pop
lret
test
repnz
les
icebp
push
add
dec
or
pop
or
lret
add
mov
gs
in
fwait
add
mov
dec
push
int
lods
sub
mov
sub
test
mov
sub
push
jmp
mov
insb
xor
add
into
dec
outsb
jo
je
popf
movsb
sahf
lods
sbb
pop
jmp
jae
and
fmuls
pushf
stos
pop
pop
xor
push
pushf
lea
subb
xchg
pop
repnz
pop
in
jo
lock
cld
xchg
leave
mov
pcmpgtb
stos
sub
inc
repz
int3
outsb
mov
fsubrs
outsw
pop
aas
cmpsb
lret
fs
fdivrs
xchg
xchg
clc
mov
inc
jnp
and
aas
dec
testl
xchg
xor
mov
bound
call
and
stos
xchg
sub
xor
cmp
std
and
ret
ljmp
stc
push
xchg
jns
shl
cmp
mov
push
andl
outsl
jge
subb
mov
ret
mov
in
mov
test
lods
xchg
mov
enter
sbb
xor
in
sub
mov
fs
daa
dec
imul
insb
bound
push
popa
and
dec
movsl
add
jns
imul
mov
mov
mov
push
pushf
scas
lcall
and
dec
pop
xchg
mov
enter
adc
jnp
mov
daa
cmp
push
notl
cwtl
mov
add
push
xor
lret
imul
adc
loopne
lea
stos
pop
stos
sub
add
add
fcompl
mov
std
sbb
pop
movsb
int3
inc
jg
ss
mov
movsl
xchg
push
in
cltd
and
push
xchg
mov
rclb
sarl
cs
cmp
sub
ljmp
ds
test
push
loope
dec
inc
jecxz
test
xchg
dec
inc
loopne
jl
inc
hlt
pushf
adc
push
add
faddl
mov
pop
push
scas
pop
pxor
mov
or
mov
push
dec
movsb
fs
push
push
pop
mov
decl
lcall
stc
sub
push
popf
cli
sar
mov
sahf
cmp
adc
cmc
test
jge
inc
cli
das
rol
mov
and
sbb
inc
pop
stos
mov
arpl
jae
test
mov
sub
push
cmp
shll
pop
pop
pop
jns
dec
lret
inc
stos
pushf
mov
fwait
sti
dec
test
mov
lods
cmpsb
or
ret
ss
inc
imull
mov
test
pushf
rcl
clc
je
pop
cmp
lahf
arpl
sahf
pusha
clc
and
pop
out
xor
or
sub
shlb
loopne
inc
push
mov
push
push
or
test
jnp
mov
pop
leave
movsb
lcall
fs
adc
inc
movsl
sbb
jl
fs
fldt
adc
push
popf
jmp
mov
loopne
repnz
nop
daa
sbb
cmp
ret
dec
inc
faddl
xchg
insb
mov
movsb
sti
adc
hlt
cmp
lcall
push
push
add
xchg
mov
stos
icebp
xor
mov
je
adc
das
test
push
and
popf
inc
daa
lods
cmpsl
mov
scas
adc
scas
int3
rcrl
enter
fcmovnbe
movsb
and
push
push
push
push
hlt
xchg
insb
pop
push
insb
in
je
movsb
gs
adc
pop
test
push
mov
sarb
arpl
adc
or
es
int3
sbb
sub
pop
frstor
lods
cmpsl
bnd
lods
insb
ds
jmp
push
std
out
mov
repz
add
popf
push
outsl
in
cmc
xchg
dec
int3
mov
xor
mov
mov
xchg
cmp
nop
add
xorl
jmp
ss
mov
sahf
push
sbb
jns
repnz
aam
daa
xchg
sub
mov
jo
mov
les
cli
sbb
lret
sbb
xchg
or
mov
cmc
xchg
pop
sub
sub
movsb
in
es
mov
mov
lock
cmp
das
pop
pushf
sub
xchg
loopne
les
lret
adc
mov
in
mov
es
incb
add
and
imul
and
cmpsl
ret
jp
cmpsb
push
push
pop
mov
push
out
xchg
dec
push
pop
inc
ret
cmp
sbb
adc
and
in
adc
sub
cs
test
in
cs
or
xor
pop
push
mov
out
mov
xchg
dec
cs
and
pop
inc
iret
add
fs
pop
pop
cs
push
loope
testl
das
dec
fs
xchg
sar
push
and
inc
sub
xor
shrb
cwtl
outsb
hlt
movsb
int
or
cld
std
inc
rcrb
sub
out
inc
rclb
xchg
lods
js
pop
xchg
lcall
xchg
iret
in
stos
xor
add
lock
je
add
stos
data16
nop
pop
add
int3
dec
push
in
sbb
paddq
push
leave
mov
cli
sahf
pop
call
addr16
dec
xchg
adc
pop
outsb
lahf
subw
sub
pusha
xchg
adc
add
and
or
in
adc
cltd
and
or
and
xor
add
sub
mov
mov
mov
jmp
jne
adc
dec
pop
cmp
push
xchg
or
int3
pop
xchg
add
mov
int3
mov
inc
ret
adcb
xor
lock
xchg
xchg
add
add
insl
je
cmpl
sub
add
in
les
arpl
rcrb
xchg
ja
xchg
add
pushf
add
xchg
stos
jnp
outsl
mov
lock
daa
movsb
pop
mov
mov
lock
cmpsb
xchg
adc
repnz
les
iret
sti
cmp
sbb
enter
cs
ror
shlb
push
sbb
mov
jl
xor
in
sub
ret
pop
dec
movsb
in
ss
and
cmc
push
aam
push
ficoms
fs
mov
add
jno
pop
loope
bound
sbb
pop
pop
das
in
lods
sub
add
jle
loope
pop
pop
xchg
cwtl
js
cld
int3
bound
jo
mov
dec
lods
fs
and
mov
pop
and
xchg
add
repz
in
sub
imull
cmpb
cmpsl
cmp
inc
pop
xor
cmpl
jae
or
out
scas
outsb
jns
cmp
and
icebp
sub
pop
lock
cmp
xor
inc
in
jnp
testb
xor
ret
dec
ret
mov
sub
frndint
jo
ss
dec
loope
addr16
fdivl
je
leave
push
mov
test
daa
mov
daa
mov
mov
in
ljmp
in
cmc
pushf
stos
cmp
and
sbb
andl
and
sub
xchg
andl
jo
aas
ljmp
dec
notl
stos
mov
loope
xchg
fs
fbld
pop
mov
fidivrl
xor
sarb
adc
cmpsl
jns
cmp
dec
and
dec
xchg
test
xchg
adc
mov
sub
cbtw
push
jns
aas
inc
or
pusha
outsl
or
xchg
add
pushf
mov
xchg
push
mov
arpl
dec
stos
ret
mov
sub
aas
outsl
lcall
dec
adc
push
xor
dec
insb
stos
push
inc
push
in
hlt
lahf
leave
jge
xchg
xchg
mov
dec
pusha
pop
jo
pop
xor
scas
push
push
stos
outsl
cmp
outsb
push
int3
scas
cmp
movsb
aaa
dec
lods
pop
jnp
ficoml
imul
adc
loope
and
sbb
sbb
enter
xor
repnz
mov
out
ja
cmp
mov
lods
ds
mov
pop
jbe
push
fwait
mov
outsb
adc
fdivl
mov
lret
pushf
mov
cmpsb
outsb
push
mov
cli
pop
xchg
sub
in
lods
adc
fstps
popa
stc
mov
adc
movsb
xlat
pop
lods
lods
push
jne
test
mov
outsb
mov
push
lock
sub
testb
sbb
mov
cwtl
lods
xchg
sub
in
subl
or
test
mov
js
je
jo
fs
scas
pusha
xor
xchg
xor
mov
outsb
inc
xchg
inc
and
sub
jo
xorb
sub
mov
mov
jo
mov
outsb
mov
test
adc
or
bound
lea
pusha
add
sub
cld
adc
jb
sub
push
in
jo
icebp
stc
out
jne
outsb
xor
int3
and
mov
and
inc
or
gs
pop
cmp
mov
call
daa
push
insb
clc
mov
shlb
xor
sbb
pop
sbbl
sbb
jns
fmull
ljmp
ret
mov
mov
mov
arpl
xchg
add
outsb
mov
jnp
push
in
bound
xchg
lods
loop
sbb
scas
sbb
jg
mov
scas
and
stc
enter
push
mov
imul
sbb
cmp
bswap
cwtl
xchg
mov
js
movsb
sub
insb
out
mov
lods
xor
js
test
test
xchg
mov
push
jbe
leave
inc
popf
jg
lahf
add
push
sub
mov
add
add
xchg
imul
data16
sahf
out
cs
cmpsb
lods
mov
push
ret
mov
mov
jmp
mov
sarb
xchg
fistpl
mov
mov
inc
xor
lods
cmp
push
push
pop
pop
enter
lret
pop
shlb
mov
push
mov
int3
xchg
fnstenv
push
or
jl
jo
dec
mov
mov
addb
xor
cmp
push
jne
xchg
push
xchg
gs
call
ja
pushf
nop
fs
cwtl
stc
fisttpll
test
dec
and
jns
out
sub
cs
test
jge
mov
push
mov
outsl
scas
test
outsl
push
mov
sub
scas
xchg
ret
cmp
cmp
and
mov
xchg
in
test
adc
data16
pop
ret
scas
add
loope
cmovns
sub
jb
ret
shrb
into
jmp
fstpt
lret
sbb
fisubrl
push
outsb
shlb
push
xor
loopne
orb
das
cmp
mov
cmpsb
xchg
mov
imul
and
push
pop
xchg
call
pop
mov
xor
andl
nop
inc
sub
fimull
adc
stos
sub
jmp
int3
lcall
mov
dec
daa
out
ja
lds
push
adc
testb
sbb
punpckhdq
xchg
subb
push
mov
xor
inc
fisubs
mov
das
adc
imul
aas
xchg
movsb
sub
mov
loope
pusha
nop
pop
je
cli
insb
icebp
rcll
cwtl
popa
fidivs
pop
jbe
stos
inc
and
sub
push
repz
int3
or
add
pop
or
push
add
mov
les
int3
xchg
mov
idivb
pop
ror
xchg
add
call
cmp
mov
movsb
xor
cltd
movb
int3
xchg
mov
inc
test
test
or
call
mov
mov
mov
mov
popa
xchg
sub
mov
jle
xor
hlt
inc
pop
fwait
stc
loop
adc
jge
mov
dec
test
test
movsb
stos
inc
cmp
in
sbbb
and
inc
stos
dec
int3
mov
enter
in
insb
cmp
xchg
fwait
lods
aad
pop
sub
movsb
sbb
push
jg
dec
scas
bound
andb
and
aaa
jns
ret
aas
xchg
int3
dec
stos
lret
hlt
jmp
push
ret
and
dec
jp
push
dec
push
mov
shld
or
add
mov
xor
dec
inc
sti
test
mulb
mov
mov
push
gs
arpl
sti
xchg
cmpsl
mov
cwtl
add
xchg
mov
pop
push
stc
dec
jge
push
cmp
sub
insb
mov
lret
xor
lret
jp
in
pop
int3
dec
mov
sub
inc
dec
xchg
add
sbb
pop
pop
mov
es
in
jno
fs
sub
pop
mov
enter
xor
pop
int3
in
mov
and
mov
bound
push
call
loop
mov
mov
or
icebp
mov
add
aas
mov
fisttpll
mov
shlb
fidivs
push
loopne
sahf
call
out
lds
ficompl
bound
bnd
push
sarl
xor
movsb
fwait
mov
sub
movsb
mov
fists
mov
sub
divl
fs
cmpb
xor
out
movsb
je
cmpsl
int3
xchg
mov
imul
mov
imul
pushf
stos
dec
mov
add
push
arpl
mov
imull
lds
scas
call
int3
out
mov
mov
pop
push
cmp
pop
mov
int
mov
fcmovbe
lock
xor
pop
clc
mov
int3
push
cwtl
into
add
xchg
push
sub
jb
lcall
fisubrs
adc
lods
mov
jnp
push
cmpsl
cltd
mov
out
out
and
leave
and
mov
pop
imul
sub
dec
mov
pushf
xor
addr16
sub
add
mov
xor
push
outsb
and
lods
xchg
dec
cwtl
and
xorb
je
das
mov
pop
in
add
mov
sub
movsl
push
addr16
lahf
loope
dec
aad
rorl
sti
jbe
outsl
insb
push
inc
jl
cmp
sbb
jno
lret
push
xor
xor
sbb
mov
xor
mov
xlat
mov
sub
xchg
repz
xchg
inc
pop
add
fwait
xchg
stos
xor
lock
mulb
cmp
pusha
call
fadds
adc
ret
xlat
xchg
aam
jno
mov
popf
mov
rclb
lods
aad
ret
cltd
xchg
jecxz
mov
out
fwait
stc
mov
cmc
inc
aaa
push
jo
push
mov
xchg
or
jg
lods
sub
cli
adc
fs
fwait
hlt
sub
lock
xchg
out
in
loopne
outsl
fmul
fsubrs
sub
int3
das
scas
enter
popf
outsl
mov
adc
movsb
ds
xchg
stos
bound
das
scas
mov
cs
push
xchg
sahf
and
mov
jo
xchg
jno
xchg
andb
mov
lahf
outsb
and
sub
jo
xchg
pusha
mov
and
fcoms
cmovl
ja
xchg
xchg
inc
fwait
inc
lods
inc
xor
xchg
cmp
xor
xor
pushf
imulb
outsb
into
xchg
mov
xchg
pop
call
gs
or
das
scas
and
pop
and
aas
sbb
sbb
pusha
or
or
jb
xchg
add
hlt
xchg
lock
pusha
in
xchg
pusha
loop
loopne
jb
xchg
fsubs
and
sub
jo
xchg
rolb
aam
mov
scas
lods
sbb
jg
sub
fistps
xchg
test
xor
xchg
mov
movsl
jle
xchg
jl
js
je
outsb
jo
insb
movsb
push
push
mov
push
test
xor
xchg
dec
mov
inc
addb
lods
cmp
jno
mov
push
sub
mov
add
sub
push
fldl2e
cs
jae
sub
movsl
stc
mov
je
movsl
das
daa
or
addl
sub
sub
mov
in
ja
or
mov
repz
cs
cltd
aam
push
sub
push
rclb
dec
and
call
fcomps
push
ss
arpl
sbbb
push
fs
push
in
lcall
xor
jno
dec
xchg
pop
pop
repz
xor
aas
and
sbb
mov
sbb
pop
xor
push
jns
outsb
push
xlat
push
out
or
mov
repz
pop
jecxz
push
jbe
and
test
int3
int
xchg
sub
roll
jl
int3
dec
sub
nop
pop
lret
leave
pop
pushf
mov
xchg
jae
and
das
cmp
pop
jge
jecxz
out
jo
fcmovu
mov
pop
in
inc
test
scas
jae
cmpsb
movsb
xor
mov
inc
aam
xor
loopne
sbb
test
outsb
jl
icebp
mov
jae
xor
stc
aad
and
movsb
adc
pop
scas
push
int3
or
popf
notb
mov
mov
inc
xchg
sahf
sbb
mulb
adc
icebp
mov
js
push
iret
out
fmul
mov
mov
fs
sub
pushf
test
mov
sbb
dec
int3
arpl
push
pushf
sub
cmp
mov
mov
mov
movsb
cs
pop
ljmp
xor
enter
js
outsl
pop
fistps
fs
stc
aad
je
in
mov
jno
test
ss
sbb
inc
jb
lods
mov
je
cli
xchg
dec
cmpsl
sub
sti
sarb
imul
aaa
xchg
mov
pop
push
jns
inc
pop
jl
bound
pop
int3
push
pop
pop
outsl
inc
xor
lock
iret
mov
gs
lds
jae
mov
mov
loope
pop
sbb
test
repz
test
sbb
iret
sahf
xor
popa
and
mov
lods
push
push
pop
inc
mov
mov
sahf
lods
ss
into
std
faddp
and
lds
sub
xchg
inc
lea
imul
and
sahf
shll
bound
sbb
negl
hlt
mov
pop
inc
imul
mov
test
cmp
aas
mov
mov
mov
jmp
out
aaa
pop
cwtl
push
enter
sub
rorl
lea
push
stc
test
mov
sub
scas
xor
std
out
xchg
xchg
xchg
adc
test
add
jl
aad
aas
mulb
ret
cmc
stos
xchg
xchg
sti
xor
and
jp
sbb
mov
cmp
leave
sbb
pop
popf
mov
dec
in
decb
gs
mov
xchg
cmp
mov
scas
xchg
lods
insb
popf
sub
or
aas
outsl
dec
gs
movsl
and
fldl
dec
in
or
leave
std
sbb
mov
lods
push
mov
icebp
inc
adc
add
pop
cmp
dec
cli
push
loope
sahf
lgs
sub
cmp
test
sub
cs
sub
int3
clc
add
mov
cmpl
dec
testl
out
test
jns
mov
mov
push
push
scas
outsb
jns
mov
iret
push
mov
cmc
ret
cmp
ljmp
mov
hlt
je
dec
and
lods
or
mov
add
jo
and
lock
cmp
jg
mov
push
xchg
pop
fs
cmpsb
push
movsl
das
adc
pusha
jmp
mov
stos
subl
push
sub
std
lods
sbb
xor
cmpsl
inc
dec
std
cli
lock
out
lods
imul
and
jl
movsb
sbb
fidivs
mov
lods
and
sbb
cwtl
jbe
fisubs
adc
inc
push
popa
dec
inc
xor
shrb
lods
aad
adc
int3
cmc
mov
jg
clc
inc
adc
pop
xchg
and
test
lcall
int3
iret
sub
xchg
or
popf
jl
mov
mov
mov
xchg
pop
out
test
ja
scas
adc
cmp
cmp
faddl
xchg
mov
jae
int3
push
push
mov
nop
rolb
cld
test
push
xchg
push
cmp
inc
jno
cmp
rcrl
inc
mov
and
push
xor
pop
xchg
rcrb
pop
xchg
mov
mov
and
pop
das
mov
lcall
imul
inc
lret
imul
sbb
leave
cld
ljmp
cmp
pusha
mov
cmp
lods
cmp
dec
mov
sbb
xor
lods
push
loope
out
divb
xor
out
int3
adc
pop
lsl
push
sub
push
mov
cmp
mov
pop
je
xchg
scas
push
mov
adc
out
push
scas
int3
xlat
nop
mov
scas
dec
add
cmpb
push
bound
mov
shl
jle
stos
mov
pop
mov
mov
xorl
addr16
xor
scas
jp
loope
mov
pop
arpl
shll
pop
mov
lods
cmpb
inc
jl
xor
pushf
es
cs
and
in
je
pushf
add
mov
sub
in
int3
jo
jo,pt
and
ja
and
mov
push
cmp
mov
xor
push
mov
sub
sub
sub
cwtl
movsl
xor
inc
mov
aas
pop
sbb
movsb
in
ja
xchg
aam
pop
add
jp
insb
fcomi
pop
movsb
bound
stos
jno
inc
mov
pop
lods
lret
test
sbb
push
out
pop
bound
inc
stos
sbb
push
lcall
push
xchg
aad
es
movsb
insb
movsb
add
mov
inc
inc
push
xchg
jb
movsb
cmp
test
add
fnstenv
popf
jp
movsl
out
mov
adc
outsb
pusha
jns
dec
insl
mov
and
push
sub
mov
push
push
mov
das
sub
pop
cmp
jbe
jecxz
js
insb
push
shlb
ljmp
insb
imul
js
pop
rorb
ret
mov
test
popa
shrb
cmp
scas
repz
mov
xchg
mov
ret
xor
mov
pop
insb
push
inc
int3
xchg
loopne
cmp
and
test
mov
dec
sub
or
popa
mov
xchg
iret
inc
imulb
psrlq
fadd
cmc
in
fisubrl
add
xor
lret
dec
out
bound
dec
jg
mov
stc
ss
jo
push
xchg
sbb
gs
push
outsb
shrl
roll
push
les
icebp
movsb
jecxz
lcall
hlt
adc
xchg
mov
lods
mov
or
adc
pop
out
leave
ljmp
sub
xchg
and
hlt
dec
lods
imul
and
inc
mov
arpl
fs
mov
test
pop
addr16
xor
inc
jecxz
je
and
mov
repz
out
hlt
icebp
sub
jns
mov
movsl
sbb
xor
pop
icebp
push
jns
aaa
cmpb
shlb
test
pop
inc
fsubs
add
repnz
mulb
mov
test
aaa
pushf
jb
push
test
sub
mov
stos
jle
stos
and
dec
lods
cwtl
jae
add
xchg
sub
and
into
cmp
push
cmc
dec
daa
jns
adc
movsb
jns
ret
lods
aas
stos
sahf
adc
test
out
xchg
imul
and
int3
test
xchg
aas
mov
lods
dec
mov
mov
or
add
mov
jae
pop
div
data16
or
movsl
inc
imul
popa
daa
pop
lods
pop
mov
and
mov
jge
or
pop
movsl
mov
dec
mov
in
stos
mov
cwtl
out
jge
lret
pop
outsb
mov
jno
sub
mov
pop
dec
add
mov
dec
fst
in
das
mov
fs
dec
push
jle
push
mov
mov
lcall
or
aaa
xchg
lds
movsb
xlat
adc
pop
mov
mov
xor
dec
cmp
ss
int3
xor
insb
sub
lock
outsl
inc
lods
mov
mov
jl
xchg
and
pop
test
es
mov
cmp
cmp
or
pop
xor
mov
push
cwtl
popl
mov
jecxz
lret
fs
jno
ja
sbb
loope
nop
add
mov
movsl
icebp
js
insb
mov
arpl
cli
lds
sbb
mov
push
mov
jo
mov
sahf
mov
les
popf
push
mov
stos
stos
outsl
xchg
popa
fisubrl
push
imul
pop
punpckhdq
movsb
gs
pop
sbb
jbe
pop
test
pushf
movsl
mov
shlb
fmul
cwtl
out
xor
mov
push
xchg
daa
filds
jbe
icebp
call
cwtl
std
sub
sahf
mov
pushf
les
cmpsl
pop
ss
bound
mov
push
int3
test
jecxz
lods
inc
icebp
push
test
arpl
es
sub
cmp
and
rcll
cmpsb
mov
xchg
ljmp
dec
fldt
inc
add
mov
int3
cmp
or
hlt
dec
jmp
jle
xor
je
sub
or
xchg
test
stos
mov
mov
mov
mov
repz
cmpl
stc
addb
pusha
insb
test
xchg
sbb
sbb
sub
aaa
jge
cwtl
jg
scas
arpl
out
mov
lods
lahf
stc
jo
sbb
mov
js
cmp
out
cmp
pop
lods
jmp
and
in
in
pop
push
push
cmp
mov
mov
rep
jecxz
scas
mov
arpl
mov
out
inc
inc
cmp
inc
sbb
outsb
mov
push
enter
mov
bound
shrb
xor
push
daa
ds
mov
fbld
outsb
mov
mov
jns
inc
adc
je
pushf
call
adc
stos
imul
movsb
xchg
js
int3
mov
scas
adc
imul
arpl
outsl
mov
cs
sub
and
pusha
lods
mov
sub
mov
inc
mov
dec
mov
dec
xor
sub
in
sarl
mov
sti
adc
mov
xchg
scas
jne
std
sub
aaa
sbb
loop
push
popf
rcrl
fidivl
cmp
movsl
mov
xchg
sub
bound
pop
popa
xchg
pop
and
movsl
xor
and
xorb
dec
mov
mov
aaa
xor
or
stos
scas
popf
in
mov
xacquire
cwtl
ss
mov
inc
jp
repz
data16
into
sti
push
cmp
insb
outsl
pop
clc
push
insb
add
mov
mov
out
loopne
push
testb
add
loop
loope
inc
sub
fs
lret
dec
or
vcvtps2pd
xlat
movsb
fldt
adc
push
pop
mov
int3
inc
cmp
hlt
xchg
lahf
mov
scas
aas
popf
xchg
mov
aas
int
add
push
fldcw
adc
push
arpl
xchg
movsb
lock
sub
sbb
xor
push
xchg
loop
js
push
imul
shr
sbb
nop
push
insb
and
test
pop
pusha
cltd
sub
pushf
ret
add
enter
mov
ficoms
sahf
pop
incb
mov
sarb
fsubl
and
xlat
addl
out
mov
lret
inc
je
mov
sub
lods
je
bound
pop
or
leave
test
push
xor
jmp
in
or
or
mov
mov
rorl
sub
and
movsb
mov
mov
and
add
mulb
in
sub
inc
call
pop
xor
xor
xchg
mov
test
push
pop
jp
xchg
sub
repnz
mov
cltd
pop
shlb
push
ja
adc
sti
push
inc
sbb
and
sub
sbb
add
mov
leave
daa
xlat
ja
jmp
sub
jmpw
mov
jb
stos
sti
out
mov
lock
xchg
add
in
dec
imul
sahf
out
js
mov
xor
push
adc
mov
ds
in
movsb
cld
add
mov
adc
xchg
adcb
sub
inc
movsl
adc
inc
and
or
xchg
js
pusha
mov
pop
jecxz
insb
mov
ljmp
mov
outsl
lods
loop
jae
and
jns
and
dec
cmc
out
repz
fldt
push
xchg
inc
test
jbe
insb
enter
jae
xlat
mov
lret
and
sub
jl
mov
ror
shl
pushf
fadd
lcall
imul
xlat
lahf
cmp
enter
sub
inc
pop
or
pop
fisubl
popa
lcall
cmpsl
int3
cli
jb
pushl
nop
push
and
dec
mov
mov
lds
mov
call
xchg
test
les
out
mov
scas
sub
stos
mov
loope
mov
lahf
inc
mov
mov
addr16
sub
test
mov
in
lods
jo
pop
add
nop
pop
dec
xor
sub
lods
and
jns
pop
fnsave
sahf
inc
clc
in
mov
xor
jno
push
sbb
je
outsb
repz
jo
cmp
mov
pop
sub
xchg
mov
jmp
aam
fsts
mov
outsl
jnp
and
pop
stos
insb
inc
sbb
sub
les
stos
insb
lods
xor
adc
outsl
out
je
mov
fmul
arpl
xchg
pop
lods
mov
jecxz
cmp
sti
adc
push
inc
cs
ret
jo
mov
fbld
cwtl
filds
je
dec
stos
out
arpl
mov
dec
cmp
inc
movsl
adc
jmp
inc
addr16
xchg
xchg
fldl
lods
or
cld
in
jecxz
mov
add
and
push
rcl
fidivrs
add
ret
cmp
movsb
mov
ljmp
mov
je
test
sub
outsl
iret
xor
hlt
pushf
in
xor
cld
mov
xchg
dec
jmp
xchg
or
int3
pop
call
shrb
inc
push
js
dec
lea
lahf
mov
push
push
adc
push
rclb
cmc
in
insl
sub
leave
jae
cwtl
orl
popf
mov
lods
mov
int3
lea
outsb
lock
jb
movsb
mov
mov
mov
sub
shrl
and
xlat
and
cmp
dec
mov
mov
lret
jp
sub
repnz
sub
push
aas
insl
les
and
pop
add
add
frstor
jg
adc
mov
mov
leave
pop
imul
pop
fs
adc
lods
mov
scas
xor
pop
inc
sahf
pop
test
inc
jge
lcall
lret
sub
icebp
gs
mov
xor
aam
jnp
mov
aad
xchg
and
leave
sbb
mov
xchg
pextrw
mov
scas
jmp
cmp
mov
jb
push
push
bswap
xchg
lds
jno
gs
mov
inc
cmc
or
loope
test
movsb
ret
fwait
ret
mov
cmp
adc
xchg
and
arpl
jmp
fildl
in
hlt
aas
jmp
shlb
lret
mov
int3
adc
fsts
sub
lods
lret
inc
dec
xchg
fldt
mov
adc
jg
stos
data16
mov
int3
loope
pushf
add
push
cmpsl
push
addb
test
fs
mov
out
and
xor
and
in
ljmp
jns
fwait
cmpsb
movsb
daa
xorb
addr16
shll
pusha
and
andb
push
test
push
jmp
sub
rol
das
mov
enter
nop
cwtl
lret
stos
xor
add
test
mov
push
int3
out
dec
fiadds
sbb
mov
pushf
lods
mov
repz
mov
xchg
movsb
sub
sub
push
mov
cs
call
jae
jmp
jae
mov
mov
gs
ret
cmp
pusha
xor
xorb
mov
mov
add
rcll
test
xchg
mov
pop
ret
adc
ja
scas
pop
sbb
push
imul
movsl
jo
popa
xor
push
arpl
imul
aaa
xchg
int3
lods
xchg
xor
xchg
add
pushf
stos
push
pop
mov
xchg
fbld
adc
jae
or
call
in
outsb
rclb
insl
ds
xchg
pushl
popa
cwtl
jne
xor
xchg
test
daa
cmp
pop
fldt
imul
inc
inc
shrb
sub
movsb
mov
jb
push
arpl
dec
daa
cs
repz
mov
sahf
es
sub
stos
shrl
cs
push
sbb
outsl
mov
test
movsb
xchg
push
popa
push
sarl
jmp
and
loope
xchg
add
mov
mov
sub
jge
lods
mov
scas
sub
push
mov
mov
mov
in
pusha
dec
daa
testb
outsb
cs
lea
cmp
lahf
test
or
mov
sub
in
insb
lock
sub
in
inc
lock
js
sub
in
sbb
jl
or
jno
xor
hlt
fs
xor
ljmp
repz
inc
mov
stos
push
test
mov
sub
xchg
jl
add
es
xchg
sahf
push
mov
jno
xchg
sbb
mov
int3
push
jbe
stc
cmp
int3
test
pop
cs
xor
enter
scas
ret
xor
test
cs
sbb
sbb
xchg
sub
xchg
aam
jb
add
xchg
int3
fwait
sbb
scas
inc
lock
jno,pn
xchg
in
push
loopne
xchg
outsb
jecxz
inc
pusha
xor
mov
pop
cmpsl
nop
sub
ret
xchg
ret
mov
xchg
fwait
aam
mov
or
shrb
dec
mov
push
ror
and
scas
sbb
and
popa
sub
mov
scas
pusha
movsb
pop
mov
cwtl
cs
lock
xchg
call
mov
imul
loope
sbb
cmp
loop
test
test
fs
test
lea
out
lods
sub
in
dec
jmp
jns
sar
test
xor
pop
daa
inc
jge
lock
jp
pop
ret
insb
cmp
jecxz
lock
cmp
hlt
mov
pop
shl
adc
popa
icebp
push
stos
lret
imul
icebp
pop
jmp
or
rcrb
arpl
mov
pop
fisubl
push
stos
lret
outsl
push
out
pop
add
xchg
std
pop
fs
push
insl
insb
fidivs
out
pop
enter
or
xchg
jge
mov
cwtl
cmc
in
nop
sahf
dec
mov
cmp
xchg
ljmp
cmc
push
fildll
and
aas
test
and
rorl
pop
scas
dec
add
scas
pop
popa
and
xorb
ljmp
cmp
imul
or
xchg
loope
jns
sbb
out
aaa
ret
fildll
js
and
sahf
popf
cwtl
mov
insl
push
xchg
sahf
and
in
push
push
lods
jl
insl
mov
in
mov
jnp
cwtl
cld
cs
mov
adc
fsubr
movsb
mov
pop
xchg
fcompl
movsl
int3
jno
pop
pop
add
outsb
jb
or
push
sbb
test
and
in
xor
test
inc
stos
jnp
test
es
stos
xchg
mov
insb
in
lods
rol
push
mov
jno
xchg
xchg
and
mov
push
pop
scas
sbb
in
xchg
mov
in
push
jp
lods
mov
and
xchg
dec
scas
jl
sub
push
prefetcht1
outsl
xor
xor
bound
jae
mov
sbbl
pop
fldl
mov
adc
cmpsl
cmp
imul
or
lea
fldenv
lea
dec
leave
adc
xor
jl
mov
fsts
fldenv
mov
sub
mov
jno
loopne
add
pop
addl
je
push
insl
int3
or
mov
sub
lret
inc
xor
lret
aas
loopne
leave
jb
add
ret
rcr
dec
aam
jnp
cwtl
mov
dec
jmp
add
cmp
rclb
movsb
test
mov
push
mov
movsb
push
jmp
lods
jecxz
jecxz
test
mov
push
test
push
jae
jne
mov
mov
mov
test
push
xchg
cmc
pop
adcl
or
xchg
jae
inc
out
iret
ja
fisttpll
jl
pop
subb
lret
mov
mov
test
xor
ljmp
mov
jl
pop
mov
fstl
or
ret
jl
int3
lahf
int
pop
pop
adc
jo
cmp
adc
or
add
jl
lods
test
leave
pusha
stos
lret
dec
outsl
fcmovu
lock
ds
fs
outsl
xchg
sub
fs
lahf
hlt
xchg
dec
js
out
idivl
jns
mov
mov
stos
cli
test
sbb
imull
rcrl
push
test
pop
stos
sub
sbbb
dec
fs
mov
dec
pop
xor
jo
int3
xorl
push
push
mov
cwtl
lret
adc
je
and
jae
xor
xor
mov
popf
dec
and
pop
out
lret
push
mov
xor
xor
or
sbb
push
xchg
insl
jnp
arpl
sub
jb
nop
dec
lcall
pop
popa
jo
iret
pusha
push
push
mov
adc
inc
arpl
aam
mov
mov
add
movsb
mov
in
dec
daa
cmp
xchg
sbb
pushf
in
jbe
dec
addb
orb
cmpsl
xchg
mov
xchg
push
in
in
ljmp
fsub
fs
ret
cmp
divl
out
or
insl
in
cs
jno
xor
sub
push
cld
js
push
bound
stos
insl
je
pop
enter
push
mov
imul
dec
aas
xchg
cmp
pop
xchg
dec
xor
jo
mov
fmul
jo
js
sub
enter
es
les
fadd
in
xorl
or
push
std
or
lahf
and
fcom
lods
aam
lret
aaa
lods
xchg
mov
lret
rcrl
dec
mov
pop
adc
lret
lods
lahf
ret
pusha
popa
test
pop
loopne
add
test
fsubs
fdivl
push
jp
xchg
jno
mov
mov
cs
sub
loope
clc
cmpsl
fiadds
dec
imul
and
xchg
out
sub
or
ret
mov
mov
inc
sub
push
sbb
lods
imul
pushf
xchg
mov
int3
cs
adc
lret
sub
jo
push
rorl
jmp
inc
sub
dec
popl
pop
adc
sub
cs
or
je
adc
jae
mov
bound
iret
inc
push
pop
and
push
mov
cmpl
inc
movsl
jmp
cld
testl
ret
call
push
push
xchg
dec
xchg
mov
sub
popa
and
scas
sti
ljmp
pop
add
ficoml
out
jp
stos
lret
sbb
daa
push
and
dec
scas
mov
cmp
std
push
and
std
add
xor
daa
mov
add
loop
jg
push
xchg
das
pop
pusha
fucomp
cmp
fildll
mov
pusha
mov
inc
rcrb
xor
cmp
lret
mov
scas
std
sbb
movsl
fs
xchg
or
arpl
je
les
xchg
mov
arpl
aas
mov
test
aaa
mov
sub
dec
sub
xorl
loope
pop
adc
push
pop
inc
sub
and
cltd
nop
push
xchg
cs
mov
call
xchg
sub
arpl
xor
mov
mov
cmp
xchg
jns
pop
movsb
addr16
pushf
jns
mov
push
jmp
in
addb
test
dec
das
xorb
xor
insl
test
xchg
inc
xor
mov
scas
lods
test
repz
out
mov
jb
pushf
test
movsb
add
sub
repnz
movsb
repz
insb
test
xor
ret
cmpsb
movsb
decl
movsb
inc
and
push
das
sub
or
addr16
in
dec
stos
movsb
out
xchg
in
lea
repz
jns
xor
dec
notl
jmp
inc
cmc
mov
stos
movsl
add
imul
mov
cmpsb
mov
lret
wrmsr
xchg
gs
xlat
test
lret
aas
mov
adc
lcall
push
push
mov
andb
test
sbb
or
mov
in
movsb
lods
lret
add
sbb
inc
mov
cs
insl
xchg
sbb
je
or
mov
mov
xchg
mov
or
cs
test
jne
xchg
adc
sbb
jle
cmp
add
shlb
xor
xchg
sub
mov
in
and
jp
fwait
jl
fbld
mov
les
and
add
lret
pop
test
js
aad
leave
movsb
dec
jo
dec
ss
mov
rcrb
xor
je
cs
test
rcll
test
in
jns
movsl
mov
pusha
pushf
xchg
mov
sbb
cmp
pop
jb
or
dec
lods
mov
fs
mov
sbb
call
pop
mov
and
mov
setge
mov
and
cltd
iret
adcl
or
fcmovne
xchg
xchg
cltd
lret
or
loop
adc
push
fsubs
cmp
mov
add
push
jbe
popf
mov
imul
jne
lds
lods
ret
push
adc
cmpsl
jl
sbb
or
pop
movsl
js
cmp
cmpb
test
nop
fnsave
in
inc
mov
sub
movsb
and
enter
and
enter
iret
sahf
rcrb
aaa
sbb
jl
xchg
jp
stos
outsl
jle
mov
arpl
dec
loopne
mov
es
pop
push
lods
xchg
movsl
mov
cmpsl
int3
lcall
sub
pop
add
imul
inc
xchg
cwtl
js
adc
fcoms
adc
mov
add
sub
ja
push
fs
nop
psrlw
leave
lea
mov
push
test
ret
shlb
js
xor
mov
add
and
cltd
xorl
and
enter
mov
subb
pop
mov
lods
jg
mov
jae
jle
push
jne
mov
stos
xchg
jo
jle
mov
fwait
ljmp
cmp
test
js
dec
jo
mov
outsb
mov
xchg
mov
sub
fwait
xchg
aam
ret
js
call
in
stos
cmp
sub
mov
jne
cmp
push
mov
push
add
out
mov
cwtl
int3
xlat
fiaddl
sub
out
test
cs
loopne
das
mov
movsb
adc
pop
subl
xchg
imul
inc
pop
test
add
cmp
sahf
inc
sub
mov
pop
jl
jg
push
push
mov
or
jmp
scas
sbb
sbb
dec
add
sahf
and
pop
nop
inc
psadbw
call
bound
jbe
jno
sub
push
cld
fistpl
dec
mov
loope
pop
mov
sbb
xchg
push
aam
or
ret
jo
sbb
mov
call
repnz
sub
adc
shll
cwtl
and
inc
fstl
shrb
clc
push
sub
aas
add
lret
push
jl
and
stos
int3
xor
lahf
imul
add
daa
std
popf
cmp
jns
sub
lea
xor
pop
pop
icebp
and
stc
insb
xor
dec
repz
in
or
icebp
aaa
sarb
pop
and
cmp
daa
addr16
aas
pop
aam
xchg
push
add
out
nop
mov
leave
lahf
cmc
mov
dec
loopne
cld
push
inc
sub
loope,pt
neg
and
dec
xor
xchg
dec
imul
cmp
xchg
sbb
mov
aaa
cs
leave
mov
cld
popf
jno
dec
je
inc
sub
je
pop
mov
cmp
add
gs
dec
and
leave
mov
pop
rcll
shlb
pop
jae
cwtl
sub
test
xchg
mov
xchg
push
push
cmp
and
dec
insl
jo
test
jl
push
jecxz
sbb
mov
fwait
pop
pusha
mov
test
sub
mov
jne
fs
stos
ret
mov
test
popa
fcoml
jns
ds
lods
add
sbb
sub
dec
int
dec
pop
sub
adc
sub
repnz
insb
xchg
jne
add
dec
push
xchg
cmp
adc
inc
pop
cmp
movsb
and
mov
mov
aaa
xchg
fs
dec
and
scas
push
insl
sbbl
faddl
inc
mov
cwtl
adc
fwait
lcall
mov
cmp
add
loop
sbb
daa
pusha
push
adc
cwtl
cli
in
mov
add
int3
lods
push
mov
push
dec
pop
cld
xor
hlt
fs
imul
jp
aas
std
rolb
jl
cli
jge
and
clc
dec
out
xchg
xor
sbb
enter
aam
pop
mov
cmp
popf
in
insl
sti
int3
add
out
xchg
movsb
arpl
mov
xor
lcall
in
cs
test
push
dec
xorl
clc
mov
subb
mov
push
das
mov
sub
push
cltd
dec
stos
sub
sub
stos
xor
out
jno
mov
lock
and
adcb
pop
xor
std
inc
movsl
dec
stc
shll
fldt
jge
lea
cmp
mov
popa
nop
and
loopne
pusha
push
push
daa
add
and
push
xor
neg
or
lea
and
pop
enter
dec
cmpb
mov
into
fdecstp
mov
adc
int3
outsb
push
mov
ret
dec
sbbl
cmp
or
sub
xchg
insb
test
jb
movsl
es
outsl
gs
stos
imul
cs
movsl
fstps
push
adc
andl
out
imul
or
aam
call
xchg
adc
jo
decb
into
in
imul
inc
xchg
daa
aas
and
xchg
xchg
sbb
imul
arpl
mov
out
ja
jg
pop
sahf
or
gs
pop
sbb
popa
mov
lods
xor
push
mov
add
cli
fwait
out
jg
jp
sbbl
mov
pop
ret
and
mov
jb
sub
xor
outsb
push
stos
inc
movsb
out
xchg
sub
cltd
sub
leave
scas
lret
dec
ds
mov
mov
daa
leave
xlat
out
mov
sub
out
test
jne
adc
add
mov
into
sub
xchg
mov
scas
pop
je
lods
movsl
call
out
and
cmpsb
or
pop
push
test
adc
push
adc
adc
or
pop
or
stos
and
mov
and
nop
popa
and
pop
push
mov
sub
int3
mov
mov
pop
and
ja
mov
nop
insb
sub
or
iret
stc
mov
leave
pusha
push
and
imul
test
gs
insb
adc
in
adcl
adc
jo
and
pusha
popf
and
push
sub
xor
cwtl
mov
pop
fwait
and
inc
cltd
adc
push
stc
sub
nop
dec
jae
jb
bound
jns
xor
out
stc
roll
sarb
mov
ljmp
cmc
pop
loopne
xchg
cmp
and
mov
sbb
ljmp
mov
out
lock
fs
leave
push
loopne
mov
stos
lret
lods
stos
xor
or
sahf
je
int3
dec
je
mov
lea
das
hlt
nop
popa
enter
data16
cmp
xchg
je
dec
mov
mov
lret
lods
idivb
popa
lcall
push
fst
jbe
fs
mov
rorb
xchg
cmpsl
pusha
out
mov
jle
inc
cmpsb
or
inc
addb
push
rcrb
inc
mov
or
movsb
sar
mov
push
mov
fwait
adc
xchg
pop
mov
dec
sti
in
mov
pop
push
xchg
int3
push
sbb
dec
mov
adc
mov
fs
inc
inc
leave
mov
leave
jns
adc
ret
sub
cs
popl
inc
xchg
inc
repnz
test
insb
sahf
xor
stos
inc
outsl
mov
out
outsb
mov
ja
jl
jbe
stos
insb
cmpsl
xor
lea
sub
mov
fdivs
inc
add
addr16
rorl
call
gs
mov
leave
pop
or
loop
jmp
xorb
xor
ljmp
cmp
lcall
jl
adc
lret
loop
and
mov
jnp
popa
fsubr
test
cltd
or
mov
cmp
addl
or
xor
pushf
jae
imul
in
or
jg
pop
mov
movsb
or
icebp
jb
xor
pushf
push
cmp
adc
movsb
mov
daa
cmp
mul
push
push
jmp
repz
pop
sbb
scas
xchg
pop
loopne
pop
loop
push
leave
adc
out
xchg
shr
outsb
sahf
int3
in
ljmp
dec
daa
pop
mov
insb
in
repz
push
jo
adc
mov
test
dec
sub
int3
pop
sbb
jl
or
or
je
mov
mov
or
lods
leave
sub
lret
dec
mov
mov
test
xor
daa
inc
mov
adc
inc
jne
icebp
pop
repz
sbb
imul
out
dec
enter
xchg
cld
in
outsb
jns
xchg
leave
pop
xchg
rorl
adc
inc
lcall
mov
add
hlt
xor
push
leave
dec
mov
cmc
add
test
push
stos
xchg
xchg
jns
mov
stos
push
ret
pop
movsl
mov
mov
ljmp
rcr
repnz
fcompl
mov
adc
jns
cmp
pop
jae
jecxz
jne
mov
sbb
sahf
mov
call
lods
sub
xchg
xchg
rcrl
pushf
shrb
cld
sub
enter
or
loop
sub
insb
lods
in
outsb
int3
xchg
enter
sbb
arpl
push
arpl
pop
pop
ljmp
mov
mov
jb
xchg
and
push
hlt
cltd
jle
add
lock
xor
icebp
decl
xlat
push
mov
xchg
cltd
mov
ja
lock
jo
negb
cwtl
jns
in
movsl
das
add
add
je
sub
dec
clc
mov
mulb
and
pusha
fs
push
jmp
lods
dec
test
fnsave
pop
jo
sub
inc
jb
and
popf
add
add
lahf
cli
scas
jecxz
scas
mov
and
or
out
push
sahf
pop
aaa
scas
lea
ja
push
pop
xchg
dec
insl
lret
pop
ljmp
les
mov
pop
pop
scas
loope
mov
insl
lock
lods
call
aam
js
gs
arpl
pop
mov
dec
sub
mov
mov
dec
sub
lods
sub
mov
in
fucomip
ret
addb
xchg
aaa
jecxz
adc
fmull
jp
pop
je
adc
pop
mov
or
ret
mov
xchg
sub
sti
mov
sub
fwait
scas
int3
cmp
xor
mov
dec
xor
or
hlt
out
das
lods
aas
cltd
in
scas
loop
pop
xlat
push
repz
adcb
ja
cltd
aas
fwait
or
mov
or
push
adc
pop
in
sahf
xor
push
mov
sub
bound
enter
rcr
icebp
loope
lds
lods
rcrb
and
fisttps
adc
data16
xchg
cmp
mov
sub
insb
pop
nop
mov
mov
adc
sub
sbb
aad
xor
scas
leave
lods
fdivs
cmp
mov
push
mov
mov
insb
jo
xor
call
cs
mov
sub
fwait
jno
popa
push
mov
add
xor
and
push
lock
ret
fbld
inc
add
push
add
pop
add
iret
and
pop
out
add
dec
jl
mov
cmp
cmc
pop
loop
pushf
in
sbb
sbb
pushf
dec
push
test
inc
movsb
xchg
call
inc
mov
ret
in
lods
inc
and
std
mov
outsb
ss
mov
insl
das
aas
mov
pop
decl
mov
mov
gs
cmpsl
and
ret
add
adc
add
mov
stos
call
pop
mov
inc
insl
stc
test
cmp
sbb
and
inc
mov
test
add
jmp
imul
sbbb
pop
cmpsb
xchg
xor
push
and
in
and
ret
mov
int3
xor
cmp
ss
lds
popf
cmp
test
sti
adc
pop
sbb
leave
fsubrs
sbb
mov
cs
test
and
mov
rolb
add
cli
insb
cmp
push
or
pop
mov
mov
jl
jbe
or
jo
ljmp
sbb
sahf
xor
lods
sbb
pop
and
sbb
aas
adc
adc
in
popf
test
jae
xor
pop
mov
cmp
lods
jnp
shrb
popa
push
notb
sbb
scas
insl
xor
mov
pop
mov
adc
test
popa
push
jnp
and
lret
mov
xlat
add
into
push
mull
cwtl
xor
orl
sbb
inc
mov
sbb
int3
cmp
fsubrl
sbb
dec
in
negb
xchg
dec
mov
mov
imul
and
sbb
incb
out
dec
adc
std
rclb
jmp
lea
or
add
push
sbb
js
psadbw
stc
jne
int
dec
addr16
les
push
stos
movsb
sbb
mov
mov
repnz
xor
xlat
mov
test
loop
mov
xchg
inc
scas
outsl
fwait
shll
xor
ja
enter
add
inc
pop
movsb
leave
xchg
pop
cmp
rol
test
jns
jecxz
cmp
push
jns
mov
test
mov
push
ja
mov
lock
js
cwtl
mov
ja
movsb
test
fucomp
mov
stos
xchg
jge
lret
sbb
cmp
mov
scas
mov
mov
dec
gs
jl
mov
cmp
sbb
and
inc
dec
addr16
xchg
std
bound
test
aas
jecxz
cmp
lret
jmp
inc
sub
incb
xchg
cwtl
xchg
mov
adc
jg
lds
add
cwtl
mov
sub
push
fdivs
int3
lods
jnp
ret
loopne
pop
sbb
insb
mov
out
xchg
push
loope
push
fwait
popa
push
xor
dec
jns
stos
push
mov
clc
shrd
pop
fists
and
dec
inc
mov
cld
pusha
adc
xor
test
pop
stos
stos
sub
cmp
jo
sahf
push
stc
dec
or
sub
mov
jmp
mov
sub
xor
sbbb
or
fisubrl
sti
repz
jg
loope
in
pop
movsb
xor
je
sub
insb
mov
les
test
cmp
add
out
pop
or
out
aas
or
mov
pop
sub
fs
inc
push
test
mov
push
push
stos
insb
cmc
mov
mov
jl
xor
popa
stos
dec
sahf
leave
xor
push
dec
mov
sub
add
sbb
mov
mov
fdivr
jo
xor
stc
push
add
add
sub
test
movsb
pop
and
jg
push
add
pop
jecxz
aaa
mov
outsl
stc
pop
shlb
adcl
mov
jp
inc
jle
add
jecxz
adc
movsl
mov
jb
sub
jg
pop
pop
inc
xchg
cmp
aaa
push
pop
imul
jecxz
adc
xchg
sub
mov
nop
lock
mov
test
or
mov
mov
add
lret
data16
cmp
xchg
bt
repnz
cli
push
inc
xchg
movsb
data16
adc
out
sub
lock
nop
xor
add
mov
fcompl
scas
mov
fs
adc
loopne
or
faddl
cmpsl
jle
push
rcl
ja
mov
sub
jbe
aas
mov
scas
mov
test
iret
pop
add
stos
daa
fs
jo
xchg
lds
adcl
ret
xorb
and
xlat
repnz
fbld
jns
add
clc
aad
stos
ja
pop
add
fwait
cmp
mov
dec
icebp
repnz
test
sbb
adc
mov
bound
mov
push
icebp
sub
xchg
xor
sbb
movsl
jb
jbe
enter
mov
pop
mov
push
inc
sub
add
rcl
push
fcomp
outsl
daa
sub
leave
and
lock
add
or
and
enter
das
xor
pop
mov
and
cmp
xor
scas
int3
out
dec
outsb
mov
push
enter
aad
arpl
insb
jno
fdivl
sub
xor
mov
dec
test
fs
das
imul
bound
adcl
arpl
xchg
int3
pushf
roll
and
fidivl
dec
ljmp
leave
pop
negl
xor
mov
mov
cmpsl
and
stos
pop
insl
mov
sahf
push
nop
ja
mov
aaa
stos
lret
sbb
js
imul
mov
loopne
xor
out
mov
mov
test
cmp
and
sbb
repz
xchg
lods
xchg
xchg
jp
aad
add
adc
popa
ss
mov
dec
addr16
imul
and
pop
lret
jge
in
sub
xchg
mov
jecxz
nop
insl
pop
pop
ds
push
arpl
sbb
sbb
xchg
mov
sbb
pop
sub
xor
int3
mov
jo
cmp
xor
add
pop
jge
rol
jg
push
iret
repnz
lock
dec
int3
pop
cld
imul
mov
test
into
xor
test
test
and
fbld
cmc
xchg
cld
jae
out
xchg
movsl
test
push
lock
mov
in
scas
popf
test
sbb
adc
xchg
mov
scas
lcall
les
xchg
daa
addr16
rorl
call
pop
mov
push
xor
dec
shlb
js
call
test
test
adcl
xchg
dec
in
lcall
mov
test
mov
jno
out
mov
enter
push
mov
neg
mov
popf
aas
scas
call
xor
in
cs
push
subl
rorb
mov
pop
fistl
subl
je
adc
sbb
insl
sub
imul
aaa
add
mov
mov
mov
lods
xor
rclb
data16
jns
pusha
aaa
lahf
mov
fs
daa
test
xor
out
rcll
mov
inc
xchg
sti
mov
jecxz
jg
adc
scas
xor
mov
stos
sub
pop
cmp
iret
jge
repnz
or
inc
stos
jl
jne
sbb
stc
mov
sbb
push
push
popf
test
repnz
add
sbb
sbb
add
sub
push
lods
imul
mov
cmp
pushf
shll
pop
mov
dec
mov
fldt
push
out
jl
dec
stos
aas
fwait
adc
jnp
out
or
sub
add
and
mov
fs
mov
mov
call
and
stos
movsb
cmpsb
jl
jecxz
sbb
xor
mov
jae
adcb
clc
je
out
sbb
lret
movb
loope
jmp
sbbl
lea
jno
sahf
daa
test
ss
xor
add
jecxz
es
mov
mov
scas
ret
scas
rorb
mov
into
int
imul
pop
mov
jns
shll
int3
adc
pushf
or
subb
bound
movsl
pop
stos
mov
lcall
mov
sub
mov
movsb
ret
and
lods
mov
mov
mov
aas
shlb
clc
out
and
shl
icebp
pop
and
scas
in
xchg
pop
repnz
loopne
cmp
mull
imulb
enter
notl
xchg
mov
mov
scas
push
decl
cmp
and
arpl
and
cmp
pop
and
mov
mov
xchg
popf
xchg
mov
shrb
movsb
nop
sbb
lods
js
aaa
movsl
inc
mov
pop
xor
adcl
push
cli
andb
rcl
lea
adc
fdivs
jmp
idivb
mov
int3
stos
clc
mov
inc
and
add
mov
mov
nop
jl
xor
cmp
cld
mov
jns
fisubs
push
es
xor
repnz
and
rcll
jmp
add
js
adc
aaa
sub
shr
gs
fadds
mov
or
mov
mov
jp
movsl
dec
inc
shrb
call
sub
mov
mov
enter
mov
lods
idiv
jnp
and
popa
pop
ss
dec
add
movsb
int3
cli
mov
lock
push
les
push
arpl
dec
fcomps
int3
leave
imul
mov
fs
xchg
push
fdivl
repz
jae
jnp
xchg
mov
lcall
lods
jg
pusha
loop
lret
adcb
or
sub
mov
add
aaa
nop
jle
sbbl
dec
outsb
mov
sub
xor
inc
xchg
inc
cld
dec
repnz
dec
clc
xlat
pop
imul
loop
xchg
xchg
shlb
push
xor
roll
test
inc
push
cmp
pop
lods
lret
leave
and
or
and
add
pop
lret
out
xchg
and
and
mov
xchg
cmpsb
xor
psubusb
fyl2xp1
sbb
jl
lea
mov
and
ret
sub
dec
add
or
fs
mov
loop
cwtl
dec
pop
mov
popa
and
mov
mov
jle
nop
lahf
or
and
mov
lock
shl
lret
mov
stos
out
mov
pop
jge
movl
xorb
mov
pop
popf
into
imul
jne
dec
push
aaa
and
dec
mov
mov
mov
push
in
mov
imul
jnp
mov
out
pusha
xchg
nop
shl
ss
imul
sbbb
push
cmp
gs
icebp
enter
mov
test
out
push
loopne
lods
push
push
mov
ret
in
xor
aad
push
and
xorl
add
test
xchg
and
xacquire
incl
out
mov
sub
cmpsl
fwait
mov
adc
outsb
jb
int
pop
repnz
jmp
mov
xlat
movb
cmp
fmuls
inc
or
pop
xchg
clc
push
jg
stos
jb
ds
xchg
pop
xor
or
repnz
movb
dec
mov
andl
ret
out
xchg
nop
cmp
lods
imul
xchg
jmp
push
xchg
inc
cmpsl
push
test
sub
mov
xchg
xorb
test
insb
mov
aam
popa
int3
out
lock
movsl
jbe
pop
int3
cwtl
loopne
sbbb
mov
data16
cld
enter
xchg
lahf
lods
ss
out
je
test
sti
jns
mov
int
mov
iret
das
repz
mov
movsb
flds
mov
xchg
jnp
push
cmp
cmp
aas
daa
adc
lcall
xor
shl
push
sub
push
jmp
sets
sbb
xor
insb
data16
cmp
or
and
push
aam
cmp
mov
xlat
mov
fisubl
push
sbb
shl
stos
jno
push
fcoml
cld
dec
insb
mov
cmc
arpl
and
push
sbb
xor
cmpsl
movsb
movsl
sub
jo
pop
xor
jle
pop
dec
stos
int3
into
mov
nop
mov
leave
dec
add
aaa
mov
bound
xor
pop
int3
lret
and
mov
stos
or
enter
xlat
cltd
loop
adc
imul
das
fdivrl
aas
cmpsb
repnz
pop
mov
fst
out
movsb
pop
and
mov
jns
cmp
xor
mov
adc
adc
ret
shrl
inc
arpl
in
mov
pusha
std
pop
aam
inc
shrl
cmp
data16
mov
mov
jo
xchg
jmp
sub
dec
jae
push
fisttps
out
sub
pop
cmpb
cmp
dec
pop
sub
xor
fidivrs
sub
adc
daa
mov
jae
push
inc
push
cmp
jl
cld
lahf
adc
lahf
cmpb
adc
push
das
out
push
lea
adc
pop
pop
cld
movsb
push
mov
ljmp
pop
mov
xor
pop
nop
rep
fisubs
mov
xchg
fsubl
bound
mov
cli
sbb
xchg
popf
pop
sahf
test
lahf
jo
cmc
add
and
ficompl
rep
cwtl
int3
hlt
push
jp
lds
pop
rol
cli
xchg
sbb
push
push
cmp
ljmp
insb
cmp
notl
stos
add
mov
mov
sbb
lcall
sub
cmp
ss
test
sub
mov
clc
xor
fs
sti
movsb
add
imul
bound
and
jl
jnp
filds
fisubs
int3
or
adc
cmp
nop
jmp
or
daa
ss
and
add
mov
dec
pop
popa
pop
scas
inc
aas
push
and
out
enter
push
addr16
int
mov
daa
subl
adc
push
into
movsb
pop
hlt
xor
repz
dec
jge
insb
cmp
je
cmpb
jmp
jmp
xchg
je
xchg
xor
mov
mov
add
repz
cmp
jbe
and
mov
lret
lods
ret
lcall
inc
and
pop
lcall
sub
sarl
mov
testb
xchg
div
test
aas
sbb
add
rolb
negl
xchg
enter
push
out
xorb
mov
int3
andl
xor
sub
push
push
inc
pop
sbb
adc
adc
push
mov
popa
jle
lret
je
lcall
cmpsb
in
lods
sub
inc
pop
insl
imul
xchg
jmp
xchg
je
cmpsb
inc
inc
mov
sbb
add
cmp
and
gs
sahf
jae
xor
je
jp
cld
xchg
xchg
out
leave
push
outsl
jp
repnz
mov
sub
fs
jl
sub
pop
mov
adc
xor
pop
mov
pop
cmpsl
push
mov
pop
mov
lret
fisubrl
nop
loope
pop
sbb
mov
mov
sbb
dec
adc
adcb
cmp
clc
shlb
sub
fnstcw
sub
mov
or
pop
fucomip
xor
or
cli
ret
rep
lds
jecxz
push
aas
mov
cmc
into
cwtl
pop
sub
jge
call
jecxz
mov
pop
push
in
leave
sub
das
movswl
and
sub
pop
xchg
pop
adc
fsubrl
leave
inc
xchg
out
fldenv
clc
inc
sarl
mov
mov
sub
call
pop
cmp
notl
cmc
outsb
add
mov
jo
aas
inc
lds
sub
lret
movsl
out
jne
xor
jns
pop
inc
pop
insb
ljmp
jo
xor
push
mov
cmp
icebp
adc
add
jb
xor
cmpsl
in
or
xchg
mov
sbb
pop
cmp
subl
jmp
cli
push
and
xchg
jae
jle
dec
xor
test
mov
aas
jge
and
push
mov
sahf
xchg
mov
test
inc
aaa
stos
inc
inc
inc
in
testl
mov
mov
insb
and
sub
pop
bound
nop
int
and
mov
movsb
sti
movsl
call
stos
rorl
sahf
mov
shlb
inc
xchg
mulb
mov
scas
scas
push
add
cld
jno
push
aas
lds
sbb
aaa
mov
jecxz
xchg
xor
jl
sub
loopne
mov
sar
mov
jne
js
inc
mov
mov
pop
jnp
add
lret
pop
lahf
insl
repz
jb
insl
dec
lahf
repnz
jae
cmpb
xchg
and
mov
xor
mov
adc
jo
push
cmp
int3
ss
cld
mov
dec
lds
mov
cmp
jp
hlt
sarb
outsb
fs
in
scas
jle
pop
or
jnp
lea
ffree
das
adc
xor
adc
jp
lods
cltd
out
js
shlw
pop
ret
mov
int3
xchg
enter
fstpt
fsubs
and
addr16
shr
sahf
jae
inc
mov
aaa
lods
fs
leave
stos
lods
pop
cmc
in
mov
fsts
addr16
ficoms
xchg
js
dec
mov
jo
insb
pusha
jb
push
in
cmp
in
push
rcll
cmp
pusha
jae
xchg
add
test
cli
stos
xchg
sub
mov
pop
jecxz
cwtl
scas
lods
aaa
int3
mov
sbbl
je
stos
pop
sub
xor
addr16
movsb
mov
jmp
je
pop
imul
loopne
insb
jnp
das
pop
cmp
mov
inc
add
pop
add
pusha
stc
loop
cmpsb
and
jns
sbb
mov
dec
movsl
pop
and
mov
push
mov
jae
pusha
xor
mov
cmp
std
pushf
sub
leave
xchg
lods
jo
in
inc
lods
mov
jbe
ds
xchg
enter
je
mov
xchg
mov
mov
add
sbb
pop
add
shll
push
sbb
lods
pop
pop
lds
hlt
jno
mov
adc
sti
lods
inc
int3
dec
mov
mov
mov
hlt
js
mov
js
lcall
or
mov
push
mov
pop
dec
mov
ja
hlt
je
dec
cwtl
int3
sahf
dec
mull
mov
jo
add
mov
les
sbb
mov
mov
hlt
je
sub
loop
push
adc
cmpsb
mov
push
mov
lahf
sub
pop
out
push
pushf
int3
je
arpl
in
cwtl
push
lcall
sbb
sub
mov
cwtl
jae
adc
dec
xlat
jmp
and
bound
sbb
movsl
jb
je
stos
setno
pop
sub
xchg
jl
push
sbb
push
mov
mov
bound
push
jns
xor
add
jae
sub
mov
and
hlt
mov
jbe
dec
loopne
es
orb
mov
add
icebp
nop
into
jo
cmp
lahf
and
stos
or
pop
xor
xor
pop
outsb
or
test
es
int3
pusha
adc
dec
mov
fs
or
jmp
std
push
push
or
dec
pop
xchg
sub
lods
inc
movsl
rclb
jo
sbb
cmp
mov
sub
mov
push
or
pop
fsubs
stos
sbb
inc
lods
test
jl
mov
leave
mov
dec
or
cmp
into
mov
mov
mov
mov
pop
movsl
cmc
rclb
dec
cld
mov
sti
lcall
sub
pop
insb
nop
sbb
and
jp
mov
lcall
cmp
hlt
mov
test
xchg
jnp
fbld
jns
cmp
or
fbld
mov
and
mov
out
mov
test
fmul
ss
mov
push
push
xchg
lock
mov
aam
dec
mov
daa
jbe
and
inc
shll
test
notl
andl
sbb
jns
mov
int3
imul
lods
decb
jle
push
sahf
cld
push
push
add
cmp
lea
inc
adc
pop
lds
int3
mov
and
ss
inc
mov
arpl
xchg
repnz
xor
cli
sbb
fisttpll
or
data16
enter
icebp
jg
add
lcall
lahf
sub
or
notb
mov
lcall
cmp
pusha
lret
cmp
sbb
rcrb
mov
int3
rcl
lret
subl
sbb
dec
push
xchg
bound
xor
sub
sti
push
inc
jb
adc
jl
xor
pop
push
fbstp
popa
dec
mov
imul
call
mov
movsl
sub
movsb
je
lahf
sub
lcall
push
pop
mov
movsl
mov
or
pop
sbb
and
push
fs
dec
fdivr
cmpb
lea
shlb
pop
mov
test
out
js
shll
sbb
scas
inc
out
in
push
fxam
push
sbb
ljmp
xor
mov
sti
sub
testb
lahf
jo
xchg
xchg
sbb
push
mov
mov
movsb
dec
sbb
cmp
stos
push
fs
data16
cltd
test
loope
cltd
pop
sbb
jl
xor
xchg
mov
stos
xchg
sub
nop
lock
data16
sbb
mov
mov
mov
std
dec
call
stc
imul
pop
dec
xchg
or
or
sbb
lret
mov
and
in
mov
mov
fimuls
sub
jo
stos
movsb
jecxz
rcrl
jb
xchg
or
xor
push
movsl
movsb
daa
xor
xor
test
lods
cmpsb
leave
scas
rcrb
test
cltd
mov
or
mov
jns
test
sub
stos
andnps
outsl
pop
dec
daa
adc
movsb
les
mov
addr16
loop
lret
inc
inc
scas
push
dec
loope
test
sbb
and
ret
mov
push
bound
clc
push
shll
movsl
sub
sub
and
notb
adc
mov
jmp
loope
rcll
jmp
shrl
ret
mov
aaa
stos
or
push
pushf
test
test
test
lahf
sub
and
mov
add
xchg
pop
mull
push
sahf
push
aas
xchg
test
sub
pop
push
int3
inc
sub
cmp
addb
mov
xchg
jge
aaa
mov
add
and
pop
mov
inc
sbbb
fs
loop
xor
mov
pusha
cmpsl
addr16
push
jp
aas
push
imul
and
das
push
flds
sahf
pop
xor
jg
dec
xchg
mov
nop
cmp
jg
mov
push
jge
mov
fcoms
stos
shll
pop
outsb
and
movl
subl
mov
loop
sbbl
and
push
sub
fwait
sbb
scas
xchg
test
fwait
jns
xchg
std
bnd
gs
cmp
outsl
pushf
sbb
jb
and
jns
xor
jl
rcrb
fiadds
outsl
xchg
inc
fstps
pop
or
push
into
xor
fiaddl
test
adc
push
sbb
movsb
leave
cmpsl
xor
cltd
dec
test
pusha
jno
adc
or
sbb
lods
xchg
inc
pop
movl
cmp
sahf
jp
loope
into
sahf
arpl
xchg
aas
ret
add
insb
hlt
nop
aas
xchg
pop
dec
shlb
jae
mov
dec
fwait
lods
lahf
jns
or
data16
xor
repnz
sbb
mov
ds
scas
push
add
lock
imul
jb
sub
call
sbb
xchg
cmc
test
jne
jns
adc
add
inc
stos
jb
push
js
jmp
je
idivb
jo,pt
sbb
je
scas
std
data16
repnz
int3
push
push
test
or
or
mov
repz
cmp
xchg
and
lods
int3
xchg
mov
mov
je
fstps
push
and
ss
sbb
mov
mov
stos
lods
mov
test
out
push
faddl
cli
cmp
mov
sub
mov
loope
or
dec
into
pusha
fs
test
dec
sub
addl
xor
int3
xchg
shrb
pop
inc
push
cmovle
gs
mov
cmpsl
push
xchg
xor
mov
pusha
mov
outsl
lret
dec
jl
sbb
mov
test
jle
daa
stos
mov
movsl
cmc
in
xor
ds
jo
insb
xorb
and
sub
pop
inc
sarb
jb
push
in
lahf
outsb
jbe
imul
lret
mov
bound
and
ja
ds
push
mov
lret
jmp
or
and
jb
outsb
mulb
adc
data16
push
ficoms
inc
xchg
xchg
das
lret
sub
dec
ja
bound
adc
push
mov
inc
decb
imul
mov
adcb
ds
aam
sub
inc
stos
sbb
cmpl
js
pop
shlb
sub
dec
bound
cmp
cs
pop
and
popf
jnp
dec
xor
push
mov
mov
pop
dec
mov
mov
adc
pushf
or
push
jmp
pop
popa
and
lret
sub
lret
inc
orl
loop
pop
das
push
lret
insb
dec
lahf
jp
pop
push
enter
out
stos
insb
push
inc
out
movsl
mov
jp
pop
sub
fcomi
lods
add
outsb
cld
call
lods
push
mov
pop
pusha
mov
adc
push
rclb
adc
addr16
add
mov
cmp
ror
jb
dec
and
les
and
or
insl
mov
xchg
fsubrs
push
or
pop
mov
jge
sub
jb
xchg
outsl
in
push
lods
out
pusha
rorl
sbb
lods
ljmp
mov
out
cmpsb
dec
xchg
mov
sbb
jl
mov
mov
int3
out
lcall
sbb
cmpsl
ds
sub
sub
mov
mov
xor
test
inc
xor
xor
lock
sub
mov
sarb
imul
mov
xchg
mov
mov
push
mov
lahf
sbbl
ss
icebp
scas
add
adc
xchg
jge
mov
int3
cmc
pop
fistps
daa
jne
xlat
mov
cmp
outsb
inc
push
mov
mov
pushf
daa
cmp
stos
mov
imul
jge
in
mov
mov
jnp
sub
int3
cld
pop
lock
inc
arpl
push
and
dec
jge
sub
sub
xor
scas
cmc
das
iret
leave
sbb
scas
in
xchg
adc
xor
pop
scas
push
ss
test
scas
xchg
cmpsb
aam
jae
ljmp
je
cld
test
cmp
xor
push
or
dec
jne
inc
lret
jns
imul
sarl
push
mov
sub
mov
mov
mov
shrd
push
sub
mov
scas
mov
scas
jl
sub
push
xchg
dec
insb
dec
insb
je
es
ss
inc
scas
cmp
pop
cmp
lds
bound
int3
call
dec
idivb
mov
jb
shlb
pop
xchg
imul
popf
mov
cmp
mov
roll
jle
out
mov
dec
xlat
insl
xchg
and
js
push
insl
mov
mov
dec
adcb
cld
lods
scas
sub
js
movsl
test
lods
adc
gs
xor
popf
or
pusha
out
test
in
add
push
daa
pushf
pop
mov
sub
test
sub
arpl
mov
test
dec
out
sahf
adcb
jb,pn
xchg
or
sub
push
dec
xchg
push
fwait
inc
stos
mov
sub
aaa
stos
enter
mov
lds
leave
mov
xlat
sbb
fistpl
xchg
jecxz
popa
jl
and
xchg
jns
outsl
jnp
push
enter
sbb
subb
mov
and
mov
ss
fcomps
mov
pop
mov
popf
mov
jp
push
sub
cmp
cs
in
lcall
arpl
test
jmp
pop
out
in
test
adc
jb
insl
fistps
mov
mov
fwait
pop
mov
scas
jg
sahf
sub
push
mov
subb
aas
nop
cmp
and
popl
cmp
lock
sub
jb,pt
rolb
and
cld
jo
push
dec
xchg
xor
inc
jp
cmp
jmp
in
cmp
adc
and
and
enter
insb
jns
sub
cwtl
cmpsb
in
sub
xchg
les
ss
adcb
sbb
arpl
mov
jbe
stos
and
or
xor
mov
mov
fcoml
movsl
xchg
mov
mov
lock
in
inc
jae
scas
imul
scas
adc
push
mov
cld
pop
and
outsb
test
pop
fstpl
mov
loopne
mov
dec
call
cmc
popa
fwait
xchg
scas
and
ret
pop
int3
mov
mov
call
notb
cmpl
lea
inc
fldenv
and
mov
adc
shrb
adcb
insb
in
push
or
jae
mov
adc
mov
push
or
mulb
jb
push
adc
inc
or
push
movsb
adc
or
jp
add
jns
mov
sbb
xchg
scas
sbb
sub
fcoms
xor
adc
cld
or
jg
xor
pop
dec
enter
sub
sbb
sub
add
mov
mov
push
dec
or
mov
dec
test
push
sahf
push
aas
push
xor
pop
sub
mov
icebp
mov
loope
gs
fisttpl
mov
test
or
insb
jecxz
jns
push
call
sub
or
out
insb
mov
cmp
cmpsb
test
test
mov
pop
inc
lret
dec
cltd
rcrl
xchg
push
or
mov
xchg
fnstsw
out
pop
xchg
cmp
js
xor
stc
rorb
ja
mov
aas
scas
imulb
sbb
in
lods
sub
scas
and
dec
xor
push
xchg
lret
dec
test
cmp
mov
gs
lds
mov
sub
test
sub
fsub
jecxz
lret
dec
adc
sub
xchg
shlb
scas
pop
add
test
out
repnz
inc
test
mov
outsl
push
jns
or
pop
xor
xchg
mov
xchg
jmp
loopne
int3
mov
movsb
frstor
xchg
push
push
in
pop
pop
and
in
mov
inc
test
mov
int
aam
icebp
sbb
mov
xchg
mov
jnp
jnp
aas
dec
push
xchg
sub
xchg
hlt
lea
jns
pop
cltd
xor
xor
aas
stos
insb
movsb
je
leave
dec
movsl
sbb
mov
inc
scas
xchg
push
xor
add
in
movsb
int
call
mov
and
test
popa
sti
addr16
ret
pushaw
add
fwait
insb
inc
mov
mov
push
ja
xor
leave
bound
sbb
mov
mov
mov
mov
jae
sbb
repnz
xchg
bound
or
mov
sahf
daa
mov
mov
lea
icebp
decl
and
insb
jne
in
mov
je
arpl
and
stos
or
lcall
lock
lock
dec
dec
jo
fildll
aam
call
fmuls
mov
jmp
xor
pop
lods
push
sub
mov
xchg
dec
mov
sub
addr16
lea
rclb
jl
outsl
sub
mov
sti
pop
mov
mov
mov
hlt
das
pop
mov
jns
mov
stos
adc
js
pslld
mov
clc
outsb
fnstcw
lahf
lret
and
dec
mov
sub
push
bound
out
xchg
mov
ss
int3
fistpl
adc
aas
negb
mov
xchg
push
cmp
mov
insb
mov
inc
movsb
les
mov
rcll
cmpsl
mov
sbb
push
mov
xor
and
xlat
call
sub
and
jo
les
scas
sti
lea
cmpsb
xchg
jnp
dec
imul
scas
xor
push
mov
scas
jno
mov
mov
fwait
jns
sbb
mov
dec
jmp
dec
jge
add
sarl
adc
mov
adcb
or
jns
lahf
xchg
popa
repz
xchg
push
lods
scas
cmp
stc
arpl
jb
movsl
and
lcall
push
pop
push
mov
scas
xor
and
cld
adc
mov
pand
lea
pop
sub
push
or
add
dec
aad
or
push
scas
pop
xchg
push
inc
fs
sub
ret
pop
les
dec
insb
jns
mov
ret
push
rorl
movsb
int3
xchg
mov
test
ficoms
jbe
and
inc
mov
lods
test
pop
push
push
faddl
pushf
fs
sahf
scas
test
push
and
adc
and
or
mov
jbe
loop
mov
pop
test
push
je
cmpsb
and
inc
stc
outsb
test
mov
imul
push
mov
mov
cmp
jl
mov
rcrb
xchg
mov
sub
das
int3
outsl
mov
addr16
outsl
pushf
xchg
das
jmp
loop
dec
push
dec
mov
cmp
xchg
cmp
lahf
mov
xchg
int
dec
mov
rorl
pop
cwtl
je
mov
nop
mov
inc
fsub
mov
xchg
xchg
push
push
xchg
subb
pop
rolb
gs
scas
push
ss
test
lock
pop
ret
jns
inc
nop
jo
stos
cs
dec
addl
or
lods
push
int3
xchg
fwait
pop
hlt
hlt
mov
stos
in
xchg
testl
lret
icebp
sbb
jns
repz
jnp
adc
lock
add
sbb
cmp
xor
mov
xchg
ljmp
imul
pop
push
mov
adc
aad
loop
xchg
jle
pop
ffree
xchg
dec
push
mov
aam
xchg
pop
jb
test
pop
cmpsb
imul
dec
sbb
nop
mov
fs
decb
cmp
jle
xchg
sbb
push
push
pop
pop
test
subb
or
cltd
orb
ja
push
sar
aaa
pushf
push
clc
das
dec
movsb
fs
xor
adc
and
imul
dec
xchg
insb
fnstsw
insb
scas
pop
int3
out
rep
dec
mov
pop
lock
les
insb
adc
jae
mov
jnp
outsl
lahf
or
clc
push
mov
adc
fdivr
or
insb
out
dec
scas
outsl
int3
or
outsb
outsb
jo
adc
cmp
and
xchg
shrb
fmuls
inc
cs
cwtl
imul
lock
mov
and
jo
lret
stc
nop
addb
sub
cwtl
dec
and
cmp
mov
movsb
fwait
sbb
nop
jo
sbb
push
and
movsb
test
xchg
imul
mov
jo
sbb
jo
adc
stc
mov
mov
jo
pop
test
or
daa
xchg
and
in
call
out
sub
fs
jno
lods
stos
fcoml
adc
inc
sub
push
add
test
in
push
adc
outsl
data16
pop
movsl
xchg
lahf
aas
popf
adc
dec
mov
xchg
inc
lods
xor
pusha
pushf
bound
fsubr
lcall
mov
jne
xchg
adc
sbb
inc
fwait
xor
fucomip
push
pop
outsb
dec
fisubs
adc
lods
cmp
add
cmpsb
sahf
rcrl
cld
or
xchg
push
adc
lock
dec
bound
adc
sub
arpl
jo
push
jns
pop
insb
jecxz
sbb
jecxz
je
stos
ret
cs
jne
add
cmpsb
sub
inc
jno
adc
xchg
movsb
in
int3
call
stos
mov
push
fcom
stos
jo
lods
je
ja
mov
cld
and
xchg
fcoms
sub
mov
out
and
xchg
lds
sub
or
xchg
aas
jns
repnz
jo
js
mov
sbb
add
push
cmc
jg
or
in
das
add
xchg
mov
daa
push
dec
mov
lret
hlt
icebp
int3
out
lds
mov
outsl
sti
insb
test
adc
outsl
lods
jne
jo
outsl
dec
in
in
inc
test
pop
frstor
pop
xchg
insl
mov
push
mov
dec
mov
outsl
or
outsl
push
and
popf
int3
pop
jo
add
xchg
cli
test
push
lods
add
adcl
fcomi
jp
in
cltd
lahf
xchg
out
das
mov
fs
cmp
addr16
ss
popa
scas
test
inc
cmp
pop
mov
sbb
nop
repz
mov
pop
outsl
push
push
sub
scas
loopne
insb
or
jb
into
movsl
in
cmp
sub
sub
sub
inc
mov
mov
or
test
imull
imul
std
inc
into
mov
pop
push
outsl
dec
das
pop
xchg
cld
and
jbe
in
mov
sub
jo
mov
mov
lods
mov
leave
jb
movsb
lods
xor
iret
mov
xchg
scas
lods
xlat
lds
lods
out
test
or
fistl
iret
adc
enter
push
or
in
and
lods
inc
inc
pop
sub
jae
inc
out
or
and
cmpsl
xor
xor
je
stos
data16
mov
les
xchg
and
jmp
mov
lods
adc
add
pop
test
pushf
jne
test
fisttps
mov
stos
xchg
sbb
xchg
lock
xchg
dec
and
inc
lea
mov
imul
mov
and
clc
aam
xor
cmpsb
mov
or
mov
jns
dec
adc
sbb
arpl
cmpsl
sbb
lcall
mov
sub
sbb
lods
jae
aad
scas
repnz
and
xchg
jmp
scas
jns
sbb
int3
cmc
dec
scas
aad
lods
int3
or
cwtl
inc
mov
xor
pop
push
movsb
in
fwait
push
jp
out
roll
xor
mov
xchg
jbe
rep
cld
hlt
and
pop
dec
lcall
mov
sub
pop
es
aam
lcall
xor
imul
repz
nop
addb
dec
lahf
mov
mov
jne
stos
xor
mov
jne
cmpsl
adc
pusha
popf
cld
in
mov
add
dec
dec
mov
int3
nop
xor
xor
push
js
mov
jnp
sarb
ss
push
push
lret
js
xchg
pop
jg
cmpsl
fs
test
push
fsubrs
xor
pop
push
mov
inc
mov
fists
or
add
cmp
push
fmull
cmpsl
cwtl
into
mov
in
push
test
adc
fsubrs
movsb
adc
sub
test
clc
ljmp
pushf
and
in
fcoms
adc
scas
cld
addb
in
scas
xchg
pusha
push
das
mov
mov
scas
jbe
mov
test
xchg
push
std
sti
push
ss
repnz
xlat
xchg
mov
ljmp
mov
lods
jl
jae
cld
mov
test
pop
popa
xor
push
movsb
and
lahf
test
pop
nop
and
add
sub
arpl
mov
mov
lret
inc
sub
lds
xlat
adc
mov
xchg
lds
js
xchg
mov
mov
int3
xchg
or
push
mov
lods
sub
lret
lods
es
stos
lret
scas
jl
lret
cs
sub
aaa
repnz
jmp
in
mov
scas
scas
add
bound
js
add
pop
cwtl
jmp
add
cli
add
aas
test
inc
adc
jbe
scas
inc
popf
nop
loop
fs
adc
lods
mov
adc
fbld
mov
bnd
and
in
testb
pop
dec
arpl
add
lods
cltd
loop
das
ffreep
int
xor
test
pushf
int3
fwait
repz
push
or
dec
push
push
lds
in
sahf
in
pop
mov
test
fs
xchg
hlt
ja
mov
je
mov
in
xchg
iret
mov
cmpsb
dec
insl
mov
enter
insl
into
lock
and
xchg
sub
push
mov
dec
outsl
ljmp
cmpb
hlt
cmc
test
les
pop
sti
sahf
mov
or
out
iret
pop
imul
hlt
movsb
push
xor
dec
data16
pusha
xchg
sbb
cs
pop
ds
rorb
or
dec
mov
cltd
xchg
ja
daa
xchg
lods
gs
push
xor
jno
int3
rolb
mov
js
sti
jl
mov
and
mov
inc
jb
outsb
je
adc
gs
and
mov
xchg
xchg
jl
inc
je
ss
mov
aas
mov
adc
jmp
xchg
insb
lock
or
inc
mov
je
lock
lret
mov
ss
bound
arpl
ss
cli
rcl
jnp
mov
pushf
and
mov
pop
shr
imul
pushf
adc
hlt
mov
pop
xchg
fdivl
xchg
dec
sub
xchg
fcomps
inc
cmpsl
lcall
shrl
adcb
scas
push
mov
xor
int3
scas
push
jns
bound
loop
dec
pop
mov
mov
mov
adc
xchg
scas
or
cli
test
sahf
mov
int3
xchg
outsl
push
cs
mov
jbe
and
nop
jae
stos
jge
les
int3
jl
sub
out
mov
popf
mov
or
xor
frstor
aad
sub
insb
adc
pop
sbb
lods
jmp
int3
mov
cwtl
pop
popa
inc
imul
jno
sub
sbb
shlb
sub
stos
jae
mov
mov
iret
frstor
push
scas
pop
popf
imul
aad
jle
mov
inc
or
dec
mov
out
aas
or
testb
stos
loopne
nop
mov
imul
mov
bound
sub
push
jo
outsb
mov
sbb
int3
push
sub
stos
or
lahf
sbb
hlt
jle
repnz
insb
mov
pop
pop
sbb
pop
mov
mov
out
pop
imul
push
jge
in
or
inc
mov
xchg
lret
stos
fs
push
dec
hlt
movsb
push
mov
and
imul
pushf
cmpsl
sarl
mov
mov
jnp
je
sub
and
dec
mov
and
sbb
loope
lret
pushf
insw
jecxz
jno
jne
clc
xchg
and
test
dec
xchg
and
xchg
sub
shrb
fbstp
or
sbb
xchg
adc
fyl2xp1
add
inc
adc
mov
xchg
cmp
pusha
dec
or
pop
xchg
adc
stos
and
scas
mov
mull
cmc
mov
push
mov
push
mov
cmovle
push
in
in
stos
inc
pop
push
or
cmp
pop
stos
pusha
cmpl
je
jae
out
pusha
arpl
pop
and
xchg
jmp
mov
dec
mov
addl
arpl
mov
fs
mov
pop
fcmovb
leave
xor
lock
and
dec
fs
mov
jno
pop
icebp
mov
enter
in
jns
push
push
int3
insb
sbb
xor
cwtl
sub
fidivs
stos
je
jo
jl
js
lahf
mov
test
and
add
fistpl
mov
xchg
jmp
imul
scas
push
test
mov
push
in
dec
cmc
xor
or
push
jb
mov
movsb
pusha
add
test
jo
neg
sbb
and
sub
aad
cmp
add
dec
jbe
divl
jnp
push
cmpb
push
push
add
movsb
jp
jae
jge
cmp
sbb
cmp
pushf
cmpsl
mov
pop
cltd
sbb
es
xor
mov
incl
add
test
jmp
xor
in
je
test
cmc
mov
mov
inc
insl
push
cmp
hlt
adc
jge
leave
mov
popf
fs
push
pop
push
pusha
mov
xor
pop
int3
xchg
and
push
cld
mov
sti
jo
in
rcrl
and
test
bound
or
pusha
jo
push
pop
mov
out
push
xorl
jns
inc
sub
repz
out
jmp
loope
movsl
mov
jns
xor
cld
test
movsb
jecxz
in
dec
xor
nop
push
flds
ret
out
cmpsl
push
dec
mov
call
mov
ljmp
xor
adc
jl
movsb
mov
es
mov
sbb
test
loop
mov
inc
push
lds
sbb
mov
repnz
jno
inc
jns
out
dec
mov
pusha
push
xchg
xchg
mov
sub
mov
pusha
add
out
fisubrs
pop
bound
rolb
mov
int
adc
jnp
or
pusha
rep
insb
xor
lret
mov
rclb
sub
push
lods
roll
mov
jle
pop
cmc
dec
aam
mov
imul
iret
jb
mov
aas
mov
shll
fwait
lods
xchg
int3
call
and
adc
scas
pop
insb
sub
sbb
jecxz
add
adcl
cwtl
add
mov
dec
jl
mov
shrl
inc
adc
icebp
add
xchg
movsw
pop
xor
popa
sbb
sub
jmp
sbb
icebp
dec
pushf
push
add
xchg
int
je
jno
cmp
inc
inc
jae
xchg
pushl
data16
fdivr
and
cmc
jb
pop
faddp
mov
xor
aad
jl
cmp
mov
adc
js
push
xchg
xor
cmc
dec
inc
incl
xchg
sbb
in
xchg
scas
rcrl
xchg
fsubrl
cmp
lock
scas
dec
add
push
testb
or
ret
les
in
shrb
push
int3
jae
jmp
xor
addl
aas
push
jo
xchg
pop
jnp
fistl
popf
pushf
paddsb
cvttps2pi
pop
mov
mov
lret
mov
add
popa
sub
pop
fidivrs
in
ds
arpl
sahf
ret
fstpt
roll
call
test
xchg
cwtl
jno
out
lods
test
inc
rcll
push
mov
das
arpl
bound
mov
lgs
rorb
mov
loop
popf
mov
faddl
and
aas
fwait
testl
test
inc
cmpsb
cmc
mov
cmpsb
cs
jge
fnstcw
or
imul
sub
insl
aas
cmp
dec
notl
pop
pushf
scas
push
sub
mov
insb
ja
push
inc
mov
xlat
jae
jne
cmpsb
pop
pop
fidivrs
aaa
cmp
sbb
js
xchg
sub
mov
aad
aad
dec
pop
shrb
jno
leave
pop
inc
xchg
sub
ret
mov
xchg
xchg
and
xchg
cld
push
or
mov
std
arpl
cmc
rorb
jmp
dec
cmp
nop
int3
inc
mov
arpl
int3
pop
les
dec
and
aaa
xchg
mov
gs
xor
mov
les
inc
pop
ret
jmp
jnp
arpl
fcompl
shll
lret
clc
or
add
lds
xchg
xchg
decb
adc
scas
mov
insl
or
stos
lock
push
sbb
inc
or
cmp
push
inc
sub
mov
outsb
pop
shrl
mov
les
cmpsb
inc
pop
nop
pop
sbb
mov
out
and
xchg
jbe
jle
lcall
sbbl
sbb
dec
inc
fs
loop
pop
fistps
mov
jne
fadd
test
push
pop
mov
sub
xlat
jo
inc
imul
push
dec
and
out
jnp
cwtl
aad
push
adc
xorb
inc
push
cwtl
movsb
push
pop
and
lea
mov
mov
es
mov
sbb
jnp
mov
jmp
fistpll
jns
mov
outsl
lret
lcall
stos
push
repz
test
cmpsl
mov
mov
stc
imul
movsl
sub
cmp
getsec
dec
xchg
jb
arpl
popf
mov
test
dec
cmp
or
das
outsl
push
xor
mov
jecxz
aam
sub
enter
arpl
xchg
jae
arpl
cmp
pop
nop
xor
es
imul
mov
popa
sub
shll
shll
add
xor
aas
cmpsb
xchg
xchg
mov
arpl
inc
stos
outsb
push
gs
ret
cmp
leave
or
aam
sbb
lea
xlat
cs
mov
xchg
push
xor
bound
imul
mov
sarb
lcall
mov
sbb
xchg
das
insb
pusha
inc
aaa
sbb
push
fdivrs
pop
mov
mov
sub
lea
stos
outsl
adc
movsb
dec
pop
pop
sub
jmp
aaa
outsb
out
pop
cltd
lret
stos
and
xchg
cmc
cli
enter
xlat
dec
adc
test
outsl
clc
cld
insb
and
sbb
adc
loope
mov
repnz
fnstsw
sub
mov
inc
dec
dec
popa
scas
xchg
mov
pop
push
jle
mov
ret
pop
iret
jb
pop
xchg
pop
push
pop
add
push
arpl
push
cmpsb
rcl
push
mov
dec
add
jecxz
mov
mov
xchg
lcallw
icebp
cwtl
inc
leave
sbb
test
mov
mov
mov
bound
loop
mov
pop
inc
add
ret
mov
jno
int3
sti
orl
int3
bound
lahf
mov
cs
cmp
lock
movsl
nop
es
das
or
lea
jle
pop
adc
popf
call
into
stos
data16
lret
sub
addr16
mov
jbe
imul
dec
fildl
stc
lea
jle
int3
push
stc
loop
pop
fiadds
jl
xchg
in
inc
rorb
test
xchg
movsb
pop
cmp
dec
test
push
inc
push
pop
xchg
mov
mov
mov
pop
mov
pop
jmp
sub
lahf
mov
xchg
sahf
mov
ss
pop
inc
cli
sbb
mov
dec
loop
xchg
add
jnp
xchg
nop
sbb
xchg
ljmp
inc
fsts
pop
sti
lretw
inc
je
insb
push
je
jl
test
jnp
fwait
ss
mov
mov
rorb
je
pop
mov
js
shll
push
subl
fdivl
mov
mov
mov
xor
add
pushf
lret
sub
cmp
ret
loop
xlat
lock
pop
pusha
cs
mov
or
push
fcomp
out
jl
fistl
cmp
mov
mov
xchg
mov
mov
inc
lods
test
xor
dec
push
mov
xchg
cmp
xchg
xor
xchg
movsb
xchg
push
mov
mov
aaa
lret
push
sarl
pop
pop
pop
jbe
repz
fisubl
lea
push
je
int3
ret
push
jle
sub
and
jnp
add
movsl
outsb
adc
push
lea
mov
lret
lea
and
push
in
add
push
cwtl
jns
cmp
test
pop
popa
push
loope
js
cmp
test
outsl
imul
ds
mov
pop
add
mov
test
jo
mov
mov
xchg
mov
push
or
inc
aaa
mov
out
lea
adc
cmp
xor
mov
outsb
jmp
sub
int3
mov
push
pop
faddl
xor
lret
lods
xor
dec
repnz
movsb
jle
xor
pop
test
movsb
bnd
cmp
scas
pop
shrl
jecxz
xchg
popa
dec
call
mov
movsl
cmp
jl
fs
int3
xchg
or
or
fsubs
fucomp
mov
jo
cs
adc
jns
arpl
subl
xorb
ljmp
mov
nop
test
xchg
ljmp
je
mov
int3
xchg
push
jl
movsb
pop
pushf
pop
inc
pop
and
dec
push
fidivs
xor
gs
imul
add
popa
mov
sbb
mov
cmp
movsb
lret
out
and
scas
popa
push
fs
xor
or
inc
sti
xchg
add
mov
xor
fnstenv
mov
notl
inc
cmp
idivb
push
mov
dec
and
cmc
xchg
cmp
out
stos
cmpsl
les
xchg
or
cmp
int3
pop
push
pop
cmp
out
mov
lods
popa
aas
push
sbb
inc
mov
movsb
insb
adcl
outsl
xchg
xor
push
push
rolb
scas
int3
and
sbb
adc
enter
add
cs
or
cmp
xor
lret
adc
or
and
jb
fldl
xchg
rclb
stos
mull
lods
push
icebp
lret
das
cmc
jns
sbb
or
shll
loopne
int
or
in
mov
xchg
lcall
pop
push
mov
bound
jge
inc
daa
arpl
cli
out
push
push
push
enter
pop
movsb
in
fs
fistl
jb
xchg
cmp
mov
add
sbb
adcb
in
pop
xor
pop
sbb
and
lods
xor
pop
ja
out
roll
push
out
lods
sbb
mov
xchg
int3
es
test
pushw
dec
sub
push
repnz
sbb
insl
jb
inc
and
dec
pop
stos
inc
pop
mov
int3
jae
sub
xchg
ljmp
fsubp
repnz
sub
pop
mov
pusha
inc
clc
xor
lods
arpl
adcb
add
add
fstpt
insb
test
loope
mov
arpl
jo
push
stos
cmp
cmp
scas
mov
int3
outsl
pusha
mov
xchg
mov
callw
gs
xchg
push
inc
xchg
pop
pop
or
rcrl
dec
mov
mov
xor
sub
or
cmp
jmp
popf
and
cmc
mov
jae
ret
daa
cmp
mov
data16
sub
jmp
ljmp
sahf
sub
add
std
adc
subl
mov
fdivr
jmp
addr16
pushf
movsb
ret
cmpsb
lods
roll
dec
xchg
lods
scas
mov
push
dec
stos
cmp
pusha
jbe
or
addr16
out
inc
repz
or
push
callw
sbb
pop
aaa
add
pop
loope
out
mov
adc
jnp
xor
iret
stos
test
shll
dec
mov
les
popa
xorb
mov
ja
sub
imul
insb
adc
xor
pop
outsl
cmp
mull
cld
sbb
mov
pop
xchg
shrb
pop
jnp
mov
testb
mov
jl
xchg
test
lret
mov
lock
daa
loopne
pop
cwtl
sahf
das
jmp
sub
fcoml
lahf
clc
int3
rclb
adc
mov
das
std
push
xchg
sub
test
adc
inc
xchg
gs
push
loop
mov
iret
push
mov
sbb
loopne
xor
jno
movsl
popa
ret
js
data16
push
in
insb
sub
in
das
jge
add
stos
mov
mov
and
pop
cmp
or
jae
daa
jmp
lods
mov
test
sbb
xor
xor
fchs
gs
in
jp
sub
xor
inc
push
adc
inc
pop
inc
lahf
ds
fwait
cli
dec
test
out
mov
sub
lcall
popa
or
or
or
and
or
out
cmpsb
cwtl
jo
push
mov
pop
xor
mov
xchg
scas
fcmovb
nop
jmp
je
and
cmp
imul
mov
cpuid
movsl
adc
xor
das
clc
sbb
jmp
xor
mov
and
and
and
xchg
aas
lahf
stos
mov
and
xor
and
stos
mov
aas
in
inc
sbb
pop
dec
sbb
int3
mov
insb
mov
insb
dec
int3
lea
mov
add
inc
data16
pop
xchg
loopne
dec
pop
jle
outsb
fs
stos
stc
out
cmp
stos
pop
int3
rcrb
jl
scas
imul
mov
mov
xchg
jo
jecxz
xchg
stos
mov
stos
insb
cmpsl
mov
cltd
movsl
fbstp
xlat
sbb
add
xchg
ret
aaa
mov
cmc
loope
xchg
cmp
es
imul
mov
xchg
fs
or
in
jno
pop
enter
xor
cmc
push
pop
sahf
sub
pop
fwait
popf
popf
dec
sbb
arpl
test
mov
push
lods
and
imul
cmp
insl
fcmovnb
push
fnstenv
jle
lock
int3
arpl
inc
and
in
pop
pushf
jns
ss
orb
test
inc
enter
test
mov
xchg
scas
xor
outsl
mov
fwait
jle
xchg
lods
and
sbb
in
add
sarb
mov
push
fs
sub
or
dec
repz
and
imul
leave
fs
iret
xor
lea
xor
adc
nop
fs
jb
push
jge
lret
arpl
inc
adc
cmp
xor
test
shlb
adc
aam
lods
xor
cld
dec
stos
push
mov
inc
jl
test
test
scas
stos
jnp
ss
scas
jae
sub
mov
mov
aam
sub
aaa
pusha
push
test
mov
xor
jg
adc
xor
jne
outsl
dec
js
sbb
pop
outsb
push
mov
stc
and
mov
out
and
arpl
int3
out
ljmp
lahf
fwait
vpcomb
add
in
cltd
pushf
into
pop
jno
xor
icebp
lret
and
jno
repnz
lock
adc
daa
imul
lock
lock
mov
pushf
rol
xchg
adc
dec
movsb
int3
mov
xchg
pop
aas
xor
scas
out
pop
push
mov
insl
mov
fwait
mov
loop
ficoms
aad
data16
repz
scas
mov
xchg
dec
into
pop
outsl
cmpl
lock
push
xchg
insl
push
mov
ffreep
adc
fwait
movsb
mov
jl
fldenv
shr
push
and
aad
dec
lea
leave
jno
punpckhbw
xor
mov
mov
insl
pop
sub
pop
incl
cs
call
push
cs
idiv
repz
stos
fs
or
mov
in
push
sbb
movsb
outsb
in
pop
arpl
push
popf
in
and
inc
sbb
add
sbb
pop
leave
shrl
add
stos
push
fnstcw
sub
enter
out
add
mov
pop
adc
int3
and
mov
or
mov
rclb
xchg
cmp
lret
jecxz
or
add
in
movsb
xorb
enter
in
push
fldl
lea
popf
mov
jecxz
cmpsb
call
add
push
outsl
push
mov
mov
xchg
ss
fistps
push
xchg
xchg
adcb
or
in
inc
mov
jne
shrl
popa
mov
aas
outsb
xchg
mov
mov
cmp
pop
push
dec
test
cli
push
sbb
pop
add
mov
sub
cld
adc
out
or
dec
cmpsb
popf
xchg
mov
mov
lcall
inc
mov
imul
ja
sahf
popl
mov
push
and
mov
cld
add
mov
mov
es
cli
and
jmp
nop
mov
add
jns
jo
inc
jo
cmpsl
test
lret
and
adc
iret
mov
xor
adc
arpl
ret
adc
loope
sti
mov
pop
sub
in
adc
rclb
xor
xchg
cwtl
push
orl
test
movsb
mov
aas
inc
mov
ret
mov
lods
mov
mov
call
and
loope
pusha
lahf
or
lods
gs
dec
dec
fidivs
fs
pop
cltd
xchg
fidivrs
sbb
jo
mov
sbb
lods
in
sub
sub
das
gs
into
mov
lods
stos
xor
fsubrl
xor
mov
hlt
lret
hlt
dec
mov
and
js
xchg
stos
repz
movsb
repnz
xor
les
adc
mov
outsl
mov
dec
movsb
or
mov
jmp
xchg
into
push
push
testb
xor
lods
sbbl
lret
cmp
lods
adc
mov
mov
cld
sub
mov
xchg
xor
or
mov
or
or
js
pusha
insb
add
xchg
cs
or
adc
jge
fimull
loop
or
sbb
adc
rclb
push
sbb
lds
lea
pop
stos
inc
jecxz
dec
cmp
loope
movsb
pop
je
push
in
stos
push
and
push
xchg
and
out
mov
sbb
outsb
lcall
aad
movsl
xchg
test
std
lock
out
dec
fisubrs
adc
rclb
mov
cs
stos
mov
movsb
jns
cwtl
test
jno
sbb
or
andb
push
mov
fidivrs
cwtl
into
xchg
scas
xchg
sub
dec
inc
sbb
cwtl
sbb
xchg
test
mov
aam
je
pop
sbb
roll
dec
mov
inc
jnp
mov
xor
gs
cmpsl
loop
ror
push
mov
inc
and
mov
cwtl
inc
jmp
jecxz
ret
loop
les
inc
rcrl
lods
push
in
xor
mov
pop
jb
pushf
or
fs
dec
popf
popf
je
sbb
pop
sub
mov
lods
jnp
outsl
jb
mov
fldt
jmp
pop
int3
xchg
cli
rolb
mov
sub
mov
sahf
xchg
ljmp
jl
addb
cmp
ljmp
pop
add
sbb
mov
imull
dec
pushf
dec
test
pop
outsl
cmp
int3
and
ja
or
mov
mov
jae
cmp
sbb
movsb
pusha
pop
sbb
bnd
jno
push
xchg
push
mov
stos
adc
mov
jno
push
mov
or
movsl
imul
sbb
xorb
adc
aas
cltd
ror
cwtl
mov
cmp
inc
push
mov
in
loop
bound
mov
je
mov
imul
and
roll
add
mov
mov
adcb
xchg
mov
mov
rcll
addr16
xor
jmp
ret
lea
out
in
ret
int3
in
adc
cld
cmp
push
mov
add
xchg
fistl
scas
adc
mov
push
jae
pushf
stc
dec
xchg
mov
push
mov
rorb
insb
push
int3
or
jb
test
outsb
sbb
loop
lea
lock
push
mov
leave
adcb
clc
xchg
mov
fmuls
dec
jl
lods
int3
sbb
inc
rcrl
out
sub
or
and
push
cmp
cmp
je
rolb
stos
mov
vphadduwq
add
fcoms
ret
xchg
fld
pop
ret
repnz
movsl
dec
mov
lret
push
shl
pop
xlat
and
pop
push
jg
hlt
out
pop
loopne
or
jge
pop
mov
stos
pop
bound
jecxz
call
adc
jb
aaa
movsl
mov
test
pushf
fnstcw
mov
stos
test
sbb
pushf
lahf
aam
dec
shll
cld
pop
pop
scas
aaa
add
push
push
or
mov
or
aam
or
sub
mulb
loope
pop
je
push
pop
cmc
fidivs
add
popa
add
mov
mov
lods
pop
inc
xchg
pop
xchg
xor
or
push
nop
add
and
hlt
mov
fdivp
pop
or
jo
xor
repz
leave
inc
jns
add
mov
lods
dec
into
lret
cmp
sub
fcoml
push
pushf
push
mov
stos
jmp
or
sub
nop
cmc
jl
int3
sub
ret
bound
pop
test
test
jne
stos
pushl
fs
or
mov
arpl
inc
pop
add
jnp
xchg
js
not
add
cmp
mov
call
movsb
mov
jb
mov
in
jae
hlt
lds
sub
lea
popa
mov
mov
mov
jnp
xchg
mov
xor
and
cli
and
lea
sbb
cmpsl
mov
and
fisttps
stc
xor
xchg
cwtl
and
shl
pushf
jnp
xor
xor
jp
loop
sti
or
movsl
mov
fsubs
add
int3
mov
adc
add
hlt
push
add
hlt
popa
hlt
repnz
push
jb
cwtl
xchg
out
fisubrs
adc
jae
jae
mov
xchg
fwait
and
loop
imul
mov
pop
outsl
ljmp
nop
or
lret
out
mov
xor
pop
arpl
mov
mov
push
jle
in
ss
pushf
rclb
pop
int3
sti
dec
clc
jle
sti
jo
inc
test
mulb
add
xor
sarl
dec
dec
movsb
mov
test
or
andl
aaa
scas
cmp
push
les
fidivs
jno
lret
push
rcrb
jp
in
xchg
adcl
in
je
push
push
hlt
mov
mov
cld
pop
arpl
add
jo
mov
xor
int3
adc
cwtl
je
lret
dec
ret
sbb
fcmovnbe
stos
ficomps
cmpsl
sub
insl
divb
repz
or
fsubr
ror
adcb
or
xchg
mov
sbb
sub
lret
andb
xor
mov
insb
test
push
and
dec
je
rcr
sar
cwtl
xor
cltd
mov
nop
movsb
loopne
scas
arpl
inc
cmc
rcrb
inc
outsb
inc
mov
insb
mov
mov
jno
lret
or
sub
lret
and
pop
loopne
shll
mov
addr16
addr16
mov
jno
ss
leave
ss
push
lods
jns
aas
fdivl
lock
push
jp
xor
mov
enter
faddl
shrb
sub
leave
scas
cwtl
clc
inc
cmpb
hlt
sti
mov
lock
scas
dec
sub
xor
and
xor
scas
sub
stos
inc
mov
lahf
enter
cmp
cltd
les
call
mov
xor
in
add
loopne
in
pop
in
scas
outsl
dec
test
repnz
mov
xchg
fsubs
ja
dec
adc
pop
and
mov
out
inc
pop
or
loopne
lock
sub
je
insb
mov
mov
sbb
rorb
pop
scas
push
daa
popf
lods
xchg
jmp
inc
call
mov
nopl
inc
pop
cmpsl
xchg
clc
cmpsl
cmpsl
pushf
out
outsb
inc
mov
ja
xchg
cs
xchg
and
les
jl
xchg
pop
lods
adc
pop
ss
fs
out
adc
or
jae
popa
jp
jmp
loop
xchg
ljmp
mov
cmp
lret
daa
dec
ljmp
es
sbbl
push
repnz
nop
or
cmpsl
call
lods
add
shrl
jmp
push
mov
jnp
cmp
pop
rorb
addr16
pop
loop
adc
mov
cli
add
test
in
inc
stos
inc
into
inc
mov
mov
mov
lahf
insb
es
pop
mov
mov
je
stc
dec
icebp
jno
shr
xchg
das
sar
mov
or
and
mov
pop
push
cwtl
xchg
data16
lret
add
mov
sbb
push
out
or
mov
pushf
int3
cwtl
pop
xorb
rcrl
test
jb
pop
jmp
xchg
fists
jns
cmp
push
out
inc
imul
pop
dec
pop
xlat
scas
xchg
pop
mov
jno
roll
movsb
xchg
out
jns
push
ss
daa
leave
rorl
pop
sbb
xchg
movsb
test
dec
push
xchg
push
pop
lock
lods
or
or
xchg
xor
pop
jecxz
fs
mov
icebp
sbb
ja
fbld
mov
movsl
imul
dec
out
jno
jae
cld
xor
test
dec
mov
nop
xchg
add
cmp
push
xchg
int3
fstpt
insb
lods
pop
loope
sub
dec
xor
cmpsl
dec
cmp
in
xchg
loop
rcrb
out
inc
inc
movsb
mov
je
mov
mov
jge
aas
lods
div
sub
leave
add
inc
cltd
rclb
loopne
xchg
sbb
inc
movsb
arpl
cmp
mov
pushf
leave
stos
lea
scas
mov
sub
cmp
rcrl
fistps
stos
mov
xchg
bound
add
lods
push
int3
cmp
hlt
mov
outsl
inc
rclb
jns
push
lret
stos
xchg
xchg
loop
adc
dec
adc
and
imul
mov
popa
mov
stc
out
mov
stos
out
mulb
xchg
scas
sti
bound
in
pop
stos
sub
pusha
xchg
in
fdivl
jo
lods
xor
bound
andb
imul
sub
jp
mov
mov
xchg
mov
add
mov
pop
inc
je
test
outsl
push
insl
inc
hlt
divl
xchg
fidivs
fmull
sub
xchg
push
repnz
pop
fprem1
jmp
flds
jp
stos
movsl
jecxz
xor
xor
xchg
push
mov
cmpsl
or
mov
mov
sub
push
mov
les
cwtl
xor
xchg
pushf
int3
push
sbb
pop
xchg
das
mov
fdivrs
icebp
leave
mov
addr16
enter
xlat
outsl
xchg
cmpsl
xor
pop
mov
mov
jb
sub
inc
cmpsw
mov
movsb
xlat
xchg
push
insl
pop
jmp
fincstp
aam
cmpsl
sbb
rcr
xchg
xchg
dec
pop
dec
loopne
adc
pop
scas
sub
sub
fcoml
push
mov
add
sbb
xchg
jno
sub
jo
bound
dec
test
mov
add
mov
mov
push
insb
or
out
dec
inc
dec
add
pop
lds
out
int3
test
sub
lods
int3
popf
fists
scas
mov
and
cmp
std
ljmp
test
int3
imul
lgs
cmp
cmp
mov
lods
sub
xor
fcomps
push
xor
adc
mov
test
andb
ffreep
dec
sub
scas
out
icebp
push
nop
je
outsb
jno
in
xor
outsl
inc
test
movsb
push
mov
xlat
and
movsb
int3
dec
lea
inc
in
jo
push
push
andl
xchg
inc
shrb
mov
test
testl
rcrb
xchg
and
pop
aam
pop
or
and
movsb
jecxz
pop
fs
gs
mov
cmp
sti
ret
repz
jne
inc
dec
sahf
and
inc
lcall
sub
dec
mov
scas
movsb
leave
pushf
mov
in
lcall
inc
rcr
adc
sahf
gs
subb
jo
inc
mov
movsl
xor
repnz
lods
xlat
cmp
jbe
hlt
pop
inc
dec
jae
cwtl
sub
dec
pushf
enter
aas
inc
jbe
mov
push
inc
mov
subb
test
mov
cmp
sub
sub
js
adc
mov
xor
xlat
cmpsb
jns,pn
xor
js
or
addr16
or
sbb
inc
jle
mov
or
inc
jmp
mov
mov
jmp
pop
cmpl
push
int3
popl
fmuls
jge
and
mov
fiadds
xchg
mov
pop
rcr
pushf
inc
movsb
fldcw
mov
inc
xchg
jmp
stos
test
xchg
lea
int
ja
je
mov
gs
aad
jl
shll
mov
test
stos
xchg
xchg
mov
jno
jne
xchg
mov
mov
add
lret
lods
xor
mov
out
je
push
lods
sbb
pop
and
aad
imul
movsb
xchg
sub
jo
jl
mov
xchg
leave
stos
imul
dec
jecxz
add
into
jl
data16
mov
call
xor
nop
popl
cltd
hlt
fucomip
aas
cmpsb
and
cli
ficomps
fadds
into
fisubl
jno
mov
add
sahf
dec
fistpl
xchg
dec
and
sub
outsl
xchg
fwait
push
incl
repnz
dec
dec
fwait
sub
in
pop
lods
fdivrp
pop
and
xchg
jg
inc
push
mov
icebp
movsl
das
cli
stc
xlat
mov
ret
mov
lret
sbb
mov
into
aad
xchg
xorb
stos
js,pt
sub
rol
rorb
cmp
sub
es
lret
cmp
cld
aad
mov
roll
popf
enter
adc
jl
cmp
xchg
jo
xlat
pushf
int3
sub
sub
frstor
jno
push
aas
inc
pop
dec
pop
das
xchg
inc
lcall
jecxz
out
xlat
pushf
sbbl
jb
dec
cmc
sub
ret
stc
sahf
add
add
mov
ja
mov
out
push
mov
mov
popa
aaa
test
test
movsl
aaa
bound
and
push
mov
mov
mov
push
icebp
mov
leave
lds
fsubr
arpl
shrl
aas
fwait
js
adc
add
cmp
xchg
xchg
push
push
mov
je
icebp
test
adc
lods
int3
mov
inc
mov
aam
icebp
xor
data16
movsb
mov
and
outsl
rorl
pop
xor
pop
fs
popa
mov
lea
xchg
jae
pop
enter
jns
aaa
cmpsl
test
mov
scas
sub
leave
ret
pop
sbb
pop
je
pop
into
cmp
hlt
push
cmc
lods
mov
scas
ss
mov
movsb
dec
dec
jnp
dec
push
test
xor
or
xor
push
and
jnp
dec
jno
loop
loope
inc
cmp
jo
cmpsb
mov
jg
repnz
fcmovbe
das
dec
push
aaa
jecxz
and
das
shrb
sub
mov
repnz
jne
scas
daa
add
push
lods
jge
jns
dec
andl
xlat
jne
or
cmp
fcomps
mov
aaa
lods
sub
testb
mov
js
xor
jns
xchg
addb
sub
fdivl
aad
scas
inc
pop
adc
jmp
pushf
xor
sbb
cmc
loop
addr16
testb
inc
inc
push
repz
test
ss
ds
mov
mov
aaa
fcmovne
repz
pop
scas
test
or
mov
lret
mov
sub
lahf
mov
jno
inc
push
push
lret
mov
je
sbb
lods
adc
mov
lret
mov
push
and
addr16
lock
xor
cmp
popf
pop
aad
mov
dec
fmul
push
push
add
scas
push
xor
out
push
mov
mov
scas
push
or
sub
xchg
test
mov
dec
pop
xchg
push
mov
inc
pop
sub
mov
fwait
js
jle
mov
xchg
mov
xor
hlt
mov
mov
add
int3
push
test
leave
call
cmp
cwtl
mov
xchg
xchg
std
sar
inc
in
mov
push
jo
mov
push
and
jne
or
js
lahf
mov
popf
add
dec
fildll
mov
int3
add
sub
test
adc
imul
scas
xchg
ror
js
xchg
repz
lea
adc
ss
movsb
mov
nop
lock
stos
inc
popf
cmc
push
sub
cpuid
pop
inc
imul
imul
sub
xchg
out
xchg
jecxz
xchg
push
je
jmp
dec
movsb
test
pop
mov
or
xchg
and
aam
mov
xchg
movsb
jb
scas
xor
adc
or
inc
mov
mov
lds
cmp
pushf
xchg
jo
sub
ret
cld
cmpsl
xchg
inc
in
lea
add
dec
movsb
dec
test
std
pop
stos
das
mov
test
hlt
xchg
inc
popf
push
xor
ret
jo
rorb
shlb
adc
in
dec
aaa
sbb
cwtl
inc
cmp
mov
sub
aas
lcall
scas
jmp
mov
sub
shrl
fwait
xor
inc
insb
dec
pop
mov
xchg
xor
je
mov
jns
cmp
inc
xor
loop
pop
inc
inc
or
sbb
test
xor
in
xor
js
std
aam
inc
mov
cmpsb
aad
mov
sub
adc
leave
into
jns
test
sub
push
xor
aas
dec
movsb
dec
xchg
lods
dec
add
xchg
and
icebp
cs
mov
das
or
xchg
dec
sub
stos
cmpsl
lea
lret
arpl
inc
cmpsl
mov
not
xchg
adc
nop
cmp
mov
lcall
pop
sub
or
cmp
push
movsl
insb
scas
lock
push
inc
popf
mov
ss
and
mov
pusha
ss
mov
pop
mov
clc
aaa
and
insb
inc
mov
fists
sbb
lods
sbb
or
stos
arpl
pop
jmp
add
mov
ret
mov
out
mov
repnz
mov
mov
sub
mov
leave
ljmp
inc
test
aam
test
test
pop
jmp
icebp
mov
inc
jb,pn
mov
ds
js
inc
mov
push
int3
fstl
adc
andl
je
and
shrl
pop
pusha
sub
lods
mov
push
jo
aas
and
arpl
popa
pop
cwtl
rorb
sub
scas
mov
cmp
loope
add
jp
push
pusha
idivb
xchg
push
imul
inc
test
lock
pop
mulb
adc
xchg
and
inc
xchg
pop
and
enter
leave
lods
incb
xor
out
mov
or
ljmp
inc
int
mov
out
je
mov
test
xor
add
push
scas
xchg
movsb
mov
or
fidivs
sarl
xchg
pop
cmp
fadd
dec
xchg
rclb
andl
shrl
mov
xor
addl
cmp
inc
push
test
mov
xor
mov
das
push
push
jne
mov
sub
adc
mov
pop
movsb
cmpsl
push
stos
mov
aas
lahf
js
fdivrl
lea
movsl
jle
mov
mov
lahf
mov
jo,pn
stos
jo,pn
test
jo
lea
jo
fwait
xor
hlt
stos
cmp
add
sahf
mov
stos
mov
les
int3
mov
sbb
arpl
sar
xchg
fwait
scas
lods
jecxz
cmp
and
popa
cmp
jns
pop
xchg
in
pop
daa
dec
jg
inc
cmpsl
push
sti
je
cmp
cmpsb
rorl
je
inc
mov
je
or
jno
push
aas
mov
xor
jge
mov
mov
das
fldcw
jns
adc
mov
jmp
mov
cmc
and
xchg
jns
movups
fwait
mov
mov
dec
pop
pop
or
dec
movsb
imul
mov
inc
stos
xchg
cmpsl
mov
adc
xchg
mov
lea
mov
add
or
sbbl
adc
in
push
daa
mov
sub
or
enter
sti
jae
aas
xchg
or
dec
imul
mov
mov
ds
push
in
dec
mov
mov
inc
push
popa
and
lcall
jmp
mov
test
js
add
jnp
adc
shll
popf
call
mov
cmp
adc
cmc
pop
sub
je
arpl
cld
xchg
push
xchg
xor
aas
lcall
test
mov
ret
and
test
and
testb
inc
sub
xchg
inc
test
mov
dec
cmpl
loopne
mov
imul
and
iret
cmpsl
mov
ljmp
cmp
jae
push
pushf
cld
push
pop
fwait
sub
xchg
sbb
test
mov
pop
mov
cmc
negl
or
add
stos
xor
mov
outsl
movsl
or
push
out
mov
aas
mov
lahf
movsb
mov
sbb
pop
sahf
repnz
aas
ds
jo
je
out
sbb
jb
loopne
fiaddl
into
sub
inc
and
mov
arpl
xchg
aaa
lods
push
scas
addr16
test
fwait
inc
rcll
scas
test
xchg
jl
or
lret
stc
jno
xor
data16
mov
mov
pop
mov
pop
icebp
arpl
test
add
mov
imul
xchg
mov
lock
cltd
and
mov
sub
stos
movsb
movsb
mov
rcl
out
movsl
es
xchg
addr16
ljmp
and
sbb
test
sbb
movsl
jp
pop
fmull
mov
pop
xorb
and
xor
std
and
repz
mov
mov
pushf
sbb
shrb
jbe
enter
loopne
mov
sbb
cmc
inc
popa
xor
sbb
gs
lods
les
sub
sub
shll
bound
mov
jle
adc
xchg
cld
movsb
push
outsb
mov
mov
sbb
pop
adc
bound
push
popa
mov
dec
mov
shll
outsl
movsl
xor
jmp
mov
pop
arpl
push
test
loope
arpl
cmc
clc
fs
into
inc
leave
in
xor
cmp
js
fs
movsb
mov
mov
jecxz
fcmovnb
outsb
scas
add
cmpsl
insb
cmp
or
paddsb
in
movsb
rol
cmp
popa
ret
or
dec
sbb
fistpl
pop
movsl
sub
xlat
jbe
add
call
mov
mov
daa
cbtw
xchg
sub
scas
mov
xchg
lds
xchg
mov
inc
andl
aas
mov
lock
test
jnp
cwtl
cmp
aas
mov
xchg
cwtl
aas
sub
scas
xchg
int3
int
jl
int
xor
and
mov
loop
sub
test
aaa
ljmp
mov
test
mov
and
filds
pusha
lcall
int3
fisubs
xchg
test
and
mov
dec
mov
inc
or
lea
js
pop
pop
in
test
pop
jnp
pusha
mov
jns
sub
xlat
fldt
dec
mov
ljmp
sbb
xchg
fisttpl
xor
call
sub
out
cmc
into
out
mull
sahf
lods
ret
fs
and
insb
cmpsb
mov
mov
test
ss
mov
pcmpeqb
mov
mov
fldl
sahf
xor
fdivl
daa
adc
jle
xchg
ret
imul
cmp
jmp
sbb
ret
std
aam
cmpsb
out
dec
cltd
sub
push
add
call
ret
pop
les
pushf
leave
push
dec
xchg
inc
jae
dec
push
loope
loop
fldl
lcall
xchg
cmc
movsb
mov
repz
je
adc
in
mov
inc
inc
lods
xchg
jmp
loope
adc
and
inc
pushf
adc
scas
das
xchg
movsb
pusha
movsb
bound
and
nop
pop
dec
jb
adc
lahf
repnz
inc
std
test
cltd
sbb
int3
imul
sub
fildl
push
xchg
lock
push
int3
fucomi
mov
cld
adc
out
inc
sub
stc
sbb
icebp
mov
enter
stos
shlb
mov
mov
add
mov
mov
lret
int3
test
push
and
add
push
push
data16
insb
je
mov
push
imulb
int3
sahf
inc
mov
dec
mov
pusha
cmp
push
push
in
imul
fimuls
out
fnsave
mov
pop
aas
mov
lea
repz
test
aas
insb
sbb
aad
pop
mov
push
ss
mov
repnz
jo
xchg
dec
imul
mov
mov
inc
inc
pushfw
lret
cmp
popa
mov
imul
sarb
pop
xor
xor
pop
inc
sub
out
insb
dec
xor
sub
imul
aas
push
mov
in
and
adc
sub
repz
jae
jno
jno
in
shr
mov
loop
push
xor
out
rcl
sub
jg
mov
mov
out
xchg
xorb
jl
xchg
push
aaa
test
lcall
imul
sub
subb
or
sbb
adc
xchg
subb
mov
bound
out
enter
xor
shlb
bound
in
push
addr16
xchg
daa
adc
outsb
push
and
sbbb
sbb
pop
pop
pop
and
add
lock
cs
or
sub
cs
xchg
xor
cmpsb
dec
shrl
int3
fs
mov
dec
pop
xor
cmp
cmp
into
mov
popf
je
pop
int
dec
shrb
mov
aad
sub
int3
jl
loopne
loop
stos
insl
sbb
sub
insb
jmp
inc
pushf
adc
jge
mov
pop
stos
xchg
jbe
xor
mov
test
stos
push
pusha
cs
add
xor
int3
xchg
enter
xor
ret
fidivl
bound
shr
xor
dec
shll
test
lret
repz
in
mov
push
mov
cmp
cmpl
int3
inc
sub
xor
je
sub
mov
clc
inc
jb
arpl
nop
and
push
scas
jb
leave
stos
imul
fwait
mov
std
gs
xchg
inc
repnz
xchg
sahf
and
adc
pop
or
mov
movsl
es
rcrb
inc
cwtl
jg
pop
inc
and
int
sub
enter
pushf
bound
aaa
ror
pop
bsr
ljmp
push
jb
outsl
enter
xor
or
push
sbbb
imul
sub
lret
add
push
into
push
mov
push
jne
nop
xchg
imul
imul
or
xchg
jbe
insb
dec
cmpsl
push
dec
sub
loop
out
je
lods
stos
xchg
mov
andl
sahf
sbb
push
das
loop
gs
faddl
or
fstpt
incl
mov
pop
daa
in
stos
pop
push
fnstenv
sbb
cmp
pop
lcall
adc
jns
jge
jb
je
sbb
xchg
cmp
pop
sbb
mov
cltd
lahf
leave
dec
jnp
sub
dec
popa
dec
add
pop
mov
fidivl
cltd
mov
cmp
mov
fldl
sub
imul
and
int3
push
lret
mov
push
pop
leave
test
inc
adc
and
leave
cwtl
inc
push
jns
lahf
mov
jae
stos
mov
add
add
add
les
inc
pushf
mov
push
lea
fnstenv
aam
jle
imul
xchg
test
push
mov
shrl
jp
push
cmpsb
xorl
pop
insb
ds
sub
and
fistpl
mov
pop
div
adc
jge
mov
mov
scas
push
pop
pop
or
sbb
cmpsb
sub
icebp
daa
and
ss
sti
ljmp
xor
adc
xchg
or
push
fdiv
jmp
sahf
out
test
int3
add
dec
insl
test
lea
mov
add
and
and
fisubl
lea
pop
dec
lahf
popf
pop
dec
pop
scas
sbb
cmp
stos
lret
cmp
stos
cwtl
outsl
call
repz
call
fldt
push
imul
cwtl
cmp
mov
in
inc
daa
rcll
out
mov
je
hlt
das
je
mov
stos
test
ds
jbe
test
dec
insb
and
inc
popf
movsb
das
mov
inc
lods
pop
sbb
xor
fsubrl
pop
ljmp
pop
sbb
repnz
arpl
je
sub
or
repz
ljmp
jae
outsl
sbb
push
pusha
sar
cmpsl
pop
xchg
pop
insb
popf
int3
dec
jno
lret
repnz
xchg
mov
jns
pusha
fcoms
push
add
in
out
sahf
pop
cmpsb
mov
fs
shlb
jl
orl
mov
lods
jle
stos
sub
pop
sub
sbb
cmp
cmpsb
push
das
popf
sub
scas
subb
scas
or
out
adc
sub
jno
gs
dec
mov
imul
mov
ds
ljmp
push
sub
fisubs
mov
lock
cli
sbbb
adc
jo
cwtl
and
cmp
mov
cwtl
mov
sub
int3
sarb
push
scas
jecxz
bound
sub
popa
xor
pop
fs
sub
cmp
adc
xor
or
inc
sbbb
mov
data16
insb
inc
adc
adc
and
mov
mov
rclb
cmp
sub
loopne
dec
cld
sbb
mov
pop
mov
inc
fbld
jns
and
lock
arpl
cmp
jb
mov
jnp
int3
xlat
arpl
std
dec
sub
lds
push
push
mov
xchg
lahf
and
pop
shrl
cmp
push
sti
stos
and
aam
cmp
xchg
mov
popa
and
xor
loope
dec
das
sbb
xchg
fwait
stc
pop
lcall
ja
pushf
jo
add
addl
out
mov
lcall
std
sbb
lods
cmp
pop
jecxz
out
mov
inc
loop
mov
outsl
adc
mov
mov
cld
xor
push
jle
inc
adc
mov
pop
adc
shll
lret
movsb
inc
lods
xchg
xor
shrb
adc
xchg
stos
fwait
lea
lods
bound
mov
push
test
dec
xchg
cmp
push
movsb
pop
inc
lods
ret
and
xor
mov
enter
daa
xor
nop
in
adc
cwtl
stc
inc
jae
test
cwtl
sub
or
mov
popf
mov
jp
stos
test
mov
stos
mov
mov
in
fldl
test
test
push
std
cmpb
cld
test
icebp
cs
xlat
movsl
ss
inc
int3
mov
mov
cld
bound
jg
stos
sub
ss
sub
loope
add
data16
push
outsb
icebp
sub
xchg
sub
shl
gs
sub
sub
int3
sahf
popf
jns
les
addr16
test
lea
push
aad
xchg
cmp
ljmp
jnp
mov
ret
or
push
imul
loop
in
out
sbb
mov
push
jno
lock
xor
out
ds
shll
xchg
int3
jbe
repnz
fdivp
out
out
xchg
popf
mov
cmp
and
in
andb
add
inc
fwait
inc
push
int3
xchg
ss
mov
xchg
cs
push
jecxz
push
push
jbe
hlt
fbld
pop
insb
mov
dec
mull
pop
xor
testb
movsb
mov
repnz
movsb
mov
add
test
pusha
and
pop
xor
jno
aaa
mov
rcll
repz
mov
std
push
add
jae
scas
data16
adc
inc
push
movsb
sub
fbld
dec
in
int3
pop
inc
das
repnz
daa
je
adc
les
stos
add
fisttps
or
je
add
dec
ret
xchg
add
pop
pop
cmp
ret
sub
mov
fistpll
shll
add
mov
lret
inc
fcmovnbe
push
lret
in
mov
les
jmp
lahf
lret
pop
push
ljmp
lds
cmp
imul
fimuls
pop
insb
fstpl
xor
bound
mov
xor
loopne
mov
jb
cmp
push
pushf
inc
arpl
leave
out
pop
lret
push
rcll
mov
pop
das
cmp
mov
movsb
lret
loopne
add
ds
pop
sub
aad
sub
insb
push
scas
loope
insb
test
arpl
sahf
pop
fadds
sarl
xchg
sbb
inc
inc
xchg
int3
lahf
fidivrs
push
test
xlat
fadds
push
fwait
push
fildl
out
pop
pop
loopne
je
and
pushf
in
ss
mov
cltd
inc
dec
pop
push
mov
bound
lahf
aas
xchg
dec
cmp
call
sbb
cwtl
mov
push
cld
sbb
dec
push
and
mov
jmp
xchg
pop
pop
push
mov
add
mov
cmp
repz
pop
sub
dec
add
les
in
cltd
bound
sahf
pusha
addl
lahf
inc
fs
cmc
inc
sub
stos
imulb
mov
xchg
and
pushf
imul
jl
mov
inc
stos
addr16
popa
repnz
sbbb
lcall
cmp
sbb
js
ja
out
jg
mov
je
in
mov
xor
mov
ja
js
xor
and
push
aas
inc
int
xor
pusha
imul
sub
adc
lods
std
or
clc
lea
sahf
push
sti
je
lods
psubsw
and
mov
pop
and
or
test
jmp
xchg
and
xchg
data16
dec
data16
xor
adc
pop
and
data16
mov
bound
fs
imul
cld
mov
jnp
iret
movsb
push
lock
sbbb
hlt
ret
add
arpl
xor
fistpll
xor
ret
fiadds
mov
sub
arpl
cmc
imul
push
push
sbb
sub
push
in
lods
loopne
adc
mulb
pushf
xchg
mov
mov
out
mov
fsubl
pop
scas
test
scas
fdivl
mov
pop
cmp
mov
or
ror
or
cmp
push
add
mov
mov
sbb
int3
test
push
out
sbb
adc
iret
xor
cld
je
cmp
mov
add
popa
pop
adcl
jl
sub
aas
shrb
test
fiadds
es
xchg
add
outsb
dec
and
imul
mov
int3
addr16
lahf
jle
mov
sbb
jnp
movsl
das
mov
mov
pushf
xchg
sbb
cmpsb
sbb
pop
and
imul
mov
pop
xchg
xchg
jbe
rclb
mov
mov
ss
push
inc
mov
inc
pop
jns
or
mov
dec
aaa
movsb
rcll
and
xor
pop
jp
ss
fildll
mov
dec
enter
popa
xchg
adc
sahf
es
into
test
js
pop
test
aaa
xlat
inc
test
xchg
mov
cmp
jno
fdivrl
call
add
lea
lds
jo
cmc
cmp
and
jne
pusha
test
fldcw
lea
mov
sub
xchg
aaa
iret
aad
xlat
test
mov
push
lea
push
push
int
dec
lcall
cli
inc
bound
sub
xchg
xor
mov
push
dec
js
push
dec
in
dec
or
jg
xchg
xor
inc
ljmp
inc
clc
lret
frstor
test
stos
aam
pusha
inc
das
mov
test
jne
sub
stos
int3
aad
movsb
and
mov
push
pop
mov
and
das
push
add
jbe
push
outsb
xchg
cmp
mov
push
idivb
push
jno
jg
xchg
int
push
enter
mov
push
call
imul
mov
adc
das
mov
test
jg
mov
outsl
ja,pn
fnstcw
and
fucomp
popa
xchg
lcall
loop
cmpsl
je
cmp
pop
jmp
dec
in
popl
dec
lods
lret
pop
mov
ret
inc
bound
movsb
pand
and
pop
mov
fbld
inc
push
xchg
sbb
sub
negl
scas
dec
inc
cmp
xchg
jno
loop
xor
out
mov
xchg
int3
iret
int
pushf
adc
fcmovu
fldl
nop
xor
adc
mov
data16
pmaxub
pop
and
fsubs
jnp
fcomps
sbb
lods
int3
mov
or
fwait
popl
cwtl
jne
jge
inc
and
scas
xor
lcall
and
jb
xchg
dec
cld
outsl
mov
mov
iret
mov
cli
iret
mov
popl
push
in
or
cwtl
enter
repnz
bound
xchg
bsr
std
xchg
fs
arpl
sbb
sbb
mov
test
add
mov
mov
sbb
and
jle
xchg
cmpsb
add
mov
pusha
adc
outsl
adc
or
pop
scas
shrl
insb
mov
xor
push
fs
pusha
outsl
mov
stc
cmpb
mov
mov
inc
sub
lods
or
xor
out
iret
aaa
xchg
inc
mov
andl
clc
mov
sbb
add
sub
pop
add
mov
repnz
inc
jnp
lods
aas
inc
mov
pop
pop
push
jmp
xchg
cmpsl
loop
sbb
daa
mov
notl
cltd
add
jl
fwait
cmp
pop
dec
mov
imul
push
add
fcoml
sub
out
adc
aas
notl
jns
push
shlb
mov
jp
mov
add
jne
xchg
mov
repz
and
xchg
cmpsb
pusha
inc
xor
stos
cwtl
mov
dec
mov
arpl
xor
mov
inc
jge
adc
mov
jg
mov
stos
sahf
fbstp
jg
inc
xor
push
out
add
mov
stc
outsb
push
mov
and
cmpsl
mov
jmp
xchg
adc
shll
and
push
pusha
xor
sub
cwtl
lea
mov
dec
sti
lods
ucomiss
lret
aas
jbe
jae
leave
insl
push
cli
pop
or
cmp
inc
lock
pop
jb
inc
test
dec
xlat
xchg
lock
cmp
ret
mov
inc
mov
pop
popa
out
stc
adc
int
imul
mov
xor
bound
lahf
int3
repz
mov
stos
adc
push
sahf
mov
sbb
mov
dec
inc
jno
je
pusha
mov
mov
test
dec
into
pushf
ficoml
scas
cmp
inc
lods
dec
call
lds
push
pop
add
movsb
imul
xchg
stos
sbb
cmp
push
inc
fldenv
jb
icebp
pop
iret
mov
sarl
aas
xchg
adc
xchg
pavgw
test
cwtl
pop
jno
aaa
add
pushw
xchg
cmpsb
xchg
cld
jb
test
lods
push
test
mulb
leave
sti
andl
mov
insb
adc
sub
push
movsb
cmp
or
mov
jno
in
sbb
lods
adc
dec
pop
test
in
test
and
dec
shrb
pushf
leave
lcall
test
sahf
push
and
imul
enter
xchg
jo
adcb
add
mov
sub
cwtl
cmpsb
xchg
loop
lahf
int3
shr
push
pop
ja
movsb
test
pop
test
push
and
cwtl
fs
mov
lods
dec
iret
aam
shrl
push
pop
imull
pop
leave
push
sub
jp
fwait
mov
push
repz
and
cmp
pop
mov
push
int3
lds
xorl
idivb
adc
dec
imul
les
popa
push
cmp
outsb
imul
lods
mov
pushf
cmp
js
xchg
inc
aad
pop
pop
adc
adc
in
push
cmp
andb
das
out
cmc
outsb
fnstcw
sbb
inc
mov
pushf
push
pop
movsl
adc
andb
cmp
js
mov
imul
ret
jnp
mov
jmp
fbld
add
movsb
popl
pop
lock
insb
sub
mov
out
popf
mov
popa
sbb
arpl
rorb
dec
pop
mov
xor
sbb
roll
sub
mov
std
cmp
xchg
or
faddl
repz
push
or
sti
std
ds
imul
mov
arpl
mov
xchg
push
lods
mov
ljmp
sub
repnz
outsl
stc
hlt
in
aas
in
clc
scas
cmpsb
pop
popa
lods
xlat
mov
outsb
and
mov
arpl
scas
out
stc
and
jp
popf
leave
inc
or
mov
loop
jns
aaa
and
test
movsl
inc
lods
stc
sahf
ret
js
mov
rcrl
mov
add
xchg
popf
gs
js
sub
mov
jp
fs
cwtl
xor
movsl
ss
ss
aam
mov
in
and
adc
sub
andl
inc
xchg
test
jge
fcomip
pop
push
popf
in
fs
hlt
data16
jp
pusha
pop
adc
lahf
pushf
aas
lahf
hlt
test
lods
jnp
mov
xor
loopne
rcrb
cmp
iret
cmpsl
jno
jae
bound
imul
cmp
sbb
jmp
stc
xor
pusha
test
jge
movsb
mov
mov
xor
xor
sub
in
icebp
jnp
pop
mov
xorl
es
push
adc
cs
je
lods
sysenter
shlb
mov
mov
pusha
push
scas
dec
call
gs
scas
sub
mov
push
aas
movsl
insb
and
jo
int3
nop
in
inc
mov
loop
nop
pushf
xor
jo
movsl
es
popa
pushf
add
outsb
idivl
jo
neg
out
inc
jo
pop
sub
sahf
mov
sub
inc
mov
arpl
sub
mov
cmp
sti
adc
int3
sub
and
dec
pop
jnp
pop
xchg
fs
jmp
dec
adc
aas
mov
hlt
addr16
push
and
xor
push
mov
ss
lret
mov
clc
sbb
pusha
jb
pop
cmp
negl
fwait
mov
repnz
in
pop
cmp
aaa
xchg
inc
les
mov
push
jns
les
fisttpl
pushf
lret
into
jecxz
mov
mov
std
mov
inc
push
rorb
adc
int3
lea
inc
leave
arpl
gs
sub
bound
sarl
pop
inc
sbb
xchg
fdiv
lcall
or
stos
inc
scas
imulb
sub
es
sbb
pusha
fs
pop
inc
mov
icebp
cs
sahf
dec
mov
out
rcrb
or
aad
add
sub
clc
pop
lahf
and
scas
mov
adc
mov
lret
test
xchg
je
mov
into
and
inc
mov
inc
je
jg
mov
adc
in
sub
arpl
stos
popa
pop
test
call
fldt
or
mov
daa
ret
stos
jo
loopne
sub
insb
movsl
int3
mov
sub
bnd
and
insb
fildl
push
or
pop
and
sbb
popa
mov
lock
das
inc
push
and
sub
arpl
pop
popa
sbb
push
jns
outsl
cs
jnp
inc
mov
mov
cmp
mov
xchg
lcall
sub
push
cmp
cld
mov
stos
div
cs
fstl
bnd
in
imul
sti
jl
xchg
lretw
test
fstpt
mov
push
scas
lods
bound
add
stos
jo
push
sub
dec
int3
dec
pusha
ljmp
mov
push
cmpsb
fisubl
fnstsw
lds
adc
in
cmp
pusha
popa
test
mov
jns
aas
mov
pop
arpl
inc
inc
push
pop
sub
sub
ret
dec
int3
out
sti
dec
stos
jae
or
inc
mov
rorl
mov
bound
jmp
xchg
mov
push
fwait
jne
xchg
adc
mov
pushw
xchg
dec
movsl
add
xchg
mov
lods
scas
leave
xchg
gs
mov
and
daa
mov
ds
jecxz
push
int3
lahf
movntps
or
stc
sub
aaa
sahf
dec
cli
xchg
or
push
sbb
pushf
adc
mov
sub
mov
and
cld
xchg
stos
and
adc
push
int3
sub
dec
xchg
dec
sti
push
stos
aas
stos
adc
mov
push
adc
or
sbb
icebp
clc
cwtl
stos
out
xchg
mov
aam
xor
xchg
push
push
push
sbb
xchg
mov
dec
push
dec
push
and
aas
push
pop
out
mov
push
subb
ret
push
add
mov
cmpsb
loope
fstpl
andl
fdivl
dec
je
xlat
mov
pusha
jle
sub
test
dec
test
hlt
stos
aam
lods
dec
cmpsb
pop
jae
add
mov
shlb
push
dec
lahf
add
out
pop
xchg
ror
xchg
xchg
mov
pop
fcomps
xor
mov
outsl
test
or
cld
in
mov
pop
mov
sub
sub
fistpl
add
pop
imul
mov
lret
pusha
jne
cmp
stos
int3
or
cmc
fwait
inc
jg
in
jns
aas
imul
and
leave
cwtl
xor
aaa
pushf
mov
stos
jp
stc
push
cmp
dec
push
popaw
ror
fcompl
mov
mov
lcall
in
pop
cld
addr16
inc
push
leave
minps
add
jae
lret
push
xchg
movsb
jnp
dec
pop
mov
mov
into
xor
and
push
mov
jp
arpl
pop
cli
loop
popa
mov
imul
push
mov
imul
ds
or
mul
add
mov
adc
xor
mov
mov
lock
jmp
mov
xor
add
xchg
fiaddl
int
cwtl
jecxz
addb
mov
add
shlb
dec
mov
sbb
adc
orb
into
cli
cld
xor
mov
jo
dec
test
jo
je
mov
mov
out
push
int3
lds
xor
ret
test
addr16
loop
mov
imulb
xchg
icebp
or
ret
mov
sarb
jmp
pushf
mull
stos
lods
std
pushf
adc
xchg
repz
sub
xlat
ljmp
hlt
dec
orb
testl
lret
test
popl
mov
cltd
and
sub
sub
popl
or
in
push
daa
leave
in
push
pushf
push
bound
int3
jp
xchg
mov
hlt
les
mov
cmpsl
mov
xchg
andl
jns
jle
test
stos
push
mov
cmpb
and
scas
int3
lods
push
fcomp
dec
pop
out
jl
pop
das
sub
push
stos
int3
rcrl
add
dec
or
shr
fistpl
push
leave
js
dec
pop
push
jne
sbb
jecxz
ret
mov
loop
xchg
mov
pop
test
lea
add
sbb
lret
cmpsl
mov
mov
imul
xchg
jl
xchg
out
inc
jo
rcll
in
pop
cwtl
inc
out
sub
sahf
push
stos
adc
xchg
xchg
mov
and
push
jmp
cli
dec
fs
lods
push
xchg
sub
jns
inc
inc
std
jnp
stc
or
xchg
ret
mov
mov
xchg
and
fists
test
push
sub
mov
adc
or
or
push
lods
cwtl
sahf
mov
in
mov
lret
sbb
mov
cmpsl
rcll
hlt
pop
dec
xchg
push
daa
pop
adc
push
mov
loope
aas
dec
sbb
mov
mov
ficompl
in
scas
fs
rolb
fsubrl
mov
in
lods
cmp
fs
mov
jns
test
dec
mov
xor
imull
lcall
pop
outsb
pop
sub
movsb
das
outsl
push
les
mov
sbb
mov
pop
test
pop
cmp
in
pop
roll
popf
shll
xchg
mov
stos
jns
fisttpll
ljmp
jb
push
xor
icebp
sub
or
data16
jecxz
push
mov
cmp
xor
mov
loopne
lcall
cmp
mov
mov
jns
and
jmp
movsb
sub
mov
test
inc
aam
jmp
jo,pn
mov
out
xchg
jns
jae
push
sub
into
sub
and
sahf
mov
insl
cmpb
out
adc
int3
pop
lods
fmull
pop
out
fistpll
xchg
repnz
dec
pop
mov
mov
mov
sbb
repnz
xchg
and
mov
out
fisubrs
int
stos
mov
cmp
lods
inc
mov
addr16
clc
out
imul
xchg
lret
cmp
in
jb
jne
std
lods
xchg
push
xor
inc
cmpsb
and
and
das
in
mov
movsb
mov
lock
mov
jns
loopne
pop
loope
es
xchg
out
bound
imul
mov
mov
imul
cmpsl
lahf
imulb
int3
jg
inc
mov
jb
xchg
jl
insl
jns
xchg
and
stc
jne
movsb
mov
movsl
cmpsb
xchg
and
into
in
das
and
imull
lock
pop
and
inc
call
lret
mov
mov
cmp
daa
daa
mov
jmp
leave
arpl
jo
and
repnz
out
xchg
lock
adc
ret
test
xchg
loopne
pop
sahf
xchg
out
sarb
inc
mov
cmp
pop
stos
mov
ljmp
test
inc
sahf
lods
xor
xchg
mov
sbb
imul
pusha
xor
aaa
adc
sub
mov
scas
inc
lods
ss
stos
les
test
stos
sub
sahf
rol
xor
and
ds
ss
adc
movsb
repnz
rcrl
mov
push
pop
outsl
and
repz
cwtl
int3
clc
pop
xchg
push
mov
pusha
xor
aam
hlt
or
xchg
cmpb
scas
adc
sub
cmp
aam
insb
jns
xchg
int3
xor
or
inc
test
dec
sbb
imul
dec
into
pushf
pop
or
sahf
std
movsb
jne
cs
repnz
cmc
ret
nop
sbb
inc
xor
out
sub
sbb
ja
pusha
sbb
leave
lods
xchg
sbb
sbb
iret
push
and
xchg
js
in
mov
repnz
or
mov
insb
mov
lret
cwtl
js
push
cmp
movsl
es
loop
cmc
sarl
sahf
jno
pop
lea
jmp
or
jl
jg
test
mov
bound
or
ss
push
out
lret
or
insl
mov
fstpt
push
inc
push
hlt
clc
out
arpl
push
sub
ja
bound
pop
lods
mov
dec
jmp
out
lods
jl
dec
insl
neg
dec
mov
jle
ljmp
cmp
fmuls
into
inc
lret
insl
mov
adc
push
xlat
jb
dec
pop
jo
fs
loope
jl
movsl
add
jbe
test
aas
ret
xor
mov
jns
loopne
lahf
cmp
xor
push
cmp
cmpsl
ds
fstps
je
push
repz
pushf
sub
push
ss
pop
ds
pop
jb
inc
mov
mov
mov
hlt
int3
inc
imul
call
imul
xor
mov
sub
mov
int
jecxz
xorl
mov
jae
xchg
push
and
movsb
and
ja
leave
ss
icebp
mov
xchg
and
xchg
in
jl
repnz
lock
sub
mov
movsb
cmpsl
insl
xor
mov
push
les
mov
mov
xchg
mov
fidivl
lock
jl
aas
adc
push
out
mov
es
push
mov
sbb
pop
daa
pusha
mov
jne
cmp
shlb
cmpsb
fs
test
jo
mov
inc
int
gs
lret
addb
test
push
mov
fnstcw
ret
aaa
adc
mov
add
jl
sarb
push
lahf
jne
outsb
xor
sub
xchg
jo
ret
imul
mov
insb
jo
sub
daa
mov
cmp
ljmp
cmc
scas
popf
mov
sbb
pop
cmp
nop
call
cmp
adcl
jb
xorb
jmp
or
aas
mov
adc
cmc
cmp
mov
rcll
pop
or
addb
addl
gs
pop
add
lods
bound
in
imul
rolb
xor
pop
or
xchg
shrb
je
sbb
in
xchg
adc
into
lcall
add
in
pop
pop
leave
or
daa
inc
mov
pop
mov
enter
out
out
sbb
cmc
jae
jnp
xor
jmp
sub
xor
je
sub
push
shll
sbb
lods
sbb
mov
icebp
sub
lods
fldt
mov
popa
nop
repnz
sbb
stos
fcompl
dec
jae
xlat
in
movsl
dec
faddp
sub
mov
mov
sub
add
add
mov
jmp
mov
addr16
pushf
in
in
jmp
int3
cmp
je
cwtl
mov
movsb
adc
mov
xchg
lods
sub
add
pushf
xor
adc
repz
inc
insb
and
ret
iret
cli
and
popf
fistpll
ja
enter
nop
adc
stos
push
push
lret
mov
repz
jae
push
scas
xchg
dec
adc
sbb
push
jmp
mov
int3
jb
mov
out
push
jb,pn
sub
dec
pop
insl
mov
aam
jae
test
xchg
subb
push
xor
clc
mov
int3
fdivrl
or
dec
and
sub
movsb
dec
pop
adc
lods
test
xlat
movsb
sub
mov
test
sbb
sub
mov
flds
pmuludq
mov
inc
popf
sub
sub
xor
xchg
xchg
pop
or
xor
rorl
scas
ds
mov
adc
push
pop
inc
mov
cmp
aaa
pop
int3
xor
mov
xchg
jb
test
inc
sbb
xchg
js
push
subl
xchg
mov
push
fdivr
shlb
cs
mov
cmpsb
sbb
in
mov
xor
int3
adc
outsb
jp
push
add
push
into
add
dec
out
cmp
popa
pop
test
mov
or
and
cmp
xchg
enter
pop
test
jmp
call
out
pop
test
cmp
nop
push
pushf
movsl
es
mov
not
rcrb
xchg
cwtl
hlt
inc
xchg
movsb
cmc
sarb
pop
pop
addr16
insb
cmpsb
lods
mov
xor
and
int
dec
subl
xchg
lret
icebp
jg
adcb
xor
inc
add
push
mov
fiaddl
ja
xor
xor
xchg
arpl
push
add
xor
mov
push
jbe
xchg
imul
cwtl
bound
xchg
fwait
int3
cmp
dec
xchg
sbb
pop
push
int
inc
scas
adc
push
bound
adc
pop
stos
xlat
xor
fisttps
in
xchg
cmc
inc
xlat
mov
cld
pop
call
mov
dec
inc
push
pushf
mov
push
stos
ret
test
ficompl
addr16
into
pop
data16
dec
cmp
mov
xlat
aam
cltd
sub
lods
sub
mov
mov
jns
loope
das
aaa
cmpsl
cmc
outsl
or
inc
jmp
aad
loopne
jl
sbb
fldenv
and
hlt
xchg
loopne
aaa
jl
sub
pop
pusha
nop
jae
mov
subb
jl
mov
pop
dec
out
xor
gs
adc
jae
sbb
or
or
cmp
push
push
cmp
pop
mov
je
lods
sub
bound
nop
outsl
sub
sub
mov
out
mov
mov
xchg
leave
cmp
call
pop
sbb
xchg
pusha
push
push
lea
rcrb
mov
leave
testl
aad
inc
xchg
aad
mov
mov
daa
in
aad
xor
fisubs
xchg
je
and
mull
xchg
hlt
mov
mov
xchg
movsb
jo
sub
clc
inc
xor
loope
push
push
ror
testl
xor
mov
or
sub
jge
jne
icebp
mov
data16
mov
mov
mov
shll
cld
xchg
das
leave
arpl
bound
sti
movsb
mov
xor
mov
hlt
mov
mov
pop
xchg
push
pop
int3
xor
scas
into
pusha
nop
cmpsl
or
and
jae
or
pop
inc
stos
aas
jnp
pop
pusha
mov
lock
mov
pop
push
aaa
jbe
pop
repnz
imul
mov
pop
fwait
pop
mov
daa
cs
add
fists
mov
jb
pushf
xor
fwait
mov
push
ror
addr16
xchg
adcb
ror
aaa
stos
arpl
mov
insl
and
pop
xchg
cmp
inc
or
adc
xchg
sbb
addb
clc
or
cmpsl
insb
lahf
dec
lahf
sahf
pusha
pop
or
shl
not
pop
insb
pop
lock
pop
repz
dec
int3
mov
mov
nop
push
decb
cli
xchg
xchg
xchg
test
pop
bound
pop
pusha
jae
pop
int3
icebp
adcb
cli
fdivrl
mov
push
pop
sahf
mov
lret
pop
xchg
or
outsl
pop
ret
out
pushf
sbb
stos
dec
jge
push
cmc
dec
and
push
outsb
loopne
xchg
outsb
and
inc
pusha
je
cmp
cltd
mov
mov
cmp
outsl
dec
mov
push
inc
add
out
add
mov
test
xchg
repz
xorl
bound
in
pop
add
sbb
or
mov
jnp
sbb
bound
ficoml
cld
daa
mov
aas
xchg
imul
dec
mov
mov
arpl
das
ror
adc
loopne
inc
cmpb
mov
sarl
sti
push
and
jae
aas
mov
dec
mov
fists
stos
mov
or
dec
out
dec
mov
cmp
mov
or
insb
mov
movsb
aad
rcr
je
addr16
xchg
outsb
je
nop
pusha
shrb
mov
int3
ret
add
push
and
adc
adc
mov
sti
xchg
das
mov
int3
or
and
popl
imul
loope
xchg
add
dec
test
scas
int3
sarb
int3
inc
insl
rcrl
fwait
data16
cmpsb
lods
lret
mov
dec
push
fmull
sub
ffreep
clc
lea
insl
aas
xchg
andb
sub
aam
insl
mov
leave
shrl
sub
pop
adc
movsl
push
icebp
mov
call
aas
dec
pushf
mov
lods
mov
hlt
mov
lods
jnp
pushf
jns
mov
data16
cmc
mov
adc
jle
ds
cmp
das
mov
inc
mov
repz
cli
jg
stc
imul
xchg
jle
xor
pop
mov
xor
stc
lea
sub
mov
int3
xchg
push
inc
xor
sahf
mov
pop
mov
lret
std
and
addb
add
mov
rep
les
xchg
js
shrl
test
lcall
pushf
sub
jb
mov
aas
xchg
inc
dec
pop
xor
lcall
aad
mov
push
ja
and
mov
xchg
mov
scas
jl
sub
and
lods
jno
sbbl
leave
scas
adc
in
cmp
addl
dec
jae
push
daa
test
sti
dec
jge
xlat
jg
mov
add
testl
rolb
sbb
int3
xchg
mov
ficoms
push
sbb
pop
mov
dec
mov
pop
mov
xor
insb
mov
dec
push
mov
mov
inc
sub
sub
xchg
test
add
mov
mov
in
movsl
aas
notb
xchg
or
in
outsb
and
mov
clc
jmp
xor
out
es
sub
imul
and
sti
imul
cmpl
imul
jmp
leave
test
frstor
out
pushf
push
adc
cmp
sahf
xchg
mov
or
dec
clc
repz
lret
leave
sub
sub
stos
mov
mov
je
push
mov
subb
test
mov
push
xchg
test
lret
pop
adc
scas
movsb
mov
mov
movsl
test
xchg
sub
dec
aaa
fs
pop
out
mov
xchg
test
mov
xchg
mov
mov
add
jl
dec
sub
cli
loopne
adc
pop
fsubrl
mov
int3
dec
mov
inc
sahf
mov
mov
cmpsl
les
je
push
mov
lcall
sbbb
pusha
jnp
mov
sbb
test
not
jmp
push
xor
mov
inc
mov
arpl
push
popf
mov
cmp
movsb
push
and
and
push
imul
xchg
movsb
sbb
insl
mov
xchg
or
es
cli
das
xchg
lock
push
adcl
pop
dec
sub
and
dec
cwtl
mov
pop
jmp
sub
mov
je
outsb
pop
dec
pop
ja
mov
ss
outsb
jg
push
popf
sahf
fstp
cltd
into
xchg
push
sbb
js
je
sbb
xor
jae
sbb
jp
pop
mov
in
add
cli
lret
aad
movsb
adc
in
push
pop
aad
cmp
fcoms
test
arpl
je
in
icebp
xchg
std
mov
cltd
xchg
adc
sbb
mov
xchg
dec
popf
repnz
xor
psrld
sub
or
das
imull
and
imul
lret
jno
ret
cmp
int3
or
iret
jns
mov
sub
mov
inc
and
iret
loopne
xchg
test
js
pusha
loope
cli
adc
add
push
mov
pop
pop
imul
stc
mov
je
orb
lret
push
sbb
xor
xchg
xchg
into
ljmp
ror
xlat
jecxz
jo
cmpsl
sub
aaa
xlat
das
mov
push
and
mov
push
js
fldl
dec
add
out
mov
leave
pop
lcall
mov
adc
lods
or
inc
test
das
inc
sbb
arpl
imul
add
sub
xor
roll
test
mov
pop
dec
jl
out
aam
pop
imul
repz
jle
jp
test
js
insb
add
ds
jbe
pop
mov
nop
dec
push
jp
shlb
jp
and
pop
inc
inc
inc
movsl
mov
mov
cmp
dec
sbb
pop
pop
mov
mov
aaa
sahf
push
out
pushf
xor
bound
jo
xchg
or
xor
sbb
mov
imul
notl
sbb
pop
stc
dec
push
push
xor
test
inc
xlat
fwait
lods
insl
aas
into
mov
add
pop
idiv
jno
jae
or
mov
push
mov
inc
movsl
dec
inc
test
pop
fmull
dec
shll
insl
imul
movsb
shll
std
test
pop
mov
push
cmp
jg
shlb
pop
jbe
stos
movsb
scas
mov
push
sbb
sbb
lret
mov
push
lea
inc
aas
shrb
bound
es
mov
imul
inc
fstpl
mov
push
inc
adcl
inc
roll
jmp
jmp
push
pop
inc
adc
dec
scas
ds
add
jge
push
or
mov
outsb
pop
out
mov
nop
fs
pusha
and
sbb
cmpl
test
jp
add
movsl
das
imul
mov
pop
pop
or
lret
shl
das
sarl
sbb
je
lds
sbb
insl
lidtl
adc
sbb
lea
sub
adc
dec
movsb
mov
data16
std
sbb
in
inc
popf
push
mov
or
mov
test
imul
dec
subb
cmpsl
pusha
int3
repnz
cmpl
stc
popa
imull
std
call
adc
ror
adc
aaa
loop
ss
mov
test
mov
lods
xor
xchg
test
aam
in
loopne
bound
adc
adc
les
add
cwtl
dec
mov
push
xor
dec
mov
int3
or
mov
adc
bound
test
mov
scas
sbb
les
xchg
je
fdiv
imul
xchg
stos
stos
les
and
iret
scas
imul
cwtl
lahf
sub
push
scas
test
movsb
sahf
mov
adc
sbb
mov
outsb
js
xor
adc
adc
inc
aas
mov
outsb
xchg
insb
inc
xchg
xor
iret
xchg
repz
pushf
xchg
and
xor
adcl
call
lods
hlt
push
mov
jne
and
test
mov
fsubrp
adc
pop
cltd
mov
in
scas
aaa
movsb
out
daa
lea
or
mov
insl
outsb
xor
mov
xor
adc
or
xor
or
adc
mov
jb
lcall
movsb
int
rcll
mov
xchg
xchg
push
movsb
sub
sub
pop
xchg
and
imul
mov
stos
xor
test
arpl
mov
lret
pop
into
es
mov
idivb
movsl
lea
loopne
or
mov
mov
sub
nop
jne
push
jns
mov
jae
push
dec
pop
pop
mulb
jb
ret
pop
jnp
aas
jb
add
jl
fs
lods
popa
hlt
cmp
mov
sub
movsl
enter
mov
pop
or
mov
outsl
jp
das
xchg
test
in
aaa
test
test
insb
mov
jo
das
cmpb
mov
cltd
popa
cmove
aas
xchg
imul
and
xchg
movsl
mov
cs
sub
mov
mov
les
movl
scas
cmp
dec
lods
in
jne
cmp
mov
ja
aas
mov
sbb
aam
inc
test
fsubrs
lods
cwtl
rorb
arpl
out
loopne
loop
mov
in
mov
imul
stc
sarb
scas
mov
sub
xchg
cld
pop
pop
setb
insl
jge
aaa
jb
sub
xchg
arpl
shld
lods
jp
xchg
mov
fnstenv
jge
ret
int3
dec
jg
xchg
fadds
mov
jno
and
mov
mov
xor
mov
cmpsl
inc
mov
mov
mov
jo,pn
andl
popl
xor
push
jl
mov
shlb
xor
and
lock
fimuls
fimuls
push
pop
lcall
xchg
xor
out
and
test
aas
stos
sub
inc
rcr
xchg
mov
lods
stos
add
shrb
or
rorb
mov
rorl
xchg
lahf
sahf
popa
pop
inc
out
daa
call
push
jns
pushf
inc
scas
fmulp
movsl
push
push
or
inc
daa
jg
push
mov
ds
xchg
xchg
jae
mov
mov
cmc
lret
mov
add
mov
sbb
andl
mov
cmpsb
movsb
sbb
mov
xchg
stos
xchg
ja,pn
iret
push
imul
mov
xlat
sub
mov
movlps
push
jbe
mov
xchg
adc
xorl
lcall
mov
sahf
int3
out
mov
fdivr
xor
xchg
push
jno
data16
and
mov
and
pop
xchg
repnz
jno
rcrb
popa
das
push
xor
lods
jp
popa
imul
subb
loop
lods
stc
jmp
pop
test
mov
cmc
ret
arpl
xchg
leave
outsb
call
mov
sub
mov
popf
stos
in
inc
lcall
and
daa
sbb
mov
mov
mov
fs
sub
cmc
fistpl
imul
mov
int
mov
xchg
jnp
faddl
jecxz
jle
pushf
out
mov
xchg
inc
int
dec
js
ret
mov
push
xchg
leave
test
pop
fsubrl
push
test
inc
test
mov
or
rorb
sahf
test
cld
xchg
leave
mov
jb
xchg
jecxz
push
xorl
mov
cld
push
jae
jl
sysenter
ficoms
in
aaa
cmp
fs
int3
xorl
rolb
nop
out
sub
cmc
ss
push
sub
pop
movsb
pop
aas
jb
xor
ja
out
cmp
arpl
outsl
test
adc
pop
aas
xorl
and
mov
mov
int3
loope
fistl
add
jg
xchg
xor
ret
mov
cs
ret
push
mov
clc
cwtl
lea
inc
jge
push
cld
xchg
in
fbld
mov
inc
pop
fnstenv
xor
sar
pop
popa
mov
add
push
xchg
cmpsl
fbstp
mov
int3
sbbl
mov
lds
jmp
mov
mov
out
das
std
adc
lret
test
cmpsb
dec
in
jb
mov
and
mov
jmp
mov
imul
push
pushf
cmp
mov
ss
dec
fstps
insb
mov
adc
gs
or
mov
jno
xchg
mov
cmp
mov
mov
mov
xchg
andb
push
cli
icebp
xor
fisttpll
gs
jmp
xchg
cmpsb
mov
pop
shll
mov
cmp
xor
adc
or
pop
dec
adc
gs
inc
test
jno
shr
lcallw
dec
scas
aas
insb
xchg
fs
push
icebp
cwtl
inc
cmc
shrl
fbstp
xor
lds
push
mov
xlat
adc
xchg
lods
xchg
test
js
aad
nop
subl
jecxz
push
xchg
mov
cmp
sbb
push
cs
dec
inc
dec
pop
aad
ds
pop
push
aam
sub
push
pop
sub
subl
inc
sahf
dec
in
ffreep
insl
push
enter
mov
out
faddp
cltd
iret
add
sbb
mov
pop
jbe
int3
xchg
sbb
nop
cwtl
popa
shrl
shll
mov
adc
arpl
repz
cmp
inc
add
xchg
pop
loop
je
mov
ja
inc
adc
jne
jbe
pushf
es
fwait
int3
jno
or
test
movsb
jg
sahf
pop
popa
xchg
cwtl
cwtl
pop
fidivs
int3
pop
adc
sarb
pop
mov
dec
sti
xchg
jns
push
imull
orb
and
stc
adc
loopne
mov
imul
outsb
xchg
or
enter
jo
outsl
xor
sub
xchg
lret
gs
inc
pusha
movsl
mov
xchg
inc
movsl
or
dec
in
repz
xchg
insb
sub
add
stos
mov
insb
and
hlt
movsb
iret
sbbb
leave
fwait
cltd
loopne
push
lret
stos
add
and
mov
mov
aas
stos
mov
dec
push
daa
xchg
mov
iret
inc
xchg
fistpll
sbb
mov
leave
test
push
mov
jl
divb
lods
mov
push
xor
xchg
stos
pop
and
leave
ud0
inc
aaa
int
push
aaa
repnz
in
inc
les
insb
jae
and
mov
push
lods
int3
lea
adc
pop
sub
pop
cmp
inc
mov
or
test
add
sub
lea
dec
mov
mov
test
cmc
shlb
enter
shrb
rclb
lods
xor
or
pop
mov
pop
sahf
movsl
cs
add
dec
or
out
sti
xchg
mov
xor
cmpsl
stos
movsl
das
and
popf
jp
mov
add
push
pop
stos
frstor
das
fdivs
int
jno
jbe
mov
xchg
gs
or
cmp
mov
movsb
cmp
cwtl
push
stos
cmc
pop
ljmp
mov
push
adc
repz
lods
js
pop
rcrb
push
gs
ljmp
int3
xlat
jnp
xor
test
mov
lds
mov
shr
xchg
mov
ror
push
sbb
out
inc
fwait
jp
mov
scas
fcmovbe
adc
cmc
adc
daa
shlb
in
lods
scas
jb
gs
mov
sbb
dec
sub
fldcw
cmp
and
inc
adc
dec
or
inc
icebp
data16
lds
sbbb
pusha
movsb
das
xor
cmc
pop
xor
das
jmp
lea
clc
pop
int3
sti
nop
cwtl
jbe
cmp
popa
or
ret
pop
test
sub
mov
hlt
aaa
test
pop
xchg
sub
mov
das
xchg
insl
xor
stc
adc
mov
mov
lret
and
aam
dec
aad
jg
stc
sub
mov
sub
lret
add
mov
repnz
movsl
jns
xor
lods
sub
mov
mov
clc
pop
sub
dec
frstor
ja
xchg
aaa
jecxz
sti
cmp
outsl
stc
and
repnz
int3
outsb
jne
mov
or
xchg
insl
mov
push
mov
mov
mov
inc
je
movsb
je
cmp
ljmp
jne
cwtl
outsb
mov
imul
daa
push
mov
loop
push
sbb
inc
aas
loop
add
xor
inc
lods
fisubrs
movsb
dec
stos
rep
fs
mov
in
lret
fstps
pop
mov
js
pop
mov
push
repz
fsub
les
bound
je
insl
adc
call
lods
xor
mov
leave
xor
shlb
mov
out
repz
mov
lods
inc
xor
jno
jnp
mov
imul
data16
jecxz
lods
daa
and
add
jp
inc
out
dec
movsb
outsl
int3
push
mov
aas
sub
and
jb
int
xchg
push
ss
pop
out
je
imul
and
jo
jno
insb
outsl
sahf
test
mov
dec
mov
sub
sub
out
lods
jb
out
test
and
sbb
and
jae
push
mov
loope
xchg
mov
cmpsl
movsb
sub
fcoml
imul
sahf
cld
pop
dec
jmp
or
sahf
call
mov
sub
frstor
cmp
jmp
movsb
sbb
shlb
lea
lret
cmp
popa
mov
in
pop
adc
int3
mov
sbb
lahf
test
jecxz
sub
cmp
test
cwtl
pop
dec
pop
out
xor
pop
sbb
xor
adc
pop
mov
mov
or
sbb
stos
or
aam
roll
lods
and
lea
outsb
pop
fdivs
push
negl
outsb
sub
pop
test
dec
mov
scas
cmp
pusha
or
das
cmpl
rorl
and
add
and
push
xchg
gs
icebp
inc
mov
ret
xor
or
mov
outsb
pusha
sub
xor
and
std
cltd
cmc
in
sub
xor
jb
mov
mov
fcomps
mov
jg
mov
negb
xor
movsl
sub
or
int3
push
push
pop
xor
out
imul
push
lock
js
negl
pusha
ljmp
xchg
mov
mov
lods
cltd
popa
out
jp
insb
test
add
movsl
imul
pop
mov
mov
outsb
lcall
imul
pop
in
add
xchg
movsb
nop
xchg
mov
stos
in
je
push
jmp
jl
js
mov
fisubs
xchg
fs
cld
push
pop
jns
pop
notb
mov
hlt
push
clc
shll
repnz
push
mov
orl
cli
push
push
xor
icebp
and
cmpsb
pop
mov
pop
pop
cwtl
aas
jmp
insb
scas
stos
fs
and
jo
or
fstps
cld
pop
xchg
lahf
push
pusha
mov
lcall
sbb
fwait
and
and
mov
cmp
adc
sub
lods
sahf
or
pop
push
push
clc
mov
sub
xor
push
inc
sbb
int3
mov
pop
jnp
lods
pop
push
insl
cmp
dec
rolb
mov
div
imul
or
in
mov
das
mov
lret
ljmp
xchg
movsl
sbb
lret
lods
fcomps
scas
popa
inc
jp
inc
daa
inc
fwait
pop
sub
movsb
scas
mov
mov
mov
cli
movsb
sub
push
push
push
mov
fidivrs
loopne
mov
out
pusha
cltd
add
les
xchg
in
mov
sub
mov
std
jl
fs
xchg
andb
jl
les
or
loope
fdiv
out
scas
push
xchg
xchg
add
push
movsb
cmp
mov
xchg
mov
test
loope
nop
jg
gs
outsb
dec
movsb
bound
int3
shlb
pushf
popa
fs
scas
mov
mov
faddl
jmp
mov
mov
inc
in
adc
jno
stos
fisubs
stos
xor
and
ret
das
adc
fsubrp
xor
and
cltd
mov
xchg
inc
rcll
pusha
lret
cs
lods
xchg
xor
jecxz
cltd
mov
pop
data16
cmp
mov
mov
std
mov
scas
xor
pushf
daa
xchg
movsb
and
enter
adcb
dec
sub
fdivrl
jmp
cmp
repnz
cmp
ret
push
arpl
cmpsl
arpl
jns
dec
ficompl
push
cwtl
nop
fidivl
je
xchg
jns
inc
xlat
and
add
mov
in
sahf
repz
push
mov
popa
lahf
mov
in
movsb
cmc
pop
in
lds
push
fs
leave
xchg
ds
xchg
dec
pushl
push
arpl
shrl
push
cmpsb
pop
data16
test
mov
cli
shrl
pop
outsb
xor
pushf
mov
lret
insb
sbb
nop
in
into
roll
enter
jl
imul
or
jae
jne
sub
out
inc
data16
subb
inc
pop
popa
call
xchg
hlt
sbbl
adc
dec
jbe
push
and
mov
addr16
loope
insl
rol
xchg
xor
push
movsb
or
out
out
call
cmp
inc
dec
or
push
enter
pop
xchg
or
ror
cs
pop
cmp
pop
cmp
push
ss
loopne
cli
pop
inc
jne
nop
inc
push
aas
xchg
jns
and
lock
lock
rep
bound
and
iret
adc
nop
push
xchg
andb
adc
or
xchg
and
cwtl
cmpsb
lods
mov
cmpsb
push
sub
in
outsb
fidivrs
lods
push
aam
mov
jnp
lods
test
push
test
or
cmp
into
fcoml
leave
inc
loopne
cmp
sub
sahf
mov
jmp
sbbb
jmp
fidivl
jmp
bound
push
js
pop
sbb
out
test
int3
scas
inc
add
push
mov
mov
icebp
cmc
push
add
mov
xchg
popa
pop
or
sub
scas
inc
mov
push
adc
into
bound
jb
scas
lods
xor
add
xchg
push
dec
inc
mov
or
mov
mov
cld
dec
sbb
mov
cmpsb
cld
sbb
movsb
imul
push
sub
loop
js
jnp
xor
testb
test
cld
jb
es
cmp
jo
std
je
sbb
bound
jp
lret
push
jl
inc
jg
xchg
push
sbb
cld
jo
sahf
adc
mov
lock
mov
bound
xorl
sub
bound
sub
adc
daa
mov
xor
xlat
nop
jp
xor
es
jns
inc
mov
insb
arpl
cmp
push
insl
inc
cmp
pop
or
dec
xlat
movsb
mulb
pop
rorl
jbe
xchg
ljmp
cmpsl
es
jbe
or
outsl
scas
sub
lahf
pop
stos
or
jle
push
cmp
setge
mov
nop
cld
sbb
lret
push
lods
bound
jnp
add
dec
push
jmp
lret
daa
loopne,pt
or
mov
lods
mov
sub
loope
xchg
sub
icebp
xchg
enter
ret
mov
jns
jb
pop
push
xor
fidivl
push
aas
xchg
mov
push
sub
scas
sub
gs
hlt
in
les
xor
adc
arpl
cmp
add
into
je
movsb
sub
scas
out
jg
sub
dec
cmpsb
mov
lods
in
xor
les
addl
hlt
add
pop
andl
cmp
jno
jae
push
cs
arpl
sysret
cmpsb
push
mov
mov
dec
lock
movsl
das
movl
or
std
mov
xchg
shll
jne,pt
das
stos
cmc
in
lea
out
mov
inc
out
and
jae
fistps
mov
cmp
js
insl
test
rcrb
call
sub
jmp
test
inc
rcrb
push
mov
adc
dec
fs
cltd
pop
and
arpl
fbld
insl
test
mov
movsl
scas
test
imul
pop
and
lods
add
int3
lock
sub
mov
pop
sub
mov
inc
popa
jge
rcr
mov
popf
outsl
jb
fucom
lea
stos
cmpl
sbbb
jge
or
testb
sub
shll
mov
sub
in
xchg
jb,pn
adc
in
stos
out
iret
sub
sbbb
xor
les
lahf
jmp
push
pop
test
inc
lea
movsl
cld
je
loop
outsl
insb
xchg
addr16
push
cmpsb
mov
bound
dec
mov
sub
push
mov
ds
jnp
fs
movsl
xchg
push
sub
push
sbb
xor
pushw
ds
mov
dec
jnp
jl
xchg
cltd
stos
lcall
test
rclb
addb
inc
cmpb
mov
notl
xor
hlt
or
sub
icebp
mov
xchg
cld
pushf
xor
pop
out
xor
test
mov
mov
les
sti
or
aas
pop
mov
pop
mov
jnp
inc
scas
sbb
xchg
xchg
pop
push
mov
in
leave
std
xchg
add
mov
mov
scas
lods
shlb
subb
je
mov
arpl
rol
dec
and
addr16
in
mov
xchg
repnz
jno
mov
push
lahf
sbb
mov
jae
cli
data16
testl
cmp
in
pop
mov
insl
insb
mov
je
repnz
ljmp
xchg
filds
sub
mov
mov
jo
mov
dec
mov
xchg
clc
movsb
jle
imul
adc
xor
push
pop
ror
daa
outsb
adc
pop
push
dec
cmp
xchg
and
std
mov
data16
lock
jp
mov
push
adc
dec
push
push
icebp
sti
movsb
add
and
leave
sub
xchg
stos
push
jo
dec
sub
sahf
dec
stc
sub
cs
xchg
dec
daa
cmp
sbb
push
movsl
imul
into
aaa
nop
mov
ret
cli
icebp
push
mov
arpl
push
lods
in
cld
subl
imul
mov
inc
xchg
test
cltd
fucomip
sahf
addr16
es
imul
inc
sub
xchg
mov
mov
mov
gs
and
sahf
pop
cmpsb
jmp
mov
mov
sbb
aaa
nop
jg
or
test
mov
inc
scas
je
imul
inc
sub
aam
pop
repz
sub
pop
test
in
cltd
test
or
lods
nop
sub
jnp
mov
test
inc
mov
ds
sbb
push
imul
test
std
sub
repnz
xor
pusha
add
xor
dec
jb
nop
mov
das
cmc
rorb
dec
das
dec
jmp
cmpsb
in
fs
push
js
aas
xchg
pop
dec
imul
xor
or
incl
shll
xchg
test
pop
test
adc
lcall
mov
push
cltd
or
xchg
cltd
pop
push
aam
pop
pop
cli
adcb
aam
sub
pop
xchg
lahf
cs
loope
mov
in
popf
sbb
jbe,pn
ljmp
xor
adc
clc
in
jbe
cmp
in
add
pop
adc
jl
pop
fs
and
pop
sbb
mov
xlat
repnz
xorb
fs
sub
ror
pop
insb
jb
out
sub
mov
jb
je
pushw
sub
mov
pusha
cmpsb
out
cmp
stos
in
mov
aas
cltd
or
pusha
xor
das
xchg
ds
xchg
adc
xchg
negb
cs
mov
jb
jae
bound
xor
xchg
push
frstor
cmp
xchg
cltd
xor
icebp
clc
cmp
push
insb
cmp
sbb
daa
mov
shrl
aas
cmp
mov
jp
mov
xchg
sub
dec
lcall
add
shrb
adc
mov
outsb
fsubrs
cmp
cmpsb
pop
fsubrs
out
inc
lock
out
push
std
js
push
xlat
xor
cmp
mov
mov
lods
out
ja
into
push
pop
imul
repnz
jae
mov
lret
inc
mov
sbb
inc
scas
popf
sub
packuswb
push
xor
sub
shlb
adc
test
jl
loop
cmc
jmp
sub
sub
pop
pop
dec
insb
popf
or
ficomps
lock
cli
out
outsl
ljmp
push
pop
cmpsb
push
lret
push
dec
add
lods
scas
jnp
clc
ret
xor
cmp
xor
mov
mov
fiadds
test
pusha
jns
imul
or
jl
mov
movd
cmpl
sbb
out
inc
and
sub
fwait
dec
cmpsb
adc
std
fcomps
mov
add
xor
gs
push
sbb
fbld
cmp
das
inc
jmp
nop
nop
adc
jns
mov
enter
leave
mov
mov
cmc
lret
mov
les
adc
push
cmp
scas
mov
out
cmp
call
inc
inc
sbbb
jne
loopne
and
rorl
adc
pushf
jne
xlat
jno
shrl
xchg
push
ds
popf
xlat
neg
xor
mov
test
inc
push
add
jns
mov
push
mov
xor
repnz
mov
dec
mov
dec
icebp
mov
aas
aad
and
xchg
add
leave
shlb
or
pushf
bndstx
je
jno
lea
mov
daa
pusha
outsl
fcomps
xor
gs
jnp
and
cmpsb
test
repnz
jmp
insb
das
or
mov
loop
out
sarb
addl
mov
ljmp
dec
filds
ljmp
fdivs
cld
nop
out
mov
cmpsl
sub
dec
jno
stos
xchg
mov
jns
inc
sahf
add
adc
aas
cmp
shrl
jo
inc
call
xor
add
cmp
nop
fsubp
xlat
and
pop
rorl
xor
inc
xchg
xor
jnp
lret
sub
test
lahf
int
nop
ret
sub
aaa
mov
shrl
inc
ja
cmp
jge
popa
inc
cmp
scas
xchg
inc
fwait
pop
cmpsb
stos
jne
xor
fildll
dec
leave
cmp
fcompl
rclb
push
cmp
mov
inc
enter
insl
cmpl
mov
pop
mov
enter
or
test
loop
or
dec
mov
push
sbb
dec
mov
fst
dec
mov
sub
mov
or
repz
mov
das
jo
sarb
stos
jbe
jl
push
push
mov
lods
mov
fwait
jns
cli
cmpsb
nop
jb
out
push
mov
icebp
or
je
loop
adc
mov
push
pop
add
sbb
xor
sub
push
test
sub
lret
add
popf
add
mov
out
push
out
cmp
inc
ss
mov
push
insb
loopne
add
outsl
mov
out
inc
xor
andb
ljmp
cmpsl
lods
fidivrl
mov
in
aas
lret
fs
jp
lret
out
cmpsb
pop
sarl
loopnew
mov
jecxz
push
sahf
sub
nop
lahf
mov
das
ret
ds
cmpl
shlb
jg
out
insb
outsb
mov
inc
dec
and
in
repz
addb
sbb
mov
movsl
repnz
sbb
popa
imul
lds
lods
repnz
outsb
and
cmp
cld
movsb
outsl
xor
inc
sub
movsb
mov
sbbl
jnp
pop
xor
cwtl
shr
pop
roll
lea
dec
pop
loop
inc
int3
mov
xchg
sub
outsb
jmp
dec
pusha
cmp
lahf
insb
lea
sub
lods
xchg
fadd
push
out
pop
aas
rcr
sbb
and
sti
and
lahf
cmpsb
sub
lods
pusha
xor
mov
adc
xchg
int3
pop
imul
adc
es
pushf
sbb
cmp
movsb
pop
ror
pop
jb
sahf
sbb
jl
push
incl
cmp
jp
and
ja
jo
jns
adc
mov
je
loop
fwait
repz
mov
aad
lds
sbb
xchg
jno
test
and
xchg
jns
mov
sti
lahf
dec
inc
outsl
outsb
cltd
loopne
and
loope
testl
dec
pop
and
push
mov
inc
sbb
inc
nop
mov
and
fstpl
sbb
inc
movsl
push
and
push
aas
and
mov
adc
xchg
inc
jns
outsb
or
movsb
mov
arpl
mov
test
adc
inc
es
cltd
je
rolb
xor
push
or
push
mov
shr
add
push
addr16
push
cmp
or
and
jb
loopne
dec
and
scas
fidivrl
inc
pushf
subb
out
mov
jne
xor
or
cmpb
mov
mov
fldcw
xchg
shrl
movsl
pop
lea
hlt
add
sub
jo
fidivs
xor
xor
int3
pop
rclb
in
push
leave
out
adc
jns
push
aaa
sbb
scas
int3
pop
scas
mov
mov
ljmp
imul
mov
int
dec
int3
jecxz
nop
mov
hlt
ss
push
subl
jae
rol
and
hlt
das
aaa
sbb
call
lods
pop
nop
cwtl
scas
pandn
fs
mov
loopne
stos
aaa
je
sub
inc
push
sbb
cmp
push
popf
je
pop
add
outsl
adc
out
mov
adc
and
cmpsb
dec
xchg
stos
fldenv
mov
push
iret
fdivp
pop
or
jp
scas
adc
scas
push
jns
xchg
jg
or
push
out
test
pushf
nop
int3
movsl
xchg
notl
pop
lock
nop
inc
mov
inc
inc
sti
clc
sbb
mov
xchg
mov
cld
and
leave
repnz
push
repnz
pop
pop
jo
pusha
add
mov
mov
jb
fs
cmc
popa
scas
daa
xchg
mov
jle
mov
or
mov
or
pop
mov
mov
enter
inc
shll
imul
jp
pop
push
mov
out
rorl
aaa
sbb
mov
mov
sbb
gs
xchg
xchg
jae
outsb
cwtl
popa
dec
xchg
dec
cmp
xor
mov
xor
ljmp
rorl
movsb
sbb
fwait
sahf
mov
int3
pop
sub
sbb
cld
movsl
data16
lret
inc
add
and
mov
scas
popa
mov
pop
in
xchg
ds
jmp
xchg
ss
sub
leave
jae
xchg
push
aaa
jo,pn
pop
pop
pop
cmovl
mov
mov
cmp
push
andl
jnp
push
je
lahf
xor
push
fdivl
test
pusha
push
repnz
pop
xlat
dec
cmp
int3
pop
mov
gs
inc
adc
fs
inc
xchg
cmp
jbe
or
fsubp
sub
ja
gs
insl
push
in
shlb
jno
testb
jb
test
xchg
push
in
cwtl
in
subl
dec
mov
mov
sub
outsl
mov
ljmp
pop
in
into
fdivp
out
xchg
pop
insb
or
push
mov
int3
dec
mov
pop
push
movsb
xchg
je
sbb
not
xchg
je
xor
pop
mov
icebp
jmp
pushf
repz
insl
stos
lcall
jecxz
xchg
adc
mov
mov
jae
ljmp
pop
push
mov
out
nop
leave
mov
scas
xchg
movsb
xchg
je
ret
cli
mov
mov
pop
or
mov
jl
push
and
mov
into
in
scas
mov
negl
mov
lds
and
inc
movsb
xor
jge
jl
nop
addl
push
inc
pop
or
stos
movsb
icebp
xor
addr16
mov
lahf
arpl
insl
mov
or
mov
xchg
inc
cld
jle
fidivs
idivb
stos
mov
fs
insb
push
cwtl
je
daa
sbb
je
lret
mov
popa
xchg
add
xchg
out
pop
mov
dec
inc
repnz
bound
dec
scas
stos
aaa
lea
lods
aam
lcall
mov
loopne
add
jno
stos
cmp
or
xor
sub
daa
fwait
inc
fstps
mov
push
xor
mov
shr
xor
les
int3
mov
pop
mov
daa
movsb
fistl
icebp
lahf
test
push
mov
mov
stos
xchg
sahf
leave
inc
mov
dec
scas
and
cmp
dec
stos
rorl
pushf
xchg
aam
cwtl
fsubrl
mov
insb
clc
sbb
je
mov
scas
lret
loop
or
cltd
mov
and
mov
arpl
push
insl
cwtl
mov
stos
cmp
push
lret
insb
and
xorl
nop
push
insb
inc
and
xchg
sbb
das
mov
sbb
add
push
adc
mov
cmpsl
xchg
jae
jno
scas
jb
mov
inc
push
clc
sbb
jmp
cs
scas
std
mov
scas
and
jmp
pop
push
subb
adc
inc
mov
pop
arpl
jge
or
dec
push
jl
mov
pushf
jns
xor
xchg
xorb
xchg
repnz
aaa
sbb
repz
aaa
lret
pop
leave
test
ja
das
ss
call
jns
sub
gs
push
inc
popf
int3
leave
ret
mov
repz
mov
add
arpl
mov
ret
cwtl
dec
xchg
pusha
inc
sub
movsb
shlb
sbb
sbb
idivl
adc
test
outsb
outsb
mov
mov
imul
sahf
inc
imul
fsubl
inc
mov
xchg
loope
fdivr
sub
lcall
jns
sbb
test
sub
mov
ds
popf
int3
sbb
mov
push
push
jnp
ret
movsb
sub
pop
ja
sbb
test
jmp
imul
stos
jns
aaa
stos
ss
pop
mov
je
test
movsb
rcrb
push
pop
push
shrb
mov
sbb
add
pushf
jl
loope,pn
adc
mov
add
inc
sahf
cmp
imul
in
cmp
aaa
cmpsl
lahf
dec
sub
bt
js
movsb
das
or
mov
std
shl
and
push
jo
sub
test
movsb
mov
mov
lahf
xor
push
mov
dec
pop
inc
jecxz
xchg
scas
lea
mov
shlb
int3
jb
or
repz
data16
jmp
test
push
in
cld
movsb
and
xchg
adc
xor
push
bound
out
movsb
int3
aaa
push
xor
xor
pushf
mov
pop
pop
movsb
and
pushf
ss
int3
call
dec
dec
loopne
and
and
je
pop
and
sbb
inc
adc
cld
das
lret
cmp
test
subb
aas
daa
sbb
mov
cmpsl
cmp
pusha
test
fs
cmp
mov
push
mov
cli
mov
lods
dec
js
int3
adc
fdivrl
movsb
dec
cltd
ret
lods
fdivs
outsb
dec
repnz
fwait
xchg
inc
jae
cmp
test
push
mov
push
addr16
dec
or
mull
fcomps
imul
lcall
mov
icebp
shld
xchg
rcrb
cmp
or
fwait
lds
xchg
bound
mov
fistl
lods
jmp
pop
push
xchg
xor
stos
daa
imul
mov
add
popa
outsb
pushf
xchg
clc
idiv
xor
bound
stos
sub
sub
xor
in
stc
xlat
les
movsb
call
mov
popa
mov
xchg
sahf
int3
and
push
or
pop
dec
jns
mov
pushf
inc
test
push
daa
jmp
mov
pop
arpl
and
lock
push
xlat
sub
test
push
jmp
xchg
jl
int3
push
dec
dec
cmp
add
add
ss
movsl
xchg
push
orl
jnp
dec
mov
xor
repz
ret
pop
sub
pop
dec
xchg
pop
adc
mov
ss
push
jg
fcmovb
inc
xchg
push
ret
dec
lcall
add
mov
pop
cmp
loope
pop
xor
std
lea
pcmpgtb
xchg
xchg
movsb
int
add
sub
lret
adcb
or
push
and
cmp
popa
xor
and
cmpl
sub
and
or
movsb
xor
fstpl
jp
xchg
test
jb
nop
movsb
xchg
int
push
shlb
loope
lahf
int3
in
adc
dec
xchg
mov
shll
xchg
mov
xchg
jbe
push
xchg
pop
in
xor
es
cwtl
inc
xchg
inc
push
popf
sti
dec
out
loopne
sub
jmp
stos
or
loopne
sbb
loope
mov
scas
mov
cmpsb
mov
xor
jno
repnz
push
movsl
outsb
daa
outsl
sub
inc
cwtl
shll
jp
inc
sub
cwtl
test
pop
enter
in
lret
jo
pop
fadd
jl
insb
pushf
pop
fists
enter
fdiv
sbb
or
or
sbb
sbb
xchg
dec
mov
mov
es
je
mov
mov
repz
mov
roll
sbb
or
mov
mov
pop
lret
les
mov
or
sub
mov
mov
xor
mov
neg
out
jl
cmp
and
inc
mov
lock
call
test
lods
jns
lds
xorl
aam
mov
sub
popa
xchg
xor
mov
cs
pop
ret
xor
les
mov
sub
lahf
enter
pop
addps
dec
mov
fcoms
sbb
mov
ja
cmpsb
mov
and
or
js
mov
arpl
andl
mov
mov
test
aaa
mov
cli
sub
es
xlat
push
cmp
jecxz
andl
mov
pushf
movsb
xor
loope
lods
mov
outsl
xchg
lods
stos
test
es
jo
jb
cmp
stc
inc
hlt
xor
subb
xchg
pop
mov
mov
adc
pop
dec
sbb
ror
cmpsw
mov
mov
std
sbb
inc
cmpsl
and
sub
dec
mov
mov
push
daa
xor
enter
sub
fs
lock
stos
mov
mov
dec
or
jno
xor
cmpsb
mov
int3
gs
and
test
lock
mov
pop
aam
int3
clc
sub
xor
shlb
repnz
int3
pop
and
push
lods
movsl
int3
insb
lock
jl
xchg
int3
andb
xchg
shlb
sub
inc
test
mov
mov
fwait
mov
jb
xchg
mov
aas
mov
subl
or
mov
and
mov
int3
movsl
add
mov
int3
icebp
dec
sbb
int3
add
int3
loope
and
mov
mov
call
lret
pop
push
add
mov
push
push
xchg
add
test
sub
js
jb
movsb
sbb
andl
int3
add
test
movsb
int3
cltd
dec
or
movsb
int3
lods
dec
or
movsb
int3
rorl
movsb
int3
sub
or
movsb
int3
jmp
int3
mov
mov
inc
int3
jb
adc
int3
enter
int3
fdivl
or
stos
sub
test
xchg
js
int3
sbb
adc
int3
hlt
loop
inc
mov
dec
orb
xchg
movsb
int3
xchg
movsb
int3
and
int3
cmp
cltd
mov
lcall
ret
cs
sub
add
and
xor
adc
lcall
hlt
push
add
inc
push
rcll
shrl
mov
adc
hlt
push
xchg
lea
xchg
xor
add
xchg
bound
es
movsb
or
lahf
jb
xchg
test
cmp
mov
movsb
xor
add
movsb
and
xor
adc
dec
mov
push
dec
xor
aam
sub
pusha
rclb
pusha
loop
dec
es
pusha
repnz
mov
add
pusha
add
mov
movsb
insl
add
and
cli
inc
popa
js
pop
push
inc
dec
dec
lahf
lods
mov
mov
lock
push
jb
or
movsb
push
jbe
or
jo
shll
jle
or
dec
bound
push
sub
pop
xchg
xor
les
lea
fildll
into
pop
xor
aam
fldenv
fs
pushf
sar
iret
or
pop
mov
push
jmp
add
mov
lds
andb
scas
test
inc
and
pop
inc
push
stos
jae
cmp
and
adc
addb
arpl
int3
xor
fs
insb
sub
loope
daa
and
push
negl
jb
push
dec
lds
jmp
aas
dec
repz
lds
orb
daa
pop
add
cwtl
push
test
mov
or
adc
mov
pop
and
addr16
ret
in
mov
aam
cmpsl
rorl
fstps
lret
jl
and
adc
pop
push
sub
jae
fs
adc
mov
mov
and
pushf
mov
int3
sub
movl
pop
lock
pop
cli
push
jmp
and
int3
xchg
outsb
std
xchg
std
std
mov
scas
xchg
pop
bound
pop
push
pop
mov
outsl
jmp
loop
push
pushf
mov
dec
je
movsb
daa
punpckhwd
or
and
scas
mov
cmpsb
cmp
xor
jno
cmc
push
lret
add
imul
lret
out
push
jl
in
adc
arpl
mov
sbb
pop
lods
in
dec
lret
xchg
fcoms
jp
mov
scas
jne
sarl
loop
mov
test
mov
xchg
stos
push
int
sub
addr16
adc
shll
sub
push
push
dec
push
stos
ror
mov
mov
push
nop
sub
mov
jb
in
mov
scas
xchg
addr16
sub
xchg
dec
out
dec
enter
lock
data16
xchg
mov
mov
dec
sbb
xor
lcall
mov
add
pop
shrb
jbe
sub
test
xchg
jmp
test
sbb
outsl
inc
mov
imulb
add
dec
lock
cmp
out
push
out
add
dec
xor
scas
scas
sub
jo
mov
nop
mov
inc
daa
popf
jl
sbb
jecxz
dec
int3
subb
fnstenv
pop
call
push
xchg
out
sbb
pop
ljmp
popa
xor
cmp
sbb
lods
cmp
xor
stos
mov
lcall
push
xlat
add
in
je
scas
sti
push
cmc
sbb
inc
sub
or
dec
pop
pop
adc
fcmovbe
insl
mov
je
mov
mov
cmp
andb
xor
ss
fs
xorl
jmp
dec
fwait
stos
jl
insb
mov
lea
adc
push
mov
mov
outsb
pusha
pop
mov
repz
int3
fwait
sbbb
mov
jns
les
loopne
mov
mov
lea
jb
dec
push
imul
pop
pushf
or
push
mov
test
iret
push
mov
pushf
cld
js
aaa
pop
leave
iret
std
xor
mov
cmc
jae
cmp
insl
je
outsl
jecxz
pop
mov
cmp
out
js
outsl
pop
jnp
xor
ss
lahf
leave
fs
jns
clc
aaa
stos
sti
jg
jl
cmp
stos
sub
add
test
mov
and
push
int3
pop
jno
hlt
push
loope
jbe
push
test
inc
mov
mov
bound
or
aas
xchg
lcall
inc
into
sti
mov
insw
xchg
cmpsl
xchg
scas
jecxz
lods
mov
pop
leave
faddl
arpl
shlw
xchg
mov
leave
mov
movsl
pop
fisttpll
jns
daa
push
adc
mov
loopne
dec
mov
mov
xchg
pop
test
stos
xchg
pop
inc
lods
push
nop
subl
inc
xchg
cmp
xchg
jnp
mov
mov
je
jnp
vpminub
inc
scas
test
mov
fnstcw
mov
ja
jo
push
adc
jecxz
in
mov
jecxz
leave
andb
test
jns
jae
aas
mov
cmpsl
test
sbb
push
jns
xor
and
int3
inc
cmc
mov
in
std
mov
leave
daa
jo
sarl
mov
sahf
repnz
pop
xlat
sbb
push
andb
imul
mov
inc
sub
dec
jp
xlat
push
mull
inc
dec
push
inc
jb
jl
xchg
out
mov
mov
mov
jo
stos
in
xor
sarl
dec
data16
or
and
and
sbb
sbb
decb
enter
jo
movsb
and
cmp
outsb
fistpl
bound
cld
mov
outsl
xor
mov
lahf
xor
les
inc
outsl
js
inc
inc
js
sahf
mov
xor
fcoms
inc
mov
jge
leave
inc
pop
shl
sub
mov
push
cmp
xchg
push
push
pop
clc
lods
mov
jp
aas
lods
cwtl
xor
inc
mov
cltd
pop
mov
cmpsb
mov
mov
aam
arpl
aaa
pop
fsubl
addb
cmp
ret
mov
negb
sbb
inc
cltd
xchg
sub
mov
in
mov
sbb
inc
mov
sub
or
push
dec
pop
insl
sub
cltd
push
cmp
adc
out
ficomps
outsb
scas
mov
cmp
add
xchg
popl
xchg
stos
mov
xchg
sbb
push
test
mov
jae
xchg
dec
ret
xorb
sahf
dec
dec
mov
pop
sbb
inc
fistps
pushf
cmp
lea
inc
orl
dec
std
pusha
shl
psubb
data16
jnp
cwtl
xor
test
clc
enter
out
das
mov
sub
pop
js
aaa
data16
xor
popa
ja
loop
shlb
xor
cmp
loopne
push
icebp
mov
pop
rclb
add
inc
mulb
inc
frstor
outsl
in
xchg
sbb
cmpsb
cwtl
xchg
je
je
rcll
aam
call
xor
cmp
shrl
dec
push
ss
lret
fisttps
mov
push
xor
adc
push
aaa
push
xchg
mov
jb
iret
mov
pop
dec
into
outsl
fwait
scas
adc
test
pop
int3
lea
std
repnz
push
and
push
mov
test
mov
int3
in
cs
js
imul
jl
jo
je
orl
pusha
scas
pop
xor
pop
jnp
pop
or
or
mov
lods
mov
cmp
ss
fs
lods
icebp
out
aaa
sahf
jg
jmp
or
shlb
stos
xchg
neg
ret
test
mov
jb
out
mov
lea
cmpsb
out
test
add
xchg
lret
out
gs
pop
mov
int
loope
gs
nop
and
adc
adc
mov
or
scas
test
out
loopne
pop
ret
cmpsb
inc
xchg
or
jl
js
shlb
int
and
in
mov
jns
sub
push
insb
xor
mov
pusha
xchg
mov
lods
cmp
pop
movsb
hlt
fwait
outsb
pop
fcoms
aam
pop
out
test
je
or
loope
je
ss
sub
cltd
orl
hlt
into
in
push
hlt
ljmp
outsb
test
sahf
jl
mov
xchg
es
jl
cli
add
pop
insb
test
push
shll
inc
jl
addb
jns
data16
and
jns
repnz
sahf
pop
and
jl
pop
imul
scas
mov
lock
popf
mov
repz
mov
inc
arpl
push
mov
pop
aaa
arpl
repnz
aas
push
pusha
add
hlt
movsb
int3
mov
ficoms
cmp
movsl
cmc
lahf
jae
icebp
movsb
adc
and
je
mov
fnstenv
add
loope
mov
scas
mov
mov
dec
jnp
jl
pop
mov
out
lahf
mov
sub
pop
out
push
leave
sahf
cmp
inc
push
stos
test
data16
lods
pusha
jecxz
fidivrs
mov
pop
fcoms
jne
jnp
dec
aas
xchg
jns
loop
add
xor
test
out
ret
jne
es
lock
mov
imul
mov
out
mov
cld
hlt
loopne
mov
rcll
push
pop
loopne
jecxz
imul
ja
or
loop
xlat
fcmovnbe
lret
mov
mov
push
fwait
xor
lds
mov
cmpsl
imul
in
test
movsl
pop
sbb
pop
adc
mov
call
in
push
shrb
cmp
mov
cmpsb
mov
popf
cld
das
imul
and
xor
mov
bound
addr16
mov
imul
bound
jns
popa
mov
push
mov
xchg
imul
cwtl
xor
add
inc
lock
arpl
shrb
pop
jno
jp
xchg
pop
and
push
pop
movsl
arpl
jo
jle
xor
sbb
dec
pop
pop
mov
dec
push
sub
push
and
pop
ss
jecxz
cmpsb
mov
je
jp
and
shrb
pop
mov
je
mov
bound
fldcw
xchg
lahf
mov
inc
cmpsl
xor
out
jb
pop
aas
outsl
movsl
outsb
mov
jns
fistpll
xor
and
pop
push
pop
jge
mov
fisttpl
aas
pushf
aas
sbb
loopne
sbb
les
and
jb
jnp
rorb
pop
xor
pop
mov
add
inc
or
ficompl
xor
add
movsl
mov
mov
mov
dec
movsb
lods
pop
inc
jecxz
dec
mov
mov
add
xchg
mov
enter
outsb
xchg
mov
rcrb
cld
pop
cmp
push
push
jo
outsb
push
mov
or
popf
inc
popf
cmpsb
dec
int3
inc
inc
clc
or
daa
subb
add
lahf
jns
mov
cmpsl
pop
ss
addr16
mov
cltd
ss
pop
pop
call
subb
popf
jne
popa
xor
das
mov
stc
sbb
out
cmc
cmpsl
inc
arpl
jp
jo
pop
ljmp
mov
mov
jl
cmp
adc
dec
popa
loope
cmpsl
xchg
push
mov
or
pop
mov
icebp
ret
jp
sub
test
xchg
push
mov
inc
lods
mov
mov
dec
popa
popa
std
push
movsb
push
sub
and
cmp
jo
icebp
xchg
movsb
je
jns
repnz
stos
sub
int
stos
outsb
mov
jl
pusha
mov
cs
mov
shlb
js
inc
jge
pop
mov
divb
out
push
into
jge
sbb
jae
arpl
bound
mov
jb
sub
lcall
int3
dec
adc
mov
ret
loop
repz
movsl
mov
out
nop
test
mov
fs
mov
stos
aas
stos
jo
xchg
pusha
jb
inc
int3
in
mov
insl
dec
sbb
adc
testb
enter
jg
ret
sbb
mov
mov
lods
imul
mulb
movsb
dec
repnz
xchg
jmp
xor
cmc
cmpl
jbe
lods
mov
add
mov
jo
mov
movsb
dec
mov
mov
loop
aaa
mov
push
shrb
aaa
mov
lock
ljmp
mov
loope
rorb
aam
iret
rcll
call
inc
rolb
in
sbbb
jg
lea
inc
lcall
cmp
stos
mov
lea
movsb
out
jb
pusha
shlb
scas
lods
inc
cwtl
daa
pusha
adc
out
fcoml
xchg
outsl
daa
jae
mov
insb
pop
pop
dec
mov
dec
cmp
pop
pop
arpl
test
mov
call
mov
in
bound
adc
pop
icebp
movsb
mov
or
sbb
add
das
repnz
mov
jo
mov
sub
das
aam
movl
loope
mov
movsb
fmull
mov
sub
test
repnz
sbb
lret
sbb
test
mov
pop
cld
dec
add
mov
xchg
add
cmp
mov
fildll
and
insl
in
mov
icebp
mov
in
xor
enter
imul
adc
xchg
push
in
adc
push
mov
int3
arpl
jbe
insb
out
add
jg
pusha
or
shlb
push
xor
and
fwait
movsb
addb
mov
in
orb
or
mov
dec
fwait
outsl
leave
sbb
pushf
mov
add
xor
int3
or
lea
packsswb
xchg
push
xchg
mov
pop
mov
out
shlb
dec
mov
pushf
jb
mov
xchg
addl
or
mov
addr16
fiaddl
sbb
cmpsb
xor
mov
xchg
mov
test
jo
cmp
cmpsl
insb
jnp
pushf
dec
test
outsb
add
jae
notl
mov
pmullw
xor
outsb
dec
inc
pop
push
mov
les
mov
jns
sub
mov
mov
stos
dec
movsb
arpl
repz
out
les
addr16
stos
daa
es
lods
int3
mov
stos
cmp
mov
ja
fisttpl
rcll
jb
scas
mov
pop
push
mov
bound
or
pop
imul
dec
xchg
or
inc
adc
popf
xchg
mov
and
xor
jo
pop
add
adc
insb
leave
cmp
aam
js
movsb
sub
add
or
add
scas
add
gs
xor
pusha
bound
scas
mov
sub
push
dec
fisttps
or
push
add
fdiv
jecxz
mov
loop
lcall
mov
movsl
or
push
arpl
inc
imul
repz
in
shlb
cld
stos
leave
xchg
popf
and
fstl
fistpl
xchg
push
pop
add
movsb
xchg
fstps
pop
push
shlb
or
jmp
ss
int3
push
xchg
in
pop
lcall
ss
pushf
sahf
xchg
jmp
xor
xor
fidivrs
xchg
xor
pop
dec
movsl
adc
fdivr
dec
adc
lock
pop
movsb
jne
push
mov
cmp
popa
pop
movsb
mov
das
add
xchg
push
pusha
mov
icebp
cmp
xorb
jo
mov
xchg
lock
sub
xchg
xchg
sbb
inc
popa
and
int
aas
dec
out
ret
jle
jg
xchg
add
sahf
loop
cmp
insb
cmp
shl
xchg
nop
int3
inc
or
inc
mov
sbb
pop
jge
andl
add
ret
xor
cltd
jns
sub
hlt
dec
out
das
hlt
arpl
insb
loope
xchg
push
movsb
lods
inc
test
adcl
xchg
mov
jo
or
cmp
cmp
je
pop
cmp
rorl
mov
ja
in
pushf
inc
flds
mov
ficomps
sbb
push
xchg
xchg
push
mov
pop
inc
ds
jae
enter
inc
mov
repnz
or
addl
fs
push
xor
je
scas
adc
aaa
ret
add
cmp
into
push
jo
in
int3
stos
out
enter
jo
inc
and
jnp
lock
cmc
pop
in
add
fdiv
pop
rolb
loopne
test
xlat
xchg
cmp
and
mov
mov
mov
mov
pop
sarb
and
add
push
int3
enter
daa
cmp
rcrb
das
jmp
and
dec
mov
enter
movsl
imul
mov
xor
xor
or
mov
sahf
fimuls
push
xor
cmp
fmuls
cmp
sub
pushf
sahf
movsl
jo
daa
pop
into
loop
adc
outsl
mov
mov
xchg
andb
pop
leave
pop
xchg
inc
mov
pop
and
pop
mov
fwait
int3
sub
test
stos
movsb
loop
and
stc
sbb
cmpsl
jbe
sbb
or
push
sbb
mov
push
orb
mov
xchg
jbe
imul
adc
cli
enter
out
ljmp
xchg
pop
ljmp
mov
inc
mov
pusha
bound
and
pop
lret
lea
pushf
mov
pop
mov
rcll
cmp
insl
fs
movsb
xchg
in
pop
bound
xchg
sub
mov
outsl
adc
mov
xchg
imul
outsl
adc
adc
loope
cmp
sahf
xor
pop
sbb
push
dec
mov
and
sbbl
xchg
lea
stc
sbb
sbb
jb
add
push
lods
das
je
sub
mov
lods
dec
mov
jl
dec
test
arpl
pop
pop
cmpsl
xor
lds
dec
jge
bound
mov
sbb
jecxz
dec
int3
push
jg
mov
adc
mov
lcall
je
int3
orl
push
fs
xor
ljmp
pop
test
les
push
or
sti
sub
rol
loopne
jmp
pop
lahf
into
iret
xchg
adc
test
cwtl
sub
mov
dec
or
js
idivb
sub
mov
inc
test
fbstp
lods
int3
dec
mov
sbb
outsl
jo
xchg
mov
in
imul
addr16
stos
int3
and
cltd
xor
loop
inc
test
pop
bound
int3
push
jnp
xlat
das
push
mov
lods
dec
out
dec
sbb
inc
adc
xor
add
enter
cmpsb
int3
imul
sbb
addb
shr
push
jge
xor
mov
sub
sbb
jns
jb
xchg
jnp
int3
popf
arpl
jns
jbe
add
insb
lret
fisttpl
pop
dec
sti
pop
test
jmp
mov
int3
jp
xchg
xor
enter
jbe
xor
test
mov
movsb
int3
sbb
and
in
hlt
push
lods
in
cmp
rclb
call
lret
mov
mov
out
ss
out
mov
inc
jnp
cmpps
sub
ja
in
lea
pushf
aaa
or
outsb
js
adc
je
mov
outsb
pop
loope
fistps
cmc
mov
mov
mov
mov
sbb
loop
int3
and
or
xchg
xchg
repnz
int3
movsl
mov
cmp
jmp
insb
cltd
insb
loopne
add
int3
scas
mov
dec
jle
pop
mov
fistps
cmp
stos
imul
cmp
or
xchg
push
or
and
push
mov
cld
scas
mov
cmp
clc
movhps
pop
or
fdivl
jns
aaa
and
sbbl
mov
imul
xchg
add
sub
pushf
jmp
xchg
fistpll
nop
mov
pop
or
imul
xchg
popa
popf
ret
push
lock
jno
js
push
popa
pusha
and
outsl
mov
mov
push
repnz
fcoms
loop
adc
addr16
mov
or
in
daa
xor
ret
aas
xchg
jae
sub
push
add
xor
dec
movsl
jnp
movsl
xor
pop
pop
jg
pop
sub
bound
inc
aas
dec
lods
loope
cld
xchg
mov
sbb
lods
shlb
imul
lock
and
and
inc
jns
and
inc
lret
sub
leave
sbb
sbb
sbb
stos
je
mov
es
pop
mov
push
cmp
pop
cmc
jecxz
test
jle
mov
jbe
cmp
pop
mov
jl
mov
cmp
mov
aaa
mov
sahf
outsl
xchg
stos
add
out
movsb
pop
xchg
js
pop
in
or
xor
push
lahf
js
push
loopne
or
repnz
mov
addb
je
lret
mov
mov
pop
mov
lods
mov
push
inc
fldl
inc
mov
add
out
das
sbb
dec
mov
sub
push
pop
push
outsl
mov
pop
jo
fnstsw
jmp
shlb
insb
ja
lcall
cmp
repz
arpl
jg
jo
addl
sub
pop
xchg
fldt
outsb
loopne
push
and
in
outsb
lods
je
popa
arpl
mov
data16
mov
sub
mov
test
cmpsb
pop
dec
mov
fisttps
push
inc
cmp
pop
stos
push
ljmp
scas
divb
int3
mov
jmp
and
pop
sub
mov
push
lods
cmc
xchg
sbb
jo
xchg
pop
loopne
push
cmp
into
shlb
test
dec
and
decb
sbb
movsl
das
out
sbb
popf
inc
ja
push
leave
loopne
movsb
fdivs
mov
xor
and
cmp
xchg
add
and
lea
jmp
divb
int3
sub
int
enter
lahf
arpl
xor
xchg
xchg
xor
lret
dec
inc
mov
push
adc
outsb
stc
pop
test
mov
aam
add
mov
das
arpl
lods
loopne
cmp
in
pushf
cs
adcb
dec
sub
sub
notl
mov
cmp
xchg
movsl
mov
cmp
adc
insb
jae
dec
fs
jne
ret
invlpg
call
push
cmpl
pop
cmpsl
push
lea
push
push
out
push
mov
lcall
pop
mov
jnp
icebp
int3
add
sub
push
add
push
mov
popa
nop
bound
or
dec
aas
push
lock
arpl
jae
cmp
test
or
sbb
and
cmp
imul
mov
orb
imul
mov
int3
inc
mov
sub
mov
jae
movsl
pusha
xor
xchg
repz
call
movsb
bound
insl
fs
sbb
xor
xchg
stos
xlat
loope
or
add
lea
incb
jb
in
movsb
pop
dec
call
rorb
mov
int
sub
insb
jne
inc
hlt
jge
jmp
outsb
add
lods
add
arpl
xor
stc
push
pop
jb
nop
mov
lock
test
int
jns
sbb
aas
int3
dec
iret
push
jo
push
fnstenv
xchg
jno
imul
mov
push
jmp
leave
mov
dec
sbb
mov
jecxz
or
and
xlat
and
jo
push
mov
cmc
push
lret
mov
mov
test
cmpsl
cmp
pop
mov
pop
jg
test
pushf
mov
int3
mov
cwtl
push
leave
test
xchg
les
arpl
cmp
mov
mov
jns
aaa
mov
inc
leave
cltd
mov
push
mov
mov
lods
into
pop
xchg
call
adc
loop
stos
xlat
lods
aad
push
in
xchg
adc
in
pop
and
push
add
cli
rcrb
jne
into
dec
shrl
int3
daa
negb
jecxz
adc
popf
movsl
xor
cmp
and
popf
inc
mov
into
fwait
gs
pop
xor
sub
push
add
pop
loop
sub
lds
push
or
dec
add
aas
add
push
outsb
pop
xchg
lods
fs
xor
pop
pop
stos
int3
enter
js
mov
decb
sbbl
add
lock
add
sbb
je
int3
jmp
ja
lods
cmp
dec
xchg
push
adc
adc
mov
lods
pop
mov
xor
das
fs
jle
repnz
mov
cmp
mov
mov
outsb
inc
jb
ret
xor
int3
mov
addr16
sub
clc
cli
dec
out
sub
and
xor
js
add
stos
pusha
mov
popa
fucomp
mov
pop
mov
push
pushf
push
xor
insb
testl
xchg
xor
mov
sbb
repnz
mov
and
or
outsl
shrl
add
xor
mov
sbb
inc
popa
xor
test
lock
xchg
add
sub
in
pop
mov
sub
mov
mov
mov
mov
add
scas
rcll
je
leave
dec
inc
cld
add
and
fucomip
push
lahf
aaa
lahf
shll
jo
outsb
pop
jo
xor
push
icebp
je
scas
bound
push
cmp
arpl
push
adc
mov
arpl
and
das
xor
xor
or
push
jo
adc
mov
jns
mov
dec
mov
push
insl
sbb
sbb
or
xor
inc
jb
lahf
mov
incb
daa
mov
es
ret
mov
mov
jns
mov
stos
pop
mov
pop
pop
sub
cld
lock
xchg
mov
mov
mov
pop
arpl
loopne
subb
inc
pop
fcompl
push
xor
xor
xor
movsl
int3
in
mov
jo
mov
in
xor
mov
stos
cld
roll
push
sahf
xchg
mov
movsb
xlat
sub
sub
shrb
pop
mov
cmp
jb
xchg
cmpb
lahf
int3
xchg
addl
mov
sub
cs
fwait
jge
inc
or
mov
xorl
je
fwait
xchg
int3
repnz
xchg
mov
int3
or
cwtl
jne
int3
out
xchg
jo
icebp
xor
adc
rcrl
xchg
push
xor
outsb
je
sbb
sti
fwait
push
push
lock
insb
je
and
add
dec
hlt
jecxz
push
xor
or
ficompl
and
in
mov
outsl
popf
push
xchg
sbb
jae
jp
xchg
movsb
test
ret
jo
sub
mov
pop
xor
push
sub
popa
cmc
mov
push
orb
mov
lea
loopne
test
cld
xchg
fdivrl
subl
sub
scas
pop
fs
push
mov
push
mov
mov
int3
bound
pushf
jb
aam
fs
xchg
lcall
imull
mov
jb
insb
and
cmc
push
mov
or
xlat
pop
add
in
gs
cli
sub
aam
inc
push
insb
sbb
pushf
fs
aad
adc
jae
jns
push
sbb
pop
fucomp
mov
outsb
push
insb
push
fs
xlat
fwait
and
mov
popa
sub
push
jo
cmp
popf
out
jmp
sar
xchg
jmp
jae
jp
mov
pop
fs
add
pop
mov
or
js
int3
jmp
dec
je
push
jl
push
stos
xchg
adc
jecxz
and
xor
imul
data16
mov
mov
ficoms
pop
js
inc
cmp
in
test
loope
dec
mov
jl
loop
lods
arpl
data16
mov
mov
outsl
adc
lcall
cwtl
or
lahf
mov
push
into
imul
jb
jge
jae
dec
xor
adc
inc
cmpsb
jbe
iret
fs
pop
mov
fdivl
loop
mov
mov
xchg
adcl
or
and
aas
and
mov
inc
mov
jnp
push
dec
pop
stos
popf
inc
movsb
lret
gs
mov
loope
fcomps
mov
int3
lcall
sub
mov
movsl
cmp
xor
arpl
lods
inc
cwtl
js
mov
pandn
test
inc
jns
out
mov
adc
bound
movsb
xor
sub
inc
nop
repz
or
xchg
pop
mov
in
in
ds
out
dec
dec
pop
cld
xchg
mov
sub
mov
popa
jmp
xchg
das
sub
mov
repz
cmp
pop
repnz
cwtl
and
push
nop
or
pop
or
xor
sub
popa
lret
fidivrl
mov
popa
mov
fisubrl
pop
push
jp
icebp
mov
fabs
push
in
xor
loop
xchg
inc
jle
pop
xchg
cld
push
mov
push
rcr
aam
pop
enter
pop
aad
jecxz
sahf
mov
shl
cmc
scas
das
sub
jmp
jns
mov
rorb
stc
daa
rcr
fldl
test
mov
test
into
sbb
comiss
xor
insb
int3
and
pop
sti
mov
hlt
leave
out
pop
cltd
das
push
aam
rclb
outsl
mov
call
outsl
add
insl
jns
ss
sbb
in
cltd
xchg
out
add
movsb
jns
aaa
stos
sar
fs
jg
ja
mov
jo
push
xor
mov
adc
ret
pop
outsb
mov
lods
mov
jo
sub
sub
or
cwtl
divps
inc
stc
pop
mov
add
bound
xchg
xor
lea
loop
das
pop
jo
popa
lods
mov
and
insb
popl
mov
push
pushf
xchg
xor
cwtl
in
push
sahf
jl
daa
jg
fnstcw
lods
jmp
mov
dec
ss
pushf
popl
dec
push
shlb
adc
cli
arpl
outsb
insb
mov
fmuls
jnp
ret
sub
data16
arpl
mov
or
imul
sbb
push
pop
aas
stc
pop
in
fsubl
cli
stos
xor
movsl
xor
fcomps
dec
push
push
stos
inc
mov
sbb
push
cmpsb
push
adc
pop
sub
rorl
mov
out
push
gs
loop
mov
xchg
pop
mov
mov
jp
adc
out
mov
mov
jecxz
jbe
inc
push
jnp
xor
sahf
xchg
jnp
ss
stc
sub
rcr
cmpsb
add
push
mov
inc
imul
or
shl
xlat
mov
cwtl
xorb
sub
enter
jle
jns
and
xchg
or
aaa
xchg
inc
pushf
dec
je
aaa
push
rcrl
je
mov
orb
sti
sti
sbb
or
mov
or
ja
insb
cmpsl
cmc
shll
adc
add
ja
in
mov
mov
sub
mov
mov
in
inc
and
es
adc
popa
xchg
sahf
into
fnstenv
jmp
xor
sbb
xchg
mov
aas
cltd
jnp
lahf
or
ror
xchg
jecxz
test
lods
inc
jmp
xchg
and
leave
popl
fisubs
mov
arpl
pop
inc
lods
imul
ds
inc
cmpsb
fs
xchg
test
pop
xor
imul
les
popa
adc
flds
test
into
arpl
xchg
es
mov
and
push
push
pop
inc
das
and
mov
jmp
dec
mov
mov
xchg
jp
push
fcomps
sbb
out
ss
and
jae
mov
push
int3
in
mov
imul
and
std
jmp
test
adc
jl
fwait
aad
into
xchg
insb
mov
int3
sub
outsb
imul
add
mov
inc
stos
dec
iret
mov
pop
stos
fiaddl
sbb
pop
mov
dec
fiadds
faddl
test
loopne
rcrb
mov
mov
push
daa
insb
pop
xchg
test
test
mov
adc
cwtl
int3
ja
incb
mov
aaa
xchg
mov
jp
inc
les
push
and
mov
arpl
out
ss
insl
lods
mov
in
xor
ljmp
dec
in
das
fisubrs
jp
mov
pop
fisubrs
sbb
push
add
pop
dec
and
push
sbb
sbb
mov
jl
add
fwait
sbb
mov
in
push
in
sub
jecxz
mov
je
push
add
pop
mov
sahf
jge
sbb
fstl
sbb
cld
cmpsl
xchg
sub
popa
mov
scas
jl
and
fdivp
push
cmp
sub
xlat
out
xchg
or
cmp
movsb
xchg
adc
inc
jg
dec
or
arpl
aas
sarl
fnstcw
lea
loop
dec
mov
out
and
lods
mov
mov
cmpsb
out
mov
xchg
xchg
and
lcall
jo
sti
jb
mov
scas
pop
cmp
xchg
pop
fisttpl
insl
test
mov
cmpsb
stos
lcall
mov
pushf
push
int3
or
sbb
jb
pop
add
stos
adc
xorl
xchg
add
jle
add
ret
add
fisubl
inc
push
and
and
pop
mov
pop
popf
xor
cmp
mov
mov
aam
jno
lea
jne
das
jmp
mov
xchg
mov
enter
add
jl
jnp
xor
xor
lods
lahf
aas
push
imul
push
mov
mov
leave
mov
pop
int3
mov
dec
xor
push
mov
sahf
fldcw
xor
jecxz
dec
nop
je
mov
int3
or
ret
sub
jp
out
je
lods
mov
and
mov
test
mov
sahf
loope
out
nop
icebp
jmp
jns
scas
sahf
into
aaa
xor
lret
and
std
mov
push
sub
sahf
push
daa
test
cmp
mov
lret
mov
nop
fmulp
cld
add
xchg
fisttpl
negb
test
lcall
sub
sbb
xchg
repnz
jecxz
or
and
jnp
sarb
sub
sbb
xchg
mov
or
iret
stos
inc
out
rep
mov
leave
fwait
mov
pop
imul
mov
mov
aaa
ret
cltd
sub
sub
outsb
gs
mulb
jns
adc
nop
lods
cmp
leave
xchg
ss
pop
sub
xchg
xor
cmpsl
mov
subb
cmp
pop
sbb
jl
in
fistpll
sti
sub
fcmovnb
sub
in
sub
in
sti
out
pop
mov
push
into
in
jb
in
imul
mov
jl
cltd
aam
push
add
dec
js
lret
sub
jns
jmp
inc
fisttps
les
loopne
scas
push
jns
sub
mov
mov
mov
shr
dec
lods
lret
aaa
cwtl
jb
mov
jecxz
je
cwtl
jg
xor
les
sahf
sub
jge
aaa
sub
adc
cwtl
add
sub
fcmovnbe
nop
lcall
cmp
xchg
daa
out
mov
call
sarb
test
mov
mov
push
mov
push
or
xchg
out
div
jp
mov
add
inc
jbe
movsb
std
scas
inc
mov
xchg
outsl
jno
ja
gs
inc
lods
aas
cmpsl
and
push
imul
mov
imul
hlt
popa
fstl
push
dec
cmp
dec
sbb
outsl
arpl
cmpsb
mov
xchg
add
int3
cltd
js
ss
fs
xchg
ror
jp
inc
fcompl
add
add
mov
dec
xor
test
inc
xchg
pop
xor
pop
or
fisubs
cmc
mov
std
cmp
dec
mov
les
stc
add
enter
add
int3
sub
jo
sbb
icebp
jbe
out
vmovups
xchg
cltd
jmp
mov
or
sahf
lods
dec
and
into
mov
push
pop
pop
pushf
enter
fbld
shlb
movsb
add
pushf
xor
add
ds
mulb
adc
pop
imull
out
jne
test
imul
xchg
dec
push
outsb
dec
xchg
cli
mov
and
int
fwait
int3
scas
icebp
mov
pusha
dec
mov
scas
mov
mov
loop
aam
lret
leave
xlat
mov
shll
pusha
fbld
ret
add
test
push
adc
dec
test
dec
xor
fwait
ret
lods
xchg
inc
dec
je
sub
lea
cmp
mov
xor
mov
movsb
movsb
jo
jae
stos
dec
movsl
inc
mov
push
lds
out
imul
repz
or
out
clc
mov
mov
push
out
push
mov
or
adc
rol
into
mov
or
mov
or
jnp
mov
daa
dec
fidivs
cli
push
and
mov
cmp
insl
imulb
jnp
in
cltd
pop
xor
mov
das
and
jno
xor
movsl
pop
repnz
shlb
sbb
mov
fcompl
mov
cmp
sbb
out
lret
mov
adcb
cmpsl
filds
xchg
mov
loope
leave
or
mov
das
cwtl
mov
push
fildll
loopne
subb
mov
mov
leave
jns
ja
out
add
outsb
cmpsb
pop
and
dec
sbb
shll
das
inc
adc
jo
ljmp
xor
nop
pop
shll
leave
pop
lods
loopne
push
mov
mov
jp
subb
pusha
and
repz
xchg
cwtl
addr16
pop
data16
fisubs
idiv
sarl
cli
cmp
adc
test
int3
or
js
jo
xor
inc
testl
cwtl
scas
or
xor
rcr
mov
stos
aas
test
mov
jae
out
inc
movsl
loopne
pop
mov
mov
lods
xor
mov
stos
mov
cmpsl
lock
aam
outsb
xor
cli
addb
lods
add
dec
mov
xor
es
test
movsb
mov
add
xor
sbb
dec
movsb
test
pop
test
pop
outsl
mov
cmp
jecxz
pop
arpl
sbb
and
mov
push
scas
mov
mov
ljmp
jae
cmp
repnz
lret
adc
or
pop
mov
stos
bound
lret
lret
mov
in
pusha
lock
lods
dec
popa
repz
pop
scas
popa
int3
push
or
sahf
and
testb
xchg
mov
mulb
mov
call
sub
jg
jns
add
fwait
addr16
je
mov
cli
inc
pop
js
and
repnz
mov
sub
popa
sub
jns
cmp
fstpl
inc
outsl
movsb
rol
test
outsl
mov
hlt
dec
and
cmp
stos
dec
pop
inc
cld
xchg
scas
shlb
jg
ja
adc
pop
inc
pop
cmpsb
jl
xlat
imul
mov
test
jg
and
ss
inc
test
mov
pop
fs
iret
cli
xchg
push
cmpsl
jb
bound
mov
in
test
or
test
inc
push
push
push
les
mov
test
bound
testl
mov
in
mov
cmp
ljmp
mov
femms
movsb
add
test
aad
aas
ss
call
xlat
and
push
or
inc
stos
lret
xchg
pop
fwait
ljmp
pop
inc
dec
fldcw
xlat
negl
fidivrl
mov
inc
inc
jo
lods
mov
xlat
adc
enter
pop
xlat
xchg
cmp
fistl
lcall
pop
je
sub
adc
cli
adc
test
dec
push
dec
cmc
ss
jmp
enter
sub
jle
jb
mov
mov
jmp
in
jp
jge
popf
jp
jp
fdivs
fldcw
faddl
push
scas
jg
inc
mov
add
jge
mov
jbe
aaa
lret
outsl
mov
push
fs
sub
js
push
or
xchg
mov
pop
sbb
sub
xchg
mov
sbb
push
popa
ret
xchg
repz
jbe
jmp
xor
pop
mov
xchg
imul
sti
jns
lods
int3
sbb
lcall
push
inc
mov
fs
arpl
jne
in
xor
int3
pop
mov
sbb
loop
xor
aad
addr16
loopne
add
sti
rsm
push
dec
dec
pop
pop
push
outsb
in
cmpsl
repnz
mov
je
aam
imul
pop
mov
mov
xor
movsl
push
loopne
sub
inc
jmp
jecxz
pop
or
outsb
aam
test
gs
jecxz
leave
cmp
aas
test
pop
jo
mov
sub
pop
js
daa
filds
mov
test
mov
in
imul
sbb
loopne
scas
pop
cmp
in
je
in
cld
hlt
fdivs
mov
jl
int3
sbb
inc
pushf
mov
int3
repz
inc
mov
popf
mov
pop
in
push
in
mov
out
hlt
sub
jns
sbb
lock
movsl
in
outsb
pop
lods
adc
cwtl
es
sub
cmp
xchg
lds
ret
inc
xor
jae
loope
jne
jle
push
adc
je
es
pop
xchg
mov
mov
les
push
jge
icebp
xor
or
pop
aas
pop
push
add
out
push
test
fs
cmpsl
mov
add
pop
mov
and
aaa
and
push
xchg
rcl
dec
cmc
cld
movsb
and
pop
jns
dec
inc
minps
jbe
pop
mov
fs
cmp
xor
push
lods
lahf
mov
cmp
stos
sbb
push
movsb
movsb
xchg
mov
sub
les
std
mov
mov
xchg
inc
pop
movsb
xchg
xchg
arpl
fs
push
or
sub
cmp
ljmp
cs
mov
shlb
mov
mov
in
mov
mov
mov
sahf
mov
add
and
nop
jns
and
stos
ret
and
mov
mov
rcr
idivl
sub
sbb
mov
mov
lret
sbb
push
mov
mov
hlt
pop
shl
pop
lock
imul
scas
lcall
test
test
dec
aam
mov
int3
add
fadds
subl
dec
xor
cltd
or
or
adc
in
cmc
xchg
xorl
sub
and
rclb
lret
hlt
sbb
dec
aas
mov
and
in
adc
xchg
push
sub
leave
movsb
cmp
push
fisubrl
in
jne
xchg
cmc
sbb
gs
jo
arpl
int3
leave
jo
xchg
push
das
stos
aas
aad
and
sub
bound
mov
push
sub
arpl
inc
inc
insl
add
mov
pop
fs
xchg
sub
xchg
js
push
outsb
push
sbb
or
xor
shl
movsb
push
out
imul
cmp
add
mov
icebp
inc
cmpsl
rcrb
sbb
in
imul
je
pop
fidivrs
leave
and
je
clc
pop
lock
loop
mov
xchg
cmp
rcrb
insl
sbb
xor
cmp
aas
stos
push
in
stos
mov
adc
outsb
pop
andl
adc
stos
ret
rclb
mov
test
push
pop
sbb
mov
sti
imul
and
jo
sbb
pop
xchg
test
adc
mov
jno
stos
lea
repnz
ficoml
mov
cmc
int3
and
xchg
fildl
andl
adc
add
imul
out
pop
and
sahf
aam
cmp
test
addr16
xchg
iret
insb
mov
push
push
adc
clc
xchg
mov
sbb
cmp
repnz
jl
pop
das
sub
sti
into
pop
mov
popa
mov
cwtl
cmp
mov
jl
test
ljmp
dec
orb
loope
movsb
cs
xchg
clc
adc
subb
repz
frstor
push
sbb
arpl
gs
sub
mov
cmp
daa
mov
aaa
sub
mov
cwtl
mov
xchg
lahf
cmp
int3
in
aaa
jb
popf
leave
stc
inc
or
popf
jns
cmp
imul
popf
mov
and
dec
and
jge
stc
aas
cltd
adc
mov
std
mov
xlat
sub
mov
int3
aaa
std
xor
cmp
repnz
jns
test
sbb
mov
daa
lock
lds
pushf
int3
jnp
cmp
and
xor
pop
xchg
stc
das
and
negl
lock
mov
int3
les
inc
movsl
scas
movsb
shl
sub
add
cli
or
and
mov
sub
jp
lea
pop
stos
mov
lods
mov
imul
xchg
adc
xor
jge
cmpsb
inc
outsl
xchg
mov
cltd
lcall
dec
xchg
push
add
and
sbb
sbb
ja
mov
xchg
shll
imul
outsb
insb
sub
je
cmc
dec
js
and
js
nop
outsb
rcll
sub
jo
int3
jecxz
lock
mov
outsl
aad
daa
jg
test
sub
scas
add
sbb
movsb
daa
mov
movsb
fs
dec
idivl
mov
sub
rolb
xchg
mov
test
ret
fldenv
sarb
insl
popf
xchg
mov
lret
lret
sub
cwtl
add
imul
outsl
mov
aam
lret
dec
sbb
cmp
dec
pushf
jecxz
stos
bnd
popf
cld
jo
loopne
push
xchg
jl
bound
jno
clc
push
xchg
mov
imul
test
push
xchg
push
imul
jns
sub
pop
leave
bound
mov
in
jae
sbb
dec
outsb
pop
sti
xor
mov
mov
adc
mov
pop
mov
adc
cmpb
cmp
cld
push
xchg
aas
mov
push
sahf
cmp
movsb
fs
sub
jno
pusha
lret
mov
cmc
imul
sbb
adc
and
xor
fisttpl
stos
loopne
leave
mov
xchg
and
out
je
lret
sub
sub
outsl
scas
lods
test
cmc
stos
repnz
je
sbbb
jmp
xchg
lock
popl
subb
mov
aas
push
mov
inc
clc
sti
xchg
outsl
push
mov
mov
sahf
push
mov
xlat
es
cwtl
in
sbb
sub
mov
add
leave
or
cmpsl
mov
aad
in
enter
mov
mov
cld
jp
inc
inc
cmp
fwait
cmp
into
out
inc
lds
cmpsb
cmc
sub
mov
daa
cli
jge
loop
std
or
xchg
jl
repz
imul
pop
movsl
mov
push
xchg
add
fs
pop
inc
addl
and
sub
sub
decb
pop
js
sub
pop
imul
pop
in
sahf
movsl
sub
push
mov
popf
sbb
mov
lcall
pop
mov
push
mov
nop
insb
cmp
xchg
pop
fs
shrl
pusha
xor
dec
movsb
enter
hlt
push
subb
jl
int3
xchg
xlat
mov
test
fmull
das
jg
sub
nop
mov
lret
lock
sbb
pop
fs
mov
ljmp
iret
mov
mov
mov
xor
mov
cmpsl
and
popf
jne
pop
enter
mov
lock
jb
movsb
mov
xchg
stos
leave
into
push
or
push
xchg
fmuls
or
push
icebp
in
stos
in
cs
into
ret
mov
mov
test
inc
mov
mov
pusha
pop
cmp
lds
lret
push
push
xor
ret
inc
fiaddl
xchg
jns
jae
cmc
repnz
sbbb
adc
lcall
movsb
sub
and
ret
lods
push
push
cmpb
mov
mov
pushf
xor
insb
iret
push
ja
nop
push
sbb
insb
or
mov
push
sub
push
pop
scas
ljmp
pusha
sbb
leave
aas
inc
and
push
iret
jmp
aam
scas
mov
xchg
outsl
loop
sbb
aam
jp
add
push
xchg
subb
mov
xor
push
cmp
outsl
push
cmp
ret
jmp
mov
lds
jns
data16
mov
mov
inc
add
cmp
jle
shll
je
sbbb
scas
mov
jb
mov
test
stos
andb
dec
cld
inc
pop
lock
pop
or
jp
and
add
icebp
in
clc
jo
jge
outsb
pop
xchg
fcompl
inc
mov
lea
mov
sub
or
adc
dec
pop
xor
out
pushf
sub
mov
cwtl
test
add
or
ror
dec
insl
jns
lret
inc
sahf
cmp
in
test
stos
aaa
scas
mov
mov
sbb
push
or
in
dec
vaddsubps
jo
test
orl
cwtl
push
sub
sub
and
pop
outsb
mov
mov
sub
jo
dec
test
jb
sub
sbb
inc
aaa
mov
mov
and
jecxz
out
arpl
leave
sub
iret
jne
faddl
add
icebp
in
xchg
cmp
mov
mov
popa
xchg
pop
popf
inc
jnp
jnp
and
mov
or
xchg
xor
ljmp
pop
fildl
cwtl
je
arpl
and
sub
and
inc
orl
inc
mov
cmp
xor
imul
jg
xor
pop
iret
cmp
testl
jle
jmp
pop
xlat
add
out
inc
imul
call
repz
push
pop
ss
dec
and
dec
pop
subb
fs
mov
int3
jge
xchg
test
add
jg
and
inc
fisubrs
or
scas
or
add
fwait
adc
cmp
mov
or
stos
sarl
sub
mov
pop
mov
repz
inc
push
sub
imul
dec
rcrb
sub
mov
sub
mov
insb
gs
pop
pushf
sub
sub
sub
mov
and
mov
xor
sub
aaa
div
js
jl
xchg
mov
or
xchg
jbe
xlat
divb
sbbb
mov
mov
pop
xor
pop
bound
lahf
imul
dec
and
cmp
data16
inc
int3
into
pop
mov
pop
jo
mov
in
push
push
mov
js
roll
dec
dec
pop
pop
arpl
xor
sbb
ret
lcall
add
bound
test
xor
cmp
mov
xor
sbb
add
movsb
fs
push
add
pop
xchg
jae
and
dec
jnp
mov
in
add
cwtl
mov
lret
sub
stos
inc
fstpl
dec
mov
xor
jl
sub
je
ljmp
dec
sub
test
pop
adc
adc
lea
cmp
icebp
xor
dec
push
sub
mov
movsb
cmp
outsb
inc
enter
xchg
push
or
xchg
rcrb
mov
roll
in
dec
stos
add
jle
nop
out
add
cwtl
imull
imul
inc
xchg
outsl
je
dec
fs
xchg
aas
outsl
mov
decb
ficoms
mov
fs
mov
and
adc
lods
xchg
pushf
xchg
sahf
lods
add
xchg
fiaddl
mov
adc
cmp
push
mov
adc
outsl
inc
enter
loope
daa
rcrl
pushf
lock
mov
fildll
scas
shlb
call
add
sbb
aas
cs
xor
mov
ja
or
jge
cltd
mov
ja
loope
cmc
adc
or
mulb
mov
lods
mov
xchg
mov
cmpsl
and
je
push
mov
dec
sbb
dec
mov
movsl
movnti
mov
sub
leave
sub
mov
int
pop
or
stos
sub
adc
push
outsl
mov
jo
sub
lock
fwait
add
sub
scas
add
push
mov
lahf
jo
mov
push
sbb
add
mov
cwtl
dec
fistpl
les
push
and
dec
popa
pop
mov
aam
add
push
movsb
push
jmp
outsl
mov
pop
mov
outsb
xchg
xor
push
fstpt
test
xchg
and
popf
sti
or
xor
xchg
inc
mov
pusha
loopne
aam
and
std
sarl
imul
stos
imul
pop
cmp
xlat
pop
rolb
inc
ficoml
lods
test
dec
fwait
aaa
loopne
outsl
gs
cmp
dec
jb
jns
jmp
add
pop
lods
lret
cmc
xchg
dec
shrb
push
and
mov
push
scas
popa
push
into
jae
lret
sub
xor
cmp
sbb
and
sbb
fldenv
xchg
add
int
pushf
pop
inc
lock
xor
repnz
mov
es
xchg
je
dec
sbbl
fldenv
mov
repnz
int3
sbb
mov
data16
out
push
repz
xchg
pop
jns
pop
inc
xor
xor
outsb
mov
ljmp
fcoms
fwait
xchg
das
pop
lods
lods
mov
push
mov
mov
jp
hlt
mov
jae
cltd
fdivrs
jg
add
arpl
jnp
shlb
jp
xchg
cld
xchg
xor
pop
mov
mov
dec
jmp
insb
mov
or
push
sbb
call
add
sahf
test
cmp
push
pop
pop
and
xor
or
xor
fs
mov
mov
sbb
adc
push
push
out
jne
punpckhbw
sub
mov
cmpsl
aad
adc
or
jmp
xor
loop
hlt
push
xchg
jns
cmp
incb
xchg
push
adc
push
ficoml
addr16
aad
cmp
sbb
push
or
fistpl
pushf
sbb
pushf
aaa
bound
mov
xor
add
test
add
xorb
dec
dec
lods
int3
fmull
mov
lds
jle
in
mov
xor
mov
mov
pop
jl
push
roll
int3
cmp
push
and
push
stos
cmc
pusha
mov
es
pop
test
loop
stos
out
into
ss
inc
cmp
pop
inc
push
out
movsb
fs
fs
jo
outsb
pop
cmovae
jg
fdivrp
fsubl
adc
ljmp
mov
in
movsl
jbe
popf
mov
ret
xchg
xchg
push
xchg
xlat
test
inc
lock
pop
mull
mov
push
les
test
push
push
or
push
cmp
jo
or
jno
nop
xor
inc
mov
movsl
xor
push
inc
stos
adc
aas
fwait
sub
stos
ret
pop
dec
int
es
xor
shr
pushf
scas
xchg
repz
test
mov
dec
aaa
pop
ds
bnd
or
xlat
sub
mov
mov
mov
xor
in
and
ljmp
adc
mov
mov
push
or
jecxz
or
sub
mov
inc
cmpsb
repz
movsb
jmp
xchg
nop
adcl
hlt
dec
push
repnz
ja
jno
movsb
int3
outsl
pop
inc
int3
jb
rclb
xchg
sub
in
mov
dec
dec
ss
out
add
jae
das
stc
dec
mov
lea
shrb
fs
stos
mov
cmp
dec
xor
outsb
mov
mov
dec
jnp
mov
int3
add
adc
mov
test
adc
mov
aaa
ds
mov
xorb
repnz
js
dec
sahf
adcl
jp
mov
inc
cmp
adc
xchg
push
arpl
xchg
dec
sti
jmp
pop
popa
test
aad
ss
imul
mov
popa
xchg
mov
jnp
mov
in
das
or
stos
cmpsb
fsts
es
mov
leave
xchg
repz
inc
pusha
sub
popa
subb
inc
jge
aam
enter
dec
jp
in
inc
mov
or
scas
sub
movsb
inc
insb
push
jns
les
ret
xor
fwait
imul
stos
leave
dec
jg
add
ja
mov
andb
subl
mov
fcomi
sbb
add
adcb
inc
and
aas
push
dec
mov
lock
cmp
push
lds
pop
sti
gs
andl
mov
mov
stos
int3
lods
repz
dec
sub
and
fstps
ss
jle
loope
in
dec
mov
cmp
fsub
mov
stos
ds
call
dec
repnz
arpl
jge
cmp
insb
sub
outsb
pop
jmp
daa
push
imul
cmp
push
popf
sub
push
outsb
mov
aaa
scas
or
leave
inc
mov
pusha
cmp
mov
ja
sub
cs
je
mov
dec
cld
pop
dec
scas
insb
pop
xor
test
jmp
xor
shll
mov
push
lods
shlb
stos
ret
adc
push
push
sahf
jns
mov
sahf
pop
push
lds
mov
bound
add
mov
sbbl
mov
leave
lods
pop
enter
adc
lock
fildl
sub
or
decb
pop
mov
push
push
xchg
arpl
divb
ds
lcall
xchg
arpl
jbe
xor
cmp
dec
ljmp
xor
sbb
sub
loopne
sub
imul
repz
push
in
mov
loop
dec
mov
out
jae
cwtl
int
pushf
inc
jle
inc
jo
test
into
mov
outsb
fstps
fldl
rorb
lods
addr16
dec
lea
movsb
aad
les
dec
filds
dec
cmp
mov
int3
mov
mov
lahf
mov
in
sbb
bound
rcrl
ret
add
adc
int3
lea
clc
mov
inc
cmp
sub
inc
cmc
cmc
dec
and
adc
add
mov
push
ds
fstp
add
test
add
mov
pop
mov
cmc
and
movsb
adc
xchg
mov
leave
call
xchg
repnz
dec
sbb
xor
out
push
push
gs
out
mov
xchg
pop
mov
pop
scas
lea
imul
shlb
mov
push
adc
nop
sub
dec
dec
aam
addr16
xchg
testb
pop
dec
and
rcrb
push
pusha
cmc
or
mov
arpl
out
dec
test
and
xor
stos
mov
jns
mov
popf
xor
imul
mov
mov
mov
inc
xor
mov
mov
or
adc
mov
sub
out
mov
cmp
mov
daa
jne
lret
jne
gs
cmpsl
sbb
inc
lret
leave
je
test
ret
ret
jbe
mov
mov
pop
or
adc
test
mov
in
addr16
fsubrl
pop
fstpt
movsb
ljmp
mov
fistl
pop
int3
aam
into
or
hlt
out
jmp
out
pop
cmp
in
mov
jp
int3
push
adc
jne
jns
mov
cld
jae
imul
sub
aad
mov
xchg
xchg
rol
mov
dec
fs
jge
mov
add
mov
push
mov
mov
andl
dec
mov
jnp
sbb
movsb
sub
jge
mov
daa
push
or
mov
shrl
mov
arpl
out
mov
pop
xor
push
jo
in
jne
and
adc
ret
sub
dec
mov
dec
insb
int3
mov
notb
mov
sbb
mov
xor
inc
mov
push
repnz
mov
pushf
add
or
adc
mov
mov
pop
adc
dec
rorb
cmp
or
sbb
pushf
das
or
loopne
imul
pop
test
popa
stc
test
mov
sub
inc
push
pushf
or
mov
jae
movsb
sbb
jl
add
jecxz
lahf
push
jge
or
cwtl
sub
adc
lods
test
imulb
lahf
ss
dec
xchg
pusha
insl
jo
mov
inc
or
in
outsb
out
imul
sub
ljmp
mov
fldl
push
pushf
xor
push
fcmovb
movsb
fstpt
or
xchg
sar
dec
xor
js
mov
mov
xchg
sahf
test
sti
add
into
mov
push
shlb
and
pop
adc
sbb
sub
testb
or
add
push
mov
mov
add
and
int3
lea
xchg
enter
into
push
mov
mov
mov
push
push
popa
pop
mov
iret
adcb
inc
popf
sbb
and
aad
les
mov
arpl
repnz
sbb
push
rolb
hlt
jbe
shr
xor
push
repz
or
cmpsl
mov
movsb
inc
mov
jae
test
cmp
cld
test
icebp
sub
pop
sbb
pop
and
fimull
cmp
mov
mov
push
scas
nop
mov
sub
cli
out
xchg
lods
outsb
mov
xchg
stos
outsb
mov
xchg
test
rcll
cmpsb
sti
arpl
ret
jns
aam
pop
daa
data16
scas
cmp
lods
mov
aaa
push
scas
or
sub
lea
jl
loope
inc
push
mov
mov
mov
jg
mov
test
xor
push
xchg
mov
add
or
push
pushf
pop
fisttpll
movsb
shrl
bt
sub
test
leave
daa
gs
push
repz
imul
ljmp
in
outsl
mov
adc
sahf
addl
push
loope
and
cmpsl
fwait
sahf
mov
lea
fdivs
nop
jge
movsb
pusha
jb
iret
mov
add
pop
add
movsb
mov
jb
add
jae
insb
test
iret
or
push
movsl
aad
bound
xchg
add
bound
mov
hlt
add
push
sub
addb
xchg
imul
mov
movsl
and
je
mov
mov
mov
cmpsl
stos
sbb
clc
movsb
in
aas
or
imul
pop
repz
xchg
push
subl
inc
mov
gs
mov
jns
cmp
leave
scas
xchg
mov
jo
insb
movsl
es
sbb
js
and
repnz
in
adc
push
aad
push
or
ret
test
push
inc
xor
ds
mov
test
in
mov
lock
adc
lock
inc
ss
mov
lods
repz
inc
int
pop
int3
scas
inc
mov
lret
dec
mov
inc
push
inc
outsl
popa
insb
adc
jb
aas
push
cmp
cwtl
inc
xchg
mov
inc
hlt
push
bound
arpl
movsb
daa
xchg
cwtl
jbe
xchg
mov
sahf
and
pop
xchg
inc
xor
data16
stos
fmulp
mov
in
pop
jecxz
mov
push
and
push
cld
ror
jp
sbb
jo
aas
gs
pop
sbb
xor
xor
aaa
shrb
pop
inc
out
imul
cs
data16
jmp
sub
stos
js
inc
jno
arpl
cld
and
outsl
aad
xlat
scas
bound
xor
xor
inc
leave
dec
or
leave
and
mov
loopne
dec
inc
mov
or
cmc
shlb
rcrb
mov
sbb
movsb
sub
cld
cwtl
sub
dec
les
int3
inc
sub
xor
mov
cli
mov
gs
push
into
sub
pop
and
mov
repnz
xor
leave
nop
inc
sahf
pushf
cmpsb
bound
je
sahf
outsb
movsb
inc
jns
fs
fdivrl
aas
scas
mov
jb
loop
xchg
dec
repnz
inc
pusha
inc
icebp
jae
aas
int3
xchg
mov
outsb
fadds
lcall
mov
mov
scas
cld
test
adc
mov
fs
lds
movsl
cld
dec
xchg
out
add
lods
dec
pusha
test
sar
pop
popa
sub
fmuls
mov
in
xor
pop
aam
mov
fcoms
shrl
cld
xor
add
or
or
adc
xor
mov
mov
jmp
imul
dec
or
mov
outsl
scas
leave
rolb
daa
lea
in
dec
push
mov
out
jp
mov
xor
push
in
lret
adc
push
pop
call
sub
popf
mov
lcall
int3
sbb
mov
gs
push
addr16
addb
loop
cld
xchg
mov
popa
sub
sbbb
in
ret
mov
test
mov
aaa
pop
mov
mov
sub
pop
dec
sub
aas
jo
cwtl
gs
daa
cmpsl
mov
out
adc
repz
daa
inc
xchg
stc
repnz
dec
lcall
loopne
in
int3
jns
mov
arpl
sahf
or
push
pop
gs
sub
fdivrs
lods
add
push
test
dec
jle
shll
dec
push
rcll
mov
or
lret
mov
ss
std
pop
add
mov
jp
push
loope
push
add
lahf
mov
enter
lea
cmp
ret
push
sbb
scas
in
outsb
mov
jno
std
ja
cmp
icebp
push
cmp
sub
xchg
lret
mov
mov
mov
or
nop
or
in
pop
fstpl
jo
cmpsb
cld
imul
aaa
pop
cmp
sbb
imul
mov
popf
cmp
mov
push
xchg
xor
push
mov
into
rcpps
in
mov
mov
daa
pop
add
ss
cmc
lea
jbe
out
xchg
jns
and
ss
jo
call
je
loopne,pn
repz
fs
fmull
stos
cmp
sub
xor
leave
mov
je
aaa
cwtl
in
scas
into
mov
or
xor
mov
add
mov
stos
arpl
nop
lahf
mov
push
arpl
test
outsl
sub
nop
call
xor
repnz
xor
push
sahf
pop
and
cld
je
mov
pop
push
jno
das
sub
imul
sub
das
xchg
pop
jge
xorb
aaa
in
sarl
arpl
lods
scas
sub
jns
ljmp
negl
lock
outsl
sti
mov
daa
clc
lahf
sub
xchg
or
out
cwtl
or
sti
aaa
add
js
outsl
lock
addr16
and
lock
mov
sbb
das
imul
push
sub
mov
or
stos
test
sub
jmp
xor
pushf
data16
imul
push
pop
test
sti
xor
icebp
xor
repnz
out
es
adc
mov
or
scas
test
mov
sbb
shrl
jmp
xchg
jb
mov
dec
stc
sti
or
addr16
les
jae
fnstsw
loope
mov
pop
adc
cmp
mov
nop
cmp
outsl
je
in
aas
scas
mov
xchg
jno
roll
mov
pop
out
inc
cmp
and
and
sub
pusha
les
xor
pop
fcoms
aaa
lods
fldt
fcoml
mov
in
jl
cwtl
cmpsl
push
mov
fimull
repnz
jge
movsl
or
mov
pop
pop
xchg
aaa
in
sbb
test
mov
jnp
rcll
xchg
cmp
sbb
push
aaa
inc
insb
inc
push
mov
enter
shl
inc
dec
pop
dec
lds
mov
sub
ret
push
aam
and
mov
aas
fcoms
movsb
and
add
outsb
pop
xor
add
mov
nop
js
push
jle
cmp
pop
mov
arpl
ja
sub
and
clc
jge
mov
fdiv
fstpt
push
daa
imul
loopne
test
pop
jb
rcll
daa
insb
fmul
pop
bound
lahf
jne
mov
stos
inc
movsl
pop
cmc
pop
inc
adc
in
pop
aam
aaa
add
enter
iret
push
ja
jl
xchg
bound
in
int3
nop
xchg
ret
bnd
shl
outsl
jg
test
inc
fidivl
mov
hlt
int3
lods
pop
mov
bound
jp
jg
mov
adc
pop
and
add
inc
lds
push
mov
cli
ja
ret
repnz
test
mov
data16
jae
mov
inc
pop
clc
or
pop
mov
in
adc
jns
in
jp,pn
scas
imulb
int3
xchg
pop
cmc
mov
sub
scas
sahf
mov
fcoml
out
push
mov
imul
pop
les
sub
popa
bts
fcomip
cmp
mov
or
sbb
cli
insb
icebp
sbb
clc
xchg
int3
mov
xchg
lret
pop
cltd
shll
aam
int3
xchg
fs
shll
push
xor
scas
ds
jno
pop
sub
pop
daa
cs
rcll
popf
mov
and
scas
sub
fs
push
and
mov
mov
jno
xor
xlat
xchg
or
mov
sbb
fdivrs
adc
mov
and
push
mov
pop
mov
fldt
daa
leave
cld
popf
aad
jl
js
push
mov
pop
mov
xor
pop
lcall
ja
add
andl
xchg
push
mov
cs
js
inc
mov
pop
mov
fnstenv
stc
fmul
push
jb
cmp
lods
addr16
adc
ja
fsubs
cmp
dec
add
loopne
and
ficomps
nop
insl
push
mov
pop
lret
mul
nop
jbe
xor
xorb
mov
mov
les
adc
ljmp
and
int3
das
pop
sub
push
loope
or
fnsave
or
and
fnstsw
push
sub
das
push
dec
pop
aam
inc
int3
iret
dec
mov
outsb
push
sub
stos
sub
scas
nop
not
outsl
mov
lods
sbb
cmp
dec
push
inc
xchg
or
xor
enter
xor
xor
mov
lahf
pop
ret
setg
clc
inc
mov
loopne
adc
test
jno
xor
or
mov
loopne
stos
add
jo
mov
mov
lahf
aaa
lcall
addps
sub
pusha
dec
fildl
inc
pop
shlb
pop
movsl
stos
int3
lahf
push
mov
mov
cld
and
clc
xchg
mov
int3
js
rclb
xor
mov
int3
fs
mov
js
push
dec
jmp
addb
add
adc
sahf
dec
push
inc
data16
imulb
lcall
jno
sbbl
mov
push
fdivrl
jmp
stos
and
adc
std
loope
sti
lea
jmp
lods
xor
movl
jbe
popa
xor
inc
mov
mov
xor
push
jl
push
cmpsb
mov
aaa
sub
push
iret
or
mov
push
pop
xchg
adc
push
rcrl
fnsave
outsl
enter
jl
jg
insl
lahf
cmpl
lock
enter
jp
int3
or
jo
inc
xchg
xchg
xchg
movq
popf
or
int3
sbb
mov
cmp
and
jo
push
pop
mov
repz
xlat
jp
and
movsl
and
movsl
cmp
test
sbb
test
cmp
push
je
mov
imul
mov
mov
iret
hlt
popa
cli
rcrb
mov
inc
test
or
pop
add
jns
jae
shlb
in
sbbb
nop
cs
cs
pop
call
int3
mov
insb
jo
es
pop
sbb
dec
bound
mov
cmpsb
adc
je
inc
mov
outsl
shl
pop
icebp
out
and
lret
lock
in
pop
enter
or
das
dec
jb
pop
xchg
jg
sbb
fsubl
leave
jo
or
sub
dec
mov
xchg
jnp
pop
jno
imul
mov
mov
daa
cmp
stc
arpl
movsl
out
pop
pop
jge
roll
jecxz
mov
test
mov
test
dec
cmp
push
das
push
xorb
push
arpl
add
in
add
mov
stos
andl
gs
out
fs
repnz
mov
ja
arpl
inc
mov
inc
cmp
lock
sbb
imul
cmp
outsl
nop
rol
add
stos
shrb
test
inc
cmp
lods
sub
or
inc
xchg
insl
mov
adc
enter
fs
jo,pn
call
jae
stos
mov
jbe
adc
pushf
movsl
sub
sbb
lahf
jne
sub
sub
int3
dec
xchg
push
mov
dec
insb
pop
sbb
scas
sub
cmp
movsl
aaa
int3
adc
rolb
xor
xchg
clc
add
sub
test
lret
dec
sbb
fs
sbb
int3
mov
outsb
out
sbb
fnsave
xchg
lahf
repnz
movsb
orb
mov
mov
test
loop
fiadds
add
pop
imul
scas
mov
gs
jo
adc
mov
aas
mov
cmc
popa
shll
out
ja
rol
adc
push
aas
gs
leave
dec
adc
imul
out
inc
cwtl
push
int3
jns
fisubrs
arpl
pop
jns
test
lods
mov
icebp
dec
mov
mov
xchg
jmp
sbb
push
cmpsl
add
dec
movsb
xor
shrb
mov
int
inc
mov
add
imul
xchg
hlt
aas
mov
lretw
jb
hlt
mov
lods
cltd
movsl
sub
ret
mov
xor
lods
in
cmpsb
jp
repz
push
sub
and
lret
popa
movsl
dec
sub
scas
cmpsb
dec
jns
xchg
and
sub
in
cmp
adc
adc
xchg
jno
xchg
pop
and
inc
xchg
lret
sahf
xchg
insl
int
xchg
xchg
call
sub
xchg
jnp
repz
fldt
and
movsl
xor
repnz
push
add
popf
xlat
lods
fcoms
out
movsl
imul
or
cmpsl
xor
xchg
setns
xchg
arpl
adc
inc
sbb
scas
dec
jmp
ficoms
ss
stos
int3
pop
repnz
scas
sbb
jg
arpl
test
mov
imul
pop
pop
push
leave
cmpsb
fwait
mov
jb
outsb
bound
jns
xchg
cmp
jae
mov
sbb
xchg
mov
sbb
adc
pop
inc
imul
stos
add
mov
insb
pop
and
xchg
stc
and
lret
push
push
pushf
mov
pop
mov
aas
mov
mov
pop
rorl
jmp
lretw
stc
stos
scas
mov
fisubs
mov
mov
repz
or
push
inc
lret
out
scas
mov
sbb
jb
outsb
jno
sub
sbb
pusha
mov
mov
aas
jo
mov
mov
mov
lods
mov
push
mov
or
mov
lea
lahf
xchg
and
lods
je
and
sub
xor
inc
movsb
lahf
push
popf
mov
pop
adc
loop
mov
daa
cwtl
test
les
inc
mov
pushf
xor
sub
ljmp
push
cmpb
mov
mov
mov
repz
inc
fwait
js
push
lock
adc
jl
pop
add
xor
js
inc
stos
in
cmp
jbe
sub
mov
push
stos
cld
sub
frstor
sub
jbe
mov
cwtl
outsl
jmp
cmp
repz
pop
fcomps
cwtl
add
or
insl
aas
xor
dec
xchg
sbb
stos
mov
nop
and
xor
imul
shll
mov
addr16
ds
icebp
out
ret
xor
scas
outsb
sbbb
mov
pop
xorl
insb
xchg
sbb
lods
popa
int3
xlat
add
sub
cwtl
subl
in
jge
in
mov
xorl
sbb
lock
sub
pop
push
scas
leave
popa
cwtl
push
push
in
xor
js
out
jle
movsb
movsl
out
mov
xlat
xor
ficoml
clc
pop
sbb
dec
xchg
insb
orl
sub
and
fs
mov
nop
popa
iret
iret
loope
mov
xchg
movsl
sub
sbb
insb
mov
movsl
push
jo
add
mov
out
movsb
jecxz
sub
mov
and
xor
cmp
pop
jb
add
mov
sbb
pop
lods
movsl
cmc
gs
stos
pop
lods
pop
lods
sbb
clc
ljmp
xor
leave
pop
mov
out
repnz
stc
out
mov
and
in
nop
sbbb
in
scas
cltd
push
mov
xchg
in
jns
test
out
mov
loopne
mov
push
sbb
loop
je
jmp
mov
aas
xor
xor
pop
ret
test
and
xchg
mov
arpl
popf
fs
adc
out
push
lret
dec
rclb
add
lret
adc
cmp
or
jmp
loope
jno
imul
sar
or
mov
xchg
call
movsb
cmpsb
bound
les
adc
aas
idiv
pop
xor
mov
js
lods
sbb
push
in
out
mov
mov
pop
pop
mov
outsb
lods
aas
lds
mov
int
mov
repnz
outsb
mov
bound
test
mov
dec
movsb
cmp
lods
cmp
add
jnp
inc
imul
xor
cmp
inc
xchg
stc
shlb
ret
xchg
push
leave
mov
dec
dec
mov
sub
cwtl
mov
cli
pop
arpl
dec
mov
ss
push
imul
mov
mov
pop
movsl
inc
xchg
mov
out
imul
dec
int
stos
test
movsb
sub
leave
imul
test
popf
xchg
mov
lret
enter
insl
pop
pop
push
inc
fistps
nop
pop
xor
outsl
cld
daa
mov
popa
std
insb
shr
or
xchg
pop
fsub
call
adc
mov
push
dec
inc
mov
fs
and
lock
mov
xor
je
fs
lods
dec
ret
dec
adc
or
cmpsb
cmp
mov
js
imul
inc
imul
call
stos
pop
dec
in
ret
popa
loopne
jno
mov
mov
sbb
outsl
insb
pusha
pop
mov
pop
push
ss
fisubrl
je
cmp
daa
notl
enter
sub
mov
je
fwait
jns
aas
lds
mov
push
sbb
xchg
test
arpl
outsb
movl
adc
mov
xorb
inc
jns
int3
add
xchg
aas
test
push
shlb
sub
push
cmpsl
subb
xor
jo
outsb
leave
aas
scas
int
mov
xor
jnp
bound
cwtl
cmpsb
popf
outsl
mov
jno
pop
movsb
insl
add
lcall
daa
arpl
dec
xor
jo
xchg
xchg
mov
jb
bound
pop
xchg
mov
call
lahf
dec
das
or
add
test
xchg
cmp
mov
std
mov
int3
scas
push
cvtps2pd
lea
push
out
adc
dec
mov
push
rcrb
pop
and
sub
nop
and
xor
sub
add
scas
mov
es
outsb
xor
mov
insb
fs
lods
xlat
mov
lods
pushf
adc
daa
cmp
dec
popf
fstpt
jb
or
pop
xor
fimull
and
loope
and
shlb
pop
xor
ja
ficoms
aam
inc
xchg
shlb
pop
mov
pop
push
testl
out
mov
in
and
dec
mov
pop
mov
jae
imul
enter
lock
stos
add
out
fnsave
cmp
test
arpl
test
int
pop
mov
outsb
test
and
dec
dec
jae
or
mov
rclb
addr16
notb
add
andb
sub
cmp
jmp
and
test
stc
mov
insl
in
jae
xchg
sub
mov
push
lods
lock
lret
pop
push
mov
gs
inc
mov
pop
repnz
inc
xor
pushf
aad
adc
test
jmp
pop
sbb
pop
repnz
pop
rcrl
jns
ret
insb
aad
add
adc
outsb
sti
adc
sub
repnz
pop
js
loop
mov
test
rep
popa
fs
in
lahf
add
xlat
ret
loope
and
mov
aaa
mov
shrl
popa
cmc
sahf
out
push
sbbl
jb
les
ss
and
sub
movsb
pusha
xchg
or
daa
sbb
sti
out
mov
into
sub
subb
adc
data16
jns
daa
cmp
push
mov
aas
dec
das
mov
pop
xchg
sbb
imul
sub
pop
push
in
and
jg
out
lahf
push
add
cmc
jb
add
leave
xchg
push
mov
and
pop
mov
mov
cmc
fcmove
jo
insb
add
pop
lcall
xor
cwtl
sahf
push
jne
sub
lea
pop
xchg
leave
sahf
fs
mov
xor
cmc
inc
dec
and
push
bound
sbb
push
cmp
add
in
jns
cmpsb
lret
xchg
mov
cmc
adc
sub
pushf
emms
push
lret
mov
xor
xchg
mov
out
jo
pusha
lret
mov
jb
int3
xchg
inc
shlb
dec
sub
push
inc
push
add
cmp
mov
ljmp
in
jo
and
cs
jae
leave
and
scas
mov
je
out
pop
sbb
enter
aaa
push
mov
lahf
sub
int
sub
push
mov
or
mov
out
lret
xorl
outsb
out
inc
and
subb
mov
add
mov
cmpl
or
add
imul
mov
xor
xor
inc
lret
or
popa
and
pop
xor
insb
movsb
leave
nop
in
push
xchg
jb
mov
jae
mov
adc
daa
pop
mov
cmpl
dec
xchg
sub
add
data16
mov
sub
dec
or
push
pusha
jg
fidivrs
lock
movsb
insl
lcall
xchg
xchg
jae
xor
aas
adc
lods
push
movhps
fsubrs
and
mov
lods
mov
nop
and
rorl
sahf
test
cmp
sahf
inc
loope
adc
and
mov
or
xchg
lcall
iret
sub
xchg
aas
jbe
push
jbe
enter
movsl
sub
mov
data16
add
mov
pop
jecxz
mov
sahf
lods
jbe
into
sub
and
sub
cmp
mov
pop
push
cwtl
das
fldenv
pop
lret
inc
xchg
les
jae
test
aas
lret
imul
pop
jns
outsl
subb
pop
mov
push
pushf
pop
xor
inc
shrb
push
inc
adc
addr16
jl
jo
add
mov
int3
cli
fisttpl
jbe
pop
imul
push
pusha
jg
stc
dec
jecxz
movsl
fstpt
popa
push
push
insb
sbb
sarl
ds
das
out
leave
cltd
jns
mov
lods
mov
inc
cmp
mov
sub
jnp
dec
stos
mov
test
mov
lds
fsubl
inc
movsb
in
gs
mov
icebp
loopne
mov
xchg
mov
mov
int3
ja
ret
leave
mov
pop
and
gs
ljmp
lods
dec
mov
mov
mov
das
jp
push
jle
divl
fwait
jbe
mov
lods
ss
shll
push
aaa
sub
hlt
jns
xchg
data16
icebp
mov
xor
and
test
int3
movsl
add
loopne
nop
xchg
lods
orb
gs
stos
fcmovnbe
into
mov
cmp
mov
ss
push
add
sub
or
je
and
sbb
pop
mov
fs
popf
gs
cmc
sbb
pop
scas
adc
mov
jae
pop
pop
mov
mov
mov
cmc
cmp
adc
cmp
fcmovnb
test
mov
repnz
xchg
fdivrl
aad
xor
lods
pusha
ss
and
es
adc
in
andb
xchg
adc
bound
pop
dec
push
cmp
lods
sbb
movsb
push
repnz
mov
aaa
push
jb
data16
dec
mov
in
jns
stos
loop
sub
sub
pop
test
dec
fucomp
push
mov
dec
push
aas
cwtl
loopne
cli
cmc
popa
data16
repz
test
test
jns
nop
popf
jb
and
mov
xchg
xor
test
gs
and
mov
test
push
or
inc
bound
mov
and
adc
pop
sub
jl
fimuls
xchg
adc
pushf
cs
push
ret
outsl
xchg
adcl
push
bound
repnz
mov
call
xchg
xor
int3
push
icebp
push
pop
out
xchg
shl
mov
imul
lods
loopne
push
je
movsb
mov
adc
mov
pop
or
sahf
jbe
mov
imul
jb
imul
int3
pop
enter
cmp
xchg
ljmp
pop
sahf
push
sbb
jo
loopne
bound
stos
dec
aam
lods
add
cmp
jb
mov
lcall
pop
inc
movsb
iret
mov
cmp
cmp
pop
add
enter
outsl
mov
jb
data16
imul
pop
es
test
xlat
mov
xchg
push
add
jb
imul
jp
mov
mov
jp
iret
push
mov
clc
lret
jne
into
mov
push
pop
pusha
mov
pushf
dec
and
mov
insl
jns
mov
mov
pop
leave
sub
jbe
jae
mov
scas
pop
pop
sarl
imul
leave
xorb
pop
mov
or
mov
sub
rcrb
jo
mov
adc
aaa
int
int3
repz
xor
ficomps
or
sbbb
xor
mov
sub
aad
cmp
nop
pop
scas
arpl
push
das
sub
or
push
adc
fmuls
insb
mov
jmp
pop
into
ljmp
jbe
lcall
dec
add
jp
sub
xchg
dec
flds
push
pushf
pop
and
push
xor
xorl
mov
test
dec
push
jo
pushf
int3
cli
rcll
and
cmp
mov
xchg
xor
pop
out
mov
xchg
sbb
test
xchg
xor
rolb
push
lahf
ljmp
add
mov
add
into
xchg
sub
jo
dec
mov
sub
insb
nop
mov
xchg
xorb
mov
je
dec
call
mov
and
mov
mov
bound
repz
jo
pop
insb
ljmp
mov
cmp
mov
mov
mov
addl
or
test
insl
subl
or
sahf
mov
mov
in
mov
cli
call
adc
bnd
test
push
cs
sti
jno
sti
fistl
mov
out
sub
rclb
dec
ds
cmpsb
int3
clc
bound
cld
imul
sub
popa
leave
dec
out
pop
addr16
sbb
and
imul
aas
shrb
pop
mov
test
subb
cmp
jo
data16
push
xor
movsb
lods
addr16
add
jo
dec
sub
jb
fs
jecxz
ficompl
jecxz
xor
ret
int3
sbb
out
daa
cmpsb
pushf
xor
lret
push
add
test
loope
adc
lcall
scas
xor
inc
xchg
pop
aas
addr16
movsb
gs
mov
adc
int
xchg
fldt
sub
dec
nop
mov
mov
icebp
movsl
cld
sarl
pop
js
clc
sub
sbb
inc
add
and
inc
push
xchg
subl
mov
or
add
sti
aad
test
sahf
lods
pop
bound
push
js
cmpsl
ret
inc
inc
out
lods
mov
jne
pop
cmpsb
dec
inc
mov
adcb
adc
sbbb
cld
shrb
bound
gs
popa
pop
push
scas
sub
icebp
dec
pop
add
ret
pusha
daa
cld
jno
mov
test
rorl
dec
jno
pop
pop
push
jmp
andl
aaa
pop
sub
bound
jne
pusha
sbb
sub
pop
sti
sub
add
mov
stos
aas
jns
loop
scas
mov
iret
jp
pushf
pop
movsb
out
aad
mov
xchg
xchg
lock
xor
aaa
movsb
leave
pop
pop
push
mov
xchg
cmc
out
imul
lods
test
into
push
mov
aad
pop
xor
pop
cmpsb
fsubs
cmp
ret
out
movsb
imul
movsb
jo
push
add
cwtl
subl
mov
xchg
iret
or
xchg
test
jle
xchg
pop
jmp
push
mov
aas
cmp
aam
clc
xchg
or
out
pop
popa
cld
mov
cmp
mov
jbe
mov
int3
into
aam
pop
insb
aaa
jns
sub
inc
outsl
icebp
mov
jae
aaa
sbb
cli
cli
push
dec
test
shlb
std
dec
ret
xor
jle
mov
dec
adc
fcmovb
xor
bound
jecxz
cs
jp
jecxz
sahf
stc
and
movsl
xor
nop
adc
fwait
addr16
sahf
dec
pop
push
pop
xchg
iret
test
test
sahf
cmc
loopne
mov
aaa
pop
in
and
lods
mov
int3
sbbb
jg
das
xchg
dec
mov
test
aas
xchg
mov
jmp
ds
loop
push
adc
stc
lods
adc
popf
xchg
aaa
xor
call
push
in
fs
cwtl
cmp
xchg
mov
enter
jg
xchg
push
lods
int3
cmpsb
sub
mov
insb
insl
sub
dec
push
js
mov
cmp
add
sbb
mov
inc
dec
sbb
lcall
popfw
cli
xchg
dec
je
mov
loop
dec
xchg
cmp
or
add
pop
cmp
movsl
xor
daa
int3
popa
xchg
sub
sti
loop
add
das
cli
test
mov
popa
xor
call
call
imul
loopne
cli
and
push
fidivrs
mov
pop
mov
pop
mov
repz
call
stos
sbb
sbb
mov
mov
fcmove
cmc
sub
jns
test
sbb
jl
xchg
push
mov
mov
sbbb
lcall
pop
out
xchg
cli
cmpsb
cmp
sbb
mov
jb
stos
test
sbb
sub
std
data16
daa
orl
orb
pop
aad
pushf
mov
out
mov
mov
push
mov
sub
xor
or
pop
add
lods
pop
in
cmp
lea
mov
repnz
xor
dec
fwait
dec
jb
popa
out
arpl
je
mov
push
mov
sub
and
dec
pushf
out
mov
cmp
fidivrs
pop
pop
mov
fwait
lds
add
fcomps
mov
pop
out
pop
mov
xchg
pop
pop
gs
mov
dec
push
std
and
dec
push
scas
push
mov
adc
in
pop
mov
lods
and
inc
js
stos
and
and
leave
inc
clc
movsb
mov
das
outsb
stos
pusha
lods
mov
aas
xorl
scas
and
push
mov
mov
mov
push
jp
cltd
or
icebp
xchg
movsb
test
insb
inc
test
test
daa
ret
insb
xchg
leave
cmpsb
jmp
arpl
in
insb
push
clc
pop
pop
dec
cmpsl
push
sar
inc
scas
popf
push
ffree
push
ljmp
jae
mov
sbb
testb
popf
sub
add
cmp
aam
jp
mov
and
jbe
enter
jg
xor
mov
mov
add
cld
fsubrs
lods
mov
cmpsl
mov
test
and
mov
test
jo
adc
lret
pop
dec
mov
mov
hlt
dec
push
mov
pop
sub
inc
in
mov
push
fsubr
jle
in
mov
jb
shr
push
mov
movsb
icebp
lock
aaa
push
sbb
sbb
xor
movsl
xchg
mov
xchg
push
out
push
lcall
jb
mov
dec
dec
int3
pop
scas
sub
stc
pop
fisttpll
in
xchg
sbb
xor
push
mov
rcll
cld
xor
movsb
ss
imul
mov
dec
scas
stos
shrl
xchg
fsubrs
jae
jns
nop
cmp
stos
push
test
leave
pusha
xor
mov
enter
cmpsb
sbb
sbbb
std
insl
cwtl
in
outsb
lret
divl
mov
add
and
mov
jns
pop
or
adc
and
dec
pop
pushf
push
mov
inc
sahf
mov
inc
adc
jns
popa
mov
xor
cmp
push
sub
sub
push
cmp
fucomp
hlt
add
jbe
sbb
pop
inc
hlt
push
lea
pop
jo
arpl
cmpsl
fwait
popa
hlt
pop
mov
int3
iret
lcall
fisubrs
movl
xor
nop
adc
out
shrl
mov
gs
outsl
and
cmp
pop
cwtl
int
mov
jb
jge
xchg
mov
jae
and
xchg
add
aam
into
and
jle
int3
add
in
in
jl
decl
jecxz
mov
pop
add
int3
pop
pop
inc
xchg
dec
sbb
fdivl
xor
das
push
popf
mov
dec
cmpsl
movl
xor
jmp
in
gs
and
inc
sub
pop
adc
inc
dec
xchg
mov
xchg
imul
das
in
xchg
mov
repz
call
pop
lea
pop
stos
icebp
fs
idiv
or
test
and
sarl
iret
mov
js
repz
mov
out
dec
jmp
js
pop
push
js
stos
dec
mov
mov
int3
popa
adcl
cmp
xchg
aad
outsl
and
sub
mov
pop
mov
lret
xchg
int
subl
pop
pop
jno
sub
mov
repnz
xchg
int
incb
clc
clc
mov
jo
in
lahf
aas
scas
mov
mov
push
mov
insb
mov
clc
jmp
mov
pop
lods
xchg
adc
add
in
mov
xchg
xchg
js
stos
jg
mov
test
xor
mov
jo
cwtl
mov
dec
dec
in
jns
inc
in
lretw
and
jmp
dec
mov
nop
sar
dec
in
sub
mov
xlat
or
bound
test
lock
gs
add
dec
push
clc
les
fstpl
push
push
jbe
movsb
push
pop
test
pop
xor
push
mov
insl
gs
push
pop
insb
cmp
insl
pop
pop
fidivrl
inc
xchg
cmovg
add
int3
or
xchg
cmp
xor
xchg
int
adc
sbbb
jo
adc
test
push
pushf
leave
mov
andnps
inc
xor
push
in
sub
movsb
imul
div
bound
mov
bndldx
scas
sub
arpl
mov
iret
mov
mov
mov
shlb
jle
add
push
push
mov
fimuls
add
mov
sbb
xor
mov
test
jns
cmp
ficompl
push
mov
ss
stos
andl
dec
mov
arpl
subl
push
int3
ret
and
fisubrs
jl
out
dec
pop
test
int3
mov
lret
pop
insl
cmpsb
adc
popf
and
rcrb
movl
out
pop
cmp
cmpsb
jmp
icebp
pop
xor
fcompl
cwtl
xor
cmc
mov
mov
cmp
in
fwait
push
jae
popf
xchg
cmp
dec
xchg
ss
lods
inc
jecxz
xchg
or
hlt
das
int3
lea
add
lods
aad
aaa
push
out
pop
mov
dec
mov
pop
mov
loopne
mov
int
xchg
add
aad
and
lds
sahf
mov
cmp
xorl
or
xor
aad
jns
dec
stos
mov
pop
insb
adc
dec
mov
data16
xchg
and
inc
push
stc
sub
cmp
jmp
adc
xorb
nop
data16
pop
bound
mov
mov
imul
in
sub
jl
mov
mov
jmp
stos
imul
push
mov
mov
push
scas
int3
sbb
add
fisttpll
out
cmp
fs
cmc
and
mulb
mov
cmc
mov
fsts
xor
popa
add
ds
sub
mov
das
das
jne
adc
dec
data16
aas
mov
lret
mov
dec
xchg
mov
sub
mov
test
pop
test
xchg
sub
sti
pop
xchg
stos
stos
loope
lahf
pushf
scas
int3
sub
inc
jno
add
jno
push
pop
adcl
cmp
inc
pop
pop
jmp
jne
int3
mov
pop
inc
andb
incb
and
inc
test
pop
add
pop
mov
ljmp
mov
sahf
fadds
insb
and
mov
jge
stos
or
inc
add
test
pop
jbe
and
inc
int3
sub
push
loop
adc
in
and
ja
inc
push
jl
jmp
mov
lcall
ds
push
daa
rorl
inc
sbb
xchg
mov
mov
insl
cmp
jae
jo
sbb
jmp
fbld
js
test
pop
cmp
xor
scas
mov
pop
cli
nop
xchg
in
lret
jne
xchg
int3
sub
in
shlb
int3
mov
pop
dec
adc
popf
jb
adc
mov
out
push
lock
or
cmpsl
test
pop
xchg
xchg
or
insb
stos
mov
cs
mov
push
stos
jg
nop
or
lods
add
popa
scas
dec
repnz
mov
xchg
popa
inc
je
inc
hlt
mov
loopne
stos
in
xor
jns
jae
scas
pusha
mov
movsl
pop
xor
xchg
test
push
adc
or
jb
fwait
jae
mov
setg
cltd
clc
add
sbb
scas
and
in
in
push
call
das
mov
cmp
mov
or
aam
push
push
aas
dec
out
out
and
std
mov
and
mov
aas
aam
pop
pop
or
jp
mov
push
add
mov
sar
std
mov
jnp
mov
ficoml
xchg
into
push
pop
ss
dec
subb
dec
ret
jl
push
xchg
out
mov
fwait
in
aas
nop
xchg
mov
negb
sub
outsb
fsubrl
call
mov
sbb
lcall
push
pop
cmp
pushf
xor
pop
push
dec
fsts
ret
test
movsb
fiaddl
xlat
xor
fdivr
stos
sbb
fs
mov
mov
cs
sub
lea
gs
sbb
mov
gs
jno
mov
mov
sub
jnp
dec
sbb
mov
pop
mov
bnd
das
ss
push
push
shrl
fwait
add
push
jecxz
and
mov
push
sub
jecxz
xchg
jo
pop
mov
jns
lds
jge
lock
push
jno
mov
jmp
sub
mov
push
imul
out
mov
out
and
push
jnp
sarb
aas
push
mov
lea
lret
aas
insb
sub
dec
sbb
xor
popa
mov
inc
repnz
pop
mov
sub
push
cmp
loopne
lret
pop
ficoms
pop
pop
jnp
popa
inc
arpl
inc
mov
pop
jno
dec
xor
ss
cmp
lods
push
cld
mov
adc
lods
xor
mov
aas
mov
out
inc
stos
push
stos
aas
mov
leave
sbb
xor
mov
mov
mov
int3
mov
aaa
lret
lret
mov
xchg
and
fcoml
sahf
aam
arpl
scas
fwait
int3
lea
adcb
push
sub
adc
and
push
sub
mov
pop
jo
mov
xchg
and
and
ret
lahf
std
cs
jo
and
pop
test
imul
leave
xchg
addr16
sbb
jbe
and
mov
mov
les
adc
stos
mov
cmp
bound
inc
mov
push
mov
pop
pop
jecxz
jns
gs
test
pop
mov
scas
cmp
lret
ret
push
pop
xor
mov
sub
sub
lea
into
setp
mov
mov
leave
sbb
mov
or
jnp
ret
xchg
in
test
mov
movsb
and
in
enter
jg
or
mov
sbb
cmp
xor
jo
ss
lock
and
xor
pop
mov
pop
sub
mov
daa
cmpsb
ret
nop
out
lcall
imul
popa
mov
inc
rcrl
dec
mov
stos
xor
push
and
cmp
or
lret
and
mov
stos
pop
sub
mov
pop
push
push
jb
cmp
jbe
out
sti
frstor
lock
jl
shlb
pop
sub
pop
int3
mov
fcoml
movsb
fimull
mov
ret
mov
fwait
pop
push
jle
add
pop
fiaddl
pop
sbb
mov
and
shrl
push
lods
loopne
cs
sub
mov
lock
lahf
xor
cmc
mov
push
gs
data16
ficoms
pushf
push
gs
xor
pop
dec
mov
xor
push
in
mov
xchg
inc
imul
mov
or
adc
xor
das
int3
loope
mov
sbb
hlt
pop
stos
mov
jns
cmp
pop
push
test
pop
shlb
sbb
pop
fs
jbe
sub
push
dec
mov
fwait
and
xor
xchg
xor
push
dec
xor
or
add
loop
mov
push
mov
push
inc
shll
out
in
and
mov
rcrl
nop
dec
mov
mov
idiv
dec
xchg
cmp
jecxz
sub
scas
fistpl
mov
imul
xchg
movsb
rolb
mov
sub
popa
fcomps
popa
pop
int3
sbbb
pop
es
mov
sbb
leave
in
stos
int3
and
or
imul
sub
mov
xchg
sti
xchg
add
xchg
addr16
sub
popa
jp
bound
and
cs
and
call
mov
mov
mov
mov
sub
inc
shrb
xchg
movsl
push
sbb
scas
clc
jno
orl
pop
xor
or
into
testb
xchg
add
aam
in
mov
test
xor
outsb
js
cs
pop
int3
xchg
gs
aad
dec
adc
int3
push
adc
and
push
cmc
push
mov
push
xchg
jo
rcr
clc
stos
adc
test
mov
stc
cmpsl
imul
dec
mov
jne
pop
inc
arpl
sbb
dec
sub
push
push
test
jecxz
mov
mov
dec
lods
sbb
sbb
push
inc
je
mov
loopne
dec
mov
in
ds
mov
stos
int3
dec
shlb
or
je
inc
jecxz
xchg
add
subl
jecxz
fsubl
fcomps
dec
scas
dec
cmp
push
cmp
jg
cmc
jmp
mov
in
bound
push
divl
sub
fs
pop
fnstsw
test
int3
mov
add
and
xor
pushf
cmpsl
xor
and
sub
sub
inc
outsb
push
pmullw
xor
mov
xorb
inc
mov
cld
icebp
mov
ficoms
imul
xorl
outsl
mov
test
lods
jnp
ds
mov
hlt
mov
xor
sub
xchg
pop
push
pushf
lods
lods
mov
and
std
les
inc
cmp
jae,pn
aam
outsl
xor
sarb
and
sub
lds
cmpsl
jns
xorb
xchg
clc
das
decl
push
out
adc
imul
mov
jae
leave
mov
out
leave
imul
ret
shll
int3
fs
imul
test
movzwl
rolb
andb
pop
adc
add
cmpb
dec
cwtl
hlt
lahf
notl
ljmp
jbe
and
push
xor
mov
push
andb
imul
jns
sub
movsl
pop
lds
inc
cli
out
mov
inc
add
add
jge
lock
pop
adc
stos
mov
jo
movsb
pusha
lret
scas
shrl
xchg
popa
sbb
imul
push
dec
inc
fadd
test
mov
pop
jnp
in
add
sub
xor
cwtl
mov
sbb
push
inc
pop
ljmp
je
xchg
push
mov
jb
lock
imul
add
xor
test
sub
xchg
xchg
and
push
movsb
xchg
and
or
mov
scas
ljmp
lret
stos
out
sub
lods
mov
mov
sti
daa
loop
xchg
mov
test
adc
sub
sub
jb
mov
cltd
jno
mov
mov
repnz
push
cmp
jb
sub
xlat
cwtl
std
xchg
jno
pop
xchg
repnz
cmpsb
and
jno
enter
pop
sub
push
and
xchg
movsb
in
pop
and
leave
mov
sbb
sahf
imul
nop
lods
sub
mov
imul
icebp
stos
int3
pusha
into
mov
test
xor
pushf
mov
lods
popf
das
xor
mov
negb
dec
sbb
add
pop
mov
mov
xchg
gs
movsb
pop
test
test
shlb
mov
push
inc
xchg
aam
dec
in
mov
ss
push
dec
adc
dec
movsl
ds
and
jge
pop
lahf
pusha
test
mov
mull
shll
jo
leave
pop
inc
pop
pop
jnp
push
mov
inc
xchg
rcl
sub
pop
cwtl
sbb
mov
ds
loop
cmp
xor
testb
xchg
jo
test
std
or
imul
mov
lods
jmp
into
push
cmp
mov
stos
lea
pop
popa
mov
into
push
faddp
jo
js
pop
loope
mov
mov
dec
sahf
ja
dec
mov
pushf
mov
pop
cmp
mov
pop
inc
push
aas
xchg
test
sarl
push
jl
in
jb
in
pop
adc
xchg
add
in
push
cmpsw
xor
test
icebp
dec
add
mov
jns
test
in
dec
and
jb
out
sub
mov
cmpsb
push
or
mov
in
arpl
adc
mov
pop
sub
scas
adc
movsl
or
mov
dec
xchg
sub
dec
outsl
mov
adc
push
fs
push
cld
sbb
pop
xchg
fcmovbe
arpl
or
outsb
xchg
mov
std
dec
repnz
push
cmp
test
inc
xchg
sbb
movsl
in
shrl
lods
mov
lods
iret
out
xor
xchg
gs
rcrl
xchg
je
fs
jno
jg
xchg
movsb
cmpsl
sbb
pop
xor
call
and
inc
add
imul
push
mov
xchg
dec
fnsave
je
mov
hlt
jp
ds
mov
sahf
ss
mov
icebp
sahf
aas
lahf
int3
nop
cwtl
leave
xchg
add
imul
mov
imul
inc
addb
int3
sub
lea
stos
jne
mov
inc
mov
cmpsl
sub
lret
ret
inc
push
mov
xor
xchg
fstp
xchg
clc
cmc
mov
mov
mov
out
xor
inc
xchg
lret
fstps
aad
push
loop
or
inc
push
pushf
arpl
stc
idivl
call
gs
adc
mov
mov
mov
dec
pop
push
test
mov
mov
push
fldt
fs
pop
fcomps
mov
jnp
jp
in
scas
mov
subl
jge
insb
xchg
in
imulb
scas
nop
xchg
dec
mov
mov
movsl
out
mov
or
mov
repnz
sub
cwtl
and
xor
adc
daa
cmp
mov
cmpsb
cli
outsb
dec
jl
rorl
int3
mov
push
test
stos
lods
mov
jnp
xchg
and
test
int3
aam
xchg
test
cmp
pop
inc
push
adc
scas
cmp
in
mov
in
inc
setns
sub
cmc
mov
jge,pt
push
mov
data16
dec
lea
into
test
mov
fistpll
andl
sti
fwait
out
add
addl
das
xchg
or
cmp
pop
es
jns
fucomi
jb
sarl
sbb
fwait
ds
lods
mov
outsl
or
lea
pop
int3
push
xchg
and
call
adc
in
sbbl
and
repz
xchg
mov
sub
scas
fs
or
or
test
loope
mov
push
dec
popf
les
jno
les
test
cmp
jno
fdivs
jae
int3
add
rclb
sub
les
dec
mov
addb
push
loop
lock
pop
fidivrs
test
leave
push
cmp
push
iret
adc
xchg
mov
xor
adc
xlat
inc
mov
add
push
icebp
les
and
int3
and
adcl
cltd
mov
cmp
push
rorl
xor
bound
popf
cmp
add
outsl
es
pusha
pop
mov
xor
ljmp
pop
les
inc
data16
pop
mov
sbb
test
cli
ret
nop
fs
data16
dec
daa
add
and
add
nop
inc
imul
in
divl
leave
nop
ja
adc
mov
fs
mov
test
pusha
hlt
xchg
in
mov
push
pop
daa
add
xor
mov
pushf
nop
mov
cmp
sbb
jb
lcall
pop
dec
insb
xor
je
xchg
xchg
pop
push
inc
mov
sub
xchg
out
outsl
mov
add
xchg
test
push
insb
movsl
xor
test
leave
loopne
aaa
ds
jmp
mov
stos
leave
imul
cmp
mov
shlb
scas
mov
mov
push
mov
xchg
sub
dec
and
pusha
push
push
cwtl
xchg
lods
mov
ja
mov
lods
leave
pop
adc
aaa
pusha
mov
pop
jns
inc
jno
popa
jo
sub
js
cwtl
add
and
inc
int3
jl
xchg
adcb
test
arpl
mov
daa
mov
test
inc
aaa
movsb
mov
sbb
adc
sti
movsb
xchg
je
xchg
lret
pushf
mov
mov
dec
cmpsl
popf
jbe
pop
inc
mov
test
je
mov
adc
xchg
stos
mov
inc
nop
stos
pop
jae
mov
mov
sub
pop
out
fcomps
loope
jmp
pop
inc
mov
mov
jns
jbe
jecxz
mov
sub
movsb
dec
repz
xor
adc
xor
cmp
leave
xchg
dec
mov
mov
mov
sub
lret
adc
push
xlat
test
adc
sbb
cmpsl
sub
jg
xchg
jmp
and
inc
cmpb
xor
je
lret
cmp
repz
and
xchg
pop
mov
add
test
sbbb
jne
je
mov
mov
sbbl
xor
mov
mov
mov
outsb
cwtl
pop
test
fs
mov
sub
pop
sub
cmpsl
pop
mov
xor
cmp
pushf
mov
adc
or
pop
ja
dec
out
pop
xor
ret
loop
xchg
push
cli
ficoml
cwtl
jb
push
stos
hlt
cmp
adc
mov
xor
xor
cmp
outsl
scas
arpl
shll
inc
in
bound
adc
xchg
add
push
inc
xchg
xlat
cmp
pop
mov
cltd
shrb
xor
test
ljmp
test
aas
inc
jns
sahf
outsb
ds
ss
dec
xor
imul
push
or
je
jno
jecxz
lods
mov
xor
mov
test
fsts
movzwl
mov
dec
sbb
cmp
xchg
pushf
jecxz
adc
or
jge
inc
movsb
mov
jns
jb
mov
sbb
and
mov
fs
das
insb
push
jne
dec
fwait
fs
push
pop
pop
or
mov
adc
xor
daa
add
jb
pop
mov
sub
mov
leave
mov
cli
shrb
ret
add
std
aaa
pop
dec
mov
dec
mov
je
add
cmp
jno
mov
lods
mov
mov
movsb
jns
adcb
dec
mov
mov
sub
scas
rclb
frstor
mov
cltd
mov
int
adc
xchg
fdivl
cmpsb
imul
adc
or
cmpsl
push
in
mov
sbb
mov
add
mov
mov
adc
mov
inc
or
xchg
mov
add
cmp
icebp
cmp
test
mov
mov
cmpsb
jb
xchg
iret
xchg
xor
insb
lret
push
icebp
fisttps
xchg
adcl
lock
xchg
imulb
fnstenv
xchg
aam
enter
test
cmp
aam
repz
aaa
scas
loop
fwait
hlt
nop
je
icebp
cmp
mov
mov
mov
fwait
cmp
ss
inc
push
lods
out
and
adc
xchg
pop
aam
inc
mov
loope
mov
add
sub
cmp
movsl
cmp
and
in
test
jns
cmp
inc
xor
hlt
mov
xchg
out
pushf
mov
xchg
lea
test
pop
arpl
addb
ja
sub
in
test
mov
and
hlt
add
sbb
xchg
int3
pop
mov
sub
mov
xor
adc
js
mov
scas
pop
add
push
pop
test
jle
lret
daa
pop
and
cmpsb
loope
mov
push
xchg
test
fs
inc
fs
int3
push
and
xchg
push
std
push
mov
cwtl
dec
into
xchg
adc
and
call
aas
in
addr16
jb
lret
push
mov
mov
and
mov
aam
or
shrb
test
mov
adc
daa
cmp
das
popa
nop
in
jae
or
cwtl
sub
jl
out
pushf
mov
xor
and
test
pop
js
cmp
jle
loopne
and
pop
sub
leave
push
aas
dec
sbb
pop
or
cmpsb
sub
jp
mov
sub
fsubl
add
jb
test
lods
or
cmp
insb
movsb
mov
mov
rorl
inc
into
out
jns
sbb
sahf
outsl
mov
jns
movsl
sub
fnstenv
repnz
add
fldenv
insb
and
lods
and
mov
or
or
mov
orb
jo
leave
fs
call
cs
add
jge
mov
dec
xlat
or
push
scas
lods
lret
sub
adc
outsl
xor
loopne
inc
xchg
je
xchg
push
xor
pop
cmc
mov
sub
inc
and
scas
dec
fs
sarl
test
jge
mov
jns
test
mov
xchg
faddp
mov
shrb
dec
jp
mov
shrb
lods
pop
mov
cmp
movsb
test
jae
test
shlb
mov
mov
mov
cmpsb
dec
mov
fs
lods
bound
mov
ljmp
cmpsl
xor
mov
lods
jns
out
pop
cmp
pop
jae
enter
cmp
je
mulw
mov
dec
lods
dec
mov
lea
sub
lock
stos
faddl
fs
mov
xchg
repnz
add
mov
sub
mov
sbb
lods
jle
in
add
insb
xchg
jp
jbe
mov
in
negl
mov
stos
pop
std
in
xchg
int
add
inc
mov
push
cmp
jecxz
scas
mov
mov
mov
mov
daa
sbb
mov
call
push
mov
ficoml
fdiv
xlat
insl
mov
out
les
leave
js
test
adc
stos
sbb
test
test
leave
daa
mov
jl
movsl
cmp
adc
aam
xor
ljmp
pop
xorb
sub
test
sarb
icebp
jae
adc
or
movsl
lods
mov
icebp
js
repz
sarb
and
push
sub
popa
in
dec
je
fcmovnu
push
aam
popf
fcompl
xor
or
ret
int
cs
arpl
mov
jo
in
rep
mov
mov
lods
icebp
in
icebp
in
insb
adcb
xchg
movsl
mov
and
push
fstpl
lock
push
ret
lret
fdivrl
pop
outsb
push
dec
in
push
fs
test
inc
ffreep
mov
mov
mov
insb
out
fisttpl
pusha
jo
jae
and
mov
mov
add
mov
xor
es
cmp
movsb
movsl
xchg
mov
imul
dec
push
jmp
pop
pop
rol
daa
or
imul
pop
mov
fwait
xchg
jo
mov
xchg
mov
push
xchg
mov
cltd
adcl
mov
xchg
xor
leave
sub
jo
je
add
xchg
popf
jae
int3
in
arpl
stc
fld
xchg
loope
inc
xchg
push
xchg
push
mov
lods
repz
and
imul
xchg
nop
sbb
shlb
int3
xor
fstl
and
sbb
test
mov
or
test
ret
repnz
mov
push
insb
dec
jg
pop
sub
movsb
mov
movsb
stos
cmp
cs
push
xor
xor
adc
pusha
out
mov
fisttps
pop
ficompl
mov
jmp
xor
lds
movsb
adc
jo
je
sbb
out
pop
xchg
jne
lds
add
or
ja
pop
inc
mov
sti
lods
fisubrs
lods
stos
xchg
out
and
mov
cmpsl
ffreep
jb
mov
inc
xor
shr
push
xor
lcall
or
shll
lret
mov
dec
arpl
lret
rorl
inc
lods
jno
dec
mov
daa
insl
pushf
push
in
dec
mov
imul
in
mov
js
stos
sub
mov
push
int3
jecxz
mov
dec
sub
fsubl
mov
sub
imul
imul
and
and
adc
jb
mov
lret
cwtl
adc
addr16
aad
sbb
push
nop
inc
sub
lahf
stos
and
loope
in
jecxz
jo
push
pop
jbe
xchg
push
pop
pop
inc
enter
fdivs
test
mov
push
xchg
dec
or
lcall
int3
mov
stos
fldl
nop
inc
jo
lret
xchg
dec
cwtl
mov
call
ljmp
imul
shll
out
pusha
add
jns
mov
xchg
insb
jmp
imul
mov
add
fldcw
adc
inc
inc
clc
nop
cmc
notb
jo
lods
stos
and
sbb
xorl
jl
sbb
cmp
movsl
lahf
cli
cmp
add
mov
sbb
in
iret
js
xchg
loop
sbb
sbb
cmp
loopne
mov
mov
xorl
jmp
scas
xchg
sub
sub
cmp
cmp
mov
jmp
jnp
loopne
sub
and
aam
mov
jmp
call
iret
sbb
into
mov
andb
mov
xchg
jo
cmp
aam
sub
icebp
dec
jnp
and
outsl
nop
mov
dec
pop
or
aam
xor
sahf
and
in
pop
adc
adc
xchg
xchg
mov
mov
lcall
lock
jecxz
mov
and
xor
sub
adcb
pop
aam
orl
and
push
xchg
mov
mov
adc
insl
sti
sahf
mov
ss
aaa
push
mov
pushf
dec
icebp
pop
pop
dec
dec
dec
or
xchg
fs
lea
lds
and
test
and
fmulp
xor
bound
cltd
stos
and
aaa
shrb
or
daa
cli
into
fistps
adc
dec
jecxz
nop
xor
xchg
xchg
aas
mov
cmp
scas
dec
gs
movsb
sbb
xchg
xchg
stc
icebp
xchg
popa
mov
mov
mov
adc
add
aas
push
cmc
xor
sbb
jno
adc
sub
sub
out
daa
xor
adc
dec
push
push
fs
dec
dec
data16
stos
aas
and
xor
popa
mov
stc
icebp
jl
jno
sbb
jg
jp
negl
mov
cwtl
fwait
test
adc
stc
loop
arpl
and
mov
dec
out
mov
movsb
loope
leave
jae
mov
sub
outsb
push
push
push
das
pushf
mov
adc
inc
cltd
rorl
movsl
outsb
pop
cmp
or
pop
xor
or
dec
xchg
imul
sub
inc
dec
data16
xchg
shll
repz
xchg
cmp
fmull
adc
aam
mov
push
mov
call
pop
xlat
enter
mov
mov
and
or
jo
add
mov
subl
out
xor
mov
fdivr
sbb
pop
ds
cmp
push
jmp
dec
cmp
jbe
lods
fildl
test
sub
jb
mov
sub
fs
sub
add
cmp
xchg
mov
pushf
mov
xchg
mov
fldl
push
push
pop
jp
push
push
fs
cmp
add
push
lods
cmc
jb
aaa
mov
aam
jne
mov
cmp
mov
ret
push
add
or
inc
jo
push
adc
sti
dec
arpl
xchg
aaa
sbb
fs
out
mov
dec
sub
jb
cmc
add
sbb
mov
cmp
mov
mov
add
dec
and
dec
cmpsb
mov
mov
ljmp
clc
sub
movsb
sub
and
inc
sub
jns
pop
mov
cwtl
daa
and
iret
mov
ficomps
addb
jno
notl
scas
jecxz
je
xchg
lret
repz
jns
sub
mov
aaa
and
xlat
mov
pushf
mov
sbb
xchg
cmpl
aas
jne
repnz
jns
mov
out
jmp
xor
jns
out
sbb
rolb
dec
xchg
mov
je
popf
minps
inc
inc
mov
lods
ret
jmp
pop
inc
add
xor
add
stc
pop
daa
pop
adc
call
xor
stos
popf
sub
test
lret
daa
add
pop
jne
jle
mov
mov
mov
push
sub
inc
pushf
daa
orb
stos
mov
dec
in
and
mov
dec
ja
shll
jb
lods
and
push
xchg
shlb
inc
jne
xor
ret
adc
fwait
movsl
add
test
push
mov
pop
adc
nop
scas
aas
pushf
mov
pop
inc
inc
xlat
jnp
in
adc
jae
inc
test
or
repz
mov
adcb
clc
das
add
test
jns
inc
push
adc
mov
push
mov
std
lcall
lea
das
and
sub
fwait
cmp
add
push
in
bound
hlt
das
jno
jl
or
and
mov
lret
xor
xor
test
pop
int
in
mov
aam
icebp
imull
addb
lods
popa
les
xor
mov
adc
adc
pop
mov
pop
loopne
gs
outsl
jp
mov
aas
aad
pop
push
icebp
roll
xor
sub
jb
insb
inc
es
inc
sub
mov
xorl
idivb
or
cmpsb
push
xchg
int
cmc
fidivl
mov
xchg
int
cmp
jbe
test
mov
int
push
or
mov
das
push
arpl
sub
mov
lcall
fs
cmp
out
jle
fcmovnu
xchg
adc
int3
test
sbb
push
mov
mov
aaa
mov
call
cmp
and
aas
mov
push
pop
dec
sbb
pop
ds
gs
or
mov
mov
lods
sub
mov
xor
sub
loope
loop
lret
sbb
int3
xchg
test
jno
mov
les
mov
movsl
and
cmp
lret
mov
xlat
sub
rolb
mov
or
in
jle
movb
fcomp
adc
and
mov
mov
sub
inc
mov
xor
mov
pop
adc
ret
addb
jae
jae
shl
jno
cltd
xchg
cmp
mov
fwait
and
outsb
adc
jne
adc
in
ret
mov
clc
int3
pop
pop
iret
sbb
mov
mov
repz
push
fs
fisttpl
jg
test
movsb
enter
sbb
cs
jp
leave
test
push
lock
aad
jb
sbb
scas
push
loopne
test
popf
aas
fdivr
xchg
lcall
push
cltd
ds
xor
mov
gs
les
lcall
push
stos
loope
fsubrs
shl
test
loopne
rclb
cmpsb
mov
loop
arpl
fsubp
scas
jbe
mov
mov
push
lds
test
mov
out
adc
in
sbb
cli
adc
scas
outsl
test
sub
fsubrs
popa
in
shrb
int3
lret
mov
xor
ljmp
icebp
mov
xor
mov
popf
clc
push
mov
outsb
mov
jno
push
test
jg
pop
icebp
dec
lock
cli
std
rol
movsb
fnstenvs
in
jle
lahf
rorb
fnstenv
cli
xchg
call
dec
adc
push
sub
stos
jg
mov
jecxz
repnz
pop
insl
mov
mov
xchg
test
mov
mov
mov
jno
mov
repnz
aas
sti
dec
pusha
notl
lcall
mov
lret
popa
jae
sbb
andb
stos
icebp
into
and
popa
int3
jb
xchg
sub
and
pop
inc
sub
mov
shrb
loopne
sub
test
mov
adc
adc
mov
rclb
fisubrs
data16
lods
xor
mov
ret
xor
call
push
je
sub
mov
fwait
stos
mov
cmp
je
jmp
call
enter
ret
shrl
movsb
push
jae
inc
into
fistpl
call
rcrb
psubsw
add
subl
rorl
mov
hlt
arpl
int3
ljmp
nop
cmpsl
movsl
pop
pop
addb
add
pop
add
rclb
fcoml
sbb
imul
add
and
push
or
push
or
lock
lods
mov
cwtl
lret
mov
mov
mov
lods
mov
sar
xor
sub
jae
pop
and
pop
int3
cmp
leave
fidivrs
push
sub
xchg
sub
push
movb
inc
ret
mov
pop
pushf
sub
xor
xchg
jne
push
mov
pushf
jo
movsl
cs
loopne
jp
xchg
scas
xchg
mov
in
xchg
aad
lods
in
js
jecxz
in
test
inc
stos
nop
add
stos
sbb
test
mov
test
dec
ret
cmpsl
mov
xchg
cmpsb
jno
in
aam
movsl
insb
xchg
cmp
mov
jo
lods
or
inc
lds
in
mov
sub
shlb
test
sub
mov
lahf
sub
push
pushf
jo
cmp
rcrl
shlb
pushf
int3
push
in
cmp
inc
sub
dec
mov
in
jecxz
cmp
inc
xorl
add
dec
fidivs
mov
pop
xchg
mov
adc
dec
xor
shlb
loopne
bound
nop
cmpsl
xor
sbb
test
int
push
mov
sub
dec
popa
sbb
arpl
xor
xchg
add
mov
in
adc
mov
pop
test
jno,pn
xchg
imul
orb
mov
ds
pop
aaa
mov
insl
popa
jle
rclb
aam
pusha
jb
xchg
or
ret
bound
in
jo
xorl
cs
pop
movsb
in
gs
fstps
test
xor
xchg
jmp
insb
scas
jo
cmp
xor
push
mov
dec
pusha
push
mov
and
push
adc
xor
mov
cmpl
mov
add
push
xchg
xchg
pop
mov
daa
nop
jg
mov
jp
mov
subb
cmp
jae
jl
iret
lahf
jns
ret
pop
dec
movsb
dec
add
imul
movsb
inc
push
fidivs
push
cmc
cmp
icebp
xchg
pop
xor
test
mov
pushf
sub
pop
idiv
sub
xchg
mov
das
movsb
adc
jns
aas
xchg
sbb
lods
push
xchg
xor
aaa
xor
leave
cwtl
push
call
pop
out
cmc
add
cwtl
jge
fs
int3
push
aas
sub
mov
adc
xchg
das
sahf
lock
jno
outsb
sbb
outsl
cwtl
inc
popa
pop
xchg
sub
xchg
inc
in
jecxz
out
push
xchg
pushf
push
popa
std
idivb
mov
int3
xchg
shrl
je
arpl
or
repnz
lcall
orb
mov
jmp
pushf
movsl
adc
dec
andb
lret
fldenv
mov
or
pop
enter
bound
mov
sbb
pop
sub
aam
xor
sbb
xchg
push
call
mov
add
adc
sbb
pop
repz
add
shlb
mov
shll
adc
rolb
inc
pushf
or
fcompl
test
shl
imul
sub
adc
shl
sub
jno
pop
sub
sub
pop
pop
xor
mov
icebp
sbb
jl
or
sub
push
getsec
xor
fbld
scas
int3
je
std
dec
pusha
jnp
repz
movsb
jbe
mov
pop
and
jmp
cwtl
jno
das
loop
push
repz
mov
push
repz
aaa
dec
mov
in
pusha
mov
sub
pop
mov
mov
mov
and
rol
xor
icebp
bound
adc
mov
inc
sub
int
test
pushl
xor
adc
jecxz
push
xor
sbb
into
add
pusha
movsb
or
loop
xchg
lcall
das
pop
mov
les
add
fdivl
jo
or
test
lock
jb
or
and
or
jo
punpckhbw
les
mov
mov
mov
call
mov
push
repnz
dec
jge
push
pop
inc
ds
xor
insb
xchg
dec
mov
movsb
fisubrs
sub
adc
pop
gs
sub
cld
sbb
mov
mov
dec
inc
pushl
imul
std
mov
clc
fisttpll
cmp
dec
lahf
daa
sbb
xchg
enter
xchg
xchg
je
ret
shl
mov
popa
sub
adc
sub
cmp
movsb
xor
push
adc
push
fcoml
jmp
cltd
movsb
es
jl
xor
imul
nop
popa
pop
sub
mov
lahf
mov
xchg
adc
mov
lods
jbe
stos
in
lretw
push
dec
sub
insb
pop
pop
imul
lods
test
aas
imul
jno
jb
fistps
cltd
int3
sub
loope
pop
cwtl
clc
pop
sahf
mov
cld
mov
std
ds
aas
cmpsl
pop
sbb
mov
adc
jb
cmp
sub
loopne
repnz
int3
xchg
mov
xchg
inc
movsb
cmpsb
mov
and
adc
mov
mov
and
adc
cwtl
cmp
outsl
in
lret
adc
fs
es
jmp
sbb
loope
xlat
dec
mov
pushf
cmp
mov
scas
insb
dec
arpl
int3
mov
dec
push
mov
fsubs
test
in
aas
mov
jns
dec
inc
ret
sub
jecxz
int3
mov
rolb
pop
cs
cwtl
sub
xchg
or
cmpsb
sub
push
jae
enter
shrb
les
insb
mov
cmpsl
aas
add
leave
xchg
inc
xchg
sub
mov
inc
add
rorb
sub
insb
sarb
sar
pop
pop
arpl
jb
pop
xchg
pop
int3
clc
pop
pop
leave
loopne
dec
outsb
test
mov
dec
lods
cld
sbb
in
jb
mov
arpl
mov
push
lea
les
pop
dec
bound
cmp
jmp
and
push
mov
lock
mov
lods
sbb
sahf
ret
out
pop
sbb
sbb
gs
test
jne
sbb
xorw
scas
or
jp
mov
xchg
push
jo
mov
jb
pop
mov
int3
stos
push
mov
adc
scas
pushf
and
adc
mov
pop
sbb
jno
imul
sub
stos
adc
cld
push
adc
inc
cmp
fs
fwait
and
cld
mov
je
loopne
pop
enter
push
inc
sub
jo
das
sbb
scas
sbb
je
enter
jle
imul
jl
dec
dec
dec
mov
repnz
loop
aad
cs
stos
repz
jb
push
fstpt
lods
aaa
mov
mov
je
xor
lahf
pop
mov
mov
and
xor
test
mov
add
adc
je
mov
xor
jo
clc
sub
fsubrs
sti
mov
xchg
dec
movsb
mov
scas
cmpsl
leave
andb
mov
xor
out
rclb
xchg
sti
mov
pop
pop
imul
sbb
sbb
pop
pop
mov
outsb
ljmp
dec
mov
xchg
cmp
fwait
jb
mov
and
insl
mov
int
mov
lcall
daa
outsl
pop
call
enter
arpl
push
nop
add
aaa
or
or
cmp
inc
insb
nop
decb
jl,pn
adc
pushf
scas
mov
mov
das
and
mov
dec
neg
jg
jmp
cli
repnz
pop
mov
sub
fmuls
jmp
enter
jb
push
pop
jo
sub
sahf
xchg
jb
mov
imul
mov
enter
jo
imul
mov
xchg
in
fistl
outsb
stos
imul
xchg
nop
pusha
leave
mov
sub
shlb
inc
jo
jno
int3
and
ret
push
xchg
cmpsl
and
in
sub
addr16
aas
das
shr
sbbb
adc
loope
hlt
xchg
inc
and
sbb
popa
xorb
stos
leave
test
out
lcall
xchg
test
imul
push
dec
push
and
mov
orb
lret
pop
mov
sbb
sub
jb
test
lahf
pop
adc
mov
int3
call
int3
arpl
in
inc
repz
aaa
jns
adc
and
pop
dec
push
jb
jae
inc
aas
xor
icebp
and
jp
push
dec
or
xor
scas
popf
cmp
imul
mov
push
and
fdiv
xor
xor
das
enter
test
pop
icebp
or
pushf
dec
movsb
xor
jl
jno
mov
outsb
lods
sbb
pop
jl
test
jl
daa
lahf
mov
cmpl
dec
xchg
ret
lea
cmpsl
pop
leave
andb
xchg
adc
dec
in
daa
movsb
hlt
sub
jge
in
and
jmp
stos
fidivs
les
movsb
dec
xchg
jnp
stos
insl
movsb
xchg
fidivs
push
sub
cmp
mull
pushf
in
and
cmp
mov
mov
mov
or
mov
mov
adc
mov
jbe
mov
pop
fadds
xchg
mov
jo
xorb
inc
mov
test
lahf
jb
and
mov
lods
mov
jl
stos
lcall
fsts
cmc
cmpsb
jl
scas
outsb
mov
jne
arpl
sbb
mov
int3
inc
or
dec
mov
mov
mov
xchg
cmp
push
mov
push
add
insb
je
bound
lods
mov
mov
sti
ds
imul
nop
pop
in
lahf
push
je
xor
xchg
jb
and
ss
sbb
mov
aaa
cwtl
mov
rcrb
sub
mov
cmc
jo
pusha
test
add
sub
outsl
addr16
mov
nop
xchg
mov
cmpsb
xor
cmc
test
jl
pushf
mov
bnd
sub
iret
shr
data16
imul
pop
daa
and
bound
pushw
pushl
mov
mov
je
rcrb
mov
mov
fmuls
xlat
dec
sub
mov
shlb
test
fucom
sarl
arpl
or
test
push
mov
mov
pop
jne
fs
lahf
adc
cmpsl
dec
pop
pop
arpl
je
pop
xchg
cltd
xchg
mov
pop
mov
int3
sub
das
add
ja
test
lea
cmp
in
jmp
mov
rolb
shl
cmc
rclb
mov
push
xchg
xor
cmpb
mov
int3
push
xchg
xchg
in
mov
mov
inc
arpl
cmp
stc
xchg
mov
pop
jae
mov
pop
inc
jb
lahf
aaa
lock
lea
out
xchg
xlat
pop
mov
xchg
cs
adc
scas
pop
cmp
insl
mov
dec
sbb
scas
xchg
in
popf
xlat
mov
or
xchg
pop
jmp
jmp
mov
jae
xchg
mov
clc
dec
movsl
jge
ds
dec
jge
xor
int3
mov
cwtl
lea
mov
loop,pn
fs
loop
and
test
test
xor
add
in
xor
sub
movmskps
sbb
mov
sub
icebp
adc
mov
sub
mov
or
fdivrl
test
lods
push
pop
xchg
jb
sub
lock
nop
aam
das
push
xor
aam
cmpsl
pop
sbb
int3
std
jns
popa
out
sbb
xor
enter
sbb
adc
test
in
mov
das
int3
movsb
in
test
mov
xor
repz
test
scas
mov
inc
jno
xchg
mov
int3
lcall
mov
je
cli
out
jl
push
xchg
jmp
dec
enter
in
pop
jns
mov
sbb
lods
dec
add
jbe
arpl
push
outsl
je
movsb
xchg
mov
inc
add
pop
daa
negb
stos
in
jo
je
inc
pop
mov
fisubrs
sahf
cbtw
js
push
lea
sbb
fidivs
jle
adc
ss
test
cmpsl
mov
add
pop
clc
repz
xor
bound
je
inc
dec
inc
push
stos
sti
lds
out
mov
jbe
dec
and
aas
xchg
pusha
in
outsb
insb
subb
test
lods
test
arpl
test
mov
nop
pop
popa
movsb
pop
testl
push
in
js
jl
mov
adcb
pop
enter
mov
or
inc
push
inc
sbb
icebp
mov
imul
ds
pop
mov
pop
shrb
lock
push
stc
push
and
je
or
xor
sub
xchg
mov
push
pop
push
and
pop
imul
push
test
aaa
cmc
ret
sbb
cwtl
jl
mov
or
loope
push
fs
mov
mov
insb
repnz
cld
repz
loop
sub
dec
cmp
fs
outsl
or
loopne
jb
ljmp
stos
paddusw
orl
mov
pop
in
add
inc
or
ljmp
dec
repnz
xor
sti
mov
jo
icebp
xchg
cmp
mov
lahf
mov
cmpsl
test
push
lods
or
bnd
arpl
rorb
mov
inc
cmp
mov
push
aad
push
lahf
and
mov
or
int3
and
sub
pop
out
mov
out
pop
xorb
mov
data16
loop
push
mov
lock
mov
outsl
inc
popl
dec
dec
int3
scas
inc
push
sarl
sti
cmp
test
lahf
xchg
mov
ret
push
divb
divb
lea
movsb
mov
aad
and
sbb
arpl
outsl
mov
xor
inc
je
loop
ret
les
adc
mov
push
ss
lea
insl
and
test
iret
adc
adc
idivl
sti
test
or
sahf
lods
test
in
sub
pop
mov
xor
mov
add
lods
xlat
cwtl
adc
mov
or
icebp
ret
mov
lcall
lret
jmp
pop
orl
rcll
jp
push
sbbb
pop
stos
pop
nop
push
insb
dec
shrb
data16
sub
aad
hlt
mov
rorb
lahf
loope
insb
jp
and
movsl
sbbl
es
cmpsb
sub
aam
jo
repnz
jo
push
inc
jnp
clc
push
add
movsl
xor
mov
mov
out
dec
xchg
ljmp
push
xchg
daa
adc
cmp
ja
jns
dec
xor
neg
push
les
je
mov
insl
jns
push
sub
lock
repz
inc
mov
xchg
daa
int3
xor
pushf
cmpsb
bound
cs
sbb
mov
loopne
mov
cld
xchg
das
leave
arpl
pop
scas
ffree
nop
adc
add
mov
pop
inc
leave
mov
int
mov
mov
int3
mov
pop
repz
mov
mov
push
push
mov
xchg
aas
cmpl
addr16
xor
dec
mov
adc
aas
xchg
sbb
aam
cmp
inc
filds
mov
xchg
sbb
cwtl
loope
imul
lods
pop
jmp
out
dec
outsb
iret
popf
mov
in
lcall
fwait
lods
lahf
cmpsb
sub
pop
jne,pt
pop
inc
pop
mov
aaa
jecxz
pop
inc
fcompl
fwait
xchg
fstsw
xchg
sub
push
mov
and
jl
xor
popf
test
xchg
ja
mov
repnz
mov
sub
or
dec
movsl
xchg
in
ja
pop
das
push
test
cltd
pushf
aas
out
jae
daa
pop
popf
adc
jmp
push
dec
mov
adc
xchg
cmp
pop
and
xor
loopne,pn
mov
mov
imul
enter
xchg
lds
mov
fmull
pop
in
and
mov
lds
mov
inc
stc
scas
mov
dec
mov
mov
cmp
push
push
sbb
pushf
rorb
mov
pop
loopne
xchg
adc
push
cmc
ss
cmpsl
fistpl
js
stos
inc
mov
mov
xchg
cmp
popa
xor
icebp
mov
adc
into
inc
std
out
add
and
pop
leave
adc
lahf
inc
andl
pcmpeqw
xchg
xchg
sbb
incl
lea
push
xchg
pusha
jle
js
rcr
push
mul
cltd
mov
mov
jo
sub
mov
or
scas
sub
rclb
and
adc
adc
lret
add
outsb
mov
jmp
sub
sahf
movsb
add
fsubl
push
fmuls
ja
leave
add
fwait
mov
notb
adc
sti
lea
or
mov
out
insb
xor
lea
orb
lock
sbb
lock
cmpb
repz
stos
lods
mov
rclb
adc
xor
and
pop
or
ret
mov
int3
and
add
fwait
jmp
cmpsl
dec
dec
xchg
xchg
aam
jp
nop
xchg
adc
cmc
fcoms
cmp
cmp
add
mov
fdivs
xchg
fmull
bound
je
mov
or
lock
stc
add
loopne
push
inc
pop
jle
pop
sub
sub
lods
cmp
cmp
cltd
sahf
jg
cmp
aas
in
test
and
pop
cmp
inc
mov
int3
adc
mov
cli
xor
ret
cmp
cmc
lods
insb
subl
wbinvd
sub
and
scas
aam
xchg
sbb
mov
lods
test
out
cmp
out
pop
push
test
lods
xchg
lcall
jecxz
jg
adc
push
and
mov
outsl
enter
cmp
dec
test
jmp
rolb
mov
xlat
or
cld
stc
jecxz
test
sub
mov
je
lods
pop
repnz
shlb
sbb
xchg
adc
mov
mov
test
rcr
inc
add
pop
dec
and
sti
add
sub
mov
mov
mov
mov
mov
push
and
pop
cmp
pop
mov
scas
pop
dec
lret
push
call
aaa
xchg
push
mov
mov
cmp
dec
mov
push
jae
jne,pn
xor
test
mov
adc
fs
pop
xor
pop
into
sbb
sahf
mov
mov
sahf
dec
jg
ss
jns
xor
mov
jmp
add
ljmp
nop
aaa
test
mov
movsb
jge
push
lods
xchg
lods
xor
adc
sub
sbb
pop
xlat
popf
push
mov
pop
pop
hlt
sub
das
idivl
xchg
adc
cmc
test
test
push
pop
aad
adc
movsb
aas
out
insl
cmpsl
mov
in
cmpsl
pop
movsl
test
arpl
inc
sbb
mov
fadds
inc
stos
adc
mov
mov
inc
sahf
xchg
divl
xchg
bound
mov
or
arpl
imul
stos
inc
push
popf
je
loope
jl
test
jge
out
pushf
ds
cwtl
lds
inc
mov
outsl
outsl
and
jmp
aaa
imul
inc
xchg
push
movsb
and
mov
leave
mov
aas
jl
insl
jb
jns
adc
sub
xorl
mov
aas
scas
xchg
daa
insl
mov
lods
mov
mov
cmc
test
addr16
xchg
test
push
pushf
cmp
test
sub
out
dec
sahf
test
repnz
mov
jnp
aad
xor
lahf
dec
notl
sub
mov
stos
mov
cs
push
fidivl
repnz
fidivs
xchg
scas
mov
stos
sbb
jle
sub
ficompl
dec
ljmp
jb
push
xlat
dec
mov
in
into
mov
mov
pop
jns
cli
addb
outsl
dec
or
mov
jns
pop
je
jno
xchg
cs
movsb
sahf
mov
insb
xchg
pop
sub
ficoms
orb
sub
mov
repnz
clc
dec
repz
jns
xchg
mov
mov
shrl
jb
and
sarl
notl
sbb
stos
inc
add
cltd
pop
mov
int3
xlat
out
fwait
mov
cmp
call
mov
mov
scas
or
pop
mov
fsubl
or
cmpsb
rol
fwait
test
addr16
xor
out
mov
or
hlt
pop
mov
sub
iret
pushf
lcall
bound
mov
inc
in
inc
aas
scas
xchg
nopl
insb
xor
setne
stos
dec
js
clc
pop
fstl
jno
sbb
push
stos
lds
mov
lahf
outsl
fcmovb
ret
movsb
arpl
mov
pusha
xchg
test
or
pop
sarb
aaa
mov
mov
in
shrb
mov
pop
frstor
bound
sbb
gs
es
je
cmpsl
int3
xorl
fisttps
test
inc
das
cwtl
cli
push
fs
hlt
dec
int3
pop
cmp
jmp
neg
stos
or
in
test
xchg
inc
test
or
mov
movsb
xor
xor
inc
adc
lcall
add
xorb
xor
mov
movsb
test
sub
inc
scas
in
sbb
dec
imul
out
call
pop
enter
adc
push
cld
iret
pop
pushf
cmp
imul
stos
mov
mov
add
xchg
jmp
cmc
xlat
lcall
sarl
xchg
jno
lcall
or
xchg
sahf
jp
cmpsl
inc
ja
mov
pop
or
mov
inc
fsubrs
vaddss
add
cmp
loop
popa
push
dec
mov
jnp
mov
cmp
dec
mov
push
or
sub
gs
lahf
dec
or
test
mov
push
shrl
int3
je
fxch
mov
pushf
push
mov
imul
mov
jno
stos
sbb
mov
mov
dec
ja
stc
pop
outsb
cmp
cmp
dec
bound
pop
jl
enter
xor
or
ja
xchg
and
jno
adc
adc
shlb
test
clc
ljmp
and
mov
push
fdivrl
js
mov
dec
mov
mov
xor
nop
xor
dec
sub
icebp
mov
int3
or
and
sbb
add
push
adc
movb
cmpsl
arpl
mov
pushf
xchg
out
xchg
xchg
je
adc
fstpt
sti
add
test
lods
ss
or
aam
js
into
mov
xchg
jmp
fdivp
and
lods
add
aaa
adc
mov
mov
mov
jp
daa
mov
inc
sub
rclb
data16
testb
inc
xchg
pop
mov
jno
dec
mov
call
leave
or
cld
sbb
xchg
mov
test
sub
adc
into
pop
xor
dec
jnp
in
imul
mov
in
lret
idivl
xor
cmp
sbb
fdivrl
dec
and
jo
sub
lods
test
pushf
enter
outsl
sbb
mov
xchg
xor
and
ds
in
cmp
jmp
pop
ljmp
pop
xchg
pop
insb
adc
scas
push
pop
inc
out
mov
insb
mov
add
dec
jge
repz
push
add
leave
sbb
popl
ret
jns
sbb
daa
inc
mov
dec
dec
js
mov
jae
and
test
jo
push
pop
xor
cwtl
fsubp
mov
dec
gs
mov
mov
pushf
mov
imul
xchg
mov
cmp
mov
adc
mov
icebp
movsl
xor
mov
jbe
lcall
push
shlb
sarl
and
pop
mov
mov
mov
mov
sbb
loope
sub
adc
rclb
mov
out
mov
cmpsb
out
into
dec
popa
xchg
dec
inc
out
mov
jecxz
xchg
jmp
and
sub
xchg
pop
jb
jbe
in
jns
aas
mov
and
rcrb
stos
iret
out
adc
mov
bound
and
fdivl
pop
xor
mov
xor
js,pt
aam
push
sub
adc
inc
popf
loopne
rorb
ret
push
cmp
xorb
push
int3
enter
sub
mov
stos
push
mov
jae
jne
pop
sub
xchg
xlat
adc
dec
mov
mov
mov
cmp
xchg
sub
mov
mov
dec
jnp
sub
jno
inc
outsb
mov
es
mov
lea
movsb
ret
mov
repz
mov
js
sub
hlt
leave
mov
push
xor
mov
popa
push
xlat
xchg
dec
adc
xor
cmp
jl
in
jb
mov
jns
pop
adc
aad
adc
shlb
bound
jle
pop
ja
dec
adc
lds
adc
enter
cld
mov
repnz
loope
outsb
xchg
xchg
popa
icebp
daa
je
fwait
rclb
adc
leave
pop
sbb
lods
rcll
mov
leave
push
push
sub
push
cmp
stos
sub
inc
xchg
shl
push
popf
lods
pop
adc
xchg
push
jmp
sub
lret
xchg
aad
mov
xorl
mov
rolb
icebp
rcl
mov
jb
push
lahf
mov
jl
cld
xor
jge
stos
and
fs
pushl
pop
sbb
push
insb
popa
enter
and
dec
push
xchg
jno
xchg
sbb
or
adc
adc
lea
fisubrs
sbb
popf
jp
daa
push
xrelease
inc
add
dec
test
xchg
movsb
test
adc
pop
sbb
fnstenv
push
push
test
rorl
jl
sub
popf
shl
int3
fcoms
repz
mov
bound
loop
or
or
mov
popa
xor
inc
mov
popa
adc
stos
in
outsb
js
sbb
sub
fcoml
call
jo
pop
cmpsl
int3
mov
divb
int3
adc
icebp
repz
outsb
loopne
jecxz
pop
xchg
lcall
mov
xchg
lods
je
inc
jmp
insb
pop
mov
dec
pusha
movsl
dec
mov
xor
xchg
jnp
clc
mov
lods
mov
bound
mov
ss
mov
push
imul
mov
loope
imul
arpl
push
loop
leave
jno
gs
aad
imul
xor
inc
mov
mov
mov
pop
add
pop
and
sub
adc
andl
push
jo
aam
insl
loop
inc
lods
ret
sub
bswap
repz
scas
int3
xchg
test
in
sahf
mov
add
movsb
notl
pop
nop
xchg
add
std
adc
mov
icebp
clc
adc
pushf
xor
push
pop
cmp
lea
lods
mov
inc
pop
repz
in
mov
pop
mov
inc
ss
xor
sbb
pop
pop
push
mov
inc
dec
dec
jae
testb
mov
push
push
and
or
cmp
add
pusha
fs
sbb
stc
or
mov
sbb
jmp
shll
xor
cmp
adc
ss
in
inc
ret
jmp
jns
ja
lods
inc
cld
test
add
sub
nop
mov
incl
movb
popa
insb
cwtl
jp
mov
fsubs
jo
adc
pop
cwtl
repz
dec
stc
sub
cmp
cmp
sbb
adc
movsb
fwait
sub
mov
out
fldt
dec
cli
sarl
cwtl
out
add
fs
ret
cmp
cmc
mov
cltd
pushf
sub
mov
xor
int
cli
xor
pop
pop
inc
jb
ja
stc
mov
xchg
sbb
lret
jmp
fwait
outsb
pop
in
cmp
ja
std
sahf
lcall
rorl
jo
pop
in
xor
mov
mov
pop
cwtl
scas
xor
jbe
push
das
xchg
pushf
push
js
push
int3
jns
std
inc
out
insb
fs
and
leavew
mov
push
mov
add
cmp
ficoml
leave
mov
mov
jge
cmpsb
faddl
ja
jno
jecxz
ret
in
mov
movsl
das
das
push
push
or
int3
es
push
out
dec
jmp
movsl
das
adc
jle
pop
out
leave
inc
xchg
es
pop
int
mov
pop
inc
out
pushf
les
leave
mov
aas
bound
push
je
mov
out
leave
test
stos
mov
sub
mov
sbb
xchg
jns
pop
push
inc
mov
cltd
test
lods
into
xor
pop
repnz
pop
cltd
ss
sahf
sub
mov
pushf
loope
lods
rcrl
cmpsl
addl
aas
push
das
sub
sub
das
mov
fbld
fs
das
imul
pushf
int3
add
dec
sahf
hlt
mov
lret
cmpsb
bnd
dec
mov
cltd
sub
js
orl
pushf
aad
and
popf
test
mov
jl
mov
shrl
jmp
push
fisubrl
lods
and
dec
mov
fwait
movl
movsb
sbb
icebp
in
popa
and
test
dec
lret
xchg
xchg
in
push
cmp
mov
mov
push
mov
leave
jae
pop
icebp
push
jns
inc
popa
fs
stos
subl
cli
push
lcall
adc
icebp
pop
sub
inc
in
fisubs
pusha
das
cmp
cmpsl
stos
fs
fstl
adc
call
xor
in
mov
in
test
imulb
mov
push
xchg
mov
int3
into
and
xchg
in
repz
fdivl
cld
cltd
fwait
xor
add
dec
mov
out
adc
jne
xchg
aas
jp
fidivl
pusha
pusha
jae
mov
xlat
scas
cmpb
cmp
mov
lds
xchg
inc
fisubs
arpl
test
mov
cwtl
movsb
jp
pushf
jns
jo
mov
icebp
test
add
mov
sar
pop
mov
sbb
xchg
ljmp
gs
out
mov
imul
pushf
cli
popf
push
xor
mov
cmp
sbb
mov
and
fs
add
movsl
xchg
cmpsb
movsb
stos
das
sub
inc
bound
xor
xor
loope
pop
testl
inc
push
inc
in
ret
pusha
insl
mov
mov
jnp
inc
xchg
cmp
lahf
lods
or
rorb
ret
mov
pushf
sub
mov
shll
mov
mov
aam
push
idivl
mov
and
and
inc
imul
fadds
inc
xchg
pop
imul
jns
fdivrl
jne
lock
lds
mov
mov
call
das
test
test
mov
jp
add
in
repz
test
jmp
cmpsb
mov
loope
lods
mov
insl
jle
mov
ss
lods
adc
xor
fidivrs
cltd
mov
mov
jg
std
jno
dec
sbbb
std
push
lret
pop
cmp
mov
add
mov
addr16
out
mov
add
movsl
mov
lock
divl
fcomps
xchg
test
je
repz
adc
les
rolb
cwtl
sub
mov
sub
pop
rorl
daa
dec
adc
mov
and
in
mov
or
leave
mov
and
and
adc
in
outsb
je
or
mov
stos
sub
jo
jo
insl
imul
arpl
imul
jbe
out
mov
jmp
or
movsb
cmp
or
fs
imul
push
movsl
aam
jns
test
stos
aam
icebp
sub
jmp
lods
hlt
ficoms
stos
popf
daa
inc
inc
hlt
and
mov
ss
pushf
lods
gs
dec
add
and
mov
test
ror
pop
cltd
sub
shl
sub
loope
insb
pop
mov
imul
push
push
inc
mov
jge
push
imul
jecxz
in
xchg
jae
mov
fists
hlt
mov
dec
insl
bound
mov
popa
int3
in
daa
xchg
aam
adc
cmc
into
js
or
dec
cmpsl
jecxz
mov
rcrb
pop
sub
xchg
stos
aaa
stos
cmp
xchg
imul
in
pop
sarl
inc
subl
out
cmpsb
dec
add
fsubl
mov
sahf
and
imul
sub
pop
cli
push
mov
adc
push
je
push
or
aaa
out
xchg
adc
and
je
popa
stc
cld
fwait
ret
mov
jo
int3
test
push
mov
push
mov
pop
aaa
jle
cmp
inc
stos
insl
xor
lods
hlt
cmpsl
ljmp
mov
xor
mov
test
jmp
dec
jb
mov
aad
les
pop
popf
outsb
fs
in
xor
fs
xchg
shll
or
jecxz
push
mov
arpl
add
notl
enter
adc
les
gs
cmp
fistl
adc
push
jg
xor
out
enter
xchg
lcall
push
daa
sbb
inc
sub
out
xchg
mov
push
lods
sbb
inc
xor
sbb
test
xchg
mov
clc
nop
jo
xor
insl
push
inc
ds
xchg
adc
cwtl
sahf
mov
or
inc
testb
loope
insl
int3
xchg
pusha
sub
cmc
push
sbb
jo
jbe
sti
push
cmp
lods
ds
pop
mov
adc
rorb
popf
dec
das
and
mov
and
pop
mov
xor
jmp
pop
mov
mov
push
xor
cmp
sahf
sub
scas
movsl
xor
and
mov
sbb
cmc
inc
push
and
out
js
pop
jl
sub
sub
ret
xor
loopne
mov
push
push
sbb
int3
lods
xchg
xchg
mov
inc
lods
cmp
pop
dec
movsb
mov
push
inc
inc
stc
cmpsb
pushw
xchg
mov
push
das
mov
xor
shlb
mov
sbb
orl
inc
arpl
jg
popa
xchg
jl
jb
jnp
shl
cmovno
adc
outsb
push
mov
lahf
jnp
in
movsb
dec
insb
sahf
enter
xchg
lahf
push
das
leave
cmpsb
mov
xchg
sub
arpl
aas
dec
or
dec
jp
clc
dec
popa
mov
add
js
jp
jle
mov
daa
jo
mov
cmp
std
xchg
sbb
test
dec
rcll
ds
push
jnp
mov
test
mov
fwait
dec
mov
mov
xor
imul
and
xchg
xor
sub
push
imul
imul
inc
or
sarb
xchg
test
test
jle
add
and
dec
loopne
stos
pushaw
sarb
notl
jnp
popf
mov
and
test
leave
stos
pushf
stc
or
or
test
sub
inc
aaa
jge
aam
pop
mov
in
test
cs
fnsave
mov
popf
mov
loop
mov
int3
add
testl
lock
and
popf
dec
scas
pop
push
mov
pop
or
push
jmp
mov
mov
xchg
ret
jno
out
or
int3
addl
sti
xchg
movsl
mov
arpl
jb
xchg
pop
movsb
push
scas
out
lods
xchg
dec
lret
jp
lret
mov
aam
int3
shrl
repnz
data16
cmpsl
sub
bound
popf
push
or
xlat
push
cmp
push
push
js
popa
es
call
lahf
xchg
and
sbb
xchg
cld
int
subb
sbb
push
imul
bound
mov
nop
xor
stos
test
mov
rclb
mov
mov
int3
cs
jo
ficompl
mov
out
rcll
push
lods
das
rcll
mov
adc
mov
outsb
cmp
bound
sub
fdiv
mov
jle
cmpsl
stos
xor
mov
lods
mov
shrb
stos
nop
in
mov
mov
loopne
cmc
mov
mov
mov
into
aam
and
movsb
xchg
pop
fnsave
xor
lds
int
xchg
lea
ljmp
js
outsb
jae
in
addl
call
jp
test
stos
imul
insl
outsb
sub
clc
pop
je
stos
js
adc
andb
cmp
test
xchg
stos
cld
sbbb
mov
andb
lods
int3
mov
mov
cwtl
lret
mov
fisttpll
lods
push
into
inc
xor
pop
mov
add
push
icebp
xlat
sbb
div
cmpsl
sbb
sbb
inc
cmpsb
inc
rcll
push
add
jg
cmpl
rorl
inc
adc
mov
test
jnp
jp
lock
or
push
gs
inc
cmc
test
fnstenv
push
mov
lods
les
inc
std
xor
mov
je
mov
sti
sbb
lea
pop
adc
outsb
test
pop
iret
shrl
xor
jae
lock
pushf
jo
sti
pusha
mov
or
push
and
les
mov
movsb
xchg
test
fs
outsb
lods
aad
and
push
ds
leave
push
and
adcl
rep
ja
repnz
cwtl
add
js,pn
xor
inc
xchg
add
jno
sbb
stc
test
or
leave
push
xchg
jb
imul
iret
ljmp
mov
cwtl
movsb
jo
js
sub
hlt
dec
inc
adc
cmp
push
add
xchg
sub
and
push
lahf
addl
ljmp
imul
cltd
and
cwtl
jno
lds
stos
xchg
ret
jp
js
notl
fs
xchg
stc
inc
movsl
mul
dec
outsl
scas
cmp
insb
test
mov
mov
sahf
cmc
mov
inc
inc
insb
mov
cmpsl
sub
mov
xchg
dec
pusha
mov
mov
xchg
nop
scas
subb
inc
testb
pushf
jnp
pushf
dec
inc
mov
cmpsb
mov
cltd
nop
mov
pop
xor
xor
mov
imul
cmc
push
push
nop
test
mov
mov
mov
inc
lea
cmp
leave
enter
bound
mov
lahf
xor
jb
movsb
xchg
pop
mov
mov
sahf
das
test
and
push
sahf
in
scas
out
inc
cmp
ret
jl
test
scas
test
jne
imul
cltd
push
mov
pop
mov
sub
js
inc
dec
dec
scas
dec
stc
sarl
mov
cmc
mov
jmp
xchg
jmp
lcall
mov
cltd
and
xchg
ja
jnp
stos
movsb
nop
jmp
out
fsubl
add
sub
mov
imul
lret
adc
aaa
and
aas
inc
pop
xchg
lret
in
lock
out
andl
outsb
bound
cmpsb
mov
mov
out
fwait
icebp
xchg
jmp
mov
aas
cmp
sub
lods
dec
mov
imul
mov
lods
popa
dec
fstpl
out
int
dec
fldcw
jns
nop
cmp
movsl
mov
lods
leave
or
or
ds
jb
sub
test
cwtl
xchg
xchg
loop
cli
mov
neg
nop
mov
jnp
int
arpl
inc
and
and
pop
dec
sub
xchg
fwait
xor
movsb
out
inc
daa
insb
testb
lods
orl
and
pop
mov
fbld
sti
hlt
adc
addr16
rcrb
sub
out
inc
jmp
dec
loope
aas
mov
mov
int
and
jo
xchg
inc
movsl
pop
shrl
dec
imul
out
movsl
mov
pop
in
mov
cmp
je
sbb
clc
insb
jp
xor
sub
ret
fs
insb
loopne
data16
and
int
repnz
cmpsb
mov
mov
and
cmc
jmp
sarl
inc
pushf
les
xchg
push
fbld
je
test
into
pushf
movsb
add
cmp
jb
lods
pushf
fs
nop
mov
cwtl
mov
scas
or
aam
in
jae
mov
data16
in
dec
cmp
xchg
and
insb
cmp
nop
jo
nop
lods
pop
lock
sub
jo
out
mov
out
int
je
addr16
mov
pusha
xor
adc
sbb
mov
push
jp
mov
int3
inc
incb
mov
in
in
nop
xor
mov
xchg
mov
sub
xchg
sub
int3
push
rorl
mov
mov
dec
and
dec
je
je
inc
fs
xchg
inc
xor
cmp
sub
push
int3
jle
mov
mov
inc
push
or
xchg
push
ret
sub
mov
cld
push
das
lods
or
pusha
lea
fsubrs
xchg
movsb
aaa
test
sub
xchg
xor
mov
shlb
movsb
lret
mov
push
out
sbb
fmulp
push
int3
mov
pop
flds
fs
xor
clc
negb
jo
cli
mov
mov
dec
test
test
fwait
loop
xchg
xchg
sub
int3
sub
mov
leave
cmpsl
loopne
push
mov
cmp
or
jle
int3
xchg
fidivl
out
and
out
jle
out
lds
popa
data16
mov
rorb
fidivl
pop
mov
lock
adc
insb
adc
and
cmpsl
sbbl
mov
cltd
jg
lea
cld
addb
and
mov
cmc
or
sahf
lods
mov
add
stc
cs
pop
insb
outsl
jo
xor
xchg
cmp
fs
push
pop
sub
pop
or
add
mov
mov
scas
jl
js
mov
sub
shll
push
push
insb
loop
push
sbb
test
mov
mov
sub
lahf
mov
pushf
repz
xchg
pop
pop
mov
jb
stos
int3
mov
xor
mov
data16
in
movsl
add
xor
push
fsubrs
stos
imull
arpl
movsl
add
arpl
dec
test
add
xlat
sarl
adcb
aad
loop
outsb
add
and
jo
mov
icebp
in
push
test
cmp
imul
jno
ds
cli
int
jmp
mov
ss
inc
clc
out
test
mov
mov
movsl
sub
mov
sahf
or
push
or
xor
test
mov
cli
in
lods
sarb
inc
and
cmp
cmp
jbe
jp
mov
aaa
test
repnz
mov
jno
dec
xor
mov
xchg
pop
pushl
sub
or
push
rcrl
movsb
test
fildll
bt
idivl
fs
call
orb
mov
push
sbb
jbe
jmp
pop
popa
jle
sub
sbb
cmp
in
int
int3
cmpsl
add
push
lret
sahf
pop
pop
icebp
icebp
cmp
sub
jb
add
jae
and
push
test
ja
jmp
shll
xchg
pop
mov
test
insb
inc
pop
jp
mov
jnp
outsb
cwtl
xor
ss
pop
and
call
das
or
addl
fnstenv
sub
adc
pop
mov
cmp
test
mov
mov
dec
dec
mov
mov
gs
test
insb
jne
mov
outsb
xchg
jno
in
pusha
jns
jle
pop
ret
jmp
cmp
push
jl
lods
xchg
mov
mov
into
cmp
cmpsb
mov
lea
popaw
mov
mov
mov
les
lods
sub
mov
repz
push
jno
enter
add
and
insl
test
pop
cwtl
sbb
and
addb
xor
ja
xchg
sarb
jns
jb
push
xchg
and
push
hlt
lods
xor
js
push
jns
push
pop
clc
mov
addr16
sub
shlb
movsl
xchg
jae
sbb
orb
xchg
and
popa
stc
imul
sub
js
pop
pop
xchg
jmp
into
pushf
outsl
dec
sbb
push
pop
dec
js
pop
inc
add
lods
push
cmc
xchg
clc
pop
xchg
xchg
in
cmp
fstl
mov
shrl
jns
inc
jle
popa
fwait
mov
rclb
mov
comiss
lods
scas
movsl
enter
daa
scas
or
mov
jo
mov
outsl
pop
xor
mov
or
icebp
gs
mov
cmpsl
xchg
push
dec
jns
int3
addr16
and
test
mov
mov
das
sbb
dec
sub
hlt
das
aam
pop
push
cld
jns
inc
and
out
test
rcr
and
xor
data16
inc
jnp
sub
push
push
insb
pop
icebp
aas
inc
lods
inc
jns
mov
jge
push
add
pop
ljmp
jp
mov
fsubrl
jne
mov
enter
dec
repnz
mov
dec
loope
popa
pop
xlat
and
xor
and
sub
shll
jo
arpl
loopne
cwtl
rcrb
repnz
sub
insb
outsb
or
push
mov
and
lock
test
lea
stos
jb
movsb
xchg
xchg
mov
mov
mov
in
pushf
mov
xchg
jg
cwtl
dec
movsb
and
rep
inc
mov
pop
lahf
orb
inc
jge
dec
mov
xchg
ret
lahf
popa
mov
mov
lea
and
in
or
jge
xor
movsl
data16
imul
xchg
loope
mov
nop
stos
jns
inc
inc
jge
movsb
sub
mov
xor
sub
xor
cmpsb
xchg
dec
sbb
sub
jp
cwtl
jo
xor
cmp
mov
popf
mov
xor
sbb
clc
and
fwait
mov
inc
in
nop
mov
add
pop
leave
enter
pushf
pushf
icebp
jge
mov
fisubrs
insb
popa
outsb
jb
dec
movsl
ds
add
or
mov
sub
cwtl
inc
es
cmp
lcall
xchg
mov
popa
in
xor
and
sub
movsl
fbstp
in
ret
push
xchg
adc
ja
aam
std
les
mov
and
les
leave
mov
or
sub
ss
popa
mov
sbbl
or
pop
mov
sarl
xor
imul
mov
sbb
cld
or
jo
mov
xor
mov
lret
stos
mov
sub
data16
dec
pop
sub
adcb
xor
mov
fisubrs
push
cmp
add
jae
aas
imul
push
fsubrl
sahf
inc
mov
mov
mov
outsl
pop
fists
pop
cmpsb
inc
lea
loop
dec
cmp
or
or
leave
xchg
loopne
movsb
sub
push
dec
fs
or
outsb
xchg
mov
shlb
mov
or
pop
push
jae
sub
hlt
dec
pop
xor
xchg
das
mov
push
xchg
pop
sbb
push
xchg
sub
jmp
jl
jne
add
repz
xor
sub
and
mov
hlt
cmp
sub
mov
xor
cld
xchg
ja
das
data16
scas
xorl
and
hlt
mov
or
add
lods
aaa
mov
sbb
daa
insb
mov
test
jns
inc
insb
je
push
sahf
jo
push
cwtl
movsl
pop
int3
cld
mov
insl
push
mov
adc
aad
adc
mov
ja
xor
insl
sub
push
lods
inc
bound
push
jbe
push
and
test
je
sub
stos
pop
mov
movsb
cs
lods
movsb
pop
cmpsl
std
dec
inc
enter
inc
xor
xor
push
mov
in
jo
push
bound
mov
mov
ret
xchg
sahf
and
push
enter
bound
push
pushf
outsl
cmp
in
ljmp
iret
lea
sahf
xor
jnp
dec
mov
and
cld
stos
mov
lahf
mov
pop
adc
add
stos
fistpl
lods
xchg
add
adc
stos
nop
sub
mov
xor
out
popa
movsb
mov
jmp
mov
scas
scas
cltd
lods
movsl
das
test
test
pop
mov
jbe
movsl
inc
mov
dec
or
cld
jmp
pop
push
inc
mov
testl
std
mov
mov
scas
sub
out
rcrl
xor
je
mov
inc
or
cmp
add
push
mov
iret
mov
pushf
lea
dec
cmpsb
dec
in
xchg
xchg
sub
xchg
cs
js
dec
mov
jae
fs
jl
or
fs
push
sub
mov
sub
dec
das
std
mov
jb
mov
cli
xor
clc
and
dec
xor
mov
add
inc
mov
lods
data16
insl
mov
mov
push
sbb
lea
popf
stos
popa
cwtl
xchg
cmp
mov
inc
mov
inc
inc
decb
inc
test
test
sbb
xlat
shr
aam
xor
movsl
nop
xlat
add
jno
insl
and
and
mov
mov
push
jno
sub
sub
jp
test
data16
repnz
nop
sbb
xchg
pop
es
and
mov
imul
loop
sub
xor
es
lahf
leave
mov
pop
xchg
mov
fwait
js
or
xchg
pop
pop
or
gs
xchg
cs
in
aam
movsl
repz
sub
das
pop
lods
adc
pop
test
cmp
adc
push
pop
aad
sub
add
mov
jmp
stc
sub
mov
lret
addl
dec
cmpl
lahf
pushf
shrb
mov
aas
pop
and
cmp
frstor
jae
addr16
jno
js
popa
mov
mov
orl
int3
mov
data16
sub
mov
scas
jns
aas
cmc
mov
mov
pop
mov
into
push
popf
jo
in
and
adc
leavew
dec
jp
cld
repnz
sub
idiv
xchg
arpl
jle
test
pop
xchg
mov
pop
mov
mov
inc
push
out
mov
popf
inc
iret
and
add
ljmp
and
sub
loopne
pop
aam
lret
sub
insb
pop
pop
mov
clc
aad
lret
fsubl
clc
insl
add
cld
sbb
stos
jno
jo
cs
movsb
nop
rolb
call
imul
xchg
das
mov
sub
and
iret
aad
out
cwtl
in
je
mov
sub
stos
add
inc
mov
mov
mov
push
fldl
icebp
push
adcl
adc
outsl
mov
pushf
mov
sub
lret
aas
lcall
nop
sub
repnz
cmpsb
mov
lret
outsb
sub
lret
xchg
xchg
jg
testl
insb
lea
add
mov
xchg
xor
lea
sbb
aam
xchg
mov
push
lea
inc
mov
sub
test
mov
lea
loope
xor
repz
test
xchg
test
jl
bound
aas
loopne
imul
repz
cwtl
movsl
and
gs
add
sub
mov
add
jl
pop
add
push
adc
test
jo
test
push
sub
sub
outsl
jbe
push
sub
xchg
pop
add
pushw
xor
inc
orl
lods
xchg
fnstcw
push
and
adc
data16
outsl
subl
rcll
sti
pop
in
divb
sub
push
fs
arpl
mov
mov
jecxz
push
mov
outsb
adc
ss
sbb
lea
and
fdivl
cmp
push
push
movsb
xor
jp
xchg
inc
pop
test
faddp
jg
pop
lods
mov
orb
js
not
xchg
scas
sub
pop
jl
pop
pop
test
cwtl
cmp
mov
lahf
xchg
sahf
mov
or
adc
inc
cmp
int3
daa
clc
jecxz
mov
dec
mov
add
ss
dec
bound
pop
pushf
and
sub
xor
test
sbbb
sbb
mov
rorl
jne
or
and
test
xor
nop
movsb
pop
lea
mov
pop
mov
aaa
mov
lods
mov
lahf
fs
adc
aas
lcall
jbe
jne
pop
stos
dec
xchg
shlb
jmp
push
cmp
fldcw
pop
lods
push
outsl
mov
subb
andb
fnstenv
repnz
gs
icebp
outsb
repz
mov
mov
movsl
shrl
xchg
test
inc
rcl
mov
sub
in
sbb
data16
aam
popl
loopne
dec
xor
arpl
pushf
jne
jmp
push
pop
and
clc
or
out
push
inc
outsl
nop
and
stos
jae
test
push
movsb
std
int3
mov
mov
leave
xchg
pop
xchg
xchg
sub
xor
in
call
out
mov
hlt
fidivs
ja
and
xchg
push
ss
mov
push
sub
xor
cmp
fwait
stc
ret
js
in
and
xchg
imul
aad
lret
jae
stc
sub
inc
arpl
adc
shll
ja
mov
mov
push
les
das
adc
jb
push
shlb
outsl
jnp
adc
mov
xor
sbb
adc
dec
pop
jo
pop
cmp
xor
sub
mov
xchg
jbe
cmp
xorb
in
mov
movsb
dec
outsb
das
mov
adc
lea
sarb
and
rcl
inc
sbb
movsb
pushf
mov
sbb
pop
inc
sbb
js
adc
stos
jmp
pop
mov
icebp
enter
aam
pop
daa
pop
sub
stc
jecxz
aas
mov
mov
in
pop
sbb
sub
mov
inc
repnz
fisubrs
sub
fs
aam
mov
push
fisubrl
adc
sub
out
test
cmpsl
test
push
fs
cmp
insb
pop
icebp
lea
pop
jno
fincstp
in
int3
xlat
mov
enter
and
jns
aas
cmpsb
pop
mov
push
clc
je
scas
aam
std
mov
outsb
mov
lea
test
mov
movsb
xchg
mov
aam
cwtl
inc
mov
nop
jb
lods
mov
data16
daa
mov
xor
lods
insl
int3
imul
push
jp
mov
mov
pop
icebp
jb
pop
fsubrs
dec
push
enter
inc
cmp
int3
arpl
xchg
cmpb
jno
or
inc
inc
mov
addr16
xchg
ds
aaa
dec
xchg
adc
insb
dec
test
popf
fidivrl
or
xor
repz
int3
cmpsl
div
out
in
cld
cld
jbe
aad
popa
mov
lret
xchg
pop
mov
push
fldl2t
test
mov
cmp
inc
stos
std
push
scas
jo
jbe
leave
pop
and
jo
xor
dec
xorb
or
fs
icebp
mov
ds
je
daa
test
jbe
xor
xlat
mov
out
loopne
inc
lods
push
mov
cmp
jbe
lcall
leave
std
mov
mov
sti
call
sahf
push
shl
mov
lods
aas
stos
cmp
test
mov
mov
push
insb
mov
cmp
dec
push
shrl
cmpsb
push
push
repnz
add
call
adc
outsb
push
lea
andl
adc
into
inc
outsl
mov
mov
daa
insl
movsb
fs
push
lds
in
out
mov
scas
scas
int3
sub
pop
adc
dec
sub
scas
mov
mov
loope
inc
xchg
and
push
sub
cld
das
test
hlt
rcrl
lods
loop
cmp
faddp
or
mov
mov
mov
xor
xchg
jns
mov
and
imul
test
fnstcw
jno
sub
sbb
inc
push
and
subl
mov
idivb
lahf
cmp
sub
push
sti
mov
mov
mov
repz
icebp
push
aas
mov
pop
cwtl
push
adc
repz
dec
xchg
xchg
ds
inc
cmp
repz
add
sbb
xchg
pop
jbe
mov
add
add
loop
fbstp
leave
xor
cmp
lea
and
test
dec
cmp
mov
push
xchg
mov
cwtl
insb
mov
outsb
dec
ret
push
pop
pop
movsl
shlb
shrl
pop
jnp
mov
loop
xchg
mov
ret
mov
ljmp
mov
je
mov
push
jb
fisubrs
popf
pushf
mov
pop
push
mov
mov
fnsave
cmpsb
pop
enter
lods
cmc
movsl
ljmp
mov
mov
loopne
xor
jbe
push
lock
or
mov
mov
push
mov
movsb
leave
popl
inc
pop
iret
mov
data16
sbb
int3
mov
pop
test
dec
arpl
movsb
arpl
mov
subb
push
push
outsl
mov
nop
sub
and
jo
inc
mov
int
mov
sahf
outsb
lret
lds
pop
push
outsb
mov
cmpsl
inc
cmpsl
pop
mov
lods
cmp
pop
das
imul
in
je
movsb
lret
and
jns
jge
aas
stos
xlat
mov
cmpsb
dec
divb
lods
xorl
pop
adc
cmp
mov
pop
addb
dec
clc
adc
int3
out
push
sbb
pushf
ds
sub
xor
cmp
shll
pop
adc
ss
jns
mov
mov
jmp
inc
jle
rclb
dec
adc
fdiv
mov
rolb
inc
mov
mov
cli
xchg
push
bound
mov
and
cmp
push
scas
test
lea
mov
xchg
bound
jge
jae,pn
std
nop
mov
xchg
xchg
daa
and
fs
subl
push
adc
imul
ret
ret
xor
adc
ltr
sub
cmp
mov
inc
sahf
xor
pop
cwtl
mov
mov
pop
xlat
cltd
push
lret
test
ds
cmp
and
and
cli
push
int3
ljmp
mov
orb
dec
cmpsb
popa
daa
outsb
test
mov
imul
cmpsl
pop
leave
leave
xchg
push
push
fstpt
pop
loope
adc
daa
mov
rcr
mov
and
xor
cwtl
out
and
inc
popa
int3
mov
fld
fsts
push
lods
int3
and
popa
push
jae
jnp
mov
sub
cmp
lods
sbb
insl
pop
fstpt
push
jge
pusha
add
cltd
and
sub
jno
inc
adc
add
outsl
shl
pop
mov
mov
push
adc
js
into
cmc
fsubs
pop
push
stc
mov
movsb
push
push
outsb
push
addb
push
mov
test
popf
aam
pop
jae
mov
xor
into
jb
lock
nop
pop
xor
fldl2t
mov
or
lods
or
mov
daa
pop
mov
fdivs
lret
popf
in
out
mov
jl
aas
daa
testb
psrad
adc
lret
clc
and
mov
subb
adc
pop
cs
pop
and
jbe
out
aaa
lcall
push
mov
outsb
xchg
mov
fs
lcall
push
rcll
bound
std
push
mov
jns
aad
rorb
daa
lods
lahf
pop
pushl
ja
call
xor
cli
out
pushf
xchg
pushf
mov
sub
mov
outsb
push
pop
test
push
roll
das
outsb
mov
lea
mov
jecxz
lea
dec
shrb
addr16
jbe
mov
xchg
push
int
inc
and
add
leave
stos
ss
mov
xchg
mov
dec
cmp
test
and
sub
insb
jecxz
sub
mov
mov
mov
sahf
or
xchg
fs
inc
pushf
jmp
ss
dec
mov
pop
rorl
pop
push
test
xor
lods
aaa
sbb
inc
mul
cltd
movsl
test
mov
test
fsub
sarl
xor
push
andb
mov
iret
jns
xor
push
cmp
sub
mov
adcb
mov
cmp
loope
pop
push
stos
imul
shrb
push
jo
lret
mov
lea
loopne
jge
mov
popa
mov
lea
arpl
dec
cld
jecxz
push
insb
outsl
stc
cmc
repnz
xchg
rolb
cmp
pushf
cld
jnp
mov
jmp
lahf
scas
sbb
push
out
insl
xor
and
mov
stos
adc
push
cltd
and
insb
icebp
or
cwtl
daa
imul
push
es
and
pop
rclb
shll
push
shll
mov
push
cld
adc
notl
jnp
jb
xor
mov
cmp
sub
fsubrl
cmp
pop
pop
and
icebp
test
jg
jbe
addr16
xchg
mov
xchg
mov
xchg
lcall
nop
fbstp
sbb
jnp
pop
sub
xor
push
out
movsb
lret
mov
sub
dec
in
mov
jle
movsb
cmpsb
xor
sbb
and
mov
pop
test
jae
int3
mov
lcall
cmp
sbb
adc
movsb
test
scas
pop
jnp
sahf
aas
stos
test
push
scas
dec
xor
nop
mov
jo
jg
xor
mov
sbb
sub
leave
inc
in
lods
cs
dec
add
mov
dec
jle
arpl
mov
mov
imul
sub
dec
pushf
shll
sub
pop
pop
jbe
int3
or
ja
cmpsb
aas
gs
jecxz
push
call
xor
mov
or
pop
add
rcl
leave
popf
inc
outsb
adc
lods
lods
int3
and
push
xchg
test
jnp
cmp
jmp
or
stos
jae
dec
jo
dec
aas
mov
mov
inc
outsl
es
stc
inc
pop
arpl
or
scas
in
popa
xchg
jae
pusha
adcl
jno
adc
int
mov
mov
scas
fldenv
js
xchg
ret
arpl
xchg
outsb
add
cmpsl
mov
push
repz
pop
repz
ret
push
jae
test
aad
lods
sbb
call
pop
and
pop
fiadds
imul
cwtl
xor
orb
and
mov
out
cltd
jl
cli
imul
rorl
mov
mov
mov
push
mov
xor
dec
push
mov
movsl
sub
and
xor
in
pop
xchg
sub
psrad
js
jno
cmp
test
addr16
jb
in
jo
xor
mov
or
push
mov
jmp
mov
jb
jo
cmp
pop
sub
mov
imul
adcb
lock
cmc
sahf
mov
dec
sub
aaa
sbb
shrl
and
xor
sbb
pop
lods
sbb
mov
call
lcall
jb
ss
dec
repz
sbb
jp
jecxz
sbb
bnd
or
jle
aaa
test
cmp
nop
into
jle
dec
std
jmp
mov
mov
imul
adc
pop
and
push
or
push
mov
or
xchg
add
dec
dec
cmpsb
pop
lret
mov
das
mov
shll
xchg
push
cmovs
push
mov
fs
loopne
imul
xor
mov
cmp
xchg
flds
arpl
mov
repnz
movsl
test
dec
lds
aaa
pop
addb
lea
lahf
and
mov
das
jecxz
inc
mov
or
ljmp
movsl
fs
inc
loope
mov
icebp
movsb
lods
inc
push
xchg
pop
or
out
rcr
fs
movsb
dec
push
aas
jb
test
push
adc
je
mov
jp
jo
sub
hlt
cmp
scas
stos
inc
mov
div
add
adc
jl
andl
stos
movsb
leave
mov
mov
test
pop
daa
cmp
xor
pop
xor
aaa
mov
and
lcall
push
push
mulb
inc
movsb
and
test
outsl
push
mov
mov
or
pushf
loope
fs
dec
notb
lock
stos
mov
out
dec
pop
fsubl
imul
scas
fnstenv
sbb
sbb
aas
push
or
daa
push
loopne
insb
js,pn
movhps
nop
mov
bound
adc
adc
adc
inc
mov
sbb
xchg
cld
mov
mov
pop
cmp
xchg
or
xchg
pop
add
pop
ds
in
lcall
fildl
mov
jne
lahf
sub
lods
inc
xchg
fs
movsb
js
int3
mov
ljmp
je
test
adcb
stos
andb
orb
xchg
sub
aam
mov
push
into
adc
frstor
or
scas
movsl
es
jns
fs
insb
jae
sahf
pop
sub
adcl
sub
repnz
sub
add
test
pop
mov
mov
int3
add
lods
fmuls
inc
mov
sub
mov
mov
pop
mov
call
xchg
jbe
dec
dec
sbb
les
sub
jo
call
xor
es
sub
stos
mov
loop
sub
push
inc
mov
enter
sub
push
sub
les
mov
push
jmp
sub
pop
lret
pop
inc
xchg
shrl
pop
dec
xchg
and
sub
mov
movsl
sub
dec
notb
sbb
vunpcklpd
inc
addr16
dec
sub
and
daa
data16
mov
jns
dec
nop
insl
cs
test
cwtl
inc
into
xlat
cmp
sbb
add
cwtl
mov
pop
sbb
inc
cwtl
pushf
mov
cwtl
jns
out
push
inc
cmpsl
aas
repnz
rcrb
and
rcl
sub
jg
xor
push
das
pop
aaa
pushf
movsb
outsb
push
mov
push
xor
cwtl
bound
jmp
das
xlat
push
ret
push
flds
orl
bound
sahf
push
je
mov
je
movsl
xor
push
fsin
mov
movsl
xor
fildl
lret
imul
or
sub
int3
push
enter
mov
je
push
cmp
lea
dec
xor
fildll
dec
pushf
sbb
jns
pop
mov
cwtd
jl
adc
push
xchg
addr16
pop
bound
mov
add
mov
test
add
loop
mov
xchg
sbbl
cmc
dec
pop
inc
dec
cwtl
sub
push
adcb
add
lahf
fsubrp
cmc
call
pushf
daa
cmp
mov
js
sbb
push
sub
orb
adc
xchg
out
ja
jp
nop
lret
pop
pop
mov
mov
sub
or
sub
scas
stc
dec
lcall
and
insb
push
mov
sub
push
jae
pop
or
cwtl
icebp
imul
mov
add
test
pushf
sbb
movsl
ss
inc
pop
fiaddl
in
mov
cmp
ljmp
push
ret
insl
shlb
outsb
cmpsb
cs
frstor
xchg
mov
inc
lods
push
fs
cmpsb
and
scas
mov
mov
ss
ret
test
and
inc
gs
aas
mov
xor
dec
xchg
xchg
and
repnz
adc
test
dec
jbe
mov
mov
dec
lret
xchg
or
rorl
push
jp
inc
test
jno
test
sub
add
inc
daa
xor
fisubs
sbb
insb
push
sub
sahf
icebp
insb
mov
hlt
in
inc
mov
cmc
imul
mov
add
test
jmp
leave
jecxz
pop
mov
jae
xchg
les
cmpsb
adc
push
mov
push
mov
fimull
push
nop
or
jb
imul
jo
and
imul
lret
rcrb
test
mov
adc
or
js
sar
movsb
jne
pushf
adc
out
notb
fs
xor
int
push
shrb
push
hlt
fisubrl
cli
sub
add
vmwrite
xor
adc
jmp
inc
xlat
jb
insb
loopne
cwtl
in
fildl
pushf
movsl
add
movsb
mov
or
movsb
popl
xchg
pop
int3
xor
pop
cld
push
mov
movsb
imul
sbb
lret
dec
lahf
mov
and
arpl
and
pop
pusha
xor
push
in
repnz
jo
sub
gs
jo
mov
sbb
outsb
movsb
movsl
mov
sti
xchg
std
ret
adc
pusha
out
cmpsb
xchg
daa
cmp
insb
call
cld
lock
sub
and
cli
sbb
pop
cld
sub
push
andb
fs
and
inc
cmp
cwtl
add
push
lods
test
xor
jle
in
addl
sub
cs
je
stos
pop
dec
subb
clc
lds
mov
testb
dec
mov
cli
ds
bound
icebp
push
test
cmp
jecxz
inc
test
jns
insb
aaa
imul
sbb
jl
mov
xchg
movsb
xchg
xchg
mov
pop
pop
arpl
mov
mov
je
imul
or
mov
jne
push
lock
movl
push
pop
icebp
popf
dec
pop
nop
sar
xor
call
cli
ficomps
and
das
sahf
and
nop
jnp
nop
filds
mov
mov
push
jl
xchg
iret
outsl
outsl
mov
or
inc
lret
xchg
in
mov
push
shl
aaa
and
scas
outsb
jb
mov
sbb
mov
pop
xchg
scas
sahf
cld
mov
adc
jl
adc
sub
ljmp
negb
pop
cmp
arpl
je
xor
push
test
je
sub
rclb
out
loopne
cld
and
push
mov
inc
mov
ret
mov
or
pop
and
mov
testb
pop
int
sub
push
xchg
in
repz
sbb
add
xor
and
rcrb
dec
cmp
sbb
and
arpl
mov
es
sub
jne
out
fisubl
gs
clc
mov
test
xlat
int
mov
fcom
jnp
add
inc
mov
fs
pop
popa
sbb
mov
scas
sbb
dec
and
outsl
cs
les
xor
daa
inc
sbb
xchg
out
xor
jb
repnz
mov
jnp
std
pcmpeqb
jge
loop
cmc
or
stc
sub
xchg
mov
pushf
repz
cmp
xor
xor
xor
push
xorb
jmp
xorb
lods
std
flds
dec
sbb
xchg
push
and
xor
stos
mov
xchg
push
push
outsl
enter
popl
and
mov
sub
or
cwtl
jns
push
xor
push
ljmp
mov
lock
mov
xchg
leave
in
sbb
inc
mov
mov
jnp
cltd
sbb
dec
ja
sub
push
insb
mov
aaa
int
push
dec
mov
xor
ret
movsl
and
popa
pop
mov
mov
int3
adc
movsl
sbb
sbb
or
add
mov
shl
cmp
mov
cmc
nop
subb
loope
ss
sbb
pop
movzbl
roll
in
stos
pushf
jl
mov
pop
testl
mull
xchg
push
jl
xor
les
inc
cmp
test
adc
mov
arpl
sbb
imul
pop
test
pop
pop
ljmp
fs
mov
mov
sti
xchg
imul
push
cltd
hlt
push
rcll
ja
pop
fstpl
fmul
hlt
mov
add
je
sub
shrb
xchg
jnp
adc
cmpsl
pushf
shrl
xchg
sbb
pop
push
aaa
test
jno
dec
mov
jae
movsl
jp
je
push
dec
jmp
dec
xor
adc
outsb
stos
cmp
popf
outsb
jl,pn
fwait
inc
xor
and
xchg
inc
je
dec
mov
and
lods
ljmp
fisubs
jae
mov
sti
scas
xor
mov
mov
mov
dec
mov
int
push
cmp
aam
pushf
insb
jno
inc
arpl
inc
jnp
xchg
imul
stos
ja
mov
enter
out
push
pop
popf
sbb
mov
sbb
mov
dec
into
out
mov
mov
xor
jo
je
fnstcw
jae
enter
sub
and
movsl
push
adc
icebp
jns
cmp
stc
jnp
stos
gs
dec
sub
ss
pop
sbb
mov
push
mov
and
pop
mov
xchg
test
pusha
cld
clc
or
daa
push
add
push
out
or
push
push
scas
dec
xchg
fs
std
push
xor
ljmp
inc
stos
sbb
jp
ljmp
mov
cmp
out
scas
mov
and
mov
das
mov
data16
ret
sub
mov
inc
adc
mov
xor
subb
push
jecxz
mov
leave
push
add
push
je
outsl
jae
loope
pusha
pop
notb
pop
insb
adc
outsl
cli
dec
lods
pop
xchg
xchg
sub
jo,pn
cmp
jo
inc
cmp
cmpsl
inc
mov
stos
orb
mov
iret
mov
sbb
jo
das
dec
test
lea
mov
in
cmp
mov
repnz
inc
cmpsb
cmp
fmull
push
call
movsb
or
mov
cmc
orb
push
jnp
pushf
push
subl
imul
stos
xchg
push
ds
call
add
shlb
nopl
xor
pop
push
cli
jb
in
push
test
xchg
popf
xlat
lea
movsb
add
jl
add
inc
push
xchg
je
ljmp
push
syscall
inc
xor
sbb
push
aad
out
dec
mov
push
cmpb
pop
pushf
fstpl
pusha
hlt
lods
mov
sbb
lods
mov
test
lea
jmp
jb
leave
adc
lock
mov
dec
pop
xchg
dec
mull
inc
jo
orb
sbb
xchg
sub
or
lret
imul
dec
inc
rorl
xlat
and
test
in
sub
xor
cmp
sub
in
movsb
cld
repnz
or
dec
mov
cmpl
mov
xor
adc
ror
lods
mov
cs
das
xor
or
xchg
sbb
mov
lods
in
pop
cmp
mov
subb
add
push
add
arpl
fs
sahf
adc
xchg
notb
js
cmpl
cld
xor
out
dec
adcl
cltd
jmp
lock
rol
aas
lock
lds
inc
loop
je
xor
fcmovne
cltd
lea
outsl
pop
jnp
xor
stc
mov
push
sbb
mov
scas
xchg
cld
jae
mov
leave
mov
jmp
gs
and
pushf
into
icebp
sub
dec
div
push
inc
outsl
cli
adc
cs
sbb
xchg
push
push
sbb
push
or
mov
or
xchg
sbbb
dec
loopne
xorb
jbe
sbb
mov
cld
cmp
repnz
xor
aad
jbe
mov
cmp
dec
mov
int
mov
jo
xor
dec
adc
jno
imul
ss
fdivrs
popf
sub
adc
out
loop
test
mov
stos
pusha
mov
fidivrs
popf
test
stos
xchg
dec
mov
mov
stos
mov
movb
jne,pn
shrl
scas
aas
filds
daa
insl
insb
cwtl
xor
fwait
pop
jbe
and
subb
clc
mov
mov
in
mov
mov
mov
sarb
in
call
mov
jb
xor
loopne
decl
inc
leave
mull
mov
xchg
icebp
xor
add
sbb
shrl
and
shll
xor
add
dec
out
das
lods
mov
aam
repnz
cmp
out
loopne
xor
mov
movsl
sub
adc
jb
aas
jns
sbb
jb
outsb
sub
outsb
pop
xor
fs
rcrl
push
outsl
imul
push
cmc
inc
loope
les
scas
jmp
mov
mov
fwait
in
push
mov
daa
add
in
test
dec
js
jae
mov
or
pop
shlb
mov
pop
mov
dec
push
xchg
push
cwtl
rolb
pop
xchg
cld
je
leave
mov
loope
pcmpgtd
stos
and
popf
sub
pop
pop
or
pop
mov
mov
jne
in
stos
repnz
add
addr16
and
lret
nop
sbb
push
pop
pop
popf
or
aas
test
aaa
in
aad
cmp
jmp
mov
cs
inc
adc
movsb
leave
mov
mov
mov
xchg
and
and
sub
mov
jo
xchg
xor
mov
je
into
cli
clc
popf
add
mov
add
insb
dec
ss
loope
mov
jbe
iret
mov
mov
lret
ret
xor
jno
iret
dec
mov
rorl
add
and
pop
xor
js
clc
faddl
mov
out
xor
andb
insb
and
mov
jae
xchg
push
pop
and
cwtl
ja
mov
icebp
call
push
cs
jne
adc
test
xor
and
jne
movsb
cmp
and
sub
cltd
or
cs
movsl
es
jmp
loop
rcrb
fldl
addl
das
mov
cmp
testb
push
mov
mov
cmc
sti
sub
test
jo
mov
stos
sbb
push
mov
fstl
mov
pop
ljmp
out
ret
mov
push
movsb
loop
and
outsl
push
mov
pop
lret
aaa
test
scas
lods
andb
nop
loopne
lods
icebp
xor
jo
pusha
mov
aam
xchg
push
cld
test
insb
xchg
ret
push
popf
idivb
push
ljmp
and
cld
lahf
adc
sbb
je
cmp
into
jno
cmp
push
cmpsb
mov
popa
sbb
adc
fwait
mov
pushf
popl
enter
outsl
inc
push
mov
add
push
push
and
out
stos
mov
mov
mov
pop
adc
pop
and
add
xchg
inc
jmp
int3
jecxz
inc
call
addb
or
adc
xor
mov
insb
shrb
loope
mov
and
movsl
mov
ja
sub
fnstenv
sub
leave
push
inc
stos
lahf
lcall
int3
dec
push
lret
lcall
jns
pshufw
xchg
inc
mov
jns
aaa
xchg
pop
and
jno
sub
mov
je
frstor
shl
push
adc
std
aam
push
mov
jcxz
jne
test
xchg
mov
leave
pop
mov
lea
adc
sub
daa
inc
lods
jb
jae
orl
and
mov
loope
add
into
test
out
mov
stc
xchg
and
lcall
cmp
mov
xchg
aad
insb
imul
stos
inc
dec
mov
jle
popa
jp
xor
mov
mov
and
int3
lea
xchg
fs
movsb
push
test
movsl
sbb
xchg
ret
mov
pop
je
and
call
add
aaa
lods
push
cmp
mov
mov
scas
test
aas
cmpsl
xchg
xchg
in
test
lea
or
jae
lret
loop
jae
es
push
add
ds
xchg
and
pop
mov
imul
or
in
mov
sbb
imul
sbbb
jecxz
aam
imul
comiss
testb
fdiv
lds
insl
test
aad
or
mulb
repz
loop
in
mov
inc
hlt
bound
icebp
add
mov
daa
mov
stc
fsubs
add
xchg
movsb
mov
gs
lds
lock
je
push
andl
cld
mov
inc
cltd
insb
mov
cmpsw
and
mov
andl
cmp
mov
pop
cmp
pop
sti
je
enter
ss
push
rorl
jne
xor
into
pop
pushf
dec
xor
push
xorb
mov
pop
mov
and
jge
icebp
rolb
sub
inc
clc
mov
inc
stos
jnp
xchg
pop
leave
xchg
sub
stos
xchg
out
xor
cmp
out
lret
imulb
lret
inc
imul
push
movsb
pop
sbb
insb
inc
in
mov
mov
out
push
jb
jo
pop
adc
es
gs
push
adc
adc
test
aam
push
jne
jb
sahf
dec
mov
xchg
in
push
lock
jp
js
mov
rolb
andb
lods
jge
insb
cmp
ss
cs
and
andb
dec
xchg
pop
insb
movsb
mov
sub
sahf
and
lea
fdivrl
mov
push
sahf
push
adc
nop
lods
jo
push
mov
pushf
or
adc
fcmovne
push
outsl
lea
pop
or
mov
and
daa
fiadds
dec
imul
pop
roll
fwait
leave
jb
pushf
lcall
shrl
das
sbb
sub
push
imul
movsb
jno
sub
inc
std
lods
scas
cld
mov
fisttpl
test
jo
rcrl
xor
mov
cli
xchg
fiaddl
ret
xchg
scas
cltd
pop
int3
stos
data16
cli
jb
test
mov
push
iret
cmpb
and
out
daa
test
ss
mov
test
push
out
jb
scas
mov
ds
xchg
pop
jns
pop
daa
push
push
inc
in
pop
rolb
stos
pop
mov
das
pop
pop
stos
mov
sub
call
inc
sub
xorb
mov
int3
test
in
arpl
pop
pop
data16
adc
add
lahf
ljmp
adc
cmpsb
xchg
popa
xchg
or
dec
out
mov
mov
es
das
pmullw
xlat
pop
jnp
adc
into
cmpsl
mov
push
push
lret
int3
mov
inc
fwait
pop
jns
push
movsb
leave
je
pop
cld
xor
cmp
sub
test
js
inc
mov
addr16
fdivp
mov
sbb
cltd
mov
sbb
pushf
maskmovq
mull
xchg
inc
or
xor
enter
insb
adc
cmp
mov
or
dec
cmp
cwtl
inc
xor
jno
ficompl
mov
imul
movsb
ds
imul
lret
adc
std
mov
pushf
and
imul
sub
mov
inc
dec
cmpsb
mov
sub
cmp
mov
cmp
mov
rol
sahf
lea
sub
out
lock
cmp
and
sub
ret
imul
repz
add
loope
divb
mov
das
and
jl
test
and
sbb
imul
mov
cwtl
gs
pop
loopne
les
scas
leave
stos
xor
pop
mov
pop
xchg
jae
jae
ljmp
jb
leave
imul
cmc
inc
ja
movb
icebp
aaa
mov
mov
bound
push
jl
test
jp
ds
fstpl
fidivs
adc
cmc
movsb
xchg
pop
mov
mov
stos
jae
dec
mov
arpl
jcxz
and
bound
lock
mov
hlt
adc
pop
sbb
movsl
repnz
rorb
adc
mov
insl
mov
mov
xchg
xchg
xchg
adc
mov
cwtl
loope
enter
xchg
pop
mov
mov
daa
jl
jns
sbb
aaa
xchg
dec
or
jnp
sbb
cmp
in
mov
push
xlat
pop
jp
lahf
adcb
data16
push
fisubrl
xchg
nop
cmp
and
pop
xchg
jo
inc
fs
out
sub
or
lea
in
bnd
rolb
test
sub
dec
in
jp
mov
inc
mov
ja
int3
sub
and
xor
pop
int3
sub
cmc
mov
mov
sbb
lret
arpl
sub
push
inc
insl
je
push
stos
idivb
mov
add
push
stos
mov
js
mov
ror
imul
mov
mov
lea
andb
pop
jae
pop
xor
pcmpeqb
sahf
int3
icebp
mov
push
dec
lock
cld
push
test
sbb
data16
jp
loope
div
sub
or
jl
negl
cwtl
cld
stos
lea
pop
pop
dec
push
ret
popf
add
sub
xchg
repz
mov
mov
mull
iret
movsl
test
addr16
sub
dec
push
dec
mov
iret
repz
hlt
inc
aaa
xchg
lcall
popl
mov
loope
loop
xchg
fwait
mov
mov
in
mov
mov
leave
jge
push
mov
push
ret
call
ja
or
xchg
push
jmp
pop
js
outsb
lods
mov
push
dec
jno
xor
sahf
mov
mov
fisttpl
sbb
mul
movsl
das
jecxz
xchg
fcompl
lods
xchg
leave
mov
mov
cmp
cmp
inc
cwtl
jb
imul
paddusb
push
mov
and
sti
jnp
mov
fwait
pop
insl
ss
stc
ss
or
jbe
inc
scas
mov
nop
imul
lret
scas
test
int
jmp
pushf
mov
ja
ret
aaa
xchg
arpl
xor
or
sahf
popa
cwtl
rcl
jne
mov
ficoml
pushf
gs
in
std
mov
cmp
adc
pop
leave
lret
inc
repz
xor
das
daa
push
mov
aam
repz
pop
outsl
jae
inc
addr16
adc
movsb
mov
sbb
xor
or
mov
aaa
mov
bound
sbb
insl
movsb
ss
mov
cli
insl
and
repnz
push
pop
pop
int
dec
js
jb
mov
push
notb
test
stos
leave
and
sets
pop
pop
dec
lock
stos
xchg
lock
sahf
jo
pop
stos
stc
mov
sbb
js
pop
data16
push
adc
pusha
lock
adcl
sub
insb
je
fs
pop
pop
fbstp
daa
dec
mov
push
xor
add
lea
lret
add
sahf
or
outsl
add
out
ret
adc
out
push
push
xor
mov
movsl
push
loop
or
or
lea
jmp
sbb
pop
and
addl
sub
daa
mov
cld
loopne
scas
mov
cltd
pop
les
jae
or
out
sub
insb
clc
mov
mov
rolb
cs
xchg
scas
lods
aas
push
and
leave
jns
mov
outsb
add
or
mov
test
mov
fistps
pop
fcoml
mov
cwtl
jnp
andb
fwait
imul
mov
mov
sti
movsl
jmp
jbe
pushf
and
push
jmp
cld
test
push
icebp
xchg
push
imul
das
inc
mov
bound
inc
insb
bound
scas
gs
ja
fsubrs
cmpsb
fistpl
cmp
cmc
pop
mov
mov
mov
std
pop
fs
leave
push
add
pop
mov
lock
xchg
daa
and
jmp
xor
imul
xor
mov
mov
andb
nop
repnz
xlat
dec
push
mov
mov
aaa
loope
xchg
inc
lods
pop
mov
cmp
sub
ret
mov
in
lods
inc
and
xchg
pop
sbb
dec
cwtl
std
iret
cmpsl
mov
or
in
lods
je
pop
jb
push
pop
aas
mov
cmp
test
mov
insl
jmp
xchg
pop
sub
loope
fs
adc
out
xor
es
inc
bound
add
jmp
imul
xchg
dec
jnp
add
jge
les
xor
and
add
das
inc
dec
push
insl
jae
das
pushf
push
inc
ret
add
inc
mov
lods
pop
sub
mov
jo
mov
inc
outsl
stos
push
dec
mov
insb
pusha
addl
xchg
and
mov
sub
push
rolb
test
jmp
mov
int
and
adc
lods
lea
fs
dec
push
movsb
test
and
jo
out
cmp
sub
fucom
push
jge
dec
stos
data16
dec
loop
popf
mov
cltd
pop
je
xor
and
jmp
mov
push
aas
lods
xor
cmp
fbld
and
or
iret
lea
insl
iret
add
pop
lods
ror
xlat
fildl
and
mov
and
mov
jl
ds
lea
pop
and
mov
pop
ja
mov
int3
push
and
enter
lods
pop
mov
jns
push
inc
cmpsb
xchg
mov
gs
dec
aad
push
sbb
add
add
stc
outsb
pop
push
xchg
jno
pushf
popa
sub
pushf
fisttpl
movsl
insb
pop
jns
and
sbb
ret
cmpsb
test
lret
je
daa
test
flds
pop
out
mov
xor
in
repnz
xchg
xchg
popf
pop
aad
mov
and
add
cmp
pop
jecxz
loop
test
mov
dec
adc
pop
or
push
hlt
popa
scas
mov
les
jb
mov
inc
test
mov
in
mov
xor
push
jl
dec
nop
mov
xor
cli
jl
fcompl
pop
xchg
pop
dec
xchg
push
mov
les
outsl
rclb
xchg
insb
notb
jle
test
outsl
shll
faddl
in
mov
test
das
lea
inc
xor
mov
loope
aas
movsl
jecxz
jb
movsb
mov
mov
test
or
cmpsb
je
aaa
pushf
mov
ds
je
sub
sahf
sahf
xchg
fs
push
cs
gs
insl
int3
adc
neg
or
mov
inc
mov
leave
pop
xchg
inc
add
stos
data16
xchg
add
sbb
sahf
mov
jo
inc
xor
dec
xor
popf
mov
or
mov
dec
int3
and
mov
inc
aad
movsb
jmp
inc
dec
jmp
jno
and
adc
repnz
popa
pop
mov
sub
jp
pop
add
sub
mov
aam
je
inc
sahf
jae
icebp
cld
add
or
jae
pop
sub
cmp
scas
and
mov
shll
inc
test
movsb
mov
pop
and
leave
xchg
mull
bound
mov
jns
rorb
gs
adc
outsl
out
xchg
pop
mov
pop
pop
sbb
std
bound
xor
jno
mov
sbb
movsb
test
jns
lea
outsb
and
pop
pop
scas
xorb
repnz
jno
push
cli
sbb
xchg
popa
push
mov
fdivp
out
mov
push
xchg
mov
fcompl
scas
sub
mov
repnz
fstp
test
sub
mov
push
test
xor
jmpw
fwait
mov
ret
add
loop
sub
sub
popf
daa
sub
lea
adc
clc
in
cld
push
pop
mov
popa
mov
addr16
inc
push
leave
aaa
jle
stos
mov
jns
inc
jno
mov
mov
test
shl
in
jecxz
pop
push
mov
mov
pop
out
loopne
sbb
mov
je
xor
stos
scas
inc
push
xchg
mull
fs
loopne
mov
mov
dec
dec
xor
cmp
and
jl
inc
stos
fdivrl
and
add
gs
cmp
xor
cmp
ss
pusha
stos
sbbl
inc
and
inc
cmpsl
sub
fsubrl
mov
mov
in
push
fsubrl
mov
cmpl
or
dec
out
imul
sub
insl
cmp
jbe
bound
out
or
fs
and
xor
push
dec
or
pop
push
mov
mov
inc
rcrb
sbb
xor
jb
push
mov
scas
mov
pop
jbe
or
aas
aam
mov
fwait
repnz
xor
pusha
lcall
dec
xchg
pushf
je
bound
xchg
add
daa
adcb
arpl
in
jge
xchg
cld
inc
jb
aas
fsubrl
popa
outsw
pop
mov
add
push
push
push
inc
lods
and
sbb
add
test
dec
mov
add
pop
xchg
pop
loop
mov
jns
mov
es
sarb
std
rcrb
pop
cwtl
cmp
sub
int
repz
mov
pop
aas
scas
xlat
js
mov
lods
call
adc
pop
ret
push
jle
add
in
adc
mov
cmp
adc
lcall
ret
sub
xchg
inc
or
movsb
cltd
pusha
sahf
lods
lea
imull
xchg
inc
insl
xchg
dec
sub
cmpsb
jbe
push
cwtl
ds
out
pop
mov
sbbl
ds
mov
lret
imul
aas
in
xor
sub
cmpsb
sbbl
and
lods
add
sbb
push
data16
stos
pop
inc
mov
mov
movsl
movsb
outsb
mov
cltd
push
pushf
das
jns
jle
mov
push
xchg
push
inc
aam
mov
ret
dec
pushf
inc
hlt
int
push
fs
test
nop
adc
lcall
mov
jp
leave
int
mov
xchg
add
mov
lahf
enter
test
mov
and
xchg
inc
inc
push
mov
xchg
aaa
dec
mov
jecxz
xchg
pinsrw
mov
lret
cs
xor
hlt
inc
das
lret
adc
stos
aas
test
lock
inc
jb
cltd
add
mov
adc
test
push
xchg
mov
push
mov
jb
data16
movsl
aaa
lret
jl
leave
xchg
push
xor
or
jns
xchg
sti
arpl
jns
cmp
test
mov
or
stos
adc
xlat
push
daa
push
jns
cmp
sub
lods
adc
or
inc
mov
and
lret
std
mov
outsb
ret
mov
ret
leave
push
testl
std
test
sub
stos
in
dec
pop
lods
cmc
mov
xchg
mov
xchg
xor
addr16
sti
stos
daa
mov
pushf
inc
push
push
mov
sahf
and
xor
lret
dec
dec
in
jmp
mov
out
jecxz
movsb
push
pushf
leave
loop
repnz
test
xchg
lret
lcall
in
jmp
test
sbb
adc
aam
xor
add
je
shlb
loop
ret
ljmp
dec
push
addb
mov
sbbb
js
mov
es
pop
js
mov
js
popf
push
repnz
sub
movsb
test
leave
dec
push
mov
mov
fldenv
mov
les
pop
fcmovne
push
push
in
jg
pop
pop
test
sub
xor
mov
leave
jmp
rorb
mov
scas
mov
jmp
sbb
mov
xor
mov
pop
push
js
mov
addl
fstpl
xorb
or
push
loopne
insb
adc
and
xchg
jl
xchg
icebp
dec
arpl
repz
pop
popf
inc
pusha
ja
insb
pop
inc
xchg
cs
repz
and
popl
test
enter
lods
adc
das
mov
cmpsb
sub
mov
gs
mov
loope
ret
nop
mov
and
jnp
repz
sbb
mov
or
aas
into
inc
jmp
jo
bound
movsb
xchg
bound
mov
xor
jns
loop
pushfw
sub
loopne
dec
test
les
push
xor
mov
jo
je
mov
les
insb
inc
sbb
testl
jo
shr
inc
jl
aas
in
js
cmpsb
mov
loopne
sub
mov
jl
daa
mov
pop
dec
andl
sbb
movsb
mov
fmuls
ficomps
and
xor
call
jnp
leave
stos
sub
nop
adcb
jb
je
fimull
dec
icebp
je
sub
or
mov
jl
cltd
andb
xor
js
xchg
adc
mov
xchg
add
ds
mov
add
sub
mov
inc
cmp
out
mov
mov
andl
xchg
jne
sti
loop
outsl
cmpsb
test
ss
jbe
add
dec
xchg
mov
ficoms
sbbl
test
lds
int3
mov
in
push
hlt
cmp
xchg
pushf
inc
cwtl
cltd
in
movsb
inc
mov
adc
cli
hlt
xchg
in
je
mov
imul
pop
mov
clc
and
stc
nop
adc
cmp
imul
inc
adcb
jo
adc
cwtl
jno
xchg
cld
mov
clc
mov
cs
outsb
pop
fwait
leave
push
pop
mov
or
inc
sbb
add
les
sub
xchg
imul
ds
push
mov
jp
push
js
and
jns
addr16
popa
lds
mov
sub
mov
adc
lods
mov
stos
push
and
sbb
add
push
nop
xor
lret
popf
lock
push
mov
pushf
cmpsb
adc
jmp
inc
bound
xchg
mov
je
mov
movsb
adcb
jns
inc
lahf
ret
fidivs
jae
jae
js
iret
inc
xchg
inc
bound
push
andb
pop
in
jnp
jecxz
movsl
xor
add
and
xor
mov
xchg
jno
add
ds
push
jae
rcll
push
mov
and
or
add
movsb
xor
test
mov
lret
sahf
mov
stos
mov
out
mov
cmpsb
mov
mov
mov
and
push
mov
inc
insl
sbb
adc
sub
jae
testl
cltd
xchg
sub
push
and
lock
sub
lock
mov
xchg
inc
mov
fadds
mov
xor
cld
pop
enter
imul
xlat
mov
in
nop
adcl
mov
ds
jl
inc
call
adc
and
in
jo
nop
popa
inc
inc
jb
mov
movsb
mov
sbb
outsl
sub
xchg
inc
mov
out
in
adc
adc
lds
jo
aad
inc
sub
mov
or
and
mov
sbb
jp
stos
mov
mov
test
mov
mov
mov
xchg
jl
mov
mov
jbe
pop
das
mov
addl
mov
mov
movsb
mov
bound
leave
cmp
sbb
orb
mov
sub
mov
sahf
sbb
shlb
lret
pusha
das
add
xor
mov
test
mov
arpl
and
adc
pop
cmp
mov
cwtl
icebp
call
in
push
hlt
xor
and
mov
sbb
xor
out
jbe
testl
insl
push
enter
lea
lahf
adc
mov
mov
mov
fwait
mov
outsl
mov
adc
push
xor
lahf
cld
pusha
dec
ja
cwtl
mov
mov
popa
out
dec
scas
push
repnz
lods
push
xor
xor
push
loop
add
mov
pop
mov
inc
sarb
imul
push
inc
xchg
int3
lahf
jp
push
les
add
aaa
scas
dec
mov
pop
ja
push
scas
mov
xor
mov
nop
iret
les
xchg
push
mov
imul
je
cmp
sub
xchg
jmp
loope
shll
mov
xor
add
xor
xor
js
mov
testb
repnz
es
ds
sbb
xor
adc
inc
lods
sbb
insb
mov
add
dec
xchg
lcall
xchg
xor
mov
outsb
notb
adcl
sub
fdiv
fs
xor
xor
ljmp
outsb
pop
pop
cld
mov
hlt
jecxz
ljmp
shl
mov
in
int
xor
lret
outsb
imul
orl
movsl
xor
pop
mov
mov
sahf
sbb
int3
add
xor
aas
lret
push
outsl
ja
add
add
xor
xchg
es
cmp
ss
sti
int
mov
test
mov
sub
mov
jae
repz
ds
imul
mov
sub
xchg
movsl
adc
das
loop
shrl
sub
in
gs
in
jmp
mov
rolb
stc
sbb
test
pusha
insb
cs
das
mov
and
test
lods
movsl
imul
mov
bound
test
cmpsb
mov
push
mov
sub
std
scas
xchg
and
dec
pop
cmpsb
leave
int
xor
cli
jbe
mov
ljmp
or
xchg
cmp
xchg
inc
xchg
or
mov
int3
add
sub
sub
addr16
clc
jmp
loope
popf
mov
loope
shll
adc
jmp
add
enter
add
movsl
jno
sbb
or
std
fwait
rorl
xor
repz
scas
mov
inc
pusha
outsl
adc
sbb
mov
lahf
repz
add
and
popa
pop
pop
imul
mov
bound
lcall
loopne
cmp
icebp
push
mov
shrl
xor
xor
adc
daa
mov
imul
adc
out
pop
lea
rcl
imulb
in
gs
std
repz
xchg
je
shll
in
sar
stc
andb
xchg
mov
jl
lea
inc
xor
xor
ss
mov
daa
inc
cwtl
mov
jo
pop
decb
lcall
add
push
stos
pushf
fidivrs
pushf
jecxz
xchg
fsts
pop
dec
jns
xor
and
xor
and
mov
pop
je
mov
leave
test
jp
bound
jns
aaa
aaa
jle
in
jecxz
shlb
pushf
push
inc
add
jg
jecxz
hlt
xchg
jns
aaa
xchg
fsubrl
fcoms
leave
xor
push
in
inc
test
lock
ss
xor
cmp
fwait
out
imul
xchg
mov
mul
pop
push
iret
sbb
jns
jmp
pop
test
add
dec
jb
mov
out
jns
xor
test
daa
inc
scas
out
mov
ss
test
xorb
jmp
xchg
out
sub
add
clc
add
inc
push
sahf
icebp
into
inc
pop
mov
push
adcb
arpl
jns
cld
scas
sub
test
jg
cmp
push
pop
and
mov
mov
pop
sti
pop
out
insb
cld
leave
fnstcw
daa
or
fs
shll
test
hlt
mov
insb
sub
mov
lods
pop
bound
iret
cld
sub
addb
stos
cmp
jmp
sub
adc
loopne
inc
subb
and
add
mov
mov
daa
dec
mov
lods
xchg
pop
aaa
addr16
dec
in
push
mov
sub
aas
and
cmp
mov
cmc
cmp
lods
jp
fwait
mull
jns
and
sub
mov
adc
jno
aas
lret
sbb
popf
cmp
aam
cltd
mov
cltd
mov
imull
mov
mov
inc
jmp
loope
and
sub
popl
sti
xchg
fcomps
xchg
mov
xor
pop
sub
pop
out
ss
outsb
mov
xchg
lock
js
insb
inc
adcl
test
addr16
stc
nop
repnz
lods
xor
push
mov
or
mov
insb
cmpsb
xlat
cli
push
xor
test
xlat
jg
int3
test
add
sub
cmp
jne
movsl
and
ss
je
popf
sahf
imul
pop
mov
jo
ljmp
jbe
gs
inc
add
imulb
pop
mov
scas
mov
imul
stos
sbb
pop
inc
insb
pop
cmp
mov
in
pop
addb
imul
mov
test
xchg
cs
ljmp
ret
mov
jp
inc
sub
outsb
push
fs
lret
arpl
fdivs
sahf
lods
repz
xchg
mov
dec
mov
mov
cltd
in
xor
adc
and
xor
movsb
push
test
jne
aas
pop
ffreep
add
sub
pop
mov
mov
loop
push
add
mov
addr16
mov
movsl
pop
mov
adc
mov
push
arpl
cmpsb
out
les
lods
dec
jl
pop
sub
jb
lds
in
inc
dec
test
ret
mov
pop
mov
mov
cltd
in
xchg
insl
mov
mov
out
sbb
inc
mov
lods
inc
aas
mov
mov
jg
mov
insb
jp
inc
push
popf
movsl
das
ds
call
sub
lods
mov
jle
cld
push
xor
sub
sbb
mov
out
sub
pop
icebp
mov
mov
cwtl
sub
jecxz
or
pop
fsubs
cli
lock
mov
sub
out
scas
pusha
sub
loope
arpl
in
xor
frndint
xchg
adc
icebp
sahf
outsb
test
push
cmp
add
mov
pop
pop
mov
cli
nop
stos
jns
mov
xor
fnsave
out
xchg
jns
sbb
movntps
aad
inc
pop
ss
and
xchg
push
or
xchg
insb
inc
repz
mov
pop
mov
push
jecxz
lods
gs
dec
mov
daa
mov
and
loop
ja
scas
jns
xor
out
je
mov
daa
mov
aad
xor
shl
sub
fsubrl
imul
xor
pushf
mov
jb
out
imul
sub
mov
dec
mov
adc
in
adc
xchg
aaa
xor
nop
iret
in
xor
cmp
push
ljmp
call
pop
fisubrs
daa
fs
jno
sarb
sub
stos
mov
cmp
bound
or
sahf
mov
push
addb
mov
nop
inc
scas
xor
jp
jecxz
imul
scas
mov
mov
xor
jb
inc
and
dec
daa
mov
aas
mov
jmp
insl
push
imulb
mov
cmc
repnz
push
enter
or
mov
xchg
xor
jae
mov
mov
cmp
mov
fldt
sub
xor
cmpsb
sti
das
aaa
test
loop
scas
les
sub
cmp
push
sbb
in
xchg
and
jecxz
pop
rorl
scas
xor
repnz
jb
aas
lea
daa
je
sub
out
sub
inc
js
or
scas
in
mov
xchg
dec
loop
adcb
sti
xlat
ss
scas
sub
add
mov
cltd
cmp
fsubl
mov
adc
nop
cmp
sub
or
adc
lahf
pushf
add
icebp
mov
loopne
xor
xor
cmpsb
movsl
add
aam
int3
shr
mov
jl
lret
call
jb
aaa
ljmp
pop
jb
xor
xchg
out
mov
dec
mov
mov
pop
out
jb
ret
je
daa
imul
outsl
stos
mov
aas
sarl
sbb
xchg
inc
int3
lea
test
lea
inc
dec
iret
xchg
movsl
insl
dec
pop
mov
pushl
pop
mov
mov
adc
xchg
jne
fstl
jb
daa
inc
stos
cmp
add
pop
jns
arpl
popa
jne
loop
clc
imul
data16
jae
repnz
outsl
daa
push
rolb
push
cs
loop
mov
jmp
mov
mov
out
negl
pop
push
push
cmp
lods
outsb
mov
sbb
nop
pop
daa
jns
xor
mov
sub
bound
negl
mov
andb
sbb
jbe
sub
stos
dec
mov
daa
and
leave
mov
aad
popf
mov
dec
mov
lahf
or
insb
fdivs
arpl
pop
xor
xchg
cmpsb
push
pop
fnstenv
xor
mov
cmove
mov
inc
and
jb
pop
stos
or
dec
mov
loopne
sbb
sub
jns
ss
sub
add
jae
jae
lret
ret
jb
int3
push
pop
mov
push
cwtl
mov
int3
inc
lds
lret
push
jecxz
and
cld
imul
sub
subl
jbe
in
fs
cmpsl
das
dec
movsb
ret
mov
push
mov
imul
mov
out
call
mov
aad
jp
jae
pop
sub
push
icebp
add
mov
sahf
cltd
xor
mov
cwtl
push
imul
push
outsl
jecxz
dec
xcrypt-cbc
cmpsl
xchg
jno
or
mov
sbb
adc
rclb
jmp
mov
mov
out
and
and
push
push
cwtl
xchg
data16
add
ret
and
test
cmp
push
lods
mov
xchg
dec
jnp
inc
cmc
add
and
mov
push
xchg
lea
mov
xorb
push
stos
bound
jbe
mov
push
loop
mov
adc
aam
in
in
jae
jnp
fcmovnb
cmp
pushf
sbbl
push
sbb
dec
stos
lods
test
scas
orb
mov
push
pop
pushl
fildll
cmp
bound
divb
fbld
stc
cmp
xchg
pop
inc
adc
push
je
cmp
je
inc
or
stos
push
ljmp
pop
fs
adc
andb
or
push
inc
mov
es
lock
sub
inc
shlb
mov
jl
lret
sbb
andb
adc
mov
imul
dec
xchg
js
loope
add
das
mov
test
out
xor
cmp
pusha
repz
scas
stos
jecxz
pop
push
or
fcomp
cmp
or
gs
or
imul
popa
cmp
in
push
mov
cmpsb
sbb
xchg
pop
mov
xchg
sbb
adc
arpl
jge
jnp
xorl
jae
mov
dec
frstor
inc
cmp
jne
into
mov
jno
mov
lret
icebp
ss
mov
fldt
mov
mov
dec
jae
push
mov
scas
or
pop
fiadds
push
adc
push
add
inc
sub
jns
pop
dec
out
xor
cmp
sbbb
xchg
js
popa
out
jno
daa
gs
and
xor
int3
jae
cmp
subb
mov
pushf
je
pop
leave
pop
dec
daa
lea
daa
pop
push
xor
test
nop
cld
mov
repz
lods
frstor
loop
sub
mov
out
push
loop
icebp
cmp
aad
xchg
pop
mov
jns
add
test
xchg
shll
stos
test
push
mov
imul
dec
mov
fs
outsb
dec
push
xchg
sbbb
mov
fsubrl
jmp
jecxz
sub
imul
lea
pop
loop
mov
dec
inc
dec
or
xor
xor
mov
fsubrs
xchg
imul
dec
mov
ret
jns
sbb
inc
mov
ss
aas
mov
jns
int3
inc
stos
dec
jmp
movsb
xchg
cld
push
mov
outsb
mov
mov
mov
in
cli
mov
daa
inc
mov
cmpsl
cmpsb
sub
or
xchg
js
and
bound
leave
cmp
insb
mov
pop
xor
icebp
adcb
mov
daa
mov
arpl
mov
push
out
dec
je
into
inc
jne
sti
daa
jg
stos
adc
popa
sub
jne
pop
fadds
fildll
insl
sub
shll
jne
aas
lret
and
add
mov
mov
or
ret
dec
scas
insb
inc
pop
push
sahf
rorb
mov
enter
inc
sbb
pusha
in
pop
dec
cmc
outsb
push
sub
sbb
popf
hlt
ss
stos
xchg
pop
mov
outsb
cmp
sub
lret
imul
adc
iret
jb
sbb
xor
je
pop
add
movsl
jnp
sub
cwtl
sbbl
mov
outsl
mov
mov
mov
pop
or
sti
pop
repz
daa
aaa
inc
mov
enter
mov
lea
ss
sub
fidivl
cmpb
or
xor
xchg
or
scas
sub
sub
cmp
and
pop
mov
ljmp
std
cmc
push
stos
and
mov
cmc
add
negb
repz
sub
movsl
and
and
xchg
nop
jecxz
and
xor
mov
pushf
pop
mov
scas
mov
fcmovnb
in
ss
xchg
pop
xchg
mov
popa
cmp
sbbl
or
adc
popa
push
fcmovnb
inc
adc
mov
andb
push
push
test
mov
ss
lock
pushf
ret
or
nop
aam
lahf
mov
outsb
ja
aas
aad
pushf
xor
lods
je
jp
test
aas
out
or
mov
lds
xchg
mov
sbb
stos
mov
cmc
xor
sbb
cld
and
push
xchg
inc
sbb
push
cmp
popa
mov
cmp
test
mov
xchg
jb
jl
lods
fs
lret
push
mov
imull
push
out
mov
imul
movsb
xchg
out
fwait
sub
insb
jecxz
cmc
pop
leave
jg
add
es
or
lods
hlt
shrb
lods
hlt
cld
dec
sub
inc
outsb
xor
lock
lods
aaa
mov
insl
shll
add
push
mov
clc
test
push
push
insb
mov
cmp
mov
push
and
repz
scas
daa
cmp
mov
mov
sbb
and
push
in
push
js
lods
inc
fwait
sbb
jne
repnz
outsb
test
jl
loope
and
lods
jb
fisubrl
sti
fwait
mov
xchg
cmpl
jae
icebp
jae
jecxz
mov
fsubl
adc
mov
js
pusha
sub
test
and
imul
outsb
outsl
or
sar
push
push
imul
push
push
push
jb
das
xchg
sar
lret
mov
imul
into
das
add
repz
pop
and
je
adc
push
outsl
sub
jl
mov
mov
js
shrl
mov
or
jg
out
jp
dec
inc
lcall
fisttpl
andb
xchg
addb
mov
mov
je
dec
fildl
jl
imul
xor
push
jge
sarb
adc
arpl
add
pop
adc
aam
jb
push
js
jg
mov
jnp
adc
nop
mov
outsb
xorl
cli
insb
pop
daa
dec
dec
fistps
and
js
mov
jno
lea
js
mov
or
pop
mov
adc
loop
push
push
mov
inc
daa
jno
sbb
cmp
lret
test
insl
scas
fdiv
fcoms
insb
imul
jp
xor
jp
addr16
repnz
xor
inc
mov
movsl
pop
movsb
jb
cwtl
mov
push
jecxz
lcall
sti
xchg
mov
sbb
xchg
test
mov
cmp
lea
mov
andl
mov
adc
orl
mov
sub
jmp
mov
sbb
cmp
popf
in
test
test
fdivrl
loope
xchg
addb
shrb
xchg
push
jmp
mov
lock
lret
mov
mov
add
les
leave
popa
pusha
test
xchg
jno
and
push
scas
addr16
cmp
daa
and
das
mov
mov
xor
jl
xchg
push
js
iret
xchg
cmp
insb
test
arpl
or
mov
dec
das
test
or
fimuls
fiaddl
rorb
inc
aam
cmp
je
stos
adc
xchg
mov
lods
jno
insb
orb
div
dec
push
and
mov
dec
xchg
jbe
inc
mov
fstl
das
movnti
xchg
je
jae
in
scas
je
push
mov
jno
xchg
aam
jecxz
sbb
push
out
cmp
sbb
and
arpl
xchg
stc
lcall
mov
loopne
pop
xchg
mov
les
adc
mov
out
jne
je
dec
pop
test
cwtl
mov
fs
hlt
movsb
scas
mov
sub
fistpl
push
int
mov
cli
sub
scas
cli
xor
pop
inc
mov
addl
in
inc
or
jnp
xchg
add
mov
mov
add
inc
add
mov
cli
xchg
and
add
push
jne,pn
pop
mov
icebp
add
push
push
pushf
sbb
mov
movsb
mov
test
xchg
mov
dec
fsts
sbb
cmc
enter
movsb
xor
dec
jno
pop
inc
arpl
adc
movsb
cltd
jmp
or
subb
mov
bnd
sub
sub
rolb
sarl
dec
or
jg
ljmp
mov
pop
dec
and
stos
or
or
jne
push
mov
mov
fldenv
push
test
inc
fcompl
pop
mov
mov
sbb
jecxz
cwtl
push
xchg
dec
mov
sti
or
scas
sub
mov
mov
mov
stos
xchg
xchg
hlt
mov
or
xchg
sub
push
mov
adc
xchg
adc
lret
icebp
pop
xor
xchg
out
adc
das
repz
stos
mov
and
push
sbb
xchg
mov
pop
cmp
in
mov
lods
enter
outsb
push
sub
mov
and
pop
pop
loop
pop
push
ret
mov
sub
mov
les
pusha
cwtl
test
or
adc
mov
xchg
inc
scas
mov
inc
mov
hlt
aaa
mov
mov
jae
mov
mov
hlt
scas
xor
sbb
push
movsb
rolb
and
sahf
xlat
cmp
xor
sarl
push
fxch
rcll
mov
mov
sub
xchg
cmp
insb
call
aam
mov
gs
nop
mov
mov
int
int3
dec
adc
clc
data16
dec
mov
out
stos
fcoml
or
push
outsl
adc
adc
sbb
xchg
pushf
subb
fsts
and
and
nop
and
js
xchg
mov
push
fdivrl
inc
test
loope
subb
pushf
ja
divb
int3
jns
call
cs
shl
pusha
ret
sbb
push
mov
sub
sub
dec
mov
push
shrl
ljmp
mov
sub
xor
arpl
test
and
xlat
push
aad
lahf
int
imul
pop
push
mov
icebp
xchg
in
xchg
test
movsb
xchg
icebp
mov
add
mov
les
out
push
pop
mov
into
sub
mov
fisttps
add
mov
mov
cld
out
jl
xor
enter
push
addb
inc
jne
sbb
add
push
loop
daa
push
and
iret
fimuls
ret
sub
inc
dec
sub
movsl
ljmp
je
xchg
xchg
test
mov
pushf
xorb
mov
xchg
or
leave
fisubs
inc
jp
add
sub
cmp
fidivl
sar
cmpsl
fistl
scas
hlt
fwait
aam
call
outsl
sbb
inc
stos
lret
ds
mov
jmp
pop
xchg
mov
pop
mov
sbb
sbb
mov
popf
mov
repz
jmp
scas
or
test
test
jecxz
and
and
push
add
test
jo
rcr
pop
mov
cli
in
jmp
xchg
push
jae
popf
fwait
pop
sub
imul
sub
adc
sbb
call
sbb
lcall
mov
mov
sbb
test
scas
mov
out
mov
jl
lods
cli
cltd
add
nop
scas
ja
lahf
xchg
sub
xorl
cs
mov
cld
inc
ret
sbbb
aaa
mov
and
shlb
push
mov
mov
aam
sub
dec
stos
mov
mov
fisttpl
cwtl
test
and
cmp
mov
xor
xchg
movsb
sbb
cwtl
jp
mov
subb
pop
fs
stc
bound
inc
xor
cmp
adc
sbb
cmp
arpl
mov
dec
and
or
xchg
movsl
js
adc
fstpl
push
aaa
ror
inc
orb
mov
mov
xchg
dec
mov
mov
mov
scas
mov
scas
lods
lret
add
mov
ljmp
testb
test
scas
je
and
mov
mov
popf
pop
add
imul
mov
cltd
fcoms
jg
fistpl
cmpsl
cwtl
notb
cmpsl
push
test
add
pop
imul
or
scas
test
xchg
aad
ljmp
xchg
fldt
lahf
dec
xor
rorl
cltd
jae
jecxz
xchg
mov
add
sub
test
sub
jo
push
scas
add
hlt
cld
subl
push
mov
push
jge
and
pop
lods
jmp
jnp
mov
jno
push
stc
rcrb
lea
mov
mov
inc
mov
rcll
cmpl
adc
mov
gs
mov
test
iret
packsswb
jb
xchg
aad
push
imul
in
add
sti
or
add
in
pop
add
nop
mov
test
pushl
xor
adcb
or
or
xchg
xor
push
add
sub
inc
stos
pop
fs
xchg
push
mov
jg
orb
cli
cmp
fsubrl
xchg
scas
je
push
and
pop
test
adc
hlt
mov
lret
stc
into
ds
push
sahf
dec
xchg
mov
std
repnz
jmp
cmpsb
mov
inc
push
or
jmp
hlt
ds
out
cmp
imul
and
loope
jp
xlat
mov
mov
mov
inc
int3
dec
jnp
add
addr16
mov
mov
les
cmp
pop
sub
and
mov
pop
jge
lret
pushf
in
cwtl
push
mov
pop
mov
sub
adc
and
lret
mov
adc
enter
out
xor
cmpsl
sbb
ss
adc
or
jmp
mov
cs
lock
rclb
rcrl
mov
mov
add
pop
push
jbe
jnp
loope
mov
adc
ja
in
ljmp
mov
repnz
aaa
push
sub
mov
pop
push
pop
mov
adc
and
bnd
jl
mov
sbb
adc
inc
test
mov
scas
dec
sahf
jbe
mov
xchg
pop
dec
dec
outsb
pop
cwtl
jle
repz
int
lock
inc
pop
pop
dec
pusha
shll
in
ds
pop
filds
and
int3
dec
ficoms
out
and
mov
stos
mov
sub
mov
data16
lahf
push
adc
insl
lods
cmp
int3
adcb
dec
sub
gs
cli
or
popa
mov
scas
int3
mov
sub
fcoms
fdivl
scas
int3
hlt
fistps
ljmp
xchg
mov
sbb
insb
in
jae
jp
inc
pop
adc
adc
fwait
adc
fwait
or
movsl
popa
into
dec
push
xchg
cli
xor
fs
inc
inc
mov
fcoms
push
fsubrs
popf
loopne
push
mov
mov
xor
pop
in
cmp
jl
fwait
hlt
and
xchg
mov
pushf
test
inc
mov
sub
les
pop
mov
aas
lcall
push
mov
sub
out
sbb
xchg
scas
je
bound
and
mov
adc
cwtl
imul
insb
scas
scas
sub
lods
xchg
movsb
testl
pushf
shll
mov
sub
adc
mov
pop
inc
mov
mov
sub
add
les
stos
dec
push
push
xor
jb
mov
pop
out
ss
xor
aam
mov
dec
cltd
sub
out
adc
mov
and
outsl
xor
mov
aaa
add
and
and
pop
orb
mov
xchg
cmp
fs
test
jnp
pop
mov
mov
cmp
nop
test
test
test
ret
stc
clc
sbb
mov
pop
mov
aam
movsb
stc
sub
daa
mov
test
mov
inc
mov
push
lock
cli
iret
mov
pop
lock
push
out
das
loop
call
mov
call
loopne
cli
and
aad
jne
mov
je
pop
cwtl
ss
mov
mov
jno
test
push
mov
xchg
mov
xchg
sahf
aas
xchg
bound
mov
add
test
inc
test
imul
and
mov
mov
adc
scas
jg
xchg
jb
adc
loop
repnz
cmp
sbb
mov
inc
push
rcll
cmp
orb
or
mov
jbe
cmp
insb
xlat
or
leave
sar
and
in
xlat
add
and
or
fistpl
xchg
cmp
xchg
mov
mov
repnz
ret
mov
mov
or
xor
pusha
test
pop
dec
push
mov
jo
pop
mov
dec
outsl
and
or
lods
lods
popa
pop
adc
mov
ss
xchg
fs
popa
xor
pusha
inc
add
pop
cld
add
sahf
daa
push
ret
pop
stos
mov
andb
mov
popa
stos
icebp
inc
rorl
cmp
cwtl
rcrb
les
mov
mov
add
pop
mov
xchg
lahf
lret
dec
and
jns
mov
ret
lret
lods
mov
xor
loop
pop
mov
pop
fistps
jb
imul
and
lret
push
push
scas
mov
mov
sbb
fbstp
fs
mov
dec
dec
outsb
sub
test
lods
mov
add
je
cmpsl
scas
adc
sub
into
add
loop
insb
aas
rol
mov
repnz
jmp
mov
shl
insl
jge
mov
inc
cmc
gs
or
shr
jns
mov
repnz
lcall
mov
lods
leave
cmp
push
arpl
mov
pop
sub
mov
and
push
stos
adc
jp
push
test
sbb
clc
nop
outsl
fcmovbe
lea
adc
out
mov
mov
inc
jbe
mov
sub
repnz
mov
bound
pop
fldenv
repz
sti
imul
dec
mov
add
je
push
mov
sub
pop
mov
or
mov
mov
jbe
iret
icebp
in
popa
pop
mov
pop
pop
mov
jno
jmp
adc
fs
jno
out
mov
aam
gs
testb
sbb
movsb
mov
xchg
test
data16
mov
inc
in
scas
stos
cmp
inc
stos
lcall
xchg
in
fwait
scas
jo
lods
mov
movsb
sub
mov
xchg
scas
jb
xchg
fwait
jo
mov
cmp
das
xchg
mov
add
arpl
ja
mov
cli
data16
xor
lea
repnz
xchg
dec
xchg
adc
int3
fwait
test
xorb
lods
lahf
mov
aas
fs
bound
pushf
int3
xor
and
mov
imul
loop
fimull
inc
sbbb
cmp
jl
push
adc
cmp
stos
les
fnstenv
int3
pop
sbb
scas
push
xor
sbb
data16
in
fisubrl
inc
scas
push
xor
test
sbb
push
xchg
sbb
outsb
test
push
fmull
adc
dec
jno
push
in
mulps
imul
jno
xchg
sar
out
xchg
and
and
pop
pop
xor
ss
xchg
sbb
aas
mov
les
mov
cmp
xor
dec
mov
insb
jns
cmp
outsb
xchg
in
jl
leave
hlt
loopne
dec
les
jp
scas
or
repnz
in
mov
test
xchg
mov
mov
scas
stos
loopne
movsl
lret
sub
push
push
push
sbb
popa
enter
fcmove
sahf
jmp
mov
xor
iret
inc
stc
jp
test
movsb
test
adc
mov
movsb
dec
stc
fwait
addr16
sub
int3
pushf
xchg
in
sahf
fs
push
mov
in
push
cmp
pop
lock
pushf
hlt
repz
movsl
in
pop
fisubs
adc
jne
loope
mov
pop
sbb
pop
movsb
xor
and
or
imul
adc
xchg
and
mov
andl
add
sub
out
jno
mov
and
jl
pop
xlat
sbb
xchg
pop
les
pop
jmp
aam
popf
pop
mov
mov
ror
out
dec
sbb
inc
sub
jne
inc
mov
mov
into
imul
repz
cmp
jne
mov
lcall
addr16
movsl
sub
insl
test
jmp
sbb
in
inc
scas
test
add
bound
mov
pushf
jne
xchg
cwtl
mov
outsb
call
out
cmc
jae
outsb
mov
sbb
mov
xchg
sbb
pop
mov
pop
mov
je
and
jb
nop
sbb
jbe
insb
sub
fs
int3
xorl
lret
xlat
mov
mov
sub
lods
cmp
mov
in
imul
or
lods
mov
mov
fistps
enter
lods
and
adc
xor
pushf
subb
mov
or
gs
rorl
repz
lock
xchg
xor
jne
xchg
push
addb
jmp
push
mov
xchg
mov
jbe
call
rcrl
jg
and
icebp
inc
int3
push
jbe
jb
sub
jl
add
mov
or
testb
add
cmp
mov
repnz
in
daa
popa
fcoms
xchg
mov
jecxz
mov
aaa
mov
cmp
mov
leave
cwtl
jmp
xchg
push
mov
jns
dec
dec
bound
mov
popa
and
jae
sbb
inc
stos
xor
leave
fistl
cmp
addr16
ljmp
lea
loopne
js
int3
icebp
test
lcall
popl
add
pop
das
pop
popa
pop
mov
sub
aad
jg
lods
xorl
sub
movsl
xor
fmul
mov
stos
push
fwait
aas
lahf
push
ljmp
push
jl
push
scas
add
scas
xor
sub
out
xchg
pop
mov
dec
jno
int
pop
test
sub
xchg
jnp
scas
and
pop
adc
pop
jns
ja
je
push
push
and
jns
negb
sub
dec
inc
les
jnp
stc
out
inc
inc
movsb
mov
in
jno
mov
pushf
push
leave
lods
xor
mov
pusha
test
imul
xor
sub
jno
xchg
jl
insb
nop
jb
stos
test
lods
stos
push
push
int
aas
mov
cld
xchg
scas
out
cmp
scas
push
call
add
xor
inc
xlat
mov
jo
arpl
and
pushf
and
dec
push
pushf
and
and
repz
jle
sbb
pop
setb
pop
arpl
fs
xchg
xor
gs
sbb
xchg
add
movsb
in
das
inc
jmp
and
jno
xchg
xor
sub
jg
cmpsl
repnz
dec
lea
and
adc
fwait
sbb
xchg
cwtl
and
jae
jne
daa
jmp
jne
fcomps
jmp
ds
dec
pop
pop
data16
sub
fs
push
push
inc
test
out
test
mov
xor
movsb
es
adc
xor
push
into
jle
cmp
movsl
inc
sub
orb
je
jb
mov
and
stos
dec
mov
lds
mov
adc
jno
mov
lods
ret
sbb
mov
hlt
popa
sub
xor
fs
lock
sub
push
mov
and
adc
push
cmp
pop
cwtl
mov
mov
loop
xor
cmp
xchg
and
stos
xchg
and
pop
outsl
sbb
outsb
dec
ljmp
xchg
xchg
mov
js
mov
stos
sbb
or
out
aam
mov
lahf
out
mov
mov
adc
cmp
scas
lods
mov
imul
dec
loopne
push
stc
push
aam
inc
jns
sub
bound
adc
lcall
stos
mull
out
jo
lcall
bound
sbb
scas
notb
cs
push
jnp
xchg
push
in
outsb
lea
movsl
imul
out
es
ljmp
adc
mov
movsb
mov
and
xchg
mov
push
jmp
into
cs
jp
je
add
lods
arpl
xchg
fnstsw
xor
stos
xlat
push
add
outsb
cltd
dec
lret
xchg
jne
adcl
scas
mov
xor
out
sbb
adc
int3
aam
in
shlb
xor
js
xchg
shll
out
mov
mov
add
sub
mov
lods
inc
lret
pop
loopew
imul
in
testl
pop
movsb
int3
sbb
jnp
fdivrs
mov
dec
mov
jle,pt
es
movsb
cs
sub
cwtl
sahf
popa
mov
pusha
push
rolb
lahf
lret
js
in
stos
pop
dec
test
cmpb
jno
xchg
xor
rcrl
xor
and
sub
mov
xor
aaa
and
ss
push
or
fs
push
mov
test
leave
push
or
testb
call
xchg
mov
int3
out
push
jle
adc
leave
jbe
jmp
rolb
xchg
xchg
fiadds
inc
cmp
push
frstor
sbb
push
add
jmp
sahf
enter
cwtl
popa
sub
add
adc
das
adc
stos
fisttpl
and
loopne
insb
cmpsl
fistpll
mov
out
test
movsb
aas
pushf
mov
mulb
ja
push
ret
int3
mov
and
mov
mov
aam
je
and
push
ss
js
push
insb
int
cltd
and
addr16
loop
pop
lret
push
pop
pop
and
inc
mov
jg
and
push
icebp
xor
inc
nop
add
jns
push
sbb
mov
nop
push
xchg
sub
lret
out
xor
add
add
mov
jae
test
xlat
test
test
mov
sub
jl
and
arpl
and
sub
mov
inc
mov
mov
int3
aas
cmp
idivl
jl
imul
gs
lret
stos
or
gs
lret
fwait
adc
add
push
mov
lock
xchg
sti
mov
cmp
cmp
inc
insl
xor
and
and
sub
cmpsb
sub
mov
inc
insl
adc
sub
add
xor
cmp
daa
xchg
in
rorb
xchg
xchg
xchg
lahf
xor
jb
add
sbbb
imul
das
imul
stos
daa
imul
cmp
pusha
stos
dec
sub
xchg
fnstenv
test
sub
mov
leave
sub
jmp
jne
popa
mov
clc
insb
mov
fs
sub
mov
and
clc
and
mov
in
popa
pop
ss
pop
xchg
sbb
adc
xchg
pop
in
xor
int3
addr16
out
test
xchg
inc
xor
jmp
mov
je
mulb
subl
in
mov
inc
scas
int3
xchg
mov
insb
aaa
mov
and
mov
jecxz
sti
daa
scas
mov
mov
mov
adc
lods
clc
in
rorb
mov
cmp
adc
jns
xchg
call
cmp
jo
test
mov
popa
scas
out
movsb
int3
mov
cmp
or
cs
jo
int3
nop
sar
leave
stos
cmc
sub
xchg
hlt
lret
clc
movsl
stos
int3
test
jle
sub
lahf
cltd
jo
jl
jg
and
dec
jns
pop
movsl
mov
int3
enter
lods
mov
int3
fldl
ror
repnz
jo
nop
lahf
or
or
sub
aas
out
leave
adc
das
xor
mov
or
or
push
or
shl
fwait
scas
xchg
mov
stc
pop
sbb
xor
test
bound
mov
mov
fs
data16
jnp
or
cmpsl
shrl
jb,pn
mov
jo
lea
inc
out
in
sahf
push
in
popa
not
loop
cmc
add
mov
lods
cld
test
push
mov
fs
repz
sub
scas
mov
sub
in
es
hlt
adc
stos
cwtl
imul
jg
add
or
xor
rorb
imul
inc
imull
pop
mov
dec
mov
pushf
xchg
push
sahf
popa
xor
pop
lcall
add
outsb
cmp
push
pushf
cmpsl
jns
push
and
cmp
imul
fsubrl
stc
test
in
xchg
mov
mov
mov
dec
inc
lods
insl
std
mov
subl
mov
cmp
sub
sbb
outsb
mov
stos
cmp
mov
xchg
sbb
stos
int3
inc
sti
popa
mov
jmp
and
lods
cwtl
add
pop
lods
mov
mov
cmp
pushf
mov
xor
test
dec
jb,pn
inc
es
sub
sbb
mov
cmp
pusha
jbe
test
out
mov
xor
enter
out
add
daa
es
inc
add
imul
xor
bound
lods
call
stos
xchg
and
int3
mov
xor
cmc
pop
rorb
dec
lods
pusha
mov
push
mov
mov
mov
mov
mov
push
xor
jb
orb
mov
add
add
xchg
or
add
shlb
in
subb
pop
loop
addr16
loop
lods
cmpsl
mov
clc
andl
mov
jb
imul
cmp
add
mov
or
add
aad
test
sub
or
jb
xchg
test
sub
ds
lea
test
sub
int3
fisubl
cmp
cwtl
ljmp
je
popa
clc
in
xchg
jmp
fs
jp
dec
test
add
mov
mov
insb
jo
or
faddl
xor
out
jg
sarl
mov
mov
jle
push
inc
xchg
pop
dec
rclb
stos
push
pop
push
push
bound
lock
in
mov
mov
xchg
test
leave
pop
pop
push
loopne
mov
pop
jo
jmp
sbb
js
fs
pushf
lret
sbb
mov
mov
call
adc
test
imul
inc
inc
shl
out
and
fwait
mul
push
mov
jb
bound
mov
dec
inc
imul
sbb
pushf
jecxz
dec
outsb
cmp
sub
fwait
pop
xor
movsb
repnz
cmp
xor
test
mov
pusha
mov
dec
cmpsb
test
int
mov
in
mov
mov
mov
xchg
push
dec
lahf
mov
sub
scas
push
xchg
inc
fs
cwtl
je
adc
jge
xlat
idivb
jne
mov
repz
gs
cltd
ljmp
sbb
test
jno
aad
xor
xor
pusha
int3
sbb
mov
or
jo
arpl
mov
cmpb
call
int3
push
pusha
out
and
stc
fnclex
sub
scas
push
pop
popf
mov
in
rep
jmp
ss
pop
adc
movsl
push
ja
in
adc
jmp
sub
mov
cmpsb
mov
lcall
call
add
mov
mov
pop
inc
inc
xchg
movsl
popf
hlt
repz
xchg
push
xor
ljmp
stc
dec
or
mov
sub
or
pushf
mov
xchg
insb
jns
in
lcall
push
fidivl
inc
fcoml
jnp
mov
push
in
adc
insl
mov
jo
mov
mov
stos
insl
cwtl
pop
stos
mov
push
lahf
fildl
push
addb
sbb
lea
int3
jg
or
bound
cwtl
inc
outsb
pop
or
pusha
dec
jmp
jl
xchg
mov
push
xorb
dec
xor
inc
cwtl
lret
or
dec
mov
test
xchg
lcall
pop
pop
mov
inc
mov
pop
cmp
and
cmc
jl
xchg
pop
xchg
add
sbb
nop
add
test
inc
ss
and
fcomps
jmp
mov
loope
addr16
repnz
dec
insb
outsb
sub
mov
xchg
sti
cmp
pop
or
inc
mov
aas
cmpsb
sub
cmp
lock
mov
mov
adc
stos
int3
aad
pop
je
inc
lods
sbb
lahf
jb
xchg
scas
pop
mov
dec
cmp
mov
aam
jae
fs
gs
lcall
scas
cmp
movsl
int3
inc
imul
mov
or
cld
movb
and
xor
dec
ss
shll
adc
in
test
lock
jno
das
int3
jnp
push
sub
mov
lcall
pop
insl
and
loopne
stos
xor
lods
lret
ss
xchg
dec
mov
les
adc
pop
mov
mov
rorl
mov
jae
int3
sbb
setb
push
lahf
je
mov
lret
mov
lea
test
inc
in
in
mov
stos
leave
mov
mov
stos
das
loop
sbb
call
pop
arpl
lahf
mov
xor
outsl
push
filds
sbb
jl
shl
shll
icebp
mov
mov
lret
dec
int3
cwtl
sub
mov
and
sahf
repnz
out
fwait
push
clc
enter
sbb
popf
push
jmp
movsl
add
xor
push
jno
ss
std
jmp
loop
fs
mov
push
addr16
xchg
testl
adc
mov
cli
adc
adc
lea
jb
fdivs
aaa
pop
pushf
inc
out
jmp
js
pop
in
cmc
call
test
jo
xchg
mov
fistps
cwtl
push
leave
push
push
pop
add
sub
push
jl
test
sarb
nop
jecxz
fildll
imul
pushf
mov
nop
sahf
scas
and
or
nop
mov
xchg
dec
push
in
xor
inc
or
repz
test
jmp
mov
push
repnz
cwtl
sbb
push
sbb
je
daa
nop
push
add
and
adc
xor
adc
mov
inc
ficoml
mov
lea
lcall
call
mov
mov
shlb
lret
jne
outsl
jo
cmc
insl
mov
sbb
xor
scas
mov
add
jp
outsl
insb
lods
jp
lock
sub
jmp
test
jbe
mov
sub
aaa
data16
add
popf
stc
outsl
movsl
subl
insb
bound
mov
enter
outsb
mov
insl
pop
cmp
stos
movsl
mov
arpl
pop
mov
and
jns
repnz
fs
insb
mov
js
sub
lret
pop
js
bswap
mov
add
sub
lods
pop
ds
outsl
icebp
mov
ss
ss
data16
or
enter
lods
pop
mov
in
cmp
jle
outsb
pop
fcoml
pop
pushf
mov
in
outsb
aad
mov
bound
ljmp
lret
enter
and
inc
lods
ss
pop
xchg
mov
xor
or
sub
pop
dec
sub
add
push
xor
inc
movsl
pop
das
mov
inc
xor
xchg
jne
mov
mov
imul
mov
or
mov
and
ss
ss
or
outsb
mov
mov
bound
scas
ficoml
push
arpl
ss
inc
aas
and
test
pop
icebp
sahf
add
int3
mov
push
pmulhw
dec
dec
inc
scas
mov
or
fmuls
or
adc
loopne
adc
lods
cmp
lret
push
mov
mov
sbb
stos
sub
add
push
in
push
dec
jo
sbb
push
push
les
xor
cmp
outsl
cmp
push
stos
test
dec
dec
outsl
pop
and
mov
mov
nopl
mov
cmp
arpl
sub
call
add
andl
push
fidivs
decl
cmp
sub
xor
adc
fs
les
jecxz
and
push
movsb
faddp
sub
pop
mov
clc
aaa
das
xor
pusha
dec
sbb
xchg
aas
scas
in
push
leave
push
add
xchg
or
mov
inc
xor
mov
popa
pop
sub
sub
sahf
stos
scas
outsb
es
xor
repz
or
in
jns
in
xchg
jp
in
pop
xchg
in
movsb
jg
addl
mov
inc
int3
mov
test
jnp
and
inc
mov
out
stc
ret
jne
pushf
repnz
lret
fs
mov
push
repz
xor
or
pushf
mov
dec
xchg
cmpsb
cmp
aas
mov
stos
inc
fs
xchg
xchg
push
inc
pusha
outsb
fwait
cmp
js
pusha
movsl
xor
cmpsb
pop
cmovp
aaa
dec
mov
cltd
ljmp
mov
cmp
stc
sub
jno
jg
movsl
push
stos
es
jmp
sbb
arpl
hlt
sub
mov
lahf
bound
insl
addb
movsl
mov
push
sub
mov
sbb
jle
sub
mov
sub
clc
adc
jmp
dec
and
or
out
lret
xchg
sub
mov
popf
int3
adc
andl
int3
inc
inc
adc
in
mov
addr16
stos
mov
in
scas
in
lods
iret
jno
pushf
inc
cmpsb
cmpsb
mov
pop
out
hlt
popa
mov
sahf
pusha
jecxz
add
cmpsl
cwtl
xchg
sub
xor
stos
cmp
decl
push
fildll
repnz
cmp
push
mov
cmp
inc
push
arpl
aad
mov
pop
leave
add
test
ja
popf
mov
out
int3
jge
jle
jno
gs
mov
jns
push
aas
sub
adc
addr16
mov
in
cld
ret
lock
adc
in
pop
lods
aad
scas
popa
int3
push
mov
int
mov
push
std
xchg
lret
xor
push
mov
jb
cmpsl
mov
fldl
mov
mov
dec
ret
mov
xor
shlb
repnz
mov
sub
shl
nop
add
jmp
loop
movb
lock
outsl
sbb
and
add
or
and
into
xor
inc
xor
mov
dec
xor
rolb
enter
jg
sub
daa
pusha
ja
mov
cmpsb
subb
popa
add
insb
aas
lds
mov
sub
daa
test
xor
rcll
insl
push
adc
cli
adc
push
ss
and
popf
jecxz
jb
inc
nop
xchg
scas
fistpl
and
jge
xor
lea
das
loop
int3
pop
loop
sub
daa
test
inc
pop
adc
sbb
mov
dec
lahf
jbe
daa
sub
push
add
mov
ret
cmc
adc
movsb
dec
mov
cmp
jmp
pushf
stos
loopne
or
pop
or
bound
adc
mov
push
fnsave
into
add
jge
arpl
push
adc
sbb
cmpsb
mov
fs
sub
ret
mov
mov
xchg
mov
pop
cmp
adc
and
sbb
pop
test
adcl
pop
cltd
fadds
mov
mov
push
sub
mov
mov
or
imul
lret
scas
fwait
cmp
push
xor
cltd
mov
mov
cltd
jge
cmc
mov
mov
ljmp
xchg
lea
xlat
je
mov
test
mov
leave
cmpsl
xor
ss
scas
xchg
pop
sub
test
fstpl
jecxz
jge
jmp
in
push
add
bound
in
xchg
in
negl
lock
int
inc
adc
mov
pushf
and
arpl
sbb
sbb
mov
and
cmp
int
leave
or
subl
imul
fsub
and
mov
insb
insl
inc
jbe
sti
imul
cmp
stos
jns
in
xor
mov
cmp
dec
inc
mov
cmp
lahf
mov
imul
ret
jl
movsb
jno
hlt
test
int3
test
outsl
adc
sbbb
bsr
jmp
jecxz
nop
outsb
xlat
dec
jae
test
bound
and
stos
test
mov
sub
stos
pop
jmp
adc
mov
cmp
add
jg
cltd
cli
push
lea
test
fwait
iret
inc
push
sarl
push
sub
jae
insb
mov
je
lahf
lods
jns
or
leave
inc
mov
pop
fldcw
pop
push
out
inc
mov
in
pop
xchg
aam
pop
cmpps
ss
mov
mov
jg
leave
xor
inc
push
jns
jp
test
ss
pop
shl
notl
inc
push
cli
add
pop
sbb
stos
add
es
add
sbb
testl
add
xchg
inc
imul
repz
fstl
pop
mov
gs
jo
cmp
pop
repz
in
jecxz
fildl
jecxz
inc
mov
sti
adc
dec
loop
mov
mov
jbe
sub
jecxz
aaa
jbe
xchg
mov
cmp
inc
sub
insb
in
aaa
mov
mov
loope
mov
pop
sub
mov
inc
mov
mov
or
sbb
mov
adc
push
das
hlt
jg
cmp
dec
sahf
test
add
dec
add
js
inc
sbb
test
and
ficomps
aas
add
push
jnp
mov
adc
push
cmpsl
loopne
adc
lods
in
lcall
ret
inc
pop
mov
xorb
or
sub
cmp
cmpsb
push
xchg
stos
gs
dec
add
jne
xchg
adc
xor
jge
out
xabort
test
sarl
mov
mov
jbe
add
push
mov
outsl
out
cwtl
in
jno
xchg
fidivl
ljmp
ret
pop
mov
movb
inc
push
or
pop
cwtl
xor
push
in
movsl
out
add
in
inc
jbe
fnstenv
cmp
mov
mov
cmp
out
cmp
pop
adcl
jle
push
call
mov
repz
pop
xchg
fdivl
lcall
inc
sbb
inc
pop
add
loope
push
fs
loope
stos
mov
or
jge
and
mov
inc
ljmp
jae
xchg
push
push
jns
cmp
pop
loopne
inc
add
sub
repnz
sbb
lea
cs
popa
pop
pop
xchg
mov
sub
repnz
xorb
stos
adc
add
outsb
sub
aaa
xor
push
pusha
sahf
outsl
adc
test
int3
xchg
push
xchg
mov
cmp
in
js
cmpsb
mov
push
dec
dec
cwtl
sbb
xorb
sub
ds
fxch
xchg
insb
clc
push
dec
inc
test
xchg
cwtl
cmpsb
int3
add
xchg
test
mov
enter
test
mov
push
dec
xchg
shll
andb
bound
mov
inc
ret
js
icebp
push
enter
in
ret
jmp
adc
ret
movsb
popf
stc
sbb
jb
or
test
pop
sahf
aam
pop
gs
jl
lret
popl
aaa
in
adc
pop
or
dec
cmpsl
push
fwait
lret
lahf
jl
out
or
add
inc
outsl
dec
js
in
nop
sbb
pop
inc
aas
push
ja
test
sbb
popf
mov
push
sbb
mov
inc
popl
sbb
mov
int3
jnp
xchg
xor
dec
push
dec
pushf
jno
int3
jns
lea
cmp
test
sahf
jo
leave
xor
xor
sti
xor
mov
pop
sub
mov
sahf
aaa
mov
xchg
bswap
xor
test
ljmp
push
sub
xor
jns
ss
outsb
fisttps
ss
mov
push
ljmp
mov
test
xchg
in
ret
andb
cmp
call
pop
sbbb
adc
inc
lcall
push
mov
jne
push
pushf
pop
pop
mov
jg
stc
push
push
jb
mov
stos
aaa
lods
mov
lods
sbbl
push
xlat
xor
cmpsb
mov
scas
in
movsb
bts
dec
sbb
and
sarl
pushf
rcll
sub
pop
xor
sub
ss
mov
xchg
and
insb
lods
or
les
je
int3
les
xchg
fiaddl
jno
push
pop
je
test
mov
sub
jnp
scas
scas
xchg
xchg
lret
adc
ja
fldt
outsb
xchg
push
cmp
cmp
imul
sbb
xorl
and
pop
sub
scas
mov
cmpsb
mov
fwait
cmp
fsts
mov
mov
push
hlt
shlb
cmpsl
mov
mov
js
pop
ss
cwtl
mov
cwtl
mov
js
inc
xor
sbbb
fldl
cmpsl
mov
jecxz
insb
jp
daa
fcomi
fcoms
mov
mov
adc
scas
pushl
and
in
xchg
mov
leave
mov
fcoml
xor
jb
movsb
jno
mov
jae,pn
adc
fwait
push
insb
imul
insl
mov
orb
push
sub
lahf
jae
mov
sbb
andl
xchg
sub
sub
js
aas
sub
data16
cmc
push
repz
push
mov
cwtl
mov
mov
mov
mov
ffree
xor
rcrl
jnp
pop
test
out
and
out
xor
pop
lcall
xchg
adc
les
aaa
jbe
push
leave
loope
outsl
dec
je
shll
dec
mov
add
push
cs
in
and
xor
aaa
jo
push
lds
xor
out
mov
xchg
mov
or
leave
stos
sub
mov
xchg
sbb
dec
in
sbb
xchg
or
rcrl
stos
pop
insl
cwtl
mov
dec
fidivs
dec
fstps
pop
push
mov
popl
xchg
jmp
fwait
and
movsl
and
popf
das
xchg
fnstcw
cwtl
cmp
jns
aaa
sahf
or
mov
sub
jae
xchg
dec
in
lret
test
fmul
cwtl
sub
lret
mov
rclb
adc
sbb
loop
imul
stc
ljmp
data16
lock
xchg
dec
sbbl
std
pop
push
daa
loop
cmp
and
daa
sahf
cmp
push
in
xchg
mov
push
mov
and
jno
add
dec
jle
les
and
loop
lods
dec
adc
jb
fst
push
xchg
test
inc
mov
out
dec
and
andl
add
scas
in
sub
push
xlat
mov
inc
mov
aas
cmpsl
mov
insb
xor
scas
mov
sub
daa
jb
and
mov
mov
test
cmp
cmp
lds
sahf
movsb
cld
adc
outsl
pop
pop
stos
push
fistps
pushf
jns
int3
insb
push
jp
mov
ret
int3
gs
add
lret
repnz
inc
xor
loopne
sti
and
dec
mov
popa
cmpsb
int3
jecxz
xchg
xchg
or
pushf
adcl
jne
cwtl
mov
imul
mov
mov
pop
mov
jns
pop
inc
andl
outsl
jno
pop
cs
scas
cmp
inc
sub
and
or
fildl
push
call
sahf
adc
adc
es
pop
fcom
inc
cmp
clc
add
enter
rol
dec
add
mov
repz
out
sub
pop
push
add
jl
gs
test
add
xchg
mov
mov
ss
jno
and
outsb
sarb
and
cmp
movsb
sub
popa
sub
sti
insb
mov
mov
int3
in
pusha
sub
pop
xor
mov
call
pusha
negl
mov
xchg
cmpsb
out
shll
fistpl
je
or
je
incb
test
shl
je
push
aas
mov
mov
pop
or
cmp
jo
outsl
clc
lret
sub
daa
sub
xor
imul
popf
xor
sub
mov
test
and
cs
out
jb
inc
inc
sub
adc
jae
mov
js
mov
mov
repnz
popf
cmc
mov
js
sarl
inc
jge
cli
imul
fbstp
pop
sub
nop
notl
shll
cmc
les
mov
dec
jo
jg
test
sbb
or
pop
outsl
repnz
leave
xchg
subl
xchg
repz
decb
mov
neg
adc
inc
imul
dec
insl
mov
xchg
lods
lea
xchg
pop
hlt
rcrb
int3
xor
scas
sti
movsb
daa
add
nop
cld
cmp
daa
popf
dec
fwait
scas
mov
repnz
mov
push
fdivs
xor
into
fisubrl
adc
int3
fs
mov
jno
mov
leave
loop
add
data16
mov
jle
and
xor
arpl
mov
imulb
add
ja
andb
outsb
adc
pop
int3
decl
dec
jbe
add
mov
dec
in
imul
sub
leave
sbb
lock
or
push
je
icebp
add
push
movsb
inc
mov
lret
xchg
test
test
jno,pn
xchg
sbb
in
cld
push
clc
mov
scas
jno
xchg
call
cmpsl
lret
sub
adc
push
xchg
in
loopne
fcoml
mov
rolb
jl
fcoml
mov
dec
xor
jmp
inc
arpl
cwtl
mov
xchg
inc
and
adc
xchg
sub
bound
loope
cmpsb
or
mov
xor
repz
mov
xchg
adc
dec
icebp
lcall
push
mov
xor
jmp
mov
in
sbb
std
stos
lds
lods
imul
mov
adc
xor
daa
data16
sbb
push
or
adc
stos
sub
sub
add
xchg
inc
rcll
les
stos
movsb
ss
lock
aas
jnp
adc
xchg
cmp
cmp
mov
mov
mov
pop
fs
dec
leave
mov
cmp
int3
outsl
test
cmc
aas
push
mov
ss
outsl
cmp
lcall
lahf
jl
dec
adc
gs
xchg
sbb
xlat
movsb
xor
xchg
hlt
jg
sub
mov
jne
push
jnp
mov
shlb
je
leave
lds
mov
fs
sub
mov
pusha
inc
cli
stc
mov
push
cmpsl
pop
popa
loopne
add
jp
imul
mov
pushf
into
arpl
push
insb
cwtl
cmp
and
nop
mov
int3
mov
push
pop
arpl
je
movsl
daa
pop
mov
popf
lcall
dec
cmp
or
mov
pop
pop
push
mov
data16
xchg
mov
adc
in
push
or
shll
aam
sti
xlat
stos
movsb
pop
add
ret
sbb
lea
jo
je
lea
insb
sub
mov
mov
popa
aam
pop
fucomi
push
rclb
adc
mov
nop
clc
xlat
pop
mov
in
cs
test
push
adc
cwtl
push
arpl
out
lahf
das
mov
nop
fwait
push
mov
jns
shll
cmc
hlt
fsubs
in
inc
sbb
rcrb
stos
js
jmp
pop
in
int3
pop
clc
or
or
pop
subl
jp
jg
xchg
push
dec
mov
cmp
mov
scas
and
stos
push
ds
pop
push
or
pop
pusha
aaa
mov
adcl
xor
shll
xor
and
mov
neg
aas
mov
popa
stc
add
push
inc
mov
outsb
mov
int3
adc
inc
mov
movsb
jb
insb
jmp
je
arpl
xor
jno
and
xchg
and
jb
insl
sbb
pop
js
push
and
outsl
jne
int3
cwtl
sbb
test
daa
pop
and
outsl
inc
pop
push
mov
adc
and
xchg
mov
jno
sub
mov
movsb
idiv
push
and
dec
andb
mov
add
xchg
or
pop
arpl
xchg
stos
lahf
push
xchg
frstor
adc
ja
sub
cs
jl
push
or
ds
jns
call
das
pop
or
or
ret
aas
test
sub
lea
xor
cmpsl
mov
mov
xor
and
mov
push
push
imul
dec
out
lods
jge
idivl
sbb
mov
call
xor
jae
inc
pop
push
push
mov
es
mov
xor
dec
bound
scas
test
dec
stos
jp
mov
sbb
int3
xchg
fisubl
fisttps
fmuls
and
in
cmc
jg
mov
cmc
push
int
fs
push
iret
jmp
cmp
mov
out
dec
push
xchg
into
fdivl
pop
and
adc
pop
test
pushf
adc
sahf
dec
sub
adc
add
mov
cmp
cmpsl
cli
mov
xchg
mov
scas
dec
cmpsl
mov
sub
test
sub
test
sub
xchg
sahf
cmp
xchg
adc
ja
insb
push
sub
sub
mov
adc
mov
sbb
stos
adc
rcrb
mov
bound
mov
lahf
adc
arpl
lock
xchg
clc
fwait
hlt
mov
sub
lahf
adc
mov
push
out
in
loopne
call
clc
xchg
fsubs
mov
shr
int3
sub
and
enter
les
xchg
mov
cmpsl
mov
adc
lods
add
addr16
test
aas
fiadds
aad
push
cld
push
aam
ljmp
test
popa
and
aam
mov
loop
xchg
mov
test
push
xchg
xchg
mov
push
mov
data16
xlat
ret
mov
sbb
fistps
pushf
daa
cs
cmp
fimull
mov
xchg
aas
paddb
inc
bound
sub
in
inc
xchg
xorb
call
xorl
or
mov
dec
adc
cmpsl
add
in
jb
add
enter
or
adc
in
mov
popa
idivb
fwait
imul
sbb
and
mov
mov
add
rolb
call
ljmp
adc
nop
fidivs
cmpl
mov
psrad
dec
mov
ds
mov
lock
mov
test
into
mov
lds
out
mov
mov
dec
and
cmp
adc
sub
stc
out
mov
rol
xor
je
jg
push
pop
push
sub
in
jecxz
inc
rcl
add
pop
mov
xchg
popa
push
imul
and
aas
pop
std
test
scas
int3
inc
repz
add
pop
adc
test
sti
xor
pop
pop
xchg
cmp
or
cmpsl
in
add
js
sbb
or
jle
or
loop
pushf
sbb
jns
ret
xchg
and
out
mov
addr16
mov
jle
mov
insb
pop
mov
mov
jno
shrb
xchg
xor
insb
inc
dec
lds
daa
jmp
jg
imul
push
jno
insb
dec
sub
xor
or
jmp
jl
cmpsl
cmp
sbb
loopne
out
hlt
mov
mov
movnti
andb
dec
jns
pop
inc
arpl
or
fstpt
lcall
icebp
sti
stc
int3
call
mov
mov
dec
sub
pop
xchg
xchg
xchg
fs
mov
add
xchg
jl
and
and
mov
ret
fimull
pop
popf
cmovle
test
and
ficomps
mov
stos
lahf
push
movsb
scas
push
add
arpl
jecxz
clc
in
lahf
push
jge
sbbb
call
mov
ljmp
int3
pop
ret
adc
push
xchg
arpl
call
hlt
arpl
push
add
jae
in
cmp
pop
insb
sbb
push
push
imul
mov
xchg
test
sub
out
or
mov
pop
add
pop
mov
in
or
jl
adc
ljmp
cmp
lahf
mov
imul
pop
sbbb
in
outsb
mov
lds
hlt
sub
xor
xlat
xchg
xchg
pop
stos
cmp
adc
sub
mov
jns
mov
mov
mov
jo
add
loope
dec
cld
shrl
pusha
pop
dec
mov
mov
mov
mov
inc
xor
xor
out
dec
outsb
je
push
sub
mov
insb
cs
lds
mov
sub
in
mov
leave
mov
pop
push
jno
ds
fwait
dec
jbe
xor
rorl
pop
lock
cmc
nop
push
mov
stos
popf
es
loopne
xchg
and
addr16
xchg
inc
mov
in
sahf
fidivs
int3
jmp
sti
movsb
mov
lahf
jb
xchg
lcall
inc
cmp
addr16
lahf
test
popf
leave
scas
das
mov
push
push
mov
and
mov
or
das
pushf
daa
mov
mov
or
sub
cmpsb
outsb
mov
push
lret
sahf
pop
or
sub
mov
jmp
sbb
push
sahf
and
cmc
mov
mov
cmc
jns
ss
jb
jb
das
xor
xchg
outsb
je
shl
daa
jns
mov
xchg
pop
arpl
mov
repz
or
mov
sub
mov
adc
mov
and
insl
pop
std
test
and
jb
mov
popf
pop
shlb
cmpsb
jnp
mov
sub
adc
adc
pop
or
sub
pop
dec
push
mov
push
mov
xchg
lret
daa
sub
nop
pop
mov
bound
xor
scas
pop
fucom
lret
popa
call
pop
pop
mov
push
out
cmpsl
pop
inc
test
cmp
test
inc
int3
xchg
das
cmp
jo
push
pop
popa
sub
jo
pusha
pushf
test
adc
push
fiadds
pop
xor
mov
xlat
jno
int3
nop
sbb
sar
bnd
jo
xor
and
ret
xchg
int3
pop
add
pushf
mov
mov
adc
jg
jns
xchg
imul
sub
sbb
adc
cmpsl
int3
dec
icebp
sub
mov
jecxz
cmp
pop
sbb
cmp
ss
aaa
sbb
push
pop
xchg
test
push
push
dec
outsl
inc
lea
mov
pusha
test
mov
add
aas
inc
stc
jmp
pop
jbe
xchg
je
and
push
nop
inc
mov
jmp
arpl
bound
lds
out
xor
mov
notb
push
xor
pop
and
add
cmpb
mov
push
lret
test
out
loopne
mov
out
pop
jl
jmp
aaa
xchg
outsb
adcb
inc
dec
push
cmp
xor
int3
testb
movsb
inc
paddusb
sahf
cltd
outsb
inc
sub
lods
cmp
xchg
shrl
mov
xchg
push
popa
add
cmp
mov
mov
scas
cmpsb
dec
push
mov
lods
push
jb
mov
bound
mov
dec
pusha
nop
mov
xor
scas
loop
lock
out
or
sub
push
in
enter
decl
outsl
std
test
hlt
sti
dec
test
fcompl
xchg
jnp
shrb
into
push
inc
jnp
jge
jns
pop
jmp
jecxz
xchg
je
fucomip
in
xor
rolb
fwait
out
fwait
jnp
jns
movsb
jno
clc
sbb
sub
inc
add
mov
inc
mov
mov
cmovl
addr16
mov
leave
nop
inc
add
pop
xor
cmc
stos
inc
in
test
inc
jno
mov
mov
sahf
leave
adc
pop
cmp
xchg
aam
test
imul
lock
leave
lret
cld
movsb
mov
cmp
adc
and
fs
insb
shll
cmp
aad
cwtl
xor
mov
pop
dec
stos
int3
scas
jns
pop
mov
xchg
pop
stos
mov
xchg
pop
adc
and
mov
dec
mov
add
loope
stos
adc
pop
test
add
adc
push
aaa
stos
cmpb
or
test
int3
movsb
dec
ja
xchg
js
cmp
insb
stos
push
pop
xlat
je
and
push
int3
cs
and
in
inc
cmp
dec
cmpsb
inc
xor
mov
ret
mov
lret
cmpsl
xchg
pop
mov
lcall
and
xor
out
into
imul
xchg
fcomps
daa
lahf
arpl
lock
fldenv
jae
xor
js
cld
push
or
dec
rorb
dec
test
je
pop
insb
xchg
lods
inc
dec
add
in
xchg
pop
pop
xlat
mov
sbb
cmp
lahf
mov
and
subb
in
frstor
and
xchg
out
and
outsb
pop
mov
int3
push
in
shll
lock
lret
stos
jno
rorb
movsb
mov
push
sub
push
mov
sti
dec
or
aaa
mov
jecxz
dec
jnp
test
jecxz
mov
stos
and
sub
movsb
jmp
xor
xchg
mulb
mov
xlat
fists
jecxz
sub
push
adcb
sbb
jno
jae
adc
sahf
out
movsb
popf
xchg
xchg
dec
push
xor
movsb
lods
nop
sbb
fs
xorb
fnsave
es
dec
lcall
push
mov
push
sarb
jg
fldenv
jg
subl
outsb
sbb
push
mov
cwtl
mov
jo
sete
mov
jg
dec
mov
pop
pop
je
jns
sbb
subl
sub
sti
dec
and
fisubrs
int3
cwtl
sub
pop
cmp
imul
hlt
inc
sbb
aam
aaa
mov
imul
sub
insb
mov
adcl
mov
mov
xor
fldt
stc
inc
insb
mov
pushf
lret
xor
cmp
pop
adc
cmp
pop
pop
mov
pop
push
sahf
fiaddl
adc
movsb
jecxz
mov
ficomps
call
xchg
dec
scas
fwait
sbb
and
xchg
outsl
fnstenv
jge
adcb
jo
movsl
mov
lods
fadds
cwtl
jb
lea
ja
add
aas
lods
js
lahf
int3
insb
sub
sub
push
popf
and
bound
jle
imul
hlt
mov
mov
xor
push
lea
push
cmp
stos
jnp
stos
dec
movsl
sub
mov
sub
andb
shlb
dec
jno
leave
adcb
pop
cmp
pop
cs
or
adc
xor
in
jl
mov
inc
jnp
sbb
cltd
sbb
dec
sub
sub
int3
add
push
imul
pop
push
out
sbb
out
dec
ficoms
xchg
int3
mov
adc
aam
imul
int3
cmp
xchg
pop
add
in
adc
jp
aam
mov
push
lret
mov
stos
and
and
pushf
sbb
pop
popa
xchg
jo
pop
jb
push
inc
mov
mov
cmp
data16
out
and
stos
jbe
shlb
mulb
cs
in
in
lods
push
adcl
roll
jmp
scas
sbb
mov
xlat
les
mov
sub
and
clc
lahf
xchg
outsl
into
shlb
enter
push
lret
fistpl
test
dec
enter
js
push
loope
incl
add
lock
adc
sub
cmp
test
decb
xchg
std
fsubs
lret
pop
sub
loopne
jne
insl
xchg
icebp
push
fnstcw
jne
cmc
jmp
jne
out
adc
mov
cwtl
je
lahf
xchg
jecxz
dec
popf
push
sbb
mov
test
push
cmpsl
xor
sub
movsl
sub
jg
pop
mov
int
mov
sub
imul
and
sub
xor
out
leave
hlt
cwtl
mov
ljmp
sahf
aam
mov
dec
sahf
cmpsl
outsl
mov
js
popf
fcmove
stc
push
frstor
and
mov
push
xchg
test
inc
test
xor
adc
push
stos
inc
push
xchg
imul
jg
fdivp
cs
mov
fs
dec
popa
movsb
mov
dec
mov
std
lret
lea
test
add
xlat
mov
lret
test
popf
test
int3
jl
inc
xchg
fs
pop
loopne
dec
fcompl
mov
push
pusha
and
aad
fmull
stos
cmpsb
arpl
pop
cmp
lods
mov
mov
das
xchg
int
dec
fsubrs
push
mov
lods
mov
sbb
ret
mov
xchg
push
mov
push
test
in
mov
xor
insb
mov
xchg
jns
data16
cmpsl
inc
je
jle
out
daa
mov
fnstcw
cmp
dec
insb
mov
pop
pop
mov
js
fadd
inc
addl
jnp
push
rorb
popa
mov
lret
je
xchg
les
scas
in
daa
scas
int3
pop
ret
xor
push
mov
push
and
xchg
pop
test
xchg
cwtl
imul
xchg
mov
dec
mov
arpl
loope
fstpl
insl
cmp
bound
movsl
sub
ret
xor
mov
xlat
fistpl
mov
mov
subl
dec
mov
xchg
pop
jmp
xchg
out
jnp
xor
and
jnp
lock
frstor
out
or
pop
out
rolb
xchg
push
addb
mov
xchg
lods
push
bound
fld
es
shl
test
fcomps
xchg
mov
mov
cs
mov
mov
and
sbbb
or
mov
jae
aaa
mov
add
data16
in
pusha
cmpsb
mov
xchg
ss
push
cmpsb
push
mov
adc
pop
or
sbb
mov
add
mov
jns
and
jb
popf
push
add
rorl
mov
test
lgs
bound
arpl
jmp
imul
jns
in
mov
arpl
imul
add
sahf
push
push
sub
pop
or
mov
jp
int3
xor
xor
mov
aas
scas
mov
dec
arpl
sbb
xchg
mov
push
in
or
clc
and
and
imul
outsl
mov
and
stos
sub
jg
les
sbb
mov
stos
add
repz
mov
mov
aam
mov
mov
js
aaa
and
push
adc
imul
sahf
lahf
pusha
cli
sahf
ljmp
cmp
arpl
or
int3
dec
xchg
aam
arpl
cwtl
mov
gs
xchg
lods
push
add
incb
test
jnp
mov
mov
movsb
mov
pop
dec
aam
cltd
cmp
repz
mov
sahf
jmp
inc
mov
outsb
call
int3
cltd
xor
stos
out
jl
es
sub
hlt
fisttpl
sbb
fsubrs
mov
outsb
test
mov
inc
fwait
mov
insb
push
sahf
dec
sbb
dec
push
or
push
bound
sbb
movsl
jmp
mov
hlt
sub
dec
jmp
jl
ljmp
or
jnp
popf
sub
mov
shll
int3
push
mov
rcr
test
mov
addl
lret
xor
pop
int3
mov
mov
xchg
insl
pop
pop
pushfw
xor
dec
cmpsl
and
sbb
arpl
jmp
cmp
and
xchg
popa
cwtl
imul
cmp
xchg
sbb
and
pop
sub
inc
jge
or
cs
push
adc
repnz
mov
lret
lock
xor
pop
jmp
pop
dec
subb
jmp
stos
pop
bound
mov
cmp
les
push
subl
int3
jnp
dec
lea
dec
cmp
repnz
mov
mov
cwtl
test
and
addr16
jb
loopne
sarb
stc
enter
jmp
xor
inc
addr16
popa
xchg
loope
fwait
mov
jne
mov
lret
cmp
mov
aad
xchg
fildll
into
cmp
out
call
jbe
jmp
jmp
das
xchg
in
adc
fwait
cmp
stc
xchg
pop
loopne
and
lds
lock
lods
mov
cmc
add
mov
call
or
mov
mov
add
hlt
dec
xor
jo
pop
idiv
pop
push
fcoml
arpl
test
stos
insb
push
push
add
pusha
inc
fcomps
popf
fsubl
dec
cs
sbb
add
pushf
ret
pop
test
mov
mov
sarl
mov
push
xor
mov
dec
push
xchg
arpl
cli
arpl
lods
arpl
mov
or
daa
loopne
int
pop
lods
inc
popf
and
and
adc
popf
stos
daa
test
call
mov
in
outsl
test
sub
dec
mov
xlat
xor
fcoms
dec
insl
je
arpl
fwait
xchg
mov
adc
ja
test
rcr
xchg
push
or
pop
add
icebp
je
inc
pop
adc
out
dec
stos
movsl
movsl
je
test
int
std
ljmp
les
xchg
mov
mov
mov
lret
dec
dec
xlat
pop
pop
andl
cld
mov
jl
test
mov
add
xchg
jl
jge
xor
jnp
aas
bound
cmpsl
lods
in
stos
cmc
cmp
test
mov
rcr
adc
and
loope
scas
imul
in
notl
lea
scas
test
or
dec
push
lock
mov
jbe
int
repz
lahf
xchg
test
sub
lods
daa
test
maxsd
ficompl
mov
mov
adc
or
xchg
pop
int3
imul
mov
test
test
mov
cld
and
out
push
lock
gs
mov
push
jmp
imul
fisubrl
pushf
aas
and
popa
in
fs
adcl
fs
mov
pushf
test
pop
pushf
sbb
mov
jo
aas
cld
xchg
mov
xchg
int3
mov
xchg
pop
repnz
add
test
fwait
jo
insb
jno,pn
xchg
push
and
in
pop
push
pop
andb
mov
mov
jae
mov
mov
js
scas
rorb
aaa
shlb
and
xchg
lock
cmp
jecxz
mov
gs
dec
nop
orb
inc
and
test
sub
test
lret
sbb
nop
push
or
add
push
pop
sub
jle
dec
scas
push
int3
dec
leave
sub
adc
pop
enter
mov
aas
jl
dec
bound
mov
xor
mov
push
ljmp
push
lods
add
das
mov
mov
shrb
mov
popf
popa
cmp
stos
adc
out
cmpsl
jb
mov
in
pop
adc
lret
int3
lea
cmpl
xchg
dec
pop
test
lea
mov
pop
mov
dec
push
aas
fcompl
out
push
mov
dec
or
scas
ss
mov
ds
fidivl
dec
lods
mov
imul
jne
loopne
xor
scas
mov
sub
dec
mov
mov
in
sbb
cltd
stos
leave
stos
call
lahf
lea
and
pushf
loope
or
mov
or
sub
jo
jae
lret
push
in
mov
jl
adc
lret
inc
mov
mov
xchg
push
jmp
xchg
mov
mov
repz
insb
enter
xchg
outsl
or
repnz
mov
insb
add
in
adc
fistpl
mov
ret
divl
lods
or
pop
cwtl
scas
xor
push
add
cmp
pop
adc
cmpsb
add
scas
inc
mov
add
test
mov
pop
cmp
inc
mov
mov
ss
jp
pop
sbbl
mov
inc
daa
popa
outsb
sub
scas
pop
cmp
fadd
movsb
and
test
int3
rcl
or
mov
shrl
lret
outsl
mov
jb
adc
aad
ss
lea
sub
mov
mov
sti
int3
ja
ror
lahf
or
fsubl
cmc
inc
cmp
loop
jo
sahf
jns
mov
out
testb
ret
dec
pop
push
js
rorb
mov
dec
stos
test
xor
xchg
pop
mov
xor
icebp
enter
cmpsb
mov
sahf
xlat
fistpl
jl
shrl
outsl
mov
lock
out
push
leave
jl
mov
iret
push
adc
jns
loop
pop
mov
icebp
pop
jns
sub
aad
mov
xchg
xor
xchg
sub
or
sbb
scas
mov
adc
stos
ret
cwtl
pop
xchg
clc
xor
sub
xor
adc
xor
notb
mov
dec
in
xor
int3
nop
pop
jecxz
rolb
jp
dec
pop
xchg
xor
mov
and
adc
mov
inc
xlat
outsb
adc
mov
push
or
push
js
jne
jo
fld
inc
cmpsb
jp
inc
cmp
adc
and
cmp
test
fs
movsl
dec
daa
push
rcll
int3
and
mov
mov
mov
mov
loopne
cs
mull
js
fldl
pushw
pop
fdivp
push
int3
ret
xchg
dec
insb
and
cmp
outsb
outsb
imul
xor
jo
mov
adc
enter
bound
push
subl
jno
pop
jg
fdiv
adc
addl
mov
xchg
cmc
cmovg
cwtl
arpl
pop
xor
shll
stos
je
pop
xchg
lret
int
mov
mov
je
int3
lea
repnz
movsb
iret
call
lods
xor
leave
mov
les
dec
ret
movsl
data16
adc
enter
popa
add
mov
aad
lods
je
int3
cwtl
and
push
adc
fcompl
fistpll
fwait
insl
cmp
ret
insb
cmp
lret
xchg
xorl
lret
mov
or
mov
pop
gs
push
cld
mov
sub
fs
adc
push
jo
mov
mov
mov
cmpb
xchg
cmp
sahf
sbb
inc
xor
sahf
dec
adc
fxch
cmpsl
icebp
mov
pushf
xlat
pusha
dec
mov
cwtl
and
inc
fcoms
cmc
mov
ror
leave
pop
mov
addl
inc
sbb
sub
loopne
insb
int3
pop
sbb
push
in
push
jle
ss
mov
fucomp
or
out
add
loop
mov
mov
scas
adc
ret
mov
inc
out
pushf
mov
arpl
test
push
dec
mov
cmp
adc
mov
or
aas
xchg
push
jecxz
pop
jae
dec
mov
aas
sbb
mov
ret
fwait
mov
int3
or
data16
mov
mov
push
or
xchg
sbb
bound
sub
lock
mov
jae
sub
or
arpl
dec
bnd
or
inc
bsr
and
int3
and
roll
sub
scas
icebp
test
dec
imul
fs
lret
lods
int3
add
jae
test
push
fwait
jge
or
sti
icebp
sub
jmp
xchg
pop
aas
sahf
loope
push
je
int3
gs
test
aam
xor
test
nop
in
xchg
aam
and
outsl
js
scas
js
ljmp
and
pop
repz
inc
pop
dec
outsl
xor
and
fdivrl
cltd
daa
scas
dec
test
insl
notl
dec
insb
stos
pushf
js
pop
cmp
mov
fstp
lds
insb
add
cmp
push
pop
aad
les
loop
mov
arpl
and
jae
rcl
in
enter
adc
pop
cwtl
sub
xchg
mov
stos
loopne
or
and
fistl
andb
sub
dec
mov
cld
lahf
inc
lods
cmp
add
jmp
lock
mov
xchg
add
lock
rol
scas
test
in
xchg
mov
popa
mov
adc
inc
mov
arpl
sbb
ficoms
push
push
xchg
cmpsb
sub
jae
sbb
sbb
out
in
aas
mov
pop
arpl
into
jnp
lcall
ret
int
mov
push
or
push
inc
pop
or
xchg
int3
cmp
mov
fdivr
lcall
mov
mov
out
inc
filds
mov
mov
int3
popa
and
xchg
push
ret
jae
stc
lahf
cmpsb
dec
cmp
dec
mov
insb
jb
mov
xchg
jecxz
in
lahf
bound
mov
sub
clc
mov
xchg
cmpsb
cmpb
xchg
or
xchg
das
scas
push
push
xchg
gs
pushf
jo
out
mov
xorb
sti
cmp
addr16
sar
xchg
xor
jne
cmp
stos
pop
mov
pop
loope
jecxz
sbb
bound
mov
xlat
and
jae
outsb
pop
jns
bound
bound
xchg
pop
rclb
ror
sbb
insb
fwait
int3
add
cwtl
or
mov
push
lods
jnp
dec
mov
test
test
adc
jae
dec
out
repz
and
arpl
cmc
push
movsb
popa
push
loopne
xor
fwait
add
test
outsb
jo
xchg
shlb
jne
sbb
pop
pop
inc
push
fwait
cmp
jo
iret
outsl
gs
je
xor
and
test
pop
call
jns
lock
popf
adc
dec
push
fprem1
push
push
pop
mov
jns
scas
push
mul
dec
ds
or
dec
daa
mov
int3
xchg
cmpsb
dec
lods
or
movsb
push
sbb
and
mov
cli
insb
inc
test
cmp
scas
int3
mov
push
ds
inc
pop
scas
jg
popf
nop
mov
mov
adc
xchg
sti
cs
pusha
int3
loop
pop
cmp
repnz
popa
in
lcall
ss
test
sub
loopne
lods
sub
push
add
lea
push
sbb
scas
pusha
dec
pop
push
mov
daa
and
test
xchg
sahf
pop
enter
mov
sbb
loope
pop
xchg
scas
pop
je
pusha
sbb
or
push
mov
leave
xor
push
inc
jp
dec
int3
and
jle
mov
in
cs
xchg
xchg
jbe
dec
pop
push
les
xchg
mov
pop
jmp
outsb
js
je
jp
out
mov
mov
or
pop
inc
sub
bound
insb
mov
dec
roll
xor
xchg
popa
int3
adc
xchg
lea
shlb
std
mov
and
jo
popa
scas
stos
mov
out
movsb
imul
xchg
nop
int3
jno
push
pop
lea
mov
and
xchg
insb
popa
stc
mov
rcr
nop
das
and
push
cli
mov
cmp
xor
xchg
or
nop
sub
jl
ret
dec
pushf
jns
aas
movsl
push
dec
inc
xchg
inc
test
or
inc
scas
push
icebp
mov
xchg
inc
adcl
jp
xor
xchg
test
push
jb
in
movsl
lock
call
pushl
mov
test
dec
scas
ss
sahf
out
jo
or
push
shlb
push
xchg
in
in
stos
jae
leave
lods
pop
mov
mov
xchg
cmc
xor
leave
call
bound
mov
mov
or
mov
cmpsb
idivl
sbb
dec
sbb
xchg
mov
das
int3
stc
cmpsb
or
lods
aam
pop
inc
adc
inc
pop
sbb
ja
sahf
mov
fst
or
jns,pt
cbtw
loop
inc
mov
scas
aaa
xchg
sub
fisttpll
push
bound
xchg
test
jmp
aaa
outsl
hlt
push
in
or
and
mov
outsb
in
cmp
je
ljmp
push
imul
fs
in
xchg
pop
mov
fwait
lret
cwtl
repz
jne
movsb
shlb
push
push
dec
sub
test
fists
or
xor
scas
mov
or
mov
push
dec
movsb
mov
mov
enter
cmpsb
pop
lds
dec
mov
and
pop
push
mov
xchg
and
dec
fidivrs
idivb
outsb
inc
dec
sub
call
movsb
adc
cmp
inc
mov
sbb
sbb
or
push
mov
subb
mov
mov
jmp
xchg
nop
scas
adc
outsb
dec
or
xchg
fsubs
les
outsb
rcll
jns
out
cli
push
cs
mov
push
out
add
mov
xor
sub
aaa
sbb
cmp
or
push
cmc
stos
sbb
sub
loop
jecxz
inc
stos
mov
mov
adcl
pop
leave
mov
stos
sub
icebp
or
std
gs
mov
icebp
push
rcrb
and
cmp
lea
push
mov
cmp
call
push
dec
and
out
insl
hlt
stc
xchg
push
and
push
lret
pop
xchg
dec
pushf
int3
mov
inc
and
push
push
mov
and
loop
insb
loop
adc
repnz
movsb
push
jge
xor
in
fwait
aaa
sti
sbb
cmp
ret
and
add
pop
lods
das
sub
int
std
mov
mov
sahf
mov
lret
rorl
pusha
xorb
stos
lahf
push
sbb
vphaddbd
jae
stos
sub
jb
divl
adc
fsubs
andb
adc
cmp
mov
mov
or
sbb
jb
xor
sub
add
popf
lahf
lods
mov
popf
xchg
jmp
into
ret
out
cwtl
and
xchg
add
inc
fs
insb
xabort
xor
inc
leave
push
adc
das
mov
push
nop
push
xchg
mov
les
cmp
test
insb
lods
popf
and
jne
jae
mov
push
pop
mov
xchg
out
jb
sbb
test
pushf
sub
lock
popa
and
shrl
push
inc
and
cwtl
xchg
das
shll
hlt
mov
or
jg
repz
pop
mov
inc
push
pop
lahf
mov
add
mov
pop
movsb
dec
movsb
clc
stc
dec
nop
mov
lods
int3
or
mov
dec
lods
int3
sbb
mov
jl
stos
inc
xor
cmp
jmp
aad
xor
push
add
inc
stos
xor
daa
inc
or
and
stos
enter
addr16
jae
xchg
lods
mov
sbbb
lahf
and
pop
iret
add
adc
popa
and
or
pop
repnz
sub
push
enter
sbbb
pop
popa
sbb
in
add
insb
insl
xlat
mov
loop
jbe
mov
or
shll
ss
add
sbb
mov
jmp
test
jno
jns
xchg
mov
add
jge
pop
xchg
push
jns
jnp
mov
test
fsubl
xchg
cmp
in
sbb
test
dec
cld
inc
enter
lret
hlt
test
cmp
fs
lods
add
loop
and
mov
sub
shld
mov
test
fistpl
mov
stos
and
out
ret
add
pop
mov
test
xor
outsb
cmp
fwait
mov
xchg
cwtl
out
mov
js
xchg
insb
xchg
push
and
xchg
arpl
xor
in
movsb
cmp
pop
and
int
jle
jl
xor
jg
arpl
add
fdivrp
pushf
loop
pop
nop
xchg
shlb
add
in
in
xor
adc
push
xchg
ja
xor
inc
popf
push
adc
lahf
or
out
test
aam
dec
sahf
jmp
aas
cltd
ret
dec
test
lods
mov
repnz
scas
lret
addr16
and
xchg
gs
sub
int3
test
lcall
mov
push
leave
inc
outsb
inc
sbb
sub
add
sub
xor
leave
add
add
pop
int
movsl
jns
and
loope
movswl
shrb
test
daa
stos
outsb
mov
fcomi
and
movsl
push
insb
repz
jbe
test
clc
xor
je
ss
dec
jge
addb
notl
cltd
mov
mov
loop
arpl
lods
and
scas
pop
pop
jmp
sub
clc
stos
fwait
and
cmp
movsb
xlat
mov
cwtl
stos
cwtl
cmc
js
pop
out
mov
sbb
mov
sub
andl
lcall
sbb
outsl
fs
cmc
insb
sub
mov
int3
inc
out
mov
ret
mov
pushf
insb
arpl
sbb
add
lock
mov
pop
scas
mov
lret
sbb
and
mov
mov
cmpsl
int3
addr16
sbb
mull
fwait
dec
je
ret
std
cmp
add
je
bound
add
imul
int3
fs
fs
pop
test
dec
push
and
add
scas
daa
jle
mov
je
int
xchg
and
gs
push
es
sub
arpl
mov
mov
pushf
shlb
dec
aas
popa
daa
pop
dec
mov
ret
sbb
xlat
jmp
xchg
stos
adc
imul
int3
aad
xchg
or
or
and
out
aad
leave
xchg
push
sub
cmpl
push
lret
or
add
movsb
stc
mov
sbb
dec
les
mov
out
call
fdivrl
cmpsb
or
fidivs
imul
xor
lds
lods
sub
fiaddl
sub
ret
pop
or
aad
adc
xchg
mov
or
bound
sub
fisttps
fimull
outsb
jno
mov
test
xchg
ljmp
xchg
push
fs
popa
test
fidivl
pop
sahf
out
rcr
mov
mov
in
xchg
mov
pop
scas
nop
jae
dec
sbb
stos
aas
into
add
pop
mov
lret
hlt
push
bound
sahf
or
cmc
or
xor
outsl
sub
cmpsb
mov
fs
dec
bound
addb
sti
outsb
popf
inc
pop
in
popa
dec
fs
push
daa
and
jmp
sahf
sub
insl
mov
bound
or
jmp
cmp
push
sub
mov
int3
cmp
xchg
inc
nop
outsb
adc
xor
xor
cwtl
cmp
jge
mov
push
daa
stc
xor
cmp
xchg
mov
sbb
jno
lock
jbe
jno
jnp
lea
test
cmpb
cmp
mov
ret
popf
sbb
lds
jno
cmovo
int3
in
pop
mov
cwtl
in
jae
rcll
add
mov
ss
jl
call
xor
mov
test
dec
inc
dec
shlb
xor
xor
dec
in
sbb
mov
int3
fistpl
in
inc
dec
movsw
stos
mov
aaa
mov
pop
push
jl
sub
dec
xchg
adc
les
cmp
pop
loope
lret
xchg
repnz
ja
lret
lock
push
xchg
loopne
fwait
add
fimuls
or
mov
lahf
pushf
insb
arpl
lock
jl
mov
sub
xor
rcr
inc
imul
xchg
push
data16
test
rcll
mov
stc
daa
pusha
xchg
mov
xchg
add
movsl
mov
test
fwait
aas
push
outsl
popa
and
sbb
pop
std
pusha
xor
dec
sbb
loopne
cmp
sub
sub
xor
ljmp
sbb
inc
pop
aas
stos
fwait
jnp
pop
xlat
mov
xor
xor
pop
loop
orb
into
mov
sub
pop
arpl
lea
and
add
xchg
xor
mov
test
repnz
popa
fisubrs
push
int3
std
jecxz
ret
mov
cmp
add
and
adc
dec
lods
mov
insb
js
fs
stc
sahf
in
rclb
lret
rorb
push
test
mulb
lods
mov
cmp
cwtl
push
xorb
push
mov
fdivr
push
pushf
xchg
jb
jp
mov
pop
addr16
pop
cmp
aaa
repnz
xchg
xchg
mov
xchg
jo
ja
xchg
in
addr16
mov
out
mov
int3
js
push
movsb
dec
cmp
pcmpgtb
imul
jecxz
scas
jp
cltd
jbe
xchg
aad
out
imul
repnz
push
popf
xor
mov
and
xchg
sub
sbb
push
push
xchg
stos
mov
mov
jae
xor
insl
adc
pop
int3
adc
loop
dec
test
mov
mov
jae
lret
movsl
sub
sub
lea
xorl
push
sub
repz
leave
movsb
das
jmp
hlt
inc
cwtl
and
rcll
stos
ja
lods
lods
fs
lods
mov
push
cwtl
cmp
imulb
jo
movsb
sub
ljmp
jns
sub
nop
cmp
aaa
pop
pushf
loop
cltd
in
leave
pop
pusha
outsb
push
add
sub
pop
cs
sub
mov
ss
jo
gs
out
sbb
out
sub
inc
adc
loope
pop
and
lret
stos
pushf
int
xor
pop
mov
pop
icebp
mov
inc
xchg
fldt
dec
jbe
movsb
movsb
push
ret
loope
lcall
mov
aam
adc
je
pop
pop
add
inc
ret
movsb
scas
cli
lock
cli
int
push
sub
movsb
testb
sbb
sahf
cmc
rcrb
mov
cmpb
scas
mov
jo
xor
aaa
js
int3
hlt
leave
add
sbb
push
mov
lds
pop
mov
ss
mov
jnp
rclb
jecxz
dec
mov
clc
xchg
push
adc
test
shlb
daa
adc
inc
cmpsl
int3
jp
xchg
jne
push
aas
test
pop
lods
movsb
adc
pop
mov
mov
enter
adc
mov
mov
adc
jno
inc
sbb
je
int3
adc
repz
arpl
jns
inc
mov
push
fldt
inc
lods
lock
mov
lods
mov
cmp
stos
mov
mul
mov
adc
push
int3
push
push
cwtl
aam
cs
pop
aas
push
daa
daa
xchg
cli
arpl
adc
sbb
inc
fld
or
jns
aaa
cmp
loopne
mov
jp
shll
pop
mov
push
jns
es
add
daa
fs
fwait
pop
dec
out
out
loope
xchg
std
lock
imull
inc
test
xchg
mov
and
pop
sahf
or
ds
aaa
lcall
inc
test
inc
mov
push
repnz
push
mov
sbb
xor
repz
test
jae
push
nop
mov
scas
loop
push
and
xor
xor
push
mov
xchg
sarb
loopne
mov
mov
push
fs
add
mov
sub
insl
movsb
ljmp
xor
add
in
fwait
mov
movsb
ja
mov
pushf
xchg
ss
popa
push
lods
mov
mov
adc
mov
mov
in
add
push
xchg
movsb
xchg
ss
inc
jae
ljmp
outsb
test
add
scas
pop
inc
mov
cmp
test
mov
pop
popf
sub
pop
push
gs
decb
xchg
adc
jl
icebp
lret
aas
xchg
fldcw
rorb
repz
jbe
push
xor
js
in
pop
int3
leave
push
sar
pop
pop
scas
jle
jl
addr16
jp
dec
add
jns
aaa
scas
pusha
pop
daa
js
lds
jno
loope
jecxz
fs
popf
mov
sbb
in
mov
repnz
cmc
xlat
mov
cs
mov
imul
leave
mov
imul
call
mov
std
mov
shll
lret
fimull
outsl
ss
test
ficoms
mov
and
insb
pop
pop
js
bound
lods
mov
push
push
dec
jb
xor
lea
xchg
mov
addb
cmp
xchg
cmp
push
jns
mov
ret
bound
sub
jns
inc
movsl
xor
push
insb
mov
jae
imulb
jbe
and
fwait
imul
pop
movsl
in
test
adc
mov
movsb
mov
cs
pop
test
cs
inc
fwait
mov
pusha
push
insb
inc
das
mov
test
das
sub
insl
iret
cmp
cmp
adc
inc
xchg
push
enter
push
add
push
sbb
or
daa
jno
dec
aas
cmpsb
push
cmp
arpl
loopne
aam
or
inc
push
insb
mov
icebp
sbb
imul
mov
sub
sub
jo
sbb
lock
sub
adc
dec
xor
inc
add
stos
cli
dec
aad
add
mov
mov
jae
scas
ja
fwait
jno
imulb
negl
cld
xor
testb
daa
inc
pop
cmp
mov
stos
jmp
pushf
or
fsts
repz
inc
dec
daa
ss
sub
and
jb
cmpsb
in
into
daa
mov
cmpsb
lret
ja
inc
mov
xchg
pushf
lods
aas
cwtl
sarb
adc
dec
fildl
mov
pop
dec
nop
sti
inc
ljmp
cmp
jle
shrl
and
push
mov
les
adc
jmp
aad
loop
stos
add
and
fisubrs
arpl
add
sub
cmp
or
push
mov
xor
push
mov
xchg
mov
daa
cmp
movsl
sub
sub
inc
setnp
movsl
sub
jl
sti
push
mov
mov
jo
jae
xchg
aam
test
mov
sub
xchg
jae
insb
mov
mov
lds
mov
xor
sub
pushf
lods
jle
and
test
insl
dec
mov
movsl
cmc
pop
pop
daa
pop
and
mov
or
testl
pushfw
or
xchg
mov
push
xchg
rorl
dec
xchg
adc
xor
arpl
adc
movsb
fs
and
inc
add
inc
dec
and
push
pop
xchg
clc
das
fistps
push
inc
insb
xchg
icebp
jle
push
cmpsb
mov
push
scas
push
in
outsb
xor
movsb
xchg
inc
xchg
xchg
mov
stos
cmp
jne
and
xchg
sahf
in
mov
mov
and
and
xchg
mov
daa
push
inc
lret
and
cmc
jo
addr16
mov
orb
pop
into
imul
aaa
scas
cmp
ds
sub
xor
fnstenv
or
fbld
movsl
mov
sbb
mov
mov
add
fistpl
mov
test
lock
ja
jp
adc
sbb
lea
leave
popf
insb
inc
lds
shlb
cwtl
lahf
xchg
adc
popf
jns
add
mov
push
test
mov
dec
repz
add
inc
cmp
fwait
mov
cmovle
push
leave
mov
in
cmpsb
and
fwait
pop
cwtl
mov
ret
mov
mov
cld
mov
adc
mov
mov
sub
sub
test
jae
cvtps2pd
mov
xchg
ss
mov
jb
and
mov
nop
pop
sbb
adc
lea
push
inc
push
pop
repnz
pusha
mov
outsb
and
push
and
mov
clc
nop
insb
and
or
mov
push
push
push
xchg
mov
je
jl
or
insb
int3
push
test
mov
push
aam
loop
jb
fcoms
sbb
fwait
fs
call
ret
insb
js
mov
cmp
xchg
jns
cmpsl
mov
inc
inc
and
sarl
adc
xabort
lea
jnp
cmp
mov
cld
fcompl
andl
repz
pusha
lods
repz
mov
in
mov
mov
test
out
pushf
lret
mov
daa
jg
mov
cmpsb
lods
inc
dec
addr16
push
cwtl
cltd
test
rolb
mov
jns
fcmovnu
jne
xor
mov
jns
aaa
mov
mov
cli
dec
lods
mov
imul
in
add
scas
ret
cmp
and
fs
push
test
in
test
ja
adc
iret
mov
mov
sbb
test
movsb
sub
xor
movsl
popf
in
mov
aad
rorb
int
adc
je
mov
sbbl
mov
ret
cmp
out
inc
jb
sarb
aad
imul
jmp
fisttpl
cltd
mov
xchg
mov
out
push
sub
mov
lds
jmp
orb
cpuid
sbbb
mov
mov
mov
xchg
test
add
clc
and
mov
xchg
push
scas
push
push
jl
adc
dec
lods
call
and
mov
sub
inc
dec
xchg
sbb
jne
add
arpl
xchg
outsb
jae
jne
pusha
gs
push
call
jb
xor
sbb
mov
inc
movsb
pushf
roll
pop
stos
dec
aaa
cmp
repnz
mov
mov
lock
loop
popa
out
aas
test
ficompl
pop
pop
pop
aas
sub
lock
insb
mov
js
xorb
mov
xchg
mov
jae
mov
pushf
lock
jne
cmp
adc
mov
clc
into
mov
pop
gs
inc
mov
inc
aaa
xchg
stos
je
mov
sbb
mov
loopne
dec
add
mov
pop
mulb
pop
pop
dec
or
fs
sbb
pop
cmp
push
pusha
in
fisubrl
aad
cmpsb
out
xor
mov
xchg
fmull
arpl
scas
cmp
ljmp
sub
lds
inc
cmp
add
fistps
jmp
mov
xor
mov
xchg
cmp
std
mov
daa
cwtl
lods
jbe
adc
push
pop
pushf
cltd
daa
dec
mov
stos
das
movsb
cmp
icebp
push
mov
cmp
loope
mov
cwtl
je
sub
cmc
push
lods
and
sub
cwtl
mov
mov
jmp
jbe
lds
scas
mov
das
and
jbe
popa
lahf
jbe
fildll
int3
cltd
jo
aaa
ljmp
mov
xchg
and
adc
mov
mov
rcrb
xchg
jb
and
cwtl
mov
sbb
xchg
mov
movsl
subb
jl
addb
ds
movsl
push
jb
pop
cmp
outsl
mov
daa
push
mov
in
divb
and
sub
mov
cmpsb
jnp
inc
sbb
fiaddl
and
mov
mov
mov
scas
filds
in
mov
xchg
adc
es
mov
daa
test
cmp
mov
testl
xor
popf
jae
in
cld
or
lock
subb
movsl
sti
xor
push
jmp
test
or
mov
pop
ja
xor
popa
xchg
sahf
stos
js
cmpsb
and
lock
xchg
movsb
and
imul
mov
mov
jg
jle
call
aad
mov
xchg
sbb
mov
and
ret
xor
mov
sub
lds
jmp
sbb
fistl
fmull
and
scas
and
test
or
mov
aam
mov
stos
sbb
mov
xor
mov
sbbb
mov
fidivs
leave
movsl
lds
test
jb
mov
jecxz
aas
and
cmp
dec
rcrl
repnz
mov
sti
sub
xchg
popf
ss
movsl
xor
xor
movsb
sub
xor
pop
and
popf
mov
lea
pop
leave
push
sbb
rcll
mov
xor
mov
jl
push
jmp
mov
push
pop
and
mov
js
cmp
lcall
push
in
jo
push
clc
ret
loop
in
push
leave
sub
data16
push
jb
arpl
push
mov
lock
shlb
sub
lret
repnz
push
aas
xor
xor
cmpsl
cmp
mov
or
pop
in
pop
pusha
aam
pop
sub
inc
je
inc
push
popf
movsb
lea
outsb
push
psubb
sub
cmpsb
gs
xor
pop
add
pop
fidivrs
inc
inc
nop
fs
ss
cwtl
sbb
and
lcall
das
fnstsw
sbb
cwtl
jmp
jnp
aam
aas
push
sbb
xor
fmuls
sbb
icebp
xchg
add
sbb
popa
or
dec
fcoml
into
rol
sub
in
lahf
cmp
aam
cs
loopne
jp
pop
loopne
pop
mov
inc
dec
arpl
orl
cmpsb
ret
or
jl
adc
lods
xor
leave
sbb
inc
stos
pop
stos
aas
arpl
leave
xchg
pop
push
lock
pusha
insl
mov
fcoms
inc
int3
mov
gs
pop
aaa
xor
mov
add
dec
inc
lock
leave
cmpl
fs
dec
add
popf
mov
dec
inc
push
mov
stc
cmp
repnz
xchg
pop
fcoml
sbb
popl
inc
xor
shll
adc
int3
fwait
jb
xchg
divl
and
fdivrl
mov
dec
adc
mov
int3
inc
mov
adc
jb
push
lcall
sti
pushf
mov
mov
sti
push
jb
inc
push
ret
jae
sbb
add
mov
pop
cli
scas
xor
add
mov
jns
push
inc
adc
js
in
popa
and
sub
cltd
pop
mov
stos
dec
movsb
push
outsl
push
dec
mov
xchg
aaa
sub
mov
xchg
sbb
dec
les
lods
inc
lea
test
fs
nop
adc
jecxz
shl
pop
nop
pop
pop
aad
sbb
push
mov
lret
data16
adc
fwait
mulb
push
jno
jne
mov
outsl
mov
xchg
rcll
hlt
xchg
ret
or
adc
int3
cmp
push
out
mov
cmp
nop
jns
mov
and
dec
inc
cmc
mov
sub
pop
add
pop
dec
pusha
push
clc
inc
or
fcomip
push
or
pop
test
loopne
shlb
xor
inc
fwait
rcl
and
xor
sbb
mov
sbb
ret
jo
mov
fcoml
orb
int
sub
mov
lret
lahf
sub
jb
sub
lods
inc
scas
stos
pop
test
push
shlb
or
aaa
dec
int3
pop
jp
les
fidivs
loope
xor
insb
cmp
mov
push
jbe
bound
fmulp
cmpsb
xorb
out
xor
xor
stos
mov
jns
cmp
aas
xor
insb
sbb
clc
push
or
lock
push
inc
shl
mov
xor
sub
test
int3
pop
pop
sub
lcall
dec
mov
xor
lock
data16
jo
mov
insl
xchg
jmp
adc
cmp
stos
outsb
pusha
pushf
mov
aaa
xlat
push
notb
push
add
test
mov
pop
rsqrtps
push
loop
fisttps
pop
popa
pop
int3
mov
inc
mov
pop
lcall
xchg
or
mov
xchg
pop
and
push
jns
lahf
and
cld
jo
dec
sub
dec
mov
arpl
xchg
jmp
add
popa
push
or
push
or
out
ljmp
fsubl
xchg
adc
aad
orl
push
add
shlb
rorl
dec
clc
add
mov
lahf
leave
xor
or
ret
pop
push
aas
lcall
sbb
push
jae
sub
mov
cmp
cs
enter
test
out
push
adc
and
movsl
popa
sub
std
stc
jb
mov
inc
push
cli
inc
push
js
mov
stos
int3
mov
jae
mov
ja
dec
std
jl
addb
mov
cmp
sub
push
xor
daa
test
jecxz
shrl
leave
stos
push
pop
sbb
lods
cmp
sbb
je
pop
inc
add
mov
ss
xchg
dec
stos
jae
dec
mov
add
test
add
subl
jecxz
faddl
xor
fsubp
pop
xchg
xchg
sbb
and
popa
jmp
leave
in
bound
push
aad
adc
ja
mov
pop
enter
mov
inc
sub
enter
scas
inc
and
inc
mov
and
cwtl
sub
dec
xchg
mov
mov
movsl
sub
sub
and
mov
movsl
outsb
mov
pop
mov
jp
mov
cmpsl
xchg
push
lock
and
pop
xor
cmp
sbb
cmp
and
outsb
mov
scas
jmp
les
lret
stos
out
sub
mov
outsl
sti
xchg
xchg
adc
rclb
fs
outsl
call
inc
out
arpl
mov
cltd
xor
mov
pusha
aas
lahf
repz
cld
cmp
jp
inc
mov
std
rcrl
test
jl
adc
xchg
push
push
xor
adc
and
movsb
add
pushf
or
mov
and
adc
mov
bound
ss
repz
inc
mov
cmpsl
popf
stos
sub
stos
dec
subl
mov
ret
std
scas
shll
push
jp
and
fs
mov
mov
inc
int
sub
sub
and
and
and
mov
push
sbb
out
fsts
pop
mov
lea
pusha
ljmp
push
push
pop
push
dec
je
mov
pop
pop
mov
stos
stos
aaa
in
adc
mov
mov
sub
ja
jae
int3
xchg
lcall
mov
xor
daa
insl
mov
sub
or
es
ljmp
sub
mov
push
or
lods
ds
mov
hlt
xchg
scas
push
shr
lods
mov
es
mov
cmp
insl
jne
mov
push
movsb
scas
mov
fs
xchg
scas
nop
sub
mov
shrb
arpl
jae
int
push
inc
jnp
inc
mov
sub
test
push
mov
inc
mov
pop
fimuls
pusha
mov
mov
mov
jns
pusha
sub
ja
inc
cs
sub
cmpsb
out
jb
sub
sub
testb
sub
sub
xchg
xchg
lods
mov
je
mov
cld
leave
push
xchg
fs
notb
adc
jns
inc
xchg
in
push
daa
mov
push
mov
mov
fwait
popf
insl
fidivl
mov
scas
pop
mov
insl
jae
ljmp
pop
jb
lods
outsl
std
jns
in
lcall
loope
in
jo
push
insb
out
outsb
js
mov
test
sbb
sub
and
arpl
scas
dec
xchg
inc
insb
hlt
es
inc
subl
pop
js
mov
shll
shll
mov
jmp
fldt
out
je
lret
test
repz
lret
pusha
sub
ss
cs
nop
inc
dec
jl
xchg
clc
push
and
push
fs
daa
arpl
inc
and
mov
lahf
xchg
mov
jmp
mov
xor
mov
xchg
test
leave
jg
hlt
lret
imul
daa
cltd
lcall
dec
imul
arpl
outsl
sbb
pop
jo
out
movsl
mov
adc
sbb
gs
sub
loope
sub
mov
aaa
mov
je
bnd
lods
lret
data16
jp
mov
out
fcmovb
sub
enter
cmp
into
xor
rorl
sbb
push
inc
jp
js
mov
mov
mov
jmp
loop
lahf
gs
mov
dec
mov
data16
mov
lret
ljmp
shll
insb
lods
popa
fucomip
push
inc
das
fucomp
movsb
enter
leave
mov
in
xor
lods
mov
mov
xchg
lcall
mov
pushf
inc
mov
addb
inc
aad
cmpsl
repnz
ja
in
fs
xor
mov
lea
or
inc
mov
sbb
ljmp
sub
imul
popf
sub
cltd
push
aad
bnd
insb
test
push
subb
push
stos
in
insl
mov
add
xchg
cwtl
push
ljmp
mov
cwtl
nop
stos
cmp
test
fs
lds
imul
je
insb
loop
aam
js
in
bound
push
mov
mov
push
mov
je
in
movsb
sub
push
sbb
outsb
loope
loop
leave
lock
mov
scas
xor
outsb
stos
ja
inc
dec
mov
cmp
outsl
jo
int3
mov
lcall
dec
mull
adc
lds
test
repz
sti
mov
pop
sub
or
loopne
in
scas
repnz
mov
cltd
cmp
nop
test
fsub
aas
cmpsb
mov
jp
scas
pop
sahf
mov
mov
repz
cmp
stos
or
mov
sub
add
scas
jl
lods
mov
cmc
popf
xlat
mov
repnz
push
imul
pop
xlat
mov
jae
sub
out
subb
fiaddl
aaa
insb
out
repnz
sub
jecxz
mov
cmpsb
mov
mov
stos
cmp
xchg
leave
insb
ss
fnstsw
cmpsb
jae
mov
xor
popf
fsubl
in
and
cmp
loopne
test
and
addl
sbb
jb
xor
rcll
mov
cmpsb
cmp
lods
lock
fwait
pop
in
outsl
lock
out
loope
lcall
xor
cmp
adc
sti
xor
lock
test
test
in
insl
je
sub
mov
inc
imul
dec
dec
bound
enter
jge
mov
insb
imul
push
jecxz
adc
lods
mov
mov
mov
inc
mov
loopne
xlat
sbb
xlat
nop
popf
mov
xchg
sub
mov
mov
cmpsl
inc
fadd
cmp
jecxz
xor
stos
adc
pop
loopne
ds
and
mov
mov
ss
mov
push
pop
jns
mov
leave
pop
scas
js
sbb
paddusw
xchg
ret
leave
xchg
jns
pop
and
jmp
xchg
in
pop
and
add
sbb
lahf
push
sbb
cli
ljmp
adc
mov
mov
jb
xchg
add
int
das
insl
mov
iret
dec
mov
push
or
xor
push
xor
or
or
incl
stc
ss
movsl
jo,pn
sbb
outsb
cmc
mov
mov
int3
ja
mov
ret
cmp
das
fs
mov
popf
push
movsl
or
in
xchg
cmc
cmp
or
inc
mov
mov
in
rcrl
mov
xor
mov
mov
cmp
ficoms
xchg
popa
fidivrs
int3
and
aaa
inc
js
jmp
pop
mov
push
push
jns
cmp
mov
addr16
stos
pminub
jno
or
xor
mov
mov
jo
inc
lods
aas
pushf
ss
pop
sbb
cwtl
jo
push
xchg
lea
cmp
jmp
push
cmp
pushf
mov
arpl
pop
cmp
int
xor
sahf
mov
push
lods
push
cmp
jge
aaa
mov
jmp
pusha
adc
out
loop
push
pop
and
pop
mov
mov
out
mov
imulb
mov
mov
stc
mov
mov
fstpl
cmpb
jb
lods
push
cli
daa
fmull
jecxz
xchg
pop
add
out
mov
test
pop
xor
insb
les
jns
xor
sarb
stos
popa
je
lods
scas
cmc
sub
mov
push
and
leave
insb
decb
stc
lock
sub
and
lcall
mov
fdivr
dec
fwait
cmpb
test
cmp
pop
jnp
jns,pn
cmp
or
repz
inc
jnp
pop
lds
add
push
cmp
les
movsb
inc
mov
leave
mov
fcomps
and
lahf
out
inc
lods
pop
ss
jne
test
pusha
movsb
cld
jo
dec
ret
dec
cmp
xor
cmp
push
lods
in
dec
mov
push
mov
sub
add
cs
xor
imul
test
icebp
lcall
xchg
movsb
mov
xchg
outsl
movsb
sub
jns
jb
pop
pop
loopne
dec
movsb
imul
stos
mov
lret
push
adc
jg
xchg
int3
xor
lret
or
cwtl
aam
mov
dec
push
and
cmp
fildll
cmp
sete
cs
outsb
dec
ret
leave
push
imul
sbb
mov
popa
cmpsb
data16
pushf
push
push
iret
mov
js
pop
outsb
add
andps
push
add
jns
jecxz
imul
push
aad
jmp
ret
xchg
sbb
into
or
and
test
cmp
mov
push
xchg
cmpsb
pop
cmp
push
and
jbe
les
dec
add
mov
mov
dec
push
inc
mov
mov
lock
add
sub
imul
xchg
mov
sbb
dec
loopne
mov
outsb
sti
mov
xchg
movsb
mov
das
and
ret
out
mov
cmpsl
pop
jo
mov
sub
mov
mov
dec
stos
push
sar
cmp
stc
fbld
or
mov
lods
jg
pushf
push
sbb
lods
pushf
mov
in
xchg
movsl
and
outsb
popa
push
pushf
inc
pop
lahf
xor
mov
adc
loope
lret
lods
xchg
in
pop
pop
call
mov
mov
mov
xor
pop
mov
jno
mov
orb
sub
add
and
sub
cmp
out
leave
inc
inc
test
pusha
rorl
mov
mov
mov
sbb
push
in
cmp
jb
xchg
sbb
xchg
gs
out
jno
mov
lahf
xchg
je
fmul
mov
lods
popf
mov
xchg
xor
sub
hlt
cmp
sbb
stos
xchg
jo
jg
jo
push
nop
cmp
pop
mov
fiaddl
mov
in
scas
mov
mov
lods
stc
sub
or
ss
fmul
outsl
cmp
mov
jbe
pusha
push
jb
icebp
and
cwtl
mov
cmp
xchg
push
mov
repz
xor
loopne
sbb
insb
xor
pusha
sub
mov
inc
dec
repnz
adc
int3
aaa
jl
xchg
test
outsb
gs
xchg
cmpsb
pushf
cmp
xchg
mov
in
scas
cmpsl
mov
imul
pop
fs
mov
faddl
mov
push
sbb
sub
adc
inc
testb
iret
pop
mov
shrl
data16
adc
xchg
fs
ror
mov
pushf
sbb
cs
andl
pop
xor
add
mov
xor
into
sub
add
fs
popf
aas
mov
pop
mov
push
repz
adc
inc
xchg
mov
mov
adcl
cmp
das
cld
or
movb
and
test
mov
fnsave
cmpsb
xor
test
push
mov
mov
inc
or
jb
shl
xchg
push
pop
mov
adc
add
cmp
leave
jg
mov
mov
sahf
nop
repz
jb
mov
stos
and
cld
mov
int3
adc
add
lret
daa
inc
mov
scas
pop
jb
add
das
imul
pop
aad
stos
or
pop
popa
nop
lods
xchg
je
bound
mov
push
xor
imul
and
add
mov
fidivrl
cmpsb
stos
movsb
test
jbe
xchg
popa
pop
push
mov
enter
repz
fadd
pop
or
push
add
xchg
lock
inc
jmp
je
repz
cltd
sub
xchg
mov
mov
xchg
jns
imul
movsb
outsb
les
cs
mov
cmpsl
jecxz
and
pop
shlb
scas
mov
xchg
xor
hlt
lods
xor
cmp
or
dec
sbb
xor
cmc
adc
call
out
shll
ljmp
in
mov
loopne
stc
sahf
xor
lret
adc
mov
in
xchg
clc
popl
pop
repnz
scas
mov
cmp
cmc
into
fcoms
xor
stc
icebp
sbb
pop
mov
and
mov
mov
jne
jno
in
mov
jno
imul
aas
fwait
das
mov
call
lods
xchg
xor
lods
repnz
test
sub
sti
xchg
mov
push
push
jmp
push
fidivl
mov
test
sub
je
pop
test
test
jns
pop
in
and
jns
add
mov
popf
leave
fwait
icebp
sbb
in
cmpsl
sbb
lcall
mov
sub
xchg
dec
jb
xchg
ss
sub
push
test
sbb
mov
push
xchg
xor
inc
les
movsl
adc
jnp
mov
imul
test
pop
mov
ror
push
cli
dec
dec
xor
jl
xchg
add
clc
ret
mov
or
push
xor
lods
jg
imull
int
outsb
fisttpl
movsb
bound
pop
bound
xor
mov
mov
aaa
lods
rorb
in
outsl
int3
adc
rcrl
aas
aam
mov
movsb
aas
cli
mov
aas
andl
mov
test
aas
mov
pop
mov
push
popa
xor
pop
int3
int
inc
xchg
vmread
adc
mov
mov
mov
shrl
jl
out
in
xchg
xchg
imul
bound
mov
enter
je
jg
sub
mov
lcall
jg
je
pop
enter
pop
loopne
scas
pusha
push
mov
out
sbb
dec
mov
enter
je
push
add
ret
enter
xor
xchg
hlt
outsl
notl
or
scas
pop
bound
test
repz
jne
sub
mov
xchg
enter
sahf
inc
pop
jo
adc
mov
shr
mov
xor
lret
aam
xchg
xchg
pop
pop
or
mov
scas
sub
aam
and
ljmp
xor
movsb
adc
movsb
fsubrs
movsb
das
jo
xchg
push
lods
cbtw
bound
stos
lock
enter
in
jae
stos
xchg
adc
pop
xor
pushf
cmp
mov
int3
xchg
push
insl
dec
jg
mov
push
stos
pop
cmp
jp
lods
cs
insb
aas
inc
test
xor
cld
jl
stos
lretw
sti
and
xchg
adc
aas
push
mov
xchg
ljmp
dec
xchg
test
adc
mov
sbb
and
clc
js
std
mov
inc
pushf
mov
aas
js
int
into
xchg
adc
in
ljmp
movsb
mov
js
insb
push
mov
outsl
cs
xlat
fwait
shrl
jbe
pop
xor
mov
test
daa
xchg
mov
add
xor
rorb
xchg
mov
jmp
sub
daa
lea
movsl
sub
mov
cmpsl
xor
push
cmp
or
insl
sahf
loope
jle
inc
lahf
movsl
xor
divb
stos
xchg
sub
lret
inc
xchg
mov
push
sbb
mov
sub
int
xorb
mov
push
loopne
das
xchg
bound
insb
inc
in
int
ja
call
jnp
les
xor
movsb
mov
test
sub
mov
in
pop
lcall
add
sahf
mov
cltd
movsl
xor
cmpsl
ficompl
movsb
adc
movsb
xor
loop
movsb
mov
add
and
mov
shlb
fwait
cmp
fs
nop
test
das
pop
or
mov
cmp
push
nop
mov
js
daa
clc
xchg
mov
or
jb
lock
mov
stos
xor
xor
push
xorb
scas
jbe
cwtl
pop
mov
mov
imul
inc
imul
das
int
loop
jo
jo
loope
jecxz
dec
jmp
xchg
push
aas
inc
sbbl
push
xor
jle
xchg
data16
add
xchg
mov
js
jecxz
mov
imull
adc
bound
clc
sub
push
sub
xchg
dec
and
adc
inc
cld
repnz
or
xor
sub
fsubl
js
dec
mov
dec
sbb
stos
jo
ret
cwtl
inc
inc
scas
fldcw
cmp
and
pop
adc
daa
sub
pushf
push
fs
pop
cwtl
sub
cwtl
inc
shlb
mov
push
mov
loop
mov
fwait
lods
aaa
jg
xchg
cmpsb
push
setb
into
or
jg
idivb
mov
arpl
cld
daa
xor
mov
and
mov
and
push
out
shl
sub
pushf
pop
arpl
sbb
jb
jbe
xor
js
jae
push
mov
mov
ss
or
jecxz
xlat
mov
pmaxub
add
mov
jns
rcll
pop
out
mov
pop
add
cld
and
cmp
mov
dec
fistpl
iret
cwtl
jmp
xchg
mov
pop
int3
pop
rcr
dec
push
aas
lahf
cld
out
jl
fstl
sti
xor
cmp
testl
jp
inc
cmpsl
dec
movsl
out
cld
test
xor
xchg
subl
mov
inc
jbe
sbb
pop
movsb
shrb
fs
xor
pop
pop
mov
das
fnstcw
movsl
gs
arpl
xchg
inc
cmp
movsl
movsl
sub
popa
push
and
nop
adc
ret
sbb
xchg
and
mov
cld
shl
aad
push
jbe
jmp
repz
pop
mov
cmpsl
adc
test
sub
lcall
repnz
mov
cmpsl
pushf
fwait
popf
mov
hlt
ljmp
mull
jb
push
push
push
stc
sub
mov
pop
pop
adc
movsb
test
cli
outsb
jo
cltd
pusha
aas
xchg
xchg
or
ja
test
sbb
adc
aaa
rcll
sub
daa
or
outsl
loope
or
pop
int3
stc
push
and
pop
pop
sub
test
mov
lret
aam
aas
sahf
pop
pop
mov
jo
mov
clc
and
pusha
out
decb
add
das
xchg
movsb
cmpsl
repz
pop
nop
cmp
lea
mov
pop
mov
xchg
repnz
jecxz
rcrl
stos
mov
xor
popa
and
fimuls
test
adcb
stc
pop
int3
mov
push
icebp
adc
dec
cmp
push
hlt
loopne
in
or
in
ja
xor
pop
fs
lock
pop
out
xor
icebp
mov
out
in
aas
scas
dec
mov
int3
sahf
sbb
gs
nop
cmp
out
mov
push
push
lds
xchg
mov
mov
sbb
push
xchg
bound
dec
add
insl
xchg
rclb
add
out
out
xchg
add
mov
xor
xor
mov
lds
fwait
mov
dec
mov
movsl
divb
test
lret
fstpt
xchg
ret
xchg
mov
das
jmp
dec
mov
andb
fimuls
cmc
inc
mov
fisttps
fwait
xchg
int
cwtl
sbb
fisubs
mov
and
bound
mov
repnz
mov
pushf
lea
nop
xchg
repz
push
xchg
xchg
xchg
jl
adc
bound
arpl
mov
les
xchg
mov
mov
mov
hlt
das
xchg
push
imull
and
pop
out
sbb
insb
fwait
addr16
clc
mov
mov
bound
mov
and
pop
movl
xchg
dec
xor
cmp
xchg
push
adc
dec
mov
sbbb
stos
mov
lock
es
outsl
lods
cmp
adc
xor
xchg
push
arpl
mov
or
call
sub
xor
lahf
mov
mov
jl
insb
adc
std
fwait
dec
int3
fs
ds
into
mov
js
cltd
xchg
popf
clc
adc
mov
xor
stos
arpl
mov
jns
mov
mov
clc
and
bound
jo
hlt
mov
xchg
cmp
ss
jge
add
arpl
ljmp
mov
lock
ret
icebp
push
jbe
pop
loope
mov
cmp
cs
repnz
jle
test
out
sub
cs
adc
xchg
cld
bound
sub
lods
lret
fsubrl
fsubrp
out
sub
je
lock
push
xchg
xchg
pop
sbb
insb
jl
push
dec
test
imul
out
push
mov
or
hlt
scas
lret
xor
ror
sbb
jle
mov
mov
ljmp
jle
mov
retw
pop
add
and
insb
mov
add
mov
scas
ret
aad
jle
mov
mov
add
mov
shrb
jle
mov
lret
jae
adc
mov
lock
insl
jle
mov
mov
mov
jb
xchg
mov
and
pop
add
mov
push
xchg
cmp
mov
push
sbb
pop
mov
or
jle
jno
mov
mov
xchg
jbe
mov
xor
mov
cmp
sub
clc
xor
jmp
out
mov
xchg
mov
mov
iret
insb
mov
mov
push
je
sahf
sbb
mov
out
xor
adc
inc
ret
sti
outsl
je
jecxz
mov
aas
cmp
mov
add
or
sbb
loope
dec
push
cld
daa
jmp
std
cs
insl
push
push
pop
mov
shlb
outsb
sub
mov
shlb
imul
invd
jb
push
dec
push
mov
lret
add
out
jl
jno
push
and
jae
push
sub
and
mov
fildll
xchg
jmp
xchg
fs
and
arpl
push
xchg
mov
ja
sub
popa
fs
cwtl
add
xchg
sahf
xchg
call
arpl
repnz
push
in
shll
lods
push
xchg
fs
scas
scas
aas
data16
rorb
enter
mov
and
je
mov
xchg
test
cld
lods
and
ljmp
and
cmc
sbb
jecxz
repz
xor
stos
pop
pop
push
add
sti
mov
in
test
test
das
sub
shlb
xor
shl
cmp
lods
lods
and
js
dec
aas
cld
rclb
push
jmp
in
je
dec
mov
inc
ficoms
imulb
dec
xor
jle
test
rcll
shll
in
xor
aad
xor
pop
sub
sahf
adc
in
dec
inc
and
adc
xchg
or
test
mov
sub
add
outsl
movsl
fistl
je
in
pop
mov
and
sbb
lea
pop
js
push
fs
test
pop
push
pop
adcl
push
lods
outsl
dec
xchg
pop
dec
mov
int
cld
in
sbb
inc
adc
cmp
outsl
cmp
xor
dec
sub
fwait
sub
mov
je
add
test
adc
hlt
adc
sbb
xchg
sbb
xchg
sbb
xchg
and
lea
adc
sbb
xchg
dec
fsubrs
add
rclb
dec
pop
mov
xchg
lods
testb
int3
sub
ljmp
shlb
sub
outsl
movsb
das
mov
mov
cwtl
sub
out
jb
mov
insb
sbb
sub
js
repnz
cltd
leave
daa
inc
mov
push
scas
xchg
pusha
sbb
sub
inc
xchg
mov
je
xor
incb
pushf
mov
mov
call
xchg
cmp
sub
and
mov
xchg
pop
in
or
mov
xchg
popl
mov
xor
sub
xor
test
cmc
fldl
lock
jb
icebp
int3
or
outsb
clc
inc
outsb
les
sbb
jno
pop
int3
add
icebp
mov
decl
cld
xchg
dec
mov
xchg
leave
and
mov
imul
rolb
xor
lret
mov
movsb
sub
xorb
lods
scas
shlb
out
repz
sub
fs
int3
cs
mov
sub
movsl
xchg
test
sbb
jecxz
cmp
xchg
inc
add
sub
repz
mov
shll
subb
inc
jmp
jno
push
loop
pop
sbb
mov
test
pop
rclb
cltd
cmp
sub
scas
pushf
js
lcall
xor
pop
cs
lds
cmp
repz
sahf
data16
xorb
bound
andb
sbbb
pop
andb
mov
or
and
in
sbb
jae
and
insb
into
inc
mov
push
sahf
mov
pop
lahf
lock
mov
xor
inc
mov
jg
mov
mov
mov
dec
test
mov
xchg
clc
mov
mov
test
scas
dec
sub
jo
stos
jae
mov
and
and
sub
lahf
fisubrl
mull
lcall
mov
cld
movlps
cmp
or
mov
mov
or
and
sahf
les
lea
insb
arpl
int3
lahf
outsl
pop
test
cmp
pop
jo
data16
mov
inc
popa
mov
xor
insb
aas
rcrl
xchg
cmpb
into
test
inc
repnz
and
pop
cld
stos
mov
add
dec
mov
dec
nop
add
movsb
jae
or
mov
lock
xchg
jmp
inc
test
cwtl
lea
popa
mov
leave
pop
cmp
sbb
mov
int3
cwtl
mov
xchg
xchg
dec
xor
arpl
mov
das
int3
bound
jbe
in
mov
test
mov
jmp
mov
rol
mov
popf
divb
adc
repz
pop
lret
pop
loope
pushf
mov
repz
pushf
or
sub
xchg
or
xchg
or
movsb
and
xor
dec
rolb
pop
jb
push
xor
int3
fisubl
rorb
fistpll
insb
daa
pusha
cmc
adc
xchg
jno
jo
cld
pop
stos
pop
js
jecxz
pop
mov
sahf
fs
lods
xor
sbb
cmpsb
scas
gs
xor
lods
push
fs
pop
leave
jg
pusha
insb
imul
int
jnp
sbb
pop
jne
pop
fmul
fwait
mov
lods
xchg
fmull
sahf
pushf
sub
adc
pop
jns
push
pop
mov
inc
icebp
iret
adc
pop
mov
mov
scas
int
mov
inc
xor
pusha
xlat
loop
sub
fimull
test
nop
mov
test
mov
inc
xchg
inc
adc
pop
push
push
adc
xorb
jb
stos
push
mov
outsl
mov
hlt
js
mov
pop
fstpl
dec
shl
push
dec
out
mov
addb
push
mov
xchg
cmp
je
ja
cmp
jmp
inc
sti
gs
enter
hlt
adc
cmp
lahf
mov
sahf
xor
pop
movsb
stos
dec
mov
push
in
jno
add
outsb
mov
test
rcr
push
jae
orb
vcvtsi2sdl
xchg
mov
mov
xor
js
mov
cmp
or
arpl
mov
pop
add
stos
inc
sub
pop
jo
xchg
clc
mov
outsb
pop
cmp
filds
fisubl
add
or
pop
mov
sbb
cs
fs
sahf
pusha
int3
jg
repnz
addr16
cwtl
test
addr16
imulb
xchg
mov
adcb
jo
lret
or
xchg
das
sub
js
sbb
push
add
les
push
lock
gs
sub
mov
leave
jo
mov
push
movsl
pushf
mov
outsb
push
mov
cld
mov
iret
and
icebp
add
xchg
pop
cld
test
int3
jle
stos
outsl
dec
or
pop
movsb
mov
sub
mov
xchg
sub
movsl
dec
cmpsb
int3
jecxz
xchg
mov
xchg
rorl
or
test
pop
gs
fcoml
pushf
push
or
daa
xchg
xchg
push
movsb
repnz
add
pop
daa
hlt
push
loopne
cwtl
mov
push
fldt
xchg
in
shl
data16
test
adc
and
stos
xchg
imul
dec
pop
fcomp
jmp
loop
inc
scas
inc
add
and
pop
mov
mov
jmp
xchg
push
jb
sub
daa
jae
cwtl
loopne
popf
push
in
fcmovnu
stc
xchg
pushf
push
xchg
pusha
xor
int3
mov
lods
fwait
inc
sbb
imul
lods
push
push
xor
mov
dec
push
mov
xchg
addr16
mov
xorl
dec
je
push
mov
pushf
push
leave
leave
mov
dec
push
loop
adc
xchg
les
mov
cmp
sarl
ljmp
adc
cmp
insb
scas
imul
arpl
push
loop
xchg
mov
arpl
sbb
cld
insb
and
pop
movsl
out
jae
loop
mov
jle
and
inc
dec
iret
inc
stos
arpl
scas
mov
int3
pop
mov
fidivrs
inc
push
cmp
scas
in
ljmp
sbb
and
test
call
pop
inc
add
out
fwait
push
lods
xorb
test
loop
pop
leave
jnp
mov
lds
mov
repnz
mov
in
xor
loope
or
lods
movsb
inc
xchg
popf
scas
cmpsl
mov
popf
dec
adc
cmpsb
mov
mov
out
add
sbbb
inc
adc
icebp
mov
dec
lods
adc
xor
mov
inc
test
jecxz
cmpsl
xchg
xor
sbb
inc
xor
stos
pushf
int3
pusha
testb
pop
outsb
or
xor
pop
dec
scas
int3
nop
das
mov
cmpsl
ljmp
and
loop
imul
loop
pop
pop
jno
fwait
push
xchg
pusha
nop
and
movb
and
pop
bound
mov
aad
xchg
mov
fbld
stc
dec
cmp
jecxz
leave
jmp
loop
push
push
adc
test
lods
xchg
out
int3
and
xor
pandn
mov
add
dec
pop
movsb
fstpt
adc
xor
xor
xchg
cmp
mov
or
xchg
repnz
outsl
mov
xchg
pop
or
filds
stos
and
xchg
xor
loope
aam
imul
out
adc
cmp
lods
pop
cmp
stos
outsb
pop
mov
sub
mov
in
outsl
fs
sbb
mov
lods
insl
lcall
mov
jae
add
jecxz
stos
add
sbb
xchg
jbe
sahf
and
aaa
jnp
mov
push
push
mov
push
push
in
stos
mov
lods
stos
bound
sbb
jl
mov
push
scas
jl
in
xchg
and
aam
insb
and
xchg
push
scas
lea
hlt
nop
sahf
pop
shll
rolb
and
fwait
ja
push
mov
adc
and
popa
xchg
jae
mov
sti
mov
jbe
jnp
jo
add
imul
aad
dec
test
pop
mov
cmpsl
cmp
test
pop
sub
adc
dec
cltd
out
andb
cmp
push
jno
jo
jae
or
add
mov
bound
or
pop
lods
add
pop
mul
movsb
push
and
sub
add
mov
lock
daa
clc
push
mov
mov
mov
imul
ret
sbb
aas
pusha
arpl
xchg
sahf
outsl
mov
jle
xchg
mov
pop
fs
mov
jge
cmpsl
push
ja
xchg
jg
sbb
stos
rcll
pop
imul
mov
xor
mov
popf
and
push
mov
pop
mov
jae
mov
out
repz
repz
push
out
mov
xchg
fsubp
repz
push
scas
movsb
test
shrb
test
fildll
leave
xor
pop
bnd
mov
and
sub
mov
test
dec
int
adc
xchg
xor
lock
and
sub
mov
je
loop
mov
sub
aas
ret
sti
xor
insb
add
inc
scas
lds
mov
mov
stc
jnp
cld
push
bound
fs
pop
dec
insb
addr16
js
int3
sub
jne
xlat
mov
add
jp
jno
popf
imul
sbb
sub
out
adc
imul
push
mov
push
shr
lahf
je
xor
je
sub
push
inc
xchg
lcall
mov
les
lret
mov
ljmp
fstps
sub
push
das
aaa
mov
bound
leave
dec
dec
sub
scas
or
dec
inc
mov
and
mov
xchg
push
imul
popf
mov
scas
gs
test
lahf
lods
aas
imul
leave
or
aam
mov
xchg
popf
fwait
sub
dec
xchg
das
add
and
test
jbe
daa
push
mov
xor
ficomps
shr
clc
mov
sbb
sub
or
sbb
mov
jl
mov
mov
loope
sbb
fs
mov
jg
stc
xlat
push
movlps
xlat
mov
insl
or
call
loope
jl
ret
adc
je
les
mov
cs
aas
push
sbb
pop
das
cmpsb
sub
stos
mov
ficomps
test
mov
pop
xchg
lock
mov
call
outsb
ja
popa
mull
mov
stos
repz
push
mov
push
push
adc
test
ret
mov
lret
inc
mov
insl
imull
outsb
dec
arpl
divb
push
test
push
lods
adc
cwtl
outsl
mov
into
push
sub
dec
xor
imul
mov
push
xor
mov
mov
xchg
mov
rclb
mov
xchg
das
dec
addb
arpl
sbb
imul
xchg
cwtl
pop
mov
outsb
xchg
ljmp
and
das
stos
xor
and
and
push
xchg
and
jmp
popf
aas
scas
test
lret
shrb
push
stc
iret
mov
stos
jns
stc
push
outsl
inc
ss
push
push
gs
mov
arpl
shlb
test
stos
jns
test
leave
pop
and
ljmp
int3
stos
and
or
mov
pop
jns
sub
nop
aaa
jae
jmp
mov
or
sbb
pop
mov
fnstenv
dec
dec
push
fs
int3
lret
rorl
fwait
mov
rcr
cmc
jo
mov
movsb
pushf
cmp
push
jns
push
insb
inc
inc
das
js
call
dec
popa
xlat
push
mov
fsubrl
fwait
mov
mov
data16
xchg
xor
jecxz
xor
scas
and
fs
inc
inc
outsb
push
xchg
popa
fildll
sbb
pop
mull
pop
imul
sti
nop
repnz
sub
lret
xor
ror
or
clc
in
jno
sahf
xorl
sub
leave
jae
daa
push
lret
sar
fiadds
sub
bound
aam
mov
int3
mov
test
out
xchg
jns
pop
lcall
lret
jb
fstpl
push
jnp
sbb
cmp
push
dec
and
jl
pop
cmpsl
lret
jp
enter
data16
jb
mov
xchg
out
sbb
fsubr
in
clc
leave
loop
test
sub
mov
lret
pushf
in
mov
movsl
xor
cmp
mov
mov
sahf
jnp
inc
mov
in
ss
dec
into
aaa
rcrl
adc
out
jne
daa
push
inc
loopne
dec
out
nop
stos
xchg
pusha
lret
cld
mov
pop
and
mov
jae
sub
push
js
lods
xor
data16
js
repnz
fs
aas
fsubrl
xor
jle,pt
xchg
cs
jl
sbb
cmp
rorb
aas
arpl
js
pop
push
jle
les
jns
leave
daa
andb
dec
out
mov
subb
mov
and
mov
dec
es
fisubl
arpl
xchg
pop
outsb
sub
mov
pop
mov
push
sbbb
std
dec
aam
outsb
mov
cmp
push
or
jns
mov
les
xchg
das
xchg
jmp
or
lds
lret
mov
push
jl
stos
mov
add
xchg
xchg
mov
sub
movsb
inc
xchg
dec
lods
dec
jge
sysexit
cmpsb
cmp
shrb
aas
in
push
jno
fwait
rcrb
push
add
jae
es
sub
xor
xchg
adc
ds
lcall
bound
stos
xor
inc
xchg
mov
test
lcall
dec
push
xor
xchg
adc
aad
or
inc
and
mov
push
sub
xor
movsl
cs
xchg
call
int3
les
mov
aaa
cwtl
mov
xchg
sub
test
add
pop
fimull
lret
xchg
adc
xchg
lock
fdivrs
popl
nop
push
mov
adc
cmp
push
and
dec
pop
shll
jb
ficompl
mov
inc
shrl
movsb
inc
sub
or
pop
cmp
int3
sbb
xchg
add
xchg
cmpb
or
dec
stos
dec
test
pop
dec
and
dec
sub
add
daa
out
dec
mov
idivl
pop
fadds
enter
jb
lahf
int3
lahf
sbb
or
mov
std
push
rorb
jb
or
mov
adc
movsb
mov
jno
rcrb
lock
xor
dec
mov
pop
inc
lods
test
arpl
cltd
loop
iret
push
inc
enter
imul
or
mov
stos
daa
mov
cwtl
xchg
mov
sub
push
mov
sub
test
es
rcll
test
sbb
lret
out
adc
push
push
mov
jne
sbb
in
xchg
push
sbb
push
js
jo
push
push
test
jmp
lods
scas
cwtl
leave
cmpsl
cli
xor
mov
dec
jmp
pop
fs
jne
test
popa
sub
aaa
test
cld
arpl
adc
int3
xor
pop
dec
aam
in
ret
out
lret
add
cwtl
mov
lds
mov
adc
mov
lret
jns
push
cwtl
pop
roll
jne
popf
int3
jle
push
and
std
xchg
dec
das
inc
bndldx
sub
mov
xchg
pop
fs
int3
xor
adc
xor
dec
lods
xchg
aas
test
push
push
loop
mov
ret
inc
mov
test
movsb
push
mov
insb
pop
sahf
rcrb
cmp
and
pop
pop
fwait
push
lods
push
and
test
adc
sub
in
lds
and
mov
pop
test
dec
unpckhps
imul
enter
scas
mov
cs
fwait
divb
iret
mov
sub
fsubp
test
mov
inc
adc
mov
and
sbbl
lods
mov
sub
iret
sahf
js
int3
push
add
int3
dec
dec
xchg
add
movsb
inc
imul
mov
les
cltd
xlat
out
decb
daa
mov
xchg
xchg
bound
and
sub
xor
add
sub
cmp
xchg
daa
jns
xor
int3
mov
in
je
jge
movsb
aad
push
mov
outsb
or
xchg
std
push
shl
int3
add
ja
je
mov
dec
lret
pop
movsb
add
jb
pop
push
rolb
in
mov
pop
stos
xchg
mov
mov
ss
mov
fwait
je
mov
mov
lcall
mov
clc
cmc
jnp
mov
mov
test
lea
pop
push
pushf
xlat
lcall
adc
cld
sub
push
pop
loop
loopne
jmp
test
cmc
cwtl
test
fs
inc
push
insb
in
repnz
cmc
imul
dec
dec
loope
xor
pop
add
loop
pusha
movsb
mov
push
insl
mov
bound
or
mov
in
add
dec
test
data16
aad
push
lods
idivb
mov
bound
and
mov
std
shll
mov
popa
daa
pop
mov
pop
leave
rclb
push
outsl
add
xchg
fidivrl
fdiv
repz
fs
push
lock
arpl
or
out
push
imul
jo
or
fisubrs
scas
jp
pop
mov
dec
xchg
push
popf
xchg
mov
xor
repnz
pop
push
sahf
sub
loop
pop
push
push
sbb
xchg
ss
add
xor
mov
mov
inc
aam
ss
popa
jbe
xlat
cmp
ret
inc
xchg
mov
les
mov
dec
lret
in
add
iret
pop
push
push
pop
lcall
in
fldl
repz
je
xor
nop
sub
inc
clc
mov
jb
jmp
cmp
pop
or
mov
or
push
mov
sbb
ds
mov
lock
loopne
gs
adc
xchg
or
inc
xchg
pop
xchg
xchg
dec
data16
xlat
sbb
jecxz
lahf
pop
push
inc
fistps
addr16
sub
insb
das
insb
in
scas
int3
mov
mov
lcall
das
ja
mov
int3
popl
bound
lds
xor
mov
jns
xchg
push
clc
inc
jg
dec
adcl
dec
ficoms
jecxz
nop
push
mov
ret
or
mov
xchg
cmp
rorl
sbb
and
out
adc
xlat
mov
add
je
imul
jl
and
sti
mov
pop
enter
cmp
sub
fisttps
mov
sub
in
mov
jo
cld
pop
arpl
mov
rcr
push
and
movsl
sub
adc
in
cmc
test
stos
enter
decl
loopne
das
pop
cmc
outsb
lret
xchg
gs
jb
or
sbb
sbb
pop
mov
push
arpl
call
into
dec
and
push
into
je
cmp
pop
mov
and
cmpsl
fdivr
ror
jl
xchg
out
out
xor
sahf
jg
js
je
xor
mov
push
stc
lock
sarb
jmp
test
divb
and
mov
jns
or
adc
int3
pushl
xchg
jl
pop
arpl
push
cmp
test
fadd
xchg
pushf
mov
sub
pop
shll
jb
ret
aaa
sbb
add
mov
int3
mov
int
sub
lods
lds
mov
or
pop
xchg
xchg
push
jl
js
and
int
test
adc
add
sarl
xchg
inc
jl
aam
or
ret
inc
and
mov
js
jb
xlat
pop
xchg
mulb
push
iret
sub
dec
push
mov
pop
ret
mov
cmp
test
mov
arpl
mov
lahf
cmp
push
mov
filds
loopne
dec
pop
stos
mov
int3
movsb
outsb
fwait
popa
push
cmp
pusha
pop
in
cld
repnz
mov
clc
jbe
aaa
out
pop
call
shlb
je
jns
out
aas
lea
and
xor
inc
pusha
xchg
lock
rcrb
in
scas
ja
scas
lret
dec
xchg
bswap
fs
push
dec
jge
hlt
push
hlt
fisubs
mov
mov
jbe
test
sbb
outsb
cmp
push
ljmp
mov
aam
sbb
and
mov
jo
fsub
push
push
cwtl
mov
xor
cmp
pop
cli
inc
or
dec
xchg
xchg
scas
lds
pop
stos
xor
inc
push
push
sub
adc
mov
mov
addr16
out
movsb
cmp
cmp
sub
xchg
lods
jo
repnz
mov
sbb
adc
mov
jg
pusha
inc
mov
jae
das
mov
int3
fcomp
cmpb
mov
push
in
jnp,pn
jnp
cmp
mov
mov
scas
insb
xor
mov
jmp
mov
lahf
mov
jns
inc
dec
sub
cmc
hlt
divl
out
mov
mov
fs
mov
les
movl
mov
push
inc
in
pop
mov
test
mov
pushf
insb
scas
movsb
pop
imul
or
pop
jecxz
ljmp
xchg
xor
cmp
pop
daa
data16
insb
dec
pusha
pop
push
stos
adc
lods
adc
sbb
je
mov
cmc
inc
les
cmp
movsb
sub
stc
pop
inc
mov
fs
ss
aam
outsb
roll
xchg
stc
jp
mov
add
movsl
sub
insl
lods
jo
jbe
in
ljmp
in
mov
cwtl
daa
pop
fisubl
fstl
cmp
xlat
and
daa
mov
mov
inc
and
jle
mov
lret
mov
outsb
mov
bound
mov
cmp
in
mov
or
mov
sub
lods
pop
aad
inc
lcall
fwait
mov
test
mov
xchg
xchg
and
cld
mov
mov
subb
xor
mov
push
mov
lods
cmp
divl
inc
jecxz
daa
xor
divl
in
cmp
push
xchg
lds
imul
repz
je
out
xor
pop
jns
pop
push
pop
rcll
imul
mov
test
lods
and
mov
pop
push
pop
pop
jo
mov
adc
mov
aas
and
test
sahf
test
inc
jnp
adc
stos
inc
movsl
sbb
subl
jle,pt
pop
out
jge
js
movsb
cs
leave
stos
fidivs
jp
fdivp
divl
pop
cmpsb
popa
sahf
or
pushl
cmp
loope
outsl
inc
sub
loopne
cmpsl
jo
add
fcoml
or
adcb
and
outsl
cmpsb
jo
stos
jb
aam
inc
int3
mov
ror
adc
xchg
out
int3
cmp
daa
xor
leave
mov
dec
das
pop
mov
aas
imul
pushf
arpl
int3
in
stos
adc
test
cmpl
jb
ss
mov
bound
outsb
stos
and
out
je
ljmp
lret
xor
fmuls
mov
inc
xchg
dec
inc
subb
movsb
xchg
sbb
insb
sub
adc
xor
push
lret
into
mov
jne
lods
das
mov
roll
mov
xchg
test
push
lods
js
ds
pop
lods
popf
daa
cmp
mov
sahf
dec
cld
es
aam
push
js
jo
push
sbb
sub
xor
xchg
jb
sub
mov
fwait
xchg
jmp
cmp
cwtl
sbb
ljmp
in
jae
adc
pop
and
loopne
ret
jmp
mov
clc
das
test
mov
push
int3
sbb
jle
xlat
subb
aaa
test
push
int3
dec
pop
mov
int3
jb
dec
jge
mov
and
in
stos
fsubrs
fbld
inc
jp
push
push
pop
aas
cmp
notb
mov
subl
add
data16
jg
out
cmpsb
mov
or
imul
mov
stos
jmp
and
push
insl
adc
dec
mov
jg
dec
das
jg
clc
mov
pop
xchg
cbtw
push
outsl
fisubs
jae
inc
imul
cmpl
lcall
mov
push
lret
add
inc
mov
pop
cmp
push
lods
cmp
or
arpl
sti
mov
lds
test
or
pop
ret
pusha
jbe
loop
ret
cli
adc
notl
or
push
add
lods
jno
push
jl
jmp
jmp
jo
and
test
mov
roll
std
push
subb
bound
jecxz
pushf
lea
push
ret
adc
test
stc
adc
pop
int3
movsb
pop
xchg
hlt
mov
push
subl
adc
push
pushf
add
in
scas
jo
lock
fimuls
adc
xchg
dec
mov
enter
data16
push
hlt
icebp
and
cmc
mov
movsb
xor
and
mov
jo
push
clc
push
shll
dec
push
jmp
mov
xchg
push
xor
and
insb
fs
outsl
ficoml
pop
add
jecxz
xchg
push
sub
les
and
mov
insb
dec
and
push
sub
mov
addb
jb
ret
pop
fs
sahf
int3
mov
ss
pop
lcall
and
push
push
int3
out
jns
mov
subl
pop
ds
out
or
lea
add
or
nop
and
cmp
insl
and
xor
ljmp
gs
dec
lcall
data16
in
mov
pop
cli
push
in
int3
adc
and
or
mov
push
xorl
push
inc
xchg
mov
inc
pop
stos
xor
dec
jb
popf
dec
jmp
test
shll
mov
add
popf
push
mov
data16
cmc
jo
ret
loop
xor
mov
jo
sub
jae
je
lahf
loop
xor
cmp
js
or
push
push
jnp
not
inc
mov
imul
add
xor
push
scas
sub
cmp
adc
in
or
enter
mov
mov
pop
pop
sbb
mov
cltd
pop
insb
add
mull
stc
push
mov
movsb
aad
leave
adc
jb
pop
scas
dec
push
cmc
iret
jle
xor
push
fcoms
jnp
push
cmc
mov
fwait
dec
dec
jo
test
xchg
dec
mov
stos
out
aam
xchg
inc
outsl
jo
pushf
jle
scas
lret
mov
adc
call
in
stos
insb
mov
dec
mov
xchg
push
into
nop
ss
cmp
inc
push
mov
faddp
fst
xlat
and
je
cwtl
or
dec
fwait
pop
jecxz
sub
leave
imul
pusha
mov
sbb
add
dec
daa
xchg
test
cmc
fimuls
addr16
das
add
fistpll
xchg
shlb
sub
in
sahf
mov
out
mov
fwait
imul
mov
and
pop
mov
cmp
iret
mov
popf
mov
mov
mov
loope
sub
daa
mov
jns
adc
stos
add
cwtl
cwtl
push
xchg
mov
sub
and
repnz
insl
pushf
mov
iret
cltd
xchg
cltd
cld
pop
jb
lret
repz
roll
movsl
xor
xchg
jns
lcall
insl
xchg
testl
mov
xchg
push
test
mov
movsb
sub
stc
jl
outsb
or
pop
jmp
push
mov
or
aam
js
inc
xchg
jb
leave
and
adc
lahf
imul
sbb
mov
int3
subb
xlat
mov
cli
xchg
subb
inc
xchg
mov
mov
dec
test
inc
lea
mov
pushf
mov
xor
xorb
add
mov
add
notb
je
jmp
fwait
ret
pushf
fwait
movsl
mov
jno
add
mov
add
fcomps
sbb
sbb
icebp
xor
pop
add
inc
add
push
jmp
jbe
dec
in
mov
clc
in
adc
por
cli
icebp
pop
mov
movsl
mov
lods
or
pmullw
push
adc
stos
je
mov
outsl
xor
mov
test
xor
inc
push
iret
push
icebp
notl
cmp
aaa
lods
mov
scas
jae
out
mov
cmp
je
push
imul
pop
int
shlb
in
pop
out
hlt
or
roll
jbe
stos
mov
xor
orb
xor
movsb
pop
jg
arpl
pop
dec
jmp
out
push
mov
push
sub
mov
inc
insl
je
jno
cltd
roll
cltd
cmpsb
lock
mov
lds
leave
das
fildll
push
daa
push
dec
cmpb
ss
jmpw
pop
dec
lods
push
lahf
dec
push
aad
add
ss
pop
fs
adc
icebp
and
scas
pop
adc
outsb
lahf
xchg
jl
xor
push
stos
push
lods
sub
pop
push
pop
aad
cmp
and
out
jns
test
adc
xchg
test
test
cld
je
addr16
stos
cld
hlt
movsb
loop
ljmp
pushf
es
xor
outsb
mov
xor
sbbl
sbb
ret
sub
enter
dec
repz
daa
inc
dec
fsubrs
cs
cs
or
enter
scas
pop
mov
jnp
pop
pop
jmp
out
and
mov
insl
push
cmp
xor
adc
sbb
es
add
dec
dec
mov
xchg
stos
sub
rcl
arpl
add
movsb
mov
repz
lcall
adc
dec
insl
mov
push
adcb
loopne
subb
loopne
pusha
and
mov
mov
arpl
in
loop
aas
cli
add
pop
mov
lahf
outsb
inc
push
stos
mov
pop
mov
jbe
jge
icebp
xor
ffreep
int
outsb
pusha
stos
test
sub
mov
subl
inc
addl
mov
repz
dec
mov
push
arpl
shll
lret
mov
idivl
mov
or
adc
sahf
shrb
sub
fldenv
test
adc
mov
fcmovne
xchg
mov
lcall
test
stos
dec
pop
push
fimuls
je
jp
xchg
aam
and
lea
lea
aas
stos
jns
xor
gs
test
mov
fsubr
data16
test
lea
and
lret
sub
cwtl
jns
fs
ss
push
push
and
or
lret
mov
xchg
das
stos
addr16
jb
pop
xor
jns
aam
stos
aad
movsb
out
popa
dec
dec
sbb
mov
xchg
subb
js
loopne
cld
inc
dec
or
pop
and
loop
dec
hlt
ljmp
xor
pop
clc
stos
pop
bound
jge
movsl
lret
mov
inc
sub
daa
add
sub
push
lea
jmp
gs
icebp
int3
xchg
sbb
or
sbb
sarl
and
and
ret
xchg
and
ljmp
ret
rcrb
mov
jbe
push
movsl
and
icebp
test
ja
orl
in
cmp
pop
jb
call
jae
pop
dec
sub
pop
lret
lods
dec
xchg
inc
sbb
fldpi
popf
dec
fldl
add
je
mov
push
dec
incb
xchg
test
mov
rol
jmp
cmp
push
pop
fsubr
xchg
push
adc
and
dec
mov
pushf
movsb
pop
push
movsb
js
push
xchg
jl
stc
movsb
sub
sbb
nop
scas
dec
mov
adc
dec
mov
or
iret
xchg
dec
jge
mov
pop
dec
jo
push
mov
pop
arpl
jg
insb
inc
or
and
shld
gs
arpl
mov
dec
shlb
sbb
pmaddwd
pusha
repnz
aaa
jl
add
fwait
mov
cwtl
int3
sti
sub
mov
or
mov
clc
fildl
sub
sbb
out
test
in
and
pop
push
pop
dec
sahf
inc
lods
rorb
lcall
fisttps
mov
lock
inc
dec
pop
test
fwait
and
mov
scas
int3
fistpl
lods
dec
mov
pop
popf
cmp
or
xor
cltd
test
notl
add
outsl
and
xor
loopne
jb
int3
push
popf
orb
push
xchg
adc
arpl
sti
sbb
mov
lock
insb
mov
sahf
test
int3
adc
cltd
push
movsl
lcall
mov
arpl
pop
xchg
xlat
adc
daa
data16
pushf
mov
out
lock
jno
int3
es
dec
popf
dec
iret
xor
cmpsb
test
sub
push
pop
out
int3
cmp
outsl
dec
je
adc
and
add
jge
fistpl
jb,pt
adc
sbb
add
pop
pusha
into
or
mov
lods
mov
dec
sti
jns
and
jb
mov
mov
adc
movsb
testb
shlb
push
bound
dec
in
add
insb
popa
outsl
ss
inc
addr16
ret
inc
fdivrs
and
aas
jle
lods
shll
or
pushf
mov
test
inc
xchg
aam
mov
loop
shl
xor
ret
mov
adcl
pop
mov
cmpsl
int3
loop
dec
sti
mov
pusha
test
add
push
popf
cwtl
cli
faddl
push
mov
dec
icebp
popa
mov
test
lods
pop
int3
in
ds
popf
hlt
lock
xchg
stos
jecxz
mov
andl
or
pop
push
int3
insl
movsb
rol
jp
stos
in
ret
pop
insl
stc
inc
mov
xor
sub
repnz
sahf
jno
xchg
fldenv
fwait
stos
mov
sbb
inc
xor
andb
adc
pusha
leave
sbbb
pushf
dec
xor
lcall
jnp
mov
fs
jno
arpl
inc
mov
pop
mov
pop
jl
sub
dec
iret
movsb
movb
int3
inc
scas
les
mov
notl
push
imul
mov
out
loop
cmpsl
sbb
out
mov
and
mov
cmc
in
jae
mov
xlat
mov
xor
mov
and
daa
int
mov
pop
ret
cmp
push
icebp
lret
cmp
mov
jno
jnp
test
push
fisttpl
push
jb
sub
and
mov
nop
sbb
inc
mov
das
and
aas
mov
mov
scas
popa
dec
inc
sbb
popf
push
rclb
out
orb
sub
inc
movsb
stos
jns
sti
js
test
stos
enter
sub
movsb
pop
pop
jo
int3
jb
popa
cmc
jl
fldcw
adc
cld
inc
jb
xchg
enter
xchg
pop
pop
test
pop
xchg
dec
add
int3
push
and
sahf
pop
xor
xchg
mov
cmp
lret
ds
push
and
and
add
pusha
push
pop
mov
aad
add
and
inc
je
push
jne
rolb
jae
dec
ret
adc
outsb
jo
cld
les
cltd
hlt
je
mov
int3
sbb
popf
rol
fwait
je
repz
xor
call
sbb
mov
xchg
div
scas
repnz
aas
mov
mov
int3
sub
push
mov
es
jnp
lods
arpl
mov
out
sbb
xchg
insb
int
and
lahf
data16
sbb
xchg
mov
mov
pop
mov
cld
dec
scas
je
lds
arpl
loopne
mov
inc
mov
cld
mov
movsb
movsb
add
cmp
and
int3
fs
sub
clc
pop
lcall
and
push
stos
pop
lods
cwtl
push
jo
jp
or
xor
ja
and
mov
mov
xchg
xor
adc
fsts
lods
dec
push
xchg
leave
mov
icebp
mov
xchg
je
dec
add
xchg
ds
and
xchg
jo
mov
test
inc
jg
pop
cmpsl
addr16
jge
sbb
mov
and
xor
pop
test
scas
je
leave
xchg
sbb
int3
fcoml
push
fs
push
cld
or
inc
pop
stos
xchg
mov
mov
push
jo
pop
dec
test
mov
jecxz
aas
xchg
icebp
lds
in
add
cmc
mov
daa
lret
mov
inc
adc
stos
testb
aad
xchg
mov
stos
loop
sub
es
aam
sbb
movsb
gs
pop
mov
call
jns
inc
shll
sahf
loop
fmul
scas
xor
int3
sbb
mov
cwtl
cwtl
pop
push
and
fs
clc
mov
testl
or
push
pushf
clc
mov
movsb
xor
mov
and
movsl
movsb
xor
or
jno
loop
push
fwait
adc
imul
addr16
movsb
aam
insl
hlt
in
sarb
shr
cmp
and
jbe
shr
mov
jecxz
cmp
fs
enter
arpl
xchg
cmp
mov
aaa
mov
jnp
aas
fsubs
mov
jge
mov
jnp
push
sub
je
mov
ret
nop
jp
adc
lea
fwait
mov
hlt
dec
in
dec
lods
stos
jmp
test
mov
mov
iret
push
ret
adc
mov
mov
fistpl
repnz
pop
popa
ss
mov
cwtl
push
adc
or
lods
sub
aas
scas
repnz
jmp
in
sbb
cmpsl
push
repnz
aas
test
adc
shrl
lcall
cmpsb
insb
stc
mov
cmpsb
push
daa
mov
mov
jbe
xchg
outsl
inc
add
adc
pop
movsb
ss
dec
jo
sub
mov
cmp
mov
aas
lods
test
jns
jno
dec
or
inc
mov
add
xchg
jae
lds
push
mov
negl
pop
jl
fs
and
xchg
movsb
bound
push
xchg
test
dec
xor
movsl
std
jno
or
xchg
mov
xor
sbb
push
repz
mov
xor
test
ret
sub
mov
lods
mov
adc
sub
jmp
dec
push
sbb
mov
pushf
sti
and
mov
mov
xchg
movsb
xchg
sub
mov
pusha
out
leave
movsb
iret
dec
mov
je
jnp
dec
adc
sub
fadds
out
mov
call
popf
pushf
mov
sub
cwtl
sbb
and
test
sbbl
pop
mov
cmp
daa
imul
mov
inc
mov
sbb
mov
addr16
in
dec
test
cmp
inc
mov
imul
scas
lds
xor
in
mov
stos
cs
cwtl
movsl
jge
push
jp
pushf
fldcw
cmpsl
pushf
les
aaa
pushf
mov
aam
movsb
sub
test
push
pushf
pop
mov
xchg
push
jmp
cwtl
xchg
ja
test
xlat
push
fadds
push
push
pop
aad
push
outsl
push
iret
push
popf
mov
mov
mov
lods
xlat
scas
insb
insb
mov
dec
fsubrs
xor
hlt
int3
mov
xor
xlat
cwtl
nop
mov
out
adc
das
jge
lods
xchg
idiv
jns
inc
mov
je
cmp
in
xchg
stos
add
outsb
mov
lods
cmc
add
inc
mov
pop
sub
das
sub
sub
jbe
imul
movsl
mov
movsb
adc
clc
scas
les
sub
scas
outsl
xchg
jb
daa
cmp
xor
dec
xchg
sub
outsl
cmc
and
sbb
lret
subl
scas
ret
jae
xchg
nop
rorb
mov
and
icebp
dec
jns
push
test
lods
jnp
mov
jns
cmpsb
test
xchg
leave
push
outsl
in
inc
and
adc
mov
icebp
aad
insl
add
dec
fdivrs
leave
sub
jns
cmp
repz
movsb
and
icebp
xchg
lds
test
cli
out
and
into
aas
cmp
insb
mov
lods
leave
xchg
aad
int3
clc
xor
mov
les
out
jno
call
imul
fldcw
nop
jp
jns
mov
scas
scas
out
mov
jl
add
mov
test
or
sbb
or
xlat
in
add
lahf
movsb
cmpsb
xor
das
ficoml
andl
xchg
inc
mov
int3
cmp
jo
mov
cmpsb
push
clc
mov
lahf
int
jmp
or
mov
lret
xlat
mov
je
fs
in
cmp
popa
mov
les
jmp
xor
mov
inc
shrb
inc
cmpsb
fwait
mov
mov
subb
aam
stos
mov
lsl
xchg
xchg
jae
mov
roll
movsl
xor
rclb
pusha
xchg
out
outsl
in
xor
dec
sbb
jno
xchg
scas
mov
dec
stos
mov
jb
in
enter
sarl
mov
mov
or
jne
cltd
push
negb
add
es
testl
arpl
xor
test
movsb
xchg
lods
je
push
jae
scas
dec
lods
cli
mov
aas
mov
fmull
in
stos
js
and
mov
add
pushf
push
mov
pop
fcomp
cwtl
xchg
arpl
daa
jle
cmp
dec
das
and
add
mov
aas
cwtl
scas
pushf
mov
lods
movsb
movsb
test
in
popa
mov
repnz
jl
in
popa
leave
jae
divl
ds
incb
mov
push
test
xchg
das
or
pop
jg
jae
mov
fs
xor
inc
lock
jp
addr16
sbb
sbb
xchg
mov
add
xor
adc
xchg
pop
imul
pop
xlat
pop
or
jp
in
daa
in
cltd
cmp
mov
je
add
adcb
stc
pushf
call
je
pop
arpl
mov
out
test
or
xor
test
jbe
push
mov
add
mov
sub
iret
xor
mov
scas
pushf
sbb
call
or
xchg
lods
in
lods
mov
cmc
inc
setp
mov
jnp
mov
lcall
adc
imul
and
adc
aaa
dec
adc
lea
in
scas
add
pop
out
xchg
sub
adc
pop
sbb
in
mov
bound
in
inc
shlb
and
adc
fisubrs
xor
sti
js
jno
rcr
jge
pop
adc
mov
int3
push
inc
push
test
stos
xchg
dec
pop
movsb
mov
mov
int3
add
cltd
mov
xchg
out
lahf
in
je
mov
sub
sub
lock
movsl
push
fs
movsl
cmc
in
pop
movsb
test
push
jae
mov
mov
xchg
jl
jge
test
imul
das
push
iret
orl
je
cmpsb
and
adc
les
out
cmpsb
push
std
icebp
cmp
sbb
jnp
lods
mov
jle
movsb
je
rcrl
std
jns
lock
pop
adc
lods
and
mov
push
outsb
arpl
mov
mov
jns
adc
mov
dec
sbb
shlb
jae
dec
cmp
xchg
mov
mov
dec
pusha
inc
movsb
sub
xor
test
hlt
fwait
dec
test
test
jno,pn
inc
jb
je
in
arpl
or
mov
mov
jg
mov
jle
jge
mov
aas
mov
arpl
push
stos
fstpl
xchg
int3
sub
xchg
test
test
shld
cmp
dec
dec
jb
andb
pop
stos
int3
in
mov
and
sbb
push
mov
xchg
xchg
jno
icebp
lock
xchg
sbb
loopne
mov
lahf
or
cmpsl
and
les
stc
subb
insl
pop
add
popa
jg
cltd
inc
jb
popf
leave
inc
xor
stos
dec
aas
das
push
push
lds
xor
inc
pop
and
dec
test
cmp
mov
xor
pop
sub
or
popa
fists
sub
fidivl
jno
inc
daa
cmp
lss
mov
push
xor
mov
dec
or
pop
hlt
fwait
int3
or
and
pop
lcall
xor
jae
xchg
mov
push
cwtl
mov
sbb
sahf
sahf
adc
mov
jne
jmp
sbb
rclb
xorb
dec
push
in
adc
lret
fdivrl
insl
xchg
sbb
lret
pop
xchg
xor
push
cld
enter
int3
in
js
arpl
les
call
repz
jne
cmp
es
imul
adc
push
shl
nop
movsl
push
push
or
ja
movsl
pop
dec
jge
bound
push
jp
js
xchg
mov
repnz
outsb
out
int3
xor
xor
jbe
jno
lock
xchg
andl
das
and
xor
rorb
frstor
xchg
test
inc
pushf
xor
cmp
ficomps
mov
repnz
pop
das
jmp
ficomps
jmp
dec
dec
mov
mov
aam
mov
pop
rorb
jbe
xchg
mov
add
or
pop
rolb
dec
ljmp
mov
dec
roll
rcrl
pop
andl
mov
jle
call
mov
ds
and
mov
mov
xchg
or
mov
inc
into
aaa
adc
xor
int3
add
imul
lods
sub
leave
mov
cli
xor
xor
cmpsl
outsb
pop
push
sbb
stos
mov
inc
jne
ret
mov
fdivrl
add
ja
push
nop
aas
test
ds
stos
adc
inc
add
movsb
xlat
and
lea
inc
mov
xchg
call
in
jp
outsl
pop
insb
aad
icebp
cld
les
movsb
push
push
and
inc
cs
lock
mov
rep
dec
stos
mov
sub
cmc
mov
js
xor
jo
stos
insb
movsb
adc
outsb
mov
jecxz
fs
cmpsl
scas
mov
xchg
push
add
cmp
xchg
pop
dec
es
mov
mov
or
cmpsb
je
ss
ss
sub
and
int3
outsb
call
test
inc
and
int3
push
jbe
lcall
mov
shll
dec
les
or
data16
mov
lret
outsb
fistpl
pop
cltd
inc
xchg
sub
data16
dec
mov
sbbb
subb
add
mov
js
sub
sahf
insl
cwtl
mov
jb
movsb
push
sbb
ja
sbb
sub
jno
mov
sbb
addb
mov
dec
je
int3
data16
movsb
xor
andl
pop
pop
push
leave
mov
lret
xchg
jle
adc
pop
repz
divl
cltd
adc
mov
insb
rep
lcall
outsb
sbb
scas
dec
mov
mov
fwait
cld
push
push
add
and
imul
mov
inc
mov
inc
addr16
push
xor
mov
jp
and
inc
rorb
add
mov
lods
sbb
adc
xchg
mov
dec
daa
pushf
sub
movsl
ror
and
dec
out
mov
fstpt
lea
or
orb
push
xor
lret
jno
popa
jnp
pushf
dec
mov
sbbl
cmp
int3
stos
dec
pop
fcoml
lret
jbe
sbb
hlt
mov
xor
daa
and
mov
jne
sbb
add
dec
jl
xchg
push
and
repz
sti
cwtl
jo
icebp
data16
jne
xchg
aam
fimuls
test
roll
mov
mov
mov
xchg
sbb
js,pt
out
stos
fwait
je
inc
shr
repnz
and
repnz
data16
sub
mov
test
testl
in
subb
jecxz
mov
mov
repnz
fs
xchg
dec
arpl
pop
mov
aam
push
mov
push
adc
insb
jge
sub
jnp
je
mov
inc
imul
push
test
hlt
ret
sar
addr16
loop
jecxz
cmp
jl
adc
roll
mov
mov
mov
xor
xchg
test
mov
mov
subl
leave
lods
cmp
xchg
scas
sbb
push
mov
loopne
sti
loop
lcall
jnp
mov
jg
mov
xchg
dec
mov
jmp
aas
int
cmpsl
push
test
sub
sti
dec
or
cwtl
int3
mov
arpl
mov
imul
sub
mov
cld
or
lea
pop
xchg
insl
xor
adcl
ja
xchg
cwtl
popa
push
xor
sub
jne
cld
in
sub
mov
mov
sub
call
sub
and
mov
lret
cmp
loopne
xor
mov
pop
mov
xchg
add
fdivrs
test
dec
hlt
xor
gs
jecxz
xor
test
sbb
int3
pop
mov
lea
pop
and
lahf
dec
dec
xchg
cli
lea
fcoms
icebp
gs
mov
mov
pop
sub
fisttpl
dec
pusha
xor
xchg
and
pop
add
inc
mov
sbb
xchg
mov
fcoms
push
mov
mov
cltd
dec
mov
mov
mov
cmp
xor
mov
cmp
je
icebp
sub
and
je
add
cmp
xlat
jns
cwtl
pop
scas
mov
mov
xchg
jg
inc
adc
test
xor
ret
xor
leave
mov
dec
mov
xchg
inc
fs
mov
inc
sbb
mov
adcl
std
mov
xor
leave
iret
xchg
push
push
insl
shll
aad
cmp
xor
mov
test
outsl
cmp
xchg
test
inc
paddusw
loopne
dec
mov
inc
or
movsb
sub
out
popa
fimuls
loope
adc
and
mov
push
xchg
mov
leave
cmp
stos
es
mov
add
in
fadds
mov
inc
cmpsl
add
xorl
sub
js
inc
inc
mov
xchg
jb
xor
sbb
stos
add
xorb
and
jle
push
mov
inc
lods
int3
pop
dec
lods
mov
scas
inc
xor
pop
enter
dec
scas
int3
in
cmc
jb
jle
push
sbb
bound
and
dec
xlat
mov
fcom
sbb
aad
jno
jg
movsl
lcall
push
fisttps
lea
lcall
repnz
int3
xchg
and
je
insb
arpl
and
mov
data16
inc
imul
jl
xor
out
xchg
pushf
and
dec
les
pushf
push
xchg
and
add
bound
ljmp
ja
mov
insb
aas
mov
mov
xchg
pusha
int3
lock
sbb
and
out
std
insb
pop
add
xor
add
hlt
cld
and
cwtl
icebp
notb
cmp
nop
movsl
mov
fistpll
sub
add
loopne
jb
pusha
aaa
push
jmp
adc
push
push
xchg
lods
pop
mov
push
cmp
cld
mov
je
xor
test
pusha
sbb
adc
xchg
push
pop
xchg
clc
test
aas
fwait
movsb
mov
mov
test
mov
push
outsb
mov
pop
add
adc
jb
loope
addr16
mov
mov
outsl
lahf
xchg
mov
add
mov
xchg
in
mov
jb
add
rcl
jnp
cwtl
jecxz
fucomip
mov
inc
and
mov
stos
sbb
or
aam
xor
outsb
fmuls
aaa
add
sub
add
lcall
loope
data16
decb
fs
or
sbb
sub
pushf
shrb
scas
ljmp
push
pop
fs
fdivrl
fldcw
inc
fwait
jo
mov
sbb
nop
int3
xchg
mov
dec
stos
leave
sahf
pusha
int3
mov
gs
sti
arpl
add
adc
cmp
orb
call
sub
cmpsb
lea
repz
gs
ret
or
jmp
dec
sub
dec
shl
dec
test
add
divb
loopne
sti
ret
xchg
sub
cmpsb
mov
and
cmpsl
mov
popf
xchg
outsb
scas
xorl
fcmovnbe
lods
sub
mov
test
insb
loop
scas
dec
xor
mov
and
das
rcll
and
test
lcall
xchg
data16
lock
test
xchg
cmpsb
dec
add
out
push
push
lret
shlb
scas
cmpsl
adc
mov
ficompl
jb
mov
push
inc
xor
test
add
dec
cmp
cmp
daa
mov
add
cmp
mov
aam
lods
test
add
mov
mov
pop
or
addr16
je
arpl
pusha
jp
push
jmp
insl
jns
inc
stos
push
imul
ss
dec
adcb
enter
fmuls
insl
in
cwtl
xchg
out
popa
mov
hlt
imul
inc
mov
stos
lods
lock
rorl
push
dec
push
pop
bswap
jo
repz
mov
mov
pushf
stos
xchg
scas
aas
mov
leave
imul
fadds
lods
jno
test
mov
lods
xchg
mov
xchg
adc
and
mov
popf
mov
mov
sub
shll
lods
xchg
outsb
and
faddp
leave
fldcw
jns
ss
or
mov
mov
add
test
jnp
popa
stos
stos
fcmovnb
rcrb
shrl
int3
addr16
aas
in
ds
cmpsl
jl
and
adc
lret
or
jno
mov
mov
or
sub
push
pop
cmc
orl
sub
sbb
sub
insb
mov
xor
or
and
dec
test
mov
mov
out
das
pop
shlb
lea
pop
and
xchg
mov
fxch
mov
cmc
add
mov
test
and
adc
xchg
test
mov
push
inc
xor
pop
rclb
sahf
int3
cld
mov
addl
pop
out
sbb
test
and
lahf
cmp
lret
out
xchg
test
xchg
mov
ret
xchg
adcb
mov
xchg
repz
adc
jg
jge
jmp
lret
lret
stos
iret
mov
popf
pushf
add
lret
imul
pop
scas
dec
pop
add
adc
cmp
pop
stos
fwait
sub
in
mov
fists
cs
cmpb
xor
xchg
sub
out
test
push
mov
movsb
dec
lea
xor
aad
lods
stos
add
std
inc
sti
pop
in
js
ja
mov
les
in
sahf
test
cmp
stos
lods
cmp
movsl
das
jb,pn
pop
je
andb
jb
clc
pusha
sub
add
xor
fs
dec
imul
mov
pop
lahf
push
jmp
sub
sub
stos
in
nop
xor
adc
push
mov
arpl
mov
xor
xchg
add
mov
and
jbe
and
cmp
jns
push
test
les
ret
and
inc
fwait
lcall
scas
inc
mov
sbb
enter
shlb
dec
test
dec
loop
in
popf
das
insl
mov
jmp
adc
dec
aad
cmc
add
push
gs
andb
xchg
xor
xchg
int3
or
sarb
sub
ljmp
jle
idivl
push
mov
subb
pop
mov
jl
outsl
xchg
mov
sub
ret
cmpsb
leave
repnz
adc
jle
jge
sub
repz
inc
mov
and
rorl
clc
sub
popf
lods
inc
sub
pop
rclb
into
int
mov
bound
stos
inc
test
push
xchg
lret
push
xchg
jae
aaa
xor
stos
xchg
sqrtps
xchg
sti
lahf
orb
cmc
sub
popa
and
movsb
scas
sahf
mov
pop
mov
rcll
test
xlat
pushf
enter
adc
push
mov
or
sbb
or
or
mov
sbb
xor
lods
insl
cmpsb
mov
test
pop
cmpsb
cmp
mov
mov
out
cmp
inc
adcl
jmp
lea
inc
xchg
icebp
xchg
roll
mov
mov
mov
sbb
xchg
mov
push
dec
shrb
xor
pushf
mov
xor
inc
test
mov
mov
fs
mov
test
cwtl
movsl
cs
xor
mov
push
jne
inc
ja
outsb
jbe
int3
ja
adc
mov
test
daa
test
jp
dec
mov
int3
in
sub
les
xor
mov
and
es
leave
mov
xor
push
push
js
outsl
in
es
mov
mov
fdiv
scas
enter
jne
pusha
lret
push
dec
jb
int
scas
int
das
and
mov
pushf
mov
test
sbb
push
popf
repz
lret
lret
jp
sbb
ljmp
cwtl
sbb
xchg
ret
pushf
mov
das
sahf
xor
push
adc
iret
mov
push
lods
push
sbb
divb
addr16
mov
ds
outsl
sub
fbstp
test
mov
ja
and
add
mov
popa
nop
sbb
cli
insb
xorb
das
jl
enter
and
adc
mov
jns
in
ret
adc
dec
loop
xlat
xchg
mov
sbb
mov
mov
clc
sub
out
mov
or
imul
mov
adc
shlb
hlt
add
and
mov
and
xchg
dec
pop
clc
imul
or
push
push
jl
in
xchg
dec
in
add
jo
mov
cmp
pop
push
out
cmp
xchg
mov
rol
stos
jae
cmp
lods
movsb
pop
leave
and
xchg
ss
jbe
inc
movsb
inc
jo
clc
mov
fs
dec
inc
mov
insl
xor
cmp
and
pop
sbb
sub
cwtl
jmp
mov
xchg
arpl
ss
push
aas
xor
clc
push
sub
add
js
cli
imul
std
daa
jo
mov
mov
pop
loop
lods
mov
inc
jno
lods
test
int3
cmpb
jmp
movsl
sahf
in
out
xchg
imul
adc
std
test
shrl
cwtl
ds
dec
lea
popa
insb
xor
mov
push
cmpsl
push
sub
mov
sbb
ret
cmpsb
jne
int3
movsb
add
in
jecxz
fbstp
imul
shrb
jne
mov
add
data16
sahf
pop
adc
jns
in
subb
mov
int3
push
xchg
push
or
in
cmp
xor
test
sub
sub
in
and
popa
push
sbb
adc
scas
adc
cs
xchg
je
pop
and
hlt
loopne
fistl
in
jno
xchg
call
jo
daa
xchg
push
or
dec
movsb
nop
loopne
js
pop
sahf
fsubrl
xchg
mov
fs
sub
jne
jns
mov
pushf
lods
xor
sbb
cs
addb
iret
jg
xor
xchg
mov
inc
mov
int3
inc
xchg
xlat
bswap
jb
je
lock
xchg
mov
push
stos
sub
dec
mov
fs
orl
jecxz
imul
mov
lcall
andb
cltd
aaa
xchg
xor
xchg
scas
popa
xchg
dec
test
sub
cmp
sahf
dec
jg
daa
cs
mov
pop
adc
pop
dec
cmp
pop
imulb
mov
jmp
fs
lock
int3
stos
add
stos
jp
and
xchg
mov
dec
rol
or
insb
pop
cld
mov
mov
cwtl
xchg
jl
jns
jnp
mov
stos
mov
je
int3
or
jle
leave
pushf
fs
int3
cs
lds
std
jne
pop
enter
lea
dec
cmp
jne
xchg
in
outsb
fs
subb
adc
add
jl
jnp
jns
movsl
pop
out
jle
fisubrs
adcb
dec
or
js
mov
jle
or
xor
inc
xchg
inc
dec
fbstp
lret
jl
push
mov
mov
movsl
dec
mov
pop
cld
nop
lret
push
pop
sub
jecxz
jmp
les
cs
sub
and
call
mov
and
sub
jno
rol
mov
xchg
in
jb
cmp
aad
out
mov
fsub
mov
mov
dec
leave
jae
shl
mov
xchg
xchg
cmovbe
bswap
lea
jle
loopne
mov
inc
jg
mov
add
sub
inc
push
cmp
inc
in
into
dec
idivl
hlt
mov
iret
fwait
mov
mov
in
xor
test
outsl
mov
mov
lods
dec
inc
mov
or
jne
js
pop
ds
mov
xor
int3
push
bound
mov
push
lods
mov
aaa
push
enter
xor
fs
dec
pop
adc
out
mov
popf
xchg
cmp
jns
popf
sub
dec
mov
in
leave
adc
push
popf
xor
inc
fs
call
shll
ja
stos
lods
cmp
and
roll
and
cmc
roll
jnp
pop
insb
test
leave
inc
pop
xchg
dec
lods
xor
jge
inc
push
or
icebp
das
int3
shrb
sbb
mov
adc
push
loope
mov
adc
outsb
fsubr
nop
push
mov
fldenv
push
and
inc
jle
push
movsl
loope
lods
pop
test
dec
mov
add
sar
rorb
jmp
repz
pop
mov
fdivrl
jmp
call
and
arpl
aas
jl
cmpsl
les
test
or
pop
es
data16
pop
testl
std
adc
test
jge
les
mov
cmpsb
movsb
or
xchg
stc
and
in
mov
pop
lea
outsl
mov
mov
pushf
jno
sub
adc
xor
ret
daa
mov
jg
cmp
push
sbb
test
push
mov
pop
xor
sub
adc
push
mov
and
bnd
and
je
fwait
push
sub
cld
xor
jno
test
loopne
fstpl
lods
rclb
in
nop
mov
mov
hlt
jl
stos
ja
sbb
icebp
lods
xor
inc
fisttpll
ret
jbe
mov
into
sbb
xorb
lods
andb
movsl
cmc
cltd
push
or
add
jae
les
and
mov
push
aaa
fs
push
adc
scas
lock
sbbl
fwait
jl
sub
enter
outsb
inc
lcall
lcall
adc
mov
jecxz
mov
xor
loop
ret
push
or
push
fptan
adcl
movsb
dec
mov
and
loop
mov
sub
mov
pop
sbb
int3
mov
bound
xchg
sbb
aam
xchg
pop
inc
xor
mov
mov
inc
lcall
pop
or
andb
sub
test
push
jno
mov
sub
cltd
jg
imul
pop
dec
out
xchg
cmp
fucomp
imul
rorl
xorl
cmc
pop
imul
mov
push
stos
aas
dec
push
movsb
les
xor
cmpsb
outsl
jo
xchg
aas
leave
js
popa
cld
ljmp
int3
test
and
pusha
loopne
mov
and
pop
mov
inc
int3
shr
cwtl
es
mov
sub
popf
ret
iret
or
xlat
push
push
test
push
inc
sub
push
mov
and
or
fs
mov
push
mov
aam
movsb
push
sahf
dec
roll
mov
lret
push
out
and
nop
sbb
test
test
cli
stos
add
arpl
push
and
adc
cwtl
ficompl
push
or
mov
stos
in
cli
mov
sbb
mov
xchg
xchg
xchg
sub
jno
mov
in
repnz
mov
das
sbb
xchg
dec
pop
int3
cs
ror
data16
lret
mov
xor
fdivl
out
cltd
negb
mov
mov
mov
jle
test
imul
jae
scas
pop
cwtl
push
int3
imul
gs
test
pusha
lods
loope
mov
add
or
repnz
push
or
jns
rol
adc
in
ds
divl
stos
mov
sbb
and
jns
pop
cmp
cmpsb
icebp
popa
mov
ds
imul
jno
add
repnz
jns
loop
jle
pop
divb
subb
imul
stos
add
xchg
pop
lret
movsb
sbb
pop
popf
clc
mov
dec
inc
mov
testl
push
lods
cmp
xor
sbb
call
daa
pop
daa
aad
sarl
xchg
rorb
das
arpl
rcrb
inc
bound
xchg
insb
pop
jle
xchg
dec
xchg
lahf
sub
pushf
ror
mov
int3
aad
imulb
fistl
and
ret
push
mov
sub
in
cmovl
dec
in
popf
lcall
xchg
push
jbe
jge
enter
ss
jg
out
jo
insb
pop
pop
mov
jge
in
and
imul
xlat
bound
add
dec
bound
dec
subl
sbb
mov
subl
push
nop
shlb
or
scas
pop
xor
js
inc
sarb
movsl
std
je
jns
inc
fmul
pusha
pop
mov
in
call
xchg
mov
mov
aam
jae
insb
test
cmp
mov
pushf
or
movsb
mov
push
les
lahf
rorb
mov
divps
sbb
daa
xchg
daa
cmp
cmp
jle
and
movsb
jo
push
dec
mov
inc
add
jmp
orl
inc
pop
inc
xchg
xor
cmp
mov
jecxz
aam
test
popa
mov
mov
mov
arpl
cld
ss
cwtl
pop
sub
outsb
sub
mov
loopne
mov
xor
inc
movsb
lods
movsb
sub
cmp
jns
outsl
aas
stos
or
int3
pop
fmull
mov
xor
jmp
fnsave
push
jecxz
pop
push
cmp
mov
mov
jae
scas
mov
or
sub
int3
sbb
clc
and
in
movsb
pop
subl
rcrb
inc
bound
xchg
xor
outsb
xchg
inc
sahf
mov
jno
movsb
push
jecxz
xchg
mov
inc
mov
popa
push
jmp
les
dec
inc
xchg
in
jbe
cmp
mov
jbe
mov
cld
stos
adc
xor
je
push
int3
push
enter
sub
push
xor
jl
push
add
fwait
gs
sarl
insb
mov
lea
sub
push
lcall
xchg
mov
pop
mov
incb
and
jl
sti
sbb
mov
stos
xor
sahf
fwait
loop
out
testb
loop
xor
push
clc
shrl
sbb
mov
aam
pusha
and
xor
pop
movsb
xor
xchg
repnz
push
pop
jmp
xor
subl
daa
inc
aaa
and
mov
pop
out
movsl
sti
out
inc
xor
fimuls
repnz
bound
xor
push
icebp
aam
mov
stc
test
mov
cmpsl
mov
shl
jecxz
and
xchg
hlt
fs
icebp
cld
inc
add
cmp
push
mulb
mov
outsl
bound
pop
push
es
dec
in
mov
popa
mov
movsb
xchg
mov
popa
xor
ret
sbb
dec
add
mov
sarb
enter
int
stos
movsb
test
movsl
arpl
dec
mov
push
out
add
int3
mov
aaa
pop
js
cwtl
xor
xchg
aas
movsb
jp
data16
nop
sar
iret
jle
pop
rorb
fisubrs
adc
hlt
sub
dec
lods
jno
imul
bound
aaa
mov
xor
addr16
flds
and
pop
and
pop
and
sub
movsb
std
cld
xor
and
xchg
xor
xor
jae
call
add
andb
and
mov
xchg
lcall
mov
sub
add
outsb
pushf
dec
test
loop
in
lods
das
and
cmpsb
xchg
fnstsw
bound
bound
cwtl
ret
mov
push
push
jge
andl
test
jo
cmp
xor
in
popa
xchg
loope
ss
sub
adc
jo
xchg
sub
stos
fwait
xchg
xchg
add
xor
movsb
out
loop
adc
pop
fucomp
divb
mov
xor
inc
pushf
mov
and
xchg
xor
aaa
nop
inc
add
jno
pop
dec
mov
in
int3
gs
pop
dec
mov
enter
dec
xor
jl,pt
cld
data16
out
iret
or
cmpsb
test
inc
rolb
arpl
push
dec
mov
subl
mov
aam
xchg
xor
push
ss
cmp
xchg
fsubs
arpl
lods
repnz
pop
sub
test
mov
int3
push
cmpsl
jae
lods
mov
add
or
aam
pop
mov
pop
rcll
jle
cmpsb
int3
movsb
loopne
add
clc
cmp
in
rolb
push
in
cld
pop
fs
fidivrs
add
out
xchg
push
mov
xchg
ret
aad
push
xchg
cld
jae
insl
test
mov
repz
leave
stos
daa
jbe
mov
sbb
cmpsl
and
iret
mov
stos
ljmp
add
test
mov
inc
ds
sub
jmp
cwtl
shlb
std
scas
data16
jo
flds
jno
mov
mov
xor
pop
mov
gs
fs
and
nop
insl
push
push
push
sbb
xor
jne
or
ds
stos
cwtl
jmp
mov
imul
mov
mov
sub
ss
popf
scas
xor
leave
stos
dec
mov
xor
les
xchg
push
adc
movsb
icebp
inc
loope
mov
push
dec
sub
sbb
loop
inc
push
popa
sub
jns
jb
mov
mov
add
aas
jb
adc
data16
into
outsb
push
inc
sbb
mov
enter
and
lahf
cs
push
sub
movsl
mov
and
mov
xor
icebp
xor
lock
ja
cmp
loopne
int3
pop
gs
fs
ret
lret
pop
inc
adc
mov
hlt
test
int3
jp
push
xchg
jb
imul
jbe
cmp
lods
int3
push
test
xchg
pop
mov
jle
enter
xchg
stos
pushf
mov
mov
mov
shll
mov
mov
orb
adc
fs
sbb
int3
fsubl
fisubrl
shll
push
loopne
xor
mov
inc
insb
into
movsb
movsb
mov
xlat
inc
or
push
xchg
mov
stc
stos
xor
xchg
jmp
mov
mov
test
jmp
cmp
add
scas
sbb
add
xchg
leave
or
test
ljmp
sbb
into
imul
mov
cmpsb
mov
or
jge
pop
xorl
insb
je
je
jl
mov
repz
scas
sub
data16
bound
xchg
mov
xor
pop
or
gs
lods
mov
sbb
out
jae
outsb
loopne
dec
sub
mov
aas
and
xchg
cli
xor
push
int3
movsb
and
sub
insb
mov
repz
stos
lock
mov
sub
cmc
push
les
insb
and
ss
and
xchg
cmp
test
jno
push
scas
adc
idivl
pop
or
bound
jae,pt
in
push
sub
je
cli
jmp
mov
mov
scas
loopne
mov
loop
in
mov
pop
xor
add
jmp
popa
daa
std
jae
dec
pushf
insb
icebp
test
sahf
je
lods
rclb
cmc
in
inc
and
mov
push
cld
or
movsb
fwait
popa
repnz
or
xor
push
out
mov
mov
lods
inc
sub
pushf
adc
pop
pop
jo
lods
and
mov
push
and
mov
stc
pop
clc
clc
das
push
lods
push
addr16
stos
ljmp
int3
push
adc
mov
lods
psrlq
add
sbb
lods
pop
and
push
pop
aam
xor
sbb
hlt
arpl
shlb
and
mov
mov
push
sbb
pop
mov
add
adc
xchg
test
mov
add
aaa
fs
or
sub
xchg
mov
les
sbb
mov
and
enter
dec
shlb
xlat
mov
test
mov
imul
enter
movsb
dec
leave
dec
xor
mov
mov
push
push
mov
nop
scas
int3
aam
shl
stc
outsb
ja
rolb
popf
mov
fsubr
out
scas
add
mov
hlt
enter
dec
in
pop
push
mov
jge
dec
shrb
stos
mov
sarb
je
insb
inc
imul
int3
mov
shrb
js
dec
mov
sbb
xchg
pop
pop
lea
lods
mov
popf
xchg
iret
xchg
mov
sbb
and
ds
mov
test
dec
int3
lret
pop
dec
js
in
inc
enter
lock
add
and
jb
stos
mov
mov
repnz
cmp
cmp
daa
cmp
lea
xchg
push
movsl
das
movl
stos
sbb
daa
and
pop
ror
mov
insb
call
loopne
fsubrl
xlat
dec
cmp
sbb
jns
cmp
movsb
adc
mov
xlat
push
enter
push
sbb
xor
xor
call
xchg
rorb
jmp
fwait
std
clc
mov
push
mov
push
mov
and
cltd
enter
pop
rcrb
mov
bound
mov
fsubs
inc
scas
mov
cwtl
fndisi(8087
mov
insl
stos
pop
jo
lea
std
orb
adc
iret
lahf
or
gs
in
pop
inc
fsubl
jo
aas
cmp
add
jl
movsb
fdivs
repz
mov
mov
xor
test
xor
push
pop
sub
inc
iret
movsl
dec
pop
pop
nop
lods
adc
jg
xchg
jl
stos
mov
xchg
daa
cs
jl
fs
das
or
sbb
or
jmp
cld
test
aam
cli
mull
and
mov
xchg
loop
orb
add
cmp
xchg
inc
xchg
data16
or
push
repz
out
cld
cmc
insb
ficomps
scas
test
movsb
mov
int3
xchg
jns
shll
movsb
xorb
xor
dec
fidivl
mov
dec
lcall
adc
adc
pop
sbb
and
pop
out
mov
faddl
dec
call
jns
cld
leave
lea
pop
mov
pop
test
out
pop
call
cwtl
popa
mov
mov
add
movsb
lods
sub
outsl
push
leave
xlat
fadd
into
and
and
popf
and
or
jl
lods
lcall
sti
xor
jl
leave
and
sti
inc
mov
mov
dec
push
movsb
je
mov
out
mov
test
push
mov
je
enter
cld
jl
je
jl
and
cmp
pop
sbb
dec
lods
xchg
push
cs
jns
pop
push
inc
int3
aas
sahf
in
mov
add
movsb
cmpb
mov
jnp
popa
cmpb
lcall
pushaw
and
outsl
imul
dec
mov
subb
mov
inc
jno
je
or
lahf
inc
icebp
xor
stos
outsb
push
insb
mov
loopne
mov
int3
xor
popf
jge
lahf
and
pop
xchg
sbb
mov
mov
pop
mov
lock
adc
xlat
and
cmp
stos
in
sahf
mulb
cmpb
movsl
mov
leave
into
jle
jl
int3
sbb
mov
cmp
dec
xchg
push
nopl
jo
lea
dec
mov
dec
xchg
repnz
stos
icebp
rolb
mov
ljmp
movsb
lret
scas
inc
stos
xor
mov
stos
jns
dec
loope
data16
pop
daa
inc
lea
jbe
push
ss
mov
pop
inc
test
out
loopne
int3
lea
lods
sbb
rcll
stos
lods
int3
or
cmp
pop
pop
push
aas
dec
cmp
outsb
mov
insb
sbb
xchg
jge
pop
mov
adc
xchg
mov
int3
mov
popa
inc
fbstp
stos
gs
aam
jo
push
data16
push
pop
outsl
pop
cmp
xor
popa
mov
in
stos
jo
cmp
ljmp
xor
and
and
daa
hlt
fcomps
push
add
out
or
in
push
pop
imull
outsb
sub
xchg
outsl
leave
mov
sarb
xchg
sti
nop
imul
push
mov
push
pop
rcl
loopne
dec
xchg
shrb
sub
mov
mov
imul
xchg
in
cmpl
or
xchg
dec
hlt
imul
pop
pop
adc
pushf
sub
nop
jb
add
out
dec
mov
sbb
test
push
add
outsb
mov
test
and
dec
xor
movsb
mov
or
pop
sub
xor
xchg
nop
stc
pop
push
push
ds
insb
sbb
fbstp
sbb
movsl
test
pusha
jbe
std
mov
aaa
sub
add
popf
dec
mov
scas
pop
add
lods
mov
dec
xor
push
mov
enter
popa
lcall
arpl
pop
xor
sub
inc
pop
rorb
inc
out
jmp
in
jp
aam
sahf
in
mov
inc
push
dec
shlb
aaa
stos
sub
cs
pop
pop
mov
mov
xorb
fdivrl
shl
add
inc
and
jns
xchg
or
scas
fnstenv
mov
push
mov
inc
mov
dec
inc
mov
jae
sub
dec
pop
inc
mov
push
mov
lods
lods
test
movsb
mov
pusha
mov
sbbl
push
xchg
adc
inc
push
aad
lcall
fpatan
aam
dec
fs
rcrb
xchg
jne
inc
mov
shll
dec
push
pusha
addl
or
lret
mov
ficomps
mov
or
fmuls
xor
loope
js
sbbl
pop
pcmpgtd
mov
scas
mov
daa
cmp
add
pop
sub
sub
inc
xchg
xchg
test
sbb
lea
adc
sub
das
cmpsl
leave
dec
inc
jb
or
pop
jae
dec
mov
jl
cwtl
mov
lahf
add
stos
xchg
add
sub
inc
mov
aaa
aas
push
jle
icebp
lret
mov
push
fsubs
push
clc
mov
sub
dec
hlt
mov
jne
xchg
scas
in
pop
call
xchg
mov
ror
out
out
jb
lock
dec
push
push
test
adcb
data16
enter
jecxz
popf
push
push
nop
sub
cmc
push
jecxz
sbb
dec
fs
stos
sub
nop
lcall
icebp
std
in
inc
pop
push
loopne
ss
repz
and
scas
xor
pop
mov
and
cltd
push
stos
inc
lods
loop
and
arpl
xchg
cmp
inc
adc
stos
fnsave
mov
mov
jno
add
jmp
aam
mov
push
mov
ret
push
cwtl
cmp
fbstp
adc
push
mov
int3
es
nop
mov
lods
shlb
repnz
mov
leave
push
cmp
sarb
ds
dec
or
add
mov
repz
popa
mov
sahf
outsb
test
xchg
shrb
das
mov
ss
xor
test
sbb
pushf
pop
daa
outsl
lahf
jp
push
lods
and
fimull
xlat
jmp
mulb
xchg
stos
stos
stos
xor
mov
js
cmpsl
push
xchg
mov
jns
inc
rcl
lock
pop
and
mov
jne
adc
pop
mov
inc
test
jl
pop
movsb
dec
sub
xchg
mov
call
pusha
push
daa
mov
movsb
sub
ret
fstpt
dec
mov
das
add
cld
daa
sub
mov
movsb
pop
and
pop
aaa
addr16
mov
mov
movsb
sbb
faddl
dec
mov
cs
mov
xor
aaa
addr16
scas
mov
fmuls
lret
push
daa
popa
mov
jae
push
sbb
sub
ljmp
jno
mov
sahf
mov
int
push
mov
jg
dec
stc
scas
leave
stos
cld
mov
in
or
insl
jp
and
pop
shr
lods
aas
aaa
aam
inc
test
mov
xor
ds
pop
xchg
xchg
xor
cmp
cmpsl
inc
std
aam
leave
pop
jmp
stc
out
int3
in
sub
in
leave
test
push
orl
jbe
loop,pt
fistpll
scas
cmp
xchg
jo
push
dec
in
jo
test
inc
jge
sarb
push
push
mov
mov
xor
mov
jg
jle,pt
daa
jmp
xor
leave
add
cmp
mov
mov
jp
lcallw
fs
dec
mov
inc
xchg
js
add
mov
sub
in
add
push
adc
lret
test
jmp
xchg
hlt
jmp
scas
mov
xchg
inc
sub
in
push
in
jae
scas
int3
fdivrs
lret
jo
popa
fs
clc
push
sub
je
fs
jp
adc
push
cld
cli
outsl
std
leave
or
jo
test
js
bts
mov
pusha
mov
add
insl
fucomi
fstpt
push
jne
mov
or
add
mov
scas
or
mov
sti
jp
loop
or
xor
ret
xor
xchg
pop
jmp
push
test
insb
pop
outsb
nop
pop
dec
adc
cmpsb
mov
mov
je
mov
popa
mov
mov
jle
int3
lds
test
sub
das
es
jmp
int
inc
pop
stos
bound
jmp
xor
jae
push
jbe
mov
xchg
leave
mov
insb
fstpl
enter
pop
nop
pushf
sub
lcall
cwtl
cmpsl
nop
lret
sbb
shll
mov
push
jns
inc
mov
add
dec
movsb
scas
pushf
adc
stos
in
je
fidivs
je
mov
jb
xorl
cwtl
test
fcoms
loop
mov
pop
jae
jno
fmull
pushf
scas
repnz
lcall
mov
int3
sbb
jae
leave
andb
pop
or
jl
jo
idivl
sbb
cmpsl
pop
gs
jne
cld
inc
cld
jae
clc
fisubs
or
sarl
inc
pop
scas
sbb
outsl
in
nop
cmp
push
aaa
jae
movsb
ss
sub
pusha
daa
pop
insl
lock
idivl
cmpb
rorl
movsb
mov
push
enter
fnstsw
and
mov
je
dec
jnp
xor
pop
mov
scas
outsl
mov
int3
lods
imul
mov
jns
movsb
cmp
out
push
xor
push
sub
mov
gs
dec
sahf
aas
test
lret
mov
int3
cwtl
addr16
mov
inc
test
mov
fmulp
negb
imulb
pause
int3
mov
sti
cmp
outsb
movsb
jb
ret
test
inc
jne
stc
daa
mov
lods
sub
mov
scas
push
stos
bound
aas
push
sub
cmp
or
push
sub
adc
xchg
lea
imul
ds
and
mov
popf
mov
mov
iret
pop
cmp
xor
xchg
xchg
sub
cltd
cli
push
inc
xchg
jnp
jae
scas
daa
push
stos
cmp
lret
add
push
or
fisubrs
push
scas
popl
inc
jno
imul
pushf
int3
push
mov
and
fidivrl
pushf
shlb
test
mov
jmp
sub
fwait
fisubs
jl
fisubrs
push
mov
int3
and
lret
dec
xor
inc
int
jl
popf
xor
inc
stos
les
subl
cmpsl
js
xchg
mov
jns
lret
sbb
hlt
nop
push
sbb
mov
test
pop
jl
push
insb
add
fs
fidivrl
sub
movsl
es
mov
sbb
xlat
mov
cs
mov
inc
inc
daa
js
xor
push
pop
mov
push
lods
and
xor
adc
ss
int3
mov
ss
sub
pushf
add
xor
xor
jl
adc
mov
lods
jb
cmp
pop
in
jo
mov
sub
cmp
in
aas
jmp
hlt
sahf
outsl
sarb
outsb
adc
jl
pop
adc
push
pop
mov
add
xchg
xchg
daa
test
je
cmp
decl
add
pop
popf
dec
pop
mov
mov
and
inc
test
sub
pop
stc
dec
mov
loop
arpl
hlt
mov
ljmp
int3
add
pushf
jl
mov
outsl
xchg
ja
add
pop
dec
das
mov
pop
daa
push
aam
popa
xor
xchg
mov
jnp
and
rolb
cld
inc
push
scas
inc
dec
pop
sarb
je
xor
fidivrs
add
int3
mov
out
adcb
fwait
outsb
lods
addr16
lret
mov
mov
mov
sub
cmpsl
cmc
mov
xor
ret
and
mov
addb
das
mov
sub
fst
daa
xchg
mov
sahf
mov
bsf
mov
insb
lock
xorl
outsb
insl
jl
jno
xor
das
and
or
xor
xor
test
pop
inc
adc
shlb
repz
xchg
jns
inc
xchg
rolb
addl
jne
xlat
or
xchg
push
movsl
aad
pop
inc
dec
pop
daa
cmpsb
jl
pop
inc
add
or
xchg
popf
lret
cwtl
mov
cmp
mov
fisubl
or
fisubrl
addr16
icebp
cld
cmp
pop
movsb
cmpsl
int3
orb
pop
lret
dec
outsb
pop
lock
mov
cld
push
dec
insb
scas
and
aad
hlt
stos
int3
fimuls
das
movsb
dec
sub
ret
pop
xchg
sub
sub
js
push
adc
pop
stos
int3
xor
orl
pop
stos
sub
test
pop
repnz
mov
mov
mov
and
mov
idivl
js
test
sbb
mov
lods
mov
je
lret
sub
pop
pop
sti
in
iret
popf
adc
sub
mov
test
adc
lahf
mov
and
sub
pusha
cmc
jno
scas
int3
jb
push
push
jbe
out
mov
xchg
notl
test
adc
in
cmp
xchg
inc
ret
test
mov
test
call
pushf
pop
or
cmpsl
clc
int3
add
mov
push
push
outsl
xchg
mov
mov
cwtl
test
loope
inc
mov
cmp
xor
test
ljmp
jge
cmpsl
movsb
adc
adc
sub
outsb
mov
sbb
xlat
faddp
pop
cmpsb
xor
loop
lods
addr16
pop
out
aas
call
push
arpl
lret
xchg
mov
int3
in
out
stos
xlat
das
lahf
test
rolb
int3
xchg
inc
adc
arpl
mov
lahf
mov
jl
testb
repnz
cld
push
xlat
push
pusha
call
jo
sub
je
bound
shrb
mov
and
pop
and
aad
hlt
movsb
int3
fistl
das
xchg
popf
or
test
outsl
push
int3
or
sbb
bound
adc
shl
mov
mov
lahf
xor
mov
sub
xor
push
and
sbb
movsl
int3
jb
sbb
mov
movsb
adc
in
xchg
sbb
inc
jmp
mov
mov
xor
cmpsl
cld
jge
pop
in
and
enter
ljmp
cwtl
jmp
xor
lods
shrl
mov
aad
jo
xchg
inc
mov
mov
pop
mov
data16
xchg
dec
adc
scas
loop
adc
pop
mov
adc
loope
loope
lods
inc
fistl
lret
mov
fistpll
mov
mov
insb
mov
jecxz
shlb
repnz
insb
adc
loopne
jno
add
mov
xor
pop
add
mov
lods
jns
call
cmc
inc
inc
adc
mov
movsb
in
insl
jo
imul
scas
scas
int3
movsl
es
cltd
popaw
adcb
cs
mov
repnz
push
add
repz
jp
and
inc
aad
loop
cmp
jmp
pop
mov
sub
dec
popf
lock
ret
lret
mov
pop
mov
inc
mov
add
je
orb
mov
or
adc
jg
cltd
aas
std
xor
lock
fsubrs
clc
pop
lods
dec
hlt
scas
lock
adc
lcall
jmp
shlb
dec
inc
inc
sete
dec
mov
je
jbe
dec
mov
mov
add
jo
sub
cwtl
sub
jle
xchg
jno
ds
movsb
and
adc
inc
movsb
or
lea
push
call
mov
jns
push
and
sub
xchg
int3
push
rol
push
jo
xor
out
add
pop
mov
enter
imul
insb
and
mov
sub
mov
push
in
sbb
inc
cwtl
aam
mov
fstpt
or
push
mov
push
and
jge
lods
jnp
push
adc
and
scas
jl
sub
pop
jp
in
movsb
aas
mov
jno
daa
xor
xchg
push
mov
and
mov
pop
gs
mov
jno
xchg
pop
and
in
inc
push
push
outsl
sub
addr16
lock
addr16
push
add
movsb
push
pop
in
nop
and
js
sbb
aam
mov
mov
mov
mov
cld
push
lods
mov
imul
test
test
jg
ret
fs
cmpsl
push
xchg
jmp
mov
xchg
sub
arpl
xchg
cmp
pusha
repnz
lods
int3
sti
sub
push
test
mov
push
dec
repnz
mov
add
sbb
aas
mov
lret
dec
pop
push
and
call
dec
inc
or
pop
mov
in
mov
sbb
das
pop
gs
nop
dec
lods
dec
sub
xchg
mov
fld
and
sub
jle
jne
mov
lea
lahf
pushf
lret
dec
outsl
xchg
scas
lods
ficompl
pusha
jno
pop
cmp
faddl
fcoms
scas
xchg
and
mov
mov
movsb
pop
or
in
das
lods
dec
mov
xchg
mov
outsb
xchg
sub
bound
movsb
sbb
jo
inc
pop
lahf
mov
xlat
sub
cmp
push
mov
lcall
push
ret
mov
cli
bound
lret
fbld
mov
mov
add
out
daa
loope
and
xchg
pop
clc
lds
jb
loopne
or
in
leave
pop
xor
xchg
hlt
sbb
cs
jmp
xchg
jge
jmp
xchg
cmpsb
lods
aas
sbb
andl
dec
idivl
jl
data16
inc
adc
bound
arpl
xchg
das
add
gs
popa
test
sub
or
push
fidivs
movsb
enter
xchg
or
dec
idivb
dec
ficomps
xchg
mov
faddp
cltd
das
xor
push
mov
scas
mov
adc
roll
sbb
push
test
sub
loope
lods
mov
dec
mov
or
je
movsl
das
loope
sbb
cltd
or
sbb
add
push
jo
adc
add
pop
inc
xor
adc
adc
int3
ffree
push
cwtl
aas
sbb
aaa
sub
pop
stos
aas
sub
ss
xorl
stos
xor
insl
es
xchg
sub
inc
jl
cmpsl
and
pop
dec
movsb
xchg
push
cld
xor
or
stc
orb
divb
in
mov
hlt
test
push
xor
lods
aam
outsb
jns
call
jnp
aaa
int3
ss
cmp
cs
xor
sbb
mov
repnz
xor
cmpsl
jns
cmp
subb
aam
dec
loop
call
nop
cmp
daa
mov
repnz
rolb
and
data16
xor
adc
int
aad
call
xchg
aas
in
mov
clc
or
sub
clc
xor
test
sub
sbb
sbb
xor
sub
cld
and
pusha
mov
lea
xor
inc
je
stos
lret
leave
sahf
pop
xorl
jl
inc
insb
out
subb
int3
jg
push
js
out
mov
fistl
adc
mov
mov
and
sub
jmp
and
jbe
mov
and
adc
and
fiadds
ret
mov
test
lcall
imul
call
jno
cmc
xchg
repz
cwtl
loopne
sbb
adc
fisubrl
movsb
scas
pop
out
in
xchg
lret
inc
fisttps
imul
xchg
lods
pop
inc
jle
jp
and
lock
xchg
mov
mov
mov
pop
insb
mov
sarb
xor
stos
loope
mov
cli
mov
xlat
nop
cltd
jns
mov
mov
stc
scas
pop
lret
jecxz
idiv
jns
lods
cmp
mov
mov
jno
movsb
aad
jl
test
bnd
call
into
jbe
mov
mov
pop
stos
iret
cmp
test
lods
xchg
jne
out
xchg
shlb
repz
pop
mov
sub
xlat
push
add
sub
loopne
testl
mov
dec
mov
pop
dec
pushf
je
jmp
pop
xchg
push
adc
ficoms
mov
loop
jns
shlb
jb
addr16
fwait
ljmp
cltd
outsl
mov
ret
ss
bound
mov
int
int3
popf
xor
das
cld
loopne
jmp
sub
ret
xor
add
push
movsbl
cmp
mov
into
es
mov
icebp
leave
addl
pushf
enter
movsb
mov
ds
subb
ds
dec
inc
xchg
mov
sub
cmp
lea
cltd
gs
push
aaa
gs
adc
inc
test
stos
add
scas
iret
pushf
icebp
push
cmp
lods
sbb
inc
jmp
dec
or
push
inc
nop
jmp
push
cmpsl
rcll
inc
loopne
js
ret
cld
cmp
test
int3
fstl
pop
xchg
mov
xor
lock
xor
pop
cmpsb
mov
jle
jnp
test
push
sti
jo
test
lret
push
hlt
mov
or
dec
mov
decb
sbb
and
sub
loop
jns
lret
nop
stos
int3
idivl
lret
stos
gs
clc
mov
or
repnz
lret
sti
add
xchg
in
push
mov
stos
or
mov
jno
mov
cmpsb
bswap
inc
xchg
mov
mov
mov
jmp
loopne
mov
xchg
inc
xchg
mov
mov
add
push
mov
push
lcall
mov
test
mov
push
or
push
mov
push
pop
add
js
mov
mov
stos
xor
jns
mov
mov
aam
js
pop
scas
xchg
in
hlt
loop
sub
sub
nop
jo
adc
cmp
jnp
ss
mov
jae
dec
add
xchg
sahf
xchg
or
fwait
pop
mov
sahf
int3
lret
inc
xor
push
rorb
sbb
pop
test
int3
jg
dec
mov
mov
dec
fsubl
sbb
lods
pop
push
xor
push
lods
and
mov
loopne
pop
dec
jg
pop
test
push
lret
mov
fs
cmpsb
movsl
scas
pushl
inc
outsb
or
pop
loope
movsl
jb
cmpsl
push
jns
inc
je
aad
ret
int3
sahf
adc
jb
and
jb
stos
mov
adc
int
push
push
out
adc
test
movsb
mov
xor
repz
call
fwait
les
sbb
pop
stos
pop
mov
daa
and
xchg
xor
jl
lods
std
mov
inc
mov
mov
mov
mov
rolb
call
imul
cld
mov
je
pusha
fwait
mov
push
mov
mov
or
xor
sub
dec
arpl
lahf
mov
stos
scas
mov
or
ret
frstor
jl
adc
pop
jge
jo
mov
push
mov
int3
sbb
fst
dec
mov
daa
add
and
sbb
lahf
push
pop
push
inc
lods
pop
inc
mov
sbb
iret
stos
pop
xchg
push
xchg
cmpsl
leave
xchg
sbb
scas
popf
push
lahf
mov
sub
lods
sub
or
lcall
stos
mov
aas
movsl
sub
mov
test
in
add
insb
rorb
fstpt
cmpsb
jnp
lret
sbb
push
add
adc
aaa
movsb
add
inc
test
ds
xlat
fisubl
aas
mov
stos
adc
mov
test
outsl
es
lods
mov
mov
movsl
scas
fmul
fidivrl
ret
xor
pushf
fdivl
ss
pop
icebp
nop
daa
filds
sub
lea
test
dec
mov
loop
push
xor
pusha
push
cmpsb
cmpsl
mov
push
clc
mov
pop
lahf
mov
ds
jnp
inc
add
push
sub
and
jp
sub
lcall
mov
dec
out
jns
jp
jp
fbstp
mov
ret
add
push
pop
lock
push
lock
ljmp
sarb
sub
aad
cmpsb
jnp
insb
in
lods
popl
scas
cwtl
xor
jo
jp
cmpb
lcall
ljmp
or
and
xchg
mov
movsb
outsl
movsb
mov
mov
mov
mov
ss
stos
mov
test
mov
call
adc
movsl
pop
adc
and
pop
fwait
cmpl
add
out
adc
fstpl
and
push
pop
scas
jle
mov
or
outsl
enter
mov
xchg
cmp
sub
jae
je
fmulp
arpl
mov
adcb
inc
xchg
stos
out
sub
mov
imul
sahf
push
lret
jmp
enter
lret
ss
aaa
fsubrs
mov
jle
mov
inc
je
and
xor
mov
sahf
xor
push
pop
xor
sub
roll
push
xor
jo
fnsave
roll
pop
and
or
mov
lea
je
jp
leave
pusha
cmp
and
stos
pop
in
adc
xor
in
push
add
pop
leave
mov
mov
pop
and
adc
cltd
xlat
imul
repz
cmp
subl
pop
inc
pop
xchg
out
xor
mov
inc
stos
bound
mov
leave
xchg
sti
insl
pushf
out
xchg
sbbb
mov
popa
pop
add
js
sbb
in
xchg
nop
push
jp
das
pop
adc
lods
inc
sub
push
pushf
and
jno
cmp
jnp
sarl
cmp
sbb
les
in
push
cmpsb
movsb
xchg
pop
sahf
nop
or
push
adc
jnp
pop
mov
mov
mov
jmp
pop
call
push
mov
lahf
mov
mov
adc
mov
stc
mov
outsl
inc
or
pcmpeqd
push
orb
fs
or
and
dec
add
inc
mov
popa
adc
dec
scas
jo
xor
mov
jl
les
mov
pushf
dec
hlt
ja
je
jge
jns
jle
test
rorb
or
pop
inc
sub
sar
xchg
jmp
push
outsl
sbb
adc
pop
cmp
lret
daa
movl
adc
add
dec
mov
mov
mov
jle
std
sub
sub
pop
xor
and
sub
pushw
in
sbb
cmp
neg
rorb
faddl
xchg
jnp
std
lret
loopne
arpl
aas
xchg
je
pop
leave
xchg
adc
cmp
cltd
xor
push
bound
call
leave
cmpsb
pushl
pop
mov
adc
pmaxsw
push
push
int
pop
sti
pop
xchg
sbb
int3
jmp
test
or
out
or
in
pop
and
sbb
pop
out
adc
shll
pop
or
push
inc
xchg
jno
jns
hlt
xchg
xor
push
movsb
into
sbb
enter
pusha
xchg
insb
cmp
imul
lcall
dec
es
sbb
leave
call
cmp
pop
shl
jl
movsl
test
pop
fistpl
cmp
popa
pop
jg
rolb
mov
mov
outsb
in
add
adc
stos
lcall
mov
testl
mov
mov
xor
sbb
and
or
out
leave
mov
sub
sub
adc
cmp
push
mov
jmp
bound
push
cld
outsl
imul
xor
scas
or
aas
das
aas
jb
xor
or
jge
out
jo
pop
ret
insl
dec
pop
cltd
mov
jg
add
ljmp
cmp
scas
jo
and
xchg
dec
arpl
pop
jns
das
pop
push
int3
scas
mov
cwtl
mov
insb
data16
stos
sub
fs
int3
icebp
push
in
es
aad
incl
popa
imul
aad
ljmp
mov
js
mov
test
mov
ret
enter
sub
dec
test
jae
adc
and
lret
rolb
sarl
adc
inc
or
clc
cli
and
ret
psrld
mov
cld
xor
push
nop
aam
jl
test
xchg
call
les
insb
xchg
xchg
add
sub
cmpsl
push
mov
push
cmp
cltd
fldcw
inc
xchg
fsts
pop
jno
jo
xchg
mov
mov
aas
aam
int
imul
cwtl
icebp
mov
in
repz
movsb
mov
xor
movsl
std
aas
fimuls
and
jle
xor
push
aam
inc
adc
or
inc
xchg
push
loop,pn
cld
mov
pop
xchg
std
mov
xchg
std
xor
and
sbb
sar
imul
mov
sar
lret
bound
jl
adc
sub
or
push
mov
jmp
test
out
lods
adc
mov
inc
out
mov
sbb
mov
mov
and
xor
sahf
lahf
jo
push
popa
lea
stos
add
xchg
loopne
xchg
lock
jl
dec
arpl
xchg
pushf
sbb
sub
imul
mov
scas
xchg
pop
aam
clc
movsw
sbb
mov
xchg
fsubrs
shlb
xor
cmpsl
int3
inc
lods
sahf
out
ds
xchg
lea
mov
stos
xor
adc
and
aas
mov
push
and
xchg
shlb
cmp
sti
movsl
mov
add
fdivs
movsl
mov
sub
push
mov
mov
jo,pn
aas
dec
jge
xor
mov
dec
lods
in
cmpsl
lock
mov
movsl
in
xchg
cltd
mov
adc
pop
test
xchg
lea
sub
jne
aas
dec
mov
push
rcrb
daa
lahf
aam
test
cli
sub
mov
mov
lds
gs
mov
pop
cmp
lods
xchg
std
sbb
imul
inc
mov
int
mov
adc
mov
xor
cmp
sbb
xor
icebp
dec
dec
lahf
xchg
or
rcr
shll
ljmp
jo
pop
insl
jge
in
int3
inc
xchg
imul
out
or
scas
call
cltd
test
push
xchg
inc
stos
mov
and
mov
jp
sbb
lahf
mov
int3
dec
adc
push
jl
xchg
xchg
and
cmpsl
add
test
push
sub
inc
and
xchg
fimuls
jle
push
dec
cwtl
pushf
das
es
fwait
nop
js
iret
outsb
lea
fcoms
xchg
lods
out
add
std
ret
mov
or
das
arpl
nop
jne
arpl
sub
sub
adc
sub
pop
out
popf
xor
sbb
xor
adc
dec
je
cmp
xor
pushf
lret
sbb
cmpsl
movsl
sub
push
adc
pop
test
jmp
mov
arpl
mov
xor
gs
lods
and
stc
add
mov
std
xor
idivb
pop
mov
jmp
test
and
and
fnstenv
sub
dec
mov
call
rolb
jo
pop
or
push
mov
cld
int3
shld
cld
ljmp
inc
lret
clc
ficoml
outsl
arpl
sti
and
cli
int3
adc
dec
icebp
cmpl
and
mov
xchg
call
addr16
aas
pushf
nop
adc
test
pushl
mov
dec
adc
data16
leave
scas
or
pushf
aad
mov
leave
push
rcrb
mov
xchg
mov
xor
mov
and
xchg
cmpsb
and
sub
out
mov
scas
lods
lret
jbe
cmpsl
mov
jecxz
shlb
push
lret
lea
add
sub
outsl
addr16
lret
repz
dec
xor
or
ljmp
lods
dec
movsl
stc
repz
mov
jmp
mov
dec
loope
xor
das
mov
imul
lods
cli
iret
cmpsb
mov
repz
mov
loope
aam
dec
jo
dec
push
sbb
lret
fwait
mov
nop
insl
stos
in
sbb
daa
or
sub
mov
xchg
addr16
mov
push
lret
aam
or
sbbb
adc
arpl
push
out
cmp
daa
and
adc
push
loopne
jp
mov
fs
and
hlt
inc
hlt
fsubrs
dec
xor
cmp
mov
jge
out
push
fs
clc
ja
arpl
pop
test
sub
nop
test
lret
fnstcw
int3
rolb
int3
add
jg
pushf
inc
mov
sbb
push
mov
xor
cwtd
stos
adc
icebp
lock
lahf
insb
loop
mov
scas
push
jecxz
xor
out
mov
xchg
dec
mov
dec
outsl
dec
and
adc
mov
aaa
xor
fucomi
mov
ds
imul
mov
lock
loope
sahf
mov
fs
js
sub
lods
xor
and
xchg
enter
mov
or
subb
sub
ret
rcrl
addr16
fcmovnb
int3
jp
mov
ret
aam
mov
push
lock
cmpsl
fsubr
adc
cli
xchg
out
dec
lret
mov
es
insl
or
scas
pop
nop
adc
pop
orl
leave
adc
repz
inc
in
ret
lea
lods
cld
popf
int3
sahf
pop
xor
test
ja
mov
in
insb
push
xor
ja
test
jno
cld
push
clc
stc
xchg
xchg
inc
mov
lea
pushf
inc
ds
and
jne
mov
inc
lock
shll
jg
add
push
inc
lods
das
lock
and
ja
push
cmp
sub
cltd
hlt
movl
js
xchg
xchg
xor
adc
inc
mov
pop
hlt
adc
dec
mov
mov
lods
fcmovne
lret
das
jno
cli
ss
repz
xchg
mov
enter
mov
mov
arpl
xchg
mov
sbb
aam
aas
popf
mov
pop
mov
cmpsb
sahf
mov
inc
pop
push
jmp
out
push
div
ror
fcompl
jg
dec
add
loop
stos
mov
fildll
ja
shrl
xchg
xlat
scas
shl
jbe
movsb
cmp
xchg
lret
loop
xchg
inc
aas
sub
gs
mov
aas
outsl
jge
popa
xchg
xor
lret
adc
jne
mov
mov
adcl
push
mov
aaa
and
push
inc
jle
inc
jg
sub
lods
add
adc
insl
or
and
cmp
cltd
leave
pusha
xchg
xchg
imul
jb
dec
jg
lcall
sub
in
data16
xor
cli
aam
stos
xchg
lret
add
stos
outsl
mov
sub
inc
cmp
int3
and
dec
push
push
cmp
xlat
fnsetpm(287
dec
mov
addr16
pop
push
mov
fildl
cmp
gs
mov
push
sub
sbb
jp
insl
sbb
mov
pop
push
push
leave
ljmp
jo
mov
jmp
aas
or
sub
fidivs
sub
aas
pop
mov
xor
cs
xchg
stos
test
cmp
inc
or
rclb
push
mov
pusha
ret
leave
repz
es
xchg
mov
fcomp
push
and
xor
in
mov
xchg
aas
jecxz
jne
movsb
int3
std
or
daa
imul
ffree
lods
dec
aaa
mov
pop
cwtl
jp
xor
test
mov
aaa
dec
shrb
mov
lods
sub
mov
jnp
xor
ljmp
nop
sbb
cmpsb
xchg
jecxz
jns
aas
mov
xor
pop
mov
insb
mov
cmp
push
push
pop
pop
sub
sub
xchg
xor
loop
mov
notb
adc
pop
sbb
jo
lcall
sahf
insb
sub
xchg
pop
loope
dec
je
test
je
int3
divl
mov
in
lcall
mov
mov
xor
push
mov
lea
dec
test
test
mov
mov
pop
cmp
inc
imul
push
ja
test
jg
mov
dec
pop
inc
dec
inc
movsl
cltd
jnp
insb
cltd
les
dec
xor
inc
sbb
xchg
pop
lcall
jbe
sbb
mov
test
push
xchg
add
ds
popf
xchg
xor
jl
test
movsl
pop
popa
mov
push
loop
test
loope
daa
mov
push
sub
testl
and
test
pop
push
mov
pop
aam
ret
mov
pop
sub
lods
pop
pusha
adc
dec
mov
sti
outsb
sub
out
hlt
mov
les
push
mov
leave
sub
mov
loopne
xchg
stc
mov
sub
adc
or
lcall
mov
iret
xor
cli
pop
int
mov
shlb
mov
push
cmpsb
enter
arpl
sbb
pushf
arpl
std
int3
iret
cmp
jp
mov
cmp
clc
mov
into
lods
adc
in
xor
push
inc
addb
fsubrl
xor
jo
sbbb
push
lods
shrb
push
les
and
push
adc
cmpsb
inc
pushl
call
in
imul
test
daa
mov
int3
jle
or
rorb
jl
call
and
dec
fsubp
mov
filds
call
push
jg
jb
xor
dec
pop
ds
add
in
arpl
inc
stos
xchg
mov
mov
dec
mov
push
scas
xchg
and
xchg
push
cmp
repz
test
leave
dec
int3
insb
jg
cwtl
in
dec
xchg
imul
pushf
fimuls
push
xlat
dec
jbe
scas
inc
ret
cmp
ret
call
jnp
xor
and
movsb
mov
daa
mov
jnp
xor
push
cmpsb
push
scas
jns
lods
push
ss
cmc
into
or
lods
insb
jg
cmc
je
addr16
and
inc
mov
push
hlt
in
ds
icebp
and
sub
push
das
frstor
rcll
shrb
repz
jbe
in
xlat
mov
mov
jnp
sub
rorl
aas
gs
addr16
les
mov
pop
xor
cmc
xchg
mov
subb
or
inc
xchg
hlt
mov
test
sub
lds
mov
mov
xchg
mov
pusha
mov
and
sbb
nop
mov
stos
xor
mov
mov
jae
out
fldt
sub
stc
sbbb
stos
stos
adc
outsb
imul
negb
mov
mov
inc
frstor
mov
xlat
sub
dec
leave
outsb
movsl
call
sub
lods
mov
outsb
leave
loop
adc
dec
mov
push
xchg
in
mov
mov
sbb
xlat
mov
xor
aad
arpl
mov
jge
sahf
mov
cs
mov
mov
stos
sbb
mov
sarb
or
test
inc
loop
fiadds
sbb
pop
outsb
in
or
xor
mov
fmull
sbbb
mov
arpl
and
add
inc
sbb
pop
sbb
adc
sub
popa
in
int3
push
rorl
in
mov
std
test
push
adc
loop
inc
fcmove
mov
mov
dec
arpl
roll
mov
add
and
outsl
test
aas
stos
mov
mov
inc
test
fcoml
mov
mov
pop
or
cwtl
mov
dec
jo
out
xor
insb
ret
lret
sub
ret
sub
add
sti
or
rep
pop
inc
xor
inc
mov
inc
sahf
sub
mov
aas
sub
ret
in
cs
pop
je
icebp
pop
outsb
lea
jo
inc
inc
jbe
outsb
mov
dec
jnp
push
or
es
adc
outsl
push
out
sbb
daa
insb
adc
mov
pop
mov
rolb
popf
add
cmp
decl
addr16
mov
stc
mov
push
dec
dec
rcr
pop
cmpsl
mov
in
sahf
mov
out
cmpsb
inc
pop
xor
lahf
push
test
and
out
dec
cltd
shrb
xchg
nop
scas
xor
push
pop
inc
fsubp
leave
icebp
nop
lods
mov
aaa
mov
xor
movsb
push
test
cltd
lods
mov
clc
push
icebp
leave
xchg
aam
sub
dec
xor
inc
movsb
inc
mov
cld
xchg
or
lret
je
in
je
rclb
popa
xor
jbe
lods
mov
shlb
inc
inc
fidivs
test
sub
test
stc
leave
popf
xchg
sub
scas
xchg
js
das
lods
cld
repnz
mov
xchg
mov
mov
aad
orb
push
xor
cld
add
repnz
xchg
in
add
addr16
lods
push
arpl
xorb
das
xlat
popf
jae
mov
insl
and
xor
inc
cmp
inc
cwtl
popf
mov
shll
mov
mov
icebp
mov
pushf
lcall
and
adc
add
test
jae
or
pop
push
into
mov
jecxz
cmpsb
jns
cmp
icebp
pop
ds
stos
sbb
out
cmpsl
ficoml
shlb
jl
mov
das
popa
pop
jge
mov
movsb
mov
pushf
mov
pushf
mov
pop
pop
test
jle
test
repnz
cmp
popa
popa
add
out
test
add
sub
and
sub
push
mov
les
cmpsb
cmc
mov
sti
adc
push
clc
fs
push
sti
data16
gs
shl
mov
jno
inc
sub
nop
stos
mov
test
jno,pt
add
call
mov
pop
jl
les
in
fs
xchg
xor
inc
cmp
sbb
test
fs
cmpsb
daa
inc
insb
jne
mov
test
outsl
xchg
jecxz
lock
loope
mov
insl
push
test
mov
mov
in
push
jb
out
daa
imul
jae
mov
nop
js
outsl
insl
stos
lcall
cwtl
stos
mov
push
xor
shrb
shlb
daa
and
loop
enter
push
xchg
outsl
mov
test
rcll
jmp
xchg
stos
push
mov
fwait
fs
pop
mov
mov
jno
and
pop
cmpsb
fildll
inc
and
inc
jnp
xor
nop
shll
movsb
ret
in
xor
xlat
jg
mov
sub
movsb
fsubl
lock
push
mov
mov
jns
or
add
jno
ficompl
xchg
sbb
push
scas
lds
sub
mov
and
ljmp
or
add
arpl
movsl
sub
adc
or
dec
cwtl
xchg
mov
mov
insb
and
insb
and
xchg
out
aam
push
int3
stos
mov
sbb
cld
lahf
pushl
lahf
movsb
cmp
cmpsb
mov
jb
lds
addr16
jne
test
mov
jae
fdivs
adc
aas
mov
pop
cmp
xor
scas
xor
pop
jb
stos
test
jae
xchg
mov
lods
imul
mov
mov
stos
jns
inc
ret
addl
and
out
jge
lret
xor
fwait
cmp
dec
mov
lock
int3
dec
jns
outsb
pushf
outsb
jnp
xchg
mov
xor
inc
jp
fnstenv
loop
pushf
decb
mov
outsb
out
scas
xchg
cwtl
fnstenv
fnstsw
aad
mov
jbe
scas
jo
xchg
popf
addl
pushf
cld
movsb
add
shlb
je
mov
lds
outsb
das
movsl
mov
ljmp
xor
scas
sarw
cmpsb
inc
jnp
sahf
jbe
xchg
cmc
and
mov
sbb
mov
xchg
lret
movsl
pop
in
lret
movsl
mov
cmp
mov
cltd
in
push
adc
fs
jle
push
shl
push
pop
clc
dec
lock
cmp
lret
insl
mov
in
in
cwtl
inc
ret
xchg
imul
fistps
mov
fs
test
adc
das
mov
pushf
inc
enter
sub
lcall
cmp
sbb
mov
xchg
jecxz
aas
sahf
xchg
pusha
xor
mov
stc
cmpl
movsb
push
mov
aas
mov
mov
test
mov
xchg
mov
lods
stos
shrl
jmp
cwtl
xchg
pushf
mov
in
dec
cltd
insb
lret
mov
sub
lret
push
dec
mov
xchg
mov
jl
fldcw
pop
pusha
pop
mov
cmc
fisubrl
mov
addr16
leave
xchg
mov
dec
imul
jp
mov
xchg
arpl
shll
push
ja
imul
das
jb
inc
arpl
mov
insb
jns
fildl
push
lods
test
test
add
lods
sub
adc
aas
cwtl
or
xor
jecxz
loop
test
mov
add
out
lock
leave
pushf
stc
or
mov
sbb
stos
stos
shrb
push
add
das
adc
jecxz
mov
sub
outsb
cmc
int
loopne
ret
mov
in
nop
adc
push
mov
mov
cmp
lea
out
inc
push
lock
stc
pop
stc
xor
shll
movsl
jle
rorb
into
leave
arpl
dec
push
outsl
icebp
adc
popa
in
xchg
jge
aaa
add
repz
jp
or
fistpll
jo
in
sbb
and
int3
sahf
pop
cmp
fcoms
jecxz
and
push
pop
test
int3
dec
sub
cmp
mov
jg
jle
jo
ret
cwtl
mov
sub
cmp
lods
daa
cwtl
lea
nop
sub
movsb
mov
adcl
test
cwtl
and
cmpl
cmpsl
xchg
movsl
sub
push
movb
test
push
adc
inc
lret
mov
push
inc
or
in
inc
xor
inc
push
mov
mov
cmp
pop
jae
push
mov
incb
cmpsl
adc
xchg
pop
enter
or
pop
minps
nop
les
imul
dec
pop
jp
adc
adcb
push
or
leave
scas
ficoms
cs
jl
scas
and
sub
cwtl
jo
ja
mov
lcall
aaa
jmp
imul
mov
stos
jne
fsub
pushf
ja
call
jp
xor
ret
ss
mov
fldl
cmp
mov
daa
mov
mov
push
into
and
jmp
xchg
jae
test
push
test
int3
sbb
fidivl
ja
mov
pop
xor
lret
xor
mov
dec
mov
repz
popf
ja
test
cmp
xor
cwtl
adc
pop
and
mov
cwtl
adc
test
mov
xchg
jae
push
xchg
repz
in
lock
fsubrl
and
inc
sbb
xchg
ret
mov
jg
xorb
cltd
mov
cmpsl
dec
test
or
int3
mov
out
inc
movsb
addl
ret
mov
adc
daa
test
sub
insb
cmp
mov
xchg
lret
stos
xchg
and
gs
pop
test
out
int3
call
je
aas
cmpsl
dec
pushf
int3
xorb
sbb
fildll
stos
and
push
mov
cltd
stos
adc
gs
sub
xlat
repz
push
mov
jbe
stos
jb
jl
and
arpl
fdivr
push
scas
icebp
repz
cmc
mov
jmp
xor
mov
mov
mov
mov
shll
aas
cwtl
and
data16
into
daa
xor
lock
pop
push
adc
mov
mov
xor
cmp
pop
int
jno
jo
fsubrs
scas
movsb
loopne
push
jecxz
add
pop
mov
mov
mov
mov
xchg
nop
mov
aas
mov
cmp
arpl
xor
bnd
idiv
jmp
pop
aad
sbb
icebp
stos
mov
cld
xchg
mov
dec
xchg
repz
cmpsb
ss
jns
out
adc
and
das
fnstenv
stos
jns
nop
lock
or
out
sub
inc
jl
popa
out
or
inc
cltd
movsl
sub
and
lret
push
or
sub
inc
push
pop
mov
mov
pop
mov
mov
mov
xchg
mov
sbb
push
arpl
call
fsub
call
lret
stc
cwtl
repz
lods
xadd
test
testl
and
push
inc
outsl
mov
and
iret
imul
cmpsl
cmpsl
inc
mov
dec
jp
bound
aad
in
lods
pop
popa
mov
jb
add
inc
imul
lods
mov
and
stos
mov
mov
repnz
mov
ss
push
imul
mov
cmp
cli
dec
push
mov
aad
add
sub
lret
and
xchg
jae
in
or
decl
dec
sbb
bound
insb
pusha
mov
ja
mov
mov
sbb
xchg
inc
scas
cmpl
xor
mov
in
lods
jp
sub
cmpsb
mov
xchg
pop
pushf
loopne
mov
inc
sbbb
leave
out
shlb
pop
inc
fidivrl
hlt
test
jmp
ret
jae
adc
mov
insl
jl
xor
or
mov
dec
jg
push
xchg
pshufw
pop
cmp
xchg
pushf
pusha
sbb
dec
push
repnz
mov
jmp
push
pop
mov
sub
hlt
mov
movsb
mov
scas
das
das
scas
mov
cmpsb
out
ret
stc
outsl
add
daa
sbbl
pop
mov
dec
cmp
hlt
scas
das
loop
mov
orb
lock
lds
mov
dec
or
add
add
sahf
add
fwait
ljmp
mov
shll
jo
scas
das
pushf
push
outsb
aad
sub
sbb
xor
mov
adc
pop
mov
push
mov
xchg
shll
leave
out
fidivl
popf
xchg
nop
dec
pop
push
mov
aam
js
aas
xchg
jl
xchg
ds
stc
subb
xor
mov
inc
adc
push
imul
push
inc
fs
jnp
mov
dec
insb
rolb
inc
mov
mov
aad
lods
movsb
mov
popf
push
xor
mov
aas
mov
lret
out
and
sub
push
push
es
sub
inc
xor
push
jp
xchg
ja
or
popf
test
arpl
pop
pop
pop
sbb
mov
mov
pop
and
test
push
movsb
sub
nop
mov
scas
xchg
test
jb
call
insb
mov
pushl
jb
jmp
adc
addr16
imul
or
mov
dec
jp
shl
inc
xchg
mov
sti
imul
inc
aam
mov
mov
rcr
pushf
xchg
lock
push
push
cmpsb
int3
mov
out
mov
mov
cwtl
test
jno
add
xor
subb
adc
sbb
cli
test
pushf
cwtl
sbb
cs
xchg
std
push
hlt
cmp
cmp
adc
enter
sbbb
jp
fdivr
mov
mov
or
shll
int
jb
test
pop
sbb
or
shlb
dec
movsb
jmp
lods
dec
pop
add
mov
outsb
ja
je
scas
mov
mov
shlb
xchg
mov
rcrl
int3
mov
xor
es
cmp
lea
fisubs
add
out
mov
daa
aaa
dec
aam
adc
push
or
insb
or
cwtl
rclb
mov
rcl
test
stos
add
or
cmpsl
imul
and
pusha
pop
jb
xchg
pop
jno
hlt
arpl
inc
or
outsb
xchg
dec
xchg
jge
lods
pusha
rolb
or
lods
adc
lods
sbb
push
dec
sub
aaa
shlb
bound
shll
in
pop
stos
das
stos
xchg
out
dec
pop
jno
or
pop
pop
and
arpl
sbb
push
mov
arpl
aas
hlt
loopne
mov
clc
aas
cmpsb
ss
fwait
shlb
sti
dec
mov
shll
movsl
das
jnp
arpl
aam
sub
or
mov
movsb
jae
jns
in
cmc
jmp
dec
jmp
cmp
push
bound
stos
adc
push
fmuls
xchg
dec
xchg
je
pop
mov
and
inc
mov
mov
xor
or
pmulhw
jmp
cs
jnp
mov
imul
push
xor
pop
aam
test
int3
cmp
jb
ret
or
or
sub
add
fdivrl
xchg
sub
push
pop
mov
adc
xor
sahf
je
add
fwait
in
ljmp
mov
xor
push
adc
xorl
push
mov
out
mov
pop
xchg
shrl
loopne
in
lock
int3
ret
pop
clc
out
mov
mov
fdivl
leave
mov
add
loopne
scas
in
int3
and
cld
outsl
sbb
ss
inc
ds
sbb
test
or
jp
mov
push
lods
sub
fiaddl
pushf
in
pop
mov
mov
stos
imul
popa
dec
mov
and
mov
int3
nop
enter
xor
sbb
mov
mov
inc
push
int3
gs
inc
popa
rcl
jo
imul
push
shrb
decb
inc
out
cld
lods
push
jecxz
lahf
inc
cmpsl
mov
push
aas
out
add
stc
jmp
or
imulb
add
repz
push
mov
jge
lahf
sub
clc
bound
jp
xor
imul
xor
and
pop
jno
movsb
js
enter
or
sub
subb
cmp
popf
daa
jae
loope
mov
js
mov
mov
jecxz
insb
icebp
stos
dec
stos
int3
cmp
xor
sahf
sti
cwtl
cmp
les
push
jae
dec
xor
movsl
add
shrb
out
add
jns
shll
xor
or
insb
mov
sub
sarb
inc
push
mov
sahf
sub
push
bound
sbb
and
sbbb
jnp
and
mov
push
outsb
and
pop
and
mov
jnp
jb
add
push
sarb
test
pop
jbe
xchg
lods
jae
cmpsl
xchg
mov
pusha
xchg
call
inc
sbb
sub
mov
mov
stos
shrl
mov
cld
or
or
test
aaa
test
popf
xor
cld
or
xchg
je
add
and
sub
dec
mov
xor
sub
or
in
jo
les
xor
push
or
pop
or
or
stos
add
mov
cmpsb
adc
adc
test
mov
and
inc
mov
push
xchg
push
andb
pop
ret
addr16
cmp
fs
leave
dec
mov
call
push
shll
adc
movb
outsl
mov
xchg
pop
xchg
int3
test
inc
push
icebp
std
jnp
lcall
cmpsl
cmp
xchg
aas
pop
ljmp
fwait
cmp
jmp
icebp
pop
jb
cwtl
cmp
out
sub
fwait
jb
sahf
daa
outsb
test
pushf
cltd
fsubrs
mov
mov
scas
idivb
pusha
test
pop
insl
enter
repnz
push
sti
inc
mov
pop
jecxz
mov
in
cmpsb
leave
mov
lods
xchg
movsb
addr16
rorl
ljmp
push
mov
lods
pop
shrb
sub
mov
je
push
mov
popf
inc
dec
fadds
or
je
les
mov
mov
mov
ret
scas
in
in
xchg
inc
or
fadds
xor
jae
pop
adc
nop
or
mov
movsb
into
out
jb
lods
pop
mov
test
inc
jae
mov
test
mov
pop
and
fmull
sub
xchg
sub
test
out
int3
outsl
stos
push
adc
in
nop
scas
popl
or
jae
mov
test
mov
and
add
repnz
in
pop
jno
jmp
jle
inc
stc
jl
arpl
int
out
dec
mov
imul
adc
das
shrb
add
sub
or
adc
test
cmp
inc
inc
xor
cmpsb
jp
aas
bound
add
mov
out
pop
jmp
jns
add
std
int3
shll
nop
addr16
outsb
mov
or
sub
adc
into
lret
xchg
mov
cld
add
fdivl
dec
aam
movsl
test
ljmp
aam
cmpsb
mov
fcmovnbe
jno
jns
dec
out
call
pop
test
pushf
test
aaa
push
or
loop
out
xor
in
ss
scas
aam
int3
cltd
jo
xchg
mov
js
out
rorl
xor
inc
cmpsb
add
pop
pop
imul
mov
sub
lds
mov
pop
pop
xchg
adcb
scas
int3
xor
sbb
movsb
leave
jns
or
dec
xchg
aam
fwait
mov
xchg
add
pop
cli
shll
int3
mov
fldenv
xor
call
in
mov
jl
xchg
fwait
lods
dec
push
lret
scas
pop
lcall
mov
into
nop
sahf
xchg
xchg
nop
shrb
mov
xor
leave
outsl
daa
das
cmpb
hlt
pop
ds
loope
mov
mov
cmpsb
push
lods
mov
xchg
jno
cmpxchg
xor
shrb
lods
icebp
scas
movsb
mov
xchg
ret
clc
adc
inc
add
push
mov
cmp
xor
pop
inc
jbe
aaa
dec
mov
sub
scas
ja
rcl
ss
xor
aaa
arpl
sti
iret
push
repz
dec
cmpsl
std
imul
movsl
xor
adc
mov
xchg
ljmp
test
fs
cltd
in
outsb
xchg
repz
or
lea
lahf
movsb
xor
inc
out
rclb
into
push
out
jge
inc
jae
js
rcrl
sub
push
fs
adc
addr16
mov
mov
xor
jno
dec
push
jne
hlt
aaa
stos
xor
dec
js
xchg
jb
pushf
mov
pop
cmp
mov
xlat
das
adc
push
mov
stos
sub
push
dec
repnz
inc
pop
outsb
cmp
mov
pusha
test
cwtl
imulb
mov
aam
xchg
push
scas
xor
xor
xchg
mov
mov
cwtl
jp
pop
cmpsb
push
movsb
and
mov
std
aaa
jns
inc
mov
test
test
cmpsb
rcrb
popa
xchg
popf
test
jb
rcr
scas
adc
jmp
cli
add
mov
in
rolb
cmpsb
test
call
std
call
pusha
fwait
dec
lahf
lods
dec
mov
iret
pop
lret
xor
push
inc
mov
mov
push
cmp
lock
ja
insl
sub
pop
adc
imul
pop
daa
inc
mov
mov
xor
mov
jo
scas
inc
push
dec
rclb
movsb
jmp
mov
movsl
fstps
lods
sub
xor
fs
dec
cmp
lods
stos
xor
dec
jns
jmp
cmpsl
aas
inc
or
bnd
xchg
and
and
bound
jo
pop
sub
push
mov
lock
sub
push
sub
cwtl
movsl
arpl
enter
xchg
stos
mov
mov
aaa
mov
ss
lret
cmp
mov
ja
lcall
mov
xchg
outsl
push
fdivrs
popa
xor
sub
pop
jg
sbb
repz
insb
cwtl
push
iret
mov
les
imul
mov
and
enter
mov
leave
fwait
pop
movsb
jp
sub
or
push
mov
adc
insb
pop
or
xchg
and
outsb
xchg
inc
js
loop
mov
cli
gs
mov
mov
mov
negb
out
mov
add
out
xchg
imul
pushf
nop
pop
lea
movsl
push
mov
xchg
mov
mov
mov
xchg
push
shlb
xchg
pushf
psubusw
mov
pop
jbe
jno
std
jecxz
xchg
in
xchg
fwait
daa
cmp
out
xchg
icebp
jne
imul
mov
outsb
leave
in
mov
scas
push
mov
cwtl
mov
cmp
imul
stos
nop
and
jbe
aas
aam
test
in
jmp
subb
scas
js
xlat
cmpsl
lahf
pop
mov
xchg
repz
jnp
aas
popf
xlat
popa
pop
mov
mov
push
rclb
stos
push
jb
push
movsb
adc
int3
fldcw
je
rcll
in
movsl
ja
jmp
mov
pop
sub
orl
xchg
in
and
push
icebp
mov
out
rorl
sub
cmp
jge
jns
inc
insb
jle
mov
ds
mov
and
ds
scas
repnz
stos
push
xchg
add
pushf
cli
scas
sub
xchg
mov
mov
add
scas
sbb
jo
sub
leave
test
or
imulb
js
cltd
cli
mov
jbe
shll
mov
aaa
push
test
test
lea
cwtl
sub
inc
xor
mov
add
adc
std
scas
test
movsb
dec
mov
outsl
xlat
mov
add
dec
add
and
mov
or
vpunpcklbw
adc
sub
pop
movsl
cmpsl
push
inc
xchg
xor
les
adcl
mov
nop
cmp
sbb
mov
mov
inc
icebp
xor
in
movsb
ljmp
outsb
lods
cmp
sub
add
mov
adc
xor
es
jae
orb
pop
jns
inc
or
out
insb
stos
push
adc
mov
sub
jnp
inc
cwtl
sub
add
popa
xorl
ffree
addr16
pop
enter
pop
mov
cmp
dec
int3
stos
rorl
sub
movsl
cs
sub
aaa
push
mov
lds
cmp
bound
mov
sub
xchg
sbb
sti
mov
andb
ljmp
xor
adc
jmp
aad
jo
mov
jns
cmp
nop
and
pop
stos
lods
and
pushf
je
ds
sub
xorb
icebp
mov
repz
pop
imull
bound
push
int3
out
decl
xchg
movntps
imul
leave
in
xor
mov
frstor
pop
out
adc
lods
je
mov
test
mov
in
adc
insb
lods
test
nop
fwait
mov
mov
cmpsb
push
xchg
push
sbb
leave
push
xchg
pop
imull
js
out
cmp
push
jge
cmp
mov
scas
shlb
fwait
cs
fimuls
xchg
mov
daa
cltd
xor
test
xorb
push
adc
adc
popf
test
mov
icebp
xor
mov
cmp
pop
cmc
insl
repz
xchg
aas
adc
cs
sub
push
dec
scas
mov
stos
int3
subl
das
sahf
sahf
cmp
sub
sub
scas
enter
xlat
mov
shrb
ret
xor
jge
pop
daa
pop
rcll
imull
clc
jno
jae
xchg
imul
mov
mov
dec
aas
in
pop
cmp
mov
pop
insb
dec
jg
xor
xchg
pop
xchg
lds
xor
int
sbb
in
mov
pop
sub
out
mov
sahf
sbb
dec
dec
jbe
and
lcall
insb
cltd
xchg
xor
sti
leave
shll
jo
xor
das
outsl
jb
cmc
leave
imul
movsl
dec
call
add
push
xchg
mov
sbbb
cmpsb
gs
js
leave
aam
addr16
push
add
inc
mov
mov
jmp
pop
cmpsl
mov
pop
mov
jp
hlt
pop
add
mov
sub
fisubrs
push
mov
outsl
cmp
cli
mov
test
sub
test
xchg
adc
and
fwait
pop
movsb
aaa
test
repnz
cmp
stos
sub
push
mov
in
mov
mov
je
arpl
ja
shll
loop
xor
jp
in
lods
cmp
and
jge
mov
adc
xchg
daa
xchg
mov
js
sbb
sub
cmpsl
pushf
jns
pop
mov
rcrb
inc
insl
and
sub
in
ret
jecxz
rclb
jmp
insb
cmp
inc
fnsave
xchg
mov
outsb
or
sbb
aas
cmp
sub
pop
sub
jne
leave
das
dec
adc
movsb
inc
jbe
xchg
pushl
ret
aas
ja
mov
lods
push
sub
ss
adc
imul
cmp
jmp
test
lods
mov
push
add
test
stos
arpl
sbb
xor
dec
nop
int3
xchg
push
fcoml
sub
sub
inc
mov
and
lods
adc
xor
in
loop
aam
mov
fwait
das
outsb
inc
cld
mov
jns
cmp
movsl
mov
mov
test
push
lcall
sub
sbb
leave
lds
xor
and
mov
sub
dec
hlt
xor
push
gs
int3
mov
sub
sbb
mov
mov
icebp
aam
mov
movsb
scas
dec
lods
mov
jno
sbb
sbb
imul
push
movsb
inc
cmpsb
ljmp
xchg
inc
ret
push
pop
sbb
mov
hlt
fs
xor
jb
aaa
push
or
clc
and
add
inc
mov
sub
pop
das
hlt
sti
ljmp
leave
lds
test
pop
inc
dec
jmp
mov
pop
je
pop
lods
insl
cltd
and
imul
xlat
jl
cmpsb
mov
test
sub
jecxz
out
push
test
bound
pop
adc
mov
fstpt
test
movsl
xor
mov
daa
pop
cwtl
mov
test
push
push
or
lret
mov
in
shl
ret
aas
or
dec
jge
repnz
mov
cvtpi2ps
clc
pushf
stos
lahf
and
inc
add
ljmp
lahf
xchg
bound
mov
sbb
jnp
outsl
pusha
ja
xchg
xor
loope
rorb
or
sbb
sbb
sbb
push
jecxz
movsb
sub
jae
ja
stos
xchg
xor
das
xor
movsb
xchg
ja
and
ja
lods
lods
sub
lahf
xchg
mov
jae
loope
pop
cli
ret
mov
xchg
cmp
outsb
pusha
adc
and
mov
and
and
imul
cmpsl
sbb
call
notb
repnz
daa
js
lea
in
inc
test
aad
push
sub
repz
popl
ja
ret
int3
aam
and
mov
jg
sahf
pop
xchg
mov
xchg
aas
loopne
add
bound
xchg
push
ss
into
outsb
jae
jbe
jo
movsb
stos
js
xchg
ds
mov
dec
dec
popa
mov
imul
cmp
adc
pop
das
xchg
addl
js
int3
mov
insl
les
or
dec
div
mov
rcrb
les
jns
sub
nop
cmpb
adc
mov
jl
inc
jnp
pop
mov
repz
outsl
xor
and
sbb
insb
icebp
test
jp
js
mov
out
mov
mov
repz
aas
jmp
mov
das
int3
push
and
sub
xor
in
scas
mov
into
out
pop
mov
and
add
mov
sub
imul
push
push
les
jo
sahf
mov
fs
sub
add
pop
ds
popa
lcall
int
shlb
movsb
mov
mov
bound
scas
fadds
arpl
push
clc
fcmove
pop
popf
jle
fwait
mov
scas
pop
adc
imul
scas
cs
push
aas
movsb
ds
sbb
test
int3
sub
adc
mov
sbb
fs
ret
cmc
pop
mov
pop
fsubrs
mov
mov
fs
scas
rclb
cs
out
pop
mov
jo
sub
leave
pusha
jno
scas
or
fcmovb
xor
xchg
outsb
push
out
jecxz
inc
xlat
mov
mov
imul
dec
or
aam
sub
mov
ret
insb
pushf
in
adc
imul
aad
aam
outsb
pop
mov
mov
jno
mov
rcrl
xchg
sbb
inc
cmpsl
jbe
cmp
xchg
daa
rorb
jb
pop
sbb
xor
pushf
movsl
and
repnz
test
leave
sub
imul
sub
sub
pop
xchg
xchg
xor
or
inc
sbb
sub
or
and
popa
fwait
rol
scas
push
movsl
jae
mov
xchg
cmp
popf
movsl
mov
mov
lea
and
mov
pop
adc
pop
xchg
repz
xchg
shrl
push
or
stos
push
arpl
cmp
pushf
leave
push
mov
shrl
push
lret
xor
and
xor
mov
push
jnp
xchg
inc
je
je
das
mov
lods
ret
lods
push
int3
inc
cwtl
cltd
mov
mov
scas
push
subb
mov
jns
inc
sub
dec
jecxz
addl
aam
pshufw
cmpsb
or
xor
fwait
jb
mov
stos
xrelease
test
popa
push
andl
int3
sub
nop
frstor
inc
js
push
ret
mov
aaa
mov
mov
inc
fsubp
mov
mov
test
dec
rorb
push
clc
sbb
push
cmp
jns
jmp
pop
pop
sbbl
dec
or
stos
int3
icebp
in
psrld
jg
mov
pushf
xor
xchg
mov
xchg
daa
fs
les
xchg
inc
push
xor
adc
outsb
scas
stos
arpl
mov
xchg
leave
xor
xor
dec
fmuls
je
mov
fwait
jp
xchg
xchg
adc
jl
push
pop
xor
pop
mov
sarb
ja
xchg
aaa
pop
testb
push
and
xor
xor
inc
daa
sub
xor
push
xchg
lods
lds
mov
push
xor
sub
std
mov
mov
jp
mov
mov
sbb
popf
test
and
out
scas
imul
xor
leave
mov
lods
sub
xor
jno
mov
popf
cmpsl
adc
xor
addr16
sti
cmpsl
movsl
push
push
jmp
mov
popf
icebp
insb
iret
xorl
mov
shr
in
inc
popf
mov
ret
popa
roll
mov
xor
pop
xor
movl
cmpsl
shlb
mov
mov
sbb
int3
sti
push
jo
adc
cld
mov
xchg
andl
mov
lock
and
push
dec
out
jno
adc
lret
filds
cltd
inc
mov
int3
out
and
dec
push
rcrl
repnz
jle
fsubrl
xor
hlt
mov
jo
sbb
ds
insb
fs
mov
lret
adc
dec
imul
rcrb
jmp
in
dec
jne
inc
lock
das
and
adc
mov
stos
or
repnz
mov
mov
incb
mov
xlat
fstpt
les
mov
testb
mov
jl
addr16
aas
mov
icebp
lods
cmpsl
mov
sub
lcall
outsb
gs
cmc
cld
mov
icebp
es
das
dec
push
lods
pop
adc
int3
cltd
stos
xchg
call
xor
cmp
test
mov
inc
pop
pop
mov
loopne
icebp
xchg
dec
and
mov
pop
ja
je
push
push
adc
daa
daa
scas
xchg
jl
sahf
scas
or
mov
js
cmp
mov
movsb
jb
dec
sahf
shrl
push
lods
lcall
mov
mov
sub
add
outsb
dec
sbb
jle
test
pop
int3
cltd
mov
sbbb
mov
pop
jl
inc
jbe
mov
outsl
mov
in
mov
cmpsb
xor
mov
leave
or
ret
stos
popa
insb
popf
enter
gs
addr16
imul
in
pavgb
xor
ret
pop
and
mov
jno
mov
dec
scas
push
mov
xor
inc
sub
sti
cltd
mov
ss
and
dec
cmc
sub
and
aas
cmpsl
dec
fbld
daa
push
pop
push
xchg
in
pushf
lret
ljmp
pop
movsl
std
pusha
cmpsb
mov
fwait
or
dec
cmp
pop
jno
test
or
lods
test
mov
ja
das
xor
xchg
frstor
jbe
jno
inc
scas
cmp
adc
cmp
cmp
pop
pop
xor
mov
daa
pushf
push
push
das
jbe
or
pop
mov
mov
pop
in
lcall
jae
and
negb
js
into
or
cltd
enter
push
adc
lahf
xlat
cwtl
test
orl
pusha
popf
push
sbb
pop
clc
and
cwtl
and
dec
repnz
sbb
xor
jb
or
or
loop
mov
xor
and
iret
jp
js
pop
sbb
out
insb
std
push
xchg
in
mov
movsb
mov
jae
xor
mov
mov
arpl
cltd
outsl
lea
lock
inc
xor
int3
mov
cmpsl
testl
pop
aad
sbb
pop
cmpb
dec
int3
pop
push
push
mov
pop
mov
movsl
mov
pop
mov
imull
test
js
mov
lcall
lods
cmpsb
xor
out
jl
mov
lcall
pop
in
adc
or
push
cwtl
mov
inc
cmpsl
dec
insb
bound
loopne
loopne
fistl
xchg
pop
mov
cmp
xchg
adc
add
cwtl
jge
orl
jae
lcall
sarb
std
and
aas
mov
int3
nop
inc
inc
roll
scas
sub
or
or
fdivrs
mov
sbb
mov
xchg
pop
push
fnstsw
push
jmp
add
mov
cmp
cmp
popf
lahf
movsb
mov
and
movsb
fs
in
lret
sbb
fincstp
out
jne
mov
xchg
adc
js
xorb
dec
push
xchg
pop
fistl
and
aas
loopne
cmpsl
inc
pop
fldt
in
xor
xor
aas
rcrl
lods
nop
les
shrb
ja
inc
nop
movsl
lret
xor
subb
lcall
mov
adc
mov
sub
sahf
mov
jecxz
jo
mov
stos
jl
fidivl
mov
repnz
push
cmp
in
popl
insb
add
mov
int3
lea
pushf
mov
pop
data16
std
or
pop
fidivrs
cmp
push
sub
pop
test
outsb
cmp
lret
dec
jb
pop
sbb
adc
ljmp
xchg
aam
mov
in
sub
mov
push
or
xchg
sahf
jl
pushf
stc
inc
sbbl
arpl
fs
lds
cmpsb
aas
scas
out
lods
shll
insl
mov
addr16
sti
stos
xorb
fistps
inc
pop
nop
dec
or
add
cmpsb
xor
outsl
addr16
das
mov
fwait
push
movsb
fucomp
je
out
mov
outsl
repnz
add
mov
mov
cmp
xchg
mov
xlat
cmp
push
jmp
fcmovnu
test
daa
mov
pop
xchg
sub
cmp
les
loope
and
cwtl
pop
loop
add
pop
adc
mov
shll
out
jbe
lahf
lahf
aam
outsb
test
cltd
lahf
sarb
cmp
movsl
roll
adc
pop
mov
imul
pushf
lea
pop
push
inc
ds
insl
scas
aam
mov
pop
cltd
fwait
lods
lods
jnp
and
mov
mov
mov
test
sahf
pop
fstps
push
mov
fcompl
mov
mov
repnz
inc
mov
mov
neg
lods
cmp
outsb
rclb
cwtl
insb
jns
aad
fisubl
cmp
adc
das
aas
mov
push
in
or
push
leave
lahf
and
std
mov
pop
aaa
cld
js
movsb
add
dec
andb
dec
and
aas
sbbl
cli
stc
jbe
bound
leave
mov
pusha
movsb
cmc
pop
mov
into
rolb
pushf
mov
sahf
dec
testl
mov
out
das
inc
and
imul
cmpsl
push
stos
lret
int3
mov
repz
push
inc
mov
jb
ret
xchg
xchg
jns
jbe
call
mov
add
mov
mov
stc
ror
adc
insb
jbe
lea
push
xor
inc
xor
imul
xlat
jmp
and
jae
fs
icebp
push
xchg
xor
inc
inc
popa
jmp
enter
sbbl
bound
mov
test
inc
mov
nop
lret
scas
leave
iret
pop
cmpsl
arpl
rdtsc
push
xchg
imul
paddsw
mov
pop
add
hlt
fwait
mov
xlat
mov
sbbb
mov
pop
xchg
in
mov
mov
mov
lcall
sbb
lcall
jb
ja
mov
pop
aad
pop
cmpsl
pop
cmp
xor
xchg
fnstenv
dec
adcl
jle
lret
icebp
xor
cmp
dec
sub
pop
xor
sbb
mov
int
add
mov
dec
stc
cli
mov
push
outsl
pop
scas
scas
stc
mov
pop
out
adc
mov
fs
sarl
pop
rolb
nop
movsl
loop
add
mov
fdivl
icebp
movsb
mov
push
pop
jo
mov
test
iret
lea
aas
popa
aam
mov
lock
int3
repz
fldcw
mov
or
notl
add
sub
je
lods
xor
lods
fsubrs
rolb
stos
fisubs
pop
clc
xchg
or
outsl
sub
fwait
cmpsl
xor
xor
and
aaa
pop
pop
in
pushf
xchg
les
ror
inc
popf
shrl
cmp
pop
dec
adc
mov
mov
enter
inc
cld
mov
leave
mov
mov
inc
test
sahf
fcom
imul
sub
mov
mov
jb
jo
nop
ljmp
dec
jmp
icebp
xlat
inc
xchg
jbe
or
hlt
lock
testb
jns
rorl
mov
cmpsl
xchg
mov
rcll
mov
adc
test
mov
mov
jg
stos
or
adc
lods
mov
or
scas
cld
pop
dec
pop
lcall
xchg
in
aam
enter
sub
test
push
lods
sub
lret
fs
jecxz
mov
and
mov
pop
xchg
leave
lret
mov
dec
pop
push
pop
xchg
mov
int3
mov
sub
aas
inc
mov
nop
scas
enter
jmp
imul
inc
js
mov
sarb
cmp
push
add
aad
gs
pop
and
andl
sti
test
jp
adcb
movsb
bound
xlat
sub
cmp
inc
jbe
jge
jnp
adc
mov
addr16
xchg
xchg
xchg
jle
jb
cli
popf
leave
cwtl
lods
jg
or
xchg
and
js
outsl
iret
xchg
mov
cmp
hlt
inc
leave
dec
fprem
dec
or
push
jnp
fwait
sub
gs
xchg
lahf
mov
test
movsb
outsl
leave
popa
lea
xchg
jge
and
push
xchg
pop
mov
inc
sub
rol
das
bound
aam
or
and
aas
imul
arpl
fdivrl
shrb
sbbb
mov
in
outsb
dec
push
test
ja
mov
mov
mov
dec
movsl
jmp
push
mov
cs
lock
pop
mov
dec
mov
xchg
rcr
stos
mov
cwtl
in
sbb
out
pop
mov
fdivrl
jle
mov
pop
out
int3
dec
aam
mov
cmp
sbb
mov
ret
stos
mov
sbb
inc
inc
mov
movsb
fidivs
test
scas
in
dec
dec
cmp
mov
push
sbb
sbbb
pushf
scas
or
sbb
pop
add
lahf
push
movsl
mov
xchg
cmpsb
test
vpsrlq
inc
cmpsl
sub
and
dec
mov
das
insb
cmpsb
xchg
mov
dec
mov
jmp
xlat
imul
and
or
sbb
fdivrs
xor
mov
ljmp
add
int
jle
test
addl
movsb
mov
scas
adc
popf
int3
lahf
test
push
lret
mov
imul
mov
add
xchg
popf
stos
cmp
scas
pop
xchg
add
adc
aam
xchg
repz
addb
xchg
in
cmpsb
lods
or
adc
leave
xchg
mov
cmp
popa
stos
test
and
insl
outsl
repnz
mov
ja
mov
jbe
xor
int
jmp
lret
cmpsl
call
cmpsl
movsl
aam
out
mov
dec
mov
scas
jl
xchg
pop
add
mov
jns
dec
push
rol
xor
push
lea
movsb
xchg
and
xlat
adc
sbb
cwtl
jo
mov
je
mov
aas
popa
arpl
repz
jae
mov
sbbl
mov
nop
mov
lds
pop
or
mov
mov
lret
xor
imul
jns
stos
pop
sub
xor
mov
leave
repz
aam
mov
iret
jb
mov
xor
xchg
sahf
pop
dec
loop
mov
lods
xorb
adcl
leave
mov
insb
test
mov
xlat
je
adcb
popa
pop
pop
xor
je
pop
inc
mov
movsl
popa
pop
lret
mov
xor
cli
arpl
sahf
mov
testl
mov
cwtl
movsl
loope
or
sub
cmp
fs
cld
and
je
xchg
in
in
test
xor
movsb
lret
sub
xor
xlat
mov
ljmp
dec
sub
shlb
leave
inc
imul
xchg
xchg
push
inc
jb
or
mov
ficoms
sbb
mov
cld
out
ficompl
imul
dec
pop
push
stos
xlat
repnz
addr16
jns
push
jge
cmp
test
pop
daa
mov
repnz
scas
mov
mov
cltd
dec
sub
rolb
jnp
inc
mov
loop
outsl
mov
data16
mov
push
mov
xor
jbe
lock
clc
cwtl
mov
out
mov
ret
aas
rcll
loope
stos
in
jb
cltd
pushf
leave
pop
adcb
mov
jmp
fbld
pop
mov
pop
dec
repnz
popf
mov
mov
pop
test
xlat
and
dec
inc
mov
push
pop
lds
mov
dec
dec
mov
lea
nop
lahf
cs
stc
jo
es
jp
push
push
je
repnz
push
adc
js
int3
leave
mov
jge
mov
shl
int3
je
cwtl
hlt
cmpsb
mov
popf
int3
push
dec
fistl
aas
dec
icebp
out
popa
insb
test
imul
data16
push
negb
xor
inc
cmpsb
jbe
in
int3
mov
jno
mov
mov
sbb
mov
mov
cmpsb
ret
mov
and
sbb
imul
in
enter
cmpsb
pop
in
scas
mov
sbb
xor
fdivl
xor
test
pop
rorl
mov
inc
aas
stos
jnp
sbbb
fwait
mov
mov
adc
in
dec
jno
pop
fadds
dec
mov
cmpsl
scas
pop
jp
fidivl
lret
test
jmp
test
adcb
inc
outsb
nop
jmp
inc
push
cmpsb
xor
xlat
mov
mov
and
jl
rorl
mov
jecxz
test
mov
xor
mov
int
cmpsb
push
data16
rorb
incb
sub
aam
sub
and
or
mov
mov
divb
sub
sub
jns
arpl
push
aaa
mov
adc
movsl
adc
call
in
xchg
pop
pop
lret
jns
movsb
sbb
jnp
lds
sbb
loope
mov
flds
int
sbb
xchg
mov
cltd
or
cwtl
push
mov
pop
sub
xchg
and
mov
fwait
jmp
loope
icebp
xor
test
push
xchg
fcompl
insl
ret
andl
push
cmp
jge
cmp
gs
pop
xor
and
cltd
int3
adc
mov
lods
int3
int3
pop
adc
jb
ja
call
inc
xor
leave
daa
bound
pop
lods
imul
cli
testl
sahf
mov
push
add
push
sub
stos
imull
je
mov
ret
pop
cmpsb
scas
sub
inc
addl
push
out
jb
das
test
push
mov
mov
mov
testl
mov
testb
fmul
out
sub
int
inc
adc
int3
sub
mov
in
leave
cwtl
jae,pt
fimull
shrb
ds
aas
lcall
cmp
cmp
xchg
sub
xchg
movsb
dec
aaa
xor
add
mov
sub
or
pushf
push
push
sbb
lcall
sbb
fcmovb
mov
loope
mov
shlb
add
cld
aas
aas
xchg
add
sub
sahf
sub
shrl
add
fsubrl
flds
mov
fistl
fxch
jo,pn
push
and
mov
movsl
xorl
stos
cmpsb
or
mov
xor
cld
test
and
and
inc
dec
ja
lods
push
fistpl
adc
jne
xor
xchg
or
ljmp
popf
fsubl
fwait
lods
sbb
adc
outsb
sbb
repnz
pop
inc
push
inc
mov
mov
leave
lods
xchg
stos
inc
imul
mov
mov
mov
adc
inc
mov
mov
mov
popf
jne
aam
es
push
and
out
scas
bound
mov
mov
out
fsubl
or
adc
jnp
cltd
mov
int3
xor
cmp
jbe
push
int3
pop
adc
push
dec
push
mov
jp
insl
cwtl
mov
or
outsl
cmpsb
adc
and
ljmp
push
xchg
mov
in
mov
xchg
sbb
jne
add
cmp
xchg
sub
cli
popa
sbbb
arpl
ljmp
ljmp
sahf
and
adc
lea
dec
cmp
movsb
sub
movsb
aam
mov
out
jb
jmp
xchg
jmp
rol
sahf
xchg
outsb
xchg
xor
adc
jne
cmpsl
stos
cmp
sub
data16
mov
call
xchg
call
push
call
fdivs
sahf
outsb
repnz
jne
adc
outsl
add
mov
mov
out
arpl
lods
out
enter
stc
jno
push
xchg
ja
ficompl
in
adc
bound
dec
pushf
shlb
ljmp
out
adc
cltd
xchg
out
stc
xchg
push
rol
sahf
xchg
outsb
xchg
and
mov
cmp
sub
daa
pushf
lahf
fs
pop
adc
mov
popa
mov
jb
aas
xor
aad
aam
jl
ret
fildl
mul
add
sub
mov
fldcw
mov
test
popf
fadd
ljmp
shr
push
cs
test
jp
fsubrs
lods
js
test
test
aad
lcall
mov
xchg
into
mov
mov
xchg
ljmp
cmp
movsb
ss
dec
insl
mov
cmp
xchg
jb
cmp
mov
push
cmpsb
jp
mov
movsb
mov
lahf
xchg
mov
popa
arpl
es
jg
lods
lock
movsl
das
pop
xor
ror
push
xor
xor
push
xor
push
sahf
and
mov
jno
push
xchg
addr16
das
bound
xchg
mov
pushf
hlt
data16
fiaddl
mov
cmp
lcall
mov
lcall
lods
adc
ja
mov
add
lock
cli
mov
fmul
popf
adc
lods
mov
push
pop
jl
mov
push
xor
xor
in
jne
xor
icebp
mov
shlb
sub
pop
push
fcmovnbe
imul
test
jecxz
add
bound
cmp
mov
lret
mov
shlb
dec
and
cwtl
mov
cmpsb
mov
xor
cmpsb
xor
test
xlat
inc
js
pushf
mov
xchg
hlt
std
lods
cmp
fdivl
mov
int3
dec
dec
movsb
and
push
adc
push
mov
clc
jge
stos
jb
mov
hlt
jmp
pop
push
jp
sbb
dec
cltd
and
sub
inc
popf
stos
int3
xlat
ret
test
pop
push
sbb
mov
mov
mov
aaa
sub
sub
mov
mov
out
test
mov
push
add
inc
add
push
ja
movsl
jae
xchg
xchg
setne
sub
mov
fidivs
mov
mov
addr16
stc
jb
cli
sub
mov
subl
pop
cmp
mov
cwtl
jg
cmp
insl
lock
add
jmp
aad
jmp
das
and
mov
aas
jbe
mov
mov
mov
cmc
mov
cwtl
dec
mov
enter
aas
stos
bound
out
xchg
push
gs
scas
mov
xchg
lds
xchg
push
movsl
jle
outsb
mov
jle
ret
mov
xchg
pop
int3
lock
pop
dec
into
jno
movsb
out
ds
add
lahf
loopne
test
pop
mov
cld
sbb
xor
stos
std
inc
dec
push
sub
push
imulb
scas
fbstp
pop
int3
repnz
divb
test
sub
lds
ds
jle
adc
adc
jbe
fs
adc
inc
xchg
mov
cmp
pop
lock
aas
cld
mov
repnz
rcll
mov
adc
lods
ss
push
dec
mov
or
cmpsl
mov
fst
adc
bound
mov
movsl
and
ret
scas
jo
xchg
lret
push
sbb
cwtl
cld
aas
dec
pusha
sub
es
or
mov
push
jne
jbe
inc
jbe
jns
rcll
mov
jnp
inc
aad
jl
cmpb
and
jecxz
xor
sub
data16
cmp
in
enter
jno
jne
insb
jbe
or
std
daa
js
inc
mov
lahf
test
or
leave
std
rolb
ds
push
arpl
jnp
mov
test
cmp
dec
cmp
mov
push
mov
or
aaa
xchg
mov
into
mov
add
loope
and
xor
adc
subl
rorl
mov
mov
loope
fsubrl
test
adc
aad
adc
and
pop
and
pop
in
jo
cli
sbb
testl
mov
nop
js
fstpl
jecxz
test
out
mov
mov
movsb
mov
pop
imul
imul
sub
mov
mov
mov
stc
lea
pusha
sub
lods
pop
aad
mov
fs
sub
sub
mov
rorb
adc
mov
xchg
mov
outsb
movsl
xchg
jns
cmp
xchg
lcall
cmpsl
stos
cmp
mov
mov
repnz
sub
sub
insl
push
push
sahf
leave
scas
push
nop
loopne
dec
cltd
dec
ljmp
adcb
mov
inc
stc
call
cwtl
out
insl
mov
cmpsl
add
into
fwait
test
roll
lods
test
jne
dec
cmpsb
xchg
xor
fisttpl
inc
fdivl
cwtl
adc
dec
push
and
into
mov
or
pop
jbe
mov
xor
inc
inc
aam
mov
cmp
mov
pop
ss
xchg
movsl
lcall
neg
mov
or
mov
jecxz
xchg
test
xchg
cmp
cltd
cwtl
int3
stos
mov
cld
mov
push
fwait
xchg
pushf
test
je
mov
mov
pushf
jns
mov
jb
cmpsl
popa
push
mul
stc
xor
icebp
jmp
sbb
out
pop
push
sahf
mov
jecxz
add
xor
and
mov
leave
int3
inc
pop
jnp
out
clc
enter
popa
fsubrs
or
jns
xchg
test
and
fildl
lds
jne
mov
pushf
imul
gs
cmp
and
cmp
cmp
cmc
xor
popf
shlb
stc
sbb
mov
push
jle
ds
ja
std
sti
jmp
sbb
shll
ror
movsb
cmc
adc
push
jge
inc
sbb
or
cmp
mov
jb
or
pop
movsb
pop
mov
xor
lret
mov
sub
jb
pusha
mov
sub
inc
mov
inc
add
push
adc
pop
and
ljmp
xchg
mov
cwtl
cmpsl
int3
mov
jmp
rcrb
decl
icebp
mov
cmp
test
xor
mov
stos
rcrb
test
mov
dec
imul
xchg
mov
dec
lret
je
mov
sbb
in
inc
push
push
cmp
daa
fs
or
jns
and
scas
test
xchg
mov
pop
lods
push
add
inc
aam
arpl
cmp
add
mov
pusha
sahf
int
inc
je
test
cmp
inc
inc
rorl
movsb
jns
test
movsl
ss
imul
popa
mov
jo
insb
push
mov
push
dec
mov
leave
lcall
ret
es
mov
adc
add
leave
aas
push
loop
divb
movsb
cmp
test
call
xchg
lret
adc
lds
bnd
cwtl
push
push
sub
jne
and
mov
xchg
sub
ljmp
nop
jle
ljmp
mov
or
xchg
mov
cs
inc
test
xchg
movsb
imul
lods
pop
cltd
addb
or
mov
test
popa
test
inc
xor
pop
or
fmul
push
out
iret
je
sahf
sarb
aam
push
push
test
inc
cmp
add
push
cmp
add
dec
ljmp
int3
jp
sub
xchg
jle
xchg
inc
inc
sahf
into
loopne
xchg
sbb
jb
mov
add
sub
in
call
stos
xor
test
xor
mov
imul
sub
rcll
cmpsb
int3
xchg
adc
stc
ret
mov
ret
or
aas
fwait
cs
inc
mov
xchg
popa
sbb
pushf
loopne
test
test
jae
pop
out
aas
and
jae
lods
lahf
push
or
movsb
insb
movsl
and
jo
adc
cmpl
in
imul
lea
mov
adc
lods
push
repnz
sbb
mov
mov
stos
push
push
dec
shrb
aam
add
xchg
inc
call
pushf
movsl
das
testb
mov
leave
dec
sbb
hlt
aas
jp
mov
outsb
popa
sub
daa
inc
or
movsb
pop
dec
lahf
out
push
mov
mov
stos
jle
cmpsb
out
insb
xchg
mov
jns
std
inc
adc
je
outsb
lods
fs
add
sub
and
xchg
lcall
push
loope
mov
cld
nop
pop
mov
lret
aad
jbe
xor
mov
add
pop
icebp
inc
adc
mov
arpl
loope
pop
je
jl
data16
mov
cmp
popa
call
mov
arpl
lret
cmpsl
test
cmpsb
ljmp
leave
mov
ljmp
sub
inc
sbb
xchg
adc
xor
adc
ss
xlat
push
mov
leave
or
fdivrl
mov
cs
xor
push
pop
xor
jl
pop
or
clc
add
dec
jnp
push
mov
add
int3
cmp
xchg
pushf
adcl
lea
jne
mov
je
xchg
fs
adc
ret
sahf
mov
lods
pop
shrl
cli
sub
mov
pop
push
mov
pop
or
push
xlat
sti
mov
fcoml
icebp
sbb
jl
cmc
pop
mov
leave
xchg
lock
lea
je
push
bound
dec
xor
mov
push
ret
rol
push
inc
repz
inc
sub
xor
push
xlat
stos
inc
mov
inc
fidivrs
repnz
pop
mov
ss
mov
pop
leave
bound
mov
jmp
mov
pop
push
mov
push
jmp
mov
enter
inc
movsb
es
push
sbb
mov
fmull
stos
insb
xchg
lret
aam
pusha
mov
popa
in
js
mov
xor
xchg
movsl
jmp
pop
rol
xchg
std
fs
jae
in
fwait
and
mov
push
jge
ja
int3
loop
push
mov
xchg
and
lods
jecxz
je
pushf
xchg
sub
jae
push
aam
adc
or
dec
add
loop
ljmp
cmc
sub
xchg
test
mov
dec
aas
outsb
pop
push
mov
pop
popa
dec
dec
sqrtps
or
int3
xor
xchg
imul
nop
xchg
leave
xchg
fdivs
bnd
fists
xchg
pop
in
scas
mov
stos
aaa
mov
out
push
fsub
outsl
mov
call
xor
test
jnp
loope
outsl
xchg
addb
int3
mov
shlb
or
fsubrl
stos
push
sarb
aas
jo
pop
mov
daa
mov
ss
xchg
sub
gs
xor
mov
sub
sub
mov
out
push
addr16
pop
mov
cltd
jb
mov
int3
lods
inc
xchg
mov
jns
inc
cmpb
cltd
aaa
cwtl
and
add
fsts
add
aam
and
loop
daa
dec
in
notb
insl
add
and
add
fcoms
std
fnstcw
mov
aad
add
rorb
dec
lods
dec
shld
sbb
add
push
mov
leave
scas
add
stos
bound
push
push
push
das
cmc
jecxz
hlt
divl
push
inc
das
out
lret
dec
mov
mov
mov
cmpsb
movsb
jl
mov
sub
imul
or
cltd
push
add
dec
mov
cwtl
repnz
pop
sbb
daa
scas
imul
into
jns
adc
jmp
xchg
push
call
lock
mov
lcall
jno
fldt
aam
movsl
pop
or
jne
mov
or
push
lret
leave
cmp
les
cld
fsubs
add
lahf
mov
pop
clc
lock
clc
mov
mov
fisubrs
jecxz
sub
movsb
fcoml
mov
pop
inc
rorl
add
mov
fiaddl
mov
dec
stos
push
adc
insl
sub
pop
inc
pushf
add
ljmp
mov
daa
cmc
bound
in
push
pop
or
ror
and
fwait
jmp
shrl
xor
outsl
jo
test
loopne
inc
lods
cmpsl
adc
push
loopne
cmp
add
outsl
inc
lahf
arpl
fdivrl
fs
jo
test
lods
xchg
xchg
in
andb
test
push
mov
mov
mov
dec
mov
out
xor
adc
sub
mov
cltd
fwait
cmpsb
in
xchg
cmp
dec
in
mov
sbb
inc
hlt
cmpsl
sub
mov
mov
test
stos
loopne
and
mov
mov
mov
xchg
in
xchg
int3
cltd
push
aad
movsb
cli
mov
jae
pop
mov
xor
mov
lds
jmp
fimuls
sub
repz
andl
andl
int
pop
rol
dec
mov
mov
mov
ss
lods
jne
mov
jae
sub
jns
lods
aas
push
push
stc
or
xor
insb
ljmp
mov
scas
jo
stos
aas
mov
in
leave
loope
rcl
xchg
adc
xchg
in
outsl
scas
jno
mov
test
dec
leave
fs
popa
add
ja
mov
pushf
shrb
xchg
or
mov
jne
lods
iret
and
xor
repnz
rorl
sbb
sbb
repz
iret
imul
out
jecxz
mov
jns
cli
ds
inc
cwtl
not
movsb
je
mov
jmp
mov
mov
aas
mov
mov
xchg
sub
jae
mov
repz
imul
aas
xchg
in
xlat
mov
ret
and
xor
xchg
divl
bound
inc
dec
xor
push
sub
adc
sub
movsl
mov
repz
inc
xor
lds
mov
inc
jo
push
mov
movsb
es
jae
outsb
pop
xchg
jno
ja
mov
sti
and
scas
outsl
jo
adc
lret
adc
mov
fcoms
test
lock
cmpsb
int3
fistpl
cwtl
mov
shll
push
repz
repz
stos
aas
shlb
mov
push
stos
lods
pusha
movsl
lea
adc
pop
call
jno
js
ja
cmp
or
stos
xor
mov
loope
mov
decl
mov
sbb
cltd
repnz
mov
push
mov
ss
mov
sbb
xchg
mov
mov
pop
push
or
jnp
scas
test
stos
xchg
ds
inc
lods
mov
fsubrl
ja
movzwl
ja
sbb
mov
dec
out
jb
xor
xchg
popf
sahf
xor
les
repz
xchg
aaa
cmpsb
pop
pop
jae
test
jnp
leave
bnd
cmp
dec
int3
xchg
inc
mov
xchg
lods
inc
fwait
test
pop
or
aaa
mov
inc
int
mov
mov
dec
scas
sub
into
sbbb
mov
enter
fs
jl
das
lahf
cmpsl
cwtl
jo
sub
int3
pop
jl
push
dec
shrb
ficompl
xchg
pop
cld
movsb
mov
fbstp
or
imull
mov
xchg
addr16
sti
mov
xchg
pop
mov
pop
xlat
cmp
jo
adc
xchg
mov
xor
loop
adc
ss
aas
popf
andb
jns
adc
shlb
push
hlt
jnp
fnstsw
lret
dec
sbb
push
or
push
cmpsl
dec
fwait
dec
xchg
jmp
scas
mov
shrl
mov
mov
xchg
dec
ret
push
sub
xor
jne
push
int
sbb
cmpsl
daa
sub
xchg
int
push
xor
mov
in
movsl
xor
cmp
mov
enter
cmp
movsl
aas
jl
je
addr16
cld
ljmp
push
insb
adc
pusha
or
sbb
xchg
cs
add
loop
cmp
cmp
add
lcall
sub
xor
inc
outsb
xlat
bound
arpl
jmp
lods
mov
test
in
sbb
out
popa
cmc
add
jns
test
add
pop
cmpsl
daa
mov
xchg
jmp
cmp
clc
push
push
fiadds
jge
push
les
test
mov
dec
aas
les
jecxz
fs
subb
inc
push
cmpsb
jo
cmp
jbe
lcall
cmp
add
adc
sub
sbb
ljmp
push
sub
lock
fwait
pop
pop
mov
cltd
cmp
daa
sbb
test
in
outsb
adc
int3
push
mov
sarl
mov
sub
inc
mov
lods
inc
xchg
jp
add
int3
mov
lcall
dec
test
ss
clc
push
push
xchg
out
pop
xchg
lahf
scas
push
dec
xor
xchg
sbb
dec
pop
imul
xor
and
mov
mov
mov
xchg
mov
sbb
enter
fs
xlat
cmpsb
cmp
xor
sub
push
sub
loop
lret
and
mov
mov
insl
les
jae
enter
mov
in
je
les
push
xchg
insb
mov
xorb
stos
lahf
scas
pop
mov
lcall
scas
imul
test
mov
push
dec
jo
clc
pop
movsb
shrb
outsb
inc
jno
in
test
xor
insl
cmp
hlt
aas
mov
cmp
mov
add
lret
loop
fs
pop
test
jne
jns
shlb
frstor
inc
popf
mov
lret
into
or
pop
xor
gs
xor
pop
and
xor
es
fnstsw
fsubs
das
mov
lods
andb
ret
pop
jne
mov
pop
mov
inc
xor
xchg
inc
xchg
sub
mov
ret
mov
pushf
jbe
lea
and
mov
sub
dec
repz
fists
push
gs
mov
sub
mov
cwtl
mov
je
mov
jle
test
mov
pop
lods
sub
test
xchg
xchg
mov
into
xchg
sti
or
in
xchg
xchg
xor
dec
xchg
push
insb
test
jo
add
inc
pop
mov
and
lea
mov
xlat
jno
movsl
movsl
daa
jp
sbb
lcall
inc
pop
addl
xor
fcompl
push
add
adc
fwait
or
aas
insl
xchg
cmp
out
inc
scas
sub
xchg
sub
xchg
cmp
js
mov
mov
into
in
ds
jae
stc
cmp
cmp
mov
data16
pushf
adc
push
or
cmp
je
es
xchg
out
movsl
push
xchg
mov
cmp
and
shlb
sub
mov
loop
and
hlt
mov
push
pushf
divb
leave
xchg
jl
xchg
mov
adcb
add
clc
test
ret
cwtl
into
ficomps
jo
leave
int3
mov
orb
pop
fs
adc
filds
mov
add
jns
aas
xchg
shlb
adc
or
scas
leave
lahf
sub
repnz
jg
stos
sub
daa
sub
in
mov
das
dec
data16
nop
aam
sti
dec
ret
xchg
lods
jmp
repnz
xchg
jecxz
outsl
sub
xor
shrl
test
leave
out
push
enter
jns
inc
cltd
xor
fstpl
nop
insl
xor
les
cwtl
popf
lea
inc
xor
aaa
inc
dec
cwtl
xorb
add
fildl
xor
out
cs
aaa
nop
pusha
ficompl
adc
or
xchg
repz
adc
into
cmpsb
call
decl
adc
bound
data16
cwtl
nop
cmpsl
and
inc
lds
scas
push
pop
repnz
mov
xchg
push
xor
inc
push
adc
xchg
jnp
xchg
test
fs
aad
ret
add
lret
insb
movsl
jno
cmpsl
push
dec
int
test
xor
push
sub
dec
jns
or
mov
xor
xor
aaa
add
insb
fs
lret
push
mov
loop
movsl
daa
jae
pop
sub
stos
test
mov
adc
cli
sbb
jg
stos
ss
lcall
cli
imul
pushf
movsb
ds
stos
mov
rol
jge
mov
or
aas
xor
cli
inc
pop
sub
into
fidivs
xchg
push
das
ds
xchg
sarb
repz
jno
push
add
add
and
and
fwait
mov
push
cmp
movsl
jmp
xchg
sbb
sub
in
mov
je
popf
mov
adc
push
inc
xchg
adc
adc
jl
push
adc
add
lods
sbb
sbbb
ja
mov
adc
jns
push
les
cmp
mov
jnp
mov
lahf
popa
clc
lea
inc
pop
stos
xchg
add
jl
inc
in
sub
or
push
pushf
mov
push
or
mov
mov
dec
sti
mov
sbb
cmp
adc
push
jns
mov
jle
sbb
inc
lahf
nop
lret
jno
pop
sub
sti
sahf
lret
mov
cld
push
xchg
pop
and
xchg
xchg
xchg
leave
int3
sahf
push
rcr
cmp
mov
mov
into
cmp
mov
fnsave
lods
mov
lds
loope
mov
pop
pop
fs
int3
negl
mov
icebp
cmpsb
dec
mov
xor
pop
mov
jmp
cld
push
xchg
xor
rclb
fs
sbb
pop
xchg
pop
xor
fimuls
lret
mov
jns
inc
test
jnp
scas
out
jns
ret
fs
and
lea
mov
je
mov
xchg
sub
mov
jbe
fdivrs
cmpsb
or
mov
lahf
subl
pusha
fwait
loop
jecxz,pt
ds
mov
lock
sub
pushf
daa
arpl
orb
jae
mov
push
dec
xor
jnp
sbb
fwait
nop
daa
test
pop
xchg
daa
cwtl
mov
sub
push
mov
lods
mov
mov
es
stos
xor
mov
xor
out
mov
xor
jbe
push
cld
jo
daa
andb
pushf
xor
aas
test
js
call
xor
jno
leave
push
mov
das
xor
mov
push
sbb
adc
shll
sub
inc
ss
sahf
dec
mov
ds
dec
je
orps
pop
sub
cwtl
pop
aam
stos
mov
fwait
in
sbb
movsb
and
leave
push
repnz
mov
mov
leave
push
lock
hlt
mov
fisttpl
sub
jecxz
sub
testl
sbb
add
rcrb
iret
ss
jb
je
insl
xor
daa
scas
cmp
pushf
mov
in
sub
mov
movsl
insb
insl
shl
leave
push
inc
dec
adc
loope
mov
xor
les
xor
stos
cmp
lea
sbb
pushf
sti
jb
add
sub
sub
lea
mov
sbb
je
js
xor
insl
jno
or
sbb
mov
enter
mov
in
in
or
add
in
stos
xchg
int3
cwtl
xor
push
test
jmp
pop
sub
pop
stos
sbb
jne
in
mov
xchg
lods
scas
cmc
mov
popa
leave
cmpsl
sbb
dec
lock
mov
inc
fsubrs
push
mov
mov
stos
cmp
aad
loopne
sub
dec
int3
pop
xor
jo
icebp
xchg
xor
sub
xchg
push
je
lods
adc
lret
scas
and
nop
das
xor
arpl
xchg
outsl
ret
mov
test
loopne
out
fisubrl
hlt
dec
xchg
inc
dec
jns
mov
xchg
xchg
out
xchg
test
mov
stos
cmp
adc
jae
in
xor
mov
mov
mov
ss
fsubl
out
mov
xchg
sub
pusha
repz
in
lret
dec
mov
je
jb,pn
sub
movsb
xchg
in
lahf
lret
sahf
jns
sub
bound
clc
stos
dec
adc
ja
dec
xchg
mov
je
stos
sbb
rol
popa
movsb
ljmp
mov
mov
sbbb
mov
sub
lret
call
out
xor
jmp
mov
ds
dec
adc
decb
ret
in
arpl
inc
cmpsb
fwait
xchg
push
in
test
inc
sub
sbb
adc
push
repnz
mov
int3
jno
std
mov
sbb
adc
mov
dec
mov
sub
stc
mov
adc
gs
dec
pop
ret
popa
xchg
mov
sub
fs
stc
or
adc
rep
fisubs
aam
icebp
xchg
dec
xor
into
lahf
je
mov
inc
or
repnz
xchg
imul
testl
adc
out
mov
imul
sub
mov
int3
cmp
das
jl
sbb
jns
les
jo
leave
fs
pop
ss
out
stos
push
out
insb
mov
cmpl
int3
xchg
sub
pop
sub
pop
les
xor
ror
jno
lret
mov
lods
xor
sub
mov
and
xor
es
lret
lret
add
xchg
adc
stos
in
fs
cmp
or
into
test
push
ss
cmpsb
xor
mov
nop
pop
daa
scas
push
jnp
int3
ja
das
nop
cmp
inc
lods
add
dec
push
adc
clc
inc
xchg
shlb
sub
js
add
and
push
mov
add
leave
stos
inc
lahf
xor
xor
xor
inc
inc
cmpsb
mov
and
mov
scas
test
mov
jne
imul
pop
int3
test
and
imul
fs
pop
fsubl
xchg
movsb
lea
push
jae
arpl
cmp
test
ljmp
shlb
lea
xor
out
ljmp
inc
sar
stos
push
mov
pusha
or
mov
lods
lahf
aam
xor
sbb
pop
sub
push
arpl
lahf
insl
adcb
pop
and
push
add
xchg
add
cltd
lods
leave
scas
mov
lret
ja
out
sub
je
stos
popa
dec
scas
aaa
inc
test
jns
das
pop
leave
jae
jbe
xchg
cmpsl
push
int3
mov
mov
sbb
ror
or
ret
lods
int3
loopne
leave
cmp
fs
lcall
fwait
cmp
xchg
icebp
stc
shl
stos
aam
fidivl
adc
ror
inc
scas
xchg
mov
inc
mov
stos
adcb
push
adc
call
mov
sbbb
pop
arpl
mov
xor
inc
jne
les
mov
pop
mull
sub
pop
cmpsl
pop
repz
test
fxch
lods
add
add
push
sub
leave
add
jo
push
mov
flds
testb
xor
mov
cmpsl
imul
scas
push
in
or
push
mov
mov
in
mov
scas
and
lcall
mov
stos
mov
fisubrl
push
xor
in
test
mov
aam
mov
test
jne
sahf
inc
pop
mov
imul
sub
les
jae
ficompl
push
cmp
scas
int
jno
inc
clc
enter
sbb
in
leave
out
fdivrl
sub
int3
leave
adc
sub
fdivs
mov
scas
ror
xchg
leave
sub
push
mov
inc
movsb
in
cmpsl
mov
or
pop
repnz
pop
pusha
add
push
pop
sbb
sub
jo
call
sub
test
mov
mov
cmpsb
adc
mov
mov
pop
leave
test
mov
mov
sbb
mov
popf
ss
repnz
push
sbb
xchg
mov
mov
add
mov
aam
scas
pop
inc
outsb
inc
add
jp
jge
mov
stos
pop
pop
cltd
mov
jbe
xchg
cmpsl
adc
mov
push
and
mov
pop
dec
mov
aaa
imul
pop
pop
mov
adc
mov
into
mov
mov
pushf
push
pushf
jbe
mov
sub
jno
das
mov
insb
pop
loopne
das
push
les
mov
push
out
jno
pop
sub
scas
insl
jns
pop
cmp
push
mov
data16
or
pop
imul
scas
jbe
ds
je
movsl
pop
sbb
sub
push
hlt
pop
mov
lds
outsb
jp
je
xor
mov
jge
dec
or
jbe
sbb
pop
fs
scas
mov
xchg
cmpsb
sbb
jmp
mov
push
std
mov
inc
xchg
jg
mov
cmc
adc
sub
cld
mov
mov
lahf
and
int3
jge
jecxz
mov
pop
jnp
outsb
sahf
pop
inc
enter
and
out
pop
fs
cli
dec
cmp
into
mov
test
repz
jae
cwtl
mov
test
mov
or
pop
imul
imul
adc
sub
mov
mov
mov
orb
in
aaa
cli
sub
in
inc
je
repz
lods
and
stos
xlat
jo
lret
inc
add
lods
sub
pop
test
sub
push
sarb
and
insb
jp
add
push
and
xor
repnz
mov
mov
inc
popf
in
repz
mov
rcll
add
test
mov
and
aam
mov
mov
xor
xor
js
scas
jle
sarb
ss
sbb
or
out
mov
pop
add
insb
loope
lods
mov
in
fsubrp
mov
sub
mov
or
push
mov
lret
xor
or
pusha
leave
inc
data16
scas
jae
pop
call
ror
lods
jns
xchg
notb
mov
cmp
mov
out
xor
aas
cmpsl
imul
sbb
sbb
and
mov
packsswb
push
shlb
mov
fcomip
adc
xchg
mov
pop
hlt
mov
xor
or
in
rcr
mov
inc
mov
pop
inc
cmpsl
lahf
cmpsb
push
xchg
test
push
cld
aas
inc
mov
push
and
mov
pminub
loop
pop
repnz
testb
fwait
aam
dec
nop
hlt
cmp
push
push
hlt
sti
loopne
pop
sbb
lock
xor
leave
mov
mov
xor
nop
stos
call
mov
jle
mov
fdivs
xchg
leave
imul
fsubrl
popa
les
jno
sahf
sahf
enter
and
and
xor
push
lods
and
jmp
mov
lret
mov
mov
hlt
shr
rorl
in
jae
inc
mov
cmp
sahf
call
sub
cmp
leave
dec
xor
inc
push
cmpsb
mov
inc
mov
stos
imul
sahf
push
leave
int
les
add
test
andb
outsb
ret
cmp
fists
cmp
dec
lea
pop
xchg
pop
pop
dec
lea
dec
movsl
jge
insb
lods
mov
ss
les
xor
ret
cmp
lea
add
loope
inc
jnp
sub
jns
frstor
cmpsl
test
aaa
mov
js
sbb
jno
roll
mov
jns
mov
in
ljmp
inc
cs
inc
mov
cmp
mov
push
outsl
adc
inc
test
cmpsb
and
enter
ret
dec
stos
push
ret
xor
inc
sub
stos
scas
sub
mov
scas
mov
dec
movsl
pushf
dec
ss
dec
inc
dec
cltd
rcrl
lods
pop
mov
clc
pop
daa
mov
icebp
pushf
and
push
fs
sbb
adc
je
lret
inc
mov
cmp
js
in
xchg
cmpsb
mov
test
orb
lea
out
sbb
xor
lcall
repnz
pop
test
lods
outsl
stos
add
dec
sbb
pusha
setb
xchg
jecxz
add
ds
push
jno
xor
jl
inc
sub
aas
dec
mov
pop
push
xchg
shll
adc
mov
outsb
inc
rolb
mov
pop
adc
arpl
and
fiaddl
out
scas
bound
js
icebp
pop
xchg
aas
aas
scas
mov
add
pop
movsl
xchg
or
mov
sbb
adc
push
inc
daa
xor
in
adc
cmpsl
adc
lahf
adc
xchg
daa
nop
add
movsl
testb
insb
lods
adc
or
mov
mov
in
shld
jmp
push
jbe
sub
in
mov
mov
mov
adc
mov
ds
or
mov
mov
mov
leave
sub
icebp
mov
sbb
sbb
push
and
test
jne
push
push
lods
xor
daa
cmp
aas
sbb
adc
push
daa
jo
in
ret
mov
mov
scas
jle
mov
mov
lcall
jns
test
mov
jl
dec
inc
push
lret
sahf
sbb
jl
xor
dec
test
mov
jle
sub
stos
dec
cmp
in
movsb
outsl
hlt
test
int3
pop
mov
lods
inc
sbb
sahf
aaa
xor
call
adc
pop
push
cmpsb
jne
or
pop
mov
pop
jmp
inc
push
insl
leave
push
jle
loope
ja
movsl
xor
hlt
xchg
jle
jp
inc
cmp
repnz
add
jae
loop
scas
les
shl
sbb
mov
add
sbb
mov
in
sub
sub
xchg
cs
sbb
and
xchg
mov
xor
imul
into
sub
cmp
andb
iret
insb
jmp
and
dec
lret
and
and
push
xor
ss
dec
push
mov
pop
hlt
mov
loope
rcrb
sahf
push
das
mov
in
bound
test
and
and
sub
in
pop
sbbl
push
pop
lock
mov
daa
je
ret
repnz
lea
or
inc
andl
xor
loopne
add
stos
lods
addr16
dec
adc
mov
mov
ljmp
pop
rcll
adc
pop
dec
mov
xchg
push
mov
pop
call
ljmp
xor
add
pop
pop
mulb
aaa
inc
shlb
xor
mov
adc
iret
add
loopne
in
cmpsl
arpl
cld
nop
out
dec
pop
fdivs
in
pop
roll
or
xchg
mov
dec
enter
jp
repnz
lahf
xor
jl
popa
push
lea
icebp
jnp
movsl
sub
int3
pop
push
in
push
push
je
daa
jno
sbb
iret
pop
scas
les
pop
nop
rorb
mov
jnp
xchg
je
xor
stc
js
jmp
ss
fildl
lret
lock
movsl
mov
stos
aas
inc
pop
jp
lock
jp
movsb
stos
xor
repz
leave
lods
jne
js
jecxz
mov
pushaw
xchg
sbb
fidivrl
mov
adc
xor
cmp
pop
mov
pop
xchg
xchg
pop
mov
inc
mov
aad
sub
aas
lret
out
fcompl
push
arpl
test
push
sub
movsb
jbe
sbb
mov
jl
orl
test
dec
stos
jb
lret
pop
cmp
jns
icebp
mov
or
fsubl
sub
das
jbe
adc
out
or
pop
iret
inc
jb
pop
aaa
cmp
pop
test
lock
or
outsb
jne
popf
push
mov
jb
pushf
popl
sahf
call
sbb
or
mov
dec
outsb
inc
ds
movsb
testb
and
xchg
loop
pop
fstl
jge
into
xchg
test
lods
adc
add
cwtl
mov
in
stos
or
cmpsl
int3
imul
test
loope
popl
xlat
dec
roll
pop
mov
fs
out
movsb
xor
sub
call
outsl
arpl
add
jl
test
fs
lret
inc
xchg
pop
setns
jl
mov
and
sub
jge
sub
push
cmpsl
stos
jge
bound
popf
lods
test
dec
clc
dec
fmul
js
add
stos
mov
sahf
xor
test
add
jns
je
xchg
pop
and
xlat
lods
insb
fistpl
or
xor
dec
test
mov
shll
mov
xchg
repz
mov
mov
sub
mov
sahf
mov
lcall
cmp
push
cwtl
cwtl
xlat
xor
mov
data16
lret
mov
test
sub
pop
nop
mov
outsb
mov
ja
icebp
and
call
neg
int
es
adc
movsl
xor
dec
sbb
in
fmul
ret
daa
andb
lods
cmp
or
out
sub
push
scas
push
sub
mov
je
js
inc
sahf
repz
movsb
sub
push
lods
mov
jle
out
jo
scas
stos
cmp
xlat
jp
mov
out
mov
imul
cmp
or
lock
sub
lods
and
sub
repnz
popf
and
mov
jnp
ds
test
push
xor
xchg
leave
das
aad
xor
add
pop
test
mov
nop
mov
stc
push
test
movsb
mov
jns
aad
mov
add
sub
add
cmpsl
inc
test
mov
push
and
inc
pushf
cmpsl
outsl
je
jl
xchg
mov
push
out
mov
inc
jno
mov
out
cli
mov
jae
xchg
mov
clc
jo
sub
mov
fcmovb
dec
jae
mov
mov
popf
and
sub
subl
dec
pop
test
xlat
xchg
leave
pushf
fcomps
push
push
jb
adc
cli
arpl
cmp
hlt
and
jl
mov
inc
shrb
mov
jg
es
dec
mov
xchg
es
lds
js
jb
in
xchg
dec
xchg
push
xchg
push
ljmp
lahf
adc
imul
sbb
aad
aam
nop
sahf
jl
cs
nop
test
lods
or
or
push
sbb
lret
xchg
mov
sub
cmp
sahf
leave
push
icebp
movsb
xchg
test
mov
data16
nop
mov
cmpsb
jp
xchg
bswap
aaa
cmp
nop
insb
lds
scas
xor
mov
movsb
add
sub
mov
lods
mov
mov
pop
inc
dec
pushl
fwait
daa
insb
inc
cmpsb
xor
pushf
imul
pop
push
mov
pop
push
push
dec
roll
aad
leave
jle
mov
int
icebp
mov
scas
cld
packsswb
cmpsl
cld
inc
iret
mov
inc
imul
leave
stos
xorb
movsb
mov
or
mov
or
daa
pop
js
add
lds
scas
xchg
sub
xchg
int3
mov
xchg
adc
movsb
mov
flds
mov
inc
loop
movsb
sub
push
inc
push
dec
sbbb
lods
dec
cltd
xor
jp
std
popa
xchg
test
inc
stos
icebp
mov
out
mov
outsl
popa
test
std
repz
push
adc
enter
movsl
test
lret
xchg
enter
xor
mov
mov
out
stos
cmpsl
sub
gs
in
daa
pop
mov
mov
mov
call
ret
dec
or
arpl
sarb
lods
and
inc
jno
add
pop
hlt
mov
mov
loope
sub
or
push
add
stos
push
pushf
cmp
arpl
sbb
ret
push
je
in
daa
addr16
pop
fxch
cmp
xchg
xchg
test
test
test
or
xchg
fwait
sbb
inc
mov
outsl
je
cmpsb
add
jl
and
popf
lahf
int3
sub
cwtl
movsb
sub
jl
loop
pinsrw
lcall
into
adc
mov
jae
inc
and
xchg
mov
lods
jmp
jb
jo
push
mov
jb
je
fisubs
or
sub
aad
xor
test
fwait
xchg
leave
xchg
pusha
js
mov
dec
out
inc
lods
stc
call
push
mov
ficoms
popf
clc
add
in
loope
add
fildl
mov
xchg
and
mov
mov
stos
test
aas
cltd
sub
and
xor
cwtl
pop
mov
movsl
sub
cld
push
cmpsl
or
adc
test
mov
test
imul
sbbb
xor
mov
lret
ja
jae
scas
mov
repz
sub
adc
stc
negl
pop
push
mov
clc
int
test
mov
repnz
sub
scas
ljmp
dec
push
test
loopne
and
jmp
inc
xor
or
fs
fsubs
repz
mov
mov
lods
jb
or
outsb
sub
outsb
xchg
movsl
adc
subb
push
aas
inc
in
sub
cmc
adc
aas
cmpl
mov
lods
sub
scas
jne
outsb
and
les
sbb
inc
fsubl
and
or
lods
test
lahf
ret
inc
and
inc
dec
ret
and
fs
sub
jbe
in
push
xchg
int3
rolb
mov
fdivl
xor
cwtl
pop
fmuls
dec
mov
std
pop
push
mov
stos
xor
scas
cmp
fstl
lods
mov
xchg
mov
lret
adc
xor
jl
xchg
xchg
jl
pushf
sub
je
push
inc
push
dec
mov
sbb
pop
fwait
cmp
push
fcomps
out
ss
mov
cmc
mov
mov
loop
pushf
roll
aam
adc
pop
jg
xchg
movsb
roll
repnz
dec
call
je
scas
or
mov
scas
lret
sub
adc
inc
add
int3
mov
sbb
lahf
xchg
dec
jge
jp
sbb
adc
lods
mov
int3
sub
xchg
das
fcompl
ljmp
dec
imul
pop
hlt
mov
sub
cmpsl
mov
daa
scas
xor
mov
mov
mov
mov
mov
shlb
imul
repz
cmp
les
test
mov
push
in
mov
pushf
scas
popf
cmpsl
mov
cmc
gs
xchg
mov
loop
adc
pop
cmp
cmpsl
les
rol
xor
xor
out
test
scas
cmp
adc
mov
pop
movsb
and
xor
dec
test
push
jno
fwait
pop
aas
xchg
movsl
mov
scas
movsl
cmpb
pop
mov
data16
test
cld
xchg
gs
insb
int3
xchg
scas
andb
lods
sub
repz
pop
xor
test
mov
mov
cmpsl
das
popa
push
sbb
imul
jno
jo
add
adc
add
jnp
push
and
pop
adc
sub
ret
dec
insb
mov
in
insl
mov
lods
or
xchg
pushf
mov
mov
int3
leave
test
cmpsl
movsb
test
mov
push
jg
imul
cmc
xchg
loopne
out
dec
add
inc
dec
push
and
and
xchg
mulb
adc
push
jne
and
test
jbe
pop
inc
xchg
jnp
js
pop
cmp
mov
jmp
inc
xor
jbe
leave
mov
add
mov
lock
shl
lcall
popf
pop
mov
inc
cmpsb
jle
push
arpl
cwtl
sbb
push
pop
xchg
mov
movsl
dec
mov
jmp
and
or
xor
mov
inc
pushf
rcr
pop
sub
or
addr16
add
ret
imul
movsl
jp
cmp
mov
sbb
dec
cmpl
push
mov
scas
bound
ja
lahf
mov
test
adc
mov
mov
pop
jmp
fistpl
rclb
sbb
pop
daa
xor
add
int3
xchg
or
sbb
leave
mov
mov
decb
out
fldpi
xchg
and
add
mov
sub
push
cmp
push
scas
dec
rolb
push
xchg
pop
repnz
mov
add
in
movsb
sub
fists
loop
mov
call
scas
insb
dec
arpl
mov
mov
aas
xchg
lahf
mov
js
loop
mov
leave
mov
fldt
test
lcall
out
jo
fs
or
and
mov
cltd
and
and
cmc
push
pushf
and
popa
pop
xchg
cmp
xchg
lret
leave
xlat
rcrl
lcall
mov
adc
cmp
cmp
adc
test
jns
aaa
xchg
outsl
ljmp
in
cld
jmp
std
lods
ljmp
cli
lea
mov
xor
xor
pop
test
scas
movsl
inc
push
jl
movsl
cmp
jge
xor
and
repz
cmp
lods
movsl
and
sbb
aaa
test
outsl
movsb
pop
repnz
jecxz
xchg
mov
out
push
adc
pop
cs
xchg
stos
insb
test
xor
loop
add
add
test
mov
cmp
jp
sbb
jae
pushf
fdivrs
mov
lods
lods
mov
mov
pop
int3
inc
stos
mov
test
lret
scas
aas
jl
xchg
xchg
lods
sub
and
in
movsb
in
xor
out
xchg
xor
xor
inc
push
stos
les
lods
mov
mov
aaa
lods
mov
mov
jge
inc
add
mov
dec
cmp
test
or
xchg
mov
sub
jb
mov
cwtl
cmp
sub
push
mov
cli
cmpsl
test
insl
lahf
jae
jb
push
fisubrs
lahf
mov
cmp
inc
push
in
std
aas
cwtl
cmc
pusha
pop
add
lea
push
adc
addb
mov
xor
and
std
test
xor
xchg
mov
inc
xor
inc
cltd
orb
rcl
adc
loop
cmp
push
lods
adc
mov
adc
imul
adc
popa
mov
adcb
mov
leave
mov
and
mov
imul
lock
iret
fwait
mov
fnsave
test
test
dec
cmp
fistpl
sub
aaa
sbb
sub
ret
shlb
or
jl
fidivrl
pop
mov
dec
movsb
dec
pop
mov
movsl
mov
xchg
xchg
jae
ret
repz
push
sbb
test
push
cmovae
cli
in
mov
movsl
sub
mov
ret
sbb
in
andl
mov
mov
in
inc
mov
mulb
les
addr16
push
push
mov
pop
jb
and
pop
cmp
dec
sbb
and
mov
mov
lock
les
add
cmpsl
mov
stos
loop
jg
pop
or
arpl
scas
push
test
repnz
xor
test
imul
movsl
adcb
cmc
sahf
fs
mov
xor
loop
mov
mov
mov
jl
cmpsb
in
hlt
pop
xchg
cmp
adc
mov
dec
pop
xlat
prefetcht1
addr16
out
xchg
loope
xor
jge
jle
mov
cwtl
imul
lahf
je
xchg
test
or
movsb
std
rcrb
cli
pop
mov
mov
icebp
push
sbb
in
test
push
sub
xchg
adc
mov
sub
xor
das
xor
jno
pop
incb
cmpsb
xchg
pop
cli
dec
sti
into
adc
std
scas
movsb
xchg
or
scas
mov
adc
mov
jb
xor
fcmovb
or
cmp
mov
pusha
add
testb
push
mov
test
mov
test
mov
jae
mov
aaa
or
jle
xor
or
aaa
dec
in
pop
scas
lahf
test
imul
into
mov
rcr
cmp
pop
fsts
pop
lods
push
dec
dec
xor
jb
xchg
aas
fsubrs
pop
dec
mov
pushf
stos
jns
cmp
mov
es
sub
leave
dec
mov
adc
jmp
stos
pop
pushf
mov
insb
stos
rcr
test
scas
jns
fimuls
test
and
movsb
cmc
jge
dec
leave
dec
jne
xchg
negb
hlt
pop
mov
subl
pop
and
nop
fs
pop
xor
repz
jns
lahf
cmp
sbb
jno
repnz
mov
mov
imul
xchg
pop
leave
js
stos
fdivl
xor
loope,pt
xor
push
push
imul
cvtdq2ps
jns
xchg
mov
std
pop
sub
sbb
mov
adc
push
xor
mov
rorl
clc
imul
push
sub
test
fs
push
mov
mov
cmpsl
xchg
clc
rolb
stos
nop
xchg
aas
outsl
scas
mov
xchg
dec
jl
mov
inc
sbb
mov
push
addb
popl
fs
test
dec
mov
mov
leave
pop
mov
push
pusha
mov
mov
scas
test
xor
xchg
adc
add
inc
scas
movsl
negb
hlt
jo
test
sub
je
pop
lcall
cmp
cmpsl
mov
testl
mov
sub
repnz
inc
pcmpgtd
mov
xchg
fsts
xchg
pop
cmp
lahf
pop
pop
es
movsb
sbbl
cwtl
enter
lahf
outsl
mov
test
movsl
fdivs
scas
aas
mov
outsl
cmp
add
mov
div
xacquire
sub
sub
push
rcl
inc
in
fs
dec
adc
scas
cmc
mov
lods
xor
repz
mov
es
mov
xchg
xor
or
in
fdivrs
test
and
xchg
mov
inc
jo
mov
push
lods
sub
jge
dec
test
leave
imul
lahf
add
inc
test
enter
aad
add
aas
xchg
sub
mov
xor
repz
xchg
test
mov
in
push
add
leave
aad
sub
lods
movsl
faddp
jg
push
sbb
mov
dec
test
push
adc
pop
pop
insb
push
pop
jns
push
lods
sahf
xchg
aaa
lods
lods
aas
inc
dec
movsb
leave
shr
scas
xor
mov
and
push
rcrb
cs
lea
and
push
shlb
cltd
sbb
stos
aas
sahf
je
xchg
pop
test
adc
mov
roll
push
in
jmp
aad
jmp
stos
sbb
mov
test
push
sub
mov
mov
orb
xchg
jbe
pop
sub
cmp
cmp
mov
mov
pop
sub
lret
jne
test
enter
je
cld
testl
pop
addr16
sub
ja
xchg
mov
xchg
jp
mov
in
sub
cltd
shll
mov
mov
shll
movsb
pop
push
test
push
dec
movsl
mov
mov
sub
pop
pop
popf
xchg
movsl
mov
int3
mov
mov
cmc
jl
lcall
shr
pop
ret
mov
sub
stos
add
pop
fiadds
lea
loop
jno
rorb
jns
jp
daa
outsl
lock
lods
xchg
int3
test
scas
int
add
test
sbb
cmpsb
jbe
jl
dec
inc
lcall
mov
stos
and
popl
je
scas
mov
mov
sbbl
rclb
push
push
mov
jge
scas
movsl
cs
xlat
jno
ror
cmp
lods
jecxz
imul
in
xor
cmp
push
imul
xor
mov
das
mov
fucom
pop
sbbl
jg
mov
imul
fidivrs
jo
and
cmp
inc
cmp
mov
cmp
push
pop
inc
dec
mov
cltd
push
sahf
loop
dec
pop
and
lea
push
inc
lds
fs
or
sahf
pop
movsb
cwtl
cwtl
les
inc
jl
xchg
jb
cld
xchg
or
lods
pushf
adc
adc
std
cmp
push
pop
push
xchg
outsl
int3
notb
mov
in
xor
stc
outsb
pop
xchg
inc
test
in
scas
mov
aas
mov
mov
int
mov
lds
sub
arpl
arpl
mov
stos
jnp
insb
lods
mov
lret
xchg
cmpl
and
outsb
pop
shlb
mov
push
cmpsb
add
mov
stos
cs
and
leave
or
out
push
adc
scas
out
push
nop
imul
sub
mov
jno
sub
mov
cmp
dec
push
pop
scas
mov
pop
movsl
test
push
xchg
stos
fisubrs
arpl
adc
and
insl
sub
daa
cmc
xchg
cs
lahf
inc
jne
mov
test
push
repnz
leave
cmpsb
cmp
out
sbb
mov
inc
movsb
lds
test
test
cmc
push
mov
mov
sbb
lret
repnz
scas
fdivrs
dec
cmpsl
lds
adc
add
cwtl
and
insl
nop
sti
xchg
adc
jno
addb
jb
push
dec
push
lock
aas
mov
daa
gs
sub
and
cld
lock
cs
or
add
and
scas
insb
xor
jns
dec
sub
mov
cmp
dec
mov
gs
cld
mov
aas
aas
mov
outsb
int3
inc
mov
out
mov
cmc
fnstcw
hlt
call
inc
xor
imul
sub
sbb
leave
jb
pop
xchg
lret
inc
imul
loopne
jmp
mov
jg
insl
add
outsl
cwtl
leave
xchg
js
adc
mov
sbb
pop
arpl
push
mov
or
pop
cmc
xchg
push
aaa
les
adc
nop
pop
jnp
mov
lahf
xor
stc
scas
xchg
cmp
cld
xor
insb
loope
leave
mov
std
and
cvtpi2ps
xchg
into
and
mov
push
jae
les
pop
shl
lcall
mov
test
xor
fldt
push
pop
and
pushf
xchg
fdivrs
mov
test
leave
rclb
cmp
mov
sbb
cld
mov
pushf
loop
enter
push
jp
add
lret
xor
mov
aaa
int3
adcl
je
out
xor
daa
mov
hlt
xchg
push
negl
mov
stos
andb
mov
movsl
setge
sub
xor
push
sub
scas
xchg
pop
mov
call
dec
push
movsb
mov
inc
xor
scas
ss
jo
mov
data16
add
mov
lods
insb
and
push
insb
ds
mov
in
icebp
push
or
mov
test
sub
mov
test
xorb
xchg
icebp
push
cmp
jmp
sti
cld
mov
test
mov
add
and
adc
inc
adc
inc
cmpsb
mov
hlt
xorb
xchg
paddq
lods
pop
and
shrb
push
arpl
gs
push
mov
dec
dec
and
lahf
jl
cltd
jg
and
inc
and
int3
push
dec
ret
mov
out
inc
push
sub
enter
inc
inc
mov
js
ret
push
lods
xchg
jns
jmp
push
dec
sub
sahf
add
xchg
or
loope
cwtl
sarl
push
adc
mov
sub
sub
cmp
push
inc
jge
mov
and
sub
icebp
mov
cmp
push
mov
gs
xchg
pop
ss
mov
popf
clc
lret
in
mov
mov
daa
dec
mov
rcll
add
sub
sbb
xchg
int3
pusha
inc
xchg
out
push
outsl
pop
stos
adc
lahf
sbb
and
das
fldcw
xchg
fists
sbb
mov
test
jae
cld
push
mov
pusha
testb
add
jle
mov
mov
pop
inc
lret
hlt
jl
repnz
pop
leave
rcr
and
adc
imul
test
pop
repz
jmp
outsb
xchg
pop
pop
xchg
pop
loopne
mov
int3
hlt
dec
and
mov
stc
xchg
fs
je
movsl
pop
adc
mov
pop
push
add
pslld
aam
in
fistps
shrb
cld
cmp
cmp
lret
movsl
std
andb
aad
push
in
jo
scas
dec
aam
outsb
mov
stos
and
mov
mov
in
mov
jl
add
icebp
mov
clc
lock
xchg
inc
push
cmpb
push
jbe
jns
push
and
ss
jno
aad
lret
pop
xlat
imul
sbbb
mov
in
cmpsb
and
mov
fs
ror
nop
stos
mov
int3
js
iret
lcall
push
mov
leave
sahf
int3
daa
push
rolb
sub
cs
ja
mov
inc
xchg
sub
xchg
pop
mov
mov
jo
insl
test
jns
sahf
lahf
cmpb
cwtl
lods
scas
js
repz
idivl
add
mov
in
insb
daa
scas
push
mov
lods
jge
lahf
mov
mov
jo
sub
or
pop
xchg
cmp
popf
imul
ja
cmp
push
hlt
daa
adc
jns
fs
jecxz
jl,pt
add
sbbb
scas
fnstsw
sbb
movl
mov
aad
enter
mov
popf
mov
lret
and
lock
mov
or
mov
add
adc
jne
mov
add
out
mov
mov
xchg
jecxz
out
jle
jne
ret
flds
sub
mov
pop
je
mov
loopne
adc
xchg
sbb
repnz
push
sahf
data16
sub
scas
lods
arpl
insb
cmpsl
shll
aaa
les
xor
stc
mov
leave
pop
loop
adc
fmull
divb
lods
xchg
rcrl
data16
dec
aas
push
in
push
jnp
or
sahf
sahf
imul
push
cmp
mov
test
mov
leave
loope
add
mov
rcrb
sahf
dec
sarb
stos
std
pop
xchg
cwtl
sbb
in
testb
data16
xchg
sbb
arpl
call
into
jo
int3
sub
mov
enter
mov
inc
popf
in
xor
jno
xchg
dec
mov
fdivrl
test
loop
xchg
cmp
hlt
jbe
and
adc
scas
mov
lret
mov
pop
dec
xor
cld
push
cmp
in
xchg
mov
je
fimull
scas
or
test
hlt
orl
xchg
repz
movsl
xchg
dec
xchg
jns
xchg
dec
hlt
xchg
daa
loop
stos
sub
and
jecxz
shrb
or
loope
cld
pop
xchg
fidivrs
xchg
popf
shll
in
arpl
pushf
dec
lcall
lods
mov
dec
les
shrb
test
fdivl
mov
xbegin
push
mov
ret
out
mov
add
push
mov
das
xor
xor
mov
xor
shrb
fwait
mov
leave
pop
push
mov
adc
inc
mov
mov
xor
adc
aaa
xchg
mov
mov
mov
jge
or
lods
pop
mov
setae
inc
mov
mov
mov
cmpsl
xchg
xchg
jne
data16
inc
gs
ficoml
fs
mov
aas
sub
nop
das
stos
leave
mov
bts
call
sub
ljmp
clc
dec
jbe
shrl
jecxz
adc
jecxz
insb
mov
test
jg
sbb
mov
test
inc
movsl
ds
and
xchg
xchg
cmp
cmpsb
dec
mov
mov
mov
mov
sub
pusha
jb
aas
mov
pushf
mov
dec
xchg
adcb
test
mov
pop
rorb
xor
inc
scas
push
and
loope
sbb
int3
mov
stos
lock
imul
mov
cli
xchg
or
mov
add
ja
nop
daa
mov
movsl
xor
push
sbb
fwait
xor
ja
cmc
and
pushf
jne
leave
jp
insb
leave
add
mov
aas
pushf
add
pop
add
push
test
lret
inc
pop
fstl
movsb
popa
test
jnp
jp
lret
aas
adc
pop
lret
or
add
sbb
mov
and
mov
in
imul
jae
lods
jns
add
sub
pushf
mov
stos
push
add
xor
push
arpl
mov
int3
loop
iret
out
scas
bound
inc
mov
inc
sarb
addr16
aas
in
lcall
test
mov
mov
stos
dec
and
ss
sbb
mov
xor
pop
lock
lods
subb
rclb
xchg
mov
std
mov
stos
sub
cmp
shlb
enter
bound
push
insb
lret
enter
add
push
xchg
outsb
cmp
sub
ret
cltd
ja
fwait
stos
aas
jg
mov
xchg
or
shlb
pop
into
imulb
test
cmp
leave
cmpsb
cltd
ljmp
daa
in
sub
dec
jb
mov
movsb
xor
mov
test
dec
scas
xchg
fistpl
mov
lret
ss
lods
mov
dec
lods
leave
jl
popa
stc
xor
fadd
xchg
xchg
leave
push
mov
xchg
sub
aam
jl
popf
movsb
sbb
xor
jp
mov
pop
pop
jb
icebp
pusha
test
xor
inc
lea
addb
aaa
js
repnz
orb
mov
mov
xchg
inc
pop
mov
addr16
xor
call
sub
out
xchg
test
test
cltd
sbb
in
pop
cs
adc
xchg
ja
es
jl,pn
jp
xor
cmp
js
mov
jne
roll
out
pop
movsb
xchg
push
jmp
insb
push
mov
rcrl
mov
test
jo
add
lret
xorl
imulb
sbb
dec
adc
pop
pop
icebp
mov
xor
xchg
movsb
outsl
shrl
xor
in
sub
scas
fxch
and
ret
stos
ret
cld
and
inc
push
lcall
or
scas
out
rcr
leave
mov
and
adc
clc
sub
adcb
mov
ficoms
xor
pop
in
sti
fmul
divl
repz
or
sbb
jecxz
add
xchg
cmp
maxps
xchg
pop
mov
roll
insl
and
movsb
std
addr16
and
adc
cmpsb
loop
mov
adc
mov
xor
lea
les
cmp
sub
adc
es
mov
fisubs
outsl
bound
mov
jb
xchg
in
loop
or
lock
in
int3
and
push
pop
push
cwtl
cmp
adc
jns
outsl
sub
loope
mov
call
lahf
scas
cmp
cltd
xadd
cmp
mov
push
fwait
jns
dec
cmp
lcall
jns
mov
mov
popf
and
ja
in
xchg
scas
pop
ror
mov
push
sti
cmc
movsb
xchg
xchg
in
mov
je
mov
fdivrl
pop
lret
mov
in
sub
mov
mov
loop
mov
sbb
mov
int3
aaa
sbb
leave
movsb
js
inc
ret
pushf
stos
test
jno
push
jbe
mov
jnp
or
rcrl
inc
push
fwait
mov
jns
mov
mov
push
xchg
xchg
add
jb
pop
jae
out
mov
mov
mov
mov
xchg
addb
push
int
mov
outsl
jle
xor
leave
pop
mov
mov
inc
jno
xchg
jb
cmc
xchg
xor
lods
xor
fisubl
outsb
lcall
aas
fwait
push
stos
dec
mov
data16
push
test
mov
xor
add
jae
movsb
pop
mov
adcb
xor
in
mov
xor
mov
mov
mov
jg
sub
sub
mov
test
sbb
and
lods
in
lret
jae
xchg
mov
jle
push
enter
mov
mov
and
rclb
lock
mov
pop
mov
xchg
outsb
dec
push
scas
mov
int3
fstpl
stos
jecxz
xlat
xchg
test
sub
aam
std
and
lret
sub
pop
mov
sub
sub
fs
cs
lods
sub
icebp
inc
arpl
and
push
cwtl
nop
aam
mov
es
int3
sub
subl
leave
subb
xchg
adc
inc
inc
insb
sbbb
sahf
scas
or
sahf
leave
nop
cld
out
xchg
push
jmp
inc
leave
mov
xor
scas
into
xchg
js
rclb
stos
mov
add
xchg
mov
push
pop
mov
lret
mov
les
loopne
aas
push
int3
neg
mov
es
out
mov
in
aad
and
push
das
icebp
pop
sub
xor
outsb
mov
inc
push
jp
sub
int3
cmpb
mov
je
popf
adc
pop
fstl
loopne
lret
subl
shld
xor
daa
pop
mov
xchg
mov
push
jns
xor
ret
and
jg
pop
call
aad
out
dec
and
lods
xor
cld
xchg
and
lret
lret
mov
mov
aas
pop
lcall
test
pop
dec
push
loop
scas
sbb
pop
inc
test
adc
or
test
pop
loopne
es
lahf
scas
mov
fs
aad
add
cs
and
xchg
fcoml
cs
sub
xchg
shlb
cmpsl
ss
mov
andb
and
xchg
xlat
ret
pushf
int3
inc
jge
daa
imul
es
jbe
pushf
gs
xor
and
imul
je
fsubrl
int3
xor
ss
sbb
movsl
dec
pop
pop
in
int3
cmp
js
sub
or
mov
leave
lea
sbb
insl
mov
pushf
loop
mov
add
mov
sub
push
test
mov
out
aas
pop
adc
mov
pop
stc
enter
jnp
xor
mov
mov
mov
rcrb
mov
daa
cltd
xor
sub
mov
xchg
ror
jb
push
das
das
jb
sbb
mov
test
xor
xor
push
sbb
je
pop
cli
xor
and
scas
sub
leave
fs
das
cmpsb
icebp
aaa
xor
or
sbb
fs
int3
add
ret
dec
cwtl
adcb
xlat
mov
sbbb
shrl
push
sub
stos
ucomiss
pop
and
in
dec
push
std
pusha
jbe
mov
ss
outsb
mov
xor
or
out
out
jae
xor
sbb
cmpsl
sbb
addr16
aad
cmc
and
test
adc
notb
outsb
daa
jle
mov
int3
imul
push
mov
add
xor
xchg
sbb
lret
mov
int3
mov
movsb
cmp
repz
xor
inc
cwtl
arpl
inc
push
mov
jb
cwtl
adc
xchg
push
lea
xor
add
lea
xchg
sbb
sub
xor
inc
cwtl
xor
sbb
xchg
jo
das
sub
in
mov
insl
mov
out
cmpsb
sub
jns
sahf
sub
ret
pop
mov
movsb
fbstp
mov
clc
test
add
dec
je
lods
ja
dec
mov
test
es
pop
lret
jbe
jb
jne
xchg
push
xchg
popf
in
sbb
cmp
push
rorb
test
lods
push
sub
xchg
arpl
cmpsb
movsb
jb
in
inc
adc
sbb
rcll
nop
ds
adcl
movsb
leave
bound
out
test
int3
getsec
outsb
test
pop
push
xchg
jecxz
movsb
pop
jnp
mov
mov
adc
lea
pop
aas
lahf
andb
dec
add
pusha
sbb
gs
test
push
sub
pop
test
sub
cs
xchg
pop
pop
aaa
mov
and
test
cmpl
inc
mov
outsb
dec
inc
cld
add
movsb
inc
xor
xchg
pop
addr16
int3
js
test
xchg
inc
lods
xlat
add
rcrb
mov
lds
cmp
fisubs
jp
test
or
or
nop
mov
inc
push
nop
mov
sub
push
in
leave
mov
fs
sti
fdivrl
or
hlt
mov
icebp
jle
jnp
in
mov
push
add
push
insl
leave
adc
xchg
dec
cwtl
mov
jnp
repnz
inc
stc
pop
xchg
pushf
repnz
push
bound
cmp
stc
xchg
fdivrs
aas
push
dec
push
cld
pop
mov
dec
lods
frstor
aam
repz
mov
jb
fsubs
outsb
sub
or
xor
cmp
movsb
add
movsb
test
out
xor
popf
and
lret
test
movsb
cmpsb
mov
ret
mov
jnp
sub
jp
xlat
jl
mov
mov
pop
shrb
dec
cmp
dec
stos
fadds
aas
push
dec
adc
push
mov
outsl
push
test
cmp
lock
nop
out
incb
push
fwait
movsb
pop
addr16
movsb
xchg
sub
lret
movsb
xor
pop
gs
push
insl
cltd
sbb
scas
cli
dec
mov
fs
push
add
mov
aam
negb
outsl
cmp
sub
pop
jge
xor
lret
data16
lods
mov
leave
cbtw
imulb
jmp
clc
xchg
mov
insb
fucomp
mov
and
nop
in
cld
aad
lea
push
das
and
aas
lock
stos
dec
lods
inc
scas
inc
dec
mov
xchg
imul
adc
lods
je
lds
test
daa
inc
std
inc
adc
sbb
fisubrs
das
mov
aad
jo
cwtl
xchg
in
mov
mov
rcrb
sub
dec
sbb
fs
jns
test
jo
stos
aas
mov
hlt
mov
xchg
aad
mov
fcoml
test
ret
test
lea
and
lret
or
fisttpl
sbbb
sub
pop
add
cmp
dec
mov
lock
sub
xor
sub
call
jo
ret
pop
loop
imul
fwait
jnp
xchg
jae
lea
int
stos
daa
push
repz
out
lock
xchg
jl
push
fwait
dec
push
enter
jle
push
test
repnz
loope
fisubs
subl
mov
xchg
lahf
movsb
dec
cwtl
jne
pop
lcall
mull
popa
pop
push
jbe
and
push
movsl
lock
popa
lods
cld
lea
insb
stos
scas
jne
mov
mov
xchg
scas
mov
rcll
inc
cwtl
test
test
mov
pop
push
xchg
sti
shr
dec
lcall
inc
cmp
into
inc
sub
int3
pop
xchg
or
jb
sub
les
jne
negb
orl
loopne
imul
jmp
fimull
jne
faddl
mov
mov
jb
add
mov
cmp
jb
rcll
stos
xchg
mov
xor
push
lea
adc
arpl
and
std
orl
pop
mov
mov
lods
mov
lock
mov
movsl
sub
adcb
mov
cmp
xchg
int
cmc
jmp
gs
mov
dec
mov
xor
clc
outsl
jbe
push
insb
sub
testb
rclb
mov
std
jb
sub
mov
cmpsb
sbb
mov
pushf
and
leave
push
cld
bound
popl
add
nop
test
mov
popa
dec
out
jne
and
xlat
pop
loope
lret
lods
push
ss
dec
inc
imul
mov
pushf
inc
xor
pop
mov
popa
sub
int3
push
push
pop
pop
jmp
negl
lds
aam
adc
aaa
ss
pop
jl
lahf
jb
xchg
lods
add
inc
mov
cmp
jae
ss
std
nop
sahf
and
adc
stc
or
mov
movhps
mov
int3
in
or
xchg
xchg
inc
dec
mov
mov
loope
adc
inc
mov
push
nop
cmp
gs
xchg
jb
jns
sbb
mov
dec
pop
stos
adc
js
lods
mov
dec
in
rcrl
in
mov
fisttpl
pop
xor
cli
test
mov
cmp
cltd
cmpsb
mov
in
jns
mov
out
lea
jbe
jmp
scas
jns
inc
stos
push
lret
push
pop
cmp
mov
icebp
mov
cmp
in
jae
jbe
mov
addb
incb
jb
push
cmp
loop
fs
fnstsw
sahf
cmp
int3
xlat
fisttpl
hlt
jge
pop
scas
daa
aaa
loopne
movups
push
sbb
aas
test
test
inc
fwait
inc
js
inc
aas
mov
xor
test
and
fistl
push
jp
xchg
or
lock
outsb
fistl
les
adc
pop
in
insb
cmc
jmp
xchg
jge,pt
sbbb
or
dec
loopne
xor
test
adc
xchg
xor
pop
rcl
push
lret
mov
mov
in
cmp
dec
push
push
mov
cmp
add
fiadds
addr16
cli
jbe
xchg
out
push
sub
pusha
mov
mov
mov
pop
mov
inc
loopne
scas
pop
add
lret
mov
mov
jg
sub
mov
mov
sub
pop
movsb
daa
and
insl
scas
jecxz
adc
sub
dec
arpl
dec
out
dec
mov
mov
or
push
cwtl
cmp
sub
inc
test
cmpb
mov
and
mov
pop
ret
jae
leave
stos
push
push
dec
mov
cmp
inc
je
pop
jl
mov
fsubrs
movsb
add
scas
movsb
mov
pusha
add
mov
in
pop
push
and
jb
sub
std
cld
bound
jae
cld
push
sbb
inc
outsl
jge
fstpl
mov
xchg
int3
xchg
das
sbb
sahf
mov
inc
mov
cltd
cmp
test
mov
frstor
cmc
fmuls
jecxz
and
xchg
lcall
pop
std
mov
pop
fidivs
lods
hlt
and
adc
pushf
mov
sub
pusha
cltd
mov
pop
adc
lods
insl
pop
sbb
std
rcr
push
inc
xchg
jns
fs
mov
int3
mov
lahf
lea
mov
cli
pushf
jns
push
imul
ret
cld
insl
ds
imul
test
lods
add
sub
add
imulb
mov
adc
jb
fidivrl
push
or
mov
gs
cld
test
lods
push
mov
mov
pop
mulb
push
daa
add
scas
xor
pushf
and
test
or
nop
pop
xlat
xchg
mov
lock
dec
mov
frstor
jp
aad
dec
adc
insb
cmpb
inc
lea
test
pop
push
repz
shr
test
out
push
inc
pop
jne
movsl
rcll
cmpsl
aad
jmp
lods
imul
sbb
test
sub
mov
insl
pop
sub
mov
push
ss
lods
pusha
or
mov
or
mov
and
xor
stos
jno
and
xchg
pop
in
test
push
dec
pop
mov
cmp
xor
lcall
pop
pop
ficomps
mov
cmp
jmp
adc
fsub
cmp
int3
flds
mov
in
xor
iret
push
lcall
add
data16
xchg
sbb
les
test
dec
pop
mov
jb
iret
push
inc
mov
mov
cmp
add
mov
andl
add
pusha
and
adc
and
pop
and
into
clc
sub
mov
jnp
rorl
xor
ja
je
cmp
addr16
test
jecxz
mov
sbb
std
and
sub
and
mov
push
add
jno
fstpt
nop
mov
rdmsr
xor
xor
je
sarl
xchg
push
aaa
mov
scas
mov
leave
mov
in
sahf
std
fadd
into
pop
lods
roll
mov
dec
fildll
in
fs
sub
sub
in
pushf
test
and
cmp
test
aad
cmc
repz
jno
dec
sbb
stos
int
and
lods
mov
daa
dec
loop
cmp
shlb
sbb
test
call
test
sbb
in
and
aam
aas
nop
mov
fwait
push
xchg
stos
and
lods
add
mov
mov
cmp
loopne
ljmp
pop
cmpsl
stos
movsb
push
sub
sbb
pusha
add
xchg
mov
push
xchg
jle
subl
ret
xchg
jg
bound
pop
jno
nop
fmul
mov
mov
pop
xchg
xchg
stos
lock
sarb
stos
jle
fcomi
xchg
daa
cwtl
jne
das
ss
test
ret
xor
xchg
mov
mov
mov
jecxz
push
cwtl
orb
jecxz
call
mov
in
xchg
cwtl
lods
hlt
xor
shr
mov
fisttps
in
movsb
add
cmp
mov
pop
roll
stos
movsb
or
roll
and
negl
stc
lods
lcall
xchg
sbb
je
mov
and
sub
xchg
fiadds
loope
jb
rcrl
add
mov
bound
push
outsb
xchg
stos
sahf
ss
arpl
test
leave
inc
xchg
xchg
inc
xchg
test
xchg
adc
add
or
movsb
pushf
inc
mov
jb
scas
sahf
sbb
mov
je
mov
test
nop
andb
sahf
loope
mov
fstpl
add
icebp
mov
ljmp
dec
xor
mov
add
dec
mov
daa
mov
lods
mov
sarb
insb
movsb
data16
outsl
imul
mov
mov
mov
xor
mov
dec
pop
mov
push
push
mov
xchg
int3
cmpb
int3
xor
mov
fdivrs
mov
push
adcb
inc
jle
std
fcompl
jae
push
push
mov
jns
push
cld
fs
ss
out
mov
bound
lods
pusha
push
imul
test
jmp
leave
pusha
outsl
dec
mov
sub
fstps
ret
mov
jns,pn
xor
aas
ret
xchg
lret
pop
movsl
add
inc
scas
rcll
mov
test
push
sbb
adc
mov
lret
cmpb
and
sub
xchg
add
enter
enter
lcall
outsl
sub
jle
jle
lret
aaa
pusha
test
stos
cltd
jl
mov
sbb
mov
iret
jb
in
cld
stos
iret
or
xchg
test
pop
fistps
test
fsubr
icebp
jge
psubusb
int3
sarb
movsb
pop
ret
cmp
cmpsb
dec
and
fildll
inc
jbe
inc
xchg
leave
roll
scas
js
pop
inc
xchg
sub
inc
mov
jp
mov
jnp
mov
int3
jb
lods
clc
jo
jmp
cmp
or
test
test
mov
add
in
push
sub
cs
pop
in
or
push
mov
arpl
rclb
repnz
and
or
add
in
sbb
test
ljmp
mov
nop
aas
lcall
mov
mov
nop
insl
push
sub
aaa
sub
mov
fnstcw
popa
nop
pop
lods
nop
hlt
shll
addl
add
lods
jb
xchg
loope
pop
or
adc
cli
dec
aad
scas
fs
popf
push
push
dec
mov
dec
repnz
popf
and
adc
mov
loope
mov
fnsave
fidivl
xor
test
xchg
js
and
filds
pop
movsl
xor
add
mov
fcmovbe
lods
jge,pt
pop
or
inc
nop
insb
sub
lock
leave
les
dec
inc
rclb
mov
mov
xchg
jmp
clc
xchg
xor
aad
stos
and
loop
sbb
and
and
cld
pop
sbb
orl
imul
rorb
push
movsb
les
stos
add
lods
push
fcomp
test
pushf
adc
xor
jbe
add
sbb
es
rclb
repnz
mov
leave
jb
push
add
xchg
xchg
imul
push
sbbl
scas
xchg
aas
in
xchg
jle
pop
pop
add
insl
adc
imul
insb
dec
imul
pop
push
xchg
jecxz
lcall
and
pop
imul
insl
sbb
in
mov
gs
push
xchg
stc
add
movsl
mov
mov
and
push
dec
pop
push
mov
scas
and
pop
leave
adc
xor
mov
xchg
pop
adc
shlb
scas
dec
orb
popf
xchg
mov
arpl
adc
aas
rolb
add
enter
movsb
movsl
pop
inc
or
xor
mov
cmpsb
arpl
adc
je
xchg
xchg
inc
xchg
popf
pop
leave
movsb
adc
test
mov
rorl
iret
jo
dec
inc
je
fs
mov
ljmp
rcll
sbb
test
push
and
sti
add
andb
shll
jb
adc
andl
sub
inc
mov
xchg
sub
lock
xchg
jne
aas
cltd
jg
fldt
stos
pop
int
fwait
leave
dec
pop
cmp
repnz
movsl
add
pusha
lahf
xor
leave
mov
andl
cmpsb
leave
into
cmc
stos
mov
push
sub
fidivs
out
xor
cmpsl
dec
add
xor
inc
lods
in
xchg
cmc
out
push
or
cmp
jae
movsl
mov
inc
into
xchg
icebp
ja
dec
scas
movsb
arpl
movsl
and
repnz
popa
aas
dec
mov
int3
jg
sub
lea
call
and
pop
int3
js
xor
mov
insb
lret
test
and
dec
cli
out
out
mov
cmpsb
sbb
pop
xor
xor
adc
mov
add
cmp
or
and
mov
sarb
in
out
sbb
outsl
or
xor
jge
notl
fdivr
je
jns,pt
mov
mov
inc
imull
adc
lods
jmp
in
mulps
dec
pop
mov
mov
mov
sbb
add
inc
ja
xchg
popf
add
stos
popa
mov
movsb
mov
xor
or
xlat
jecxz
mov
inc
jle
icebp
stc
test
dec
adc
mull
pop
and
popa
push
cmpb
xor
mov
pushf
popa
adc
xchg
cs
or
sub
stos
mov
adc
push
cli
xchg
pop
jp
mov
jb
insl
imul
sarb
mov
push
or
push
sub
loop
testl
jg
dec
rcrl
push
jae
mov
jl
pop
addb
jns
in
inc
jnp
cmp
inc
xor
aas
cmp
xchg
iret
sti
daa
xchg
inc
push
adc
mov
push
sbb
sub
mov
ljmp
lods
mov
xor
push
aaa
lcall
lods
lret
xchg
outsl
iret
adc
sti
outsl
mov
iret
jno
push
add
stc
xchg
stos
cs
mov
test
mov
cmp
fwait
mov
xchg
and
icebp
and
daa
xchg
shll
xor
sub
dec
push
loop
push
aaa
cmp
inc
inc
pop
dec
nop
mov
jne
mov
pushf
vmread
jno
mov
mov
cld
lds
dec
lea
pop
stos
nop
mov
scas
movsb
xlat
mov
mov
inc
xchg
lahf
or
fldt
jo
xchg
test
adc
inc
pop
push
mov
adc
pop
lds
call
or
mov
jnp
fs
in
xchg
sbb
cwtl
inc
sub
sub
aam
push
sahf
jns
and
xchg
xor
mov
mov
xor
mov
out
jecxz
imul
lock
lea
push
pop
insb
xor
jns
mov
dec
arpl
mov
mov
jecxz
dec
in
xor
push
jo
ret
jns
adc
adc
and
xchg
mov
sbb
xchg
aam
sub
ljmp
bound
sub
test
gs
mov
rep
lcall
rclb
sbb
stos
jns
ficomps
mov
cwtl
pop
dec
std
movsl
sub
and
aam
ss
sub
test
or
inc
xchg
and
imul
loopne
xchg
dec
out
sbb
jle
mov
and
fs
mov
test
iret
popf
icebp
adc
pop
out
xor
das
jmp
cli
inc
xlat
mov
loope
mov
pop
mov
mov
xchg
pop
mov
mov
daa
out
popf
sahf
adc
movsb
mov
mov
leave
or
jl,pt
les
push
mov
outsb
je
cmp
add
pmullw
and
test
cli
cld
call
aam
loop
xor
and
repz
daa
outsb
movsb
lcall
sti
jp
mov
scas
int3
jo
or
lods
ja
popl
loopne
pop
inc
jl
cmp
add
daa
xchg
subl
jle
and
mov
or
pusha
inc
mov
xor
repnz
xlat
aaa
and
or
cwtl
les
mov
movups
pop
insb
pop
movsb
int3
xchg
cmpsl
subl
fcomip
jb
push
cwtl
test
cltd
lea
stos
dec
out
aaa
scas
jg
mov
stos
jne
cs
sub
aas
cltd
hlt
or
push
test
or
lcall
xchg
dec
sub
bound
lods
test
hlt
push
jmp
icebp
lods
movsb
mov
xlat
dec
mov
test
loope
xchg
push
daa
push
out
int
xor
enter
cmc
or
jb
dec
jl
out
in
pop
in
les
mov
les
stos
xor
sti
or
jae
test
lods
je
scas
mov
rep
inc
pop
inc
xchg
xchg
adc
mov
gs
lods
lret
movsl
mov
leave
pusha
faddl
stos
cmc
pop
imul
xor
fnstsw
lods
xchg
loope
adc
or
sbb
xchg
ficoms
mov
sbb
mov
aaa
sub
pop
push
pop
rcrb
arpl
mov
das
or
mov
imul
je
test
mov
stos
push
mov
daa
jo
or
imul
mov
or
mov
enter
add
mov
mov
stc
add
adc
test
jge
jns
xor
mov
push
fildl
addb
scas
sub
or
push
mov
push
inc
iret
or
rcl
or
xchg
movsb
imul
sbb
movsb
xchg
add
sbb
orl
lret
adc
pushf
xchg
mov
cli
mov
jnp
in
push
cltd
pop
cmc
push
icebp
pusha
cwtl
xchg
out
pop
pushf
mov
cltd
ljmp
sbb
outsb
lea
inc
es
jo,pt
jmp
movsb
out
das
scas
lret
inc
jmp
adc
int3
jbe
test
cltd
dec
pop
dec
outsl
sbb
das
mov
sub
add
sub
mov
lds
xchg
lsl
lret
mov
repz
arpl
add
popf
loopne
cmp
testb
test
pop
lds
or
out
fsubrl
xor
test
lcall
clc
movsb
lret
lcall
sti
adc
adc
adc
sbb
lea
push
adc
lret
xor
push
inc
and
dec
nop
cmpl
test
pop
pop
xlat
or
scas
daa
pop
mov
inc
jb
icebp
xorb
popa
subl
sub
je
jns
cwtl
divl
addr16
xor
and
xchg
cwtl
enter
xchg
or
iret
add
adc
or
xchg
fs
testl
xor
daa
dec
xchg
cmp
xchg
jge
mov
movsl
repz
jmp
imul
scas
sub
cmpsl
movsb
por
mov
sub
data16
mov
mov
stos
xor
pushf
sub
int
jne
lcall
lret
bnd
sub
inc
bound
mov
mov
and
sub
notl
mov
jae
adc
das
pop
and
mov
stos
pop
jl
movsb
cmp
pop
sub
dec
imul
sbb
xchg
shr
pop
out
leave
imul
notl
int3
popf
aas
mov
jg
mov
enter
leave
subb
mov
and
test
lods
pop
add
jo
into
cli
push
lea
push
mov
js
mov
ret
lea
les
pop
sub
ds
pop
out
mov
gs
les
test
push
adc
jbe
lock
nop
or
mov
push
popf
add
mov
lret
test
mov
seto
jnp
adc
cmpsb
and
push
pop
lret
xor
pusha
mov
jl
mov
insl
cli
int3
addb
test
mov
jbe
lcall
je
cwtl
pushf
mov
fistpl
imul
dec
lds
and
lea
ss
jo
inc
mov
insl
mov
jbe
dec
adc
jecxz
inc
out
and
les
fdivs
test
mov
test
adc
sub
mov
test
insb
test
dec
hlt
hlt
mov
and
lahf
xchg
jae
scas
daa
addr16
add
out
icebp
mov
adc
cwtl
pop
inc
loope
cltd
fcmovu
sbb
dec
lret
pop
aam
inc
jg
lds
add
gs
sbb
mov
sbb
pop
data16
xchg
movsl
xor
repz
dec
sar
pop
rol
mov
sbb
mov
mov
dec
call
push
lods
mov
dec
xor
hlt
add
into
adc
mov
push
ss
xchg
popf
outsl
ret
adc
adc
adc
cld
jbe
lret
insb
int
xchg
jmp
xor
mov
xor
loopne
hlt
je
popa
dec
sahf
inc
pop
insl
or
loop
fsubrl
shlb
loop
insb
jbe
les
sub
out
loopne
jmp
fdivs
insb
and
icebp
mov
test
pop
pop
nop
cltd
jns
mov
stos
scas
popa
mov
movsl
xchg
je
mov
push
xor
fsubrl
incl
outsl
mov
sub
das
adc
inc
orl
fs
jae
pop
out
cmpsl
push
scas
xor
mov
rcrb
mov
outsb
fs
in
adc
out
out
lock
ljmp
stos
lea
dec
xchg
orps
pushaw
xor
sbb
adc
loope
addb
cmpsl
mov
fisubrs
sar
push
or
js
dec
in
dec
adc
push
push
mov
or
mov
or
test
sarb
jo
inc
dec
addl
je
movsl
pop
test
xchg
lret
andl
mov
into
hlt
xor
xchg
call
notl
sub
pushf
pop
aas
jbe
pop
mov
mov
mov
shr
cmpsl
pop
and
aaa
leave
enter
or
ficompl
cli
push
pop
add
insb
xor
add
mov
movsb
sbb
mov
in
inc
bound
out
fcompl
pop
lds
stc
mov
mov
mov
mov
mov
inc
xchg
rorl
sti
cmc
lods
cwtl
subb
xor
shll
lcall
xor
aam
jb
and
mov
mov
push
scas
jns
cwtl
aas
stos
andl
sub
push
pop
add
mov
nop
adc
pushf
and
sbb
lods
xchg
or
iret
jno
sarl
nop
rolb
jbe
out
jns
rcrb
hlt
subb
xchg
arpl
and
call
sbb
aam
sub
les
push
xchg
jnp
bound
mov
cwtl
leave
ja
mov
lret
xchg
lret
dec
inc
shlb
fsts
and
imull
vpshlb
xor
sub
fsubrl
and
stc
sahf
in
std
fsubl
jo
cwtl
cs
cmp
mov
hlt
jns
push
dec
mov
es
testb
ss
in
add
nop
mov
push
jl
sahf
ja
int
xor
xchg
dec
insb
xchg
dec
aaa
cmp
cmp
mov
cli
sub
jae
sbb
cmpsl
dec
imul
test
push
enter
es
mov
jg
icebp
mov
aam
sahf
adc
test
movsb
ficoml
jo
mov
push
ficoms
sbb
push
jo
sbb
cmp
fcmovb
xchg
out
mov
cmp
push
xchg
hlt
mov
xor
cmpsb
les
aaa
test
loope
xor
lahf
stos
hlt
nop
mov
movsl
ficomps
push
jmp
icebp
lret
pop
in
sahf
int3
mov
pop
aaa
frstor
push
js
xlat
mov
add
or
rorb
cs
out
movsb
sub
jbe
fs
arpl
ret
jg
arpl
or
adc
shrl
sub
sbb
fwait
ret
cmpsl
stos
dec
lods
fs
pop
adcl
xor
aam
mov
mov
mov
stos
xor
stos
adc
test
insl
int3
shrb
adc
mov
shll
jge
jbe
mov
test
addb
push
movsl
xchg
mov
jg
stos
lret
mov
sti
xchg
les
movsb
mov
lods
mov
stc
stos
mulb
int3
std
subl
loop
popa
in
scas
mov
lcall
insb
xchg
stos
and
int
lods
movsl
int
rolb
dec
cmp
daa
out
push
fcmovnb
popf
jne
andnps
adc
inc
cmc
sbb
das
inc
xchg
aam
adc
xchg
in
cmp
repz
test
lcall
inc
scas
mov
movsb
mov
movsb
lret
jle
fwait
dec
add
dec
rcrb
repnz
lcall
jecxz
out
pop
mov
jmp
imul
adc
mov
dec
int3
jno
sub
adc
pop
push
aaa
and
mov
jns
les
jne
das
in
ffree
xor
imull
clc
movups
out
mov
test
fwait
popf
xchg
mov
or
lcall
xchg
inc
je
jae
xchg
pushfw
data16
movsl
repnz
in
cmp
sbb
xor
add
test
aaa
mov
inc
or
push
enter
mov
inc
lret
pop
cmp
scas
fisttpll
push
pusha
mov
inc
push
mov
nop
mov
aas
push
outsl
fcom
popf
test
mov
and
jle
push
inc
pop
mov
mov
push
mov
mov
jns
inc
fwait
arpl
insb
mov
cmpsb
ret
jg
stc
sahf
dec
mov
lock
cld
lods
mov
pushl
pop
push
dec
push
push
lea
pushf
int3
push
cs
dec
pop
lods
add
hlt
into
jno
sbbb
in
test
bswap
scas
aaa
lret
mov
cmp
xchg
jg
jl
movsl
lahf
cmpsb
push
cmpb
inc
loop
push
mov
push
cmpsb
xor
sarb
sub
push
and
cwtl
lcall
mov
mov
leave
cmp
in
sbb
scas
popf
andb
inc
andl
leave
mov
in
sahf
test
enter
jae
mov
das
jl
cmp
mov
pop
test
data16
xor
jle
outsb
cmp
or
cmc
in
rclb
insb
mov
xor
in
jae
sub
dec
js
scas
jl
rcll
data16
xchg
and
aad
xchg
xor
fs
fidivs
dec
and
add
dec
mov
jne
mov
rcl
int3
dec
aad
imul
shlb
fmull
aas
jb
insb
push
les
add
enter
sbb
inc
dec
mov
mov
cwtl
daa
gs
bound
test
jo
sarl
inc
lcall
cwtl
xor
dec
xor
adc
jl
mov
sahf
push
imul
outsl
push
push
mov
jl
jnp
fadd
mov
fs
and
nop
adc
cld
adc
int3
mov
addl
enter
cltd
jne
ret
call
jp
pop
xchg
jmp
dec
jmp
cmp
enter
mov
pop
movsl
xor
push
in
and
stos
push
inc
pop
xchg
shl
mov
add
outsl
push
outsl
arpl
in
lods
in
cmp
subb
test
sub
fistps
adc
inc
sahf
enter
pop
mov
mov
je
jg
xchg
arpl
cs
lcall
jae
addr16
lcall
sbb
icebp
leave
lcall
lods
push
and
insl
stos
inc
sub
popa
lahf
sti
push
cwtl
les
mov
dec
add
jo
or
cmp
hlt
int3
pop
mov
dec
loop
add
popa
outsl
aam
mov
inc
int3
mov
adc
mov
add
xor
dec
add
les
xor
xchg
movsb
jle
pushf
xor
xor
lods
xor
das
mov
int3
std
in
es
or
and
movsl
mov
imul
clc
jns
aas
ret
call
mov
bound
pop
jecxz
imul
mov
das
xchg
mov
addr16
negl
test
push
movsb
inc
mov
mov
pushl
push
adc
into
insl
xor
dec
arpl
test
xor
cmc
lock
mov
movsl
xchg
pop
cltd
aad
shlb
insl
imul
addr16
movsl
in
dec
scas
movl
dec
adc
hlt
push
add
or
test
ficomps
mov
adc
test
sbb
mov
test
loop
push
pop
fcmove
sbb
xorb
in
arpl
xor
std
shrb
xor
mov
les
cmp
mov
mov
mov
imul
test
sahf
or
pushf
add
cmp
xor
dec
shrb
pop
arpl
xchg
stc
mov
ror
push
adc
leave
push
xor
add
dec
lods
mov
inc
xchg
add
pop
or
jl
or
xor
lret
lcall
nop
sbbb
fcmovne
in
pop
int3
xchg
cmp
add
xchg
es
movb
push
insb
mov
jg
jmp
or
mov
mov
test
sub
pop
addb
repz
xor
lar
ficoml
jnp
mov
mov
aas
xchg
int3
push
push
das
xor
mulb
stos
jp
daa
and
fcomi
jo
outsb
cli
outsb
mov
cmc
pop
repnz
pop
and
sub
dec
push
pop
mov
dec
xchg
xor
or
notb
lods
jmp
pop
pop
inc
xchg
test
push
rclb
sub
aas
jecxz
dec
add
negb
mov
pop
fdivrl
cmp
sub
mov
int3
dec
fs
and
cmpsb
sub
adc
pop
push
pminub
or
aam
rorb
cmp
push
mov
scas
je
mov
mov
pop
out
mov
inc
jo
and
movsl
pop
ret
rcrb
mov
fsubl
mov
out
mov
push
daa
mov
ljmp
push
cmp
stos
dec
ds
mov
adc
je
mov
loopne
lret
cld
js
and
mov
sbb
mov
xor
and
inc
sub
movsb
test
lods
les
adc
jne
outsb
jl
sti
ljmp
int
popf
add
cld
in
movsl
jnp
call
je
push
leave
xchg
inc
xchg
fwait
stos
xchg
inc
or
cmp
int3
int
nop
jl
cmp
lahf
jns
ja
stos
popf
into
inc
adcb
push
push
pop
push
in
adcb
xchg
ds
bnd
mov
jmp
mov
rorl
pop
popa
push
nop
pop
scas
int3
push
aas
jecxz
cld
and
cwtl
scas
jge
stos
cmp
mov
xchg
fstps
or
test
scas
popf
fildll
push
fmull
sub
stos
mov
jmp
mov
in
movsb
pop
cmpsb
add
jnp
lret
test
or
xchg
mov
xchg
push
mov
xchg
add
pop
jmp
adc
pop
rclb
push
cwtl
jmp
jo
out
fisttpl
out
loope
lds
subb
jb
pop
shrb
xor
mov
fdivr
in
test
loop
imulb
xlat
addb
mov
sbb
adc
and
mov
leave
inc
inc
xchg
decl
jae
jae
cmp
outsb
ds
mov
and
in
lcall
mov
cs
out
push
mov
in
lds
fs
cmpsb
sub
and
sbb
mov
test
mov
test
dec
aas
jb
xchg
dec
inc
cwtl
mov
sbb
addr16
out
dec
cmp
mov
movsl
std
hlt
push
and
fsubrp
mov
mov
sub
cwtl
xor
mov
subb
ss
xor
lods
xor
bound
or
outsb
hlt
je
aas
push
xchg
adc
cmp
xor
in
pop
jb
xchg
xchg
loope
inc
jns
test
adc
lahf
and
sti
loop
pop
imul
inc
scas
dec
mov
add
sub
movsb
sbb
ja
or
sahf
xchg
push
cmp
mov
sbb
and
shlb
adc
mov
sbb
stos
ss
cwtl
jo
addr16
inc
mov
cmpsl
pop
imul
jle
pushfw
repz
faddl
jnp
adc
cmp
andb
fwait
leave
movsb
nop
xor
mov
cmpsl
pop
insl
fbld
enter
lock
leave
les
lahf
je
fwait
xchg
cmp
scas
insb
fs
scas
mov
pusha
leave
lods
arpl
push
rcr
dec
pop
inc
jnp
xor
mov
xor
repnz
shlb
ljmp
mov
shll
mov
pop
fidivrl
lcall
mov
nop
scas
movsb
mov
jle
inc
jl
les
push
in
das
outsb
and
jae
push
adc
dec
jg
mov
pop
mov
xchg
cmp
xchg
daa
nop
cmp
mov
ficoms
stos
out
xlat
scas
xchg
fs
test
push
imul
test
popa
jno
ljmp
pop
add
or
inc
mov
lods
shll
pop
lcall
pop
lea
ret
in
push
arpl
sub
popa
or
aaa
leave
andb
adc
push
je
sub
mov
mov
popa
movsb
aam
mov
movsb
xchg
sbbb
push
jmp
nop
divl
push
insl
aas
andb
js
test
sub
cmc
jg
jnp
xor
pop
je
daa
sub
pop
add
arpl
or
sub
cld
insb
pop
sbb
cmpb
shll
je
mov
fcompl
nop
mov
out
cmp
and
dec
les
pop
call
xchg
and
imul
int3
jae
adc
popa
repnz
jecxz
xchg
cltd
mov
inc
scas
sahf
fs
or
xor
out
inc
out
movsb
mov
mov
scas
popa
dec
lods
ret
mov
xchg
insb
je
or
sbb
rorb
out
push
or
add
fs
jns
repz
pushf
jbe
sub
mov
mov
mov
in
xchg
adc
scas
jo
push
sbb
out
daa
fdivr
test
call
and
outsb
mov
scas
push
xchg
adc
jg
inc
adc
cld
xor
dec
out
mov
ss
fsubr
jb
mov
stos
aas
pushf
jne
lods
ja
fs
insb
pop
mov
pop
int
xor
movsb
push
inc
sub
ret
popf
jae
les
cmp
jb
cmp
pop
and
mov
scas
pop
stos
jae
les
jnp
mov
mov
adc
lcall
imul
lret
fdivr
sarl
ret
dec
lods
sbb
mov
jns
in
in
roll
lods
iret
aas
cmpsb
mov
lods
add
pusha
adc
jmp
push
pop
test
xor
lods
lds
sub
fsubrs
test
jle
scas
cmp
mov
mov
pusha
mov
lret
push
inc
mov
leave
jae
sub
ja
test
cmpsb
mov
lods
cmpl
xor
dec
pop
mov
dec
mov
mov
push
mov
xor
aam
cmc
dec
jno
cltd
xchg
lret
mov
movsl
cmp
icebp
push
jmp
mov
mov
hlt
nop
les
out
movsl
sub
pushl
pop
xchg
movsl
dec
jge
mov
mov
rorl
inc
in
xchg
popf
pop
les
cmpsb
xchg
insb
lcall
sub
rorb
cmpsl
stos
int3
mov
rorb
cld
cmp
or
nop
clc
popf
int3
jbe
test
xorb
insb
pop
xchg
push
out
sbb
xchg
push
adc
pop
insb
fsubr
dec
loope
pop
aam
inc
clc
stos
xor
jmp
in
lock
test
ds
fwait
inc
aam
cmp
fsubs
xor
dec
pop
inc
mov
fidivs
insb
push
movsb
sub
mov
movsl
std
movsb
push
loop
pop
dec
insl
loope
or
int3
call
xchg
inc
pop
cwtl
xchg
sub
stos
lock
int3
inc
popa
mov
std
mov
stos
imul
xchg
cwtl
movsl
and
shrl
inc
jg
ljmp
leave
les
xor
sbb
pop
mov
ljmp
fldcw
xor
pusha
arpl
xchg
into
or
xchg
dec
and
mov
adc
in
popl
pop
lret
mov
add
ret
mov
pop
add
push
leave
fs
adc
cmp
pop
push
lods
inc
movswl
xchg
push
jo
push
sbb
sbbb
sub
in
aas
dec
jb
xor
popa
cmp
and
lods
jl
jmp
aam
bound
and
dec
xlat
xchg
stos
jmp
mov
nop
or
stc
mov
mov
stos
jo
fidivl
in
mov
movsb
mov
jbe
sub
dec
nop
inc
insb
sub
sbb
xchg
mov
fwait
int
shlb
push
jae
lods
mov
jnp
and
mov
mov
xchg
mov
scas
in
hlt
pop
mov
mov
movsb
cmp
mov
sbb
mov
popf
dec
inc
jno
jnp
jge
aam
pop
scas
nop
dec
xor
sbb
repnz
popa
arpl
test
sub
jbe
addl
push
and
dec
repnz
inc
xchg
xor
push
int
adc
cmp
rolb
xor
call
out
jne
pop
push
cmp
mov
mov
xchg
outsb
lods
inc
int3
cs
inc
pop
pop
insl
sub
mov
pop
pop
push
nop
adc
inc
xor
test
jmp
andb
sub
in
pop
mov
cmp
add
mov
in
mov
lretw
repnz
push
mov
in
test
cwtl
pop
mov
rep
mov
and
mov
test
dec
les
test
lods
cltd
into
jne
inc
stos
loopne
in
leave
and
xlat
clc
sbb
loopne
or
and
and
mov
push
out
dec
int3
adc
cmp
ret
cmpsb
rep
inc
ret
and
scas
adc
jecxz
add
or
sbb
scas
xor
mov
lods
or
and
gs
addr16
jmp
push
cbtw
cmp
fs
mov
aam
adc
sbb
xchg
jmp
roll
dec
lock
pop
push
dec
in
sbb
fsubrs
mov
adc
lret
xchg
add
dec
mov
lret
push
lock
sub
push
data16
imul
jmp
inc
cwtl
xor
int
idivb
sbb
aaa
pushf
dec
pop
cwtl
or
add
mov
mov
aaa
icebp
sbb
pop
fidivrl
pop
daa
punpckldq
jecxz
scas
pop
push
es
gs
movsl
push
push
or
pop
jl
xchg
out
sti
pop
and
sub
adc
xchg
movsb
pop
pop
mov
int3
call
ljmp
das
stos
lcall
inc
shl
mov
xor
mov
cmp
cmc
xchg
shrb
jb
jle
mov
and
int
popa
movsl
sub
sbb
mov
movsb
aas
cld
scas
das
leave
loop
xchg
xor
xchg
push
xchg
shrb
rcl
dec
je
xchg
jmp
pop
adc
test
js
inc
dec
mov
into
inc
dec
rorb
mov
dec
dec
out
andl
pushf
inc
insl
sbb
sbb
mov
out
inc
int
adcl
scas
popa
lahf
daa
imul
aaa
push
int3
pop
push
dec
jmp
or
dec
cmp
jl
faddl
lcall
cs
mov
xor
outsb
pop
inc
test
jo
cmp
pop
dec
or
leave
loopne
push
js
cli
mov
cmp
mov
push
mov
stos
jnp
cmpsl
das
stos
data16
aaa
pextrw
or
or
mov
fs
test
out
adc
data16
inc
sub
lret
sub
test
js
std
pop
jg
ds
jge
adc
outsl
inc
mov
jns
pop
rorb
push
aaa
ja
cmp
lods
mov
clc
mov
xchg
add
jnp
rcll
test
aam
mov
scas
or
out
xor
aaa
mov
pop
rcrb
pop
pushf
mov
jge
push
aas
lret
pop
addr16
cmp
inc
lods
test
movsl
mov
fsubrp
xchg
xchg
lahf
int3
test
aad
arpl
xor
push
mov
pop
test
mov
lret
push
sub
aas
mov
mov
mov
iret
div
mov
add
jl
xor
push
cmpsl
pusha
loope
xlat
stos
add
mov
out
mov
and
jno
fcomi
push
push
sub
dec
adc
cld
pushf
inc
push
mov
cmp
pop
pop
mov
lock
imul
xchg
sub
in
movsb
sub
lret
jl
mov
insb
xor
inc
cli
sar
scas
shlb
mov
popa
ret
test
push
imul
pushf
insb
jns
cmpsl
mov
fstp
rclb
mov
stos
and
fdivr
adc
bound
fidivs
lret
popa
rorl
jns
mov
xchg
xchg
rclb
rcrb
stc
jnp
popf
push
push
xor
xchg
and
push
lods
pusha
and
imul
mov
shrb
sahf
lock
idiv
popf
addl
pop
popf
inc
mov
nop
hlt
rorb
dec
sahf
xchg
scas
test
pop
jb
push
cwtl
jp
leave
loopne
mov
jmp
or
and
xchg
xchg
inc
adc
lahf
mov
mov
mov
decb
das
push
aas
fisttps
push
cmp
outsl
sti
mov
rcrl
adc
push
aas
mov
push
and
lds
test
mov
ss
pop
in
mov
stos
das
imul
in
sub
xor
int3
xchg
xchg
add
adcb
rcll
movsl
add
in
cmpsl
push
mov
test
and
add
rcll
sbb
mov
cli
gs
xchg
popf
bound
push
loopne
subps
cmc
sbb
aaa
enter
sub
sub
int3
in
jbe
lods
add
xor
mov
call
dec
lods
ret
and
test
imul
xchg
push
sub
lods
xchg
inc
cmovne
bound
inc
jmp
mov
pop
out
stc
add
into
xchg
xor
int3
and
lods
and
push
lods
leave
jl
shll
aad
leave
sbb
loope
and
dec
dec
pop
mov
aad
mov
pop
fwait
inc
push
adc
fs
movsl
xchg
sub
in
fwait
dec
les
int3
cmpsl
mov
movsb
inc
lods
lods
xchg
dec
adc
mov
jp
test
mov
adc
arpl
push
add
insl
fisttpl
pusha
push
testb
mov
insb
stos
int3
sub
pop
adc
xor
pusha
jp
adc
roll
mov
pop
das
adc
xor
jo
fcoml
xchg
popa
adc
jae
lods
fidivl
loopne
lods
rdpmc
cwtl
sahf
push
mov
aaa
aam
repz
fdivrl
clc
repnz
in
lahf
fcomps
jnp
mov
outsl
call
les
icebp
movsl
jge
mov
add
aam
pusha
mov
leave
mov
xchg
lods
cmp
in
sarl
enter
leave
movsb
mov
les
xorl
pushf
fmuls
add
and
inc
mov
stos
push
inc
xor
xor
sar
je
fildl
int3
push
sbb
jns
dec
add
data16
fbstp
jb
fs
mov
pushf
fldt
mov
ret
dec
xor
pop
rorb
shl
xor
call
rol
inc
sbb
movsb
dec
test
cmpsb
pusha
in
mov
loop
lds
push
repz
xchg
adc
cmpsl
cld
xor
xchg
jl
lcall
pushf
cltd
xor
jle
cli
stos
xchg
inc
aam
and
leave
mov
scas
fsubrl
add
pop
pop
dec
cmpsb
repz
pop
xor
lods
aad
out
inc
push
mov
lret
mov
dec
push
mov
mov
jo
sbb
jb
or
sub
imul
jne
movsl
subl
dec
imul
xchg
mov
mov
les
movsb
int3
aas
adc
out
xchg
add
pop
xor
gs
mov
enter
xchg
inc
xlat
imulb
adc
loop
mov
aaa
jge
jae
lret
cli
dec
add
or
lods
push
jnp
loope
lretw
pop
test
xchg
jne
and
in
mov
mov
loope
shlb
ret
mov
mov
ss
icebp
sub
scas
pushf
leave
xor
push
push
bound
outsl
dec
adc
movsb
pushf
divl
aas
push
sub
sbbb
inc
push
inc
dec
js
cwtl
bound
xor
outsb
test
into
pop
lcall
push
jbe
xchg
je
and
movsl
and
out
xchg
dec
daa
call
nop
int
mov
cmpsl
sahf
pop
add
insb
and
aam
mov
and
jge
pushf
sbb
popa
or
int
bound
sbb
pop
jbe
xchg
jae
xchg
mov
cmpsl
test
iret
call
push
pavgb
test
push
mov
xchg
out
pop
int
jne
jno
test
addl
shrb
testb
sbb
push
outsb
add
popa
dec
fnstcw
cmpl
xchg
shll
xchg
in
notl
insb
outsl
add
xchg
cmp
push
jo
mov
int3
mov
xor
push
mov
push
ds
fstl
int3
jecxz
pop
test
pushf
mov
cmpsl
push
xchg
jb
mov
fcmovne
or
pushf
pop
mov
push
pop
iret
sbb
xchg
out
int3
sbb
inc
dec
inc
pop
dec
mov
fcoms
repnz
or
in
test
movsb
les
test
ficomps
mov
sbb
push
dec
xchg
rcrb
sub
xchg
je
nop
incb
xchg
sub
sub
xchg
cmc
outsl
sub
lea
mov
xchg
add
jae
clc
pop
sbbl
mov
mov
lea
xchg
mov
pop
fistpll
xchg
test
xchg
shrb
jae
outsb
sub
int3
pop
jno
les
hlt
insl
je
jo
dec
lds
movsb
add
je
xor
popf
mov
mov
fwait
cld
push
aad
das
jo
movsl
sub
sbbb
inc
xchg
xor
mov
stc
xor
jnp
jb
mov
jmp
cmc
aam
sub
pushf
pop
xor
xchg
or
push
movsb
jbe
mov
and
xor
inc
cwtl
je
or
mov
and
or
push
fwait
xor
andb
mov
xchg
xchg
jbe
in
mov
scas
loop
stos
mov
inc
pop
pushf
dec
push
scas
mov
test
test
movsb
std
pop
hlt
dec
xchg
scas
or
mov
jmp
inc
push
sbb
mov
xor
ja
aam
dec
and
mov
movsl
cli
inc
pop
pop
adc
int3
stos
fcomi
sub
test
adc
popf
jbe
or
xor
dec
mov
cmp
inc
pusha
les
xchg
dec
xchg
test
mov
mov
shll
and
xchg
movsl
scas
test
imul
dec
pusha
cli
imul
push
lahf
adc
push
pop
pop
mov
lcall
popf
pop
out
sub
mov
loop
mov
jbe
xchg
pop
leave
movsl
cmp
pop
andb
jecxz
in
stc
lea
bound
ljmp
es
cmp
into
mov
add
mov
test
pop
aam
in
sbb
jl
jl
int3
add
cmp
jl
inc
les
shlb
leave
cmpsl
mov
xlat
mov
imul
dec
les
push
mov
fmull
push
inc
lcall
into
lcall
xchg
pop
cwtl
cwtl
xor
data16
xlat
out
lea
js
addl
sub
insb
xchg
sbb
cmpsb
int3
scas
xchg
mov
cmpsb
sub
and
insb
negl
jp
cld
and
in
mov
addr16
sub
xor
cmp
add
adc
cmpsb
adc
hlt
pop
arpl
mov
fwait
jg
or
gs
push
stos
jae
sub
xlat
pop
mov
cmp
iret
leave
cltd
jb
outsb
inc
das
and
imul
mov
mov
dec
cltd
addr16
adc
and
xor
loop
mov
xlat
lcall
movsb
jb
mov
jo
mov
lcall
pushf
daa
mov
add
push
icebp
loop
and
pop
mov
out
cmpsl
mov
mov
cmpl
cmpb
in
iret
flds
push
mov
push
shl
mov
je
aas
inc
sahf
pop
aas
xchg
in
arpl
out
pushf
xor
xchg
add
imul
insb
nop
add
stos
jnp
lea
rcll
js
outsb
rorl
pop
ret
pop
xlat
mov
loope
dec
idivl
fidivrl
mov
mov
mov
popf
fs
xchg
pop
stos
testb
xchg
popf
push
repnz
call
aas
cld
jb
sti
popf
xchg
xor
xchg
arpl
and
jge
sub
jecxz
xor
cmc
idivl
in
ds
jo
pusha
cwtl
cmp
sahf
xor
jg
mov
jp
inc
add
outsb
mov
push
add
pop
insl
bnd
test
fwait
nop
cmp
int3
nop
mov
inc
xor
mov
enter
mov
lret
mov
add
sub
loop
or
js
xor
cmp
pop
add
into
call
pop
sub
es
outsl
mov
pop
outsl
sbb
shlb
es
scas
mov
xchg
imul
ret
popf
sbbb
js
in
inc
data16
or
sbb
jg
les
imul
mov
pop
bound
fwait
stos
sub
int3
shrb
call
out
jb
dec
xor
outsb
dec
jb
dec
mov
inc
pop
xor
cmpsb
or
icebp
dec
adc
fbld
cmc
rolb
sbb
arpl
mov
push
inc
dec
pop
add
xor
mov
inc
test
jmp
push
fwait
aas
lods
dec
dec
movsb
aam
leave
stos
push
test
cmpsb
mov
mov
lods
xor
mov
pushf
and
xchg
sbbb
pop
ljmp
bound
and
movsb
aaa
lods
aas
ror
cmpsl
and
push
jmp
xchg
lods
xlat
movsl
sbb
push
fcompl
or
mov
push
jns
jns
lea
iret
xchg
mov
mov
xlat
mov
xlat
mov
in
arpl
cmpsb
imul
ret
inc
push
cmp
cltd
loop
push
cmp
xchg
lock
jne
xor
cltd
es
jb
test
mov
or
cmp
add
ffreep
loop
shrb
testl
sub
mov
andl
mov
pop
and
lods
in
scas
test
movsb
pushf
mov
jbe
or
xchg
rcrb
or
cbtw
mov
dec
push
jp
add
push
jbe
or
aam
cltd
sub
inc
xor
insb
and
stos
jmp
insb
sahf
dec
push
cld
pop
adc
pushf
lock
mov
mov
lret
push
jle
pop
sbb
sub
das
test
outsl
lea
test
xchg
pushf
dec
repnz
mov
xor
mov
sbb
mov
test
loopne
pop
loop
mov
jnp
or
sub
xchg
pushf
popa
ror
testb
pop
push
or
cmp
mov
mov
hlt
mov
or
sub
sub
fstpl
mov
cmp
imul
movsl
shl
mov
inc
loop
lea
int3
push
enter
imul
mov
sahf
js
mov
imul
pop
fwait
push
xchg
test
fs
popf
fidivl
fmuls
aad
jno
mov
jp
push
adc
or
or
call
mov
lret
xchg
cmpsl
scas
stc
repnz
mov
fistpll
xchg
push
push
fdivs
fsubrl
adc
iret
add
inc
sub
scas
sarl
aas
mov
bound
push
mov
pop
add
jb
incb
pop
icebp
int3
cltd
push
lahf
jno
repz
pushf
out
and
jl
dec
push
adc
jae
cmpsl
int3
add
xchg
mov
push
test
push
inc
jg
xchg
in
fmulp
dec
aam
jo
mov
inc
lds
or
cwtl
scas
pushf
sub
sub
cmp
or
mov
mov
out
arpl
dec
addl
xor
aaa
mov
test
mov
repz
xlat
adc
mov
sbb
ror
lods
out
fildll
testl
loop
ss
mov
jnp
call
mov
mov
in
outsb
pop
mov
and
jmp
mov
jnp
sub
jg
rep
test
pusha
mov
dec
in
into
fstl
fidivrs
push
mov
add
or
pusha
cmp
scas
pop
cmp
ss
inc
jg
movsb
aas
cmp
or
xchg
jne
xor
mov
fbstp
es
lea
bound
adc
jae
cmc
insl
mov
popa
adc
push
jbe
cltd
daa
mov
dec
mov
push
dec
fs
outsb
push
out
notb
mov
movsl
and
xor
lods
outsl
ficomps
cmp
xchg
sbb
jo
sbbb
xlat
fisubrl
rcrb
push
xchg
pop
jmp
test
mull
rolb
dec
and
fwait
dec
or
bound
bound
dec
nop
jo
add
arpl
std
mov
aaa
push
ds
cmove
test
lods
pop
int3
sub
xchg
scas
jmp
jge
pextrw
mov
cmpsl
mov
mov
inc
jge
push
fstp
cmc
pop
sub
xor
sub
mov
or
push
and
and
dec
jb
mov
mov
adc
fwait
out
adc
xchg
mov
lods
lcall
mov
cmp
jnp
pop
mov
push
jns
inc
push
inc
int
mov
pushf
sub
jno
jae
mov
icebp
les
dec
scas
pop
movsl
and
cmp
jns
mov
lahf
xchg
fsub
out
add
rcll
fistpl
push
mov
mov
jae
vmaxss
lcall
inc
mov
insb
mov
adc
jns
cmc
inc
insb
xor
cwtl
inc
cmp
ljmp
lods
pop
sub
out
imul
sarb
xchg
cmp
mov
cli
test
int3
dec
fldt
pop
xchg
pop
data16
dec
xor
shrl
ds
scas
leave
and
sub
inc
mov
lods
cltd
and
les
andb
movsl
sbb
mov
lret
test
jb
shlb
pop
test
pushf
cmc
pop
bnd
mov
in
inc
popf
pop
sub
adc
xor
aas
inc
jge
push
ror
orb
mov
stos
jmp
mov
adc
leave
shlb
mov
loop
adc
xor
push
stos
lea
je
sbb
pop
icebp
das
cwtl
mov
lds
popl
mov
into
pusha
adcb
out
xlat
dec
scas
and
mov
loopne
cld
dec
sub
sbb
or
dec
imul
cmp
in
imul
jmp
aaa
adc
xor
popf
int3
mov
adc
push
mov
cld
push
inc
leave
xchg
loopne
cmp
mov
push
test
lret
in
pop
stos
pop
add
ret
xor
adc
jge
data16
inc
jmp
sub
or
push
jns
xlat
sub
fs
mov
popf
jo
cmpsb
ret
push
or
push
xor
fmuls
mov
in
lock
inc
stos
xchg
mov
cmp
xor
jle
pop
xchg
mov
pop
test
lcall
push
fs
jne
mov
pop
push
push
addb
mov
dec
dec
mov
out
fwait
lds
in
lret
add
nop
adc
ja
push
je
and
xchg
out
inc
stos
mov
jp
hlt
mov
lock
push
push
xchg
icebp
jo
pop
xchg
inc
cmp
pop
outsb
sbb
push
test
imul
out
mov
lods
daa
aaa
aam
mov
xor
hlt
xchg
add
xchg
int3
mov
add
aam
andb
adc
jnp
outsl
stos
jg
popf
insl
lds
jae
test
enter
push
stos
push
leave
fwait
push
adc
inc
add
dec
daa
ss
cmp
jne
push
mov
ss
andb
push
jno
test
xor
faddl
inc
jmp
icebp
cld
pop
dec
jo
cmp
pushf
push
pusha
outsl
and
pushf
mov
or
call
adc
out
outsb
scas
repz
int3
daa
or
cmp
mov
sub
lock
inc
shlb
test
ja
dec
add
movsl
stos
shll
leave
or
movsl
cli
sub
popf
pop
mov
mov
adc
dec
cld
insb
in
xor
mov
cmp
ds
cmc
adc
mov
mov
sub
std
shrb
xor
push
sub
or
push
mov
dec
scas
imull
lcall
repz
das
push
mov
popf
pop
ret
mov
inc
fs
aaa
add
pop
orl
daa
lea
cmc
dec
adc
bound
xchg
pop
dec
mov
les
jge
sub
pop
mov
push
in
mov
outsl
adc
add
scas
pop
aas
jmp
outsb
jae
push
mov
dec
cld
dec
pop
rorb
sbb
mov
sbb
sti
test
movsl
sub
lcall
push
xchg
movsb
and
fwait
cmp
cmpsb
pushf
mov
loope
enter
shll
dec
divb
sahf
lret
xchg
mov
add
push
test
xchg
cmc
lock
scas
rcll
cmpsb
das
inc
xor
dec
stos
leave
adc
xchg
xchg
scas
mov
xchg
inc
push
pop
gs
fs
cmpsb
leave
push
xor
xchg
ret
and
leave
rolb
jno
dec
cmp
cmpsb
ficoms
je
sbbb
subl
in
dec
ret
subb
insb
xor
mov
jo
clc
pushf
stc
mov
leave
mov
scas
cmp
push
aas
insb
std
rclb
test
or
inc
sti
lods
scas
leave
in
insl
cmpsl
outsb
icebp
js
cmp
lods
push
mov
lret
xor
jl
cltd
in
xchg
popf
stc
mov
lods
scas
test
fstpt
push
lret
lods
gs
test
push
pop
xchg
pop
sbb
movsl
xchg
and
pop
pop
mov
jo
popa
cmpsl
cmpsl
cltd
mov
aas
mov
mov
mov
mov
mov
push
dec
lret
test
xor
imul
lds
adc
inc
aam
cwtl
andb
xor
jl
mov
cld
pop
xlat
xchg
imulb
jl
bound
loopne
movsb
ss
xchg
imul
or
jno
jns
mov
mov
out
xor
lods
or
loop
mov
pop
test
movsl
mov
and
xchg
int3
jecxz
inc
clc
js
mov
lods
add
pop
rep
pop
push
sti
lods
js
xchg
add
mov
jecxz
or
push
push
orb
mov
repnz
pop
inc
imul
mov
mov
outsb
je
or
test
xchg
ljmp
inc
aas
or
pop
aas
push
repnz
inc
aas
mov
mov
jecxz
mov
adc
stos
shr
mov
mov
mov
push
lea
xlat
add
sub
xchg
stos
push
push
fwait
pop
add
movsl
pop
pusha
or
les
ljmp
je
dec
mov
repnz
xor
dec
xor
lds
aam
pop
sub
leave
pusha
pusha
pop
xor
lea
and
add
sub
mov
in
xor
jo
aas
in
cmp
leave
imul
scas
jp
js
and
xor
dec
xlat
xor
jb
dec
adcb
lahf
mov
pop
lods
dec
jmp
jb
pop
subl
mov
icebp
cmp
xorl
add
mov
orb
adc
outsb
push
mov
sti
mov
sbb
jo
mov
adc
xor
pop
mov
mov
insb
push
rcl
mov
arpl
pop
xchg
add
mov
push
push
data16
sub
inc
out
mov
pop
mov
aam
ds
pushf
pop
xchg
push
ss
jnp
leave
enter
sub
push
insl
jge
rcrl
cmpsb
jbe
jb
mov
xchg
xlat
mov
sub
jo
pop
pop
divb
pop
int3
push
ja
push
and
gs
sub
test
idiv
sub
fimuls
leave
mov
in
lods
lahf
sahf
lahf
push
push
int3
fidivl
mov
fldl
notl
lea
mov
lea
jnp
ret
jg
xchg
lret
mov
ret
arpl
and
int3
clc
or
sbb
outsb
iret
push
lods
dec
adc
push
nop
adc
jb
cwtl
mov
es
int
fs
mov
iret
movsb
add
imul
inc
push
sahf
jns
in
stos
sub
leave
movsb
cs
lea
ljmp
pop
dec
scas
pushf
ret
addr16
pushf
je
dec
scas
int3
insl
push
pop
pop
leave
inc
cmp
subb
pushf
outsl
pop
mov
jo
stos
dec
xor
insl
mov
jle
aam
scas
xor
in
sub
rorl
push
int
movsb
push
bound
lret
xchg
rorl
cmp
enter
rsm
fadd
scas
lods
dec
mov
push
mov
xchg
outsl
mov
cmpsb
out
fcomps
repnz
ret
xchg
inc
test
jp
fstp
inc
cmp
pop
adc
pop
jb
and
imul
clc
pop
hlt
mov
daa
js
adc
fwait
repz
jo
mov
imul
xchg
xor
lods
lock
ds
or
repz
je
out
mov
push
push
inc
ss
adc
mov
mov
jo
data16
movsl
xchg
lods
std
sub
push
pop
roll
orl
mov
and
outsb
jae
or
dec
out
jne
add
test
pop
cmp
sub
xchg
cmpxchg
cmc
imul
insb
and
mov
fdivp
je
xor
mov
sbbl
fstps
inc
lea
nop
add
mov
add
jno
jmp
jno
ja
dec
outsb
mov
lods
sbb
sub
jno
mov
cmp
nop
aam
mov
mov
mov
jecxz
jnp
mov
push
je
jmp
add
sbb
or
test
popa
add
mov
jmp
mov
sahf
jnp
scas
inc
cmpsb
adcb
dec
nop
pop
cmc
cmp
outsb
mov
fwait
jnp
push
or
sahf
int
pop
inc
xchg
and
cltd
add
xchg
loop
mov
fdivl
pop
stos
bound
dec
les
adc
mov
ret
int3
xorl
loop
mov
mov
int3
inc
mov
pop
lods
and
das
das
push
lea
mov
sub
pop
cmc
jp
fimuls
rcrb
pop
sbb
mov
jbe
mulb
js
loope
cmp
cmp
movsb
jnp
daa
aaa
fdiv
aas
mov
imul
sub
mov
test
insb
insb
movsb
xor
xor
int3
fs
imul
xchg
pop
add
push
les
jle
inc
jmp
push
movsl
ret
sbb
mov
insb
mov
jae
jb
sti
sar
cmp
push
nop
scas
stos
dec
xchg
and
out
add
dec
iret
cltd
adc
mov
xor
dec
and
cwtl
int3
push
imul
adc
mov
push
mov
shll
mull
dec
dec
push
loop
adc
std
sub
push
popf
sbb
arpl
cwtl
xor
mov
cmp
jns
dec
cmpsb
mov
mov
and
mov
sbb
in
and
inc
mov
stos
pusha
mov
shrb
movsb
std
mov
shrb
mov
roll
adc
mov
gs
sti
xchg
in
outsb
jge
cwtl
fs
cmp
push
mov
mov
imul
or
daa
inc
cmpsb
fldcw
outsb
ror
pop
inc
cld
out
xchg
in
imul
ss
test
xchg
data16
adc
js
push
sbb
or
cld
repz
loop
mov
hlt
mov
push
jg
std
fwait
mov
inc
test
bound
mov
xor
jae
dec
pushl
push
inc
ljmp
out
and
movsb
sbb
xchg
lea
out
sub
mov
aad
popa
stos
mov
nop
clc
mov
in
call
xor
cmc
push
push
xchg
sarl
jns
lods
pop
or
inc
ds
jo
or
jae
and
loope
shrl
test
dec
fisubrs
lods
repnz
cmc
decb
xchg
add
dec
hlt
out
inc
lock
ds
sahf
fiadds
loop
jnp
pop
pusha
pop
jl
subb
lahf
jno
fs
movsl
aaa
cmpb
sahf
outsb
and
pop
jp
pop
insl
adc
movsl
imul
lcall
mov
scas
mov
ss
adc
das
int3
shrl
sbb
out
jbe
adc
mov
adc
inc
in
xchg
pop
mov
test
cmp
pop
cmpsl
jbe
jle
push
add
mov
repz
xchg
xchg
push
int3
stc
xchg
test
in
add
xor
cmpsb
cld
jo
cwtl
mov
or
push
pop
int3
jge
cmpsl
lret
inc
sub
mov
cli
repnz
push
mov
int3
in
adc
bound
mov
sub
fwait
stos
lcall
int3
push
xchg
lds
nop
movsb
sub
imul
push
test
sbb
xorl
outsl
xchg
int3
mov
in
mov
and
jg
cwtl
push
movsl
divb
stos
jb
sahf
and
xor
fsubrl
int3
mov
dec
iret
sub
imul
jo
mov
jle
loope,pn
xor
pop
mov
xor
orb
mov
or
inc
lahf
stc
vcvtps2dq
lcall
popa
pop
push
int3
out
xchg
jl
in
mov
fildll
stos
add
stos
xlat
or
jae
inc
sbb
lods
das
test
or
dec
movsl
pop
int3
dec
subb
pusha
dec
js
fs
push
sbb
xchg
aas
adc
imul
fstpt
and
imul
out
stos
mov
lds
popa
rcll
adc
mov
lea
dec
pop
and
sbbb
lds
mov
push
xchg
scas
int3
fwait
adcl
add
dec
mov
aaa
cmp
sbb
cmpsb
loope
mov
lods
xor
cmp
sub
cmp
das
repz
test
adc
out
mov
ds
rcrb
mov
xor
hlt
in
scas
adc
mov
dec
mov
xchg
rol
lods
mov
fisubs
leave
fidivrl
movsb
and
in
rcll
pop
adc
cltd
test
imul
mov
fwait
ljmp
cld
movsl
push
mov
add
cli
movsb
pop
and
insb
movsb
or
cld
rcrb
orl
adc
dec
std
sub
jo
daa
mov
add
add
mov
mov
or
cwtl
jb
movsb
sar
and
push
loop
xor
push
arpl
jl
lcall
lahf
movsb
cs
or
out
je
xchg
adc
clc
out
repz
mov
fsub
inc
xchg
int3
shlb
enter
pushf
and
mov
test
jle
jp
xchg
or
and
fs
jns
test
xchg
lods
sti
sti
sbb
cwtl
call
adc
pop
adc
fs
pusha
outsb
lods
xchg
pushf
and
ret
and
imul
mov
jl
pushf
pop
sub
cld
mov
iret
lahf
leave
out
jle
adc
mov
cmpsl
lods
sub
jae
cmp
cltd
xor
mov
sahf
sub
lea
jo
dec
sbb
pop
das
jmp
lret
orb
lret
les
jle
ds
mov
das
push
pop
dec
in
jae
push
arpl
data16
ss
pushf
scas
movsl
call
mov
cli
mov
pop
adc
cmpsl
and
mov
sahf
adc
leave
lcall
sbb
lds
add
loop
pop
xor
inc
mov
xor
cmpsl
mov
out
xor
sbb
test
sbb
xchg
push
in
movsl
pop
sub
dec
cmpsl
out
stos
push
cmp
push
mov
dec
cmp
imul
daa
inc
ror
and
and
sarl
cmp
and
pop
add
scas
popf
mov
lcall
mov
popa
das
xor
in
add
cmpsb
xchg
push
mov
cmpl
xor
in
loopne
movsb
inc
add
pop
loopne,pn
dec
push
mov
xchg
test
jns
ss
lods
dec
dec
jl
movsb
sbb
push
inc
jnp
sahf
loopne
sbb
lods
cmp
insb
int3
or
xchg
cmp
dec
pushf
mov
ss
lock
aaa
movsb
movsb
pop
cmp
pop
push
mov
jl
and
mov
out
cli
cld
and
xor
add
or
xchg
fwait
test
push
xor
ds
dec
mov
aaa
addl
out
xlat
jmp
mov
mov
mov
xchg
jae
mov
sbb
into
in
dec
mov
loop
mov
lods
mov
ret
stos
hlt
adc
mov
adc
mov
fs
clc
mov
call
into
mov
sbb
icebp
cmc
sub
pushf
sahf
insb
mov
dec
les
add
sub
xor
mov
aad
push
mov
das
mov
xchg
aas
outsl
adc
push
mov
mov
and
rdmsr
mov
lods
jo
clc
daa
stos
xor
stos
jns
inc
fmuls
test
outsb
cmp
lcall
test
hlt
js
andl
std
sbb
in
dec
xlat
shl
add
mov
test
cmpsl
testl
addr16
test
imul
add
push
push
and
scas
das
pusha
xor
xor
fisubl
aas
and
movsb
mov
popa
sub
sti
in
pop
mov
sti
pop
cld
mov
pop
pop
imul
dec
mov
or
jae
es
cmp
inc
jnp
pop
mov
adc
test
push
push
lods
mov
aas
mov
arpl
mov
popa
jl
lea
cmp
jb
icebp
fisttpll
push
and
mov
bound
sbb
push
sbbb
out
fistl
cmpsl
mov
mov
nop
aas
pop
xor
jo
ds
xor
roll
mov
mov
push
push
ss
or
insb
mov
sub
mov
jmp
fsubr
and
arpl
imul
jg
rep
cwtl
out
or
jle
xor
mov
or
lods
inc
push
pop
mov
cmc
cmpsb
sub
push
or
int
pop
shrl
push
pop
inc
mov
les
test
or
mov
daa
outsl
mov
ret
imul
pusha
in
cs
scas
movsl
jle
leave
cmpsb
add
sub
jo
std
xor
add
jecxz
les
inc
xor
add
xchg
test
inc
sub
push
jae
cmc
mov
xor
xchg
test
lret
ficoml
add
rorl
push
mov
repz
mov
jb
in
test
pop
cmp
je
mov
pop
out
sub
dec
shrb
add
scas
movsb
enter
pop
insl
out
stos
mov
jnp
xchg
aam
mov
adc
leave
imul
cs
dec
pushf
in
xor
aad
jmp
jmp
fwait
aam
lds
imul
adc
js
das
sarb
mov
mov
test
mov
sub
aas
sahf
aas
mov
pop
int3
mov
ja
lret
push
xchg
pop
insb
cmpsb
pop
test
mov
aas
pop
fucomip
push
cs
xchg
fnclex
mov
or
xchg
jg
xorb
inc
add
inc
inc
xor
fisttpl
dec
loopne
dec
jns
cmp
cmp
jp
jb
pop
xlat
pop
jmp
sub
mov
int
lea
push
and
sub
mov
add
pop
int3
stos
mov
loop
movsb
aas
xor
pop
lock
xchg
xor
jb
lahf
and
outsb
jge
jne
push
pop
cmp
out
addl
std
xor
inc
movsl
loope
xor
xchg
lea
jg
gs
or
or
lds
bound
jl
fwait
sahf
pop
sub
pushf
pop
xor
mov
test
push
ret
push
xchg
mov
mov
jle
jp
mov
daa
arpl
sub
mov
dec
inc
pop
pop
sbb
mov
lahf
cltd
pop
add
int3
bound
sbb
stc
test
mov
sbb
mov
add
push
jno
xchg
in
sub
cld
jmp
cmp
xor
adc
mov
daa
push
stos
pop
imul
aad
mov
xchg
repz
outsb
inc
sti
shlb
cmp
addb
push
sbb
xorl
mov
repnz
jo
lock
mov
mov
cwtl
xchg
cltd
pop
mov
jo
or
push
mov
push
dec
stos
pop
data16
scas
int3
xchg
mov
mov
mov
mov
cmp
xor
pop
mov
int
scas
int3
push
adc
lea
aad
fnstsw
test
mov
adc
lock
sub
and
sub
add
cmpl
jno
mov
push
xor
stos
leave
icebp
sbb
xchg
loope
xchg
push
leave
sbbb
pop
call
rcrb
test
daa
xchg
ds
inc
sbb
push
sahf
mov
test
lods
inc
fldl
out
add
loope
lret
in
xchg
xchg
mov
cmc
pop
xchg
xor
mov
pop
bound
idivl
fs
mov
inc
add
mov
dec
inc
push
push
push
sbb
pop
inc
inc
xor
out
jnp
push
cs
jbe
mov
add
cmp
scas
sbb
mov
stos
cmpsl
mov
sbb
scas
cmc
test
stos
push
hlt
fstps
pop
add
pop
push
sbbl
adc
sahf
out
nop
inc
test
and
lahf
jno
int3
mov
lcall
std
pop
xor
mov
mov
cmp
ficompl
add
xchg
push
inc
mov
aas
mov
adc
pop
lods
sub
pushf
movsb
and
jmp
in
rcr
repz
adcl
leave
mov
lock
and
outsb
cwtl
bound
mov
cmp
push
pop
movsb
mov
xor
addr16
add
test
sub
sbb
mov
push
mov
sarb
arpl
push
mov
mov
popf
mov
inc
xor
fdivs
add
leave
stos
stos
mov
sbb
out
shrl
add
jno
ficomps
mov
add
xchg
mov
xlat
dec
sub
rcrb
cmpsb
orl
mov
cmp
cwtl
xor
xor
daa
imul
mull
cmc
test
push
shlb
sub
dec
push
out
jmp
inc
adc
cmp
cmc
daa
movsb
cwtl
jbe
cmpb
in
mov
cwtl
sbb
lret
aaa
dec
lds
mov
push
inc
cld
mov
xchg
adc
popa
in
adc
xchg
mov
movsl
mov
add
js
es
xor
popa
out
mov
dec
nop
inc
fnstenv
xor
outsb
or
pop
sarl
and
sub
inc
adc
jno
sub
pop
pop
cmpsl
lss
dec
int3
or
ljmp
xchg
push
push
inc
fwait
sub
test
mov
call
xchg
sub
inc
add
ret
faddl
mov
mov
iret
xor
pop
sbb
cltd
jl
lcall
xchg
mov
push
mov
or
ss
mov
imul
scas
in
add
nop
pop
xor
adc
jae
xor
jo
aam
imul
adc
sub
sub
cmc
add
push
xchg
adc
mov
insb
or
mov
aas
mov
movsb
push
xchg
mov
leave
addl
or
xor
mov
jae
pop
test
les
mov
mov
adc
cmpsb
arpl
ss
sbb
adc
pop
popa
sub
and
lods
xor
scas
in
dec
ficompl
orl
iret
mov
jns
ficomps
mov
scas
repnz
out
iret
pop
sub
icebp
xchg
gs
jecxz
insb
int
sbb
mov
lret
adc
imul
mov
scas
adc
aas
sbb
int3
enter
pop
mov
dec
in
ss
and
leave
mov
dec
fs
fmull
test
xor
and
fs
jns
mov
mov
sbbl
pop
sbb
mov
arpl
cmc
mov
je
mov
xchg
lea
mov
sbb
mov
js
cmp
jbe
cmp
fwait
lods
movsl
mov
inc
leave
scas
insl
lods
subl
outsl
mov
mov
cltd
jns
xchg
mov
xor
movsl
push
pop
mov
and
pop
aam
adc
and
ss
test
add
sub
outsb
subb
popf
cwtl
outsb
push
aaa
cmp
leave
repnz
aas
jb
pop
jae
xchg
jbe
dec
sbb
mov
adc
mov
leave
daa
mov
mov
mov
pusha
test
cmp
mov
and
xor
repnz
int3
mov
xchg
push
jl
adcb
pop
mov
lods
mov
dec
mov
mov
and
pop
mov
mov
jg
mov
sub
ljmp
lock
dec
sub
xchg
dec
js
jne
pop
mov
adc
ret
lods
lock
subl
mov
add
scas
mov
sahf
test
ret
mov
hlt
jns
outsb
ror
sbb
andb
push
orb
mov
pushf
cmp
out
jno
je
in
or
adc
int
or
lea
rcrl
xor
xchg
fisubs
inc
mov
mov
sahf
xor
push
lods
lahf
dec
mov
mov
jo
mov
aam
in
xor
enter
movl
xorb
and
fists
movsb
mov
cmc
mov
cltd
jge
std
mov
mov
testb
in
mov
adc
fcmovu
lds
jo
lds
mov
repnz
mov
out
jb
gs
dec
xchg
sub
cmp
jo
movsb
jnp
or
fnsave
sub
sbb
out
enter
cmp
mov
push
jg
add
out
jno
adc
leave
push
mov
pop
nop
cmp
jb
push
mov
pusha
push
xchg
xchg
sti
test
xchg
adc
in
xor
mull
ficompl
aas
pop
sub
push
pusha
mov
loopne
mov
lea
pop
mov
sub
clc
pop
in
or
les
xchg
jae
cltd
mov
js
or
sub
cmp
xor
cmp
sbb
test
xchg
and
push
dec
prefetcht2
movsb
and
stos
mov
xor
dec
sbb
shrl
pop
push
cmp
mov
outsl
nop
push
mov
cmpsb
div
xchg
popf
shrl
lret
pop
addr16
test
addps
push
sarb
inc
insb
popa
jle
int3
aas
push
rcrl
adc
fnsave
sub
stos
fdivl
in
jnp
test
daa
and
mov
sbb
add
les
insb
jp
rclb
jns
jno
popa
jo
jnp
aaa
insl
pop
inc
cmpsl
push
cld
xchg
into
push
imul
repnz
pusha
jge
out
call
rolb
pop
jg
icebp
mov
scas
leave
mov
fwait
pop
mov
popa
push
mov
fldt
and
push
inc
mov
imul
test
pusha
pop
dec
and
sub
or
popa
pop
mov
lret
fs
out
nop
int3
movl
mov
data16
test
out
repnz
popf
int3
adc
sub
out
fsubl
inc
dec
push
call
imul
dec
sub
mov
adc
adc
pop
mov
mov
mov
ss
ljmp
add
mov
mov
jmp
out
xor
bound
pop
movsb
jle
insl
mov
sub
stc
mov
lock
xchg
and
adc
sub
jnp
mov
adc
inc
pop
sahf
adc
mov
arpl
jg
or
dec
fs
push
cmc
mov
cmp
sbb
sub
aas
mov
dec
mov
sbb
mov
add
jbe
mov
push
xchg
mov
subb
icebp
push
pop
add
adc
jae
cmpsb
dec
sbb
stos
and
leave
sub
push
jbe
insl
inc
adc
mov
or
lret
out
sbbl
jns
and
pop
int3
sarb
jo
out
das
movsb
mov
int3
stc
imul
or
sub
xchg
es
jae
cmp
push
andl
movsb
or
mov
scas
inc
int3
push
mov
lret
nop
xor
mov
mov
shlb
mov
fs
cli
daa
adc
dec
dec
push
loopne
addr16
roll
or
out
xchg
jns
push
and
inc
rcrl
adc
gs
add
data16
aaa
pop
mov
xor
and
clc
lods
cmc
enter
sub
stos
rorb
sub
cmp
dec
xchg
lea
iret
or
pop
jecxz
rorb
shrl
rcrb
test
cs
pop
pop
stos
jbe
and
mov
xor
sub
lods
mov
sub
lret
pop
stc
test
inc
add
stc
sti
sbb
lock
push
mov
xor
ret
pop
mov
enter
dec
orl
push
mov
xor
std
nop
jb
adc
inc
push
cmpsl
add
add
dec
lods
xchg
es
pop
nop
ret
push
repnz
sub
shrd
ret
adc
decl
xor
sub
lcall
sub
aas
movsb
jg
jb
xchg
cs
mov
sbb
insb
cmp
mov
outsl
addr16
repz
aad
shrb
faddl
sub
mov
shlb
outsb
sahf
aas
lods
mov
lds
pop
jmp
push
push
and
int3
gs
outsl
loopne
stos
and
inc
popf
adc
ja
addr16
pop
xorb
push
dec
movsb
cmp
icebp
add
sahf
cmp
xchg
pop
xor
icebp
mov
or
adc
push
lock
mov
icebp
lods
aaa
xchg
test
jae
mov
imul
dec
int3
movsb
enter
sbb
addb
sub
cmpsl
sbb
repnz
stos
pop
xor
fsubr
adcb
test
stc
enter
repnz
sub
nop
mov
cmpsb
cltd
lahf
adc
clc
cmp
xor
call
mov
loop
sub
sbb
push
xor
es
jne
xchg
mov
aas
insl
and
ljmp
mov
int
dec
sub
enter
cmp
jg
xor
inc
in
mov
out
mov
ret
xchg
insb
adc
dec
scas
xchg
xor
jno
add
pushf
dec
xchg
mov
nop
arpl
addr16
jo
leave
out
cmp
jle
mov
push
scas
push
push
int3
jbe
push
mov
pushf
fwait
cmp
pop
push
aas
or
or
repnz
rol
dec
movsb
and
sbb
test
imul
dec
mov
xchg
loopne
pop
jne
or
test
std
jb
bound
je
pusha
stc
push
jle
mov
daa
outsb
out
sub
or
enter
or
sub
adc
std
inc
sahf
std
lods
pop
lahf
dec
aad
xchg
pop
mov
mov
nop
test
mov
jbe
mov
scas
xor
fisttpll
test
mov
mov
jo
and
outsb
call
scas
int3
scas
lret
std
fdivrl
mov
int3
test
jae
xor
mov
sub
inc
daa
sahf
jbe
adc
xchg
push
jno
and
pop
mov
push
and
stos
adc
jge
add
outsl
scas
or
push
push
loop
mov
pop
scas
cwtl
xor
daa
xor
ss
fldlg2
xor
ret
or
mov
add
mov
fcoml
xor
or
push
adc
xor
adc
pop
adc
shrb
shlb
in
inc
iret
ja
dec
ja
icebp
cmpsb
push
movsb
cwtl
aas
lcall
repz
fsub
adcl
xor
jb
mov
ficoml
iret
jb
xchg
pop
test
adc
xchg
add
mov
xor
cld
pop
mov
lock
xchg
lock
push
lods
add
rcrl
mov
jl
testl
fs
cmpsb
outsl
loop
lea
mov
aam
enter
scas
mov
xchg
repnz
nop
sbb
add
pop
jl
nop
movsb
je
push
push
mov
push
je
xlat
mov
jne
lea
out
fisubs
pop
sub
xchg
push
and
push
outsl
mov
test
add
movsb
test
jb
mov
scas
jno
xchg
and
dec
in
insb
je
sti
sbb
or
test
add
out
xor
test
out
pop
pushf
addl
sbb
stos
cmpl
push
arpl
aam
jb
mov
add
pop
and
insl
xchg
mov
insl
mov
sahf
xor
test
sbb
sbb
shll
notb
repz
push
inc
xchg
sub
aaa
xor
pop
out
jne
stos
xchg
lret
mov
xchg
je
lods
daa
mov
add
push
ret
shll
lock
insl
push
fdivl
and
in
je
xor
movsl
xor
mov
ljmp
out
outsb
dec
or
cmp
les
movsl
gs
fs
mov
repz
dec
or
outsl
jo
mov
xchg
mov
js
mov
mov
lret
sbb
cmp
cmp
arpl
xor
xlat
and
je
shll
and
mov
mov
repz
mov
xor
mov
cld
mov
icebp
jo
xchg
shrl
push
arpl
in
cmp
mov
movsb
imul
loop
pop
push
xchg
popa
inc
add
and
rorb
sub
loopne
mov
xchg
mov
xor
je
add
jp
fimuls
mov
shrl
or
lods
xor
call
idivb
mov
push
int
popf
out
das
mov
iret
ja
and
xchg
lea
outsl
mov
sbb
lods
stos
js
xchg
pop
xchg
xchg
sti
cmp
daa
roll
pop
in
xchg
sub
scas
xchg
lods
nop
xchg
mov
lret
lods
push
movsb
arpl
sub
movsb
mov
mov
rorl
and
xor
dec
imul
mov
insb
test
loope
lret
bound
xchg
jle
loopne
fwait
movsl
sub
pop
imul
push
lahf
andl
jge
cltd
lods
push
nop
mov
repz
lcall
out
and
repz
ret
add
lea
mov
mov
test
mov
roll
xchg
jno
in
nop
cmp
xor
adc
add
int3
daa
imul
nop
sbb
leave
lret
jmp
test
call
leave
fstl
pop
xchg
xchg
cld
cmp
pushf
lods
fbld
lds
cmp
mov
jo
int3
dec
mov
jns
fcom
jecxz
outsl
popf
jb
daa
outsb
xchg
xor
or
cmc
fidivrl
xchg
inc
pop
or
add
andb
xchg
pop
dec
mov
dec
pop
mov
mov
jecxz
imul
jl
jb
lret
pop
push
pop
les
sbb
mov
push
dec
adc
int3
lods
push
repnz
cmp
subl
leave
mov
xchg
loop
popa
jnp
sub
push
popf
fidivs
fs
test
xchg
sahf
jp
xchg
add
pop
mov
push
mov
fstl
jmp
inc
mov
dec
mov
fstpt
xchg
stos
add
imul
mov
inc
add
xlat
mov
repz
test
sti
dec
in
scas
testl
xchg
int3
push
es
jmp
pop
repz
cmp
and
pop
ss
dec
sbb
push
or
or
arpl
push
out
adc
in
lea
aas
mov
stos
dec
pop
push
stos
js
xchg
bsf
fidivs
movsb
cmpsb
inc
mov
out
ja
pop
sub
fistps
adc
pusha
xor
int3
dec
add
mov
aaa
dec
cmpsl
pop
mov
pop
sti
in
into
push
test
lds
cltd
mov
cwtl
hlt
lods
mov
insl
mov
lods
movsl
sub
jle
xchg
mov
repz
in
ss
mov
or
xor
mov
push
cld
stos
lret
fcompl
lcall
nop
and
rcrl
or
popl
mov
popf
aas
lahf
shl
mov
jp
pcmpeqd
mov
xchg
cmp
mov
mov
repz
movb
mov
sub
pop
cmpsb
sub
inc
call
jae
scas
daa
insl
inc
div
outsl
adc
push
sub
stc
pop
cwtl
add
cwtl
push
pop
pop
icebp
or
pop
mov
xchg
imul
in
xchg
jns
aaa
xor
sbb
clc
cs
xor
mov
adc
or
in
lret
sub
stos
pop
psrlw
xlat
add
xlat
daa
push
xor
jae
add
xchg
or
leave
jb
out
or
xor
mov
dec
aad
xor
stc
mov
dec
xlat
mov
lock
mov
and
lea
inc
out
and
mov
mov
and
jbe
or
sub
out
sub
cmp
ja
data16
cmp
nop
mov
mov
lret
lods
cmp
push
pop
mov
test
add
popf
fsubr
loop
adc
sub
mov
pop
sub
push
sti
jnp
or
push
or
outsl
repz
outsl
pop
or
jnp
jo
mov
movsl
dec
mov
inc
cmp
and
in
jmp
mov
in
mov
pusha
popa
cmpsb
mov
pop
inc
lret
cmpsb
int
add
ds
popa
xchg
xor
aaa
nop
stos
lods
sbb
jne
mov
scas
pop
xchg
mov
ja
stc
cwtl
rcrl
sbb
test
fucomp
cwtl
cmp
push
pop
xchg
xor
popf
fstpt
outsl
xchg
subl
mov
and
mov
imul
fsubs
out
rcrb
repz
sub
and
mov
sub
lods
adc
sub
test
pop
sub
cltd
inc
repnz
cmpsl
jns
fbstp
repnz
addb
pusha
nop
mov
pop
push
sub
sbb
test
xor
pop
movsb
cmp
cltd
jae
popa
push
xor
xor
push
loope
and
jbe
xor
pop
lock
scas
mov
scas
mov
dec
and
pop
dec
add
rcl
push
sub
arpl
jnp
scas
test
push
shl
bnd
push
pop
ret
jp
call
popf
sub
add
cmpsl
xor
test
mov
mov
ja
push
sbb
inc
jno
out
addr16
xor
pop
jo
xor
loop
popa
sub
mov
aaa
in
ss
imul
repz
ss
cmc
mov
mov
sub
and
divb
cmp
push
arpl
ja
inc
or
xchg
inc
mov
cmp
stc
push
adc
and
xor
push
or
and
dec
cmpsb
add
mov
adcb
repnz
out
in
test
push
add
in
cs
sub
lret
jle
push
sub
mov
stc
mov
loop
push
xor
adc
lods
mov
addr16
stos
xchg
loop
stos
arpl
test
add
pop
mov
in
push
xor
jl
mov
das
jno
push
sahf
fildll
rorl
push
mov
mov
aam
xchg
outsl
dec
clc
jge
fs
adc
push
stos
jbe
in
xchg
icebp
mov
fbstp
movsb
arpl
mov
pop
test
lods
movl
es
or
and
mov
jns
cmp
add
pop
cld
inc
adc
cmpsb
lods
std
mov
jmp
dec
xor
bound
and
outsl
insl
sbbb
mov
jbe
sbb
sub
pusha
test
adc
cs
add
std
adc
cli
call
xlat
add
shrl
or
test
cmp
movsb
scas
data16
or
xchg
adc
cs
xchg
imul
pop
js
xchg
dec
mov
xor
mov
mov
clc
xchg
adc
outsb
lock
cmp
sti
cmp
stos
int3
mov
pushf
jo
xor
jge
jg
xor
push
cmpsb
stos
dec
cld
fsubr
pop
inc
iret
lods
xchg
mov
mov
adc
mov
inc
in
stos
adc
cld
movsb
ret
and
pop
and
xchg
sub
pop
lcall
lock
cmc
fdivrl
dec
fcomps
pop
jno
call
mov
jo
jecxz
idivb
xor
jno
push
test
pop
jns
mov
mov
lds
popf
and
xchg
xor
fcmove
hlt
push
mov
movsl
add
incl
mov
in
movsl
pushl
mov
jmp
in
call
stos
stos
mov
mov
das
stos
aam
pop
mov
cwtl
popa
int3
and
adc
leave
dec
jle
xor
pusha
cltd
mov
call
add
rclb
js
lfs
lds
jo
or
mov
push
daa
push
inc
pop
pop
push
or
outsb
pop
xchg
jg
xchg
scas
mov
imul
fistpll
push
pop
data16
out
dec
mov
dec
out
xchg
sbb
repnz
xchg
mov
and
jb
dec
and
in
jae
sti
or
scas
movsb
out
shlb
inc
jno
shlb
mov
cmp
mov
aaa
jns
lcall
lock
jmp
push
test
dec
push
adc
shrl
cmp
movsb
cmp
cwtl
cmp
repz
mov
pop
outsl
and
push
xchg
push
repnz
sti
xchg
scas
jno
sahf
je
cmp
xchg
shll
fdivl
sbb
shl
popa
dec
lods
mov
dec
lods
or
lock
mov
mov
lock
fdivs
add
push
sarb
lcall
fs
cmpsb
int3
adc
ljmp
inc
in
test
and
popf
je
jg
or
inc
dec
subl
and
addl
dec
ret
in
push
add
ss
mov
add
push
loop
scas
je
mov
mov
dec
stc
mov
jecxz
insl
lods
popf
test
mov
shlb
int3
cwtl
add
xchg
mov
xchg
ret
jae
xor
test
push
mov
jl
clc
xchg
adc
mov
mov
mov
xor
ret
and
lahf
mov
push
cmp
orb
test
stos
sub
push
fwait
mov
movsb
add
outsb
cmp
pop
jl
movsb
add
mov
aas
xchg
sub
dec
imul
rorl
dec
stos
sub
xor
xchg
pop
pusha
sub
dec
pop
pop
out
je
push
repnz
arpl
sbb
fwait
add
pop
repnz
sub
jecxz
lret
mov
jp
pop
stos
cmp
mov
leave
fucomi
clc
stos
pop
or
mov
pop
sub
jl
xchg
mov
jp
sbb
hlt
repz
popf
mov
ret
in
sbb
push
cmc
pop
sbb
scas
jae
cmp
es
sbb
adc
stos
mov
sbbl
cmp
push
xchg
adcl
xor
in
lods
es
xchg
sti
movsb
mov
adc
lds
mov
int3
mov
movsb
loop
mov
lcall
in
scas
cmp
mov
mov
int3
pop
out
lea
mov
xor
add
mov
sub
cltd
movsl
jmp
scas
in
shrb
pusha
cli
adc
xchg
cmpl
pop
cltd
push
inc
je
xor
sbb
push
or
mov
mov
out
ja
icebp
aad
insb
je
dec
mov
shlb
shlb
jo
cmp
mov
adcb
lods
sbb
and
hlt
cltd
clc
push
sbb
jo
movsl
pop
cmpsl
je
scas
dec
sub
enter
outsl
dec
mov
fsqrt
xrelease
es
add
mov
mov
repnz
loope
cwtl
adc
xchg
mov
mov
pop
aas
subb
push
sub
cmpsl
int3
lock
in
xor
inc
movsl
push
or
out
cmp
mov
in
inc
int3
push
sbb
call
das
test
outsl
inc
jo
arpl
nop
aas
jg
sub
xchg
nop
subl
or
das
scas
push
fldenv
outsl
icebp
pushf
leave
repz
mov
push
or
mov
in
xor
push
pop
or
mul
scas
cmp
int3
sahf
inc
add
daa
andb
push
add
dec
loope
adc
mov
mov
lret
cmp
movsl
nop
mov
cltd
pop
pop
inc
fldcw
add
pop
jp
xchg
sbb
mov
cld
mov
shl
rcll
int
je
add
sahf
cmpb
pop
icebp
push
lods
xchg
pop
popa
xor
fs
push
sbb
movsb
jns
sbb
cltd
pop
jmp
dec
stos
scas
jae
sub
mov
mov
ret
rorl
loope
jo
popa
aas
insb
mov
dec
test
test
xchg
notb
dec
mov
leave
sbb
pop
pop
mov
mov
adc
sar
push
xchg
sahf
jp
ret
outsb
pop
pop
repnz
inc
cmp
test
and
cltd
add
out
adcb
dec
or
jnp
and
mov
xchg
mov
test
stos
pop
sbbb
pop
push
leave
stos
push
xchg
sbb
je
pop
add
cli
sub
push
pop
dec
adc
pop
mov
int3
mov
or
rclb
and
cld
dec
jo
push
sbb
lea
xchg
push
rcrb
mov
mov
in
mov
xchg
lahf
add
lods
xchg
adc
test
and
movsb
xchg
xor
mov
pop
jo,pn
fs
js
outsl
nop
mov
lea
addr16
aas
dec
mov
mov
fbld
stc
sub
stos
mov
mov
pop
aaa
push
lcall
paddusw
xchg
add
jns
call
pusha
cmc
jl
aas
adcl
outsb
leave
enter
shll
in
in
dec
aam
test
insb
movsb
fwait
push
mov
icebp
int3
inc
lods
pushf
std
inc
cwtl
test
lea
inc
sbb
push
rcll
mov
sbb
fists
and
fs
sbb
daa
add
mov
movsl
int3
shll
ror
adc
packsswb
mov
test
mov
jl
jnp
xor
xchg
aas
aas
icebp
and
in
push
and
mov
ja
lret
cmpsl
scas
arpl
cmc
xor
cld
sub
mov
js
fsubrs
adc
and
jl
xchg
pushf
xchg
addb
test
xchg
test
mov
scas
cwtl
xor
cltd
ror
push
repz
or
aas
lock
inc
cld
loop
shll
inc
rcll
mov
rcrl
jle
jbe
push
dec
ret
ficoml
cld
pop
and
push
mov
subl
mov
pop
jle
rcl
fbstp
push
in
repnz
add
cmp
in
inc
mov
cmpsb
ds
or
sub
mov
pushf
push
daa
cltd
sbb
movsb
lods
xchg
mov
xor
bound
mov
and
pushf
push
lea
int3
cmp
cmpsl
scas
mov
test
arpl
aaa
shrb
or
nop
in
sub
subl
les
test
aaa
sbb
cmp
adcb
ss
aas
add
shlb
hlt
inc
sbb
aas
test
mov
addr16
into
and
or
push
cmp
cs
ss
push
add
jns
enter
lods
xor
lods
mov
test
shlb
loop
mov
push
mov
outsl
movsb
aas
imul
ja
sarl
pop
mov
stos
sbb
push
xchg
imul
movsb
mov
out
mov
jb
mov
iret
lret
cmp
xchg
out
arpl
fldl
xchg
vmovdqu
pop
sahf
iret
adc
leave
fwait
mov
push
mov
adc
and
cltd
scas
enter
sub
dec
cli
xchg
jmp
jb,pn
jmp
and
push
mov
movsb
adc
lcall
test
xchg
inc
mov
xor
aaa
mov
cmc
xchg
mov
fucomp
mov
add
mov
in
in
in
sahf
cld
movsb
mov
int
ret
push
inc
in
pop
int
pop
sti
stos
mov
mov
xor
push
xlat
sahf
inc
int3
sub
xchg
popf
pop
ror
mov
mov
addr16
repz
in
xchg
cmp
xor
es
clc
aaa
sub
data16
repnz
mov
mov
and
mov
adc
movsb
jo
bound
pop
xchg
sti
in
lods
mov
mov
test
lods
movsl
jnp
hlt
lds
js
lea
xor
inc
lret
xlat
outsl
inc
push
mov
xor
lret
xor
fbld
testb
mov
pop
testb
fadds
xchg
cld
mov
adc
stos
dec
mov
push
mov
or
jns
leave
xchg
sbb
sahf
in
cs
push
jbe
nop
cs
ds
fwait
stos
pop
cmp
cmpsb
pop
and
or
dec
popf
int3
lock
popf
pusha
mov
mov
lods
mov
xchg
mov
test
adc
test
fidivrl
movsb
mov
add
lret
mov
shl
and
xchg
lds
mov
lock
stos
nop
mov
test
push
das
call
lea
mov
add
xor
dec
jo
mov
fwait
xchg
sub
sbb
mov
or
xorl
stos
push
push
loope
and
mov
xor
enter
gs
sbb
add
mov
or
sbb
push
sub
pop
shrl
call
or
orl
lret
lods
push
mov
push
mov
negb
test
les
push
aam
push
inc
push
out
and
outsl
dec
dec
sub
mov
push
dec
in
mov
jbe
loope
repz
inc
mov
int3
repnz
cld
jne
icebp
or
pop
mov
mov
fdivl
mov
data16
fstps
or
and
gs
or
test
push
lods
or
nop
inc
xchg
mov
mov
bound
jge
mov
loop
or
xchg
inc
testb
nop
aad
iret
cmp
out
cld
xchg
jb
js
sub
test
pop
dec
dec
lret
in
leave
shlb
inc
bound
repz
shll
lods
fldcw
xorb
xor
pop
add
inc
xor
pop
int3
cmc
loope
xchg
xchg
pop
dec
jae
xchg
xchg
in
int
cmp
pop
movsb
xor
mov
lret
ret
inc
cltd
dec
insl
dec
pusha
imul
rol
mov
xor
dec
aam
xor
cmp
les
and
inc
sete
mov
sub
fwait
or
jp
cwtl
hlt
lock
stos
stc
dec
sub
mov
je
popa
fs
cmpsl
clc
pop
xchg
mov
sub
in
xchg
cmp
xchg
aas
ret
icebp
adc
xor
mov
gs
bts
lock
aaa
cmp
mov
addl
inc
mov
xorb
inc
repnz
pop
outsb
lahf
stos
leave
mov
sbb
mov
enter
lock
push
test
and
mov
lds
mov
loopne
jbe
sub
jl
test
lock
enter
mov
data16
lar
jae
stos
cmp
daa
jb
mov
and
jmp
mov
call
add
enter
sbb
call
pop
ds
repz
inc
cmp
sarb
push
pop
mov
andl
pop
ds
aaa
mov
and
movsb
into
mov
call
add
push
mov
inc
stos
jl
pop
mov
aaa
cli
loope
sub
lock
mov
xchg
mov
outsb
test
cltd
xor
into
out
pop
cmc
lcall
mov
cli
xor
bound
cmpsb
subps
lock
insl
jl
test
sub
sbb
daa
popf
shlb
push
pop
mov
aas
mov
and
dec
stos
imulb
cmp
sub
mov
bound
cmpsb
xchg
loop
xor
aas
inc
push
mov
bound
cli
add
dec
mov
mov
or
or
shlb
test
sbb
pop
pop
adc
xchg
loop
xor
cmp
jb
jmp
mov
xchg
mov
xchg
mov
shlb
dec
test
lea
imul
add
shlb
pop
jb
loop
ja
int3
push
sbb
dec
mov
add
xchg
test
mov
sub
popf
push
ret
movsl
dec
cli
std
or
mov
pop
push
xchg
sahf
dec
mov
pop
push
gs
pop
stos
jns
lods
fsubl
ret
fadds
mov
pusha
pop
mov
lock
mov
outsb
ljmp
clc
mov
test
in
jae
mov
loop
cmpsl
push
push
mov
cld
lret
mov
sahf
shll
sub
je
mov
push
cmpsb
push
or
pop
add
pop
daa
pop
nop
sbb
movsb
mov
daa
inc
test
jmp
sub
scas
jl
mov
stos
int3
daa
pop
mov
xchg
divl
xchg
or
and
push
in
repz
cmc
mov
call
mov
dec
xchg
push
mulb
jl
xchg
dec
pop
cmpsl
inc
mov
or
pop
and
shrl
mov
cwtl
sub
sub
mov
stc
mov
dec
sub
movsb
sub
xchg
cmpb
cmpsb
xchg
icebp
aas
xor
xlat
scas
fistl
ljmp
mov
movsl
mov
lret
mov
jg
data16
clc
pop
xchg
clc
cli
data16
sub
push
push
lds
mov
cwtl
and
mov
out
test
arpl
jge
jo
mov
xor
and
jle
push
lcall
int3
pop
cwtl
lods
arpl
out
sub
xchg
mov
cmp
pop
cmpsb
cmpb
fs
in
pop
mov
leave
push
add
nop
lret
mov
mov
inc
scas
aaa
les
fucomi
getsec
mov
or
push
leave
subl
imul
sbbb
ret
and
les
pop
pop
pop
popa
adc
arpl
jmp
data16
imul
mov
lea
inc
mov
arpl
dec
xchg
and
dec
sarl
mov
addr16
sub
and
stos
add
mov
insb
lret
shlb
arpl
mov
mov
pop
lods
les
ficomps
cmpsb
xlat
sub
mov
leave
movsb
outsb
fidivrs
aas
into
cmp
inc
loopne
ja
sbb
jnp
test
cmp
adc
cld
cmp
daa
xlat
data16
jbe
ret
adc
pop
dec
je
sbb
cmpsl
int3
inc
aas
dec
mov
mov
pcmpeqb
sub
repnz
aaa
nop
not
adcb
mov
xchg
ja
daa
data16
jae
ss
dec
fnstsw
xchg
lahf
push
sbb
repnz
adc
hlt
mov
repz
adc
push
pop
imul
cwtl
xor
mov
lods
sub
movsb
mov
outsb
push
clc
aad
in
mov
lock
fs
mov
mov
shrl
imul
jo
sbb
cmp
inc
test
sub
insb
sub
sbbb
mov
push
fwait
popf
push
mov
pop
vpmaxub
cmp
stos
test
nop
stos
js
xor
loop
xorl
ret
lods
push
xchg
adc
es
scas
and
insl
lods
adc
mov
lods
xlat
addr16
mov
aas
subb
xor
nop
sub
test
cmpxchg
xchg
sub
fnsave
mov
aad
mov
xor
jmp
dec
jl
and
sbb
out
out
fs
test
stos
test
repz
fmull
mov
arpl
add
add
stc
pusha
xor
push
pop
lods
push
in
das
in
xor
mov
jmp
lea
mov
mov
imulb
insb
movsl
dec
mov
xor
cmc
mov
scas
sub
jb
xchg
repnz
test
out
test
pop
stos
sub
pop
mov
imul
pop
pushf
mov
cmp
jb
lods
cmc
push
test
leave
call
mov
push
nop
das
mov
cld
data16
cld
push
ljmp
xor
inc
mov
xor
mov
xchg
pop
mov
sub
imul
ja
or
rorb
mov
test
sahf
jb
mov
mov
lods
out
mov
ja
cmpsb
rolb
sbbb
pushf
ljmp
mov
or
addr16
lea
test
inc
pop
lahf
sbb
lret
jns
adc
lea
movsb
mov
lea
xor
xor
aaa
cmpsb
aas
mov
pop
mov
mov
sub
sbb
imul
ds
sbb
pusha
ss
aas
imul
mov
dec
lds
add
lock
les
call
inc
mov
adc
leave
sbb
cs
xchg
leave
test
stos
jo
clc
cltd
sub
xchg
cltd
loope
push
cltd
in
xchg
sub
cwtl
cs
fbld
movsb
xchg
cmp
xor
adc
outsl
xchg
push
lret
inc
mov
ja
hlt
movsl
cmp
icebp
stos
ljmp
leave
fwait
or
adc
mov
fidivs
mov
shl
cwtl
call
push
mov
mov
imul
mov
mov
stos
int3
rclb
orb
lcall
or
push
mov
icebp
xor
pop
mov
iret
nop
mov
sbb
movsb
int3
inc
mov
jg
mov
push
mov
scas
xchg
stc
and
aaa
sbb
xor
jge
outsb
sub
push
lock
int3
icebp
insb
sbb
xor
into
xchg
mov
and
je
mov
dec
repz
push
xchg
mov
add
movsb
adcl
xor
xor
inc
fildll
inc
aam
adc
outsl
call
and
xorl
outsl
icebp
loopne
pusha
push
push
mov
xchg
push
mov
adc
xchg
int
mov
lea
pop
in
fmul
mov
leave
test
in
mov
push
call
jns
imull
mov
insb
movsl
push
sub
xchg
jns
idiv
or
ret
nop
test
aas
push
xchg
out
dec
pushf
movsb
pop
in
leave
inc
arpl
ss
jge
jmp
loopnew
sahf
and
mov
daa
xchg
fs
pop
std
push
les
mov
xchg
insl
xor
movsb
pop
call
int3
andps
pushf
adc
dec
and
sbb
fwait
mov
xlat
cwtl
cmpps
mov
mov
daa
aas
call
sub
movsl
mov
into
add
imul
xor
mov
addl
in
jmp
loop
stos
mulb
sbbb
adc
lods
sbb
popa
lock
lods
fs
dec
mov
or
pop
jns
cmpsb
sub
fisttps
mov
pop
mov
jnp
xchg
mov
pop
fwait
pop
sub
ret
pop
jg
pop
mov
add
ret
fimuls
sub
xor
xchg
xor
int3
ss
insb
xor
push
or
dec
pop
lret
insb
cwtl
shll
std
ja
rcll
or
notb
int
mov
ret
mov
pushf
sub
cwtl
xor
jl
mov
mov
out
je
mov
dec
pop
lods
xchg
mov
mov
xchg
les
pop
sbb
int3
dec
and
sub
test
in
jnp
mov
jns
and
xchg
xchg
push
test
cmpsb
ret
lods
inc
push
mov
jno
leave
or
dec
int3
pop
mov
rolb
imul
stos
ret
pop
imul
pop
lret
sub
sbb
mov
out
in
clc
sub
bnd
test
rcrb
repnz
bound
push
aas
imul
in
fmul
inc
outsb
jb
int3
jl
fwait
outsb
dec
push
xor
movsb
inc
or
mov
pop
inc
mov
add
mov
and
test
adc
std
pop
adc
xor
mov
mov
fldenv
mov
inc
mulb
cmc
push
rdtsc
dec
daa
mov
mov
imull
mov
in
cs
scas
mov
ficompl
xchg
mov
bound
shrl
pop
movsb
loope
sahf
frstor
out
sub
mov
cltd
push
xor
sub
in
xor
lods
pop
mov
std
pop
dec
mov
inc
xor
ret
mov
mov
lods
dec
outsl
pop
popa
pop
mov
nop
push
sbb
push
mov
icebp
cld
or
adc
pop
push
jl
test
cmc
dec
xchg
std
xor
dec
pop
int3
cmp
in
push
loop
scas
aas
and
int3
inc
inc
jae
in
jbe
add
mov
loopne
mov
popa
lods
insb
ret
adc
or
or
inc
mov
ss
sub
or
test
or
ss
adc
outsl
or
sub
rcr
push
mov
enter
ss
sbbb
fwait
or
test
dec
data16
jb
scas
int3
cmp
sbb
pop
cmp
push
nop
repnz
cmpsb
scas
cwtl
leave
les
inc
and
or
mov
shr
test
jp
jg
sbb
dec
stos
and
pop
sbb
cmp
inc
lods
cli
lods
sbb
cmp
dec
sub
push
outsl
jo
mov
orl
or
dec
lock
scas
popa
sub
dec
ljmp
out
jbe
cmpsl
cmpsb
stos
cmp
out
sub
inc
call
xchg
adc
inc
insb
iret
dec
and
scas
dec
int
push
dec
test
decb
imul
sahf
mov
cmpsb
pop
cmp
mov
lret
lret
repnz
dec
test
mov
movsb
fsubrl
adc
jb
loop
ret
mov
test
push
aaa
push
mov
sbb
dec
lods
ss
lret
setg
mov
rolb
repz
mov
ret
loopne
fnstenv
xchg
movsb
mov
mov
shrl
xor
lods
roll
or
xor
lods
fisubrs
cs
sub
or
imulb
in
movsb
mov
push
and
fwait
adc
xchg
ss
sub
sbb
sub
push
ljmp
xchg
jbe
movsb
clc
lret
mov
jo
test
nop
aam
in
movsb
or
fcoml
push
hlt
lret
lods
mov
mov
push
mov
hlt
sub
test
xchg
movsb
or
pushf
inc
xchg
es
fs
and
je
testb
cmp
jge
mov
mov
xchg
mov
push
int3
xchg
imul
rolb
sub
subb
sahf
and
xor
mov
mov
sbb
movsb
mov
insb
push
stos
cltd
mov
out
pushf
mov
xchg
ss
cmpb
movsb
testb
mov
cs
pop
push
mov
test
movsb
mov
enter
xchg
daa
ds
pushf
jge
jecxz
sub
jo
xchg
outsb
sahf
xor
insb
xchg
fsubrl
lods
lcall
cmpsb
test
mov
das
leave
mov
fstpt
mov
loop
xchg
push
ljmp
hlt
cli
sub
adc
xchg
outsl
je
je
sub
jo
xchg
sub
dec
push
and
sbb
jb
xchg
mov
xchg
insl
xchg
test
mov
sbbl
cwtl
and
cs
mov
xchg
push
lods
lret
push
xchg
xchg
fucomi
lods
sub
jno
add
mov
push
sub
int3
mov
je
sbb
mov
adc
sahf
sub
xchg
fcoms
movsb
mov
jb,pt
xchg
movsb
xchg
divl
xchg
pushf
movsb
or
movsb
lods
imul
ds
jmp
mov
dec
pop
repnz
jo
jb
mov
lods
xchg
xor
repz
mov
fs
xchg
inc
repnz
movsb
sbb
pop
hlt
movsb
and
lods
int3
xchg
mov
sub
je
inc
xchg
sub
mov
xor
xchg
push
popf
nop
jle
sar
and
sub
mov
adc
stos
mov
daa
mov
mov
adc
pop
ljmp
lods
out
push
xor
mov
les
jo
adc
ja
and
cmpsb
mov
fwait
test
xor
xchg
dec
push
movsb
mov
pushl
movsb
push
inc
adc
jg
lods
inc
mov
repz
outsl
mov
mov
stos
xchg
fdivrl
fdivs
fwait
jns
xchg
imul
out
sub
jb
cmpsb
jnp
stos
ret
cmpsl
cwtl
insb
xor
sub
jo
mov
out
xor
mov
jb
sub
jo
mov
xor
cmpsb
lods
push
rcr
xchg
js
jb
mov
lods
test
pop
push
cmpsb
sub
jo
mov
jb
push
xor
sub
jo
mov
xor
sub
jae
test
mov
insl
in
xchg
cmp
adc
stos
jo
mov
xchg
outsb
popf
mov
sub
xchg
pushf
mov
int3
out
fs
aaa
test
lods
lcall
pushf
test
enter
adc
fcoms
loopne
adc
mov
lods
jge
rol
xchg
mov
call
test
fsubrl
adc
clc
stos
xchg
inc
movsb
push
adc
mov
movsb
and
or
stos
pop
sahf
jmp
cmpsb
mov
mov
jl
xchg
dec
jbe
cmpsb
xchg
mov
movsb
xchg
adc
mov
scas
adc
shrb
das
movsb
add
pop
stos
mov
imul
cmpsb
and
sub
andb
pop
and
xchg
mov
mov
lahf
sub
xchg
dec
jo
xchg
ljmp
sahf
xchg
dec
stos
jb
mov
mov
fistpl
add
movsl
lea
nop
push
in
int3
lahf
mov
mov
ficoms
stos
mov
nop
xchg
mov
xor
sahf
lods
xchg
jno
mov
shr
mov
cs
repz
cmp
in
mov
inc
pop
push
fdivs
xor
jle
adc
dec
stos
sub
xchg
and
clc
adc
movsb
mov
int3
mov
jb
xchg
fldt
shlb
outsl
push
cmp
sbb
xchg
pop
cmp
dec
or
sbb
and
test
jl
js
sub
xchg
xor
jg
mov
pop
inc
popa
or
pusha
gs
lahf
scas
popl
xchg
insl
xchg
xchg
sub
nop
pop
call
js
outsb
js
outsb
xchg
or
push
xchg
mov
adc
mov
sub
cli
lods
mov
pop
test
mov
xchg
sub
and
sbb
push
out
sarb
xor
and
shlb
jnp
addl
or
xchg
xchg
rcll
aad
pop
pop
sub
scas
mov
lods
xchg
mov
push
mov
xlat
adc
xchg
adc
sahf
pusha
in
test
ja
es
mov
mov
push
jp
fs
insb
test
mov
mov
popf
and
popf
xor
popf
mov
mov
shrb
cmp
aas
dec
test
pop
into
xchg
sub
xchg
sub
fiadds
arpl
shll
repz
fstpt
test
popa
and
xor
fs
xorb
loop
cmp
clc
sahf
arpl
sbbb
jb
xor
xchg
nop
adcl
and
add
pop
mov
cmpsb
and
out
push
mov
ret
xor
xchg
rorb
xchg
xorb
pushf
xchg
push
xchg
pop
shlb
push
pop
jecxz
iret
sub
xchg
dec
movsb
sbb
push
push
xor
sub
in
ret
hlt
outsl
jbe
xchg
insb
test
test
std
jb
jo
mov
jge
lods
rclb
nop
xchg
outsl
xchg
ret
adc
sub
xor
ljmp
pop
xchg
clc
mov
xor
push
sub
or
xor
stos
xchg
adc
scas
mov
mov
xchg
jb
add
mov
xchg
lahf
adc
push
stos
xchg
mov
clc
icebp
mov
mov
xchg
and
jmp
mov
clc
call
les
and
or
scas
or
arpl
fisubrs
or
inc
adc
jo
jns
or
and
xor
add
adc
cmp
mov
movsl
ret
xchg
inc
adc
mov
pusha
aas
xchg
test
dec
in
ja
and
test
mov
push
jl
jo
aaa
adc
fs
cmpsb
mov
jl
and
fisubrl
xchg
cwtl
add
adc
in
jae
jo
mov
movsb
repnz
add
mov
push
adc
xor
repnz
arpl
push
popf
bound
mov
imul
cmpsl
push
and
fwait
pop
mov
mov
popf
outsl
and
pop
inc
adc
and
cltd
ficoml
out
adc
inc
mov
push
push
mov
cmp
lret
fldcw
test
hlt
test
pop
lods
xchg
push
pop
in
popa
dec
xor
icebp
outsl
mov
mov
xor
lds
out
push
popa
pushf
lods
xchg
movsb
xor
mov
mov
mov
mov
mov
xor
mov
movsl
mov
sub
jl
fs
ss
mov
ljmp
mov
mov
inc
add
lret
test
fs
xchg
cmp
inc
dec
adc
popa
mov
xorb
test
cld
aam
in
sbb
hlt
sub
mov
je
fdivl
or
out
ljmp
mov
mov
mov
mov
scas
mov
xor
sbb
jno
mov
jb
jb
xor
and
mov
hlt
jl
xchg
jo
xchg
dec
cld
sbb
xchg
outsb
mov
test
arpl
mov
mov
cvtps2pi
xchg
out
mov
mov
pushf
es
fdivl
in
in
mov
xchg
das
cmp
mov
xchg
insb
mov
hlt
int3
cmp
fsubs
stos
jae
mov
cmpb
nop
sbb
shlb
add
mov
cmp
fdivl
mov
jp
pop
jl
xchg
shlb
mov
xchg
movsb
push
testl
arpl
xchg
insb
adc
pop
sbb
mov
sub
test
jo
mov
pop
mov
jno
xchg
in
cmp
adc
xchg
stos
sbb
jb
xchg
mov
adc
jno
xchg
inc
movsb
loope
add
in
or
imull
jb,pn
xchg
or
push
fcoms
mov
mulb
pusha
mov
mov
xchg
rclb
jo
test
xor
pop
je
pop
orb
inc
sahf
cmp
push
dec
rorl
cld
pop
mov
rorl
cld
pop
fcmovnb
sahf
cmp
dec
cld
cld
pop
pop
sahf
cmp
das
push
sbb
pop
movsb
sbb
push
push
rcll
sbb
cmp
das
push
rcl
push
push
sahf
cmp
cmp
daa
and
fs
mov
push
sbb
lea
jne
gs
mov
lods
movsb
mov
js
push
sub
jmp
shl
xchg
stc
mov
pop
mov
cmpsb
adc
jb
sub
jo
mov
mov
jo
dec
das
movsb
dec
sub
arpl
lods
imul
fs
mov
negb
pop
inc
mov
cwtl
movsb
in
and
mov
sbb
jb
xchg
fnstenv
xorb
jo
add
bound
mov
xchg
mov
adc
mov
xchg
mov
test
test
int3
addr16
push
je
sahf
jl
insb
lretw
cmp
out
mov
push
xchg
jb
incb
outsb
fadd
test
test
pop
sub
mov
push
int
mov
out
popf
cld
hlt
lods
in
shlb
mov
outsl
jne
andb
jbe
je
ss
xchg
dec
movsb
push
divl
or
movsb
fs
jbe
push
sub
xchg
dec
jns
movsb
mov
int3
imul
add
das
out
andb
lods
cmp
hlt
mov
lds
stos
in
lods
rorb
test
xchg
aam
jno
xchg
hlt
movsb
icebp
lock
mov
cld
mov
je
imull
loop
mov
xor
fcoms
mov
adc
mov
ja
sub
scas
add
mov
mov
sahf
cmp
fistpl
sahf
mov
icebp
in
stc
adc
jb
jecxz
pop
sahf
stos
int
adc
xchg
mov
xor
xchg
pop
movsb
dec
movsb
xchg
inc
stc
aaa
dec
aam
add
mov
lods
xchg
in
insb
jae
push
andb
cmp
cmpsb
fistpl
push
or
outsb
cli
and
mov
cmp
jns
xchg
push
dec
add
adc
lea
mov
add
xchg
adc
xchg
xchg
push
lret
adc
mov
pop
jb
data16
test
jl
dec
push
and
add
pop
add
out
push
jne
in
jno
or
mov
xchg
imul
dec
adc
lods
pushf
or
aam
mov
pop
stc
fwait
xchg
jle
test
pop
sbb
adc
in
arpl
xchg
test
jo
xchg
push
jle
leave
cmp
sub
jo
dec
jmp
je
fdivl
jno
fildl
xchg
in
push
add
jecxz
movsb
xchg
jl
hlt
jo
xchg
pop
cmpsb
jp
mov
mov
dec
or
mov
sub
sub
jge
cmpsl
es
lods
sarl
mull
pushf
jmp
xor
movsl
fdivr
mov
aam
int3
adc
mov
push
push
jmp
mov
cmp
adc
pop
fwait
movsb
inc
jae
pushf
jl
pop
cmpsl
xchg
aam
push
insb
pushf
mov
movsb
andb
sahf
nop
xchg
adc
cmp
sbb
stos
xchg
mov
mov
test
adc
lret
ret
xchg
jb
and
and
inc
add
out
stos
pop
sbb
mov
lcall
or
jo
movsb
jnp
es
fs
ja
jl
xchg
inc
cmp
andl
mov
mov
cmp
mov
jb
aam
mov
bound
pop
jp
lods
in
mov
lcall
fsubrl
and
les
xor
inc
xchg
mov
push
jns
push
sahf
xor
fcoml
es
mov
les
dec
test
repz
test
outsl
cmp
xchg
mov
jns
pop
movsb
fs
jb,pt
xchg
cmp
stos
inc
jb
xchg
adc
out
out
pushf
sbbb
test
push
lret
in
xor
fsubl
push
cmp
lds
fwait
mov
jbe
dec
sahf
push
mov
pushf
lods
pcmpeqb
cmp
inc
mov
popa
pop
xchg
xchg
movsb
or
scas
cmp
cmp
out
add
mov
pop
sti
inc
push
sahf
xchg
or
insb
jnp
out
popf
test
daa
int
add
adc
popf
mulb
jl
mov
mov
inc
sbb
jae
mov
popf
aas
inc
dec
je
pop
xchg
and
sub
mov
or
dec
test
repnz
lods
xchg
xchg
in
in
jle
xchg
adc
sub
lods
pop
dec
inc
insb
xchg
movsb
jl
out
pop
shlb
push
popf
push
xchg
mov
or
fsubs
out
mov
ss
insb
enter
hlt
xor
shl
lods
mov
xchg
jbe
xor
lret
mov
cmp
and
xchg
xor
stos
pop
cmp
add
or
xor
xchg
dec
rolb
xchg
shrl
shll
out
and
insl
in
xchg
push
test
or
and
mov
dec
push
jb
popf
arpl
sub
sub
cli
sub
ficoms
jb
sub
pop
shll
sub
rcll
iret
int3
jecxz
mov
xchg
stc
adc
int3
in
sub
xchg
jmp
insl
mov
in
sub
xchg
pop
shrl
int3
loope
test
scas
mov
ret
lahf
xor
jno
jge
imul
push
ficomps
sub
push
and
andl
sbb
fidivl
imulb
xchg
xchg
je
push
idivl
stos
mov
ss
repnz
mov
test
cld
iret
imul
cmc
and
data16
xchg
adc
jnp
mov
add
mov
inc
movsb
lods
outsl
sub
xor
hlt
test
outsl
xchg
jg
or
lds
push
xchg
sbb
push
push
faddp
xchg
mov
jg
les
cmp
in
pop
mov
in
or
push
mov
outsb
jle
xchg
or
mov
in
nop
mov
sub
shll
mov
mov
sahf
push
pop
roll
push
mov
and
mov
jno
fidivl
inc
cmp
inc
pop
mov
jo
mov
or
xchg
or
push
sbb
out
lods
pop
lretw
pusha
inc
fistpl
jge
jo
jge
rolb
int3
rcrb
jge
shlb
or
lods
adc
sub
mov
mov
pop
movsb
mov
mov
sub
mov
inc
inc
jae
lods
push
das
leave
repz
and
fsubrl
jb,pt
inc
jo
push
das
ljmp
mov
mov
cmpl
pushf
lock
xchg
add
push
mov
adc
pushf
movsb
popa
pushf
pushf
mov
mov
ret
lds
mov
adc
xchg
loope
cmp
sub
pop
testb
les
jb
ret
imul
pop
xchg
data16
das
push
movl
mov
lock
dec
or
gs
pop
xchg
and
xor
jae
jle
xchg
mov
xchg
lock
push
mov
test
sbb
movsb
mov
jl
lret
fs
adc
subl
xor
adc
pop
icebp
xchg
cld
movsb
push
divl
nop
hlt
iret
pop
jle
in
daa
sub
inc
cmp
jno
popa
sub
dec
adc
fwait
adcl
outsl
jb
scas
cmp
or
jno
sub
inc
mov
movsb
mov
lcall
shrb
sub
lea
mov
mov
adc
enter
xchg
pop
jecxz
shr
dec
mov
jmp
cwtl
adc
pop
jp
xor
xchg
xchg
mov
cld
adc
mov
adc
shlb
cld
test
aam
xlat
mov
add
and
or
xchg
xchg
insb
movsb
push
lret
insb
inc
sub
sbb
lods
addl
xchg
out
pusha
je
lods
push
imul
mov
pop
pop
xchg
movsb
ja
xchg
mov
pushf
cmp
mov
mov
adc
lcall
sahf
mov
mov
fiaddl
orl
out
xchg
movsb
imull
jo
popf
es
fs
push
andps
dec
or
imul
push
movsb
xor
ret
add
cmp
in
inc
sub
or
mov
ret
xchg
push
dec
add
pop
sbb
push
fsubl
lods
push
mov
je
xchg
test
insb
mov
add
lods
xor
xchg
lods
int3
pop
and
sub
xchg
jns
xor
int
push
adc
xchg
je
jnp
cld
in
mov
inc
adc
mov
movsb
xor
mov
pop
idivb
add
insb
pop
lods
je
je
lahf
pop
pop
aam
mov
je
lods
xor
mov
xchg
inc
pop
test
fs
fmuls
mov
jl
test
cmp
xor
gs
mov
cwtl
xchg
push
movsb
test
xor
xchg
push
pop
jecxz
movsb
dec
test
lods
fs
das
lret
cmp
mov
mov
dec
das
test
insb
jb
dec
mov
loopne
add
pop
scas
iret
mov
xor
mov
mov
mov
lret
je
arpl
pop
jns
pop
movsb
in
ljmp
xorb
xchg
xchg
mov
mov
xor
mov
or
push
insb
push
aam
movsb
jbe
in
sbb
jae
adcb
lcall
cmpsb
mov
mov
xchg
leave
mov
int
mov
js
add
int3
gs
in
xor
lock
lds
int3
in
xchg
movsb
pop
rolb
xchg
popa
sub
xchg
test
lahf
mov
in
mov
sbb
movsb
jl
sbb
test
mov
cwtl
dec
sub
popa
movsb
mov
in
xchg
aam
fisubs
adc
jnp
lods
movsb
jo
add
outsl
je
xchg
push
mov
cltd
add
pop
pop
mov
test
int
mov
xchg
dec
jecxz
push
xor
xchg
inc
lock
xchg
test
lcall
and
mov
test
pop
mov
mov
xchg
add
sub
loope
sbbb
in
stos
xchg
inc
adcl
lods
xor
or
test
jnp
jnp
es
pop
xor
je
popa
adc
inc
jns
mov
inc
pop
hlt
xchg
lods
mov
fmull
mov
mov
fmul
mov
stos
loope
and
in
int
sbb
jbe
push
or
mov
mov
pop
insb
mov
jb
xchg
push
jl
pop
lret
cmpsb
data16
les
adc
and
pop
into
test
add
mov
mov
ds
sarb
mov
jno
adc
cltd
sub
push
mov
int3
mov
adc
jb
mov
aaa
xor
and
sahf
sbb
dec
dec
jb
mov
bound
mov
lcall
fsubl
lods
int3
dec
sarb
cli
mov
les
sub
xchg
pop
mov
sub
xor
jb
xchg
call
xchg
adc
adc
sub
pop
pop
stos
mov
lods
pushf
pop
and
in
xor
roll
adc
int3
mov
jbe
js
jb
and
mov
in
sahf
das
push
enter
pop
mov
sahf
mov
jo
imul
cwtl
into
shrl
mov
adc
test
dec
sahf
jns
adc
stos
cmp
or
jne
int3
mov
push
es
mov
dec
jb
cmp
hlt
insl
pop
shll
fwait
int3
jge
xchg
add
nop
pop
mov
sub
mov
je
jle
sbb
mov
sub
rcll
mov
bound
mov
outsl
test
mov
mov
mov
and
into
and
mov
jb
mov
push
and
xchg
xor
inc
sub
pop
mov
mov
pop
mov
ljmp
shlb
mov
sbb
jb
imul
test
push
sbbb
sub
sub
xor
xor
and
and
xor
sub
inc
movsb
sub
sub
mov
xchg
stos
aam
add
and
out
das
test
mov
cli
jle
jo
push
mov
sarl
shrl
mov
fistl
or
outsb
pop
imul
aam
xchg
push
jo
ret
sbb
adc
pop
notb
mov
sub
outsl
scas
mov
jno
adc
ret
adc
fld
push
or
test
mov
mov
push
les
xor
sbb
mov
and
xor
sub
je
inc
xor
pop
into
adc
dec
or
adc
jb
xchg
hlt
stos
jno
sahf
je
jp
loop
adcb
jne
mov
loope
xchg
data16
lcall
dec
clc
arpl
and
mov
lret
iret
push
hlt
mov
and
arpl
sub
push
daa
bound
push
test
jl
mov
xchg
push
movsb
loopne,pn
sbb
sub
mov
push
mov
pop
push
js
push
mov
push
lea
js
mov
bound
xchg
xchg
mov
scas
insb
lds
insl
and
fs
in
xchg
pop
pop
shrb
repz
mov
mov
jb
out
sub
enter
xchg
sbb
imul
lahf
xor
and
dec
mov
outsl
shlb
xchg
mov
rclb
inc
cmpsb
lods
test
xorb
push
stos
mov
sub
xchg
jp
ret
mov
sahf
inc
shl
test
jecxz
mov
push
adc
lock
mov
xchg
fcmovbe
imul
fisubl
out
cld
popf
nop
stos
dec
hlt
shlb
or
in
jmp
clc
insb
insb
je
adc
xor
mov
push
jg
push
xadd
mov
mov
int3
sub
outsl
cld
pop
lods
lahf
inc
imul
push
jb,pn
xchg
outsl
mov
lahf
jbe
push
jl
int3
adc
sbb
mov
lods
dec
mov
das
test
gs
lea
mov
adc
int3
enter
mov
mov
pushf
cld
in
cmp
dec
insb
inc
sub
enter
xor
sbb
mov
lahf
jb
cmp
inc
ljmp
test
lock
push
test
push
out
lret
lods
mov
loop
mov
add
xchg
sahf
push
cwtl
xchg
fsubl
jge
aam
sub
leave
das
mov
ljmp
push
xchg
sbb
outsl
out
push
mov
sbbl
and
sub
insl
sbb
xchg
inc
dec
adc
add
cs
and
cmp
fdivl
jno
je
inc
sub
jo
lods
test
lock
data16
jb
out
aam
jp
sub
mov
mov
adc
inc
mov
lods
mov
adc
xchg
xor
movsl
sahf
enter
test
adc
xor
jo
movsb
jo
icebp
push
mov
adc
imul
fs
push
xor
push
lret
fmul
jae
push
clc
mov
mov
inc
in
je
test
xchg
add
add
xchg
or
mov
xchg
addb
aas
nop
mov
or
dec
arpl
movsb
push
sti
mov
icebp
rcrb
fcomp
in
sahf
mov
or
sti
data16
std
xchg
jg
sahf
stc
inc
adc
js
leave
mov
xchg
xchg
mov
cmp
sub
lock
mov
sub
movsb
dec
in
cmpsl
aaa
cmp
fsubrs
pushf
ds
mov
subb
push
or
jl
xor
in
jg
dec
out
and
mov
iret
rolb
pushf
add
jno
lods
mov
mov
xor
int3
ljmp
xchg
lahf
adc
dec
cmp
out
add
test
push
add
lcall
jb
mov
fs
fmuls
sub
xor
or
test
lock
dec
mov
subl
sahf
cmp
mov
into
mov
in
xchg
or
imul
les
mov
push
rorb
pop
in
insl
repnz
mov
xchg
pop
jo
ss
idivl
test
push
jge
scas
mov
dec
dec
clc
ss
xor
inc
insl
and
pop
xchg
pushf
popa
or
sub
pop
mov
movsl
xor
rcl
cmpl
ret
xor
adc
pushf
es
and
push
mov
mov
push
adc
sub
cli
jle
push
push
ret
or
sbb
inc
push
call
mov
xchg
push
cmp
loop
loop
mov
stos
xor
mov
nop
xlat
dec
aad
xor
sbb
jecxz
std
test
fbstp
xor
notl
pop
adc
pop
dec
rorb
fmuls
add
movq
sbb
xor
shlb
test
jo
fwait
scas
or
inc
xlat
aaa
xchg
sbb
pop
fists
push
lea
inc
and
jb
add
lea
jae
gs
jp
call
ja
or
mov
bound
add
add
iret
insl
sub
aad
aad
mov
hlt
jne
fdivrs
xchg
cmp
outsb
or
cmp
push
jns
out
jb
pop
xchg
cmp
push
xor
lret
das
mov
imul
fstpt
lods
xchg
push
sub
sub
enter
int
je
les
dec
pushf
sub
lea
movsl
divb
call
xor
rcrb
mov
push
pop
mov
idivl
push
xlat
dec
fnstcw
mov
mov
fildl
call
insl
pop
lds
pop
xchg
and
test
xor
or
imul
dec
stos
pop
xchg
or
outsb
in
push
jge
mov
dec
mov
mov
in
mov
xorb
pop
call
inc
lods
adc
lock
aam
mov
cwtl
aas
ret
push
mov
iret
in
or
jmp
push
lcall
push
lea
enter
psubsb
inc
das
fwait
or
ss
mov
or
sub
add
bt
cmp
bt
sub
jmp
push
call
mov
inc
add
shl
rcl
and
xchg
cwtl
movsbw
mov
bt
mov
pusha
cmp
clc
xchg
pop
btc
mov
cmp
pushl
sub
push
rep
pushf
mov
mov
mov
lea
jmp
push
call
and
push
call
sub
pushf
lea
jne
btr
cmp
mov
stc
clc
jnp
stc
add
push
bt
cmp
pusha
movzwl
rcr
mov
push
call
mov
mov
or
or
ljmp
lret
shlb
lods
sub
orb
mov
jo
jl
cwtl
mov
xchg
mov
pop
sub
in
ljmp
data16
std
and
add
jl
adc
mov
gs
lret
lds
adc
cmp
mov
lret
mov
ja
rcrb
push
leave
out
adc
mov
xor
lea
in
int3
roll
jne
and
mov
ret
xor
mov
into
cmpsl
stos
adc
xorb
pop
mov
or
out
mov
mov
cmp
cmc
in
push
fwait
mov
lods
pop
mov
mov
ret
mov
and
loopne
addr16
stc
add
sbb
push
into
enter
aad
jns
jp
mov
mov
les
imul
sbb
stc
movsb
sub
enter
cmp
jne
jbe
movsl
mov
popa
push
mov
xchg
mov
lcall
iret
sbb
rcrb
lahf
arpl
lret
jmp
mov
js
mov
repz
outsb
popf
mov
stos
enter
stos
mov
sahf
hlt
shll
mov
xor
mov
pop
ret
pop
jnp
mov
test
jl
pop
dec
xchg
in
mov
arpl
mov
inc
cmpsl
mov
rclb
mov
in
mov
shrl
xor
arpl
jne
lods
movsb
and
rcrl
xchg
aam
mov
cmpsl
add
mov
ss
pop
xchg
lea
stos
hlt
pop
insb
hlt
mov
inc
jmp
mov
push
mov
out
call
mov
pop
enter
testl
mov
and
stc
jecxz
sbb
mov
inc
mov
imul
andl
loopne
pop
lret
cmc
mov
mov
or
ret
lock
sub
adc
xor
insl
in
cs
fdivs
sahf
mov
mov
dec
cld
fisubrs
out
push
jp
mov
xlat
out
mov
hlt
lret
mov
outsl
cs
mov
xor
mov
icebp
sarl
jne
jp
les
push
mov
mov
push
lods
push
sbb
mov
cmp
cmp
mov
push
mov
lock
adc
insb
in
mov
aad
popf
iret
jmp
fadds
mov
xor
xchg
scas
jle
jbe
xorb
jg
subb
push
mov
sti
cmpsl
sub
pusha
add
inc
movsb
adc
cmpsb
jmp
dec
and
dec
mov
inc
shll
test
mov
mov
xor
dec
mov
or
jne
ret
ja
dec
jns
sbb
sub
lods
call
ss
mov
cmp
movsl
lfs
cwtl
mov
cwtl
dec
sub
mov
jo
mov
xor
scas
dec
mov
mov
ss
or
and
imul
push
loope
in
mov
lea
in
mov
mov
hlt
sahf
cmp
outsl
xor
mov
ror
lahf
mov
stc
nop
sbb
mov
ficomps
inc
outsl
dec
das
int3
stos
mov
in
adc
adc
rol
push
mov
lahf
push
stos
sub
inc
jae
adc
es
scas
call
test
jo
imul
in
cmp
xchg
pop
dec
sub
cs
aaa
dec
mov
iret
hlt
and
xchg
cmc
push
test
into
sbb
push
cmp
pop
fs
jmp
mov
lods
movsb
pop
pop
cmp
insb
mov
mov
lcall
or
hlt
push
sbb
jle
mov
je
mov
test
imul
in
mov
push
stos
pushf
mov
mov
mov
add
idivl
outsb
sbb
leave
mov
sub
subb
mov
push
mov
lahf
pop
sub
push
mov
lcall
sub
sub
mov
jnp
xchg
fdivrl
shr
mov
rclb
popf
jg
into
pop
mov
jnp
stc
xchg
call
aam
sub
dec
mov
and
mov
push
xchg
fists
cmp
mov
xchg
or
inc
jb
mov
inc
out
in
dec
repnz
adc
shlb
mov
sbb
push
push
sbb
xchg
add
mov
sbb
or
push
sti
call
mov
xor
mov
in
out
sbb
mov
cmp
addr16
mov
mov
xor
test
mov
add
sbb
mov
add
fucomp
leave
mov
mov
push
icebp
sarb
pop
out
mov
das
mov
adc
xor
sbb
filds
mov
sbb
inc
gs
rcr
dec
cmp
mov
stc
adc
pop
dec
out
rcll
mov
jp
mov
mov
icebp
stc
arpl
mov
mov
nop
xor
das
and
loop
push
bound
sub
inc
enter
mov
add
insb
leave
in
mov
jo
cmp
shr
mov
mov
cmp
and
mov
sbb
cmp
lcall
push
pop
mov
inc
jg
dec
rclb
xchg
scas
push
int3
mov
jecxz
cmp
data16
adc
dec
add
mov
int3
loopne
hlt
xor
dec
mov
cs
push
pushf
jnp
aam
test
push
dec
pop
pop
push
mov
out
js
mov
mov
shl
adc
enter
out
mov
daa
hlt
sahf
jns
test
popa
mov
cld
xchg
fnstsw
into
movsl
dec
xor
data16
mov
mov
xchg
inc
pop
stos
jnp
mov
hlt
mov
inc
test
pop
arpl
xlat
es
lahf
jnp
xchg
xor
sub
lods
stc
mov
push
adc
dec
mov
pop
pushf
xchg
lock
ljmp
aad
and
sub
jl
sbb
andl
mov
inc
cmp
xor
lret
data16
mov
aaa
enter
push
adc
mov
mov
mov
mov
add
int3
movsb
and
push
or
mov
dec
js
ds
ret
adc
xor
add
movb
lahf
xchg
xchg
jo
gs
aaa
and
nop
rcrb
daa
pop
add
cmp
xchg
out
xor
and
in
lods
sbb
xchg
ja
lret
fistpll
lock
testl
insl
pop
xlat
mov
repnz
inc
and
adc
mov
fnstcw
dec
and
in
mov
cmpsb
outsb
or
xchg
fcmovnbe
sbb
jbe
rorl
gs
dec
daa
fisubrs
movsb
mov
and
push
aam
mov
adc
adc
imul
cltd
mov
or
ss
xor
mov
aaa
inc
jne
lret
mov
or
sbb
and
mov
dec
adc
pop
out
xchg
adc
adc
jae
int
pop
mov
or
jp
mov
pop
sarb
mov
sbb
mov
divl
mov
add
and
sbb
stos
daa
dec
lods
cwtl
mov
mov
xor
jbe
mov
sub
mov
xchg
je
call
dec
push
mov
xchg
rorb
or
lds
les
sub
mov
mov
jo
mov
nop
mov
mov
xchg
or
mov
mov
mov
scas
insb
scas
and
stos
sub
insb
cmpsb
and
mov
nop
lahf
insb
sahf
and
lcall
insb
xchg
and
xchg
sub
insb
mov
lea
sub
insb
push
and
xor
sbb
notl
ret
or
nop
test
xchg
pop
jo
sub
insb
in
and
xchg
xlat
jo
mov
cmpsb
or
xchg
mov
jo
pop
xchg
dec
jo
sub
sbb
jmp
fcoml
je
sahf
sub
insb
dec
and
xchg
es
or
jmp
and
xchg
mov
inc
cwtl
dec
push
inc
out
inc
lea
push
push
inc
addl
xor
push
dec
mov
dec
stc
rcll
shrl
push
sar
mov
subb
jno
inc
cmp
pusha
dec
sbb
jmp
dec
testb
icebp
push
inc
cmp
dec
pop
jae
and
dec
lcall
call
mov
out
xchg
push
dec
inc
xchg
fs
dec
dec
mov
les
out
inc
lock
cmp
lods
xchg
psubusb
push
aas
adc
xor
inc
inc
or
xor
adc
push
push
stos
lcall
mov
pop
loop
lcall
push
test
mov
and
orl
cmp
push
gs
adc
addr16
mov
gs
sahf
and
aas
loope
mov
inc
push
inc
cmp
outsb
mov
fidivl
fwait
sub
mov
mov
es
jg
and
ficoms
dec
lcall
sbb
insb
jb
and
jp
in
push
cltd
inc
aas
dec
pop
roll
sbb
adc
xor
outsb
lcall
xlat
push
xor
inc
into
and
fs
inc
cmp
imul
pop
push
mov
loope
movsb
ret
pop
lds
cmp
inc
push
mov
outsb
mov
popa
lret
inc
addr16
je
and
stos
inc
dec
inc
jae
pusha
rcll
or
or
test
mov
cmpsb
push
fucom
cltd
test
stos
lcall
aas
mov
movsl
dec
outsb
sahf
jg
cmp
aas
inc
or
push
pop
fwait
movsb
push
mov
push
dec
add
mov
dec
xchg
movsb
scas
fsubs
lods
mov
mov
push
subl
add
js
mov
push
mov
shll
mov
stos
nop
cmc
cmp
js
gs
inc
std
jo
jb
ret
xchg
xchg
add
cmp
mov
jl
daa
into
test
mov
push
sub
mov
je
arpl
mov
stos
int3
mov
mov
cld
and
push
movsl
inc
sbb
push
and
xor
inc
nop
cwtl
repz
pop
jno
fldt
outsl
pop
and
and
incb
sub
jb
shl
stc
pop
and
out
cmp
adc
mov
shrb
dec
xchg
addb
jg
jne
mov
in
or
jge
xchg
in
out
cli
jmp
or
push
cmp
mov
aas
mov
sbbb
push
inc
xchg
mov
push
hlt
xchg
inc
cmp
jae
dec
scas
xchg
push
push
xor
les
scas
test
and
ret
popf
ljmp
movsb
mov
fwait
call
jnp
outsb
cwtl
jle
dec
or
mov
jae
loope
nop
cltd
xorl
add
fnstsw
int
into
sti
push
lock
les
adc
jl
outsl
jge
jnp
jb
sar
int
mov
nop
lds
mov
fsubr
rcrb
adcb
in
jl
xor
cmp
jnp
xchg
jb
jnp
outsl
jno
inc
lret
rorl
adc
cmp
aam
push
outsb
stc
jnp
outsl
jl
mov
dec
dec
push
out
jae
mov
nop
dec
test
lods
jl
xorb
ret
outsb
sub
hlt
xor
push
xchg
xor
adcl
or
mov
xchg
ss
xchg
aaa
cltd
push
mov
test
outsb
jae
lret
sbb
push
mull
sti
or
add
out
add
cwtl
rolb
mov
pushf
addr16
cwtl
ret
inc
and
jae
data16
mulb
loop
push
arpl
aam
movsb
lods
out
jp
insl
das
je
dec
nop
xchg
call
mov
jo
cmp
xchg
xchg
bnd
push
push
in
jb
out
lahf
jmp
inc
xchg
pop
jl
pop
dec
cmpsb
stos
push
xchg
mov
add
fisubrl
mov
lret
mov
aam
aaa
xchg
mov
leave
cmc
mov
fs
stos
sub
mov
ret
sbb
rorb
fcmovne
test
mov
test
push
adc
mov
aad
sub
call
shl
inc
mov
gs
dec
dec
push
inc
jp
xchg
clc
incl
out
inc
lfs
inc
dec
inc
jb
inc
sbb
aad
mov
mov
js
mov
das
lret
das
fwait
mov
mov
mov
das
dec
mov
in
out
les
sbb
jb,pt
ret
js
movl
mov
or
xchg
jp
stos
push
dec
dec
insl
inc
xor
mov
outsb
mov
xchg
inc
inc
dec
pusha
xor
popf
mov
sahf
mov
mov
jae
in
lods
aam
xchg
fsubrs
stos
test
mov
jo
shrl
mov
and
data16
xchg
cmp
lods
outsl
inc
pop
aam
xchg
inc
dec
dec
pushf
xchg
sarl
xchg
in
leave
sti
xor
mul
out
std
roll
add
clc
cmpsb
cli
shll
sar
mov
cltd
cmpsb
mov
pop
div
not
xchg
dec
adc
addr16
and
les
cwtl
lods
cld
push
or
das
mov
movsb
sub
mov
stos
out
cld
leave
push
dec
inc
xchg
inc
inc
popl
fs
push
add
ror
inc
mov
pop
aas
add
jne
popa
mov
inc
push
dec
xchg
jo
mov
clc
cmp
add
js
cmp
push
jb
mov
fdivrl
fdivs
inc
push
in
ret
mov
mov
mov
shll
xor
dec
add
mov
loopne
outsb
mov
xor
push
dec
insl
lahf
xchg
js
cmpsb
push
out
addr16
mov
xchg
test
in
add
mov
xlat
movsb
mov
test
mov
mov
mov
add
inc
lods
rclb
insl
das
lock
fwait
pop
mov
jmp
popl
and
and
rolb
mov
fisubrl
out
dec
nop
xchg
repnz
inc
push
pop
push
sub
or
shrb
xchg
jmp
push
xchg
stos
adc
mov
mov
xchg
mov
adc
inc
inc
push
xor
movsl
hlt
movsl
push
xor
dec
inc
xor
aaa
mov
mov
mov
mov
jb
std
mov
mov
and
pusha
nop
mov
push
loop
cmpsl
xchg
fsubr
inc
cwtl
scas
xor
jp
mov
icebp
sahf
aas
inc
stos
xchg
or
je
mov
aas
jge
jne
jp
lods
mov
push
mov
movsl
cltd
repz
movsb
sub
mov
icebp
sub
repz
repnz
jle
loop
repz
dec
jecxz
lods
jne
xor
sub
jae
rcl
mov
pop
dec
or
push
pop
jo
out
jo
lock
sub
jnp
xor
imul
push
mov
mov
int3
sbb
mov
xor
mov
outsl
mov
test
int3
jl
dec
mov
lods
cmpb
cmp
sub
das
flds
popa
cmp
adc
movsl
xor
cmpsb
lea
daa
mov
out
rorb
mov
lods
insb
lret
adc
sub
cwtl
push
repnz
sub
movsb
js
sbb
jo
sub
call
in
add
jb
int3
mov
push
scas
movsl
mov
sarb
ds
xor
or
stos
lret
ja
pop
and
shlb
xorb
mov
inc
in
aad
mov
jns
mov
add
test
xlat
scas
lret
cmpsl
adc
jae
and
nop
dec
test
imul
imul
dec
pop
push
cmp
daa
mov
fistpl
adc
call
mov
xlat
mov
mov
std
sbbb
addl
mov
or
int3
lds
movsb
jmp
les
fisttpll
add
movsb
add
test
jo
mov
fs
test
rclb
stos
scas
fs
cmp
add
into
cmp
data16
push
shlb
sti
shlb
mov
into
int3
pop
insl
negl
jg
ss
das
mov
dec
mov
pushf
movsb
cmc
das
hlt
aas
fwait
scas
cld
lret
frstor
stos
stc
xchg
sti
mov
sbb
and
shrb
hlt
enter
lret
cmp
fsts
fsubl
sub
or
sbb
lret
btl
mov
xchg
xchg
xor
jne
addr16
mov
mov
lods
sbb
mov
adc
dec
xor
cmp
mov
sahf
fsubr
mov
mov
sub
bound
movsl
aas
ret
sub
cli
mov
sub
lret
in
push
cltd
adcl
jl
xor
imul
inc
mov
fwait
dec
cwtl
nop
lahf
jle
movsl
aad
push
nop
lods
out
jae
mov
es
mov
mov
mov
repz
aam
jnp
daa
js
arpl
das
mov
ds
sub
arpl
mov
sub
xchg
lret
imul
jp
lods
pop
daa
cwtl
nop
pop
outsb
pop
pop
xor
and
rcll
adc
sbb
push
test
jb
mov
pop
outsl
mov
adcb
insl
arpl
adc
sbb
cwtl
mov
jg
scas
xchg
pop
jae
mov
sbb
jo
jae
arpl
xchg
mov
int3
mov
sbb
mov
pop
pushf
lret
dec
mov
addr16
xchg
sbb
jmp
nop
mov
mov
mov
add
in
mov
pushf
cmp
sbb
das
notb
scas
pop
pop
or
add
and
pusha
mov
iret
arpl
add
outsl
in
jge
jle
enter
pop
mov
int3
stc
bound
sub
mov
repz
and
sub
push
sbb
bound
lea
popa
dec
outsl
gs
jle
mov
pop
inc
mov
mov
xchg
mov
xchg
jo
dec
mov
push
sub
fs
xor
call
sbb
loopne
test
inc
out
popa
jecxz
cld
mov
inc
and
int3
lods
aaa
fs
sbb
and
das
insl
sub
push
adc
ret
popa
xchg
cmpsb
shlb
xchg
cld
dec
or
inc
adc
scas
xor
inc
push
aam
mov
push
dec
lods
aaa
mov
fcoms
push
fsubrs
fsubrl
dec
add
aam
push
mov
jae
cld
cmp
xor
mov
test
pop
stc
enter
xor
lods
call
add
das
mov
or
int3
cmpb
or
add
sub
cld
cmp
xchg
mov
int
fdivl
inc
mov
adc
xchg
xchg
shlb
push
dec
jmp
lods
shlb
jle
xor
adc
and
imul
inc
xchg
mov
in
enter
xchg
mov
sti
jne
pop
stos
les
imul
adc
in
outsl
enter
sub
jmp
xor
and
and
imul
jbe
test
mov
mov
jg
jnp
jl
arpl
push
mov
mov
adcl
sbb
mov
mov
adc
pop
and
mov
lods
xor
sub
and
and
in
cltd
fdivrs
sbb
and
xor
lods
jnp
outsb
xchg
sbb
fcoml
mov
into
adc
push
inc
cmpsl
fmul
pushf
mov
xchg
enter
sahf
leave
inc
mov
imul
xchg
cmp
imul
mov
cwtl
cmp
enter
mov
adc
push
fsubrs
mov
xchg
jno
lods
sub
gs
ja
and
gs
lods
outsl
fmuls
ret
int3
test
repz
add
jnp
adc
int3
mov
adcb
xchg
shlb
aad
mov
cmpsb
inc
mov
xor
add
clc
hlt
mov
popf
ret
push
fwait
ret
cwtl
in
mov
iret
jge
pushf
or
rclb
xchg
sub
insb
les
popa
sub
movsl
and
dec
test
dec
pop
dec
lods
cld
stos
adc
dec
dec
test
sbb
pop
mov
shlb
sbb
push
sti
and
cmp
mov
jno
call
lods
adc
mov
jle
jns
inc
pushf
rcl
jmp
bound
ficoml
imul
add
call
bound
in
mov
push
js,pn
adc
adc
test
xor
and
xchg
lahf
lock
sahf
cmp
jb
adc
cwtl
xchg
push
rcll
shlb
scas
js
fs
xor
rolb
aam
imul
shlb
xchg
and
fsubrl
fsubrs
mov
rcll
aam
push
fsubl
dec
inc
mov
mov
jnp
addr16
lcall
and
and
and
lahf
inc
inc
mov
mov
sub
mov
xor
arpl
jo
push
xchg
pushf
pop
hlt
insl
pop
imul
int3
pop
mov
scas
orb
movsb
lods
fidivs
loope
inc
and
loope
inc
cmpsl
out
lret
jecxz
shrl
ror
jnp
mov
pop
jnp
or
or
jo
jnp
sub
cwtl
and
daa
sbb
aam
pushf
mov
jbe
jl
das
into
xor
mov
mov
and
jae
fcmovu
scas
in
pop
ljmp
in
mov
sub
xchg
mov
pusha
arpl
cltd
ds
out
mov
in
push
pushf
loopne
into
mov
mov
mov
mov
mov
mov
mov
mov
or
subl
dec
pop
int
mov
mov
adcb
rorb
or
push
push
ror
movsl
rcrl
ljmp
hlt
xor
lods
mov
pop
daa
pop
sub
insb
xor
sub
insb
sub
pop
mov
sar
lods
stos
sarb
out
cmp
in
test
xor
jae
mov
or
loopne
jl
lahf
xchg
js
fwait
in
rclb
fistpll
sbb
add
sbb
test
fisubrl
sbb
dec
shrl
cld
test
int3
cmc
je
or
test
ds
rol
cmp
movsb
test
mov
orb
inc
gs
cmpsb
jp
aas
movsl
bound
insb
inc
xchg
sahf
mov
outsl
aam
mov
pop
int
lahf
jns
addr16
out
scas
int3
mov
xchg
mov
lret
adc
rorl
into
pop
int
movsb
xchg
cltd
test
cmc
jge
or
mov
hlt
push
xor
mov
dec
mov
sub
jecxz
int
pushf
xlat
mov
mov
ds
insb
notb
mov
lock
insb
mov
jo
sbb
jb
fsts
mov
push
stos
insb
int3
adc
sbb
lods
sbb
lods
outsl
fadds
push
push
movsb
movl
dec
popa
fwait
push
mov
lods
mov
sub
popa
test
jmp
sub
arpl
mov
arpl
cmpsl
dec
jg
mov
rorl
sub
sbb
inc
sbb
xor
sbb
loopne
pop
lods
cmp
jno
xor
sti
rcll
mov
lcall
dec
pop
out
adcb
lods
shl
sub
pushf
fwait
mov
cmpsl
xchg
loope
mov
xchg
lods
iret
mov
in
aas
fldenv
push
dec
push
jecxz
in
out
or
xchg
inc
cmpsb
divl
fcoml
arpl
insb
fsubrl
cmpsl
inc
dec
scas
xchg
sub
adc
adc
and
cld
cmpsb
xchg
xchg
dec
xor
in
jne
in
fadds
mov
dec
mov
xchg
aas
jp
xchg
pop
mov
lcall
rcl
cs
cmpsb
mov
cs
lock
xor
cltd
jne
out
xor
movsb
xchg
lret
test
ret
in
stos
xor
das
mov
clc
ret
int3
adc
in
enter
scas
ret
push
subb
xchg
rclb
cmp
scas
xchg
xchg
into
xor
daa
adc
mov
bnd
lahf
sarb
lahf
lods
dec
xor
bound
les
adc
push
aam
mov
daa
shrb
mov
xchg
xor
fcoms
pop
adcb
sub
xchg
bound
dec
ja
loope
mov
inc
bts
cmp
lret
call
xor
sub
push
mov
shll
cld
mov
xor
xchg
add
pop
sti
xor
adc
mov
inc
test
das
cmp
lret
das
jb
xor
xchg
scas
xor
xor
lods
lock
mov
and
int3
movsb
gs
les
shlb
in
inc
test
data16
loopne
int
push
add
out
pop
adc
or
add
xor
and
mov
iret
loope
movsb
inc
push
or
jl
jbe
and
mov
aaa
movsb
arpl
out
fcoms
xchg
xor
xchg
jb,pn
cltd
and
pop
pushf
pop
fimuls
sbb
xor
mov
jb
sub
ret
cltd
stos
push
cmpsl
fbld
in
xchg
mov
movsb
xchg
fwait
jae
adc
in
sub
outsb
mov
push
push
mov
ss
jle
jecxz
xor
insb
shrb
push
test
xchg
fsubr
push
push
or
leave
into
push
fsubrl
enter
lahf
xchg
jb
fwait
int3
imul
xchg
mov
add
mov
test
fwait
add
mov
les
and
mov
movsl
sub
shlb
jo
and
iret
jb
mov
repz
fmull
jge
xor
adc
insl
loopne
dec
js
call
inc
sar
lock
lods
dec
in
xor
sbb
dec
aaa
sti
cmp
adc
shrb
stos
push
in
movsb
xchg
and
roll
in
mov
mov
sub
fnstsw
add
and
ja
in
mov
pop
aam
adc
mov
movsb
jge
aam
les
add
aad
and
pop
sbb
adc
sbb
movsb
mov
cld
test
mov
dec
mov
in
jno
jp
enter
aam
add
es
icebp
pop
xor
call
mov
sbb
roll
or
rcrb
xchg
lods
pushf
rcr
lods
cmpl
push
lds
out
test
ret
mov
xchg
add
icebp
cmp
pop
push
movsb
or
add
or
push
int3
push
fmuls
mov
das
mov
cwtl
inc
dec
xchg
lret
mov
mov
les
fsubrs
xchg
int3
int
xchg
xor
imul
sub
xchg
sbb
and
adc
xsaves
sub
cmp
mov
int3
jbe
xlat
aad
add
and
dec
push
lock
or
lock
mov
inc
jbe
dec
mov
arpl
je
lods
jmp
add
push
cmp
pop
pop
xchg
aad
mov
int3
insb
sbb
imul
stos
inc
or
in
int3
xchg
add
push
cmp
mov
clc
int3
xchg
aad
nop
mov
or
jecxz
lods
outsb
les
outsl
mov
push
test
xor
push
movsb
les
lods
cmp
and
jecxz
adc
hlt
mull
arpl
xor
out
out
out
xchg
add
xor
mov
fcmovb
mov
inc
inc
test
int3
out
lock
shrb
shlb
xchg
inc
movsb
push
or
outsb
ds
inc
je
pushf
clc
lahf
inc
fistpl
mov
hlt
cld
xor
sbb
pop
aam
xchg
cli
sbb
mov
sub
je
adc
xorb
push
imul
mov
hlt
cmpsl
insb
cltd
shll
clc
fsubs
fs
subb
insl
aam
push
lret
stos
into
pop
push
rclb
sub
lds
rol
dec
xor
push
imull
pushf
stos
dec
mov
xchg
aas
add
cmpsl
dec
in
lock
mov
std
jle
mov
or
xor
jge
push
and
aas
idivl
data16
mov
ret
loop
and
and
idivb
cld
leave
cmpsl
test
js
push
xor
add
mov
jecxz
mov
xor
pusha
sub
jns
stc
inc
insb
dec
cmp
je
pushf
jb
push
in
push
adc
jecxz
imul
push
ds
xchg
daa
add
ljmp
xchg
push
into
add
push
cld
pop
sbb
push
and
mov
cs
mov
int3
lods
ficompl
pushf
pop
jp
loopne
loop
lret
inc
in
xchg
aaa
add
test
es
pushf
mov
movsb
push
test
mov
out
add
fmuls
cld
in
repnz
xor
data16
jge
adc
jnp
ljmp
fadds
rclb
lods
xchg
pushf
jmp
sti
mov
stc
mov
cmp
adc
sub
pop
inc
xchg
push
mov
inc
pop
scas
cmp
mov
xor
fsubrl
mov
daa
test
inc
stos
mov
add
lock
outsb
fmul
imul
outsb
or
rdmsr
and
fldl
jecxz
cmp
insl
inc
xchg
enter
ss
cmp
lods
pop
stos
cmp
push
inc
inc
stos
cmp
add
jg
int3
ret
rcr
cltd
adc
mov
rolb
fdivrp
mov
inc
cwtl
shlb
fisubrs
mov
xchg
stos
rcl
push
ja
add
fistpll
aam
pop
fbld
in
inc
and
es
fadds
filds
dec
cmp
pop
fwait
jns
cmpsl
ja
xchg
jg
mov
lods
ret
lods
imul
lock
outsb
loopne
or
xor
inc
push
add
inc
sub
enter
jg
mov
jge
orb
sub
outsl
jg
adc
movsb
sti
scas
sub
dec
mov
sidtl
jg
in
jno
cltd
adc
movsb
mov
push
pop
jg
pop
jns
repnz
loop
in
add
pop
lock
xor
jne
loope
aad
insb
sub
cmp
inc
lods
outsl
mov
jne
fadd
out
adc
in
call
jo
mov
mov
mov
and
lcall
mov
jmp
dec
int
shlb
xchg
dec
xchg
xor
out
xchg
lcall
dec
daa
lods
imul
rol
jecxz
ret
push
dec
test
jbe
dec
shlb
ss
leave
dec
pop
call
loope
mov
les
das
mov
push
in
xchg
pop
dec
les
dec
popf
shrb
adc
loop
cmpsb
jbe
push
in
xchg
push
dec
inc
cmp
and
xchg
push
jecxz
ret
in
pop
outsb
lods
lock
insb
cltd
mov
clc
dec
das
repnz
js
sbb
les
jb
dec
popf
shrb
lahf
sub
dec
in
in
or
dec
or
mov
jl
int3
add
mov
iret
dec
cmp
neg
out
dec
das
xchg
movsb
movsb
adc
orl
cmp
jb
sub
out
adc
cmpl
xchg
fsubs
stos
xchg
loopne
outsl
adc
cmpl
fsubr
xchg
ds
jb
popa
jle
aam
mov
mov
pusha
adc
das
add
inc
push
push
xchg
mov
int3
rorb
dec
add
aaa
pop
test
rcrl
cwtl
jb
or
repz
lcall
jo
cwtl
aam
int3
fmul
pop
loope
shr
arpl
out
inc
mov
dec
adc
lea
es
out
popf
sub
dec
arpl
lds
or
jmp
xchg
scas
test
ret
pop
imul
dec
pop
xor
push
ret
out
xchg
or
stos
insb
iret
in
pop
pop
mov
lock
push
sbb
xor
cmp
pop
idivl
lods
push
push
in
push
and
jb
push
js
inc
push
repnz
ljmp
lcall
das
in
jmp
in
push
and
int3
push
jecxz
mov
lods
lahf
jmp
lahf
imul
jnp
pop
divl
jmp
rol
out
movsb
in
mov
lahf
lods
lret
lods
pop
in
xlat
lods
es
les
push
sub
push
ja
aam
xlat
lahf
mov
pop
imull
lock
mov
push
inc
xchg
in
inc
xchg
pop
push
repnz
xorb
and
jb
push
js
in
repnz
out
popf
shrb
icebp
mov
pop
test
out
cltd
adc
stos
cld
inc
push
inc
not
mov
ja
ds
xlat
lods
or
sbb
lods
xor
push
sub
bnd
mov
imul
cmp
and
ds
jecxz
into
ja
jae
xlat
lahf
aas
cmp
dec
sbbb
imul
pusha
cmp
daa
in
pop
and
xchg
mov
ss
dec
pop
inc
insl
icebp
and
lahf
hlt
sub
rol
pop
lahf
sub
pop
in
out
das
shrb
popf
shrb
repnz
and
lods
push
pop
push
mul
rcl
ret
pop
lcall
push
repz
cvtps2pd
xor
xor
jp
cmp
movsb
xchg
movsl
pop
shrb
or
inc
testl
das
in
adc
adc
notl
sub
pop
pop
xchg
xchg
in
repnz
sub
cmc
push
sub
pop
pop
inc
cmc
and
xor
pop
popf
rorb
lahf
sub
pop
in
repz
int
pushf
push
cmc
adc
xlat
mulb
or
sub
shrb
loope
repz
and
movsl
mov
pop
xchg
mov
pop
xchg
mov
pop
cmp
insl
pop
xor
pop
cmp
insl
pop
xor
cmp
insl
pop
xor
cmp
insl
pop
sbb
daa
sub
pop
rclb
pop
repnz
pop
cwtl
xchg
cmp
ss
arpl
lods
xchg
pop
xchg
insl
pop
inc
xchg
std
stc
inc
xchg
leave
pusha
out
pusha
lock
out
insl
pusha
adc
cltd
adc
cmp
push
xchg
fsubrl
test
mov
pusha
xchg
xor
inc
incl
push
sbb
jle
and
jb
cli
jge
js
cmp
mov
jmp
bound
lods
xor
inc
bound
outsb
add
pop
bound
mov
lods
cmp
arpl
pop
xlat
cld
das
mov
es
inc
or
das
loope
cld
jge
push
arpl
xchg
xor
std
inc
xor
fs
jno
xor
xor
xchg
repnz
shrl
int3
popf
add
cld
clc
or
adc
gs
xor
inc
xor
gs
jno
xor
test
insb
add
jbe
xchg
push
incb
shlb
loop
shlw
ret
and
xor
cmp
insl
shlw
cmpsb
xor
test
lcall
push
std
test
lock
add
arpl
pop
jno
adc
addr16
ljmp
popf
fcoml
out
inc
or
and
xchg
cmp
adc
mov
jge
adcb
das
mov
jmp
js
in
imul
repz
les
das
shr
add
int
add
iret
push
movsb
incb
int3
aad
push
and
add
lcall
add
ret
lea
sub
mov
pop
jp
mov
cmc
movsb
add
or
outsb
imul
add
cld
repz
int
js
insl
imul
imul
imul
imul
imul
imul
imul
insb
cmp
insl
insb
xor
insb
cmp
insl
insb
xor
dec
mov
mov
push
sbb
push
or
int3
mov
and
sub
inc
and
push
and
cld
dec
ret
subb
rcrb
mov
stos
mov
je
mov
insl
ljmp
mov
lret
lods
test
and
fs
sahf
push
jae
mov
leave
dec
cmpsl
mov
shll
es
outsb
pop
insl
jbe
imul
clc
pop
nop
inc
pop
xchg
sub
clc
aaa
and
shrb
mov
gs
or
jg
sub
sahf
push
adc
jne
mov
and
fnstenv
arpl
enter
xchg
add
pop
push
clc
mov
mov
pop
mov
outsl
pop
shlb
sub
mov
sbb
hlt
in
sub
outsl
es
sub
push
cmc
inc
dec
xchg
je
negl
sbb
dec
push
mov
jmp
bound
ds
cmp
fisttps
push
mov
add
in
add
push
jo
shll
movsb
xchg
xchg
or
jo
jae,pn
fnsave
stc
popa
enter
bound
or
pop
mov
dec
es
aas
sbb
pusha
add
pop
xchg
mov
or
cmp
push
in
jo
ds
xchg
mov
and
jno
imul
mov
mov
clc
imul
push
insb
test
add
xchg
sub
jno
cwtl
xchg
mov
jno
negl
rorl
test
insl
jno
lret
fxam
mov
pop
aam
adc
xchg
fsubrl
mov
bound
sahf
jns
stos
nop
fdivrs
cli
pop
sub
jb
sbb
cmpsl
leave
cmp
push
xchg
inc
jns
dec
rol
fcmovb
inc
jle
int3
xor
push
sbb
das
dec
lock
inc
insb
inc
push
mov
sub
or
in
lods
call
in
cmpsb
movsb
mov
xor
pop
jae
mov
orl
cmp
jae
pop
jae
mov
lods
or
dec
push
aam
xor
cmp
sub
mov
hlt
sahf
fsubl
mov
aad
xlat
mov
in
xchg
xchg
shlb
jae
xchg
data16
lret
pop
out
mov
jbe
push
or
je
jne
dec
or
pop
mov
jo
movsb
sbb
sub
negb
push
fs
sub
ret
sub
fsubrl
gs
daa
push
or
pop
push
in
cmpb
xchg
sub
in
jno
rorb
int3
or
test
test
mov
jbe
sbb
daa
iret
es
jle
xor
ret
jp
ss
inc
leave
mov
and
orb
adc
and
lods
pop
jle
sbbl
fisubrs
jp
in
js
xor
pop
xchg
jb
sbb
or
jnp
mov
jmp
std
lock
jbe
fcomps
pop
fs
fstpt
aad
mov
in
xor
movsl
jae
mov
push
ljmp
adc
sub
enter
ja
lods
cmpsl
mov
fwait
xor
clc
ljmp
adc
mov
outsl
mov
stc
out
clc
push
pop
mov
iret
aaa
mov
lock
ja
faddl
sbb
jb
loopne
loop
js
inc
adc
test
cli
mov
nop
pop
jl
test
icebp
insl
js
in
int
add
jecxz
xchg
cmp
loop
and
cmp
push
jecxz
lcall
sbb
dec
insb
rol
in
adc
jns
bound
lods
sti
jmp
mov
out
sub
jns
enter
jmp
iret
or
rcr
clc
loope
stos
mov
push
pop
jns
add
cmc
ja
xorb
pusha
das
shll
and
adc
inc
jb
lock
out
push
mov
sub
sub
jp
cld
in
pusha
jmp
push
test
ds
mov
xchg
or
shl
adc
call
lods
les
adc
adc
dec
xchg
sbb
aad
bound
pop
sbb
sarb
add
imul
in
or
gs
cmpsl
cld
imul
mov
or
mov
pop
xchg
cmpsl
test
fdivs
xchg
jnp
lods
push
adc
cli
jl
lods
adc
push
stc
xchg
sbb
jl
xchg
fsts
inc
pop
movsl
stc
lock
test
pop
push
cmc
push
fcoms
push
daa
in
jge
jns
jge
dec
push
popf
shlb
cwtl
jecxz
bnd
popf
jb
pop
jge
fidivrl
xchg
ljmp
jle
jb
pop
jge
push
dec
cmp
mov
shrb
das
repnz
popf
jb
sbb
movq
pop
jg
push
push
in
jg
jb
sbb
mov
cltd
sub
mov
rcr
sbb
add
das
bnd
sbb
inc
cmpb
add
jo
push
push
xor
sbb
mov
andl
aaa
out
movsb
sbb
sbb
mov
rorb
cmc
push
fcoms
sbb
in
andb
sbb
mov
insb
call
in
sbb
jecxz
push
stc
popf
mov
inc
sbb
ret
incb
cmp
insl
adc
pop
cmpsb
xor
addl
xchg
adcl
sbb
lock
xchg
test
movsb
or
ja
test
fcompl
test
test
in
push
xor
test
movsb
pop
and
in
jb
mov
pop
test
out
pop
mov
pop
js
leave
xchg
stc
and
rcrb
lahf
sub
xchg
mov
enter
xchg
and
movsb
mov
movsb
incl
and
shrb
xchg
lea
xchg
lods
xchg
xchg
loopne
pop
xchg
decb
or
cld
dec
push
xor
sbb
xor
mov
mov
orb
mov
mov
rorb
jecxz
int
mov
push
lcall
and
ret
xor
mov
and
cmp
cld
and
int3
mov
and
jge
stc
and
fcoml
mov
and
xor
mov
jno
xor
and
lock
daa
xchg
jo
test
xor
and
mov
or
push
fmuls
and
sarl
cmpsb
movsb
push
and
xor
mov
mov
out
shl
lea
rclb
cmp
mov
das
mov
inc
rorb
in
mov
xchg
jecxz
pushf
inc
push
sbb
lock
sub
cmp
xor
sub
pmaddwd
xor
cmp
jbe
add
ja
cmp
lret
nop
rcr
nop
cmpsb
movsb
cmc
sub
movsb
and
inc
testb
mov
stc
rclb
sbb
test
xor
sub
insl
xchg
shrl
sub
test
dec
xchg
mov
sub
lock
in
xor
xchg
movsb
or
xchg
mov
dec
xchg
lcall
test
sub
sub
mov
das
xchg
lods
lds
pop
mov
daa
stos
xchg
sub
inc
mov
xchg
das
out
lahf
cmp
mov
xchg
jp
or
jb
add
xchg
lcall
mov
xchg
popf
lods
subl
mov
cmc
outsb
xchg
xor
or
cld
xorb
inc
jb
shll
xchg
mov
jno
adc
test
lock
xchg
dec
cmp
sub
sub
sub
or
repnz
repnz
xchg
js
pop
xchg
repnz
xchg
repnz
repnz
js
mov
add
aam
jle
lahf
outsl
cmp
lods
stos
pop
imul
fbld
clc
dec
lahf
andl
pop
mov
mov
lock
in
push
in
xchg
and
jb
cwtl
js
or
sub
xor
jae
popf
lods
pop
cwtl
push
lods
jmp
cltd
repnz
lods
fistpl
inc
pop
cmp
xchg
pop
xor
xchg
test
xchg
mov
inc
xchg
ljmp
push
daa
lods
adc
inc
pop
fs
je
arpl
xor
mov
popf
lods
ret
fwait
push
lods
push
xor
lods
pop
fwait
roll
sbb
mov
outsb
xor
and
ret
xor
xor
add
mov
push
pushf
shll
jmp
cmp
into
popf
rcr
popf
cmpsb
movsb
clc
ss
movsb
and
xor
xchg
aaa
cli
mov
cld
add
popf
adc
sub
add
xor
cmp
bound
inc
xor
lahf
rcll
test
xor
cmp
insl
lahf
shll
cmpsb
xor
lahf
test
xchg
adc
ss
lock
mov
rcll
cmp
movsb
sbb
or
aaa
test
mov
xor
mov
int3
std
jb
mov
imul
mov
mov
cmp
mov
jp
fbld
or
mov
fdivs
mov
mov
mov
jb
mov
lahf
sub
mov
sbb
push
sub
mov
in
popf
mov
int
jecxz
cmpsb
push
insb
das
rorb
int3
in
cmp
or
cld
fcomps
sbb
aaa
sub
les
and
jo
and
nop
movsb
and
loop
js
shlb
loopne
in
movsl
les
movsl
daa
test
jae
dec
mov
ljmp
fmul
fs
sub
or
jb
ds
movsl
dec
mov
and
movsl
movsb
add
add
out
push
jns
mov
lahf
mov
jae
out
adc
mov
shlb
je
xchg
fbld
push
ret
outsl
repnz
pop
add
stos
sahf
jle
ja
cmpsb
mov
xchg
loope
popa
or
mov
xchg
jp
cld
cmp
movsb
mov
addr16
inc
inc
dec
push
pop
pop
rep
dec
dec
inc
test
into
jmp
es
mov
lahf
sub
cmpsl
ds
cmpsl
inc
sahf
push
and
xchg
cmp
loop
jg
dec
mov
sub
inc
pop
jno
ror
test
ficoml
add
mov
adc
andb
lock
jo
add
mov
xchg
out
fdivr
test
push
test
sub
lods
jno
mov
cmpb
xchg
sub
stos
fisubs
push
sub
mov
cmp
and
add
cmpsb
push
ficoml
test
lock
js
daa
xchg
jmp
daa
jecxz
loop
inc
dec
sub
sub
inc
jno
adc
das
in
inc
daa
in
lods
and
jae
adcb
daa
jecxz
pop
cmp
xchg
pushf
inc
ss
dec
lods
jmp
pop
xchg
shrl
inc
xchg
sub
test
daa
lods
push
lods
rclb
cmp
mov
mov
test
and
movsb
push
scas
cli
mov
bound
sbb
xchg
shrb
cmp
dec
daa
in
scas
and
push
dec
das
mov
push
adc
in
dec
daa
jecxz
push
stc
xchg
cmpsl
repnz
jno
mov
dec
jge
adc
lods
cmp
sub
dec
jb
push
popf
lods
jo
push
lods
add
jl
mov
fdivl
pushf
repnz
jno
jp
inc
sub
fistl
jns
jno
dec
test
mov
mov
adc
mov
movsb
adc
mov
je
xchg
mov
jno
adc
ror
mov
dec
test
lock
xchg
mov
xor
repnz
lret
das
dec
adc
dec
push
sbb
xchg
inc
cmp
cwtl
cmp
insl
inc
lods
push
sbb
shlb
sarl
dec
test
lahf
sub
dec
ret
sbb
xor
movsb
dec
push
int3
and
mov
mov
repz
popf
sub
dec
push
sub
mov
pop
mov
mov
xchg
cs
in
mov
mov
jo
orb
std
push
popf
sarb
push
loopne
and
xchg
out
ss
xor
jbe
dec
lret
daa
mov
jno
movsb
dec
ret
xorl
outsb
in
mov
mov
cltd
cwtl
ret
mov
xor
inc
mov
mov
jle
adc
lods
fdivl
mov
xchg
imulb
fidivl
dec
inc
push
fildll
je
lret
leave
inc
loop
es
sub
in
sahf
sub
bound
push
add
jge
cld
mov
mov
push
pop
cmp
insl
or
in
push
inc
pop
jecxz
ror
mov
dec
stc
xchg
push
shlb
inc
loop
outsb
test
je
and
daa
in
mov
lock
xor
push
bnd
jo
cmp
and
sub
mov
mov
dec
in
pop
sarb
fsubrl
int3
test
sub
mov
popa
push
sub
lret
stos
test
imul
pop
add
ja
jp
xor
push
cmp
push
jo
pushl
testb
dec
inc
bound
lock
mov
cmp
sub
imul
mov
scas
test
sub
xchg
mov
imul
mov
mov
loop
push
jmp
test
rcrb
aam
scas
aad
mov
jae
xor
int3
add
lret
sub
scas
cmp
xchg
ljmp
sarl
lcall
pop
hlt
movsb
int3
pop
xchg
xor
arpl
test
mov
addr16
mov
orb
xchg
mov
test
repnz
pop
addr16
adc
nop
cld
cmp
or
cwtl
cmp
arpl
dec
inc
lahf
popa
aam
das
mov
cld
xchg
jmp
jae
pop
les
xchg
in
mov
xchg
insl
shll
xor
mov
inc
movsb
out
sub
cmpsb
adc
cs
lret
cwtl
dec
movsb
mov
popa
loopne
ds
movsb
xchg
lret
xchg
cmpsl
lods
xchg
cwtl
ss
mov
sbb
adc
push
scas
fs
arpl
lods
pushf
or
addb
push
xchg
xchg
lret
ret
adc
mov
pop
dec
dec
dec
cld
pusha
adc
xor
test
insl
in
clc
cld
ret
pop
negb
out
scas
cld
or
test
xor
lock
int
sub
sub
cmp
mov
or
and
cmp
in
sbb
mov
iret
enter
cmc
push
inc
shlb
subl
xor
enter
pusha
movsb
push
push
inc
push
les
pushf
ss
and
sarb
mov
int3
push
dec
call
call
pop
cltd
stos
inc
inc
push
mov
mov
aas
popa
xchg
nop
pop
xor
push
pop
cmc
mov
lods
cmp
std
adc
pop
outsl
icebp
lods
lea
imul
sbb
mov
leave
jae
mov
scas
dec
pushf
hlt
das
js
clc
das
js
cld
das
js
push
mov
mov
adc
popa
mov
out
je
mov
test
movsb
jb
lds
mov
push
xchg
mov
lret
out
sbb
dec
xchg
xchg
push
inc
repnz
lahf
push
xor
sub
fisubrl
mov
mov
and
push
loopne
sbb
ret
and
out
test
lods
aaa
dec
jns
xor
insb
aad
mov
add
movsl
push
es
movsb
jle
shlb
cltd
int
cltd
xchg
jno
sub
cld
jno
ret
stos
xchg
cld
mov
mov
fiadds
es
aas
and
sub
mov
inc
jecxz
lods
jge
aaa
lahf
shrb
xor
das
mull
clc
mov
add
stc
icebp
pop
jle
push
pusha
mov
and
shrl
aaa
rcl
aas
dec
clc
ja
rcl
enter
lods
in
or
jo
fwait
das
nop
add
int3
cld
xlat
lahf
xor
or
call
out
out
movsb
xorb
or
repnz
lods
cld
leave
pop
xchg
bswap
in
and
shl
fwait
ja
test
xchg
loopne
pop
sbb
inc
stos
mov
lret
pop
dec
fwait
mov
enter
xchg
lret
adc
push
fdivs
jb
adc
lret
jmp
cmp
xor
adc
adc
pusha
sub
sub
and
ret
subb
in
movsb
sub
out
cmp
stos
sbb
aam
sbb
cmp
sub
scas
xor
dec
mov
in
xchg
mov
lret
cld
cwtl
fdivs
call
movsb
sbb
lret
and
aam
lret
lahf
not
inc
mov
add
ficoms
jg
cmp
dec
sbbb
mov
rcrl
aas
ffree
aad
mov
in
notb
pop
jb
sub
mov
outsl
jle
xor
nop
es
adc
jp
int
sti
iret
jno
or
lods
mov
jno
mov
testb
fs
je
mov
outsl
test
push
loope
cmpsb
test
les
mov
insb
xchg
movsl
sub
popf
cltd
scas
andb
or
cmp
popf
lret
in
scas
jg
lods
ror
jnp
mov
unpckhps
scas
mov
mov
pop
fs
sbb
fcmovbe
das
stos
mov
and
sti
icebp
aaa
mov
and
xor
insb
lock
rol
loope
fiadds
aaa
aam
mov
test
push
pop
in
mov
jne
movsl
jnp
push
fists
lods
cmp
cmp
mov
mov
out
inc
push
adc
sbb
cs
cmpsb
mov
xor
jmp
mov
les
xor
jae
push
cwtl
lods
test
mov
dec
repnz
stos
fs
iret
roll
sahf
mov
xchg
gs
movsb
es
cs
std
adc
push
test
push
in
aaa
cld
popf
lahf
iret
rcrl
enter
fs
mov
inc
mov
inc
jnp
rcr
xorl
fs
popa
movsb
sti
shr
push
je
add
pop
lock
jl
shlb
or
addb
daa
inc
mov
cmp
jne
in
or
rorl
out
in
aam
mov
shl
popl
lods
or
arpl
repz
jmp
sarb
push
movsb
and
shlb
arpl
push
rcrb
aaa
shlb
push
dec
pop
mov
das
sbb
cmp
sar
ret
js
in
daa
fistl
xchg
int3
pop
dec
xchg
das
and
add
int3
add
jb
sub
repnz
pop
jb
sub
out
enter
jge
pop
jb
sub
imul
dec
mov
xchg
inc
jmp
fwait
mov
xchg
loop
and
push
push
xor
xor
mov
loop
jo
sbb
les
sbb
sub
aam
cmc
push
negb
add
lcall
mov
jno
enter
mov
adc
cmc
jne
int3
sub
cmpb
mov
loope
push
jg
test
sti
icebp
dec
mov
idivb
test
mov
test
in
xchg
xchg
sub
xlat
andb
fcmovnb
test
cmp
add
xlat
jp
in
lock
xlat
adc
pushf
pop
das
xlat
sbb
mov
cltd
xchg
outsl
cmp
sahf
enter
insl
push
lock
xchg
inc
sub
add
test
test
mov
test
pop
sub
xor
in
xchg
push
enter
xchg
movsb
scas
xlat
sub
fs
fsubrs
adc
mov
leave
scas
daa
dec
das
xchg
xor
aas
fistpl
mov
imul
rol
iret
push
jns
fdivs
mov
push
or
das
push
movsb
arpl
push
mov
ficoml
and
ret
mov
shr
shll
les
mov
push
cmc
fldenv
or
lahf
push
pop
push
jo
bound
adc
cwtl
mov
add
or
xchg
sarl
int3
cmpsb
push
push
push
loope
mov
les
movsb
fstps
jl,pn
pushf
jno
mov
lock
dec
or
dec
push
addr16
fprem
jne
in
scas
mov
sbb
data16
les
fisubrl
rorb
cmpsl
hlt
ret
ficompl
mov
xchg
jnp
cmpsl
add
arpl
lock
fildl
sbb
shrl
cltd
mov
int3
push
fs
mov
je
pop
adc
add
fcompl
sbb
mov
sub
lret
inc
ljmp
lods
mov
jl
mov
xchg
fcompl
mov
pop
adc
test
pop
cmp
dec
mov
daa
lea
xchg
xchg
jb
push
add
adc
mov
dec
and
and
jle
test
inc
fisubs
add
cmp
xchg
xor
fisttpll
adc
xor
inc
xchg
jmp
ss
and
cltd
mov
mov
shrb
cld
aaa
fistpll
fmuls
lret
int3
xchg
jns
mov
cwtl
cmp
jle
mov
je
sarl
nop
popa
out
jbe
dec
ret
xchg
lahf
int3
iret
add
mov
jb
xchg
icebp
lock
dec
or
and
dec
inc
and
movsb
inc
fisubs
xchg
in
ret
jle
fdivrs
mov
test
mov
ja
dec
mov
pop
xchg
pop
into
popf
adc
data16
add
xchg
aad
pop
call
stos
or
xor
jb
pop
cwtl
jb
add
popf
mov
shrb
and
mov
jb
rclb
imul
lret
and
jnp
insb
mov
imulb
adc
es
or
loope
mov
pop
test
cmp
scas
aaa
ret
test
lods
mov
xchg
enter
lahf
lods
mov
pop
mov
loope
fdivl
mov
pushf
sbb
sbb
add
int
xchg
movsb
int
push
pushf
mov
xchg
sbb
imul
cmp
fidivs
scas
das
ret
test
mov
dec
mov
jno
mov
cwtl
cs
repnz
int3
lret
lock
pop
ja
in
outsb
xchg
enter
adc
adc
insb
sub
rol
insb
pushf
jno
loop
mov
push
nop
fwait
hlt
xor
jb
movsl
sbb
push
push
jmp
outsl
mov
push
xchg
cli
sub
shlb
les
popf
cld
mov
loop
aaa
jecxz
mov
rdtsc
mov
adc
cmpl
xchg
int3
popf
loop
jnp
mov
daa
test
or
dec
dec
pushf
dec
xor
push
cmp
and
js
repnz
lock
gs
rorb
xchg
lea
cs
lret
dec
xchg
fists
imul
lock
lods
mov
xchg
nop
nop
in
pop
cmp
imul
das
push
ftst
arpl
stos
push
decl
add
jns
mov
sub
cmp
push
push
inc
lahf
int3
js
aad
push
dec
xchg
mov
inc
shrl
popa
inc
xor
jge
mov
jecxz
mov
lret
add
mov
xchg
and
das
push
pop
in
xchg
jb
data16
outsl
add
mov
stos
xor
popa
xor
jle
xchg
xchg
inc
cmpsb
pop
adc
push
push
repnz
out
adc
pop
pop
das
push
sub
movsb
sbb
xchg
punpckhbw
mov
mov
lahf
lods
ret
aad
lahf
movl
neg
adc
out
adc
sarb
dec
stc
stc
movsl
movsb
sbb
mov
scas
cmp
cltd
mov
lods
movsb
daa
and
jl
jno
mov
jb
mov
push
pushf
dec
call
mov
lock
sbb
call
enter
sti
flds
jne
in
clc
push
daa
adc
out
cld
lods
sbb
iret
test
fcomps
fsubs
fmuls
cli
jbe
mov
movsb
mov
call
dec
or
es
add
imulb
xlat
jmp
dec
std
mov
xchg
cmp
pop
mov
xor
movsb
ljmp
in
aad
pusha
jb
sarl
scas
rcrb
les
insb
jb
add
ljmp
sbb
in
sbb
xlat
loope
repnz
jns
mov
cld
das
int3
arpl
arpl
ja
movsb
in
adc
mov
xchg
fstpt
adc
pop
add
movsb
daa
fwait
adc
ss
sbb
movl
xchg
ret
test
xchg
loopne
sarb
jmp
cmp
bound
pop
fiadds
xor
ljmp
fdivl
mov
jl
add
nop
in
rolb
xor
shr
push
add
stos
push
sub
xchg
pusha
sub
xor
fsubs
ret
inc
in
mov
lock
mov
adcb
mov
aad
aad
pop
orb
pop
cld
ret
enter
mov
xor
mov
les
push
out
mov
or
mov
in
sub
cmp
addr16
cs
stos
int3
push
scas
xchg
scas
dec
mov
mov
out
fsubr
int3
mov
movsb
inc
test
test
stc
mov
ret
and
xor
movsb
mov
and
ret
mov
mov
push
mov
ljmp
out
pushf
stos
sub
add
pop
std
fwait
jl
jb
push
call
jns
xchg
xchg
lock
jecxz
repnz
jge
mov
xchg
sub
lock
pop
pop
cmp
pop
shrb
xchg
sub
xchg
rcll
jae
ret
pop
imul
fsubrl
mov
sbb
icebp
cmpsl
inc
and
std
aad
int3
xlat
cmp
fisttpl
xor
sahf
imul
or
push
push
clc
push
add
cmpsl
fdivs
bound
pop
test
sub
xchg
xchg
cld
pop
inc
xchg
clc
int3
leave
mov
imul
cld
xor
repnz
cmp
and
push
mov
cmp
cmp
repnz
inc
mov
enter
out
add
shlb
push
jnp
inc
lret
imul
int3
inc
jae,pn
out
fcoml
out
repz
loopne
and
xchg
in
das
in
fdivl
les
lods
loopne
cmp
lds
mov
cmp
xor
lods
pop
test
sub
outsl
adc
hlt
std
inc
call
mov
test
sti
ret
sahf
mov
hlt
and
push
pop
xchg
cmp
mov
dec
xchg
das
inc
sahf
std
xorb
lcall
nop
jecxz
sbb
dec
rcr
stos
inc
fs
cld
mov
adc
push
mov
mov
push
mov
ds
jb
bound
xorb
add
cld
mov
aam
ljmp
mov
leave
push
lret
cmpsl
leave
or
pop
mov
jno
pop
lock
dec
rorl
mov
adc
mov
int3
mov
ja
sahf
xchg
push
lret
xchg
mov
xor
jle
mov
mov
jmp
mov
sbb
scas
cmpsl
xchg
sub
dec
scas
aad
mov
aam
dec
jmp
add
and
pop
jge
pop
loopne
mov
mov
jno
lahf
pop
sub
mov
pop
push
cmp
mov
into
mov
push
dec
jle
xor
or
mov
mull
mov
push
mov
xor
cli
ja
pushf
jb
out
hlt
and
pushf
push
mov
xchg
push
daa
mov
insl
add
pop
xchg
lods
cmpsl
lret
xchg
cld
clc
inc
jle
mov
clc
cmp
adc
orb
shlb
xchg
xchg
mov
add
clc
cmp
stc
cmpsb
xor
stc
test
xor
or
stc
enter
sub
mov
jmp
fstpl
popf
mov
or
in
jnp
in
call
jne
push
stos
add
imul
push
hlt
aad
mov
cli
jb
in
mov
sbbl
or
sub
rclb
insb
adc
out
stos
or
out
xchg
repnz
lahf
daa
and
xchg
adc
sbb
in
mov
mov
cld
xchg
cmc
int
mov
sti
xchg
rcrb
mov
mov
aas
mov
xor
popf
test
test
daa
bound
shrl
jo
xchg
shrl
jl
adc
and
mov
test
cld
es
xor
xor
or
push
cwtl
popf
es
cmp
loope
xor
xlat
pop
inc
xlat
mov
das
scas
xor
dec
jns
punpcklbw
scas
fdivrs
xchg
lahf
pop
pop
mov
test
rclb
imul
lahf
or
sbb
arpl
subb
xchg
or
push
pop
lahf
test
ret
insl
xchg
xor
std
mov
loope
jp
and
cmp
pop
sbb
aam
movsb
push
std
leave
mov
sub
std
inc
ror
insb
call
cmp
xchg
and
rorb
out
leave
mov
jno
xor
xor
sbb
xchg
cmpsl
jb
push
ret
adc
pop
push
pop
mov
ret
push
stos
jns
jmp
inc
movsb
idiv
loope
mov
add
or
sbb
mov
pop
sub
cmp
cwtl
and
lods
cltd
aas
sub
pushf
fcoms
scas
mov
add
mov
cmp
movsb
outsb
ret
pop
cltd
xchg
movsb
pop
add
movsb
jp
leave
mov
jno
xor
cld
push
push
sub
lcall
add
out
pop
push
dec
push
add
fsubrs
sbb
sub
arpl
xchg
xchg
and
push
inc
scas
or
scas
sbb
mov
cmp
in
call
dec
rcr
fwait
and
movb
pop
inc
sahf
daa
repnz
add
jl
jb
mov
adc
pop
test
xor
or
cld
pop
scas
cmp
out
out
push
jnp
jmp
ja
xor
dec
adc
or
jae
out
test
sbb
insb
push
cld
popl
push
sub
stos
imul
xchg
enter
sub
push
in
jbe
fwait
lahf
cmp
jne
cmp
mov
negb
and
lret
int3
ret
out
sbb
add
cmp
repnz
mov
inc
add
jno
mov
or
mov
cmp
insl
add
shrb
sbb
or
sar
sahf
sbb
imul
nop
psrad
mov
mov
jp
push
adc
push
jb
add
push
nop
add
adc
packsswb
stos
mov
test
cs
sbb
xchg
cwtl
sub
push
and
add
push
xchg
lea
aas
stc
and
lods
pop
push
mov
or
pop
andb
pushf
pushf
cld
popa
stc
adc
xor
js
sub
xchg
jno
test
xchg
outsb
ja
iret
pop
dec
rcll
lea
in
and
lods
insb
movsb
cld
mov
lcall
fs
cli
xor
movsb
or
test
arpl
xor
pop
orb
ret
cld
or
or
xor
xor
sub
jnp
fsubs
test
jb
pop
test
adc
mov
push
mov
aad
mov
imul
loope
jns
mov
lock
outsl
adc
xchg
mov
loope
xor
out
rorb
push
fldenv
movsl
push
and
jb,pn
adc
or
push
clc
lods
scas
add
sbb
movsl
loop
ffreep
out
iret
arpl
and
mov
mov
mov
or
ror
push
fstp
push
fdivrs
cmpsb
and
xor
jg
xor
divb
std
mov
xchg
cmp
xchg
test
xor
into
fs
outsb
mov
mulb
dec
jb
es
jl
cs
mov
mov
fmuls
inc
clc
sahf
mov
adc
lret
pop
sahf
and
es
shll
in
arpl
sbb
push
and
dec
fsubr
sbb
cmp
int3
lahf
mov
inc
xchg
cmp
jp
push
fnstcw
imul
es
jae
aas
mov
jp
add
mov
les
sbb
gs
shrl
insb
adc
fucomi
iret
add
and
push
bound
icebp
in
xchg
lds
popl
lds
pop
fwait
lds
xlat
ret
in
dec
inc
pushf
sti
pop
xchg
das
ja
cmc
and
mov
mov
dec
outsl
xchg
mov
inc
or
test
mov
inc
xchg
jb
mov
lahf
adcb
or
jecxz
or
pop
fwait
outsl
mov
call
mov
cs
in
incb
xchg
and
hlt
jmp
push
and
pop
mov
dec
movsb
xor
js
movsb
and
ljmp
add
push
cld
sbb
popf
das
test
loopne
mov
or
push
mov
mov
xchg
mov
cld
loope
hlt
orb
xchg
int
rorb
lahf
sbb
pop
sbb
xor
and
and
js
and
lea
jmp
dec
pusha
bound
pop
add
or
packsswb
xor
mov
int
jo
movsl
adc
mov
push
sahf
out
fbld
jmp
mov
push
es
aam
mov
push
mov
dec
and
pop
outsl
pop
sub
cmp
sub
push
clc
cwtl
lds
and
jbe
ds
mov
mov
add
in
lcall
lahf
mov
mov
pushf
xorl
sarl
mov
ljmp
fdiv
sub
fsubr
dec
scas
jnp
and
push
dec
sub
lods
or
mov
jp
pop
mov
fstps
ds
int3
test
jns
arpl
pushf
lahf
cld
cs
cwtl
or
mov
ret
das
loop
jg
mov
sarl
adc
mov
fsubr
scas
adc
xchg
mov
cmp
xchg
jmp
ds
shll
pusha
cli
dec
pushf
or
xchg
jae
ljmp
xchg
clc
inc
inc
lcall
sbbb
sub
lock
movsb
ficoms
ret
dec
divb
xor
jae
mov
rorl
mov
lock
jecxz
test
mov
inc
sub
ror
pop
lods
push
cmpsb
cmp
pop
xor
stc
je
es
lock
lods
mov
jl
adc
xlat
or
cld
mov
push
pop
outsb
push
xlat
out
shlb
shll
stc
test
scas
xchg
or
xchg
xchg
movsb
pushf
clc
jb
movsb
clc
xchg
and
mov
or
loopne
lret
xor
adc
jo
ret
xchg
loopne
cmp
cmp
cwtl
mov
or
mov
call
sbb
mov
pop
pop
dec
jb
pop
mov
and
aas
ret
sub
adc
iret
mov
rclb
outsl
in
push
add
incb
cmp
push
lea
pop
sbb
xchg
clc
mov
mov
mov
mov
jmp
or
scas
test
pop
push
inc
loope
jb
aaa
mov
xchg
daa
sub
sti
adc
test
lods
push
test
outsl
lock
les
arpl
inc
xchg
cld
subl
clc
mov
sahf
mov
add
fwait
mov
lcall
mov
or
push
xchg
jb
xchg
mov
fsubrs
add
mov
jb
xchg
scas
jne
xor
std
leave
sbb
pop
sti
cmp
mov
pop
mov
popa
cmp
dec
mov
rol
daa
and
adc
xchg
jne
popa
fnstenv
iret
cmp
inc
insl
cmp
rolb
mov
xchg
mov
cld
int3
ror
jns
xor
sbb
inc
xchg
out
inc
nop
in
sbb
fildl
pop
mov
bound
mov
int3
sub
dec
loopne
pop
sahf
jg
test
inc
mov
lea
fs
dec
xchg
mov
sahf
xchg
mov
andb
test
push
adc
cld
sbbl
sub
jmp
mov
sub
ljmp
xchg
icebp
sbb
push
xor
pop
mov
mov
gs
mov
or
dec
sbb
xchg
and
add
adc
cltd
ljmp
xchg
fdivl
sbb
mov
jg
cmpsb
scas
das
cld
adcb
lock
aas
shrl
mov
mov
std
mov
repz
dec
mov
outsl
aam
idivl
mov
addr16
rolb
jns
mov
repnz
je
lods
mov
mov
mov
add
sbb
push
sbb
gs
jmp
mov
xor
je
xor
sbb
dec
notb
cltd
int3
mov
jle
pop
sbb
scas
dec
je
mov
outsb
sbb
icebp
ret
adc
outsl
jge
lcall
xchg
sub
mov
mov
cld
fs
xor
out
dec
xchg
jge
mov
mov
or
ret
mov
push
or
lret
mov
mov
subb
mov
aas
cli
xchg
addr16
adc
insb
ds
pop
inc
sub
sbb
ret
adc
adc
sbb
lret
mov
arpl
xorl
cld
jns
xchg
cmp
push
outsb
push
data16
push
sbb
xor
insb
add
push
fcompl
scas
jo
bound
inc
adc
mov
mov
or
cmp
or
and
jmp
and
or
ret
sbb
add
mov
jo
cmp
and
jnp
call
xchg
jbe
fwait
shlb
scas
sub
mov
in
pop
es
xchg
pop
xor
push
inc
pop
sub
adc
mov
ret
cmp
pop
adc
push
leave
fdiv
push
dec
xchg
cwtl
cld
je
int3
imul
adcb
arpl
xchg
mov
push
xchg
push
jl
movsb
das
sub
out
sub
and
in
lds
pop
add
inc
mov
sub
mov
and
jne
ret
test
outsb
lret
adc
outsb
lret
mov
lea
sbb
ficompl
add
out
and
cmp
jnp
fcoms
add
sub
mov
shlb
pop
adc
imulb
inc
test
cwtl
push
xchg
test
arpl
fsubl
jno
in
xchg
add
and
testl
int3
icebp
mov
sbb
xor
cli
mov
pop
xchg
clc
and
mov
int3
dec
or
mov
outsl
push
xor
xor
out
cmp
jno
pop
das
lock
jl
xor
pushf
fsubrs
fcmovne
mov
sub
mov
push
shll
js
and
xchg
add
or
dec
sub
int3
jnp
mov
sbb
xor
dec
test
push
push
fldcw
cld
add
shlb
imul
push
addr16
mov
popa
add
push
push
and
dec
pop
in
das
les
cmp
lret
jmp
call
lds
daa
jb
inc
into
adc
into
and
mov
mov
movsb
lea
test
sub
cmpb
and
std
jg
push
outsl
notb
scas
xor
lods
sar
xchg
mov
pop
push
iret
jae
jle
mov
call
aas
and
mov
nop
mov
mull
mov
adc
sahf
addr16
adc
mov
out
add
mov
es
add
pop
xlat
mov
stos
push
bound
add
enter
daa
pop
jo,pn
jmp
movsb
aam
push
mov
lock
sub
sbb
push
shrl
mov
inc
cmp
andb
xchg
insl
xchg
mov
pop
push
jecxz
or
test
push
bound
out
daa
or
and
jbe
dec
add
rorb
daa
sub
pop
mov
pop
adc
dec
mov
sahf
mov
movsl
sub
jno
pop
xchg
inc
sbb
add
jo
mov
mov
pop
sub
les
adcb
das
movsb
mov
shlb
xchg
cwtl
sub
xlat
lahf
mov
bound
xchg
inc
sub
xor
and
gs
movsb
sti
incl
insb
jo
icebp
gs
mov
and
sbb
dec
imul
out
dec
sti
mov
jbe
mov
shrl
add
dec
jl
mov
lods
bound
mov
adc
cwtl
jmp
outsl
sbb
sahf
pusha
sub
in
mov
mov
scas
fdiv
mov
sbb
pop
cli
jle
jecxz
adc
pop
ror
sti
sbb
imul
les
insb
push
sub
mov
cmpsl
test
jne
push
xor
clc
inc
clc
pop
outsb
sub
je
rolb
adc
sub
scas
ficompl
addr16
ret
mov
into
repnz
or
fsubp
inc
pop
ds
inc
loope
adc
sub
gs
mov
sub
sub
jp
imul
andb
xchg
sub
xchg
sub
cmpsl
jbe
jo
xlat
adc
jge
and
movsl
dec
mov
loopne
int
ja
fcmove
ds
inc
bound
xorb
shrb
jbe
sub
add
sbb
notb
insl
xchg
shrb
mov
mov
js
dec
fs
mov
push
out
roll
packssdw
pop
loop
pop
dec
adc
int3
sbb
bound
xchg
int3
fstl
mov
push
sub
call
fisubrl
or
aaa
rorb
fadds
js
call
int3
arpl
adcb
xor
test
cmpsl
scas
mov
leave
gs
inc
ret
out
xlat
dec
rcll
mov
and
mov
ret
mov
shrb
das
int3
jmp
lods
or
ffreep
mov
jmp
test
mov
imul
jns
lahf
icebp
mov
xor
cmc
adc
mov
sbb
xor
inc
insb
pusha
or
mov
iret
xor
xor
pop
push
sub
xor
sub
jae
jno
and
cld
mov
and
shlb
daa
adc
shll
push
jge
movsb
pushf
adc
sbb
andl
xor
sub
xor
xor
push
sub
xor
xlat
mov
mov
fs
lcall
adc
pop
das
mov
mov
insb
mov
dec
dec
arpl
scas
popa
pushf
mov
push
insl
je
mov
addr16
in
xchg
lods
xchg
mov
and
and
xor
clc
xor
lock
imul
outsl
xchg
imul
jmp
jne
sub
data16
mov
frstor
sub
jbe
adc
and
push
mov
pop
popf
sbb
xor
and
popa
xlat
lret
push
test
int3
sub
repz
test
mov
mov
int3
inc
rolb
insb
hlt
leave
aaa
cmpsl
sbb
xor
je
fsubs
push
fmul
orl
lods
mov
arpl
movsl
pop
arpl
aas
mov
pop
ficompl
mov
pop
repz
ss
adc
in
pop
pop
and
pop
bound
xchg
test
xchg
pop
push
icebp
push
stos
pop
push
das
loop
jl
sub
bound
js
mov
push
ficoms
xor
ja
pop
sub
cmp
ficompl
mov
sbb
fisttpll
push
mov
out
push
cs
push
dec
xchg
icebp
imul
mov
in
scas
mov
xor
insb
not
mov
cwtl
les
sbb
push
inc
imul
jle
clc
imul
or
mov
sahf
mov
cld
orl
es
movsb
or
loope
lret
gs
jmp
ja
insb
aas
data16
ss
adc
adc
xchg
repz
les
das
push
xlat
aaa
orb
fst
fadds
imul
add
nop
lods
or
mov
in
cmp
lods
shrl
ss
sub
push
int3
cmpsb
pop
int3
mov
rorb
and
jnp
mov
test
pop
pushf
mov
imul
mov
aaa
fiaddl
jb
in
hlt
les
loop
test
mov
daa
and
jge
push
mov
add
pop
dec
jecxz
ret
or
or
outsl
stos
jbe
sub
mov
mul
out
mov
adc
dec
xchg
lods
pop
sub
inc
jae
out
adc
and
jae
jns
mov
clc
scas
xchg
call
insb
xchg
cmp
les
rcll
mov
cmp
int
cmp
jb
cmp
add
inc
aad
mov
repnz
mov
push
ret
pushw
fistpll
lsl
dec
xor
or
gs
cmp
pop
es
rorb
cmp
call
inc
fidivrl
cmp
mov
ret
pop
int
lods
mov
inc
mov
shlb
push
testl
add
add
mov
dec
test
call
inc
cmp
pushl
cmp
imul
cmp
test
ss
dec
adc
or
sub
sarb
int3
stos
mov
and
push
mov
js
repnz
lcall
shr
and
int3
jb
cmp
adc
fcmovnb
insb
inc
aad
adc
aaa
lock
jns
dec
xchg
cmp
mov
shll
push
aaa
cmp
cmp
fiaddl
push
pop
stos
jno
cmp
mov
fldt
fcmovne
stos
mov
lock
push
rcll
sub
push
or
outsl
int
js
lret
sbb
cmp
cmp
andb
insl
push
lcall
leave
movsb
jo
add
push
in
shlb
and
cltd
mov
leave
sub
pusha
sarb
push
lret
ds
icebp
mov
shll
fiaddl
repnz
fstpl
loop
lds
mov
out
push
ds
fs
addr16
lret
and
dec
mov
subl
pop
ja
adc
cli
xchg
data16
cld
movsb
sub
sbb
or
fisttpl
cltd
popw
mov
sbb
jecxz
fildl
fbstp
mov
mov
dec
xor
xlat
mov
aas
daa
notl
movsb
int3
inc
stc
mov
pop
add
movsb
lret
shrb
arpl
add
cmp
sub
pop
push
mov
pop
or
loop
orl
mov
push
cwtl
xchg
xchg
mov
rcll
nop
sbb
es
xchg
jmp
add
cmp
xchg
movsb
sbb
mov
lock
jbe
mov
out
xchg
shlb
outsb
inc
in
ret
or
sub
mov
in
and
mov
mov
fldt
add
pushf
inc
mov
fcomip
or
adc
pusha
roll
sub
inc
es
test
pop
rolb
mov
adcb
jo
cmp
push
push
inc
mov
dec
loopne
or
mov
sti
sbb
mov
loopne
lods
mov
fistl
or
shlb
scas
push
jno
cld
pop
jb
add
cmpb
mov
inc
lret
loope
lret
sub
mov
cwtl
jb
mov
mov
adc
mull
xchg
insb
and
adc
loop
lock
adc
arpl
xchg
and
xor
stos
lock
inc
add
or
ja
pushf
enter
pusha
xor
inc
dec
fnsave
sub
or
mov
and
sti
into
fcoms
dec
push
sbb
nop
sub
jo
or
xor
cmpsb
mov
push
in
adc
test
push
int
jo
lods
jl
mov
xor
nop
pop
mov
or
int3
inc
fsubrp
mov
lods
xor
fmull
jns
sahf
inc
pop
sti
push
mov
cli
xchg
imul
sub
sbb
mov
sar
xchg
cmpsl
aas
jmp
and
dec
xchg
nop
fiadds
push
push
insl
xor
in
mov
aad
jnp
pop
fs
es
out
mov
das
rcr
mov
dec
cwtl
fwait
enter
push
fmul
push
movsb
and
fsubl
mov
cmp
mov
sarb
mov
jg
mov
mov
xor
enter
lahf
pop
call
mov
cmpsb
cmp
fildl
mov
and
iret
das
pop
jle
sahf
mov
or
fmuls
test
xor
pop
xchg
xchg
dec
push
cmp
and
sub
rclb
sub
cmp
arpl
jns
xchg
inc
sub
fbld
mov
dec
mov
mov
mov
or
nop
in
insb
cltd
pop
push
push
jae
lcall
mov
push
stc
pop
fs
push
ljmp
daa
sbb
jb
out
fimuls
dec
mov
xor
and
jnp
dec
arpl
push
out
jge
adc
stos
xor
push
push
stos
xor
pop
mov
scas
push
imulb
stos
cwtl
xchg
dec
xchg
loop
pop
test
orl
jae
aaa
aad
cmpsl
lock
jnp
push
mov
movsb
stc
std
js
cld
sbb
inc
stc
out
push
mov
adc
jbe
xchg
mov
rolb
sbbb
shlb
pop
inc
or
lahf
cld
cwtl
into
sub
xchg
aas
add
cmpsl
jnp
cli
xorb
pusha
les
push
push
daa
mov
lret
xchg
les
imul
out
mov
int3
pop
or
sub
pop
xchg
enter
test
ds
add
loopne
testb
adc
outsb
or
jl
sbb
loopne
mov
dec
mov
xchg
and
jnp
xchg
mov
mov
fnstsw
pop
insb
jg
push
or
pop
push
mov
cli
xchg
or
mov
nop
cmp
sub
ret
in
into
jo
or
jg
or
push
mov
fwait
cmp
fadds
cmc
fs
dec
sbb
jp
mov
xchg
push
faddl
stos
push
sahf
in
movsb
movd
out
and
lock
adc
stc
clc
roll
lea
push
or
cmp
out
clc
clc
in
cmp
jmp
scas
lret
lds
sub
dec
push
mov
sti
ficoml
sti
dec
dec
adc
pop
add
pop
and
sti
pop
fbld
fisttpll
pop
and
push
mov
xchg
gs
fcompl
mov
or
mov
push
mov
out
mov
xchg
lcall
ret
inc
or
insl
pop
fildl
stos
xchg
add
mov
ret
out
or
iret
inc
jge
mov
adc
rclb
mov
xor
jmp
and
out
mov
mov
stos
scas
dec
stc
stos
lods
xorl
insb
movsb
imul
cwtl
das
aad
xor
add
in
add
lods
imul
fisubrs
mov
inc
idivl
and
loope
mov
jmp
out
or
push
push
cmpsb
and
ljmp
mov
cmp
and
push
mov
cmp
xor
stos
pop
inc
lret
fmul
les
cmp
and
out
movsl
insl
push
push
push
and
mov
or
adc
int
sbb
push
mov
rcrl
rcrl
push
xchg
mov
das
out
lods
add
lods
add
pop
ljmp
cmpsb
push
push
inc
push
pop
arpl
cwtl
add
mov
cli
arpl
push
ret
adc
xlat
lods
int
arpl
mov
rcrb
xchg
inc
jo
and
sub
push
pop
lods
in
pop
xchg
mov
ficoms
push
daa
adc
inc
push
lods
and
push
bound
and
pop
lods
in
pop
xchg
mov
fcoms
push
daa
adc
push
sub
xchg
xchg
in
inc
xchg
jl
ds
fcmovu
inc
push
sub
push
into
enter
pop
sub
sbbb
rclb
push
xchg
jmp
or
xor
loope
pop
mov
push
xchg
dec
adc
loop
adc
dec
jb
enter
ret
push
cmpsb
in
test
fidivrs
jp
adc
lock
mov
divb
loop
dec
divl
in
jb
lock
idivb
outsb
repz
insl
pop
adc
repnz
dec
adc
dec
fld1
mov
mov
mov
sahf
in
adc
fisttps
cs
scas
loopne
hlt
shlb
mov
jmp
in
hlt
jnp
mov
xchg
mov
mov
mov
inc
fnstsw
xchg
push
repnz
pop
jle
addr16
inc
xchg
dec
call
push
adc
js
inc
mulb
sub
clc
or
popa
popf
loopne
aad
mov
out
push
pop
pop
lea
inc
xchg
mov
loope
xchg
out
sti
fstpl
int
loope
fdiv
rclb
pop
cmp
daa
adc
mov
push
ljmp
loop
xchg
lret
fistpll
pusha
sub
and
cld
inc
push
pusha
jns
fbstp
xchg
and
testl
loope
xchg
adc
jg
data16
xlat
lods
dec
popa
push
sub
ljmp
xchg
mov
les
stos
sub
in
xorb
cwtl
add
pop
sbb
aad
sbb
movsb
xchg
arpl
mov
cltd
jne
in
xchg
call
mov
fs
gs
or
lcall
add
aas
xchg
pop
push
in
data16
adc
test
jne
in
sub
lcall
scas
addr16
shrb
sub
push
fsubrl
das
push
sahf
xchg
repz
jb
imul
xchg
imul
dec
fucomi
mov
push
aaa
push
xchg
inc
mov
and
sub
push
mov
push
imul
add
adc
daa
mov
push
jge
test
mov
add
shrb
aas
or
ljmp
adc
mov
rclb
add
lods
xchg
insb
push
sub
testb
out
insl
sub
mov
shl
and
mov
and
mov
insl
lds
mov
mov
mov
pop
fildl
subb
mov
mov
jecxz
mov
idiv
dec
popa
out
lods
out
outsb
mov
popf
test
js
jle
sbb
outsb
xor
mov
lods
fdivrs
pop
or
mov
jae
pop
mov
push
sbb
jp
imul
or
std
dec
push
jnp
int
mov
mov
mov
lods
jo
leave
push
imul
push
inc
jl
mov
call
lahf
mov
dec
lock
or
mov
je
dec
scas
clc
cmpsl
aam
push
xchg
or
lock
xchg
mov
cltd
ja
stos
xchg
iret
pop
sbb
push
inc
sub
enter
sti
fsubr
aaa
fildl
int3
lret
or
cmp
push
aad
cwtl
or
mov
mov
or
shll
loopne
call
fdivs
add
jo
out
sbb
int3
out
mov
mov
sub
dec
adc
jge
xchg
xchg
ficompl
mov
add
sub
or
jo
xchg
test
pop
loopne
mov
movsb
int3
pop
or
ja
ret
lock
cld
jno
mov
adc
mov
ror
jne
arpl
fs
jno
or
insl
push
and
loop
mov
popf
or
mov
sbb
mov
data16
push
imul
and
lock
push
cmp
in
pop
mov
aaa
out
loope
adc
cmc
lock
adc
add
mov
inc
lods
sbb
fs
lods
je
ret
aam
xchg
jb
sub
xchg
lcall
jae
leave
jae
dec
mov
orl
jo
int
dec
movsl
dec
mov
adc
or
adc
jae
push
mov
add
and
xchg
mov
sub
inc
cs
jge
fldenv
xchg
add
push
pop
pop
std
adc
and
ljmp
sub
lock
mulb
sbb
imul
test
scas
sub
and
sub
hlt
test
or
inc
je
push
push
je
lods
mov
lret
aaa
scas
and
adc
nop
mov
aad
pop
jne
rorb
mov
test
ljmp
push
pusha
xchg
push
jbe
and
jb
jbe
lods
xchg
push
fildll
mov
mov
rcl
cmp
comiss
xchg
in
pandn
ja
cltd
mov
xor
pusha
xchg
add
pop
pop
js
jb
js
lods
mov
fbstp
js
inc
push
call
rcrl
adc
push
sbb
daa
int
pushf
fcoms
jns
lods
popf
jns
test
add
aad
sub
jp
in
rcrb
out
ret
cwtl
loopne
ss
leave
ficompl
loopne
jo
imul
mov
aad
dec
jp
or
fsubr
scas
leave
sub
push
jo
or
sbb
mov
xchg
jp
pop
adc
jo
sbb
out
jp
cwtl
jnp
mov
xchg
lods
inc
bound
xchg
jnp
je
sbb
outsl
aas
movsb
cmc
imul
cld
pop
xor
js
push
nop
jb
cmp
mov
mov
cltd
pop
push
or
idivl
sbb
in
sub
jo
jge
fs
jl
pop
pushf
ljmp
outsl
mov
mov
stos
pusha
pop
test
add
jecxz
sub
inc
mov
outsb
jl
inc
leave
push
lcall
sub
jmp
ret
xor
aas
sbb
push
lea
outsl
add
lahf
sub
jge
cmp
daa
mov
dec
out
mov
xor
xchg
sbb
mov
sarb
or
add
push
cmp
cmp
inc
push
mov
sbb
mov
lcall
fidivrl
add
jle
popa
out
and
pusha
xchg
cli
jle
enter
movsb
sahf
mov
pop
hlt
sub
jle
push
subb
and
insl
stos
pop
sbb
out
movsb
jmp
repz
in
push
sbb
pop
sbb
fcmovnu
sub
pop
les
jg
mov
add
sbb
add
pushf
pop
mov
loop
push
in
test
test
cltd
sbb
shrl
xor
out
xchg
jo
adc
cmp
sub
push
sbb
imul
hlt
fmuls
mov
sbb
rolb
js
push
xchg
aaa
jbe
xor
lret
mov
adc
mov
test
jae
pop
pop
mov
adc
fcomps
mov
enter
test
in
adc
andb
loope
leave
cmp
push
cld
lcall
push
sbbl
cmpsb
mov
adc
pop
add
fiaddl
js
push
ljmp
and
push
cld
sub
pop
aaa
cmc
incb
addb
test
es
movsb
or
push
sti
jae
sbbb
inc
xchg
scas
addb
and
push
call
loop
xchg
jno
cmp
adc
pop
cmpl
inc
xor
data16
mov
insl
xor
scas
fwait
js
xor
icebp
jo
subl
jb
sarb
cwtl
fmuls
scas
adc
pushl
call
ljmp
xchg
add
int3
pop
into
sub
ret
iret
call
test
xor
xchg
xchg
js
and
xchg
add
sbb
add
mov
inc
jmp
fld
mov
enter
xlat
test
rcl
push
or
or
fsubrl
loopne
repz
mov
shll
and
push
aaa
test
jg
pop
shrl
and
or
testb
aam
jle
fstl
sub
xchg
mov
lods
lcall
jp
mov
int3
cmp
arpl
mov
jmp
jb
adc
xchg
cltd
add
jge
mov
in
incb
and
pusha
loopne
shll
pop
fsubp
xor
js
insl
xchg
in
lods
or
ss
pop
mov
fisubl
xchg
jb
sub
mov
out
jno
rorb
adc
das
movsb
and
and
scas
pop
das
jb
xchg
mov
in
in
fs
jb
add
mov
lock
sub
or
sub
jnp
fwait
out
rorb
push
dec
sub
mov
insb
mov
repz
ret
and
movsb
ret
mov
bound
loop,pt
in
sub
mov
jb
mov
insb
dec
and
mov
xchg
pop
inc
mov
dec
mov
mov
ljmp
inc
xchg
jecxz
les
das
push
sbb
pop
xchg
imul
lods
mov
repnz
push
les
and
lods
fs
mov
ret
jns
sarb
shrl
sub
test
and
inc
sub
sub
mov
push
or
test
lods
loopne
les
aas
add
inc
fbstp
loope
push
cmpsb
push
jecxz
push
pop
dec
pop
xor
pop
cmp
dec
in
popf
push
lea
enter
sbb
pushf
lret
addr16
adc
or
enter
xchg
in
sarb
and
test
mov
cmp
jp
push
lcall
sbb
lock
cmp
sub
adc
js
mov
daa
sub
adc
int3
jne
cmc
repnz
hlt
int3
push
sub
xor
push
inc
dec
jbe
pop
lods
dec
fidivrl
cmp
rcr
xchg
movsb
orl
add
ficomps
jmp
int3
stc
sub
arpl
ret
hlt
mov
loopne
dec
jl
pop
jb
clc
testl
jb
ljmp
push
xchg
and
mov
adc
pop
mov
pop
inc
sbb
push
mov
in
sub
sub
int3
xchg
loope
jl
int3
xchg
sub
xchg
rcl
dec
or
dec
les
int
notl
mov
in
jb
add
xchg
xorb
inc
dec
mov
movlps
jno
cs
jp
mov
inc
pop
data16
arpl
dec
pop
lods
dec
xchg
pop
pop
popa
push
fcom
out
fcomp
xchg
push
loopne
ret
mov
xchg
lods
ljmp
call
pop
in
xchg
sarl
in
cmpsb
push
push
rcll
in
shl
lcall
adc
cmp
inc
loope
loop
rcrb
jo
rorl
rcll
add
enter
push
xor
xchg
add
rclb
mov
jbe
push
lock
jns
int3
test
pop
cmp
pusha
jg
insl
std
ja
mov
loopne
mov
xchg
ja
add
rclb
adc
xchg
jp
int
mov
adc
adc
shrl
xchg
xor
lds
xchg
xchg
jl
ds
lahf
jns
faddl
fs
fdivl
notl
lock
pop
clc
lret
xchg
and
jl
and
inc
jmp
jno
mov
push
sub
inc
inc
xchg
sub
xchg
push
arpl
push
scas
arpl
or
int3
jg
aad
mov
fcoms
xchg
lods
xchg
pop
rclb
adc
loop
lahf
and
push
xlat
xor
adc
add
sub
mov
aam
adc
and
xchg
and
imul
loope
xlat
add
ret
mov
xchg
popf
cwtl
mov
std
inc
orps
lods
sub
cwtl
dec
mov
push
daa
and
and
call
movsl
lea
mov
inc
gs
mov
lret
push
push
lods
sub
rcll
sbb
pop
xor
jne
shl
out
cltd
repnz
push
popa
mov
pop
sbbl
mov
jge
cltd
das
lea
mov
dec
in
and
lock
xor
aam
ret
mov
pusha
insl
dec
push
inc
cwtl
repnz
loopne
pop
cmp
sub
lods
cmp
dec
lods
xchg
xor
adc
mov
sub
pop
sub
dec
lcall
lods
push
inc
scas
ret
test
dec
and
or
test
inc
mov
cwtl
shlb
mov
das
push
add
push
insl
fwait
imul
sub
jnp
int3
pop
aaa
test
jno
fwait
xor
sub
push
mov
xchg
and
jb
sub
jnp
sti
add
rcr
cmp
and
pop
push
lods
lcall
mov
pop
and
or
pop
pushf
add
mov
daa
icebp
jbe
cmp
and
sahf
aaa
stos
ror
ret
int
out
push
lock
inc
in
or
push
cmp
pop
cmp
pop
rcl
mov
in
das
push
jb
popf
cwtl
cmc
outsb
test
dec
xor
sub
popf
dec
aaa
sub
hlt
sub
popf
leave
mov
inc
fwait
push
xchg
cmpsb
push
dec
xor
and
cld
or
sahf
xor
mov
out
mov
xlat
mov
ss
dec
sahf
lcall
shll
notb
fs
test
jns
frstor
scas
sub
xor
into
lahf
pop
xchg
loope
test
pop
sbbl
and
pop
lahf
and
xchg
clc
je
cld
movsb
int3
pop
aaa
sub
ja
ret
out
push
inc
lahf
mov
add
clc
cmp
add
jno
cmp
aam
imul
repnz
and
inc
repnz
mov
insb
cmc
dec
mov
movsb
imul
mov
xorb
mov
cmpsl
pop
jno
jecxz
imul
sahf
jle
mov
add
shlb
xchg
pop
rorb
js
sbb
add
pop
fucom
subl
dec
add
pop
pop
movsb
sbb
push
js
push
jbe
push
rorl
shrb
mov
xchg
mov
dec
jb
mov
rcr
jae
cmp
pushl
dec
rcrl
jb
xchg
arpl
cmp
aas
mov
fidivrs
clc
ret
mov
xchg
subb
rorl
lret
dec
imul
xor
mov
xor
int3
or
jnp
cltd
xchg
adc
push
cmp
mov
cmp
or
add
sub
mov
or
mov
js
push
mov
mov
sbb
fs
mov
mov
xchg
push
inc
shrl
ja
test
adc
push
cmp
add
bswap
mov
xchg
cmc
iret
movsb
addl
ljmp
inc
les
pop
pop
popa
imul
mov
in
jl
movsb
ret
mov
movsl
test
movsl
xchg
fstpt
xor
shrl
movsl
cltd
cmp
xchg
cmp
outsb
les
mov
les
mov
cs
popa
lds
dec
mov
ja
lods
call
or
sub
fcmovnb
cmpsb
in
enter
cmpsb
dec
dec
mov
ror
jns
mov
inc
outsl
sbb
pop
dec
jnp
fisubrs
ror
cmp
cld
daa
outsb
inc
rcrb
pop
lods
jnp
jo
cwtl
roll
sub
jb
inc
lahf
push
mov
jge
pop
xchg
ret
mov
les
add
outsl
iret
repnz
mov
push
test
mov
sbb
mov
les
xchg
inc
inc
test
insb
jne
or
adc
add
mov
test
xchg
push
or
push
sbb
mov
jae
xchg
test
jne
mov
or
stos
cmp
shlb
out
dec
in
fidivrs
xor
or
scas
mov
ret
mov
pusha
fstps
cli
rol
stos
xchg
popf
stos
mov
dec
mov
lods
add
pop
push
fdiv
cmp
inc
incl
push
andb
xchg
int
pop
pop
test
mov
cld
stos
jb
jbe
mov
out
push
pop
movb
ljmp
inc
out
jecxz
cmovb
sbb
ja
pop
lret
xchg
fists
push
enter
inc
ret
in
lods
jl
enter
sbb
inc
adc
or
shrb
lods
pop
pop
lods
daa
mov
xchg
fs
mov
xchg
loopne
jl
mov
pop
rcrb
call
mov
sahf
les
es
in
cmp
mov
sbb
and
mov
mov
pop
cmp
pusha
mov
clc
cmpsb
inc
sub
dec
xor
xor
out
xchg
dec
jbe
or
jbe
jb
jae
out
je
and
sbb
or
or
push
lea
adc
push
lods
iret
loopne
mov
fldenv
inc
push
leave
sarl
dec
pop
mov
jp
ret
push
lods
loopne
enter
push
aaa
nop
cld
dec
pop
mov
sub
daa
sub
mov
int3
stc
xor
sbb
shrb
sbb
daa
adc
lods
out
pop
popa
stc
jl
mov
mov
jb
aas
pop
lds
or
push
add
mov
sub
pop
mov
lock
dec
inc
or
cmpl
lock
scas
inc
or
ds
or
cmpl
push
mov
adc
or
rorl
mov
and
das
sbb
mov
mov
in
roll
mov
rol
push
fadds
out
mov
or
mov
cld
and
xor
add
in
cmp
out
ljmp
loope
int3
lcall
lcall
int3
popw
sub
aad
push
jl
mov
push
pushf
push
fdivrs
popf
and
arpl
mov
int
bsr
mov
cmp
shlb
push
mov
mov
fistpl
movsb
mov
inc
lock
movsb
cmp
jb
dec
es
in
push
pop
xchg
outsl
xchg
fwait
inc
cld
adcl
std
lods
pop
inc
xchg
shrl
push
leave
or
mov
aas
pop
andb
mov
rcr
mov
push
imul
jp
or
rcr
fldenv
xchg
push
mov
inc
int3
arpl
mov
dec
add
in
sub
loope
add
mov
or
out
dec
testw
pop
insl
xchg
xchg
mov
sbb
sbb
les
xor
fmull
shrb
and
or
incb
or
shlb
cmp
mov
icebp
ret
push
lret
xchg
lock
xchg
or
sub
icebp
test
fsubrl
lds
jns
scas
jae
mov
xorb
movsb
inc
shrb
push
loop
mov
icebp
adc
fucomi
bound
or
jno
xchg
lock
in
clc
push
cld
push
pusha
nop
mov
jno
test
adc
xor
sub
das
mov
js
push
in
cmp
inc
pop
mov
mov
lcall
push
pushf
mov
icebp
fldcw
hlt
insb
mov
sub
xchg
cli
mov
jge
mov
cmp
push
aas
jnp
xor
add
adcl
dec
pop
scas
dec
je
scas
xor
mov
and
fs
sbb
and
je
orb
lahf
and
in
pop
je
add
shlb
faddp
sahf
sub
lret
mov
mov
lock
loope
notb
jnp
cmp
sahf
sub
mov
jae
test
fwait
pop
jo
cmpb
xchg
in
shll
dec
cltd
push
mov
inc
cmc
jnp
ljmp
mov
or
sbb
xor
mov
xor
int3
or
adc
ret
push
xor
inc
xchg
pop
fisttpll
cmp
xchg
scas
pop
push
push
xor
insl
sub
popa
push
sbb
arpl
loopne
xchg
stos
add
ss
pushf
sub
fstpt
inc
outsb
jl
outsl
jnp
push
movsb
std
iret
shlb
dec
cmpsb
mov
jnp
lcall
js
test
popa
rclb
mov
inc
adc
add
sub
xor
popa
mov
repz
xor
sub
clc
out
es
ljmp
dec
inc
xor
cltd
cli
enter
fs
shr
je
int3
inc
dec
mov
pushf
icebp
ja
push
in
xor
mov
and
movsb
movsl
mov
nop
data16
outsl
movsl
mov
ss
daa
cmp
xlat
outsb
mov
sbb
out
into
jo
je
dec
xchg
int3
adc
addr16
dec
cmc
scas
cltd
pop
mov
fsub
je
aas
out
mov
lcall
movsl
outsl
mov
fidivrl
pop
xor
xlat
out
stos
test
iret
shr
dec
repnz
movsl
int
insb
jge
cmpl
sub
lods
mov
fdivrp
insb
rcll
push
scas
insb
icebp
aaa
leave
xlat
stos
pop
in
push
nop
fs
nop
xchg
test
stos
movsb
icebp
xchg
inc
movsb
mov
cmp
fs
int3
scas
mov
lods
or
mov
push
je
loope
loop
push
mov
jp
xchg
dec
lods
lcall
pushf
in
lods
jo
lea
test
outsb
sbb
fsubp
int3
iret
jae
aam
inc
cwtl
mov
cmpsb
cs
pushf
sub
imul
push
loope
fbld
dec
mov
int3
push
outsl
mov
scas
adc
jae
loope
inc
jno
xchg
adc
imul
push
adc
js
loope
xor
je
lret
mov
pop
das
mov
movsb
xchg
cwtl
jbe
fwait
xchg
fs
cmpsl
out
jle
subl
pop
cmpsb
inc
lret
fwait
lahf
and
insb
lods
mov
aas
mov
stos
movsl
cmpsl
add
sbb
xchg
rcr
push
daa
push
lahf
int3
and
pop
dec
sub
lea
xor
pop
ret
in
sbbb
pop
mov
pop
or
jne
out
cmc
lahf
rcll
mov
inc
js
hlt
lock
jae
and
xchg
and
pushf
movsl
sbb
push
cmp
push
ret
imul
fsubr
je
repz
out
push
jns
jle
ss
mov
lods
aaa
push
adcb
mov
cwtl
cmc
es
fdivrl
int3
mov
mov
cmpsb
sbb
lock
mov
mov
adc
loop
out
popf
mov
mov
push
add
jmp
mov
sbb
adc
fdivl
inc
xor
push
addr16
jmp
mov
jns
das
in
ficoms
sub
pop
and
gs
push
jge
and
dec
adc
arpl
cmp
sub
repz
nop
or
mov
mov
jae
mov
bound
pop
jbe
outsl
in
in
mov
sub
outsb
movsb
ja
cwtl
popa
pop
decb
sub
loop
mov
or
push
test
jno
mov
movsb
aas
xchg
fldl
xchg
out
xchg
adc
dec
insb
outsb
xor
mov
mov
adc
xchg
mov
out
cmp
leave
cwtl
mov
mov
int3
outsl
lret
sahf
and
or
jge
subl
aaa
stc
sbb
imul
popa
loop
push
xchg
bound
jb
pop
shlb
inc
sahf
push
frstor
aas
mov
je
bound
cwtl
jns
lods
lea
cmpb
lea
mov
pop
jno
movsl
fs
leave
in
scas
ret
in
push
mov
mov
sub
mov
sub
mov
adc
mov
loop
mov
mov
cmpsl
adc
mov
pushf
jg
fisubs
xor
sub
mov
xchg
dec
fnstcw
push
push
push
push
adc
sub
pop
daa
and
xor
int3
cmp
roll
lods
xchg
fs
mov
jmp
xor
test
and
jne
je
cs
mov
scas
sub
xor
pushf
push
inc
test
cmp
xchg
sub
mov
mov
sub
sti
cmp
push
mov
out
sub
test
ficoms
jae
fs
insb
repz
jno
sub
in
sub
leave
nop
movsb
daa
test
call
test
pop
fs
mov
xor
mov
cwtl
stos
int3
push
popf
xchg
sub
lock
je
mov
sbb
jl
xchg
insb
in
sbbl
pop
pop
xchg
jo
xchg
jp
adc
cwtl
pop
sbb
outsb
lods
sarb
or
lahf
lods
cmp
es
mov
inc
dec
std
mov
cmp
mov
mov
int3
sub
mov
mov
cmp
xchg
cltd
xchg
repnz
test
dec
xchg
or
sub
xlat
lcall
cmpsl
cwtl
icebp
fldcw
xor
pusha
fsubrs
sbb
push
pushf
jp
nop
rcl
mov
hlt
subb
push
dec
sub
fldcw
mov
addr16
arpl
lret
and
aad
outsb
dec
insb
fwait
inc
xor
dec
fisttpl
js
jecxz
push
ja
sub
repz
push
push
jae
dec
adc
lret
call
mov
daa
jo
sub
insb
push
dec
xchg
pop
mov
dec
in
or
mov
test
jecxz
std
adcb
mov
mov
inc
je
mov
shrl
adc
cwtl
sub
mov
mov
pop
xchg
repnz
sbb
mov
movsb
mov
mov
jle
popf
fs
push
arpl
hlt
mov
mov
daa
jb
inc
xlat
outsb
add
push
lock
dec
mov
mov
roll
mov
lds
imul
mov
sub
jns
jge
lret
xchg
mov
adcl
pop
and
jne
xchg
jmp
rclb
leave
pop
nop
mov
mov
test
push
jb
ret
test
xchg
out
lods
pop
arpl
cmp
pop
mov
test
ret
and
int3
mov
sbb
je
fisttpl
jns
repnz
daa
dec
testb
xchg
insl
stos
je
aas
fwait
jl
outsb
mov
mov
mov
aas
aad
cwtl
outsl
xlat
outsl
mov
sub
cmc
add
mov
nop
js
movsb
mov
dec
mov
dec
mov
cmpsb
pop
mov
jmp
je
xchg
sub
fs
jae
inc
test
jne
mov
add
lock
adc
dec
mov
lds
pusha
or
lods
cmpb
lock
mov
jae
mov
xchg
mov
cmp
mov
or
mov
insl
xchg
outsb
leave
pop
loope
cmpsb
mov
mov
inc
call
mov
xchg
outsl
xchg
jle
test
jae
roll
jl
std
push
lods
sub
sub
outsl
andl
ljmp
or
sahf
test
fsubl
mov
adc
inc
jp
mov
arpl
pusha
cld
xor
insb
ja
popa
adc
loope
mov
lods
xchg
xchg
pushf
dec
movsb
xchg
xor
mov
push
sub
mov
mov
xchg
inc
decl
lret
jb
pushf
int3
aam
xor
das
mov
fsubl
lea
sbb
popa
lret
jnp
jns
sub
cmp
push
data16
in
arpl
sbb
mov
aad
xlat
mov
xchg
fidivl
sahf
inc
mov
pop
lock
sahf
mov
nop
sub
outsb
lcall
push
movsb
jnp
movsl
aaa
and
xchg
xchg
insl
imulb
repnz
out
out
movsb
xorl
pop
lods
xchg
outsl
pop
push
inc
add
push
mov
push
in
aad
mov
in
arpl
mov
ljmp
push
test
sahf
movsb
ljmp
dec
popa
in
push
mov
sti
mov
int3
xchg
xor
insb
inc
aad
adc
hlt
mov
inc
xchg
xlat
mov
jle
pop
mov
lods
int3
cmp
sub
mov
movsl
add
test
outsl
jns
pusha
pop
add
cmp
or
rcr
les
mov
jne,pt
repz
in
and
rcl
or
xchg
push
ret
out
sbb
pop
icebp
clc
popa
push
clc
push
ja
dec
aam
test
aad
push
daa
pop
mov
or
sub
pop
in
xchg
mov
ret
adc
movsl
cwtl
out
mov
popf
pop
sahf
loope
lret
dec
mov
shll
popa
dec
push
and
fs
cmp
dec
push
xchg
cs
and
movsb
test
fistl
insl
lods
and
jo
test
movsl
clc
or
cld
jno
mov
repnz
fadd
mov
mov
sub
cld
or
and
jmp
test
pusha
cmpsl
jecxz
push
hlt
lock
sub
insb
jl
inc
or
cmpsl
das
sbb
adc
xor
xchg
and
rclb
sub
popf
mov
jo
test
loopne
add
push
jmp
cmp
cmpsl
dec
add
stc
xchg
inc
les
fnsave
ret
adc
push
push
pushf
mov
pop
and
xchg
mov
lock
nop
je
scas
add
mov
je
lods
sub
ret
int3
stos
insb
out
lea
lret
xor
pop
cld
fisttpll
or
sahf
inc
jb
je
shll
adc
call
cmp
mov
flds
push
popf
out
ret
mov
mov
sahf
stos
and
inc
mov
fdivl
and
cwtl
sub
jmp
inc
inc
test
add
movsl
enter
cwtl
leave
in
sarb
lods
jmp
int
adc
mov
int3
cmpsl
mov
outsl
mov
push
xor
mov
jmp
pushf
xchg
inc
sub
mov
mov
pop
xchg
das
cmp
add
push
out
imul
outsb
mov
cld
into
push
and
loop
aaa
xor
xchg
imul
outsl
movsb
mov
lods
je
xor
xchg
les
jb
push
xor
mov
jecxz
push
push
shll
pop
stc
fisttpl
jns
jp
sar
daa
inc
aam
insl
mov
and
mov
jo
inc
jno
mov
daa
mov
pushf
rcrb
mov
movl
push
cmp
inc
xlat
mov
inc
mov
sub
xchg
inc
les
test
aas
popf
insb
cmp
mov
cmpsb
sbb
popa
orb
in
adc
add
lahf
xor
mov
xor
fdivl
mov
sub
jns
shll
mov
outsl
push
lods
cwtl
bound
je
xchg
scas
sub
jns
arpl
in
hlt
and
pop
fs
and
roll
sub
push
leave
mov
outsl
sub
jno
insb
pusha
je
aaa
pushf
or
mov
mov
dec
test
add
adc
in
in
shl
add
lahf
or
push
ss
divw
adc
repnz
jb
loop
xchg
jae
pop
je
daa
cmp
and
jns
sti
call
imul
xchg
es
mov
inc
inc
pop
lock
cwtl
pushf
movsl
das
data16
ficoml
pop
mov
jp
add
jge
andb
mov
adc
mov
test
and
ljmp
das
mov
push
sub
push
aas
cli
mov
out
or
jmp
or
inc
adc
loop
les
sub
aas
cmpsl
mov
fcomps
stos
xchg
in
popl
sub
stos
cmp
xchg
test
test
aad
lret
push
sbb
je
popa
pop
mov
insb
xchg
mov
push
fs
cmc
lret
imul
push
icebp
cs
ds
pop
das
mov
inc
das
int3
out
push
push
pop
mov
test
dec
or
jb
mov
aas
jno
xchg
sarl
pushf
mov
mov
aam
xor
push
test
insl
bound
int
nop
sub
dec
cmp
mov
hlt
pop
adc
xor
bound
sub
xchg
lret
push
and
pop
mov
dec
inc
push
pop
out
or
cwtl
pushf
divl
lock
xchg
sub
mov
adc
rcll
jge
punpckldq
pop
and
in
jae
sbb
call
hlt
xor
xchg
push
cmp
out
pop
push
lods
in
orb
or
mov
ret
push
push
bound
push
push
ficoms
mov
popa
lock
cmpsb
sarl
pushf
inc
mov
mov
mov
les
je
sahf
or
ja
or
test
xchg
xchg
nop
push
mov
xchg
cli
add
arpl
je
fcmovb
mov
aaa
mov
mov
bound
neg
mov
aas
pusha
movsl
decb
imul
daa
or
mov
mov
mov
and
inc
scas
sahf
sbb
xor
repnz
rclb
mov
jbe
out
xchg
or
repnz
scas
mov
fisttpl
fsubl
mov
lods
push
or
sub
arpl
shlb
xchg
mov
mov
jne,pt
dec
mov
sti
jae
js
gs
and
in
int
push
pop
into
cmp
add
insb
mov
pop
lcall
pop
add
fs
sub
je
push
mov
test
mov
pop
repnz
out
adc
cli
xchg
paddd
adc
xchg
cmp
mov
inc
rcrb
test
xchg
mov
icebp
mov
xchg
scas
mov
adc
ds
test
jmp
mov
ljmp
cli
push
outsl
sbb
xchg
outsw
and
mov
cmp
mov
daa
cltd
arpl
mov
je
sahf
jp
ds
pop
xchg
dec
pushf
lods
cmp
shrl
adc
cld
das
dec
arpl
mov
mov
and
stos
mov
call
mov
xorb
icebp
pop
les
fdivl
sub
mov
scas
test
je
daa
pop
cmp
scas
mov
sbb
int3
fnsave
and
sahf
xchg
repz
push
inc
lcall
outsb
ret
movsb
sub
filds
shll
cmpsb
inc
and
in
outsl
push
shl
repnz
jp
jb
repz
and
mov
cmpb
sub
aas
es
popf
loope
aaa
lcall
push
xchg
add
pop
cmp
push
icebp
adc
loopne
iret
add
movsb
xchg
nop
mov
ja
sub
xchg
xchg
sub
pop
pop
mov
mov
loope
rorb
in
test
sti
push
jo
jmp
outsb
rcll
iret
jl
mov
push
mov
stos
mov
mov
loope
lods
clc
mov
lret
xchg
mov
jno
in
xor
in
test
sub
sub
xlat
in
cmpsl
push
mov
push
adc
pusha
jge
fnclex
cli
ss
jns
pop
pop
in
das
mov
sbb
mov
pushf
adc
mov
icebp
aas
push
sub
mov
push
aaa
js
insb
stc
hlt
fstl
xor
cli
inc
push
data16
test
pop
cmp
mov
mov
mov
jae
xchg
mov
andnps
adc
mov
test
mov
adc
dec
and
pop
add
fldcw
pop
mov
sarb
in
popa
pop
adc
test
das
mov
int3
mov
daa
xchg
testb
je
mov
lods
repz
fsubs
jns
inc
mov
hlt
fcmovne
inc
lea
mov
cmp
imul
icebp
dec
movsb
adc
popa
cmpsb
pop
aas
push
daa
cmp
arpl
or
daa
std
sbb
out
inc
pop
xor
push
xchg
in
add
or
dec
outsb
xor
push
inc
lret
insl
idivl
es
add
fwait
stos
pop
bound
test
clc
mov
push
xchg
mov
outsl
pop
add
and
ja
jno
and
pop
mov
into
inc
cmp
insb
inc
test
inc
mov
push
repnz
mov
mov
cmc
sub
mov
mov
repz
das
jae
push
nop
mov
scas
ss
pop
sbb
mov
aad
cmp
inc
mov
arpl
mov
lods
pop
push
add
push
cmpsl
cli
cmpsb
or
jno
inc
fcomps
mov
lcall
pop
adc
xchg
xchg
je
or
cmp
pop
sub
cwtl
jns
je
jnp
mov
shlb
jge
adcl
inc
fs
test
out
jae
mov
sbb
dec
jge
ljmp
xor
pop
mov
test
mov
push
push
rep
mov
in
lods
jecxz
int3
mov
call
lcall
ret
pop
ss
dec
movsb
lods
push
jge
jbe
add
outsb
outsb
data16
jns
jecxz
cmpsl
mov
outsb
or
jle
insb
jg
cs
das
fldcw
mov
push
mov
aad
int3
xchg
rclb
mov
hlt
push
or
jno
xchg
adc
pusha
nop
jmp
addr16
dec
push
rorl
out
fldt
and
ds
mov
out
mov
pop
push
addl
or
adc
aam
sbb
aas
sbb
cmpsl
jae
cmpl
adc
mov
cmp
xor
jns
inc
xchg
lods
pop
pop
mov
pushf
dec
jo
cmp
movsb
cmp
rcl
cmp
jmp
mov
mov
movsb
movsb
ret
xor
shll
movsl
xor
cld
jg
mov
in
shl
mov
popa
mov
psubusw
faddl
aam
fs
je
xchg
aaa
faddl
fs
testb
mov
mov
iret
add
mov
push
nop
inc
iret
pop
mov
cmp
movsb
dec
xchg
mov
cltd
jmp
push
repz
test
xor
notb
adc
jmp
push
pushf
out
mov
push
mov
stos
cmpsl
xor
mov
in
out
enter
out
inc
stos
dec
icebp
lahf
nop
pop
test
sub
cmp
imul
pop
mov
enter
imul
adc
mov
push
sub
pop
adc
int3
jns
aas
mov
jg
mov
and
pushf
out
mov
mov
scas
pushf
outsb
pop
pop
mov
js
aaa
movsb
mov
aad
test
fisubs
fistl
pushf
pop
subb
scas
jecxz
nop
mov
push
int3
imul
inc
mov
push
movsb
je
ss
fsubs
mov
jbe
or
js
xor
pop
inc
pop
mov
push
fdivl
enter
pop
add
das
popa
adc
std
idivb
push
sub
or
jns
xchg
daa
shlb
popa
bound
int3
push
adc
lret
mov
jns
add
icebp
jne
jnp
mov
lods
adc
imul
cli
mov
push
out
outsl
mov
xor
xchg
addl
jae
lods
daa
nop
je
and
subb
mov
pop
je
push
jno
outsl
sbb
mov
test
and
popf
adc
jecxz
lea
nop
dec
mov
pop
js
cs
and
test
pushf
jmp
xchg
cli
sbbl
test
lret
aas
xchg
mov
mov
push
int3
mov
mov
adc
data16
mov
inc
fidivrs
pusha
stos
js
fadd
cmp
cmp
data16
repnz
fidivl
adc
pop
test
and
dec
fistpl
and
mov
mov
or
cmpsb
mov
bound
movsb
pop
xor
aas
sarl
push
sbb
pop
icebp
xchg
or
fwait
test
sub
add
int
and
in
aas
inc
lods
inc
push
test
les
or
test
aaa
lods
mov
stos
scas
jae
lahf
sub
pop
fnstenv
leave
xchg
sarb
lods
dec
add
aas
mov
pop
or
dec
mov
test
fldenv
das
xchg
mov
pop
pop
loop
add
jl
jle
xorb
xchg
dec
pop
push
js
sbb
daa
jns
dec
inc
scas
mov
adc
xchg
test
mov
dec
hlt
mov
mov
in
lahf
mov
sub
and
and
mov
jl
ja
bound
in
imul
sub
push
or
inc
sub
sbb
cmp
mov
mov
lahf
mov
cli
out
xor
jp
lods
ljmp
xchg
das
dec
pop
shrb
or
and
test
clc
xor
pushf
sbb
xor
movsb
int3
pop
push
xchg
jne
pop
pop
cltd
pushf
and
insb
push
pop
shlb
stc
or
push
movsl
jo
cmpsb
pop
and
sbbb
add
jno
mov
pop
in
test
xor
add
test
dec
mov
lret
test
data16
fs
pop
cmpl
cmp
fisubrl
lcall
xchg
fisubs
fwait
scas
imulb
mov
mov
cmp
dec
mov
mov
mov
cltd
xchg
outsl
mov
das
lods
sbb
cwtl
xchg
xchg
notb
scas
xor
lods
mov
stc
fmulp
into
inc
sub
mov
movl
in
inc
pop
pusha
pop
jo
mov
shll
adc
pcmpgtb
mov
lea
mov
xchg
mov
in
mov
add
fs
js
sbb
imul
imul
insl
movsb
xchg
dec
mov
rcr
xchg
shrl
int3
xorb
js
pop
jo
cmp
inc
sbb
sub
sahf
dec
mov
loopne
jge
and
mov
call
cs
fiaddl
mov
andb
cwtl
arpl
cmp
shrl
je
sbb
adc
int3
inc
and
sti
stos
inc
imul
pop
movsb
jmp
outsb
movsb
sbb
mov
imul
xor
ret
int3
mov
movsb
sub
in
jnp
push
repz
dec
mov
daa
insb
add
push
rorl
inc
ja
cmpsb
popa
dec
lret
fistps
test
xchg
fisttpll
xchg
test
movsb
shrb
jle
jne
pop
pop
mov
icebp
or
outsb
int
dec
and
inc
ds
test
pop
xchg
push
in
pop
outsl
push
jecxz
mov
popa
int3
push
stos
scas
xor
adc
pop
popf
jo,pn
cwtl
es
push
in
movsb
cmp
cwtl
shlb
jnp
fldenv
repz
adc
mov
imul
lahf
nop
xor
out
popf
sub
fdiv
mov
fwait
subl
lret
fs
lods
cbtw
sub
loope
push
loopne
and
mov
inc
xor
in
stos
jl
daa
sub
sahf
lahf
sub
out
lock
dec
hlt
insl
repz
jg
in
fldcw
fwait
mov
xchg
pushf
cmp
mov
aas
cwtl
xor
sbb
data16
gs
lock
daa
mov
lods
jo
xorb
mov
cmp
testb
mov
jl
js
xchg
mov
insb
subl
push
bound
pushf
add
inc
push
icebp
movsb
addr16
mov
shlb
lret
mov
mov
xchg
popf
mov
cmp
cwtl
int3
push
ljmp
jge
pop
jbe
leave
push
jb
das
imul
addl
xchg
jmp
jg
xchg
cmpb
cwtl
movsl
lea
ret
xor
arpl
fmull
pop
sub
dec
gs
xchg
test
xor
mov
movsb
aad
lods
xor
jg
and
in
xor
daa
mov
ret
test
sahf
xchg
andb
js
sbb
jl
mov
ja
mov
bound
push
shlb
xchg
mov
push
in
insb
jo
subb
test
xor
xchg
pusha
movsb
sub
jo
jo
repnz
popa
xor
lret
cli
shll
mov
jno
in
lods
mov
xchg
add
pop
imul
mov
push
test
andb
cmpsb
bound
fs
xchg
mov
nop
jb
outsl
ror
sub
or
push
addb
out
dec
insb
test
jl
gs
xor
fwait
les
je
es
mov
dec
sub
inc
mov
jo
mov
add
insb
cwtl
jb
push
cli
sub
das
mov
fs
pop
dec
and
roll
movsl
in
pop
inc
sub
sbb
scas
imul
add
gs
ror
xor
xor
or
cmpsl
cmp
ds
xchg
mov
pop
popa
leave
scas
cmp
scas
xchg
in
push
mov
xchg
xchg
xchg
iret
sbb
arpl
mov
addr16
pop
push
sub
icebp
test
rcl
inc
std
sahf
add
mov
cli
add
pop
pop
orb
add
cmp
add
pop
data16
test
and
xchg
ret
inc
inc
xchg
sbb
and
add
stos
js
aam
arpl
mov
sub
dec
pop
jo
push
std
jle
test
jl
icebp
or
inc
andl
cld
insb
aad
fwait
push
xor
mov
incl
outsb
aas
scas
xchg
xor
ds
mov
stos
jo
jo
addb
mov
xchg
lret
int3
insb
mov
add
leave
loopne
xchg
xchg
jb
xchg
movsb
cs
jmp
lock
cwtl
mov
out
leave
mov
xor
outsb
cmp
mov
mov
jb
xor
shll
xchg
adc
in
rorb
leave
pop
push
jb
filds
bound
jno
xor
xor
jne
mov
les
movsb
dec
je
or
pop
adc
jns
sbb
outsb
imul
sahf
dec
jge
mov
movsb
lods
xchg
lods
arpl
push
je
xchg
pop
loope
fisubrs
out
in
scas
frstor
push
movsl
mulb
imul
jae
sahf
data16
dec
rcll
push
jb
outsb
movsl
lea
dec
subl
je
mov
push
in
imul
popl
mov
jne
push
jo
cmp
in
inc
push
sarl
sub
inc
sub
or
and
and
mov
movsb
xlat
jns
push
jb
in
rcll
ljmp
push
xor
shll
stc
cmpsb
ljmp
test
dec
and
mov
inc
stos
mov
popf
jno
xchg
xor
popf
repnz
scas
scas
stos
mov
nop
dec
add
lods
xor
xchg
stos
fidivs
dec
stos
xchg
sarb
int
aas
out
sub
push
push
add
and
rcr
jle
andb
sbb
out
mov
push
mov
mov
int3
subl
aam
mov
dec
popf
push
rcrl
push
adc
insb
inc
sub
pop
sbb
dec
test
cmc
jbe
push
fmul
test
cs
xchg
nop
cmc
and
cmovg
adcb
fwait
je
lods
ret
pop
push
jp
cmp
sahf
dec
xchg
mov
pop
nop
js
xlat
xchg
sub
int3
sbb
cbtw
xor
and
mov
scas
jecxz
fnsave
xchg
or
sahf
dec
cmp
cmp
xchg
scas
rclb
addr16
push
mov
cmp
popf
leave
mov
test
push
adc
ficoms
daa
daa
jge
dec
sbb
cmp
test
add
push
pop
xor
cwtl
sbb
ss
rcrl
lret
jne
scas
or
mov
pop
mov
lods
mov
dec
xor
cs
mov
ss
fstl
sbb
insb
mov
sarb
adc
pop
inc
aas
mov
mov
lret
fidivs
add
scas
xor
pop
dec
stos
cltd
ss
mov
pusha
test
es
ljmp
push
inc
jnp
pop
cwtl
mov
adc
inc
xchg
testl
bound
jo
xor
inc
mov
sub
xchg
adc
rcll
mov
in
sub
mov
adc
jne
adc
jge
ret
dec
cmp
add
dec
aad
xchg
adc
outsb
dec
stos
orl
pop
xchg
lret
mov
dec
data16
pop
adc
hlt
out
pop
movsb
int3
xchg
sti
and
mov
jb
pusha
test
push
lds
out
jae
lds
lcall
std
xchg
notl
data16
push
xchg
mov
out
or
dec
mov
cwtl
dec
dec
push
dec
insl
movsb
dec
and
adc
add
jnp
push
inc
dec
je
sbb
orl
je,pn
cmpsl
rcrl
test
outsb
cltd
repz
cmp
aas
movsb
mov
dec
pop
outsb
cli
sub
test
ds
dec
daa
cmp
scas
mov
popa
jmp
adc
lea
mov
notb
cli
cmp
out
addb
dec
popa
popa
repz
arpl
jae
stos
mov
test
movsb
sub
fwait
sbb
mov
xchg
fs
leave
mov
mov
push
mov
lods
sub
xchg
sahf
leave
test
push
daa
mov
stos
icebp
xor
mov
les
adc
cmp
sub
popa
mov
sub
repz
push
mov
add
inc
dec
mov
xor
or
arpl
sub
mov
sub
jb
add
outsl
and
pop
mov
insb
imul
adc
push
or
das
mov
in
ljmp
sub
andb
fcomip
add
jb
sub
cli
fs
mov
mov
and
addl
adc
loopne
pusha
jno
sub
push
in
fstpl
cltd
and
leave
outsl
sbb
cwtl
xor
leave
mov
fwait
repz
cmpsl
adc
int3
adc
add
pop
dec
mov
bound
mov
pop
jmp
cmpsb
mov
int
mov
mov
mov
mov
mov
adc
sub
lret
mov
aas
leave
mov
enter
or
inc
adc
pushf
and
inc
xchg
mov
sbb
cwtl
jo
aaa
leave
cs
xor
add
add
aas
xchg
int3
popf
in
les
xchg
stos
into
jns
sub
insb
sub
jo
mov
xchg
xchg
or
sub
insb
xor
jne
push
push
mov
movsl
dec
sbbl
sub
inc
mov
mov
mov
inc
push
add
and
divl
lahf
out
cmp
je
pop
push
adc
sti
sub
and
dec
and
test
mov
jl,pt
pop
mov
push
push
das
es
adc
ja
xchg
das
pushf
stc
idivb
cli
jmp
mov
xchg
ljmp
pushf
pop
fbld
repz
imul
xor
out
int3
adc
lods
adc
adc
bound
xchg
cmpsl
or
test
rclb
je
int3
xchg
jecxz
sbb
rcl
jnp
lods
adc
lretw
push
jne
and
mov
cmp
popa
push
mov
repz
and
cwtl
jo
sub
mov
cmpsb
lds
sub
mov
jge
lods
adc
ret
mov
outsl
cmp
cmp
mov
arpl
in
jns
hlt
scas
jnp
cmp
dec
das
jo
xchg
mov
fs
or
jb
pop
jo
imul
je,pt
imul
mov
out
push
stos
xchg
dec
sub
mov
ljmp
testb
add
sub
nop
sub
pop
dec
push
sahf
lahf
clc
test
pop
dec
adc
js
cmpsl
loopne
mov
mov
cmpsl
test
addl
mov
push
fwait
dec
jb
mov
int3
push
out
enter
xchg
mov
fs
cmpsb
cwtl
xor
imul
inc
std
call
mov
lods
jo
lret
jmp
and
inc
fs
movsb
mov
aaa
shl
mov
scas
inc
loopne
cmpsl
mov
inc
mov
data16
inc
push
int3
add
push
add
fidivl
add
pop
and
inc
scas
xchg
aam
mov
scas
sub
outsb
mov
sub
ret
cs
hlt
and
rcr
ret
int
mov
hlt
xor
cli
jb
in
scas
insb
jo
subb
lock
cmp
xchg
jle
lret
or
cld
xor
xlat
or
mov
cmp
data16
xchg
push
inc
mov
add
lcall
xorl
repz
sbb
js
and
and
and
out
rcll
sub
lods
gs
jb
shrb
outsb
jno
repnz
ja
sub
arpl
mov
ds
jns
push
test
lahf
movsb
mov
xchg
je
scas
mov
and
cs
pop
fs
xlat
pusha
push
popa
retw
cltd
pop
loope
fs
std
imul
aad
add
ficompl
or
bound
cmc
lahf
fidivs
add
lods
popf
sarl
pop
mov
add
js
sti
add
outsl
add
sbb
xchg
push
fistps
xor
out
fsubs
jl
mov
movsl
pop
hlt
insb
or
mov
je
fsub
jge,pn
stos
xor
int3
jnp
fbld
mov
sub
xchg
jno
shlb
cltd
test
in
ss
in
pop
mov
jg
scas
and
stos
fisubrs
sub
insb
add
pop
pop
lock
sbb
inc
mov
aam
and
xchg
rclb
scas
sub
push
aaa
pop
and
xlat
mov
xchg
clc
int3
fstsw
xchg
lahf
test
push
sbb
dec
jl
psadbw
stos
cmpsl
cs
mov
xchg
or
jl
mov
add
push
sbb
mov
jl
cld
pop
inc
push
sub
pop
aas
pop
sub
xchg
push
scas
int3
std
mov
and
push
cld
sub
add
das
push
es
jg
loopne
mov
xor
and
shr
jne
inc
movsb
pushf
and
movsb
pop
jge
xchg
push
xchg
xor
lret
jmp
mov
test
ret
bound
pmaxub
ret
clc
imul
adc
sub
in
xor
mov
aas
xlat
and
outsl
add
int3
lea
or
test
mov
scas
int3
dec
xchg
jle
jb
add
icebp
push
push
loopne
push
adc
stos
int3
arpl
cmpsl
stos
lret
mov
repnz
sub
das
inc
mov
push
push
in
mov
xchg
rcl
sbb
jp
jb
stos
mov
lods
jp
lods
jecxz
jmp
mov
fcoms
movsb
push
cmpsb
das
sti
cwtl
push
mov
loope
cltd
mov
pop
lret
ret
push
pop
push
mov
lods
or
cmc
and
mov
cmp
fs
lahf
lea
inc
out
push
shll
push
addb
or
or
cmpsb
fldl
adc
adcb
lea
and
jae
jns
addb
fstpt
mov
test
push
enter
outsb
lcall
data16
scas
int
test
xor
fstpl
or
adc
xor
rol
dec
pop
das
xchg
outsl
int3
mov
push
xchg
data16
nop
je
push
push
adc
call
rol
mov
call
fadds
dec
inc
je
enter
shl
ret
and
lahf
movsb
lods
daa
and
jbe
imul
dec
push
adc
dec
cwtl
sbb
dec
jge
ds
and
add
mov
dec
mov
insb
and
mov
pop
sub
shl
popf
lock
imul
stos
sbb
arpl
jb
adcb
lock
ds
mov
test
ret
hlt
xchg
jecxz
test
mov
in
adc
test
sahf
loopne
add
mov
cmp
das
int
jnp
xchg
lahf
and
mov
testb
stos
int
cs
mov
bound
mov
imul
js
push
stos
dec
cmp
sub
xor
subb
xchg
mov
arpl
cwtl
or
pop
mov
lret
sbb
fsubrs
sub
cli
inc
push
sub
mov
in
in
pop
jg
jnp
cli
imul
fcoms
xlat
xchg
mov
add
lret
js
pushf
sub
icebp
lock
leave
jae
jns
stos
cmp
sub
add
mov
adc
xor
popf
sub
push
scas
fnstsw
andb
repnz
mov
push
lods
push
mov
pop
sahf
cld
fwait
push
xor
and
sub
and
inc
inc
mov
lods
lods
scas
jmp
adc
xor
inc
lods
in
add
dec
jns
aas
pop
adcb
mov
mov
and
popl
dec
pop
repnz
jbe
pop
cmp
pop
gs
fistpll
cmp
scas
cmc
mov
sbb
in
pop
dec
pop
mov
mov
pop
push
xor
mov
inc
mov
ja
loop
inc
mov
imul
mov
mov
mov
pop
gs
jmp
scas
sbb
into
ja
lret
jecxz
jmp
mov
addr16
xor
jle
repnz
bound
stos
xchg
mov
mov
in
xchg
add
sahf
sub
daa
xlat
mov
out
dec
lock
adc
push
stos
test
int3
inc
shlb
icebp
mov
arpl
jnp
jo
mov
push
nop
dec
mov
push
aaa
loop
mov
dec
pop
popl
add
cli
adcl
xor
push
jecxz
std
mov
popa
mov
pop
sbb
mov
sbb
mov
push
jae
stos
xchg
scas
test
stos
mov
test
cmp
xor
gs
xchg
mov
stos
xchg
cwtl
mov
inc
jb
mov
stos
xchg
mov
int3
jbe
lods
out
pop
je
pop
sub
mov
push
push
insl
in
mov
test
jne
mov
add
ja
or
xor
and
test
imul
inc
jl
lods
lods
lret
int3
stos
cwtl
jo
push
lret
fsubrl
outsl
or
xchg
addl
lods
mov
lcall
leave
test
cmp
adc
dec
dec
mov
xchg
lods
lret
cld
es
cs
cmp
cmp
arpl
and
inc
movsl
cld
adc
jle
push
or
pushf
xor
lods
or
test
inc
cmc
xorl
sub
addb
out
push
and
xor
add
int
and
sahf
mov
inc
jae
or
cmp
jg
imul
cltd
xchg
jno
xor
int3
adc
imul
fisttpll
enter
aas
rorb
int3
mov
inc
sub
xor
xor
pop
int3
dec
adc
imul
sub
pushf
repnz
fwait
sbb
insb
sar
jae
jnp
in
js
sub
stos
dec
fcomp
cwtl
mov
mov
pop
sub
mov
insb
inc
and
lahf
adc
mov
and
adc
imul
imul
mov
mov
pop
stos
in
setae
test
dec
jl
ja
movsb
xchg
mov
movsb
fs
jb
push
and
sbbb
dec
inc
xchg
gs
xchg
mov
jecxz
insb
sub
mov
test
jb
pop
sbb
sub
js
jo
sub
jne
sbb
loope
lret
dec
les
sbb
lods
pop
fucomip
es
test
dec
adc
stos
sbb
test
xor
cltd
cld
push
in
mov
fistpl
mov
push
out
xor
push
sub
jle
mov
jae
add
lods
xchg
in
xor
mov
enter
push
xor
in
enter
jle
dec
sahf
pop
es
iret
xchg
mov
jl
loope
xor
sbb
adc
jbe
arpl
cltd
repz
gs
jns
mov
xchg
push
mov
dec
jo
pop
mov
imul
adcb
popa
push
or
mov
and
nop
repz
sti
xor
int3
jl
jb
pop
addr16
xorl
jnp
js
adc
add
cs
outsb
daa
into
or
bound
xchg
adc
and
jb
xchg
mov
lea
int3
cld
adc
xchg
jp
sahf
imul
jo
pop
cmp
mov
repz
ljmp
out
cmp
xor
pop
mov
mov
cmp
int3
mov
add
enter
push
test
icebp
and
mov
divb
loop
and
or
mov
stos
xor
inc
lds
jae
push
lret
jl
out
test
icebp
insl
les
rclb
lds
loope
add
stos
cwtl
insb
xorb
int3
dec
push
sbb
mov
and
jecxz
jmpw
inc
add
xchg
call
jg
pop
imull
xchg
fs
jno
pushf
mov
mov
push
movsb
mov
stos
inc
cmp
imul
arpl
cmp
mov
movb
dec
stc
rcl
into
jo
or
mov
pop
icebp
mov
leave
popa
sub
divl
sbb
and
push
and
dec
shll
add
sub
inc
test
sahf
adc
jnp
push
mov
jp
push
scas
cmc
imul
mov
mov
cs
jl
es
ss
js
mov
mov
xchg
es
jl
js
xchg
sti
mov
jb
fwait
dec
lds
xor
sbb
pop
cmp
dec
mov
ficompl
sub
mull
or
cwtl
xlat
xchg
leave
movsb
hlt
add
pop
fwait
push
lock
cltd
outsb
add
test
dec
push
outsl
push
enter
push
pop
sub
dec
bound
sub
pushf
mov
add
cwtl
dec
sbb
nop
fmul
jecxz
fidivrl
mov
pusha
not
movsb
or
add
and
or
and
jnp
jge
adc
add
push
sub
test
in
subl
mov
mov
sti
cmpsb
dec
mov
inc
pop
or
test
icebp
pop
mov
push
mov
shl
mov
leave
nop
inc
dec
data16
jns
repz
jl
insb
nop
push
add
pop
jmp
loopne
insl
dec
fs
adc
mov
out
or
adc
push
inc
pop
mov
cmp
addr16
mov
cmpsb
out
lret
pop
call
call
lock
addr16
das
sbb
push
dec
push
je
mov
call
push
loopne
mov
popf
cld
mov
jns
xor
xchg
lea
scas
cld
push
ljmp
cmp
dec
flds
ret
out
cmpsl
cmp
js
pushf
mov
pop
cmp
test
lcall
int3
dec
ss
sbb
leave
push
pop
cltd
dec
inc
mov
daa
adc
sbb
xor
sub
mov
pop
nopl
add
sbb
out
divl
add
js
cmpsw
add
cmp
lds
xchg
mov
cmp
int3
xchg
xor
xchg
addr16
mov
sbb
gs
xchg
out
das
ds
sub
mov
pop
xchg
dec
mov
arpl
cltd
lret
arpl
int3
out
ret
movsl
imul
jns
mov
cwtl
pusha
mov
sbb
sub
je
xor
cmp
jl
mov
xor
test
sbb
outsb
pushf
and
pop
shlb
mov
movsl
addb
mov
inc
and
outsl
sub
sub
xchg
sub
inc
mov
adc
or
jns
cmp
xor
mov
lret
jo
mov
sub
in
and
xchg
or
sub
add
mov
mov
and
adc
mov
int3
cmp
push
insb
mov
fidivl
loope
pop
push
pop
icebp
faddp
push
xchg
add
and
push
enter
xor
inc
and
jb
enter
add
jge
push
or
movsl
push
sub
dec
pop
outsl
int3
jecxz
and
pop
push
mov
aaa
repnz
xchg
xchg
or
loopne
or
gs
icebp
jnp
push
xchg
outsb
xorl
cwtl
inc
pusha
push
outsb
pusha
and
insl
in
xchg
pop
loop
sar
fmull
xchg
insb
daa
fcoml
or
ja
pop
xchg
sbb
sbb
or
mov
std
js
pop
xchg
cmp
rcll
mov
or
cli
inc
dec
lcall
sbb
arpl
js
in
xor
xchg
repz
mov
sub
movsl
int3
cwtl
insl
cmc
mov
jge
cwtl
rcrl
mov
sbb
daa
insb
mov
bound
push
mov
fwait
push
pop
ljmp
out
mov
int3
ret
xchg
sub
insb
arpl
lock
pushf
stos
sub
pushf
je
out
push
lea
dec
outsb
aas
mov
ss
mov
insl
pop
add
xor
out
nop
sub
bound
pop
add
pop
mov
fcompl
test
into
fldt
clc
mov
and
pushf
lret
dec
rorl
rcr
lods
btc
clc
cmp
cmp
fiaddl
push
pop
jno
lock
or
cs
sbb
sbb
nop
pop
mov
sub
inc
sub
inc
jae
int3
add
pushf
stos
add
sub
xchg
mov
pop
scas
stos
movsb
push
testl
dec
pop
stc
sub
jge
pop
jnp
call
cmpsb
xchg
pop
xor
sbb
jo
mov
sbbb
insb
cmp
mov
sbb
mov
xchg
repnz
dec
and
outsl
clc
mov
jno
mov
int3
sub
lods
pop
push
fwait
divb
call
cmp
lock
jnp
mov
cwtl
mov
int3
jg
lods
dec
shll
lret
iret
icebp
nop
pop
je
js
pop
add
scas
arpl
jae
jge
mov
ret
movsb
or
cld
inc
shlb
js
scas
flds
mov
pop
dec
aam
mov
push
mov
pop
shrb
fwait
mov
pop
lock
jno
setge
jno
mov
or
pusha
movsb
stos
nop
leave
cmpsl
mov
mov
xchg
daa
adc
push
pop
mov
popf
js
mov
jo
fwait
mov
arpl
insl
mov
dec
imul
dec
sbb
popa
or
imul
adcl
lea
push
inc
inc
jl
xchg
and
bound
call
pop
imul
addr16
xor
cmp
rclb
jne
daa
outsl
xchg
jne
sbb
rorl
rcr
pop
arpl
lds
aas
repnz
mov
stos
int3
rcrb
xchg
or
test
mov
add
int
mov
inc
xor
dec
push
and
sbb
fistpl
xor
test
mov
pop
adcb
rol
jns
or
jo
jl
imull
mov
lods
mov
inc
stos
dec
shrb
test
jl
addb
mov
or
dec
ss
sbb
in
push
sub
fdivrs
sub
inc
fwait
test
cltd
add
nop
mov
or
sbb
xchg
imul
push
adcl
stos
mov
call
cmp
div
mov
mov
out
mov
test
lds
movsl
test
or
clc
jo
popa
pop
mov
mov
lcall
lret
push
mov
into
adc
and
je
sub
in
or
orb
mov
setbe
add
scas
cmpsl
les
mov
int3
jbe
lea
push
js
daa
adc
subl
inc
mull
std
push
mov
jmp
and
inc
mov
lods
mov
xchg
xor
outsb
push
xchg
inc
popa
sti
test
add
repnz
out
fnstenv
lods
fs
dec
xchg
jmp
cmp
cmp
mul
adc
test
add
jae
pop
loope
sbb
ret
sub
mov
lods
jo
add
mov
xchg
pusha
push
hlt
mov
les
add
pop
add
pop
clc
xor
nop
pop
aad
jg
sub
mov
sahf
insb
lods
je
insb
nop
js
and
mov
jno
push
pop
scas
lods
imulb
mov
test
in
mov
mov
fwait
or
fwait
mov
cmpsw
adc
sub
mov
inc
sarl
aas
cmp
sbb
mov
mov
pop
cwtl
out
dec
jl
imul
jno
mov
nop
cmpsb
pusha
push
mov
fs
xchg
andb
add
aaa
scas
mov
inc
outsl
lret
popf
push
adc
in
cmp
ljmp
sub
lcall
mov
mov
loopne
scas
scas
inc
movsl
stos
jns
aas
lgs
scas
stos
xchg
push
popa
pop
je
imul
inc
div
and
ja
nop
adc
mov
push
jecxz
xchg
inc
jns
mov
sub
les
pop
idiv
pop
and
inc
std
dec
cwtl
cmp
sbb
mov
shlb
and
sbb
aas
cmpb
xor
mov
or
jmp
lock
jns
movsl
shl
pushf
leave
and
xor
in
mov
adc
daa
mov
cmp
pop
jl
dec
pop
rcll
adc
mov
inc
pop
test
or
lret
adc
shlb
int3
dec
stos
pop
xor
mov
sbbl
ret
and
mov
sbb
daa
push
leave
mov
dec
scas
or
lret
stos
and
movsl
sub
movsb
test
mov
pusha
fdivp
dec
push
pusha
bound
sub
shrb
js
sbb
ret
test
cmp
sub
dec
push
dec
mov
jecxz
mov
repnz
xchg
mov
pop
movsb
repz
imul
ja
movsl
inc
sbb
pusha
ret
popa
jo
je
leave
pop
dec
mov
outsl
clc
lahf
add
scas
dec
int3
jp
movsb
fcomps
jae
int3
inc
and
mov
and
and
xchg
dec
scas
stos
mov
jmp
jle
adcb
popa
mov
xchg
movsl
es
push
jmp
js
and
jge
outsb
movsb
push
in
idiv
or
cmpsb
lea
and
in
nop
scas
ret
mov
scas
int3
adc
outsl
mov
jl
int3
outsb
and
lods
int3
cmp
pop
or
mov
clc
repnz
jo
jb
mov
inc
inc
adc
mov
jp
mov
lock
xchg
fsubs
jae
imul
adc
sbb
mov
sti
notb
je
pop
pop
cld
test
sub
lods
pop
pop
mov
loope
sahf
les
xchg
inc
or
roll
bound
jl
mov
mov
fs
in
loop
jg
lcall
inc
jle
cmpsl
push
std
dec
push
jl
pusha
int
sbbl
outsb
push
mov
pop
inc
test
sub
inc
movsb
sahf
mov
mov
add
out
fistps
fnstsw
popl
lahf
pusha
mov
jno
xor
lahf
or
dec
add
inc
sub
lock
sbb
cmp
cmp
jb
or
mov
cld
sub
xchg
mov
loop
mov
mov
add
cmc
enter
das
sub
mov
movsb
test
movsb
sar
xchg
pop
cmp
cmc
out
leave
push
pop
push
cmp
sarb
mov
fmuls
inc
int3
test
cmpsb
and
mov
pop
leave
test
sbbb
in
dec
test
scas
insb
jbe
jno
leave
test
add
mov
popf
sbb
ljmp
dec
loope
scas
xor
ret
pop
pop
test
out
enter
push
jmp
jns
outsl
scas
mov
test
inc
mov
into
mov
dec
in
mov
movsb
xchg
add
gs
or
mov
popw
and
sbb
nop
cmp
jg
mov
mov
ret
add
test
jb
cmp
notb
in
jl
push
loopne
xchg
arpl
push
rcrb
pop
faddl
jno
jo
data16
mov
xor
mov
and
xchg
or
push
stos
and
ret
hlt
mov
and
push
repz
mov
xchg
xor
push
jb
rol
fs
jo
scas
sub
insb
loopne
sub
andl
imul
cmpl
jb
pop
xchg
scas
pop
andl
dec
jo
sub
xlat
insl
xchg
and
cld
mov
int
ror
or
sub
stos
fdivrp
add
test
pop
pop
dec
cmp
popa
outsl
jnp
add
jl
push
xchg
sub
or
test
jno
xchg
test
pop
pop
sti
mov
stc
pop
dec
fidivl
mov
or
dec
sub
pop
ds
xor
xchg
sub
add
xchg
mov
dec
test
dec
pop
and
aam
dec
or
daa
fldl
inc
mov
xchg
cmp
inc
pop
mov
inc
and
fs
cld
xchg
mov
jne
icebp
sbb
stos
push
fisubrl
in
rorl
lods
cmp
stos
adc
sub
adc
sbb
xchg
sub
lods
gs
ret
test
pop
jnp
mov
and
adc
push
jmp
push
inc
push
pop
out
mov
adc
mov
push
scas
xor
daa
cmp
mov
jge
mov
ds
inc
xor
sbb
push
or
push
mov
bound
jo
dec
adc
mov
outsb
or
xlat
and
sbb
mov
xchg
pop
mov
add
xchg
loopne
pop
pop
cmpsb
lock
aaa
mov
jnp
loope
pop
test
rcrb
xchg
cwtl
xchg
dec
test
sarb
or
test
mov
mov
cwtl
sub
insl
fldl2e
adc
fcoml
and
push
clc
pushf
pop
stos
in
push
popf
int3
xchg
pop
jl
test
data16
xor
repnz
jg
and
lret
xchg
ss
into
jg
cmc
add
jmp
push
jae
xchg
push
dec
xchg
push
pop
mov
js
fdivr
es
dec
mov
jmp
enter
in
leave
arpl
sti
dec
stos
mov
outsb
push
xchg
mov
test
lods
mov
mov
xor
jae
or
out
andl
cmc
aam
mov
or
cs
xchg
jo
gs
in
std
inc
jae
inc
dec
sti
mov
sahf
push
push
pop
or
rcrb
pop
bound
mov
xor
and
gs
je
stc
repnz
xor
movsb
insl
addl
lods
es
xor
outsb
and
outsl
test
push
stos
jb
lock
dec
push
dec
nop
pop
arpl
ret
pusha
cmpsl
subb
repz
sbb
pop
sbbb
call
push
mov
pop
push
out
and
in
jb
mov
mov
ss
das
mov
fimuls
idivb
out
mov
dec
xor
popf
cld
xor
repz
fs
pusha
inc
pop
push
mov
lret
xor
and
lods
push
scas
pop
adc
pushf
cmp
bound
popf
scas
stos
test
cmp
push
jae
mov
pop
lock
test
icebp
pop
fistl
mov
in
aaa
sub
dec
jge
arpl
mov
pusha
int3
push
fsubrl
push
lret
dec
es
push
insb
pop
daa
ss
pop
xchg
ljmp
scas
mov
jmp
dec
nop
repnz
jmp
sub
xor
loop
pop
mov
add
mov
dec
fcoml
mov
mov
push
push
push
out
movsb
xchg
push
and
and
mov
cld
and
push
call
scas
cli
jg
adc
add
xchg
sahf
or
dec
xchg
icebp
jno
or
pop
ret
fs
cmp
clc
push
sub
mov
pop
pusha
movsb
adc
stos
pop
and
cmp
les
push
cwtl
scas
int3
push
fisubs
aam
mov
in
mov
lret
movsb
cmp
jmp
das
in
pop
cmc
fsubl
test
adc
adc
cmpsl
mov
repnz
mov
jnp
pop
sub
aam
or
mov
mov
push
push
clc
mov
fidivl
pop
or
inc
pop
xchg
mov
gs
int3
imul
mov
ret
sub
jo
cmp
push
insl
mov
mov
cmc
out
jo
push
das
dec
dec
test
sub
inc
xlat
adc
xchg
cwtl
out
sarl
mov
push
lods
jg
insl
pushl
add
mov
outsb
mov
les
push
xchg
loope
aam
push
or
jmp
int3
xchg
push
mov
outsb
test
call
pop
ret
mov
mov
flds
sub
scas
sbb
sbb
outsl
sub
in
xor
es
and
lret
jne
xlat
pop
outsl
xchg
in
lods
scas
arpl
cwtl
jnp
push
mov
data16
sub
mov
mov
rol
sbb
mov
jae
mov
mov
xor
daa
push
push
fmull
mov
int3
dec
mov
out
js
mov
mov
jecxz
push
and
and
mov
sub
push
xchg
push
ljmp
jns
lods
daa
dec
mov
push
int3
inc
add
jecxz
jae
call
mov
hlt
pusha
xchg
pop
repnz
fsub
push
int3
push
cmp
push
mov
sub
mov
mov
push
sbb
push
sbb
mov
mov
pusha
jno
rolb
xchg
xchg
jmp
lods
mov
movsl
xor
inc
movsb
aaa
cmp
push
loopne
arpl
test
mov
pusha
jne
cmp
mov
adc
mov
ret
lret
push
mov
cmpsb
hlt
stos
stos
jnp
pusha
inc
jnp
sub
sub
in
jns
sbb
negb
mov
scas
sbb
fdivp
inc
insl
lret
fs
mul
ljmp
cwtl
fdivl
mov
pop
dec
mov
fs
and
insb
int3
jge
mov
daa
sbbb
sbb
adc
mov
or
jns
xor
hlt
inc
mov
pusha
jb
adc
mov
xchg
add
jle
xchg
and
outsb
jo
xchg
sub
insl
pusha
cmpb
imul
repnz
out
xor
inc
mov
pop
imul
iret
and
js
test
loope
incl
sub
inc
outsb
test
and
cmp
scas
movsl
dec
mov
int3
inc
jo
subl
add
xor
add
test
mov
mov
xor
test
popf
push
or
jl
jb
insl
jp
icebp
cmp
imul
orl
or
mov
jae
add
and
sbb
inc
rclb
das
rcrb
and
mov
das
mov
out
and
ror
in
lods
xchg
push
and
insb
xchg
and
fisttpll
and
push
jns
sbb
subl
and
je
and
dec
scas
sub
push
sahf
scas
mov
lds
insb
sub
mov
test
out
ret
mov
mov
mov
push
ds
adc
setg
adc
sub
mov
cs
xchg
adc
mov
jb
push
test
stc
jns
pushf
js
push
adc
idivb
pop
ja
pop
mov
dec
movsb
sbb
clc
arpl
lods
cld
inc
ficoml
add
jge
sub
inc
sbb
xchg
mov
into
cmpsl
decb
dec
push
push
and
ret
clc
inc
out
add
cli
lcall
mov
xor
jne
jns
in
pushf
cld
sbb
shrb
stos
popf
je
pop
push
mov
push
or
shll
xor
daa
addb
xchg
test
imul
lods
sbb
cmp
xchg
pop
int3
icebp
je
fstps
add
test
xchg
out
imul
mov
aas
scas
sub
mov
cmpsb
cwtl
popa
fs
pop
test
sub
repz
pop
stc
ret
in
add
adc
pusha
dec
cwtl
les
xchg
aad
push
outsl
js
aam
data16
jmp
cmp
les
in
inc
mov
es
inc
jb
enter
xchg
xor
mov
test
enter
mov
mov
jp
mov
sub
pop
pop
xchg
add
in
and
dec
mov
sub
pop
pop
cmpsl
test
push
imulb
scas
cmp
in
and
icebp
mov
inc
or
sub
inc
cmpsb
xchg
add
cmc
nop
mov
mov
jo
sbb
stos
nop
xchg
aas
arpl
bound
pushf
int3
and
jmp
push
lcall
xchg
idivb
dec
adc
std
mov
imul
std
xchg
mov
xor
div
movb
fs
dec
sub
cmpsb
pop
ljmp
sbb
xlat
cmpsb
adc
mov
cmp
sbb
mov
out
mov
sub
push
mov
addr16
jae
dec
jmp
mov
aas
shlb
adc
pop
xor
icebp
sub
dec
sub
pop
rolb
mov
aam
pop
sbb
add
shrb
lds
jecxz
pop
arpl
jbe
jbe
xor
fistpl
xchg
add
bound
stos
push
mov
ljmp
imul
pop
and
mov
fnstcw
adc
cmpsl
imul
xchg
das
or
or
inc
push
mov
or
xor
pushf
xchg
pusha
mov
outsb
lahf
cwtl
popa
xchg
data16
pop
and
dec
sbb
lret
stc
bound
aaa
xor
cltd
xor
int3
pusha
stos
jo
adc
xlat
xchg
jge
xor
das
pop
cmpsb
add
fs
fsubs
jmp
ljmp
movsb
rcr
test
test
jecxz
popf
dec
bound
inc
inc
dec
mov
or
cmc
arpl
push
insb
mov
and
push
xchg
mov
mov
bound
and
aam
add
xor
sarb
xchg
pop
fs
inc
jecxz
xchg
mov
pop
data16
and
pop
xchg
and
in
xchg
mov
rorb
mov
sub
dec
mov
dec
loope
mov
ror
mov
xchg
inc
push
xor
popf
mov
jl
daa
mov
adc
sbb
js
xor
mov
popf
xchg
jo
pop
adc
cmpsl
dec
das
adc
loopne
test
mov
mov
shlb
jo
xchg
fildll
mov
xlat
mov
into
sbb
imul
gs
mov
dec
mov
stos
push
sahf
int3
test
sub
lods
mov
or
imull
pop
sahf
fidivrs
inc
push
push
cmp
fs
mov
mov
insb
fs
add
bnd
jno
es
loop
and
outsb
imul
sbb
daa
xchg
pusha
call
pop
sbb
jmp
mov
jns
insb
xor
ss
cmp
lret
cmp
imul
repnz
les
out
scas
les
mov
pop
test
dec
mov
xor
frstor
mov
insl
jns
mov
dec
dec
icebp
and
sahf
leave
cltd
mov
cli
pop
sub
push
imul
cmp
pushf
dec
sbb
jo
sub
jae
int3
inc
add
xor
je
cmp
jp
xchg
lods
fldl
mov
mov
test
aas
stos
jg
add
and
rolb
mov
int3
pop
push
sub
sub
data16
xchg
ficoms
push
adc
mov
mulb
pop
mov
pop
ljmp
or
mov
pushf
jmp
inc
aam
mov
cwtl
and
nop
jo
adc
inc
or
xchg
divl
fnstenv
leave
pop
lret
lods
insb
lds
pop
sub
pop
lods
and
fadd
lds
sub
shlb
sarb
xchg
div
cwtl
cmp
dec
bound
dec
aas
cwtl
xchg
shlb
mov
loop
push
loope
push
int
dec
cmpsb
imul
loopne
int
pop
je
les
pop
mov
or
dec
dec
subb
mov
in
inc
fsubr
xchg
mov
xor
mov
cwtl
das
lock
jbe
xchg
inc
test
lcall
mov
repz
aaa
popf
xor
mov
dec
mov
arpl
pop
popa
in
xor
sub
int3
cld
lods
scas
insb
mov
pop
das
xor
cli
stos
out
arpl
icebp
shlb
cmp
mov
inc
and
loop
xorb
sbb
test
inc
and
loopne
inc
xchg
fmull
sti
pusha
dec
push
test
dec
dec
shl
push
scas
mov
jo
in
cmp
mov
test
lcall
scas
push
int3
in
pop
aas
mov
push
xor
add
inc
pop
cmp
repz
cmp
sub
insb
imul
aam
xchg
mov
inc
repz
or
call
pop
popf
sti
adc
rolw
lea
push
inc
jecxz
add
dec
rcr
scas
cmp
mov
mov
lret
jmp
pusha
mov
inc
mov
jb
hlt
ret
shl
testb
add
pushf
xchg
insb
xchg
insl
pusha
adc
pop
pop
fs
scas
xor
xchg
dec
adc
push
movsb
int3
mov
outsl
add
pop
int3
int
jp
shll
xchg
lock
push
push
or
rol
ljmp
mulb
xor
stos
mov
push
mov
cli
and
mov
add
sahf
je
repnz
push
cwtl
fs
addl
rclb
stos
jo
icebp
sub
mov
lods
aam
pushf
stos
mov
inc
inc
dec
pop
cli
sbb
ljmp
xorb
cld
sub
push
dec
mov
testb
xchg
sub
bound
pop
pop
and
xchg
mov
push
adc
pusha
jo
insb
bound
adc
xor
pop
mov
fdivs
into
inc
lods
mov
mov
fsubl
sar
xlat
mov
out
pop
or
cld
movsb
xchg
sbb
inc
add
mov
xchg
cmp
in
loopne
or
int3
arpl
push
mov
icebp
fs
mov
ret
xor
xchg
mov
lret
cmp
pop
jmp
subb
adc
fisubs
xor
pusha
or
scas
test
mov
mov
inc
xor
inc
mov
inc
shrb
ror
and
mov
bound
outsl
pushf
and
nop
mov
popa
enter
adc
movsl
sub
in
clc
fs
and
data16
addr16
hlt
add
int3
push
outsb
rcr
outsb
xlat
mov
imul
dec
xor
ret
shrb
dec
aad
outsb
mov
xchg
inc
jnp
sub
and
xchg
xchg
nop
add
out
push
or
xor
push
cwtl
xchg
mov
inc
jl
in
sahf
mov
fs
sbb
sub
xchg
inc
das
inc
lock
mov
arpl
xchg
fs
mov
test
test
sbb
fbld
repz
js
dec
jnp
or
pop
insb
bound
mov
and
lods
sub
out
ja
jns
mov
lock
scas
lret
mov
cmp
inc
mov
xor
insl
fidivrs
mov
xchg
mov
adc
insb
in
test
aas
cltd
mov
rcrl
pushf
lret
imul
rclb
pop
arpl
gs
or
xchg
jno
enter
ljmp
mov
movsl
sub
xchg
xchg
dec
xlat
jne
xchg
xor
jecxz
sub
sub
xchg
xchg
pushf
pusha
into
stos
lcall
jmp
orb
adc
dec
in
mov
jecxz,pn
lock
adc
lds
outsl
outsl
push
je
dec
mov
mov
leave
jge
adc
lods
les
int3
xor
negl
mov
inc
xor
out
xchg
mov
out
push
push
pop
imul
lods
les
adc
ret
mov
je
push
and
test
nop
pop
sub
ds
and
clc
sub
mov
fdivrs
lcall
dec
out
loope
int3
add
cmp
dec
shlb
mov
sub
cmp
mov
jecxz
shlb
test
pop
sbbl
aas
mov
mov
pop
dec
test
imul
loop
sbb
out
lds
lret
mov
sahf
test
call
int3
mov
cmp
roll
pop
out
pop
dec
stos
les
lods
out
das
and
push
popf
mov
insb
inc
mov
stos
push
and
cmc
mov
sub
outsl
xor
call
pop
leave
movsb
xchg
lcall
fs
mov
jl
scas
bound
lock
daa
sbb
mov
cmp
dec
pop
loope
lods
inc
cs
out
movsb
mov
adc
xchg
xchg
jecxz
mov
fistl
jbe
or
loop
mov
mov
stos
shl
pop
out
das
mov
xchg
fnsetpm(287
xor
and
ficompl
orl
lods
push
dec
jg
jge
push
push
scas
int3
xchg
mov
jae
outsl
leave
test
jmp
ror
imul
xchg
jle
lcall
push
nop
cmpsb
xor
je
repnz
das
mov
shlb
lahf
pusha
insl
mov
int3
cld
push
push
lea
das
mov
dec
or
jl
mov
add
int3
sbb
in
movsb
aaa
inc
enter
out
lock
aas
or
shll
inc
sub
pop
adc
imul
inc
fistps
pushf
loope
fdivrl
ds
das
addr16
sub
sahf
lea
pop
pusha
iret
imul
mov
pop
lods
cmp
es
push
movsl
xchg
jmp
push
add
sbb
je
lods
pusha
int3
inc
dec
loopne
pushf
mov
aas
mov
insl
jecxz
adc
cmp
clc
lds
xchg
dec
xchg
dec
popa
xor
daa
adc
outsb
sarl
jo
test
in
dec
sahf
add
cwtl
in
inc
dec
inc
xor
push
jle
int3
cli
and
sub
cltd
outsl
mov
in
out
fdivrs
inc
hlt
lret
arpl
jp
cmp
dec
fstps
push
mov
iret
leave
mov
push
jno
mov
xor
mov
pusha
sub
sbb
jl
xchg
out
push
mov
xchg
in
mov
int3
xor
ficomps
shrl
aas
mov
sbb
into
push
cmp
jl
cmp
xor
leave
ss
cltd
pop
iret
add
les
xchg
xchg
pop
inc
loop
outsb
scas
movsb
add
cvttps2pi
lods
pop
shl
push
xchg
mov
mov
jge
cli
push
test
xchg
dec
cltd
mov
lret
and
jnp
aam
fs
mov
pop
imul
hlt
outsb
sbb
mov
xchg
xor
test
dec
push
cli
mov
test
xor
or
scas
test
out
and
push
adc
push
adc
cwtl
ss
fdiv
mov
bound
imul
sti
mov
mov
sub
fwait
inc
and
pop
and
enter
imull
mov
jp
inc
sbb
ret
aam
add
sbb
adc
fwait
ss
scas
cwtl
xchg
sub
jl
nop
and
mov
mov
adc
dec
loopne
and
dec
mov
outsb
imul
test
mov
repnz
fildl
pop
push
mov
xor
imulb
pusha
test
fisubrl
sahf
mov
subl
push
fcoml
cmp
push
fisubs
jl
xor
fldl
lahf
movsb
pushf
mov
mov
test
inc
xchg
and
fisttpl
xchg
mov
data16
pop
jno
rolb
jb,pt
shl
cmp
jo
std
xchg
aaa
inc
loope
cmpsl
roll
push
movsb
xchg
add
ljmp
loope
xor
popa
arpl
shrb
fs
sahf
in
pusha
add
sbb
cltd
mov
xchg
enter
nop
or
mov
jl
std
int3
add
dec
push
loopne
int3
jmp
jnp
jmp
test
test
insb
jl
cmpsb
cmp
popa
add
mov
adc
inc
addb
es
push
aas
adc
movsb
mov
cmp
push
mov
jmp
loopne
into
test
std
int
and
push
cmp
ljmp
dec
mov
xor
mov
mov
test
push
sbb
pushf
int3
sub
fidivs
jmp
and
incb
sbb
popa
int3
push
bound
adc
clc
dec
jno
push
mov
xchg
or
call
mov
jb
insb
rorb
insb
arpl
outsb
pop
mov
jg
cmc
lods
leave
mov
push
xor
test
lret
inc
mov
inc
xlat
cmp
push
les
push
sahf
adc
mov
mov
mov
icebp
mov
bound
or
out
push
sqrtps
push
mov
je
test
and
xor
shrb
lret
cld
insl
inc
pop
roll
dec
jge
int3
jb
out
hlt
notb
les
scas
test
pop
ret
pusha
cwtl
mov
pop
cwtl
xor
leave
cmpsl
nop
pop
cmc
ja
cwtl
js
xor
ss
nop
mov
cmpsb
push
lods
clc
inc
and
and
jnp
add
push
push
popf
nop
aam
jb
fs
sbb
jo
testl
outsl
shlb
lret
pop
adc
mov
dec
push
into
adc
mov
mov
mulb
int3
mov
adc
stc
stos
cmp
push
jbe
mov
jmp
jne
jo
in
out
fs
cmp
push
push
xchg
sbb
xor
rcr
fst
mov
sbb
and
cmp
into
out
std
xor
leave
cmpsl
and
pop
push
test
scas
in
sarl
imul
icebp
sbb
xchg
stos
add
mov
adc
cmpsb
inc
xchg
xor
hlt
sub
mov
mov
inc
mov
repnz
adc
jg
repnz
repnz
test
setl
data16
testb
mov
and
jo
pop
pop
push
cmp
push
push
mov
in
inc
loop
inc
imul
lcall
arpl
cmp
sub
insb
adc
in
fsubl
notl
push
imul
popa
mov
jae
mov
sub
mov
jecxz
rcll
jo
inc
sub
mov
lahf
das
xor
pop
cmp
shlb
sub
das
mov
loop
mov
int3
xor
pop
add
push
inc
jmp
in
inc
das
and
jnp
xor
mov
push
pop
jnp
ret
pusha
out
idivb
pop
daa
movsb
dec
add
stos
and
mov
pop
adc
mov
andl
icebp
ret
fwait
dec
adc
mov
jns
repnz
push
push
cmp
lock
xchg
mov
int3
mov
pop
fs
jmp
pop
testb
pop
mov
pop
and
test
cmp
inc
dec
das
jmp
and
and
adcb
and
xchg
push
mov
test
sbb
inc
lds
adcl
pushf
mov
das
and
scas
pop
int3
repz
sub
shlb
xor
sbb
jb
in
adc
sbb
xchg
hlt
test
mul
jp
clc
jae
cwtl
and
mov
push
sub
scas
sub
jmp
cli
xchg
mov
jb
sbb
mov
fbld
push
lock
mov
or
xchg
adcb
and
jno
sbb
add
mov
and
int3
adc
mul
jmp
in
mov
lods
mov
into
jl
dec
das
movsl
cwtl
scas
movq
cmp
iret
outsb
dec
repnz
fisubrl
gs
jmp
jb
mov
sbb
lock
xchg
dec
and
adc
lret
pop
sbb
daa
cmp
call
pop
popa
sbb
or
or
stc
mov
add
jne
and
int3
cs
sub
inc
ss
pop
inc
out
arpl
lock
jle
dec
cmp
fdivr
mov
xchg
bound
mov
xchg
loop
and
lret
ret
lds
cmp
std
mov
std
lods
inc
inc
test
insl
add
ljmp
hlt
insb
lret
pop
mov
pop
outsb
sub
shr
sbb
sub
jae
in
cmpsb
movsb
mov
mov
in
sbb
add
mov
lcall
and
mov
or
add
int3
mov
and
add
jle
jp
add
jmp
mov
bound
inc
repnz
inc
mov
add
mov
ficompl
mov
mov
mov
or
adc
inc
xor
sub
pop
pop
inc
adc
daa
and
movl
popf
rclb
das
pop
insl
movsb
jae
cs
cmp
sub
pop
xchg
push
jle
and
or
sub
add
out
loopne
add
jns
and
push
xchg
rorl
jb
mov
mov
xchg
push
inc
dec
adc
inc
pushf
shlb
xchg
mov
xchg
hlt
lods
dec
dec
pop
mov
jl
jnp
test
jb
pop
test
jae
call
movsl
xor
mov
outsb
shlb
fucompp
pop
cmc
push
les
into
out
insl
mov
addb
sbb
repnz
test
xlat
add
int3
aas
push
in
cmp
cmc
or
mov
shll
sbb
mov
dec
addr16
leave
xorb
outsb
out
pop
cmp
insl
les
pop
test
in
jmp
inc
lock
xor
or
jne
mov
cmp
fs
stos
sub
mov
mov
shll
add
jne
arpl
incb
add
pop
in
pop
mov
mov
or
xchg
cmpb
jbe
hlt
rcrb
push
xor
jns
or
jns
daa
std
mov
popa
jp
mov
and
sbb
jl
insl
out
lahf
jo
push
cld
orl
adc
sbb
adc
sub
ss
add
ficoml
inc
into
hlt
mov
sub
or
mov
iret
sub
std
repz
mov
xchg
arpl
push
mov
cltd
rcl
lahf
test
nop
xor
cmpsb
xchg
pusha
jbe
daa
and
mov
cmp
movsb
inc
lea
mov
push
icebp
cmp
fs
jb
adc
jmp
cmp
jg
fdivs
sbb
lods
cmpsb
and
in
adc
dec
bound
add
sti
mov
faddl
pop
mov
dec
and
push
js
jns
in
in
pop
mov
cwtl
mov
popa
lods
out
push
add
outsb
jns
sarl
jae
icebp
sub
lock
push
fs
ss
pop
pop
fldl
jnp
testb
mov
dec
and
sbb
ss
pushf
add
movsb
jno
aad
leave
mov
test
mov
ljmp
xchg
in
ljmp
aaa
fcomp
ds
lods
and
sbb
push
addl
arpl
jb
mov
xchg
out
movsb
aaa
mov
pop
fimuls
setge
adc
add
dec
mov
insb
add
add
nop
fistps
xchg
and
pop
and
add
mov
inc
scas
insl
jns
cmp
dec
jmp
sbb
clc
or
push
dec
gs
pop
jne
mov
arpl
sub
jns
aas
inc
or
pusha
outsl
or
xchg
std
xchg
mov
test
xchg
mov
inc
and
jl
pop
aaa
pushf
popf
shl
aas
shrb
cmpb
scas
xor
pusha
lahf
rcrl
cld
repz
insb
stos
push
or
fcmovb
mov
leave
jge
jns
aaa
sub
in
pop
pop
and
and
push
in
stos
cmp
push
shrl
xchg
int3
cs
mov
stc
xchg
jne
in
ljmp
add
and
mov
xchg
xchg
jmp
xchg
repnz
mov
ljmp
aad
mov
bound
fs
and
mov
enter
mov
pushf
jmp
sub
or
arpl
fs
and
ret
mov
repnz
mov
popa
stc
mov
cli
pop
insb
push
dec
sub
xchg
movsl
cmp
sub
call
outsl
mov
pop
orl
sub
xchg
push
mov
add
mov
sbb
xchg
adc
scas
insb
xchg
push
in
scas
push
pusha
movsl
lret
mov
or
pop
cli
call
bound
xchg
dec
jo
dec
xor
xchg
inc
sarb
xor
and
jb
xchg
sbb
sbb
in
or
or
cld
sub
lods
lock
in
xchg
call
out
mov
xchg
test
mov
loopne
jb
mov
lea
mov
ja
rclb
fs
scas
enter
xchg
shlb
mov
pop
inc
lock
popa
push
aas
mov
or
gs
pop
sbb
outsb
mov
mov
daa
push
insb
xor
sti
repnz
repnz
sub
aas
ss
sub
sub
mov
cld
cmp
loopne
js
xchg
cmp
loop
sti
popa
loop
inc
push
pop
and
and
sub
movsl
or
pop
inc
cwtl
jnp
push
xor
in
inc
mov
sbb
pop
jg
pop
je
and
mov
push
pushf
jo
mov
mov
jne
sahf
push
cltd
addr16
int3
push
pop
outsb
std
cli
xchg
cwtl
inc
ret
cmp
jge
movsb
and
add
cmp
jle
mov
js
int3
dec
pop
inc
xchg
mov
push
leave
inc
and
mov
mov
mov
and
xchg
and
mov
jo
pop
pop
sub
je
movsb
lods
mov
sahf
cld
adc
repz
lahf
mov
cmp
popa
dec
int3
into
adc
lods
js
push
filds
mov
mov
enter
js
inc
lods
int3
mov
fldenv
and
add
ret
jne
xor
std
outsb
inc
mul
xchg
jge
push
xlat
push
lcall
gs
mov
js
shrl
push
int3
pop
jns
inc
cwtl
sub
push
push
mov
scas
pop
mov
ud1
pushf
dec
pushf
in
and
xchg
int3
mov
inc
and
lods
fadd
and
enter
movsb
int3
xchg
adc
add
dec
pop
pop
push
stos
jge
scas
addr16
cmp
fmull
jmp
push
fstpt
pop
cmp
js
rorb
adc
mov
inc
lods
das
lds
cwtl
xchg
mov
sbb
xchg
push
pop
xchg
sbb
push
rcrl
cmp
push
sub
and
nop
inc
cltd
mov
daa
jmp
das
sub
sub
shll
lret
fidivrs
jb
jg
daa
or
mov
push
cmc
jge
pushf
sbb
punpckhdq
xchg
subb
push
mov
xor
dec
mov
setbe
in
push
lea
decb
mov
pop
imul
icebp
add
sahf
insl
cwtl
popa
push
adc
jbe
outsl
inc
mov
in
pop
mov
orl
mov
mov
mov
sub
repnz
clc
dec
pushf
addr16
ja
dec
push
push
les
and
xlat
lds
imul
cmp
jne
test
mov
int3
jl
mov
add
int3
cmp
sahf
sub
lret
pop
fs
or
sbb
mov
andl
pop
imul
inc
or
out
mov
jle
xlat
shlb
lcall
cltd
mov
push
mov
and
mov
mov
mov
xorb
jne
test
ds
xchg
jbe
mov
sahf
in
repz
pop
notb
shlb
insb
jge
jo
imul
mov
cli
mov
mov
xchg
cmpsb
add
mov
in
jp
dec
popl
push
ret
lea
lods
cmpsb
dec
pop
in
xor
fs
inc
mov
pop
and
mov
push
gs
arpl
mov
fdivs
mov
xchg
stc
outsb
add
cmp
hlt
xchg
int
insb
mov
jp
cwtl
aaa
scas
test
pop
int3
orl
xchg
clc
popa
sub
inc
xchg
pop
imul
out
ss
dec
mov
pop
adc
loope
aad
jle
cmpsb
addb
pop
xor
add
adc
sahf
mov
bnd
jl
int3
jge
lea
mov
xor
cltd
mov
mov
iret
add
aas
mov
fstpl
pop
adc
jle
int3
mov
add
xchg
cs
push
test
out
mov
out
in
inc
mov
lcall
inc
movsl
rcl
push
lods
test
adc
sahf
imul
add
stc
ja
fs
cmpb
xor
out
movsb
je
mov
and
loopne
repnz
mov
push
adc
out
mov
or
push
and
jl
arpl
mov
add
outsl
cld
out
pop
jecxz
clc
jmp
repz
es
mov
sbbb
push
mov
out
mov
fstl
mov
scas
aad
imul
mov
outsl
loop
jo
mov
lods
lods
int3
dec
mov
ficoms
xor
mov
jnp
pop
cmpsl
inc
mov
jne
mov
mov
mov
adc
icebp
test
fwait
pushf
inc
push
stos
stos
adc
mov
pushf
arpl
xchg
jo
es
andb
test
test
sbb
outsb
outsl
push
jo
ljmp
mov
fistpl
aas
add
lods
mov
push
mov
lret
int3
cli
lahf
cmp
dec
or
popf
xchg
repz
outsl
imul
sbb
add
push
push
mov
and
sub
push
stos
pop
pop
push
cli
xor
test
jae
jno
lea
sub
mov
mov
inc
push
add
bound
adc
jns
cmp
aam
pop
pop
xor
loopne
cmp
pop
movsb
in
cmc
mov
popf
daa
ja
movsl
and
dec
cltd
nop
xchg
lods
jl
lock
jmp
jo
nopl
cmc
jmp
sub
fiadds
fsubrl
mov
arpl
lahf
lret
enter
xchg
shlb
lods
in
mov
xchg
lods
lahf
test
mov
pushf
scas
cwtl
sub
mov
mov
adc
movsb
je
jo
insb
xchg
in
scas
push
mov
jo
adc
pop
or
mov
push
xor
xchg
dec
rolb
inc
sub
ds
xchg
cmp
lahf
sub
sub
push
sub
adc
push
sbb
xchg
jno
xchg
adc
adc
jo
cmpl
add
lods
outsb
out
xchg
fisubl
orb
mov
mov
scas
hlt
adc
lock
in
xor
xchg
in
loopne
fcompl
jo
xchg
int3
or
les
jb
xchg
mov
cmp
mov
mov
cwtl
jg
jb,pn
xchg
cwtl
movsb
xchg
sub
lock
xorb
jl
js
je
jo
insb
xchg
push
xor
xchg
pop
mov
movsl
fildll
jo
xchg
inc
mov
jno
xchg
cmp
push
sub
jb
xchg
sbb
sbb
lock
or
jno
mov
push
cld
popa
mov
pop
xor
js
lods
push
inc
sahf
popa
add
pop
push
jae
adc
and
xchg
je
movsl
das
daa
xchg
jae
push
not
xor
jecxz
sub
mov
in
ja
or
mov
loopne
cmp
jae
cltd
add
ja
out
frstor
cmpsb
mov
mov
sub
int3
arpl
sub
and
aas
arpl
aas
cli
and
notb
icebp
fiaddl
adcl
icebp
xchg
and
fidivl
push
mov
pop
push
adc
xor
dec
inc
jmp
out
push
or
ljmp
add
mov
and
test
aaa
test
outsl
fsubs
cmpsb
mov
pmaddwd
add
mov
enter
push
in
inc
jae
and
push
ret
adc
jmp
adc
add
shlb
mov
imul
movsb
test
repnz
push
sub
je
repz
in
cwtl
sti
adc
mov
or
xchg
daa
mulb
mov
inc
mov
gs
mov
mov
movsb
jp
lret
xchg
pop
mov
int3
andl
leave
mov
mov
fs
sub
dec
stos
test
insl
mov
mov
dec
mov
jb
and
mov
outsb
inc
xchg
andl
or
mov
ss
cmp
stos
repnz
mov
ss
xchg
pop
sub
mov
cmovs
mov
jle
jb
and
sub
rep
sti
movsb
mov
and
xor
jns
inc
ficomps
aaa
lahf
leave
jo
in
sub
cli
insl
mov
cld
dec
jb
jl
dec
adc
insl
and
lods
repz
test
imul
sbb
int3
mov
cmp
pop
inc
mov
mov
sbb
and
push
xchg
adc
xchg
mov
mov
and
stos
xchg
andb
sub
sub
inc
imul
call
dec
pop
loopne
fcmovne
addb
mov
insl
adc
mov
mov
int3
pusha
mov
test
pop
cmp
popa
into
imul
popa
mov
mov
cmp
jl
xchg
inc
into
daa
cmpsb
insl
pop
movsl
xchg
xchg
jnp
gs
outsb
test
and
fwait
mov
sub
je
sarb
test
outsb
or
test
inc
mov
les
mov
pushf
push
pop
stos
fs
int3
xchg
and
stos
adc
cmc
andl
in
movsb
xchg
fisubs
xchg
mov
stc
inc
sbb
aas
loop
test
mov
ffree
cmpl
icebp
std
jp
popf
add
movsb
mov
addr16
dec
shrd
pop
mov
xor
test
mov
pop
push
lcall
mov
imul
push
ds
fiadds
mov
fnstenv
movsb
notl
ss
add
int3
sub
scas
aam
mov
iret
add
and
fs
mov
dec
add
mov
cwtl
sub
les
push
insb
hlt
insl
inc
add
pushf
shrb
mov
add
jo
pop
test
push
in
sahf
popa
pop
rorb
insl
xchg
jge
lea
mov
cmpsb
enter
fwait
outsb
pusha
ret
mov
stos
pushf
sub
inc
push
icebp
stc
mov
scas
xor
jmp
mov
inc
dec
mov
pop
mov
jb
xchg
pop
mov
and
dec
xor
lods
jle
cwtl
xor
bound
bound
jae
popa
dec
inc
or
adc
adc
lahf
sbb
cmp
sbb
mov
loopne
imul
cmpsl
jns
dec
std
popa
lcall
dec
xchg
mov
adc
xchg
mov
pop
cmpsb
out
sub
lret
mov
dec
push
fdivl
arpl
jp
mov
jmp
mov
loopne
xor
pop
int3
and
pop
mov
mov
imul
inc
sub
push
adc
fucomp
mov
adc
or
xchg
xor
xchg
mov
xlat
jb
fstpt
inc
xchg
and
pop
sahf
mov
std
dec
pusha
sbb
sbb
cmp
xlat
mov
lds
adc
loope
popf
pop
cld
mov
scas
imul
test
lds
mov
and
fdiv
xor
xor
out
add
mov
into
push
xchg
and
lods
push
sbb
pop
push
je
mov
int3
mov
rcll
pop
push
leave
rolb
push
mov
and
mov
xchg
xchg
bound
sub
dec
dec
stos
mov
mov
pop
pop
bound
mov
ds
adc
pushl
pop
xchg
scas
icebp
stc
pop
and
imul
jo
insb
pushf
rcrb
je
pushf
test
lock
js
xor
push
jo
push
pop
fxch
push
sbb
lock
xchg
divb
sub
push
adc
and
mov
sub
mov
xchg
sub
movsb
mov
jp
aas
cwtl
xor
jbe
mov
pop
fimuls
je
jmp
aam
sbb
lods
insb
fcomi
pop
movsb
push
xor
jge
pop
lods
loop
adc
insl
push
sbb
js
out
mov
sbb
mov
mov
sbb
mov
movsb
data16
insb
mov
pop
xchg
xchg
mov
inc
mov
sub
fnstenv
pmaddwd
push
cltd
dec
pusha
adc
cld
cmp
or
dec
ds
push
cmp
lods
or
push
push
jg
pusha
hlt
cmp
jmp
cltd
jecxz
js
mov
fcomi
daa
dec
xchg
daa
inc
mov
adc
xchg
nop
insb
lret
and
js
dec
je
and
hlt
movsl
test
popa
fs
stos
int3
scas
repz
fdivrs
xorb
mov
fistl
push
mov
sbb
jbe
push
inc
test
mov
sbb
arpl
popf
mov
addl
push
cmp
push
push
cli
insb
repz
mov
jb
ja
xchg
and
cmp
pop
pushf
xor
fs
adc
ret
lea
jmp
mov
push
leave
sbb
mov
jb
int3
addr16
insb
push
fs
pop
mov
sbbb
adc
clc
test
rorl
jo
pop
xor
mov
dec
lock
fdivrp
std
pop
and
push
and
mov
gs
xor
jb
sub
push
sti
dec
jb
xchg
mov
jg
mov
mov
lea
sti
jle
xlat
lcall
je
cli
pop
xchg
cmp
adc
roll
in
mov
jb
icebp
add
icebp
push
dec
hlt
mov
lcall
mov
lods
dec
fcompl
mov
cwtl
hlt
aas
lods
cwtl
int3
scas
out
pop
add
scas
jp
fsubl
adc
hlt
lret
loop
xchg
stos
scas
mov
lods
fistps
cwtl
leave
mov
push
ss
ljmp
pop
sbb
push
push
dec
sbb
push
movsb
cltd
call
adc
arpl
mov
ss
jns
hlt
test
inc
mov
in
test
jbe
mov
xor
test
pop
icebp
xor
aaa
adc
pushf
mov
add
daa
test
insl
inc
inc
mov
mov
mov
push
add
movsb
sub
insb
fmull
movsb
pop
xor
cmpsb
push
scas
lods
sub
mov
cli
popa
jns
in
mov
mov
lret
shlb
mov
mov
cmp
jmp
xchg
sbb
adc
jno
loope
subb
mov
and
xchg
popa
mov
inc
lahf
jge
inc
and
pushf
jb
aad
cs
push
shrl
insb
mov
ljmp
ret
movsl
daa
jae
pop
rcll
cltd
mov
dec
adc
sub
mov
jge
or
into
xor
mov
lahf
xor
scas
fldt
sub
test
aad
push
lret
dec
mov
mov
mov
movsb
pop
popa
aam
cwtl
bound
out
mov
pop
outsl
dec
ss
leave
lods
xor
mov
cwtl
pop
mov
sahf
int3
mov
sub
dec
mov
inc
imul
in
jne
xchg
pushf
pushf
test
out
outsb
hlt
xorb
dec
out
stos
cwtl
out
xchg
xor
jmp
divb
pop
shrl
jnp
icebp
sbb
fcomps
aad
in
pushf
xchg
into
cmpsl
jo
mov
sbbl
xchg
ret
lods
xor
sbb
mov
sub
cmp
test
push
js
das
jb
sbbb
inc
aas
mov
aaa
test
test
mov
int3
cmp
jl
xor
es
fdivl
pusha
je
dec
sub
jg
jo
test
loopne
mov
adc
repnz
mov
mov
cmp
daa
frstpm(287
push
fs
imul
xlat
inc
sbb
sub
mov
xor
xchg
cmp
nop
ds
mov
push
imul
imul
lds
adc
js
pop
fcomi
movsb
cmp
xchg
cli
pop
jo
iret
mov
int3
or
aaa
sbb
jl
jbe
bound
and
pop
or
shll
out
icebp
mov
hlt
idivl
rclb
mov
add
mov
jg
das
mov
xchg
test
inc
movsb
xchg
js
int3
ljmp
ja
mov
pusha
pop
xor
movsl
sbb
push
lods
mov
xor
aaa
xchg
adc
inc
push
fdivrs
push
inc
push
add
mov
sub
xor
cmpl
mov
or
push
gs
jnp
out
mov
jb
ret
mov
fdivl
jb
push
mov
movb
fmul
xor
xchg
sub
mov
outsl
sub
add
push
mov
dec
mov
sbb
pop
movsl
xorb
xchg
mov
dec
sbb
subb
or
mov
aaa
xor
or
stos
scas
popf
in
mov
push
imulb
cwtl
ss
mov
mov
call
cmp
mov
inc
push
mov
xchg
xlat
cmc
xchg
and
add
fldl2e
insb
push
add
lods
and
imul
lret
add
and
stc
lcall
mov
mov
dec
or
sub
mov
add
jns
add
adc
push
push
mov
jmp
dec
jno
pop
shlb
aas
popf
xchg
outsl
cwtl
lea
jle
dec
or
test
daa
sbb
adc
arpl
xchg
sbb
jecxz
mov
xchg
sbb
mov
push
xchg
push
xchg
xchg
inc
fbstp
je
cli
xchg
insl
push
sub
test
imul
lahf
je
enter
cld
ficomps
sahf
pop
pop
ja
iret
mov
rcrb
and
xlat
addl
cld
xchg
ret
fisubrs
mov
xchg
mov
lret
lods
mov
gs
cmp
bound
sbb
pop
cwtl
adc
xor
addr16
in
stos
jb
lret
mov
movsl
es
test
fs
and
mov
movsb
gs
xlat
loop
clc
shlb
jne
or
in
xchg
jp
xor
ljmp
aaa
rclb
jbe
and
fmull
xor
loopne
xchg
lea
cwtl
cmc
push
lds
inc
cs
push
ja
jno
jb
pop
fimull
test
add
push
ss
cmp
pop
inc
pop
cwtl
jo
mov
loop
stos
leave
xlat
xorb
lcall
ds
xchg
add
lret
lcall
daa
sbb
aaa
add
push
mov
imul
push
out
mov
mov
adc
lds
mov
push
movsb
sbb
mov
mov
addb
mov
pop
pushf
insb
dec
jle
out
pop
nop
or
lea
cmp
pusha
mov
dec
sbbl
clc
push
jne
mov
movsb
jg
push
lods
push
xchg
lock
jl
or
sbb
jns
cmp
dec
sub
xchg
jmp
mov
insb
cmp
push
adc
xlat
mov
lret
and
sub
jl
gs
mov
pushf
clc
ret
lcall
push
test
leave
pop
out
imul
jns
addr16
std
sub
xor
fisubrl
cmp
mov
add
mov
int3
rcrb
mov
and
mov
mov
jne
xor
mov
test
les
stc
movsb
mov
sub
stos
mov
pop
loope
push
lahf
inc
mov
mov
lcall
ret
hlt
cmp
pop
das
out
test
xor
ds
add
int3
mov
loope
and
gs
jo
xor
jb
jns
xlat
lcall
mov
leave
mov
sub
jns
js
cmp
roll
push
jae
sub
xor
mov
mov
movsb
mov
fwait
pop
and
scas
pop
stos
jo
mov
sub
les
stos
insb
lods
xor
adc
outsl
out
je
mov
fmul
arpl
adc
daa
cmp
in
hlt
out
dec
mov
mov
mov
push
mov
push
cwtl
mov
mov
imul
add
sub
mov
dec
enter
adc
xor
or
sbb
inc
aaa
push
lret
inc
addr16
jo
testl
ss
mov
lret
pop
scas
inc
repnz
addr16
divb
push
bound
sub
xchg
cmp
xor
sti
jl
cld
jno
lock
push
jg
xchg
lods
sahf
pop
fcom
sub
js
dec
or
or
cmpsb
xchg
xor
pushf
ret
dec
ja
dec
inc
mov
popf
mov
lods
iret
in
mov
adc
or
xchg
mov
out
repnz
movsb
jne
sub
mov
es
add
mov
cmp
cltd
cmp
mov
mov
mov
mov
jmp
xchg
sahf
sub
push
mov
add
mov
gs
sub
mov
leave
ljmp
lock
subl
xchg
out
pop
lods
rorl
dec
movntps
je
pop
test
sbb
or
movsb
mov
xchg
sahf
gs
arpl
movsb
insb
aam
jnp
ret
mov
dec
or
mov
xchg
repnz
mov
mov
mov
xchg
bswap
nop
inc
xlat
or
data16
outsl
dec
aam
mov
push
dec
dec
loope
test
movsb
ret
in
mov
add
xchg
cmp
pop
fildl
in
inc
mov
insl
int3
in
rorb
lret
scas
ror
xchg
outsb
sub
loop
daa
imul
cmp
or
loope
data16
and
mov
neg
enter
xchg
cld
loopne
popf
push
mov
adcb
out
and
in
out
jno
hlt
pop
imul
xor
xorb
addr16
xorb
das
and
sbb
pop
into
pusha
push
scas
shll
sub
rol
xor
cwtl
xor
pop
jne
adc
push
jle
cmpsb
push
outsb
out
mov
fs
or
lods
testl
pop
xchg
push
mov
xchg
push
insb
and
call
jae
mov
mov
mov
aas
ret
in
movsb
pusha
mov
jo
xchg
bound
add
jo
imul
xchg
jb
jle
cmc
sub
stos
lret
out
scas
add
outsl
or
xor
icebp
jecxz
popa
xor
xchg
jno
mov
mov
jb
xchg
ss
fs
sti
mov
push
pop
enter
and
ret
xlat
mov
xor
sbb
movsb
sbb
jecxz
cwtl
outsb
arpl
xchg
ds
movsb
adc
mov
popa
xchg
jne
mov
out
inc
mov
xchg
xor
or
imul
inc
pop
xor
lods
cmc
dec
jae
xchg
fdivr
aam
pop
clc
gs
movsb
add
arpl
dec
daa
cs
repz
mov
sahf
es
sub
push
cmp
scas
stos
int3
cmp
xchg
push
sub
adcb
fisttps
insb
adc
out
mov
lea
lods
imul
jno
in
fcoml
imul
xor
movsb
int3
sarb
sub
lods
icebp
popf
in
cs
cmpsl
fcoml
addr16
test
in
mov
fs
subb
pop
in
insb
lock
pop
sub
in
inc
lock
js
sub
in
sbb
mov
xchg
iret
repnz
mov
outsb
cmpsb
lock
cli
stos
xor
mov
scas
pop
repz
mov
push
test
insb
mov
das
sub
inc
es
xchg
sahf
push
lods
pop
jb,pn
xchg
imul
fs
jbe
xor
insb
movsb
lcall
pop
jno
xor
mov
cs
sub
and
jno
mov
outsl
sbb
sub
xchg
scas
test
pop
add
xchg
int3
add
sub
call
push
loopne
xchg
jecxz
lea
scas
jecxz
push
xor
scas
xor
xor
xchg
ret
lods
ret
scas
movsb
xchg
ljmp
enter
rclb
sub
pusha
movsb
in
sub
popf
dec
and
scas
sbb
and
bound
insb
scas
pushf
push
cwtl
xor
call
mov
loopne
fnsave
sahf
mov
or
inc
pop
test
stos
scas
sahf
int3
test
lea
out
lods
push
call
sub
sbb
ds
shrl
push
add
pop
lods
daa
inc
inc
mov
pushf
rcrb
and
mov
inc
shrb
and
stc
cmp
mov
in
inc
shl
adc
popa
icebp
push
stos
lret
imul
icebp
pop
addr16
mov
xchg
mov
arpl
xchg
ficompl
push
outsl
mov
inc
and
cwtl
cmpsl
lret
inc
mov
loope
stos
xor
adc
inc
ret
xor
mov
pop
sub
int3
sub
ss
adc
test
int3
xchg
mov
test
stos
xchg
xchg
sub
aas
test
and
rorl
pop
scas
dec
add
push
scas
pop
popa
and
xorb
ljmp
cmp
imul
or
xchg
loope
jns
sbb
out
aas
dec
lret
xchg
sahf
popf
inc
into
fwait
push
xchg
mov
es
lahf
xchg
cli
and
rclb
adcb
test
mov
add
rclb
fdivrs
xchg
adc
add
and
pop
add
outsb
bound
movsb
mov
sbb
test
sahf
scas
fwait
xor
lahf
mov
fiaddl
lock
insb
xchg
lods
and
in
adc
inc
sbb
xchg
cwtl
scas
es
mov
dec
lock
in
mov
int3
mov
jp
lret
mov
push
xchg
lcall
mov
lods
lock
add
push
shrb
addr16
es
ja
mov
or
sar
je
fiadds
cld
inc
or
out
das
or
mov
pop
add
fs
pop
flds
shlb
sub
cmp
mov
ljmp
ret
in
adc
insl
test
mul
inc
jno
in
popa
pushf
daa
insl
loop
mov
xchg
loopne
leave
xor
mov
out
add
cld
jnp
cwtl
aas
test
push
push
add
loop
pop
dec
xchg
mov
add
lcall
xor
jae
xorl
rorb
sub
mov
in
mov
jno
mov
andl
xchg
inc
pop
adcl
or
xchg
jae
inc
out
dec
ja
fisttpll
ljmp
lret
dec
mov
frstor
adc
mov
adc
das
and
jnp
dec
test
jl
out
pop
lret
fstl
mov
jl
arpl
inc
pop
pop
jo
sub
sbbb
out
scas
arpl
fstpt
test
lods
mov
lret
dec
inc
outsl
mov
loope
int3
xor
insb
jmp
xchg
pop
ja
jns
mov
fcompl
int3
lret
sahf
or
jns
sbb
cli
int3
sub
inc
mov
dec
test
pop
stos
sub
xor
iret
loope
test
dec
ljmp
pop
stc
mov
lret
add
insl
mov
mov
test
je
lret
adc
mov
mov
pop
outsl
out
insb
jo
xor
test
push
mov
dec
adc
lret
push
imul
mov
mov
out
pop
subb
jnp
es
mov
pop
mov
mov
mov
push
jg
mov
je
stos
outsb
mov
mov
inc
cmp
xchg
test
stos
jns
inc
dec
pop
xchg
jmp
imul
sub
cmp
subb
dec
jmp
inc
cmpsl
mov
jmp
and
in
add
ret
lcall
fs
int3
jge
pop
and
push
jns
xor
jae
lret
rorb
add
mov
das
test
xorb
bound
stos
xchg
je
pop
inc
pop
dec
in
jl
scas
sub
nop
xchg
jl
xchg
pop
cmp
xchg
mov
xlat
aad
inc
popa
mov
faddl
popa
movsl
pop
and
jmp
jne
mov
push
jge
int
xor
pushf
pop
int3
xchg
sbb
out
lahf
jmp
rorb
inc
sub
mov
lods
and
daa
inc
fwait
sub
dec
xor
mov
xchg
xlat
lea
gs
popa
test
push
adc
xor
push
mov
mov
dec
jp
xor
shll
jecxz
jl
dec
and
cmpsl
jp
mov
imul
nop
sub
mov
repnz
cmp
xchg
lods
push
std
jg
push
sbb
cmp
sbb
mov
lods
outsl
rclb
lret
bound
xchg
mov
inc
mov
xchg
xchg
dec
mov
sub
adc
pop
lods
sbb
fs
cs
pop
push
push
imul
jae
mov
iret
popf
cmpsb
sahf
mov
jb
test
pop
cmpsb
movsl
inc
enter
scas
imull
jmp
mov
and
push
and
dec
xchg
cmc
push
lods
sub
repz
xchg
push
lahf
mov
sbb
sub
inc
ficoml
lret
sbb
mov
push
imul
xor
cltd
aaa
cmp
xor
push
sub
mov
testl
push
das
pop
pop
sbb
or
outsb
xchg
mov
push
ljmp
cmp
lret
mov
scas
adc
fs
mov
cs
mov
lcall
loop
mov
repz
aaa
mov
sub
dec
sub
xor
push
cmpsl
or
loope
pop
rol
pop
inc
sub
and
cltd
nop
push
xchg
cs
mov
call
xchg
sub
arpl
xchg
mov
pop
cmp
mov
jns
scas
movsb
inc
addr16
imul
mov
jmp
arpl
jb
out
xor
test
daa
imul
and
adc
out
xchg
xlat
xor
push
mov
lods
xor
insl
movsb
adc
scas
out
sbb
test
sub
fs
pushl
xchg
mov
adc
addr16
das
outsl
pop
pop
inc
addr16
insb
out
sti
xchg
lea
pop
repz
cmpsb
sub
sub
ja
xor
dec
lds
inc
aas
xchg
popl
lock
je
ss
movsl
add
imul
jbe
adc
add
psrlq
mov
aas
mov
and
lcall
in
mov
andb
push
lret
sbb
fwait
arpl
test
xchg
lret
cs
push
cmpl
inc
and
xchg
adcb
xor
je
or
and
nop
cld
mov
inc
xchg
mov
pop
mov
cs
test
adc
sbb
add
dec
cmp
rorb
mov
xchg
pushf
fdivs
and
in
ljmp
sub
inc
out
jae
lahf
push
lods
jg
push
sub
out
and
and
mov
mov
repz
movsb
dec
xchg
push
xorb
xor
fs
mov
xchg
subb
dec
xor
push
jmp
imul
fs
pushf
es
xchg
int
gs
sbb
jo
jno
cmp
mov
or
dec
lods
mov
fs
mov
sbb
lods
sbb
mov
fidivl
fsubl
lcall
and
aam
stos
and
adcl
jmp
fistl
xchg
push
lret
or
out
pusha
dec
inc
jl
fldenv
push
cmp
ljmp
lea
in
lods
mov
test
jne
arpl
ret
mov
xor
nop/reserved
push
pop
outsl
das
lods
jne
out
jge
es
lds
xchg
into
xchg
xor
sub
test
jb
fnstsw
pop
sub
bound
imul
mov
cltd
jae
dec
xor
sub
int3
pop
roll
stos
bound
push
arpl
lahf
js
lock
mov
xchg
popf
daa
pop
lods
sub
mov
jge
jle
scas
sbb
fstp
lods
outsl
subb
mov
leave
inc
jb
cmp
jo
inc
pop
arpl
bound
add
add
ja
sahf
add
je
psrlw
leave
lea
mov
push
test
ret
shlb
js
xor
push
inc
add
in
add
clc
mov
movsb
inc
stos
cmp
test
mov
imull
xchg
lods
divb
dec
sub
jae
cmc
pushf
adc
hlt
xor
stos
push
mov
rep
stos
and
test
cmp
or
call
insb
cs
lock
iret
mov
mov
stos
out
mov
xchg
mov
dec
push
mov
ljmp
mov
aaa
stos
xor
push
std
or
enter
mov
mov
add
sub
fistps
das
push
cli
xchg
addl
mov
add
cwtl
mov
push
mov
jmp
push
inc
ficoms
popa
jnp
sub
aas
xchg
xor
xchg
dec
gs
mov
sbb
pop
cmp
mov
imul
in
pop
push
xorb
gs
mov
pop
xor
jno
dec
add
sahf
and
pop
nop
inc
psadbw
pop
jb
sub
bound
jbe
jno
sub
push
cld
fistpl
dec
mov
loopne
pop
fistpl
cwtl
mov
out
push
aam
or
ret
jecxz
xchg
jns
loop
fmul
outsl
in
pop
xchg
and
mov
shll
cwtl
nop
sbb
fstl
clc
or
lahf
xor
add
lret
out
jl
and
cmp
sbb
test
outsb
cmp
cs
pop
pop
sub
mov
je
in
cld
mov
fildl
jnp
xchg
repz
aaa
xor
xchg
jle
cmp
addr16
sub
aam
dec
mov
cmp
mov
ja
lahf
mov
cld
mov
icebp
aad
aam
pop
pop
mov
into
inc
dec
in
in
cmpsl
mov
pop
inc
and
testb
in
call
xchg
je
xchg
enter
lret
push
insb
xchg
repnz
jb
int3
inc
mov
test
fbld
test
and
xchg
test
std
icebp
xor
push
mov
cmc
cwtl
cmpsb
mov
xor
sahf
sti
dec
sub
mov
xchg
push
push
movb
cs
jae
outsb
pusha
mov
test
popf
lcall
daa
std
sbb
sahf
dec
lods
mov
add
gs
mov
add
mov
pop
push
aas
push
test
popa
sub
adc
ljmp
add
sbb
mov
jge
push
pop
xchg
mov
test
es
repnz
mov
repz
adc
aas
movsb
jb
cmp
adc
inc
adc
movsb
and
mov
add
aam
mov
movsl
repnz
pushl
lods
xchg
add
pop
fdiv
inc
jns
adc
sub
lds
push
pop
fidivl
out
jg
test
cmp
outsl
add
sub
jae
daa
pusha
scas
cmc
mov
cwtl
sub
inc
mov
fldcw
int3
lods
mov
popa
push
cld
xor
sub
xchg
enter
or
bound
pop
cmc
mov
jg
and
clc
data16
loopne
jbe
jge
lea
cmp
scas
pop
daa
cmp
xor
ljmp
jns
xor
scas
xor
add
aas
jae
jo
inc
iret
sub
xlat
daa
sahf
xchg
and
add
cmp
add
sub
clc
cmc
jmp
test
sub
dec
arpl
sub
rclb
stos
sub
jle
lea
stos
xor
out
imul
dec
pop
in
push
test
clc
xor
pusha
mov
inc
movsl
jecxz
repnz
fldt
jge
imul
or
jb
popa
insb
and
loopne
leave
or
and
andb
add
adc
push
scas
int3
neg
pop
mov
sub
xchg
data16
fadds
dec
dec
call
add
adc
scas
mov
mov
pop
mov
mov
cmp
sbbb
push
orb
inc
pushf
sbb
nop
xchg
test
xchg
dec
movsl
testb
mov
xor
loope
xchg
les
push
loop
lret
inc
je
push
add
dec
mov
popa
out
mov
aaa
cmpl
xchg
push
xchg
pop
inc
xchg
int3
jno
and
jmp
scas
inc
xchg
nop
daa
aas
int
mov
out
mov
sub
mov
pop
arpl
cwtl
adc
hlt
sahf
out
ja
fimuls
sub
or
popa
mov
lret
push
addl
xlat
scas
aas
dec
add
in
mov
pop
shlb
dec
sbb
ljmp
test
sub
cmpsb
insb
and
jmp
fsubrl
stos
inc
movsb
sub
mov
add
scas
lret
dec
ds
mov
mov
daa
or
out
leave
jge
sub
xchg
clc
fisubrl
mov
cmp
dec
xor
inc
scas
sbb
movsl
mov
divb
out
and
mov
outsb
add
push
sbb
pop
bound
cld
das
adc
fiadds
pop
fs
and
mov
mov
in
imul
pop
pop
mov
movsb
mov
scas
jns
sub
pushf
xor
xchg
outsl
sbb
nop
insb
insb
jecxz
rclb
aas
or
sbb
push
mov
cmp
or
and
pop
test
jp
xorb
aaa
pop
insb
xchg
lods
js
in
or
bound
xor
stos
adc
popf
iret
adc
insb
jne
cmpl
pop
dec
fwait
xor
fiadds
cltd
ficoml
push
insb
stc
insb
sub
stos
jo
and
cmp
inc
mov
xor
out
dec
mov
test
mov
gs
mov
sub
stc
mov
cmp
movsb
test
lret
ss
addr16
mov
mov
dec
dec
lock
jno
jge
loopne
mov
lret
lods
pop
enter
in
sahf
popa
mov
out
mov
jae
das
hlt
test
xchg
sahf
mov
cmp
pop
add
mov
movsb
add
cmp
pusha
add
out
cmpsb
add
in
inc
pop
xchg
sbb
and
or
lcall
enter
stos
inc
add
pop
pop
xchg
mov
mov
xchg
mov
dec
inc
insl
cmpsl
push
add
fcmove
adc
stos
cmp
mov
rol
scas
sub
sbb
inc
outsl
pop
fimuls
out
mov
push
ss
jbe
nop
stos
insb
cmpsl
scas
xor
popl
and
sub
jno
xchg
push
fmuls
sbb
addr16
shr
push
inc
mov
mov
sbb
imul
cmp
daa
jae
shll
jecxz
lods
sub
pop
daa
lods
pop
mov
and
test
cld
adc
mov
or
mov
jnp
jo
pop
mov
in
in
pusha
cltd
insl
mov
test
jnp
insb
pushf
cmpb
mov
or
jecxz
push
arpl
clc
stos
icebp
stos
cmc
movsb
push
push
push
cmp
and
hlt
jmp
jl
xlat
daa
cmp
testl
arpl
int
dec
sbb
or
xor
leave
adc
out
xchg
ret
outsb
int3
aas
jmp
insl
scas
dec
daa
pop
mov
mov
arpl
mov
push
test
dec
sub
mov
jl
and
outsl
pop
mov
mov
or
push
fisubrs
sub
sub
rol
cmp
inc
test
xor
daa
inc
mov
adc
inc
jne
icebp
pop
in
fs
lahf
in
nop
daa
mov
pop
repnz
outsb
outsb
jno
mov
mov
xchg
sarb
mov
pop
cmp
aaa
sbb
push
xor
push
jg
mov
pop
cmc
jg
popf
pushl
xor
loopne
mov
mov
add
mov
sub
ljmp
rcr
push
repnz
das
fs
insl
je
jns
cmpb
pop
jo
sub
mov
push
pop
std
out
mov
in
lods
mov
sub
xchg
int3
add
pushf
lret
pop
addr16
jl
mov
mov
add
pop
jle
psubb
call
int3
sub
dec
or
xchg
jo
adc
lock
pop
pop
and
in
jno
mov
mov
outsb
and
lock
cltd
dec
add
sbb
and
sub
not
mov
fistl
repz
mov
cmp
add
xchg
mov
jns
movsl
das
add
sub
call
mov
jb
jo
mov
loope
push
jmp
xchg
and
xor
dec
inc
lods
cmpsb
in
inc
sub
pop
push
add
push
jmp
leave
sub
mov
aas
daa
mov
pushf
mov
sbb
imul
pop
mov
dec
mov
and
pop
add
stos
mov
pop
dec
scas
push
cwtl
sub
shr
cmpsl
xor
js
gs
arpl
pop
mov
inc
sub
xchg
jp
cwtl
pop
mov
dec
and
dec
lcall
orl
int
fdivrl
xor
jp
pop
sbb
adc
popl
movsl
push
jae
or
xchg
test
in
fs
xor
ljmp
js
ds
hlt
test
mov
ror
scas
sbb
lahf
stos
ja
roll
aas
cltd
in
scas
jo
fldenv
adc
loop
add
aas
fwait
insb
ret
xchg
test
clc
mov
and
sahf
mov
mov
aaa
test
imul
and
loope
repz
inc
sarb
push
in
loope
mov
aad
pop
pop
repnz
ds
data16
cmc
dec
xchg
cmp
jae
mov
js
xchg
mov
movsb
lea
jo
out
push
outsb
cwtl
jg
add
shl
leave
lods
push
incl
cmp
jo
adc
and
xor
das
xchg
jns
cwtl
push
int
jmp
mov
scas
cs
lods
mov
in
data16
push
mov
lock
or
adc
test
js
imulb
push
filds
add
enter
xchg
pop
aas
pop
inc
cli
pop
rorb
xchg
lods
lea
ret
sub
or
adcb
pop
mov
mov
stos
popf
push
xchg
lods
xchg
and
mov
shlb
mov
mov
ret
push
mov
cmp
jg
test
and
inc
push
out
and
loop
push
int
jecxz
mov
add
inc
cmp
xor
es
imul
jb
orl
test
and
in
imul
cmp
mov
pop
dec
and
ret
mov
int3
jb
mov
add
jge
test
pop
mov
imul
xchg
fidivs
leave
fsubrs
sbb
mov
cs
test
sbb
xor
clc
or
cli
lahf
insb
cmp
or
out
mov
repnz
jo
xchg
or
add
add
pop
cmpsb
test
outsl
out
xchg
leave
sahf
xor
mov
pop
add
into
imul
jae
xor
mov
push
push
icebp
mov
cmp
lods
pop
cwtl
mov
jnp
mov
imul
das
outsl
cmc
bound
xor
xor
mov
pop
mov
adc
test
popa
push
jnp
and
mov
sahf
add
cld
std
repnz
repnz
je
cwtl
lret
sub
xchg
mov
lahf
inc
mov
int3
or
mov
negb
xchg
aad
lret
mov
aas
fidivrl
mov
inc
mov
je
lods
fldl
out
movlps
out
cmp
lret
negl
adc
cmp
lret
mov
dec
hlt
xchg
addr16
adc
or
mov
jb
jns
cwtl
stos
jno
or
mov
xor
pushf
les
in
test
add
lock
inc
scas
fwait
sub
aaa
xor
xor
push
sbb
fs
ljmp
sub
aaa
sub
adc
mov
inc
dec
mov
push
pop
lds
loop
mov
jg
js
inc
mov
ja
movsb
fs
adc
adc
lret
pop
cmp
mov
push
data16
xchg
xchg
cld
dec
outsl
ss
mov
test
inc
dec
sbb
xchg
jns
push
bound
sbb
lods
or
or
shll
push
shl
push
mov
cmp
cwtl
mov
ss
push
in
int3
in
push
movb
sbb
popf
dec
cwtl
mov
dec
mov
aas
jo
lods
addr16
popa
push
mov
mov
push
stos
mov
aad
rclb
mov
loopne
push
imul
sub
adc
xor
test
not
repz
push
cli
dec
add
push
insb
mov
pop
dec
cmp
inc
xor
xchg
jg
or
idivl
dec
in
int
jne
les
add
sbb
xchg
bsr
and
mov
add
dec
lods
loop
push
pop
out
fldl
out
aas
aaa
adcb
pop
jecxz
and
inc
sub
stos
test
std
lock
and
xor
sar
push
aam
pop
icebp
addr16
xor
stos
push
stc
sub
mov
sub
push
mov
data16
sbb
imulb
push
and
push
flds
daa
movsb
dec
jg
clc
bound
aaa
mov
pop
clc
dec
shrb
daa
leave
adc
xchg
inc
jle
add
jecxz
adc
push
mov
jb
mov
push
subb
pop
pop
inc
xchg
adcl
cmp
movsl
pop
and
xchg
jecxz
sub
mov
int3
jg
int
sbbb
fidivl
fmull
pcmpgtd
xchg
sahf
mov
repnz
popa
adc
push
inc
xchg
movsb
data16
adc
out
sub
lock
nop
xor
add
mov
fcompl
scas
mov
xchg
adc
sub
inc
sbb
out
std
fdivr
ljmp
aas
cmpsl
jle
test
rorb
xor
xchg
aas
mov
mov
xor
mov
mov
jo
sub
push
rolb
gs
cmpsl
mov
xlat
xchg
adc
xchg
xor
push
out
cmp
stos
sbb
sub
push
clc
sbbl
jmp
sbb
jnp
movsb
or
mov
adc
movsl
imul
and
xchg
mov
sbb
movsl
scas
in
mov
xchg
jo
mov
xor
stos
dec
sub
add
sub
and
fsubs
gs
popa
mov
add
mov
fbstp
test
sbb
pop
fnstenv
repnz
test
and
fimuls
jo
pop
or
int3
lret
xlat
pop
outsb
mov
sbb
pop
mov
insb
out
dec
fcoml
jns
push
arpl
mov
test
pop
outsl
mov
sub
into
rorl
arpl
push
adc
cmp
shlb
movsb
repz
jns
aaa
dec
ljmp
leave
pop
imull
test
pop
or
mov
jns
addb
sahf
jo
ja
xor
aaa
aaa
stos
outsb
sbb
stos
mov
js
test
mov
fdivs
push
sub
cmp
dec
outsb
push
jb
sbb
sub
mov
lods
push
mov
repnz
popa
ss
mov
dec
addr16
imul
and
lock
push
lret
jge
cwtl
sub
mov
push
outsl
insl
leave
cmp
sbb
sbb
push
and
inc
bound
das
and
push
xchg
int3
jo
and
insb
add
pop
push
jge
outsl
les
push
pop
iret
add
mov
mov
pop
pop
imul
icebp
xor
test
test
and
fbld
cmc
xchg
jl
fsubr
xchg
movsl
stos
inc
adcl
mov
popa
pop
in
scas
outsl
test
sbb
mov
lcall
push
in
ret
das
mov
or
push
daa
iret
hlt
jbe
repz
xor
jle
je
dec
je
int3
pop
fdiv
adc
hlt
arpl
subl
or
popa
xor
mov
rcll
and
and
xchg
cwtl
inc
dec
popa
adc
cltd
movsl
sub
and
mov
ss
negl
mov
aas
scas
call
xor
in
cs
push
subl
rorb
js
pop
aam
mov
scas
pop
sbb
and
adc
shll
insl
sub
xor
movsb
insb
push
int
aaa
aaa
adcb
xor
hlt
leave
lods
xor
sti
push
popf
data16
jns
pusha
mov
lahf
sub
test
adc
mov
aad
lods
mov
add
mov
in
lods
inc
rcrl
xor
mov
scas
xor
mov
stos
sub
cmc
push
in
iret
jge
repnz
pusha
cmp
stos
xor
jp
mull
test
sbb
push
push
and
roll
inc
andb
daa
iret
xlat
adc
jp
stos
dec
movsb
mov
push
imul
xchg
mov
jnp
fs
scas
aas
fwait
jb
jnp
out
pop
out
sub
jecxz
xchg
das
mov
and
mov
inc
into
mov
mov
call
in
fildll
xor
mov
push
sub
adc
add
add
jnp
loop
push
ret
mov
aam
add
cmpl
mov
stos
in
fisubrs
dec
test
mov
push
mov
out
mov
repz
xchg
and
mov
into
int
imul
pop
mov
jns
shll
int3
adc
pushf
leave
sbb
lods
xchg
pop
dec
jmp
bound
movsl
pop
stos
mov
lcall
mov
sub
mov
insl
cmp
cmp
xor
jae
xchg
aas
shlb
clc
out
insl
mul
sub
faddl
fs
in
adcb
mov
adc
les
lods
cmp
je
nop
mov
scas
cmc
dec
or
loopne
in
cmp
shlb
pop
xchg
push
jp
mov
pop
and
mov
mov
xchg
mov
mov
popf
nop
stos
movsb
fcoml
int
lods
js
movsl
fnstsw
pop
movsb
xor
ja
test
adc
sub
fs
fisttpll
or
addr16
inc
mov
int3
inc
popl
rcrb
sbb
mov
fidivs
xchg
pop
mov
movsb
push
sub
popf
cld
inc
cli
popa
add
pop
loop
sub
add
lret
popa
popa
loop
xlat
inc
mov
inc
mov
shr
cmp
mov
int3
or
sti
cmp
mov
cmp
inc
and
xor
shll
insb
dec
mov
push
stos
xlat
pop
out
shrb
lds
cmpsb
decl
fwait
mov
cmpsl
jnp
dec
ss
dec
sub
outsl
fdivs
in
out
xor
mov
inc
leave
sbb
loope
leave
jne
mov
aas
xchg
xor
xor
sub
jnp
and
mov
jle
fsubrl
loop
lods
jg
inc
inc
xchg
mov
xchg
fbld
adc
repnz
lock
dec
rcrb
add
sbb
jns
call
call
xchg
or
xor
jmp
shlb
clc
add
or
xchg
cmp
jb
xor
enter
ret
cmp
xchg
sbb
jns
arpl
nop
bound
xchg
jecxz
jl
sahf
mov
js
xchg
add
add
lds
mov
imul
das
paddb
fchs
inc
repnz
pop
aas
arpl
xchg
sub
mov
mov
cmp
mov
xor
fmull
mov
jno
and
aas
popa
pop
pop
or
mov
int
inc
push
add
arpl
scas
test
or
cs
mov
fs
dec
xor
aas
pop
sbb
jae
out
inc
shlb
popf
push
sub
push
or
inc
adc
xorb
pop
jns
mov
mov
jo
add
adc
int
mov
cmc
sub
mov
dec
cs
jns
cwtl
shlb
xchg
shrl
push
mov
or
xchg
cmp
xor
enter
aas
mov
test
sbb
push
lock
mov
ret
in
xor
cmc
or
mov
xchg
pop
jp
in
xchg
in
add
test
pop
jl
mov
das
xlat
cmp
and
popf
jmp
push
fxtract
popf
xchg
and
xor
imul
cmp
and
sbb
je
scas
jb
movb
xor
mov
pusha
dec
pop
clc
das
and
loopne
es
cs
das
pusha
popf
leave
cld
ret
jg
dec
dec
mov
mov
scas
push
mov
jno
inc
ficoml
inc
imul
and
xor
inc
cmpsl
dec
fsubrs
mov
popf
and
lock
mov
popa
int3
mov
cld
sub
lcall
mov
xor
adc
loope
mov
lods
ss
or
cwtl
mov
sti
jns
aad
jmp
cli
movsl
int
cli
test
pop
mov
cmc
dec
xchg
sbb
inc
clc
add
sub
xchg
cmp
cmp
aas
daa
adc
lcall
xor
rcll
repz
cltd
sub
mov
data16
add
pop
cmp
cmc
rcrb
push
push
test
mov
movsl
adc
adc
sbb
mov
aam
sbb
cld
jg
cmp
adc
jmp
sbbl
repnz
xor
lods
movsl
jo
xchg
inc
mov
sbb
jns
lock
movsb
push
out
out
imul
mov
xchg
inc
cmp
int3
inc
cwtl
or
sub
mov
or
in
repnz
cmpsl
cltd
xlat
aas
mov
jb
push
dec
cmc
mov
out
int
push
cmpsb
cmpsb
mov
add
fstl
and
mov
or
aas
pop
jns
cmp
inc
and
cmc
xchg
cmc
ljmp
adc
sub
dec
roll
push
iret
into
arpl
data16
inc
mov
add
shll
hlt
mov
push
mov
mov
mov
lret
jb
jg
cmpsb
sbb
out
mov
lahf
cmp
es
adcb
lahf
mov
adc
ss
add
push
inc
mov
mov
inc
push
dec
jl
sbb
pop
data16
out
dec
cmp
out
not
mov
fs
pop
test
movsb
push
mov
ljmp
pop
mov
hlt
stos
fisttps
stos
ja
push
mov
mov
mov
scas
sbb
adc
rolb
sub
insb
adc
xor
mov
pop
mov
cwtl
inc
add
pop
movsb
lds
stos
inc
rclb
imul
push
cmp
stc
xchg
sub
ret
fs
pop
cmp
stos
mov
xchg
push
repz
lock
aad
mull
jbe
cmp
shlb
cli
push
xchg
scas
shl
xchg
fs
or
les
mov
test
jl
sub
filds
out
jecxz
push
movsb
popf
pushf
mov
xor
push
jmp
cmp
ss
jmp
mov
test
mov
mov
popa
pop
int3
in
pop
les
jg
movsb
int3
call
lahf
push
addr16
std
jp
xor
push
push
into
mov
imul
jno
ret
push
shlb
mov
mov
into
ficoml
adc
jg
push
add
mov
mov
repz
bound
xchg
bound
movsl
lods
mov
add
jo
lcall
push
inc
das
test
aas
mov
or
pop
fwait
jnp
and
div
lds
ret
xchg
mov
test
sbb
sbb
pop
enter
mov
jae
enter
sub
xorb
and
das
pop
repz
cwtl
jp
pop
lock
mov
mov
add
shrb
xchg
pop
push
lahf
and
cmpsl
jp
sbb
pop
outsb
js
jno
lods
xchg
jmp
in
call
in
or
push
xorb
inc
idivl
imul
mov
js
lret
mov
in
je
sub
mov
enter
xchg
leave
pusha
push
jp
pusha
repnz
sub
fs
and
jl
dec
stos
pop
mov
mov
ja
icebp
mov
popa
pop
cmpsl
mov
fwait
pop
mov
push
pop
xchg
cwtl
and
cli
pop
push
pushf
test
dec
aaa
pop
jle
dec
sbb
dec
add
cltd
ficomps
cmp
mov
les
xorb
and
mov
xchg
lods
jge
and
mov
aaa
mov
sub
cmp
aas
testb
xor
cmc
push
cwtl
sub
movsb
in
call
jecxz
adc
xchg
leave
test
adc
rcrl
push
xchg
adc
les
testl
stc
push
mov
stc
ret
add
inc
in
call
inc
pop
idivl
mov
test
pop
add
mov
xor
jns
lock
ret
ficoml
sub
xor
push
or
icebp
in
sub
jg
mov
xor
insb
popf
jo
jg
out
adc
stos
lret
icebp
cltd
movsb
sub
mov
aas
push
cmpsl
loopne
lret
lret
sbb
addl
or
xorl
push
jb
push
aas
andb
mov
dec
xor
test
mov
insb
or
fists
sbb
and
imul
adcb
sub
and
mov
xor
outsb
and
sub
pop
movsb
fstpl
incb
lea
sub
movsb
leave
push
cmp
sahf
mov
js
push
mul
pop
add
scas
jae
add
sbb
adc
xchg
lds
sti
dec
aam
sbb
aaa
mov
jecxz
xchg
xor
jl
sub
loopne
mov
sar
mov
jne
js
inc
mov
mov
pop
jnp
add
lret
pop
lahf
insl
repz
jb
insl
dec
lahf
repnz
jae
cmpb
push
and
mov
xor
mov
adc
jo
push
cmp
int3
ss
cld
mov
in
aad
das
mov
cmp
jp
hlt
sarb
outsb
fs
in
scas
jle
pop
or
jnp
lea
ffree
lahf
adc
xor
adc
jp
lods
cltd
out
js
shlw
pop
ret
mov
int3
xchg
enter
fstpt
mov
fsubs
and
addr16
push
inc
rcrb
mov
pop
lahf
xchg
aaa
lods
mov
leave
stos
das
lods
cmc
nop
in
or
inc
adc
pop
pop
and
dec
mov
pushf
mov
stos
cltd
and
fisttps
push
inc
cmp
xchg
sub
jecxz
dec
mov
jp
mov
stos
fwait
jo
xchg
and
mov
mov
es
pop
fsubrl
lds
mov
pushf
daa
imul
stos
sbb
lock
fldt
cmp
xor
or
pusha
pop
push
mov
mov
sbb
call
sbb
add
bound
pop
cltd
loop
cmpsb
and
jns
jns
and
dec
movsl
and
shrl
cs
sbb
jp
mov
jae
adc
stos
cmp
loop
pushf
jbe
mov
leave
stos
lods
sub
and
lods
int3
nop
push
out
sbb
ds
bound
fsubl
fists
push
enter
fsts
cmpsb
arpl
iret
cmpsl
lret
adc
pop
add
outsb
mov
dec
test
aas
push
jnp
lods
jp
ds
hlt
xchg
mov
xor
popf
sbb
sub
push
dec
mov
cmp
js
lcall
roll
cmp
movsl
xchg
ja
pop
aam
nop
scas
cwtl
int3
sahf
dec
enter
sub
dec
jns
lds
test
sahf
shll
orb
push
pop
hlt
xor
sub
or
lret
cmpsb
mov
cmc
fsubl
lahf
sahf
ss
add
int3
je
adc
in
cwtl
ja
pop
and
add
inc
adcl
data16
subb
cwtl
pusha
xor
jb
das
jmp
mov
and
bound
sbb
movsl
jb
je
stos
setno
pop
sub
xchg
jl
imul
xchg
push
ret
push
jns
xor
add
jb
lods
jae
mov
mov
add
mov
subb
inc
mov
lods
jl
popa
and
mov
mov
cmp
or
xor
and
or
popf
arpl
es
pusha
adc
dec
rcl
jmp
clc
push
inc
or
das
or
pushf
pop
notb
adc
stos
leave
test
dec
repnz
and
imulb
adc
and
adc
gs
clc
rorl
outsl
test
inc
lods
jnp
aas
push
mov
leave
fmuls
or
lea
into
jecxz
and
scas
mov
jo
xor
sbb
outsb
sarb
mov
mov
scas
mov
jle
pop
insb
nop
cmp
inc
pop
mov
cltd
mov
movsb
push
cmp
hlt
mov
test
xchg
jnp
fbld
jns
cmp
or
fbld
mov
and
mov
out
mov
aad
cwtl
jp
adc
movsb
insl
sbb
mov
add
outsb
shlb
lret
imul
or
xchg
sbb
xor
pop
rol
mov
jecxz
arpl
jl
lea
xor
mov
dec
shrl
pop
push
lods
dec
loop
jle
sahf
stc
inc
pop
pop
push
push
inc
aaa
mov
fcmovnb
negl
cmpsb
mov
lret
int3
mov
insb
adc
xchg
sbb
cmpsl
arpl
shl
adc
nop
dec
in
mov
cs
in
and
push
xchg
mov
adcl
pop
stc
andb
pop
lcall
loop
push
movb
call
pushf
xor
adc
pop
js
out
rcl
lret
adcl
xor
adc
mov
mov
pop
jo
xchg
loope
ja
fsubr
ret
mov
pushf
jbe
cltd
daa
inc
jecxz
adc
inc
xchg
mov
movsl
sub
xor
scas
sub
pop
lcall
push
push
ss
into
shl
or
pop
jae
rcl
jl
sub
loop
clc
jns
and
lea
arpl
lahf
aad
jno
nop
out
stos
shll
sbb
pop
scas
out
popf
in
fldenv
or
push
ljmp
xor
lock
push
mov
test
mov
xchg
pcmpgtw
jecxz
sbb
test
lea
pop
xchg
loopne
mov
mov
jno
cmp
out
pop
sbb
sbb
inc
stos
lods
sub
nop
inc
mov
xchg
adc
sub
icebp
je
mov
mov
stos
and
sbb
movsb
stc
xchg
jp
mov
sarb
ja
mov
int3
or
mov
inc
fcmovne
dec
int3
testb
ficomps
lods
int
clc
lock
scas
jecxz
rcrl
and
or
test
movsl
movsb
mov
xor
mov
xchg
leave
scas
int3
sahf
adc
mov
sbb
sub
mov
jg
jns
roll
sub
stos
mov
mov
mov
sbb
mov
xor
mov
lods
leave
and
fwait
dec
sbb
ss
ret
mov
scas
bound
clc
adc
mov
test
xchg
jge
gs
xor
mov
mov
dec
mov
jmp
loope
popa
int3
int
mov
xor
ret
stos
fnstenv
stos
pop
pop
insb
leave
repnz
aad
movsb
cmpsb
data16
test
lahf
sub
and
cmc
call
out
cmpsl
int3
cmp
aas
xchg
push
enter
sub
pop
out
int3
sbb
cmpb
mov
cli
lret
in
ljmp
aaa
mov
cmp
pop
push
inc
ret
xchg
cs
mov
int3
pop
fnstsw
mov
cmpsl
mov
jmp
add
pop
sbb
sub
and
aad
sbb
xor
xchg
jge
lahf
push
push
call
push
xorl
xlat
jge
fidivs
lods
nop
clc
cmp
mov
push
push
sbb
jmp
and
xchg
sub
mov
push
loop
pushf
lcall
mov
mov
sbb
int3
lea
scas
loope
mov
enter
xlat
inc
xchg
enter
outsl
lea
jns
mov
jnp
test
mov
mov
jo
loopne
push
idivl
mov
xor
push
dec
loope
arpl
push
lock
call
outsb
test
das
test
xchg
mov
xchg
cwtl
add
lret
mov
jns
lret
test
arpl
icebp
xchg
xchg
aas
ret
div
and
test
xchg
fiadds
fwait
lods
adc
mov
test
lods
lahf
jns
pop
pop
cs
dec
jbe
cltd
iret
lret
ret
loopne
daa
cwtl
lret
int
lahf
mov
ds
aam
jno
mov
pop
pop
mov
icebp
xchg
shl
lret
pop
test
xchg
push
das
push
adc
icebp
adc
je
rclb
fisubrl
jmp
mov
mov
jge
push
enter
xchg
mov
scas
push
std
sbb
mov
and
fdivrs
mov
xchg
or
jae
icebp
lods
sbb
jle
jne
mov
xchg
xchg
or
and
pop
mov
loop
fmull
cltd
jo
xlat
lock
xor
shl
sub
loopne
repz
ficompl
dec
movsb
lret
cs
lea
add
lahf
mov
push
inc
cmp
mov
sub
jb
stc
fcmovbe
in
add
pusha
or
sbb
shll
xor
arpl
dec
inc
aam
sbb
adc
xor
pop
jl
int3
mov
dec
repnz
fsubs
xor
imul
dec
test
iret
mov
dec
and
sbb
mov
pop
bound
stos
mov
movsl
cmc
in
xor
ds
jo
insb
xorb
in
mov
cmpsb
out
sub
lret
dec
lahf
jne
dec
cmp
lahf
lret
mov
bound
jo
jle
data16
pop
mov
lret
outsb
jmp
or
pop
sti
and
mulb
mov
jno
fnsave
popl
movsb
adc
sub
stos
dec
ja
mov
jb
jns
jl
jle
mov
scas
je
jb
out
inc
mov
je
and
aam
cmpsb
push
shlb
mov
and
adc
js
pop
jmp
pop
sub
ljmp
and
sbb
ficomps
xchg
adc
xor
and
adc
lahf
push
stos
fs
fistl
cmp
pushf
enter
jecxz
popa
and
lret
sub
lret
inc
orl
loop
pop
das
push
lret
insb
dec
lahf
jp
pop
push
enter
out
stos
insb
push
inc
out
movsl
mov
jp
pop
sub
fcomi
lods
add
outsb
cld
call
lods
push
mov
pop
pusha
mov
adc
push
rclb
adc
xchg
add
mov
cmp
ror
jb
dec
and
les
and
or
insl
mov
xchg
fsubrs
push
or
pop
mov
in
xor
jle
divb
imul
add
xchg
lods
out
lcall
adc
xchg
mov
or
mov
sbb
lods
bound
lds
imul
daa
jne
mov
sbb
mov
hlt
lcall
add
jae
mov
mov
or
add
sbb
lods
repnz
mov
orb
mov
stos
cmp
xor
push
xchg
movsl
scas
jge
jo
push
sub
mov
cmp
jb
mov
push
mov
pushf
fwait
sub
data16
ss
pop
test
mov
arpl
lods
jp
xchg
jmp
fs
cwtl
aam
int3
cmc
fbstp
cmp
lahf
je
repz
push
add
sub
dec
addb
cmp
ss
inc
rclb
lahf
in
mov
pusha
in
cld
mov
mov
arpl
cmp
cmpsl
imul
ret
sub
scas
xchg
out
scas
xchg
outsl
adc
xor
add
test
lahf
cmp
inc
scas
jecxz
inc
jmp
sbb
ljmp
je
es
test
test
pop
push
or
dec
inc
or
pop
pop
scas
mov
in
outsb
lods
mov
sub
mov
dec
clc
std
sub
push
fmuls
and
andb
sti
addb
dec
int3
jns
es
jne
inc
subb
lds
and
in
sub
int3
imul
xor
mov
lods
adc
mov
add
test
scas
fists
outsb
les
xchg
lods
das
hlt
scas
sub
pop
push
sbb
andl
lods
mov
imul
jne
or
push
cmc
sbb
dec
loop
mov
sub
pusha
add
xor
test
sbbl
sub
cmp
jb
xchg
inc
and
sub
push
inc
xchg
pop
fwait
cmp
fs
aaa
stos
enter
mov
lds
leave
cmp
xor
sub
xchg
lods
and
jo
jnp
push
enter
sbb
mov
scas
out
mov
out
bound
mov
ss
cld
sbb
popf
xchg
fnsave
xchg
loop
add
pop
xchg
jle
push
arpl
test
fimuls
pop
lahf
inc
test
xor
insl
es
and
sbb
fdivl
adc
pop
mov
pop
scas
mov
push
mov
jle
movsb
pop
mov
iret
enter
xchg
in
enter
addb
xor
xchg
jp
push
inc
jmp
daa
add
movsb
push
enter
enter
mov
lret
cwtl
das
shlb
xchg
neg
xor
sub
dec
xchg
and
enter
mov
stc
sbb
push
bound
popa
mov
repnz
movsb
jae
cld
orl
js
fisubs
cmpsl
aaa
out
push
xchg
mov
push
fs
pop
into
lock
in
inc
jae
sahf
or
mov
addr16
cld
pushf
mov
movsb
rolb
push
scas
daa
imul
clc
mov
sbb
sbb
insl
lret
in
ss
fwait
ja
lea
sarb
inc
adc
pusha
sbb
mov
leave
mov
sbb
fcomps
jne
fcmovne
jl
fldcw
and
jle
shrb
push
lahf
push
aas
xchg
pop
jae
out
cs
cwtl
inc
scas
movsl
push
sbb
pusha
pop
jo
xor
xchg
sub
xorb
adc
and
fs
lods
mov
inc
stc
dec
icebp
xchg
scas
jl
mov
sub
fadds
rcrb
adc
or
sub
into
icebp
adc
test
mov
repnz
sbb
xor
pop
es
dec
mov
and
or
inc
mov
subb
push
mov
outsl
pop
popa
fs
mov
add
aad
and
pop
daa
in
test
push
cld
inc
mov
idivl
dec
add
xchg
insb
mov
fs
jb
outsb
or
jle
adc
xchg
mov
mov
fisttpll
cwtl
jns
arpl
xchg
push
or
inc
imul
adc
cltd
dec
xchg
cmp
imul
lods
mov
push
aas
mov
testb
mov
mov
clc
test
push
pop
cmp
push
popa
add
dec
mov
cmpsl
hlt
sti
push
bound
and
mov
mov
cmp
out
test
pop
jmp
cmp
sahf
lcall
mov
or
gs
inc
shlb
scas
cmp
push
divb
xchg
test
imul
mov
mov
clc
mov
movsb
sahf
loop
adc
je
push
cmc
cmp
mov
rolb
adc
int
es
icebp
push
js
jl
imul
fildll
jnp
scas
jnp
dec
fists
jmp
insb
hlt
sahf
push
add
dec
jns
cld
pop
inc
xor
scas
dec
jns
aas
stos
xchg
movsb
je
leave
movsl
pop
sbb
pushf
outsl
outsl
jns
inc
scas
cmp
and
lods
mov
stos
xchg
stos
in
out
test
jno
movsb
adc
movsl
ljmp
lcall
iretw
addr16
pusha
jp
push
insb
inc
dec
mov
js
adc
ja
xor
leave
subb
xchg
int3
mov
test
mov
mov
jae
sbb
repnz
xchg
bound
leave
in
js
mov
mov
mov
mul
pop
adcl
mov
mov
and
insl
stos
mulb
je
arpl
sarb
stos
lret
idiv
repnz
pushf
sub
mov
lahf
leave
fisubrs
pop
dec
stos
mov
xchg
repnz
aam
xchg
call
fdivs
bound
imul
pop
popf
lods
push
lcall
lds
mov
sub
cmp
add
dec
cmp
imul
cmpsb
mov
std
pop
xchg
mov
mov
loop
mov
das
pop
mov
mov
fs
xor
lods
xchg
mov
ret
fstl
pop
lahf
cwtl
pop
xchg
popa
ret
shll
jns,pn
into
test
mov
pop
cwtl
cmc
xchg
mov
mov
and
adc
shlb
mov
insb
mov
sub
loope
ret
aam
adc
push
xchg
mov
mov
hlt
sbb
je
ret
xchg
jo
jg
pop
roll
jo
les
sti
call
jnp
dec
mov
lods
std
mov
scas
xor
xorb
jp
mov
sub
sarb
clc
in
addr16
hlt
fmull
and
ret
jg
fs
mov
mov
imul
xchg
scas
add
popf
sbb
mull
dec
mov
push
or
sbb
xchg
push
jb
adc
xor
xor
push
cs
shlb
unpckhps
movsl
mov
je
or
mov
or
nop
lods
add
cmpsl
lahf
aad
or
dec
mov
sbb
cld
rorl
xchg
es
stos
jo
mov
mov
sub
negb
data16
jns
unpcklps
push
dec
xlat
inc
add
test
sbb
cli
mov
pop
scas
sahf
cmp
pop
xchg
iret
addr16
sti
lcall
jb
push
mov
jbe
jecxz
adc
insl
cmpsb
loop
inc
mov
out
sub
xchg
imull
and
push
clc
adc
sub
mov
fwait
mov
fisttpl
pop
push
bound
rorb
test
xorl
push
mov
mov
lahf
int3
mov
pusha
mov
nop
push
std
add
test
mov
inc
mov
inc
adc
xchg
pop
xchg
and
pop
shlb
stos
in
shrb
jecxz
out
lea
cmpsb
ret
mov
inc
stos
cmc
xchg
push
pop
push
adc
movsb
pop
cmp
xchg
or
push
mov
mov
mov
out
push
xchg
in
loope
jge
movsb
xchg
aad
jns
xor
xor
ljmp
lahf
push
xlat
outsl
pop
enter
sarl
dec
mov
mov
push
jbe
iret
sbbb
jg
sub
and
adc
and
pop
fucomp
ret
adc
pop
arpl
dec
mov
in
mov
jns
mov
cmpsl
cwtl
pusha
test
jmp
xchg
test
xor
ss
and
call
lods
subb
or
dec
and
jle
sbb
and
add
cld
int3
push
lock
mov
xchg
xor
jb
arpl
int3
and
imul
dec
mov
lods
xchg
in
dec
mov
outsl
lock
insb
loopne
push
xlat
movl
push
lahf
xchg
mov
jo
mov
iret
cld
jbe
jae
repnz
je
outsl
int3
orb
xorb
fdivrs
add
repz
cmp
pop
dec
loope
inc
cld
sub
dec
cwtl
push
repz
xchg
or
rcll
cld
pushf
aas
and
loop
adc
mov
sbb
lock
int3
inc
sbb
sbb
je
pop
xchg
xor
cmc
stos
adc
jo
adc
xchg
mov
nop
sub
icebp
movsb
ficoml
dec
jo
pop
sub
mov
mov
push
movsb
test
sti
aad
jo
out
loopne
fimull
stos
add
push
jl
sbb
es
mov
pop
mov
inc
cli
repnz
outsb
pop
push
subb
pusha
incb
pusha
neg
iret
lcall
mov
or
shlb
dec
lret
ret
ret
fbld
or
mov
xor
mov
and
loop
jmp
push
insb
dec
ret
inc
lcall
jb
xchg
arpl
fwait
cmpsb
xchg
ficoms
jno
jecxz
das
je
stos
mov
add
sub
lock
cmpsb
sub
ret
pop
mov
push
stos
jg
insl
insb
aaa
and
mov
cwtl
mov
add
out
xchg
fnstenv
scas
je
lcall
insb
inc
and
pop
sub
out
inc
mov
in
data16
notl
sbb
out
dec
mov
push
sbb
lea
adc
sbb
shrb
sub
jb
mov
in
inc
movsb
cwtl
test
pop
mov
insl
mov
xchg
inc
push
add
lods
dec
mov
outsl
or
mov
outsl
int3
or
pop
add
in
push
test
mov
test
or
aas
ds
repz
test
das
test
lods
xchg
mov
loop
mov
lods
mov
das
pop
mov
push
dec
mov
or
movsb
mov
adc
lods
mov
cs
shlb
test
movsl
cltd
cmpsl
xchg
cmc
shrb
test
imull
bound
sbb
pop
mov
dec
das
pop
sub
add
mov
sbb
xchg
sahf
lods
inc
pop
arpl
mov
movsb
ret
stos
fwait
mov
lods
xchg
mov
adc
arpl
mov
insl
and
inc
and
adc
sbb
and
xchg
mul
pop
ss
data16
out
xchg
movsl
and
add
jg
sbb
xchg
adc
data16
loopne
inc
push
mov
ret
fldt
mov
fwait
outsb
jl
pop
cmp
pop
in
xchg
clc
and
xor
out
lods
mov
jle
mov
lret
xor
and
loope
cmp
or
push
cwtl
sbbb
push
inc
movsb
jp
mov
jbe
mov
andb
cltd
jl
dec
push
add
ljmp
fsubs
cmp
bound
dec
sub
xor
cltd
and
xchg
add
jno
sub
mov
mov
and
lods
movsb
in
ljmp
cmovns
lock
incl
cwtl
jno
fdivs
ljmp
push
lods
pop
xchg
mov
jle
movsb
xchg
xchg
lahf
and
stos
movsb
gs
or
xor
mov
jne
out
mov
pusha
je
push
cmpsl
push
ret
jb
dec
or
dec
pop
adc
in
and
push
js
insb
mov
and
jecxz
outsl
jno
nop
imul
imul
pop
lahf
insb
cmpsl
fs
mov
lods
pop
mov
xor
pop
push
mov
inc
cmp
bound
jne
icebp
push
or
cwtl
scas
int3
and
cmp
fdiv
mov
loopne,pn
cmpsl
js
insl
psadbw
lods
subb
jno,pn
xchg
fsubrl
mov
shrb
dec
or
scas
adc
insb
pushf
add
fadds
scas
cld
fwait
add
jb
pop
pop
inc
push
cmc
cmp
call
push
movsb
movsb
lods
push
and
sti
pop
and
mov
fwait
shrl
ret
filds
rcl
xor
scas
sahf
bound
push
aam
int
dec
mov
jle
mov
xchg
outsl
or
cmpsl
daa
xchg
and
pop
aas
add
xchg
mov
mov
xor
xlat
fs
sub
lds
call
xchg
popf
xor
nop
testb
mov
lods
lock
lods
movsb
lret
pop
adc
xchg
push
daa
push
sub
push
sub
add
testl
pop
inc
bound
or
arpl
mov
mov
mov
mov
adc
and
inc
mov
push
mov
scas
pop
insb
push
ret
hlt
jae
mov
xor
test
test
outsb
fs
cs
movsb
aaa
mov
outsl
adc
or
test
hlt
fidivrl
pop
pop
daa
data16
cmp
clts
aad
test
out
stos
pushf
int3
fwait
repz
push
outsl
fisubl
sub
push
rcl
inc
dec
and
enter
test
fs
push
les
cmc
pop
xor
ja
rcrl
and
data16
mov
enter
insl
call
jno
xchg
push
dec
xor
bound
xchg
sub
lds
xchg
std
call
stos
sti
sahf
lods
shrl
cmp
sbbb
dec
into
aam
jle
mov
add
jns
adc
xchg
es
jmp
ds
push
shrb
cmp
mov
mov
cltd
sub
daa
lods
sub
mov
push
xor
sub
lahf
pop
mov
js
jbe
sahf
call
outsl
pop
sub
inc
xchg
insb
je
adc
cmp
sub
pop
je
movsb
push
cld
je
cmc
cmp
sbb
ds
mov
xor
pop
mov
dec
je
cmp
and
lea
loope
addb
pop
xor
lahf
cli
xchg
mov
mov
imul
xchg
pop
jae
imul
and
pop
mov
mov
cli
xchg
xchg
out
mov
xor
xchg
lcall
insb
inc
rol
call
mov
mov
sbb
inc
je
sub
sbb
dec
pop
mov
dec
mov
add
loopne
loope
test
xchg
scas
or
imul
dec
sar
sub
fldl
jb
std
mov
xor
aas
out
xor
stos
mov
cwtl
out
xchg
mov
movsl
jl
xor
imul
lods
cli
int3
sahf
jg,pn
push
cwtl
pop
pop
popa
inc
imul
sub
out
cmpsb
sbb
shlb
push
stos
jae
mov
mov
iret
frstor
push
movsl
cmp
cmp
mov
jae
dec
mov
out
jp
jmp
jb
push
fdivs
rcr
scas
pop
mov
cmp
leave
push
mov
insb
cltd
in
outsb
aaa
mov
inc
arpl
add
or
negl
leave
lret
test
xor
add
mov
pop
dec
sbb
inc
sub
mov
and
fisubs
pop
xchg
pop
mov
cmp
sub
fs
push
push
sbb
jb
and
movsb
imul
pop
and
jns
xor
jl
out
jnp
je
sub
and
dec
mov
and
jb
gs
or
jo
and
fdivr
ja
lock
gs
push
jb
push
inc
mov
inc
inc
add
movsb
mov
push
jo
leave
or
jo
lcall
fyl2xp1
xor
fs
cmp
insb
xor
or
shr
pop
rorl
gs
clc
sbb
push
push
xchg
aas
push
cmp
or
sub
or
push
inc
loop
ret
adc
pusha
cmpl
or
mov
mov
sub
xor
fs
mov
and
jecxz
jo
imul
add
mov
mov
cmp
shlb
mov
adc
jno
aad
icebp
push
mov
add
cmc
pushf
adc
jns
out
push
cwtl
pusha
stos
ds
insb
sbb
and
jmp
sahf
scas
fdivp
fnstcw
mov
js
lahf
sub
test
push
ljmp
jno
das
imul
leave
cmp
mov
adc
in
dec
xor
pusha
in
jb
mov
push
or
xchg
mov
pop
movsl
mov
cli
fildl
frstor
fstl
adc
cmp
lock
mov
aaa
sbb
mov
mov
mov
add
lds
or
jno
cmpsl
stos
mov
cltd
sbb
jne
es
fldcw
xchg
lcall
cmp
dec
mov
daa
test
testb
mov
loope
int3
insl
lock
hlt
insb
cmovne
mov
xchg
pop
jmp
ret
pop
mov
arpl
sbb
cwtl
mov
stc
repnz
cs
or
punpcklbw
sbb
lret
pop
mov
out
repz
mov
dec
xor
lods
jns
adc
xor
lea
or
loope
movsl
xor
jns
xor
call
and
dec
xor
ss
fadd
cmpsl
push
dec
aaa
pop
sahf
jno
ds
jbe
jne
xchg
scas
movsb
push
test
mov
inc
jg
add
fs
sbb
sbb
mov
mov
sbb
outsl
pop
lea
ret
jns
out
pop
aas
scas
arpl
je
jae
mov
xor
cwtl
sbb
push
pusha
mov
imul
pop
pop
sarb
sbb
sub
xchg
pusha
scas
lods
insb
pop
and
gs
mov
roll
jne
iret
sub
mov
pop
mov
imul
xchg
aaa
mov
pop
dec
fwait
mov
int3
lahf
bound
inc
and
mov
call
std
js
mov
or
fwait
and
add
mov
dec
xor
shll
xlat
xorb
xchg
mov
adc
lds
sub
popa
push
icebp
dec
adcl
jo
je
mov
rol
sub
inc
dec
xor
jae
fadds
scas
jb
fiadds
add
jno
ret
mov
adc
adc
adc
test
sbb
cli
rcrl
ret
xor
jae
or
fs
mov
pop
adc
fistpl
push
ljmp
lds
mov
in
lock
xor
add
lods
je
int3
pop
jae
sbb
stos
push
inc
adcl
leave
xchg
xchg
jnp
mov
push
fnstsw
cmp
movsb
test
add
icebp
mov
xchg
pop
sub
popf
div
jle
sahf
subl
push
pop
pop
jge
in
xchg
insl
sahf
jmp
roll
popf
call
repz
lods
je
test
push
in
sub
adc
imul
test
or
xchg
test
push
inc
jg
movsb
xchg
jp
sbb
cmp
push
mov
ret
add
xor
cmpsb
repnz
scas
fistps
add
test
pop
lret
scas
sub
insl
aas
cmp
fdiv
cli
jno
lock
pop
subl
out
mov
mov
scas
cli
xor
jns
call
sbb
xlat
push
in
push
mov
cmc
movsb
neg
dec
imul
fwait
inc
xlat
repnz
leave
pop
and
sub
add
pop
mov
aad
mov
pop
leave
xchg
xor
mov
fcmovnbe
push
rorb
jmp
dec
cmp
lahf
pushf
jge
add
test
lock
adc
mov
or
push
sbb
test
inc
ret
aaa
test
push
fildll
rcll
aaa
add
adc
sub
mov
stos
mov
insl
xor
push
subl
push
mov
jnp
mov
outsb
cmc
divl
push
cmp
jae
cmpsb
pop
into
nop
sbb
push
imul
sub
add
jle
lcall
addl
cmpl
loop
jp
cmpb
jne
cld
les
sub
fistl
cltd
xchg
push
push
and
xchg
push
pop
fwait
lods
xor
mov
jp
out
xchg
inc
movsb
cwtl
xor
pop
cmp
add
adc
fs
mov
xchg
xchg
and
xorl
pushf
aaa
ret
test
jno
xchg
push
push
jo
adc
jns
push
inc
lcall
das
test
cmpsl
lahf
mov
mov
stos
mov
cmpsl
jo
mov
out
jp
jle
jb
mov
in
jmp
jns
testb
and
insb
fiaddl
pop
pusha
das
push
mov
aam
loopne
cmp
push
enter
push
mov
lahf
or
sub
xor
and
xorb
jae
hlt
xor
mov
scas
sub
mov
inc
insb
pop
pop
mull
adc
mov
jns
aas
cmpsb
es
mov
arpl
inc
stos
outsb
add
cmp
leave
pop
jo
lcall
mov
xor
jp
xchg
movsb
jae
bound
pushf
mov
pushf
repnz
sarb
inc
arpl
mov
lods
or
pop
fs
fs
aaa
sbb
push
fdivrs
pop
mov
mov
sub
lea
stos
outsl
adc
movsb
dec
or
sub
jmp
aaa
outsb
out
pop
cltd
lret
stos
and
xchg
cmc
push
xlat
gs
push
data16
mov
insb
adc
push
outsl
sub
mov
xor
imull
cmpsl
loope
xchg
loope
divl
push
sbb
add
sub
mov
flds
add
scas
mov
ficoml
jle
mov
mov
icebp
pop
rcrb
pop
cmp
jo
popa
push
test
rcl
push
and
test
loop
int
sbb
mov
jb
data16
lcall
leave
sbb
inc
ss
clc
adc
loopne
ja
or
fsubrs
adc
daa
xchg
aas
bound
and
jmp
pop
mov
fs
stc
adc
mov
sub
xchg
lahf
adc
data16
stc
xchg
movsl
es
mov
sbb
pop
pop
sbb
iret
pop
mov
idivb
enter
data16
pop
mov
push
jbe
sbb
or
in
adc
adc
jmp
mov
nopl
push
loop
aas
and
loopne
in
pop
mov
jns
mov
insb
dec
xchg
movsb
pop
push
sbb
test
xchg
mov
loope
bound
das
push
movsb
adc
xor
pop
xchg
fisttpl
add
mov
sub
test
aas
outsb
mov
pop
sti
cli
call
dec
push
mov
push
mov
inc
sub
xchg
mov
stos
int3
lods
jmp
stc
adc
pop
sti
lretw
inc
je
insb
push
je
jl
test
jnp
fwait
lods
sub
lret
fs
xchg
shrb
mov
mov
mov
loopne
jb
sub
mov
xchg
int3
jae
jbe
xchg
arpl
sub
pushf
push
cltd
insb
sub
stos
movsb
cmp
adc
pusha
cld
cs
les
sbb
adc
push
pop
push
sti
fildll
jl
add
mov
mov
adc
and
int3
lods
fwait
daa
xor
dec
in
mov
xchg
cmp
xchg
mov
mov
mov
jecxz
push
xor
mov
stc
out
jmp
je
pop
xchg
repz
pusha
es
ret
loop
aas
data16
xor
int3
ret
push
jle
mov
lods
cmpsb
jnp
add
outsb
insb
rclb
xchg
in
outsb
cmp
mov
ja
mov
xor
jns
pop
mov
mov
push
lret
and
mov
nop
test
push
imul
mov
push
push
repz
clc
sti
and
mov
add
insb
pop
mov
xor
inc
mov
aad
mov
cmp
test
push
push
or
xchg
sarb
arpl
scas
testl
aas
mov
into
das
sub
pop
push
lahf
rcrl
test
sub
faddl
xor
sti
test
push
push
daa
sub
movsb
sahf
jle
add
mov
cmc
xor
je
mov
std
add
xchg
popa
dec
call
mov
movsl
cmp
jl
fs
int3
xchg
or
or
fsubs
fucomp
mov
jo
cs
adc
pop
jl
fs
xlat
subl
adcb
int
push
test
jl
push
mov
mov
xchg
int3
xchg
or
pop
inc
push
subb
mov
lcall
lret
sub
gs
imul
add
popa
xor
addr16
add
cwtl
push
movsb
lret
dec
mov
scas
popa
faddl
or
inc
sub
mov
stc
add
mov
xor
loope
push
es
repnz
sbb
lahf
add
inc
cmp
mov
dec
mov
pop
int3
pop
mov
mov
mov
jne
int3
xlat
xchg
inc
add
insb
inc
and
lods
lret
loope
xchg
inc
jecxz
xchg
pushf
mov
pop
mov
mov
shll
imul
int3
cli
loopne
xor
add
mov
add
lcall
iret
push
mov
adc
fmuls
add
aaa
and
int3
xchg
jnp
test
negl
and
pop
and
or
sarl
or
adc
cld
adc
enter
call
in
pop
jmp
les
movsl
inc
int3
daa
sbb
push
cli
mov
pop
push
out
push
fcompl
pop
xchg
in
arpl
push
xor
sbb
sbb
pop
add
xchg
subb
sub
add
push
pop
pop
mov
inc
or
out
std
jge
mov
add
xor
daa
scas
mov
test
mov
movsb
sbb
lahf
mov
mov
inc
pop
jae
int3
movsb
aas
sub
ljmp
mov
adc
mov
add
cmp
subb
imul
jl
imul
arpl
cmp
mov
pop
xor
scas
pop
mov
call
sub
in
insb
scas
mov
inc
mov
sub
imul
loopne
sti
pop
sbb
outsl
pop
xchg
pop
or
loopne
pop
cwtl
sbb
xchg
std
jbe
cltd
lret
popa
les
mov
cmp
cld
lods
arpl
fs
mov
jmp
incl
icebp
std
adc
adcl
mov
push
in
rclb
mov
inc
ds
dec
and
xchg
test
ja
push
dec
stos
xlat
stos
add
jns
addr16
repz
jle
mov
pushf
inc
loopne
mov
jmp
mov
js
xchg
adc
mov
push
ss
iret
dec
test
fstl
xor
in
mov
pushl
push
xchg
mov
and
cmpsb
inc
pushf
mov
sub
cli
sbb
xor
xchg
xchg
pop
in
pop
inc
lods
lds
cld
pop
lods
movsl
arpl
stos
mov
test
js
and
scas
lret
sbbb
mov
test
aad
rcrb
pop
and
adc
pop
inc
pop
cld
push
lret
mov
sub
loopne
pop
cwtl
das
xchg
sub
cmp
rcrb
js
repnz
test
adc
xchg
and
jle
push
fdiv
mov
pop
fmulp
popf
mov
sbb
jg
sub
popa
cmp
js
xchg
xchg
jns
push
test
mov
mov
movsb
push
mov
jge
add
mov
fdivrs
cmp
pop
dec
jae
daa
and
lods
mov
adc
push
arpl
push
cmc
dec
add
jno
sarb
push
pusha
js
inc
loope
sub
jl
push
push
bswap
jp
lahf
xchg
enter
test
out
popa
or
mov
lods
and
out
test
fs
pop
xchg
and
push
pop
or
xchg
sub
pop
es
lods
sub
cmpsb
cwtl
mov
push
mov
pop
pop
mov
jmp
and
inc
xor
sahf
cmp
insb
mov
pop
cwtl
addb
outsl
xor
das
clc
adc
jmp
xor
lret
lret
adc
xor
aas
lahf
int3
mov
dec
adc
pop
jo
das
sbb
inc
lea
cmovp
mov
insb
sub
bound
int3
inc
push
mov
jmp
sbb
addr16
fwait
inc
arpl
iret
mov
add
movsb
and
testl
pop
xor
lods
mov
js
sub
jecxz
outsb
stos
outsb
pusha
adc
cmpsl
and
ljmp
adc
movl
ljmp
mov
bound
lret
mov
jge
push
shl
shrl
jl
lods
cli
sub
dec
jno
pop
mov
jae
xor
pushf
mov
push
or
and
arpl
test
nop
nop
repz
lods
insb
and
xor
scas
rcrl
insl
fcmovnb
xlat
add
inc
lods
add
mov
mov
mov
adc
pop
scas
pushf
jns
ss
stos
sbbb
adc
call
scas
pop
mov
test
jg
adc
xchg
mov
mov
ret
sbb
xchg
ds
in
push
inc
sbb
mov
repnz
xchg
inc
mov
das
or
dec
repz
and
imul
leave
fs
iret
xor
lea
xor
adc
nop
fs
jb
push
jge
lret
arpl
inc
adc
cmp
xor
test
shlb
out
test
mov
stos
loop
bound
fadds
xor
stos
jnp
je
jae
movsl
sub
mov
mov
hlt
mov
xchg
sbb
add
imul
out
jg
jb,pn
mov
or
in
iretw
loopne
pop
or
mov
stc
mov
in
jbe
popa
mov
mov
repnz
fwait
adc
jns
pop
ret
cltd
pushf
bound
fcomi
pop
andl
xchg
and
adc
daa
imul
sub
cs
mov
and
xorb
inc
jecxz
xchg
xchg
xor
inc
mov
xchg
jle
fwait
mov
loop
ficoms
jbe
pushw
xor
mov
mov
aas
xchg
into
sbbb
loope
adc
hlt
xchg
push
xchg
insl
push
mov
jmp
je
inc
push
jl
aas
cmp
and
fld
dec
push
nop
ret
mov
mov
fwait
bound
lea
rclb
pop
xchg
and
dec
sbb
and
in
jmp
push
ret
test
xor
insl
sbbb
outsl
push
ret
gs
sub
pop
push
dec
cmpsb
sub
mov
xchg
rcll
mov
fnstenv
cmp
enter
out
dec
imul
int3
push
subb
push
imul
jle
mov
jo
cmp
mov
xchg
mov
sbb
add
in
movsb
xorb
enter
in
push
fldl
lea
popf
mov
jecxz
cmpsb
call
add
push
outsl
dec
mov
cli
add
imul
mov
pushw
ret
mov
loop
mov
mov
inc
popa
xchg
mov
outsb
in
mov
xor
rol
cmp
pop
push
mov
push
xchg
push
outsb
dec
pop
inc
faddp
xor
pop
sbb
out
pusha
dec
insb
popf
inc
outsl
movsb
lret
in
mov
sub
shll
inc
mov
fsubrl
out
jge
out
dec
pop
ja
sahf
inc
test
pop
mov
lret
add
xor
mov
es
ficoml
add
mov
pop
jmp
jns
sahf
out
mov
xor
and
sti
inc
shlb
xor
lock
jo
sbb
mov
lea
mov
repz
mov
rcl
xor
arpl
cwtl
sub
cmp
test
or
sarb
test
xchg
mov
jns
push
sub
test
add
lods
xor
mov
arpl
dec
fs
stos
jb
cmp
lahf
and
lods
lea
icebp
dec
jp
xor
cmp
mov
insb
outsb
inc
das
and
addl
sub
les
into
xchg
mov
movsb
stos
jne
jno
pushf
outsb
jae
sahf
sub
in
in
add
xor
add
iret
js
xchg
mov
je
pop
test
mov
js
mov
fnstenv
test
cmp
dec
movsb
mov
xorb
jmp
stc
push
push
fs
fs
insb
lods
adc
mov
cmp
pop
fs
cld
sub
notl
mov
mov
or
call
mov
pusha
add
xor
fisubl
pop
push
mov
sbb
adc
aas
scas
and
mov
jo
or
not
imulb
xor
xor
test
pop
and
stos
jnp
mov
pop
mov
adc
adc
sub
test
xchg
fwait
lcall
je
sub
data16
mov
lock
out
sahf
aaa
scas
mov
xchg
pop
sbb
push
jns
outsl
out
cld
nop
ret
aam
cwtl
fwait
aas
jno
out
fs
xchg
dec
div
std
fildll
sub
int3
push
shrl
ret
stc
test
push
sbb
je
add
sbb
dec
loopne
pop
ljmp
sub
cwtl
inc
inc
lea
aaa
outsb
imul
not
fs
sub
cmp
das
popf
ds
pop
cmp
dec
mov
pop
jae
dec
or
cmp
idivb
rcrl
lods
push
in
xor
mov
pop
jb
pushf
cld
imul
pop
push
sti
inc
adc
pop
mov
mov
pop
push
fistpl
jmp
pop
int3
add
xchg
xor
push
mov
enter
dec
imul
ss
jl
popa
test
imul
lcall
or
or
adc
inc
or
dec
outsb
dec
xchg
leave
sub
outsl
push
imul
or
mov
mov
adc
push
or
fidivl
fs
cmc
jno
lret
inc
movsb
push
mov
fs
lahf
mov
mov
pusha
and
pop
adcb
mov
arpl
jp
sarl
test
inc
sarb
sti
push
sub
xchg
int3
out
in
dec
imul
sub
and
cmp
dec
pop
cltd
lea
dec
mov
sarb
dec
push
pop
test
mov
frstor
into
push
add
mov
push
add
mov
and
lea
ret
in
clc
ret
in
loopne
inc
mov
cmp
add
fldt
xor
inc
mov
and
int3
fcompl
in
mov
popa
mov
pop
cld
dec
xor
ja
hlt
movsb
idivl
sub
jecxz
xadd
sub
jb
fmull
mov
aas
push
lock
mov
mov
sub
int3
sbb
inc
shrl
xor
dec
xchg
and
push
shufps
ficompl
dec
je
aad
mov
test
jmp
or
pop
inc
mov
xlat
lock
sub
scas
adc
pop
out
repnz
movsl
dec
mov
mov
pop
adc
push
jo
push
cwtl
pop
pop
mov
jecxz
pop
enter
add
int3
loop
or
out
aas
mov
gs
sbb
fs
xchg
insb
shll
sar
das
adc
push
push
and
in
add
xchg
mov
cmp
ss
adc
rorl
push
or
arpl
enter
push
or
jo
adc
test
leave
inc
aam
mov
mov
je
jb
lods
jmp
mov
loop
sub
push
test
cmc
fs
lods
pop
adc
and
jmp
test
ret
xchg
shlb
cs
fs
jl
fisttps
mov
arpl
inc
pop
add
jnp
xchg
js
xor
enter
cli
push
mov
or
mov
xchg
movsb
popf
dec
xchg
mov
xchg
adc
ret
lea
popa
das
mov
sub
mov
mov
mov
test
lods
cld
cmp
cmp
sub
jge
dec
mov
popa
arpl
cmpsb
mov
mov
adc
in
xor
pushf
pop
jp
loop
xor
or
mov
xor
add
xchg
int3
mov
sahf
dec
push
iret
hlt
fisubrs
add
add
sbb
fs
nop
gs
xor
hlt
outsl
mov
fwait
push
aam
stc
bound
jo
push
test
push
movsb
nop
sahf
nop
or
lret
out
or
and
hlt
sub
inc
sub
aad
push
jle
in
test
pushf
ret
addr16
sti
fmuls
fdivs
inc
popf
fs
push
lock
mov
lahf
jbe
mov
movl
aaa
cmp
dec
mov
test
pop
scas
es
lret
sahf
cmpsl
aaa
mov
cmp
pushf
push
mov
aas
jp
aad
out
pop
aaa
adcl
int3
in
xor
stc
dec
out
inc
rolb
jne
push
sbb
pop
mov
cld
loope
ja
test
in
add
int3
adc
sub
cmpsl
lret
ret
sbb
icebp
cmp
shl
sub
std
insl
jb
repz
movsb
cli
xchg
fsubr
and
addl
cmpsl
push
inc
lcall
adc
xor
mov
insb
push
xor
lods
dec
ret
mov
cmp
je
fadd
dec
sbb
mov
mov
nop
movsb
loopne
scas
arpl
inc
lret
cmp
outsb
sahf
or
mov
jne
mov
lcall
mov
mov
lret
and
push
loopne
fwait
es
insl
or
inc
ror
pop
loopne
leave
ss
push
into
xor
lods
jno
aas
pushl
mov
dec
xor
scas
test
xor
xor
xchg
outsl
jnp
adc
mov
leave
pop
scas
cwtl
sarl
and
hlt
mov
scas
lock
int
shlb
mov
and
gs
loopne
fs
inc
push
scas
stos
sbb
and
dec
jbe
sbb
insb
xchg
int
mov
sub
xor
nop
pop
out
cmp
loopne
pop
jae
sbb
push
xor
mov
mov
and
clc
pop
das
mov
cli
cmc
inc
add
adc
sbb
sbb
repnz
iret
add
mov
je
sub
test
lods
imul
push
in
scas
movsb
cmp
jb
inc
sub
dec
sbb
or
jno
inc
das
dec
xchg
inc
ds
je
cmp
fidivrs
push
xchg
mov
pop
dec
lods
mov
pop
ss
xor
fs
jle
jo
subb
jb
cs
jp
or
pop
xor
scas
mov
cmp
rcrl
arpl
pop
or
rolb
rolb
push
int
add
inc
lods
leave
out
pop
xchg
dec
sub
cmpb
jno
dec
pop
pop
rcrb
push
pusha
pop
lret
nop
adc
mov
cli
test
in
scas
inc
inc
jl
mov
or
nop
adc
jg
mov
je
ss
jmp
mov
pop
into
mov
cmp
or
mov
es
icebp
inc
add
xor
out
loope
mov
mov
lea
xorb
jmp
test
jb
xor
and
sub
sarb
cmp
push
mov
enter
or
xchg
pop
dec
pop
loop
xchg
pop
rclb
loopne
jne
xchg
test
jns
ss
daa
pop
cmp
and
lock
pop
pop
scas
cli
push
pop
xchg
movsb
adc
loop
mov
xchg
pop
mov
test
xor
pop
jecxz
fs
mov
icebp
sbb
ja
fbld
ja
movsl
mov
lods
fistpl
sbb
jae
cld
xor
test
dec
mov
nop
xchg
or
xor
sub
loope
xor
dec
xor
cmpsl
dec
cmp
in
fwait
mov
imul
out
xchg
or
je
mov
sub
scas
hlt
jge
aas
lods
div
lock
add
cltd
mov
leave
sbb
cmc
mov
or
and
mov
cmp
jbe
lods
cld
lods
test
stos
lea
cmp
sub
cmp
inc
sub
loop
mov
sbb
mov
and
arpl
sub
pop
xor
imul
cmpsl
or
xchg
mov
jb
xchg
shrb
mov
test
call
mov
in
cmp
mov
popa
mov
stc
out
mov
stos
out
mulb
xchg
scas
sti
bound
in
pop
stos
sub
pusha
xchg
in
fdivl
jo
lods
xor
bound
andb
imul
sub
jp
mov
mov
xchg
mov
add
mov
pop
inc
je
test
outsl
push
insl
inc
hlt
idivl
adc
stos
fcmovne
xlat
scas
mov
cmpsl
movsb
icebp
ret
hlt
xchg
sub
lds
aam
and
inc
stos
xchg
jecxz
xor
xor
push
jne
fld
cmpsl
adc
int3
bound
push
sub
sub
sbb
into
xor
int3
add
adcl
inc
pop
das
aas
mov
fdivrs
cmpsb
leave
mov
mulb
pop
add
jge
outsl
xchg
fsubrl
pop
lock
mov
int3
sub
inc
data16
xor
movsb
ret
dec
xchg
in
pop
enter
neg
cmpsl
jne
jne
fcoms
loopne
adc
pop
scas
sub
sub
fcoml
push
pop
lcall
mov
into
sbb
mov
jno
sub
jo
bound
dec
mov
lds
xchg
push
and
rcr
fidivrl
stos
dec
je
hlt
inc
int3
sub
pushf
sti
aam
inc
pop
pop
and
call
fdivrs
int3
ret
fs
mov
sti
inc
nop
and
mov
mov
bound
jo
xor
adc
mov
push
in
xchg
dec
ret
mov
fsubrl
pop
push
xchg
in
xchg
adc
mov
test
andb
ffreep
dec
pop
mov
nop
je
outsb
jno
in
xor
lock
test
movsb
push
mov
xlat
and
js
inc
incl
jne
loop
pop
fstpl
add
cmp
mov
ja
mov
test
negl
stos
mov
cmpsl
insl
pop
loopne
inc
sub
test
int
adc
and
jno
loopne
ret
cmp
mov
dec
sub
bound
inc
and
dec
insb
pop
add
cltd
and
adc
and
popa
fs
sar
inc
daa
mov
or
cli
pop
gs
fnsave
xchg
ss
or
repnz
call
pop
inc
dec
add
inc
dec
cmp
jbe
mov
xchg
pop
ljmp
pushf
inc
subb
gs
mov
sub
jle
movl
loope
adc
sub
mov
sahf
leave
clc
jl
arpl
cmpsb
jns
jg
mov
leave
push
js
insl
xor
mov
sbb
xchg
sbb
push
add
or
pop
mov
sub
icebp
pop
nop
cmpl
push
int3
xor
sti
mov
sub
mov
je
outsl
mov
mov
mov
mov
adc
lods
xor
popa
ret
mov
or
enter
cmc
jb
pop
xor
inc
ja
je
mov
aad
jl
into
xor
add
mov
fsubrl
sbb
xchg
fs
push
aaa
lret
movsl
xor
mov
sub
mov
shl
xchg
imul
mov
xchg
xchg
movsb
lcall
aas
lods
out
xchg
leave
stos
out
sbb
dec
adc
push
jle
into
inc
push
ss
call
lods
mov
insb
popl
cltd
xor
in
aas
cmpsb
xchg
inc
pop
aad
or
fsubs
mov
add
mov
or
insl
dec
xchg
lea
incl
das
inc
dec
dec
andl
add
lcall
push
iret
mov
icebp
movsl
das
cli
cmp
imul
mov
out
loop
push
pushf
pop
sbb
xor
into
xorb
xchg
mov
stc
xchg
sub
ret
dec
jp
ja
sub
es
rcrl
xchg
mov
aad
mov
cmp
push
cli
mov
push
jmp
jl
inc
dec
xchg
jo
xlat
pushf
int3
insl
imul
js
frstor
int3
mov
or
in
icebp
inc
mov
scas
int3
pop
scas
cli
addb
aaa
into
pop
mov
js
sbb
and
and
mov
ja
adc
out
push
mov
mov
mov
fdivrs
test
lret
arpl
mov
mov
mov
jnp
cmp
sbb
imul
pop
pop
pop
pop
cmp
in
dec
mov
mov
sub
aas
fwait
js
or
mov
movsl
xchg
scas
loope
cmp
mov
inc
mov
aam
cwtl
icebp
xor
xor
movsb
xchg
xchg
sbbl
cmp
cmp
roll
ret
arpl
test
lea
lock
test
add
aaa
cmpsl
jnp
ss
xor
jae
ret
sbbl
js
fsubrp
hlt
cmc
push
fwait
enter
push
or
mov
inc
push
add
xor
adc
jmp
bound
outsl
sarb
jno
imul
arpl
sub
mov
loope
lods
test
lahf
push
jecxz
repnz
popf
and
sub
leave
bound
cwtl
push
jle
jns
mov
pop
xchg
pop
outsl
mov
mov
sub
mov
insb
sbb
fistps
dec
into
test
js
stos
aaa
lods
sub
cwtl
andb
cld
or
fstpt
je
jns
pop
aas
lcall
lock
ja
dec
mov
shl
pop
pop
popa
jmp
pushf
xor
sbb
cmc
loop
addr16
testb
inc
inc
push
repz
test
ss
ss
pop
xor
jo
mov
mov
js
lea
jmp
mov
sub
pop
xor
and
fiaddl
push
sub
outsl
or
sub
mov
addl
cmc
cltd
jmp
aas
outsw
imul
cmp
mov
push
loopne
imul
ret
add
out
xor
int3
inc
or
cmpb
loopne
les
stc
sti
stc
sbb
cmc
push
dec
pop
subb
xor
js
push
insb
enter
mov
mov
add
int3
lret
sub
leave
cmp
loopne
arpl
mov
sbb
fistpl
mov
fadd
test
adc
mov
loope
and
lret
popf
fldl
pop
daa
inc
add
mov
bound
fs
jp
pop
or
fs
lods
leave
scas
cmc
jp
iret
jb
cmp
jne
pop
movsb
mov
nop
cmpsl
or
or
jo
stos
sub
add
mov
std
call
nop
inc
or
movsl
setge
jecxz
ja
sbb
push
cmpsl
xchg
in
jb
mov
out
dec
xchg
jbe
loope
je
mov
insb
test
push
aas
scas
insl
bound
xlat
add
mov
lcall
int3
std
add
ds
jb
add
lea
dec
add
das
cld
pop
inc
inc
lock
cmp
adc
in
repnz
out
je
sahf
xchg
mov
dec
dec
inc
or
sbb
fcompl
dec
or
mov
xchg
inc
popf
scas
jae
xor
jo
inc
or
arpl
call
leave
mov
mov
mov
lcall
dec
scas
jg
cmc
daa
mov
push
jge
jbe
sub
cmp
test
lahf
sti
insb
sbbb
cld
loop
mov
adcl
mov
jns
cmp
sbb
cmp
jo
idivl
test
xchg
leave
arpl
scas
clc
inc
mov
cmpsb
mov
adc
popl
leave
jg
lret
cmp
xorb
xchg
inc
js
mov
sub
rcl
stos
mov
lods
cmc
or
iret
push
icebp
pop
lcall
fisubs
fbstp
and
lret
or
sbb
xor
scas
mov
cmp
xor
sub
adcb
jp
mov
scas
mov
inc
mov
xchg
mov
movsl
sub
popf
cmp
mov
repnz
loopne
cmc
loopne
jo
enter
pop
sub
clc
sbb
or
bound
dec
jmp
scas
imul
scas
arpl
add
and
test
out
int3
cmpsb
and
sbb
stos
mulb
jmp
in
fiaddl
and
mov
je
inc
sub
mov
aas
cmpsb
dec
adc
lock
icebp
das
js
cwtl
mov
jbe
popf
js
test
cmp
aas
int3
int3
adc
and
cmp
je
xchg
dec
fwait
mov
and
lods
mov
pop
je
jmp
dec
arpl
add
test
mov
sbb
scas
mov
test
std
fmuls
pusha
aaa
leave
and
mov
dec
js
je
aam
test
popf
dec
scas
push
je
or
mov
loop
sbb
mov
and
mov
and
adc
lods
or
sub
fstpl
pop
mov
xor
push
push
addb
mov
insl
test
shr
xchg
xchg
sub
mov
add
jb,pn
pop
insb
fcompl
nop
jnp
lret
xor
int3
aaa
ficoms
xchg
and
orb
mov
push
sarb
mov
sti
xchg
push
cmp
mov
test
ds
mov
das
push
jmp
lock
bound
ret
inc
mov
subb
aas
scas
repz
xor
movsl
jle
mov
jp
dec
cld
mov
lahf
mov
test
sub
test
sub
stos
push
hlt
stos
mov
jle
movsl
sahf
mov
mov
imul
outsl
scas
push
mov
mov
scas
scas
mov
std
xchg
fwait
scas
lods
jecxz
cmp
sbb
and
test
jns
xchg
mov
pop
daa
dec
jg
inc
push
sti
dec
je
xlat
je
rorl
dec
scas
daa
inc
mov
mov
or
cli
pop
push
lcall
xor
jge
cld
mov
mov
das
inc
jae
xor
aas
sahf
js
mov
cmp
mov
push
sbb
jns
rorl
fwait
mov
push
ljmp
and
rorb
push
mov
mov
sbb
jl
scas
push
or
and
cmp
sbb
mov
pusha
mov
pop
popa
imul
push
xchg
in
push
push
and
pop
mov
jb
xor
loope
push
outsb
jae
xchg
mov
mov
paddd
lds
jb
lods
ds
clc
in
repz
popa
popa
out
adcb
jg
stc
sub
jmp
jl
dec
push
push
iret
popa
into
cmp
adc
addr16
mov
xor
dec
mov
enter
sbb
ret
imul
pop
pop
sub
je
arpl
aam
cmp
lcall
test
mov
ret
and
test
and
testb
inc
sub
xchg
add
pop
xlat
ret
lods
xlat
jmp
pop
loopne
mov
imul
and
iret
cmpsl
mov
ljmp
cmp
jae
cmp
pushf
pushf
pop
fwait
sub
xchg
into
mov
daa
test
mov
mov
xor
adc
or
lods
xor
jle
sub
bound
movsl
dec
addr16
mov
pop
test
add
scas
jmp
movsb
mov
jno
mov
or
aas
std
jo
je
outsb
inc
outsl
mov
outsb
jb
jle
sub
xchg
into
sub
inc
and
mull
psubusw
sub
lods
aaa
pop
lods
scas
fwait
addr16
fwait
cltd
cmp
test
scas
test
lods
jl
or
lret
pop
in
xor
mov
push
loopne
sahf
xor
lods
daa
inc
fldl
add
and
and
imul
jo
cltd
nop
cwtl
mov
mov
movsb
mov
std
mov
insb
addr16
pop
sub
nop
aaa
fsub
mov
repnz
in
dec
sbb
cld
pop
stos
fsubl
das
mov
fnstsw
out
test
dec
xor
std
imul
mov
jo
out
imul
adc
in
rclb
shlb
shl
aad
sti
mov
loop
xor
stos
adc
movsl
xchg
lcall
insl
faddl
sub
sub
sbb
test
icebp
dec
mov
mov
jno
add
jle
mov
push
cmp
cld
stos
movsb
pop
outsb
stos
mov
mov
stos
ss
and
mov
pop
mov
mov
pop
shll
repnz
xor
mov
cmpsb
pop
and
mov
arpl
cmc
lds
mov
xor
and
xor
xchg
repz
dec
ja
jecxz
fcmovnb
outsb
scas
add
test
pop
adc
mov
in
sub
in
test
les
in
dec
popa
cmc
and
pop
jno
lcall
or
aam
sub
test
loop
jns
scas
push
add
push
int3
andb
xchg
sub
call
test
movsb
cmp
call
xchg
inc
cmp
mov
xchg
mov
jnp
or
pushf
xchg
xchg
xchg
cwtl
aas
sub
scas
cmpsb
int3
popf
bound
arpl
and
xor
pusha
jae
loop
sub
repz
outsl
sub
xor
sbb
or
push
rolb
imul
pop
call
repz
int3
push
insb
outsb
test
ret
mov
push
push
sbb
aaa
inc
movsb
inc
xor
data16
pop
jns
arpl
insb
push
inc
das
pusha
pop
xchg
js
mov
jne
leave
xor
mov
jle
rorb
and
add
fstpt
cmpsl
les
xchg
cmc
xchg
jns
mov
out
mull
pop
lods
in
daa
fs
push
insb
cmpsb
cltd
mov
cmpsb
scas
sbb
out
lods
dec
je
mov
fs
jbe
jo
ja
or
mov
aam
mov
std
dec
xor
fsubl
daa
lcall
adc
and
sbb
xor
ret
dec
outsl
test
cmpsb
push
dec
sar
sub
inc
std
jb
fistps
test
cmp
jp
lret
dec
xchg
and
sahf
pop
orb
add
or
arpl
in
cmc
xor
je
pushf
nop
in
sbb
mov
dec
mov
sbb
push
jne
mov
xchg
and
inc
pushf
or
xchg
aas
dec
mov
out
pop
fsubl
mov
imul
mov
int3
int3
stos
sbb
ret
jo
arpl
scas
inc
add
ja
xor
cs
jle
adc
out
inc
sub
stc
sbb
icebp
mov
enter
stos
shlb
mov
jg
push
aam
pop
fbstp
mov
xchg
and
call
cmp
inc
push
and
add
push
push
data16
insb
je
mov
push
not
cli
nop
xlat
int
in
pusha
cmp
push
push
in
imul
fimuls
out
fnsave
mov
pop
push
push
lea
aam
test
aas
adc
movsl
jns
sub
aad
pop
xor
push
ss
jbe
repnz
and
sti
test
jns
xchg
sub
lea
mov
insb
or
nop
add
gs
mov
sbb
cmp
xchg
mov
imul
adc
fwait
mov
mov
int3
subb
jecxz
scas
in
ss
sub
cmpb
jae
adc
adc
mov
lret
mov
lret
out
xlat
sub
pop
jg
mov
sub
mov
mov
and
repz
xlat
lret
push
stos
aaa
test
xchg
mov
jl
insb
out
addr16
pusha
add
in
adcb
pop
rolb
mov
sbb
insl
xchg
push
outsb
pop
mov
sbb
xlat
fs
hlt
xor
or
pusha
adc
or
lret
nop
insb
daa
mov
mov
inc
andl
repz
call
push
pop
fwait
sub
cs
insl
xor
cmpsb
dec
push
push
orl
cmp
cmp
mov
sub
int
dec
addr16
xchg
pop
aad
sub
insb
jl
loopne
loop
stos
insl
sbb
sub
insb
jmp
inc
pushf
adc
jb
pop
insb
stos
pop
or
jo
outsb
bound
lea
mov
std
adc
pop
insl
out
push
mov
int3
xchg
aas
enter
fs
mov
mov
loopne
repz
iret
adcl
je
sarl
mov
popf
mov
pusha
pop
jno
les
in
mov
hlt
jg
mov
enter
push
mov
push
xor
int3
xorb
mov
mov
clc
inc
in
sub
xchg
jbe
xchg
jnp
test
scas
jb
mov
stos
xchg
lea
int
repnz
add
pop
or
rcrb
xchg
adc
call
aam
es
cwtl
jg
pop
inc
ret
xor
orl
xor
push
pushf
bound
aaa
ror
cltd
mov
mov
in
ljmp
push
fmul
repz
lea
inc
ja
xchg
xor
pop
bound
xor
mov
lret
add
mov
ss
adc
imul
nop
stos
imul
pusha
xchg
outsl
cli
es
cmpsl
cld
jae
dec
sub
dec
push
sub
sbbl
xchg
mov
sub
mov
inc
mov
loop
jle
lods
test
and
fstpt
add
lods
scas
in
outsl
in
int
daa
inc
push
pop
pop
mov
cmp
xor
xchg
pop
adc
clc
jge
xchg
nop
xchg
inc
incl
call
lret
nop
xor
cltd
out
leave
dec
push
jnp
xchg
xlat
fwait
pop
sbb
popa
dec
add
pop
mov
push
mov
aas
enter
das
fnstsw
adc
stos
pop
mov
cltd
push
mov
pop
sbb
test
lret
mov
push
pop
leave
test
test
sbb
leave
cwtl
mov
ret
stc
jne
cmpsb
loopne
xchg
stos
fidivs
push
add
cmp
jne
pushf
push
les
lods
aaa
cli
mov
lods
mov
and
sub
movsl
sub
lcall
xchg
mov
sub
xor
shll
pop
insb
popf
inc
sbb
mov
dec
loop
mov
mov
cmp
aam
pop
pusha
pause
jge
sub
mov
data16
add
or
lods
out
test
pop
inc
popf
icebp
daa
and
xchg
rcrl
add
stos
stc
shrl
lret
and
push
xchg
loope
jecxz
push
fcoms
sub
orl
popa
and
loop
sub
jne
add
and
and
sub
mov
mov
mov
mov
stos
dec
popf
pop
pop
xor
shlb
lret
divl
cmpsb
outsl
dec
sub
push
push
arpl
call
fldt
jmp
pop
int3
mov
cwtl
rcrb
in
daa
shl
out
fisubrs
mov
je
adc
xor
mov
stos
test
insb
xor
aaa
sbb
mov
fldt
inc
dec
mov
cltd
pop
lods
pop
iret
lret
pop
push
push
pop
ljmp
pop
sbb
repnz
arpl
je
sub
or
repz
ljmp
jae
outsl
sbb
push
pusha
sar
cmpsl
pop
xchg
pop
insb
popf
int3
dec
push
push
lret
ret
addb
mov
jns
pusha
fdivs
push
add
in
out
sahf
pop
cmpsb
mov
fs
shlb
jl
orl
mov
lods
jle
stos
sub
and
adc
fidivrs
sub
lds
andl
aam
jns
push
pcmpgtb
xlat
dec
je
imul
mov
pop
sub
daa
and
adc
lret
lock
push
sub
rorb
jo
push
cwtl
dec
hlt
sub
clc
sub
daa
cwtl
mull
jbe
xorb
sub
fwait
mov
shl
popa
stos
jns
mov
jecxz
bound
push
jne
and
popa
insb
xor
fs
int3
jl
mov
in
adc
lahf
sbb
inc
push
pop
shlb
int3
insb
jp
jp
addb
mov
mov
dec
pop
mov
mov
cmp
sub
xor
sbb
xchg
mov
jmp
popaw
sahf
lods
sti
sub
outsl
fwait
popf
int
mov
xchg
nop
lods
cmpl
leave
pop
arpl
lcall
mov
mov
push
ss
hlt
xor
push
adc
sub
cmp
push
mov
gs
and
xor
sbb
jp
mov
in
mov
test
xchg
pop
andb
rorl
insb
fwait
lahf
fstps
lahf
push
movsl
push
pushf
arpl
jmp
mov
inc
test
inc
cs
add
ret
addr16
sub
mov
cmpsb
lods
hlt
jl
pop
jecxz
out
mov
inc
loop
mov
outsl
adc
xchg
in
rolb
cld
repnz
and
out
jle
inc
imul
mov
sahf
cmpsl
push
and
int
stos
mov
xchg
add
loopne
nop
and
rol
and
dec
stos
cmp
shld
lods
in
movsb
push
pop
xchg
pshufw
shrd
movsb
add
sbb
bound
cmpsb
mov
enter
daa
stos
clc
nop
in
jo
rcr
movsl
sub
popf
jns
shlb
and
xor
mov
inc
out
xchg
test
mov
icebp
xor
add
in
dec
test
mov
jnp
pop
pop
adc
sub
cmp
jb
and
add
push
movsl
and
inc
int3
xchg
outsl
mov
cld
cmp
stos
sub
ss
sub
loope
add
data16
push
outsb
icebp
sub
xchg
sub
shl
gs
sub
sub
int3
sahf
popf
jns
les
addr16
test
lea
xchg
pusha
jnp
xor
ljmp
jnp
mov
push
ds
out
mov
cmc
loopne
lret
lods
push
out
mov
out
idivl
jno
xor
push
xchg
mov
fsts
call
cwtl
pop
aaa
dec
je
out
popf
mov
int3
mov
scas
xor
popf
adc
mov
mov
mov
out
inc
addr16
out
xchg
lea
ss
mov
jg
push
jecxz
hlt
mov
jbe
hlt
lds
sbb
aad
add
lods
mov
xor
or
es
pop
mov
mov
xor
jmp
test
add
push
jg
pop
aad
push
mov
or
inc
or
xchg
pushl
scas
data16
adc
inc
push
movsb
sub
cmp
in
mov
repnz
adc
js
les
popf
lret
mov
mov
ret
mov
sahf
movsl
sub
jo
pusha
loope
lds
cmpsl
pushf
sub
push
aas
pop
cwtl
inc
shrl
jmp
pop
xchg
mov
stos
fcmovnb
mov
push
lds
mov
dec
xchg
xchg
pop
jmp
dec
ret
shrb
push
bound
sub
or
lds
sbb
jns
xor
mov
fnsave
sub
jmp
xor
leave
jle
push
pop
pop
jo
xchg
mov
push
loopne
mov
xchg
andb
icebp
std
cli
out
pop
stos
lret
push
mov
fwait
dec
stos
bound
lahf
add
jno
lret
mov
fistpl
dec
in
mov
imul
pop
dec
fcomp
lds
fcompl
cmp
xchg
jo
cmp
or
fidivrs
push
mov
das
fcoms
je
fwait
pop
ds
in
daa
outsb
bound
pop
loopne
xchg
ss
inc
lcall
jb
ss
scas
cmpl
xchg
cmp
xor
inc
push
lcall
xor
mov
dec
pop
mov
lea
xor
and
jge
add
add
jns
sbb
lock
pop
pop
dec
add
js
lods
cltd
popa
xchg
or
cltd
bound
pusha
push
andl
mov
icebp
daa
imul
sbb
jo
sbb
pop
jbe
bound
lods
inc
jl
das
push
stos
or
or
add
jae
icebp
fst
and
lods
pusha
mov
in
xchg
dec
pop
cmp
popf
dec
xor
push
rol
push
sbb
xor
and
inc
jbe
adc
or
fstps
insl
lret
fs
cli
mov
mov
xchg
je
fsubr
movsb
jmp
fnstsw
add
aas
mov
pop
and
adc
test
sub
je
dec
data16
xor
adc
pop
and
data16
mov
bound
fs
imul
cld
mov
xor
iret
movsb
push
lock
sbbb
hlt
ret
mov
stos
sub
repnz
xchg
dec
mov
adcl
pop
mov
sub
mov
aad
mov
iret
xchg
notb
mov
pop
jge
in
lods
xchg
push
mov
idiv
sbb
outsb
mov
mov
fbld
pop
test
in
scas
mov
mov
outsb
mov
popa
mov
pop
in
int3
or
mov
xchg
popa
hlt
lret
mov
mov
xchg
inc
adc
xor
sbb
insb
mov
ljmp
gs
sub
mov
add
popa
pop
sbb
loopne
inc
push
jl
sub
aas
mov
xchg
out
leave
xchg
inc
es
movsb
adc
mov
outsb
dec
imul
insb
mov
add
cmp
mov
sbb
jnp
aad
pop
and
nop
xchg
mov
cli
pushf
push
xchg
inc
icebp
dec
cmpsb
lcall
jl
imul
pop
adcb
mov
pop
mov
ss
inc
loop
stos
sub
pop
jns
icebp
or
dec
sbb
add
jns
sub
add
ss
or
mov
sahf
dec
cwtl
adc
and
adc
mov
outsl
test
movsl
xorl
dec
mov
adc
jno
fdivrl
inc
mov
rcll
cmpsb
aaa
lea
jl
inc
xor
push
cmpsb
jo
dec
mov
test
sbb
outsl
mov
sub
test
jmp
mov
push
push
int
dec
test
dec
mov
bound
dec
sub
pop
xor
mov
insb
insb
fcoms
dec
sbb
jp
push
cltd
pop
pop
jg
arpl
enter
ficoms
sbb
int
outsb
inc
cld
cmp
push
pop
jb
scas
adc
lahf
mov
xchg
insb
outsl
int3
mov
lock
int3
int
pop
filds
fsubrp
inc
movsb
cmp
iret
das
push
add
inc
repnz
outsb
xchg
sub
imul
add
jno
das
insb
int
sbb
xchg
js
push
pop
stos
in
push
push
mov
jecxz
rorb
and
das
mov
je
jnp
cmp
jg
dec
add
push
fldlg2
lods
inc
push
orb
fwait
popa
and
xchg
sbb
cmpsl
xor
cmp
jmp
scas
jecxz
push
test
dec
fmull
lods
lret
pop
mov
ret
adcb
sahf
movsl
mov
loopne
xchg
or
and
das
mov
jbe
inc
xchg
pop
loop
sbb
in
sub
cmpsl
mov
mov
ror
sti
inc
stos
leave
mov
xchg
push
cwtl
mov
inc
push
cmp
aas
push
and
fldl
nop
xor
adc
mov
data16
pmaxub
and
jns
mov
push
shlb
jbe
rcrb
testl
test
lcall
and
inc
push
and
shlb
iret
xor
and
outsl
inc
add
dec
jecxz
sub
imul
adcl
in
bound
sahf
arpl
data16
in
lret
mov
std
fmull
aam
mov
test
jecxz
xlat
jge
daa
test
ljmp
push
mov
aad
lods
adc
rclb
pop
scas
adc
scas
cmc
subl
mov
lods
push
mov
pusha
mov
xor
js
push
mov
int3
scas
add
push
inc
ret
stos
jmp
mov
jmp
lahf
cmp
xchg
inc
fistps
pusha
aas
arpl
jne
cld
xor
fadds
dec
mov
sub
push
test
xor
cmc
loopne
push
push
in
inc
mov
je
push
mov
jmp
xchg
leave
mov
sbb
push
cmpsl
loopne
mov
movl
push
sti
mov
pusha
pop
ret
xchg
lock
add
mov
dec
pop
mov
cld
jnp
out
cli
test
mov
fsubp
popf
mov
shlb
nop
mov
add
adc
fwait
jb
adcb
les
iret
fcoml
inc
xchg
mov
sub
enter
push
mov
xor
mov
and
dec
fcompl
push
mov
pop
hlt
insb
dec
loopne
fs
test
shrb
sbb
scas
or
js
fistps
cmp
mov
jbe
fsub
aad
nop
insb
stos
add
test
andl
sub
data16
out
mov
xor
lock
leave
insl
movsb
or
or
int
mov
mov
mov
mov
aaa
mov
add
cmp
sub
mov
jnp
push
aas
arpl
push
popa
jle
stc
mov
jbe
out
sbb
cs
mov
bound
popf
int3
xor
out
adc
adc
bound
push
sub
repnz
cs
nop
je
xchg
mov
and
popf
xchg
push
out
mov
cmp
inc
lods
dec
jmp
adc
test
je
push
cmp
push
test
mov
xchg
xchg
push
inc
mov
jo
or
xchg
sarl
aas
xchg
add
xchg
pop
cmp
out
push
xor
xchg
xchg
mov
scas
push
cmpsb
fcoms
subb
data16
inc
jno
mov
add
sub
lods
push
cmp
or
inc
mov
lock
out
lods
fs
dec
aaa
pop
mov
add
sub
leave
push
lcall
test
sahf
push
and
pop
pushf
inc
pop
xor
push
loop
clc
test
jno
xchg
outsl
aas
sub
mov
cwtl
and
lahf
int3
rorl
movsb
cmc
movsb
pop
scas
mov
push
insl
insl
aad
lret
cwtl
jb
mov
or
test
pusha
add
and
lods
push
add
pop
lcall
mov
jno
lret
xchg
cmp
jne
ljmp
lahf
and
pusha
aaa
loopne
mov
adc
int3
push
push
inc
add
ljmp
sub
dec
pushf
sarb
and
incb
leave
ss
pop
push
adc
adc
je
mov
fnstcw
mov
lock
push
movsl
fidivl
jb
inc
subb
jnp
xchg
js
xchg
dec
mov
iret
sbb
cwtl
ret
lret
lahf
mov
or
es
xchg
outsb
stos
inc
jle
ret
xor
push
inc
popf
testb
dec
arpl
int3
pop
rorb
pop
mov
xorl
rcrl
lock
mov
xor
mov
or
sti
pop
stc
scas
imul
mov
sub
movsl
cli
arpl
and
sub
movsl
push
lods
mov
ljmp
sub
shll
outsl
xlat
aam
gs
push
in
mov
cmpsb
pop
popa
xor
nop
nop
insl
push
sub
dec
out
xchg
fisttpl
xchg
notl
push
int3
loop
push
xchg
jg
cmp
cmpsl
je
inc
aaa
lods
jmp
pop
mov
pushf
or
sub
aas
outsb
test
jo
popf
gs
in
adc
mov
cmpsb
xchg
and
shrl
int
int
stos
insb
mov
nop
and
adc
inc
xchg
xchg
mov
jge
add
xchg
hlt
mov
nop
jp
pusha
adc
jbe
aas
lahf
hlt
je
push
dec
lods
jnp
lea
xor
loopne
rcrb
cmp
iret
cmpsl
jno
jae
bound
imul
cmp
sbb
jmp
stc
xor
pusha
test
jge
movsb
mov
mov
xor
xor
clc
lret
les
xorb
jbe
mov
bound
fisubrs
jae
mov
lods
sbb
mov
inc
ret
sbb
inc
mov
in
xchg
add
shll
mov
inc
lods
mov
orb
mov
push
movsl
es
xchg
cmp
xchg
push
mov
jl
jo
pop
sub
sahf
mov
sub
mov
lods
je
pop
inc
mov
scas
mov
sub
nop
adc
neg
sti
fs
int3
adcb
jns
stos
sbb
pop
fwait
sub
fs
jmp
fs
mov
imul
mov
add
mov
xchg
mov
ss
mov
jge
xchg
fisttpll
sub
ds
mov
fwait
cmp
repnz
jns
xor
pop
pop
notl
jbe
inc
ds
push
jns
push
mov
fisttpl
pushf
lret
into
jecxz
mov
mov
std
mov
inc
push
rorb
adc
int3
lea
lods
inc
leave
mov
jp
inc
iret
jecxz
sub
bound
pop
loop
rcrl
shlb
or
or
inc
scas
imulb
inc
or
mov
leave
mov
inc
mov
dec
pop
push
pop
inc
sahf
or
xor
or
pop
push
ja
mov
in
iret
das
pusha
sub
clc
lahf
add
in
mov
xchg
adc
mov
lret
test
xchg
je
mov
into
and
inc
mov
inc
je
sbbb
cmc
fsubr
sub
arpl
cmpsb
popa
pop
push
xor
leave
inc
data16
daa
add
movsl
mov
lahf
and
insb
inc
mov
xor
inc
insb
shlb
mov
test
cltd
scas
imull
and
jb
jmp
bnd
addb
ret
jns
cs
jnp,pn
mov
push
mov
xor
stc
daa
inc
cmp
push
push
cmp
mov
mov
stos
dec
movsl
testb
jnp
mov
ss
cld
clc
adc
ret
test
jnp
jecxz
mov
stc
push
lods
bound
mov
pusha
cli
add
pop
stos
pop
insb
push
and
dec
cli
test
imul
mov
cmp
sub
xchg
dec
mov
mov
lahf
rcl
jns
lea
mov
arpl
pop
lret
loop
pop
pop
cli
xchg
mov
adc
mov
or
inc
stos
mov
xorps
pop
inc
bound
jge
push
imul
lahf
mov
pop
dec
jb
add
xchg
mov
lods
test
repz
popl
daa
mov
jecxz
cmpsl
std
dec
mov
das
frstor
outsb
or
jo
lds
lret
pop
aas
sbb
xor
adc
mov
and
and
pusha
adc
or
pop
mov
fstpl
cmpb
sub
adc
leave
loop
out
inc
xor
icebp
pop
test
iret
popa
adc
jbe
add
popf
in
imul
add
mov
mov
mov
sub
mov
popl
ret
lock
cmpsb
xchg
into
inc
mov
ss
cmp
test
cmp
cmpsb
dec
xor
sub
adc
dec
sbb
stos
aam
mov
lret
jp
aad
pop
ret
in
aam
xchg
xor
test
xchg
push
dec
mov
cmp
cwtl
push
sub
mov
and
xchg
xor
fmuls
pusha
pop
icebp
je
add
and
add
xlat
shrl
mov
mov
pusha
and
mov
cmp
ss
popf
sub
roll
mov
aas
sti
and
leave
cwtl
mov
fnstenv
mov
imul
pop
dec
push
popa
fmul
and
mov
sahf
mov
pop
cld
stos
push
inc
pop
push
inc
pop
or
add
push
movsb
jnp
and
rcrl
inc
popa
lods
into
mov
in
dec
cmpsl
ret
dec
mov
jp
cmp
imul
push
add
shl
push
mov
dec
add
mov
test
sbb
mov
mov
jne
inc
loopne
pop
and
cs
pusha
mov
mov
add
daa
xor
add
xchg
dec
int
test
pop
int3
inc
mov
add
shlb
dec
mov
sbb
adc
orl
test
mov
flds
repz
mov
adc
test
je
movsl
test
sub
filds
test
mov
inc
imul
fwait
pusha
add
mov
cmpsl
jnp
int3
push
xor
shll
lods
xchg
dec
repz
pop
add
out
inc
sbb
xchg
mov
adc
popl
adcb
jmp
dec
nop
cld
mov
orb
inc
loope
cltd
fisttps
and
push
xchg
frstor
pushf
cmp
jp
push
inc
mov
hlt
les
int3
nop
cmp
xchg
mov
dec
popa
pusha
mov
adcb
dec
cmp
loope
jl
jge
lret
lods
scas
xchg
int3
fs
mov
jg
insl
push
icebp
mov
int3
rcll
xor
bound
xchg
mov
rclb
dec
jecxz
mov
jnp
dec
aas
push
push
mov
mov
in
lock
or
xchg
mov
pop
xor
cwtl
pop
mov
lock
cmpsl
mov
mov
movsb
jg
mov
push
xchg
jl
out
loope
test
aas
cwtl
cmc
lcall
xlat
outsb
sahf
push
stos
adc
xchg
xchg
mov
and
push
jmp
cli
mov
aam
inc
inc
out
stc
dec
aad
mov
push
push
vphadduwd
fldl2e
loopne
subb
sub
mov
adc
or
or
push
lods
cwtl
sahf
mov
das
lock
orb
push
sub
hlt
mov
xchg
push
cli
int3
ljmp
cmp
sbb
je
ss
mov
adc
in
scas
xchg
jae
lock
fmull
scas
in
lods
push
lea
inc
jbe
movsb
mov
cwtl
mov
jns
cmp
mov
xor
xor
push
sbb
out
push
out
outsb
in
sub
das
lods
scas
lahf
inc
stos
mov
lcall
dec
xor
movsb
sarb
pop
mov
pop
test
fstpt
clc
inc
xchg
and
push
nop
xchg
mov
repz
jp
shrl
or
xor
push
sub
mov
fcmovu
mov
mov
out
sub
jg
shll
cli
xor
outsl
xchg
adc
orl
scas
mov
jp
fildll
jno
daa
out
xchg
int
cmpsb
clc
push
cmpl
jb
mov
dec
insl
jle
sub
jp
xchg
int3
adc
sub
aad
stos
adc
xor
clc
dec
ljmp
call
sub
sub
pushf
push
cmpsb
out
push
or
xor
jbe
jl
cmp
add
cmp
and
sub
cmp
xor
lock
inc
cmpsb
add
cmp
das
in
mov
dec
mov
lock
xchg
push
mov
inc
and
pop
or
out
aam
cmp
imul
add
mov
pop
inc
pop
imul
insb
and
inc
mov
jo
xchg
xor
and
stc
popa
mov
pop
shlb
ja
test
sbb
and
rcrb
sbbl
push
aaa
add
repz
jg
in
jge
mov
mov
cmp
leave
arpl
mov
out
je
repnz
out
and
and
lock
sbbb
into
xchg
dec
inc
pop
test
push
js
jno
aaa
arpl
cmpl
push
sbb
or
mov
xchg
fucomip
inc
mov
ret
sbb
cmp
sahf
lods
xor
xchg
rorb
add
sbb
aaa
jae
xor
fs
dec
icebp
pusha
xor
aaa
cmp
insl
testb
jnp
lods
cltd
ss
stos
repz
mov
les
leave
imul
mov
adc
icebp
movsb
repnz
das
push
lcall
push
pop
aaa
and
jmp
cmp
xchg
mov
icebp
xor
incl
pop
lods
fs
int3
adc
sbb
sbb
xor
sub
adc
jl
jae
and
xchg
push
mov
inc
sbb
push
xchg
daa
jp
xor
lock
movb
daa
lea
and
repnz
jecxz
movsb
mov
inc
xor
decl
pop
ret
xchg
pop
mov
lea
ror
lods
xchg
sbb
sbb
iret
push
and
xchg
js
in
mov
repnz
or
mov
insb
mov
lret
pop
out
mov
sysenter
pop
andb
sarl
stos
jno
pop
mov
push
lods
or
pop
xor
jo
push
mov
xchg
cmc
add
xor
ss
mov
or
cmp
mov
insl
mov
mov
push
into
hlt
idivl
out
and
lahf
add
push
dec
or
pop
lods
mov
ds
xor
popa
jl
xchg
test
xor
fidivs
cmp
mov
into
inc
shrb
adc
xlat
xchg
and
pop
jo
fs
sbb
pop
repz
cmpsb
push
mov
push
ret
je
mov
jns
loopne
lahf
cmp
dec
xor
test
stos
mov
add
push
repz
pushf
jo
push
ljmp
in
ds
les
cmpsl
repz
and
lahf
fdiv
int3
repz
mov
into
pop
arpl
or
mov
int
int3
repnz
xchg
xchg
int
mov
jae
xchg
andb
dec
pop
insb
movsb
cld
push
xor
ss
icebp
mov
xchg
mov
imul
fwait
pushf
out
sbb
xor
mov
add
xchg
mov
xorb
fidivl
push
or
mov
lret
jb
and
jp
mov
icebp
mov
sbb
pop
daa
pusha
mov
imul
cmpsb
mov
jo
mov
cld
int
or
push
test
push
mov
fsqrt
enter
jg
sub
mov
add
jl
ret
aas
push
stos
adc
xchg
sub
jo
jae
sub
addr16
mov
insb
jo
sub
daa
mov
cmp
ljmp
cmc
scas
popf
mov
sbb
pop
cmp
nop
call
cmp
adcl
jb
xorb
jmp
or
aas
lods
cmp
lahf
sub
cs
cmp
mov
rcll
pop
or
addb
addl
gs
pop
add
lods
bound
in
imul
rolb
xor
pop
or
xchg
hlt
shrb
mov
mov
xchg
xchg
rclb
fwait
adc
push
int3
in
ret
jo
pop
pop
mov
cmp
mov
mov
lods
mov
mov
jne
xchg
mov
cs
jo
mov
push
mov
stos
xchg
sub
push
dec
loop
roll
push
shlb
dec
mov
scas
pop
dec
lahf
leave
mov
repnz
and
lahf
loopne
jbe
mov
in
xlat
fisubl
fidivs
or
mov
sub
jle
jne
sti
mov
jmp
in
imul
jmp
in
lret
xor
and
cwtl
mov
jo
stos
push
dec
adc
dec
and
jne
in
pop
repz
loop
and
sub
repnz
ja
leave
in
inc
xchg
xor
jmp
jle
pop
sbb
mov
pop
loope
scas
imul
xlat
inc
jnp
arpl
mov
stos
inc
inc
int3
movsb
sbb
add
mov
loope
push
xchg
nop
sbb
adc
dec
lahf
insl
mov
mov
scas
lods
pop
mov
subb
pop
xor
sbb
xchg
inc
ret
pop
aad
mov
cltd
cmp
add
leave
add
sub
test
mov
popl
inc
nopl
test
xchg
xlat
push
in
xchg
xchg
mov
cmp
xor
mov
clc
xor
ret
cltd
xchg
or
daa
pop
rcll
sahf
adc
mov
xor
mov
xchg
xchg
sbb
inc
movl
mov
sbb
je
mov
imul
stos
aas
cmp
xchg
mov
pop
out
push
fcoms
adc
outsb
jp
push
add
push
into
add
dec
out
cmp
popa
pop
test
mov
or
and
cmp
xchg
enter
pop
test
jmp
call
out
pop
test
cmp
nop
push
pushf
movsl
es
mov
not
rcrb
xchg
cwtl
hlt
inc
xchg
movsb
cmc
sarb
pop
pop
addr16
insb
cmpsb
lods
mov
xor
and
int
dec
subl
xchg
icebp
stc
jg
orb
mov
ret
int3
xchg
push
jge
shlb
ja
mov
sti
mov
arpl
lret
fs
and
inc
stos
jo
mov
lahf
ficomps
mov
adc
movsb
mov
movsl
sbb
enter
inc
scas
imul
push
pusha
mov
pop
xchg
xlat
test
hlt
and
fbstp
sub
cmc
sbb
jbe
orl
xor
pushf
mov
cmp
mov
add
int3
push
sar
dec
and
mov
pop
arpl
dec
jmp
int3
pop
mov
cltd
popf
icebp
imull
test
and
aaa
cmpsl
outsl
imul
mov
cwtl
jl
sbb
fldlg2
test
adc
jbe
movsb
sub
or
push
mov
pop
dec
shlb
jnp
gs
movsb
jae
mov
mov
mov
bound
cmp
in
in
test
popa
lcall
movsl
js
lods
jae
bound
mov
mov
idivb
js
leave
cmp
inc
vmwrite
lret
push
pop
pop
insl
xchg
pop
push
pushf
push
pop
mov
shrb
cmc
xchg
sbb
test
imul
pop
xchg
std
mov
ja
or
xorl
int3
adc
push
ficoms
fiaddl
insb
mov
sub
mov
xchg
and
xchg
inc
cld
loope
pop
push
roll
fbld
xor
push
mov
xchg
cmpsb
mov
icebp
mov
rorl
inc
stos
stc
mov
mov
pusha
cld
xchg
mov
mov
movsb
aaa
imul
mov
add
push
pushf
xchg
pop
int3
test
xor
pop
outsb
and
jae
cmp
xchg
and
inc
mov
or
adc
push
lret
sbb
repnz
repnz
pop
mov
and
mov
daa
xchg
cs
lods
out
daa
mov
jb
pushf
xor
jae
fwait
mov
lods
push
ror
cwtl
dec
cmp
stos
pop
int3
cmpsl
or
lods
fcomps
and
pop
xchg
cmp
inc
or
adc
xchg
sbb
addb
clc
or
cmpsl
insb
lahf
dec
lahf
sahf
pusha
pop
or
shl
not
pop
insb
pop
lock
pop
repz
dec
int3
mov
mov
nop
push
decb
cli
xchg
xchg
xchg
test
pop
bound
pop
pusha
jae
pop
int3
icebp
adcb
cli
fstpt
gs
xor
ret
xchg
les
pop
outsl
mov
inc
stos
dec
mov
push
mov
xchg
and
inc
pop
je
movsl
cmp
mov
imull
push
mov
mov
jns
test
outsb
fcoms
mov
insb
outsl
push
add
in
cmp
dec
xchg
add
jne
jge
inc
pop
mov
mull
out
mov
sbb
popa
jmp
bound
fidivl
test
mov
mov
xor
lcall
mov
addr16
arpl
clc
loop
aam
xor
jl
dec
sti
mov
movsl
scas
cmp
mov
in
xchg
cmp
test
cmpsl
add
imul
pop
xchg
js
mov
ljmp
xchg
xorl
nop
shl
mov
jns
push
add
mov
xor
arpl
outsl
jae
mulb
dec
insb
pop
mov
aas
and
inc
mov
lcall
cld
or
inc
int3
test
aam
int3
push
pop
int3
or
into
xorw
push
in
loope
popf
lret
clc
add
bound
mov
jecxz
mov
cs
divb
imul
lods
rorb
movsl
test
mov
push
mov
pop
in
aaa
and
cmp
cmpsb
mov
lods
sub
and
aam
data16
imul
icebp
rcl
jno
lds
mov
je
frstor
das
mov
std
mov
popa
int3
fsubs
and
stc
push
or
mov
aas
mov
enter
orb
je
int3
and
xor
sub
lret
jmp
mov
pop
movsl
jbe
icebp
movups
sbb
les
js
inc
lods
and
jne
test
lcall
pushf
fwait
in
cmc
pushf
pop
xorl
out
je
in
aas
inc
add
adc
jae
test
inc
or
xchg
sub
mov
and
aas
scas
sbb
outsb
icebp
and
xor
sbb
out
xchg
icebp
dec
repz
scas
sbb
mov
les
movsl
in
int3
stc
add
in
sbb
pushf
push
daa
test
ds
jge
mov
test
sub
ret
mov
data16
hlt
imul
push
and
mov
dec
xlat
lret
push
fwait
add
aad
je
fisttpl
pop
aad
pop
pop
popa
test
gs
pop
xchg
xchg
outsl
xchg
or
sbb
pop
push
xchg
test
mov
cmpsb
cwtl
push
push
mov
mov
into
xchg
mov
imul
dec
xchg
stos
cmp
or
pop
clc
and
adc
sub
push
imul
push
push
dec
into
imul
pop
cmpsl
js
xor
loopne
outsl
test
dec
mov
aas
leave
and
pushf
add
add
and
sub
ret
mov
or
loope
mov
mov
lret
lock
cs
fwait
sub
stos
jp
insb
and
mov
sub
push
subb
movsb
data16
fnstsw
jmp
xchg
popf
icebp
pop
mov
xlat
aas
cmp
push
sub
scas
movsb
xor
ret
xchg
sub
dec
jbe
pushw
push
pop
mov
push
xchg
mov
mov
xchg
push
mov
lock
xor
test
jecxz
or
fsubrl
xchg
pusha
cs
outsb
push
jae
in
mov
push
int3
arpl
pop
adc
bound
dec
add
jle
call
scas
jnp
mov
and
scas
lock
stos
call
adc
ja
fstl
arpl
xchg
les
inc
dec
movsb
mov
and
add
nop
movsl
pop
pop
lock
add
xchg
lds
enter
arpl
orb
pop
dec
sub
and
add
pop
sbb
movsb
jb
adc
je
sub
jmp
imul
mov
outsb
dec
cwtl
push
sahf
test
fdivrl
xchg
subb
je
cmpl
call
int
mov
sbb
adc
aad
jp
daa
scas
lahf
xlat
pop
ret
push
pusha
addr16
out
xor
lock
jo
sub
fldcw
mov
adc
test
mov
xchg
dec
negb
cmp
push
addr16
pop
jnp
lret
popf
es
enter
imul
and
push
jno
mov
popa
imul
mov
loopne
xchg
cmp
and
sub
xchg
rolb
cwtl
insl
xor
push
daa
jnp
addr16
imul
stc
dec
pushf
pop
bound
sahf
call
lret
push
data16
or
mov
loopne
rcl
pop
frstor
daa
je
loop
lret
mov
hlt
ror
pop
ss
mov
pop
push
js
fstp
dec
add
out
pop
lret
leave
pop
xchg
xchg
fstl
inc
xor
pop
inc
dec
push
lods
xor
inc
jle
test
push
sub
xor
dec
outsb
andl
sub
addb
inc
loopne
test
pop
into
jo
dec
jl
out
xor
lret
inc
mov
mov
push
jp
test
rolb
bound
dec
jp
shlb
or
out
pop
inc
xlat
inc
lret
jp
sbb
cmp
add
cmpsl
pop
pop
and
pop
js
mov
sahf
aaa
sahf
dec
out
cmp
push
cwtl
bound
lods
mov
jmp
pusha
push
mov
adc
pop
xchg
and
pop
pop
lcall
pop
stc
dec
push
push
xor
test
inc
xlat
fwait
lods
insl
aas
into
mov
add
pop
testb
bound
mov
mov
movsl
fsubs
test
dec
dec
dec
out
push
xor
fwait
sub
jl
jne
pop
test
cmp
mov
jns
sahf
int3
sbb
fldt
pop
push
and
rclb
or
sub
pop
sub
lods
test
int3
aad
sbb
clc
inc
loop
in
xor
and
mov
lock
popf
mov
push
cmp
mov
cmp
jo
test
xor
pop
aaa
mov
in
add
aas
test
jge
jo
or
jge
mov
pop
fwait
sbbb
cmp
mov
fs
insb
sub
subl
gs
les
mov
stos
movsl
das
mov
inc
mov
inc
mov
pop
lahf
pop
jp
jl
rolb
dec
dec
cli
mov
sub
idivb
cwtl
jecxz
enter
scas
sarb
xchg
mov
xor
cwtl
test
in
aam
loope
test
xchg
sub
cmp
bound
mov
xor
test
sbb
ljmp
xor
mov
andb
aad
data16
mov
mov
popf
int3
lret
fsub
in
imul
stos
adc
popa
jecxz
inc
movsb
mov
int
lret
xor
stos
ret
daa
jmp
leave
add
fcmovne
pop
scas
daa
out
mov
dec
xor
mov
int
sbb
mov
imul
lret
mov
push
fnstsw
out
outsl
push
xor
push
je
lods
sub
mov
dec
xlat
adc
stos
xor
xchg
sub
addr16
out
inc
lahf
sub
shrl
or
jp
daa
ret
into
push
ss
test
mov
pop
rcll
mov
jns
mov
inc
insl
adc
inc
aas
mov
xchg
outsb
xchg
insb
inc
xchg
mov
aam
inc
sub
imul
pop
pop
mov
data16
and
mov
data16
aas
mov
push
lcall
movsl
stos
add
lea
mov
ljmp
adc
aam
daa
mov
mov
dec
pop
insl
inc
maxps
xor
je
sub
jae
mov
hlt
lods
fwait
lret
push
xchg
sahf
lret
lret
pop
jno
xor
jnp
jb
dec
movsl
jne
repnz
icebp
rcrb
int3
nop
nop
aad
pop
xchg
xor
lods
loopne
cmp
add
lock
lock
jl
mov
movsl
test
mov
push
or
daa
subl
mov
jns
sub
sahf
push
pop
pop
or
xchg
test
sub
test
jno
clc
int
movsb
movsl
mov
push
int
add
sub
push
add
sub
movsl
icebp
imul
cld
insb
push
pop
sbb
mov
paddusb
arpl
test
push
lods
lea
jo
insb
mov
in
jo
popa
xchg
ret
cltd
jp
arpl
sbb
test
outsb
mov
mov
iret
mov
jnp
inc
lods
push
neg
xorl
cmp
dec
lods
jne
sub
xchg
mov
ja
lods
push
leave
sbbb
aam
fcoml
pushf
xchg
xchg
aas
lods
lods
cwtl
rorb
arpl
inc
testb
and
sahf
and
aas
adcl
daa
outsl
jmp
fs
adc
sahf
mov
cmpsl
mov
pushf
nop
push
xor
lods
pop
sbb
xchg
mov
movsb
sarb
iret
popf
sub
into
cmp
iret
das
sahf
lods
shrb
push
sti
push
mov
push
lcall
lods
lret
mov
sbb
xchg
ficoms
push
sbb
sbb
mov
movsl
das
and
jp
cmp
stos
lods
int3
leave
fstps
stos
cmpsl
mov
mov
into
aam
or
adc
dec
mov
add
out
mov
pop
xor
outsl
lods
ret
es
mov
aaa
mov
scas
in
shll
arpl
fimuls
jmp
iret
sbb
xchg
movsl
xor
out
insl
inc
xchg
mov
test
aas
stos
sub
std
ret
xchg
leave
lods
stos
fldt
mov
aas
mov
leave
or
and
fisubrl
scas
jns
sub
enter
mov
xchg
sahf
popa
pop
pop
out
mov
pop
push
cmpl
scas
lret
dec
pop
movsl
outsl
push
lock
or
push
cmc
inc
jae
out
in
xor
mov
mov
cli
pop
popf
pop
mov
jl
push
mov
adc
and
mov
cs
int3
jb
rcr
test
xor
sbb
js
ja
int3
bound
or
sub
push
repnz
aaa
fldenv
ds
pop
insl
fidivl
ljmp
cltd
sarl
pop
sbb
pop
aad
inc
je
sub
sbb
sub
lods
fdivr
stc
dec
cmp
outsl
xchg
into
loopne
add
or
rcll
rcrb
shlb
hlt
xor
enter
popa
pop
mov
jo
mov
shrl
lods
sahf
and
jb
cmp
pop
mov
fcompl
mov
shll
stos
leave
jg
push
kmovw
lcall
mov
push
fmull
adc
or
xchg
cmp
mov
loopne
xor
jne
imul
mov
int
mov
xchg
jnp
faddl
loope
clc
push
out
les
xor
xchg
adc
lods
in
or
hlt
repz
push
movsb
pop
faddl
push
test
inc
sub
adc
test
pop
test
xor
mov
in
cld
test
pusha
jecxz
out
sbb
movsb
mov
cld
lock
dec
aas
notb
les
pusha
int3
sub
rolb
nop
out
sub
cmc
ss
push
sub
pop
movsb
pop
aas
jb
xor
ja
out
cmp
arpl
outsl
test
pop
aas
call
movsl
js
xchg
mov
repz
push
int3
cwtl
jb
fcmovnu
mov
add
arpl
loopne
and
ret
mov
cs
lock
data16
iret
cmp
mov
sbb
push
ja
into
vpmulhw
mov
outsl
mov
and
arpl
les
pop
mov
out
pop
orl
mov
out
int3
lahf
fwait
sub
in
mov
mov
mov
std
stos
lahf
inc
pop
push
or
aam
xchg
xor
mov
push
fs
xor
mov
jbe
popf
icebp
mov
sbb
movsb
pushf
xchg
cmp
mov
jbe
aaa
flds
aaa
bound
cwtl
aaa
popa
mov
arpl
jb
xchg
mov
ret
stc
cltd
rcr
mov
mov
xchg
call
inc
sub
fwait
leave
mov
mov
in
into
jmp
lock
jns
pop
pusha
rcrb
jb
ret
div
xor
bound
imul
jo
adc
or
popa
inc
test
jno
mov
cmp
cli
adc
es
push
lds
adc
je
cmpsl
sub
xorl
icebp
xor
mov
xchg
lods
add
stos
aad
subl
jecxz
stc
xchg
mov
nop
cmp
jp
add
je
dec
add
mov
sahf
aas
outsb
cli
and
subps
xor
mov
dec
sahf
jae
arpl
lret
insl
lock
movsb
and
out
mov
int3
mov
dec
mov
shll
cwtl
xchg
mov
idivb
sub
shll
mov
cwtl
decl
xchg
or
push
int3
inc
or
push
shr
std
jo
dec
lds
ja
inc
int3
cmp
push
push
fwait
jg
jno
pop
test
mov
pop
popa
sub
cwtl
sbb
gs
daa
mov
pusha
repz
or
cmpsb
insb
std
nop
outsl
movsl
jbe
test
adc
stc
jno
jne
call
aad
mov
mov
or
enter
adc
xchg
xor
lock
pop
gs
pusha
sub
imul
or
pop
stos
repz
xchg
sub
cmpsl
je
movsb
xor
mov
hlt
js
adcb
movsb
enter
leave
push
fwait
loopne
push
push
lret
add
and
mov
mov
stos
mov
ret
and
or
jecxz
and
and
pushf
mov
test
std
mov
dec
mov
xor
leave
jae
cmp
stos
sbb
cld
sub
enter
and
pop
mov
addb
in
inc
cmp
lods
push
pop
into
insb
lods
sub
jbe
fmul
ja
insb
mov
lods
int3
pop
fisubl
adc
jb
push
pop
repz
mov
dec
pop
jo
adc
push
xchg
outsb
mov
lea
imul
arpl
enter
xor
nop
adc
lods
xor
or
push
mov
pop
movsl
cs
fidivrs
xchg
fdivr
xchg
cmc
dec
and
repz
stos
movsl
das
and
jns
jp
mov
test
mov
cmc
mov
stos
pop
and
test
jb
int
add
or
xchg
fbstp
push
gs
and
and
jl
cmp
shl
mov
call
push
and
pop
in
or
js
rcrb
mov
mov
xchg
jg
xchg
mov
js
xlat
in
jns
test
repz
cvtdq2ps
cld
fnstenv
xchg
mov
ror
in
pop
cmpsl
out
inc
fwait
mov
mov
scas
mov
adc
mov
popf
daa
adc
stos
in
lods
scas
imul
repz
std
or
les
test
aaa
mov
inc
sahf
scas
ret
pop
or
mov
xchg
cmp
pushf
scas
cwtl
scas
jae
sub
movsb
das
sub
icebp
push
test
das
test
adc
cmp
push
int3
sti
lock
sub
cmp
push
aas
push
pop
outsb
pop
test
aaa
xchg
test
test
ja
ds
sub
movsl
sub
push
movsb
mov
xor
sub
rorb
jecxz
aam
repz
aam
dec
test
mov
out
mov
adc
lret
push
mov
leave
movsl
jns
out
lods
sub
mov
je
add
sbbl
dec
jp
lea
xchg
aaa
fwait
vphsubdq
mov
std
inc
jmp
addr16
repnz
jne
stc
cwtl
insb
adc
pop
cmp
loope
scas
insl
sub
jg
aas
je
mov
mov
in
inc
sub
fwait
cwtl
mov
stos
mov
outsb
mov
imul
jmp
mov
xchg
pop
mov
push
lret
push
cli
pop
mov
inc
lods
lods
repnz
dec
jle
movsb
dec
stos
lods
fs
jnp
ret
xchg
lret
fldcw
sarl
insl
shrl
mov
or
mov
cmp
mov
loop
xchg
mov
cmpsb
push
push
xor
mov
jmp
jae
inc
lcall
das
ljmp
add
mov
movsb
inc
xchg
dec
je
pop
jo
imul
sub
sbb
xor
daa
and
lahf
mov
push
inc
out
mov
int3
or
xor
mov
js
hlt
ds
cmpb
lret
dec
in
xchg
jp
sbb
je
out
mov
mov
or
mov
outsl
test
aad
jbe
cmpsb
je
lods
sub
outsl
mov
mov
lods
jb
out
inc
cmp
push
sbb
testl
fidivl
xchg
mov
andl
call
mov
cltd
dec
sarb
push
push
dec
push
mov
or
frstor
cmp
test
andl
ljmp
xchg
repnz
cmp
popa
mov
pop
pop
adc
shr
scas
das
nop
stc
mov
movsb
mov
test
xor
sub
cmp
pop
int3
lds
xchg
lahf
and
frstor
out
mov
or
fsubrs
push
pop
sub
jmp
pop
or
icebp
lret
stos
pop
inc
aam
add
pop
push
stos
lea
mov
pop
ss
push
push
xchg
cvtpi2ps
sub
dec
cmp
adc
loope
stc
nop
push
repnz
inc
or
inc
add
and
and
push
icebp
mov
xor
rcrl
mov
mov
fnstenv
pop
sbb
cmp
or
push
bsr
imul
cmpsb
movsl
mov
mov
and
out
adc
fistpl
int3
push
int3
pop
fnsave
sub
sbb
xchg
cmpsl
jnp
imul
mov
test
jno
sbb
xor
push
sahf
fprem1
xlat
mov
and
movsb
lds
repz
addr16
pop
enter
pushf
cwtl
xor
mov
push
imul
jl
scas
js
jmp
jo
fiadds
mov
xchg
push
adc
pop
popf
jns
pop
in
inc
fwait
sti
adc
mov
roll
movsl
bnd
push
int
aad
repnz
pop
jge
inc
push
imul
out
cmp
neg
insl
mov
cwtl
aas
dec
insb
xchg
stos
fs
jb
xor
dec
pop
cld
pop
push
lahf
mov
js
jo
sub
scas
sbb
sub
push
and
pop
cmp
scas
adc
sub
push
lods
or
pop
ret
xor
mov
mov
jl
pusha
sub
push
inc
sbb
xchg
int3
fstps
push
push
or
cmp
rolb
mov
insb
mov
imul
dec
gs
mov
das
mov
lret
ljmp
xchg
xchg
andl
mov
mov
add
daa
inc
pop
subb
movsb
scas
pop
fidivrl
mov
inc
movsb
adc
arpl
pusha
loopne
mov
out
or
mov
lahf
jo
mov
daa
sahf
mov
shll
jb
sub
std
arpl
jmp
mov
int3
and
cmp
push
pop
lods
dec
pop
js
mov
bound
add
pop
xchg
cmpsl
xchg
sub
movsb
push
nop
out
sahf
inc
mov
mov
cld
or
sub
mov
xor
inc
nop
mov
and
bound
xor
pushf
or
mov
adc
andl
fbld
mov
jns
inc
lahf
arpl
add
lock
push
fisubs
jo
jne
and
dec
nop
das
adc
arpl
mov
arpl
jecxz
shll
pusha
negl
fs
lods
in
int3
nop
jecxz
fwait
mov
mov
cmp
movsl
mov
mov
aam
scas
ja
test
mov
pushf
daa
xchg
arpl
mov
dec
push
arpl
mov
jno
in
xor
sbb
test
mov
push
arpl
dec
arpl
cmp
jnp
jns
fimull
xchg
push
adc
cmp
inc
inc
jns
int
jb
mov
in
repz
inc
mov
out
lods
push
sub
cli
movsb
pop
mov
push
xlat
mov
dec
xchg
dec
pushl
push
arpl
shrl
push
cmpsb
pop
data16
test
mov
cli
shrl
pop
outsb
xor
pushf
mov
lret
insb
sbb
nop
in
into
roll
enter
jl
pop
lahf
or
clc
mov
mov
jae
inc
push
pushfw
xchg
sub
pop
mov
icebp
cmc
in
push
aas
scas
or
cmpsb
rcr
and
lret
ret
jle
and
ja
pop
aaa
jmp
addr16
push
cld
sub
pop
push
scas
out
imul
and
dec
lret
dec
push
insl
sbb
stos
fisttps
mov
sub
leave
roll
pop
mov
stc
test
ss
syscall
loopne
jne
ret
mov
xchg
jns
xor
adc
and
and
test
aas
movsb
push
cmp
xor
sti
push
xchg
cmpb
add
xor
xchg
inc
sub
lods
or
cmpsb
inc
push
in
dec
outsb
cmp
lods
pcmpeqd
pop
mov
push
mov
push
lods
das
sbb
test
pusha
sub
ds
enter
out
sti
loopne
negl
sub
sahf
mov
jno
gs
cmpsb
cwtl
cmpsb
cltd
jnp
mov
ret
mov
push
push
push
adcb
jo
mov
pop
sbb
out
sbb
mov
inc
add
push
mov
in
push
mov
and
or
sub
insb
inc
mov
push
adc
into
or
jb
scas
je
test
xchg
and
fnstsw
orl
vpmacsdqh
sub
or
jg
sbb
mov
cmpsb
cld
pop
sbb
xorb
cli
imul
push
jnp
pushf
xor
setg
mov
daa
jns
stc
addb
sbb
aas
popf
cmp
mov
sbb
push
sbb
jo
test
mov
repnz
dec
push
push
bound
xorl
sub
bound
lds
jle
cs
mov
cmc
into
add
mov
jae
es
jns
inc
aaa
mov
push
arpl
fs
insl
cli
cmp
add
lods
xlat
imulb
pop
and
adcb
mov
cmpsl
adc
push
jbe
xor
mov
jp
outsl
addr16
stos
or
jle
pop
push
cmp
pushf
popf
mov
stos
cld
sbb
push
cltd
jb
pop
mov
pop
and
je
arpl
push
push
cmp
out
loopne,pt
or
mov
lods
mov
sub
lret
repz
rclw
stos
jecxz
loope
in
and
or
xor
aas
push
frstor
xor
push
test
pause
fsubs
xchg
js
in
stos
lods
mov
fmul
popf
mov
push
nop
arpl
push
scas
add
into
sub
jg
inc
sub
add
pushf
in
xor
inc
les
addl
hlt
lea
pop
mov
pop
out
adc
jns
jae
push
pop
dec
in
mov
and
dec
movsl
data16
loopne
dec
ss
and
jo
cmpsl
idiv
sarl
fwait
sarl
jne
fs
cmc
or
dec
sub
push
inc
pushf
out
int3
jae
jmp
lods
xor
fstl
cmc
ss
insl
test
xchg
push
jb
add
jmp
test
inc
adc
mov
shrl
pop
scas
adc
sub
ja
outsb
add
test
adc
xor
xor
shrb
and
sub
int3
jo
cmp
mov
sub
mov
cmp
dec
jo
popfw
in
outsl
aas
pop
lea
pop
int3
jle
xor
jge
outsb
adc
sub
stos
or
lahf
loop
push
ss
and
mov
jmp
mov
cmp
sub
xchg
cmp
jb
xor
sub
and
mov
xor
xor
ja
mov
jmp
push
fs
sub
aas
movsl
dec
sub
insb
shll
mov
hlt
mov
iret
xchg
jmp
mov
mov
mov
outsl
push
ss
mov
jns
ds
jnp
pop
fs
movsl
push
sub
in
outsl
mov
mov
mov
dec
jnp
jl
xchg
ret
add
call
cmpsb
test
push
sbbb
test
sub
fidivrs
das
repz
mov
jae
xor
sub
repnz
test
sbb
sub
insb
cltd
les
or
aas
mov
inc
adc
jnp
jnp
scas
and
lcall
xchg
xchg
cmp
add
xchg
scas
lods
inc
jno
imul
xor
test
xchg
leave
xchg
mov
mov
enter
pop
arpl
jnp
sbb
push
mov
ret
sbb
jb
sub
xor
fdivrp
jl
das
mull
jnp
movsl
cmp
lea
mov
insl
mov
cmpsl
scas
cmc
repnz
loope
daa
mov
ds
push
xchg
loope
or
dec
mov
mov
jo
fwait
test
mov
pushf
clc
bound
xor
mov
daa
std
and
mov
sahf
xor
push
cli
orb
mov
jo
aas
xchg
shll
pop
repnz
mov
cltd
xlat
dec
int3
cmp
adc
mov
push
icebp
sti
movsb
out
aas
imul
stos
push
sub
dec
nop
dec
int3
dec
pop
xchg
pop
cs
dec
cs
cmp
xor
shll
shll
in
mov
and
push
mov
arpl
push
lods
in
cld
subl
imul
mov
inc
xchg
test
cltd
fucomip
sahf
xchg
dec
es
imul
ja
leave
xchg
mov
mov
mov
gs
and
orb
mov
sbb
aaa
nop
jg
or
loopne
sub
insb
cmc
push
and
xchg
call
stc
jge
mov
repz
adc
sub
inc
add
cli
xor
pop
and
ljmp
mov
and
jnp
test
pop
mov
mov
xchg
xor
xchg
and
mov
insb
ds
inc
das
pop
xor
pusha
push
andb
imul
mov
int3
dec
mov
mov
das
mov
dec
cmp
pop
add
sbb
xlat
cmpsb
stos
sub
js
mov
xchg
dec
aaa
add
fisubrl
xor
data16
push
mov
xchg
test
and
push
jmp
mov
out
sub
push
mov
sbb
or
pop
test
sbb
jnp
sbb
aaa
push
sbb
push
lcall
in
es
jbe
fmul
jb
add
jl
sub
ss
xchg
xchg
and
mov
inc
rcll
or
das
das
fs
out
add
jb
out
outsb
sub
xchg
int3
xchg
cmpsb
data16
mov
jbe
or
push
aas
cltd
adc
pusha
arpl
insb
xchg
idiv
dec
les
pushf
lods
mov
jb
sub
rsqrtps
lods
xor
popf
mov
hlt
sub
mov
and
jmp
dec
mov
and
jns
subb
dec
repnz
dec
sbb
mov
rcrl
in
lock
cmp
bound
xchg
jae
push
sub
pop
add
dec
dec
add
outsb
inc
je
out
dec
stos
mov
pop
outsb
sub
cmpsb
mov
xor
lock
scas
out
pop
std
mov
xlat
xchg
xor
sbb
cmpsl
lods
test
mov
xor
xor
loopne
xor
faddl
test
cld
js
lods
mov
cwtl
mov
lret
mov
sub
scas
sub
sbb
pop
mov
push
sub
insl
mov
jno
sub
outsb
out
movsl
daa
mov
test
gs
pop
dec
popf
sub
cwtl
clc
pop
fistl
adc
cmp
jmp
jne
add
test
in
ret
mov
push
adc
mov
xor
lods
inc
mov
test
jno
pop
push
test
or
inc
jns
and
roll
addl
jl
mov
loop
int3
dec
push
jns
iret
pop
pop
push
ret
stos
mov
cmpsb
stos
mov
push
mov
enter
imul
cmpsl
mov
movsl
xor
add
cli
xor
orb
sub
mov
inc
ret
je
leave
mov
xor
stos
cmc
cli
jb
mov
hlt
and
adc
mov
sahf
int3
incb
popa
jecxz
nop
push
shrl
mov
sub
xchg
pop
fcoml
movsl
call
xchg
bswap
lods
xor
gs
out
pop
and
shrl
in
push
ds
outsl
xlat
dec
movsb
bound
imul
fldl
xchg
fisttpll
mov
jns
out
mov
mov
loop
enter
test
xchg
mov
icebp
mov
aas
aad
and
insb
add
bound
push
push
mov
imul
jno
push
cltd
ret
das
je
mov
daa
dec
pusha
fcomps
loope
gs
jnp
adcb
sub
cmc
jmp
adc
inc
or
mov
cmp
addl
stos
jmp
das
xchg
ljmp
jns
test
out
jns
ljmp
fcoms
pop
mov
lock
stos
cmc
mov
out
jns
inc
sahf
adc
idivl
inc
pop
adc
call
bound
add
mov
and
loope
xlat
xchg
and
and
inc
cmp
pop
repz
xor
sbb
push
int
and
stos
sub
sub
repnz
push
and
test
cltd
ljmp
dec
pop
mov
inc
fwait
ljmp
jo
xchg
mov
subb
cmp
or
pop
inc
test
dec
and
std
mov
pushf
jns
repz
pop
sahf
scas
xchg
sbbb
popf
test
sahf
lret
sub
scas
mov
lret
test
adc
push
or
dec
loope
in
mov
fadds
or
pop
pop
stos
xor
mov
ds
fistpl
fildll
jbe
sub
mov
adc
xor
pop
pusha
jns
aad
cmpsb
pop
nop
stos
pusha
out
xor
and
repnz
in
pop
ss
outsb
dec
mov
gs
push
pop
sub
test
xor
data16
gs
jnp,pt
je
out
push
sbb
lock
out
gs
mov
cld
push
loopne
out
xchg
into
sbb
cwtl
mov
out
inc
add
sub
add
mov
inc
pop
pop
je
jnp
sub
fcmove
out
adc
in
aas
ss
fidivl
jp
lret
mov
mov
pop
xor
dec
jns
and
sahf
sub
nop
lahf
sbb
das
mov
pusha
cmp
mov
push
or
movsb
fwait
sub
imul
and
inc
test
mov
push
test
imul
movsl
subb
test
popa
int3
sub
stc
lea
imul
cmpsb
rcrb
xchg
repnz
push
mov
data16
pop
sbb
movsb
mov
inc
mov
mov
mov
ret
add
mov
aad
ja
sbb
ljmp
lock
jb
int3
xchg
dec
lahf
add
push
sbb
sub
lahf
mov
xorb
fadd
fwait
out
dec
in
push
rcrl
lret
test
lahf
int
and
sub
adc
or
xchg
int3
or
cmp
sbb
sarb
aam
nop
lret
lock
xchg
jl
inc
jmp
cmp
lret
aaa
jb
mov
jns
movsb
and
mov
loop
mov
jmp
jle
imul
pop
mov
stc
and
lahf
jnp
jno
test
and
in
jns
pushf
pusha
xchg
sti
lahf
jo
inc
outsb
mov
fcmove
and
data16
lahf
sub
mull
mov
and
and
sbb
mov
xchg
mov
sbb
pop
sti
sbb
inc
insb
inc
cmp
and
aas
inc
and
and
xorb
sub
jge
or
test
mov
sbb
jg
xor
push
or
xchg
movsb
cmp
add
in
push
mov
lods
xchg
test
fwait
das
fs
pop
scas
add
inc
addl
mov
and
shlb
add
scas
fs
lds
mov
int
andb
pop
daa
adc
lock
xor
arpl
fbstp
lahf
loop
mov
cmpb
bnd
aaa
mov
lods
int3
push
cli
test
or
mulw
sahf
rcpps
push
pop
dec
cmp
in
js
pop
test
sub
stc
mov
jae
in
inc
and
or
mov
int3
mov
scas
imul
lock
push
dec
mov
ss
aaa
je
int
inc
imul
dec
or
in
outsl
shl
jmp
and
jo
lock
jl
sub
adc
pop
aam
fisubs
push
sub
mov
push
jg
cwtl
inc
sbb
test
imul
ficoms
test
js
addr16
dec
je
cld
aam
sbb
repnz
jo
imull
xchg
pop
mov
fs
xlat
add
test
js
xor
cli
sbb
xchg
test
lcall
mov
push
loope
or
sbb
out
mov
enter
mul
and
cmpsl
stos
imul
leave
test
push
lahf
sti
data16
or
mov
and
lea
jns
adc
jae
mov
popa
dec
xchg
dec
cmp
mov
mov
test
popf
inc
aaa
mov
lret
dec
and
addl
pop
fmul
aad
mov
data16
int3
add
push
fwait
mov
cs
dec
and
mov
insl
loop
ds
pop
adc
inc
sarb
lea
push
lock
pop
fisubl
sub
mov
pop
cmp
insb
push
shll
cmp
push
je
lahf
jmp
pop
pop
push
xor
pop
pop
aad
xlat
xchg
loopne
das
repz
mov
add
fs
inc
lahf
outsb
loop
mov
mov
testl
or
xor
push
push
in
bound
add
aad
or
add
insb
xor
inc
sbb
adc
in
sbb
aaa
and
cmpb
mov
jecxz
shlw
into
pop
cwtl
push
fiadds
adc
dec
ret
inc
pop
mov
ud0
je
sbb
aad
mov
int3
dec
std
mov
dec
shlb
xchg
xchg
pushf
aam
int3
sub
mov
int3
jmp
xchg
in
lea
pop
mov
mov
jae
cmp
in
mov
push
cmp
into
test
push
nop
aas
mov
lret
and
scas
jp
je
mov
cmpl
pop
xor
lret
push
push
push
jo
sbb
into
in
lcall
push
lahf
xor
popa
push
jle
insb
pop
dec
xor
ficoms
mov
xor
or
sarb
mov
loope
sbb
sti
int3
and
or
mov
jbe
xchg
mov
inc
push
sti
mov
addr16
std
jle
pop
mov
mov
bound
es
daa
push
hlt
int3
fwait
sbb
xchg
fdivrs
mov
gs
repnz
bound
pusha
xchg
das
aaa
lods
lea
sti
xor
daa
mov
xor
test
dec
mov
loopne
fcoml
in
or
std
test
sbb
daa
fwait
ljmp
daa
lock
add
rclb
aaa
mov
shlb
mov
test
pop
cmpsl
xchg
jns
icebp
test
and
sub
mov
and
sub
leave
inc
add
daa
mov
cmp
dec
scas
sarl
stos
xchg
lods
mov
mov
cwtl
fsubrl
mov
adc
outsb
sbb
ljmp
lret
loop
mov
jae
imul
or
or
xchg
sbb
sahf
clc
or
cmc
adc
fwait
xchg
mov
in
stos
int3
sub
lcall
pop
sub
sbb
scas
call
aam
rolb
cli
insb
mov
aas
cmpsl
pop
mov
das
xchg
mov
repnz
pushf
daa
inc
mov
cmp
pop
mov
adc
in
imul
imul
pop
test
push
pusha
aas
mov
call
add
jge
into
dec
fcoms
and
arpl
xchg
les
jmp
mov
shrd
mov
or
ja
sbbb
repz
loop
andb
popw
sbb
mov
les
or
mov
add
arpl
mov
adc
adc
inc
sub
movsb
add
xchg
pushf
lcall
adc
ljmp
test
add
mov
and
inc
pop
adc
sub
cmpsl
mov
inc
sbb
mov
cmp
stos
sub
and
pop
xchg
lea
insl
lods
jnp
andl
dec
jo
in
mov
xchg
push
repnz
sbb
mov
jp
sahf
aas
dec
sti
ss
out
sub
insl
mov
clc
jmp
lcall
add
aaa
stos
test
repnz
mov
je
test
xchg
and
adc
mov
mov
das
push
nop
movsb
push
jl
cltd
gs
sub
jo
sub
cmp
test
fisttps
cmpsb
shl
mov
cmp
aaa
cmpsl
dec
sub
je
popf
loop
mov
movsb
lahf
fimull
in
in
popa
clc
push
xchg
aad
jbe
push
mov
fcoms
movsb
push
in
pushf
int3
mov
stos
movsl
sub
enter
hlt
scas
sub
lods
pop
shlb
aad
movsb
stc
sub
jb
dec
adc
xor
repz
xchg
jb
shlb
ds
test
mov
jg
push
push
addr16
dec
xor
cwtl
lds
nop
mov
xchg
ljmp
dec
pop
lcall
jge
sbbb
xchg
xor
outsb
test
jge
sub
jae
sub
loop
fcoml
mov
imul
sarl
daa
xchg
lock
lock
cmp
test
xchg
lahf
mov
stc
mov
aaa
orb
push
inc
aam
mov
js
rclb
ja
sub
fdivs
adc
jnp
jl
sbb
adc
mov
sub
inc
in
or
push
mov
and
mov
lock
jl
insl
adc
push
push
les
jae
pop
fisubs
movsb
ljmp
jo
and
sahf
out
sub
sbb
xchg
or
mov
bound
iret
lods
lds
or
or
outsb
stos
pmaddwd
loop
lods
pop
add
xchg
popa
pushf
push
xchg
pop
divl
jmp
repnz
xorps
inc
std
jb
dec
movsb
xchg
clc
mov
pushf
mov
adc
sahf
shlb
push
ss
dec
pop
out
inc
sahf
test
xchg
sub
int3
test
push
daa
jmp
mov
fisubl
mov
fcom
lcall
adc
xor
aad
aad
testb
test
mov
imul
push
or
xchg
or
pop
imul
xor
repnz
adc
cmp
popf
cmp
lret
ret
mov
test
lret
ret
push
ficoml
repnz
xchg
add
pop
testl
xchg
cmp
jno
arpl
cltd
inc
and
movsl
bound
jb
pop
mov
in
dec
les
xchg
pop
xchg
les
ss
and
cmp
and
and
in
or
movsb
xor
fstpl
cli
push
xchg
test
jb
nop
movsb
xchg
int
sahf
shlb
popa
xor
adc
dec
xchg
mov
add
mov
movsb
xchg
pop
in
xor
es
cwtl
inc
xchg
jge
popf
pop
lret
adc
jp
test
movsb
pusha
sbb
loope
popa
mov
pushf
nop
push
enter
mov
mov
movsl
mov
daa
jbe
sub
and
subl
mov
mov
jo
dec
fsubr
jl
in
pop
pusha
test
dec
in
enter
fcomps
mov
push
mov
fcoml
push
orl
sbb
cld
pop
out
leave
xchg
adc
scas
mov
mov
stos
dec
adc
subl
pop
pop
int3
mov
shrb
fs
les
test
jmp
mov
pop
arpl
shll
add
outsb
icebp
add
fistpl
inc
bound
lods
in
xor
stc
pop
mov
jns
jge
cmpsl
xorl
out
mov
mov
pop
lcall
int3
push
mov
test
adc
or
xchg
mov
arpl
icebp
pop
test
pop
out
cmp
pop
sahf
inc
xor
fstpt
mov
push
xor
xor
and
xchg
cmp
jae
aas
xchg
ja
andb
adcl
ss
mov
data16
leave
aas
mov
mov
aad
cli
clc
faddl
popf
es
xlat
rsqrtps
mov
mov
add
fs
push
movsb
scas
cmpsb
pop
xor
loope
jbe
mov
outsl
lods
xor
movsl
es
mov
ret
je
sub
sub
scas
cmp
mov
mov
sbb
xchg
push
dec
mov
int3
mov
imul
xor
add
mov
cmpsl
jae
sub
sub
jnp
nop
mov
push
out
xor
ds
dec
jo
fwait
sub
rorl
inc
out
xchg
popf
pushf
int3
mov
mov
mov
xchg
shlb
mov
movsb
sub
cltd
pushf
loopne
das
xor
cwtl
mov
pop
inc
mov
xchg
repz
jb
fidivs
pushf
cwtl
adc
int3
cmp
int3
push
sub
sub
shlb
mov
int3
lea
imul
int3
outsb
mov
mov
aas
lcall
jnp
mov
int3
fisttpll
int3
icebp
xchg
mov
int3
jbe
push
mov
ret
fsubl
jno
sub
lods
push
mov
fwait
adc
je
out
adc
sahf
insb
xor
push
frstor
cli
shrb
adcb
lods
or
cmpsb
pusha
push
andb
int3
in
pusha
lods
xchg
push
pusha
lods
xchg
jle
pusha
lods
mov
xchg
fwait
pusha
lods
mov
std
fwait
pusha
push
andb
int3
pop
lcall
pusha
lods
int3
test
cltd
lcall
pusha
mov
arpl
test
xchg
fdivrs
mov
fwait
andb
int3
lds
imul
adc
int3
and
int3
stos
jb
adc
adcb
or
adc
int3
out
popf
repz
adc
adc
sbb
jb
lock
xchg
icebp
cmp
lcall
sub
push
mov
jecxz
stos
mov
jno
scas
xor
outsl
xor
dec
es
push
xchg
lea
xchg
xor
add
xchg
xor
ss
inc
movsb
xchg
test
cmp
mov
movsb
xor
aam
movsb
and
xor
adc
popf
mov
push
dec
add
xchg
aam
sub
pusha
mov
add
pusha
mov
dec
es
pusha
ret
je
push
movsb
add
pusha
shll
mov
movsb
insl
add
rep
insl
cmp
data16
inc
popa
js
test
mov
mov
lock
push
jb
or
movsb
push
jbe
or
jo
shll
jle
or
sbb
movsb
dec
lret
push
into
imul
adc
inc
pop
and
aas
mov
xor
aam
repz
jb
mov
popf
cld
pushf
adc
push
iret
mov
and
sub
dec
sti
and
cmp
xchg
and
cmpsl
test
fldenv
pushf
pop
inc
stos
clc
outsl
and
and
test
loop
outsb
out
xorb
enter
xor
scas
mov
daa
and
enter
sbb
lds
shlb
jae
lds
nop
inc
int3
mov
daa
add
cwtl
fucomp
cwtl
mov
xor
and
addr16
inc
and
push
jno
cmpsl
lea
sbb
paddb
sub
testl
adc
or
adc
add
and
xchg
add
xor
cmp
ret
aas
push
addr16
bound
adc
nop
or
std
push
pop
pop
std
stc
xor
aam
pop
inc
bound
push
imul
dec
repnz
sbb
jp
iret
and
xchg
movsb
dec
bound
leave
lea
mov
scas
mov
cmpsb
xlat
cmp
scas
cwtl
xor
imul
add
mov
mov
xor
cmpsl
inc
mov
mov
and
and
dec
test
sbb
cmpsb
test
mov
xor
and
leave
rolb
pop
out
mov
movsb
movsl
das
loop
mov
xor
aas
sbb
cmp
fs
sar
in
push
xchg
push
sbbl
orb
cs
jae
sub
mov
hlt
stos
imul
inc
adc
jle
mov
xchg
dec
popf
dec
add
pop
fcomip
testb
test
sub
xor
lcall
mov
add
shrb
jbe
sub
jmp
mov
mov
dec
or
or
or
aaa
lock
aaa
cmp
insl
aaa
movsb
es
mov
out
jl
rcll
movsb
sub
jecxz
cmp
jecxz
jno
int3
lods
scas
xchg
imul
jb
mov
and
fldenv
mov
jne
push
jg
mov
mov
das
pop
push
int3
push
xchg
and
pop
pop
loopne
mov
mov
aas
lcall
adc
mov
scas
sti
push
mov
dec
pop
cli
mov
sbb
mov
out
pop
pop
push
adc
xor
add
mov
mov
lods
xchg
xchg
inc
test
pop
das
mov
andb
mov
ss
mov
xor
insb
imul
xlat
or
mov
mov
nop
rcrl
mov
sub
mov
loopne
pop
mov
pusha
int3
pop
jmp
cmovg
cwtl
jns
movsl
xchg
pushf
mov
idivl
dec
pop
imul
push
adc
pop
mov
push
xlat
cli
lods
es
adc
les
ret
iret
xor
clc
cmc
scas
daa
cmp
lahf
je
jecxz
ss
cmc
call
mov
pop
jnp
xor
xorl
leave
mov
movsb
jns
clc
aaa
stos
sarb
jl
sti
sbb
and
add
xchg
fildl
inc
out
mov
push
in
or
imul
mull
outsb
jo
cmc
rolb
push
cmp
xchg
lcall
cltd
dec
adc
shlb
cmpsl
aam
jecxz
push
lods
mov
leave
push
daa
inc
arpl
fwait
test
sbb
movsl
xlat
pop
adc
negl
cld
loopne
js
iret
mov
sahf
mov
outsb
push
arpl
mov
and
leave
stos
jle
lods
mov
imul
xchg
sbb
cwtl
jnp
mov
mov
or
mov
xchg
outsl
jmp
mov
xor
push
mov
flds
hlt
inc
fldt
push
ss
mov
lcall
push
repnz
cmc
inc
stc
sbb
das
mov
insb
inc
xchg
sbb
push
jns
xor
lods
jb
stos
test
mov
jb
leave
daa
jo
stos
or
and
xchg
sub
mov
cmp
fs
sbbb
cmp
mov
and
pop
daa
sub
sahf
dec
mov
mov
mov
ds
je
xor
mov
cmp
movsl
jl
dec
lods
cmc
fcompl
pop
sub
and
mov
sti
dec
mov
cmp
and
mov
dec
js
scas
jo
movsb
in
lcall
out
test
and
jmp
or
lds
aaa
loop
gs
dec
lahf
repz
outsl
hlt
js
pop
in
inc
cmp
mov
cmp
imul
inc
leave
inc
pop
loope
add
push
xlat
cmp
pop
push
sub
clc
cwtl
mov
jp
aas
cwtl
xor
fs
pop
leave
mov
out
in
mov
shlb
dec
push
or
cmp
or
loopne
cwtl
jae
pop
sub
cld
sbb
das
jno
in
orl
sbb
sti
cmp
addr16
sbb
inc
stos
mov
jno
ficomps
in
aas
cltd
add
push
push
adc
lods
scas
sahf
cld
std
fdivrl
xchg
and
and
inc
jbe
mov
and
lcall
push
sahf
orb
loope
mov
pop
sub
inc
dec
daa
in
jns
cmp
das
mov
fistpll
lret
inc
adc
incb
data16
scas
test
push
ret
add
idiv
ret
cli
mov
cld
pop
mov
repnz
sub
pop
icebp
mov
je
imul
inc
outsl
add
sbb
add
dec
inc
outsb
xchg
mov
or
cmpsb
cwtl
xchg
je
je
mov
ja
lret
enter
out
cwtl
lea
adc
rcr
das
jmp
mov
loope
call
mov
push
cmp
mov
cmpsb
sub
pop
dec
into
adc
adc
into
jae
andl
leave
and
mov
imul
sahf
nop
movb
test
andb
jl
popf
js
mov
dec
dec
xchg
pusha
scas
push
pop
cmpsb
push
pop
in
outsb
pop
pop
leave
mov
stos
sub
mov
mov
mov
xchg
sub
aaa
push
sahf
mov
sbb
jp
ss
xchg
sbb
dec
push
sahf
mov
or
cmc
mov
arpl
lods
add
jae
fwait
sti
xchg
rcrb
repz
jne
outsb
lock
insl
mov
nop
mov
out
adc
loopne
sub
repz
pop
push
pusha
jae
out
sbbb
sbb
mov
xchg
imul
std
jecxz
mov
insb
arpl
outsl
sbb
jle
mov
fldcw
jnp
pop
inc
push
xor
adcb
push
mov
cld
jp
mov
fdivl
scas
sub
inc
movsb
loop
aam
out
xchg
aam
je
stos
xchg
mov
sub
mov
cmpsl
xchg
xchg
repnz
outsl
adc
popa
setnp
into
mov
mov
adc
inc
out
outsl
in
xor
jl
les
mov
shl
mov
mov
repz
mov
movsb
pusha
push
or
test
push
pusha
pop
inc
push
aas
sbb
faddl
push
jle
scas
movsl
cmc
jae
icebp
dec
movsb
xchg
xchg
push
into
jae
fnstenv
outsl
cmp
cmp
mov
dec
jnp
jl
pop
mov
out
mov
call
pop
sahf
sub
xchg
and
adc
jb
mov
mul
xor
icebp
leave
mov
inc
pop
adc
scas
jne
jnp
aas
xchg
push
jns
or
or
cmp
xchg
test
adc
mov
insl
mov
imul
orb
fs
shr
js
scas
or
movsb
fwait
ret
push
pop
loopne
jecxz
ret
pop
int3
push
xor
pop
inc
cli
ja
jbe
adc
and
pop
lret
iret
mov
cmpsl
imul
mov
outsl
or
test
movsl
xor
shll
call
arpl
out
movsb
and
sub
xor
mov
mov
popf
pop
repnz
rcl
cmc
test
xor
cmc
push
sub
cli
dec
sahf
in
xor
mov
imul
bound
mov
cmp
cmc
outsl
jmp
mov
adc
dec
test
mov
repz
or
pop
stos
aam
test
xchg
arpl
mov
mov
jl
pushf
lcall
repnz
out
and
mov
push
sub
dec
fistpl
pop
clc
ret
lcall
xchg
popf
out
push
sbb
jp
insl
scas
push
dec
out
mov
mov
insl
jp
lods
inc
shlb
ret
dec
xchg
insb
mov
xchg
in
loopne
iret
cmp
add
add
hlt
dec
pop
nop
out
or
pusha
daa
outsb
mov
jo
and
bound
xor
mov
pop
pop
jge
pop
ret
dec
out
subb
sbbl
sbb
jo
mov
add
jns
jno
and
mov
popl
cmp
pop
cmp
push
dec
mov
mov
sub
shrl
pmulhuw
mov
mov
lea
test
add
push
mov
stc
ret
fstps
xchg
pop
ret
rolb
arpl
inc
enter
aas
fistpl
pop
push
pop
cmp
bound
popf
cltd
popf
cmpsb
fxch
ljmp
lret
xor
subb
in
inc
xor
lahf
jns
push
xor
mov
in
dec
inc
out
mov
cltd
ss
test
aas
lods
fs
das
adcl
movsb
cmp
push
mov
mov
mov
imul
fidivrl
mov
fs
sbb
negb
and
push
jl
aas
iret
scas
out
popa
jmp
dec
push
cwtl
and
stos
jmp
orl
fwait
out
stos
icebp
sarb
imul
pushf
fcompl
dec
xor
ds
mov
mov
and
loop
test
test
xchg
je
cmp
arpl
pop
stos
icebp
insb
movsb
je
outsl
jns
mov
int
stos
and
ljmp
andb
outsl
fs
xchg
mov
aam
daa
mov
pop
adc
divb
out
mov
jae
scas
mov
lahf
cmpsl
xchg
sub
fisubs
add
xchg
les
jp
fstps
dec
lret
jns
idivb
pusha
loop
popa
ja
insl
rolb
push
fisubl
scas
and
dec
iret
cmpsb
subb
mov
popf
push
fwait
sub
mov
insl
and
cmp
imul
jmp
pop
push
inc
cmp
negl
sub
dec
xchg
ret
jge
pop
and
shlb
adc
test
and
adc
mov
xor
adc
sub
xchg
mov
adc
test
jo
adc
pop
nop
cltd
movsb
dec
cld
dec
iret
cmpl
test
test
mov
pop
cmpb
test
test
mov
popa
lock
mov
btr
xchg
sub
jns
lahf
jo
ds
adc
add
cmpsl
fs
int3
lcall
lcall
sub
sbbb
cmp
mov
enter
test
xchg
push
fnsave
dec
or
mov
xchg
mov
inc
cwtl
daa
pusha
insb
les
shlb
mov
sub
xchg
leave
xchg
mov
mov
ret
pop
arpl
repnz
lods
sahf
mov
push
test
mov
push
mov
pop
adc
imul
cmpb
movsb
sub
inc
jb
or
das
and
jae
inc
or
and
adc
rcll
imul
cmp
shll
shrb
stos
repz
sti
sub
cmpsl
lret
sbb
int3
outsb
push
mov
addr16
push
add
mov
out
sarb
push
fs
mov
jecxz
mov
cmp
push
xchg
mov
lods
and
ljmpw
adc
in
dec
subb
or
imul
sub
push
add
int3
mov
daa
mov
arpl
xchg
xchg
int3
sahf
pusha
or
sub
lret
fisttpll
and
fwait
jb
jmp
int3
inc
imul
adc
repnz
pusha
cmp
sti
pop
popf
bound
push
jmp
es
xchg
arpl
mov
xchg
jb
inc
sub
int3
adc
loope
mov
cs
addr16
xchg
pop
add
xchg
cmp
sub
and
push
aam
add
test
and
sub
roll
xchg
mov
mov
or
sub
xchg
add
shrb
test
inc
aam
pop
addl
jae
adc
sub
cmp
dec
sbb
sub
mov
xor
mov
jmp
push
adcl
add
mov
stos
lret
out
les
xchg
jb
xor
sar
pusha
mov
stos
cmp
xchg
cmp
fstps
mov
lods
shrl
sbb
adc
xchg
loope
lret
sub
sahf
mov
inc
pop
fldcw
add
in
out
stos
push
insb
lods
leave
rolb
mov
adc
inc
pop
scas
add
gs
xor
pusha
xchg
mov
jecxz
mov
cmp
fucomip
pop
scas
push
add
push
scas
and
ret
enter
push
sbb
xchg
leave
paddw
int
clc
inc
stos
repz
mov
ss
leave
xchg
adc
mov
jle
ss
mov
push
xchg
adc
lock
fstps
push
push
cld
push
adc
hlt
out
int3
pop
add
add
dec
cmp
sbb
xchg
xchg
or
push
insb
pushf
xor
xchg
mov
jno
lret
mov
fcompl
and
clc
mov
dec
fnsave
mov
xchg
xor
xchg
movsb
movsl
movsb
call
insl
cmp
pop
mov
arpl
lds
xchg
inc
das
mov
add
mov
aas
xchg
jbe
mov
test
adc
inc
popa
and
cmp
dec
mov
and
mov
loop
mov
stos
cmp
push
xchg
sub
popa
sahf
repnz
xchg
fisttpl
pop
inc
fistl
pushf
xor
scas
in
ret
leave
scas
cltd
jns
sub
or
scas
out
das
hlt
aaa
xchg
insb
jge
movsb
lods
mov
xor
call
xor
fucom
and
ret
notb
mov
andl
mov
jo
nop
insb
mov
sub
xor
je
pop
sub
mov
sbb
mov
or
xchg
ret
test
jne
pusha
popf
xor
dec
pop
movsl
lds
or
xchg
int3
mov
call
fs
in
sub
xor
int3
lret
faddl
arpl
into
push
lahf
sub
int3
lret
test
adc
push
and
jnp
lock
cmc
pop
inc
sub
sahf
mov
repnz
pop
rolb
loopne
mov
pop
notb
mov
xor
mov
mov
aad
jge
and
mov
cmp
sarb
jnp
movsb
pop
jmp
push
mov
enter
les
push
vaddsd
xchg
push
cmp
outsl
push
std
mov
adc
sub
xor
mov
jmp
mov
mov
daa
mov
ret
pusha
cwtl
pusha
lods
mov
imul
adcb
pop
inc
adc
mov
and
sub
shrl
sub
loop
mov
std
jo
mov
inc
jns
cmp
stc
jle
mov
aad
lock
fstpt
popa
mov
mov
jne
fsubrs
insb
aas
cmp
mov
lock
stos
mov
fsubs
mov
mov
bound
cwtl
mov
lods
xchg
sub
aas
jp
mov
cmp
mov
add
cmp
in
push
mov
movsb
shll
in
sub
and
mov
xchg
adc
mov
jmp
fldcw
add
loope
cmp
sahf
xor
pop
sbb
push
dec
mov
and
sbbl
adc
cmp
jne
scas
fs
sbb
xchg
push
dec
mov
or
insb
adc
test
arpl
inc
pop
xorb
scas
bound
pop
in
sbb
jecxz
dec
int3
push
jg
clc
addl
mov
insb
lds
jg
sub
push
outsb
jo
push
fs
sub
idivl
lods
popf
pop
ljmp
call
mov
pushf
jmp
inc
sub
jne
sbb
push
sbb
adc
or
push
subl
rorl
vmread
idivb
push
and
je
mov
loopne
mov
repnz
int3
dec
pop
roll
cmp
adc
or
mov
cmc
pop
in
jb
add
repnz
int3
jns
cltd
xor
loop
inc
test
pop
bound
int3
stos
jnp
xlat
das
push
mov
lods
dec
out
dec
sbb
inc
adc
xor
add
enter
cmpsb
int3
imul
sbb
addb
shr
push
jge
xor
mov
sub
sbb
and
pop
je
test
int3
hlt
push
fistl
sbb
dec
pop
fistps
push
arpl
dec
imul
lcall
add
mov
mov
aad
insl
mov
movsb
int3
enter
inc
insb
clc
insl
aad
and
pop
cmp
xchg
mull
xchg
pop
out
outsl
and
pop
and
jl
ss
xchg
out
les
ret
inc
sub
rcr
mov
mov
ljmp
mov
ljmp
xlat
data16
loope
fists
sbb
xchg
mov
aaa
loop
and
mov
adc
insb
insb
insb
adc
jge
or
push
mov
mov
sbb
adc
out
daa
mov
mov
mov
in
and
addr16
xchg
in
flds
das
lret
cmp
clc
outsl
push
add
cmp
mov
cmp
jns
aaa
and
sbbl
mov
imul
xchg
add
sub
pushf
jmp
xchg
fistpll
nop
mov
pop
or
push
lds
sub
xorb
pop
mov
out
shlb
xchg
fs
mov
insb
cwtl
fsubrl
push
loop
cmpsb
nop
mov
dec
mov
dec
in
inc
fistpl
ret
pop
popa
out
loopne
sahf
sub
mov
ret
and
mov
stos
bound
fildll
adc
cmpsl
dec
lods
out
xor
fs
int
bound
mov
xchg
movsb
sbb
mov
bnd
mov
mov
push
stos
inc
jns
lods
jne
lods
add
testb
jmp
xor
js
stos
je
aad
xchg
jl
and
push
mov
pop
pop
ret
test
jle
mov
cmp
int3
or
or
mov
repnz
xlat
in
sub
outsl
aaa
mov
adc
arpl
adc
pop
jo
pop
das
and
mov
jl
adc
js
push
aaa
push
iret
js
sahf
outsl
dec
mov
pop
xor
mov
in
pop
mov
lods
mov
not
cmp
fmuls
mov
insl
out
test
dec
mov
sub
and
lret
push
jo
jae
xor
andb
stos
jp
ja
sbb
ret
lock
cmp
mov
int
dec
in
xchg
test
in
adc
cmpsb
mov
sub
xor
push
loop
dec
inc
outsb
jae
arpl
xchg
push
test
aad
sbb
and
orb
sub
mov
inc
mov
in
pop
out
scas
cli
movzbl
push
push
sti
xor
jge
jae
pop
sub
aad
cmp
jo
and
lods
fst
jns
pop
mov
outsl
das
stos
leave
fcom
in
mov
mov
rcrb
jo
mov
in
and
pusha
fsubrp
add
pushf
rcl
mov
sub
mov
lods
mov
push
inc
sbb
cmp
xchg
lret
and
jmp
fsubr
mov
fs
push
lret
push
movsl
xchg
push
imul
jae
xchg
ja
popa
mov
je
fdivs
cmpl
and
pop
in
dec
adcb
scas
insb
jp
test
push
push
adc
test
mov
addr16
movsl
andl
sbb
jo
popa
mov
sub
pop
cmpb
in
pop
adc
cmp
fisttpl
int3
fcoms
rol
fdivrl
mov
js
jb
int3
mov
sbb
jbe
cli
repnz
mov
popa
imul
mov
jno
aas
push
xchg
push
dec
sub
cs
or
cmpb
mov
mov
es
mov
jbe
push
mov
orb
aaa
cmp
lcall
mov
mov
add
pop
jae
mov
repz
lods
pop
mov
movsb
bound
stc
imul
popf
into
arpl
jl
xchg
leavew
xlat
mov
adc
ja
ljmp
sahf
jb
loope
jmp
mov
das
lods
dec
int
fs
insb
insb
int3
jne
hlt
sti
sahf
pop
mov
mov
arpl
ja
lea
fwait
stc
pop
mov
mov
iret
sbb
jno
scas
sbb
sub
push
mov
push
sahf
outsl
xor
js
mov
ds
leave
mov
dec
insl
sbb
lds
inc
int3
cmpsl
fistpl
gs
push
lock
push
cmc
mov
add
enter
mov
cmpsl
or
nop
mov
fs
shl
cmc
and
ror
mov
cwtl
xchg
xor
inc
repz
leave
xor
pop
push
jns
jg
mov
inc
leave
cltd
loop
mov
inc
adc
xchg
lock
mov
jns
xlat
lods
pop
mov
sub
stos
pop
pop
sarb
shrb
push
push
dec
inc
jl
int3
inc
arpl
rolb
adc
or
pop
movsl
xor
cmp
popf
mov
inc
data16
fwait
pusha
into
gs
dec
pop
xor
sub
push
add
loop
sub
lds
push
imul
pop
data16
pop
add
pop
movsb
lods
mov
jb
xchg
and
pop
mov
call
mov
sbb
jmp
cli
pop
jb
push
jbe
pop
cmp
push
call
dec
dec
push
xor
lods
cmp
dec
and
rclb
xchg
jns
jnp
mov
lods
pop
xor
xchg
jle
rcll
cmp
sbb
mov
outsb
inc
jb
dec
bound
repnz
pushf
roll
jo
mov
sub
xchg
jg
jo
je
ljmp
xor
js
xor
mov
mov
popa
leave
add
nop
pop
mov
mov
addl
insb
cmp
je
mov
leave
xchg
xor
mov
jnp
fucomip
mov
repnz
dec
mov
fs
cmpsl
cli
out
mov
or
xchg
shll
push
les
add
and
pop
mov
scas
sbb
popa
pop
xor
push
jp
xchg
pop
mov
ss
or
out
xchg
pushf
out
leave
inc
jecxz
add
and
dec
dec
popf
adc
sbb
xor
jo
outsb
pop
jo
xor
subb
je
scas
lret
cmp
mov
imul
mov
arpl
test
jo
adc
dec
test
iret
jecxz
jo
into
shl
mov
cmp
dec
test
push
insl
test
ja
inc
jge
gs
mov
inc
add
xor
dec
iret
popf
clc
daa
mov
es
ret
pop
adc
stos
pop
jns
ret
lock
les
mov
add
mov
outsl
hlt
jg
stos
mov
mov
ljmp
sub
or
fcompl
push
xor
jae
xor
movsl
int3
jb
pop
in
mov
mov
sbb
stos
sub
sub
mov
inc
sbb
lock
dec
sub
insb
arpl
xchg
jge
jns
sub
xchg
cmpb
lahf
int3
jmp
cwtl
mov
sub
int3
pop
mov
mov
pushf
int3
dec
out
push
notb
mov
fwait
int3
dec
and
xchg
push
mov
int3
fs
push
cltd
int3
jg
jo
cmp
cwtl
int3
outsl
lcall
aam
push
and
mov
and
imul
je
stos
and
daa
sub
pop
add
imul
mov
int3
stc
in
scas
xchg
into
sub
mov
xor
pop
addr16
adc
pop
aas
mov
imul
adc
and
pop
push
push
outsb
add
and
add
fwait
dec
rcrl
jp
mov
pop
dec
scas
push
jge
xchg
jp
xorl
adc
sub
mov
push
mov
push
xor
cmp
pop
cmp
jne
aam
fs
lds
sbb
mov
stos
sub
xor
mov
jbe
or
out
push
mov
test
mov
sub
les
in
cltd
ss
push
mov
xchg
bnd
xor
adc
mov
cmp
rcl
inc
fwait
pop
mov
popa
xor
lds
xchg
movsb
mov
jl
sbb
pop
mov
je
insl
outsb
es
pop
fs
add
pop
mov
or
js
int3
cltd
mov
je
push
jl
dec
dec
sbb
test
xor
cmp
test
and
js
xchg
sub
cmp
mov
mov
ficoms
pop
js
inc
cmp
in
test
loope
dec
mov
jl
cmp
sti
push
jmp
outsl
push
vandnps
nop
ror
lods
jnp
mov
mov
jo,pn
lret
cmpsl
mov
cmc
ficoml
subb
xor
idivb
or
pop
fdivl
popa
fwait
int3
cmp
out
cmpl
push
pusha
test
mov
aas
nop
fimull
mov
rorl
stos
sahf
jae
cmp
push
mov
int3
fucomip
orb
mov
icebp
out
scas
mov
icebp
scas
dec
mov
push
test
push
mov
leave
jl
pop
movsb
xlat
inc
cwtl
sub
movsb
adc
test
hlt
mov
movb
jae
sti
mov
bound
sbb
inc
pause
mov
dec
pop
cmc
xorps
incl
lahf
dec
pop
push
aam
mov
adc
les
and
sti
fsubs
or
push
cmp
jg
mov
fcomip
adc
add
popa
or
mov
mov
cmp
pusha
das
and
gs
push
int3
fld
push
js
fcompl
addr16
cld
mov
ret
inc
int3
xchg
xchg
sbbb
scas
imul
inc
jne
aad
lea
mov
inc
out
dec
cmc
cmp
incl
test
stc
xor
pandn
repz
pop
pop
out
xchg
hlt
sbb
cltd
xchg
shr
mov
jl
mov
pop
insl
test
icebp
ss
fsub
ret
cltd
lar
out
aaa
stos
out
sbb
cmp
stos
sub
fsubr
mov
jo
pushf
js
outsb
mov
jecxz
cmp
xor
inc
mov
mov
clc
cvtdq2ps
out
dec
les
sti
push
ficomps
mov
cmp
sub
loop
pop
pop
jo
arpl
jo
and
jo
insb
outsl
mov
out
jl
je
xor
enter
jns
ss
cwtl
in
push
jl
mov
jnp
mov
data16
adcb
dec
std
adc
xchg
mov
fs
sub
insb
pop
scas
inc
cmpsb
lds
cmp
bnd
cmp
or
mov
jecxz
jbe
pop
imul
mov
push
pop
aas
push
or
enter
inc
xlat
stos
jae
pusha
movsl
xor
inc
sbbb
mov
sbb
out
push
rclb
adc
pop
mov
lock
and
into
out
mov
movsl
insb
popa
cwtl
scas
sbb
pop
sub
pop
outsl
mov
mov
xor
pop
fnstcw
cltd
cmp
sub
iret
mov
inc
imul
mov
lea
cmpsb
jecxz
andb
inc
inc
cmp
pop
ljmp
fcoms
jb
xor
mov
cwtl
lea
sbb
and
in
js
aas
xchg
aas
movsl
mov
je
fs
popa
int3
lahf
mov
enter
push
xlat
mov
add
push
cmpsl
sbb
dec
or
movl
dec
or
loope
push
cmpsl
push
shrl
add
push
push
shll
dec
mov
push
sub
push
idivb
push
xor
sub
mov
out
ljmp
arpl
popa
xchg
xchg
repnz
popa
shlb
lret
movsb
and
test
cmpsb
lahf
or
add
cmp
push
test
xchg
inc
mov
or
push
lret
dec
pop
mov
insb
lods
xor
arpl
sbb
sti
lods
xlat
push
into
pop
sub
imul
cmpsb
out
xchg
xchg
test
push
xor
pop
aam
hlt
mov
insb
popa
shl
fsqrt
jg
imul
aaa
imul
outsb
and
and
push
push
outsl
pop
ljmp
scas
jmp
dec
inc
sbb
xorb
clc
push
dec
push
insb
out
mov
scas
xor
xchg
popa
push
adc
mov
in
mov
faddp
gs
or
gs
xchg
in
adc
jl
dec
enter
xchg
insb
mov
int3
sub
outsb
imul
add
lea
sbb
xchg
pop
cli
pop
dec
mov
jl
aaa
mov
out
ficomps
bnd
test
cs
leave
stos
mov
push
daa
insb
test
lahf
scas
sti
cmpsl
test
test
gs
mov
push
je
aaa
xchg
data16
xor
mov
arpl
out
and
daa
in
in
in
fldcw
daa
gs
dec
ret
sub
xor
adc
aas
pop
xor
loopne
pushl
mov
in
add
pop
addr16
mov
ret
in
dec
loopne
push
push
mov
push
jl
ljmp
sub
sbb
roll
movsb
fdivl
mov
jmp
imul
ds
mov
test
out
mov
jnp
pushf
inc
mov
scas
inc
sbb
not
int
sub
cli
jmp
xor
decl
pop
xchg
xchg
jo
sarl
push
movsb
lret
cmpsl
clc
leave
into
sbb
mov
adc
dec
xchg
sbb
lods
xchg
mov
mov
cwtl
out
mov
push
xchg
inc
push
jns
test
jecxz
jb
mov
scas
pop
cmp
xchg
pop
fisttpl
int
insb
sub
les
std
outsb
cld
sub
sysexit
outsl
dec
mov
and
ljmp
int3
or
fsubr
pop
and
in
and
orb
add
dec
ret
pop
sarb
inc
fiadds
push
and
mov
pop
popf
push
lret
mov
mov
stos
cmp
mov
mov
das
arpl
cwtl
xchg
sbb
mov
xor
mov
and
loop
out
inc
xor
pushf
jo
iret
push
push
or
and
mov
sub
or
mov
mov
lcall
dec
iret
stos
xchg
push
movsb
sbb
xor
orb
js
div
arpl
pop
mov
mov
ss
shll
push
pusha
cmp
mov
sahf
lret
mov
leave
pop
lock
imul
inc
je
xlat
shlb
ficompl
mov
out
sub
sahf
push
push
dec
xchg
jmp
inc
adc
fstps
xor
sti
or
mov
mov
push
mov
xchg
hlt
pop
fldt
std
dec
sbb
xchg
mov
sbb
xchg
sub
jnp
jl
mov
mov
mov
xor
iret
stos
shl
rep
mov
leave
outsb
mov
leave
mov
mov
sub
hlt
test
outsb
sub
xchg
outsb
mov
das
test
dec
je
nop
mov
fcmove
xchg
ss
xchg
addr16
in
cmpsl
das
shl
orl
pop
dec
xor
in
sti
adc
and
in
sub
xor
sti
out
sahf
pop
mov
push
sti
and
adc
cmc
subl
outsb
aam
fldl
mov
lret
mov
xor
add
cltd
xlat
lcall
add
or
das
adc
je
mov
jae
mov
mov
mov
je
movaps
cwtl
daa
imul
xor
and
aad
ja
adc
cwtl
or
mov
fistl
insb
daa
daa
jmp
cmpsl
mov
mov
shlb
xchg
test
inc
adc
jmp
xor
push
sub
inc
out
mov
fwait
int3
sbb
sub
pusha
sahf
je
pop
inc
lcall
mov
xchg
subb
subl
aas
cmpsl
cmp
mov
out
push
xchg
int3
in
add
imul
mov
adc
daa
icebp
and
mov
xchg
mov
cwtl
int3
std
add
out
ficoms
iret
inc
int3
inc
iret
or
mov
sub
int3
mov
gs
mov
inc
imul
inc
xchg
das
pop
xor
pop
or
fisubs
cmc
mov
std
cmp
dec
mov
les
stc
add
enter
add
int3
sub
jo
sbb
icebp
jbe
out
mov
sub
dec
mov
or
insb
shlb
loop
sti
mov
mov
mov
dec
fisttps
xor
aam
and
xorl
jp
fwait
sbb
adc
leave
pxor
call
pop
mull
iret
sub
test
imul
dec
jb
mov
int
int3
subb
mov
test
adc
aam
repnz
stos
add
xchg
ret
add
test
cmc
outsl
es
test
dec
aam
popf
push
xor
lods
and
dec
je
sub
insb
dec
fsubr
mov
mov
jnp
xor
cmp
stos
pop
callw
stos
out
fs
cmp
cmp
sub
xchg
pop
out
call
push
mov
push
rol
inc
in
jl
mov
mov
sbbl
fwait
and
mov
fsubp
fisubs
dec
and
rorb
addr16
inc
scas
testb
mov
sti
pop
xchg
jbe
and
test
loop
js
arpl
sbb
ja
push
shlb
add
push
repz
jl
sub
sbb
je
stos
leave
out
lret
popa
scas
push
je
cmpsl
negl
mov
mov
leave
mov
addl
popa
sub
xorb
out
adc
mov
xor
jns
ja
out
clc
subb
fs
xor
ret
leave
pop
adc
push
ljmp
xor
clc
imul
mov
imul
ljmp
mov
and
fldl
test
pusha
stc
jg
aas
pusha
mov
repz
pop
jae
insl
repnz
xor
js
or
aas
cmp
or
fwait
int3
or
js
sub
xor
rcll
inc
dec
xchg
cwtl
scas
pop
cltd
stos
mov
mov
fsubrs
divl
mov
fs
mov
lods
xor
out
leave
mov
popf
mov
cmpsl
sub
cmp
adc
test
test
sbb
gs
mull
es
xchg
jb
movsb
mov
add
xor
pusha
out
push
jbe
fs
pop
test
icebp
jb
or
out
aad
adcl
pop
arpl
dec
loopne
and
rcrb
push
and
cwtl
scas
mov
dec
test
daa
push
jb
test
adc
rorb
lret
insb
fbstp
push
mov
out
pusha
mov
or
gs
pop
jns
pop
sahf
and
cwtl
test
movsb
sub
data16
fsubl
sub
loope
sub
int3
or
fs
xchg
andb
fidivs
mov
aas
inc
ret
es
mov
mov
push
add
pop
xor
movb
subb
adcl
push
mov
stos
dec
popl
rcrb
pusha
pop
add
pusha
push
jo
shl
xchg
push
jl
xlat
jmp
xchg
mov
bsr
jg
data16
in
inc
je
inc
pop
fs
iret
sbb
mov
arpl
fwait
test
or
mov
push
and
cltd
xchg
pushf
xchg
mov
dec
mov
xlat
in
leave
mov
test
nop
xor
jmp
mov
and
imul
dec
mov
in
push
movsb
rcrl
pop
jg
add
xlat
add
aas
loopne
lret
dec
add
lret
xchg
mov
fwait
pop
lods
mov
add
pop
inc
dec
imul
jge
pop
adc
cmp
pushf
lods
and
add
add
stc
adc
inc
outsl
lods
sahf
mov
jmp
cmp
pushf
push
jbe
dec
cmpsl
mov
test
xor
test
add
stos
es
popfw
pushf
adc
xchg
jb
repnz
jecxz
and
and
cmp
in
fs
mov
popf
leave
jmp
fcoml
xchg
loope
cld
dec
pop
scas
dec
mov
and
pushf
cmp
add
shll
test
outsl
outsl
je
arpl
mov
sbb
or
int3
xor
ja
mov
sub
and
nop
xor
shll
dec
movsl
roll
leave
nop
jp
xchg
negb
mov
lods
fldl
mov
adc
sub
mov
daa
das
arpl
data16
in
int3
pop
sarl
inc
cmc
sahf
sbb
int3
xchg
out
adc
loopnew
add
aam
stos
pop
aas
sbb
in
cmpsl
repnz
adc
std
sub
popl
or
scas
inc
mov
xchg
push
jecxz
jl
mov
sti
mov
outsb
aam
test
gs
jecxz
leave
sbb
aas
test
pop
jo
mov
sub
pop
js
daa
fistps
mov
test
mov
cmp
imul
sbb
loopne
scas
pop
cmp
in
je
in
cld
hlt
fdivs
mov
jl
int3
jno
popf
inc
pushf
mov
outsl
jae
push
or
jge
or
jge
and
push
in
ret
out
push
hlt
subb
pusha
push
arpl
pop
lods
adc
cwtl
pop
mov
lret
cmc
loopne
push
xchg
jae
dec
cs
push
or
push
mov
mov
testl
sahf
push
jge
icebp
xor
or
pop
aas
pop
push
add
out
push
test
fs
cmpsl
mov
add
pop
mov
jnp
xor
pop
inc
push
xchg
rcl
dec
cmc
or
cmp
dec
inc
minps
dec
pop
mov
fs
cmp
push
adc
mov
lea
testb
mov
sub
fs
push
movsb
xor
je
and
enter
push
outsb
cvtps2pd
sub
pop
lods
xchg
xor
mov
xchg
lahf
test
bound
mov
xchg
jge,pn
loope
mov
adc
cli
out
in
mov
xchg
fimull
and
mov
jg
out
mov
fsubs
mov
jnp
jns
and
nop
enter
rol
xor
repnz
mov
jge
fnstenv
mov
inc
push
scas
sub
repz
adc
add
ret
inc
jbe
mov
mov
mov
dec
adc
sub
xchg
test
and
addb
sub
jmp
pop
ljmp
xor
int3
incb
jo
mov
jbe
cmp
mov
adc
sbb
dec
aas
mov
dec
aad
push
jb
mov
inc
push
push
test
xchg
outsl
cmc
test
mov
push
xlat
loope
xchg
push
mov
pusha
aad
sub
push
xchg
pusha
nop
bound
inc
pop
xchg
adc
imul
or
pop
adc
fisubrl
jae
out
popa
jl
ljmp
push
outsb
sbb
dec
pop
push
xorl
xor
shl
dec
mov
nop
dec
inc
movsb
cmp
add
push
push
enter
cmpsl
adc
sub
jns
cmp
imul
ss
jo
or
pop
fists
loop
mov
cmp
das
loopne
mov
gs
mov
xor
scas
cmpsb
stos
or
stos
mov
adc
pop
cmpsb
xchg
xor
push
stos
jbe
xchg
in
mov
mov
pop
sub
inc
repz
js
sti
inc
imul
inc
stos
jo
cmp
aaa
xchg
test
xchg
adc
inc
sub
rorb
repnz
gs
dec
xchg
adc
pop
jmp
and
sub
and
xchg
push
mov
push
and
cld
imul
pop
cmp
std
dec
test
mov
push
rep
xor
or
fistl
lret
push
mov
clc
ljmp
push
mov
push
push
dec
mov
xchg
dec
sarb
sahf
xchg
cmpsb
dec
sbb
push
inc
outsb
mov
cwtl
xchg
adc
xchg
rolb
test
sbb
fwait
xchg
push
clc
daa
dec
mov
repz
push
fstl
pusha
adc
push
fwait
mov
cwtl
int3
daa
mov
fdivl
pop
imul
jns
inc
lahf
js
cmpb
xchg
xor
stc
cmp
push
idivl
cmp
shlb
mov
je
fisttpl
sarl
mov
mov
sbb
xchg
js
push
jmp
mov
xlat
sub
cmp
int3
aaa
std
mov
pop
clc
mov
jb
cwtl
jns
fwait
cmpsl
andl
pop
daa
sub
sub
sub
mov
leave
xor
hlt
add
and
std
cld
sbb
sub
dec
push
in
loope
jmp
mov
pop
imul
je
loop
mov
push
outsb
sub
mov
stos
mov
movsl
mov
imul
xchg
je
xchg
mov
xor
aas
inc
cmpsb
inc
sub
lret
push
mov
cltd
xorb
fcoml
mov
imul
sbb
je
pop
and
push
je
cs
pushw
mov
insb
sub
je
ss
cmp
js,pn
insb
outsb
shrl
xchg
or
xorb
jecxz
sub
push
xor
movsb
push
jmp
jg
sub
xor
sub
and
daa
fdivs
mov
cmp
scas
pop
idivl
push
mov
cwtl
cltd
jmp
lret
push
inc
in
xchg
mov
lds
rolb
insl
popf
add
mov
arpl
add
jns
cs
pop
inc
shlb
lret
sbb
xor
lods
xor
inc
daa
movsb
je
xchg
mov
mov
xchg
mov
bound
out
mov
jno
clc
adcb
sahf
jo
sbb
dec
aas
adc
test
inc
cld
lock
arpl
cmp
xchg
fwait
pop
leave
push
insb
pushf
inc
push
std
jl
jno
cwtl
out
fmull
outsb
sti
scas
je
hlt
mov
clc
outsb
mov
ss
pop
dec
cmpsl
mov
mov
push
shlb
dec
mov
aas
aaa
mov
push
popf
pop
push
jo
xchg
fs
jecxz
insb
movsl
pop
pusha
or
and
xchg
cmc
lea
jns
xchg
jb
cld
movsl
les
es
mov
jp
jno
enter
insb
mov
dec
xchg
jg
sbb
je
jmp
iret
mov
mov
mov
scas
scas
lods
test
xor
mov
movsb
xor
sub
push
js
inc
sbbb
jne
lods
mov
jp
sub
jmp
mov
inc
clc
and
lods
orb
bound
push
or
es
inc
push
test
xor
dec
mov
pop
mov
outsb
ret
les
mov
stos
stos
sbb
ss
lahf
out
mov
pop
jp
inc
sti
cmp
testb
cmp
cmp
das
int3
ret
std
pop
sbbl
leave
xor
push
sti
push
adc
movsl
andb
jecxz
lret
mov
jg
add
test
fwait
sbb
xlat
inc
and
aaa
js
in
int
dec
leave
sub
mov
pusha
pop
js
jo
pop
sti
jecxz
push
pop
test
orl
popf
sbb
pop
in
stos
lcall
fwait
adc
inc
ret
push
stos
xor
cmp
pop
fs
shll
repz
ds
subb
jl
xor
push
test
fmull
repnz
lock
add
xor
lock
sbb
aam
mov
push
mov
pop
pop
and
ret
mov
mov
repnz
aaa
push
cmpsl
test
test
lret
cmpsl
mov
lock
push
cmp
sbb
sbb
push
fsubrs
insb
sbb
jo
cli
and
icebp
sbb
stos
stos
in
jl,pn
into
push
mov
mov
cmp
lock
mov
imul
lds
xor
in
push
pop
xor
mov
mov
lds
cmc
repnz
pop
pop
sbb
sub
lcall
movsb
xchg
push
and
sub
mov
push
loop
shrl
std
mov
pushf
stos
popf
les
sub
fldenv
push
push
fildll
mov
push
xchg
es
pushf
ljmp
pusha
pop
jecxz
pop
jns
mov
and
outsl
clc
xchg
pop
xchg
aam
movsl
sub
jp
pop
adc
cwtl
int3
mov
fidivl
push
mov
adc
and
test
cmc
dec
cli
ret
jmp
mov
lds
or
loopne
popf
popa
loop
insb
repz
enter
scas
jle
repnz
loope
sti
jo
xor
add
lock
addr16
jb
mov
test
push
cmp
pop
dec
inc
data16
in
and
push
pop
and
in
push
jo
jge
outsb
or
fsubrl
inc
push
adc
sub
cwtl
mov
mov
outsl
add
xor
xchg
pushf
dec
sub
repz
push
fistpl
sbb
push
cmp
push
test
dec
insl
jns
mov
dec
test
aaa
scas
mov
mov
sbb
rclb
sbb
test
xchg
push
in
xchg
movsb
jo
lock
stos
sub
pop
ljmp
sub
mov
xchg
mov
movsb
subb
test
mov
push
xor
mov
das
addr16
jb
xchg
mov
leave
popf
cmp
bound
in
in
adc
sahf
mov
gs
pop
int
push
fimuls
mov
incb
cmc
jo
sbb
xor
or
jae
into
push
inc
call
arpl
ljmp
fs
test
jno
xchg
jl
fnstcw
gs
sbb
rcrb
or
dec
xor
sbb
fdiv
mov
test
add
test
or
pop
jns
int
inc
std
fistpl
das
test
repz
and
sub
outsb
sub
xchg
mov
mov
adc
aad
mov
sti
fisubrs
pusha
xchg
jmp
sub
mov
mov
js
mov
push
inc
add
sub
add
jno
or
sub
lea
in
sub
pop
mov
lea
js
ljmp
sub
xchg
xor
inc
cs
pop
adc
sub
aaa
mov
in
xchg
ret
cmp
xchg
mov
fucom
fcmovne
pop
and
leave
and
mov
adc
adc
dec
ret
outsb
lock
dec
mov
int3
into
pop
sub
cld
mov
pop
jo
mov
push
push
push
pop
mov
sahf
jge
addl
mov
xchg
jno
in
js
sub
jb
push
test
xor
cmp
lcall
aam
lret
xor
mov
adc
pop
js
loope
pop
jae
add
jnp
cltd
mov
stos
jge
mov
push
mov
push
mov
lret
sub
out
inc
push
add
loope
mov
jl
ds
cwtl
ss
xor
hlt
mov
mov
pop
sahf
jb
das
roll
imul
lret
decl
cmp
cs
movsl
pop
call
cld
leave
bound
jp
xchg
xchg
push
or
lock
xchg
mov
push
push
sub
in
daa
cld
mov
in
xchg
dec
imul
push
js
jp
jae
pop
cld
outsl
das
lret
and
fs
test
repnz
mov
repnz
subps
dec
data16
and
sbb
pop
sub
push
sub
pop
xlat
cli
fidivl
jae
jne
cmp
arpl
pop
sub
mov
xlat
adc
pop
push
daa
clc
stc
jmp
jl
and
mov
sbb
leave
sub
fists
lea
shlb
mov
xor
mov
ja
or
jge
cltd
mov
ja
loope
test
packssdw
inc
sahf
imul
stos
popa
mov
xor
dec
cmp
mov
cmpsl
cmc
je
arpl
in
ret
je
inc
movsl
push
aad
adc
mov
int
pop
mov
or
popf
pop
mov
xor
and
sbb
xchg
xor
mov
jne
xor
arpl
ror
mov
cmp
inc
fwait
nop
mov
push
cmpsb
sub
les
push
and
dec
popa
pop
mov
jb
cmp
cmp
ret
insb
sub
sbb
lods
add
add
jg
test
xchg
sti
or
xchg
inc
mov
mov
xchg
mov
sbb
into
cmp
jae
int3
sub
mov
jb
gs
pop
mov
add
inc
sbb
cltd
lret
xchg
aaa
cmp
add
movsb
cmp
jb
jns
xor
add
popa
jne
imul
mov
sub
mov
sub
xor
cmp
inc
ds
xchg
and
andl
popa
lods
add
in
add
pushf
pop
inc
sub
daa
popa
or
in
add
inc
mov
int3
cmpsl
das
rcrb
push
add
xchg
mov
jae
lret
jbe
idivb
mov
xor
lods
add
pop
inc
jns
pop
inc
cmpb
inc
adc
ljmp
scas
pop
pushf
xchg
adc
lods
jae
jge
jns
sub
repnz
or
hlt
jo
cli
pop
cmp
ret
cmp
add
arpl
mov
xor
pop
adc
jp
sub
jl
mov
mov
popf
mov
fildl
jmp
pop
xchg
push
pushf
cld
sub
xchg
mov
pusha
fwait
aas
sahf
inc
mov
fistl
push
lret
sub
sub
inc
outsl
outsl
adc
movsb
fistpl
mov
fidivs
enter
inc
jecxz
push
inc
aad
mov
jnp
xchg
xchg
call
scas
xchg
jns
cmp
pop
inc
cmp
aad
xchg
xchg
adc
or
fimull
xchg
addr16
aad
fcomps
pop
leave
push
shrl
cs
ljmp
cmp
xor
mov
das
add
cmp
mov
js
sbb
dec
jae
fmull
jne
xchg
xchg
faddp
xor
jle
jno
in
sti
xchg
xor
xchg
and
insl
cmp
repnz
cmpb
xor
pusha
mov
push
push
lret
mov
int3
out
fs
push
cli
sbb
pop
sub
out
movsb
mov
pop
nop
outsb
movl
popf
std
inc
add
jl
andb
jnp
pusha
and
outsl
or
in
dec
movsl
ficomps
push
nop
ja
push
scas
xlat
fwait
xchg
mov
add
push
cmp
jo
push
incb
lret
pop
in
xor
cld
or
pop
pop
push
xor
mov
xor
leave
inc
repz
rcl
stos
aas
fwait
sub
push
js
inc
test
xor
rcrb
movsb
stos
test
mov
sahf
popa
push
ljmp
jnp
out
xlat
sub
mov
mov
mov
int3
pop
jno
ljmp
adc
mov
mov
push
or
inc
xor
mov
inc
cmpsb
repz
movsb
jmp
xchg
nop
adcl
hlt
dec
push
repnz
ja
jno
cmp
xchg
mov
cmp
xchg
outsb
xchg
cmp
mov
cwtl
and
std
mov
lods
add
ja
push
add
jae
repnz
dec
mov
lea
pop
shl
fs
xor
dec
push
pop
xor
pop
xor
int3
fstl
mov
adc
cld
mov
mov
or
adc
mov
pop
mov
jl
adcb
push
sarl
js
dec
sub
or
xchg
xor
xor
cmpl
jb
dec
xchg
pop
mov
xchg
dec
sti
jmp
pop
popa
test
aad
xchg
jb
imul
and
mov
into
mov
insb
outsb
enter
aas
stos
push
popa
add
movsb
rorb
popa
subl
test
or
mov
in
mov
push
mov
je
pusha
pop
xor
outsl
push
ret
cmpsl
fs
cli
fwait
pop
cld
nop
and
int3
stos
leave
dec
jg
adc
fidivs
int3
adc
xorb
mov
add
mov
dec
add
jp
cmp
cli
sti
xlat
jecxz
add
lds
mov
jo
push
mov
rdmsr
jo
loop
pop
sub
mov
or
mov
jb
fsubrl
xor
or
inc
push
xchg
xchg
jecxz
loop
fstl
nop
and
stc
jmp
popf
mov
insb
insb
sbb
mov
sbbb
xchg
daa
push
inc
imul
cmp
mov
je
mov
js
leave
clc
inc
gs
es
imul
push
jmp
enter
or
in
test
imul
scas
insb
pop
stos
out
jmp
and
lods
and
lods
movsb
shlb
gs
push
mov
or
sub
jmp
sbb
push
incl
iret
sub
cmc
push
daa
or
repz
fisttpl
mov
jae
punpcklbw
int3
mov
aas
lret
int3
arpl
pop
jmp
xchg
ds
jmp
lret
mov
jmp
jnp
push
cld
shlb
adc
sbb
mov
mov
sub
pop
fstpl
in
push
dec
mov
popf
scas
or
cmc
in
cwtl
xchg
int
mov
jle
scas
inc
jo
adc
mov
sbb
fstpl
dec
lods
imul
out
cwtl
xchg
xor
lea
into
bound
mov
cli
sub
xchg
sbb
mov
insl
dec
and
cmp
pop
jo
ret
sbbl
xchg
cmp
insb
test
cmc
leave
ret
and
mov
test
aaa
repnz
pop
popf
dec
ds
adc
subl
cmpsl
push
ja
cltd
lahf
adc
mov
dec
xchg
insl
cmc
and
addr16
fs
xchg
mov
pop
mov
pop
sbb
adc
dec
mov
out
lcall
push
jne
negb
iret
jbe
pop
mov
pop
stos
scas
pop
mov
jno
cld
orl
movsb
xchg
rcrl
xchg
or
mov
inc
fidivl
pop
shll
sahf
jne
sahf
stc
sbb
lret
xor
aas
lcall
dec
fsubp
test
je
mov
jns
mov
popf
mov
mov
pop
mov
leave
mov
pusha
nop
jnp
pop
jns
incl
aad
stos
push
xchg
fwait
das
data16
cmp
lret
out
mov
dec
mov
lret
mov
jb
cmp
pop
test
jne
sarl
sub
nop
xchg
pop
push
lea
push
test
and
mov
cmp
fisubrs
jmp
mov
fwait
pop
lret
gs
mov
or
les
inc
xchg
inc
sbb
push
imull
in
mov
ljmp
les
paddsb
sub
outsl
mov
test
mov
addr16
dec
sahf
ss
mov
outsl
rolb
mov
imul
test
leave
lret
xchg
pop
jl
daa
mov
dec
scas
icebp
arpl
mov
adc
cmpsl
lds
sti
jge
mov
daa
popa
sub
mov
fidivs
pop
mov
arpl
orb
push
insb
jno
mov
jne
xchg
cmp
mov
ret
sub
dec
mov
dec
insb
int3
out
pop
cmc
notb
test
sbb
mov
xor
inc
mov
push
repnz
mov
pushf
add
or
and
mov
jle
out
popa
loope
insb
enter
cmp
and
xchg
pushf
pop
or
fcmovne
shlb
mov
sti
xchg
popa
pop
stc
test
gs
out
xor
mov
inc
push
add
cmp
jecxz
add
bound
xor
pop
xchg
mov
adc
mov
pop
int3
mov
mov
or
mov
pop
arpl
dec
das
ss
insb
dec
pusha
and
mov
pop
sbb
and
mov
mov
mov
mov
inc
subb
inc
inc
iret
call
xor
sti
mov
sti
aam
push
pop
and
lea
sbb
sub
sbb
aad
xor
push
sub
xlat
sbb
testl
test
mov
push
xor
and
mov
sub
and
scas
mov
inc
out
insb
popf
mov
int3
pop
mov
mov
push
scas
xor
jnp
push
jb
xchg
lret
sbb
and
jb
push
mov
sti
cli
dec
test
xchg
mov
out
insl
sbb
call
mov
mov
scas
adc
xchg
movsl
cs
test
dec
bound
aam
mov
test
pop
cltd
sub
pop
push
jg
scas
push
test
push
pop
push
pusha
imul
sbb
xchg
adc
arpl
push
push
popf
lcall
int
jno
mov
dec
stc
push
or
mov
sbb
push
lods
movsl
movsb
jnp
inc
mov
pushf
ja
jg
cmp
js
dec
aam
icebp
sub
push
test
dec
movsb
jp
rclb
fnsetpm(287
dec
loop
mov
lret
mov
mov
lock
insb
mov
mov
lods
mov
sub
mov
sub
shrl
cmpsl
ret
int3
cmpsb
inc
rol
aam
jb
ret
cmp
daa
lods
push
fwait
stos
add
mov
xchg
outsl
cmpsl
cld
push
and
add
xchg
or
je
fisubrs
pop
cmc
pop
lods
cmpsl
int3
test
nop
imul
jno
pop
xchg
jnp
imulb
lea
aas
lret
bound
test
add
mov
mov
mov
leave
daa
mov
xchg
adc
ret
cmp
cmp
in
mov
adc
push
and
sahf
test
jecxz
jb
mov
xor
loopne
cld
cmpsl
das
jb
cli
mov
in
cmp
xor
or
movsl
scas
mov
sub
cld
iret
cli
and
movsl
mov
aaa
arpl
popf
aaa
sub
mov
push
movsl
add
sti
mov
pushf
addb
outsb
cli
sub
jns
adc
cmpsl
add
hlt
xchg
movsl
and
jne
daa
xchg
xor
stos
call
lret
mov
mov
sub
je
and
mov
jne
mov
fs
aad
mov
jns
cmp
leave
scas
cli
pop
mov
loopne
sahf
movsl
es
cwtl
jp
cmp
in
jb
lret
mull
imul
cs
stos
iret
sub
test
push
inc
mov
ds
cmpsl
sbb
pushf
test
fbld
cwtl
bound
mov
outsb
out
mov
repz
into
int
pop
mov
stos
lret
dec
mov
lds
stos
int3
lahf
sub
cwtl
in
inc
xchg
dec
mov
aad
inc
hlt
shlb
mov
push
cwtl
and
sahf
bound
mov
stc
mov
aas
fmulp
mov
push
in
cli
xchg
mov
push
inc
ret
cwtl
cwtl
push
cld
ror
pop
popf
xchg
repz
decl
aas
mov
xchg
and
sub
ss
mov
inc
rorb
inc
stos
out
imul
mul
xchg
sub
sub
jae
inc
inc
jb
arpl
int3
aad
xlat
xchg
in
push
jo
insb
xor
jecxz
ret
dec
flds
jns
cltd
adc
test
inc
xchg
pop
loopne
push
clc
inc
sub
mov
inc
pop
mov
movsb
add
sub
negb
and
enter
out
addr16
xor
sbb
fistps
pop
ret
mov
and
cltd
mov
insb
xchg
xor
leave
nop
lock
push
cmpsb
bound
pop
outsb
movsb
out
ljmp
xorl
mov
out
shr
mov
aas
int3
mov
fadds
lcall
idivb
mov
mov
cld
dec
mov
or
daa
lret
iret
cli
fs
xor
lods
inc
movsl
cld
dec
daa
jo
out
loop
mov
outsl
lods
mov
addr16
sti
popa
cmp
pop
fmuls
xor
aam
mov
fsub
shr
cld
aad
bound
xor
push
or
clc
jecxz
mov
xchg
mov
fiadds
pusha
xchg
out
xchg
ret
and
xor
dec
push
mov
rcll
xchg
lods
sbbl
ret
pop
pop
push
pop
lods
icebp
jo
call
lods
push
mov
testl
rorb
icebp
mov
lds
jle
xchg
jmp
test
adc
aam
jae
movsb
cmc
ljmp
cwtl
in
lret
mov
push
fdivrp
adc
cmpsl
adc
mov
dec
push
orl
fildll
out
and
daa
mov
or
xchg
push
lcall
rolb
mov
les
aas
jb
pop
pop
or
cmpsl
pop
fwait
int3
mov
xor
jne
inc
inc
cmp
push
test
lods
sub
xchg
add
sarl
adc
push
cld
lret
dec
or
adc
pusha
jp
adc
add
out
in
mov
jp
cmp
cli
pusha
mov
mov
sbb
jae
push
sbb
mov
jbe
push
fnsave
cmp
mov
sub
das
and
stc
add
sub
lahf
fbstp
into
push
test
mov
or
and
and
leave
pop
sbb
and
test
cmpsb
aaa
int3
mov
rclb
out
addr16
push
pop
es
adc
imul
subb
xor
add
test
mov
sbb
scas
sub
cwtl
adc
fs
mov
daa
mov
mov
or
push
push
pop
out
jns
aas
test
in
ds
cmpsb
call
dec
mov
loopne
aam
stos
fs
fmull
mov
cwtl
jno
cltd
fsubrs
inc
jge
insb
cmpsb
jno
mov
je
aaa
cwtl
jne
scas
sbb
out
xor
mov
cmc
sbb
mov
into
stos
arpl
int3
xor
mov
ja
addb
xor
outsl
cmp
call
sbbl
pop
xor
lret
pop
loopne
push
sub
and
frstor
pop
jno
das
sub
sub
sub
cmp
xor
testl
xchg
sub
notb
les
push
idivl
sti
adc
daa
clc
arpl
ret
xchg
xchg
or
out
mov
mov
sti
aaa
mov
outsl
js
jge
in
addr16
and
sbb
xor
and
mov
adc
mov
das
add
insb
mov
add
xchg
and
mov
add
mov
adcb
data16
imul
out
mov
mov
mov
pop
test
sti
xor
icebp
xor
repnz
out
es
adc
mov
or
scas
test
mov
sbb
shrl
jmp
xchg
jb
mov
dec
stc
sti
jmp
addr16
les
jae
fnstsw
loope
mov
pop
adc
cmp
mov
nop
cmp
outsl
je
in
aas
scas
mov
xchg
jno
roll
imul
pop
mov
pop
out
inc
cmp
and
and
sub
pop
xor
int3
scas
mov
pop
cmp
nop
mov
lods
fldt
fcoml
mov
in
jl
cwtl
cmpsl
push
mov
fimull
repnz
jge
movsl
or
mov
pop
pop
xchg
aaa
in
sbb
test
mov
jnp
rcll
xchg
cmp
sbb
push
aaa
inc
insb
inc
push
mov
roll
dec
lds
mov
sub
ret
push
aam
and
mov
aas
fcoms
movsb
and
add
outsb
pop
mov
fwait
add
mov
nop
js
push
jle
cmp
pop
mov
arpl
ja
sub
and
clc
jge
mov
fdiv
fstpt
push
daa
imul
loopne
test
pop
jb
rcll
pop
insb
fmul
pop
bound
lahf
jne
mov
stos
inc
movsl
pop
cmc
pop
inc
adc
in
pop
aam
aaa
add
enter
iret
push
ja
jl
xchg
bound
in
int3
nop
xchg
bnd
shl
outsl
mulb
test
inc
fidivl
mov
hlt
int3
sahf
stos
scas
shll
movsb
jp
jg
mov
adc
inc
mov
sub
push
fisubs
mov
mov
repnz
test
adc
data16
jae
mov
inc
pop
clc
or
pop
mov
in
lock
jns
fs
jp
push
imulb
int3
repz
cmc
mov
sub
scas
sahf
mov
fcoml
out
add
aam
pop
pop
adc
stos
outsb
popa
xlat
bts
fwait
adc
int3
lods
imul
sahf
cli
insb
icebp
sbb
clc
xchg
int3
mov
xor
and
push
push
pop
test
imul
ret
js
scas
shll
test
dec
les
nop
mov
mov
pop
xchg
mov
xor
adc
cmc
jae
scas
sub
je
lahf
push
je
mov
mov
jno
xor
ds
pop
pusha
in
mov
neg
adc
movsl
add
push
mov
bound
or
nop
insb
adc
leave
cld
aad
jl
dec
js
push
js
or
loopne
mov
popf
rcrb
push
xchg
pop
int
pushf
movsl
in
jb
adc
out
lahf
xor
cs
ret
cmp
out
cwtl
pop
inc
mov
mov
jae
fmul
inc
stos
movsb
shl
xor
rcr
mov
clc
movsb
sbb
jnp
pop
cmp
xchg
aad
icebp
scas
lahf
shrb
insl
stos
push
outsl
imul
imul
xchg
push
jns
jb
aaa
mov
je
les
or
ret
pusha
cmpsb
pop
adc
ror
xchg
and
sahf
lret
cs
inc
cmpsl
dec
dec
lret
push
int
fisubrs
mov
xor
cld
lret
pop
fisttpll
dec
jo
sub
iret
mov
sbb
mov
lods
mov
addr16
lcall
xchg
lods
mov
lods
test
xchg
and
lods
addr16
sub
mov
sbb
imul
and
cmp
inc
xchg
pop
popa
push
inc
mov
xor
and
add
xor
mov
mov
data16
movsb
mov
cmp
mov
sbb
addb
cmp
adc
xchg
cmpsl
xor
in
mov
fsub
dec
fs
xchg
loopne
int3
outsl
stos
ljmp
xor
sbb
arpl
jae
rclb
js
push
jns
pop
lar
cmpsl
cmp
push
jo
adc
cmp
inc
and
out
inc
mov
sti
push
gs
xchg
test
mov
push
xchg
faddl
inc
stos
push
popa
in
popf
int3
aaa
inc
loope
imul
push
lods
jns
lret
lcall
and
mov
cmp
adc
je
cmc
cmpsb
sbb
imul
add
into
and
push
pop
sub
adc
and
rcrl
ss
in
mov
mov
xor
das
fldl
mov
xchg
sub
int3
or
and
inc
xchg
jb
mov
cltd
popf
mov
movl
pop
mov
repz
and
fsubl
mov
mov
cmp
daa
xor
mov
test
cmp
push
xchg
mov
jae
mov
pop
fs
adc
les
jge
lret
aaa
inc
inc
test
or
pop
add
jns
jae
shlb
in
popl
cs
sbbl
mov
loop
lea
es
mov
cmp
cmpsb
or
sub
mov
fstps
add
pop
and
inc
stos
sub
inc
scas
adc
repz
lret
xor
repz
enter
add
jle
mov
arpl
stos
push
out
stos
push
fstl
movsb
movsb
pushf
clc
movsb
pop
mov
aaa
sub
dec
mov
xchg
jnp
pop
jno
imul
mov
mov
daa
cmp
stc
arpl
movsl
out
pop
pop
jge
shl
ficomps
je
test
mov
mov
daa
inc
pushf
dec
lea
xorb
iret
arpl
les
add
xor
jl
scas
sub
inc
imul
xchg
adc
push
in
fcomp
enter
sahf
adc
push
pop
arpl
sbb
nop
mov
movsb
adc
mov
dec
rorb
xor
add
test
or
sahf
sub
mov
xchg
mov
insl
adc
and
push
mov
adc
in
aam
call
sub
mov
jbe
int3
jno
movsl
sub
lods
sbb
lahf
imul
ret
mov
pop
in
dec
mov
xor
push
pop
mov
dec
imul
scas
sub
js
sub
jns
push
jbe
stos
inc
sub
xchg
iret
cld
movsb
jno
clc
add
test
enter
rorb
imul
mov
push
outsb
sbb
fstl
loopne
sarl
jmp
addr16
and
jb
xchg
xor
push
push
fisubrs
jl
or
imul
sub
loop
or
in
loopne
imul
cwtl
jb
sub
mov
popa
mov
cmpsb
sub
sbb
xlat
or
push
aas
gs
je
imul
out
inc
cwtl
inc
dec
jns
fisubrs
arpl
pop
stc
sbb
fdivrs
dec
mov
mov
xchg
jmp
sbb
dec
popa
push
fstpl
dec
movsb
xor
shrb
mov
int
inc
mov
add
imul
xchg
hlt
aas
mov
lretw
jb
hlt
mov
lods
cltd
movsl
sub
ret
sub
xchg
push
sub
fwait
cmpsb
jp
mov
popf
push
xor
lret
popa
movsl
fwait
dec
sub
sub
and
xchg
xor
push
les
lret
adcl
fs
pop
push
mov
in
lret
sahf
insl
insl
sti
lret
xchg
xchg
xchg
call
lea
xor
jl
xlat
je
mov
adc
mov
mov
inc
rolb
push
add
mov
shld
mov
xor
stos
rcll
insl
ucomiss
xchg
loopne
mov
cmpsl
das
outsl
adc
inc
mov
scas
loopne
mov
test
stos
xor
call
push
push
das
inc
jg
pushf
arpl
mov
imul
pop
pop
push
leave
cmpsb
fwait
mov
jb
ds
cmp
xchg
cmp
fmuls
jno
out
sbb
xchg
mov
sbb
adc
pop
inc
imul
stos
mov
dec
nop
and
fsts
push
lea
sbb
aam
pushf
mov
in
jno
pop
xor
xor
aas
mov
mov
fnsave
lcall
data16
faddl
das
mov
fisubs
xor
mov
js
mov
mov
call
mov
jmp
cs
mov
or
mov
push
mov
lods
mov
mov
pop
arpl
stos
divb
in
lods
stos
xchg
adc
mov
negb
lea
xor
dec
lock
inc
movsb
stos
push
sub
addl
lahf
xor
daa
cwtl
test
les
jns
mov
sub
imul
mov
mov
cmpsb
fbstp
mov
fwait
js
stc
sub
adc
push
cmpsl
dec
inc
stos
jl
pop
push
and
aas
js
inc
cmpsb
js
inc
stos
adc
cmp
jbe
sub
mov
stos
idivl
lods
mov
aaa
les
jmp
dec
cmp
repz
pop
fdivrs
add
in
add
jo
add
and
es
fistl
nop
and
mov
or
mov
fisttpl
pop
add
dec
cmpsb
pop
jae
mov
sbb
test
pusha
lahf
pushf
xor
pop
or
xchg
movsl
movsb
sbb
lods
popa
mov
add
pushf
test
in
jge,pn
mov
movsl
sbb
movsb
xor
cld
mov
dec
sub
leave
cwtl
push
dec
in
cmp
js
jle
movsb
movsl
pop
out
pusha
outsl
xlat
xor
push
xchg
adcb
and
addr16
xchg
mov
fwait
jb
adcb
push
mov
push
daa
inc
popl
and
popa
outsl
push
stos
push
popl
lods
outsl
shld
lods
aad
sbb
mov
push
cmp
jecxz
mov
mov
fiadds
jecxz
xor
push
jl
cmp
add
mov
cmc
and
test
popf
aas
subl
sbb
mov
lods
movsl
cmc
gs
xchg
xor
stos
cld
outsb
js
fbld
into
pop
inc
mov
pop
jnp
leave
mov
ret
xchg
movsb
aam
pop
stc
pop
mov
and
xchg
fimull
inc
andb
in
jns
test
and
insb
jecxz
gs
shrl
movd
repz
aas
mov
aas
mov
bound
xchg
add
pop
shrb
aaa
mov
mov
arpl
inc
xchg
add
sub
insb
loope
out
add
lret
adc
andb
pop
outsw
mov
push
cmp
pop
mov
push
stos
mov
fistpl
jmp
or
mov
xchg
call
movsb
cmpsb
bound
inc
nop
sbb
idiv
inc
mov
aaa
stos
je
lret
mov
js
lods
pop
je
stos
cld
push
in
out
mov
mov
pop
pop
mov
outsb
lods
aas
lds
mov
int
mov
repnz
outsb
mov
vpmovuswb
mov
cmp
lods
cmp
cli
bound
inc
imul
xor
cmp
inc
xchg
stc
rolb
ret
cmp
leave
push
sub
arpl
dec
je
sub
mov
cli
pop
pusha
arpl
push
cmc
adcb
imul
sub
jb
jge
xchg
das
out
test
mov
sbb
mov
leave
out
sbb
xor
lret
ds
push
cli
mov
dec
pop
frstor
jb
pusha
sub
daa
inc
stos
xchg
inc
pop
fcompl
add
pop
repz
inc
test
pop
int3
dec
or
mov
hlt
dec
inc
mov
push
popa
and
sub
jl
dec
xchg
pop
adc
lods
ret
ss
xchg
jo
fs
or
fdivs
js,pn
cmp
daa
inc
lods
mov
test
cmc
mov
mov
in
clc
sarl
mov
xor
movb
cltd
scas
cli
mov
pop
mov
es
and
push
push
je
cmp
cmp
sub
mov
lock
inc
int
mov
sub
test
mov
push
ss
push
inc
mov
repnz
arpl
sub
or
adc
loop
sbb
leave
mov
sub
jl
imul
push
movsb
pop
mov
jp
xchg
test
pop
mov
xor
jmp
imul
cmpsb
outsl
push
mov
pop
pusha
in
jb
mov
xchg
arpl
mov
or
push
into
das
mov
stos
imul
pop
int3
pop
pop
dec
dec
or
lahf
and
lret
outsl
push
add
imulb
xchg
daa
cmp
iret
fstpl
out
movsb
loop
outsl
and
imul
je
mov
movsl
push
adc
ja
cli
mov
mov
and
mov
sub
add
mov
mov
xorb
jo
mov
insb
fs
xchg
xlat
mov
sub
das
das
daa
cmp
sbb
je
ss
mov
mov
out
repz
and
jbe
mov
sub
xchg
inc
jmp
inc
sbb
ficoms
int3
int3
push
jmp
pop
call
dec
pop
push
testl
out
mov
in
mov
in
sub
lods
rcl
lock
in
fldt
xor
lahf
add
sbb
push
or
cmp
sahf
outsl
arpl
push
scas
int
pop
mov
daa
gs
js
dec
jae
mov
sbb
shrb
and
push
jb
dec
es
cs
repz
insb
cmpsb
jmp
xor
mov
in
jae
rorb
nop
mov
lods
lock
lods
lret
push
add
gs
mov
in
mov
repnz
xor
pop
pushf
mov
sub
adc
push
shll
rclb
jo
stc
mov
jmp
outsb
mov
jo
adc
pop
js
cmp
sbb
fdivrl
pop
stos
add
and
int3
cltd
or
sahf
daa
aaa
mov
push
test
push
adcl
mov
sbb
fldenv
ja
sub
movsb
xchg
pop
mov
arpl
daa
sub
insb
sbbb
push
insb
jns
daa
cmp
movsl
into
ficompl
dec
test
pop
loop
ret
lret
mov
pop
add
mov
adc
push
dec
les
pop
out
cmc
jb
add
leave
stos
aas
dec
push
sub
cmpsl
xor
test
and
mov
dec
add
scas
clc
pusha
lcall
xor
outsl
shrl
mov
fcmovnu
lods
leave
fs
mov
js
xchg
add
mov
lret
aas
mov
sub
mov
aam
xlat
mov
call
cmpsl
fs
add
lret
xchg
mov
xor
outsl
mov
ja
lret
mov
xor
xchg
mov
sub
pusha
lret
sahf
push
js
imul
in
inc
add
movsb
mov
jns
sub
xchg
adc
sahf
in
sub
sub
adc
xor
leave
and
scas
mov
out
sbb
fdivrl
aaa
and
bound
nop
nop
xchg
repnz
mov
popa
les
out
lret
sbbl
ret
xchg
ds
out
jnp
inc
add
add
nop
shrb
fsubrl
xor
popa
mov
enter
imul
push
stc
inc
shrl
pop
xor
inc
lret
or
popa
and
pop
xor
insb
movsb
leave
nop
in
push
xchg
jb
mov
jae
mov
adc
daa
pop
mov
cmpl
dec
xchg
sub
add
data16
mov
sub
dec
or
push
pusha
jg
fidivrs
lock
movsb
insl
lcall
xchg
xchg
jae
xor
aas
adc
lods
push
movhps
fsubrs
and
mov
lods
mov
shrb
rorl
sahf
test
cmp
sahf
inc
loope
adc
push
test
mov
or
pop
lcall
iret
sub
xchg
lahf
ret
ret
add
and
movsl
sub
mov
data16
add
mov
pop
jecxz
adc
arpl
push
or
add
adc
cmp
clc
xchg
int3
pushf
outsl
clc
mov
push
or
aas
lret
repz
les
movsl
lret
cltd
xchg
jp
lret
imul
jle
or
orb
dec
int3
jbe
pushf
loopne
sahf
les
push
xchg
pop
adc
mov
popa
sub
pop
sahf
int3
cli
out
cmp
dec
and
pop
pushf
imul
push
adc
pop
mov
movsl
jmp
sbb
shll
add
cmp
xor
enter
mov
stos
fstl
push
sub
clc
jecxz
cmpsl
mov
insb
stc
jns
sub
jnp
scas
mov
test
mov
lds
data16
movsb
push
gs
gs
out
daa
dec
shl
cmp
mov
xor
fdivrs
aas
mov
mov
stos
pop
int3
addr16
ljmp
lods
dec
mov
imul
dec
push
div
ss
mov
lods
lock
push
and
lret
hlt
pop
jns
lea
pusha
jno
mov
and
test
jle
push
pop
sbb
mov
out
stos
fistpl
mov
cmp
pop
js
ss
push
add
mov
in
or
je
and
sbb
pop
mov
mov
push
sub
cmc
sbb
pop
scas
adc
mov
rol
pop
pop
mov
mov
call
cmp
adc
cmp
fcmovnb
test
and
dec
xchg
fdivrl
aad
xor
lods
pusha
ss
and
es
adc
in
andb
xchg
adc
bound
pop
dec
push
cmp
lods
in
fimull
jae
movsb
push
repnz
mov
aaa
push
jb
data16
dec
mov
in
jns
stos
inc
nop
push
scas
adc
jmp
cmc
into
inc
idivl
xor
pop
lret
push
arpl
loopne
sub
mov
and
aas
jns
nop
jb
and
cmc
shrb
jb
xor
jo
lahf
mov
sti
sti
mov
data16
push
mov
mov
mov
xchg
and
adc
jb
jno
and
scas
jl
arpl
adc
test
sahf
inc
push
mov
popa
adcb
ret
xor
push
dec
outsl
dec
push
je
xchg
xor
inc
int3
or
pop
pusha
xchg
es
fnstcw
imul
imul
insb
adcb
aad
sti
push
in
pop
or
sahf
lret
scas
inc
in
imul
nop
loopne
js
in
int3
pop
enter
mov
imul
iret
repz
std
fwait
arpl
rolb
sbb
jo
loopne
sub
jle
aam
or
adcb
rcll
and
xor
adc
lea
out
add
dec
enter
mov
cmp
xor
imul
lods
pop
xchg
loope
iret
xlat
mov
leave
insl
loope
jb
and
or
mov
add
jp
iret
mov
cmp
xor
fsts
pop
pop
or
out
pushf
jecxz
inc
push
loop
push
mov
pop
leave
movsl
cmp
mov
addr16
test
roll
jnp
sahf
and
push
mov
test
pop
mov
pop
pop
or
xor
cmc
lcall
jl
dec
fs
xchg
pop
jae
aaa
out
int3
xor
sti
lods
data16
rcrl
mov
xor
mov
cmp
je
sub
arpl
sub
or
mov
sub
and
jo
daa
push
sbb
aaa
sub
es
add
mov
xchg
dec
fsts
imul
xchg
into
lock
push
mov
jge
outsb
bound
clc
int
push
push
fxch
cmp
xchg
popa
mov
daa
xchg
mov
cmp
mov
outsb
xor
pop
out
add
pop
lret
sbb
lea
xor
int3
andb
mov
inc
addr16
rorl
outsl
orb
xchg
sub
mov
xor
push
jns
sub
insb
mov
xchg
cwtl
jl
jne
xor
push
cwtl
jp
movb
mov
and
mov
sahf
in
bound
stos
mov
and
insb
inc
mov
imul
out
cmp
out
mov
push
outsb
lret
sahf
iret
mov
sub
roll
ljmp
insl
xchg
orl
sahf
jo
jbe
xchg
enter
repnz
mov
call
out
adc
mov
xor
cs
mov
mov
out
push
lock
adc
pop
out
paddusb
int3
clc
imul
pop
inc
mov
jl
jnp
sti
outsl
push
pop
addr16
jl
pop
xchg
fdivrs
int
cs
imul
aam
jmp
cwtl
ret
scas
jmp
jo
in
ret
cmp
fs
jp
int
xor
jo
ficoml
xor
inc
jecxz
jbe
mov
adc
out
push
cmpsb
xor
lret
pop
add
loopne
mov
mov
xor
sub
test
push
sbb
xor
stc
sbb
mov
sub
mov
adc
int
xchg
pop
enter
sub
dec
mov
and
lods
icebp
cld
rcrl
sbbb
outsb
pop
jmp
pop
inc
out
jmp
aas
jl
not
jb
lea
imul
mov
or
push
pop
andl
test
das
lods
pop
bound
shrl
js
ret
xlat
add
jae
jne
sahf
cmpsb
pop
dec
mov
orb
imul
push
and
xchg
or
inc
xchg
test
xor
lahf
xchg
hlt
xchg
push
fsubrs
dec
scas
test
mov
in
mov
icebp
leave
push
sarl
daa
cld
test
and
in
ds
clc
shrl
stos
sbbl
push
push
jmp
loope
insb
add
fucomi
xorb
test
popa
sbb
sub
ds
inc
pop
shrb
push
out
into
aaa
push
dec
in
xchg
lods
int
nop
aas
jns
dec
pop
scas
data16
insb
or
pushf
in
pop
jb
aad
aas
xchg
or
sbb
sti
stos
aaa
movsb
leave
pop
inc
push
stos
aas
xchg
cmc
out
test
lcall
movsl
sub
sarb
push
cmpsb
fsubrs
test
out
and
jmp
les
jbe
shrb
mov
adc
test
adc
and
pop
jmp
push
mov
aas
cmp
aam
pop
ror
imul
clc
cmp
int3
mov
push
out
fmul
into
aam
pop
insb
aaa
jns
sub
inc
outsl
icebp
mov
jae
aaa
sbb
cli
cli
push
dec
test
shlb
std
dec
ret
xor
roll
mov
dec
adc
fcmovb
xor
bound
jecxz
cs
jp
jecxz
sahf
stc
and
movsl
xor
nop
adc
fwait
addr16
sahf
dec
pop
push
pop
bound
dec
rolb
pop
insl
test
pop
fildl
sahf
lret
cbtw
jbe
inc
push
leave
aad
nop
shrb
nop
jg
and
test
xchg
dec
mov
mov
cwtl
add
adc
push
mov
push
push
jmp
jp
cs
ds
pushf
cs
and
xchg
test
sbb
aaa
inc
xchg
jnp
jecxz
dec
inc
dec
dec
stos
cmp
jmp
js
push
cmp
popf
leave
adc
test
ja
mov
mov
xchg
cmp
pop
je
movsl
xor
out
daa
int3
mov
lret
mov
cmp
repnz
test
test
xchg
stos
jbe
popf
mov
sbb
lock
mov
xchg
mov
cmp
mov
push
cmp
dec
xchg
in
jb
xor
mov
andb
or
pop
push
cmpsb
mov
sbb
adc
in
push
mov
insb
movl
inc
mov
arpl
call
ret
stos
mov
jl
lock
pop
cmc
aam
hlt
cmc
ret
mov
cmp
jne
out
ret
ret
pop
scas
mov
das
sbbb
mov
mov
bound
iret
repnz
repnz
and
lea
push
int3
push
dec
jb
loopne
pop
arpl
push
cld
popa
addr16
and
mov
popa
mov
jle
push
pop
push
cmp
cmp
lret
push
loope
pop
pop
gs
push
test
loopne
dec
sub
out
push
mov
push
scas
lret
imul
aaa
dec
bt
jae
mov
jnp
mov
in
stos
les
pop
fsubs
mov
lods
adc
xchg
pop
jae
aas
add
stos
xor
mov
mov
jmp
aad
outsl
cltd
mov
adc
mov
cwtl
insb
inc
test
lret
xchg
daa
pop
pusha
lret
xchg
fwait
leave
cmpsb
mov
jns
shrl
fnstsw
jbe
clc
pop
nop
dec
cmpsl
or
fisubs
scas
popf
loope
ret
lret
das
insl
jo
jne
stc
pop
icebp
pushl
jp
add
jnp
push
inc
popf
dec
sub
jecxz
dec
xlat
loope
ljmp
and
cmpsb
mull
dec
test
xchg
into
repz
scas
dec
pop
xchg
popf
jp
pop
stos
daa
ss
fnstsw
lods
mov
cmpsl
mov
push
adcl
mov
fs
stos
pop
lea
lret
dec
bound
mov
hlt
dec
cld
xlat
ljmp
into
push
fmul
test
ja
movsl
jb
mov
pushf
adc
fsubl
call
stos
xor
sbb
mov
mov
sub
push
out
add
in
add
bound
repz
stos
dec
dec
int3
mov
jmp
stc
fisttpll
pop
ror
inc
scas
in
int3
sbb
add
arpl
sub
cmpsl
imul
push
lret
movsl
push
int3
lds
add
jae
sbb
adc
xchg
arpl
nop
cmp
pusha
mov
popa
dec
leave
xor
mov
cli
mov
mov
jno
andb
xchg
inc
mov
test
cwtl
outsb
lret
sub
popf
mov
add
mov
test
pop
xchg
or
adc
and
inc
in
repz
push
push
push
inc
add
xchg
xor
xlat
mov
popa
int3
pop
xor
lock
pushf
mov
stos
lret
cs
fcoms
int3
push
jnp
sbb
or
stos
loope
aas
je
lea
push
arpl
cmpsl
xor
hlt
sbb
dec
test
int3
shr
ss
imul
sbb
sahf
dec
in
jb
push
mov
cmp
pop
shrl
mov
mull
and
sub
in
cwtl
shrl
fisttpll
xchg
andl
jb
lret
xlat
enter
jle
jecxz
dec
adc
in
jl
dec
outsl
xchg
jecxz
fsubs
sub
daa
imul
push
sti
and
jno
push
mov
push
loopne
jb
dec
push
adc
cmpsl
daa
mov
mov
xor
jmp
and
or
jnp
out
xchg
das
jnp
xchg
mov
jecxz
xchg
je
insl
js
adc
stos
mov
arpl
mov
imul
les
fs
mov
push
or
iret
mov
loope
les
jmp
js
push
pop
js
cmp
dec
mov
lods
push
rolb
inc
inc
and
js
cmp
mov
repz
mov
sbb
inc
mov
pop
sub
inc
test
in
cs
push
mov
clc
mov
lahf
aas
scas
cld
and
jnp
and
outsl
mov
jmp
int
lods
inc
insl
adc
subl
bound
mov
in
ror
pop
inc
xor
decb
and
je
push
jmp
test
in
in
push
lret
jmp
stos
jmp
dec
mov
push
sti
outsb
les
adc
ja
jo
popa
mov
ds
loopne
sub
ja
pop
test
lock
adc
mov
mov
inc
pop
cmp
pop
push
push
jbe
movsb
sub
cmpsl
xor
push
and
mov
mov
sub
xchg
and
push
testb
imul
jp
mov
xlat
dec
mov
mov
insb
push
jo
mov
aam
test
test
jo
push
xlat
flds
jb
xor
push
movsl
lods
sbb
inc
outsb
sbb
xchg
bound
aaa
bound
cmpsl
imul
arpl
add
mov
lret
sbb
test
push
jg
mov
mov
jmp
int3
push
cmpsl
stos
push
mov
ss
nop
push
divl
sbbl
call
in
xchg
mov
and
and
ficomps
jae
lahf
pop
or
subl
popf
in
test
pop
pop
fiaddl
mov
cmc
sub
out
mov
arpl
icebp
pop
xor
mov
mov
mov
aam
dec
imul
aad
or
popl
loopne
lock
jl
lret
pop
cs
int3
adcl
dec
xor
jb
in
fwait
loop
out
sub
xchg
leave
in
insb
ss
mov
imul
xchg
int3
mov
aam
lea
sub
ficomps
lods
mov
mov
dec
data16
addr16
arpl
popl
mov
pop
push
mov
vpaddq
lea
xchg
sub
sub
lods
pop
pop
sub
push
and
xorl
js
jno
dec
imul
pop
sbb
adc
or
pusha
jp
mov
rcrb
pop
or
repnz
xor
nop
dec
scas
xchg
push
shlb
lock
popf
or
loopne
cli
aad
inc
mov
jb
shll
imul
imulb
out
mov
push
stos
int3
imul
xlat
imul
test
jmp
sub
bound
xor
je
jecxz
repnz
mov
pop
call
push
jns
xchg
or
js
mov
sub
and
insb
adc
data16
pop
int3
aas
mov
lret
mov
dec
xchg
fsubrs
sbb
test
or
aas
scas
xchg
sub
sti
adc
stos
stos
loope
lahf
pushf
scas
int3
stos
std
pusha
xchg
dec
hlt
mov
das
pushf
mov
mov
test
adc
pop
sti
mov
shrb
sub
jo
pop
and
std
cmp
imul
mov
js
inc
mov
aaa
xorb
outsb
jne
mov
ljmp
out
movsb
jge
sub
adc
bound
jb
outsb
push
inc
int3
jmp
mov
jp
ja
inc
jl
xor
gs
lcall
inc
out
jmp
push
fistl
cmc
or
rol
mov
xor
inc
push
or
add
inc
sti
mov
rorb
cli
jg
add
inc
xor
cs
ds
mov
int3
in
test
push
les
pop
and
mov
divb
fistps
out
cs
xor
push
ds
enter
insb
stos
mov
sub
add
shlb
rorb
pop
popa
cvtps2pd
push
sub
cmc
lds
cwtl
xchg
xor
xor
jns
jae
scas
je
push
xor
xor
fildl
jno,pn
xchg
loopne
or
add
jae
mov
lahf
and
cltd
clc
sahf
pushl
orb
hlt
bound
call
pushf
inc
aaa
lds
idivl
inc
jp
sti
lahf
sahf
out
lret
mov
int3
std
mov
ffreep
mov
jne
lret
inc
push
std
or
data16
sub
mov
jae
xchg
pushf
sub
outsb
dec
jge
mov
xor
and
mov
sbb
andb
loopne
or
and
xchg
cmp
lret
in
jns
mov
mov
lock
ljmp
jb
jbe
push
mov
inc
inc
insl
mov
lea
dec
push
and
and
pushf
xor
es
out
jle
xchg
stos
pushf
test
ret
cmpsl
movsb
ficoml
pop
xlat
scas
pushf
fdivr
mov
mov
dec
add
in
subb
orb
jecxz
sbb
or
aaa
fisubrl
test
jnp
fs
jge
jae
mov
xchg
ret
push
pop
sahf
push
pop
jl
jne
or
mov
clc
and
mov
and
sub
std
pop
lea
lea
leave
lods
adc
push
into
push
add
push
imul
out
inc
adc
aad
jnp
sarb
aas
push
mov
lea
lret
aas
insb
sub
dec
sbb
xchg
pop
adc
push
dec
sub
sbb
js
mov
add
pop
push
loopne
lret
pop
pop
jb
pop
jnp
push
inc
arpl
subl
cmp
adcb
movsb
xor
mov
aas
mov
sub
stos
repnz
mov
leave
adcb
mov
xchg
fdivs
mov
cmp
aaa
flds
sub
add
cmp
cmp
testl
push
cmc
and
shrl
imul
mov
sti
pusha
lock
sub
xchg
fsubl
pushf
pop
out
mov
lds
fs
test
inc
sbb
xchg
addr16
sbb
jbe
ret
pop
mov
orb
les
jb
aaa
adc
xlat
leave
inc
in
arpl
sti
in
push
mov
inc
pop
ds
gs
xor
stos
outsl
pop
cli
scas
cmp
ret
inc
pop
popf
xor
cmpb
adc
lods
xor
scas
movsb
mov
xor
mov
pop
js
push
nop
jnp
and
xchg
in
pusha
test
mov
and
insb
in
outsb
stos
arpl
pop
cmp
aad
rclb
imulb
aad
sti
jmp
cmp
jl
shlb
sub
sub
xchg
sbb
dec
mov
adc
or
mov
xor
push
lret
and
inc
pop
dec
fidivrs
bound
fdivrl
in
ljmp
pop
jno
adc
push
jo
test
mov
jns
jge
nop
and
jecxz
enter
pop
sarb
arpl
jne
jno
cld
xlat
ret
arpl
imul
pop
int
sbbb
mov
dec
test
sbb
xchg
push
mov
dec
and
inc
jae
shll
jg
fwait
sub
rclb
adc
or
jb
push
repz
in
add
push
data16
rcr
loopne
dec
gs
and
pop
pop
nop
in
outsl
mov
mov
orl
arpl
adc
xor
loope
adc
fstpl
cld
std
fwait
stos
mov
bound
mov
pop
and
pusha
jl
popa
adc
push
mov
mov
pop
mov
adc
jno
jb
loop,pn
sub
cs
mov
xor
shll
arpl
push
or
pop
mov
lock
or
das
xchg
call
sbb
mov
adc
repnz
test
adcb
cs
pushf
or
loop
sahf
scas
arpl
push
test
popa
pop
cld
stc
adc
or
mov
psubd
lret
xor
mov
xchg
lret
inc
adc
xchg
insb
push
or
cs
and
push
pop
iret
imul
jl
pop
mov
mov
and
outsb
or
or
ret
pop
push
in
mov
mov
xor
push
outsb
std
cmp
or
fmull
loope
fidivrs
std
jecxz
stos
outsl
push
nop
rolb
mov
popa
mov
cmp
lahf
jo
pop
orl
sbb
jp
push
into
andb
mov
arpl
push
clc
and
shlb
mov
daa
test
jecxz
cmc
lret
dec
leave
push
dec
outsl
sbb
inc
je
mov
add
fmuls
ds
clc
cld
sahf
lahf
pop
popa
push
mov
mov
orl
mov
xchg
fcomps
push
cmp
jg
lret
sub
in
bound
push
mul
sub
fs
pop
fnstsw
test
int3
mov
add
and
adcl
sub
arpl
pushf
cmpsl
push
sub
mov
xor
mov
mov
inc
movsl
es
aaa
sbb
mov
insl
ficoms
imul
test
je
sub
xchg
mov
jo
sub
inc
lods
pushf
jnp
mov
xor
scas
xor
push
int3
fcoml
pop
test
mov
mov
repz
cmp
jmp
bound
rcrb
add
stc
in
mov
lds
imul
jns
ret
jbe
mov
jmp
push
int
rolb
rcll
add
hlt
dec
jae
leave
mov
aas
out
adc
mov
je
shll
fwait
int3
fldl
lds
fsubs
imul
in
dec
lret
arpl
bound
rcr
aas
push
cmp
cwtl
arpl
fwait
jmp
cmp
and
insb
push
jae
cwtl
bound
and
imul
jecxz
sub
ja
pop
rclb
cli
jno
sub
dec
and
lock
pop
adc
stos
mov
jo
movsb
pusha
lret
scas
popa
adc
arpl
push
pop
jns
imul
push
dec
inc
fadd
test
mov
pop
jnp
in
add
sub
xor
cwtl
movsl
sub
rcll
outsb
mov
pop
je
xchg
push
mov
jb
lock
movsl
je
sbb
xor
cmp
sbb
cmp
xchg
outsl
and
lock
push
mov
scas
xchg
paddq
cmp
aam
xchg
sub
adc
mov
inc
insb
sti
loop
xchg
pushf
mov
daa
mov
bound
fwait
jnp
mov
mov
cltd
je
mov
pusha
push
cmp
inc
dec
rorb
repnz
inc
lret
jo
jbe
out
xor
jo
xchg
and
outsb
jb
shr
mov
leave
mov
and
imul
insb
lods
es
pusha
sbb
icebp
int3
inc
mov
cmpsl
popf
mov
mov
test
dec
frstor
add
mov
mov
inc
scas
icebp
cmpsl
xor
lcall
mov
mov
mov
lahf
mov
subb
ret
xlat
xchg
cs
add
stos
xchg
outsl
out
stos
lds
sub
push
or
jns
xchg
cmc
bound
cld
aad
lea
cmp
lahf
test
pop
andl
fs
pop
pop
and
and
movsl
add
jno
mov
mov
fs
ja
fs
int3
pop
pop
and
push
repnz
iret
std
jl
daa
insl
mov
xchg
aam
es
or
add
movsb
dec
cmp
pop
cmp
aas
sarl
mov
sahf
mov
cmc
xor
dec
in
insl
cmc
sub
cmpsl
cmpsb
mov
scas
mov
test
nop
sub
ja
outsl
mov
add
lods
int
push
sub
les
lea
sub
xchg
xchg
mov
inc
mov
pop
fimuls
hlt
mov
es
nop
and
mov
cs
ja
jns
sub
cmpsb
xorl
stos
scas
sub
xor
jae
or
sub
sub
popf
outsl
mov
je
or
cld
leave
push
and
jl
or
dec
add
xchg
in
push
daa
mov
push
mov
mov
fwait
popf
insl
fidivl
mov
scas
pop
mov
insl
jae
stos
ret
lods
imul
std
ds
out
xchg
lahf
stos
xor
push
insb
push
rcrl
pop
push
jbe
cmp
sbb
mov
sub
setns
push
cli
push
and
subl
mov
add
add
jmp
sbb
je
lret
bswap
mov
sub
lret
pusha
fwait
ss
int3
jns
idivb
cmpb
and
sub
inc
sbb
loop
cmpsb
pop
daa
arpl
dec
mov
rclb
sub
jns
mov
mov
ljmp
aad
xchg
jg
scas
popf
push
imul
scas
jmp
xor
in
mov
xchg
sbb
cmp
movsl
mov
loope
sub
mov
cmpsb
sub
mov
fldcw
stos
je
repnz
lods
lret
loop
call
add
dec
rcr
enter
cmp
mov
sti
push
mulb
dec
sub
mov
mov
pop
imul
leave
cmp
lret
mov
fisttpl
loope
movsb
jecxz
xor
lods
or
mov
les
insb
lods
popa
fucomip
push
inc
das
fucomp
inc
les
inc
shll
std
xchg
mov
mov
and
push
sbb
pushf
inc
push
xor
xor
push
inc
jmp
sbb
mov
fwait
push
jns
mov
mov
inc
repnz
lea
adc
enter
push
repz
mov
cmp
nop
jle
and
jo
cltd
loope
push
divl
nop
test
pop
push
mov
test
and
movsb
ljmp
ljmp
stos
mov
nop
jnp
mov
leave
push
xor
test
fs
test
js
and
mov
insb
lret
loop
in
js
mov
push
push
aam
mov
lret
xor
loop
mov
je
sahf
in
movsb
sub
push
sub
daa
loope
or
mov
mov
dec
fbstp
inc
dec
xchg
and
and
fmul
fs
push
in
lcall
dec
lods
in
mov
mov
dec
mov
push
cli
dec
sti
mov
rcrl
push
cmp
add
in
repnz
push
mov
cmp
nop
incl
aas
cmpsb
xchg
cmp
scas
jle
xchg
in
subb
cmc
pushl
je
idiv
jb
mov
add
aas
test
jne
jne
jb
push
push
lea
adc
fdivrl
daa
jnp
imul
pop
mov
icebp
fmul
xor
jns
movsl
xor
or
subb
lock
aaa
out
mov
xchg
sub
jecxz
fisubl
push
push
test
ss
fnstsw
cmpsb
imul
dec
mov
test
xor
flds
rolb
les
inc
mov
addl
sbb
jb
xor
insb
sub
shr
mov
fwait
pusha
outsl
andb
outsb
pop
arpl
lock
out
add
lcall
mov
or
push
xor
mov
imul
loopne
mov
loop
cli
in
pushf
std
dec
jg
jb
bound
sarb
mov
pop
sbb
jecxz
mov
outsl
test
cmpsl
pop
mov
mov
push
push
mov
sub
push
ja
ss
and
andl
push
and
xor
imul
push
mov
sub
lods
mov
ss
mov
mov
mov
mov
lahf
movsb
leave
scas
or
sbb
imul
leave
xchg
bound
xchg
xchg
adc
xchg
sub
xchg
pusha
mov
xchg
inc
push
jns
cmpb
push
push
push
xor
pushf
adc
stos
mov
bound
jb
inc
ret
or
jo
mov
or
or
mov
out
lahf
add
and
in
and
pop
loop
inc
stc
rep
jo,pn
addl
mov
int3
mov
add
and
popf
in
push
or
xchg
mov
sub
sbb
pop
inc
clc
inc
jb
mov
sbb
sub
les
pop
dec
pop
jnp
pop
mov
in
jno
mov
xchg
int3
mov
jns
jg
adc
dec
rcll
jb
mov
lcall
int3
cmpsb
aaa
orb
aaa
or
std
shlb
mov
cmp
pop
jb
cmpb
divl
sahf
cs
call
mov
jl
pop
pusha
mov
fmuls
shrb
mov
test
pop
push
scas
fistpl
idiv
mov
into
imul
xor
cmpsl
inc
xchg
test
push
adc
dec
sub
ja
out
popa
fimull
inc
lea
fstpl
loopne
mov
loop
mov
mov
xor
inc
push
stos
jne
std
lret
inc
loop
add
in
mov
movsb
jp
mov
dec
sahf
arpl
xchg
mov
call
add
ss
clc
shrl
xor
data16
daa
pop
test
jge
in
jb
in
jae
xchg
or
sub
jns
loop
push
adc
insb
pop
out
cmp
xchg
mov
or
xor
jb
je
mov
sahf
sub
push
outsl
cmpsb
add
mov
mov
in
xchg
dec
adc
cli
movsl
or
scas
outsl
fdivrs
xchg
cmp
xor
or
lahf
movsl
dec
push
adc
mov
or
adc
cmc
sbb
int3
lock
daa
outsb
xchg
mov
cmp
or
in
jl
popa
inc
sbb
xor
repz
movsl
pusha
sub
gs
xor
xchg
gs
rcll
les
inc
pop
and
xchg
mov
mov
stos
dec
int
fsts
pop
divl
aas
and
mov
push
je
mov
in
jnp
inc
std
je
testb
aas
jns
sahf
aas
lahf
int3
nop
cwtl
lds
mov
icebp
imul
mov
or
stos
mov
xor
shr
ret
mov
inc
mov
insb
cmpsl
bound
stc
add
sahf
ret
inc
scas
mov
xchg
xchg
mov
mov
mov
mov
outsb
leave
out
jno
ss
int3
fldcw
ja
arpl
push
enter
cmp
test
jb
inc
aam
xor
pop
push
popa
mov
xchg
mov
adcb
cld
enter
aaa
dec
bnd
jb
stos
jb
fs
mov
add
and
jmp
and
movsl
sub
push
popf
sub
xchg
dec
mov
es
aad
out
dec
xor
orl
ret
dec
test
adc
jno
sub
imul
test
int3
mov
pop
add
rorb
pop
jge
inc
lahf
int3
inc
test
daa
push
lods
jnp
leave
xchg
jno
movsb
int3
fs
xchg
imul
aaa
iret
aad
fidivs
lods
push
lods
xchg
std
in
jg
in
addl
inc
jne
sub
mov
jge
push
or
cmp
cld
shlb
adc
xchg
imul
test
mov
or
inc
loop
sti
out
add
add
shll
fidivrl
insb
or
xchg
aas
sbb
or
dec
mov
sbb
imul
scas
mov
push
cwtl
sbb
sbb
je
mov
mov
lret
orl
repnz
popa
das
or
int3
test
cmc
mov
or
or
pop
idivl
stos
jno
fdivs
dec
jns
adc
xchg
mov
aam
repz
mov
movsl
and
mov
loop
mov
scas
ljmp
loopne
imul
inc
cwtl
cltd
lods
ret
test
fstl
xlat
inc
mov
mov
cltd
fcomi
lds
mov
andl
jecxz
cmpb
out
mov
outsb
adc
sti
xchg
mov
mov
mov
outsl
jnp
pusha
inc
or
xor
ljmp
xor
xor
out
into
inc
stos
data16
pop
mov
sbb
inc
divb
int3
imul
pop
pusha
jecxz
out
int3
aaa
or
and
mov
sub
mov
cmp
mov
leave
ja
and
mov
in
jo
mov
test
mov
aaa
mov
xor
mov
pushf
nop
mov
xor
std
sbb
lock
arpl
xor
andb
pop
test
sub
rorb
mov
rcrb
insb
fwait
movsl
xor
test
loopne
aaa
test
push
jmp
jecxz
xor
test
cld
sub
addr16
repz
movsb
xor
push
repnz
pusha
popa
pop
fsubrs
andb
ja
mov
lods
fs
lods
leave
pop
bound
dec
movsb
jb
cmp
push
sti
jno
push
jo
sub
adc
sbb
in
arpl
shlb
and
aaa
mov
sub
push
mov
sahf
sbb
lret
pushf
mov
push
insl
ja
in
jle
popf
jbe
insb
mov
bound
xchg
xchg
stos
mov
inc
stos
pop
xchg
jae
and
pop
pusha
xor
loope
mov
rcll
enter
mov
push
mov
bound
adc
xor
cmp
leave
xchg
dec
test
mov
mov
mov
xlat
xchg
out
push
loopne
dec
pop
sub
push
in
jns
inc
mov
jnp
xor
je
push
lret
add
jb
in
pop
mov
jb
test
subb
jne
je
mov
adcl
js
sbb
pop
test
sbb
mov
psrad
mov
ficomps
mov
xchg
lea
sub
pusha
sbb
out
push
mov
mov
pop
daa
ss
inc
xchg
cmp
xor
pop
push
push
push
cmp
cli
js
mov
mov
inc
in
cmp
pop
mov
fcompl
push
aaa
mov
nop
cmp
shlb
arpl
xchg
lcall
push
inc
or
aas
ret
dec
daa
test
in
pop
mov
mov
xor
or
test
jns
sbb
rol
xchg
pushf
adc
adc
jne
lahf
fwait
mov
and
orl
and
mov
in
pop
popl
sbb
mov
insb
ds
push
daa
jecxz
mov
outsl
adc
cltd
daa
add
adc
loop
lods
test
in
es
mov
sbb
int3
repz
cs
cmp
cltd
int3
pop
insl
loop
imul
in
stos
shrl
xchg
mov
in
and
mov
xchg
aad
imul
mov
mov
mov
sub
jo
jnp
xchg
bound
and
je
jo
std
mov
stos
pushf
xorb
icebp
ds
lahf
fistpl
mov
mov
push
push
or
adc
jae
sub
xchg
in
lahf
add
repz
enter
flds
sub
mov
push
mov
insb
or
xchg
movsl
mov
adc
repz
jo
adc
loope
jno
fnstenv
xchg
mov
call
xor
roll
repz
aaa
dec
scas
mov
mov
mov
in
mov
imul
repnz
out
insb
bound
and
push
push
scas
stos
ss
ficoms
test
mov
lock
sub
popf
je
cmp
xor
inc
rclb
in
mov
jns
cmp
fcom
mov
adc
bound
es
out
mov
xchg
stos
daa
test
aaa
andb
andb
jg
cs
mov
daa
addr16
int3
jmp
push
in
outsl
hlt
xchg
push
fs
mov
aaa
xor
int3
cwtl
sbb
addr16
bound
int3
pop
movsl
scas
lods
sub
mov
xchg
pop
add
push
sbbb
push
stos
out
pop
pop
and
adc
int3
stos
scas
xchg
test
fs
push
sub
mov
xchg
lods
sub
jnp
add
scas
fisubrl
cmp
sbb
test
mov
repz
mov
testb
sub
aam
lahf
push
out
imul
insb
int3
orl
daa
pop
cmp
pop
popa
xchg
in
inc
dec
mov
cmp
arpl
pushf
pop
mov
mov
and
test
pop
dec
mov
data16
xor
sbb
cmp
leave
push
mov
jl
outsb
in
jbe
jp
scas
add
or
and
adcb
lods
pop
or
je
ss
movsb
sub
fimuls
leave
cmc
dec
push
jns
sbb
xor
push
or
fsubrs
ss
add
sahf
and
insb
daa
or
mov
int3
xchg
cmp
mov
lods
stos
adc
mov
xor
and
call
cs
scas
stos
lret
cmp
sub
in
sub
jp
lods
mov
lcall
jg
xchg
in
pop
and
rcl
rcrb
and
aad
push
lret
push
mov
dec
arpl
lea
test
and
inc
mov
lock
pop
pop
cmc
aaa
test
les
push
and
fistps
and
test
mov
and
jnp
movsl
test
test
in
add
xor
mov
mov
fs
lods
push
mov
mov
sub
lods
jns
inc
mov
stos
jo
mov
or
dec
fdivr
mov
fdivrs
add
sbb
pop
jns
sbb
lds
mov
or
adc
das
in
mov
repnz
test
lds
mov
scas
mov
sub
fnstsw
mov
jle
pop
in
movsb
jbe
xchg
mov
out
push
mov
and
int
ljmp
adc
insb
jecxz
mov
loop
fnsave
bound
imul
xchg
mov
movsl
into
sarl
test
xchg
ret
mov
xlat
xchg
mov
out
les
xchg
leave
stos
test
xchg
adc
stos
fidivrl
mov
leave
mov
xor
cmp
lds
aam
repz
jno
xchg
iret
movsb
jmp
pop
xorb
sub
test
mov
xchg
jl
xchg
out
mov
outsb
test
movsl
mov
push
xchg
lcall
mov
outsb
mov
rcrb
push
in
pand
dec
popa
in
push
je
fcmovnu
inc
push
clc
popf
fcoml
ffree
je
int
icebp
mov
dec
mov
mov
jo
in
xchg
repz
lods
test
mov
push
insb
lcall
out
mov
cs
in
push
fstpl
jno
jno
push
cmp
fcoml
andb
push
incb
xor
fwait
mov
nop
out
fistpl
in
je
pusha
adc
xchg
repz
mov
je
test
push
add
mov
jb
fwait
out
pop
test
movsb
jno
push
sub
mov
lret
push
sub
jmp
xchg
mov
mov
mov
mov
test
lret
stos
out
scas
sub
xchg
mov
cltd
jns
mov
mov
fcoml
add
xchg
hlt
movsb
popf
xchg
stos
shl
mov
stc
mov
and
jo
arpl
movsb
cmpsb
jae
mov
mov
push
notl
mov
or
inc
mov
into
jae
rcr
sbb
nop
jno
stc
nop
outsl
pop
sbb
push
movsb
jbe
ficoms
push
cltd
movsl
cmp
mov
mov
imul
push
pop
in
sub
fstpt
pop
push
jge
popa
mov
mov
xchg
xor
mov
sub
ds
sub
data16
jmp
pop
xchg
out
mov
fdivrs
fistps
leave
push
fidivl
xchg
in
mov
fsubr
rclb
adc
mov
icebp
push
mov
movsb
dec
mov
fs
sbb
sahf
out
xchg
push
lds
dec
mov
add
or
ja
pop
inc
pusha
mov
xor
lods
jge
mov
out
and
cmp
sbb
mov
orb
jecxz
cmpsl
ffreep
and
xor
je
cmpsb
sbb
and
add
adc
and
outsl
or
in
rorl
lret
jmp
test
sub
hlt
mov
or
push
insl
outsb
push
xchg
in
mov
bound
outsb
in
lods
mov
test
in
push
mov
jp
mov
xor
je
cmpsb
sbb
stos
xchg
out
sbb
pop
sub
out
aam
mov
ds
sahf
mov
lods
in
in
in
lock
push
adc
mov
sub
cwtl
adc
cmpsb
sbb
mov
stos
xor
mov
lahf
xor
test
loope
inc
in
jecxz
pushf
pop
jbe
xchg
sahf
push
pop
inc
movsb
enter
jbe
test
mov
push
jge
sbb
mov
test
iret
cs
je
loopne
scas
stc
bound
rcr
xor
inc
mov
lret
sub
cwtl
xor
sub
or
imul
mov
cmpsb
mov
ljmp
movsl
push
imul
xchg
mov
mov
mov
xor
and
inc
clc
cmc
insb
notb
sub
mov
sub
subl
mov
xchg
hlt
repnz
xchg
mov
mov
sbb
mov
mov
sbb
and
iret
cmp
xchg
adc
fistpll
mov
loopne
insb
rolb
mov
xorl
out
push
add
scas
mov
push
cmp
mov
movsl
shlb
in
mov
push
and
iret
mov
fistps
xchg
jle
xor
adc
jo
cmp
sbb
mov
aad
icebp
scas
dec
jnp
and
outsl
imul
push
xor
in
jns
jge
outsb
popf
mov
mov
lret
fs
lock
mov
int3
out
jae
sbb
sahf
xor
push
mov
ljmp
or
push
je
movsl
xor
push
loop
xchg
mov
push
jmp
sahf
cld
test
mov
pop
pop
dec
dec
inc
dec
sahf
xchg
or
sbb
clc
xor
mov
test
and
fmulp
pusha
fbld
mov
stos
and
aaa
shrb
daa
cmc
mov
aas
ss
fsubp
push
cwtl
dec
jecxz
nop
xor
xchg
xchg
aas
mov
cmp
scas
dec
gs
movsb
sbb
xchg
xchg
stc
icebp
xchg
popa
mov
mov
mov
adc
or
imul
jno
adc
sub
sub
into
pop
xor
adc
dec
fisubrs
lret
mov
test
push
or
mov
inc
out
movsb
aad
cmp
mov
je
cwtl
jno,pn
jl
jno
mov
test
dec
stc
mov
pop
std
push
leave
mov
jnp
sbb
movsb
aas
aaa
jno,pn
xchg
jb
outsb
push
push
fs
pushf
mov
dec
and
add
jno
pop
xchg
xor
cmp
dec
lcall
les
imul
pop
fisubrl
cmpl
pop
inc
mov
lret
int3
repz
fs
cmp
popf
mov
loope
cmpsb
xchg
push
pop
aam
mov
push
sub
push
sub
pop
test
push
sbb
mov
pop
mov
and
or
jb
in
jo
xor
xchg
outsl
dec
adc
out
mov
mov
cli
sbb
pop
ds
clc
repnz
add
jae
xor
push
lret
lods
jmp
inc
add
mov
mov
sub
shrb
pop
mov
movsb
lods
and
mov
pushf
fsubrp
dec
fnsave
lea
data16
adc
shl
add
cmp
and
aaa
mov
xor
jne
mov
cmp
xchg
mov
arpl
mov
push
sahf
add
dec
js
adc
adc
push
sti
push
add
insb
dec
popf
xchg
push
out
roll
sub
test
or
scas
lods
cmc
movsb
jbe
xchg
leave
mov
cmp
fs
test
mov
mov
fistpll
pushf
add
sub
dec
fadds
ljmp
in
sub
xlat
movsb
push
rcll
cmp
fwait
shlb
xchg
test
mov
repnz
and
iret
and
jns
pop
sub
jno
test
scas
jecxz
je
xchg
lret
mov
jns
sub
mov
mov
sub
daa
imul
mov
int3
repnz
jns
mov
in
mov
aad
xor
in
int
addb
lock
pop
aam
mov
xchg
xorl
aad
xor
xchg
test
lods
add
xor
dec
in
inc
xor
push
lea
addr16
stc
pop
daa
pop
std
cmp
pop
call
movsl
cs
mov
popf
sub
test
lret
daa
add
pop
jne
scas
in
mov
mov
mov
push
pop
cmpsb
inc
pushf
daa
orb
stos
sarl
fisubl
pushl
mov
pop
inc
bound
push
pop
xchg
mov
pushf
cmc
cmp
mov
js
negb
adc
insb
xor
pop
mov
aas
pushf
adc
dec
loope
dec
inc
loope
stos
in
xorl
movsb
jae
sub
pushf
or
repz
mov
cmpb
andl
pusha
xchg
jns
in
push
jle
xchg
pop
outsb
daa
pushl
daa
pusha
or
test
imul
mov
pop
fucom
lods
stos
leave
fwait
cmp
add
push
in
bound
hlt
das
adc
mov
and
mov
ds
scas
xor
xor
adc
jbe
push
or
adc
mov
icebp
fdivl
and
repnz
popa
xor
adc
pushf
mov
lea
pop
scas
adc
outsl
in
mov
push
mov
pop
push
icebp
add
lock
xchg
push
pop
mov
enter
sub
es
or
push
sub
mov
movsb
and
pop
jns
and
das
pop
mov
mov
add
cmpsb
psubusb
call
push
aam
out
repnz
icebp
cmc
rclb
ja
mov
sub
push
bound
fs
push
mov
int3
inc
xor
mov
std
cmpl
dec
jle
fstpt
dec
enter
mov
movsl
das
push
inc
cmp
xor
mov
aaa
mov
call
cmp
and
aas
mov
push
pop
dec
sbb
pop
ds
gs
or
mov
das
jmp
dec
fwait
cmp
mov
cmp
sub
loope
imul
int3
sub
jno
mov
gs
sbb
sti
jb
jb
and
adc
insb
xor
mov
and
in
jle
shll
ss
je
fmuls
fdivrs
mov
int3
je
lret
adc
enter
mov
xchg
insb
fadd
stos
mov
pop
loopne
xchg
decl
jae
imul
loopne
sbb
or
fwait
push
cmpsb
int3
push
loopne
outsb
adc
jne
adc
in
ret
mov
clc
int3
ficompl
sbb
mov
mov
repz
fs
dec
pmullw
test
es
movsb
push
jp
test
sbb
ss
leave
test
sub
nop
aad
jb
sbb
scas
push
loopne
test
mov
movsl
sub
pop
mov
sub
dec
scas
sbb
add
xor
mov
lahf
clc
imul
inc
lahf
pop
dec
leave
mov
stos
call
icebp
push
mulb
lods
daa
inc
cmpsb
mov
loop
arpl
jbe
mov
stc
xor
push
lds
and
cli
fmul
loopne
movsl
out
into
sbb
sbb
sub
mov
scas
test
and
sub
in
rclb
out
mov
movsl
cli
inc
enter
ljmp
icebp
mov
xor
mov
popf
clc
push
mov
outsb
mov
push
bound
mov
pop
icebp
dec
lock
cli
pop
jecxz
lods
cli
aaa
push
cld
mov
and
mov
fnstenv
fsts
bound
subl
stos
jl
adc
mov
insl
mov
repz
mov
mov
mov
jno
mov
or
xchg
sti
push
xor
insb
sub
add
and
sub
and
lods
mov
sbb
xchg
xchg
sub
sub
pop
sub
mov
jno
pushl
pop
pop
or
lods
leave
pop
adc
outsl
in
or
ja
fisubs
xor
mov
ret
lods
lret
fstl
sub
enter
mov
cmpsb
mov
je
jmp
jmp
enter
rol
sub
mov
pop
dec
dec
arpl
int3
inc
ret
insb
rolb
jno
and
out
pop
leave
shll
and
or
int3
xchg
cmp
jb
add
shll
fsubl
xchg
rcrl
lea
mov
mov
jbe
bound
lods
add
cwtl
mov
inc
sub
sbb
in
das
rcll
pop
xchg
xchg
jno
push
imulb
hlt
das
outsl
arpl
xor
rcrb
jns
insb
mov
push
xor
mov
sar
and
pop
daa
idivb
in
addl
sbb
inc
outsb
mov
mov
xor
push
insb
pop
sub
pushf
scas
sub
shlb
lock
mov
ret
xchg
xchg
and
in
js
lods
push
test
cwtl
stos
sub
and
sub
and
cwtl
test
mov
and
ret
shrb
adc
xchg
aam
movsl
xchg
push
int
cld
in
xchg
insl
or
and
pushf
mov
insl
in
mov
jb
scas
subl
cwtl
lahf
sub
adcb
sbb
es
xor
jbe
fmuls
movsb
mov
int3
inc
dec
push
movsb
shrl
inc
pusha
xor
adc
lods
int
and
push
and
sbb
outsb
pop
in
pop
insb
cmc
cmpsb
int3
les
arpl
xchg
lods
push
loopne
bound
nop
call
and
ja
cli
push
push
mov
mov
popa
cmpsl
mov
jno,pn
inc
jb
xchg
addr16
lock
int3
push
push
cmpl
pop
jno,pn
xchg
add
in
js
les
mov
jns
jb
pushf
idivb
scas
or
ret
test
jb
xchg
aam
jb
xchg
shlb
mov
jb
mov
jne
negb
test
jno,pn
xchg
gs
lock
xchg
fs
sub
insb
jb
xchg
pop
and
mov
pop
dec
push
or
push
repz
pushf
inc
fidivl
adc
mov
inc
and
mov
fisubs
lock
mov
daa
nop
outsb
push
xchg
dec
int3
das
sbb
pop
mov
test
fs
imul
aam
adc
jb
pusha
sub
lods
loope
mov
je
push
push
or
add
and
btcl
aad
jge
pushf
sub
pop
popa
sub
xchg
dec
xchg
popw
movsb
sub
stc
xchg
adc
lcall
mov
pop
cwtl
lds
mov
push
mov
add
xchg
sub
fsubp
jp
pop
push
mov
loope
xchg
sahf
jno
ds
popa
ljmp
orl
pushf
ds
popa
ds
or
jne
sub
arpl
jl
imul
dec
adc
sub
xor
pop
sub
das
lahf
ja
data16
lret
fldcw
jecxz
cld
mov
nop
lods
mov
adc
dec
imul
in
xchg
aas
into
imul
mov
mov
add
inc
fwait
into
push
pop
rol
out
leave
pusha
and
and
aam
push
mov
push
cli
adc
xchg
test
mov
rclb
xchg
fldcw
ret
lcall
notrack
pop
xlat
pop
stos
xchg
push
mov
add
add
in
xlat
fcmovnb
mov
mov
dec
out
dec
mov
sbb
mov
call
popf
pop
sub
jmp
cmpsb
xor
movsl
push
repz
jae
in
aaa
std
shl
xchg
xchg
inc
ja
mov
pusha
fmuls
xchg
mov
adc
sub
rcr
jnp
imul
bound
psrad
nop
test
inc
aas
and
or
int3
pop
aas
jge
mov
psllw
push
das
xor
adc
jecxz
push
xor
sbb
outsb
xor
pusha
movsb
or
loop
push
lcall
das
pop
mov
les
add
fdivl
jo
or
test
lock
jb
or
and
or
mov
xor
les
mov
mov
call
fcoms
test
pop
pop
aam
xor
cmp
lods
and
lea
mov
insb
out
dec
xchg
jbe
sub
stos
lahf
adc
adc
or
add
ss
fildll
mov
dec
jno
notb
outsl
jg
pop
mov
mov
pop
negb
rcr
clc
or
daa
sbb
adc
mov
cwtl
cmpsb
ret
cwtl
xchg
ja
mov
sub
out
lahf
xchg
adc
xor
pushf
sub
jae
cmpsl
xor
or
sub
popf
push
lods
sbb
sub
mov
cmp
testb
pop
int3
mov
mulb
pop
cld
add
cmpsb
cs
cmp
mov
mov
dec
clc
adc
xor
and
push
inc
mov
aas
jo
and
mov
or
pop
cwtl
rcrb
mov
mov
test
imul
pusha
es
dec
or
arpl
mov
hlt
pusha
adc
sbb
andl
aas
jecxz
scas
int3
mov
lock
lock
jl
jo
outsb
in
xor
mov
add
ficomps
in
mov
and
xor
in
bound
pop
adc
jno
xchg
fs
es
xchg
sti
in
arpl
mov
out
mov
add
sub
data16
mov
arpl
int3
or
fisttps
pop
add
popa
or
dec
jl
jns
dec
inc
ret
sub
in
int3
in
add
not
add
cwtl
sub
xchg
or
pop
andb
ljmp
outsl
les
mov
cmp
leave
xchg
jno
sub
leave
movsl
mov
mov
sub
shlb
xchg
sbb
mov
sub
imul
pusha
leave
popa
loopne
rolb
in
int3
repz
sbb
ret
lods
cld
push
bound
mov
jo
lcall
jae
jmp
insb
dec
dec
mov
mov
das
sub
xchg
pop
xchg
in
jmp
int3
ss
ret
aas
movsb
cli
in
popf
xor
xchg
sub
push
aam
call
insb
out
or
stos
dec
les
dec
loope
and
fists
insl
push
xor
or
lods
pushl
mov
or
xlat
dec
insb
mov
and
jp
mov
cltd
mov
in
jmp
pop
push
jb
xchg
bound
adcl
sub
adc
lcall
pushf
jp
jnp
test
pop
adc
adc
push
sbb
pusha
pushf
popf
sub
mov
mov
lock
inc
cmp
fs
ret
int3
popa
fs
cld
enter
xchg
jo
dec
bound
mov
sbb
scas
cwtl
popa
jp
xchg
push
lods
cmp
out
pop
rcl
gs
out
pop
jl
cld
dec
dec
mov
mov
fcmovb
vpsllw
stos
pop
repz
aaa
mov
xor
pop
cmc
fdivp
inc
push
pop
bound
bound
imul
aad
repz
shll
in
into
je
mov
hlt
and
pusha
jecxz
mov
test
jae
sti
mov
xchg
aam
mov
je
leave
mov
xor
push
xchg
inc
and
lahf
sbb
pop
rorb
push
popf
lock
jb
adc
mov
rolb
in
sbb
pop
pop
mov
push
mov
imul
in
mov
and
fstpl
aas
push
jge
stos
ds
lcall
daa
adc
add
cmpsl
mov
mov
adc
aaa
cmc
sub
mov
cmpb
cmp
mov
jno
xchg
mov
pushf
scas
sahf
xchg
js
jb
out
aad
jns
mov
or
push
lcall
push
daa
mov
pop
push
inc
int3
push
push
divl
pop
rolb
int3
xchg
pop
int3
lods
push
imul
or
adc
imul
outsb
leave
xchg
popf
pop
xchg
xchg
test
cltd
dec
adc
lea
jnp
and
push
ss
pop
push
and
fidivs
int
dec
inc
jo
adc
int3
aaa
je
outsl
push
mov
imul
jle
aas
or
mov
inc
hlt
adc
je
mov
mov
xor
xor
dec
mov
test
dec
insb
ret
push
repnz
or
or
vpsubusw
xchg
mov
mov
push
mov
subb
add
sub
lods
xor
dec
xchg
pusha
sub
push
mov
iret
shlb
js
mov
xlat
repnz
out
ljmp
out
pop
dec
mov
jb
and
or
mov
push
popf
sub
inc
inc
pop
mov
jmp
cs
icebp
mov
imul
test
cmpsb
je
pop
scas
movsb
push
adc
and
mov
xlat
fcompl
mov
cmpsl
lods
fs
cmp
je
xor
mov
insl
out
in
mov
jae
and
mov
insb
jl
sub
mov
push
xchg
dec
fs
pushf
jnp
lret
pop
lods
adcb
outsl
mov
cmpsl
and
dec
pop
pop
dec
stos
jo
loope
int3
pop
xor
mov
mov
push
das
mov
and
mov
pushf
and
test
stos
aam
mov
and
mov
stos
fldcw
test
fsubrs
leave
dec
ret
sbb
fildll
icebp
mov
jbe
mov
pop
fadds
jbe
je
xchg
xchg
pushf
adc
xchg
pushf
popl
subb
or
stos
jecxz
fwait
jp
fstcw
pushf
mov
dec
inc
scas
jge
fs
arpl
sbb
mov
xchg
dec
int3
inc
push
cld
push
mov
mov
aas
rorb
addb
xor
push
in
aam
sahf
push
iret
cmp
push
arpl
mov
bound
lods
int3
mov
xchg
enter
out
pop
and
nop
in
in
or
pusha
je
fs
test
sub
fistpll
popa
jbe
push
int
mov
sbb
mov
addr16
xchg
sahf
add
aam
mov
movsb
pop
test
popf
push
cmc
test
jl
pushf
mov
bnd
sub
iret
ret
or
scas
pop
out
sahf
cltd
push
sahf
jmp
push
out
fisubs
cmpl
cmp
sbb
jecxz
pop
sete
shl
inc
xchg
mov
stc
lea
sub
ljmp
push
adc
add
and
scas
dec
pop
pop
arpl
adc
push
in
mov
movsb
jmp
sysenter
mov
outsb
dec
jmp
imul
mov
mov
cmpsb
mov
pop
leave
fcoml
pop
in
les
repnz
fiadds
lret
mov
pop
andb
inc
hlt
xchg
gs
mov
mul
push
sub
in
push
dec
jb
in
inc
movsl
xchg
cmp
stc
xchg
inc
imul
je
dec
pop
and
pop
jecxz
xchg
jg
arpl
add
data16
pop
cli
ljmp
dec
mov
scas
push
xor
cltd
push
scas
lods
in
sub
push
sahf
push
mov
gs
loop
push
in
lds
mov
dec
jge
xor
int3
out
loopw
cwtl
sahf
clc
push
cmc
dec
mov
mov
test
test
xor
add
xor
popf
dec
in
or
jmp
adcl
pop
fwait
ret
icebp
insb
test
adc
stos
test
cmp
adc
jb
lods
pop
sbb
cmpl
imul
inc
pop
xor
dec
aam
pop
push
imul
fwait
jns
out
push
sbb
lcall
inc
fmull
push
xor
repnz
fcomps
test
xor
adc
test
adc
fs
int3
fcmovnbe
mov
aad
divl
or
sub
loopne
pop
enter
in
stos
loope
ljmp
add
fs
inc
mov
dec
mov
insb
negb
in
and
adc
je
pop
push
xor
pusha
in
jecxz
xor
int3
sbb
mov
cmc
pop
pop
cmp
push
cmp
movsb
sarl
mov
and
leave
outsb
xlat
nop
add
jno
imul
push
fisttpll
jle
rcrl
sbb
test
movsl
xor
lcall
dec
inc
stos
or
cmc
mov
xchg
leave
lods
cltd
mov
jbe
push
in
je
xchg
push
adc
ss
mov
outsb
insb
subb
pop
movsl
mov
mov
in
scas
push
movsb
pop
xchg
data16
lahf
nop
popa
dec
movsb
pop
inc
mov
xchg
push
add
lods
cmpb
fstps
inc
mov
or
lret
push
inc
test
in
movsl
adc
mov
daa
sbb
jmp
sub
jne
sbb
pop
cmp
mov
je
movsb
test
and
push
pop
push
xchg
nop
movsb
or
hlt
pop
push
mov
data16
out
std
das
push
mov
int3
aas
in
aaa
fcoml
arpl
or
arpl
dec
insb
shlb
push
jl
punpckhwd
adc
push
in
dec
jl
jecxz
ss
mov
xor
bound
add
shufps
sbb
jns
adc
and
cmp
int3
mov
add
ja
sub
int3
xor
inc
and
ja
xchg
cmp
pop
dec
cmpsl
insb
and
popa
xlat
or
cmp
dec
cwtl
xlat
jl
cwtl
fs
push
repz
inc
xchg
cmp
or
or
aaa
scas
mov
mov
sub
sub
test
pop
mov
in
movsl
filds
loopne
add
pop
sub
add
mov
arpl
inc
imul
scas
push
jl
mov
in
test
lds
into
rorb
mov
mov
mov
sbb
mov
mov
xor
es
mov
les
xchg
adc
mov
adc
lahf
fstpl
adc
ss
or
xchg
shrl
push
sub
int3
testb
sahf
lods
cmp
fmuls
sub
pusha
add
stc
xchg
les
outsb
shll
fwait
xchg
out
mov
xchg
cwtl
aaa
jns
inc
popa
push
out
loop
ret
gs
repnz
inc
lcall
stos
aas
pop
orb
bound
sbb
sub
push
inc
cmp
hlt
loop
inc
xchg
hlt
pusha
jno
movsb
dec
sub
sbb
cli
inc
sub
mov
fwait
outsb
out
and
pop
xchg
jp
jbe
fcmovbe
movsb
mov
xchg
shrb
add
xor
lds
mov
fwait
hlt
out
inc
xchg
xor
clc
add
pop
xchg
xchg
push
mov
jns
cs
outsb
or
xor
mov
cld
popf
pop
jb
pusha
movsb
mov
in
ficomps
andl
addl
pop
inc
mov
xchg
xchg
bound
call
out
stos
movsl
add
mov
cld
xchg
das
leave
arpl
clc
jo
pop
notl
mov
out
gs
mov
mov
jb
mov
jb
pop
repz
fistpl
outsl
push
inc
mov
ret
repnz
dec
pop
jb
jecxz
sbb
mov
dec
insb
cmp
mov
push
stos
sub
adc
testb
mov
repnz
push
outsb
mulb
mov
xchg
dec
dec
lods
xchg
xor
cld
pop
cmpsb
xchg
sub
inc
movsl
addr16
inc
mov
pop
dec
pop
bound
xchg
rolb
sbb
and
std
mov
mov
hlt
xchg
popf
test
gs
repz
in
sub
sub
xchg
in
ljmp
mov
mov
insb
jae
adc
popf
xor
and
push
mov
and
daa
xchg
xchg
repnz
and
xor
loopne,pn
add
cltd
mov
es
imul
lret
les
pop
filds
xchg
pop
in
and
mov
lds
mov
inc
stc
scas
dec
mov
jb
dec
dec
mov
mov
cmp
push
xlat
lcall
mov
pop
or
out
pop
loopne
xchg
adc
push
aas
dec
orb
js
stos
push
pop
fstpt
stos
mov
stc
sti
push
sub
xchg
sti
push
out
pop
testb
push
or
das
fstps
adcl
stc
pop
and
mov
xchg
test
int3
cld
icebp
arpl
js
daa
mov
test
std
std
clc
das
jo
sub
jne,pt
ds
fs
pop
jae
cmp
jl
int3
repz
mov
add
cmp
and
aam
movsb
add
fsubl
push
pop
fmul
pop
adc
xor
push
add
xchg
or
xor
push
mov
pop
cmpl
xchg
insl
imul
sub
sbb
arpl
or
int
pop
mov
test
cmpsl
xchg
filds
popa
neg
xchg
fisttpll
pop
cmp
xchg
xorb
outsl
pop
mov
sub
or
sub
lds
in
dec
dec
push
xchg
aam
movsb
and
nop
pop
mov
push
push
loopne
xchg
sub
fsubs
mov
sub
mov
mov
jmp
xor
mov
cmp
xchg
push
sahf
inc
jle
pop
sub
test
sbb
sbb
stc
das
js
loope
sub
mov
int3
call
rcll
xor
das
dec
mov
gs
xchg
loop
sahf
daa
ss
aas
mov
rcr
nop
lods
jl
lea
adc
sbb
sub
scas
movsb
inc
aas
xchg
cmp
lods
add
out
jmp
js
dec
jnp
shrb
loope
dec
in
jb
mov
ret
push
add
in
les
stos
xchg
hlt
sub
pop
or
pop
dec
sbb
xor
cld
pop
daa
dec
cmp
nop
data16
sbb
rorb
cli
sub
sbbb
push
cmp
sbb
scas
lea
mov
push
sarb
and
enter
mov
sub
sbb
jnp
mov
aam
test
gs
aam
fs
lahf
test
xchg
movsb
aas
add
idivl
mov
mov
inc
popf
dec
mov
mov
in
push
adc
fwait
test
xchg
mov
push
sbb
xor
or
jo
fs
sahf
mov
mov
mov
sbbb
mov
push
jb
push
scas
push
not
mov
gs
or
lods
xchg
hlt
das
mov
inc
mov
aas
pop
hlt
arpl
ret
out
iret
stos
lret
ja
cwtl
fs
adc
push
mov
jl
fstl
loop
imul
and
fwait
daa
pusha
sub
dec
pop
call
rcl
leave
mov
cli
lea
jle
inc
xchg
test
mov
add
xchg
divl
cld
inc
pop
scas
bound
mov
pop
lea
push
or
in
pushf
daa
stos
leave
sub
je
pop
aas
sbb
insl
test
mov
cs
cli
mov
push
stos
inc
mov
pop
cmp
lea
pushw
and
mov
leave
mov
stc
std
shll
cmp
arpl
scas
loope
loop
mov
xchg
aas
scas
daa
insl
mov
lods
mov
iret
jae
in
test
jns
sub
pop
test
push
pushf
mov
icebp
stc
outsl
js
sub
sahf
xlat
in
adc
mov
cmp
lahf
mov
sub
mov
outsb
dec
loope
stos
mov
es
push
loop
std
movsb
jne
xor
repnz
sbb
add
scas
sub
lret
mov
daa
lea
xlat
sbb
pusha
in
mov
mov
pop
pop
loop
jle
xor
mov
in
mov
jmp
popa
sahf
outsb
int3
fimuls
cld
sub
mov
insb
xchg
or
push
daa
test
in
cmp
push
in
orb
sub
mov
dec
negb
xchg
popa
xorb
test
xchg
push
fildll
nop
ss
aaa
adcb
xorl
inc
cltd
or
int3
outsl
dec
sub
clc
pop
pop
dec
movsb
xchg
mov
mov
lods
mov
push
arpl
xchg
shr
push
sbb
and
sub
enter
lods
loop
stos
jnp
out
jbe
pop
push
mov
mov
or
repz
pslld
push
das
imul
and
mov
xchg
ss
js
or
loop
push
and
push
xchg
dec
sub
push
adc
stos
or
into
xor
dec
inc
lahf
nop
test
movsb
arpl
fdivr
jo
test
scas
push
sub
xor
push
pop
jbe
hlt
sbb
shrb
mov
adc
test
daa
mov
sbb
gs
es
je
cmpsl
int3
xor
cli
or
iret
add
lods
stos
push
pusha
xchg
push
xchg
cmp
mov
add
push
pop
dec
pop
jmp
adc
mov
sahf
xchg
inc
xchg
pop
sub
out
lods
pop
mov
outsl
divb
push
cld
xchg
aas
arpl
mov
sub
or
inc
add
sub
shrb
fdivs
dec
scas
sti
sub
dec
scas
inc
push
ds
xchg
pop
fisttps
imul
stc
popl
adc
inc
jo
jmp
jge
shl
cld
push
fsts
or
int3
shl
pop
jbe
std
das
ss
scas
jp
lea
mov
pop
test
dec
movsb
loop
jecxz
dec
inc
inc
clc
test
mov
popa
es
mov
push
lds
je
aaa
dec
mov
xor
dec
mov
push
cmc
in
leave
int3
outsl
jne
or
push
mov
mov
cmp
pop
imul
pusha
cmp
leave
lcall
mov
rcr
imul
cmpsl
lcall
imul
sub
dec
cmp
xchg
dec
bound
xlat
jo
mulb
in
movsb
and
or
push
and
push
jno
shlb
xor
or
jecxz
xchg
in
clc
mov
mov
call
and
sub
mov
push
push
cmp
addl
add
mov
icebp
sub
js
mov
insb
insb
stc
or
out
or
imul
sub
ja
mov
pushf
xchg
push
xchg
xchg
je
pop
adc
fildl
call
test
mov
ss
cwtl
daa
js
fdivs
inc
push
mov
mov
jecxz
out
or
add
mov
dec
or
mov
xchg
cmpsb
imul
rolb
sti
lea
and
aam
loopne
xor
cld
sub
adcl
jl
sbbb
leave
push
mov
or
push
je
int3
movsb
aam
fnsave
cmp
push
insb
mov
in
and
hlt
mov
in
lret
cmp
lds
je
cmp
sbb
mov
decl
jecxz
sub
jle
push
sub
sbb
sub
inc
cmc
das
cmpsl
xor
xchg
mov
push
push
add
lret
fcmovnu
clc
or
mov
add
mov
mov
sahf
cld
push
adc
scas
mov
mov
movsl
add
dec
das
aad
fdivl
pop
data16
xchg
sub
push
add
mov
enter
jl
scas
bound
inc
mov
sbb
sarl
test
jo
inc
ds
inc
mov
dec
sahf
cwtl
add
insl
lea
xchg
xor
sbb
lock
int3
and
mov
out
mov
ret
adc
lods
popf
adc
xor
add
jns
movsl
xor
mov
jbe
mov
lea
or
mov
mov
pop
jmp
cmp
sbb
negl
or
jae
dec
rclb
xchg
pop
aad
dec
mov
inc
cmp
popa
dec
aas
in
out
add
jb
xchg
sub
xchg
mov
push
test
cmp
jns
aas
xchg
xor
pop
push
and
ss
stos
fdivr
and
mov
bound
pop
cmp
pop
sahf
push
mov
scas
pop
mov
shll
sahf
inc
popf
or
mov
pop
sarl
ja
push
sbb
int3
rclb
push
inc
add
dec
loopne
jae
jno
ja
jbe
cwtl
fidivrl
bound
inc
pop
mov
outsl
iret
in
pop
daa
pop
mov
ficoml
cmpsb
sbb
cmpsl
push
inc
lea
lods
aas
pushw
cmc
or
fcom
je
jb
repz
add
and
popf
leave
mov
push
xor
outsb
mov
outsl
faddl
sub
je
test
jb
ss
jns
adc
aad
mov
ja
popf
mov
fwait
add
mov
jo
mov
ret
jae
xchg
inc
jo
mov
xor
mov
xor
call
sub
xor
mov
pop
mov
and
pop
stos
leave
push
xchg
lea
mov
movsb
movsb
clc
and
add
xor
scas
mov
call
ret
pop
mov
lods
or
push
mov
cmp
je
int3
jl
in
push
lods
inc
je
pop
icebp
fistpll
lods
mov
stos
pop
adcl
outsl
lods
jbe
inc
adc
in
lds
adc
sbb
stos
dec
sahf
or
call
decb
scas
in
scas
in
cmp
add
mov
cmc
inc
mov
test
inc
pop
push
fisubs
addb
ret
xchg
cld
int
in
jno
aam
das
push
mov
int3
add
repz
mov
bound
loop
cmc
jmp
mov
xchg
mov
dec
scas
xchg
outsb
js
xchg
sbb
lock
push
dec
je
jo
xchg
insb
mov
add
mov
roll
repz
outsb
loopne
jecxz
pop
xchg
lcall
mov
xchg
lods
je
inc
jmp
insb
push
jecxz
or
dec
mov
xor
repnz
mov
aad
jmp
es
push
int3
movsl
jne
scas
ss
testb
and
cmpsb
ss
cwtl
je
push
push
xchg
lods
pop
cmp
arpl
push
loop
jae
gs
aad
adc
and
sub
jb
push
xor
stc
ss
loop
xchg
jb
clc
aas
and
rcrb
test
cmp
add
dec
notl
mov
push
pop
sbb
lcall
mov
jmp
adc
push
pop
in
adc
int3
inc
sub
lahf
leave
mov
push
mov
loope
jbe
movsb
xchg
push
jmp
lret
adc
int3
ja
bound
jns
dec
and
sbb
xchg
fstl
lods
mov
int3
xchg
sbb
mov
cmp
addb
aad
popl
and
mov
inc
dec
xchg
ret
jl
xor
repnz
hlt
aas
lea
repnz
jne
inc
js
test
ja
mov
add
mov
int3
fdivl
test
in
or
lods
stos
lods
lods
adc
jns
int3
movb
sub
mov
inc
cmp
lds
in
not
loop
inc
imul
mov
call
cwtl
xor
movsb
insb
outsb
mov
jmp
pushf
push
jle
ss
pop
fwait
jg
arpl
mov
ret
orb
test
sbb
mov
mov
inc
ljmp
lea
adc
aaa
or
les
inc
pop
das
cmpsl
fdiv
test
mov
dec
lret
mov
xor
in
aas
mov
pop
add
stc
mov
jno
ror
mov
pop
push
mov
daa
std
mov
pop
std
into
lcall
adc
in
pop
fisubrs
dec
mov
sahf
mov
dec
pop
es
jno
mov
and
test
push
int3
dec
pop
flds
jge
shrl
imul
mov
mov
pop
insl
add
cmp
scas
push
mov
mov
sbb
cmpsb
popf
fdivl
out
xchg
mov
mov
dec
fidivl
mov
das
sub
and
pop
adc
or
xor
imul
cmp
jbe
movsl
xchg
das
adc
xor
add
leave
inc
adc
pop
lahf
int
fmul
sub
pushf
les
leave
pop
jnp
mov
je
push
je
data16
jb
dec
stos
jl
test
bound
sub
mov
adc
xchg
pop
mov
mov
cmpl
loop
je
jnp
test
dec
mov
sub
out
pusha
xchg
icebp
cmpsl
inc
mov
in
aas
add
test
clts
mov
xchg
in
dec
test
stos
and
test
outsb
pop
outsb
mov
dec
mov
adc
stos
mov
outsb
js
add
pushf
mov
popf
cmc
mov
pop
push
or
mov
cwtl
push
push
ret
cmp
sarl
lods
jb
adc
lcall
gs
inc
icebp
cmp
popa
cli
test
test
stos
leave
inc
jne
push
fmull
cmp
mov
out
or
mov
dec
stos
sbb
jns
inc
popa
fs
mov
subl
stos
data16
lcall
nop
icebp
or
dec
inc
in
cmpsl
decb
cmp
cmpsl
stos
fs
jp
xor
mov
adc
add
mov
xor
test
je
movsb
xor
out
aas
push
mov
in
jp
int3
jmp
xor
xlat
jns
dec
xchg
aad
mov
push
xchg
insl
aas
pop
bound
loopne
jns
pop
or
enter
fs
push
and
jbe
xchg
jp
xchg
pop
inc
ret
aad
loop
cwtl
in
push
je
jns
jo
aaa
mov
cld
test
add
jbe
out
cmp
sub
add
ljmp
push
repnz
shll
pushf
cli
xor
je
lods
and
mov
je
loope
push
inc
xchg
cltd
fs
add
movsl
xchg
cmpsb
movsb
stos
das
sub
inc
bound
adc
xor
loope
or
aas
bound
loop
sub
subb
cmc
and
scas
jnp
inc
xchg
mov
pop
lods
push
mov
inc
mov
pushf
sub
push
mov
mov
repz
mov
sub
insb
xchg
dec
mov
or
jae
xchg
dec
mov
inc
push
mov
cmp
jns
das
fdivrl
or
adc
loopne
xor
nop
insb
mov
mov
subb
cmpl
hlt
or
or
cld
or
mov
mov
dec
push
mov
dec
cmpsb
mov
loope
pushf
lods
mov
outsb
insl
jle
repz
xchg
movsb
stos
cmp
pop
sub
mov
cwtl
cmc
cmp
push
pop
xchg
xor
aas
cmpsb
push
popa
xor
dec
xor
and
and
into
fisttpll
cmpsb
sbb
xchg
pop
sub
in
mov
mov
daa
fwait
movsl
push
inc
out
test
fisubrs
loope
add
repz
xchg
pop
stos
cmp
ss
and
mov
sub
sbb
roll
daa
add
mov
lock
stc
xchg
mov
push
fistpl
dec
jp
and
imul
inc
in
lahf
outsb
je
add
sub
repz
jo
jo
dec
insl
mov
sbb
adc
mov
or
in
sbb
lahf
notb
cltd
jecxz
or
mov
xor
fldenv
pop
mov
pop
xchg
push
movsl
cld
and
aam
mov
shll
mov
daa
inc
inc
adc
mov
push
ljmp
pushf
cwtl
lods
pusha
pop
outsl
faddp
sub
in
addr16
jecxz
push
aas
cs
inc
shl
sub
stos
iret
test
jb
or
scas
mov
push
mov
mov
push
push
div
jle
jno
xor
fcomip
mov
mov
mov
addr16
sbb
into
ret
dec
or
out
rcrb
pop
sub
mov
adc
es
xor
fs
mov
and
pop
fildll
cmpsb
cs
fsubl
stos
mov
sahf
in
sbb
lods
idivl
cmp
cmp
add
repnz
and
out
rcll
in
xchg
into
ja
stc
xchg
mov
cltd
test
sarl
adc
mov
pop
daa
aaa
xor
lret
xor
xor
lods
inc
cmpsl
sub
mov
imul
pop
sbb
test
mov
dec
jb
mov
mov
scas
cmc
ret
outsb
fs
in
repnz
scas
shll
mov
jp
jle
sbb
cld
inc
sub
push
cmpsl
adc
lret
dec
fcomip
push
data16
adc
sbb
mov
adc
dec
dec
jb
leave
je
test
sti
enter
pop
lcall
cmpsb
add
inc
loope
xchg
dec
xchg
or
jl
push
pop
leave
or
cmpsb
xor
push
es
ds
je
dec
xchg
sub
xchg
pop
jl
mov
in
sbb
cmp
and
or
sahf
int3
scas
mov
sub
or
jo
lcall
mov
jns
dec
inc
test
inc
lds
or
popf
jns
jecxz
bound
jmp
loop
pop
push
test
mov
xor
fists
int3
cs
lret
jo
notl
hlt
test
mov
push
stc
repz
dec
mov
loop
sub
mov
dec
mov
or
ss
arpl
lahf
jl
loop
std
in
adc
pop
adcb
jae
jbe
mov
repnz
inc
lods
loope
scas
pop
dec
movsb
mov
inc
popa
inc
lea
cmp
lock
leave
sbb
mov
xchg
pop
bound
jae
fmul
dec
imul
push
lods
pusha
jl
pop
jb
loope
ror
repz
outsb
pusha
sbb
divps
jnp
aam
repnz
sahf
and
push
leave
cmpsb
std
inc
test
and
pop
aas
inc
enter
addr16
dec
popa
mov
shll
js
jp
pop
adc
sub
lret
cmp
test
loopne
stos
adc
pop
jnp
xor
dec
icebp
mov
mov
pop
xchg
dec
dec
mov
mov
xor
add
je,pn
xor
repz
push
inc
fldt
test
xlat
shl
cmp
lret
lret
jno
xor
pop
repnz
xor
int3
lods
mov
and
cmp
pushf
mov
cmp
popa
mov
test
pop
and
push
mov
sub
loop
stc
call
out
shl
mov
jnp
fistpl
daa
lret
lock
fists
sbb
cwtl
int3
popa
pop
or
add
mov
mov
and
xlat
pop
rcrl
add
mov
gs
sub
xor
mov
insl
inc
push
arpl
das
outsb
lods
pop
xor
mov
fistpl
das
repz
int3
lcall
daa
insb
push
sbb
jno
imul
adcl
gs
movsb
pop
lret
not
pop
ds
lods
js
popa
sar
mov
pusha
and
dec
mov
inc
sub
mov
add
cmpsl
xchg
cmp
out
stos
ss
mov
push
jnp
push
hlt
popf
loopne
daa
nop
mov
sub
leave
mov
sub
ret
idivb
movsb
lods
rcll
std
sub
lods
xor
lods
fistl
mov
mov
xlat
bound
call
fadd
cmc
mov
push
xor
mov
adc
repz
cwtl
jb
in
inc
xor
pop
push
out
push
bswap
test
adc
imul
pop
into
and
add
sbb
in
fisubs
imul
dec
adc
and
push
jecxz
xchg
sub
sbb
cmc
stos
test
mov
push
push
popa
addr16
xor
cmp
or
shll
pop
dec
mov
popa
cmp
cmc
inc
push
pop
dec
fbld
push
adc
mov
jp
sbb
cwtl
lret
test
bt
mov
jmp
lods
aad
push
adc
pop
xorl
add
adc
inc
sub
dec
jae
movd
jge
negl
lret
in
gs
imulb
ficoml
incb
cs
sub
je
insl
sahf
mov
test
imul
cld
xor
mov
add
xor
cmc
lods
stos
scas
pop
mov
mov
in
push
nop
cmpsb
lods
mov
sti
and
ds
stos
mov
mov
sub
in
outsb
test
mull
je
loop
xor
icebp
mov
outsl
sti
mov
test
add
loope
ljmp
pop
int3
out
movsb
xchg
out
test
stos
cmpsl
outsb
lods
or
push
leave
into
inc
fwait
sahf
adcl
cwtl
movsb
ja
xchg
cmp
xchg
add
js,pn
xchg
mulb
imul
add
cmpsb
repz
jb
test
cld
mov
push
icebp
jns
cmp
xchg
in
scas
dec
pop
lret
stos
cmp
mov
push
scas
xchg
sub
adc
sub
pop
add
sub
adc
push
stc
push
shrl
ljmp
imul
in
push
pop
out
cltd
and
fistl
stos
dec
insb
inc
and
inc
push
movb
adc
imull
and
repnz
mov
jnp
mov
nop
repnz
mov
mov
cmc
pop
mov
xor
mov
xchg
sbb
stos
inc
mov
and
lock
scas
outsb
sub
inc
pop
imulb
jnp
pushf
fwait
dec
inc
mov
xchg
mov
jb
mov
xor
das
jg
leave
dec
inc
bound
xchg
mov
pusha
or
test
stos
xchg
add
mov
inc
lea
mov
mov
add
jae
jb
movsb
and
mov
xor
jb
sub
push
adcb
scas
roll
cmp
test
scas
test
ss
sub
jne
cmp
scas
insb
imul
lcall
sub
push
mov
dec
mov
pop
out
lods
out
aas
fisubrl
pop
out
xor
in
subb
cltd
mov
loop
leave
xchg
ja
jnp
stos
movsb
and
add
mov
dec
mov
and
nop
push
popf
mov
aaa
arpl
das
test
push
fildl
cmp
push
movsl
sbbl
xor
outsb
cmpsb
mov
in
mov
jmp
lods
mov
cmp
movsb
sbbl
mov
lods
imul
gs
mov
pushf
mov
ficoml
mov
cltd
dec
lods
dec
aas
sub
divb
jns
cmp
xor
mov
and
in
ret
add
mov
mov
xchg
test
mov
je
pushl
je
jnp
int
push
mov
push
in
shrb
rorl
lods
add
mov
or
cli
lahf
adc
je
outsb
mov
mov
hlt
outsl
adc
push
mov
sub
push
bound
add
xor
mov
lods
jle
and
int
and
movsl
pop
mov
scas
outsb
inc
cmpsl
iret
icebp
add
add
out
movsl
mov
aam
sbbb
jg
sbbb
insb
inc
sbb
dec
xchg
mov
out
push
in
and
push
or
jp
outsl
je
mov
repnz
push
cmpsb
mov
mov
jo
in
inc
mov
lock
jno
pushf
hlt
insl
xchg
push
cmc
mov
in
je
lods
xor
cltd
add
mov
movsb
mov
int
scas
lret
cs
mov
scas
or
frstor
insl
aam
jae
mov
mov
cmpb
fbstp
and
nop
arpl
stos
lods
pop
orl
imul
mov
out
cmp
je
mov
mov
mov
mov
or
movsb
iret
frstor
cmp
fdivrl
jns
mov
inc
pop
icebp
xor
xor
lods
mov
mov
sub
mov
and
das
sub
neg
int3
mov
test
mov
push
dec
scas
dec
movsb
lret
inc
xor
cmpsl
xchg
xchg
inc
ret
mov
ljmp
in
sahf
adc
es
and
jp
ss
lock
movl
jbe
pop
loope
test
push
jp
into
subb
or
nop
fcomps
xor
pop
lock
xchg
inc
popa
xchg
daa
repnz
mov
add
sub
adc
sub
cltd
pop
call
fidivrs
jno
int3
outsb
sub
je
test
sub
xor
mov
lock
test
xor
les
jno
loop
stos
cmp
int3
push
fwait
bound
aaa
hlt
sti
leave
cmpsl
sbb
lahf
and
stc
mov
int3
mov
adc
lahf
fwait
cmp
data16
stos
int3
loope
aas
js
xchg
sbb
dec
cwtl
cmovb
sub
cltd
xor
clc
adcl
or
lods
outsl
pushf
sbb
jg
lea
cld
outsb
push
xor
or
lds
dec
pushf
outsl
add
es
out
pop
and
adc
insb
jo
inc
sub
cmp
jae
push
mov
sbb
dec
mov
add
je
mov
in
jecxz
andb
xchg
js
mov
aas
mov
fnsave
push
push
loop
cs
loope
mov
push
xchg
lea
imul
cmp
repz
shlb
out
cltd
subb
push
sub
aaa
insl
int3
mov
xor
sub
testb
aam
movsl
add
out
add
push
stos
adc
add
je
mov
mov
out
aad
dec
call
jb
stos
mov
icebp
dec
loop
popf
mov
lock
loope
imul
ds
xchg
lret
and
nop
int
jmp
sub
aas
aad
xor
bound
cmp
imul
divb
movsb
movsl
sub
mov
sahf
pop
xor
popa
push
idivb
test
mov
nop
in
shlb
mov
outsl
testb
loopne
nop
jp
mov
aaa
test
sarl
jne
cmpxchg
jno
dec
xor
mov
xchg
pop
mov
xchg
mov
mov
test
movntps
cmp
pop
pop
and
lds
xchg
fstl
lret
lods
icebp
cmc
pop
movsb
xchg
and
xor
insl
mov
clc
gs
push
mov
add
inc
xchg
cmp
pushf
in
lret
es
cltd
push
mov
xchg
icebp
pop
cli
cmp
arpl
adc
jae
xor
push
test
ja
stc
icebp
jo
xor
inc
out
fmull
insl
pop
jno
adc
fadds
cwtl
xor
ss
adc
jmp
xchg
or
or
inc
add
ljmp
push
pop
or
test
daa
mov
mov
push
mov
jecxz
jo
xchg
gs
jb
mov
add
jno
mov
pusha
jns
cmp
dec
ret
jmp
push
push
mov
leave
adc
pop
enter
jo
xor
pop
cmp
xor
mov
test
sub
dec
push
ret
cmp
adc
lds
movsb
nop
pop
jg
andb
inc
xor
pop
cwtl
sbb
and
push
xchg
call
cmp
cmp
ds
loopne
push
outsl
xchg
push
add
out
lods
lods
fistpll
push
jns
pop
cmc
in
mov
sbb
popf
movsl
push
or
icebp
bound
movsl
jne
in
inc
pop
fisubs
imul
scas
lret
mov
and
pop
push
scas
outsl
sub
sbb
decl
adc
mov
das
dec
aaa
lods
cmc
ret
pop
xchg
in
cmp
movsb
fnsave
xor
lods
mov
ret
mov
jle
popa
mov
shlb
repnz
xlat
insb
mov
movsl
les
in
cmc
pop
mov
jo
adc
pop
pop
add
push
xchg
gs
mov
fisubrs
pop
int3
jl
iret
nop
ret
adc
fisttpl
mov
dec
push
incl
aam
pop
pop
fcoml
mov
popa
test
add
push
data16
inc
jnp
das
out
push
mov
jge
jle
dec
lds
jb
xchg
jge
inc
push
add
pop
or
jp
push
xor
je
fsubrl
aas
mov
popa
xor
xor
mov
add
lret
pop
data16
retw
and
test
sub
or
pop
mov
stc
mov
cwtl
adc
pop
repnz
repnz
and
cmpsl
add
xor
push
bound
xchg
in
scas
inc
test
or
or
xchg
push
cwtl
stos
jb
fs
xchg
mov
push
mov
hlt
pop
test
xor
pop
testb
push
aam
add
xor
mov
mov
insl
bound
lea
mov
pop
aaa
sarb
insb
popa
mov
mov
jl
sub
inc
sub
inc
jge
mov
movsl
data16
insl
sbb
cmpsb
xchg
imul
lcall
jge
movsb
sub
mov
xchg
out
filds
movsb
sub
xor
push
sub
sub
mov
in
in
cwtl
xlat
and
imul
popf
mov
pushf
xor
cmp
xchg
stos
fwait
mov
mov
mov
stc
les
aaa
leave
pop
loopne
icebp
pushf
icebp
stos
jge
mov
sub
push
xor
xor
movsl
jle
cwtl
cmpsl
in
pop
xchg
enter
xorb
sub
cbtw
push
incl
mov
xor
adc
popa
in
test
pushf
push
xchg
pop
adc
sub
stos
jecxz
movsl
mov
pop
lahf
mov
dec
mov
repz
sub
add
xchg
inc
xchg
mov
lahf
leave
mov
adc
stos
lea
mov
mull
mov
cmp
pop
frstor
adc
les
sbb
sarl
xor
sub
loop
push
mov
jnp
inc
bound
sub
pop
loop
popf
mov
and
je
mov
test
dec
fbld
fildl
pop
lahf
inc
dec
subb
sub
mov
cmp
add
jae
aas
and
jns
push
add
sahf
inc
mov
mov
mov
sbb
lret
cmpsb
inc
cld
inc
lret
lea
sub
fidivs
pushf
mov
adc
stos
or
adc
movsb
add
repnz
punpcklbw
pushf
pop
out
xchg
add
hlt
add
hlt
adc
mov
add
ret
xchg
imul
xchg
jno
pop
jo
repz
cmp
gs
lret
pop
mov
jno
aam
mov
inc
xchg
icebp
imul
movsb
ret
cld
test
notl
data16
scas
xorl
and
hlt
mov
or
add
shll
mov
sbb
daa
insb
mov
mov
sub
lods
and
dec
pop
movsl
stos
pop
int3
cld
mov
push
mov
scas
lods
daa
sti
stos
mov
ja
outsl
test
fs
and
cs
pop
mov
mov
jbe
and
mov
stos
das
sbb
cs
lods
sbbl
ds
cld
inc
and
mov
mov
in
xor
mov
arpl
xchg
xchg
or
fs
adc
and
bound
inc
bound
test
dec
or
bound
mov
dec
gs
test
ss
test
ret
stos
fwait
call
call
in
fwait
shrb
or
xchg
mov
nop
hlt
cmpsb
xor
jne
clc
mov
xor
mov
scas
scas
shrl
mov
stos
stos
test
cmpsb
mov
dec
jbe
and
or
xor
pop
das
stc
lods
inc
jnp
mov
sti
fstl
xor
mov
add
out
pop
jns
xor
je
mov
movb
dec
xchg
xchg
pop
mov
push
cmpsb
xor
cs
into
sub
mov
cs
mov
sub
or
pop
int3
dec
mov
sub
ljmp
stc
xor
push
xchg
cs
adc
lock
xor
push
mov
push
add
aam
lods
mov
ss
and
movsl
xor
xchg
inc
popa
cwtl
or
inc
shrb
push
inc
mov
dec
inc
movsb
test
imul
and
ljmp
pop
xor
popf
popaw
adc
insl
mov
xchg
and
inc
push
mov
jno
xchg
cmpsb
in
cmpsb
pushf
and
xchg
xchg
push
xor
inc
shlb
mov
bnd
mov
aaa
fs
iret
dec
lods
insb
xchg
mov
shlb
mov
std
sub
andl
rcl
movsl
add
inc
andl
rorl
cmp
dec
addr16
cs
lds
xor
movsl
repz
mov
sub
pop
sahf
lods
and
jmp
cmp
adc
movsb
or
sbb
cwtl
pop
fisttpl
cmp
or
push
sub
push
dec
jl
push
and
addb
enter
lods
lahf
pushf
loope
pusha
loope
rolb
sub
aas
pop
cmc
fdivrl
std
scas
and
lods
mov
js
xor
loope
jg
mov
xchg
mov
movb
jno
sub
xchg
scas
mov
imul
into
cmp
jo
in
sub
sub
cli
and
xchg
repnz
in
ljmp
and
test
in
push
sub
jno
and
mov
inc
push
jno
jae
add
cmp
sbb
jmp
arpl
pop
aam
lret
sub
pop
xchg
pop
insl
popa
pushf
cld
loop
aad
decl
ret
mov
rcrl
mov
sub
mov
in
sub
push
xchg
shll
pop
sub
and
jo
popa
sbb
in
je
pop
adc
data16
sub
stos
in
lcall
loope
add
test
cli
cmp
cli
andl
adc
sahf
mov
mov
dec
insb
sub
lret
aas
lcall
and
cmpsb
mov
outsb
ljmp
imul
ret
movsb
div
stos
pop
sub
ret
and
loop
hlt
cmp
mov
pop
xchg
test
outsb
jnp
push
pop
inc
aam
and
movsl
pop
pop
lcall
sbb
mov
mov
and
pushf
jl
imul
jno
mov
cwtl
movsl
and
xorl
jmp
push
inc
fadds
mov
add
adcb
pushf
push
adc
add
mov
test
push
xchg
imul
jbe
push
xchg
xchg
inc
in
es
xchg
data16
fs
pusha
shrl
jno
lods
fnstcw
jle
jb
and
mov
inc
mov
adc
sahf
int
cwtl
divb
sub
imul
push
sub
sub
and
mov
push
outsb
adc
lock
sbb
inc
mov
add
iret
shrb
movsb
xor
jp
xchg
inc
test
sbbb
fildll
cwtl
sbbb
jmp
div
insl
scas
pushf
cwtl
pop
mov
imul
add
cmp
mov
dec
xchg
mov
sub
int3
ret
clc
adc
add
inc
fimuls
dec
jne
ss
inc
stos
push
push
adc
daa
cmp
mov
stos
cmp
add
sbbb
xchg
jne
scas
mov
rorl
pop
pushf
or
int
imul
movsb
imul
cmpsl
push
pop
mov
arpl
popa
dec
loop
aaa
mov
cmpsb
mov
lahf
add
aas
cmpb
sub
outsb
jne
or
inc
jmp
repnz
fldcw
pop
movsb
push
mov
lods
sbb
bound
fldcw
icebp
outsb
repz
mov
fs
movsl
repnz
pop
mov
cmp
mov
sub
and
jmp
lods
sahf
fs
lahf
movsl
stos
aaa
outsb
sub
xor
sbb
and
cmp
lret
mov
and
shl
mov
scas
jl
jb
adc
scas
mov
leave
xchg
dec
xchg
sub
sbb
stos
in
test
iret
xchg
fidivs
ja
cmp
mov
push
sub
hlt
jl
dec
mov
fwait
cmp
push
insb
dec
das
mov
imul
das
push
lock
inc
stos
pop
je
jge
mov
mov
pop
adc
push
adcb
js
in
xchg
or
outsl
shrb
sbb
loop
mov
repnz
sbb
bound
pop
ja
jp
mov
hlt
jno
sub
mov
xchg
adc
jne
push
sbb
movsb
xchg
xchg
push
push
mov
movsb
xorb
fs
sub
gs
cmp
test
xor
xor
cmp
mov
pop
cli
sbb
add
lea
xor
pop
dec
adc
arpl
xchg
les
daa
sub
stc
mov
imul
jmp
jb
cmpsl
test
data16
xor
add
pop
stos
out
shrb
sub
addr16
lcall
roll
pop
icebp
gs
and
sub
pop
int3
out
sub
fstpt
xorb
or
sbb
pop
mov
clc
mov
scas
je
fdivrs
outsb
mov
imull
lods
scas
divb
adc
mov
jb
lods
cwtl
adc
jae
inc
icebp
stos
test
out
adc
mov
ss
sub
daa
mov
adc
jb
push
shlb
sub
mov
mov
pop
sub
stos
push
mov
fildll
inc
xor
sahf
mov
sub
jno
or
xor
adc
test
push
or
shr
scas
dec
mov
popf
push
jmp
adcb
outsl
cmpsb
mov
mov
pop
or
test
into
hlt
pop
in
xor
cmpsl
sti
add
mov
loopne
adc
mov
mov
dec
fstps
mov
jnp
lods
inc
stos
inc
lock
sub
sarl
add
and
in
imul
leave
lods
mov
sub
inc
ds
jbe
arpl
jno
push
xor
loopne
inc
push
movsb
mov
lea
or
inc
xlat
push
leave
std
mov
mov
sti
call
sahf
push
roll
inc
lods
aas
stos
cmp
test
mov
mov
push
insb
mov
cmp
dec
push
shrl
cmpsb
push
dec
repnz
add
jle
push
aas
test
mov
int3
and
mov
mov
nop
daa
insl
adcl
idivl
je
int3
push
insl
stos
jno
daa
pop
and
or
dec
decl
loop
stos
push
movsb
arpl
cld
das
mov
lods
ficoml
fs
pusha
mov
arpl
xchg
jns
xor
int3
push
outsl
sub
push
data16
add
jno,pt
out
jo
outsl
inc
lret
out
andl
cltd
popf
idivb
lahf
sub
fdivp
push
sti
mov
sub
hlt
icebp
push
mov
ljmp
adc
shrl
popa
repnz
ds
popf
aad
push
mov
or
or
xchg
jecxz
mov
jmp
movsl
mov
mov
stc
xchg
xchg
jmp
out
mov
test
xchg
into
dec
call
xchg
xor
mov
imul
mov
outsb
into
push
mov
pop
and
mov
jo
test
lods
shlb
pop
cmpl
push
push
repz
test
movsb
mov
sbb
mov
sbb
push
fwait
test
mov
pop
pusha
shrl
cld
in
mov
pop
popa
int3
imul
ljmp
mov
lret
sbb
fs
xor
jbe
push
mov
cmpsl
mov
popa
mov
movsb
leave
pop
jmp
pop
stc
iret
rcr
frstor
mov
popa
cld
or
movsb
int3
mov
outsb
jae
movsb
arpl
int3
jns
call
mov
scas
lock
cwtl
xor
sub
and
jo
inc
mov
int
mov
sahf
outsb
lret
lds
pop
push
outsb
mov
cmpsl
inc
cmpsl
pop
mov
lods
cmp
pop
das
imul
out
test
pop
mov
loopne
mov
cld
jge
cmp
scas
adc
incb
xchg
movsb
lods
sbb
out
lret
or
js
fstpt
addr16
mov
lock
popf
pop
lcall
nop
insl
cmpsb
int3
out
push
out
mov
ds
sub
xor
cmp
repz
mov
or
inc
dec
in
pop
adc
sub
cwtl
jns
mov
iret
call
jl
push
xchg
pop
dec
xor
fdiv
mov
rolb
inc
mov
mov
cli
xchg
push
pop
test
push
insl
lcall
xor
pushf
test
lea
aas
xchg
push
ljmp
mov
and
ds
imul
jae
lahf
add
jns
lcall
loop
ret
or
cs
add
inc
test
mov
mov
sahf
cwtl
mov
cwtl
mov
mov
push
pop
add
mov
call
ds
lds
or
mov
int3
xor
add
or
mov
popa
daa
outsb
test
fbld
mov
std
sub
lds
pop
leave
or
and
lret
push
inc
test
or
daa
mov
and
adc
ja
xlat
rclb
or
js
add
mov
popa
adc
test
in
xorl
fistpll
jae
shlb
lcall
mov
push
jge
sub
loopne
adc
cltd
ret
xlat
mov
inc
inc
and
insb
cmp
cld
pop
xor
mov
ljmp
lea
movsb
faddp
adc
fldenv
push
stc
mov
movsb
push
push
mov
cmp
lcall
gs
test
popf
aam
pop
jae
mov
xor
into
jb
lock
insl
fldl2t
mov
or
lods
or
mov
daa
pop
mov
fdivs
lret
out
popf
in
out
mov
mov
fnstcw
daa
testb
psrad
adc
lret
clc
out
imul
subb
xor
fs
nop
pop
and
and
mov
cld
lods
outsb
mov
or
mov
push
push
loopne
xor
push
mov
ds
push
jns
std
lods
mov
mov
pop
pusha
push
push
add
movsl
mov
inc
nop
lock
xor
out
cs
xchg
pushf
mov
mov
push
test
jae
mov
jae
test
je
daa
mov
jecxz
loop
dec
cmp
push
mov
mov
inc
jne
popa
iret
dec
sahf
inc
rolb
and
das
sbb
dec
xchg
fwait
pop
test
mov
leave
insb
dec
inc
xorb
mov
mov
push
fs
inc
inc
pushf
lods
push
sbb
arpl
shl
xor
push
jb
nop
sbb
mov
ret
rcrb
mov
sarl
xor
push
pusha
sbbb
iret
jns
test
lods
mov
push
cmp
dec
sub
xchg
je
pusha
add
inc
sub
pop
inc
sbb
fnstenv
imul
rclb
xor
outsl
cmc
xorl
stos
aas
cmpsl
mov
jno
shrl
pop
cld
inc
mov
inc
aam
sub
jmp
hlt
sbb
leave
pop
pushf
jnp
outsl
mov
movsl
and
mov
scas
sbb
stos
mov
mov
rol
lahf
cmp
jbe
out
mov
sub
nop
cltd
xor
icebp
jb
pushf
stos
daa
imul
dec
in
add
xorb
inc
jae
jb
loope
inc
shll
mov
push
cld
adc
notl
jnp
jb
xor
mov
cmp
sub
fsubrl
cmp
pop
pop
and
icebp
test
jg
jne
idivl
xchg
mov
xchg
mov
xchg
lcall
nop
fbstp
or
jnp
pop
sub
xor
push
out
movsb
lret
mov
sub
push
in
repnz
call
out
sbb
sbb
popf
and
test
xor
mov
lcall
cmp
sbb
fldenv
pusha
ljmp
hlt
mov
stos
inc
fwait
push
scas
dec
mov
popa
nop
mov
jo
jg
mov
sbb
jno
cmp
shl
xchg
mov
pop
stos
cmp
mov
lcall
push
insb
test
imul
sbb
pushf
loopne
jno
sub
pop
pop
stos
lahf
int3
outsl
pushf
xchg
leave
cmpsb
sub
jne
repz
arpl
xchg
mov
dec
test
pop
jg
clc
jecxz
leave
popf
movb
adc
inc
xchg
adc
pushf
jnp
cmp
or
imull
add
out
xchg
clc
mov
inc
outsl
es
stc
inc
jge
fisttpll
scas
in
popa
xchg
jae
pusha
adcl
jno
adc
int
push
je
je
push
sub
xchg
ret
arpl
outsb
add
mov
jg
push
repz
pop
repz
shrl
jae
test
aad
lods
sbb
call
pop
and
pop
ficoms
imul
cwtl
xor
orb
jne
xor
daa
cli
imul
rorl
mov
mov
mov
push
mov
xor
dec
push
mov
movsl
sub
and
arpl
sti
xchg
jb
pcmpgtb
adc
adc
adc
addb
stos
or
das
adc
jmp
imul
jo
loopne
icebp
aas
jp
xchg
pop
imul
mov
arpl
push
sub
xchg
jle
leave
out
pushf
sub
clc
pusha
neg
sub
push
call
fdivr
scas
mov
ljmp
xor
mov
lock
lds
call
imul
in
jecxz
out
in
adc
shll
and
dec
jmp
adc
bnd
leave
stos
xchg
insl
je
xchg
xchg
adc
cli
imul
xor
loop
fisttps
pop
shlb
add
push
orb
xor
push
fs
fsts
or
mov
fbld
xor
cmp
mov
je
mov
daa
push
pop
xchg
push
mov
xor
sbb
jne
addr16
xchg
ret
inc
shlb
repnz
mov
lret
push
adc
out
add
scas
test
aas
loope
pushw
push
jge
add
mov
cmp
push
mov
mov
mov
mov
int3
out
jns
shl
movsb
loopne
xor
mov
test
jo
pop
cmp
rcll
mov
sub
xchg
sbb
arpl
mov
mov
in
movsb
cmc
dec
nop
cmpsl
push
hlt
addl
inc
mov
repz
insl
xchg
enter
pop
mov
imul
mov
sahf
xor
cwtl
mov
daa
cmp
xor
pop
xor
inc
push
inc
mov
sub
add
lcall
push
add
bound
xchg
outsl
push
data16
xchg
int3
cmp
loope
leave
les
mov
push
fwait
cmp
sbbb
es
xchg
xor
jl
and
xor
mov
mov
das
push
xor
cmc
aam
cwtl
mov
dec
in
outsl
lret
xchg
jl,pn
pop
sub
and
push
orl
add
adc
xchg
mov
sbb
xchg
cld
mov
mov
xor
xlat
push
dec
fistl
imul
inc
popf
lcall
addr16
popl
fistps
xchg
imul
xor
mov
ficoml
cs
je
push
jb
stos
push
gs
stos
xchg
xchg
fwait
xchg
mov
push
outsl
ss
popl
or
test
es
daa
ds
jae
pop
xchg
fadds
rcll
jb
sub
popf
push
cwtl
or
test
or
lcall
in
jne
orb
push
sbb
cwtl
pop
mov
mov
mov
add
pushfw
dec
les
and
and
out
ret
out
aad
movsb
in
addb
es
jno
loope
mov
mov
dec
lods
sub
popa
inc
mov
enter
sbb
push
jo
cmp
pop
jns
mov
push
sub
aas
ret
cli
rcr
sbb
dec
adcb
aas
sub
mov
sub
notb
pop
or
inc
push
lret
cli
mov
dec
out
test
fisubrl
daa
imul
insl
jae
test
push
dec
xor
add
test
pop
pop
inc
popa
pop
inc
rcrl
jns
push
inc
cmpsl
fdivrs
xchg
cmc
inc
jg
fldt
and
xorb
mov
outsl
push
xor
das
pop
cmp
push
cwtl
imul
bound
aaa
call
jae
mov
hlt
jno
push
andl
bound
sahf
push
fs
cmp
stos
in
xor
fxch
push
add
jnp
mov
sbbl
and
and
or
add
stos
cmp
stos
sbb
ds
jmp
je
jae
cmpsl
or
cs
cmp
sbb
insb
adc
not
pop
sbb
jb
pop
pop
mov
mov
lahf
cli
push
sub
loop
out
mov
or
add
fsubr
cwtl
sub
testl
pop
call
das
sti
pushf
daa
cmp
mov
js
mov
push
cmpsb
push
sub
mov
add
andl
cmp
mov
lret
or
add
mov
js
test
pop
fstpl
sar
test
std
cltd
jno
mov
insb
push
aas
fnstcw
mov
out
cli
add
mov
and
arpl
dec
xor
test
pushf
subb
ss
pop
fcmove
mov
mov
loop
fidivrl
push
ret
lock
daa
outsb
icebp
push
pop
leave
sub
movsb
rcll
lods
fs
cmpsb
and
xor
mov
ss
test
mull
inc
mov
aas
mov
xchg
or
dec
xchg
cmp
ss
loop
add
mov
or
test
pop
enter
xchg
stos
in
dec
imul
shrl
pop
jp
mov
movsb
fnstsw
movsl
sub
inc
ja
daa
jb
xchg
pop
adc
dec
addr16
or
push
test
sbb
mov
cmc
imul
mov
arpl
mov
add
and
xlat
scas
mov
aaa
and
fistpl
xor
sub
mov
sub
or
shrl
sub
mov
ficoml
imul
cwtl
dec
xchg
mov
pop
mov
adc
or
js
sar
movsb
jne
je
aam
pop
mov
xor
inc
test
pop
ftst
fs
cli
add
push
add
xchg
ret
mov
add
xchg
jmp
inc
ss
lcall
pushf
push
add
push
movsb
imull
lock
movsb
nop
test
jmp
fcoms
scas
std
divb
fs
repz
xchg
jbe
and
sbbb
xchg
pop
pusha
mov
stc
lods
imul
jbe
inc
js
pusha
push
mov
jl
out
jns
dec
scas
movsb
movsl
daa
sti
mov
inc
mov
sub
sub
out
xchg
daa
cmp
lods
call
and
xchg
and
fisttps
inc
xchg
test
adc
incb
mov
mov
daa
and
dec
rcrb
std
dec
lret
jo
adc
test
data16
jle
in
adcl
xchg
and
addr16
test
je
stos
pop
sub
mov
xchg
aaa
xchg
fidivrs
push
negb
fbstp
xor
mov
daa
cs
test
cmp
js
xor
mov
pop
insb
aaa
imul
test
jl
mov
pop
pop
sub
je
push
pop
bound
inc
ja
cmp
and
mov
gs
fimull
lea
lret
lock
xchg
shrb
lods
test
xor
mov
cmp
pop
or
inc
test
insb
nop
adc
outsl
xchg
add
xchg
shlb
xchg
ljmp
inc
pop
addb
jge
push
cs
jbe
fs
add
mov
popa
sarb
mov
jb
mov
mov
inc
mov
xchg
dec
scas
xchg
mov
adc
pop
sub
and
add
aaa
or
add
ja
les
enter
mov
int3
push
loop
out
out
ss
shrb
mov
pushf
shlb
pop
imul
xor
add
sub
pop
xchg
mull
jecxz
test
jecxz
jno
in
pop
dec
and
mov
arpl
jg
xchg
adc
icebp
outsb
mov
es
sub
xor
adc
es
adc
enter
int
mov
add
addb
repz
sbb
mov
arpl
lods
dec
and
outsl
cmpsl
lahf
aam
repnz
xor
das
pushf
scas
cmp
push
out
xor
jb
das
lahf
mov
fwait
add
pcmpeqb
out
mov
rorw
mov
mov
xor
jg
cmp
pop
sahf
push
mov
push
push
xor
cli
dec
jo
vprotb
sbb
inc
std
xchg
adc
sbb
lods
push
jb
imul
stos
pop
cmp
xchg
test
xchg
gs
test
sub
mov
mov
xchg
shlb
mov
in
or
cwtl
cmp
sbb
pop
sbb
scas
cmp
and
and
imul
pusha
insb
inc
popl
sub
ficomps
popf
jnp
cltd
or
ja
sub
mov
rorl
add
lret
inc
popa
dec
sti
fwait
fs
arpl
lret
adc
int3
jo
mov
test
mov
subl
add
mov
shl
adc
pop
mov
test
lods
lret
loope
ss
mov
das
roll
in
stos
test
mov
push
pop
cld
lret
mov
movsb
mull
sbb
fistps
les
push
fistpll
imul
push
mov
adc
add
pushf
shlb
imul
std
jne
cmpsl
stos
mov
mov
pop
push
xchg
cltd
mov
sub
push
les
push
enter
sub
shl
pop
out
frstor
xchg
lret
lods
xchg
lahf
pushf
xchg
jnp
dec
adc
pushf
shll
test
fs
pop
mov
sbb
das
ja
cmp
mov
jae
movsl
pop
inc
xchg
xor
push
mov
test
sbb
adc
adc
cs
movsb
test
xor
insb
mov
mov
and
out
xor
xor
cmp
add
daa
push
jae
mov
mov
mov
stos
les
inc
dec
lahf
mov
imul
dec
pop
mov
jl
mov
adc
jge
xchg
jmp
mov
push
mov
enter
into
clc
push
ficomps
sbb
mov
inc
into
stos
sub
add
sub
lcall
stos
add
orb
daa
loopne
movsl
in
mov
jns
test
sbb
out
cmp
add
out
xor
push
imul
mov
pop
mov
ja
xchg
pushf
xor
pusha
clc
in
pop
push
xchg
test
loopne
out
inc
cli
fucomi
subl
popa
std
xor
mov
test
les
sbb
and
iret
jo
mov
leave
mov
jnp
lods
stos
push
cmp
scas
and
imul
repnz
xorb
das
mov
inc
ret
sub
mov
inc
in
loop
aas
xchg
cmp
daa
subb
push
subb
push
out
repz
out
jb
clc
mov
pusha
fdivp
or
and
sub
insb
mov
lahf
dec
and
inc
push
mov
cmpsl
sbb
xor
fwait
es
jbe
xorb
loope
lahf
sbb
jo
dec
nop
test
lods
mov
ss
push
add
shll
repnz
scas
icebp
sub
decl
sahf
push
push
in
sub
out
jnp
push
repnz
sbb
inc
mov
mov
push
xorl
jle
cwtl
lock
and
stos
xchg
mov
push
fistps
xchg
pop
push
insb
bt
inc
enter
add
inc
xchg
out
fs
fnsave
add
inc
jle
xchg
imul
pop
inc
pop
insb
in
sbb
push
push
pop
pop
mov
orb
clc
push
push
xchg
hlt
mov
test
lods
mov
test
loopne
stos
daa
jb
leave
xchg
movsb
mov
cmpsb
cwtl
jo
mov
dec
jb
mov
pop
test
lods
roll
or
dec
or
xchg
sub
pop
cmp
aas
rorb
lret
imul
inc
rcll
daa
mov
neg
push
movsb
xchg
out
int3
cmpsb
sub
lds
cld
mov
or
mov
test
mov
and
addb
xor
in
xchg
je
mov
int3
xchg
dec
xor
xor
shlb
xchg
sbb
aad
mov
sub
push
and
push
mov
push
sub
mov
daa
and
bound
fs
adc
push
fiaddl
pusha
gs
daa
inc
leave
iret
mov
jl
xor
xor
xchg
dec
dec
adcl
jmp
cmp
rcl
aas
js
jbe
in
mov
out
cmpl
xor
add
jge
ret
movsl
cs
jp
pop
pop
inc
sub
test
daa
push
test
inc
jae
mov
iret
mov
and
xor
repnz
out
sahf
scas
out
andl
inc
outsl
aas
adc
sub
sbb
je
push
sbb
imul
enter
data16
subb
nop
jo
and
loopne
mov
pusha
lret
leave
jae
jbe
sbb
xor
ret
adc
xor
scas
test
aad
xor
mov
cmp
in
nop
out
popa
cmpsb
and
out
sub
mov
movsb
dec
jno
js
call
xchg
out
je
jb
mov
mov
pop
call
mov
loop
test
mov
pusha
mov
nop
aas
popf
icebp
popf
xor
sbb
mov
dec
stos
mov
movb
test
jecxz
outsb
pop
aas
stos
filds
daa
insl
insb
xor
js
push
jbe
and
andb
clc
mov
mov
mov
mov
mov
lret
cs
sub
movsl
roll
add
fucomi
pop
lods
leave
in
imull
aam
and
xor
in
movsl
xor
sar
andl
movsb
mov
sub
jle
lods
sahf
mov
aam
stos
xor
mov
lods
loopne
test
xor
sub
sub
jb
aas
lds
mov
movsb
outsb
pushf
xchg
outsb
pop
xor
lcall
ret
ss
adc
xchg
sbb
add
jbe
scas
jmp
test
movsb
xchg
leave
mov
fwait
in
push
mov
daa
add
in
test
dec
js
jae
mov
or
pop
shlb
mov
pop
mov
dec
push
xchg
push
cwtl
rolb
pop
xchg
cld
je
leave
mov
jmp
jns
xchg
push
aaa
xor
popf
sub
out
pop
mov
cli
jg
cli
gs
out
shll
ret
mov
adc
jbe
lret
pusha
mov
inc
movsb
fistps
fsubs
dec
push
jb
mov
jecxz
mov
int3
leave
jo
lods
fldl
decl
jno
leave
mov
push
shlb
xchg
mov
in
iret
jo
adc
sti
jo
addr16
mov
ss
into
xchg
call
bound
pop
stos
mov
insb
lret
imul
iret
mov
mov
cli
xor
ret
xor
jno
sbb
mov
cmp
imul
add
shlb
pop
pop
xor
jle
inc
mov
inc
xor
andb
insb
shlb
in
add
mov
push
pop
cltd
imul
ficoms
adcb
jne
sub
fwait
xor
jmp
jnp
and
mov
mov
add
push
test
pushf
movsl
es
jmp
imul
pop
cs
push
lock
add
divb
pushf
das
mov
cli
mov
int3
jns
testb
cmp
xchg
fldlg2
jnp
dec
push
int3
bound
test
jo
mov
or
mov
pusha
lea
jl
xor
in
pop
inc
ficompl
mov
or
in
push
movsb
loop
and
outsl
push
mov
pop
lret
aaa
test
scas
lods
andb
nop
loopne
lods
icebp
xor
jo
pusha
mov
aam
xchg
push
cld
test
insb
xchg
ret
push
popf
idivb
lret
mov
and
cld
lahf
adc
sbb
je
cmp
into
jno
cmp
push
cmpsb
mov
popa
sbb
adc
fwait
mov
lods
popl
enter
outsl
inc
push
mov
add
push
push
and
out
stos
mov
mov
mov
pop
adc
pop
and
add
xchg
mov
das
sbb
mov
call
add
insb
decb
sub
movsl
leave
mov
insb
adc
fucom
mov
and
outsl
loopne
ret
popf
movsl
mov
ja
mov
sub
leave
lods
inc
stos
or
fldl
lret
int3
dec
xchg
add
cli
das
adc
mov
push
push
xchg
inc
pusha
jns
mov
adc
decl
push
sahf
aad
rclb
test
fidivrs
jmp
jecxz
test
cwtl
mov
leave
mov
negl
adc
xchg
lods
xor
adc
daa
out
lods
fidivs
jae
dec
out
jnp
mov
mov
into
pop
test
out
mov
add
js
lcall
sub
mov
test
into
movsl
inc
dec
mov
and
adc
mov
or
imul
test
movsl
sbb
xchg
ret
mov
pop
je
and
call
add
aaa
lods
push
cmp
mov
mov
scas
test
aas
cmpsl
xchg
xchg
in
test
lea
or
jae
lret
loop
jae
es
push
add
ds
xchg
and
pop
mov
imul
or
in
mov
sbb
imul
sbbb
jecxz
aam
imul
comiss
testb
fdiv
lds
insl
test
aad
or
mulb
repz
loop
in
mov
xorb
push
pop
mov
icebp
fucomi
ss
push
scas
popf
daa
mov
push
fsubrs
scas
repnz
fcomi
and
movsb
xor
gs
cmp
movsb
push
dec
je
xorl
xchg
test
mov
hlt
mov
mov
insb
mov
or
push
fdivs
mul
andb
in
xchg
cwtl
mov
mov
addl
jae
into
mov
dec
xor
cwtl
orl
pop
mov
jns
cmpsl
and
rcr
xlat
sub
add
jnp
push
pop
inc
pop
leave
xchg
adc
lods
stos
out
xor
cmp
adcl
bound
dec
sbb
push
outsl
in
push
mov
cmpsl
out
int
and
ficoms
ret
andl
gs
push
mov
jae
imul
aam
push
jne
and
sahf
dec
mov
adcl
xor
adc
mov
sub
popa
inc
xor
sbb
jno
lods
and
cmp
fdivl
jmp
cs
icebp
sub
jne
out
es
dec
inc
arpl
and
nop
aas
sahf
lcall
adc
stos
sbb
mov
mov
mov
mov
pushf
or
adc
fstpt
pop
or
mov
and
daa
fiadds
dec
imul
pop
roll
fwait
leave
jb
pushf
lcall
shrl
das
sbb
sub
push
imul
movsb
jno
sub
inc
std
lods
scas
cld
mov
fisttpl
test
jo
rcrl
xor
mov
cli
xchg
fiaddl
ret
xchg
lahf
cltd
pop
int3
stos
data16
cli
jb
test
xchg
sub
ds
cmpb
and
out
daa
test
ss
mov
test
push
out
jb
scas
mov
ds
xchg
pop
jns
pop
daa
push
push
inc
in
pop
rolb
stos
in
cltd
xchg
pop
pop
stos
fs
push
lret
mov
sub
mov
int3
test
mov
cwtl
pop
das
lock
adc
and
out
pop
xor
out
adc
rcrl
es
mov
cmp
mov
sbb
cwtl
loope
sbb
pop
ljmp
and
cmc
push
inc
pop
jns
in
movsb
pop
jns
pop
cld
xchg
addr16
jl
cmp
andl
js
inc
mov
pop
rorb
mov
push
add
insl
mov
mov
sbb
mov
adc
pushf
xchg
xchg
addr16
dec
sub
mov
xchg
mov
xor
cmp
pop
push
pop
outsb
add
mov
bound
jno
outsl
lahf
xor
test
mull
adc
movsb
ds
imul
pop
and
inc
push
xor
jmp
popa
xchg
js
aas
and
dec
dec
cmpsb
mov
sub
cmp
jnp
mov
cmp
mov
ret
add
clc
cmp
jle
pop
lock
xor
mov
push
dec
inc
add
mov
add
mov
lock
and
jb
ljmp
insb
cmp
nop
repnz
xor
mov
or
stos
xor
mov
lret
or
sub
or
jg
cmp
jge
jns
aaa
mov
outsl
mov
and
add
lock
fisttpll
fidivs
mov
mov
mov
mov
stos
rorb
repz
jecxz
repnz
or
insb
mov
es
je
xchg
faddl
xchg
pop
jle
movsl
das
loope
int3
dec
sub
outsb
insl
clc
mov
insl
mov
in
mov
xchg
jne
test
and
cwtl
or
pop
jb
lea
mov
cli
push
xchg
adc
mov
xchg
dec
add
imull
mov
sbb
imul
xchg
lahf
mov
orl
leave
and
jnp
pushf
fisubrl
xchg
cmp
loop
lcall
mov
out
sub
add
in
test
push
push
andb
dec
xchg
jp
mov
add
out
mov
xchg
addr16
int3
sub
jb
mov
pop
int3
sub
cmc
push
add
flds
movq
sub
push
inc
xchg
je
push
notb
jmp
cmp
js
xchg
mov
loope
std
xchg
in
mov
ret
adc
sub
mov
fidivs
arpl
icebp
pop
lea
xorb
mov
cld
and
data16
div
loope
popl
mull
test
lret
cld
inc
stos
pop
out
push
aas
pop
adc
in
jns
pop
repz
lods
loop
add
imul
sbb
int3
imull
xor
dec
sub
frstor
repz
fcompl
and
out
sahf
jl
sub
pop
loope
loop
xchg
fwait
mov
test
decl
push
fwait
jb
adc
mov
inc
xlat
sahf
mov
pop
js
insl
outsb
push
lods
inc
pop
push
push
or
xor
push
ret
mov
push
and
inc
mov
in
jecxz
xchg
mov
pop
cmp
or
mov
adc
cmp
jp
mov
adc
jb
imul
enter
imul
and
fdivrs
mov
fwait
pop
insl
cmc
loop
cmc
push
pop
jae
jbe
inc
scas
mov
nop
nop
in
lret
scas
mov
cs
mov
inc
ja
ret
aaa
xchg
arpl
push
xor
leave
test
inc
rcll
test
in
sub
push
pop
cmc
inc
bound
adc
pop
rolb
cs
xchg
test
outsb
push
pop
aam
repz
jb
jecxz
sub
inc
sbb
xor
or
pop
cwtl
xor
int3
jge
mov
inc
or
adc
test
rcll
js
jb
mov
push
aad
ret
push
xor
in
xor
cwtl
lret
jle
push
xchg
shrb
scas
stc
mov
sbb
dec
in
sub
aas
push
or
inc
cmp
clc
pushf
aam
xor
sti
aad
sbb
insb
xchg
fbld
pop
fbstp
dec
mov
inc
lea
mov
cmc
into
jp
test
pop
mov
out
mov
mov
out
push
push
jb
aaa
inc
movsb
jmp
or
pusha
aas
mov
and
xchg
cli
insb
pop
and
sbb
loopne
mov
lods
movsl
sub
inc
inc
in
pop
and
ds
hlt
imul
adc
and
outsl
enter
cs
push
xchg
scas
lods
lret
leave
xchg
mov
jae
mov
and
bound
or
pop
fcoml
aam
dec
jae
jnp
push
mov
mov
movsb
in
sub
mov
mov
inc
movsl
sbb
jbe
insb
cmp
push
fstp
jmp
cld
test
icebp
notb
jbe
hlt
lods
test
cmpps
pop
ds
test
sub
fdivrs
mov
mov
xor
add
lret
cli
rclb
mov
mov
cmpsb
cld
in
cmp
mov
xchg
or
adc
jmp
xlat
xor
jo
repz
ja
inc
jo
sbbb
xlat
mov
adcl
dec
mov
loope
lret
push
in
inc
lods
pop
jae
xchg
cmp
inc
nop
xchg
sub
adcb
fwait
jb
pop
mov
mov
lahf
add
adc
in
lods
xor
xchg
dec
inc
fildl
inc
mov
pop
rcrb
notl
add
insl
mov
pop
jp
pop
in
push
add
or
pop
dec
cmp
lods
xchg
shl
inc
bound
add
dec
jae
sbb
js
out
xchg
jmp
addr16
jge
les
lret
mov
add
test
and
pop
ret
lret
push
sub
and
mov
lods
cld
sub
cs
aam
mov
movsl
mov
outsl
fsubr
and
mov
insb
pusha
addl
push
and
mov
arpl
lods
in
xor
cwtl
rolb
test
jmp
mov
int
and
adc
lods
lea
fs
dec
push
movsb
test
and
jo
stos
push
fmuls
notb
xchg
mov
stos
movl
cmc
dec
cltd
je
cltd
and
pop
pop
inc
jo
mov
lea
sub
out
popf
xchg
jo
test
shlb
bnd
stc
iret
xchg
xor
rclb
imul
rorb
inc
mov
test
es
lock
and
pop
aas
xor
or
sbb
repnz
xor
test
inc
cmpsb
cld
mov
ficomps
pop
add
add
stc
lahf
outsb
push
adc
mov
mov
pushf
xor
mov
addr16
sub
xchg
push
inc
cmc
inc
mov
cmpsb
adc
mov
adc
cmpsl
pop
daa
test
add
pop
fs
xor
outsl
mov
movsb
inc
mov
aad
aaa
fisubs
add
add
sub
xlat
xchg
test
dec
adc
pop
pop
adc
repz
test
xor
movsl
out
repnz
out
mov
jns
ret
mov
ss
jl
dec
insb
mov
xor
cli
push
inc
fmull
test
add
push
jb
pop
aam
adcb
les
repnz
jae
imulb
or
std
into
ja
push
faddl
in
push
daa
xchg
ret
imul
adc
xchg
aas
fs
lret
push
daa
jp
loope
aas
movsl
int3
ljmp
loope
xchg
mov
or
cmpsb
adc
test
mov
ds
xor
lods
and
mov
cs
or
xchg
stos
fucom
mov
xchg
push
mov
je
clc
call
cmp
add
andb
mov
jo
or
mov
cli
xor
popf
mov
or
mov
dec
mov
inc
insb
mov
inc
mov
xchg
jmp
stc
dec
xchg
xor
fsubl
mov
stos
sbb
push
or
inc
lret
push
add
sub
inc
ret
mov
addr16
fdivl
pop
icebp
shlb
or
insb
and
add
gs
jl
ss
jb
daa
inc
test
mov
pop
pop
imul
dec
xchg
mov
aam
sbb
fcmovnbe
pop
movsb
gs
push
out
mov
dec
push
push
pop
xchg
dec
std
push
popa
sbb
jno
mov
push
outsb
cmpsl
jmp
in
jns
ret
lea
data16
and
scas
xor
push
test
add
push
cmpsb
movsb
mov
push
aam
pop
mov
mov
repz
insb
xchg
jns
mov
das
mov
test
das
sub
lds
xor
lock
push
jns
mov
push
xchg
add
loop
sub
dec
pop
dec
popf
sub
repnz
xor
mov
mov
cld
pop
jg
pop
popa
adc
mov
sbb
jle
stos
mov
jns
inc
jno
mov
sbb
repnz
in
imul
fndisi(8087
lods
xor
pop
pop
lcall
mov
mov
xor
stos
mov
xor
fs
mov
pop
adc
cmp
and
jl
inc
stos
fdivrl
and
add
gs
cmp
or
cmp
ss
jns
stos
scas
orl
and
cmpsl
sub
jle
lcall
xor
cmp
push
fdiv
call
pop
xchg
pop
cmpl
lret
xchg
cmp
sbb
loop
ljmp
xchg
bnd
pop
mov
xor
in
les
fisttpl
pusha
jle
pop
xor
mov
mov
lods
mov
push
or
push
mov
rcrb
mov
pop
mov
xor
fs
sub
inc
xrelease
test
aam
loop
cmp
mov
add
adc
pusha
lcall
sub
je
bound
aaa
lret
xchg
daa
andb
arpl
adc
inc
je
inc
das
addr16
fsubl
mov
or
out
push
push
lods
iret
xchg
lret
test
mov
pop
cmpb
inc
mov
lea
outsl
inc
dec
xchg
nop
pop
pop
ja
lods
mov
cmp
sub
imul
lds
push
pushf
jmp
leave
out
repz
js
mov
lods
sbb
mov
rclb
and
or
popf
jb
mov
lret
ret
outsb
movsb
es
incb
jmp
int
rorb
inc
fs
pusha
jle
lods
lea
cmp
xchg
inc
insl
pop
xor
sub
jbe
icebp
addr16
ds
sub
lods
cmp
ds
mov
loope
dec
cmp
jge
aas
in
icebp
dec
sub
scas
cmpsb
dec
pop
jb
xor
lods
dec
xor
dec
shlb
mov
pop
and
mov
mov
xchg
movsb
outsb
bound
jle
das
cmpl
lret
mov
push
jb
aad
clc
mov
rorb
fxtract
out
aad
jle
adcb
icebp
sub
lods
mov
mov
pop
mov
xchg
or
and
test
mov
data16
rep
fisttpll
movb
mov
mov
jns
nop
cli
enter
pop
clc
setnp
les
lret
cs
outsl
les
jge
repnz
adc
push
jg
mov
sti
jb
cmpsl
fdivrl
mov
adc
aas
stos
addr16
pop
xchg
sbb
inc
sti
mov
into
jb
data16
movsl
aaa
fildll
xchg
push
hlt
jo
jns
lds
pusha
mov
je
dec
mov
stc
xchg
clc
cmp
cmp
ljmp
loope
cmp
sub
cwtl
mov
stos
or
fwait
mov
xchg
cmp
inc
push
add
pushf
mov
xchg
es
leave
outsb
mov
ret
ja
cmp
je
insl
shld
sub
stos
dec
pop
aam
aam
mov
mov
xor
addr16
xor
mov
inc
test
mov
sahf
and
cmpsl
xor
lret
dec
in
mov
lcall
pushf
leave
jl
pushl
ror
lcall
mov
xchg
aaa
add
loope
add
ds
pop
arpl
sahf
xor
daa
mov
loopne
je
jbe
xor
fisubrl
call
xor
mov
mov
or
mov
js
jne
sub
mov
mov
ficomps
push
push
cmp
sub
pop
xor
aam
das
fnstcw
in
mov
les
int3
jmp
js
mov
jg
pop
pop
cs
cwtl
cld
pop
roll
pop
mov
leave
push
jns
or
mov
mov
pop
out
cli
movsl
xchg
mov
imul
js
mov
sbb
sbb
lcall
cmp
loopne
bound
mov
cmpsb
xchg
xor
adcl
mov
popf
sti
pusha
xchg
mov
fiadds
cs
repz
add
les
orb
and
outsl
repnz
arpl
das
mov
cmpsb
sub
xor
mov
lret
fcmovb
iret
loopne
mov
jle
das
sbb
and
or
pop
push
adc
mov
or
inc
inc
push
mov
adc
sbb
mov
mov
int3
mov
dec
mov
sbb
les
and
movsb
cwtl
std
imul
cltd
jno
xchg
test
mov
les
jl
insb
ret
data16
mov
mov
les
jge
mov
in
js
cmpsb
mov
lret
add
mov
jl
outsb
mov
pop
jle
and
scas
in
mov
ds
mov
or
fiadds
lods
mov
dec
push
mov
das
sub
fwait
nop
pop
mov
cwtl
mov
jp
icebp
je
sub
pusha
jbe
mov
pop
scas
fimuls
sub
sub
js
xchg
adc
mov
sahf
mov
pop
dec
test
cltd
mov
sub
pop
jl
scas
add
mov
movsl
add
mov
subl
aas
xchg
xor
pop
xchg
outsl
and
call
cmp
fcoms
xchg
add
sub
adc
dec
aam
pusha
scas
xchg
int3
mov
cmp
hlt
sti
in
in
mov
cwtl
jno
sub
pusha
insl
pushf
xlat
xchg
ss
mov
cli
mov
inc
mov
imul
int
pop
fistl
mov
imul
inc
or
pop
mov
cmp
sbb
into
data16
xchg
repz
push
mov
outsb
or
leave
push
jmp
mov
or
jno
je
add
push
adcb
pop
xor
lcall
sarb
ret
sbb
icebp
daa
jo
jo
mov
addr16
ret
cmp
mov
sub
pop
mov
mov
inc
pushf
outsl
push
mov
mov
test
cmp
pop
and
xor
enter
push
arpl
out
adc
rcrb
and
mov
push
je
hlt
sub
pushf
movsb
sub
adc
pop
inc
out
dec
lret
leave
andl
inc
mov
xchg
jl
jecxz
movsl
xor
fistps
mov
mov
xor
pop
mov
xchg
jno
add
and
push
push
cli
int
out
and
sbb
ss
mov
mov
xrelease
insl
sub
mov
lret
sahf
mov
mov
inc
popa
mov
cmpsb
test
mov
sbb
adc
sbb
dec
adc
inc
mov
insl
or
sahf
addr16
setnp
sub
stos
mull
cltd
xchg
or
push
and
and
stos
sub
lock
mov
stos
fs
test
mov
mov
inc
shll
xor
push
and
sbb
clc
lds
aam
imul
pop
into
xchg
xor
adcl
xlat
sbb
jl
inc
mulb
lods
xchg
stos
pop
and
in
stos
xchg
xor
inc
xchg
inc
movsb
xchg
mov
movsb
jae
cmp
pop
aam
mov
mov
fwait
pop
inc
mov
mov
out
cmp
cmp
mov
mov
or
add
mov
lds
jp
arpl
mov
jbe
jb
sub
pop
jl
mov
jne
xchg
push
gs
cwtl
mov
stos
lods
mov
pop
mov
fstpl
int3
dec
and
mov
dec
and
movsl
nop
mov
in
jmp
push
andb
mov
mov
sahf
sbb
mov
lret
pusha
outsl
das
and
xor
mov
je
mov
or
repnz
and
sub
fnstenv
cltd
cwtl
push
icebp
push
adc
jbe
in
inc
jae
dec
xchg
pop
mov
dec
dec
jb
imul
out
fwait
mov
imul
jb
gs
xlat
mov
mov
fwait
mov
cwtl
mov
jecxz
pop
jge
push
push
xor
lahf
fsubs
ja
mov
dec
and
lods
xchg
mulb
sub
xor
pop
stos
pop
sbb
pop
pop
pop
inc
pop
xor
jecxz
fsubrs
inc
xlat
test
int3
lahf
sarl
ficoml
rclb
and
shlb
mov
push
adc
scas
mov
movsb
jp
stos
in
lods
push
iret
and
xor
shr
mov
lds
daa
inc
je
cmp
hlt
sub
xchg
xchg
jnp
loope
shll
jecxz
test
xor
inc
add
pop
mul
js
mov
pop
ffree
mov
add
sub
fcmovb
sbb
add
adc
lods
inc
lret
or
clc
xchg
loop
test
xchg
lcall
xchg
ficoms
lret
sub
dec
pop
rcll
aam
subb
and
push
xor
and
incb
imul
inc
mov
xor
aas
sub
jns
int
imul
mov
test
mov
inc
movsl
sbb
out
mov
imul
insb
mov
sahf
cmpl
stos
lea
pusha
idiv
sub
add
add
stos
dec
inc
mov
push
ss
inc
int
mov
movsl
das
jp,pt
mov
dec
hlt
sub
mov
pushf
mov
lret
scas
enter
test
sub
pop
sub
movsb
sub
push
sub
adc
gs
in
and
mov
jmp
cmp
fs
pop
pop
ret
xchg
cs
das
mov
je
fs
rep
lods
movsl
sbb
mov
pop
insb
pop
mov
cmp
mov
ds
add
mov
std
sbb
outsb
dec
dec
inc
leave
jns
cwtl
xor
cli
mov
jmp
xchg
scas
inc
jne
adc
cmp
adc
inc
cli
add
mov
int3
out
das
sub
sub
rep
mov
lea
push
loope
sbb
mov
aas
xor
pushl
repz
xor
movsl
jno
sbb
in
pop
or
jns
std
push
roll
mov
repz
scas
mov
inc
pusha
adc
daa
mov
shl
rcrl
add
into
mov
in
mov
jae
popa
pop
pop
xchg
add
mov
xor
push
mov
add
loop
outsl
mov
and
push
es
shl
test
mov
and
ds
sub
inc
adc
ss
and
sub
nop
push
xor
cmc
lods
push
jge
add
stc
xchg
gs
aad
mov
xor
je
shll
insb
out
inc
xchg
and
enter
pop
xchg
pop
cs
mov
sbb
cmpl
xor
sbb
mov
pop
xor
and
das
jo
cwtl
pop
ficomps
sahf
jecxz
clc
arpl
test
daa
inc
stos
fs
fisubs
xchg
fnstcw
dec
add
stos
arpl
jb
sub
xchg
dec
js
mov
pop
xchg
je
testl
push
add
subb
movsl
jns
aaa
jle
in
jecxz
shlb
pushf
mov
xchg
test
xchg
jecxz
xchg
jns
in
xchg
ret
mov
xchg
sbb
and
imul
mov
leave
lock
movsl
jns
xor
clc
mov
imul
pop
xchg
jge
out
out
push
clc
or
aam
jns
aaa
xchg
mov
test
add
mov
and
scas
pushf
test
je
out
mov
ss
lcall
test
xorb
or
int3
je
sub
mov
jmp
andb
push
push
icebp
fadds
xor
stos
and
scas
movsb
xchg
outsl
imul
je
jns
hlt
cld
sub
test
jg
cmp
mov
inc
and
imul
leave
inc
cmp
sub
sub
roll
inc
mov
nop
add
xchg
pop
xor
mov
xchg
cld
sub
outsb
inc
insb
movsl
add
pop
jo
dec
xor
cwtl
mov
cmp
inc
imul
or
mov
scas
and
cmpsb
call
mov
lods
xchg
pop
aaa
addr16
daa
mov
je
scas
xchg
dec
aas
push
mov
jl
cmc
mov
xchg
add
lods
sbb
notl
seto
data16
lcall
dec
cld
jno
aas
lret
fnstcw
xchg
popf
push
mov
cwtl
imul
imull
mov
scas
stos
mov
add
mov
sbb
pop
add
sti
fmuls
xchg
mov
pushf
xor
pop
arpl
sbb
inc
dec
and
add
mov
mov
lock
insb
inc
add
mov
movsb
std
sub
push
and
stc
bnd
xor
rcrb
in
je
aad
or
adc
pop
cmp
ja
fiaddl
xor
data16
mov
sub
lods
fwait
insb
or
sub
xchg
je
inc
sahf
imul
inc
aad
sbb
push
mov
test
sarb
aam
jmp
loop
sub
mov
sbbl
je
sbb
pusha
sahf
addb
nop
inc
pop
xor
in
iret
orb
cmc
fwait
sbb
aad
test
or
das
push
ljmp
ret
mov
jp
inc
mov
pop
test
js
push
dec
mov
mov
pusha
arpl
lods
dec
imul
and
out
push
dec
testb
sub
std
xor
sub
fs
jne
xchg
push
dec
xor
push
ss
test
jne
pusha
aas
add
add
nop
sub
cli
pop
inc
xor
push
lock
loop
ret
das
inc
insb
sub
lods
pop
or
ret
test
daa
mov
jle
lea
out
jmp
sub
stos
jecxz
jle
ffreep
pop
jb
mov
or
in
push
mov
mov
cltd
fcoml
in
lods
insl
mov
mov
out
add
inc
jb
or
inc
adc
cwtl
dec
outsl
test
mov
dec
insb
jns
push
ds
sbb
push
mov
dec
push
fcoms
push
cmpsl
sbbb
mov
outsb
push
fcompl
jl
pop
icebp
pop
mov
data16
sub
mov
stc
sub
pop
dec
adc
test
or
jecxz
mov
sbb
in
les
flds
mov
lods
push
sub
test
jmp
pop
fs
pop
or
xor
nop
jns
mov
sbb
leave
out
mov
test
popf
movntps
popa
repnz
fisubrs
inc
gs
jo
popa
adc
pushf
je
arpl
imul
rorb
pop
mov
jns
fsubrs
sbb
scas
movsl
daa
mov
and
loop
and
adc
xor
out
mov
mov
daa
mov
aad
cmp
loope
pop
test
stos
dec
je
pop
les
repnz
mov
jb
mov
ret
sbb
lds
xor
ss
sbb
xchg
jl
xchg
in
xchg
and
sbb
cmp
mov
imul
cmpsb
jle
push
jmp
mov
adc
fs
sub
stc
mov
xchg
mov
adc
aaa
or
sahf
das
das
dec
push
xorb
mov
inc
xor
cmp
mov
imul
mov
aad
ss
sub
scas
and
xor
mov
aas
mov
push
xchg
mov
ss
sub
imull
mov
xchg
in
mov
jns
cmp
push
mov
xchg
movsb
jnp
jno
or
das
xchg
aaa
inc
pushf
mov
sub
scas
mov
xor
lea
sbb
in
and
in
ljmp
mov
bnd
push
dec
inc
aas
lea
je
sub
out
mov
or
add
scas
cpuid
pusha
nop
dec
pop
jge
adc
dec
sti
popf
xlat
mov
in
insb
ficomps
ss
cmp
fsubrl
mov
cmp
sub
inc
scas
orb
xlat
inc
mov
mov
cmp
movsl
add
aam
ja
xchg
in
mov
cmpsb
shlb
jl
lret
sbb
and
andl
sbb
pop
jb
xchg
inc
mov
fwait
xor
sbb
mov
mov
dec
pop
push
or
insb
ret
loopne
daa
imul
aas
shrl
iret
insb
adc
rcll
cmp
mov
out
mov
insb
movsl
dec
leave
xor
mov
mov
adc
int3
jne
fldl
insb
inc
daa
inc
data16
int3
and
faddl
arpl
popa
mov
in
mov
int3
push
jl
outsl
test
xchg
ret
mov
sahf
jmp
mov
mov
pop
mov
sbb
loopne
dec
jne
push
push
xchg
cmp
int3
mov
fcomps
nop
pop
sub
int
mov
bound
push
not
xor
addb
fwait
cmpb
sub
adc
xchg
mov
mov
mov
mov
jb
leave
mov
push
lahf
mov
arpl
int3
pop
in
push
popa
cmpsb
push
stc
push
mov
fistpll
jg
mov
and
xchg
push
stos
inc
mov
pop
and
or
push
or
mov
loopne
loopne
sub
jns
ss
pop
mov
ja
rorb
int3
push
push
pop
or
je
xor
xor
lds
lcall
mov
stos
jbe
sbb
pushf
mov
sub
fs
cmpsl
dec
movsb
neg
outsb
fs
adc
jmp
dec
orb
out
jecxz
mov
jns
jp
mov
pop
data16
push
add
mov
pop
insb
pop
sahf
and
mov
jne
cwtl
imul
pop
in
jecxz
dec
add
pop
mov
sbb
pusha
xchg
jae
inc
jnp
pop
sbb
xchg
xchg
mov
pop
fisubl
add
out
cwtl
mov
jge
push
push
cwtl
in
mov
jns
lock
and
fldl
sbb
sub
test
xor
js
mov
xchg
or
mov
mov
dec
mov
mov
sarb
cmpb
mov
mov
lahf
cwtl
xor
fisubl
lods
push
xchg
adc
aam
in
jo
jae
jnp
stc
test
jnp
xchg
mov
sub
adc
xchg
rclb
scas
andb
test
add
mov
out
int3
fcomip
test
mov
cmp
mov
xchg
divb
arpl
ret
cmp
jp
sahf
inc
xchg
pop
mov
je
jno
je
dec
inc
repz
pop
sub
xchg
in
pusha
or
jp
or
mov
es
cmpsl
sub
pop
jp
mov
xchg
pop
ds
mov
dec
es
push
sbb
andb
stos
mov
inc
sbb
idivl
jmp
aaa
mov
mov
test
out
test
outsb
repz
dec
jecxz
pop
or
stos
or
shll
shlb
stos
movsb
popa
cmp
in
lret
pop
mov
pop
mov
mov
mov
andl
clc
stc
pop
jae
test
and
jbe
aaa
cmp
and
into
cwtl
jno
insb
mov
mov
ss
daa
data16
fcmovnbe
imul
mov
xor
adc
pushf
adc
or
out
mov
rorl
pop
leave
push
nop
aam
scas
add
ss
and
sub
push
out
xor
xchg
lods
js
sub
sbbl
sbb
andb
scas
jecxz
repz
xchg
int3
jae
xor
movsb
inc
mov
push
pushf
test
push
daa
push
aas
daa
aas
mov
mov
adc
xchg
lods
cmp
mov
mov
push
popf
loop
icebp
add
mov
or
and
ficoms
add
mov
xchg
jbe
and
stos
mov
imul
dec
push
rorl
push
pushf
xchg
fsubrl
cmpsb
daa
imul
icebp
out
faddl
jo
jp
cmp
test
add
into
xor
xchg
pop
imul
cmp
jns
out
ffreep
mov
push
mov
ret
ss
pushf
aas
mov
fs
inc
inc
push
jmp
movsb
xchg
into
cld
mov
outsb
xor
sbb
das
ljmp
je
sub
lret
xchg
repz
ja
xchg
into
sub
push
cmp
test
repnz
push
xor
mov
push
imul
xor
jmp
push
iret
inc
into
fs
into
mov
icebp
daa
dec
stos
arpl
mov
xchg
popa
mov
ret
out
add
insl
pop
arpl
pop
ss
add
add
mov
mov
lret
pop
pop
rcl
push
pop
and
cmpl
jo
mov
pop
lods
je
scas
sub
in
pop
dec
cmc
outsb
push
sub
sbb
popf
hlt
ss
stos
xchg
pop
mov
outsb
cmp
sub
lret
imul
adc
iret
push
xchg
xchg
aam
call
in
pop
movsb
add
rorl
adc
test
xchg
dec
sahf
mov
or
wbinvd
in
pop
out
test
es
enter
fstpl
mov
ss
out
jae
fisubrl
or
loopne
lahf
xchg
ds
sub
xchg
jp
cmp
dec
and
pop
pop
ljmp
pmaddwd
in
shlb
mov
cmc
cmp
repz
lods
aaa
sub
sbb
repnz
mov
pushf
mov
scas
mov
mov
mov
mov
pop
inc
popa
dec
cmp
sbb
inc
decl
lods
cli
adc
es
and
jecxz
fildl
out
cmp
popf
andb
push
cmp
ss
jbe
adc
mov
add
nop
lahf
mov
ljmp
push
je
jp
test
aas
out
pop
dec
imul
lds
mov
shrl
xchg
aas
sbb
pop
mov
add
mov
cmp
shll
inc
out
and
adcl
mov
mov
shlb
test
repz
jb
push
jl
cmp
mov
lret
adc
mov
imul
mov
jecxz
ljmp
jg
cmp
mov
hlt
and
sub
jmp
outsb
mov
lds
lods
fnsave
mov
shll
pop
and
mov
adc
lock
test
sbb
pop
outsb
cmp
mov
xchg
sbb
das
repz
xchg
scas
daa
insl
jg
rorb
dec
lcall
push
nop
js
cltd
fwait
sbb
jne
repnz
outsb
test
jl
loope
and
movsb
lods
mov
and
fwait
cmp
sub
movsb
test
stos
into
movsl
push
stos
aas
fsubl
or
cmp
je
sbbb
inc
jo
arpl
mov
jecxz
or
cmp
and
imul
pop
push
popf
jb
das
xchg
cld
std
mov
insb
inc
mov
adc
iret
cmp
pop
test
mov
push
pop
fnsave
int3
jmp
push
outsl
add
jl
mov
decb
xor
inc
js
shrl
mov
ret
mov
ds
bound
gs
inc
lcall
dec
andb
xchg
push
push
shl
mov
fwait
pop
ds
jo
icebp
imul
mov
sub
add
pop
or
jmp
movsl
cmc
jb
js
jg
jae
jnp
int3
cmp
mov
adc
sbb
andl
adc
mov
and
loop
dec
js
mov
mov
in
loopne
mov
movsl
sbb
rcrb
sbb
mov
inc
daa
jno
jo
fs
lret
loope
cld
insl
jae
std
cmc
xchg
xchg
inc
xchg
mov
sub
leave
cmp
jo
data16
addr16
lea
sub
inc
mov
pop
movsl
movsb
sbb
push
pop
adc
outsb
jl
sbb
xor
or
cmp
ret
xor
mov
js
ret
cmc
mov
daa
pusha
mov
sub
adc
mov
lret
xchg
subl
jecxz
add
mov
xchg
lds
test
push
fadd
notb
jbe
dec
cld
lods
sbb
push
add
daa
xorb
inc
aas
sub
jl
ret
outsb
jp
mov
mov
mov
mov
mov
leave
popa
imul
xchg
jno
shlb
in
scas
popa
inc
push
xchg
insl
and
rorl
movsb
testl
jl
jb
js
iret
ja
push
arpl
or
mov
dec
das
fs
or
mov
mov
lods
cmp
je
stos
adc
xchg
mov
lods
jno
dec
orb
div
dec
push
and
jne
movsl
mov
dec
jae
xchg
and
mov
out
ret
or
in
scas
je
push
mov
sti
mov
jno
xchg
aam
ret
xor
push
jle
int3
sbb
and
arpl
xchg
stc
lcall
mov
loopne
cmp
mov
movsb
dec
ds
add
adc
mov
out
jne
je
dec
pop
test
js
mulb
movsb
scas
mov
sub
fistpl
push
int
mov
cli
sub
mov
xor
pop
inc
mov
pushf
jp
addl
in
inc
in
ljmp
cwtl
jbe
rolb
mov
add
and
lea
push
les
mov
jecxz
add
push
cs
lcall
icebp
add
xor
mov
sbb
cwtl
sbb
scas
test
xchg
mov
dec
fsts
sbb
cmc
enter
movsb
xor
dec
jno
pop
inc
arpl
adc
movsb
jns
icebp
stos
jno
or
subb
mov
bnd
sub
sub
rolb
sarl
dec
or
pop
dec
ljmp
orb
es
or
push
scas
mov
jne
push
mov
mov
fldenv
push
test
inc
fcompl
out
lock
mov
add
andb
push
xchg
sub
fisttpl
scas
sub
mov
mov
mov
stos
xchg
xchg
hlt
mov
or
xchg
sub
push
mov
adc
xchg
adc
lret
icebp
pop
adc
xchg
out
adc
das
repz
stos
mov
and
xor
cmp
pop
cmp
in
mov
lods
enter
outsb
push
or
xchg
jne
pop
pop
and
lret
mov
or
mov
les
push
pusha
cwtl
test
or
adc
mov
xchg
and
xor
pop
mov
mov
jae
mov
mov
hlt
scas
xor
sbb
push
movsb
rolb
and
sahf
xlat
cmp
xor
sarl
push
fxch
rcll
mov
mov
sub
xchg
cmp
insb
call
aam
mov
pop
dec
nop
cmpsb
mov
mov
int
int3
dec
adc
clc
data16
dec
mov
out
stos
fcoml
or
push
outsl
adc
adc
sbb
xchg
pushf
subb
fsts
and
and
nop
and
js
xchg
mov
push
fdivrl
inc
test
loope
subb
pushf
ja
divb
int3
jns
call
cs
shl
pusha
ret
sbb
inc
test
and
push
mov
insl
movsl
push
shrl
ljmp
mov
sub
xor
arpl
test
and
xlat
push
aad
lahf
int
imul
pop
dec
pop
mov
icebp
xchg
in
xchg
test
movsb
xchg
icebp
mov
add
mov
les
out
push
pop
mov
into
sub
mov
fisttps
in
subb
mov
cld
into
jl
xor
enter
push
addb
inc
jne
sbb
add
push
loop
daa
push
and
iret
mov
bound
inc
dec
sub
test
cltd
fs
mov
xchg
xchg
test
mov
pushf
xorb
mov
xchg
or
leave
fisubs
inc
jp
add
sub
cmp
fidivl
sar
cmpsl
fistl
scas
hlt
fwait
aam
pushl
stos
lret
ds
mov
jmp
pop
xchg
mov
pop
mov
sbb
sbb
mov
popf
mov
repz
jmp
scas
or
test
test
jecxz
and
and
push
add
test
jo
rcr
pop
mov
cli
in
leave
subb
arpl
pop
sub
dec
cmp
sahf
xchg
mov
add
sbb
call
sbb
lcall
mov
mov
fisubl
fwait
mov
test
scas
mov
push
push
stos
push
push
lods
cltd
pop
fisubl
xchg
scas
or
mov
pop
xor
sarl
mov
ret
sbbb
lds
sub
cli
insb
and
int3
cwtl
leave
das
mov
mov
aam
or
mov
mov
xchg
mov
enter
cwtl
popf
iret
and
sbb
mov
pop
inc
mov
mov
fs
and
xor
cwtl
pop
mov
push
gs
test
nop
pop
sub
out
xor
xchg
inc
and
xor
lods
mov
arpl
and
sub
insb
out
nop
movsl
lea
pop
leave
movsb
jmp
xor
xchg
mov
mov
subb
je
mov
scas
mov
mov
scas
scas
xor
lret
clc
test
mov
mov
jmp
test
loopne
cmc
in
scas
jmp
and
shl
mov
leave
add
push
aas
and
pushf
mov
cmp
lahf
jb
dec
dec
cmpsl
cwtl
std
loopne
dec
fs
fsubs
xchg
aad
xor
push
ljmp
nop
fistl
xor
jmp
shll
jmp
jbe
jns
nop
jecxz
mov
fiadds
adcb
lcall
sbb
or
lahf
subl
mov
sub
add
fwait
pop
lods
idivb
mov
mov
jno
sbb
pop
xor
insb
ret
push
and
mov
mov
fwait
decb
andl
orl
mov
cmp
sti
push
or
imul
sbb
inc
pop
test
push
add
pop
mov
nop
push
mov
push
sub
xor
and
jmp
sbbb
push
and
push
pusha
inc
stos
or
in
cmp
orb
fsubrl
push
xchg
scas
je
push
dec
and
subb
jno
lret
stc
cmpb
push
add
jg
sahf
dec
xchg
inc
jae
bt
mov
mov
adc
or
xchg
jle
xchg
hlt
lcall
xchg
lcall
test
aas
push
inc
fwait
shrl
or
mov
lea
jnp
sbb
pop
dec
mov
xchg
popa
andb
sub
cmp
std
fs
mov
adc
add
cmpsb
lea
pop
adc
xchg
cwtl
and
pop
mov
lahf
cmpsl
sbb
jno
cmp
or
sub
add
lret
or
loope
aaa
mov
mov
ds
or
nop
xchg
mov
movsb
fisubrs
xor
shlb
add
adc
mov
ret
cmpsb
fidivrs
adc
push
mov
cmc
xor
jmp
cmp
xor
shl
add
pop
jo
jle
in
and
lods
jle
outsb
jnp
std
mov
xor
aaa
in
sub
mov
push
pop
mov
cmp
and
inc
mov
sbb
sbb
or
jbe
mov
xchg
dec
pop
jecxz
outsb
mov
in
pop
xchg
adc
pusha
push
rcll
bound
pop
or
divps
xor
pop
pop
mov
xor
sub
mov
adc
in
mov
repz
push
in
dec
jno
sub
mov
mov
insb
insl
or
push
pop
scas
int3
mov
js
adc
int3
test
adc
movsb
pop
scas
int3
les
inc
ret
mov
or
lods
mov
sub
int
mov
das
jp
mov
or
inc
adc
inc
adc
push
or
popa
sti
dec
sbb
cmpsl
fs
xchg
fcoms
cli
nop
pushf
lock
popf
aas
stos
daa
push
in
mov
xor
pop
in
sbb
mov
adc
mov
pushf
test
inc
mov
stos
cwtl
push
test
les
fnstcw
lcall
sub
aam
mov
je
sbb
and
pop
mov
daa
cwtl
imul
lods
push
cmp
gs
xchg
movsb
test
repz
jecxz
daa
mov
sub
adc
mov
inc
mov
xor
mov
std
mov
ljmp
test
cltd
mov
mov
mov
and
mov
loop
enter
lret
dec
sub
out
lret
or
mov
scas
mov
aas
pushf
sub
lcall
push
xchg
pushf
jecxz
pop
call
xor
dec
test
rcrl
xorl
fnsave
flds
xor
pop
mov
aam
movsb
xchg
movsb
stos
daa
and
add
nop
xchg
and
les
inc
gs
push
jb
loop
rcr
movsl
and
jo
add
test
mov
xchg
mov
xlat
into
jne
lock
push
pop
cwtl
inc
hlt
push
rcll
je
mov
xor
pushf
xchg
aad
shll
mov
pop
jbe
mov
cmpsb
inc
ds
imul
mov
imul
and
scas
cmp
push
in
push
pop
cmp
mov
loopne
cs
lahf
adc
ror
loop
push
aaa
and
cmc
inc
xor
nop
rcll
cmpsb
lds
add
or
mov
jbe
scas
sbb
xlat
lahf
or
cmp
bound
fwait
xlat
cltd
fisubs
cmp
dec
or
and
popf
je
aas
mov
mov
ljmp
ret
mov
addl
stos
loop
mov
rcrl
out
cmpsb
outsb
test
pop
adc
push
dec
movsb
xor
rclb
data16
dec
pop
xor
lcall
lods
popa
das
sbb
imul
iret
mov
ja
push
xchg
lcall
mov
pop
in
pop
mov
mov
mov
cmpsl
xchg
mov
mov
ljmp
pop
repnz
das
mov
sbb
mov
sbb
bound
push
clc
jns
mov
pop
ret
adc
lods
dec
mov
aam
jo
push
loop
pop
lds
jne
mov
loop
jl
and
pop
and
lret
push
shrb
cmpl
filds
jge
mov
aas
xchg
scas
mov
dec
add
xchg
add
add
repnz
cmpsl
scas
stos
stos
sub
into
dec
mov
xchg
lcall
push
daa
jns
daa
pop
add
rcrb
cmp
dec
mov
test
mov
repnz
jae
mov
mov
aad
mov
cmp
dec
arpl
lret
orb
mov
insb
and
je
fisubl
movsl
or
dec
cwtl
lock
push
fimull
mov
add
lods
jae
jp
push
mov
int3
adc
sub
pop
inc
xchg
js
insl
mov
xchg
and
inc
les
mov
nop
mov
adc
push
je
stos
pop
insb
in
je
ficoms
mov
sub
mov
fsubr
mov
icebp
mov
imul
imulb
lahf
mov
pushf
xor
aaa
pop
sub
adc
push
clc
pop
ljmp
in
mov
adc
adc
fs
adc
mov
mov
popa
nop
shrb
sub
js
pusha
dec
jb
pop
sub
lds
mov
push
pop
sub
dec
test
dec
pop
cmp
mov
add
es
sbb
dec
data16
test
jecxz
cmp
pop
mov
xor
int3
lahf
dec
movsl
das
mov
stos
js
jo
out
test
ss
cmp
add
xchg
sbb
insb
stos
test
xlat
lcall
mov
test
add
add
mov
xchg
test
fstpl
ss
mov
mov
mov
stos
mov
sbb
lret
repz
inc
push
loop
or
mov
cmpsl
xor
push
pushf
out
mov
mov
imul
imul
in
cmpsb
sub
lods
dec
push
aaa
and
enter
loop
jg
fsubl
in
xor
in
push
xchg
test
cwtl
leave
cmpsl
orl
bnd
leave
pop
roll
and
test
push
cmp
jnp
xlat
mov
xchg
xor
xor
pop
xchg
dec
les
inc
mov
jbe
xchg
into
xor
xor
das
and
adc
repnz
in
nop
lods
in
pop
mov
fsubl
jle
mov
or
imul
cld
cvtpi2ps
push
fwait
jmp
outsl
inc
pop
xorl
xchg
mov
xchg
outsb
push
loop
mov
ret
pop
mov
test
movsb
push
mov
andb
mov
in
pop
rcl
push
arpl
bound
mov
fs
adc
jmp
arpl
mov
bound
push
inc
lods
lret
call
iret
scas
mov
cs
fwait
divb
pop
dec
sub
adc
inc
push
imul
jl
sbb
dec
icebp
push
adc
mov
xor
push
fcmovnu
push
mov
int3
ds
add
aam
inc
andb
das
call
hlt
mov
aas
pushf
pusha
cmpsb
inc
mov
mov
daa
pop
inc
int3
sub
mov
pop
incb
inc
lods
out
sub
inc
xor
mov
cmp
ret
test
push
push
mov
int
stos
inc
mov
jmp
insb
jo
xchg
shlb
xchg
idivl
testl
int3
popl
fsubrp
push
ss
pop
std
call
mov
mov
inc
pop
and
mov
mov
jo
subb
popf
mov
pop
mov
addl
shll
inc
jmp
arpl
rorl
xchg
push
mov
bound
popa
arpl
xchg
adc
pop
int3
mov
pop
push
ret
and
pop
add
pop
add
xchg
call
jns
mov
inc
push
pushf
insb
in
mov
cmc
jmp
xchg
dec
pop
dec
mov
dec
loope
or
int3
imul
nop
aas
popf
jne
insl
mov
bound
pusha
or
mov
push
dec
test
notl
adc
add
add
std
pop
cmc
daa
sub
je
repz
mov
das
jmp
in
mov
xchg
cli
in
daa
pop
mov
jecxz
sbb
sbb
pop
mov
inc
scas
cld
mov
jne
push
fdivl
stc
enter
loop
outsl
loop
jns
loop
lea
ljmp
cwtl
mov
xchg
pusha
xor
xchg
inc
lock
mov
xchg
lods
xor
push
push
cmpb
lret
mov
imul
add
push
sub
ss
xchg
popa
sub
jns
sbb
and
mov
fisttpl
push
inc
lcall
push
mov
push
in
in
mov
dec
test
dec
pop
or
xor
inc
stos
xor
xchg
cmp
cmp
fwait
cmc
add
lcall
testl
ds
pop
sub
push
sbb
ja
xchg
insl
adc
rclb
insb
push
pop
xchg
outsl
flds
adc
dec
pop
mov
mov
nop
insl
test
dec
aas
ljmp
lret
pop
cmc
aaa
test
xor
leave
scas
iret
inc
inc
stos
push
mov
ficomps
mov
jge
xchg
mov
int3
mov
out
es
mov
cmpsl
xor
mov
mov
xchg
pushf
xor
inc
jg
popa
outsl
outsb
or
adcb
mov
push
sbb
add
cmp
push
mov
sub
cmp
push
orb
adcb
inc
sub
test
push
loop
sub
adc
add
movsl
xor
jl
mov
fsubrs
mov
mov
test
iret
mulb
popa
inc
mov
add
repnz
mov
pushl
int3
hlt
sbb
fimull
push
mov
mov
lds
divl
push
mov
ss
leave
pop
mov
inc
test
arpl
subl
dec
xor
sbbb
aas
nop
cmc
pusha
imul
in
sub
mov
loopne
mov
ret
dec
dec
xor
mov
bound
rcrb
imul
mov
and
push
mov
cmp
dec
int3
pushl
and
or
adc
in
mov
jns
mov
gs
cwtl
fstl
sub
ss
fisubl
shrl
ret
fcomp
cmpsb
loop
and
jo
sub
cwtl
push
aad
insb
shll
sbb
sti
jp
push
xor
add
mov
adc
pushf
aas
popa
pop
inc
push
clc
xchg
lods
cmp
shlb
in
stos
xchg
and
int3
xor
jne
test
adc
mov
xchg
jge
xchg
push
jl
aam
ja
int3
lods
insb
ret
jae
xchg
mov
js
push
movsb
inc
imull
adc
cwtl
int3
pop
mov
das
inc
pop
test
xchg
mov
jb
testl
mov
arpl
xchg
sub
push
test
jl
imul
int3
movsb
adc
arpl
test
in
mov
js
fsubl
aaa
enter
arpl
std
inc
pop
gs
call
mov
or
insb
xor
out
pop
aas
data16
orl
shl
scas
rcrb
in
scas
rclb
das
in
call
ret
jmp
hlt
and
sbb
mov
jbe
test
sbb
jb
pop
stos
aam
mov
fstpt
and
jo
movsb
mov
push
insb
lret
sub
arpl
outsb
push
testb
push
xchg
push
jl
js
or
sti
mov
pop
fs
adc
sbb
adc
stc
lods
lea
mov
lret
jo
idivl
adc
test
push
movsb
cmp
jg
sub
and
sub
in
xchg
bnd
test
push
sub
mov
and
bound
xor
ret
xorb
jbe
ret
push
or
movsb
testb
cmp
outsl
pusha
fdivrl
mov
xchg
fwait
pushf
jne
xchg
rorl
push
or
iret
test
or
jmp
add
xor
mov
jns
stos
inc
dec
sub
push
pop
repz
mov
sub
dec
dec
das
mov
scas
icebp
aas
scas
add
and
push
inc
in
popf
add
pop
repnz
mov
add
test
push
mov
pop
push
dec
cltd
inc
data16
and
sub
bound
mov
dec
cmp
xchg
sbb
mov
iret
stos
lret
lods
mov
cmp
xchg
lds
rorl
push
mov
or
jno
movsb
pop
ss
gs
dec
les
mov
xor
mov
icebp
push
mov
popf
mov
cmpsb
daa
addr16
dec
dec
xchg
xchg
jle
jns
out
mov
push
adc
sub
daa
fs
jecxz
cmpsl
mov
loopne
push
fsub
pusha
mov
lods
ficoms
sahf
movsl
sub
lods
push
jo
xchg
cmp
faddl
jns
jmp
daa
pop
out
cs
outsb
mov
or
lret
sub
aad
pop
jno
pop
in
jne
mov
lret
mov
outsb
mov
mov
int3
test
out
add
or
mov
and
or
jp
sub
sbb
and
mov
adc
popf
movsb
or
das
lock
shl
sub
cmp
in
subb
jmp
adc
shlb
dec
jge
or
stc
daa
imul
mov
enter
subl
test
sub
and
or
pop
and
fadd
test
xor
mov
xchg
sub
mov
test
lods
mov
cmp
icebp
test
movsb
int3
repnz
lods
adcl
loope
add
test
mov
dec
push
aam
mov
aad
popf
xchg
pop
shl
pop
test
mov
jnp
stos
daa
mov
push
inc
lea
int3
jl
movsl
push
sbb
je
xchg
jle
sub
push
jge
js
movsb
jecxz
xchg
mov
lret
sub
loope
clc
mov
or
fmuls
lea
ffree
xlat
dec
xchg
pop
mov
hlt
push
das
inc
cmc
scas
loope
cltd
aam
in
scas
sub
dec
mov
inc
dec
ficomps
sbb
xor
test
les
lcall
adc
gs
mov
fisttps
sub
xchg
pop
cmp
xchg
leave
mov
in
dec
mov
fs
mov
and
bnd
dec
arpl
jo
add
sub
pop
adc
mov
addl
ja
je
inc
aad
mov
jo
jo
dec
stos
jl
sti
cmp
je
xor
sbb
pop
mov
push
scas
cmc
enter
add
xorl
adc
mov
cltd
and
in
xor
loop
jne
pusha
fbstp
ljmp
push
testl
xor
xor
add
xchg
fwait
int3
fs
mov
dec
adc
js
stos
mov
mov
mov
xchg
push
aaa
nop
jb
scas
sub
int3
fwait
jnp
sub
scas
push
push
lea
push
ljmp
outsl
stos
mov
adc
cmp
pop
ljmp
jmp
sub
int3
clc
repnz
push
int3
sbb
cltd
xchg
mov
fwait
and
clc
push
xchg
int3
dec
pusha
movsb
dec
int3
jb
adc
push
outsb
mov
and
dec
jae
ja
stos
cmp
sub
dec
xor
xchg
nop
adc
and
cld
pop
mov
mov
lea
jg
xor
or
jo
sti
jae
test
call
sub
outsb
outsl
jae
cmp
es
stc
xchg
or
mov
xlat
icebp
pop
push
data16
or
jae
ja
arpl
add
adc
pop
cmp
mov
lcall
sub
jbe
push
push
push
sarl
insb
inc
jl
xor
nop
pop
sti
cmp
cmp
or
adc
hlt
sti
repz
push
lea
bound
sbb
daa
js
xchg
cmp
mov
in
and
jl
mov
mov
inc
popa
fisubrl
mov
ret
out
xor
cmp
addl
jmp
jp
into
pushf
test
stos
arpl
push
push
mov
test
adc
and
inc
subl
xchg
mov
fwait
pushf
add
cmp
adc
out
cltd
adc
in
add
shlb
std
in
leave
pop
push
xor
pop
mov
lods
daa
test
jecxz
je
jp
push
push
cmc
xchg
and
dec
mov
movsb
mov
jb
inc
xchg
psrlq
stos
cli
xchg
pop
push
xchg
ffree
test
pop
inc
outsl
mov
pop
adc
dec
js
adc
and
xchg
into
jo
lods
or
fwait
adc
dec
mov
sub
bound
out
cmc
mov
out
int3
roll
pop
stos
ss
cmp
stos
cli
lods
ljmp
out
int3
out
jns
mov
jno
xchg
jbe
mov
or
mov
pop
add
mov
or
mov
xor
sub
mov
mov
shrl
or
sbb
movsl
sahf
cmp
sbb
add
cmpsl
movsb
icebp
pop
xchg
fildl
or
push
rcll
mul
movsb
dec
je
repnz
add
xchg
das
pop
push
cmp
pop
add
or
icebp
and
rcll
xor
stos
dec
ja
inc
cld
mov
dec
in
sub
inc
or
and
in
popf
push
mov
push
andl
mov
jo
or
mov
mov
movsl
sarb
sbb
mov
push
sbb
or
push
jmp
popf
mov
dec
cmp
and
mov
push
push
add
scas
sub
adc
pop
lods
leave
test
ret
mov
int3
test
int
mov
sub
cmp
pop
js
pop
push
add
cwtl
outsl
fs
xor
jo
inc
mov
cmpsb
adc
out
push
xor
mov
xor
cmc
cmp
jns
aas
lods
adc
in
mov
scas
pop
test
mov
fwait
andb
movsl
test
sub
dec
mov
xor
out
jmp
or
outsl
jo
pushf
jle
scas
dec
or
cs
test
dec
jae
pushl
shrb
popa
arpl
nop
dec
push
xchg
sub
sub
das
imul
bound
in
pop
shlb
mov
movsl
mov
je
pusha
jb
dec
sub
test
in
imul
sub
inc
das
pusha
mov
sbb
mov
out
xor
lcall
int
pop
adc
fistpll
xchg
shlb
dec
aad
push
sub
mov
int3
in
loopne
enter
mov
mov
pop
mov
fisttps
xor
shrl
xchg
movsb
lret
xchg
xorl
pop
dec
and
hlt
ja
jmp
ljmp
sbb
sahf
clc
sub
dec
push
rorl
out
stc
lock
dec
das
push
and
sub
lock
sahf
sub
mov
pop
lahf
mov
add
pop
pop
ret
orl
dec
pop
or
pushf
mov
add
rcrb
xchg
loope
or
iret
test
sub
xor
sub
dec
cmp
shl
xor
mov
pop
hlt
inc
dec
inc
addl
nop
sub
push
xbegin
xor
subl
jno
pop
iret
mov
pop
pop
push
cltd
cmp
lret
jmp
les
rep
jo
xchg
lea
cmpb
jns
xchg
frstor
pop
adc
outsb
test
dec
pop
cmp
jge
cmp
outsb
loopne
push
fidivrs
push
hlt
jnp
mov
int
pop
push
xchg
mov
lahf
sbb
cmpsl
outsl
push
xor
pop
xor
jg
pop
fs
adc
addr16
fcompl
hlt
and
fs
fcomip
sub
std
xor
push
lahf
jae
sarb
js
sbb
arpl
and
movb
push
xor
bound
ja
cs
mov
aam
push
jecxz
je
xchg
cmc
mov
cmpsl
add
das
aam
lret
jo
sub
or
pop
lcall
push
jb
mov
push
lods
jl
aaa
js
stos
cli
mov
movsb
fcoms
test
pop
cmp
mov
imul
bound
dec
push
mov
xor
das
and
adc
outsb
popa
push
pop
xlat
jns
cltd
push
aas
test
aaa
lods
or
aad
mov
test
fidivl
cmp
int3
mov
adc
iret
aas
cmpsb
loopne
jbe
lods
pop
pop
dec
lahf
mov
push
jns
inc
mov
hlt
leave
add
jbe
dec
mov
jns
cmp
stos
mov
mov
mov
cmp
push
daa
loop
xchg
arpl
ret
inc
lds
jns
data16
pop
mov
mov
jp
arpl
adc
lods
insb
push
adc
xchg
test
popa
mov
fwait
mov
push
jno
push
clc
mov
sbb
sub
sbb
pop
sahf
ja
mov
fs
inc
mov
outsb
mov
inc
mov
push
pushf
mov
mov
xchg
out
xor
loope
cld
pop
xchg
mov
mov
repz
or
jae
push
mov
lods
scas
mov
mov
push
jbe
loop
mov
repnz
insb
mov
mov
and
adc
fisubl
dec
in
mov
add
pop
and
es
ljmp
push
xchg
in
mov
sub
or
pop
jg
test
pop
insl
ucomiss
dec
movsb
idivl
mov
shl
mov
and
pushf
xor
fwait
lea
in
cmp
mov
data16
mov
mov
movsl
and
mov
ja
mov
mov
mov
lcall
test
cmc
mov
pop
inc
mov
inc
pop
dec
jmp
mov
test
and
movsb
shrb
dec
pusha
cmpsl
jns
divl
stos
icebp
loop
movsl
add
sub
mov
nop
xchg
sbb
hlt
insl
inc
mov
lds
sahf
rcrl
cmp
xor
xor
aas
aad
pop
punpckldq
fiadds
jns
movsb
xor
mov
testl
lods
ja
je
xor
pop
inc
or
cld
xchg
loop
xchg
mov
xchg
cli
cwtl
adc
mov
outsl
pushf
xchg
in
mov
and
ljmp
int3
xchg
arpl
mov
mov
jo
popf
pop
addr16
xchg
mov
jns
lea
sbb
repnz
imul
outsb
in
add
sub
loopne
mov
xor
ds
pop
arpl
mov
in
hlt
lods
inc
in
sbb
dec
cmpsl
mov
add
les
adc
outsb
insb
out
in
mov
sbb
mov
bound
add
xchg
js
push
jo
jge
and
enter
frstor
dec
or
insb
mov
push
mov
lret
push
cld
addr16
aaa
mov
lea
xchg
leave
mov
xchg
add
pop
insl
sub
bound
sub
mov
mov
push
insl
mul
adcb
lods
cmpsl
jb
imul
outsb
test
adc
jae
aas
flds
or
inc
sahf
sub
pushf
and
stos
leave
mov
fwait
je
adc
ret
adcb
lcall
insl
jl
sub
in
push
leave
mov
movsb
popa
add
data16
cmpsb
inc
movsb
lcall
xchg
andl
hlt
push
pop
gs
movsb
jo
cmp
sub
xor
xchg
aas
lods
stos
lahf
sub
push
lret
mov
mov
adc
sahf
jno
push
shl
pcmpgtd
das
sahf
std
sbb
insb
in
das
out
mov
popa
divb
sbb
rcrb
ds
mov
mov
push
mov
movsl
xor
mov
xchg
inc
addr16
sbb
sub
test
pop
mov
sub
nop
cmc
xchg
fs
pop
push
imulb
sti
std
adcb
pop
enter
pushf
rcr
xor
test
cmp
outsb
jo
je
js
mov
mov
aaa
mov
mov
andl
nop
popa
stc
push
and
pop
cmc
scas
ror
xchg
jae
xor
mov
xor
push
daa
test
push
pusha
and
mov
cmp
std
mov
leave
fbstp
fs
cmp
xchg
adc
dec
sbb
add
xchg
lods
aam
test
popa
and
movsb
hlt
cmp
sbb
sub
stos
jae
imul
testl
mov
push
or
xchg
jno
shlb
stc
mov
dec
xchg
shl
pop
cltd
xchg
mov
iret
shll
rcl
data16
js
cwtl
fsubs
insb
bound
aas
xor
int3
push
push
or
xchg
imul
adc
adc
adcb
jb
pop
adc
push
pop
jae
scas
mull
gs
insl
lcall
lods
movsb
mov
ds
mov
or
xor
mov
movsl
sub
lods
movsb
int3
xor
int
xchg
pusha
jo
mov
jo
dec
push
jno
dec
jo
cmp
out
inc
lea
fwait
out
icebp
xchg
mov
sub
and
cld
sub
in
xor
xchg
jb
outsb
in
insl
xchg
in
sub
or
xchg
js
cmp
nop
fs
mov
jb
adc
xchg
xchg
enter
stos
ret
bnd
enter
xor
mov
jno
and
jecxz
rcr
popf
and
ret
and
clc
enter
mov
cmp
inc
mov
and
lock
xchg
pushf
cmp
adc
loope
mov
xchg
sub
insb
push
and
add
xorb
pusha
mov
and
or
clc
jo
shrb
mov
xchg
nop
subb
xchg
inc
jo
sbb
or
int3
and
sub
mov
aam
mov
mov
lods
stos
lods
stos
testl
movsl
mov
mov
pushf
mov
cwtl
xchg
xchg
xchg
cmp
xchg
nop
xor
mov
xor
xchg
mov
jo
in
lret
lret
dec
xchg
rcrb
jno
test
xchg
insb
das
sub
xor
cmp
pusha
adc
arpl
or
pop
or
push
xor
pop
int3
jp
popf
and
xor
sub
mov
xchg
popf
dec
outsl
push
push
insb
test
mov
push
sub
lret
push
jnp
adc
sub
xlat
mov
int3
outsb
jnp
and
movsl
push
shlb
mov
and
inc
mov
ret
sub
inc
adc
add
or
cltd
int3
aas
dec
dec
xchg
in
movsb
hlt
push
xchg
out
lret
jns
inc
mov
jns
jns
pop
test
fimuls
push
push
sub
dec
into
push
fmull
adc
jo
mov
pop
lock
mov
pop
cmp
int3
rcrb
dec
mov
pop
stos
cmp
jmp
dec
mov
mov
jl
in
xchg
int3
pop
or
in
scas
push
xor
cwtl
sub
mov
mov
loopne
mov
push
lock
fsubrl
add
mov
fsubrs
aam
insl
pop
in
scas
jo
push
je
outsb
scas
xchg
int3
jne
in
lods
lock
jb
xchg
les
shlb
in
mov
sub
xchg
jl
mov
cwtl
int
cwtl
jl
push
jmp
es
mov
pop
and
sub
ret
rclb
xchg
insb
lret
adc
xor
pushf
xchg
popf
mov
inc
jb
movsb
ret
pop
not
movsb
fstpl
push
mov
push
lcall
stos
jo
add
jmp
xor
push
xchg
sub
fisubrl
shll
imul
stc
shll
insl
insb
push
and
jecxz
leave
mov
nop
jb
pop
and
xchg
and
adc
cmc
gs
in
jnp
int3
mov
jne
addr16
les
jg
mov
sub
dec
mov
and
cmp
in
xchg
lods
shl
clc
pop
and
push
movsl
pop
mov
mov
daa
addr16
lds
adc
ss
std
and
aaa
idivl
arpl
and
sub
push
int3
int3
inc
js
fistps
test
bound
int3
faddl
xor
inc
jnp
pop
vpunpckhwd
and
outsl
lods
and
scas
arpl
lock
sub
stos
bound
adc
push
push
xchg
in
and
movsl
outsl
movsb
sub
repz
dec
sub
inc
add
mov
popf
cld
fldcw
out
cmc
xchg
pusha
mov
enter
ds
insb
cmc
dec
mov
push
jno
mov
push
add
insb
rcr
mov
mov
enter
mov
in
in
pop
pop
push
negb
jb
lcall
mov
ret
stc
dec
or
cs
xor
lret
loope
sti
fwait
subl
int3
daa
mov
insb
mov
pop
pusha
mov
popf
cmc
shrl
push
je
and
sub
xlat
sbb
push
cmp
xor
das
mov
scas
xor
jnp
pusha
scas
mov
sub
sub
hlt
lcall
lret
int3
ja
mov
push
or
stos
jae
pop
jle
cmp
xor
jae
mov
jmp
movsb
dec
lods
sbb
push
pop
jno
cs
dec
cmpsl
pushf
push
insb
scas
push
das
daa
es
outsl
repnz
negl
ret
mov
cs
jnp
mov
fs
clc
outsl
hlt
and
test
push
jb
jb,pt
cmp
sub
loopne
scas
fbld
movsb
mov
fsubs
mov
pusha
cwtl
test
cs
lock
mov
insb
inc
and
ja
pop
pop
dec
pushf
pop
lcall
jno
xchg
add
mov
insb
faddl
test
mov
scas
popf
movsb
jb
andb
popa
mov
in
cmp
mov
fldl
pop
movsl
lret
iret
and
mov
push
or
stos
scas
and
cmp
scas
rolb
das
int3
je
fs
pop
movsb
dec
mov
pop
shlb
addr16
mov
mov
gs
fstl
lahf
and
adc
imul
enter
addb
jmp
js
xor
ret
sbb
jl
xlat
into
cmp
sub
mov
jmp
pop
rcrl
mov
xor
mov
or
ret
mov
xorb
data16
shlb
lods
jecxz
xchg
push
push
in
lods
repz
push
insl
mov
pop
adc
adc
xchg
mov
xor
jb
xor
daa
imul
addl
scas
mov
push
roll
add
ja
jb
je
test
scas
and
nop
add
xchg
cmc
xchg
mov
fdivl
push
xchg
dec
xchg
jno
addb
sub
daa
arpl
jno
dec
sub
xchg
subb
shll
insb
adc
fwait
bound
js
sub
mov
je
jp
or
mov
lret
pop
fnstenv
inc
xchg
or
jp
int3
sbb
lods
sub
test
cs
inc
fs
popf
int3
incl
jg
jge
in
leave
out
loop
mov
lods
fs
lea
dec
popa
or
cltd
aad
cmp
add
push
adc
mov
pusha
jno
xchg
xchg
or
bound
pop
bound
daa
pop
dec
dec
popf
mov
out
cmp
ret
add
jae
mov
fistl
xor
test
aas
arpl
and
stos
je
mov
xor
cmpsb
jge
out
sub
sub
add
lock
test
xchg
hlt
mov
inc
dec
insb
insb
push
sub
lea
fcom
cmp
aam
or
fwait
aaa
daa
test
stos
push
icebp
inc
sub
add
jecxz
cmp
sub
test
sbb
cmp
lods
pop
pop
mov
popa
pop
lret
push
imul
cmp
pushf
and
add
mov
xchg
leave
movsb
les
or
xor
cltd
sbb
mov
mov
dec
mov
mov
push
sbb
and
pushf
lret
or
mov
icebp
push
pop
aas
sbb
aad
stos
icebp
push
in
iret
mov
test
mov
lods
sub
popf
dec
or
mov
push
aas
mov
ljmp
loop
add
clc
push
pop
inc
js
test
insl
cmp
in
push
mov
lods
testl
mov
into
lods
inc
sub
outsl
or
in
sub
cmpsl
cs
push
iret
sub
cwtl
ret
xchg
jle
jno
cmpsb
sarb
push
push
movsb
pop
mov
in
cmp
mov
pop
cld
aad
pushf
sub
and
cmp
pop
jp
xchg
push
les
arpl
inc
cmp
mov
cmp
dec
or
sub
test
cmpsl
daa
std
mov
pop
inc
lret
in
sbb
arpl
dec
jl
fs
lea
ficomps
arpl
test
pop
xorl
lahf
test
out
push
pop
adc
xchg
mov
cmpsb
jo
sbb
fs
and
adc
and
pop
or
push
imul
sub
stc
cwtl
dec
xchg
sahf
call
sahf
aad
mov
ret
xchg
jnp
jne
int3
aad
sub
loope
call
inc
arpl
and
lods
inc
adc
jae
inc
and
jb
and
cs
xchg
lret
fwait
mov
sub
mov
movsb
add
lret
xchg
lods
in
insb
mov
jae
and
sub
xor
movsb
lahf
loopne
lods
sbb
test
push
gs
bound
pop
mov
mov
mov
fists
fwait
outsb
lods
arpl
jns
movsl
pop
popa
bound
arpl
js
ret
cmp
cmpsl
or
mov
or
pop
or
mov
mov
push
push
cmpsb
push
xor
pusha
inc
je
pop
push
cmp
add
enter
cli
jp
mov
cmp
pop
dec
call
add
and
test
add
push
movsbl
xlat
rorb
bnd
in
sub
cli
sub
clc
or
scas
adc
cwtl
sub
inc
pop
call
xor
je
push
lcall
shl
into
jge
sbb
push
fmull
mov
sub
fistpll
cltd
iret
inc
dec
rorl
jnp
sub
sbb
bound
or
addb
mov
sbb
xor
pop
pop
jb
aad
in
inc
icebp
inc
mov
mov
inc
xchg
and
bound
cmp
and
test
xor
insb
sbb
orb
jb
sub
mov
lcall
sbb
lods
xchg
xchg
sub
xchg
insl
popa
pop
add
or
mov
scas
fidivrs
mov
mov
stc
arpl
cltd
jp
and
jg
cltd
pop
pop
popf
lret
xchg
cmp
fwait
inc
sub
cwtl
push
and
cmp
sbb
sub
push
mov
mov
xchg
es
jns
loopne
stos
lcall
arpl
mov
insb
jns
fidivl
testb
ret
mov
es
jb
jb
js
test
les
je
dec
rolb
pusha
insb
nop
mov
push
cmpsl
xchg
es
jno
mov
insb
cmp
push
sbb
add
orl
shlb
repz
dec
dec
mov
dec
inc
jmp
sbb
cli
and
call
repnz
data16
pusha
loope
xlat
adc
xchg
push
popf
pop
mov
sub
daa
pop
mov
mov
cmp
jl
hlt
mov
sub
sbb
sbb
cmp
or
mov
push
lods
add
movsb
jmp
movsb
sub
sbb
daa
hlt
movsl
sub
imul
pop
mov
dec
out
jl
and
in
jp
mov
repnz
bound
adc
sub
test
sub
adc
data16
jns
or
and
pushf
rorl
andl
mov
ret
lods
xchg
testl
in
shl
rorl
ja
jae
sahf
jl
xor
mov
shl
push
cs
aad
inc
scas
rcll
loope
or
fldl
adc
sub
xchg
mov
int3
mov
jmp
xlat
push
mov
scas
push
push
jl
mov
xchg
xchg
sbb
insb
mov
insb
lahf
jnp
xchg
sarb
lret
cmp
imul
scas
mov
outsl
mov
push
and
pop
xchg
mov
aas
jae
xor
adc
mov
arpl
adc
mov
pop
and
jns
sub
addb
lock
dec
sbb
pusha
mov
imul
mov
mov
sub
lods
iret
ja
fwait
leave
jbe
or
aas
xchg
pop
dec
cmpsl
in
mov
stos
jne
into
scas
mov
inc
gs
dec
mov
mov
leave
cmp
movsb
pop
sbb
add
int3
push
push
mov
in
push
jp
dec
push
cwtl
mov
aas
stos
xor
repz
mov
xorb
add
mov
and
cs
test
mov
inc
lret
inc
adc
in
push
mov
inc
push
xor
mov
mov
enter
cltd
aaa
inc
xchg
push
and
adc
testl
or
lock
nop
sub
pop
push
pushf
dec
jl
mov
scas
stos
gs
adc
fwait
pop
nop
jle
test
xor
mov
js
xchg
addr16
test
jno
xchg
jl
pop
jno
imul
mov
shlb
jl
xchg
mov
decl
push
push
jb
dec
arpl
pop
aam
lods
scas
cmp
pop
or
xor
movsl
sub
jae
push
mov
dec
ss
data16
dec
mov
mov
and
lods
bound
mov
leave
mov
push
in
loop
call
mov
xchg
xchg
nop
cwtl
sbb
mov
lods
and
or
mov
jnp
enter
lock
pop
lret
push
cwtl
adc
dec
mov
xchg
outsl
xchg
test
bound
adc
in
push
in
and
and
aas
cmp
mov
clc
notb
push
mov
mov
sti
movsl
xor
shrb
stos
mov
sub
das
leave
lods
out
pop
lods
jge
mov
in
cmp
and
and
int3
jmp
xchg
dec
xchg
mov
sbb
mov
inc
arpl
pop
neg
push
gs
adc
lahf
inc
aaa
pusha
popa
int
fadds
push
stos
aas
mov
mov
push
xchg
xchg
stc
rol
jnp
fldt
jnp
cltd
mov
call
push
lcall
fs
stos
ret
push
cltd
cmp
imul
insl
mov
nop
sub
std
lods
inc
push
repz
fwait
hlt
push
stos
xchg
and
hlt
jb
mov
test
sub
cwtl
mov
cwtl
out
xorl
ret
xchg
push
fistl
xchg
daa
dec
imul
call
gs
xor
push
sbb
mov
xor
or
lock
xor
sbb
cltd
cmp
or
bswap
in
aas
jl
pop
lds
cmpsb
xchg
mov
lock
sub
jge
pop
aaa
jecxz
pop
cmp
cmpl
xor
xor
loope
jecxz
movsb
ja
scas
push
test
mov
inc
mov
jmp
xchg
fnstcw
dec
mov
cld
xor
nop
push
scas
int3
fists
insl
stos
and
pop
imul
jnp
in
into
xorl
push
int3
mov
fwait
xor
scas
mov
push
cmp
test
enter
cmp
je
or
lods
jmp
call
or
pop
push
lock
insb
xchg
adc
sub
lods
and
or
sbb
jnp
push
test
mov
xor
daa
divb
pop
mov
inc
cmc
jle
mov
xor
test
mov
and
ljmp
mov
mov
imul
push
sub
daa
push
fs
pushf
sbbl
sahf
repnz
xor
test
sahf
xor
enter
pop
call
jne
loope
je
jecxz
rorb
pop
movsl
jae
cmp
in
imul
shlb
mov
lods
ret
mov
popa
mov
cli
dec
inc
rcrb
mov
or
mov
dec
inc
shrl
lods
push
in
dec
and
test
mov
mov
pusha
lcall
sbb
ret
fwait
nop
mov
push
ret
or
in
incl
outsl
xor
xchg
inc
mov
pop
in
lret
sub
aad
outsb
push
adc
shll
scas
bound
neg
push
jo,pn
and
popa
mov
fsub
or
aas
pop
xchg
lret
fisttpl
cmpsb
andb
js
adc
lock
adc
cltd
mov
jb
cs
lret
bound
fs
adcl
pop
pushf
fisttpl
lret
xor
inc
mov
es
mov
stos
mov
arpl
and
lcall
nop
adc
bound
insl
andb
call
das
in
pusha
mov
push
xchg
cwtl
lahf
push
pop
sbb
lret
push
decb
fdivl
icebp
adc
mov
leave
pop
sub
push
sub
sbb
movsb
push
clc
mov
fs
loope
sarl
test
and
xor
lcall
or
mov
stos
test
leave
test
stc
mov
or
test
fcoml
cs
aas
stos
xlat
adc
push
sbb
push
pop
lahf
leave
cmp
lods
nop
insb
jnp
xchg
bound
and
arpl
xchg
and
sub
xchg
imul
fcompl
es
sbb
lock
bound
mov
repnz
popa
and
pop
xor
and
dec
fs
mov
and
adc
movsb
inc
push
or
nop
and
push
stos
jo
subb
mov
mov
mov
xorb
xorb
leave
xchg
movsb
ja
imul
or
addb
sub
add
cmc
mov
cmp
adc
kandnb
and
mov
iret
addr16
mov
fmul
xor
lret
cmpsl
aad
gs
ljmp
pop
pop
cmc
mov
pop
gs
xor
inc
push
clc
inc
int
test
pop
xchg
mov
xchg
fwait
test
movsl
sub
lods
push
in
xchg
leave
xchg
sbb
cs
stos
leave
xchg
push
xchg
test
or
cmpsb
stos
cmp
push
mov
mov
out
cmp
xchg
cmp
adc
mov
ss
xor
sbb
pop
jne
xor
mov
adc
bound
and
mov
mov
mov
cmp
or
dec
adc
in
ficomps
xchg
out
mov
cwtl
push
fidivrs
arpl
dec
leave
insb
repz
jo
mov
andb
mov
mov
mov
inc
adc
push
ss
dec
pop
sub
jmp
jb
je
cwtl
or
cmp
pop
divl
xlat
sahf
mov
xor
cwtl
scas
and
add
or
repnz
mov
pop
inc
mov
jno
xor
popl
push
cli
xchg
and
es
into
cmpsl
fwait
xchg
push
dec
lahf
xchg
sbb
xchg
adc
aad
xchg
loopne
fwait
je
in
xchg
mov
jns
aaa
inc
cld
insb
xor
bound
imul
pop
daa
dec
lods
lret
jns
ss
add
pop
mov
aas
pop
ds
cmpsb
outsb
xchg
movsb
outsl
mov
rcll
into
dec
or
xchg
rcr
mov
fidivrl
lods
lret
or
jg
outsl
lods
test
cmp
movsb
rorb
int3
ret
xchg
cld
sahf
jg
jmp
jbe
xchg
and
sbb
jmp
aad
mov
test
js
divl
test
daa
je
int3
push
gs
jo
sub
not
pop
pushf
lods
xor
push
inc
stos
sub
sub
inc
push
aam
or
mov
les
in
clc
push
je
data16
stos
push
jo
cmp
lahf
and
mov
pop
mov
sub
stos
sbb
pop
fadd
shrl
mov
and
stos
repz
xchg
xor
mov
sbb
mov
mov
and
cld
insb
repnz
insl
sub
rcrl
sub
inc
pop
fstps
shlb
push
mov
mov
lret
add
mov
cwtl
jb
push
fisubrl
mov
fldcw
sbb
or
sbbb
imul
leave
dec
jp
jl
push
out
mov
adc
xchg
mov
sub
mov
xchg
pop
xchg
insb
or
mov
xchg
cs
ss
add
pop
cli
in
movhps
xchg
in
xor
xchg
xchg
xchg
popl
cs
sbb
mov
int3
jns
leave
push
pop
dec
repnz
test
out
cmp
and
xchg
repnz
push
jo
insl
add
aam
sahf
outsl
pop
pop
adc
sbb
popa
test
mov
outsl
testb
fldl
stos
push
mov
cwtl
pop
gs
push
addl
fldlg2
cmpsb
popa
cmp
pop
mov
stos
and
or
fsubrl
or
or
cli
call
sub
or
fdivrs
pop
enter
mov
xchg
mov
mov
xchg
and
test
leave
sarb
in
rol
fnstenv
xchg
xor
out
add
ret
rolb
jmp
call
fisubrl
mov
mov
pop
push
les
scas
jb
mov
push
leave
in
pop
repz
jmp
mov
push
push
pop
lods
cmpb
mov
mov
push
sub
mov
test
nop
in
jnp
lds
leave
sbb
dec
jl
pcmpeqd
xorl
dec
dec
outsb
sahf
cmp
int3
xchg
pop
popf
insl
clc
ss
xchg
loope
orb
mov
jb
arpl
pusha
in
inc
call
stos
int3
mulb
mov
mov
xchg
int3
push
xchg
pushf
pop
mov
xchg
add
lds
rcrl
fwait
inc
arpl
in
inc
jno
mov
sahf
inc
add
mov
pop
xchg
dec
push
mov
cmc
jo
cmc
inc
dec
movsb
clc
push
pop
jno
rorb
lock
aam
fsubrp
mov
daa
arpl
inc
mov
mov
pusha
xchg
and
adc
ds
imul
cwtl
in
sbb
ret
dec
data16
les
add
je
and
in
pushf
inc
stos
lahf
mov
in
mov
mov
pop
adc
lahf
adc
sbb
or
xor
sbb
and
bound
xchg
inc
jle
cld
inc
jae
scas
dec
fildll
sbb
andl
cmpsb
jb
mov
or
jl
pop
das
sarb
mov
hlt
lods
int3
mov
and
leave
cmpsb
dec
cmp
adc
jecxz
mov
or
imul
xchg
arpl
adc
mov
lods
int3
xor
mov
push
lahf
imul
xchg
sub
iret
test
into
mov
fmull
fs
push
jne
imul
xchg
jno
adc
arpl
movsb
dec
shlb
jb
js
les
por
mov
pop
das
mov
sub
jmp
sbb
test
xchg
inc
movsl
mov
jb
sub
inc
dec
das
or
fwait
outsl
mov
mov
mov
fistl
cmp
loop
mov
and
sbb
pop
xor
dec
push
enter
ret
in
mov
cwtl
xor
jns
sbb
lahf
arpl
nop
iret
mov
push
xchg
out
ljmp
xchg
movsb
adc
or
addr16
mov
sti
mov
loopne
mov
test
lods
lods
xchg
sahf
jno
dec
cmp
push
mov
cld
fdivp
sbb
jl
mov
mov
aas
xor
jne
shlb
scas
pop
popa
pop
int3
jp
jmp
out
sbb
mov
sahf
nop
ret
inc
mov
icebp
mov
mov
iret
lods
int
fcoms
int3
bound
xor
cltd
jns
aad
mov
mov
mov
repnz
pushfw
cmp
in
cmp
pop
iret
inc
push
xor
data16
call
aam
sub
add
mov
mov
int3
sbb
sahf
pop
lock
mov
mov
lock
cmc
push
sarl
pop
frstor
nop
nop
lods
jl
mov
sub
sub
jbe
xchg
jl
test
inc
subb
int
mov
ss
movsb
orb
bound
mov
mov
push
ljmp
jp
lods
adc
dec
adc
dec
cmpsl
xchg
imul
repz
and
and
imul
mov
mov
sbb
mov
mov
popf
fs
pop
notl
cmpsl
std
nop
data16
push
lods
subb
jno
xchg
fwait
and
loop
xchg
scas
jo
pop
xchg
cmp
imul
xor
js
out
call
mov
push
fisttps
in
stos
loop
xchg
push
mov
dec
lretw
leave
bound
pop
jp
dec
jne
faddl
fs
fmuls
jl
stos
stos
fwait
jbe
xlat
cmpsl
dec
xchg
xchg
pushf
jb
lods
fwait
mov
xchg
movsb
xchg
pop
test
cld
xor
int3
data16
ficoml
or
sub
es
scas
xchg
mov
mov
mov
lods
pusha
sbb
cmp
adc
mov
divb
jmp
adc
in
repz
aaa
ss
xor
mov
jae
fyl2x
movsb
movsb
idivl
arpl
pop
out
cmp
ret
and
mov
shr
lods
ss
out
pop
jl
pop
dec
jno
test
shrl
or
fmulp
test
aas
inc
xchg
jns
mov
cmp
adc
mov
test
jno
mov
xor
dec
sbb
orb
inc
insl
mov
addb
push
cmp
nop
sub
int3
xchg
daa
add
stos
out
addb
insb
lret
dec
xchg
mov
lods
jns
inc
sahf
mov
arpl
stos
mov
lds
test
cli
mov
push
push
sub
movsb
stc
loope
enter
xor
rcrb
daa
ds
mov
daa
add
mov
mov
pop
mov
adcl
xchg
jns
aas
jbe
mov
mov
cli
push
data16
test
sbb
dec
xchg
sbb
bound
xchg
out
and
mov
adc
es
int3
subb
xor
int3
sbb
loop
fsts
sbb
mov
adc
mov
gs
and
cmpsb
repnz
aaa
push
loope
dec
mov
cwtl
adc
mov
loopne
dec
push
pushf
push
clc
mov
out
xor
jmp
out
pop
ss
inc
inc
inc
pop
jnp
xchg
adc
xchg
sti
testb
xchg
fs
sbbb
test
xor
mov
xchg
dec
mov
or
mov
test
ljmp
jo
or
jo
adc
mov
pop
or
leave
jo
xor
movsl
stos
outsb
and
sub
push
inc
xchg
mov
dec
imul
scas
outsb
gs
test
lods
nop
jnp
lods
nop
xchg
mov
hlt
sub
leave
lea
mov
xor
mov
lods
and
fistpl
out
das
mov
insb
test
xor
loopne
xchg
fstpt
inc
fs
icebp
xchg
cmp
pop
pop
jb
jl
loop
in
cli
adc
mov
add
je
pop
cld
cmpsl
dec
lcall
and
inc
adc
pop
sub
arpl
call
lahf
mov
popa
cld
lcall
mov
jmp
arpl
xchg
pop
push
and
out
aas
xchg
lahf
pusha
cmp
insb
pop
sub
push
loope
mov
sahf
lods
push
mov
mov
leave
and
bound
xchg
insl
lods
popf
aam
mov
popl
add
call
daa
mov
sub
and
je
out
insb
and
and
dec
adc
adc
mov
aaa
xor
mov
outsb
push
pop
fisttps
jb
inc
xchg
pushf
movsb
xor
xlat
or
addr16
pusha
inc
pusha
adc
ds
test
test
add
jl
pushf
jmp
sahf
adcb
mov
lock
push
and
cmp
add
int3
mov
cmp
sub
idivb
jno
xor
sub
std
mov
or
sub
js
cmp
fbstp
mov
sbb
stos
push
adc
push
pushf
xor
mov
or
mov
xchg
and
sbb
pushf
out
pop
or
dec
loop
xor
add
dec
push
in
push
adc
sub
sub
mov
push
jge
dec
mov
push
lods
jns
push
bound
leave
aas
sti
pop
xor
and
out
ljmp
aas
mov
adc
pusha
enter
int
bound
frstor
lods
data16
movsl
or
scas
jmp
lahf
jne
in
and
gs
test
pop
nop
mov
cmp
addr16
cmpsb
pop
insl
lcall
insb
lods
jb
cs
mov
xchg
mov
push
inc
fstl
adc
mov
xchg
inc
rolb
push
dec
arpl
push
and
mov
out
xlat
push
lahf
sahf
icebp
fisttpll
pop
pop
and
aaa
sarb
mov
jg
in
and
add
push
inc
adc
push
dec
jae
test
push
jb
shlb
add
dec
lock
ja
mov
inc
mov
jnp
xchg
in
mov
or
inc
aaa
jnp
xchg
les
sub
mov
mov
andl
sub
inc
icebp
xor
loope
jge
ljmp
mov
shrb
sbb
daa
adc
sbb
loope
xchg
cmp
push
cmp
lods
dec
data16
out
lods
lret
mov
dec
ret
lret
cmpsl
cmc
pop
mov
rolb
std
repnz
loopne
movsb
adc
fs
xchg
jno
ds
es
sbb
push
lret
or
pusha
jae
add
pop
imul
dec
or
xchg
outsb
mov
lret
add
imul
addr16
adc
addb
sbb
add
mov
stos
pop
sub
sar
dec
aaa
xchg
scas
out
cmp
dec
rorb
mov
gs
pop
aas
cmp
mov
xchg
pop
sub
scas
pushf
scas
dec
xchg
mov
and
adc
test
imul
dec
push
sbb
out
test
aas
xor
cld
dec
cmc
or
mov
popa
sti
mov
jns
aas
dec
jecxz
jecxz
pop
cmp
mov
mov
xchg
cmp
cwtl
popf
mov
push
jle
mov
mov
and
les
ss
adc
adc
mov
outsb
or
push
sub
dec
loopne
lea
ja
jge
fdivp
cmp
add
leave
popf
nop
outsb
jns
aas
mov
je
stos
inc
mov
mov
ret
cwtl
popa
pop
inc
mov
aas
clc
pop
pop
mov
sub
xchg
pop
or
push
sub
jns
les
rcl
pop
test
scas
inc
or
xchg
push
pop
mov
cltd
inc
test
adc
mov
push
pop
and
cmp
sahf
fwait
inc
lods
dec
imull
fcmovnbe
jge
mov
shll
xor
shlb
fcompl
daa
and
data16
lret
push
loop
jbe
adc
mov
loopne
aam
cmp
fisubrs
mov
andb
lods
pushf
mov
data16
daa
loop
mov
shlb
dec
arpl
push
shlb
mov
mov
in
nop
int3
mov
or
call
xchg
sbb
pop
ret
cmp
xor
mov
cmp
sub
aaa
sub
mov
lods
ljmp
and
push
adc
es
sbb
pop
flds
xchg
ldmxcsr
es
shlb
daa
push
sub
dec
pop
xchg
add
inc
xchg
fs
aas
sub
push
mov
popf
lods
rolb
les
dec
inc
sub
push
mov
mov
lods
movsl
mov
mov
jne
imul
mov
mov
sbb
xor
arpl
pop
pop
addr16
jnp
scas
inc
jle
and
insl
int3
push
xlat
jmp
imul
arpl
push
lds
loopne
neg
fidivs
popl
nop
jns
dec
jbe
pop
sbbb
les
jmp
xchg
dec
mov
inc
imul
xchg
xor
inc
mov
fabs
cmc
add
vmovntps
cld
ja
jp
lods
sbb
inc
in
cli
sub
sbb
iret
imul
add
aaa
jo
inc
imul
test
scas
sub
pop
dec
cmpsl
push
cmpsl
clc
xchg
mov
mov
fstpt
add
push
imul
xchg
sbb
int3
sbb
add
int3
lret
xor
sar
adc
xchg
mov
mov
hlt
pop
sub
lods
scas
mov
pushf
stos
jl
scas
js
loope
jle
test
stos
sbb
jnp
movsl
dec
popf
in
shll
adc
pushf
test
test
cwtl
out
mov
cmpsb
nop
stos
orl
and
and
jno
jl
outsl
jp
xchg
testb
or
pop
mov
stos
add
dec
xchg
and
jo
cs
pushf
lods
adc
push
lock
jne
mov
insb
scas
push
fsubrl
inc
pop
fdivrs
xchg
aam
dec
and
and
rorb
pop
shlb
pop
icebp
mov
inc
lods
ret
mov
movsb
imul
aaa
or
in
out
mov
pop
xchg
jae
data16
mov
mov
movsb
mov
xor
push
mov
sbb
test
mov
pop
mov
daa
lock
ss
mov
incl
mov
jb
xchg
aad
lret
icebp
add
pop
sub
xor
test
aam
mov
jno
jg
mov
jl
add
neg
jle
test
mov
dec
outsl
fwait
popf
or
nop
xchg
lods
cmp
nop
pop
daa
push
subl
push
movsl
pushf
cmp
icebp
adc
loop
mov
pop
je
cwtl
xor
pop
pop
insb
sbb
cmpsb
cwtl
xchg
sbb
jno
sbb
cmpsb
jo
inc
rol
xchg
adc
test
es
test
es
push
or
and
ljmp
or
mov
lods
dec
jmp
imul
jnp
int3
insb
bound
jp
push
call
fwait
in
xchg
or
cs
fmull
movsb
shlb
xchg
ret
ret
adcl
mov
cmp
stos
rorl
push
sub
out
inc
int
inc
je
and
push
pop
mov
int3
pop
xor
daa
iret
cmp
nop
mov
test
lea
inc
lahf
sub
bound
xchg
add
ljmp
pushf
das
lret
dec
push
dec
push
add
cmpsb
sbb
xchg
shrl
adc
outsb
nop
sbb
imul
sub
push
test
xchg
pusha
adc
jge
xchg
jbe
fdivrl
test
jmp
lea
lahf
ljmp
jnp
insb
je
imul
pop
das
dec
or
int3
sub
mov
add
or
push
pop
pusha
adc
sbb
jno
xchg
sbb
in
adc
dec
adcb
pop
test
es
xchg
or
and
add
cwtl
sahf
xor
lods
xchg
sbb
mov
jns
fisttps
pop
cmc
cmp
clc
loopne
mov
out
adc
cs
and
sub
in
mov
sub
and
jns
in
popf
loopne
sbbb
or
mov
insl
dec
cmp
repnz
test
data16
cmp
rcr
xchg
movsb
push
aam
lock
dec
imul
inc
dec
sub
push
cmp
imul
xor
adc
lods
add
xlat
hlt
or
jbe
or
cmpsl
arpl
int3
mov
fs
aas
into
jecxz
sahf
mov
test
into
les
cmp
adc
enter
into
ljmp
jmp
mov
es
adc
mov
mov
push
out
cs
outsl
push
test
inc
push
roll
shlb
mov
cmpsl
sbb
jg
mov
mov
mov
rcrl
mov
cld
inc
imul
fstpl
push
mov
iret
neg
stc
inc
mov
mov
jno
bound
pop
lcall
mov
movsb
std
cmpsl
xor
sbb
stos
repnz
in
mov
inc
insl
push
add
test
or
cmc
xlat
movsb
cmp
or
lods
std
mov
dec
hlt
mov
bound
aaa
or
mull
sbb
mov
aam
adc
mov
xchg
fs
packsswb
sub
inc
lock
mov
jbe
mov
je
push
xchg
test
mov
pop
pop
pop
dec
in
cmc
enter
pop
insb
test
les
push
lods
iret
mov
loopne
xchg
xchg
aad
aad
imul
xchg
test
mov
xor
pushf
sbb
xchg
jecxz
sti
popf
mov
add
movsb
nop
movsb
mov
xchg
xchg
jecxz
jnp
jnp
addb
je
mov
movsb
daa
xchg
fidivs
mov
pushf
mov
and
or
ja
sub
scas
jl
cmp
insl
inc
xchg
lahf
fabs
mov
enter
cmpsl
mov
mov
jge
adc
pop
cld
adc
or
mov
das
push
arpl
jecxz
mov
dec
pushf
xor
movsl
fs
scas
inc
sub
jg
fists
ret
fldt
movsl
mov
sbb
int3
or
mov
jle
mov
test
rcll
mov
cmpsl
mov
mov
ret
inc
lahf
mov
push
xor
test
adc
xchg
xchg
fdivrl
into
and
pop
lret
movsb
fadd
push
pop
popf
hlt
test
popa
cmc
mov
mov
cli
out
scas
sub
sbb
movsb
rol
pop
jbe
insb
insb
jno
out
daa
std
sub
dec
lret
cmp
popf
ljmp
gs
adc
arpl
fldcw
mov
sub
jp
lahf
jae
repz
and
orl
fadd
scas
jb
adc
jo
imul
in
jae
repz
sub
movsl
inc
fcmovnb
orb
lret
cmp
in
nop
mov
mov
stos
test
leave
fisttpl
js
mov
call
mov
inc
adc
aaa
dec
mov
shll
lods
add
dec
mov
jns
xor
pop
ss
mov
imul
ss
test
cmp
outsb
shll
pop
and
jne
arpl
stos
int3
lret
stos
sbb
sahf
mov
xor
cmpsl
mov
inc
push
cmpsl
jle
add
pop
or
sbb
mov
add
xchg
push
jno
out
inc
leave
add
fisubs
jb
push
lcall
ror
mov
bound
lahf
testl
notb
and
test
test
incl
jno
fs
gs
das
mov
inc
cld
push
cmp
lret
xor
sub
outsl
outsb
cmpsl
jecxz
adcl
adc
pop
and
rorb
mov
jns
daa
sbbb
ja
loope
inc
sti
xor
mov
sahf
repnz
lcall
js
push
mov
jo
xor
test
adc
xor
mov
mov
das
mov
js
dec
dec
bnd
scas
cmp
cli
jmp
mov
int3
push
outsb
je
cmp
lds
xor
dec
mov
inc
mov
aaa
cmp
fadds
xchg
dec
xor
lret
xor
push
insb
mov
repz
gs
xor
notb
sbb
and
dec
aam
adc
shlb
cli
xchg
sbb
xchg
jle
repnz
cmpsb
xchg
and
imul
xchg
cwtl
cmp
and
insb
mov
test
gs
rolb
push
add
jmp
mov
push
jb
into
mov
adcb
pop
in
pop
fimuls
out
out
pop
xor
sbb
hlt
ret
jecxz
mov
mov
mov
sub
imul
jae
pop
jns
pop
stc
pusha
mov
xchg
popa
pop
cmp
jg
lock
or
int
adc
sbb
jge
popf
rcrb
lea
repnz
and
test
lcall
fnop
lea
out
mov
cmp
or
cmpsl
bound
mov
loop
pop
push
add
aas
sbb
outsl
fbstp
or
rcrl
addb
fwait
pushf
int3
adc
and
push
loop
daa
pop
add
mov
and
dec
push
push
mov
push
mov
test
inc
fisubs
sahf
cmc
mov
cld
out
xor
scas
ss
add
lock
jge
sbbb
or
scas
mov
xor
iret
xchg
mov
and
sbb
insl
movsb
mov
dec
push
jg
outsb
adc
push
int3
xlat
aad
push
lret
not
add
loopne
bound
or
sub
sbb
fs
and
sub
lret
lock
mov
xchg
jae
sbb
dec
inc
lock
jecxz
pop
cwtl
sahf
mov
mov
inc
push
dec
push
cmp
or
aaa
dec
loope
jp
sub
xchg
mov
add
jecxz
sub
adc
push
pop
push
mov
mov
daa
divb
mov
imul
mov
hlt
test
xor
or
ja
xchg
aad
inc
mov
mov
inc
outsb
addr16
cltd
fs
nop
fs
andb
sub
insb
test
xor
in
cmp
sbb
add
push
es
insb
subb
adc
xor
stos
mov
inc
dec
mov
pop
lods
test
stos
push
jl
dec
insb
push
and
push
xor
sbb
imul
push
imul
jle
xchg
xchg
test
and
adc
in
subl
movsb
xchg
test
mov
movsb
fs
and
pop
pop
sbb
icebp
loopne
jmp
test
stos
jp
jae
insb
jo
pop
sub
push
nop
dec
insb
inc
and
push
cmp
enter
aas
popf
pop
popa
ds
pusha
jge
movsb
pop
pop
push
in
xchg
mov
out
bound
or
add
daa
jb
mov
shlb
fmul
jbe
movsb
fsubl
xchg
aam
mov
int3
movsb
sahf
xchg
enter
les
mov
jp
xchg
dec
xchg
jmp
jns
jno
imul
push
dec
les
insb
fiadds
rorl
mov
dec
lcall
inc
jo
mov
jae
shlb
ds
xor
sub
stos
fldenv
mov
test
push
outsl
lods
jbe
jmp
imul
add
js
jecxz
repnz
mov
ljmp
jb
bound
icebp
pop
jecxz
push
sbb
popf
mov
push
or
js
mov
in
icebp
lret
xchg
popa
cmp
pop
pop
rcll
test
out
enter
sub
xor
or
cli
dec
cmp
bound
hlt
mov
jge
loope
cmpsl
aad
cmpsb
push
out
outsl
int3
loop
sub
and
shlb
outsb
icebp
xor
push
fs
cld
jmp
clc
das
cmp
push
or
pop
push
pop
mov
jg
sub
push
mov
sahf
aas
push
or
xlat
inc
and
pop
add
xchg
movl
mov
sub
mov
scas
pop
inc
lods
scas
lock
and
icebp
enter
das
test
mov
das
jecxz
fnstenv
dec
repnz
mov
jp
test
and
imul
sahf
add
push
mov
je
mov
jl
inc
cs
fistps
jb
mov
cmpsb
dec
cmp
push
jl
push
dec
mov
hlt
push
ret
int3
hlt
leave
mov
jno
in
or
xchg
data16
out
inc
push
hlt
sub
fcomps
int
cmpsb
movsb
or
sub
or
les
lods
testb
sub
cltd
out
jne
lcall
sub
movsl
clc
mov
test
pop
push
mov
mov
rcrb
rcl
shll
stc
sbb
arpl
pop
outsl
and
sbb
ss
test
scas
movsb
jp
aas
lods
inc
push
jno
pop
arpl
xchg
test
pop
aaa
lods
mov
scas
jae
ds
push
pop
pop
je
test
and
shrl
outsl
scas
dec
test
adc
stos
test
sub
jl
mov
lahf
sbbl
out
pop
mov
scas
mov
pop
int3
push
fidivl
pop
fdivrp
dec
mov
fiadds
sub
inc
fdivl
shll
mov
push
arpl
std
jae
pop
mov
fldcw
pop
inc
and
push
sub
movsb
xchg
stos
fcoms
and
imul
xor
sub
stos
or
pushf
call
leave
mov
cmpsl
dec
insb
mov
jns
stos
mov
fnsave
and
ja
xchg
sbb
rolb
mov
fmull
enter
xor
sub
or
je
lret
rclb
jmp
cwtl
mov
jle
lea
xchg
nop
shlb
fs
arpl
fwait
add
bound
add
sbb
inc
lock
fimuls
sbb
movsb
pop
lds
dec
dec
rorb
and
fstpl
jl
test
adc
dec
stos
int3
popf
fdivrl
jle
adc
insl
aas
data16
repnz
aas
xchg
xor
cmpsl
repnz
dec
mov
test
lds
jmp
test
mulx
fs
call
mov
leave
loope
daa
sub
scas
xchg
jp
outsl
loopne
fldcw
xor
inc
jge
xchg
das
outsl
mov
xchg
and
pop
xchg
repz
mov
jge
cmp
cmp
add
lods
add
pop
pop
popf
jnp
mov
fcomps
add
and
sbb
ror
cmpl
mov
test
inc
pop
jo
data16
sub
ss
xchg
loopne
jecxz
lods
out
movswl
stos
dec
add
cmp
jno
push
out
int
jg
bound
sti
ss
jge
insl
jbe
leave
loopne
adc
cld
pop
mov
rorb
xchg
add
icebp
pop
scas
scas
mov
fdivrs
in
and
or
popa
lcall
out
fbld
mov
mov
pop
cwtl
add
pusha
cltd
and
mov
pop
inc
adc
add
and
push
sub
cmc
inc
int3
popa
jae
add
rclb
and
or
or
sbb
ljmpw
dec
add
incb
cltd
and
pop
mov
push
mov
push
inc
sub
mov
fucomip
jno
jle
and
mov
inc
inc
test
push
sbb
xor
pushl
test
out
adc
push
out
je
faddl
mov
data16
dec
cmp
lods
btc
or
and
xchg
repz
xchg
jns
loope
cli
mov
push
shl
in
les
pop
es
dec
xchg
arpl
scas
mov
sub
mov
sub
test
sub
lods
cmpsl
pushf
pusha
movsb
scas
mov
cwtl
cwtl
lods
push
jno
xchg
xchg
and
sub
jo
xchg
mov
jl
xchg
mov
jl
push
stos
mov
stos
lods
int3
icebp
fstl
sub
test
jno,pn
xchg
push
push
dec
orb
inc
sub
mov
cmpsl
in
scas
or
mov
insb
scas
mov
xlat
and
movsb
xchg
test
mov
cwtl
mov
sub
lods
xorl
cmp
sti
sahf
cmc
aaa
leave
jl
mov
ljmp
xor
shlb
push
pop
pop
xchg
pop
mov
movsb
and
add
xchg
shll
in
cmpsb
xchg
je
lahf
stos
shlb
cmpsl
and
sbb
and
adc
insl
out
lock
dec
out
lods
out
push
es
mull
mov
out
das
push
test
xchg
ror
mov
dec
aas
idivb
xor
nop
lcall
inc
call
leave
xchg
mov
xchg
std
and
xchg
mov
mov
jo
test
es
ds
and
add
xchg
nop
inc
sub
lahf
std
pop
arpl
sub
xchg
xorb
faddl
fdivrs
jns
mov
sub
jnp,pt
mov
push
test
ljmp
add
dec
mov
test
push
movsl
pusha
in
stc
dec
fucomip
mov
mov
ret
jae
xchg
jb
mov
push
or
pop
cmc
stos
push
push
jb
pop
outsl
lock
outsl
test
push
sub
ljmp
in
adc
arpl
sub
fs
test
bound
std
leave
mov
xchg
cmp
jbe
sarl
cwtl
or
inc
mov
xor
xor
scas
pop
aas
and
cwtl
xchg
xor
cmp
js
and
xchg
mov
mov
fwait
test
sub
mov
scas
int3
xor
bound
int3
inc
lock
push
outsl
les
cld
loope
lcall
test
mov
mov
scas
outsb
data16
xchg
mov
adc
mov
xor
icebp
dec
scas
ljmp
jmp
icebp
imul
dec
ret
and
mov
int3
data16
mov
xor
ss
xchg
pop
jo
test
idivb
fs
lcall
xchg
mov
dec
hlt
aas
inc
jmp
push
push
adc
mov
outsl
leave
sahf
fucomp
inc
sbb
ds
lock
jo
mov
arpl
pop
pop
hlt
das
fldcw
int3
addl
je
pop
inc
out
into
je
and
aam
mov
call
daa
loopne
cwtl
test
xchg
jns
push
cmp
xlat
adc
xchg
test
jb
sub
arpl
bnd
clc
adc
je
add
pushf
xor
cmp
scas
pushf
dec
mov
outsl
ljmp
movl
lcall
xchg
mov
lret
fldt
cwtl
bound
xchg
push
xlat
loop
mov
pop
loop
ljmp
add
mov
xchg
test
fwait
xlat
ds
jbe
lods
pop
lods
xchg
mov
mov
jb
mov
lret
pop
mov
ljmp
xor
mov
inc
mov
xor
aam
mov
dec
fcoml
add
or
mov
dec
or
mov
test
dec
jo
pop
cld
xchg
mov
xor
jno
pop
in
sub
orb
xchg
xchg
pop
sti
lret
mov
sub
xor
jbe
stos
xchg
mov
xor
xlat
mov
mov
mov
xor
movsb
or
xor
push
sbb
pop
mov
mov
out
cmp
lods
js
dec
jo
leave
out
mov
pop
xchg
sub
jo
pop
int
stos
mov
push
push
je
lods
sub
sub
test
mov
xor
fwait
repnz
movsl
inc
mov
push
pop
mov
push
movsb
mov
or
call
mov
je
lock
inc
scas
bound
sub
inc
adcl
cs
mov
and
mov
mov
xor
std
dec
mov
dec
dec
mov
outsl
xor
test
mov
ljmp
sbb
mov
js
jo
xchg
lret
push
cmp
test
clc
out
push
aad
mov
sbb
cmpsb
test
inc
sub
inc
pop
jb,pn
jl
xchg
loope
rclb
and
cmc
mov
call
pop
mov
stos
mov
in
outsl
cld
lock
xchg
add
outsb
adc
les
xchg
int
outsl
and
and
mov
jg
sub
jo
in
ljmp
movsb
fimull
xchg
sub
lods
pop
mov
mov
test
lds
mulb
outsb
insb
xchg
pop
cmpsb
out
test
imul
pushf
cmp
into
sub
nop
pushf
dec
xor
je
pushf
sub
dec
les
sub
cltd
cmp
mov
out
enter
xchg
pop
fmul
xor
pushf
mov
loopne
xchg
mov
aam
push
in
and
ret
repz
loop
push
lods
mov
je
sub
jle
mov
bound
xchg
cmc
mov
push
lods
sub
push
adcl
xor
pop
lods
xchg
xchg
add
outsb
inc
xchg
sub
push
mov
sub
lods
fs
xchg
add
xor
or
aam
adcb
das
sub
mov
mov
out
fstl
xchg
nop
mov
push
lahf
xor
mov
cmp
scas
arpl
jo
cli
pop
pop
xlat
and
inc
fldcw
xchg
jecxz
js
inc
lods
in
lock
xchg
cmp
mov
push
add
mov
adcl
insb
xchg
jecxz
outsb
and
das
lods
xor
cmp
inc
push
dec
mov
xchg
outsb
xchg
pop
mov
rcl
lods
pop
lock
fs
jl
pop
xor
lea
mov
mov
es
lods
test
scas
push
adc
fiaddl
cwtl
movsb
shll
int3
or
sbb
and
add
bound
xchg
flds
aam
adc
fists
lods
in
lock
xchg
out
jne
hlt
pushf
dec
xor
adc
cld
sub
lahf
add
call
push
clc
and
jnp
jae
shll
aam
mov
xor
jb
lods
rclb
mov
xchg
stos
mov
xlat
and
loope
adc
mov
ljmp
jae
pop
out
je
adc
inc
xchg
xor
outsb
adcb
mov
xor
mov
push
inc
movsb
loop
je
pushf
sub
addl
cmc
adc
lods
xchg
jp
mov
insl
xor
aam
lods
shlb
xchg
mov
pushf
lods
fbstp
mov
outsl
loopne
mov
cmpsl
pop
mov
lea
mov
jo
xchg
adc
sbb
sbb
mov
sub
cmp
sub
in
sub
jo
push
pop
mov
jb
xchg
mov
jo
xchg
js
nop
lods
cmpsb
xor
xchg
mov
lock
mov
test
ret
shll
fwait
aam
pushf
xor
popf
xchg
fsubs
push
pop
mov
jb
inc
xor
inc
xor
xchg
or
cmp
adc
mov
lods
sahf
xor
xchg
insl
js
inc
sub
xchg
scas
mov
scas
xchg
pusha
andl
xchg
mov
fs
call
movsb
aam
test
movsb
mov
push
xor
inc
jge
mov
push
or
push
icebp
imul
int3
fstpt
mov
je
jns
push
js
inc
pusha
divb
je
imul
sbb
je
mov
insl
mov
je
sbb
lock
les
xorb
mov
int3
mov
push
lret
sbb
pop
mov
mov
test
mov
sbbb
out
insl
pop
iret
arpl
outsl
je
ret
int
cs
fwait
idivw
mov
fucom
mov
cmc
stos
fistpl
loope
inc
jbe
mov
pop
cld
xchg
loopne
lock
jecxz
testb
jns
inc
fwait
mov
pop
xor
add
cmp
sub
test
cmpsl
movl
add
popf
sub
jmp
scas
pop
cmp
and
jnp
jecxz
bound
in
xchg
mov
les
loopne
cmpsb
xor
mov
mov
lea
inc
adc
inc
mov
pop
cmp
add
shll
orb
data16
pop
cltd
imul
pusha
sub
cmp
roll
inc
dec
pop
mov
out
xlat
lods
and
xor
xchg
mov
insb
mov
add
imul
bound
mov
mov
jp
out
addr16
lret
inc
mov
shrb
mov
jno
ficomps
mov
jmp
test
popf
jb
aad
repz
lret
scas
pop
push
in
sbbb
inc
out
and
jne
and
subl
xchg
pushf
mov
mov
push
mul
mov
testl
cmpsl
inc
aas
jmp
jmp
mov
leave
stos
push
mov
dec
adcl
sub
sbb
enter
fsts
jb
lods
xor
lret
and
xor
aaa
dec
rol
push
insb
xchg
and
movsl
sub
xchg
add
rclb
jns
in
cmpsb
adc
arpl
sub
jae
int3
pop
test
cmp
inc
jnp
lcall
cmp
dec
lahf
jbe
sti
sbb
xchg
cwtl
jle
sub
xor
cld
dec
mov
es
jo,pn
nop
pop
add
inc
xchg
rolb
bt
rorl
bound
mov
push
mov
xchg
out
xor
lret
notl
fwait
loop
lock
mov
pop
adc
jbe
push
xor
cmc
movsl
pop
pop
and
dec
insb
sbb
xchg
pushf
rolb
xor
fcoms
arpl
jns
xchg
xor
in
cltd
insl
mov
popf
xchg
pushf
rorl
js
adc
xor
mov
arpl
jb
lahf
aas
inc
mov
jne
jl
mov
out
mov
fs
add
or
scas
and
mov
inc
mov
leave
mov
out
scas
mov
gs
call
ja
loop
pop
mull
cwtl
arpl
rorb
sub
movsl
cmp
push
push
inc
xchg
sahf
arpl
add
pop
fidivl
popf
pop
sub
lcall
ficomps
cmp
jns
cmp
lods
mov
or
scas
push
jp
push
das
add
pop
test
mov
test
jo
dec
ss
testl
push
pop
xor
shll
cli
adc
mov
push
sub
mov
arpl
sbb
fsubs
fcompl
lahf
lock
sbb
data16
movsb
push
or
push
test
inc
in
cltd
sbb
jp
fwait
xchg
xorl
jns
jae
aas
iret
imul
add
push
push
incb
jo
jns
mov
inc
cwtl
sub
jmp
in
pop
cltd
pop
andb
xchg
test
shlb
inc
xor
dec
xor
sbb
arpl
cltd
dec
repnz
mov
jae
xorb
push
xor
lcall
push
cmp
cwtl
adc
cwtl
adc
cmp
xchg
std
pusha
mov
mov
add
sbb
nop
inc
xor
mov
popf
mov
lcall
scas
mov
pop
add
sbb
mov
sbb
or
shll
xchg
sub
sub
in
or
sub
xor
out
inc
jmp
popf
lods
mov
in
cmpsl
pop
in
dec
out
mov
pop
add
and
shll
sbb
xchg
lock
test
imul
sbbl
mov
mov
mov
sub
pop
mov
pop
fwait
mov
mov
xchg
test
mov
lock
mov
nop
popa
xlat
xchg
push
nop
ret
aaa
out
sbb
std
lcall
xchg
inc
inc
cmp
jl
push
pop
cmpb
lea
mov
push
lock
hlt
jns
or
mov
xor
dec
fs
xchg
push
mov
sbb
ss
mov
add
lea
pop
nop
insl
mov
dec
mov
adc
add
mov
xchg
cs
jl
fs
add
push
fstl
dec
push
aam
adc
andb
out
mov
mov
mov
arpl
mov
jecxz
mov
mov
mov
or
jecxz
inc
das
sbb
bound
scas
dec
push
int3
aaa
push
sbbb
xor
sub
lds
sub
jb
xchg
pusha
xchg
popa
arpl
in
adc
imul
lcall
cmp
push
lcall
pusha
or
xchg
or
pop
out
cwtl
nop
jl
xor
dec
xlat
jb
push
cmpl
bound
fnstsw
lods
mov
mov
popa
leave
data16
dec
outsl
in
xor
test
loope
neg
add
add
and
inc
ljmp
mov
xchg
cmp
cmpsb
mov
push
add
pop
je
dec
in
dec
dec
xchg
scas
cld
pop
push
mov
sub
popl
mov
mov
adc
lea
push
pop
imul
fisubs
push
jp
cmp
insb
cmp
test
lods
out
movsl
inc
push
cmpsb
sub
lret
cmpsl
cmp
add
je
adc
lock
sub
adc
pop
in
das
xor
in
push
sub
ds
lock
xchg
cmpl
xchg
pushf
sbbl
sub
sahf
inc
lea
sub
sub
push
jle
popf
sub
fisttpl
fisttpll
mov
mov
xor
ljmp
mov
xchg
jns
test
aaa
ret
mov
test
pop
adc
cwtl
xor
int3
roll
pop
nop
aaa
cmp
and
xor
insl
cwtl
mov
shl
test
sti
mov
out
or
and
ret
andb
xchg
push
mov
mov
mov
xor
daa
add
and
outsb
pop
mov
sub
jp
loope
cmp
in
mov
test
add
in
pop
fwait
push
mov
mov
int3
inc
sbb
scas
jne
mov
and
xor
jle
jl
bound
bound
xor
or
jo
push
xchg
adc
arpl
loope
mov
mov
sub
xor
push
hlt
pop
xchg
lahf
lea
hlt
clc
mov
sub
pop
pop
nop
or
gs
loop
sub
mov
into
inc
adcb
push
ds
cmc
xchg
pusha
cld
inc
ret
mov
mov
testl
cmc
mov
das
mov
mov
jns
xor
mov
cmp
lods
data16
cld
or
lahf
mov
mov
aas
dec
jl
rolb
test
in
sbb
aaa
fsubl
enter
loopne
or
stc
rolb
pushf
in
jg
not
test
xor
cmp
cmp
sub
mov
mov
js
pop
and
and
arpl
addr16
xor
push
repz
leave
pop
into
push
pop
inc
jno
mov
sub
push
jecxz
sbb
inc
das
hlt
cmc
lock
mov
call
adc
ds
pop
cltd
clc
out
pop
push
mov
fistps
sti
scas
jmp
clc
xchg
iret
bound
imul
sbb
sub
enter
mov
and
iret
adc
pop
push
mov
jb
jmp
lods
aad
daa
dec
jg
icebp
scas
hlt
leave
lods
mov
mov
cmp
outsb
rcrb
jmp
imul
push
sub
mov
mov
sub
lret
imul
daa
push
test
jmp
cmp
mov
dec
das
bnd
dec
pop
sbb
jg
xchg
icebp
pop
int3
inc
out
jo
pop
imul
push
nop
je
inc
xor
pop
push
cltd
mov
popf
fisttps
sub
int
or
je
lcall
lret
lahf
pop
lea
jge
jb
jbe
and
lods
pop
jo
mov
cmp
jg
mov
scas
int3
add
push
stc
sub
mov
add
mov
popf
push
push
ljmp
sbb
mov
lret
sbb
dec
jno
inc
sbb
xchg
adc
and
fs
sbb
sub
pop
xor
lock
fmuls
and
out
out
xchg
dec
test
mov
xchg
fs
jb
outsl
xor
mov
stos
mov
or
cmp
mov
int3
iret
call
sub
lock
movsl
jb
hlt
mov
cs
cmpsl
and
fmull
mov
push
adc
in
fwait
daa
inc
repnz
cmp
sbb
xor
adc
loope
in
push
xor
fcompl
cli
inc
dec
cmp
push
bound
in
call
cmp
fildll
int3
jb
in
mov
dec
test
jmp
cld
outsb
sbb
rclb
fmuls
aas
jmp
sub
imulb
call
jge
inc
inc
andl
int3
xlat
fwait
out
movsb
add
mov
xor
shrl
push
and
xchg
addb
sbb
sub
lods
int3
mov
xor
xchg
and
loopne
jg
xchg
xor
mov
mov
push
pop
movl
adc
pop
jl
insl
in
test
test
lcall
out
addr16
arpl
cmp
or
lcall
outsb
mov
xor
mov
inc
mov
orl
jne
cmp
cmp
cwtl
lret
mov
jns
aaa
hlt
hlt
inc
dec
inc
sahf
icebp
push
test
repz
daa
and
repz
cmp
push
xchg
and
mov
jg
mov
inc
cmc
fs
jo
repnz
lock
pop
push
cmp
fwait
xchg
imul
ss
in
adc
xlat
into
clc
jne
jnp
shll
jae
aad
popa
pop
add
andl
inc
loope
test
fsubrs
jbe
push
jnp
sbb
jno
arpl
and
int3
lret
aaa
loope
or
jae
inc
xchg
mov
add
adc
imul
mov
add
insb
repnz
push
cs
bound
js
lds
inc
daa
cld
in
jmp
daa
imul
pop
cld
and
pop
mov
mov
xchg
dec
jp
inc
sub
clc
adc
push
sub
add
or
mov
test
leave
das
loop
aas
mov
lods
sub
mov
inc
test
in
cmpsl
xor
jns
cmp
mov
stc
enterw
jns
aad
xchg
lcall
dec
nop
sbb
lcall
xlat
add
jge
dec
aam
int3
or
xchg
mov
mov
int3
clc
pusha
jno
mov
test
in
call
mov
pop
repnz
sarb
xchg
lods
pop
inc
test
shrl
or
pop
mov
add
roll
mov
mov
les
jns
out
popf
sub
jmp
jne
jo
add
stos
mov
mov
lds
out
div
inc
xchg
shll
data16
sbb
int3
mov
pop
push
mov
subb
inc
rorl
repnz
lods
lea
pop
inc
add
imul
ljmp
jb
xor
push
mov
push
fimuls
cmpl
or
ficoml
mov
arpl
lods
adc
ljmp
arpl
ljmp
pop
jl
push
lea
imul
sahf
mov
cmp
test
adc
xor
cmp
push
test
jmp
inc
jb
mov
sub
mov
sbb
sbb
sbb
test
cltd
push
inc
stc
outsb
test
sub
pop
les
jo
aam
and
sub
mov
dec
das
jmp
aaa
dec
pop
pop
mov
mov
xchg
jns
ss
arpl
mov
push
mov
or
add
and
test
jns
test
cs
test
inc
loope
in
inc
ffree
xor
cmp
insl
sbb
test
push
push
adc
mov
inc
je
and
test
scas
mov
mov
jecxz
pushl
sub
shll
pop
mov
xor
cli
ja
aaa
arpl
loop
jb
or
rol
clc
orl
cmp
xor
movsl
mov
mov
je
stc
xor
xlat
mov
push
xor
popf
dec
and
lods
inc
cmpsb
not
repnz
mov
inc
push
pusha
sub
mov
mov
xor
sub
out
outsb
pop
mov
aaa
imul
loop
iret
js
lds
test
mov
adc
scas
mov
xchg
pop
pusha
ret
inc
insb
fnstsw
and
add
lahf
mov
jo
sub
dec
jns
cmp
pop
ret
and
cmp
inc
int3
pop
mov
pushl
and
nop
lods
jb
test
jnp
adc
insb
lcall
dec
int3
aam
test
ret
sbb
div
enter
dec
pusha
dec
test
sub
in
mov
outsl
and
mov
roll
in
jnp
inc
push
and
outsb
and
or
inc
cmpb
sbb
mov
int3
sub
mov
and
sbb
pop
stos
inc
mov
fcmovne
stos
dec
push
mov
add
xchg
and
pop
stos
jp
or
xorb
lods
pop
fdivrs
sbb
mov
clc
rclb
pushl
mov
pop
jbe
and
pop
pop
pop
lcall
and
outsl
mov
ljmp
loopne
sub
call
sub
adc
ja
in
cmpl
in
jb
cmpsl
pushf
push
jo
lahf
dec
loop
mov
sbb
bound
inc
mov
push
rcrl
mov
xchg
mov
leave
pusha
cmp
loop
jecxz
jle
cmpl
fistl
lahf
inc
out
call
and
jg
cli
or
mov
dec
in
pop
mov
rclb
pop
movsl
das
gs
jmp
xchg
jp
xchg
pop
pusha
pop
sbb
push
and
lods
and
and
sub
mov
popf
lock
ret
lock
push
nop
or
imul
cmp
in
in
add
and
inc
js
xchg
lret
xchg
mov
sbb
adc
mov
dec
mov
cs
jle
ss
jecxz
sahf
ljmp
push
aas
lds
mov
jb
fs
and
movsb
adc
mov
sub
lahf
insl
adc
mov
or
push
mov
push
clc
jl
mov
ljmp
dec
dec
sub
and
scas
xor
int
in
subb
cmp
sbb
or
add
test
popf
hlt
cmp
xor
roll
subb
int3
pushf
pop
mov
pop
cs
push
addr16
in
call
inc
scas
aas
stos
dec
mov
mov
cmp
int3
clc
xchg
and
jge
aas
xor
into
xor
adc
jno
insb
jnp
lahf
push
aas
jnp
sub
inc
xchg
leave
xchg
shlb
or
fwait
mov
rol
dec
stos
mov
cli
sbbl
mov
into
scas
pop
cld
daa
mov
mov
std
arpl
outsl
sbb
sahf
mov
jecxz
leave
xchg
dec
ja
adc
sbb
clc
add
dec
jmp
mov
in
cmp
sub
les
pop
pop
sbb
push
dec
cld
sub
push
inc
xchg
iret
inc
cmp
test
aaa
mov
dec
mov
cld
or
sub
sbb
mull
jb
pushf
lret
fbstp
ljmp
and
insb
rcll
add
mov
es
push
sahf
sub
adc
mov
int3
sbb
enter
call
leave
jge
in
pop
mov
mov
mov
repz
int3
jbe
pop
dec
or
mov
shll
ljmp
das
xor
mov
cltd
insl
mov
test
mov
imul
movsl
xor
rcr
gs
test
mov
jae
add
std
and
arpl
or
ljmp
lea
sub
xor
inc
adc
mov
xor
jo
cld
jae
popa
xchg
lcall
fwait
mov
mov
mov
leave
cmpsl
xchg
mov
sbb
mov
clc
test
mov
mov
pop
mov
or
cmp
pop
mov
jno
inc
adc
jo
mov
out
jns
xlat
mov
enter
fs
push
cltd
arpl
ss
or
int3
loopne
cmp
sub
push
mov
xor
sub
js
mov
add
push
int3
push
gs
aas
mov
xchg
mov
cli
aaa
das
outsb
xor
xor
test
insl
jb
fidivrs
xchg
sub
cmpb
incb
dec
int
sub
and
lock
mov
and
fildll
xchg
out
ror
cmp
jg
std
aaa
and
inc
sbb
fs
arpl
loop
xchg
pop
lods
fucom
inc
add
fisubl
pusha
das
addb
outsw
insb
inc
adcb
xchg
in
xor
and
stos
or
out
in
push
popa
add
sub
pusha
or
dec
pop
pop
fstpl
and
push
lea
sub
fistpll
sub
jnp
add
std
xchg
idivl
les
pop
jmp
push
push
int3
sahf
adc
or
loop
and
or
xlat
sbb
sbb
adc
test
xor
fdivr
subb
sbb
imul
out
sub
push
rcrb
insb
pop
jmp
mov
jnp
cld
xchg
jg
cmp
das
pcmpgtd
arpl
stos
aam
movsb
add
cmpsb
shll
nop
or
cmc
or
fwait
iret
cwtl
mov
in
sub
lret
sarb
jecxz
mov
out
cmp
sbb
jo
subb
gs
out
les
aas
enter
bound
hlt
aam
out
pop
fs
push
popa
addr16
outsl
sub
sub
int3
mov
addr16
imul
or
mov
inc
xor
je
shll
inc
mov
loope
sarb
addr16
nop
pop
xorl
ret
imul
xchg
jl
iret
seta
pop
xchg
scas
sbbb
mov
mov
out
stos
mov
fwait
mov
or
sahf
out
mov
shrb
leave
inc
fsubrp
xor
and
and
ljmp
popf
aas
mov
aaa
insb
add
out
mov
les
lods
bound
scas
mov
sub
jb
pop
inc
cmc
fstl
je
push
dec
lock
jo
push
movsl
aas
enter
test
out
push
sub
pushf
aaa
inc
out
popf
test
sub
pop
sbb
pop
dec
mov
in
jp
sub
push
jecxz
jge
mov
push
sub
repz
sub
scas
push
jmp
ljmp
pushf
addr16
iret
push
mov
mov
lds
loop
pushf
adc
xchg
push
outsl
pop
xor
sbb
mov
int
andl
imul
popa
fldenv
mov
xor
out
mov
outsb
shl
dec
sub
shlb
bound
outsl
sub
sub
aam
xchg
inc
cmp
and
jp
mov
cmp
pop
and
sub
cld
fcomi
fstps
adcl
mov
std
les
push
xchg
xchg
lock
mov
sub
nop
mov
push
nop
mov
leave
dec
in
ss
sub
call
mov
aaa
jae
les
test
sbb
mov
test
les
out
xor
les
stos
data16
sbb
pushf
xor
mov
movsb
pop
mov
mov
dec
iret
inc
push
test
je
sub
pusha
jecxz
test
shrl
ret
jmp
jns
push
divl
jmp
cmp
sahf
movl
repz
lock
sbb
lods
sbb
dec
jo
movsb
sahf
addr16
fldl
jnp
out
jecxz
dec
dec
shlb
jecxz
getsec
dec
adc
xor
lret
loop
xchg
mov
cmc
arpl
mov
mov
popa
and
into
inc
mov
pop
insb
popa
arpl
scas
mov
and
pop
adc
pop
outsl
and
in
mov
imul
daa
sbb
mull
int3
cmp
cld
jno
pusha
data16
adc
push
bound
add
gs
sbb
inc
jge
movsb
adc
xchg
ss
xchg
loop
dec
iret
scas
mov
mov
push
fdivr
in
sub
jmp
jo
mov
pop
pusha
dec
jb
mov
das
cmc
sbbb
insb
pop
data16
jl
fisubrs
mov
mov
inc
inc
stos
inc
xchg
test
das
pusha
xor
pop
push
pushf
xor
xchg
bound
jo
nop
or
insb
ss
jo
sbb
jl
push
push
pop
bound
xor
xchg
sub
adc
fs
push
insl
add
push
inc
je
data16
sbb
pushf
mov
cmp
push
loop
adc
cli
sbb
in
insb
xorl
inc
cmp
shrl
rclb
jno
mov
jg
mov
cmpb
mov
cmp
imul
dec
dec
push
leave
cltd
imulb
pushf
lcall
push
sub
or
test
repnz
orl
mov
scas
sub
mov
adc
scas
int3
dec
jmp
ret
inc
dec
mov
mov
int3
adc
lock
xchg
int3
daa
push
jb
std
test
sub
lea
stos
cs
pop
stos
pop
sub
leave
bound
sbb
testb
add
cmp
int3
sbb
fdiv
out
sarb
and
cwtl
and
or
pop
out
pop
jecxz
imul
sub
mov
mov
jb
dec
ret
xchg
pop
sub
sti
mov
sub
daa
inc
das
mov
outsl
mov
pop
mov
lods
scas
test
into
cmpsl
imul
jns
inc
xor
add
aas
in
loope
ret
ret
ds
je
jae
mov
mov
pop
add
push
jno
aam
xor
aaa
movsb
mov
fs
bound
adc
dec
cli
mov
loopne
mov
iret
nop
xor
xchg
lods
add
notb
in
dec
cmp
sbb
ds
jo
fdivrl
push
in
xor
xor
mov
mov
cltd
add
aas
dec
inc
xchg
cltd
iret
cwtl
adcl
in
sub
pusha
repz
stos
leave
sbb
ds
ja,pt
mov
je
jmp
mov
jmp
imul
or
lret
add
xchg
leave
daa
mov
inc
jbe
xchg
hlt
cwtl
inc
inc
adc
ljmp
cwtl
jns
push
adc
cs
fs
scas
rcrl
inc
inc
xchg
fs
sub
or
stos
js
mov
sub
leave
stos
icebp
gs
testl
mov
and
sahf
sbb
pop
aam
mov
adc
push
sub
mov
push
test
push
scas
mov
add
cmp
mov
pusha
mov
push
sbb
mov
test
insl
scas
xor
jns
pop
xor
lret
rcl
stos
jno
mov
movsb
mov
stos
xchg
out
shlb
lret
xchg
and
dec
stos
dec
push
test
nop
mov
stos
push
add
dec
daa
mov
fmull
lret
mov
xor
mov
outsb
popa
in
xchg
push
and
mov
push
pop
pop
popa
loopne
xor
mov
in
aas
mov
rcl
xchg
mov
aam
in
pop
ljmp
leave
sbb
pusha
sub
notl
movsb
mov
aad
sbb
imul
xchg
xor
jb
xor
test
dec
sbb
add
xor
jb
add
and
stos
mov
sahf
adc
test
mov
sub
loop
inc
pop
xor
pop
xor
addps
std
and
sub
das
ret
sbb
pop
mov
test
xchg
stos
insb
sbb
xchg
jl
mov
outsl
sbb
test
pop
mov
dec
cmp
add
mov
jno
lea
loopne
mov
dec
and
out
mov
push
sub
nop
adc
and
sub
pop
lea
cmp
adc
sub
stos
daa
adcb
bound
cltd
jo
jns
lea
xor
dec
sahf
add
idivl
popa
insb
fwait
pop
mov
bound
in
cwtl
shll
mov
sbb
in
sub
jmp
lcall
adc
out
lds
xchg
pop
test
icebp
xchg
movsl
lds
jecxz
mov
push
ja
add
fs
stos
mov
outsl
mov
int3
dec
sub
push
mov
sbb
xchg
cs
mov
xor
aaa
jg
outsl
cmp
inc
dec
scas
ds
jg
dec
aaa
mov
imul
jae
ss
push
cmp
xchg
and
movsb
cmpsb
mov
aas
sahf
lret
xchg
inc
data16
clc
mov
imul
cmp
leave
mov
mov
popf
sbb
mov
out
ret
sub
scas
insb
mov
pushf
fistpl
ret
bound
mov
jb
mov
addb
int3
add
dec
mov
adc
cmp
jne
loop
jb
xor
mov
loopne
out
daa
test
sub
insb
cmp
mov
xor
jmp
or
mov
or
popa
pop
xchg
cltd
js
and
mov
cwtl
jo
or
mov
pop
repz
rol
mov
add
mov
cmp
xorl
pop
and
pop
pop
xchg
jecxz
xor
cmpsl
dec
movsl
cli
pop
or
jmp
addr16
bound
lcall
sub
leave
mov
stos
jae
dec
sub
add
bound
push
pop
xchg
loope
sbb
jmp
mov
sbb
sub
add
outsl
clc
pop
movl
xchg
sti
pop
inc
mov
lods
xor
daa
stos
shll
std
push
movsb
jnp
clc
jmp
test
outsl
or
sub
das
mov
push
sbb
gs
movsl
lods
int3
flds
dec
pop
adc
out
scas
cmp
dec
dec
sbb
cli
sbb
push
gs
push
xchg
movsb
jns
push
aaa
xor
mov
rcr
test
pushf
jns
in
ss
and
xor
xchg
outsb
mov
add
xor
or
jns
xor
inc
xchg
jg
and
bound
lcall
daa
push
cmp
mov
push
xchg
and
repnz
subb
addr16
lret
lcall
dec
mov
xchg
push
and
in
cmpsb
inc
xor
cmp
mov
aam
push
xor
dec
insb
adc
repz
inc
out
mov
addr16
sbbb
fs
add
imul
daa
test
movsb
test
data16
dec
mov
dec
int3
gs
xor
repnz
subl
mov
lcall
mov
push
dec
inc
adc
lds
dec
adc
adc
pop
int3
adc
out
xchg
mov
push
into
test
popa
adc
mov
test
int3
push
pushf
pusha
daa
mov
mov
inc
pop
test
insl
cmp
aas
lcall
cwtl
out
sti
jae
sub
test
jb
in
pushf
cltd
jo
clc
sbbl
or
orb
out
mov
xor
mov
lea
shlb
push
pop
mov
js
fidivrs
pushf
dec
test
sahf
ficomps
in
stos
in
outsl
and
sub
push
pop
aas
jg
mov
pop
mov
int
mov
lret
fs
sti
repnz
add
mov
pop
imul
mov
mov
xor
xchg
movsb
jl
xchg
clc
call
sub
mov
pushf
daa
outsb
cwtl
xchg
ja
testl
in
int3
xor
sbb
ss
xchg
sub
das
fsubrs
andb
outsl
pusha
rcrl
aam
xchg
jl
int3
jo
rcrb
insb
enter
shlb
ret
stos
outsb
push
fs
xor
cmp
mov
test
sub
dec
sub
inc
sub
cmp
orb
add
mov
roll
lcall
aas
int3
push
fdivrl
jge
push
jns
jae
jnp
aas
test
arpl
inc
fsubrs
ror
shrl
shlb
cmpsl
int3
pop
xor
test
leave
sbb
inc
and
jo
cmpsl
in
lret
and
jo
add
hlt
cmpsb
int3
mov
xor
aaa
push
rolb
xchg
xchg
aas
jo
cli
sarb
push
and
pop
scas
popa
xchg
repz
push
syscall
in
xchg
imul
or
enter
inc
xor
cmpb
jbe
imul
push
enter
and
mov
sbb
push
in
inc
xor
inc
fwait
jnp
sbb
das
add
mov
lahf
cmpl
add
push
decb
test
dec
mov
mov
lret
mov
inc
nop
pop
xchg
insb
mov
ljmp
les
out
loope
mov
shll
gs
sbb
push
inc
iret
cmp
ljmp
pop
xlat
adc
fstpl
cld
push
int3
data16
push
mov
sub
adc
test
jb
lock
push
xchg
push
mov
dec
inc
mov
xchg
mov
pushf
cwtl
test
jb
das
aas
test
xor
xchg
pushf
in
xchg
movsb
scas
lcall
sbb
mov
mov
subl
cmc
imul
mov
lret
sbb
adc
outsb
dec
orb
sarb
cmpl
push
das
mov
pop
fwait
sub
pop
data16
sbbl
cwtl
xchg
test
mov
mov
enter
sahf
dec
mov
add
fimull
mov
out
sub
rcl
sbb
xchg
cmp
rcrl
repnz
xchg
in
mov
sub
inc
inc
loopne
sbb
cmp
pop
mov
mov
dec
push
cmp
das
ret
shlb
cld
push
jne
add
dec
xchg
dec
mov
mov
sbb
iret
pop
pop
cmp
mov
mov
or
rorb
aam
int3
fidivrs
aas
movsl
ds
ljmp
or
fadds
dec
pop
sbb
jecxz
and
gs
loope
movsl
js
lea
xor
xchg
jo
lea
lea
fs
divl
clc
test
insl
add
arpl
subb
pop
dec
shl
imulb
sahf
or
test
out
scas
sahf
mov
dec
adc
xor
mov
aad
xchg
scas
cmp
cmc
push
mov
mov
inc
xchg
push
jl
fs
insb
fcompl
mov
enter
mov
xchg
fs
subb
das
dec
cmp
test
inc
mov
push
mov
js
cmp
mov
decb
fwait
mov
pusha
fcomip
xchg
popf
inc
stos
jnp
mov
cmp
push
or
add
jg
insl
mov
inc
push
bound
xor
dec
or
ds
adc
hlt
movsb
add
movsb
sub
loopne
mov
in
outsb
hlt
jge
lods
push
adc
int3
inc
cmp
das
sbb
and
cmp
fcmovbe
std
scas
mov
mov
fdiv
mov
das
inc
nop
xchg
dec
xor
inc
daa
jl
int
push
scas
test
mov
lahf
loopne
dec
bound
push
call
in
cmp
and
mov
daa
push
setg
test
adc
cld
loop,pt
or
mov
xor
sahf
shrl
xchg
scas
lret
shll
rolb
jnp
add
rorb
mov
add
fnsave
aam
lock
mov
xor
xor
push
mov
movsb
adc
xor
jb
int3
dec
popa
aas
or
ret
push
outsb
test
cmp
sbb
inc
test
sbb
pop
inc
iret
clc
insl
xor
popa
push
mov
das
mov
movsb
fldenv
bound
mov
sub
loop
cmp
cmpsb
arpl
sbb
dec
imul
jp
js
in
sub
adc
sahf
push
inc
sahf
dec
bound
movsb
add
testb
mov
push
je
adc
jp
fidivl
push
pop
popa
test
cmc
inc
or
or
cmp
pop
fstpt
aad
mov
mov
jb
push
xchg
imulb
mov
push
push
dec
mov
daa
test
sub
jne
xchg
mov
outsl
cltd
clc
loope
or
jge
lock
or
movsl
decb
sub
out
sbb
daa
add
into
test
xchg
pop
loopne
rcll
xchg
in
inc
out
notb
cwtl
hlt
xchg
js
push
test
mov
pop
jb
mov
xchg
test
insb
inc
and
xor
push
push
cmpsb
aam
int3
dec
inc
loop
inc
adc
inc
lock
mov
dec
das
mov
pop
stos
incl
xchg
cld
and
lcall
xchg
arpl
and
push
sarb
sbb
imul
sbb
sbb
popf
jo
or
hlt
and
outsb
sbb
push
js
cmp
repnz
inc
aam
int3
and
es
sub
inc
and
ficomps
int
xchg
nop
aam
clc
cmp
xor
js
jg
xchg
into
or
or
test
lahf
mov
push
subb
push
stos
jnp
adc
xor
mov
xor
cld
loop
pop
xor
mov
sub
lock
pusha
jo
inc
lcall
movsb
push
xor
add
add
inc
xchg
lods
jb
inc
fwait
mov
cwtl
rolb
xor
push
xor
cmp
and
arpl
cwtl
int3
cmpsl
or
xchg
dec
xor
cwtl
out
push
xchg
xchg
mov
scas
xchg
jns
out
sti
jle
test
inc
mov
loope
in
mov
sbb
stos
xchg
fs
mov
xor
sahf
mov
ret
aas
ja
sub
mov
cmpsb
mov
and
lret
add
mov
into
xchg
inc
push
mov
mov
inc
lret
mov
xchg
int
pushf
jb
dec
mov
inc
mov
fwait
pop
push
xchg
add
jo
ja
lcall
xor
sub
arpl
stos
sub
push
lds
jb
sub
dec
fisttps
cmp
push
inc
fwait
adc
inc
push
sub
xchg
dec
and
shr
mov
push
jno,pn
sub
arpl
sub
fwait
xchg
cmpsb
xchg
cmp
cwtl
xchg
mov
fs
dec
mov
insl
mov
push
in
add
test
xchg
testl
test
arpl
aaa
daa
notl
pop
push
scas
add
lods
in
and
sbb
js
pushf
sbb
jge
adc
inc
sbb
mov
adc
adc
fs
push
and
mov
sub
inc
sahf
andb
pop
sahf
aas
mov
lds
add
out
repz
dec
dec
test
daa
add
lds
lret
sbb
int3
scas
push
xchg
orb
test
or
mov
and
sub
dec
mov
test
dec
insl
fisttpl
sbb
int3
dec
jno
xchg
pop
jo
nop
push
in
sub
fwait
xchg
negl
push
lods
pop
jb
jne
pop
sub
nop
and
cli
int
rcrl
dec
cwtl
xchg
fwait
out
jb
mov
bnd
stos
mov
in
test
and
subb
xchg
dec
dec
shl
stos
jbe
clc
dec
arpl
xchg
int3
pop
imul
cmpsl
jo
mov
mov
push
add
dec
push
and
fs
fcoml
pusha
or
push
and
lock
rclb
xchg
test
inc
inc
mov
dec
push
negl
mull
movsb
orl
js
jmp
int3
inc
push
add
into
sub
sbb
push
and
bound
jp
lret
shrd
cli
xchg
in
test
mov
lods
in
in
xor
aas
pop
cmpl
jge
mov
aas
pop
push
and
test
sbb
and
iret
sub
jg
cmp
call
lahf
xchg
pop
and
dec
rdmsr
jbe
in
lds
cli
push
mov
out
insl
and
fimuls
jno
adc
aam
dec
fistpl
cmp
rcrl
inc
lods
cmp
fistps
sub
jns
xchg
sub
lcall
xchg
js
push
pop
xor
mov
das
cwtl
lods
lods
loope
mov
test
mov
imul
pop
sbbb
outsb
ficompl
adc
test
sbbb
lds
dec
fldcw
xor
fbstp
dec
xchg
pop
mov
dec
push
popa
bound
add
ret
adc
xchg
or
daa
test
xchg
arpl
addr16
xor
sbb
mov
btc
sub
push
or
xor
jne
dec
movsl
popa
in
mov
sbb
or
adcb
xchg
das
inc
mov
pop
or
es
xchg
jmp
ret
pop
lods
and
xor
pop
cmp
xchg
clc
sbb
out
out
test
sbb
jmp
cmp
dec
out
mov
fsts
jg
int
je
popa
mulb
pop
adc
push
xchg
pop
adc
arpl
mov
scas
les
cld
jae
sbb
add
sbb
in
jge
out
pusha
lea
xor
sbb
xor
and
mov
mov
ret
call
loope
jo
arpl
and
sbb
sub
icebp
je
addb
inc
sub
scas
jmp
fwait
sub
cmpsl
xchg
imul
dec
bound
bound
mov
imul
and
mov
dec
xchg
push
js
rcll
aad
cmpsb
mov
push
dec
xlat
ret
pop
sbb
movsb
sbb
in
lea
ja
in
add
pushf
lcall
xchg
in
mov
add
fcompl
jb
test
shrb
xchg
sub
mov
jecxz
or
rcrb
push
adc
mov
inc
jbe
and
sub
mov
push
and
and
imul
fcmovu
and
dec
add
mov
pusha
xor
cmp
dec
mov
sarl
mov
push
xchg
out
pop
mov
popa
push
jg
testb
scas
pop
and
mov
xchg
jmp
inc
and
push
std
mov
adc
sahf
pop
mulb
cwtl
push
jb
push
pop
sbb
pop
movsl
outsl
pop
push
ret
xchg
pop
aaa
mov
mov
pop
and
push
imul
cmpsl
push
imulb
jg
bound
sbb
xor
jmp
sbb
push
sub
sti
pusha
fsubl
insb
pop
cltd
clc
push
outsl
imul
or
and
aad
xchg
and
sahf
int3
das
push
outsb
and
inc
push
sbb
call
addl
scas
pushf
negb
ljmp
xchg
test
add
std
jae
test
jmp
fs
dec
push
inc
cmp
jo
pop
insl
test
stos
push
push
add
push
stos
pop
jge
pop
sub
sbb
mov
mov
test
pushf
mov
mov
inc
adc
test
push
adcb
xchg
in
les
push
sub
pop
mov
aad
mov
dec
dec
rcrb
cmp
inc
repnz
mov
inc
popa
pop
into
enter
adc
dec
enter
outsl
movsb
into
mov
xchg
push
addr16
scas
enter
std
cmp
testb
add
mov
mov
cmp
mov
and
sbb
jl
popf
mov
inc
test
fsubs
subb
xorb
daa
pop
out
push
das
test
jb
and
sti
scas
inc
call
mov
mov
jl
sbb
hlt
pushf
push
into
int3
out
sub
or
adc
jb
dec
cmp
mov
add
mov
sub
loopne
xchg
notl
push
cmp
arpl
and
add
int3
and
mov
int3
xor
mov
dec
imul
lds
int3
imul
mov
outsb
jl
mov
mov
mov
mov
rcr
fcomi
jno
push
xchg
pop
stos
lods
mov
rcrl
subb
pop
inc
mov
daa
fcomps
subb
scas
push
gs
test
mov
mov
addl
int
test
xor
inc
xor
cmp
inc
sub
xor
js
xor
cmp
jle
call
in
push
test
nop
pusha
xor
mov
mov
lods
pop
movsb
rclb
enter
les
je
inc
xor
pop
cmp
push
push
push
cld
stc
push
loop
add
js
jecxz
jb
push
test
jl
jecxz
jb
push
xchg
or
ja
fisttps
shrb
push
cmp
cmp
jo
add
and
or
arpl
lods
daa
push
adc
sbb
movsb
std
shrl
mov
push
scas
test
es
adc
mov
xchg
cmp
jae
xlat
xchg
jb
test
mov
xchg
pop
lods
or
in
test
and
mov
adc
je
cmp
mov
je
jg
xor
cmc
xor
pop
sub
mov
sub
out
xor
test
outsb
lods
cwtl
pusha
inc
xchg
xchg
sub
roll
inc
xor
and
int
mov
fnclex
push
outsb
mov
data16
and
adc
mov
test
mov
jbe
movsb
xchg
out
xor
mov
test
into
jae
addb
mov
test
jo
jl
insb
js
sbb
cwtl
pusha
int3
adc
shld
jecxz
callw
pop
dec
in
pop
mov
insb
push
fmull
dec
lods
aam
dec
xchg
shlb
sub
enter
les
pop
fiadds
mov
notb
pop
inc
lahf
out
test
jecxz
pop
xchg
shll
fs
cmp
pop
dec
dec
mov
mov
mulb
out
push
push
or
xchg
mov
imul
pop
lods
xor
mov
outsb
test
mov
push
jge
jl
test
sub
lods
xchg
sbb
fmuls
int3
movsb
daa
xorb
repnz
mov
push
push
mov
stos
into
pop
outsl
stc
push
fsubl
xchg
dec
cmp
push
jo
push
sub
fs
dec
xchg
push
je
push
pop
pusha
jecxz
test
push
je
inc
and
pop
dec
dec
jmp
pop
arpl
fistpl
outsb
push
ret
cmp
shr
xor
pop
xor
jbe
jmp
idivl
cmpsb
and
stos
push
daa
gs
in
movsb
xlat
out
pop
std
repz
and
pop
bound
jo
pop
mov
push
or
push
jb
pop
pusha
aam
sub
pop
ds
stc
mov
push
mov
add
mov
mov
fadd
xchg
int3
in
sbb
mov
and
xchg
lock
xchg
mov
jno
sub
in
insl
cmpsb
sbb
dec
mov
adc
add
adcl
and
call
fcoms
pop
pop
ret
in
rcrl
sub
fwait
enter
xor
arpl
pop
inc
mov
jo
pop
jg
scas
in
jno
dec
ret
stos
dec
add
shl
or
jp
mov
mov
jmp
cmp
hlt
test
sub
cmpsb
sar
jmp
loop
test
leave
stos
popf
jae
scas
jbe
scas
ds
mov
imul
sbb
xor
xchg
pushf
pushf
add
repnz
mov
sbb
and
sub
inc
mov
pop
or
jg
push
push
int3
adc
cmp
std
fsubs
jne
addr16
pop
lds
mov
mov
ss
movsb
arpl
or
pop
jp
adc
jns
sub
cmp
mull
xchg
cmpsb
add
dec
dec
mov
add
xor
movsl
mov
repnz
adc
loop
pop
pushf
lahf
ret
popf
xchg
and
test
mov
mov
xor
das
cmp
add
sub
mov
rorb
pop
inc
scas
pop
das
in
mov
shlb
dec
push
clc
ja
cmp
add
add
mov
jmp
out
cld
outsb
sahf
jl
mov
icebp
jmp
jne
mov
cmc
out
sahf
mov
inc
fsubr
js
data16
pop
test
cmp
cltd
ret
pop
sub
cmp
lods
pusha
fsubrs
dec
add
mov
and
cmp
jnp
lock
adc
cmp
out
lods
jmp
mov
adc
repz
int3
cmpsb
ret
cwtl
pop
bnd
and
lret
pop
stos
pop
pop
aaa
inc
sbb
jbe
mov
xorb
adc
add
loope
hlt
cmp
jmp
loopne
repz
mov
dec
movsb
push
mov
jg
into
mov
xchg
and
add
pop
ret
adc
xor
sbb
imul
int3
in
scas
mov
xor
xchg
mov
imul
lods
mov
mov
xchg
sub
pop
aas
xor
out
push
pop
mov
pop
push
jmp
movsb
pop
pop
or
push
or
lret
jno
in
cmp
inc
xchg
mov
mov
test
mov
sub
or
test
lods
sbb
aaa
test
dec
xchg
inc
bound
rolb
std
pushf
ljmp
bound
stc
mov
je
jo
jae
pushf
pop
xchg
mov
pop
pop
lods
jmp
lock
jb
mov
bound
test
adc
mov
int3
mov
stos
jnp
inc
out
pushf
xorl
call
stos
movsb
repnz
addb
ja
rolb
mov
ss
out
pop
stos
cmp
loop
sbb
push
andl
dec
mov
sbb
cltd
push
fs
jne
dec
add
jo
es
pop
jg
repz
jo
ss
add
or
decb
mov
sahf
sub
cmp
add
mov
lret
in
sbb
pusha
cs
test
mov
call
dec
cs
jge
dec
pop
rclb
mov
in
in
pusha
fwait
mov
fs
pop
fcomps
popf
sti
mov
je
fisubrs
jae
aas
aas
stos
andb
xchg
push
push
push
cs
cmpsl
mov
movsb
lods
xchg
movsb
dec
mov
mov
sbb
adc
js
adc
push
xchg
jge
push
cmp
xor
mov
dec
dec
lods
mov
and
pop
push
push
dec
mov
mov
and
jne
pop
out
sub
int
dec
add
or
mov
fs
and
in
cwtl
mov
sub
test
adc
sahf
or
and
pop
or
int3
xchg
popa
aad
cltd
repz
movsl
imul
test
mov
lret
mov
lock
sahf
das
pop
sti
inc
mov
add
mov
stos
inc
mov
int3
repnz
call
out
leave
inc
sub
sub
mov
lcall
test
call
test
sub
bound
adc
repnz
sarl
popa
mov
mov
ds
jmp
aas
and
cli
add
or
sub
aam
push
jb
hlt
mov
fwait
movsl
and
lahf
lret
jo
mov
mov
std
fsubrs
mov
les
mov
movsb
test
andb
test
ret
xchg
pop
and
xchg
test
push
mov
jbe
adc
dec
into
fsubl
sub
mov
pop
adc
xor
movsl
add
pop
or
cmp
adc
mov
pushf
out
xor
jle
test
pop
and
imul
nop
lods
or
movl
sub
lock
outsl
lret
ds
and
sbb
cli
mov
sbb
mov
mov
mov
lcall
fdivs
fsubrs
xor
push
add
and
lea
popa
mov
jo
nop
xor
test
icebp
ret
mov
test
outsl
in
push
xor
mov
je
lods
pextrw
popa
and
xchg
xchg
movsb
add
testl
sbb
push
in
dec
push
pop
mov
imul
pop
and
sub
sahf
repnz
popa
pusha
addr16
jno
sbb
repnz
or
adc
decb
or
popf
int3
jmp
mov
xor
mov
repnz
movsb
inc
outsb
es
aas
lods
insb
scas
je
gs
sub
aam
mov
stos
jno
sub
jnp
sbb
or
or
sub
lret
movsl
adc
xor
xor
mov
arpl
aas
scas
xlat
mov
push
iret
cmp
sti
hlt
mov
lods
mov
pop
jl
sti
popa
sbb
rol
lock
or
dec
adc
aam
lods
loopne
ja
cmp
cwtl
mov
mov
movsb
arpl
mov
dec
addb
cmp
mov
xchg
pop
psubd
das
bound
push
mov
cmp
mov
mov
int3
or
testl
ficomps
sti
xlat
fistpl
enter
lahf
mov
arpl
push
mov
jle
int3
push
mov
jae
push
mov
jl
andb
fcmovu
sbb
subb
fdivrl
push
sub
xor
cmp
repnz
orb
test
test
pop
stos
push
insb
loop
outsl
icebp
pop
leave
jnp
xor
mov
mov
xor
mov
pop
sub
das
mov
scas
daa
fldcw
xchg
ss
ljmp
mov
adc
xchg
xchg
ja
jne
and
sbb
movsb
push
shrl
jmp
popf
push
mov
pop
shlb
test
mov
push
push
loopne
fs
and
pop
cli
int3
repnz
inc
xchg
xchg
insb
push
xchg
sbb
xchg
icebp
push
idivl
pop
and
cmpsl
jb
jecxz
lds
std
fwait
dec
mov
inc
movsb
or
add
mov
mov
mov
push
inc
sub
cwtl
movsb
das
aam
pushf
imul
sbb
int3
jmp
mov
orb
mov
stos
mov
jb
cmp
and
mov
addr16
insb
test
xchg
sbb
sub
lret
adc
xor
js
decb
jge
or
dec
rclb
xchg
add
insl
lods
xor
mov
mov
insl
cs
test
gs
xorb
mov
sub
cmpsb
jne
fisubrl
shrl
push
idivb
mov
sub
push
pop
std
lret
pop
iret
and
sbb
loopne
fmulp
test
and
into
adc
enter
ret
aam
sbb
ret
repnz
mov
jmp
push
aas
sub
sbb
test
sbb
and
mov
xchg
icebp
mov
dec
jle
mov
insb
dec
popf
jl
fildll
and
mov
arpl
fdivl
int3
push
xchg
int
adc
jl
sarb
xor
xchg
jo
dec
jp
stc
jge
jmp
clc
jae
in
addr16
and
jle
mov
sub
std
outsb
jg
push
popf
mov
push
movsl
aas
dec
ljmp
cmc
mov
pop
lods
mov
or
jl
mov
test
arpl
jo
mov
jns
xor
lret
add
jge
test
das
pop
push
dec
dec
sub
lret
das
adc
fwait
and
cmp
jae
lret
pop
stos
xchg
adc
dec
adc
mov
mov
cmpb
lock
scas
ror
mov
push
stos
or
mov
lret
out
mov
pop
xchg
fdivs
mov
mov
sahf
rcrb
push
into
dec
mov
jl
outsl
lret
sub
call
mov
and
nop
lret
dec
lds
dec
push
lods
cmp
push
pop
and
repnz
jmp
jno
sbb
pop
push
movsb
bound
cld
stos
pop
insb
mov
insb
lret
pop
lahf
xchg
shrl
lret
mov
int3
xchg
mov
js
sarl
iret
test
pop
dec
fisttpl
xchg
mov
cmc
js
imul
push
xchg
test
das
and
mov
out
jb
stos
pop
lret
popa
test
mov
push
sub
push
push
lret
mov
subl
jl
mov
sub
jecxz
cmpsb
xchg
jl
push
lret
out
mov
cs
fistpll
dec
jl
movsb
dec
lret
sbb
test
xor
mov
inc
leave
dec
or
movsb
dec
rolb
pushf
dec
leave
jno
xchg
cld
and
add
cs
inc
leave
mov
fs
cmpsl
arpl
push
push
into
movb
or
cmp
mov
dec
rol
in
loop
pop
mov
push
lcall
fdivp
sub
and
adc
inc
jl
xchg
or
jmp
pop
clc
push
push
insb
jle
push
push
pop
int3
inc
pop
mov
je
cmp
lods
dec
push
jb
and
adc
dec
sbb
pop
xchg
lea
cld
clc
bound
mov
xchg
lock
jnp
push
lods
iret
jle
push
or
das
movsl
cld
mulb
ret
test
pushf
add
sub
arpl
push
sbb
mov
cmp
mov
push
mov
jnp
mov
rcrb
inc
cltd
imul
mov
mov
cwtl
aas
pop
mov
xchg
loopne
int
ljmp
pop
test
adc
push
sub
mov
dec
cwtl
push
xor
pop
mov
cwtl
xchg
jl
mov
fucom
movsb
test
shlb
push
pushf
pop
mov
mov
mov
xchg
fldt
jno
mov
mov
int
jno
je
dec
sbb
sub
scas
push
jmp
ror
sub
sahf
pushf
cmpsb
jns
in
mov
jbe
or
mov
mov
cmc
int3
lcall
mov
bound
jno
jmp
sub
mov
xchg
test
dec
sub
ss
arpl
or
xchg
mov
pushf
mov
test
nop
repnz
jnp
xchg
xor
push
xchg
pop
gs
xor
xchg
push
in
xor
pop
inc
xchg
fs
fnsave
jmp
js
xchg
lods
out
aas
popf
xor
mov
xor
test
test
shlb
gs
in
xchg
push
movsl
and
mov
bound
test
lds
mov
jg
jl
mov
bnd
push
pop
data16
pop
dec
enter
xor
mov
stos
stos
xchg
cmpb
outsl
sarl
insb
push
aam
push
imul
jne
inc
je
pop
int3
and
lods
popa
inc
push
inc
xor
mov
pop
das
adc
cmpsb
jne
xchg
mov
and
adc
inc
push
mov
daa
jg
rolb
lret
out
pop
inc
push
xchg
arpl
inc
pop
xchg
jbe
dec
insb
cmp
iret
int3
jno
shl
lea
mov
test
sbbl
lods
aad
stc
sbb
adc
mov
xor
cmp
outsl
int3
cwtl
inc
pusha
test
fs
dec
pop
sahf
stos
dec
pop
xlat
mov
sub
fcomip
jae
dec
jo
mov
int3
aam
mov
jmp
lods
ljmp
adc
cmpsl
les
mov
xchg
jl
cltd
ja
push
test
jecxz
lret
shlb
push
int3
xchg
leave
add
sub
sub
lahf
cld
jnp
sarl
pop
mov
leave
sub
orb
dec
jl
lret
push
pop
nop
cltd
jne
xchg
pop
sbb
test
lea
jns
insb
adc
pop
mov
enter
andl
cmpsb
fwait
iret
mov
ja
outsl
je
xor
in
xchg
inc
push
test
sub
sbb
fidivrs
cs
mov
inc
jb
pop
inc
pushf
popf
cmp
push
xchg
lds
sahf
lahf
mov
add
adc
stc
mov
in
rorb
push
loop
popa
mov
sbb
cwtl
fdivl
jns
std
mov
pop
push
push
lret
in
and
fists
ss
stc
aaa
jne
sub
and
aaa
jae
lods
fcmovb
mov
in
and
add
int3
stc
orb
sub
scas
je
pushf
nop
leave
gs
xor
sbb
scas
nop
sub
cltd
xorb
jle
imul
leave
fwait
push
nop
dec
pusha
jmp
mov
mov
repnz
pop
push
and
addl
push
jl
pushf
imul
je
xor
pop
dec
xor
adc
xchg
lahf
int3
mov
dec
and
pop
imul
fisttpll
aaa
xchg
xchg
inc
and
or
dec
into
mov
iret
mov
adc
jnp
xchg
jnp
repnz
dec
adc
cmpb
jno
sub
push
xchg
ja
shrb
cltd
xor
jns
xchg
xor
int3
out
in
icebp
or
xchg
xor
outsb
mov
cmp
cmpsb
mov
arpl
xchg
adc
sbb
xchg
jo
or
dec
mov
push
pop
mov
jnp
sub
cmp
mov
jmp
dec
orb
stos
inc
and
inc
cmpb
pop
ficomps
mov
xor
sub
andb
sbb
sbb
xchg
data16
mov
subb
sbb
pop
and
js
mov
cmp
pop
push
js
sbb
int3
xchg
jge
insl
idivl
pop
imul
int3
dec
mov
add
jnp
pop
fmull
cmpsb
adc
mov
sub
sbb
adc
jo
imul
jb
jne
test
jecxz
div
cld
sbb
xor
sbb
sbb
scas
pushf
jae
cmpsb
xor
outsb
mov
pushf
lods
jge
mov
aaa
test
js
cmpb
pop
xchg
jns
xor
xchg
jae
sub
arpl
mov
xlat
xorb
stos
popf
bound
mov
xchg
movsb
jo
xor
cmp
leave
repz
sahf
mov
arpl
sbb
stos
push
stc
fdivs
jge
mov
stc
arpl
loope
in
bound
xor
cmp
mov
loopne
pop
int
cli
jle
cmpsb
and
ds
and
and
mov
loopne
inc
stos
add
hlt
pop
int
sbb
sub
jle
rolb
test
jns
jge
insb
jmp
pusha
jle
imul
orb
jle
mov
add
out
pop
push
or
test
mov
xchg
and
mov
dec
insb
mov
adc
xchg
mov
jg
pushf
xchg
lea
movsb
fisubrs
jo
mov
daa
lods
fs
js
arpl
and
jno
shrb
add
lods
mov
and
jmp
scas
dec
inc
sub
in
adc
aaa
sub
mov
mov
mov
sub
jno
clc
xchg
pop
mov
jl
int3
mov
sub
test
fldl
andb
je
movsb
inc
pop
mov
mov
aaa
outsl
mov
sub
leave
jecxz
inc
psrlq
mov
push
mov
xchg
mov
xchg
mov
mov
stos
daa
jb
sub
cmp
push
test
cmpb
adc
mov
testb
and
lods
test
lahf
les
mov
push
mov
icebp
sub
inc
jns
ret
mov
pop
fs
inc
ficoml
sub
xor
and
mov
stos
mov
sub
sbb
push
stos
icebp
leave
in
movsb
out
insb
mov
jo
test
shrb
dec
mov
ja
xor
mov
mov
xor
pop
lret
rolb
mov
jp
fwait
adc
jns
cmpl
test
pop
loopne
fwait
xchg
outsb
sub
out
ss
dec
add
mov
std
xchg
mov
jmp
lods
sbb
jns
xor
mov
int3
xchg
xchg
movsb
scas
xchg
mov
jo
push
jl
movsb
aas
shlb
push
stos
sti
push
pop
push
nop
aam
xor
fildl
loope
mov
inc
addb
adc
or
arpl
bound
lock
and
mov
jb
xchg
xchg
aas
gs
dec
outsl
mov
push
das
pushf
or
jl
lds
sbb
repnz
cmp
out
fldt
mov
fisttpl
lods
mov
leave
outsb
xor
push
popa
mov
lret
cld
dec
and
out
mov
int3
int
jle
movsb
sub
rolb
out
cwtl
adc
inc
adcl
xor
dec
bound
pop
and
mov
jb
sub
cld
mov
sbbl
scas
repnz
stos
xor
push
pop
cli
inc
test
sub
fdivs
bts
fs
dec
iret
add
cmpsl
scas
and
addl
test
mov
sub
scas
xchg
movsl
pusha
mov
cwtl
and
fs
les
pushf
or
mov
jl
mov
pop
sbb
inc
mov
sar
xchg
cmpsb
pop
dec
lea
cwtl
lret
mov
pop
cmp
and
xchg
test
popf
into
adc
les
arpl
mov
push
xchg
cmp
inc
data16
sub
je
mov
pop
je
inc
das
es
jbe
xchg
test
sbb
and
xchg
lods
mov
je
mov
cmc
test
jp
das
outsl
cmp
shll
xchg
push
test
dec
mov
bound
lret
into
cli
dec
pop
sbb
mulb
xchg
xchg
bnd
lds
fs
and
add
sub
test
sub
mov
cs
push
jnp
mov
outsb
into
fcomps
dec
push
imul
push
push
rolb
push
lret
mov
mov
xor
push
movsb
pop
test
rorl
or
lret
pop
xlat
sbb
or
push
cmp
pop
add
sub
mov
mov
mov
insl
test
lret
inc
add
subb
jb
in
movsb
push
test
outsl
stos
movsb
rclb
inc
subb
lret
popf
mov
jno
js
add
jl
es
aam
repz
movsb
jo
into
lret
ror
stc
add
movsb
insb
add
daa
jo
orb
xchg
pop
sbb
xchg
scas
pop
je
pop
pop
rorl
hlt
jg
test
jl
je,pn
dec
xor
leave
xchg
cs
sbb
xchg
mov
jns
mov
xchg
popf
outsl
xor
mov
and
cmp
aam
lock
lret
js
aaa
mov
push
xchg
mov
sub
xor
xchg
je
jmp
loop
push
xchg
jl
jnp
call
outsl
jg
jp
addl
pushf
ljmp
pushf
jo
pushf
popf
sub
je
sbbl
ljmp
insb
mov
xchg
in
and
mov
mov
cmp
xor
insb
xchg
adc
or
mov
fmull
insb
xlat
leave
das
scas
lret
mov
cltd
xchg
or
xchg
cmp
stos
xchg
pop
pop
test
mov
xor
lods
lret
dec
mov
xchg
test
test
arpl
movsb
test
jge
xor
imul
out
push
mov
pop
int3
out
lea
call
cmp
mov
int3
add
cli
fdivr
in
fs
ja
sbb
out
jns
scas
or
jno
inc
cmp
mov
lret
mov
mov
sub
pop
jo
dec
js
je
pop
daa
and
repnz
int3
jae
mov
lods
jge
push
adc
cmp
sti
repnz
arpl
ljmp
iret
pop
and
lods
aad
xchg
sub
cltd
mov
iret
jmp
pop
mov
inc
idivl
xchg
jle
add
xchg
jecxz
pusha
and
sub
inc
mov
filds
lret
sub
movsb
ljmp
pop
sahf
mov
leave
or
test
mov
mull
pushfw
dec
testl
sbb
sub
pushf
leave
popa
jp
xchg
push
sub
xchg
arpl
fmuls
js
lahf
js
cwtl
jl
add
es
or
xchg
mov
sub
mov
repnz
shll
jae
outsb
into
pushf
fwait
xchg
test
lea
pop
xchg
mov
xchg
mov
mov
push
loop
movsb
mov
dec
push
cs
or
in
push
jo
fcmovnbe
dec
cmp
in
push
adc
das
lret
mov
xor
xorl
test
daa
arpl
cmp
and
sbb
pop
movsl
ss
mov
add
scas
pop
and
imul
lods
jne
jl
mov
js
xor
insl
jns
mov
sbb
sub
insb
test
jne
jp
jg
sub
fists
scas
xchg
mov
scas
gs
push
dec
add
and
ja
jnp
gs
xchg
pop
fistpll
mov
jge
repnz
fldcw
movsb
sbb
pop
jo
adc
leave
xchg
mov
ret
mov
int
rcrl
loop
adc
push
scas
xor
out
lods
stos
stc
xor
das
pop
push
scas
subb
stos
jle
cmpsb
insb
jl
jl
aad
insb
arpl
test
mov
stos
mov
aas
lods
mov
xor
mov
xor
lock
xchg
mov
and
in
mov
jg
adc
cwtl
arpl
push
lods
in
fwait
lea
xchg
xchg
xchg
add
jl
outsb
and
inc
or
xor
jno
sub
push
jnp
scas
sub
jecxz
cmpsb
xchg
fsubrs
cltd
cmp
jl
outsb
aad
stos
inc
call
icebp
sub
push
adc
movsb
clc
in
das
jecxz
cmpsb
xchg
add
dec
adc
imul
sbb
outsb
mov
mov
pop
rcr
cmp
and
add
xchg
ss
xchg
imul
mov
es
jl
xor
test
pop
pop
sbbl
das
movsl
es
stc
cli
sarb
xor
sub
mov
neg
les
insl
mov
test
push
andb
pushf
test
sub
test
pop
shl
sub
mov
pop
popf
out
xchg
push
adc
dec
lock
int3
push
jb
mov
xchg
lret
sub
imul
mov
pop
xor
pop
and
repnz
and
mov
js
mov
xor
out
pop
shrl
cmc
mov
in
mov
xor
inc
cmpb
ds
inc
inc
or
js
adc
pop
test
or
sub
cmp
sub
push
fisubl
push
aam
fs
std
outsb
fs
sub
dec
mov
cmpsl
xchg
mov
lret
scas
xchg
movsb
pushf
sbb
and
push
fstl
push
xorl
lock
insl
arpl
repnz
xchg
sbb
push
shl
mov
test
mov
jmp
andl
arpl
loop
sbb
xchg
pop
xchg
or
dec
jp
pop
orb
mov
call
or
insb
mov
mov
loope
sarb
adcl
popa
pop
add
xchg
insb
push
arpl
pusha
mov
rcrb
mov
imul
in
sarb
cld
push
xchg
sbb
xchg
jns
mov
push
jp
xchg
lret
enter
lahf
jbe
fsubl
cmc
imul
insb
jne
mov
xor
mov
ret
mov
pop
ret
scas
inc
mov
cmp
xor
sbb
pop
adc
jo
jmp
addr16
ret
push
scas
pop
dec
repnz
pop
lcall
leave
mov
xchg
sbb
pop
repnz
cmp
push
outsb
and
mov
stos
jno
cmp
fwait
ror
xor
pop
aas
pop
cmpsb
sarl
mov
jnp
adc
insl
adc
mov
cwtl
cs
mov
fwait
cwtl
mov
js
es
xchg
push
dec
lock
lods
notb
mov
sub
cs
adc
mov
mov
inc
push
push
xor
stc
mov
push
fldt
mov
in
popf
test
xor
cli
paddq
push
ret
out
lods
xor
int
and
enter
pop
jp
daa
addr16
xchg
sub
lea
mov
lods
xchg
mov
ss
out
mov
ficompl
mov
pop
dec
sub
in
imul
push
dec
jg
sbb
sahf
shlb
mov
hlt
cs
cmp
mov
add
jecxz
ljmp
ret
out
negl
test
xor
lcall
and
or
pop
cmp
push
test
rorl
push
aas
lds
mov
outsl
push
mov
pop
shlb
ret
cmpsb
mov
inc
cwtl
cmp
outsb
push
sarb
fwait
bound
cmp
xchg
shrl
xchg
mov
dec
or
jecxz
rclb
xor
mov
ret
xchg
repnz
fistl
outsb
jo
or
mov
lret
mov
cmp
mov
dec
fwait
xchg
or
xchg
pop
jp
stos
sub
aaa
sub
cmpb
and
inc
fldcw
aaa
fldenv
pop
lret
insl
mov
cmp
cld
arpl
push
mov
aaa
out
sbb
mov
sub
dec
xchg
ret
insb
or
push
movsb
out
push
outsl
mov
lods
lods
mov
fs
mov
int3
mov
int3
cmp
fnstcw
ficompl
leave
inc
jmp
xchg
jecxz
push
inc
xor
cmp
out
xor
repz
xor
xchg
mov
aas
leave
mov
inc
jns
insl
aad
inc
repnz
sub
sbb
ret
xor
arpl
inc
and
rorb
mov
test
push
movsl
sub
mov
mov
icebp
movsb
repnz
push
fildll
jmp
mov
push
dec
lcall
movl
jle
cmp
jge
or
lea
shrl
push
cmp
mov
gs
pop
and
gs
imul
sbb
mov
test
in
je
or
push
mov
movsb
repnz
aas
shrl
mov
sub
mov
fstpt
pop
xor
stc
roll
inc
sub
jmp
test
cmpsb
lds
mov
jl
jne
stc
jno
push
mov
icebp
sub
adc
cmp
xchg
test
xor
inc
in
dec
arpl
popa
mov
sub
pop
jae
or
imul
jae
xchg
push
rol
sbb
push
sub
pop
icebp
sbb
lahf
push
sbb
in
pop
insl
js
and
push
add
fs
cs
pop
cli
popf
test
fldenv
add
fcomps
mov
sub
test
lods
sub
in
neg
movsl
pusha
divl
mov
int3
adc
add
or
or
and
adc
imul
data16
adc
aad
cmp
fisubl
inc
xor
mov
loopne
movsl
dec
fstpl
sub
mov
cmp
lods
cwtl
cwtl
xor
stc
sbb
jno
jg
xorl
imul
aad
into
adc
jg
es
mov
pop
int3
mov
pop
lahf
lret
pushf
data16
push
dec
popf
mov
push
push
mov
sub
mov
in
fnstenv
mov
testb
sbb
push
xchg
xchg
mov
into
ret
in
inc
mov
sub
and
sbb
sbb
dec
fs
popa
add
xor
int3
add
mov
xchg
scas
test
test
aam
xor
adc
xchg
insb
movsl
xorl
dec
sub
nop
xor
sbbb
push
push
pop
and
dec
lds
addr16
insb
push
fiadds
ljmp
repz
lods
daa
cld
xchg
insl
pop
mov
outsl
mov
cmp
mov
out
sbb
arpl
xchg
xchg
and
jg
adc
arpl
arpl
sub
pop
pop
push
test
and
arpl
mov
mov
push
sbb
cltd
pushf
push
dec
adc
push
xchg
xchg
jle
and
xchg
or
mov
push
mov
in
shrb
add
mov
int3
pushf
test
cmp
cs
push
je
es
jo
push
in
fwait
insb
shrb
call
es
fs
cltd
je
fsubrl
cmp
fsubs
xchg
aam
push
xchg
shlb
xchg
int3
and
mov
daa
and
in
shrb
les
mov
int3
ret
xor
aas
outsl
stos
das
negb
lods
cmp
pop
cmp
cltd
xor
mov
xlat
push
xchg
xor
push
pop
dec
clc
fs
lock
jge
cmp
push
jp
inc
jno
in
cmpsb
adc
shlb
ficoms
fisubs
mov
mov
pop
sub
daa
mov
push
inc
lret
add
outsl
test
mov
sbb
ja
scas
sub
fs
lret
jns
cli
aas
fisubrs
cmp
xor
mov
loop
imul
sub
pop
hlt
test
xlat
fwait
rorl
insl
mov
jae
jns
sub
fists
cltd
fs
adc
aas
cmp
sub
cmp
and
mov
mov
insb
mov
stos
mov
cwtl
push
cmp
cmpb
call
fnstcw
mov
fs
push
repz
pop
ret
lods
jnp
mov
emms
inc
aaa
arpl
pop
mov
jecxz
inc
lcall
mov
pop
int3
inc
mov
je
adc
pop
pop
jle
lret
jle
sub
fs
mov
jb
pop
fwait
dec
inc
ret
leave
jb
test
bound
mov
push
jl
in
dec
push
adc
jae
divb
aaa
popa
fidivrl
dec
jo
cmp
mov
aas
scas
xchg
add
cmp
push
jns
cmpb
popa
pop
enter
popf
adc
cwtl
aas
jmp
shlb
fisubrs
dec
imul
arpl
lret
lods
sbb
aaa
or
pop
lea
xchg
xchg
arpl
push
fs
pop
jg
loopne
and
outsl
sub
mov
mov
fimull
xor
jns
mov
jle
jg
aas
fcomps
mov
pusha
and
xor
lods
ja
subb
gs
mov
adc
sub
or
jnp
cltd
add
xchg
sarb
mov
mov
lods
mov
lock
scas
test
add
ret
mov
lcall
cmp
xchg
jmp
in
popf
das
pop
adc
sti
xor
xchg
xchg
je
addr16
sbb
xchg
aaa
push
lret
sub
mov
out
insb
mov
or
jo
jle
cmp
mov
cmc
loopne
loope
js
sub
andl
sub
insl
mov
movsb
jae
pusha
mov
sub
out
pusha
insl
fidivs
xchg
mov
movsb
shlb
dec
fs
in
fimuls
jb
and
in
xor
jno
inc
pop
mov
adc
je
xchg
dec
mov
sub
cld
jns
dec
aad
inc
aaa
add
dec
in
rcrl
fwait
push
jne
dec
inc
adc
lods
outsb
xor
jg
ret
fidivl
mov
or
cmc
xor
mov
out
jae
out
call
mov
jns
jge
jne
data16
mov
std
fbstp
sbb
mov
or
cmp
dec
xor
lods
pop
enter
out
pop
out
jb
mov
add
insb
sub
add
pushf
lret
xor
mov
bnd
cmc
xor
test
out
cwtl
jl
mov
mov
pop
mov
in
mov
insl
cld
popa
or
mov
aad
pop
andl
jo
xor
xchg
adc
lcall
jmp
mov
loope
data16
cmpsb
sbb
test
lods
das
ret
and
adc
mul
dec
repnz
ret
rorl
stos
sarl
jbe
int
sbb
inc
insl
push
and
sub
pop
and
xor
pop
pop
movsb
pop
cmc
fidivrs
mov
lds
xor
and
jp
cld
xchg
xor
inc
adc
fimull
mov
adcb
mov
hlt
jo
imul
pop
adcb
mov
inc
lahf
orb
and
mov
mov
and
scas
sub
pop
push
sbb
xor
dec
push
jno
inc
push
xchg
nop
xchg
lods
pop
mov
xchg
imul
outsl
movsl
add
xchg
dec
adc
xchg
movsb
and
jnp
mov
fnstcw
int3
bound
jno
cld
dec
dec
gs
iret
mov
pop
xor
jmp
fbld
test
cltd
pusha
jmp
nop
callw
push
lret
repnz
out
mov
gs
mov
mov
pop
mov
test
js
shll
jae
dec
mov
sbbl
adc
movsb
das
in
push
ds
jo
mov
push
xchg
mov
iret
or
push
cmpsb
rolb
sub
fstpt
cmc
mov
mov
mov
cmp
bound
scas
out
mov
lods
dec
icebp
sahf
out
adc
insl
add
xchg
int3
jge
or
pushf
adc
scas
push
sub
outsl
test
jecxz
ret
mov
lret
jo
pushf
lods
pop
ret
cld
dec
mov
popa
jnp
sbbb
xorb
repnz
cwtl
push
arpl
test
jl
jae
loop
out
std
mov
xchg
pop
in
jecxz
das
mov
sbbl
test
imul
fmul
out
pop
fdivs
and
imul
inc
and
or
jno
stos
nop
insb
inc
jne
pop
in
ss
sahf
clc
adc
outsb
jle
sub
cmpsl
mov
call
cs
stc
daa
dec
sub
in
fwait
iret
mov
fsubp
nop
xlat
xchg
sub
fcmovnbe
insl
inc
pop
pop
inc
pop
xchg
xorl
jl
push
xor
xchg
sub
outsl
inc
or
mov
and
push
xor
xchg
mov
ret
mov
lds
fisttpll
mov
push
mov
insb
cmp
out
sbb
adc
lds
mov
data16
push
addb
and
mov
fisubrs
mov
mov
in
out
stos
movsb
or
cmpsb
mov
inc
mov
dec
scas
mov
pop
pop
int3
xorb
enter
test
enter
ds
lea
fsubrs
pop
mov
xchg
andl
shlb
or
das
mov
xchg
sbbb
and
repz
aam
pop
sub
sti
outsb
outsl
ss
in
xchg
xchg
adc
mov
mov
in
fstl
nop
popa
test
dec
jb
lods
mov
jb
shrb
inc
inc
sbb
in
orl
lods
push
inc
fcoms
pop
sub
mov
jnp
mov
inc
and
rclb
dec
sub
fldt
lds
inc
mov
adc
add
movb
adc
adc
js
cmp
sub
pop
xchg
pop
inc
fbld
pop
xor
les
fistpl
inc
pushf
call
frstor
das
ja
lea
add
lods
pop
adc
arpl
push
mov
mov
cld
sahf
add
enter
pop
icebp
bound
sbb
loope
loop,pn
push
scas
adc
movsl
xor
mov
fidivs
mov
sub
jns
cwtl
mov
cltd
mov
repnz
sub
mov
test
xor
je
int
fidivs
cli
negl
sar
and
outsb
or
sbb
iretw
int3
stos
popa
add
imul
mov
loopne
enter
inc
sbb
ljmp
scas
daa
push
fs
test
jb
sahf
mov
pusha
adc
add
lahf
lods
push
out
jge
or
dec
test
ds
mov
fnstenv
out
lcall
movsb
mov
movsl
das
dec
pop
push
and
adc
pop
pop
pop
test
push
mov
cmp
lea
ss
out
js
pop
mov
pop
and
frstor
ret
add
cmp
cmc
push
out
in
pop
lock
xchg
cmp
daa
xor
pusha
cmp
pop
test
and
pop
popf
cmp
pop
inc
pop
fwait
cmp
pop
pop
div
pop
add
pop
mov
out
in
and
push
aaa
mov
mov
lret
push
gs
adc
fwait
cs
sub
pop
fnsetpm(287
pusha
xchg
lods
ja
sub
sahf
inc
pop
push
adc
mov
cld
aam
subl
dec
jae
sub
pop
mov
ja
aas
iret
mov
loop
enter
pop
sub
sub
push
mov
xchg
xlat
cmp
mov
jb
sub
out
mov
jmp
pop
lock
aad
stc
lods
loope
add
jo
and
jo
pop
sub
pop
inc
fs
sub
daa
pop
and
and
int3
shlb
into
jno
stc
pop
imul
push
sub
pop
iret
or
aaa
inc
les
sub
testl
mov
lods
dec
mov
sbb
fistps
loop
mov
adc
jns
lcall
pop
adc
dec
xchg
xor
inc
test
cmp
jge
jns
int3
ja
repz
imul
mov
dec
add
push
lcall
sbb
subl
inc
xor
inc
movsl
and
test
inc
fisttps
not
mov
jp
xchg
repnz
mov
mov
jmp
mov
jb
or
orb
loopne
scas
jo
out
pop
nop
xchg
sahf
arpl
mov
cli
int
mov
test
bound
adc
add
mov
insb
mov
fcoms
xchg
jne
sub
out
adc
lock
mov
repnz
sarl
sarl
mov
jg
mov
notb
sub
cmp
movsb
jle
jle
inc
test
cwtl
dec
pop
xor
inc
mov
lods
arpl
sbb
mov
mov
jns
imul
inc
test
clc
mov
pusha
mov
pushf
xor
clc
mov
pop
dec
xor
cmpsl
nop
lea
lahf
leave
cmpsb
outsl
and
pop
fs
sub
popa
imul
out
repz
insl
popf
movsl
xor
jg
mov
inc
fsubr
mov
lcall
jmp
mov
repz
mov
pop
xchg
pop
mov
pop
lds
jno
xchg
aas
dec
mov
pop
movsl
pop
mov
add
jnp
mov
mov
movsl
xchg
jno
xlat
mov
repz
stos
ret
lcall
movsl
jp
cld
les
movsb
push
add
pop
sbbb
adc
jp
mov
movsb
pushf
addr16
arpl
mov
pusha
dec
xchg
or
out
mov
stos
aas
fwait
loope
cmc
pop
fs
push
or
int
sahf
jg
mov
pop
scas
stos
fimuls
nop
mov
leave
xor
mov
mov
mov
cmpsb
cs
out
push
xchg
rcrl
punpcklbw
imul
dec
aam
movsb
gs
mov
xor
push
mov
cmpsb
lcall
aas
ret
pop
add
jg
xchg
xchg
push
mov
add
repz
int
in
mov
ds
in
xchg
or
xchg
out
lahf
mov
enter
adc
movsb
xor
or
pop
or
pop
daa
addb
pop
pop
sub
jae
outsl
insb
and
xor
cmpsl
cli
mov
jb
int3
or
xor
enter
outsb
test
xchg
cld
lret
enter
int3
aaa
and
stc
sub
movsb
jb
adc
or
mov
out
push
sbb
push
int3
loopne
mov
sbb
mov
cmpsb
mov
in
xor
lret
mov
addr16
xchg
push
fdivrl
cld
mov
sub
ds
xchg
jns
xchg
in
inc
push
jmp
out
js
xchg
scas
mov
lods
loope
pop
mov
sbb
in
push
mov
sbb
test
inc
test
clc
mov
mov
enter
out
test
sbb
and
and
add
xor
add
push
sub
movsb
push
pop
lret
std
imul
lret
pop
sarl
scas
and
inc
xchg
or
sti
add
jnp
pop
bound
mov
orl
fidivrl
mov
xchg
cmpl
imul
or
sarb
xor
and
lea
pop
mov
lods
inc
cld
or
push
notl
rcrl
clc
je
fs
imul
out
scas
nop
jp
jno
test
adcb
dec
in
adcl
out
sub
adc
jp
les
js
rolb
sub
les
in
and
cmc
push
repz
add
popa
dec
lcall
je
push
sbb
mov
pop
adc
inc
mov
xchg
add
mov
jge
movsb
dec
int
test
push
adc
and
rorl
lret
xchg
add
mov
mov
add
push
jmp
leave
fcoms
stos
int3
sti
iret
mov
orl
mov
es
sub
dec
mov
xchg
xor
push
sbb
sbb
mov
mov
sub
aad
mov
mov
xchg
fwait
cmp
xor
cli
push
shl
mov
and
imul
les
popa
pop
push
xchg
test
inc
je
loopne
inc
or
dec
insl
ljmp
push
cwtl
lahf
jo
movsb
xchg
pop
inc
xor
inc
xor
inc
xor
xor
lods
js
sarl
int3
test
sti
xor
xor
lods
push
cwtl
aam
pusha
out
pop
cwtl
aam
pop
out
push
cwtl
aam
push
out
dec
cwtl
aam
dec
out
inc
cwtl
aam
inc
out
cmp
xlat
daa
push
cmp
mov
int
pushf
mov
das
lret
push
push
pop
inc
movsb
or
mov
roll
jb
es
lds
mov
cmp
cmc
adc
pop
std
push
fstp
nop
iret
mov
sbb
push
inc
xorb
xor
nop
sti
xchg
shlb
cwtl
aam
mov
push
fcomps
sbb
out
jb
into
mov
insb
inc
xor
jl
fs
xor
jl
pop
inc
xor
jl
push
nop
sbb
sbb
sbb
hlt
cmp
int3
int3
and
jns
and
outsl
pushf
push
cltd
lea
xlat
and
shlb
enter
add
xchg
push
mov
and
cmp
jb,pn
push
ljmp
xchg
add
leave
push
ror
cs
push
xor
lret
inc
outsl
push
in
sarl
repz
movsb
and
mov
jg
mov
or
mov
shll
adc
xchg
addb
in
std
pusha
movsb
icebp
inc
jp
das
rcrb
repz
shll
jbe
cmp
mov
test
scas
enter
mov
je
mov
mov
cmp
add
push
cmp
fldt
dec
pushl
lods
adc
stos
popf
inc
inc
or
adc
outsl
mov
popa
imull
out
repnz
hlt
addb
test
in
sub
pop
add
xchg
inc
mov
lea
mov
mov
jnp
cli
ljmp
nop
testb
mov
mov
mov
std
lds
insl
mov
cwtl
mov
movsb
in
movsb
ret
rcl
lahf
lods
pop
mov
icebp
push
xor
imul
lods
int3
sub
mov
add
sbb
das
add
push
xchg
js
das
dec
dec
lea
scas
mov
orb
mov
je
in
or
or
lret
xchg
loop
daa
aam
adc
cwtl
cmpl
adc
inc
push
bound
stos
outsl
xchg
mov
mov
sub
jo
add
adcb
mov
xchg
cwtl
mov
mov
and
dec
adc
xor
xor
jbe
dec
pushf
repnz
lahf
add
add
push
add
fcos
cmp
xchg
shrb
push
jno
insb
add
or
inc
jae
pop
out
ds
bound
jns
addb
out
iret
icebp
mov
sarl
add
mov
xchg
xchg
call
std
fsubrl
and
fs
movsl
lea
pushf
push
lcall
test
mov
xchg
jb
lods
dec
int3
jno
fisttpl
cmpsb
insl
sub
dec
movsb
xchg
scas
pushf
jae
mov
mov
fisubs
xor
mov
xchg
sub
ffreep
pop
pusha
sbb
sbb
push
fidivs
repz
sub
pop
int
subl
adc
xchg
rcr
por
les
mov
push
sahf
mull
scas
push
mov
cmp
imul
xor
mov
lods
int3
jbe
nop
push
pop
pop
test
fs
pop
lret
stos
mov
orb
mov
xchg
cmp
xchg
js
bound
fcmovnu
and
push
jl
cmpsl
lods
push
test
jbe
shrl
push
sti
ds
sbb
pusha
imul
add
jl
push
mov
insb
lods
cmpsb
cmpsb
or
sub
sub
sub
lret
insl
mov
mov
xchg
pusha
sub
insb
int3
xchg
aas
or
push
shrb
testb
leave
ljmp
cwtl
and
add
stc
sub
fmulp
scas
adc
xchg
inc
inc
jnp
bound
mov
mov
mov
insb
stc
fcmove
cmp
out
loop
xchg
inc
mov
mov
test
and
int
mov
dec
sub
shl
cmp
xchg
mov
xor
sub
shll
push
inc
imul
rcrl
les
cmp
lods
jl
movsb
xchg
mov
outsl
je
jo
pcmpeqd
arpl
and
fidivl
adc
imulb
mov
icebp
xor
mov
insl
cld
cmpsl
inc
cmpsb
jns
ret
aas
jns
sub
xor
mov
jecxz
leave
mov
cmpsb
xchg
cwtl
int3
dec
ret
call
and
mov
xor
push
addb
mov
ljmp
test
insb
pop
aaa
or
pop
es
int
add
das
mov
adc
cwtl
sbb
adc
or
fcomps
push
sub
xor
fsubrl
cmp
pop
int
cwtl
repnz
icebp
xchg
xchg
in
loope
lahf
sbb
js
call
xlat
mov
mov
xor
and
xchg
mov
or
and
fldcw
or
pop
mov
hlt
adc
and
shll
mov
mov
loopne
jmp
cmp
push
mov
pop
test
jb
repz
fcoms
aam
lock
mov
insl
lea
testb
movsb
in
jae
jo
stc
and
mov
shufps
in
les
insl
lds
mov
adcl
sub
sbb
in
xchg
repz
nop
insl
stc
jo
test
mov
shlb
bound
test
add
test
sub
xor
arpl
movsb
cmc
clc
or
jmp
lahf
test
shlb
add
add
xor
in
movsb
jecxz
add
cmp
leave
ret
pop
xlat
pop
inc
test
ss
adc
shl
in
arpl
cmpl
icebp
decb
mov
dec
movsb
iret
adc
and
pop
ss
sub
outsl
fsubrs
sbb
inc
push
cmpsb
dec
jg
lods
lahf
das
in
pop
jns
cwtl
jae
subb
andl
push
mov
cltd
mov
mov
cmp
jns
mov
add
enter
ds
mov
loope
or
pop
xchg
xchg
cmpsb
cmpsb
pushf
mov
mov
mov
fdiv
push
or
loop
repnz
pop
mov
daa
mov
pop
bound
inc
inc
xor
sarb
dec
cli
daa
mov
bound
add
sub
cmc
pop
xor
xor
stc
push
sub
mov
fsubrs
call
cli
outsb
mov
movsb
mov
arpl
sub
inc
mov
and
popa
mov
xchg
pusha
cmp
sahf
xchg
bound
pop
gs
push
lcall
scas
lods
movsb
nop
in
sub
js
jg
int3
fs
or
arpl
cmp
call
bound
enter
loope
pop
add
jo
xor
xchg
int3
lods
mov
cld
dec
jmp
filds
mov
filds
xchg
xor
leave
scas
mov
sahf
aas
push
jp
pop
mov
push
xchg
xchg
push
jge
sti
cli
jecxz
mov
mov
adc
and
xchg
pop
int3
lock
jmp
sbb
or
xchg
into
daa
cltd
xchg
lret
mov
mov
test
cmp
scas
sbb
insb
adc
pop
aad
aad
mov
mov
or
movsb
pop
xlat
lcall
mov
mov
repz
call
aad
lea
pop
pop
mov
cmc
popf
xchg
es
aad
loope
imul
push
repnz
andl
sbb
sbbb
repz
shr
xchg
movsl
add
mov
outsl
sbb
xchg
dec
jb
mov
jbe
lea
inc
sub
lahf
sub
daa
mov
jmp
xor
dec
mov
lods
mov
out
lods
or
xchg
cwtl
add
jbe
mov
movsb
jg
xchg
inc
mov
mov
in
pushf
xor
sbb
xlat
jmp
xchg
repnz
dec
mov
in
sub
adc
out
and
dec
cmp
jo
popa
cli
sub
mov
fwait
dec
push
sti
pop
insb
clc
fsubrs
add
and
mov
pop
lahf
sub
mov
rcr
sub
movb
mov
xor
lret
push
insb
sub
scas
ds
call
mov
pop
inc
push
mov
iret
push
push
xor
xor
xchg
dec
lods
push
mov
rorb
jo
fs
mov
clc
jl
dec
in
mov
pop
fstl
shlb
push
pop
mov
subb
cmpsb
jmp
sub
cli
in
inc
movsb
push
mov
jns
in
xor
sub
mov
add
jmp
mov
pusha
lods
xor
in
or
and
push
add
or
fwait
dec
test
sub
mov
dec
push
mov
outsl
pop
test
test
fistl
test
imul
xchg
xor
xor
mov
mov
mov
cmp
dec
js
add
pop
sub
je
cwtl
xchg
pop
push
mov
sub
stos
xchg
inc
mov
aaa
pusha
pop
dec
cltd
int3
stos
xchg
fbld
pop
in
dec
call
push
dec
mov
in
movsl
stos
xor
dec
push
insl
mov
cld
mov
popf
xchg
sbb
repnz
fs
fisubs
cwtl
xchg
movsl
sub
mov
js
mov
jnp
dec
std
in
repnz
xlat
popa
andb
sbb
mov
xchg
cmpsb
orb
pop
outsb
fistl
call
pop
in
push
fistpl
fidivs
mov
jecxz
int3
add
adc
xchg
xchg
xorl
fsts
dec
pop
in
push
xchg
out
push
pop
mov
cmp
clc
mov
jns
aaa
lcall
pop
fisubrs
int3
stos
push
aas
dec
aam
mov
pop
mov
inc
xchg
bound
mov
out
sub
fs
push
insl
push
push
push
cmp
cmp
xchg
das
cmpsl
sbb
cwtl
ljmp
xor
pop
mov
stc
and
das
jmp
addr16
movsl
lds
cmp
ss
xchg
xor
std
pop
iret
adc
js
sub
xor
inc
mov
in
sub
int3
shl
sbb
pusha
subl
mov
sub
push
push
mov
outsl
mov
mov
in
sbb
and
test
mov
xchg
xchg
push
xor
aas
and
repnz
mov
mov
mov
sub
test
pop
pusha
add
ss
xor
scas
inc
rep
pop
mov
lret
add
stos
mov
push
jecxz
fmuls
sbb
mov
movsb
int
packsswb
xchg
mov
aam
or
cli
cmp
xor
pop
push
sub
cmp
fists
gs
sbb
xchg
or
and
cmovnp
mov
xchg
gs
push
fldt
xchg
and
iret
mov
in
adc
mov
mov
jno
and
jno
mov
push
mov
inc
into
shl
arpl
mov
daa
test
mov
mov
ficomps
leave
dec
daa
test
jb
lcall
inc
and
mov
mov
lea
lahf
loopne
sub
mov
cltd
stos
xchg
int3
add
mov
xchg
xor
xor
xchg
mov
sub
pop
dec
outsb
icebp
mov
mov
jmp
xchg
jns
popa
adc
sub
rcrb
fldcw
mov
and
sbb
jl
aad
add
xchg
push
mov
pop
iret
xor
notb
jno
sub
add
push
popa
scas
sarb
cli
mov
daa
add
arpl
lods
test
leave
mov
outsb
pop
bound
fldt
dec
pusha
enter
pushf
stos
fisubrl
enter
sub
int
mov
iret
sub
out
cmpsb
add
out
stos
cmpb
lea
mov
andb
loope
jecxz
sub
lret
jmp
popf
mov
add
addr16
and
inc
push
mov
insb
repz
sub
ret
pusha
mov
stos
sub
aas
inc
in
loopne
push
pop
dec
loop
lahf
clc
stc
popa
cmp
dec
mov
jno
xchg
push
pop
popf
data16
xchg
andb
jge
subl
inc
stc
and
rolb
jmp
push
sub
add
push
jp
xchg
mov
orl
or
mov
push
movsb
cli
lret
scas
ljmp
inc
bound
xor
fldt
mov
filds
sbb
in
dec
orl
lea
jge
ds
pop
mov
dec
push
loope,pn
ja
test
mov
das
sahf
int3
mov
nop
cmpsb
fs
sub
fucomp
lret
dec
push
clc
insb
scas
mov
loope
jno
inc
imul
pop
lods
ret
sub
sbb
out
lods
in
ret
lods
mov
mov
add
mull
push
sahf
jno
aam
cmpsb
mov
add
sbb
fnsave
cmp
movsl
dec
mov
out
push
gs
pushf
cmp
dec
mov
lcall
mov
sti
stos
mov
movsb
clc
in
dec
stos
leave
clc
mov
mov
cs
pop
jno
ja
sbb
ret
inc
or
stos
es
je
repz
fildll
jbe
leave
adc
push
jo
repz
out
sbb
sbbl
pop
popa
and
fdiv
push
imul
inc
repnz
test
sbb
movsb
or
jae
pop
bound
pop
dec
mov
and
xchg
push
fs
xlat
jb
push
cli
ret
lcall
jle
inc
sub
orb
and
ret
jne
js
popf
jno
ret
push
call
bound
insl
loopne
inc
stos
inc
jb
stos
lds
sub
and
out
cmpsb
adc
out
jl
or
aam
cmpl
add
xlat
pop
loopne
jmp
jo
push
repnz
test
mov
pop
arpl
push
push
movsl
inc
lods
add
add
test
mov
aam
stos
sub
mov
mov
data16
test
in
shlb
inc
daa
and
jbe
jns
xchg
pushf
sarb
aaa
dec
dec
test
mov
sbb
popf
lret
lret
aam
aaa
insb
xchg
adcb
push
out
in
gs
ja
push
fisttpl
pop
in
aam
pop
fs
ds
std
add
shlb
out
fidivrl
sbb
mov
mov
test
stc
dec
cmc
cmp
dec
push
or
rclb
push
xor
repnz
pop
pop
mov
cwtl
mov
xor
ror
adc
pop
fs
sbb
add
sub
ret
xor
sbb
out
aas
adcl
data16
leave
dec
xchg
sbb
fs
xchg
jp
mov
pusha
jo
incb
inc
je
mulb
mov
ljmp
test
mov
inc
out
fs
mov
dec
nop
mov
test
js
pusha
xchg
cltd
movb
lcall
sbb
mov
mov
repz
daa
in
imul
addl
or
adc
scas
dec
pushf
bound
sbb
into
and
push
cltd
xor
mov
fistpll
push
pop
mul
jnp
jo
mov
mov
ficoml
enter
int3
test
pop
faddp
lock
sbbb
lahf
imul
ret
jl
dec
lods
ja
mov
sub
mov
inc
gs
inc
dec
cs
or
int3
jne
xchg
xchg
fnsave
imull
pop
sbb
push
popa
data16
sbb
sub
dec
cmp
loopne
pop
push
xchg
int3
sbb
jo
jle
and
and
enter
outsl
mov
shr
push
je
int3
push
jo
test
push
lea
test
out
stos
imul
leave
mov
mov
daa
stc
rolb
add
adc
mov
dec
pop
sbb
sbb
push
daa
xchg
je,pn
int3
aad
mov
mov
ljmp
push
sbb
xchg
imul
movsl
pushf
nop
push
mov
into
orl
aaa
dec
rolb
pop
mov
cwtl
push
mov
mov
adc
les
fnstcw
popf
pusha
arpl
xor
outsl
nop
mov
pop
dec
mov
mov
mov
cmp
pop
sahf
cmc
arpl
xchg
lahf
ljmp
push
mov
jb
into
adc
push
imul
jno
cmp
adc
push
cmc
push
je
sbb
fstps
and
subb
pop
pop
xor
lret
mov
inc
xchg
jl
mov
mov
fwait
dec
jne
out
mov
mov
pop
divl
xchg
je
jo
scas
icebp
movsl
add
jmp
add
push
push
in
shrl
adc
jbe
mov
addr16
scas
cwtl
mov
push
sbb
jo
rcll
pop
jbe
outsl
stos
mov
bound
je
inc
nop
push
mov
mov
push
movsl
popf
fs
cmp
call
push
dec
mov
push
fimuls
mov
mov
push
mov
cmp
inc
jecxz
int3
sub
xor
lahf
leave
cltd
mov
arpl
push
int
xchg
bound
add
insl
mov
xor
call
pop
pusha
out
bound
or
adc
movaps
je
pop
and
mov
js
push
ret
sbb
int
push
xchg
lock
push
dec
pushl
mov
cmpsl
mov
loope
sahf
arpl
subb
imull
or
pop
nop
push
scas
popa
int3
dec
push
sub
scas
mov
lods
leave
mov
mov
addr16
mov
lods
int3
das
shll
fs
scas
imul
push
adc
imul
jo
call
sub
xor
push
je
ds
sub
fisubl
insb
loope
lods
sub
fidivrs
mov
cmp
bound
cltd
jo
nop
push
js
fs
xchg
inc
mov
and
je
add
imul
test
mov
lods
mov
push
mov
sub
sahf
xchg
lret
inc
dec
test
sbb
jg
addr16
clc
data16
push
sub
in
popa
push
lds
sub
repnz
daa
add
and
jl
push
into
mov
and
sti
popf
gs
jl
adc
sub
test
sbb
je
out
add
mov
xor
sub
stos
repnz
test
adc
lcall
and
xor
xchg
mov
cmp
add
rclb
push
lcall
pop
push
or
fwait
leave
cmpsl
xor
jae
stos
aam
mov
rep
sub
cmp
setl
mov
jl
aad
xchg
imul
les
fcomps
jbe
test
cmpsb
mov
pop
cli
std
fstl
sbb
pop
mov
dec
adc
int3
add
mov
enter
push
adc
inc
push
pushf
xor
fcoms
adc
nop
adc
mov
sbb
movsb
sbb
xchg
xlat
push
sbb
scas
cmpsb
ds
scas
loopne
fcoms
mov
lods
push
mov
mov
pop
pop
inc
mov
mov
fcoms
and
arpl
push
pop
xchg
xchg
daa
cwtl
pusha
insb
mov
int3
mov
jns
cs
lea
into
repz
leave
lods
cli
dec
sub
jecxz
das
sbb
jnp
cmp
mov
sub
xlat
pop
call
mov
mov
out
mov
push
pop
mov
pusha
ret
push
mov
aas
lds
testb
ja
orb
gs
cwtl
clc
and
pushf
stos
push
lods
aas
bound
xlat
fldt
test
sub
cmpsl
sub
cmp
pop
ficompl
push
out
and
addr16
cltd
int
mov
lcall
mov
hlt
cmp
das
push
mov
lods
mov
mov
cwtl
sub
jo
cld
imul
adc
sub
xor
adc
fisttpll
es
gs
movsl
les
lcall
dec
push
jno
xor
push
repz
push
ret
xchg
test
mov
xchg
test
fisttpll
cmc
mov
jl
aas
js
addl
daa
mov
repnz
pop
sbb
mov
and
repnz
push
xor
jns
nop
js
test
movsl
pop
enter
xchg
jae
jb
fs
push
orb
shrb
mov
inc
outsb
cmp
pusha
mov
jge
loop
popa
push
add
jnp
lret
mov
punpckhwd
dec
lcall
sbb
cmp
push
mov
outsl
bound
repnz
repnz
xchg
add
stos
out
xchg
in
in
and
fmull
lods
shrl
xchg
mov
outsb
mov
add
mov
jbe
inc
mov
pushf
xlat
add
mov
popf
insb
js
sub
mov
or
outsl
mov
test
jns
test
adc
lea
inc
sbb
and
outsl
push
fisttpll
pop
or
pop
nop
dec
add
out
std
xchg
stos
imulb
mov
adc
mov
in
scas
je
loopne
movsb
aas
test
lods
subb
int3
jp
mov
mov
add
stos
imul
arpl
dec
les
pop
fs
pop
cld
loop
or
inc
in
stos
out
int3
sub
js
movsl
xor
je
stos
mov
or
icebp
pop
cmp
dec
cwtl
std
push
ret
daa
inc
xor
mov
cmp
es
test
stos
fldenv
ret
push
arpl
lea
into
cmp
rclb
and
xchg
imul
adc
jmp
rorl
sbb
cwtl
sbb
mov
dec
mov
push
out
xor
aas
push
into
std
inc
test
jmp
enterw
stos
mov
scas
cmp
testl
lods
ljmp
popf
push
clc
rolb
repz
mov
mulb
enter
cmpsb
and
stc
xchg
movsb
mov
ljmp
je
mov
sub
mov
xor
fistl
cmp
sbb
into
popa
push
ss
test
insl
arpl
shll
jns,pt
cld
arpl
inc
fnstenv
das
ds
mov
cmp
mov
in
mov
sub
loop
mov
in
xchg
das
leave
push
arpl
test
repz
sub
pop
mov
jb
in
mov
cltd
dec
xchg
cmp
jg
xchg
mov
or
mov
sbb
cmp
jle
add
inc
cwtl
push
shll
cmpsb
mov
out
pushf
jecxz
cmc
sbb
in
push
ja
lds
and
outsl
jnp
dec
xor
xchg
push
fldl
mov
sub
aam
jns
push
test
xchg
or
int3
inc
jno
data16
adc
mov
imul
test
sub
fwait
loope
stc
mov
cmc
xchg
add
nop
fsubrl
push
jmp
mov
movsl
inc
mov
inc
lea
aas
or
sub
in
lods
push
out
jo
mov
repnz
stos
xlat
in
scas
jno
pop
mov
pop
aas
jp
xor
je
pop
sbb
fs
clc
les
je
daa
sub
jbe
aas
pop
lahf
jb
in
inc
xchg
push
inc
jmp
icebp
dec
in
je
cmc
push
mov
add
orb
lds
sub
jecxz
add
popa
loope
sahf
dec
sub
mov
and
push
mov
stos
pop
fisttpll
add
fisubs
or
mov
jp
jbe
mov
out
ret
test
inc
scas
cmp
aaa
and
lods
sub
pusha
minps
repnz
jmp
pop
jp
test
cmp
xchg
mov
cmp
jb
xor
jno
xchg
repz
xchg
mov
bnd
add
jb
lahf
rclb
repz
mov
mov
xor
xchg
mov
xor
mov
sub
hlt
cmp
int3
pop
movsb
mov
popf
aam
pop
lock
push
out
cli
in
outsb
js
mov
dec
test
sbbl
jnp
mov
imul
mov
daa
sbb
mov
mov
xchg
sub
lock
ss
push
scas
pop
add
sub
pop
pushl
pop
pop
hlt
jo
dec
mov
mov
lret
push
push
jno
hlt
in
lds
sub
mov
dec
adc
xlat
adc
fsubrs
pop
lods
jae
arpl
xchg
movsb
xchg
jge
in
lcall
mov
mov
jb
cmp
inc
mov
lds
cmc
movl
sub
out
in
xchg
and
loopne
push
cmc
testl
push
pushf
mov
pop
fmulp
cmpsl
or
push
icebp
loope
cmpsl
sbb
fnstcw
repz
test
xchg
dec
bound
dec
subl
stc
or
pop
dec
loopne
xchg
int3
mov
dec
pop
mov
dec
jmp
mov
or
push
inc
and
and
out
mov
lods
jb
aam
mov
adc
xchg
push
or
push
xchg
enter
xor
add
dec
shr
mov
call
idivl
xor
sbb
data16
xchg
out
stos
gs
inc
adc
sbb
mov
add
mov
cwtl
jns
fs
ss
cwtl
das
xchg
insb
aad
adc
xchg
shll
insb
push
pop
adc
lahf
jns
mov
aad
and
movsl
popa
dec
jp
scas
mov
mov
pop
and
fisubrs
inc
sti
andb
cli
test
mov
push
adc
add
lret
sub
stos
jne
mov
int3
jbe
mov
fwait
pop
cwtl
je
int3
cmpsb
lret
je
out
push
les
int3
or
sahf
push
and
sub
push
or
popf
outsl
arpl
mov
movsb
stos
ret
shl
imul
adc
pop
icebp
testl
test
scas
andb
repnz
xchg
jb
ret
bound
dec
jo
pop
insb
dec
inc
jo
orl
in
lret
dec
and
je
sub
push
dec
sub
test
mov
pop
rorl
stc
cmp
push
test
mov
cmp
jg
mov
cmp
adc
xchg
xchg
ss
sbb
fsqrt
popf
dec
stos
stc
xlat
popf
mov
mov
cmc
pop
loopne
dec
cs
cmp
aam
and
jo
push
pop
xorl
fildll
inc
daa
arpl
pushf
fiadds
arpl
movsl
or
push
mov
outsb
je
dec
in
pop
pop
mov
mov
sbbb
repnz
pusha
rcl
push
mov
ficompl
or
or
fwait
insb
lods
and
cwtl
int3
aas
or
push
lock
roll
and
jle
sbbb
push
mov
orl
int3
test
jl
dec
inc
addb
mov
pop
dec
pcmpgtd
lock
inc
dec
pop
test
fwait
daa
je
scas
int3
mov
enter
pushfw
jg
movsb
cmp
xor
xchg
add
lret
push
xor
test
dec
mov
xchg
fadd
mov
lds
test
and
jno
andl
mov
sahf
stos
test
push
sahf
xchg
cltd
push
lcall
int3
imul
push
push
pop
shrl
scas
out
lods
xchg
push
imul
lods
stos
pushf
mov
out
and
cltd
insl
jno
int3
push
mov
push
roll
ljmp
in
xchg
mov
jle
mov
inc
inc
dec
jo
clc
jns
mov
jno
add
lahf
lods
pop
push
pop
or
and
push
jae
imul
lret
sbb
fbld
int
or
rorb
stos
adc
mov
mov
and
imul
pop
test
int3
mov
mov
data16
push
dec
mov
inc
scas
stos
mov
insb
popa
outsl
ss
jnp
aam
pop
repnz
adc
mov
jecxz
mov
xor
arpl
push
lea
and
mov
roll
mov
aas
pop
repz
aas
pop
fcomip
int3
cmp
jno
push
je
andl
push
idivb
lret
pusha
mov
fwait
enter
add
xor
daa
adc
xor
ret
sbb
sub
int3
lea
xor
in
inc
pop
int3
sub
xchg
idiv
xchg
hlt
loopne
mov
sti
ret
dec
mov
test
shll
das
push
push
int3
call
insl
dec
stos
stc
lret
cmc
imul
pop
jae
mov
dec
repnz
aas
fimuls
jo
add
mov
pop
fmulp
or
in
inc
or
pop
mov
shll
fcoms
sbb
popa
xchg
cmp
pop
and
mov
nop
subb
pop
adc
lret
jmp
lcall
aad
adc
jecxz
test
push
lods
or
jb
pusha
movsl
mov
cmp
decb
pusha
pushf
jg
scas
and
mov
jl
out
les
les
dec
mov
adc
adc
repz
mov
fsubs
pushf
jns
pop
mov
pop
jmp
jp
add
sbb
xlat
int
pop
clc
xor
push
dec
xor
mov
cmp
in
aas
lods
pop
mov
ds
xchg
mov
pop
cmp
addr16
sub
bound
xor
out
mov
loop
ret
mov
test
cmp
inc
lahf
mov
push
lods
or
mov
cs
test
jle
test
push
dec
and
jo
sub
mov
mov
int
fcoms
pop
mov
nop
or
lret
mov
pop
mov
pushw
cmp
sub
lds
xchg
nop
shrb
daa
imul
mov
aas
loopne
imul
clc
int3
mov
mov
insl
imul
adc
cltd
clc
jp
xchg
push
sbb
xchg
sub
pop
lahf
push
xchg
pop
lods
mov
movsl
sahf
pop
add
stc
mov
stos
in
int3
xor
pop
xor
mov
xchg
test
xor
js
lds
pop
stos
aas
xchg
arpl
imul
xchg
bnd
inc
jg
pop
jnp
pop
mov
data16
insb
test
pop
mov
iret
xchg
mov
out
ljmp
cmp
into
mov
jo
jmp
mov
hlt
adc
dec
dec
pop
insb
popf
sub
push
je
mov
inc
aaa
adc
ss
ret
dec
mov
in
sbb
dec
icebp
push
mov
mov
stos
int3
sbb
push
mov
outsb
or
xor
mov
jl
lret
out
mov
nop
fcmovb
enter
add
jae
xchg
push
mov
insl
icebp
cmpb
xchg
scas
jge
stos
jecxz
pop
test
inc
jl
cmp
fstl
mov
jb
icebp
sarl
cld
dec
or
cwtl
repnz
xor
cmpsb
movsb
pop
mov
outsl
int3
test
mov
insb
arpl
cltd
repz
daa
ss
cmp
movsl
pusha
mov
shlb
push
or
inc
or
and
ja
and
xchg
stos
stos
pop
mov
aam
adc
push
mov
sbb
xchg
dec
xchg
jmp
lods
pop
or
push
lods
mov
sbb
mov
mov
jmp
in
jg
leave
imul
pop
jecxz
fwait
jo
mov
in
mov
sbb
pop
lcall
jg
adc
inc
add
andl
push
leave
push
mov
sub
xchg
stc
stc
mov
add
mov
int3
pop
jg
push
shrb
push
fiadds
dec
lds
into
sbb
adc
jo
jno
dec
cmc
jno
outsb
push
bound
xchg
insb
repnz
lds
sar
sbb
mov
sbb
fwait
pop
dec
cltd
loop
fcmovne
and
adc
loope
xchg
stos
clc
xchg
stos
jo
sbb
sub
mov
inc
daa
pop
insb
adc
and
cld
popf
movsb
or
data16
jns
sbb
cmc
sub
cli
sahf
jb
repnz
lret
cmp
push
push
mov
mov
negl
and
sub
sub
enter
movsb
xor
jmp
cmp
xchg
sbb
xchg
add
cld
test
rcll
cltd
add
inc
scas
xchg
xchg
mov
popf
adc
xchg
stos
movsl
pop
repz
shll
sub
jns
mov
sub
mov
fsubr
xlat
call
aam
hlt
jbe
shr
lock
ror
cmp
and
jbe
loopne
fsub
jae
push
loop
pop
push
ror
movsb
movsb
mov
fistpl
mov
mov
gs
jp
ja
mov
push
test
jno,pn
movsb
lods
mov
gs
xor
test
cmp
lea
hlt
push
test
hlt
push
xchg
int3
mov
push
lret
mov
or
dec
mov
ret
xchg
pop
mov
cwtl
cmpsl
inc
ja
and
dec
leave
push
fildl
jo
jp
or
insb
mov
scas
mov
aas
mov
lea
popa
xlat
xor
mov
dec
int3
andb
sahf
movsl
mov
mov
and
lcall
ret
shll
inc
int
dec
pop
push
push
jl
rcrl
test
mov
lret
xchg
lahf
ficomps
pushf
mov
mov
jns
xchg
pop
adc
in
icebp
sbb
aaa
cwtl
mov
xor
xor
inc
mov
scas
xor
push
xchg
jne
cwtl
ret
mov
jg
push
scas
loopne
jp
jg
dec
jg
pop
jle
push
mov
pop
repz
pop
stos
jno
mov
or
movsb
jl,pt
fs
jo
leave
bound
mov
mov
xor
mov
mov
jb
fcomps
sub
in
or
imul
ret
xchg
mov
cmp
scas
int3
pusha
mov
daa
lea
pop
xchg
fcmovnbe
jbe
test
cltd
stos
mov
mov
call
dec
lahf
cmpsb
insb
cmp
sarl
jbe
dec
xchg
inc
add
sbb
orl
movsl
movsb
test
pop
jo
mov
add
add
popf
cmp
fs
stc
mov
jecxz
js
jns
sbb
dec
popf
mov
mov
sbb
pusha
xchg
movsb
push
mov
pop
dec
mulb
jnp
imul
xor
fisubs
or
adc
sub
movsb
xor
xchg
mov
cmpb
push
sbb
mov
sti
and
jns
cmpb
xchg
sub
mov
dec
push
out
leave
cmp
jnp
pop
adc
repnz
in
sub
xor
mov
pop
lret
iret
test
sub
popf
mov
sub
dec
and
scas
fwait
popf
and
test
sub
cwtl
cmpb
cmp
daa
inc
arpl
xor
mov
mov
lret
addr16
in
test
cmpb
mov
pushf
cmp
mov
hlt
aam
xor
fwait
xchg
cwtl
cmpsl
jbe
cs
fldcw
andb
aaa
mov
fcmovnbe
xchg
sub
mov
pushf
pop
mov
shr
cwtl
xchg
ja
test
xlat
push
fcomps
aam
push
push
aaa
and
xchg
xor
add
xchg
mov
xlat
lcall
andl
int3
out
aam
arpl
andl
xor
xor
xchg
adc
das
pop
lods
xchg
mov
fadds
pop
daa
test
movsb
cmp
dec
sbb
mov
outsb
mov
lods
cmc
add
bound
pop
nop
sub
sub
jb
arpl
test
es
mov
dec
mov
mov
scas
mov
scas
lahf
xchg
das
movsl
daa
cmp
in
stos
dec
xchg
add
cmp
inc
mov
push
inc
xchg
ret
sub
xchg
rorb
pop
mov
nop
loop
test
mov
jns
ficoml
xor
pop
mov
mov
aaa
xor
test
xchg
leave
dec
push
in
inc
add
and
mov
icebp
aad
incl
fcoms
push
icebp
iret
leave
sub
cmp
rep
mov
ret
push
jl
testb
sub
mov
inc
test
pop
stc
xor
mov
scas
lods
leave
xchg
loopne
movsb
clc
pop
dec
mov
les
out
outsl
jno
sbb
pop
lods
fldcw
nop
jp
jns
mov
jecxz
sbb
inc
add
loope
xchg
xchg
adc
shrl
sahf
mov
sahf
xlat
jb
fcomps
inc
mov
or
mov
shll
lods
divl
xchg
in
mov
cmpsb
inc
stos
xchg
call
mov
mov
lret
xlat
mov
je
fs
jae
mov
arpl
jmp
xor
stos
enter
jns
shrb
cmpsb
call
sub
nop
aam
stos
and
add
jns
jne
lods
test
fs
mov
sbb
cmp
in
lods
cld
sbb
fnstcw
jmp
inc
mul
stos
mov
sub
push
sahf
insl
rol
sbbl
aam
cli
cltd
cli
adc
and
xchg
sbb
sbb
ss
pop
dec
andl
scas
inc
sub
outsb
movsb
lods
jbe
mov
dec
lods
ret
aas
mov
stos
fsubrl
pop
lods
in
imul
movsb
add
pushf
push
mov
pop
fcomp
cwtl
xchg
arpl
daa
jle
cmp
dec
das
and
add
cmpb
scas
pushf
mov
lods
movsb
mov
mov
push
repnz
shrl
xchg
inc
pop
sub
push
loopne
xor
fs
lock
js
mov
test
movsb
mov
outsl
mov
dec
mov
fs
push
push
sub
fs
aam
push
xchg
lret
ret
mov
dec
xchg
push
stos
movsl
add
int3
orb
and
xchg
and
push
out
movsb
pop
mov
pop
fnstsw
ud0
in
daa
in
cltd
cmp
mov
je
jmp
dec
jp
sub
or
fidivrs
ss
cli
std
cwtl
push
ss
xor
popf
xchg
add
jbe
push
or
add
mov
inc
unpcklps
cmp
rclb
fs
cmp
lea
lcall
pushf
call
imul
and
dec
lcall
and
daa
cmpsl
sub
lods
xor
jo
mov
sub
leave
jb
sbb
mov
dec
mov
aam
lcall
and
mov
sub
sub
lods
pop
ret
jg
notl
lds
je
push
xor
push
adc
xchg
xchg
push
mov
mov
mov
cmc
in
fwait
sbb
mov
xchg
cmp
test
dec
mov
push
iret
fs
test
pop
out
int3
data16
insb
dec
sbb
pop
lret
xor
cwtl
fnstcw
mov
inc
lret
add
shrb
std
jns
rolb
sub
push
mov
cmpl
dec
in
test
sub
push
inc
lahf
push
dec
clc
mov
dec
or
dec
sbb
shlb
mov
mov
test
push
pop
or
mov
test
xchg
sub
enter
xchg
shlb
jae
in
scas
mov
gs
out
icebp
int3
xchg
push
xchg
in
outsb
mov
imul
lea
inc
out
gs
ret
cmpsl
sub
leave
outsl
cmp
mov
ret
push
xchg
scas
int3
loope
pusha
fs
rcrb
sbb
mov
addr16
pop
jne
insb
ss
cltd
stos
adc
and
mov
roll
mov
iret
sub
mov
mov
xor
int3
cmp
pop
cmpsb
jge
mov
mov
fadds
imul
jnp
movsl
scas
into
loopne
jo
insb
mov
outsb
les
mov
int3
insl
and
pop
imull
mov
xor
aas
push
mov
push
out
pop
mov
xor
inc
pop
and
dec
test
das
jno
mov
lods
pop
pop
mov
jne
jno
inc
daa
cmp
lss
mov
push
xor
mov
dec
lods
cmpsb
or
xchg
sbb
xor
call
mov
jae
pop
icebp
adc
movsb
cwtl
addb
test
adc
sbb
push
sub
fimuls
xchg
leave
outsb
sub
adc
je
arpl
push
pushf
adc
jae
mov
movl
xchg
movsl
inc
inc
popl
das
or
bound
cwtl
xor
jl
test
int3
popf
vmread
sub
or
xchg
or
repz
pop
sub
push
jb
push
enter
sub
and
ret
mov
pop
dec
jmp
cmp
jp
xchg
sahf
rcl
xchg
and
stos
mov
je
sbb
ljmp
dec
push
pushf
dec
mov
adc
pop
sar
outsl
pop
mov
dec
pop
or
pop
ror
mov
jmp
add
bound
mov
lea
adc
inc
subl
pop
pop
jbe
dec
pop
mov
add
imul
cmp
or
shrl
adc
and
pop
mov
xor
int3
adc
and
sub
push
xor
insl
or
mov
daa
mov
lods
out
jo
xor
mov
addl
ret
mov
fdivrl
mov
xor
aas
test
mov
jae
dec
mov
lea
xlat
lahf
push
mov
inc
mov
aas
call
loope
or
mov
xor
icebp
cld
pushf
imul
pop
scas
jl
sar
outsl
test
jmp
xchg
rol
mov
lods
xchg
repz
stos
daa
pop
ret
int3
pop
xor
js
mov
in
lods
dec
jo
mov
outsb
push
fs
lcall
and
shrb
adc
test
pop
mov
outsb
mov
mov
xchg
xchg
cltd
hlt
mov
xchg
enter
in
and
jge
push
add
or
test
sub
inc
pop
outsb
int3
jbe
pop
adc
lods
mov
mov
aaa
les
in
data16
int3
fcmovnu
pop
pop
sbb
jo
nop
inc
jnp
mov
push
lahf
nop
or
adc
sti
xlat
pop
sub
js
jno
in
mov
mov
mov
pop
nop
inc
mov
bound
cmp
daa
inc
jne
jg
mov
dec
enter
ret
dec
rclb
dec
mov
fwait
jb
imul
leave
mov
ret
fdivrl
jmp
push
call
nop
in
and
das
and
push
and
lret
push
cmpsl
and
scas
fcmovnbe
xchg
repnz
mov
adc
cmp
pop
and
inc
mov
dec
rcrl
stos
pusha
je
loopne
js
mov
jns
and
add
scas
aas
ficoml
or
pop
hlt
fdivrl
scas
lods
addr16
mov
dec
daa
sub
mov
sti
push
pcmpeqd
lea
or
sbbl
push
mov
pop
mov
jnp
pop
into
aaa
mov
push
sbbl
jne
dec
lret
jbe
sarl
push
faddl
mov
and
mov
int3
adc
or
mov
loop
add
dec
jl
arpl
int3
movsb
mov
dec
shrl
fwait
dec
loop
arpl
jle
sub
mov
inc
mov
sbb
rorl
mov
stos
je
inc
jl
call
ss
aas
fwait
mov
stos
sarb
mov
mov
dec
mov
jmp
in
lods
stos
mov
jns
mov
push
int
and
loopew
jmp
xchg
cltd
andl
jg
in
and
mov
push
mov
lret
jge
addr16
daa
jnp
mov
outsb
mov
lret
dec
imul
ret
cmpsl
addr16
pop
xchg
int3
mov
int3
inc
in
jl
fildll
test
add
xor
add
mov
aas
mov
adc
mov
mov
fwait
in
movsb
and
popa
bound
mov
test
cld
inc
xchg
lods
outsl
push
lods
cmp
push
xchg
mov
add
aad
movsl
mov
scas
jnp
mov
jg
ja
loopne
cmc
mov
lods
enter
cmpsl
push
test
sub
insb
and
arpl
int3
mov
arpl
repnz
mov
mov
mov
lds
push
cld
leave
jg
lea
add
adc
and
inc
popa
and
pop
xchg
sub
or
aaa
cld
mov
adc
lock
out
mov
xchg
daa
jo
es
sub
xor
push
aam
aaa
push
mov
jp
sbb
loopne
xchg
mov
lea
cmp
adc
in
hlt
ds
hlt
ja
mov
out
test
adc
in
xor
add
sub
fisttps
test
mov
xchg
and
push
or
in
mov
mov
pop
flds
ja
cmovs
add
popa
jnp,pn
sub
test
mov
jo
popa
sub
push
imul
mov
in
cmp
mov
arpl
adc
mov
jae
xor
mov
xor
add
stos
insb
jo
mov
dec
ds
xchg
inc
inc
jns
xchg
test
repnz
movsb
mov
outsb
fwait
fs
push
xchg
insb
jl
in
sbbb
xor
leave
mov
dec
mov
adc
fs
mov
lock
jns
mov
aaa
lahf
pushf
lods
sub
and
scas
pop
in
test
cmp
jns
daa
sahf
lods
ficomps
loope
lods
sbbb
push
daa
mov
xor
sbb
mov
cld
jns
mov
pop
xchg
xor
popa
call
dec
inc
xor
popl
stc
pop
fisttpll
push
dec
movsb
cmpsl
dec
sub
mov
xor
testb
lock
stos
int3
adc
cmp
sbbb
mov
std
scas
sti
jmp
aas
sub
js
jp
mov
xchg
xchg
xchg
jb
and
test
sbb
cmp
xor
push
adc
inc
mov
imul
sbb
decl
movsl
fimuls
repnz
outsb
xchg
jmp
popa
mov
mov
add
xlat
nop
in
loop
ret
xchg
xchg
sub
xchg
aaa
dec
jb
adc
fsubs
fbstp
jp
push
sub
jge
repz
in
insb
mov
sbb
out
mov
sub
fwait
insl
inc
nop
loope
sbb
xchg
sub
dec
les
push
pop
jmp
rcrl
sub
push
ja
mov
push
mov
imul
int3
popa
xor
dec
lock
cmp
es
loopne
std
insb
add
das
jl
mov
mov
and
sub
pusha
add
xchg
xchg
lcall
je
sbb
sub
mov
jg
mov
pop
jno
mov
inc
int3
dec
aad
scas
jnp
mov
cmp
push
xchg
lods
je
lods
push
push
shll
outsb
lods
jl
bound
in
andl
fldcw
roll
add
xor
mov
mov
push
nop
mov
sti
xor
icebp
mov
sahf
mov
sbb
mov
pop
sub
dec
and
jb
cmp
xchg
mov
test
pusha
pop
lahf
xchg
jle
add
repnz
test
cwtl
sub
dec
mov
test
xchg
shrl
cmp
test
pushf
cmp
push
out
and
enter
and
outsb
fsubrs
lea
pop
pop
pop
xchg
ja
popf
pop
mov
lcall
lret
xchg
imul
test
xor
adc
fwait
sbb
sti
hlt
pushf
shrb
ljmp
imul
fdivrl
fidivrs
inc
fwait
jo
mov
sbb
mov
int3
dec
cmpsb
or
leave
sahf
pop
insb
mov
dec
xchg
cld
rolb
add
cmp
adcb
or
push
pusha
lock
in
jp
imulb
shlb
pop
push
xchg
scas
icebp
dec
jno
add
pop
repnz
aam
cmp
lret
push
jl
cwtl
mov
and
jg
dec
adc
mul
xor
xor
cmpsb
sub
ds
push
icebp
or
dec
xor
mov
mov
fwait
movsl
and
xor
pop
xor
jae
leave
dec
mov
mov
mov
inc
loopne
push
bound
setae
cmpsb
push
add
test
mov
test
scas
fisubrl
sub
je
mov
mov
fidivs
daa
mov
fwait
push
xor
test
mov
fisttpl
mov
cmp
test
cwtl
jecxz
mov
jo
mov
cmp
ret
lods
aas
aam
test
sarl
addb
adc
hlt
pop
shrb
cld
mull
cmc
pop
mov
dec
pusha
aam
cmp
xor
add
lcall
mov
sub
adc
lods
dec
inc
fmuls
jp
cmc
lock
dec
jp
ret
mov
push
daa
push
insl
int3
mov
lods
cwtl
lock
cmpsb
cwtl
das
add
cmp
cmp
stos
movswl
mov
scas
test
mov
xor
xlat
sbb
repnz
xchg
lea
mov
cs
mov
lods
xchg
mov
std
fidivs
and
scas
movsb
outsb
mov
popf
les
xlat
push
shrl
daa
bound
aas
xor
pop
shlb
ss
stc
fwait
mov
stos
test
ljmp
stos
fisttpl
lods
lods
mov
out
addr16
inc
in
xor
cmpsl
dec
jl
jb
xor
cs
shll
lds
xchg
dec
mov
mov
mov
xor
cs
dec
mov
add
push
cs
shlb
imul
nop
jl
lods
dec
xorb
pushf
rcrl
int3
and
sti
mov
or
inc
in
iret
lock
test
mov
or
scas
push
sarb
daa
shrl
pop
sub
daa
and
pop
pop
inc
nop
push
int3
pop
mov
pop
outsb
pop
push
add
clc
ja
ret
les
shr
repz
mov
pop
pop
inc
daa
fmuls
stos
pcmpgtb
aad
sub
popa
sbb
mov
leave
test
jnp
mov
scas
pop
inc
adc
mov
fs
jb
push
sbb
iret
jg
push
nop
push
add
xor
xchg
test
sbbl
mov
movsb
dec
jnp
and
mov
fisubrs
rcrb
ds
dec
les
mov
and
cmp
stos
xor
movsl
das
fs
and
mov
inc
pusha
xchg
aas
andb
xor
testb
scas
pop
leave
mul
mov
dec
mov
rorb
xor
fsub
xor
fs
xor
xchg
pop
fs
rclb
dec
mov
push
and
jle
stos
xor
shr
clc
int3
xchg
bnd
mov
mov
in
mov
les
into
sub
push
rorl
bound
jmp
cmpb
stos
cmp
cmp
shlb
fs
lock
push
and
mov
inc
je
sub
push
andb
mov
or
ret
xor
stos
xchg
int3
lahf
inc
shlb
jno
and
adc
int3
and
subl
jo
sbb
leave
jne
std
cmp
jl
ja
xor
stos
mov
leave
repnz
lea
outsl
sub
repz
inc
stos
mov
imul
mov
mov
cwtl
sub
out
test
xchg
mov
bound
out
out
mov
hlt
cmp
inc
sub
jae
aaa
mov
test
aas
jecxz
sti
cld
and
daa
in
cmp
fldcw
popa
nop
lea
sahf
push
mov
sub
cld
bnd
sbb
mov
pushf
fdivrl
movsb
adc
hlt
sbbb
outsl
or
test
aaa
sbb
scas
movsl
cmc
pop
stos
lods
xchg
insl
cmpsb
pop
gs
repnz
cmpsb
cmp
adc
mov
add
rorl
lock
insb
in
les
gs
jmp
sub
and
nop
xchg
stos
mov
shrl
outsl
mov
mov
sti
stos
in
push
mov
fadds
adc
xor
and
fs
loopne
insb
shrb
fcomps
sahf
je
push
in
inc
mov
jbe
nop
ja
jnp
xor
test
daa
mov
cmp
int3
js
xchg
data16
les
pop
jmp
sub
and
push
cmp
mov
int3
fimuls
outsl
in
es
mov
test
scas
enter
imul
jp
inc
jb
sub
das
mov
loopne
mov
xor
or
faddl
fs
dec
mov
cmp
stos
scas
scas
movsb
jo
popa
inc
daa
ljmp
cwtl
xor
aam
mov
daa
das
sub
iret
sahf
fwait
adc
mov
mov
sbb
not
mov
int3
mov
adc
cld
mov
mov
and
test
cld
insb
sub
mov
add
jge
popa
sbb
cli
movsl
insb
or
enter
push
sub
cmc
xor
sbb
mov
mov
imul
jae
or
enter
xchg
aad
sbb
mov
orl
out
mov
stos
and
adc
push
sahf
mov
pusha
popa
ret
xor
insb
xchg
andl
xor
push
enter
and
mov
inc
xchg
push
and
cmc
insb
push
cmpsb
and
lods
in
aam
add
jb
jecxz
cwtl
push
adc
cmpsl
pop
insl
dec
jbe
movsb
jbe
int
iret
outsl
sti
daa
or
adc
scas
shrb
ljmp
jno
mov
stos
dec
dec
sbb
and
push
pushf
mov
scas
mov
sbb
adcb
jl
jnp
jmp
mov
mov
jg
mov
pop
mov
jle
inc
shll
jbe
data16
aaa
dec
mov
insl
addb
cld
call
rcl
test
or
add
daa
push
movsb
loopne
xor
push
jbe
orl
push
ds
inc
mov
in
movsl
xchg
jo
repz
jp
insb
jae
scas
imul
mov
lods
xchg
in
fisttpl
icebp
or
mov
in
xor
jmp
test
add
pop
and
shrl
ss
sub
ss
pop
push
xchg
xor
stc
inc
test
add
or
scas
dec
into
arpl
mov
cmp
int
sahf
cli
fmulp
push
data16
mov
xchg
nop
cmp
int3
add
dec
jne
inc
sbb
xor
pop
test
inc
call
sbb
adc
and
lods
in
cs
sub
add
je
jo
mov
jb
xchg
in
jno
xchg
call
jo
daa
ds
sub
loopne
cmp
sahf
fsubrl
popa
stos
push
sbb
or
pop
daa
nop
xchg
rclb
sub
sti
sub
sub
xchg
pop
into
and
neg
loop
popa
and
loope
shrl
jbe
cmp
fs
sahf
int3
dec
xchg
mov
mov
ss
mov
xchg
js
aad
sbb
jl
in
and
sub
ret
cmp
mov
mov
lcall
movsb
push
pusha
subl
popa
xchg
test
xchg
mov
sahf
jg
mov
xlat
jb
mov
pop
adc
sahf
lret
lcall
leave
mov
jmp
movsb
popa
pop
stos
lods
daa
mov
mov
gs
and
xlat
mov
cld
es
sahf
or
fidivl
pop
mull
mov
mov
enter
mov
fsubr
pop
es
jle
leave
test
xchg
mov
sbb
xor
dec
popa
rorb
addl
lea
xchg
in
outsb
arpl
sub
int3
ss
jmp
pop
add
mov
xchg
inc
movsl
pop
mov
and
test
jno
jp
xor
inc
xchg
inc
call
pop
test
pop
lcall
stos
loop
mov
scas
xchg
test
jmp
test
adc
popa
xor
sbb
sub
and
call
mov
and
sub
jno
rol
mov
xchg
in
aaa
add
js
cmp
cmc
mov
js
sahf
mov
loopne
xchg
ficoml
ds
lss
ret
stos
arpl
leave
lea
xor
inc
mov
inc
jg
inc
enter
int3
sub
inc
push
push
mov
dec
sbb
aam
movsb
and
in
fwait
mov
mov
jae
dec
popf
lds
dec
xchg
outsl
mov
xor
dec
inc
ja
daa
pop
dec
and
arpl
mov
mov
mov
sub
int3
push
sahf
stc
je
adc
lods
mulb
sub
fstp
enter
sarb
fs
dec
insb
jle
out
insb
mov
popf
cmp
sar
popf
xor
movsl
sub
mov
leave
or
inc
xor
mov
sbb
jo
repnz
cmp
xchg
mov
xchg
lods
fiadds
stc
and
jne
jnp
pop
insb
test
leave
inc
pop
xchg
dec
lods
pop
push
dec
imul
int3
sub
int3
mov
dec
push
sahf
add
lret
jb
add
adc
mov
sub
push
scas
jb
mov
cs
push
mov
xchg
cmpsl
push
cmp
test
mov
lods
pop
test
dec
bound
cmp
daa
xchg
mov
lods
xor
lods
or
jno
xor
adc
mov
jne
addr16
arpl
stos
aaa
cwtl
aas
jl
les
mov
in
out
test
mov
stos
pop
rorl
ss
inc
jo
xchg
jge
les
mov
sub
mov
xchg
mov
mov
push
je
pushf
adc
fldt
xor
out
xchg
ret
inc
lcall
rorl
negl
add
push
mov
xor
mov
sub
sub
and
and
call
in
xor
push
push
sub
cld
int3
cmpsl
loope
mov
call
sbb
mov
ret
in
mov
and
aam
mov
stos
outsl
sbb
icebp
lods
xor
fisttpll
sbb
xor
mov
into
sbb
xorb
lods
andb
movsl
cmc
cltd
push
or
add
jae
les
and
mov
sub
aaa
xor
jg
scas
lock
sbbl
fwait
jl
sub
enter
lods
testb
test
mov
cmpsl
push
dec
inc
leave
push
mov
aaa
push
push
ret
sub
insl
adc
xor
push
inc
xchg
and
pop
jecxz
imul
mov
pop
jae
adc
std
or
loopne
adc
pop
ljmp
clc
into
adc
stos
aam
xchg
adcl
xchg
inc
pop
mov
inc
lcall
pop
or
andb
sub
test
push
push
push
ret
bound
or
sahf
cltd
jg
imul
pop
xlat
out
xchg
cmp
out
call
in
andl
cmc
or
mov
or
adc
mov
stos
aas
dec
jb
les
pop
xor
insb
cmpsb
jo
xchg
stos
aas
leave
js
cmp
xor
and
dec
popf
sub
adc
ret
mov
addb
inc
int3
popf
fsubrl
lret
mov
jmp
enter
scas
ret
jbe
call
loope
imull
mov
lock
in
xor
mov
iret
push
xchg
cmp
xor
xchg
gs
arpl
cmp
mov
lret
push
push
add
ret
sbb
pop
test
stos
xor
xchg
sbbb
push
mov
pusha
or
leavew
inc
in
cli
jne
ja
dec
sbb
push
cmp
ret
cmp
mov
mov
repnz
mov
jl
pop
mov
rorb
and
stos
dec
xor
add
sbb
stos
jae
cltd
cmp
mov
arpl
push
les
dec
daa
imul
xchg
movsb
and
dec
cwtl
int3
rclb
scas
gs
or
pusha
push
lods
loope
or
rorb
mov
movsb
push
sbb
mov
cmp
or
jae
bound
sbb
ret
pop
xor
mov
mov
nop
mov
cmp
enter
push
pop
cltd
lock
testl
jns
aaa
pop
jle
call
mov
popf
scas
add
inc
in
sub
hlt
mov
dec
inc
mov
add
scas
inc
push
lods
cmp
sub
sbb
call
adc
cmpsl
outsb
jle
mov
xchg
rorb
sub
pop
stos
rclb
nop
cwtl
arpl
mov
insb
or
and
dec
xchg
pushf
inc
aas
mov
outsl
test
fsubr
mov
push
sbb
adc
sub
cmp
dec
in
push
dec
je
rcr
lret
xchg
stos
push
jbe
xor
int3
fnstenv
das
cmc
adc
pop
scas
pop
scas
out
dec
cld
and
pop
test
sub
xchg
push
out
adc
clc
stos
insb
xchg
les
out
lahf
jno
mov
cmpl
nop
stos
shlb
jp
nop
pop
sbb
lods
js
mov
js
outsb
movsl
std
je
test
inc
fmul
pop
push
sub
pop
xchg
mov
in
add
test
mov
jmp
xchg
movsb
sub
push
mov
lahf
jbe
sub
lahf
mov
daa
movsb
jp
negl
cmpsb
fistpll
aas
mov
daa
cmp
xor
fbstp
sbb
movsb
mov
pop
test
fucom
push
add
inc
push
mov
icebp
mov
ficoml
sub
ds
xor
push
cmp
inc
xor
hlt
pop
xchg
push
xor
mov
mov
add
sar
pop
jno
sbb
outsb
pop
sub
mov
mov
ret
mov
lods
movsb
mov
movsl
lcall
push
int3
aas
stos
lock
mov
repz
jnp
test
cmp
pop
int3
rcll
jecxz
pop
push
pop
pop
es
xor
mov
jae
scas
mov
or
ret
out
outsl
int3
lea
clc
shrb
mov
jle
pushf
stos
in
outsl
xor
fs
int
xchg
popa
jnp
xchg
inc
push
imull
insb
test
mov
xchg
inc
jl
push
ret
cwtl
xor
cmpl
add
jb
mov
add
xor
lods
mov
movsb
add
xor
stos
push
dec
pop
fisubrs
push
xlat
and
or
cmp
xchg
and
mov
pop
insb
mov
mov
pop
mov
inc
loopne
mov
in
and
mov
pop
test
test
mov
xchg
xlat
cmpsl
push
fimuls
out
xchg
into
hlt
ja
xchg
addr16
mov
mov
lock
lods
mov
cmc
lods
pop
and
push
add
cmpsb
push
pop
xchg
xor
xor
mov
push
shlb
je
sub
daa
aaa
in
lret
pop
dec
bound
repz
dec
andb
pop
xchg
shrl
daa
xor
icebp
les
mov
push
ret
mov
cmpsl
mov
sub
and
movsb
xchg
hlt
fs
icebp
cld
les
xchg
pop
sarl
mulb
mov
lahf
bound
pop
and
and
lret
jmp
xor
gs
enter
std
cmp
ss
ret
pop
inc
dec
clc
lds
push
xor
enter
cmc
sub
dec
movsl
arpl
dec
mov
data16
mov
xchg
ret
aaa
pop
js
cwtl
xor
xchg
aas
movsb
jp
out
aam
pushf
outsl
push
xlat
push
test
into
sahf
pop
ljmp
arpl
mov
bound
aaa
mov
out
xor
out
mov
cli
call
stos
leave
popf
inc
sub
push
jno
das
imul
cmpsb
add
out
stos
shrb
mov
adc
mov
xor
int3
dec
mov
mov
je
mov
dec
test
sub
fsubl
sub
fnstsw
bound
pop
repnz
push
mov
sbb
cwtl
mov
mov
sub
insb
test
ss
pop
popa
adc
int3
mov
ja
sub
or
pop
jb
data16
adc
test
xchg
ficompl
jb
imul
inc
nop
pop
adc
aas
mov
repnz
mov
xchg
or
jo
xchg
mov
into
sub
and
sbb
push
arpl
iret
insl
out
int3
gs
stos
adcl
push
out
cs
in
dec
cld
out
and
push
xor
mov
ds
sub
out
lcall
test
and
sub
sbb
xor
or
xchg
ret
push
or
popa
insb
pushf
sub
rcrl
cmpb
sahf
jmp
lods
bnd
pop
clc
cmp
outsb
xor
sbb
push
add
stc
mov
ds
nop
pop
mov
popf
rcll
adc
movsb
insb
add
jg
jecxz
mov
cmp
ret
stc
xorl
insl
mov
jno
mov
mov
xchg
sbb
push
mov
jns
pop
cbtw
stos
cwtl
leave
stos
daa
mov
add
mov
push
pop
adc
mov
xchg
add
cmp
cs
pusha
test
adc
outsb
push
mov
mov
aaa
test
xchg
addl
cltd
data16
jo
dec
jbe
call
imul
repz
cli
mov
lret
mov
push
push
push
sbb
xor
jne
jmp
popa
mov
ds
data16
imul
mov
mov
bound
xor
ss
popf
stos
scas
xor
leave
aam
mov
adc
push
inc
popa
sub
insb
movsb
hlt
mov
repnz
popf
pop
lock
and
sub
sbb
adc
dec
cmp
pop
dec
lods
pusha
xor
data16
push
mov
leave
jbe
adc
dec
or
jb
dec
subb
mov
push
outsl
enter
mov
inc
dec
lcall
dec
call
mov
fs
adc
and
inc
scas
enter
movsl
pop
push
inc
or
pop
fs
adc
mov
xor
or
int3
jno
imull
in
and
fwait
stc
cmpsb
xor
cmp
jae
and
xchg
pop
outsb
aas
or
mov
aas
enter
xor
test
xor
and
push
pop
pushf
fdivrs
ret
insl
inc
loop
sub
cmpb
mov
add
movsl
std
jo
cltd
sbb
sub
popf
loope
les
loopne
xor
mov
inc
insb
into
movsb
movsb
ss
sahf
inc
or
push
xchg
rolb
mov
mov
les
mov
mov
test
jmp
cmp
or
mov
movsl
add
or
test
clc
mov
fiaddl
outsb
test
adc
mov
aaa
fnstcw
imul
std
scas
pop
and
cmc
in
adc
jnp
movsl
or
stc
in
movsl
je
jns
cmc
aad
pop
les
pushf
xchg
pop
push
dec
mov
push
adc
mov
lods
mov
punpcklbw
jmp
out
lcall
das
mov
xchg
push
dec
jbe
insb
mov
or
inc
adc
popa
xchg
xchg
jb
je
push
lock
mov
sti
xchg
mov
stos
jno
push
scas
bound
pop
jo
jp
lcall
cmpsl
xor
lret
je
pop
jbe
add
mov
xchg
mov
scas
dec
jecxz
aam
stos
dec
stos
aaa
add
mov
xor
nop
inc
dec
pop
int
adc
daa
std
adc
dec
lods
decb
je
lods
std
movsb
xchg
leave
js
stc
test
inc
jns
adc
pop
aad
pushf
mov
aaa
hlt
mov
push
pop
mov
jle
popf
mull
inc
lods
test
or
jb
rclb
sbb
mov
dec
stc
bound
stc
sahf
push
lods
testl
stos
add
aad
mov
add
test
and
push
es
aam
stos
test
xchg
push
addr16
je
push
lods
test
stos
cld
cmp
xchg
mov
push
inc
mov
xchg
imul
mov
adc
mov
icebp
mov
ret
inc
pusha
cmpb
cli
xchg
nop
enter
fcmovb
cmp
bound
sbb
fisttpll
nop
jo
icebp
sbb
test
outsb
jge
pushf
movsb
dec
imul
popa
mov
inc
push
xor
aas
xor
sub
sarb
shlb
mov
aad
test
enter
dec
in
pop
pop
mov
lahf
jg
insb
push
les
mov
arpl
aam
push
daa
jge
sbb
push
js
arpl
xor
cmp
scas
xchg
clc
jecxz
shlb
inc
sbb
cmp
aam
xor
pop
sub
imul
test
aaa
xchg
mov
js
fs
jno
sub
dec
adc
imul
ljmp
cmpl
adc
and
into
outsl
cmp
pop
in
ficoml
sub
loopne
and
loopne
fdivl
xor
out
jae
and
and
add
adc
sub
sub
shl
fcoms
aam
dec
in
pop
and
ljmp
inc
or
or
fwait
cmpsb
sub
lds
sub
push
or
lods
and
cltd
enter
sbb
scas
bound
call
inc
scas
mov
out
and
jb
aas
xor
popa
mov
test
stos
in
sub
das
sbb
gs
xchg
aam
fdivl
jl
aas
jge
add
xchg
jb
jae
dec
arpl
mov
pop
leave
scas
shlb
ret
jo
mov
mov
and
cmc
sub
int3
pinsrw
or
sub
hlt
xor
ljmp
inc
fsubl
mov
pop
jp
lcall
add
sub
xor
xchg
loop
orb
add
das
les
cmp
inc
or
or
adcl
xor
movsb
mov
int3
jg
inc
mov
cmp
scas
je
jo
insb
pop
mov
in
scas
or
pop
imul
and
fs
xchg
pop
dec
lea
nop
sbb
andl
adc
in
jge
call
jns
or
imul
and
in
jmp
lock
pop
ljmp
repnz
outsb
mov
mov
jmp
sub
pop
leave
xlat
and
mov
jmp
je
and
aam
jl
lods
lcall
sti
xor
jl
leave
or
inc
mov
lahf
addr16
push
movsb
je
cmpsl
jl
lret
out
mov
sub
pop
imul
je
jl
and
lods
aam
mov
sub
lods
xchg
push
adc
in
popa
sbb
scas
dec
in
mov
jns
outsb
movsb
cmp
mov
mov
mov
pusha
dec
mov
test
dec
lret
addr16
aam
mov
mov
lock
pop
push
inc
icebp
xor
jns
mov
sarl
insb
lret
add
mov
cmpsl
int3
sbb
test
xchg
sub
flds
ret
xor
mov
test
ljmp
fsubr
lcall
sahf
cmp
movsb
sub
fs
sahf
and
cmp
cmpb
mov
leave
mov
push
sub
imul
sbb
add
dec
jb
mov
add
push
push
xchg
inc
int3
faddl
incb
out
jle
jge
aad
loope
dec
loop
mov
test
rcll
stos
jns
dec
loope
data16
pop
daa
inc
lea
jbe
pop
ss
mov
pop
inc
cmpl
addr16
addl
fnsave
xor
int3
xchg
cmpsb
mull
mov
int3
stc
push
mov
pop
loope
adc
xlat
inc
test
push
aaa
pop
mov
push
out
mov
pop
popa
fwait
inc
arpl
dec
dec
popf
popa
jp
outsl
sbb
mov
cmpsl
mov
fsubl
adc
pop
jp
in
ret
xchg
loopne
call
and
shlb
fwait
jle
and
pop
daa
fdivs
das
cmc
or
in
push
pop
imull
js
les
call
sti
push
imul
mov
push
dec
mov
push
pop
rcl
loopne
dec
xchg
shrb
sub
mov
scas
jle
dec
fildl
stos
sub
lret
or
sbb
inc
adc
dec
adc
stos
mov
nop
jmp
dec
dec
mov
jnp
int3
std
lcall
and
jne
mov
in
pop
clc
adcb
int3
pop
pop
or
mull
or
popa
dec
jbe
adc
loop
adc
xchg
fiaddl
add
pcmpeqd
out
pop
enter
xor
arpl
xor
mov
xor
pusha
sbb
popa
std
rorl
sub
mov
loopne
movsl
xor
sahf
dec
in
dec
inc
jmp
jns
jp
je
in
mov
add
dec
mov
jo
daa
jge
pop
mov
sbbb
int3
adc
cmp
pop
loopne
adc
fnstenv
mov
in
int3
push
mov
inc
or
cmpsb
mov
nop
dec
cmpsb
dec
mov
jns
lcall
inc
dec
lods
pop
inc
mov
mov
scas
lods
je
movsb
xor
inc
pusha
mov
jle
arpl
mov
cmpsl
adc
fs
repz
xor
mov
shll
fisttps
imul
lock
mov
jno
ss
arpl
bound
fcomps
sub
loope
js
pushf
pop
jge
das
push
pop
data16
jp
insb
mov
xor
daa
inc
cmp
dec
mov
testl
mov
xor
rolb
mov
dec
int3
and
or
xchg
jl
cwtl
bound
adc
push
sbbl
inc
xchg
lret
aad
aaa
fistpll
jle
icebp
lret
mov
je
fsubs
push
push
clc
ret
movsl
addl
lock
in
test
setbe
mov
pop
jbe
pop
out
jb
lock
out
push
in
cmp
and
push
xchg
imul
sbb
xchg
stc
push
stos
xchg
sub
jne
lcall
push
sub
nop
jns
movsb
icebp
mov
mov
inc
pop
test
ds
and
leave
and
sahf
loopne
mov
lods
jp
imull
inc
insl
cmp
stos
xor
mov
addr16
aas
cmc
dec
out
push
enter
loopne
lods
int3
mov
insl
ret
add
cmc
imul
jecxz
ss
test
pop
int3
test
loop
imull
int3
mov
adc
xlat
sub
cmp
aas
add
xchg
mov
jns
push
loope
test
ljmp
xor
or
sti
sub
bound
mov
ss
xor
sub
or
cltd
pushf
pop
xchg
daa
lahf
pop
insb
je
lods
ljmp
add
xlat
iret
hlt
and
enterw
xor
mov
js
cmpsl
add
inc
sarl
test
push
into
lock
out
push
loope
pop
xchg
mov
test
jl
pop
movsb
add
addr16
sub
aaa
rcrb
hlt
mov
cmp
iret
nop
mov
out
mov
jp
mov
fcompl
cwtl
adc
xchg
or
lahf
mov
mov
pop
and
pop
into
addr16
mov
mov
movsb
sbb
faddl
dec
mov
scas
add
xor
inc
ret
lcall
scas
mov
adc
lret
mov
popa
mov
xchg
in
test
mov
push
cmp
jno
pushf
xor
ljmp
jno
mov
test
dec
hlt
in
sub
jle
push
clc
cmp
pop
cmp
jbe
in
or
ja
push
fs
testl
aam
inc
test
xchg
mov
and
pusha
mov
ds
mov
out
xor
sub
cmp
cmpsl
inc
xor
in
in
call
out
int3
shlb
sub
or
dec
pop
loopne
xchg
dec
loop
fistpll
scas
cmp
xchg
jo
push
dec
in
jo
test
inc
jge
sarb
push
push
sbb
scas
int
movsl
push
xor
cmp
bound
jle
daa
ljmp
and
mov
cmp
sub
in
sahf
add
push
xor
lock
push
dec
out
push
inc
js
stc
or
mov
outsl
imul
push
outsl
adc
test
and
xchg
or
sbb
shl
stos
sbb
cmp
mov
sub
ja
mov
in
push
adc
int3
lds
sub
and
cmp
mov
mov
inc
pop
cld
xchg
pop
leave
cmpl
movsb
dec
mov
daa
fmuls
gs
fpatan
push
inc
mov
pop
cld
test
push
push
enter
or
mov
add
mov
pusha
scas
or
aaa
inc
jp
inc
pop
or
mov
insb
pop
inc
cmp
pushf
inc
sbb
outsb
nop
dec
adc
add
dec
cmpsb
mov
mov
je
ljmp
push
xor
jae
jle
movsb
stos
cmc
int3
andb
aas
ret
jno
rcrb
popa
bound
mov
shrb
push
inc
hlt
inc
fs
nop
imul
cwtl
cltd
nop
lret
jge
addl
andb
cwtl
push
cmpl
lods
je
movsb
xor
cwtl
mov
sti
sbb
sbbb
xor
xor
mov
test
lea
push
jecxz
and
xchg
jno
hlt
xchg
inc
pushf
arpl
scas
lcall
pop
sbb
jnp
jae
leave
andb
push
or
daa
inc
jo
mov
pop
sbb
cmpsl
jg
ja,pn
adc
rolb
dec
push
add
push
pop
dec
inc
jnp
cli
pop
push
adc
jnp
test
aaa
xchg
leave
movsb
ss
sub
pop
push
xabort
scas
fsubr
sbb
xlat
push
xchg
imul
mov
aaa
xor
mov
outsl
jg
lds
xor
jle
push
add
mov
pop
mov
outsl
xchg
mov
int3
subl
jbe
mul
addl
lret
cmp
mov
mov
push
sahf
jp
sub
int3
push
mov
into
inc
push
xor
mov
je
leave
testb
cmc
xor
pause
int3
ja
jnp
leave
data16
xor
repnz
hlt
xchg
test
ja
xlat
daa
pop
nop
or
lods
outsb
ficomps
test
lock
imulb
movsl
or
pop
jae
sti
int3
addr16
pushf
fcmove
cmpsl
push
sub
adc
mov
xor
cmp
les
rolb
ds
pop
mov
adc
jg
data16
xchg
pop
xor
jns
inc
rolb
jp
cltd
sub
inc
insl
xchg
jnp
int3
scas
daa
xchg
out
mov
cmp
lret
add
mov
test
pop
pusha
xor
jg
jb
cmpsb
in
pushfw
int3
inc
jl
jmp
add
arpl
int3
aad
test
adc
sbbb
stc
ljmp
push
adc
int3
and
or
xor
inc
pop
test
les
jle
inc
stos
xchg
mov
jae
mov
fsubl
hlt
jl
data16
jl
jns
imul
xor
nop
in
sbb
bound
imul
jo
xlat
mov
jl
fidivrl
sub
movsl
es
mov
sbb
xlat
mov
mov
daa
js
repz
lret
pop
sbb
inc
mov
mov
xor
int3
mov
adc
jo
dec
pushf
xorl
cmpsb
xor
cwtl
cltd
popf
lock
mov
sbbl
mov
push
andb
cmp
in
aas
jmp
hlt
sahf
outsl
sarb
xchg
xchg
movsl
xchg
dec
insb
icebp
data16
pop
adc
push
pop
mov
add
lret
cmpsl
fstl
js
je
cmpb
mov
movsb
imul
fucomip
in
icebp
stos
adc
imul
jl
insb
sub
pop
push
add
sub
aad
push
jnp
insb
jne
ret
jns
xchg
pop
adc
int3
add
popf
jl
mov
outsl
das
ja
add
dec
push
das
les
mov
sub
clc
fdivr
stos
jnp
xor
in
rcrb
not
jb
les
test
pop
adc
xorb
adc
add
fwait
mov
mov
lret
pushaw
dec
sub
outsb
lods
addr16
loop
cmp
shrb
xlat
pop
aam
data16
cmpsl
mov
fisttpl
cwtl
and
ret
xchg
sbbl
dec
icebp
das
mov
sub
ficoms
and
mov
bsf
leave
pusha
rep
in
mov
cmpsb
loope
fwait
insl
pushf
rcl
test
subb
pop
lock
xor
mov
test
ss
inc
sub
ds
xchg
shlb
push
clc
fprem
out
out
lret
push
sub
jne
xchg
das
decb
jmp
daa
pusha
cmpsb
rcl
jnp
push
add
pop
test
das
lret
cwtl
mov
cmp
mov
dec
fimuls
outsl
or
jne
cld
inc
sbb
cmpsl
int3
jb
sbb
movsb
cld
mov
cld
and
scas
jno
ss
or
lods
push
add
fldt
sbb
repz
adc
dec
popa
pop
lods
stos
int3
es
mov
cmc
test
adc
out
xor
shlb
lods
jae
inc
push
and
mov
loopne
mov
daa
daa
sub
test
fs
sub
adc
mov
lret
sub
lcall
xchg
sbb
sub
int3
sbb
pop
jbe
and
or
jl
add
sub
jo
mov
cs
xchg
scas
int3
or
push
shr
mov
in
adc
mov
orb
in
pop
cmp
inc
mov
repz
and
mov
xchg
lahf
mov
addr16
jecxz
jp
icebp
jo
aam
push
fcomi
stos
add
loopne
pop
repnz
cwtl
das
push
loope
inc
dec
lret
add
cmp
jb
je
test
decl
jge
cmpsl
adc
adc
sub
aas
mov
xchg
sbb
mov
cmpsb
or
outsl
loop
addr16
pop
je
aas
cmp
push
cmc
data16
sub
cmpsl
outsb
je
xlat
arpl
test
xchg
jno
ss
or
lret
mov
mov
mov
fmul
inc
test
fcmovnb
push
push
lahf
xlat
push
call
mov
fcomps
jnp
xchg
cmpsl
test
dec
mov
pusha
mov
xlat
outsl
pusha
and
jno
ss
or
xor
lret
dec
jecxz
and
pop
jnp
mov
or
outsl
les
xchg
sub
cmpsl
cmpl
int3
bound
xor
push
and
test
movsl
int3
inc
das
orb
iret
mov
jg
in
jo
hlt
lret
inc
jmp
mov
mov
xor
fsubs
xlat
ror
enter
ljmp
add
cmp
jae
rcrb
mov
or
inc
mov
mov
pop
mov
push
jl
mov
mov
sub
mov
dec
jge
push
push
loope
loope
lods
inc
in
daa
int3
sub
data16
rcrb
jb
es
insb
iret
es
jecxz
ror
loopne
jmp
lahf
adc
in
fnsave
orb
arpl
push
jae
insb
outsb
test
sub
bound
mov
dec
aaa
xor
sub
in
insl
jo
imul
movsl
es
cltd
popa
jl
in
fwait
pop
mov
repnz
xchg
xlat
mov
enter
and
int
imul
shl
test
push
xchg
popf
ja
add
dec
test
jns
dec
arpl
mov
pop
lds
mov
mov
or
jecxz
fidivrl
cltd
aas
test
insl
je
mov
fadd
cmc
clc
dec
pop
lods
hlt
scas
cmp
lea
adc
jl
pop
cwtl
xor
int
lcall
cmpsb
dec
sub
cld
je
adc
adc
filds
int3
jo
shl
xor
sub
icebp
sub
mov
sbb
dec
arpl
cmpsl
fiaddl
mov
lret
pop
mov
inc
ljmp
shlb
push
bound
add
sub
int
dec
jo
xor
sahf
out
mov
xor
enter
jnp
insb
movsb
and
inc
lock
pusha
mov
push
daa
inc
push
push
sbb
inc
cmpsb
aam
mov
push
cltd
fcomi
loopne
push
mov
push
and
jge
lods
jnp
sti
adc
and
jl
inc
mov
int3
adc
push
jnp
aas
mov
jno
daa
mov
or
add
imul
mov
add
mov
xchg
pop
and
in
dec
push
inc
adcb
jmp
les
mov
mov
xor
enter
ret
dec
out
pop
aam
mov
jge
mov
mov
adc
imul
movsb
and
push
sub
mov
jmp
mov
pop
hlt
sub
add
sbb
mov
lods
int3
sti
movsl
pusha
jno
mov
push
push
in
xlat
ret
xchg
lods
mov
inc
incl
imul
dec
std
or
pop
sub
mov
arpl
push
mov
sbb
pop
mov
dec
int3
add
xor
ret
adc
sub
jle
jne
lret
fdivrl
in
lret
dec
or
stos
ficompl
enter
adc
or
lods
xchg
das
inc
and
mov
sar
in
gs
pusha
insl
lahf
xchg
repnz
repnz
xchg
add
jle
aad
jb
adc
fwait
mov
aaa
das
push
or
lahf
mov
xlat
sub
cmp
push
mov
lcall
push
ret
mov
cli
bound
lret
fbld
mov
arpl
dec
daa
lret
and
es
mov
clc
lds
pop
pop
fwait
sub
leave
leave
cmp
jo
sub
jle
cs
jmp
xchg
daa
shr
sub
sub
xchg
subl
lods
daa
aas
in
div
xchg
pcmpgtw
jge
ljmp
add
gs
popa
test
xor
push
sub
sbb
lods
xor
sbb
xchg
popf
or
test
jge
dec
cs
push
cmpb
xchg
push
repnz
ret
mov
add
sub
mov
xor
out
roll
mov
addr16
sub
inc
adc
fdivs
hlt
mov
movsl
roll
sbb
cltd
or
sbb
add
or
jmp
jns
ret
mov
adc
push
cwtl
aas
sbb
aaa
sub
pop
stos
aas
sub
ss
xorl
stos
xor
insl
es
xchg
sub
rol
jl
xchg
fisubrl
cmp
movsb
addb
dec
jge
fcomi
and
sub
outsl
in
stc
mov
hlt
lret
push
cmp
lods
aam
test
call
mov
int3
ss
cmp
std
clc
int3
nop
jnp
dec
cwtl
imul
pop
outsb
repnz
filds
xorb
aam
pop
loop
callw
dec
and
pop
hlt
daa
mov
pop
jmp
lock
les
repz
adc
jnp
data16
jnp
cs
sub
fsubl
rcrb
pop
outsb
pop
push
pushf
and
loopne
scas
adc
clc
xchg
xor
test
sub
xchg
cltd
or
mov
sbb
aas
xor
sub
jecxz
mov
pop
or
ss
xchg
lahf
leave
sahf
fcomps
xor
imul
jl
inc
out
stc
test
test
int3
jno
pop
lret
out
mov
fistpl
mov
cmpsb
fwait
aas
and
sub
insl
test
jb
movsl
push
enter
cmc
mov
or
mov
jp
fisubrs
jae
lret
adc
or
xor
push
test
in
sahf
and
pop
mov
xor
call
jno
cmc
lods
repz
cwtl
jno
sbb
mov
dec
fdivrl
and
out
addl
fists
add
popa
notb
nop
mov
jno
jae
lock
adc
pop
adc
sarb
xor
stos
adc
mov
test
pop
lahf
push
mov
loope
cltd
jns
movsl
daa
xlat
adc
hlt
inc
lret
jecxz
xchg
std
jns
fldenv
popa
test
lds
xchg
xor
sbb
popf
shrl
dec
jp
inc
mov
or
mov
int3
lcall
mov
lods
je
sub
aaa
adc
inc
cltd
sub
aam
outsl
arpl
pushf
lret
push
lods
fmull
dec
pushf
je
or
jbe
std
xor
enter
xchg
push
or
cwtl
movsl
and
inc
scas
mov
jb
and
push
ljmp
outsl
mov
loope
mov
mov
add
enter
pop
int
adc
call
and
cmc
cmc
mov
or
mov
or
push
dec
push
cmp
mov
pop
lods
int3
inc
into
mov
mov
pop
mull
test
or
stos
movsb
xchg
insl
pop
push
int3
mov
mov
fcoml
dec
fsubs
sahf
pop
mov
mov
mov
cltd
pushf
cmp
lret
pop
xor
test
add
mov
icebp
into
inc
stos
xor
lods
aaa
xchg
rolb
test
dec
sbb
pop
rolb
jmp
cmpsl
mov
mov
out
push
lods
adc
enter
fs
mov
data16
dec
cmpsl
pop
xor
frstor
jmp
pop
fs
jle
jnp
insb
dec
and
test
clc
cs
and
pop
push
shrb
pop
push
cmp
lods
mov
aad
mov
call
pop
jns
shrb
mov
leave
lret
sub
jbe
out
xchg
test
repnz
sub
jmp
add
test
movsb
lds
inc
mov
and
insb
daa
jne
out
sub
insl
push
pop
pop
cli
push
mov
push
loop
in
or
push
jge
xor
mov
inc
dec
xchg
mov
jg
les
mov
leave
or
imul
mov
push
loopne
sbb
mov
push
jle
je
cmp
rorb
stos
and
ret
xor
scas
arpl
in
mov
inc
aam
sub
xchg
mov
sub
inc
sbb
and
pushf
cmp
jnp
mov
xchg
subl
or
xchg
aaa
outsb
xchg
sahf
xor
fwait
mov
repz
lret
fiadds
pop
int3
rorb
sbb
pop
test
int3
jg
dec
mov
mov
dec
fsubl
sbb
lods
pop
push
xor
push
lods
and
mov
loopne
pop
dec
jg
pop
test
push
lret
mov
fs
cmpsb
movsl
scas
pushl
sbb
movsl
jb
icebp
cmpsl
jns
jo
je
aad
ret
outsl
sahf
mov
cmp
cmp
mov
xchg
hlt
jnp
push
ds
andl
test
adc
int3
in
call
clc
push
out
lret
push
stos
into
insb
fisubl
xchg
fidivs
jmp
lods
shlb
lods
jbe
sbb
mov
nop
sbb
mov
mov
or
sahf
pushf
pop
or
insb
jle
scas
je
mov
sub
xchg
mov
inc
pop
mov
bound
aaa
pop
imul
jecxz
fcmove
jle
sbbb
lcall
xor
scas
jb
push
lock
xchg
cmc
mov
mov
out
aam
add
and
ficomps
or
inc
lods
pop
inc
mov
jne
pop
push
les
dec
scas
clc
add
sub
xchg
pushf
je
mov
xchg
pop
inc
lcall
cmp
mov
movsl
sub
leave
test
in
aaa
mov
into
jae
test
cmpsb
jnp
pop
mov
or
aad
scas
loop
movsb
xor
test
test
mov
and
loope
or
stos
stos
leave
jle
xchg
mov
sub
aas
lods
call
mov
sbb
nop
rcrb
icebp
add
push
jl
xor
dec
ret
stos
inc
add
mov
pusha
clc
lods
cltd
xchg
push
cmp
subb
inc
lahf
mov
mov
or
mov
and
xor
mov
test
aas
or
mov
jp
or
mov
leave
icebp
push
cmp
in
cli
sub
xchg
adc
jbe
jmp
shll
rcll
ds
xor
adc
lods
subl
cwtl
mov
cmp
and
xor
cltd
sahf
jmp
addr16
loop
ljmp
or
and
xchg
mov
mov
sub
lahf
xor
stos
mov
arpl
dec
stos
out
int3
fs
movsl
arpl
cs
fisubrs
cmpl
add
into
mov
adc
xor
sub
pop
jmp
jle
insl
arpl
arpl
and
cmp
push
lods
xor
fmulp
mov
scas
das
add
push
dec
mov
out
lahf
outsl
lret
mov
imul
fmul
jmp
xor
xor
jne
cmp
xchg
aaa
aam
pop
push
adc
xchg
mov
je
pop
push
and
movsb
xchg
push
cmp
add
pop
xrelease
pop
scas
arpl
gs
orl
in
test
test
push
mov
push
and
or
les
and
std
int
mov
daa
mov
adc
xchg
mov
in
out
sbb
add
pop
and
adc
aaa
lret
int
mov
stos
std
push
lods
cld
scas
pop
adc
lcall
lock
and
mov
pushf
out
imul
mov
popa
pop
xchg
in
xchg
jmp
push
or
ficomps
mov
inc
sub
mov
pushf
and
jns
cmp
mov
sbb
xor
icebp
cmpsb
xchg
movsb
xchg
add
jb
mov
dec
jnp
ret
cmp
adc
jns
cltd
jmp
in
push
pop
push
lret
mov
xchg
pop
mov
push
jae
popf
stos
dec
sub
std
lods
gs
std
sub
int3
and
jnp
or
cmp
add
inc
jp
inc
adc
popa
test
pusha
mov
xchg
pop
xchg
dec
les
hlt
ja
test
imul
out
test
stc
sbb
jb
lahf
dec
enter
fstpl
mov
ret
pusha
pop
pop
pop
sti
push
mov
test
mov
fs
ss
outsb
aas
subb
pop
inc
dec
divps
in
dec
jp
mov
jle
jnp
inc
push
pop
xchg
loop
pusha
popa
or
inc
push
push
cmpsl
fwait
and
inc
cmp
outsl
xchg
mov
xchg
mov
pop
leave
xchg
and
mov
mov
xor
xor
enter
cmpsb
popa
xchg
imul
pop
push
pop
push
movsb
push
inc
add
clc
cmc
rcrb
ficompl
sbb
dec
lods
or
shrl
int3
sbb
push
out
mov
inc
xor
mov
jno
stc
pop
mov
xor
movsb
and
sbb
add
in
arpl
sbb
test
lcall
dec
jp
lods
push
hlt
inc
ror
push
xchg
movsl
pop
inc
in
push
jl
test
xchg
enter
xor
lds
or
outsl
dec
push
mov
xchg
xor
outsb
add
sub
adc
movsb
jo
pop
jl
xchg
movsb
jecxz
push
and
out
mov
mov
inc
push
jo
cmp
decl
leave
mov
push
mov
movsl
cmp
cmp
lcall
mov
pop
jge
mov
cld
push
outsl
xchg
imul
cmp
sub
outsl
cmp
pop
push
inc
dec
pop
xor
mov
out
jo
cmp
sub
mov
addb
pop
lods
les
outsb
scas
int
leave
int3
scas
mov
xchg
fidivl
and
jns
xchg
pop
pop
int3
inc
mov
sbb
sub
xor
int3
in
sbbb
cli
in
sub
sub
jns
add
icebp
push
or
dec
mov
push
add
aad
fstpl
stos
insb
jae
jp
mov
sbb
ljmp
test
std
cmpsl
fcoms
gs
mov
imul
jnp
adc
sbb
jnp
mov
and
ret
popf
push
mov
sub
mov
dec
cld
lcall
push
adc
xchg
jl
test
xchg
mov
xchg
xchg
add
sub
cmpsl
push
mov
push
inc
popa
cltd
fldcw
inc
xchg
fsts
pop
jno
jo
xchg
mov
mov
aas
aam
int
imul
sbb
lret
add
sbb
movsl
std
loopne
and
add
loop
loopne
ret
out
push
stos
call
pusha
scas
insb
cs
xchg
std
xchg
cmp
adc
mov
decb
inc
and
pop
ror
out
dec
or
jl
adc
push
sub
and
call
mov
lcall
push
lods
lcall
cmc
icebp
imul
leave
mov
xchg
sahf
fs
movsb
mov
and
lods
xchg
xor
stos
stos
xchg
jg
andl
rorb
xchg
ret
adc
das
scas
xchg
lret
stos
push
sbb
std
jnp
scas
cmp
lock
test
fldt
inc
pop
cltd
int3
inc
lods
sahf
sbb
pushf
lea
imul
lods
sub
adc
ja
and
pop
push
shlb
mulb
pop
mov
in
movsl
xchg
push
xchg
insl
es
into
je
movsl
imul
mov
sbb
sub
ret
bound
mov
aas
jge
cmp
movsl
mov
lods
ja,pn
test
insl
mov
movsl
xchg
je
movsb
sub
dec
subb
inc
or
dec
mov
shl
aas
rcrb
jecxz
test
and
jo
jnp
aas
lea
js
shrb
dec
test
and
sahf
lods
xchg
shll
dec
xchg
jns
leave
inc
mov
adc
push
adc
sbb
mov
inc
xor
data16
mov
icebp
call
pop
jg
ficoml
ljmp
je
outsl
insl
xor
in
int3
xor
imul
sub
es
imul
add
jle
cmpsl
xchg
std
das
xchg
jae
stos
stos
cwtl
sbb
movsb
cmpsl
mov
push
rcrb
pop
xchg
add
enter
jns
inc
movsl
cmpsl
xchg
aad
test
sub
pop
inc
aam
push
jecxz
jbe
mov
sub
js
enter
pop
arpl
xchg
mov
out
pop
mov
test
or
mov
test
jnp
push
data16
adc
sub
pop
out
popf
xor
sub
lods
imul
xor
xchg
xor
pushf
lret
sbb
cmpsl
movsl
sub
push
adc
pop
test
jmp
mov
arpl
mov
xor
pop
mov
lods
and
stc
add
mov
std
xor
idivb
pop
nop
push
cmp
and
or
jb
sub
push
mov
call
rcrb
int3
dec
pop
push
mov
lea
mov
push
lret
add
daa
cld
push
int
repnz
cmpsl
or
xchg
cmc
and
mov
xchg
mov
or
sub
fs
cli
and
loope
bound
outsl
xor
ss
add
outsb
aas
push
add
dec
test
repnz
sbb
sbb
xor
add
aaa
pushf
cmp
leave
rcrb
aad
shll
arpl
nop
popa
lahf
mov
mov
ret
xor
push
xor
gs
push
mov
movsl
adc
sub
lock
loopne
roll
inc
mov
adc
mov
cmp
icebp
push
inc
movsb
push
and
xchg
adc
lods
push
call
insl
mov
arpl
xchg
jnp
mov
sarb
jbe
ret
mov
cmpsb
scas
divl
or
adc
int3
jge
loopne
insb
loopne
push
xor
mov
arpl
xor
pop
mov
add
pop
push
mov
stos
xor
imul
add
mov
arpl
fstpl
fdivl
push
in
test
int3
int
pop
arpl
mull
and
pop
dec
mov
jge
and
mov
insl
ljmp
adc
jo
pop
mov
cmp
cmp
sub
inc
dec
cmpsl
dec
cmpsb
lods
sbb
mul
fadd
jae
inc
mov
fimuls
and
movsl
sti
jl
icebp
int3
mov
and
mov
shl
sub
rep
ss
enter
sbb
pop
mov
sub
xchg
mov
mov
fucomi
mov
ds
imul
mov
lock
xchg
pop
sahf
mov
fs
js
dec
xor
lods
xor
nop
pop
mov
rcll
lods
loop
sub
int3
sarb
ljmp
push
ljmp
ret
jge
sub
mov
aam
mov
mov
sbb
sub
xchg
dec
lret
dec
gs
xchg
sarb
lret
pop
mov
mov
xor
jno
sahf
loopne
inc
jae
sbbl
je
in
xchg
lods
jo
in
imul
push
in
nop
scas
test
ja
outsb
stos
shl
adc
mov
rclb
scas
test
stos
stc
and
stos
inc
sub
arpl
movsl
sbb
pop
xlat
divb
xor
sub
fs
xor
lret
jb
ret
test
lahf
lods
lock
pushf
lcall
sub
cltd
hlt
fwait
lods
mov
push
mov
out
xchg
inc
cld
adc
testb
nop
hlt
pop
les
sbb
cwtl
call
mov
adc
mov
jae
xor
and
fnstenv
pop
fs
sarb
mov
aad
push
aas
popf
fsubs
mov
sahf
jp
loopne
mov
cwtl
icebp
inc
jp
sbb
push
xor
pop
cmp
jecxz
pop
cmpl
int3
test
cmpsb
outsl
stos
dec
xchg
fbld
pop
jno
scas
inc
out
jbe
inc
cmp
xchg
bound
jecxz
or
ss
gs
aas
outsl
jge
popa
xchg
ds
dec
cmp
lret
adc
jne
mov
push
mov
push
mov
adc
pushf
leave
push
inc
jno
repnz
jae
rorl
push
jle
out
jg
jb
jae
ljmp
insl
pop
cmp
stos
enter
pushf
sub
int3
stos
pop
stos
imul
aaa
or
fmuls
imul
mov
cli
adc
stos
lret
mov
stos
fidivl
arpl
mov
xlat
cli
xor
int3
rolb
xchg
dec
inc
scas
push
cmp
xlat
fisttpl
or
pushf
pop
xor
rorl
mov
dec
in
jmp
rorl
outsb
push
insl
push
sarb
pop
push
push
cmp
or
push
jle
pop
aas
or
sub
fidivs
sub
aas
pop
mov
xor
cs
xchg
stos
test
cmp
inc
or
andb
ret
push
or
test
pop
outsl
mov
cmpsb
movsb
xor
push
sub
xor
mov
jecxz
jne
stos
add
inc
imul
imul
mov
rolb
mov
icebp
push
or
call
xor
aaa
shrb
pop
mov
pop
pop
and
push
mov
ljmp
nop
sbb
in
jecxz
jns
aas
mov
aas
add
je
pop
push
insb
add
loope
test
or
and
mov
mov
mov
or
xor
mov
testb
mov
xchg
cmp
jae
nop
and
xor
sub
lahf
jle
test
dec
je
test
je
int3
pop
jne
mov
imul
push
mov
mov
xor
and
add
icebp
pop
dec
test
in
inc
push
mov
mov
pop
in
sahf
enter
lock
pop
lods
lds
jo
test
fbld
cltd
les
dec
je
jae
imul
add
jbe
sbb
mov
adc
mov
fstl
popf
xchg
xor
mov
ja
movsl
pop
popa
sahf
mov
inc
int
jns
adc
pushf
pushf
loope
daa
jo
jl
dec
jns
add
pop
cmp
hlt
inc
gs
push
bound
and
sahf
push
loope
xor
sti
mov
std
call
sub
lods
add
push
lock
in
fisubs
movsb
dec
dec
cmpsl
aad
xchg
xor
popa
je
push
mov
jl
jae
and
loopne
xchg
aad
mov
adc
loope
cli
dec
mov
bound
adcl
push
inc
nop
adc
gs
shlb
mov
dec
sarl
daa
das
inc
arpl
sbb
pushf
arpl
std
int3
mov
mov
cmp
stos
cmc
imul
mov
mov
lcall
cs
fcomp
add
pushf
add
jno
xchg
xchg
cmc
or
lods
shrb
mov
or
inc
mov
out
lock
mov
cs
test
daa
fisubs
int3
jecxz
cmc
cmp
dec
sbb
stos
pop
dec
mov
das
lcall
outsl
in
call
push
and
xor
std
loop
pusha
movsl
add
mov
insl
leave
fisubrl
mov
mov
popf
pop
scas
arpl
inc
xchg
out
cmp
xor
push
mov
loopne
les
jg
cwtl
and
pushf
or
jmp
cli
dec
cmp
jecxz
fwait
cmp
in
sub
mov
mov
hlt
sbb
movsb
mov
daa
mov
jnp
xor
push
cmpsb
push
scas
jns
lods
pop
ss
and
push
orb
fsubrp
mov
mov
mov
test
mov
rcll
xchg
and
fldcw
les
fstpl
or
jns
in
pop
aam
jb,pt
movsb
hlt
xlat
push
aad
mov
test
sarl
and
stos
aas
mov
lret
outsb
icebp
add
mov
int3
popf
xor
iret
div
push
inc
loop
jg
stos
pop
push
jo
outsl
or
or
inc
enter
inc
sub
cld
jle
xor
adc
mov
insl
xchg
mov
pusha
mov
and
push
in
xchg
cmpsl
scas
xor
mov
dec
inc
push
mov
into
jnp
ret
lcall
add
leave
popa
stos
stos
insb
ret
scas
jno
and
cmp
pop
inc
scas
push
les
jb
mov
aas
dec
jp
movsl
mov
leave
sub
jle
mov
test
nop
leave
loop
imul
dec
mov
add
cmp
xlat
je
movsb
sbb
arpl
mul
pop
in
lods
jb
cmp
mov
sub
orl
pop
das
mov
mov
movsb
sbb
mov
rorb
stos
test
xchg
xchg
notl
sbb
pop
outsb
fs
leave
pushf
in
mov
icebp
aas
popf
mov
faddl
fbld
mov
sbb
popf
imul
daa
sbb
sbb
jns
mov
sbb
xor
stos
pop
inc
das
cmp
ret
and
pushf
mov
in
mov
std
dec
add
ret
mov
filds
fidivrl
mov
outsb
dec
mov
adc
insb
add
inc
push
lret
xlat
inc
adc
movsb
test
aas
stos
mov
je
test
fcoml
mov
stos
cmp
loope
pop
xchg
dec
pop
sbb
stc
insb
lahf
add
lret
sub
dec
test
dec
outsl
sti
jo
rep
leave
xor
mov
inc
mov
sahf
sub
jl
repnz
je
and
push
in
es
pop
xchg
scas
icebp
outsb
push
lea
das
jo
inc
jno
outsb
lds
imul
dec
jnp
push
or
sahf
leave
adc
lcall
mov
and
mov
popf
add
lahf
push
dec
mov
inc
dec
cs
mov
stc
mov
push
jmp
rcr
pop
cmpsl
mov
in
sahf
mov
out
cmpsb
inc
pop
xor
lahf
push
test
and
rcrb
test
xchg
xchg
mov
popf
int3
xchg
cmp
nop
lods
repz
setl
rclb
xchg
sub
int
mov
xlat
clc
inc
icebp
leave
xchg
jne
sub
sub
dec
xor
scas
pop
mov
cld
xor
pop
xchg
lret
scas
xor
outsb
xor
mov
mulb
jbe
sub
das
lods
and
lods
mov
sub
test
stc
leave
popf
sub
and
lods
inc
xor
dec
mov
xchg
mov
aam
lods
lret
aad
andb
dec
mov
cld
dec
inc
jae
and
sbb
movsb
inc
dec
adc
dec
xor
stos
xlat
jae
xchg
mov
insl
mov
xor
nop
adc
int3
icebp
sub
cwtl
sub
pop
pop
push
mov
add
movsb
mov
pushf
popa
lcall
leave
jp
jns
stos
fsubrl
les
fistpll
cwtl
outsl
in
xor
into
mov
inc
cmpsb
jns
arpl
pop
test
gs
fcmovnu
shlb
loope
shll
mov
pop
add
shlb
mov
pushf
sub
aas
cltd
sbb
push
out
aaa
call
movsl
cmp
popa
lret
adc
lahf
test
ret
pushf
and
sub
push
outsl
movsb
rclb
adc
mov
movsb
jb
sti
sub
push
ret
fs
sbb
movsb
jnp
jne
sub
mov
cmpsl
jecxz
in
movsl
mov
cmp
and
cmp
sub
mov
lgs
repz
cli
je
xor
mov
inc
sar
rcrl
test
adc
out
cmpsb
daa
fdivl
and
pop
xchg
les
popf
stos
xchg
jecxz
sub
or
test
mov
mov
in
push
jb
in
daa
imul
fisubl
and
nop
outsb
ljmp
shl
andb
insb
and
sub
pop
rclb
int3
inc
sub
popf
insb
and
inc
sub
popf
insb
and
daa
mov
vsubps
or
stos
outsl
enter
clc
test
cmp
test
mov
inc
cmpsb
pusha
test
sub
cmp
jnp
nop
cmpsb
mov
mov
mov
mov
xchg
mov
testb
fwait
sbb
hlt
mov
mov
jns
aam
add
pop
call
adc
nop
scas
lds
dec
sub
imul
add
mov
pop
fwait
mov
nop
xchg
mov
js
jo
pop
mov
inc
in
mov
sub
insb
movsb
cli
jo
sub
insb
lods
cli
jo
sub
push
sbb
xchg
addl
sbb
jae
lahf
pushl
lahf
movsb
cmp
cmpsb
mov
jb
lds
test
jne
inc
test
test
inc
jecxz
es
ret
pop
aad
ficoml
stos
xor
cltd
xor
pop
jb
stos
test
jae
mov
xchg
cwtl
imul
add
mov
jns
popl
cld
push
xor
and
fcomps
pushf
add
push
mov
push
pusha
dec
add
dec
enter
jnp
outsl
mov
xor
sbb
pop
out
call
sbb
loop
pushf
fimuls
push
push
insl
in
les
outsb
mov
or
sbb
jo
scas
inc
ret
inc
shlb
movsb
outsl
inc
xchg
xor
mov
mov
lds
outsb
das
mov
ljmp
xor
mov
shrl
cmpsb
and
and
aad
add
inc
enter
mov
mov
aas
xchg
mov
movsl
pop
in
lret
movsl
xor
int3
daa
cld
mov
cltd
in
test
mov
out
cmc
jecxz
sub
mov
jl
cwtl
lret
inc
mov
mov
sarl
xor
ja
sarl
stos
mov
xchg
sahf
inc
enter
lock
fs
mov
xlat
sbb
ficoml
sahf
pusha
inc
pop
adc
stc
js
ljmp
mov
pop
aas
mov
pop
mov
leave
pop
jb
mov
mov
imulb
cwtl
outsb
pushf
nop
cmp
imul
in
lret
mov
movsb
adc
push
add
in
call
mov
push
cmp
aas
popf
fstpt
mov
dec
mov
enter
xchg
mov
imul
xor
xchg
xchg
aas
leave
adc
xchg
xchg
arpl
shr
inc
cmpsl
xchg
push
aas
shl
add
icebp
stc
fisubrl
push
mov
jns
dec
cmpl
lods
push
sub
add
sub
rolb
aas
or
mov
xor
jp
loop
mov
stos
xchg
mov
test
lods
pushf
mov
pushf
std
rorb
cmpsb
std
fadds
inc
mov
pusha
leave
orl
lods
push
aas
pop
mov
adc
xchg
inc
in
inc
or
loope
sbb
stos
fwait
rcll
adc
leave
inc
pop
adc
stos
int3
cmp
cmp
pop
pop
pop
adc
adc
movsl
data16
inc
mov
or
dec
push
mov
popa
xchg
rcll
fistpl
jbe
jbe
pop
dec
mov
adc
push
sbb
imul
ficomps
insb
fsubrs
xchg
daa
or
xlat
and
lahf
jg
adc
xchg
les
ret
icebp
jle
outsl
lret
cmp
xor
stos
aam
xchg
arpl
inc
sahf
jnp
sub
or
cmp
sub
sub
outsl
test
cwtl
nop
jno
jns,pn
call
and
adc
inc
in
jmp
insb
jge
mov
mov
aas
rorb
int3
daa
jne
movsl
and
cld
or
lods
nop
or
pop
add
jae
mov
mov
bound
push
in
cmpsl
fs
xchg
push
pop
sub
lods
icebp
or
loop
cmp
les
jb
rcll
xchg
cmp
push
leave
stos
mov
scas
sub
adc
lcall
test
mov
pop
mov
in
cwtl
lcall
stos
jmp
test
inc
ds
lcall
add
fdivs
push
xor
jp
je
ret
mov
call
pop
movsl
daa
mov
pop
loope
mov
sbb
js
stos
mov
xor
jecxz
mov
lea
repnz
fbstp
mov
stos
sub
dec
mov
repz
popf
ja
in
cmp
xor
cwtl
adc
inc
pop
and
mov
mov
test
sub
adc
jb
rclb
sub
xor
xor
xchg
and
lahf
sub
inc
movsl
jae
mov
aas
mov
inc
inc
ja
jg
sbb
mov
xchg
fistpl
cmp
mov
mov
in
adc
das
mov
scas
test
out
xchg
mov
int3
outsb
leave
cmp
stos
sahf
insb
icebp
dec
adc
int3
imul
insb
xor
cmpsl
dec
pushf
cs
rclb
add
mov
icebp
add
addr16
mov
adc
xor
test
xchg
testb
pop
lds
cmp
bound
xchg
pushf
sub
fwait
inc
cmpsb
hlt
mov
dec
mov
in
sbb
shrl
or
push
pop
fsubrl
jb
fistps
or
ja
aam
cld
mov
outsl
adc
movsl
sub
inc
leave
shlb
ret
adc
sub
mov
and
popa
repz
dec
and
scas
sahf
jno
ret
nop
dec
cmp
lods
push
inc
mov
xor
inc
jl
stos
jge
loop
push
stos
jp
leave
inc
cwtl
les
or
daa
hlt
test
stos
ret
mov
test
lods
sahf
dec
cltd
mov
mov
gs
add
xchg
stos
inc
or
pop
stos
hlt
xor
mov
dec
testl
jmp
pop
inc
je
imul
adc
gs
in
mov
in
lahf
mov
test
stos
aas
insb
mov
adc
aaa
les
je
mov
rolb
mov
lods
jl
aas
lock
jns
pushf
or
cltd
repz
in
leave
add
push
dec
sub
gs
in
daa
insl
mov
cltd
cmpsl
sub
cmpsl
xchg
loop
into
xchg
xchg
push
leave
bound
xchg
sub
mov
mov
mov
hlt
jl
inc
cmpl
ret
add
mov
sub
jne
pop
clc
xchg
scas
je
cwtl
test
pushf
adc
insb
inc
mov
adc
and
insb
mov
aas
adc
push
pop
cltd
push
cmpsb
mov
insl
xchg
or
repnz
mov
sub
jecxz
jmp
arpl
mov
fcompl
or
daa
std
mov
jge
fldl
mov
je
in
out
mov
jae
cwtl
data16
xchg
insb
loope
lods
mov
xchg
fwait
into
daa
xor
xchg
push
pop
data16
jb
jl
inc
imul
std
fadd
lea
fs
int
xor
lea
outsb
pop
add
dec
mov
lods
mov
popa
inc
or
mov
mov
push
jae
sub
lods
push
sarb
and
push
mov
add
aas
jo
inc
pop
cmp
xchg
loopne
sbb
scas
xor
sub
sub
jae
notb
mov
mov
aas
movsb
daa
inc
mov
jecxz
cld
scas
arpl
outsl
stc
out
xchg
daa
lds
stos
das
lods
sbb
stos
std
or
scas
das
mov
ss
mov
xchg
dec
jns
xchg
ret
pop
int3
add
aad
dec
xchg
push
mov
daa
aaa
aam
lods
shrl
mov
ljmp
mov
shll
pushf
pushf
outsb
aad
sub
sbb
test
mov
dec
arpl
loope
pop
mov
loope
repz
mov
push
mov
sub
fimull
popf
xchg
pop
nop
pop
stos
push
loope
mov
stos
aas
xchg
cmpsb
xor
xchg
add
cmpsl
stc
sub
jae
mov
inc
adc
pop
jge
push
test
js
das
and
push
xchg
jmp
pop
adc
xorb
dec
insb
loop
inc
subb
testb
adc
lods
mov
lods
lods
movsb
mov
popf
push
xor
xchg
pop
stos
adc
mov
lret
mov
pop
daa
xchg
imul
xchg
int3
leave
mov
xchg
popf
test
xchg
push
cltd
mov
cmpsb
mov
mov
stos
cmp
ja
test
push
dec
ja
nop
es
in
push
xchg
test
jg
sti
out
adc
mov
out
mov
jns
bound
imul
mov
movsb
mov
adc
push
sub
xor
mov
pop
sbb
rol
imul
xor
push
jns
inc
imul
int3
mov
cmp
jnp
add
cwtl
test
jno
xchg
or
xorb
test
lcall
nop
xchg
xor
in
clc
xchg
jg
in
pop
xchg
les
or
mov
cmpb
jp
fdivr
mov
mov
pop
adc
imul
fs
xor
sarb
mov
test
mov
out
dec
movsb
jmp
addb
nop
test
and
push
mov
addr16
push
cmp
loop
cmpsb
adcb
int3
enter
iret
xor
jnp
pushf
data16
push
imul
adc
sbb
shlb
jae
xor
ds
jnp
stos
jbe
xchg
mov
in
mov
js
xor
xor
xchg
mov
push
inc
cs
aam
frstor
mov
movsl
not
xchg
cmp
cld
scas
sbb
xor
xchg
xor
lahf
mov
stc
bound
negl
adc
fwait
and
lea
mov
push
lods
pop
or
lret
pop
add
mov
fidivl
mov
es
dec
pop
les
sbb
jmp
pop
insb
sbb
and
push
daa
mov
xor
mov
mov
lret
scas
imul
xchg
xchg
sahf
xor
shrb
fcoms
adc
scas
leave
outsl
daa
das
addb
sub
cmp
pop
cltd
imul
fs
out
clc
add
mov
xchg
aas
aam
jno,pn
mov
push
adc
push
fs
inc
mov
movsb
mov
nop
mov
int3
mov
add
sub
cwtl
sbb
sbb
repz
jg
mov
scas
xlat
cmpsb
mov
test
subl
pop
mov
ret
jecxz
ret
repnz
das
jnp
jo
pop
fsubrs
aam
sub
outsl
arpl
mov
and
jns
jns
rcrl
adcb
push
add
sub
leave
jl
push
mov
inc
mov
insb
add
mov
insb
fbld
pushf
movsb
and
pop
emms
xor
pushf
pushf
jnp
aas
imul
mov
aaa
orb
push
fdivl
pop
jb
ret
mov
movsb
mov
fdivrl
xchg
sub
push
pop
outsb
test
mov
dec
leave
addb
mov
jl
pop
imulb
xlat
xor
xor
push
or
out
insl
jg
jne
mov
mov
int
mov
sub
and
mov
les
push
cld
adc
or
in
jae
or
inc
pop
sub
repz
mov
test
loopne
in
int3
mov
inc
dec
faddp
nop
loopne
pop
sahf
ds
ss
imul
sbb
mov
xchg
push
in
pop
fcomps
out
insb
push
pushf
in
pshufw
and
push
push
out
and
mov
leave
mov
bound
xor
push
pop
xor
xor
inc
cwtl
shrl
imul
scas
arpl
outsb
imul
jle
add
shlb
out
push
inc
cmp
call
test
mov
mov
mov
das
push
roll
add
mov
jo
mov
xchg
push
daa
push
lods
cmp
pop
pop
rorl
mov
comiss
or
cmp
jae
movswl
popa
cmpsl
lods
je
stc
sub
push
fidivrs
mov
or
insl
cltd
dec
adcb
adc
imul
cwtl
jp
aad
adc
fistl
test
sbb
push
ja
mov
jae
lods
pop
pushf
orb
lock
add
sub
pop
shrl
test
stos
jl
mov
or
imul
sbb
push
sti
cmp
mov
mov
fisubrs
xchg
insb
push
xchg
dec
mov
imul
movb
sbb
mov
pop
stos
jge
push
fcmovne
scas
scas
cld
nop
andl
inc
pop
push
test
dec
jl
aam
rorl
sbb
test
rclb
les
lahf
and
lea
gs
lock
aad
test
mov
mov
lods
jb
or
sti
mov
jmp
and
sub
adc
ret
repz
mov
xor
push
dec
test
mov
or
addr16
sub
outsl
stos
push
aad
ljmp
dec
cld
sbb
push
stos
and
mov
inc
sub
mov
je
ficomps
sbb
and
jmp
jle
inc
or
movsb
int3
lcall
mov
mov
jae
pop
xchg
hlt
ds
push
imul
jae
je,pn
adc
je
sbb
push
fisubs
divb
jnp
insb
out
addr16
cmpb
out
pop
and
dec
jp
xor
xchg
push
pop
or
adc
test
sub
and
and
das
popf
push
mov
out
dec
cmp
loope
push
dec
lret
aad
or
sbb
daa
test
in
mov
or
mov
out
mov
leave
in
mov
push
fsubl
cwtl
mov
jp
out
lret
adc
or
jmp
dec
fstpt
rclb
icebp
mov
mov
jo
repz
cmp
cld
jecxz
bound
insb
addr16
scas
aas
popf
aas
popa
pusha
mov
std
in
mov
adc
jae
movsb
or
or
insl
divl
pop
into
adc
inc
imul
jecxz
test
ror
jno
pop
xchg
pop
je
dec
sub
push
icebp
xlat
sub
pushf
add
push
in
dec
jge
xor
inc
jle
aas
mov
inc
rolb
test
xor
mov
add
mov
push
cmpsl
test
push
in
mov
dec
daa
or
jbe
xor
scas
pop
push
mov
imul
aas
cltd
ret
jbe
sub
mov
xor
test
outsb
orb
int3
loopne
fsubp
sub
adcl
add
jo
jb
out
leave
lcall
pop
mov
test
mov
sub
fistps
shlb
xchg
add
insb
cwtl
sbb
jno
shll
jl
fnstenv
lock
sub
fsts
mov
loopne
je
xchg
movsl
test
jo
mov
enter
fmuls
mov
insb
ret
outsb
je
jo
push
sub
fcomps
sub
push
hlt
fmuls
stos
xchg
fcoms
hlt
fsubs
pop
dec
inc
movsl
cmp
and
std
add
xchg
dec
in
fsubrl
mov
pop
imul
daa
pop
jae
js
mov
mov
aas
mov
mov
mov
aaa
sbb
inc
cmp
sbb
daa
sub
cmp
fs
xor
and
sub
xchg
add
cli
adc
gs
push
inc
jmp
and
jnp
test
inc
fwait
leave
inc
nop
icebp
jbe,pt
xchg
cwtl
outsb
fucomi
sub
mov
fwait
or
pushf
in
cltd
sbb
xchg
sbb
mov
mov
adc
out
pop
push
jno
mov
mov
jmp
orb
inc
mov
sub
jle
mov
sub
bound
mov
mov
mov
leave
movsl
nop
xchg
js
aas
lods
and
ret
mov
mov
or
in
jns
aad
mov
add
cvtpi2ps
add
cmpsb
movsb
js
int3
outsb
jno
cmp
loop
mov
aam
inc
insl
mov
push
mov
cmp
push
movsb
inc
mov
xchg
aas
mov
mov
lods
movsb
mov
test
or
mov
or
sub
jge
out
je
lcall
adc
ret
test
data16
mov
sub
mov
mov
je
movsl
aas
ret
dec
scas
cmpsl
test
sbb
aaa
xor
jae
push
pop
adcb
push
or
xor
inc
mov
jae
xchg
cmpsb
icebp
in
mov
xchg
mov
outsb
xor
xchg
lods
shlb
lods
lcall
ljmp
sub
xor
or
jge
sub
outsb
mov
jg
sahf
jecxz
jl
mov
mov
jns
arpl
pop
xchg
cmp
sarl
loope
in
popa
add
cmpsb
mov
or
mov
movsb
adc
into
lret
xchg
mov
nop
cmc
bnd
inc
and
mov
lock
bound
int
in
pushf
stc
movb
cmpsb
mov
jns
shrb
insb
push
inc
into
add
rorl
mov
imul
aas
dec
pop
aam
jno
sub
mov
pop
push
xchg
clc
clc
fdivrp
cmp
lahf
xlat
xor
push
mov
inc
insl
xchg
fcmovnbe
cs
mov
je
test
rolb
pop
sahf
or
mov
xchg
xchg
xor
fstpl
sbb
xchg
roll
je
int3
sub
pop
and
aad
mov
lret
xchg
mov
pop
mov
jo
int3
nop
pushl
das
xor
insb
loope
cld
xor
mov
mov
out
daa
xchg
int3
xor
xor
pop
xor
ss
sbbl
ljmp
test
sahf
fs
mov
xchg
xchg
lret
or
jns
lahf
movsb
mov
shlb
fstpt
out
jge
imul
mov
sahf
adc
imul
mov
outsb
mov
call
mov
bnd
lods
xchg
dec
je
mov
or
mov
cmpsb
inc
xchg
pop
insb
test
test
jmp
xchg
ss
aam
pushf
dec
out
repnz
pop
outsb
les
outsb
test
scas
cwtl
xchg
mov
dec
push
loope
scas
stc
xor
xchg
mov
sub
lret
and
cmpsb
sub
dec
call
les
or
rcll
and
aam
sbb
test
jae
fistps
cmp
adc
pusha
out
xchg
mov
adc
stos
int3
lret
aad
mov
fucomip
dec
test
pop
mov
lea
xor
adc
jnp
push
adc
pop
in
xchg
or
adc
or
pushw
xlat
repnz
ja
insl
sub
mov
mov
or
mov
sub
sbb
xor
mov
jg
xchg
inc
push
mov
xchg
test
outsl
jno
jmp
nop
lods
mov
das
fstps
inc
lods
adcl
sub
es
mov
xor
add
gs
stos
jb
popa
test
cmpsl
inc
pop
in
loope
into
mov
cwtl
xor
adc
loope
sub
out
push
repz
imul
cmc
mov
cwtl
sbb
data16
aam
xchg
and
loopne
and
in
jecxz
sub
cmp
and
in
lahf
lret
adc
push
fildl
pusha
nop
enter
mov
mov
outsl
jecxz
ret
enter
loopne
xor
inc
pop
stc
push
fmull
xchg
popf
lcall
fnsave
jle
shlb
leave
stos
daa
jo
lds
lea
sbb
faddl
cmc
jns
sub
fsubrs
into
adc
int3
sbb
or
sbb
mov
sub
jp
xor
aam
test
jb
test
mov
sbb
loop
insl
out
sub
pushf
jns
mov
imul
les
mov
xchg
ret
xor
ret
stos
push
or
sarb
xor
add
dec
daa
pop
ss
sub
cld
push
sahf
fbld
fidivs
xchg
lcall
xchg
or
cmp
push
sub
push
mov
mov
inc
icebp
xor
lahf
movsb
ljmp
and
movsb
xchg
stos
dec
icebp
mov
inc
in
add
sbb
dec
mov
mov
shlb
fwait
mov
jge
push
lds
jmp
mov
jae
inc
sarb
ja
ljmp
bound
mov
outsl
xchg
movsl
push
jnp
inc
push
lock
push
sbb
ds
jnp
adc
sbb
xchg
stos
je
push
addr16
xchg
xchg
dec
sbb
pop
lods
aam
aas
lea
sub
xchg
xor
pop
cs
push
test
andl
out
sub
orb
add
adc
mov
out
and
cmp
je
test
test
push
repz
add
xchg
movsb
aaa
lods
xor
test
adc
cmp
mov
mov
lock
cmpsl
int3
stos
cmpsb
mov
daa
arpl
ja
mov
xor
xchg
adc
jae
cmpsb
subb
and
jge
mov
adc
xchg
daa
xchg
adc
aaa
and
stos
and
in
notl
scas
mov
xchg
imul
ret
rclb
xchg
sub
dec
jmp
push
insb
mov
aas
shrl
sbb
lods
scas
sub
sub
push
and
movsl
dec
leave
mov
push
pop
shl
sahf
jbe
inc
imul
ljmp
stc
call
push
xchg
xor
lods
push
sub
ss
adc
xchg
dec
add
pusha
cmpsb
test
pop
dec
jmp
inc
mov
outsl
rorl
jae
xor
pop
push
cltd
int3
fildll
mov
dec
xor
dec
nop
int3
loope
pop
jne
insl
push
sub
dec
mov
jae
mov
stos
xor
lods
sarl
in
loop
aam
cmp
das
outsb
inc
cld
les
les
cltd
mov
movsl
je
cld
out
add
mov
test
stc
lcall
sub
sbb
fst
cmpsl
xor
and
mov
mov
cwtl
dec
hlt
xor
mov
mov
sbb
cmc
mov
test
push
mov
mov
aaa
scas
je
icebp
repz
mov
movsb
dec
stos
lods
mov
jno
sbb
jl
jo
dec
js
movsb
cld
and
cwtl
movsb
cmpsb
addb
fdivrp
xchg
repnz
xchg
mov
xchg
xchg
mov
mov
js
fwait
xor
outsb
adcl
xchg
cmp
movsb
dec
jg
xchg
pushf
xor
pop
jns
aaa
push
addr16
lods
pop
push
mov
lret
inc
mov
adc
scas
jl
fnstcw
inc
shll
ret
ja
sub
int3
jbe
repz
out
sahf
and
mov
xchg
cmp
repz
aaa
add
scas
cmc
xor
gs
scas
rorl
sub
movsl
cs
cmp
es
lcall
lds
mov
add
mov
vmwrite
repnz
and
mov
leave
movl
adc
in
or
xor
mull
cwtl
inc
and
cmp
jae
jns
inc
sub
insb
and
mov
mov
and
lret
icebp
aas
in
mov
adc
sbb
int3
out
jno
js
cmp
les
adc
and
push
bound
cmp
cmc
arpl
xor
movsb
popa
xchg
push
mov
pusha
popf
leave
stos
pushf
lods
sub
adc
sub
test
inc
cwtl
lret
test
out
out
xchg
std
jl
push
add
repnz
sbb
pusha
xchg
pop
mov
fisubl
mov
push
or
sub
xor
js
mov
xchg
ret
or
push
pop
popf
stos
cmpsl
xor
sbb
cld
mov
jno
mov
xchg
mov
inc
or
jp
sbb
imul
pop
jge
mov
mov
shrb
sahf
je
hlt
imulb
movsl
stos
sub
scas
enter
lcall
dec
das
stos
cmpsb
xchg
inc
pop
mov
popa
pop
daa
pop
shll
pop
scas
mov
mov
mov
cld
xchg
or
das
adc
mov
inc
sub
aas
in
pop
std
test
sub
xor
ficoml
movsb
xchg
inc
jo
mov
xor
push
ret
repnz
jae
nop
mov
lock
xchg
pop
pop
jl
inc
dec
mov
mov
sahf
jle
inc
mov
aaa
push
and
clc
sbbl
xchg
stos
xor
leave
shll
es
stos
je
outsl
mov
cmc
leave
imul
inc
xchg
jl
fwait
stos
pop
addl
push
xchg
mov
adcb
stos
cmp
js
or
aam
sub
notb
rcrb
aas
xor
int3
pushf
and
pop
mov
test
mov
pop
scas
push
and
add
inc
mov
sub
loope
mov
outsl
leave
lds
and
inc
mov
lods
insl
out
jno
filds
imul
cmpsb
xor
jecxz
lods
and
fimuls
and
lea
mov
jno
cmp
adc
and
bound
in
das
mov
xchg
lcall
inc
adc
pop
inc
xchg
push
roll
out
lea
scas
pop
xor
push
mov
enter
mov
xor
je
lods
fs
push
sbb
scas
das
pop
outsb
outsl
aam
dec
sub
dec
sbb
jne
js
repnz
mov
mov
shrb
push
cli
push
xchg
and
enter
xor
and
cmpsl
fs
jb
dec
mov
lods
fs
sbb
sub
xchg
test
inc
push
je
push
pushf
jo
outsb
arpl
bound
je
je
xor
jnp
lods
dec
das
dec
jmp
insb
test
in
int3
mov
push
mov
lcall
mov
xchg
in
enter
daa
mov
cs
mov
jns
lods
mov
outsb
scas
stos
adc
or
mov
cld
into
fdivs
jp
inc
lret
jecxz
stc
sub
cmp
push
out
jl
pop
or
jns
cmpsb
cld
inc
in
cmp
mov
dec
cmpsl
aaa
pop
not
sbb
mov
xor
sub
push
insb
lods
jns
je
sub
xor
xor
aam
loopne
data16
add
das
mov
loopne
and
jl
mov
or
test
sbb
xchg
sub
faddl
mov
daa
fldt
mov
sub
xor
xor
add
jbe
cmpsl
nop
push
jno
js
mov
adcb
das
mov
mov
dec
mov
icebp
insb
loopne
adc
imul
iret
mov
inc
popf
pop
sti
inc
test
leave
xchg
xor
ret
scas
xor
repnz
movsl
ret
stos
popf
lods
cmc
fldenv
mov
sti
aam
mov
inc
and
ud0
mov
jge
jg
mov
inc
xchg
daa
push
test
xor
pop
test
popa
add
adc
sbb
jb
shl
pop
out
mov
pop
and
loop
or
fimuls
int3
loopne
inc
subl
inc
js
sub
scas
jp
xor
insl
test
outsl
lret
sahf
cmp
mov
xor
in
js
pop
sub
jae
pop
insl
jno
std
arpl
mov
jl
inc
xchg
jnp
pop
sbb
aas
sub
pop
outsl
xorb
dec
jns
test
or
push
inc
test
addr16
mov
repz
aas
jmp
mov
das
in
out
jae
xchg
xchg
test
xchg
add
call
pop
mov
sahf
xchg
mulb
sub
imul
adc
pusha
subl
adc
cmp
dec
adc
addr16
jmp
mov
out
int3
ss
popf
adc
test
pop
imul
lahf
fcmove
popf
jle
out
mov
mov
adc
outsb
loopne
and
xorl
push
movsb
jbe
add
adc
cld
push
insb
test
faddl
xor
xor
xchg
aas
jo
xchg
fs
push
mov
adc
mov
pop
xor
scas
mov
test
fucomip
leave
out
cmpsl
mov
jae
jp
jno
mov
sub
mov
pushf
sub
dec
outsb
out
add
aas
call
lock
and
dec
pushf
icebp
addr16
call
mov
ret
insb
pushf
in
adc
imul
outsb
pop
push
leave
mov
in
rcl
lret
je
cmpsl
xor
mov
xchg
mov
rcrl
rclb
repnz
jecxz
sub
cmpsb
jno
sub
scas
mov
add
repnz
sbb
bound
jp
arpl
xchg
rcll
lock
and
mov
lret
std
jae
movsb
movsl
in
stos
mov
lea
mov
push
and
and
scas
clc
xchg
pop
inc
movsb
shl
inc
inc
mov
stos
fcomip
movsl
das
test
push
cmp
int3
push
leave
mov
adc
fstpt
mov
cwtl
mov
lret
and
das
xor
mov
sbb
dec
jnp
cld
dec
xor
rcr
sub
mov
push
test
adc
push
scas
cs
lods
std
pop
test
jns
rolb
push
sbbl
xchg
sub
fs
adc
add
cmc
push
test
sbb
xchg
jmpw
and
aam
loopne
adc
xchg
push
push
add
inc
js
push
icebp
in
std
fnsave
mov
mov
shr
in
and
push
stc
mov
shlb
fcompl
push
push
push
data16
sarl
bound
adc
xor
mov
mov
scas
cmpsl
xchg
mov
sub
sub
popa
je
or
mov
xor
mov
les
sub
daa
das
jbe
mov
dec
jmp
loopne
lcall
mov
inc
jp
mov
dec
loopne
scas
dec
and
fnstsw
push
aam
ficoml
in
ret
mov
add
out
xor
pop
lahf
mov
js
cmp
mov
lods
jb
dec
sahf
xchg
ss
mov
fbstp
lods
lcall
fmull
adc
mov
xor
jne
jae
outsl
xchg
mov
inc
jbe
mov
imul
stc
mov
in
cmp
mov
sub
leave
adc
ret
popa
out
insb
sbb
jg
outsb
or
stos
aas
mov
pushf
mov
loopne
inc
mov
aaa
scas
pop
pcmpgtw
inc
pop
mov
gs
push
xchg
xor
adc
mov
jle
and
dec
sub
cmpsl
dec
mov
inc
pushf
leave
stos
icebp
aas
pushf
and
imul
sbbb
xor
cli
data16
pop
repnz
pop
aas
dec
arpl
xchg
dec
mov
je
in
loop
test
cld
cltd
daa
mov
jae
adc
sub
mov
mov
gs
test
jno
arpl
out
mov
cwtl
nop
outsl
jne
lea
test
shll
sub
dec
lea
jle
push
pop
iret
or
lock
lret
xchg
mov
dec
mov
test
pop
pop
rcrb
sahf
shll
mov
pop
and
aam
pop
xor
jns
jg
sub
int3
mov
repz
mov
push
adc
jno
inc
pop
frstor
and
mov
xor
mov
jae
mov
push
mov
cmpl
loope
mov
pop
mov
imull
je
pop
call
lcall
mov
dec
inc
mov
dec
xchg
dec
out
push
lock
jle
shlb
mov
cmpsl
mov
outsl
xchg
mov
cltd
jg
nop
mov
mov
movsb
xor
jmp
mov
and
subl
lods
pop
rcrb
cmp
or
xchg
fadd
clc
pop
lea
pop
loopne
xor
int3
imul
xlat
jg
int3
or
aam
les
into
addr16
inc
pushf
mov
sti
xchg
mov
xchg
fbld
add
icebp
push
adc
fldl
xchg
push
fs
scas
in
lret
sbb
xorb
fcmovnb
sub
push
mov
sahf
cmp
addb
mov
push
xchg
pop
mov
aas
loopne
cmpsl
rcrb
xchg
cmpsb
outsb
lds
test
xor
aas
gs
aad
lahf
xchg
test
ljmp
ja
nop
aad
fisttps
mov
outsl
push
dec
leave
movl
cmp
mov
sub
mov
cmc
sub
inc
arpl
pop
in
mov
xor
out
pop
into
jne
fidivs
sub
les
in
stos
int3
aad
cltd
jne
dec
fdivr
mov
jle
pop
fs
inc
adc
mov
cltd
pop
inc
pop
outsl
push
sahf
jns
add
aad
or
fsubl
cmpsb
adc
ljmp
xchg
aam
mov
inc
push
push
je
test
push
in
mov
push
pop
pushf
mov
in
dec
and
popa
jge
dec
arpl
in
sbb
sbb
out
lods
sub
insl
mov
ss
mov
in
pop
inc
pop
dec
test
repnz
in
cmp
das
cmp
test
mov
jae
and
imul
mov
popf
cmp
aad
cmp
fiaddl
xor
mov
pop
xchg
sub
inc
inc
adc
popa
les
loope
inc
and
cwtl
pop
loope
cld
add
push
test
jbe
arpl
fldl2t
sub
xor
icebp
dec
cmp
mov
cmp
push
add
jns
test
lock
nop
pop
xor
mov
fistl
xor
pop
test
fnstcw
mov
pop
mov
aaa
mov
push
lods
lods
jnp
and
mov
sub
jl
mov
test
sub
inc
lods
or
outsl
inc
mov
popf
repnz
in
mov
loop
sahf
fisubs
mov
repz
cwtl
insb
jns
jbe
inc
jp
cmpb
adc
aaa
xchg
cmpb
cmpsb
aas
mov
jne
push
insb
nop
iret
mov
lahf
mov
lahf
std
mov
sbb
movsb
xor
orb
mov
jb
jecxz
mov
xorb
or
andb
mov
jbe
mov
xor
mov
sub
push
push
loopne
fsubr
das
push
inc
adc
imul
cmpsl
andl
xchg
int3
jmp
repz
sbb
lcall
sub
lcall
es
sub
test
lret
add
mov
int3
outsb
inc
test
icebp
in
mov
leave
adc
insb
jbe
lea
pop
inc
mov
icebp
fcmovnb
imul
bound
inc
jae
aas
loop
and
sbb
icebp
std
test
popa
push
enter
addl
das
mov
popf
cmpsb
fcmovnb
int3
push
and
and
xchg
je
leave
inc
iret
pop
iret
cmpsl
mov
jge
ljmp
or
imul
pop
mov
hlt
mov
loop
adc
mov
inc
jb
pop
mov
stc
mov
jno
data16
fadds
sub
inc
cmpsl
mov
adc
adc
ret
pop
adc
cmpsl
xlat
or
scas
push
xchg
mov
add
add
scas
mov
jbe
icebp
adc
mov
cmpsb
scas
aas
mov
or
lret
in
call
jne
mov
stc
or
adc
fs
scas
stc
bound
sub
iret
sub
dec
and
add
jno
shll
mov
nop
movsl
fldl
or
pop
sub
mov
cmovge
mov
sbb
and
cli
or
lds
mov
lock
int3
repz
cs
adc
cs
lahf
nop
leave
mov
fildll
notl
fildl
outsl
scas
lods
clc
dec
das
je
lods
push
xor
fsubrs
imul
gs
push
popa
xchg
jne
jbe
pop
lock
sub
xor
or
jbe
int3
xchg
sub
movsb
repnz
cli
popf
inc
testl
cmc
loop
enter
aam
loopne
stos
ja
pop
mov
mov
std
mov
inc
mov
arpl
sub
aam
or
mov
mov
shrl
xchg
inc
mov
cwtl
scas
fistl
lods
icebp
or
sub
pop
enter
pop
mov
sbb
fdivs
ja
scas
call
jae
stos
xor
or
jge
xchg
jne
movsl
adc
test
xchg
cmp
mov
lock
or
in
aam
pshufw
mov
xchg
cld
out
pop
lcall
cmp
push
lahf
arpl
test
lods
sub
push
lcall
mov
lock
pop
leave
mov
mov
sub
rorb
xchg
pushf
mull
mov
push
movb
mov
scas
push
sub
xchg
js
sbb
mov
pop
out
xchg
leave
cmc
bound
in
andb
ds
lods
pusha
outsl
push
adc
or
sarb
movsb
lret
outsl
cld
xchg
add
jnp
mov
movsb
lret
xlat
add
cmp
inc
inc
mov
rorb
aas
cmc
cmp
test
addr16
xchg
xor
in
jb
mov
leave
cwtl
mov
pop
andl
dec
and
movsb
add
aad
sub
add
mov
inc
cmpsl
leave
dec
clc
cli
dec
out
fists
arpl
and
mov
xorl
shrl
adc
ljmp
xchg
push
add
test
lret
lret
mov
xor
pop
or
call
inc
je
dec
scas
outsb
mov
jg
mov
mov
popa
xchg
icebp
mov
mov
in
negl
push
mov
es
aas
mov
lock
adc
mov
cs
mov
scas
mov
cmp
data16
shll
call
sub
mov
cmp
sbb
xchg
lea
dec
aam
fs
jne
cmp
mov
push
mov
xchg
ret
scas
sub
inc
inc
ret
lods
sbb
movsb
xchg
dec
mov
in
dec
sahf
dec
cmp
jb
mov
sbbb
pop
add
pop
pop
jno
push
leave
xchg
cmp
pop
cmpsb
jns
sub
rcl
cmp
pop
mov
mov
stos
pop
mov
nop
insb
mov
pop
mov
jmp
inc
imul
mov
arpl
xchg
push
dec
xchg
es
test
jecxz
jmp
mov
mov
ljmp
mov
jg
mov
push
jle
adc
and
mov
xchg
in
mov
scas
das
push
mov
popf
int3
lahf
leave
test
mov
mov
imul
mov
das
xchg
mov
mov
cmp
push
xchg
lahf
je
pop
adc
sub
cmpsb
repz
xorb
push
fistl
fcomip
ljmp
leave
xchg
mov
cmp
popa
stos
test
and
insl
outsl
repnz
mov
scas
mov
jbe
movsb
xchg
rcll
gs
or
in
cmpsl
push
mov
dec
shlb
xchg
roll
mov
fs
push
jo
insb
sbb
shlb
aas
lea
fs
mov
je
int3
mov
gs
cld
or
sbb
mov
xorb
mov
mov
mov
mov
xor
aad
test
pop
shll
lcall
sahf
scas
stos
fcmovbe
sub
data16
mov
leave
movsl
in
lods
iret
mov
mov
sub
dec
dec
and
shrl
fwait
push
sahf
sub
dec
ljmp
mov
pop
xlat
je
or
xchg
push
popa
pop
bts
xchg
sub
add
shll
movsl
popa
int3
xchg
mov
and
mov
cli
fsubrl
sahf
mov
dec
int3
int3
push
adc
fs
into
loop
push
jmp
pop
push
jle
jb
cld
jo
pop
mov
xchg
in
pop
pusha
dec
jb
mov
movsb
lret
push
mov
test
and
outsb
test
mov
ljmp
dec
push
xchg
ror
bound
fnsave
shlb
xchg
outsb
test
dec
xchg
or
fistpl
fimuls
or
adc
out
mov
cli
mov
dec
rcrl
adc
add
out
jge
testl
fwait
scas
mov
clc
push
popf
aaa
stos
cltd
dec
sub
rolb
jnp
dec
mov
loop
outsl
mov
data16
mov
push
mov
xor
jbe
lock
jecxz
clc
cwtl
mov
out
mov
ret
aas
sarl
in
jb
cltd
pushf
leave
pop
jg
push
cmpb
mov
nop
sub
mov
test
popf
jo
divb
pop
test
aad
add
nop
leave
addr16
pop
mov
or
dec
dec
mov
lea
dec
nop
test
out
xchg
stc
pop
pop
nop
ret
push
aas
adc
push
xchg
push
ficomps
fildl
insb
jno
xchg
pop
mov
aam
outsb
cmpsl
ss
cmpsb
sahf
mov
popf
mov
call
or
call
in
jns
daa
inc
cmpsb
adc
xor
pop
mov
and
sub
aaa
ss
dec
movsb
mov
cmpsb
and
scas
cmp
mov
aas
imul
lock
cmpsb
add
scas
push
mov
xchg
stos
movsl
xor
fdivl
nop
sbb
std
shll
lea
test
inc
aas
stos
inc
in
sahf
add
mov
mov
popf
cld
mov
dec
cs
popf
adc
jns
lods
lcall
pop
push
shll
sahf
and
test
xorb
xor
push
faddp
sub
dec
inc
cmpsb
jmp
cmp
mov
jl
fisttps
fwait
mov
jecxz
test
mov
scas
test
arpl
sub
cmpsb
lds
push
xchg
mov
arpl
aad
mov
lea
push
xchg
loopne
cmpsb
mov
mulb
mov
and
pushl
arpl
addr16
mov
jo
mov
movsl
imul
jo
xchg
pop
fbld
test
fildl
insl
in
out
sub
je
stos
flds
ss
imul
nop
mov
pop
and
mov
push
add
ret
mov
loop
sub
push
icebp
xor
test
or
cmp
insl
ret
xor
jl
cmp
jae
jge
push
sub
aam
xor
sbb
push
ja
int3
adc
es
shrd
int3
pop
jo
jb
ja
sti
cmp
jecxz
cmc
mov
xchg
pop
adc
mov
das
inc
mov
pop
mov
fs
push
mov
push
hlt
stos
pop
sub
mov
jp
js
cmp
cmpsb
pushf
sub
inc
or
sub
pop
xchg
out
lahf
stos
lahf
test
xchg
test
pop
mov
outsl
mov
std
xchg
add
leave
imulb
sub
scas
test
call
adcb
insb
fwait
leave
mov
xchg
xchg
test
xchg
inc
ds
mov
mov
mov
cmp
insb
das
imul
cmp
inc
jle
sub
xchg
mov
movsl
fsubrs
aas
push
ss
adc
sub
mov
popa
mov
sbb
sysenter
dec
xchg
stos
jle
push
pushl
lds
repz
lock
dec
arpl
out
mov
xchg
ja
jmp
push
leave
bound
fsubrl
mov
aas
jg
xchg
sbb
test
stos
mov
xchg
add
dec
cs
jg
mov
mov
mov
xor
test
mov
xchg
jle
dec
ja
lods
push
fstpt
jge
cwtl
xchg
jne
scas
jle
shrl
cwtl
xchg
pop
inc
lret
pop
xchg
fsubl
subl
daa
jg
xor
arpl
aas
or
out
inc
mov
mov
leave
lods
stos
outsb
inc
fs
fsubrp
mov
and
sbb
ljmp
mov
test
andb
cmp
icebp
stos
out
scas
bound
mov
mov
out
fsubl
or
adc
jnp
cltd
mov
int3
xor
cmp
jbe
push
int3
pop
adc
push
dec
push
mov
jp
insl
cwtl
mov
or
outsl
cmpsb
adc
and
ljmp
push
xchg
mov
in
mov
xchg
sbb
jne
add
cmp
xchg
sub
cli
popa
sbbb
arpl
ljmp
ljmp
sahf
and
adc
lea
dec
cmp
movsb
sub
movsb
aam
mov
out
jb
jmp
xchg
jmp
rol
sahf
xchg
outsb
xchg
xor
adc
jne
cmpsl
stos
cmp
sub
data16
mov
call
xchg
call
push
call
fdivs
sahf
outsb
repnz
jne
adc
outsl
add
mov
mov
out
arpl
lods
out
enter
stc
jno
push
xchg
ja
ficompl
in
adc
bound
dec
pushf
shlb
ljmp
out
adc
cltd
xchg
out
stc
xchg
push
rol
sahf
xchg
outsb
xchg
and
mov
cmp
sub
daa
pushf
lahf
fs
pop
adc
mov
popa
mov
jb
aas
xor
aad
aam
jl
ret
fildl
idivl
enter
mov
fldcw
mov
test
popf
fadd
loop
lods
stos
push
push
cs
test
jp
fsubrs
lods
js
test
test
aad
lcall
mov
xchg
into
mov
mov
xchg
ljmp
cmp
movsb
ss
dec
insl
mov
cmp
xchg
jb
cmp
mov
push
cmpsb
jp
mov
movsb
mov
lahf
xchg
mov
popa
arpl
es
jg
add
or
movsl
das
pop
xor
int
push
xor
xor
call
xor
into
sahf
and
mov
jno
push
xchg
addr16
das
bound
xchg
mov
pushf
hlt
imul
je
mov
cmp
stos
in
sub
dec
cmpsl
dec
mov
lcall
lods
mov
leave
push
mov
push
xchg
and
lahf
mov
fmul
adc
aas
lods
cmp
push
lea
cmpsb
mov
xor
dec
xor
in
jne
clc
lcall
popl
xchg
sub
fcmovnbe
adc
fsubrl
and
popf
aas
mov
jmp
fsubs
stos
lret
mov
shlb
and
mov
ljmp
mov
les
test
lret
lea
pop
xlat
inc
push
js
mov
xchg
push
hlt
shll
or
dec
je
and
rolb
mov
clc
cwtl
stos
clc
jb
mov
mov
cwtl
pop
pop
push
scas
bound
jp
mov
loop
nop
scas
or
je
stos
int3
xlat
cmc
and
test
icebp
push
dec
sbb
aas
inc
cmp
mov
mov
es
arpl
ja
test
mov
adc
adc
aaa
push
stos
out
aam
xchg
cmp
stc
xchg
xchg
mov
mov
add
popf
fisubrs
ret
inc
call
insb
stc
add
lahf
loopne
arpl
int3
adc
pop
test
push
sbb
scas
ret
idivl
adc
stc
inc
sbb
jo
sbbb
pop
sub
jne
testb
cmp
insl
jg
xchg
movsb
jb
xchg
cltd
jb
xchg
mov
fs
scas
scas
jle
notl
ficoml
xchg
lock
addr16
rcrb
cmp
jge
xor
aaa
dec
sub
das
inc
jl
daa
subb
push
sub
mov
mov
adc
stc
adc
pop
inc
mov
xlat
and
ror
mov
sbb
push
sub
adc
or
or
sbb
enter
cli
pop
popa
lcall
shll
xlat
add
push
repnz
lds
mov
push
bound
fisubs
insl
data16
xchg
xor
mov
mov
push
jns
xor
mov
jbe
and
nop
in
push
test
lods
adc
xchg
or
int3
fwait
mov
test
mov
popf
mov
mov
insl
pop
lods
inc
rorb
pop
clc
sub
mov
inc
je
mov
and
and
ret
scas
insb
pop
xchg
lret
jmp
mov
pop
adc
cwtl
cld
aas
dec
pusha
sub
es
or
mov
jo
dec
jbe
inc
add
aad
sub
fistl
jecxz
scas
inc
aad
jl
cmpb
and
jecxz
xor
xorb
adc
pop
adc
in
pop
adc
cmp
xor
fisubs
push
int3
sbb
push
shrb
add
test
mov
mov
sbb
js
leave
jg
sub
cmpb
aas
cmp
xor
jp
or
int3
jne
lock
xor
roll
add
fdivs
jb
outsb
sub
cltd
stc
js
je
scas
xchg
xchg
jl
mov
mov
mov
mov
loope
fsubl
lock
cld
insb
mov
jmp
mov
sbb
pushf
loop
xor
mov
sbb
hlt
jl
mov
js
and
push
xor
sbb
sbb
fucom
mov
mull
mov
mov
mov
add
icebp
imul
sub
inc
lods
and
xor
in
jo
stc
out
or
frstor
fisubrl
sub
lods
ret
and
sbb
sub
lret
shr
jg
test
sahf
jo
leave
gs
mov
or
cli
fdivl
and
cmp
xchg
cmpsb
in
cmp
shrb
mov
test
xor
rcll
popf
insl
push
scas
and
jge
pop
mov
push
cmpb
lea
iret
lock
inc
aas
fwait
mov
insb
stos
out
jl
mov
cmpsl
dec
mov
call
cmc
xchg
scas
and
mov
std
lods
xor
sbb
dec
les
or
aaa
cwtl
sub
loopne
dec
int3
shlb
aad
push
mov
xor
inc
aam
adc
cmp
mov
imul
pop
nop
aad
sbb
add
inc
xchg
leave
xchg
mov
cltd
add
stos
repnz
pop
xchg
sub
cmp
pushf
mov
xor
jmp
je
or
pop
xor
mov
jae
out
lods
or
stc
xor
icebp
mov
sbb
jp
add
popa
divb
out
dec
movsb
jge
jae
mov
jne
inc
mov
je
int3
std
mov
movsb
out
sbb
hlt
int3
repz
arpl
lock
lods
movb
js
es
fsts
jecxz
outsl
pop
into
negl
in
add
lds
pushf
aaa
dec
pop
push
mov
mov
jl
int
xorl
cmp
mov
cmp
in
push
mov
fstl
daa
cmp
adc
mov
mov
movsb
pushl
idivl
lcall
jnp
xor
lret
xor
xlat
mov
or
popa
or
int
mov
jnp
mov
pop
mov
ss
mov
xor
lret
pop
inc
scas
outsl
inc
mov
scas
icebp
daa
lahf
sub
mov
loop
add
fisttps
push
pop
sub
stos
mov
dec
test
fstpl
cli
je
jl
inc
xor
mov
icebp
mov
cmp
test
xor
mov
movsb
rcrb
test
mov
dec
imul
and
enter
out
mov
dec
pop
roll
jae
inc
push
cmp
sub
fs
bound
out
pushf
repnz
mov
mov
xor
xchg
xchg
mov
lods
push
sub
xor
outsb
movsl
stos
cmp
mov
add
inc
push
mov
repnz
int3
aad
pop
inc
in
adc
aaa
mov
fisubrs
cmp
push
lret
movb
push
mov
repz
dec
mov
leave
lcall
roll
sbb
adc
add
leave
aas
push
loop
cli
aaa
sbb
mov
cmc
push
out
lret
sub
cltd
xchg
repnz
xor
nop
jnp
bound
pop
mov
inc
xchg
mov
scas
int3
inc
sub
jp
inc
jle
inc
xor
imul
cs
inc
test
xchg
movsb
imul
lods
pop
and
aas
inc
insb
test
cwtl
es
fcom
loopne
or
outsb
mov
lods
out
sub
je
sahf
shlb
sub
lea
push
or
insb
inc
mov
or
add
sub
dec
add
sub
jg
sub
das
sti
cld
loopne
or
imul
inc
fsubrl
pop
stos
int3
adc
cmp
test
jne
mov
xor
gs
popf
adc
inc
cmpsb
int3
inc
adc
testb
fwait
popa
dec
inc
mov
xchg
jg
dec
es
outsl
cmp
inc
pusha
adc
movsl
xor
icebp
jo
in
mov
pusha
lahf
xchg
push
insb
xchg
cmp
call
sub
ds
mov
outsl
and
sbb
sti
mov
adc
jp
jb
cltd
repz
lret
jecxz
mov
lock
mov
push
xor
xchg
xchg
dec
shrb
aam
add
inc
and
mov
pushf
movsl
das
testb
clc
push
jmp
sbb
pop
aas
jp
xor
mov
or
xor
dec
cmpsl
insb
push
leave
cmp
jmp
jle
int
jge
fistpll
out
mov
outsb
mov
insl
push
push
push
das
and
xchg
add
mov
test
pop
out
pop
jo
in
lret
sbb
movsb
sub
arpl
icebp
pop
cld
int3
sub
mov
mov
lret
xor
mov
xchg
stos
jl
test
sub
dec
and
push
sub
ret
mov
arpl
je
loop
pop
cmpsl
test
push
xchg
jne
cmpsb
sti
ljmp
add
mov
add
mov
in
imul
shrb
in
mov
push
leave
xor
in
cmc
scas
mov
mov
test
hlt
outsl
push
imul
sbb
incb
stc
pushf
push
repnz
jnp
sahf
push
inc
xchg
inc
add
popa
push
xchg
pushf
pushf
push
jnp
test
pop
mov
lret
pop
jno
je
add
xor
adc
imul
leave
lods
pop
clc
imul
cli
inc
mov
sbb
mov
ficoml
aaa
mov
sarb
repnz
mov
cmc
rcrl
or
cmp
movsb
insb
nop
xor
js
pop
je
push
bound
dec
xor
cmpsb
xchg
movsl
cmc
push
xor
rol
push
mov
inc
sub
repnz
push
xlat
stos
leave
mov
cmp
pop
pop
mov
jle
mov
pop
leave
bound
mov
jmp
mov
pop
push
sti
das
xchg
mov
push
jmp
das
clc
movsb
add
das
sub
inc
movsb
es
push
sbb
mov
fmull
stos
insb
xchg
lret
mov
ret
mov
mov
stos
cld
xchg
xchg
mov
ror
xchg
inc
adc
xchg
mov
push
inc
repnz
loop
mov
sbb
cltd
cmpsb
jecxz
je
pushf
pop
ss
mov
sub
jae
gs
mov
add
loop
ljmp
cmc
sub
imul
mov
mov
pop
push
scas
mov
popa
dec
call
nop
adc
lahf
add
pushf
dec
lods
sub
leave
jae
and
je
add
add
push
xchg
pop
in
scas
sub
and
mov
cmp
pop
je
in
or
xchg
mov
mov
add
lret
mov
outsl
xchg
sbbb
pop
jge
pop
int3
stos
test
cmpsl
aam
lods
je
or
sub
jns
xchg
and
adc
daa
test
dec
aas
adc
int3
repnz
mov
outsl
data16
outsl
inc
dec
or
orl
ret
push
mov
je
jns
inc
subb
xchg
xorb
ret
jns
fidivs
sbbl
loop
dec
push
in
push
rcl
ss
jae
jmp
push
add
or
test
das
sti
mov
add
aad
add
jmp
pop
sbb
add
mov
lods
leave
scas
daa
call
mov
cli
lahf
xor
xchg
inc
push
inc
cs
lret
dec
movsl
and
rep
jo
sarb
fdiv
inc
addr16
mov
cld
insb
ror
and
fwait
jmp
shrl
xor
outsl
jo
test
fsubrs
lods
cmpsl
add
cmp
rcrl
inc
lahf
arpl
mov
fs
jo
test
lods
xchg
xchg
in
andb
test
into
std
ds
mov
mov
dec
je
inc
add
in
xchg
aas
mov
lock
pop
cltd
fwait
cmpsb
lock
jae
adc
or
add
call
cmpsl
fimull
xchg
lods
daa
test
das
in
imul
mov
les
mov
mov
int3
rcll
movsb
std
ds
or
int3
test
add
repz
jmp
ficomps
gs
negb
or
xor
adc
pop
mov
mov
inc
daa
mov
repz
jne
ds
lods
pop
sub
jns
lods
aas
push
xchg
stc
adc
xor
ljmp
mov
aam
pop
cld
jo
lahf
stos
aas
mov
cmp
leave
stos
daa
push
xchg
adc
xchg
in
outsl
scas
jno
mov
test
sahf
mov
popa
lods
and
shrb
xchg
sbb
and
xor
aam
rorl
sbb
xchg
sbb
mov
push
mov
push
jns
ds
lret
add
jecxz
sub
inc
fimuls
push
out
mov
mov
xor
jmp
ficoms
mov
aas
mov
push
nop
stos
imul
add
dec
jae
lock
pop
sbb
bound
cmp
mov
in
mov
loope
sub
insb
mov
je
push
inc
push
inc
sbb
test
sub
xchg
or
sub
xchg
movsl
mov
inc
fwait
inc
xor
aaa
jmp
cmpsb
sahf
push
lock
stos
fwait
es
mov
mov
mov
movsb
xchg
dec
and
arpl
xchg
cli
in
push
sti
dec
stos
cmpsb
loop
jo
test
fwait
les
lds
ss
bound
cld
xchg
fstpt
and
repz
push
pop
mov
lock
xchg
insb
adcl
lods
movsl
jp
je
xor
sub
ficompl
mov
jno
test
xor
stos
xor
mov
iret
cmp
stos
int
mov
lcall
dec
loop
mov
mov
xor
pop
in
mov
call
arpl
insb
mov
push
lock
scas
test
stos
xchg
ds
inc
lods
mov
fsubrl
ja
movzwl
lret
jmp
imul
jb
xor
xchg
insb
popf
xor
pop
les
imul
xchg
aaa
cmpsb
push
jb
jb
fildll
inc
jnp
leave
test
mov
loope
setne
adc
lock
lods
inc
fwait
add
pop
in
mov
lods
sub
mov
addl
sub
or
lea
in
scas
daa
leave
into
or
sub
mov
mov
pop
leave
lods
jl
arpl
das
cmpsb
int3
jl
clc
shrb
jns
mov
dec
pop
cld
xlat
in
fs
jl
mov
push
popa
xchg
push
inc
mov
xchg
negb
sub
jo
sub
insb
mov
xchg
push
dec
or
mov
pushf
pop
popf
and
jns
lcall
les
test
sbb
mov
push
leave
scas
imul
out
cmpsl
dec
out
dec
xchg
jmp
mov
jecxz
insl
leave
mov
mov
xchg
sbb
push
push
out
mov
xor
jne
ss
push
push
jp
daa
mov
push
jnp
push
nop
xor
mov
lock
adc
cmp
xor
enter
sub
les
jl
pop
addr16
leave
ljmp
mov
cs
dec
pusha
inc
sbb
add
loop
push
mov
lcall
and
xchg
or
ret
ljmp
bound
xchg
clc
test
push
mov
movsb
scas
xchg
mov
test
xchg
sbb
out
cmc
push
lds
cmc
mov
add
push
cmpsl
daa
data16
xchg
pop
cmp
push
pop
xchg
adc
hlt
imul
mov
jns
les
jecxz
mov
mov
sbb
xchg
jbe
lcall
lds
adcb
lods
push
inc
push
sub
loope
mov
add
xor
push
in
pop
pop
mov
inc
xchg
sub
jbe
test
inc
add
outsb
xor
rorb
outsb
mov
inc
xchg
pop
cmp
test
or
adc
ds
aaa
data16
xchg
xor
mov
push
sbb
xor
inc
inc
pop
pop
rorb
jae
das
xchg
xor
and
mov
mov
mov
xchg
mov
mov
push
das
xchg
mov
repnz
cmp
scas
movsb
lods
xor
push
dec
sub
inc
xor
lret
and
inc
sbb
mov
les
in
enter
ss
mov
push
les
dec
xchg
lds
insb
cmpsl
mov
xor
xchg
mov
scas
sub
xchg
imulb
and
mov
jge,pn
gs
dec
jge
test
dec
xchg
and
push
push
jo
clc
fidivs
cwtl
sub
loope
scas
test
hlt
jecxz
sub
les
mov
stos
cmp
cli
dec
sbb
fs
icebp
int
lahf
test
add
jp
addr16
popf
mov
lret
into
xor
lret
das
dec
xor
imul
adc
pop
jnp
jecxz
nop
mov
push
jns
fcom
das
lock
iret
and
or
out
jne
es
xchg
gs
lock
jl
insb
mov
mov
xchg
ret
mov
rcrb
and
mov
sub
stos
mov
movsb
lcall
xchg
push
mov
mov
sbb
addl
rclb
je
fisubrl
pushf
test
cmpl
pop
push
sub
inc
push
inc
add
jp
into
stos
sti
dec
repz
pusha
xchg
xor
gs
insb
out
xor
xchg
gs
push
insb
pop
test
pop
test
das
inc
mov
sub
dec
jb
mov
cmp
jno
movsl
daa
dec
jp
repz
push
adc
inc
pop
addl
pop
lret
sbb
push
dec
adc
pop
sub
push
xchg
jns
xchg
insl
or
out
insb
scas
cmp
cmpsb
jecxz
push
data16
and
xchg
cmp
call
into
pop
test
ds
sarb
mov
cltd
cmp
sbb
pop
pop
movb
push
dec
pushf
push
lea
je
jnp
shl
mov
in
nop
cmp
movsw
insb
fsubs
pushf
mov
pop
mov
movsb
sub
shlb
ret
jl
push
fwait
leave
xchg
dec
xchg
sarl
pop
sar
jmp
fnstsw
push
inc
sub
fistpll
cmc
dec
orb
test
add
jns
aas
xchg
in
stos
imul
mov
sub
or
mov
jo
test
cld
mov
outsb
mov
pushw
push
push
xchg
scas
sti
ret
xchg
mov
movsl
pop
repnz
jecxz
outsl
sub
xor
rorl
pop
int3
or
jo
mov
cmc
hlt
lcall
mov
in
popa
mov
js
xor
mov
in
aas
addl
xor
or
aad
or
xor
leave
add
xor
xchg
cmpl
mov
lahf
jno
fcoms
push
subb
rclb
and
loopne
jmp
mov
xchg
xorl
aaa
fs
les
add
and
aas
jnp
out
add
mov
aad
ljmp
movsl
mov
mov
test
and
push
ss
dec
ds
popf
stos
cmpsl
xor
test
fnstenv
add
insb
fs
push
push
sub
pop
movsl
daa
jae
pop
sub
stos
test
mov
adc
cli
aas
sub
sqrtps
gs
dec
dec
mov
cmpsb
ljmp
mov
mov
or
aas
addl
xor
fiadds
jns
inc
xchg
push
das
ds
xchg
sarb
repz
jno
push
add
mov
and
ret
test
xchg
pop
cmp
movsl
mov
mov
nop
sbb
mov
sbbb
nop
mov
mov
xchg
int3
adc
andl
pop
mov
and
lods
test
push
xchg
mov
cmp
out
mov
aam
jae
jns
mov
mov
jp
movsl
ret
out
jmp
push
mov
lahf
popa
cmp
test
dec
sub
aad
stos
xchg
in
sbb
add
fwait
scas
outsb
mov
hlt
or
pushf
jmp
mov
inc
xor
fwait
stos
mov
dec
inc
mov
xor
adc
scas
jns
mov
jle
test
inc
lahf
lret
imul
sub
sti
lret
mov
pop
push
pop
mov
dec
test
stos
pop
or
fdivrs
sbb
leave
int3
mov
cli
rcll
rol
aam
mov
mov
xor
mov
aad
cmp
pop
xor
loope
mov
sub
or
std
inc
loopne
shll
jbe
jge
pop
mov
jmp
cld
xchg
sahf
xor
rolb
cli
and
mov
xor
aas
xchg
or
aas
fisubrs
ja
out
push
lret
and
jns
fs
adc
mov
ret
sub
mov
insl
test
repz
in
mov
mov
cs
jbe
push
into
or
mov
mov
sub
xchg
andb
ds
fisubl
pusha
insb
xchg
ds
mov
xor
inc
ret
mov
dec
insb
stos
test
fwait
jb
les
mov
pop
xor
ljmp
mov
push
xor
int
popf
lods
sub
sahf
pop
mov
lret
or
stos
out
daa
xorb
pushf
xor
aas
test
js
sbb
xor
std
xor
jno
leave
mov
jmp
stos
mov
std
call
lea
sbb
adc
pusha
mov
aas
in
mull
inc
ss
mov
je
orps
pop
movsl
jno
aaa
dec
cwtl
pop
hlt
add
adc
sbb
stos
subl
repnz
hlt
repnz
mov
nop
inc
add
leave
push
lock
jns
les
or
mov
sub
hlt
testl
out
cmp
nop
pusha
xchg
adc
pop
jmp
stos
aas
or
insl
mov
adc
mov
mov
in
sub
mov
movsl
bound
ror
push
inc
dec
dec
mov
cwtl
mov
xor
repnz
stos
mov
lock
rcl
out
sub
dec
sub
sub
cmp
lea
sub
jl
cld
dec
xchg
je
js
push
mov
jno
sub
clc
hlt
mov
mov
loop
mov
inc
xchg
test
pop
push
sbb
mov
enter
push
cwtl
mov
mov
xchg
test
jmp
pop
test
mov
movsb
enter
push
mov
lret
xor
popa
leave
cmpsl
push
pushf
lock
enter
mov
insl
xor
xchg
cmp
cmp
icebp
sub
jp
lret
xchg
lcall
mov
lods
mov
subb
mov
stos
add
imulb
fdivrs
jae
cltd
loopne
out
imul
xchg
inc
jns
mov
xchg
lods
int3
xchg
insb
sarl
cltd
push
jne
inc
mov
push
stos
jmp
and
insb
xor
mov
mov
cmp
push
jo
test
cmp
push
sbb
cmc
mov
sub
test
jmp
jae
test
lret
pop
cmp
jnp
and
in
mov
mov
repz
sahf
add
mov
mov
arpl
and
dec
adc
lret
scas
mov
rorl
fsubrl
sbb
xchg
jle
mov
push
cmpsb
outsb
daa
movsl
jmp
inc
outsl
sub
ljmp
inc
roll
daa
push
in
jmp
fwait
rorb
ja
in
arpl
icebp
jmp
outsb
adc
lock
pop
test
inc
ret
mov
dec
and
dec
in
jl
outsl
iret
pop
sbb
xor
int3
jno
mov
inc
subb
xchg
mov
dec
mov
adc
mov
mov
imul
xchg
push
shrb
mov
sub
aas
stos
stc
lods
mov
orb
in
fisubs
pusha
pushf
les
ror
pop
je
xchg
fstpl
xor
imul
testl
pop
adc
out
jg
mov
mov
and
cmp
pop
cmp
sub
sbb
xor
mov
subb
mov
leave
mov
movsl
pop
inc
fldt
ljmp
mov
or
cmp
pop
les
sbb
ror
cltd
jno
push
mov
xor
insb
mov
xor
popf
movsl
add
mov
int3
shl
loope
out
lret
lret
add
xchg
enter
mov
mov
sahf
dec
fbstp
enter
jg
sbb
ss
cmpsb
mov
xchg
lock
jecxz
scas
push
add
aaa
mov
in
push
lods
sti
push
test
aaa
andnps
daa
lds
inc
hlt
psrld
stos
stos
mov
add
je
push
add
pusha
sti
pop
sub
pusha
fldt
nop
inc
cmpsb
push
imul
jge
sub
test
mov
jne
adc
fstps
int3
scas
pop
mov
jg
dec
int3
push
sbb
mov
arpl
adc
aam
testb
popa
nop
jo
shlb
lea
adc
out
dec
lcall
insb
shlb
ret
lretw
or
jge
lods
repnz
pop
xor
xor
sbb
sub
mov
xor
test
mov
sub
leave
pusha
insl
xchg
in
lods
jae
stos
pop
mov
insb
mov
ja
xchg
add
lods
leave
inc
scas
mov
lret
ja
fwait
sub
pop
cmp
inc
test
xchg
lcall
inc
xchg
cmpsl
je
dec
test
int3
mov
movsl
hlt
sbb
adc
xchg
xor
shr
jae
and
je
xor
inc
inc
mov
mov
arpl
fisubrl
dec
je
ror
scas
ficoml
mov
push
and
sbb
fidivrs
jnp
mov
test
fcoms
sbb
or
pop
sbbl
lods
and
inc
jne
movsb
les
in
mov
mov
push
int
or
test
and
sub
mov
inc
es
pushf
leave
add
scas
nop
push
mov
fldcw
inc
les
xor
jnp
aas
lock
dec
cmpsl
imul
scas
push
in
or
push
mov
mov
in
mov
scas
and
lcall
mov
stos
mov
fisubrl
pop
pop
icebp
mov
in
test
mov
add
mov
test
jne
sahf
inc
pop
mov
imul
sub
les
jae
ficompl
push
cmp
scas
dec
mov
and
enter
mov
add
adc
pushf
mov
leave
jbe
sub
gs
ljmp
ror
imul
sub
inc
lock
cmpsl
mov
int3
lret
or
pop
repnz
pop
pusha
add
ljmp
stos
movsb
lods
shrb
mov
cld
push
xchg
test
imul
sub
mov
mov
pop
mov
idivb
sub
movsb
jb
stos
adc
and
inc
adc
push
ss
mov
dec
test
or
addl
fldt
imul
inc
pop
movsb
andl
push
fs
shlb
shl
cmc
test
test
mov
sbb
mov
xchg
outsl
dec
mov
popa
pop
dec
xlat
push
cltd
int3
push
loope
dec
mov
fsubl
push
pop
adc
repz
aas
mov
mov
cwtl
test
loopne
jbe
into
cmp
cmpsb
mov
mov
mov
insb
pop
pop
ja
shrl
faddl
or
cld
lahf
insl
jns
test
orps
int3
mov
push
sub
fisttps
mov
add
sub
sub
pop
push
cltd
hlt
or
sub
lea
mov
xor
mov
jge
dec
or
or
xchg
fs
aam
xchg
xor
pop
or
cmp
push
or
xchg
in
mov
push
mov
lea
scas
jp
inc
push
fistpll
push
dec
ljmp
mov
nop
jnp
sahf
dec
inc
inc
enter
push
test
fs
or
into
adc
test
repz
test
lret
test
mov
jno
lcall
sub
aas
out
loop
jg
xchg
adc
out
push
outsb
jns
inc
cmp
and
mov
stos
in
aad
sbb
movsl
xor
clc
mov
cmc
lods
dec
add
lret
add
push
lods
xchg
aas
stos
popf
add
or
ret
rcl
scas
nop
jb
mov
inc
inc
and
pop
lock
xor
mov
mov
repz
xchg
les
not
sarb
inc
jmp
and
lea
pop
mov
mov
xor
xor
in
scas
cmpsl
out
xor
ss
cmpxchg
add
jmp
lods
in
outsb
and
movsb
cmpsl
sub
mov
jae
xchg
in
out
dec
mov
imul
mov
clc
xchg
adc
into
xor
cmp
scas
jae
pop
call
ror
lods
jns
xchg
notb
mov
cmp
mov
out
xor
aas
cmpsl
imul
sbb
sbb
and
mov
xorps
sub
mov
popf
mov
rsqrtps
and
jmp
mov
xchg
test
xchg
aad
ds
les
popa
int3
loop
or
pop
imul
add
fwait
cmp
fildll
ds
mov
rolb
and
outsl
mov
push
cld
lret
and
push
xchg
lock
imul
pop
push
test
testb
fwait
aam
dec
nop
hlt
ds
adcb
hlt
sti
ss
pop
sbb
lock
xor
leave
mov
mov
xor
nop
stos
call
mov
jle
aaa
rol
mov
movsl
and
and
jle
xchg
pop
daa
dec
outsl
lods
push
data16
adc
inc
scas
mov
sub
jmp
mov
push
lcall
lock
fldt
int3
lret
sub
mov
fdivl
leave
push
jae
out
outsl
add
sub
jo
mov
fdivs
mov
cmp
leave
dec
xor
inc
push
cmpsb
mov
inc
mov
stos
imul
sahf
push
leave
int
les
add
test
andb
outsb
ret
cmp
fcomip
jmp
movsb
ffreep
leave
dec
lea
pop
xchg
pop
pop
dec
lea
dec
movsl
jge
insb
lods
mov
ss
les
xor
ret
cmp
lea
add
loope
inc
jnp
sub
clc
inc
mov
cmpsb
loopne
lret
mov
inc
popa
sbb
jno
xchg
movl
ljmp
mov
xor
inc
dec
mov
cmp
movsb
ljmp
lods
iret
ds
cmpsb
push
enter
mov
xor
lods
orl
mulb
stos
scas
jmp
mov
push
mov
dec
adc
stos
dec
inc
cltd
rcll
pop
mov
mov
pop
mov
push
das
test
sbb
mov
mov
mov
mov
js
ja
mov
aas
cmpsb
sub
sub
test
pop
inc
pop
sub
pop
int3
dec
out
sub
or
test
add
and
outsl
sub
xor
fisubrl
mov
aam
fcoms
popf
jmp
mov
inc
aam
jl
push
shrb
dec
sti
mov
xchg
cld
dec
adc
cwtl
sub
stos
mov
cmp
mull
cltd
dec
ret
loop
stos
outsl
das
ficompl
scas
dec
jge
jmp
aas
aas
scas
xor
outsb
sbb
xchg
or
or
pop
cltd
or
mov
sbb
adc
push
inc
adc
adc
scas
sbb
mov
addr16
lahf
fs
jmp
add
imul
insb
mov
lds
pop
mov
adc
les
leave
mov
jo
loope
lret
insb
or
push
sub
es
popf
cld
adc
cmp
push
push
mov
sub
jmp
sub
mov
pop
sub
dec
mov
sub
jnp
mov
xor
push
push
or
cmp
nop
sbb
sbbb
jo
xor
ret
mov
pop
mov
sub
mov
xor
pushf
xchg
jns
test
movsb
pop
or
daa
add
jl
inc
push
mov
sahf
test
adc
or
jle
dec
test
mov
sti
outsl
stos
lahf
das
stos
dec
cmp
in
movsb
outsl
je
out
int3
pop
mov
lods
cmp
negl
aaa
int3
cmp
xor
push
or
pop
or
pop
jmp
inc
jp
insl
fdivrl
adc
movsl
test
xchg
jle
jp
jecxz
mov
repz
lods
repnz
leave
aam
cmp
loop
les
ljmp
mov
enter
jb
data16
testb
sub
ror
sbb
enter
mov
das
mov
scas
arpl
xchg
lcall
popa
ja
iret
subb
lea
adc
push
lcall
inc
ss
dec
mov
jmp
int3
loope
icebp
cwtl
repz
cmpsl
sbb
inc
push
in
aas
bound
arpl
xor
in
add
call
xchg
enter
daa
fidivs
repnz
nop
stos
or
rorl
mov
lcall
in
in
pop
lods
mov
mov
jnp
cli
lods
jl
xor
shrl
stos
and
add
xor
repz
mov
mov
ljmp
xor
push
lcall
cli
jmp
lods
ret
jmp
shll
sub
gs
pop
bound
inc
and
mov
fists
cmpsl
mov
pop
nop
dec
faddl
pop
int3
pusha
out
popa
adc
aaa
mov
dec
popa
sbb
movsb
sbb
int3
push
repnz
lahf
xor
jl
popa
push
lahf
sub
stos
cld
xor
int3
xlat
push
adc
mov
sbb
iret
mov
rcrb
ss
lret
aaa
push
mov
lods
jnp
insb
movsb
lret
lahf
xor
stc
in
adc
jecxz
aad
fistpl
lret
inc
lock
jne
stos
inc
pop
jp
add
loopne
sub
jo
xchg
dec
repz
mov
jne
js
jecxz
cmc
lret
lahf
data16
sbb
ds
les
dec
das
int3
jo
mov
mov
cmp
pop
mov
pop
sub
inc
mov
mov
pop
lret
out
jle
mov
or
push
xor
loopne
arpl
push
leave
movsb
mov
push
inc
xor
dec
stos
mov
aad
pop
test
stos
push
lahf
cmp
lcall
pop
mov
mov
xchg
call
adc
xor
out
mov
mov
mov
sti
inc
fs
pop
adc
in
and
loop
sub
sub
outsb
and
aaa
in
pushf
sub
sahf
add
mov
xchg
push
nop
mov
scas
pop
ds
inc
testb
mov
xchg
loope
pop
adcb
jge
into
mov
lods
mov
addr16
call
clc
enter
int3
imul
inc
mov
movsl
push
rcrb
in
xchg
cmpsb
sahf
cmc
inc
das
pop
jp
movsb
mov
sub
mov
mov
mov
test
mov
xor
xor
mov
andb
nop
popf
mov
cmpsb
in
mov
enter
aam
lds
sbb
fs
fcompl
push
lods
movsb
inc
jo
test
test
movsb
sub
sbb
dec
mov
pop
inc
dec
pop
pop
test
insb
inc
cmpsb
repnz
mov
mov
cmp
jle
mov
fwait
out
pop
icebp
enter
and
pusha
test
rcrb
inc
xchg
jns
stc
cmc
icebp
xchg
sub
leave
mov
push
pop
jb
fadds
add
inc
js
adc
lds
add
ds
dec
loop
scas
mov
gs
sub
cmpsl
mov
xchg
mov
div
or
icebp
push
stos
or
outsb
int3
fsts
test
nop
xchg
mov
add
mov
jecxz
jp
push
repnz
sahf
cwtl
and
mov
in
mov
pushf
adc
push
iret
aaa
insb
xchg
mov
daa
sub
cmp
mov
cmpsl
mov
int3
mov
js
adc
push
repz
push
out
scas
roll
adc
mov
jo
mov
test
jae
inc
ljmp
aaa
stos
jmp
arpl
pushf
xor
mov
dec
xchg
pushf
test
insb
dec
subl
ss
push
pop
fbld
and
and
cwtl
pop
pop
add
xchg
popa
insl
adc
out
mov
pop
adc
inc
loopne
pushf
cwtl
pop
scas
adc
push
xchg
iret
fs
or
dec
fdivrs
pushf
dec
es
xchg
xchg
or
sub
je
push
inc
push
mov
mov
add
lcall
aad
repz
ss
daa
mov
cmp
lods
cmp
mov
aam
pop
push
dec
jp
or
jg
ljmp
or
testl
sub
sbb
frstor
mov
mov
inc
mov
test
inc
mov
lea
or
aaa
adc
xchg
sub
adc
dec
test
mov
movsb
loope
into
xchg
movsl
mov
jnp
and
ljmp
pop
mov
cmpsl
rorb
movsl
xor
push
aam
clc
sbb
int3
push
fxch
inc
and
xchg
mov
std
dec
push
push
jns
loop
leave
xlat
mov
xchg
je
adc
sub
xor
dec
jnp
push
loopne
xor
sub
rol
pop
mov
in
insl
ret
cltd
sub
adc
pop
mov
adc
leave
repnz
xchg
daa
movsb
test
mov
sub
int
jno
jne
cmc
xchg
int
mov
imul
insb
cwtl
push
and
inc
mov
xchg
xor
jne
popa
lods
test
jbe
pop
aam
jo
cmp
cmp
cmp
adc
jae
lret
sbb
popl
add
adc
pop
inc
fimuls
cltd
mov
dec
add
mov
mov
or
cwtl
sbb
push
pop
xchg
pushf
cmc
test
mov
pop
jmp
test
cwtl
or
xor
mov
dec
pushf
rolb
sahf
lods
pushl
subl
popa
xor
add
inc
orb
lods
lods
jp
cmp
cmp
stos
testb
push
addr16
pop
push
mov
test
adc
mov
mov
std
mov
cltd
gs
sbb
lods
int3
inc
push
adc
leave
mov
mov
imul
orl
negl
test
aaa
jecxz
orps
and
and
push
lea
inc
outsb
mov
fwait
test
movsb
mov
loop
mov
call
mov
cltd
arpl
les
mov
cmpb
lahf
rorb
push
ret
xchg
leave
mov
lahf
jmp
fs
cmpsb
mov
push
scas
or
scas
or
ljmp
adc
and
mov
cltd
and
sbb
out
test
leave
jb
out
pop
jge
sub
xorl
adc
jge
insl
scas
dec
stos
xchg
jo
pushf
pop
sub
adc
cmpsb
jns
aaa
xchg
and
mov
jmp
jae
ljmp
int3
push
pop
andl
ret
lods
mov
pusha
test
mov
out
repz
jl
movsl
cmp
cmpsl
scas
les
rclb
repz
fdivrl
movsl
repz
pop
outsb
or
adc
sub
cmpl
push
imul
sub
pop
dec
subl
push
leave
stos
bound
aam
dec
loop
and
or
test
mov
lods
mov
das
xor
sbb
lahf
outsl
pushf
cld
jns
cwtl
mov
mov
mov
or
leave
stos
cmpsb
and
aas
jl
lahf
imul
jns
out
xchg
xor
lods
mov
test
push
xor
mov
je
aaa
lods
mov
mov
nop
in
enter
mov
dec
pop
int3
test
mov
insb
mov
mov
ds
adc
cmpsl
je
pop
mov
imul
push
mov
je
jns
cmp
jae
jae
mov
mov
fisubrl
push
jb
les
push
xchg
dec
sub
lock
or
mov
and
adc
mov
lcall
fsubrs
mov
push
mov
mov
sahf
mov
and
xchg
inc
leave
mov
faddp
pinsrw
sub
movsl
lods
int
test
test
and
inc
mov
into
arpl
jb
fs
ss
sbb
push
mov
hlt
cmp
dec
movsb
pop
sub
mov
lods
mov
xchg
movsb
shll
pop
push
xor
pop
sub
notb
or
das
fdivp
or
xchg
pop
dec
rol
mov
add
ficomps
in
out
mov
xor
mov
in
push
inc
sbb
daa
lds
push
push
stos
mov
add
and
cmp
mov
mov
insl
xchg
mov
jae
jmp
jno
test
mov
pushf
sbb
mov
stos
inc
cs
adc
jp
xchg
push
jle
test
arpl
xchg
sub
xor
sub
fdivr
mov
ret
les
fs
mov
xor
loop
mov
outsb
xor
mov
icebp
jl
push
cmpsb
cwtl
hlt
ficoms
cli
es
orb
fisubl
jo
cmpl
xchg
pop
add
loope
xchg
sbb
int3
cmp
cwtl
jnp
test
xorb
jns
lds
sbb
lock
pop
out
cli
pop
inc
shl
pushf
push
mov
icebp
push
popa
sbb
xchg
mov
push
sub
sub
mov
sub
clc
insb
das
push
sahf
xchg
jno
loope
mov
cmpsb
pop
movsl
xchg
data16
mov
xlat
outsl
pop
into
mov
or
xchg
push
push
mov
cmp
pop
xor
rorl
jae
push
lret
pop
dec
pusha
jl
test
scas
push
mov
xor
or
and
movsb
cmpsl
jae
mov
nop
test
in
repnz
rcrb
fstps
stos
or
pop
jo
pop
test
aaa
je
aam
into
jbe
fidivrl
mov
fldz
xchg
int3
test
push
push
int3
loopne
data16
fcomps
dec
jns
pop
jp
sbb
jns
cmp
imulb
mov
xor
imul
dec
loope
pushf
leave
sub
stos
fildl
pop
sti
aad
and
mov
fwait
add
leave
arpl
jne
call
hlt
neg
pop
add
mov
sub
add
inc
mov
les
mov
repz
mov
xchg
xchg
xchg
pop
arpl
jno
push
dec
mov
mov
imul
xchg
pop
leave
js
stos
fdivl
push
orl
push
imul
cvtdq2ps
jns
xchg
mov
bound
sub
mov
adc
push
xor
mov
rorl
clc
imul
push
sub
test
pop
clc
sbb
test
ret
pop
aam
mov
je
cmpsl
add
pop
mov
out
inc
stos
xor
loop
orl
mov
popa
push
sub
xor
adc
pop
cmp
mov
lea
fcomip
add
packsswb
sub
das
in
pop
cmp
cli
or
pusha
mov
mov
scas
test
xor
xchg
out
ret
mov
test
cld
jo
dec
test
movsb
je
xor
jle
cmp
push
cmpsl
cld
cmp
push
leave
mov
sbbl
pop
int3
lds
push
les
fisubrs
fisttpll
jl
pop
sbb
pop
insl
xor
lods
aas
cwtl
jns
mov
mov
sahf
fbld
dec
jae
mov
cmpsb
jns
in
cmc
mov
pop
fdiv
ss
and
push
sub
cli
mov
xchg
fs
in
scas
cmc
xorb
jp
repz
sahf
xchg
in
cwtl
xchg
andb
leave
xor
and
mov
inc
mov
jl
test
leave
mov
sbb
jns
xchg
push
sub
push
loope
mov
lods
sub
pushf
dec
test
leave
imul
xor
test
pop
adc
sarb
icebp
out
xchg
sub
jmp
leave
xchg
test
mov
in
or
test
insb
lods
andl
mov
pop
push
rorb
mov
pop
insb
push
pop
jns
push
lods
sahf
lea
aaa
lods
lods
aas
inc
dec
movsb
leave
shr
scas
push
and
push
insl
jl
nop
cmp
pop
mov
sahf
arpl
cmpsb
push
pop
test
imul
iret
pop
stos
sahf
fs
fst
shrl
sub
xlat
outsb
mov
ror
push
ds
jmp
fadd
daa
data16
pop
push
test
dec
sbb
sub
call
sub
pop
rolb
mov
mov
mov
lods
pusha
ljmp
pop
fisttpl
lods
out
outsb
test
dec
pushf
pop
fcoml
cld
inc
mov
repz
mov
sub
ja
lret
jp
cmpsb
sbb
mov
mov
in
scas
adc
mov
pop
xchg
push
mov
divb
mov
mov
xchg
lahf
int3
rcrl
adc
push
cltd
lcall
sbb
or
in
cmp
xor
or
into
out
jle
stos
or
lods
fiaddl
lea
loop
int3
push
arpl
push
jp
mov
cmp
mov
adc
inc
push
xchg
jbe
jl
call
jns
loope
mov
ret
inc
mov
ljmp
into
int3
testb
sbbl
pushf
cltd
and
mov
cmp
lods
jecxz
push
or
adc
icebp
je
in
xor
hlt
mov
sbbl
sbb
das
mov
cs
sbbl
jg
mov
imul
fidivrs
jo
and
pop
mov
ja
mov
or
push
mov
dec
mov
push
dec
sahf
xchg
scas
and
sbb
xor
xor
push
inc
cmpsl
pop
in
jne
je
sub
imul
add
push
rorl
mov
jne
repnz
mov
cmp
or
lock
test
or
int3
loop
mov
mov
cmpsl
mov
rolb
call
adc
mov
je
pop
std
and
les
and
in
shlb
mov
push
insb
es
inc
out
stos
or
jnp
je
cmpsl
scas
aas
mov
leave
int
mov
or
sub
insl
fs
xor
cmpl
cs
jnp
lods
mov
jp
cltd
xor
xchg
scas
adc
lock
popf
mov
imul
sub
loopne
mov
cmp
arpl
and
leave
or
mov
pushf
les
scas
push
adc
loopne
addr16
sbb
subl
loop
mov
movsl
sub
outsl
xchg
mov
orl
dec
scas
aaa
imul
test
pushf
push
mov
or
pop
out
pop
fwait
in
and
insl
movsb
pop
cmc
dec
xchg
mov
inc
lahf
out
jne
mov
les
mov
leave
cmpsb
add
out
or
mov
fwait
inc
movsb
pop
and
fcomps
andb
mov
and
lret
repnz
mov
scas
fdivrs
cmpsl
lds
out
mov
stc
jge
cwtl
in
mov
insl
mov
xchg
stos
sbb
fists
lds
push
push
jb
lea
inc
cmp
mov
sub
or
imul
push
jno
push
in
dec
lods
leave
dec
dec
add
xchg
out
and
mov
adc
out
mov
cmp
pop
pop
stos
gs
cld
mov
aas
aas
jo
leave
repz
sbb
mov
hlt
incl
jmp
xor
sbb
push
mov
roll
outsb
lret
inc
and
les
cltd
or
and
pop
cli
lcall
jne
pop
xor
icebp
sbb
pop
arpl
push
test
xchg
jl
gs
cmc
pop
outsb
fdivl
les
imul
insb
jnp
mov
lahf
xor
stc
scas
cmp
mov
sbb
insb
or
in
mov
outsl
fadds
fisttpll
cmpsl
push
out
xor
lea
xlat
mov
addr16
xor
insb
mov
movsb
pushf
je
mov
cwtl
bound
sahf
test
fdiv
push
movsb
mov
pop
jecxz
sbb
lret
and
enter
push
ja
add
cmp
lock
in
lea
pop
xchg
xor
int3
adc
daa
pop
sbb
repnz
mov
cltd
mov
hlt
jno
cmp
pop
or
lahf
mov
popf
test
mov
mov
sub
sbb
mov
jae
stos
and
push
movsb
mov
scas
jns
stos
jo
lret
sub
inc
xor
mov
mov
insb
adc
cli
push
push
cmc
outsb
push
inc
mov
sbb
adc
daa
cmp
xor
dec
xchg
or
mov
push
nop
icebp
jns
cmc
sub
push
sahf
pusha
pop
adc
das
flds
leave
adc
in
dec
mov
adc
pushf
pop
push
xchg
sahf
dec
xor
cld
mov
sbb
lods
pop
ljmp
sbb
mov
or
pop
add
fisttpl
or
daa
push
dec
or
xor
inc
in
push
imul
cs
ds
aam
scas
popf
pop
int3
mov
sub
data16
imull
cmpl
incl
mov
fdivs
into
aaa
scas
or
cwtl
xlat
fistl
test
push
dec
mov
push
insb
xchg
dec
xor
inc
inc
jp
add
insb
das
push
sbb
inc
lods
or
mov
jo
mov
hlt
jnp
int3
icebp
fucomi
nop
pop
insb
movsb
mov
inc
popf
leave
cmp
popa
push
sarb
ljmp
and
insl
sub
stos
lods
out
and
fstps
addr16
mov
adc
inc
je
or
sti
and
jle
sbb
mov
push
inc
cltd
aam
cmp
push
fnstcw
mov
and
imulb
mov
aaa
push
mov
cmp
dec
and
jg
inc
test
in
dec
roll
lret
inc
adcb
lods
xor
lods
repz
and
mov
das
enter
addr16
pop
jp
dec
jg
popf
repz
stos
jl
dec
lret
inc
out
mov
outsl
in
daa
pop
adc
mov
mull
sub
call
repnz
jae
lods
dec
cmpsb
insl
pop
daa
rcr
addb
jno
push
mov
mov
in
cmp
pop
cmpsl
mov
adc
pop
push
movsl
push
dec
scas
push
mov
int3
push
inc
sahf
pushf
dec
push
popf
adc
scas
ljmp
pop
arpl
add
dec
arpl
repz
lods
jb
dec
ljmp
sbb
and
iret
lcall
mov
mov
leave
loop
pinsrw
or
sub
xchg
sub
sub
fidivrl
inc
push
sbb
insl
pop
fs
xor
and
mov
mov
lcall
fildl
or
mov
scas
lea
rolb
jmp
mov
cmpsl
daa
popa
pop
mov
or
adc
scas
stos
and
bound
jnp
sbbl
int3
shll
or
roll
xor
addl
nop
mov
mov
popf
adc
lods
imul
inc
stos
mov
mov
sub
push
or
dec
enter
insb
je
jns
mov
je
nop
mov
ljmp
jns
mulb
enter
stos
js
sub
cltd
les
jno
out
mov
and
sbb
and
test
out
mov
jno
iret
inc
pop
jmp
or
loopne
in
add
lahf
insl
test
imul
mov
or
push
popf
and
mov
subl
aas
test
in
movb
cmp
pop
mov
in
mov
hlt
movsb
and
add
inc
shrb
or
insl
iret
mov
mov
inc
sub
cmp
add
scas
xor
mov
out
testl
inc
push
cmpsl
lret
js
or
cwtl
jg
mov
mov
in
mov
mov
movsb
mov
loop
rorl
das
fldenv
jg
sub
dec
sub
add
jg
push
sbb
push
and
add
mov
mov
addr16
inc
cmp
xor
pop
leave
shll
push
dec
divb
in
jnp
call
pop
push
dec
sahf
pop
repz
pop
xor
stos
pop
cmp
and
xchg
adc
mov
xor
dec
mov
stc
xchg
fs
je
movsl
sbb
mov
leave
jmp
mov
fbld
push
pslld
aam
in
sub
movsb
rclb
pop
push
jns
adc
fsubp
ret
stc
js
js
movsl
xchg
cmp
loopne
mov
sbb
mov
stos
mov
jne
sub
scas
mov
jl
movsl
xchg
pop
shlb
inc
pushf
and
lock
cli
cmpb
jb
shrb
cmp
dec
das
push
insb
shr
dec
ds
xor
movb
pop
mov
push
xchg
mov
cmpsl
add
add
fisttpl
lret
cmp
push
mov
and
add
xor
xchg
leave
mov
aad
mov
sbb
je
mov
jae
imul
stos
mov
push
lods
pop
lret
outsb
rolb
ss
jae
leave
jb
lcall
sub
mov
int3
sub
mov
mov
xchg
in
mov
xchg
pusha
xor
mov
xor
inc
adc
pop
adc
sahf
and
xor
sub
int3
mov
fcomip
cmp
test
fstpt
mov
imul
adc
out
mov
stos
test
aas
cltd
sub
loop
or
sub
jle
sub
nop
rolb
xor
pushf
adc
test
icebp
mov
xchg
imul
pop
fs
les
xor
lahf
xchg
xchg
and
mov
mov
jns
cmp
and
and
xor
cs
or
sbb
in
iret
loope
loop
and
js
xchg
mov
std
mov
mov
scas
shrb
lret
mov
jnp
pop
scas
push
repnz
scas
sub
scas
pusha
cli
jns,pn
in
inc
scas
jnp
xor
jne
or
movsl
pop
inc
pop
in
cmp
dec
xlat
mov
jl
jns
cmp
out
inc
movl
stos
inc
popa
std
ljmp
shr
fdivrp
insb
jmp
pop
cs
fs
mov
mov
std
mov
lods
popf
jne
cmp
out
ret
xchg
sub
push
clc
test
mov
push
xor
xorb
xchg
xchg
test
jne
jecxz
mov
cmc
cmp
adc
push
pop
ret
into
repz
test
lods
cltd
int
ror
in
pop
je
into
sbb
movsb
stos
test
mov
lds
xchg
data16
sub
scas
lods
arpl
and
shll
jl
int
out
cmp
push
sbb
movsb
pop
adc
pop
filds
movsl
neg
xor
mov
or
dec
test
in
push
dec
jnp
push
xor
push
mov
jno
cmc
and
adc
mov
push
inc
mov
leave
loope
and
dec
das
roll
ja
mov
stc
aam
jno
std
sti
sbb
xor
idiv
and
fcoms
mov
shr
lods
iret
sub
mov
lret
and
xchg
leave
jo
sub
mov
mov
sub
mov
xchg
mov
cmpsl
shll
test
sbb
aas
xchg
lret
js
cmp
lahf
jl
xchg
arpl
mov
test
mov
dec
dec
hlt
cmp
in
xor
in
xchg
ret
flds
je
lods
dec
test
adc
mov
xchg
enter
mov
lea
test
xchg
daa
fiadds
cld
ja
mov
jecxz
cmp
loope
pushf
xchg
lock
scas
je
shll
in
arpl
pushf
dec
hlt
jg
addr16
test
nop
stc
mov
mov
aaa
aaa
mov
xbegin
mov
mov
movsl
cmc
out
mov
jb
push
mov
lret
xor
mov
lock
outsb
fwait
movsb
mov
clc
pushf
push
and
inc
mov
mov
xor
xor
and
xor
cs
or
mov
cwtl
lods
mov
xchg
pop
aas
ret
mov
mov
mov
pusha
cmpsl
xchg
jne
data16
stos
gs
or
adc
or
repnz
fidivs
and
mov
mov
stos
pop
lods
adc
call
sub
std
push
movsl
data16
inc
in
js
sub
mov
sub
xor
mov
cmp
insb
adc
ret
and
mov
dec
cwtl
mov
mov
mov
mov
xor
call
mov
popf
sbb
mov
aas
mov
pop
shlb
inc
mov
test
push
scas
imul
fdivrs
mov
imul
rcrb
push
cli
and
cmpl
dec
ja
nop
daa
mov
xor
test
xor
mov
adc
imul
jp
aas
fsubrl
mov
aas
pop
pushf
push
cmp
mov
jnp
push
mov
lret
inc
dec
pop
xchg
mov
xchg
popa
scas
sahf
jnp
jp
mov
out
subl
add
mov
mov
cmp
out
xor
sub
mov
mov
stos
out
add
xor
pop
arpl
scas
or
mov
mov
mov
inc
inc
rol
fwait
int3
aas
in
lcall
test
xor
lods
mov
mov
popl
jns
and
pop
mov
xchg
sub
sbbb
enter
mov
stos
sub
fdiv
adc
enter
adc
icebp
insb
lret
enter
dec
jl
in
js
cmp
movsb
faddp
jle
lcall
mov
dec
shll
and
xchg
rcrl
pop
into
outsb
fs
loope
xchg
icebp
ja
leave
cmpsb
daa
ljmp
out
in
sub
sbb
in
xor
push
mov
shlb
leave
xchg
jle
aad
mov
fldcw
loope
xor
in
dec
lods
push
pop
fcoml
lods
mov
inc
popa
stc
push
test
xchg
int3
xchg
movsb
leave
push
mov
sub
and
loop
add
mov
mov
pop
pop
stos
xor
pusha
pop
aas
xchg
mov
aam
xor
inc
lea
addb
aaa
js
repnz
orb
mov
mov
cwtl
inc
push
mov
and
aad
and
adc
adc
xchg
pop
and
ret
in
test
leave
insb
pop
lret
mov
lods
xchg
mov
jmp
push
sahf
icebp
jmp
cmp
outsl
inc
adc
inc
dec
cwtl
pop
mov
adc
fstpt
stos
adc
push
mov
sahf
pushf
push
mov
push
aaa
inc
rcrb
push
sbb
mov
lock
mov
scas
and
mov
test
mov
mov
pop
nop
jns
test
mov
ret
mov
cli
loop
adcb
pushf
xchg
and
out
in
mov
xchg
push
stos
mov
mov
lods
xor
sahf
int3
cmc
insb
push
mov
neg
mov
inc
xchg
jbe
cltd
popa
sub
fsubrl
mov
arpl
test
jns
xchg
imul
scas
hlt
repz
idivl
clc
push
lcall
mov
mov
sub
sbb
les
call
add
into
fistpll
enter
mov
mov
sub
aam
int3
push
data16
xchg
stc
hlt
ds
sbb
lcall
es
sub
fisubrl
xchg
mov
pusha
cmp
int3
clc
cmp
jno
aaa
push
mov
ds
dec
jmp
lods
outsl
push
sub
int3
dec
inc
scas
aaa
mov
mov
pop
jnp
xchg
inc
mov
stos
jns
inc
leave
jg
je
cwtl
adc
sbb
pop
inc
dec
mov
das
mov
cwtl
ja
cmp
adc
test
xor
mov
mov
mov
in
dec
push
imul
jge
test
mov
push
dec
jle
bound
cmpsl
and
xor
mov
mov
psubusb
enter
mov
xor
test
dec
leave
cmp
mov
mov
push
mov
mov
mov
add
sbb
mov
sub
leave
sbb
shll
shlb
mov
ret
test
out
pop
push
ds
push
nop
jl
push
mov
mov
sub
insl
mov
outsl
and
repz
mov
insb
inc
adcb
inc
mov
mov
insb
les
fs
jns
test
shll
ds
or
fistl
dec
out
fdivrs
xor
pushl
pop
ljmp
jp
push
sub
aas
push
ficoms
jnp
push
xchg
outsl
out
mov
or
sub
lods
sub
lahf
xchg
xchg
pop
xchg
or
mov
jns
hlt
inc
leave
scas
jnp
test
inc
inc
dec
xchg
lods
outsl
and
test
cld
test
sbb
jo
cmp
add
xchg
pop
lock
ds
aas
repz
insl
mov
sahf
pop
jae
fs
pusha
test
insl
lods
leave
pop
mov
das
int3
xor
inc
cltd
jnp
jg
cmp
test
stos
mov
adc
adc
adc
or
je
pop
inc
imul
push
lahf
pop
jnp
inc
dec
xor
push
shll
inc
mov
cmp
cvtpi2ps
push
cmp
imul
mov
sub
mov
scas
jmp
mov
outsb
mulb
loop
cmp
xchg
lea
stos
mov
in
ret
shlb
mov
adc
aas
jg
ds
xchg
mov
mov
pop
popa
mov
xor
int3
aaa
jl
adc
ja
xchg
mov
outsl
xor
cmpsl
shrb
ss
jnp
jmp
jo
add
mov
push
dec
pop
mov
test
ljmp
test
cmp
xor
sti
mov
lret
mov
mov
scas
lods
xor
popa
stos
cli
fisubs
mov
and
dec
adc
jge
xor
lcall
sarb
jno
push
mov
outsl
gs
sub
dec
int3
jb
pop
negb
int3
sub
mov
call
add
movsb
inc
cmpsb
into
fs
in
mov
push
jo
push
cld
pop
jb
sbb
les
cld
sbb
push
push
or
nop
push
jmp
xchg
sub
mov
sub
int3
jmp
xorb
popa
cmp
in
scas
inc
or
lea
push
mov
arpl
lods
ror
imul
jl
cld
dec
adc
jb
or
or
test
int3
xchg
cmp
jno
jmp
arpl
sar
xor
ja
imul
popa
sub
test
outsl
insl
icebp
cmp
dec
lock
arpl
mov
cld
and
inc
and
mov
pop
pusha
sub
movsb
dec
arpl
adc
sti
cwtl
xor
adc
pushl
mov
iret
push
movsb
xor
xchg
addr16
xchg
pop
mov
pushf
jb
inc
xorl
jb
clc
xor
jecxz
das
sub
jb
insl
cmpsb
outsl
push
mov
jb
mov
xor
addr16
or
sbb
inc
das
sub
xchg
push
test
mov
mov
shlb
xchg
test
and
in
jo
call
sub
into
lods
ss
jbe
xchg
lods
mov
mov
sub
stos
ret
lock
xchg
dec
rcrl
shrb
push
movsb
inc
jb
push
loopne
sbbb
rcr
leave
push
push
xor
daa
cmp
adc
pop
or
pop
gs
mov
fbstp
sbb
andb
jmp
cmp
out
jae
iret
xchg
jns
xchg
add
mov
sbb
fs
shrb
adc
leave
add
mov
stos
test
xchg
insl
jae
sub
int3
inc
jbe
push
sub
insb
loop
stc
cli
shl
pop
xchg
scas
js
leave
lock
xor
push
imul
inc
movsb
xor
popf
cltd
xorb
adcb
daa
subb
imul
leave
sahf
pop
inc
push
cmpsb
movsl
es
in
push
xorl
in
xchg
xchg
push
shl
mov
inc
hlt
push
jnp
mov
scas
xor
lea
jno
inc
lods
repz
int3
out
mov
movsb
mov
mov
fs
int3
add
xchg
sub
sbb
inc
inc
pop
and
sbb
mov
addr16
push
test
movsl
loopne
mov
in
add
imul
jno
push
cli
pop
stc
xor
or
bound
xchg
shl
mov
and
jae
imul
xchg
push
inc
pop
xor
popa
pop
fistps
mov
mov
mov
into
fisttpll
sahf
cld
dec
fdivs
pop
outsb
popa
cld
cs
dec
inc
pop
sub
out
inc
xor
orl
int
ds
pop
out
mov
js
dec
andl
movsl
icebp
inc
test
test
jge
sbb
dec
lea
xor
or
imul
jmp
addr16
cltd
mov
ss
and
das
in
in
mov
mov
dec
pop
inc
leave
jae
pop
cmp
xorb
adc
aaa
mov
stos
add
shl
pop
mov
xchg
cmp
hlt
inc
mov
jb
mov
cmp
pop
or
in
mov
xchg
testl
sti
mov
scas
jns
mov
push
scas
int3
push
orl
mov
pop
pop
jb
scas
pop
fcomp
iret
mov
add
sub
adc
mov
loopne
lcall
sbb
pop
pushf
js
xor
sub
mov
inc
jae
js
jmp
mov
test
mov
push
mov
js
xchg
pop
roll
jbe
mov
jnp
fisttps
pop
and
inc
fwait
push
insb
xor
js
loopne
outsb
test
out
dec
leave
shll
out
and
push
jle
shlb
mov
insb
pop
js
orb
test
daa
cmpsl
movsb
pop
aas
gs
lcall
outsl
jle
lock
leave
pop
or
aas
lods
into
inc
and
in
cmp
cmc
lcall
xor
outsb
inc
xchg
mul
data16
xor
leave
jb
mov
fwait
adc
stos
lods
stos
and
push
sti
push
mov
xor
mov
bound
xor
pop
mov
subb
lods
push
jnp
movsb
xchg
mov
test
addr16
outsb
xor
xchg
jg
popf
insl
mov
mov
cpuid
test
cmpb
and
jns
inc
xor
fimull
mov
cwtl
jo
sbb
cld
leavew
and
int3
adc
movq
push
ljmp
dec
scas
mov
cmp
std
shlb
push
mov
test
adc
inc
push
xor
lret
fidivl
mov
and
xchg
shll
xor
inc
fs
xorb
adc
sub
icebp
arpl
fdiv
scas
xlat
add
into
cwtl
xchg
mov
shlb
push
subl
das
leave
subb
xchg
adc
inc
inc
insb
sbbb
sahf
scas
add
leave
popa
nop
cld
lcall
cmp
push
ret
inc
into
js
rclb
stos
jge
pop
cmc
mov
pop
mov
es
mov
mov
xor
rorb
add
loop
sbbb
out
cmc
popf
mov
daa
dec
mov
adc
cmp
add
adc
icebp
add
bound
daa
outsb
mov
inc
and
xchg
cmpsl
int3
xchg
or
mov
pop
dec
fsubrs
dec
push
pop
fcmovbe
pop
aaa
push
or
mov
mov
push
jae
adc
pop
mov
leave
nop
out
cs
dec
jge
xor
aaa
xor
jg
lds
jecxz
js
sbb
mov
push
fwait
mov
xchg
cld
mov
outsl
je
mov
xchg
cwtl
jg
push
out
mov
les
cs
xor
push
or
out
repz
or
test
loopne
outsb
es
inc
scas
push
inc
stos
sub
das
aad
or
cs
daa
ljmp
fwait
stos
cs
sub
xchg
shlb
cmpsl
ss
mov
andb
and
xchg
mov
int3
or
push
mov
jb
movsb
and
xchg
test
int3
cmpsb
cmc
in
je
fsubrl
or
loope
stos
out
jb
dec
mov
jp
js
push
mov
xchg
in
or
rsqrtps
scas
popa
mov
dec
cmp
mulb
testb
or
or
add
sahf
cmp
xlat
pushf
xchg
inc
int3
jo
mov
xchg
sahf
and
imul
mov
sbb
ljmp
fnstsw
sub
mov
iret
int3
popf
xorb
repz
into
xchg
imul
test
xor
push
out
xchg
or
je
mov
mov
inc
scas
sub
mov
scas
das
push
jae
xor
or
push
int3
test
push
dec
outsb
dec
movsl
mov
push
std
in
xlat
mov
jecxz
imul
mov
dec
jp
cmpsb
add
and
cmc
addl
push
inc
test
pop
stos
cld
test
adc
jbe
and
popa
mov
push
mov
repz
mov
cmpsl
dec
test
mov
cmc
mov
sub
js
mulb
push
lcall
sub
mov
inc
xor
xchg
call
jns
shll
out
xchg
jbe
ljmp
insb
add
push
cmp
test
cwtl
lods
arpl
sbb
and
jb
cwtl
adc
xchg
xor
repnz
lea
in
adc
mov
sbb
cwtl
pop
aad
xorb
js
pop
sbb
mov
sub
in
addb
cmc
mov
dec
gs
in
sbb
pop
mov
movsb
not
add
add
pop
xor
insl
lods
ja
jp
stos
cmc
jge
adc
jo
insl
inc
pop
aas
adc
xchg
mov
and
cmp
cmp
xchg
dec
fdivrs
push
bound
xchg
aam
push
sub
jo
mov
outsl
in
stos
and
call
dec
outsb
sar
nop
or
push
lret
nop
popa
mov
leave
sahf
insl
jo
xchg
out
and
mov
jecxz
movsb
test
mov
in
mov
or
cmp
jne
push
mov
leave
fdivrs
fiaddl
and
dec
dec
gs
shrl
popa
js
or
jge
cs
loope
dec
into
fiadds
xchg
pop
inc
cmp
shll
pop
xchg
jo
int3
pop
and
jmp
movsb
movsb
inc
xchg
ja
imul
sub
inc
lods
mov
dec
cmp
lahf
adcb
cmp
test
mov
xchg
sahf
sbb
add
push
pop
xor
inc
push
sbb
das
sbb
lock
ficoms
lret
mov
fldenv
inc
mov
mov
lea
stos
and
cld
xor
add
loope
or
and
cmp
rcrb
mov
les
inc
add
out
or
pushf
push
imul
push
je
jnp
pop
xor
mov
add
adc
mov
lods
test
enter
movsb
fsubrs
lock
lods
inc
cs
mov
or
push
mov
rcl
and
ja
mov
clc
adc
mov
movsb
cmpsb
push
mov
nop
fisttpll
mov
xor
scas
jp
jnp
lock
insb
adc
imul
stos
stc
add
aas
dec
adc
sub
movsl
dec
sbb
adc
cmp
cmp
jns
push
push
shr
cs
xchg
sub
movsb
xchg
pop
addr16
xchg
xchg
sub
scas
repz
pop
pop
jns
mov
pusha
fsubl
push
mov
pop
scas
dec
imul
mov
lods
push
call
data16
add
cli
sub
jae
lret
xor
movsl
xorb
or
stc
popa
cmp
adc
mov
insb
jg
mov
adc
and
inc
cmp
sub
in
mov
scas
xchg
pop
jmp
cwtl
adc
gs
aad
repz
lods
inc
scas
mov
jmp
cli
bound
subl
test
repz
and
inc
sbb
ss
cmp
inc
adc
and
aas
dec
jle
icebp
jg
sbb
cmp
es
xchg
mov
mov
insb
hlt
sbbb
xchg
dec
xchg
mov
adc
ret
test
jo
ret
push
pop
aaa
xchg
inc
orb
ss
shrb
mov
rcrl
jl
sub
dec
loop
das
orl
sub
sub
and
sbb
and
mov
test
pop
fcompl
shll
test
xchg
imul
out
xchg
ds
icebp
push
fwait
mov
push
push
jle
cltd
arpl
and
movsl
loope
sbbb
sub
jle
sbb
das
dec
mov
lcall
add
mov
stos
jo
or
mov
popa
cld
push
xchg
mov
pop
jge
mov
mov
push
sub
mov
test
popa
mov
cld
pop
mov
xchg
shll
xchg
dec
test
pop
xchg
les
mov
fwait
mov
lods
test
int3
cmp
add
push
pushf
dec
aaa
les
mov
popa
lcall
test
fcoml
movsl
fs
sub
les
or
push
shlb
jne
repnz
mov
add
sbb
and
and
xor
mov
xor
sub
pushf
cmc
rclb
cwtl
adc
xchg
dec
aaa
repnz
fwait
arpl
mov
adc
add
test
pop
mov
mov
lods
mov
movsb
stos
mov
movsl
stc
jp
xchg
inc
xor
lods
cmp
repnz
fidivrl
adc
pop
test
xchg
pop
dec
mov
add
hlt
xchg
movsl
cmc
jmp
sub
pop
in
hlt
mov
push
loopne
xor
push
inc
ds
xchg
push
jnp
ret
xchg
lds
sahf
mov
and
call
ficoms
mov
test
add
nop
aas
insb
mov
dec
pop
jnp
jne
adc
dec
pop
insb
cmpsl
lahf
das
mov
lods
pop
into
imul
shlb
adc
aaa
scas
roll
sub
nop
int3
rcrb
jmp
push
pushf
push
shrl
xor
in
mov
mov
lahf
xchg
push
add
xchg
in
subl
jb
sbb
or
aam
sahf
and
push
adc
data16
mov
daa
insb
mov
adc
dec
mov
cmp
mov
int3
in
mov
or
mov
jp
add
xor
inc
into
aas
jb
mov
jae
rorl
pop
stc
sub
mov
xchg
test
cmp
enter
movsb
int3
mov
push
into
cmp
jmp
adc
mul
add
outsb
stos
sbb
push
xchg
sub
and
mov
or
xchg
sub
mov
sub
inc
data16
cmp
loop
mov
cld
sub
mov
pop
xor
mov
push
mov
xor
enter
jns
push
outsl
xchg
nop
and
cld
xor
test
pop
mov
mov
cmpsl
jns
inc
stos
push
loope
pop
cmp
pusha
adc
or
or
or
into
ja
adc
iret
jle
data16
xor
pop
mov
cmp
icebp
push
adc
test
loopne
psrad
sahf
sarb
stc
outsb
mov
filds
inc
js
inc
aas
xchg
xor
pop
mov
jbe
imul
xchg
fwait
push
loop
scas
or
arpl
mov
adc
or
jg
mov
loop
xchg
fcmovne
insb
fwait
loop
mov
lods
mov
lea
std
insb
xchg
pusha
rclb
mov
pop
push
js
pop
ja
mov
jg
adc
mov
mov
xchg
jne
std
sbbb
xchg
pusha
xlat
dec
out
test
mov
loopne
add
ds
fs
lds
push
mov
testl
fstl
jb
int
call
push
sbb
mov
popa
pushf
call
lock
sub
mov
mov
pop
jmp
jmp
mov
jge
test
stos
push
dec
dec
mov
cmpsb
mov
push
gs
repnz
push
not
ret
int
push
shlb
stos
xchg
jg
mov
push
mov
iret
jecxz
adc
outsl
or
scas
test
mov
dec
outsl
mov
rolb
mov
ljmp
fs
push
xor
movsb
jl
lods
pop
push
push
sbb
pop
inc
pop
std
rcrb
cs
outsl
jo
test
lods
fistps
mov
xchg
ret
xchg
out
pop
jg
lret
mov
test
cmpsl
rcr
enter
jns
aas
mov
int3
mov
iret
pop
mov
sbb
push
mov
pushf
jns
test
bswap
sbb
xor
adc
repnz
pop
dec
lods
jo
inc
lods
push
repnz
add
sbb
stos
lods
outsl
or
movsl
cwtl
xchg
js
xchg
xchg
xchg
fwait
mov
adc
cmc
xchg
push
pop
ret
cmp
dec
data16
mov
dec
cmp
popf
fimull
imul
cli
pop
inc
lds
jmp
repz
jno
jno
push
inc
pop
test
xor
lods
js
add
fildl
xor
and
in
int
dec
loop
in
jne
scas
shlb
jae
and
gs
xchg
pop
inc
dec
sbb
mov
jl
sti
gs
pop
ret
mov
leave
lods
loope
ret
addr16
pop
cmp
and
fdivrs
movsb
cmp
cwtl
int3
cmpl
cmp
in
mov
jmp
test
mov
xor
shll
xchg
jle
pop
loop
xor
dec
mov
xchg
and
pusha
xchg
mov
js
and
adc
mov
dec
and
or
mov
inc
mov
sub
push
push
mov
data16
lds
or
nop
je
pop
std
ret
pop
fsubl
pop
cmpsl
add
sti
in
ficomps
push
in
sub
cltd
std
mov
xchg
lock
aaa
ljmp
dec
pop
das
mov
cmpsb
fmull
sti
sub
adc
in
stc
mov
not
cmpsl
mov
mov
decb
stos
adcl
add
cwtl
pop
imul
mov
cmc
lea
jbe
aas
mov
not
insl
mov
test
mov
adc
mov
lods
daa
test
rolb
push
mov
dec
loopne
adc
orb
or
push
pop
add
mov
dec
xchg
shll
int3
dec
xor
stos
or
lods
add
push
arpl
jno
xchg
mov
lods
xor
jae
jmp
mov
cld
mov
mov
repz
leave
mov
insl
mov
data16
xchg
xchg
fbstp
out
orb
xchg
push
test
fmull
or
and
insb
cmc
mov
jns
out
pop
nop
xchg
cmp
jg
jp
movsb
ds
push
sub
and
adc
push
sbb
lcall
jp
and
push
and
xor
inc
or
into
sbb
in
xchg
je
int3
xor
outsb
arpl
pop
int3
fsubp
fstps
xchg
jg
lahf
push
imul
sub
nop
cmp
sbb
mov
xchg
stos
jl
jo
sbb
sub
cmp
stos
and
xor
fldt
jne
ss
mov
add
mov
js
je,pn
jecxz
rclb
out
pop
mov
xchg
sahf
mov
aam
out
mov
xchg
xor
adc
lods
dec
in
adc
xor
int3
movsl
adc
leave
xchg
xorl
xchg
xlat
imul
add
add
adc
inc
jo
loope
mov
loopne
jl
jno
mov
rorb
das
xor
stc
lcall
xorb
cltd
sbb
scas
mov
outsb
fidivrs
rcll
pop
xchg
mov
lock
adc
pop
mov
mov
add
arpl
mov
mov
push
ljmp
add
pushf
idivl
gs
sbbb
mov
rol
jb
mov
sub
popf
clc
dec
mov
cmpsb
mov
into
sub
or
lock
icebp
mov
insl
fst
push
aas
test
adc
add
xor
daa
mov
cmc
in
mov
cmp
out
outsb
es
int3
test
jmp
data16
jb
dec
movsl
sub
adc
roll
push
mov
xorb
movsl
arpl
pusha
repnz
lret
jbe
inc
fdivrs
mov
push
adcb
inc
jle
idivl
push
mov
jns
push
cld
fs
push
shrl
leave
push
xchg
jns
bound
lods
pusha
subl
test
jmp
leave
pusha
outsl
dec
mov
pop
add
dec
inc
or
mov
xchg
lods
test
xchg
xor
ret
xchg
cmc
fildl
loopne
add
out
scas
orb
mov
mov
test
xor
xor
andl
adc
jae
and
fidivs
rolb
or
rcll
out
daa
lea
std
mov
jo
jle
lret
mov
test
mov
cmp
xchg
xchg
xchg
outsl
iret
lods
add
sar
mov
mov
pop
fbld
idivl
fcoms
in
or
repz
gs
je
xor
pop
and
mov
sbb
push
lock
pop
inc
xchg
push
pop
inc
inc
ljmp
xlat
jbe
cmp
ret
mov
lods
int3
stos
fucompp
xlat
cmp
mov
sub
fidivrl
fimull
cmp
cmp
callw
or
test
xchg
mov
lret
adcb
xor
lcall
adc
inc
cld
orb
addr16
and
out
push
xor
push
sbb
jg
add
insb
push
jns
adc
jmp
mov
lods
push
jns
inc
mov
and
jl
lods
jb
xchg
scas
pop
or
mov
cltd
jl
pop
iret
nop
push
fs
lcall
cmp
lcall
dec
jnp
mov
mov
stos
inc
cwtl
mov
fisubrs
icebp
mov
repnz
fwait
push
mov
push
fmull
inc
cmpsb
xchg
loope
push
jge
lods
ds
pop
inc
or
xlat
mov
xor
sub
je
leave
les
repnz
inc
rclb
mov
ret
sub
idivl
add
scas
movsb
mov
and
loop
jo
push
add
popf
mov
dec
fisubs
icebp
jecxz
rorb
call
aad
jg
incl
sbb
xor
iret
movsb
xchg
dec
ss
mov
sub
lret
xchg
jp
pushf
mov
repnz
mov
leave
xor
sbb
movsb
sub
push
jbe
and
and
push
pop
sbb
mov
jle
mov
sbb
cli
notl
popf
sbb
je
stc
adc
pop
push
pop
xchg
mov
arpl
fcmovnb
jg
adc
lds
pop
insl
scas
xor
mov
mov
mov
jae
mov
enter
xor
and
and
pop
leave
adc
xlat
adc
add
lock
dec
imul
scas
mov
mov
sub
mov
aas
rclb
mov
stos
sbb
aam
pop
pop
dec
es
mov
jl
rcrb
mov
leave
push
sub
scas
mov
add
int
pop
sahf
pop
pop
pop
and
fs
in
pop
mov
stc
and
ljmp
sahf
push
lods
sub
popf
sub
call
pushf
dec
and
sti
or
subb
ja
outsb
push
xchg
or
sbb
jo
xor
jno
xchg
inc
mov
dec
mov
and
sbb
pop
jecxz
cli
nop
fisttpl
mov
dec
pop
and
push
push
xchg
imul
rorl
test
leave
into
cmc
aam
push
movsb
jb
xchg
fisubrs
xchg
pop
jp
or
xchg
popl
daa
sub
in
xchg
xor
push
test
sbbb
loop
cmpsb
jae
movsl
push
xor
xchg
inc
dec
xchg
icebp
ja
dec
scas
movsb
arpl
movsl
and
repnz
popa
aas
dec
mov
int3
jg
sub
mov
daa
insb
sarb
or
jb
add
xor
je
lret
test
int3
and
or
sbb
xchg
fisttpll
inc
xor
mov
sti
sub
mov
push
sub
and
ss
mov
mov
aaa
pop
enter
out
mov
loope
repz
pop
pop
bound
movhps
test
movsl
pop
sbb
int3
jmp
pushf
cmpsb
daa
in
pop
xchg
mov
mov
lock
sbb
add
popf
lahf
xor
popa
mov
movsb
rcrb
or
push
push
pop
jb
movsl
movd
and
popl
jmp
cs
dec
adc
push
jecxz
leave
xchg
jne
dec
jne
inc
mov
xor
popa
movsb
adc
popf
loope
sahf
jecxz
shlb
repnz
mov
push
pop
enter
roll
xor
push
jno
xorb
mov
push
push
pop
adc
cwtl
push
sbb
pop
mul
pop
stc
sti
and
or
push
sbb
jg
adc
jns
inc
jnp
cmp
jns
test
aas
sub
notb
mov
and
lahf
bound
icebp
xchg
ret
pop
sbb
lods
mov
mov
in
xor
push
in
or
in
lret
bound
mov
iret
repnz
mov
std
fcmovb
jae
rol
daa
mov
push
xchg
add
ret
pushf
sub
sahf
xor
xchg
mov
xchg
mov
pushf
jbe
xor
fwait
xchg
sbb
dec
enter
mov
dec
loop
stos
push
ret
mov
pop
add
or
lds
adc
aaa
mov
ret
and
pop
push
push
ss
xor
mov
movsb
xlat
mov
mov
inc
xchg
lahf
or
fldt
rcrl
mov
mov
adc
jo
stc
pop
iret
pop
out
push
adc
or
jnp
fs
in
and
mov
dec
outsl
movsl
sub
leave
sahf
jns
and
xchg
xor
mov
pop
pop
add
popa
sub
inc
fstpl
sbb
cmpsl
sbb
lea
repz
insb
mov
jae
sbb
mov
arpl
mull
mov
adc
and
jnp
clc
mov
inc
dec
push
xchg
adc
std
and
rcrb
aaa
mov
sub
and
inc
sbb
cmp
sub
lock
or
scas
mov
cwtl
sbb
popf
arpl
inc
mov
push
sbb
mov
outsl
cmp
pusha
andl
sti
push
sub
movsb
or
fs
xor
jns
pop
push
mov
pop
dec
fnstcw
pop
jns
movsl
mov
pop
test
or
inc
xchg
pop
lahf
jg
das
mov
mov
out
push
mov
fsubr
push
je
loop
negl
mov
das
jmp
pop
mov
mov
inc
mov
fadds
inc
and
std
ficomps
gs
jmp
xchg
in
daa
shrb
sahf
jecxz
lods
lahf
cmp
leave
cltd
and
cmp
xchg
fmull
mull
sbb
mov
pusha
add
jb
das
and
test
and
int
jae
jb
aad
hlt
cmpsb
daa
outsb
ds
xchg
inc
jecxz
jp
mov
jmp
int3
jo
stc
lods
jae
in
jnp
insb
test
sub
cmp
nop
es
dec
sub
andl
cmpsb
mov
pushf
cld
pop
shl
xchg
lahf
cld
das
shrb
pop
adc
sub
or
test
pop
test
leave
fstps
mov
in
mov
adc
mov
leave
std
loop
add
stos
stc
pushf
or
lahf
dec
sbb
push
aas
cltd
mov
test
ss
es
dec
jl
aaa
pop
data16
das
cmp
je
mov
icebp
movsb
mov
test
jmp
pushw
ja
push
pop
xor
sbb
mov
mov
pop
andb
or
test
jl
cwtl
cli
mov
dec
stos
aam
mov
cmp
mov
and
scas
lods
xor
insb
and
pop
inc
xchg
adc
xchg
shlb
lcall
fdivrl
lock
xchg
jo
mov
loop
repz
loope
cmpsl
loop
das
mov
pop
add
xchg
xchg
pop
add
mov
add
jne
aam
mov
pop
bound
xchg
dec
int3
mov
aad
ss
clc
xor
mov
int3
aas
data16
sbb
mov
clc
pop
cmc
orps
lcall
out
in
mov
aaa
jo
adc
mov
and
nop
cmpsl
fs
fs
mov
scas
das
inc
jge
jns
xor
insb
fsubr
movsl
lcall
jnp
inc
xchg
int3
or
adc
imul
stc
sub
cmp
jmp
cmpsb
cwtl
xlat
test
push
mov
xchg
gs
sub
ret
cli
xchg
cmpsb
ljmp
outsb
or
xor
insl
xchg
imul
xor
mov
lret
jae
jbe
xchg
xchg
pop
push
dec
sub
xor
mov
adc
pop
das
jo
push
int3
loopne
mov
xchg
addb
popf
das
mov
lock
pop
aaa
ds
push
pop
testb
outsl
fdiv
pop
pop
test
daa
mov
lods
xlat
in
lret
jge
xor
push
sahf
fs
adc
js
sbb
mov
push
cmp
xor
push
inc
out
outsl
inc
dec
mov
push
dec
cmp
clc
pop
push
idivl
jno
inc
jb
xorb
fs
cltd
mov
mov
cmp
dec
dec
fsubr
out
popf
fiaddl
and
enter
mov
xchg
aam
rolb
add
ror
sbb
mov
fldcw
pop
mov
mov
movsl
repz
jmp
gs
mov
test
sub
cmpsl
movsb
por
jno
dec
pop
sub
inc
je
mov
sub
and
int
lods
ljmp
push
bound
jge
sub
jp
dec
adc
pop
gs
aam
fstps
loopne
add
das
pop
and
mov
xchg
pop
jl
movsb
cmp
pop
scas
int3
out
mov
pop
jp
into
xor
test
stos
mov
stc
push
icebp
repnz
sub
pop
jae
fisubs
fs
movsb
cmp
push
sub
in
in
mov
clc
fwait
daa
lods
jns
sub
test
addr16
iret
jp
setle
xor
adc
xchg
sahf
test
stos
lock
mov
pop
sub
sub
mov
gs
les
cs
jno
xchg
pop
repnz
int3
xchg
dec
adc
lock
fstpl
xor
popf
mov
push
frstor
in
or
mov
push
je
int3
or
push
push
push
pop
add
pusha
xchg
mov
xor
insl
sbb
push
and
jbe
bound
out
insb
cwtl
pushf
pop
loope
add
and
loope
mov
mov
adc
rcrl
insl
ss
outsb
inc
mov
cpuid
mov
and
jecxz
pop
fdivl
loop
add
cmpsb
mov
sub
or
test
cmc
repnz
xchg
scas
int3
sbb
xchg
lahf
test
hlt
mov
dec
test
stos
scas
daa
addr16
add
jns
icebp
add
xchg
adc
imul
lret
sahf
aam
push
xlat
cmp
testb
pop
int3
lcall
sub
mov
dec
mov
sbb
sub
repz
mov
push
ret
lods
aas
ror
pop
mov
divb
and
dec
enter
add
repz
lods
xlat
mov
dec
mov
hlt
int3
mov
jo
sub
mov
dec
arpl
lods
adc
enter
push
xchg
cld
jbe
jecxz
jns
adc
xor
mov
lods
cs
pop
imul
cwtl
popa
dec
aad
out
test
and
mul
sarl
sub
jbe
xchg
les
fildll
mov
xor
cld
and
jmp
mov
pop
pusha
pop
cltd
and
mov
push
nop
scas
popa
push
bound
movsl
test
decb
outsl
adc
and
mov
add
mov
adcb
add
divl
or
jl
fidivrl
mov
ss
xchg
shlb
cmpsb
int3
xchg
and
ficomps
lods
sbb
int
push
inc
mov
push
addr16
xchg
push
xchg
dec
add
repnz
pushaw
les
adc
push
mov
inc
cmp
cmpsl
je
mov
std
insb
movsl
pop
and
scas
in
sub
push
push
and
rclb
test
lea
mov
imul
pop
test
insb
xchg
repz
sub
negb
mov
jne
xchg
rcll
mov
shrb
adc
mov
in
cmpsl
push
xchg
insl
aaa
add
or
ds
mov
adc
insb
jae
imul
and
push
mov
insb
out
pop
cs
mov
repnz
mov
adc
imul
xchg
daa
fsubp
shl
xchg
popf
adcb
sub
shll
shrb
jecxz
adc
insb
aam
in
adc
xor
mov
outsb
cwtl
aas
stos
fwait
dec
mov
pop
add
mov
nop
adc
sub
pushf
xchg
inc
jl
sub
ja
lods
inc
mov
jae
test
rolb
jbe
aam
loop
rolb
hlt
xorb
scas
cli
push
in
enter
and
icebp
or
sub
imul
pop
pop
jns
pop
push
mov
scas
mov
cwtl
leave
mov
aad
loope
loop
dec
rcl
aaa
inc
lcall
outsb
jg
lea
cmp
popl
repnz
mov
inc
loop
xchg
mov
in
dec
inc
enter
cmp
out
cmp
sub
jns
pop
nop
push
mov
push
test
imul
mov
in
cwtl
add
sbb
xchg
mov
jp
push
adc
cli
pcmpeqd
xchg
mov
mov
push
mov
outsb
inc
xchg
adcb
dec
pop
push
arpl
add
xor
scas
out
adc
test
nop
in
xchg
movsb
add
dec
push
mov
js
mov
xor
rclb
xor
mov
popa
int3
mov
cs
arpl
jbe
sbb
push
sbb
mov
scas
cmpsb
mov
in
mov
leave
lods
and
repz
lea
movsl
leave
mov
push
jmp
sbb
stos
int3
mov
aaa
cmp
js
xlat
mov
add
or
rorb
sub
popa
imul
and
sub
arpl
lods
scas
adc
pushf
ror
sbb
inc
mov
push
shlb
mov
shlb
int3
dec
lods
mov
jb
mov
mov
mov
lahf
xor
stos
jo
lret
add
in
jbe
xchg
int3
lret
repnz
jbe
repnz
stos
cmp
xor
pushf
xchg
xor
lea
in
sti
mov
pop
xor
in
lods
popa
out
lret
cli
stos
mov
cmpl
mulb
in
scas
lods
sbb
inc
lods
cmp
stos
cmp
mov
fwait
inc
xor
jo
test
pop
fidivs
imul
jmp
mov
test
xorl
pop
xchg
push
xor
repz
mov
arpl
xor
repnz
dec
dec
les
repnz
lcall
inc
or
out
shlb
dec
andb
mov
mov
aas
loope
cwtl
mov
pop
fcmovne
jno
mov
mov
js
xchg
xchg
lods
mov
les
jne
das
and
dec
cmp
jb
mov
test
decb
popl
xchg
push
call
mov
push
inc
xor
fs
stos
mov
test
jo
jns
dec
jb
add
mov
mov
iret
push
jo
std
lock
xchg
inc
mov
inc
push
cmp
push
mov
pop
inc
mov
stos
xchg
mov
aas
push
les
jbe
inc
xor
mov
mov
mov
les
fwait
push
jb
mov
shll
xor
push
cld
pusha
inc
pop
lret
jne
pop
enter
push
int3
cmp
fmull
push
cmp
call
out
jl
push
pandn
adc
mov
jno
js
leave
inc
dec
jl
lahf
xchg
cmpsb
jmp
add
jl
pop
faddl
mov
push
outsl
cmpsb
lret
inc
iret
popa
mov
jno
sub
fbld
cwtl
orb
mov
cmp
add
popa
jg
sbbb
test
into
bound
push
leave
mov
in
data16
add
cld
lea
fimull
das
jl
cmp
mov
pop
test
imul
mov
outsb
jo
mov
cmc
in
repz
repz
hlt
sub
push
mov
xor
xchg
aad
adc
je
pop
sahf
loope
js
scas
jl
mov
dec
jo
xchg
mov
popf
xor
dec
and
or
dec
shll
dec
outsb
xchg
mov
cwtl
dec
pushf
push
sub
jae
sbb
jecxz
imulb
mov
mov
and
add
jmp
or
imul
lret
daa
jne
icebp
rclb
lahf
mov
imul
iret
lods
pusha
subl
test
cwtl
daa
gs
shrb
mov
test
pop
mov
pushf
inc
rcrb
mov
xlat
sti
and
mov
repnz
movsb
test
mov
pop
sbb
xor
mov
fnstenv
adc
in
mov
mov
and
pushw
and
cld
addr16
imul
push
jecxz
je
into
inc
testb
push
push
mov
mov
xchg
addr16
scas
pop
movsl
xor
ds
insl
lcall
inc
pop
xchg
lahf
pop
push
loope
mov
or
in
in
sub
aad
sub
sub
cmp
sub
mov
outsl
pop
inc
xchg
cs
repnz
dec
mov
push
mov
ret
punpckhbw
subb
mov
mov
fstps
mov
and
leave
lcall
movsl
lods
test
mov
dec
push
insl
add
sub
lret
inc
loope
ja
add
mov
push
sarl
dec
dec
imul
inc
idivb
cld
nop
test
push
test
movsb
pop
dec
xor
mov
xor
addr16
jecxz
xor
mov
mov
cs
movsb
jb
xchg
pushf
jb
xchg
movsb
jb
xchg
lods
jo
aas
imul
std
nop
or
cwtl
cltd
out
ficoms
and
movsl
imul
shlb
js
dec
mov
loop
mov
arpl
mull
push
inc
mov
dec
movsb
rcrb
aam
inc
mov
inc
aaa
xchg
movsl
pushl
push
mov
mov
scas
rorb
or
push
test
mov
notl
js
mov
jo
insl
mov
inc
imul
popf
xchg
sbb
jne
fs
test
and
dec
hlt
sbb
pop
cmp
add
add
test
sub
dec
in
xor
rcll
push
push
mov
ja
iret
loope
jae
arpl
xor
aad
and
jmp
into
push
lcall
inc
addb
popa
mov
mov
sub
mov
mov
int
imul
nop
xor
movsl
inc
mov
xchg
mov
fs
sbb
in
gs
subb
imul
hlt
outsb
jl
out
popf
lahf
dec
test
mov
nop
adc
jo
cmc
outsl
popa
cmp
xor
mov
mov
fidivrs
push
and
stc
inc
pop
jmp
rorb
mov
or
ret
add
mov
mov
xlat
xchg
imul
cmp
jae
loop
mov
mov
bound
xlat
xlat
adc
cmp
pop
loopne
mov
fadd
sbb
outsb
mov
mov
rol
popf
and
shlb
xchg
push
cmp
sub
push
pop
mov
aas
or
negl
sub
test
cmp
mov
iret
ror
push
mov
pop
mov
test
enter
pop
xchg
sub
int3
lret
cmp
mov
sbb
test
test
jecxz
fs
nop
pop
cmpsb
sbb
and
int3
mov
push
pop
dec
test
pop
sub
aam
shlb
mov
scas
mov
pop
sub
inc
mov
mov
movsl
pop
mov
push
xor
mov
fstpl
mov
shl
mov
ljmp
mov
inc
test
clc
aam
shll
test
mov
xor
fdivs
pop
loopne
lcall
movsb
mov
lods
sbb
fdivp
xor
xchg
movsb
dec
xchg
lahf
mov
xchg
cmpsl
mov
rorl
cmpsb
sub
lock
pop
push
call
push
fidivrs
mov
popf
pusha
xchg
jnp
call
jae
push
testl
xchg
aas
inc
mov
cmp
outsl
cmp
nop
jl
mov
inc
lahf
pop
sub
inc
sbb
scas
popa
shlb
cwtl
and
add
roll
call
xchg
mov
sbb
dec
pop
pusha
ljmp
nop
inc
pop
int3
xor
jecxz
pop
pushf
push
fldenv
xchg
cwtl
test
pop
mov
loopne
mov
pop
jb
stos
fnstcw
cmp
in
jecxz
filds
test
mov
push
push
or
lret
in
mov
ja
mov
add
out
cmp
decl
cs
push
add
xor
into
adc
sahf
cmp
lods
mov
popa
pop
and
xchg
push
out
fidivs
xchg
pop
mov
pop
jp
sbb
scas
daa
scas
dec
stos
and
enter
stos
mov
movsb
mov
dec
rcrb
aaa
jecxz
out
mov
out
leave
mov
repnz
jo
popf
daa
jae
in
enter
aaa
xor
movsb
xchg
and
in
cmp
sbb
cs
enter
mov
fs
mov
ljmp
sbb
mov
cmp
in
in
popa
jb
jecxz
mov
cwtl
int3
bound
out
jg
inc
add
movsl
jg
hlt
and
ljmp
test
in
push
mov
nop
mov
ss
xchg
mov
xor
fcompl
mov
aad
pop
leave
insb
hlt
in
jl
aas
xchg
cmp
scas
xchg
mov
into
iret
arpl
cmp
mov
aam
mov
movsb
cld
and
push
sti
adc
inc
push
repz
mov
addl
test
sbb
pusha
cld
in
xchg
adc
pop
cmp
imulb
faddl
ja
int3
lea
leave
shlb
shrb
je
mov
xorb
mov
addr16
inc
mov
cmpsl
pop
imul
mov
aad
faddl
adc
test
and
je
jmp
fwait
leave
bound
xchg
xchg
in
pop
push
add
inc
leave
les
fwait
lods
lahf
cmp
gs
insb
fs
scas
je
pusha
leave
lods
dec
arpl
lock
sbb
sti
cmp
adcb
cmp
sbbb
int
dec
scas
xchg
in
imul
sub
and
mov
lcall
mov
nop
xlat
dec
adc
mov
daa
aas
jl
sahf
inc
mov
lods
outsb
int3
add
push
push
jg
mov
sub
nop
sub
mov
cmpsl
mov
adc
out
cmc
scas
ja
sub
test
push
mov
mov
mov
mov
aam
cmpsb
pop
popa
jbe
xor
sbb
pop
mov
jno
pop
loope
gs
jge
cmp
shll
pop
lcall
pop
test
dec
cmc
mov
sahf
leave
lcall
lcall
imul
in
mov
fs
sub
xchg
mov
movsb
and
push
dec
les
mov
int3
scas
jmp
insl
jp
dec
jmp
cwtl
shrb
rcrl
sbb
ror
je
pop
popa
jl
sahf
sub
subb
jmp
scas
dec
and
mov
rcrb
cld
or
sbb
mov
rcrb
jae
fwait
je
pop
jle
test
sbb
out
cmp
push
decl
les
inc
and
push
sub
lea
lock
mov
rclb
xor
cld
fbstp
sahf
fs
jb
dec
test
sub
shrb
add
push
ss
xor
lods
ret
test
fistl
or
imul
hlt
int3
shlb
push
add
icebp
imul
dec
sbb
ja
and
xchg
cmp
ret
cmp
pushf
push
mov
popa
mov
mov
inc
mov
xchg
ja
leave
scas
mov
push
rcrb
jmp
out
psubusb
stos
push
scas
sti
movsb
jae
ds
mov
fistps
arpl
ret
pop
movsb
insb
cld
call
ret
pusha
mov
inc
push
add
in
test
aas
fs
jne
adc
fs
insb
and
mov
cmpsl
xor
mov
jne
sub
lret
jae
bound
pop
call
outsb
cwtl
sub
push
scas
stos
pop
cld
shrl
jne
ficomps
mov
xchg
jp
mov
fs
stc
mov
pop
sub
insb
movsl
fdivr
sbb
xchg
aad
in
dec
lods
mov
fcmovne
outsl
xor
pop
jns
xchg
dec
mov
iret
aas
cmpsb
mov
lods
add
pusha
adc
xlat
sub
test
mov
push
xor
imul
dec
sub
leave
scas
fstpt
or
ljmp
nop
inc
repnz
sbb
mov
sub
or
js
mov
lods
jnp
loopne
mov
mov
hlt
pushf
dec
sub
mov
dec
repnz
or
mov
mov
arpl
cmc
xorl
jp
cmp
cmp
jp
mov
mov
mov
hlt
nop
les
out
movsl
sub
mov
fbstp
jge
mov
mov
shll
mov
test
cmpsb
imul
imul
jmp
push
mov
or
cmp
clc
int3
xchg
scas
push
cwtl
sub
add
daa
insb
xchg
mov
sbb
sbb
negl
fsubr
adc
dec
lods
clc
scas
xor
popa
les
dec
xor
lock
mov
xchg
test
fsubs
test
jno
inc
pop
inc
mov
jp
fmul
fidivrs
loopne
insb
loopne
mov
sub
mov
lea
lret
pop
mov
pop
insl
ja
mov
stos
cwtl
int3
push
mov
xchg
inc
pop
cwtl
xchg
sub
stos
lock
int3
dec
popa
mov
std
mov
stos
imul
xchg
cwtl
movsl
and
shrl
or
xchg
cwtl
imull
rorb
xor
sbb
mov
sub
jbe
in
idiv
stos
shr
outsl
xor
arpl
or
gs
add
pop
fs
leave
jns
pop
das
jno
pop
dec
xchg
inc
in
and
into
xchg
sub
aam
mov
lds
je
push
push
xchg
leave
push
in
pop
add
xchg
mov
repnz
inc
pop
leave
cmp
pop
popa
lods
inc
cmp
and
pushf
mov
arpl
idiv
lretw
lcall
insb
in
pushl
sub
clc
nop
imul
arpl
and
ss
and
pop
std
mov
test
test
loope
test
mov
xor
pop
push
imul
movsb
mov
pop
std
in
stos
jmp
jo
scas
call
es
pop
sub
push
mov
mov
xor
mov
mov
mov
insb
xor
xchg
loop
xchg
mov
scas
clc
rcrl
cmp
bound
clc
mov
mov
repnz
or
cmp
outsb
jnp
jp
rorl
push
stos
loopne
pop
or
sbb
shlb
mov
push
jle
andb
mov
pop
mov
rcrl
dec
xchg
or
xor
mov
leave
and
ror
mov
sbb
sbb
add
xchg
mov
dec
adc
lods
ja
imulb
bound
insl
or
push
pop
push
mov
push
xor
test
xor
andb
repz
lods
sub
sbb
mov
imul
jae
add
jge
adc
add
pop
sbb
add
add
jb
xlat
dec
jle
mov
push
movsb
dec
movsb
stos
js
mov
popf
hlt
and
les
out
aam
popl
loopne
in
leave
and
xlat
clc
pop
fsubp
clc
or
and
and
mov
push
out
dec
int3
adc
xor
mov
adcb
and
scas
adc
xchg
pushf
int3
test
sbb
scas
xor
scas
lods
or
and
insb
gs
addr16
jmp
push
cbtw
cmp
fs
xchg
cmpsb
fsubl
popf
xchg
or
stos
ja
mov
mov
ret
pop
xchg
adc
cmc
cmp
lret
or
cmp
fnstsw
cltd
adcb
pop
cmpsb
jo
and
ljmp
jnp
cs
inc
pop
xchg
pusha
mov
stc
adc
xor
add
call
mov
add
lahf
dec
lret
cmp
xor
sbb
pushf
imul
in
lea
dec
pop
ds
paddusb
leave
scas
pop
cld
out
jl
pop
add
call
call
pop
mov
mov
sub
out
sub
xchg
test
int3
sbb
inc
mov
mov
rolb
leave
or
lahf
cmp
dec
inc
ja
mulb
pop
test
int
int3
movsl
sub
xchg
mov
movsb
cli
cld
xor
leave
loop
push
push
fidivs
mov
arpl
pop
call
nop
or
push
adc
aam
cmpsb
jnp
jb
js
cld
dec
lahf
lock
inc
lea
dec
test
dec
fs
sbb
jne
lea
inc
insl
orl
lods
aas
gs
jo
mov
fmul
sub
addr16
ret
stos
lahf
or
xor
ret
xchg
loopne
sbb
cld
icebp
pop
int3
pop
push
int3
stos
loope
or
js
mov
cmp
inc
jns
sbb
clc
mov
shrb
sub
movsb
jl
cmp
std
xor
mov
sbb
cmc
cmp
inc
mov
int3
jg
cmp
mov
mov
mov
stos
jnp
cmpsl
test
imul
mov
shlb
dec
imul
fisttps
mov
test
js
pushf
pop
jg
test
pop
inc
sub
lret
dec
je
leave
push
ja
insb
call
lods
leave
ficomps
pmaddwd
pop
or
imul
ja
jns
loope
xchg
out
xor
xchg
sar
out
dec
fwait
inc
lds
test
xor
jge
aas
mov
pop
nop
pop
dec
loop
mov
insb
pop
inc
lods
adc
adc
mov
repnz
orb
push
test
xlat
lcall
mov
pop
dec
cmp
movsl
add
into
inc
movsb
out
mov
xchg
dec
outsb
fdivs
aas
mov
xchg
mov
mov
pop
mov
arpl
pop
cmpsl
mov
fbld
mov
testl
sub
xchg
pop
push
xchg
fs
and
inc
mov
cmp
stos
or
clc
rolb
cltd
push
or
bound
sub
outsl
test
jecxz
mov
sbb
test
jg
fcompl
mov
shl
cwtl
cmc
sub
ss
and
ja
sbbl
dec
stos
jnp
int
mov
stos
js
adc
inc
sub
les
leave
imul
out
cmp
push
lcall
jns
arpl
jnp
push
pop
not
std
or
pushf
shlb
fwait
lods
inc
fisttpl
rol
test
mov
xor
mov
int3
and
add
cwtl
hlt
shlb
dec
sahf
add
jno
xchg
fs
dec
xlat
xchg
shlb
jmp
push
loope
or
rcrl
and
fisttpl
mov
mov
or
dec
std
jecxz
add
popf
jnp
in
adcb
add
outsb
pop
push
mov
pop
subl
je
push
pop
adc
and
push
cmpsl
movsb
pop
or
ds
jp
sub
and
lahf
add
pop
retw
or
outsl
dec
xor
push
loope
lcall
nop
xchg
mov
shrl
lock
std
lods
mul
fistpl
sbb
push
imul
pusha
pop
push
aaa
enter
mov
sub
int3
xchg
jbe
lods
jmp
jbe
imul
pop
ds
leave
cld
inc
mov
stos
dec
lods
ret
mov
test
jmp
call
movq
clc
mov
bound
lret
hlt
stc
xchg
or
xlat
mov
jg
push
rorl
mov
dec
xor
leave
jl
mov
adc
iret
fistpl
push
sub
pop
vandps
adcb
sbb
movsl
das
sub
loope
fwait
dec
les
bound
lods
xchg
dec
adc
mov
jp
sbb
jl
addr16
arpl
pop
les
sub
add
fisubs
stos
int3
mov
hlt
dec
loope
adc
fstl
jg
arpl
leave
xchg
pop
xchg
sbb
enter
popa
adc
jae
lods
fidivl
vphaddwq
mov
repz
fdivrl
repnz
mov
lahf
cld
pop
loopne
inc
mov
outsl
call
les
movsl
jecxz
mov
dec
jns
aam
or
aas
jge
mov
push
jb
fst
loop
and
es
cs
enter
leave
movsb
mov
ss
lock
fmuls
out
lahf
push
arpl
out
subb
xor
out
jnp
mov
inc
jg
notb
add
push
jmp
jl
lea
fldt
jns
lods
dec
fs
xlat
inc
pushf
jne
xchg
mov
pop
jmp
scas
repnz
ljmp
mov
rcrl
into
push
add
xlat
cmpsb
mov
loope
jo
outsb
rcrl
cwtl
scas
stos
push
or
mov
xchg
mov
cld
xor
aas
jl
lcall
pushf
mov
xor
mov
outsb
in
xlat
cli
adc
dec
cltd
leave
mov
scas
test
pop
aas
fwait
repnz
leave
dec
lea
fstl
imul
mov
andl
mov
dec
push
push
sbb
int3
stos
adc
mov
cmc
xchg
outsb
jb
or
inc
cmp
cmpsb
pop
mov
stos
mov
cmp
scas
xchg
xchg
pop
stc
push
sahf
or
mov
and
pop
icebp
pushf
adc
fcoms
scas
outsb
pop
mov
mov
loopne
jbe
xor
je
xor
pop
ret
xchg
adc
inc
xor
out
test
inc
cmpl
int3
outsb
out
dec
mov
pop
rorb
popl
lretw
leave
jno
xchg
nop
jne
incb
mov
pop
dec
xchg
mov
loope
testl
mov
fs
mov
ss
sub
sbb
sub
dec
bound
outsl
dec
or
movsb
pushf
test
aas
pop
sub
daa
pop
ds
dec
js
pusha
cwtl
jo
adc
mov
dec
mov
adc
lret
movsl
popa
push
mov
pop
es
mov
nop
int
mov
bound
aam
lock
cmp
dec
mov
daa
lds
jo
cmc
push
mov
adc
cmpsb
push
test
push
adc
pop
adc
jl
xchg
test
pop
mov
cltd
pop
int3
in
int
ja
rcrb
sub
shll
sbb
mov
fnstenv
dec
imul
test
shll
and
aas
lea
les
push
mov
cmp
cmp
sub
mov
cwtl
lcall
test
pop
stos
or
pop
outsb
outsl
mov
pushf
mov
imul
leave
orb
fs
sub
pop
loop
lock
pop
pop
les
mov
fcoms
rol
xchg
mov
stos
popf
sub
in
jmp
jmp
les
sub
fsubr
mov
mov
push
dec
cmp
sub
xchg
push
lods
std
mov
mov
xchg
jns
aaa
bound
xchg
aas
pop
and
xchg
mov
mov
xchg
sbb
fwait
js
add
mov
mov
lea
push
out
pusha
lret
xchg
pop
test
shlb
sub
les
lods
test
insl
je
mov
xchg
movsb
dec
jae
bnd
inc
popf
lea
repnz
cmp
ficoml
jo
movsl
mov
mov
fwait
mov
mov
jb
mov
stc
repz
push
adc
inc
cmc
jo
aaa
sub
xchg
je
or
push
movsb
xchg
xchg
mov
and
xor
inc
es
je
in
aaa
mov
icebp
pusha
popa
je
jae
lcall
xchg
adc
scas
dec
push
mov
cli
sub
stos
mov
dec
test
jns
xor
dec
xchg
stc
adcb
push
orb
jo
push
out
push
push
ja
mov
fisubl
mov
movsl
mov
ds
jecxz
movsb
fildl
sbb
jnp
push
jnp
xchg
push
jp
xor
stos
mov
mov
aas
stc
mov
xchg
mov
pop
cwtl
push
test
lea
xor
daa
xor
hlt
mov
mov
mov
subb
fdivr
dec
pusha
cli
jo
jae
mov
push
fwait
lahf
jnp
xchg
mov
adc
outsl
popf
sub
inc
or
popf
mov
movsl
cmp
pop
mov
dec
jecxz
in
stc
lea
dec
jns
ljmp
data16
aad
mov
mov
test
pop
aam
in
sbb
adcl
adc
pop
int3
out
in
movb
nop
leave
cmpsl
clc
lret
adc
jp
into
test
popa
les
gs
icebp
adc
inc
add
call
xchg
popl
call
loope
pusha
lea
andb
sub
jo
nop
xchg
xchg
mov
and
rclb
into
loop
mov
xor
dec
add
xor
sub
stos
insb
lea
sbb
rorl
xchg
jecxz
or
decb
nop
jns
movsb
pop
jae
mov
sub
in
leave
jo
nop
push
sbb
and
adc
loop
sbb
js
xchg
pop
mov
cs
fbld
stos
loop
cmp
pushf
daa
jmp
das
inc
bound
fcoml
and
xor
or
or
mov
push
sub
les
jae
xorb
adc
mov
inc
repz
or
mov
jmp
pop
out
and
ds
push
cmpsl
aas
sahf
pop
sti
xchg
arpl
xor
xchg
mov
sbb
insb
nop
or
stos
jnp
sarl
push
push
sub
addb
cld
adc
mov
enter
adc
ss
std
jbe
filds
adc
adc
xchg
mov
mov
popf
fs
xchg
sub
into
sahf
pusha
xchg
aad
jecxz
and
jb
std
pop
inc
mov
sub
jmp
and
outsb
cmp
sub
xchg
add
repnz
jle
popf
mov
cmp
sahf
arpl
or
movsl
imul
jo
cli
adcb
bound
mov
pop
daa
xchg
mov
fs
mov
fwait
jmp
and
mov
int3
arpl
sub
cwtl
cmc
push
aaa
dec
adcb
or
cmp
xor
jmp
ds
xor
lock
add
popf
inc
arpl
xchg
fadd
sub
outsb
xor
mov
mov
mov
shll
scas
dec
mov
mov
mov
push
lea
sub
cmp
xor
in
mov
jp
xor
loop
push
sbb
mov
jo
cmp
xor
repnz
mov
pop
mov
mov
divl
into
scas
push
push
mov
fs
push
jbe
in
xor
mov
dec
inc
pop
xor
aas
cmpsb
push
mov
and
cmc
pop
dec
and
stos
adc
jne
insl
aas
test
inc
dec
xchg
fcomps
jmp
fwait
leave
lahf
mov
and
hlt
jb,pn
orb
adc
stos
test
push
pop
mov
push
or
mov
jae
stc
push
sbb
pusha
outsb
imul
pushf
data16
fwait
jbe
bound
mov
sbb
and
xchg
mov
ror
cmp
mov
std
outsb
push
dec
push
and
movsl
sbb
push
fcompl
nopl
jbe
in
xchg
mov
mov
xlat
sahf
mov
les
js
mov
add
int3
or
xchg
cmp
testl
jne
scas
mov
fwait
fs
jb
push
jb
sub
mov
mov
push
imul
push
testb
push
cmpl
repz
mov
and
lods
and
test
movsb
pushf
mov
push
adc
jecxz
lock
andb
mov
sub
jle
jp
pop
inc
cmp
jnp
or
aam
mov
mov
ja
popa
in
stos
mov
jbe
sahf
xchg
dec
cmp
sub
cmpl
inc
mov
shlb
pop
mov
fistpl
sub
in
mov
push
mov
test
xchg
mov
dec
stos
clc
mov
push
fwait
jbe
xchg
and
mov
push
pushf
jp
jno
test
cmpsb
dec
pop
xchg
mov
jnp
pop
das
icebp
add
mov
push
cmc
fists
or
je
mov
push
xchg
xchg
int3
xchg
cmp
into
mov
jo
xor
mov
pop
cvtps2pi
in
jno
mov
mov
aam
pop
shrb
imul
sub
js
cmp
lea
and
inc
lcall
xchg
dec
mov
test
mov
cli
adcl
sub
sub
mov
aas
roll
jbe
mov
dec
call
mov
sahf
aas
scas
stc
mov
cld
push
and
sbb
popw
add
pop
scas
std
sbb
or
or
or
dec
int
insb
push
push
mov
adc
int3
and
dec
ja
push
sbb
adc
icebp
int3
cmp
xchg
scas
jno
xchg
adc
inc
cmp
push
mov
rcrb
inc
int3
stc
sub
adc
inc
shrl
fsubl
aam
xchg
xchg
aaa
inc
pop
gs
imull
scas
pushf
cmc
outsb
outsl
jo
mov
jecxz
sahf
cmp
add
ret
fistpll
mov
out
scas
cli
or
sub
adc
add
ss
mov
xlat
insl
adc
cmp
scas
out
es
lret
dec
mov
imul
xchg
arpl
loopne
pop
lret
jnp
mov
push
mulb
fs
push
in
outsb
sbb
insb
and
subb
sub
test
pusha
mov
push
loope
inc
ffree
jmp
inc
call
ret
pushf
mov
add
xor
jb
ss
inc
jg
stos
movsb
aas
test
xchg
dec
lods
mov
test
cmpsb
jg
lods
jo
pop
dec
or
jb
sub
or
std
jp
jno
fdivs
cmc
insl
mov
jo
call
test
mov
dec
dec
fs
outsb
repnz
mov
xor
xchg
or
pop
mov
push
bound
insb
push
sbb
dec
xor
shrl
mov
cmp
cmp
xor
sub
sahf
int3
bound
loop
imul
dec
or
mov
arpl
mov
xor
movsb
jecxz
call
mov
adc
in
jnp
test
sub
arpl
jns
es
es
cwtl
push
imul
mov
mov
push
test
cmpsb
mov
xchg
enter
jmp
xor
xor
nop
jo
stc
fidivrl
pop
shll
clc
lods
mov
daa
inc
test
mov
orl
loopne
cmpsl
mov
xchg
bound
cmpsl
mov
fcmovnu
dec
pusha
xchg
pop
dec
lea
push
lahf
int3
ficoms
mov
in
push
subb
mov
int3
mov
lea
mov
push
xor
sub
xor
movsl
mov
out
mov
and
sub
cmp
jnp
pop
xlat
stos
imul
inc
push
inc
fs
inc
xchg
pushf
sub
mov
jae
js
push
call
add
pop
movsl
test
cwtl
stc
push
xor
mov
pop
sbb
out
adc
cmp
xchg
pusha
mov
push
pop
popa
add
in
mov
loope
aam
lcall
adc
dec
jbe
pop
je
out
adc
jns
shll
push
imul
rolb
sub
sub
lods
sub
aaa
mov
push
out
lods
xchg
cmp
frstor
std
roll
cmp
mov
cs
mov
ss
sub
sub
leave
and
sub
jnp
lret
cwtl
stos
scas
and
gs
xorb
and
movsl
sbb
in
push
sbb
push
dec
rorb
adc
pop
mov
pop
ret
loopne
cmpsb
popf
pop
xorl
aas
inc
jge
push
ror
orb
xor
pop
js
and
lcall
shlb
dec
mov
mov
sbbb
ret
xor
lahf
mov
add
jmp
xchg
ss
stc
int3
lahf
sbbb
jnp
and
scas
in
call
aas
scas
loop
shr
out
mov
lods
cmp
adc
andl
mov
dec
mov
into
jmp
jmp
aaa
adc
xor
popf
das
aas
int3
fldl2t
cmpsb
push
cmp
mov
leave
xchg
push
jl
fdivl
pop
mov
xchg
shlb
push
stc
push
ss
xor
xor
lock
mov
out
jg
and
cmp
pop
xchg
xor
sub
imul
addr16
rolb
aas
je
stos
xchg
mov
lret
dec
out
pop
xchg
sub
fmuls
mov
lods
jo
push
fs
jne
mov
imul
lea
lcall
ss
mov
fwait
cmp
adc
inc
pop
sbb
iret
xchg
stos
xor
jae
xorl
jmp
lcall
movsb
jp
hlt
mov
lock
push
push
xchg
icebp
loopne
pop
xchg
inc
cmp
pop
outsb
sbb
push
cs
cmp
mov
clc
out
shrb
aam
test
daa
movsl
pop
hlt
rorl
pop
fsubrs
les
cltd
ret
aam
fs
xchg
jae
adc
xchg
je
sbb
test
sbb
push
test
out
xchg
push
stc
push
out
enter
je
daa
ss
test
sub
and
popf
xor
and
mov
out
aas
cmpsb
jae
dec
pop
jp
in
pop
icebp
cld
push
jo
mov
mov
call
mov
mov
lods
mov
adc
sub
scas
fcompl
and
jecxz
sub
cld
sti
daa
filds
sub
inc
das
movb
jo
ja
pushl
daa
push
imul
add
mov
popf
jns
cmpsb
aaa
movsb
movsb
mov
pop
sbb
cld
js
ror
mov
out
popf
loopne
add
push
repnz
adc
testl
sub
sti
cmp
outsb
push
insl
push
pop
push
adc
cmpsl
dec
scas
les
subl
cli
ret
mov
or
sub
lods
sbb
dec
pop
and
or
rorb
pop
sbbl
ret
shll
pop
dec
mov
les
call
adc
mov
jg
mov
outsl
xor
jne
adc
cmpsl
xchg
mov
or
dec
adc
sbb
mov
mov
hlt
push
inc
mov
sti
test
movsl
sub
push
or
fwait
jbe
push
repnz
cmp
pushf
out
sti
imul
sbb
mov
mov
add
push
test
inc
xchg
ret
repz
int
pop
lahf
dec
cmpsb
das
push
inc
and
leave
ss
test
xchg
lods
scas
mov
xchg
xchg
pushf
pop
gs
fs
cmpsb
leave
test
xor
call
je
and
leave
insl
insl
lods
outsb
jno
scas
dec
cmp
mov
clc
xlat
jnp
sub
cmp
fsub
negb
lds
push
lcall
cmpsb
push
shll
scas
mov
pop
mov
cmp
push
aas
std
xchg
sarb
dec
fs
mov
inc
sti
xchg
scas
leave
in
int3
cmpsl
int3
icebp
call
cs
dec
adc
scas
xchg
xchg
fs
cmp
lcall
jl
in
xchg
cmp
stos
xchg
lret
lods
test
addb
adc
dec
test
push
sub
pop
rcll
xchg
subb
adc
mov
cmpsl
push
cmpsl
mov
xchg
aas
mov
inc
mov
mov
push
sub
and
lret
test
jo
lea
mov
xorb
sbbb
outsb
movsb
je
fbld
lods
mov
jl
jge
add
sbb
in
jl
test
dec
cltd
gs
int3
gs
and
lahf
dec
enter
lret
pop
fldl
adc
xchg
cld
call
bnd
aaa
or
mov
and
shll
mov
inc
outsl
adcl
cltd
mov
mov
push
lods
das
jb
clc
inc
das
shlb
lahf
jmp
add
xchg
add
jp
pusha
dec
xorb
and
mov
enter
leave
add
mov
ds
ds
mov
mov
es
sub
ss
sbb
jae
fs
jbe
cld
aad
mov
aaa
xlat
lahf
add
fisubl
jnp
sub
adc
je
jnp
pop
rcll
cmpsl
sahf
lahf
mov
xchg
scas
mov
mov
mov
mov
test
push
sbb
sbb
out
mov
dec
cld
addb
shll
test
mov
in
in
imul
lods
pushf
repz
add
adcl
cltd
cmp
jl
shll
test
push
pop
fwait
lcall
loop
int3
jbe
pop
inc
imul
das
loope
adc
push
outsb
mov
ds
push
sahf
pop
xchg
ljmp
incb
mov
lock
dec
xor
imul
push
pop
movsl
pop
jns
sbb
push
inc
lock
pop
mov
mov
dec
sbb
call
repnz
cmp
xchg
mov
cld
call
leave
push
andb
or
add
pop
ret
jo
mov
mov
or
or
pop
mov
jg
loope
pop
fs
sahf
pop
ljmp
rcrb
cmpsl
pop
movsl
or
je
js
mov
in
xor
jo
aas
in
cmp
push
repnz
adc
jp
js
xchg
in
jns
lret
xchg
pusha
push
stos
aas
scas
xor
lcall
fstps
adc
subl
and
icebp
xlat
ds
push
fsubl
jge
adc
push
repnz
std
mov
jle
pushf
test
ljmp
loopne
xchg
gs
mov
repz
xchg
pop
popa
pop
mov
mov
xchg
mov
push
ret
adc
faddp
or
andb
jae
jns
nop
popf
stos
xchg
scas
loopne
push
leave
movsb
xor
sbb
imul
ret
xor
hlt
je
dec
out
mov
enter
pop
lcall
mov
int3
mov
mov
aam
add
xor
int3
pop
sahf
jle
clc
mov
mov
sbb
push
enter
rclb
cwtl
xor
xor
cs
stos
sbb
dec
mov
mov
sti
xchg
mov
bound
xchg
push
repnz
mov
shrb
movsl
aas
mov
inc
cmp
mov
out
sahf
pop
cmp
and
xchg
mov
xchg
test
mov
out
clc
shl
mov
daa
js
adc
jle
xor
jo
mov
decb
xchg
imul
lock
ds
or
arpl
into
je
out
mov
aas
xchg
push
mov
jo
data16
movsl
xchg
lods
std
sub
push
adc
ss
fisubl
mov
outsb
jae
or
dec
out
jne
xor
andb
sub
and
xchg
mov
push
subb
test
mov
shll
or
fildl
add
pop
in
pop
fs
dec
das
mov
sub
mov
scas
lds
jmp
je
ja
dec
outsb
mov
lods
ljmp
mov
xchg
mov
je
mov
into
mov
outsb
jecxz
jnp
mov
imul
call
sub
ds
cld
in
push
repz
mov
popa
push
arpl
mov
pop
jnp
fwait
inc
cmpsb
cmpb
cli
insb
stc
cmp
push
lods
fwait
mov
cmp
push
or
dec
lods
dec
int
pushf
xchg
data16
ds
je
mov
popa
mov
int3
rcrl
dec
sbb
pop
int3
mov
insb
mov
out
arpl
lock
std
push
xorb
imul
jge
xchg
das
popf
push
lret
je
pop
cmp
mov
cmc
inc
aad
out
lret
sbb
cmp
lods
inc
xchg
mulb
arpl
dec
xchg
jnp
mov
aaa
fsubs
enter
test
mov
mov
mov
insb
xor
mov
sub
push
dec
rol
je
push
dec
fsubrp
aam
jmp
inc
je
push
dec
popa
scas
ret
dec
movsl
mov
mov
mov
movsb
adcb
mov
jl
sub
subl
jo
test
adc
gs
dec
mov
mov
aad
nop
jb
lods
push
repnz
xchg
popl
mov
dec
pop
movsb
inc
repz
out
pushf
movsb
lds
outsl
adc
and
pop
pop
sbb
sub
cld
adc
mov
mov
cwtl
fs
sbb
cmp
insb
and
int
nop
shrb
outsb
shl
pop
inc
cld
mov
push
add
sbb
xor
ret
shrb
xchg
xor
add
popf
andb
cld
jo
scas
lret
std
inc
push
lods
insb
and
xchg
and
into
push
pop
lods
sti
mov
mov
sub
or
fldenv
iret
fs
shr
sub
fstl
xchg
gs
sarl
sub
inc
xchg
call
pop
xor
xchg
or
cmc
andl
sahf
pop
pop
jmp
fnsave
in
sbb
mov
push
stos
adc
add
call
mov
inc
repnz
jns
dec
sahf
add
mov
pusha
pop
push
jl
subb
jno
fs
jns
movsl
lret
and
sahf
jo
pop
das
dec
cmp
daa
insl
xchg
jg
imul
cld
gs
iret
mov
or
inc
cwtl
push
pushf
mov
and
jnp
mov
xchg
je
fstpt
add
loopne
and
add
mov
test
sub
push
incb
xlat
clc
test
cmpsl
pop
pop
xchg
ret
jmp
mov
push
sarb
js
xchg
mov
bound
push
mov
jecxz
imul
fisubs
les
xor
pop
xchg
cmp
das
jbe
fs
ss
cmp
jb
stos
cmp
adc
xchg
sub
mov
push
jp
push
test
jecxz
clc
add
loope,pn
xor
pop
xor
test
out
sahf
jnp
lret
iret
mov
stc
mov
rcll
dec
shlb
xchg
mov
loop
loope
cwtl
sbb
daa
push
mov
inc
cld
mov
mov
faddl
sahf
test
ficoms
adc
sub
jecxz
cltd
pop
test
mov
in
xor
sub
inc
stos
xor
xchg
push
popf
lahf
dec
popa
imul
lods
cmpsl
pop
adc
jl
nop
pop
je
les
inc
lahf
fisttps
scas
ja
xor
lea
xchg
cmp
push
xchg
cmp
bound
arpl
jl
jb
sub
mov
push
stos
dec
movsb
std
adc
loopne
mov
in
test
mov
outsb
lods
push
mov
hlt
in
scas
jnp
mov
mov
fidivrl
idivl
push
mov
mov
pop
loope
imul
out
dec
xchg
inc
adc
push
insb
inc
xchg
int3
rolb
adc
lds
push
jne
mov
add
jb
cmpsb
cmp
jl
jle
xchg
mov
pushl
and
and
pop
mov
arpl
dec
jno
sub
inc
xchg
sbb
daa
data16
mov
inc
mov
push
cmp
jb
movsb
mov
mov
mov
out
push
mov
loop
ret
cld
loop
insl
add
xchg
jmp
int
sbb
pusha
in
and
mov
xor
cltd
das
xor
shlb
jbe
fldcw
pop
ss
fnstcw
jp
repz
push
mov
rol
xor
pop
sub
test
ret
or
nop
les
pop
lods
pop
pop
scas
jne
lods
fs
pusha
outsb
lods
xchg
jl
lahf
in
push
mov
mov
int
mov
subl
cmp
adc
shlb
jns
aaa
cmpsl
lods
mov
repnz
add
test
xor
aaa
sahf
int3
push
lea
jo
dec
sbb
sbb
xchg
xchg
lret
jg
or
xchg
lods
mov
ds
rorw
or
push
gs
nop
stos
mov
ss
scas
movsl
out
xchg
leave
jle
pushf
mov
adc
aaa
mov
arpl
arpl
fldcw
std
push
das
lret
aad
pop
fstl
mov
jle
dec
ja
jb
das
mov
movsl
add
mov
int
and
data16
addr16
setae
lock
add
mov
xor
and
xor
insb
xlat
add
push
dec
cmp
cmpsl
ror
and
and
es
or
mov
movsb
adc
mov
push
test
scas
mov
testl
pushf
das
adc
and
mov
lods
push
loop
xchg
push
or
mov
xor
vmread
je
lret
or
pushf
dec
mov
xchg
test
je
jns
cmp
lods
test
jl
loop
lret
jb
or
jnp
cli
and
dec
mov
sarb
in
insb
mov
out
pop
adc
sub
ss
dec
aaa
movsb
xor
xor
mov
mov
push
cld
aad
fdiv
or
or
xchg
mov
mov
mov
and
es
fwait
mov
mov
orl
inc
adc
xor
pop
inc
sti
cmp
sub
data16
out
dec
cwtl
movsb
mov
xchg
push
push
decb
mov
dec
dec
mov
xor
lcall
mov
xor
aad
xor
mov
push
mov
inc
call
lret
ret
push
sub
mov
insb
mov
les
pop
fdivrp
pop
es
fsubrl
sbb
mov
scas
push
cmp
mov
das
inc
pop
push
or
outsl
stos
xor
mov
ret
mov
xor
insl
push
rcll
cmp
mov
jns
inc
fcoms
mov
nop
cmp
inc
lcall
and
mov
bound
jmp
in
loope
sub
mov
xchg
jne
pop
jns
aas
push
addr16
mov
push
inc
cli
push
leave
nop
stos
cmp
stos
cmpsb
pop
fwait
mov
add
leave
nop
sub
outsl
popa
cmpsb
mov
sti
xchg
pop
mov
iret
pop
adcb
aas
mov
cmp
pushf
es
fdivrl
jnp
inc
pop
mov
xor
mov
negl
test
out
aas
mov
jg
xchg
fs
hlt
fwait
mov
jl
in
mov
cmp
mov
jp
push
and
push
and
push
mov
js
bound
cmpsl
mov
adc
aas
pop
push
push
jo
aaa
cld
test
scas
out
sub
repnz
int
rclb
dec
mov
in
jmp
mov
jmp
imul
xchg
dec
xor
repnz
aad
imul
inc
mov
arpl
leave
je
mov
mov
xchg
ficompl
or
push
mov
cmc
or
test
sub
test
push
mov
lods
in
int3
mov
jb
arpl
jle
push
loope
sub
push
daa
outsl
mov
ret
or
adc
lock
scas
adc
leave
cmpsb
pop
mov
pop
inc
push
mov
push
sti
stos
adc
sub
rcrb
pop
stos
push
xor
inc
cmp
xchg
lods
nop
shrb
push
call
int
sub
sub
and
fdivl
mov
add
pop
cwtl
lea
mov
add
push
or
aam
dec
incb
jae
aam
xchg
adc
xchg
add
fs
inc
mov
dec
pushf
or
mov
sbb
cmp
aas
dec
ja
aam
mov
loope
pop
xchg
mov
xchg
sub
sub
sub
pop
imul
bound
push
sbb
dec
ret
jb
push
xor
pop
leave
std
xchg
out
mov
data16
sbb
sub
jns
cmp
xor
xchg
in
adc
push
popf
mov
in
inc
test
imul
push
jnp
stos
push
jg
mov
pop
push
aas
jnp
push
jg
push
or
pop
xor
add
or
and
arpl
int3
dec
cmp
roll
or
adc
inc
movsl
mov
popa
mov
sarb
loop
pop
repnz
push
insl
pop
mov
decb
dec
test
cmp
aas
ja
push
call
ret
incb
popf
ja
cld
xchg
jle
cmp
pop
adc
daa
xchg
and
int3
lcall
pop
hlt
sbb
adc
std
and
sarl
mov
movsb
xor
sub
cmc
adc
cmc
mov
outsl
nop
leave
popa
add
inc
jno
jp
inc
orb
fsubl
je
sub
xchg
nop
movl
mov
jle
inc
ror
imul
or
nop
test
and
in
cld
testl
push
mov
push
arpl
cmpsl
push
mov
enter
pop
and
rorl
divl
mov
fistpll
inc
es
push
mov
jns
xchg
jnp
ja
xchg
mov
ret
cmp
jge,pt
popf
int3
lods
daa
cmc
or
push
cld
es
xchg
outsb
stos
sbb
imul
xchg
in
ret
aaa
pop
pop
mov
not
divl
sahf
xor
stc
sub
push
push
cmovns
notw
xchg
repz
mov
imul
mov
fwait
push
dec
pusha
and
adc
pop
movsb
pop
sub
xchg
adc
mov
arpl
repnz
xlat
mov
fs
insl
stos
dec
jnp
dec
data16
test
xor
das
jae
clc
inc
xor
hlt
push
mov
mov
arpl
in
fstpl
sub
test
or
aas
das
pop
in
leave
aam
mov
adc
shlb
sub
sbb
adc
jns
jno,pt
and
mov
mov
mov
in
movsb
mov
fnstenv
in
xchg
pusha
leave
in
sahf
push
ret
popf
bound
pop
icebp
fimuls
sbb
shll
ds
scas
inc
dec
push
repnz
mov
cwtl
xor
outsb
inc
add
stos
add
inc
in
fsubrp
sbb
sahf
jb
insb
sahf
pop
xchg
repz
aam
fs
mov
std
inc
xchg
adc
cmpl
mov
inc
mov
leave
sbb
inc
or
std
sarl
push
cs
adc
xchg
mov
leave
mov
xcrypt-cfb
cmpsl
pusha
out
cmp
das
jno
loopne
xor
stos
int3
sub
int3
adc
lea
enter
cli
xchg
or
out
out
inc
insb
test
and
xchg
lret
jmp
xchg
mov
pop
sub
inc
orb
out
xor
and
sub
mov
xor
pop
cld
pusha
xchg
inc
idivl
aas
mov
insb
and
pop
movsb
sub
sub
pushf
movsb
xchg
jmp
loope
push
xorl
leave
mov
xchg
aas
scas
and
outsb
cwtl
stos
pop
jnp
pop
gs
cmp
test
mov
in
and
movsb
sbb
gs
jmp
lret
fnstcw
cmp
popf
int3
sti
mov
sub
mov
and
pushf
mov
dec
sub
mov
out
xchg
in
leave
les
std
sbb
loop
mov
xor
mov
dec
jno
xchg
mov
dec
cmc
jne
xchg
loopne
jp
mov
xchg
test
pushf
movsb
stos
mov
divl
xchg
cmp
lcall
mov
mov
cmc
cmpb
outsb
pushf
xor
jno
dec
dec
out
shl
pop
enter
xchg
aas
lret
in
inc
adc
repnz
fstps
lahf
lcall
dec
sbb
jmp
mov
push
inc
cld
inc
push
push
sub
pop
or
jmp
shr
fldcw
outsl
add
fildll
in
es
sub
xor
popa
sbb
nop
jmp
mov
aas
dec
int3
insb
xor
push
pop
imul
test
mov
int3
mov
inc
data16
loope
mov
cltd
xchg
sub
jne
test
nop
jae
and
pop
icebp
mov
insb
mov
call
test
sub
add
adc
iret
xor
pop
add
xor
lock
ficompl
test
in
mov
data16
hlt
ss
mov
js
pop
jp
lahf
cmp
dec
inc
lahf
nop
xor
adc
ljmp
and
mov
pop
rclb
inc
pop
xchg
push
imul
jp
int3
movsb
addl
popf
aas
mov
subl
test
push
lds
mov
pop
sub
les
mov
mov
lret
scas
cmp
adc
inc
ljmp
mov
iret
or
mov
fs
mov
mov
and
rol
data16
outsl
das
add
data16
in
or
mov
mov
inc
mov
int
popf
les
mov
inc
adcb
leave
addr16
roll
std
sbb
arpl
mov
jns
inc
xor
dec
aad
paddw
stos
xor
sbb
rcrb
fwait
dec
xor
sub
rorl
inc
pop
cli
insb
cmpb
sbb
ljmp
push
popa
jle
stos
popf
mov
inc
jno
xor
mov
scas
add
rol
pop
call
pop
mov
and
leave
mov
adc
test
stos
and
xchg
ljmp
xor
insb
mov
jne
fdivl
cltd
sbb
pop
lea
idiv
push
add
mov
jl
inc
push
aas
aam
aas
cmp
js
cmp
and
pop
xor
movsl
div
xor
jl
pusha
scas
lods
addl
jns
mov
test
xor
cltd
pop
aam
mov
aam
movsl
jmp
cli
sbb
mov
jno
xor
adc
lret
loope
out
mov
mov
inc
sub
outsb
dec
je
mov
cmp
insl
leave
repnz
aas
xor
mov
imul
leave
shufps
insl
outsb
sub
leave
daa
mov
mov
cmp
sbb
sahf
xchg
pop
add
ret
jl
or
test
mov
ja
jl
daa
lods
dec
pop
rcrb
and
imul
lods
mov
fldl
inc
push
cmpsb
movsb
jae
sahf
and
cld
pushf
loop
push
pop
add
data16
inc
jnp
dec
sub
cmp
nop
mov
cltd
dec
sub
push
jl
cmp
sub
push
in
test
leave
sbb
inc
adc
push
int3
adc
push
into
jp
scas
mov
cmp
rorl
mov
lock
cmpsl
and
sub
or
sahf
mov
pushf
out
sbb
cld
sub
lods
imul
pop
add
cltd
mov
inc
pop
lea
shrl
adcb
ss
nop
movsl
xlat
push
aas
xor
mov
sub
cmp
out
stos
lods
dec
mov
fisubl
xchg
add
inc
pop
in
push
repnz
enter
sub
cli
sarl
pop
jae
xor
sbb
movsb
mov
insb
and
dec
jge
mov
pop
lret
inc
aad
aas
lahf
scas
lods
loopne
fs
mov
adc
mov
fdivrs
jmp
pop
xchg
mov
jns
sub
cmp
sbb
bound
jecxz
dec
sbb
rol
cli
loopne
xchg
dec
and
in
movsb
mov
rcrl
stos
sub
lods
and
std
lcall
mov
clc
ficoms
lea
cmpsb
sub
and
ss
sbb
cmp
xchg
push
pop
xchg
sti
mov
xchg
dec
clc
xchg
aam
js
aas
pop
gs
lret
inc
rclb
push
and
stos
sub
pop
xlat
mov
les
fwait
ret
mov
xor
sub
js
cmpsb
outsl
mov
xor
jle
jbe
pop
sbb
test
jo
mov
push
xadd
movsb
mulb
jb
mov
lea
das
cmp
and
jns
jns
call
sub
mov
addr16
mov
cmp
adc
xor
popa
jb
mov
aas
fs
loope
adc
inc
pop
frstor
lock
outsb
movsl
movsl
add
test
daa
and
or
xorb
mov
mov
add
rclb
fs
and
movsl
xchg
jnp
aaa
insl
push
sub
sbb
pop
fnstsw
add
xlat
mov
add
out
mov
rolb
repz
icebp
mov
scas
pop
cmp
mov
jmp
arpl
inc
sahf
pop
in
ss
and
add
shrl
dec
xchg
jae
mov
jae
jge
popa
mov
mov
nop
int3
cmp
xor
in
mov
test
push
and
mov
int3
cwtl
clc
lock
shl
call
push
or
xchg
out
pop
imul
fs
dec
push
pushf
add
ljmp
push
sarb
adc
cmc
ret
cmp
mov
rclb
aam
ss
je
mov
jecxz
out
movsb
fnstsw
mov
lcall
mov
pop
jbe
insl
mov
dec
adc
movsl
outsl
sti
push
lods
and
mov
imul
or
adc
sub
cwtl
lahf
je
cli
xor
mov
mov
adc
inc
mov
xlat
jo
cs
mov
mov
dec
adc
mov
jns
jp
dec
loop
xchg
mov
subb
icebp
push
pop
add
adc
jae
cmpsb
mov
sahf
mov
jo
punpckhdq
lahf
sub
and
stos
or
mov
sub
out
notb
pop
insl
mov
jns
and
int3
lock
mov
int3
cmp
and
lcall
xor
and
xchg
fs
fimull
stos
inc
int3
push
ret
lret
adc
xor
fstpt
mov
sub
popf
insb
mov
adc
cld
cltd
outsb
sub
dec
out
pop
add
mov
mov
xchg
push
imul
mov
mov
mov
push
je
scas
sub
sbb
lods
pusha
mov
dec
aam
mov
xchg
lods
jge
repz
xchg
jl
cmp
push
xchg
inc
inc
pusha
and
adc
push
add
dec
xor
rcrl
inc
or
scas
lods
pop
int3
sahf
pop
pop
stos
or
fstpt
popf
inc
popf
pop
out
in
pop
lods
mov
sub
lret
repnz
test
cmp
stc
sti
sbb
lock
push
mov
xor
ret
pop
mov
mov
orl
jmp
pop
push
xor
xchg
jb
outsb
adc
imul
lods
jns
jecxz
and
or
push
push
dec
sub
push
incb
addr16
lock
dec
in
xor
xchg
push
inc
cmp
add
push
sub
arpl
add
outsl
adc
sbb
cmp
xchg
in
or
mov
aad
shlb
inc
inc
sbb
mov
repz
ja
in
adc
lods
push
aam
jmp
int3
mov
push
daa
mov
loopne
stos
push
pop
jo
popf
adc
outsb
popa
mov
call
bound
ja
out
addb
dec
orl
ds
adc
mov
ss
inc
lds
xchg
test
jae
mov
imul
dec
int3
movsb
enter
sbb
xorb
pushf
ja
push
dec
pop
adc
xlat
pop
jo
pop
stos
repz
xchg
pushf
dec
out
lcall
mov
lock
roll
iret
rorb
and
fidivrl
xchg
sub
and
push
push
outsb
ja
sub
sbb
sahf
push
or
sub
popa
cli
jg
shlb
dec
inc
xchg
sahf
sub
aas
pushf
aas
test
mov
test
lock
rclb
cmp
mov
jb
imul
outsb
add
push
test
inc
sub
pop
mov
pop
inc
jmp
daa
mov
es
outsb
add
adc
movsl
lods
int3
dec
les
cmp
loopne
add
pushf
xchg
gs
cmpsl
mov
xchg
fs
jp
add
mov
dec
dec
popa
pushf
pop
fwait
mov
int
movsl
test
mov
repnz
xchg
cmp
pushf
mov
lds
sub
fistps
pop
mov
scas
xor
or
or
sbb
dec
cwtl
xchg
push
shlb
scas
int3
loopne
outsl
aaa
lods
ror
mov
sahf
mov
mov
aas
sub
or
test
sbb
addl
movsb
adc
rorl
cmp
or
add
insl
sub
cmp
inc
xchg
add
mov
mov
int3
sub
int3
mov
adc
test
stos
xor
cmpsb
sbb
mov
dec
and
std
cmp
lcall
in
inc
in
jge
ja
cmpsb
movsb
lock
aas
lcall
in
pop
pop
lahf
into
sub
jge
lods
push
sub
pop
xchg
test
int3
lret
rcll
scas
add
stos
aad
lcall
xchg
adc
aas
cld
neg
mov
stos
dec
xchg
pop
pop
mov
stc
xlat
mov
inc
dec
mov
pop
popf
mov
insb
jl
xchg
xorl
pop
sub
repnz
sub
ret
sub
in
jl
xchg
jp
adc
icebp
jns
cmpsb
outsl
insb
in
mov
mov
es
and
scas
pushf
and
cmp
xchg
xor
in
insb
or
add
and
jl
nop
sub
jo
adc
repnz
jl
shll
dec
daa
rorl
xor
add
adc
dec
push
fs
push
test
imul
addb
mov
scas
jno
xchg
sub
dec
xor
and
fs
mov
push
sbb
pop
adc
mov
adc
sahf
outsb
popa
test
subl
push
mov
sti
dec
jno
dec
adc
jns,pt
xor
and
insl
xchg
mov
mov
jae
add
sub
repz
popa
faddl
cmp
in
xor
mov
xchg
push
inc
movsb
mov
pop
sbb
mov
insb
je
lods
pop
daa
imul
aaa
lods
nop
sub
lea
push
push
movsb
and
mov
enter
std
rcll
repz
aas
push
lea
add
push
fistpl
pop
jns
or
or
adc
jns
jo
sbb
nop
sbb
addr16
mov
sub
push
and
push
bound
mov
jmp
mov
push
xchg
cld
mov
sub
xor
shr
movsb
shll
cmp
mov
sub
lods
and
xchg
aam
in
lahf
fldt
cmp
push
dec
scas
and
in
xchg
imul
sub
sub
jl
shrl
rolb
adc
jnp
test
xor
repz
adcl
stos
or
jecxz
pop
xchg
data16
push
aam
adc
pop
push
xchg
xor
mov
dec
push
mov
movsl
mov
rcrl
fstl
stos
push
mov
mov
dec
mov
insl
test
lahf
jb
add
test
xor
orl
repz
dec
sub
scas
xchg
je
mov
push
insb
xor
or
pop
arpl
pop
cmpsb
xchg
mov
bound
lcall
dec
pushf
push
mov
mov
mov
fwait
jo
xor
dec
inc
or
dec
arpl
loopne
fwait
movsl
sub
pop
imul
lock
andl
jge
xor
in
fwait
mov
inc
push
in
shlb
mov
stos
popf
frstor
imul
neg
cs
add
mov
pop
in
scas
push
test
cwtl
cmp
jb
xor
es
repz
rorb
or
scas
sub
movsb
dec
cmpsl
inc
jl
push
int3
pusha
rcrb
mov
dec
push
stos
iret
popf
mov
push
cld
pop
movsl
dec
dec
cld
pop
popl
fisttpll
sub
or
js
outsb
xchg
mov
xchg
aas
push
xchg
testb
arpl
dec
jbe
std
jb
cwtl
mov
mov
loop
cld
inc
mov
pop
xor
testl
xchg
popf
push
mov
jecxz
adc
add
add
mov
mov
test
enter
test
subl
js
subl
cmp
sahf
mov
jnp
sar
add
in
rolb
xchg
push
sub
nop
jns
inc
sbb
push
rcrl
fsubrs
loope
mov
mov
or
rcl
repz
jbe
popa
inc
loopne
push
stos
pop
in
cmp
ret
imul
lret
or
and
mov
stos
test
xchg
lret
mov
push
subb
cwtl
out
mov
in
scas
lock
sub
cmp
stos
aaa
fmuls
adc
in
lea
pushf
push
popf
arpl
push
test
xor
xchg
cmp
pop
adc
pop
test
insb
inc
mov
mov
cmpsl
adc
push
ljmp
lds
lods
inc
mov
fsubl
lods
movsl
sub
out
push
xchg
mov
scas
repz
in
mov
sub
leave
xchg
and
fsubl
outsl
outsb
xchg
mov
popa
ret
scas
or
in
and
cltd
ret
sbb
mov
xchg
in
cltd
int3
shlw
mov
cmp
xchg
mov
cmpsb
icebp
repz
stc
and
loopne
jbe
push
sub
call
adc
scas
daa
insl
negl
adc
mov
push
out
push
lods
pop
imul
dec
inc
lock
adc
mov
aad
mov
aaa
popf
mov
pop
xchg
nop
sbb
imul
or
mov
fdivl
pusha
xor
aas
push
aas
daa
push
jae
mov
outsb
add
push
mov
inc
mov
repnz
fisubrs
adc
aaa
push
and
jae
inc
stc
pop
aaa
or
xchg
mov
test
insl
pop
ret
mov
dec
ljmp
leave
or
mov
nop
adc
movsb
jns
sub
push
pop
fidivl
cmp
xor
or
push
into
pop
std
ss
xchg
int
sub
mov
iret
jl
mov
insb
call
cmovg
scas
je
jnp
mov
and
scas
cmp
mov
lret
adcb
fs
fsubrp
scas
shlb
mov
imul
or
pop
insb
mov
pop
mov
jb
outsl
pop
leave
mov
pop
imul
js
or
push
stc
nop
leave
in
ret
pop
jae
lock
arpl
imul
add
imul
and
andl
xchg
sbb
daa
fstps
clc
das
sub
mov
orb
out
leave
xchg
sbb
popf
adc
mov
xchg
popa
test
leave
push
popa
adc
sbb
lret
xchg
in
sti
nop
aad
fdiv
xor
or
dec
lcall
and
lods
adc
test
repnz
jns
insl
push
xchg
rolb
repnz
push
xchg
sub
fbld
cld
js
les
fwait
push
mov
mov
adc
adc
sub
mov
pop
popl
loopne
rol
in
push
jnp
jbe
in
pop
dec
lahf
jle
push
xchg
scas
mov
imul
mov
jle
xchg
decb
mov
jg
orb
xor
ret
inc
add
test
std
sbb
cmpsl
push
in
stos
ds
jmp
imul
lahf
cmp
dec
sbb
sbb
jg
in
cwtl
bnd
xor
lods
push
and
lahf
aas
sahf
sub
fstp
stos
mov
movsl
rcrl
div
scas
adc
adc
andb
rcrl
cmp
push
cmp
jmp
pushf
push
cmp
sbb
stos
inc
cmpsb
loop
addr16
into
outsl
cmp
cmpsb
cli
ss
sub
push
insl
daa
sub
mov
mov
andb
cmpsl
shl
xor
dec
dec
ljmp
adc
sub
pusha
or
xor
dec
and
and
xchg
or
out
mov
jno
xchg
add
in
xor
in
cs
popa
stc
pop
movsl
push
ret
bound
sub
pop
pop
add
loop
stos
xor
sub
mov
stos
orl
stos
push
xorb
dec
xor
inc
movsl
mov
cld
pop
lods
add
xchg
pop
cmp
or
adc
repz
inc
das
adc
inc
ljmp
test
shlb
mov
push
nop
xchg
mov
and
xchg
mov
jb
gs
in
icebp
jae
loope
jne
mov
movsb
xor
dec
and
xchg
ret
orl
andb
and
pop
and
data16
sub
jae
jb
je,pt
or
sbb
adc
pop
test
xchg
and
xor
xor
out
push
jns
int3
test
adc
test
fs
inc
pcmpeqd
pop
je
test
aad
fst
or
test
cmp
movsb
scas
data16
or
sub
stos
cs
xchg
imul
in
lret
or
pop
js
xchg
repz
xchg
aam
and
xor
outsb
inc
adc
insb
movl
jb
xchg
adc
pop
sti
push
inc
dec
int3
xchg
lret
test
jb
mov
jg
mov
dec
cld
mov
mov
or
dec
nop
jge
mov
push
mov
stos
lea
ret
xchg
test
pop
or
les
mov
fmul
jno
in
mov
int
sbb
out
pop
daa
jno
test
cld
repz
test
and
mov
mov
jno
push
insb
pop
jns
jmp
and
jns
push
es
lods
cmp
in
inc
xor
pusha
cmpl
cmpsl
add
shlb
daa
and
jo
or
in
movsl
push
loope
mov
sahf
sub
cwtl
sub
mov
stos
mov
mov
repz
aam
pop
fs
shl
or
xchg
fs
leave
mov
xor
mov
xchg
int3
or
xchg
in
cwtl
das
sub
and
xchg
sbb
adc
nop
mov
mov
lcall
inc
lahf
pop
adc
jae
jl
inc
dec
xchg
scas
mov
xchg
xchg
orb
mov
fildl
push
cmpb
sub
or
sub
pop
dec
xchg
push
je
cmp
in
jbe
sti
adc
scas
stc
into
jns
or
or
int
or
in
jo
inc
mov
insl
or
or
iret
jmp
xlat
dec
mov
das
js
xchg
adc
aad
push
mov
aas
pusha
jl
insl
imul
mov
mov
add
pop
insb
ret
cltd
push
fs
stos
cld
push
ret
sub
and
out
je
adc
movsb
lahf
push
in
in
xor
int3
rol
add
jg
adc
mov
jl
insl
imul
cs
mov
cmpsl
mov
fs
cmpsb
int3
jp
mov
sbb
test
mov
fadds
insl
stos
inc
dec
subl
and
addl
ret
stc
or
adc
xchg
test
test
mov
fcmovnu
dec
les
xor
outsb
dec
stc
mov
shrl
insl
inc
lods
popf
test
xor
shlb
rorl
mov
and
scas
mov
xchg
mov
fs
lea
push
jl
add
mov
aas
mov
xor
jmp
push
les
sub
mov
aam
int3
sahf
insb
add
ljmp
mov
sub
outsb
or
shll
daa
xchg
fnstsw
xchg
sub
fbstp
clc
popa
lds
scas
dec
sub
xor
mov
jmp
push
pop
xor
cmpsl
scas
mov
add
clc
jl
shr
xchg
movsl
sub
ja
js
test
data16
popa
arpl
leave
fcmovnu
aam
stos
pop
fisttps
mov
pushfw
add
xor
ja
iret
jl
stos
pop
aas
adc
pop
jg
cmpsl
or
jmp
js
inc
movsl
or
xor
xchg
dec
repnz
sub
adc
mov
mov
mov
roll
mov
idivb
pop
fwait
xor
cltd
scas
popa
nop
and
mov
pop
mov
lret
ror
xor
push
mov
xchg
lcall
sub
xchg
xchg
out
daa
adcb
aas
mov
sub
outsb
loope
or
mov
ljmp
pop
sub
push
cltd
and
push
inc
mov
jp
vmwrite
cld
mov
into
outsl
push
imul
lods
outsb
out
jp
xor
dec
jecxz
pop
pop
lea
sti
lods
adc
subb
adc
lock
je
repz
jnp
push
ja
add
pop
jb
inc
ret
sub
inc
sub
pop
push
mov
jno
xchg
sub
jo
push
mov
xchg
mov
push
sbb
in
xor
sahf
xchg
push
inc
sub
xchg
mov
cmpsb
je
mov
pushf
xchg
lahf
in
scas
dec
dec
mov
mov
insl
mov
fwait
xchg
sbb
jmp
inc
sub
movsl
jge
in
adc
shrb
pusha
aas
shrl
cmpl
mov
je
lods
mov
inc
add
pop
out
push
test
mov
mov
jg
int3
fwait
sbb
je
xchg
jg
mov
pop
nop
ror
add
dec
mov
test
push
ret
repnz
mov
hlt
into
jge
jle
scas
stos
jo
movsl
pop
je
xor
sbb
inc
subl
mov
push
inc
outsl
lods
push
sbb
mov
mov
mov
adc
sub
jl
lods
inc
jnp
popa
mov
xchg
test
pop
lret
fs
cli
ja
xchg
lea
xchg
scas
mov
jp
lea
pop
repnz
inc
cmp
lock
sahf
pop
cld
jl
cltd
xchg
insl
shrb
xor
mov
and
daa
push
fsubrp
xchg
mov
pop
rol
mov
mov
cmp
mov
aas
fadds
repnz
dec
and
aas
ret
push
mov
call
cld
subl
mov
xor
xor
ret
or
pop
popa
and
cmp
or
cltd
imul
adc
je
xor
popa
jp
pop
mov
pushf
lods
cld
cmp
inc
and
repz
add
inc
dec
push
dec
jo
rclb
push
inc
scas
mov
lahf
shrl
xor
shrb
mov
mov
or
xchg
mov
inc
fwait
mov
xchg
pop
cld
out
push
jno
push
dec
lea
sub
into
pushf
lret
rcrb
stos
xor
inc
sbb
insb
lods
inc
mov
fstp
int3
sar
out
arpl
cs
subb
jns
or
in
outsb
pushf
pusha
mov
scas
dec
je
xchg
push
jne
sub
adc
mov
subl
mov
out
and
ds
push
jge
daa
leave
push
or
add
inc
movsb
mov
pop
cld
sbbl
jae
aas
movsl
jb
pop
mov
iret
popa
mov
inc
test
add
or
xor
jns
popf
jmp
je
adc
cmp
mov
ja
push
lret
cmpsl
cwtl
fimuls
cwtl
pop
jl
rcrl
nop
js
sbb
push
jge
sub
xor
mov
fbld
mov
je
fwait
test
sbb
jnp
cltd
lock
push
mov
xlat
sahf
pop
mov
popf
into
push
orl
movsb
ljmp
clc
mov
les
push
xor
push
popa
jmp
and
lret
dec
cld
ror
sti
jge
dec
or
xchg
stos
bound
xorl
bound
outsl
add
cmp
and
xor
dec
cmp
pop
arpl
push
mov
adc
mov
sub
lods
xor
inc
leave
mov
lahf
cmp
cltd
push
stos
and
dec
dec
cltd
jns
inc
scas
shll
shrb
jg
mov
subl
pop
cld
pop
sub
and
lods
aad
icebp
or
jle
dec
add
pop
mov
pop
gs
aas
lods
jp
mov
or
inc
sbb
mov
shlb
out
movsl
dec
and
sub
test
cs
scas
pop
sub
hlt
jns
pop
xor
push
sub
movsb
test
push
xchg
xchg
fsubl
loop
cltd
mov
mov
int
nop
imul
sbb
shll
add
or
jns
add
shll
les
cmp
and
out
out
lock
push
dec
sbb
outsb
mov
and
leave
pushf
or
mov
jbe
scas
mov
lahf
std
sub
jo
popf
rolb
pop
lea
sti
sahf
mov
fldenv
in
sti
mov
test
adc
lcall
test
xchg
inc
mov
xor
orb
scas
aaa
stos
lods
mov
xlat
outsb
sti
mov
rorl
mov
sbb
jecxz
cld
mov
fidivs
cmp
or
pop
pop
imulb
push
xchg
movsb
push
xlat
sahf
inc
mov
push
ret
shrl
outsb
mov
repz
mov
jle
sub
es
fsubrl
adc
mov
lret
outsl
pushf
and
adc
daa
ss
dec
data16
push
cmp
mov
xchg
pop
sub
in
test
push
dec
cltd
test
movsl
cmp
add
mov
xor
gs
or
stc
sub
fs
add
push
scas
pop
lret
add
cmc
out
lret
push
dec
sub
cmpsb
aas
enter
in
dec
xchg
rclb
push
lock
and
push
xchg
adc
ja
adc
sti
or
sub
cmpsl
les
sub
cmp
leave
nop
test
ds
fwait
stos
cmp
pushf
cmpsb
pop
and
pop
mov
jg
shlb
pop
popa
and
fldt
xchg
cli
push
pop
lods
pusha
mov
cmpsb
xchg
je
test
test
aas
mov
xchg
outsb
pop
cld
dec
push
and
sbb
add
sarb
mov
mov
stos
cmc
cmp
dec
outsl
cmp
imul
and
call
sbb
stos
movsl
add
inc
xor
int3
ficoms
sub
arpl
daa
je
movsb
sub
push
loope
cld
aaa
adc
xchg
mov
movsl
dec
jl
jbe
cli
cmp
movsl
lock
mov
adc
icebp
mov
mov
insb
call
or
movsl
and
sbb
popf
test
dec
sub
cmp
imul
mov
or
pop
mov
rcrl
inc
push
outsb
insl
cmp
and
cmp
dec
mov
das
jg
push
mov
adc
jnp
mov
repnz
addr16
cmp
pop
cld
sbbb
pop
lcall
jnp
jno
fisttpll
lods
push
test
mov
sub
push
or
inc
in
pusha
inc
sub
arpl
inc
xchg
fwait
jae
and
mov
xor
inc
add
in
push
mov
push
insb
aad
jmp
das
adc
inc
sub
shrb
dec
dec
lret
in
mov
dec
pop
inc
cmp
call
push
int3
cmp
push
inc
xchg
mov
dec
sub
into
iret
in
and
mov
ja
test
push
mov
push
cmp
push
mov
jo
test
xchg
mov
mov
mov
and
rolb
in
push
sub
cmpsl
mov
jae
jb
int
jae
inc
inc
adc
xchg
mov
sub
cmp
mov
xchg
fstps
pop
popa
into
push
fisubs
repnz
pop
pop
ret
mov
mov
xchg
push
lahf
xchg
js
in
xchg
pop
add
pop
imulb
mov
lcall
xchg
xor
pop
lea
mov
add
xchg
fsub
push
inc
mov
xor
inc
pop
repnz
mov
inc
je
xor
nop
cmpl
xchg
lds
lds
add
sub
cmp
or
pop
jo
enter
push
outsl
cmp
movsl
xchg
pop
mov
pop
lods
sbb
arpl
lock
cld
hlt
jo
lods
jb
nop
test
xor
mov
in
addb
xchg
filds
repz
add
aas
lret
mov
push
pop
sbb
in
mov
test
mov
xchg
sbb
enter
xor
pop
mov
mov
jl
cmp
push
mov
push
inc
mov
test
cltd
xor
sbb
scas
add
push
stos
jp
aas
lret
xor
lock
push
dec
xchg
lock
xor
movsl
cs
mov
mov
pop
rclb
rcrb
push
sub
sbb
mov
dec
popa
adc
stc
cmp
dec
stos
test
cld
in
mov
bound
and
outsb
inc
pop
cmpsb
xchg
imul
xchg
ss
lods
jns
fdivrp
mov
bound
leave
sub
fs
push
xor
and
pop
leave
lds
xchg
lods
addr16
mov
sbb
pop
add
outsl
filds
jp
arpl
cwtl
mov
sub
out
sub
movsl
call
bound
shrl
push
xor
js
jns
inc
fsubl
shrl
xor
adc
int3
or
jecxz
sub
xlat
repnz
lcall
push
stos
mov
stos
shlb
adc
daa
and
imull
mov
fsubrp
subl
inc
dec
dec
push
cmpsb
orb
push
testb
ret
outsb
pop
nop
call
push
jne
aaa
enter
test
fistps
inc
ljmp
dec
mov
xchg
int3
daa
pop
mov
int3
cwtl
push
cmc
xchg
loope
fsubr
es
jmp
add
mov
call
mov
add
test
lea
mov
push
sub
in
add
mov
cwtl
sub
cltd
scas
lret
jno
mov
dec
sub
subb
or
xchg
inc
icebp
or
hlt
fistl
inc
mov
cmpsb
test
or
nop
lret
mov
jg
add
mov
sub
imul
cltd
and
mov
out
test
bound
jge
sub
roll
and
push
fisttpl
aam
sub
sti
mov
pop
jl
arpl
mov
dec
test
push
pop
cs
test
add
test
xor
leave
push
add
nop
lret
mov
mov
inc
scas
aaa
les
fucomi
getsec
mov
or
push
leave
subl
imul
mov
rorl
shlb
addl
jb
or
adc
xor
mov
das
arpl
andl
jns
imul
scas
lea
xor
inc
mov
lret
dec
xchg
mov
push
push
test
rolb
cld
cld
leave
ret
bound
and
nop
pop
scas
fimuls
pop
dec
stc
das
arpl
mov
scas
ja
mov
lods
les
cmpsb
and
cmc
ds
and
xchg
cmpsl
leave
sbb
or
inc
sub
in
pop
jnp
test
pop
mov
sub
adc
stos
mov
data16
faddp
subl
pop
shll
mov
aas
je
mov
shlb
sub
popa
lock
js
jmp
les
sbb
lcall
data16
fnstsw
insl
lahf
pop
mov
int3
imul
mov
int3
jle
cld
xchg
fidivl
cmpsb
lret
movsl
dec
sahf
add
fs
das
mov
sub
bound
sbb
outsb
outsl
push
into
mov
pop
outsl
lock
fs
jmp
mov
xchg
jns
push
fistpl
int3
lods
out
sahf
pop
in
mov
cmp
xor
call
lahf
and
loop
push
imul
in
cmc
pop
mov
aaa
aaa
fs
leave
nop
js
xor
add
mov
dec
aaa
int
call
lods
jb
shlb
sub
add
adcb
inc
xor
mov
pushf
in
xchg
lcall
cmp
nop
add
mov
dec
cmp
xchg
mov
sbb
pushf
push
push
push
test
xor
popa
fsubr
imul
call
cmp
jg
xchg
shrb
xchg
ds
popf
aas
cltd
mov
mov
iret
xchg
outsb
sub
lods
pop
xchg
sub
mov
stos
mov
xor
inc
lea
pushf
dec
les
into
sub
inc
loope
les
xor
sub
push
jb
aas
and
cmc
loopne
dec
xor
pop
sub
xchg
mov
lods
test
fistl
jne
inc
mov
pop
pushf
mov
pop
mov
ss
jb
or
test
pop
ss
out
movsb
sub
xor
nop
push
das
das
popf
loop
data16
cld
sub
ret
test
mov
sub
test
xor
fiadds
cld
mov
imul
or
push
les
in
jae
sahf
das
jb
inc
xor
lods
mov
jmp
es
sbbb
pushf
mov
add
aam
sub
aas
push
jl
scas
pushf
inc
inc
lahf
cld
sbb
repnz
jno
divl
data16
ss
int3
test
mov
in
movsb
sbb
cmpsb
xadd
mov
xchg
mov
inc
aaa
cmpl
leave
movsl
or
cmp
out
aas
mov
imul
inc
rolb
jg
lock
in
fisubrl
mov
adc
leave
sbb
cs
xchg
leave
test
stos
jo
cld
xor
cltd
loope
push
cltd
in
xchg
sub
cwtl
cs
fbld
gs
and
sub
jne
pushf
and
ja
jl
movsl
cld
cmpsb
icebp
xor
cwtl
insl
out
aam
mov
or
inc
movsl
mov
cld
loop
push
mov
mov
xchg
dec
popa
inc
lods
mov
mov
ss
mov
or
mov
cld
mov
jo
jmp
mov
lds
pushf
loopne
js
jno
test
cld
xor
mov
sbb
les
inc
dec
cmpsb
testl
adc
jnp
cmp
jbe
cwtl
lret
std
inc
repnz
ja
fdivs
sbb
jne
jge
outsb
sub
add
or
int3
sbb
xor
jae
out
insb
imul
xor
jae
pop
dec
adc
andl
add
movsb
andl
xor
xor
inc
pop
add
sub
jecxz
movsb
int3
and
xorl
outsl
push
xchg
mov
hlt
xchg
push
mov
add
int
mov
lea
pop
dec
pop
fdivr
mov
leave
test
in
mov
push
call
jns
imull
mov
insb
movsl
push
sub
xchg
jns
lret
bound
mov
lcall
inc
pushf
loop
xchg
xor
sub
mov
jnp
xor
xor
xor
movsb
xor
test
xchg
icebp
sub
jnp
push
mov
xchg
insl
jp
icebp
fs
std
sub
dec
and
sbb
fwait
mov
xlat
cwtl
cmpps
ss
mov
daa
aas
call
sub
movsl
mov
mov
loop
imul
xor
mov
addl
in
jmp
loop
stos
push
popa
sti
js
stos
jae
pop
imul
bound
in
push
and
ljmp
xchg
mov
loope
stos
push
sbb
mov
jge
push
xor
scas
ficomps
pop
lahf
inc
sub
pop
mov
jae
jae
aad
pop
pop
push
or
xchg
and
int3
cmp
repnz
clc
sub
orps
sub
mov
out
adc
sub
xchg
dec
sub
or
arpl
cwtl
inc
test
jl
test
sahf
jnp
mov
enter
pop
test
stos
mov
mov
test
pop
adc
jae
adc
dec
jo
mov
in
fistpll
out
bound
xchg
test
mov
pop
jno
mov
bts
jge
pop
adc
rorb
clc
movsl
inc
mov
dec
pop
and
icebp
xchg
leave
mov
jo
stos
xchg
jnp
shrb
xchg
rcll
pop
jg
test
shrb
fidivs
xor
imul
je
fucomp
push
cmpsb
fdiv
push
jg
jge
fs
into
inc
or
mov
pop
inc
mov
add
mov
and
test
adc
std
pop
adc
movsb
mov
shlb
cld
push
xchg
adc
inc
sub
repz
daa
sub
cmpsb
cmp
push
dec
in
stos
aas
in
sarl
ficompl
xchg
mov
or
pop
push
mov
adc
cmpsl
jg
mov
pusha
cmp
jne
xor
test
gs
test
sub
xchg
pop
jecxz
and
add
xchg
sbb
outsl
pop
or
icebp
sbb
jmp
in
cmpsb
repnz
adc
push
scas
xor
insb
xor
repnz
data16
adc
in
mov
or
push
cld
or
and
inc
and
mov
sbb
int3
inc
out
pop
repnz
dec
inc
adc
and
int3
xchg
pop
push
loop
js
mov
mov
cld
pop
mov
dec
stos
xor
nop
gs
mov
mov
inc
lods
pop
sub
hlt
daa
test
mov
fimull
push
inc
fsub
dec
mov
sub
push
jbe
movsl
mov
es
in
mov
xchg
cmpsb
sbb
ret
push
sub
sbb
imul
scas
sbb
push
xchg
outsb
mov
xchg
add
loope
mov
jmp
stos
push
and
mov
sub
std
push
jl
ret
inc
stos
mov
add
cmpsb
fistps
pop
mov
scas
xor
jb
gs
call
pop
push
xchg
mov
xor
adc
xlat
pop
ds
cmc
mov
test
repnz
mov
pusha
cmp
jecxz
daa
addr16
jl
mov
cld
fsubs
call
lcall
movsb
xchg
mov
call
jmp
push
aaa
je
xchg
mov
push
mov
lret
decb
xchg
adc
movsb
in
lret
jns
in
outsb
das
add
loopne
ljmp
adcb
lret
mov
xchg
icebp
add
mov
and
adc
adc
or
jo
in
rclb
mov
xchg
stos
sub
mov
cwtl
dec
push
aaa
jg
lods
xchg
or
ljmp
popf
push
mov
xor
mov
jbe
fs
dec
or
mov
add
lret
mov
and
mov
insb
enter
cld
lods
incl
sahf
loopne
fcmovnu
loope
jge
cmp
and
movsb
insb
xor
xchg
aas
xchg
xchg
push
xor
pop
aam
mov
addr16
js
inc
push
fwait
xor
filds
cmpsb
in
or
in
jnp
clc
xchg
jno
cwtl
in
xor
lods
dec
and
pop
je
mov
cmp
xor
xchg
push
stos
jnp
cmpsl
mov
jnp
pop
cwtl
cmpsl
xor
xchg
shll
adc
lods
outsb
aas
bound
movsl
mov
xchg
lds
arpl
push
les
cwtl
outsb
push
jecxz
xor
sbb
test
jle
cld
int3
lods
xchg
push
push
xor
sahf
jno
movsb
lock
jbe
lods
clc
lret
mov
xchg
push
jne
lret
push
sbb
mov
mov
pushl
xchg
xchg
inc
je
cmp
xor
movsb
fs
lods
dec
sbb
jl
pop
out
mov
pushf
mov
data16
adc
jnp
test
pusha
test
xchg
or
cld
mov
lea
clc
shlb
or
jmp
jo
add
test
addb
sahf
aam
cmp
mov
mov
xchg
ret
xchg
mov
cmp
outsl
mov
xchg
adc
ficomps
sub
mov
notb
sbb
cs
ficoms
push
lods
test
std
jle
dec
xor
daa
mov
pushf
xchg
mov
dec
leave
sahf
addr16
aam
adc
outsb
xchg
ret
imul
inc
hlt
sub
xchg
cmpsb
stos
fiadds
xor
mov
push
mov
shrl
aad
inc
adc
xchg
hlt
mov
sub
out
fistpl
mov
stos
pop
inc
in
mov
pop
jg
dec
mov
mov
xchg
jbe
and
xchg
fcoms
shlb
jae
cmp
imul
mov
cmpl
fiaddl
adc
and
cwtl
jo
lods
xchg
hlt
fs
and
add
bound
out
ficoml
or
das
or
push
and
xchg
les
lods
inc
mov
xchg
xchg
mov
in
in
scas
mov
and
ljmp
lods
hlt
into
sub
or
out
sub
jb
cltd
popf
xor
cltd
xchg
movsb
and
cltd
outsl
inc
out
out
push
inc
sbb
fwait
in
shll
jl
jle
test
mov
dec
test
cmp
jb
and
inc
mov
das
push
iret
shlb
inc
psllq
jo
push
xchg
movsb
les
leave
lcall
pop
sub
jb
andb
sahf
inc
xor
lahf
js
mov
jb
mov
and
lods
sub
and
ss
in
xchg
mov
movsb
mov
jbe
and
mov
pushf
mov
fsubs
stos
mov
sbb
out
insl
adc
xchg
xchg
push
mov
push
out
xchg
cld
adc
jbe
mov
xchg
mov
sti
hlt
jl
in
sahf
fs
mov
cmp
aam
or
and
inc
addl
mov
pushf
movsb
mov
add
imul
inc
into
xchg
je
inc
ss
xorl
js
jb
mov
inc
or
sahf
jno
xor
mov
cmp
ljmp
push
ret
pop
stos
repz
jle
mov
mov
mov
je
sub
je
xchg
fwait
mov
jno
add
lods
mov
popf
adc
cmp
push
lods
add
pop
fs
movsb
insb
or
and
les
mov
das
imul
ja
xor
mov
xchg
pushf
lock
jns
sub
mov
sbb
imul
mov
mov
lods
dec
jo
lods
hlt
or
daa
add
jo
lods
pop
sahf
or
je
fdivl
test
dec
sarl
sahf
jp
mov
xchg
jb
mov
test
dec
test
js
insb
sub
je
and
jb
loopne
sub
cmp
enter
mov
fwait
test
aas
xor
aaa
je
cmpsl
shll
ljmp
cmpsl
pop
add
lahf
adc
jbe
in
pop
dec
sub
jb
xchg
sbb
movsb
fsubrl
arpl
lods
out
insl
mov
xor
and
jo
xchg
out
lcall
jo
xchg
or
jo
xchg
mov
jo
xchg
inc
mov
jo
xchg
mov
sub
mov
lods
cmpsb
in
arpl
test
pop
xchg
cmpsb
xchg
xchg
movsb
movsb
adc
mov
xchg
rcrb
inc
lods
fsubrl
movsb
sbb
arpl
enter
lods
push
mov
mov
test
movsb
xchg
adc
cmpb
jl
add
loop
push
movsb
lock
sub
popf
andb
jo
mov
shll
lods
fldcw
push
in
push
out
and
loopne
cmp
jo
xchg
shld
adcl
pushf
and
out
subb
das
movsb
pop
sub
arpl
das
movsb
xor
arpl
bound
mov
cmpsb
hlt
mov
fsubrl
mov
or
mov
insb
xchg
out
mov
andb
jl
rclb
push
push
movsb
out
adc
cld
stos
xchg
sbb
bound
insb
xchg
lock
movsl
int3
shlb
mov
lock
mov
xor
cmpsl
out
xchg
lock
fcompl
lcall
lea
mov
shll
das
sahf
je
add
xchg
ret
mov
xor
mov
mov
mov
push
insl
loop
mov
push
sahf
sbb
xor
or
xchg
push
out
inc
lods
mov
outsb
fs
xor
scas
xor
add
insb
fs
or
out
cld
dec
adc
add
mov
add
sub
ds
int3
lahf
jb
xchg
push
fucomi
stos
xchg
andb
divl
insb
xor
xor
xor
lods
adc
jle
rcll
lahf
fwait
jle
or
sub
sub
nop
testb
fdivrs
add
jne
cltd
ljmp
lods
fs
and
xchg
or
adc
adcl
pop
lock
inc
std
jnp
cwtl
jg
xor
jo
movsl
aaa
ja
xor
cmp
xchg
inc
test
mov
int
cwtl
data16
movsl
stos
and
ret
out
mov
lock
stc
adc
sub
sbb
xchg
mov
ret
lods
loopne
cmp
pop
adc
lods
jge
outsl
xor
xchg
cmp
mul
mov
mov
jnp
push
stos
push
mov
pop
mov
fnstsw
adc
test
inc
mov
scas
mov
loopne
and
xchg
sub
out
sahf
stos
push
cltd
daa
pop
scas
cmpsb
mov
lds
mov
cmpsl
adc
movsb
movsb
jl
and
adc
mov
xchg
mov
inc
scas
cmp
gs
test
call
xorb
sarb
xor
adc
jb
es
test
ret
test
jecxz
mov
xchg
or
jecxz
sub
test
pop
out
push
cs
xor
xchg
inc
mov
fs
push
fstl
mov
hlt
xchg
jb
mov
xchg
dec
sub
jl
hlt
xor
mov
int3
mov
fwait
jo
lods
insb
xchg
push
xor
mov
mov
test
fwait
bound
mov
and
and
jg
xchg
je
in
sub
and
je
push
push
test
int3
mov
notl
das
push
in
test
xchg
ret
and
jne
cmp
xchg
movsb
into
jo
jae
adc
loop
mov
lods
xor
les
pop
movsb
mov
pop
mov
enter
in
int3
sub
aad
sbb
push
pushf
jecxz
sbb
mov
sub
int3
jb
js
mov
and
nop
sbb
repz
movsl
mov
or
lods
bound
mov
add
enter
mov
mov
pushf
lods
or
pusha
inc
imul
test
movsl
ret
xchg
and
mov
rclb
in
mov
popf
test
movsl
dec
sbb
xor
pop
pop
inc
dec
pop
mov
xchg
call
mov
enter
aaa
jle
pushf
pop
xor
stos
sub
stos
in
sub
inc
jns
mov
sbb
adc
xchg
pop
push
mov
sub
pop
sbb
popf
sub
jge
scas
adc
mov
loopne
movsb
cmp
in
stos
cmpsb
nop
lods
aaa
out
rclb
mov
pop
mov
sahf
pusha
data16
and
fs
cmp
push
jo
pop
adc
mov
je
xchg
popfw
or
xchg
and
fs
xchg
leave
fs
xchg
in
test
in
lcall
cmpsl
mov
mov
cmp
pushf
or
clc
xor
out
push
popa
pop
lods
xchg
fs
test
ljmp
adc
inc
jo
lock
push
mov
dec
xchg
lods
pop
movsb
xor
fnstcw
fs
test
pop
cmp
sub
fsubs
je
insb
cmp
cld
mov
pop
push
mov
jnp
ret
add
cld
sbb
pop
push
pop
test
jo
jl
sub
cmp
push
push
cld
xchg
dec
mov
xchg
xchg
cmpsb
insb
es
arpl
hlt
mov
xor
inc
test
mov
xlat
fs
jno
sbb
mov
mov
cmp
mov
int
in
mov
xchg
scas
in
in
xor
cmp
or
jo
lods
jnp
bound
lret
aad
sub
movsb
and
adc
mov
sub
movsb
xor
int3
sbb
stos
xorb
add
outsb
pop
push
xchg
scas
mov
mov
dec
jo
xchg
xchg
pop
fs
int3
lret
aaa
cmc
js
or
stos
xor
lods
mov
stc
hlt
jae
fsubp
outsb
xchg
mov
popa
xchg
je
movsb
fs
jb,pt
xchg
cmp
push
divl
adc
xchg
ss
and
sub
jo
test
hlt
fwait
dec
ja
jle
arpl
mov
mov
mov
jl
hlt
mov
test
test
cwtl
jo
lds
xchg
pop
movsb
rcl
push
movsb
adc
in
push
subl
lods
mov
xchg
xor
pop
mov
sahf
jl
nop
jg
inc
xor
int
enter
mov
and
sub
push
adc
stc
fsubrs
mov
xlat
test
xchg
and
xchg
in
call
mov
jo
xchg
inc
movsl
addr16
dec
sub
movsb
movsb
loope
add
and
and
fmuls
fwait
pop
add
and
mov
mov
mov
in
inc
add
fmuls
or
lock
mov
mov
in
inc
add
and
push
inc
xor
mov
fnstenv
add
and
lea
add
dec
or
pop
sub
jo
mov
xchg
int3
and
sub
popa
xor
xor
sub
outsl
int3
push
outsb
add
cmpsb
adc
jl
and
mov
dec
xchg
cmp
adc
xchg
pop
jb
mov
xlat
and
lods
cmp
inc
arpl
cmpsb
fiaddl
cwtl
in
add
cmpsb
xchg
test
jb
sub
outsl
lods
push
pusha
xor
cmpsb
mov
cmpsb
leave
rolb
lahf
insb
sub
sbb
xchg
jo
cmpsb
xchg
shrb
mov
jb
pop
adc
test
push
lahf
jl
outsb
push
je
sahf
add
inc
loop
inc
lock
cmpsl
scas
cld
fsubl
dec
mov
xchg
lret
adc
or
xchg
je
std
mov
mov
incb
test
cld
jl
and
shlb
xor
je
mov
and
xchg
push
jb,pt
cmp
int3
sub
test
cmp
mov
loop
shlb
test
pop
mov
jo
xchg
push
xchg
sub
cmp
pop
rolb
and
sbb
sbb
and
test
adc
and
in
hlt
jo
subl
adc
jb
add
rorb
jb
xchg
fstl
mov
sahf
mov
shrb
sub
sahf
es
test
in
inc
mov
addr16
test
sub
dec
fwait
sahf
and
movd
mov
jb
int
rcrb
sahf
mov
adc
mov
pop
lea
inc
ds
mov
jb
jle
in
and
mov
in
add
xorb
jo
out
xchg
iret
mov
and
movsb
push
add
in
gs
call
mov
mov
test
xchg
ds
and
jle
loopne
dec
clc
arpl
xor
das
mov
ljmp
cli
jg
nop
jl
stos
mov
std
scas
inc
je
push
test
adc
pop
pop
jge
xor
or
mov
shrl
dec
aam
dec
ret
les
add
ljmp
mov
and
and
mov
xor
jns
popl
lods
sub
arpl
xor
je
je
test
and
xor
adc
jb
cltd
nop
jle
xor
arpl
adc
xchg
pop
jo
ja
inc
push
xchg
in
mov
mov
push
mov
hlt
jl
mov
xor
lods
fs
xchg
decl
mov
pushf
movsb
mov
mov
in
mov
adc
cwtl
push
push
push
jno
js
xchg
xchg
movsb
test
mov
inc
cld
cmp
nop
fiadds
jb
jbe
push
inc
imul
dec
add
mov
sahf
ja
jns
test
adc
adc
movsb
mov
inc
mov
lahf
or
adc
pop
mov
int3
jae
mull
xchg
xchg
and
fs
jl
jo
das
das
xchg
inc
movsb
mov
mov
dec
jns
mov
xorb
xchg
cmpsb
imul
xchg
add
xchg
pop
and
push
cmp
lods
jl
jo
and
les
into
mov
std
add
mov
xchg
in
xchg
mov
inc
mov
xchg
dec
xchg
jb
shl
xor
xor
int3
movsb
in
xchg
fsubl
jb
xchg
nop
test
sub
jge
test
andb
pop
loop
jp
mov
adc
mov
in
xchg
out
mov
push
sub
xchg
mov
pushf
inc
push
mov
or
xchg
mov
sub
outsl
test
cli
dec
fs
mov
jb
loopne
in
xchg
in
jnp
je
jl
test
mov
jb
xchg
nop
out
ja
je
inc
rol
adc
sti
sahf
lea
add
xor
test
sub
and
shlb
mov
pop
xchg
xor
fnstenv
push
xor
dec
xchg
mov
inc
cmp
xchg
nop
xchg
mov
mov
pushl
test
jge
lods
push
or
out
in
xor
pushf
sahf
push
mov
pop
lods
xchg
add
mov
mov
inc
jae
mov
xchg
int3
xchg
push
push
imul
in
push
jbe
pop
push
and
xchg
jl
xchg
popf
push
fs
mov
mov
cld
hlt
sbb
gs
stos
lods
and
loope
and
push
call
in
aam
mov
outsl
jo
lods
pop
adc
adc
pushf
inc
mov
cmp
pop
mov
inc
test
add
or
jb
loopne
xor
xchg
dec
xchg
mov
js
fldt
and
rorb
and
das
lcall
lcall
dec
mov
jecxz
fcmovb
dec
call
xor
rorb
jne
outsb
xor
dec
dec
mov
mov
lea
cwtl
push
xchg
mov
mov
pop
ret
mov
or
jne
out
adc
sbbb
fisubrl
cmp
push
imull
mov
enter
les
in
mov
aam
test
cld
jae
adc
mov
test
repnz
sbb
mov
mov
and
cmpsl
mov
xchg
lods
loope
divb
xchg
ret
xchg
adc
jb
xchg
push
cmp
movsb
fs
stos
xor
lahf
xchg
addr16
lds
push
mov
inc
inc
xor
dec
mov
js
add
fs
xchg
sahf
push
js
push
push
dec
adcl
scas
cmp
xchg
mov
pushl
pushf
or
sahf
sbb
lock
xor
jmp
cmp
dec
fldl
insb
les
sahf
push
pop
shll
xor
movsb
ljmp
push
je
popf
insl
xchg
ja
add
and
test
mov
int3
cmp
cld
int
pop
fs
in
xor
movsb
hlt
stc
mov
shll
in
addb
scas
inc
jecxz
pop
adc
je
mov
mov
adc
mov
lds
mov
mov
jb
dec
stos
lods
mov
movsb
push
idivl
orb
jbe
in
xor
xchg
xchg
popf
mov
pminsw
mov
popf
in
pop
call
js
lods
lods
lods
mov
pop
lods
data16
outsl
ljmp
pop
and
jb
xchg
jae
mov
xchg
popf
fs
xchg
inc
lods
push
das
ror
enter
rclb
lea
sbb
jle
xor
cld
pushf
xchg
in
stos
xchg
pop
hlt
mov
mov
mov
push
add
xchg
in
mov
je
imulb
shr
lret
ds
pop
call
fs
xchg
es
pop
sbbl
xchg
fsubl
in
push
stos
repz
mov
or
xchg
xchg
out
xor
cltd
cli
mov
mov
mov
sbb
xor
ror
mov
push
lock
add
mov
cs
and
mull
push
das
jmp
sub
pop
or
ljmp
je
fistpll
insb
mov
sub
cltd
jns
aad
xchg
fwait
sarb
lods
xchg
xor
popf
push
sub
push
outsl
mov
sub
lret
sub
insb
in
lods
les
mov
push
test
lods
mov
lods
add
cld
xchg
xorl
mul
inc
mov
xchg
adc
push
test
insb
lcall
mov
mov
mov
mov
stc
repnz
xor
lods
pop
pop
push
hlt
aaa
adc
xchg
jb
mov
daa
pop
hlt
ja
and
xchg
test
insl
mov
xchg
cwtl
in
pop
mov
andb
movsb
sub
dec
adc
hlt
in
xchg
repz
mov
dec
mov
es
and
sbb
dec
lret
adc
test
test
inc
movsl
cmpsb
xchg
mov
mov
test
mov
sub
lret
and
movsb
out
mov
ds
mov
test
int3
movsb
or
rolb
mov
pop
sub
lods
fwait
ss
push
jecxz
jle
mov
pop
dec
cld
je
sub
xchg
orl
xchg
inc
xor
or
mov
xchg
leave
jecxz
xor
sbb
ret
pushf
mov
or
or
jb
pop
lahf
xchg
jl
lahf
shrb
xchg
push
xchg
jge
push
push
test
shlb
in
inc
mov
push
in
in
mov
pop
rorb
dec
pushf
test
pop
xchg
cmpsl
popf
mov
leave
xlat
mov
int
inc
cmp
mov
out
push
and
push
xchg
jle
push
sbb
pop
add
pop
stos
imul
sub
cmp
lahf
inc
int
movsb
push
mov
xor
xchg
adc
sbb
mov
mov
mov
and
lahf
leave
shlb
mov
mov
insb
jge
into
mov
nop
jmp
cld
repnz
lods
mov
movsb
or
mov
int
cmpsb
test
das
cmpsb
dec
popf
xor
js
push
cmpsb
movsb
mov
arpl
movsb
pushf
das
subb
cmpsb
lods
fnstsw
lods
jmp
xchg
xchg
insb
lods
stc
nop
rcrb
fcompl
xchg
fstpt
lahf
into
clc
aam
faddp
outsb
mov
cwtl
or
test
je
jl
pop
int3
iret
clc
inc
ret
mov
xchg
cmp
movsb
mov
decl
mov
mov
rcrl
mov
cmpsb
pop
mov
pop
mov
ljmp
and
shr
and
or
mov
cmpsb
or
xchg
lods
das
xlat
ret
loop
test
xor
add
dec
fdiv
sbb
pop
xchg
adc
xchg
std
cwtl
cli
les
sub
xor
insb
fadds
mov
sbb
pushf
stos
inc
sarb
inc
xor
xchg
push
xchg
mov
xchg
and
scas
clc
lret
out
ret
nop
or
out
lods
in
repnz
lods
and
test
data16
pop
shrl
repz
jp
push
rorl
iret
pop
add
fisubrl
dec
sbb
jb
cmp
bnd
mov
mov
push
xchg
cwtl
in
inc
adc
sub
xchg
jo
test
and
push
fcmovb
outsl
jp
cld
add
mov
mov
outsl
jns
rolb
adc
xor
sbb
mov
and
sub
test
push
test
xor
xchg
cmp
insl
loop
lret
ss
xchg
ljmp
test
xchg
cltd
and
sub
push
call
mov
lds
add
mov
out
pusha
fldt
and
notl
inc
dec
or
pop
loop
fidivrs
sahf
shr
sbb
sub
cmp
in
dec
jo
adcb
sahf
dec
orb
test
adc
bound
sub
push
xor
andb
jno
xchg
cld
lahf
xchg
test
in
pop
outsl
lods
mov
xor
ret
in
mov
test
out
mov
sahf
jp
lock
loope
idivl
stc
inc
mov
add
sahf
or
or
sbb
fidivs
xchg
jl
fs
sbb
ja
sbb
pop
orl
jno
push
mov
shlb
dec
push
outsl
int3
lods
jbe
or
xchg
mov
push
push
outsl
sbb
movsl
sahf
push
in
or
and
xchg
cmpsb
mov
lea
fs
pop
into
aad
adc
int3
mov
xchg
pop
push
lods
je
push
adc
push
add
ds
int3
xor
mov
popw
outsb
lods
push
in
or
mov
pop
mov
mov
xchg
pop
mov
enter
lods
and
fsub
push
adc
sbb
fmulp
and
xchg
dec
mulb
into
in
and
pushf
xchg
aam
out
sbb
je
push
shlb
cmp
pop
lahf
int3
sub
shrb
fs
xchg
test
dec
and
push
lods
insl
sahf
mov
jle
mov
mov
sub
insb
cmp
adc
and
mov
xchg
sub
stos
mov
mov
leave
in
enter
xchg
jae
std
fisubrs
or
inc
test
and
push
lods
jl
inc
ret
sarb
dec
dec
xchg
xor
adc
je
mov
jbe
je
mov
jb
ret
mov
data16
in
xor
in
mov
or
cmp
xor
ljmp
inc
les
addl
pop
ret
jle
js
jb
jnp
das
or
popa
xchg
or
bound
push
je
cmpsb
movsb
jno
scas
lock
push
movsb
mov
insb
cmp
or
jb
jno
hlt
add
push
and
fs
mov
jle
mov
inc
fs
jnp
das
add
and
dec
fists
xor
rolb
test
test
insb
jb
mov
pop
cld
repz
sbbl
loopne
fs
mov
int3
aam
mov
xchg
mov
neg
mov
xor
mov
and
cltd
lret
out
mov
fidivrl
xchg
pop
add
cld
pop
xor
or
xchg
adc
outsl
mov
mov
mov
je
jb
add
mov
stos
push
movsb
xchg
outsb
cmp
xchg
mov
mov
jb
cmp
aam
std
lods
jp
test
xor
add
ficoml
dec
fisttps
test
push
pop
xchg
jo
repnz
and
cmp
mov
dec
rcrb
test
inc
cld
jl
sbb
add
orl
adc
into
xor
lods
popf
daa
addb
sub
push
call
clc
xchg
adc
or
jnp
fcompl
push
push
push
push
xor
test
jae
testl
mov
push
pop
lods
stos
xor
je
pop
sub
push
push
jb
xchg
adc
push
divl
loopne
lods
xchg
jbe
cmc
and
push
inc
mov
push
insl
mov
jb
lcall
daa
mov
shll
push
xchg
fwait
int3
jle
add
push
cs
clc
popl
lahf
mov
cs
mov
mov
adc
cltd
ret
pop
jl
sub
mov
push
insb
mov
test
dec
insl
mov
jne
add
xchg
sbb
loope
sub
arpl
or
in
mov
and
xchg
mov
test
inc
ficoms
mov
lahf
push
mov
pop
mov
push
repz
lods
int3
cmp
sbb
sub
mov
mov
jmp
xchg
mov
xchg
mov
movsb
fs
pop
or
sbb
adc
negb
movsb
or
adc
add
sahf
and
cmp
insl
pushf
sbb
xor
dec
mov
pop
sarb
pop
pop
movsl
mov
jmp
mov
call
out
mov
cmp
test
push
hlt
mov
je
pushf
gs
loopne
mov
dec
lods
xrelease
sbb
xchg
add
test
dec
fdivrl
pushf
fs
testb
into
lea
dec
mov
sbb
add
gs
je
cs
test
subb
cmp
arpl
loopne
mov
or
stos
cmp
and
jb
ja
add
cmpsl
mov
mov
or
mov
movsb
in
push
push
std
xchg
mov
movsb
adc
xchg
bound
das
mov
mov
insb
adc
jp
push
inc
xor
adc
mov
mov
ds
lods
and
ljmp
int3
arpl
pop
push
xor
xor
out
mov
mov
movsb
sub
cmp
mov
and
mov
data16
test
shlb
ret
cmp
aam
push
adc
xchg
mov
in
loop
and
sub
pop
mov
hlt
pop
sub
sub
xchg
cs
js
or
add
jb
in
add
xchg
push
push
and
add
orl
aad
imul
fistl
ret
xor
or
push
xorb
fwait
add
sahf
in
mov
fsubrl
dec
js
addr16
cmp
adc
push
jo
xchg
sub
aad
dec
dec
jb
xchg
outsl
dec
addl
ret
outsl
dec
movsb
dec
xchg
sahf
int
into
dec
je
lcall
xchg
push
mov
mov
mov
mov
xchg
scas
and
xchg
jmp
cmp
mov
je
into
cs
decb
inc
mov
sub
cmpsl
insb
xchg
enter
insb
sahf
outsl
or
mov
push
js
cwtl
lods
mov
lods
xor
xchg
inc
push
shrb
push
mov
xchg
xchg
pop
pop
xchg
outsl
in
hlt
outsl
stos
insb
je
ret
mov
in
je
adc
or
pop
enter
mov
dec
jb
mov
in
mov
ljmp
and
test
adc
xchg
stc
xorb
or
push
xorb
lods
test
dec
in
fcoml
shll
pop
xchg
cs
stos
test
push
shrl
xchg
jae
mov
insb
jg
mov
fcoml
lods
pop
push
push
inc
imulb
mov
arpl
mov
xchg
aas
xor
inc
mov
lods
or
mov
sub
fs
ret
test
test
into
adc
js
and
out
hlt
fmul
cmp
sub
mov
testl
das
movsb
fs
fdivl
xchg
add
or
jl
mov
test
inc
dec
pop
inc
jmp
mov
imul
test
mov
and
mov
mov
rcr
mov
test
push
sub
xchg
push
mov
out
pop
mov
xor
push
jg
cmp
lods
xchg
in
pop
xor
pop
lock
pushf
jo
xchg
int3
mov
je
jae
sub
mov
lahf
adc
xchg
xor
in
test
push
mov
arpl
sbb
mov
sub
jo
mov
bound
mov
and
mov
add
push
jo
xor
mov
das
mov
stos
cmp
mov
sbb
or
lret
movsb
jecxz
xchg
in
nop
outsb
popf
lcall
in
leave
iret
lods
mov
fmuls
lods
push
popa
push
mov
imul
sub
test
ds
add
dec
xor
push
lock
iret
ljmp
dec
mov
and
sub
jo
jge
dec
lods
test
lock
xchg
mov
dec
mov
dec
jo
pushf
mov
je
out
jb
aam
adcb
loope
enter
fsubl
imulb
adc
mov
adc
xchg
lret
fmul
in
sbb
push
scas
ret
jb
xor
sahf
cmp
sub
dec
sub
inc
push
icebp
push
loope
loop
push
xor
xchg
bound
je
pop
cmp
inc
cmp
fwait
in
pop
mov
dec
pusha
jns
sbb
cmc
fimuls
sahf
cmc
inc
adc
int3
jg
sahf
or
ljmp
imul
mov
fsubl
or
mov
jmp
insb
test
mov
stos
jmp
hlt
inc
loopne
dec
cmp
rcrl
cld
inc
adc
mov
ljmp
repnz
cwtl
xchg
dec
nop
pop
inc
in
aaa
imul
insb
lea
jb
xchg
cmp
mov
add
aam
mov
jo
dec
xchg
jmp
mov
push
test
pushf
imul
in
test
loop
lods
dec
insb
out
lock
xchg
cli
or
pusha
test
jo
sbb
xor
lods
jl
mov
xchg
out
test
xchg
inc
adc
pop
push
lods
pop
xor
or
xchg
inc
and
and
inc
xor
adc
xchg
jmp
les
jne
lret
cwtl
mov
loope
and
xchg
mov
pushf
jo
mov
xor
xchg
loop
push
jb
mov
mov
sub
or
push
ss
fsubrs
cmpsb
fwait
enter
movsb
sub
orl
ficoml
xchg
xor
fwait
mov
mov
movsb
cmpb
out
lock
inc
sub
sub
insb
mov
les
rclb
sub
and
xor
dec
xchg
pop
jo
mov
xchg
mov
ret
xchg
stos
fdivs
repnz
es
cmp
inc
insb
push
and
jo
jle
xchg
mov
xchg
xchg
mov
sub
mov
adc
test
js
insb
nop
pop
insb
dec
and
nop
sarl
stos
data16
sub
sbb
in
shlb
mov
stos
pop
xor
push
adc
add
hlt
and
mov
and
shlb
pop
lods
push
lods
dec
and
pop
stos
jo
mov
mov
call
mov
insb
inc
and
js
xchg
movsb
sub
aam
fisubrs
cld
xchg
or
sbb
sub
inc
nop
push
insb
and
xchg
mov
daa
mov
nop
fisubrl
hlt
xchg
add
sub
cmp
insb
and
jo
stos
sub
sub
enter
cli
insb
or
sbb
sub
pop
in
stos
pop
sub
xchg
mov
fdivl
or
sbb
push
and
xorb
sub
fcoms
add
nop
dec
insb
pop
and
js
nop
lods
sub
cmp
ret
nop
fisubrs
cli
xchg
or
sub
mov
and
jo
mov
mov
nop
out
clc
and
sbb
inc
sub
jo
test
mov
cmp
out
mov
sbb
clc
mov
cli
jmp
mov
scas
xchg
adc
stos
jo
lods
sub
insb
test
movsl
xchg
mov
popf
pushf
sub
fs
mov
test
mov
mov
dec
and
xchg
and
or
sub
mov
test
lods
cwtl
and
sub
sub
sbb
add
repnz
shlb
shlb
cld
sub
xor
sbb
push
nop
push
xchg
xchg
outsl
movsb
repnz
xor
shr
stos
ret
xor
js
fidivl
stos
jo
add
adc
and
pop
xchg
insb
jo
xchg
sub
xor
in
bnd
push
sub
mov
dec
and
jo
mov
cwtl
mov
mov
insb
fisubl
in
xchg
cld
jo
push
sub
mov
inc
and
pop
jo
subb
mov
shlb
call
adc
and
push
xchg
pop
jo
jl
nop
mov
mov
insb
fisubl
in
xchg
clc
xchg
push
outsl
inc
mov
sub
xor
sub
and
lret
xchg
scas
and
xchg
sub
insb
pop
and
xchg
jo,pn
add
ljmp
and
jo
sub
inc
nop
xor
or
sub
cwtl
stos
jo
outsb
sub
nop
xor
sbb
test
enter
notb
add
stos
dec
nop
pop
insb
push
jp
mov
mov
add
pop
xor
mov
mov
sbb
xchg
mov
scas
stos
dec
sbb
stos
je
dec
xor
stos
test
xor
inc
and
jge
jnp
sub
sbb
xchg
cs
cli
addr16
stos
jp
in
and
dec
or
mov
and
pop
fnsave
cmpsl
mov
and
pushf
jl
mov
pop
loopne
adc
sbb
nop
adc
xchg
adc
adc
add
insb
fisubs
rcll
je
sahf
sub
insl
and
jo
imul
data16
and
jo
popa
sub
pop
nop
pop
insb
pop
and
jo
pop
sub
push
nop
push
insb
push
and
jo
push
sub
dec
nop
dec
insb
dec
and
jo
dec
sub
inc
nop
inc
insb
inc
and
jo
inc
sub
aas
nop
ds
cmp
jo
cmp
cmp
xor
jo
xor
xor
sub
jo
sub
sbb
adc
jmp
loop
shlb
mov
xchg
jns
insb
pop
sub
dec
nop
aaa
insb
sub
sbb
sub
mov
mov
sbb
lods
lcall
push
sub
ds
xor
sbb
sub
mov
mov
insb
mov
adcb
inc
mov
and
adc
sub
mov
movsl
add
xchg
jo
jb
pusha
mov
sub
adc
in
aad
les
sbb
arpl
ds
sub
or
mull
mov
inc
dec
inc
addl
inc
testb
jae
push
inc
dec
push
push
sbb
xchg
push
mov
hlt
jno
dec
push
inc
inc
andl
dec
inc
mov
cli
movsl
push
push
inc
mov
cmp
xchg
dec
inc
fs
jnp
inc
in
xor
mov
outsl
inc
cmp
stos
jno
push
and
push
dec
inc
inc
cmp
subl
mov
dec
sbb
cmp
les
jno
inc
inc
cld
mov
loope
dec
or
cmp
inc
aas
jle
jae
sub
cmpsl
dec
outsb
mov
daa
pusha
mov
outsl
cmp
sbb
out
cmp
je
jno
inc
dec
inc
push
dec
pop
outsb
dec
in
cmp
cmp
clc
mov
mov
dec
dec
int
inc
je
popa
inc
mov
jno
mov
nop
in
jb
out
out
cwtl
sub
push
aas
es
cwtl
xchg
std
dec
jo
dec
and
push
stos
imul
xor
out
iret
push
mov
ret
dec
adc
inc
leave
mov
test
imul
outsb
adc
mov
fisubl
test
bound
and
test
pop
ds
adc
andl
inc
jae
push
imul
es
cwtl
sbb
mov
stos
mov
sarl
push
dec
mov
inc
testl
jl
gs
lcall
xor
in
call
pop
jae
pop
cld
mov
ficoml
cmp
cli
mov
pop
mov
pop
in
fwait
imul
jmp
shl
jno
aas
push
dec
lcall
loop
aaa
adcl
inc
sub
add
dec
adc
jg
sub
lahf
adc
mov
sub
sbbb
xchg
jo
fisubl
cmpsb
push
lods
testl
xchg
or
and
add
scas
or
sbb
aas
inc
mov
adc
or
xchg
dec
rorb
xchg
cltd
in
insb
dec
cmp
jecxz
push
mov
mov
mov
pushf
mov
dec
inc
mov
mov
push
in
push
pop
xchg
inc
out
xchg
jg
inc
out
rcr
jno
inc
imul
inc
push
xchg
mov
mov
out
mov
push
mov
andb
push
imul
popa
jmp
mov
mov
pushf
mov
or
jl
mov
xchg
scas
push
aaa
xchg
lods
imul
repz
stos
adc
push
cld
pop
subb
bound
mov
xchg
and
mov
mov
shrl
or
mov
arpl
xor
sub
mov
push
mov
xor
and
xchg
test
js
mov
and
xchg
mov
lods
pop
add
je
insb
bound
xchg
push
sub
addl
xor
cld
mov
movsl
jno
add
test
dec
addb
jg
adc
rclb
loope
subb
jge
jl
mov
out
cli
jmp
or
fdivl
test
movsb
and
lods
xchg
je
hlt
je
test
out
xchg
xor
adc
inc
xchg
call
aaa
fwait
mov
stc
mov
hlt
cmpsb
pushf
sub
add
pop
sbb
je
mov
out
cli
imul
adc
call
je
push
sub
cld
fnstenv
into
jecxz
sbb
and
mov
repnz
jge
and
xor
test
stos
aam
icebp
mov
in
jmp
jl
push
shlb
dec
addl
mov
xchg
enter
jb
push
testb
mov
test
loop
stc
jnp
jge
jno
jae
pop
cli
mov
enter
test
fldcw
jo
loope
insl
icebp
mull
fisubl
test
cmpsb
cmp
mov
xchg
ja
xorb
jb
jno
jo
jae
imull
cmp
mov
jl
iret
cltd
xchg
cmp
inc
sbb
jl
jae
push
jno
inc
push
cs
add
mov
or
lock
cwtl
rolb
inc
dec
mov
sbb
inc
fsubs
xchg
test
lret
dec
jns
mov
xor
loop
pop
je
in
xchg
sbb
imul
mov
lret
fwait
cmpsb
fisubs
aam
je
outsb
xor
sbb
imul
mov
aam
rorl
and
imul
lods
sub
sbb
imul
test
cwtl
xchg
cmpsb
lret
pop
jl
and
imul
mov
xchg
and
out
jbe
outsb
mov
mov
data16
mov
jp
inc
sarb
in
outsb
or
stos
and
mov
sub
mov
insb
fdivl
mov
movsl
sbb
imul
test
jnp
icebp
cmp
adc
aam
mov
mov
lea
xor
jl
mov
ror
es
int3
addb
cmc
inc
ficompl
out
cmpsb
mov
lret
mov
aam
int3
mov
leave
das
mov
xor
mov
ret
js
mov
dec
rolb
leave
add
pop
mov
or
pop
mov
mov
and
mov
aam
pop
cmc
ret
push
dec
stos
inc
jb
cmp
and
cmc
nop
mov
cmp
fdivs
popa
popf
mov
sub
mov
lret
dec
popa
insl
ss
test
mov
add
sysenter
jb
inc
rolb
inc
movsb
lds
ret
dec
add
xor
loopne
adc
adc
addr16
jl
jno
dec
push
dec
xchg
pusha
push
mov
iret
sub
les
addr16
or
push
add
adc
mov
inc
dec
inc
push
test
rol
and
mov
xor
loope
cli
mov
lret
jl
cld
mov
mov
xor
inc
push
inc
inc
inc
push
jbe
or
popf
cld
insb
add
int3
js
pop
leave
mov
out
mov
in
ret
ljmp
rcll
ja
adc
fadd
mov
out
mov
js
mov
or
add
testb
lahf
mov
mov
mov
js
movsb
push
xchg
pop
bound
les
xchg
mov
fdivp
lds
mov
mov
in
daa
sub
jl
and
mov
outsb
mov
hlt
insb
inc
lea
inc
push
sbb
ret
ss
mov
adc
pop
mov
movsb
sub
lods
xchg
jo
add
xchg
in
inc
je
aam
adc
xor
cld
mov
aam
mov
data16
xchg
cmp
sbbl
dec
je
je
test
push
mov
mov
cmp
stos
mov
daa
data16
jmp
mov
jns
jae
movsb
sub
aam
xor
mov
ficomps
test
jbe
sub
movsb
jnp
dec
lret
push
pop
pop
pop
xor
jae
jae
sub
push
cwtl
orb
sub
add
jmp
setae
mov
push
sub
xchg
call
adc
or
test
mov
imul
or
mov
inc
stos
inc
mov
cmp
ss
push
bound
pop
ss
ss
ss
cmp
xor
sub
and
sbb
out
ss
fidivs
ss
ss
ss
cmpl
cwtl
movsb
sbbb
inc
jmp
jecxz
fcompl
inc
cmc
cwtl
fwait
jle
pop
cmp
cli
jl
in
mov
mov
cmpb
outsb
cmp
ss
cmp
and
ss
ss
cwtl
lods
jp
pop
lcall
adc
dec
adc
and
clc
adc
lret
jo
adc
int3
adc
shlb
adc
dec
data16
es
stc
movsl
lock
fsub
aad
in
icebp
popf
jne
and
cmpsb
fadds
in
movsl
ljmp
pop
lea
sbb
sub
sahf
adcb
xor
sub
es
sbb
mov
out
enter
mov
mov
ds
cmp
das
and
adc
lock
xchg
xchg
lea
pop
xchg
es
jmp
jecxz
js
jo
push
fs
push
sub
loopne
fmul
ror
int3
int
int
int
shll
jecxz
fcompl
test
and
rorl
xchg
push
push
inc
xchg
xor
adc
fwait
jns
js
jmp
jecxz
fisttpl
shl
lret
fisubrs
rorl
jecxz
fisttpl
xor
and
out
mov
mov
inc
test
xchg
ds
cmp
cmp
pusha
hlt
int3
mov
dec
mov
xchg
xor
test
jecxz
fstpt
xor
sub
cli
mov
inc
jno
and
adc
cmp
pushl
stc
ss
ss
ss
ss
and
cmp
in
and
repnz
in
in
icebp
mov
stos
and
icebp
arpl
pop
sarl
sarl
pop
roll
test
mov
xchg
arpl
push
les
jle
jl
imul
into
mov
mov
insl
jo
imul
jmp
jecxz
pop
lret
dec
ret
cmp
mov
loopne
mov
hlt
mov
aad
scas
jnp
cltd
jp
jns
js
ja
jbe
jne
jne
jne
jne
jne
jne
jne
jne
jne
cmpsb
mov
mov
es
jno
pop
gs
and
sbb
lock
int
int
shll
jecxz
nop
mov
push
bound
dec
mov
xor
sbb
adc
or
add
cli
ss
lret
cmpl
jecxz
fmull
mov
jle
jge
in
mov
mov
jbe
imul
jne
nop
cmp
sub
sbb
or
icebp
nop
test
adc
mov
push
or
sub
in
adc
adc
mov
fsts
add
inc
mov
movsl
stos
cwtl
test
mov
xchg
jle
jae
movsb
test
hlt
mov
or
loopne
addr16
jbe
jmp
leave
mov
jecxz
inc
addr16
jmp
cwtl
and
lods
mov
movb
scas
scas
scas
xor
test
xor
mov
adc
es
aas
scas
cmpsb
sub
lret
int3
mov
cmp
inc
ret
or
sub
lods
cwtl
push
repnz
sbb
pop
xor
sbb
inc
movsl
mov
cwtl
movsb
cld
shrl
jns
lcall
mov
cmpsb
xchg
add
cld
dec
push
mov
dec
inc
lods
xchg
inc
inc
inc
mov
out
popf
leave
fdivs
mov
push
cmp
xchg
push
inc
push
mov
pop
inc
xchg
push
inc
mov
xchg
jge
mov
loopne
shrb
push
mov
mov
adc
jp
cltd
aad
jno
insb
add
stos
cmpsb
push
sub
out
add
dec
mov
aam
mov
cmpsb
mov
xor
cmp
sbb
stos
cmpsb
imul
popa
mov
push
mov
jne
jno
mov
clc
jl
and
pushf
xchg
scas
push
pop
stos
mov
pop
bound
int3
mov
inc
movsl
adc
push
inc
xchg
mov
push
and
lods
jae
mov
rcr
adc
mulb
addb
pushf
jns
sub
mov
mov
jae
mov
push
adcl
mov
divl
push
mov
mov
in
je
subb
movsb
call
lock
clc
xchg
fsubs
ss
scas
add
add
or
in
adc
les
mov
rcrb
inc
sbb
popa
xor
es
pusha
int3
add
jo
mov
mov
pop
scas
test
icebp
jl
mov
leave
jb
and
andb
lods
sub
xchg
mov
and
cmp
cmp
mov
sar
inc
dec
sahf
cmpsb
mov
mov
pop
dec
jo
aam
dec
mov
int3
push
aad
sub
xchg
mov
leave
mov
sub
pop
mov
movsb
test
adc
cmpsb
mov
mov
pusha
jecxz
lods
sub
cmp
fsubl
push
aas
fdivs
mov
cmp
scas
mov
lds
je
call
xchg
mov
fmul
dec
pop
xor
sub
lods
xchg
aam
leave
jp
scas
and
xor
jbe
mov
test
sub
pusha
mov
jbe
pop
dec
les
push
faddl
pop
pop
mov
jge
mov
add
pop
movswl
mov
in
fisubl
mov
adc
pop
pop
jl
xchg
fcmovnbe
les
xor
sub
xorl
pushf
mov
bound
test
mov
aas
pushf
sub
add
lods
adc
lods
xorl
scas
stos
mov
in
movsl
jne
inc
dec
movsl
adcl
xor
loope
out
aaa
int3
mov
mov
xor
imul
mov
xor
daa
mov
pop
sub
lahf
shlb
cld
mov
movsl
xor
fists
mov
mov
mov
aad
bound
push
cmp
cmpsb
mov
lods
mov
mov
nop
xchg
sahf
push
les
out
addr16
jg
stos
or
lcall
fdivl
xor
aaa
test
mov
dec
in
mov
insb
movsb
daa
sbbb
mov
imul
dec
cmpsb
lahf
mov
lods
mov
shlb
cmp
movsb
out
ljmp
mov
xor
mov
lods
divb
leave
test
mov
push
mov
push
into
pusha
sub
mov
mov
dec
mov
inc
cmp
pop
cmpsb
jo
xorb
das
xor
cltd
mov
mov
fdivs
push
nop
scas
fnstenv
mov
nop
pop
movsl
pop
adc
hlt
in
lods
pop
push
xchg
mov
or
test
rcl
mov
popa
lahf
aas
xchg
cmp
mov
push
cmpsl
jb
cmp
mov
mov
insb
int3
push
adc
bound
stos
push
test
xchg
or
mov
mov
leave
dec
mov
sub
jns
movsb
pop
jae
repnz
and
scas
aam
cmp
jnp
cmpl
xchg
xor
test
dec
cmp
mov
mov
mov
sub
hlt
mov
stos
in
scas
add
or
sbb
mov
stos
cltd
pop
xlat
xor
jns
aas
sub
push
in
jg
cmc
hlt
cmpsl
movsb
loopne
mov
push
mov
mov
lea
ss
mov
mov
adc
les
mov
push
repnz
mov
nop
jbe
or
movsb
add
mov
mov
movl
xor
adcl
subl
or
mov
icebp
ja
hlt
adc
mov
aaa
and
leave
jns
cltd
xor
dec
xlat
add
sbb
mov
sub
xor
pop
stos
mov
xor
add
orb
lock
jb
in
jae
pop
mov
inc
add
aad
adc
int3
push
lea
cmp
cmp
xor
mov
mov
nop
imul
jne
hlt
push
jns
mov
jns
xchg
test
xorb
fidivs
hlt
xor
mov
mov
imul
pop
adc
mov
mov
jns
test
stc
orl
mov
daa
pushf
scas
mov
int3
xchg
movsl
mov
and
lcall
xchg
les
test
sub
mov
pop
mov
in
xchg
int
cmpsb
int3
fs
lahf
cltd
xchg
insb
test
lret
lds
stos
movsl
sbb
mov
mov
dec
out
je
mov
inc
mov
mov
push
sbbl
mov
sub
and
test
jmp
push
inc
rolb
lds
or
int3
mov
js
das
mov
lods
mov
add
leave
bound
pop
aaa
fidivs
add
les
add
iret
insb
xor
jl
xchg
or
cmp
movsb
cs
mov
and
jmp
dec
daa
sub
xorl
shrb
jns
mov
ds
mov
dec
adc
jnp
sbb
int3
xchg
mov
add
rcrb
jb
jge
stc
jmp
flds
paddsb
mov
adc
mov
addr16
pop
lods
cmp
scas
mov
js
or
pushf
jo
faddl
mov
arpl
call
fwait
js
mov
into
sub
clc
je
scas
xor
ja
push
sub
mov
out
jno
mov
mov
test
dec
mov
sub
adc
xchg
ja
scas
xor
jecxz
sub
xchg
xor
int3
ja
aam
xchg
aas
enter
mov
int3
pop
mov
inc
imull
stos
dec
movsb
mov
out
subb
add
daa
mov
inc
dec
jl
or
sbb
xchg
xor
lret
cmp
mov
leave
iret
adc
xchg
mov
mov
faddl
icebp
jmp
pop
mov
movsl
xor
mov
sub
mov
aaa
lcall
loopne
movsb
dec
sbb
mov
and
dec
in
or
cltd
and
sub
imul
push
aas
fldenv
popf
lods
xchg
mov
push
stos
lahf
adc
and
mov
mov
les
mov
outsl
xchg
mov
mov
mov
sbb
push
hlt
orl
movsb
jb
inc
add
gs
stos
ret
lods
xor
xor
mov
das
loop
sbb
inc
repnz
repz
stos
mov
xor
adc
mov
fucomi
ja
sub
leave
fwait
jne
mov
in
mov
sbb
mov
sub
mov
mov
jns
inc
xor
mov
mov
test
mov
ljmp
mov
mov
add
inc
sub
xor
mov
jne
cwtl
or
and
mov
mov
lods
push
and
dec
test
mov
movsl
fs
mov
xchg
daa
mov
xor
fsub
xor
ds
mov
lahf
adc
int3
mov
cmp
dec
repz
movsl
cmp
std
movsl
mov
mov
arpl
mov
repnz
mov
mov
jg
sarl
fs
mov
xor
add
xorl
push
jl
mov
outsb
test
mov
popf
lods
mov
sub
or
int3
test
pop
mov
faddl
stos
inc
shrb
cmc
les
nop
mov
mov
insb
pushf
lahf
pop
xorl
xor
dec
pusha
ret
loop
popl
jbe
ret
mov
xor
cmp
scas
in
xchg
push
fsub
inc
daa
mov
xchg
lds
dec
leave
in
in
mov
popa
mov
adc
nop
push
mov
xor
int3
cwtl
add
mov
popf
rcrb
jne
mov
js
nop
stos
call
fbld
aad
push
pop
inc
jbe
mov
mull
in
pop
and
mov
ds
stos
daa
mov
cmp
loopne
sbb
mov
sbbl
mov
in
imul
into
fistpl
xorl
popf
xor
push
mov
hlt
push
sti
and
mov
pusha
inc
xchg
mov
addr16
jmp
adc
adc
stos
push
add
scas
sub
mov
add
test
es
in
jo
in
inc
mov
js
cmp
mov
xchg
jae
add
mov
xchg
pop
in
mov
lds
cmp
ss
imul
test
xor
mov
lods
mov
lods
cmpsb
mov
sub
movsl
sub
mov
jnp
daa
mov
cwtl
sysexit
xor
call
fstl
out
js
inc
cmp
fmull
mov
mov
jae
mov
test
nop
mov
out
inc
mov
sbbl
sar
push
mov
out
inc
inc
jg
xor
mov
test
add
mov
movsb
movsl
mov
movsl
sti
loopne
jno
pop
cmpsl
sarb
test
pop
mov
mov
mov
nop
xchg
push
mov
mov
dec
fcompl
andl
arpl
push
out
mov
movsb
loope
sub
xor
fwait
in
push
jp
lea
test
pop
adcb
fwait
mov
imull
ja
dec
mov
or
inc
movsl
or
test
and
xchg
jb
sbb
stos
xor
daa
ficoml
mov
pushf
xor
clc
mov
dec
lods
inc
pop
cmp
addr16
or
cmpsb
stos
int3
pop
pop
mov
fwait
scas
xor
push
and
pop
jno,pt
lret
add
shll
mov
mov
stos
mov
xchg
sub
pop
shlb
sbb
adc
jno
mov
or
imul
cmp
dec
mov
inc
mov
mov
cld
pop
les
mov
mov
or
movsl
xchg
out
ficoml
loopne
loope
dec
pop
std
stc
into
les
pop
and
mov
add
push
xor
popa
and
insb
push
sub
daa
bound
push
or
ss
outsl
mov
lods
jo
mov
mov
xor
icebp
lods
stos
into
sarl
mov
scas
stc
nop
int3
or
scas
xchg
mov
jp
fstp
mov
addr16
movsb
pop
cmpsl
xchg
mov
imul
mov
sti
mov
mov
js
ret
leave
mov
mov
pop
les
mov
lret
push
lock
inc
int
push
mov
xchg
jg
mov
bound
push
mov
int3
sbb
daa
cmp
popa
xor
loope
cmpsl
inc
mov
xchg
jnp
pop
rorl
push
shlb
push
mov
icebp
jb
sbb
jle
add
mov
ret
movl
lods
push
std
dec
add
les
push
fs
int3
xchg
fidivl
lock
popa
into
add
std
fnstenv
nop
shll
mov
xchg
test
pushf
scas
mov
movsl
cmp
xchg
lret
xchg
mov
mov
icebp
push
out
pop
mov
scas
ficoms
mov
popa
aam
test
jo
and
mov
loopne
xorb
rorl
push
mov
lock
js
repnz
xor
loopne
add
dec
sbb
rcr
mov
jns
jo
mov
addb
sub
cmp
hlt
fidivs
scas
int3
push
cmp
adc
test
popf
inc
mov
xchg
push
add
mov
mov
in
test
xor
jge
les
xor
outsl
stos
aam
out
fsubrs
lcall
mov
ficompl
loope
lret
scas
mov
std
adc
popl
fstl
lcall
mov
push
shr
jne
popa
int3
mov
sub
test
add
movsb
sahf
xchg
mov
rcl
add
mov
lret
negl
sahf
xor
mov
xor
lahf
sbb
repnz
movsl
mov
inc
inc
push
or
mov
lret
pop
out
outsb
cwtl
mov
stos
test
jo
mov
arpl
push
xor
or
call
mov
mov
mov
cmpsb
lret
movsl
je
mov
mov
jge
dec
push
fcompl
cmpsb
jne
mov
or
dec
and
jg
out
xchg
pop
add
push
pop
subl
popa
mov
xor
mov
gs
jmp
dec
fdivrs
movsl
cld
in
mov
add
mov
loope
sarb
cmpsb
aas
popf
arpl
jne
leave
gs
xlat
xchg
stc
pop
jno
jns
lea
inc
in
mov
dec
mov
cmpsb
cwtl
mov
stos
mov
sub
lret
sahf
mov
leave
xchg
icebp
fcmovb
mov
imulb
ret
sub
dec
inc
xchg
cwtl
mov
xchg
lods
or
les
fidivs
scas
add
mov
mov
sahf
mov
js
outsl
in
addb
mov
jp
sub
and
int3
into
sti
mov
xor
ficompl
out
jb
add
test
insl
mov
jae
cmp
push
push
jo
fsubrl
flds
lahf
nop
pop
fs
enter
sbb
mov
sahf
int3
fcoml
or
or
jae
les
cmp
mov
fdivl
dec
int3
sbb
cmp
mov
fwait
fs
sbb
mov
dec
hlt
push
outsl
mov
scas
adc
xor
test
cltd
int
je
movsb
mov
xchg
das
xorb
stc
rcrl
add
nop
shll
cwtl
jae
dec
mov
aam
mov
and
leave
movsl
xor
mov
sub
icebp
xchg
aam
jae
stos
sub
xchg
push
xor
xor
mov
dec
mov
push
cmpsb
add
int3
inc
hlt
cmp
rcrl
push
jnp
shll
mov
rorl
aam
mov
cmp
je
mov
jp
mov
sbb
mov
mov
sti
add
scas
in
mov
jae
jno
fsubr
pusha
mov
push
sbb
pop
in
mov
adc
mov
sub
pushf
mov
sub
adc
lcall
movsl
mov
mov
scas
xor
aad
add
pop
xchg
mov
je
movsb
imul
leave
mov
outsb
mov
mov
bound
cmp
mov
sub
mov
aam
push
mov
xchg
popf
push
cmpsb
sub
or
pop
mov
xor
sub
lock
xchg
mov
addb
stc
sub
mov
mov
mov
enter
mov
mov
mov
das
bound
lods
inc
push
int
iret
notb
lret
xor
lret
push
mov
das
mov
mov
arpl
jge
mov
sub
sub
jo
xor
sbb
mov
pop
push
and
popa
mov
pop
cmpsl
pusha
ret
fsubr
test
xchg
leave
int
xor
das
xlat
fmuls
mov
add
inc
test
enter
mov
add
jecxz
fldcw
popa
cwtl
nop
mov
leave
cmpsb
xchg
nop
inc
inc
push
xchg
icebp
or
xor
setge
sbb
cmp
out
repz
aam
mov
stos
rorl
and
test
nop
xor
dec
andl
mov
call
xchg
test
xchg
cmpsb
xchg
mov
stos
mov
push
mov
mov
mov
mov
lock
mov
insb
lods
jno
mov
fwait
xchg
leave
mov
xchg
nop
stos
cmp
adc
daa
mov
mov
movsl
hlt
dec
fcompl
or
out
mov
stos
loopne
pusha
leave
fnstenv
fdivl
mov
cmp
imul
les
out
mov
jno
sbb
aaa
movsl
mov
mov
xor
and
ja
mov
lret
icebp
stos
and
pop
movsb
fbstp
cmpl
sbb
mov
lea
sbb
add
lods
aas
cwtl
xchg
cld
je
gs
loopne
mov
rcrb
ss
mov
dec
mov
movsl
std
scas
test
fs
andl
dec
cs
dec
rorb
test
xchg
mov
out
mov
in
outsl
rolb
push
jg
movsl
sub
xchg
popf
lcall
loopne
sahf
mov
adc
lret
xor
dec
adc
hlt
mov
movsl
inc
icebp
xor
mov
shrl
lahf
lods
iret
stos
xchg
cwtl
gs
pusha
pop
jae
bound
jb
inc
inc
dec
pop
inc
cmp
dec
xor
pusha
push
mov
inc
jp
pop
stos
pop
aam
xor
mov
sbb
xchg
jp
mov
add
movsl
lods
mov
arpl
aaa
mov
adc
cmpsb
xor
inc
cmpsb
mov
popf
in
fwait
push
dec
mov
jbe
test
pop
pusha
sub
mov
pushf
xchg
mov
xor
lods
das
popa
lret
mov
jmp
push
mov
xor
sub
mov
jnp
aam
test
leave
aas
mov
mov
out
repnz
repz
xorb
xchg
fdivrl
mov
dec
dec
push
jo
xchg
pop
mov
clc
and
stos
mov
cmp
xchg
out
add
rcrl
cmp
je
mov
jb
movsl
das
mov
xchg
cmc
mov
pushf
call
inc
inc
mov
lahf
mov
test
das
loop
xor
ret
arpl
int
mov
cmpsb
xor
out
lds
fistpl
mov
mov
xchg
fbstp
push
mov
pop
and
popf
sub
sbb
insb
test
cli
xchg
test
xchg
add
lahf
cmpsb
mov
jl
xor
lods
notl
inc
inc
xor
push
inc
popa
add
das
cld
loop
push
sub
sub
mov
iret
dec
repz
mov
mov
add
inc
mov
sub
adc
mov
insl
mov
mov
popa
xor
scas
int3
mov
jns
add
mov
scas
pop
sub
add
sub
xchg
mov
xchg
daa
cld
mov
push
mov
fnsave
test
mov
jb
out
mov
arpl
scas
int3
outsb
adc
in
push
out
jl
ret
push
mov
arpl
adc
adc
push
pop
stos
jmp
xor
mov
cmp
inc
cmpsl
xchg
xchg
lods
int3
dec
leave
mov
inc
sbb
xor
iret
movsb
pop
adc
bound
pop
packssdw
rclb
mov
mov
xchg
and
scas
aad
xchg
shl
orl
xor
dec
xorb
dec
jge
push
sbb
xchg
in
inc
cmp
mov
xor
es
stos
lahf
in
pop
xchg
mov
leave
xchg
ja
xor
rclb
xor
push
jne
int3
mov
jle
inc
test
mov
jl
and
push
mov
inc
mov
jno
test
ja
mov
mov
jbe
jp
xchg
in
jno
lcall
add
rcr
les
int3
ljmp
jmp
int
jge
stos
mov
and
sbb
mov
and
fcomps
inc
inc
mov
jnp
in
cmp
mov
pop
dec
vmwrite
mov
xchg
dec
mov
mov
dec
fbstp
mov
cmpsl
mov
push
iret
sar
fistpl
das
arpl
or
lret
mov
mov
and
adc
inc
test
mov
nop
lods
shll
lods
xchg
adc
test
xor
in
aas
sub
je
stos
xor
jnp,pn
aas
mov
jp
hlt
mov
inc
xchg
push
push
outsb
lods
mov
cmp
dec
lret
jo
stos
pop
mov
scas
andb
cwtl
cmpsb
lods
cltd
imul
shlb
pop
sbb
mov
iret
inc
outsl
leave
mov
in
int3
inc
adc
test
in
push
push
out
cwtl
inc
cmc
mov
outsb
insl
stos
test
test
ss
inc
jno
push
test
inc
add
mov
andl
fisubl
mov
add
scas
je
xchg
and
xorb
xor
mov
lock
cmpsl
jae
mov
jmp
shlb
sub
mov
push
out
cmp
int3
inc
jo
imull
insb
fstp
pop
add
xor
mov
aaa
or
mov
push
in
imul
fidivrs
jl
les
mov
dec
cwtl
sub
jne
nop
and
mov
push
xchg
xor
dec
call
push
scas
in
pusha
jge
add
mov
xor
sbb
sahf
xor
mov
hlt
jecxz
sub
push
scas
movsl
mov
push
mov
cwtl
dec
jp
add
in
sub
inc
popf
and
cmpsl
mov
repz
mov
hlt
aas
push
mov
pop
fs
pusha
mov
nop
je
repnz
pushf
mov
add
scas
lret
jns
jnp
test
stc
test
push
mov
mov
lods
push
loope
repnz
sub
xor
test
mov
dec
das
daa
mov
fcoms
mov
xor
cmpsl
cltd
xor
test
jo,pn
pop
sbb
push
jne
and
mov
mov
mov
fwait
stc
xchg
movsl
add
test
cmp
jbe
movsl
push
scas
das
mov
roll
jno
notb
push
pop
insl
mov
mov
pop
jle
lods
pop
popl
fs
mov
cmpsb
inc
mov
or
ret
aam
xchg
rclb
stos
jp
hlt
in
movsb
inc
rcrb
cwtl
xor
dec
mov
lret
aas
out
in
jecxz
dec
mov
scas
scas
pop
int3
je
adc
out
aas
mov
shrb
sbb
popa
out
les
push
xchg
jo
lahf
stos
hlt
cmp
pop
fimull
mov
clc
mov
lret
dec
sbb
jecxz
and
mov
cltd
int3
sahf
xchg
fisubl
mov
mov
cmpsl
sub
push
xchg
sub
pushf
cmc
xor
cmpsb
aas
stos
movsl
xchg
fs
jb
int3
push
pop
xor
js
clc
fisubrs
mov
mov
cmpsb
fwait
scas
lods
jb
jp
hlt
cmp
mov
call
hlt
outsl
mov
xor
jb
mov
data16
insb
dec
mov
pop
pop
add
mov
cmp
inc
sub
jl
adc
pop
cmpsb
ss
xor
mov
push
or
in
jo
sbb
ja
mov
or
flds
in
add
mov
lods
fnstsw
push
cmp
insb
les
lret
mov
and
cwtl
bound
mov
lods
test
adc
mov
add
mov
lock
adc
add
xchg
jle
ret
and
mov
stos
fsubrp
test
mov
popf
inc
mov
mov
aaa
lea
push
cli
add
push
out
lods
cmp
ret
add
jmp
leave
cmp
mov
loope
popaw
cld
pop
ret
sub
mov
xchg
sub
add
pop
jp
nop
xchg
jns
bound
mov
and
mov
mov
xor
adc
leave
int3
push
jb
sub
pop
mov
into
lret
xchg
bound
mov
sbb
push
jno
push
jl
lods
leave
rorb
mov
jp
ds
rclb
pop
je
sub
hlt
dec
jecxz
pop
mov
into
push
mov
adc
mov
mov
scas
sub
xorl
cmp
arpl
mov
push
mov
pushf
mov
stos
mov
xchg
jnp
jne,pn
data16
enter
xor
cmp
mov
leave
mov
imul
out
sub
mov
dec
ret
stos
xchg
mov
mov
int3
loop
cmp
aas
cmpsb
lret
sbb
xlat
aam
test
mov
or
pushf
adc
mov
daa
nop
and
aam
call
xchg
cld
jl
or
pop
mov
insb
mov
jge
xchg
xor
xchg
jns
push
pop
test
in
aam
sti
lds
ljmp
mov
and
mov
je
mov
mov
mov
and
inc
int3
mov
les
mov
add
lret
xchg
xchg
adc
insl
push
inc
idivb
inc
xchg
loope
popf
outsl
sub
cmpsb
insb
xor
mov
push
je
mov
fs
dec
sahf
and
in
add
in
mov
lahf
cwtl
arpl
into
fmuls
push
jnp
add
inc
sbb
imul
jge
outsb
add
test
cmpb
cmp
hlt
aam
sub
and
icebp
lret
pusha
ja
or
inc
mov
sar
addr16
test
sub
les
xchg
and
scas
jp
dec
lods
xor
mov
nop
repnz
das
faddp
shrl
test
sbb
cmpsb
test
xchg
ret
popf
fdiv
lock
and
cmpsl
and
xchg
mov
stos
mov
cmpsl
sub
jb
mov
imul
mov
adc
jg
arpl
mov
in
mov
mov
and
add
xchg
ret
rclb
and
mov
jae
mov
shr
fs
out
scas
lods
or
mov
mov
jnp
imul
jl
jle
loopne
lods
sub
std
mov
gs
daa
push
iret
pop
cmc
mov
xchg
sbb
lock
pop
adc
int3
inc
fcomp
je
adc
stos
mov
test
mov
sbb
jg
adc
xchg
or
mov
push
leave
xchg
jle
popa
inc
jnp
dec
mov
lahf
inc
movsb
mov
mov
mov
xchg
adc
lock
inc
mov
sbb
inc
sub
scas
je
in
mov
test
lods
pushf
shlb
ret
hlt
inc
jle
ja
and
stos
cld
sarb
inc
divl
out
jae
mov
xchg
or
mov
adc
push
sbbb
data16
and
cltd
addr16
test
clc
sub
pop
decl
mov
pop
xchg
sbb
lahf
sbb
mov
dec
mov
xor
ljmp
lahf
inc
mov
sub
in
mov
mov
dec
repz
mov
jb
and
pop
mov
in
sub
nop
jb
aaa
mov
cli
mov
xor
ljmp
dec
sub
in
mov
je
and
xchg
xchg
push
cmpsl
jl
repz
cli
loopne
pusha
out
ja
sti
adc
insl
icebp
mov
cmp
out
jae
xchg
mov
xchg
ret
and
arpl
sarb
jl
cmpb
xor
inc
mov
lods
insl
movsl
push
and
in
pop
rcrb
pusha
jnp
cwtl
push
xchg
jo
je
js
jl
inc
cmpb
mov
and
inc
mov
lret
and
xchg
ret
ret
jp
pushf
xor
jnp
int
in
lret
xchg
sahf
es
jg
push
add
popa
push
dec
pusha
test
les
add
cmp
ja
inc
mov
mov
xorb
aad
mov
add
jns
inc
insb
mov
xchg
push
mov
mov
lock
mov
and
and
jg
nop
enter
cmp
stos
mov
adc
divb
jmp
int3
add
mov
xor
jge
xchg
mov
inc
mov
int3
and
xor
popa
clc
adc
movsl
movsb
mov
ljmp
mov
pop
and
iret
pop
into
jae
and
inc
dec
fwait
mov
test
adc
add
cmpb
and
xor
out
sti
xor
daa
mov
loop
xchg
push
sub
sti
mov
xor
xchg
mov
or
pop
mov
movsl
mov
or
sub
cwtl
icebp
mov
cmp
test
imul
fdivp
shlb
mov
push
mov
pop
ret
jb
mov
movsl
mov
or
mov
les
xchg
shlb
int3
inc
enter
push
dec
push
fdivs
addl
mov
je
dec
mov
ja
push
cmp
mov
cli
mov
sub
mov
in
mov
inc
shll
call
push
mov
mov
jb
je
mov
and
leave
cwtl
mov
pop
loope
dec
jp
xor
shrl
mov
lods
mov
sbb
mov
jecxz
pop
cmpsl
inc
dec
lods
mov
xchg
sub
aam
movsl
int3
icebp
jo
mov
mov
xor
stos
add
lods
pop
mov
ret
test
adc
xchg
mov
pop
pop
gs
adc
jl
mov
lods
adcb
pop
mov
outsb
jb
fnstsw
xchg
in
sub
mov
insb
pusha
mov
out
pop
repz
pop
xchg
pop
bound
fcmovnb
test
cmpsb
fsubrl
pushf
xor
orb
arpl
xchg
xchg
arpl
hlt
cmp
fwait
shrb
aam
outsb
jbe
mov
out
cmpsl
mov
mov
mov
mov
push
out
mov
fs
ret
cli
hlt
rclb
mov
movsb
aam
sbb
cmpsl
jne
outsl
xor
icebp
sarl
mov
sti
xchg
add
ja,pn
xor
add
data16
push
xchg
cltd
outsl
or
mov
hlt
cld
lret
sub
into
adc
xchg
shlb
fidivrs
outsl
test
xor
mov
cmp
cmpsl
cmpsb
mov
mov
cwtl
stos
or
jmp
mov
test
pop
xor
mov
rcrl
inc
nop
lahf
sub
clc
mov
dec
push
mov
out
sti
pop
sub
hlt
mov
shld
nop
pushf
cwtl
adc
adc
mov
mov
xchg
jmp
pushf
mov
hlt
fbld
mov
iret
lea
mov
aaa
in
xor
or
mov
and
add
fmul
mov
xlat
movsb
dec
and
loopne
inc
fisubl
mov
les
mov
call
jne
sbb
mov
out
inc
jl
jp
rorb
movsb
sub
shll
lock
adc
loopne
ja
clc
mov
scas
pop
lock
hlt
mov
icebp
adc
adc
xlat
loop
mov
cmpsl
lods
push
in
movsl
mov
xchg
and
push
out
out
mov
sbb
mov
push
xchg
pusha
lods
mov
inc
jbe
and
test
nop
push
mov
inc
mov
int3
rorb
and
test
stc
insb
lods
inc
and
mov
imul
mov
loop
shrl
aas
mov
sub
je
mov
or
arpl
mov
mov
leave
out
aad
add
daa
insb
jae
mov
arpl
mov
mov
inc
xchg
xchg
mov
jb
xlat
or
and
mov
mov
mov
test
lret
int3
jae
cwtl
fbstp
push
stos
and
xor
sahf
cld
pop
aam
fwait
test
pop
mov
data16
insl
mov
cmpsb
jae
divb
aam
bound
jns
jmp
mov
sahf
je
or
xor
jle
inc
mov
adc
jno
hlt
xchg
sbbl
pop
xchg
aam
xchg
xor
pushf
int3
addr16
aad
imul
add
mov
inc
scas
cmpw
sbb
xchg
mov
ds
mov
jno
aas
enter
movsl
pop
lods
loop
mov
fs
mov
pop
xor
je
les
mov
in
es
push
cmp
mov
mov
jae,pt
ss
in
lods
mov
fwait
and
repnz
xor
in
xchg
pop
in
mov
cld
bound
jl
mov
leave
jg
xchg
xor
aam
popa
cltd
adc
lea
mov
daa
das
shl
cli
pop
jo
addr16
add
inc
test
mov
shrb
mov
sub
ss
sub
cmpsb
mov
mov
add
mov
dec
lods
insb
sub
orb
mov
cmpsl
mov
fs
outsb
das
faddl
push
sub
mov
aam
pusha
ret
rcrb
mov
sub
and
sbb
xor
mov
sbb
mov
mov
cs
adc
or
fs
cmp
pop
mov
mov
rclb
stc
pop
dec
orl
sub
adc
xchg
jo
lock
test
shlb
in
fs
insl
xor
int3
ljmp
and
leave
sti
xchg
rcrb
cmp
icebp
mov
mov
out
inc
mov
mov
bswap
rcll
xor
jbe
xor
xchg
push
jp
dec
and
insl
and
sub
into
mov
cmp
push
mov
push
xchg
mov
jp
daa
pop
jo
add
js
test
outsb
mov
add
mov
xor
xchg
leave
pop
mov
xchg
xchg
mov
cld
mov
fs
xor
lcall
xor
dec
xchg
mov
xchg
pushf
lods
les
mov
call
in
mov
out
fucomi
mov
fcom
aad
rcl
hlt
mov
iret
in
push
outsl
inc
popf
inc
mov
pushf
sub
aas
mov
inc
std
push
and
pop
mov
movsb
or
jbe
aam
test
mov
cwtl
sahf
mov
jle
jl
les
mov
jo
outsb
popf
cs
out
push
jmp
aam
lock
xor
stos
les
mov
xor
sti
pusha
add
pushf
mov
dec
lods
push
cmc
xchg
repz
mov
sahf
mov
scas
add
sbb
call
mov
mov
jno
sub
in
addr16
mull
mov
jne
mov
fcoml
int3
in
mov
mov
inc
pop
inc
dec
mov
mov
stos
and
mov
xor
mov
sbb
mov
lods
in
test
inc
adc
test
mov
xor
test
or
lea
lods
ljmp
cmp
xorl
mov
loope
lret
adc
add
loop
je
stc
cmp
lods
lea
imull
aam
repz
jge
mov
xchg
push
cmp
cwtl
mov
mov
negl
cmp
lea
movb
xor
test
xchg
in
ja
sbb
mov
std
mov
les
pop
movsl
repnz
xor
inc
cmp
mov
mov
lods
dec
xchg
sbb
mov
xor
sbb
push
cmpsb
adc
mov
fisubrl
movsb
jo
mov
inc
int3
out
mov
dec
ret
push
mov
popa
aas
out
movsb
inc
inc
xorl
popf
hlt
cmpsb
outsl
imul
mov
nop
bound
jg
pop
mov
jns
outsb
jl
loop
mov
jae
stos
inc
push
jp
cmp
jns
jb
shr
insl
sbb
fiaddl
addr16
and
fs
stos
pusha
dec
cmpsb
test
cmpsb
jmp
dec
inc
aaa
shlb
add
pushf
adc
jb
lret
mov
mov
lods
dec
popa
test
mov
inc
jae
aad
addr16
push
dec
into
stos
outsb
dec
lods
xchg
mov
dec
in
andb
xchg
xor
fs
mov
sbb
lods
xchg
outsl
cmp
xor
inc
loop
les
cltd
pop
inc
int
aad
fldt
inc
xchg
mov
dec
xorl
mov
xor
xor
dec
push
nop
roll
mov
push
insb
jbe
cwtl
aas
js
inc
mov
into
jnp
imul
adc
cmc
mov
xor
push
push
insl
mov
aad
inc
pushf
mov
ds
fildl
jp
bound
arpl
xchg
push
cmp
mov
aam
push
mov
inc
wrmsr
mov
cmpsl
xor
pop
mov
pusha
insb
inc
fisttps
enter
or
mov
mov
jecxz
iret
push
adc
mov
out
mov
mov
pop
adc
push
xor
dec
lock
inc
call
adc
mov
sahf
xchg
shrb
popf
insb
movsb
addr16
xchg
aaa
jae
jbe
in
xor
dec
or
cwtl
and
jae
add
das
inc
inc
xchg
mov
xor
push
loop
bound
int
jp
aas
mov
in
sbb
insb
push
iret
fsubs
push
inc
sub
pop
jmp
mov
jno
sub
pop
jecxz
mov
in
mov
int3
xchg
xchg
mov
mov
jl
xor
sub
test
mov
mov
jno
and
fdiv
jne
cwtl
mov
mov
andb
xchg
jo
jbe
sub
adc
push
imul
xchg
loope
sarl
andl
mov
cmpsb
cs
adc
scas
test
arpl
lret
mov
mov
shlb
inc
mov
ds
xorb
pop
jb
push
bound
dec
adc
xor
sbb
ficoms
adc
mov
lods
insb
xchg
imul
cwtl
aam
sub
pusha
gs
shrb
inc
lea
pop
mov
outsb
ja
fs
dec
jns
js
ja
jbe
jne
jbe
jne
jne
jne
jne
mov
lcall
or
int
pop
aas
xchg
xor
adc
lock
mov
adcb
adc
mov
data16
adc
mov
mov
aas
adc
mov
stc
icebp
lock
rcr
jnp
aad
mov
cmp
xchg
xlat
jmp
roll
inc
xorl
ljmp
mov
jp
jns
js
ja
pop
jbe
cmpsb
mov
es
in
xchg
movsl
sub
in
sbb
and
out
enter
mov
adc
pop
mov
loope
shll
rcll
lock
les
enter
rolb
icebp
mov
js
in
movsl
jp
jns
test
call
int3
ror
int3
sarb
and
lods
in
mov
xor
test
and
sbb
in
rol
les
int3
push
enter
xor
adc
fwait
cmpsb
xor
sub
jne
cmpsb
data16
mov
in
movsl
xor
and
xchg
icebp
xchg
and
je
loope
shl
stos
or
and
jmp
test
je
out
fld
mov
mov
jp
jns
js
mov
xor
sub
push
jle
push
push
data16
mov
or
stc
repz
fidivrl
lret
aad
sub
and
jae
lret
ret
sbb
int
jbe
mov
stos
inc
popf
mov
cmpb
sarb
int3
pop
enter
sbb
gs
shll
enter
arpl
push
mov
jmp
nop
mov
jnp
aaa
int3
jo
imul
mov
je
jl
jb
ja
jbe
jne
and
adc
add
nop
sub
push
xchg
std
push
hlt
xchg
jmp
fildll
mov
mov
dec
jbe
outsb
mov
in
pop
int
and
es
icebp
loope
xlat
ror
ret
mov
jecxz
jbe
jno
pop
lret
dec
ret
aaa
mov
mov
nop
mov
mov
xor
mov
ja
movsl
jp
nop
mov
push
bound
pop
in
movsl
dec
imul
xor
sub
je
in
mov
cli
mov
mov
lea
ret
mov
push
cmpb
mov
lock
js
sub
jo
mov
sbb
mov
imul
cmp
add
xor
and
and
clc
lods
jne
inc
dec
fs
and
mov
xchg
fidivl
lds
repnz
mov
xor
test
and
sub
stos
in
mov
xchg
sub
push
je
or
mov
xor
shl
xchg
movsb
add
mov
je
hlt
sub
leave
xor
or
cmp
xchg
pusha
xchg
fldcw
lea
jno
dec
inc
pop
test
in
cwtl
imul
imul
in
pushf
lods
arpl
repnz
mov
nop
jb
test
sbb
xor
mov
mov
arpl
in
cmpsb
bound
lret
sbb
iret
mov
aaa
and
adc
inc
popa
dec
push
cmpsl
enter
lahf
imul
mov
insb
stos
divl
jl
xchg
scas
inc
push
jnp
jne
push
fisttps
out
cld
adc
sub
inc
xor
pop
movsb
inc
inc
dec
mov
cwtl
dec
aam
ljmp
adc
ret
js
xor
jno
imul
clc
inc
push
mov
or
out
xchg
pusha
dec
pop
mov
dec
mov
mov
stos
xchg
xchg
add
xor
jecxz
mov
call
aam
push
adc
loopne
mov
and
inc
cmp
pop
mov
pop
mov
pop
fs
mov
mov
inc
shl
mov
mov
dec
mov
inc
test
mov
jae
mov
xchg
mov
cmp
mov
jge
dec
pop
stos
mov
ljmp
sub
mov
stos
mov
and
gs
mov
adc
xor
sbb
pushf
mov
push
mov
dec
sub
cwtl
push
mov
inc
loop
insb
mov
loopne
jbe
inc
sbb
add
inc
lods
dec
pop
enter
and
pusha
js
outsb
mov
and
lock
push
mov
mov
aad
adc
stos
pop
jnp
jl
dec
push
jo
mov
ret
jle
push
push
mov
mov
lods
movsb
inc
inc
mov
sub
lahf
mov
inc
lahf
in
imul
xchg
or
test
mov
sarl
jb
popf
jl
loop
jb
mov
dec
pop
hlt
inc
mov
imul
jns
dec
inc
lock
cli
mov
cmp
jno
xchg
outsl
outsb
mov
filds
decl
bound
popa
xor
fists
daa
mov
adc
xchg
in
lds
mov
or
mov
adc
filds
jns
jl
in
andl
push
pop
insb
jle
xor
pop
sbb
in
imul
pusha
movb
push
push
shll
data16
in
dec
outsl
xchg
int
rcrl
jl
cmpsb
sbb
cmp
int3
jle
pop
xchg
dec
gs
sbb
cmpsb
arpl
outsb
pusha
mov
popa
mov
xchg
fwait
insl
lret
mov
fldt
sub
jne
push
enter
fld
push
sbb
sbb
xor
cli
push
or
jno
inc
aas
inc
out
mov
cwtl
xchg
dec
mov
dec
push
insb
add
mull
cmp
pushl
lods
mov
pop
cld
ljmp
fs
inc
ds
push
cmpsb
fisubs
or
mov
dec
test
jae
pop
sbb
mov
ds
jne
stos
div
not
pushf
lret
cmpl
cmp
adcb
ja
mov
testl
data16
fldl
shr
xchg
mov
cmp
mov
lock
mov
out
loop
pop
int3
fucomip
cli
fwait
jp
adcl
in
repz
ljmp
add
jne
in
mov
out
loope
leave
out
mov
fstl
sahf
cmpsb
loope
in
xor
cmc
enter
outsb
push
scas
test
sbb
mov
mov
movsb
mov
jmp
xchg
jle
jae
jno
xlat
push
jb
push
lds
cmp
inc
and
xchg
add
nop
pop
jno
nop
in
lret
lcall
jno
mov
clc
dec
jno
pop
jge
push
out
shl
inc
clc
shl
cwtl
fadds
mov
in
shll
or
pop
jae
pop
jge
fwait
xchg
je
cmpl
push
stos
outsl
adc
std
push
popa
in
repz
loopne
lret
cmp
stos
jnp
jl
arpl
jmp
in
sti
mov
cmp
mov
mov
add
loope
enter
sbb
xchg
sbb
xchg
mov
xchg
jae
sbb
scas
outsb
out
jo
xchg
cmpl
hlt
cs
add
fnstsw
jbe
inc
push
pop
cli
push
pop
push
mov
xchg
adc
sub
test
push
lahf
orb
hlt
add
ljmp
aad
sub
jecxz
aad
std
jg
outsb
sub
lods
push
cltd
mov
jl
sbb
inc
pop
test
andl
shll
add
mov
in
jecxz
sti
divl
rcrb
dec
cmpsb
or
das
mov
das
dec
jge
pop
and
xchg
mov
pop
subl
add
icebp
shrb
movsb
lods
mov
ja
in
stos
xor
cld
fsubp
inc
sbb
in
add
jnp
leave
jl,pt
cmc
insb
inc
adc
pushl
ds
push
jno
cld
or
iret
in
icebp
shrl
mov
call
test
adc
and
sbb
std
xchg
inc
btr
sub
jbe
or
cmpsl
cld
mov
stos
inc
cmc
fdivrl
push
jl
mov
add
dec
scas
jo
ss
mov
inc
push
dec
xchg
jo
mov
loopne
pop
hlt
cli
xchg
pop
mov
jbe
add
mov
sbb
push
popa
movsb
stc
rcrb
xchg
add
jno
out
clc
rcrb
or
jae
dec
push
dec
jo
mov
fs
push
aam
popa
push
xor
xchg
test
dec
pusha
js
inc
mov
notb
in
mov
pushf
mov
loope
enter
arpl
jo
or
and
sbb
fs
insb
dec
loopne
in
out
pop
shlb
fdivrl
popa
mov
lods
pop
fs
test
out
insb
mov
xor
out
andl
push
sub
push
mov
insb
nop
stos
push
andb
cwtl
hlt
mov
inc
jnp
lods
mov
cmpsl
stos
cmpsb
stos
sarb
push
mov
xor
xor
into
jbe
xor
imul
outsl
and
jg
mov
pop
mov
test
pop
mov
aad
xchg
cwtl
jne
mov
xchg
in
mov
xlat
inc
xchg
out
sti
scas
mov
int3
cs
jno
mov
addr16
out
push
mov
fildl
arpl
rcl
mov
in
mov
addr16
xor
jb
adcl
int
push
test
jp
out
cmp
dec
dec
int3
push
movsl
mov
push
mov
lcall
movsl
pop
enter
ds
sub
mov
jb
mov
sub
mov
or
or
mov
sti
or
mov
mov
dec
jae
mov
add
jns
mov
sbb
outsl
dec
push
push
jecxz
loop
xchg
mov
and
cwtl
mov
cmp
jg
nop
push
test
outsb
mov
mov
xor
push
jmp
mov
xchg
add
add
cmp
mov
imul
inc
dec
push
adc
push
loopne
pop
push
xchg
cmp
das
into
ret
mov
int
stc
lock
mov
movsl
push
int3
adc
sbb
ficompl
mov
cli
pop
jnp
dec
add
ret
scas
shll
or
push
mov
loopne
out
xchg
mov
xor
dec
push
pop
mov
and
xchg
push
pop
cmp
or
movsl
in
xchg
mov
xchg
mov
out
jae
inc
push
mov
or
push
sbb
mov
dec
cs
scas
ret
pop
ja
jl
loop
mov
mov
sbb
and
int3
add
into
jno
imul
mov
mov
push
out
aad
xlat
pushl
dec
inc
push
mov
or
or
xor
or
mov
cwtl
shlb
enter
fwait
leave
mov
js
cmc
xor
loop
test
and
pop
sbbl
js
rcl
in
loope
or
cmp
mov
adc
test
add
jns
dec
mov
call
les
cmpsb
mov
shl
int
xchg
sbb
scas
jge
lret
orb
je
inc
test
pushl
sbb
sub
fs
mov
lret
dec
pop
adc
mov
mov
outsl
xchg
sbb
add
cmp
pop
mov
mov
dec
pandn
sbb
xorl
and
fcomps
repz
sub
and
mov
mov
adc
stc
arpl
jae
aaa
cmp
test
xchg
sbb
aam
scas
push
xchg
int
divb
call
cmpsl
pusha
mov
mov
cmp
roll
jmp
and
lahf
repnz
test
jne
sub
rcl
xor
popa
xchg
adc
pop
mov
repz
lea
test
dec
insb
cmc
jnp
xchg
pop
mov
dec
outsb
ds
cwtl
ja
popl
xor
repnz
les
jmp
ret
mov
std
or
mov
mov
add
icebp
sbb
lods
iret
arpl
pop
mov
in
emms
lock
sarl
imul
jo
rorb
adc
mov
dec
cmpsb
aam
sub
ja
xlat
sti
mov
xchg
lods
fs
inc
test
mov
imul
bound
push
mov
jmp
in
dec
sub
cld
repz
cwtl
dec
jl
shll
mov
je
xchg
mov
add
sub
adc
out
lret
adcl
inc
stos
hlt
sti
pop
push
xorb
jecxz
push
mov
pusha
cwtl
inc
stos
in
dec
jne
dec
sub
fs
xchg
testl
and
roll
jge
insb
mov
aaa
test
notl
mov
jecxz
inc
and
lock
es
pop
das
stos
xchg
idivb
adc
stos
mov
aaa
push
imul
mov
push
sub
clc
in
fldcw
mov
adc
jae
mov
fimull
stos
js
test
data16
sbb
jp
outsl
mov
mov
push
sbb
or
push
ror
scas
je
mov
ja
imul
addl
pop
push
push
sbb
cmpsb
xor
xchg
push
mov
fmuls
push
xchg
loope
outsl
lods
std
out
push
and
incb
test
mov
cmc
fcomi
sbb
jp
cmp
adc
jae
xor
pop
xor
add
cwtl
jno
and
and
inc
push
loop
addr16
jo
cmpsl
mov
std
adc
in
out
loopne
or
and
je
add
out
mov
and
enter
xchg
aam
rorb
inc
jne
cmpsl
mov
cmp
push
rcrl
shll
addr16
mov
repnz
sbb
mov
ret
loopne
dec
xlat
aaa
lods
pushf
lds
out
std
cmp
push
jae
shll
cmpsb
inc
mov
mov
dec
xor
mov
dec
mov
loope
push
cmpsl
cmp
mov
mov
add
mov
int
pusha
es
xchg
mov
je
jae
lods
test
xor
add
dec
pop
mov
sti
mov
jbe
sbb
xor
cmp
pop
mov
rcl
sbb
gs
push
aaa
mov
or
jp
mov
dec
pop
scas
out
adc
mov
pop
xchg
aaa
mov
mov
mov
ds
mov
movaps
pop
jnp
mov
add
das
mov
aaa
xor
pusha
mulb
les
add
pop
mov
mov
ret
xor
lock
push
push
addr16
mov
or
push
je
int
insl
mov
mov
sbb
mov
mov
test
push
aas
mov
mov
sar
cmpl
sub
and
enter
shll
icebp
jge
ret
mov
cwtl
pop
push
pop
jb
rep
fsubrl
dec
insl
xor
jg
scas
lahf
mov
mov
cwtl
push
mov
jno
xchg
xchg
test
add
adc
sbb
or
push
push
fwait
mov
aas
push
or
hlt
push
cltd
jecxz
sbb
out
stos
mov
cwtl
jnp
js
jl
inc
stos
xor
test
inc
out
xchg
dec
mov
scas
and
out
adc
mov
push
fisttps
lcall
in
cmp
and
cmpsb
jbe
pop
mov
xchg
mov
xor
pop
mov
mov
mov
cmp
mov
mov
or
lea
jmp
test
cmp
xor
mov
arpl
jg
cltd
mov
mov
into
shrl
adc
xorb
pop
ret
mov
cmpsl
xor
inc
arpl
mov
and
cmp
pop
inc
and
push
data16
and
mov
jl
popa
mov
push
and
sbb
movsl
xor
sbb
lea
shll
movsl
or
stos
xchg
test
xor
dec
loope
movsl
movsl
inc
adc
mov
fisubrl
mov
cmp
scas
repz
push
stc
dec
mov
lds
sti
mov
das
mov
mov
ficoml
mov
mov
add
shrl
jbe
dec
mov
sbb
mov
fwait
out
mov
mov
int
jge
imul
neg
mov
mov
dec
pop
jae
mov
sbb
cwtl
loop
inc
pushf
mov
aas
xorb
inc
shll
mov
or
push
dec
xchg
repz
or
je
mov
xor
xchg
pop
mov
and
push
mov
push
pop
push
ljmp
cmc
jbe
add
xchg
mov
scas
mov
push
cmpsb
mov
sti
sahf
inc
jb
jge
sbb
mov
adc
add
lret
mov
es
iret
flds
and
mov
cmc
fdivl
adc
lods
outsb
xlat
imul
das
cmp
icebp
cmp
pop
mov
stos
xchg
dec
mov
push
mov
rcl
pop
leave
into
repnz
lock
or
loop
mov
inc
test
or
add
sbb
jle
mov
mov
mov
lods
push
imul
das
shrl
add
sub
jmp
aad
add
mov
sub
lods
mov
outsb
hlt
xorl
xchg
xchg
pop
dec
jg
pop
scas
mov
and
mov
dec
mov
leave
push
mov
dec
xchg
paddb
push
sti
mov
cmp
add
inc
lods
xchg
cmpb
or
call
arpl
sub
sbb
xchg
insl
mov
pop
mov
inc
mov
xchg
push
mov
frstor
dec
mov
scas
out
cmc
lahf
scas
insb
cwtl
xchg
in
je
xchg
aaa
push
inc
mov
sbb
push
pop
cld
and
mov
fs
push
sub
jne
clc
icebp
iret
dec
jnp
int3
push
movsl
and
sbb
or
pop
inc
push
js
jle
xor
push
xchg
adc
hlt
in
fwait
int
mov
xor
sbb
pop
inc
pop
mov
cwtl
dec
popf
xor
stos
jns
xor
cld
in
loop
mov
mov
adcl
in
and
add
enter
sub
xchg
inc
xor
inc
add
ficoms
mov
int3
sahf
jae
scas
enter
mov
pop
lods
xor
mov
cltd
xor
xor
fbstp
movsb
iret
je
dec
mov
adc
mov
in
and
fnsave
ror
int
les
lock
stos
test
push
leave
outsl
faddl
mov
jg
ss
mov
jae
sub
cli
movsl
mov
push
outsl
fbstp
dec
mov
xor
jne
push
fldenv
add
test
xor
fmuls
cs
push
clc
and
scas
mov
fiadds
stos
jge
or
in
rcll
loop
mov
rclb
sarl
mov
call
sbb
jne
pop
mov
cmp
jne
dec
pop
out
popf
jl
stos
outsb
inc
pop
pop
mov
cld
ds
movsl
adc
add
xor
je
cli
xor
aas
adc
lods
inc
test
fs
push
lods
xchg
pushw
dec
mov
xchg
xor
push
push
mov
es
sub
and
jae
ss
cmpsl
mov
or
mov
dec
pop
cmpsb
xorl
mov
pop
sub
inc
xchg
outsl
mov
jno
mov
dec
xor
mov
mov
cmc
icebp
cmp
dec
rcrl
cmpsb
jo
xchg
xor
aam
test
mov
into
adc
mov
mov
xchg
outsb
mov
xchg
aad
ljmp
sbb
int3
mov
popa
leave
adc
add
outsb
fldenv
xchg
inc
mov
mov
mov
repz
push
xor
pop
mov
xchg
cmp
les
dec
out
fisubrs
jle
dec
and
sub
std
sahf
add
hlt
arpl
mov
xor
int3
sub
and
xorl
mov
inc
mov
adc
int3
and
nop
imul
dec
jg
xor
popf
fsubrp
mov
dec
aaa
pop
add
cmp
in
arpl
popa
insl
js
movsl
int3
push
loopne
jl
cs
sbb
ljmp
test
daa
pusha
pushf
lds
mov
cmpl
ja
fidivs
sub
int3
or
xchg
push
clc
dec
scas
sbb
xchg
sbb
mov
pusha
iret
ret
aaa
aam
pop
std
mov
mov
lahf
test
pop
lcall
scas
dec
popa
outsl
mov
sahf
and
mov
mov
mov
lock
xchg
xor
bound
sbb
xor
mov
xlat
adc
dec
xchg
adc
loope
lds
roll
mov
mov
std
mov
xor
lret
pop
loop
test
aam
sub
stc
fdivrs
mov
mov
inc
mov
sahf
and
push
popa
mov
push
push
fmul
jl
jb
lods
xchg
jo
fidivl
test
ds
mov
sarb
mov
out
scas
popf
cmpsl
loopne
loope
mov
mov
mov
sbb
add
inc
stc
mov
popa
jae
push
aad
push
mov
xor
test
test
leave
jmp
andb
lods
movsl
sub
fwait
add
mov
rcrl
mov
addb
inc
orl
mov
fstl
iret
xchg
insb
xor
mov
mov
push
imul
jge
xchg
mov
rcll
dec
leave
fdivrs
xchg
mov
test
imul
mov
lcall
and
aam
adc
mov
out
cltd
inc
mov
jno
pop
test
arpl
pusha
stc
sbb
lahf
mov
pop
test
adc
inc
nop
int3
mov
les
dec
es
mov
gs
lret
xchg
xchg
dec
xor
lock
clc
sub
adc
aas
mov
lods
rcr
mov
xchg
xor
stos
and
and
mov
jno
push
in
fdivrs
adc
fwait
repz
stos
inc
mov
pop
jo
mov
inc
lds
pop
incb
divb
xchg
ss
mov
mov
jg
mov
add
mov
jne
cmp
or
popa
lods
inc
fisubs
mov
ret
add
mov
daa
lds
pop
adc
stos
dec
xchg
mov
sub
jbe
xor
loope
stos
mov
loopne
imul
mov
mov
ja
int
fidivrl
aam
and
and
mov
cmp
cmpsb
adc
and
mov
repnz
mov
mov
imul
in
lcall
pusha
sub
addl
pushf
mov
mov
xchg
cmc
jo
inc
fucomi
adc
fwait
pop
call
xchg
xor
imul
push
mov
xor
repz
pusha
push
mov
mov
mov
push
and
in
mov
gs
fsubrs
std
out
push
or
lret
adcb
aaa
mov
aam
mov
ret
cld
sti
cmp
inc
dec
jb
ja
fdivr
jno
mov
jns
mov
cmp
mov
push
stc
inc
fnstenv
movsb
mov
mov
mov
pushf
movsl
mov
dec
outsb
mov
jl
ljmp
or
add
mov
dec
jo
std
test
cmc
and
pop
mov
arpl
daa
lahf
push
or
mov
lret
inc
jo
loopne
adc
xor
pop
mov
mov
and
xor
test
xor
into
shll
jnp
dec
adc
mov
fisubs
es
adc
les
lods
mov
inc
and
mov
or
testl
out
scas
fs
cmp
pop
mov
and
add
faddp
sbb
fcmovnu
lcall
icebp
mov
mov
xlat
mov
pop
cmp
aad
loope
divb
push
fdivs
ret
push
aaa
sahf
data16
pop
inc
iret
mov
dec
cmp
dec
adc
push
sub
sbb
enter
in
dec
jb
jo
fnstenv
jbe
shll
fidivl
loope
or
mov
mov
insb
jecxz
in
into
popa
xchg
out
int
xor
test
mov
mov
xchg
negl
pop
imul
rclb
push
scas
or
leave
mov
call
add
or
lret
jbe
fidivs
scas
xchg
cmp
cmpsb
arpl
cmpsl
mov
jne,pt
mov
sbb
iret
stos
mov
mov
pop
out
sub
mov
stos
inc
repz
gs
xor
ds
sbb
add
add
movsl
jle
cmp
xor
push
dec
pop
push
inc
sub
sbb
adc
scas
jbe
lods
cmpsl
mov
inc
xor
aaa
push
push
mov
icebp
mov
dec
mov
lock
add
jnp
dec
mov
out
add
sub
test
and
in
icebp
mov
ret
sbb
mov
ja
sub
movsl
cmp
pushf
test
and
arpl
movsb
aas
pop
into
mov
insl
stos
mov
lret
icebp
dec
lock
dec
lods
lcall
xchg
push
xchg
cmpsb
divl
cmpsb
jg
push
loop
pop
cmp
shll
cltd
test
jmp
data16
pop
xchg
pushl
adc
cmp
out
mov
sub
inc
movsl
sbb
mov
mov
cmc
jmp
test
cmp
mov
add
pop
mov
sbb
cmp
scas
cs
in
mov
fcmovb
icebp
je
scas
jmp
pop
pop
jne
and
xchg
xor
pop
xor
out
inc
dec
sbb
jnp
test
in
je
iret
xor
call
ljmp
pushl
mov
xor
add
mov
xchg
push
notb
es
mov
fcompp
xchg
jg
mov
mov
fsub
test
and
in
mov
xchg
inc
xor
mov
stos
jnp
fbstp
cmp
xor
sbb
inc
push
ret
xorl
xchg
push
mov
bound
cmpsl
aam
push
lods
insl
add
nop
mov
push
xchg
std
lods
stos
sbb
js
mov
sbb
movsl
push
lods
pushf
xchg
mov
icebp
mov
and
imul
mov
add
push
xorb
rol
movb
jecxz
movsb
xchg
adc
mov
loop
mov
and
negl
das
lds
cmp
iret
mov
lret
dec
mov
sbb
arpl
push
jns
lahf
xor
outsb
sbb
add
push
add
mov
xchg
movsb
in
nop
ja
xor
ret
push
mov
mov
mov
mov
jnp
sub
jp
into
mov
sbb
jge
inc
fdivrl
popf
push
adc
ja
inc
push
adc
push
mov
cmc
mov
fbstp
cmp
lods
aaa
pop
pop
jne
fs
pop
mov
ljmp
mov
stos
or
enter
dec
das
je
jae
mov
add
add
mov
inc
cmpsb
aad
fnstenv
inc
mov
push
mov
mov
fs
jo
mov
mov
add
sub
imul
in
push
lock
push
dec
mov
in
cwtl
jne
rol
mov
inc
jnp
lods
pop
fstpl
mov
pop
adc
or
mov
aad
xor
xor
dec
dec
fsts
xchg
cltd
leave
ret
mov
stc
pop
push
or
pop
test
mov
je
xchg
aaa
mov
iret
bound
push
push
or
xchg
in
rcr
in
adc
and
mov
test
mov
cmp
push
fwait
pusha
sbb
lret
push
out
xor
pushf
cs
enter
ja
mulb
imul
push
stos
das
cmp
mov
cltd
lcall
push
in
pop
cmpsb
aaa
into
mov
fisubrl
cmpsb
mov
mov
mov
stc
jecxz
enter
cmp
icebp
lock
or
lods
into
mov
inc
aad
pop
mov
rorl
xor
addl
mov
into
push
ljmp
jg
sbb
ja
mov
repz
pusha
int3
test
jp
data16
adc
cld
mov
push
push
dec
mov
loope
ficoml
mov
pop
subb
enter
and
adc
dec
lds
pop
test
or
movsl
pop
inc
pushf
mov
sub
ret
mov
mov
mov
inc
cwtl
mov
divl
arpl
mov
push
mov
adc
es
mov
xor
into
test
add
fldcw
aas
out
mov
inc
lret
sub
push
add
jne
out
mov
cmp
cmpsl
ljmp
mov
pop
lahf
mov
daa
push
call
add
sub
cld
addl
adc
enter
ds
sub
pop
adc
adcl
cmpsl
hlt
cli
mov
mov
jl
xchg
mov
cwtl
cmp
cmp
cli
mov
dec
xchg
jae
std
xor
ror
sbb
ljmp
test
sub
or
xor
mov
mov
jg
cwtl
sbb
xchg
mov
dec
cmpsb
lret
mov
adc
push
adc
add
lods
and
cmp
mov
ss
test
lret
jnp
stc
add
sbb
and
mov
inc
mov
sbb
add
jp
push
mov
sub
mov
dec
sub
lcall
jnp
or
mov
jbe
ljmp
add
sbb
mov
push
std
mov
pop
out
dec
jo
imul
mov
cld
or
pop
push
mov
lcall
xor
xchg
sbb
and
add
xchg
cld
mov
test
sbb
jle
shr
outsb
mov
in
cwtl
ljmp
mov
out
mov
push
scas
pop
jb
pop
mov
push
mov
mov
pop
mov
daa
xchg
mov
int
push
pop
ret
adcl
imul
jp
into
xchg
inc
test
out
es
pop
aam
mov
and
ds
cmc
sbb
mov
and
shl
loop
xor
mov
mov
cmp
dec
shrl
mov
push
add
add
and
cmp
js
push
xchg
jno
ficomps
test
jns
sub
loope
adc
enter
mov
aad
xchg
jbe
shrb
mov
mov
pop
inc
je
mov
cmpsb
jge
inc
ret
mov
fwait
lea
dec
inc
cmpsb
test
push
xor
and
inc
stos
rorl
sti
mov
mov
mov
xchg
pusha
imulb
or
stos
lahf
sbb
jg
dec
jbe
dec
mov
out
in
jo
pop
data16
shlb
inc
xchg
xchg
push
stc
or
adc
and
and
pop
mov
mov
inc
into
pushf
movsl
aaa
mov
out
mov
aam
mov
cmp
dec
sar
mov
movsl
adc
push
lds
notl
mov
mov
hlt
jo
jge
mov
mov
pop
pop
jb
iret
inc
mov
xlat
sub
pop
lods
dec
add
xchg
xchg
cmp
mov
clc
jo
repnz
add
xor
cmp
xchg
mov
test
jle
inc
mov
lret
pop
mov
stc
mov
test
and
scas
xchg
xchg
mov
bound
dec
mov
jnp
lfs
mov
test
xor
iret
mov
adc
push
lods
das
xchg
aaa
popa
test
cmp
cli
xchg
cmp
lret
mov
std
andl
iret
loope
into
push
ja
mov
and
sub
sti
lock
pop
aam
mov
pop
fcompl
and
sub
je
outsb
es
mov
std
inc
movsl
mov
pop
subl
int
xor
out
lcall
adc
cmp
xor
cwtl
aad
pushf
dec
mov
jnp
enter
xor
mov
mov
pop
test
mov
ljmp
mov
push
pop
and
sbb
ss
mov
mov
jmp
fdivrl
mov
mov
bound
test
push
int3
mov
pop
popa
inc
fnsave
mov
add
stos
lcall
gs
mov
and
fidivs
in
outsb
xchg
jnp
push
mov
sub
sbb
xor
outsl
in
or
daa
mov
add
popa
xchg
and
mov
ds
fsub
adc
rorl
sub
cmp
cmp
jmp
das
mov
mov
jno
adc
shr
inc
mov
mov
cwtl
addr16
mov
add
ja
pop
push
cmpsl
xor
mov
push
shl
out
mov
cmp
jne
je
jo
fwait
sbb
sti
ljmp
push
push
xchg
dec
out
repnz
ja
mov
dec
jae
cmpsl
xchg
xchg
fildll
addr16
xchg
scas
movsl
sub
pop
iret
jne
mov
mov
cltd
cwtl
enter
mov
movsl
lods
dec
in
in
xchg
aaa
push
sahf
fmul
push
clc
test
adc
jb
dec
xor
pop
roll
mov
mov
push
lods
push
jl
mov
cmp
push
hlt
inc
clc
lret
mov
fistps
xchg
push
fs
mov
test
add
inc
mov
mov
mov
xchg
scas
jo
out
fbstp
insb
shrb
mov
jbe
es
popf
pop
outsl
inc
cmp
arpl
fs
sub
subb
mov
js
adc
in
mov
lcall
or
fwait
mov
jp
arpl
pop
cmp
xchg
fisttpl
mov
hlt
xor
cmp
jo
xorb
jl
arpl
les
in
mov
push
xor
jb
cmp
mov
sub
and
adc
push
sbb
fildl
mov
sbb
push
popa
xlat
lahf
scas
aas
add
jmp
jl
xor
mov
gs
dec
push
pusha
or
notb
mov
inc
ljmp
xor
loop
xor
sbb
insl
fildl
insl
test
mov
mov
aad
mov
cmc
test
cmp
addr16
out
push
mov
loopne
js
test
fiaddl
cbtw
jp
mov
pop
arpl
cmp
lods
inc
pop
sbb
sub
xorl
fsubr
scas
fimuls
pop
lret
icebp
cmp
xchg
cld
xchg
fdiv
test
shlb
clc
inc
lods
push
mov
or
shlb
nop
and
or
call
mov
lock
cmpsb
in
cmp
fs
pusha
fadds
mov
pop
and
scas
popa
mov
mov
xor
ja
mov
movsl
sbb
dec
inc
shrd
rcll
add
push
shrl
repz
outsl
mov
xor
popf
mov
ficomps
add
cli
sub
mov
scas
mov
xchg
jnp
loop
bound
ret
popf
movsl
xor
dec
pop
je
out
pop
or
out
scas
lcall
in
mov
push
mov
xor
int
and
mov
xchg
movsb
in
mov
and
pop
stos
jne
pop
mov
je
je
inc
push
mov
push
xchg
lea
mov
mov
das
mov
inc
xchg
cmp
sub
xor
ja
mov
push
sbb
mov
mov
cwtl
scas
fucomi
or
push
hlt
sahf
scas
iret
mov
mov
pop
hlt
add
fistpll
jge
inc
xor
outsl
lods
popf
mov
jns
add
inc
std
jnp
push
imul
dec
pop
mov
fwait
add
stos
pop
pop
in
shlb
mov
mov
aam
dec
mov
scas
and
mov
call
lods
push
xor
add
xor
pop
dec
mov
ds
sub
push
sub
push
cmp
xchg
xor
divb
shll
push
cmpsl
xor
push
sbb
jno
fs
icebp
call
repz
jmp
mov
jnp
mov
sub
cmc
dec
call
mov
adc
dec
shufps
std
mov
mov
xor
mov
mov
inc
and
add
add
daa
inc
xchg
or
insl
xor
faddp
test
sub
fwait
insl
dec
fnsave
mov
popf
fnstenv
je
mov
xchg
sub
filds
sti
repz
jns
xor
xchg
jo
nop
mov
insl
fcoml
mov
dec
outsb
inc
out
lcall
sbb
sub
sub
enter
dec
cmp
scas
adc
sbb
aam
popf
xchg
mov
out
mov
es
push
dec
ja
pop
mov
pop
ds
les
notb
mov
pop
call
cmp
aad
pop
lods
pop
insl
jp
xchg
and
xor
mov
cmp
mov
dec
cltd
out
ss
mov
adc
xor
call
mov
push
outsb
mov
inc
mov
jb
xor
and
mov
sarl
xorb
inc
mov
call
xchg
lahf
in
jns
cmp
inc
lret
dec
inc
xchg
mov
push
xchg
or
mov
mov
scas
mov
add
cld
jb
inc
loopne
lock
xor
inc
and
ret
ds
mov
pop
repnz
ror
fnstsw
sarl
out
ret
lods
enter
mov
mov
mov
add
aam
mov
testl
xor
push
cmp
xchg
scas
mov
cmp
mov
repnz
inc
sbb
std
stc
rclb
js
jno
inc
xchg
jns
repz
adc
and
je
jb
jbe
int3
mov
lods
je
cld
add
js
mov
adc
in
pop
pop
aaa
shr
dec
mov
xchg
or
outsl
add
hlt
aas
scas
mov
mov
sbb
test
jbe
xchg
les
xor
mov
bound
sbb
dec
jnp
cmc
xor
inc
cmp
test
jge
xor
jg
mov
stos
bound
movsb
push
fnstenv
pusha
cmp
shr
mov
xor
adc
dec
push
mov
out
mov
out
stc
xor
stos
mov
and
mov
xor
cli
subb
fnstsw
aam
cltd
ljmp
gs
dec
imul
lea
outsb
mov
int3
mov
repnz
sbb
sahf
push
mov
in
andl
xchg
jl
sbb
cmp
test
and
xchg
push
xchg
adc
cmp
divl
mov
inc
mov
pusha
dec
insl
addl
mov
insb
and
and
lret
jno
andb
fnstenv
mov
leave
dec
dec
inc
cmp
call
mov
and
gs
or
pop
mov
jb
cmc
cmpsl
mov
sbb
and
add
mov
rcrb
sub
mov
mov
ja
push
rcrl
jl
jne
rcrb
scas
jp
jbe
rep
sub
aam
xchg
jbe
adc
mov
pop
out
icebp
sbb
sti
into
push
mov
testl
popf
xor
mov
sub
adc
daa
push
dec
mov
fistps
inc
into
xor
sub
adc
jo
mov
pop
fsubr
cld
and
mov
lea
jbe
fsubs
insl
stos
cmc
adc
pop
xor
movsl
jg
into
insl
and
std
push
loopne
pop
lock
pop
ja
mov
out
or
xchg
nop
shlb
fs
in
mov
and
stos
jbe
mov
scas
popa
movsl
lods
mov
lret
ja
mov
imul
or
roll
mov
inc
mov
pusha
mov
jno
or
movsb
push
add
lahf
shrb
mov
imul
mov
push
or
aam
mov
mov
les
jae
nop
adc
pop
mov
fsubrs
xor
shlb
pop
xor
mov
mov
inc
dec
pop
pushf
imul
cmp
mov
adc
ljmp
fildl
icebp
xor
imul
push
outsb
test
cmpl
ja
dec
lods
out
push
mov
jno
mov
push
shll
lds
push
ja
lods
pop
ljmp
out
out
xor
inc
mov
daa
adc
mov
mov
fisttpl
cli
ret
loopne
cmpsb
xor
or
xchg
mov
jmp
adc
in
iret
gs
jbe
xor
sbb
dec
push
sbb
or
loopne
test
xor
jmp
je
bound
pusha
mov
les
loop
jmp
aaa
adcl
mov
xchg
shll
ret
cwtl
adc
dec
cmp
mov
mov
popf
jbe
sbb
xlat
jmp
inc
or
sub
mov
jnp
xor
xchg
jl
mov
xchg
bound
lret
cmpsl
mov
sbb
mov
daa
cmp
xor
mov
out
cli
insl
pop
ret
add
push
inc
in
repz
push
mov
cli
aam
jp
mov
pop
mov
fs
jns
lods
jecxz
repnz
xor
outsb
in
out
lcall
push
enter
hlt
addr16
movsl
mov
lahf
push
add
cwtl
out
xlat
ljmp
push
jmp
jb
xor
ret
aas
clc
hlt
mov
xchg
aaa
mov
sub
cmp
dec
push
jne
rcrl
sarb
lahf
push
scas
cs
addb
mov
xor
out
dec
add
adc
icebp
sub
notl
sbb
jecxz
inc
jbe
push
xor
gs
lret
xchg
icebp
loop
test
les
mov
addr16
push
arpl
lcall
mov
and
test
fidivs
mov
mov
stos
add
orb
outsl
add
dec
test
popa
mov
adc
mov
lret
int3
cwtl
push
sub
cmpsb
aas
dec
xchg
adc
enter
mov
std
sub
mov
xor
mov
cmp
in
push
adc
jne
in
scas
aad
loope
mov
pop
mov
mov
xorb
frstor
test
fildll
movsl
enter
aam
cmp
cmpb
pop
sub
mov
mov
pop
push
pop
pop
or
and
iret
les
mov
xchg
test
or
push
lea
mov
repnz
sub
xchg
pop
mov
sub
arpl
lret
mov
std
data16
or
mov
addl
jl
in
cmp
mov
jo
ljmp
mov
mov
data16
mov
xor
test
cli
inc
jl
jle
cmp
out
push
sub
outsl
sub
inc
cld
mov
std
ret
xor
cmp
dec
mov
push
push
mov
shr
cmp
movsl
mov
dec
hlt
xchg
inc
xor
sub
lret
ss
dec
sbbb
test
jp
xor
arpl
std
jne
dec
mov
int3
and
repnz
pushf
mov
mov
add
mov
xor
fwait
mov
invd
gs
aas
loopne
repz
test
xor
mov
scas
mov
jmp
jecxz
mov
xor
add
fwait
repnz
jle
lods
clc
push
loopne
and
adc
cmc
xchg
jg
xor
jge
cmpsl
les
mov
aad
repnz
ds
pop
xor
adc
or
out
fs
in
insb
fstpl
pushf
popf
pop
rcl
in
ret
mov
mov
int
sti
scas
mov
inc
pop
out
push
sbb
pushf
test
xor
ret
cld
mov
mov
and
test
lods
dec
inc
add
nop
dec
push
mov
das
mov
iret
xchg
cmc
and
call
jo
out
daa
hlt
shr
sbb
dec
mov
fwait
mov
test
call
dec
pop
imul
or
sbb
mov
out
pop
imul
mov
pop
push
mov
ret
enter
xor
mov
jbe
mov
xchg
inc
xchg
xchg
add
icebp
mov
mov
cmp
mov
xlat
mov
xor
adc
std
add
adc
sbb
enter
xchg
sub
pop
and
paddsw
or
push
dec
aas
repz
sub
mov
je
add
sub
loope
mov
sbb
add
inc
lahf
fdivs
das
xchg
ret
pop
push
dec
sbb
mov
xlat
repnz
mov
icebp
or
mov
subl
cmp
mov
jge
push
xchg
rorl
rol
pop
add
stos
cmpsb
loop
std
icebp
cli
mov
repnz
popa
shl
xchg
mov
shlb
mov
sub
imul
push
mov
lods
push
out
lods
je
or
call
movsb
push
dec
test
sub
jno
int3
mov
mov
dec
into
xor
mov
outsl
pop
pop
fdivrl
aaa
imul
rcll
es
sub
and
jmp
push
fcoms
dec
std
ljmp
mov
sub
push
mov
and
and
adc
fs
xor
push
ror
rol
dec
mov
pushf
xor
add
mov
cltd
push
and
repz
sbb
lret
shr
idiv
and
ljmp
jge
add
pop
xchg
pop
hlt
movsl
scas
sub
cmp
mov
fstpl
mov
add
int3
mov
mov
or
cmpsl
xchg
cmpl
mov
lret
sub
ret
and
mov
jle
mov
addr16
xchg
jl
insb
jp
jg
sub
cmpb
dec
dec
dec
inc
addr16
fcmovbe
sbb
add
mov
fnstsw
xchg
pop
dec
mov
hlt
adc
fdivr
mov
mov
cmp
xor
sbb
lea
lock
mov
dec
jne
jmp
add
loope
das
popa
mov
jb
enter
cmp
mov
mov
adc
fidivrl
inc
fwait
scas
mov
fcoml
ss
add
scas
pusha
out
and
sub
addr16
dec
push
dec
add
lock
lods
scas
hlt
adc
cmp
and
add
mov
mov
out
cmpsb
xchg
mov
xchg
xor
xor
aaa
out
leave
mov
jmp
cmp
push
fcom
imul
pop
sub
ja
mov
fs
repnz
clc
jns
aaa
xchg
xchg
das
es
mov
or
jecxz
lods
dec
loopne
add
push
xor
mov
adc
in
insl
into
pushf
rcll
mov
sahf
mov
in
pop
jns
int3
ja
jne
mov
add
adc
dec
arpl
jmp
mov
test
lds
test
lods
pop
sbb
mov
adc
push
aam
mov
xchg
jle
and
xor
aaa
xor
cmp
lods
int
sarb
xchg
mov
jb
imulb
inc
in
shrb
test
fnstcw
movsb
shll
out
xchg
sbb
mov
xchg
stc
mov
ss
push
dec
dec
dec
xor
outsb
in
cmp
pop
xchg
jmp
lea
mov
addb
int
mov
nop
sbb
mov
push
cmpsb
jnp
mov
iret
into
lea
lods
mov
push
js
mov
add
mov
ljmp
pop
mov
add
mov
lcall
sbbl
mov
jp
dec
xor
pop
sbbl
mov
dec
in
movsb
mov
xor
push
cli
jo
and
rclb
push
xlat
cmp
dec
push
test
addr16
sbb
push
cld
adc
lahf
cltd
fbstp
or
jnp
sub
jp
jnp
aad
aam
loop
xor
fimuls
repnz
add
mov
mov
or
pop
pusha
xchg
stc
dec
or
pop
add
mov
cld
adc
clc
mov
std
jae
dec
call
jb
ljmp
xchg
jns
xchg
sub
cmpsb
adc
sub
jno
sub
add
in
addr16
enter
gs
mov
je
arpl
mov
data16
sarb
inc
mov
decb
inc
inc
mov
shl
pop
jmp
push
sub
repz
or
xchg
cld
xor
mov
clc
push
and
mov
das
xor
xlat
jae
mov
add
mov
sarl
sub
xchg
cmp
mov
add
in
mov
mov
call
into
icebp
pop
inc
les
adc
sub
insb
jmp
cli
xchg
test
mov
mov
jb
mov
test
mov
mov
xor
mov
lret
dec
xor
inc
in
addl
daa
test
xchg
mov
je
jno
sti
mov
icebp
mov
push
mov
ror
mov
rorb
jnp
cmp
fwait
xchg
test
push
js
imul
out
enter
ss
mov
stos
jge
xor
sti
xlat
ja
aaa
sbb
outsb
xchg
fidivrl
jecxz
push
inc
and
popf
cmc
xchg
ret
mov
sbb
out
xchg
pusha
mov
xor
mov
jg
sub
jbe
mov
ljmp
jnp
dec
mov
rorb
mov
mov
in
mov
sbbb
jmp
cmpsb
xchg
jnp
bound
mov
fdivs
insb
cld
nop
mov
ret
push
mov
movsl
pusha
imul
mov
pop
bound
mov
and
sbb
scas
mov
scas
or
mov
dec
rcl
xchg
jle
push
mov
fisttpl
inc
mov
testb
icebp
xchg
inc
mov
into
les
xchg
and
add
imul
cmc
mov
jno
addr16
mov
pop
out
cmp
clc
mov
mov
bswap
inc
jne
mov
fwait
test
shr
inc
stos
shll
jp
imul
sbb
call
es
js
xchg
pop
xor
fwait
ret
add
mov
stos
imul
push
mov
jle
mov
outsb
out
push
adcb
pushf
fwait
shll
fs
fsubs
pop
test
pop
inc
xor
mov
stos
push
sbb
mov
pop
pop
push
mov
filds
outsl
adc
bound
je
fcoml
ret
xor
push
xor
mov
sub
inc
and
sbb
push
cmp
outsb
add
popa
daa
jge
fcmovnu
les
mov
int3
add
push
mov
fsubl
jne
add
cmp
inc
scas
mov
loop
push
pop
and
mov
in
and
scas
adc
loope
and
cmp
shll
cwtl
mov
dec
pop
mov
jle
sahf
lock
aaa
jne
mov
repz
aad
call
adc
pop
push
jne
js
test
fwait
iret
and
lods
push
cmp
inc
cmp
es
xchg
xchg
fsubrl
mov
or
mov
xchg
insb
xchg
loopne
xchg
sbb
inc
and
push
hlt
popf
lahf
and
lods
mov
jmp
mov
rorb
fistl
push
push
stc
stos
in
mov
sahf
or
sbb
rcll
cld
mov
movsbw
cmpsb
in
cmpsl
add
mov
xchg
cwtl
jno
mov
clc
test
mov
sbb
or
test
and
push
mov
or
stc
out
dec
xor
mov
sub
add
mov
or
mov
add
mov
aas
pop
mov
mov
test
arpl
pop
scas
hlt
lods
inc
push
mov
cs
test
dec
push
mov
xor
pop
sti
hlt
iret
mov
cmpps
ret
adc
pop
jo
testb
test
push
mov
mov
outsl
adc
dec
adc
cmc
xor
lds
test
mov
pop
jl
out
or
mov
dec
jbe
push
jle
or
testl
sub
sbb
add
test
imul
jo
mov
ss
sbb
adc
and
cwtl
jmp
outsb
std
mov
clc
or
aad
sbb
mov
mov
mov
push
or
jbe
mov
add
fs
sub
mov
test
adc
fcomi
cld
jo
push
mov
je
mov
lret
jmp
iret
mov
movsb
sbb
icebp
movsl
pop
push
loopne
adc
je
sub
mov
cmp
jnp
int3
dec
xchg
mov
into
jo
in
cmp
add
mov
or
nop
and
adc
adc
xor
mov
dec
test
test
or
inc
push
test
pop
cs
cwtl
out
scas
xor
xlat
push
aas
sub
mov
cmp
nopl
xor
in
int3
and
add
sarl
shlb
adc
push
movsl
lods
sub
std
pushl
xor
mov
inc
pop
fsubs
pushf
lods
mov
xchg
add
cld
mov
sub
lock
and
loopne
std
push
mov
das
mov
mov
pop
cmp
dec
mov
inc
cli
movsb
sbb
scas
mov
pop
lods
dec
mov
ret
cmp
mov
mov
adc
mov
adc
sub
mov
inc
fxam
lret
icebp
add
mov
or
xchg
das
push
dec
add
in
inc
fildl
xor
pop
add
out
lret
std
mov
les
mov
pop
pop
jo
bound
lahf
pop
loop
mov
fs
or
xchg
mov
push
sub
fidivrs
stos
in
pop
inc
add
daa
call
loop
mov
sbb
mov
mov
add
mov
inc
jge
fidivrl
in
xlat
mov
jmp
movsl
cld
mov
nop
popf
daa
xchg
bound
jge
es
xchg
jbe
xchg
cmp
xchg
sti
xchg
or
les
mov
mov
mov
sub
inc
pop
in
mov
push
fst
in
rorb
sbb
push
insl
inc
mov
mov
das
jg
test
mov
xchg
jb
fidivs
jno
jl
pop
leave
sbb
lret
jbe
xor
mov
mov
incl
push
out
mov
lret
jle
call
or
ret
or
jb
jnp
in
pop
std
cwtl
mov
lret
adc
dec
inc
mov
test
popf
into
ljmp
mov
jns
popa
xchg
push
in
jne
xor
pop
arpl
adc
enter
add
xlat
mov
mov
or
in
shlb
clc
js
ret
test
jge
jo
lods
and
cmpsb
rorb
int3
mov
mov
test
loop
xchg
mov
and
stc
ljmp
push
add
mov
dec
dec
cmc
sub
lock
ja
jg
adc
inc
out
orl
cwtl
movsb
arpl
or
pop
or
sub
mov
mov
cmp
xchg
or
stos
sub
mov
inc
mov
add
mov
inc
and
cmp
aaa
pushf
test
add
xor
scas
cmp
test
std
lahf
push
mov
aaa
dec
jg
push
sahf
dec
dec
outsl
addr16
add
sub
adc
cmc
stc
cmp
mov
push
aaa
or
add
divl
inc
movswl
mov
xchg
sub
push
or
jp
stos
xor
mov
fistpll
ret
adc
xchg
cltd
mov
mov
out
sub
xchg
mov
pushf
mov
cmp
lods
jo
xchg
jae
sub
mov
ror
cmpsb
nop
cmp
adcb
addr16
out
ret
cmp
out
outsb
ja
sub
icebp
movsb
mov
pop
add
mov
mov
hlt
sub
xchg
clc
hlt
push
outsl
mov
pop
mov
insl
les
clc
mov
ret
jp
popa
lods
inc
scas
aas
push
cmpsb
addr16
les
inc
aas
repz
pop
sub
cmp
stc
nop
inc
outsl
movsl
sub
and
or
mov
stc
stos
pop
loop
gs
pop
pop
cli
inc
xchg
or
inc
mov
and
lods
inc
out
enter
es
xchg
int3
add
mov
sbb
add
jl
fmuls
sub
mov
inc
lret
adc
mov
jecxz
ds
cld
fistps
push
jmp
jg
int3
sbb
cmp
push
mov
addr16
mov
mov
rorl
nop
sub
stc
les
cld
imul
divb
in
mov
xor
add
cmc
or
mov
inc
es
inc
jecxz
loop
add
je
and
sti
fstps
mov
ss
xchg
js
push
shlb
ret
xchg
imul
mov
icebp
shl
cs
xchg
mov
ss
mov
mov
jb
adc
mov
mov
cvtdq2ps
mov
bound
mov
cld
add
mov
pop
fwait
push
xchg
inc
adc
in
leave
mov
jo
and
int3
hlt
xchg
dec
xchg
xor
cmp
inc
xchg
mov
mov
lret
mov
shlb
dec
hlt
fidivrl
sbb
imul
jne
stos
mov
je
clc
jecxz
insb
mov
jb
cmp
xor
sbb
loopne
nop
je
iret
xchg
dec
das
xor
div
lcall
push
adc
lcall
daa
ret
fstpt
in
lea
dec
mov
inc
mov
cmc
mov
popf
dec
bound
jbe
mov
mov
mov
push
fidivrl
dec
cld
js
mov
xchg
stos
imul
adc
mov
movsb
jl
sub
scas
dec
mov
in
mov
mov
cmp
mov
in
dec
mov
in
imul
sahf
inc
mov
test
int3
cwtl
cmp
or
sub
mov
out
inc
xor
adcb
imul
sbb
jno
shll
pusha
fldt
adc
jo
dec
inc
lcall
push
dec
sarb
notl
jecxz
pop
scas
mov
sub
loopne
stos
jp
push
jp
scas
mov
add
jo
in
push
mov
out
mov
ja
jl
es
mov
popf
xchg
stc
xor
jecxz
jp
mov
pop
dec
nop
insl
data16
cmpsl
repz
jne
shll
jecxz
or
pushf
test
je
sub
xchg
cli
add
dec
daa
jg
mov
cmp
or
shll
gs
sbb
fs
popa
mov
cmp
stc
mov
imul
shlb
mov
mull
lret
icebp
sub
sbb
out
push
dec
iret
mov
int3
jmp
adc
notl
sub
js
xchg
addr16
xor
mov
xchg
and
int3
lret
cwtl
adc
loopne
cmpsl
sti
lcall
cltd
mov
jg
inc
iret
es
ljmp
mov
mov
xchg
aas
mov
adc
xlat
ja
sub
add
cmpsb
xor
ret
mov
movlps
cmpsb
xor
or
sub
in
pop
daa
xchg
mov
dec
and
jp
inc
stos
das
shl
out
sbb
dec
add
aam
sti
push
insb
cmp
xor
mov
push
xchg
add
and
lea
sbb
mov
mov
in
sbb
xchg
xor
pushf
cli
mov
loope
mov
sub
jl
shlb
mov
ret
sbb
mov
add
xchg
outsb
out
lahf
adc
aas
pop
mov
stos
call
sbb
shl
nop
push
pop
adc
mov
shll
jge
fisubrs
sub
mov
mov
cmp
mov
and
imul
pushf
pop
stc
out
inc
xchg
adc
mov
push
pop
fiadds
mov
scas
popf
xor
repz
mov
outsb
jg
shrb
mov
sbb
xchg
mov
or
ficoml
sub
sbbl
mov
push
fs
aam
aas
inc
xchg
cs
mov
out
xor
hlt
sti
ret
mov
sbb
pop
inc
adc
fs
jne
fucomip
mov
or
mov
cmp
sbb
fadds
pop
push
adcb
ja
pusha
arpl
ficoml
mov
loope
push
xorl
adc
add
subl
jno
scas
push
outsb
add
adc
je
or
pop
lahf
fisubrs
scas
xor
mov
and
test
fucomi
cmpsl
pop
nop
loopne
cmp
push
xor
pop
aam
mov
out
or
das
fists
sub
cmp
cmp
jb
xchg
test
negb
mov
or
sbb
mov
pusha
and
adc
jo
stos
inc
lods
dec
cmp
es
adc
mov
mov
sub
aam
mov
jge
leave
sub
and
stos
sub
std
pop
xor
lock
mov
aas
pop
ret
cmpl
std
dec
sub
xor
stos
inc
add
mov
nop
lds
repnz
in
xor
test
int3
fst
xchg
mov
cwtl
idiv
ja
mov
je
mov
int3
pop
mov
hlt
cmpsb
mov
mov
xlat
orl
ds
jmp
jl
hlt
cld
sub
cmp
mov
stos
xor
jecxz
data16
and
test
mov
int3
cmc
cmp
fisubs
xorl
push
lea
out
jo
lods
stos
stc
mov
sbb
jno
in
fnsave
iret
out
lock
adc
fwait
repz
sbb
outsb
aaa
cltd
mov
out
pusha
sti
repnz
arpl
js
int
je
dec
pop
jl
dec
xor
dec
or
cmc
xchg
add
inc
sbb
adc
mov
pop
lcall
in
hlt
cmp
movlps
pop
inc
test
adc
push
dec
into
adc
out
mov
shrl
jl
icebp
jo
xchg
stos
push
enter
mov
addl
mov
in
or
fmuls
pop
mov
xchg
cwtl
sub
and
insb
pushf
fnstenv
rcrl
repnz
mov
mov
xchg
test
fisubl
inc
pushf
mov
add
push
divl
jle
inc
mov
addb
cmc
inc
enter
xchg
cmpl
lret
xor
or
push
and
pop
jno
imul
daa
int
xor
jecxz
adc
mov
cmp
dec
xor
pop
sti
fnsave
inc
mov
scas
xlat
outsl
in
cmpsl
mov
xchg
push
adc
lret
mov
jp
fdivl
add
jno
sahf
bound
mov
dec
lods
xlat
rcl
test
and
sub
pop
hlt
fcmovnb
dec
pop
pop
mov
lea
jmp
mov
jge
daa
dec
pop
inc
xor
sbbl
mov
stos
fsubs
stos
dec
in
push
insb
mov
mov
dec
or
add
push
jl
mov
bound
xchg
and
pop
lret
pop
xchg
sub
shlb
cmp
push
inc
hlt
mov
jns
xchg
out
popa
test
and
cmpsl
rolb
push
pop
pop
mov
mov
fstpt
jne
jmp
out
dec
xchg
jns
jo
in
mov
cs
push
aad
fs
ja
aaa
jbe
xchg
xor
fsubr
sahf
pop
imul
mov
jl
dec
cmp
cmc
into
mov
xchg
mov
in
jne
pusha
push
call
test
fistl
insb
jge
or
in
scas
sbb
imul
push
cli
pop
push
sub
daa
pop
mov
mov
ror
push
push
stc
mov
das
mov
mov
lcall
inc
flds
ret
and
inc
data16
mov
cmp
lock
jg
and
movsl
xor
and
popf
mov
out
dec
xor
mov
negb
enter
stos
mov
sbb
rol
add
mov
xor
fwait
xchg
mov
sbb
hlt
cmpsl
mov
hlt
and
jae
xchg
into
jno
fcoms
mov
cmp
movsl
or
jmp
es
xor
rcll
push
mov
popf
mov
in
xor
and
jecxz
dec
xchg
iret
inc
pushf
xor
and
lods
push
test
inc
mov
icebp
add
sbbl
jno
in
xlat
and
ljmp
negb
testl
out
mov
daa
cltd
xor
lods
adc
addr16
mov
lods
jne
mov
sub
mov
push
jmp
mov
dec
mov
cmp
cmp
jl
jle
outsb
dec
mov
dec
lods
cwtl
cmpsb
mov
int3
clc
mov
imul
cmp
imul
call
xchg
out
pop
mov
int3
xlat
ret
fisttpl
loop
inc
fisttpll
in
or
mov
jmp
sbb
inc
dec
mov
adc
dec
pop
pop
xor
pushf
cmpsl
cmp
dec
jp
je
call
dec
or
pop
int3
mov
lods
mov
pop
into
ret
mov
int
mov
mov
loop
mov
push
fwait
popf
daa
shlb
mov
int
jmp
jbe
and
mov
and
je
aam
jbe
shrl
leave
cltd
add
mov
fidivs
push
cmp
mov
mov
popa
jle
sbb
je
jbe
xor
test
mov
mov
fistps
idivl
xchg
inc
mov
in
cmp
mov
jmp
xchg
sahf
ss
sbb
cmp
lea
adc
jge
mov
lods
scas
popl
xlat
dec
xor
in
js
mov
cwtl
or
mov
or
push
popl
out
xchg
aaa
mov
xchg
push
xor
pop
adc
clc
mov
push
mov
out
pop
fidivrl
add
mov
repz
jae
fnsave
add
and
cli
arpl
xor
mov
daa
gs
pop
pop
jg
jp
inc
xor
lock
jns
hlt
mov
scas
test
add
adc
cmp
mov
pop
jb
insb
or
rclb
mov
sub
xchg
push
movsb
out
iret
mov
dec
cmp
enter
inc
ficoml
ss
shlb
jo
js
mov
inc
ret
fwait
push
mov
or
sub
mov
cmpsb
dec
jbe
push
sahf
dec
hlt
call
mov
cmp
push
mov
mov
popa
mov
push
mov
sbb
pushw
mov
mov
popa
mov
cmp
cmp
sub
out
mov
mov
arpl
inc
mov
fsub
pop
dec
popf
mov
or
push
mov
mov
mov
pop
mov
dec
jns
jno
aaa
fld
mov
push
mov
shlb
adc
push
mov
cld
bound
and
mov
jb
pop
xchg
jbe
in
jg
sub
push
jge
aam
sbb
cmpl
inc
mov
ja
movsb
mov
jne
mov
pop
push
mov
jno
inc
enter
aaa
mov
sar
in
push
test
int3
xor
shlb
jae
sbbb
adc
test
stos
sub
mov
jg
push
mov
push
inc
dec
les
and
mov
mov
mov
bound
mov
cmp
leave
sbb
daa
push
arpl
or
xchg
push
div
inc
je
push
dec
cmp
stos
dec
cltd
xor
push
fstpt
dec
mov
mov
pop
mov
cmpsb
mov
loope
scas
les
imull
jns
jb
mov
jl
cmp
std
mov
inc
xlat
cmpsl
pushf
mov
mov
or
out
test
fwait
jb
aam
aas
and
jno
lods
add
xchg
inc
sbb
add
inc
mov
std
jne
dec
mov
lods
add
inc
cmpsb
dec
xor
loopne
subb
xchg
or
mov
and
add
jecxz
and
mov
clc
lea
inc
mov
pop
mov
push
xchg
rclb
sbb
cmp
dec
int
aaa
adc
icebp
push
pop
xor
stc
lcall
lret
xchg
mov
mov
push
xor
mov
mov
mov
rcrl
aas
mov
pop
adc
or
ret
cmpsb
xor
insl
mov
imul
adc
mov
dec
out
dec
push
and
ss
dec
scas
xor
cmp
repz
sbb
fs
mov
subb
jmp
mov
or
fs
push
jne
sub
inc
into
out
das
test
sbb
idivb
pop
int
pusha
nop
xorl
mov
sbb
fucom
cltd
pop
aaa
inc
mov
dec
inc
je
test
and
jmp
inc
movsb
repnz
mov
push
or
out
jl
mov
xchg
dec
adc
xchg
mov
mov
mov
fxch
and
mov
or
inc
push
ficomps
push
sub
scas
or
push
call
lret
into
jo
mov
xchg
mov
adc
arpl
mov
and
and
sbb
dec
divb
cmc
ret
dec
mov
lret
pop
data16
dec
jmp
mov
mov
test
call
je
xor
cmp
mov
jmp
out
sub
mov
lret
or
xchg
lahf
xor
xchg
aam
movsl
xchg
push
adc
dec
xlat
es
jl
loop
sarb
mov
mov
dec
xchg
js
mov
shlb
xchg
loopne
and
mov
push
jno
incl
sbb
lods
xor
xchg
jge
mov
out
sbb
lret
cmpsl
lds
mov
ljmp
mov
gs
cmp
dec
pop
mov
mov
mov
add
xchg
push
mov
mov
pop
mov
dec
jge
xor
adc
cli
mov
cmp
jmp
repnz
aas
sti
mov
or
mov
xchg
mov
test
stos
push
add
inc
leave
addb
cmp
push
pop
jae
popf
scas
or
icebp
push
mov
xchg
mov
and
push
sub
push
jecxz
test
cmp
or
mov
mov
jnp
push
mov
mov
ficomps
cmp
in
fdivl
cmp
push
mov
lret
sarb
xchg
xchg
cwtl
in
std
xchg
dec
mov
jo
xchg
cmpsl
mov
aaa
iret
cmpsb
lods
in
push
adc
mov
mov
fisubs
mov
aam
roll
pop
jbe
push
xor
mov
outsb
sti
push
int
arpl
iret
inc
or
lret
cmpsb
das
xor
pusha
push
push
enter
movsl
call
outsb
and
subl
sub
mov
xor
repz
mov
jns
xor
shrb
cltd
and
push
pop
mov
and
push
rcrb
enter
or
insl
fwait
xor
imul
mov
ljmp
mov
mov
int
sub
movsb
jecxz
hlt
add
cwtl
setl
out
xorl
mov
addb
mov
sub
push
pop
mov
insl
inc
push
cmp
test
mov
xchg
jp
and
dec
pop
mov
mov
in
in
cmp
cltd
mov
jmp
js
sbb
mov
fs
arpl
sahf
or
cmpsb
mov
nop
in
hlt
mov
jbe
and
push
add
sub
aas
mov
mov
jo
and
sti
xchg
ret
inc
jbe
sysenter
dec
mov
mov
push
popa
sub
push
in
mov
pop
in
jbe
jb
out
cmp
mov
test
mov
lods
aas
rcl
fwait
test
enter
cwtl
mov
mov
xchg
jle
pop
lret
adc
imul
push
jg
clc
mov
sbb
or
test
push
enter
loopne
int
rolb
mov
xlat
sahf
mov
ds
arpl
inc
jae
mov
outsl
lea
dec
stc
loop
or
adc
and
scas
outsb
xlat
mov
aam
pop
hlt
aas
cmc
sub
hlt
loope
mov
les
lods
adc
xor
cmp
mov
ficompl
and
cld
andl
jmp
pop
ret
add
pop
aas
xor
jbe
in
das
cmp
andl
test
mov
mov
movsl
and
je
cmp
sub
test
xchg
mov
call
cmp
cmp
push
jle
jne
aam
push
arpl
test
mov
jge
or
xor
xchg
cmp
xor
loopne
popf
iret
mov
shlb
push
xchg
movsl
sub
add
add
outsb
sbb
pop
jmp
dec
xor
cmpsb
jge
outsb
jl
add
bound
add
jmp
mov
adc
sbb
push
mov
xor
rclb
dec
imul
insl
test
mov
shlb
cmp
aam
lret
or
mov
pop
mov
mov
lds
js
stos
mov
pop
jg
add
or
pop
push
pop
lock
jbe
xorl
imul
sbb
dec
mov
jp
mov
push
ss
ds
icebp
into
and
jno
mov
divb
popf
sbb
or
push
insl
mov
stos
mov
xor
fldt
loope
mov
sti
xor
fadd
mov
cmp
mov
loop
into
xor
adc
and
sub
jle
jmp
inc
fcom
mov
nop
push
lcall
clc
movsb
dec
lock
jbe
add
jecxz
js
push
lods
out
mov
cmp
subb
adc
mov
mov
and
pushf
loop
push
jbe
rcrl
in
fbstp
mov
jecxz
out
xchg
mov
sub
sub
lods
pushf
adc
inc
adc
cld
rcrl
adc
in
adc
xchg
fcomps
jl
cmp
jmp
pop
in
or
aam
lret
mov
ljmp
sahf
jnp
cmc
xor
push
add
mov
jo
mov
mov
mov
cmp
cmp
lods
inc
mov
adc
push
pop
cmc
sub
loope
popa
hlt
and
les
jno
ss
jecxz
ja
ds
jg
pop
sbb
iret
mov
mov
popa
loope
xchg
daa
out
in
push
jns
mov
cmp
jl
cli
jb
dec
add
xorb
int3
aam
sub
push
mov
aam
add
popf
sbb
int3
mov
lahf
xor
and
outsb
cmpsb
dec
add
cmpsb
out
xor
cli
nop
xchg
aad
aam
iret
loopne
adc
adcl
xchg
cs
dec
xor
or
xchg
mov
sub
pop
imulb
cmp
ret
mov
sbbb
push
lret
mov
addr16
adc
pop
pop
loop
inc
lods
sbb
mov
fldenv
hlt
push
leave
das
mov
mov
pop
roll
inc
mov
push
faddl
jne
in
adc
aam
adc
mov
and
pusha
and
ret
scas
xchg
insl
pop
mov
cmp
push
inc
cmp
xor
jmp
in
insl
ss
lods
sbb
jecxz
mov
mov
repz
xchg
push
mov
test
mov
lods
test
inc
push
sbb
movb
adc
jp
subl
jne
xor
cmpsl
jns
lock
xor
adc
mov
or
stos
mov
xchg
sbb
xchg
mov
ret
mov
and
dec
hlt
fcmovu
mov
inc
or
lea
push
mov
inc
mov
in
out
jo
or
xor
mov
arpl
lret
mov
lods
pop
hlt
jno
lret
mov
out
out
test
stos
nop
icebp
jae
xchg
or
push
movsl
mov
fisubrs
xchg
xchg
lods
ds
pop
or
cmp
nop
test
shlb
push
jmp
arpl
enter
xchg
push
mov
sbb
push
jl
sbbb
test
add
adc
icebp
jb
mov
mov
mov
lods
xor
adc
adc
mov
femms
shll
das
sahf
mov
push
insl
in
jnp,pn
mov
jbe
andb
dec
movsl
das
testb
lock
sbb
jne
mov
and
lret
movsb
mov
jl
ss
psadbw
mov
loope
cld
mov
dec
jbe
mov
mov
popa
in
icebp
iret
sbb
cmp
mov
aam
rorl
pusha
mov
mov
lahf
cmp
in
pop
clc
mov
mov
jmp
adc
mov
shl
pop
mov
push
pop
aaa
sub
adc
ds
and
mov
dec
sahf
clc
jmp
add
pushf
test
std
test
ja
sub
pop
pop
jmp
cltd
jge
sahf
ss
data16
xchg
and
aad
cwtl
pop
out
movsb
test
pop
mov
adc
fmull
xor
fs
add
outsb
jnp
jp
ljmp
stos
out
ficomps
aaa
push
movsl
cwtl
mov
pop
pop
sub
fmuls
mov
cmp
mov
gs
push
add
dec
cld
xor
mov
pop
cmp
mov
push
sub
inc
pop
lock
out
mov
mov
shll
shll
or
and
mov
lcall
mov
nop
sub
repnz
cmp
or
lods
les
cmp
push
fisubl
int3
adc
pop
lret
mov
mov
and
xlat
push
jbe
xor
test
dec
gs
adc
mov
sti
add
mov
or
push
lods
xorl
ds
stc
fwait
and
and
add
mov
cmp
sub
add
push
mov
mov
test
push
jae
pop
mov
or
in
sbb
sarb
jg
popf
sbb
pop
cmp
repz
icebp
mov
or
mov
xor
jp
cmp
pop
xor
push
or
bnd
pusha
jle
sub
sub
fidivs
cmpsl
lods
push
mov
mov
jae
and
fs
sbb
cmp
repz
test
shll
mov
out
scas
push
stc
test
cld
pop
clc
sarl
mov
inc
mov
arpl
popf
jmp
fscale
enter
push
or
nop
dec
loopne
jo
dec
push
jge
lret
jbe
mov
incl
inc
out
loop
xor
dec
and
jne
out
push
int3
xchg
push
sbb
mov
mov
mov
aas
add
int3
fmul
jb
and
jp,pn
in
push
mov
push
xor
fnsave
jmp
cmc
mov
pop
addr16
add
leave
int3
repz
mov
sbb
xchg
sbb
hlt
stos
dec
cs
into
adc
aaa
roll
mov
dec
jbe
push
or
mov
in
pushf
lret
or
lret
ja
and
outsb
push
fidivrs
mov
rcr
xor
gs
sbb
pop
adc
cmp
mov
call
and
in
jecxz
xor
dec
jae
or
push
lcall
clc
into
xor
movsl
sbb
xlat
divb
dec
stc
mov
ret
imul
mull
popa
sub
adcb
mov
lds
leave
mov
dec
cmp
movsb
loope
cmc
in
mov
das
push
shl
mov
mov
in
jnp
xchg
xor
lret
cld
testb
mov
pushf
or
enter
rolb
ss
mov
fistpll
imul
fsubrl
mov
call
je
jns
cmc
mov
mov
adc
cltd
dec
js
mov
cld
and
mov
movsl
stos
or
mov
or
in
mov
adc
xlat
and
stos
lods
shlb
es
cmp
xchg
ja
mov
sbb
adc
mov
shll
lea
cmp
cld
pop
fwait
mov
add
nop
stos
mov
cld
inc
sub
jne
mov
je
add
mov
repz
pusha
repnz
jg
imul
add
je
out
pop
push
jb
popf
mov
movsb
push
and
sbb
lods
repnz
inc
adc
test
sbb
jle
aam
lods
mov
loope
sti
mov
aad
add
jmp
loopne
sub
cmpsl
mov
push
mov
pop
jae
cli
lds
out
mov
jp
lock
je
mov
inc
jl
insl
push
outsb
sbb
movsl
mov
xlat
mov
mov
cmc
xor
adc
xchg
mov
cmp
pop
jmp
test
mov
popa
daa
outsb
add
mov
xlat
push
aam
cmp
loope
inc
notl
les
std
lods
mov
xchg
dec
test
push
cmc
movsl
dec
pop
jb
push
hlt
dec
cld
loope
call
divb
pop
pop
push
mov
ret
and
ja
mov
mov
jle
mov
pop
les
clc
cld
shrb
xchg
popf
nop
cmp
mov
or
movsl
push
xchg
fmuls
mov
sub
mov
cli
mov
mov
fldt
data16
mov
mov
adc
add
iret
sbbl
pop
mov
je
jne
mov
je
xchg
scas
pop
mov
pop
leave
shlb
in
cld
out
gs
dec
jmp
xor
mov
mov
mov
cmpsb
fdivrs
stc
mov
lea
je
inc
xor
sub
mov
jno
mov
cmpsb
ret
shl
cli
cwtl
cmpsb
sub
add
add
stc
add
loopne
mov
test
mov
int3
sbb
add
mov
inc
xor
push
add
divb
lcall
jle
testl
xchg
xchg
mov
insb
es
test
lods
jmp
test
xchg
dec
sub
fidivrl
mov
fistpl
inc
lods
into
clc
movsl
sbb
rcll
stos
jle
dec
mov
jne
adc
mov
rcl
cli
mov
mov
mov
cmp
mov
loop
xor
adc
cmpsb
or
cmpsl
xor
push
jnp
mov
pop
js
fwait
mov
mov
je
pop
mov
jo
jecxz
addb
jle
out
push
cwtl
bound
mov
mov
pop
mov
inc
mov
add
dec
jbe
inc
cmp
mov
inc
fucomip
loopne
push
mov
fldenv
sub
push
mull
les
or
mov
aam
leave
cli
xor
add
lods
cld
arpl
add
fs
push
cmpsl
outsb
mov
stos
fildl
divb
adcl
sub
dec
lret
add
cmpsl
clc
dec
mov
or
dec
mov
xchg
cmp
aad
add
lret
adc
mov
xor
sarb
lods
cmp
mov
aam
gs
fisttps
je
mov
bnd
mov
mov
int3
cwtl
pop
idivl
shrl
in
jbe
lahf
pop
xor
movsl
dec
imul
adc
push
shl
mov
pop
add
push
lds
fimuls
mov
jne
sub
mov
in
daa
mov
and
mov
into
xor
adc
push
add
sbb
add
inc
data16
jae
stos
dec
icebp
mov
sbb
ret
mov
scas
fwait
lea
lds
add
sub
idiv
mov
out
mov
pop
je
sbb
pushf
imul
cmpsb
and
ja
scas
ss
pop
mov
sbb
lods
in
shll
xchg
mov
mov
mov
aas
jbe
mov
rcrb
push
addr16
add
xchg
cmp
mov
fisubrs
mov
fnstenv
adc
mov
inc
pop
je
inc
loopne
mov
fcoms
dec
movsl
inc
adc
jmp
add
jo
mov
daa
add
pusha
mov
sarl
in
pop
mov
mov
push
pop
mov
push
sub
add
mov
pop
sub
loop
bound
call
mov
cmp
aaa
imul
iret
mov
loope
mov
fsubl
xchg
mov
into
mov
mov
inc
mov
mov
jge
test
mov
cmp
mov
jl
test
mov
push
push
jnp
movhps
ds
jp
clc
xor
in
aad
cs
call
push
jb
pop
shll
fists
xchg
and
sbb
xor
movsb
divl
mov
adc
inc
mov
je
xchg
shll
cmp
add
xchg
scas
cmc
xor
push
mov
xor
mov
adc
add
inc
mov
cltd
movl
mov
dec
ja
jnp
jne
mov
dec
xchg
add
xchg
push
push
fldt
aam
push
mov
ja
push
fcmovbe
mov
cmp
dec
test
xor
jns
mov
das
sbb
fidivs
enter
fidivrl
xchg
jecxz
dec
adcb
jae
sub
hlt
mov
push
mov
cmp
inc
mov
inc
sbb
mov
test
push
fwait
sbb
mov
xchg
leave
in
inc
mov
mov
in
outsb
mov
int
xchg
sub
popa
mov
push
or
xchg
inc
xor
jbe
test
dec
cwtl
arpl
mov
lods
xor
dec
adc
mov
xchg
mov
inc
dec
aam
xor
jp
xchg
jb
mov
pop
ror
insb
scas
jb
cmp
lods
xchg
adc
stc
mov
das
in
adc
loopne
cwtl
pop
outsb
sahf
icebp
push
jne
xor
hlt
loope
mov
popl
sub
popa
fcmovb
cmpsb
mov
dec
test
mov
shr
push
loope
add
in
mov
sbb
pop
test
rorb
cs
mov
test
mov
stc
aaa
cmp
inc
bnd
add
addr16
movsb
fcoml
xchg
pop
leave
aad
add
mov
dec
cwtl
or
mov
cmpsb
push
movsl
push
dec
mov
cmp
les
mov
lret
test
aaa
mov
js
ja
stos
cmp
mov
test
and
mov
lods
push
les
cmp
mov
jo
add
sub
leave
fadd
inc
add
pop
mov
jbe
iret
cmp
popf
push
and
mov
jg
and
pop
xchg
fcmovne
pop
aaa
xchg
das
in
filds
adc
mov
mov
or
and
pop
les
push
inc
push
lods
add
pop
aaa
je
fmul
adc
cld
std
hlt
sub
mov
pusha
xchg
mov
lret
xchg
dec
es
movsl
aas
and
mov
sub
fwait
mov
pop
cmpsb
mov
jns,pt
out
repz
cmpsb
push
xchg
roll
sub
cld
push
int
mov
std
or
test
or
mov
stos
inc
ret
sbb
pop
xor
pop
jge
jbe
lcall
mov
shlb
jg
leave
fs
cmp
icebp
or
mov
test
dec
shlb
sub
loop
mov
cmp
push
pop
fmull
cmp
pop
sbb
test
mov
cmpsb
es
inc
cmp
mov
dec
sbb
mov
sbbl
mov
sti
in
or
add
or
daa
insb
in
mov
pop
xchg
add
scas
int
fs
hlt
sbbl
and
out
daa
add
xor
cmp
lahf
sub
jae
test
aad
popf
je
lfs
dec
ljmp
or
xchg
mov
ss
enter
cmp
push
adc
pusha
mov
aas
and
dec
push
mov
mov
xor
cmc
push
popa
lea
mov
pop
push
lods
adc
and
ret
hlt
mov
cwtl
int3
cmp
push
enter
mov
hlt
mov
and
xchg
lret
inc
or
mov
int
call
inc
shlb
sub
test
subb
aam
out
popf
cmc
dec
loopne
out
sbb
pop
add
push
mov
sub
xchg
scas
rcrb
ja
ret
xchg
xor
jnp
and
mov
js
cwtl
mov
pop
enter
cmp
mov
gs
mov
push
jge
in
popf
lds
xchg
add
xchg
out
push
and
jo
inc
clc
mov
inc
mov
pusha
out
dec
lret
mov
imull
cmp
mov
movsb
xchg
dec
icebp
xor
mov
inc
and
pop
and
jl
and
in
out
sub
mov
pop
jecxz
sbb
popf
jae
lods
or
sub
adc
xchg
imul
adc
movsl
in
adc
pop
cmp
aas
mov
inc
dec
mov
mov
dec
xor
mov
fmuls
jle
repz
sbb
and
mov
repnz
js
cmp
test
loop
mov
adc
rep
lahf
xor
sbb
rorb
sub
jmp
mov
cmp
xor
adc
cmp
ds
sub
hlt
sub
sbb
mov
mov
pop
dec
in
and
jp
rorb
icebp
mov
sbb
lods
lods
inc
mov
xchg
divb
adc
pusha
jecxz
jbe
in
scas
pushf
add
sbb
inc
mov
idiv
xchg
insl
mov
out
push
and
mov
cmc
xor
cmp
adc
sahf
repz
mov
push
mov
inc
outsl
loope
mov
mov
push
pop
sahf
ret
out
mov
mov
or
sub
shlb
js
mov
jo
ljmp
faddl
imul
loopne
push
push
icebp
mov
xor
push
mov
xchg
dec
cmp
inc
fidivs
repz
lea
mov
pusha
mov
xchg
movsl
stos
imul
shlb
das
xor
mov
lret
jle
mov
cwtl
and
sbb
fcoml
inc
pop
xchg
insl
sub
aas
push
mov
popf
sub
lods
sbb
cli
mov
pop
inc
mov
popa
in
hlt
push
stc
cltd
fsubrs
jmp
and
ret
push
cmp
loopne
push
cli
push
mov
faddl
push
int
dec
xchg
lock
mov
inc
sbb
stos
hlt
mov
or
insb
sub
or
adc
jae
sbb
idivl
and
std
into
mov
rep
popf
sti
stc
shrl
xchg
pop
add
test
jne
xor
shl
ss
mov
adc
push
jae
pop
idiv
test
bound
mov
stc
shlb
sub
add
sub
mov
jp
fldcw
adc
lret
repz
push
cmp
pop
lock
pop
or
scas
mov
xlat
cltd
mov
xor
and
stos
jp
mov
jge
lods
mov
adc
test
mov
cmp
inc
loopne
mov
mov
ds
push
ljmp
scas
pushf
pop
lret
hlt
daa
mov
cmp
mul
data16
subl
int
fcoms
jns
ja
jg
stc
mov
xchg
js
cwtl
iret
adc
test
mov
lds
hlt
ds
mov
add
imul
movsb
or
ss
and
push
jge
and
pop
sahf
sti
das
xor
dec
pop
lods
hlt
jno
mov
scas
xor
and
jb
mov
gs
popf
dec
mov
hlt
jbe
push
fstpt
js
pop
in
xchg
xor
daa
stc
jbe
mov
lds
mov
or
jmp
xor
push
mov
pop
xor
mov
inc
imul
lock
xchg
xlat
cmp
ret
int3
cmp
popl
mov
push
or
int3
testl
leave
mov
into
mov
test
mov
xor
fsts
pop
popf
jae
stos
mov
pop
xor
enter
sbb
push
mov
or
sahf
jbe
movsb
xor
stos
gs
lcall
dec
subl
cmp
mov
cwtl
xor
sub
mov
fidivl
fwait
std
divl
icebp
scas
aam
cmp
mov
ja
pop
and
adc
mov
sbb
adc
mov
mov
cmp
mov
dec
add
call
xor
xor
aam
push
xlat
push
cmp
in
cwtl
leave
mov
rorl
lcall
jge
cltd
rcll
mov
mov
mov
movsl
push
bound
lret
and
jae
pushl
std
push
aas
je
sub
les
imul
fwait
mov
rcrl
pop
cmp
cwtl
je
sub
cmpsb
ror
cwtl
js
mov
push
inc
shlb
mov
mov
jg
and
jnp
sbb
mov
push
test
scas
xchg
arpl
add
mov
js
addb
cmpsb
inc
adc
mov
inc
jmp
xlat
cmp
test
pop
mov
nop
and
push
in
out
ds
mov
pop
cmp
insb
cmp
mov
mov
test
ret
std
or
push
and
inc
movsl
or
or
sbb
lea
out
adc
or
movsl
adc
rcll
fistpll
mov
ja
loope
movsb
out
imul
push
sub
adc
andb
lret
push
sar
push
cmpsb
adc
xchg
mov
in
mov
adc
lret
std
jmp
push
sub
xchg
out
mov
xor
inc
push
push
mov
mov
inc
imul
cmp
inc
jne
mov
gs
stc
mov
and
or
pop
out
mov
int
pusha
pop
mov
andl
arpl
movsl
mov
out
xlat
aas
orb
push
mov
xchg
sti
pop
outsl
adc
adc
inc
push
das
pcmpeqb
cmpsb
mov
mov
mov
and
xor
xchg
test
cmpsl
adc
push
mov
push
mov
push
cmp
dec
jo
adc
jnp
mov
xchg
cmp
adc
mov
push
bound
xchg
push
out
cs
sub
lret
or
pop
mov
mov
inc
popf
sarl
or
pop
jle
sub
pop
test
xchg
cmp
mov
cltd
push
shl
push
dec
dec
mov
pop
fistl
mov
aad
pushf
mov
mov
add
or
sbb
mov
addl
mov
outsl
pop
jge
mov
movsl
js
rolb
dec
mov
stc
hlt
jp
enter
repz
jg
aam
test
sbb
movsl
lahf
int
aam
jne
ret
cmpsb
cmp
psubb
adc
push
sbb
mov
das
mov
pop
mov
les
mov
mov
lods
or
push
xor
push
and
icebp
sbb
sarb
xchg
adc
dec
push
int
and
sbb
mov
sbb
sti
push
movsl
push
jae
mov
sub
xchg
mov
and
mov
inc
cmpsl
mov
mov
jecxz
dec
rclb
mov
subl
lods
cli
or
out
xchg
fldenv
mov
arpl
xlat
mov
jecxz
push
xchg
je
xor
mov
jl
ret
mov
jbe
cmpsl
adc
and
dec
sub
movsl
inc
test
cmp
jg
add
jns
sahf
mov
out
fcom
aam
mov
pop
or
repnz
push
mov
cwtl
sbb
insl
inc
leave
ds
jno
cld
mov
push
pushf
inc
mov
lods
jl
adc
loope
outsb
add
mov
xchg
das
add
or
xor
aam
pushf
mov
into
movl
fsubrl
mov
and
push
mov
jg
push
inc
jmp
lds
mov
fistps
sub
or
mov
pop
cmpl
inc
push
lcall
mov
xchg
sub
dec
mov
inc
test
mov
or
add
inc
push
pop
les
stos
ljmp
loop
lods
xchg
mov
inc
ror
mov
sbb
sbb
mov
mov
xchg
pop
js
scas
xor
sti
or
icebp
sub
adc
add
insl
adc
addr16
daa
cwtl
mov
pop
mov
popf
mov
add
hlt
mov
lods
cmpsb
mov
pop
and
mov
mov
cld
cltd
sbb
les
jns
or
add
mov
cmp
iret
adc
mov
ja
push
xchg
repz
fwait
dec
mov
xchg
data16
xchg
imul
mov
in
hlt
sub
xchg
pop
popl
inc
jl
xchg
pop
es
fidivs
add
insb
mov
adc
lock
lods
stc
cltd
dec
mov
xchg
nop
mov
dec
push
mov
jmp
in
mov
mov
mov
or
lret
cmpsl
push
xchg
mov
inc
xor
arpl
mov
pop
cmpsb
ds
outsb
sub
push
add
mov
push
int3
fcmovbe
mov
sub
xchg
xchg
into
lret
add
pop
movsl
adc
out
xchg
lods
mov
fsubr
push
inc
pop
cmp
mov
fcmovne
sub
xchg
mov
mov
sti
pop
mov
rcll
in
sarb
or
mov
lahf
pop
cwtl
adc
icebp
or
cmp
addr16
stos
mov
stos
mov
xchg
xor
xor
int3
lret
mov
lret
push
pop
in
mov
mov
add
mov
std
add
cmpsl
cltd
push
mov
lcall
mov
adc
sub
rol
movsl
imull
push
pop
cmp
mov
daa
scas
popa
dec
inc
pop
mov
repz
mov
fimull
cs
out
xchg
loop
mov
push
fidivs
enter
mov
pop
cwtl
mov
sub
stc
pusha
pop
xor
jp
sbb
stos
add
arpl
mov
and
scas
insb
rclb
xor
or
xchg
fwait
jecxz
ja
ret
sbb
negl
repz
ja
scas
call
cwtl
mov
jmp
icebp
or
inc
je
adc
fiadds
pop
popa
sbb
xchg
fsubs
rcrb
std
mov
mov
dec
js
mov
sarb
mov
adc
into
test
or
pop
test
add
pop
mov
dec
mov
gs
mov
sbb
mov
addb
mov
cmpsb
mov
mov
call
pop
and
mov
je
sub
mov
xchg
add
xchg
movsl
loopne
rcl
xor
mov
scas
insl
cwtl
mov
clc
xor
cli
xorl
add
xor
cmpsb
jno
fidivrl
ret
mov
inc
sahf
jbe
dec
push
mov
aad
xchg
add
cmp
push
pop
mov
das
lcall
mov
repnz
stos
daa
mov
cmp
sub
call
mov
mov
les
or
movsl
and
ljmp
ds
jg
and
fbstp
subl
leave
xor
in
mov
sbb
inc
js
jg
mov
aam
test
and
fs
mov
adc
into
fstps
xorb
lret
faddp
dec
es
ffree
mov
out
sub
lcall
enter
mov
inc
dec
pushf
data16
push
xor
mov
lods
pop
dec
mov
test
out
out
sbb
inc
dec
xor
and
sbb
push
cmp
mov
dec
sbb
scas
xchg
cmp
shll
les
sub
mov
cmp
jp
jns
shlb
add
lods
les
testb
in
mov
clc
mov
mov
repnz
mov
sub
xchg
ljmp
repz
dec
xchg
and
lret
sub
iret
mov
mov
inc
inc
mov
mov
add
sub
adc
icebp
push
push
mov
mov
xorb
sbb
sbb
mov
shr
out
xchg
shrl
mov
sbb
push
mov
jns
mov
nop
divl
sarb
outsb
xchg
adc
pop
outsl
dec
mov
and
mov
lidtl
xchg
cli
shl
popa
sbb
mov
icebp
xchg
xor
adc
and
mov
lret
jno
js
mov
stc
mov
xrelease
cltd
aad
dec
mov
leave
or
sbb
shlb
xorl
mov
and
cmc
fsubrl
mov
lret
or
mov
sub
pop
mov
push
cli
inc
jp
xchg
fdivl
ret
mov
iret
dec
and
int3
mov
mov
negl
dec
movsl
xchg
inc
pop
cmp
sbb
jnp
mov
lcall
sub
fbstp
les
adc
pop
mov
pop
or
inc
fs
mov
sub
inc
mov
les
mov
pop
lret
ficoml
mov
and
pushf
xlat
divl
shll
shrl
mov
ret
add
rcr
scas
sti
jne
icebp
jg
dec
mov
das
sub
arpl
push
cmp
lods
addr16
inc
sbb
mov
cmp
out
and
mov
adc
cltd
loope
jnp
lods
cld
aad
or
loop
int
mov
lods
jle
movsb
popf
dec
mov
inc
xor
mov
test
imul
mov
mov
scas
cmpb
pop
pop
nop
or
inc
jne
mov
push
outsl
lret
mov
data16
xchg
cwtl
sub
shlb
enter
and
jecxz
jo
push
mov
mov
popa
ret
pop
and
unpcklps
mov
out
push
mov
jge
ljmp
testl
mov
jns
fsubp
pop
cmp
mov
xchg
jbe
shll
cmpsb
mov
mov
xchg
sbb
scas
mov
dec
mov
ss
test
mov
in
ret
fsub
bound
icebp
imul
mov
sahf
adc
mov
aam
fsubrs
mov
in
xchg
xchg
mov
inc
dec
xor
jl
lods
pop
mov
xor
mov
add
inc
loope
pop
sub
mov
jmp
stc
or
pop
push
pop
stos
xchg
and
jp
jne
mov
stos
cltd
and
adc
fcompl
cmpsl
icebp
adc
insl
mov
mov
dec
test
pop
lods
mov
test
sub
scas
rcrb
mov
not
movsl
adc
jnp
mov
or
sub
aas
test
xchg
out
sub
jmp
mov
rcll
sahf
mov
repnz
cltd
test
and
mov
and
push
xchg
pop
cmp
mov
jnp
clc
mov
pop
mov
mov
inc
dec
xor
jb
fisttpll
inc
add
mov
fstpt
popa
mov
push
dec
ljmp
int3
push
stos
inc
setle
lods
mov
fs
pop
clc
pop
jb
mov
nop
test
mov
sahf
pusha
xor
fmuls
mov
mov
mov
cwtl
ret
popf
mov
mov
push
mov
mov
rclb
out
mov
outsl
inc
mov
sti
cmp
xlat
cmp
das
xchg
mov
pop
pushf
out
jnp
shl
cmp
push
les
cli
aam
adc
ds
fimuls
orb
pop
loop
push
push
dec
push
mov
aam
outsb
scas
enter
mov
push
popa
add
pop
push
mov
cmp
stc
ljmp
scas
xchg
js
or
xchg
lds
push
sahf
ret
pushf
ja
cmp
cmpsb
pusha
jg
fnsave
jmp
xorb
dec
jae
or
sbb
dec
adc
xlat
mov
cmp
ljmp
pop
mov
stos
mov
mov
lahf
in
cmp
outsl
call
push
daa
jne
pop
mov
test
hlt
mov
in
mov
push
out
jl
xor
stos
daa
ret
jae
or
cld
jge
rolb
ja
fimull
jo
outsb
mov
lds
test
mov
mov
jnp
cmp
mov
sti
pusha
shl
mov
add
adc
add
push
and
jmp
cmp
mov
pop
mov
mov
add
dec
ljmp
popl
sub
push
mov
or
fwait
outsb
cmp
pop
mov
xor
cwtl
movsl
mov
inc
das
mov
sub
test
cmp
inc
out
mov
les
loop
test
mov
dec
adc
sbb
ds
stc
dec
mov
mov
aas
hlt
mov
test
add
xor
test
pop
ss
jns
cmp
cld
insl
out
adc
pushl
popa
hlt
fwait
mov
rorb
lea
mov
hlt
pop
xchg
lds
xchg
push
scas
cmp
dec
mov
xchg
inc
cwtl
les
lds
idivb
jl
mov
je
push
xchg
mov
mov
cmp
mov
negb
mov
xchg
push
push
pop
mov
dec
push
mov
xchg
adc
dec
sbb
je
les
or
call
and
mov
push
mov
es
ffree
call
mov
and
and
insb
sub
movsb
adc
cmp
icebp
imul
xchg
sarb
inc
subl
mov
sahf
xchg
mov
inc
jno
in
adc
pop
mov
pop
stos
in
mov
adc
shll
shlb
or
mov
jge
xor
cmpsb
pop
mov
imul
int3
jne
add
mov
and
scas
mov
pop
roll
mov
outsb
add
arpl
out
sti
aas
sub
mov
jbe
pop
mov
add
dec
movsb
outsl
fwait
inc
fadds
mov
fisubrs
js
cltd
sub
enter
inc
fdivl
daa
mov
addb
and
adc
fwait
mov
inc
test
add
push
dec
lea
xchg
sti
stos
push
inc
pop
mov
mov
and
inc
inc
jae
into
int3
mov
adc
lret
je
pusha
stos
push
mov
test
lcall
sub
insb
push
mov
mov
mov
data16
jo
popa
mov
cmp
addr16
aam
icebp
mov
dec
out
cmpsb
dec
pop
dec
jmp
loopne
andl
inc
mov
add
test
mov
in
addr16
fst
or
push
hlt
pop
xchg
inc
cli
xchg
cwtl
cld
out
mov
imul
or
fmuls
mov
daa
in
mov
cmp
adc
jp
stos
fdivp
rorb
dec
aas
mov
mov
fildl
inc
sub
dec
xor
push
push
mov
push
repz
shlb
stc
movsl
mov
stos
fwait
lcall
xchg
ret
xchg
and
je
push
xor
lods
xchg
jbe
or
cmp
push
out
jb
xor
push
pusha
rcrl
and
jne
add
ret
jmp
mov
insb
and
daa
add
mov
cmp
clc
es
sub
sub
add
xchg
ret
or
mov
push
mov
mov
mov
lret
dec
lods
je
mov
and
mov
push
push
lds
sarb
sub
pop
sbb
mov
jo
andb
in
xor
mov
cmp
mov
mov
or
dec
insl
mov
imul
rclb
mov
jo
mov
stc
lods
jp
ret
ret
mov
movsl
xor
mov
cmp
jnp
dec
mov
mov
neg
cmp
adc
adc
xchg
push
mov
mov
sub
mov
mov
cmpsl
push
pusha
hlt
jecxz
sti
sbb
mov
jbe
pop
adc
jno
sub
mov
arpl
js
scas
aaa
cmpsb
push
xchg
insb
mov
fucomi
popf
lods
xorl
sbb
mov
out
inc
inc
sub
cmpl
cld
sub
pop
push
cmp
jnp
test
ss
ja
jmp
xor
cmc
sti
adc
mov
shll
fiadds
xchg
repz
xor
aam
mov
lock
pop
xor
mov
clc
js
push
mov
add
mov
stos
mov
push
mov
push
inc
sub
xor
test
sbb
xor
sbb
sub
sbb
lret
shll
movzbl
cmpl
aam
add
xor
movsl
mov
cltd
insb
cwtl
out
lods
add
xchg
jo
dec
mov
iret
and
push
add
popf
data16
mov
cltd
clc
or
fistps
or
mov
call
pop
out
mov
jbe
fcoms
inc
lret
sub
xchg
jae
mov
sub
mov
mov
push
push
aas
or
jae
mov
push
pop
sub
push
testl
rolb
pop
jns
pop
mov
cs
sbb
repnz
lds
scas
stos
and
loop
in
mov
xor
pop
xor
add
sarb
mov
push
jecxz
dec
xchg
cld
lods
push
or
popf
mov
adc
je
loopne
shll
rcr
jne
add
sbb
imul
push
mov
xchg
es
sbb
cld
mov
mov
mov
mov
jns
jb
out
inc
pop
mov
mov
icebp
xchg
cwtl
in
je
inc
stos
mov
inc
jg
cmc
xor
enter
mov
and
mov
ror
cmpsb
cmc
adc
adc
lods
dec
push
stos
mov
mov
lds
daa
and
test
inc
dec
ds
sbb
lret
movsl
jecxz
jo
in
adc
dec
cmp
jl
dec
xor
test
lock
mov
jp
lods
inc
dec
aam
bnd
and
iret
mov
xchg
inc
adc
ret
hlt
pusha
jge
mov
sub
mov
loop
or
mov
loopne
lock
add
hlt
xchg
sbb
loop
clc
dec
xchg
stc
mov
and
inc
pop
mov
xor
mov
adc
and
pop
inc
rclb
imul
mov
lock
mov
dec
scas
adc
mov
out
xorb
es
push
lcall
sub
dec
jns
mov
mov
dec
push
outsb
jp
mov
pop
mov
inc
cmpsb
jno
pop
shl
mov
mov
mov
adc
cmp
mov
mov
mov
bound
pop
nop
mov
or
push
mov
push
xchg
ljmp
mov
dec
mov
cwtl
imul
xchg
jge
mov
hlt
inc
and
ja
xchg
xor
movsb
int
fcompl
dec
lahf
ljmp
sbb
adc
arpl
test
mov
aaa
cmpsl
stos
xchg
mov
adc
push
lods
xchg
and
sarb
je
pop
push
mov
mov
cmp
push
mov
loopne
lret
pop
into
sbb
mov
inc
xchg
pop
fwait
mov
hlt
aam
out
clc
push
sbb
out
mov
mov
popa
xchg
and
mov
xchg
out
scas
test
jle
imul
mov
xor
mov
add
push
mov
mov
subl
call
bound
sbb
mov
push
jg
push
pop
jae
cmp
stos
mov
fcmovnb
lret
add
jecxz
fidivs
adc
outsb
ret
pop
jp
mov
mov
popa
scas
pop
jmp
out
dec
sbb
mov
mov
jne
mov
scas
shrb
or
lods
addr16
sahf
push
jae
jno
add
jns
out
mov
jns
insl
fisubs
or
lock
lods
cli
mov
xchg
add
lods
call
lahf
mov
xor
or
pop
inc
xchg
ja
xor
ja
test
ret
jecxz
add
cmp
mov
repnz
sbb
hlt
shl
add
push
fiadds
mov
arpl
push
fwait
ds
cmp
mov
add
cmp
xchg
movsl
push
rorb
in
cmpsb
test
mov
cmp
jne
jb
cli
cwtl
sub
dec
pop
add
mov
fnstenv
scas
inc
xlat
scas
clc
xchg
jns
sbb
pop
mov
enter
imul
aam
aad
loop
add
lods
adc
xchg
and
jecxz
jge
mov
sub
aas
js
sbb
jp
aad
cmc
mov
dec
mov
enter
jp
xor
or
dec
cmpsb
or
arpl
sub
aas
enter
lods
bound
das
pop
push
xor
pop
mov
push
addl
test
mov
xchg
ret
loop
lahf
test
pusha
mov
sub
std
pop
jl
jbe
mov
ficoml
div
mov
fcmovnbe
adc
popf
dec
or
jb
cltd
pop
insl
icebp
mov
test
dec
movb
test
in
insb
mov
cld
mov
in
sbb
in
fldenv
aaa
mov
push
or
lcall
adc
sub
pop
inc
call
lea
inc
jb
aad
inc
aas
cmp
out
mov
mov
push
jno
mov
shrl
mov
mov
sub
test
mov
pop
jnp
or
adc
add
mov
pushl
call
xchg
out
pop
push
ja
std
loop
les
mov
shlb
xor
add
mov
cmp
mov
jg
fs
sarb
pop
mov
scas
cmp
shlb
inc
jae
pop
cld
xor
inc
dec
aam
or
orps
mov
int
lahf
mov
dec
jle
lret
arpl
loope
in
outsb
scas
mov
rcl
mov
add
dec
pusha
fidivl
cmp
pushf
push
scas
and
mov
mov
mov
outsl
mov
into
lahf
cmp
aam
sbb
test
mov
mov
sbb
daa
aam
negl
mov
cmp
es
cmp
roll
movsl
jae
cmpsl
ss
or
aam
mov
movsb
cld
pusha
ds
push
lret
out
mov
mov
stc
mov
sbb
ja,pn
cmp
call
add
fcompl
push
add
xchg
dec
mov
mov
pop
sbb
lods
lods
push
fcompl
std
je
shlb
loope
sbb
mov
mov
fsts
cli
in
mov
dec
jmp
jle
mov
xor
or
mov
inc
mov
jge
cmp
cmpsb
or
xor
xchg
out
inc
xchg
fdivs
adc
movsb
cmpsb
icebp
cwtl
pop
xor
mov
cmp
cmpl
push
andb
imul
adc
pop
sbb
hlt
inc
mov
mov
or
jge
push
mov
or
pop
je
lods
adc
and
fsubrp
mov
lahf
mov
in
jle
addb
cmp
mov
mov
insb
rcll
jne
jno
inc
xchg
cmc
cmp
repnz
mov
sbbl
mov
xor
mov
in
movsb
dec
int3
lods
in
adc
std
lock
lods
pushf
out
dec
mov
jo
push
mov
mov
addr16
fistpll
loop
xchg
mov
xchg
daa
pushf
lret
xchg
cmpsl
xchg
cmpsb
inc
add
push
test
and
jae
xor
ss
in
cs
adc
lods
mov
xchg
or
ja
mov
cltd
mov
mov
dec
test
pop
loop
cld
push
pusha
addr16
or
lock
repnz
test
lods
movsb
add
mov
pop
out
call
xchg
sbb
sbb
xchg
jnp
shr
ljmp
xchg
sub
push
inc
mov
sub
loope
in
push
mov
sub
push
mov
jecxz
cwtl
pop
enter
xchg
push
pop
mov
test
mov
sbb
cmp
sbb
pop
mov
adcl
inc
jge
fbld
push
fsubs
cmp
xor
inc
mov
mov
xchg
pop
fwait
rorl
movsl
loopne
cmp
and
iret
xchg
jmp
xchg
or
je
out
add
mov
push
flds
mov
cmpsb
push
hlt
fidivs
sub
int3
add
cmp
sub
push
mov
cmp
in
push
jmp
mov
mov
in
dec
std
js
add
sbb
aad
les
jmp
push
jbe
popl
mov
mov
loopne
or
mov
jmp
xchg
mov
into
out
enter
and
xor
mov
mov
or
enter
ret
imul
and
shrl
mov
cmpb
mov
xor
mov
inc
and
mov
mov
fstps
adc
jb
test
xchg
int3
pop
cmp
jne,pn
mov
clc
mov
and
sbbl
in
outsl
xchg
pop
js
mov
into
nop
idiv
jno
cld
mov
and
fidivs
cmp
loopne
ret
mov
movsl
test
pminsw
and
cmp
inc
mov
into
fildl
push
int3
mov
shll
cmc
push
add
mov
sbb
xchg
xor
loopne
inc
pop
mov
jns
rorl
mov
mov
jo
mov
mov
sub
dec
adc
popa
add
fdivrl
jb
es
fldcw
sbb
daa
insb
cmpl
inc
xor
cmp
scas
fisubl
inc
or
mov
testl
push
dec
adc
lock
inc
ja
out
adc
lds
jbe
and
pop
stc
mov
jg
mov
adc
mov
addr16
rcl
loop
cmc
or
and
xor
enter
or
xor
cmp
xchg
cli
bound
mov
add
mov
sarl
jo
clc
mov
adc
cmp
mov
lea
push
mov
je
in
lds
adc
jecxz
cwtl
mov
jo
je
fsts
rorl
cmp
adc
add
notb
insb
ds
in
lods
pusha
aam
push
mov
and
stc
test
enter
inc
sbb
adc
ds
popa
pop
mov
test
aas
lcall
std
popa
and
call
movsb
repnz
cmp
xor
pop
mov
andl
in
mov
mov
out
ret
jnp
loopne
sti
jbe
dec
cli
lds
xor
fistl
jl
stos
mov
dec
xchg
adc
inc
pusha
add
shr
sahf
mov
fdivrl
and
mov
xchg
mov
lcall
cmpsb
jle
dec
aad
mov
and
lods
dec
loopne
xchg
stos
data16
xchg
cmp
loop
mov
test
push
fisttpll
leave
nop
mov
aad
sbb
jbe
ret
mov
or
rorl
xorl
loop
scas
js
mov
cmc
inc
mov
and
dec
push
mov
jae
aam
pop
mov
jle
push
iret
dec
mov
mov
add
cmp
js
std
xchg
jns
xchg
push
add
mov
cwtl
test
nop
push
lods
push
in
push
lods
xor
mov
addr16
in
lret
jg
pop
ss
hlt
mov
add
lock
mov
sub
mov
add
and
lock
mov
mov
je
pop
fnstenv
push
fstpt
adc
or
lods
and
rorl
in
dec
out
mov
wbinvd
iret
in
mov
jge
negl
pop
cmpsb
popa
sbb
adc
or
cmpsb
sahf
cwtl
cmp
int
add
in
and
mov
or
xor
adc
gs
fsubl
mov
push
aam
inc
cmc
mov
arpl
push
xor
pushf
hlt
pop
and
mov
push
sbb
test
fyl2x
ss
inc
mov
sub
push
in
sbb
sti
jle
mov
mov
cmpsl
fucom
mov
fsub
cld
cmp
cmpsb
fs
les
mov
lahf
adc
call
test
pop
stos
mov
dec
dec
out
test
or
mov
scas
not
jmp
mov
sbb
clc
xor
mov
out
sbb
jp
cmp
das
push
xchg
lods
out
mov
fistpll
mov
ficoml
mov
xchg
call
mov
in
mov
adc
out
aad
dec
in
push
sub
ror
push
or
push
cmp
jnp
lods
sbb
insl
and
mov
fwait
push
daa
xchg
jb
pusha
mov
jp
xchg
jg
jl
mov
insb
outsb
push
sub
repnz
jo
popa
mov
xor
lock
mov
or
sbb
push
mov
rcll
ds
cmp
stos
jbe
cmp
xor
std
mov
mov
ret
scas
mov
hlt
int3
xchg
fwait
cmp
ja
fbstp
mov
mov
in
mov
loopne
jg
dec
lahf
adc
jmp
int3
stos
mov
pop
xor
lock
sub
add
fnclex
fidivl
mov
xor
mov
ds
and
xchg
mov
and
stos
fildll
mov
es
int3
xchg
and
mov
ret
add
dec
xor
sarl
mov
xchg
mov
or
scas
cmp
rcrl
mov
lea
cwtl
inc
and
pop
xchg
jge
fcomps
mov
and
push
mov
jb
pop
imul
test
fisubrl
xchg
gs
pop
add
sbb
mov
sti
shl
mov
sub
cmp
inc
lds
mov
xchg
in
jne
xchg
insl
mov
inc
stos
pop
push
nop
lds
xor
dec
add
lret
xor
mov
mov
pushfw
inc
cwtl
adc
add
popf
mov
lods
jecxz
mov
inc
xchg
repz
xchg
leave
in
pop
mov
lods
dec
adc
enter
mov
in
mov
adc
out
mov
repz
mov
movsl
in
or
sbb
pop
ja
pop
xor
push
inc
out
bound
sbb
jae
sub
sbb
dec
add
cli
rorb
cmp
push
push
adc
lock
mov
inc
movsb
and
ret
test
hlt
shll
add
cli
mov
xor
icebp
mov
mov
cltd
xchg
mov
or
xorl
and
mov
test
push
xchg
push
xor
mov
mov
mov
pop
outsl
fbstp
mov
xchg
mov
aam
ret
in
cmpsl
fsubs
mov
rcr
xchg
xor
xor
jg
stos
dec
mov
daa
or
mov
rcll
add
ja
das
sahf
push
in
jne
ret
sub
outsl
xorl
enter
movsl
aam
test
cmpsb
lods
jl
sub
adc
or
in
xchg
mov
mov
aas
pop
add
mov
je
aad
inc
enter
pusha
shrl
push
hlt
jne
loopne
roll
mov
xchg
cmp
shrl
sub
mov
xor
xor
dec
cmp
add
xchg
mov
je
add
inc
and
mov
mov
out
dec
mov
loop
das
mov
arpl
cmp
in
add
mov
js
jnp
adc
test
mov
pop
in
adc
push
adcl
jp
jno
lock
dec
xchg
dec
and
lret
outsb
or
lds
adcb
and
xor
imul
adcb
push
xor
sbb
add
jb
sub
rorb
mov
sti
jecxz
pop
jl
mov
add
outsl
aas
dec
push
mov
push
jg
xchg
ret
xor
push
jbe
call
push
mov
test
in
xchg
add
mov
hlt
mov
divl
mov
mov
stos
inc
ficompl
mov
sbb
push
xchg
insb
mov
cmp
lcall
or
sbb
lods
js
mov
sub
inc
jb
xor
dec
mov
push
pop
or
or
in
pop
mov
es
jg
xor
sbb
mov
lods
imul
pop
mov
mov
int
cmpsb
jle
testl
sbb
shll
xorl
push
sub
idivb
jle
jnp
imul
push
mov
push
ljmp
mov
into
stc
int3
cmp
dec
fistps
cmpsl
mov
xchg
xor
ljmp
aad
lods
outsl
ss
repz
sbb
mov
xorb
mov
incb
mov
mov
shrl
stos
mov
leave
out
je
jo
dec
cmpsl
rorb
imul
divb
add
js
test
mov
mov
jge
push
cmp
pop
mov
loop
lret
jp
dec
jne
and
pop
hlt
xor
cld
mov
push
xchg
lock
or
pop
addr16
xor
jl
mov
xchg
out
sbb
sbb
sub
fdivs
add
call
push
shll
dec
mov
mov
xor
fwait
mov
and
addr16
and
ret
inc
divb
in
shll
mov
mov
xchg
data16
push
fidivs
mov
xor
mov
mov
nop
gs
push
push
mov
mov
mov
inc
or
push
mov
inc
icebp
mov
js
lods
add
xchg
stc
stos
push
mov
lret
nop
inc
dec
or
rcrb
cmp
xor
aas
mov
pop
pop
or
inc
lock
jmp
sbb
push
or
cmp
shll
inc
sbb
scas
aam
dec
mov
jmp
lods
lret
int
xor
mov
or
mov
jp
rorl
push
mov
cmpw
mov
aam
jmp
mov
push
jbe
mov
inc
out
decl
mov
or
in
xor
out
xchg
sbb
daa
ja,pt
into
hlt
enter
mov
mov
add
mov
ja
jl
fnstenv
ret
mov
push
pop
sub
imul
mov
lods
mov
ret
cmc
mov
js
sub
cmp
xchg
cmpsb
or
insl
je
xorl
pop
jmp
stc
out
sbb
sbb
out
xor
mov
in
mov
int
cmp
mov
in
stc
ja
test
mov
push
clc
mov
aaa
call
jb
lock
push
inc
push
pop
jl
test
cmpsl
pop
mov
in
sub
sub
jecxz
adc
sub
xlat
sahf
or
xorl
in
jp
add
dec
push
mov
scas
ds
rclb
mov
aas
std
fyl2x
push
xor
mov
fisubs
mov
xor
adc
sub
mov
das
mov
cmp
fdivs
ds
out
xor
shlb
sub
lcall
seto
cli
push
mov
xchg
div
mov
xor
outsl
insl
inc
adc
jp
mov
sbb
jbe
movsl
cmp
mov
mov
pusha
mov
cmpsl
xchg
or
popa
enter
daa
mov
movsb
inc
insl
ja
xor
stos
add
mov
pop
insb
or
mov
cli
jl
out
mov
sub
sbb
mov
push
pop
dec
sti
add
pop
jns
pushf
jae
inc
pop
lock
mov
movsl
dec
xchg
mov
mov
repnz
mov
jmp
fistl
movsb
push
lret
push
loopne
pop
and
shlb
xor
es
dec
push
inc
dec
lods
and
sub
add
xor
cmp
cltd
jbe
add
pop
insb
stos
and
sti
je
fbstp
enter
cltd
hlt
pop
sub
ficomps
ss
movsl
mov
mov
pop
mov
push
mov
mov
aad
sbb
jmp
mov
mov
cs
push
in
mov
push
insb
inc
fwait
int
jne
lods
pushf
push
xor
pop
xor
imulb
or
movb
jo
jno
and
mov
xor
pop
repz
inc
punpcklbw
ljmp
mov
hlt
push
js
cmp
lahf
hlt
mov
and
mov
iret
or
mov
push
mov
call
mov
shlb
mov
mov
imul
jb
mov
cld
mov
icebp
into
sahf
jno
jnp
lods
xor
cmp
andps
inc
xchg
adc
notl
adc
inc
movsl
jb
decb
push
xor
cld
adc
or
sarl
xor
pminub
inc
sbbl
fisttpll
cmpsl
mov
mov
aas
sbb
test
addr16
sbb
int3
fsubrl
ret
out
cmpsb
movmskps
fs
sbb
jle
push
fidivl
or
mov
repnz
xchg
xchg
scas
mov
mov
inc
dec
pop
xchg
ret
inc
push
jecxz
sarl
mov
sub
dec
cmp
mov
fwait
test
inc
or
sub
add
outsb
push
popa
push
ja
movsl
xor
outsl
orb
or
inc
enter
mov
adcl
icebp
and
int3
mov
lods
fsubs
inc
icebp
addr16
pop
xor
stc
fisubrs
jmp
sub
int
mov
push
imul
mov
pop
pop
mov
shll
mov
cmp
mov
inc
mov
shlb
test
pop
or
dec
mov
mov
inc
push
shrb
outsl
mov
mov
ss
fs
xor
and
jecxz
or
mov
mov
call
mov
mov
adc
or
mov
jno
xor
in
aad
mov
iret
inc
xchg
je
dec
subb
fs
adc
mov
pushf
test
test
inc
dec
cwtl
sbb
nop
cmp
leave
inc
movsb
mov
sbb
pop
mov
cli
mov
shl
into
mov
lea
cmp
mov
push
pop
shll
adc
dec
cmp
mov
insl
adc
mov
fnsave
fcomi
das
mov
insl
mov
cwtl
add
mov
dec
stc
je
dec
cmc
pop
mov
cmp
dec
gs
push
inc
sub
insb
mov
cmp
popl
xor
notb
mov
fistpll
ja
mov
and
fs
aam
imul
pop
vmread
imul
mov
dec
mov
sahf
add
inc
repnz
mov
or
fisttps
push
nop
cltd
xchg
je
aad
rorl
adc
mov
sahf
push
and
xor
xor
addr16
shll
mov
xchg
or
in
mov
sub
roll
xor
sub
data16
lds
jne
mov
sti
xor
mov
mov
cmpb
jp
push
or
xor
sub
std
and
in
loop
test
mov
mov
inc
sti
adc
sub
sub
mov
dec
into
inc
push
repz
lods
dec
cwtl
outsl
adc
test
rol
jmp
mov
aad
leave
add
dec
daa
cmp
ret
mov
add
sub
frstor
xor
pop
stos
mov
or
mov
fistps
xor
fcompl
das
or
jbe
inc
mov
push
add
mov
clc
push
adcb
jo
adc
mov
clc
pop
movsl
repnz
xor
dec
sub
sti
aas
outsb
movsl
xor
in
ss
xchg
add
lds
je
push
mov
nop
cmp
out
inc
test
xor
xchg
lcall
mov
ja
mov
stc
or
adc
sub
mov
mov
mov
adc
sbb
adc
insb
ljmp
hlt
jmp
les
push
inc
push
pop
sub
test
mov
or
aaa
inc
xchg
push
test
repnz
add
rcrb
xor
and
mov
imul
jge
xor
mov
rclb
mov
xlat
in
ficompl
hlt
lock
mov
xor
xor
push
stc
mov
jns
and
push
mov
inc
mov
cltd
mov
fxch
jbe
cmpsb
daa
repz
ss
pop
test
cmp
and
in
lds
add
xchg
shlb
add
sub
sbbb
pop
mov
cmp
aad
mov
imul
hlt
mov
lods
xchg
cmc
inc
mov
push
xor
pusha
inc
lret
mov
shlb
fsub
and
dec
out
dec
push
call
outsb
add
push
push
pushl
je
xorb
mov
or
mov
aam
jae
dec
fnstenv
jne
xor
cld
pop
stos
jb
mov
dec
je
inc
jle
das
mov
dec
lahf
xchg
mov
in
cmpsb
addl
cmp
mov
cs
clc
jg
lds
inc
fists
and
xchg
sub
call
out
sub
je
aaa
xchg
jp
lock
push
adc
test
ja
ss
in
add
dec
mov
popa
and
les
or
jmp
jl
jbe
mov
ret
dec
lods
in
jnp
imul
cmpsb
jae
mov
outsb
cmp
add
mov
xchg
les
movb
dec
pop
iret
cmc
or
adc
dec
and
shlb
imul
imull
cmp
pop
xlat
jnp
mov
sbb
popf
sub
jge
les
scas
bound
lea
xchg
leave
mov
mov
arpl
xchg
hlt
js
divl
pop
mov
in
adc
in
jp
mov
sub
jne
jge
mov
aas
stos
push
scas
mov
lret
hlt
cmp
cmp
sarl
in
lock
cmp
pop
jl
jnp
jp
dec
mov
stos
repz
mov
popa
mov
cmp
push
sub
mov
into
mov
addr16
adcl
gs
jnp
and
jl
and
jmp
or
test
push
addr16
mov
stos
and
push
xchg
or
jnp
pop
jae
add
adc
mov
nop
sub
mov
cs
popf
notl
mov
inc
ret
and
adc
mov
popf
xor
pop
xchg
push
loopne
add
mov
into
push
jbe
pusha
xor
ficomps
xchg
add
adc
mov
mov
mov
ret
gs
mov
sbb
mov
fsubrl
mov
mov
bnd
push
mov
shll
xchg
mov
and
cmp
mov
jne
pop
sbb
sti
lret
cmpb
jmp
test
xor
aam
dec
jnp
xor
sbb
cltd
mov
pushf
xchg
hlt
scas
add
mov
les
imul
jne
jno
stos
out
inc
inc
mov
or
inc
add
in
push
mov
add
mov
scas
fidivrs
dec
loopne
in
inc
mov
push
imul
xchg
pusha
bound
hlt
mov
cmp
cmp
add
mov
mov
imul
pop
jbe
shlb
xchg
jnp
call
jno
decl
cvtps2pd
test
push
xor
ds
into
mov
xchg
jb
pop
cmc
mov
dec
lcallw
or
mov
mov
out
xor
mov
loopne
sub
or
mov
jo
fdivl
repnz
jle
ds
nop
test
and
pusha
shrl
xor
pop
jmp
add
adc
xchg
pop
sbb
pextrw
fs
sub
repnz
lahf
lods
xchg
push
xor
rcl
add
push
pop
add
mov
negl
cli
les
mov
or
adc
jbe
ja
outsl
xor
add
mov
out
pop
mov
stc
imul
sarl
mov
mov
roll
dec
mov
xchg
mov
inc
mov
flds
shll
cmpsb
lret
outsl
inc
adcb
lock
and
lods
into
test
lock
dec
cli
mov
cmp
xor
out
xor
mov
jae
or
or
notb
out
pop
inc
mov
sub
pop
fcmove
shll
xchg
mov
in
mov
je
or
maskmovq
idivl
push
icebp
mov
movsl
or
pop
sbb
push
pusha
push
xor
jbe
shll
hlt
jl
xor
push
ds
sub
push
int3
xorl
sahf
int
mov
loop
mov
push
orb
jmp
ds
cwtl
cmp
je
push
inc
pop
xchg
mov
cmpsb
cltd
lahf
adc
xor
and
add
int3
adc
int3
cmp
enter
xchg
fldt
pop
sahf
ja
sub
and
mov
shll
add
xor
sub
inc
jb
lods
mov
xor
add
test
addr16
or
out
call
mov
cmp
cmp
mov
gs
jge
pop
divl
jns
in
pop
mov
lfs
xchg
or
rorb
loope
orb
jge
mov
cs
sarb
pop
add
mov
or
xor
out
and
mov
sub
inc
mov
xchg
sbb
and
test
xchg
scas
push
sarl
aam
lods
daa
loope
cmp
push
xlat
jbe
sahf
mov
jecxz
mov
jl
divb
push
imul
pop
sub
xchg
pop
sbb
stos
dec
les
xor
mov
mov
or
sub
and
icebp
mov
scas
add
or
cmpb
xchg
add
dec
mov
in
lods
jbe
shlb
mov
mov
mov
xchg
shlb
cs
jne
sub
pop
mov
test
inc
adc
lret
sbb
int3
enter
test
xchg
push
int3
and
popa
das
xor
lods
jo
sub
mov
inc
dec
inc
dec
dec
shll
mov
cmp
test
jl
fists
pushf
jmp
hlt
popf
aam
cmp
mov
add
sub
scas
ss
cwtl
push
push
rcrb
aam
insb
out
push
mov
add
pop
cmp
lret
pop
je
xor
out
jb
mov
in
pop
mov
mov
gs
add
ljmp
or
xor
mov
sub
mov
mov
add
in
cmp
cmpl
mov
mov
and
mov
jbe
xchg
mov
jne
pop
sub
and
mov
cli
jbe
mov
filds
sbb
lret
incl
push
inc
add
pop
fnsave
push
outsb
jmp
pushf
hlt
mov
test
adc
xor
shrb
xchg
les
das
mov
adc
gs
or
mov
jb
adc
jecxz
and
xchg
mov
lods
or
or
xchg
mov
jge
cmp
lcall
mov
mov
mov
and
mov
in
subb
lock
push
sar
push
pop
nop
jnp
jmp
not
mov
dec
mov
inc
adc
fidivs
mov
and
pop
jb
in
push
mov
insb
std
mov
mov
dec
jecxz
xorb
sti
mov
mov
pop
mov
add
cmp
sbb
mov
cmp
testb
lods
mov
test
jecxz
adc
repz
mov
dec
mov
jo
fs
pop
faddl
loop
and
mov
push
cmp
shlb
mov
mov
sbb
sbb
push
xchg
mov
aad
push
add
mov
les
popa
mov
adc
mov
push
in
or
xchg
pop
movsl
push
xchg
mov
pop
lcall
push
adc
xchg
add
call
mov
lea
inc
add
add
insl
mov
test
dec
cmp
mov
call
push
pop
xchg
mov
xchg
inc
jg
ret
loope
sub
mov
test
movb
movsb
adc
dec
mov
sbb
call
enter
aaa
cld
imul
or
in
shlb
adc
push
mov
dec
test
in
dec
aam
inc
inc
mov
movsl
jo
mov
xor
cmp
inc
ret
push
enter
insb
xorl
sbb
xlat
divb
mov
jbe
inc
jb
mov
mov
mov
jns
inc
fbld
leave
push
mov
in
sbb
daa
movl
pop
popf
lret
or
into
das
add
jbe
aam
xor
rcrb
out
mov
sub
mov
test
inc
xchg
and
jg
pop
cmc
dec
add
lock
aaa
mov
mov
jno
or
cmp
pop
mov
in
int3
inc
test
mov
inc
add
mov
dec
push
leave
fucomi
cmp
mov
jo
adc
test
andl
sub
sbb
or
fistpll
dec
xor
mov
and
jae
add
js
mov
mov
lods
ds
pop
cltd
jno
stos
addr16
into
insb
mov
pop
mov
cltd
test
cmp
ret
aad
xchg
ficoms
outsl
mov
into
scas
in
sbb
popa
adc
ret
lods
outsl
mov
mov
mov
stos
or
clc
sub
push
lods
adc
movsb
sbb
mov
jns
cmpsl
test
pop
push
icebp
pop
cmp
insb
movsb
shlb
push
jbe
mov
cmp
aam
int3
in
mov
sbb
mov
divl
repnz
or
mov
out
push
push
ficoml
lods
xor
sbb
lret
xchg
dec
or
mov
sbb
scas
fidivs
sub
je
repnz
jb
in
inc
sub
loopne
dec
js
fstpt
fdivs
sub
stos
or
mov
test
mov
jne
xor
inc
sub
aam
add
push
mov
roll
mov
stc
push
test
pop
insb
mov
add
clc
lock
dec
in
mov
addl
scas
loop
mov
or
add
pop
stos
mov
xchg
dec
pop
ljmp
jb
mov
sarb
mov
lahf
iret
mov
mov
add
jne
stos
test
and
mov
setb
mov
mov
push
loope
mov
mov
inc
stc
repnz
jmp
xlat
mov
fisttps
xorb
xor
or
mov
inc
dec
xor
insb
mov
pusha
add
mov
mov
xor
das
cmp
mov
jg
pop
add
push
enter
dec
pop
dec
test
mov
xchg
lret
sbb
lock
pop
add
test
cld
mov
and
jbe
ss
out
xchg
lods
imul
shrb
clc
into
mov
mov
jne
stos
pusha
hlt
sbb
addr16
cmp
fnsave
inc
mov
inc
mov
ss
mov
dec
mov
pop
push
cmpsb
ret
loope
aam
sbb
xchg
iret
mov
dec
fwait
in
lret
add
mov
mov
ljmp
movsl
aas
and
into
xor
jns
loop
mov
call
je
mov
mov
pop
mov
insb
and
cmp
into
adc
adc
pop
jb
mov
je
test
nop
dec
adc
add
xchg
xlat
aaa
xchg
mov
push
lock
push
or
mov
and
mov
mov
sub
push
insb
mov
addr16
or
mov
xor
mov
sub
mov
adc
out
dec
mov
cmc
mov
jbe
shll
or
sbbb
shrl
test
inc
add
sub
sbb
mov
js
je
xchg
mov
fists
lret
icebp
sbb
aam
mov
sarb
jg
fadds
pushf
repnz
adc
sbb
cmp
enter
fwait
fdivs
push
sbb
or
push
in
mov
scas
dec
mov
add
xor
xchg
jecxz
sbb
ja
rcrb
cmpsl
jnp
cmp
pop
mov
xor
xorb
xor
loope
lods
cmp
pusha
sbbl
xchg
xor
add
ljmp
xor
xor
pop
xchg
leave
push
mov
mov
push
hlt
lret
cwtl
dec
out
hlt
stos
add
mov
jle
mov
xchg
ljmp
fnstenv
add
add
mov
mov
fidivrs
mov
aas
lods
mov
inc
fisttpl
mov
call
loopne
insl
lods
roll
fidivrl
pop
add
adc
ds
jb
fsubr
mov
mov
dec
nop
cmp
xlat
stc
inc
sub
add
outsl
or
inc
mov
fs
out
add
xchg
mov
pop
cmp
aam
mov
add
out
pusha
push
pop
imul
into
js
lret
ss
dec
insl
subl
adc
xchg
enter
xchg
mov
cmpsb
and
or
test
addr16
and
lret
push
and
dec
xor
sbb
stos
cld
test
mov
mov
adc
fs
into
aam
int3
jo
scas
xor
cmpsb
imul
les
add
loop
mov
mov
jns
cmpb
pushf
imul
mov
inc
jne
mov
imul
lds
xlat
dec
push
arpl
sbb
push
xor
mov
clc
out
out
mov
out
xchg
adc
add
mov
hlt
jo
arpl
in
stc
add
adc
mov
mov
adc
insb
jns
pushf
cmpsl
imul
mov
outsl
push
cmp
loope
pop
jl
mov
je
mov
faddp
sbb
and
lea
mov
in
inc
je
std
add
xor
test
mulb
mov
hlt
js
xlat
adc
ds
mov
jmp
and
mov
pop
dec
xchg
adc
jmp
xchg
out
push
hlt
test
mov
mov
dec
lock
pusha
fsts
lret
sub
push
test
adc
lcall
xchg
fldt
out
test
jl
and
xor
xor
and
shl
lcall
mov
mov
ret
dec
pop
ljmp
cmc
popa
mov
xchg
mov
lock
mov
and
and
xor
scas
mov
and
xchg
pop
or
mov
push
popl
daa
mov
ja
test
inc
cmp
inc
dec
jg
outsl
xlat
mov
mov
push
adc
push
add
popf
xchg
cmp
xor
jnp
inc
int3
mov
dec
rorl
xchg
cmc
aas
movsl
clc
xchg
nop
sahf
push
mov
push
mov
gs
mov
add
ja
dec
fcomps
jns
adc
and
in
add
sbb
mov
add
iret
cmp
jne
dec
mov
jo
outsb
dec
jl
jno
cmpb
faddl
push
fwait
xchg
mov
in
mov
int
cltd
std
aas
xchg
adc
aad
sub
push
push
mov
mov
in
inc
mov
loopne
decb
popa
outsl
in
xor
pop
inc
shll
jno
jb
test
inc
test
and
or
xchg
call
stos
or
jbe
ds
dec
lods
or
xor
popf
lea
push
and
sub
lods
sub
scas
movsl
jne
jl
xor
aad
cmp
or
jns
mov
jb
repz
out
mov
aaa
ret
mov
cmp
stos
mov
call
jnp
cmpsb
cs
sahf
mov
adc
mov
cmp
push
sbb
repz
xor
fcoml
or
xlat
sub
loopne
shlb
test
fistl
les
cli
lahf
mov
jmp
xchg
add
cwtl
sub
clc
imul
cmovs
xchg
mov
sub
or
inc
cmp
mov
shr
xchg
add
xchg
pop
js,pt
fbld
pop
popa
std
mov
xchg
int3
xor
inc
pop
cmp
dec
fstpl
cmp
inc
loopne
in
cmp
out
lods
das
cld
xor
movsb
and
push
idivl
inc
pop
fistpl
or
push
dec
mov
mov
mov
cmp
add
mov
adc
xchg
mov
out
push
mov
lods
mov
ss
mov
lods
cmp
and
loop
mov
inc
notb
insb
jmp
lret
ja
loope
xchg
sub
xor
lfs
mov
adc
ret
mov
inc
repnz
jbe
or
cld
inc
push
mov
push
or
sbb
in
mov
sti
xor
lea
stos
mov
sub
shlb
push
mov
mov
subl
mov
sub
mov
mov
mov
mov
cmpsb
fimuls
sub
lods
jl
mov
jo
out
xor
jno
mov
inc
jae
lcall
cwtl
mov
lret
adc
sti
shll
scas
in
mov
mov
mov
subb
adcb
sbb
pop
cmp
cmp
sahf
push
dec
push
jnp
add
mov
imul
pushw
and
mov
xchg
lret
testb
in
xor
mov
adc
mov
out
fs
ss
add
fildl
aam
shlb
scas
push
decl
mov
fwait
sbb
push
mov
mov
mov
insb
dec
adc
lahf
dec
add
jbe
mov
lods
mov
mov
jge
repnz
data16
mov
lds
sub
cltd
les
xchg
xor
rolb
lods
xlat
cli
ja
in
adc
jb
mov
push
mov
sti
shrb
in
mov
lahf
push
je
xchg
or
xor
cmpsl
and
smsw
jl
pop
dec
in
shrl
mov
sti
mov
fwait
clc
mov
mov
out
push
mov
cmp
decb
ds
push
scas
sub
cmc
psubd
mov
push
je
rcrl
mov
inc
or
cltd
push
hlt
cwtl
gs
sahf
push
sbb
jecxz
outsb
mov
dec
ja
ds
lods
add
xchg
sbb
mov
pop
mov
mov
mov
inc
dec
mov
lcall
xchg
mov
xchg
jne
sbb
xchg
mov
or
imul
dec
loope
jg
stc
ds
mov
xlat
cld
subb
movsl
mov
fistps
mov
mov
ret
stos
sahf
mov
scas
inc
add
insb
cmpsb
add
rcl
stos
fsub
xorb
pop
mov
xor
mov
pop
xchg
cmp
les
mov
mov
sbb
inc
xchg
adc
sub
push
movsl
jnp
jmp
bound
mov
jb,pn
fwait
adcl
int
ret
sub
dec
dec
mov
addr16
movsb
aas
jne
insb
xor
xor
out
repz
mov
dec
cmp
xorb
inc
out
jl
insl
cld
ja
hlt
mov
test
pop
push
push
push
sbb
push
mov
std
call
mov
in
mov
xor
sbb
push
fiaddl
int
mov
shlb
mov
inc
or
xchg
cltd
pop
jg
mov
ljmp
mov
scas
pop
rcrb
xchg
repz
lock
add
mov
enter
lods
mov
jno
inc
add
push
test
inc
les
jb
in
fsubrs
add
scas
out
and
icebp
in
jmp
mov
mov
mov
push
dec
out
mov
sub
sbb
clc
push
mov
xchg
xor
adc
mov
pop
outsb
sbb
adc
push
clc
cld
push
sub
add
jno
lcall
cmp
std
and
cli
popa
mov
pop
xor
js
pop
cmpsb
pop
fdivs
or
and
xlat
mov
cmp
shll
xor
hlt
mov
add
jmp
adc
pop
fsubs
mov
popa
sbb
jl
push
xor
cs
pop
mov
test
pop
clc
adc
mov
push
mov
mov
mov
insl
inc
mov
cli
aas
lret
lods
iret
mov
mov
and
inc
fs
or
aam
fists
add
xor
pop
add
push
popa
mov
fs
imul
jb
icebp
fs
aam
dec
jbe
out
and
pop
sub
stos
cmp
mov
mov
xchg
hlt
mov
mov
mov
push
gs
xchg
xchg
pop
mov
iret
out
or
dec
and
ret
fcmovne
fnstenv
addr16
das
dec
cmp
nop
sbb
mov
sahf
inc
les
shlb
movsb
inc
xorb
mov
loop
cld
sub
daa
mov
sbb
dec
fistps
stos
mov
jmp
sarb
xor
adc
xchg
push
mov
test
inc
shll
push
negl
enter
or
ljmp
dec
mov
cmp
loop
jle
push
mov
es
fstps
fnsave
adc
mov
fldz
stos
ds
mov
pop
and
and
pop
pop
cmp
and
movsl
jmp
int3
gs
fnstcw
popf
inc
mov
sbb
mov
xor
jbe
inc
add
xchg
ljmp
cmp
scas
xor
push
inc
xor
xchg
hlt
push
cs
cmp
mov
mov
and
loopne
and
mov
cmpsb
mov
jae
sbb
dec
xchg
mov
mov
sub
mov
adc
lods
mov
je
divl
cmp
mov
mov
cs
mov
aaa
out
mov
popa
cmp
gs
inc
aas
mov
roll
pop
mov
lahf
xchg
outsl
cmp
add
repz
mov
xchg
pop
xor
cwtl
pop
push
xchg
push
mov
fs
pusha
dec
sbb
mov
int
lods
mov
std
add
loopne
cld
insb
cmc
cwtl
mov
loope
mov
mov
loope
sti
repnz
mov
movsl
or
insl
xchg
xor
jbe
jp
pop
mov
call
lods
cmpsb
adc
pushf
push
mov
dec
cmp
cmpsb
mov
sub
and
mov
pop
push
and
jecxz
mov
or
fdivr
dec
mov
xor
aaa
popa
lods
adc
jp
pop
insb
mov
mov
insl
dec
mov
loopne
mov
popf
lret
repz
mov
or
das
sarb
mov
sahf
sbb
jbe
aam
enter
cmp
adc
sub
int3
xorb
pop
test
xor
xorl
movsl
stos
lods
rclb
loopne
cltd
cwtl
pop
or
je
mov
and
aam
in
or
data16
xchg
fdivs
aad
mov
test
sbb
mov
push
mov
fstp
dec
xchg
sub
std
and
mov
repnz
lods
mov
mov
push
dec
sub
int3
out
loope
scas
mov
sub
adc
decl
pop
shlb
test
cmp
add
sub
or
mov
out
pop
mov
inc
cmpsb
ficoms
mov
mov
push
mov
addr16
mov
xchg
fs
je,pn
stos
dec
cmp
mov
or
mov
ss
shlb
jbe
sbb
xor
add
push
test
mov
hlt
lahf
push
mov
fiadds
sub
dec
xor
frstor
scas
mov
cli
mov
mov
ds
in
and
lock
mov
call
fadds
into
dec
mov
cmc
es
jl
incl
mov
fnsave
lock
mov
loope
iret
cmc
cli
je
mov
push
add
mov
push
test
stc
mov
popf
and
bsf
mov
mov
cmp
push
shll
mov
aam
pop
dec
cwtl
arpl
in
mov
je
and
fs
inc
pop
lret
dec
insb
dec
mov
lock
or
int
and
das
dec
push
incb
mov
mov
mov
mov
pushf
cld
sbb
fdivs
mov
jb
mov
sub
test
lods
dec
fldenv
loopne
mov
jno
pop
imul
sbb
xchg
inc
clc
cmp
add
mov
mov
mov
mov
adc
and
mov
pop
cmp
xor
test
or
xor
enter
ficoms
test
jns
or
stos
pop
es
pop
into
mov
mov
out
mov
stos
shlb
push
hlt
mov
nop
pop
std
cmc
sub
and
sti
mov
js
lahf
mov
mov
dec
xchg
or
pop
mov
jmp
pop
imul
repz
or
ret
lods
test
xor
fisubrs
out
insb
mov
shl
outsb
imul
outsl
pushf
or
mov
mov
and
add
jns
mov
test
loope
cmp
push
xor
cmp
lods
jnp
adc
int3
les
mov
mov
push
mov
ds
jecxz
mov
mov
pop
sub
negl
xchg
sub
outsl
xchg
jno,pn
cmpsb
jne
call
shlb
fs
inc
mov
mov
cltd
insl
ljmp
out
cmp
lock
jmp
mov
pop
mov
stos
xchg
cs
ret
mov
dec
cmpsl
hlt
mov
push
xchg
push
aam
cmpsb
rcl
jmp
mov
or
call
imul
push
int3
sbb
xlat
push
xor
into
add
insl
out
inc
loope
mov
sbb
in
dec
loopne
cmpsb
jae
scas
pop
icebp
lods
hlt
xchg
cld
jns
mov
push
mov
aaa
mov
add
or
xchg
notl
out
leave
loope
mov
ret
mov
and
xchg
jle
nop
arpl
and
ds
cmpsb
sub
insb
pop
fildl
jbe
xor
lret
mov
cmp
jb
adc
shlb
dec
hlt
mov
cmp
dec
rdmsr
or
jne
les
mov
sub
fisubl
push
cld
inc
push
ljmp
scas
imul
daa
sbb
out
cmp
hlt
or
mov
int
sahf
mov
jo
cmp
mov
out
scas
insl
test
sarb
lods
pusha
aas
iret
and
xorl
push
cmp
inc
cmp
mov
or
mov
add
mov
icebp
sub
je
cmp
or
repz
xor
mov
mov
test
cmpsb
fnstcw
popf
mov
aad
jecxz
ds
lret
repnz
or
cmpsb
jl
push
in
mov
icebp
cld
xor
pushf
dec
inc
mov
adc
test
sub
es
test
js
cmp
mov
inc
int
sbb
inc
das
adc
sub
test
xchg
cmpsb
jbe
jg
hlt
pop
add
js
mov
mov
test
cmp
out
stos
mov
imul
fwait
in
cwtl
mov
iret
lds
sbb
dec
pop
add
pushf
jb
jg
subb
or
shl
popf
inc
pop
mov
ja,pt
lods
jecxz
dec
stos
adc
sti
mov
ficoms
push
mov
and
loopne
idiv
pop
xchg
imul
inc
mov
xchg
jnp
addr16
icebp
lock
pop
jl
pop
mov
cmpsl
roll
movsl
mov
dec
addr16
lret
scas
into
mov
xchg
out
push
imul
sub
mov
jle
sbb
outsb
fidivl
js
loop
mov
or
jecxz
fs
xchg
out
sub
pusha
xlat
rolb
mov
mov
enter
mov
loope
ja
les
es
or
pop
mov
xchg
mov
fisubrl
mov
or
pop
push
mov
xor
mov
xor
stc
fadd
xchg
or
dec
mov
lret
push
push
ret
sub
add
pop
out
popl
fdivs
mov
imul
inc
pop
sub
roll
lods
mov
inc
fcomp
push
ja
outsb
jmp
mov
sub
stos
mov
xor
out
mov
lcall
mov
xor
cmp
mov
test
mov
out
mov
aas
loop
fidivs
adc
xchg
pop
bound
mov
dec
xor
push
mov
data16
sahf
push
and
cmpsl
mov
pushf
enter
mov
or
imul
and
mov
xor
inc
mov
rclb
mov
mov
lods
iret
addr16
sarl
stos
xchg
in
xor
cmp
mov
test
lods
push
js
test
arpl
lret
test
sub
add
out
push
in
cmpsb
movsb
jne
push
pop
adc
insb
adc
int3
ret
shll
out
fs
add
fldt
or
and
mov
xchg
fwait
inc
sub
mov
jp
push
pop
bound
pop
test
aam
ja
sub
mov
jo
mov
ss
stc
mov
in
stos
xorb
cmp
sahf
inc
inc
xorl
mov
mov
push
mov
dec
cmpsb
xchg
nop
outsb
shll
mov
fistpll
jp
dec
push
mov
js
mov
inc
cmpsb
xor
mov
call
and
mov
dec
cmpsb
sti
xor
adc
dec
mov
mov
lea
hlt
and
pop
mov
mov
sub
mov
mov
or
mov
add
ret
add
lds
mov
in
cltd
imul
push
xchg
inc
leave
mov
stos
aam
mov
cltd
loopne
push
cli
cmc
jge
mov
das
inc
xchg
call
sub
fidivl
repz
or
pop
mov
aam
push
divl
adc
ja
xorl
push
add
cli
shlb
pop
mov
jns
mov
outsb
xchg
dec
mov
repnz
add
jb
in
stc
jle
data16
mov
sub
xchg
pusha
js
mov
test
insl
aam
movsb
hlt
cmp
out
stos
mov
fadd
xor
sbb
je
mov
add
mov
mov
test
mov
and
xchg
sbb
sarl
mov
add
fistpll
repnz
mov
mov
and
jmp
stos
push
pop
mov
cld
gs
sub
addr16
lahf
pushf
adc
les
stos
mov
iret
shll
push
mov
mov
push
mov
and
test
mov
aam
xchg
dec
sub
out
outsl
mov
pushf
sbb
mov
sahf
cltd
icebp
mov
pop
lahf
out
testb
xchg
imul
mov
xchg
mov
push
mov
shll
psrlq
rcr
push
mov
ja
jge
add
sahf
pop
js
adc
jl
mov
mov
es
cmp
sub
dec
fcmovnbe
mov
and
lahf
aam
push
icebp
or
shll
mov
movsl
cs
jp
adc
dec
and
xorb
ss
inc
mov
jl
pop
incl
lock
mov
add
sub
push
jp
sarb
xchg
fwait
mov
pop
hlt
ficompl
movsl
lret
out
movsl
popf
xchg
test
gs
pop
shrl
xchg
cmpsb
fnstenv
mov
add
cmp
mov
arpl
and
clc
jecxz
mov
popf
bound
cwtl
adcb
fmulp
cmpsl
add
and
hlt
mov
int3
mov
das
xor
in
add
jns
hlt
loopne
orl
xchg
movsl
leave
add
mov
bound
inc
jnp
fdivr
mov
loopne
add
mov
ljmp
mov
sbb
fiadds
mov
sub
stos
in
mov
popf
daa
sti
push
xchg
adc
aam
mov
or
cld
sub
sbb
loope
gs
sbb
mov
clc
fdivrs
flds
fmuls
jo
out
mov
cmp
mov
repz
sbb
mov
imul
xor
test
sbb
aas
mov
rcl
xor
jns
sbb
ja
jno
imul
mov
ljmp
mov
shrb
or
jbe
dec
js
mov
mov
imul
and
xchg
les
pop
inc
xchg
mov
cmpsb
or
ss
adc
int
ret
sub
int3
dec
cltd
popf
add
pushf
adc
icebp
adc
cmp
frstor
jge
mov
aad
pop
mov
mov
lret
xor
in
popa
ret
test
cmp
ds
pop
xchg
xor
cltd
mov
into
sarb
jne
stc
xor
out
push
lods
jg
addr16
pop
cmp
jecxz
pop
xlat
mov
and
shl
or
sbbb
pop
out
fs
xor
dec
into
test
mov
and
jnp
sub
scas
and
lods
rorb
repz
xchg
orb
add
xor
mov
das
stc
adc
lods
pop
je
adc
jno
jl
xor
fbstp
cli
or
pop
push
ds
rcr
mulb
xchg
xchg
lret
xor
clc
push
in
and
aad
out
xor
rol
sbb
fst
ja
scas
mov
stc
insl
test
aas
inc
lods
aam
stos
mov
inc
repz
adc
xchg
mov
mov
outsl
idivb
stos
fxch
add
inc
shll
rol
pop
mov
cmp
inc
aad
adc
mov
inc
inc
mov
mov
pusha
mov
fdivrl
lcall
adc
les
out
inc
jno
add
repnz
bound
ret
iret
push
mov
and
sub
and
xchg
cs
divl
mov
jae
mov
sbb
mov
lods
ja
adc
and
aam
push
mov
inc
add
or
xor
les
scas
mov
outsl
mov
sti
pop
push
pusha
inc
test
xor
fisttpl
cmp
lock
sub
xchg
lcall
movsb
mov
js
jge
fwait
adc
stos
xchg
mov
test
push
bound
sub
cmp
shll
mov
into
cmp
jl
xor
or
dec
cmc
pop
mov
iret
sbbl
cwtl
or
xchg
mov
add
es
xchg
jns
push
xchg
adc
pop
push
mov
pop
mov
dec
out
mov
insb
loopne
mov
mov
mov
lods
imul
mov
ret
ljmp
mov
cmp
ds
jg
xchg
lods
or
xor
lods
gs
imul
loope
jle
movb
popf
fnstenv
repz
mov
lret
fnstsw
js
or
data16
cmpsb
push
pop
mov
hlt
scas
nop
in
push
xorl
adcb
lahf
xor
sbb
mov
clc
cmp
lds
pop
jmp
inc
fnsave
test
inc
cltd
add
mov
stos
dec
rcll
pushl
insb
mov
int
mov
xor
add
xchg
mov
std
push
lods
xorb
movsl
or
inc
mov
fcomp
xorl
test
mov
jle
loopne
mov
ds
and
mov
pop
inc
mov
mov
sbb
test
adc
in
lods
cmc
push
inc
cmp
jl
xchg
xor
in
stos
push
aas
sarl
inc
xor
mov
sub
cmp
mov
shll
cmp
xorb
insb
mov
mov
sbb
pop
adc
lods
lahf
cmc
mov
nop
mov
xchg
sbb
cmpsb
mov
xchg
popa
scas
movsl
rcll
add
push
jl
fs
ss
sub
mov
mov
cmpsl
pop
cmpb
fwait
xlat
xor
hlt
xchg
movsl
sbb
lret
fs
imul
mov
fstpl
dec
enter
call
lock
mov
xchg
mov
int
sub
repz
sarl
lret
jae
loopne
mov
cmpsb
mov
lods
mov
xlat
in
dec
mov
cmc
xchg
add
xorb
push
sub
or
mov
out
out
or
xchg
dec
fisubrs
adc
lds
add
xor
mov
test
sub
mov
lahf
ds
pop
cltd
xchg
adc
hlt
and
js
leave
inc
test
enter
notl
test
aam
xchg
test
movsl
jns
or
mov
mov
sti
mov
and
popf
es
rclb
mov
pop
fisttpl
xchg
out
mov
aam
bound
push
adc
stos
movsb
mov
add
sbb
fistl
cltd
aad
sub
divb
pop
push
movb
and
mov
mov
out
hlt
hlt
movsb
movsl
shll
dec
and
mov
in
pop
popa
xchg
out
test
test
sub
xor
icebp
add
push
cmp
or
aad
int3
testb
jp
addps
insb
pop
mov
lds
mov
shrb
icebp
mov
sub
imul
roll
xchg
enter
mov
sub
iret
rol
mov
fsubr
mov
inc
sub
inc
lret
enter
outsb
ret
adc
out
xchg
cwtl
in
cmpsb
inc
xor
push
jle
pop
cli
outsb
cmp
cmpsb
dec
mov
or
insl
mov
mov
push
je
lret
mov
mov
imul
xor
mov
jmp
movsl
sbb
lods
pusha
or
cmp
data16
fsubrl
les
xor
cmp
mov
shrl
add
or
imul
enter
push
lds
jmp
divb
xor
xor
lret
jge
mov
cmp
in
mov
sub
iret
dec
mov
inc
inc
mov
aad
mov
and
mov
cli
outsl
mov
sub
in
ljmp
inc
insl
mov
xor
mov
mov
jae
inc
xor
jnp
sti
mov
xchg
sub
xor
lret
scas
add
xorb
mov
jp
aas
jne
hlt
jmp
push
repnz
mov
or
rolb
lods
dec
sbb
aad
xchg
jne
cmc
mov
lea
aam
mov
sahf
gs
inc
imul
jg
mov
push
jmp
mov
mov
sub
pop
mov
les
adc
mov
stos
movsb
cmovns
jns
xor
xorb
imulb
mov
cli
adc
or
jnp
and
push
mov
push
push
jmp
sbb
mov
das
fmull
sub
cmp
fisttpl
mov
lods
pushf
cli
jge
inc
inc
mov
outsb
mov
leave
clc
dec
xor
in
in
in
jmp
arpl
mull
cmpsb
ss
sarl
inc
pop
inc
sbb
icebp
add
lret
mov
xchg
xchg
xor
fs
cltd
or
mov
dec
xor
int
jnp
aam
push
add
sbb
cmp
xchg
pop
jecxz
jo
das
mov
addr16
dec
cmp
popf
xchg
pushf
in
aad
movsl
mov
scas
loop
rol
out
mov
gs
int3
mov
and
into
fsub
aam
mov
or
int
mov
mov
cmp
insb
cltd
sbb
and
imull
rorb
mov
push
pop
pop
scas
movl
fidivs
decl
mov
add
jo
cli
fildll
ficoms
mov
je
out
adc
push
aaa
stc
pop
xchg
push
jnp
and
xchg
lods
aam
je
fstps
and
mov
push
add
aaa
mov
push
xchg
stos
xor
popf
repnz
mov
sub
jbe
jl
pop
mov
lock
sub
jae
mov
inc
push
sub
mov
leave
or
cmc
jo
hlt
push
loopne
mov
mov
and
cmpb
arpl
lahf
cmp
adc
std
mov
fstps
andl
or
ja
inc
fidivs
pop
mov
mov
pop
jne
cmp
pusha
sbb
jo
lret
jmp
and
js
push
xchg
push
cwtl
inc
insb
daa
mov
jp
dec
pop
hlt
ds
cmp
sub
mov
dec
call
pop
xchg
mov
hlt
mov
push
xor
in
lods
mov
divb
sub
loopne
mov
jns
xchg
fcmovbe
adc
xor
ret
mov
add
mov
mov
xor
xchg
xor
mul
inc
or
xor
inc
mov
call
mov
mov
sub
push
push
fwait
ljmp
xor
push
xchg
jae
sarb
ss
imul
mov
xorb
add
cmpsb
inc
pop
je
push
loope
in
xchg
shlb
mov
and
into
int3
jp
imul
or
ret
rorl
sbb
xchg
sbb
mov
mov
and
jge
inc
inc
inc
mov
cmpsb
and
ret
adc
in
std
dec
jmp
shlb
fistps
mov
adc
xchg
ret
aam
ja
or
icebp
fbstp
add
xor
pop
xorb
jne
and
les
or
fs
xchg
nop
push
mov
add
xchg
mov
fdivrs
push
mov
dec
mov
cmpsb
jle
call
out
lds
jp
mov
pop
lods
mov
cmpsb
adc
stc
mov
xchg
push
xchg
jbe
mov
int
cmpb
es
sbb
andl
jge
mov
inc
ljmp
push
cmpsb
into
jmp
aam
enter
mov
mov
data16
sub
pop
cmp
insb
nop
lods
xchg
inc
lret
imulb
pop
jbe
out
mov
mov
or
jg
push
ds
lret
pop
cs
pop
mov
fiaddl
push
mov
aad
in
xor
mov
fnstcw
jnp
push
mov
mov
mov
lret
adc
cmp
pushl
repnz
rclb
cmp
inc
aaa
stos
negb
mov
mov
data16
xchg
xor
push
xor
decb
xchg
mov
inc
mull
push
nop
shlb
jns
out
insb
jo
push
mov
push
in
ror
scas
sub
clc
sub
jge
mov
hlt
ljmp
enter
pop
mov
xchg
lret
fwait
mov
xor
jmp
mov
xchg
jmp
mov
cmp
fstps
inc
sub
adc
mov
jb
pop
and
adc
dec
pop
sub
pop
mov
inc
xor
out
movsl
leave
pop
inc
mov
call
add
sbb
pushf
sub
pop
inc
adc
cli
mov
int3
xor
mov
insb
outsb
push
or
sub
cmp
dec
scas
xchg
dec
orb
call
pop
inc
jns
jmp
jmp
fs
arpl
mov
repnz
or
in
fidivl
scas
lret
pop
mov
imull
inc
dec
add
movsl
movsl
out
data16
and
jecxz
jb
aam
mov
or
add
mov
push
lea
pop
or
movsl
mov
movsb
jl
sub
add
dec
aad
mov
imul
push
mov
daa
and
fwait
sbb
mov
jle
push
insl
push
mov
jge
xchg
aad
mov
rcrl
and
xor
xor
je
adc
cmp
shufps
loope
pop
mov
shlb
add
lods
pop
neg
cmpsb
sub
lahf
rol
dec
fs
mov
xchg
adc
aas
xorl
movsb
xor
dec
adc
xor
add
mov
rclb
xchg
xor
sub
fxch
pop
fwait
and
hlt
and
adc
adc
dec
outsb
ljmp
stc
mov
xor
das
xchg
data16
jnp
test
mov
nop
je
jno
mov
dec
adc
push
movsl
in
cmp
xchg
sub
test
push
and
shl
jp
sub
add
inc
mov
rorl
je
fnstenv
pop
sub
jle
pusha
push
mov
fnsave
mov
push
xchg
in
divl
xorb
add
add
fstl
daa
sbb
aam
aad
insl
mov
add
add
dec
xchg
dec
popl
das
push
cmp
filds
pop
adc
jo
mov
sbb
ret
sub
xchg
pop
dec
xlat
fidivs
insb
icebp
loop
ja
pop
pop
xor
jno
aam
adc
movsl
call
mov
sub
stos
add
mov
inc
inc
cmp
dec
mov
fsubp
mov
je
sti
inc
xchg
mov
mov
or
scas
sub
lret
mov
adc
cmp
cwtl
lods
stos
orb
cwtl
lret
repnz
jg
pop
out
pop
mov
cltd
pop
ret
js
sbb
mov
ss
cmp
mov
cs
rcr
xchg
ret
pop
jo
dec
out
adc
int3
cmpb
ss
rorb
push
or
mov
mov
mov
push
xchg
jmp
mov
dec
int
mov
sahf
mov
call
leave
push
frndint
pop
mov
mov
orl
xor
xchg
adc
daa
push
mov
or
incb
push
gs
xor
mov
mov
push
lcall
xor
shll
dec
mov
inc
mov
push
in
xchg
addb
mov
sbb
mov
daa
std
pushw
mov
popf
out
sub
stos
push
add
mov
orl
andl
cmp
mov
decl
loope
sub
push
mov
mov
adc
mov
popa
mov
shl
aad
int
and
cmp
cmp
fwait
cld
incb
jp
cmp
push
xor
fmuls
mov
or
mov
dec
jecxz
lods
jno
mov
dec
les
mov
jnp
pop
mov
pop
sbb
stos
cmp
cmc
push
mov
loope
cltd
cmp
mov
fiadds
js
cmp
push
lret
sub
je
xchg
pop
mov
inc
mov
inc
mov
sbb
daa
lock
xchg
mov
outsb
sub
in
cmpsl
lods
push
sbb
les
sahf
mov
out
movb
std
das
dec
xor
insl
dec
add
jno
test
mov
je
mov
mov
xor
push
lods
out
int3
test
xor
sbb
imul
mov
fsubrl
sub
adc
mov
rorl
jle
fs
scas
pop
xchg
push
aas
xor
cmpl
adc
pop
aam
notl
ds
mov
mov
fsubrp
mov
sbb
xchg
mov
jl
mov
push
push
clc
call
mov
pop
xor
cmp
pop
scas
mov
repnz
dec
ret
sarl
xorl
jecxz
aaa
xchg
test
jmp
cmpsb
out
out
fstpt
mov
xorb
mov
jecxz
loop
dec
jle
fcomi
pop
cmp
fisttpll
inc
jb
lods
imul
cmp
arpl
js
shll
mov
in
lea
sbb
push
mov
outsb
or
cmpsl
in
add
push
xor
mov
mov
and
loope
data16
jg
call
xchg
mov
jecxz
mov
mov
cltd
jp
mov
jl
or
xchg
xchg
xor
xor
jns
sub
ljmp
mov
in
int3
pop
dec
dec
stos
xchg
mov
lock
mov
mov
dec
and
lcall
cmp
in
mov
mov
ljmp
pushf
and
xor
add
pop
lods
jge
fsubr
or
mov
lret
mov
gs
adcb
in
movsb
fcoml
fcom
shll
cmp
hlt
leave
mov
fimuls
icebp
dec
xor
jnp
cmp
mov
call
bswap
inc
cld
inc
mov
jns
cmp
pop
jg
stos
out
enter
lahf
shrb
mov
dec
jne
cmp
sub
shlb
mov
sub
sub
xor
lods
ret
insl
loope
jg
dec
addr16
jl
push
dec
outsb
in
imul
loope
nop
pop
dec
mov
je
jg
addr16
and
sbbl
fwait
mov
lock
les
and
rclb
mov
out
push
lahf
sti
mov
pop
lock
push
je
pusha
xchg
fadds
ss
mov
in
adc
notl
lret
inc
cmp
arpl
mov
push
popa
sub
jmp
mov
cmp
mov
mov
repz
xchg
fisubrs
popf
and
call
jle
and
sti
in
addr16
pop
xor
loop
enter
cmp
stos
push
int
cmp
pop
push
lds
out
cmp
mov
out
mov
dec
data16
mov
cmp
ret
popf
jns
pop
push
xchg
out
hlt
nop
jo
or
fnsave
jge
dec
sub
test
mov
jb
cltd
test
outsb
mov
mov
or
mov
daa
loopne
mov
inc
cmp
pop
xor
pop
xlat
push
pushf
pusha
mov
das
jo
repz
sbb
jg
cmp
add
pop
dec
adcl
imul
int3
sbb
push
mov
gs
loopne
imul
mov
mov
pop
inc
xchg
in
gs
mov
xor
xchg
sub
inc
mov
callw
mov
inc
jge
pop
mov
add
mov
mov
scas
insb
repnz
aam
sahf
mov
cmpsl
sub
insb
dec
xor
ds
mov
push
push
bound
lock
int3
pop
out
in
fwait
imul
fs
les
es
aam
push
mov
add
es
mov
pop
or
mov
mov
dec
mov
loope
hlt
dec
adc
cmpsl
or
nop
sub
mov
push
jbe
std
mov
fldenv
in
xchg
and
bound
out
int3
iret
nop
icebp
mov
rorb
sahf
div
sbb
sub
mov
mov
cmp
and
test
jne
lods
hlt
jle
mov
inc
mov
xor
and
mov
in
dec
jns
fwait
xor
jl
lods
mov
rcll
dec
movsb
mov
in
xor
dec
jmp
xor
cltd
xchg
sti
iret
inc
hlt
jnp
hlt
nop
js
mov
repz
xchg
sti
loopne
xchg
pusha
mov
scas
jge
lock
mov
cwtl
push
sub
xor
lods
jmp
in
clc
xchg
cmp
xchg
mov
out
mov
xchg
jne
sub
pop
repz
push
cmp
and
fdivrs
pop
xchg
push
lea
mov
retw
je
or
out
inc
inc
cltd
mov
outsb
xor
mov
cmpsl
jle
pushf
mov
daa
mov
jnp
fsubr
dec
ja
mov
scas
mov
mov
cmp
dec
cmp
mov
pop
sbb
lods
in
mov
mov
xchg
mov
mov
out
inc
iret
xchg
in
movsl
ss
arpl
mov
inc
sbb
out
add
dec
out
mov
jb
bswap
mov
mov
push
adc
mov
sahf
sbb
std
mov
add
pop
mov
dec
jle
sbbb
pusha
ja
inc
adc
shll
adc
js
repz
and
inc
lods
aad
or
mov
shlb
pop
sarb
pop
lds
and
mov
shrl
mov
ja
int3
xchg
push
dec
je
loope
or
xchg
ss
xchg
out
mov
mov
fldl
inc
dec
cmp
jb
push
adc
push
mov
cmpb
jp
jl
bound
xchg
scas
add
inc
dec
fnstenv
and
stos
pop
push
dec
pushf
stc
mov
jecxz
insl
cmpsb
xchg
inc
aam
pop
lods
xchg
movsl
sbb
out
inc
push
mov
sub
fs
mov
popa
inc
dec
xchg
arpl
pop
inc
cld
mov
repz
cmpsl
mov
in
sahf
and
xchg
mov
xor
icebp
punpckhdq
std
mov
push
lcall
and
test
mov
bound
inc
sub
fmull
das
dec
xor
and
sbb
pusha
xchg
and
push
insl
xchg
pop
cmp
push
enter
daa
mov
jecxz
xchg
add
cmp
outsb
jmp
das
add
mov
cmp
sub
jno
mov
fisubrl
mov
fidivrs
pop
xchg
imul
add
pop
scas
lock
mov
roll
stos
loopne
push
out
mov
mov
add
pop
imul
sbb
xchg
jns
xor
mov
sbb
shll
pop
cmpsl
int3
movsl
adc
cli
jno
mov
push
xchg
fcmovnbe
sar
inc
xchg
xchg
pop
call
es
jle
sbb
arpl
test
and
mov
loopne
jb
scas
xchg
insb
lret
cmp
movsb
inc
cmpsb
mov
xchg
scas
cmp
dec
ret
mov
shrl
scas
pop
xor
xorl
jne
push
xchg
jbe
outsl
mov
mov
mov
mov
in
stos
loopne
ss
xor
sbb
stos
mov
aam
loop
adc
lods
sub
cmp
mov
outsl
hlt
mov
js
mov
pop
mov
push
jnp
mov
mov
sbb
mov
mov
or
std
cmp
xor
insb
inc
mov
jle
add
xor
sbb
add
mov
adc
lods
mov
aam
jp
fs
pop
je
mov
js
pushf
and
mov
xchg
mov
adc
sbb
loopne
cmc
mov
roll
popf
mov
sahf
mov
add
cmp
rcll
add
cli
orb
jmp
sti
mov
mov
lcall
out
mov
outsb
loopne
mov
mov
sub
xchg
fcoms
cmpsl
mov
les
pop
scas
jo
or
int
push
imul
js
je
push
std
mov
jp
add
sbb
adc
pushf
js
inc
xor
in
icebp
adc
movsb
daa
mov
xchg
dec
pop
loopne
xchg
cld
inc
test
and
adc
lret
push
add
inc
xor
cmp
aad
pop
loop
adc
aaa
jl
add
cltd
lods
adc
jb
xor
lods
loopne
mov
mov
rcl
shr
daa
mov
lret
in
push
and
cltd
mov
in
push
ret
js
jmp
inc
test
imul
push
push
mov
aaa
push
shlb
and
mov
push
pop
push
sahf
or
divb
cmpsb
jg
mov
shll
mov
adc
es
adc
xor
fadd
or
aad
dec
call
mov
clc
lahf
mov
lods
fdivr
sarl
aas
mov
jae
adc
xchg
hlt
push
add
mov
insl
push
cltd
ds
pop
dec
pop
xor
andb
fisttpll
mov
and
test
sbb
jae
xchg
lret
loopne
pop
fdivrl
mov
daa
push
mov
push
pop
mov
xchg
cld
mov
inc
mov
inc
cmp
subb
mov
mov
repnz
cmp
movsl
shll
rclb
enter
in
bound
mov
or
xor
rcrl
push
mov
jmp
mov
add
ss
repz
mov
push
adc
rclb
and
cmp
mov
cmpb
xchg
cmpsl
test
sahf
call
xchg
mov
dec
fwait
pop
jbe
pop
cmp
xorl
fdivrs
and
push
adc
or
sub
insb
fmulp
lods
das
add
dec
jb
nop
add
push
lock
mov
pop
push
out
mov
sbb
notl
adc
inc
cmp
fs
push
or
xchg
movsb
mov
test
mov
push
inc
add
pop
cmpsb
into
call
iret
adc
popa
or
inc
mov
mov
cld
aam
inc
je
xor
xchg
add
inc
popf
pop
xor
jb
fs
cltd
mov
mov
xchg
stc
repz
mov
sub
or
xor
arpl
mov
lods
push
ret
mov
shll
mov
outsb
jge
lcall
xchg
mov
sbb
xchg
fistpll
pop
into
shrb
mov
cmp
add
imul
push
mov
dec
adc
test
les
add
int3
fwait
mov
pushf
xchg
xchg
outsb
jl
sbb
mov
ja
pop
test
filds
inc
sahf
xchg
out
jnp
cmp
and
stos
mov
test
jle
rorl
aam
mov
mov
jno
mov
push
inc
jns
pop
jl
je
xor
push
and
xor
popf
les
test
pop
sar
dec
rclb
jmp
pop
xor
dec
inc
push
pop
mov
mov
lahf
dec
out
push
lock
in
inc
push
add
dec
divb
adc
out
pusha
test
mov
arpl
and
pop
nop
lahf
jle
push
mov
mov
dec
fisttpl
data16
insl
pop
sbb
push
sahf
jns
fdivrs
mov
lods
das
jmp
and
lcall
ss
test
push
and
xchg
pop
and
and
mov
and
loopne
add
fwait
jmp
mov
pushf
push
mov
stos
test
ret
loopne
lret
mov
and
hlt
mov
cwtl
dec
shlb
cmpsl
adc
arpl
dec
mov
data16
push
inc
mov
push
add
xlat
mov
sub
sub
sbb
jo
and
sbb
fidivl
mov
and
mov
xlat
dec
mov
mov
and
cwtl
jp
faddl
lods
xor
hlt
sbb
push
sub
and
mov
rep
push
jno
in
xchg
stos
xor
mov
cmc
xlat
sahf
lods
inc
cmp
jnp
push
mov
pushf
nop
iret
dec
aas
mov
and
cld
movsl
mov
mov
pop
xor
xchg
mov
cmpsb
push
jp
popf
hlt
insb
mov
test
pop
sub
adc
das
mov
mov
inc
xor
sbb
mov
mov
je
lock
fildll
and
mov
push
inc
mov
mov
sub
das
pusha
mov
fimuls
jnp
cmpsl
and
rclb
sub
ja
test
cmc
pop
or
dec
mov
xchg
das
adc
cwtl
outsb
aad
dec
sbb
mov
mov
sti
or
ja
push
mov
or
gs
mov
cmpsl
pop
mov
in
mov
scas
test
mov
test
cmp
pusha
jae
insb
cli
cmp
gs
fs
xlat
sbbl
mov
cmpsb
negl
ljmp
mov
jno
iret
mov
fcomps
mov
xor
mov
jge
das
sbb
lea
mov
sahf
test
or
inc
or
mov
rolb
cmpsl
insb
mov
pop
mov
popf
lods
inc
and
hlt
pusha
pop
sbb
cwtl
ret
jbe
je
jns
scas
test
mov
in
xlat
xchg
inc
ja
ja
cwtl
xor
mov
pop
mov
sbb
dec
popa
push
aad
inc
cmp
jge
decl
testb
in
push
repz
scas
jmp
mov
xchg
sbb
xchg
inc
inc
sbb
mov
xchg
roll
in
test
mov
loop
adc
add
out
insl
arpl
sub
xor
mov
mov
dec
nop
xchg
mov
cmp
mov
add
test
jns
mov
jmp
push
xlat
push
push
dec
xor
xchg
or
call
aam
push
sahf
sub
cld
dec
mov
cmc
hlt
and
test
mov
push
int
iret
jg
add
aad
in
stos
xchg
in
pop
into
imul
fldl
in
sub
mov
rol
jg
int
inc
dec
mov
in
repnz
add
ret
movsb
ret
ss
aaa
jno
jge
xchg
outsl
test
decl
fmuls
in
shrl
cmp
cmp
ret
pop
mov
inc
movsl
dec
cmpsb
or
adc
hlt
mov
and
sub
scas
xchg
divl
sub
jo
mov
mov
and
adc
mov
iret
rorb
fisubrs
mov
dec
xor
in
cli
int
sbb
mov
xchg
mov
sub
mov
cli
shl
rclb
adc
data16
mov
jp
imul
out
movsl
mov
mov
iret
adcb
push
xor
sbb
pop
adc
and
repz
dec
inc
outsb
mov
mov
push
mov
dec
mov
xchg
or
cmp
lea
je
iret
mov
shlb
mov
dec
cmp
mov
push
inc
xchg
movsl
lahf
je
call
sbb
lds
leave
imulb
mov
out
or
cmpsb
rcrl
jg
push
mov
in
xchg
mov
inc
sub
sub
xorl
mov
pop
or
mov
push
jnp
sti
movsl
stos
sub
leave
jne
add
jns
sti
mov
add
adc
mov
movsl
xor
shl
jmp
or
ja
sti
mov
sbb
aad
pusha
add
lods
or
lods
sbb
and
jne
lret
or
divb
add
and
mov
jmp
cmp
int
sbb
in
jb
mov
xchg
scas
inc
mov
inc
jge
dec
je
mov
xchg
dec
adc
mov
test
mov
pop
dec
xor
mov
jnp
repz
inc
xor
mov
test
push
iret
aas
mov
cmc
sti
js
in
es
pop
sbb
leave
add
out
xor
pop
scas
aam
lea
mov
movsb
imul
or
jge
loope
imul
xchg
gs
into
mov
push
cmpsl
jmp
push
aam
cmp
ds
add
push
lds
ss
fcmovnu
mov
sbb
std
ds
mov
hlt
test
jne
or
int
push
clc
lcall
cwtl
nop
pop
and
cmpsb
lret
insb
test
push
pop
sub
aam
mov
loope,pn
bnd
and
std
sbb
cmc
mov
xor
mov
jo
sbb
dec
adc
cmpsb
pop
add
xchg
mov
loopne
loope
adcl
mov
daa
push
jl
lea
lods
ret
cmpsb
mov
sbb
ja
mov
and
dec
cld
push
mov
sub
pusha
gs
xor
out
or
push
pop
mov
stos
push
ja
cmp
xchg
jp
jl
xor
add
xchg
sub
sub
inc
lahf
repz
insb
xor
popa
jnp
dec
sub
les
push
xchg
dec
int
mov
mov
or
xchg
popf
inc
mov
cmp
xor
jle
adc
dec
sti
and
jns
xchg
lds
stos
je
gs
push
jle
sbb
int3
jmp
dec
cmpsb
jmp
sbbl
lods
mov
clc
jle
ret
xchg
lret
mov
aas
push
rclb
mov
mov
inc
adc
or
jne
mov
push
add
mov
cmpsb
test
xor
xor
daa
cltd
mov
add
in
xor
loopne
hlt
arpl
cli
jbe
xor
pop
pop
inc
scas
xchg
cmp
jle
dec
cmp
mov
repz
xchg
lcall
xchg
aad
or
pushf
mov
mov
leave
mov
push
lahf
mov
mov
enter
jle
popf
cmp
iret
sti
mov
mov
dec
xor
in
mov
out
jg
jae
sbb
lods
xor
ss
imul
enter
rcl
pop
mov
add
sub
movb
inc
jb
call
loope
mov
jo
mov
mov
jp
push
push
xchg
cmpsb
cmc
sbb
cmpsb
jno
dec
scas
aam
pop
mov
sub
repz
out
iret
aas
sub
jbe
aam
and
inc
mov
mov
loope
out
ret
je
lret
cs
mov
sbb
test
je
cld
in
sub
push
xor
xchg
and
repnz
je
popf
pop
cwtl
arpl
push
data16
pop
mov
push
xchg
sub
and
and
mov
sbb
inc
aas
mov
add
mov
mov
and
mov
xor
push
insb
adc
mov
mov
push
hlt
sbb
jg
sub
popf
cmp
dec
xor
shlb
sar
adc
mov
xchg
mov
aad
out
and
mulb
add
push
xchg
inc
inc
mov
loopne
mov
ljmp
jnp
nop
fsubs
sub
sub
mov
mov
cmc
adc
arpl
jnp
ret
cld
rcrb
stos
xor
jb
push
sti
mov
fnstsw
cmc
punpcklwd
rol
xchg
push
int3
mov
into
ret
mov
mov
sbb
ljmp
mov
cmp
ds
mov
xchg
clc
xchg
iret
mov
push
mov
das
outsb
in
out
dec
mov
push
xchg
jmp
bound
xchg
xor
lea
add
mov
flds
push
mov
push
sub
mov
mov
or
pop
sbb
mov
xor
stos
jmp
mov
mov
push
das
jl
adc
fildl
adc
cmp
pop
fsub
mov
ret
test
imul
mov
xchg
pop
iret
pop
cmpsb
mov
mov
pop
sarb
and
add
and
push
sub
stc
xor
cwtl
mov
test
mov
and
adc
sti
xor
cmpsl
out
jbe
adc
les
inc
mov
repnz
push
pop
cld
js
or
cmp
or
mov
push
push
dec
xlat
mov
push
mov
fs
inc
cmp
xchg
imul
cmp
je
aam
pop
sbb
loopne
into
mov
add
mov
xchg
pop
loopne
pop
shl
and
lret
xchg
mov
inc
inc
sub
push
jl
inc
mov
push
jge
fs
and
cmpsb
mov
pop
cltd
pop
mov
hlt
imul
adc
scas
and
scas
jmp
lret
jno
xor
je
jo
mov
xor
pop
test
imul
aaa
sub
fwait
and
and
shrb
sub
std
mov
push
pop
int
in
inc
mov
mov
pop
fidivs
nop
jo
enter
rcrl
aas
xchg
mov
inc
pop
sub
and
jns
fsubrl
hlt
loopne
jb
mov
stc
mov
ja
and
les
adc
aam
rcrb
mov
mov
stc
sbb
mov
pusha
sbb
mov
and
fdiv
cld
cwtl
lea
ret
mov
sub
shrl
mov
je
lods
or
xchg
jae
mov
popa
and
push
out
add
cmp
mov
mov
je
mov
lds
push
fs
dec
pop
dec
mov
cmc
popf
insl
jmp
popa
xchg
mov
xchg
or
adc
push
xchg
cwtl
mov
xchg
jne
cmp
dec
loope
mov
sub
cmp
popl
jbe
xchg
test
cmp
dec
data16
sbb
mov
mov
int
xchg
in
jae
mov
repz
xor
mov
add
lds
dec
dec
cmpsl
lcall
add
inc
cwtl
pop
jno
xor
aaa
mov
dec
test
xchg
cmpsl
push
enter
sub
jne
out
jns
outsl
mov
cmpsl
or
pusha
dec
push
xchg
clc
xor
nop
aam
shlb
cld
mov
stos
add
inc
jecxz
mov
fdiv
adc
test
inc
pop
inc
push
mov
sub
xchg
cmp
mov
test
inc
mov
and
mov
adc
fisubrs
sahf
mov
cmp
xchg
cmp
mov
lcall
cmpsb
arpl
ja
and
mov
enter
test
xchg
jb
mov
and
addr16
push
cmpsb
leave
push
ss
je
push
jnp
push
mov
or
push
adc
cmpsb
shll
mov
inc
mov
sbb
adc
mov
lcall
mov
ret
and
int
jae
mov
mov
in
mov
mov
mov
ja
pushf
icebp
loope
mov
adc
insl
or
add
inc
or
jne
push
enter
int3
dec
push
adc
rcrb
data16
mov
add
pop
inc
or
sub
push
mov
fistpll
push
cmp
mov
imul
lods
and
inc
mov
das
stos
and
iret
test
mov
push
mov
es
and
sub
mov
lock
aaa
lds
rcrb
nop
rcll
pop
mov
inc
cld
decl
fisubs
mov
jb
es
loopne
mov
cmp
call
sub
cwtl
mov
hlt
push
sbb
jle
js
sti
jl
fmulp
stc
cs
fistps
xchg
sarb
mov
push
mov
push
pop
and
lods
sbb
cmp
movsb
and
xor
shrl
mov
inc
inc
in
push
push
sbb
push
stos
mov
popa
and
into
push
cmp
mov
shll
jle
sarb
bound
mov
test
mov
mov
inc
in
push
jge
loopne
adc
out
sahf
xchg
divb
int
lds
aam
pop
in
aad
push
into
sub
mov
ret
mov
xor
mov
insb
shll
push
dec
leave
mov
testb
cmpb
mov
mov
pop
jecxz
mov
mov
mov
xor
mov
adc
lods
addl
inc
jecxz
mov
popf
add
mov
call
fwait
rorl
push
sbb
fcoml
sub
mov
out
xchg
xchg
repnz
mov
cmp
bsf
stos
xchg
mov
rol
mov
mov
sbb
jle
aaa
and
cmpsb
cmp
cli
mov
mov
aad
mov
popl
lahf
mov
pop
jp
cmpsl
mov
or
jo
hlt
addr16
lock
mov
xor
sub
jns
xorl
movsb
pop
xchg
jno
lret
mov
xor
push
mov
mov
or
cwtl
adc
fadds
lock
bound
stc
mov
je
or
pop
mov
aas
lods
mov
cmp
test
xchg
push
push
mov
dec
mov
repz
cmp
xlat
mov
xchg
aam
inc
mov
or
cld
push
lret
test
cmpsb
mov
scas
lods
imul
std
lods
mov
mov
push
enter
or
ja
sub
test
lock
mov
add
mov
sar
push
cwtl
mov
sbb
xor
ret
push
notl
inc
lret
stc
or
sub
add
mov
push
adc
pop
cltd
mov
mov
repz
and
sahf
jno
jp
shr
outsl
test
dec
xor
push
xchg
sub
xorb
mov
mov
adc
adc
mov
dec
jnp
call
mov
jo
or
insb
clts
mov
arpl
sbb
mov
out
call
mov
mov
xchg
xor
or
in
adc
pop
sub
inc
fsubr
stos
mov
sub
dec
mov
fildl
dec
mov
fdivrl
pop
push
subb
mov
fnsave
xchg
das
sub
mov
or
and
push
aas
mov
loop
xchg
mov
mov
mov
add
mov
out
repz
mov
stos
jecxz
std
push
mov
ss
roll
inc
int
insl
jns
add
idivl
rorl
jp
lret
cli
out
push
fldcw
sub
xor
jnp
sbb
aam
xchg
mov
lods
arpl
mov
out
sbb
xchg
test
fsubrl
pop
insb
pushf
repz
mov
mov
int
loope
sbbb
outsb
scas
cmp
movsl
outsb
mov
pusha
sar
xor
fcompp
adc
cmpsb
ja
das
and
add
inc
lods
or
es
test
mov
ja
jmp
xchg
imul
fisttps
mov
les
pusha
aas
inc
sub
das
cmp
mov
iret
mov
int
aad
mov
insb
les
nop
test
inc
mov
aaa
push
js
adc
pop
mov
pop
lret
movsl
cwtl
cmpsb
int
test
aam
test
xchg
mov
das
dec
imul
int
pop
dec
xor
mov
arpl
jo
adc
jns
pop
fwait
xchg
cmpsb
sbb
jnp
mov
je
inc
mov
cmpsb
out
cmpsb
push
adc
add
mov
or
mov
mov
sub
into
sbb
cmpsb
mov
fwait
pushf
xchg
mov
out
or
cmp
mov
pop
sti
js
test
pop
aam
shl
iret
mov
cmp
fiaddl
inc
data16
cmpsb
lret
push
mov
push
mov
fldenv
lret
loopne
je
out
mov
scas
sbb
push
outsb
sti
push
jbe
push
js
shlb
lods
mov
enter
mov
pop
cmp
aad
loopne
pop
sbb
mov
push
push
mov
or
jno
repz
jo
jnp
xor
cli
mov
jbe
sbb
aam
cs
cwtl
nop
enter
leave
ss
xchg
dec
add
dec
or
fsubl
sbb
stc
push
fcomi
popa
add
int
enter
mov
dec
mov
lahf
mov
iret
insl
lea
jno
xor
add
mov
fwait
jle
test
push
xor
inc
mov
cmpsl
cld
push
sbb
mov
repz
sub
rorb
pusha
cmpsb
mov
out
inc
cmc
xor
sub
rcrb
into
mov
pusha
repnz
mov
mov
sti
cs
xchg
aas
in
xor
inc
sahf
cmp
mov
cmp
jl
and
es
pop
leave
fidivl
sub
mov
mov
in
cmpsb
sarl
fwait
xor
or
aaa
mov
push
xchg
mov
sbb
push
cmp
ljmp
push
jns
lcall
in
repz
mov
rcl
mov
in
xchg
ss
test
mov
jl
push
mov
sub
lret
inc
push
stos
aad
cwtl
mov
push
dec
jae
pop
pop
push
test
arpl
jnp
inc
mov
sub
dec
loop
add
pop
es
xor
lcall
xchg
bnd
sbb
bound
shll
pop
cmpsb
mov
subb
inc
mov
inc
mov
xorb
adc
jno
jne
inc
and
ucomiss
mov
or
mov
out
push
pop
fnstcw
xchg
pop
lds
cmpsb
sbb
aam
mov
inc
lea
cmc
subl
aad
add
and
call
iret
dec
out
pop
inc
loop
lods
repz
dec
je
icebp
cmpsb
push
stos
mov
push
outsb
neg
mov
ljmp
jae
and
push
rcll
add
mov
adc
mov
fadds
xorl
sbb
nop
jne
xchg
mov
sbb
mov
into
outsb
movsl
imul
jns
or
insl
xor
mov
jge
xor
push
test
mov
insl
nop
call
cmp
test
rorb
xor
adcb
stc
inc
mov
pop
lods
popf
add
cmpsl
sub
lods
dec
in
cmpsb
mov
mov
out
mov
mov
push
ljmp
rep
out
or
push
add
xchg
jecxz
fidivrs
fdiv
sahf
xor
test
xor
sbb
mov
xor
ds
xchg
imul
mov
mov
std
cmp
je
add
test
mov
lret
sub
aad
and
jns
cmp
cmpsb
in
mov
jg
lea
dec
in
mov
outsl
xor
movsl
inc
xchg
sub
test
mov
gs
sbb
cmc
mov
ret
jge
mov
sbb
aad
pop
mov
lahf
imul
sub
mov
cmp
imul
adc
cmp
push
push
adc
int3
sub
cli
sti
and
jns
out
imul
aas
outsb
aas
cwtl
insl
mov
inc
sets
insl
pop
cld
jp
fwait
pop
jno
mov
into
fdivrl
les
jne
clc
jp
mov
ds
into
mov
mov
ret
inc
mov
push
adc
mov
and
and
fstpt
xchg
xor
pop
pop
int3
repnz
int3
xor
adc
mov
add
cmp
sahf
pop
stos
fidivs
xchg
mov
pusha
cmp
mov
rorb
xor
mov
mov
mov
adcb
push
ds
mov
jmp
or
ror
add
ss
aad
into
and
orb
mov
or
movsl
push
xchg
das
xor
push
pop
xchg
mov
rorb
mov
icebp
out
sbb
ret
int
jl
popa
pushf
inc
push
in
hlt
mov
fwait
mov
cli
xchg
lea
popf
push
or
push
dec
test
jne
push
adc
push
cmpsl
pop
mov
fwait
in
rcll
pop
push
push
mov
or
es
pop
xchg
cmp
stos
cmp
mov
sarb
in
out
rorl
mov
inc
push
out
scas
test
in
hlt
mov
jecxz
rclb
das
les
xchg
cmpsb
sub
xor
mov
fiaddl
mov
clc
sub
mov
fsub
nop
push
cmc
scas
add
loop
mov
shrb
sub
inc
aam
add
hlt
sbb
mov
mov
out
loope
xchg
add
mov
xchg
test
mov
rclb
in
scas
xchg
dec
fiadds
inc
mov
push
sbb
nop
cmpsb
inc
ljmp
jecxz
xchg
mov
addr16
cmp
or
fnsave
jae
pop
cmpsb
jbe
mov
add
movsb
bound
mov
shr
cmp
rclb
dec
xchg
iret
stos
hlt
inc
cli
mov
test
adc
sbb
jp
fsubs
and
add
ja
push
xor
mov
push
fs
stc
push
inc
mov
mov
sub
int
aad
test
push
stos
scas
cmpsb
add
push
dec
daa
iret
out
mov
push
call
pop
xor
push
jle
mov
sbb
imul
sub
arpl
mov
lea
repnz
aas
xor
xor
daa
cs
loope
pop
inc
mull
iret
dec
mov
xchg
sub
xchg
fnstenv
xor
and
stos
out
mov
push
ret
xchg
inc
imul
mov
imul
sbb
cmp
jp
mov
pop
pushf
push
or
loope
cmp
mov
mov
dec
pop
std
sub
push
ret
mov
add
aam
vsubss
mov
in
xlat
andl
push
stos
rcr
cltd
imul
jecxz
inc
daa
addr16
sub
xorl
push
sub
aam
jne
sar
xchg
mov
incb
cltd
aam
mov
and
test
std
sbb
cli
push
push
fmuls
mov
inc
xchg
push
lea
jl
arpl
addr16
mov
xadd
mov
test
sahf
mov
ret
lret
fst
cwtl
out
cmp
mov
in
jns
inc
mov
or
pop
add
lock
mov
xchg
inc
fs
mov
sarl
xchg
and
mov
mov
or
aaa
mov
imul
fwait
mov
cli
xchg
inc
hlt
in
test
mov
jb
jge
sbb
mov
adc
popf
mov
xchg
aam
insl
xchg
cmp
mov
leave
cmc
incb
sbb
stos
lock
mov
insl
sahf
adc
mov
rorl
jl
mov
stos
mov
xor
test
loope
inc
pop
lcall
xchg
add
push
jle
mov
mov
sub
lock
adc
jns
cltd
imul
inc
xchg
push
jge
adc
sbb
mov
xor
les
sub
inc
xchg
sbb
dec
mov
sub
mov
and
and
daa
fiadds
push
out
add
mov
insb
pop
enter
mov
jp
add
shlb
imul
es
cs
dec
add
loopne
divb
fwait
xor
js
add
push
push
lcall
aaa
sbb
xchg
cli
cmp
xor
cmp
lcall
adc
and
aaa
mov
testl
out
fists
outsb
sarb
dec
pop
adc
cmp
pusha
aam
xor
mov
xchg
mov
cmc
sarb
mov
cmp
ficomps
mov
movsb
das
scas
mov
xlat
xchg
mov
in
lret
pushf
js
jns
and
or
aas
jbe
call
int3
insl
es
cmp
xchg
daa
pop
ja
push
out
cld
inc
out
cwtl
popa
xorl
inc
push
mov
ja
repz
fwait
mov
push
test
je
and
sub
mov
push
sub
xor
or
jmp
pop
lods
shll
fs
js
xor
mov
pop
cmp
test
xchg
mov
or
jp
mov
mov
cmpb
int
mov
arpl
in
pop
ljmp
pop
loope
mov
sbb
xor
pop
sub
stos
aaa
mov
mulb
outsl
cmpsb
je
mov
push
sbb
jnp
xlat
xor
lret
dec
and
mov
movsb
xchg
jge
jmp
jl
insl
or
dec
mov
jnp
push
popf
in
push
xchg
sub
repnz
mov
sbb
xchg
iret
enter
mov
add
hlt
or
mov
inc
xchg
pusha
fnop
xor
mov
push
cmpsl
pop
call
dec
mov
daa
popf
push
jecxz
cmp
push
jno
hlt
sbb
jge
add
inc
dec
xchg
adcl
adc
jp
push
test
xor
subl
mov
push
adc
mov
mov
test
les
repnz
xor
out
aaa
mov
xchg
push
lods
jnp
push
inc
push
lea
in
mov
int
pop
lods
xor
xchg
xchg
xor
lea
cli
fs
dec
out
mov
jae
sarb
ja
in
fadd
mov
adc
es
in
mov
dec
mov
xor
test
fdiv
out
jne
lcall
int
mov
mov
arpl
movsb
adc
ja
pop
ss
movsl
outsb
loop
scas
xor
ficoms
mov
inc
sbb
lds
push
and
jbe
fisttps
notb
inc
add
xchg
jo
and
iret
cld
push
push
xor
in
enter
and
sub
sbb
cmp
or
jae
in
loopne
and
lods
or
insb
in
je
hlt
cmc
xchg
into
mov
js
sub
adc
xor
stos
mov
mov
ljmp
push
loopne
push
das
add
and
mov
mov
push
xchg
outsl
xchg
mov
mov
adc
sub
cli
aam
and
es
push
xor
mov
dec
pop
lock
fldl2t
jbe
inc
je
sbb
pop
sahf
stos
mov
int3
pop
pop
mov
lret
adc
mov
or
inc
inc
xchg
pop
sbb
mov
add
mov
add
dec
cmpb
cwtl
loop
or
mov
mov
mov
sbb
cmpsl
popf
mov
in
fcomps
or
xchg
or
mov
jno
in
xchg
out
fidivs
sbb
cmp
notb
jmp
mov
daa
js
xchg
mov
popf
lock
test
mov
mov
pop
iret
mov
mov
into
pop
mov
push
mov
fnsave
imul
addr16
sub
pop
rolb
pop
idivb
mov
mov
test
pop
pop
loope
pop
mov
mov
fsubs
and
jno
or
js
xchg
cmpsb
mul
mov
cmp
pop
stos
xor
jnp
sub
and
rorb
mov
nop
xchg
adc
shll
cmpsb
gs
push
pop
repz
out
pop
popa
inc
mov
mov
outsb
xor
rclb
mov
insl
lcall
adc
mov
mov
leave
shrl
ffree
ds
inc
mov
mov
jg
push
lock
pop
xor
in
sarb
mov
cmp
jecxz
mov
rol
cmpsl
inc
cmp
mov
mov
mov
push
mov
decb
ret
inc
add
dec
fsubrl
mov
fs
loope
jl
fidivs
mov
sbb
hlt
stos
mov
mov
ja
and
jnp
mov
push
jle
cmp
lods
mov
mov
pop
lods
mov
enter
xor
inc
or
in
popa
stc
xor
xchg
push
test
mov
movsb
sub
xor
adc
test
out
jns
xor
les
insb
nop
cld
and
push
or
gs
mov
shlb
ret
out
push
ret
leave
jp
pop
fs
xor
ja
divl
push
in
pop
mov
stos
xchg
inc
xor
jnp
into
aad
ljmp
addr16
rcrl
stos
lods
inc
imul
cmp
sub
xor
sub
outsb
or
jne
and
lock
mov
fdivl
mov
fisubrs
ss
mov
incb
sti
mov
pop
and
sbb
sbb
mov
enter
clc
pop
das
xchg
mov
mov
cmpsb
test
sub
into
pop
and
aad
mov
sbb
lahf
xchg
lret
mov
jnp
cmp
fcompl
mov
or
jb
pusha
push
stos
mov
cmpsb
outsl
adc
shl
stc
ss
cmp
js
mov
out
mov
mov
fs
out
jo
fsubrl
call
gs
into
inc
dec
sub
pop
data16
cltd
jb
jns
jbe
popa
or
cmp
fwait
loope
push
add
xchg
test
dec
int3
adc
push
lret
lahf
hlt
cli
sbb
mov
inc
cmp
inc
cmp
insl
je
les
adc
jo
mov
jno
xor
and
bound
sub
js
pop
xchg
test
push
and
movsb
sbb
adc
jl
icebp
mov
hlt
jecxz
shlb
pop
and
xchg
xor
jne
jp
js
add
movsb
mov
test
stc
stos
ss
lds
jns
mov
xor
mov
xorb
push
imul
push
shlb
add
aaa
inc
push
cs
ret
mov
cltd
sbb
push
sahf
hlt
cmp
and
pop
insb
mov
cld
sbb
jb
scas
dec
inc
das
lret
add
stos
stos
dec
xchg
cmp
add
pop
cmp
movsl
or
test
popa
outsl
cld
mov
sub
push
flds
movsl
sahf
sarb
add
cmp
ljmp
mov
pop
fisubrs
mov
push
mov
clc
push
mov
addb
fsub
insb
shr
mov
sub
dec
mov
sahf
fbstp
push
push
jb
mov
out
push
sub
xor
sbb
insl
xlat
mov
dec
sbb
xor
scas
mov
mov
push
daa
mov
rorl
xchg
fiadds
cmp
movsl
call
mov
dec
mov
andb
repnz
push
cld
shrl
mov
cwtl
xchg
xchg
int3
notl
mov
imul
into
loope
les
sbb
mov
sub
das
or
inc
into
rol
xor
lods
xor
mov
or
cmp
lods
xor
mov
or
adc
jae
unpcklps
mov
in
inc
lahf
jns
lret
fs
call
mov
loopne
jp
cmp
mov
mov
xor
push
and
repnz
stc
in
cmp
stos
push
inc
lods
inc
outsb
mov
dec
pushl
out
lods
mov
lock
int3
cmpsb
sarl
lods
pop
mov
mov
outsb
mov
dec
jp
js
daa
pop
insl
pop
lods
lock
sub
push
mov
jno
jo
xchg
stos
notl
mov
xor
push
ret
subb
mov
adc
jno
mov
mov
int3
jne
enter
out
mov
mov
mov
into
stc
sahf
or
xchg
mov
push
and
cmpsb
in
aad
mov
shlb
push
jo
sahf
mov
les
cltd
leave
nop
sti
mov
cmp
push
test
mov
mov
test
in
jmp
lock
or
mov
jle
scas
pop
dec
xchg
mov
jae
push
pop
out
xchg
mov
and
scas
xor
data16
xor
jecxz
and
cmpsb
je
pop
xchg
movsl
jmp
decb
lea
xor
xlat
outsb
sti
pop
xchg
loope
in
lcall
into
cmp
dec
insb
push
fsubs
dec
xor
push
inc
in
fnstcw
hlt
cmp
testb
js
xor
adc
icebp
idiv
mov
mov
out
jp
dec
je
mov
loop
fs
les
mov
call
sbb
jo
pop
jns
mov
sbb
cmc
fdivs
xor
aad
xor
jbe
jle
xchg
mov
clc
daa
or
ds
mov
out
jns
insb
int3
aam
cli
movsl
mov
mov
pop
mov
cmp
xor
ja
adc
xor
lods
fcmovne
out
push
mov
ja
adc
test
xchg
mov
jge
mov
in
js
dec
pop
jl
sbb
push
mov
jnp
nop
test
dec
push
mov
dec
imul
cmp
js
inc
mov
dec
add
in
mov
push
push
sbb
cmp
ret
mov
xchg
xchg
cltd
mov
sub
add
jne
cmp
in
stos
mov
stos
les
mov
jl
fidivrl
cmp
mov
scas
sub
sahf
mov
stc
dec
icebp
push
insb
cs
jno
push
loopne
sbb
mov
mov
outsl
lcall
fwait
jb
mov
idivl
pop
xor
sub
mov
stos
sti
test
rorl
jl
mov
or
and
addr16
lods
sub
dec
pop
mov
mov
pop
idivl
mov
inc
sti
lea
or
mov
bound
scas
sub
mov
push
cwtl
lret
mov
subl
lods
sub
push
fcmovnb
cmp
sarl
xlat
mov
gs
mov
mov
add
xor
jle
into
or
rclb
jge
sub
scas
mov
mov
jbe
mov
adc
out
inc
cs
fidivrs
mov
mov
or
shll
mov
cmpsb
add
pop
es
out
shlb
sbb
scas
cli
jb
mov
les
xchg
adc
mov
in
call
jns
out
notl
popa
ss
push
mov
lahf
notl
pushf
mov
push
loope
jnp
push
or
popa
into
mov
mov
inc
subb
sarb
rcl
xchg
sub
dec
xchg
mov
and
jae
pusha
and
lret
sahf
std
adc
cwtl
pop
jae
aad
cmp
leave
jmp
xor
mov
and
arpl
lods
dec
sahf
nop
adc
mov
jno
jne,pn
outsl
in
sbb
mov
and
xor
cmp
movsl
es
loope
aam
inc
jge
dec
mov
mov
sbb
movsb
mov
lods
lsl
xchg
shl
mov
jae
insl
push
mov
stc
mov
xchg
imul
cltd
inc
mov
sub
jnp
out
pushf
mov
pop
lods
cmp
mov
aam
popa
pop
sub
adc
mov
movsl
ret
fisttpl
push
mov
mov
xor
mov
mov
inc
fdivs
jp
mov
mov
jne
dec
outsl
pop
mov
or
bound
lods
inc
orl
fwait
sub
jmp
xor
mov
test
dec
xor
int3
jo
out
insl
imulb
icebp
add
mov
pop
push
ror
jmp
addr16
ret
jnp
jo
jae
mov
popa
movsb
insb
mov
mov
jbe
loop
jecxz
cwtl
mov
loopne
and
jmp
jmp
aam
mov
stc
add
cmc
xchg
sub
jno
adcl
jle
lret
mov
push
lds
mov
push
sub
xor
mov
insb
mov
and
lahf
imul
rcrb
jg
mov
mov
ss
jne
inc
xor
cmpsb
icebp
test
movsl
imul
mov
movsl
fimull
imulb
nop
add
dec
xorb
test
jbe
insb
loopne
jmp
mov
mov
pop
aam
mov
xchg
test
loope
xchg
lods
adc
mov
pop
ss
mov
dec
xchg
jle
test
inc
loope
mov
add
inc
pop
mov
inc
or
dec
jg
shrl
xorb
mov
loope
jae
or
fsubrl
cwtl
call
mov
mov
dec
push
inc
mov
pop
cmpsb
test
xchg
xchg
hlt
jecxz
scas
mov
jge
into
js
and
mov
pop
stc
sahf
fnstsw
jecxz
pusha
add
into
sub
data16
dec
or
cmp
movsl
js
mov
movsb
in
cmp
push
sub
xor
enter
shl
push
pop
dec
mov
pop
adc
mov
repnz
mov
mov
popf
or
ljmp
and
es
push
divl
bound
xor
and
dec
sbb
jl
shl
dec
xchg
fstps
mov
sbb
inc
push
xchg
add
cmp
pop
xor
bound
jne
fsubs
push
push
or
mov
arpl
mov
cmpsb
popl
imulb
in
mov
cmc
mov
repnz
mov
xchg
xlat
push
dec
or
fcoms
pop
mov
es
inc
jecxz
sub
lods
and
outsb
inc
adc
or
and
loop
mov
data16
out
push
xchg
dec
mov
inc
stos
pushf
dec
mov
mov
mov
test
ficoms
movsl
ss
sub
xchg
xor
inc
fwait
jo
adc
mov
push
push
mov
fs
addb
insb
lcall
sbbl
rcrb
mov
push
nop
mov
mov
adc
mov
add
mov
cmpsb
ss
mov
cmc
pushf
sahf
scas
xor
dec
mov
stos
push
sbb
mov
sbb
jb
sbb
inc
shll
out
mov
and
dec
inc
lret
popa
movsl
int
mov
inc
imul
shll
arpl
cwtl
and
stos
test
cmp
adc
arpl
push
pop
mov
call
jno
dec
ror
pop
add
jne
adc
inc
mov
push
jmp
pop
and
sub
mov
pop
fisubrl
jl
inc
xchg
insl
mov
pop
imul
int3
pop
mov
fwait
push
xchg
sbb
xor
popf
stos
adc
mov
insl
xlat
pop
mov
jmp
shlb
daa
jns
divl
insl
jb
int
out
adc
jmp
inc
or
pop
pop
add
xchg
mov
xchg
jg
push
mov
xchg
aam
inc
mov
fiaddl
jbe
leave
xchg
mov
and
imull
cmpsl
mov
into
cmp
scas
pop
sbb
jns
aaa
xor
addr16
mov
add
icebp
xchg
loopne
sahf
mov
mov
mov
sub
and
ret
mov
dec
inc
cmp
push
mov
xorl
jno
xor
cmp
test
loope
cwtl
sub
stos
je
aaa
shlb
add
pop
jecxz
cmp
pop
mov
in
movl
test
scas
or
les
dec
mov
or
dec
jo
or
aad
scas
lods
js
and
lahf
add
jmp
cwtl
mov
dec
mov
sti
mov
sub
xchg
mov
jp
push
fists
stos
mov
and
mov
jp,pt
mov
ljmp
dec
stos
insb
lahf
movsl
in
jmp
sub
stos
mov
mov
fwait
lds
fnstsw
bound
sarb
into
or
aam
xor
lcall
shlb
sub
cmp
lea
mov
xor
test
loope
jecxz
jb
sbb
lds
in
les
frstor
or
aam
push
std
rcr
bound
test
jb
pop
aam
aas
sbb
cmc
cltd
adc
push
lret
arpl
shrb
mov
mov
cmpsb
shlb
xchg
test
pop
imul
and
push
mov
pop
jne
mov
or
mov
mov
mov
imul
mov
jg
jne
push
xor
jo
adc
mov
and
mov
dec
lods
xchg
or
popl
xor
lret
add
cwtl
in
lret
mov
mov
mov
pop
push
fsubr
xor
jmp
jecxz
mov
jbe
xchg
into
inc
outsl
das
mov
jmp
inc
xchg
cld
mov
stos
or
das
jg
cwtl
ja
dec
pusha
add
rorl
insb
cmp
rcrl
push
mov
xchg
lock
es
out
pop
mov
sbb
mov
dec
stc
scas
jb
aas
pushf
mov
icebp
mov
or
lods
inc
xchg
clc
xor
movsb
movsl
mov
sahf
popa
mov
cmpsl
jmp
jl
ret
clc
add
mov
sti
jns
mov
adc
ljmp
es
dec
pop
mov
cmp
mov
mov
gs
shlb
pop
mov
push
xor
pop
mov
xchg
je
roll
lcall
aas
xchg
inc
mov
cld
cli
xchg
shlb
lea
frstor
ret
fstpt
sub
call
repnz
shll
not
andl
mov
icebp
pop
xchg
mov
xchg
popf
dec
dec
cmc
hlt
scas
ljmp
stc
jns
std
mov
pop
cltd
in
dec
and
cmpsb
in
push
mov
cmp
xchg
xchg
sbb
icebp
andb
dec
pop
cmp
mov
xchg
mov
add
xor
jg
aam
xlat
sahf
lret
pause
jl
xor
dec
xchg
je
xchg
pop
pop
movsb
hlt
mov
mov
push
int3
insb
in
jmp
mov
aam
icebp
lcall
sbb
push
cmp
mov
sub
sbb
mov
js
mov
xor
jp
fdivrl
aad
mov
data16
loopne
or
and
sahf
adc
or
mov
mov
cld
fxam
fisttps
mov
repnz
and
je
test
mov
mov
addr16
xchg
xchg
nop
test
leave
dec
sbb
cmp
popf
out
movsb
sbb
mov
push
gs
repnz
jle
add
or
cltd
insl
mov
mov
sbb
push
add
arpl
xorb
fildll
movsb
ret
fcmovnb
ljmp
mov
dec
dec
adc
iret
lahf
lods
sbb
pop
fildl
xchg
scas
test
xchg
test
mov
or
or
mov
insl
movsl
sub
aam
mov
mov
cwtl
cmp
mov
js
dec
sub
je
or
lahf
mov
mov
ds
mov
mov
xchg
sub
dec
adc
jne
je
adc
int
pop
in
xchg
shrl
test
and
xchg
hlt
mov
int3
push
data16
jmp
jne
outsb
mov
mov
xchg
xchg
insb
repz
mov
xor
dec
sarb
mov
and
lods
ljmp
sti
mov
inc
sbb
push
aam
arpl
fcmovne
aam
mov
movsl
xor
jbe
je
pop
mov
mov
mov
pop
and
sub
int3
in
fisubs
adc
cmpsb
mov
test
lcall
bound
inc
dec
jne
adc
cmp
or
mov
xchg
hlt
mov
fldcw
scas
cmpsb
imul
in
xor
sbb
mov
and
add
pop
xorl
roll
mov
adc
pop
lods
xchg
and
xchg
in
imul
ds
mov
and
cli
movsb
xchg
ja
push
mov
fidivs
push
jp
outsb
leave
dec
cmp
mov
vpshlq
sub
mov
and
jae
cmp
xchg
push
scas
sub
pop
stos
pushf
loope
cld
push
mov
mov
push
cmp
add
sub
jge
test
sarb
fldenv
fs
imul
or
push
and
aad
call
adc
dec
mov
mov
or
fdivs
es
xchg
xor
aas
cmpsl
dec
rcll
jnp
xor
push
and
in
push
sahf
inc
xchg
imul
dec
jp
fisubrs
ljmp
push
xchg
mov
push
sbb
xchg
adc
xchg
lods
aaa
xor
push
imull
mov
fstl
jne
mov
add
cwtl
pop
sbb
leave
dec
xor
mov
je
inc
add
xchg
pop
aaa
cmc
mov
es
mov
aad
xor
fdivs
inc
cmpsb
inc
shrl
add
std
mov
inc
inc
inc
sbbb
jl
clc
addr16
xchg
mov
fbstp
adc
mov
push
adc
mov
and
mov
mov
mov
loope
inc
fstpt
cwtl
adc
mov
clc
jb
push
inc
push
mov
out
fcmovnb
push
lods
mov
les
jno
xchg
mov
aaa
mov
div
adc
mov
adc
sbb
xchg
mov
outsb
ljmp
and
cmpsb
gs
xchg
jns
bound
mov
jne
and
int
mov
xchg
mov
jmp
lcall
aam
xchg
mov
mov
sbb
mov
in
loopne
and
mov
mov
das
cli
je
mov
mov
lods
push
xchg
pusha
mov
mov
xchg
mov
adc
fisttpl
gs
jbe
scas
ss
pop
mov
sub
inc
xchg
in
shl
mov
lock
fnstenv
inc
shr
add
jmp
data16
scas
cwtl
or
push
jo
mov
mov
jns
out
and
push
mov
pop
xchg
out
in
cs
test
int3
jge
pop
cwtl
jl
cmpl
cmp
mov
inc
fwait
mulb
pop
dec
mov
mov
adc
stos
mov
mov
das
roll
lods
and
xchg
icebp
pop
mov
mov
sbb
jae
pop
pusha
ret
in
mov
in
mov
mov
push
scas
push
fcomps
mov
stos
iret
mull
addr16
xor
adc
or
bound
sub
dec
cmp
xorb
xor
mov
shlb
mov
lods
or
popl
inc
pop
and
inc
aaa
xor
or
jmp
imul
sub
cld
dec
mov
dec
sbb
add
mov
popa
pop
xor
outsl
pop
mov
int3
jle
bound
dec
push
pushf
push
inc
mov
rcrl
fidivl
xchg
jecxz
sbbl
cmp
mov
mov
int
pop
aam
xlat
fnstenv
icebp
pushf
or
jno
shll
xchg
xor
adc
xchg
and
adc
ljmp
mov
or
les
sbb
sub
cwtl
jmp
sbb
inc
xchg
push
mov
push
jns,pn
mov
xchg
and
pop
xchg
mov
jb
scas
out
clc
xor
ret
sbb
mov
inc
imul
cwtl
mov
inc
mov
mov
iret
add
cmp
or
push
pop
inc
sub
ret
hlt
mov
or
mov
adc
data16
mov
movsl
jle
ja
enter
stc
sbbl
cs
xchg
mov
ret
adc
outsl
lcall
lds
int3
push
ja
enter
and
adc
lods
cmp
fnstcw
mov
xor
inc
xor
negb
mov
inc
mov
fmuls
mov
loopne
jno
and
std
mov
cld
or
movsl
xchg
push
pop
jl
sub
icebp
into
inc
lcall
mov
cmp
cmp
cwtl
push
push
and
mov
mov
dec
popf
sub
scas
cltd
or
lods
mov
fsubs
mov
pop
jecxz
xchg
bound
pop
mov
mov
dec
dec
push
cmpsb
xchg
mov
mov
fsubs
mov
inc
dec
out
mov
mov
sbb
cs
mov
xor
pop
mov
mov
or
push
in
rolb
test
sbb
out
push
xlat
repnz
fidivs
dec
cmpsb
jb
lahf
mov
push
push
xchg
cmp
xor
loop
xchg
mov
jg
cmp
dec
xor
xchg
jbe
loop
and
int3
or
imul
add
mov
mov
stos
cmpsl
lret
fs
xchg
pop
xor
test
push
hlt
js
push
xor
fnstenv
scas
and
sarl
not
ja
insl
dec
mov
sub
cli
mov
jno
or
dec
int3
mov
insl
lods
adcb
hlt
in
jb
lcall
sbb
imul
out
cwtl
xchg
sbb
je
and
inc
push
mov
cmc
arpl
jo
ljmp
mov
xor
test
movsl
das
mov
xor
sarb
xorb
cmp
popf
in
icebp
popl
dec
sbb
inc
push
loope
cli
mov
lahf
aad
xchg
insb
jmp
mov
rcrl
add
neg
mov
pop
pop
pop
lods
jae
test
in
mov
inc
add
mov
push
mov
mov
dec
sbb
rcl
icebp
mov
rorb
sub
rorb
fsubr
sbbl
imul
mov
in
cmpsl
pop
insb
dec
mov
sbb
pop
sub
in
push
sbb
inc
fisubl
movsl
dec
jns
cmpsl
adc
das
sbb
mov
rolb
mov
adc
loope
pop
movsl
popa
mov
or
or
and
add
jmp
in
xor
movsb
and
xchg
add
loop
pusha
popa
cmpsl
lods
adc
mov
mov
jb
mov
in
sub
or
xlat
mov
int3
jne
stos
and
mov
outsl
sbbl
hlt
xchg
mov
mov
dec
mov
jle
int3
stc
mov
sti
and
fwait
imul
or
ficoms
fneni(8087
fcmovbe
pushl
xorl
popa
ret
scas
dec
mov
les
loope
out
imul
mov
stos
and
sbb
mov
imul
lock
rol
aaa
adcl
pushl
das
sub
stos
xlat
adc
data16
jecxz
push
mov
ret
icebp
dec
add
hlt
jle
adc
xchg
enter
aam
push
mov
xchg
stos
mov
idiv
bound
lea
movsl
mov
xchg
mov
mov
mov
jne
fstl
or
fdivl
push
int3
add
in
iret
ja
mov
sbb
insb
mov
or
fwait
addr16
mov
sbb
movsb
xor
test
add
fnstsw
jbe
cli
mov
rcll
push
mov
test
test
cwtl
imul
xor
jno
lds
lret
mov
mov
scas
clc
loopne
inc
pop
mov
add
mov
or
and
stc
add
adc
add
dec
cmp
xor
out
pop
push
test
sub
in
jmp
and
mov
or
imul
cmc
jge
jo
rcll
cmpb
or
mov
fildll
jmp
push
aam
push
add
aam
cpuid
lods
stos
cmp
and
inc
push
pop
mov
mov
fisttpl
inc
inc
mov
mov
mov
mov
data16
and
loop
cltd
je
js
ret
xlat
push
aaa
test
loope
data16
mov
push
lods
mov
leave
adc
and
fimuls
addr16
fs
adc
and
mov
pop
fistps
mov
mov
out
dec
mov
test
loop
mov
xor
ljmp
cwtl
pop
sub
jmp
out
mov
cmp
mov
add
out
int
les
fisubrs
test
movsl
adc
repz
sub
lods
add
subb
push
inc
lods
jnp
mov
fimuls
xchg
scas
lahf
out
jle
xor
and
cmp
das
mov
xor
mov
mov
add
ss
mov
jecxz
shll
and
mov
mov
sbb
in
dec
mov
mov
mov
adc
sub
mov
xchg
xor
mov
loop
and
movsb
push
sbb
jecxz
cs
data16
dec
inc
mov
mov
sbb
dec
cld
cmp
xchg
fucomip
ss
cmp
cmp
int
jns
into
xor
insl
cwtl
sarl
lea
push
xor
aam
mov
test
mov
les
add
out
mov
ret
gs
test
incb
add
hlt
lret
and
sbb
arpl
call
mov
in
pushf
imul
les
ss
jb
inc
pop
inc
mov
adc
aam
cmc
and
adc
pop
inc
mov
shlb
add
std
push
pop
mov
mov
push
fidivrl
push
pushf
mov
adc
push
xchg
sbb
mov
fisttpll
hlt
or
movsl
xorb
cmc
inc
cmpsl
hlt
out
int
icebp
push
hlt
xchg
movsb
fwait
jns
mov
div
lret
enter
cmp
gs
and
faddl
orl
int3
aam
cmp
mov
shll
push
int
dec
aad
lods
xchg
fwait
loope
adc
fsubs
mov
adc
mov
push
push
lods
insb
cmp
inc
out
fnstsw
leave
mov
stos
pushl
fbstp
inc
push
push
pop
nop
xor
lods
shrl
mov
push
xor
cmpsb
int3
mov
and
cld
fs
mov
test
dec
shrb
call
lcall
pop
ret
ret
mov
mov
icebp
push
pop
xor
mov
lock
and
jnp
jbe
cwtl
inc
in
lcall
xchg
je
in
fs
cli
or
xchg
sub
add
pop
bound
cmpsb
pushf
jns
xor
push
cli
jg
mov
adc
mov
or
dec
dec
test
mov
pop
rorl
hlt
lahf
mov
push
xor
scas
add
shrb
imul
sub
or
sub
scas
push
mov
mov
sub
imul
test
jns
mov
adc
jg
hlt
movsl
in
pop
lea
daa
dec
lret
inc
mov
cld
add
addr16
mov
std
int3
pop
mov
cmp
mov
xor
insb
and
mov
ss
movsb
pop
sbb
mov
ds
sahf
cld
push
push
rorl
ror
xchg
data16
and
cltd
movsl
lahf
std
mov
arpl
stos
test
cmc
mov
xchg
data16
mov
and
ds
movl
aaa
cmp
mov
out
push
insb
out
in
mov
push
inc
pop
or
arpl
js
pop
mov
sub
lahf
jg
jae
mov
movsb
ret
sti
inc
adc
pop
push
test
mov
mov
sub
mov
or
loopne
popf
lahf
cwtl
lods
mov
push
adc
sbb
jmp
out
ja
push
lods
jnp
mov
mov
lcall
and
enter
mov
sbb
hlt
popf
jo
add
pop
fidivl
sbb
mov
shlb
ja
or
mov
popa
sbbb
pop
mov
mov
sbb
and
bound
mov
shll
cmp
enter
sbb
add
mov
push
push
lcall
sub
pusha
pop
pop
jno
mov
popf
int3
mov
or
mov
je
xor
fs
mov
jg
mov
lods
int3
stos
aam
mov
jmp
ret
into
cmp
or
sahf
mov
pop
scas
jecxz
inc
pop
jb
mov
jnp
xor
test
pop
lods
push
mov
pop
cmp
mov
lea
ret
in
mov
aaa
sub
mov
jno
push
out
push
loopne
or
mov
sub
jae
inc
sbb
or
cld
and
dec
inc
dec
add
pop
notl
mov
pop
mov
add
pop
xor
push
dec
and
cmp
mov
push
shl
cmp
repz
mov
fnstsw
mov
mov
dec
insl
or
push
sbb
xor
mov
nop
inc
sbb
mov
hlt
int
lret
jl
and
mov
or
mov
fwait
cmp
lret
sub
or
pop
lahf
xor
das
xchg
mov
jns
aaa
out
pusha
and
or
mov
lahf
cmpl
pusha
ja
push
push
mov
outsb
cmpsb
or
mov
cmp
test
pop
mulb
je
mov
or
cld
fwait
mov
lds
orl
out
es
ror
in
cmpsb
xchg
cld
xchg
js
call
punpckhdq
mov
sbb
mov
ss
cmp
leave
lcall
pcmpeqb
dec
in
push
adc
mov
sub
scas
sbb
pop
sub
out
enter
xchg
in
pop
add
insw
jno
pop
dec
inc
es
in
les
lret
repz
cmpsb
push
test
sub
or
fbstp
xor
cmp
incb
inc
mov
sbb
shll
cmp
lods
dec
js
jbe
xchg
imul
dec
mov
sub
cmp
xchg
sbb
adc
cmpsl
rcrb
jl
jecxz
cwtl
imul
mov
pop
xchg
inc
arpl
push
mov
and
mov
mov
es
xchg
pop
sub
mov
sbb
jmp
mov
mov
data16
rorl
stos
enter
mov
sub
out
sahf
sub
cwtl
mov
pop
cmp
data16
loope
fildll
sbb
enter
roll
mov
es
push
jno
jbe
in
lret
pop
or
outsb
call
sbb
jbe
outsl
inc
pop
leave
inc
jp
add
mul
mov
pop
rorl
addr16
sahf
jl
fs
scas
popl
jmp
cwtl
out
mov
and
xchg
xchg
mov
lea
mov
cmp
aam
shll
cmc
jno
mov
jbe
fdivrs
sahf
sbb
add
leave
add
pushf
mov
or
ret
dec
jge
test
mov
inc
shr
add
aam
cli
mov
lods
stos
add
mov
adc
aaa
push
mov
imul
sub
call
mov
or
add
lock
test
adc
stc
or
mov
icebp
leave
push
into
xor
sbb
daa
sti
mov
adc
lods
into
sub
gs
scas
push
jnp
jo
in
xchg
mov
adc
pop
je
sti
cltd
inc
or
fistpl
roll
popf
popf
repnz
sub
out
test
add
mov
scas
dec
loopne
daa
xchg
pushf
mov
mov
cld
in
mov
xlat
cmpsb
adc
hlt
fistl
lds
repz
mov
insb
stos
icebp
imul
cmc
in
fs
outsl
jg
mov
sbb
leave
popa
sti
ret
ljmp
lcall
xchg
mov
push
cmc
xlat
popf
test
mov
adc
fnsave
mov
daa
mov
mov
or
adc
ja
mov
iret
lret
ret
cmp
mov
je
add
push
cmc
mov
fidivrs
fsubrs
rol
ret
and
xchg
push
idivb
inc
push
add
inc
lods
xor
sbb
js
add
jge
inc
mov
sbb
sub
mov
and
cmpsl
sub
pop
es
ficoml
and
ret
movsl
jno
push
mov
or
mov
jbe
sti
push
xor
dec
adc
jg
jb
ror
repz
pop
inc
mov
jno
loop
sti
dec
pop
mov
xor
xor
icebp
xchg
cmpsl
rcll
je
sub
je
xchg
jl
popa
cmp
mov
enter
or
xor
adc
test
mov
and
shl
xor
mov
fcmove
fbstp
scas
divl
shll
stc
mov
out
rep
out
jno
xchg
mov
inc
jg
out
mov
mov
dec
in
int
js
adc
jle
mov
add
outsb
ss
sarb
out
enter
mov
pop
daa
dec
jp
das
fnsave
lea
mov
inc
mov
push
cld
jno
xchg
pop
xor
mov
pushf
xchg
insb
pusha
insl
hlt
cmpsb
scas
and
or
mov
mov
das
jno
out
ret
cld
loop
out
outsb
fs
in
stos
pop
dec
cmp
push
pop
add
ret
jg
lock
sub
mov
inc
or
adc
aad
lods
mov
push
dec
mov
test
sbb
xchg
mov
xchg
inc
loopne
insl
mov
ret
cmpsb
adc
push
jbe
outsl
xor
lcall
fstps
sub
lret
or
mov
lahf
pop
cli
je
adc
push
jmp
addb
xor
inc
sbb
mov
testb
mov
mov
mov
mov
rcrb
paddusw
jp
mov
sub
sbb
dec
mov
dec
xor
jmp
hlt
jb
mov
fs
icebp
lretw
mov
pop
jne
jl
mov
xor
sti
adc
xchg
push
mov
dec
aas
or
loope
mov
rcrb
mov
notl
bound
int
add
test
test
mov
push
call
inc
mov
adc
aam
cmc
mov
ds
mov
add
divb
les
shrb
and
pop
mov
cmpsb
push
sbb
ficompl
mov
in
sub
cmp
mov
cmc
mov
ja
jle
pop
mov
in
mov
sub
loop,pt
clc
stc
push
lahf
cmp
fs
mov
fldcw
loopne
cmp
cmp
imul
cmp
add
jae
add
int
pusha
or
stos
movsl
mov
push
inc
lods
pop
xchg
inc
xchg
mov
dec
shll
mov
notl
mov
and
mov
push
ret
mov
movsl
pushf
pop
jb
or
rclb
stos
inc
mov
and
cmpl
rclb
div
cwtl
push
in
pop
mov
addr16
xchg
sbb
sub
fidivrl
cli
mov
lods
in
jno
dec
mov
cmpsb
gs
add
jecxz
es
lods
mov
imul
pop
mov
test
jg
xor
mov
mov
dec
popf
mov
rcll
mov
mov
arpl
imul
int
sbbl
xor
sar
adc
xchg
mov
je
cmpsl
sub
mov
dec
jnp
mov
loope
test
idivl
sub
outsb
lods
cmpxchg
fldcw
mov
mov
mov
pop
fidivrl
cmp
mov
hlt
enter
mov
mov
cmpsb
jmp
test
xor
mov
push
jo
dec
pop
add
scas
sbb
xor
mov
push
fisubs
lods
dec
mov
jnp
hlt
sbb
out
stc
mov
mov
sub
fimuls
mov
mov
dec
push
jl
mov
sti
ljmp
mov
adc
xchg
inc
test
or
push
int
pop
cmpsb
in
sub
addr16
add
movsl
dec
cmpsb
fwait
or
push
aam
and
cltd
sub
loop
mov
mov
test
xchg
js
xor
in
adc
sbb
or
or
mov
jge
xchg
jae
fs
push
fidivl
xlat
icebp
add
out
push
jp
shlb
adc
mov
xchg
sub
aam
xlat
pop
in
aam
dec
xchg
mov
std
adc
rcrb
pop
inc
ficoml
jae
stos
jbe
shlb
mov
sbb
push
fdiv
loopne
jge
inc
ret
lret
xor
sub
dec
popf
sbb
mov
cmpsl
sahf
imul
mov
movsb
or
gs
mov
orl
add
jl
cmp
fs
in
mov
mov
outsb
sbb
xchg
push
aam
push
loopne
add
lock
mov
push
add
mov
inc
call
fsubrs
outsb
fistpll
stos
outsl
adc
es
mov
sbb
xor
pushf
and
xor
mov
subl
adc
add
hlt
sub
in
cld
mov
mov
clc
pop
dec
cmpl
or
stos
dec
mov
mov
dec
mov
sbb
int3
dec
out
pop
pop
sti
sahf
sub
sub
adc
fdivs
cmpsl
loope
mov
xor
fwait
cmpl
lods
in
popf
inc
stos
pop
in
or
or
xor
cmc
shrl
mov
xor
insb
in
mov
gs
mov
mov
xchg
fsubrl
movsl
jl
hlt
hlt
cli
jp
push
and
add
sarb
int
xchg
adc
lods
push
pushf
es
pop
adc
ljmp
hlt
mov
mov
outsl
xor
jp
std
fcmovnb
mov
mov
xor
addl
sub
shll
rclb
add
mov
dec
add
dec
ljmp
mov
dec
movsb
or
jecxz
shrl
xlat
mov
mov
shrb
or
cltd
cmp
or
dec
sub
mov
mov
aas
lret
cmpsl
fucomip
mov
xchg
pushf
addl
mov
mov
fmuls
popf
in
sub
mov
into
lods
mov
sbb
mov
mov
mov
repz
scas
mov
std
psubw
push
xchg
or
mov
les
add
mov
pop
testl
cmp
jecxz
int3
mov
cs
jbe
js
dec
mov
mov
das
insb
bound
and
daa
hlt
or
aaa
jecxz
push
sbb
dec
cwtl
pop
inc
mov
cmp
popf
imul
clc
cmp
mov
adc
addr16
jbe
mov
xor
cmpsb
add
das
jns
and
lahf
jae
mov
add
lock
ss
bound
rcr
mov
cmp
pop
mov
cmc
pop
xchg
add
testl
lock
mov
push
sub
mov
mov
insl
stc
cmp
cmp
fwait
mov
aaa
movsl
ja
aam
les
loopne
mov
mov
cmp
cmp
mov
shrl
test
pop
xchg
mov
xchg
sar
cltd
je
mov
ja
cmp
pop
sbb
mov
xchg
aam
lea
and
lcall
fdivl
lock
iret
nop
stos
xor
xor
mov
cmpsb
fmull
mov
lcall
pop
mov
sub
rcr
test
mov
popa
mov
stos
pop
sti
mov
test
cli
fadd
mov
lods
xchg
fstpl
push
call
jmp
xchg
cs
cltd
lods
stos
xchg
stc
sub
hlt
xchg
and
ss
jmp
push
inc
mov
pop
xchg
shrl
nop
or
add
fcoml
add
dec
test
sub
jb
sub
sbb
mov
mov
adc
rcrl
inc
xor
inc
adc
push
mov
sub
neg
mov
xor
test
jbe
mov
ja
aam
insl
ret
fistpll
cmp
xchg
stos
popf
mov
shrb
and
mov
jae
mov
andb
push
sub
aaa
dec
sub
jecxz
mov
and
xchg
hlt
imul
roll
xchg
ficompl
mov
sub
sbb
popa
idivl
mov
in
pop
mov
push
push
icebp
lcall
xchg
cld
std
sbb
inc
arpl
popf
inc
scas
mov
jmp
jns
insl
pop
bound
lock
mov
leave
add
cmc
and
mov
pop
or
mov
xchg
aaa
repz
mov
stos
enter
inc
pop
sahf
mov
or
mov
les
dec
jl
push
mov
ja
rcrl
mov
inc
test
pop
in
out
dec
mov
shlb
adc
cmc
push
add
les
shlb
movsl
mov
fldl
outsl
test
outsb
push
ds
xchg
fcoml
pusha
in
cld
mov
inc
xor
mov
out
dec
cld
adc
mov
out
mov
sahf
jo
mov
pop
xor
loop
lcall
orl
or
aaa
mov
xlat
and
mov
enter
dec
test
cmpsb
cmp
into
cld
adc
rcr
sub
and
cwtl
int
scas
xor
mov
push
call
push
add
repz
or
adc
fstl
fnstenv
mov
inc
fsubrs
mov
jno
imul
lcall
inc
push
adc
shlb
je
loopne
lcall
xorb
xor
js
je
cmp
lahf
or
mov
sbb
data16
popf
xor
ljmp
fcomi
aas
aam
std
es
call
adcl
jmp
add
xchg
in
out
nop
cmc
mov
mov
pop
pop
jmp
fsubs
lods
xor
sbb
cmp
add
mov
or
mov
fdivrl
mov
shl
inc
dec
lods
mov
mov
mov
movsb
mov
dec
in
cmpsb
loopne
xor
lds
enter
cmp
adc
push
negb
mov
and
xchg
sbb
scas
add
xor
adcl
mov
lea
in
xor
mov
pop
lock
ss
add
es
and
mov
add
ret
pop
rorl
jne
iret
push
pop
clc
mov
orl
push
shrw
jbe
inc
lcall
into
movsl
jno
pop
les
leave
gs
xor
sti
fmull
mov
imul
xor
les
mov
jnp
mov
jns
add
mov
mov
jge
push
and
dec
mov
decb
sub
mov
xor
cli
movsb
dec
repnz
lock
fs
jp
jp
fdivs
data16
shrb
mov
add
jg
mov
sub
push
leave
icebp
imul
dec
mov
mov
inc
divb
aas
lods
xor
sbb
and
js
or
jo
je
sbb
jne
or
hlt
lahf
push
fwait
lds
ds
push
icebp
mov
std
xor
mov
adcl
enter
fcoml
or
test
lret
clc
jbe
stos
xor
ret
lds
xor
mov
mov
xchg
popa
mov
mov
lret
dec
mov
pop
or
xor
and
mov
xchg
jge
mov
xchg
imul
lcall
sub
les
mov
fwait
in
shlb
mov
rcll
fmuls
shlb
dec
test
fdivrl
and
inc
push
adc
scas
fnstenv
mov
repnz
xor
ret
mov
sub
in
mov
test
cltd
jle
lock
pushl
lea
out
mov
rorb
pop
sti
inc
add
mov
sbb
movsl
push
lcall
les
movb
and
fdiv
data16
arpl
sar
mov
inc
mov
fcmovbe
pushf
pop
int3
fsincos
fisubs
aam
subl
and
cli
shrb
int3
cltd
mov
fldenv
mov
lods
outsl
xchg
xchg
pop
mov
in
mov
jmp
jg
add
repnz
mov
hlt
push
test
mov
xchg
push
aad
and
in
cmpsb
pushf
bound
adc
cld
jg
dec
mov
sbb
jns
ficompl
mov
gs
dec
jp
loop
test
xor
mov
test
or
and
jp
inc
test
pusha
adc
lods
mov
xchg
sar
lods
jno
pop
mov
iret
into
cmp
outsb
mov
inc
inc
aam
rorl
mov
mov
mov
mov
lcall
mov
mov
xchg
push
fisubl
cmp
and
pop
pop
xchg
rolb
and
mov
mov
pushl
mov
scas
or
arpl
mov
mov
lret
add
ret
jp
std
lret
mov
das
pop
test
scas
loopne
sbb
xchg
fiadds
mov
xchg
lret
repz
fdiv
mov
lea
inc
mov
sbb
loope,pt
mov
jnp
lea
js
mov
shl
sahf
xchg
xchg
jmp
jae
xchg
ret
xor
fldt
sub
out
nop
push
mov
out
mov
ss
lret
push
jmp
in
pop
fistps
mov
push
mov
dec
daa
clc
les
out
rorl
adc
insb
xlat
jnp
jl
sub
fcmovne
scas
xchg
call
pop
pushf
mov
cmpsb
jmp
mov
pop
or
mov
xchg
mov
xchg
test
add
mov
inc
dec
and
shl
pop
mov
mov
mov
jnp
xor
adc
ja
dec
mov
test
xchg
cld
mov
bound
xchg
xchg
push
adc
cli
fists
cmpsb
inc
xor
jae
and
xchg
mov
cmpsb
cltd
xlat
mov
sub
aam
fists
sbb
lcall
xchg
mov
aaa
dec
xor
xchg
es
xor
jno
mov
int
jb
mov
add
mov
pop
js
outsl
pop
mov
mov
jge
ds
fistl
mov
lahf
clc
arpl
cld
icebp
mov
cmpsb
cmp
jecxz
push
fdivs
inc
mov
jbe
imul
mov
or
rcrb
jge
mov
or
mov
mov
add
inc
mov
sub
and
push
sbb
and
xchg
mov
inc
cmp
add
jbe
mov
xor
push
xor
cmpsl
rcrl
push
mov
push
je
jl
cmp
mov
shlb
sub
mov
icebp
aaa
cmp
mov
int
mov
mov
and
adc
mov
inc
push
stos
xchg
repnz
mov
add
ss
xor
es
inc
mov
jne
cwtl
fstpl
enter
sub
mov
mov
cli
sbb
iret
sbb
xor
cmp
xor
mov
mov
dec
pop
mov
add
cmp
xor
outsl
movsl
mov
add
sbb
iret
mov
xchg
shll
add
sub
shrd
cs
cmp
inc
data16
mov
rolb
stos
add
inc
mov
out
idivl
addr16
movsl
mov
data16
jl
into
negl
xor
sub
pushf
stos
ss
pusha
ja
int3
test
jns
xor
movsl
jne
mov
inc
andb
mov
mov
or
les
movsl
popa
stos
movsl
add
mov
inc
cmp
mov
jbe
jns
les
xor
ret
xor
cmpsb
lret
xchg
test
push
mov
sub
xor
mov
mov
dec
addr16
int
in
xlat
mov
mov
rol
out
xchg
sarb
cwtl
push
add
sbb
xchg
mov
dec
lds
dec
outsb
xchg
ds
mov
mov
shlb
test
xor
loope
out
add
cmp
inc
sbb
inc
fs
divl
jo
and
pop
push
jl
dec
mov
enter
fwait
and
mov
mov
call
or
cmp
mov
mov
jb
loopne
cli
add
jns
push
mov
sti
loope
into
add
mov
mov
pop
adc
inc
inc
or
mov
loop
call
and
adc
imul
mov
mov
mov
loope
lahf
push
dec
nop
out
es
fmull
mov
cli
test
cwtl
mov
gs
mov
jno
inc
mov
jg
mov
push
jle
movsl
pushf
jl
sub
sub
rclb
mov
mov
in
inc
aaa
mov
xchg
mov
mov
hlt
mov
push
mov
mov
fdivr
sbb
shlb
call
push
mov
stos
cs
mov
mov
mov
movsl
xor
ds
inc
sbb
mov
mov
inc
lock
mov
xor
mov
sub
push
push
mov
ror
cmpsl
mov
call
outsb
push
xor
repz
cmp
lahf
pop
js
shlb
push
pusha
mov
jae
sub
pop
adc
push
ja
loope
xchg
push
shlb
hlt
outsb
lret
andl
fwait
mov
or
pushl
push
lds
mov
nop
movsl
repnz
xchg
repz
pop
sbb
cmpsb
push
out
or
shll
lfs
movsl
add
push
fdivrl
sub
cmp
push
jecxz
mov
loop
mov
fistps
lods
leave
pop
mov
popf
orb
mov
xor
insb
or
xor
rclb
lcall
hlt
pop
push
imul
adc
sub
mov
testb
test
lock
js
mov
or
adc
pop
stos
lds
lock
out
in
decl
mov
or
jno
fnsave
ret
sbb
roll
test
fidivl
mov
pop
iret
add
sub
mov
mov
sub
and
shlb
pop
rdpmc
mov
push
sbb
pop
mov
mov
sti
jecxz
push
or
dec
mov
fisttps
xchg
test
movsl
push
outsb
xor
mov
push
cmc
ret
arpl
and
mov
jns
adc
lahf
sbb
bound
daa
pop
fldl
iret
cmpsb
cwtl
mov
lcall
mov
js
in
out
out
out
mov
xchg
lock
add
pop
push
shlb
jg
mov
cmp
adc
inc
insl
mov
xor
mov
jo
fbld
and
faddp
xchg
js
insl
mov
cmp
cmp
es
xor
mov
mov
add
arpl
xchg
in
cmp
lods
adc
mov
repnz
fistl
mov
je
jp
lret
sarb
push
mov
data16
fs
push
mov
pop
cmp
aad
add
cmpsb
lock
and
xor
jb
mov
add
mov
inc
rolb
rolw
int
push
push
cmpsl
lods
xor
xchg
mov
mov
mov
daa
test
ror
sub
jp
sub
cltd
test
mov
cmpl
push
arpl
mov
cwtl
dec
sbb
fwait
cmp
push
mov
cmpsb
vmread
out
iret
add
aam
sub
mov
andl
mov
mov
shl
and
mov
jl
jae
cmp
mov
add
rol
mov
out
int
leave
sbb
std
and
and
hlt
mov
mov
decb
jb
jne
mov
mov
js
xor
pushw
pop
mov
daa
mov
mull
mov
push
xchg
dec
push
pop
pop
fnsave
cwtl
aam
mov
icebp
xchg
ds
pop
hlt
pop
sub
lahf
lods
mov
jl
movsb
std
shl
mov
aaa
cmpsb
out
sbb
fwait
mov
iret
xor
aam
lret
int3
fisubrl
fistpll
rcll
cmc
mov
out
adc
mov
cmc
mov
dec
je
jge
out
mov
or
pop
mov
movsb
enter
popa
adc
and
cltd
icebp
loopne
scas
jnp
adc
mov
test
loope
movsl
movsb
mov
jns
das
mov
dec
in
out
test
lods
pop
dec
les
das
xor
cltd
inc
rol
sbb
js
sbb
enter
xlat
popf
test
pop
mov
pop
cli
jnp
xchg
add
es
aad
scas
mov
fcoms
lcall
xchg
hlt
in
xchg
shll
cwtl
sbb
mov
push
repnz
pop
dec
cli
mov
es
lret
mov
xor
jne
frstor
cltd
mov
ja
sti
int3
and
leave
mov
mov
mov
aaa
xlat
push
jns
hlt
and
jno
add
sbb
mov
sub
aas
cltd
cmpsb
add
sbb
daa
sahf
js
shlb
xor
insl
xorl
fwait
xor
clc
sub
jnp
mov
mov
repnz
sub
adc
inc
mov
adc
jecxz
ret
outsb
insb
fdivs
mov
stos
inc
loop
mov
mov
or
push
je
mov
aas
sbb
int3
mov
add
and
pusha
xchg
xchg
les
adc
jbe
mov
sti
rol
jl
sub
aad
jg
fs
mov
inc
sbb
add
movsl
dec
lds
rorl
mov
mov
cmp
lcall
cwtl
mov
std
and
xor
cmp
repnz
insb
int3
sti
sub
push
je
repz
mov
pop
imul
mov
mov
cmp
mov
loopne
fsubr
roll
fwait
aam
outsl
out
sahf
mov
addr16
gs
mov
xchg
rol
and
inc
push
mov
jl
pop
and
or
mov
xor
xchg
mov
test
xchg
mov
dec
lahf
fiadds
inc
imul
out
enter
outsb
cmpsb
in
mov
sbb
mov
mov
mov
out
cmp
pop
test
mov
lahf
xorb
lret
mov
mov
rcrl
dec
mov
int3
push
scas
imul
mov
sub
mov
jnp
jb
jl
cmp
filds
sbb
pusha
ja
and
xchg
cld
dec
call
addr16
bound
push
mov
jmp
in
xchg
mov
sub
xchg
dec
sbb
fadd
mov
adc
mov
lods
and
pusha
aaa
std
mov
ret
and
mov
adc
ret
push
mov
and
mov
andl
jmp
movb
sub
sub
jp
pop
and
pop
cmpsb
inc
fst
ss
cs
pop
pop
dec
mov
scas
rorl
pop
add
cmp
adc
cmp
dec
mov
insl
mov
loop
outsb
lock
hlt
mov
clc
push
call
out
fdivs
or
aad
push
fnstenv
jnp
cli
gs
aaa
inc
or
inc
in
mov
aad
out
pop
fildl
xor
gs
cld
mov
sbb
mov
aaa
cmp
jno
inc
xor
icebp
mov
sbb
adc
fwait
sub
insb
cli
inc
or
mov
push
push
aaa
lock
js
stos
xor
mov
pop
fsubs
lret
mov
jg
dec
mov
movsl
or
xchg
in
add
mov
iret
repz
add
shlb
sarb
rolb
test
scas
loopne
xchg
xlat
lods
xchg
push
clc
xor
enter
fidivs
pop
inc
push
rcrb
loopne
iret
lods
or
and
pop
arpl
mov
lret
mov
xchg
popf
cs
xchg
jno
xchg
test
ja
movsb
iret
cmp
jbe
push
aaa
idivl
xchg
mov
movsb
mov
mov
inc
jne
je
jge
ffreep
call
sti
mov
inc
enter
jmp
pop
and
js
lea
scas
jbe
fsubl
jne
mov
jo
add
jecxz
mov
mov
cmp
es
pop
adc
icebp
mov
mov
ljmp
lods
cmp
cmp
les
jns
jge
pop
mov
jmp
mov
inc
in
xchg
sub
arpl
nop
jmp
mov
inc
cmpsl
fwait
mov
cmp
orb
pop
mov
cmpsb
pop
mov
mov
push
inc
pop
or
cmp
in
push
sarl
les
daa
mov
push
cmc
cmp
push
mov
rcrb
out
push
inc
cwtl
clc
lods
iret
xlat
and
push
in
nop
xchg
sbb
pop
mov
in
insl
pop
mov
cmp
mov
cmp
fbstp
dec
cli
xor
fadd
mov
xor
les
mov
adc
xchg
gs
sbb
jg
ret
sbb
out
jno
xlat
mov
gs
loop
jp
pop
dec
data16
and
cmpsl
cltd
sub
fldlg2
xor
lods
mov
rolb
ret
or
xor
es
std
jmp
pop
arpl
pop
mov
inc
dec
sarl
int3
jno
sbb
inc
cmp
sbb
inc
aad
mov
mov
pop
pop
icebp
inc
lods
popf
scas
out
cmc
les
fldt
mov
negb
mov
mov
push
mov
imul
mov
xchg
movsb
dec
lods
pop
push
mov
inc
mov
mov
mov
jp
jp
stos
xor
in
cmc
jecxz
jnp
mov
sar
je
leave
cld
adcl
lcall
clc
jne
mov
stc
xor
rclb
js
mov
xor
fsubp
dec
dec
cmp
sbb
js
mov
inc
fidivs
jmp
ss
mov
cld
pop
lret
and
or
loope
pop
cmpsb
es
out
in
push
jns
inc
stos
jecxz
jb
mov
jl
xor
dec
shlb
cli
mov
js
add
out
ficompl
pushf
rcl
lret
rcll
iret
jo
push
jl
int3
mov
jmp
xchg
enter
mov
push
test
jnp
push
jne
test
inc
inc
repz
push
mov
mov
add
cmp
lock
mov
mov
jle
mov
scas
pushf
or
jmp
mov
lods
cs
dec
into
and
cmpb
inc
mov
pusha
mov
pop
pop
aam
jecxz
jns
cmp
xchg
xor
mov
mov
jmp
jae
dec
cld
dec
movsb
and
pop
cmp
into
jg
jecxz
jle
mov
lods
scas
mov
in
mov
mov
xor
aaa
sbb
sub
movsb
lods
arpl
mov
push
push
mov
out
mov
lods
inc
mov
lods
push
notl
cmp
call
rcrl
mov
stos
pop
and
cmpl
inc
mov
push
or
dec
call
inc
or
movsl
pop
cs
jl
and
push
pop
jg
int
mov
jne
lds
fs
lods
mov
cmp
push
xor
mov
and
in
add
dec
cs
or
cmp
jne
jg
in
mov
ficoms
cmp
fwait
jg
adc
movl
sub
pushf
or
or
outsl
xchg
mov
push
mov
in
dec
int3
mov
push
mov
dec
mov
sti
or
sbb
xchg
das
xor
mov
xor
fildll
cmp
test
enter
daa
sub
mov
std
lret
mov
and
sahf
sti
and
cld
ja
lods
shrb
popa
inc
push
leave
pop
stc
mov
adc
jo
pop
mov
ret
movsb
ja
dec
add
cmp
sub
push
mov
imul
mov
inc
or
mov
sub
insb
int3
sub
popf
fdivl
leave
stc
push
push
sub
pop
pop
les
and
bound
xchg
mov
and
arpl
push
pop
popa
mov
cmpsl
mov
mov
lock
lods
mov
sbbl
mov
mov
mov
lods
jnp
les
push
in
xchg
jecxz
or
jbe
scas
mov
movsb
repz
shr
xchg
pusha
clc
xchg
xchg
push
shll
xchg
inc
insl
in
cld
cmp
sbb
xor
flds
sbb
lcall
pop
ficoms
lahf
pop
sub
rorl
mov
xor
out
repnz
pop
test
arpl
mov
sbb
sub
fmul
xchg
xor
ljmp
arpl
inc
leave
imul
add
sbb
pop
hlt
pusha
in
data16
mov
cmp
sbb
mov
xchg
scas
mov
aaa
int
daa
sbb
mov
out
mov
pusha
inc
ret
rcl
add
push
stos
aad
loope
push
cmpb
xor
int3
inc
push
jl
push
mov
ficoms
xchg
int3
pop
mov
ja
test
jecxz
fbld
lea
push
repnz
push
mov
jge
outsl
push
mov
lods
fimull
dec
lahf
dec
popa
inc
sub
mov
jmp
mov
out
push
adc
addl
mov
popa
cmp
sbb
adc
mov
adc
imul
nop
pop
sti
inc
aam
mov
mov
lods
cmp
test
test
add
sub
js
cmpl
iret
and
xor
add
cld
mov
addl
movsl
outsb
jp
sub
xlat
dec
dec
mov
pop
or
mov
dec
mov
xor
ds
jl
test
in
scas
xorl
mov
mov
cmp
jp
inc
js
mov
daa
movsb
movsl
pop
jge
stos
cli
in
push
and
repnz
scas
pop
std
sbb
ds
mov
pop
or
mov
mov
insl
xchg
in
jbe
cld
clc
or
and
cmp
mov
xor
push
cmp
movb
sub
lret
jmp
push
aam
aad
push
pop
mov
aaa
xchg
jns
xor
cmpsl
rorb
sbb
mov
mov
pop
lea
sub
mov
divl
divb
jle
lahf
mov
push
push
push
xor
mull
hlt
cwtl
in
mov
sub
xor
sbb
xchg
xchg
mov
mov
dec
xchg
push
fnsave
xlat
je
mov
xchg
mov
in
sbb
mov
pop
mov
dec
mov
call
jns
ss
mov
mov
sbb
mov
lods
js
mov
and
mov
sbb
cmc
faddl
loopne
push
adc
dec
icebp
out
mov
fcoml
notb
enter
loope
scas
push
adc
cmp
scas
add
imul
lods
lock
adc
or
mov
mov
addr16
icebp
mov
add
push
cmp
clc
inc
fcmovne
cwtl
mov
push
loope
inc
sbb
add
in
cmpb
xchg
jl
cmp
shlb
adc
mov
dec
pop
mov
jmp
les
xchg
xor
or
sbb
mov
cmpsb
sar
nop
stos
ret
xchg
mov
push
and
in
pop
xchg
fmuls
je
cmpsb
cmc
movb
out
xor
mov
loope
xor
cmp
lret
mov
scas
aam
xchg
add
imul
mov
je
sub
add
cmp
sbb
mov
add
stc
cmp
bound
fidivs
scas
xor
loopne
mov
rcl
dec
mull
movsl
and
std
hlt
repnz
out
mov
es
insl
xor
sbb
jp
push
mov
decb
xor
mov
rcll
and
ss
icebp
inc
push
lods
fldl
sbb
xor
jns
inc
xchg
lods
test
enter
mov
push
fstps
cld
dec
dec
out
fdivr
inc
mov
mov
mull
imul
mov
jl
adc
adc
cli
pusha
push
fiaddl
mov
loop
cmp
mov
jl
xor
mov
push
xor
fisubs
stos
add
xor
cmp
movsl
cli
mov
dec
push
pop
lds
sbb
dec
ret
stos
sbbb
sbb
inc
into
je
arpl
adc
idivl
lea
mov
sub
add
push
scas
shll
fwait
mov
dec
insl
in
nop
js
or
popf
aas
jbe
mov
inc
push
pop
int
scas
divl
sbb
push
mov
adc
lret
leave
ds
fisttpll
xchg
inc
xorl
xor
inc
fildll
stc
insb
xchg
out
mov
ret
pop
mov
dec
stos
mov
jo
or
and
je
mov
pop
idiv
jg
pop
sub
xor
mov
inc
adc
push
jae
arpl
je
loopne
and
aad
es
cmpsl
lods
icebp
lods
ds
je
mov
adc
inc
mov
push
xchg
fcomps
dec
aad
std
into
addr16
jnp
sarl
xlat
mov
ljmp
inc
out
pop
call
mov
gs
add
sub
aam
cmpsl
mov
pop
xchg
mov
mov
addr16
rorb
rclb
fisubrl
test
or
lret
enter
mov
mov
adc
dec
xchg
mov
pop
scas
movsl
je
mov
mov
aaa
inc
and
orl
repnz
lods
push
iret
out
into
adc
push
jge
shl
mov
call
test
into
pop
mov
shlb
jmp
arpl
xchg
adc
inc
jp
mov
jecxz
mov
fprem1
movsl
mov
movsb
cmp
mov
inc
pop
sbb
mov
mov
std
movsl
adc
in
test
sub
mov
cwtl
pop
aad
mov
mov
mov
out
rcrb
loope
mov
jl
mov
xchg
dec
mov
or
mov
daa
pop
mov
mov
test
shlb
leave
cmpsb
mov
xlat
or
imul
fsubrl
into
test
jg
mov
dec
popl
mov
jp
mov
sbb
xor
jle
or
stos
popa
and
mov
out
leave
mov
lahf
sar
inc
mov
push
push
or
test
jp
aas
cmpsb
cmc
cld
push
inc
je
daa
cmpsb
out
mov
fstl
lock
stc
mov
pop
mov
pushf
jnp
jmp
hlt
mov
sub
xchg
mov
stos
adc
test
add
sahf
cwtl
lcall
mov
int
xchg
push
rol
mov
mov
shll
out
pop
mov
imul
mov
add
and
mov
test
je
imul
or
dec
daa
mov
clc
or
mov
into
pop
int3
mov
adc
and
adc
dec
mov
mov
adc
cmp
lret
je
lock
ljmp
popf
xor
in
mov
xchg
shlb
mov
mov
movsl
cmp
push
aam
adc
ljmp
push
insb
scas
sub
test
push
lods
mov
add
lods
or
mov
daa
or
cmpsb
push
inc
push
in
inc
mov
jge
push
and
xor
pop
rclb
mov
or
mov
sub
js
ss
es
cld
cld
jmp
mov
xchg
pop
cwtl
inc
cmp
sub
add
mov
lcall
lods
jp
insb
adc
notb
mov
mov
sbb
test
inc
mov
pushl
in
pop
mov
movsb
pop
mov
mov
daa
dec
add
mov
ljmp
mov
jl
sbb
inc
mov
cmp
mov
leave
mov
jo
or
pop
mov
fs
pop
adcl
mov
fildll
inc
cli
xor
mov
scas
mov
push
lods
lcall
vunpckhps
mov
mov
add
dec
aam
mov
push
ljmp
clc
mov
divb
or
mov
mov
xchg
nop
mov
mov
into
ss
pop
xor
mov
dec
es
jne
movsl
sub
mov
push
nop
push
rep
imul
inc
fs
mov
sbb
mov
xchg
mov
icebp
xchg
push
mov
das
out
adc
sbb
jmp
dec
mov
adc
nop
dec
mov
mov
cld
mov
xchg
mov
mov
xor
loop
cmpsb
shlb
dec
push
sbb
cmp
xor
test
cmc
out
xor
sarb
xor
ljmp
xor
push
ds
dec
pop
lods
inc
outsb
mov
je
cmp
mov
xor
xor
add
xor
je
mov
mov
or
mov
jp
xor
pop
mov
mov
xchg
dec
cwtl
cltd
cmp
mov
test
movsb
mov
mov
mov
mov
cltd
mov
mov
neg
adc
push
cmp
add
bound
mov
dec
movsl
xlat
dec
shlb
mov
pusha
lods
gs
jmp
outsb
mov
lds
pop
daa
lret
mov
scas
and
mov
test
mov
clc
stos
das
leave
aad
dec
push
push
lcall
test
jecxz
mov
out
insl
cmp
mov
fwait
mov
leave
mov
mov
cld
and
sbb
out
xchg
cld
outsb
pop
idivl
stos
aaa
iret
mov
add
mov
les
ljmp
mov
test
jle
fnstenv
sub
sbb
xchg
lods
mov
adc
aas
xorb
or
mov
jle
cmp
mov
pop
aas
xor
es
xchg
int3
mov
fwait
lcall
mov
cmp
nop
pop
loopne
les
mov
test
adc
mov
add
inc
scas
lcall
push
and
fcmovbe
cld
insl
adc
fnstenv
mov
xor
pop
mov
xlat
sub
mov
and
cmpsb
lret
push
mov
sbb
and
adc
mov
aad
inc
lret
ror
cmp
pop
inc
sahf
push
push
adc
data16
xchg
mov
add
shrb
lods
in
incb
or
inc
mov
nop
xchg
inc
call
mov
cmpsb
test
jns,pn
pop
les
xchg
dec
fs
insb
loope
sbb
xchg
rcrb
aaa
inc
cmp
sub
ss
sub
jmp
cmp
xchg
mov
and
lea
cltd
fcomi
mov
lds
mov
aas
into
xor
mov
and
push
mov
cmp
adc
cltd
in
xor
mov
dec
inc
sub
adc
mov
inc
ret
in
rcr
push
sbb
mov
repz
lods
cmp
jp
dec
mov
sbb
pop
cmp
ret
cmpsl
ficompl
das
cmpsb
in
shlb
mov
xor
push
repz
je
dec
fdivrl
shll
push
xor
dec
data16
pop
xor
sbb
push
insb
jb
aas
outsb
mov
sbb
or
sbb
adc
subl
ja
int
ffree
rorb
icebp
add
inc
adcb
mov
mov
cmp
sbb
stos
sub
out
data16
mov
hlt
push
pop
call
lcall
inc
xor
scas
jns
cmpsl
mov
stc
cmp
mov
in
push
push
sub
int
pop
inc
out
mov
loope
int3
inc
cmp
jle
and
inc
out
mov
lcall
mov
repz
cwtl
mov
lods
cmp
not
mov
jge
mov
je
cmp
mov
sub
sub
mov
mov
hlt
nop
mov
jno
sbb
and
mov
inc
lret
pop
cmp
mov
pop
jae
push
call
mov
mov
ret
js
cmpsb
mov
or
cmp
mov
lods
cltd
fidivl
xchg
es
dec
lods
into
jno
mov
mul
or
dec
mov
loopne
mov
inc
je
xchg
pop
mov
push
mov
jg
popa
lock
lds
add
xor
dec
into
xchg
xchg
test
mov
cmp
jl
mov
aam
iret
add
xorb
in
mov
ds
push
push
pop
popf
sbb
add
inc
mov
mov
stos
mov
mov
and
arpl
cld
mov
xchg
repz
loopne
popf
insb
pop
xor
jno
cmpsl
mov
push
in
je
sub
insb
adc
sub
sbb
ret
push
sbb
lods
inc
ljmp
lea
ss
xchg
lret
mov
or
and
incl
outsb
cmpb
movsb
mov
in
mov
fnsave
jae
lock
mov
xor
adc
mov
xchg
mov
in
lret
push
imull
dec
sub
test
xor
fld
add
int3
mov
mov
mov
mov
loop
enter
xchg
fcompl
idivb
rcrb
int3
mov
xchg
movsb
jbe
icebp
out
sub
push
pop
inc
cld
dec
mov
test
jecxz
pusha
fdivl
shll
test
cmpsb
jbe
jmp
xchg
mov
mov
pop
mov
outsb
fistps
mov
iret
or
mov
sbb
jmp
inc
insb
les
in
jo
inc
jecxz
sbb
dec
jl
clc
mov
pop
loop
xchg
pop
hlt
fmuls
clc
mov
pop
jle
inc
inc
jnp
pop
adc
aaa
push
add
sti
xchg
inc
int3
xorb
inc
lods
cwtl
loope
movsl
repz
sahf
and
idivb
scas
fwait
jae
or
sbb
mov
outsb
in
or
stc
movsl
cli
push
lock
pop
mov
jns
icebp
mov
rclb
imul
cwtl
les
loopne
inc
mov
add
out
or
mov
leave
or
add
or
cmp
pop
inc
sub
fwait
mov
xchg
pop
lock
test
loop
movsl
jns
fildl
les
xor
push
push
push
mov
ret
cmc
inc
push
push
sub
movsl
shll
mov
cmp
or
xor
cltd
sbbl
xor
adc
xor
jb
insb
mov
pop
mov
outsb
std
stos
xorb
pop
sbb
loopne
cmp
sub
cwtl
imul
std
mov
cmp
push
je
pop
ret
jno
mov
dec
xchg
xchg
loope
fdivr
cltd
sbb
mov
mov
mov
pop
xchg
mov
inc
cmp
push
je
std
mov
mov
imull
sbb
mov
popf
dec
fwait
and
sub
mov
fildl
in
dec
ret
aad
pop
mov
vpunpcklwd
mov
xchg
cwtl
stc
shlb
dec
cmpsb
add
cmp
push
call
jp
jmp
mov
arpl
insl
ja
push
jb
mov
sbb
lock
xorb
test
jecxz
outsb
push
mov
lods
clc
fldt
mov
cmp
fnsave
cmp
mov
loope
xor
cld
and
xor
std
insl
mov
fdecstp
pop
sbb
xchg
fcomp
je
jnp
enter
xchg
aad
icebp
xlat
int3
mov
cmp
in
ret
into
jmp
jo
imul
sahf
inc
adc
ja
das
or
fwait
lods
jl
out
cmp
sub
loope
cltd
movsb
mov
mov
ds
dec
hlt
xchg
push
sbb
pop
xchg
push
xchg
popa
xor
das
insb
lock
xor
mov
cmc
xchg
xchg
cmp
cwtl
ret
sub
imul
test
push
push
lahf
data16
push
fnstenv
addr16
sub
xor
xchg
loopne
xor
adc
sbb
mov
repz
les
mov
jl
inc
jg
int3
lea
dec
out
and
insb
adc
cmp
cmp
data16
enter
fisubrl
add
ds
popf
or
mov
scas
mov
test
fildll
xor
sti
lea
testl
imul
sub
push
or
mov
stc
sub
xlat
mov
push
std
shl
mov
cmpsl
pop
outsb
hlt
inc
inc
mov
mov
daa
sbb
stos
or
inc
pop
mov
cmpl
jae
mov
insb
int3
inc
pop
mov
std
push
push
mov
outsl
inc
jmp
icebp
inc
mov
mov
test
mov
cld
or
or
mov
and
std
dec
mov
jecxz
mov
jns
jne
jnp
push
mov
adc
inc
jle
mov
lret
pop
xor
push
push
aam
lret
sub
movsl
ja
mov
xor
call
mov
mov
iret
fnstsw
outsb
je
ljmp
int
mov
jne
push
lret
inc
mov
inc
mov
fnstenv
or
cmp
mov
mov
call
jae
mov
clc
lahf
shll
stos
cwtl
pop
into
inc
mov
add
jle
sub
mov
cld
pushf
mov
push
fisttpl
sarl
enter
daa
mov
rclb
imul
inc
xor
in
cwtl
out
std
dec
push
pop
ss
mov
fmuls
outsl
lret
adc
or
outsb
add
pop
mov
popw
cmp
scas
pop
mov
cmpsb
pop
inc
sbb
aad
fsubrs
clc
jo
sub
xor
test
call
popa
addr16
jb
inc
mov
ret
les
mov
aam
iret
or
jp
mov
sbb
cmp
push
cmp
cmpsb
fidivl
cmc
mov
or
cmpsb
sbb
mov
jecxz
jp
ret
das
pusha
and
int3
pushf
aad
lret
xchg
mov
bound
in
jl
xor
mov
dec
adc
aam
xorb
mov
mov
or
inc
js
out
sub
mov
nop
pushl
push
aad
mov
fs
int
addr16
inc
mov
in
xor
js
push
mov
sbb
xor
outsl
cmp
inc
lods
jae
sbb
aad
aas
loopne
sbb
adc
in
cmpsb
pop
or
xchg
rol
jne
xchg
mov
xchg
das
and
cld
dec
call
xchg
or
jecxz
mov
pop
bound
push
add
aas
mov
repnz
test
mov
mov
lods
aad
xor
movsb
repz
ffree
adc
mov
xor
ja
push
dec
outsl
push
sbb
fnstsw
cs
insl
mov
cmp
les
push
imul
loop
lock
xchg
xchg
out
push
jno
mov
inc
icebp
adc
xchg
jmp
cmpsb
fidivs
arpl
in
cmp
mul
dec
fcmovu
mov
xor
out
repz
lods
jp
sub
enter
xsaveopt
jnp
out
jne
pop
mov
push
xor
adc
inc
jb
jbe
in
pusha
negb
mov
push
call
aaa
sbb
mov
movsl
push
mov
out
fiadds
cmp
mov
out
sbb
xor
shr
mov
mov
push
dec
mov
out
dec
sub
sub
mov
xor
cwtl
imul
js
push
lods
jecxz
aas
mov
aas
mov
jbe
or
sbb
ss
pop
gs
aam
jle
adc
in
leave
jg
xor
iret
cltd
mov
mov
cmp
cmp
out
dec
sub
xchg
test
adc
pop
mov
mov
hlt
mov
or
mov
sbb
cmp
xlat
aaa
das
fwait
aas
push
add
dec
dec
repz
out
scas
lods
xchg
xor
ljmp
in
adc
pop
mov
stos
adc
mov
mov
cmp
and
xchg
fdivr
dec
pop
dec
mov
test
mov
add
xor
gs
sbb
or
repnz
mov
shlb
push
mov
add
notl
sbb
jp
outsl
xor
xchg
or
jno
daa
or
mov
inc
into
in
cmpsl
icebp
rorb
push
stos
jo
ja
mov
push
fldcw
lods
imul
test
jns
in
add
rcll
push
mov
push
stos
or
mov
lcall
mov
xor
and
mov
shll
divb
inc
cli
mov
into
dec
into
pop
pop
scas
mov
int3
and
fdivr
push
xor
jle
inc
jp
cmp
push
dec
nop
fildl
adc
cld
adc
ja
inc
cmpsb
xchg
cmp
cwtl
nop
cmp
or
cmp
xchg
sub
sbb
fdivrs
mov
inc
mov
sbb
aaa
xor
popf
mov
ss
mov
mov
sbb
cmp
imul
xor
test
daa
mov
cmpl
enter
xchg
movsb
mov
xchg
or
push
cmp
xchg
and
fidivl
lahf
icebp
sub
mov
in
mov
aaa
fadds
fildll
xor
mov
lcall
inc
mov
jge
pop
pop
fcmovne
cmpsl
mov
or
lcall
addr16
inc
pop
int3
sarb
push
jmp
mov
call
jns
nop
jp
arpl
mov
rcl
mov
push
and
or
add
ret
xchg
arpl
or
sbb
push
roll
mov
insb
addl
xor
repz
test
xor
sbb
mov
addl
sbb
and
mov
mov
inc
repz
inc
xor
movsl
mov
jp
push
shr
pop
mov
jnp
jno
rolb
loopne
sub
push
das
addr16
mov
add
mov
mov
push
rdtsc
jp
aam
or
cmpsb
fldl
push
push
sahf
sub
inc
rolb
mov
aaa
xchg
xchg
push
aad
out
xchg
inc
sub
mov
mov
pop
mov
cmp
jp
fsub
fbstp
sbb
xor
hlt
mov
mov
xchg
aad
push
xor
pop
jno
mov
jl
shll
xchg
xor
cld
ret
or
jo
mov
cwtl
dec
push
xchg
mov
mov
pop
adc
fdivs
out
mov
pop
pop
nop
mov
ss
xchg
push
add
add
pop
hlt
lock
adc
and
aam
das
jne
mov
aad
pop
insb
dec
xchg
push
lfs
jge
pop
xchg
sahf
mov
jnp
mov
mov
xlat
outsb
lahf
fs
dec
call
loop
sub
jbe
jp
xchg
mov
and
cmp
lahf
cmpsb
pop
xchg
idivl
sub
dec
mov
inc
cmp
inc
xchg
xor
sti
mov
adc
cmc
out
fs
mov
push
pushl
lock
stc
test
hlt
xchg
push
mov
inc
cwtl
in
negl
jns
dec
push
in
mov
cmpsl
jmp
mov
cld
inc
mov
outsl
jl
gs
int
out
mov
mov
iret
xor
mov
pop
push
sub
rcll
lods
cmpsb
sahf
xorl
or
add
dec
pop
nop
push
movsl
add
mov
sub
mov
std
push
xchg
cmp
cmc
mov
subl
outsb
scas
cld
mov
mov
int3
fwait
ljmp
add
in
mov
adcb
mov
mov
sub
mov
add
or
inc
jns
add
xor
fwait
stc
mov
daa
ficoms
adc
mov
enter
or
mov
aas
or
out
jmp
lods
jbe
mov
xchg
mov
js
pop
xor
out
pop
lods
nop
lcall
mov
fldenv
shlb
in
rclb
inc
aam
jbe
jg
mov
cmp
add
xchg
push
fwait
arpl
jge
hlt
mov
test
fs
out
aaa
mov
jecxz
mov
test
mov
cmp
out
xchg
sub
shrb
fs
push
and
mov
inc
cmpsl
mov
mov
fs
out
cmp
mov
cmp
pop
and
pop
fstps
aam
and
or
mov
mov
std
pop
mov
leave
cwtl
mov
loopne
inc
push
mov
lea
in
xchg
push
mov
xchg
fisttps
and
les
test
cmp
sbb
jecxz
or
xchg
sub
jnp
cmp
jno
mov
je
or
mov
push
jecxz
ljmp
in
and
mov
aas
andl
mov
fmull
push
stos
mov
push
jecxz
jnp
test
inc
in
mov
dec
or
mov
push
jbe
lods
dec
or
mov
jno
std
push
mov
sti
xor
mov
setno
out
imulb
add
insl
movsl
in
lea
xor
inc
mov
jns
hlt
loop
out
jl
inc
out
mov
test
or
std
jmp
mov
cmp
stos
jns
jecxz
in
sbb
add
leave
test
mov
insb
ss
xor
insl
mov
inc
int3
dec
add
dec
ficompl
xchg
pop
lods
pusha
mov
adc
xchg
pop
push
mov
cli
inc
ds
jnp
pop
mov
lcall
mov
xor
icebp
mov
mov
ret
imul
popf
xchg
fists
loop
cltd
mov
scas
mov
rolb
mov
sub
ret
cs
mov
or
adc
sbb
cmpsb
pop
in
scas
je
cmp
lods
arpl
inc
fnsave
inc
sub
mov
cltd
adc
js
movsl
les
sub
mov
add
inc
or
pop
cwtl
and
xchg
lea
pop
sti
mov
mov
cmp
dec
cmp
subb
sbb
mov
or
js
push
pusha
mov
or
push
jns
repnz
cmp
lahf
and
xchg
xchg
jecxz
and
adc
and
lods
xor
je
or
adc
sbb
js
xor
pop
and
test
xchg
clc
cltd
stos
mov
pop
xor
aas
xchg
or
mov
outsb
pop
test
and
cmpsb
mov
mov
mov
mov
shl
into
lahf
mov
out
xor
test
jnp
and
mov
pop
jecxz
jmp
aam
mov
sbb
icebp
lret
xchg
mov
popa
stos
pop
add
lods
fnstsw
mov
cmp
pushf
iret
cmp
mov
insl
loope
cltd
pop
mov
or
inc
hlt
xor
cmp
mov
or
jnp
xor
sti
into
mov
cmpsb
push
mov
xchg
mov
inc
dec
cmpsb
scas
outsb
stc
rolb
or
pop
push
mov
ds
jmp
pop
and
pop
inc
or
xor
mov
ret
scas
imul
jbe
add
mov
sub
test
dec
mov
mov
loop
mov
pushf
add
nop
pop
call
inc
cmp
pop
cwtl
ja
cmp
hlt
inc
inc
fcoms
rcrb
and
mov
mov
jno
mov
add
inc
mov
mov
das
lds
inc
stos
insb
sub
popa
lret
jmp
les
jecxz
test
sub
and
or
mov
lret
inc
popf
arpl
inc
mov
fs
sbb
and
mov
inc
mov
mov
push
test
xor
push
in
ja
data16
test
mov
sub
loope
push
notl
je
jp
lcall
out
cmp
dec
out
push
sti
adc
mov
mov
mov
mov
int3
push
movsl
mov
shrl
mov
xlat
pop
stc
inc
sub
mov
test
jmp
and
push
mov
in
jmp
rep
mov
mov
jo
ja
mov
xchg
testl
stos
mov
mov
mov
rorb
push
loop
mov
mov
mov
xchg
mov
scas
or
in
cld
jo
lret
mov
xchg
push
sti
and
adcb
lock
push
out
test
arpl
xchg
jno
daa
ror
inc
out
xchg
lret
xor
int3
or
sbb
add
mov
cmpsb
and
out
mov
int
adc
mov
push
jns
lahf
sarl
mov
mov
cmpsl
cli
cwtl
clc
pop
push
je
and
dec
cs
cwtl
mov
xor
arpl
mov
cld
mov
movsl
inc
push
sbb
mov
inc
fidivl
sbb
aaa
es
pusha
xor
fistl
addl
bound
cmp
xor
shrb
add
out
cmpsb
jle
movsb
sahf
mov
cmpsb
add
call
cmpl
imul
js
imul
jbe
xchg
ret
jg
aaa
es
push
xchg
mov
cmp
mov
sahf
mov
cwtl
xorl
cmpsb
gs
data16
jnp
inc
leave
nop
push
hlt
or
addl
push
xchg
cmp
ss
xchg
mov
mov
out
mov
mov
jae
ret
lock
pop
out
test
pop
and
dec
subl
push
and
aas
aam
push
pop
pop
loop
dec
sti
lahf
add
mov
mov
or
adc
xchg
out
inc
rcl
mov
adc
pop
mov
xchg
jo
cmp
xor
out
inc
dec
mov
test
add
xor
jbe
lods
sub
push
fs
dec
adc
mov
push
cmp
and
loopne
arpl
scas
adc
mov
sbb
push
repz
int3
xchg
and
cmp
pop
push
andl
dec
arpl
cmp
mov
movsl
sahf
jne
into
mov
cmpsl
mov
mov
jno
in
mov
call
cmpb
xor
mov
mov
push
xor
push
mov
out
popa
int3
push
insb
lods
mov
sarl
xchg
loope
bound
stos
xchg
mov
mov
pop
or
cld
mov
xchg
inc
int3
add
sub
jecxz
push
mov
mov
rcl
mov
jp
jno
repnz
mull
cmpsb
mov
call
test
lods
lea
dec
ja
cmp
aam
mov
aas
int
into
andb
int3
mov
xchg
sub
mov
xchg
mov
popf
les
repz
add
mov
mov
test
loopne
mov
dec
or
stc
test
lea
jo
push
mov
xor
inc
addr16
push
xor
mov
inc
cltd
jg
mov
add
cmp
ds
mov
fdivrl
mov
cmc
mov
lods
jb
mov
sbb
addr16
mov
cmc
push
push
mov
fadd
or
mov
sbbb
sbb
mov
sbb
test
jnp
imul
aam
pop
sti
hlt
pop
call
mov
jbe
daa
pop
cli
mov
mov
cmp
or
jns
and
in
hlt
shrb
out
add
mov
and
aas
lods
jne
adc
add
xor
pop
fwait
xchg
addr16
rorl
jnp
sub
cmp
dec
jl
iret
bound
lods
mov
movsl
das
test
cwtl
mov
daa
xor
and
mov
sub
ret
nop
cmp
rolb
aas
mov
pop
pop
mov
pop
xor
mov
mov
pop
movsb
fs
dec
mov
mov
rcrb
pop
pop
xor
enter
nop
rcll
push
sub
or
jb
sub
fwait
movsl
xchg
ljmp
insl
icebp
loope
jno
imul
nop
dec
in
mov
aam
jne
dec
sub
fisttps
cmpsl
sub
cmpsb
lods
imul
aam
pushf
inc
nop
push
test
adc
pusha
and
mov
sub
dec
lods
cwtl
jnp
test
inc
cmpsb
sub
xor
mov
ss
popa
xorl
sub
mov
negb
stc
pusha
xor
loop
pop
scas
test
xor
stos
mov
mov
int
jb
jno
in
xor
sub
movsl
xorb
jae
and
dec
in
push
sbb
cmp
mov
mov
mov
cmp
mov
pushf
fs
adc
and
or
dec
or
int3
popf
test
add
pusha
xlat
lock
add
in
sub
push
repz
xor
mov
push
cmp
inc
dec
sub
cmp
xchg
jle
je
enter
cltd
mov
mov
hlt
subb
inc
daa
xor
mov
insb
nop
jge
stos
pop
nop
push
adc
push
push
push
jns
jecxz
sbb
sub
aam
mov
xor
cmpsl
shrl
xor
xor
mov
mov
xchg
out
mov
jmp
arpl
sbb
mov
das
adc
inc
xchg
cltd
leave
xchg
in
jle
inc
mov
scas
mov
daa
cs
cmpsb
xor
pop
adc
leave
cmp
xor
mov
or
lods
sub
fwait
das
insb
and
stos
leave
adc
addr16
aam
xchg
jmp
fwait
jnp
jg
in
stos
insb
jb
cs
jg
xor
cltd
imul
stc
dec
jns
lret
jecxz
push
lahf
scas
cld
outsl
jo
mov
add
in
stos
repnz
rcll
aas
and
jl
pop
sahf
loope
ret
scas
mov
out
jcxz
insb
jl
outsl
in
ficomps
xor
out
jnp
lret
out
das
bound
out
push
loopne
mov
fsubrp
fldenv
jge
call
dec
fs
cmp
arpl
andb
fisubrs
pusha
lods
mov
xchg
adc
dec
fistl
test
xor
out
inc
pop
out
or
jl
pop
mov
and
mov
addr16
mov
cltd
shlb
rcl
repnz
testl
adc
push
loop
sbb
adc
pop
pop
sahf
scas
mov
hlt
xor
inc
xchg
fldcw
arpl
andl
shrl
scas
sbb
test
pop
rorb
in
and
or
or
mov
jmp
cmp
imul
ror
cmpl
jnp
in
in
pop
jno
xor
in
mov
outsb
jg
dec
cmp
daa
sbb
scas
and
fsts
add
jnp
xchg
xchg
fldcw
and
mov
das
add
mov
or
sub
pop
enter
pop
jb
add
aas
mov
mov
mov
out
sub
loop
aas
outsb
in
stos
pusha
leave
mov
xchg
cs
jecxz
xchg
xchg
pusha
in
fs
mov
or
pop
ret
jle
insb
inc
push
jge
cmp
lock
stos
jno
je
nop
jae
mov
push
shll
shrb
mov
mov
and
adc
sub
das
stos
movsb
leave
inc
jle
nopl
pop
arpl
mov
adc
jae
sub
mov
xorl
mov
jg
push
and
push
jle
movsb
mov
inc
inc
outsb
cmpsb
sub
jnp
xchg
test
jecxz
cmpsl
mov
movsb
leave
pop
shrl
adc
sub
test
cli
ret
insl
lock
daa
pop
mov
loope
or
aas
pusha
sub
cld
xor
das
xlat
mov
mov
int
mov
add
in
scas
cld
imul
cmp
stos
lods
push
loop
scas
xchg
daa
xor
push
test
in
movsl
xchg
and
cld
stos
daa
ret
lods
jbe
pop
lahf
daa
outsl
mov
imul
addr16
in
stos
daa
fs
mov
mov
adc
fsubp
mov
daa
xor
out
jmp
cmpsl
xchg
push
xchg
xor
mov
mov
aas
sub
mov
push
mov
pop
and
mov
mov
jecxz
mov
mov
lods
mov
cli
repnz
in
cmp
and
dec
mov
scas
adc
out
scas
pop
fwait
xchg
cwtl
mov
xchg
loop
test
hlt
test
lret
jb
ret
cltd
sub
test
nop
mov
adc
call
lcall
jmp
das
inc
ljmp
lods
pop
dec
pop
jns
or
aam
repz
jnp
sahf
cmp
aas
lret
and
orb
mov
mov
inc
inc
imul
xor
inc
ror
mov
jns
xor
mov
lahf
mov
mov
lods
stos
xchg
xchg
test
hlt
sub
dec
and
and
mov
pop
push
push
push
mov
mov
push
aas
nop
test
sub
aas
mov
push
sub
mov
push
subb
push
in
mov
xor
inc
stos
xchg
and
mov
inc
add
xchg
les
stos
aas
xchg
sub
hlt
movsb
cs
mov
mov
lret
or
rcr
xlat
mov
xchg
inc
sub
bound
push
mov
fildl
shll
mov
int3
sbb
mov
fsubrs
mov
push
pop
mov
pop
push
lods
sub
cmp
stos
leave
rcll
cmpsb
repnz
daa
push
inc
mov
xchg
js
cmp
sub
enter
or
fcomps
mov
lcall
cmp
cwtl
stc
xchg
mov
pop
mov
imul
push
mov
lahf
mov
xor
je
lock
xchg
mov
jp
adc
mov
dec
xor
mov
lods
pushf
insb
lahf
pop
in
or
setp
add
cwtl
popa
lcall
lahf
imul
cmpsl
dec
outsb
pushf
mov
pop
push
lods
scas
icebp
pop
inc
lods
jne
push
or
mov
inc
inc
inc
inc
inc
dec
inc
inc
dec
dec
pop
movsb
dec
aam
cwtl
dec
repz
sub
les
stos
jnp
lods
push
and
xor
sahf
addl
dec
inc
sbbl
or
movsb
dec
adcl
insl
xor
shld
mov
xchg
add
movsl
jo,pt
dec
push
inc
cmp
or
push
scas
xchg
push
add
push
call
std
add
mov
cmpb
insb
mov
jle
test
dec
mov
jo
aam
ljmp
mov
jb
mov
add
gs
jb
shrl
pop
out
outsl
stos
push
movsb
sub
push
dec
pop
jbe
mov
push
nop
dec
sub
pop
arpl
xchg
pop
lods
push
push
iret
sbb
mov
cmp
inc
pop
cmp
insb
inc
test
lods
lock
sub
inc
loop
lock
insb
stos
push
clc
dec
ss
mov
addr16
push
cmpsb
pop
add
jo
push
or
adcl
add
jl
jp
test
mov
orl
repz
inc
dec
addr16
mov
popa
pop
xor
sti
push
mov
pop
insb
mov
push
inc
std
shll
dec
cwtl
stos
mov
push
outsb
pop
jb
fcomip
pop
int3
loopne
mov
js
push
and
rclb
mov
jo
mov
andl
adc
add
testb
rcl
rolb
lods
fisubrs
cmpsb
imul
addb
gs
pusha
mov
jo
push
int
cld
test
jno
bound
stos
outsb
pop
popf
dec
pop
out
cmpsl
test
sti
sbbb
pop
mov
insb
cmp
pop
movsb
data16
sbb
sub
dec
int
push
inc
inc
push
jo
pop
cmp
dec
sbb
pusha
cwtl
inc
inc
dec
inc
hlt
dec
dec
movsb
outsl
dec
test
ret
jl
add
inc
cmp
fnsave
mov
jl
mov
xchg
stos
les
sub
add
xor
mov
push
je
fs
mov
insb
inc
and
out
jnp
push
mov
sahf
stos
jo
aam
jo
jnp
dec
and
hlt
mov
ret
js
jo
pop
sub
nop
sub
sbb
or
fisubrs
aam
nop
mov
xchg
and
dec
sub
mov
dec
lock
mov
scas
add
lods
incl
test
cmpsb
cmp
out
mov
mov
popa
dec
dec
inc
nop
insb
push
les
sbb
dec
aas
push
jns
dec
and
pop
pop
movsb
adc
dec
cmpsl
cmp
cmp
movsl
stc
loope
jmp
lods
int3
movsb
ret
jo
push
mov
push
insl
xchg
jno
push
scas
inc
push
les
inc
push
push
movsb
lea
stos
sbb
dec
xchg
mov
dec
hlt
sbb
push
lea
inc
pop
cmpsb
add
movsb
xchg
jae
cmpl
push
dec
push
mov
dec
lcall
movsb
push
inc
cmp
jnp
das
ds
push
dec
mov
pop
adc
sti
dec
cmp
fimull
push
data16
sub
mov
jbe
mov
lret
xchg
sub
xchg
bound
xchg
sub
test
mov
pop
or
jp
dec
mov
inc
mov
sahf
jnp
js
mov
mov
dec
or
stc
jb
mov
pushf
xor
mov
fldenv
ror
es
fnsave
and
js
mov
leave
fisubs
mov
dec
andb
push
push
gs
pop
mov
dec
mov
add
pop
mov
pop
je
mull
jno
jbe
int
fists
and
fdivs
cwtl
mov
fistpl
stc
add
inc
cltd
jg
mov
ljmp
mov
in
js
imul
jnp
jno
fdivl
cmpsb
jecxz
push
and
cmp
jge
jmp
fs
out
insl
int
loope
fstpt
mov
pop
and
sbb
xchg
gs
in
fmuls
mull
mov
lea
lds
mov
jmp
cwtl
repz
shlb
scas
add
pop
and
aas
push
jp
stc
fstl
xor
adc
xlat
jecxz
cmp
mov
push
xor
aad
xchg
enter
mov
dec
sub
scas
loop
int3
mov
sti
push
ds
cmp
inc
sahf
fs
adc
movsl
inc
pop
pop
inc
push
pop
lds
xchg
int3
or
xor
inc
jnp
xor
mov
gs
movsb
imul
sbbb
sahf
pop
daa
addr16
jae
mov
xorb
pushf
push
cmp
loopne
xor
push
lea
hlt
mov
push
fwait
dec
cld
cmp
adc
mov
je
dec
jge
add
mov
scas
data16
add
test
mov
jmp
xor
mov
mov
inc
push
pop
mov
or
je
and
movsl
mov
outsl
push
jge
mov
mov
arpl
into
insb
jo
mov
or
in
xchg
pop
shlb
cli
hlt
jnp
jbe
mov
xor
fstl
mov
test
mov
loope
scas
pop
xor
ljmp
hlt
jae
pusha
mov
mov
cld
test
int3
lea
ss
dec
test
fwait
push
cltd
inc
std
loope
fld
jle
movsb
ret
andb
addl
adc
pop
xlat
aad
xchg
push
test
and
outsl
mov
pop
dec
pop
loopne
add
aad
adc
sub
aaa
push
es
movsb
mov
ljmp
mov
adc
pop
clc
fwait
mov
in
shrb
xor
cwtl
loop
push
lret
pop
push
js
sbb
pusha
lea
inc
xor
and
icebp
cmp
or
fldcw
xor
mov
hlt
jno
sarl
mov
push
or
movsl
cld
inc
pop
cwtl
je
stc
cs
mov
jno
jle
ss
mov
cmp
lea
push
pop
ja
clc
mov
sbb
mov
ud0
mov
je
sbb
mov
mov
jl
adc
mov
int3
test
js
mov
hlt
fists
sub
outsb
outsl
movsl
shll
test
test
adc
int3
mov
scas
mov
sbb
lock
add
jo
adc
hlt
or
inc
mov
jecxz
xor
pop
fisttpl
sbb
sti
mov
arpl
lret
in
stc
in
xlat
mov
push
sbb
jg
popa
push
dec
test
pop
jp
cmpsb
je
fmull
xchg
dec
sbb
pop
jl
leave
mov
and
mov
stos
jg
fdivrs
fnstsw
outsb
inc
loopne
push
mov
les
push
lock
mov
dec
and
sub
and
test
xchg
or
jno
mov
inc
into
sar
mov
mov
bound
mov
sub
es
mov
test
sarb
jmp
inc
push
xlat
and
mov
sbb
sub
scas
add
xor
stos
mov
jmp
adc
jo
adc
repnz
lret
push
xor
jmp
jle
mov
mov
int
sub
sbb
out
orb
sbb
cmp
push
out
mov
jle
ja
push
mov
mov
xor
xchg
leave
enter
mov
xchg
mov
pop
or
mov
lcall
mov
and
pop
std
mov
call
inc
sti
xchg
xchg
adc
popf
and
inc
add
and
mov
inc
jg
mov
cmp
mov
sub
nop
mov
mull
aam
push
adc
ds
mov
mov
xchg
mov
sbb
adcb
mov
and
movb
mul
aam
jae
mov
mov
repnz
xchg
mov
lahf
xchg
push
jae
fs
test
pop
imul
push
iret
dec
pop
xor
mov
shrl
xchg
push
mov
ja
or
inc
and
mov
icebp
dec
mov
sub
stc
mov
pushf
cmpsb
mov
mov
jmp
notl
test
mov
lea
ljmp
mov
mov
test
jo
jl
sub
pushf
or
shlb
cmpsb
jns
mov
incb
xor
xor
mov
and
or
pop
dec
lahf
stos
es
mov
push
xlat
cmp
out
idivb
lcall
clc
mov
aam
cltd
or
fildll
mov
lods
hlt
in
jle
cmp
jns
nop
test
mov
and
push
xchg
xchg
aam
je
ja
insb
lds
loopne
in
les
into
mov
mov
clc
mov
xchg
mov
insb
cld
repnz
adc
testl
out
icebp
jne
mov
stc
repz
dec
cmp
adc
mov
in
clc
shlb
aas
sbb
pop
popa
bound
mov
insl
mov
pop
xchg
xor
out
mov
adc
jnp
mov
push
lods
or
js
cmp
je
mov
xchg
pop
xchg
cwtl
add
mov
push
jmp
dec
ds
jae
cwtl
pop
inc
pop
hlt
aam
xor
cmp
jg
mov
mov
cltd
xor
loopne
sub
mov
xchg
in
push
cmp
fsubs
aam
ret
divb
pop
in
mov
push
orl
mov
popa
enter
int
mov
push
and
dec
fisubl
push
xchg
or
sbb
mov
arpl
les
mov
test
mov
pop
mov
lds
int3
push
dec
daa
adc
jg
int3
xor
cmp
jle
test
or
adc
sub
out
and
adc
data16
cmpsb
nop
dec
arpl
pop
inc
adc
outsl
mov
mov
cs
pop
shll
fwait
movsl
popf
pop
lock
cmp
xchg
shlb
stc
shlb
or
and
insl
fisubl
movsl
cltd
xor
add
addb
sub
mov
stos
sub
pop
mov
push
pop
or
ss
divb
xor
jnp
push
cmp
rcr
xchg
es
mov
shll
sbb
cmp
cmp
cmp
stos
dec
fs
sahf
mov
in
push
mov
call
in
mov
or
outsb
pop
mov
sub
xor
mov
rolb
push
jecxz
scas
mov
push
xchg
cltd
inc
xor
mulps
xchg
lahf
cmc
mov
xor
inc
mov
mov
mov
adc
inc
fisttpll
inc
mov
arpl
loop
ret
mov
dec
xchg
push
lahf
pushf
cmp
sti
mov
lock
xchg
test
sbb
call
or
push
mov
stos
mov
mov
mov
cli
mov
rclb
add
xchg
mov
xlat
fnsave
or
jp
push
testl
and
loop
jmp
add
lods
adc
lods
out
lock
sbb
frstor
in
pop
loop
add
or
lods
nop
push
xchg
fidivl
hlt
jnp
add
mov
in
imulb
jbe
rcrb
add
add
lods
mov
movsb
jnp
mov
sbb
ret
dec
loope
mov
jmp
mov
mov
arpl
fists
cmp
gs
cld
pop
mov
lods
test
out
jp
sbb
sub
mov
pop
fcoms
mov
mov
sub
insb
xchg
xadd
call
pop
xchg
xor
jno
mov
std
add
jle
js
mov
insl
shr
xchg
sbb
xor
stos
inc
xchg
xchg
xor
cmpl
sbb
jmp
push
nop
pop
mov
clc
cmp
aas
cmc
sbb
lret
mov
sahf
jge
fimuls
sub
imul
and
aad
pop
arpl
inc
sbb
mov
jns
in
add
mov
shlb
sbb
repz
mov
mov
pop
mov
rcrl
inc
dec
cmp
inc
test
mov
dec
test
lods
stc
and
imul
cltd
mov
ret
cmp
jg
mov
out
dec
and
cmp
movsl
repnz
mov
push
popf
imul
sar
cmc
or
mov
adc
adc
jbe
out
mov
mov
rcll
mov
fidivs
cmp
mov
mov
out
mov
pop
dec
idivb
mov
mov
stos
cmp
jmp
les
xor
inc
add
mov
jge
je
jp
xor
adc
add
hlt
imul
call
cmp
out
pop
gs
es
pop
or
push
and
push
sbb
sub
mov
int3
push
shll
mov
sub
leave
sbb
into
rorl
dec
and
fbstp
in
sub
or
mov
push
jb
mov
push
jbe
movsl
and
sbb
cmp
popl
push
or
xchg
adc
orl
mov
xor
or
lods
mov
fcmovnbe
stc
outsb
js
mov
sbb
pop
xor
xlat
fnstenv
call
mov
aam
lods
mov
add
push
lock
inc
dec
ljmp
fwait
sub
pop
jo
mov
pop
test
add
dec
and
lcall
pop
mov
push
enter
lea
xchg
in
popw
cmp
cmc
cmp
push
pushf
scas
mov
cmp
adc
lods
jb
mov
popa
sub
mov
fbstp
xchg
and
sbb
sub
mov
out
sub
xchg
add
mov
mov
sbb
xchg
lret
mov
mov
mov
repz
in
push
and
cli
das
mov
xor
jae
cld
cld
pop
in
cwtl
mov
xchg
push
cli
aas
clc
aam
pop
mov
cmpsl
jecxz
mov
in
pop
xor
int
push
ret
fcmovu
mov
mov
xchg
xchg
sbb
jns
mov
loopne
enter
push
pop
jbe
xorl
imul
jns
enter
aas
dec
aam
jnp
mov
out
cmp
inc
sub
movsb
add
pop
neg
stos
insl
int
jbe
mov
shl
inc
push
pusha
inc
pop
inc
mov
cltd
mov
jns
push
into
addr16
mov
push
jmp
sbb
lahf
insl
mov
mov
cld
insb
pop
cmc
mov
idivl
sbb
mov
add
mov
mov
inc
rclb
jle
test
movsb
out
xchg
jb
movsb
cmp
in
shll
rcrl
lret
aas
cmp
cmp
push
nop
or
test
mov
sbb
lret
mov
push
xor
mulb
adc
sub
mov
ret
mov
or
jne
xchg
ljmp
xor
push
mov
inc
sti
lock
pop
hlt
mov
fidivl
pop
iret
mov
or
icebp
cmp
xchg
int
out
js
xchg
xchg
push
inc
je
sti
cmp
pop
addr16
test
mov
mov
push
in
push
and
gs
call
pusha
jnp
out
inc
push
mov
mov
addb
mov
pop
pop
lret
decl
mov
sbb
and
iret
aam
mov
adc
fucomip
xchg
test
stos
je
cmp
insl
jl
push
cmpsl
aas
xchg
push
cwtl
mov
push
icebp
adc
in
adc
aaa
cld
mov
mov
jmp
dec
or
mov
adc
mov
bnd
xor
sbb
mov
xchg
sub
ret
in
mov
lret
pop
mov
adc
imul
les
ret
mov
stos
gs
cltd
mov
insl
dec
mov
jge
mov
mov
dec
scas
mov
imul
mov
mov
jp
add
mov
lret
movsb
int
push
lds
mov
rolb
mov
cmpsb
hlt
movsb
cwtl
aam
sbb
or
aam
stc
test
sti
mov
mov
sahf
cwtl
push
lods
mov
xchg
arpl
mov
mov
dec
xlat
scas
stc
xchg
je
enter
sbb
ret
adc
or
add
mov
hlt
push
xor
jne
push
mov
mov
adc
jo
xchg
dec
cmp
adc
leave
and
mov
xor
lods
adc
xchg
xor
cmp
outsl
fwait
ja
xor
cmpsb
mov
sbb
xor
sbb
cmp
out
and
xor
cmc
adc
add
in
loope
pop
dec
inc
mov
jge
call
mov
mov
pop
in
mov
cmp
jae
cli
out
jne
lods
push
xchg
cld
pop
je
push
ds
mov
pushf
mov
adc
into
repnz
mov
xorb
ds
push
shlb
fmull
jbe
std
loope
pop
aam
dec
inc
sub
pop
aad
cmp
push
in
adc
jmp
mov
fnstcw
adc
stos
inc
sbb
lods
jno
stos
mov
cmp
add
push
pop
inc
xchg
fwait
je
xor
rcrb
mov
mov
push
insb
cmp
mov
ret
push
xor
lea
mov
cmp
inc
mov
data16
les
fadds
mov
bound
mov
add
and
pushf
mov
jge
stos
pop
cmp
in
mov
push
rolb
in
jg
mov
pop
movsl
push
cmp
scas
xor
push
mov
loopne
jle
xchg
into
faddl
test
mov
add
fninit
mov
push
rclb
outsb
test
mov
icebp
add
xchg
add
mov
aas
lods
movsb
push
insb
mov
jl
xchg
sub
adc
pop
mov
test
adc
addb
pop
mov
js
popf
and
out
shrb
test
adc
add
and
jmp
insl
ss
mov
mov
pop
inc
cmp
mov
fdivr
shrb
jp
cmpsb
xchg
dec
je
xchg
std
clc
push
jo
mov
popf
out
sahf
adc
loopne
pop
xchg
xchg
icebp
out
jbe
add
rcll
cmp
cmp
xchg
jmp
cmc
out
mov
mov
xlat
fwait
push
inc
pushf
push
mov
pop
add
dec
adc
and
jp
mov
adc
les
in
jne
jns
outsl
cwtl
fistpl
clc
mov
dec
add
mov
loop
push
xor
mov
scas
mov
bound
lods
jmp
das
mov
call
xchg
sahf
bound
in
int3
fsubr
and
jecxz
sub
aad
adc
adc
dec
pop
fbld
sbb
xor
mov
adc
imul
and
mov
jns
iret
call
mov
xor
sub
loope
out
mov
shlb
pop
xchg
je
aam
adc
xchg
inc
add
cmp
inc
push
jmp
fwait
mov
inc
lods
mov
cmp
sub
out
push
mov
stc
loopne
mov
mov
jl
jo
shrl
popf
cmp
jbe
push
in
test
sub
nop
icebp
push
mov
add
dec
adc
pushf
cmp
mov
sti
jne
lock
xor
call
cmpsb
in
jp
jb
dec
xor
mov
lods
mov
mov
data16
fs
fdivl
and
into
ljmp
push
mov
mov
or
ret
pop
outsb
mov
jl
or
aad
lds
jno
cwtl
mov
test
push
jge
mov
inc
dec
dec
inc
hlt
aas
loop
pop
cmc
mov
mov
or
imul
aad
pop
repnz
sub
stos
andb
mov
jbe
aas
dec
sbb
call
je
inc
jns
imul
femms
or
xor
data16
sub
mov
jl
mov
sbb
ret
sahf
int
dec
mov
cld
push
mov
call
adc
mov
xor
hlt
out
mov
inc
sub
pushf
mov
sar
xor
mov
mov
clc
and
add
cmp
adc
cmp
decb
mov
mov
dec
mov
stos
fldt
xchg
mov
in
push
fbld
xor
lods
mov
mov
es
scas
inc
and
cld
stos
stos
int3
and
imul
or
stc
and
cmpb
je
pushf
or
xor
push
jg
lods
mov
push
test
or
push
jnp
out
test
and
test
inc
adc
mov
lret
repz
sub
ret
test
mov
jb
cmp
mov
filds
ja
dec
push
std
jbe
sbb
ret
pushf
jp
push
mov
add
mov
xor
stc
or
cmc
pop
mov
xchg
pushf
shlb
dec
pop
pop
and
and
mov
cld
fmull
jle
push
out
mov
inc
jae
adc
mov
mov
mov
dec
stos
test
xor
lcall
push
ja
mov
sbb
jnp
ds
mov
cld
enter
inc
xor
mov
lods
mov
int3
inc
jnp
leave
xchg
data16
mov
or
shlb
fstpt
adc
jo
scas
or
js
push
mov
gs
lock
fsub
daa
mov
hlt
test
and
lret
pop
loop
imul
sub
js
pop
daa
clc
xchg
pop
cmpsb
fidivl
and
int3
mov
rcrl
cmp
xor
js
nop
mov
pop
addr16
call
xor
pop
xor
mov
aaa
jg
push
in
fs
daa
mov
push
push
dec
jge
inc
sbb
orb
popa
mov
push
movsl
pop
add
loop
mov
sub
mov
rcrl
mov
mov
std
or
insb
mov
mov
mov
or
mov
and
mov
add
rolb
cld
jbe
jg
hlt
mov
lock
sbb
mov
dec
scas
aam
stc
xchg
inc
xchg
mov
data16
jno
je
sarb
fistl
outsl
in
loopne
dec
mov
jns
inc
aas
mov
inc
mov
mov
cmp
jo
aaa
mov
ror
jg
or
or
sbbb
cli
and
mov
or
fisubrs
pop
adc
test
pop
push
mov
loope
mov
scas
andl
leave
xchg
into
out
mov
test
jg
jae
mov
pop
rdpmc
ret
jo
or
hlt
cmc
sbb
jne
clc
xor
test
sub
pop
shl
clc
call
adc
mov
lds
jmp
mov
out
ffreep
and
mov
ljmp
mov
mov
cwtl
xchg
out
mov
loop
ss
les
push
pop
jmp
inc
std
aaa
iret
fs
push
mov
mov
pop
jl
stc
push
lcall
arpl
mov
sarb
mov
je
cmpsb
sub
stc
in
das
aas
popf
adc
or
add
test
inc
cli
sbb
jp
xor
xchg
mov
pusha
and
outsl
push
mov
aas
repnz
cmp
test
pop
mov
stos
push
and
mov
lahf
mov
adc
and
imul
adc
push
bound
adc
in
pop
xchg
sbb
mov
add
adc
push
push
les
psraw
sar
cltd
xchg
adc
testl
mov
arpl
xchg
adc
out
movsl
mov
inc
fs
mov
nop
and
sbb
mov
jp
lcall
mov
int
sub
cmp
mov
add
mov
in
ffreep
pop
xchg
test
iret
fstl
dec
lods
add
mov
mov
ljmp
pop
pop
sub
dec
pusha
loope
mov
sbb
mov
fsubrs
push
mov
add
xchg
scas
roll
push
mov
lcall
addl
mov
imulb
es
rcrl
mov
pop
in
add
push
inc
mov
in
loop
jl
inc
mov
lock
xchg
sbb
hlt
jg
jne
icebp
mov
cmp
mov
fnstcw
dec
lahf
push
jb
adc
push
mov
inc
in
sbb
mov
cmp
cli
mov
mov
push
loopne
lret
test
pushf
mov
clc
inc
mov
pop
and
push
pop
push
call
sarb
cmp
mov
mov
adc
test
lods
jb
pop
jbe
push
es
mov
daa
or
push
dec
adc
jge
lea
inc
mov
xor
sbb
dec
inc
inc
mov
imul
call
enter
sbb
adc
mov
and
mov
mov
inc
arpl
mov
sti
iret
pop
or
dec
inc
add
fiaddl
mov
adc
lcall
mov
scas
pop
push
loop
leave
xor
add
ja
mov
mov
jl
sbb
jo
or
shl
mov
ficoms
push
filds
dec
mov
shr
fcmovnbe
loopne
rcll
mov
mov
mov
adc
mov
xchg
pop
rorb
xor
sbb
mov
les
leave
fndisi(8087
push
xchg
cmp
mov
jmp
sub
andb
mov
push
sti
adc
fdivl
daa
push
inc
mov
jl
pop
push
or
jmp
in
xchg
and
push
pop
xlat
inc
lods
fwait
rcrl
stos
sub
dec
mov
jno
insl
xchg
lods
adc
loop
pop
cli
push
cmp
mov
enter
popl
lods
lods
pop
lds
mov
mov
popf
mov
add
sbb
sub
add
dec
mov
cmp
test
mov
pop
fucom
mov
cli
sub
or
test
jecxz
mov
int
inc
imul
pcmpeqd
ja
lret
cmp
jno
mov
jae
lods
cmpsb
fsubs
sti
mov
jecxz
pop
add
adc
mov
mov
cmpsb
jns
push
popf
movsl
jp
sbb
xchg
pop
jb
jl
lods
sbb
pusha
hlt
je
rcll
imul
and
jge
sub
mov
test
adc
mov
mov
push
sbb
push
mov
fnstcw
in
jnp
cmp
std
push
ja
mov
stos
xor
lds
mov
inc
fcom
dec
mov
sub
cwtl
mov
daa
dec
jg
push
test
das
sbb
mov
lahf
movsb
cli
or
push
jb
dec
cltd
stc
mov
in
and
mov
test
dec
inc
push
jns
push
lea
andb
push
movl
fldt
sub
bound
mov
arpl
lds
cwtl
std
repz
pusha
and
mov
mov
out
xchg
idiv
add
into
push
inc
sbb
dec
repz
in
and
mov
push
jb
or
xor
mov
mov
lods
adc
cld
and
sarb
cmp
mov
xchg
repnz
xchg
jnp
jg
pop
or
arpl
repz
lret
mov
in
mov
jge
imul
incb
lods
xchg
inc
sarl
movsl
mov
sub
clc
cs
pop
xor
js
std
jno
bound
pop
xchg
insb
xor
jbe
lcall
lret
sub
fisttpl
ret
jns
jo
loopne
shlb
pop
out
xchg
add
or
mov
insb
pushf
xchg
mov
sub
add
cld
mov
dec
adc
je
adc
nop
in
pusha
adc
inc
cmpsb
lcall
push
cmp
dec
mov
xor
mov
sub
mov
fldt
call
sub
out
push
jns
mov
or
jnp
mov
iret
sub
inc
cmpb
push
sbb
shll
hlt
and
movsl
lock
mov
sbb
pop
ret
mov
jbe
push
int3
mov
mov
sahf
add
outsl
push
es
sti
movsl
hlt
mov
lods
je
lret
or
mov
mov
cmp
mov
test
fcmovne
mov
xchg
cwtl
lods
ss
in
and
cmpsl
mov
jb
mov
adc
xchg
xorl
fcmovu
into
dec
and
mov
fstpl
mov
mov
cmc
lea
push
jno
scas
mov
mov
jns
dec
lods
and
or
adc
lcall
xor
add
or
mov
fidivrs
fs
ja
pop
adc
scas
mov
imul
mov
mov
or
lds
orb
pop
insb
aas
push
mov
fidivs
fnsave
imul
lods
testb
push
iret
mov
mov
mov
cmp
inc
cmpsl
in
loopne
mov
ss
cltd
out
imul
add
add
and
and
xchg
lds
xor
jg
and
incl
inc
mov
xor
loop
adcb
pop
test
mov
adc
mov
sar
rcl
or
sti
or
mov
cli
xchg
fdivl
loopne
mov
sbb
outsb
cwtl
mov
mov
pusha
lods
jl
sbb
push
mov
pop
pop
mov
ss
test
xor
inc
mov
test
insl
mov
mov
xor
mov
ss
add
dec
xor
or
clc
mov
out
repz
and
xchg
in
dec
cltd
xor
dec
jecxz
mov
or
sub
roll
sbb
pop
adc
int3
rclb
ja
lea
cmp
mov
inc
xchg
or
jnp
shlb
loop
jl
and
dec
jmp
sub
rol
dec
push
mov
div
jno
in
mov
fisttpll
and
dec
mov
jge
mov
mov
sub
daa
mov
or
movsl
sub
sbb
and
mov
mov
lret
mov
mov
stc
gs
stos
rolb
mov
cs
sbb
xchg
sbb
jnp
sti
mov
push
jo
in
mov
inc
hlt
push
adc
xchg
stos
outsb
scas
xor
insb
mov
popf
lret
xor
test
dec
mov
hlt
sbb
jmp
shll
add
xor
fisubrl
dec
mov
xchg
push
xor
mov
mov
lahf
sahf
movsl
lcall
mov
sarl
mov
loop
add
mov
js
gs
jge
in
jns
push
sub
fdivl
sti
into
in
mov
in
xor
imul
jo
fistpll
jb
pop
clc
pop
or
ljmp
pop
sub
adc
les
cmovno
je
mov
div
in
fwait
stc
icebp
movsl
or
xchg
adc
rcr
jbe
jno
mov
shlb
xor
leave
push
pop
mov
mov
push
pop
clc
pop
mov
loope
push
sbb
mov
inc
mov
sub
mov
es
sti
ret
push
cmpsl
mov
jns
std
mov
mov
out
call
loop
xor
in
inc
int
iret
mov
pop
push
cmp
push
in
mov
divl
imul
loop
sub
mov
mov
ret
mov
mov
jge
sbb
mov
push
xor
dec
adc
mov
mov
xchg
outsl
mov
sbb
xlat
pop
mov
mov
jbe
in
pop
inc
mov
mov
sub
pusha
mov
xor
loopne
jbe
sub
mov
movsl
mov
sbb
jmp
cmp
movsl
mov
les
icebp
in
pop
and
cmp
rclb
jae
orl
jbe
ljmp
jmp
sahf
inc
into
neg
test
add
jns
jb
in
pop
xchg
and
jbe
shll
repnz
rol
sbb
push
xchg
xor
jle
mov
jge
jo
cli
xlat
xchg
mov
mov
shrb
pop
rol
inc
adc
es
adc
aad
mov
sbb
lahf
shrb
xchg
cmpsb
shrl
in
ja
insl
loop
add
mov
cmp
xchg
shll
fcmovnb
sub
pop
lcall
call
mov
mov
loop
das
add
xchg
adc
mov
inc
jne
mov
sahf
add
enter
jge
xor
and
mov
pop
xchg
aaa
mov
jle
jbe
lret
mov
mov
inc
mov
push
and
aaa
cmp
lock
dec
push
sbb
jp
popa
mov
cmp
arpl
mov
mov
in
fmul
fidivl
lds
fidivs
mov
stos
adc
xchg
xor
cli
mov
sub
pop
cmpsb
add
movsl
xlat
fbstp
mov
ljmp
out
loopne
sbb
pop
lods
test
and
jb
xchg
call
arpl
mov
pop
adc
mov
sub
aas
ss
outsb
notl
push
lock
push
aas
wbinvd
and
sbb
fcmovnb
cltd
pop
mov
pop
in
add
cli
sti
cmp
sbb
sub
enter
cmp
inc
push
push
xor
xchg
sarb
in
xor
iret
inc
pop
imul
jo
lret
sub
nop
mov
xor
es
xchg
add
aad
je
mov
leave
movsb
jnp
sub
jnp
cmp
cmpsl
in
je
mov
scas
stos
and
mov
imul
popf
test
xchg
loope
lods
add
popa
loopne
rorl
add
push
loopne
mov
push
clc
push
int3
or
mov
mov
clc
mov
xchg
aam
mov
mov
js
loopne
mov
je
movsb
test
cld
and
sub
mov
cmp
stos
mov
add
mov
add
shrb
fxch
imul
hlt
mov
es
dec
xchg
xchg
lret
xor
xor
mov
mov
shlb
loope
pop
aam
out
hlt
mov
adc
xchg
dec
inc
inc
mov
scas
xlat
lret
mov
xchg
jae
sbb
lea
mov
mov
add
mov
insb
xor
mov
mov
and
inc
imul
pop
push
xchg
mov
mov
push
ljmp
aam
adc
inc
mov
scas
mov
jae
out
jl
inc
addl
movsl
arpl
loop
hlt
clc
insb
rcrb
leave
sub
mov
idivb
mov
add
inc
xchg
xor
pop
ficoms
add
test
dec
xchg
popf
add
lods
pop
jnp
mov
mov
add
sti
mov
sub
adc
xor
mov
ja
insl
mov
daa
fsubr
jmp
mov
and
mov
jl
std
shlb
decl
push
mov
jne
adc
xchg
fsubl
sbbb
mov
xchg
shll
sub
dec
lea
mov
enter
inc
sahf
adc
xor
ret
bound
lods
les
or
fs
les
add
and
insl
xchg
add
mov
mov
lods
jno
xchg
ja
inc
mov
sbb
pop
dec
inc
mov
out
pop
mov
push
xchg
cmp
pop
dec
inc
mov
and
mov
arpl
push
mov
sahf
jne
mov
adc
call
lret
mov
pop
mov
cmp
testb
je
xor
aas
dec
jnp
jg
out
sub
add
gs
in
cmp
mov
aad
inc
ss
push
stos
shlb
cmp
mov
xor
or
mov
sbb
mov
push
aas
xchg
jmp
pop
mov
jbe
lret
iret
push
add
mov
add
fiaddl
mov
popa
lea
dec
test
stc
in
push
xor
pop
bsf
andb
call
dec
imul
inc
push
lods
int
stos
push
aam
or
mov
aaa
pop
test
dec
mov
movsl
inc
pop
test
xchg
push
mov
das
mov
test
sub
xchg
ss
jp
loope
inc
ss
clc
sub
mov
rorl
hlt
cmp
loop
mov
dec
jle
pop
mov
xorl
sub
push
lods
pop
cmpsb
inc
xchg
jns
insl
xor
nop
mov
push
mov
pop
rolb
aaa
dec
mov
out
fwait
ljmp
inc
cwtl
and
clc
push
inc
and
dec
ljmp
push
mov
repnz
jno
mov
add
xor
pop
lods
mov
gs
add
jbe
je
inc
cmp
insl
insb
in
push
lods
dec
push
xor
cmp
mov
jg
mov
mov
daa
adc
inc
popa
jmp
lods
dec
in
sbb
push
mov
call
mov
ret
mov
sub
dec
mov
mov
test
pop
out
les
outsb
jle
nop
movsl
call
std
and
ljmp
mov
or
mov
jno
mov
add
call
inc
cmpsl
add
icebp
nop
in
mov
test
xor
adc
inc
data16
mov
dec
mov
mov
notb
xor
push
lods
fwait
stos
mov
or
cmp
xor
mov
and
mov
mov
dec
sub
hlt
nop
test
enter
cmpsb
jmp
jmp
or
pushl
sbb
sub
and
mov
fdivl
or
je
xchg
mov
test
pop
dec
fcoms
in
test
in
mov
mov
xchg
dec
push
ret
and
mov
cmp
mov
clc
mov
mov
push
pop
jge
enter
sub
pop
test
div
add
cwtl
les
pop
imul
fdivl
in
lds
mov
xor
add
aam
nop
mov
jo
add
dec
xchg
sti
xchg
mov
mov
mov
cmp
push
int3
inc
out
shl
stos
stc
movsl
adc
or
pop
lcall
not
mov
mov
mov
jns
inc
inc
mov
mov
xor
movsl
push
fidivl
andl
mov
es
and
shll
ficoms
mov
or
js
addr16
cmp
sbb
out
push
xchg
mov
je
test
lods
or
xchg
insb
jl
in
fsubs
mov
mov
filds
push
sub
in
mov
setno
jle
jg
mov
or
inc
xlat
subb
cltd
and
outsb
push
pop
nop
jne
push
arpl
sbb
add
inc
test
mov
and
fnstsw
mov
pop
push
insl
pop
ror
mov
pop
inc
push
fsubrl
jne
lds
pop
push
jo
mov
mov
out
lock
mov
sbb
push
mov
mov
xor
mov
sub
gs
das
adc
enter
aas
test
js
mov
dec
mov
and
lret
popf
xchg
sti
add
shl
sub
inc
xchg
mov
repz
xchg
jnp
mov
les
pop
mov
pop
add
fs
repnz
divb
mov
jmp
in
pop
out
xchg
mov
scas
xlat
adc
xor
lods
dec
test
pushf
push
ror
ja
sub
xor
cmp
pop
push
cmpsb
pop
xor
icebp
or
inc
ret
jne
xchg
cmp
inc
pop
xchg
into
xor
faddp
push
mov
dec
movsl
cltd
jo
scas
icebp
jl
out
ret
enter
in
lods
popf
pop
and
pop
and
inc
addr16
insl
ror
mov
inc
xchg
es
aam
std
mov
lds
xchg
mov
icebp
int
and
hlt
sbb
sub
fsqrt
cmc
push
rcr
mov
pop
xchg
xchg
add
and
jbe
mov
dec
scas
pop
lahf
pop
mov
sbb
in
aas
push
push
sbb
mov
mov
cli
inc
mov
mov
xchg
std
jp
lock
in
lods
sub
paddq
lret
or
adc
movsl
popf
lea
shlb
filds
loopne
lcall
sbb
jl
lods
cli
cltd
in
movsl
fbstp
and
repnz
loopne
jp
mov
bound
sbb
jnp
adc
fadds
mov
les
push
mov
jl
loop
popf
stos
fst
xlat
mov
int3
mov
and
inc
mov
pop
or
add
dec
out
adc
aam
and
mov
sub
jge
add
into
iret
ljmp
push
and
fstpl
loop
xchg
mov
movsl
mov
stc
scas
out
xor
jle
repz
pop
fwait
cmp
mov
clc
xor
mov
mov
shlb
mov
add
divl
fsubs
mov
sti
mov
lock
cli
int3
push
mov
jb
xor
sbbl
cmp
pop
push
mov
mov
push
decl
mov
inc
mov
or
push
push
mov
push
add
sahf
push
lods
arpl
daa
js
xor
aam
lea
mov
test
pop
mov
nop
push
cli
test
or
jle
jne
je
out
mov
std
xlat
shlb
movsl
mov
xchg
stos
push
jg
lds
hlt
mov
arpl
scas
dec
mov
inc
jg
icebp
rcl
mov
inc
test
aaa
hlt
xor
mov
mov
imul
jae
sub
ret
mov
sbb
adc
addr16
stc
dec
lods
mov
int3
mov
ja
add
les
xlat
push
mov
ficomps
es
add
xor
mov
outsb
roll
shlb
mov
push
sbb
cld
fdivs
popf
popa
hlt
push
pop
imul
pop
je
jnp
mov
shlb
pop
or
cmpsb
mov
stc
mov
mov
les
mov
in
or
in
fwait
mov
inc
add
sarb
inc
daa
iret
mov
sub
pop
mov
out
je
pop
adc
imul
icebp
fildl
dec
hlt
inc
fcompl
mov
aaa
jne
dec
mov
inc
push
imul
pushf
push
jmp
pop
mov
cmc
mov
xor
sub
gs
cmp
inc
cs
insl
js
leave
jmp
add
add
daa
out
xor
test
idivl
adc
and
fnstenv
mov
xchg
push
pop
loope
pop
les
js
daa
push
dec
xchg
mov
jmp
jae
xor
dec
mov
push
or
mov
inc
fisubs
jae,pn
clc
mov
rorb
push
mov
sub
or
pushf
push
dec
mov
jae
fcmovnu
adc
jbe
mov
inc
bound
sbb
add
lret
mov
sbb
cmpsb
out
bound
mov
pop
les
adc
mov
aad
push
addr16
mov
aaa
dec
int3
cmp
out
cmp
lahf
pop
mov
into
cld
mov
js
mov
les
mov
icebp
pop
mov
dec
lahf
xor
or
push
mov
inc
dec
sahf
aad
ret
stos
js
das
mov
mov
repnz
out
pushf
push
clc
lea
test
add
rolb
inc
mov
mov
shrb
gs
stos
loope
pop
call
insl
ds
rcl
add
bound
mov
push
push
mov
xlat
mov
bnd
push
loope
mov
shrd
mov
sbb
cmp
or
test
out
ret
sarl
rep
loopne
jge
int3
push
mov
pop
std
add
jo
imulb
loope
lods
adc
stos
mov
lret
dec
dec
int
clc
cmp
mov
data16
mov
enter
or
push
mov
mov
pop
and
mov
xchg
add
imul
inc
arpl
jle
push
ret
mov
movsb
mov
fs
dec
mov
ljmp
mov
in
iret
imul
shll
cmp
sbb
int3
hlt
xchg
fdiv
add
and
xorl
add
pop
stos
shll
gs
loope
fnsave
sbb
inc
mov
sti
cmp
mov
iret
scas
sub
xor
mov
fdivr
mull
mov
dec
lret
fs
mov
out
mulb
or
test
mov
sub
daa
xor
in
scas
lock
mov
in
jmp
and
mov
push
mov
fistps
popf
fsubr
loope
inc
push
lods
dec
sbb
testl
add
mov
cmpsl
incb
mov
xor
sbb
fstps
mov
push
dec
sbb
mov
cli
push
xor
sbb
mov
push
jg
ja
sahf
cmp
mov
scas
mov
bound
repz
mov
xor
add
or
add
mov
mov
jae
out
jg
scas
push
cmp
push
and
repnz
int
icebp
sbb
and
push
lret
lock
xlat
lods
mov
hlt
fwait
sbb
lret
inc
pop
mov
sahf
dec
and
cmpsb
in
sarb
shrb
jl
test
in
push
sub
xchg
add
pop
or
adc
and
xor
mov
push
push
xor
mov
into
ds
cmpsl
and
xor
pop
negb
xor
mov
sbb
imul
outsb
jb
add
mov
and
mov
inc
test
cmp
in
hlt
add
shr
aad
int
mov
mov
adc
jae
or
mov
cwtd
loop
and
loopne
jl
and
mov
jmp
imul
cmp
xchg
xor
push
mov
jmp
bnd
stos
es
xchg
js
clc
scas
cld
cmc
mov
push
iret
xchg
cmp
jl
fnstenv
test
mov
inc
cld
sub
std
cmp
loopne
mov
add
mov
inc
aam
or
andb
cmp
xor
es
imul
jg
mov
lcall
mov
push
lock
mov
sub
sti
mov
pop
jge
sbb
fs
int3
xchg
faddp
dec
stc
cmp
hlt
pushf
mov
mov
push
sbb
cmp
push
dec
mov
and
sbb
cmc
jl
stc
faddp
mov
loope
loopne
cmp
jns
add
ret
pusha
dec
mov
jge
lret
movl
push
sub
jns
inc
pop
and
in
dec
xchg
mov
jmp
sbb
pop
into
jbe
xchg
outsl
cmp
adc
mov
cwtl
rcr
mov
test
mov
in
sahf
insb
rclb
std
dec
fcomip
and
stos
mov
divl
stc
add
cltd
popf
xor
int
js
mov
idivl
jmp
push
flds
or
xor
add
in
sbb
jg
jbe
movsb
test
cmp
pushf
cwtl
bts
jecxz
mov
mov
mov
mov
fsubr
cmp
ret
inc
hlt
test
pop
outsl
mov
inc
sbb
mov
and
or
push
es
aas
lods
xchg
lock
mov
aam
aam
mov
cmpsl
aaa
pop
movsb
sub
sbb
xor
mov
inc
mov
push
je
mov
pushl
out
inc
mov
test
mov
mov
push
dec
cmpsb
xor
pop
or
mov
hlt
test
mov
hlt
lds
mov
or
xchg
dec
pop
mov
cmpsb
xor
push
ds
stc
add
icebp
lods
cmp
dec
jbe
add
mov
and
pop
test
xor
add
mov
xor
push
dec
mov
rolb
inc
in
ss
mov
mov
dec
rorl
cltd
aam
dec
test
pusha
mov
mov
inc
adc
xchg
inc
dec
push
cs
xlat
jns
xchg
mov
js
or
test
divb
std
loopne
mov
repz
mov
les
mov
mov
repnz
push
mov
fucomip
xchg
inc
jb
xor
xor
das
sub
shlb
mov
fs
push
inc
mov
adc
mov
mov
pop
outsl
mov
cmpsb
adc
xor
in
enter
mov
adc
mov
cmp
rcr
sbb
loop
fs
daa
nop
cld
int
je
adc
cwtl
movsl
sbb
or
out
movsl
lock
adc
cwtl
push
and
push
scas
out
push
fidivs
xor
adc
mov
cmpsb
movsl
xchg
mov
aaa
xchg
fistpll
fdivs
jg
out
lcall
mov
cmp
dec
imul
cmc
int3
pop
hlt
ss
dec
fstl
push
push
or
sub
mov
gs
and
fdiv
xchg
xchg
leave
cmp
movsb
cmpsl
fidivs
sahf
dec
adcl
data16
jle
jno
sub
mov
ds
adc
or
popa
jp
xor
mov
fisttpl
mov
mov
jle
mov
xchg
mov
sti
cmp
and
xchg
test
jne
xchg
xorl
add
add
pop
mov
cmp
mov
in
fidivrl
mov
mov
dec
repz
mov
adc
adc
mov
pop
add
push
in
xchg
into
mov
lods
xchg
jp
cld
fsubs
xchg
or
imul
aas
fbstp
add
stc
dec
cmpsb
lods
fiadds
xor
mov
xchg
movsb
sub
xor
cli
aam
insb
test
xchg
sbb
mov
xor
inc
sarl
imul
lret
dec
mov
and
movsl
fidivrl
aam
jecxz
mov
rorl
rcrl
mov
lahf
jp
sbb
mov
out
icebp
loope
push
mov
shll
inc
cmc
stos
aaa
shll
xor
pop
fisttpl
push
sbb
dec
std
adc
mov
int3
ja
dec
or
mov
lods
push
pop
int
jns
and
mov
mov
arpl
jmp
sub
push
test
cmp
jecxz
lods
mov
aam
leave
sub
mov
in
mov
jo
push
loopne
insl
mov
inc
stc
addr16
xchg
pop
jg
out
mov
mov
sub
popf
jecxz
adcb
xchg
je
cld
gs
xor
xchg
pop
jmp
lods
add
mov
daa
ret
dec
cmpsl
xlat
mov
sarl
or
sub
ret
lahf
inc
sub
xlat
sbb
mov
inc
push
fnstenv
or
ss
and
mov
jbe
mov
adc
adc
into
call
mov
adc
andb
jae
mov
and
fnsave
sbb
jmp
repz
rcrb
cmp
mov
lret
mov
gs
jbe
xchg
add
mov
or
mov
mov
fs
adc
jae
xor
movsb
dec
out
repnz
aam
mov
test
add
test
gs
xchg
xchg
and
in
adc
xchg
in
scas
push
mov
stos
out
push
loopne
lret
mov
rorb
mov
push
out
cltd
fsubl
out
or
inc
jecxz
out
lcall
ret
dec
dec
scas
push
cmp
sub
ss
call
xor
rol
xchg
leave
ret
cli
lods
outsb
in
mov
cwtl
or
jno
decb
in
xor
or
mov
subl
movsb
mov
dec
addr16
mov
ljmp
xor
rolb
push
xor
out
mov
ja
lock
in
in
psubw
adc
addb
fs
jge
pop
or
lods
std
aam
inc
xchg
jnp
loope
mov
loop
call
inc
les
cmc
push
sbb
faddl
fbld
mov
in
stc
lock
jl
adcb
jge
jo
andb
xlat
pushf
mov
repnz
decl
bound
sub
icebp
dec
dec
adc
int
sbb
movsb
je
push
push
pushf
xorb
jl
sub
je
cwtl
mov
mov
hlt
xchg
nop
je
scas
outsb
cmpb
test
jnp
add
fisubrl
loop
testb
mov
mov
add
in
fucom
hlt
jmp
mov
clc
ljmp
sbb
add
in
leave
xchg
fdivp
cld
decb
rolb
mov
lock
mov
shll
out
clc
lods
mov
add
mov
jmp
jmp
mov
xor
xor
loop
adc
mov
cwtl
jl
jg
jp
push
outsb
ja
xchg
hlt
std
fiadds
sub
mov
adc
call
jl
lds
mov
jae
xchg
stc
in
in
arpl
cmp
jns
add
nop
jnp
leave
jp
ret
and
lods
outsb
mov
cmc
in
or
repz
jmp
cmp
cmp
mov
fcomip
mov
adc
jp
lods
movsb
mov
jb
movsb
jle
fcmovbe
mov
xor
sbbb
inc
jg
stc
neg
push
scas
mov
repnz
iret
icebp
xchg
push
inc
dec
fwait
dec
dec
aas
scas
dec
mov
mov
pop
fs
push
inc
dec
lret
inc
lds
out
outsb
scas
push
dec
dec
inc
push
pop
cmpsl
xchg
pop
push
popa
push
dec
or
dec
push
add
lds
insb
xchg
fsubrl
jmp
xchg
movsb
push
xchg
movsb
lods
xchg
xchg
pop
jo
adc
inc
mov
mov
jnp
stos
mov
or
test
xorb
mov
jnp
sub
and
mov
sbb
sbb
mov
inc
mov
ds
xor
and
je
enter
mov
add
add
fnstsw
in
xor
sti
dec
inc
inc
inc
inc
mov
idiv
fsub
lret
lret
dec
enter
ja
cmc
xor
in
or
loopne
sub
movsl
nop
pop
mov
shlb
pop
lds
cmp
dec
dec
inc
addl
mov
imul
test
fisttps
cmp
inc
or
dec
inc
cmp
xor
js
mov
jl
adc
ret
aas
icebp
xchg
je
dec
movsb
sub
popa
iret
lods
sbb
notb
cmp
cmpsb
push
inc
lods
inc
daa
mov
aas
in
jg
xchg
lcall
dec
push
cmp
lods
xlat
cmp
mov
inc
inc
inc
dec
push
imul
pop
adc
pusha
hlt
add
mov
loopne
jmp
loop
push
es
inc
or
lods
sahf
add
movsb
out
mov
jmp
icebp
cli
mov
lock
xchg
std
in
mov
xbegin
ret
jmp
or
mov
lock
adc
fisubrs
add
xor
out
repnz
mov
cmpl
loopne
jmp
loop
sub
orb
adc
outsb
movsb
pushl
dec
aas
ficompl
mov
call
rcrb
xor
jo
xchg
sub
mov
jmp
fidivl
sti
push
push
jmp
xlat
jb
insl
clc
jge
repnz
jmp
into
push
frstor
add
mov
lock
push
stos
inc
mov
movsb
adc
rorl
mov
insb
jmp
nop
rcll
push
cld
sub
mov
xor
iret
mov
mov
jmp
lods
stos
sti
inc
gs
sti
cmp
lock
stos
push
sub
aad
in
hlt
int3
ret
loopne
xor
jmp
clc
add
add
es
add
cli
xchg
push
repz
aad
xor
insb
fidivrs
or
mov
mov
cmp
jle
out
aad
add
arpl
in
cmp
fsubr
fistps
pop
cmp
adc
xor
adc
jp
aad
mov
enter
ja
lret
sbb
notl
push
cmp
mov
es
jb
je
lock
loope
loop
loopne
in
pop
sbb
inc
sub
or
mov
and
jbe
in
lock
neg
jmp
jo
mov
xlat
js
mov
dec
push
jp
dec
mov
dec
mov
inc
push
cmp
inc
jp
push
std
dec
adcl
repz
out
js
daa
lcall
sub
ljmp
inc
aas
dec
ret
cmp
sbb
loop
addb
push
pop
jbe
inc
jge
out
jg
cmpsl
ds
dec
aas
popf
mov
mov
mov
test
mov
inc
push
lcall
loopne
push
ja
mov
enter
dec
xchg
popa
out
mov
cltd
cmpsl
mov
gs
dec
mov
cmp
mov
mov
push
rorl
fs
mov
mov
mov
dec
inc
je
addl
jbe
outsb
outsb
sahf
outsl
cmc
rcl
movsl
inc
mov
cwtl
mov
cmpsl
xchg
imul
fs
dec
insb
inc
cmp
sub
andl
int3
popa
adc
adcl
add
cmpl
xor
ss
jae
jb
mov
cmpl
mov
fcoms
push
pop
fs
iret
clc
push
ss
add
repz
je
sbb
xchg
nop
mov
clc
sbb
stos
fnstsw
imulb
adc
sub
dec
fbstp
test
lock
mov
addl
jno
outsl
outsb
ja
xor
cmp
stc
adc
mov
xchg
nop
mov
inc
dec
movsl
mov
shrb
mov
int
out
adc
cmp
push
cmovs
dec
mov
enter
dec
addb
inc
pop
pusha
orb
aas
push
push
inc
or
es
sbb
inc
lcall
ja
scas
push
rorb
adc
out
xchg
outsb
dec
push
cmpsb
cmpsb
cmp
loopne
dec
bound
sub
fwait
dec
push
dec
inc
mov
popa
sub
inc
inc
push
and
nop
inc
lods
xor
jae
push
aas
adc
cwtl
xchg
lret
jl
and
add
push
imull
stos
imul
push
js
sbb
and
push
mov
seta
adc
mov
subb
lcall
test
mov
mov
adc
xchg
fs
test
inc
xor
push
sahf
jp
popa
dec
jae
int
std
dec
lret
and
mov
add
arpl
jg
lret
mov
inc
test
xchg
popa
inc
mull
lahf
sub
testb
ds
popa
push
cld
sbb
cmp
popa
lods
mov
and
adc
xchg
arpl
jbe
mov
out
jae
inc
lea
xchg
pop
push
cmpsb
sub
outsl
xchg
mov
push
adc
dec
jb
pop
inc
iret
push
pop
inc
pop
inc
pop
daa
inc
cmp
mov
adc
mov
adc
xchg
inc
jo
loopne
pop
iret
cmp
fmuls
insb
xor
hlt
mov
jae
dec
push
pushf
add
jmp
mov
insl
cltd
test
xor
mov
push
mov
imul
movb
and
sub
pusha
aas
js
loope
inc
nop
adc
push
jnp
jno
inc
inc
addr16
pop
sbb
hlt
ret
bound
cltd
les
lcall
jns
stos
cmpsl
popf
mov
bound
adc
movsb
mov
jmp
xor
test
int3
sahf
add
lods
es
mov
nop
xor
leave
popf
mov
pop
pop
sub
pop
nop
pop
insb
pop
and
popa
jo
sub
xchg
insb
push
jo
insb
sub
outsb
nop
outsl
insb
jo
jno
jb
jae
sub
jbe
ja
js
jns
jp
jnp
sub
jle
jg
andb
xchg
subb
shlb
mov
ret
mov
mov
cld
stos
jl
mov
cwtl
mov
jo
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
lods
lds
nop
lods
out
lods
add
sub
lods
inc
mov
mov
movsb
add
aas
test
xor
andl
rcll
xchg
cli
jnp
dec
jp
pusha
jns
int
je
popa
je
mov
je
mov
mov
mov
jno
mov
cwtl
jo
lret
jb
outsb
nop
mov
ljmp
adc
jo
mov
cmp
fwait
pop
fdiv
movsb
pop
inc
sbbb
dec
lods
out
or
insb
add
mov
push
jae
jnp
xchg
insl
jo
lods
imul
pop
arpl
repz
pop
les
cmp
push
push
pop
xchg
push
push
pop
test
push
lods
dec
jbe
push
js
adc
ret
mov
dec
push
mov
inc
mov
icebp
aam
inc
je
push
lods
jae
jbe
pop
jge
push
adcl
mov
pop
std
popa
repz
pusha
les
cmp
push
outsl
jbe
jno
jns
movsb
mov
addr16
push
les
rcrl
mov
dec
push
fidivrs
push
push
in
dec
push
cmp
ret
inc
push
sub
cmp
push
mov
xchg
ds
lods
mov
inc
dec
dec
inc
insb
inc
xchg
pop
mov
movsb
jg
mov
push
sub
pop
shll
loopne
xor
mul
inc
cmp
jne
adc
mov
int3
pusha
cmp
sbb
lods
or
fs
add
or
and
sub
les
cmp
test
je
idivb
mov
movsl
daa
cmp
cs
inc
ss
push
aas
inc
xchg
lods
inc
inc
scas
adc
inc
jbe
ljmp
mov
movsl
adc
adc
jnp
dec
push
popa
das
pushf
movsb
test
rcrb
gs
inc
pop
mov
les
aam
fpatan
lds
adc
sar
js
sbb
mov
repz
popf
cmp
jnp
mov
xchg
cli
imul
repz
pushf
xlat
aad
iret
and
fimuls
mov
test
mov
push
mov
out
xchg
xor
cwtl
fucomip
mov
mov
in
nop
repz
lods
push
fbstp
pop
arpl
lcall
mov
dec
xchg
inc
sub
ljmp
jp
xor
fs
lret
ret
test
scas
mov
xor
xchg
stos
in
mov
mov
aam
cmp
xor
sarb
cmp
mov
jnp
cmp
mov
shrl
ret
daa
dec
sub
sbb
fisttpll
push
nop
mov
mov
shlb
xor
pop
mov
daa
adc
in
lods
jmp
andl
les
leave
hlt
sbb
inc
mov
fs
adc
sub
loope
js
xchg
scas
mov
pushf
in
pushf
mov
shrb
cmpsb
stos
inc
adc
cld
cmpsl
cltd
fildl
mov
popf
nop
adc
push
xor
lcall
pop
push
jae
inc
addl
and
add
in
jmp
lahf
int3
les
mov
pushf
enter
cmpsl
adc
and
mov
push
and
jecxz
jmp
enter
movsb
mov
les
lret
xchg
cmp
iret
stos
hlt
sar
add
xor
xor
scas
mov
loopne
inc
push
ljmp
push
xor
push
pop
lods
dec
push
je
cmp
icebp
mov
fcoms
cwtl
shrb
inc
xchg
fcoms
popa
shll
mov
test
stos
ret
push
sbb
xor
int3
cwtl
sbb
xchg
rorl
aad
fs
mov
xchg
sub
out
js
rclb
loopne
mov
xchg
mov
inc
dec
xor
cli
mov
test
loopne
cltd
dec
mov
hlt
shrl
fcmovnb
lcall
xchg
add
adc
stc
sbb
or
out
xor
mov
int3
lret
les
pop
mov
adc
js
cs
call
ret
les
sub
mov
mov
push
fisubrs
mov
sbb
inc
in
sbb
in
lea
push
sbbb
stos
sbb
cmpsl
les
shlb
outsb
xor
pop
hlt
or
cs
les
fstpt
xor
sarb
inc
in
sbb
movsb
sbb
sbb
inc
in
mov
cmp
sub
cmpsb
pop
inc
test
lock
xchg
sub
aaa
scas
fisttps
push
aam
lods
fldl
xor
fdivl
and
hlt
pushf
mov
repnz
iret
jne
xor
aas
in
jae
pop
test
insb
add
mov
xchg
shll
xor
sub
adc
test
mov
adc
test
xor
xor
cmp
mov
cmp
mov
les
sub
stos
mov
sub
xor
mov
call
int3
fwait
sub
xchg
mov
shll
cld
mov
lods
sub
lock
pop
repz
clc
inc
pushf
jmp
pop
sbb
enter
adc
les
repnz
imulb
loopne
add
xchg
cld
pop
insb
inc
mov
xor
int3
loopne
xor
inc
lret
dec
mov
inc
adc
xor
inc
aam
sti
out
adc
mov
out
nop
sub
divl
add
and
or
je
ret
lock
popf
loopne
int
aam
jecxz
out
scas
xchg
jmp
movsb
lret
jl
aam
push
mov
leave
mov
cli
jl
mov
add
push
sbb
and
movsb
aam
aad
jnp
lods
push
sub
sub
cmp
cmp
inc
fimuls
test
mov
cmp
pushf
xor
add
sub
scas
sub
adc
or
repz
adc
fsts
loop
xchg
stos
fmuls
sbb
jmp
mov
in
xor
out
fs
stc
cmp
jge
or
jle
sbb
cmp
jmp
push
sub
xor
jge
cmp
inc
xchg
cmp
bound
and
push
aaa
lods
xor
cmp
test
adc
sbb
mov
add
dec
mulb
out
and
cmpsb
rcl
fsubl
fucomi
movsb
cmpsl
loop
in
in
es
repz
repz
cli
add
and
add
inc
adc
fs
and
movsb
sbb
inc
cld
arpl
xor
les
xor
aam
aas
mov
xor
jmp
cmp
cs
sub
sbb
sub
fdivs
sbb
test
push
mov
testb
jecxz
lods
int3
fucom
dec
mov
cmpsb
sarl
mov
aad
and
ficompl
out
inc
out
adc
div
repnz
add
add
nop
add
jo
xchg
adc
test
and
sub
mov
lahf
cmp
sbb
inc
sub
cmp
stos
cs
mov
daa
xor
and
push
adc
or
and
push
out
icebp
xor
in
mov
rcl
mov
xchg
iret
pop
xchg
mov
loopne
test
loop
jmp
je
lock
std
sbb
adc
adc
pop
sbb
mov
sub
das
xor
xor
xor
shl
mov
mov
xor
scas
mov
adc
paddsb
nop
icebp
repz
fptan
arpl
mov
mov
pop
xlat
sub
jbe
xor
and
sub
insb
jmp
and
rorb
hlt
inc
or
insb
nop
adc
sub
sbb
lock
fldt
aam
mov
cmp
jl
lods
insb
inc
test
and
sbb
ljmp
out
fs
clc
push
dec
movsb
add
or
movsb
add
in
sti
and
fcomps
lds
mov
shll
jnp
in
cmpsl
xchg
lret
pop
sub
and
and
repz
sarl
add
push
adc
pop
xchg
sbbb
fimull
adc
rcrb
sbb
mov
int3
xor
ds
inc
inc
dec
movsb
pop
inc
cwtl
cwtl
int3
mov
mov
hlt
call
jnp
sbb
mov
stos
call
int
mov
out
movsb
fsubr
xor
fsubrp
add
shll
shrl
je
mov
vpaddsb
jl
sbb
aam
loop
xchg
push
ss
xor
int3
das
mov
xor
mov
stos
in
imul
fidivrs
rcrl
sub
enter
in
xchg
push
and
mov
test
sbbl
add
mov
dec
and
int3
arpl
lods
cwtl
sub
lods
mov
xchg
insb
sbb
jbe
aad
sbb
test
and
xor
xorl
inc
sub
adc
aam
lock
int
pop
stos
roll
mov
fdivrs
cld
mov
stos
cld
inc
mov
mov
shlb
into
subb
out
mov
call
cmp
pushf
xchg
int3
ret
test
aam
icebp
push
fsubrl
fiadds
adc
leave
lcall
ret
ret
xchg
pop
add
mov
xor
mov
outsl
xor
mov
cmp
xchg
data16
push
fmul
jecxz
bound
adc
je
in
es
ljmp
rolb
scas
shl
mov
aam
roll
lods
lds
scas
in
out
andb
jbe
jmp
mov
loop
push
clc
sbb
push
scas
xor
xor
cmp
pop
cwtl
call
jg
leave
aam
or
cmpsb
call
pop
aas
jo
hlt
dec
cmc
mov
test
cmp
inc
mov
pop
out
mov
repz
sbb
xchg
hlt
imul
mov
in
cmp
pushf
les
lods
push
movsl
mov
sub
jl
test
aaa
loop
cmp
mov
mov
inc
sub
xor
ret
inc
cmp
je
movl
adc
sbb
mov
push
repz
repnz
and
pop
aam
ljmp
hlt
mov
insl
jmp
mov
xchg
int3
push
cld
mov
mov
lcall
jl
aaa
in
cmp
pop
aam
dec
push
or
xor
movsb
xchg
aaa
xchg
add
stos
iret
cltd
hlt
ja
add
mov
pop
js
decl
shlb
push
xchg
xor
jb
mov
shl
and
pop
or
sbb
mov
mov
push
xchg
dec
cmc
inc
je
std
sub
repz
cltd
ljmp
mov
cmp
lods
sub
dec
inc
cmp
inc
dec
in
mov
arpl
jl
fs
push
lods
hlt
mov
push
fs
pusha
cmp
popf
push
sub
loop
push
movsb
sbb
inc
je
int
adc
andb
ss
movlps
test
inc
in
cld
test
xor
popf
repz
push
xchg
push
in
insb
jno
test
cltd
aad
mov
mov
adc
aam
mov
ja
movsb
xor
add
mov
inc
push
mov
pop
pop
xchg
xor
push
movsb
dec
dec
cli
sub
cmp
in
xor
and
popf
and
and
adc
fsub
test
in
enter
in
shrb
and
jl
sbb
movsb
pop
adc
in
pop
lock
cmpsl
sbb
jl
or
or
or
xor
mov
mov
ret
mov
xchg
mov
repnz
sahf
sub
inc
repz
dec
push
jno
push
cmp
scas
push
push
pop
cmpsb
xor
lods
dec
dec
push
movsb
nop
sub
jno
cmp
xor
fs
cmpb
lock
je
bound
mov
mov
lock
pop
push
test
and
lods
and
pop
fwait
pop
and
or
fs
adc
inc
push
mov
int3
movsl
ss
xor
je
insl
lcall
insb
inc
mov
mov
dec
pusha
dec
mov
xchg
pop
bound
xor
push
xor
lods
aam
dec
dec
sbb
inc
add
test
aaa
cmp
sbb
inc
mov
add
mov
sub
dec
in
stos
and
movsb
or
mov
dec
push
inc
fdivrl
fs
add
push
sbb
adc
enter
sub
enter
jno
pop
jge
pop
mov
imul
xor
xor
mov
inc
mov
lods
cmp
mov
dec
or
insb
jp
hlt
xchg
xor
mov
scas
movsb
xor
ljmp
and
or
fmull
dec
in
dec
dec
mov
xor
cmp
mov
push
or
ljmp
and
push
xchg
adc
dec
or
pop
dec
xchg
cmpsl
inc
inc
inc
sub
cmp
fwait
aas
or
out
stos
or
in
insb
mov
ret
cmc
aam
mov
cmp
inc
data16
int3
std
inc
imul
push
xor
mov
pop
pop
fsubrl
mov
xchg
pop
into
dec
stos
mov
mov
xchg
in
les
hlt
mov
sar
or
mov
pop
fisubrl
mov
in
out
cld
mov
incl
fwait
add
sub
outsl
sub
inc
jl
mov
mov
lock
rolb
bound
sti
mov
stos
movsb
adc
mov
cmpsl
adc
enter
xor
cld
icebp
mov
or
jo
cld
add
dec
je
inc
in
movsb
pop
js
sub
pop
clc
sbb
popa
aas
inc
imul
ds
test
sbbb
or
cwtl
sub
mov
in
mull
dec
imul
insb
mov
mov
ret
ljmp
int3
data16
sti
jbe
push
nop
pop
aaa
jl
cmpsb
lret
mov
shll
mov
in
scas
mov
movsl
daa
xor
mov
stos
stos
xchg
jbe
fwait
mov
mov
lahf
movsb
lods
pop
mov
cld
test
popa
js
xchg
mov
lods
mov
aad
push
inc
push
popf
cmp
lea
icebp
jnp
loop
mov
std
cmpsl
add
push
dec
inc
dec
les
jp
jmp
popa
mov
inc
and
cmpsl
stos
mov
fcoms
xorb
cwtl
adc
dec
aaa
push
and
arpl
xchg
inc
dec
inc
jnp
test
popa
arpl
jbe
inc
cmc
push
popa
arpl
cmpb
mov
loopne
rcrb
mov
testb
dec
insb
inc
stos
dec
or
xchg
jno
aas
xchg
js
push
lret
js
test
subb
in
push
dec
inc
lret
std
pop
xchg
daa
adc
push
sub
add
aaa
add
add
inc
inc
pop
mov
push
ss
aas
ret
dec
mov
insb
sub
xchg
and
and
push
mov
or
pop
mov
sbb
mov
bound
jno
mov
lcall
loope
sub
cmpps
sub
aaa
mov
addl
ret
in
xchg
xchg
lds
sbb
push
pop
std
or
scas
xchg
pop
mov
fldt
add
out
jnp
push
cmp
or
shrb
gs
mov
test
ja
lods
cmpsl
mov
shl
loop
loopne
inc
divb
inc
sbb
xorl
gs
emms
pop
xchg
arpl
insb
inc
lods
in
int3
add
jmp
xor
jmp
lds
pop
lret
add
loope
in
sbb
test
pusha
nop
cmp
int3
mov
in
cld
scas
in
out
scas
xor
rclb
mov
dec
inc
das
push
ret
ret
xchg
in
jnp
add
fcomip
push
xchg
jae
add
add
sub
adc
mov
jl
or
aam
push
dec
mov
dec
mov
cwtl
movl
lods
idivl
repz
add
in
in
ficoml
leave
jp
pushf
mov
xchg
loopne
mov
jmp
xchg
cmp
xor
fdivr
ret
daa
xchg
sbb
and
xor
sarb
xor
mov
mov
ljmp
hlt
inc
mov
mov
mov
xchg
pop
out
loop
jae
mov
push
add
mov
mov
call
sbb
sub
fdivs
cmpsl
pop
stos
ret
in
lock
adc
clc
int
fnsave
fwait
notb
mov
mov
add
adc
pop
mov
lcall
repz
in
lcall
xchg
adcb
adc
in
push
pop
inc
sbb
outsb
jge
andl
fldl
ljmp
lret
cmp
out
mov
mov
pop
movsb
xchg
movsb
mov
sub
mov
ret
hlt
ljmp
clc
mov
into
sub
adc
and
xor
jle
fstpt
mov
aad
mov
in
xchg
xchg
iret
xor
jg
mov
jecxz
movsb
jb
out
mov
repz
jmp
out
sar
in
pop
sbb
fstp
andb
je
jo
je
jg
jmp
mov
add
leave
push
inc
sbb
subb
jp
loopne
popf
into
insl
es
mov
out
rolb
repnz
xor
mov
cmp
pextrw
test
jno
or
cmpl
in
fildll
popl
test
sub
enter
leave
shlb
push
add
add
dec
sti
push
adc
xchg
iret
push
popa
jl
sbb
xchg
adc
mov
mov
add
push
movsb
loope
outsb
inc
loop
mov
stos
fwait
pop
stos
jl
je
push
inc
aaa
mov
out
jb
or
fdivs
loopne
incl
call
jecxz
xor
jmp
and
fistl
cltd
cld
scas
sub
rclb
and
insl
or
mov
and
lahf
hlt
repnz
rorb
fcomip
in
mov
arpl
push
ljmp
mov
fbld
int3
popa
stos
ffreep
std
stos
lret
cmc
ret
inc
pop
fisubl
adc
stc
sbb
or
mov
or
ror
outsb
mov
sahf
or
xlat
sti
outsb
stos
in
mov
mov
jge
movb
pop
bswap
inc
mov
sub
setae
jmp
out
xor
mov
iret
mov
jo
xchg
mov
jle
push
inc
shlb
bound
outsl
stos
inc
sub
daa
negb
in
clc
call
adc
fldt
in
cmc
adc
pop
scas
dec
mov
push
and
fbld
sbb
jg
rcrb
mov
fs
stos
adc
push
jb
fldenv
inc
out
push
sub
lahf
inc
in
cmp
and
xchg
sub
push
stos
divb
mov
mov
test
pop
adc
stos
ljmp
repz
cwtl
gs
cmp
jnp
cld
mov
add
ljmp
ja
cmc
and
and
int3
lock
in
sti
rcrb
ret
ja
mov
shr
in
pop
nop
cmp
sub
push
aad
add
lods
cld
ret
std
inc
jl
adc
inc
cltd
mov
xor
notl
cmpsb
xchg
pushf
inc
les
daa
mov
mov
lcall
add
hlt
xchg
dec
test
pop
jge
loop
mov
cmp
in
inc
dec
fcoml
jge
xchg
xor
insb
adc
orb
ficomps
jge
loopne
cld
mov
loopne
and
stc
loopne
jp
sub
inc
ds
sub
aas
lret
aaa
movsb
xchg
inc
test
jb
xor
ljmp
rorl
lcall
iret
movlps
movsl
mov
adc
mov
pop
add
stos
xchg
movsb
pop
xchg
or
add
mov
inc
scas
push
repz
mov
fnstenv
loop
and
movsl
loop
aaa
mov
int3
movsb
mov
arpl
daa
pusha
clc
jno
and
iret
test
fisubrl
jp
push
movsb
adc
xchg
inc
and
mov
mov
data16
fwait
pop
out
dec
pop
jne
imul
popf
outsb
cmpl
pop
sbb
cmp
mov
xor
aam
pop
mov
lahf
xorb
incl
andb
and
lcall
aam
nop
je
add
sbb
pop
je
and
arpl
adc
xchg
outsl
fdivl
call
inc
js
stos
cltd
hlt
out
lret
leave
scas
les
cmp
std
movsb
stos
jnp
addl
in
sbb
pop
jmp
xor
inc
in
jno
fwait
dec
stos
xchg
sub
sbb
stos
mov
lock
jbe
cmpsl
pushf
sub
lods
data16
jmp
xchg
inc
mov
sarb
orl
movsb
dec
je
fsubrl
popf
jl
adc
push
mov
inc
imul
test
mov
add
insl
jbe
nop
aam
mov
mov
xchg
test
and
xchg
mov
fs
pushf
mov
fwait
test
stos
xchg
xchg
cmpsl
outsl
test
jbe
push
mov
jo
add
mov
xchg
fs
das
in
fwait
je
test
mov
test
xor
inc
test
movsb
sbb
mov
in
mov
mov
lods
pushf
faddl
test
adc
movsl
xchg
movsb
ret
test
clc
xchg
loop
int
call
pop
test
mov
sbb
inc
push
xchg
mov
xor
xor
aam
xchg
cld
outsl
sub
dec
lods
repz
and
mov
dec
and
test
das
shlb
dec
fs
xchg
sub
sahf
adc
cmp
les
bnd
pop
in
mov
dec
das
pop
mov
mov
je
jns
mov
add
mov
jbe
popf
adc
subl
xor
mov
andb
and
mov
scas
int
add
push
xchg
aam
push
lods
pop
push
xchg
inc
cmp
jp
movsb
aam
mov
and
mov
mov
aam
jl
test
adc
stos
rclb
cmpl
ret
xchg
jnp
or
push
jno
int
jle
xorb
popf
sub
and
mov
push
js
jmp
inc
cmp
pushf
and
xchg
xchg
add
xor
in
mov
insb
data16
je
sbb
js
js
cld
push
insb
jae
mov
in
lea
inc
jb
mov
popa
hlt
pushf
xchg
scas
shlb
insl
test
in
pushf
dec
mov
repnz
mov
popa
jp
movsb
push
jo
add
or
jmp
movsb
insb
data16
cwtl
gs
pushf
add
pop
xor
xor
mov
mov
xchg
pop
jl
jo
mov
movsb
aam
xchg
mov
stos
outsl
test
adc
inc
pop
and
mov
cmp
jl
adc
xchg
pop
lods
xchg
inc
in
sub
push
jns
movsb
fs
mov
rcll
inc
sub
je
movsl
xor
dec
adc
xchg
and
mov
add
movsl
and
imul
rcr
inc
inc
pop
sbb
and
jo
cmp
es
scas
lock
inc
adc
aam
jbe
test
mov
inc
hlt
cmp
unpckhps
lods
add
cmp
push
mov
inc
xchg
xor
pop
das
add
in
xor
jbe,pt
je
mov
aam
cmp
mov
test
aam
add
mov
popa
inc
fadd
cmp
fadd
cmp
mov
test
xor
and
and
mov
adc
sbb
das
lahf
xchg
pushf
add
push
jns
int3
pop
and
repnz
and
xor
je
daa
repnz
dec
scas
cmp
dec
lahf
aam
jl
and
add
fsubs
int3
movsl
in
xchg
xchg
xchg
dec
int3
pop
sub
nop
mov
jl
push
add
pop
movsl
sub
addl
in
mov
test
je
les
adc
jge
and
movsb
je
mov
shl
sbb
je
in
movsl
das
xchg
sbb
sbb
inc
sbb
xor
fcompl
sub
inc
sbb
jl
mov
adc
jl
les
sub
mov
daa
int3
and
cld
jne
aam
inc
aam
sbb
sbb
insb
les
pop
int
cmp
int3
pop
jne
lods
lods
pop
popf
int
mov
pop
mov
mov
hlt
inc
stos
js
scas
movsl
test
jae
rolb
cmp
stos
icebp
sub
lods
and
andl
subb
jmp
fucom
out
stos
pop
mov
out
xchg
loopne
adc
and
mov
shrb
push
int3
movsb
mov
xchg
into
lds
xor
das
push
sub
xor
sbb
scas
insl
stos
xchg
jnp
xor
mov
and
test
paddb
and
mov
mov
fs
mov
hlt
inc
mov
mov
add
lahf
sbb
rclb
imul
mov
lods
adc
mov
dec
add
pop
push
js
lock
or
stos
push
mov
sbb
lock
test
ljmp
cmp
loop
push
sub
push
repnz
lock
insb
cld
jb
pop
lahf
repnz
jne
add
das
in
cld
adc
stos
test
xchg
sbb
dec
ss
inc
dec
jo
mov
xor
call
xchg
adc
xchg
xor
pushf
aaa
outsb
pop
addb
xchg
mov
xlat
cmpsl
loop
notb
arpl
mov
inc
fidivl
stc
andl
call
lods
cmpsb
jae
mov
or
dec
jbe
mov
mov
pop
repnz
lahf
repz
adc
je
subl
cmpsb
pushf
fwait
pushl
into
cmp
sti
les
fs
je
mov
and
mov
push
push
je
test
and
test
push
test
push
mov
dec
xchg
into
jne
insl
mov
jbe
pop
sbb
xor
push
out
xor
ret
and
and
and
jp
aam
mov
dec
pushf
mov
adc
mov
or
test
push
popf
hlt
sbb
je
dec
test
nop
rcrb
inc
test
test
jo
mov
or
xchg
jge
pop
and
data16
clc
lods
je
mov
lea
xor
ret
dec
shrl
lahf
mov
dec
rcrl
shufps
je
mov
dec
mov
imul
test
dec
dec
inc
daa
xchg
shrb
jp
mov
add
dec
jns
adc
xor
or
in
xorl
les
je
adc
lret
cmove
in
in
sbb
enter
xchg
movsb
fcomps
sub
dec
push
in
loopne
inc
mov
dec
in
dec
and
mov
inc
mov
sbb
sti
pushf
mov
mov
pushf
xor
popa
scas
mov
pushf
and
and
or
sub
or
sbb
sbb
fdivs
adc
xor
out
dec
movsb
aam
mov
pop
xchg
out
repnz
out
movsb
cmp
lods
addl
or
fs
add
in
jb
test
add
int
sbb
jl
in
fsubr
mov
shll
hlt
in
cld
insb
mov
xchg
push
scas
lods
aam
test
inc
faddl
stos
cmp
cmp
mov
sbb
aam
shl
insb
cmp
xchg
lahf
das
fs
jge
je
mov
pushf
xor
or
outsb
pushf
iret
sub
fs
cmp
cs
pop
pop
mov
sub
sub
sub
dec
inc
mov
test
fs
adc
lods
lods
push
xchg
xor
sbb
popf
movsb
sbb
push
adc
inc
stos
pusha
stos
pushf
fildl
push
mov
lods
bound
adc
addr16
xchg
std
add
dec
loope
fdivrl
adc
lods
cmp
insb
xchg
mov
sub
movsb
ret
inc
hlt
mov
ja
movsb
dec
das
add
push
ret
sbb
sbb
or
lods
sbb
mov
cmp
into
aam
pushf
add
lret
popf
and
imul
jmp
int3
test
mov
add
mov
lock
mov
test
scas
inc
mov
or
sub
mov
mov
push
mov
jmp
sub
lods
cwtl
scas
pop
dec
xchg
mov
aaa
lods
je
jno
cld
lock
inc
jl
bound
imul
pushf
pop
outsl
push
loop
and
xchg
aam
lock
mov
adc
pushf
sub
mov
in
fs
jb
pop
xchg
sub
jecxz
outsl
mov
mov
adc
insl
lret
cwtl
test
jno
in
push
insl
xchg
and
inc
xor
pop
cli
insl
xchg
shlb
xchg
sub
addr16
pusha
popf
insb
shlb
sub
inc
add
outsl
push
loop
xor
mov
scas
lahf
push
in
scas
movsl
or
aam
scas
in
inc
pusha
sub
sbb
adc
sti
jne
cwtl
in
inc
lods
sub
in
or
fidivs
subl
mov
xor
aam
call
mov
cmp
push
js
pop
lds
hlt
pop
ljmp
xor
enter
adc
sti
aad
mov
loop
repz
pop
add
inc
xor
mov
cmp
lea
mov
mov
cmp
hlt
test
insl
pop
push
push
out
hlt
sub
sub
arpl
insb
shlb
cwtl
sbb
add
xchg
mov
xchg
lahf
test
push
pushf
and
es
ljmp
fdivrl
pop
popf
insb
shlb
adc
bound
aam
fs
and
mov
dec
scas
xchg
cld
dec
push
pop
mov
jmp
mov
add
add
fs
insl
sub
aam
scas
dec
pushf
int3
aam
inc
scas
inc
adc
xchg
push
mov
hlt
or
push
popf
sub
xorl
inc
pop
in
jmp
inc
scas
or
adc
xchg
mov
add
aaa
cmp
stos
roll
cld
je
aas
mov
push
aam
xchg
mov
push
mov
jns,pt
lods
xchg
sub
sub
scas
add
cld
rol
xor
and
and
pop
loope
or
and
hlt
popa
fnstcw
xchg
ss
cmp
push
aam
cld
push
pushf
jb
dec
inc
adc
loop
or
je
lahf
in
pop
aaa
repnz
pop
jge
adc
add
inc
and
je
lret
ds
lcall
stos
fdivl
inc
jmp
jo
fwait
sub
jmp
xchg
adc
push
lcall
xchg
mov
cltd
sub
ds
lock
imul
mov
aam
in
stos
jnp
adcb
sahf
mov
stos
jo
mov
andl
add
xchg
stos
lea
out
jg
jo
ja
jle
test
jne
loopne
adc
test
icebp
iret
xor
xchg
inc
xor
mov
insb
repz
xchg
mov
mov
mov
aam
hlt
nop
xor
xor
add
out
pop
test
popa
jb
movsb
imul
cwtl
mov
cmp
movsb
cmc
outsl
test
jl
jae
pusha
dec
push
movsb
add
dec
pusha
jl
ss
pop
movsb
xchg
jns
mov
test
inc
pusha
jl
movsb
xor
cmpsl
mov
incl
repz
cmc
mov
or
flds
jl
aad
xchg
xor
jne
push
insb
movsl
add
mov
inc
and
shlb
ret
xchg
jns
cmc
or
hlt
stc
xchg
in
movsl
cmp
arpl
mov
or
pop
xchg
or
mov
test
test
js
mov
icebp
add
xor
add
inc
sub
cmp
jno
mov
and
aam
mov
mov
cwtl
fcoms
test
xchg
aad
push
and
or
pop
adc
mov
add
in
jl
mov
test
lods
in
jge
sub
cld
mov
xor
inc
sub
mov
sub
int3
pushf
mov
nop
shlb
mov
int
fisttpll
sbb
pop
adc
pusha
or
mov
or
repnz
repz
jb
mov
data16
xor
mov
daa
divl
xchg
shlb
xchg
xchg
shll
xchg
xlat
adc
mov
push
inc
push
push
adc
mov
pop
inc
pop
push
stos
ljmp
mov
mov
sub
mov
outsb
sub
mov
das
outsl
aas
mov
lcall
mov
fwait
mov
iret
lahf
fisttps
dec
sbb
or
scas
pop
cmovg
pop
mov
cmpsl
mov
sub
jne
ja
movsl
je
xor
mov
mov
outsb
js
dec
in
add
daa
jmp
aaa
mov
scas
dec
les
data16
dec
mov
jl
arpl
inc
xchg
mov
and
xchg
addr16
cmp
cld
inc
xchg
in
jecxz
je
je
xor
pop
scas
rcr
adc
popa
scas
notl
mov
insl
scas
add
das
xchg
pusha
dec
jl
je
xchg
push
mov
shlb
pop
cmpl
or
cld
rcl
mov
pop
mov
fs
pop
scas
pushf
and
mov
call
adc
adc
and
and
sub
push
jbe
aam
mov
pushf
sbb
mov
sub
cmp
bound
xchg
mov
sbb
mov
andl
hlt
pop
mov
mov
mov
and
pop
fs
add
mov
jo
pop
add
mov
jmp
and
push
movsb
in
mov
aam
mov
scas
and
scas
add
fsubrl
xor
xor
scas
sahf
mov
xor
je
inc
cmp
test
scas
cld
pushf
clc
inc
test
scas
xchg
in
inc
daa
test
mov
es
and
repnz
sub
scas
cltd
add
ret
and
and
xor
add
imul
movsb
repnz
enter
mov
push
je
loop
lods
je
fldenv
repnz
loope
hlt
fcom
fldt
icebp
xchg
jmp
mov
or
in
adc
fwait
test
mov
cwtl
aaa
fs
aam
add
out
lret
mov
mov
hlt
das
lret
pushf
cld
cmc
in
xchg
adc
xor
movsb
xor
scas
or
xchg
lret
scas
mov
add
lret
push
xor
scas
test
ret
rcrb
sub
pop
je
mov
aam
mov
cld
cmp
xorl
push
loopne
push
les
adc
jl
cmpl
hlt
clc
insb
adc
mov
adc
jne
mov
aam
movsb
sub
xor
jae
iret
in
xchg
loope
jmp
notb
push
mov
pop
jnp
in
shr
dec
paddq
mov
jne
stos
lods
arpl
sub
cmp
xchg
inc
sub
iret
and
je
lods
jne
sub
in
lods
xchg
adc
test
and
push
dec
xor
dec
or
mov
inc
xchg
jo
mov
dec
in
xchg
test
fcmovne
mov
and
outsl
dec
sarb
cltd
ljmp
clc
dec
sub
or
mov
daa
sarb
inc
mov
xor
xchg
mov
cmp
mov
adc
in
mov
pushf
shlb
mov
test
lods
and
rol
cwtl
mov
mov
mov
mov
mov
xchg
mov
xchg
xchg
stos
cltd
xchg
add
xchg
fs
dec
in
test
loopne
stc
adc
mov
pushf
imul
pop
xchg
push
push
mov
xchg
outsb
hlt
lahf
outsb
movsb
ljmp
add
add
cli
cmpsb
lcall
cmpsl
xchg
lods
popf
mov
xchg
mov
stos
mov
sub
sub
test
or
push
mov
mov
outsb
cli
xchg
mov
stos
mov
cmp
mov
test
xchg
std
dec
movsl
cwtd
movsb
adc
push
sahf
test
nop
add
jbe
gs
rolb
mov
adcb
jnp
xchg
xor
orb
aaa
sbb
int3
jbe
lods
stos
fdiv
push
daa
cmp
test
push
arpl
inc
popa
aas
inc
inc
enter
cmpsb
push
outsl
cmp
test
xor
in
test
pop
mov
cld
enter
test
pop
int3
mov
lock
pusha
xor
in
jle
mov
mov
lods
push
hlt
xorl
and
and
clc
cmp
rolb
add
xchg
inc
cmpb
push
mul
mov
lods
xchg
ljmp
add
movsl
mov
mov
xchg
bound
xchg
aam
and
cmp
and
jp
test
cmp
push
sub
pushf
test
xchg
and
mov
pushf
cmp
arpl
std
jns
lock
xchg
mov
and
and
sti
and
mov
insl
push
imul
xchg
insb
sub
in
xchg
jo
pop
mov
insb
bound
ljmp
mov
lods
sub
mov
mov
dec
inc
inc
push
inc
xor
adc
mov
aam
aas
inc
push
inc
mov
popa
dec
or
insb
xchg
dec
pushf
int3
xchg
ljmp
mov
jo
mov
mov
add
mov
hlt
mov
rorb
dec
dec
arpl
and
sub
lret
pop
adc
pushf
xchg
lods
and
cmp
pop
inc
mov
push
xor
inc
mov
adc
out
jnp
xchg
addr16
and
ds
ret
in
stos
sub
and
lcall
xor
mov
nop
and
mov
xchg
inc
pop
fildl
stos
mov
fwait
xorb
xchg
repnz
fs
scas
jo
mov
adc
test
push
xchg
les
inc
rcrl
jl
test
xchg
jbe
and
sub
ficoms
xchg
or
or
xor
ret
mov
fcoml
mov
add
mov
movsb
pop
ret
je
cwtl
jo
fdivl
test
movsb
in
jl
xor
popf
push
sub
mov
sub
clc
sbb
ret
push
pushf
push
push
mov
xchg
pop
dec
popf
and
pushf
xchg
pop
shlb
lods
test
inc
insb
add
mov
pop
outsl
in
pop
bnd
mov
in
or
push
sbb
cmp
cs
mov
dec
ds
fsubs
xchg
rclb
inc
inc
stos
test
test
dec
fdivrs
jo
dec
lods
arpl
sub
pop
in
pop
inc
push
mov
cmp
mov
nop
pushf
pop
mov
dec
push
mov
push
pusha
pop
rolb
xchg
cmpb
jno
mov
add
test
mov
mov
les
pop
cmp
cltd
movsb
push
mov
aaa
xchg
sbbl
lcall
jp
xchg
cld
jmp
rolb
mov
and
test
subl
xchg
sub
mov
nop
push
insb
lcall
fdivrl
or
inc
out
in
into
dec
ret
pop
ss
mov
cmp
mov
mov
cld
jae
dec
cmp
dec
push
loopne
not
filds
call
imul
jb
push
in
xchg
repz
outsb
mov
mov
gs
std
add
jns
jl
xor
dec
jecxz
test
or
aas
inc
jo
inc
inc
dec
push
cmp
pushf
in
stos
fsts
inc
vpsubsw
and
dec
movsb
lret
into
xchg
pop
pop
cmp
outsb
addr16
pop
push
inc
cmp
repnz
inc
dec
push
jo
push
dec
push
out
les
enter
sbb
stos
clc
enter
jb
and
jp
or
push
xchg
adc
cmpsb
cmp
shrl
nop
imul
pop
movsb
mov
outsl
cmp
mov
cmp
dec
cmp
popa
lods
cwtl
lret
loope
clc
in
adc
dec
pop
mov
fs
movsb
cmp
jb
push
stos
ss
arpl
js
movsb
loop
mov
ljmp
cmp
pop
jno
aam
aas
inc
sarl
mov
ret
daa
and
sbb
sub
int3
popf
xor
mov
sub
movsb
loopne
mov
lret
test
mov
sarb
outsl
sti
mov
arpl
lods
in
call
mov
insb
lret
mov
adc
popf
push
lds
stos
imul
stos
mov
add
mov
mov
jl
andb
das
rcrb
insb
adc
cltd
data16
ret
sub
ret
sub
sbb
shll
fidivrs
cmp
pushf
xchg
xchg
stc
outsb
dec
cld
mov
sub
hlt
in
and
insb
jmp
fiadds
pop
cmp
movsb
out
leave
xor
adc
jl
je
xor
pushf
sbb
or
adc
clc
ret
les
in
sbb
pop
inc
sub
pop
xor
fadds
popl
cli
xor
je
dec
push
add
incl
push
or
xchg
nop
or
hlt
enter
xchg
inc
les
push
mov
aad
dec
in
xor
shll
jge
or
mov
in
xchg
jae
inc
test
sbb
scas
fs
dec
ds
inc
push
js
sub
pop
sub
add
push
test
mov
cmp
fcmovnu
pusha
jbe
stos
jb
mov
dec
jbe,pn
mov
jbe,pn
dec
outsb
pop
test
adc
sub
loope
add
jl
adc
sbb
cmp
mov
sbb
mov
inc
and
sbb
adcl
dec
in
es
jp
mov
jns
mov
lss
popf
sub
outsl
insb
inc
push
ret
inc
adc
xor
fnstcw
pop
sub
outsl
xor
clc
jecxz
movsb
ss
mov
outsl
insl
or
xchg
jne
xchg
lcall
or
notl
sahf
dec
dec
ds
mov
nop
mov
ret
arpl
add
es
popa
mov
sahf
push
ret
in
xor
xchg
js
in
push
dec
push
adc
std
sbb
jmp
cwtl
divb
pusha
and
sbb
jge
movsl
mov
movsb
rclb
insb
jae
clc
inc
movsl
lcall
or
out
lock
test
rclb
xchg
inc
in
sub
and
cmp
in
jmp
xchg
push
outsb
cmpsb
scas
fisubrs
lods
push
or
add
xor
mov
fxch
je
pop
cmp
out
in
push
xchg
test
mov
mov
cli
mov
insb
xor
or
mov
lock
or
or
cmc
lock
aam
mov
imul
or
aaa
jl
or
cld
lods
xchg
fsubr
test
pop
inc
jp
jmp
cmc
iret
pushf
jno
jo
mov
inc
lock
lcall
add
lods
jno
bound
and
insl
sub
sub
cmp
pop
sub
mov
or
adc
addr16
push
repz
pop
mov
sahf
jmp
sti
push
hlt
fmull
std
push
popf
dec
jb
inc
pop
cmp
pop
mov
iret
or
leave
xchg
mov
lock
or
mov
dec
cld
dec
sub
or
lahf
push
push
push
or
inc
and
mov
push
jbe
adc
sub
cwtl
xor
sbb
inc
push
add
push
out
adc
lock
outsl
adc
in
movsb
inc
and
adc
fsubs
js
push
add
mov
stos
jno
addr16
cld
jae
movsl
mov
push
pop
incb
adc
mov
dec
js
out
cmp
cmpb
cmpl
stos
sbb
lods
xchg
push
lods
lods
out
mov
fs
xchg
lods
aad
inc
lods
xchg
aaa
jp
insl
nop
fs
jp
lods
js
cmp
push
and
test
stos
adc
popf
jae
lea
or
and
sub
mov
nop
lods
aam
or
and
jo
pushf
scas
outsl
lods
mov
xchg
stos
mov
sbb
mov
xchg
aam
mov
inc
js
and
or
dec
aam
mov
pshufw
and
imul
call
cmp
cld
jmp
gs
mov
lods
jo
adc
fsubs
xchg
shrb
sub
push
mov
add
jmp
pop
xor
inc
push
dec
push
pop
pop
xchg
mov
mov
pushf
add
pop
bound
fs
or
mov
bound
jno
jl
sub
jb
inc
dec
dec
xor
imul
jns
test
nop
xchg
pop
jo
xchg
mov
mov
movsb
lret
and
xchg
test
rolb
fs
int3
dec
inc
insb
inc
and
xorl
shrb
mov
nop
jmp
jecxz
repz
mov
mov
sub
xchg
mov
adc
pop
fsubrp
das
push
dec
dec
mov
insl
jb
inc
jp
aaa
les
sub
imul
dec
push
icebp
cmp
mov
jb
jno,pt
cmp
mov
dec
cmp
lods
sub
in
add
push
or
sahf
rcl
and
leave
push
cmpl
in
movsb
add
ficomps
sub
sub
clc
sub
inc
je
fstl
popa
pop
jl
outsl
sub
data16
pushf
insl
hlt
add
or
popf
and
cmpsb
loope
repnz
movl
xchg
add
xchg
aas
xor
push
negb
push
mov
mov
jp
mov
jnp
mov
sub
lods
nop
jg
xchg
and
je
jle
and
add
push
lods
mov
lock
in
in
mov
fcompl
test
repnz
pop
jl
pop
lods
cwtl
push
mov
nop
out
sub
push
mov
mov
and
mov
mov
xchg
add
stos
jp
mov
jo
dec
lods
cmp
iret
cltd
xchg
dec
add
pop
nop
sbb
sub
outsb
dec
inc
lods
pop
mov
sbb
shlb
movsb
fwait
jle
sbbb
nop
hlt
insb
aam
imul
je
test
jae
adc
mov
inc
and
jno
cld
icebp
inc
xor
inc
xor
into
in
mov
mov
orl
xor
jmp
je
dec
scas
test
popa
test
xor
dec
movsl
fcomip
sub
add
adc
mov
stos
dec
jo
sbb
adc
mov
fdivl
gs
mov
ja
dec
xor
dec
inc
mov
insb
arpl
sbb
mov
xor
and
cmpl
pusha
sub
int
mov
or
loop
sbb
add
and
mov
or
daa
and
test
cltd
dec
int3
test
lods
xor
cwtl
lods
mov
xor
dec
test
dec
jns
pusha
jg
cmp
sub
fildl
pop
pusha
inc
mov
mov
fcoms
dec
xchg
popa
loopne
data16
jo
inc
in
data16
sarb
outsl
inc
aas
push
pop
push
cmpsl
dec
mov
data16
sub
sbbl
lea
ds
aam
jl
xchg
add
js
js
xorb
stos
mov
stos
jo
adc
jae
stos
or
scas
stos
stos
mov
stos
or
xchg
sub
pop
xchg
jl
les
cmp
sbb
leave
xchg
jae
jo
adc
fistpl
jbe
stos
and
fisttps
xchg
mov
push
jl
jl
cld
mov
sbb
fs
iret
gs
rdmsr
mov
loopne
cmp
lods
inc
les
enter
into
jg
int3
mov
pop
jno
popa
imul
subl
jne
popf
jb
jbe
cmc
inc
inc
inc
push
mov
popa
inc
enter
fs
ds
push
push
test
inc
dec
pop
pop
jo
and
dec
jb
mov
cmc
fisubl
pop
stos
xor
adc
mov
and
clc
or
cli
and
push
mov
outsl
repnz
push
into
pop
or
mov
mov
inc
mov
pushf
xchg
pushf
pop
jg
cmp
dec
ret
adc
jle
xor
dec
push
aas
dec
aaa
inc
and
pusha
inc
adc
sub
stos
fisubl
adc
jl
cmpl
adc
xlat
mov
mov
cmp
int3
sub
outsl
push
je
inc
add
xchg
adc
movsb
sti
xorb
nop
adc
cli
lods
xchg
and
pusha
jo
or
xchg
mov
out
fsubrs
stc
jl
jl
cmp
lock
cli
cwtl
or
ljmp
push
nop
xchg
nop
sarb
adc
ret
pushf
pop
or
call
push
lods
jo
lods
je
xchg
in
stos
mov
and
mov
mov
dec
lret
push
loop
test
pop
rep
mov
lock
out
inc
sub
movsb
movsl
loop
push
loope
mov
pushf
pop
fildll
int3
push
dec
sbb
or
lret
pop
mov
scas
and
inc
in
sbb
scas
push
mov
test
mov
stos
jge
mov
in
cmp
movsl
lods
sbb
add
sub
inc
ds
gs
adc
movl
push
pop
mov
movsb
xchg
inc
dec
sahf
jae
mov
push
sub
outsb
js
push
add
pushf
nop
xor
push
pop
xchg
pusha
xor
insb
jo
inc
cmp
je
js
andb
cmp
jo
adc
stos
andb
inc
sbb
pop
dec
rcll
cmpsl
sub
stos
imul
xchg
mov
add
js
jae
mov
movsb
nop
xchg
imul
jl
or
test
gs
ljmp
lret
mov
sub
push
cmp
insb
outsl
mulb
mov
jno
pusha
imul
pop
aas
mov
subb
sub
cmp
loopne
inc
jle
pop
hlt
cmp
and
scas
mov
insl
xchg
jae
mov
addl
and
retw
push
js
clc
jbe
cmp
cwtl
dec
mov
xchg
jge
jb
inc
cmp
dec
mov
decl
ret
dec
pop
mov
cmp
sbb
pop
jae
push
pop
jl
jg
inc
cs
pop
ds
mov
dec
ss
jmp
fwait
mov
pop
iret
cmp
cli
test
movsl
lods
ret
cwtl
push
sbbl
sbb
inc
mov
in
push
sbb
iret
mov
push
xor
push
lcall
xchg
popl
inc
enter
outsl
xchg
push
dec
cmp
cli
arpl
add
mov
outsl
cmpsb
mov
jb
sbb
test
jnp
fs
xchg
pop
jb
dec
inc
movsb
inc
push
sub
outsl
aas
adc
push
je
dec
adc
mov
data16
in
sahf
jns
add
xor
addr16
pop
push
rorb
jno
mov
dec
mov
stos
push
push
popf
outsl
jo
dec
xchg
nop
fs
fistpll
sub
js
adc
add
push
hlt
hlt
ss
jae
mov
das
lock
push
int
push
mov
cmp
mov
les
mov
repnz
xchg
adc
movsl
jmp
je
pushf
sbb
xor
mov
sbb
lods
and
xor
inc
in
stos
addl
dec
arpl
int
mov
and
mov
shlb
jne
pop
mov
dec
call
fcomps
inc
jle
mov
faddl
testb
lods
outsl
movsb
adc
mov
imul
test
imul
mov
enter
mov
ret
and
lods
push
stos
stc
mov
lods
pushf
clc
ret
xchg
movsb
mov
xchg
pushf
pop
mov
test
lods
out
shlb
pushf
in
cmp
ss
mov
xlat
pop
xchg
fsubl
fmull
mov
leave
mov
mov
and
scas
sub
lea
xchg
xchg
mov
lods
lods
mov
icebp
mov
in
xchg
in
rcl
insb
cwtl
push
dec
pushl
cmp
mov
sarl
movsl
in
movsl
push
mov
orb
sbb
mov
and
sub
lods
sbb
inc
push
push
out
adc
test
mov
adc
mov
and
test
out
adc
pop
xor
adc
mov
push
jmp
pusha
pop
adc
push
jae
imul
pusha
mov
sahf
or
shll
subl
mov
inc
pop
lret
mov
stos
adcl
in
imul
popa
xor
aam
mov
push
lret
and
and
lods
shlb
inc
fucomi
xchg
mov
xchg
jle
cld
jo
shld
inc
pop
ds
dec
movsl
sub
outsl
push
mov
xchg
fbstp
push
xchg
mov
outsb
xchg
movsb
xor
insl
cltd
in
sahf
mov
int
lods
les
fs
movsl
jae
out
testl
rcr
mov
jp
xchg
in
pop
push
adc
out
pop
movsb
and
jmp
rcrl
iret
mov
cmp
mov
inc
test
mov
and
ret
mov
dec
fldcw
out
insb
xchg
js
pushl
ret
lds
add
fwait
cmp
add
fs
jae
arpl
mov
jae
cmc
jne,pn
cmp
insb
jle
pop
test
push
push
nop
je
jl
jb
repz
mov
fs
clc
push
add
xor
shll
imul
pop
jecxz
xor
mov
data16
fs
dec
popa
adc
mov
push
pushf
outsl
mov
pushf
xlat
xchg
mov
ss
ret
and
mov
jne
stos
mov
ss
ret
and
mov
jne
sub
mov
lahf
ss
ret
and
mov
jne
cltd
stos
add
test
inc
adc
mov
mov
in
mov
jno
ret
pop
lods
or
xor
test
sarl
shlb
movsb
add
es
call
shlb
mov
jo
mov
rorb
mov
mov
call
pop
mov
jb
clc
sbb
adc
popa
add
mov
aam
fsubr
or
les
mov
das
mov
jbe
xchg
mov
je
dec
dec
sub
popa
xchg
add
fsubr
xchg
mov
adc
dec
jl
les
xchg
in
out
aam
fs
les
mov
pushf
out
in
out
xor
sbb
dec
insl
xor
jo
and
and
enter
in
mov
aam
mov
cld
pop
dec
sub
in
lods
xchg
les
xchg
jo
insb
mov
inc
cltd
in
sub
scas
jo
jle
dec
pop
aam
hlt
dec
jl
sub
cwtl
int3
or
je
push
cmp
mov
pop
in
rclb
xor
push
pushf
rcrl
stos
rolb
pop
xor
push
push
les
mov
xchg
sbb
repnz
xchg
mov
call
sub
mov
or
dec
js
jo
in
jl
in
aam
xor
inc
cmp
push
pushf
adc
popa
insb
mov
roll
shrb
pop
xor
push
rolb
aam
in
ret
xor
lods
loope
je
faddl
loope
xchg
jo
pop
mov
xchg
xor
pop
pop
sbb
in
mov
and
pop
enter
les
loopne
mov
pop
faddl
and
mov
sub
ret
xor
push
mov
loopne
int3
fisubl
movsb
jbe
in
test
int3
cld
insb
insl
fbld
mov
insb
fs
sbb
mov
or
mov
fs
and
scas
clc
int3
out
in
push
cmp
scas
sub
fidivrs
pusha
xchg
push
mov
push
inc
fs
inc
sbb
sbb
insl
add
jo
push
mov
int3
jge
xchg
fucomp
jo
loope
mov
cmpb
xchg
mov
fs
mov
insb
mov
sub
stc
pop
inc
adc
fs
add
mov
fmull
jo
push
mov
mov
insl
fsubl
mov
or
je
in
inc
jbe
andl
sub
fisubrl
aam
pop
and
pop
push
or
and
mov
je
pop
and
mov
mov
add
fs
hlt
push
mov
cmp
jae
in
dec
out
fcmovb
cmpsb
jo
mov
jl
movsb
dec
fs
fs
push
sbb
sub
jae
mov
pop
je
cld
fidivrl
xchg
mov
fadds
mov
pop
movsb
fldenv
xchg
mov
sub
mov
fisubrl
int3
inc
mov
flds
fs
mov
mov
xchg
fxch
movsl
in
fadd
xor
mov
cmp
pop
fs
push
push
mov
sub
and
stos
jo
mov
fsubl
rol
aaa
lods
jo
xlat
or
adc
xlat
sub
shll
je
pop
push
mov
xor
jle
rcrb
xor
addr16
jl
enter
cld
int3
pop
push
adc
test
add
pop
aas
in
sub
xchg
jl
adc
int
dec
cmp
push
push
stos
insb
insb
test
xchg
aad
ret
and
add
enter
mov
in
dec
int3
jmp
mov
rcrl
movsl
das
test
jbe
mov
mov
fs
jl
enter
xor
pushf
adc
popa
sbb
mov
fdiv
aad
je
pop
fsubl
mov
mov
movsl
hlt
lock
lcall
hlt
outsl
cmpsl
mov
xor
out
int3
fisubrl
cmp
cmp
incl
jo
mov
mov
and
jo
mov
dec
lahf
sub
add
scas
js
andb
rcr
insl
int3
in
mov
fmull
dec
mov
shrb
insb
int3
mov
push
sti
xchg
sub
or
adc
dec
jo
in
ljmp
movsb
rcll
mov
dec
cmp
mov
push
jp
insb
insb
test
mov
cmp
dec
je
sub
mov
cld
cmp
cmp
in
jp
add
jns
bound
aam
fisubrl
int3
adc
cmp
shl
push
cmp
mov
and
pop
and
enter
movsl
in
cld
mov
mov
or
lods
je
les
xor
push
push
pop
jo
aam
xchg
inc
int3
jo
xor
out
lods
cmp
xchg
or
fdivl
pop
hlt
fs
mov
mov
cmp
dec
add
cld
xor
sbb
push
or
jo
sbb
fdivl
jo
add
movsl
sub
mov
mov
movsb
int
and
test
mov
cmp
pop
inc
push
mov
and
dec
je
adc
mov
inc
in
pop
jl
push
fsubl
cmpl
aaa
and
mov
jno
rorl
popa
shlb
dec
xor
addr16
dec
int3
enter
scas
push
dec
in
cld
imul
int3
cmp
pusha
lods
lret
incb
dec
iret
adc
insb
lret
and
mov
mov
sbb
mov
mov
adc
popf
and
shrb
add
test
mov
lret
stos
in
sbb
loopne
mov
test
outsl
sub
mov
add
in
and
mov
ror
mov
enter
inc
and
mov
insb
inc
xchg
and
adc
pushf
pop
cmp
iret
add
mov
shl
js
daa
rol
inc
mov
and
xchg
jae
subl
movsb
jecxz
pop
movsb
push
sub
pcmpeqb
insb
adc
mov
mov
lock
enter
and
mov
lock
hlt
enter
fs
push
pop
nop
or
les
in
inc
sarb
mov
stos
in
in
jl
pop
jno
jecxz
adc
imul
mov
xor
fldcw
daa
int3
aam
iret
dec
mov
imul
cmpl
mov
jl
pusha
lcall
and
dec
je
push
xor
ret
push
mov
jl
and
mov
in
daa
iret
add
push
cld
jnp
pop
adc
sub
mov
cmp
pushf
lds
movsb
and
test
outsl
test
mov
jno
xchg
arpl
inc
pushf
ljmp
sub
stos
js
popa
adc
cld
hlt
mov
aam
jno
lock
les
jno
sub
jno
in
pop
insl
je
mov
xor
push
mov
test
pop
and
xor
jo
fsubl
rolb
lods
xchg
cld
and
or
pop
pushf
ret
daa
lock
test
je
mov
lods
lock
and
nop
mov
fwait
rclb
push
mov
push
mov
xor
xor
test
jo
les
iret
adc
mov
mov
adc
cmp
sbb
lahf
hlt
ljmp
mov
mov
pop
and
sbb
xor
add
ret
js
jb
fs
stos
rcr
ret
pop
xor
xchg
mov
mov
sar
insb
pop
inc
rolb
lods
sbb
aam
push
test
add
pop
hlt
shrb
mov
in
in
mov
mov
movsb
dec
mov
test
shr
sub
xchg
xchg
push
pop
xchg
lods
rolb
lods
jl
fmuls
push
dec
mov
mov
jl
sbb
rol
hlt
sbb
test
insb
in
insl
add
cld
dec
and
movsb
in
jmp
insb
add
and
push
jl
mov
push
decb
sub
je
lods
insb
nop
mov
mov
add
inc
xor
mov
test
and
mov
test
add
and
je
faddl
les
mov
int3
gs
mov
pop
outsb
jp
js
bound
bound
in
popa
test
and
cmp
ret
xorl
pop
mov
and
inc
ret
in
adc
push
subb
les
adc
pop
xchg
aam
pop
mov
mov
pop
out
int3
inc
add
insb
sbb
sbb
jl
sub
das
bnd
lahf
repnz
mov
push
cwtl
pop
sbb
ret
sbb
mov
outsl
xor
lods
sub
lock
sbb
push
and
lods
outsb
mov
jmp
aam
sub
sub
sub
sub
je
insb
shlb
push
sbb
mov
scas
sub
mov
lods
push
adc
int3
inc
mov
std
xor
insb
inc
inc
jno
sub
jno
in
sbb
jno
in
hlt
jno
in
int3
insl
xor
sub
mov
test
ret
jle
mov
and
in
mov
insb
pop
aam
leave
ret
xorl
int3
aaa
ret
mov
xchg
movsb
dec
mov
cwtl
je
je
insb
stos
adc
mov
dec
es
mov
mov
ret
mov
cmp
pop
hlt
xor
in
lods
dec
in
cld
add
jl
les
push
test
ret
movsb
pop
mov
js
push
mov
daa
repnz
xchg
daa
mov
fs
pop
imul
jl
xchg
insb
inc
insl
xor
sub
push
jb
js
imul
add
mov
scas
and
xchg
lods
jo
lods
sub
movsl
arpl
sub
insb
jbe
cmpsb
xchg
push
call
xchg
jo,pt
xor
mov
insb
adc
lahf
xchg
push
jo
clc
sub
insb
fsubl
fwait
xchg
into
jo
shrb
mov
test
xchg
xchg
outsl
xchg
loop
mov
jp
mov
fnstcw
es
test
xor
mov
adc
aam
nop
xor
ljmp
sub
aam
in
sub
mov
in
pushf
sub
mov
sub
fs
push
sub
dec
sub
cmp
sub
adc
sub
out
in
fsubrs
sub
scas
adc
rolb
rolb
rorb
mov
ret
mov
adc
pop
mov
and
sbb
jb
insb
shr
mov
add
gs
push
adc
xchg
mov
push
data16
fsubrs
lods
call
nop
imul
aam
jl
std
xor
les
lods
lods
inc
add
pushf
adc
je
test
dec
sub
insl
fs
pop
sub
lods
dec
imul
xchg
les
adc
mov
sub
es
dec
sub
insb
adc
test
sbb
loopne
pusha
mov
mov
sub
xchg
adc
nop
les
mov
sub
int
sub
cmp
push
lods
xchg
fsts
or
add
mov
dec
cld
dec
dec
xchg
stos
jg
sub
inc
push
je
xor
cmpsl
nop
pop
insb
cmpsb
and
xchg
movsl
bound
jl
test
sub
insb
jmp
mov
inc
mov
mov
je
jge
cmp
and
mov
jle
xorb
xchg
pop
jl
pop
insb
jo
inc
cmp
mov
push
sbb
adc
out
js
outsb
js
pop
out
outsb
dec
add
adc
mov
mov
mov
dec
je
in
mov
pushf
mov
fdivrl
add
fwait
jl
push
inc
mov
xor
mov
scas
sub
lods
nop
or
call
xor
and
cmp
aam
les
mov
insb
scas
pop
fmull
mov
lahf
hlt
sub
imul
push
push
test
add
addb
int3
lahf
inc
jl
in
sub
pop
xchg
jl
cld
gs
rcr
mov
je
popa
aam
js
pop
es
test
scas
or
addr16
mov
cltd
in
je
pop
cltd
in
push
shlb
sub
test
push
pop
outsb
add
add
lods
mov
in
fcoml
popa
shrl
xchg
mov
mov
xchg
movsl
xchg
xchg
lcall
fsubl
add
fs
and
and
adc
or
cwtl
stos
sub
mov
iret
xor
test
inc
int3
in
mov
cmp
fmull
les
cmp
sub
mov
xchg
loopne
pop
or
fs
inc
jecxz
sbb
inc
mov
add
push
xor
jge
movsb
or
mov
addl
or
insl
sti
je
in
fs
push
xor
es
ss
gs
jge
add
cmp
and
sbb
dec
decb
shlb
sbbl
insb
or
test
mov
or
adc
and
cmp
push
mov
movsb
and
dec
add
and
mov
cmp
and
ret
sub
or
cltd
in
test
mov
les
mov
lods
test
movsb
sahf
or
sub
xchg
test
push
or
xchg
fs
inc
push
je
xor
int3
and
pushf
dec
sbb
mov
lods
or
int3
mov
pop
hlt
or
sbb
pop
int3
mov
dec
mov
pushf
cmpsl
inc
movsb
or
cmp
adc
dec
test
fs
inc
push
xor
cmp
xchg
xor
es
mov
cmpsl
js
jb
add
stos
shll
mov
xchg
je
xchg
pop
xchg
inc
in
ret
sub
rolb
cwtl
cld
das
rol
mov
in
shlb
xchg
movsb
pop
shll
cmpsb
pop
test
into
push
adc
dec
movsl
inc
test
sbb
pop
jl
cld
push
cld
jb
ret
pop
pushf
jb
movsl
outsl
cmp
cmp
cwtl
cmp
cmp
sub
or
es
jmp
sub
jl
les
out
outsb
mov
movsb
push
insb
push
pushf
ret
push
mov
test
test
mov
jl
sub
ror
mov
mov
insl
dec
xchg
mov
insb
test
xor
mov
ret
outsb
sbb
hlt
xchg
mov
int3
cltd
fsubs
mov
pop
mov
add
push
mov
dec
cmp
jb
ret
outsb
insb
ret
xor
jns
adc
aam
mov
mov
dec
xchg
xchg
ds
sbb
rolb
push
sbb
rolb
dec
cld
sub
icebp
sub
out
inc
and
fisttpl
sub
xchg
scas
add
mov
cmp
sub
sub
sub
cmp
sub
sub
or
cmp
adc
andl
sbbl
orl
not
sub
mov
xchg
sub
insb
shlb
xchg
mov
mov
lahf
insb
mov
xchg
xchg
mov
mov
jle
in
and
mov
xchg
pop
mov
test
inc
xchg
test
subl
lahf
cld
pushf
sub
mov
add
pushf
repz
pushf
in
pushf
xlat
ret
pushf
leave
ret
pushf
mov
pushf
lahf
ret
pushf
xchg
ret
pushf
add
jne
pushf
addr16
pushf
pop
ret
pushf
dec
ret
pushf
cmp
pushf
and
pushf
adc
pushf
add
pushf
jmp
pushf
int
movsb
sub
int3
in
test
in
xchg
sub
mov
pop
in
add
outsb
mov
push
stos
sahf
inc
lods
lock
mov
jl
hlt
es
jmp
fisubs
mov
add
aam
sub
sub
je
xchg
mov
push
movsl
xchg
cmp
movsl
cmp
shl
js
daa
rcl
inc
xchg
nop
les
imul
xor
sbb
xchg
xchg
xchg
xchg
xchg
mov
in
jb
in
addr16
pop
sub
push
sub
inc
sub
cmp
sub
sbb
subb
jecxz
pop
popa
fmuls
cmp
ret
mov
shrb
add
xchg
rolb
in
mov
ret
push
push
mov
in
pop
sub
js
jno
js
imul
and
in
movsb
lahf
dec
mov
add
pop
insl
cld
xchg
mov
sbb
in
test
lahf
adc
aam
push
inc
outsb
fdivrl
lock
test
addb
insl
jns
outsb
jo
arpl
popa
pop
pushf
mov
and
in
mov
inc
and
sbb
push
adc
pushf
js
shll
std
pop
mov
mov
popa
aam
mov
test
cltd
fcomp
lret
mov
and
ret
and
movb
cmp
sub
pusha
movsb
popa
xor
mov
int3
inc
xchg
adc
or
mov
pushf
cwtl
fsubs
mov
je
popa
aam
ljmp
pop
clc
pop
in
aaa
ret
mov
aam
movsb
xchg
sub
mov
insb
fisubrs
mov
insb
out
or
sti
mov
cld
inc
fwait
pop
sub
push
push
adc
adc
mov
pop
je
hlt
aam
in
inc
loope
adc
xor
add
push
mov
ret
movsb
cli
cmpsb
xchg
in
test
mov
or
xchg
and
mov
in
int3
xor
mov
dec
pop
dec
out
pop
andb
mov
xchg
aaa
mov
xor
inc
es
cmp
mov
xor
jp
xor
movsb
adc
and
sub
jo
xchg
cmp
xchg
cmp
xchg
sub
das
lock
je
insb
pop
xchg
sbb
shrb
mov
js
xchg
lcall
adc
in
ret
push
xchg
daa
dec
repnz
js
ss
repnz
mov
das
lock
outsl
xor
test
cwtl
push
les
jne
int3
inc
inc
into
subl
out
movsb
stc
mov
sub
pop
mov
in
subl
xor
xchg
xchg
stc
shlb
inc
xor
shrb
and
and
xchg
xchg
adc
mov
add
dec
jmp
or
sbb
inc
mov
and
clc
and
clc
adc
jl
in
mov
push
cltd
jmp
jnp
mov
cmp
clc
sub
outsb
clc
js
jno
int3
jno
arpl
cmp
in
je
insl
and
sbb
mov
inc
cmp
cld
sub
out
cmp
lcall
mov
js
rorb
mov
mov
inc
je
sub
cwtl
mov
dec
cltd
ljmp
and
sbb
dec
xchg
or
add
mov
xchg
mov
sub
jge
movsb
idivb
in
lods
push
xchg
arpl
jl
bound
xor
insl
push
sub
jge
sub
out
sub
sti
or
and
enter
pushf
in
mov
add
stc
lods
in
adc
or
sti
loopne
cmp
shr
add
xchg
inc
mov
rorb
testb
ja
xchg
mov
mov
lock
cmc
adc
add
xchg
lea
lock
je
scas
in
hlt
xor
adc
sub
and
mov
push
sub
xchg
in
add
js
push
int3
sub
mov
lods
in
mov
imul
cmpl
mov
mov
push
lahf
lock
mov
jne
and
mov
cmp
outsb
mov
and
pushf
sbb
jne
mov
test
add
stc
mov
add
mov
fdiv
jo
jnp
repz
mov
lods
test
xchg
jl
mov
sub
xchg
jl
xor
dec
sub
jo
adc
iret
adc
mov
daa
shl
cmp
aam
xor
int3
cld
mov
lods
and
jl
jl
mov
xchg
repnz
mov
test
dec
clc
je
jno
in
sbb
insl
push
xchg
dec
and
imul
outsl
scas
rorl
push
jmp
lods
xchg
shll
enter
mov
ret
movsb
icebp
pushf
pushf
ret
pushf
xchg
ret
movsb
js
outsb
js
outsb
js
imul
fisubrs
xchg
cmp
xor
rcrb
inc
or
movsb
cld
push
out
mov
sub
jno
lock
mov
mov
cmp
int3
mov
xor
lods
mov
xor
adc
pushf
or
and
hlt
lock
or
dec
test
aam
in
and
aam
clc
mov
jg
and
mov
dec
test
xchg
jno
in
jl
insl
xor
mov
push
mov
cmp
sbb
sub
push
jb
sub
mov
push
scas
push
pop
hlt
sub
hlt
and
hlt
cmp
repnz
movsb
out
inc
insb
cltd
in
test
mov
inc
outsl
fs
pop
push
test
ret
cmp
sub
in
and
mov
mov
cld
subb
lock
leave
push
test
mov
out
and
xchg
in
data16
mov
push
xchg
inc
subl
push
mov
lahf
dec
xor
add
in
lods
sub
sub
sub
xor
pop
cld
dec
sub
sbb
or
mov
movsb
test
jl
hlt
daa
shl
inc
scas
int3
dec
mov
xor
rcrl
pushf
js
imul
shll
insb
ret
pushf
popa
ret
pushf
push
es
inc
xchg
aaa
and
in
sbb
dec
hlt
jge
cmp
in
mov
jl
outsl
jmp
les
pop
add
outsb
jmp
cmpsb
outsb
mov
test
jp
adc
sbbl
sub
add
jnp
shl
in
dec
cld
dec
test
rcl
push
cmp
andb
lods
ljmp
test
inc
mov
jnp
cwtl
mov
and
in
push
rorb
push
in
pop
jl
and
sbb
adc
movsb
push
gs
lods
jg
in
flds
test
insl
les
jmp
shll
jmp
pushf
test
retw
ss
lcall
mov
sbb
mov
and
cltd
xor
shll
das
add
shll
popa
ljmp
in
hlt
movsb
call
jle
xchg
jge
xchg
test
xchg
jns
inc
lds
push
movsb
jo
popa
sub
bound
rcrl
xchg
mov
dec
jge
mov
cmpsb
mov
pop
and
or
es
or
xchg
push
rcll
mov
lods
test
in
lea
sub
mov
jl
sahf
push
out
and
out
inc
cmpb
inc
xchg
and
sbb
or
in
clc
insl
cmp
ret
xchg
sarb
cmp
sub
mov
sbb
aam
pop
sbb
orl
mov
jnp
and
out
or
hlt
push
inc
jo
mov
in
sub
ret
xchg
mov
je
les
mov
ret
movsb
in
xchg
in
cmp
cwtl
scas
sub
jp
lock
pop
sub
lods
xor
jo
mov
and
mov
sbb
push
add
push
pop
mov
mov
pop
cmp
in
cwtl
xor
mov
rcl
jge
mov
add
xor
pop
inc
sub
in
test
cmpsl
sub
jns
mov
push
fmul
lock
ret
sti
mov
jle
js
outsb
js
outsb
mov
xchg
jl
jno
and
and
call
jns
insb
mov
inc
sub
js
popa
adc
xchg
xchg
ret
lods
mov
push
or
rcll
andl
es
pushf
xchg
xchg
and
inc
gs
cwtl
cmp
loop
inc
and
ljmp
jnp
push
lea
jecxz
in
sbb
not
in
insb
cwtl
and
fmuls
insb
mov
lods
insl
jle
jae
xchg
push
xor
lret
lods
and
in
mov
loopne
in
mov
mov
push
sbb
shll
in
aam
insl
in
dec
lods
push
jbe
clc
loop
orl
or
rcrb
inc
jg
sub
dec
mov
mov
mov
pop
mov
mov
dec
in
inc
int
sub
cwtl
mov
push
push
and
sbb
adc
hlt
mov
es
test
mov
aam
in
int3
iret
les
mov
pop
mov
insb
ficoms
adc
daa
shl
inc
subb
mov
push
and
xchg
dec
cmp
sub
je
sub
pop
mov
insb
fs
pop
in
xchg
fdivl
aam
and
int3
adc
les
adc
lock
fists
sbb
mov
je
lods
mov
mov
popa
push
push
xchg
dec
and
and
xor
pusha
shrb
or
xor
add
jnp
cwtl
in
or
repz
lcall
jb
mov
jl
dec
push
xor
push
xchg
mov
dec
test
adc
and
adc
jl
insl
in
fsubl
aam
in
sahf
jl
aam
je
lods
fucomp
lods
sub
add
mov
cwtl
jl
mov
inc
push
push
pop
pop
sbb
sbb
adc
lods
or
je
cld
clc
hlt
es
in
mov
movsb
push
faddl
clc
frstor
int3
in
jo
lods
out
xchg
push
js
sub
jo
push
jae
loopne
mov
es
mov
je
mov
in
jge
push
je
inc
ret
xchg
je
mov
xchg
adc
adc
mov
jl
daa
out
in
mov
les
daa
shlb
mov
test
aam
and
movb
outsb
rolb
lahf
int3
fs
xchg
clc
outsb
js
imul
jnp
cwtl
out
mov
xchg
adc
push
in
pop
or
add
test
daa
sarb
jns
jo
insl
inc
xchg
push
and
cmp
inc
insb
js
add
xor
shll
and
hlt
es
in
lods
mov
inc
and
in
aam
hlt
cltd
fcomps
pop
insl
in
and
fincstp
lahf
sub
pushf
mov
dec
movsl
lock
mov
fcoms
je
sbb
sub
xchg
test
negl
xor
pop
sbb
add
outsb
mov
lock
mov
xchg
mov
jge
nop
fsubr
cwtl
sub
sub
in
insb
rclb
cld
daa
rolb
sub
jnp
mov
out
and
xchg
push
insb
adc
movsl
ja
mov
scas
sub
push
hlt
pop
stos
jl
pushf
mov
sbb
enter
xchg
insb
cmp
xchg
in
aam
and
dec
pop
mov
aam
dec
push
int3
lea
in
test
aam
jl
sub
sub
sub
movsl
xchg
insb
cmp
xchg
inc
cmp
movsl
xchg
hlt
cmp
movsl
cmp
shr
xchg
outsb
jl
fcoms
xchg
outsb
sub
mov
inc
and
inc
jne
lods
and
mov
inc
mov
or
call
je
mov
or
pop
xchg
test
arpl
pop
fwait
dec
sbb
fisubs
fcmovnu
mov
aam
les
pop
or
fisubrl
das
push
mov
xor
rclb
out
arpl
xlat
jl
cld
daa
shlb
aam
jno
mov
lock
int
jl
daa
lock
mov
push
dec
mov
jge
js
pop
mov
dec
jl
shl
fs
xchg
lock
int3
loop
pop
in
arpl
aam
les
jo
mov
sarb
add
cmp
movsl
xchg
in
cmp
les
pop
movsl
mov
sub
es
dec
daa
rcrb
test
adc
and
mov
jl
clc
xorb
nop
les
shlb
enter
inc
movsb
mov
shrb
and
mov
scas
test
mov
iret
push
iret
push
js
les
mov
pusha
sti
movsb
mov
xor
scas
push
subps
pop
sub
mov
iret
cmp
test
ret
test
fmull
ret
cld
shrl
lahf
pop
mov
sub
fs
shrb
jnp
mov
mov
or
and
ret
and
ret
and
mov
clc
shrb
loopne
cmp
jmp
jnp
shlb
les
lea
dec
or
mov
lods
rclb
lock
fwait
lock
test
sub
movsl
xchg
inc
cmp
sbb
dec
cwtl
mov
hlt
mov
xchg
in
int3
pop
popf
xchg
sbb
movsl
outsb
mov
adc
outsb
dec
ret
outsb
and
in
xchg
outsb
cld
ret
outsb
aam
les
mov
std
xor
jge
shll
shlb
pop
cwtl
mov
mov
bound
test
cmpsb
fildl
jo
pop
inc
mov
arpl
pop
sahf
es
jl
inc
push
mov
ret
mov
mov
pop
sub
subps
in
cld
sub
mov
pop
loopne
pop
nop
xchg
cltd
mov
pop
cltd
sub
xor
cmp
sub
mov
jnp
test
movsl
cmp
mov
rcrb
js
das
mov
add
lock
fs
lret
lock
js
jl
xor
cltd
xor
je
or
add
test
pusha
ljmp
dec
push
in
insl
les
mov
test
push
daa
iret
rcl
lods
lock
push
pop
mov
lea
inc
and
adc
sbb
outsl
push
mov
sub
add
mov
add
stos
push
addr16
ljmp
xchg
dec
xchg
pop
push
xchg
dec
xchg
mov
in
outsl
sahf
sub
daa
shlb
xorl
pop
jl
je
outsl
imul
dec
iret
pushl
dec
ljmp
lea
xchg
mov
or
dec
and
xchg
sub
or
std
cmp
push
sub
sub
and
push
xor
test
je
and
or
jge
fsubr
ret
aam
ret
jo
clc
popw
jmp
and
fs
pop
or
jno
sub
shlb
and
pop
push
cmp
fcoml
lods
movsb
into
inc
xor
mov
jge
jl
fs
push
push
in
mov
adc
inc
sub
cld
sub
cmp
mov
push
fsubrs
and
clc
fsubs
jo
cmp
mov
sub
shll
push
pop
lods
int3
add
xchg
jae
pop
les
les
or
rolb
push
sbb
and
js
cltd
push
mov
pop
imul
push
ljmp
add
sbb
in
add
les
jae
dec
in
xor
push
sahf
dec
xchg
jl
inc
xchg
int
lahf
push
mov
andb
mov
sub
mov
inc
dec
insl
sub
aam
in
les
insl
in
mov
jl
hlt
pop
mov
mov
movsl
xchg
sub
sub
xchg
add
adc
fs
test
push
test
mov
pop
jl
ljmp
nop
dec
insb
mov
or
sub
mov
lods
jno
xchg
fcoml
int3
dec
mov
add
mov
mov
pmuludq
ja
lods
mov
push
cmp
lods
jl
in
insb
sub
mov
xchg
lods
cmp
dec
jge
js
out
sub
push
movsb
push
xlat
insb
mov
iret
ljmp
jnp
cwtl
pop
es
push
xchg
jo
gs
loop
ljmp
lods
je
dec
add
mov
mov
jg
sub
lret
lock
movsb
js
bound
and
mov
in
pop
into
pop
add
ljmp
rorl
fs
inc
in
cmp
pushf
sub
movsl
rcll
dec
add
mov
dec
jns
jne
pop
or
cmp
mov
jl
jne
fs
xchg
and
ret
push
xor
adc
int3
sub
add
fwait
or
test
movsl
mov
fcoml
lock
mov
lret
push
pop
sbb
add
jecxz
pop
push
cmp
push
mov
xchg
mov
pop
xchg
movsb
inc
inc
mov
cwtl
mov
inc
rcrl
xor
fsub
sub
test
stos
pop
roll
js
cwtl
jb
and
pop
xchg
lods
xchg
lock
aam
hlt
ljmp
js
cmpsb
xchg
mov
xchg
inc
js
push
mov
fs
sub
test
push
inc
jno
in
add
jno
in
bound
fsubs
hlt
and
lods
inc
js
adc
cld
rorb
and
ret
and
stos
dec
cmp
cmp
lods
jl
pop
jmp
inc
cmpsb
movsb
push
movsb
and
movsb
in
rcll
cs
shlb
sub
dec
hlt
mov
mov
xchg
sub
call
adc
mov
inc
imul
test
lods
pushf
sub
cmp
jbe
mov
cmp
mov
pop
jl
popf
mov
fmuls
enter
movsb
jmp
out
jl
or
fimull
mov
adc
and
stos
fisubrl
lock
inc
sub
sub
insb
mov
les
rclb
sub
and
xor
dec
xchg
pop
jo
mov
xchg
mov
ret
xchg
stos
fdivs
repnz
es
cmp
inc
insb
push
and
jo
jle
xchg
mov
xchg
xchg
mov
sub
mov
adc
test
js
insb
nop
pop
insb
dec
and
nop
sarl
stos
data16
sub
sbb
in
shlb
mov
stos
pop
xor
push
adc
add
hlt
and
mov
and
shlb
pop
lods
push
lods
dec
and
pop
stos
jo
mov
mov
call
mov
insb
inc
and
js
xchg
movsb
sub
aam
fisubrs
cld
xchg
or
sbb
sub
inc
nop
push
insb
and
xchg
mov
daa
mov
nop
fisubrl
hlt
xchg
add
sub
cmp
insb
and
jo
stos
sub
sub
enter
cli
insb
or
sbb
sub
pop
in
stos
pop
sub
xchg
mov
fdivl
or
sbb
push
and
xorb
sub
fcoms
add
nop
dec
insb
pop
and
js
nop
lods
sub
cmp
ret
nop
fisubrs
cli
xchg
or
sub
mov
and
jo
mov
mov
nop
out
clc
and
sbb
inc
sub
jo
test
mov
cmp
out
mov
sbb
clc
mov
cli
jmp
mov
scas
xchg
adc
stos
jo
lods
sub
insb
test
movsl
xchg
mov
popf
pushf
sub
pop
sub
test
dec
int3
xchg
xor
stos
mov
insb
xchg
pop
jo
sub
or
enter
test
jo
mov
js
insb
nop
pop
insb
inc
and
sbb
add
sub
xor
shlb
bound
test
mov
and
push
xchg
mov
xor
shrb
xor
mov
stos
notb
and
sub
nop
xchg
insb
mov
xor
sub
mov
and
jo,pt
pop
sub
jbe
mov
test
mov
sub
mov
push
and
xchg
cmp
dec
sub
nop
subb
xchg
scas
xchg
shlb
mov
adc
and
sub
insb
nop
jl
nop
and
jo
in
sub
mov
test
xchg
sub
jo
loop
and
sub
nop
xchg
insb
andb
xchg
push
mov
ljmp
and
mov
andb
and
xor
or
repnz
mov
cwtl
stos
jp
outsb
insb
push
and
xor
dec
stos
cmp
push
xchg
divb
mov
and
push
stos
dec
insb
pop
and
jp
mov
xor
les
loopne
pop
inc
mov
movsb
jnp
stos
mov
pop
dec
nop
lock
pop
pop
stos
je
dec
mov
sub
test
mov
pop
inc
sub
mov
sub
stos
push
sbb
and
pop
push
dec
inc
dec
dec
into
push
leave
aaa
ret
pop
mov
insb
push
imul
push
hlt
inc
dec
ret
in
popa
inc
xchg
inc
dec
push
push
bound
add
mov
inc
stos
or
cs
inc
insl
mov
fucomip
xchg
pop
fwait
test
inc
nop
push
movsl
dec
arpl
xor
jge
insb
test
xchg
fnstcw
cmp
gs
or
pop
inc
jb
cld
movsl
cmp
mov
push
cmpsb
insl
sub
jo
loopne
lock
push
mov
push
movsb
inc
idiv
add
repz
inc
inc
dec
ljmp
hlt
stos
jb
add
imul
and
popa
adcb
out
xchg
pop
outsl
bound
imul
cmpsl
cltd
mov
mov
aam
pop
int
fisubrs
inc
popa
push
inc
dec
dec
scas
or
ret
lahf
inc
mov
xchg
pusha
dec
xor
inc
aas
inc
popa
or
cs
out
inc
jnp
push
mov
mov
aas
dec
jo
ds
jl
adc
push
jae
push
jo
mov
xchg
addr16
shlb
push
xor
mov
fwait
shrl
dec
dec
mov
icebp
adcb
cltd
aas
inc
inc
inc
in
mov
push
mov
pop
sarl
outsb
dec
adc
jo
push
test
push
aas
test
imul
or
and
mov
adcb
jns,pn
xor
xchg
xchg
sub
push
jae
ja
out
push
dec
es
stos
subl
pop
ds
faddp
sbb
iret
insb
mov
call
jae
inc
dec
pop
fstpt
aas
mov
ret
cmp
lods
mov
insl
es
jb
mov
nop
mov
les
mov
out
ljmp
movsb
dec
lods
dec
aam
insb
jl
fs
dec
andw
hlt
sbb
enter
mov
cmp
sahf
js
test
mov
cmpsb
test
andb
pop
lcall
mov
push
push
xchg
inc
cmp
dec
or
dec
push
push
mov
or
cmc
lcall
xchg
jmp
imul
pushf
shrb
xorl
cwtl
popa
fldt
cwtl
aaa
icebp
cmp
pmaddwd
ret
pop
imul
pop
enter
fbstp
add
xchg
in
outsb
dec
movsb
arpl
fcomps
push
call
jl
clc
outsb
mov
push
scas
add
imul
lcall
and
xchg
pushf
mov
and
pushf
aad
les
pop
shll
sub
jae
xchg
stos
xchg
pushf
jle
sti
cmp
fdivl
divl
fwait
inc
dec
add
jmp
xchg
mov
into
push
pop
insl
push
cld
xchg
xchg
arpl
lret
jmp
bound
jo
push
cmp
inc
andb
ss
xor
jnp
mov
dec
jbe
iret
jbe
jbe
mov
mov
adc
mov
pusha
xchg
inc
fbld
push
andl
pop
ss
jo
fcmove
push
mov
aas
jb
and
jno
jle
inc
sub
cmp
inc
sub
and
add
sbb
pop
add
or
dec
testl
jb
inc
insb
pop
inc
dec
jmp
fs
int3
push
adc
inc
nop
pusha
ret
sub
mov
xchg
sub
nop
mov
cmp
push
outsb
mov
adc
mov
into
fs
xchg
divb
mull
call
mov
xchg
js
sub
imul
test
sahf
nop
sbb
fisubrl
cmp
xlat
and
push
nop
push
add
lods
jg
test
aas
rol
and
jl
add
adc
sub
or
pop
inc
sub
pop
lock
mov
xchg
push
movsb
test
dec
push
aaa
loopne
insb
orl
xor
das
out
and
and
adc
push
cmpsb
sub
xchg
jno
inc
xor
jmp
dec
imul
imul
outsl
js
popa
mov
adc
push
stos
cmpsl
mov
mov
xor
cwtl
xchg
jne
mov
std
pop
cwtl
jo
xor
and
pop
adc
ret
mov
mov
mov
iret
adc
int
adc
dec
sbb
xchg
jmp
pop
xchg
test
sub
loope,pt
mov
pusha
mov
es
jg
sub
dec
mov
inc
enter
ljmp
adc
mov
xchg
and
aas
pop
outsb
shrb
cmpsb
and
pop
push
inc
in
pop
mov
and
cmpsl
imul
outsl
lods
and
dec
mov
jo
push
lret
in
jl
lcall
push
ret
addl
fldt
and
mov
mov
pop
xor
mov
xchg
push
jl
movq
push
adc
sbb
xlat
pusha
out
test
and
pop
sub
and
pushf
fsubs
inc
jg
mov
ss
in
stos
call
sub
add
cmp
mov
test
mov
mov
add
xor
out
mov
push
sbb
and
dec
imul
cs
nop
inc
inc
shrb
push
rorl
add
push
mov
popf
out
mul
jle
push
dec
das
addl
mov
and
nop
cli
out
mov
cmp
jb
testb
shlb
test
jae
imul
popa
pop
xchg
in
inc
pop
addr16
stc
dec
dec
daa
rcrl
jl
jp
inc
scas
pop
push
xchg
cmpsb
pop
sbb
test
jne
or
xchg
xchg
test
push
iret
popa
jns
je
mov
ret
inc
pop
push
lret
mov
mov
cmpsb
fcomps
mov
lock
or
jno
insb
pop
loop
lds
adc
or
dec
lods
inc
push
mov
sbb
push
dec
and
jnp
xchg
movsl
and
sbb
fs
jge
std
inc
push
mov
out
dec
add
clc
mov
sub
cmp
jl
loop
xor
xchg
test
pusha
mov
lret
push
xchg
xchg
lcall
aam
or
jnp
cmp
push
mov
push
dec
outsl
lds
inc
mov
lcall
xor
mov
and
mov
dec
and
test
pusha
mov
aaa
sti
inc
add
ret
enter
push
pop
loop
mov
inc
mov
out
adc
pop
in
cli
orl
xchg
gs
xor
mov
xor
push
sbb
lahf
jo
mov
mov
hlt
sbb
dec
add
mov
xchg
and
mov
push
rcll
mov
dec
out
xchg
ret
mov
pop
fs
insb
xor
loop
adc
imul
dec
push
out
sbb
and
dec
and
pop
addr16
lcall
push
xchg
and
push
mov
sbb
or
insb
push
lahf
and
jo
jmp
gs
stos
sbb
mov
pop
nop
mov
push
xchg
mov
in
pop
mov
pop
cmp
xchg
adc
cmp
mov
push
add
addr16
xor
mov
lea
push
jb
sbb
inc
stos
lods
cmpsb
insb
nop
and
loop
cwtl
push
mov
insb
rclb
jg
add
lahf
pop
and
dec
inc
mov
sub
dec
inc
mov
jb
test
cmp
outsl
cmp
cmp
aam
push
nop
pop
push
imul
lock
push
lds
in
data16
mov
lcall
push
push
pop
mov
jne
add
arpl
insb
bound
out
dec
dec
or
mov
aaa
mov
mov
repz
pop
stos
repnz
lahf
sub
test
or
into
insb
ret
sbb
xor
or
mov
pop
and
xlat
mov
cltd
aas
mov
inc
xchg
and
ljmp
adc
imul
pop
insl
adc
inc
xlat
push
cwtl
jg
das
int3
into
add
fidivrl
dec
mull
fdiv
dec
mov
sbb
jne
jl
xor
jo
pop
cwtl
pop
or
insl
inc
stos
inc
cmpsb
xchg
test
cltd
addb
pop
pop
movsl
enter
push
cmp
mov
cmp
jb
dec
jle
insl
jo
pop
mov
cld
or
lret
add
inc
push
cmp
cwtl
pushf
test
insb
test
sti
fxsave
push
pop
dec
out
repz
repnz
repz
jle
ljmp
shld
outsl
jae
pop
pusha
cmp
neg
aas
rclb
jl
pop
andl
mov
aad
xchg
lcall
mov
mov
sub
inc
mov
andb
or
mov
outsl
pusha
cmpsl
pop
add
imull
inc
jb
jl
xchg
mov
mov
pop
xchg
lret
stos
sahf
arpl
call
push
add
push
out
sub
adc
jle
jae
dec
pop
jb
in
and
fsubs
adc
das
xchg
jns
xchg
ds
and
xchg
sbb
push
push
jb
pop
sub
pushf
and
in
sub
sbb
mov
movsb
dec
dec
mov
push
fstps
mov
inc
dec
jmp
xor
cwtl
mov
in
jae
sub
movsb
cmp
dec
adc
in
push
mov
add
mov
mov
push
xor
mov
in
test
sub
aad
stos
adc
stos
push
nop
jb
jns
mov
jo
idivl
jb
mov
push
sub
sbb
nop
push
pushf
dec
pop
add
cmp
sbb
pop
sti
in
bound
dec
or
outsl
addr16
pop
test
stc
cmp
outsl
nop
adc
add
adc
or
cltd
test
cmc
rorl
adc
movsb
xchg
popa
mov
jle
pusha
inc
and
mov
fmuls
xchg
pushf
sub
xor
mov
insb
xchg
addb
cmp
outsl
outsl
cli
add
sub
pop
lcall
fwait
or
inc
push
stos
stos
lcall
ljmp
sbb
cmc
mov
inc
cld
shlb
fsub
lock
nop
cmc
rolb
jle
hlt
movsb
sbb
mov
cld
xor
jb
xlat
mov
push
sbb
jle
or
enter
jo
inc
pop
mov
and
dec
mov
pop
mov
ds
movsb
addr16
bound
push
and
dec
lock
push
dec
roll
inc
sub
jl
pusha
mov
adc
lods
mov
sarl
inc
push
mov
mov
imulb
addb
dec
push
sub
std
loop
push
ffreep
adc
mov
cmpsb
push
and
jmp
popf
cltd
scas
orl
jmp
fs
push
push
mov
pop
mov
cltd
inc
movsb
loop
pop
ret
fwait
mov
or
cld
xchg
cwtl
stos
sbb
add
inc
dec
jno
pop
sahf
ret
in
mov
jns
mov
iret
cld
into
outsl
pop
pop
shlb
nop
push
decl
dec
jne
sbb
into
es
lods
ret
sbb
pop
jmp
lcall
jle
sub
adc
xchg
mov
imul
xchg
mov
jno
or
mov
push
mov
cmp
xchg
or
cld
loope
or
and
push
callw
test
pusha
xchg
add
or
out
insb
daa
jmp
stos
outsb
inc
jbe
data16
or
rolb
jecxz
inc
or
rol
inc
pop
cmp
fcom
icebp
out
mov
sti
add
cmpsl
out
mov
pop
jg
pushf
std
adc
enter
sub
stos
xchg
psubq
mov
sub
and
decl
mov
sahf
inc
jg
nop
std
push
sub
jp
mov
fnstsw
sbb
fisubrl
xlat
popl
in
push
or
adc
adc
cmpsb
xor
movsw
dec
pop
cwtl
inc
mov
aam
or
mov
mov
repnz
test
xchg
sbb
rcrb
lock
insb
xchg
fmull
nop
mov
dec
addr16
and
cwtl
loope
mov
cmp
mov
cmpsb
loop
push
xchg
mov
lret
add
fimull
push
push
sti
xor
mov
xlat
fimuls
testb
jmp
je
adc
data16
sahf
out
insl
lcallw
adc
lock
push
dec
imul
lea
pop
fidivrs
inc
pushf
mov
out
mov
push
and
data16
dec
in
xchg
fsubrl
movsb
cmpb
jnp
out
mov
lcall
mov
div
not
pushf
inc
bound
addb
insb
ljmp
xor
clc
loope
fcomps
loope
shlb
decl
iret
sti
psubw
mov
mov
into
imulb
lods
insl
and
movsl
pushf
pop
stos
sub
pop
jae
xchg
cmpsb
pop
xchg
movsl
pop
xchg
outsl
dec
xchg
icebp
dec
xchg
in
pop
movsb
or
lods
aas
dec
cmp
rolb
jbe
lods
xchg
xor
movsl
lods
in
mov
and
mov
outsb
mov
add
mov
inc
mov
les
je
adc
add
xor
pusha
out
cmp
pop
lods
jo
std
sub
ficoms
xor
and
jl
sbbl
test
lret
sub
sub
in
or
mov
sub
stos
jo
dec
je
and
and
shll
mov
out
xor
in
movsb
lods
dec
les
dec
out
mov
and
popf
sbb
leave
push
xor
clc
cmpb
rcll
dec
pop
test
pop
mov
dec
in
ljmp
stos
sbb
xor
cmp
mov
cmp
test
or
shrl
in
or
loop
add
stc
pushl
out
iret
movsl
mov
imul
xchg
ljmp
dec
lods
orb
cmp
adc
out
repnz
rolb
cmp
xor
shl
jp
mov
ret
mov
mov
mov
xlat
lock
hlt
aam
out
add
out
cwtl
fidivrs
je
aas
xchg
stos
pop
movsb
push
lock
repnz
movsb
ljmp
icebp
leave
movsb
test
call
xor
and
out
outsl
jle
xchg
lret
push
mov
mov
mov
mov
out
in
adc
mov
and
inc
xchg
ss
sti
push
movsb
icebp
pushf
inc
inc
inc
xor
ret
adc
shl
mov
lock
mov
mov
cmp
lods
repz
popf
ljmp
jns
cs
xchg
decl
mov
into
loopne
add
sub
js
jo
shlb
sub
inc
nop
push
fnstenv
push
js
lret
mov
aam
das
mov
leave
popf
iret
sarl
xor
adc
movsb
sub
or
aaa
mov
leave
pop
mov
jno
adc
fdivs
xchg
adc
mov
clc
mov
in
ficompl
lods
mov
popa
mov
and
and
insl
jo
es
lods
sbb
and
lods
sbb
pop
pcmpeqb
sub
mov
sbb
pusha
dec
mov
lock
mov
je
ret
add
or
push
leave
popf
fs
inc
pop
or
inc
inc
push
fucom
mov
push
mov
jbe
notl
lret
jl
mov
lods
lret
sbb
push
mov
or
and
pop
mov
dec
mov
pusha
cld
mov
dec
xchg
cwtl
lahf
mov
mov
xor
pop
and
je
mov
leave
shll
arpl
push
mov
mov
dec
addr16
adc
dec
xlat
nop
inc
loopne
lret
ret
mov
js
mov
mov
jbe
push
pop
pop
test
lods
adc
sub
adc
pop
mov
dec
push
aad
mov
sbb
sbb
push
or
clc
in
ffreep
pusha
int3
push
pop
dec
and
mov
push
imul
pushf
pop
jmp
test
mov
cmp
xor
int3
rorb
jno
sti
js
outsb
js
inc
clc
or
leave
xchg
mov
adc
adc
je
ret
js
cmc
sbb
test
or
pop
or
mov
push
rorl
or
and
jmp
pop
sub
pop
mov
mov
mov
rcr
fadds
or
leave
and
mov
cld
mov
insl
enter
jecxz
bound
repz
stc
mov
adc
mov
push
lods
pop
pop
mov
scas
js
jo
mov
mov
sub
jl
inc
push
lods
call
shrd
xor
pop
lods
xor
cs
cmp
adc
lods
inc
call
jno
aad
mov
mov
jl
jl
jl
jge
cmpsl
or
xchg
pop
nop
xlat
mov
mov
mov
cmpl
pop
mov
inc
insb
lods
in
add
push
popa
lock
test
lock
mov
mov
push
cli
mov
clc
adc
repz
and
inc
repz
mov
add
mov
pop
xor
sahf
inc
xor
mov
test
mov
or
aas
mov
shll
push
jle
ret
sbb
cmc
js
je
cmpsb
stos
mov
lods
push
cmp
movsb
lods
sbb
scas
pop
adc
mov
fwait
mov
rclb
js
scas
movsb
fldt
stc
mov
lods
mov
mov
popa
lods
jl
jge
scas
dec
lods
iret
sub
negb
lods
adc
cli
rorl
adc
out
mov
sarl
imul
lds
enter
xor
mov
ljmp
das
mov
jmp
mov
cmp
pop
xlat
cmp
decb
cmp
dec
sub
xchg
mov
mov
inc
cmp
cmpb
inc
nop
inc
insb
and
loopne
leave
adc
mov
jne
shlb
cli
xchg
xor
sub
iret
inc
ret
lock
mov
dec
shlb
int
dec
lods
jo
push
sub
xchg
in
inc
dec
xor
mov
inc
mov
aam
fwait
mov
sbb
icebp
mov
xchg
stos
xor
dec
sub
sub
addr16
inc
lods
adc
adc
lret
pop
pop
mov
setnp
cmp
test
or
adc
test
mov
or
shll
add
mov
icebp
mov
pushf
out
or
scas
fsub
leave
add
mov
fimuls
orb
dec
sahf
xor
call
xchg
in
jecxz
loopne
jb
jmp
jbe
in
jl
add
gs
add
jns
std
or
in
mul
insb
sbb
cmc
push
inc
hlt
sti
loope
adc
adc
dec
fs
repnz
es
add
stc
fcoml
andb
add
in
in
out
in
add
adc
in
repnz
mov
dec
addr16
sar
in
jmp
scas
add
out
mov
insb
xchg
test
lcall
pushf
push
nop
add
loopne
adc
xchg
cmp
repnz
mov
jae
outsb
nop
cmp
mov
or
cld
jae
lock
in
add
shl
loope
in
jae
adc
idivb
mov
int3
mov
jno
and
popl
mov
inc
inc
push
inc
dec
jae
aas
inc
xchg
lds
rcl
outsl
mov
or
lods
xchg
push
push
test
gs
add
fisubrl
stos
out
mov
stos
push
out
xchg
stos
int
movsb
pop
inc
addb
pop
movsl
and
fistps
dec
inc
shll
lahf
cmp
cld
jp
or
inc
and
cmpsl
cmc
ret
mov
fs
repz
mov
dec
or
push
and
enter
incb
push
jp
lds
dec
pusha
je
ret
scas
stos
loop
mov
loopne
fimuls
shrb
scas
pop
mov
mov
ret
iret
mul
jg
stos
push
mov
cmc
or
scas
mov
mov
sub
xchg
jmp
jo
lcall
incl
lret
mov
daa
xchg
xor
cmc
dec
shlb
inc
sbb
imul
push
iret
test
jno
rorb
stos
jl
cmpsb
das
inc
fnsave
movsb
sub
and
shll
stos
pop
cld
popa
mov
leave
xor
jmp
xchg
rclb
push
aaa
push
sbb
mov
cmp
jae
pop
push
push
push
movsb
sub
stos
loope
std
pop
icebp
jge
mov
pop
and
jae
push
cwtl
out
call
scas
lahf
ljmp
mov
mov
jp
jae
sub
cltd
sbb
in
sbb
addb
scas
cmc
sarl
iret
enter
mov
push
adc
stos
mov
ret
push
out
mov
cli
inc
leave
mov
sbb
stos
dec
xor
mov
dec
nop
cmpsb
in
xchg
inc
mov
sbb
cwtl
pop
dec
xchg
adc
test
dec
scas
pop
lahf
push
sahf
xchg
dec
xchg
sub
sub
jb
cmp
jb
jl
push
nop
scas
mov
scas
pop
lea
xchg
mov
push
dec
dec
cltd
movsb
arpl
test
mov
lcall
call
test
cltd
test
xchg
out
lahf
cs
jp
outsl
jmp
pop
xor
mov
std
nop
pop
mov
and
fsubr
mov
sub
xchg
pop
insl
xchg
mov
mov
xchg
sysexit
std
jbe
xor
jl
cmp
inc
xor
rorb
aaa
adcl
xchg
xor
lcall
xor
xchg
cmp
nop
es
and
das
test
mov
cld
sbb
outsl
js
sbb
aam
push
lods
jle
dec
enter
loop
mov
je
pop
insl
hlt
movsb
mov
arpl
xor
pop
pop
inc
cltd
les
nop
push
jo
xchg
dec
stos
jge
pop
addb
decl
xchg
repnz
xor
fnstcw
inc
jle
xchg
test
pop
and
rolb
int
fdivrs
cld
std
out
shrl
pop
fsubrs
lahf
jle
rclb
enter
or
jne
xchg
jb
dec
xchg
orb
inc
push
dec
inc
nop
addb
xor
push
and
inc
dec
cmpsb
mov
jbe
mov
scas
dec
lods
nop
mov
push
pop
lods
out
mov
in
bound
movsb
adc
mov
scas
fisubrl
mov
outsb
push
movsb
and
mov
mov
dec
mov
pop
jae
ret
dec
jb
lods
mov
addr16
movsb
jl
loopne
into
jae
or
in
fildll
std
pop
mov
push
inc
push
mov
ret
or
pusha
pop
xor
lret
mov
movsb
aam
out
outsl
lods
push
add
xor
jmp
xchg
mov
xchg
pop
lods
jb
rcrb
dec
xorb
sub
sub
sub
mov
mov
sub
inc
dec
or
addl
repnz
pushf
lods
clc
loope
xchg
mov
subb
mov
mov
mov
hlt
jo
clc
sub
insb
add
lods
xchg
add
stos
or
stos
mov
adc
test
adc
cmpsl
sbb
cmpsb
mov
and
mov
sub
mov
xor
mov
insb
cmp
sahf
xchg
cmp
popf
inc
sub
dec
and
push
sub
insb
pop
and
pusha
sub
push
jo
jo
nop
mov
andb
xchg
mov
mov
adc
mov
nop
mov
mov
nop
xchg
test
sub
movsb
mov
mov
jg
les
enter
int3
xchg
shlb
dec
dec
dec
mov
dec
inc
inc
inc
inc
aad
and
cmp
cmp
mov
cmpsb
mov
cmpsl
test
mov
lahf
stos
mov
popf
xchg
mov
mov
int
xchg
dec
adc
jge
inc
inc
test
add
xchg
mov
pushf
jle
mov
cltd
mov
mov
xchg
mov
addl
dec
dec
dec
dec
push
mov
dec
cmp
dec
pushf
fwait
mov
cltd
cwtl
xchg
xchg
xchg
xchg
xchg
jnp
xchg
cmp
stos
in
pushf
dec
leave
cwtl
cwtl
mov
mov
std
dec
pop
bound
pushf
lret
imul
scas
fldt
insb
mov
jnp
lods
lods
stos
ret
pop
mov
xchg
mov
xchg
jnp
movsl
xchg
jle
inc
test
test
mov
xchg
iret
mov
xchg
adc
mov
push
movsb
movsb
jge,pn
test
push
mov
mov
lcall
pushf
andl
pushf
xchg
lahf
fldt
xchg
pushf
sahf
pop
xor
xchg
popf
dec
pushf
lods
cltd
scas
jb
adc
jne
test
cpuid
mov
xor
nop
or
xchg
mov
xchg
cmp
mov
xchg
stos
xchg
push
movsb
in
scas
jle
xchg
nop
ret
data16
xchg
movsb
outsl
mov
xchg
orb
mov
fisttpl
bound
ss
nop
mov
pushf
bound
lock
xor
pop
mov
mov
xchg
ret
mov
repz
xor
stc
adc
mov
jb
xor
cltd
jns
lcall
stos
mov
test
ss
test
pusha
fwait
mov
jle
mov
cmpb
pushf
ljmp
movsb
pop
mov
test
lea
inc
jge
inc
jl
stos
xchg
data16
jnp
jge
mov
adc
cmpsb
mov
mov
js
xchg
xchg
ja
jbe
jne
je
iret
insb
mov
les
adc
sbb
xchg
stos
xchg
mov
lods
xchg
and
xor
outsb
subb
mov
sub
xchg
fistpl
inc
test
insl
lods
push
out
insb
fwait
das
mov
imul
mov
xchg
test
outsb
cltd
fwait
push
cmpsl
lcall
cwtl
das
imul
push
andb
mov
sbb
mov
xchg
stos
in
jge
mov
dec
orb
add
pop
xchg
inc
popa
stos
mov
cmpsb
xchg
nop
cltd
dec
lcall
sub
xchg
adc
stos
pop
mov
pop
adc
mov
fwait
pop
mov
push
mov
jge
pop
xor
test
jae
loop
mov
insb
stos
mov
movsb
sbb
mov
push
mov
cmp
mov
mov
ljmp
das
movsl
dec
xor
xchg
inc
dec
adc
xchg
cmpl
push
xorb
dec
stos
mov
dec
xor
sub
int3
mov
mov
jl,pt
mov
inc
xor
mov
mov
inc
test
lahf
inc
in
stos
inc
adc
test
ds
xor
sub
dec
cmp
cmp
ret
subl
cmp
push
in
popf
pushf
sbb
jge
inc
cmp
loopne
int3
cmp
lcall
aaa
xor
lods
je
orb
inc
xor
cmpsl
xchg
mov
mov
scas
xor
and
xor
lods
mov
xchg
xor
xor
pop
js
xchg
push
mov
fwait
sub
xchg
cwtl
jge
and
add
jbe
xchg
sub
lods
scas
sub
mov
xchg
xor
sub
or
mov
xchg
cwtl
outsb
es
mov
test
test
pop
mov
and
xchg
scas
jle
adc
sub
jnp
pop
pop
cmpsb
mov
lea
push
cld
mov
mov
xchg
in
jge
cwtl
sbb
out
sbb
js
sub
cmpsl
jg
mov
sbb
jns
lahf
scas
xchg
mov
cltd
mov
xchg
mov
sti
stos
adc
adc
mov
adc
jo
stos
xchg
mov
adc
xchg
mov
xchg
sbbb
mov
jle
sete
push
shrd
mov
mov
cmpl
movsl
jne
xchg
xchg
stos
or
mov
dec
mov
inc
pop
mov
stos
cmpsb
xchg
push
xor
pop
test
fildl
popf
iret
cltd
push
mov
sbbl
nop
xchg
scas
ss
ss
jb
roll
mov
mov
lods
fwait
xor
mov
xchg
rolb
daa
pop
jge
stos
adc
sahf
sarb
mov
xchg
outsb
xchg
lock
xchg
js
das
movsl
sti
xor
lcall
cwtl
mov
enter
mov
xchg
pop
xchg
mov
mov
mov
test
add
pop
mov
ljmp
rep
cmpsb
xchg
ljmp
icebp
or
ss
lcall
dec
in
xchg
jmp
mov
xor
xor
clc
sahf
pusha
xorl
out
pop
mov
bound
cmpsl
pop
mov
cmpsb
test
loope
loopne
fldt
mov
or
jge
xor
test
xor
cmpsl
test
xchg
mov
sub
mov
cwtl
jo,pn
xchg
das
rcrb
push
jno
xchg
jge
mov
fidivl
jg
jno
xchg
cltd
ss
cmpsl
lcall
xchg
fcom
jl
jne
xchg
fwait
xlat
test
xchg
mov
jecxz
mov
cltd
and
jge
mov
outsb
pushf
xor
xor
mov
lcall
in
xchg
pusha
mov
xor
iret
fwait
mov
popa
test
jle
repnz
xor
scas
int
int3
lods
lret
cmpsl
stos
mov
lret
leave
lret
xchg
mov
jge
stos
enter
xor
mov
subb
scas
mov
nop
test
outsb
addb
lahf
jle
ret
sub
shll
mov
xchg
inc
jge
stos
mov
mov
xchg
subb
mov
push
mov
cltd
push
mov
lcall
mov
shld
popa
lods
xchg
ret
mov
pushf
mov
pop
mov
orb
es
add
xor
cmpsl
xorb
jne
bound
mov
cltd
insb
lcall
mov
xlat
movsb
or
mov
cmp
mov
bound
mov
je
scas
stos
test
scas
jl
imul
shrb
stos
ret
subl
lods
mov
in
mov
xchg
in
xor
test
mov
stos
cmpsb
mov
mov
mov
aad
sbb
cmp
das
jb
xor
cmpsb
popa
mov
jge
pop
push
mov
pushf
sbb
test
push
mov
outsb
fwait
mov
sahf
xchg
xor
lods
cwtl
sub
rcrb
xchg
aam
xor
lss
jl
push
rcll
xor
dec
mov
cmp
xchg
xor
xchg
sbb
jge
sub
mov
lahf
nop
mov
clc
jl
mov
sahf
lock
insl
cmpsl
mov
add
xchg
outsb
cltd
xor
lcall
xchg
ficompl
and
scas
xchg
jne
xchg
fwait
inc
xchg
out
mov
mov
and
cltd
mov
lcall
mov
pusha
push
sbbl
in
xchg
mov
fwait
add
jg
or
or
sub
inc
bound
jnp
push
xchg
push
mov
cmp
jns
xor
mov
xorb
nop
jl
jne
nop
xchg
bnd
and
popa
jle
sub
jecxz
insb
mov
pusha
xor
outsl
xlat
nop
or
and
jo
lea
jge
jle
popf
mov
cltd
stos
mov
enter
xor
xchg
mov
test
cmp
mov
push
mov
mov
insb
xchg
push
movsb
pop
jle
push
lahf
xchg
imul
movsl
pop
lcall
pushf
insb
scas
xchg
data16
mov
mov
orb
loopne
test
lea
test
mov
push
movsb
adc
popf
pushf
sub
xchg
xor
xor
mov
sbb
mov
stos
aad
or
or
cmp
cs
aad
or
js
stos
mov
stos
mov
test
lods
daa
mov
mov
lods
ss
xchg
mov
fs
les
mov
mov
lcall
pop
mov
stos
pushf
mov
mov
sbb
mov
mov
push
xchg
lcall
mov
xchg
jae
sbbb
in
xchg
jge
inc
pop
and
push
pop
call
addb
cmp
sbb
mov
and
subl
xchg
movsb
stos
fimull
outsb
movsb
or
cmpsl
nop
loopne
jl
arpl
cmpsb
xchg
push
push
insb
jge
arpl
andb
shl
or
lahf
xchg
push
xchg
enter
cmp
mov
rcrl
push
push
pop
je
inc
cmp
insb
dec
int3
push
pop
movl
lcall
das
scas
scas
int3
stos
test
nop
mov
inc
test
cmpsb
nop
pusha
mov
lcall
pop
lods
xor
int3
adc
imul
mulb
and
cmp
imul
movsl
mov
arpl
xchg
mov
ficoml
test
mov
mov
cwtl
sub
fwait
hlt
or
movsl
lret
mov
dec
ljmp
out
lods
xchg
addr16
arpl
push
pop
pop
cs
add
xor
imul
mov
mov
xchg
xchg
pop
push
mov
stos
mov
test
cmpsl
mov
ret
xchg
scas
ljmp
sbb
inc
ret
loop
dec
ss
test
mov
push
cwtl
lods
cltd
push
cs
push
insb
test
clc
je
mov
les
orl
xchg
je
insb
lods
xchg
and
test
and
dec
xor
mov
mov
stos
mov
push
push
adc
or
xor
push
jbe
push
mov
sub
fsubl
cld
or
lods
subb
inc
pop
aam
xor
inc
push
mov
or
pop
cmpsl
int3
mov
sbb
mov
stos
clc
scas
xchg
push
jl
in
adc
js
push
dec
in
and
lahf
sbb
adc
fcom
mov
xchg
push
mov
jae
sbb
fisubrl
xchg
loop
sub
les
mov
push
mov
add
dec
xor
dec
and
dec
mov
pushf
push
nop
dec
adc
adc
insb
addl
push
fs
insb
inc
cmp
mov
mov
sbb
and
and
es
xchg
popf
and
insb
cwtl
lcall
ljmp
call
jge
xchg
inc
rorb
xor
dec
xor
mov
push
mov
lods
loop
scas
push
mov
stos
call
andb
push
add
push
adc
arpl
scas
inc
rcll
movsl
mov
xor
mov
scas
xchg
stos
mov
fdivl
pop
clc
mov
or
stos
mov
inc
and
cmp
mov
add
xor
cmp
xchg
fimull
fidivl
mov
mov
and
mov
aam
lahf
pushf
xor
in
pop
imul
ret
cli
jle
mov
mov
stos
inc
xor
push
pusha
add
stos
rolb
cltd
xchg
add
stos
or
sub
and
fnstcw
hlt
scas
mov
lea
xchg
test
pop
lahf
loopne
cmp
adc
clc
mov
stos
xor
cwtl
adc
push
pop
mov
add
and
adc
test
ds
dec
outsl
add
xchg
call
mov
cmp
jge
fdivl
sbb
adcb
xor
sarb
add
cld
sahf
xor
movsl
sbb
mov
mov
cmp
dec
stos
les
mov
mov
clc
and
mov
sbb
rcrl
xor
movsl
push
pop
xchg
fnstsw
sub
push
scas
std
mov
mov
push
mov
lods
dec
ss
xchg
fsubrs
push
jge
dec
call
insb
mov
cwtl
push
push
xor
push
lahf
cltd
scas
sbb
mul
mov
push
popa
sahf
loope
movsb
add
xor
stos
pushf
xor
test
aam
gs
popf
push
xchg
pusha
ud2
dec
and
or
jb
je
mov
loop
or
push
sub
cs
sub
xor
inc
mov
sub
stos
in
jg
lock
ds
push
cwtl
or
cltd
bound
push
ja
arpl
mov
ret
or
jle
or
or
pop
xchg
fisubl
xor
pushf
cltd
cwtl
xor
into
mov
dec
nop
inc
sub
mov
xchg
stos
xchg
push
xchg
adc
xchg
add
adc
cld
mov
adc
ss
or
push
sahf
push
stos
jb
xor
rol
sbb
and
mov
incl
push
pop
and
push
stos
or
add
sub
push
or
inc
adc
dec
scas
shlb
ds
jnp
jle
rclb
fcmovb
rclb
mov
jg
dec
ss
and
xchg
jle
xchg
les
je
sub
cli
adc
sub
pushf
mov
cwtl
shl
stos
and
xchg
and
ficoml
inc
sub
in
jg
mov
adc
subb
jo
js
fisubrl
push
jae
daa
cmp
pop
dec
pop
or
mov
mov
stos
cld
jb
fs
insb
mov
xchg
xor
push
xchg
sub
faddl
test
pop
test
xor
push
loopne
inc
mov
jl
mov
jae
adc
push
push
mov
mov
test
xor
push
test
shrb
mov
lods
dec
jae
fxch
addr16
test
and
bound
push
and
cmpsb
add
stos
setp
mov
and
pop
mov
outsb
push
inc
fstpl
cs
xor
loopne
jne
cmpsw
cmp
pop
pop
sub
mov
nop
adc
xchg
inc
xor
sbb
cmp
rorb
mov
lret
pusha
stos
sbb
pop
xor
scas
lea
loop
xor
push
mov
xor
in
hlt
push
push
or
xor
sub
jmp
xchg
mov
sub
stos
pop
dec
pop
loop
and
lods
xchg
loop
mov
mov
push
sahf
xchg
sahf
sbb
je
test
ljmp
add
mov
mov
hlt
xchg
sub
lock
xor
sahf
xor
xor
pop
jmp
push
push
cwtl
adc
mov
lea
cs
jecxz
js
repz
dec
mov
sbb
stos
js
sbb
lods
sbb
jg
pop
mov
jo
and
sbb
xor
dec
mov
mov
sub
lods
andb
mov
sbb
test
lea
clc
pop
je
lods
daa
push
or
sbb
or
insb
test
cmp
stos
sbb
daa
mov
xchg
xchg
ss
dec
stc
dec
jae
xchg
cld
push
fisubrs
mov
mov
mov
cli
fs
push
xor
mov
mov
sarl
and
subb
sbb
pop
mov
hlt
rolb
or
mov
push
pop
pop
pusha
xor
adc
or
mov
mov
movsb
mov
insb
subb
sbb
adc
adc
lret
pushf
imul
and
orl
jp
faddl
adcb
cmp
mov
sub
repnz
mov
adc
jle
scas
les
mov
mov
pop
lcall
add
jg
lea
aaa
dec
test
ficompl
adcl
pop
pop
push
mov
xchg
dec
mov
popf
in
adc
mov
or
add
adc
stos
xor
js
mov
dec
test
popf
xchg
lret
mov
ret
adc
or
and
and
push
clc
mov
adc
mov
test
popa
mov
addb
dec
loopne
cmpsb
mov
push
es
mov
pop
mov
or
repnz
push
pop
aam
fwait
or
movsb
sub
mov
lods
inc
sub
in
call
xchg
pop
mulb
insl
push
inc
mov
mov
or
mov
nop
adc
subb
xchg
add
in
sub
add
adcb
lods
je
pop
xor
cli
mov
jg
and
andb
add
bound
sub
addb
add
xchg
in
in
mov
fsubs
fs
ret
and
add
sub
sbb
jmp
mov
xchg
stos
mov
jg
mov
xchg
pusha
scas
hlt
rcrb
sbb
test
adc
mov
cmp
xchg
and
rcr
loope
cld
lock
mov
addb
scas
and
mov
stos
loop
mov
les
xchg
stc
push
jb
scas
pop
movsb
iret
or
add
or
push
dec
add
adc
add
push
stos
sub
stc
imul
jne
lret
sbb
sahf
add
mov
js
mov
or
and
out
sub
dec
movsb
test
lcall
fisttpl
scas
pusha
xchg
jg
sahf
pushf
loopne
out
pop
xor
jb
repnz
stos
push
es
fisubrs
mov
stos
add
mov
shlb
mov
add
stos
mov
jg
and
push
sahf
push
pop
stos
into
lahf
ss
xchg
xor
mov
iret
ret
push
mov
xor
jo
mov
xor
add
pop
add
mov
adc
leave
ss
mov
data16
repnz
xchg
or
sahf
cmpsb
xchg
push
addb
sub
test
lcall
mov
adc
mov
add
shrl
add
lods
insb
orb
mov
adc
mov
mov
cmp
outsl
mov
add
xchg
sti
cmp
enter
jl
gs
filds
sbb
mov
nop
lcall
ljmp
cmpb
lcall
sahf
mov
cwtl
jb
xorl
les
mov
test
bnd
shlb
dec
notb
das
and
push
sub
cmc
scas
scas
xchg
mov
and
pop
insb
ret
andl
xchg
xchg
movsb
test
scas
fsubs
sbb
shlb
cwtl
hlt
add
mov
mov
out
sub
push
xor
add
cli
lahf
pushf
cmpsl
in
sbb
lret
xor
mov
xchg
sbb
jle
or
push
cs
xchg
enter
mov
sbb
je
stos
jmp
adc
adc
lcall
repnz
jo
adc
nop
mov
fidivs
in
call
nop
scas
sub
movsb
mov
mov
dec
clc
push
stos
mov
cmp
cltd
xchg
mov
fsubrl
push
mov
cmp
test
dec
pop
js
cwtl
adc
sbb
loopne
sbb
lods
fstl
movsl
and
mov
scas
idivb
out
push
pop
sub
insb
cmp
lahf
sbb
scas
and
jge
lcall
sbb
test
scas
cmpsl
push
nop
mov
mov
push
xchg
mov
bound
jmp
lahf
repnz
cmp
nop
cmpsb
mov
push
pusha
lods
add
xchg
jo
test
dec
jae
jne
push
mov
dec
dec
xor
xor
inc
xchg
or
movsb
movsb
xchg
outsb
pop
dec
sub
and
push
dec
xchg
xor
mulb
push
arpl
mov
pushf
lahf
leave
inc
insb
xchg
jo
sahf
push
or
sbb
and
cld
sbb
jg
adc
adc
mov
dec
movsb
xor
and
scas
mov
xchg
jmp
xor
stos
repnz
mov
xor
call
mov
push
pop
imul
lret
clc
pop
inc
or
push
fs
clc
xchg
ljmp
subb
test
adc
movsb
mov
pop
pop
bound
cmpsb
xchg
jmp
lock
sahf
clc
pop
sbb
cltd
push
test
inc
xchg
mov
add
sbb
and
push
jle
lods
xchg
adc
jge
jno
pop
sysenter
insb
cmp
mov
push
mov
cmpsl
mov
lods
add
mov
jecxz
aaa
sub
test
test
jbe
xor
sub
jo
xor
movsl
jne
in
loop
and
movsb
fs
stos
mov
sub
mov
inc
mov
xchg
and
cld
test
sub
cwtl
clc
inc
mov
jb
dec
or
jb
lret
cld
push
call
mov
addr16
jle
repnz
ljmp
xchg
pop
pop
hlt
in
les
fs
mov
arpl
cmp
stos
orl
imul
cwtl
jns
movsb
add
daa
jg
jg
jp
loopne
inc
test
sahf
mov
or
push
test
mov
das
call
and
cli
or
push
push
repnz
xor
mov
aaa
push
inc
pushf
nop
jmp
jne
rclb
xchg
jle
add
cmp
imul
dec
in
and
dec
lods
stos
dec
mov
popf
mov
cmp
push
enter
and
cmpsl
leave
push
repz
lcall
test
jmp
nop
lea
loop
add
loopne
dec
lahf
cmpsl
mov
jo
clc
cmp
adc
mov
or
mov
test
mov
push
xacquire
addr16
imul
in
repnz
ret
inc
nop
mov
jl
les
enter
dec
pusha
movsb
mov
stos
push
arpl
sti
shll
pop
clc
arpl
cmpsl
mov
xchg
add
pushf
out
cld
sbb
cs
fdivrl
nop
in
pop
test
dec
lock
mov
and
xor
inc
cbtw
and
iret
jns
test
mov
mov
pop
or
push
mov
sbb
lods
data16
dec
das
ds
je
js
dec
test
pop
jle
jae
mov
xor
adc
xchg
pop
lret
test
mov
fidivl
stos
xchg
fcmovne
jmp
mov
sbb
or
cmpsl
pusha
push
imul
push
cmpb
mov
fnstenv
je
test
movsl
out
in
jmp
adc
scas
in
adc
fdivs
sahf
xchg
lods
sub
mov
or
test
push
lods
mov
inc
dec
jg
outsl
adc
dec
insb
insb
cli
jbe
gs
pop
incl
popf
xchg
stos
lcall
clc
add
fdivr
fldcw
mov
adc
nop
sbb
mov
mov
rolb
into
rcl
popf
insb
adc
clc
inc
push
push
lea
push
jb
push
jns
add
stos
fdivrs
adc
xchg
repnz
mov
fcoms
push
loopne
mov
adc
int3
repnz
sub
mov
mov
xor
cli
mov
pop
mov
test
xor
rorb
popf
dec
xchg
test
pusha
test
test
lock
sbbb
pop
test
lods
movsb
clc
sub
mov
nop
sahf
psllw
insb
or
gs
mov
mov
ret
jae
dec
nop
je
mov
into
mov
pop
cwtl
adc
xor
jp
sets
xor
sbb
add
add
inc
xchg
ljmp
and
mov
adc
sub
pop
or
xchg
sahf
add
xchg
and
ja
ret
cmpsb
pop
cwtl
pop
rorb
xchg
std
cmpsl
lods
sub
cmpsl
dec
clc
mov
cwtl
mov
xchg
out
push
inc
sahf
add
ljmp
or
and
pop
or
push
arpl
shl
sub
clc
test
sub
mov
xchg
inc
popf
test
mov
mov
cmpsl
jecxz
test
sub
inc
or
scas
jb
pop
out
mov
jne
jg
das
mov
jmp
lods
fldcw
rorl
stos
mov
or
es
pop
icebp
into
pop
imul
inc
mov
cli
inc
scas
xchg
ret
sbb
inc
push
movsb
test
dec
cwtl
scas
add
jae
mov
sbb
fildl
jle
scas
or
lea
xchg
ret
jle
jge
mov
repnz
xchg
fdivrp
mov
cmpsl
push
and
sub
pushf
adc
jae
dec
sbb
xchg
in
pop
xchg
dec
cmpsl
jmp
jge
test
sarb
js
push
movsb
adc
pop
orb
pop
outsb
jg
ret
xor
cmpsl
sbbb
lret
mov
cmc
orl
icebp
orb
subb
sub
adcl
sub
mov
pop
scas
cmp
std
lods
subb
scas
jb
jg
mov
sub
outsw
mov
cltd
mov
vpmacssdql
push
add
scas
in
mov
cmpsl
xor
push
sub
lret
pushf
cmp
scas
fwait
aam
fistpl
cmp
loope
mov
imulb
bound
icebp
xor
movsb
fsubrs
mov
test
adc
mov
jge
jecxz
scas
mov
adc
sub
push
and
lcall
scas
mov
pushf
add
out
xchg
gs
in
lea
mov
sahf
pusha
mov
adc
scas
xchg
xchg
or
xchg
arpl
and
lcall
scas
sub
mov
test
jge
or
scas
cltd
sbb
lock
rolb
scas
mov
ret
mov
enter
fldcw
sub
les
arpl
jbe
loopne
add
add
test
pusha
xchg
shrl
and
cmpsl
cmc
outsl
mov
mov
pop
sub
test
lea
idivl
mov
or
and
mov
lret
mov
cmpsb
push
add
mov
mov
gs
pop
clc
xor
mov
sub
xchg
mov
inc
cmp
cmpsl
roll
cmpsl
xchg
lahf
and
loop
je
in
in
xchg
cvttps2pi
xchg
mov
push
xor
mov
icebp
push
xchg
jg
push
stos
lcall
cmpsl
push
mov
push
ret
jle
clc
imul
xor
and
imul
mov
xor
lea
lock
pushf
mov
cmpsb
out
pop
test
arpl
nop
rcrb
cwtl
lods
insl
movsl
int3
or
sahf
xchg
mov
sub
mov
test
pusha
jle
sbb
xchg
scas
ret
xorb
pushl
scas
test
lea
enter
mov
mov
cli
jp
xchg
cmpsb
dec
lods
and
pop
scas
enter
mov
jg
xchg
xchg
push
mov
out
pop
lods
mov
push
test
dec
jae
sub
fdivr
mov
fcmovb
inc
add
scas
shrb
loopne
or
jnp
xchg
imul
or
ret
mov
ret
lahf
lds
jle
or
lahf
fcmovu
test
cltd
mov
sub
push
jg
mov
jge
xchg
xor
lahf
ret
adc
mov
push
pushf
xchg
jge
jg
xchg
push
mov
xchg
sbb
jecxz
push
jbe
imul
xchg
dec
test
mov
mulb
adc
ficompl
scas
dec
dec
scas
imul
ja
ficoml
cmpsb
pop
stos
and
sub
fisubs
stos
xchg
shl
xchg
pop
ror
mov
jge
cmp
jb
inc
aam
mov
xchg
repnz
stos
sub
sbb
fisubrl
mov
and
jl
sub
xor
mov
xchg
lods
sbb
stos
les
std
sub
call
adc
mov
lahf
mov
ja
loop
and
arpl
mov
dec
xchg
mov
cmpsl
ljmp
lock
sub
sahf
movsb
xchg
xchg
mov
add
push
lret
mov
mov
or
scas
mov
add
xchg
mov
pop
bound
sub
fistpl
scas
lods
test
mov
xchg
sub
cmp
sbb
inc
xor
lea
mov
imul
mov
add
dec
push
push
movsb
or
mov
pop
pusha
jb
jo
scas
jle
ja
add
mov
mov
sbb
fnstenv
lods
enter
sub
ljmp
mov
sahf
ss
jle
sub
pop
or
push
pop
push
xor
jb
outsl
xchg
lret
bound
pinsrw
jg
jmp
sub
outsb
enter
push
movsb
or
fnsave
cs
stos
aas
sub
xor
push
fwait
loop
inc
mov
mov
imul
stos
inc
arpl
stos
or
movsb
mov
inc
or
sar
add
addr16
inc
and
adc
mov
cmp
inc
jo
cmp
inc
mov
dec
and
xor
and
push
dec
sub
inc
nop
push
push
stos
cmp
jge
ljmp
mov
sub
jl
add
add
in
in
clc
jnp
bnd
xchg
test
lcall
stc
jmp
add
je
add
clc
jb
scas
add
cmc
add
cld
fstl
pop
cmp
xor
clc
add
mov
add
jp
arpl
clc
out
or
adc
out
and
in
cmp
pusha
pop
iret
repnz
cmp
cmp
pushf
jmp
loop
rcrb
test
imul
cmpsl
mov
cwtl
inc
fnstcw
push
popf
jle
pop
sub
add
cltd
sub
movsl
ficoml
sub
xor
andl
insb
adc
sbb
and
sub
sub
inc
nop
dec
insb
push
and
jo
je
jl
test
pushf
aaa
sub
mov
rcl
sub
mov
in
call
hlt
sub
mov
or
adc
sbb
and
sub
cmp
inc
insb
push
and
jo
subb
mov
mov
mov
sub
mov
or
sbb
sub
push
and
xchg
stos
outsl
rclb
stos
jb
jno
jo
outsl
insb
outsb
and
insb
jo
push
imul
fs
bound
popa
mov
pop
and
pop
jo
pop
add
inc
inc
or
es
aas
push
jmp
dec
out
cmp
xchg
stos
inc
jo
inc
sub
aas
nop
ds
cmp
outsl
cmp
push
mov
sub
push
xchg
mov
ret
cmp
rclb
outsl
test
test
xchg
mov
ret
cmp
xorb
xchg
bound
int3
ret
popa
dec
dec
dec
in
push
outsb
addl
xchg
test
jnp
ret
jl
xchg
jge
jle
jg
and
sub
adc
mov
cmp
ja
repnz
or
gs
popa
adc
mov
cmp
ja
fwait
adc
and
jno
sub
push
jl
jge
jle
jg
insl
adcb
lods
dec
push
xchg
pop
xor
xor
xor
xor
xor
xor
xor
xor
mov
lods
push
pop
inc
pop
jnp
cwtl
pop
es
pop
xchg
pusha
and
shlb
fs
cwtl
es
addr16
push
shrb
insb
jnp
cwtl
outsb
es
outsl
xchg
jo
in
xchg
jb
jae
adc
jo
fneni(8087
mov
fs
fs
jns
lds
outsb
popa
cli
cltd
pop
cmpsl
or
bound
cmp
push
outsb
cmpsl
xchg
outsb
pop
sahf
inc
popf
mov
sahf
add
mov
lret
or
rorl
xchg
cwtl
icebp
popl
sbb
rolb
inc
inc
dec
sub
test
cmp
movsb
dec
test
xorb
int3
aam
mov
stos
shrb
fsubl
test
movsl
insl
adc
jno
mov
in
ficoml
push
imulb
mov
dec
ja
movsb
mov
pop
mov
insb
mov
mov
jo
mov
xchg
les
mov
xchg
call
shlb
and
xchg
cmp
dec
sub
mov
insb
and
movsb
in
xchg
jo
enter
leave
nop
sbb
lret
xchg
lret
jo
int3
sub
jp
int
fcoml
iret
xchg
or
adc
shll
cmp
rcll
sub
mov
mov
rclb
sub
mov
push
xchg
fdivl
js
fiadds
sarb
sub
mov
hlt
and
xchg
add
in
sub
mov
dec
and
xchg
pop
jo
jo
jmp
jo
jge
jmp
aam
in
jo
in
sub
mov
out
and
xchg
lock
icebp
sub
adc
dec
repnz
pop
in
mov
cmc
jo
imulb
nop
mov
clc
xchg
mov
sub
mov
hlt
and
xchg
sbb
dec
sub
mov
test
add
je
add
lock
add
and
mov
mov
lock
fdiv
leave
dec
bound
fcom
cld
lret
mov
testb
mov
cmc
shrb
scas
mov
out
shrb
pushf
xchg
mov
repz
push
out
jbe
push
add
lods
cmp
aam
leave
mov
cmp
cmc
or
test
fnstcw
gs
movl
pop
mov
or
loope
ret
jmp
push
int3
xchg
xor
in
scas
insb
std
testl
fdivrp
call
add
mov
nop
cwtl
push
ljmp
add
loopne
mov
dec
fstl
in
in
pop
addb
xchg
aaa
fcoms
sbb
mov
in
or
cmpsb
loop
mov
int3
fdivp
or
xchg
sub
mov
adcb
fisubrl
adc
dec
sub
sbb
ret
mov
xchg
test
out
sbb
push
fs
or
fidivrs
mov
movb
cli
in
stc
cld
mov
push
push
or
xor
sarl
arpl
sbb
mov
stos
cmp
fs
cltd
sahf
pop
cmp
adc
fwait
xor
mov
clc
lahf
loope
leave
mov
jb
into
jb
jae
mov
lahf
dec
add
and
or
loop
lret
shl
cmp
or
jbe
inc
imul
shlb
in
xor
mov
or
push
jl
in
clc
bound
inc
dec
xor
pusha
cmpsb
call
bound
pop
add
push
dec
sub
pop
test
les
xor
fisubl
nop
jmp
adc
sub
mov
out
jb
lcall
jae
push
jae
lcall
jp
outsb
jle
hlt
and
mov
push
push
test
push
sub
jnp
lods
sbb
arpl
add
nop
lret
cmp
fstpl
hlt
add
icebp
mov
or
and
std
pop
mov
ds
imul
xchg
lock
cmpsb
or
jl
adc
stos
out
shr
mov
adc
mov
xchg
mov
jle
aad
int3
nop
std
or
push
ja
clc
fiaddl
aam
dec
jo
cmp
cmpsb
pop
test
push
mov
neg
jns
cld
out
and
mov
mov
movsb
mov
movsb
shrb
inc
mov
pop
sti
cmpsb
cmpsb
xchg
cmpl
jno
and
out
cmpl
test
and
pushf
ljmp
sbb
pop
call
sti
bound
nop
pop
jae
add
mov
stos
add
out
pushf
inc
loope
jecxz
cwtl
cmp
inc
adc
stc
ds
and
arpl
in
and
scas
sti
adc
mov
hlt
xor
cli
out
and
push
xchg
add
xchg
jb
movsl
repnz
test
adc
mov
mov
sub
cmp
inc
fs
push
dec
fbstp
or
mov
or
push
push
incb
nop
dec
inc
ret
jns
cmp
mov
cwtl
bound
push
xchg
or
adc
iret
push
mov
fmuls
repz
test
test
mov
fdivs
push
int3
shlb
pop
xchg
mov
mov
lret
lcall
rcll
test
jmp
add
mov
shrl
loop
fcomip
push
lahf
cmp
ss
cmpl
mov
mov
in
cmpsl
xchg
out
clc
add
or
and
test
ljmp
clc
loop
rclb
push
xchg
je
pop
mov
lods
pop
jo
push
sub
push
nop
push
insb
push
and
mov
cmp
jp
inc
stos
push
mov
insb
and
jo
mov
jmp
push
in
movsb
loop
xor
xchg
jmp
or
sti
mov
xor
and
push
push
test
mov
pop
movsb
push
mov
mov
adc
stos
pushl
in
inc
loope
push
mov
inc
add
pop
cld
stos
dec
push
pushf
cwtl
bnd
loope
or
imul
add
jb
push
dec
lods
bound
mov
fldenv
lods
mov
adc
inc
mov
in
and
mov
hlt
cld
movsl
mov
lods
out
add
cld
xchg
mov
ljmp
or
movsb
sub
pop
test
lock
movsb
cmp
je
add
xchg
hlt
push
xchg
xchg
dec
jge
or
cld
sbb
inc
xchg
pop
mov
mov
fs
sub
movsb
je
xor
inc
outsl
jl
pop
adc
test
cs
test
stc
loop
fdiv
mov
enter
sub
in
aam
pushl
out
push
enter
in
in
arpl
mov
std
mov
fisubs
je
jl
je
mov
test
cmp
cmp
lods
lretw
addr16
movsb
jecxz
xor
test
mov
fsubs
in
xor
aam
je
lock
movsb
movsb
cli
ficoml
je
jb
dec
aas
xor
shl
cmp
push
dec
push
stos
sbb
ljmp
xchg
fisttpll
sbb
fwait
mov
aaa
push
dec
negb
in
outsl
jnp
addr16
mov
out
jmp
lret
adc
cmp
scas
movsb
jmp
cmp
push
mov
gs
mov
insb
jb
jno
sbb
jno
rorl
lea
dec
repz
js
dec
ret
cmc
enter
mov
and
xchg
test
or
mov
sti
mov
test
dec
mov
imul
pop
popf
dec
dec
pop
mov
push
push
mov
dec
aas
jo
mov
push
mov
adc
add
and
cmp
fcoml
sub
xchg
cmp
shrl
jg
and
mov
jbe
mov
sub
and
test
pop
filds
int3
insb
adc
inc
daa
sbb
je
into
dec
jne
dec
insb
dec
cli
insl
insb
adc
jne
aam
outsl
jno
or
mov
mov
outsb
pusha
add
cmp
inc
pop
icebp
test
sbb
sar
or
in
stos
xchg
imul
inc
aaa
mov
lcall
outsb
and
loop
divl
rclb
sbb
jmp
dec
jno
dec
stos
jne
pushf
int3
pop
into
dec
push
mov
xchg
ja
lods
pop
jbe
and
mov
xor
push
cmp
dec
cmp
jp
jnp
pop
jns
adc
dec
lcall
ret
cmp
inc
iret
mov
push
lods
sti
inc
xchg
aaa
cmpsl
stos
inc
pop
xchg
jbe
dec
outsb
adc
xorb
cwtl
mov
dec
push
arpl
xchg
inc
dec
inc
jnp
test
popa
arpl
jbe
inc
cmc
push
popa
arpl
cmpb
mov
loopne
rcrb
mov
testb
dec
insb
inc
stos
dec
or
xchg
jno
or
push
ret
push
xor
in
push
dec
rcll
cmp
rcl
push
jp
push
pushf
dec
push
inc
dec
inc
cmp
ds
inc
inc
cmc
and
ss
sub
mov
jne
mov
sub
adc
or
inc
jg
movd
sbb
outsl
pop
and
mov
bound
jno
mov
lcall
loope
sub
daa
xchg
jne
add
mov
cwtl
addl
xchg
mov
sar
mov
jecxz
ljmp
popa
pusha
mov
rorb
jg
pop
push
adc
xchg
enter
test
mov
pushf
div
test
mov
lods
sub
mov
int3
aam
fsubs
inc
test
inc
inc
jns
adc
imulb
xchg
jb
inc
and
sub
orl
and
xor
push
dec
cld
popf
mov
mov
mov
xor
jbe
test
mov
rol
dec
test
into
pop
adc
sub
xchg
test
mov
pop
lds
sbb
lods
movsb
dec
sbb
jne
mov
in
cwtl
ja
jb
push
pop
pop
mov
mov
ss
test
lods
loopne
xor
jae
xchg
or
dec
lcall
push
and
lea
movsb
push
mov
jno
jno
sbb
dec
and
iret
adc
jb
jb
jno
and
and
movhlps
fidivrl
fcoms
push
cmp
lcall
xorb
xchg
push
inc
clc
jge
movsl
and
dec
aas
negl
clc
pusha
fimull
inc
addr16
testb
movsb
xlat
outsb
adc
mov
add
xchg
cmovnp
pusha
add
adc
cmp
sahf
push
xchg
fstpl
arpl
fs
fwait
ja
test
cld
push
je
xlat
cmp
sub
lods
sbb
lahf
stos
cmp
cmp
pushf
inc
mov
cmpsl
inc
cmpsb
mov
test
adc
xchg
mov
lods
jno
dec
lcall
mov
jno,pt
subl
mov
mov
sahf
test
aad
inc
rclb
dec
lret
push
mov
jbe
dec
inc
xchg
push
add
insb
enter
dec
push
dec
inc
movsb
jl
mov
inc
push
int3
mov
push
dec
dec
pushf
scas
scas
push
cs
or
shll
add
push
adc
cwtl
push
xor
xor
ss
lcall
inc
sub
dec
push
pop
mov
xor
test
push
fcoms
jp
jmp
push
jno
dec
jmp
inc
sahf
xchg
in
cwtl
jecxz
imul
and
stos
movsb
xchg
xchg
and
and
cmpsl
in
and
push
or
lret
setno
adc
pusha
loop
mov
dec
mov
pusha
out
dec
rcll
dec
xchg
movsl
nop
shrb
lock
push
movsb
adc
pop
dec
add
dec
mov
into
push
lods
sbb
push
cli
jg
cmpsl
jl
inc
cmpsl
and
pop
jae
xchg
mov
pushf
push
aaa
dec
add
fcoms
jbe
adc
testb
aas
loope
sahf
test
jle
test
jmp
xor
inc
xchg
inc
inc
repnz
xor
jle
push
jb
addr16
jmp
and
jp
dec
clc
adc
mov
lods
mov
cmp
insb
test
test
jae
scas
movsb
inc
push
in
inc
jg
bound
outsb
push
jb
outsl
sub
movsb
pusha
roll
mov
and
roll
test
js
cmp
or
cmp
sahf
aam
test
sub
inc
ret
xchg
xchg
push
cmpsb
nop
mov
sub
inc
pusha
inc
mov
fidivrl
jns
and
arpl
shl
outsb
xor
push
cmp
inc
lods
push
inc
fildll
ficoml
pop
insb
notb
push
xchg
push
dec
inc
inc
xchg
and
push
cld
xchg
and
mov
push
bound
push
ficoml
jae
sti
dec
mov
dec
bound
divps
mov
bound
sub
xchg
lock
lock
rcrl
xor
jnp
cmpsb
pushf
fs
dec
and
arpl
lods
sub
outsb
js
fstl
push
int3
dec
int
ret
dec
std
repnz
push
inc
icebp
inc
js
jbe
adc
jl
jge
repnz
in
sar
lods
mov
lcall
push
pop
pop
lcall
scas
adc
clc
xrelease
mov
push
mov
inc
dec
addr16
inc
push
and
push
fwait
ds
inc
mov
fwait
insb
stos
push
scas
mov
test
xchg
pop
mov
jle
jg
adcb
mov
fs
movsb
jg
outsl
lods
or
arpl
inc
xchg
xchg
inc
push
aam
push
fsub
push
dec
inc
cmp
and
add
cld
cli
outsl
jle
mov
jnp
cmp
les
lea
or
scas
stos
stos
push
in
cmpsl
jb
inc
fwait
mov
fcoms
decl
sbb
sbb
imul
mov
dec
cmp
dec
enter
test
xor
daa
outsb
dec
add
mov
data16
orb
or
dec
nop
insb
sub
movsb
mov
das
pop
mov
clc
addl
cmc
mov
sbb
out
test
stos
xchg
enter
loopne
andb
in
inc
cli
xchg
jp
andb
test
jns
push
aad
int
andb
data16
xor
mov
nop
dec
and
scas
popa
inc
movsb
jno
insb
sub
nop
test
sub
inc
sbb
lods
insb
inc
fsubs
xor
mov
arpl
movsl
or
nop
cltd
mov
xchg
mov
test
mov
lock
pop
push
xchg
stos
inc
inc
inc
xlat
cmp
jo
test
jo
push
dec
jnp
mov
dec
adc
dec
sub
inc
or
and
dec
popa
lods
out
punpckhdq
or
push
cmp
mov
xchg
lods
or
clc
imul
xor
stos
cmpsl
pusha
stos
push
dec
sbb
test
enter
or
dec
enter
inc
mov
inc
push
inc
lock
inc
dec
jnp
stos
pop
in
lahf
test
dec
cmpsb
movsb
push
lds
daa
push
js,pn
push
and
test
cmp
sahf
je
daa
fadd
jl
dec
dec
movsb
sbb
pop
push
outsl
pushf
and
adc
mov
inc
sub
test
subb
pop
pop
xor
jg
aam
dec
push
test
repnz
sub
ret
dec
push
movsb
ds
rorb
test
jno
fcoms
cwtl
dec
sbb
mov
nop
cmp
and
inc
fmuls
lods
pop
fdivrl
in
xchg
dec
lods
cwtl
mov
mov
ljmp
je
pushf
and
xchg
mov
ljmp
pushf
mov
xchg
sbbb
mov
mov
jmp
xchg
or
add
sbbl
pop
flds
outsb
and
sub
xor
cmp
inc
cmp
cwtl
es
pusha
es
leave
xchg
push
and
push
pop
dec
push
xchg
mov
and
dec
cmp
out
sub
mov
mov
push
inc
in
stos
add
sub
or
pusha
imul
ficompl
cmpsb
lea
hlt
jb
mov
hlt
push
lret
fistps
fimull
xor
fldl
call
jp
adc
aas
lea
lock
sub
and
or
fcoml
inc
cli
or
push
pusha
jns
dec
mov
scas
pop
rcll
jp
mov
loopne
imulb
cmp
int
ret
test
icebp
into
arpl
mov
mov
test
sub
in
mov
int
mov
ja
or
ret
mov
add
fsubp
add
xlat
push
pop
out
pop
jne
sbb
cli
add
int3
stc
add
cmc
ret
popa
mov
pop
repz
or
jb
mov
in
std
ret
add
stc
inc
cli
ss
dec
jo
adc
iret
lds
rorb
hlt
leave
in
adcb
jle
in
mov
add
add
jb
xor
iret
scas
and
into
cld
jae
or
jecxz
test
std
loopne
cld
push
popf
pop
jmp
dec
ffreep
daa
sbb
clc
push
repz
jmp
loope
sbbb
clc
in
xor
movsb
das
cld
aad
cwtl
sbb
movsb
popl
popf
push
sub
ffree
movsb
and
add
or
adc
bnd
stos
outsl
mov
lods
loopne
fiadds
lock
ljmp
scas
mov
hlt
fucom
dec
loopne
add
jb
je
mov
rclb
stos
fimuls
lcall
xor
rcll
movsb
adc
jmp
nop
mov
and
jl
adc
push
stos
stc
or
cld
sti
nop
mov
dec
faddp
clc
push
mov
into
xchg
sub
jmp
adc
xor
pop
jb
and
and
inc
int
jecxz
mov
and
lcall
fcompl
mov
icebp
fimuls
out
dec
xor
xor
push
imul
sub
sub
pusha
insb
inc
bound
aaa
sub
cmp
insb
leave
je
out
add
cmp
subb
inc
sbb
out
mov
or
mov
out
or
adc
mov
cmp
add
shlb
loop
daa
xchg
cld
loopne
stc
dec
shrl
dec
mov
pop
int3
adc
les
dec
and
mov
push
pusha
sbb
sbbl
scas
add
cmc
clc
mov
jb
gs
aam
mov
out
pop
fs
icebp
cmc
in
or
aam
add
xor
mov
mov
stos
xchg
lods
add
pop
pop
in
test
cmp
xor
lret
loop
sub
cmpl
or
mov
jb
jl
adc
pushf
in
in
cmpsl
jp
pop
enter
decl
ljmp
aaa
xchg
push
mov
inc
mov
or
cmp
pop
fidivrs
pop
dec
jg
pop
jbe
adc
aas
push
and
cld
and
add
add
ret
ret
push
sub
js
xor
test
enter
loopne
mov
add
pop
push
insl
lret
test
pop
xchg
add
idivb
sbbl
xor
cmp
lock
lret
add
fucomi
cmp
jl
subb
xchg
subl
stos
push
sbb
cmpsb
adc
imulb
cmpb
or
shrb
push
pop
data16
and
and
rcll
data16
adc
fstp
test
xchg
inc
pop
push
push
mov
pushf
mov
dec
inc
inc
ljmp
xchg
push
les
popa
cmp
jne
push
pushf
ljmp
dec
enter
jne
test
arpl
and
shll
sub
sub
js
les
jno
push
fs
dec
addb
dec
popa
cmp
jb
pushf
cmc
push
mov
rolb
pop
mov
dec
mov
jecxz
insb
adc
cld
sub
pusha
cmp
imul
pop
and
or
and
jle
or
imul
fs
adc
and
pusha
inc
rcl
pop
add
sbb
loope
cmp
jo
popa
aad
mov
shll
fstps
xor
mov
cmp
cld
jb
lock
inc
inc
push
out
fistpll
insb
nop
outsl
enter
sbb
insb
outsl
into
imul
pusha
mov
inc
bound
and
mov
jp
ss
xor
sub
pusha
insb
ja
outsl
in
adc
xchg
mov
addr16
pop
push
xchg
jecxz
add
popa
outsl
mov
cmp
mov
stos
cs
inc
add
inc
mov
adc
fs
jno
pop
repz
jp
stos
pop
imul
out
je
jno
jg
jge
push
inc
sub
popa
les
nop
push
insl
adc
push
inc
jg
jecxz
inc
std
mov
nop
pop
pushf
std
jnp
push
ds
mov
xchg
lea
stos
dec
push
and
fstl
add
js
negl
orb
or
jno
ret
jo
jns
int
movsl
cmpb
xchg
jge
pop
in
bound
in
in
push
aaa
mov
addl
or
gs
mov
and
int3
rcrb
popf
imul
sti
xchg
pushf
add
popf
inc
add
mov
mov
mov
outsl
pop
stos
xchg
fs
push
add
lods
push
jnp
sti
iret
sub
nop
inc
and
dec
or
sbb
test
inc
subb
and
pop
push
insl
pop
and
or
aad
dec
jae
inc
cmc
inc
rcll
call
push
sub
addl
shrb
aas
dec
js
pop
and
lock
lock
add
dec
out
out
xchg
ficomps
fsub
cld
das
popa
dec
cld
aad
inc
js
or
or
and
xchg
sahf
repnz
dec
xchg
pop
pop
xor
out
ljmp
cmp
inc
pop
ss
and
jno
loop
pushf
popa
sbb
pushf
lret
xchg
xchg
sbbb
fs
popf
jo
mov
jle
pop
fs
xchg
dec
pop
pop
sbb
imul
adc
sbb
jle
outsl
out
lods
in
xchg
ret
adc
lcall
dec
pop
cmp
mov
bound
dec
xor
fsubr
inc
push
dec
mov
xchg
push
adc
outsb
adc
jecxz
mov
mov
sbb
adc
mov
mov
test
mov
mov
rep
cmp
sub
or
adc
pop
gs
int
ljmp
fdivrl
push
lret
pop
int3
xchg
xchg
ljmp
inc
out
mov
xchg
aam
aas
inc
cmp
sahf
fnstenv
shrb
fwait
stos
push
or
stos
aam
jne
enter
mov
push
popf
icebp
mov
test
int3
cmc
shl
lods
xor
movsb
testl
jne
or
dec
hlt
loop
sti
jae
push
jne
jnp
mov
cmp
mov
daa
xchg
pop
push
adc
inc
daa
int3
mov
fisttpll
push
stos
fwait
test
in
xor
mov
mov
fcoml
jne
test
xor
cmp
mul
inc
stos
jo
dec
sub
nop
push
insb
pop
and
jo
test
mov
mov
lods
mov
mov
rol
enter
fsubrl
in
je
hlt
call
sub
mov
xor
xor
cmp
push
sub
inc
pushf
sahf
sub
leave
ret
pushf
stos
scas
insb
cmpsl
and
sbb
stos
es
stos
cwtl
xchg
test
stos
lods
movsl
pop
dec
movsb
andb
lods
pushf
xchg
iret
jg
movsb
jae
jno
fs
andb
mov
and
ljmp
inc
nop
xchg
insb
inc
and
scas
test
xor
iret
xor
xor
and
adc
and
adc
pop
std
adc
out
push
fldl
lods
mov
lods
lods
sub
mov
push
xor
nop
xchg
fadds
aad
mov
adc
xchg
ss
or
repz
push
push
decb
test
jae
ljmp
lcall
add
arpl
out
push
in
lods
sbbb
aam
scas
xorl
jp
mov
adc
movsb
sbb
addr16
js
in
mov
jns
hlt
adc
nop
push
add
mov
xchg
pop
jo
test
pushf
mov
nop
in
lcall
cwtl
sub
nop
mov
pushf
xchg
cmp
mov
int3
xchg
mov
bound
xor
xor
mov
das
dec
inc
add
xor
mov
fwait
stos
mov
adc
xor
mov
jno
push
sbb
test
and
movsb
fcomi
xor
jg
dec
xchg
adc
ja
jmp
jb
les
mov
repnz
mov
cmpsl
mov
je
mov
mov
mov
enter
sarb
sub
mov
push
jo
scas
sub
mov
mov
jo
test
add
test
and
cwtl
jo
fwait
sub
mov
and
sahf
jo
popf
sub
nop
dec
insb
xchg
and
outsl
push
xchg
rcrb
sbb
push
ja
xor
aam
jo
js
nop
mov
mov
enter
insb
stos
jmp
cwtl
adc
popa
jno
xchg
jns
ljmp
mov
stos
xchg
mov
test
jle
js
jb
sub
cmp
or
sub
mov
nop
subb
xchg
inc
jo
sbb
nop
fisubrs
mov
jne
jle
jns
pop
nop
pop
insb
cmp
es
push
jo
fisubrl
aad
mov
pushf
jmp
stos
push
push
xchg
ss
pop
sub
mov
sub
fwait
mov
jae
sub
cmp
adc
mov
in
fnstenv
inc
xchg
aad
jae
js
mov
xchg
and
mov
mov
mov
cmp
bound
mov
mov
adc
mov
js
dec
je
cld
mov
nop
jmp
movsb
pushf
mov
pushf
or
jge
stos
mov
pop
pop
cmove
pusha
lock
les
stos
jno
loop
sbb
or
xchg
stos
xchg
push
mov
inc
subb
fs
pop
pusha
pop
clc
fs
jo
int3
pop
insb
or
jp
imul
scas
hlt
popa
test
mov
push
shlb
insb
lods
shlb
js
sub
xchg
jno
in
and
mov
stos
lods
xchg
cmp
stos
sbb
xchg
pop
inc
lods
sub
cmp
mov
dec
movsb
arpl
pop
mov
xchg
inc
jg
test
daa
xor
xor
adc
xor
les
je
test
in
scas
repnz
jb
repnz
movsl
sahf
movsb
nop
shlb
sahf
xor
mov
jmp
adcb
repnz
mov
les
incb
or
out
pop
dec
hlt
in
mov
mov
lcall
inc
push
mov
pop
jno
scas
daa
mov
cmc
adc
xor
sti
mov
in
imul
out
aam
lret
xor
mov
cli
and
clc
das
dec
mov
lea
mov
jb
xlat
es
mov
mov
arpl
into
ds
mov
mov
mov
push
fs
lock
loopne
mov
pop
in
outsl
dec
call
push
mov
fwait
rcll
outsb
cmpsl
int3
popf
test
jnp
cs
jmp
addr16
jb
mov
and
jg
add
aaa
popa
ror
push
ja
mov
sub
and
in
les
mov
hlt
pusha
movaps
jecxz
mov
pop
xor
push
sub
pop
mov
aaa
in
mov
xor
push
mov
mov
push
lock
aas
insb
mov
mov
mov
stos
fstl
inc
scas
xchg
mov
aad
daa
lods
sbb
hlt
icebp
loope
dec
mov
rcrb
jecxz
in
cmpsb
xchg
xor
jae
out
or
mov
dec
dec
add
cmp
mov
ja
jb
iret
fbld
xchg
cmc
fmulp
cmpsb
repnz
out
xor
shlb
lock
mulb
pop
into
jmp
and
jns
jo
out
xchg
sbb
and
cmpsb
pop
xchg
add
mov
nop
xchg
out
sar
mov
sub
jp
pop
pop
repz
xchg
mov
movb
das
lahf
mov
jnp
jnp
lret
mov
aaa
or
mov
clc
push
cmp
xlat
pop
mov
push
cmp
lods
xor
mov
push
jno
hlt
or
mov
jecxz
xor
cld
hlt
mov
mov
fsubrs
lods
cltd
add
movsl
shrl
push
mov
out
xor
lods
mov
sbb
jge
xchg
movsl
inc
cwtl
loop
mov
imul
jnp
sub
xor
add
jo
std
movsb
mov
jle
gs
push
ja
dec
xor
pop
mov
hlt
repnz
mov
int
mov
pop
and
xor
dec
push
mov
and
aaa
mov
out
in
mov
push
fsubrl
cmp
imul
jbe
sbb
cwtl
xor
push
pop
cwtl
test
insl
cwtl
aam
scas
repz
leave
scas
mov
sbb
inc
mov
sbb
int
scas
inc
cmpsl
sbb
in
scas
inc
cltd
pop
mov
jge
mov
adc
arpl
mov
scas
xor
popa
sti
mov
adc
mov
flds
cmp
mov
adc
adc
adc
lods
cmp
push
xor
sub
ss
jl
mov
adcl
xor
movsb
jl
ja
mov
pushf
test
stos
lods
movsl
cld
xchg
out
inc
test
movsb
iret
jl
xchg
outsl
and
inc
repz
cwtl
mov
pop
fcomp
cmp
fwait
movsb
lahf
adc
pop
add
imul
sub
xor
cmpsb
fwait
pop
jo
xchg
in
lcall
jnp
cwtl
push
jl
jae
dec
xchg
xor
push
cli
movsb
xchg
push
xor
loope
xchg
dec
xchg
cwtl
jl
dec
insl
xchg
pop
xchg
dec
pop
mov
repz
je
dec
repz
push
jns
jle
in
xor
movsb
mov
mov
jo
xchg
nop
aas
cmp
lcall
cli
insl
xchg
jno
clc
xchg
test
jb
rolb
cwtl
addl
add
mov
stos
jbe
mov
inc
jg
adc
inc
ja
cmpsl
mov
mov
and
adc
pop
pusha
xor
cmovp
dec
adc
push
sub
pop
add
or
cmpsl
lahf
inc
and
inc
or
icebp
mov
imul
insl
jge
subl
push
cwtl
jnp
jecxz
xchg
shll
xchg
xchg
imul
ret
push
mov
subl
and
dec
subl
mov
adc
aam
sub
jmp
sub
sub
sub
sbb
les
das
dec
mov
pop
jns
shlb
test
or
mov
mov
je
xor
sbb
scas
mov
mov
cmpsb
nop
sub
movsb
and
push
sbb
outsb
mov
aam
mov
mov
mov
push
je
push
xor
dec
test
pop
enter
inc
orl
sub
jo
adc
inc
mov
in
inc
xchg
int3
outsl
aas
clc
cmp
cmp
xchg
insb
jo
push
sub
dec
xor
mov
mov
js
cld
adc
rolb
and
mov
mov
movsl
ljmp
mov
cmp
xchg
call
call
call
sub
mov
inc
sub
scas
mov
mov
jo
mov
pop
mov
mov
aaa
mov
sub
mov
adc
mov
in
mov
cld
xchg
lods
jo
pushf
sub
insb
insb
and
arpl
and
js
insb
in
mov
ret
hlt
sbb
mov
and
mov
stos
pushf
cld
test
fs
ss
ret
and
mov
jne
in
aam
in
les
aam
sub
xchg
mov
ss
ret
and
mov
test
or
mov
push
fnsetpm(287
pushfw
in
aam
jno
mov
movsb
mov
ss
ret
and
mov
jne
and
adc
in
add
jno
ret
and
mov
test
xchg
xchg
and
mov
jne
push
cmp
mov
pusha
mov
jge
pushf
xchg
jno
in
test
mov
xor
cld
cmpsb
ror
movsl
xchg
movsb
xchg
mov
loopne
dec
mov
je
mov
mov
xchg
sub
bound
lock
pop
nop
pushf
and
loopne
and
xor
les
xchg
jbe
scas
repnz
lea
out
clc
in
and
scas
int3
js
hlt
je
mov
in
test
test
inc
push
jnp
test
cwtl
dec
dec
xchg
xor
sbb
xchg
sub
js
cmp
jbe
mov
scas
lret
enter
sub
add
call
xchg
sub
xchg
shrb
sub
xor
andb
xchg
jo
cmp
sub
data16
gs
inc
movsb
movsb
arpl
scas
je
je
in
xchg
push
cmp
popa
xor
mov
pusha
movsb
mov
nop
push
test
and
movsb
xchg
insb
jno
in
dec
and
ret
test
movsb
in
lock
mov
test
test
cmpsl
imul
dec
jno
out
jl
jle
dec
popa
imul
mov
test
nop
addr16
insl
sahf
mov
test
xchg
inc
push
gs
inc
jne
sbb
xor
inc
xor
orl
add
lret
cmp
popa
fs
int
push
mov
pop
pushl
and
pop
mov
xchg
inc
pusha
jno
imul
jo
pusha
pop
nop
call
xchg
xchg
mov
and
and
xchg
mov
pusha
loopne
insl
adc
mov
jg
xor
in
xchg
push
or
mov
movsb
xchg
inc
inc
cwtl
push
dec
inc
iret
aaa
or
loopne
jnp
cmpl
iret
test
and
xor
pop
data16
les
pop
lea
inc
js
inc
inc
inc
mov
addr16
stos
xchg
xchg
roll
mov
mov
call
dec
and
mov
mov
sarb
pop
lods
xchg
mov
arpl
repz
jno
stos
dec
jo
ss
hlt
sub
andl
adc
xor
mov
xchg
stos
mov
aam
xchg
add
jne
in
std
mov
mov
jb
pushf
movsb
xchg
jne
movsb
outsb
pushf
sahf
cmpl
mov
movsl
nop
xchg
insb
jne
pushf
and
stos
movsl
sub
mov
es
in
rorb
mov
xor
xchg
movsl
jo
cltd
sub
xorl
push
mov
mov
nop
and
mov
mov
mov
add
scas
mov
nop
xor
sub
mov
mov
stos
xchg
cmc
in
sub
cmpb
jl
test
xchg
jo
hlt
xor
movsb
xchg
sub
and
ret
pop
xchg
in
stos
cwtl
and
mov
lods
cmpxchg
mov
scas
lods
mov
out
lods
lock
xchg
mov
xchg
mov
cltd
lret
stos
ret
test
lods
les
rol
xchg
call
dec
mov
in
stos
in
and
mov
shlb
lods
lock
mov
jmp
mov
cmp
and
push
stos
je
xor
xchg
jnp
das
adc
and
imul
nop
add
push
cltd
sub
loop
inc
arpl
subl
mov
push
jno
rorl
cmc
sub
hlt
dec
mov
stos
xchg
loop
mov
lods
cli
jmp
add
sub
mov
sbb
lods
mov
arpl
les
xchg
sub
int3
rolb
mov
sbb
sub
push
sub
pop
scas
sbb
mov
cmpsb
adc
in
sarb
mov
movsl
and
pop
xlat
mov
repnz
xchg
mov
icebp
cli
or
mov
fdivrl
ret
pop
mov
andl
movsb
fsubl
movsb
loope
je
movsb
lret
shlb
test
ret
push
je
test
shlb
sub
daa
subl
std
mov
lods
adc
xchg
add
add
lods
jg
lock
arpl
daa
lods
xor
mov
cltd
xlat
sub
ret
mov
lods
cmp
xchg
mov
mov
test
movsb
leave
adc
push
fisttps
test
fwait
scas
lds
cwtl
inc
xor
mov
jne
mov
addl
sbb
push
xor
jo
inc
mov
xchg
cmp
in
adc
mov
mov
mov
jo
lock
pop
je
insb
cmp
sub
cld
bound
movsb
sub
lcall
sub
cmp
pop
pop
cmp
add
imul
cld
aaa
sub
lcall
pop
pop
inc
and
test
les
test
pushf
jno
in
mov
lods
push
test
jmp
xchg
test
insb
push
popa
pop
push
imul
out
loopne
stc
jno
mov
mov
xor
mov
les
insb
test
das
insb
inc
ja
ljmp
pop
push
xchg
xor
into
clc
bound
scas
out
lret
mov
mov
imul
cmp
imul
cmpsb
jno
mov
lods
orl
nop
xor
xor
insb
les
xor
mov
push
shrl
mov
shlb
and
mov
insb
xchg
add
insb
cmp
mov
adc
dec
mov
test
adc
inc
je
les
dec
cltd
insb
xchg
lcall
dec
insb
jmp
cltd
mov
dec
insb
jb
xchg
insb
ret
ljmp
and
mov
pop
xchg
nop
icebp
pop
arpl
insl
mov
mov
lods
imul
cmp
and
out
xchg
addr16
jg
xor
inc
je
std
xor
scas
sub
mov
or
jge
nop
inc
std
cmp
xor
scas
xchg
sub
cmpsb
jno
movsw
mov
movsl
sub
test
fstpt
nop
cmp
movsl
nop
ss
xchg
lods
sub
inc
insb
das
cmp
cmpsb
pop
xor
outsb
and
sub
cmpsb
loopne
cmp
mov
jae
std
movsl
or
arpl
mov
movsb
subb
lods
shrb
lods
cld
hlt
loopne
jmp
add
in
lods
push
addr16
rolb
int3
lods
in
nop
rclb
rcll
in
dec
test
sub
insb
lcall
jg
sub
pop
jl
dec
pop
dec
test
dec
pop
dec
cmpsb
pop
and
dec
es
xor
lcall
ret
lods
jl
mov
bound
pop
cmc
fcoml
xchg
shrb
dec
fwait
sub
std
lods
sahf
aam
and
rcl
outsl
dec
xchg
int
lods
aas
in
roll
mov
dec
mov
lods
mov
fwait
mov
mov
iret
jmp
mov
movsl
mov
cli
cmp
jo
dec
mov
mov
mov
les
rorl
shll
imull
cmpsb
adc
in
add
mov
xor
rcl
stc
repnz
mov
pop
les
sub
subb
inc
mov
inc
mov
cmp
orb
mov
mov
cmp
mov
and
sarb
sbb
xchg
mov
xor
xchg
dec
inc
lahf
mov
adc
cltd
mov
cmp
lret
lods
xlat
mov
jns
fmuls
mov
mov
dec
jl
cmp
cli
jbe
inc
js
and
mov
lods
jb
mov
lods
test
je
jne
add
outsb
gs
insb
jns
adc
xor
add
js
das
mov
movsb
mov
mov
aam
aam
mov
daa
ret
ss
and
dec
imul
xor
mov
hlt
test
lahf
mov
dec
sbb
sbb
mov
call
into
cmp
xchg
and
mov
push
sub
mov
insb
cwtl
lods
les
sub
pop
mov
mov
lods
xchg
jo
xchg
sub
lods
dec
mov
popf
movsb
jb
dec
push
mov
scas
ja
mov
test
scas
fwait
xor
mov
movsl
sbb
and
jo
cwtl
test
xor
mov
sbb
call
leave
push
add
das
js
or
data16
aaa
notb
mov
movsb
xor
or
cmp
in
je
mov
xchg
ja
jge
lods
cs
mov
dec
pop
cltd
xchg
pushf
dec
dec
cs
push
dec
movsb
movsb
and
movsb
mov
adc
movsb
dec
lock
jne
xchg
loop
xchg
and
es
or
pop
or
movsb
ja
movsl
scas
movsb
cmc
loope
inc
in
sub
shl
hlt
in
cmp
mov
ds
pop
sub
mov
stc
xchg
loop
jae
adc
push
neg
nop
push
inc
pop
mov
push
inc
cmove
popa
add
lahf
insl
movsb
cmp
arpl
sub
lret
cmp
std
mov
les
mov
mov
std
lock
in
inc
push
jp
add
mov
mov
lret
pushf
adc
fwait
in
pushf
addr16
xchg
imul
push
orb
dec
cmpl
pushf
nop
mov
mov
cs
aad
xor
push
scas
das
sbb
dec
jne
dec
mov
inc
nop
push
imul
cmp
adc
bound
fadds
pushf
inc
and
stos
cmp
bound
and
mov
push
inc
adc
test
lret
lcall
xchg
pushf
and
jecxz
and
push
adc
aaa
and
test
mov
cmpsl
pushf
mov
orb
lods
cmc
in
inc
das
cmc
out
sti
push
adc
sbb
jb
outsb
insl
jnp
jno
setl
jle
and
sarb
pop
movups
cmp
push
xor
addb
add
sbbb
mov
pushf
and
call
jge
adc
xchg
jns
pushf
loope
xchg
dec
int3
xchg
pop
addb
or
pushf
imul
loop
pushf
and
imul
dec
push
push
hlt
cmp
xchg
adc
mov
add
xchg
rclb
sub
ds
and
sti
bnd
sbb
scas
fadds
mov
add
pop
push
xor
xchg
outsb
sub
bound
aam
inc
aam
aam
aam
pop
sub
scas
dec
or
in
pop
push
cwtl
jo
inc
cwtl
cmp
mov
adcl
ljmp
lods
xchg
data16
ret
lods
mov
sbb
stos
and
stos
jo
jb
das
sub
xor
shrb
lods
push
mov
pop
dec
lock
sbb
xchg
decb
scas
xor
lods
mov
incb
xchg
lods
xor
mov
mov
push
mov
inc
popa
inc
dec
inc
dec
dec
dec
pop
fs
or
push
pop
call
mov
test
pop
dec
xchg
jl
push
mov
test
sahf
and
and
xchg
scas
push
pop
xchg
bound
sub
inc
cwtl
adc
cmp
pusha
push
sbb
jnp
test
popa
cmp
push
jmp
shlb
test
imul
stos
dec
or
nop
pop
in
and
ja
cltd
xchg
faddl
push
and
xchg
lods
pop
scas
shll
shrl
ljmp
pcmpgtb
nop
and
inc
addb
jmp
xor
call
and
fs
xor
lret
push
push
xor
ss
fs
leave
jl
subl
cwtl
dec
gs
lcall
mov
fs
stos
pushf
nop
mov
into
inc
push
in
pushf
mov
je
call
stc
mov
cmp
mov
add
fs
adc
je
mov
mov
insb
xor
xchg
lods
xor
push
dec
add
inc
cwtl
call
cmpsl
imul
outsl
lahf
and
pop
dec
arpl
jb
add
mov
mov
mov
and
jno
xlat
gs
pop
lock
xchg
mov
pusha
popa
fmuls
popa
sub
mov
jae
cmp
and
scas
pop
mov
and
mov
mov
imul
push
jbe
mov
lcall
cmc
sbb
mov
test
rcll
mov
push
movsb
adc
cwtl
dec
aam
aam
sbb
mov
push
hlt
jl
sbb
cmp
sub
jl
mov
mov
mov
mov
pop
outsb
loopne
out
movsl
mov
aam
rcll
sbb
call
iret
aam
adc
inc
test
call
lret
loope
push
cmpsb
jge
mov
xchg
enter
in
or
icebp
cmpsb
mov
push
inc
push
imulb
inc
xor
popf
outsb
dec
inc
lods
cwtl
fsubrl
in
cwtl
jp
or
pop
xchg
popa
nop
mov
jne
mov
mov
pop
je
mov
mov
es
xchg
test
jecxz
or
dec
mov
push
or
and
arpl
dec
add
je
jo
stc
push
jmp
mov
inc
aas
popa
addr16
sti
and
pop
popa
test
call
cmp
pusha
lahf
and
mov
adcl
jg
test
inc
mov
adc
dec
ljmp
push
sbb
nop
dec
dec
xchg
orl
sub
jb,pn
mov
insb
and
into
repnz
imul
subb
dec
js
jb
rorb
imul
mov
mov
outsb
sbb
add
push
pop
mov
insb
adc
clc
jno
dec
xor
imul
xor
daa
je
fwait
bound
popa
pop
test
andl
lret
pop
imul
xor
packssdw
test
mov
ss
bound
xchg
pushf
frstor
cmp
push
and
push
daa
mov
and
add
pop
or
icebp
cmp
xor
ds
push
dec
movsl
pop
push
mov
aam
aam
jmp
andps
pushw
mov
fdivr
and
xorb
bound
imul
stos
outsb
nop
xchg
bound
mov
add
dec
imul
lods
cmp
mov
imul
call
int3
aad
xor
in
jbe
loope
push
dec
xchg
movsb
out
popa
jno,pt
xchg
pusha
mov
inc
sbb
shll
cs
jbe
adc
jae
and
lea
jecxz
push
adc
push
jno
push
inc
mov
nop
aad
sbb
lret
xor
xchg
mov
gs
xor
xor
sub
sub
jb
in
mov
dec
push
jb
shll
dec
mov
subl
out
cmpsl
pop
jb
je
dec
pop
subb
cmpsb
cmp
fcmovnbe
repz
jno
dec
sub
sbb
ss
aam
stos
push
and
add
dec
fwait
or
adc
lahf
data16
nop
jne
jl
pop
les
lea
pop
clc
pop
sbb
test
insl
mov
adc
sub
adc
sbb
stc
aam
or
daa
popf
dec
and
mov
adc
adc
xchg
rolb
rorl
add
sbb
mov
mov
add
mov
aam
inc
xor
mov
sbb
test
mov
fs
sbb
int
sbb
in
popa
lahf
push
scas
xchg
dec
movsb
jl
rolb
out
in
sub
repz
nop
push
dec
out
dec
xchg
ljmp
add
jl
sbb
popf
imul
xor
ficomps
xor
xor
inc
rorb
jmp
rcrb
shlb
sbb
lock
push
lcall
add
xchg
loop
xchg
pop
mov
dec
scas
dec
scas
call
adc
push
scas
push
aas
cmp
push
data16
out
adc
imul
pop
xor
shrl
ja
cmpsb
in
insl
lock
cmp
rorb
mov
xchg
outsb
shll
and
insb
data16
jno
shlb
dec
push
sub
and
xor
xchg
pop
test
bound
pop
gs
ret
imul
mov
sahf
jbe
xor
and
sub
push
mov
add
adc
lock
out
data16
add
arpl
clc
aaa
or
lret
pop
lret
ret
cmp
ret
push
shrl
mov
cs
jp
and
xchg
nop
repnz
inc
jmp
aam
lods
dec
inc
sbb
add
data16
push
mov
xchg
jo
push
nop
in
ret
mov
sub
bound
shll
push
mov
mov
pop
mov
scas
mov
cmp
ss
test
push
xor
out
xchg
loopne
jl
jle
push
push
cwtl
stos
jo
and
and
fisttps
incb
scas
test
arpl
pushf
adc
and
cs
iret
cmp
sub
pusha
lods
in
iret
adc
xchg
in
jmp
lods
cltd
mov
cwtl
push
dec
sbbl
outsl
movsb
nop
cmpsb
mov
mov
sahf
loopne
lcall
xlat
push
sub
mov
mov
xchg
mov
lea
repnz
adc
test
test
outsl
adc
push
xor
stos
in
int3
mov
push
mov
test
mov
shlb
xchg
push
cmp
insb
dec
sbb
mov
cld
pop
nop
push
pushf
mov
dec
sub
push
jp
xor
push
ds
mov
sbb
imul
lods
mov
lcall
stos
lret
push
mov
fwait
rcll
adcb
pop
sahf
push
jbe
mov
sbb
jae
mov
push
test
and
push
stos
xor
sbbl
adc
lods
je
insl
orb
pop
cmpsb
dec
je
inc
pminsw
fadds
pop
and
push
hlt
pop
jp
dec
pop
lds
dec
xor
mov
int3
adc
scas
pop
insb
inc
mov
and
xchg
mov
pop
dec
arpl
xor
adc
sbbl
scas
push
xchg
ljmp
pusha
sbb
daa
rcrb
lods
jle
pop
xchg
mov
push
jb
in
cmpsb
lcall
je
js
cmp
lret
push
mov
rdmsr
out
test
out
jg
xchg
xor
pushf
lock
dec
iret
xchg
dec
dec
xor
repz
leave
mov
or
mov
and
push
jl
sbb
add
js
xchg
movsl
push
push
and
sub
sub
rcr
ss
xchg
pusha
lds
lcall
cmp
adc
inc
sbb
adc
inc
roll
mov
sbbl
repz
xor
insb
in
xor
ds
inc
cli
add
outsb
arpl
dec
stos
ror
popa
mov
je
pushf
jg
test
jecxz
xchg
aas
out
mov
test
ret
jb
rcrl
arpl
insb
dec
in
rclb
push
or
inc
lea
in
stos
mov
mov
sahf
out
sub
push
push
and
ficoml
add
mov
push
fsubrs
dec
in
clc
scas
pop
adc
lea
mov
loopne
mov
fisubl
scas
aas
stos
repnz
fsubl
fs
mov
mov
dec
pop
ret
ljmp
jl
or
daa
adcb
fwait
pop
imul
mov
push
cs
or
popa
pop
cmp
pushf
fisubs
loop
xchg
xlat
ss
mov
sub
mov
mov
inc
arpl
jecxz
dec
pop
adc
shrb
xchg
xchg
sbbb
fs
xor
xor
repnz
pop
fs
repnz
and
xchg
sub
and
dec
cmp
sub
clc
push
dec
lock
adc
push
pop
movsl
test
jo
inc
arpl
data16
and
test
cmpsl
pop
sbb
jbe
mov
daa
in
and
lds
pop
ficoml
fsubrl
pushf
push
push
cmpb
cmp
push
and
int3
sbb
sarl
mov
xor
sbb
push
jmp
pop
stos
and
lock
push
sub
mov
stos
lock
test
shll
aaa
push
cmpsl
cmpxchg
pop
mov
sbb
push
add
sub
mov
int3
fs
test
imul
bound
inc
jno
ss
mov
mov
add
sbbl
push
sbb
imul
xor
repnz
xor
mov
mov
loop
lods
xchg
mov
stos
int3
aaa
lds
and
pop
mov
dec
pop
out
dec
cmpsl
dec
sbb
mov
scas
jl
jno
xorb
mov
iret
pop
mov
inc
pop
push
xchg
subb
mov
mov
jo
mov
mov
dec
push
xor
dec
jg
popa
scas
dec
orb
mov
out
jae
xchg
stos
push
pusha
jp
adc
inc
loope
fwait
shrb
or
jo
fmuls
addr16
rdpmc
or
arpl
popa
cmp
dec
nop
dec
das
loop
mov
scas
xor
inc
jno
dec
sahf
lea
and
aas
push
dec
fildl
push
push
xor
dec
inc
inc
inc
test
fst
mov
outsl
es
ljmp
inc
jae
sbb
lods
add
cmpsb
es
imul
out
sbb
xor
inc
hlt
lods
mov
lea
gs
clc
cwtl
orl
sub
insl
jae
jg
jmp
jecxz
fcompl
inc
dec
inc
and
pop
lea
scas
jnp
jmp
jecxz
fildl
shl
int3
movsb
jp
pop
inc
xor
lock
cwtl
inc
jns
pop
stc
xchg
in
push
shrb
fdivs
ja
jmp
jecxz
fldt
pop
lret
xor
add
lock
fucomp
rcll
and
adc
addb
cmpb
data16
vpshufd
sub
xlat
jl
jnp
xchg
cmpsb
jp,pt
data16
sub
popa
xor
ja
test
cmp
outsl
rolb
lret
jno
mov
rcrb
mov
inc
rclb
dec
jns
js
sarb
jp
jp
jns
js
cmpsb
jle
inc
cmp
xor
or
mov
xchg
js
and
add
cld
icebp
in
ja
rolb
xlat
ror
mov
jp
jns
js
ja
cmpsb
mov
es
in
movsl
and
and
xchg
insb
sub
enter
shr
jecxz
mov
cmp
jns
js
ja
jbe
cmpsb
mov
pusha
jns
js
ja
jbe
cmpsb
lods
addl
push
movsl
in
gs
xor
push
and
adc
or
jmp
rorb
inc
enter
rcrb
enter
sarb
cmpsb
jns
dec
pushw
es
repnz
fisubl
xor
jnp
and
jp
shrb
int3
or
rol
fdivrs
je
dec
push
sbb
add
mov
lea
aas
dec
sbb
ja
jmp
jecxz
fisttpl
shl
int3
mov
inc
cwtl
inc
nop
ds
and
jne,pn
cmpsb
scas
jne
data16
pop
in
movsl
in
pop
shrl
test
add
cs
mov
lea
inc
dec
adc
rcl
sbbb
jecxz
fistl
shl
int3
test
ds
cmp
cmp
mov
andb
movsl
sub
shll
and
imul
int3
test
mov
push
insb
ret
jl
pop
push
xchg
xor
jmp
pop
pushf
xchg
jbe
inc
mov
cmp
ss
roll
fildl
bswap
cmc
ret
in
mov
inc
inc
inc
cmp
xor
cmp
cmp
ss
pop
or
xchg
xlat
sub
and
adc
ror
les
int3
dec
sbb
loopne
mov
xchg
jns
mov
aam
sbb
cli
jmp
fsubl
popl
push
cmp
mov
pop
les
ror
sarb
ds
cmp
cmp
xchg
mov
inc
xchg
jb,pt
pop
cmp
jo
mov
adcb
ljmp
jle
in
cmpsl
jge
and
dec
add
icebp
pop
loope
sarl
shlb
les
or
adc
std
fcmovnu
rcl
xorb
or
mov
jp
jns
js
ja
jbe
jne
mov
andb
mov
cltd
ja
and
push
add
icebp
sub
shr
or
shll
jecxz
inc
lret
ds
and
adc
les
pop
sbb
inc
fdivl
lods
test
push
adc
add
shr
pusha
xchg
addl
inc
ds
pop
adc
mov
cmpsl
lea
sub
popf
jg
addl
push
cmp
cmp
cmp
shrb
jp
jns
js
ja
cmpsb
fwait
jge
mov
gs
movsl
sbb
and
and
push
and
in
fsub
mov
outsb
jnp
and
adc
add
icebp
leave
in
jp
sbb
int3
cmp
cld
add
xchg
jns
pop
jb
dec
push
add
out
pop
es
in
scas
mov
icebp
movsb
jge
mov
pop
cmp
shll
cwtl
fwait
jbe
pop
jl
pop
push
out
xchg
in
mov
js
or
shrl
mov
sub
and
cmc
lret
mov
leave
xor
push
fadd
subb
inc
inc
jge
xor
cmp
ss
inc
jbe
outsb
ds
cmp
cmp
cmp
pop
pop
xchg
inc
push
cmp
mov
mov
or
add
fidivrs
jp
jns
js
xchg
test
iret
cmpsb
test
es
adc
out
gs
and
add
icebp
out
mov
push
das
shl
sub
lahf
jmp
jecxz
inc
shr
rol
mov
addb
fistl
xor
stc
icebp
loopne
mov
rcrb
fadd
jno
jne
nop
or
lods
in
push
lea
std
dec
inc
mov
mov
ds
cmp
cmp
cwtl
mov
push
push
and
fldt
xchg
adcb
inc
add
icebp
out
loope
ror
les
int3
sbb
adc
jmp
mov
xchg
jp
jns
js
ja
jbe
jne
cmpsb
test
bound
cmp
es
scas
jl
jmp
jecxz
fisttpl
and
mov
int3
addr16
rol
mov
insb
push
js
ja
cmpsb
test
es
inc
shrl
jecxz
frstpm(287
rcr
lret
mov
jns
mov
ljmp
mov
pusha
mov
fs
pop
daa
push
adc
loopne
xchg
adcl
data16
push
shl
rcr
fld
mov
cli
cmpb
cmp
cmp
cmp
shlb
mov
sbb
movsl
or
in
dec
and
sub
add
mov
insw
es
in
movsl
sti
gs
sub
cmp
cmp
adc
loopne
mov
mov
inc
adc
or
cmp
cwtl
stos
jl
pop
mov
ficoms
test
insb
pop
es
in
movsl
out
test
adc
daa
or
je,pt
insb
imul
inc
insb
push
mov
pusha
jnp
push
jp
jns
js
ja
cmpsb
jle
jae
dec
sub
cmp
adc
inc
inc
les
cwtl
test
jle
gs
inc
xchg
fsubs
int
xchg
add
movsb
mov
int3
popa
enter
xchg
mov
bound
inc
jmp
or
in
js
xchg
push
dec
xchg
sub
jbe
adcb
xor
xlat
xorl
lret
cmc
ret
ret
mov
gs
push
ss
jnp
xchg
jns
cmp
push
jnp
daa
jp
jns
js
ja
jbe
popl
jmp
push
rcrb
adc
jns
sbb
out
lcall
pop
adc
add
ja
iret
hlt
jbe
adc
ljmp
mov
test
aam
fxch
mov
mov
push
mov
imul
xchg
jle
in
or
dec
add
roll
insb
sub
test
pop
jg
loopne
stos
es
lea
test
xchg
shrb
fadds
lods
add
rorb
jmp
shrb
or
jbe
ljmpw
and
lea
pushf
or
into
inc
lahf
addr16
mov
jecxz
jnp
cmp
push
add
test
clc
fdivl
adc
sub
or
jl
xor
movsl
add
mov
add
adc
jle
aam
adc
add
loop
xchg
jp
pop
adc
cld
mov
jmp
mov
pop
loop
add
lock
les
push
orb
xchg
lods
outsl
andl
and
sbbb
shr
lret
ret
inc
bound
shr
int3
int
scas
jnp
fs
jns
js
xchg
sahf
jg
mov
jl
xor
or
jbe
sub
jl
push
cmp
cmp
pop
jns
lods
pop
push
cwtl
pop
sahf
cmpsb
sbb
pop
cmpsb
mov
pop
sub
push
push
lods
aad
popa
pop
repnz
clc
nop
addl
ficoml
mov
shlb
mov
mov
push
jg
jp
int3
rolb
sub
bound
icebp
add
bnd
add
sbb
push
shll
pop
mov
jp
ds
ds
loop
test
jnp
orb
pushf
sub
dec
enter
xor
rclb
push
rclb
or
les
cld
adc
pop
sbb
repnz
sbb
inc
addb
dec
cmp
cmp
cmp
fs
movsb
xor
movsb
aas
test
cmpl
pop
mov
ficompl
imul
push
das
cmc
and
stos
adc
push
sub
jnp
mov
jns
ja
dec
jbe
or
mov
int3
xchg
jecxz
lods
jg
lea
mov
jecxz
fcoml
dec
pop
adc
js
xchg
pop
jl
fs
inc
cmp
jae
mov
sbb
call
and
push
iret
shlb
insl
inc
es
jnp
sub
aam
or
data16
pop
in
movsl
xor
and
les
sahf
or
push
std
and
xor
js
xorb
test
andl
xor
and
pop
jle
push
inc
cmp
outsb
js
icebp
insl
mov
ljmp
in
in
cld
mov
ja
aaa
xor
sbbl
pop
inc
and
int3
push
cld
std
jnp
xor
xchg
add
cwtl
jo
pop
pop
push
xchg
shrb
add
sahf
mov
mov
jo
inc
test
and
add
hlt
popl
or
enter
jnp
sbb
add
cmpsb
repnz
xor
js
imul
jecxz
inc
sbb
cmpsl
sub
push
sbb
jo
mov
jl
push
lods
sbbl
repnz
rcrb
int3
or
rcrb
outsl
cmpsb
or
in
stos
in
xor
jl
and
jp
add
add
mov
or
and
mov
xor
fiaddl
inc
cmp
aam
cwtl
jge
dec
pop
inc
xchg
adc
add
cmpsl
mov
out
fdiv
cmp
lcall
fldenv
jno
sub
push
repz
mov
inc
test
jp
outsl
data16
repnz
ja
fs
ds
sbb
sbb
add
jne
push
dec
cmp
xor
mov
jno
test
add
leave
hlt
add
sbbb
cmp
sahf
sbb
cmp
movsl
mov
xor
outsl
jg
rcr
clc
xchg
add
dec
inc
mov
add
jnp
jp
test
and
mov
test
je
or
push
adc
lods
dec
ja
nop
add
clc
jmp
mov
push
rclb
stc
mov
inc
mov
and
adc
mov
fdivrl
mov
sub
adc
lea
cmp
cmp
pop
hlt
mov
sbbb
xor
mov
pop
jo
sub
rol
dec
inc
inc
inc
sarb
sahf
lods
jge
xor
add
jnp
and
je
jns
shlb
int3
ljmp
sahf
jp
push
repnz
jl
dec
xor
data16
dec
push
jl
sub
mov
jl
dec
mov
mov
adc
push
sub
xchg
xchg
ss
cmpsb
lods
addb
jge
and
jl
test
mov
pop
js
push
fs
faddp
shlb
sub
adc
inc
mov
push
mov
repnz
lcall
pop
imul
sbb
ss
imul
xchg
je
jo
mov
jne
or
sub
mov
mov
js
lock
callw
aam
cmp
xchg
lods
faddl
mov
xor
sub
adc
jnp
jp
mov
jbe
cmpb
cmp
cld
push
sahf
and
lods
pop
xor
pop
jnp
push
cmpsb
in
fidivs
jl
cmp
and
scas
outsl
jp
sbb
cwtl
push
pop
cmp
inc
mov
and
fsubl
ja
adc
push
sbb
sub
or
pop
int3
inc
enter
in
je
arpl
push
mov
mov
adc
dec
jl
xchg
stos
jnp
jp
fs
pusha
addr16
mov
repnz
jmp
icebp
mov
sub
xor
cmp
xor
stos
subb
jg
aaa
cmpsb
and
repz
jge
xchg
inc
cmp
cmp
cwtl
sub
loope
push
fwait
add
inc
cli
mov
jns
inc
xlat
cwtl
cmpsb
js
and
gs
movsl
mov
and
movsb
les
cli
xor
nop
mov
push
jne
jne
xchg
adc
mov
jo
pop
test
jmp
dec
dec
sub
inc
and
and
sbb
sbb
or
or
cld
clc
jae
lock
imul
mov
mov
jge
insb
movsl
mov
push
enter
jecxz
mov
xorb
jns
js
ja
stos
test
jb
lods
repnz
or
jbe
bswap
xor
mov
test
dec
shl
xorl
jl
iret
cmpsb
and
aam
popf
jnp
imul
and
ja
insb
nop
jnp
jp
jns
test
mov
sbb
mov
lods
push
jo
movsb
push
mov
icebp
dec
push
ret
cmp
jo
shll
mov
jl
js
je
jo
nop
in
in
jmp
push
jl
mov
fiadds
sarl
xor
add
ja
rolb
aas
enter
xchg
mov
imul
or
xor
xchg
movsb
xchg
in
dec
mov
sub
hlt
mov
addl
jbe
sbbb
cwtl
push
jg
pop
or
xor
sub
jnp
and
sbb
jp
pop
jmp
mov
js
and
add
repz
popa
fdivrl
cld
divb
in
fdivr
sub
cmpsb
subl
sub
cli
cwtl
mov
js
xchg
xchg
inc
mov
mov
or
adc
aas
sbb
lea
mov
jae
popa
cmp
inc
imul
push
ret
jo
mov
push
in
imul
jl
shll
cmpsb
mov
inc
and
adc
js
rcr
pop
mov
aam
inc
int3
mov
lock
xchg
lock
shll
inc
cmpb
cmp
cwtl
stos
jne
pop
pop
xchg
dec
push
inc
xchg
xor
mov
add
ret
test
loopne
adc
aad
mov
xchg
jnp
arpl
add
pushf
push
pop
xchg
xchg
push
nop
xchg
mov
or
test
inc
fdivr
clc
shl
lock
in
mov
cmc
jnp
imul
je
lods
push
push
add
js
stos
jo
psrld
insl
push
dec
repz
and
sbb
je
les
icebp
mov
mov
inc
dec
push
mov
cld
mov
test
call
repnz
ds
dec
add
out
js
in
test
ljmp
insb
mov
push
bound
repz
fistl
lret
dec
ret
dec
mov
xor
out
or
ja
and
stos
inc
popf
in
push
and
call
jne
jne
mov
adc
arpl
mov
lret
ret
ror
ret
ret
mov
js
jnp
lea
and
mov
outsb
sub
push
sarb
les
add
push
ss
pop
xchg
pop
jp
jns
test
ret
rclb
ss
push
jg
cli
jle
sub
inc
jl
jmp
push
mov
les
sub
jp
jmp
jecxz
jl
stos
push
jbe
addr16
js
mov
inc
inc
cwtl
orw
shll
and
ds
test
sti
mov
xorb
movsb
les
mov
jg
rcl
xchg
lock
add
cld
clc
fs
hlt
adc
call
adc
cmpsl
xchg
adc
repz
test
pusha
sarb
les
mov
dec
test
lret
push
pop
push
push
push
lods
fimull
or
rorb
lea
mov
sub
and
rcrb
mov
lods
inc
fdivrl
adc
xor
clc
cmp
sarl
mov
xorl
fildl
inc
fdivs
addr16
jl
test
insb
sub
push
pop
cwtl
js
cli
out
inc
or
adcl
gs
jmp
mov
daa
mov
movsl
dec
adc
or
add
jmp
les
ljmp
cmp
ss
les
call
in
mov
test
cwtl
les
ss
jns
je
outsb
ss
ss
ss
ss
inc
xor
sub
push
xchg
and
sbb
or
sti
push
sbb
xor
xor
inc
cmp
mov
push
adc
xchg
inc
xchg
pop
and
in
or
adc
lcall
es
in
movsl
ret
jno
jge
sbb
mov
lea
orl
mov
movsb
sbb
push
mov
dec
or
dec
dec
mov
sysexit
sub
or
and
or
sub
out
cld
shl
lock
in
faddp
fmul
push
into
cmp
mov
nop
js
dec
pop
fwait
push
xchg
mov
ret
fstpt
ss
gs
mov
adc
sarb
in
sbb
or
dec
mov
cli
push
cmc
xor
loopne
fld
shrb
dec
mov
ja
sahf
cmp
xchg
stos
repz
mov
outsb
enter
stos
push
sbb
out
sarl
xor
adc
xchg
lods
sbb
push
or
pusha
imull
clc
jne
jae
lret
mov
mov
scas
jbe
mov
xchg
and
test
jle
jns
je
je
push
shll
xchg
into
dec
mov
cmp
les
sbb
jne
shlb
pop
mov
mov
ds
iret
pop
pop
xchg
dec
and
sub
rclb
adcb
mov
shrl
push
mov
jmp
jecxz
fcmovnbe
aam
js
mov
jae,pt
pop
lret
decl
xchg
mov
mov
adc
mov
mov
add
rcrb
int3
xchg
sbb
mov
loope
rclb
xor
out
jns
mov
add
jbe
jnp
mov
add
adc
sbb
fildll
sub
nop
push
pushf
adc
or
or
sbb
out
jmp
pop
jl
mov
add
insl
enter
popf
xor
enter
rcrb
mov
xchg
jnp
jne
pop
jne
subb
add
mov
cwtl
jecxz
mov
xchg
loope
inc
loop
pusha
clc
xchg
rcll
xchg
test
icebp
aam
repnz
jbe
mov
imul
jno
stos
jne
adc
hlt
lods
or
lcall
fcompl
mov
jge
jl
lock
in
push
call
repz
mov
int3
mov
rcr
ss
inc
lods
pop
test
cmp
sbb
in
fisubs
jmp
les
push
pop
ret
pusha
xchg
push
adc
push
inc
pop
mov
cmp
xchg
xor
das
outsb
sub
mov
ret
sbb
js
xchg
sbb
jmp
jecxz
adcl
adc
and
mov
out
inc
inc
inc
test
das
mov
cmp
test
mov
jle
jge
fadd
mov
add
clc
lods
mov
add
jp
and
lds
pop
pop
repnz
jecxz
cmp
shlb
enter
push
mov
dec
mov
pop
and
mov
and
sbb
mov
pop
pop
xor
xor
hlt
scas
addl
adc
icebp
sahf
adcb
adc
imul
lret
and
pop
addb
jmp
jg,pt
sub
sub
inc
mov
mov
lods
fsubs
dec
ja
jbe
mov
mov
leave
cmp
inc
popa
inc
push
negl
adc
cwtl
sti
push
ja
pop
pop
in
stos
add
sub
sub
push
xlat
das
iret
mov
les
test
cmp
xor
push
out
xchg
push
mov
xchg
lods
xchg
xorl
sbb
or
arpl
sub
dec
cmp
cmp
lret
sub
in
popf
jge
std
sub
jl
jnp
call
cmp
pop
mov
lods
adc
loope
rcrb
ss
ss
imul
icebp
cwtl
push
and
imul
adc
or
or
test
scas
xor
and
jne
call
mov
gs
inc
push
jne
jne
fcoms
sarb
xor
pop
push
sbb
jne
cmpsb
xorb
sbb
clc
cmpl
icebp
js
mov
jle
jg
les
ror
cmp
and
pop
jp
xchg
push
and
test
ror
or
push
jne
hlt
xchg
loopne
ds
jae
test
in
pop
cmp
push
adc
int
mov
cmp
cmpsb
mov
aaa
data16
sbb
bts
je
movsl
ja
sbb
scas
repnz
data16
cwtl
imul
cmp
adc
adc
xor
sub
test
pushf
push
or
adcl
inc
nop
cwtl
dec
jg
and
inc
add
xor
ds
xchg
sub
and
push
sbb
pop
imul
fisubs
xchg
add
hlt
push
lock
fmul
pop
loopne
out
fadd
aam
rol
int3
ret
dec
sahf
xchg
cwtl
cmpsb
and
rorb
sbb
xchg
jne
jne
jne
nop
in
adc
fadd
push
aam
lods
and
ror
sub
rcrb
push
add
lret
inc
insl
imul
sbbb
mulb
insl
adc
es
cmp
cli
test
jae
rcl
int3
mov
xor
loope
rol
ret
mov
paddq
push
pop
sub
adc
addb
or
js
lea
fildl
lods
push
out
dec
out
lcall
js
ja
stos
dec
jl
repnz
lahf
cmpl
mov
cmp
pop
rolb
adc
jns
sub
push
cmpsb
ja
mov
xchg
cwtl
cmp
imul
nop
sub
and
dec
add
pop
aam
xchg
inc
fsubs
das
dec
subl
xorb
fcoml
add
xor
fidivrs
cli
jbe
and
inc
mov
lds
ja
lret
sbb
cmp
and
mov
ljmp
test
in
dec
sub
test
sahf
into
mov
push
xorb
loopne
mov
sahf
shlb
les
cmp
inc
aad
ss
add
push
dec
mov
or
iret
into
repz
shr
inc
and
in
in
mov
and
sbb
imul
pushf
mov
push
mov
sub
rcr
mov
sahf
loopne
xchg
mov
push
mov
scas
jnp
and
repnz
shlb
std
lods
fstp
cmpsb
enter
es
jmp
shlb
lcall
push
sub
ret
adc
jp
jns
cmpsb
mov
les
pop
roll
das
mov
clc
stos
lret
mov
adc
cmp
pusha
mov
mov
rcrb
mov
jle
jno
jge
and
jl
xor
loope
mov
jnp
push
xchg
shll
mov
mov
les
or
in
js
pop
xor
lods
and
shrl
test
sbb
adc
data16
lea
das
xchg
pop
loop
adc
ficoml
sub
test
lret
sub
icebp
fcomps
addl
in
lea
popa
subb
subl
adc
int
xchg
push
and
mov
jo
dec
mov
vpmacssdql
mov
pcmpeqb
int3
sbb
inc
data16
out
imul
sbb
stos
cmp
push
xorl
jg
cmpsb
jle
jge
inc
sub
jbe
cmp
push
add
sub
sbb
sbb
push
adc
or
dec
push
add
je
les
hlt
aam
in
jne
jne
loopne
stos
fdivrs
jne
int3
repz
les
stos
cmp
imul
fidivrl
jp
sbb
arpl
loope
inc
adc
add
xchg
pop
call
lds
xor
movsb
xchg
test
xchg
xchg
rcll
shll
mov
mov
out
jl
stos
sbbl
jecxz
push
jge
pusha
imull
clc
jle
js
push
stc
and
mov
lea
and
scas
xor
int
scas
mov
stos
xor
sub
adc
mov
mov
fcompl
clc
xchg
popf
sbb
out
mov
js
push
or
mov
xchg
pop
sahf
divb
mov
in
adcl
adc
insb
mov
push
sub
inc
insl
pop
inc
push
xchg
fbld
mov
enter
xchg
mov
data16
mov
fisubrl
aaa
xchg
mov
add
mov
sbb
pop
cwtl
scas
jp
pop
jno
xor
cmc
add
hlt
sub
mov
pop
jnp
push
jp
dec
and
jle
pop
sbb
xor
push
faddl
stc
cmpsb
mov
jmp
cltd
int3
xchg
jnp
xchg
jne
and
xchg
in
sub
and
shrb
bound
in
lods
mov
pop
leave
or
cld
bnd
inc
stos
mov
inc
sub
ljmp
pop
data16
lods
push
ja
and
std
cmp
pop
xchg
repnz
sahf
dec
stos
rcll
dec
nop
repz
push
jg
push
pop
adc
add
push
repnz
mov
xchg
js
mov
outsb
mov
bound
jmp
js
sub
adcl
pop
repz
in
jg
jl
stos
mov
mov
aad
cwtl
cltd
jp
sbb
lea
adc
push
js
test
scas
loopne
aam
sub
push
les
jb
adcb
shl
test
sbb
bswap
stos
scas
dec
test
gs
mov
imul
pop
xor
mov
sub
testb
clc
outsb
clc
in
push
lret
movsb
mov
insb
sub
cmp
pop
stos
stos
loop
lea
ftst
mov
stc
enter
mov
jle
mov
mov
mov
aam
jp
or
jns
fnsave
jne
jne
test
push
mov
add
test
jp
loope
sti
cmpl
dec
mov
jge
jl
ja
mov
leave
cmp
cmp
test
cmp
push
dec
mov
inc
mov
add
cli
jnp
mov
lcall
lea
sub
je
xor
lods
xor
push
jle
rolb
inc
xchg
and
adc
rclb
daa
sub
cmpsb
inc
lock
inc
and
inc
push
sub
adc
ror
aam
mov
mov
lock
xor
lods
push
and
push
inc
xchg
jnp
push
xchg
cmp
hlt
aam
mov
rclb
adc
stos
xchg
in
nop
jle
test
ss
das
sub
push
lods
or
outsb
dec
testl
outsb
pusha
or
pop
mov
cmp
jmp
sub
push
mov
xchg
mov
orl
cmp
repnz
ret
jno
lcall
in
mov
mov
cwtl
xor
scas
inc
pop
inc
imul
mov
js
ja
jne
insb
lods
inc
mov
xchg
mov
es
pop
andl
andb
jl
add
and
int3
clc
xchg
rcr
sti
jecxz
fcoml
ja
lcall
mov
xor
dec
push
les
add
add
ja
pop
xchg
rcrb
pop
jle
jl
mov
pop
mov
lea
repz
sbb
cld
xchg
mov
rolb
enter
sarb
mov
lods
fwait
pop
in
mov
inc
test
push
orb
jo
cmpsb
sahf
adc
inc
int3
cmp
adc
adc
jmp
jl
mov
nop
push
adc
xor
loopne
cwtl
jle
push
push
sbb
mov
sbb
inc
mov
inc
xchg
shll
mov
sbbl
xchg
aad
leave
sbb
push
test
ret
jb
lock
mov
xchg
es
jbe
loop
xlat
sar
sub
dec
add
jnp
in
xchg
push
inc
jnp
sahf
jbe
xor
pop
jne
rorb
push
xchg
xor
adc
in
imul
xorb
insb
pop
jae
push
dec
cmpsb
push
add
in
jo
pop
pop
xor
mov
and
orl
xchg
sbbl
inc
hlt
rorb
jge
add
xchg
push
jnp
in
fidivrs
sub
sub
and
sbb
lods
push
jae
or
cmp
mov
loope
push
ret
mov
dec
test
inc
push
inc
sbb
stos
insb
mov
add
jo
mov
pop
jg
shrb
test
insb
lods
sbb
popf
inc
cmpsb
call
mov
push
adc
shr
lret
fdivrl
ror
int3
pop
mov
clc
pop
sbb
push
jbe
lret
cld
movsl
clc
xchg
mov
pop
xor
adc
stos
insb
mov
push
jo
and
xchg
fistps
adc
mov
les
pop
pusha
cmp
inc
popf
cmp
or
ret
scas
pushf
xchg
and
das
test
loope
sub
or
jle
mov
roll
mov
jns
xchg
cld
adc
pop
and
lock
push
and
or
adc
ja
gs
jecxz
jns
push
cmp
scas
js
and
fsubl
cmp
push
adc
sub
sub
int3
mov
call
loop
imul
notb
test
stos
push
ret
push
ficoml
push
int3
imul
int
cwtl
push
bound
or
js
test
lock
lahf
mov
movsb
insl
mov
das
and
aam
in
or
ret
dec
cmpsb
mov
pop
sub
cmp
cmp
lods
xchg
stc
push
out
jo
inc
cmp
les
popf
movsb
jp
scas
cmp
mov
into
sub
jp
test
enterw
xor
je
cmpsb
out
jbe
imul
ret
and
adc
pop
cmp
adc
push
xchg
dec
test
movsl
ret
adc
xor
shlb
xchg
mov
and
inc
in
jl
pop
jae
xlat
jl
cmpsb
lods
andl
outsl
and
mov
movsb
fs
mov
icebp
fimull
ret
push
mov
ror
mov
pushf
pop
clc
xor
divl
fcomps
insl
imul
das
into
push
ret
shlb
test
icebp
mov
stos
and
and
xchg
mov
and
adc
xor
jp
scas
insb
jae
push
dec
shlb
jne
lea
scas
fsubr
lret
lret
mov
jp
mov
cld
or
mov
mov
hlt
mov
js
mov
xchg
es
es
fs
cmp
pop
test
test
or
les
xchg
mov
in
je
cmp
mov
aam
push
int3
inc
enter
stos
rol
mov
fcomps
pop
aam
sub
adc
stos
ljmp
push
imul
jecxz
jge
xchg
xor
hlt
dec
and
mov
jmp
es
pop
inc
pop
lods
mov
nop
mov
push
xor
cs
ss
scas
mull
mov
pop
pop
cwtl
pop
sub
jne
inc
popl
dec
sbb
lods
jbe
outsl
nop
pusha
or
imul
aad
cmpsl
jg
sahf
inc
xchg
jmp
mov
sub
and
lds
mov
dec
mov
cmpsb
test
stos
mov
mov
push
lock
cmp
ret
bound
out
fs
mov
lods
imul
pushf
jae
mov
mov
lea
xor
inc
gs
repnz
cmp
add
sub
int3
jl
xchg
xor
loope
mov
test
into
ficomps
fmull
mov
repz
mov
push
or
mov
xchg
mov
and
repnz
sub
jno
lock
out
mov
ror
mov
cmp
push
and
dec
sahf
stos
test
cmp
cmp
scas
cmp
pop
jns
lea
jae
and
add
dec
sub
fmulp
jae
add
ss
icebp
test
movsb
fcompl
and
fcomip
ret
test
xchg
pop
push
cli
ror
sub
cmpsb
clc
hlt
sub
jae
ror
lea
ja
cmp
in
push
loop
inc
jno
lods
jb
outsl
daa
enter
jae
stos
dec
test
aam
gs
in
fsubrs
add
repz
ffree
mov
scas
mov
mov
adc
and
lcall
push
xchg
or
out
mov
xchg
enter
test
push
cmpsb
add
sub
shl
gs
sub
mov
cli
ds
ja
test
js
xor
es
out
pop
pop
inc
stos
inc
bound
xor
dec
in
addb
adc
stos
fwait
jle
cmp
repz
dec
and
lods
push
pop
jo
pop
stos
inc
icebp
fadds
xchg
add
and
negb
mov
popf
lods
jbe
pop
ds
adc
lock
les
andl
inc
jns
test
lods
xchg
std
repz
ljmp
dec
movsl
adc
loop
in
xchg
and
fidivrs
pop
jl
repnz
sub
bound
movsl
in
cmp
xor
sub
les
jnp
in
dec
imul
gs
or
mov
sti
or
addb
enter
jge
and
push
adcl
pop
nop
pop
sub
and
push
faddl
scas
mov
push
sub
jle
adc
xchg
cmpb
jns
cld
mov
xchg
push
mov
int3
mov
dec
xchg
mov
gs
les
sub
mov
int3
enter
stos
js
les
mov
add
mov
dec
fcompl
pop
insl
add
xor
call
sahf
jge
popa
data16
or
je
or
nop
mov
std
outsb
mov
scas
sbb
xor
ds
xchg
xchg
addr16
ds
out
jp
scas
mov
imul
pop
nop
bound
and
jl
sub
clc
inc
outsl
pop
fucomip
cmpsb
mov
test
inc
orb
scas
lahf
js
xor
mov
movsb
mov
fs
je
mov
loopne
int3
or
aam
mov
xor
lret
aas
xor
aaa
das
out
push
push
mov
ljmp
hlt
dec
mov
int3
add
xchg
lods
addb
je
xlat
imul
add
sbb
mov
pop
divl
les
mov
mov
pop
pop
mov
push
lods
mov
rcrl
sub
pop
xor
inc
inc
aam
or
xor
jne
addb
xor
in
push
push
repnz
add
pop
lret
data16
inc
and
pop
data16
sub
dec
popf
outsb
adc
enter
xor
cmp
rcrb
bound
in
scas
jle
mov
sub
cmpsb
rolb
sub
repz
mov
cmpsb
clc
mov
jmp
pop
inc
xchg
push
mov
movsb
adc
sub
mov
ret
fadds
cwtl
mov
cld
mov
xchg
dec
mov
sub
int
rorb
adc
xchg
or
test
push
adc
aad
call
pusha
xor
pop
repnz
fcompl
dec
icebp
mov
ret
scas
bound
enter
cld
jae
hlt
mov
call
xchg
lock
enter
mov
sub
fdivrs
xorb
les
test
ljmp
movsb
icebp
mov
les
mov
add
jl
js
je
push
push
into
dec
jnp,pt
fidivs
xor
and
jbe
sbb
ss
mov
jp
push
rclb
and
mov
adc
outsl
xchg
inc
or
movsl
shrb
mov
test
aaa
pop
jae
or
add
dec
mov
cmp
xor
lret
into
hlt
and
scas
test
adcl
loop
imul
aam
and
sub
es
shll
mov
and
mov
jp
cmpsb
scas
jle
imul
jge
cli
nop
int3
pop
js
push
and
negb
movsl
ljmp
mov
inc
scas
cwtl
test
andb
stos
and
xor
scas
mov
mov
sbb
pop
mov
mov
pop
push
adc
pop
cmp
imul
push
lcall
cmpsb
sub
push
por
jecxz
and
fdivl
shlb
cmp
cmp
negl
std
cmp
sahf
mov
sbb
pop
mov
loop
inc
sbb
shlb
int3
aam
les
jb
call
je
les
sbb
scas
ja
dec
pushf
jns
xchg
inc
cmp
push
cmc
xor
xchg
cmp
sub
push
imulb
xor
add
lahf
pop
repz
xor
sbb
jmp
addl
scas
repz
movsb
mov
xchg
rorb
sub
or
inc
jnp
pop
ja
push
inc
lea
lods
shlb
scas
or
loope
adc
imul
dec
xor
push
xor
sbb
mov
push
cmp
scas
xchg
jl
jp
adc
in
loopne
add
mov
or
dec
sub
sbb
fs
push
test
inc
push
addr16
cmp
xchg
and
lahf
mov
push
jmp
ror
and
xor
nop
stc
js
nop
jnp
jp
in
cmp
sahf
add
negb
daa
adc
lcall
lods
mov
rclb
mov
sahf
push
lock
jl
orb
and
push
mov
xchg
out
xchg
out
loop
int3
rcll
inc
lods
arpl
movsl
add
dec
in
jmp
int3
sbb
js
lea
lods
add
iret
icebp
shlb
jl
jmp
inc
incl
adc
cwtl
or
mov
test
inc
outsb
imul
jns
add
divl
cmpsb
pop
test
movsb
push
mov
inc
test
scas
sarb
cli
sub
mov
sbb
mov
inc
pushf
ds
push
push
repnz
das
sbb
mov
pusha
xchg
lods
dec
into
repz
into
test
mov
sbb
push
repnz
test
adc
lret
jmp
adc
add
mov
xchg
mov
popf
mov
sbb
dec
mov
sahf
and
les
adc
movsl
enter
push
mov
mov
mov
les
or
mov
test
add
cmc
out
mov
out
nop
add
push
xchg
mov
int
adc
sbb
xchg
rol
sarl
mov
xor
lret
jl
adc
jp
imul
mov
shl
clc
dec
jne
test
and
mov
pop
enter
dec
es
scas
cli
rcll
scas
jnp
sahf
jge
ds
imul
and
daa
push
push
add
xchg
repz
cmp
jge
add
cmp
pop
pop
push
mov
ret
mov
enter
xchg
repnz
and
adc
data16
ret
inc
cmpsb
pop
mov
and
dec
ret
cmp
or
mov
mov
mov
mov
outsl
mov
dec
nop
cmp
dec
or
out
out
cmp
xchg
mov
test
ds
cmp
or
mov
jne
test
jb
push
dec
outsb
std
nop
mov
add
jno
pusha
test
nop
aam
pop
jae
jmp
push
mov
movsl
adc
jge,pt
insb
xor
dec
pop
sbbb
dec
in
stos
sahf
ret
pop
mov
insl
imull
int
iret
sbb
and
ret
cmp
adc
jae
push
mov
test
mov
popa
test
pop
push
icebp
loop,pt
pop
aam
cld
adc
fmull
rorb
stos
mov
lret
lock
jb
mov
imul
mov
les
mov
gs
jmp
push
adc
je
rolb
and
jl
pop
jnp
and
test
andl
test
movsb
popf
aaa
xor
mov
adc
mull
mov
in
mov
and
sahf
bound
aad
xchg
jnp
xorl
jmp
incb
mov
jb
pusha
ds
sahf
or
mov
cmp
push
mov
mov
subb
out
ss
ss
lods
lock
es
jne
pop
aam
lcall
and
jge
andb
enter
xchg
hlt
adc
stos
out
push
sub
inc
add
jnp
or
mov
mov
test
inc
push
data16
lock
xor
nop
add
xor
into
mov
jmp
lds
cmp
cs
mov
jg
pop
scas
add
in
cli
lahf
popa
mov
imul
jp
rorl
shlb
test
pop
mov
sub
int3
cwtl
popl
repnz
jae
cmp
je
jp
push
cwtl
sub
push
ret
lods
jno
mov
cmp
xchg
js
rolb
das
and
xor
ss
ss
loope
into
popa
and
aam
add
clc
stos
je
lock
or
std
aam
inc
subl
lods
imul
xor
sbbl
pop
sbb
xor
xchg
cmpsb
shl
sub
cld
jl
jnp
ds
mov
or
add
rclb
or
xchg
push
int3
push
mov
push
outsb
sub
adc
je
push
jbe
inc
jl
int3
ds
sbbb
xchg
push
in
jne
xor
mov
inc
sub
addr16
mov
andb
pop
xchg
xor
push
popf
in
imul
mov
cmp
sahf
mov
rorb
inc
jns
pop
push
push
sahf
shl
push
test
imull
mov
xchg
sahf
jnp
jmp
in
jp
and
sbb
adc
lods
insb
movsl
pop
inc
pop
loope
cmpsb
fwait
ja
imul
cmp
pop
xor
lods
pop
call
pop
popl
mov
sub
cmpl
jmp
cmpsb
out
cmc
repnz
je
or
fucomi
jae
jge
dec
incl
movsl
stos
jmp
popa
jnp
jp
adc
mov
cwtl
jl
jmp
xor
stos
js
sbb
repnz
adc
xor
inc
popa
jecxz
jbe
mov
mov
add
adc
sub
rep
test
icebp
hlt
or
fidivs
das
xor
mov
shlb
mov
inc
test
xchg
ret
sub
data16
outsl
jo
insb
jecxz
jp
jmp
jecxz
mov
pop
sar
lods
cmp
stos
gs
push
scas
add
fidivl
sbb
lods
or
mov
imul
shrb
test
cwtl
pop
cmp
ja
xchg
mov
movsl
enter
lea
arpl
call
xchg
into
sbb
jmp
jnp
cmpsb
mov
pop
imul
lcall
adc
fwait
push
mov
mov
lahf
out
xor
cmp
adc
ja
lods
ret
insl
lods
mov
imul
adc
pop
xor
loopne
sahf
cmp
mov
enter
imul
add
mov
cld
xchg
pop
push
cmp
mov
dec
imul
jp
mov
push
jecxz
sarl
xchg
jnp
lods
gs
push
adc
sbb
stos
push
stos
cmp
inc
subl
pop
aam
cld
int3
mov
lea
dec
push
repz
aas
nop
mov
stos
cld
xor
shlb
sub
dec
sahf
and
xor
xor
add
test
mov
imul
add
dec
push
test
lods
jo
test
test
jno
xor
xor
pop
or
pop
outsb
sahf
mov
or
hlt
xor
sub
jbe
test
adc
or
imul
mov
push
jge
repz
jecxz
mov
pop
in
xor
int
pusha
cwtl
imul
mov
das
adc
or
xchg
or
push
arpl
jns
lock
dec
fisubl
aam
jbe
or
out
xor
pop
adc
pop
cmc
es
movsb
lods
sub
fs
and
rol
pop
cltd
xchg
inc
mov
imul
sarb
or
movsl
rol
test
pop
jae
xorl
push
dec
aam
inc
adc
push
das
lock
pop
jle
mov
std
mov
sub
cmp
dec
push
push
pusha
movsb
jecxz
fistpl
pop
fsubl
ss
shrb
push
push
test
ss
push
repnz
loopne
popf
sbb
mov
mov
pop
rol
mov
inc
mov
push
push
sub
mov
mov
lods
test
nop
and
sahf
imul
aam
mov
or
mov
pop
movhlps
or
mov
mov
fdivs
jae
inc
add
dec
mov
xchg
cmp
push
imul
ss
pop
hlt
stos
ds
imul
mov
dec
mov
inc
pop
dec
add
push
add
mov
stos
lods
or
pop
mov
in
ds
gs
stos
rcrb
les
jns
fistpl
les
cmc
jae
ss
cmp
test
shlb
and
adc
push
jmp
sub
mov
in
fucomi
xlat
in
pop
into
add
popf
sarb
sub
adc
sub
je
dec
movsb
lahf
test
mov
mov
xchg
adc
ljmp
jae
jg
cmp
test
cmpsb
pop
jo
cmp
or
and
sub
call
pop
mov
pusha
xor
lods
ja
enter
mov
lret
popl
fcomp
fcmovnb
dec
mov
lods
mov
xchg
cmp
cmc
pop
mov
mov
adc
cs
adc
enter
push
and
ror
shll
and
jle
mov
pop
mov
or
jo
or
ja
cmpsb
cmp
rcll
dec
xchg
fs
xor
push
mov
addr16
test
xchg
fcoml
inc
clc
mov
push
and
cmp
test
addb
adc
or
mov
mov
fisttpl
inc
data16
shlb
imul
shr
iret
sarl
jbe
or
pusha
movsb
popf
rcll
push
bound
and
les
dec
scas
movsb
mov
scas
movsb
push
add
cmp
data16
mov
mov
xchg
cmp
fstpl
sub
push
sub
test
mov
loopne
sub
mov
jecxz
cmp
jnp
mov
push
mov
xor
sarb
or
add
sub
jnp
nop
pop
loope
xor
out
add
xor
repz
sbb
cmp
loopne
xor
nop
movsl
pop
test
push
pop
inc
icebp
cli
mov
jg
scas
repnz
or
cmp
lods
add
cmp
push
jp
push
push
mov
jge
cmc
mov
hlt
sahf
ds
push
sbb
or
mov
jo
mov
push
mov
cwtl
lcall
xchg
xor
pushf
xorb
stos
xchg
fsubrl
inc
push
xor
jle
push
out
inc
shll
aam
out
cmp
sub
pop
out
and
pop
xor
aam
scas
adc
outsb
xor
das
cmpsb
ud1
sahf
ja
hlt
dec
stos
cmp
mov
es
mov
inc
or
test
xor
mov
mov
pop
lods
in
pop
or
fs
clc
sub
test
scas
rolb
jg
cwtl
test
lahf
fisubrs
sbb
jnp
orb
sub
jmp
jl
inc
xchg
pop
sbb
icebp
pop
xlat
and
test
jae
test
js
in
lock
sub
lahf
mov
push
pop
es
jmp
dec
stos
lcall
in
or
in
jo
jp
outsb
push
or
enter
popa
jle
bound
or
sbb
and
push
sbb
add
scas
inc
addb
jmp
mov
dec
and
gs
lret
pop
loopne
popf
les
add
inc
xor
xor
ret
mov
or
pop
mov
xchg
je
mov
fmul
and
mov
sub
incl
mov
mov
jns
imul
push
js
out
fdiv
jmp
sub
sbb
in
aam
movsl
add
imul
aam
mov
fldl
xlat
push
xor
cmp
mov
sub
sbb
repnz
mov
outsl
jg
cmpsb
les
jmp
jecxz
bound
inc
mov
sbb
rorb
stos
inc
faddl
pop
shl
jns
cmpsb
pushf
jp
push
int
movsb
jo
movsl
loopne
and
xchg
mov
sbb
push
dec
jl
dec
add
call
ret
mov
ret
cli
mov
or
test
mov
scas
jbe
and
das
adc
push
xchg
inc
aam
mov
and
or
fcompl
arpl
aam
cs
pop
mov
push
jecxz
sub
xor
ljmp
cmp
popf
mov
mov
mov
push
rol
std
inc
insb
dec
adc
bnd
jmp
pop
jmp
nop
inc
ret
scas
push
nop
dec
aam
repz
loope
push
mov
xchg
stc
push
push
add
dec
xor
fisubl
mov
popa
fildll
or
add
fisubs
pop
sarl
divb
insl
repnz
aaa
mov
inc
mov
mov
mov
mov
mov
inc
icebp
push
and
adc
mov
cmp
gs
movsb
mov
mov
lea
ja
lea
sbb
xor
mov
xchg
mov
mov
push
xor
jl
mov
fidivs
test
mov
repnz
bnd
push
mov
xor
stos
jo
shrl
mov
push
sub
call
inc
mov
mov
or
jmp
movsb
jnp
stos
jae
pop
or
xor
loop
test
dec
push
inc
les
ljmp
mov
outsb
ds
popf
pop
gs
das
movsl
and
push
lock
repnz
in
cwtl
lods
jns
and
insb
pop
pop
stos
and
shl
push
mov
lds
jae
adc
xchg
scas
imul
pushf
cltd
inc
pop
mov
inc
mov
sub
push
push
inc
rcrb
das
test
mov
cld
sbb
gs
mov
jmp
movsb
dec
test
mov
out
rorb
pop
aas
je
mov
xchg
data16
push
hlt
mov
jns
rclb
mov
cmp
dec
aam
cs
push
call
mov
repnz
xor
pop
jae
jmp
les
and
aaa
loopne
popf
movsb
scas
or
loope
out
adc
jb
jecxz
insb
cld
xchg
xor
mov
aaa
jo
and
addr16
lock
sbb
rorb
ljmp
ss
mov
mov
lcall
cmp
xorb
dec
or
fcmovbe
push
orl
rclb
push
jne
xchg
ljmp
jmp
jp
xor
mov
lods
fcompl
insb
je
test
xchg
in
bnd
scas
imul
dec
sahf
inc
mov
idivl
bound
jns
lea
jns
lock
push
into
lock
inc
xor
sbb
dec
loopne
sbb
call
test
popf
dec
imul
unpcklps
add
out
mov
cmp
jmpw
int
pop
push
mov
shlb
push
jb
inc
pop
rolb
add
repnz
adc
mov
je
int3
lods
jmp
and
test
repz
in
ret
jecxz
test
xchg
mov
cmpsb
les
add
lret
andb
sub
push
loop
aam
subb
outsb
notl
loope
stos
mov
and
xchg
loop
ja
les
ret
xor
push
sahf
mov
mov
insb
mov
sar
adc
imul
jo
outsb
leave
mov
dec
mov
adc
pusha
js
jle
stos
or
enter
bound
sub
js
inc
xor
mov
xor
int3
adc
mov
fwait
cli
mov
dec
xchg
cli
test
gs
xlat
cli
mov
cltd
push
cli
sahf
or
fsubrl
pop
dec
shrb
repz
mov
call
mov
xor
bound
mov
ja
repnz
mov
enter
cmp
cwtl
fs
push
test
push
sahf
ret
mov
xchg
push
cld
js
fst
push
iret
xchg
ljmp
lods
inc
pusha
ret
adc
and
mov
pop
in
cmp
pop
mov
insb
and
imul
adc
lds
xor
lock
jbe
push
dec
inc
inc
gs
bound
and
imul
xchg
mov
test
cltd
sub
adc
pop
clc
andb
das
cli
jp
push
stos
mov
add
inc
xlat
ret
out
ss
mov
sub
cmc
outsl
jle
stos
push
xchg
xor
test
ds
cmp
add
pusha
cs
sarb
mov
mov
lods
pop
repnz
push
lahf
cmp
ja
lea
lods
pusha
shrb
sub
lret
ds
addr16
and
mov
sub
cld
out
jmp
insl
xor
vcomisd
and
es
cmc
sub
xor
inc
cwtl
ja
and
ret
mov
aas
add
scas
or
or
stos
scas
jne
cmp
add
nop
jbe
pusha
inc
int3
negb
das
cwtl
jmp
pop
mov
jo
sub
fcompl
hlt
cmpsb
and
fldenv
adc
inc
cltd
in
mov
std
jbe
cli
mov
sbb
adc
add
xchg
scas
pushf
arpl
push
mov
mov
sub
xor
imul
sahf
mov
stos
add
xchg
jbe
les
xor
popa
cmp
push
dec
icebp
or
ret
das
subb
add
lea
push
fs
mov
int3
jmp
ret
xchg
and
xchg
hlt
mov
mov
pusha
loop
das
fdivrp
popf
or
loop
mov
xchg
test
aam
and
adc
popf
ljmp
push
push
daa
inc
adc
xor
lds
icebp
cli
cwtl
adc
jne
test
dec
ds
adc
sub
addb
and
mov
jo
je
inc
lret
fldcw
nop
mov
test
js
cmp
jle
fmull
pop
sub
fldl
js
lea
repnz
in
pop
lock
push
hlt
cmpsb
decl
imul
pop
mov
mov
add
or
jbe
into
lret
cwtl
lea
xchg
lret
jne
ljmp
bound
push
cli
ljmp
sahf
leave
inc
in
mov
jl
or
xchg
mov
add
test
ret
sbb
adc
ljmp
add
test
mov
sbb
fs
pop
inc
jb
jb
push
inc
add
repnz
outsb
dec
jecxz
mov
mov
sbb
sub
in
pop
test
cld
push
pop
jecxz
popf
rcll
jp
lods
aad
cmpsl
out
pop
adc
je
push
sub
test
out
push
pushf
push
adc
andb
push
decl
hlt
jp
mov
sbb
adc
lcall
ja
shll
and
ljmp
popf
lea
mov
cmp
les
xchg
cld
sbb
cltd
hlt
hlt
shrb
mov
xchg
push
pop
and
sub
jmp
sub
andl
jbe
bnd
xchg
mov
cmp
mov
das
add
or
inc
mov
jbe
mov
fcoml
test
and
jl
adc
mov
jp
jns
rcrb
call
out
pushf
aam
pusha
pop
shl
aaa
jp
push
or
add
shlb
xor
push
jae
xor
test
scas
dec
in
jmp
dec
sub
ficoms
enter
scas
sbbb
in
aam
xchg
fdivr
imul
fdivs
xor
and
mov
pop
imul
test
xor
xor
push
jl
xchg
cli
sbb
bound
hlt
sub
repz
inc
xor
add
and
les
cli
mov
push
xchg
sub
push
mov
in
inc
test
gs
xchg
cli
pop
jnp
mull
jne
adc
ds
mov
aam
jns
fcompl
push
hlt
test
test
les
cltd
divl
nop
popa
enter
xchg
stos
in
dec
push
xor
das
xchg
push
push
mov
shrl
out
insb
mov
stos
or
sub
adc
cmp
mov
rclb
sbb
bound
stos
fs
repz
pusha
repz
push
xchg
das
push
fwait
add
cmp
xor
inc
cmc
xchg
into
fsubrp
push
push
lea
inc
mov
in
jo
sub
adc
push
std
jae
neg
insb
lock
ljmp
xchg
jbe
cmpsl
adc
lahf
cli
jb
xchg
push
xchg
outsb
jne
xchg
insb
ja
sub
shlb
stos
or
or
add
dec
sbb
xchg
push
sbb
sarb
mov
nopl
adc
add
mov
icebp
in
rol
and
paddq
pop
cmp
dec
int3
or
jp
xchg
push
popf
or
test
push
cli
mov
mov
pushf
stos
jg
jle
in
les
xchg
cmpsb
or
jmp
nop
push
test
roll
call
out
data16
jp
rcl
out
mov
ss
sbb
add
js
js
push
push
in
int3
mov
or
loopne
pop
repz
push
sbb
or
adc
xor
push
jo
jb
les
data16
stos
sarb
cmp
inc
imul
xchg
dec
mov
test
idivl
mov
cmp
iret
mov
jecxz
add
jae
jns
cmp
loop
mulb
inc
jmp
pop
sbbb
call
sahf
inc
nop
jbe
shr
insb
jo
or
sbb
jns
js
nop
imul
fwait
cmp
xchg
xchg
lcall
pushf
jp
lea
xchg
inc
stos
push
dec
pop
jle
mov
mov
insl
std
lret
adc
xchg
fcoml
fs
addr16
and
mov
jle
mov
xor
push
adc
bound
push
leave
movsl
pop
dec
in
jmp
cmp
add
push
and
es
clc
pushw
repnz
push
mov
or
test
scas
mov
mov
les
jecxz
fcmovne
jp
test
xchg
stos
sub
add
call
adc
int3
pop
push
scas
mov
jno,pt
data16
sbb
je
int3
mov
mov
xor
pop
mov
enter
mov
cli
stos
loop
pop
pop
imul
les
dec
les
ret
mov
jl
push
dec
mov
and
cmpsl
cli
push
and
fs
mov
mov
lea
fdivrl
stos
mov
in
inc
test
adc
cmc
repz
icebp
mov
pop
pop
mov
imul
daa
fldl
or
xor
inc
mov
fisubrs
sbb
mov
pop
adcb
mov
das
xchg
xor
std
mov
fnstenv
mov
test
mov
repz
jmp
mov
gs
and
xchg
push
mov
ljmp
je
inc
push
xchg
sbb
add
sahf
ret
subl
fdiv
stc
stos
adc
jl
or
ss
lea
pusha
fdivs
xor
mov
adc
cmp
sbb
or
mov
int3
test
or
sti
push
mov
mov
inc
or
push
ret
js
ja
and
jbe
adc
dec
mov
and
les
lods
andl
cmp
sbb
data16
fmull
dec
test
ficoms
mov
xor
push
mov
ret
fidivl
adc
test
enter
mov
nop
add
jp
inc
scas
fs
cld
sbb
rclb
jmp
movsl
and
jmp
es
imul
mov
outsl
mov
pop
pop
push
add
test
xor
jb
jge
inc
in
jne
insb
repnz
les
fildll
cmp
clc
lcall
inc
lea
xor
repnz
dec
lret
icebp
push
cmc
rcl
lret
in
ss
pushf
and
xchg
sub
mov
xchg
or
out
xlat
xchg
sub
rolb
push
loopne
push
rolb
add
insb
jp
lods
faddl
jnp
mov
push
or
jmp
mov
test
out
push
push
cmpsb
cwtl
test
adc
in
add
pop
mov
push
xor
les
xchg
sbb
and
xor
mov
imul
repnz
cmc
pusha
cld
sahf
mov
rcrb
mov
popa
sbb
pop
or
sub
fmul
callw
lds
push
push
push
mov
test
jo
imul
stos
mov
rorw
dec
jne
or
les
sbb
pop
clc
pop
xchg
xor
adc
loop
mov
lret
mov
mov
movsb
push
lret
cmpsb
inc
jp
add
mov
mov
movsl
sbb
jno
push
cmp
data16
xor
mov
rcll
xchg
lea
mov
inc
addr16
dec
fisubs
ss
jne
test
adc
fidivrl
cmp
adc
push
stos
and
shr
adc
imul
test
mov
pushf
int3
xchg
enter
mov
rol
shl
insl
stos
mov
popa
cmpsb
or
lds
imulb
mov
jno
dec
jmp
pusha
rcrb
jmp
inc
stos
cmpsb
out
pop
mov
mov
xchg
pusha
popf
into
add
test
add
mov
shlb
insl
add
xchg
sar
test
mov
mov
ret
stc
stos
inc
push
or
push
jb
add
add
and
mov
test
or
sub
xchg
addr16
pop
mov
mov
mov
and
ja
imul
stos
cld
xchg
jo
xor
call
aam
out
pop
sub
cld
dec
test
cli
ds
xchg
and
sbb
bound
std
lds
in
or
ret
add
rol
dec
sti
xchg
insb
xchg
cmc
push
ficoml
ss
je
jo
push
imul
or
xchg
jae
pop
adcb
sbb
shll
push
adc
mov
jge
fbstp
push
mov
mov
inc
imul
pop
push
imul
adc
test
pop
or
inc
in
mov
in
mov
shll
leavew
in
and
ss
mov
lods
nop
and
or
push
bound
jecxz,pt
fdivl
pop
and
cmpsb
repnz
mov
fs
cmp
sbb
je
movsb
stos
adc
rorl
rcr
mov
rcrb
push
sub
add
mov
sbbl
cmp
addb
dec
lret
jp
mov
repz
fs
sbb
mov
clc
in
jle
cli
sub
test
cwtl
pop
notb
stc
cmp
push
mov
in
push
test
lods
pop
aam
data16
imul
lcall
enter
pusha
adc
arpl
cwtl
cmp
sub
enter
inc
enter
subb
add
stos
push
test
sub
cmp
inc
jnp
inc
sub
sbb
lea
leave
dec
jno
add
mov
or
dec
mov
mov
inc
add
out
sbb
ljmp
cmp
mov
lahf
add
mov
negb
inc
pslld
or
pop
xor
add
jne
add
imul
and
repnz
aam
or
sub
mov
pop
imul
or
je
adc
jo
mov
xchg
cmp
cmp
sti
int3
mov
sbb
nop
nop
mov
jnp
dec
sbb
ret
mov
bound
mov
mov
lea
xor
mov
ds
jmp
pusha
push
leave
lock
mov
dec
fxch
sub
push
mov
dec
adc
ret
push
xchg
stos
in
cmp
or
jns
test
or
sub
xchg
lea
sub
clc
mov
add
repnz
fdivrp
mov
dec
jmp
jae
fcmovnb
mov
test
into
popf
jmp
jp
ljmp
push
out
shrl
stc
mov
push
jnp
cmp
adc
adc
not
popf
cli
hlt
mov
jns
push
clc
cmp
cmp
in
mov
inc
rorl
push
fwait
aam
pop
std
das
cli
sti
cld
pop
and
xchg
fsubl
aam
sub
les
mov
push
jmp
adc
int3
cli
js
mov
data16
pop
addr16
imul
push
lods
jae
cmp
shll
mov
shr
hlt
rcl
lret
mov
loopne
jo
dec
cmovs
inc
sub
xor
popa
and
jmp
jae
dec
jecxz
inc
stos
xchg
fidivs
ja
xchg
les
sbb
mov
imul
and
and
pop
xor
aas
dec
movsb
pop
andb
nop
inc
or
arpl
push
cmp
add
sbb
nop
cmpsl
enter
mov
push
aas
stos
sub
mov
mov
in
xchg
aas
push
sub
add
cmc
and
aas
stos
xor
jecxz
cmp
xchg
sbb
daa
aam
repz
rol
cmp
add
imul
pop
mov
notl
scas
jns
dec
push
es
jmp
and
mov
ret
pusha
dec
and
or
and
test
imul
lahf
add
ja
nop
pop
fisubs
xor
xor
int3
or
ret
cld
testb
push
ss
add
add
out
shrl
ret
orl
cld
pop
mov
pop
stos
shrb
cld
push
lock
xchg
cwtl
mov
call
cs
pushf
sahf
cwtl
repnz
jecxz
dec
pop
and
push
dec
jo
dec
cmp
ss
gs
add
xor
cli
sbb
sbb
inc
sub
loopne
mov
sbb
sbb
cmp
mov
loope
lret
scas
adc
mov
jl
in
testl
push
pop
cmp
mov
rolb
int3
test
pop
enter
mov
ficoms
movb
or
xor
js
sarb
lea
dec
repnz
xor
and
add
mov
xor
ss
push
sbb
les
ss
cmp
xchg
sahf
adc
mov
mov
imulb
xor
pop
pop
loop
adc
sub
sahf
and
mov
mov
pop
hlt
movsb
test
or
mov
and
sub
pop
rsm
and
or
jns
test
mov
pusha
cmp
cmpsl
cmp
xchg
call
cli
cmpb
dec
movsl
pop
push
pop
jp
sub
ss
imul
inc
push
dec
adc
sbb
enter
xchg
and
fistl
cmp
lea
xor
fadd
or
add
ror
xor
xor
push
mov
iret
mov
push
imul
shlb
es
sub
push
cmp
and
and
scas
test
nop
add
jo
mov
inc
and
shl
loopne
enter
jmp
pusha
push
bound
add
add
jmp
call
sbb
hlt
in
jmp
adc
and
xchg
xor
sub
clc
test
push
test
sub
mov
inc
cmc
stos
xchg
adc
or
test
mov
jo
mov
arpl
xchg
lock
xor
inc
enter
jo
pop
xor
sub
adc
push
fsubrl
push
nop
test
inc
lret
sub
ret
inc
popf
mov
jo
mov
add
shrb
cmpsl
mov
mov
adc
das
loopne
clc
int3
jne
lock
cmp
shlb
jp
jo
mov
add
xchg
or
pop
mov
repnz
data16
stos
push
rcl
cwtl
pushf
and
loop
mov
jo
enter
mov
push
data16
sub
push
ss
aam
loop
hlt
xchg
push
xor
add
mov
jge
fcompl
dec
xor
enter
mov
mov
xchg
or
adc
lret
cmp
inc
push
or
jl
cwtl
ficoml
adc
or
inc
add
cld
pop
bound
fdivs
aam
shrb
mov
jns
mov
jle
and
inc
adc
sub
jns
ds
cld
or
cld
fdivr
sarl
dec
es
es
addl
pop
dec
sbb
fistps
cmp
inc
adc
mov
aas
dec
lea
aas
adc
mov
fs
imul
pushf
popf
sbb
fidivl
or
or
lock
cmp
movsl
scas
int3
in
jmp
push
popf
jb
inc
push
dec
nop
mov
mov
dec
insb
or
sahf
pop
imul
rclb
and
and
sbb
sbb
js
imul
in
shlb
in
pusha
fdivl
or
xchg
xchg
adc
sub
lock
xlat
xchg
inc
jmp
inc
mov
add
pop
shll
adc
mov
xchg
repz
mov
and
adc
test
fs
sbb
pop
xchg
dec
dec
mov
pop
push
cmp
xchg
dec
inc
or
mov
add
hlt
mov
adc
jmp
aam
sahf
outsb
push
mov
shrb
push
xchg
mov
pop
pop
test
jmp
shrb
inc
pusha
mov
push
stos
ds
pop
lcall
xor
rclb
jl
imul
push
push
mov
idivb
push
repnz
enter
cwtl
rorb
lret
dec
mov
push
and
push
dec
or
jns
and
jne
mov
inc
nop
push
js
cmpsb
xchg
xchg
adc
mov
mov
mov
pop
int3
pop
cmp
fadds
cmc
push
and
rol
inc
add
outsl
or
add
adc
js
pop
arpl
dec
enter
stos
adcb
mov
or
repnz
dec
nop
loop
pusha
lret
xor
inc
pop
inc
sub
or
pusha
mov
je
mov
mov
sub
cmpb
and
lock
sarb
repz
mov
jmp
js
and
add
pop
sbb
mov
push
inc
pop
inc
xchg
sub
adc
adc
bound
pop
push
mov
lock
enter
jbe
insb
add
xor
clc
data16
jmp
shll
lcall
rolb
xchg
ret
jp
in
test
je
jo
ljmp
mov
inc
loope
cmp
push
in
or
mov
pop
and
sub
jg
sbbl
sub
adc
loopne
cld
mov
add
imul
fdivrl
xchg
js
mov
jo
jle
mov
loopne
mov
andb
push
xor
and
aas
out
enter
fstpt
cmp
sub
rcrb
ljmp
sub
sbb
mov
int3
xchg
int3
sbb
pop
addl
adc
fistpl
sbb
adc
and
adc
pop
outsl
adc
xor
cmc
fisubl
test
dec
or
es
loop
mov
insb
cmp
sbb
imul
mov
mov
bound
test
dec
cmp
test
or
aam
hlt
clc
sub
dec
push
jmp
push
add
mov
js
cld
xor
sahf
jbe
sbb
adc
es
sub
insb
in
cmp
sahf
sub
push
add
pusha
pop
in
insb
or
lea
jp
xchg
mov
pop
xor
scas
or
mov
les
pushf
jmp
dec
hlt
mov
pop
jl
sub
sbb
into
mov
imul
and
ss
pop
pop
test
dec
int
iret
inc
add
cmp
inc
imul
xchg
and
and
xchg
sti
cmp
testb
push
dec
sbb
mov
outsb
and
rorb
push
ret
pushf
ss
jo
mov
jne
loopne
nop
pop
sbb
pop
pop
push
xor
incb
mov
mov
dec
sbb
sbb
mov
cld
add
push
lret
adc
stos
xor
int
imul
leave
pop
clc
adc
cld
ret
lock
in
ds
ss
in
int3
insb
push
fcoml
into
jne
in
hlt
mov
pop
ror
les
ss
adc
clc
mov
lods
xor
xchg
vmread
sub
fs
ljmp
mov
loopne
pop
pop
jne
test
xor
cmp
subb
nop
push
rcll
xchg
sbb
jl
in
int3
sbb
xor
mov
rcll
add
scas
xchg
dec
mov
rolb
dec
mov
push
push
pop
push
adc
mov
iret
sub
sbb
insb
sahf
adc
add
mov
xor
and
pusha
mov
add
push
cmp
mov
cmp
mov
xchg
pop
pop
mov
mov
lcall
iret
sbb
dec
dec
push
dec
push
pop
push
ja
dec
push
inc
mov
inc
jg
sti
cld
fdivs
les
lods
push
inc
pop
sub
mov
push
cld
pop
enter
cmpsl
xlat
or
mov
cmp
loop
adc
mov
movb
dec
xchg
push
insb
push
sub
aam
js
in
int3
adc
push
sbb
xor
or
mov
fdivrs
cmp
stos
or
mov
jne
gs
js
jmp
cmp
dec
cld
fdivr
enter
lods
sbb
into
cs
inc
cmp
adc
dec
hlt
jne
add
dec
pop
aam
in
mov
or
mov
out
cmp
jl
sbb
cs
loopne
cwtl
les
into
cmp
insb
dec
xchg
pop
pop
add
enter
xchg
fstpt
push
cmp
or
testb
cmpsb
sbb
sub
test
cs
clc
cmpb
iret
dec
sbb
iret
sbb
jbe
iret
sbbb
sahf
pop
mov
mov
xor
iret
add
loop
mov
mov
or
mov
gs
es
in
inc
cwtl
pop
scas
addb
cmp
sub
call
and
jne
jo
cmp
pop
adcl
es
inc
jmp
shlb
je
jl
push
mov
cli
xchg
pusha
call
ja
sub
fsubl
sub
mov
cmc
add
shrb
jns
mov
jb
insb
jo
cmp
push
sbb
fwait
ss
mov
push
sub
add
push
push
xor
cli
add
push
test
insb
addb
sbb
inc
add
in
push
data16
pusha
sub
rorb
outsl
push
mov
cld
or
mov
and
xor
and
add
xchg
in
ret
cli
lock
rclb
dec
cmp
push
push
dec
dec
mov
fsubrl
fs
cld
popf
sub
add
imul
xchg
mov
test
rorl
sub
add
in
sbb
xchg
jmp
dec
lret
jmp
out
imul
lods
pop
adc
outsb
push
dec
inc
imul
inc
popa
push
jo
outsb
push
clc
jp
and
mov
test
sbbl
pushf
sbb
sarb
dec
lea
in
lock
out
orb
and
jp
sbb
in
jmp
inc
sahf
cwtl
mov
push
and
add
or
sbb
push
mov
mov
pop
sarb
dec
sbb
add
inc
rolb
mov
push
push
cmp
adc
sbb
pop
rcl
xchg
sub
test
pushw
stos
aam
jo
push
xchg
in
fdivrl
insb
test
xor
loopne
mov
jae
mov
fs
inc
add
add
mov
loopne
xor
add
push
pop
pusha
test
inc
dec
adc
sbb
rol
insb
int
inc
and
pop
mov
dec
pop
hlt
stos
sub
pop
xor
rorb
outsb
addr16
push
ret
sahf
popf
cmp
fs
rol
nop
push
jle
mov
pusha
dec
and
dec
mov
test
dec
dec
shlb
cmp
sub
and
adcb
pop
or
fdivs
push
js
mov
sbb
inc
sbb
mov
mov
pop
pop
pop
pop
addr16
js
push
push
mov
push
sbb
js
mov
pop
and
imul
push
je
pop
cli
shl
fisubrl
ss
sbb
or
loopne
into
rcrb
lods
push
mov
es
push
je
inc
and
icebp
or
ret
outsb
enter
sti
pop
js
push
pop
fadd
imul
loop
loopne
fcmovbe
cmpb
jle
cwtl
jo
push
ss
push
inc
loopne
and
pop
adc
add
lock
aam
shlb
nop
loopne
push
and
imul
mov
hlt
cwtl
dec
xchg
cmp
inc
lret
hlt
and
jne
xchg
repnz
ret
jp
mov
notb
ret
xchg
jp
mov
shl
sub
ret
cli
mov
cld
push
cmp
xchg
sbb
adc
mov
insb
outsb
jmp
loop
mov
pop
mov
sub
push
push
call
fsubl
mov
out
cwtl
rcrl
js
ss
sbb
xchg
fsubl
clc
xor
call
sarb
jge
lods
cmpsb
scas
fs
mov
js
and
mov
sbb
repz
xor
nop
and
add
jo
adc
jmp
or
loop
and
call
call
test
push
test
lea
inc
push
imul
cmp
cmpb
cld
pop
jmp
fdivrl
mov
jo
jne,pt
mov
int
shrb
sar
popf
cwtl
imul
lret
jo
pusha
mov
cmp
and
adc
sub
imul
into
adc
mov
test
aam
sub
xor
cmp
lret
sarb
clc
jbe
je
sub
sub
add
loop
fsub
xchg
in
mov
push
inc
imul
clc
dec
mov
adc
mov
dec
and
shll
dec
mov
lds
mov
lret
ljmp
cli
lock
add
inc
mov
jl
mov
sub
push
lret
lock
andl
push
and
xor
sar
xchg
lods
sbb
prefetch
cmovl
ljmp
jmp
call
jmp
cmovle
testb
push
movsb
cmpsb
mov
enter
nop
dec
fdivrs
xchg
adc
inc
lock
ret
inc
nop
mov
pop
lret
divb
xchg
mov
xchg
push
imul
cwtl
or
test
sarb
jo
bound
ljmp
out
jmp
push
push
pop
cwtl
movsl
fmull
add
mov
mov
mov
mov
inc
shrb
inc
dec
cld
cmc
nop
bound
dec
lods
pusha
and
sbb
hlt
gs
mov
js
dec
loopne
pusha
scas
jl
adc
adc
enter
fcoml
cwtl
pop
xor
andb
xchg
dec
aad
mov
mov
mov
scas
dec
aam
mov
data16
stos
inc
ret
mov
hlt
call
int3
cwtl
and
mov
push
jge
jne
xchg
adc
in
jb
jmp
fs
push
ds
scas
and
adc
rolb
popf
cwtl
icebp
cmp
fs
ds
scas
dec
les
mov
je
aam
mov
ret
cmp
add
rclb
int3
je
rclb
loope
sub
add
fimuls
push
sub
loop
xchg
repnz
into
in
mov
jmp
cmp
inc
ss
xor
push
mov
imul
jae
js
test
cmp
je
sub
jl
xchg
stos
sbb
mov
sbb
dec
mov
push
inc
mov
pop
fs
xor
xchg
loopne
aam
outsb
lods
sti
je
jge
jne
xchg
dec
lock
call
adc
cwtl
mov
dec
data16
addb
loop
lods
mov
lea
xchg
data16
or
and
into
adc
jp
call
loop
pop
test
addr16
push
inc
outsb
addr16
je
xchg
jmp
xorb
sub
jp
fcoml
je
xchg
dec
js
add
imul
sarb
lods
push
je
dec
jp
xor
or
je
pop
push
and
sbb
pop
cld
jo
xor
cmp
in
enter
hlt
cli
outsb
xlat
adc
aam
adc
jp
in
cmpb
enter
nop
pop
dec
jne
mov
dec
loopne
aam
xchg
xchg
adcb
movsb
sub
stos
push
mov
or
add
or
push
fcoml
dec
lds
sub
cmp
inc
popf
test
add
insl
push
popl
adc
add
jl
or
inc
dec
adc
sbb
into
and
leave
dec
dec
adc
and
les
cmp
cmp
pop
jne
mov
or
lock
and
enter
add
cwtl
sub
sbb
stc
cmp
jmp
pusha
rclb
ds
loop
jle
lret
dec
or
add
gs
jbe
pusha
adc
mov
push
xor
xor
addr16
jbe
repz
cmp
dec
mov
xor
mov
mov
adc
loopne
scas
and
orb
pop
sbb
push
mov
pop
sub
push
test
mov
adc
dec
dec
les
sub
push
xchg
cmp
cmpsb
xor
rorb
adc
mov
loope
mov
outsl
dec
into
into
jne
xchg
push
mov
inc
inc
mov
stos
cmp
in
xchg
mov
mov
adc
cwtl
aam
sahf
bound
test
mov
inc
rolb
sbb
add
jl
popl
pusha
and
or
lea
pusha
mov
mov
mov
movsb
stc
push
shrb
inc
cld
push
arpl
je
popf
adc
fsub
add
push
cwtl
loope
pop
adc
pop
cwtl
enter
int
scas
mov
movsb
push
outsb
ja
xchg
and
in
shl
sub
ljmp
xchg
cmc
push
mov
out
adc
scas
test
inc
mov
iret
inc
bnd
or
xchg
imul
cmc
rol
and
or
mov
sti
sub
inc
clc
push
xchg
sub
add
imul
pusha
les
ss
mov
add
bound
test
or
rorb
ret
mov
test
pop
rorb
or
jnp
cmp
jo
dec
sbb
xchg
jge
ds
and
and
pop
xor
rorb
xchg
sbb
jo
or
sar
inc
ljmp
add
sbb
in
test
sbb
push
pushw
pushf
sub
push
pop
and
rorb
out
js
xchg
rclb
sbb
adc
minps
fcompl
je
inc
popf
cmp
mov
cmp
xchg
in
enter
movsb
jae
jl
adc
push
adc
mov
negb
mov
in
or
jp
jne
mov
hlt
imul
out
sub
inc
push
or
sub
push
rorb
rcrb
pop
call
movsb
dec
pop
std
or
pop
bound
xchg
lret
stos
push
cmp
jmp
sbb
movsl
xchg
aam
rcrb
in
fmuls
hlt
push
ffree
mov
xor
cld
push
outsb
aam
shlb
pop
and
setge
add
jnp
xor
sub
imul
js
nop
movsb
pop
dec
ret
sbb
hlt
add
jno
jp
xchg
insb
adc
add
mov
adcb
les
mov
mov
jo
push
inc
xchg
mov
cmp
fsubl
shrb
aam
push
sub
push
sub
shll
push
movsb
aam
inc
cmpsb
test
outsb
dec
xlat
jb
imul
and
mov
mov
call
inc
es
mull
inc
mov
mull
push
fisubrs
or
cmp
push
out
cmp
jo
add
js
aas
jp
jle
add
jg
enter
aam
out
cwtl
enter
movsb
cmp
sub
ret
enter
or
dec
pop
jmp
fimull
and
loop
sub
ret
add
xchg
test
clc
push
push
xor
cmp
sub
xchg
hlt
dec
movsb
test
lock
movsb
out
nop
adc
and
rsm
dec
mov
add
je
mov
loope
out
sbb
fmull
pop
add
push
push
addr16
shrb
adc
push
in
popf
repnz
negb
push
loop
and
mov
in
insb
and
and
inc
fisubrl
loopne
ret
out
hlt
into
cs
into
mov
imul
push
out
dec
mov
or
push
jmp
cmp
in
inc
sbb
pop
xchg
xlat
add
mull
stos
and
mov
ds
inc
mov
dec
or
or
or
mov
test
inc
pushl
add
mov
loop
pop
push
pop
push
fs
push
add
add
call
inc
pop
jne
out
out
cwtl
int3
xor
fnstenv
pop
mov
pop
mov
arpl
fsubrl
dec
sub
add
insl
cld
or
loope
push
sbbb
xlat
es
and
inc
cmp
ds
das
dec
adc
cwtl
mov
pop
test
pop
cld
stos
bswap
or
mov
fisttpll
or
lret
sar
adc
mov
or
iret
mov
nop
in
or
inc
cmp
imul
dec
add
dec
in
push
add
push
sbb
fmuls
adc
mov
outsb
or
add
lock
mov
cmp
cmpsb
mull
in
dec
jb
push
movb
or
adc
inc
insb
mov
mov
hlt
inc
subb
decl
addb
jg
lret
push
adc
adc
bound
and
es
and
ss
cmp
incl
mov
faddl
and
cmp
arpl
packsswb
packsswb
pcmpgtb
mull
lods
jl
fwait
mov
pop
mov
pop
jb
mov
popa
adc
fs
mov
xchg
mov
push
fldt
les
cmc
call
inc
sbb
fldt
fldt
or
adc
fldt
inc
sbb
and
adc
add
mov
not
cmpsb
push
les
je
lock
mov
or
loop
push
xchg
mov
mov
jp
jb
dec
add
push
pop
stos
mov
lock
cli
arpl
packsswb
push
jmp
push
cld
add
jmp
add
addl
inc
cwtl
jmp
mov
dec
adc
int3
push
stos
rolb
imul
loop
sbb
out
sbb
pusha
pop
xchg
cli
xchg
incl
push
xchg
or
daa
cld
cmp
add
sbb
hlt
add
xchg
adc
push
pop
pop
push
pusha
imul
insb
sbb
je
sub
jl
in
pop
and
mov
mov
int3
loopne
adc
imul
push
add
add
mov
push
jp
or
out
jg
cmp
fldt
xchg
cmp
push
inc
sbb
sbb
xchg
mov
cwtl
mov
add
add
add
mov
test
and
stos
mov
dec
mov
add
xchg
sub
insb
insb
pmulhuw
sbb
out
pop
inc
mov
push
inc
push
movsb
int3
adc
jl
mov
push
pop
adc
cmp
ds
inc
cmp
inc
inc
dec
inc
inc
pcmpgtb
sbb
mov
dec
in
dec
dec
fisubrs
jo
pop
jbe
dec
jl
mov
mov
nop
ret
xchg
sub
movsb
jo
fmul
xor
inc
ret
pmulhuw
pop
dec
mov
outsl
nop
testb
mov
lock
cli
push
inc
cli
jg
mov
loopne
hlt
les
imul
and
lret
push
cli
int
shl
or
js
jp
lret
lret
lret
mov
and
lret
mov
les
or
sbb
sbb
cs
in
xchg
sub
ds
or
rclb
cmp
mov
push
adc
sarb
orb
adc
cwtl
aaa
mov
stos
in
pop
shlb
mov
pop
fsubrs
pop
xchg
xchg
jo
pop
ljmp
outsl
cmpb
cmp
add
int3
and
or
mov
loop
push
jmp
pop
pop
jmp
pop
dec
ss
lret
push
lods
lret
ss
dec
sarb
mov
outsb
cmp
cmp
lret
rorb
push
inc
sub
js
gs
fadd
fidivrl
push
js
ret
inc
pop
mov
lea
shlb
jne
xchg
add
lock
rol
js
or
sub
lock
push
mov
in
cli
push
fs
negl
loope
push
loope
and
clc
es
sub
clc
cs
pop
out
jmp
sub
rol
push
enter
ror
push
rclb
les
push
orb
xchg
mov
cmpsb
mov
cmp
test
cwtl
cld
lcall
les
mov
mov
aas
sbb
push
adc
into
adc
aam
out
fcoms
loopne
out
in
out
call
out
out
adc
xor
cmp
cmp
inc
push
pop
insl
lret
jb
movq
nop
enter
call
orb
jo
adc
mov
pop
notl
xchg
and
xchg
lret
mov
pop
movsl
or
psllw
mov
pop
mov
dec
out
adc
adc
inc
jb
cmp
fsubl
add
ljmp
or
cwtl
mov
movsb
imul
xchg
call
into
push
inc
iret
cmp
adc
inc
aad
cmpsb
cmp
int3
fstps
and
and
sub
and
lcall
loopne
lcall
fs
sbb
hlt
sbb
les
jle
insb
xchg
or
cwtl
and
fs
adc
lock
xor
mov
insb
fadds
jne
dec
pushf
imul
jb
sbb
cld
push
adc
xor
in
hlt
mov
das
or
sub
or
in
pminsw
hlt
in
add
pushfw
into
lcall
lods
test
les
and
xchg
adc
imul
enter
hlt
push
cwtl
jl
test
lock
sub
pop
push
imulb
stos
cmp
jae
sbb
pop
jbe
test
or
push
jbe
stos
push
aas
mov
cmp
push
mov
adc
adc
xor
dec
push
adcl
in
pop
int
dec
mov
and
jo
lods
pop
xchg
add
inc
loop
xchg
aam
push
popw
bound
cmpsb
jle
and
icebp
xchg
loope
rorl
mov
jbe
jb
outsb
ss
xor
pop
ss
ss
ss
ss
ss
ss
ss
ss
ss
cs
es
push
sbb
push
adc
push
or
push
add
pushl
cli
divb
repnz
ss
fidivl
shlb
into
ss
ss
ss
jnp
lea
xchg
sahf
in
add
jns
xor
xchg
jo
sbb
add
jo
movsb
and
pop
mov
mov
not
xchg
inc
dec
jl
jo
icebp
scas
addr16
and
mov
popf
mov
mov
stos
cld
mov
mov
int3
stos
cmpsb
jnp
cli
les
cld
mov
xor
pusha
dec
dec
inc
xchg
inc
cwtl
inc
inc
dec
in
inc
cmpsb
push
es
jbe
inc
in
dec
push
push
aas
cmc
test
jo
popa
mov
dec
xchg
jo
mov
scas
mov
mov
adcb
xor
jbe
mov
sbb
stos
push
lcall
mov
adc
and
xchg
repz
dec
jo
mov
fs
push
scas
push
mov
xor
xchg
test
xor
mov
movsb
mov
mov
ja
mov
mov
mov
xchg
lods
rclb
push
dec
jl
hlt
nop
insb
lods
addr16
je
dec
imul
pop
mov
adc
inc
dec
inc
cmp
lcall
and
cmpsb
inc
push
push
inc
fs
test
inc
mov
mov
adcl
mov
hlt
inc
mov
xor
jle
push
fs
adc
and
xor
mov
add
add
dec
dec
push
inc
popa
ds
mov
fs
mov
jb
inc
mov
enter
sbb
dec
mov
lahf
pushf
push
adc
ss
jno
mov
scas
inc
mov
cmpsb
push
mov
jge
lods
pop
push
lahf
mov
cmpsl
arpl
mov
icebp
and
mov
jo
nop
lods
xor
cmpsb
inc
in
insb
aas
mov
lcall
lret
mov
test
call
fmuls
xor
int3
cmp
mov
popf
adc
aas
lods
idivl
push
movsb
out
inc
mov
mov
lea
negl
pusha
mov
addb
in
cmp
mov
rorl
lahf
and
dec
rolb
ja
pop
xor
ss
dec
jb
pop
data16
mov
repnz
push
sahf
out
bound
daa
pop
cld
mov
xlat
dec
and
arpl
sub
ret
and
mov
or
sbbb
mov
sub
test
push
add
stos
mov
mov
pushf
fwait
cwtl
lods
aad
xchg
fs
and
sub
jae
cmpsb
arpl
jne
stos
mov
into
inc
or
mov
mov
push
stos
das
push
test
dec
sub
pop
test
mov
into
jl
movsb
scas
dec
test
lret
test
sub
dec
jl
int3
and
pop
scas
mull
and
cli
je
pop
pop
sub
lods
pop
mov
stos
jmp
insb
test
or
mov
xor
test
mov
ret
lods
jecxz
mov
mov
lret
mov
bswap
in
mov
mov
adc
cwtl
test
adc
int3
mov
push
ljmp
jecxz
sub
jne
dec
push
scas
fs
sub
add
sahf
and
aam
xchg
test
lods
jbe
mov
sub
and
int3
insl
aad
xor
das
mov
pop
icebp
lret
scas
adc
add
inc
xchg
nop
jle
loop
pushf
por
fs
and
cmc
push
xchg
popa
and
cwtl
and
jle
test
mov
dec
mov
mov
das
sub
jae
mov
adc
push
ret
test
inc
js
adc
or
mov
arpl
loope
test
add
mov
adc
jl
inc
mov
aas
stos
out
xor
jge
push
inc
push
nop
jno
pop
adc
and
sbb
jo
mov
mov
and
leave
push
jbe
jns
aas
mov
divl
jae
scas
int3
cmp
or
addl
sub
test
sahf
mov
leave
test
rorl
nop
inc
pop
nop
sub
jl
push
xchg
jge
aas
mov
stos
aaa
movsb
xchg
subl
mov
and
xchg
jnp
pop
insb
jbe
stos
pop
pop
popa
inc
xor
mov
mov
dec
repnz
mov
data16
xchg
dec
mov
test
sbb
mov
nop
mov
mov
xchg
push
repnz
cmp
scas
sysenter
push
outsl
pop
adc
jmp
jae
inc
cmpsl
and
sbb
adc
pop
fmuls
out
mov
inc
mov
add
movsb
xor
jl
sub
adc
outsb
mov
cmp
xlat
lea
int3
lret
loopne
movsl
inc
xor
adc
icebp
stos
pop
scas
test
test
mov
mov
movsl
dec
pop
push
adc
jnp
shrb
mov
lock
test
mov
or
insb
ja
xor
fsubrs
mov
xchg
repz
push
inc
mov
mov
xor
mov
jg
xchg
inc
push
dec
pushf
adc
mov
rclb
pushf
das
fsts
xchg
and
xor
sbb
mov
mov
cmpsl
lcall
enter
jns
faddl
push
inc
cltd
out
mov
fisubs
jns
je
stc
mov
jmp
xor
int3
out
push
mov
mov
xor
or
pushf
mov
adcb
int
push
sub
lods
or
push
bound
cmpsb
fwait
xchg
jo
cmpsl
jb
icebp
test
xor
lcall
das
pop
outsb
outsl
lods
dec
sub
dec
sbb
dec
add
jns
mov
fnsave
in
stos
leave
lods
dec
mov
in
push
xchg
insb
jo
out
bnd
and
cmp
decb
or
fs
sub
nop
xchg
lods
add
mov
mov
fsts
and
jo
outsb
cmc
cmp
lds
xor
add
dec
jmp
xor
insb
popa
xchg
cmpsb
dec
addr16
stos
int3
dec
cmpsl
mov
cltd
in
mov
sub
adc
jge
scas
sbb
arpl
mov
dec
mov
div
out
outsb
scas
mov
nop
lret
leave
daa
outsl
pusha
cld
into
push
sub
push
xchg
mov
das
pop
enter
out
lods
jl
daa
pop
mov
xor
test
bsf
rclb
jo
pushf
and
push
test
ljmp
sub
push
repz
cwtl
rcll
cmpsb
ret
xchg
je
sub
repz
dec
inc
movsb
data16
mov
subl
shrb
sub
xorb
test
fsubs
cli
repz
int3
test
adc
xor
hlt
adc
dec
stos
sub
insb
fidivs
xor
outsb
mov
jns
cmp
sbb
shlb
js
xor
addr16
dec
push
mov
dec
mov
icebp
insb
sbb
adc
imul
int
mov
sub
mov
mov
leave
movsl
adc
xor
xor
sti
lods
je
jo
pop
jo
jmp
and
imulb
cmp
push
jge
add
or
test
xor
cmp
pop
push
aad
loop
dec
sbb
inc
mov
mov
int3
sbb
mov
cld
or
jnp
xchg
insb
xchg
cld
add
xchg
shlb
mov
mov
scas
mov
icebp
inc
mov
insl
test
jo
daa
mov
mov
testl
js
jns
push
xor
dec
jb
stos
int3
hlt
mov
scas
jl
inc
jnp
icebp
call
scas
pop
outsl
xor
and
pop
or
dec
lahf
scas
test
cwtl
mov
mov
inc
aas
jmp
push
mov
cs
shrb
test
xchg
adc
mov
pop
in
jmp
rcll
xchg
nop
ds
pop
dec
loop
cld
fdivrl
lahf
and
adc
jl
inc
loopne
sub
inc
mov
xacquire
stos
fldt
lods
pop
stos
jae
lock
jo
pop
adc
int3
lds
imul
lahf
fcmove
popf
jle
out
mov
mov
adc
or
push
xor
call
and
xorl
push
movsb
mov
cwtl
test
lahf
mov
pop
cmpsl
insb
test
adc
xor
xchg
mov
jo
fs
jmp
xor
in
movsl
aas
ljmp
mov
mov
sub
sub
add
sub
out
xchg
insl
call
leave
jno
mov
je
sub
in
xor
scas
sbbb
outsl
stos
loope
mov
mov
insb
lock
dec
sbb
cwtl
xor
adcb
call
xchg
mov
scas
mov
in
sub
mov
xor
adc
mov
jmp
leave
mov
jne
mov
jb
jnp
mov
cmpsl
xor
les
js
repnz
mov
imul
pushf
movsl
and
mov
sub
imul
insb
sub
mov
stos
imul
jge
xor
jne
pop
jp
push
mov
fwait
rcl
scas
sbb
into
mov
xlat
mov
lret
pop
jb
and
movsl
je
mov
xor
mov
mov
adc
sbb
xchg
push
jmp
scas
loop
jns
repz
aas
stos
fistps
je
enter
leave
mov
cmp
fstpt
xchg
pushf
lret
cwtl
mov
lret
and
xor
je
fs
dec
jnp
movsb
dec
enter
mov
lods
ret
out
test
and
push
lods
dec
ret
mov
mov
jns
rolb
push
sub
movsb
sub
jp
fs
es
add
lods
pop
call
adc
leave
popa
push
outsl
push
add
inc
js
push
sub
idivb
mov
push
push
in
aam
mov
push
and
stc
outsl
dec
mov
leave
mov
insb
hlt
subb
pop
dec
bound
jp
movsb
dec
xor
pop
aas
mov
and
and
cltd
lret
mov
aas
cld
mov
mov
dec
mov
int3
lahf
in
lods
xchg
mov
repz
push
mov
inc
out
cmpsb
mov
lret
mov
jle
loopne
test
cmp
xchg
push
adc
in
xor
shll
jl
je
inc
mov
push
cmp
jbe
sub
jae
fwait
aas
and
dec
sahf
in
lods
das
int3
lock
lret
lcall
lea
adc
mov
xor
jne
pop
mov
inc
jbe
mov
mov
cli
cmp
push
scas
sub
leave
jae
ret
popa
sub
sub
or
inc
xchg
stos
mov
pushf
cmp
sbb
xor
nop
scas
pop
add
cli
pop
adc
das
inc
jnp
mov
mov
and
stc
mov
int3
and
sub
xchg
aas
cmpsl
dec
mov
lret
pushf
pop
leave
stos
icebp
aas
pushf
mov
mov
mov
adc
or
xor
jg,pn
aaa
mov
pop
repz
mov
mov
adc
cltd
daa
inc
sbb
stos
sub
sub
dec
aad
ds
test
fildll
jns
insl
cmp
mov
jae
cwtl
and
mov
lea
mov
cmc
and
jnp
mov
cmpsb
subb
dec
mov
jle
mov
gs
push
ficoml
dec
mov
sahf
test
pop
call
sbb
pop
xchg
xor
adc
in
adc
sub
sahf
jns
jg
sub
je
lock
into
mov
arpl
cltd
xor
mov
dec
int3
sub
fstl
pushf
ret
sub
pop
xorb
imul
mov
or
loope
jbe
xchg
insb
mov
imull
je
stos
call
push
movsb
push
cmpsb
sub
xor
test
das
pop
popf
cmp
mov
les
push
fs
sbb
leave
cld
cmpsl
dec
enter
popf
sar
add
jg
nop
in
sub
mov
test
fs
pop
mov
mov
insb
pop
mov
jge
rol
shl
push
sbb
jmp
scas
test
fwait
pusha
inc
sbb
push
es
push
stos
mov
xor
imul
dec
call
mov
pop
loop
movsb
and
cltd
movsb
push
sub
movsb
jo
test
rorb
lea
lock
dec
out
jge
sub
test
dec
and
add
xor
rolb
pop
dec
push
mov
jae
jo
xor
mov
mov
jbe
jae
stos
jb
adc
sub
leave
scas
int3
dec
adc
mov
jbe
push
jecxz
lahf
adc
push
push
mov
pop
and
and
xchg
mov
in
jo
cmpsl
adc
jbe
sub
pushf
dec
testl
mov
xor
test
xor
push
sub
les
push
jns
sbb
aam
movsl
sub
push
loop
mov
sub
sarb
lods
push
outsl
cmp
popf
mov
bound
aam
subl
movsl
orl
inc
push
je
ror
insb
fistpl
into
test
pop
imul
jns
jg
and
mov
sbb
jmp
add
mov
mov
xchg
xchg
out
je
pop
dec
lods
add
jo
pop
dec
scas
popf
repz
xchg
mov
pop
out
sub
repnz
mov
les
sti
ja
xchg
out
das
mov
mov
stos
mov
lret
mulb
sarb
lock
movsl
dec
jmp
je
leave
push
arpl
popl
out
jnp
xchg
mov
faddl
and
fsubs
scas
fmul
mov
lcall
xor
xchg
subb
stos
pop
iret
nop
das
lret
lahf
mov
mov
imul
mov
cmp
cwtl
test
aas
sahf
and
sub
mov
orl
jo
pusha
cwtl
add
subl
mov
mov
sub
jmp
test
lret
adc
arpl
xchg
hlt
mov
inc
adc
lock
lock
or
mov
xchg
pushf
mov
das
mov
xchg
cwtl
lret
stos
cli
mov
mov
pop
xor
mov
pop
call
out
xorb
xchg
cltd
popa
mov
and
nop
mov
mov
mov
xor
or
movsl
aas
ret
sub
divb
and
xor
repz
xor
int3
sub
gs
int3
sarb
jle
cmpsb
movsl
movsb
mov
daa
cmp
lret
lods
mov
sub
stos
mov
push
fwait
sub
sub
popa
insl
push
lods
leave
scas
sub
repnz
dec
iret
mov
push
andb
push
dec
mov
in
inc
fcmovbe
mov
xor
insl
mov
cmpsl
mov
aam
xor
je
scas
outsb
mov
rclb
insb
nop
lock
cs
icebp
mov
pop
mov
cmp
mov
stos
pop
in
je
pop
mov
pop
je
lods
aas
lods
cmpl
pop
aad
lock
sbb
or
pushf
inc
in
fnsave
inc
inc
pop
sbb
pop
int3
insb
pusha
add
lds
cltd
das
xchg
pop
fdivl
imul
repnz
adc
rorl
sub
movsl
cs
leave
add
clc
xchg
lds
gs
lods
mov
xchg
and
je
push
test
je
repz
into
mov
push
or
sub
divl
mov
cltd
inc
imulb
cmp
fwait
sub
and
lods
fisubrs
insb
je
cwtl
ds
mov
loopne
pusha
into
test
repnz
repz
add
scas
test
adc
je
sbb
xchg
inc
jnp
lcall
or
insl
push
push
fwait
test
lods
je
ja
and
xchg
mov
jg
pusha
leave
lods
xchg
test
lock
jo
or
mov
mov
lea
fcmove
sbb
push
add
test
jp
imul
inc
mov
xchg
jp
shll
xchg
std
mov
inc
repz
mov
xchg
add
mov
adc
adc
push
inc
xchg
xor
fistps
rcll
mov
jno
mov
mov
es
pop
cmc
xchg
repz
fisubs
loope
into
in
adc
movsb
mov
mov
lds
sahf
rorl
sahf
xchg
je
div
scas
movsl
sub
scas
enter
mov
inc
shrb
ret
jb
xchg
dec
loope
popa
stos
pop
daa
pop
shrl
lods
repz
clc
jno
jae
xchg
sahf
mov
fcmovnb
arpl
and
std
xchg
or
sub
mov
dec
aas
in
pop
dec
push
int3
sub
lcall
daa
or
sub
mov
cli
cwtl
sub
pop
stc
xchg
fists
nop
jb
rorb
jge
push
xchg
jb
lock
sub
popf
dec
mov
mov
sbb
scas
dec
jbe
and
pushf
leave
cwtl
jle
inc
lds
shll
insl
xchg
mov
out
outsl
jb
cmc
leave
imul
mov
fwait
and
and
cmc
pop
push
xchg
adcb
repnz
cmp
js
pop
leave
aam
sbb
pop
mov
mov
mov
daa
scas
xchg
pop
mov
and
pop
pop
sbb
loopne
push
insb
shlb
ds
adc
movsl
xor
insl
mov
mov
mov
mov
lgs
xor
mov
cli
xchg
mov
lret
mov
test
test
adc
xor
and
mov
fcomp
stos
test
scas
sub
cmpsb
outsb
mov
insl
cmp
add
or
test
mov
mov
lods
dec
js
xchg
push
dec
and
nop
outsb
mov
lcall
dec
in
stos
push
and
pusha
jo
jo
js
xor
shrb
mov
int3
inc
sub
popf
insb
and
inc
sub
popf
insb
and
lahf
inc
and
es
imul
in
stos
or
hlt
pop
js
push
push
stos
cmp
insb
test
cmpb
fimull
mov
daa
inc
andl
cmp
inc
xor
cwtl
mov
ret
xchg
test
in
les
and
mov
xchg
xchg
xchg
test
fwait
pop
stos
outsl
xor
fdivs
data16
gs
jno
ficompl
adcb
sub
sub
mov
and
ljmp
or
add
arpl
adc
push
xor
stos
jo
enter
mov
popf
and
cwtl
inc
sub
sub
jo
sub
insb
mov
imul
xchg
test
nop
pop
pusha
sub
mov
jecxz
pop
xor
iret
dec
cld
dec
testl
imul
adc
popa
mov
cwtl
andb
xchg
daa
cmp
push
xor
sbb
add
int3
call
shrl
cmpsl
jl
add
mov
mov
and
push
cmp
outsb
leave
in
mov
scas
xor
mov
scas
out
mov
sbb
mov
aas
out
xor
cmp
sbb
repz
test
in
and
add
sbbb
mov
lods
sahf
xchg
sub
dec
popf
popa
lods
mov
adc
push
mov
outsb
xor
xchg
and
mov
lahf
sub
mul
push
mov
ss
mov
int3
rcrl
adc
je
inc
xor
pusha
int3
popf
imul
cmpsl
lods
test
stos
enter
rcrb
sub
in
pop
push
icebp
mov
daa
pushf
xchg
sub
mov
popf
inc
jle
xor
rolb
xchg
xor
ljmp
stos
jno
ret
mov
jb
mov
adc
pushf
lret
push
sbb
mulb
test
movsb
shll
mov
inc
adc
scas
leave
imul
aas
cltd
push
mov
jbe
nop
mov
cmpsl
xor
test
xor
mov
ds
int3
pop
mov
fidivrl
fwait
xchg
jge
adc
jns
leave
movsb
add
fnstsw
adc
enter
out
mov
fwait
xlat
stos
test
push
cmp
jl
sti
jno
mov
jb
pop
icebp
fdecstp
jbe
push
cmpsb
push
popa
sub
repz
and
mov
enter
xchg
jb
fucomi
jecxz
jmp
arpl
fsubrl
icebp
repz
cmc
and
xor
jmp
xchg
mov
mov
int
adc
mov
sar
mov
aas
cwtl
popl
test
shrl
test
pop
hlt
lret
jb
jl
faddl
xor
icebp
fdiv
fmull
lea
xchg
loopne
push
adc
jp
mov
lods
lods
mov
mov
mov
mov
pop
dec
jecxz
mov
les
adc
popa
test
stos
mov
mov
xor
daa
ss
push
mov
adc
jmp
mov
dec
pushf
loopne
loopne
repz
adc
leave
add
dec
sub
lret
gs
and
repnz
jo
adc
popa
xor
rorl
push
ret
jne
jmp
rorl
or
popf
jmp
mov
fsubrl
mov
sub
sbb
addr16
out
scas
dec
xor
stos
test
scas
stos
das
mov
xor
enter
lock
lcall
fs
dec
fistpl
inc
or
xor
mov
or
aas
fsubs
add
cmpsl
or
cmpsl
in
scas
les
inc
mov
daa
test
repnz
lods
sub
xlat
nop
mov
cmpsb
xor
mov
hlt
mov
mov
popl
sbb
jae
arpl
mov
popf
repz
mov
repz
les
cmpsb
imul
aam
mov
xor
adc
pop
mov
mov
xchg
aas
lods
repz
jne
mov
int3
pop
jbe
imul
xchg
xchg
inc
xchg
push
ljmp
mov
xor
pop
cld
jo
stos
aas
pop
mov
enter
daa
mov
xchg
es
cltd
sbb
lock
xchg
outsl
scas
cmpsb
pop
mov
xorl
mov
lods
popa
je
pop
mov
rol
sub
xchg
add
push
and
and
add
vpunpckldq
in
shll
mov
push
mov
ds
sub
and
jecxz
sub
jns
data16
fiaddl
fs
inc
adc
sbb
cwtl
negb
ficoms
mov
aas
mov
sbb
leave
stos
daa
imul
add
dec
jae
lock
pop
sbb
sub
test
xchg
aam
nop
aas
in
push
les
mov
jo
dec
pop
jecxz
jb
scas
and
fldenv
cmp
test
xor
xchg
je
sub
movsl
mov
leave
xor
xor
inc
nop
stos
fwait
inc
inc
jo
push
mov
movsb
cwtl
dec
xor
cs
popa
xor
popf
stos
movsb
xchg
xor
lods
push
mov
pop
out
sahf
jo
sub
rclb
repz
push
rclb
je
arpl
sbbl
ret
adc
dec
pop
xchg
mov
push
jne
xor
int3
or
stos
xor
push
mov
ret
in
cwtl
inc
test
jmp
cmpsb
loop
mov
fbstp
ret
in
or
jp
arpl
insb
mov
pop
ret
mov
adc
jns
adc
mov
mov
adc
outsb
push
mov
dec
out
jb
xor
xchg
mov
rol
and
leave
adc
aaa
cmpsb
pop
stos
insl
test
dec
ror
repnz
int3
push
xchg
in
adc
jns
pop
int
inc
fwait
xchg
idivb
inc
xchg
pop
push
mov
in
call
adcl
inc
int
mov
mov
dec
scas
sub
into
sbbb
mov
je
mov
fs
jl
das
lahf
cmpsl
cwtl
jo
sub
int3
pop
jl
push
push
jne
popa
add
xchg
pop
pop
cld
push
sub
hlt
cmp
mov
xchg
sbb
inc
mov
xchg
pop
shrb
and
jns
cmp
jo
insl
jge
mov
pop
mov
pop
mov
mov
pushf
jp
sbb
xor
insl
loop
shll
push
aam
test
sbbb
sbb
mov
push
fisubrs
mov
cmpsl
dec
sub
jmp
cmp
cmpl
sub
mov
out
aaa
mov
xor
stos
in
mov
jl
push
xor
mov
in
push
xor
jl
popa
mov
enter
cmp
movsl
aas
jl
cmp
jle
xchg
test
push
lahf
and
pop
jle,pn
pusha
inc
adc
lcall
loop
cmp
jp
int3
sub
lods
push
mov
lcall
hlt
cmpsl
push
outsb
in
bound
xchg
clc
test
push
mov
movsb
scas
xchg
mov
test
xchg
sbb
out
cmc
push
lds
cmc
mov
add
push
cmpsl
daa
data16
xchg
pop
cmp
push
pop
xchg
adc
aam
test
mov
mov
aas
enter
adc
cmpb
jo
cmp
xchg
mov
cmp
dec
inc
scas
sub
jle
cmpsl
or
jmp
test
push
mov
fs
cli
push
sub
jb
in
inc
jb
arpl
bts
and
jb
stos
dec
lock
roll
outsb
stos
orl
dec
sub
inc
mov
mov
test
clc
test
loope,pt
dec
mov
aaa
data16
mov
scas
pop
push
xor
stc
xchg
xchg
out
add
xchg
rcrl
inc
js
jae
sbb
aam
imul
jl
xor
mov
mov
mov
mov
push
xchg
mov
rcl
cmp
lods
push
movsb
insl
xor
sub
xlat
push
loop
lret
adc
jns
mov
les
in
enter
ss
mov
push
les
push
xchg
lds
in
xor
mov
mov
mov
cmp
mov
inc
gs
daa
push
test
in
and
adcl
sub
sub
jno
in
test
xor
adc
sub
aam
mov
mov
sbb
stos
mov
dec
icebp
daa
or
lods
fs
scas
mov
pop
mov
in
cmpsl
leave
xchg
jl
xchg
in
dec
test
jp
std
test
mov
cmp
fildll
insl
aas
xlat
je
out
sbbb
loopne
cmpsl
out
popa
pop
adcb
orb
pop
jns
aas
xchg
adc
stos
add
adc
loopne
mov
lahf
sub
xchg
fldenv
sub
jae
sub
sbb
and
ljmp
or
sti
mov
xor
push
inc
jecxz
outsl
sub
xor
shll
lahf
pop
int3
add
sub
cltd
xor
iret
aaa
js
fs
aas
in
xorl
mov
dec
lea
xor
movsl
push
push
push
and
pop
cs
cmp
and
repz
mov
andl
sub
or
xor
js
popa
scas
mov
mov
jmp
pop
cltd
scas
dec
les
add
cli
stos
aas
jnp
in
pop
arpl
dec
repnz
xchg
jbe
movsl
aaa
mov
imul
push
mov
js
jno
sbb
rol
xor
jae
xor
enter
aaa
add
dec
sub
mov
mov
aas
mov
daa
jae
pop
and
sub
test
adc
fmuls
stos
inc
xchg
movsl
and
mov
out
ljmp
stos
mov
std
les
leave
mov
or
aas
xor
cli
ds
xor
into
mov
lret
jns
inc
imul
push
popf
in
dec
hlt
insb
les
repnz
out
mov
sub
nop
cmp
insb
movsb
pushf
repz
xchg
mov
jmp
xchg
sbb
sub
xchg
aas
popf
repnz
dec
lods
scas
xchg
mov
mov
fxtract
xchg
sbb
push
sbb
roll
shlb
hlt
popa
es
push
xchg
mov
cmp
jmp
test
bnd
push
mov
movsl
sub
lcall
popa
les
jmp
xchg
in
xorb
mov
movsb
in
outsb
popf
data16
in
ss
mov
das
pop
mov
inc
subl
fs
addr16
xor
mov
dec
mov
xor
adc
push
jns
mov
cmp
std
stos
inc
lahf
lret
jno
dec
sub
mov
mov
dec
loop
mov
scas
sbb
jne
pop
outsb
xorl
jo
loope
lods
orl
nop
cmp
mov
or
adc
jl
xor
loope
rcrl
pop
pop
sti
fisttpl
cmpsb
jo
mov
pop
int3
xor
insb
sti
loop
push
pop
add
push
xchg
xor
rclb
fs
sbb
ret
and
je
aas
fisubrs
bound
push
jns
inc
adc
jns
ret
mov
xchg
scas
test
sub
cwtl
mov
scas
mov
xorb
cmpsb
leave
or
mov
mov
pop
in
andb
cltd
jo,pt
mov
mov
mov
xor
cli
popa
imul
stc
ret
push
dec
inc
insb
stos
test
fwait
jb
cmp
and
push
push
xor
ljmp
mov
jp
push
les
ja
fdivs
xor
inc
mov
jl
insb
sbbb
xor
mov
test
pop
ficoms
ror
jno
outsb
leave
mov
xchg
addr16
mov
test
inc
mov
sahf
xor
pop
sub
fcomip
leave
scas
push
loope
mov
cmpl
add
sbb
sub
orps
pop
xor
jno
mov
clc
stos
mov
or
hlt
adcl
mov
repnz
mov
inc
andb
leave
push
lock
mov
or
repnz
jecxz
sub
and
dec
nop
jmp
les
pop
shlb
int
jb
adc
xlat
jp
push
and
dec
push
jno
out
fwait
dec
and
add
mov
inc
fs
bound
mov
adc
or
les
stos
scas
popa
mov
pop
mov
xchg
lahf
outsw
cmpb
test
pop
stos
add
inc
aas
push
fisttpl
add
push
daa
lea
or
leave
xchg
sbb
insl
imul
xor
leave
rcrb
cmp
mov
xchg
xorb
test
push
and
jne
fiaddl
jo
repnz
mov
enter
daa
dec
sbbl
fwait
dec
fstpt
in
add
mov
mov
xchg
cwtl
test
test
out
inc
leave
pushf
xor
rcr
mov
repnz
loop
pusha
lret
orl
lods
push
sbbl
pop
das
mov
adc
mov
movsl
pusha
sbb
bound
cmp
test
ja
sbb
mov
jmp
insl
jecxz
adc
popf
mov
xchg
inc
ret
and
mov
sub
frstor
imul
hlt
add
xlat
cmp
ret
mov
jae
mov
xchg
pop
pop
mov
call
movsl
push
and
jns
iret
push
out
xchg
push
dec
ljmp
xor
icebp
xor
mov
dec
mov
fadds
jg
adc
inc
mov
fs
rcr
mov
cmpsl
sub
sbb
cmp
cmp
jl
mov
xchg
cmpl
mov
scas
outsl
jo
cmp
push
mov
cmpsl
movsb
mov
jnp
xor
bound
xchg
sbb
mov
mov
outsb
mov
imul
repnz
pop
mov
inc
lret
mov
daa
xchg
jb
je
iret
repz
mov
gs
push
mov
scas
cmp
jb,pt
and
pop
rorb
test
pushf
push
push
das
test
cmp
addr16
int3
push
or
imul
sbb
lcall
je
and
fs
or
cmp
adc
aas
cld
cmp
fs
push
dec
push
mov
push
push
push
popa
test
sub
jmp
fs
pushf
das
int3
cmp
call
cwtl
les
adc
sbb
aas
outsb
xor
jg
add
int3
stos
push
or
in
push
das
jnp
mov
leave
xchg
fwait
jb
mov
cs
xchg
pop
mov
scas
xchg
push
mov
jnp
mov
adc
jg
cld
or
mov
enter
cwtl
scas
pushf
and
imul
loope
movaps
ret
jle
cmp
int3
stos
test
nop
xor
je
outsb
adcb
stos
sarb
cs
cltd
fsubrp
xchg
nop
mov
cs
aad
lock
fdiv
mov
mov
mov
cmpsl
inc
dec
popa
sbb
and
jo
jo
addr16
cltd
and
sub
and
mov
mov
jns
mov
je
cwtl
xchg
ret
jns
xor
andl
insl
enter
in
testl
jle
add
outsb
leave
jp
and
aam
mov
add
pop
jmp
inc
sbb
pushf
aas
mov
leave
scas
or
lock
pop
sbb
sbb
pop
xchg
and
test
lret
dec
stos
lods
pusha
pcmpeqd
push
loopne
cmpsl
xor
cmpsb
add
push
orb
cltd
lock
inc
jb
clc
adc
jae
jbe
fdivl
adc
mov
push
pop
out
fisubrl
xor
push
push
mov
mov
pop
push
popa
lods
loopne
dec
dec
dec
mov
pop
adc
xchg
pop
scas
adc
xchg
and
lret
adc
jb
pushf
sahf
xor
daa
mov
ret
xor
push
inc
push
repnz
mov
aaa
xchg
pop
lret
test
ret
mov
test
add
xor
and
pop
push
addr16
pop
adc
adc
mov
loope
hlt
data16
cmpb
xchg
aas
mov
mov
xor
mov
repz
aam
test
xchg
sub
out
fwait
inc
cmpsb
mov
aas
fstpt
or
add
mov
fnstcw
xor
mov
sti
push
push
imul
xor
inc
xor
sub
outsl
xor
sub
and
push
pop
mov
in
mov
push
mov
push
mov
mov
xor
repnz
pop
mov
stos
mov
lods
icebp
leave
dec
outsl
lahf
pushf
mov
lods
movsl
in
mov
xor
call
fsub
call
lret
stc
cwtl
repz
fs
daa
insb
pop
shlb
movsl
mov
cmp
jl
cmp
sub
mov
loop
or
scas
loope
scas
inc
mov
dec
mov
jp
pop
loopne,pt
scas
daa
insb
mov
mov
cmp
mov
jbe
bound
stos
repz
xor
es
je
and
cld
cs
inc
xor
rorb
movsb
bound
aas
mov
or
outsl
stos
xchg
fisubrs
hlt
cmc
movsb
insb
push
mov
ret
addl
outsl
hlt
in
push
daa
insb
je
jne
push
mov
mov
mov
cmc
movsb
insb
push
stos
dec
sub
or
add
addr16
int3
push
mov
je
or
movsb
aam
lret
or
andl
adc
add
clc
mov
or
push
fists
lods
je
cwtl
sub
hlt
loop
adc
sub
lcall
mov
hlt
int3
xchg
je
pop
rol
xchg
cmc
and
out
fwait
mov
roll
mov
ds
jle
loop
pop
lods
stos
and
jae
aam
insb
call
cld
xorl
push
aam
enter
add
dec
lods
pop
loop
ljmp
mov
gs
or
push
mov
lods
outsl
fsubrs
dec
mov
jb
or
shlb
mov
and
push
cmp
mov
ret
and
je
popf
jns
icebp
shll
mov
js
fs
data16
scas
inc
pop
sbb
lret
icebp
mov
aam
inc
xchg
sbb
insl
jl
lock
ret
js
movsb
jmp
rcll
cs
leave
out
ss
hlt
cwtl
mov
mulb
cmp
xlat
scas
xchg
xor
jg
xor
lahf
mov
push
cltd
ja
stos
in
sub
sbb
lea
lods
faddl
jmp
dec
clc
cmp
lahf
mov
fidivl
insb
fsubl
pop
dec
pop
test
jmp
dec
dec
add
insl
sub
xor
adc
fcomip
mov
fldcw
jae
pop
ljmp
sub
inc
xchg
adc
outsb
cmpsb
mov
fdivrs
mov
out
mov
daa
fldl
sbb
nop
and
popf
ljmp
in
fwait
shrb
adc
sub
movsb
or
ds
enter
xchg
inc
xchg
testb
les
movsb
jns
adc
cmp
rcr
mov
inc
mov
shlb
data16
and
int3
mov
hlt
jo,pt
dec
pushf
inc
loop
push
mov
dec
ret
fcompl
test
loope
cmp
in
push
pop
jg
movsb
mov
fsts
jne
sarb
add
outsl
jo
hlt
into
mov
inc
cmpsb
dec
jns
cmp
pop
pushf
ds
sbb
out
push
pop
pop
adcl
inc
movsb
lods
call
pusha
fs
movsb
sub
in
mov
orb
mov
mov
cltd
out
mov
cwtl
ficoml
cmpb
aaa
inc
push
rcrb
cmp
jae
or
xchg
adc
xchg
mov
aad
aaa
jnp
ja
mov
nop
jae
jl
xchg
stos
jb
out
cmp
lret
into
movsb
dec
mov
push
push
pop
ret
movsb
gs
rcll
push
jmp
enter
ret
jns
js
lret
jbe
loopne
mov
cmpsl
test
test
shlb
test
and
rcl
loope
push
jbe
mov
lock
sbb
xor
lods
inc
sub
lods
in
fdivr
sub
mov
push
sbb
call
mov
dec
movsb
sub
insb
insb
and
dec
jo
sub
adc
enter
dec
and
push
inc
sub
es
sbb
add
dec
mov
nop
pushf
insb
xchg
and
pop
sub
ss
es
adc
add
popa
or
stos
mov
insl
lods
cwtl
push
jae
push
rep
outsl
fbld
ffree
inc
jno
loop
sub
std
in
loop
test
loope
push
xor
adc
xchg
cmpsl
stos
sbb
mov
imul
hlt
jo
andb
mov
cmpb
xchg
sbb
push
dec
mov
inc
lret
dec
leave
push
push
mov
cwtl
dec
mov
mov
cmp
dec
stos
aas
dec
dec
enter
push
push
insb
dec
jp
dec
mov
cmpsb
mov
jg
mov
xor
dec
lret
add
stos
push
push
nop
js
aad
add
mov
pop
jmp
add
push
lahf
cmpl
lea
push
push
inc
rcll
mov
xor
add
lcall
in
sub
js
dec
hlt
dec
push
pushf
xchg
stos
push
dec
test
std
pushf
xchg
jg
pop
int3
call
xor
mov
pop
int3
fmull
mul
xchg
jge
test
pusha
jnp
mov
xchg
jb
pop
inc
movsb
inc
jecxz
mov
lret
mov
push
stos
mov
adc
dec
insl
xor
test
pop
jns
insl
lea
xchg
adc
push
mov
in
or
sti
adc
push
insl
decb
push
pushf
popf
outsl
and
pop
fistpll
xchg
jae
mov
js
into
xchg
rcr
addr16
dec
push
fidivrl
adcb
test
mov
cmpsb
xchg
cmp
jo
insl
stos
dec
inc
push
loope
fisubl
aas
jmp
dec
pop
cmpsl
push
lods
in
inc
mov
fstpt
repz
je
addl
pusha
cld
outsb
jp
clc
bound
insl
movsb
inc
loop
test
insb
xor
stc
stos
and
fildl
test
mov
xchg
xchg
addr16
jno
cmp
in
test
pop
movsl
xor
jo
jo
jge
inc
dec
push
fcompl
inc
ds
test
and
popa
clc
inc
ficomps
sbb
push
addr16
adc
js
dec
or
push
dec
jo
dec
xor
aas
data16
pop
inc
test
pop
lods
pusha
push
mov
jo
je
js
jg
mov
jg
subb
stos
pusha
dec
mov
mov
mov
insb
stos
addr16
sub
popa
aas
push
lods
in
js
jl
test
lcall
dec
gs
add
xor
sub
and
pop
mov
stc
adc
xor
in
mov
dec
lods
pop
int3
mov
test
js
bound
ljmp
mov
sub
mov
push
add
stos
mov
and
fsubr
jae
lods
mov
dec
xor
lret
inc
mov
fwait
add
aaa
pop
int
mov
lcall
call
bound
push
mov
dec
dec
dec
jp
in
mov
sub
outsl
cmp
sbb
push
jno
pop
aad
xchg
movsl
sub
into
outsl
mov
mov
jecxz
mov
mov
imul
popa
dec
in
imul
push
jno
jle
push
push
mov
lods
jno,pn
jl
cmp
lret
mov
lods
mov
push
fwait
dec
pusha
aaa
repnz
int
push
mov
subl
inc
mov
mov
fiaddl
out
cltd
popa
xor
adc
cmpsb
jae
xlat
push
push
arpl
test
arpl
inc
lret
popa
or
sbb
andb
movsl
xchg
mov
pop
insb
stc
jo
popf
lock
push
nop
bound
popa
ljmp
test
dec
sahf
pusha
cmpb
xchg
and
stos
imul
popf
pop
pop
cwtl
jp
in
inc
inc
and
push
adcb
inc
arpl
dec
aas
jp
mov
push
inc
sub
add
mov
inc
sbb
mov
or
enter
push
hlt
push
dec
lret
addr16
cltd
jb
xor
and
sub
mov
outsb
xlat
jo
stos
pop
xchg
loop
jle
aas
out
shrb
lea
nop
sbb
inc
stos
add
cmpsb
and
sbb
inc
mov
inc
push
xchg
pushf
push
mov
mov
bound
xchg
add
sbbb
test
sbb
push
add
fs
push
fistpl
mov
test
stc
adc
inc
xchg
or
push
loope
call
scas
xor
mov
push
loopne
bound
cmpsl
addr16
pop
imul
pop
int
fisttpl
mov
outsl
pop
pop
mov
mov
sbb
dec
mov
mov
cmp
add
adc
mov
into
mov
lret
dec
insb
lahf
push
xchg
add
mov
mov
test
lods
test
stos
je
inc
mov
and
and
je
cmpsb
in
stos
xchg
and
jo
inc
sub
mov
add
repz
jecxz
fld
sub
inc
xor
xchg
dec
jbe
repnz
mov
mov
out
js
add
aam
aam
aam
aam
fsubr
lea
lcall
sub
mov
dec
filds
sub
sbb
dec
pop
scas
mov
mov
es
outsl
mov
aas
imul
mov
and
testb
test
clc
adc
jnp
dec
dec
repnz
mov
popf
adc
ljmp
pop
mov
pop
jns
jno
sbb
cmp
pushf
xor
inc
aas
dec
imul
jbe
fbld
imul
pop
mov
mov
sub
scas
or
fcoml
jae
inc
mov
pop
jp
rcrb
push
pop
test
rolb
les
jae
insb
imul
js
inc
jb
push
lods
in
push
test
inc
add
ljmp
hlt
or
sti
enter
ret
xchg
pop
addl
sti
fsub
fisubrl
push
xchg
adc
mov
negl
mov
sbb
lods
in
mov
jo
jns
clc
mov
mov
nop
adc
mov
jo
fwait
sub
push
mov
insb
adc
cwtl
xchg
cmp
dec
sub
mov
push
jo
jl
xor
sbb
dec
xchg
je
movsb
imul
jecxz
stc
sub
test
xchg
insl
mov
push
shlb
insb
lods
shlb
js
sub
xchg
jno
in
and
mov
stos
lods
xchg
cmp
mov
push
jnp
cmp
aad
jb
je
mov
orl
push
int3
ss
xor
incb
pushl
adc
and
test
add
repnz
push
stos
adc
fiaddl
out
push
in
lods
sbbb
aam
scas
xorl
sub
xor
sub
jnp
shrl
or
adc
outsl
cwtl
aam
mov
xchg
shrb
ljmp
and
stos
sub
inc
stos
jnp
push
sahf
js
lods
mov
in
mov
pushf
xchg
xchg
and
in
jae
jno
sbb
push
lods
popa
pop
push
mov
and
in
inc
and
push
or
test
lods
ljmp
sbb
mov
sti
and
push
std
adc
out
and
lock
lods
sbb
jb
pop
mov
mov
mov
mov
das
int3
xchg
jecxz
imul
add
xchg
sub
or
xchg
inc
xchg
lods
jno
mov
mov
jno
stos
mulb
out
mov
stos
shrb
xchg
int3
jo
fsubrs
loopne
call
and
xchg
adc
sbb
and
sub
xor
sub
inc
nop
dec
insb
pop
and
push
js
orb
insb
mov
jo
je
shr
stos
fdivr
imul
mov
pushf
sbb
push
adc
pop
out
sub
add
vpclmulqdq
pusha
push
je
lahf
dec
sbb
and
mov
movsb
in
pushf
inc
xchg
mov
cmp
sbb
nop
shrl
sbb
xor
push
in
xchg
cmp
loope
ret
arpl
stos
insb
dec
xchg
mov
pop
fwait
scas
xor
mov
pop
arpl
inc
mov
add
mov
in
movsl
in
fsubrl
lock
int3
mov
fs
ljmp
out
lods
pusha
mov
rclb
subb
inc
dec
push
cmpsl
outsl
scas
bound
inc
xchg
fwait
cmpsl
outsb
adc
mov
mov
lods
jne
insb
mov
mov
and
outsb
mov
xor
dec
push
pop
movsb
dec
and
addb
fwait
test
jl
stos
and
cmpsl
pop
mov
push
xorl
push
sub
mov
test
push
cmpl
push
out
fs
mov
dec
jl
jl
mov
push
push
add
stos
xor
sub
dec
sub
mov
dec
push
xchg
push
cmp
arpl
fisttps
push
pop
pop
stos
cmpsl
dec
adc
mov
in
pop
add
push
jo
adcl
mov
sbbl
les
xorb
or
jle
mov
arpl
xor
js
jbe
push
mov
xor
imul
je
stos
mov
call
jecxz
je
fs
je
pusha
cmp
out
dec
lret
sarl
dec
fdivrs
gs
pop
lret
push
adc
pop
xchg
xorb
push
fs
mov
push
mov
xchg
test
inc
and
fistl
test
push
loopne
adc
popa
dec
inc
push
inc
dec
push
lret
xchg
xchg
insb
pop
xchg
loop
push
push
mov
add
inc
inc
shll
push
xchg
cmp
xchg
add
mov
dec
arpl
stos
cmp
mov
mov
mov
mov
shlb
lods
lods
mov
jg
sbb
sarb
sub
mov
mov
shrl
mov
and
mov
xchg
mov
xor
movsb
adc
mov
into
scas
xor
fmuls
stos
inc
dec
xchg
sub
and
sarl
loope
and
inc
add
int3
or
mov
outsb
je
sbb
andl
mov
mov
push
mov
mov
lods
dec
xchg
mov
xor
test
push
inc
stos
mov
rorl
mov
imul
mov
loope
into
mov
mov
inc
stos
inc
cltd
ds
in
jge
pop
and
dec
in
in
lds
in
in
in
icebp
sahf
sbbb
push
aam
orl
enter
rol
mov
stos
jp
jns
js
ja
jbe
jne
jne
jne
jne
jne
jne
cmpsb
mov
bound
inc
in
movsl
xor
and
out
frstpm(287
aam
in
in
icebp
lods
jle
and
jbe
pop
rcll
sbb
adc
test
mov
test
cwtl
rclb
les
push
mov
sbb
jl
jp
jns
js
ja
jbe
jne
jne
jne
cmpsb
stos
jnp
data16
push
in
movsl
sbb
and
cmpsb
jp
data16
in
movsl
das
gs
and
ret
jns
data16
movsl
cmp
xor
ja
shlb
enter
sar
scas
jnp
pushf
jp
jns
cmp
rol
lret
jnp
push
lds
push
mov
jno
scas
test
push
arpl
pop
rcll
das
shll
sbb
adc
add
in
shl
fcmovb
rol
ret
les
int3
jo
les
sub
mov
fwait
jp
imul
dec
jbe
jne
jne
nop
jb,pn
insb
ss
ss
ss
fldt
pop
jne
jne
cmpsb
test
mov
in
movsl
inc
gs
icebp
xchg
orb
or
hlt
shlb
das
jg
and
rolb
int
mov
cmpsb
and
add
cwtl
test
xor
and
gs
and
fwait
and
je
push
icebp
dec
loope
sarl
shll
sbb
add
shr
in
mov
stos
jp
rclb
push
cmp
and
pop
adc
xchg
jns
lea
pop
dec
dec
sub
or
sti
int
int
int
shrl
jle
cmp
and
sbb
mov
fistpll
inc
cwtl
inc
xchg
ds
cmp
cmp
fs
jne
jne
jne
jne
nop
mov
lea
adcb
adc
clc
adc
in
adc
lcall
dec
mov
loop
addr16
js
ja
mov
adc
aas
insl
xor
sub
pop
int
int
lret
mov
xchg
jb
insb
xchg
pop
adc
sub
and
adc
je
jmp
or
jge
jmp
loope
dec
sub
lods
scas
jp
lea
sub
cwtl
imul
ret
mov
mov
lods
jns
add
ds
loope
rcrl
mov
jno
push
adc
scas
ja
mov
xchg
cltd
push
jg
jns
jno
bound
mov
lea
aas
jmp
jecxz
ficompl
pop
lock
mov
cmpsb
fildl
shl
mov
subb
rcll
test
popl
add
loop
aad
enter
lods
data16
es
movsl
dec
sub
cmpsb
mov
data16
es
mov
xchg
and
cmp
push
ss
imul
jne
mov
es
in
movsl
cmp
in
repnz
pushf
or
lods
into
jns
lea
push
dec
push
sub
pop
int
int
int
int
int
int
int
int
int
int
shll
insb
popa
shlb
icebp
cli
loope
rcl
ror
enter
rol
or
dec
cmp
cmp
loopne
mov
int3
mov
add
or
cli
xor
fs
inc
nop
cwtl
stos
test
and
scas
lods
push
insl
cmp
add
sahf
xorl
xor
pusha
fnstenv
loop
in
lret
xchg
loopne
fdivrl
push
cwtl
test
xor
add
call
rorb
iret
mov
jb
mov
sub
js
push
push
roll
les
and
sbb
sbb
hlt
push
outsl
xor
lcall
fsubl
testb
idivb
mov
adc
and
and
adc
adc
add
add
clc
in
in
in
in
in
in
in
in
in
in
in
in
in
jmp
mov
xchg
test
movsb
xchg
xchg
adc
mov
ss
pop
js
jne
jne
nop
enter
mov
lret
xor
cld
or
mov
out
sar
out
clc
inc
mov
add
mov
lret
fiadds
stos
cmpsb
jecxz
out
test
out
fadds
call
loop
decl
or
lods
in
sti
sar
into
push
add
shl
cmc
or
xor
mov
mov
icebp
add
sti
or
jle
hlt
ljmp
ret
loopne
hlt
shl
add
enter
sub
in
out
std
mov
stc
in
mov
inc
xchg
mov
inc
inc
inc
inc
add
xchg
inc
pop
loopne
jmp
add
adc
out
in
in
mov
cmpsb
hlt
pop
popa
mov
inc
dec
inc
inc
xchg
dec
dec
dec
sarl
rcrb
push
fisubs
cmp
xchg
jne
ret
push
xchg
mov
pop
jp
cmpsb
jge
push
adc
or
inc
jp
daa
mov
cmp
push
rolb
cmp
aam
jl
je
dec
stos
fsubrl
mov
mov
arpl
popa
mov
xchg
andl
jo
pop
mov
pop
mov
pop
lods
pop
lods
cmp
lods
sbb
push
xchg
out
aam
mov
mov
mov
dec
adc
sub
cli
push
in
in
mov
xchg
movsl
cmpsb
add
out
xchg
not
jno
pop
loope
js
popa
cmp
inc
adc
ljmp
xchg
xor
movsl
call
mov
xchg
ja
inc
int3
mov
mov
xchg
jae
xchg
mov
sub
pop
ds
xchg
mov
or
ja
inc
ret
loope
movsb
cmpsb
push
inc
push
or
stos
sbb
jmp
adc
bound
in
inc
psubq
fisttpll
into
icebp
movsb
cmp
mov
dec
dec
xchg
out
pop
pop
in
pusha
push
add
mov
loopne
jmp
loop
cmpsb
loope
stc
or
sub
push
cmp
lret
push
push
xchg
lock
fucom
test
jae
sarb
loop
xchg
std
in
mov
jge
stos
stc
lods
ret
jmp
or
push
push
mov
mov
adc
repnz
sub
roll
jmp
out
repnz
cmp
div
inc
push
mov
ljmp
add
loop
scas
push
dec
and
lods
pushl
stc
aas
ficoml
ljmp
call
shlb
out
pop
push
sti
fmull
xchg
in
mov
loope
mov
cmpb
mov
in
add
xlat
jb
scas
insl
clc
fdivp
cmp
jmp
into
push
xchg
fucom
das
cwtl
add
decb
lods
jmp
inc
xchg
and
adc
scas
xchg
xchg
scas
or
lret
insb
cmpsl
jmp
mov
in
mov
test
testb
xor
xor
mov
mov
ret
loop
mov
sti
lret
out
sti
lds
out
pop
mov
lcall
loopne
into
clc
add
add
es
cld
cli
and
repz
aad
jb
pop
push
mov
or
sub
lret
outsl
pushf
xchg
dec
fst
xlat
xchg
jle
aad
add
jmp
in
push
adc
sub
mov
in
or
dec
shlb
or
jp
aad
loop
icebp
xchg
outsb
jge
adc
in
inc
shrb
add
sti
fcmovnu
mov
mov
int3
jnp
fstp
cli
xor
add
in
leave
mul
or
loopne
jmp
jns
jg
inc
stos
or
mov
jno
xchg
add
sub
xchg
xchg
jecxz
in
in
lock
neg
sarb
orl
int3
dec
xchg
mov
ja
or
push
xchg
push
addb
mov
addb
fadds
jno
pop
and
inc
rep
cli
out
js
lcall
sub
sbb
jge
aas
dec
out
cmp
jl
jmp
movsl
pop
xchg
xchg
inc
cltd
cmp
ds
mov
push
dec
inc
sbb
call
idivl
adc
imul
push
mov
mov
sbb
movsl
xchg
xlat
mov
cltd
mov
xchg
gs
dec
les
mov
dec
iret
inc
mov
push
clc
test
and
push
ja
popa
mov
xchg
rol
ror
gs
dec
inc
pop
mov
adcb
je
aad
jbe
jge
sahf
inc
outsl
push
push
dec
adc
push
cs
xor
into
ja
pop
xchg
imul
testb
xchg
mov
rolb
jb
add
cmpl
xor
ss
jae
jb
mov
cmpl
xchg
pushaw
fsubrs
jne
xor
addl
jno
outsl
outsb
ja
sub
fmuls
jne
insb
cmp
movsb
daa
data16
das
jmp
lahf
or
lods
mov
jae
movsb
sub
mov
mov
int3
push
imul
jne
lods
add
hlt
and
ljmp
mov
int
push
push
push
repnz
scas
push
cld
fs
sarb
aad
stc
fisubrl
mov
mov
div
jb
inc
push
insb
inc
mov
movsl
inc
mov
xchg
mov
loop
pop
cs
fnstenv
or
pushf
lock
inc
and
sbb
fwait
inc
in
xchg
and
inc
lds
nop
outsb
dec
leave
notb
push
push
jl
cltd
xchg
adcb
testl
add
sahf
mov
mov
adc
test
pusha
inc
call
mov
inc
insb
xchg
into
insl
xchg
push
clc
bnd
insl
mov
addb
inc
push
and
repz
insl
paddw
lcall
dec
mov
push
xchg
mov
mov
pop
loop
loopne
mov
pop
mov
lock
xchg
dec
xor
int3
mov
and
mov
std
xchg
jnp
out
gs
lret
pop
test
mov
sahf
das
xlat
repnz
clc
cmovnp
push
js
sub
mov
imul
jb
popf
adc
push
xor
ficoms
sub
inc
mov
or
mov
in
jae
adc
xchg
inc
jo
loopne
sbb
xorl
push
mov
subb
adc
pop
sti
adc
imul
adc
je
mov
mov
mov
jne
mov
nop
pop
or
cmpb
cli
cmp
cmpsb
daa
aad
cltd
test
lods
mov
sub
movsl
sbb
lods
aad
dec
fisttps
cwtl
adc
movsb
dec
push
cmp
mov
fs
push
fists
test
scas
push
xchg
mov
mov
clc
in
stc
in
stos
adc
dec
movsb
inc
lea
inc
mov
cwtl
mov
lahf
xorb
mov
mov
pop
in
mov
outsl
push
nop
mov
popa
mov
scas
sbb
mov
pop
int
test
push
sbb
adc
sahf
lret
movsb
imul
stos
or
mov
lds
ja
outsl
mov
jnp
insl
jo
jae
insb
jno
fs
leave
ret
pop
fbld
push
pop
cmp
push
pop
pusha
lods
push
push
pop
in
push
pop
pop
icebp
dec
push
movsl
lods
dec
dec
push
and
je
jbe
push
jbe
notb
inc
adc
je
inc
jge
push
je
push
lods
icebp
jae
dec
pop
rorl
push
jbe
pop
movsl
push
push
pop
cs
pop
sub
pop
cmp
pop
pusha
lods
arpl
repz
outsl
cmp
jno
jns
fwait
mov
fstp
les
imul
push
in
jge
push
stos
sbb
inc
aad
popf
inc
xchg
mov
lods
inc
dec
aam
inc
inc
out
xchg
ds
lods
mov
inc
dec
dec
inc
insb
test
lods
inc
adc
dec
movsb
mov
jnp
int
pop
cwtl
add
cmp
adc
cmpsl
sub
into
pusha
jne
jae
popa
mov
mov
aam
jge
mov
movsl
xor
add
aam
addb
and
pop
sub
xor
and
divl
idivb
repz
les
cmp
dec
lods
sub
out
xchg
cmp
pop
aas
push
lods
inc
inc
aam
sbb
inc
jg
repz
dec
dec
les
jbe
push
mov
jnp
nop
push
popa
pushf
mov
or
push
lods
sub
inc
pop
sti
mov
push
mov
les
add
stos
enter
test
js
mov
jmp
popf
rcl
mov
imul
adc
sub
xchg
cmp
xchg
fimuls
repz
push
mov
xor
jbe
fistpll
mov
in
nop
repz
pop
das
test
pop
arpl
jl
les
mov
leave
fldenv
inc
sbb
and
int3
stos
jae
loop
xor
jae
int3
lret
shrb
xor
xchg
in
mov
cmp
mov
cmp
lods
fwait
shr
mov
rcl
enter
or
jmp
mov
ret
daa
mov
sbb
xchg
fisttpll
push
xchg
gs
pop
pop
je
pop
bound
xor
lods
push
pop
add
rcl
lahf
es
lods
pop
adc
clc
int
into
sub
rol
repnz
mov
mov
mov
pop
dec
xor
sub
add
js
sbb
scas
mov
imul
mov
stos
mov
lret
cmpsb
inc
adc
sbb
cltd
dec
fildl
inc
jg
xchg
popf
xchg
adc
adc
aam
pop
gs
test
pop
push
stos
and
pop
xor
bound
in
jmp
into
lahf
int3
xor
in
xchg
and
enter
mov
lods
lods
cmp
xchg
push
and
enter
and
nop
les
xchg
adc
pusha
sar
nop
arpl
mov
scas
dec
push
jno
loopne
inc
inc
push
bound
push
sbb
add
lods
dec
push
mov
cmp
mov
or
mov
cwtl
rolb
fcoms
rcrl
mov
push
stos
push
ret
push
push
mov
sbb
lock
int3
cwtl
hlt
mov
mov
mov
sbb
rorb
je
xchg
stos
pop
rcll
xchg
cmpb
dec
xor
dec
fistl
loopne
dec
lret
test
loopne
mov
adc
shrl
fisttpl
lcall
xchg
xchg
lret
cltd
mov
stc
sbb
rorl
adc
pushf
mov
push
les
pop
mov
mov
sbbb
adc
shl
add
push
pop
pop
xor
cmp
inc
or
dec
dec
pushf
insl
mov
push
lods
add
xor
ret
push
push
loopne
out
inc
in
push
mov
lea
sub
andb
loop
sbb
cmpsl
pusha
les
rclb
outsb
mov
mov
scas
or
cs
aam
test
mov
lods
rol
xor
jle
inc
and
sbb
scas
jmp
leave
adc
inc
hlt
in
xor
adc
cmp
inc
repz
pop
inc
xor
dec
push
push
lock
mov
fisttps
mov
jbe
fisubs
fdivl
cmp
adc
mov
mov
aam
mov
pop
xor
add
push
insb
cli
cmp
xchg
shll
nop
xchg
mov
sub
adc
mov
out
test
fwait
sarl
adc
out
mov
and
xor
sarl
cmp
xor
outsl
les
mov
dec
push
call
sub
fwait
sbb
insb
xchg
js
shll
mov
adc
mov
in
clc
xor
pop
mulb
mov
xchg
repnz
loopne
mov
dec
int
mov
pop
inc
je
daa
cmp
mov
xor
into
cmp
cmp
cmp
inc
mov
xor
inc
scas
call
into
mov
mov
testl
mov
ret
lock
aam
push
out
and
jge
mull
aam
mov
jl
in
xor
sbb
and
aam
aad
jnp
sub
jbe
and
sub
cmp
aam
ds
mov
test
inc
mov
cmp
xor
sub
cmp
std
and
mov
adc
add
pop
mov
fsts
rcll
insb
or
cwtl
fsubr
cmp
imul
pop
in
movsb
fcoml
fs
sar
push
cwtl
mov
add
sbb
xor
jmp
sub
sub
xor
stc
lods
sahf
ds
stos
lods
inc
mov
inc
inc
and
xor
cs
sub
and
adc
sbb
add
dec
testl
sub
in
cwtl
mov
loopne
aas
aad
fstl
sub
out
push
movsb
loop
inc
in
in
sub
jbe
cld
movsl
hlt
cli
add
and
or
cs
and
sub
es
ss
aam
dec
mov
xor
pushf
insb
cmp
mov
pushf
pop
cmp
xchg
and
sub
sbb
sub
fcomps
sbb
je
hlt
add
push
mov
div
stc
adc
xor
jecxz
int3
jns
loopne
mov
inc
roll
mov
aad
jnp
fisubl
jnp
daa
scas
enter
sahf
add
add
nop
add
jo
adc
mov
pushf
and
sbb
push
cmp
xor
inc
sbb
xor
cmp
daa
xor
mov
sub
adc
sub
mov
stc
push
mov
in
jmp
in
in
cmp
frstor
adc
mov
int3
iret
inc
pop
mov
xor
loop
jmp
adc
std
out
jl
mov
das
or
push
or
and
mov
mov
lods
nop
mov
aam
or
int3
cmp
cmp
sub
mov
xor
adc
adc
add
icebp
repz
fsub
pop
hlt
push
lcall
dec
fdivs
inc
ja
jecxz
ret
mov
loop
mov
jmp
sub
mov
jnp
adc
add
lock
sub
mov
mov
stos
cmp
jl
insb
je
cmp
js
fs
push
imul
int3
clc
dec
pushf
movsb
add
iret
and
sub
stc
add
dec
pop
in
and
shll
mov
faddl
xchg
push
inc
adc
int
and
sarl
add
mov
into
xchg
aam
iret
test
mov
jne
das
or
lods
add
cltd
test
in
hlt
jl
xor
sbb
je
cmp
xor
ds
movsb
ret
cwtl
int
mov
mov
mov
loop
xor
sbb
test
or
imul
mov
movsb
mov
jmp
scas
fiadds
dec
shll
int3
pusha
lods
push
je
int
mov
xchg
jl
adc
mov
mov
loop
mov
xor
and
adc
mov
push
mov
cmp
pop
fs
shr
imul
pop
jl
mov
movl
in
lret
xchg
add
mov
fcoml
pushf
fcomip
loope
inc
in
rcr
add
into
dec
je
int3
arpl
call
push
xchg
lods
mov
xchg
sbb
xor
ret
aad
sbb
fsubr
pop
jo
mov
xor
cmp
xor
mov
pop
iret
movsl
mov
mov
repz
lcall
in
popa
enter
or
dec
mov
stos
repz
enter
xchg
mov
into
adc
insb
stc
dec
test
repnz
cmp
xchg
out
int3
ret
test
fsubrl
fisubs
mov
aad
mov
ret
cmp
push
push
icebp
sub
lahf
in
xor
mov
xor
push
push
cmpsb
xor
mov
fsts
aam
mov
int3
sub
inc
mov
in
es
xor
xor
incl
mov
clc
in
aam
shrl
lds
fs
sbb
sbbl
and
outsb
adc
pop
insb
mov
rcll
clc
sbb
sbb
xor
lret
jb
in
int
sub
scas
add
cmpsb
movl
jo
dec
insb
cmc
fcompl
out
cmp
in
and
imul
test
cld
sbb
fwait
ljmp
insb
cmp
sub
jnp
cmp
mov
pushf
stos
les
jns
movsl
mov
loop
jl
sbb
aaa
mov
mov
inc
inc
mov
xor
push
mov
mov
cmpsb
ret
das
out
mov
adc
hlt
movsb
fldl
call
ss
sbb
mulb
negb
and
add
scas
enter
sub
test
mov
insl
push
stos
stc
sbb
popa
xchg
mov
nop
xchg
int3
cld
add
hlt
mov
or
call
mov
add
push
mov
xor
movsb
aaa
mov
cwtl
xor
adc
iret
arpl
fdivr
pop
test
push
dec
in
shrb
xor
xor
mov
lods
rorb
mov
push
or
adc
nop
add
xchg
mov
sbb
sub
mov
lret
sub
ret
arpl
sbb
mov
nop
cmp
mov
xor
es
movsb
mov
inc
dec
push
stos
jl
fs
lods
sahf
lea
xor
pusha
add
push
sub
jg
les
and
xchg
stos
xor
adc
ss
pop
movlps
add
jnp
test
mov
popf
xor
fstl
in
jno
int3
rcrl
lret
cmp
imul
movsb
aam
sahf
cld
ja
movsb
xor
cs
fdivp
mov
push
cmp
mov
dec
cmp
sub
test
cmp
jp
dec
and
and
mov
out
in
adc
jo
enter
in
shlb
dec
xor
pop
xor
in
pop
push
lock
cmpsl
loop
test
jl
xor
or
lods
and
xor
xchg
pushf
mov
xchg
les
dec
inc
inc
stos
dec
push
mov
pop
pop
pop
mov
xor
lock
dec
dec
ret
movsb
nop
sub
push
or
scas
add
cmp
push
push
add
lods
pop
bound
icebp
push
inc
test
push
lock
je
and
push
and
sbb
or
cwtl
xor
add
repz
xor
push
int3
cmp
nop
adc
xchg
stos
shlb
repnz
push
sbb
js
dec
sarb
cltd
mov
pop
bound
jb
pop
xor
push
mov
dec
dec
loope
inc
mov
mov
aaa
cmp
sbb
xor
or
repnz
mov
sub
rcll
xor
movsb
or
or
fsubl
xor
xor
add
mov
xchg
or
cmp
push
enter
push
rcrb
movsl
imul
xor
pop
arpl
sbb
in
xchg
mov
sub
or
jae
div
les
mov
xor
fmull
movsb
xor
popa
xchg
in
mov
sbb
cwtl
aas
aaa
jae
repz
dec
arpl
dec
dec
cld
mov
mov
mov
pop
shll
mov
push
push
and
lods
pusha
bound
push
fs
and
push
and
push
adc
dec
jb
dec
aam
inc
inc
inc
inc
sub
adc
out
test
js
std
cmp
sub
mov
ds
cmp
inc
pop
ret
inc
jg
cli
inc
imul
shlb
push
mov
pop
pop
cli
faddl
mov
stos
add
pop
stc
or
or
jmp
in
lock
in
or
decl
add
push
mov
icebp
leave
jmp
and
add
ret
clc
in
cmp
add
fists
jmp
cmp
xchg
loope
lock
cmp
dec
pcmpeqb
mov
and
adc
xchg
fdivs
repnz
mov
mov
subl
popa
out
dec
cmp
mov
xchg
lock
out
js
ret
mov
arpl
out
inc
pop
rcl
jbe
bound
ds
mov
or
push
xchg
aas
pop
push
test
adc
pop
xchg
sti
adc
rorl
clc
loop
iret
xchg
jl
rcl
fcomip
xchg
add
sub
jp
mov
adcb
jp
xchg
cmpsl
xor
mov
aas
fidivrs
ljmp
stos
out
sbb
xor
or
lock
cwtl
rolb
orl
xor
scas
mov
mov
push
inc
dec
roll
es
sbb
les
cmp
ljmp
or
and
or
hlt
insl
in
int
mov
mov
leave
add
jmp
xchg
mov
mov
imul
in
incb
ja
lcall
add
jae
gs
or
stos
add
movzwl
lods
pop
push
in
mov
outsl
scas
mov
xchg
lret
jp
jno
pop
stos
fisttps
xchg
vmovntps
subb
adc
in
leave
aas
and
out
mov
and
in
stc
cli
insb
shrl
mov
test
add
andb
and
jae
sbb
lods
xor
cmpsb
dec
rclb
hlt
mov
mov
in
outsl
fdivl
cmp
movsl
push
cltd
insb
cmp
pushf
push
mov
hlt
mov
inc
insl
sub
lods
addr16
jl
aam
pop
and
movsb
shll
xchg
mov
jo
test
loopne
push
mov
add
xor
inc
insl
clc
pop
mov
push
js
push
movb
stos
in
jg
fwait
orl
jg
adc
xchg
lods
push
das
jl
lods
or
mov
ret
movsb
mov
insl
sub
sub
or
and
mov
movsl
mov
nop
xor
inc
not
data16
test
push
pushf
xchg
mov
xchg
or
xchg
inc
je
stos
pop
push
and
ljmp
xor
xchg
adc
in
xchg
sbb
xchg
je
push
dec
adc
inc
xor
test
adc
in
inc
cld
movsb
fs
jbe
les
pushf
push
mov
lahf
faddl
outsl
movsb
shlb
test
je
xchg
jnp
xchg
outsb
les
test
in
xchg
sub
pushf
xor
fwait
iret
sbb
in
imul
xchg
dec
xchg
ret
lahf
jns
imul
int3
jae
cmpsb
aam
xor
in
xor
add
add
aas
popf
sub
xor
push
xor
dec
divb
movsb
idivb
sarl
movsl
das
push
hlt
jns
mov
enter
mov
and
out
aam
xor
or
aam
lods
lods
mov
mov
pop
pushf
and
shrb
mov
in
sub
lods
movsb
ljmp
jo
mov
dec
mov
outsb
jmp
xchg
sub
xchg
lock
xchg
int3
push
je
lahf
or
jno
ret
adc
mov
int3
jl
outsl
push
mov
rclb
mov
je
pushf
mov
mov
aam
jmp
sbb
and
and
and
mov
dec
xchg
mov
add
mul
mov
mov
test
mov
sub
xchg
aam
cld
xchg
mov
rcr
je
sbb
jecxz
cmp
inc
aam
and
in
repnz
mov
dec
xchg
pushf
rol
fstpl
lock
aaa
repz
pushf
mov
xchg
adc
mov
xor
xor
movsb
dec
jl
aam
jbe
test
mov
mov
lock
mov
subl
cld
adc
add
pop
xor
adc
mov
mov
movsb
aam
rclb
jl
xor
mov
in
adc
xchg
cld
stos
test
xor
outsl
sbb
inc
add
jl
in
pop
in
shrl
and
insl
mov
xchg
stos
xor
in
xchg
cmp
shlb
mov
inc
gs
xor
shll
xor
aad
ljmp
pop
fsubrl
movsb
lret
lods
cmp
rolb
jbe
movsb
lret
xchg
pushf
sub
lret
cmp
int
mov
hlt
int3
pop
xchg
mov
sub
ss
andl
lret
ss
movsb
inc
inc
mov
mov
aam
movsl
xor
in
add
das
in
inc
aam
and
popf
fs
jbe
mov
lock
stos
mov
pop
nop
hlt
shll
jb
iret
inc
in
xor
mov
je
xchg
pop
pushf
and
mov
and
in
das
stos
jae
xor
scas
jae
lock
stos
or
mov
aam
and
sub
inc
sub
je
fs
nop
mov
jl
add
insb
jb
test
test
xchg
cmpsl
xor
in
test
mov
aas
mov
aam
or
movsb
jl
xchg
inc
mov
repnz
movsl
stos
arpl
jae
in
sbb
nop
hlt
cmpsb
xor
lea
mov
movsb
jne
xchg
pop
xchg
les
xor
add
pop
push
movsb
mov
mov
aam
in
addl
mov
ds
cld
mov
fdivrl
pushf
cmp
sbb
sbb
lea
xlat
outsl
aam
mov
call
dec
je
xchg
je
ljmp
mov
xchg
hlt
push
jb
sub
and
push
mov
icebp
mov
lods
inc
or
mov
or
adc
inc
std
cmpsb
lods
cld
lods
mov
add
mov
subl
fsubrl
push
mov
jbe
sub
mov
aam
xchg
xchg
lods
test
je
pushf
in
push
inc
stos
and
hlt
sub
enter
and
inc
fbld
popf
dec
push
arpl
mov
fcoms
add
movsb
jge
mov
flds
arpl
sub
mov
mov
mov
clc
in
pop
test
xchg
pop
les
insl
jae
dec
or
pop
xchg
add
lea
aam
test
mov
fwait
add
cmp
jl
pop
hlt
shlb
les
mov
les
in
adc
add
mov
mov
jo
fs
roll
cwtl
test
mov
mov
or
jmp
movsb
push
push
sub
fbstp
sbb
sub
je
fs
test
or
test
mov
mov
cld
mov
pop
xchg
or
jmp
lods
aas
sbb
stos
fs
adc
or
in
ficoms
push
push
jae
fs
xchg
or
mov
in
jae
repnz
push
jae
push
add
sub
mov
dec
mov
xor
je
xchg
movsb
movsb
aaa
push
sub
lock
mov
faddl
movsb
cli
sbb
jge
and
int3
xchg
aam
push
dec
rorb
testl
push
lahf
in
jb
enter
jns
dec
mov
lret
add
adc
jb
insb
add
mov
jb
mov
push
jb
mov
jb
lahf
testl
in
gs
insb
inc
xchg
or
pushf
ljmp
ret
mov
mov
scas
mov
cld
mov
mov
adc
jge
jmp
jb
js
imul
popf
jb
repnz
jb
les
daa
repnz
pop
test
xor
sbb
push
xchg
xor
stos
xor
in
cli
jne
les
pop
add
and
add
jl
insl
sub
test
xchg
movsb
xor
lods
mov
clc
xor
lods
adc
xor
fsubrl
pushf
jnp
jmp
cmp
xchg
push
mov
jb
cmp
xchg
add
cmp
push
sub
daa
cld
xor
and
xor
sub
fs
in
jb
mov
xchg
loope
adc
cld
inc
movsb
inc
mov
and
dec
daa
add
inc
test
inc
scas
and
mov
hlt
jae
repnz
sub
stos
lea
jno
fsubr
xor
test
insb
std
mov
stos
stos
pushf
fildl
pushw
movsl
push
xor
lods
das
xchg
mov
mov
add
frndint
sub
sti
inc
sub
xor
adc
fdivl
pop
jl
push
xchg
lods
roll
scas
jp
mov
movsb
push
push
imul
pop
hlt
xor
das
add
push
dec
fs
repnz
sub
lods
sbb
aam
push
test
insl
cmp
xor
pushf
add
dec
xor
jmp
dec
lret
cmp
inc
dec
jno
xor
inc
jno
add
stos
insb
daa
and
mov
das
jns
inc
nop
aas
hlt
fdiv
test
xchg
inc
mov
push
test
test
jb,pn
add
sbbb
stos
les
out
or
push
mov
imul
and
das
shlb
sub
add
popf
push
pop
outsl
jo
jnp
imul
pushf
add
clc
pop
sub
ja
dec
push
and
out
xchg
in
mov
jl
sub
inc
test
push
movsl
xchg
push
and
jno
in
cli
insl
xchg
shlb
xchg
sub
std
inc
pop
popf
insb
shlb
push
sub
inc
fs
movsb
shl
add
jno
or
xchg
add
std
jno
je
sub
sbb
adc
sti
jne
cwtl
in
inc
lods
sub
in
or
fidivs
dec
subl
mov
cmpsb
jecxz
jge
loope
inc
aam
cmp
mov
lds
fstpt
mov
ljmp
cmc
enter
mov
jne
aad
movsl
mov
loop
repz
add
xchg
inc
mov
mov
xor
inc
jl
test
rcl
in
pop
je
hlt
in
sbb
hlt
bound
outsl
pop
loop
push
ljmp
sub
push
sub
mov
test
in
in
in
mov
and
test
int3
sub
outsl
push
xchg
inc
outsl
sub
clc
call
jecxz
pushf
movsb
movsb
in
enter
jp
xorb
adc
ja
stos
xchg
sub
fcoml
add
es
xchg
push
mov
shlb
inc
aam
push
xor
xorl
xlat
std
in
stos
xchg
mov
lock
fisttpl
in
jno
push
movsb
xlat
popf
xchg
add
daa
aaa
adc
int3
inc
jb
cld
fs
mov
push
aad
loop
hlt
sub
mov
lock
es
movsb
aam
mov
push
lds
test
jbe
fwait
in
and
mov
mov
xchg
mov
dec
test
subl
cmpsb
and
inc
inc
jb
cld
test
mov
loop
cmp
stos
cld
arpl
pushf
jno
and
aad
xor
jo
shrl
jo
add
movsb
ljmp
into
dec
mov
mov
fcomps
push
adc
jne
mov
arpl
fwait
mov
nop
lret
movsb
in
sbbb
test
mov
lock
or
rcrb
or
inc
aam
jl
jnp
andb
nop
add
outsb
xchg
stos
jo
mov
andl
adc
xchg
stos
lea
out
jg
jo
ja
jle
test
jne
loopne
adc
out
iret
xor
xchg
inc
xor
mov
insb
repz
xchg
mov
mov
mov
aam
hlt
nop
xor
xor
add
out
pop
test
popa
jb
movsb
imul
cwtl
mov
cmp
movsb
cmc
outsl
test
jl
jae
pusha
dec
push
movsb
add
dec
pusha
jl
ss
pop
movsb
xchg
jns
mov
test
inc
pusha
jl
movsb
xor
cmpsl
mov
incl
repz
cmc
mov
or
flds
jl
aad
cmpsb
xor
jne
push
insb
movsl
add
mov
inc
and
shlb
ret
xchg
jns
cmc
or
hlt
stc
xchg
in
movsl
cmp
arpl
mov
or
pop
xchg
or
mov
test
test
js
mov
icebp
add
xor
add
inc
sub
cmp
jno
mov
and
aam
mov
mov
cwtl
fcoms
test
xchg
aad
aam
or
and
mov
adc
mov
shrb
in
jge
sub
cld
cmp
mov
add
imul
std
cmp
nop
mov
mov
or
sbb
adc
sbb
mov
sbb
ret
out
mov
repz
mov
ja
xor
inc
es
divb
xor
inc
daa
mov
divl
xchg
shlb
xchg
xchg
shll
xchg
xlat
adc
bound
mov
push
push
adc
arpl
mov
pop
push
stos
ljmp
mov
scas
mov
jg
sub
cmp
mov
sub
cmp
mov
aas
mov
lcall
mov
fisttpl
or
pop
push
mov
push
pop
or
pop
pop
dec
pop
pop
or
loopne
sub
jne
ja
je
js
enter
pushf
js
mov
push
outsb
pop
adc
pop
jge
insb
sbb
add
mov
je
test
jg
test
jl
les
sbb
lock
cli
jbe
mov
add
jo
jp
sahf
in
sti
test
cld
fucom
or
int3
fs
fnsave
adc
jno
add
pushf
mov
and
and
divl
cmp
jecxz
pushf
xchg
mov
push
pop
sti
movsb
add
pop
add
mov
mov
add
rol
jo
cmp
in
shll
in
roll
jl
mov
outsl
test
hlt
mov
and
stos
fidivs
mov
cmp
hlt
mov
fs
sahf
xor
jo
aam
adc
subl
nop
push
mov
fdiv
jo
dec
sti
je
lods
sbb
xchg
jbe
out
or
xchg
subb
and
in
pop
pop
je
sub
xor
fs
inc
lock
les
hlt
jbe
je
test
xchg
adc
dec
fwait
les
fwait
pushf
mov
lods
dec
adc
push
jne
movsb
jnp
aam
outsb
dec
mov
fmuls
push
scas
int3
test
mov
std
adc
pop
dec
sub
mov
push
pop
int
dec
hlt
and
or
clc
loop
or
mov
sbb
test
jg
sbb
jns
arpl
aam
aam
or
fs
xor
inc
sbbb
push
addl
inc
movsb
and
les
call
mov
test
pop
shrb
push
xchg
subl
mov
push
adc
movsl
add
or
pop
adc
insb
call
jo
fs
in
add
inc
pushaw
cmp
or
sub
adc
push
je
inc
push
mov
xchg
adc
aam
and
fs
add
les
or
int3
pushf
sbb
pop
fdivrl
mov
lock
adc
mov
addb
shrb
or
cwtl
sbb
mov
repnz
adc
mov
addb
ret
mov
ljmp
mov
fidivrl
cmp
out
mov
dec
into
sahf
push
mov
fidivrs
ds
out
push
inc
xchg
push
mov
jbe
ss
xor
shll
addl
ret
stos
sub
lret
fwait
sbb
mov
out
cmovg
lahf
pop
mov
fistpll
aas
mov
out
pop
inc
xchg
pop
mov
xlat
ja
aaa
mov
xor
shll
addl
mov
jmp
cltd
inc
lods
fnstenv
sub
or
pop
fnsave
and
add
push
aad
jne
xor
movsb
mov
and
xchg
push
adc
test
xor
mov
nop
push
adc
xorb
in
pushf
mov
sbb
mov
jl
cmp
mov
cwtl
mov
sbb
mov
enter
clc
mov
mov
xchg
push
adc
xorl
out
lahf
mov
pop
fisttps
mov
mov
fwait
mov
sbb
mov
lret
jnp
cmp
mov
xchg
mov
pop
xlat
xchg
ja
aaa
divl
mov
xchg
push
adc
xorb
out
sahf
mov
push
fimuls
mov
mov
lcall
or
jp
cmp
mov
xchg
mov
push
xchg
jbe
divb
mov
xchg
push
adc
xorl
pop
sbb
int
mov
std
mov
cltd
mov
sbb
mov
leave
jns
cmp
mov
xchg
mov
adc
lds
xor
xchg
test
mov
xor
adc
hlt
in
mov
mov
xchg
xorl
mov
xor
adc
repz
mov
mov
xchg
xorb
mov
xor
adc
repnz
mov
mov
xchg
xorl
and
add
loope
mov
mov
nop
xorb
mov
xor
adc
lock
test
xor
pop
dec
aas
das
mov
paddd
mov
jle
pop
dec
ds
push
out
fmulp
mov
jge
pop
dec
cmp
std
in
mov
jl
pop
dec
cmp
mov
or
in
fmul
mov
jnp
pop
dec
cmp
mov
or
jmp
lret
mov
jp
pop
dec
cmp
mov
or
ljmp
mov
pop
dec
cmp
mov
or
jmp
mov
mov
pop
dec
cmp
mov
or
call
mov
xchg
push
inc
aaa
daa
mov
pop
mul
xlat
mov
mov
xchg
push
inc
ss
push
mul
mov
mov
test
push
inc
xor
cmc
in
lds
jb
xor
mov
fs
scas
les
pop
cmpl
inc
pop
jl
aam
data16
pop
shrb
insb
jo
movsb
cmp
jae
pusha
lods
outsl
cmp
jne
push
imul
addr16
dec
jae
and
dec
jno
fs
mov
inc
outsb
adc
inc
jno
push
inc
insb
pop
or
in
lods
xor
jb
inc
outsl
adc
int3
adc
cmpsl
lods
cmp
stos
add
pop
jnp
mov
mov
xlat
xchg
or
das
js
lods
inc
mov
and
mov
push
mov
movsl
lods
xchg
adcl
inc
stc
add
les
sbb
stc
decb
push
lods
dec
in
popa
dec
inc
std
ds
fimull
movsb
add
xchg
inc
push
js
xchg
sub
cmpsb
inc
aad
pop
inc
cmp
pop
cmpsb
push
mov
lods
cmp
cli
mov
stos
sbb
rorb
jg
push
lret
adc
push
mov
subb
adc
fdivs
xchg
xchg
hlt
fnclex
sbb
stos
idivl
add
lods
xchg
mov
and
std
enter
add
insb
inc
sti
rcl
jae
xor
loopne
lcall
and
in
das
loope
xor
dec
mov
push
cmp
dec
mov
gs
mov
fisttpl
inc
push
popf
ja
mov
in
xchg
inc
mov
push
movsb
dec
push
filds
dec
adc
in
mov
insl
mov
mov
mov
cmpsl
loop
lods
stos
or
jg
sbb
mov
fsubrp
stc
fnstenv
jbe
shll
cmpb
aad
in
cmpsl
pop
ja
or
cmpsb
test
mov
arpl
fucomp
sahf
mov
in
inc
add
pop
sbb
cli
in
cmpsb
maskmovq
push
je
mov
fldt
mov
sub
push
xchg
push
repz
dec
mov
and
fdivrs
scas
inc
fnstenv
mov
add
xchg
ljmp
adc
adc
mov
stos
mov
pushf
sbb
sar
cmpsl
dec
pop
xor
sbb
mov
push
into
shlb
push
push
rcrb
xchg
xor
pop
scas
int3
cmp
mov
cltd
repz
out
fildl
fs
std
mov
lret
sub
sub
mov
aad
xlat
push
imul
loope
dec
push
push
add
mov
jp
sub
adc
mov
stc
loopne
pmullw
test
fdiv
lock
mov
rcr
dec
lret
hlt
sahf
mov
outsb
sub
pop
in
mov
fiaddl
mov
iret
xchg
mov
adcl
mov
xlat
js
scas
fs
jae
lea
mov
imulb
xchg
test
lods
dec
pop
add
inc
adc
loopne
sti
mov
rclb
cmpsb
mov
ja
mov
or
in
mov
ja
pop
xor
mov
std
pop
dec
cli
hlt
xchg
xor
sbb
loop
add
insl
add
lahf
mov
mov
sahf
fadds
mov
jns
and
or
cmp
in
rclb
lods
mov
and
push
lods
ja
jo
movsl
vfnmadd213ps
xchg
mov
scas
dec
push
mov
push
mov
inc
movsl
jle
fwait
int
dec
inc
ds
loopne
mov
mov
sub
fidivl
inc
aad
inc
mov
jno
std
popf
filds
push
int3
jl
fidivs
and
adc
repnz
ret
dec
stc
mov
push
xlat
scas
jne
jle
mov
fimull
stos
movsl
add
push
cmp
jnp
pop
xchg
dec
or
es
cmpl
dec
mov
sub
push
jmp
clc
adc
inc
jle
dec
mov
pop
cmp
test
mov
test
jns
out
mov
add
or
and
sub
pop
add
push
mov
mov
push
enter
mov
stos
and
or
jle
leave
das
dec
lods
inc
mov
xor
pop
mov
push
mov
cmp
mov
sbb
loop
cmpsl
neg
mov
std
xchg
aad
jne
loopne
loope
jb
push
ret
mov
inc
xor
xchg
out
divb
sarl
insl
std
pushf
into
pop
hlt
ss
dec
movsl
mov
ljmp
cmp
dec
push
push
mov
push
out
mov
sahf
cmp
stos
adc
mov
cmpsl
frstor
mov
repnz
mov
push
mov
mov
insl
dec
imul
cmp
jecxz
fdivs
aad
les
hlt
clc
or
push
stc
mov
xor
xor
test
sub
cli
ljmp
lods
add
push
scas
fucom
mov
pusha
cmc
dec
fistl
add
mov
lock
dec
push
mov
mov
jge
test
test
aam
scas
pop
daa
lds
and
jge
aas
sti
stos
cmp
push
or
fstl
fsubr
cmpsb
push
cld
push
pop
dec
mov
mov
les
inc
mov
inc
dec
dec
dec
inc
jl
jnp
jg
test
dec
mov
inc
shlb
jmp
cmp
stos
inc
dec
cmpsl
sbbb
xor
popf
pop
dec
sub
push
jl
nop
jno
popa
sbb
inc
mov
icebp
and
mov
pop
xchg
dec
mov
and
jbe
scas
fcoms
jo
mov
inc
arpl
sub
subl
stos
xor
mov
jo
mov
sbb
test
movsb
pushf
sub
push
rcr
das
loopne
lock
insb
scas
adc
imul
stos
ja
push
inc
sbb
dec
adc
jge
sub
jnp
lret
mov
hlt
adc
imull
inc
pushf
dec
insl
mov
push
hlt
push
dec
jbe
ja
pushf
inc
xchg
mov
insb
and
and
pushf
mov
mov
push
cmc
push
mov
pushf
aam
xor
push
ss
stc
fistpl
repnz
les
pushf
in
mulb
les
pop
or
mov
jl
mov
in
adc
mov
rol
lock
mov
pushf
pop
hlt
icebp
add
scas
xchg
sub
fs
pusha
outsl
pushf
jp
inc
mov
mov
sub
in
push
or
pop
insl
cmp
in
xchg
lods
fs
repnz
mov
xchg
je
lods
es
test
sub
pushf
ljmp
push
test
fsubs
inc
ljmp
mov
jbe
adc
mov
andl
xchg
call
clc
jl
ficompl
shll
fldt
testl
adc
test
mov
rorb
jne
inc
fidivl
add
mov
add
add
adc
jne
and
test
add
aam
hlt
int3
inc
and
dec
out
in
xor
adc
pop
inc
push
jo
adc
xchg
mov
js
lret
test
sbb
mov
adc
in
daa
lock
insb
sbb
fs
mov
adc
pop
add
add
outsb
in
outsb
je
mov
mov
jo
and
outsb
movsb
ret
cmp
aam
ret
sub
decb
test
outsb
adc
mov
sub
hlt
pop
mov
test
lods
cmp
xchg
adc
int
shll
xor
jg
stos
loopne
adc
mov
mov
pushf
mov
xchg
test
cmpl
lret
fcoml
mov
in
imul
lds
sub
add
mov
imul
testb
fcompl
sbb
mov
add
jno
inc
inc
ss
in
add
dec
push
outsl
jp
push
mov
rolb
in
sub
lods
je
mov
ret
mov
add
scas
outsb
pushf
pop
push
xor
es
sub
sbbb
pop
addb
xchg
test
imul
insl
jns
or
aas
out
add
mov
test
xchg
add
sub
ljmp
pushf
jecxz
loopne
dec
cmp
insl
and
push
xor
mov
das
frstor
cmp
mov
sub
mov
arpl
stos
fs
cs
and
aam
lock
pop
jmp
pusha
test
aad
xor
xor
xchg
insb
sub
jo
nop
hlt
ret
bound
shlb
xor
mov
inc
shl
dec
lods
mov
test
das
sbb
jbe
popf
outsb
inc
or
mov
adc
inc
adc
lods
pop
ljmp
dec
sbb
imul
mov
arpl
insb
in
add
push
dec
adc
jo
and
dec
cmp
mov
dec
jecxz
ljmp
dec
dec
arpl
ljmp
lahf
cwtl
adc
adcl
pop
mov
and
push
ds
dec
inc
inc
aas
inc
lods
mov
mov
sahf
fistpl
lret
leave
mov
movsb
stos
mov
xchg
scas
jo
js
and
mov
mov
insb
imulb
lds
outsb
les
lret
dec
fcomps
je
dec
insb
pop
and
xchg
lret
push
push
ret
jnp
rolb
nop
jne
lods
shlb
sub
add
xchg
inc
sahf
and
movsb
outsl
les
dec
mov
jecxz
or
call
xchg
mov
or
je,pn
test
xlat
push
movsb
pop
xchg
lods
cli
jno
lock
clc
inc
jo
inc
sub
dec
int3
mov
cli
pusha
push
push
and
enter
fld1
xchg
test
fwait
stos
outsb
cld
mov
xchg
out
orl
add
or
pop
iret
mov
add
cmpsb
test
insb
repnz
rep
roll
nop
in
nop
or
push
insl
or
push
loope
xor
xchg
and
xchg
push
mov
dec
dec
ds
fsubs
popa
xchg
push
cld
test
stos
mov
dec
dec
sbb
jo
dec
ljmp
xor
in
pop
inc
push
mov
jl
jecxz
xchg
int3
insl
call
cs
imul
mov
rolb
jno
ret
and
mov
sbb
test
stos
pop
lods
lods
ds
push
in
push
inc
xor
lods
mov
cltd
mov
test
subb
and
or
repz
xchg
xor
repnz
or
dec
mov
xchg
mov
lahf
test
fwait
divb
xchg
lret
sub
xchg
mov
test
testb
and
popf
in
pop
mov
push
inc
sbb
lods
hlt
enter
mov
cmc
mov
cmp
dec
into
scas
stos
addb
lcall
jp
jb
push
in
xchg
repz
outsb
ss
sub
sub
push
jns
jl
cmp
popf
inc
xchg
dec
popf
inc
lds
mov
daa
dec
push
cmp
pushf
in
stos
fsts
inc
vpsubsw
and
dec
movsb
iret
jae
ss
andb
push
or
xor
movsb
std
fs
inc
inc
mov
lcall
push
les
mov
pop
test
int3
insb
dec
inc
bound
jp
mov
stos
mov
aam
push
std
lcall
jno
movsb
int
data16
gs
mov
inc
dec
push
cmp
cwtl
imul
adc
mov
repz
clc
adc
cmp
xchg
stos
and
insl
fcoms
mov
js
movsb
push
push
mov
jl
xchg
pusha
push
push
into
jb
cmp
push
and
jb
aas
inc
stos
outsl
xor
cmp
rclb
jl
in
jo
xor
mov
mov
clc
xor
hlt
lea
movsb
dec
test
sbb
rclb
subl
out
or
enter
fdivrl
sub
push
mov
mov
mov
jg
push
add
mov
cld
jno
andl
rorb
xchg
pop
jb
ret
xor
ret
push
lahf
mov
popf
and
xchg
adc
dec
sahf
gs
dec
pushf
stos
cmp
pop
mov
xchg
call
sub
xchg
std
out
in
test
sti
in
insb
test
js
mov
dec
cmp
pusha
pop
sub
dec
aas
repnz
repnz
dec
cwtl
xchg
xchg
outsl
sub
or
lds
and
les
mov
xchg
movsb
test
xor
mov
cmpb
subl
cmp
pushf
sbb
xchg
xlat
mov
sbb
rcll
mov
inc
daa
ret
add
cli
mov
jae
shll
mov
sbb
adc
movsb
in
mov
jb
sbb
mov
sub
lods
std
movsb
mov
inc
dec
ds
push
cmp
add
popa
mov
test
adc
mov
mov
mov
fmuls
xchg
fsub
xchg
movsb
or
in
push
push
jecxz
test
sbb
mov
push
fisubrl
cmp
aad
mov
mov
or
or
ljmp
jp
rcrb
push
cmp
hlt
test
cld
fcompl
insb
sub
ds
sbb
in
mov
inc
mov
and
jle
pop
jl
jl
mov
and
aam
jno
push
aaa
arpl
clc
and
loope
and
xchg
sarl
lods
adc
movsb
sub
dec
ds
ja
and
mov
lea
sbb
cwtl
push
inc
and
stos
popa
dec
push
das
test
leave
sub
xchg
fwait
std
popf
int3
fcmovnbe
cld
adc
jl
aam
xor
inc
push
arpl
xchg
leave
nop
int3
scas
dec
movsl
mov
cmp
xchg
adc
inc
insb
jae
repz
lods
pop
or
arpl
push
nop
jb
cwtl
mov
test
in
inc
jl
data16
movsb
mov
iret
in
add
and
inc
sub
pushf
out
stos
cwtl
fnsave
out
mov
sbb
pop
fcoms
adc
pop
aam
pop
insb
push
xchg
test
sub
stos
cld
fcmovb
aam
jl
adc
in
sbb
cld
out
adc
mov
in
out
das
inc
aas
inc
enter
outsl
fisubrl
jno
subb
xchg
jnp
dec
or
jnp
fsubrl
push
test
push
leave
aad
push
jno
xor
in
mov
mov
mov
jnp
xchg
fwait
cmp
cmp
jb
dec
imul
add
adc
adc
mov
icebp
pusha
dec
inc
test
scas
test
xor
lock
arpl
inc
push
inc
dec
dec
inc
sbbb
add
dec
sarl
test
mov
pop
xchg
sub
shlb
xchg
mov
cld
test
mov
lock
mov
gs
inc
push
push
pop
jns
addl
fistpl
add
in
jecxz
xchg
pop
sub
dec
jge
mov
je
and
dec
add
sbb
dec
ljmp
pop
xchg
push
mov
mov
mov
xor
lock
dec
dec
push
data16
repz
bound
cmpsb
adcl
xchg
loop
mov
jl
and
sub
push
cmpsl
xor
insb
xchg
mov
push
nop
pop
lods
mov
and
inc
mov
outsb
cmpsb
pop
mov
outsb
dec
andb
test
xchg
fwait
lahf
jo
insl
sub
mov
mov
lods
add
in
mov
addr16
dec
out
and
lds
scas
insb
mov
xchg
sbb
arpl
and
pushf
cmpsb
mov
lahf
mov
stos
cmp
push
push
mov
sbb
jno
sti
xchg
dec
xor
outsb
xchg
sbb
and
jae
and
push
sub
add
mov
jo
xchg
lods
sbb
cmp
xchg
adc
imul
addr16
add
dec
mov
js
inc
sub
in
cld
xchg
insb
scas
movsb
mov
es
fs
and
jo
push
or
fs
pop
addb
aad
pop
xchg
push
xor
mov
movsb
sub
inc
or
in
test
callw
int3
pop
inc
sub
stos
shll
aas
lods
xor
xlat
movsb
inc
ds
dec
mov
push
sbb
dec
mov
fs
and
lods
xchg
mov
push
or
fisubl
xor
jl
lods
or
rclb
mov
nop
in
xchg
sub
push
push
jb
insb
fisubs
sub
jmp
and
jno
jp
aaa
mov
or
lods
cmp
push
sbb
mov
sbb
pusha
cli
jg
mov
fmuls
lcall
fnstsw
cmovle
sub
mov
mov
test
sub
movl
xchg
add
xchg
inc
hlt
int
negb
jns
lock
jp
jo
jnp
mov
jl
mov
jge
lods
xchg
jg
xchg
jbe
je
jle
xor
xchg
movsb
pushf
fsubl
mov
hlt
pop
insb
sub
sbb
mov
mov
mov
sbb
stos
popf
decb
nop
mov
push
test
mov
insb
push
and
xchg
jmp
cwtl
jle
loop
je
ljmp
addr16
popf
jnp
pop
insb
push
and
int
sbb
jmp
repz
lock
mov
mov
jl
call
je
pop
sub
inc
dec
and
movsb
leave
dec
xorl
jno
fs
jae
adc
xor
loop
repz
repnz
scas
fwait
xorl
sub
jl
sub
push
cld
jae
je
fdivs
lds
pop
test
or
sahf
jbe
hlt
popa
aam
andb
mov
xchg
out
stos
dec
and
outsl
push
mov
cmp
and
fdivrl
outsl
lret
sub
and
lock
iret
popa
movsl
pop
test
fwait
adc
stos
test
mov
or
loop
sbb
jmp
jne
jg
stos
jo
dec
ret
je
push
movsb
addr16
pop
mov
push
bound
rcrb
call
cmp
xchg
aaa
jno
pop
in
popf
cmc
jge
roll
cwtl
mov
sahf
cmpb
dec
mov
inc
mov
dec
xchg
popa
cmc
lea
aaa
call
imul
jno
sbb
push
dec
cmpsl
mov
movsb
rol
and
jns
cmp
inc
loop
or
stos
jle
movsb
int3
fldenv
js
ret
mov
pop
mov
stos
lods
sbb
jae
and
scas
xchg
stos
stos
dec
adc
les
add
jnp
mov
jb
jns
loopne
test
jo
push
sub
pop
cmpsl
lock
movsb
sub
sbb
fldenv
ret
loopne
js
fcomps
lods
pop
jb
test
mov
push
rorb
gs
sub
jp
ja
push
hlt
lret
repz
xchg
aam
ja
sub
scas
jg
shl
jno
fwait
popa
imul
insl
test
inc
mov
lods
cwtl
inc
pop
mov
popa
rcll
insb
shll
and
arpl
inc
pop
pop
and
andb
pop
outsl
jg
test
mov
push
outsl
and
push
push
out
jg
stc
add
cmc
sbb
rcll
push
fisubrl
sahf
push
into
pop
or
mov
leave
mov
mov
pushf
scas
jae
cmp
jg
pusha
cmp
orb
loop
testb
aas
dec
inc
push
fwait
lahf
inc
adc
or
push
addr16
repnz
insl
data16
cmpl
cmp
stos
xlat
adc
mov
cmp
lahf
sub
mov
jnp
xchg
adc
aam
mov
movsb
stos
mov
xchg
pusha
jo
in
enter
mov
nop
pop
mov
pusha
subb
adc
mov
inc
insb
sbb
js
or
js
pop
jb
nop
and
sti
cltd
nop
and
rolb
and
xchg
call
aam
pushf
push
xchg
jo
cld
sub
mov
movsb
shll
es
xchg
xchg
rclb
in
cmpl
call
repnz
and
or
cmp
pop
outsb
test
in
sbb
jno
lock
jl
jno
xor
or
push
or
inc
inc
aam
shr
add
xlat
popf
outsb
pop
mov
push
test
sub
jl
jae
mov
xor
inc
cmc
mov
push
mov
ss
dec
jae
xlat
mov
insl
repnz
aas
mov
in
cmp
mov
mov
xchg
in
jne
xor
xchg
adc
test
jecxz
sub
xor
mov
hlt
sbb
jbe
push
cmp
subl
clc
dec
fcomps
inc
push
or
dec
cmp
sbb
outsl
rorb
xchg
jne
dec
adc
movsb
sahf
jg
clc
scas
stc
daa
in
inc
aas
sub
inc
sti
jle
xlat
movsb
sub
rcrb
subb
imul
test
addl
arpl
jbe
fsubl
fdivrs
incl
mov
mov
adc
mov
out
jl
push
movsb
dec
loopne
fsubr
sbb
inc
jbe
insl
sbb
jbe
sbb
add
loopne
out
fsubrl
sub
dec
lods
mov
repnz
movsb
mov
in
mov
jb
test
adc
xchg
mov
lods
inc
lods
push
mov
popf
loopne
dec
iret
add
xor
js
cltd
movsl
into
scas
xor
sahf
aas
mul
dec
mov
mov
dec
jl
nop
adc
adc
leave
xchg
pop
mov
pop
push
mov
mov
xchg
and
imul
stos
andl
andl
bound
stos
js
xor
lcall
test
hlt
mov
mov
cli
sub
fsubs
mov
scas
add
add
cli
push
xchg
lcall
lods
adcb
test
clc
xchg
std
dec
cwtd
js
adc
je
aam
sahf
test
loope
push
int3
sub
outsb
gs
aam
mov
adcb
adc
fbstp
xchg
stos
pop
fs
ffree
ljmp
cltd
and
jbe
xchg
out
mov
mov
jae
out
testl
fisttpl
sti
xchg
in
pop
pusha
push
aam
lahf
push
shlb
jmp
pop
out
iret
xchg
jo
ja
and
test
mov
jbe
sub
hlt
dec
fldcw
jecxz
jo
js
sbb
mov
mov
add
xor
mov
and
pushl
xchg
ljmp
in
mov
les
mov
mov
test
lcall
jge
jb
and
mov
fs
clc
push
add
xor
shll
imul
pop
jecxz
xor
mov
data16
fs
dec
popa
adc
mov
pop
mov
adc
pushf
xlat
xchg
mov
ss
ret
and
mov
jne
stos
mov
ss
ret
and
mov
jne
sub
mov
lahf
ss
ret
and
mov
jne
cltd
stos
add
test
inc
adc
mov
mov
in
mov
jno
ret
pop
lods
or
leave
js
test
cld
popf
cmp
xchg
xchg
movsb
mov
enter
mov
jo
mov
sarb
ret
icebp
rclb
mov
fs
pushf
adc
pushf
stc
pop
pop
movsb
and
xchg
or
push
je
aam
int3
or
ret
mov
movsb
sbb
bnd
adc
fs
jo
push
mov
jo
int3
sub
jo
sbb
fadd
inc
xchg
int3
jo
mov
mov
mov
jno
shll
je
fs
mov
cmp
and
stos
jo
mov
xchg
in
cmp
xchg
je
les
mov
movsb
clc
dec
xor
insb
insl
shlb
pop
mov
xor
rcrb
mov
or
mov
in
jl
shlb
mov
lods
mov
mov
test
pop
mov
fs
jo
xor
in
sbb
mov
dec
push
int3
pop
ds
das
inc
pushf
mov
test
je
mov
mov
shrb
inc
stos
outsl
pop
lcall
cld
andb
aam
in
mov
in
and
mov
inc
fdivl
nop
test
mov
jo
pop
mov
xor
das
inc
sbb
pop
je
add
mov
in
xchg
and
xchg
fdivrl
popa
pushf
mov
je
add
pop
pop
fs
dec
or
nop
mov
pop
add
pushf
jns
xchg
int3
push
aam
and
mov
je
lahf
lock
aaa
mov
inc
sbb
sbb
and
stos
push
jmp
mov
mov
push
notb
mov
ss
mov
fs
popa
dec
mov
and
in
or
scas
jo
jge
sub
in
subl
lods
add
jo
movsb
insl
mov
mov
mov
pop
fs
popa
xor
mov
or
shl
aaa
mov
in
mov
mov
in
jo
xchg
mov
cld
movsb
insb
mov
push
inc
fs
inc
sbb
sbb
fstps
fisubrl
sub
int3
lcall
jo
mov
inc
xchg
jl
inc
fs
je
push
push
mov
mov
adc
inc
sub
lods
mov
sbb
push
push
mov
movsb
mov
mov
mov
mov
fs
cld
rorb
xor
push
mov
and
aaa
and
in
mov
outsl
les
mov
jo
pushf
mov
adc
addr16
pop
fidivl
insb
sbb
and
loop
test
int3
lock
mov
mov
insb
mov
jmp
pop
in
sbb
mov
sub
dec
fisubrl
push
shl
mov
je
pusha
and
jo
in
mov
outsb
xchg
je
pushf
push
mov
je
cltd
sub
mov
mov
and
or
adc
popa
cld
mov
adc
aam
ljmp
push
cmp
pop
inc
or
jl
sub
insb
rcl
and
sub
pop
sub
je
hlt
push
mov
ds
int3
dec
pop
dec
or
daa
mov
mov
add
sbb
fcoml
js
enter
push
stos
insb
sub
bound
push
mov
jbe
jg
je
xchg
out
or
rorl
nop
jl
nop
dec
icebp
lods
cmp
xor
or
xchg
lods
rorb
fs
outsl
jl
enter
xor
fisubrl
aam
inc
sbb
je
test
pop
fs
int3
push
mov
pushf
lock
xor
insb
add
je
pop
push
mov
les
add
pop
fs
or
mov
inc
lock
int3
inc
mov
je
movsb
push
mov
jl
ds
jmp
push
push
shrb
jge
adc
stos
jo
mov
mov
shr
insl
aam
lods
lods
scas
les
inc
fcompl
adc
xchg
lods
and
mov
rcll
mov
cmp
xor
push
push
add
xchg
in
int3
jo
fsubl
insb
adc
mov
and
test
mov
insb
les
xor
inc
dec
and
mov
cmp
sbb
inc
xor
push
jbe
mov
sub
mov
fdivrl
popa
pushf
mov
and
call
dec
sub
mov
mov
aam
hlt
sub
jo
andl
movsb
stos
mov
scas
jbe
mov
mov
xchg
push
and
pop
cmp
in
mov
adc
xchg
dec
fucomi
mov
xchg
aam
jo
les
nop
pushf
test
test
mov
xchg
movsb
in
ret
xor
inc
dec
mov
xchg
je
or
mov
ds
in
pop
int3
pop
int3
mov
mov
dec
adc
test
lods
insb
test
scas
jo
andl
xor
jl
sbb
and
ljmp
fs
mov
mov
pushf
jmp
xchg
xchg
cmpsl
inc
lods
sub
xor
addr16
add
add
scas
cmp
inc
inc
test
adc
fisubrl
sub
int3
mov
cmpsl
outsb
pop
shlb
movsb
sbb
fs
out
fs
mov
mov
mov
in
pop
insb
mov
in
daa
rol
pusha
call
imulb
push
pushf
movsl
xchg
je
movsb
mov
or
pushf
inc
movsb
mov
xor
jbe
add
inc
stos
call
push
movsl
daa
repnz
mov
sub
xchg
rolb
xchg
fdivl
test
sbb
out
adc
stos
xor
insb
movsb
in
push
sub
insl
add
cld
insl
cmp
enter
in
mov
adc
mov
pop
aas
js
lods
outsb
mov
mov
xchg
pop
cmp
xor
inc
movsl
xchg
or
and
xchg
in
add
mov
mov
lods
insb
pop
pop
mov
mov
fs
mov
and
dec
sub
popa
je
xchg
test
cld
ret
mov
dec
lods
in
shlb
insb
mov
sub
and
sbb
sbb
subb
je
jl
fsubs
test
dec
test
stos
and
test
shrb
mov
call
hlt
mov
lods
push
push
popa
cmp
popa
and
mov
mov
imull
aam
sbb
aam
or
lods
or
popa
movsb
lods
xchg
pushf
jo
xchg
sub
je
pop
aam
in
push
shrb
mov
and
and
mov
push
lods
and
xchg
ljmp
ljmp
les
or
lock
pop
jl
daa
rolb
ja
sahf
cltd
sub
cmp
inc
xchg
and
inc
inc
xchg
add
lock
shl
pop
jge
sub
je
push
les
or
aam
insb
mov
mov
movsb
popf
fsubrs
xchg
jl
call
jne
sbb
movsb
ljmp
jnp
push
adc
xor
pop
and
sbb
js
rorb
mov
push
faddl
in
mov
push
imul
xor
push
lods
aam
and
push
out
mov
je
lods
ds
data16
mov
pop
push
push
or
xor
sub
sub
xchg
mov
in
cld
shr
fs
rclb
scas
sub
push
pop
test
lcall
insb
jle
stos
xchg
jo
test
push
nop
cmpsl
insb
inc
and
sub
movsb
mov
push
and
repnz
insb
and
mov
push
mov
nop
sahf
insb
lcall
cwtl
sub
nop
data16
xchg
and
xchg
outsl
dec
push
cmp
lcall
cmpsb
mov
add
mov
in
aam
mov
push
shl
lock
push
movsb
lock
xchg
lock
mov
push
jp
dec
lds
push
mov
xor
and
mov
cld
mov
loopne
and
mov
test
push
lcall
lock
jo
push
lock
push
lock
inc
lock
cmp
push
sub
pop
mov
push
inc
push
mov
cld
cltd
daa
repnz
sbb
pop
aam
int3
cltd
lods
jl
pushf
cwtl
out
or
les
sarb
mov
push
or
loope
imul
xchg
fcomps
in
fsubrl
jno
and
dec
pop
add
mov
test
es
je
ret
sbbl
push
dec
lock
xchg
inc
xchg
xor
sub
nop
or
pop
fs
add
mov
ret
outsb
adc
les
push
mov
add
xchg
test
lods
and
or
push
ljmp
mov
push
sub
popf
cmp
xchg
movsb
test
cmp
push
xchg
cs
cmp
subl
outsb
js
outsb
js
outsb
js
addr16
sub
push
stos
push
pop
add
popf
push
mov
lock
out
lock
out
push
fistps
jl
test
mov
mov
jo
lahf
sub
push
stc
push
test
lock
shlb
inc
das
adc
aam
cmp
jge
fs
in
pop
sub
mov
inc
fsub
cmp
insb
pop
adc
or
outsl
pushl
jmp
insb
xchg
loopne
aad
int
lds
pop
mov
cmp
pop
dec
dec
shlb
and
jno
out
data16
push
test
xor
sub
and
adc
mov
add
in
out
and
fldcw
lods
mov
ret
sahf
jmp
cld
movsb
outsb
dec
mov
adc
clc
bound
push
pop
insb
push
fs
pop
nop
mov
push
lods
push
inc
inc
cmp
cwtl
and
add
in
cld
int
sub
mov
jl
pop
mov
and
xorl
xchg
movsb
dec
xchg
pushf
in
mov
test
imul
movsl
xchg
aam
and
mov
lods
xchg
daa
out
cld
inc
in
xchg
pop
jl
add
dec
xorl
mov
pushf
push
mov
sub
shrb
sub
hlt
jge
push
mov
int3
jge
xor
movsb
nop
cltd
sub
shlb
in
xchg
fsubl
stos
cmp
add
les
dec
mov
pop
dec
dec
les
inc
mov
in
cmovl
push
xor
stos
jecxz
cmpsb
jb
and
inc
xchg
xchg
mov
jge
je
andl
push
ret
rcrb
sub
je
pop
or
scas
mov
andb
cwtl
clc
ret
js
rorb
mov
mov
inc
inc
popa
dec
sbb
xchg
xchg
dec
xchg
mov
jbe
xchg
push
mov
repnz
dec
push
js
imul
adc
inc
adc
sbb
ficomps
or
jmp
rorl
cltd
fsubs
lea
xchg
rorb
inc
xchg
push
and
and
rcrb
sub
or
ljmp
cmp
fsubrl
adc
push
cmp
and
nop
int3
in
cld
sub
hlt
sbbb
fmull
fsubrs
xchg
mov
push
mov
movsb
dec
xchg
subb
je
je
imul
test
push
mov
mov
rol
mov
out
adc
xor
sbb
jmp
repnz
mov
aam
pop
test
pop
sti
insl
pop
jb
xchg
in
and
div
inc
stos
sarb
mov
lock
mov
pop
mov
sub
pop
sub
sub
jb
ret
outsl
mov
inc
cmp
popf
hlt
mov
adc
inc
push
jb
xchg
les
xchg
repnz
mov
inc
jl
je
mov
jb
adc
stos
roll
xor
adc
sub
hlt
adcl
ljmp
mov
mov
mov
xchg
jno
jecxz
or
mov
mov
je
dec
sub
mov
ret
sbb
xchg
in
add
mov
cmp
xchg
les
inc
jl
daa
rolb
mov
cld
js
add
mov
fcoms
pop
add
lods
xchg
xchg
sub
pop
inc
pop
ljmp
inc
lods
pop
cmp
adc
dec
imul
xchg
sbb
and
rolb
push
in
xchg
mov
rolb
dec
int3
sub
shrl
lea
cmp
sub
cmp
sub
sub
sub
sub
sub
sub
cmp
sub
sub
or
cmp
adc
xor
sub
sbb
adc
add
cmpl
xchg
xchg
jo
xchg
sub
xchg
jo
mov
jp
lea
fs
mov
mov
dec
mov
mov
xchg
sub
insb
test
pop
xchg
test
subl
lahf
cld
pushf
clc
xchg
test
push
pushf
in
push
cld
shl
push
ret
lock
mov
push
cmpsl
inc
pushf
cltd
ret
pushf
mov
pushf
jge
pushf
outsl
ret
pushf
popa
ret
pushf
push
ret
pushf
inc
ret
pushf
aaa
ret
pushf
sub
pushf
sbb
pushf
or
pushf
icebp
ret
pushf
jecxz
pushf
aad
pushf
mov
stos
outsb
inc
inc
ret
xor
repnz
jns
subl
arpl
add
pop
rolb
inc
jg
and
std
in
insl
adc
push
or
mov
inc
adc
jnp
sarb
and
ljmp
repnz
inc
in
push
jno
in
sub
jno
in
add
jno
in
jno
fsubs
and
clc
movsb
outsb
aas
xchg
xchg
outsb
cmp
test
cmp
jle
js
outsb
js
outsb
js
pop
pop
and
mov
sub
and
mov
add
ljmp
lods
dec
leave
cmpb
mov
adc
adc
adc
xchg
or
xchg
sbb
jl
or
jno
cld
cmp
or
cmp
clc
push
pop
xor
daa
repnz
subl
inc
in
in
in
mov
or
pop
movsb
rol
decb
shlb
repz
ds
lahf
aam
pushf
mov
je
test
jl
or
and
test
fs
pop
push
pop
dec
lods
push
dec
inc
ds
mov
xor
sub
adc
pop
ret
data16
outsb
jle
hlt
jnp
push
cmp
and
je
je
les
movsb
cmp
lods
push
mov
and
ret
and
cmp
fcom
xchg
mov
and
sbb
ret
lock
movsb
and
ljmp
in
in
fsubrl
mov
in
lea
pop
test
in
je
push
aam
movsb
dec
bound
int
jl
roll
mov
jno
dec
test
mov
and
iret
dec
mov
and
out
adc
jecxz
out
mov
in
or
push
aam
mov
shrl
pop
test
cltd
in
push
shlb
js
cmp
push
xor
push
je
mov
add
mov
add
xchg
rorb
fmull
mov
sbb
aam
dec
pop
mov
cld
adc
xor
or
mov
xor
jp
mov
add
int
cmp
sub
outsl
cmp
fnstcw
xchg
ret
adc
test
adc
pop
in
in
shrb
adc
movsb
xchg
cli
jge
inc
xchg
movsb
jns
mov
bnd
js
xchg
xor
adc
xor
push
adc
xchg
xchg
push
mov
cmp
in
jno
and
aad
data16
xchg
mov
jb
clc
mov
sarl
xchg
mov
sbb
jl
mov
cmp
xor
mov
hlt
js
fnstenv
xchg
sarb
movsb
stos
pushf
jne
les
xchg
int3
movsb
mov
xchg
lods
je
or
xchg
ja
xor
sbb
push
adc
inc
daa
shl
js
daa
rcl
js
daa
stos
cmp
pop
int3
mov
xchg
sub
mov
jbe
mov
pop
mov
push
push
pop
jno
in
inc
jno
in
sbb
insl
adc
or
push
in
inc
xchg
hlt
and
in
mov
mov
int3
lods
add
push
movsb
cmp
negl
xchg
aaa
dec
cld
cmp
cmp
push
mov
jg
and
mov
add
outsb
in
ret
mov
les
add
ljmp
push
dec
xchg
test
imul
xchg
jnp
mov
jae
fidivrl
imul
mov
es
test
cltd
cld
out
add
lcall
ss
sub
pushf
xor
lods
insl
loope
fsts
loopne
lods
cld
les
adc
sbb
hlt
mov
mov
es
rcll
add
out
or
jb
xor
or
cld
push
xor
or
xchg
leave
or
push
hlt
jo
or
sub
jb
pop
push
sbb
dec
imul
sti
sbb
adc
push
or
pop
sbb
fildll
inc
pushf
push
rorl
sbb
pop
inc
push
cmpsl
xor
cltd
rolb
rolb
dec
popa
sub
push
sub
inc
sub
aaa
sub
sub
sub
push
xchg
in
inc
hlt
xor
cmp
adc
cld
aam
test
mov
mov
dec
jl
movsb
xor
mov
mov
test
jo
sub
shlb
pushf
subb
xor
lods
mov
push
push
mov
jl
add
dec
cld
gs
mov
jl
es
cmp
sub
cld
mov
in
jnp
in
outsl
hlt
dec
insb
xchg
and
les
inc
in
cmp
repnz
jge
and
sbb
mov
fs
bound
in
cmp
insl
in
fsubl
scas
xchg
or
les
mov
xor
cwtl
xchg
mov
lea
xor
nop
mov
push
fs
dec
inc
cmp
popf
adc
xchg
adc
or
add
testb
fisubrl
int3
push
xchg
cmp
std
dec
mov
insl
clc
xor
sub
sub
xchg
mov
cmp
inc
mov
add
lods
mov
and
fwait
lods
in
pushf
fadd
push
mov
fs
sub
les
shlb
imul
data16
mov
pop
push
xchg
mov
mov
imul
sti
sub
mov
inc
sub
cmp
mov
and
mov
pop
adc
sbb
or
lods
outsl
add
js
outsb
js
outsb
js
outsb
js
outsb
mov
and
orb
cs
test
and
mov
insb
outsl
ret
push
xchg
sub
push
cwtl
dec
es
inc
xchg
and
in
and
adc
inc
xchg
hlt
and
ljmp
lret
jnp
cwtl
mov
jo
nop
stos
sub
in
xchg
sub
jl
imul
popa
push
es
imul
cmp
sub
daa
out
in
or
mov
shrl
pop
je
movsb
sub
mov
dec
mov
and
mov
jl
hlt
pop
test
lods
cmp
push
sbb
sbb
adc
lods
popa
or
addr16
in
je
mov
les
mov
lock
sub
lock
sub
pop
mov
mov
push
and
push
in
in
mov
data16
fs
adc
mov
or
ret
and
ljmp
ljmp
mov
mov
xchg
mov
mov
test
sub
push
cmp
pushf
gs
push
sub
outsl
inc
jl
push
nop
mov
xor
add
lods
and
pushf
popa
sbb
mov
and
in
sahf
jmp
pop
in
in
push
lods
popa
aam
mov
lods
and
int3
ret
insb
sub
jge
test
mov
fs
mov
outsb
ret
lcall
xchg
sub
adc
mov
mov
fsubl
aas
popa
int3
jmp
hlt
cld
mov
fs
outsw
sub
xor
pop
mov
and
fisubs
mov
add
jno
in
insl
inc
xchg
mov
bound
mov
sub
int3
pop
and
int3
repnz
jecxz
cld
push
push
bound
sub
push
lods
popa
cld
lods
mov
hlt
iret
sbb
jl
aam
push
hlt
inc
inc
jno
sub
insl
xchg
xchg
mov
movsb
popa
inc
je
add
jb
in
je
insl
push
mov
inc
dec
test
sbb
mov
sbbb
add
and
in
in
test
xchg
pusha
inc
les
clc
movsb
outsb
es
jno
push
insl
test
daa
shlb
mov
push
inc
lock
data16
inc
sbb
adc
inc
cld
lock
fsubrs
mov
test
inc
mov
mov
test
je
adc
and
push
add
lock
push
lock
inc
push
mov
or
ljmp
xchg
xchg
je
inc
aam
mov
dec
pop
dec
dec
jl
pop
adc
jl
or
push
push
xchg
cmp
mov
daa
sub
xchg
and
push
cmp
sub
je
and
mov
pop
inc
push
push
test
and
pop
and
or
movsb
and
test
or
and
in
in
fcompl
mov
inc
mov
jl
pusha
cwtl
dec
sub
mov
push
inc
cmp
adc
fcompl
divl
xchg
or
or
stos
sub
dec
insb
add
sub
sub
xchg
movsb
pop
les
rolb
xor
cmp
mov
and
sbb
int
adc
mov
outsb
pop
rcr
xchg
mov
inc
cltd
lock
jl
daa
rcrb
js
daa
shlb
outsb
pop
shlb
outsb
jl
dec
xchg
outsb
push
ret
outsb
sub
and
outsb
add
adc
mov
rcl
pop
xchg
sbb
in
insb
rolb
call
inc
pop
cmc
dec
mov
push
insb
es
int3
movsb
pushf
cmp
xchg
inc
xchg
or
out
loopne
mov
mov
dec
xchg
int3
mov
pop
pop
xchg
fcoms
push
xorl
pop
cmp
sbb
inc
movsb
sub
shl
jne
fdivrl
sysenter
inc
lods
push
daa
lock
push
js
jno
pop
insl
push
sub
sub
add
pusha
shlb
outsl
dec
mov
inc
lock
dec
push
xchg
aam
movsb
push
pushf
xchg
ret
cmpsb
shlb
adc
pop
push
in
fpatan
insl
imul
repz
jge
or
ret
mov
ret
and
ret
and
ret
pushf
push
cltd
sub
cmp
movsb
and
rclb
jl
mov
cld
inc
xchg
push
dec
pop
mov
iret
inc
mov
jnp
mov
xor
adc
inc
pop
test
cld
mov
cltd
ljmp
aam
int3
js
daa
lods
pop
inc
pushf
push
daa
repnz
push
test
sub
pop
pop
insb
sub
mov
pop
xor
js
mov
subb
test
insl
dec
xchg
push
xor
aam
push
mov
push
push
rcr
mov
je
mov
push
fcoms
fidivs
in
and
jno
in
cld
insb
in
pushf
ret
mov
rolb
fcomps
test
push
sub
sti
mov
test
bound
jno
in
and
jno
in
cld
jno
in
aam
insl
sub
mov
lods
dec
inc
adc
mov
jl
je
pushf
insl
dec
sarl
mov
xor
cmp
clc
shr
inc
out
mov
jl
rorb
mov
fcoms
inc
xchg
xchg
rcrb
adc
inc
xchg
insb
rorb
inc
xchg
inc
sarb
dec
fdivs
adc
or
in
hlt
adc
cmp
testl
repnz
cwtl
pop
int3
cmp
fdivrs
cwtl
and
sbb
dec
mov
inc
cmp
pop
xchg
adc
push
push
cwtl
dec
je
lods
dec
adc
popf
mov
shrl
outsb
dec
shrb
sti
sub
movsl
mov
xor
xchg
repz
outsb
mov
xor
xor
dec
inc
jnp
loopne
mov
movsb
mov
pop
dec
add
movsb
outsb
pop
iret
sub
sub
mov
mov
test
sbb
nop
movsb
dec
mov
push
mov
dec
xchg
dec
mov
dec
sar
popf
xchg
cmp
fs
inc
mov
mov
es
xchg
mov
loope
movsb
adc
mov
mov
fwait
mov
jge
and
mov
shrb
add
mov
adc
dec
sub
sub
mov
out
outsb
and
in
fsubl
jl
les
jns
sbb
dec
sahf
sub
mov
inc
cld
mov
out
mov
xchg
dec
xchg
mov
pop
lahf
jno
outsb
cwtl
mov
lock
ss
add
jmp
cmp
cmp
inc
js
jno
insb
pop
inc
mov
push
push
mov
mov
js
es
mov
push
jnp
subps
xor
in
pop
iret
cmp
and
inc
or
mov
adc
in
in
cld
cmp
inc
jge
aam
mov
outsb
ret
mov
mov
dec
mov
dec
jl
xchg
mov
inc
xchg
adc
inc
xchg
insb
sarb
cmp
inc
mov
xchg
mov
inc
aam
jle
sti
sub
cmp
mov
adc
add
mov
or
cmp
sub
mov
jle
cmp
inc
pop
aam
ret
movsl
rorl
popa
jge
xor
cmp
pop
add
les
je
mov
fs
mov
shrb
inc
inc
adc
sub
sbb
rclb
lods
repnz
jns
mov
pop
push
sbb
in
add
insl
aaa
xchg
mov
aam
ret
mov
inc
cld
rorb
and
pop
insl
xchg
xchg
mov
xor
orb
jge
pusha
je
push
je
push
push
insl
cmp
jo
fs
rcrb
shlb
sahf
and
enter
jae
dec
enter
aam
sbb
outsb
js
pop
insl
xor
out
mov
movsb
mov
lods
ds
mov
jl
ds
sub
repnz
mov
movsb
push
nop
mov
dec
mov
dec
lret
sarb
cwtl
sahf
push
mov
xchg
in
bound
inc
orb
and
test
xor
mov
pushf
cmp
adc
movsb
or
dec
sub
inc
push
rclb
sahf
pop
dec
jl
or
and
call
mov
jno
in
mov
mov
mov
insb
cmp
mov
sti
jne
adc
sub
ret
sub
je
in
aam
mov
cmp
cmp
cmp
sub
lahf
cmp
sbb
adc
xor
xchg
and
insl
or
add
fidivs
or
push
cmp
cltd
xor
cmp
mov
pushw
clc
mov
xchg
lahf
movsb
sub
push
arpl
adc
shlb
mov
cld
push
insl
je
int3
pop
int3
rcrb
je
repnz
cmp
push
insl
je
popf
xor
dec
xchg
roll
mov
push
in
int
mov
cmp
xchg
cmp
scas
mov
mov
push
jp
cld
sahf
mov
dec
cli
lds
cmpsb
incb
mov
arpl
ds
mov
jp
pop
cmpsb
jo
jno
pop
or
and
mov
cli
ja
push
and
jecxz
cmp
xchg
movsl
pop
pop
adc
fwait
adc
loop
repz
mov
dec
push
clc
cmpsb
lods
mov
cmp
mov
aaa
cmp
push
divl
out
popf
mov
lcall
mov
and
inc
in
stc
movsl
mov
mov
ret
cmp
psrlw
push
clc
adc
jecxz
xchg
xor
adc
std
xchg
xor
mov
push
mov
and
dec
repnz
mov
insb
out
mov
mov
js
xchg
xor
push
sbb
mov
jecxz
ljmp
lods
ret
mov
pop
fcmovnb
push
mov
cmpsb
push
dec
cld
sub
inc
add
adc
and
mov
mov
mov
pop
fxtract
lds
scas
shll
cmp
pop
in
adc
cwtl
push
subb
mov
jne
pop
mov
sbb
nop
stos
sub
xchg
movsb
mov
mov
jle
sbb
jo
and
sbb
repnz
xchg
shlb
cmpsb
dec
pop
and
pop
nop
dec
jo
sbb
mov
sbb
mov
and
xchg
call
arpl
mov
lret
and
push
and
push
sub
movsb
rcrb
shlb
imulb
add
es
imul
sub
xorl
push
push
push
xchg
insb
insb
jl
mov
mov
lret
xor
stos
dec
and
jo
jle
sub
sbb
dec
insb
xor
sub
and
add
clc
mov
int3
and
xchg
mov
sub
in
add
xchg
push
sub
stos
sub
push
and
xchg
divb
sub
mov
movsb
daa
lret
in
stos
je
bound
sub
jae
stos
sahf
mov
nop
ljmp
sbb
inc
and
push
jl
sub
outsb
sub
clc
xchg
push
jo
and
xor
pop
and
je
adcb
mov
nop
loopne
lock
xchg
or
xor
inc
mov
js
nop
xchg
mov
or
sub
fisubs
stos
in
xchg
clc
jo
and
cmp
jp
mov
shrl
cli
mov
xor
ds
dec
jo
outsb
sub
mov
lods
les
fcoml
sub
mov
inc
and
jo
mov
pushf
mov
mov
insb
shlb
loop
add
and
sub
push
and
outsl
cmpb
sbb
stos
in
mov
sbb
cs
ds
cmp
sub
and
xchg
cmp
int3
stos
add
push
sti
stos
lods
insb
mov
push
xchg
mov
adc
bts
mov
lods
and
mov
nop
test
stos
xor
jne
movsb
sub
nop
inc
in
stos
push
xor
cmpsb
scas
mov
add
je
in
stos
ljmp
sub
nop
jb
test
lcall
shl
sub
mov
sub
ss
inc
jo
bound
js
xchg
nop
test
xchg
xchg
rcrb
jo
lock
mov
sub
cmp
sub
nop
nop
movsb
pop
xchg
xchg
int3
and
imulb
or
xor
inc
xchg
jb
xchg
xchg
ret
mov
imulb
ds
pop
and
js
xchg
add
stos
ficoml
push
xchg
and
xor
mov
xchg
and
and
loopne
ljmp
and
jo,pn
push
sub
nop
xchg
lods
movsb
mov
rcr
sub
mov
push
and
xchg
inc
jo
pop
sub
jbe
subb
xchg
mov
ret
aam
sub
mov
and
xor
sub
push
and
jo
aam
and
fisubl
add
adc
sub
pop
nop
push
js
xchg
je
shrb
loopne
hlt
nop
push
insb
adc
and
push
jl
pop
adc
push
test
stos
nop
sub
outsb
nop
push
insb
inc
and
xchg
adc
push
repnz
mov
mov
lods
lcall
add
cmp
es
adc
lods
andb
mov
inc
dec
mov
fisubrs
push
push
in
clc
insb
or
adc
or
stos
nop
sub
mov
les
jo
dec
call
sub
sbb
fwait
mov
lret
mov
xor
pop
push
leave
enter
ficoms
jge
pop
aad
fldl
rolb
cmp
loop
xchg
pop
icebp
mov
fdivs
xor
mov
stc
mov
push
lock
jnp
sbb
in
or
insl
popa
movsl
fisubs
daa
test
push
jbe
rol
mov
int
xor
aad
arpl
mov
into
jae
loopne
and
xor
int
add
sbb
popl
pop
and
xchg
cmp
lods
mov
pop
ljmp
mov
inc
nop
repz
xor
orl
pusha
jl
lods
ja
push
mov
dec
out
pop
mov
jnp
or
ret
mov
xchg
out
cltd
scas
hlt
jno
add
push
and
les
mov
dec
sahf
sti
push
movsl
xchg
call
mov
jp
fldt
pop
mov
cmp
shrb
mov
jnp
scas
or
push
mov
inc
aad
mov
arpl
adc
loopne
add
add
xchg
push
or
mov
push
cmpsb
je
xchg
pop
push
inc
gs
push
pop
cs
mov
cmc
aam
inc
xchg
xchg
icebp
mov
push
jl
jno
dec
xor
scas
push
mov
push
xchg
push
loope
xor
scas
sub
mov
lods
test
pop
sbb
aad
sahf
neg
xor
test
xchg
or
nop
jmp
insb
fistpl
xchg
add
mov
test
xorl
cli
cmp
sub
pop
dec
inc
hlt
lahf
jg
and
xchg
fnsave
adc
or
sysexit
inc
mov
repz
lahf
lods
xchg
pop
enter
xchg
mov
orb
add
nop
inc
sahf
mov
in
mov
xor
popa
and
jp
ss
jbe
je
lods
fisttpl
mov
mov
add
dec
fsubrs
xchg
jl
clc
pushf
andl
sub
jno
xlat
es
sub
stos
pop
fdivr
sub
ljmp
mov
and
es
mov
repnz
in
int
fucomi
sbb
and
cmp
cmpsb
addr16
xchg
mov
push
jmp
cmpsl
mov
cs
ud1
pop
test
lods
mov
dec
inc
jo
add
pop
adc
cmpsb
xor
jg
add
lock
shlb
xor
sub
mov
negl
inc
cmp
lods
out
aad
adc
fisttpll
pop
or
xchg
out
and
and
cwtl
sbbl
mov
dec
push
cmp
in
dec
pop
scas
pushf
mov
ret
add
mov
fldenv
lods
repz
test
cmpsb
mov
in
fidivrl
testl
shll
pop
dec
imul
pop
lock
cwtl
mov
mov
cmp
and
ret
xor
fldenv
mov
or
push
inc
mov
aad
lret
xor
les
sub
push
xor
mov
and
add
and
andl
scas
in
mov
and
sub
aas
mov
mov
cltd
insb
inc
lods
js
xor
mov
in
bound
inc
imul
int3
mov
sbbb
fdivs
or
jecxz
mov
pop
xchg
leave
sub
sub
mov
mov
loope
insl
ficompl
push
push
jl
dec
xchg
xorb
repnz
cwtl
cmc
add
fsubrl
mov
cli
push
pop
mov
inc
outsl
jmp
pop
xor
andb
leave
sbb
or
mov
xchg
fistpll
and
xchg
es
out
mov
jg
leave
xor
push
xchg
lock
cmp
mov
hlt
lods
inc
xor
jmp
pusha
mov
in
test
cmp
xor
or
or
mov
adc
into
es
xor
sub
mov
test
stc
sbb
mov
dec
xchg
push
outsl
mov
cmp
adc
jae
xorl
cmp
mov
cltd
xchg
mov
xor
stos
dec
xor
hlt
int
lock
mov
movsb
jne
testb
adc
add
jns
mov
filds
in
or
inc
popa
mov
repz
push
pusha
cmpsb
push
test
mov
ss
mov
orl
inc
mov
loopne
in
sub
jl
orb
mov
aam
jno
movsl
dec
and
das
es
xor
insb
mov
jecxz
cld
loopne
xchg
jle
imul
inc
xor
mov
scas
jns
js
push
stc
push
add
mov
and
inc
stos
pushf
shlb
pop
add
aas
mov
fcmovne
shl
jg
mov
mov
fs
sub
adc
mov
mov
mov
lahf
hlt
test
aad
add
aam
xor
jg
mov
cmc
stos
cmp
js
daa
mov
xchg
inc
inc
test
mov
in
int3
mov
jnp
loopne
cwtl
lahf
mov
aas
and
mov
mov
ljmp
inc
xlat
arpl
loop
and
or
mov
and
xchg
outsl
cmp
daa
cmpsb
call
movsl
cmp
aam
adc
lahf
inc
mov
ds
mulb
leave
sarl
lcall
pop
aas
fdiv
fnstenv
ja
mov
lcall
pushf
cmp
movsl
jnp
inc
ds
adc
jge
cwtl
hlt
xchg
xor
testb
fiadds
xchg
repz
pop
mov
mov
or
xchg
cwtl
ss
push
ja
clc
sbb
xor
idivb
rol
xchg
and
jge
jno
hlt
fiadds
lret
jnp
fisubrl
adc
cmp
hlt
pop
xchg
mov
test
sti
or
movsl
imul
add
jmp
dec
inc
and
cmp
jecxz
mov
fsubs
push
ficoms
test
add
mov
test
adc
xchg
sub
mov
insl
in
pop
mov
mov
dec
aad
pop
clc
lods
jl
daa
dec
arpl
xor
mov
insl
loope
mov
mov
pop
push
loop
push
je
jge
mov
xchg
jecxz
mov
cmp
cmp
add
mov
jp
adc
gs
xorb
xor
sub
adc
mov
mov
push
js
xor
mov
mov
jb
imul
mov
mov
clc
or
adc
pop
repz
mov
scas
call
xor
xor
adc
ja
pop
xor
insb
int3
mov
daa
cmpsb
aad
mov
je
dec
shlb
cld
lret
dec
xor
sti
mov
data16
xchg
loop
hlt
sbb
or
dec
sub
imul
in
int
pop
adc
cs
fisubrs
popf
mov
mov
push
mov
pop
adc
jge
cmp
daa
jl
mov
or
mov
sbb
xlat
pop
lret
sub
jne
and
mov
sbb
push
or
scas
pop
push
dec
ss
loop
pop
les
test
out
je
adc
and
call
mov
xor
mov
jbe
dec
dec
dec
jno
stos
sbb
neg
xchg
cmpsb
adc
cmp
pop
xchg
ret
pop
cmp
push
mov
aam
xor
jae
xor
aaa
jnp
sbb
mov
mov
lret
mov
and
dec
adc
insb
jmp
xchg
outsb
xchg
xor
rcrl
fisttpll
mov
or
push
es
sub
mov
aas
stos
push
jg
mov
fsubrl
shrb
mov
mov
xchg
mov
jmp
ljmp
pop
add
mov
aam
cmp
divw
out
and
dec
cltd
in
cmp
gs
mov
outsl
inc
jecxz
dec
mov
addr16
outsb
add
out
pop
loopne
mov
and
pushf
pop
mov
jbe
lock
push
xchg
inc
dec
imul
jb
popa
inc
mov
cld
jge
aad
repz
hlt
cwtl
and
mov
test
iretw
mov
bound
test
test
mov
pop
sub
cmp
xor
sbb
mov
jecxz
pop
ret
fcomi
xor
mov
jae
cli
mov
jge
popf
adc
pop
data16
in
adc
rcrl
adc
out
shl
je
pop
movsl
mov
imul
xchg
fidivl
mov
ja
jl
mov
push
call
ljmp
dec
push
xor
dec
lret
lods
and
or
push
sub
bound
mov
xchg
push
or
mov
fldenv
pop
js
pop
xchg
push
aam
sub
lret
aam
mov
push
rcrb
dec
and
aas
out
or
movsb
ret
int
mov
not
or
dec
xor
or
es
mov
movsl
sub
outsb
enter
xchg
mov
inc
rcrl
jo
mov
sahf
adc
sbb
in
scas
xor
stos
adc
movsb
inc
cmp
shrb
fdiv
sbb
fs
stc
mov
pop
lret
jg
fistps
inc
lods
mov
mov
mov
push
dec
mov
xchg
or
push
movsl
pop
aaa
jbe
mov
jb
lea
mov
mov
inc
in
mov
out
movb
jle
in
pop
iret
aam
mov
sbb
mov
push
jne
push
cmp
sbb
push
test
jge
je
fdivl
adc
rorb
or
pop
dec
stos
jle
insl
int
sub
xor
std
data16
mov
nop
pop
icebp
rcll
aam
mov
popa
adc
cli
cmpsb
stos
and
fisttpl
lods
mov
jno
jbe
and
mov
mov
xchg
inc
xor
inc
mov
fldcw
lods
xlat
hlt
imul
sahf
xor
cmpl
add
xor
lods
stos
cld
sub
dec
cmp
out
js
enter
in
jmp
mov
pop
mov
stos
rcrb
mov
imul
sub
pop
imul
cwtl
aaa
add
subl
leave
pop
or
or
dec
test
fistpl
test
ds
xor
hlt
xor
adc
mov
ss
in
xchg
leave
cmp
xchg
dec
inc
insb
adc
mov
mov
mov
pop
shll
pop
popa
out
inc
jge
enter
xchg
fs
sub
jnp
in
cld
jecxz
stos
cwtl
mov
cmpps
pop
repnz
mov
sbb
into
inc
or
mov
dec
js
cmc
shlb
mov
add
add
out
jne
xchg
aas
dec
xor
je
scas
add
and
in
stos
pop
test
stos
mov
movsb
sbb
mov
and
xorl
sub
mov
loope
insl
outsl
mov
add
inc
mov
sub
mov
jae
or
adc
sub
push
stc
mov
xlat
pusha
jnp
mov
add
subb
jle
int3
lahf
ss
xchg
push
fiadds
call
or
jbe
xor
mov
lods
or
lcall
cmpsl
lahf
fcomi
pop
push
icebp
int
mov
testb
jp
lods
test
rclb
roll
in
fs
hlt
xchg
or
sbb
cli
mov
lcall
je
mov
test
jae
mov
fiaddl
inc
hlt
cltd
sbb
lcall
nop
push
jne
push
jo
mov
idivl
das
hlt
pushf
pop
sub
mov
out
dec
pop
aam
mov
out
push
dec
test
loope
add
lahf
xchg
scas
or
leave
xchg
movsl
popa
push
mov
push
xor
lds
into
aam
mov
xor
and
cmpsb
push
xchg
scas
mov
and
cmp
jns
and
ja
in
jbe
adc
aas
lds
mov
fidivs
lods
mov
test
scas
sbb
xchg
pop
mov
fidivl
xor
out
scas
pop
in
shlb
lcall
pop
adc
sti
les
mov
imul
inc
mov
incb
jp
add
jno
pop
aas
pop
dec
adc
in
mov
js
out
pop
inc
mov
lock
inc
mov
dec
arpl
and
shlb
mov
mov
add
mov
dec
jo
jg
jle
mov
mov
xchg
add
xor
or
gs
xchg
loope
dec
enter
movb
pop
push
in
aam
stos
shrb
fidivl
add
mov
sub
mov
jecxz
call
fists
cmp
mov
out
adc
fdivl
aad
stc
jo
pop
call
mov
xor
jl
pop
scas
sub
sub
jle
pusha
mov
sub
inc
mov
clc
cli
jns
or
sbb
cld
cmp
dec
cltd
in
sub
into
mov
lret
lods
dec
enter
mov
pop
inc
cld
mov
loop
cmp
inc
outsl
lret
ss
lods
std
adc
push
cmp
inc
pop
rorb
mov
test
movsl
xor
cmpsl
cmpsb
pop
js
fnstenv
and
mov
add
std
mov
mov
cmp
push
mov
cmpl
jmp
mov
xchg
cwtl
push
shll
mov
fsubp
push
sub
pusha
in
add
cmpsb
jp
xchg
mov
int3
jno
pushl
or
aam
mov
fistpl
mov
movsl
insb
cmp
loop
mov
cwtl
stos
push
out
push
int3
mov
es
inc
xor
mov
adc
je
xor
mov
popf
mov
mov
adc
inc
mov
loop
rclb
or
cwtl
adcb
stos
inc
push
mov
jbe
int3
cmp
xchg
pop
icebp
or
mov
fcoms
mov
jne
ret
inc
in
or
imul
nop
sbb
aas
popa
mov
stc
jp
out
add
cwtl
mov
lods
test
pushf
insb
cmp
ds
cli
fsubl
push
mov
mov
lods
fstl
add
pop
xor
hlt
test
loop
cmp
fisubs
mov
cltd
and
jns
cld
mov
iret
mov
into
jge
sbb
or
outsb
icebp
xor
movsl
mov
sbb
dec
pop
das
jle
mov
out
push
shlb
xlat
mov
xchg
cmp
inc
and
jnp
xchg
inc
xorb
das
sbb
in
clc
or
cli
sub
aas
lcall
mov
pop
movsb
leave
adc
or
data16
dec
pop
sahf
dec
mov
stc
movsb
repz
scas
adc
or
es
in
inc
push
jl
test
inc
lock
mov
push
inc
jg
cwtl
imul
aaa
int
hlt
pop
stc
add
xor
mov
adc
and
cwtl
stos
mov
push
pop
add
xor
and
mov
leave
lods
and
jl
sbb
inc
cld
pushf
mov
mov
inc
stos
inc
sti
lds
test
push
dec
push
mov
test
dec
jl
call
add
mov
mov
mov
xor
int3
adc
imul
cmpsl
xchg
xor
pshufw
in
jmp
icebp
jge
stc
mov
sbb
lahf
loopne
lret
mov
dec
js
adc
nop
hlt
jnp
mov
cltd
dec
insl
lahf
pop
mov
mov
inc
mov
jne
hlt
jge
jne
pop
mov
jbe
pop
hlt
cmp
and
mov
pushf
pop
test
or
xlat
cld
xor
dec
and
adc
divl
push
add
aam
sbb
fs
scas
fcoms
xor
ret
cmp
js
mov
add
cltd
out
xor
rclb
mov
icebp
fistpl
js
xchg
mov
dec
jmp
push
xor
adcl
jnp
stos
ror
inc
adc
inc
scas
jg
push
add
aam
arpl
or
outsl
adc
and
ljmp
xchg
es
push
xor
aas
lods
lret
test
fsubrs
or
mov
int
mov
mov
lea
cmp
mov
mov
insb
push
dec
mov
sti
es
mov
adc
hlt
nop
or
mull
aam
jle
cwtl
mov
dec
enter
mov
lods
fildl
xchg
pop
inc
sti
cli
test
fstp
loope
inc
mov
adc
sub
fsubrl
icebp
push
cwtl
aaa
mov
inc
sbb
movsl
xor
cmp
cmpsl
sub
jl
mov
sub
or
jmp
std
mov
mov
hlt
push
sbb
xor
lods
in
movsb
fisubs
insl
movsl
icebp
lcall
mov
gs
dec
push
sub
sahf
sub
movsl
push
xchg
dec
mov
dec
and
mov
sbb
xorb
xchg
pop
xchg
push
and
rcrb
les
cli
outsb
mov
xor
push
pop
popa
sub
in
xchg
mov
sub
test
mov
mov
rcrb
dec
inc
inc
cmpsb
fisubrl
lret
scas
push
pop
shlb
js
cld
xor
int
mov
ss
adc
or
mov
in
je
push
cmp
int3
shl
ss
nop
adc
or
ret
dec
jbe
orl
mov
mov
jno
shrl
dec
lods
loope
call
sahf
and
ret
mov
push
or
in
jl
clc
inc
mov
mov
dec
cmp
fs
cmpsl
ljmp
movsb
xor
jecxz
or
mov
mov
cmp
pop
jmp
jbe
mov
or
inc
aam
lods
dec
sarb
and
mov
enter
add
push
lods
loop
push
testl
jecxz
dec
shll
lret
push
mov
call
cwtl
mov
je
sbb
jp
mov
incl
xor
dec
sub
lods
es
shrb
inc
popa
mov
dec
testb
pusha
pop
lfs
test
dec
mov
adc
dec
mov
dec
dec
sub
cmp
sbb
mov
leave
mov
sub
add
lock
pop
mov
jp
imul
adc
push
gs
pop
mov
mov
pushf
fwait
dec
aam
mov
iret
call
mov
popa
xchg
mov
push
jne
lods
inc
test
pop
add
test
add
xorb
dec
mov
and
lods
add
mov
nop
inc
movsl
jl
inc
cmp
popa
pop
lods
nop
inc
aaa
inc
mov
and
shlb
mov
or
mov
mov
ljmp
or
jae
xor
and
lcall
shlb
sahf
lods
sub
dec
cmp
mov
mov
out
and
test
jno
sbb
jp
cwtl
xchg
shrl
cmp
pusha
push
or
inc
lcall
call
test
hlt
adc
pop
mov
mov
xchg
mov
mov
xchg
sub
repz
pop
scas
cmp
rcl
xor
push
hlt
mov
shlb
pushf
mov
mov
imul
out
lahf
fstl
mov
xchg
aaa
sub
mov
add
lcall
cmpsb
xor
mov
inc
inc
sub
ret
push
jle
stc
clc
mov
cmp
push
nop
mov
test
rcrb
push
lret
mov
icebp
and
sbb
cmpsl
int3
lea
sti
mov
push
bound
fdivl
insb
outsb
mov
js
std
pop
lret
push
push
pop
cmpsb
mov
xchg
adc
imul
mov
sub
xchg
aaa
out
ja
mov
mov
dec
aad
movsl
sti
lret
daa
mov
pop
mov
and
mov
pusha
ror
inc
into
mov
push
imul
mov
dec
cmp
call
mov
inc
xchg
jo
fisubrs
cs
stos
ljmp
mov
mov
fidivrl
add
jl
test
adc
cltd
cld
xor
xchg
or
mov
ret
nop
or
adc
stos
clc
xor
cmp
adc
inc
mov
sub
jbe
inc
sbb
inc
cmp
add
es
sub
popf
add
into
mov
das
and
dec
sar
movsb
sahf
inc
fs
adc
sti
idiv
xor
fsubl
jbe
mov
loopne
fs
imul
insl
push
dec
xchg
aad
hlt
pusha
xchg
pop
dec
mov
push
in
sub
insb
mov
mov
stos
mov
dec
sbb
mov
push
arpl
scas
inc
mov
outsb
lods
mov
jbe,pt
popf
cmp
mov
pop
mov
imul
mov
push
jl
mov
sbb
fcmovnb
addl
or
es
scas
cwtl
xor
mov
xchg
mov
rorb
imul
pop
fadd
cwtl
cmp
fistpl
push
inc
jl
jle
xor
orb
pusha
aam
xchg
add
push
mov
push
rcr
mov
rorb
mov
or
jne
imul
jle
scas
jl
cwtl
neg
mov
aas
int3
mov
enter
sbb
movb
mov
int3
das
mov
daa
xchg
mov
xor
cmp
jne
jae,pn
or
cmp
jmp
fincstp
mov
cmc
cmpsl
push
and
hlt
mov
mov
lock
out
hlt
les
mov
jmp
xchg
mov
in
daa
clc
mov
dec
gs
mov
mov
sub
mov
sbb
out
push
and
sub
adc
lock
lods
cmpsb
mov
sub
les
stc
add
popa
mov
mov
iret
xchg
cltd
sub
js
xchg
cwtl
push
out
je
mov
cmp
jp
push
test
jl
and
inc
adc
in
and
fs
mov
mov
pop
xor
add
sti
mov
xchg
and
cmpl
mov
pushf
pop
ljmp
imul
cmc
out
xor
lret
mov
lods
and
or
jns
add
aam
mov
rclb
lea
mov
mov
pop
add
nop
aam
add
dec
jge
cmp
mov
sub
insb
std
cs
stos
lret
out
mov
fdivrl
popf
imul
adc
ret
inc
jecxz
in
mov
dec
xchg
ja
inc
in
pop
adc
pop
sub
mov
rol
jl
mov
sahf
pop
xchg
insb
xor
mov
dec
test
lea
or
fnstcw
push
cmpsb
out
pop
sbb
mov
into
stos
cmpsl
inc
fstl
movl
stos
into
push
fwait
xor
pop
mov
in
inc
xchg
out
mov
mov
xchg
xchg
loop
push
xor
cmp
scas
add
and
xchg
dec
mov
mov
mov
mov
scas
cmp
pop
scas
cmpsb
test
jb
ret
adcl
jmp
jne
cwtl
shlb
mov
neg
sti
cmpsl
popf
in
mov
push
push
int
push
or
jae
loope
nop
cmp
mov
mov
xor
and
mov
std
cld
push
and
mov
cmp
imul
stos
dec
and
sbb
rcl
std
decb
mov
mov
lret
mov
nop
lods
jge
andl
icebp
out
scas
mov
insb
and
pop
rcll
mov
aaa
incl
jl
jnp
sub
in
loope
ret
mov
xchg
inc
or
adc
xor
mov
xchg
mov
inc
adc
inc
sar
xor
jl
cmp
fdivs
sbb
mov
rolb
scas
loope
push
inc
mov
pushf
xchg
lock
fcmovb
xor
repz
ljmp
pop
cmp
fsubl
sub
je
pop
mov
or
adc
inc
xlat
daa
stos
jge
sbb
jge
and
cli
sahf
or
popa
stc
mov
push
mov
add
inc
mov
sbb
mov
cmp
test
dec
je
sub
xchg
add
jmp
sub
mov
pop
add
adc
es
mov
or
jge
mov
les
out
loopne
sbb
or
adc
cli
add
jg
mov
stc
mov
cmp
xchg
stos
ret
in
in
cmp
mov
lret
fnsetpm(287
cmp
mov
gs
and
test
popf
hlt
mov
xchg
repz
xchg
jmp
mov
jbe
es
xchg
and
leave
push
push
mov
and
iret
lods
fsubrl
popf
sti
dec
xor
mov
adc
fbld
adc
data16
insb
mov
pusha
mov
xor
fnstenv
dec
je
mov
inc
dec
mov
in
xor
xchg
mov
or
add
and
call
sub
es
push
rcll
mov
mov
xchg
pop
jb
mov
add
sub
mov
in
mov
sbb
add
inc
mov
sub
jecxz
mov
fiaddl
outsb
js
xchg
xchg
sbb
dec
pop
repz
ss
inc
outsb
pop
cmpsb
lds
or
ljmp
jno
bound
jbe
ror
mov
xor
das
dec
or
jle
lods
adc
ljmp
push
xor
ds
mov
pop
sahf
dec
mov
inc
das
mov
push
or
dec
mov
imul
adc
pop
int3
leave
mov
test
jbe
insb
xor
sub
out
mov
pop
xor
mov
xor
sbb
mov
xor
fisubl
mov
add
arpl
mov
sti
pop
pusha
orb
xchg
push
xor
je
cmpsb
jne
mov
addr16
test
push
roll
test
scas
xchg
icebp
repnz
das
adc
repz
out
jbe
sub
jl
mov
add
out
and
cmc
inc
and
fdivrs
mov
outsb
addr16
xor
cmp
sub
add
popa
rclb
add
lock
pop
add
push
sarl
mov
jnp
add
mov
cs
mov
lret
mov
movsb
mov
dec
ljmp
jg
sbb
lock
pop
pop
xchg
std
mov
adc
cmc
dec
cld
push
lods
subb
add
adc
bound
adc
adc
mov
pop
hlt
xor
sbb
mov
nop
test
jb
pop
xchg
divb
cmp
shrb
je
fcompl
sub
sub
jb
loope
mov
int3
iret
pop
popf
sbb
aam
js
cwtl
ds
mov
sbb
dec
imul
adc
enter
lret
or
sbb
mov
fstl
pop
test
pop
nop
and
xor
sub
std
leave
jge
push
lock
mov
in
cli
mov
xchg
int3
test
loopne
cmpsb
ficomps
pop
pop
je
fs
clc
and
cmpsb
inc
mov
xor
xor
jle
and
aas
mov
iret
in
stc
xor
and
sub
cld
xchg
mov
push
mov
mov
repnz
rcll
and
shlb
cmp
mov
xchg
push
shl
push
mov
jl
lods
inc
bnd
add
lds
jp
hlt
add
aam
inc
mov
jb
rol
mov
out
pop
mov
inc
loope
inc
sbb
cli
je
lcall
inc
push
fdivl
cs
mov
or
out
aam
out
aas
or
nop
addb
pop
mov
xlat
push
push
data16
mov
mov
lock
xor
xor
jne
dec
in
adcl
lret
xchg
sub
nop
xchg
jge
mov
scas
push
out
into
int
cmp
aam
ss
xchg
test
cli
cmpsb
clc
cld
movsl
ficoml
mov
mov
inc
aas
jo
sbb
pop
lods
jge
jmp
and
popa
movsl
mov
dec
push
jl
xchg
pop
sbbl
pop
push
popa
lret
cmc
lods
out
and
cmp
lret
not
add
mov
mov
pop
mov
in
hlt
cli
xor
lret
dec
xchg
gs
dec
xor
ret
cld
and
imul
mov
mov
mov
inc
inc
lcall
push
jne
push
call
mov
mov
testb
push
loopne
ret
sbb
push
mov
clc
pushf
mov
jne
sbb
lock
sti
je
sbb
stc
xor
inc
scas
inc
int3
daa
or
sub
xchg
push
or
ds
push
lcall
mov
push
push
test
sahf
mov
btc
add
pushf
neg
cmp
sub
mov
clc
cmpsb
call
push
call
das
push
call
xchg
popf
push
call
ret
insl
xor
dec
push
call
cs
gs
or
or
add
xchg
add
inc
adcl
and
movb
mov
pushf
pushf
pusha
movw
pushl
ret
push
call
mov
or
pop
flds
aam
mov
push
fsubl
xor
jbe
stc
jbe
pop
mov
xor
add
arpl
and
jns
aas
mov
xor
dec
mov
sar
addr16
loop
mov
mov
push
ss
cmp
adc
cmp
sub
inc
inc
cmpsl
xlat
push
sbb
push
xor
jge
cld
rclb
int
xchg
xlat
mov
xor
shl
pop
ds
pop
fnstenv
lea
je
int3
cltd
or
scas
lds
dec
mov
scas
lds
xchg
outsb
pop
ds
cli
addb
lret
sub
push
call
nop
incb
xor
xor
sbb
sbb
ja
cmp
stos
lcall
xchg
push
fsubs
cmp
inc
inc
push
stos
out
jmp
scas
lods
sar
negb
mov
shr
inc
mov
loope
cld
mov
sub
xor
push
jb
divl
fs
sub
pop
push
mov
ret
sub
cld
sbb
jbe
mov
or
sub
test
addr16
iret
mov
xchg
sbb
int3
mov
cmp
add
popa
ljmpw
aaa
pop
cltd
and
xchg
add
out
dec
stc
jp
inc
sbb
ds
dec
into
inc
mov
jp
arpl
cmp
push
repnz
ret
inc
fwait
lods
lods
mov
add
test
bound
and
icebp
popl
iret
cmp
sti
pop
movsl
sub
in
push
mov
test
dec
push
test
cmp
push
adc
arpl
mov
daa
mov
scas
sub
cltd
imul
sbbb
stos
jecxz
gs
rcll
mov
aam
daa
sbb
sbb
test
int
out
push
lret
fdivrs
lahf
lods
test
xlat
mov
jl
pop
dec
jecxz
push
jg
inc
mov
jg
inc
mov
cmpsl
mov
sar
les
imul
xchg
and
jbe
dec
mov
lcall
test
ljmp
or
mov
xchg
rol
inc
and
or
push
and
rol
jmp
call
jmp
fcoml
pop
mov
rclb
mov
std
pop
movsb
xor
out
clc
gs
lret
cmc
out
mov
fiadds
and
shll
lret
jb
ret
xlat
adc
cmp
sub
or
fcomps
xor
xor
push
cltd
jbe
jb
jo
add
and
fcoms
jle
push
inc
pop
les
push
movsb
adc
sbb
test
inc
not
inc
not
inc
cmp
test
sar
xchg
push
btc
mov
call
das
cmpsb
adc
xor
pop
xor
cmpsl
sub
dec
sarl
mov
jmp
pop
and
jbe
repnz
jo
inc
inc
mov
rcrl
out
cmpsl
xlat
pop
shlb
jne
pop
fcoms
gs
cmp
cli
ljmp
aaa
push
lods
jl
xchg
lock
and
mov
inc
mov
mov
popf
push
jg
pop
clc
xor
arpl
pop
loop
mov
cs
add
jge
push
call
xor
jl
xor
pusha
flds
or
push
fsubs
push
fiaddl
hlt
movsb
mov
ds
dec
pop
fidivrl
insl
pushf
sub
mov
lods
mov
lods
gs
ja
add
imul
js
out
imul
sub
sub
dec
mov
nop
adc
mov
adc
fcomps
cmpsl
sbb
sub
and
repz
or
xchg
add
jmp
cltd
fld
adc
add
popa
aaa
test
out
orb
dec
je
xor
jnp
js
rcrb
dec
stos
or
pop
jmp
shll
loopne
mov
shrl
aaa
sbb
lret
mov
addb
fdivrs
add
out
add
or
out
add
mov
js
cmp
sbb
pop
and
cmp
es
fwait
aaa
ret
ds
add
and
sub
jo
xor
sbb
add
loopne
mov
and
sub
mov
call
xor
push
fsubs
mov
pusha
icebp
lcall
push
inc
icebp
ljmp
sbb
leave
fiaddl
icebp
movsl
cli
jg
mov
jnp
and
cmpsl
or
dec
enter
mov
and
adc
adc
movsl
and
jg
nop
mov
push
movsl
pop
jmp
mov
sarb
std
adc
ds
jecxz
push
lock
dec
fcoms
rcrb
pop
or
jle
adc
movsl
push
insb
int
lea
xchg
das
mov
loope
mov
adc
test
jnp
movsb
adc
hlt
les
fnstsw
inc
mov
data16
cmp
and
jl
cmp
and
mov
fiadds
push
popa
adc
lahf
pop
lcall
sbb
cmc
roll
mov
repnz
push
pop
loope
sbb
int
inc
mov
repz
mov
jns
xchg
test
pop
in
sbb
push
js
mov
or
fisubl
inc
lret
xor
mov
test
mov
sbb
cltd
lcall
inc
lds
pop
insb
or
xchg
flds
mov
js
retw
fldt
pop
mov
adc
dec
lret
insl
lret
mov
jb
jne
adc
sahf
aaa
test
xchg
push
aam
mov
mov
arpl
loop
cmp
xlat
daa
test
pop
lock
out
out
mov
adc
pop
or
xchg
mov
xorl
mov
das
pop
sbb
sbbb
es
rorb
lcall
mov
sub
dec
xchg
cltd
fisttpl
out
jae
aaa
mov
addr16
push
fists
sub
pop
push
call
nop
push
cwtl
cmc
stc
call
cmp
mov
cmp
jmp
mov
test
push
loopne
fidivl
xchg
lock
adc
jecxz
inc
xchg
xchg
ljmp
mov
pushf
push
aas
es
daa
mov
cmc
cmpsb
mov
fs
sbb
push
mov
jns
mov
popf
mov
cmc
adc
jmp
pop
mov
add
aam
jbe
pop
stc
seto
test
dec
mov
jl
test
push
loopne
push
test
mov
gs
xchg
add
repz
insb
clc
fsubrl
xor
jle
insb
jmp
inc
jmp
rorl
aas
xchg
and
xchg
pop
mov
xadd
out
lahf
mov
mov
adc
pop
mov
xor
rcrb
cmp
shrl
nop
cmp
fs
icebp
testb
js
push
sub
les
movsb
in
and
loop
pop
aad
std
lahf
xor
dec
fdivrs
ljmp
gs
mov
mov
ret
es
jbe
push
test
jmp
call
clc
jne
das
push
scas
orps
push
cmpsl
lods
cmp
popf
and
outsl
das
adc
push
push
sti
and
in
in
out
addr16
cmp
xchg
dec
mov
mov
mov
div
cmpsb
mov
cmp
cmp
es
je
and
dec
push
cmpb
inc
jne
jo
lahf
jne
mov
xchg
sahf
sarb
xor
xor
repz
xlat
dec
mov
xchg
push
out
fbstp
mov
test
cmp
daa
sbb
add
push
call
icebp
sbb
das
cwtl
sub
mov
mov
cmc
jp
pop
jmp
ds
mov
mov
cmp
pop
inc
xchg
stos
pop
xchg
lods
and
stc
rol
jo
lahf
movsb
xor
pusha
add
loop
shl
mov
ja
aam
fwait
cmp
sub
cmp
add
mov
mov
mov
mov
insl
lret
rolb
dec
xchg
add
jp
push
dec
mov
adc
shl
cli
push
call
add
int
shld
push
movsbw
push
movsbl
shr
xadd
aaa
push
bt
bts
and
push
aam
setp
lahf
shr
lea
jae
pushf
shl
cmp
mov
pushf
stc
stc
test
pushf
jmp
adc
mov
dec
insl
scas
cmp
sbb
push
inc
jl
adc
push
xor
mov
xchg
repz
mov
addr16
inc
adc
cmp
add
popa
push
popf
mov
xchg
add
inc
push
fcomp
mov
data16
sbb
mov
cmpsl
pop
dec
test
test
mov
loopne
ja
jmp
lretw
cmp
push
pop
xor
pop
ljmp
add
test
cwtl
add
movsl
addr16
out
ss
and
sbb
dec
aad
xor
push
fnclex
movsb
cltd
mov
dec
cmpsb
lods
out
shl
pxor
aam
imul
mov
inc
lods
add
loopne
mov
insb
pop
sbb
push
push
sbb
dec
fstl
int
xchg
pusha
pop
lea
lahf
and
xor
inc
cmp
push
xor
sbb
dec
mov
cmpsl
pop
jcxz
mov
pop
jg
addr16
test
in
pop
or
xor
add
mov
into
add
shrb
repz
mov
jb
jl
push
rcrl
adc
jae
add
fmuls
das
jb
es
xchg
pop
and
inc
mov
call
sub
or
or
jmp
add
and
rcll
jmp
and
in
dec
dec
lret
andl
leave
push
sub
mov
adc
mov
aaa
lahf
std
sbb
mov
inc
xchg
mov
insb
loope
mov
and
fsubrs
sbb
push
fdivl
das
lods
lods
shlb
insb
cld
pop
xchg
pop
jo
push
outsb
ret
cmp
push
xchg
push
test
les
orb
outsl
shl
add
dec
shll
xor
fisubrl
and
jns
loope
xchg
imul
push
vpcmpeqb
out
mov
xchg
or
orl
sbb
iret
ljmp
or
sub
cmp
jne
in
dec
xlat
xlat
addr16
scas
mov
jle
insb
in
dec
lods
clc
into
dec
arpl
pop
fcomps
push
in
enter
push
enter
add
jae
popa
addr16
outsl
js
add
add
sbb
or
ljmp
cmp
call
nop
int3
push
call
rolb
dec
xor
cs
insb
add
jecxz
cmc
sub
pushf
mov
stos
mov
pusha
call
push
call
mov
jmp
push
call
lret
loopne
sbb
and
mov
and
outsb
lret
pop
fstps
jl
sub
rcll
repnz
fwait
clc
leave
sahf
aaa
outsb
sub
sub
cld
pop
in
mov
jb
dec
lods
or
fldt
and
in
js
lea
xchg
hlt
jle
pop
jmp
pop
je
and
adc
mov
xor
cmc
jne
and
add
pop
mov
call
arpl
lods
push
call
roll
add
jp
add
push
jp
call
mov
cmc
sbb
lods
mov
test
lret
pop
fisubl
adc
pop
or
push
lods
out
in
push
leave
cmp
into
popa
cmp
dec
aaa
sbb
inc
cwtl
mov
cwtl
scas
sbb
mov
and
xor
out
sub
xchg
sbb
cmp
adc
cmp
data16
pop
jns
xor
popa
loope
dec
jb
jb
shll
adc
jne
imul
push
test
sbb
push
push
call
and
inc
and
sbb
pushw
popfw
push
call
push
call
xchg
push
mov
aas
mov
call
xchg
jl
call
dec
cld
insl
out
or
iret
dec
dec
xor
ss
sbb
sub
cs
cmp
into
pop
bound
loopne
testl
jbe
call
and
mov
cli
stos
shrb
inc
int3
add
mov
push
mov
pop
jb
push
jp
dec
mov
add
or
push
test
adcl
or
and
or
in
sbb
add
cmpl
mov
add
cmpsl
pop
fcomps
stos
lret
jb
popa
mov
das
cwtl
add
dec
stos
xor
frstor
inc
pop
cltd
outsl
xchg
mov
add
pop
jne
bound
or
shr
cmp
jb
test
cs
jmp
insb
xorl
sub
into
mov
sbb
cmp
ret
in
inc
shlb
in
mov
cmp
or
pop
and
pushf
test
mov
xchg
xchg
ja
dec
cmpsl
push
test
mov
and
pushf
jmp
add
rorb
cmpsl
inc
repz
addr16
push
hlt
mov
jae
ds
aad
test
outsb
dec
popf
cs
sbb
push
xchg
ja
inc
jae
out
sahf
push
add
ja
mov
test
out
ljmp
xor
cmc
push
shll
pop
subl
dec
mov
cs
fnstsw
lea
inc
mov
push
test
dec
pusha
subb
lcall
in
xchg
xchg
push
cmpb
in
icebp
orl
jne
cmp
movsl
or
shlb
cwtl
lcall
cmpsl
mov
jns
xlat
test
std
and
sbb
fcompl
mov
mov
movsl
adc
push
push
int3
xor
push
mov
shlb
cld
ret
out
and
xor
push
xchg
leave
jp
or
lds
sub
add
xlat
xchg
lods
dec
xchg
dec
fnstcw
jno
push
test
mov
xchg
or
fiadds
or
in
xchg
or
das
fiaddl
lds
leave
add
sub
mov
outsl
iret
and
or
shrl
xchg
fiadds
pop
mov
or
mov
mov
adc
cmpsb
add
push
aam
test
dec
je
cmp
mov
jnp
xor
inc
inc
and
repnz
jae
bound
jno
das
iret
mov
and
mov
sbb
call
aad
cli
lock
inc
cmc
or
sbb
push
fidivrl
xchg
pop
jnp
inc
scas
cmp
pop
jg
test
or
jp
iret
pusha
int3
push
push
data16
inc
mov
mov
mov
addl
or
mov
mov
jecxz
pop
fwait
movsb
popf
or
ret
fnstenv
lds
inc
sahf
cmp
xor
xchg
and
pop
test
ret
jp
mov
inc
push
int
ds
inc
fistps
jmp
mov
out
inc
xchg
add
popa
rcll
or
xor
pop
jo
test
jl
call
call
cmp
stos
arpl
cltd
ja
add
je
jbe
fs
scas
push
mov
sti
jns
aas
cmpsl
outsb
es
mov
fs
ret
popf
mov
sarb
data16
arpl
loope
iret
lret
xor
sub
cmp
out
in
int
lret
mov
inc
inc
pop
iret
inc
aaa
lea
movsb
and
xchg
aaa
bound
scas
lds
xchg
inc
clc
sti
cmpsl
inc
push
fdivl
sbb
fsubs
xor
xor
jne
call
mov
push
test
pop
pop
xchg
jnp
out
pop
les
lretw
push
fisttpll
je
inc
or
push
add
pop
lret
jae
push
sbb
ret
xor
mov
movsl
aad
cmp
sahf
addr16
outsb
cwtl
and
sbb
push
push
mov
cs
push
test
rorb
push
inc
hlt
inc
inc
push
test
jnp
pop
cmp
in
cmp
out
icebp
cwtl
mov
call
xor
popa
jmp
mov
xor
cmp
add
rorb
push
sub
ds
push
xchg
ljmp
push
push
test
or
xor
xor
add
and
fnstcw
movsl
add
fwait
add
jl
sbb
sarl
lds
pop
fmul
popa
ja
lcall
fwait
xchg
or
mov
cmc
pusha
sahf
add
jb
mov
dec
pushf
ror
out
je
inc
mov
adc
mov
pushf
aam
les
inc
xor
lret
insb
inc
testb
mov
sbb
test
cltd
adc
sub
jb
cmpsl
push
call
fcoms
pop
in
test
aad
adc
xchg
or
imul
daa
xchg
call
test
inc
cmc
pop
adc
cli
xor
out
jae
cmpsb
in
sbb
push
movsl
add
xchg
xchg
xor
lds
ds
shrl
mov
ret
adc
push
lret
rclb
call
push
or
popf
sub
add
in
les
mov
in
push
test
cli
or
jno
call
xchg
lock
dec
adc
mov
jmp
push
call
cmc
inc
inc
cmp
stc
shl
jmp
adc
js
cmpb
fsts
xor
in
dec
hlt
push
out
fucom
or
test
inc
test
sbb
fimull
cmp
pop
xchg
adc
and
icebp
es
pop
stos
fdivl
pushf
hlt
push
stos
dec
inc
test
jno
cmc
pop
mov
cmp
fcoms
jl
and
sbb
push
jecxz
mov
xchg
cmp
sbb
js
in
orb
mov
mov
cmp
jl
fs
daa
xchg
lret
mov
inc
pop
outsl
jecxz
mov
jg
outsl
push
test
stc
or
push
call
iret
xlat
push
test
push
stc
sub
clc
lea
jae
shr
jmp
xor
inc
add
mov
dec
mov
shlb
pushf
add
loopne
scas
pusha
jbe
push
aas
cmpsb
pop
je
insb
adc
aam
mov
sahf
mov
jmp
cmp
in
xchg
cmpsl
sub
clc
push
push
sub
in
jnp
lods
sbb
add
sub
push
arpl
push
push
jp
call
popa
mov
out
scas
les
mov
inc
lods
sbb
aam
loop
out
dec
notb
xchg
loope
mull
or
inc
sarl
popa
xchg
cwtl
and
int3
add
mov
fistpll
xor
jp
xchg
daa
cwtl
pop
or
mov
insb
sbb
mov
xchg
sbb
idivl
test
or
push
call
sub
xchg
sbb
out
iretw
dec
aam
jg
mov
sbb
scas
sub
cli
outsl
clc
pop
lds
and
jge
adc
loop
out
cmp
dec
dec
mov
nop
mov
pop
aas
ret
sub
leave
arpl
lcall
add
mov
test
lcall
fnstcw
mov
scas
mov
aam
mov
sbb
push
test
sub
ja
call
fsubl
not
mov
jmp
push
call
lock
das
push
call
cmp
mov
inc
push
call
push
call
or
dec
jb
filds
and
mov
cmpsb
push
mov
xchg
out
test
add
pop
add
mov
int
vpcomd
std
movsb
pop
jle
stos
pop
or
mov
pop
add
jmp
mov
sahf
add
sub
and
pop
pop
or
xchg
call
jmp
divb
inc
cmpsb
add
lret
pop
push
test
ss
int3
inc
cmp
aam
int
jo
cmp
cld
pop
inc
stos
push
shll
popf
mov
mov
push
push
call
test
in
push
fwait
or
inc
lock
cs
outsl
mov
and
dec
cmp
xchg
out
test
push
push
test
jo
fstpl
xchg
loope
enter
sub
xchg
sbb
fimuls
dec
push
movsl
and
in
das
xadd
das
movsb
and
leave
imul
hlt
push
push
test
adc
insl
or
push
les
in
xchg
or
movsb
movl
push
push
in
xchg
xchg
dec
inc
jmp
xchg
xchg
push
jle
cmp
mov
cmpsl
inc
stos
fildl
xchg
outsb
inc
pop
jns
xor
push
pop
pop
fnstenv
insl
xchg
sbb
push
pusha
bound
jno
jb
fs
int
jo
pop
nop
inc
scas
addr16
dec
xchg
xchg
lea
xchg
and
sub
xchg
cmp
out
xchg
aas
pusha
jp
insl
das
jno
popa
mov
jg
clc
pop
imul
xchg
xchg
push
sbb
outsl
xchg
orb
push
dec
inc
inc
mov
push
out
loopne
jnp
cmpl
iret
test
add
and
xchg
mov
pop
repz
inc
push
sti
inc
sti
inc
rcll
inc
inc
pop
xchg
and
ljmp
sub
movsb
pop
jae
outsl
dec
inc
fwait
inc
xchg
movsb
mov
mov
sub
jl
mov
nop
xor
sub
mov
mov
inc
scas
repz
stos
pusha
test
outsb
scas
cmpsl
sub
scas
ret
xchg
call
mov
or
cmp
ss
jne
jmp
out
movsl
in
out
movsl
repz
movsl
sub
cld
jbe
jl
jbe
jl
jbe
jl
cmpl
je
lret
sub
insl
test
or
jge
test
pop
mov
js
mov
mov
jp
pop
movsl
imul
sti
adc
xlat
mov
mov
out
sbb
dec
and
popa
lret
mov
lcall
mov
lahf
insl
cmpsb
mov
mov
sub
in
adc
mov
stos
sbb
xchg
rolb
cmp
mov
push
sub
sub
jne
xor
adc
mov
mov
add
out
sbbl
xchg
mov
jns
xor
mov
cmp
mov
xchg
mov
js
mov
and
mov
cmpb
dec
mov
stos
jno
repnz
stos
in
mov
jne
dec
movsl
outsb
fbstp
ret
push
adc
mov
int3
rol
cmpsl
mov
mov
adc
aas
popf
and
cmp
dec
cmp
enter
sahf
xchg
inc
aam
jbe
ret
mov
push
cwtl
mov
sub
and
inc
cltd
mov
ficomps
shlb
mov
mov
les
mov
jl
push
inc
mov
pop
les
mov
shll
mov
in
pop
pop
movsl
mov
in
jae
hlt
loope
lods
jne
mov
shll
pop
cmpsb
ret
lret
lahf
lea
aam
jl
test
fstp
xchg
loop
js
popa
movsl
mov
loop
xchg
xor
pop
into
jmp
cmpsb
test
xlat
push
cmpsb
mov
mov
sub
mov
test
stos
adc
and
adc
mov
fwait
cmp
xor
xchg
fs
cs
mov
pop
sub
cmpsb
mov
les
loop
dec
mov
inc
add
ljmp
fs
ret
hlt
stc
mov
leave
je
sbb
and
adc
es
cpuid
je
test
and
insl
mov
test
jo
mov
sub
mov
int
aam
into
insb
adc
test
mov
movsl
cmp
cmc
xor
xchg
xlat
push
sub
fidivs
sarb
push
into
lods
add
adcb
ret
lahf
xor
ds
roll
mov
xchg
mov
mov
ret
mov
pop
shrb
or
sahf
pushf
shll
jge
lcall
add
dec
lret
bound
mov
ljmp
jns
int
add
mov
addr16
mov
push
jb
mov
pop
lods
xchg
xchg
aad
scas
andb
mov
xchg
xchg
lods
push
push
loopne,pn
jbe
shrb
test
pop
aam
mov
fistpl
stos
rolb
mov
imul
scas
pop
and
sub
les
xchg
mov
cs
mov
add
aaa
out
add
mov
sub
push
and
daa
scas
movsb
cmp
cmp
cwtl
rol
test
stos
test
xorl
shlb
rol
dec
mov
inc
mov
lock
sub
cmpsb
jmp
lods
jae
mov
push
cmpsl
and
in
into
mov
clc
stos
mov
pop
mov
xor
fwait
mov
lods
dec
scas
push
mov
lods
jb
xchg
sbb
xlat
mov
push
adc
mov
and
mov
dec
movsl
cs
sub
adc
mov
mov
xor
ret
call
inc
push
dec
ret
mov
movsl
xchg
xor
mov
shlb
push
adc
cmp
jb
or
dec
test
shl
insl
xchg
insb
jo
addr16
push
and
mov
outsl
mov
and
or
sar
mov
scas
cmp
jecxz
dec
lods
je
jae
adc
push
mov
cld
cld
nop
sarb
xor
mov
xchg
test
mov
pusha
push
scas
lods
ret
and
cmp
cmp
mov
call
sahf
lods
sub
lods
mov
xchg
xchg
stos
xor
mov
in
push
loop
clc
jg
mov
and
mov
add
mov
test
xchg
mov
cmp
mov
mov
mov
lods
divb
iret
test
fs
mov
mov
or
jbe
sahf
ret
lods
inc
scas
mov
lods
cld
jle
sbb
cmpsb
lods
bound
or
mov
adc
jae
mov
mov
test
or
mov
xchg
and
and
cmpsl
sarb
scas
jecxz
jge
and
inc
decb
inc
mov
adc
fnsave
stos
test
das
or
in
orl
mov
mov
sub
mov
add
fidivs
loop
repz
das
out
xor
sahf
scas
in
push
shlb
adc
xchg
add
aam
adc
scas
mov
or
push
mov
mov
je
mov
adc
shl
push
hlt
mov
in
mov
mov
jmp
ret
mov
mov
es
dec
xor
push
push
mov
or
sbb
enter
cwtl
mov
fs
sbb
xor
shll
inc
mov
or
mov
xor
shlb
inc
pop
and
test
mov
fs
or
jbe
cmp
jb
sub
mov
mov
hlt
fsubrl
rcl
and
ret
mov
fs
movsb
hlt
into
mov
in
fidivrs
lods
je
insl
in
repnz
mov
jl
mov
adc
fdivrs
inc
out
fldt
push
push
push
scas
and
mov
fdivl
xor
sbb
dec
stos
push
mov
lcall
mov
cwtl
stos
mov
mov
lods
xor
lcall
mov
xor
enter
mov
xchg
mov
mov
loop
shlb
pop
stos
movsl
lods
outsb
cs
mov
jae
scas
inc
lock
push
call
in
push
loop
scas
jo
pushw
mov
arpl
push
test
mov
orb
shrl
push
xor
das
icebp
je
icebp
push
xor
mov
sbb
fcomp
lahf
mov
or
cmp
push
mov
fimull
rcl
adc
push
sub
inc
mov
inc
sub
cmpsb
lods
mov
scas
call
sub
jmp
mov
add
cld
pushf
popf
add
mov
cmp
mov
mov
mov
add
lret
jo
mov
cmpsb
cmp
test
dec
rolb
mov
bound
imul
pop
mov
les
int3
stc
add
and
inc
aas
and
jmp
fnsave
xor
mov
sbb
jmp
jl
pop
loopne
fdivl
push
push
pop
cmp
cmpsb
push
and
scas
movsb
insb
mov
xor
xchg
mov
sub
push
out
adc
and
mov
push
mov
das
inc
mov
inc
out
jbe
mov
inc
and
mov
cmpsb
std
mov
cmpsl
pop
mov
mov
movsl
mov
jns
fdivs
mov
int3
js
xchg
cmp
adc
clc
xchg
mov
mov
ror
mov
ds
pop
test
lret
insb
fcompl
pushf
enter
cmp
mov
sahf
mov
mov
mov
in
mov
jp
cmp
adc
cli
xor
lods
daa
movsl
mov
fbstp
jg
pop
mov
cwtl
xor
xor
mov
scas
jno
paddq
popf
mov
push
sbb
shrb
mov
mov
mov
cmp
repnz
pop
cmp
lcall
mov
lods
xchg
in
movsb
shlb
mov
fwait
mov
lret
push
movsb
xchg
mov
fidivl
cmp
lods
fs
xlat
jno
push
mov
sbb
and
int3
ret
imul
mov
ljmp
xor
sar
mov
mov
cmc
mov
lds
mov
fmul
mov
lcall
mov
movsl
repnz
mov
mov
mov
mov
inc
scas
and
or
mov
ret
hlt
adc
fmuls
loope
mov
mov
cmpsb
ret
adc
popf
rcrb
aad
push
mov
clc
and
xchg
stos
jl
stos
in
xor
movsb
xchg
mov
out
leave
dec
adc
sahf
arpl
mov
mov
nop
cmpsb
mov
in
xor
mov
lret
test
insb
rcrl
dec
popf
pop
mov
sbb
cmp
leave
lods
es
lods
adc
mov
ret
adc
in
xchg
mov
shl
popa
lods
xchg
pop
mov
xor
faddl
push
mov
test
mov
stos
push
test
mov
hlt
or
cld
fidivs
lds
cld
mov
mov
mov
mov
mov
hlt
jb
movsl
hlt
dec
pop
stos
inc
sbb
out
fnstenv
enter
mov
hlt
xorb
cmpsb
fdivs
push
xchg
repz
test
scas
mov
hlt
push
mov
adc
cmp
je
adc
hlt
mov
les
sbb
hlt
test
jbe
mov
cwtl
es
add
xchg
fcompp
xor
lea
cmp
test
repz
xchg
sbb
test
lods
int
test
mov
test
cmpsl
mov
mov
scas
inc
mov
ds
and
xor
ret
sbb
adc
mov
pop
popf
mov
add
mov
scas
popf
inc
mov
clc
jno
mov
mov
xchg
shlb
mov
out
push
cli
mov
mov
hlt
mov
clc
mov
xchg
sub
and
mov
jmp
dec
mov
mov
mov
and
lods
movsb
mov
scas
or
mov
dec
mov
mov
ficoml
ret
inc
adc
xor
mov
mov
mov
inc
mov
jne
inc
jns
jp
insb
outsb
push
rcrb
inc
test
mov
into
movsb
and
mov
sar
subl
js
mov
mov
ret
or
subl
xor
pop
stos
into
cwtl
lods
mov
insl
mov
stos
pop
aam
jnp
cmc
sbb
adc
andb
outsb
mov
mov
xor
mov
push
addl
dec
inc
xor
inc
lods
pop
mov
cmc
mov
mov
aam
into
mov
ss
lock
inc
inc
jo
fidivrs
push
lret
mov
dec
movsl
nop
mov
or
jnp
ds
scas
add
in
ss
lods
les
mov
push
xor
lret
mov
push
insl
inc
jl
test
stos
sub
mov
mov
pop
test
mov
int3
pop
mov
stos
mov
inc
fstpl
push
lods
stos
add
sbb
andb
and
and
sbb
mov
js
cwtl
and
bound
aad
xor
sub
push
mov
jg
pusha
je
mov
call
test
dec
lods
push
xchg
mov
mov
fsubs
mov
sbb
adc
movsb
sbb
xchg
lea
dec
rep
rep
jb
push
or
insb
sarl
mov
mov
xchg
scas
xor
into
and
adc
mov
loop
mov
mov
out
rcrb
aam
and
stos
mov
pop
xor
push
sub
in
lods
sbb
scas
push
xchg
xor
lea
sahf
mov
jecxz
icebp
xor
lods
ds
mov
sbb
insb
negb
mov
or
cwtl
ljmp
int
add
fwait
sar
sahf
shlb
jno
cli
ret
pop
pusha
stos
shll
or
cli
js
mov
mov
insb
jo
les
jb
mov
ror
cltd
cli
hlt
jbe
jge
cwtl
mov
mov
je
scas
outsb
mov
mov
pop
xchg
push
push
cwtl
in
inc
pop
cmp
mov
mov
mov
add
mov
mov
pop
scas
inc
mov
mov
dec
xchg
mov
scas
xchg
mov
sub
sbb
pushf
repnz
push
fisubl
mov
repz
mov
mov
hlt
lret
xor
icebp
jo
rol
dec
jno
sub
popa
scas
pushf
mov
cs
add
data16
cli
ljmp
or
sub
sub
cld
scas
and
loop
or
jb
mov
ljmp
mov
cmpsb
hlt
lret
jns
jg
inc
es
int3
mov
and
jo
pop
mov
add
mov
mov
push
in
bnd
int
hlt
into
xchg
mov
xor
cmp
push
push
fsubrs
cmp
cwtl
js
scas
popf
sbb
hlt
pop
and
call
and
sbb
mov
push
mov
ret
and
and
push
nop
mov
pushf
icebp
mov
iret
mov
daa
gs
sbbl
shlb
rcrl
div
adc
adc
int
in
popf
aam
jl
mov
sub
mov
pop
add
cld
mov
loopne
pusha
adc
sbb
loope
fwait
add
inc
push
add
stos
jae
inc
mov
push
andl
mov
push
pop
insb
movsl
mov
and
lods
dec
xchg
ret
dec
sbb
add
in
hlt
cmp
dec
rorl
fwait
xor
xchg
js
xchg
adcb
push
ja
pop
mov
fsubrs
add
mov
pop
xchg
mov
les
int
pop
loope
or
xchg
aam
push
rclb
rorl
mov
push
sub
je
and
nop
je
mov
xlat
mov
add
mov
adc
push
mov
push
test
movsl
ror
shlb
ret
movsl
sahf
aam
dec
adc
std
mov
jae
xchg
mov
imul
dec
fdivrs
aam
xor
shlb
cs
cltd
cmp
js
inc
lods
les
adcb
inc
pop
push
les
inc
xor
pop
push
mov
sub
xor
add
lahf
adc
adc
lret
scas
sbb
test
fwait
cmpsl
cwtl
sub
dec
sub
fs
and
test
and
fwait
lret
add
mov
inc
and
dec
mov
sub
push
or
ja
test
mov
hlt
jb
push
mov
lock
stos
cs
int3
pop
icebp
mov
cmpsb
cmp
and
test
pushf
mov
dec
imul
mov
out
and
lds
dec
push
adc
and
loopne
xor
dec
lock
and
stos
into
or
adcl
cld
fbld
mov
xchg
stos
dec
scas
lahf
mov
jmp
ja
nop
fisubrl
stos
addr16
mov
mov
out
jne
mov
test
fldl
sbb
dec
enter
mov
mov
lret
stos
sahf
sbb
sbb
stos
mov
xchg
popf
stos
xchg
mov
dec
mov
lahf
fwait
outsl
mov
mov
fs
adc
mov
stos
in
movsb
push
ret
fs
call
sbb
mov
mov
mov
subb
dec
stos
mov
mov
adc
pop
mov
dec
mov
pop
jb
jo
mov
stos
jo
je
jle
imul
ljmp
movsb
sub
addr16
psllw
mov
rolb
or
in
call
stos
shlb
jno
dec
and
xorl
xor
movsb
dec
cmp
push
push
adc
xor
mov
pushf
mov
aam
xor
inc
xor
in
clc
int3
mov
xchg
jne
xlat
fs
pushf
sahf
mov
push
jl
inc
lds
and
outsl
mov
daa
and
insb
jne
scas
mov
rcll
mov
sbb
mov
aam
sub
jo
mov
mov
mov
dec
stos
push
sbb
mov
and
mov
movsb
xor
mov
and
sub
mov
xchg
mov
mov
sbb
jl
test
scas
mov
jb
xchg
mov
addr16
in
cwtl
sbb
xchg
mov
lods
push
and
fwait
scas
in
lods
mov
out
mov
mov
xchg
mov
adc
xor
lods
les
xor
xorl
icebp
sbb
and
mov
dec
movsb
lea
cli
subl
in
mov
insb
mov
cmp
and
push
and
loop
xor
mov
cmp
dec
xor
cmp
dec
sub
imul
jmp
cwtl
xchg
lods
lock
sub
stos
mov
xchg
mov
cmpl
cmpxchg
or
mov
addr16
stos
mov
pop
mov
sbb
mov
mov
adc
adc
or
pop
lods
mov
adc
mov
sti
adc
sbb
movsb
xor
and
imul
divb
movsb
addb
cmp
mov
in
std
sbb
jo
jecxz
rolb
fidivl
xchg
mov
mov
mov
mov
scas
and
les
mov
lods
mov
mov
mov
push
cmp
movsb
sub
rcr
mov
mov
sub
push
sub
push
je
movsl
or
mov
adc
in
push
sub
sbb
and
aam
ret
mov
outsb
insl
lods
xchg
in
fdivrl
pop
xor
lods
xlat
xorl
cmp
out
je
std
mov
cld
je
cmc
mov
movsb
fdivrl
mov
movsb
js
test
je
test
fisubl
lods
jecxz
test
mov
ret
sub
movsl
xor
add
push
add
lods
or
adc
mov
lods
xor
mov
xlat
sub
and
pop
xor
mov
test
xchg
fnsave
out
mov
les
xchg
inc
fwait
scas
aad
mov
mov
mov
mov
sub
push
push
scas
sub
xor
sbb
cwtl
xor
sub
mov
mov
mov
mov
jo
mov
les
cmpsb
adc
je
dec
jo
pop
sub
inc
push
ficoms
inc
cmp
cmp
and
rorb
pop
lds
test
lcall
push
mov
mov
movsl
inc
mov
push
mov
or
mov
test
shrl
popf
pushf
push
sub
pop
mov
xor
ja
adc
pop
pop
push
mov
dec
pop
cmp
pop
ds
loopne
movsl
pop
das
xor
or
test
lahf
insb
in
or
mov
test
mov
xor
adc
sbb
push
popf
cmp
orb
and
repnz
cmp
imul
cmpsb
test
push
push
mov
in
cld
mov
outsl
mov
xor
dec
les
adc
push
clc
imul
sbb
lods
and
std
mov
lods
dec
cwtl
sub
adc
insb
dec
cmp
cmpsb
adc
in
cs
loope
aam
les
je
les
jecxz
insb
add
lahf
add
insb
jmp
insb
inc
jb
xchg
insb
mov
ljmp
cmp
xchg
mov
fists
or
cmpsb
insb
lods
push
jp
adc
cmpsb
test
adc
xchg
jmp
adc
adc
or
and
sub
fwait
mov
popa
jecxz
cmp
lods
dec
or
lods
js
es
xchg
bound
mov
pusha
loope
movsl
shlb
dec
movsl
stc
adc
in
mov
nop
ss
subb
xchg
lods
lods
insb
lods
pop
and
or
xor
push
and
nop
dec
and
sbb
cmpsb
loopne
inc
cmp
inc
cmpsb
std
mov
orb
xchg
cs
or
lods
xchg
mov
lods
nop
scas
hlt
addr16
cltd
lods
daa
hlt
scas
addr16
js
das
lods
rolb
gs
ret
xor
lods
daa
nop
and
pushf
xchg
add
test
xor
inc
jmp
sub
jb
fdivrs
sbb
arpl
scas
xor
fs
dec
add
add
and
nop
es
and
xor
adc
and
insb
xchg
and
and
mov
fadd
lods
add
inc
ss
jo
dec
add
adc
aam
and
and
lods
aas
in
roll
mov
into
and
lods
mov
fwait
mov
mov
dec
jmp
mov
movsl
mov
cli
cmp
jo
dec
mov
mov
mov
les
rorl
shll
imull
cmpsb
adc
in
add
mov
xor
rcl
stc
repnz
mov
pop
les
sub
subb
inc
mov
inc
mov
cmp
orb
mov
mov
cmp
mov
and
sarb
lcall
movsb
int3
call
mov
sbb
xchg
xchg
outsb
stos
test
sbb
jl
jl
jl
mov
dec
sahf
dec
cld
les
push
daa
outsl
jo
cmpsb
push
stos
inc
test
scas
xchg
fs
inc
das
jb
xchg
cmp
test
lods
mov
das
aas
sbb
mov
xchg
stos
popa
jo
dec
jae
push
popa
xor
mov
xor
dec
imul
outsb
xor
decb
scas
xor
xchg
mov
incb
lock
or
outsl
mov
push
xor
insl
lods
xchg
mov
dec
cltd
dec
pop
mov
pop
push
call
mov
popa
push
mov
push
movsb
push
into
test
sahf
xchg
and
xchg
repz
pop
xchg
bound
push
xchg
jae
mov
rcll
data16
fsubl
cmp
push
incl
push
or
test
imul
push
stos
dec
or
mov
ja
inc
dec
lret
and
xor
mov
rcrl
adc
pop
popa
sbb
and
cmpsb
xchg
andb
xor
add
xor
lret
mov
xor
mov
andb
shr
xor
mov
scas
lcall
mov
mov
xchg
pop
push
mov
pushf
adc
sub
scas
lret
mov
movsb
cwtl
and
or
add
adc
loop
inc
pop
jl
mov
and
sub
shrb
pop
dec
mov
inc
call
scas
or
mov
add
movsb
pop
dec
arpl
pop
insl
push
xchg
mov
mov
cwtl
and
jae
int3
push
xlat
gs
pop
sbb
xor
fmuls
popa
sub
inc
sub
pop
and
jno
add
out
pop
stos
mov
and
mov
mov
lods
pop
and
adc
mov
pop
jl
lcall
cmc
out
mov
lods
xor
repz
mov
adc
cwtl
inc
dec
inc
cmpsl
addr16
mov
jl
sbb
mov
inc
cmp
sub
jl
mov
adc
xchg
out
sub
mov
dec
xchg
pop
add
mov
add
cltd
jo
test
xchg
xchg
add
sbb
jb
jge
mov
jbe
mov
mov
enter
and
mov
mov
popa
push
inc
hlt
imulb
inc
xor
xchg
lods
fidivrl
lods
bound
xchg
outsl
les
jnp
dec
pop
rolb
push
nop
mov
add
mov
pop
das
sbb
aam
dec
mov
je
lods
xor
or
mov
sbb
xchg
fwait
js
jae
mov
mov
mov
or
jb
arpl
dec
dec
mov
xor
cmp
push
push
inc
addl
call
sti
and
pop
popa
test
call
cmp
pusha
lahf
and
fidivs
andl
xorb
mov
inc
xor
clc
dec
dec
mov
stos
push
call
sbb
adcb
jno
in
test
lret
hlt
imul
sub
pop
test
jb
rorl
pop
fwait
push
add
xchg
shll
test
das
int
mov
subb
mov
das
xor
sub
sbb
pop
fmuls
adc
pop
clc
xchg
nop
add
xor
daa
scas
je
bound
popa
pop
das
mov
pop
mov
insb
push
push
lret
pop
insb
imul
xor
movups
test
movsb
pop
mov
mov
ss
mov
pushf
xchg
sub
cmp
clc
mov
push
mov
sub
sbb
or
push
cmp
repz
ds
push
dec
xchg
outsl
push
and
addr16
mov
push
cs
data16
iret
fmull
and
push
sub
dec
je
bound
test
push
dec
pop
inc
xchg
lods
push
lods
ja
je
daa
jmp
inc
pop
pusha
push
or
insb
arpl
cmp
call
int3
cmc
je
in
jno
mov
ss
dec
jp
out
popa
enter
pusha
mov
inc
jl
jl
xchg
jp
pop
in
lahf
jbe
adc
xor
xor
data16
adc
stos
and
clc
mov
outsl
nop
cmc
sbb
insb
xchg
stos
gs
xor
xor
sahf
adc
dec
cmp
adc
test
sbb
push
mov
sti
sbbb
sbb
jecxz
subl
out
cmpsl
pop
xor
dec
pop
outsl
dec
arpl
ds
addb
xor
outsb
mov
clc
subb
ss
imul
in
andl
data16
nop
ss
inc
mov
cmp
sub
pop
imul
test
shlb
lods
test
fisttpl
mov
add
jno
jl
mov
xor
push
sbb
and
mov
adc
adc
fmull
rolb
rorl
add
sbb
mov
mov
add
mov
aam
inc
xor
mov
sbb
test
mov
fs
sbb
int
sbb
in
popa
lahf
push
scas
xchg
dec
mov
loop
mov
inc
and
push
dec
jge
dec
xchg
mov
fs
sahf
pop
add
push
sbb
push
nop
jl
clc
xor
ficoms
jbe
jl
xchg
xor
call
or
xor
xchg
dec
ror
jl
xchg
xchg
fcomi
repnz
xor
sahf
add
mov
imul
mov
dec
cltd
dec
scas
sbbl
aas
cmp
jl
movsb
data16
movsl
mov
and
mov
in
sub
dec
cmpsb
push
push
popf
lcall
test
jb
scas
xchg
bound
lock
hlt
shl
stos
jecxz
mov
xor
push
sub
and
xor
xchg
pop
test
bound
pop
gs
ret
imul
mov
sahf
jbe
xor
and
sub
push
mov
add
adc
lock
out
data16
add
arpl
clc
aaa
or
lret
pop
lret
ret
cmp
ret
push
shrl
mov
cs
jp
and
xchg
nop
repnz
inc
jmp
aam
lods
dec
inc
sbb
add
data16
push
mov
insb
fdivl
push
nop
in
ret
mov
sub
bound
shll
push
mov
mov
pop
mov
scas
mov
cmp
ss
test
push
xor
out
xchg
loopne
jl
jle
push
push
cwtl
stos
jo
and
and
fisttps
incb
scas
test
arpl
pushf
adc
and
cs
iret
cmp
sub
pusha
lods
in
iret
adc
xchg
in
jmp
lods
cltd
mov
cwtl
push
dec
sbbl
outsl
movsb
nop
cmpsb
mov
mov
sahf
loopne
lcall
xlat
push
sub
mov
mov
xchg
mov
lea
repnz
adc
test
test
outsl
adc
push
xor
stos
in
int3
mov
push
mov
test
mov
shlb
xchg
push
cmp
insb
dec
sbb
mov
cld
pop
nop
push
pushf
mov
dec
sub
push
jp
xor
push
ds
mov
sbb
imul
lods
scas
mov
xor
sbb
cmp
inc
jl
fwait
imul
mov
push
pop
sahf
push
add
dec
mov
mov
repnz
mov
jb
cmp
dec
and
xor
xor
push
adc
mov
push
sbb
inc
add
inc
xchg
or
pop
and
fwait
mov
dec
dec
mov
pusha
lcall
mov
cmp
pop
repz
insb
inc
mov
push
xchg
dec
arpl
nop
inc
repnz
bound
test
xchg
nop
dec
outsb
pop
jae
insb
ljmp
dec
pusha
test
in
test
rcrb
and
xchg
xchg
mov
mov
pop
setns
cmp
and
lret
push
xor
push
mov
and
inc
test
add
jg
mov
mov
ficomps
xchg
dec
xchg
pop
cmp
je
daa
mov
adc
push
xor
cmp
js
movsl
push
stos
lcall
and
test
sub
repz
push
pusha
lds
adc
fcoms
pusha
push
mov
mov
mov
or
inc
fwait
roll
popf
arpl
pop
dec
lcall
push
push
sbb
xorl
insb
in
test
cmpsb
arpl
data16
pop
push
movsb
xchg
pop
test
arpl
aam
shrl
push
dec
ror
popa
mov
mov
cmp
inc
inc
xor
jecxz
xchg
aas
cld
mov
test
ret
insb
sbbb
arpl
das
jp
ljmp
repnz
inc
lret
mov
mov
sahf
out
sub
push
push
and
jbe
aam
pop
push
fsubs
movsb
and
in
cmp
sti
adc
bound
mov
loopne
mov
push
jecxz
adc
repnz
faddl
or
and
mov
sbb
insb
test
jl
or
arpl
xchg
pop
mov
mov
cs
out
stos
ss
cmp
cmp
popa
mov
loop
xlat
cmpsb
mov
add
dec
cmpsb
mov
mov
lcall
mov
xchg
or
pop
out
push
movsb
inc
stos
insb
sub
mov
mov
iret
or
sbb
bound
outsb
xchg
arpl
cmp
ja
push
pushf
and
mov
push
push
stos
movsl
test
mov
data16
and
sete
mov
and
jo
jbe
push
shlb
and
lds
sbb
outsb
insb
add
push
in
and
cltd
test
dec
dec
add
mov
pop
lods
sbb
xchg
mov
ficoms
push
xchg
pop
xchg
cmpb
dec
push
sub
mov
xchg
lock
inc
mov
pop
xchg
aaa
sub
push
push
je
rclb
sbbb
into
xchg
ljmp
mov
mov
pop
pusha
xchg
cmpsb
add
dec
insl
add
fs
lock
pop
loope
jb
cli
lds
push
call
cld
pop
movsb
sbb
sub
nop
add
test
pop
mov
repnz
data16
push
push
dec
int3
adc
mov
cmc
xchg
sub
mov
adc
sub
push
sub
or
xor
xor
cmc
dec
fneni(8087
pop
nop
shrb
lds
movsl
adc
push
lds
sub
push
movsb
nop
insl
xor
push
lods
adc
aad
or
push
xchg
cmp
ds
test
aam
insl
adc
out
icebp
adc
jp
imul
inc
mov
xchg
pop
mov
mov
and
jge
imul
add
mov
mov
sub
xchg
pop
ljmp
and
mov
sbb
loope
dec
push
dec
insb
loopne
loopne
xchg
repnz
mov
sub
bound
jge
pop
mov
pusha
mov
add
call
jnp
daa
out
adc
xchg
cltd
or
jne
or
cmp
movsl
lods
rclb
sbb
mov
and
mov
inc
arpl
push
rcl
add
repz
iret
xor
out
or
xchg
arpl
mov
dec
mov
or
sub
stos
and
rcr
dec
popa
fnstenv
insb
xchg
jo
sub
aas
jle
push
aad
scas
and
retw
and
mov
dec
adc
mov
mov
stos
or
inc
scas
cs
sub
movsl
loope
lds
jle
cmp
movsb
fwait
test
or
incb
add
addl
xor
les
fistpll
cmpsb
mov
lret
mov
xor
daa
mov
dec
xchg
mov
int
bound
pop
aad
mov
sarl
pop
pop
push
sarb
out
adc
dec
push
cli
leave
push
sub
push
cmp
aas
pusha
cwtl
jae
iret
in
repz
icebp
aad
push
ja
push
mov
iret
push
xor
push
and
cmp
movsl
or
add
cmpb
pusha
movw
lea
jne
or
lahf
sub
dec
mov
adc
cmc
adc
add
pushf
mov
stc
stc
jmp
inc
cmc
dec
scas
sbb
ficoms
inc
sub
push
clc
mov
xchg
jne
pop
mov
ljmp
xchg
add
test
sub
add
xorl
mov
push
mov
and
cwtl
and
mov
addr16
inc
pop
mov
and
aas
push
test
or
test
mov
cld
or
fistpll
jo
das
popa
lcall
mov
jns
insl
in
inc
shrl
and
dec
outsl
push
call
mov
jne
push
mov
sahf
daa
cwtl
std
jle
outsl
jmp
sahf
es
or
and
aaa
call
fnstsw
int3
cmp
xchg
or
adcb
sbb
jns
call
popf
push
fiaddl
xchg
and
call
or
sub
movsb
in
cli
inc
or
insb
sbbb
sbb
xor
stc
pop
fstpt
leave
xor
mov
jo
int
int3
jl
dec
mov
rcrb
js
shlb
fcom
add
data16
sub
add
push
push
sbb
aad
iret
aad
lret
mov
xor
ret
daa
xchg
arpl
push
call
sbb
call
xor
bt
cmpl
call
ds
xchg
repz
loope
cmp
xchg
xchg
or
std
ljmp
loopne
gs
gs
jmp
rcrl
inc
mov
pop
loope
aas
push
into
pop
adc
test
enter
jo
icebp
je
xor
pusha
aad
inc
add
push
icebp
lret
dec
repnz
xor
dec
mov
jmp
inc
xor
pop
xorl
dec
lret
push
add
js
movsb
and
call
fcompl
and
mov
pusha
xchg
pusha
pushf
jmp
adc
pushf
push
mov
push
lea
jmp
push
call
es
and
in
fs
jae
cmc
clc
test
sub
jmp
push
call
sub
cmp
add
adc
and
shl
lea
add
adc
aad
xchg
jb
dec
bnd
mov
inc
and
mov
adc
fisubrs
pop
fidivl
movsb
sbb
lret
or
mov
repz
out
push
ror
inc
mov
orb
test
jle
inc
dec
mov
dec
xchg
int
mov
push
mov
dec
mov
sub
fildl
dec
scas
jg
mov
das
movsb
sub
mov
push
jl
ds
and
testb
pop
sbb
repz
jbe
jae
add
scas
fbld
cmpsl
dec
fmul
loope
sbb
arpl
data16
mov
sbbb
lock
or
adc
xor
addl
call
or
jmp
cmp
xor
cmp
ljmp
mov
fwait
pushl
sub
or
sbb
push
movb
cmp
loope
fbld
fadds
call
arpl
push
push
mov
xchg
jg
push
ret
daa
jg
aas
push
and
fdivr
test
pusha
jmp
in
sarl
cmp
dec
xor
inc
cmpsl
adc
bnd
push
aas
pushf
add
mov
mov
add
pop
sar
das
in
popf
mov
pushf
in
arpl
or
into
add
in
outsb
push
xor
ss
mov
jo
inc
dec
lret
inc
ds
sbb
mov
cmp
add
mov
ss
add
jle
push
xor
push
push
cli
fisubl
pop
dec
ret
maskmovq
negl
popf
insl
push
popf
popf
and
int3
lods
jb
jmp
cmp
outsb
cmpsb
lret
fadd
fdivs
dec
lret
inc
mov
leave
push
mov
pop
test
jns
push
jnp
push
jb
sub
sbb
jp
xchg
inc
jmp
jne
loopne
cld
scas
imul
je
dec
frstor
adc
pop
cwtl
js
and
and
icebp
addb
pop
ficoml
push
cmpsb
sbb
jbe
and
adc
dec
push
push
inc
push
xor
cs
insb
add
out
addl
cmp
jecxz
fnstenv
fwait
or
loop
ljmp
dec
jge
bound
test
add
lock
div
sub
or
push
inc
mov
movsb
test
clc
push
std
xchg
outsb
push
xor
sub
sahf
rorb
mov
or
test
dec
popa
mov
arpl
mov
mov
test
div
or
mov
lahf
lcall
shrl
das
movsb
sbb
pusha
mov
call
sub
sbb
loope
pop
jno
dec
lret
inc
cwtl
rcr
cs
fcmovb
out
in
jno
dec
shrb
mov
push
cmpsl
fistpll
loopne
test
or
or
insb
mov
push
in
cmp
cmp
out
push
test
xchg
repz
outsl
movsb
insl
sub
inc
negl
xchg
int
fdivl
pusha
sar
xchg
sbb
ja
xadd
pop
in
jl
mov
in
cltd
sub
stc
dec
sarl
mov
push
xor
cs
insb
add
sub
or
and
push
inc
aaa
push
call
or
pushf
or
sub
dec
or
push
call
sub
ljmp
in
push
movl
cmp
push
xchg
das
sub
pop
mov
pop
mov
jns
mov
popa
fsts
and
pop
fnsave
and
push
call
dec
pushf
cmp
jg
cmp
adc
adc
pop
fists
inc
sahf
negb
hlt
movsb
mov
outsb
jp
fstl
mov
dec
mov
fists
enter
test
jo
xchg
and
inc
lcall
jns
pushf
and
nop
arpl
nop
pop
jne
mov
lcall
jno
lret
ljmp
pop
mov
scas
adc
mov
mov
lret
inc
cmpsl
xor
cltd
mov
idivl
push
xor
loopne
sub
mov
shrb
test
push
jae
imul
aas
rclb
and
dec
add
shr
je
adc
pop
notl
clc
pop
in
adc
js
dec
test
aas
xchg
cmp
cmp
iret
add
fwait
rcrb
stos
ficoml
in
jl
fisubrl
mov
add
push
mov
jno
fsubrl
cmc
push
add
stos
pop
xchg
mov
fdivr
arpl
jae
pop
les
ja
mov
mov
out
rclb
or
pop
push
sbb
testl
mov
mov
pop
push
xchg
dec
xor
aas
dec
pop
andl
lcall
mov
sarb
push
sbb
lcall
aas
mov
mov
push
rorl
xorb
dec
into
cmc
fldcw
fs
jnp
xchg
cmp
inc
test
test
fcomip
push
jecxz
leave
dec
mov
mov
add
xor
fisubs
dec
cmp
dec
jno
insb
shll
xor
mov
shr
fs
pop
lods
int3
jge
in
sbb
fcoms
xchg
and
jl
jp
inc
mov
xchg
push
push
ljmp
roll
cmp
popf
stc
dec
push
sbb
cmp
pushf
jmp
push
call
int
xchg
mov
cltd
and
gs
popa
loop
int3
and
sti
sarl
push
mov
cld
inc
outsl
xor
jnp
and
aas
lock
cmpl
int
dec
lods
adc
cmp
xchg
adc
filds
mov
xchg
cld
pusha
mov
sbb
sbb
xchg
mov
test
or
cmp
add
fs
jne
and
mov
shl
inc
shl
sub
xor
add
add
shrd
mov
bt
cmc
bt
clc
sub
push
pushl
popl
pusha
cmp
mov
mov
lea
ja
sub
adc
sub
inc
add
and
shl
mov
inc
add
ror
mov
cmc
test
jmp
jne
push
mov
xor
js
push
pop
shll
daa
ss
out
in
pop
lahf
es
mov
insb
icebp
jne
lds
mov
cmpsb
fildl
mov
cmc
pushf
push
hlt
shlb
dec
lds
mov
nop
in
faddl
mov
inc
pop
incb
and
sbb
xchg
mov
int
xchg
lock
stos
pop
sub
add
es
shrb
sub
out
xlat
jo
adc
lret
mov
pop
mov
and
loope
lods
push
sbb
dec
fwait
ljmp
jl
dec
ss
shrl
lahf
hlt
jne
push
loopne
scas
cmp
xlat
jno
push
jne
test
xchg
inc
in
jge
inc
in
push
push
adc
mov
and
std
push
mov
add
daa
xchg
xchg
icebp
fsincos
jo
in
inc
or
and
and
sbb
adc
or
dec
cwtl
add
in
mov
ljmp
sbb
add
stc
xchg
pushf
lea
call
call
push
call
cmp
or
pusha
addr16
mov
cmp
test
cmp
mov
cmp
mov
mov
mov
loope
mov
mov
mov
adcb
inc
mov
mov
mov
pop
int
mov
mov
mov
adc
add
hlt
push
inc
shlb
iret
jbe
inc
iret
pop
xor
cli
rcrl
mov
das
mov
mov
xlat
pop
fldt
mov
xchg
emms
push
sbb
data16
lds
xchg
add
cmp
xchg
or
das
cmpsl
add
push
jbe
call
popf
hlt
push
lret
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
imul
popf
int3
mov
scas
daa
mov
cmpsb
pop
jl
cmp
fildl
fistl
mov
jl
and
fs
call
test
lcall
clc
sub
mov
inc
arpl
in
shrl
in
mov
adc
lock
test
fdiv
imul
cli
pop
cmp
pop
ja
ja
push
shrl
xchg
repz
sbb
js
das
cmpsb
sete
fwait
pop
cmp
and
subb
cmp
sbb
aaa
lahf
adc
jmp
mov
jo
sbb
cld
dec
mov
out
push
add
and
shlb
int
ds
mov
pxor
dec
pop
stos
fdivrp
std
mov
cmpsl
xor
jae
mov
xor
lods
out
outsl
cmp
lcall
cmp
andb
dec
scas
cmpsb
xor
push
xchg
push
dec
push
sbb
jmp
push
call
mov
or
mov
dec
and
mov
mov
bt
stc
cmp
jmp
push
call
and
add
push
stos
mov
mov
mov
cmp
decl
jbe
xor
movsl
das
add
sub
sti
pop
xor
sahf
and
jne
xlat
inc
jae
out
jbe
aam
pop
mull
add
in
sub
xchg
xlat
pop
outsl
push
mov
je
gs
sub
sahf
push
nop
mov
xchg
cli
mov
pop
fisubrs
push
rclb
ds
push
sbb
arpl
or
dec
or
xor
xor
out
inc
mov
scas
cmp
idivb
mov
jmp
loope
xchg
inc
or
cltd
or
dec
mov
lods
push
jnp
push
mov
lcall
adc
or
xor
xorl
and
repz
mov
cmp
iret
mov
das
pop
xor
and
and
push
rcrl
cmpsb
arpl
bound
out
dec
push
aas
out
jb
es
fidivrl
mov
mov
mov
add
push
or
enter
jmp
xor
leave
push
cmpb
lds
lret
dec
mov
mov
cltd
negb
lds
fcomi
imul
sahf
pushf
inc
push
mov
fs
xchg
pop
ficoml
mov
js
pusha
call
adc
push
rolb
fcoms
xchg
shrb
icebp
ljmp
sti
outsl
or
les
push
call
sti
rorl
mov
scas
pop
ja
nop
call
mov
std
xchg
inc
popf
sbb
adc
adc
push
lds
lea
sbb
int
or
into
xor
out
jb
jl
std
push
into
in
into
leave
aaa
mov
dec
mov
xor
cmp
pop
mov
cwtl
adc
ret
sti
pushf
push
fldcw
repz
fstpl
xor
push
sbb
stos
shrb
and
call
aaa
les
xchg
daa
nop
in
fidivl
xchg
add
sbb
sbb
call
pop
mov
pop
imul
sbb
sub
jno
gs
and
push
push
mov
mov
xchg
lea
jnp
pop
clc
pop
daa
mov
icebp
mov
out
mov
jg
mov
xchg
xchg
add
push
pop
sarb
and
pop
inc
pop
mov
call
hlt
js
fs
adc
add
push
lret
hlt
adc
lods
das
sbb
test
mov
push
test
add
jb
fcmovnbe
push
add
lcall
lahf
add
push
pop
movsb
push
lds
pusha
fstpl
cs
fwait
popl
inc
xchg
incb
xchg
icebp
dec
shlb
mov
sub
sti
arpl
out
push
push
fisubrs
mov
std
scas
les
in
and
pop
xchg
lahf
in
xchg
repz
inc
lret
and
mov
mov
xchg
cmpsl
push
call
sub
add
test
add
pusha
pusha
lea
jne
pushf
mov
lea
jmp
mov
pushf
movw
pushf
pushf
pushl
ret
push
call
ljmp
adc
push
inc
push
mov
xor
mov
popa
aad
les
sahf
pop
ret
push
mov
out
fists
into
mov
outsl
aas
loopne
push
lret
ja
mov
pop
fs
repz
es
popf
inc
mov
pusha
cmpsl
jmp
loope
outsb
aad
pop
jge
dec
test
add
adc
fwait
scas
les
out
or
sub
ja
fldcw
mov
mov
push
call
jnp
das
jecxz
rcll
outsl
fmull
cmp
xor
xchg
push
popf
lock
loop
mov
inc
mov
bound
xor
inc
das
mov
lcall
je
xchg
and
pushf
mov
js
sub
sbb
faddl
or
sbb
insl
cmp
outsl
divl
sub
adc
sbb
lods
xor
cltd
or
cld
push
add
sub
iret
scas
cwtl
scas
sub
cmc
dec
ret
enter
in
imul
mov
jb
mov
arpl
hlt
cmp
cmp
mov
fiadds
imul
and
icebp
out
or
pop
jge
outsb
mov
or
loopne
xchg
fs
test
hlt
cmp
bound
dec
rclb
test
dec
mov
sub
fidivs
cmp
push
adc
sub
or
pop
test
aas
aas
mov
cwtl
sbb
jmp
arpl
mov
scas
aas
mov
stc
pop
shrl
xchg
lock
sbb
shlb
fwait
mov
fildl
xor
xor
adc
gs
ficomps
xchg
lret
shrl
cmp
pop
xchg
jmp
shll
cmpsl
das
push
adc
push
xor
push
lahf
sbb
sbb
sub
jnp
push
jnp
pop
loop
lods
adc
cmc
pushf
add
jp
les
lcall
push
jge
data16
and
cmp
pusha
inc
push
cmp
push
icebp
mov
sbb
movsl
push
fsts
nop
sbb
xchg
or
gs
iret
jnp
pop
jge
push
push
jle
pop
fimuls
sub
aam
pushf
mov
mov
mov
xorl
mov
hlt
dec
dec
les
sbb
into
jg
mov
push
aad
rolb
dec
mov
ret
push
and
push
jg
loope
fs
push
sub
hlt
jno
and
mov
enter
push
aam
testb
ficoml
sbb
pop
add
imul
push
hlt
icebp
jns
sbb
movsl
or
popa
aad
xchg
in
inc
aad
shll
sub
and
pusha
lea
jne
pusha
mov
lea
jmp
adc
pusha
lea
jmp
push
call
cmp
lret
call
lcall
icebp
push
add
cmp
loop
jge
pop
fsubs
outsl
sarb
sahf
into
es
mov
testl
push
push
lods
cmp
jne
das
movsb
add
sti
push
mov
lahf
pop
or
test
lock
sahf
mov
mov
out
repz
push
ds
cs
adc
sarb
mov
sub
data16
sub
sub
add
roll
pop
xchg
incb
cmp
pop
in
push
adc
add
ficoms
cmp
dec
outsb
insl
mov
mov
shl
push
mov
add
cmpsb
xor
repz
or
pop
pop
mov
push
insl
in
adc
xor
loop
jb
pop
or
popf
adc
sbb
out
popa
cmp
enter
addb
pop
rcrb
adc
xlat
in
push
call
push
cmpsl
test
mov
or
xchg
mov
out
push
ss
xor
adc
mov
lea
mov
cmp
sub
dec
stos
xchg
dec
lret
test
test
fsubs
mov
sti
push
lcall
xchg
mov
mov
pop
into
xor
xor
sbb
pop
stos
movsb
and
cmp
xor
mov
je
xor
add
test
imul
xor
popa
icebp
inc
push
adc
xor
push
call
and
sahf
push
jecxz
mov
inc
mov
outsl
xor
sti
jo
inc
and
cmp
out
jo
leave
jns
movsl
or
xor
push
sbb
xchg
fdivs
push
and
inc
mov
testb
aam
xlat
fnstsw
and
outsl
jmp
sarl
xchg
push
andb
adcb
add
mov
lret
cmp
out
scas
sub
mov
std
xchg
or
sub
adc
rep
pop
not
bswap
pop
pusha
movb
lea
jmp
cmc
sub
jmp
ficompl
pop
pop
test
sahf
punpckhbw
es
add
and
scas
sub
in
push
jae
dec
dec
es
loop
inc
push
push
rorb
es
sbb
jge
sbb
clc
and
ret
daa
pop
sub
aas
ret
outsb
stos
in
fsubr
repz
scas
xor
cmpsl
mov
mov
xchg
cmc
sub
ljmp
outsl
rolb
das
xchg
and
iret
sub
aam
ficoml
xchg
and
mov
mov
clc
mul
divb
push
mov
jl
inc
stos
cmp
call
out
jecxz
cmp
mov
pop
js
and
js
adc
sbb
sub
leave
in
or
cmp
cmpb
jl
or
sbb
push
scas
push
push
push
fisubrl
data16
adc
sbbl
jns
add
int
or
aad
add
test
jp
or
sub
cmp
dec
cmpsb
call
aas
aam
lods
xor
mov
pop
xchg
lock
pop
ja
fsts
mov
pushf
lea
lods
mov
mov
and
mov
cmp
in
stos
cmp
or
sub
and
ljmp
mov
stc
mov
rol
push
ret
lods
and
lret
in
push
mov
inc
sti
mov
inc
ret
cs
xchg
and
or
fsincos
push
call
in
shrl
call
adc
adc
jmp
xchg
add
bt
stc
add
pushf
mov
movb
pusha
mov
lea
jmp
jmp
loop
mov
fstl
sti
adc
sbb
aaa
call
inc
sub
xor
mov
pop
leave
inc
mov
mov
imul
fdivr
test
pop
xchg
loopne
jbe
or
xchg
leave
add
inc
lock
data16
mov
sbb
mov
adc
push
ja
cmp
sahf
and
pop
dec
ss
jmp
or
into
jo
push
and
jg
xor
add
mov
add
push
outsl
clc
push
shrb
mov
sub
sbb
js
mov
xchg
sbb
cmc
sub
out
lods
pop
lods
cmp
jge
out
outsl
mov
jp
jg
scas
push
cmpsb
xchg
cmp
loopne
mul
fcomi
mov
cmp
sbbl
mov
pushf
dec
mov
out
std
ret
pop
dec
aam
ss
jl
cmp
mov
test
push
mov
lret
xor
sbb
mov
and
inc
lcall
int
push
xchg
or
imul
and
incl
out
outsl
adc
stos
lcall
sbb
mov
inc
inc
mov
pop
mov
ret
or
dec
aad
lret
inc
cltd
push
xchg
push
je
xchg
pop
sbbl
lahf
pop
cmp
cmc
push
mov
inc
movsb
jp
or
cli
jle
add
sub
jno
mov
inc
movsl
or
jne
in
mov
mov
addr16
dec
stos
and
repz
push
or
loope
ja
sub
add
add
ds
cmp
add
sub
add
add
sub
add
add
cmp
add
add
stc
movsl
sub
add
add
push
push
sub
add
add
push
and
add
add
add
imul
add
add
dec
add
add
sub
add
add
mov
add
add
add
addb
add
or
add
add
addb
add
filds
sub
xchg
sub
mov
jbe
add
add
add
aaa
add
add
add
or
call
lahf
push
call
icebp
loop
lret
push
mov
stos
sbb
outsl
rcrb
inc
shlb
dec
mov
mov
xchg
sbb
testl
pop
cltd
fisttps
push
jmp
add
stc
aaa
xchg
inc
pop
fisttpl
mov
inc
mov
cmp
jns
dec
lret
push
cs
shl
cmpsb
idiv
jo
xor
popf
dec
jo
push
xor
dec
jmp
xchg
lock
shlb
lret
sub
daa
fwait
add
pop
push
or
test
xchg
push
mov
jae
pusha
jbe
insb
loope
fwait
sub
mov
imul
sbb
je
pop
or
cld
in
push
push
mov
xchg
cmp
cmc
js
fdivp
push
hlt
mov
je
inc
test
cmp
sti
push
cmp
sahf
dec
fs
out
cmp
add
lret
clc
xor
or
lcall
or
ljmp
dec
insl
push
out
jle
pusha
mov
lds
outsb
loop
sbb
nop
sbb
add
xchg
sbb
jb
push
jbe
or
adc
mov
mov
xchg
sbb
pop
iret
mov
mov
out
fnstcw
es
lret
icebp
mov
int
mov
je
push
xor
adc
xor
and
ljmp
push
mov
fsubrl
adc
push
mov
loopne
lds
mov
mov
dec
arpl
ja
inc
dec
xchg
sahf
ret
lcall
fcompl
xchg
adc
and
inc
das
push
iret
test
loop
xchg
leave
in
jns
lock
push
or
fistpl
je
sub
sub
ss
popf
arpl
xor
lds
sbb
ds
fdivs
popf
add
mov
jle
xchg
and
addr16
out
pop
jl
cmpsb
addl
cs
jnp
lret
aas
je
pop
inc
cmp
and
cmpsb
sub
xorb
jg
dec
in
push
ret
out
bound
repnz
rclb
scas
shl
movsl
arpl
call
arpl
outsb
data16
xor
push
rcrl
and
loop
rorl
push
push
mov
filds
int3
xor
adcb
push
or
cwtl
lcall
and
push
rolb
out
rcl
lds
pop
call
xor
xchg
adc
flds
dec
and
test
pusha
cmpsl
cmp
dec
fisubl
enter
in
push
rclb
mov
fdivrs
shrb
or
sub
incl
push
cmp
add
sub
pop
rcrl
cmp
mov
xchg
mov
inc
sti
and
jle
dec
fwait
add
inc
in
and
xor
and
push
into
in
cmpb
fsts
sbb
push
fs
mov
lods
int3
push
sub
jmp
gs
std
sub
push
iret
icebp
inc
scas
pop
mov
loope
loope
shll
lea
xchg
std
jne
jne
insl
fstl
int3
fcomip
mov
lret
lahf
mul
negb
push
stos
das
mov
icebp
pop
mov
int
or
cmp
or
stos
aaa
addr16
jns
add
adc
cmp
push
sti
add
or
mov
xor
outsb
push
outsl
jecxz
outsl
mov
movsb
movb
aaa
adc
mulb
mov
dec
mov
xchg
leave
cmp
ss
jp
dec
stos
and
dec
shll
das
mov
stos
push
or
lcall
pop
icebp
incl
dec
push
cmp
inc
push
fcom
cmp
dec
vcomisd
push
lock
pushf
shll
sbb
fisubrs
dec
lods
adc
sti
push
cmp
loop
jp
inc
xchg
push
lds
xchg
rep
pop
xor
sub
or
xchg
mov
or
or
into
push
daa
mov
rcll
in
cmp
testl
lds
jns
imul
or
scas
les
dec
inc
rcll
cmpsb
adc
out
mov
mov
movsb
jo
adc
pop
aam
cs
xchg
iret
inc
jl
cmp
sub
icebp
sbbl
fildl
pop
xchg
shr
je
sub
pop
rorl
insl
lcall
loopne
andb
jmp
dec
and
femms
pop
mov
movsl
add
inc
xor
pop
pop
std
jo
rcrl
mov
rclb
lods
lret
push
mov
imul
sub
rcll
int3
inc
sahf
daa
mov
mov
clc
mov
adc
aam
sub
stos
jns
sbb
lcall
filds
inc
scas
pop
jne
jnp
insl
fsubrl
dec
cmpsl
add
andb
push
cmp
rorl
sti
scas
pop
cmpsb
mov
inc
and
xor
pusha
pop
inc
stos
pop
jno
mov
aaa
pushf
outsb
lret
cmp
dec
std
adc
nop
ss
jl
jge
insl
fldcw
pop
mov
rcll
pop
scas
push
call
jne
sub
scas
and
movsl
stos
mov
xor
sbb
insl
in
test
stos
jecxz
pop
adc
jno
mov
fadds
mov
or
into
sub
mov
push
mov
adc
jl
adc
cmp
mov
pop
ja
dec
mov
jns
dec
xchg
out
daa
cwtl
popf
sbb
sub
imul
xchg
adc
jb
inc
mov
fbstp
mov
lcall
fiaddl
push
xchg
add
jp
push
add
cmc
pop
push
call
jo
gs
je
call
push
cmp
sub
inc
pop
les
jns
lock
sarb
mov
lods
ss
xchg
sbb
dec
sbb
inc
inc
shlb
push
dec
jo
out
enter
out
sbb
fimuls
mov
aas
scas
xchg
rolb
xlat
stc
imul
push
mov
dec
mov
arpl
das
mov
adc
jecxz
add
in
push
rolb
or
lahf
push
mov
mov
jae
arpl
cmp
xorb
test
or
dec
mov
shr
cwtl
inc
add
icebp
jmp
fs
jmp
popa
adc
mov
es
xor
adc
loop
and
stos
loop
lahf
pop
push
xchg
ljmp
pop
mov
inc
mov
fwait
mov
cmp
push
mov
push
leave
fldl
iret
dec
lods
add
sti
jnp
inc
pop
ficompl
mov
add
xchg
jp
cmpsl
aas
push
sti
stos
cld
js
int3
adc
xchg
inc
xchg
pushf
and
sti
adc
movsl
cs
loope
xor
lods
sbb
and
add
insl
hlt
add
dec
movsb
and
adc
test
and
and
icebp
add
mov
repz
je
jle
inc
xchg
ljmp
mov
push
inc
popa
fldenv
sbb
xchg
lods
sbb
dec
jb
or
cmpsb
adc
cmp
dec
jmp
fcomi
pop
mov
mov
jp
pop
mov
add
cld
push
add
dec
push
je
inc
push
add
push
jnp
add
test
js
call
mov
pop
cltd
push
call
mov
push
call
push
call
movsb
push
call
pop
int
mov
lds
jns
add
lea
jne
clc
shrd
sub
aaa
btc
btc
mov
push
shl
shr
sbb
add
stc
or
sub
rol
mov
jmp
inc
mov
ljmp
into
cmp
stc
mov
mov
lret
mov
add
lds
adc
or
adc
scas
lods
adc
inc
mov
lock
orl
adc
in
fwait
cld
rcll
xchg
mov
ret
jle
lcall
inc
jbe
dec
jns
loope
mov
xor
pop
pusha
adc
cwtl
cld
insb
leave
jg
dec
dec
pusha
mov
icebp
cmp
add
jecxz
or
in
xchg
or
mov
inc
mov
mov
in
ret
stos
ljmp
fwait
xchg
sti
int
cld
pop
psrlq
or
stos
add
into
pop
les
cmp
sbbl
jae
jmp
mov
mov
cmc
xchg
aad
aas
ja
clc
orb
mov
pop
inc
mov
inc
sub
testb
push
sbb
push
inc
aad
xchg
and
loope
lods
push
add
dec
pusha
jnp
pushf
add
int
lods
xchg
inc
daa
mov
jp
pop
shll
sub
pusha
iret
test
mov
xchg
scas
xchg
jecxz
xchg
out
insb
jmp
xor
and
daa
xlat
in
imul
jmp
rcr
daa
xlat
mov
mov
push
div
add
in
leave
fisttps
mov
pop
xchg
enter
mov
mov
loope
xchg
jmp
jp
inc
sbb
lret
ss
add
shr
push
call
pop
jno
add
je
outsl
fs
gs
imul
add
and
call
lock
cmp
xchg
push
call
jp
jne
rcrb
test
daa
lock
in
push
add
and
seta
and
mov
cmp
pusha
cmp
add
stc
mov
test
mov
bt
cmp
cmp
pushl
lea
jbe
sar
mov
btr
bts
add
sar
shrd
stc
bsf
mov
setg
add
cmp
movl
bsf
and
mov
stc
test
jmp
jmp
push
call
jae
inc
orl
in
inc
mov
mov
add
or
push
mov
popf
mov
dec
jg
repnz
je
fwait
imul
mov
jb
cmp
push
in
les
jbe
lds
push
push
jae
test
pop
mov
pop
or
pop
or
pop
cs
xchg
inc
pop
in
icebp
push
fbld
divl
xchg
sti
or
sub
call
popa
add
mov
testl
and
xchg
inc
mov
pushf
cmp
cmp
and
enter
jnp
xchg
push
lods
adc
lds
dec
rcrb
xor
insl
sub
mov
out
mov
cmp
mov
subl
mov
pop
imull
or
push
arpl
sub
lock
icebp
mov
out
aaa
fwait
add
aam
aaa
call
or
or
jns
in
jl
dec
int3
dec
mov
pushf
clc
test
push
loopne
add
iret
in
jp
dec
int3
add
prefetch
and
and
ljmp
ret
push
adc
and
rorb
movsb
xor
cmp
dec
add
xchg
sbb
jbe
sbb
pusha
mov
out
out
shll
lods
jno
mov
inc
xchg
cmp
mov
sbb
mov
push
lcall
jle
push
push
cmpl
cmp
jbe,pt
mov
movsb
mov
pusha
mov
out
movsb
stc
lretw
cmp
pusha
mov
mov
pop
ficoms
ja
push
sub
stc
out
fmull
dec
mov
adc
cmp
scas
jns
push
lret
push
fists
es
outsl
jmp
jp
insl
cmp
ds
cmpsl
xor
inc
mov
sub
adc
lds
shll
dec
lods
xor
rcll
cmpl
and
jbe
xchg
mov
inc
add
btr
mov
movsbw
cmp
cmp
add
add
setne
movl
sar
adc
push
mov
pusha
pushf
bt
test
mov
lea
je
clc
pusha
pusha
sub
movw
cmp
mov
lea
xor
shr
xor
sub
mov
cmc
stc
cmp
jmp
push
call
pusha
ret
and
rorb
push
shlb
sahf
vmread
pop
jecxz
fnstenv
test
rcll
mov
stc
mov
leave
mov
pop
sub
jb
outsl
lock
adc
fldcw
sahf
rclb
je
xor
jae
xor
push
insl
jb
push
dec
ret
sub
dec
mov
cmc
pop
cmp
outsb
jmp
mov
add
pusha
cwtl
adc
out
mov
imul
popa
lret
adcl
push
ret
aas
cmpsl
pop
imul
fldt
mov
cmpl
mov
add
imul
xor
pusha
pushf
lea
je
jbe
pusha
adc
pushf
push
mov
lea
jmp
jae
inc
mov
jmp
push
call
adc
movsb
bswap
mov
pushf
movb
push
movw
lea
jmp
mov
xchg
and
clc
loop
jno
cmp
dec
mov
or
lcall
movl
inc
mov
sarl
and
pop
iret
aas
iret
scas
add
add
push
leave
adc
and
into
loop
fwait
dec
popa
ffree
push
mov
popa
adc
push
mov
cs
into
cmp
sti
rcll
lds
dec
int
cltd
and
cmp
popa
adcl
mov
xor
pop
mov
add
dec
xchg
pusha
ud0
jbe
sub
push
loopne
out
mov
jge
insl
mov
cmp
push
stos
ljmp
fistl
mov
jmp
add
inc
push
jecxz
fwait
das
mov
push
mov
sbb
popf
dec
outsl
rcll
xchg
mov
jb
daa
xchg
pop
push
lcall
pop
loope
fsts
inc
stc
cli
and
stc
push
loope
xchg
or
insl
aad
push
cmpl
lock
insl
lock
or
xchg
or
decb
sarb
bnd
ljmp
fcomi
mov
cmp
shrl
sub
in
arpl
aam
cmc
inc
mov
add
and
lds
lcall
fdivrl
dec
inc
xor
cmp
sbb
loopne
int3
add
dec
iret
xor
jns
mov
scas
cs
fidivl
mov
pop
jno
fs
ja
xadd
add
test
add
shl
not
shr
movsbw
mov
movzbw
call
add
xadd
shr
inc
mov
and
movsbl
jmp
xchg
jg
pop
mov
insb
inc
and
mov
dec
int
cmpsl
sub
dec
mov
cmp
jp
inc
int3
mov
lods
les
rcrb
outsb
out
ss
outsb
mov
jmp
lret
aaa
lahf
std
pop
add
leave
inc
jle
sti
jae
dec
inc
xorl
push
mov
dec
jle
jle
dec
lret
mov
xor
push
pusha
movl
lea
call
call
push
call
ljmp
or
je
add
push
call
ljmp
out
arpl
mov
loop
mov
xchg
cltd
add
push
fcomps
sbb
jecxz
shll
pop
push
loop
out
cmpsb
mov
push
scas
xor
jl
fsts
rdtsc
mov
ficompl
mov
repz
sbb
stos
pop
or
clc
fmuls
mov
push
cmp
sbb
push
stc
pop
push
inc
pop
push
add
mov
call
out
inc
cmpsl
add
call
cmpl
inc
and
mov
pushf
pushf
pushl
ret
push
call
sub
pop
out
mov
in
inc
es
dec
in
jo
lods
cmc
mov
mov
pop
mov
push
mov
sub
shlb
test
out
add
lret
xchg
pop
xor
lea
lock
sbb
mov
lods
or
push
pop
imul
dec
and
dec
push
lret
cmp
mov
test
xchg
jl
subl
loope
popf
cs
int3
mov
stos
sub
jbe
mov
mov
jb
mov
sbb
jno
je
xchg
movsl
adc
mov
out
mov
das
dec
int3
and
sbb
insb
lret
das
jno
outsl
mov
sahf
aaa
in
sbbl
add
movsl
sbb
hlt
xchg
mov
sub
mov
in
movsb
add
xor
sbb
flds
sub
jo
and
and
outsl
int3
fisubl
jb
test
andb
sub
js
loopne
xchg
sub
lock
mov
loopne
mov
mov
in
xchg
test
pushf
out
lods
adc
add
xor
loop
sub
mov
out
in
pop
and
movsb
fmull
cmp
pop
bound
shlb
hlt
mov
scas
xor
mov
xor
mov
ds
xorb
int3
mov
cmp
sub
cmpsb
mov
int3
mov
xor
mov
lods
inc
mov
mov
outsl
subb
mov
jge
fwait
lret
inc
cltd
popa
dec
xor
aas
or
pop
pop
popa
sub
push
mov
in
adc
rorb
pop
lods
sbb
and
les
sub
aaa
nop
cli
into
mov
movsl
bound
stos
mov
pop
lods
lret
iret
or
adc
movsb
lods
or
movsb
cmp
iret
push
movsb
aad
mov
cmc
or
mov
outsb
aam
push
std
movsb
jg
and
pushf
adc
cwtl
add
or
xor
xchg
mov
push
imul
scas
adc
adc
pop
sbb
sbb
sarb
mov
fs
or
push
cmpb
cmc
and
dec
lods
mov
movsb
push
pusha
mov
dec
xchg
in
mov
xor
pop
lods
test
pop
sti
dec
lods
mov
or
insb
stos
inc
js
je
clc
outsl
nop
push
mov
xor
orb
lods
adc
insb
movsb
in
out
sbb
movsb
repnz
and
fdivr
and
movsb
xor
add
and
and
push
fidivrl
nop
andb
push
push
in
inc
inc
cli
push
jecxz
dec
adc
xchg
std
cwtl
mov
or
mov
in
test
nop
sub
or
enter
or
push
mov
enter
outsb
pushf
xor
nop
pop
sub
movsb
pop
les
imul
push
add
xor
movsb
jp
stos
shrb
je
lods
xor
int3
pop
mov
add
xchg
sub
sub
outsb
inc
add
loopne
mov
subl
sbb
jb
cwtl
je
cltd
push
xor
stos
loopne
xchg
inc
mov
test
jo
aam
add
je
inc
jmp
and
stos
lods
push
xor
in
rclb
dec
mov
pop
dec
test
in
push
je
icebp
divb
fwait
clc
mov
jl
test
rcrl
xor
iret
cmpsl
sub
mov
xchg
jo
daa
ds
idivb
adc
shlb
loop
stos
outsb
mov
test
sbb
fcoml
mov
adc
mov
movsb
xor
xor
xchg
lods
stos
orb
sbb
xor
out
sbb
mov
adc
jl
xor
jecxz
mov
mov
fcmovnb
addr16
push
sbb
lock
cld
mov
daa
mov
mov
mov
lret
in
mov
jae
andb
shrl
dec
mov
adc
sub
cmc
mov
add
mov
jg
test
pop
iret
lret
add
mov
mov
int3
mov
mov
mov
pusha
adc
sbb
and
pop
mov
jmp
and
in
mov
and
mov
mov
lahf
adc
mov
sub
outsl
lods
xchg
pop
movsb
lret
icebp
or
int3
loope
lods
testb
lods
paddsb
sbb
testl
pop
lock
sbb
iret
pusha
filds
jae
in
loope
dec
ret
xchg
int3
mov
test
vhaddpd
ljmp
cmpsb
cli
aam
xor
js
out
lea
hlt
jle
sbb
hlt
mov
adc
fisttps
mov
mov
or
in
fidivl
mov
movsb
loop
fsubl
psraw
adc
and
insb
arpl
jnp
xor
fidivrs
aam
addr16
sahf
fs
sbb
jo
insl
sub
inc
pushf
dec
lock
or
push
popa
add
test
lods
sarl
sbb
jae
pushf
sarb
test
lret
adc
es
xchg
mov
push
mov
fnsave
cmp
sub
push
hlt
subb
shll
push
mov
mov
outsb
mov
loop
xchg
push
mov
sub
movsl
and
popa
in
lock
shl
scas
xor
push
mov
jle
bound
adc
and
loope
mov
or
mov
mov
sub
sbb
sub
xlat
jnp
test
nop
sbb
imul
jae
cmpsb
mov
gs
push
pusha
sbb
loop
stos
iret
xor
les
mov
fdivl
mov
push
sub
jno
xor
gs
jmp
dec
in
test
pop
pop
mov
xchg
lock
xor
mov
stos
mov
aaa
mov
movsl
rcrl
xchg
adc
fwait
mov
cli
les
lods
jg
js
mov
push
lea
cmpsl
test
push
in
xchg
les
mov
fnstenv
call
roll
sbb
xchg
mov
jo
fdivs
and
popa
js
in
ds
lret
fcompl
fcoms
jle
cmp
sbb
mov
lea
in
add
cmp
repz
fnstsw
sbb
or
int3
xlat
dec
nop
mov
dec
sub
ret
adc
dec
and
and
dec
cmp
adc
and
imul
push
ja
jns
cmp
jp
dec
cs
sub
bound
int3
lods
hlt
jge
and
xor
mov
clc
icebp
jb
insb
aam
rolb
je
mov
fidivs
mov
pop
dec
pop
mov
push
bound
out
xchg
test
daa
dec
push
cwtl
fsubrl
je
nop
adc
add
sarb
add
out
aas
imul
test
in
stc
jns
ret
leave
xor
cwtl
pop
cmpsb
fwait
mov
test
push
arpl
orl
push
ja
jecxz
mov
loop
into
sbb
xchg
in
aas
fs
pop
scas
jge
loop
nop
jb
outsb
jle
lret
xchg
std
lods
pusha
mov
ja
pusha
sub
dec
sbb
pop
jo
and
test
movsl
dec
xor
push
imul
nop
addr16
mov
or
mov
in
push
fisttps
xchg
sub
push
xor
push
mov
push
mov
xor
cmp
lret
outsb
xor
or
cmp
test
xlat
insb
fs
outsl
cld
popf
jmp
push
push
sub
das
cli
outsl
push
sbb
cmpsl
popf
fisubrs
mov
rcll
scas
inc
pushf
movsl
sub
aas
enter
mov
pop
cmpsl
loop
sbb
lret
or
jge
lea
adc
das
jb
pop
adc
push
js
inc
das
push
loop
cmp
dec
jo
nop
outsb
jbe
xor
mov
movsl
and
mov
aam
mov
mov
jmp
mov
jb
mov
sbbl
filds
push
adc
lods
sub
icebp
je
mov
mov
mov
outsb
out
adc
test
lret
xchg
cmp
popa
and
sarl
lret
cmpsb
cli
jne
mov
imul
movsb
outsb
test
sbb
mov
sub
push
jae
cmp
dec
pop
divb
sbb
stos
insb
int3
adc
and
dec
andb
jl
pop
mov
dec
mov
out
aas
je
fistpll
rcr
mov
xor
or
lock
add
pop
ds
jae
mov
pop
adc
mov
loop
push
xor
xor
mov
sbb
xor
lock
mov
popf
mov
xor
xchg
stos
push
lcall
sbb
stos
stc
fisubs
cmpsl
shrl
ljmp
ret
jle
sub
repz
lods
push
imul
mov
es
popa
lret
mov
insl
jb
mov
mov
sar
int
mov
mov
dec
lea
shrb
addl
adc
pop
rol
xor
mov
lret
dec
fisubrl
fwait
dec
xchg
push
or
push
sarl
sbb
jl
pop
rcl
xchg
cmp
mov
imul
jae
mov
mov
add
pop
imul
mov
fcoml
or
xor
jge
and
imul
jl
sub
cmp
je
lea
mov
bound
cli
fs
push
mov
xor
aas
lods
lret
mov
dec
cmp
ja
pop
insb
pop
loop
dec
and
sub
hlt
shlb
and
iret
dec
jle
test
adc
popf
add
cmp
lahf
packssdw
mov
and
mov
cmp
lea
mov
pop
fsubrs
add
pop
adc
repz
sbb
xor
nop
or
jnp
adc
mov
aad
loop
int
mov
lret
jne
push
mov
sar
mov
jmp
dec
fldcw
in
xchg
mov
or
fsubl
sbb
stos
cmp
push
or
cmpsl
xchg
je
jecxz
cs
or
pushf
cmp
push
into
sub
jnp
mov
shlb
ljmp
jl
stc
sbb
in
ret
push
int3
or
mov
hlt
lret
fidivrl
test
mov
push
adc
mov
nop
negb
mov
or
add
call
out
testb
aaa
and
repnz
test
cmpb
pop
cwtl
nop
int3
jle
mov
sub
int3
lods
jae
mov
mov
sahf
into
js
jmp
movsb
imul
lahf
mov
mov
lcall
jecxz
jecxz
fsubrl
mov
jnp
sub
outsl
push
lds
popf
nop
sub
push
push
mov
push
or
mov
sbb
inc
scas
daa
sub
stc
imul
arpl
add
push
jg
xor
or
mov
xor
mov
xchg
loope
push
imul
xchg
sbb
scas
xor
inc
push
mov
mov
mov
dec
jnp
fcmovb
push
xor
lds
sbb
movsl
orl
lods
clc
repz
ljmp
iret
arpl
bnd
lods
rcll
lret
cmp
lea
xor
adc
xor
mov
insb
add
and
lock
xor
stos
nop
mov
cmc
push
mov
jmp
add
xchg
sbb
out
and
push
mov
xor
and
lret
popaw
and
sbb
sub
dec
push
pop
or
jl
loopne
imul
fiadds
sub
movsb
push
push
mov
out
imul
ret
mov
test
mov
adc
mov
scas
xchg
and
pop
stos
push
aam
loop
lods
push
sti
sbbl
lret
ljmp
fcmovbe
sbb
repz
mov
insl
mov
fisubrl
lret
ds
int3
and
pop
lret
int3
daa
sub
jmp
loope
mov
mov
rorl
in
stos
into
sub
lret
sbb
pop
out
xor
or
in
outsb
mov
fstpl
sbbl
shll
and
ror
sub
xor
mov
in
push
sbb
add
jne
rcll
pop
enter
pusha
sbbb
mov
test
iret
mov
xchg
push
out
out
mov
xor
dec
mov
xor
sbb
jecxz
daa
or
pusha
and
out
bound
xchg
je
js
mov
sbb
add
mov
xchg
xor
fldl
icebp
sub
shrl
mov
dec
fstps
repnz
repz
pop
mov
ljmp
inc
hlt
and
xchg
push
lock
mov
das
push
cwtl
and
pop
fdivs
ljmp
clc
int3
dec
jge
xlat
sub
mov
ret
jp
ljmp
mov
pushf
andb
lret
imul
stc
daa
mov
leave
clc
int
popa
push
fwait
xor
mov
pop
lods
sub
lret
sbb
xor
pop
pushf
mov
sar
push
xor
mov
xchg
fbstp
in
sbb
mov
int3
mov
lret
xchg
adc
mov
ds
mov
pop
pop
mov
add
jo
into
addr16
fdivrl
mov
int3
test
sub
mov
mov
xor
and
adc
loop
hlt
repz
pop
daa
sub
mov
and
enter
mov
in
shlb
int3
lret
jne
mov
xchg
lods
scas
jl
into
neg
mov
fcoml
aad
lcall
push
xor
andb
ljmp
push
es
pop
lods
ficoms
mov
in
mov
lock
lret
mov
mov
adc
bound
movsl
mov
sub
jmp
test
sbb
mov
nop
in
imul
popa
jl
das
test
popa
ja
and
xor
mov
pop
imul
xchg
dec
clc
in
movsb
mov
mov
jmp
adc
pushl
sbb
popa
mov
xchg
stc
xchg
das
sub
jno
add
xchg
out
jne
adc
lret
pop
cmp
mov
and
divb
mov
mov
mov
mov
enter
lea
pop
add
scas
inc
mov
int
inc
mov
push
mov
sbb
mov
pusha
leave
mov
xor
push
movsl
iret
sbb
test
cmpsl
lret
fsubs
out
lock
test
mov
repz
cmpsl
cmp
mov
stos
cmp
gs
or
mov
cmpsl
mov
jecxz
push
mov
ror
in
loopne
std
pusha
pop
popf
sbb
sub
lret
xor
scas
adc
es
sub
cli
and
mov
mov
add
or
nop
xor
lea
and
int3
aad
pop
test
rcll
loopne
push
xlat
into
repnz
adc
imul
loope
mov
mov
ljmp
xor
xacquire
dec
pop
std
xchg
push
xor
in
mov
negb
add
push
sub
jb
mov
in
dec
sahf
mov
cs
mov
lret
daa
push
mov
fisttpll
fdivl
xor
lods
test
imul
pushf
jl
repz
adc
shlb
icebp
mov
inc
hlt
pop
mov
insb
lret
sub
push
int
xchg
nop
pop
and
imul
mov
pop
mov
aam
adc
scas
mul
lods
mov
loop
inc
cmpsb
sarl
mov
movsb
ret
cli
mov
or
mov
scas
mov
sbb
push
fisubl
mov
hlt
out
movsl
adc
pushf
popf
lret
push
pop
xor
lods
mov
repz
int
lock
dec
mov
clc
mov
cmpsb
sub
outsb
dec
loope
and
int3
mov
jl
push
pusha
mov
aam
call
xor
nop
movsl
arpl
bound
push
adc
fnstcw
mov
jmp
icebp
jmp
xor
bnd
int3
sarb
sbb
pop
nop
sub
jmp
mov
dec
push
adc
jb
lock
lods
mov
repz
xchg
das
shl
fs
mov
imul
xchg
jl
sub
push
push
pop
dec
stc
shrb
movsl
sub
inc
and
test
pushf
int3
or
push
xor
cmp
idivb
scas
int3
xchg
lds
push
push
gs
dec
xor
ja
mov
loop
in
xchg
lret
xor
sahf
mov
xchg
lods
xchg
add
pop
pop
out
push
add
pop
jbe
lea
pop
lret
jo
dec
popf
das
cltd
ret
add
pop
adc
pop
sti
mov
mov
addr16
aam
imul
dec
lahf
ret
pop
add
je
dec
xchg
mov
daa
divb
test
hlt
int3
ja
loopne
dec
dec
lods
ret
push
mov
pop
mov
repz
lods
fmull
mov
hlt
out
mov
xchg
outsl
ds
int
mov
cmpsl
sub
mov
mov
dec
arpl
sbb
cmpsb
mov
jl
lret
mov
jno
add
je
sahf
test
repz
sbb
dec
dec
pushf
lahf
insb
lret
mov
cwtl
fildl
insb
jmp
or
xchg
movsb
lret
cmp
sub
cmpl
lret
ds
popf
insb
and
sbb
idivb
mov
leave
add
adc
das
sahf
jecxz
or
mov
int
cmp
dec
mov
xchg
xchg
test
cmpsb
mov
cmpsb
xor
cmp
push
xchg
lock
dec
and
mov
pop
mov
ret
test
mov
pop
dec
scas
xchg
or
and
xlat
test
or
in
mov
jecxz
shll
sarl
cmpsb
jae
aad
push
dec
inc
mov
fnsave
loop
hlt
js
jecxz
repnz
jae
mov
cmp
fbstp
insb
fcompl
or
mov
fs
int3
sub
lea
sbb
pop
cmp
loop
sbb
stos
and
lods
xchg
or
and
xor
jbe
xor
sbb
xor
xor
mov
int3
adc
xchg
jecxz
xchg
lret
ret
dec
push
mov
jmp
push
jb
lret
jae
or
dec
call
imul
int3
push
int
pop
loop
sbb
inc
cmp
cmpl
lods
cmc
jge
jle
push
mov
mov
add
fstl
daa
add
jmp
dec
andl
test
in
insl
push
fs
je
pop
mov
stos
fs
jnp
lret
push
shll
push
leave
and
hlt
sub
scas
mov
mov
in
jp
xlat
imul
adc
mov
push
dec
daa
cmpsl
jg
pushl
iret
push
xchg
call
lea
and
dec
mov
mov
push
lods
push
push
mov
dec
mov
outsb
mov
mov
xor
sbb
jle
test
lret
push
int3
out
or
jecxz
add
push
shll
pop
sbb
mov
mov
xor
sub
stos
out
lods
sub
dec
test
jg
mov
scas
shlb
in
mov
mov
test
and
fdivs
mov
pop
mov
pop
popa
movsl
out
or
call
stos
jg
xchg
div
jb
push
xor
jnp
mov
ret
sbb
and
sub
mov
cmc
das
adc
add
js
pop
cmp
sbb
or
nop
stos
imul
jns
mov
dec
in
mov
jg
mov
les
aas
lea
loop
jns
adc
cli
int3
imul
inc
jns
mov
movsb
and
and
addr16
push
xor
stos
pop
xchg
mov
mov
je
mov
lds
push
movsb
int
dec
lods
or
add
xor
in
clc
push
shll
mov
dec
and
sub
push
sub
je
dec
and
push
xchg
sbb
mov
push
cmp
inc
xchg
adc
scas
outsb
jle
pop
mov
push
mov
add
mov
pusha
in
push
je
lods
faddp
and
push
lea
addl
sub
out
jecxz
and
jge
dec
mov
mov
mov
cmp
push
mov
sbb
xchg
jmp
lods
xchg
outsb
jb
stos
push
pop
xor
add
mov
ds
je
xor
mov
or
lods
hlt
mov
inc
jo
push
mov
rcl
aam
mov
aas
mov
push
push
inc
xchg
push
hlt
inc
or
dec
xchg
icebp
hlt
mov
xorl
push
insb
xor
mov
out
popf
xchg
mov
pop
pmulhw
insb
sarl
loop
sbb
push
int3
divl
dec
bound
mov
push
fs
mov
cmp
fisttps
sbb
inc
push
push
imul
testl
pop
sbb
add
stos
mov
addr16
fs
imul
fwait
adc
icebp
mov
mov
je
mov
fwait
push
icebp
mov
jle
sub
pop
inc
and
pop
hlt
mov
shlb
push
jbe
sbb
xchg
lret
mov
lods
mov
mov
and
aam
mov
xor
jecxz
dec
movsb
xchg
mov
es
push
jo
mov
push
xchg
mov
enterw
lods
mov
imul
or
das
xlat
adc
jecxz
daa
ret
mov
pop
movsb
cmp
negl
lods
pop
aad
xor
in
push
shrd
mov
sub
adc
adcb
mov
inc
mov
xor
sbb
mov
iret
je
push
mov
add
pop
ret
es
jo
push
mov
mov
ss
xor
mov
push
dec
jo
movsb
push
dec
or
pop
subb
push
adc
and
leave
aas
ds
repz
ss
mov
std
ficompl
pop
iret
xchg
pop
jp
mov
pop
in
pushf
out
imul
test
sub
inc
roll
xchg
aaa
xchg
or
mov
in
mov
popl
push
pushf
rcrb
mov
inc
sbb
xchg
fcompp
pop
jb
movsb
test
je
mov
and
sbb
push
mov
je
ror
loope
popa
scas
push
cwtl
xor
jbe
cmpsb
dec
adc
sub
adc
je
xchg
push
push
or
cld
mov
sub
add
mov
and
mov
pushf
mov
sub
mov
jp
add
cwtl
pop
xchg
mov
inc
and
mov
hlt
je
addl
int3
dec
mov
test
xor
adc
movsl
pop
icebp
xchg
stc
jno
jae
jg
push
xor
movsl
test
ret
mov
jmp
or
ficoml
adc
sub
mov
dec
aad
sub
arpl
mov
sub
movsb
fs
testb
xchg
cmpsb
push
js
daa
xor
push
xor
int3
shlb
je
sub
or
bound
cmp
xor
xchg
aam
movsb
pop
fs
xor
mov
jnp
ds
push
xor
scas
notl
gs
xchg
adc
xchg
adc
movsb
iret
loope
les
rcll
sub
cwtl
push
ret
popf
sbb
adc
lret
xor
ss
mov
xor
popf
mov
icebp
lret
add
xor
mov
and
adc
pop
xchg
mov
lcall
push
hlt
daa
das
mov
fs
lret
lcall
mulb
fisttpl
lea
daa
sub
andb
mov
fdivrs
int3
inc
or
fmulp
rolb
into
sbb
xchg
in
loopne
and
mov
pusha
shll
mov
push
cmp
cmc
cmp
add
fs
call
clc
mov
xor
pop
daa
mov
cmpsl
cmc
ss
cld
and
aad
jns
daa
lcall
xor
cltd
mov
adc
addr16
push
mov
and
sbbb
cmpsb
lret
ret
mov
cli
adc
lds
sub
nop
xchg
xor
or
push
pusha
gs
sub
mov
lea
inc
out
scas
dec
adc
xchg
testb
testl
lock
or
call
jecxz
fidivrl
bound
adcb
push
shll
js
adc
or
cmpsl
shrb
push
bnd
pop
pop
sbb
add
repnz
lea
pop
inc
sub
in
je
cld
mov
arpl
adc
daa
mov
pop
int3
add
xor
add
or
dec
push
inc
out
lods
scas
loopne
sbb
lret
cld
fldcw
mov
mov
sub
nop
data16
xchg
sbb
sub
jae
sbb
lret
add
cmp
icebp
add
fs
js
push
mov
mov
jle
xorl
mov
add
cltd
ret
inc
rol
data16
inc
mov
repz
dec
addr16
xchg
lret
mov
mov
jecxz
lea
sti
ret
and
add
lea
stos
mov
test
fldl
test
fwait
andl
in
mov
push
xchg
mov
in
mov
adc
inc
mov
lock
xor
mov
pop
pop
jl
pusha
mov
xchg
lea
mov
js
ret
dec
test
mov
xchg
sbb
and
das
andb
stos
mov
je
lock
and
loope
rcrb
push
sbb
fists
imul
push
ja
mov
andb
hlt
and
push
xchg
xchg
dec
dec
sub
lods
repnz
sbb
lcall
hlt
xor
mov
push
push
or
sbb
iret
add
cmp
lods
repz
push
sahf
stos
mov
ja
and
lock
test
scas
popf
mov
xchg
out
cltd
cmpsl
and
sub
pop
sbb
sbb
sbb
cmp
sbb
nop
pushf
cmpsb
dec
or
add
lret
sbb
pushf
push
adc
sbb
xchg
sub
jbe
cli
movsl
xor
nop
xchg
idivb
hlt
cld
pushf
mov
outsb
out
xchg
jmp
popf
scas
pop
or
pop
sbb
xor
push
cmpsl
mov
jp
jp
dec
fstpt
inc
outsb
dec
test
cmp
mov
insb
enter
insb
aad
push
pop
fcmovne
jge
lods
cmpsl
test
into
mov
dec
in
add
fbld
lret
shrb
outsl
mov
dec
adc
leave
mov
mov
daa
xor
pusha
xchg
lret
or
pop
jae
xor
adc
loopne
movsb
jmp
and
mov
and
inc
mov
mov
pop
scas
dec
pop
sub
arpl
mov
add
std
popf
lret
and
cmp
outsl
dec
cld
sbb
in
mov
adc
add
fld
repnz
mov
mov
je
cmc
xor
push
mov
and
test
leave
dec
lock
into
add
lcall
sbb
pusha
mov
lcall
stos
add
and
stos
cmc
js
cmp
jg
jb
and
xor
dec
stos
push
dec
pop
adc
pop
popf
and
add
add
je
jg
mov
and
xor
icebp
popf
pop
shr
cmpsb
stos
xor
lret
int3
xor
insl
inc
leave
sahf
jecxz
in
es
sub
mov
dec
jae
hlt
mov
lret
test
pop
inc
rcr
data16
adc
xor
addb
or
lret
and
push
push
decb
or
xchg
insb
insb
push
push
into
cmp
push
lcall
or
fs
add
and
icebp
xchg
out
mov
int3
push
pop
mov
outsb
add
xchg
pop
call
bound
fs
mov
in
sti
dec
mov
inc
mov
inc
imul
test
xlat
divb
bound
testb
sbb
sub
jl
or
scas
dec
mov
ja
leave
cli
push
inc
jno
gs
lahf
push
ficoms
icebp
mov
push
jecxz
xor
add
stos
cld
mov
insl
fwait
iret
leave
je
add
xchg
add
mov
dec
mov
ja
cmp
pusha
dec
cs
mov
ror
adcl
sbb
push
loope
imul
lret
les
and
jbe
push
rcrb
mov
cli
adc
mov
int3
rorl
jnp
mov
enter
insb
negb
addb
sti
scas
scas
test
sbbb
adc
sub
fadds
xchg
push
in
mov
mov
cmpsb
stos
mov
or
and
push
jno
sahf
inc
in
push
call
fsubs
stos
inc
stos
push
push
shl
jb
jge
sub
mov
mov
sub
hlt
jge
stos
lret
cmp
jbe
testl
shl
addr16
lock
pop
mov
mov
addr16
sbb
insb
or
sbb
test
mov
cmp
mov
mov
stos
addb
js
in
xor
xchg
cmp
lret
pop
push
mov
and
int3
dec
cmpsl
lret
add
les
dec
inc
inc
repnz
cli
sub
pop
dec
and
cmp
mov
stc
jle
inc
sub
mov
pop
clc
push
pop
add
dec
stos
ret
ficomps
mov
arpl
add
imul
ret
aad
pushl
movsb
repz
popa
lret
cmpl
movsb
int3
mov
das
movsb
dec
scas
mov
sub
jb
push
sub
adc
shr
sti
push
jbe
adc
int3
icebp
push
and
xchg
out
in
push
cmp
sub
push
lea
outsl
mov
test
cs
pop
gs
sub
sbb
fisttpll
mov
jnp
pop
pop
xor
sub
cmp
fiaddl
test
ss
mov
sti
inc
in
cmpsb
aam
ret
add
jns
and
jb
int3
jmp
sbb
xor
cwtl
mov
mov
mov
xchg
add
hlt
dec
sbb
lea
jp
adc
ret
call
xchg
push
fsubp
scas
movsl
or
and
xchg
add
test
and
mov
sbbb
mov
add
pop
lret
jge
mov
sbb
inc
pop
das
cld
in
jl
add
and
enter
insb
dec
or
jae
shrb
jmp
pusha
jo
loopne
mov
add
loopne
outsb
insb
lcall
inc
mov
icebp
imul
sub
push
xchg
repnz
out
insb
inc
scas
fmul
add
stos
bound
lods
push
iret
sub
xlat
scas
and
data16
ss
inc
int3
mov
sub
pusha
push
cli
pop
jecxz
mov
int3
out
aam
and
xchg
in
ffreep
xchg
sbb
xor
rcrb
mov
xor
or
int3
adc
loopne
out
jl
cwtl
in
popa
jmp
hlt
or
pop
imul
xchg
push
sub
fstps
mov
shl
jmp
mov
mov
xor
and
pop
dec
xchg
sub
stos
and
jb
scas
repnz
test
xchg
dec
xor
jmp
pusha
push
movsl
call
mov
lret
and
dec
adc
je
cld
or
push
call
push
repnz
bound
adc
bound
xor
adc
stc
adc
movsl
dec
push
push
add
or
nop
pusha
out
mov
jne
xchg
push
cmpsb
and
movsl
int3
outsl
loope
or
aas
and
loopne
shrl
cld
mov
arpl
scas
mov
cmp
lcall
mov
mov
out
js
imul
mov
and
sbb
outsl
outsb
repnz
mov
add
xor
dec
test
xchg
xchg
dec
xor
mov
int3
mov
and
mov
clc
orl
xor
cltd
aam
das
mov
xor
dec
hlt
push
lret
xlat
adc
xor
pushf
mov
repz
lret
bound
sbb
xor
cli
xor
scas
or
add
lret
imul
mov
pushf
xchg
sbb
out
cwtl
inc
test
pop
pushf
cmc
int
mov
pop
or
sbb
push
cmp
imul
sub
mov
js
mov
or
and
jp
mov
mov
pushf
das
fisubrl
es
dec
mov
jne
sub
out
push
inc
jnp
and
inc
sarl
or
into
dec
imul
test
ja
mov
dec
sub
mov
sets
mov
outsb
mov
jmp
sahf
sbb
pop
adc
test
outsb
sar
cmpsb
lret
xchg
fnstsw
stos
out
sub
outsl
mov
dec
xor
icebp
add
mov
dec
pop
xchg
insl
out
inc
jne
push
mull
adc
test
mov
mov
pop
cmp
in
xlat
movsb
mov
scas
sti
sbb
fs
cmpsl
adc
test
mov
mov
cld
mov
cmp
test
int3
rclb
fsubr
cmc
dec
mov
lds
leave
mov
jle
mov
sbb
push
lret
push
push
sbb
mov
and
repnz
xor
fisubrl
mov
inc
imul
ret
inc
cli
outsb
loopne
push
lods
sbb
xor
orb
and
pop
sarb
inc
sub
mov
sbb
xchg
in
orb
fs
add
repz
insb
mov
int3
les
or
call
adc
adc
push
int3
lea
pop
xchg
pop
mov
push
sahf
xchg
jle,pt
lods
daa
sub
push
mov
ljmp
pop
ss
lret
or
xchg
out
inc
pusha
mov
xchg
cmp
and
enter
cltd
testl
inc
sar
jge
lock
inc
inc
punpckhbw
movsb
int3
mov
push
and
mov
insl
shl
mov
pop
push
sbb
cmp
lcall
mov
std
sbb
jecxz
and
lret
add
into
jg
pusha
movsl
and
repnz
mov
jae
out
js
fcomps
push
rorl
inc
je
test
mov
cmp
xor
hlt
nop
lods
inc
inc
iret
cmp
mov
jb
xchg
in
xlat
fisubl
jmp
mov
lock
fildll
xchg
rorb
xor
addr16
inc
gs
movsl
sbb
ljmp
mov
scas
or
mov
sbb
and
mov
daa
add
jae
mov
fisubrl
aam
ret
mov
imul
rcrb
sub
dec
mov
inc
xchg
out
mov
add
out
xchg
and
dec
movsb
inc
fld
jno
hlt
sbb
ret
aas
je
and
fcompl
ficoml
repz
negl
jne
mov
out
or
xor
sbb
call
sbb
lret
rep
lods
mov
aam
xchg
int3
stos
sbb
mov
sbb
stc
mov
sub
mov
add
mov
movl
mov
cwtl
dec
arpl
cmp
add
jle
cli
jl
jecxz
and
dec
add
xor
jne
fcmovnbe
mov
lock
and
xor
ljmp
lea
mov
cmp
add
cmpsl
outsb
ljmp
mov
sarl
movsb
pusha
loopne
data16
dec
pop
jge
pop
addr16
cmp
sbb
outsb
gs
inc
sbb
jmp
icebp
adc
sti
int
pushf
cld
iret
imul
push
dec
aad
imul
test
cmpl
lret
in
fmull
out
and
int3
mov
insb
cli
incl
leave
mov
shl
push
push
mov
rcl
dec
imull
imul
cld
and
or
lahf
das
fwait
call
aas
loop
jne
int3
xor
outsl
repz
sub
insb
lcall
mov
jecxz
test
clc
fdivrs
adc
sub
add
xchg
inc
popf
cmpsl
int3
push
jne
rorl
rcr
cmp
jp
ffree
pusha
shrb
jnp
pusha
cmc
jno
and
test
xor
or
mov
cmpsl
xchg
push
into
sub
or
ret
lcall
test
loope
subb
xor
in
xchg
mov
adc
push
ret
sahf
lock
adc
sbb
cmpb
and
in
lods
ja
int3
sub
or
je
xchg
xorl
pop
jno
push
scas
aas
arpl
fcmovnu
int3
xchg
jmp
imul
pusha
std
mov
xchg
imul
dec
ficomps
std
aas
mov
sbb
pop
and
int3
imul
dec
testb
hlt
mov
fwait
jp
push
popf
pushf
xchg
jo
dec
mov
adc
sahf
push
mov
sbb
pop
xchg
cmp
daa
lret
add
ror
push
fxsave
or
add
pusha
test
xor
dec
fdivr
subb
popa
lcall
mov
xchg
call
jbe
sbb
loope
movsb
bound
scas
outsb
movl
mov
ss
mov
call
mov
rol
lcall
mov
dec
rolb
lock
adc
call
popf
pop
xchg
nop
jne
pop
mov
ja
test
sbb
ror
push
mov
fadds
cli
sub
je
bound
stos
and
push
push
jle
sbb
inc
lods
roll
sbb
sub
cmpsl
mov
in
adc
xor
ja
mov
cmp
and
adc
pushf
pop
repnz
lret
int
mov
es
lods
jle
xlat
movsl
insl
jno
inc
jecxz
mov
je
dec
pushf
pop
or
mov
jecxz
shlb
add
aaa
sub
pop
aam
and
sub
mov
inc
clc
jl
xor
in
or
adc
xchg
mov
test
xor
push
out
sub
dec
mov
ss
sub
lods
fwait
int3
add
sub
pop
pusha
mov
pop
test
push
stc
push
dec
mov
mov
jns
xchg
mov
xor
or
sub
jmp
pop
and
xor
frstor
divb
cmc
xchg
mov
jb
or
jp
test
xchg
xor
ljmp
je
dec
dec
xchg
mov
mov
clc
movsb
pop
pusha
xor
push
notb
xchg
jmp
mov
xlat
lods
jl
jmp
jmp
in
mov
insl
subl
repnz
jb
pop
out
jae
jbe
subb
push
add
imul
cli
push
inc
xchg
mov
ds
mov
jbe
mov
mov
mov
sahf
push
mov
ds
and
jo
lods
scas
nop
dec
stos
sahf
dec
mov
and
sbb
test
push
popa
pusha
test
xchg
ljmp
xor
shrb
movsl
cmpl
test
insl
repz
cmp
mov
push
aas
cmpsl
adc
mov
andl
jge
xchg
cmpsb
loop
in
lock
push
xchg
jmp
or
pop
adc
sbb
jle
cmp
mov
add
adc
test
inc
in
or
mov
push
fcmovne
push
push
lret
bound
lods
dec
mov
imul
bound
imul
imul
lds
jns
sub
test
adc
push
jnp
ja
repnz
or
out
mov
xlat
or
cmp
in
int3
leave
testl
insb
push
mov
mov
sbb
int3
pop
dec
xor
jae
insl
adc
push
pop
ficomps
mov
stos
mov
cld
leave
mov
mov
int3
std
into
fs
pop
inc
icebp
pushf
sub
fwait
inc
xchg
jo
xchg
jb
test
pusha
int3
popf
aas
mov
aam
roll
test
hlt
inc
dec
jmp
test
jl
mov
sub
insb
mov
mov
xor
test
lods
mov
sub
jl
cltd
scas
int3
fldl
int3
lret
mov
repnz
in
push
push
lock
shrb
dec
stos
cmp
xlat
shlb
push
push
lret
jae
xorl
std
sahf
stc
dec
mov
dec
cli
xor
lahf
mov
mov
in
into
push
pop
ss
lret
mov
mov
sub
push
shrb
adc
push
sub
push
xor
push
mov
push
jno
jns
jmp
data16
pop
pop
mov
test
pop
jl
xchg
pop
sub
sub
out
rcrl
dec
mov
out
pop
push
ds
and
gs
gs
ds
shlb
cmpsl
int
cmp
pop
movsb
sbb
or
sbb
stos
xlat
cltd
inc
inc
popa
arpl
xor
inc
or
jne
repz
mov
fdivrs
xchg
or
push
in
out
mov
cli
jne
test
mov
adc
nop
mov
outsb
mov
dec
sbb
les
dec
cwtl
pop
ret
add
jp
push
push
js
add
sahf
lods
sbb
in
fimull
ja
cmpsb
lcall
or
dec
shrl
repz
push
mov
test
std
and
movsb
rcrl
je
jge
je
ret
scas
cmp
push
cmc
leave
pop
fsubrl
repz
in
mov
test
subl
nop
mov
mov
lea
pop
pushf
arpl
imul
mov
pusha
pop
jb
movsb
cmp
pop
and
mov
pushf
ss
xchg
ss
and
jno
fnop
in
lret
lea
adc
scas
sbb
sbb
mov
jmp
cmc
ja
flds
into
test
pop
aad
cs
or
xor
fs
stc
mov
idivb
cld
pop
fistl
mov
sub
xchg
xchg
movsl
pushl
xchg
dec
stos
pop
mov
in
int3
jl
and
insl
scas
cmp
mov
lea
scas
std
cmp
and
and
inc
or
and
pop
hlt
dec
jbe
mov
int3
jp
popa
and
and
pusha
push
leave
pop
and
cwtl
ret
test
push
mov
xchg
and
test
adc
jo
clc
jmp
push
jae
push
movsl
push
repz
add
icebp
ds
xor
pop
fnstsw
jo
int3
out
in
pop
daa
xor
dec
sahf
rclb
mov
ror
mov
sbb
rorb
cvttps2pi
scas
jns
arpl
int3
nop
out
xor
pop
xor
lret
adcl
xlat
out
and
add
jns
loopne
and
dec
mov
nop
repnz
xor
push
int3
xchg
sbb
push
fisttps
shll
int3
ljmp
cmp
sbb
lds
flds
loop
ficoms
xor
push
mov
aaa
dec
add
mov
sbb
cmp
xorb
imul
pop
and
cmp
jecxz
adc
add
or
rcr
push
je
dec
and
pop
and
loop
out
cmpsl
lret
enter
je
dec
pop
lods
movb
lcall
adc
dec
xor
mov
push
in
test
jns
mov
cmp
test
xchg
push
inc
icebp
out
push
repnz
neg
jge
idiv
pop
lret
cmp
ds
mov
or
dec
ljmp
xchg
and
jle
repnz
cmpsl
xchg
bound
test
cmp
mov
xor
hlt
mov
leave
mov
sbb
loope
sbb
sub
inc
xchg
mov
nop
movsb
jae
mov
jmp
and
test
aaa
into
cmp
scas
adc
ret
and
je
insb
mov
mov
shlb
mov
lea
lahf
int3
int
stos
fs
cmpsb
jmp
push
jg
in
movsl
xor
loopne
and
mov
lock
sub
clc
mov
mov
test
xchg
daa
ds
movsl
sbb
cld
mov
loopne
stos
les
dec
sahf
pop
ljmp
sub
aaa
pop
mov
inc
call
out
push
add
jb
cmpsl
xor
mov
testl
and
mov
aas
stos
sub
insb
mov
mov
das
mov
sub
push
or
pop
jmp
int
js
xor
insb
mov
ror
add
pusha
jb
and
stos
adcb
leave
fsubr
lods
movsl
and
sti
xchg
outsb
add
or
int3
sbb
jne
loop
lret
xchg
push
mov
addb
pop
sub
cld
mov
mov
arpl
xor
add
cmpb
xchg
iret
adc
cmp
or
push
dec
popf
sub
ret
cmp
loop
clc
rorb
les
lahf
and
mov
data16
sarb
mov
mov
je
mov
loopne
mov
xchg
sub
xchg
movsb
imul
pop
repnz
lods
roll
jbe
movsl
insb
cmp
shlb
mov
aaa
sbb
cld
ret
jae
cld
lock
or
xchg
mov
sbb
jb
jl
mov
jp
lods
aam
cmc
mov
or
rorb
jl
mov
out
notl
int3
lds
into
stos
dec
fdiv
mov
cltd
cmpsl
lret
inc
out
sub
ljmp
or
pusha
sub
cld
test
pop
je
sub
loop
pop
or
into
sbbb
sbb
xchg
popa
dec
adc
sbb
inc
je
add
push
xor
stos
pop
rcr
stos
insl
fdivl
mov
ret
sbb
push
lods
xor
jl
push
jae
loope
sbb
in
mov
add
jo
xchg
pop
mov
inc
cmp
mov
rcrb
pop
cwtl
fwait
movsl
jmp
fucompp
mov
push
mov
shll
mov
pusha
cli
add
scas
mov
test
ss
loop
dec
push
add
cli
mov
push
mov
mull
jo
cmp
popa
lret
ret
test
xor
push
fcoms
int3
push
mov
add
lods
or
pop
loope
in
out
adc
cmp
hlt
jae
dec
sbb
xor
and
jno
jns
xor
and
arpl
enter
xor
dec
movsl
xor
pop
sub
pop
or
jb
test
or
in
or
stos
adc
mov
je
sub
cmc
sahf
bound
inc
mov
pop
lods
pop
ret
bound
add
popl
out
pop
pop
push
lret
aad
outsb
xchg
sbb
cwtl
scas
out
cmc
mov
lods
ret
cmp
sbb
insb
add
jae
hlt
dec
jb
hlt
sub
dec
xchg
cmc
loope
cmpps
push
negl
push
mulb
fcoml
push
jns
and
sub
pop
pushl
cli
cmp
pop
jae
sbb
sub
test
shll
idivl
xchg
push
ja
shlb
jae
scas
mov
movsb
jmp
lods
scas
test
je
xchg
xchg
push
cmp
fisubrs
and
insl
mov
lea
mov
dec
movsl
jb
mov
faddl
clc
icebp
xor
mov
jns
add
out
adc
mov
stc
test
stos
cmc
dec
les
push
stos
mov
or
pop
sbb
jl
daa
xor
repnz
push
stos
icebp
xor
xlat
lea
pop
push
fsubr
dec
pop
mov
rcrl
jge
mov
mov
and
jecxz
gs
jo
adc
insb
je
lret
fprem
in
shrb
inc
xor
loop
push
stos
dec
pusha
shll
ficoms
rcll
xchg
out
mov
mov
xchg
lret
inc
subl
xchg
lock
movsl
xchg
sbb
push
scas
dec
mov
xor
adc
mov
insl
sub
push
lret
imul
lret
sbb
mov
jns
into
xchg
shrb
hlt
je
cmpsl
lds
jl
mov
jbe
dec
sbb
jne
sbbb
mov
cli
xchg
and
add
jmp
push
test
and
mov
sbb
adc
jbe
pushl
faddl
cli
test
and
push
mov
cs
rorb
mov
adc
mov
pop
cld
test
xor
mov
into
mov
imul
je
lret
loopne
add
stos
fdivrl
xor
xor
cltd
add
lcall
mov
mov
mov
jbe
sahf
push
movsb
adc
fcomps
xor
lret
shlb
dec
adc
mov
sbb
into
cwtl
lahf
lods
add
iret
lea
ss
mov
sub
imul
inc
xlat
or
outsb
and
pop
addr16
pop
insl
fs
dec
js
lret
insb
pop
lea
ljmp
daa
stos
inc
adc
lret
mov
insb
sbb
sbb
sub
lods
ret
int
sub
loop
rcl
negl
mov
bound
pusha
xor
inc
stc
jno
inc
mov
dec
iret
in
mov
rclb
dec
ret
call
outsb
std
in
ret
shr
push
adc
outsl
dec
xor
ljmp
movsb
sub
mov
dec
push
push
ffreep
pop
pop
inc
xor
das
pop
aam
mulb
push
aas
lods
mov
in
xchg
loope
jl
xchg
cmpsl
mov
cmp
out
dec
mov
sbbl
dec
cmpl
lea
xchg
pop
rorb
mov
int3
mov
dec
aaa
mov
adcl
xchg
into
scas
xchg
lds
mov
jnp
in
sbb
push
push
xor
add
jg
movsl
out
pop
ror
pop
mov
lods
mov
mov
xor
jmp
pop
dec
shlb
rorb
push
clts
minps
or
lret
cld
loop
out
xchg
add
adc
imul
mov
and
xor
movsb
jb
popa
out
ffreep
cwtl
sbbb
repnz
jae
mov
lock
xchg
insb
jl
push
lods
push
fs
and
xor
scas
cld
push
sub
ljmp
rorb
pop
pop
xchg
cmpsb
ds
aas
pop
stos
xchg
dec
rcl
push
mov
enter
scas
aaa
lahf
pop
xchg
jecxz
loop
fcomp
or
mov
popf
in
jno
clc
sbb
std
test
dec
das
mov
cmc
test
sbb
pop
inc
mov
dec
je
dec
lret
mov
call
and
sahf
movsl
frstor
push
in
add
cwtl
aaa
xor
xchg
push
lret
ror
cs
aas
mov
xchg
push
mov
imul
and
mov
cld
xchg
inc
adc
cmpsl
test
mov
adc
pusha
inc
lods
lea
fcoms
hlt
and
mov
push
test
adc
scas
stc
fidivrs
inc
xchg
ret
cmc
push
sub
adcl
lock
int3
add
push
movsb
mov
orb
ret
or
sub
les
jne
lret
sahf
add
sbb
pop
jae
das
push
not
test
insb
nop
push
mov
sub
add
bound
es
arpl
fdivl
jl
in
sub
push
mov
test
imul
jnp
xor
push
movsb
int3
xor
lock
sub
jo
out
xchg
je
jmp
pop
in
shlb
repz
imul
jmp
inc
stc
sbb
addr16
inc
xchg
lahf
nop
into
hlt
dec
jmp
stos
popa
adcl
push
mov
popf
mov
jno
xor
xchg
mov
test
xor
dec
mov
test
push
xchg
cmc
push
ficoml
push
jmp
testl
sub
pop
or
pushf
int
mov
push
int3
iret
ret
lea
hlt
and
and
pusha
movsl
mov
pop
leave
loope
mov
lret
and
push
mov
sbb
cli
aam
arpl
add
pop
push
clc
loopne
push
push
push
das
iret
mov
and
imul
dec
jbe
xchg
out
add
int3
pop
stos
shlb
test
fsub
or
xchg
shll
mov
sbb
adc
les
inc
cmc
sbb
push
into
xor
pop
int3
jecxz
dec
stos
out
mov
repz
xchg
lret
sbb
pop
mov
scas
xor
sub
iret
aad
push
scas
or
mov
scas
inc
test
jnp
repnz
or
cli
or
je
dec
mov
pusha
lret
or
cmc
mov
sbb
xor
sbb
jle
jb
xchg
xor
nop
and
xor
cmpsb
loope
bound
fsubr
pop
mov
and
loopne
in
int3
sti
stc
lock
bound
test
lret
cmp
sbb
loope
mov
rorb
mov
ss
rcrl
mov
pop
add
test
test
inc
mov
ret
ds
bound
in
cltd
pop
adc
sbb
dec
sub
outsl
add
ss
and
sahf
fadds
cmp
jl
push
push
pop
loope
iret
cli
xorl
jne
test
lcall
outsb
out
mov
jb
nop
sbb
xchg
sub
fmull
jmp
or
loope
movsl
xor
dec
sbb
xlat
inc
pop
inc
shl
or
subl
add
sbb
sub
aas
mov
sub
into
sbb
sub
xor
cmc
scas
int3
sbb
imul
cmpb
push
cld
decl
in
movsl
or
shll
jb
fnstsw
sbb
adcb
mov
mov
aas
mov
fsubr
arpl
xor
pop
mov
xchg
outsl
js
mov
xchg
addl
xchg
aaa
int3
pop
push
rcll
push
addr16
aad
in
lds
dec
xchg
lret
sub
xchg
sbb
inc
cli
xor
mov
mov
push
imul
test
xchg
cmpsb
int3
stos
mov
adc
mov
sbb
insb
loopne
stos
add
mov
lods
rorb
imul
xor
push
outsb
aad
lods
lret
push
movsb
imul
insb
xchg
loope
jae
cli
push
int3
push
adc
cmpsb
sbb
daa
adc
adc
push
pop
insb
out
lret
loope
icebp
or
push
divl
mov
fstpl
ds
xor
mov
xor
dec
add
adc
daa
int3
xchg
pushf
adc
lret
lea
or
stos
pop
outsl
ret
popa
and
pusha
sbb
pushf
jg
cwtl
enter
cmpsb
push
stc
movsb
mov
dec
rorl
jmp
das
and
sub
pushaw
imul
lcall
dec
and
mov
dec
cld
aas
mov
pop
fldcw
mov
lret
mov
sub
addr16
clc
repnz
stc
jb
mov
aas
lret
and
cmp
or
mov
and
push
sti
leave
dec
mov
dec
push
lods
cld
and
mov
cmp
js
fsts
mov
push
jbe
add
inc
add
lret
dec
push
je
adc
push
jae
mov
push
loopne
imul
sbb
out
jp
xor
add
test
in
in
pop
xchg
pop
lock
inc
xor
shl
xchg
int
je
mov
addr16
ljmp
movsb
stos
cmp
mov
xchg
cs
xor
nop
dec
push
loop
mov
mov
popa
fcom
les
jo
mov
test
pop
sbbl
insb
lret
lds
and
add
xor
lock
push
push
sbb
lods
mov
clc
inc
out
inc
xor
lret
scas
xor
loopne
mov
clc
add
pop
cmpsb
insb
mov
lods
dec
stos
pop
jg
sbb
mov
mov
jae
pop
sbb
loopne
mov
mov
sub
imul
lret
cmp
js
lcall
cmpsl
hlt
in
ds
and
je
dec
mov
ljmp
or
test
fs
adc
lds
xor
iret
insb
mov
pop
sti
mov
sbb
mov
push
jns
dec
test
cld
sub
sbb
scas
jl
int3
cmp
int3
xor
adc
clc
mov
test
xchg
mov
xchg
mov
jge
push
pop
push
in
cmp
dec
adc
push
nop
test
fs
xor
rclb
test
xchg
jge
and
adc
pop
rcr
mov
scas
cwtl
popa
add
pop
push
popa
movsb
je
dec
mov
mov
js
movsb
call
scas
dec
fidivrl
and
rorb
ss
dec
and
xchg
frstor
inc
outsb
add
repz
xchg
sahf
jg,pt
lods
adc
pop
ffreep
dec
ja
lret
pop
hlt
push
notl
cmp
xchg
ss
cltd
and
clc
dec
orb
fs
jb
mov
push
xchg
push
clc
inc
push
gs
lods
jmp
dec
test
test
jns
mov
cltd
mov
bound
je
int3
test
imulb
xor
or
aas
dec
xorb
xor
dec
fidivl
sub
mov
pop
xor
adc
jae
lea
int3
orb
mov
daa
test
repnz
push
and
shl
add
cmpl
pop
dec
sbb
pop
stos
pop
mov
sahf
mov
out
fistpl
lock
and
pop
jb
movsb
int3
pop
push
add
ss
stos
jp
int3
sahf
pop
mov
leave
sub
mov
sti
cmc
xchg
loop
fwait
das
repnz
ja
mov
ds
cmc
pushf
and
pop
sbb
fbstp
lods
mov
lock
aam
in
add
inc
push
adc
fistpll
pusha
inc
fnstenv
ucomiss
mov
aam
push
ret
jo
movsb
sub
mov
add
stc
lea
into
mov
int3
mov
xchg
mov
dec
pop
mov
jae
push
xor
mov
cmp
and
popf
addb
cli
inc
xor
lea
cwtl
sub
cmp
pop
xor
cwtl
scas
aas
jbe
sbb
out
add
sbb
movl
add
sbb
jb
or
sahf
mov
je
sbb
cmp
fnsave
push
popa
ds
sub
ret
jae
push
adc
mov
mov
mov
or
mov
movsl
xor
cmp
rolb
sbb
mov
and
sub
mov
je
int3
ss
jo
jl
notb
loop
stos
push
cli
mov
stc
lret
rorl
aas
dec
jle
jmp
mov
leave
xor
inc
ja
out
sbb
push
sahf
mov
dec
pop
cmpsb
ljmp
cmpb
inc
stos
ret
aad
mov
xchg
push
into
mov
inc
or
imul
daa
into
lret
pop
aad
xor
and
bound
outsb
sahf
das
lcall
adc
pop
scas
or
aaa
ljmp
xor
dec
test
and
or
pop
out
cwtl
push
mov
lahf
movsb
xor
fisubs
and
in
inc
mov
inc
test
add
mov
inc
push
jns
dec
js
add
mov
and
imul
shll
flds
sbb
nop
mov
xchg
jne
imul
jecxz
rorl
test
repz
or
push
push
aam
xchg
sbb
fisubrs
pop
and
aaa
scas
jnp
mov
mov
inc
mov
lds
test
adc
sahf
in
xor
cwtl
lret
les
mov
xchg
idivl
cmp
pop
hlt
imul
in
inc
in
or
ret
mov
and
out
cmp
jo
sbb
xor
dec
test
and
int3
adc
and
xchg
nop
imull
mov
ficoms
add
mov
xor
ss
das
lret
in
jo
mov
pop
jl
int3
push
gs
scas
ljmp
mov
lret
addr16
cli
pop
xorl
sbb
mov
fistpl
adc
in
vprotq
iret
aam
pop
dec
sub
fcomp
leave
jo
popa
pop
lds
pop
sub
bound
jae
stc
ja
sbb
and
inc
push
jnp
mov
or
dec
js
jnp
cmp
jns
sub
loopne
jb
js
int3
sub
or
mov
dec
stos
into
xchg
or
xor
cmpsl
pop
arpl
out
xor
add
xchg
pop
xchg
xchg
jns
and
fimuls
push
out
push
into
push
mov
les
in
sub
aad
aas
out
jae
test
jp
test
and
lods
and
testb
stos
enter
rorb
stos
pop
std
xchg
mov
xor
imul
outsb
pusha
int
pop
outsb
iret
dec
notl
pop
imul
mov
hlt
pop
adc
push
and
and
addr16
lret
mov
mov
int3
sbb
out
fs
mov
lret
mov
andb
test
arpl
dec
jecxz
mov
scas
sbb
call
sti
jae
mov
mov
sbb
cmpsb
test
scas
testb
push
xchg
xlat
jmp
lds
insb
nop
push
stos
test
test
test
and
adc
sub
in
cld
push
dec
aad
mov
aam
in
std
rclb
add
xor
cmp
shlb
idivb
inc
int
imull
mov
nop
push
out
inc
cmc
jae
jl
out
jns
mov
into
push
pushf
int3
mov
sub
dec
enter
pop
adc
mov
scas
xchg
xor
pop
scas
xor
out
pop
sbb
dec
adc
jbe
mov
fsts
mov
ret
sbb
test
and
insb
sub
outsb
in
jae
dec
insb
repz
push
mov
mov
xchg
xchg
jmp
enter
in
jbe
xor
push
pusha
mov
scas
mov
clc
adc
xchg
fidivrs
pop
cwtl
popf
lret
push
sub
insb
sub
mov
call
dec
repnz
xor
int3
xor
sub
ret
fsubs
fs
sahf
loopne
sub
push
xchg
stos
add
aad
xor
jp
aam
inc
inc
xchg
mov
sbb
movsl
sbb
jle
ljmp
mov
aaa
inc
cmp
xchg
in
data16
or
pop
loopne
pop
je
sti
fidivl
std
xor
jae
stos
mov
lret
outsb
dec
inc
ror
xchg
lods
pop
adc
outsl
iret
shll
out
xor
sub
mov
jae
in
leave
enter
jo
data16
push
mov
dec
inc
loopne
imul
scas
iret
inc
jb
mov
push
xchg
push
sub
pop
enter
into
mov
cld
cmc
xchg
jno
lcall
ds
push
sbb
pop
xor
xchg
push
in
push
ljmp
jmpw
pop
xchg
iret
pop
mov
imul
push
clc
pushf
das
ret
lret
mov
imul
sbb
insl
mov
imul
cmp
lock
lock
int3
or
push
mov
pop
sbb
dec
mov
int
xchg
int3
mov
rolb
hlt
dec
loope
mov
cmp
cli
hlt
sbb
test
mov
mov
mov
or
dec
nop
addr16
into
jg
movsb
add
fldenv
aam
jmp
out
and
js
sub
jnp
sub
jg
xchg
rorl
mov
adc
sti
test
jp
shl
stos
and
mov
lea
xchg
call
je
jmp
push
ss
pop
mov
imul
test
fwait
es
sidtl
mov
ret
jecxz
push
mov
js
pop
jae
and
xchg
add
in
lds
pushl
mov
test
adc
lret
cmp
xor
push
jmp
jmp
mov
es
stos
mov
bound
in
sahf
pop
pop
je
div
dec
cmpsl
mov
and
adc
jae
jb
and
mov
shll
cmp
in
push
mov
and
jbe
fldcw
pop
enter
imul
fs
or
imul
jge
add
lret
lods
loopne
adc
jb
push
jg
push
sub
jbe
cmp
cmp
and
push
cmp
stos
mulb
je
and
push
pop
push
je
mov
icebp
mov
sub
push
add
inc
push
mov
js
xchg
scas
dec
gs
adc
sbb
sbb
push
test
sar
and
stc
cmc
pop
fists
lahf
loope
scas
jnp,pn
mov
xchg
insl
push
outsb
adc
out
mov
mov
dec
fsubl
xlat
lcall
or
xchg
ret
lds
leave
mov
and
cld
movsb
xchg
insb
mov
add
jns
inc
scas
pop
pop
in
cmc
jg
vfrczss
pop
fimull
out
aad
in
enter
lods
and
dec
adc
push
jnp
xchg
inc
pop
xchg
adc
cmc
lcall
mov
and
xor
adc
or
xor
sahf
adc
aaa
adc
nop
incb
ret
add
mov
cmp
jle
xor
fs
lret
push
pop
int3
jno
push
loop
xor
cmp
loope
lods
and
mov
push
lret
xchg
push
cwtl
rcrl
sbb
sbb
push
jns
scas
xchg
cli
push
mov
xor
outsl
mov
aas
or
jl
stos
lret
aam
mov
out
add
and
repnz
adc
repnz
fcomps
dec
xchg
in
sbb
fists
movl
clc
lret
xor
dec
sub
mov
int3
add
mov
fnstsw
out
xchg
divb
mov
mov
lret
sub
imul
and
jbe
int3
sar
stos
call
inc
repnz
shrb
movsb
test
cld
lods
mov
pop
pushf
int3
or
stc
andl
int
xor
mov
sbb
insb
xchg
iret
mov
sahf
popf
mov
fbld
sbb
inc
mov
pop
pop
push
push
les
mov
jl
sbb
sbb
pop
ja
fidivl
cmpsl
pop
push
sub
cld
stc
pop
out
movsb
jp
sbb
and
pop
lret
jb
fs
or
mov
es
std
das
test
dec
adc
cmc
mov
mov
test
cmp
and
mov
jmp
int3
xchg
push
rcll
cwtl
mov
mov
in
cmp
sub
cmp
adc
les
xchg
add
or
dec
push
insb
daa
add
and
aaa
mov
dec
daa
or
leave
jecxz
xor
lds
adc
mov
rorb
jge
aaa
aam
and
lret
mov
repz
enter
int3
push
dec
fs
jne
jmp
mov
lods
int3
repnz
jno
call
rorb
cmp
pushf
int3
ficompl
pop
testl
lds
sub
xchg
enter
in
jne
ss
pusha
test
test
cmpsb
clc
lret
xchg
cmp
int
push
in
sub
lock
or
imul
xlat
mov
sbb
push
out
daa
inc
sub
inc
mov
push
jnp
stc
andl
mov
sbb
push
xor
pop
lret
idiv
scas
lock
fldt
cltd
xor
iret
pop
or
sar
popa
lea
adc
and
xchg
in
cmp
mov
sahf
repz
mov
in
cld
mov
sbbb
jmp
mov
mov
jmp
insb
out
jb
mov
dec
cld
loope
cld
cmpsl
rolb
pop
sub
lods
testb
cvtdq2ps
xor
cs
mov
sahf
fcmovne
data16
imul
lds
scas
pop
mov
mov
dec
test
xor
sahf
pop
xor
mov
ficoml
xchg
and
mov
cltd
and
add
lea
test
xchg
and
push
and
repz
sarb
xchg
ret
cmp
or
sbb
stos
xchg
lret
out
in
mov
jno
sub
and
add
pop
mov
push
or
je
xlat
pop
stos
lcall
int3
add
sub
fstps
push
mov
mov
cmc
test
sbb
outsl
inc
xor
jmp
ljmp
into
xchg
jg
mov
aaa
sbb
dec
ret
int3
push
xor
xor
pop
cmp
popf
ljmp
cs
mov
lods
cld
sahf
cmp
mov
arpl
mov
sbb
jge
sub
push
je
ret
clc
shlb
xchg
mov
push
pushf
vmovdqa
or
sub
pop
jno
push
pusha
inc
jb
fwait
pop
mov
mov
int
jne
fs
mov
xor
add
sbb
or
test
lret
and
jg
push
repnz
lret
inc
inc
jl
and
and
add
roll
add
pop
movsl
mov
mov
lret
out
mov
inc
repz
jb
filds
adc
jmp
ficompl
or
mov
push
data16
cltd
ret
loopne
insb
mov
in
test
mov
dec
scas
popf
imul
inc
enter
loope
js
xorl
jge
fs
cmp
pop
sub
hlt
fnstcw
mov
mov
scas
daa
sbb
in
lea
jae
cmp
mov
idivb
mov
dec
inc
lea
mov
xor
jne
xchg
xor
xchg
call
lods
jo
scas
dec
enter
xor
push
cmp
mov
in
fwait
arpl
adc
pop
loope
mov
pop
mov
adc
mov
cs
into
add
sub
or
mov
jbe
aam
lock
mov
mov
dec
cmp
mov
push
jle
cmp
in
sbbl
and
mov
pop
mov
xchg
or
cmp
adc
enter
push
fs
add
int3
adc
je
jl
mov
in
negl
or
mov
call
sbb
mov
cld
dec
sub
pop
sbb
mov
cwtl
push
sub
loope
fwait
push
jb
xor
out
test
jle
sbb
pop
xor
aam
inc
cld
sbb
mov
jge
pushl
adc
push
popa
xor
movsl
or
sub
xchg
pop
mov
inc
lret
mov
lret
mov
cmp
mov
push
insl
push
inc
cld
cmp
arpl
loope
ds
aas
icebp
mov
outsb
push
push
xchg
sbb
sbb
test
mov
in
aas
mov
mov
lret
xchg
jnp
mov
push
and
pop
into
and
sbbl
mov
test
rorb
insl
fldenv
xchg
xor
inc
scas
mov
rcrl
lcall
and
dec
xor
hlt
test
cmp
scas
sbb
movsb
rcrl
mov
js
ja
xor
and
adc
push
push
adc
lods
je
sub
push
out
cmp
shll
fldcw
inc
leave
xor
mov
lds
and
lds
pop
dec
sub
cmp
mov
xor
pop
xchg
add
xor
jl
dec
aaa
test
ret
dec
rcll
insb
mov
stc
push
mov
push
inc
cmp
and
enter
shll
xlat
jg
and
faddp
and
push
cmp
pusha
xchg
jg
daa
leave
dec
rcrb
pushf
dec
inc
xchg
sahf
test
sub
sbb
pop
jecxz
lods
fwait
sub
and
and
mov
dec
scas
mov
and
lcall
mov
aas
mov
idiv
aad
and
mov
scas
push
into
push
sub
inc
mov
cmc
push
add
or
fsubl
dec
test
enter
rcrl
call
stos
cmp
jne
in
shll
cwtl
cmp
xchg
and
mov
lcall
add
push
cmpsl
mov
push
leave
cmp
repnz
in
mov
adc
stos
cli
ja
mov
pushf
testl
xchg
mov
xchg
cmp
pop
mov
or
push
ja
push
mov
xor
fcmovbe
dec
and
mov
xor
sbb
mov
dec
lock
pusha
cmp
mov
inc
jecxz
mov
lods
gs
sub
cmp
sbb
inc
mov
filds
rolb
mov
shrl
int
mov
scas
lret
out
jl
mov
or
hlt
leave
jo
push
lods
hlt
mov
imul
pop
xor
cmpsl
mov
scas
lahf
jge
out
ss
mov
xchg
mov
xchg
jg
test
popa
mov
jae
pop
lea
inc
inc
movsl
gs
sbb
hlt
ja
mov
test
cld
mov
or
popf
push
outsb
adc
mov
sbb
jae
xor
loope
hlt
dec
mov
add
jbe
or
lret
mov
int
pop
enter
mov
cmp
mov
into
and
cltd
mov
sbb
out
in
into
inc
jmp
loope
cld
xorb
aam
mov
xor
mov
mov
mov
mov
mov
sbb
cmc
mov
inc
dec
icebp
dec
fildl
fdivs
int3
mov
cmp
pop
add
mov
xchg
sbb
mov
lods
pop
dec
hlt
out
popf
aad
mov
push
std
je
and
adc
xchg
mov
sub
mov
enter
call
aam
mov
shlb
mov
jle
enter
ret
dec
inc
mov
push
test
int
andl
out
stos
out
rcrb
fldl
icebp
mov
sub
adc
xor
test
mov
jns
flds
dec
adc
add
fwait
ljmp
fucom
nop
mov
xchg
cltd
sbb
testl
inc
jmp
pop
push
fists
cmp
mov
ja
xor
pop
stc
adc
lds
out
pop
cwtl
ljmp
les
cmp
mov
fsubrl
in
les
mov
fbstp
xor
mov
imul
sbb
mov
xor
dec
mov
adc
les
out
jns
ret
xor
insl
xchg
cs
sbbb
sbb
in
imul
aaa
cmpsl
sub
cmp
or
jo
sub
or
jne
mov
cld
mov
jmp
xchg
mov
or
push
jno
add
test
neg
inc
dec
add
je
dec
lods
sub
incb
cmpxchg
repnz
pop
scas
dec
fmul
pushf
cwtl
mov
dec
test
dec
xor
stc
addr16
mov
aad
jle
loop
inc
push
mov
xor
cmp
lods
call
sbb
ljmp
pop
scas
les
inc
mov
iret
mov
cmc
mov
in
cmp
jnp
push
mov
mov
mov
cmpsl
push
loopne
xchg
push
cltd
test
pop
in
add
test
hlt
mov
out
scas
sub
lods
shlb
das
mov
adc
ds
xor
out
fwait
jle
inc
rolb
imulb
mov
dec
sti
pop
push
jne
enter
daa
iret
lahf
je
js
into
repnz
aad
add
push
cmp
lret
aas
movsl
bnd
dec
mov
push
push
jbe
subl
mov
push
xorb
jnp
inc
enter
leave
iret
xorl
jno
push
out
and
mov
movsb
adc
mov
mov
inc
outsl
sbb
shll
bound
xchg
mov
or
nop
aaa
lcall
and
mov
xchg
popf
loope
leave
into
sbb
push
notb
mov
mov
scas
xor
pop
cmp
mov
inc
mov
xor
sbb
or
sub
lods
mov
adc
in
fs
fbld
out
jb
xchg
out
enter
sbb
sbb
inc
mov
mov
mov
xchg
pop
or
push
add
repz
sbb
mov
std
lds
adc
add
jnp
repnz
jno
mov
rclb
repz
cmc
mov
push
sub
add
or
mov
stc
pop
mov
mov
xor
add
js
mov
nop
jge
lret
mov
add
es
push
ficoms
mov
inc
int
out
fisttpl
mov
cltd
popa
jl
stc
sahf
mov
jecxz
or
mov
cmp
mov
jo
dec
je
mov
inc
lock
sahf
lods
mov
arpl
in
cmpsb
push
outsb
shll
mov
mov
in
lods
cmpsb
mov
adc
int3
xorb
pusha
add
arpl
mov
mov
cli
push
inc
es
stos
mov
push
cmp
push
push
dec
hlt
loope
and
mov
stos
mov
cmp
push
mov
mov
lods
outsb
fsubrl
lret
sahf
mov
lcall
xlat
mov
xchg
sbb
hlt
add
mov
pop
push
adc
imul
cmpsl
mul
sub
dec
pushf
mov
sub
jecxz
lock
inc
pop
add
stos
mov
jmp
movsb
jge
dec
jae
inc
xor
repnz
sbbb
mov
jb
cmp
mov
xchg
scas
pushf
jp
add
jle
fsubrl
repz
xor
or
rcl
pop
jne
mov
mov
hlt
pop
shll
hlt
lds
andl
insb
loope
mov
pop
cmc
add
bnd
ljmp
xchg
mov
sub
cwtl
std
mov
je
or
scas
test
pushf
or
ja
scas
es
aas
or
cmp
mov
imul
aas
sbb
jg
xchg
fbstp
pop
push
fsubrl
sub
pop
or
xchg
mov
inc
mov
shlb
repz
addr16
fisubl
xchg
addr16
xorl
mov
sbb
cmpsb
add
xchg
jnp
mov
mov
or
sbb
or
gs
xchg
cmp
les
sbb
inc
dec
das
xchg
xor
adc
shll
lea
out
inc
and
xor
loop
mov
fadds
sahf
sub
adc
xor
shlb
sbb
push
cld
les
stc
jns
xchg
insb
adc
aad
jmp
fadds
xor
jecxz
adc
sahf
shlb
add
mov
and
gs
mov
jl
aad
enter
outsl
dec
mov
jo
in
push
xor
mov
sbb
cld
xor
scas
add
cmc
leave
mov
dec
jp,pt
inc
dec
in
jmp
cmp
std
or
cmp
repnz
xor
push
ss
jnp
popa
xor
or
ljmp
pop
sub
dec
push
ljmp
xchg
rorb
push
inc
cmpb
lret
xchg
lds
adc
adc
mov
divb
lret
xor
mov
adc
or
cmpsl
sbb
jne
movsb
xor
mov
scas
or
dec
jae
pop
stos
sub
push
push
add
test
in
jge
mov
arpl
cmp
aas
shlb
in
int3
or
jb
dec
pop
enter
or
lret
mov
dec
jo
insl
js
cmp
insb
sar
sahf
pop
loope
pop
push
mov
cmc
push
pushl
push
pop
sub
loop
es
mov
push
icebp
push
fists
lret
add
repz
ss
dec
sbbb
sub
js
adc
mov
mov
pop
sbb
int3
ja
push
adc
and
sub
jmp
jmp
scas
sbb
jno
mov
pop
and
lea
outsb
cwtl
cmp
repz
sbb
je
cltd
adc
test
dec
in
and
mov
mov
shll
sbb
and
or
movsl
mov
xor
in
adc
enter
ljmp
and
push
stos
inc
pushf
xor
aam
jmp
lea
or
or
mov
dec
mov
pop
push
xchg
sbb
or
adc
dec
or
out
pop
dec
or
inc
test
adc
mov
or
das
or
shl
aaa
or
es
enter
pushf
mov
scas
or
mov
jg
fisttpl
imul
push
and
mov
lcall
push
es
sbb
rcrl
popf
cld
sete
lods
dec
mov
lret
les
mov
xor
jae
sahf
lods
ret
and
inc
jge
pop
mov
mov
pop
hlt
mov
cltd
push
mov
jmp
test
push
cli
xor
dec
iret
fcompl
je
cmc
lea
outsb
ret
pop
clc
shrb
sbb
and
hlt
pop
jl
sub
sbb
mov
lods
ror
and
sub
movsb
test
sbb
dec
cmpsb
add
data16
inc
aad
and
lret
mov
lods
ja
jns
je
xchg
sar
sbb
xchg
cmp
stos
dec
sub
clc
jne
repnz
push
xchg
hlt
jb
add
dec
inc
popf
xor
or
and
pusha
mov
mov
fs
inc
push
mov
mov
and
int3
sbb
mov
xor
sahf
xchg
movsl
jb
pop
mov
and
push
mov
pushf
push
mov
and
stos
enter
jb
imul
or
ror
pop
jmp
sti
jno
and
mov
lods
sub
or
jnp
mov
sub
movsl
std
mov
test
cld
jecxz
xor
fildll
int3
inc
adc
cmp
test
sbb
sbb
rol
cmp
lods
dec
xor
insb
ret
test
pop
and
aaa
enter
icebp
lret
fs
fbld
fwait
scas
cs
dec
and
pop
pop
cli
scas
dec
lcall
je
xchg
xor
mov
icebp
scas
pop
push
mov
adc
sahf
pushl
cli
sub
pop
decl
cmp
int3
popa
mov
ficompl
scas
je
xor
mov
inc
dec
aaa
push
ljmp
and
cmpsl
insl
sub
dec
fs
add
sbb
fdiv
sub
ret
inc
pop
stos
cmp
daa
std
jo
and
xchg
jmp
dec
int
in
inc
mov
into
repnz
repz
cld
mov
movsl
es
mov
cmp
mov
mov
loopne
push
xchg
cs
dec
xor
or
es
hlt
out
dec
mov
roll
shlb
fdivrs
mov
popf
clc
popf
cmp
mov
fstl
pop
test
cmp
fisubs
cmc
cwtl
cmp
call
add
mov
adc
sbb
popa
rolb
test
cmp
cwtl
cmc
cmpsb
nop
pop
jg
mov
sti
pop
aas
xor
arpl
loop
pop
sub
push
jns
imul
pop
xchg
lret
or
push
cmc
xor
xor
frstor
sti
mov
sahf
pop
dec
lret
aad
sub
mov
jae
nop
and
or
xor
ret
xor
adc
inc
das
or
cli
add
jae
and
pop
xchg
repnz
movsl
sahf
xor
mov
sti
mov
add
pop
pop
popf
in
hlt
jg
js
and
xor
xor
imul
jno
sub
outsl
mov
clc
or
movsb
int3
fsubs
and
sti
sbb
sub
std
int
mov
in
or
pop
movsb
cmc
fwait
ss
pop
jno
into
je
scas
pop
cli
lods
jns
xchg
adc
push
cmp
mov
pop
stos
xlat
pop
loopne
nop
in
xchg
stos
pop
imul
test
scas
cmc
pop
stos
jle
push
pop
sahf
lods
test
rcl
cmp
xor
push
jmp
dec
jmp
mov
and
fisttpll
pop
add
int3
adcl
sti
icebp
sub
mov
aaa
push
test
mov
lret
or
push
jb
jae
sub
xor
dec
cmp
les
stos
scas
mov
pop
push
mov
in
js
mov
inc
mov
and
mov
ret
mov
sbb
enter
sbb
pop
push
pop
pop
add
mov
and
and
mov
mov
mov
insb
or
cwtl
xchg
cwtl
mov
jno
inc
imul
adc
inc
movsb
inc
rcrl
ret
jp
das
rcl
dec
arpl
push
jno
xchg
push
inc
add
setg
mov
adc
adc
xor
xlat
out
pop
jp
xor
dec
jecxz
popf
subb
outsl
shlw
xchg
pop
loop
xchg
mov
sub
ss
imulb
and
pop
dec
loope
xchg
nop
pusha
push
dec
popf
int3
ss
cmp
cld
clc
insl
je
or
dec
xor
loop
pop
dec
test
pop
inc
dec
mov
lahf
jmp
mov
les
shll
sub
adc
ret
scas
dec
jnp
mov
mov
aas
push
lods
lahf
sub
mov
sbb
cmc
xor
mov
sbb
cmovp
mov
lods
pop
movsb
pop
pop
lods
ds
push
sub
adcb
or
sbb
mov
mov
addr16
dec
push
mov
cld
mov
pop
cld
js
das
cli
inc
or
push
lret
cmp
scas
sbb
adc
xor
pushf
adc
cmp
cld
out
or
mov
push
lock
mov
addl
loope
xchg
mov
jae
ss
pop
test
int3
test
fbld
lret
pop
push
xlat
jbe
dec
in
xor
add
push
mov
cmp
test
pop
data16
loop
incl
inc
sahf
mov
push
xchg
and
fisubs
and
int3
jnp
hlt
orb
sub
rcl
and
dec
lret
ret
cmp
push
cmpsb
insl
insb
pop
xchg
mov
imul
scas
imull
hlt
lret
push
int3
stc
push
icebp
adc
jb
ds
mov
push
pop
adc
add
xor
scas
cmp
rorb
cli
pop
and
cmp
mov
loopne
imul
and
mov
dec
dec
adc
movsl
and
aas
xchg
lds
mov
dec
xor
sbb
lds
test
scas
pop
icebp
int3
jmp
push
filds
pusha
push
mov
jnp
pushf
sbb
call
out
iret
xchg
sub
movl
shll
fs
mov
mov
xchg
mov
outsb
je
imul
mov
jne
push
adc
cmc
mov
sbb
and
and
mov
cmp
aaa
aas
lret
mov
insw
je
jg
pop
mov
lock
leave
loop
lahf
mov
sbb
insl
xor
shll
mov
mov
xchg
jo
mov
jno
jle
mov
pusha
dec
in
iret
sub
xor
mov
popf
loope
pop
sbb
jmp
lods
sbb
inc
movsl
dec
movsb
adcl
popa
mov
pop
inc
push
mov
push
ret
add
test
mov
int3
xor
xor
rcrb
jecxz
jbe
imul
cs
lret
repz
and
popa
push
dec
insb
sub
out
push
dec
or
addb
jno
mov
cs
and
notb
out
and
adc
push
aas
pop
dec
cli
loope
mov
xchg
jg
pop
cld
mov
arpl
add
and
push
jns
lods
imul
jp
cmp
mov
mov
mov
test
out
lea
lret
les
pop
mov
mov
push
fisttpll
in
adc
cmpsl
adcl
pop
lcall
stos
xchg
cmp
shll
mov
jmp
out
mov
mov
push
sbb
pop
test
mov
movl
enter
adc
adc
arpl
add
int3
push
jo
nop
adc
and
fiadds
jno
mov
adc
push
adc
pop
arpl
xor
lods
jno
push
rcll
into
push
cmc
fldcw
xchg
sub
jecxz
scas
inc
testl
and
js
ret
xchg
out
popa
stos
sbb
cmp
push
push
int3
jmp
out
pop
pop
sub
adc
jo
adc
add
scas
dec
es
mov
movsl
cs
xor
test
sbb
shll
ret
pop
mov
push
ja
test
and
jns
jne
std
dec
jmp
ret
adc
add
cli
jae
jne
push
cmpsl
ret
push
iret
and
test
loopne
mov
dec
mov
lahf
cmp
and
dec
andb
pusha
and
cmc
jbe
subb
jg
and
stos
lret
inc
mov
jb
ret
test
dec
jp
sbb
fmul
ss
pop
xor
dec
adc
movsl
scas
sbb
int3
cmpsb
in
adc
adc
movsl
cmp
cmp
push
or
fcmovnu
xchg
jb
sub
jecxz
mov
cmp
xchg
test
notl
jb
int3
xor
xlat
and
je
mov
fwait
in
mov
push
xchg
aas
sub
insb
mov
pop
and
stos
inc
arpl
fistl
ret
dec
mov
imul
shll
lods
je
addr16
jns
imul
push
mov
inc
fistpl
sub
mov
test
lods
pop
dec
adc
les
addb
movsb
pusha
aaa
dec
mov
movsb
jno
mov
jne
sub
insl
xor
push
pushf
aad
imul
js
movsl
push
push
cli
imul
subb
je
cld
test
xor
xchg
in
dec
pop
clc
mov
sbb
and
cmc
dec
xor
std
add
stos
cmpb
mov
add
or
fwait
insb
imul
outsb
xor
pushf
push
movsb
movsl
mov
lcall
fstpl
fsubrs
sub
push
aas
vmread
xchg
outsl
or
mov
push
test
push
sub
adc
ret
mov
test
inc
mov
and
cwtl
pop
push
add
adc
cmp
bound
xchg
testb
pop
clc
jg
sub
enter
lret
inc
aad
xor
sbb
imul
in
into
mov
int
loopne
xor
adc
aam
daa
mov
mov
out
outsb
inc
cmp
inc
clc
mov
mov
jecxz
dec
shlb
pop
mov
decb
mov
adc
sub
mov
jbe
jg
xchg
cmp
and
mull
push
and
jne
mov
mov
inc
and
cli
insl
cmp
pop
fmul
and
sub
call
je
int3
ret
xchg
data16
dec
repz
test
shrb
loopne
sub
bnd
dec
mov
out
mov
fadds
push
mov
cs
and
sub
adc
mov
inc
lcall
xchg
xchg
fsts
inc
ret
cmc
aad
push
movsb
cmp
adc
cmp
add
fsubl
adc
bound
popa
std
roll
je
stc
cwtl
or
je
mov
push
pop
ret
imul
mov
mov
xor
out
sbb
mov
test
test
pushf
int3
push
adc
cmp
std
jae
popa
sbb
xchg
mov
mov
xchg
sub
movsb
fistl
push
mov
xorl
or
dec
push
xor
pop
pushf
sti
dec
fsubrs
lret
inc
inc
aaa
add
jo
xchg
cwtl
cmovns
inc
stos
jnp
out
in
mov
movsb
adc
xchg
loop
cmc
mov
push
xchg
or
xorl
adc
notl
shrb
mov
lods
popf
enter
xor
nop
mov
mov
fdivl
cmpsl
push
scas
pop
pop
shlb
dec
xor
xor
lods
cmpsb
and
push
lret
dec
lods
arpl
push
pop
test
stos
jne
sub
cli
cmc
hlt
mov
outsl
scas
dec
fcomip
mov
loope
jns
mov
in
arpl
and
dec
mov
sbb
sbb
or
jmp
xchg
pop
inc
jae
leave
jle
flds
test
mov
xchg
adc
and
sub
adc
out
push
stc
push
jle
mov
lock
and
nop
mov
int3
add
iret
mov
movsb
das
ret
push
xchg
jae
fnsave
add
in
cmp
or
insl
cli
cltd
jns
mov
hlt
pop
adc
sarb
mov
or
scas
cmp
enter
sbb
out
mov
dec
rcl
out
inc
sbb
out
sti
push
bound
mov
mov
push
jmp
test
jp
push
adc
jns
outsl
mov
pop
sbb
mov
insl
movl
adcb
lods
sbb
aam
mov
shrl
push
out
jmp
pop
movsl
lds
mov
int3
mov
dec
mov
mov
shlb
stc
in
xor
or
mov
cmp
in
sbb
jle
sub
mov
sbb
decb
jae
pop
add
lds
mov
adc
inc
jnp
xor
cld
sub
jnp
xchg
mov
xor
inc
fisubrs
jg
shlb
into
jb
hlt
dec
shl
mov
mov
mov
dec
int3
adc
bound
les
pop
jo
pop
mov
pop
imul
rclb
lea
int3
cmp
movsb
push
mov
out
push
dec
jno
push
repz
arpl
stos
int3
cmp
and
aam
dec
je
lds
mov
or
xchg
ret
loop
pop
dec
divb
mov
pop
sbb
inc
add
and
add
jae
mov
jp
adc
adc
ljmp
xchg
jp
jmp
jae
sub
les
sbb
daa
sub
and
inc
arpl
jo
pop
xor
cmp
and
imul
lea
or
ds
mov
aad
dec
inc
mov
sub
int3
or
dec
xlat
fnstenv
cmpsl
in
stc
sbb
pop
fiaddl
ret
in
dec
xor
scas
sbb
test
jns
lret
pop
aam
sub
or
xchg
mov
lret
mov
imul
xor
sti
and
xor
jp
rorb
leave
xchg
add
sub
insl
call
sbb
push
and
movsb
das
pop
adc
mov
sub
jne
cld
or
out
push
test
sub
push
punpckhwd
or
fdivl
les
mov
jbe
int3
addr16
push
mov
iret
or
cmpsb
mov
shrl
andl
pop
xchg
lahf
cmp
mov
fmuls
outsb
pop
inc
sbb
loope
xchg
xchg
je
xor
imul
dec
or
dec
or
push
add
xor
data16
mov
div
shr
popa
mov
shrl
out
insb
nop
ja
sub
arpl
std
sbb
add
repz
arpl
push
nop
pop
lret
mov
sbb
outsb
pop
sahf
lret
leave
cltd
in
and
sahf
cli
xlat
add
inc
push
add
dec
aad
and
insl
xchg
sbbb
outsb
in
push
dec
pop
cli
jae
adc
nop
jno
mov
and
pusha
cmp
cwtl
or
mov
cld
lcall
cmp
push
and
and
rcl
push
int
xor
fistps
jo
mov
arpl
mov
push
and
imul
stc
mov
sbb
repz
pop
push
lock
or
fadd
loopne,pt
pop
stos
sbb
nop
add
ljmp
sahf
movsl
push
lock
push
lods
add
pmulhuw
adc
fildll
xor
adc
insb
or
jg
stos
xchg
jno
imul
out
stos
gs
fsubs
sub
sbb
dec
test
es
mov
mov
std
inc
lret
mov
cmp
mov
mov
xor
pop
sti
jmp
add
out
fldt
movsb
mov
lds
aaa
out
lds
xchg
daa
pushfw
leave
mov
call
subb
test
push
push
out
lret
and
hlt
fbld
mov
mov
lods
and
add
inc
jno
hlt
out
out
aad
mov
sbb
mov
add
mov
dec
xchg
aaa
imul
nop
xchg
mov
mov
mov
les
cwtl
push
mov
sbb
lock
je
or
das
mov
push
xorl
aaa
jb
cmp
pushf
mov
outsl
cld
push
shrl
or
out
mov
pushf
test
ds
or
jp
pop
lcall
out
push
xchg
lret
insl
mov
movsb
push
and
int3
and
repnz
xlat
sbb
cltd
popf
scas
sbb
divb
addl
and
rolb
lea
fwait
sub
pop
popa
mov
imul
outsl
xchg
mov
int3
shrl
pushf
fs
jns
lods
and
cmc
out
pushf
std
mov
in
movsb
jl
stc
and
cmp
cmp
test
in
inc
jl
xchg
xor
pop
xor
inc
jecxz
xor
fistpl
in
int3
idivl
fadd
ret
adc
testb
xlat
sub
movsb
test
test
hlt
dec
mov
into
testb
pop
mov
imulb
push
fwait
bound
sub
shrl
jae
and
lcall
sub
mov
cmpsb
fadds
out
test
push
inc
jb
enter
pop
or
sbb
and
mov
das
stc
add
xchg
push
pop
cmp
lret
js
mov
cld
das
movsl
xor
out
int3
jecxz
sbb
notl
push
xchg
xor
xorb
dec
jns
sub
mov
jae
jb
mov
movsl
cmp
ret
imul
mov
imul
repz
sub
out
add
and
jecxz
mov
das
xor
sub
mov
dec
pop
std
cmp
stos
inc
mov
mov
icebp
xchg
mov
iret
int3
cmpsb
imull
test
push
orb
rdtsc
aaa
outsl
adc
push
stc
and
mov
cmp
push
pop
imul
daa
das
and
test
xchg
mov
fcoms
sub
mov
cmpsb
in
pusha
pop
cli
repz
mov
and
or
inc
lahf
sahf
bound
inc
dec
fisubl
das
hlt
jg
std
or
jmp
test
repz
cmovg
push
xor
movsl
sbb
stos
hlt
imul
jb
lea
data16
mov
and
jmp
xor
nop
ffreep
sbb
dec
sbb
xorb
jnp
xchg
jp
gs
adc
lods
mov
js
and
lock
andl
xor
pushf
outsb
adc
cmpsl
adc
mov
mov
xor
cmpxchg
xorl
daa
jecxz
lahf
add
int3
sub
scas
dec
push
pop
bound
fwait
aas
sub
dec
mov
test
sbb
movsb
rcll
stc
pop
pusha
test
mov
or
lret
or
cmp
popa
xor
cmpl
pop
xorl
jnp
cmp
rcrl
test
add
imul
mov
push
and
std
inc
push
sahf
sti
arpl
aam
xchg
gs
dec
pop
stos
xor
fistpl
outsb
sub
or
pop
adc
dec
repnz
test
pop
test
rcr
sub
repz
dec
mov
xor
cli
aas
push
in
and
movsb
pop
pop
xchg
mov
mov
notb
shlb
xchg
std
imul
ret
sub
bound
mov
lods
lret
ljmp
lahf
int3
iret
or
mov
push
sub
fwait
scas
push
jbe
scas
push
mov
lcall
lret
mov
test
fistps
pop
pusha
push
in
movsl
sub
sub
xor
cmc
jmp
jae
pop
pop
loope
repz
pop
movsb
cmpb
jecxz
adc
push
mov
dec
push
and
sub
push
ret
ljmp
jno
in
pop
lret
shrb
mov
insl
sub
mov
pop
cmc
aam
mov
cwtl
cmp
test
int3
pop
cld
flds
imul
je
pop
daa
sub
sti
stc
loop
xor
push
push
sub
out
jg
push
add
fmuls
jns
sbb
push
xor
mov
jne
cmp
sbb
outsl
jmp
dec
sub
das
pushf
inc
xchg
mov
insb
push
lahf
dec
test
jbe,pt
int3
rcrb
mov
movsl
and
cli
lds
rclb
daa
dec
mov
jb
outsb
fimuls
popf
loope
xor
jo
stos
adc
les
mov
dec
push
jl
fsubp
lea
pop
push
loop
in
fmull
cmpsl
cmp
and
xor
push
push
lock
sub
cld
lahf
jae
insl
mov
test
xchg
add
xor
rclb
push
std
adc
xor
xor
out
mov
lret
jecxz
shrb
sub
mov
incl
mov
data16
xchg
pop
xchg
movb
add
js
and
pop
adc
popl
insb
and
orl
push
std
lret
movsl
lds
sbb
or
call
pop
cltd
loop
mov
add
mov
mov
cmp
inc
xor
fldl
mov
xchg
icebp
push
or
mov
cmc
lock
test
pop
jl
sub
pop
dec
mov
pop
sbb
fsubs
outsl
outsl
xchg
cmpsb
sbbb
mov
pop
mov
and
test
mov
sub
push
sub
divb
sub
sub
or
call
cli
cmc
jae
gs
jmp
push
mov
out
inc
lret
ss
sbb
mov
jae
shrl
imul
pop
cs
loope
add
inc
sbb
fstl
inc
roll
sti
inc
in
mov
and
sbb
sbb
add
cmp
dec
ds
aas
pop
sbb
mov
pop
shlb
mov
fdivrl
testb
inc
mov
pusha
nop
sti
out
scas
xchg
jecxz
xor
insl
sbb
jecxz
loopne
pop
sbb
pop
test
and
pop
pop
jmp
inc
mov
sbb
sbb
inc
xlat
adc
pop
into
xor
mov
mov
lods
push
lods
outsb
mov
insb
movsl
xor
mull
push
inc
popf
sbb
cmp
repz
xchg
and
cmpl
jp
jnp
jg
in
adc
jl
mov
adc
shl
pop
in
dec
insl
or
icebp
dec
ja
lcall
insl
jmp
cmpsl
add
js
cmpxchg
imul
repz
jmp
mov
lret
dec
mov
mov
sub
mov
das
lret
xchg
pop
gs
adc
imul
add
xor
iret
cltd
scas
fwait
out
stc
pop
sbb
cli
pop
mov
aam
scas
sbb
add
popl
nop
mov
pop
cwtl
sbbl
mov
fisubrl
rcrb
sbb
insl
jo
mov
pusha
push
dec
popa
mov
xchg
negl
jno
adc
loop
mov
out
mov
mov
push
jle
dec
into
jle
pop
outsb
mov
xchg
lret
rol
mov
push
push
xor
sti
int3
cmp
sbb
fists
add
out
xor
popf
fmull
hlt
pop
xchg
cwtl
lods
roll
xor
nop
xor
mov
clc
fs
mov
mov
int3
or
movb
inc
pusha
loope
sub
mov
cltd
sbb
ss
mov
mov
js
int3
push
adc
scas
inc
loopne
and
push
in
sahf
cmpsl
cmpsl
int3
jmp
or
data16
and
dec
jne
xchg
scas
mov
and
xchg
push
or
xor
xor
cld
out
mov
fcomip
jle
inc
adc
push
sub
daa
add
add
jne
ljmp
popl
fisubs
xor
push
cmp
xor
cmp
xchg
dec
mov
jmp
popa
scas
fisubs
xor
stos
pop
ljmp
insb
mov
sahf
loope
sub
sarl
xchg
inc
sahf
fisubrs
mov
lret
pop
mov
subl
insb
loop
cmc
mov
mov
mov
hlt
mov
inc
bound
cwtl
shl
mov
and
sub
cli
lahf
sbb
jo
dec
scas
mov
dec
int3
xlat
inc
cmp
mov
inc
mov
pop
jbe
pop
mulps
enter
enter
out
mov
dec
push
push
mov
adc
xlat
aad
xchg
in
cltd
mov
icebp
mov
ret
ja
int3
mov
xchg
movl
out
mov
or
and
lods
movsb
int3
lret
mov
pop
fidivl
insb
xor
dec
out
imul
repz
cmc
push
cmp
nop
lods
cmp
xchg
dec
lret
popf
push
xor
add
mov
sub
test
arpl
xchg
cs
mov
mov
adc
jb
popa
mov
or
mov
dec
xor
pushf
fdiv
mov
loope
xchg
arpl
popa
jns
xchg
xor
loopne
inc
push
cmc
in
mov
popa
jb
sub
xchg
pusha
dec
add
je
fcomip
int
lret
jne
and
mov
mov
movsb
std
gs
push
mov
imul
push
call
in
lret
lahf
out
jae
scas
mov
mov
divl
sub
daa
sbb
nop
sbb
sbb
add
ss
jo
pushf
das
mov
int3
jle
cmc
add
push
inc
fwait
arpl
dec
scas
lods
xchg
ret
push
push
je
dec
mov
insb
lcall
mov
dec
sub
dec
push
imul
push
xor
xor
lods
xchg
xor
cmpsl
pop
cmp
or
sti
out
mov
or
adc
inc
lret
mov
mov
xchg
sub
mov
lahf
push
mov
xor
push
xchg
insb
jmp
ret
into
loopne
fldt
mull
leave
sub
mov
push
loopne
jle
ss
mov
lock
inc
jo
jg
xchg
cwtl
add
mov
scas
dec
imul
leave
inc
or
xchg
int3
fcmovbe
xor
pop
push
rorb
adc
pop
test
insb
push
sub
sbb
push
sub
add
popf
mov
enter
scas
int3
pop
dec
mov
jae
out
pop
xor
jge
and
lea
push
mov
jo
pusha
ds
int3
or
int3
fs
pop
divl
data16
mov
or
and
repnz
repnz
sti
mov
push
stos
mov
cli
test
loop
mov
dec
notl
xchg
test
cmpsb
mov
push
xor
movsl
mov
or
pop
sbb
ret
adc
aas
add
pop
mov
push
lds
mov
cmp
push
in
and
stc
cld
pop
out
aaa
ja
sub
stos
icebp
cli
outsl
mov
js
xor
sbbb
adc
or
jecxz
jno
or
pop
mov
shrl
and
int3
and
ror
scas
imul
pop
arpl
cs
inc
rclb
cmpsb
popf
cltd
lret
stc
orps
dec
ret
mov
mov
cld
in
add
jle
inc
leave
mov
push
mov
stc
fimuls
outsl
xor
lods
jae
iret
bound
sub
cltd
xchg
mov
lret
pushl
push
sbb
data16
adc
jecxz
test
adc
jp
add
and
push
imul
add
mov
add
out
scas
repnz
sub
out
and
sbb
in
mov
ds
sbb
sub
sub
push
paddusw
call
aad
pop
mov
adc
scas
arpl
and
sub
decb
scas
pushf
fsubl
leave
insl
js
and
sub
pushf
test
xchg
and
pop
int3
xor
aam
or
inc
lahf
out
cld
sbb
mov
daa
test
leave
push
xor
sbb
not
cli
jmp
sub
leave
dec
cmp
cmpl
loop
sub
push
cs
xchg
data16
sbb
lret
xorb
lret
jno
arpl
mov
pop
sti
insl
loope
mov
sub
and
imul
sub
sti
xor
push
gs
or
sub
xchg
test
lea
adc
push
xor
cmc
add
lret
lea
pop
jge
xchg
pop
xchg
dec
mov
pop
xchg
sbb
jno
jg
sub
lahf
fs
pop
pop
jns
int
aad
cmp
pop
out
enter
xchg
sarb
cmc
test
and
mov
arpl
in
dec
mov
mov
out
aad
psubq
cmp
sub
push
xchg
mov
rcll
jae
xchg
cmp
lret
cmp
push
mov
arpl
add
sti
mov
cmp
fisttpll
test
xor
pop
addr16
mov
cmp
cs
arpl
repz
out
aaa
int3
mov
adc
mov
or
shrb
mov
mov
adc
rclb
mov
daa
pop
jge
stos
call
push
push
lret
jl
xchg
int3
cmp
cmp
inc
xor
and
mov
subl
or
aas
push
xor
mov
mov
pop
fisttpl
mov
mov
pop
mov
inc
movsl
pop
cmp
and
pop
std
insl
push
int3
imul
hlt
mov
pop
out
faddl
pop
int3
push
aaa
loop
mov
dec
mov
mov
mov
das
jno
sbb
fsub
adc
repnz
cmpsb
clc
push
fildll
mov
aam
loope
scas
dec
fwait
movsb
jbe
sub
das
repz
push
fidivrl
dec
xchg
mov
dec
push
cmp
imul
xchg
mov
int3
icebp
loope
test
ds
test
sub
sbb
cltd
pop
loop
xchg
push
movsb
ror
and
aas
insl
leave
push
aad
push
int3
add
stos
imul
mov
repz
mov
add
and
aas
int3
loop
mov
or
fdivrs
into
lret
lds
rcl
insb
je
inc
sbb
and
popa
pop
fadds
inc
push
lret
add
es
stc
adc
cmovbe
int3
xor
xor
gs
jl
mov
repz
push
push
push
clc
movsb
ljmp
mov
ljmp
stos
leave
mov
popa
jle
pop
mov
mov
and
pusha
pop
ljmp
insb
je
push
movsb
inc
hlt
pop
movsl
lret
mov
jmp
adc
mov
lahf
push
jmp
test
cmc
mov
bound
outsl
scas
xchg
aaa
lock
jmp
std
outsb
push
sub
divb
sub
pop
adc
out
in
decb
cmpsl
jnp
aad
jl
int
push
imul
test
mov
inc
pop
inc
xchg
or
mov
dec
pop
push
jo
inc
sub
xor
std
insb
int
das
mov
cli
xor
xchg
adc
fdivl
sbb
adc
pop
and
repnz
popa
pop
and
and
popa
xor
cmc
xchg
insl
shlb
adc
fwait
lret
scas
mov
xchg
mov
inc
mov
sbb
jle
jmp
adcl
xor
xchg
or
xor
xor
dec
add
in
out
mov
sbb
pop
in
add
test
pop
or
daa
push
push
jecxz
cmp
cmp
pop
xchg
inc
push
mov
mov
xchg
in
push
ficomps
xchg
sub
lcall
outsl
in
mov
lret
imul
and
hlt
loop
sysret
pushf
pop
movl
les
xor
arpl
imul
inc
ja
dec
pop
adc
jns
movsl
movsl
jo
add
xchg
or
stc
push
add
add
mov
outsl
xlat
or
push
pushf
or
cmp
inc
mov
pusha
pop
inc
add
mov
daa
mov
lods
sahf
fstpt
cli
pop
adc
cmpb
push
mov
and
or
and
mov
mov
fwait
aam
test
push
push
pop
repnz
lret
add
adc
mov
popa
mov
loop
or
pusha
in
notb
sub
mov
in
adc
dec
xorb
jg
fs
xchg
pushf
inc
xchg
adc
aam
cmp
cmpl
pop
xchg
xchg
or
lret
leave
stc
movsl
and
jle
adcb
fcmovu
add
mov
sbb
and
sbb
push
inc
std
mov
sbb
lock
gs
popa
out
notl
imul
mov
push
popf
push
aad
mov
dec
cmp
pushf
lds
int
inc
mov
test
dec
in
lahf
idivb
jmp
push
popf
dec
sub
lods
mov
jno
push
jno
in
aam
rcrl
int3
fcmovnb
mov
push
or
insb
xchg
jecxz
cmp
sub
loop
mov
stos
or
sahf
cmc
into
in
mov
inc
mov
imul
mov
push
mov
loop
gs
lods
push
xor
pop
test
into
arpl
sbb
mov
cld
sub
movsl
pop
ficompl
mov
mov
adc
mov
push
jg
cmp
pop
mov
cmpsl
jno
and
jae
mov
bound
jo
xchg
adc
sub
pop
inc
and
sbb
push
je
mul
lret
push
jl
mov
mull
adc
insb
int3
pop
jmp
lret
lock
nop
test
mov
shlb
lods
sub
lock
bound
sbb
shlb
cmp
sub
push
arpl
cs
push
arpl
xchg
adc
out
inc
xchg
inc
das
rcl
fwait
cwtl
out
jle
pop
add
mov
dec
aaa
xor
adc
ss
mov
aam
scas
dec
cld
mov
inc
jne
test
leave
rol
dec
mov
sub
loopne
inc
xchg
cmpsb
push
push
and
cmp
test
mov
sbb
mov
out
jl
hlt
mov
in
jg
test
shrl
lcall
lret
push
pop
add
push
add
jno
out
je
stc
and
mov
sbbl
sub
xor
lock
loopne
mov
sub
inc
ja
adc
xor
lret
int3
xchg
mov
dec
cmp
sbb
fs
repz
das
mov
je
mov
int3
pop
aam
jo
xor
inc
popf
sub
inc
and
and
bound
xor
in
jae
loopne
cmp
sub
jmp
xor
xchg
or
bound
stos
call
out
pop
push
jno
push
push
sub
stos
sti
xchg
jae
xor
and
pshufw
xchg
rorl
mov
pop
adcl
insb
xchg
and
lret
dec
test
mov
push
dec
cld
sub
push
mov
mov
data16
sbb
mov
outsb
test
pop
xor
xor
xchg
rcrb
loop
adc
cli
xor
out
mov
mov
mov
mov
push
in
fdiv
ret
lcall
dec
pop
rol
sub
out
adc
jg
jecxz
addb
int3
popf
pop
scas
clc
popa
div
lcall
push
or
pop
xor
leave
mov
stos
xchg
ror
jg
nop
pusha
push
pop
in
ss
das
or
sti
dec
inc
sub
sbb
xchg
in
jb
cmp
orb
out
xchg
xchg
je
cltd
sahf
lea
jl
js
test
jb
mov
dec
stos
sbbl
fdivl
lds
mov
jno
lret
movsb
jge
mov
push
cltd
add
sub
mov
dec
data16
push
out
out
push
pop
adcl
lods
pop
popf
hlt
je
movsb
mov
mov
out
inc
fwait
mov
data16
je
loopne
fs
leave
mov
mov
xor
push
mov
mov
or
jo
into
lea
push
sbb
adc
push
mov
sbb
xor
sub
sahf
bound
or
mov
fsubrs
cld
ss
ljmp
test
cmp
cwtl
mov
stc
pop
pop
fsubs
lret
in
jo
incl
push
test
stos
xlat
mov
xor
in
fldt
pop
fcomps
mov
out
mov
lret
lret
cmp
xor
loop
scas
clc
out
scas
idiv
adc
dec
shlb
repnz
mov
push
lret
js
mov
xorb
mov
mov
sub
setb
sub
pop
and
lret
fsts
pop
xor
inc
cmp
std
and
sti
mov
jge
into
cmc
outsb
xor
add
pop
sub
xor
dec
sbb
out
xor
sahf
cli
or
cld
mov
sub
sub
aad
lret
xor
or
sub
je
faddl
lret
or
adc
mov
scas
inc
int
popf
pop
xor
jbe
adc
jno
jmp
sbb
repnz
jno
add
sub
dec
stos
testl
loop
pop
inc
push
fstpl
mov
psllq
loopne
jb
imul
push
nop
movsb
int3
or
lods
mov
lds
sbb
sub
hlt
outsb
fwait
mov
insb
add
scas
cltd
in
push
aas
add
mov
pop
ds
sub
sbb
jo
scas
in
int3
push
lods
or
adc
daa
mov
lock
data16
pop
faddp
dec
and
sahf
sub
movsl
jns
arpl
dec
jne
ret
dec
imul
mov
in
push
pushf
out
add
dec
sti
and
lods
imull
mov
pop
mov
sbb
pushw
dec
mov
test
movsb
and
fisttpll
and
dec
mov
mov
subl
push
pusha
jnp
mov
test
and
adc
and
jne
int3
push
xor
dec
xchg
movups
test
mov
pop
enter
js
std
pusha
loope
dec
mov
int3
in
int3
pop
xchg
fwait
mov
cmpsl
sub
hlt
adc
inc
sub
in
dec
push
dec
test
jae
sbb
mov
outsl
adc
imul
je
cmp
adc
mov
mov
lret
lahf
sub
mov
dec
mov
mov
and
xor
int3
adc
pop
push
jecxz
dec
mov
mov
imul
cmpsl
jmp
cmp
js
mov
fs
cmp
inc
jae
add
xor
movsb
push
jmp
sbb
or
xor
scas
lret
mov
adc
push
jne
test
dec
fwait
sub
lock
push
mov
xlat
xor
lret
xchg
cmpsl
add
js
mov
ss
out
mov
lcall
cmc
or
inc
int
jo
mov
and
je
sub
fwait
divb
cmp
mov
inc
data16
repnz
loopne
jp
rorl
outsb
or
mov
popf
pop
fwait
jl
jl
sub
enter
jge
cli
sub
mov
shlb
pop
loop
movsb
xor
decb
adc
shlb
inc
nop
jne
dec
add
cmp
sti
sub
daa
mov
jno
imul
mov
shlb
test
cli
ds
pop
loopne
adc
ret
fcompp
xor
dec
das
push
jae
pop
shlb
adc
mov
pop
movsl
and
push
jl
mov
outsb
fistl
aam
mov
and
jne
add
les
jb
add
pusha
int
add
arpl
mov
or
mov
out
push
cmp
ss
lds
mov
stos
int3
jno
scas
mov
push
mov
or
mov
and
cwtl
int3
add
in
cmovbe
out
stos
pop
dec
call
inc
jge
sbb
mov
psubb
stos
mov
jo
cmc
xor
imul
outsl
pop
stos
mov
stos
dec
sti
pushl
mov
pushf
jne
or
cmpsl
pop
stos
ds
mov
inc
cmp
dec
out
scas
pop
push
sti
or
mov
lret
xchg
outsl
in
fs
adc
sub
outsl
insl
test
mov
and
sub
mov
cmp
ret
cld
mov
cmp
mov
xchg
adc
test
aam
fistps
xor
sbb
push
lea
mov
inc
add
inc
cmc
mov
pop
inc
lret
push
das
mov
and
iret
pop
mov
lcall
lret
xor
pop
pusha
cmp
cwtl
ret
xor
jl
and
and
push
data16
int3
pop
add
stos
xor
daa
cs
mov
and
jb
icebp
das
test
sbb
stos
insb
arpl
jne
and
pop
or
sti
mov
fnstenv
xchg
cmpsb
sbb
adc
arpl
subb
adc
test
add
int
jmp
lret
xchg
add
jl
inc
sbb
sub
jo
out
outsl
out
xchg
outsb
mov
push
fnstenv
test
jl
adc
loope
test
mov
clc
push
sub
push
push
xchg
fisttps
rolb
enter
mov
orb
push
adc
mov
ficoml
bound
imul
adc
pop
mov
xor
cmpl
test
jecxz
lods
pop
mov
mov
adc
mov
ja
mov
xor
sti
popf
cmpsb
mov
and
mov
ret
inc
sbb
popf
inc
clc
mov
inc
pop
mov
jl
lcall
psubw
xchg
and
mov
xchg
movsl
dec
xor
sub
or
daa
lods
jb
mov
xor
scas
add
xchg
int3
inc
cli
mov
cmpsl
lods
dec
mov
push
ljmp
pop
push
imul
jge
sbb
push
arpl
jp
outsl
xchg
push
fcmove
cld
jne
ret
mov
pop
sbb
stos
lret
fmuls
fwait
and
lcall
daa
sbb
fldcw
std
add
dec
ljmp
lahf
push
xchg
sahf
sub
adc
sub
outsl
nop
pop
pushf
xor
jnp,pt
xor
in
lret
cmpl
or
sbb
jnp
testl
mov
test
push
imul
lret
sbb
push
cmp
std
push
add
lock
pop
ljmp
pop
mov
mov
incb
aad
subl
rclb
stos
xor
shl
or
sub
mov
pop
sbb
test
mov
ret
pop
add
mov
sub
lods
js
mov
icebp
fs
pop
call
cmp
jns
lret
movsl
pop
lock
bound
int
pop
mov
sub
sub
arpl
jp
adc
mov
add
daa
add
mov
jno
dec
nop
gs
and
push
incb
and
pushf
sti
mov
inc
arpl
sub
insb
idivl
fimuls
mov
sub
add
or
daa
pushf
pop
adc
cld
pop
mov
mov
scas
dec
ficomps
and
ret
mov
fistpll
mov
sbb
hlt
sahf
pop
int3
sahf
stc
inc
mov
xchg
sub
add
add
mov
popa
stc
das
mov
dec
jns
mov
fbld
es
mov
cli
or
mov
xor
sbb
stos
pusha
mov
shrl
dec
les
push
mov
pop
bound
rolb
mov
into
sub
xor
dec
cld
fstl
push
xor
fldl
xchg
add
stos
shll
je
adc
cld
mov
xor
mov
cmp
shlb
push
mov
add
xor
imul
lret
movsb
dec
jae
push
and
idivb
mov
dec
inc
mull
push
xchg
fs
mov
mov
sbb
mov
adc
jns
decw
data16
hlt
cwtl
je
xlat
adc
mov
ds
or
push
cltd
gs
mov
out
mov
fs
imul
cmp
xor
inc
sbb
test
lret
jl
jbe
dec
iret
scas
es
xchg
xor
jns
xchg
aam
inc
xchg
lock
fbstp
movsl
and
cmp
imul
jnp
daa
les
and
xor
add
cld
mov
das
jecxz
fdivl
in
int3
test
push
xor
mov
js
fs
scas
cwtl
movsl
mov
lock
mov
mov
aas
enter
cld
push
add
and
popl
aam
in
imul
test
sub
fsin
jb
pushf
out
sahf
gs
cli
clc
pop
mov
icebp
andl
idivb
pop
push
sub
mov
sub
mov
int3
bound
test
ret
les
sbb
cwtl
stos
imul
test
dec
push
mov
and
int3
jnp
fsubs
dec
inc
cmp
lret
mov
mov
cmp
sbb
pushf
sarl
pop
sahf
int3
push
or
and
add
sbb
stos
push
sub
ljmp
es
cli
les
pop
lock
stos
test
sbb
mov
or
cmp
ret
insl
inc
or
mov
and
jns
lret
push
out
test
add
std
push
mov
jno
lret
insl
adc
mov
mov
hlt
sbb
cld
inc
pop
repz
dec
movl
clc
mov
call
add
lret
pop
mov
fidivrl
arpl
adc
test
mov
loope
cwtl
and
pop
iret
dec
or
int3
sub
out
out
push
inc
and
xor
movsb
imulb
push
test
insl
scas
test
mov
pop
add
in
cmp
and
cmp
xchg
int3
push
push
sbb
imul
add
mov
sarb
inc
pop
jo
dec
adc
into
jne
mov
xor
or
push
mov
jmp
icebp
je
ret
test
mov
fnstsw
jo
pop
fcmovbe
lcall
aaa
mov
and
es
mov
imul
cmp
ja
divl
lret
push
add
pop
mov
test
scas
repz
xchg
mov
pushf
cmp
lods
int3
cmp
clc
adc
mov
outsl
cmp
lret
out
clc
mov
call
adc
pop
mov
jne
test
xchg
pop
dec
sub
sarl
mov
add
repnz
imul
mov
push
or
sub
fisubl
test
rcr
jb
jb
stos
and
test
rcll
push
or
xlat
and
or
xchg
shll
push
in
int3
adc
out
lds
cli
je
push
idivl
lret
xchg
jmp
test
leave
int3
jne
lahf
shll
jo
aas
outsl
fisubs
and
xor
push
into
xor
stos
mov
cmc
add
or
xchg
jp
mov
jge
lahf
pop
jg
adc
bswap
scas
cwtl
xchg
hlt
sub
dec
cmp
or
and
popl
pop
jge
int
ds
mov
xchg
cmp
bound
inc
sub
lock
dec
sub
sub
sbb
aaa
stc
fcoml
add
cmp
jo
jae
popa
sub
push
jmp
mov
lds
imul
aam
clc
inc
jmp
dec
scas
dec
lcall
stos
pop
js
pop
lret
xchg
mov
es
fnsave
mov
add
sub
movsb
orb
sbb
arpl
cmp
fwait
inc
ficomps
pop
xor
lds
mov
mov
jae
cs
popf
xchg
jns
and
mov
js
push
je
std
pusha
enter
xlat
jl
pop
stos
lret
mov
pop
sbb
insl
out
mov
sbb
imul
adc
and
mov
xor
pop
add
imull
pushf
jb
pusha
call
insl
test
mov
cmp
fmulp
stc
stos
mov
jno
xor
sti
lret
mov
mov
dec
inc
scas
lret
stos
or
mov
adc
call
movsb
jg
or
jb
xchg
rol
push
and
mov
shlb
or
xor
icebp
rcl
mov
loopne
test
sub
in
sbb
data16
sarb
inc
call
popl
pop
mov
ljmp
movsb
fstps
inc
imul
push
movsl
push
jo
test
push
inc
adc
push
test
lcall
and
and
xchg
fldenv
mov
aaa
sub
call
dec
testb
push
sub
and
mov
pop
inc
xchg
dec
arpl
insb
xchg
cltd
mov
test
pusha
jle
mov
ja
push
dec
lahf
movsb
idiv
std
push
scas
les
xchg
pop
lods
call
dec
pop
push
mov
pusha
or
testl
outsb
ds
or
sti
mov
cld
pop
sahf
pop
lds
lret
pop
fiadds
dec
sub
mov
insb
outsb
lret
xor
push
int3
mov
or
pop
stos
xchg
adc
into
pushf
pop
lret
and
lret
or
xlat
lret
mov
hlt
pop
dec
sub
xor
sbbl
mov
ficomps
or
enter
cmpsb
and
mov
into
nop
ljmp
mov
xchg
out
jecxz
daa
andb
jae
jb
adc
add
mov
cmp
pushf
into
push
stos
jnp
imul
ljmp
iret
push
je
sbb
pop
int3
mov
dec
sub
subb
lods
aaa
jns
mov
mov
divb
push
sysret
aaa
stc
mov
xor
jno
xchg
jl
sub
xor
stos
jo
cmp
stc
adc
or
pop
ds
mov
stos
and
mov
pop
push
aam
or
int3
jle
pushf
xor
jns
dec
push
out
clc
stos
sub
loop
sbbl
scas
cmp
mov
mov
notl
and
shll
pop
and
inc
adc
mov
adc
push
aaa
out
mov
mov
add
scas
xor
and
call
cmp
addr16
xchg
mov
pushf
aaa
shrb
jge
mov
adc
mov
lods
xlat
lods
movsl
sub
mov
arpl
cmp
xor
into
jb
fidivl
int
es
jo
int3
cmpsb
nop
push
movsl
mov
pop
cmc
mov
pushf
mov
jp
aam
fadds
out
ret
in
outsl
and
mov
cmp
lret
aad
adc
ret
or
mov
aam
lahf
sbb
xor
shrb
cmpsb
and
fcompl
mov
ficoml
sub
xchg
push
das
xchg
push
mov
jecxz
data16
aam
sub
sub
push
inc
mov
insl
mov
aas
ret
es
cmpsb
adc
ja
cli
and
xor
jbe
mov
std
test
into
dec
lods
jmp
inc
jno
jne
xchg
popf
mov
sbb
cmc
xchg
mov
sbb
add
shll
mov
cmp
sbb
xchg
xor
mov
fwait
jge
mov
dec
ja
or
out
inc
mov
pop
sahf
inc
je
imul
nop
adc
and
test
mov
out
loopne
mov
sub
lcall
sbb
mov
roll
add
push
mov
xlat
inc
mov
scas
ljmp
stos
cwtl
xor
in
mov
mov
rorb
mov
pushf
aam
mov
ret
or
mov
sbb
call
mov
pop
sbb
outsl
add
insb
test
mov
cwtl
cmp
mov
enter
push
xchg
adc
mov
mov
fcompl
xor
jecxz
pusha
inc
mov
gs
sahf
pop
sub
sub
pop
sub
push
jmp
mov
push
in
mov
enter
stc
jp
insl
jnp
mov
cld
xchg
mov
iret
jae
adc
mov
mov
mov
inc
mov
inc
mov
cmp
insl
ja
imulb
jnp
enter
mov
xchg
fisubrl
mov
cmp
and
iret
mov
mov
pop
inc
insl
push
mov
in
dec
and
loope
pusha
mov
xor
cmpsb
clc
pop
es
hlt
mov
cwtl
xor
pop
jmp
or
mov
fsubp
and
or
stc
mov
fs
xor
out
das
sahf
jp
aam
fsincos
ror
mov
pop
mov
int3
and
sub
aad
sbb
xchg
hlt
rorb
cmpsl
jb
xor
cmp
pop
clc
shrb
dec
mov
xor
call
enter
test
mov
mov
fmull
mov
or
push
and
out
adc
lods
jnp
jg
cmp
movsl
jbe
xor
sahf
fistl
add
mov
mov
cwtd
nop
pop
inc
mov
cs
shl
mov
mov
and
rorl
adc
movsl
inc
sbb
scas
test
sub
mov
add
fnstsw
jge
mov
ljmp
test
ss
test
dec
jecxz
cs
xor
das
in
ret
in
ds
lock
and
mov
jne
test
lret
add
pop
addr16
lret
and
add
jo
filds
lea
or
data16
xchg
shlb
mov
xor
jb
pop
int3
insb
iret
cmpsb
stos
shl
mov
pop
test
gs
push
jmp
mov
mov
out
mov
mov
lods
cltd
mov
mov
inc
lret
lahf
insb
lcall
divb
push
mov
cmpsb
push
xchg
dec
pop
and
mov
inc
mov
in
and
inc
mov
jl
adc
fstl
cmc
loopne
mov
movsb
cwtl
in
cld
out
pop
mov
fistps
mov
jo
fmull
lret
notl
xor
pop
movsl
adc
das
repz
scas
adc
sti
test
mov
add
jecxz
out
cld
cmp
mov
pusha
jl
xor
sub
dec
pop
xor
loopne
and
jl
xchg
add
dec
sbb
cmp
cmp
xor
mov
sub
nop
mov
scas
fcoml
mov
pop
dec
loop
mov
mov
fs
daa
lock
cmp
dec
bnd
mov
jge
sbb
pop
insb
jns
mov
push
ljmp
adc
push
xchg
push
std
mov
in
inc
jb
jge
sbb
cmpsb
rol
or
into
outsb
mov
dec
adc
insb
mov
mov
mov
jg
pop
dec
out
push
mov
dec
sub
test
sti
jae
cmp
mov
sbb
add
mov
ja
movsl
adc
mov
pop
fwait
clc
lods
testb
xchg
add
cmpsb
jmp
adc
rcll
mov
dec
repz
movsb
inc
cmp
aaa
insb
pusha
sti
mov
mov
pop
aad
adcb
xor
loope
sub
pop
xchg
push
hlt
sbb
btrl
pop
stos
cmpsl
mulb
mov
xor
pop
and
stos
das
movsl
test
mov
outsl
sahf
jnp
sub
mov
out
sbb
ljmp
mov
cmpsl
inc
int3
adc
aad
pop
xchg
pusha
addb
xchg
and
lcall
sbb
jp
push
and
mov
ficomps
scas
mov
mov
popf
xchg
xor
mov
pop
pop
js
fdivl
push
xor
add
xchg
push
movsl
insl
pop
mulb
mov
sub
pop
sub
aam
repz
in
sarl
dec
stos
xchg
mov
jnp
ret
jl
cmp
jno
push
push
fwait
dec
aam
mov
ret
mov
gs
mov
xor
punpckhdq
pop
mov
jno
fadds
fnstenv
stos
sub
data16
pop
iret
ds
add
shll
mov
inc
xor
sub
mov
mov
aam
pusha
pop
scas
or
xor
popa
into
push
inc
arpl
pop
cmpb
movsb
jnp
mov
push
cmp
mov
adc
mov
pop
or
cwtl
pushf
insb
jge
je
inc
xor
ficoml
push
mov
out
sub
scas
jp
in
fnstenv
sub
inc
push
mov
int3
sti
adc
jecxz
mov
ret
push
cmp
inc
mov
adc
pop
sbbb
cmpsl
outsl
inc
dec
or
mov
loop
stos
jbe
mov
dec
pop
xchg
outsb
mov
inc
mov
fwait
movsb
pop
sbb
lods
lea
mov
or
sbb
loopne
js
cmp
jno
imul
mov
clc
in
test
add
andb
cmp
xor
adc
fidivs
push
jns
inc
rcrb
mov
add
lods
jle
loop
mov
in
mov
shrl
ss
jae
mov
pop
pop
add
cld
adc
or
xchg
pop
mov
popf
sbb
mov
sbb
sarb
mov
sub
imul
and
stos
cld
pop
xor
hlt
xchg
push
mov
mov
mov
ja
jge
push
incb
lods
les
jmp
xchg
sarb
clc
mov
or
movsb
movsl
stos
push
cmp
xor
jae
xlat
mov
sub
popf
in
lods
cld
sub
xchg
int3
je
in
pusha
sbb
fs
inc
dec
pop
cmp
imul
mov
stc
adc
sbb
push
xchg
not
movsb
aad
and
jmp
stos
pop
cltd
out
fcmovne
jecxz
xchg
shrb
jge
insb
jns
lret
push
dec
jecxz
sbb
adc
and
mov
movsl
test
popf
jmp
dec
repnz
cmp
or
dec
pushf
xor
xor
xchg
repz
je
push
adc
cmp
decl
sbb
mov
pop
mov
and
xchg
mov
pop
bound
mov
xor
jns
push
imul
ret
lret
xchg
std
or
inc
arpl
mov
in
xor
pop
mov
lahf
xlat
ret
jns
push
enter
outsb
insl
out
movsl
mov
leave
hlt
push
cmc
cmp
mov
rcrb
jl
fldt
xlat
iret
fnsave
pusha
add
xchg
je
hlt
int3
mov
xor
sub
scas
and
movsl
sbb
mov
stos
cs
inc
aaa
push
adc
clc
jne
lods
enter
cltd
aam
push
das
mov
test
xorb
sahf
pusha
nop
ja
and
mov
enter
out
add
addr16
jmp
xchg
int3
outsb
pushl
or
pop
aam
fimuls
scas
sti
lret
pop
push
filds
add
mov
inc
pushf
and
mov
jge
dec
pop
and
inc
push
lret
lret
ret
lret
dec
pop
push
push
test
fs
sbb
out
lock
sub
add
icebp
sbb
mov
aad
shrb
popa
lret
scas
ss
jo
pushf
push
jno
sbb
jmp
divl
fcmovnbe
insb
in
sub
fisubs
jns
test
mov
adc
push
mov
ss
setle
mov
jns
cs
into
pop
or
jno
jb
mov
cmp
jns
imul
movsl
push
and
push
gs
shlb
xchg
out
bound
int3
and
adc
imul
pop
dec
js
push
mov
les
jne
stos
cmp
fwait
mov
mov
xor
fs
shll
imul
lods
adc
movsl
mov
sub
ret
push
scas
xor
mov
fwait
test
sti
push
cmc
adc
movsl
push
mov
xorb
jnp
mov
pop
mov
jl
mov
push
rcrb
mov
dec
jmp
xchg
xchg
sbb
aam
fidivl
fstpl
nop
jb
xor
stc
xchg
andb
mov
pop
cltd
inc
or
es
movsl
in
sbb
sub
mov
or
inc
jecxz
mov
inc
or
pop
and
ficoml
mov
aam
fcomps
push
int
push
mov
lods
jge
aad
out
or
push
mov
sti
insl
lods
outsb
push
jbe
std
mov
scas
pop
inc
lret
clc
inc
mov
ret
cli
in
mov
cmpsb
mov
fdivp
lahf
outsb
divb
outsw
out
js
cwtl
add
hlt
fcmovnb
xor
les
xchg
pop
lods
fdivl
push
sbb
jno
lahf
mov
jnp
mov
lds
cwtl
adcb
mov
sbb
mov
push
ret
fcompl
cs
jp
rorl
cmp
adc
sub
xor
add
dec
adc
inc
mov
cmp
xchg
adc
inc
push
fdivl
xchg
mov
mov
into
mov
rcrl
mov
out
repnz
push
push
jg
imul
xchg
dec
aas
add
lahf
or
imul
add
data16
xor
leave
push
jg
insl
pop
scas
shrl
ljmp
rcrb
mov
aaa
mov
faddl
jmp
fcoms
jnp
adc
or
pop
dec
add
lcall
mov
xchg
ja
sub
lret
fwait
cmp
out
mov
and
stc
or
je
test
inc
mov
movsl
jns
and
xchg
loop
push
mov
mov
cs
aas
pop
inc
mov
je
in
add
mov
addr16
cli
mov
mov
xor
jecxz
test
sahf
rclb
sahf
push
lret
and
lods
pop
push
cmp
mov
push
xchg
fwait
mov
mov
scas
push
sti
cmpsb
movsb
loopne
push
lret
jae
mov
pushf
jno
inc
ds
shll
lret
scas
mov
mov
js
mov
in
cli
sbb
je
mov
in
jo
or
dec
test
mov
sub
xchg
pop
xchg
xchg
mov
jg
rolb
mov
fst
mov
mov
push
lea
inc
sbb
in
pusha
inc
or
rcr
xlat
call
mov
jl
adc
cmp
jp
les
inc
mov
mov
mov
outsl
dec
and
and
xor
xchg
fcompl
je
mov
ja
pop
stos
mov
hlt
jbe
into
mov
xchg
cmp
pusha
mov
adc
mov
scas
xor
fcoml
push
push
or
xchg
sbb
sbb
add
push
fldenv
imul
cltd
call
xchg
dec
mov
and
ffree
push
aam
or
pop
sahf
sbb
js
cmp
pop
aam
cmpsl
hlt
ret
out
jb
cwtl
outsl
cmp
mov
and
or
iret
push
stc
mov
cmpsl
cmp
mov
orl
add
lods
adc
loope
std
inc
mov
aaa
pop
xor
adc
in
insb
mov
sbb
test
addb
aad
cmc
fiaddl
mov
outsl
dec
and
insb
sub
sbb
sub
sahf
mov
mov
push
pop
add
mov
popf
ja
idivb
stc
cltd
sbb
pop
inc
mov
mov
pushf
mov
adc
imul
or
js
ljmp
dec
mov
in
sbb
fs
imul
les
in
test
xchg
or
imul
in
incb
arpl
cmp
sub
pop
adc
mov
dec
ss
push
fdivl
push
stc
jge
inc
les
jns
push
sbb
cmp
add
lock
cs
sbb
cmc
or
je
mov
add
dec
mov
jno
mov
cli
cmp
lea
loop
sub
or
xor
sub
ficompl
movsb
mov
js
cs
sub
sbb
nop
bound
aam
test
xchg
vpminub
cwtl
js
insl
xor
adc
ret
mov
jne
in
inc
loop
adc
arpl
mov
sbb
sub
xchg
xchg
or
hlt
in
aad
arpl
pop
lods
mov
cmp
pusha
pop
mov
movsl
pop
jecxz
jge
push
mov
cmp
pop
loope
scas
inc
lods
das
cld
jo
out
mov
pusha
cmpsb
mov
shrb
xchg
scas
mov
xor
add
stos
mov
adc
movsb
mov
dec
addr16
push
loop,pn
mov
outsl
jbe
mov
dec
mov
mov
jbe
xor
mov
pop
adc
cwtl
mov
mov
fsubrl
sti
pushf
aas
arpl
int3
inc
mov
fstp
xor
jg
jo
je
aaa
add
nop
jne
sbb
dec
mov
mov
jns
jnp
pop
inc
sarb
mov
lds
inc
and
sub
test
xchg
push
mov
aas
int3
outsb
repnz
cltd
inc
in
mov
push
out
push
cmp
pop
mov
sbb
ja
sbb
or
loope
es
adc
je
stos
mov
ss
jl
sub
std
fistl
mov
divb
stos
xchg
cmp
nop
mov
sarl
mov
mov
lds
in
mov
lret
pop
movsl
add
imul
inc
subb
hlt
js
dec
sbb
and
popa
mov
vcvtps2dq
cmpsl
fs
inc
push
jl
dec
mov
stc
cmp
cmpsb
dec
inc
jmp
sub
add
mov
icebp
pop
test
mov
xor
mov
icebp
xchg
pop
xor
push
and
enter
adc
icebp
mov
mov
pop
or
dec
lret
dec
mov
in
inc
jne
ret
mov
sarb
fnstsw
data16
sahf
fwait
aaa
and
arpl
mov
inc
mov
xor
inc
inc
cmp
cmp
mov
cld
ljmp
aaa
stos
mov
xorb
aad
test
cld
mov
mov
jecxz
imul
test
test
popa
in
stos
pop
mov
mov
in
int3
ret
mov
inc
mov
adc
jno
cmp
mov
mov
cmp
mov
je
inc
in
adc
jl
ss
xor
out
outsl
push
fs
repnz
jbe
je
mov
scas
ss
scas
pusha
sbb
dec
cmp
faddp
jb
mov
adc
jns
jb
xor
or
push
imull
sbb
int3
mov
test
lea
scas
daa
xor
pop
lret
add
mov
jb
movsl
sub
sub
push
orl
pushf
loopne
das
dec
cmp
pop
cpuid
cmp
idivl
mov
mov
pusha
lret
lret
hlt
mov
scas
mov
movsb
push
mov
cmpsl
mov
jl
ret
ja
mov
pop
mov
push
xor
int
shrl
in
pop
cmp
std
cmpsl
sbb
fs
mov
mov
orl
dec
xor
aam
sahf
test
add
mov
mov
test
sub
dec
pop
movd
mov
imul
movsl
sub
scas
rcr
pushl
inc
xchg
sub
arpl
push
mov
add
mov
mov
aas
adc
inc
adc
push
fwait
jb
leave
xchg
arpl
push
mov
aas
jp
sub
pop
andb
pop
pop
push
fs
int3
mov
sub
mov
push
xchg
sahf
popf
mov
fisttpl
cmp
lea
or
popa
jb
in
pop
cmp
test
xlat
or
mov
pop
lds
dec
jae
hlt
mov
pop
sbb
add
nop
fdivl
xor
push
jb
lds
aas
testb
fmull
jecxz
or
repnz
cmp
lcall
sub
jl
repz
add
sbb
in
cmp
jl
xlat
add
sub
cmp
xor
pop
loopne
lcall
sbb
int3
es
addl
mov
lret
xchg
fisubrs
scas
insl
aaa
icebp
cmc
mov
stos
ss
lcall
aas
out
int
mov
das
pop
aas
cmp
cwtl
or
ljmp
pushf
movsl
push
out
es
jecxz
jae
dec
xor
sub
lret
imul
out
mov
popf
cmc
ss
jg
push
xchg
nop
fidivrs
and
ret
popl
adcl
sbb
xchg
and
call
mov
mov
lea
ret
sbb
ss
jle
cmc
sti
shrb
pop
sub
add
rcll
test
push
repz
lahf
roll
test
xor
push
pop
mov
xchg
fists
fs
imul
mov
int3
sti
ret
xorl
lock
arpl
jns
xor
and
nop
outsb
test
mov
lret
js
adc
add
repz
ficoms
push
xchg
sub
push
dec
adc
mov
rcrl
pop
dec
gs
jmp
pop
scas
mov
mov
push
pop
in
sub
sub
lods
int3
nop
clc
popf
xor
mov
outsb
ds
push
dec
pop
xchg
stos
add
adc
sbb
popa
xor
fs
pop
loop
cmp
insb
sub
movsl
push
hlt
cmc
lock
push
pushf
lret
scas
cli
push
int3
mov
adc
sub
pushf
jno
in
jbe
cmc
push
mov
adc
mov
int3
movsb
sbb
mov
mov
inc
sub
or
dec
xchg
mov
sub
mov
and
jle
jbe
pop
out
add
stos
mov
ret
cmp
das
push
jae
mov
mov
cld
dec
ret
or
outsl
sti
dec
xor
pop
cwtl
mov
xor
mov
daa
das
jns
jle
mov
cmpsb
inc
ds
in
dec
pusha
adc
inc
jns
fnstcw
mov
lret
xchg
cmp
mov
int3
lea
filds
test
and
lret
or
cmpl
and
test
cmp
testb
or
adc
adc
pushl
insb
push
ffree
inc
dec
je
mov
mov
int3
push
and
repz
repnz
pop
insb
dec
or
xlat
jo
mov
mov
cmp
popa
push
sub
xchg
adc
mov
inc
fnstsw
jle
mov
mov
adc
ja
fcom
adc
mov
cli
ds
lret
xchg
lret
inc
mov
in
lret
sbb
cmp
mov
int3
dec
aaa
jb
mov
into
enter
adc
arpl
cmp
loop
inc
push
xor
out
cmp
xchg
sbb
cld
imul
ljmp
xchg
inc
mov
push
xor
mov
imul
int3
pop
and
xchg
cmc
cmp
mov
push
shrb
and
jb
lods
sbb
mov
pop
mov
dec
dec
jecxz
push
mov
push
repnz
sahf
push
jecxz
test
pop
dec
mov
and
mov
fs
sub
cmp
inc
xor
jecxz
xor
xchg
and
push
aas
mov
sbb
lret
cmc
ret
arpl
pop
mov
xchg
mov
adc
in
aam
adc
pop
mov
jl
mov
cmc
hlt
xor
subb
cltd
xor
int3
push
repnz
pop
cld
arpl
xlat
pop
jo
lcall
fcom
outsl
cmc
imul
cmp
test
mov
dec
subb
sbb
lock
stos
pop
sub
mov
das
add
mov
sarl
xchg
daa
addb
adc
fwait
jp
xchg
in
scas
xchg
fwait
div
arpl
or
and
adc
add
lock
shl
mov
sub
movsb
outsl
xchg
cmp
push
and
pop
sub
push
adc
push
mov
std
nop
mov
xor
stos
lds
scas
pushf
lret
or
sub
jbe
inc
lret
push
adc
mov
jl
xchg
imul
daa
fdivl
add
cltd
and
cld
xor
and
roll
cmp
loopne
in
subl
cmp
cmc
and
into
ficoml
cmpsl
jb
xlat
fwait
dec
xchg
xorb
add
jl
cmc
pop
jp
int3
lock
pop
ljmp
and
push
ljmp
sti
xchg
pop
ds
bound
fwait
int3
sti
inc
outsb
fsubl
repz
fmulp
push
sub
mov
std
dec
adc
fsts
mov
leave
lock
pop
or
mov
sub
and
imull
outsb
or
cmp
nop
sti
lcall
xor
popa
xchg
out
pop
pop
loop
scas
dec
std
movsl
sub
imul
imulb
push
loopne
ret
dec
int3
dec
sub
clc
ss
inc
mov
test
jp
mulb
popa
jg
push
stos
ljmp
lock
or
mov
shl
scas
cs
cmp
mov
lcall
push
xchg
subl
dec
mov
pop
mov
xchg
sbb
sub
data16
andl
or
pusha
lcall
test
xchg
xor
pop
mov
and
movsb
pop
adc
mov
dec
xchg
xchg
or
lock
addr16
sbb
add
cli
fimull
jne
ljmp
xchg
pushf
cmp
jbe
push
push
lock
or
fwait
dec
aad
in
lret
jp
popf
mov
int3
inc
lock
mov
jne
shrb
push
ror
xchg
xor
imul
inc
stos
iret
je
mov
inc
pop
inc
xor
inc
fsubl
jl
fcoml
lret
arpl
sahf
mov
cld
test
mov
hlt
inc
add
lret
popa
in
stos
js
pop
push
sbb
je
jle
std
pop
push
mov
movsl
pop
hlt
mov
pop
pop
inc
push
popa
pop
lahf
dec
mov
orl
jecxz
lret
test
mov
int3
sub
idivl
or
sbb
mov
pop
fsubrs
ss
and
xchg
sub
fistpl
push
mov
pop
push
lahf
mov
shrb
dec
ret
adcb
mul
push
and
mov
cmc
push
mov
fstps
mov
dec
jl
movsl
mov
mov
sbb
xlat
mov
data16
cmpb
clc
add
sub
aas
mov
das
sti
dec
xorl
mov
imul
push
insb
loop
lcall
sub
sub
js
cmp
stos
les
sbb
push
insb
testb
fldt
cs
fcoms
stos
sahf
mov
orb
push
adc
js
dec
loopne
lods
shlb
adc
loop
test
rolb
sub
pop
push
loop
xor
push
pop
std
movsb
push
dec
cli
insb
cwtl
test
push
cli
mov
js
in
stos
mov
cmp
repz
xorb
das
jl
std
leave
xchg
pop
mov
pusha
imul
arpl
cmp
xor
enter
adc
sub
dec
arpl
pop
mov
and
cs
int3
mov
ljmp
inc
cmc
mov
dec
sahf
int3
push
or
lods
out
or
mov
add
mov
in
jo
icebp
loop
sub
outsl
push
stos
dec
leave
andb
fdivs
dec
mov
mov
js
repz
movsb
scas
sub
xchg
mov
sbb
fcoms
mov
adc
mulb
adc
and
fcomps
shl
pop
dec
push
xchg
repnz
cld
jnp
jae
pop
inc
jne
out
xor
filds
icebp
test
cmp
test
push
mov
aam
subb
cmp
xor
jns
xchg
and
loopne
imul
popf
mov
inc
mov
scas
jo
pop
add
addr16
sbb
ljmp
sub
lret
lea
lock
dec
cld
or
push
inc
xor
mov
xor
shr
mov
fildl
mov
pop
cli
push
push
jecxz
and
dec
pop
or
ret
mov
sub
and
push
push
xlat
outsb
push
jnp
scas
nop
insl
inc
ds
adc
nop
scas
lods
and
pop
sub
or
cltd
sbb
push
mov
pushf
lretw
jge
jge
pop
xor
fistps
xor
sub
movsl
daa
movsb
les
pop
outsb
mov
sti
add
enter
ljmp
les
xchg
pushf
push
xor
shlb
mov
leave
out
cmp
ret
popa
loop
int3
in
stc
xchg
stos
cmp
xchg
sbb
mov
push
and
jp
shl
push
mov
inc
bound
imul
nop
jl
xor
daa
lea
cltd
xchg
xor
xchg
enter
leave
std
pop
and
js
stos
inc
mov
sbb
pop
sbb
and
jo
scas
pop
cmp
pop
sbb
stc
fimuls
xchg
adc
mov
mov
or
and
daa
pop
sbb
add
test
sub
cmp
js
dec
test
mov
xor
dec
xchg
std
int3
mov
cmp
outsb
fbld
out
ret
out
es
mov
xlat
jmp
jl
mov
pop
xor
adc
cmp
sbb
lret
cmpsb
daa
test
sub
hlt
sub
test
pop
inc
testl
and
imul
cli
mov
enter
aaa
push
cmp
and
pusha
jl
xchg
adc
mull
sub
daa
mov
mov
int
out
lret
and
jecxz
popf
outsb
xchg
mov
arpl
test
stos
inc
jbe
add
mov
inc
les
mov
ljmp
or
cmp
and
fbld
and
roll
dec
mov
pushf
sub
outsb
xchg
add
stos
sbb
push
cmp
or
mov
out
nop
mov
mov
fbld
cmpsl
pop
cmp
add
xchg
test
push
lods
lea
scas
push
pusha
stos
idivb
js
jb
xlat
mov
mov
aas
sbb
stos
cli
popf
mov
daa
stc
dec
shll
into
xlat
and
sub
imul
dec
sub
fs
stos
mov
pop
mov
jmp
pop
idiv
dec
inc
aas
cltd
mov
lcall
ljmp
mov
call
xor
js
scas
jl
fisttpl
cmp
inc
sub
repz
outsl
enter
scas
jbe
xchg
dec
mov
lret
xor
bound
sti
xchg
popf
jb
push
popf
jo
push
stc
fwait
jae
andl
cmp
jecxz
push
clc
out
popf
cwtl
push
in
aam
mov
xchg
divb
popa
and
ljmp
jb
add
fisubrl
cli
scas
dec
inc
test
mov
gs
andb
test
test
cmc
test
aaa
pop
cmp
sub
int3
mov
lea
call
jl
imul
testl
enter
mov
fcmovnu
mov
das
cmp
lret
mov
data16
rorb
add
imul
mov
cmpsb
pushf
mov
test
xchg
daa
js
lret
movb
and
lods
add
sti
mov
xor
fs
xchg
push
pop
pop
push
mov
mov
lret
xchg
jmp
pop
pop
enter
fildl
mov
mov
stc
cwtl
xor
adc
mov
out
movsb
shlb
stos
add
pop
push
push
imul
pushl
jp
sub
mov
bound
mov
out
jp
xor
xlat
iret
imul
fucomp
push
and
push
and
in
push
leave
and
mov
xchg
pop
adc
jl
adc
mov
dec
lahf
cmc
mov
pop
cmp
stos
ret
inc
xor
lret
jg
out
xor
les
xchg
push
dec
js
jg
mov
dec
loopne
inc
dec
imul
sub
lds
movsb
lret
push
dec
cli
es
pop
insl
cli
sub
add
sub
xor
ljmp
das
shl
cli
ret
daa
inc
mov
int3
dec
and
mov
ret
data16
enter
insl
pop
cmc
adc
sahf
xor
dec
dec
mov
push
mov
or
scas
cmp
lcall
stc
jne
adc
mov
adc
mov
cltd
imul
jp
inc
movsb
lret
push
sbb
sbb
mov
fidivrs
cwtl
dec
scas
outsl
test
jmp
xchg
adc
sub
nop
sarb
std
repz
pop
sbb
pushf
push
xlat
dec
pop
xlat
cli
mov
mov
aas
lret
shll
sub
adc
lock
cli
je
adc
lods
or
xchg
jle
rolb
lahf
and
ja
jp
fnsave
arpl
mov
ljmp
jecxz
mov
push
sbb
jae
cmp
mov
bound
push
repz
leave
pop
repnz
jb
and
hlt
aas
xlat
xor
call
pop
hlt
or
mov
hlt
cld
xor
decl
push
jae
imul
cmp
sbb
mov
pop
mov
cs
lea
inc
jno
lods
loop
ss
jb
daa
iret
cltd
jle
add
lea
daa
lret
cld
fistpll
push
sbb
pop
pushf
xor
xchg
inc
loop
dec
pusha
jne
int3
sub
decb
arpl
sub
lods
xchg
xor
jp
jecxz
inc
adc
imul
push
aad
fisubrl
sbb
mov
push
icebp
pop
or
and
pop
pop
or
inc
add
push
fsubr
push
int3
lahf
pop
xorb
test
sub
scas
push
sbb
and
push
mov
daa
adc
pop
imul
cmpsl
int3
insl
mov
jp
lret
cmpb
jb
or
lret
leave
lock
sti
divb
fs
mulb
sbb
sub
or
into
int3
test
cmpsb
lods
lret
ljmp
or
rcrl
jmp
mov
repz
push
loopne
shlb
je
lret
fildl
jno
pop
sbb
jg
pop
sbb
xchg
xor
push
add
and
test
pop
gs
hlt
lds
jg
leave
inc
test
test
mov
xchg
adc
pop
and
mov
adc
mov
decb
pop
xchg
dec
adc
jecxz
push
test
lret
andl
add
jmp
jmp
lret
lret
movsl
je
cld
lods
test
pushf
cli
insl
scas
arpl
adc
adc
movaps
lret
cltd
cs
or
pop
fldenv
push
dec
adc
adc
cmp
and
int3
jb
scas
push
xor
stc
stos
sub
inc
mov
repz
dec
sti
jnp
imul
frstor
addr16
or
daa
or
xor
test
shll
mov
imul
pop
push
xor
add
lret
and
mov
adc
xor
sahf
stos
mov
fistpll
cmc
test
mov
scas
pop
cmp
mov
lret
ljmp
test
mov
int3
dec
mov
mov
pop
mov
dec
sub
pusha
popf
pop
mov
pushf
cmpsl
mov
adc
mov
movsb
loopne
pushf
lret
pop
push
push
testl
mov
stc
arpl
aad
mov
xchg
popa
mov
lret
mov
stc
aam
mov
scas
cmpsl
int3
xor
dec
xchg
inc
adc
popf
mov
jle
adc
arpl
repz
cmp
lea
mov
pop
cld
jl
rcrb
sbb
pusha
push
scas
repnz
push
jns
call
jnp
mov
inc
leave
sbb
pop
or
int3
testl
outsl
cmp
cmp
in
adc
mov
fdivl
ja
xor
rcrb
add
inc
fsubl
push
hlt
movsl
mov
pop
sarl
sub
test
mov
xor
int3
jno
xchg
xchg
nop
ss
mov
shlb
in
sub
adcl
jmp
xor
insb
pusha
subl
pop
lods
cmc
out
dec
bound
and
dec
fidivs
cld
bound
pop
sahf
inc
daa
sub
outsb
ret
enter
js
movsl
inc
fs
hlt
icebp
int3
cmp
lahf
pushf
lret
loope
out
subl
ljmp
sbb
dec
rol
push
or
es
mov
mov
dec
stc
stos
aam
mov
gs
sbb
lret
add
sub
push
std
repz
bound
xor
mov
mov
mov
jo
aam
stos
inc
cmpsl
pop
insb
shlb
and
hlt
fbstp
jge
or
mov
adc
adc
adc
or
xor
jae
es
xor
aaa
sub
add
xor
int3
push
rcrb
insl
xchg
and
sti
xor
jb
pop
test
dec
loopnew
pop
cmpsb
das
out
dec
rcrb
je
aaa
mov
mov
push
and
adc
push
repz
ss
sub
mov
xor
imul
push
lahf
jl
fstpt
and
xchg
mov
mov
sarb
pushf
cmc
mov
inc
inc
pusha
pusha
into
dec
into
push
cli
rcpps
imul
xchg
nop
dec
xchg
mov
outsl
int3
nop
leave
sbb
out
outsb
cmp
cmp
add
popf
xor
push
jecxz
and
and
pop
xor
stc
pushf
xor
inc
pop
mov
push
and
sbb
or
fistpl
lock
or
dec
jae
fildll
jl
int3
inc
js
mov
jne,pn
mov
and
not
sbb
add
or
sahf
lea
leave
jg
stos
fsts
or
and
das
sbb
xchg
pop
test
sti
and
add
jo
movsl
pop
repnz
lret
xlat
sbb
jmp
inc
jb
imul
xorl
sahf
mov
mov
dec
loop
xor
inc
push
mov
movsb
jle
imul
cmp
or
in
xor
mov
dec
or
push
jo
inc
push
mov
adcb
adc
aam
sahf
stc
scas
nop
hlt
stc
loopne
clc
frstor
or
or
test
adc
inc
mov
xchg
call
aam
or
mov
ffree
into
push
and
popf
cmc
mov
mov
xchg
jae
add
dec
push
pop
xchg
lret
sti
test
xor
in
lods
shrl
mov
mov
mov
ja
ljmp
cmp
and
shr
mov
aam
xor
dec
pusha
daa
into
jg
xor
xor
xchg
push
cmp
dec
adc
dec
pop
into
sbb
daa
pop
je
mov
sbb
lret
aam
sbb
and
ret
call
mov
lret
shrl
xchg
push
mov
loope
pop
out
fldcw
mov
leave
icebp
fisubrl
mov
sbb
shl
xchg
stos
mov
push
call
into
mov
outsl
scas
adc
shlb
dec
fldt
cltd
shlb
repnz
repz
repz
inc
xor
or
cmp
jmp
leave
cmpb
outsl
xchg
mov
mov
out
jg
test
mov
subb
ja
jo
cli
cltd
sbb
imul
dec
cld
push
scas
adc
fisttpll
aad
sahf
cld
dec
add
lea
cmp
mov
cld
jns
test
push
test
xor
frstor
pushf
int3
push
enter
mov
add
imul
sub
lea
xchg
sub
fnsave
mov
clc
sub
dec
scas
int3
and
aaa
xor
xor
sbb
test
rol
outsb
test
pop
and
jb
lret
mov
jmp
sbb
dec
cmp
test
call
and
fwait
int
pushf
push
test
out
rcll
xchg
scas
dec
ret
mov
add
dec
icebp
scas
cmc
or
jmp
mov
or
in
movsb
push
pop
jle
add
lods
xor
and
lret
enter
fwait
test
or
add
mov
xor
sbb
inc
lds
pushf
test
xor
mov
push
lods
add
bound
sbb
pop
movsb
and
sub
sub
in
test
pop
cmc
test
pop
mov
add
popf
insb
sahf
pop
popa
aaa
loope
out
pop
xchg
mov
movsb
mov
and
lret
imul
xchg
mov
out
outsb
mov
iret
xor
movsl
ljmp
sub
mov
xchg
xor
outsb
aad
popa
push
push
mov
or
movsl
lahf
jo
sbb
dec
inc
in
ficomps
push
xor
pop
out
inc
sbb
out
mov
mov
sti
pop
sbb
or
in
int3
xchg
cs
mov
fisttpl
in
call
mov
dec
das
bswap
out
push
fsubrs
jle
pop
dec
mov
adc
push
mov
ret
int3
repz
fsubrl
lret
gs
or
push
sbb
stos
xchg
lock
mov
hlt
xor
fadds
jo
data16
movsl
imul
je
inc
xor
mov
and
sbbb
scas
jae
fidivrl
cli
int3
and
push
sub
ljmp
testb
push
cli
les
mov
idivb
lret
cs
or
daa
std
stos
insb
aam
test
and
int3
mov
adc
lcall
test
lcall
mov
adc
repnz
lock
cmp
loope
mov
xor
adc
mov
cmpsb
sahf
mov
jmp
test
int3
xor
cmpsl
push
jno
pop
into
xor
aaa
inc
fsts
cltd
int3
jbe
xor
jp
loopne
jmp
adcl
jns
stos
mov
push
lret
cmp
xor
sbb
add
cmp
repnz
mov
push
add
sub
mov
insb
sub
out
add
stc
mov
das
mov
or
test
jo
mov
xor
arpl
inc
test
xchg
cmp
scas
dec
xor
test
jmp
scas
cmp
enter
xor
aaa
mov
fiaddl
imul
push
adc
nop
jg
movsb
movsl
xchg
cwtl
cli
ret
lea
dec
push
test
jno
add
xchg
scas
stos
jo
pop
pop
xchg
sbb
lods
jp
sub
lret
xor
or
dec
xorb
cmc
dec
rcr
mov
inc
mov
outsl
pop
loopne
je
lret
stc
inc
hlt
sbb
loopne
insb
fs
push
jae
int3
stos
inc
mov
nop
pushf
cmc
daa
in
int3
lret
xchg
jnp
and
jl
pusha
mov
mov
test
fcmovnu
fwait
aaa
and
addl
xor
mov
hlt
sub
push
jmp
cmp
stos
insb
jno
push
fdivs
sub
test
and
enter
cwtl
movsl
scas
sbb
cli
push
jp
out
ffree
mov
data16
and
push
mov
pop
or
sub
std
scas
xor
add
addr16
jge
add
xchg
lods
aas
lret
and
jnp
out
cmpsl
addr16
std
cltd
in
je
insl
sbb
and
lock
sub
in
int3
and
mov
sub
xchg
and
loopne
imul
das
lret
daa
mov
mov
int3
push
leave
pop
shrb
cmp
addr16
pushf
pushl
lahf
bound
imul
int3
push
mov
movb
push
sahf
add
mov
and
je
dec
cltd
aam
out
jo
pop
inc
push
mov
or
mov
inc
push
std
pop
add
test
shlb
pop
and
dec
jae,pt
mov
add
loop
xlat
inc
jnp
adc
fdivr
ljmp
leave
mov
mov
inc
leave
mov
pop
bound
sbb
lea
jp
dec
insb
and
pusha
cld
nop
shlb
xor
dec
inc
icebp
mov
out
adc
push
insb
inc
inc
or
xor
sbb
stc
xchg
mov
bswap
push
repz
std
pusha
lods
jae
test
xor
int3
jg
mov
iret
cmc
ror
jb
nop
pop
sub
or
out
not
shlb
dec
fiaddl
popf
int3
sub
divl
lret
pop
or
inc
sub
xlat
push
jecxz
jbe
rclb
sti
jo
aam
dec
sbb
scas
lret
arpl
and
sub
mov
jge
cld
jae
mull
push
mov
int3
dec
xor
outsl
push
jecxz
movsb
lret
dec
adc
mov
pusha
push
loop
cmp
or
ud1
fists
cmp
out
push
lea
mov
dec
and
idivl
cmp
push
ret
inc
mov
push
scas
mov
adc
out
jb
add
dec
stos
sbb
out
insb
jo
add
xchg
fmul
cmp
cmc
in
push
add
jbe
pop
lea
pusha
lcall
jo
dec
pop
or
jecxz
xchg
insb
sub
inc
ds
pop
nop
cmp
xor
lcall
int3
adc
ret
out
rcrl
mov
inc
mov
mov
testl
jne
jmp
xor
xor
jp
test
pop
push
and
aam
mov
lret
fisttpl
push
xchg
jbe
adc
bound
xor
cld
js
hlt
data16
outsl
sbb
movsl
int3
fcom
testb
inc
ss
and
mov
cmc
int3
movl
inc
pop
cltd
mov
mov
xchg
jge
xchg
pop
adc
test
adc
pop
in
jge
and
loopne
loope
push
outsl
lock
inc
pop
and
mov
dec
push
or
call
mov
insb
add
jae
shlb
loope
mov
adc
fistl
jge
mov
mov
adc
xchg
pushf
in
ss
add
dec
add
add
pop
inc
cs
shrb
int3
out
xchg
mov
xor
idivl
jb
lret
in
add
jb
or
int3
jbe
xchg
pop
sbb
inc
je
fs
pusha
imul
adc
pop
mov
andnps
sub
js
pusha
inc
ss
ret
mov
mov
clc
popf
das
sti
mov
lds
jno
cmp
int
mov
cmp
dec
push
push
call
aam
pop
imul
adc
sub
mov
lock
movsb
push
scas
stos
push
movsb
call
xor
jecxz
sbb
push
mov
in
lock
movb
repnz
adc
inc
incb
test
sub
mov
lea
mov
and
mov
cmp
leave
rclb
cwtl
xor
loop
sub
shl
xor
xchg
inc
mov
xor
loope
cmc
sub
daa
into
faddl
jns
pop
sub
ret
clc
jmp
mov
mov
fidivs
loope
push
sub
pop
sti
adc
sbbl
mov
mov
xorl
xchg
test
int3
repnz
sbb
pushf
jle
dec
mov
sahf
gs
shrl
mov
cmp
mov
xchg
dec
lret
sbb
stos
sub
fists
xor
lcall
mov
fnstsw
xchg
dec
mov
jp
push
test
add
repz
xchg
mov
daa
subl
sbb
sbb
mov
cld
lea
lock
fistl
jae
shl
pushf
dec
addr16
lret
push
add
inc
mov
sahf
xchg
js
cmp
rcrb
dec
mov
jecxz
stos
push
xchg
pop
dec
inc
int
add
lock
push
rcrl
xlat
out
push
xor
lret
es
jb
sti
mov
ficomps
cmp
in
shlb
mov
or
aas
mov
or
sbb
fistpl
lcallw
dec
xor
std
jo
sub
mov
xchg
and
rorb
test
mov
ja
testb
jmp
lcall
mov
jge
mov
fs
cld
imul
sub
cmc
out
adc
orb
jge
push
xchg
iret
sbb
lret
cld
imul
or
push
sub
pcmpgtb
cmc
sbb
mov
lret
rcr
xor
lret
and
dec
iret
inc
push
and
pop
jns
cmpsl
in
pop
repnz
sti
push
stos
test
shrl
mov
lret
and
sub
add
pop
fwait
pushf
mov
gs
les
movsb
mov
adc
and
incl
and
rorb
jbe
xchg
sbb
adc
pop
mull
mov
ds
pop
lret
mov
fmul
scas
insb
cmpxchg
mov
pop
fwait
jp
popa
pop
jo
mov
pusha
xlat
sub
mov
cmp
cmp
arpl
cmpsb
repnz
jg
mov
pop
ror
push
mov
nop
adc
in
insb
mov
jp
jb
pop
lods
test
daa
add
sbb
cmc
xor
aad
pop
push
sbb
mov
add
xor
mov
mov
cmpsb
sub
push
dec
inc
sbb
cmp
popa
mov
rcrb
icebp
pop
push
insb
test
int3
les
in
mov
aam
test
scas
movsb
push
cmc
lea
lahf
fnsave
pop
mov
in
popa
mov
movsb
sbb
mov
inc
xchg
jo
fdiv
mov
sahf
int3
mov
lahf
cld
cmc
rol
andl
xchg
jmp
imul
push
mov
sbb
daa
xor
cs
fisubs
push
mov
popl
and
mov
sub
and
movsb
mov
nop
jo
and
cltd
adc
adc
xchg
mov
int3
or
cmpsb
dec
cld
mov
adc
adc
adc
mov
in
in
xor
pop
lds
sub
push
leave
jo
ret
sbb
xor
fdiv
int3
cmpsb
cmp
adc
push
pusha
xchg
inc
mov
repnz
pop
sub
cli
inc
lds
sbb
mov
mov
das
push
mov
lret
insb
stc
push
imul
and
dec
cs
mov
pop
sub
xchg
sub
in
cwtl
inc
and
mov
mov
xor
addr16
mov
sti
mov
int
push
dec
pop
push
pop
xchg
mov
insl
leave
pop
push
mov
fcomp
rorl
jcxz
sub
fstpt
sub
lret
dec
stos
mov
dec
out
push
rcrl
mov
jns
dec
lods
dec
into
and
les
xchg
jne
pusha
sub
sbb
adc
mov
icebp
sbb
popa
push
mov
aaa
xchg
aas
fstpt
mov
icebp
int3
xor
in
jecxz
cwtl
lret
mov
mov
sbb
jno
subl
add
arpl
push
dec
jnp
xor
dec
dec
cmp
cmp
dec
pusha
loopne
mov
mov
xor
or
ss
lret
sbbb
and
xchg
or
std
push
add
shlb
pop
cs
iret
adc
cwtl
sub
lods
sbb
mov
xchg
xchg
mov
xor
std
fisttps
and
mov
mov
iret
das
int3
leave
mov
dec
sbb
lahf
jl
sub
dec
mov
movsl
lcall
pop
div
in
add
jb
adc
push
push
pop
je
push
les
test
mov
mov
mov
outsl
or
rclb
push
sub
test
xor
loop
inc
scas
sub
lods
popa
je
lret
repnz
and
cli
mov
cmpsb
mov
adc
sub
push
or
sbb
mov
lods
mov
cmp
add
add
mov
fistpll
mov
jp
mov
popa
pushf
test
mov
sbb
push
es
mov
cli
ja
out
dec
out
aaa
mov
push
lret
imul
fstpl
repz
mov
jmp
add
cmpsl
lret
mov
imul
push
push
loop
push
mov
jl
fcoml
xchg
subb
mov
cmp
enter
daa
add
xor
fisttpll
cs
mov
sub
insb
xchg
shlb
cwtl
rorl
cmpsl
test
lods
leave
stos
fs
push
mov
hlt
mov
fcoml
xor
add
mov
add
mov
sub
xchg
and
inc
add
in
sub
ret
push
xor
inc
mov
clc
pop
in
rclb
pusha
xchg
adc
xor
mov
mov
push
mov
sbb
std
mov
inc
xchg
scas
fnstsw
shll
pop
std
cmpsb
xor
and
and
out
xor
stos
cmp
dec
cltd
adc
sbb
jbe
test
loopne
aas
nop
push
jmp
cmpsl
pop
sub
xchg
int3
mov
jns
je
sti
iret
adc
das
jae
cmp
cmp
mov
jge
xchg
jecxz
movsb
test
mov
dec
cltd
push
mov
mov
adc
or
mov
mov
cmp
mov
or
out
imul
pushf
pop
fnstsw
sub
dec
frstor
sbb
xchg
lock
adc
scas
std
xchg
std
fstpt
push
mov
data16
fistpll
dec
dec
lea
mov
dec
mov
push
fldl
mov
inc
cmp
mov
test
adc
pop
adc
jecxz
imul
lea
imul
daa
jo
pop
int
dec
xor
or
inc
add
xchg
sbb
scas
adcl
cmp
xchg
scas
jge
push
insb
mov
xchg
lock
cmpsl
aas
cs
test
sub
pop
fsubrl
loopne
sub
pop
fs
shll
fidivs
and
lods
daa
scas
cli
repnz
sub
xchg
and
mov
mov
jg
and
test
insb
arpl
cmpl
stos
leave
jb
popa
xlat
mov
pop
cmp
mov
jne
sub
movsl
xor
sbb
insl
mov
dec
dec
pop
jb
push
inc
dec
and
sub
mov
mov
push
mov
int3
lret
pop
decb
orb
mov
sbb
cmc
out
gs
push
and
jo
mov
mov
lret
xlat
lds
enter
fwait
sbb
mov
xchg
int3
imul
cwtl
fpatan
outsl
cwtl
push
inc
arpl
sub
cwtl
icebp
sbb
sahf
aas
pop
jb
loop
clc
repnz
pop
stos
mov
push
mov
neg
lcall
push
add
fwait
lret
cli
jle
dec
mov
shlb
mov
inc
lcall
dec
add
push
dec
mov
in
pop
mov
mov
sbb
adc
jne
cmpsl
mov
cmp
iret
mov
nop
mov
loopne
pop
in
mov
xchg
lahf
insb
xchg
and
mov
inc
pop
sbb
shl
dec
mov
dec
stos
and
fisubl
aam
lock
xorl
rol
lret
inc
mov
cwtl
xlat
cmpsb
imul
addr16
cmpsb
popa
les
xchg
stos
cmp
out
ss
lret
clc
test
pop
inc
mov
jg
repnz
test
data16
int3
sarb
and
bound
insb
arpl
int3
data16
scas
dec
jle
ja
rcrb
push
sahf
lcall
inc
xor
imul
out
popf
into
jae
sbb
jle
sub
test
pop
mov
jns
mov
and
dec
sub
push
inc
insl
mov
fcomip
adc
push
int
xor
mov
cld
movsb
aam
jae
jns
or
jge
cmp
pop
imul
rcrl
cmp
xchg
js
and
cmp
lret
dec
xchg
pop
and
mov
ret
jno
aam
lods
adc
adc
pop
or
in
sbb
and
out
and
lods
aam
insb
bound
xlat
mov
sub
adc
jb
cmpb
mov
imul
ret
xchg
push
cmp
outsb
mov
fmull
dec
shlb
rcl
aas
and
cmpsb
stc
mov
je
aaa
je
stc
jnp
test
pop
je
int3
imul
xor
and
sbb
pusha
mov
dec
cmc
xchg
inc
adc
nop
pop
add
lock
push
add
push
ja
daa
xor
cmp
cmp
jns
mov
mov
adc
inc
sub
sahf
rcrb
add
mov
mov
ficompl
cld
pop
dec
rclb
sub
push
or
dec
test
addr16
in
sti
add
pop
xchg
hlt
pop
jp
push
adc
jle
xchg
es
pop
mov
lods
test
xor
xchg
lret
or
lods
dec
jl
femms
arpl
daa
loop
jp
les
mov
data16
aaa
test
jmp
and
pop
mov
mov
mov
sbb
pop
aaa
fmull
mov
xor
test
cltd
shl
mov
and
das
aaa
daa
push
xchg
outsb
stos
jl
sbb
mov
mov
xchg
mov
sub
xchg
fcoms
xchg
mov
popa
push
push
int3
xor
and
cmp
sbb
scas
fnstsw
and
mov
add
int3
fcoml
pop
push
shrb
andl
test
in
cwtl
popa
jmp
fimull
mov
inc
sbb
lea
mov
sub
lods
stc
cltd
gs
jnp
add
or
push
or
data16
pop
std
rorb
clc
sub
adc
arpl
push
pop
jmp
mov
in
sub
das
repnz
or
pop
mov
hlt
mov
cwtl
mov
cmc
mov
and
into
mov
pop
sbb
dec
push
and
lds
fistpl
aad
jo
jmp
jg
scas
mov
movsl
lea
or
cmc
xchg
sbb
scas
dec
stos
out
add
test
daa
arpl
sbb
lret
push
ret
sub
dec
sbb
dec
add
inc
int3
call
add
cwtl
lret
inc
pop
xchg
cmp
mov
lret
pusha
imul
cmc
mov
lcall
test
loope
sbb
mov
stc
nop
mov
leave
nop
daa
xor
imul
imul
jb
cmp
mov
cld
cwtl
stos
insl
and
pop
sti
movsb
xor
mov
and
dec
mov
and
int3
sub
nop
fstpt
ror
sub
scas
addr16
sub
lock
aas
faddp
mov
inc
aaa
clc
lock
testl
or
ss
xor
stos
or
pushf
dec
stos
ret
mov
test
lret
in
lock
movsl
and
aad
xchg
push
loope
or
pop
stc
push
loopne
xchg
xchg
sahf
pop
mov
mov
inc
iret
cltd
mov
push
cld
cs
jo
stos
scas
or
ss
test
mov
mov
inc
cmpsb
cmp
and
clc
outsl
dec
mov
mov
in
lret
xor
xor
bound
xchg
jmp
xor
xor
sub
sub
shll
mov
cli
test
mov
dec
mov
or
fstl
orb
xor
mov
cli
into
lahf
nop
xchg
inc
test
adc
test
xchg
call
pop
cmpsb
cli
pop
aam
xchg
iret
sahf
movsb
sub
je
ret
daa
jns
or
rcrb
mov
lods
adc
repnz
jns
fistpll
dec
push
test
stos
push
sbb
jecxz
mov
test
pushf
int3
jp
loope
icebp
gs
jb
cld
mov
xlat
inc
cmpsb
xor
xchg
add
or
adc
sbb
jge
int3
inc
pop
test
cmpsb
fisubrs
mov
stos
or
xchg
out
dec
mov
xor
push
fcoml
jl
jno
lods
dec
pusha
or
pop
mov
jb
lret
mov
xor
daa
mov
shrl
mov
mov
hlt
in
cld
dec
sbb
loopne
jo
mov
and
fnstsw
cmpsl
std
lret
mov
sbb
stos
imul
testl
inc
lret
pop
mov
movsb
sub
dec
imull
push
cmp
pusha
cmpsl
loope
lcall
inc
ret
xchg
test
aam
add
sbb
or
xchg
cltd
fadd
cmp
clc
or
in
cmc
jecxz
dec
je
mov
add
inc
mov
xor
sbb
repnz
bound
loope
aaa
or
insl
je
push
lods
into
push
fs
lret
shll
inc
call
adcl
fcompl
jo
inc
cltd
pop
in
cmc
xor
jmp
nop
mov
lods
and
cmp
xchg
pop
test
pop
sub
push
mov
and
push
stc
es
or
mov
pop
test
lock
in
mov
dec
fiaddl
xor
hlt
je
and
push
lret
add
mov
data16
mov
lods
mov
mov
int3
xchg
push
into
dec
stos
inc
add
addl
sahf
jno
adc
ja
bt
mov
mov
ds
xor
sub
push
adc
or
xor
dec
cmp
imul
cmp
xchg
int3
sbb
push
jo
or
gs
jg
inc
call
add
and
aaa
push
push
in
push
push
popa
out
jmp
pop
sub
int
ss
push
loop
add
and
jbe
inc
incl
int3
std
push
jnp
test
outsb
outsb
pop
into
jle
mov
adc
jmp
push
mov
xchg
mov
scas
cmp
scas
sbb
lret
aam
sbb
int3
mov
lret
test
les
sbb
add
sbb
or
repnz
adc
inc
jle
mov
fstpl
mov
inc
dec
or
jle
divl
push
xor
gs
insl
or
das
int3
xchg
sub
mov
pushf
sti
jge
sbb
insb
pop
in
lea
test
pushw
js
fstl
xor
mov
arpl
outsb
sub
inc
lahf
jmp
adc
xor
leave
pop
insl
push
push
dec
sbb
sub
xor
aam
imul
sbb
sbb
fmull
cwtl
inc
push
lds
adc
ror
adc
pop
mov
pop
sbb
jo
pop
push
sbb
imul
movsb
adc
lea
pop
into
push
imul
arpl
ret
bound
int3
nop
orb
jp
mov
dec
cwtl
sub
and
btr
xor
mov
icebp
mov
cmp
inc
pop
outsb
mov
jle
int3
sarl
cmp
out
dec
xchg
pusha
test
and
imull
pushf
jl
jbe
aas
imul
mov
mov
shlb
inc
mov
pop
jl
sahf
sti
or
or
push
repnz
shlb
and
mov
addr16
jb
ds
push
sub
mov
add
popf
fsubl
pop
popa
xchg
pop
sbb
lret
add
xchg
outsb
call
sahf
sbb
imul
popa
or
das
xchg
and
nop
xor
jno
mov
lock
lods
cli
jecxz
xor
rcrl
inc
xchg
shr
jge
pop
shr
arpl
sbb
loope
es
mov
mov
xchg
adc
in
jg
pop
mov
mov
mov
rorb
fisttpll
dec
sub
movsb
das
mov
into
in
push
pop
fsubs
push
ss
mov
lods
enter
mov
pop
mov
push
dec
cwtl
xor
jne
fs
stos
xchg
jbe
and
mov
mov
pop
cmp
sub
xchg
xor
insb
outsb
sub
movsl
mov
xchg
loope
test
cli
es
cmp
mov
cwtl
ds
xlat
pop
leave
and
inc
push
jno
xor
leave
xor
daa
adc
sub
fmull
imul
out
xlat
or
ret
pop
sub
xchg
mov
loopne
lea
sub
add
jbe
mov
pusha
stc
ret
mov
lret
mov
ljmp
out
or
les
add
push
lcall
pop
jl
sbb
or
sub
pusha
cmp
int3
cli
inc
inc
xchg
pop
lret
pop
jne
mov
mov
add
bound
imulb
scas
int3
pop
fucomp
pop
sbb
jae
cmc
sti
into
xchg
xor
repz
mov
add
popf
clc
or
push
std
xlat
jbe
pushf
iret
cmp
imulb
cmpsb
cmp
cmp
daa
les
xchg
mov
pusha
pop
and
push
mov
jo
in
and
stc
jle
lods
and
jecxz
inc
xchg
popa
dec
decb
jns
movsl
adc
in
xchg
pop
ja
ret
icebp
push
adc
lods
and
jl
mov
adc
inc
int3
dec
ss
pop
mov
data16
push
loope
stos
mov
out
mov
inc
cltd
pop
cmpsb
cvtpi2ps
idiv
inc
xchg
dec
lock
stc
iret
stc
ret
or
jmp
and
stos
hlt
xchg
mov
mov
stos
sub
or
outsb
lds
and
xor
jns
jnp
push
inc
sahf
orb
mov
xor
mov
or
incb
arpl
sbb
gs
hlt
xchg
mov
in
jo
fstps
pop
sub
out
leave
rcll
scas
jbe
dec
in
loopne
popf
movsb
int3
icebp
mov
neg
imulb
cmp
in
cwtl
sub
xchg
mov
pop
insb
push
sahf
popf
test
lods
lods
loope
test
cmc
loopne
xchg
pushf
enter
leave
sub
lahf
mov
test
shlb
lods
stc
push
xchg
xor
pop
mov
or
pop
stc
fmul
pop
decb
stc
jo
push
mov
mov
sub
fucomp
jge
loopne
in
sub
es
sub
push
xchg
hlt
ret
ret
test
sbb
mov
sub
sbb
stc
xchg
lds
push
bound
pop
mov
sub
daa
pop
ret
sub
mov
xchg
in
cmc
adc
test
xchg
jg
xchg
and
popf
clc
or
cmpl
aaa
mov
lock
pushf
add
or
pop
jae
idivb
and
dec
mov
xchg
movb
mov
out
mov
cmc
test
or
sbb
scas
adc
cs
lea
push
stos
dec
sbb
lret
adc
icebp
mov
push
pushf
pop
out
hlt
popf
stos
sub
daa
jp
inc
dec
jg
mov
adc
xor
jecxz
jns
push
scas
insb
pop
popf
lcall
push
sbb
pushf
out
imul
test
mov
ljmp
mov
hlt
sahf
and
xor
mov
inc
gs
in
lds
sbb
cmpsl
dec
mov
dec
test
inc
pop
iret
jecxz
data16
pop
nop
outsl
loopne
add
mov
scas
mov
sub
pop
xchg
adc
mov
subb
rcll
adc
push
sub
pushf
fnstcw
test
clc
cmp
insb
jae
test
dec
pushf
xchg
cltd
xor
into
int3
std
push
rcrb
jl
lcall
or
lock
mov
push
cmc
inc
inc
stos
xchg
aad
orb
lret
xor
xor
lss
push
dec
cmp
fxch
mov
mov
aas
insb
cld
aaa
stos
push
mov
push
lock
mov
pop
pop
insl
ret
out
int3
sbb
push
cmc
mov
js
loopne
dec
sbb
sete
insl
ljmp
sahf
push
aad
dec
ss
pop
jb
aaa
jnp
mov
xor
pusha
sti
mov
pushf
jp
shlb
pusha
fisttpll
loop
lret
jecxz
sub
cmc
inc
fisttpl
mov
leave
popf
sub
xchg
xor
cmp
out
sbb
shrl
mov
add
sub
rcrb
cmc
dec
data16
jbe
aaa
sbb
xchg
jmp
popa
and
rolb
shl
sbb
test
mov
idiv
cmp
and
mov
leave
inc
mov
mov
inc
xor
push
push
jge
cli
add
int3
lods
scas
or
and
inc
imul
int
repnz
xchg
jmp
clc
inc
xlat
or
int3
out
and
popf
mov
cmc
lea
mov
pop
arpl
bound
push
mov
or
mov
int3
jge
mov
fstl
cmc
cmp
add
dec
insl
mov
js
test
in
dec
fst
test
sub
leave
pop
mov
loop
sub
lret
cmpsl
ficomps
repnz
in
pop
sub
cmp
sub
mov
fldenv
push
cltd
push
ss
imul
and
jl
je
or
bound
ret
int3
insl
aad
movsb
shl
cmc
and
pusha
xchg
es
cwtl
je
cltd
mov
sub
fmull
and
cmp
lcall
fdivrs
cmc
mov
and
or
jbe
out
and
mov
mov
mov
inc
jmp
xor
inc
mov
mov
int3
adcl
mov
jmp
pop
sarl
test
cmp
jno
subl
test
aaa
xor
das
mov
scas
jmp
xor
sahf
cwtl
test
pop
push
pop
mov
dec
push
out
sarb
mov
test
xor
cld
push
pushf
je
push
aas
aas
movsl
xchg
stc
add
lea
xchg
cmpsl
jbe
int
mov
out
rcr
pop
cli
jg
add
and
pop
add
mov
mov
and
pop
mov
stos
sbb
xor
mov
xchg
cmc
pop
pop
cmpb
imul
scas
subl
ret
mov
ds
cwtl
dec
fnstenv
inc
int
mov
cs
loop
or
xor
lea
push
stos
sahf
push
scas
iret
mov
stos
xchg
int3
nop
or
push
sbb
adc
jb
mov
jnp
mov
sub
dec
bound
push
cli
adc
test
fs
xorb
outsb
xchg
insb
cmp
pop
ret
xor
hlt
hlt
sbb
xchg
push
mov
xlat
shl
cmp
mov
push
jae
mov
sbb
pop
mov
jbe
dec
je
mull
xchg
iret
pop
mov
xchg
lahf
mov
or
imul
dec
cmp
movsl
cmc
xchg
dec
subb
mov
popa
fsubrl
call
xchg
pusha
int
dec
pop
enter
jl
and
dec
pushf
fwait
out
mov
dec
xor
mov
stos
sub
mov
dec
adc
in
and
pusha
jecxz
pop
push
shrl
loop
aaa
xchg
push
pop
cwtl
in
sub
push
icebp
test
out
ret
jnp
and
popa
push
or
pusha
popa
push
popf
bound
jmp
out
bound
fildl
mulb
xchg
enter
test
and
mov
popa
mov
xchg
scas
js
out
insb
xchg
push
xlat
adc
les
push
fisubl
pop
sbb
fs
xor
out
popaw
mov
cli
movsb
fists
xor
and
cmp
mov
ja
cwtl
xchg
and
test
pop
sub
mov
cmpsl
lret
std
mov
push
mov
fistps
in
jne
mov
jmp
sbbl
cmp
jb
dec
cmc
or
xor
jge
xchg
pusha
fdivl
dec
mov
pop
lods
fwait
cmp
icebp
xor
jbe
xchg
and
aaa
ret
push
inc
mov
cmp
sahf
gs
movsl
sbb
adc
pop
adc
mov
into
ret
mov
ret
cmp
mov
repnz
adc
jb
mov
mov
cmp
adc
fcompl
or
jg,pn
mov
pop
sbb
xlat
xorl
inc
je
cli
lods
adc
jb
sub
inc
lock
leave
mov
and
faddp
call
jns
adc
rcrl
out
scas
lret
mov
mov
or
test
fimuls
in
cmc
dec
jne
xchg
test
ret
mov
leave
nop
outsb
add
movsb
test
mov
xchg
mov
dec
sbbb
xor
dec
and
sti
leave
lret
xchg
pop
sub
fstpl
dec
in
inc
stos
divl
data16
pop
mov
xorb
lret
push
scas
adc
pusha
addb
ror
jmp
push
mov
fistl
mov
repz
pushl
jo
jne
call
clc
scas
dec
xor
xor
js
icebp
scas
xor
imul
cld
lahf
xchg
adc
bound
mov
mov
mov
mov
mov
sbb
mov
leave
push
fbstp
movsl
adc
loopne
test
xchg
std
pop
lcall
fsub
cmc
sub
pop
push
lret
xor
push
lods
imul
add
and
pop
mov
sub
stos
lret
adc
dec
cmp
cmc
cmp
adc
rcl
sbb
in
or
insl
sbb
fstpl
jecxz
mov
or
jl
and
lret
xlat
jmp
sbb
mov
mov
pop
test
lods
push
aaa
xor
lock
clc
ficoms
xchg
xchg
insb
push
lret
add
pop
mov
cmp
mov
cld
xchg
pop
lret
dec
cltd
int3
stos
lcall
lcall
cmp
push
mov
xor
and
fistps
ret
inc
shll
mov
addr16
pop
jb
push
push
mov
data16
jb
adc
rcrb
inc
jne
shrl
je
je
mov
cmc
fcmovne
outsb
cmp
jmp
dec
shlb
xchg
lcall
out
mov
lret
and
imul
outsl
add
lcall
push
sbb
push
push
pop
bound
cmc
lds
sub
dec
mov
sub
hlt
cmpsb
sti
pusha
inc
je
sub
jmp
pop
mov
sub
dec
lds
mov
imul
cmpsb
fimull
in
shrb
pop
jb
mov
and
push
pop
fwait
loope,pt
test
push
addb
sbb
push
dec
test
stos
lods
lret
loope
repnz
gs
xor
mov
and
mov
mov
sub
pusha
or
scas
xor
lret
icebp
push
mov
mov
mov
jae
cmp
enter
xor
sub
ffree
and
lret
in
test
cmpl
cltd
fidivrs
rcll
add
dec
scas
cltd
xchg
mov
adc
lret
push
mov
adc
nop
dec
movsb
inc
fsubrl
or
push
mov
sarl
fildl
sub
movsb
jge
cmp
inc
cltd
mov
or
push
add
nop
and
sub
mov
daa
push
nop
push
jmp
fs
mov
adc
pop
mov
cmc
aam
mov
leave
pop
add
das
jo
test
xor
pushf
loop
sub
inc
push
add
int3
fmul
push
add
inc
cld
icebp
fstl
sub
test
hlt
mov
test
sub
jecxz
push
pop
and
jo
shll
mov
cwtl
jmp
cwtl
movsl
sbb
lock
jno
xor
les
popa
pop
xchg
repz
ficompl
mov
pop
int3
mov
mov
repz
subb
mov
or
stc
xor
fs
in
mov
out
cld
popf
or
cmpb
mov
int3
pop
jg
scas
test
imul
dec
push
adc
dec
scas
div
jg
mov
loope
int3
mov
sub
lret
lods
and
mov
cmp
xchg
mov
xor
mov
push
fs
mov
dec
mov
mov
repnz
and
cmp
int3
adc
and
pop
adc
dec
stos
loop
xchg
popaw
scas
lret
cltd
or
int3
mov
xchg
mov
pop
push
ret
push
lods
dec
pushf
shlb
jno
mov
push
mov
xor
inc
mov
call
daa
aas
xor
jo
or
jmp
imul
pop
and
push
pop
pop
xchg
jecxz
fs
cli
rorb
or
pop
incb
fcomps
adc
stc
loope
lods
or
xlat
mov
sbb
push
mov
lret
dec
sub
adc
jp
mov
lahf
adc
push
test
jg
mov
mov
adc
dec
or
dec
dec
xor
or
addl
sub
push
mov
leave
jmp
js
xor
add
iret
xlat
xor
stc
add
inc
aaa
pusha
cmc
popf
lret
mov
bound
mov
mov
icebp
xor
push
fldl
stos
and
cmp
mov
scas
pushf
lret
mov
add
icebp
data16
add
test
mov
int3
mov
fimull
call
mov
fwait
xor
and
xor
std
cltd
shll
testb
adc
in
xor
xchg
mov
lret
sbb
inc
xchg
lret
cmp
pop
pushf
mov
and
stos
xor
stc
lret
dec
ja
push
insb
mov
les
loopne
or
dec
test
scas
sub
cmpsl
xchg
out
or
cld
notl
pop
mov
int3
rcll
pop
dec
imul
jo
test
imul
aas
cmc
rolb
mov
push
lret
fnstcw
repnz
fs
add
xor
clc
ficoml
dec
mov
mov
and
or
inc
adc
fnstsw
test
inc
mov
out
fildl
outsb
lret
imul
and
push
aad
pop
into
xor
push
cmpsb
dec
inc
lock
ret
in
out
adc
adc
imul
or
xor
popa
dec
mov
push
pop
hlt
imul
mov
and
int
ja
sub
cmp
xor
stos
add
and
and
jmp
sub
jge
mov
in
jo
fsubrs
inc
shrb
push
inc
lret
sbb
shld
lret
test
jl
mov
cmc
out
xchg
mov
dec
jl
jecxz
outsb
mov
adc
lock
inc
or
int3
xchg
popa
sti
push
jle
daa
xchg
js
dec
inc
sub
xchg
mov
lahf
ljmp
jle
test
mov
add
dec
mov
loopne
xchg
int3
push
loopne
sbb
stc
push
je
jecxz
and
aas
lret
je
mov
xorl
push
pop
lret
negl
filds
arpl
in
dec
mov
mov
inc
pop
pop
testl
xor
mov
adc
pop
pop
push
jmp
dec
loopne
or
pop
imul
cmpsl
mov
hlt
popa
and
fcmove
pop
scas
dec
das
sub
stos
adc
hlt
out
xchg
mov
aaa
sbb
xchg
ret
jo
fstps
and
mov
sub
mov
jecxz
and
jae
xchg
jns
xchg
mov
mov
pop
xor
and
mov
sub
jecxz
and
mov
mov
iret
pushf
mov
lods
or
iret
out
mov
and
lds
andnps
int3
adc
clc
mov
std
mov
add
nop
clc
xchg
std
fimuls
and
mov
xchg
sbb
stos
mov
in
push
imulb
push
call
hlt
xchg
cli
out
pop
mov
mov
push
mov
jbe
mov
imul
mov
inc
in
jl
ret
imul
xor
cmc
popa
adc
sub
inc
cs
out
int3
es
je
mov
fisubrs
or
leave
int3
or
je
sub
rorb
mov
loop
aas
dec
test
push
pop
lret
push
hlt
adc
and
in
and
or
scas
push
push
int3
bound
sarl
test
leave
pop
js
inc
popa
mov
jns
sub
mov
outsb
inc
mov
mov
push
fdivrl
lret
insl
mov
outsb
or
outsb
and
push
sub
daa
sub
adc
jbe
shrb
cmc
mov
adc
xlat
arpl
lods
mov
popf
loope
jecxz
lds
adc
sbb
sub
push
ds
dec
mov
movsl
daa
js
loopne
push
sti
imul
std
clc
jae
xchg
popa
pop
test
repnz
aam
and
es
lea
movsb
lcall
cmp
and
mov
cmpsl
fisubl
jae
add
and
clc
repnz
lret
test
pop
sbb
jb
mov
fcomip
lcall
aas
lahf
xchg
xchg
iret
push
mov
mov
jg
lret
sub
inc
xchg
lahf
in
xor
pop
in
or
sbb
sbb
push
lar
mov
push
push
rcll
pop
movsl
push
repz
cld
loopne
sub
adc
fsubs
or
mov
in
xchg
gs
nop
mov
out
sar
mov
pop
dec
push
push
sub
mov
mov
mov
inc
xor
hlt
js
mov
dec
mov
mov
lret
in
mov
or
sar
cmp
inc
or
cli
xchg
insb
sarb
push
xor
sub
pop
cmp
cwtl
int3
lock
adc
sbb
loope
mov
sub
sbb
jnp
cld
sbb
push
push
in
ja
sti
and
mov
sub
push
push
fbld
shll
cmpl
push
cli
mov
mov
xchg
jmp
cli
ljmp
mov
in
mov
mov
fsubs
test
or
movsb
sbb
arpl
in
addr16
pushf
fildll
cmp
mov
fdivr
mov
or
push
divl
xorb
pop
test
je
int3
lds
adc
lods
dec
sbb
mov
mov
xchg
jnp
pop
mov
or
mov
sbb
fidivl
add
test
aad
cmp
std
cmpsl
push
mov
stc
mov
outsl
mov
out
xchg
pop
bound
pusha
dec
inc
or
ss
bts
fsubp
push
xchg
adc
enter
cmp
jne
fidivs
or
push
bound
leave
pop
imul
push
xchg
fbld
inc
cwtl
cmp
mov
jno
inc
dec
test
arpl
inc
sub
stc
and
loop
das
movsb
or
fbstp
xchg
pop
sbb
xor
xlat
rolb
arpl
std
mov
das
sub
mov
int3
jmp
jne
pop
out
incl
mov
pop
out
les
mov
out
sbb
test
add
push
cmp
fisubrl
push
lret
cwtl
mov
sub
mov
mov
jbe
aas
fs
je
cmp
cmp
sub
push
cmp
fdivs
jae
jno
jno
mov
pop
push
clc
xlat
sahf
mov
movsl
push
adc
lock
jp
cmpsb
int3
loop
int3
and
loopne
xor
dec
sar
mov
hlt
lret
push
cli
ret
js
mov
mov
mov
lret
mov
xchg
lods
cmc
aam
push
popa
js
out
mov
ja
and
aaa
dec
jo
or
les
imul
pushf
jno
mov
inc
or
xor
ja
fisubl
xlat
daa
in
xor
mov
xchg
xchg
dec
mov
cli
lret
xor
mov
bound
mov
pushf
jge
imul
mov
push
sbb
mov
dec
mov
cli
mov
test
fmuls
gs
enter
xchg
cld
mov
lret
mov
push
outsb
int3
dec
iret
and
bound
incb
pop
dec
call
push
mov
outsl
shll
or
hlt
fdivrl
sub
cmpsb
fst
xor
das
mov
jb
mov
mov
push
jne
lahf
mov
push
ljmp
je
sbb
mov
insb
adc
xorl
xor
xchg
and
cmpsl
cli
jge
jbe
mov
and
idivl
es
aam
stos
stos
and
xor
cmp
das
add
push
mov
dec
into
mov
bound
jge
push
push
sub
mov
pop
mov
jo
mov
jp
pop
or
add
sub
lret
push
mov
pop
pusha
mov
rcll
outsb
cmc
push
push
imulb
jbe
xor
sub
or
jae
push
ret
mov
dec
push
ret
jnp
icebp
dec
imul
out
ror
lret
or
imul
lahf
xchg
clc
aad
aas
jns
insb
dec
negb
imul
shrl
dec
fs
dec
orb
mov
int3
jg
and
lret
add
xchg
out
add
lcall
je
in
push
sbb
out
jl
ficoml
push
lret
mov
inc
mov
mov
pop
repz
lock
stc
daa
aad
pop
dec
in
and
push
fcmovb
and
rcll
mov
shl
jmp
adc
xor
push
mov
loop
dec
mov
movsb
dec
sub
adc
mov
mov
hlt
fadds
jmp
loopne
int3
xchg
fcoml
push
cmp
test
mov
std
int3
ret
or
cmp
call
lret
mov
and
jmp
xorb
push
mov
inc
dec
stos
push
jge
movsb
xor
sbb
xchg
sarb
cmc
jmp
outsb
insb
push
cs
mov
dec
or
mov
pop
rcll
int3
cmp
insb
lret
pop
mov
icebp
popf
xor
repnz
and
stos
jae
mov
daa
push
dec
jl
cwtl
pop
cli
jl
aam
pop
mov
scas
enter
xor
or
dec
mov
movsl
push
ds
xchg
je
int3
gs
pop
mov
jns
xor
sti
repz
lret
div
xchg
shlb
outsb
push
push
sub
mov
dec
sahf
test
insb
push
push
push
xchg
xlat
sbb
clc
push
popf
out
sub
cli
jp
jge
fst
and
shrl
mov
xor
cwtl
insb
bound
jmp
sbb
adc
rolb
std
or
repnz
clc
je
je
xchg
aam
add
push
add
repz
repz
or
out
in
lret
insl
sbbl
jae
sbb
ret
mov
out
repz
jmp
je
or
xchg
adc
nop
xchg
push
lods
rcll
je
dec
out
mov
sub
mov
push
inc
adc
inc
fwait
insb
sbb
int3
jae
add
sbb
and
rolb
sbbb
sbb
pop
sub
dec
mov
cld
xchg
fdivs
dec
cmp
sub
and
cmp
inc
xchg
push
bound
sti
loope
imulb
cmpsl
jbe
jp
in
or
push
pop
sub
push
mov
dec
test
hlt
fstp
fsubrl
popa
pop
test
push
or
pop
enter
hlt
and
enter
rorb
pop
and
test
sbbl
push
and
pop
in
adc
jo
lcall
stos
jne
sahf
insb
test
sub
adc
fs
lret
test
push
mov
mov
dec
add
dec
scas
mov
add
shlb
push
shl
cmc
cmp
dec
les
mov
xchg
mov
bswap
mov
pop
jns
sbb
aad
mov
aas
in
cld
xchg
insb
test
popf
int3
push
cmp
mov
cmpsl
sarl
add
and
dec
cmpsb
cmp
mov
xor
xchg
nop
and
push
xchg
pop
mov
sub
jmp
pushf
dec
cli
int3
nop
xor
pop
xor
popf
lds
js
addr16
sbb
cmpsb
mull
push
daa
pop
test
mov
aad
push
mov
aam
push
sub
or
dec
popf
popa
lret
popa
data16
pushf
outsb
pop
rorb
jmp
mov
movsb
sbb
nop
xchg
xor
dec
mov
pop
shl
sbb
sub
lods
nop
push
xchg
mov
das
iret
outsb
inc
aam
lret
cmp
mov
xchg
test
xor
outsb
push
push
mov
stc
push
mov
xlat
sbbb
es
lahf
jns
mov
cmp
pop
dec
loop
push
test
test
loopne
adc
sti
lods
dec
xchg
mov
mov
mov
mov
fcmovnb
mov
test
int3
or
sub
ret
adc
loop
outsb
pop
repnz
mov
pusha
das
or
lret
jg
cld
sub
jae
int3
mov
or
jns
ret
fs
test
int
in
call
push
scas
fildll
mov
dec
sahf
imul
stc
and
test
popf
pop
scas
mov
es
mov
int
xchg
add
insl
lds
sbb
jle
and
mov
add
mov
dec
add
fisubs
or
adc
inc
jo
sbb
lret
sbb
jl
into
scas
pop
mov
loope
mov
xor
inc
rcll
test
xchg
sbb
lret
in
arpl
int3
aad
clc
sbb
lds
mov
jns
mov
aas
push
fistpll
mov
cmp
adc
fs
inc
mov
dec
das
data16
xchg
cmpsb
mov
lret
xor
enter
cwtl
int3
jg
xchg
cvtps2pd
pushf
or
xchg
and
add
lret
sub
and
daa
or
testb
int3
xor
push
adc
lahf
int3
jmp
je
inc
imul
pushf
inc
jecxz
mov
and
push
cmc
or
cmc
jb
insb
lret
ret
cmp
leave
mov
lahf
mov
lahf
push
push
andl
xchg
jnp
int3
cld
mov
cmp
scas
mov
out
push
int3
xchg
pop
dec
jb
loop
out
stos
dec
jle
xchg
mov
mov
or
shlb
sub
scas
mov
pusha
or
cmp
push
stc
pop
lcall
dec
add
mov
dec
and
pop
mov
je
pop
xlat
pop
push
xor
lahf
popa
repz
stc
hlt
test
add
lret
mov
fidivl
xchg
mov
mov
outsl
or
xor
stos
fs
cltd
lea
call
fdivrl
sbb
cwtl
sbb
test
fisttpll
push
adc
or
inc
cmc
jb
insb
push
cmp
leave
fwait
adc
add
jl
aas
test
or
cwtl
sbb
push
fprem
jns
shlb
mov
jg
cld
mov
cmp
gs
aas
pop
adc
dec
lcall
daa
js
xor
xchg
sub
clc
mov
shl
mov
repnz
inc
mov
stos
call
pop
shl
jecxz
scas
sub
mov
orb
sbb
jne
data16
and
mov
stos
adc
xor
movsb
in
hlt
test
or
fwait
xchg
sub
fwait
out
jns
outsl
lret
and
jno
sub
test
inc
in
jae
jp
popl
push
bound
movsl
push
mov
movsb
dec
shrl
movsl
scas
push
push
sub
xor
sub
mov
into
loop
jecxz
cmpsl
mov
xor
stos
lds
gs
cmp
cld
push
je
dec
test
ss
je
pop
xor
ret
ret
sbb
push
push
mov
mov
jo
xchg
mov
adc
adc
push
arpl
or
cmp
push
sti
test
mov
mov
cmc
jmp
stos
pop
dec
push
insb
push
insb
rcrb
mov
mov
imul
push
dec
sbb
cld
ja
daa
ljmp
mov
xor
push
enter
dec
sahf
lret
cli
lar
sbb
or
cli
dec
lock
mulb
testb
xchg
mov
gs
in
pop
jecxz
and
adc
add
push
xor
fs
sbbb
lret
mov
or
mulb
aam
stc
mov
fcmovne
test
notl
xor
dec
mov
push
mull
popl
imul
and
pop
fsts
dec
jae
lea
roll
fidivrl
or
xchg
fnsave
xchg
lret
sbb
lret
ja
xor
fdivr
mov
mov
in
test
int3
pop
mov
xchg
in
int3
sbb
adcb
aad
xchg
test
xlat
testl
push
int3
pop
add
pop
cli
aad
mov
movsb
jbe
cmpsb
mov
adc
mov
mov
xor
adc
out
fmuls
inc
call
rcl
test
ds
push
cmp
insb
aad
adc
movsl
add
testb
lock
cmp
and
lock
xchg
and
push
je
idivb
loopne
sub
or
pop
bound
jo
cmp
xchg
push
loop
lods
pop
push
mov
push
push
rcrl
mov
push
mov
aas
movl
mull
lret
fs
jo
xchg
or
mov
push
mov
xor
pop
test
xor
aad
dec
sub
ss
into
pop
into
cld
enter
hlt
mov
xchg
in
jecxz
scas
xor
lods
cmp
pushf
and
es
sbb
push
imul
lcall
out
mov
adc
pop
add
fs
push
xchg
cmpsb
xchg
xchg
sub
pop
insb
hlt
jmp
out
negl
add
and
andb
lret
out
mov
mov
fnstenvs
pop
not
lcall
push
shrb
mov
xorl
sbb
dec
xlat
fidivrl
not
jecxz
and
mov
jmp
xlat
pop
xor
movsl
or
int3
jbe
adc
push
and
mov
jne
push
std
mul
std
lret
rcll
je
dec
loopne
push
pop
pushf
lret
mov
arpl
stc
mov
lret
arpl
mov
sbb
lret
mov
xor
pop
lret
jnp
movmskps
into
cmc
push
push
mov
insl
inc
stos
lock
push
jl
es
or
add
mov
push
lret
nop
lcall
jle
stos
push
and
inc
aaa
and
mov
in
int3
lret
cli
sub
std
fld
test
std
cmp
mov
pushf
mov
ret
dec
mov
notl
pop
cmc
lea
bound
or
xchg
mov
sti
sub
jo
pop
int3
ljmp
xor
mov
mov
cmp
push
jmp
and
mov
xchg
adc
sbb
and
mov
lcall
out
mov
enter
xor
sub
int
outsl
int3
fisubrl
cli
sub
sub
jmp
fcomps
push
or
push
mov
aaa
nop
dec
jno
sub
decb
int
pop
lret
into
mov
outsb
pop
sub
mov
dec
xor
dec
addr16
test
enter
xor
sti
pushf
cmp
out
js
int3
adc
fcomps
cmpsl
push
js
xchg
xchg
push
sbb
andl
jmp
add
or
addr16
fdivrl
aad
or
mov
je
aaa
fs
pop
sbb
or
into
popa
jg
addl
mov
jno
les
pop
bound
daa
scas
mov
cld
jb
jno
or
ret
xchg
js
mov
int
aaa
push
cltd
pop
sbbb
cmpsb
mov
test
mov
mov
mov
xchg
jb
call
pop
sbb
test
aaa
jl
dec
rclb
mov
pushf
mov
push
int3
pop
mov
jmp
frstor
out
aaa
or
scas
xor
fcmovne
loop
xor
pop
mov
pop
sub
jl
outsl
or
or
notb
icebp
divl
xchg
gs
jo
shl
hlt
test
and
stc
xchg
dec
mov
fistpl
int3
fisubs
in
int3
js
push
mull
jb
ja
and
movsl
ja
cmp
loop
jg
mov
jmp
sahf
inc
or
cmp
shlb
mov
and
and
std
mov
sti
arpl
inc
data16
test
push
mov
scas
cld
mov
pop
insb
adc
or
sbb
fcmovbe
jne
jae
js
pop
push
pop
aaa
andl
nop
popa
mov
mov
dec
inc
sbb
xchg
in
xchg
or
mov
aaa
and
cli
jmp
jne
xor
jmp
cli
sbb
cltd
push
sti
jle
bound
fiadds
andl
xchg
jo
push
mov
sbb
loope
shl
pusha
adc
mov
scas
pop
mov
loop
ljmp
xor
and
ja
shrb
pop
ret
mov
sub
fsubrs
fildll
sub
dec
and
aam
lret
popl
scas
mov
mov
sarb
adc
lret
xchg
jg
sub
xor
shrl
loop
cwtl
mov
aam
sahf
add
icebp
push
jmp
jne
in
neg
pop
sub
xor
roll
cld
push
jecxz
mov
add
adc
sbb
jle
aas
ret
repnz
mov
sbb
push
sbb
repnz
nop
das
lret
xor
cmp
push
out
int3
dec
test
push
test
leave
jo
sub
mov
push
xchg
jl
out
sbb
mov
testb
mov
lret
lea
dec
cmp
push
sub
mov
outsb
arpl
ja
cmc
nop
js
add
dec
add
xor
mov
jo
test
mov
mov
out
pop
sbb
shll
insb
gs
into
mov
lret
popl
shll
and
and
mov
repz
popa
sti
jne
shrb
inc
int
sub
pop
mov
lret
mov
xchg
mov
adc
stos
push
out
push
jae
cmpsb
lock
jns
fsubrs
icebp
xor
mov
pushf
pop
cmp
xor
mov
lock
dec
pop
cmc
xor
xor
and
xchg
or
mov
fsubrs
ds
mov
and
inc
arpl
push
push
gs
insb
and
pop
ss
inc
dec
or
lret
lret
arpl
mov
pop
bound
das
or
pop
or
sub
add
pop
sbb
jp
imulb
sahf
nop
pop
mov
rcll
fldcw
in
outsl
hlt
scas
daa
cltd
xor
call
xchg
aam
out
push
int3
cli
jno
pop
roll
lea
mov
iret
popf
xor
out
xchg
mov
add
sbb
in
test
cld
xchg
adc
mov
nop
xchg
jae
arpl
mov
mov
lret
ja
negl
je
shrb
and
or
jmp
das
jns
mov
rclb
pop
or
aaa
in
cmp
rorl
sahf
pushf
adc
mov
pop
lret
fists
int3
pop
xor
mov
mov
mov
ljmp
jl
adc
pop
jecxz
cmp
mov
out
inc
iret
and
and
push
lea
xchg
sub
pop
and
test
out
push
or
mov
arpl
cs
push
adc
push
sbb
push
int3
popf
in
lret
sti
addr16
sbb
mov
aas
inc
pop
or
or
or
xor
push
xor
jmp
dec
out
xor
lret
inc
in
xchg
imul
je
ret
cmc
mov
or
add
mov
int
fistps
mov
mov
cmp
mov
lock
hlt
lret
dec
mov
jge
in
mov
pop
into
sub
loopne
mov
push
lret
pop
sbb
xorb
push
sbb
mov
push
movsl
cli
adc
cs
jmp
sub
or
mov
mov
sbb
lods
lea
rorb
test
xchg
and
fidivl
addr16
and
push
xchg
ret
pop
shrl
daa
and
jg
lret
mov
movsb
adc
mov
push
add
jp
js
sbb
ds
fwait
pop
add
mov
rclb
cld
mov
xor
sbb
mov
jmp
add
mov
cmp
loop
and
mov
cmp
push
adc
aam
call
into
je
push
push
mov
and
das
test
jno
add
mov
in
mov
in
mov
cmpsl
ret
jp
mov
push
and
repnz
mov
jle
lds
mov
mov
adc
fadd
mov
jae
xor
ljmp
mov
jno
xchg
jp
mov
sbb
fstpt
aam
test
aaa
scas
pop
pop
mov
adc
pop
or
inc
lcall
subb
xchg
and
xor
gs
pop
in
mov
sti
mov
test
push
or
subl
ja
xchg
or
mov
sbb
in
add
mov
fisubrs
mov
out
lcall
mov
jle
dec
cmpsl
test
dec
mov
jo
pop
in
imul
loope
lret
ror
mov
cld
xor
fwait
arpl
sub
mov
mov
jb
shrb
mov
sub
orb
add
pushw
rcrl
std
inc
ljmp
pop
dec
or
fists
shl
rcrb
sub
cmp
sbb
xchg
mov
divl
aad
cltd
mov
scas
stc
jmp
xor
fcmovnb
insb
aaa
sbb
mov
xlat
lahf
ss
jle
mov
mov
pushf
mov
jo
mov
mov
xlat
fisttpll
push
dec
ret
mov
lea
aas
jmp
clc
insb
cwtl
nop
sbb
pop
cmp
ss
mov
xlat
arpl
test
push
lds
mov
insb
mov
mov
mov
pop
shrl
shrb
dec
cmp
cld
jecxz
inc
out
pop
sub
cmp
ljmp
cli
lods
mov
inc
add
test
mov
jnp
jle
push
out
sub
div
mov
stc
sahf
mov
xchg
repz
fisubrs
and
loope
lahf
mov
subb
aas
fdivrs
sub
ja
sbb
mov
ror
mov
lods
pusha
sub
sub
loope
mov
xor
sbb
jp
mov
mov
mov
mov
es
fcmovb
mov
nop
sbb
aas
ret
mov
into
jl
cmp
es
fisubrl
xchg
mov
pop
adc
lods
cltd
sbb
shl
subb
add
icebp
mov
and
cmpsl
fdivrl
inc
xor
outsb
push
jle
jbe
add
push
test
minps
dec
mov
scas
adc
sbbl
fdivs
jbe
out
add
pushf
dec
mov
in
scas
movsl
pop
xlat
mov
lock
or
loop
cmp
js
or
int
dec
out
andl
xlat
and
mov
jnp
mov
mov
rolb
loop
xchg
add
mov
mov
scas
mov
cmpb
in
push
outsl
cmpsb
adc
ret
and
inc
out
int3
dec
mov
sub
inc
pop
lret
mov
data16
cmp
mov
or
xor
push
fwait
adc
fsubrl
test
subb
adc
adc
inc
in
lods
clc
cli
dec
sbb
jg
xor
sub
mov
xchg
js
test
repz
fcoml
mov
js
mov
gs
and
and
xor
mov
arpl
mov
mov
mov
addl
into
cmp
scas
cmp
jne
and
hlt
ss
jns
jo
mov
sbb
insb
into
movsb
sub
or
xchg
movsl
xor
orb
nop
cld
push
push
cwtl
rolb
hlt
mov
add
xor
sbb
xor
sbb
mov
xchg
dec
into
mov
idivl
pop
pop
mov
pushf
xchg
lret
cli
data16
in
push
movsb
adc
mov
cmp
lret
adc
vpmacssww
in
pop
pop
stos
lret
pushf
xlat
mov
into
jb
push
aaa
cmp
inc
jge
sbb
test
sub
pop
jno
xor
movsl
push
or
ljmp
mov
jle
lea
sub
xor
loopne
add
stos
fisubrs
xchg
insl
dec
add
sub
add
rep
lret
cmp
sbb
dec
daa
xor
mov
lret
mov
push
jmp
repnz
sahf
fldenv
shlb
cld
stos
scas
nop
mov
mov
pop
sub
ret
sbb
call
jno
fisubs
ret
and
cmp
popa
lret
xor
cmp
mov
sub
into
xchg
cmpsl
mov
or
loop
cwtl
push
fcomps
out
cli
ljmp
stos
cmpsl
cmp
sub
cmp
xor
scas
jb
filds
or
or
push
push
mov
int3
xor
shll
fnstsw
sarb
rorb
inc
into
xchg
push
lahf
movsl
sbb
jns
lods
fs
jae
loopne
les
std
jae
stos
dec
fs
xlat
push
push
std
fcmovne
hlt
jle
bt
xor
cwtl
dec
mov
mov
cmp
cmc
push
push
imul
movsb
add
popa
bt
leave
leave
dec
in
rclb
push
mov
addr16
fdivs
int3
negl
sub
movsb
adc
mov
hlt
adc
dec
push
mov
hlt
xor
ds
insl
sbb
adc
dec
enter
push
mov
je
xchg
scas
mov
sub
pop
aaa
or
push
mov
dec
bound
dec
ss
and
int3
dec
test
pusha
lret
popl
adc
jecxz
jle
add
mov
dec
mov
cld
xchg
lea
or
movsl
jb
arpl
inc
pop
das
adc
cli
fdivrl
jne
ret
cmp
loop
in
xchg
lahf
stc
sub
cmpsl
int3
aad
fs
imul
int
mov
pushf
push
lret
roll
adc
xor
sub
mov
loopne
cs
std
lock
xchg
sub
orl
add
jmp
cmc
dec
inc
mov
mov
dec
cmp
add
sar
xchg
xchg
jecxz
in
sbb
insl
jo
xor
ret
cmc
cmp
pop
lea
test
xchg
mov
jbe
or
shlb
cmc
ss
push
dec
dec
ja
ret
popa
sbb
mov
add
mov
sbb
push
int3
mov
or
and
and
sahf
movsb
repz
mov
xor
cwtl
dec
mov
loope
or
gs
inc
out
mov
jge
add
repnz
aam
sahf
push
mov
add
lea
xor
xor
xor
jne
mov
sbb
int3
xchg
xchg
ror
lret
sub
cwtl
fyl2xp1
dec
and
ja
mov
lds
mov
and
shll
inc
cld
test
adc
testl
xor
cld
dec
fidivl
fdivrl
push
xchg
push
loop
push
and
push
jo
sub
ficomps
sub
and
adc
mov
jmp
arpl
xor
scas
filds
out
nop
or
lods
daa
cwtl
fistps
out
pop
mov
mov
test
mov
inc
mov
cli
jae
mov
mov
seto
out
ret
pusha
jbe
cmpb
add
loope
roll
cmp
fcomi
scas
add
sbb
sbbb
push
or
sbb
hlt
outsb
jno
dec
jne
lret
xchg
xor
mov
loope
pop
aad
mov
dec
pop
push
mov
ror
dec
sarb
mov
daa
je
lret
stos
push
xchg
cmp
out
loope
ficoms
dec
push
pxor
popf
std
movsl
arpl
hlt
sbb
pop
mov
dec
push
inc
jl
push
add
jo
loop
int
xchg
shrl
mov
cmp
aam
lea
lods
dec
sub
loopne
sahf
jns
mov
dec
arpl
push
add
mov
lret
rol
mov
mov
loope
sub
das
lret
mov
in
or
fistl
push
mov
xchg
scas
shl
leave
add
in
pop
pop
or
sub
pop
fbld
cwtl
ret
je
movsb
aad
pop
push
pop
mov
and
popa
dec
cmp
sbb
pop
es
je
scas
mov
xchg
push
add
pop
stos
loope
in
pop
repnz
inc
js
dec
pop
je
mov
add
mov
scas
mov
jmp
mov
push
push
pop
sahf
jmp
push
int3
jne
loopne
shl
inc
or
frstor
test
inc
push
lret
loop
add
xor
and
xchg
mov
iret
pusha
inc
popw
pop
mov
insb
int3
vpperm
aaa
mov
test
push
push
mov
jl
xchg
pop
or
and
pop
fsubrs
test
sbb
add
sbb
push
sub
mov
lret
xrelease
repz
jp
cmp
add
stos
enter
or
cmpsl
adc
test
scas
int3
jo
and
stc
out
and
ret
inc
mov
add
mov
mov
idiv
sti
mov
test
insb
dec
lcall
xchg
dec
and
cld
aaa
adc
shrl
movsl
inc
dec
stos
pop
aas
movsl
push
jecxz
mov
enter
xor
jne
pop
or
sti
outsb
push
jne
adc
or
sub
lret
jne
push
pop
stc
push
movsb
jecxz
mov
scas
jno
sbb
jle
jecxz
pop
xor
cs
and
pop
cmp
in
dec
enter
frstor
mov
push
ret
sbb
jnp
mov
mov
test
sub
mov
lock
icebp
push
mov
sbb
repnz
int3
loopne
call
std
fsubrl
adc
aas
std
jno
scas
stos
cmc
in
outsb
dec
imul
inc
xchg
insb
cmp
add
std
es
in
js
mov
int
pop
fstpl
push
test
mov
adc
add
jns
cmp
test
sub
ss
mov
cmc
and
xor
jns
repnz
js
adc
repz
xchg
outsb
mov
clc
aam
add
lods
test
lds
mov
xchg
dec
icebp
mov
iret
in
insl
ds
xchg
add
insb
stos
cs
cmp
dec
jl
stos
fldl
lret
jns
cwtl
xor
xchg
iret
jno
pop
lods
xor
negl
push
sub
sub
into
mov
lcall
push
int3
xchg
mov
std
mov
jb
ds
movsb
and
inc
sysexit
fadd
leave
subb
mov
cmpsb
dec
sarl
sub
cmp
pop
pop
lret
or
mov
pop
orl
lock
je
push
push
lahf
jae
push
stos
sbb
mov
shlb
mov
pop
mov
sub
push
pusha
push
repz
es
and
inc
and
leave
mov
inc
mov
pop
lret
scas
punpckhwd
sub
fstl
dec
arpl
mov
into
sub
mov
cmp
push
pop
ja
scas
mov
lcall
into
inc
mov
mov
std
test
pop
mov
jge
mov
push
mov
insb
lock
int3
cmpsb
xor
sub
rcrl
movsl
sub
xchg
inc
cmp
mov
xchg
sub
sahf
lret
rcll
ret
push
enter
cmp
dec
mov
sub
das
mov
push
aad
jb
xlat
cmp
cmp
adc
sub
icebp
mov
jmp
mov
mov
in
sahf
cmpsb
jo
inc
mov
test
movsb
jno
fdivl
sub
jl
movsb
imulb
loopnew
mov
cmp
lret
dec
sbb
frstor
xchg
cmp
pusha
jno
dec
cmp
outsl
mov
fnsave
popa
enter
andb
pushf
jp
add
mov
test
out
pushf
dec
scas
sub
aam
jg
xor
sbb
int3
push
jmp
push
cmp
add
sub
cmp
testl
pop
sub
push
pop
out
jns
xor
push
mov
call
push
sti
mov
rorb
sar
adc
mov
notb
das
movsb
add
lret
mov
faddl
add
lods
aad
pop
fidivs
dec
stos
add
popa
pop
jbe
mov
jg
adc
xor
jne
fisttps
sbb
xchg
mov
aam
bound
testb
cmpsl
xchg
dec
jo
mov
cmpsl
lret
inc
fdivrs
cli
fiadds
push
mov
pop
sub
sbb
dec
mov
insl
and
movsb
pop
mov
stos
add
repnz
xor
mov
jge
push
mov
inc
cmpsb
xchg
mov
fistps
push
sbbl
push
out
dec
stos
cmp
sahf
idivl
xchg
fisubl
lock
pop
pop
adc
cs
into
cli
nop
sub
xor
pop
pop
cmp
stos
adc
push
mov
movsl
and
sbb
enter
popf
pop
jnp
shr
jae
adc
loope
push
aas
lea
jbe
add
mov
dec
mov
dec
aam
mov
jae
jle
loopne
pop
fdivp
xor
sub
hlt
inc
pop
scas
dec
pushf
mov
pusha
dec
scas
scas
repz
add
mov
mov
shrb
cmpl
xlat
and
or
jnp
lahf
sbb
sub
xchg
xor
out
adc
pop
xchg
and
jmp
adc
rorb
or
hlt
sarb
sbb
decb
inc
add
push
sub
mov
int3
leave
mov
je
out
rcl
pop
icebp
imul
xor
sub
clc
mov
add
push
inc
or
and
pop
mov
or
mov
rorb
mov
xor
add
shll
push
xlat
and
popf
movsb
popa
sbb
inc
roll
popa
mov
dec
test
cmp
pop
adc
inc
imul
push
ror
mov
pop
shr
mov
adcb
sti
ljmp
repz
popf
xor
mov
xchg
inc
outsl
subb
pop
lods
push
sub
shl
push
stos
dec
xchg
and
outsl
xchg
jmp
scas
int3
insw
clc
pmaxsw
gs
xchg
jae
mov
push
push
in
mov
sbb
lea
xchg
jbe
cs
jb
xlat
add
dec
xchg
mov
leave
rolb
lods
cli
icebp
movsb
es
and
adc
mov
sub
testb
jp
sbbb
lret
mov
iret
ja
inc
test
in
jge
push
push
pop
adc
scas
and
fs
xor
dec
dec
mov
test
sub
inc
insb
cli
mov
cmpsb
push
lahf
out
aas
test
test
mov
cwtl
pop
insb
mov
cs
loop
push
jo
std
fs
loope
jecxz
jns
aam
cmp
pop
mov
lret
arpl
test
sub
mov
add
insl
sub
jmp
loope
outsl
jbe
pop
sti
repz
test
stos
mov
dec
xor
loope
dec
das
int3
pop
pop
sub
push
mov
aaa
rcll
outsb
test
mov
mov
repz
jo
mov
dec
and
rorb
jmp
fxch
inc
mov
lea
dec
dec
push
nop
mov
daa
cmpb
pusha
adc
pop
loop
shlb
int3
mov
test
dec
sbb
mov
pop
es
mov
outsl
sub
lret
lds
fistpl
inc
push
inc
test
xchg
mov
lahf
add
cmp
andb
fs
or
sbb
and
jge
lret
andb
ret
sub
je
dec
out
push
sti
lods
js
pop
and
xor
or
dec
mov
push
enter
or
inc
inc
sbb
aaa
movsb
cwtl
lret
xlat
push
bound
adc
mov
ds
cmp
xlat
dec
sub
ja
imul
pop
pushf
cmp
and
xchg
bnd
mov
arpl
xchg
fcompl
mov
cmp
jns
imul
inc
dec
test
jae
sub
sub
arpl
aas
imul
call
lea
sub
lret
dec
divl
in
mov
mov
pop
fsts
adc
int3
and
adc
push
divb
mov
dec
jg
int3
mov
int3
insl
dec
loop
and
lcall
adc
sub
mov
mov
or
into
jp
enter
je
pusha
and
or
out
imul
daa
sub
loope
sti
jge
fsubl
je
dec
stos
mov
xchg
ja
bound
pop
mov
out
and
stos
rcr
mov
in
mov
add
clc
das
das
dec
push
cmc
or
mov
mov
aas
adcl
test
mov
int3
push
mov
cmc
mov
hlt
ja
enter
leave
test
sub
shr
js
dec
je
loope
xchg
add
lret
cld
or
jp
cwtl
int3
jl
dec
mov
cmp
test
syscall
test
mov
imul
dec
ds
xchg
bound
inc
aam
inc
push
mov
je
dec
mov
ret
pop
xchg
adc
test
je
cwtl
lea
or
mov
add
xor
and
std
out
and
sub
xchg
xor
ror
pop
repz
pop
and
in
test
xor
jge
jge
push
jl
jp
jg
mov
pop
sub
fsubl
mov
mov
test
xor
je
enter
pop
cmp
add
xchg
es
fadd
ljmp
push
inc
xchg
shll
cmp
and
xchg
or
lea
mov
add
adc
push
xchg
repz
call
not
cmc
add
ss
mov
add
rsqrtps
lret
out
and
cmpsb
mov
push
mov
inc
pop
lods
shll
xor
movsb
xor
out
sti
js
sbb
pop
out
aas
xchg
loop
bound
push
push
lret
pop
stos
lds
xchg
push
aas
insb
mov
in
imul
mov
mov
add
std
sub
sbb
add
and
mov
outsl
movsb
cmp
mov
sub
pop
push
dec
stos
int
repnz
popf
jp
sbb
xor
int
push
xchg
inc
repz
jo
adc
push
test
sti
jae
repz
cmp
jns
lea
or
lret
mov
imul
pop
pop
bound
dec
sahf
pop
jle
mov
lock
orl
push
aas
sbb
shlb
push
gs
adc
negb
insb
xor
mov
sub
push
aas
jb
mov
int
xchg
sbb
test
outsl
pop
xor
xor
ret
xor
bound
mov
imul
ds
mov
mov
cmc
mov
cmp
movsb
jp
push
je
cli
mov
sub
popa
cmpb
iret
pop
inc
gs
pop
lock
xor
test
push
push
inc
int
jmp
sahf
scas
xchg
or
fnstenv
xchg
dec
push
mov
xchg
test
pop
int3
pop
iret
pop
xchg
mov
out
enter
rcl
adc
mov
cmp
testb
in
pop
js
push
mov
dec
inc
movsl
fildll
add
sub
loop
mov
imul
aad
mov
subb
daa
test
call
inc
fnsave
inc
dec
shl
int3
repz
lea
fistpl
xchg
mov
cli
imul
dec
mov
in
fldl
lret
into
test
lret
aaa
in
mov
inc
lret
add
pop
sub
xchg
out
mov
insl
push
cli
mov
mov
js
mov
outsb
repnz
mov
stos
pop
in
gs
jae
xchg
jne
fisttpl
repnz
outsl
push
push
push
sub
cmp
and
push
ficoms
push
repz
dec
leave
shlb
sbb
mov
sbb
shl
mov
les
push
rcrb
pop
pop
cwtl
shlb
push
shll
sbb
insb
icebp
imul
lock
cltd
or
dec
lods
in
cmpb
mov
xor
xor
aad
adc
jmp
push
mov
call
cwtl
push
pusha
push
mov
push
xchg
xchg
or
loope
inc
aaa
std
inc
and
hlt
add
xchg
cmc
push
mov
push
cmp
jg
lock
mov
data16
inc
push
decl
pop
lock
mov
or
int3
pop
out
hlt
js
sti
aam
stc
scas
loopne
and
mov
add
jecxz
cmc
jns
sub
daa
xor
in
adc
out
mov
lret
pop
dec
or
mov
mov
dec
mov
xor
in
jmp
mov
sbb
cltd
jmp
jnp
adc
filds
out
cmc
adc
sbb
insl
push
dec
mov
je
cwtl
dec
jmp
ret
mov
dec
push
pop
pop
and
leave
xor
jb
push
mov
mov
mov
aad
out
add
aas
fmulp
shll
xchg
and
pop
roll
test
dec
or
sbb
je
inc
mov
cmp
push
out
clc
mov
loop
mov
xor
inc
mov
pop
xchg
iret
es
fiadds
scas
aaa
sub
xor
jno
ret
sbbl
jnp
mov
push
int3
mov
dec
cmp
lret
sbb
jle
fdivrl
ret
nop
sbbl
shlb
cmpsb
jo
mov
ret
inc
ja
xlat
hlt
repz
mov
pushf
or
enter
and
sub
lea
mov
xor
jno
dec
sub
ret
pusha
addb
inc
sub
rorb
pop
lcall
push
adc
mov
data16
and
popf
mov
xor
mov
orb
cmp
lret
jbe
scas
aad
push
sbb
push
cmp
stos
xchg
dec
fsubr
stc
js
in
repz
cld
jno
ljmp
pop
mov
mov
loopne
cwtl
pop
imul
add
mov
mov
fs
fwait
pop
adc
mov
das
pop
pop
fidivl
adc
test
test
mov
cmp
sarb
jp
mov
popf
mov
mov
arpl
scas
in
int3
or
stos
out
lods
bound
sub
sbb
xchg
mov
jb
adc
and
dec
fdivrs
fs
icebp
mov
push
push
or
and
push
movsb
lret
js
pop
arpl
je
daa
xor
lret
call
loop
sbb
or
ret
mov
cli
sub
lcall
jae
loopne
or
mov
cld
mov
inc
push
std
imul
lea
xorl
test
inc
lret
cmp
jns
mov
xchg
or
icebp
adc
pop
out
out
pop
adc
aad
mov
pop
into
jl
repz
mov
lret
push
lds
orl
lret
outsl
ficoml
sbb
mov
testl
lret
and
lcall
jmp
daa
sub
sarl
fwait
jp
mov
jl
dec
inc
xchg
pop
and
sbb
xchg
jb
xchg
push
add
bound
jns
cmp
xor
js
and
push
cmc
pop
data16
fiaddl
stos
fucomi
cs
xchg
push
pushl
fs
cmpsb
pop
pop
scas
sub
iret
sbb
orl
or
mov
enter
push
test
mov
lcall
pop
mov
ror
pop
push
pop
scas
ds
hlt
lods
pop
imul
xchg
mov
fidivs
xor
jg
add
repnz
pop
sbb
pop
clc
push
test
xor
dec
sbb
mov
test
mov
or
pop
scas
je
dec
jo
mov
pusha
ret
add
sub
lahf
mov
or
in
pusha
mov
dec
cli
xchg
mov
mov
fprem
jns
mov
int
mov
aad
jecxz
testl
sub
aad
jmp
xchg
pop
out
xlat
xor
cmpsb
repnz
arpl
push
jo
stc
clc
push
loop
out
xchg
push
push
and
into
inc
push
xchg
mov
es
and
int3
addr16
roll
jo
adc
jno
xor
sub
pusha
sbb
jbe
pop
sub
jb
and
adc
xchg
in
clts
inc
pop
cmc
lods
ret
push
mov
mov
and
std
mov
negl
add
and
cmpsb
div
adc
mov
fistps
int3
jb
pop
mov
mov
xor
cmp
mov
test
popa
pop
dec
jae
add
mov
sub
test
add
push
pusha
xor
filds
xchg
sub
lahf
mov
mov
leave
or
add
test
test
jb
cmp
and
test
leave
jae
push
mov
mov
dec
pop
inc
sbb
and
inc
addr16
cld
std
jp
sub
popa
push
dec
xlat
or
xor
cmp
scas
shlb
dec
insl
jg
pushl
xor
mov
nop
sub
daa
cwtl
aaa
loope
mov
enter
xor
icebp
popf
les
or
mov
data16
fwait
andb
pop
fs
enter
sub
mov
shl
aam
xor
mov
mov
and
sar
xchg
andl
sub
outsb
inc
xchg
icebp
mov
or
push
push
sbb
test
std
sbb
push
pop
mov
decb
mov
add
add
test
test
mov
pushf
mov
pop
pop
bound
insb
adc
clc
fisttps
nop
or
ret
sub
adc
stc
popa
insb
push
bound
jl
mov
test
mul
xor
and
mov
je
jmp
out
jmp
or
outsl
out
or
mov
jge
aaa
lcall
sub
mov
jb
nop
cmp
adc
jae
add
pop
sub
ret
orb
ret
jecxz
jb
roll
lret
ja
push
movsb
in
idiv
push
mov
sbb
add
movsl
xor
aaa
pop
mov
mov
xlat
adcl
sub
xchg
push
jbe
inc
std
testl
mov
pop
inc
scas
push
movsl
daa
imul
lahf
inc
std
mov
lret
cmc
inc
les
mov
loopne
je
push
jl
adc
out
outsl
sti
lret
popf
int3
xor
ret
jl
cmp
push
fdivs
out
inc
iret
ret
xchg
lret
pop
pop
in
movsb
pop
mov
push
ficoms
add
loop
mov
pop
int3
xchg
pusha
add
mov
in
xchg
fisubl
jns
mov
mov
mov
mov
pop
outsl
movsl
and
stos
out
fcmovnu
sbb
movsb
int3
xchg
cmp
sbb
sbb
mov
lea
adc
xchg
cmc
call
hlt
mov
xlat
inc
gs
ds
jns
and
push
imul
sub
sbb
test
lret
addr16
and
loop
mov
push
cmp
dec
cld
cmpsl
repnz
mov
jb
lods
jnp
cmc
bound
xchg
xorb
xchg
stos
or
call
jb
pop
pop
mov
mov
cmp
je
pop
dec
or
jp
add
loope
test
add
adc
fisubrs
jo
ljmp
inc
inc
mov
daa
jge
int3
repz
pop
mov
fsubrs
cwtl
push
or
mov
xchg
stos
mov
cs
xchg
push
movsb
stc
mov
insb
xchg
incb
mov
mov
adc
mov
out
mov
inc
in
push
shrl
in
int3
sti
cmp
lcall
dec
cmpsl
int3
and
sub
mov
mov
sahf
movsb
or
std
inc
or
lods
sbb
lods
ror
jecxz
ret
mov
test
jmp
push
mov
xor
sub
js
xchg
imul
test
mov
jp
pop
lds
mov
adc
xchg
enter
push
pop
outsb
mull
adc
leave
xor
xchg
int3
imulb
daa
add
pop
sbb
bound
lds
xchg
or
ja
mov
test
sub
adc
jp
imul
inc
lods
jo
rol
dec
les
lret
mov
and
push
cltd
sub
or
pop
mov
lds
dec
test
xor
dec
jp
dec
out
mov
aaa
int3
sarb
insb
lret
push
sbb
dec
pop
sub
repnz
stos
sub
adc
lret
int3
dec
and
or
dec
jae
aad
xchg
sbb
int3
push
pop
and
xchg
mov
call
and
rorl
mov
add
mov
sahf
cmpsb
fisubrl
xchg
test
data16
pop
jmp
add
aad
ficoms
movsl
dec
out
ret
mov
sbb
shrl
xor
xor
sbb
pop
sbb
int
ljmp
das
call
movsb
jnp
sahf
push
xchg
ds
ss
lea
pop
shrb
and
outsb
add
sahf
inc
cmpsb
pop
mov
out
pop
add
daa
fdivs
mov
out
aaa
pop
cmpsl
and
hlt
mov
mov
sbb
jbe
and
dec
mov
xlat
or
push
popf
iret
lods
pop
mov
leave
ret
or
mov
push
imul
data16
push
repz
sub
sbbb
mov
jmp
lds
dec
lahf
dec
ret
mov
xchg
aam
cs
pop
arpl
sub
add
mov
das
xor
fmull
inc
aas
mov
jb
and
sti
pop
movsl
xchg
xchg
push
mov
mov
fnsave
adc
cmpsb
movsl
lcall
popf
or
mov
inc
dec
cmp
bound
mov
cmc
enter
and
jo
xchg
rolb
push
cmc
xchg
push
cmp
jo
lock
xchg
out
xor
stos
or
mov
cwtl
lret
pushl
cmp
pop
jg
push
addb
enter
test
das
push
push
pop
mulb
fisttpl
insb
cltd
jg
sbb
je
repnz
and
bnd
inc
repnz
mov
ss
je
sub
inc
inc
pop
xlat
add
dec
push
pusha
mov
jge
dec
fucomi
pop
aam
xorl
idiv
nop
dec
arpl
in
lods
or
jge
mov
in
mov
popa
int3
sbb
push
xor
pop
adc
das
fisubrl
movb
aam
lret
arpl
dec
sahf
inc
in
xor
pop
test
subb
mov
lods
push
sub
ss
pop
inc
push
rolb
cmp
jp
lods
cmp
jge
pop
mov
push
add
arpl
pusha
lock
inc
mov
popf
popa
cmp
or
xor
les
xchg
bound
mov
dec
pop
push
repz
cwtl
cmp
pop
loop
push
out
rolb
jo
cli
sub
sbb
xor
cld
lea
cmc
fcmovnb
add
popa
je
xchg
push
push
aad
sub
mov
mov
push
dec
scas
or
dec
xchg
mov
mov
or
dec
popf
cli
push
sbb
push
mov
dec
test
or
pop
pop
inc
sub
sub
les
mov
sahf
je
push
hlt
das
lret
jmp
dec
aad
repnz
jl
or
inc
clc
cli
sub
cmpsl
int3
push
push
test
jbe
xchg
add
ja
mov
pop
aam
rorl
mov
daa
sbb
add
cld
das
int3
cmpb
loope
sub
mov
int3
stos
or
mov
cmp
mov
addr16
mov
popa
dec
mov
push
cmc
fimull
lret
jg
push
mov
jb
mov
das
jle
clc
dec
jae
add
xchg
push
test
cmp
shl
test
mov
mov
testl
int3
stos
xor
mov
xorl
in
jg
sarl
pop
gs
mov
xchg
or
lods
lock
cmp
push
mov
lahf
xchg
xorl
push
fstps
mov
lods
clc
mov
pushf
pop
int3
dec
gs
jmp
out
pop
inc
adc
or
xor
sub
and
mov
pop
mov
test
imul
pushf
and
pop
out
popa
icebp
imul
pushw
cltd
and
stc
aas
add
push
jo
pop
mov
jle
xchg
cmp
ret
jl
mov
push
adc
addr16
pusha
adc
xchg
add
lods
push
sbb
mov
inc
push
imul
imul
nop
stos
xor
pop
out
cli
cmp
divl
insb
movsb
dec
inc
out
ficoms
int3
inc
rep
lret
mov
out
dec
cld
mov
pop
xor
inc
mov
add
sbbb
stos
lret
mov
test
mov
dec
ljmp
sar
je
scas
cmp
jo
sub
lods
mov
mov
mov
pop
mov
xchg
popf
test
cmp
scas
lret
enter
jle
jns
dec
add
hlt
adc
cmp
pop
cltd
outsl
xchg
inc
cmpsb
dec
mov
mov
dec
leave
cwtl
mov
bswap
cmp
inc
push
mov
lret
or
loop
mov
sbb
ja
sbb
dec
je
call
inc
xchg
dec
lret
ret
sbb
jne
int
or
test
int3
hlt
lret
sbb
jg
fisttpll
xchg
cmpsb
xchg
pop
int3
or
pusha
dec
mov
push
out
mov
lret
jge
push
stos
ret
mov
imul
lods
in
and
mov
incl
push
stc
das
push
dec
push
enter
xor
outsl
push
out
cltd
test
and
lret
negl
lret
mov
jmp
pop
popa
mov
inc
xlat
lods
cmp
outsb
loop
sbb
pusha
sbb
paddq
mov
int3
jns
dec
or
adc
dec
xor
jbe
test
pusha
adc
pop
test
dec
or
stos
es
loopne
xlat
push
int3
hlt
aam
flds
test
add
add
mov
push
and
cltd
in
mov
xchg
mov
imul
test
std
xchg
xchg
test
and
push
push
clc
add
sbb
test
fnstenv
cld
push
push
dec
mov
subb
imul
les
jmp
sbb
xchg
sbbl
movsb
into
dec
iret
and
mov
nop
mov
test
lret
aaa
or
push
and
xchg
xor
sti
in
push
xor
mov
enter
int
mov
jp
push
mov
push
jmp
fmul
or
int3
xchg
jl
es
jnp
test
notl
pop
mov
in
ss
or
fists
popa
int3
pop
push
inc
call
mov
lret
stos
sub
adc
xor
mov
cmp
xor
xor
cld
xchg
mov
xchg
lcall
and
jp
push
or
dec
mov
push
icebp
daa
sbb
mov
xchg
xor
idivl
or
adc
das
xchg
addr16
enter
out
lods
movl
test
ds
add
test
jg
jae
mov
add
adc
jb
test
sbb
enter
pushf
std
fistps
pop
call
push
dec
sub
sahf
movsl
sbb
lret
mov
jo
mov
daa
mov
push
sahf
int3
mov
mov
xchg
shlb
push
loopne
add
int
and
mov
push
mov
jb
je
pop
andb
mov
push
lahf
lret
xor
fisttps
fnsave
lock
enter
scas
xchg
adc
sti
dec
fdivrs
js
int3
sti
int3
scas
out
mov
icebp
mov
pop
xchg
int
xlat
shll
test
push
mov
inc
leave
inc
dec
xor
sub
aaa
dec
pop
or
push
inc
inc
stos
xor
std
movsb
inc
setb
adc
mov
dec
sub
and
pop
push
push
mov
push
test
les
pop
aaa
or
fnstcw
jae
push
jmp
mov
and
jg
xchg
rorl
sahf
std
pusha
pop
mov
lcall
sbb
dec
insb
aam
movsb
ret
leave
push
xor
pusha
shlb
std
fsubr
les
push
imul
loope
inc
or
pop
xchg
mov
out
loope
mov
sub
flds
mov
add
jecxz
in
pop
stos
mov
mov
mov
repz
divb
xor
jne
call
xchg
outsb
mov
adc
ret
enter
sbb
testb
popf
xchg
iret
pusha
es
xchg
leave
mov
addr16
adcb
call
stc
jl
sub
mov
cmc
adc
imul
lcall
dec
call
mov
stos
scas
int3
or
rcrb
pushf
leave
jne
adcl
dec
into
dec
std
mov
outsb
mov
pop
in
cmc
lock
dec
cmp
xchg
mov
sub
push
scas
and
repz
pop
imul
test
inc
jp
jae
push
int3
add
nop
xchg
dec
mov
push
mov
push
negl
imul
adcl
mov
js
push
outsb
std
and
data16
cmp
scas
and
cmp
mov
shll
sub
mov
lock
into
mov
fs
nop
or
sarb
push
mov
rcll
inc
jb
and
movsb
int3
rorb
bound
arpl
dec
fwait
xchg
pushf
xor
cmp
jge
and
dec
ds
das
cmp
push
jmp
cmp
mov
jmp
rep
js
int3
ret
in
lret
movsl
imul
scas
xor
mov
cmc
xchg
pop
xchg
ficompl
xor
outsl
and
cs
test
loope
or
loopne
scas
or
fwait
js
mov
jns
push
pop
loop
mov
stc
mov
xor
pop
dec
mov
xor
in
decb
and
cmp
xor
imul
mov
mov
sub
mov
pop
adc
or
and
sbb
dec
pop
mov
insb
movsl
xor
filds
out
lds
ljmp
scas
xchg
pop
pusha
int3
push
and
test
cmp
mov
push
cli
dec
push
test
shlb
inc
fisubrs
pop
xchg
or
mov
adc
shll
loopne
mov
xchg
pop
lea
xchg
popa
lock
bound
btc
loope
or
dec
cltd
std
jecxz
lods
leave
int3
pop
pop
fistl
xor
push
add
in
mov
and
sahf
xor
and
add
inc
xchg
sub
insb
mov
mov
cltd
mov
pushf
or
sub
hlt
outsb
pusha
stos
lods
repnz
ret
stos
fnstenv
rcll
jbe
push
je
out
daa
pusha
mov
mov
lds
mov
bound
imul
iret
les
ds
pop
cmpsb
pushf
xchg
jb
xor
cmc
cmp
out
lock
mov
xor
jbe
adc
sub
jns
mov
imul
bound
fs
and
jnp
call
add
adc
mov
sahf
add
leave
scas
or
pop
pop
mov
ret
push
xor
hlt
dec
xchg
and
mov
dec
leave
sbb
mov
inc
cmp
not
inc
sbb
fs
push
pop
mov
daa
sub
cld
jne
rol
nop
pop
fcomps
repnz
xchg
mov
pop
push
pop
lock
mov
loop
clc
fucomip
dec
out
std
sub
push
dec
pop
mov
and
outsl
imul
sbb
mov
push
sub
jo
pop
push
stc
and
fs
pop
mov
push
or
idivl
cld
mov
xchg
push
jo
mov
rorl
adc
les
inc
test
inc
popf
sub
jmp
or
mov
sub
ficoml
jae
mov
xchg
xlat
mov
dec
les
js
and
fisttpl
lea
sub
cli
ja
dec
jb
icebp
adc
js
sbb
or
pop
push
sbb
jp
das
out
pop
mov
int3
sarl
jge
movsb
cld
subl
jg
mov
hlt
and
adc
sbb
test
mov
jecxz
mulb
clc
push
call
loope
fildll
lods
pop
aaa
iret
sbb
fs
or
insb
mov
int3
in
lahf
jo
cmc
int3
jae
lret
push
int3
andl
mov
sbb
aam
pop
hlt
sub
xor
ret
dec
and
movsb
cmp
cmpsl
bound
int3
cmp
pop
int
inc
cmp
sahf
ds
test
lcall
int3
dec
arpl
xchg
or
add
mov
mov
ljmp
fadd
pushf
das
mov
xlat
xchg
and
or
subb
aas
xchg
xor
inc
jp
sarb
bound
stc
out
jns
std
dec
stos
out
aas
inc
and
mov
dec
push
xor
lret
lea
gs
add
int3
vpmacssww
push
add
fs
xchg
jp
mov
inc
out
adc
mov
scas
and
add
pushl
xor
jne
push
scas
dec
orl
add
scas
arpl
int3
aam
xlat
cli
imul
arpl
std
ret
xchg
pop
int3
stos
clc
imul
xor
js
ljmp
in
dec
pop
lea
insb
or
push
movsl
imul
mov
mov
mov
mov
aam
inc
roll
mov
iret
adc
pushf
or
leave
fbstp
push
and
dec
pop
rcll
dec
mov
sbb
or
hlt
sbb
outsb
das
mov
out
xchg
or
inc
out
fistpl
push
shl
into
sbb
lret
mov
xchg
xor
call
mov
mov
arpl
push
repnz
rorb
sub
mov
imul
xor
inc
daa
cli
push
lahf
imul
inc
sbb
mov
in
dec
insl
aas
push
fs
ljmp
dec
mov
inc
test
xor
leave
mov
sub
push
pop
ret
xchg
pusha
sbb
add
dec
frstor
dec
cmp
mov
imulb
inc
push
cmc
out
sbb
cmc
mov
cmpsl
jg
jae
jae
xor
mov
jp
sti
sbb
imul
pop
scas
mov
scas
push
xor
idivl
call
xor
loop
cmpsb
and
shl
push
setle
sti
push
sub
iret
cmp
sbb
mov
fs
in
aas
mov
inc
add
repz
mov
fistpll
sub
or
iret
mov
hlt
mov
sub
int3
addr16
aam
jp
mov
push
shl
scas
imul
ret
add
mov
ja
jnp
jae
adc
xchg
dec
and
inc
sbb
scas
test
ljmp
cwtl
add
mov
xor
cmpsb
in
mov
aaa
sbb
inc
incb
xor
fistpll
ret
jle
push
mov
iret
jmp
std
adc
inc
pop
sar
int3
jb
lock
and
pusha
ret
jge
cmp
mov
shlb
enter
adc
scas
push
setb
jg
rcll
je
scas
int3
jbe
sbb
pop
or
imul
push
xor
add
dec
mov
int3
adc
mov
add
and
mov
jns
lret
inc
push
in
and
lods
or
aam
cmc
and
fidivs
mov
inc
testb
sub
gs
or
and
pusha
data16
push
test
cli
push
enter
mov
add
and
pop
cmpsb
fisttps
adc
or
and
push
iret
mov
popf
sbb
stos
sbb
lret
sbb
mulb
dec
aam
dec
inc
xor
test
xchg
imul
mov
xor
pop
aad
es
sub
and
push
xor
pop
pop
jb
out
rorw
sbb
andb
fs
or
mov
gs
jne
xchg
imul
sarl
and
je
fcomps
aaa
xor
jo
stos
add
mov
rolb
xor
popf
test
out
inc
mov
jb
push
and
int3
dec
fs
sub
inc
mov
in
lret
mov
push
clc
arpl
sbbl
pop
pop
mov
cwtl
pop
popa
clc
les
incb
cmp
in
ds
insb
popf
mov
pusha
mov
test
xchg
js
ds
sub
lret
jb
push
jl
scas
push
jecxz
mov
or
mov
movsb
dec
gs
pop
aaa
pop
pop
cmpsb
xchg
in
adc
push
mov
stc
jo
dec
scas
xor
call
jae
lahf
jns
mov
int3
in
ds
adc
mov
lret
ljmpw
rorb
and
js
dec
cltd
lods
mov
or
mov
sub
or
add
je
jne
jnp
out
xor
data16
imul
mov
mov
js
mov
adc
int3
out
and
aaa
add
mov
lea
adc
lock
out
mov
lods
enter
mov
in
pusha
fsubp
rorl
loopne
je
sbb
mov
xchg
leave
stos
ja
fdivl
xchg
mov
xchg
mov
cmp
mov
inc
int3
mov
dec
jle
push
and
push
popa
leave
mov
shrb
mov
daa
or
mov
notl
mov
cmp
das
imul
xchg
xor
mov
int
xor
mov
adc
xchg
xchg
pop
jae
add
or
add
scas
in
shl
cld
mov
repnz
cmpsl
lea
cmp
push
jo
push
int3
xchg
push
cmpsl
mov
notl
mov
adc
aas
sub
cmp
pop
fstpl
stos
jo
push
outsb
dec
push
cmc
sub
popa
test
testb
add
int3
xchg
xchg
or
mov
int3
daa
add
mov
inc
pop
xor
xor
jmp
sbb
loopne
enter
add
sub
mov
cmp
out
xor
sbb
mov
add
push
shlb
sahf
pop
lea
sub
call
add
pop
inc
push
lret
mov
jecxz
sub
and
stc
pushf
int3
iret
mov
imul
cli
sbb
ds
push
stos
dec
mov
ljmp
negb
testl
mov
pusha
sub
mov
aam
xor
movsl
inc
hlt
push
dec
dec
into
push
mov
or
sbb
lcall
adc
lock
ret
std
mov
mov
test
jmp
fbld
add
nop
jns
dec
push
into
xor
popf
es
jmp
into
xlat
dec
mov
dec
insl
sarb
xchg
test
int
and
jae
out
mov
aaa
into
aam
adc
js
mov
test
mov
in
mov
clc
pop
fcmovne
and
jle
and
lret
nopl
inc
sahf
neg
adc
push
mov
pop
add
gs
imul
fdivl
test
or
mov
mov
pop
test
fsubr
subb
push
xor
out
imul
addr16
pop
sbb
movsl
xchg
scas
stos
cltd
pop
xchg
shrb
jb
fcom
pop
push
inc
push
push
jg
mov
imul
cmc
dec
jp
pop
mov
jg
mov
and
pop
sbb
aas
loopne
ja
pop
shll
dec
mov
test
or
dec
mov
dec
mov
fsubrl
mov
repnz
pop
out
sub
sti
mov
movsb
cmpsb
dec
addr16
jne
xchg
xchg
dec
mov
aaa
test
or
fwait
and
and
loope
ret
xchg
adc
out
lret
jmp
jl
mov
loop
mov
pushf
movsb
sbb
stos
xor
leave
out
cmpsb
pop
dec
hlt
pop
dec
jnp
or
sbb
fs
jge
cs
push
aam
xchg
sbb
jb
popf
adc
pop
inc
jae
movsb
and
push
lret
pop
sti
cmc
dec
mov
sub
repz
sarb
jp
pop
xchg
jmp
call
xor
arpl
mov
movsb
and
sbb
out
xor
cmp
in
sbb
fidivs
cmpsb
add
xchg
add
popf
and
lods
test
cmp
test
pop
jo
mov
je
shrb
sarb
shlb
xchg
pop
loopne
adc
loope
pop
lret
dec
leave
dec
popl
or
leave
xor
fadds
gs
data16
cmp
int3
push
les
mulb
sub
mov
lock
mov
add
pusha
fsubs
pop
rcrb
push
and
inc
cmpsl
rorl
fsts
mov
and
in
jo
mov
and
sub
sbb
adc
enter
popa
stos
int3
out
xor
scas
lret
outsb
push
sbbb
adc
sub
ds
xor
or
jp
mov
inc
xlat
insl
shlb
ret
mov
fdivl
push
sbb
pop
int3
dec
cld
fimull
sarb
bound
bound
pop
je
lds
fwait
xchg
mov
mov
fisttpl
mov
or
ljmp
insb
pusha
dec
dec
xchg
pop
push
dec
std
lds
inc
subb
sbb
jbe
or
push
popf
inc
leave
int3
mov
cltd
sub
rcrl
lret
lcall
or
add
dec
xlat
cmpsb
int
sub
mov
loopne
sbb
lret
push
cmp
push
xor
addr16
cmc
and
int3
js
adc
aad
imul
out
movsl
lret
lods
mov
pop
push
hlt
frstor
or
jl
add
test
je
sub
int3
leave
mov
mov
sti
jge
sbb
push
sbb
add
add
mov
mov
movsl
daa
xor
movsb
fcomps
das
mov
jne
in
sub
fs
push
lret
pop
pop
popa
adc
mov
repz
repnz
lret
jne
jb
sub
jmp
cmp
nop
out
daa
filds
sbb
mov
clc
pop
jo
mov
sub
sub
sahf
and
loop
cmp
popf
int3
fstpl
sub
test
or
push
sub
out
sub
push
fxam
test
xor
iret
je
testb
mov
xchg
mov
xchg
or
mov
mov
pusha
mov
popa
int3
adc
inc
mov
in
int
es
cmp
test
fwait
mov
dec
xor
popa
and
jo
int
shlb
jp
jl
cmpsl
stos
notl
repz
mov
adc
jbe
mov
pusha
push
inc
fistpl
mov
das
imulb
pop
popa
adc
je
pop
fdivs
pusha
sbb
cwtl
xchg
xchg
mov
xchg
add
lret
mov
fs
pop
xchg
dec
mul
jge
scas
cmp
or
movsl
and
addr16
xchg
dec
push
cmp
or
ret
cmp
mov
daa
xor
mov
pop
iret
pop
mov
fcompl
mov
data16
mov
stos
daa
test
push
test
sbb
xor
inc
lret
push
icebp
daa
test
mov
inc
jl
and
punpcklwd
mov
decl
inc
add
imul
lret
into
and
pop
pop
add
xlat
push
cmpsl
mov
pop
je
xor
adc
xchg
and
push
insb
mov
cwtl
outsb
lea
sbb
scas
pop
test
xchg
inc
js
pop
pop
test
cli
jmp
dec
in
pop
test
idivl
popa
leave
jnp
mov
popf
popf
lret
int3
in
fldt
xor
pop
jle
in
aas
pop
push
mov
push
mov
shrb
or
inc
mov
lds
sbb
and
std
cmpsl
enter
nop
test
gs
insb
movsb
bound
mov
or
dec
ds
aas
mov
shrb
push
sbb
inc
xor
pop
pop
jl
lret
xor
cmp
adc
movsb
sbb
aam
les
in
mov
lds
jns
pop
sbb
pop
pop
inc
and
adc
sahf
int3
outsl
mov
sbb
repnz
xchg
outsb
ss
push
sti
dec
push
and
sub
xor
int3
add
cmc
lret
es
in
mov
not
pop
stos
int3
or
push
cld
out
ret
mov
pop
divb
pop
pop
aam
mov
xchg
imul
andl
shrb
int3
push
sbb
pushf
fs
pop
leave
leave
xlat
addl
or
push
clc
pop
es
lret
cmc
jmp
je
aas
and
xor
je
pop
or
orb
xchg
fisubrs
and
lds
sub
xchg
jl
popf
lret
addb
dec
inc
inc
add
dec
stos
insl
addr16
fidivrl
mov
ret
out
lret
push
push
jnp
icebp
fdivrp
and
add
sbbb
jmp
fsubp
jb
sbb
push
adc
pop
fcomps
loopne
mov
sub
push
imul
loope
cmp
loope
into
cltd
push
adc
push
sahf
dec
lcall
dec
pop
xchg
andb
xchg
sbb
scas
sub
jo
dec
pusha
fbstp
jp
cmp
icebp
je
fs
push
and
inc
test
mov
jmp
outsb
mov
push
lret
les
mov
add
mov
popf
cli
inc
push
idiv
jns
dec
lock
inc
popa
mov
push
pop
imulb
sbb
jge
or
ret
cmp
negb
sub
push
mov
or
sub
pop
out
xchg
scas
adc
mov
movsb
ret
cmp
xor
push
jp
aas
test
jg
jg
jns
call
and
sbb
inc
pop
test
xchg
sub
push
xorb
fcmovnbe
sub
inc
push
dec
adc
jmp
stos
push
test
jae
fisubrs
inc
inc
and
add
push
jg
sbbb
mov
outsl
jmp
iret
jo
jno
mov
data16
aad
mov
push
push
popl
cmc
in
and
pushf
cmc
xchg
add
inc
subl
imul
arpl
jmp
jnp
and
pop
mov
jno
add
pop
or
jne
cmp
jae
int3
dec
out
jne
pop
push
test
adc
sub
fninit
xchg
or
xchg
sub
cmpsb
add
push
push
jae
add
mov
fadd
test
repnz
arpl
push
insb
push
rcrb
pusha
imul
xor
popf
rolb
mov
jb
mov
int3
push
ja
and
fildl
mov
mov
xchg
das
dec
sub
nop
add
lds
or
loopne
test
les
adc
jp
jmp
js
nop
data16
xor
sbbl
dec
jl
outsl
xorl
loopne
rcr
les
scas
repz
or
fstpl
sarl
aam
in
dec
push
mov
out
pop
or
lods
mov
pop
or
mov
incl
inc
rorl
subl
out
mov
mov
mov
sbb
iret
loopne
jb
push
pop
inc
mov
andb
mul
notl
mov
sub
xorb
push
mov
xchg
test
or
push
and
dec
stc
fisubs
jle
pop
outsl
push
pop
sti
fidivrl
pusha
je
sub
popf
ss
andl
int3
dec
shl
push
sub
dec
nop
fwait
xchg
or
and
sbb
xor
pop
fbld
ja
sbb
mov
jp
xchg
lods
lret
jmp
mov
xchg
pop
jns
xor
add
mov
daa
test
aaa
pop
leave
cld
divb
lret
mov
mov
push
sbb
lock
ljmp
inc
addr16
fcompl
in
dec
out
shlb
inc
jmp
cmp
cmp
popf
cs
dec
ret
int3
sahf
ds
adc
jne
pop
fwait
les
xor
pop
in
jae
dec
stos
xchg
jmp
les
and
mov
pop
repz
int3
pop
push
popf
lret
les
push
and
flds
mov
jle
add
repz
lods
fnstsw
and
mov
xchg
fcmovne
rorb
movsl
dec
xor
repnz
push
daa
cmp
sub
mov
pop
sub
adc
int3
jns
add
cmp
out
cwtl
inc
jg
sbb
mov
iret
pop
mov
popf
test
movsl
imull
movsb
mov
add
int3
pop
andb
jg
adc
lret
jg
mov
mov
mov
push
xor
in
cmc
mov
push
scas
arpl
jmp
fdivs
xor
dec
fs
xchg
dec
stc
ljmp
pop
cmc
mov
xchg
popa
and
sub
lahf
stos
mov
bnd
sub
fdivl
shlb
pop
pop
push
int3
mov
loop
psubusw
in
and
imul
call
xchg
sub
scas
push
or
mov
adc
jb
pop
xor
int3
jg
test
adc
mov
fidivs
movsl
sub
ret
pop
push
xchg
sbb
sbb
xor
xor
pop
fdivp
or
pop
xchg
repz
cli
add
lret
fs
xlat
int3
mov
lret
mov
js
jbe
rcrl
loope
add
sbb
pop
xchg
test
aaa
sti
adc
push
int3
insb
xlat
cli
bound
push
ret
push
sbb
mov
lds
push
dec
push
iret
pop
add
fdivrp
sbb
mov
sub
adc
fistps
and
aad
fisttpll
mov
fiadds
dec
loope
pop
arpl
es
lret
outsb
popf
movl
loop
xchg
cmp
ljmp
clc
fmull
xlat
je
daa
mov
popa
ret
imul
or
ror
lods
sub
decl
xchg
data16
out
iret
pop
or
loope
sbb
dec
repnz
cmp
stos
jno
sbb
inc
in
lods
in
fwait
mov
mov
test
mull
xor
pop
jb
std
movsb
xlat
movsb
xchg
movsb
ret
sahf
rcll
div
stos
or
andl
scas
add
sub
or
shl
pop
and
sub
mov
fnstsw
mov
jne
enter
mov
or
jae
mov
imul
push
mov
lret
pop
mov
mov
and
and
sbb
lods
sti
leave
gs
shrl
jae
lds
lret
mov
xchg
jno
or
sub
outsb
mov
adc
push
jl
ror
cmpsl
cmc
mov
test
xor
push
fbld
aad
push
push
lds
movb
fwait
mov
cltd
cmpsb
xchg
inc
loope
in
int3
cwtl
pushf
daa
mov
scas
dec
inc
data16
gs
daa
subb
lret
mov
sbb
jl
inc
or
dec
dec
sbb
push
sbb
jo
xlat
pop
fsubr
aaa
pushf
xchg
pop
and
push
or
lret
dec
jae
jle
lahf
popf
int3
pop
aas
popa
push
mov
cmp
cli
rol
lods
xchg
mov
int
push
mov
xchg
mov
test
loopne
in
sbb
mov
mov
fbld
test
sub
push
dec
fdivrp
gs
or
loope
das
and
pop
and
xchg
mov
xchg
faddl
mov
xchg
stos
xor
mov
cld
mov
mov
dec
dec
and
nop
test
rcr
dec
xor
mov
jno
pop
ja
fnsave
outsb
jecxz
bound
stc
jl
pushf
mov
test
or
cli
inc
pop
or
loopne
cs
and
push
ja
pop
mov
dec
sub
loop
mov
dec
sub
xor
jp
sub
fmulp
adc
cwtl
sahf
testl
jnp
mov
cli
clc
pop
sbb
lret
addr16
dec
pop
sbb
push
std
jae
pop
xor
insb
sbb
inc
mov
cld
lret
sbb
mov
test
popf
lret
jle
iret
sub
in
mov
fistpl
test
mov
xchg
aam
mov
mov
fidivl
adc
xor
sub
test
push
adc
imul
ja
fucomi
jge
sbb
sub
lcall
dec
shlb
xor
sub
jnp
xor
mov
sub
fisubl
repz
mov
mov
repnz
jae
negb
push
push
in
and
rcrb
xlat
xor
cli
xchg
arpl
rorl
int3
popf
xor
dec
push
test
and
ja
or
repz
fcompl
lcall
dec
popf
cmc
and
push
cmp
lret
sahf
not
cmp
dec
sub
pop
cld
mov
push
dec
orb
lret
repz
idivb
out
adc
pop
xor
or
and
imul
push
cs
mov
jmp
nop
in
cmc
ljmp
xlat
push
add
mov
iret
adc
int
mov
add
popf
int3
push
popa
push
ljmp
cs
lock
loopne
aad
xchg
hlt
arpl
lods
pop
and
stos
xor
xor
loope
lret
cli
sub
rcrl
fidivl
mov
pop
je
ss
push
pop
jmp
inc
cs
outsb
jnp
negb
jb
int3
clc
pop
or
popf
fcmove
mov
jge
rcl
call
mov
lret
data16
cli
mov
adc
lret
jbe
popa
dec
sub
insb
and
mov
in
dec
xor
push
push
sahf
movsl
and
lret
sub
mov
sub
cs
mov
fists
or
or
mov
out
sub
cld
loopne
std
fsubl
lret
add
mov
loop
out
dec
cmp
ret
lret
xchg
or
add
dec
inc
outsb
outsl
int3
mov
sbb
sbb
adc
ret
sbbb
lret
loope
popa
cli
nop
iret
mov
lret
fcoml
cmp
push
lcall
addb
mov
cmc
xor
jecxz
add
add
fbld
cmp
loop
pop
and
lods
outsl
and
xlat
pop
clc
notl
mov
xor
testl
xchg
cmc
and
bound
lods
mov
faddl
popf
jne
int3
in
jne
push
pop
pusha
lret
jnp
adc
sahf
test
cmp
loope
mov
and
mov
fidivrs
sbb
adc
pop
int
push
mov
adc
mov
adc
sub
not
hlt
rcll
jmp
cwtl
xchg
cmp
popf
and
xor
xchg
cmp
xor
es
rolb
out
cld
cmc
pop
mov
int
mov
je
daa
mov
mov
mov
jge
push
xlat
or
inc
psubsb
mov
jmp
lock
popf
xor
pop
push
roll
cmc
fidivl
pop
js
popa
aam
lea
fdivp
dec
push
icebp
mov
dec
pop
adc
or
sahf
sbb
cmpsb
cld
push
mov
cwtl
ficoml
lret
mov
pause
mov
lods
es
std
cs
je
push
int3
lock
mov
scas
sbb
nop
sahf
mov
inc
loopne
sub
test
adc
dec
cmp
pop
mov
dec
test
fcom
lds
test
movsl
fmul
lods
stc
and
fisubl
sti
je
and
push
pop
jmp
leave
test
push
inc
dec
mov
xor
aaa
lret
mov
push
rep
jno
sub
inc
shrl
sbb
arpl
aaa
test
pop
inc
lods
push
negb
dec
lods
and
mov
adc
cmpsl
push
idivl
jno
mov
xchg
jmp
call
in
push
mov
sub
mov
hlt
push
jnp
inc
clc
mov
inc
nopl
sbbb
pop
adc
cltd
mov
stc
xlat
push
jno
cltd
cmp
repz
add
cld
test
pop
push
jmp
add
fs
jecxz
test
mov
sbb
mov
test
cmp
inc
pop
aas
mov
mov
ficompl
outsl
mov
sarl
sbb
fmul
xor
je
push
xchg
jp
push
add
mov
sub
bound
pop
roll
push
test
gs
sbb
stos
sahf
daa
sub
jo
pop
xchg
imul
shll
or
daa
add
push
jne
popf
bound
ljmp
pop
xchg
daa
xor
sarl
imul
dec
push
leave
daa
or
stos
pop
outsl
xchg
aas
out
insl
push
inc
push
mov
mov
push
jbe
xor
sbb
xchg
cmpsb
sbbb
push
mov
leave
mov
add
inc
imul
sbb
divb
adc
add
test
into
push
sbb
push
inc
jmp
in
mov
int3
push
into
outsb
pop
scas
or
sub
sub
jge
inc
les
and
outsl
pop
pop
mov
xor
push
cmp
js
jecxz
xor
add
xor
xchg
lret
dec
ds
aaa
and
inc
ret
sub
add
hlt
sbb
in
iret
movsb
push
dec
mov
mov
es
push
lret
clc
inc
xor
fadd
mov
cmp
enter
hlt
shll
xor
push
pop
stc
push
adc
shrl
cmp
inc
outsb
test
movsb
mov
ljmp
stos
test
push
or
mov
lahf
pop
dec
adc
dec
test
xchg
sub
jae
mov
out
lret
pop
mov
xor
mov
scas
jne
sbb
shlb
mov
clc
cmp
mov
push
xorb
arpl
int
sub
mov
lret
lret
jne
arpl
sub
add
out
pop
xor
in
mov
cmpb
divl
and
mov
aam
sbb
sbb
lcall
enter
test
push
rcll
sub
in
negl
jno
xor
sahf
xchg
popf
jbe
xorb
pusha
icebp
cli
push
sub
lret
sbb
outsl
les
sti
inc
repz
dec
xchg
movsb
xchg
sbb
or
andb
xchg
movsl
cltd
mov
rcrl
xor
cmpl
fistl
xor
jae
std
iret
ss
push
dec
int
jns
xchg
inc
cli
mov
lret
outsb
push
jp
fimull
xor
cmc
lds
lret
cwtl
lahf
and
les
cpuid
pushf
xor
mov
or
imul
or
pop
adc
add
sub
fidivrl
sub
and
mov
ret
sub
insb
push
test
in
pop
int3
or
pop
loop
mov
inc
daa
fwait
popf
xor
stc
out
mov
inc
cmp
arpl
pop
dec
xchg
push
jo
push
popf
out
enter
adc
mov
or
fwait
mov
in
adc
outsl
shll
pop
mov
fdiv
push
imul
push
mov
js
push
push
push
jnp
in
inc
adc
test
gs
and
add
xor
icebp
fwait
xor
gs
aaa
cld
loopne
shlb
jmp
cwtl
cmp
inc
push
mov
loop
subl
popa
push
test
jp
xchg
std
ds
icebp
cli
nop
jl
xchg
cmp
cs
push
dec
aaa
mov
dec
rcl
cmp
mov
pop
stc
or
mov
in
aas
cmp
pop
mov
test
call
lahf
adc
int3
mov
je
push
in
std
scas
lods
stc
inc
insw
jo
pusha
sbb
daa
dec
xor
mov
dec
jg
mov
lret
jmp
ret
cltd
int3
jne
mov
sub
loopne
ss
mov
in
stc
jecxz
pop
jae
pushf
fcoms
cmc
mov
cmc
insb
cs
jmp
mov
nop
fcomps
pop
pop
out
xor
addb
cli
testl
fsubrl
sub
xor
jno
dec
xchg
andb
ret
jg
stc
xchg
int3
xor
push
lret
and
shl
xor
adc
aas
scas
nop
lods
inc
ja
mov
jge
xchg
jno
test
cltd
pop
fmull
mov
dec
and
mov
cmp
imul
xor
cli
xchg
cmp
mov
sub
jge
in
nop
notl
adc
jo
mov
fiaddl
inc
sub
repnz
and
and
add
jns
hlt
sbb
pop
lret
lahf
call
add
addr16
movsl
and
jmp
call
pop
xor
cli
sub
daa
test
xor
test
mov
push
mov
xor
jbe
in
lret
cmpl
rorb
adc
lock
xor
stos
data16
leave
fs
ljmp
dec
sub
lret
inc
out
jno
test
and
adc
test
fidivrs
dec
jne
xlat
add
xchg
addb
mov
dec
popa
shrl
cld
insl
int3
and
mov
shr
test
pop
lods
pop
rclb
xchg
mov
pop
jne
and
mov
daa
xor
push
ret
cwtl
jae
loopne
xor
decl
lret
in
push
stos
mov
mov
pop
push
cltd
jmp
pushf
inc
or
movsb
sub
dec
and
dec
cmp
dec
adc
sub
and
pop
cmp
mov
push
leave
cmpb
sti
mov
test
repz
outsl
aad
add
jp
das
pop
lods
adc
pop
and
mov
loope,pn
jae
int3
into
ja
mov
outsl
lock
std
leave
mov
shlb
fisubrs
xor
push
sbb
mov
test
insl
push
lock
cmpsb
sub
cmp
mov
aam
cmpsl
xor
push
and
out
sbb
insl
popf
js
test
stc
addr16
pop
jl
push
sub
ret
and
mov
dec
adc
mov
xchg
icebp
cwtl
xor
fsubl
cli
push
andl
cmpb
push
inc
mov
mov
icebp
dec
test
enter
sbb
out
loop
cwtl
pop
pushf
jecxz
pop
jmp
in
or
imul
pushw
scas
sub
xchg
cmp
mov
lret
icebp
aam
in
xchg
mov
push
pop
fidivs
push
lcall
roll
arpl
cmpsl
and
jl
sbb
cmc
dec
mov
mov
pop
movsl
sahf
je
mov
aas
repz
jnp
scas
movsb
int3
pop
aad
scas
mov
xor
jns
jno
int3
cmpsb
inc
fs
lods
daa
cmpsb
div
popf
les
xor
xchg
popl
xor
inc
add
pushf
nop
pop
push
ret
adc
fbstp
jo
ret
std
xchg
and
sub
jbe
jae
xorl
rcll
cmp
arpl
xor
mov
mov
inc
or
call
pop
push
jnp
insl
add
xchg
push
pop
cmp
int3
movsl
loop
add
or
adc
dec
mov
pop
push
stos
add
into
ret
std
mov
aaa
flds
mov
mov
inc
in
stc
mov
or
test
lret
dec
movsb
pop
xchg
mov
jns
test
xor
mov
fmul
push
daa
movl
mov
scas
je
pop
pop
fstpt
mov
push
jl
ret
out
ret
cld
inc
jb
aad
call
mov
andl
ljmp
outsb
sbb
movsl
lcall
arpl
mov
jg
xchg
push
push
pop
popa
mov
bound
xor
fstpt
test
decl
xchg
push
gs
dec
xor
mov
jcxz
rcr
mov
addb
add
mov
mov
movsl
sub
push
out
add
cmp
mov
cwtl
test
fstp
or
fstl
mov
int
mov
xorb
dec
fildll
and
sbb
ret
cmc
and
bound
js
pop
jbe
and
or
add
sub
pusha
pop
mov
push
or
push
daa
call
repnz
subb
lret
mov
insl
mov
cwtl
adc
xchg
stos
xor
mov
call
lret
in
xchg
lret
mov
xor
sub
shll
dec
stos
and
fwait
adc
mov
mov
stc
in
sahf
lret
jg
jmp
push
jg
aad
imul
andl
mov
movsl
xor
test
cld
inc
push
mov
movsl
ja
hlt
mov
dec
xor
stc
sub
std
jo
aaa
lret
push
pop
je
jo
xchg
xor
sti
data16
xchg
and
pop
shrb
test
or
mov
outsl
dec
jnp
leave
xchg
sbb
pop
lds
jo
in
mov
sahf
cmpl
das
push
mov
jmp
mov
ret
xchg
testl
xor
mov
fisubrl
cmpl
pop
pop
popa
xchg
adc
or
sbb
mov
inc
dec
fiaddl
dec
fwait
or
jnp
pop
or
adc
cmp
jo
int3
jl
cmp
div
out
dec
mov
movsl
rolb
stos
imul
out
outsl
movsb
mov
mov
cmc
aam
lret
imul
push
daa
dec
dec
or
pop
jae
jb
fistps
add
pushf
test
rclb
dec
out
fnstenv
lret
jg
pop
das
sub
sub
mov
popf
push
mov
xchg
sbb
cmp
xchg
sbb
and
stos
popa
int3
outsb
inc
sbb
sub
lcall
mov
xlat
sub
sub
loopne
adc
scas
mov
mov
cld
mov
mov
movsb
add
or
jmp
in
jmp
xor
scas
or
jo
int3
mov
lret
lret
xor
pop
sti
lods
ja
test
jns
fadd
mov
das
mov
insb
lret
ret
test
push
fptan
push
cmp
test
fsubs
mov
dec
sbb
stos
int3
jno
movsb
lods
mov
dec
lcall
int3
xlat
cmc
mov
mov
lret
cmp
mov
pusha
prefetch
adc
push
loop
add
je
outsl
push
xchg
dec
mov
lret
daa
and
stos
sbb
dec
nop
call
xchg
mov
adc
lods
cmc
data16
lret
inc
arpl
divl
mov
xchg
fnsave
xchg
jecxz
lock
pusha
orb
cmp
out
cli
mov
aam
and
fwait
jb
pop
test
sbb
pusha
and
jo
or
mov
pushf
andb
sbb
xor
mov
sbb
or
cmc
fnstenv
xchg
adc
imul
cmp
push
jbe
ja
orb
sub
and
in
ret
repz
imul
xor
nop
cltd
or
jo
pusha
mov
pop
mov
push
adc
ret
xlat
loop
clc
stc
aam
xor
popf
roll
xchg
stos
dec
inc
pop
andb
xchg
lret
icebp
imulb
cli
inc
data16
shrb
or
sti
pop
sbb
add
jbe
pusha
lcall
adc
shrl
jmp
stos
xor
pop
adc
test
pop
arpl
mov
jb
sub
int3
in
sub
push
push
and
cmpsb
or
mov
sbb
pop
inc
adc
test
mov
lcall
insb
lret
enter
mov
pop
stos
mov
push
sbb
jnp
push
cli
xchg
in
push
jne
insl
lea
aas
adc
dec
mov
cmc
jns
inc
movsl
lret
in
repz
add
sub
aam
lock
xchg
sbb
dec
sbb
pop
insb
arpl
fstpl
xlat
enter
mov
and
adc
push
sahf
frstor
xchg
sar
out
imul
lret
ret
sub
outsl
movsl
ja
rclb
mov
mov
xlat
loop
and
or
int3
cmp
pop
push
mov
pushw
out
and
or
shll
push
int3
arpl
repnz
fs
les
jmp
cmp
cld
bound
xorb
pop
add
fs
pop
lea
jae
test
push
mov
mov
testb
out
lea
les
mov
xchg
adc
adc
lds
nop
lret
aas
sahf
pop
aas
mov
xchg
jmp
aas
fadds
push
dec
lods
mov
push
les
outsl
repz
or
xor
shrl
xor
mov
test
push
sbb
sbb
dec
cld
mov
fadd
in
or
ljmp
sbb
mov
hlt
cmpsl
ror
pop
fidivrl
fmuls
lahf
pop
rorb
int3
pop
test
sub
lret
mov
mov
cld
xchg
mov
inc
cmpsb
xchg
jl
pop
push
aam
sbb
mov
gs
imul
pop
sbbb
dec
push
popa
inc
in
cwtl
push
mov
out
jae
movsl
and
stc
enter
test
cmc
rcll
adc
sahf
scas
pop
dec
or
sub
jns
inc
mov
int3
bound
test
push
inc
es
lods
in
cmp
and
mov
ja
dec
in
je
mov
dec
jnp
inc
mov
aam
insb
mov
xor
testl
mov
mov
xor
or
int3
lret
mov
xchg
mov
jae
xor
jb
cli
jg
and
dec
push
repnz
add
js
and
push
shr
sbb
std
fisubs
push
dec
push
adc
pop
mov
lret
pop
mulb
dec
jnp
cmpsb
adc
add
add
repnz
and
test
out
leave
into
jne
movsl
sub
dec
xor
les
scas
pop
push
pop
inc
iret
fwait
out
div
mov
mov
imul
pop
pop
dec
mov
loopne
dec
lret
sbb
mov
cmc
addl
dec
pop
jge
jle
mov
je
arpl
inc
lcall
cmp
mov
stos
lret
push
push
adc
das
sub
int3
xchg
inc
pusha
and
mov
inc
xchg
cwtl
mov
mov
mov
es
bound
sbb
mov
enter
mov
inc
ja
mov
aam
daa
orb
mov
jp
add
jo
and
push
xor
push
dec
adc
mov
clc
jne
jecxz
fstl
push
sbb
sub
push
out
sub
lock
mov
cmpsb
rolb
cmp
pop
ss
mov
int3
pop
push
jb
mov
dec
xor
add
lods
sub
add
inc
addr16
pop
mov
enter
clc
sub
adc
scas
cmp
scas
cwtl
fwait
lods
nop
and
sub
push
mov
lret
scas
stos
insb
lcall
mov
rorb
loope
xor
inc
push
cmc
nop
imul
mov
in
out
dec
dec
ficoml
jno
xor
loopne
sub
fs
inc
loope
loope
int3
dec
std
mov
imul
fisubl
jns
mov
mov
fildl
lret
dec
std
pop
xor
inc
imul
test
xlat
jp
push
mov
push
adc
test
mov
or
dec
push
add
sbb
psllw
jge
sahf
enter
pop
popa
mov
shlb
push
cld
jns
decb
adc
into
mov
inc
lds
push
sbb
pop
mov
mov
inc
xchg
push
imul
cmp
stos
test
push
cs
in
pop
popa
xor
or
and
push
and
add
repz
mov
jo
and
data16
daa
ljmp
xchg
scas
cmc
ficomps
mov
cmp
test
fwait
xchg
cltd
movsl
movsl
xchg
in
mov
jb
test
jo
sbb
jb
clc
xor
and
mov
popa
mov
or
movsl
pop
mov
sbb
and
nop
xchg
lret
adc
ds
sub
stos
cwtl
mov
mov
cmp
test
mov
sbb
mov
insl
adc
and
mov
sub
bound
int3
adcl
pusha
sbb
mov
or
and
fs
inc
les
sbb
sbb
fs
pop
jbe
push
lahf
lea
mov
in
mov
out
lods
mov
insb
cmp
movsb
mov
mov
jmp
test
add
inc
jg
or
pop
pop
push
movsb
stos
adc
enter
sub
mov
adc
push
dec
dec
xchg
xchg
outsl
mov
cmpsl
testb
or
int3
gs
cld
bound
push
cmp
jbe
nopl
pop
ds
mov
cwtl
scas
movl
adc
adc
lret
or
xor
jbe
dec
fwait
mov
and
outsl
push
jp
out
pop
dec
and
xchg
add
mov
pop
dec
daa
mov
jp
pop
mov
sbb
fs
push
xor
dec
dec
mov
cmp
inc
shl
mov
xor
mov
mov
outsb
jnp
in
xchg
xchg
jne
pop
push
into
push
xchg
pop
push
xor
cli
call
and
sbb
sysenter
jecxz
sub
pop
lret
jl
jb
and
inc
dec
xchg
ret
xchg
and
enter
lret
or
repz
ss
dec
pop
imul
popf
daa
movl
pusha
cld
xchg
mov
adc
movsl
rcrb
popf
or
outsl
popa
mov
or
cmc
popa
and
loop
mov
adc
mov
repnz
cli
mov
dec
mov
imul
fnstenv
das
xorb
sub
jb
sti
sahf
pusha
mov
adc
inc
push
mov
outsl
incb
cld
stc
mov
mov
jp
adc
inc
sub
or
mov
push
sbb
cmp
iret
add
xor
add
mov
testb
lcall
mov
push
cmpsl
jno
jns
add
negl
fidivrl
mov
and
popf
add
jno
and
sub
dec
ficomps
pop
or
or
mov
jo
adc
sbb
insb
nop
hlt
adc
adc
sub
sbb
cmc
xchg
mov
jo
pop
push
inc
mov
inc
mov
out
inc
ds
test
sbb
xor
mov
aaa
test
pop
or
sbb
xchg
fisubl
cmp
push
cmc
out
mov
and
cmp
cs
push
jae
mov
int3
sub
in
insl
ret
sbb
je
lret
jae
xchg
or
cmp
xchg
test
inc
mov
or
leave
push
xchg
mov
adc
enter
imulb
mov
sbb
cmp
aas
arpl
and
lret
xor
mov
repnz
cmp
ret
lret
mov
into
pop
dec
mov
push
mov
push
jne
push
adc
mov
and
cwtl
cld
jnp
and
cli
cli
ret
push
mov
jns
cmpsb
das
shll
stc
xchg
mov
popf
pushf
lods
xlat
sar
xor
int3
jmp
insb
das
jno
notl
outsl
pusha
mov
les
movsb
stos
inc
inc
mov
mov
and
subl
xchg
cli
mov
mov
dec
xchg
es
jbe
notl
imulb
sub
sub
scas
mov
adc
fistl
pop
lahf
int3
mov
or
sbb
stos
pop
xchg
out
push
pop
pop
sub
pop
mov
dec
icebp
scas
jb
cli
sbbb
ljmp
mov
mov
xor
pop
adc
push
leave
xchg
xor
jbe
andb
js
pop
jmp
cs
push
aad
ret
or
inc
push
test
inc
pop
xchg
xor
jp
inc
leave
or
jl
je
mov
addr16
fistpll
icebp
enter
jnp
ret
lods
xchg
mov
stos
hlt
insl
jo
mov
popa
int3
pop
cmp
sub
in
mov
pop
sbb
or
pop
outsb
push
xchg
jns
and
daa
push
dec
clc
sub
mov
int
cmp
stos
std
mov
popf
call
xor
xchg
inc
sbb
imul
test
pop
cltd
sahf
inc
jl
mov
lret
add
data16
test
loop
push
jne
xchg
cmp
add
icebp
pop
push
lods
popf
xchg
pop
ret
aam
cs
lcall
jmp
push
add
adc
int3
sub
jl
into
unpckhps
pop
daa
cwtl
mov
add
loope
push
fmulp
mulb
pop
in
cmpsb
pop
and
cld
mov
mov
mov
gs
in
bound
jne
cmp
sub
pop
cmp
fdivr
or
in
test
jg
add
mov
out
pop
push
inc
lock
jae
sbb
cs
outsl
lea
jae
sub
xlat
sub
push
ljmp
xorl
arpl
fsubr
mov
out
test
and
and
adc
mov
pop
scas
fs
and
fdivs
cmp
pop
shll
dec
psadbw
inc
push
mov
arpl
testl
fists
hlt
pop
decb
fcomps
fldl
lea
test
aas
sub
push
ficoml
data16
push
and
jnp
mov
dec
lds
mov
pop
xchg
xor
dec
dec
cli
add
inc
dec
sub
adc
xchg
xchg
pushf
int
test
sahf
push
loopne
lds
add
sub
pop
out
xchg
adc
mov
orl
sbb
sub
dec
or
testl
pop
ret
rorl
sub
xchg
jecxz
push
cmp
mov
cmpsl
stos
push
aas
mov
inc
cmp
les
or
mov
mov
fstl
adc
dec
stc
imulb
pop
popa
add
in
push
lahf
cmp
sub
cmp
cld
xchg
push
outsl
int
and
imul
cmp
pusha
xchg
aam
stc
mov
xor
lds
push
adc
adc
lahf
sbb
dec
insl
arpl
xor
repnz
aaa
int
test
dec
pop
lock
les
shll
mov
sbb
call
push
push
jo
xchg
jae,pn
jo
stc
je
adc
add
icebp
idivl
sbb
fstl
xchg
movsb
incb
repz
cwtl
std
jecxz
es
rol
dec
iret
int
xchg
fstps
mov
pop
imul
jb
push
mov
add
cmc
into
cwtl
jbe
loope
mov
les
out
lahf
cmp
mov
out
lcall
adc
push
cwtl
imul
pop
mov
mov
imul
js
rcr
stc
pusha
sbb
cmp
add
lret
xorl
mov
mov
sahf
cld
pusha
cmp
xchg
dec
xchg
adc
mov
lret
dec
subl
or
imul
scas
push
xlat
xchg
ret
pop
mov
jecxz
and
cmc
push
or
sub
test
and
inc
jnp
cwtl
mov
pop
aad
test
jmp
out
adcl
cmp
xor
bswap
scas
cmp
mov
sahf
iret
jno
inc
leave
cmp
mov
xchg
shrb
adc
ds
mov
jns
mov
dec
sub
stc
into
or
pop
pop
fneni(8087
js
shl
pop
popf
push
sub
inc
sbb
xchg
fcoms
xor
fisubrs
adc
out
mov
call
ret
ds
jb
out
cmp
mov
dec
xlat
js
sbb
pop
out
xor
aad
ficomps
jecxz
test
mov
dec
xor
dec
mov
dec
outsb
test
and
mov
adc
outsb
movsb
es
in
lahf
int3
aaa
ljmp
sbb
cwtl
and
popa
ljmp
pushf
aaa
lods
lds
adc
lret
push
pop
jl
into
or
les
xchg
in
dec
cmpsb
mov
cwtl
mov
sbb
gs
mov
andl
int3
push
imul
jg
scas
inc
xchg
shrb
test
xchg
dec
jnp
nop
repnz
hlt
mov
icebp
popa
mov
dec
in
pushw
sub
dec
int3
jg
in
cmp
imul
int3
lods
jae
push
jo
mov
cwtl
sbb
push
aam
inc
jae
mov
out
lret
pop
adc
adc
out
fnstsw
push
or
int3
andl
hlt
and
pop
mov
cs
das
inc
xor
mov
push
sbb
lahf
sub
aad
dec
sub
icebp
or
popa
pop
rcrb
stos
mov
xchg
int3
iret
push
data16
pop
js
cmp
shrl
mov
dec
les
int
not
hlt
inc
outsb
adc
pop
inc
mov
xchg
and
dec
sahf
push
or
or
pop
mov
mov
pop
push
push
test
fcoml
sub
adc
test
xchg
mov
xor
loop
push
pop
and
lea
cmp
cmpsl
mov
iret
inc
xchg
push
pop
and
xchg
pop
mov
sub
js
or
jmp
stos
mov
fadd
and
mov
ljmp
rcll
shl
shr
test
pop
mov
sub
dec
xor
adc
pop
lret
xor
dec
cmpsb
rcll
adc
add
and
repnz
das
stc
and
lret
and
dec
add
ss
cld
shrb
into
push
mov
gs
inc
repnz
add
addb
mov
repz
sbb
inc
jl
das
xor
sub
icebp
clc
pop
jo
rorb
popf
mov
pop
dec
push
js
adc
test
aaa
dec
sub
sbb
cmpsl
dec
jnp
sub
xchg
lods
push
notl
mov
cmpsl
add
aas
mov
rcr
adc
iret
mov
inc
dec
lahf
pop
xor
lret
pop
stos
dec
outsl
lods
int3
pop
add
in
cld
cs
idivl
add
shl
int3
lcall
sti
mov
pop
jb
in
sbbb
out
or
scas
cld
jbe
jno
mov
sbb
lea
aaa
pop
fistps
scas
mov
push
xchg
add
aas
mov
pop
add
icebp
imul
cmp
aaa
pop
jge
ja
pusha
mov
push
jb
repnz
out
aad
inc
int3
cld
fwait
cmp
jmp
stos
pop
fmuls
ds
sbb
sbb
cli
pusha
dec
and
fstpl
popf
cmp
jle
mov
outsl
inc
dec
inc
pop
cld
cmpsb
push
inc
jb
sub
xchg
xor
xor
push
test
sub
inc
or
movsl
clc
aad
hlt
or
sbb
sub
mov
add
mov
push
jb
cmc
cld
push
xlat
xor
pop
mov
and
or
xchg
inc
sbbl
test
cltd
cmp
rcr
or
int3
test
mov
add
mov
mov
push
lret
pop
push
xor
add
mov
or
call
mov
int3
push
scas
enter
xchg
mov
and
int3
call
jmp
out
dec
leave
cmp
pop
mov
xlat
pop
mov
dec
sub
lds
add
dec
imul
je
and
sbb
scas
int3
mov
push
cld
sbb
sub
xchg
insb
enter
iret
sbb
jg
pushf
xlat
int3
fiaddl
rclb
push
std
and
rcll
repnz
aas
jo
push
xlat
add
xor
or
out
cmp
pushf
sub
rolb
int3
icebp
jl
test
adc
pushf
jbe
ret
cmpsb
test
and
sub
dec
pop
push
je
pop
aad
ds
lret
mov
movsb
mov
rorb
pop
and
movsb
je
mov
mov
cmp
daa
xchg
std
mov
pop
jl
and
mov
dec
fdivs
movsb
lret
bound
int3
sbb
negb
cli
xor
lret
shrb
faddp
mov
stos
cwtl
test
and
push
sub
xchg
mov
test
hlt
mov
jp
and
mov
fidivs
add
cmp
test
fsubs
and
cmp
shrb
lret
mov
jp
subb
add
mov
in
mov
inc
adc
push
and
dec
cmp
sub
lock
mov
nop
testl
mov
xchg
fldl
pop
xchg
sub
pusha
clc
cmp
adc
out
mov
sti
jmp
jae
iret
cmp
inc
les
jae
push
inc
cmp
dec
ds
iret
cmc
mov
sahf
lret
pop
push
xor
or
stos
pop
xor
ljmp
cmp
xchg
cmp
cld
stos
lret
insb
xor
and
pop
cmp
sahf
loopne
or
or
cmc
push
mov
cs
hlt
adc
lret
and
shlb
and
add
adcb
js
loop
stc
out
xchg
adc
enter
or
aam
mov
out
mov
out
ds
fs
adc
push
push
test
mov
cmp
icebp
jl
push
or
mov
fidivrl
pop
pop
xchg
sub
and
insb
xor
inc
xlat
scas
pop
insl
das
shrb
fdivl
ret
mov
add
bound
cmp
mov
movsl
jle
or
mov
mov
sbb
pop
and
push
pop
das
dec
popf
inc
sub
mov
pushf
adc
fs
xor
xor
popf
inc
in
dec
aaa
subb
xor
xor
jae
dec
ljmp
adc
adc
outsl
jp,pt
xchg
cmp
popa
dec
popa
mov
mov
insb
hlt
ja
push
jo
mov
jmp
mov
addr16
push
ja
int3
mov
sahf
test
ljmp
push
rolb
sbb
or
xor
int3
or
outsl
sahf
testb
mov
mov
sub
cmpsl
in
das
or
out
jae
jae
ror
push
hlt
inc
push
push
mov
pop
mov
dec
mov
gs
pop
mov
adc
xchg
leave
gs
xchg
imul
sbb
adc
dec
pop
mov
xchg
inc
adc
sub
pop
cmp
repz
adc
mov
testl
test
popa
push
inc
mov
cmp
stc
mov
jbe
push
add
jns
fninit
lret
popf
bound
xor
jmp
and
sbbb
lea
push
jp
imul
xor
setae
inc
lcall
mul
mov
add
outsl
and
push
int3
cmp
fdivrl
lcall
lret
jecxz
jmp
int3
jecxz
mov
or
sbb
or
jb
adc
sub
mov
clc
dec
xor
lea
lods
mov
leave
mov
push
lock
data16
jge
ja
mov
fsubl
cltd
aas
mov
mov
divb
mov
pop
adc
dec
enter
adc
out
mov
cmp
add
int
mov
inc
xor
push
movsl
and
aaa
xor
hlt
lds
pop
lret
xchg
ret
mov
dec
pushf
cwtl
adc
mov
dec
xlat
fwait
les
dec
inc
jns
movsl
xor
cmp
daa
into
xchg
xchg
sub
fs
pop
in
or
lret
dec
insb
cmp
arpl
add
xchg
jb
mov
xchg
repnz
daa
add
inc
or
loope
mov
clc
mov
icebp
test
lea
push
add
outsb
inc
movsl
pop
sub
stos
fnstcw
stos
rol
or
ljmp
testl
stc
or
test
mov
movsb
call
jp
testb
adc
sub
mov
inc
lahf
insl
js
push
cli
imul
out
stc
lret
fmull
sahf
sub
inc
bound
mov
sub
aam
orps
rorb
sub
loop
aaa
add
mov
rcll
mov
addr16
mov
loope
das
into
or
std
xor
aas
in
push
jb
arpl
insl
mov
jge
imul
data16
or
pushf
cmp
test
and
adc
aaa
pop
pusha
in
pcmpgtd
or
ljmp
jge
jecxz
jae
mov
sub
sub
test
scas
in
push
shlb
jp
std
xor
sbb
xor
push
push
jecxz
dec
jmp
lock
cmc
mov
aaa
xchg
xchg
dec
out
mov
mov
mov
ret
xor
test
shrd
push
shlb
test
jmp
cmpsl
add
cs
int
mov
mov
lahf
cmc
in
pop
les
adc
scas
jb
dec
inc
insb
mov
aas
mov
xor
insl
push
cld
xchg
sahf
notb
out
loopne
test
cmpsl
xchg
jl
mov
or
int3
cli
into
or
push
lds
add
je
xor
cmp
xor
pop
cmpsb
push
andl
movsb
scas
call
mov
adc
imul
les
je
mov
lock
stos
push
push
sbb
fcom
jae
pop
mov
mov
stos
outsb
les
mov
lret
push
pop
and
sbb
add
mov
dec
test
mov
insb
test
into
xor
add
sub
repnz
test
dec
cmpsb
test
cmp
dec
out
fidivl
xor
into
mov
lea
lock
mov
stos
shr
lahf
sbb
fcompl
pop
fldcw
inc
scas
addr16
or
jmp
xor
dec
imul
sti
aas
out
adc
mov
test
insb
testl
loop
jnp
jno
cwtl
lds
cmovg
xor
lea
mov
lcall
sub
and
mov
addr16
cmp
jo
dec
sahf
inc
leave
or
ds
mov
xchg
leave
lock
test
dec
dec
popa
aaa
xchg
adc
add
pushf
xor
in
int3
xlat
xchg
pusha
mov
push
push
mov
push
xchg
aaa
outsb
test
fcmove
dec
xchg
sub
jecxz
sbb
notb
xor
lret
xchg
clc
mov
and
dec
std
sbb
dec
mov
addl
sbb
xchg
ja
shlb
pusha
and
stos
aam
inc
mov
mov
push
xor
mov
xor
mov
fmul
mov
pop
inc
cwtl
and
ficoml
cmp
popa
mov
jns
je
addr16
or
cwtl
xor
and
sbb
sub
mov
add
divl
and
mov
dec
mov
enter
adc
mov
mov
mov
imulb
lds
push
neg
pop
aam
cltd
int3
add
pop
mov
mov
dec
rclb
xchg
push
cmp
cmp
imul
shrb
hlt
shll
and
iret
insb
pop
sarb
mov
mov
test
bound
in
lea
xchg
cwtl
push
loop
mov
xor
cld
jl
scas
out
bound
sub
lds
mov
mov
xor
inc
shlb
mov
sub
shrb
mov
stos
dec
stc
mov
push
add
popf
pop
insb
in
cmp
lods
ret
lret
pop
mov
test
mov
test
dec
inc
ss
mov
xchg
pop
adc
jnp
cli
cmp
sub
pusha
lea
mov
test
mov
cmp
jl
mov
jp
jb
aaa
cltd
push
insb
int3
sub
push
mov
jo
xchg
adc
rorb
popl
push
xor
fs
repnz
cmc
lds
adc
loope
sbb
fdivrs
push
pop
and
and
lahf
dec
lods
mov
cmpb
pop
lahf
stos
pmaxsw
mov
int3
jl
push
or
pop
adc
xor
mov
add
js
incb
push
dec
lret
fucom
lret
xchg
imul
in
jns
xchg
xor
cwtl
push
xchg
sub
ss
cld
sub
loop
cmp
mov
mov
jmp
cmc
mov
rolb
mov
and
push
mov
xchg
pop
fdivrp
pop
ret
sbb
int3
mov
int3
dec
or
push
jmp
jbe
mov
xchg
inc
inc
mov
cmpsb
pusha
loope
mov
xor
xor
scas
jno
mov
test
sub
adc
pop
dec
lock
popf
sbb
xlat
into
pop
push
mov
pusha
sub
stc
xchg
xchg
and
sbb
cmp
pop
pop
mov
mov
jae
add
cwtl
stos
iret
mov
pusha
sub
pop
out
lock
jp
insb
lret
addb
mov
adc
and
xor
dec
mov
out
cmp
test
push
xchg
lret
and
sahf
int3
ret
nopl
jg
add
leave
push
mov
test
popa
sub
outsl
xor
push
hlt
pop
shufps
dec
pop
xchg
xor
push
subb
pop
mov
into
int3
mov
hlt
add
adc
mov
ret
xor
stos
sti
xlat
and
mov
mov
adc
jnp
aaa
mov
xor
in
nop
imulb
arpl
mov
daa
data16
call
test
jb
jp
imul
fwait
xlat
std
hlt
lcall
lds
xor
jns
pop
repnz
pop
cmp
sub
loop
dec
js
int3
xlat
stos
push
xchg
je
jae
add
arpl
xchg
and
ds
cmp
dec
mov
pop
arpl
mov
in
sub
inc
jl
cmp
push
out
mov
pop
push
push
sub
addr16
scas
or
cmp
ret
daa
leave
bound
test
mov
and
test
ficoml
cmp
and
sti
xchg
test
mov
add
lret
mov
mov
popf
testb
mov
ret
dec
dec
cmc
pop
fs
push
mov
test
fisubrs
pop
adc
pushf
mov
lds
jae
sbb
stos
sub
fisubrs
mov
psrad
pop
mov
fistps
test
js
rcll
scas
dec
daa
cmp
in
shrb
repz
in
mov
adc
imul
push
jbe
mov
mov
enter
repz
push
cmp
jo
pop
imul
loope,pt
ret
lods
push
pop
lods
adcb
mov
sbb
dec
pop
xor
push
test
mov
push
xor
cmp
xchg
shll
sub
leave
hlt
dec
push
lret
sahf
gs
cmc
subl
pop
test
push
add
repnz
fildll
loope
ja
dec
fidivl
fcoms
iret
mov
or
mov
pop
push
pushf
sub
xlat
mov
stos
out
test
push
xchg
in
dec
idivl
lret
shrb
out
jns
jb
int3
jnp
shll
out
mov
daa
lods
daa
add
inc
inc
fs
add
jae,pt
loopne
add
jbe
mov
xor
repnz
scas
pop
in
xchg
pop
lret
nop
cmp
xchg
clc
pushl
scas
adc
add
test
pop
mov
daa
pop
adc
loope
vpunpckhqdq
clc
jo
bound
sahf
jmp
jp
js
sahf
cmpsb
and
mov
or
push
xchg
popf
mov
adc
sub
enter
insb
lret
cs
add
fbld
pshufw
add
ljmp
or
mov
lea
push
mov
or
or
mov
pushf
mov
in
fwait
adc
inc
adc
or
add
pop
jg
cmc
ret
push
jg
notb
fiadds
mov
inc
xchg
dec
push
dec
jmp
mov
out
aas
lods
dec
lret
xchg
xchg
insb
mov
rorb
xchg
imul
aam
or
dec
mov
movsb
add
fs
lret
cmpsb
xor
sbb
mov
inc
bound
xor
mov
lahf
jmp
mov
aaa
outsl
mov
mov
inc
cld
sarl
rdtsc
mov
mov
test
movsl
and
adc
mov
sbb
repz
jnp
insl
push
pop
pop
push
jns
jae
call
test
into
cmpsb
sub
shll
arpl
mov
jmp
push
pop
xchg
sahf
ljmp
push
or
mov
xchg
push
loop
orb
adc
and
inc
xchg
mov
xor
jne
or
sub
das
push
ljmp
cmc
ret
imul
mov
jg
cmpsb
gs
bound
sub
test
pop
cmp
push
xchg
sti
push
stc
mov
dec
mov
cmc
enter
pusha
dec
dec
sub
and
imul
mov
mov
xor
stos
int3
xchg
scas
xchg
jne
push
imul
cmc
cs
enter
push
xchg
push
into
inc
stos
mov
stc
dec
aad
je
mov
sbb
sub
frstor
sbb
cmp
lahf
sar
pop
inc
pop
sub
ss
sub
out
cmp
cli
mov
pop
stos
push
push
push
jg
or
hlt
mov
bound
or
cmp
xor
xchg
inc
enter
lret
xchg
push
out
int3
xchg
mov
mov
iret
mov
sbb
test
pushf
fs
cmp
jp
or
pop
dec
sbb
divb
lret
jne
push
lds
imul
xchg
adc
xchg
out
movsb
outsl
push
mov
cmp
stos
out
push
mov
sub
bound
cli
leave
pop
inc
pop
fistpl
sub
mov
pop
jge
pop
and
pop
dec
outsb
xchg
test
inc
xchg
and
call
repnz
push
adc
fdivl
pop
jne
repz
jp
mov
pop
loop
pop
pop
jb
sbb
sub
dec
sbb
mov
iret
lret
and
sub
cmp
jg
push
jmp
dec
jne
movsb
mov
cmpsb
xorb
cmp
xor
jl
pop
cmp
je
jp
inc
test
sub
imull
xchg
mull
imulb
lret
lret
ja
std
repz
adc
scas
pushf
xchg
fs
or
and
and
pop
ljmp
pop
push
icebp
mov
aas
mov
add
pop
mov
outsb
push
fcoms
lds
test
ret
sbb
test
push
rclb
cmp
pusha
or
xor
jge
adc
mov
out
sbb
sbb
sti
cmpsb
pop
mov
pop
bound
pop
inc
pmuludq
movsl
jp
xchg
mov
xor
pop
xor
repnz
in
popf
mov
pop
jae
mov
pop
adc
lret
adc
cmp
popa
push
es
out
mov
hlt
mov
sar
stos
les
xchg
pusha
enter
jge
jb
cld
mov
pusha
mov
idiv
push
dec
jecxz
lret
mov
add
fwait
xchg
xchg
jle
icebp
aas
cmp
scas
ja
xchg
pop
in
pusha
push
push
fidivl
enter
mov
pop
xchg
shld
inc
lret
jae
imull
sar
add
xor
mov
xor
fstpt
out
jg
sti
jae
loop
movsb
or
sub
cli
cs
dec
jns
test
js
adc
addps
sub
mov
pop
daa
sbb
out
jae
cmp
pop
and
in
xor
bound
add
mov
cwtl
push
sub
mov
movsb
jmp
lods
aad
cmpsl
loope
testb
inc
xor
mov
cmpsl
dec
fadd
push
jb
xor
stc
mov
adc
xorb
fstl
fcomps
hlt
insb
push
int3
ds
xchg
stos
mov
das
iret
jge
movsl
and
lock
inc
fildll
or
xlat
bound
out
lock
lret
cmp
rcll
cli
add
outsb
xor
movl
orb
pop
adc
or
pop
mov
arpl
or
and
int3
jns
idivb
sub
mov
xchg
pushf
aas
mov
mov
inc
push
xchg
jb
fucomp
out
push
jno
cld
outsb
jne
test
cmp
jecxz
aad
add
lret
jle
cli
mov
into
mov
adc
sbb
sub
cmp
mov
in
cmc
repnz
mov
ds
pop
int3
push
mov
shrb
inc
fsubs
ljmp
mov
mov
xchg
andb
imul
xchg
stos
and
dec
adc
or
int3
std
cmpsl
push
jo
pop
out
fs
cmp
xchg
arpl
je
dec
lods
mov
cmp
sbb
and
jmp
arpl
and
lret
sub
xor
test
movsl
xchg
push
cmc
mov
and
cltd
push
mov
shrb
arpl
pop
shll
push
inc
std
mov
mov
popl
xchg
fsubl
add
fwait
scas
nop
mov
imul
xlat
sub
and
sub
sahf
adc
sub
mov
dec
mov
push
popa
push
cmc
inc
and
push
es
sub
movsl
jmp
test
mov
sub
xor
dec
mov
lods
je
daa
out
or
and
jo
sub
sub
dec
add
call
xchg
add
xor
std
out
cld
in
mov
xchg
dec
sub
inc
add
pushf
lret
push
sbb
insb
shll
scas
pushf
ja
gs
test
shll
ja
dec
jb
pop
mov
lahf
mull
cmpsb
outsb
cmp
and
sub
test
lock
push
test
out
push
sbb
pop
xchg
mov
jns
std
das
rorl
mov
xchg
adc
fstl
or
or
mov
stos
lods
iret
jmp
and
pushf
dec
repnz
cmp
fcomi
fistpll
jo
sbb
inc
jmp
jnp
xor
aaa
pusha
fcom
lret
pushf
and
jb
lods
inc
xorl
xchg
int3
fdivrs
sahf
cli
mov
insb
fxch
ret
push
lret
lock
pop
mov
scas
sub
cmp
scas
lret
mov
and
dec
inc
push
xchg
int3
xchg
mov
mov
cmpsb
and
push
int3
nop
or
adc
icebp
outsb
adc
xchg
lret
mov
sbb
mov
outsb
pop
out
mov
cltd
out
or
and
ror
leave
ret
outsl
sbb
imul
dec
and
repnz
mov
stos
filds
push
stos
int3
scas
pop
mov
cli
adc
sbb
ror
out
sti
push
imul
cmp
int
push
cld
add
je
xchg
cmpsb
test
es
bound
nop
and
pop
cmp
and
lods
pop
mov
test
mov
leave
pusha
bound
or
jno,pn
pop
push
cmp
mov
iret
fdivp
das
or
add
test
sbb
loopne
aad
inc
jbe
repnz
or
leave
fwait
or
repz
test
subb
sahf
mov
aam
or
xchg
sarl
repz
fisttpll
dec
xor
push
pop
sub
mov
sahf
jge
mov
fxtract
xor
negb
sub
sbb
nop
lods
add
pop
mov
bound
das
enter
push
mov
arpl
mov
mov
cmc
ret
ret
push
add
jo
stos
out
pop
rcll
into
lret
xchg
pusha
out
repnz
fcom
dec
repz
and
test
test
int3
es
mov
lret
push
std
pop
pop
in
mov
push
and
outsl
insl
movsb
repz
xlat
sub
sbb
insb
mov
sub
jne
rcrb
test
pop
dec
aad
mov
loopne
pop
loop
lret
mov
in
add
dec
mov
fldenv
add
and
movsb
icebp
repz
mov
je
inc
add
dec
test
or
mov
test
jge
mov
repnz
scas
add
imul
ror
in
push
insb
sbb
ret
or
inc
dec
ds
ja
pop
decl
dec
loopne
lret
add
sbb
aaa
sub
cmovns
aaa
test
mov
mov
pop
adc
imul
mov
lahf
mov
movsl
stc
sbb
mov
push
push
sarl
mov
int3
lret
sub
ficoml
sub
push
mov
jl
fcom
insb
stos
scas
sub
lret
mov
int
mov
popa
lea
sub
mov
dec
xchg
shlb
std
sub
fwait
pop
gs
inc
bound
sbb
push
push
mov
arpl
pop
test
shll
and
sub
fwait
int3
enter
xchg
xchg
mov
int
lret
xchg
ret
jp
push
pop
pop
test
pop
lock
push
xor
xor
sbb
cmp
loope
sbb
xchg
fidivrs
add
imul
xor
movsb
das
sbb
push
test
pop
fwait
lret
aam
mov
or
std
cmp
test
dec
test
mov
fwait
and
pop
movsb
das
dec
or
lock
cmc
daa
hlt
movsb
sub
ljmp
cmpsb
stos
pop
int3
addr16
dec
xchg
lret
sub
sbb
mov
shrl
pop
fcmovne
pop
inc
push
int3
frstor
jno
aaa
xchg
inc
pop
lcall
and
mov
movsb
jo
cmp
add
add
mov
mov
cld
dec
xor
out
push
pop
int3
fwait
push
pop
bound
dec
and
shlb
stos
enter
adc
fistpll
inc
shl
test
nop
je
test
add
test
mov
push
repz
push
fs
adc
push
into
and
xchg
and
mov
pop
or
hlt
jo
mov
subb
nop
test
aas
xchg
push
pop
pop
addr16
pop
push
xor
test
jo
call
fldt
arpl
lea
int3
dec
mov
rorb
int3
sbb
shlb
jmp
test
jbe
jb
push
repz
xor
int3
and
les
sti
mov
add
lods
sub
das
mov
mov
or
movsb
xor
push
addr16
out
xchg
push
and
add
jg
mov
cmpsb
cmp
adc
mov
arpl
loope
sub
fisubrs
jae
cmp
inc
cmp
mov
cmp
inc
dec
addr16
sti
mov
cmpsb
push
popa
int3
cmp
outsl
dec
cltd
jo
mov
xchg
inc
shlb
and
pandn
or
inc
insl
jo
call
inc
lock
pop
mov
js
int3
out
popf
lret
lea
cli
sarl
stos
aaa
push
mov
gs
popa
lret
in
fnsave
xchg
or
pop
mov
add
push
sub
outsb
jmp
cmp
rorb
push
fisttpl
or
dec
adc
xchg
xchg
mov
adc
imul
mov
dec
dec
pop
mov
mov
call
jmp
enter
cmp
sub
dec
mov
bound
popa
testb
insb
mov
int3
mov
lret
stos
mov
dec
xor
hlt
or
imul
mov
icebp
pop
fs
inc
inc
inc
and
mov
mov
out
mov
xor
int
int3
mov
and
push
fnstsw
enter
xlat
mov
aaa
fwait
jno
rcrb
dec
mov
aaa
pop
mov
cmc
xchg
adc
bound
push
mov
and
leave
inc
cmp
clc
aaa
shll
in
mov
push
sub
mov
mov
fwait
test
in
movsb
cmp
je
daa
es
mov
mov
int
scas
ljmp
loope
scas
cwtl
mov
mov
pusha
inc
sub
xchg
ret
xor
add
push
jb
inc
xor
mov
jmp
les
mov
xchg
push
ss
sub
pushf
out
xlat
xchg
and
dec
stos
mov
pop
in
repnz
adc
shll
push
push
cmpsb
bound
mov
cmpsb
xor
daa
sbb
sub
and
loope
imul
cmp
fdivs
xor
mov
out
cmpsl
push
int3
pop
xchg
cmp
enter
inc
test
mov
jmp
int3
mov
dec
rclb
aas
outsb
sub
dec
xchg
xchg
mov
movsl
inc
out
sub
mov
push
cmp
lahf
and
leave
xchg
movsb
adc
insb
fs
mov
pand
sub
leave
sub
sahf
push
xchg
dec
sub
push
imul
fmull
add
rcl
push
mov
dec
mov
push
cmp
push
and
leave
mov
test
pop
jmp
push
jp
stos
ficompl
inc
sbb
fs
cs
lods
insl
and
add
aam
aam
jae
cmp
mov
dec
inc
pop
push
mov
xchg
pop
je
mov
test
aaa
cmp
iret
mov
push
nop
pop
loopne
out
rcl
mov
lahf
pushf
sbb
popf
xor
shlb
push
xor
cmc
pop
loopne
mov
inc
jno
and
btcl
xor
mov
xchg
rorb
in
leave
enter
imul
ds
mov
jp
and
stc
or
adc
and
sub
pop
dec
daa
bound
lds
aaa
push
rorl
and
stos
pop
mov
stos
mov
mov
pop
dec
push
lret
push
mov
je
loopne
cmp
cmc
push
stos
jp
cmp
inc
jae
mov
jmp
push
cs
push
imull
lret
popa
loop
jle
or
ret
push
mov
mov
repz
mov
es
sbb
scas
adc
call
pusha
cmp
pop
add
mov
cs
lea
js
test
bound
and
insl
push
or
mov
pop
ficompl
test
inc
and
test
cmp
inc
sub
mov
in
inc
js
inc
push
std
in
cmpsb
sbb
and
adc
andl
or
and
mov
je
cli
inc
out
popf
xchg
loope
mov
adc
mov
mov
dec
stos
jl
iret
mov
lret
xchg
icebp
xor
and
jae
mov
mov
pop
mov
outsb
call
nop
dec
aaa
repnz
xor
sarb
pop
push
jl
aam
cld
jmp
inc
cmp
test
dec
cmc
pusha
jg
inc
xchg
dec
inc
mov
das
push
sub
add
gs
out
fldenv
aam
loopw
xor
pop
clc
pop
in
idiv
or
jbe
or
sub
jo
jnp
xchg
pusha
mov
xor
jmp
pop
popa
xlat
movsb
jae
popf
jp
mov
into
int3
push
mov
sbb
mov
and
add
adcl
or
mov
fidivs
aam
and
lret
pop
add
sbb
jns
sarl
lret
push
push
icebp
roll
push
enter
mov
pop
jg
test
mov
jl
mov
fwait
out
xlat
dec
js
xchg
iret
xchg
pop
scas
inc
inc
jo
adc
loop
and
mov
mov
daa
or
adc
inc
adc
mov
test
loop
cwtl
xlat
arpl
sub
pop
scas
mov
ret
dec
outsb
inc
sub
or
or
and
fistps
mov
test
shlb
xchg
and
mov
fidivrs
mov
fwait
int3
test
insl
ret
dec
cmp
lea
push
mov
push
ljmp
fnstcw
and
pop
or
sub
and
pop
cli
jg
or
cs
cmp
scas
loop
inc
sahf
insb
mov
sub
pop
xchg
mov
imul
sbb
mov
adc
push
add
test
frstor
bound
add
loopne
pop
pusha
insl
cltd
gs
mov
dec
in
inc
sub
insb
adc
iret
sbb
out
inc
das
int3
mov
arpl
push
aaa
jecxz
xchg
or
cltd
mov
xchg
mov
pop
daa
and
jg
gs
mov
jb
dec
mov
repnz
mov
into
xchg
scas
dec
fadd
sub
idiv
sub
sub
imul
or
loope
aaa
jnp
cwtl
into
add
pop
pop
test
push
mov
add
lret
and
dec
xchg
lret
push
jmp
sub
pushf
pusha
mov
popa
and
or
sbb
add
mov
fisttpl
or
notl
pushf
clc
loop
lods
mov
add
clc
les
jg
jmp
lret
lods
dec
and
push
arpl
push
and
je
fistps
adc
clc
xor
arpl
mov
pop
sub
push
mov
xchg
mov
adc
cmc
sbb
cmpsl
int3
stos
popa
push
pop
cmp
repnz
cmpsb
dec
and
pop
rclb
cs
pop
adc
jmp
xlat
outsl
xchg
lea
sbb
mov
cmc
inc
imulb
mov
je
movsb
xor
or
pop
hlt
dec
adc
push
inc
pop
sub
je
cmp
mov
push
xchg
adc
push
out
jno
ror
lret
or
xchg
fimuls
and
pop
pop
or
inc
mov
std
shlb
pop
push
pop
pusha
fsub
dec
sbb
jo
pop
das
xchg
mov
cmpsb
pop
js
frstor
aas
repnz
push
mov
lds
or
adc
cmp
inc
hlt
pop
inc
jne
adc
sub
cld
aas
hlt
adc
pop
ret
cli
push
int3
mov
outsl
jns
int3
sub
mov
and
xchg
and
adc
cli
adc
je
xchg
stos
push
push
xchg
into
movl
dec
xchg
in
movsl
dec
fs
ret
push
pop
fs
dec
inc
cltd
inc
cmp
insb
inc
xchg
test
int3
arpl
lcall
sub
inc
popf
mov
adc
outsb
pop
mov
push
imul
xchg
adc
push
in
push
pop
aad
mov
sub
mov
sub
sub
jo
dec
dec
fbstp
int3
pop
pop
mov
mov
test
adc
movsl
in
xchg
hlt
arpl
cmc
inc
mov
movsb
and
rorl
dec
mov
int3
xlat
imul
bound
sbb
xlat
inc
orb
jmp
imul
aaa
sub
pop
mov
adc
sbb
aas
adc
push
movsb
int3
inc
shlb
xor
or
inc
into
and
mov
adc
mov
inc
lret
pop
inc
pop
dec
lahf
pop
cmpsb
stos
insl
fwait
sub
stc
gs
insb
stc
sti
xor
test
inc
mov
or
cmc
mov
and
ret
cltd
cld
cltd
sahf
mov
clc
scas
adc
xchg
adc
out
mov
adc
and
push
mov
out
lret
sub
sahf
bnd
xor
popa
mov
xchg
packsswb
lret
push
fucomi
mov
and
mov
mov
mov
mov
mov
test
frstor
add
mov
adc
loope
mov
push
lods
mov
sahf
mov
xor
imul
xchg
repz
sbb
xor
sub
out
xchg
int3
insb
mov
mov
add
mov
cmp
or
gs
dec
inc
add
mov
jle
test
and
leave
rcrb
cmpsl
lret
pop
cmp
aad
rcll
aaa
xor
jp
jo
repnz
xchg
mov
fcomps
ljmp
inc
out
inc
filds
xor
jae
js
call
nop
push
int3
adc
fisubrl
mov
xchg
cli
jbe
cmpsl
lcall
xchg
hlt
mov
mov
test
and
mov
mov
xchg
xchg
daa
pop
or
mov
cmpsb
int3
xchg
test
jp
loopne
shlb
out
movsb
and
xchg
repnz
push
fstl
xor
test
ljmp
ja
decb
aas
lock
inc
shrl
add
clc
out
xor
xor
idiv
sbb
pop
push
mov
ret
sub
movsl
neg
jp
mov
add
loop
inc
lret
test
jb
cwtl
push
mov
popa
jo
dec
ds
imul
imul
fsub
call
std
xor
dec
push
movsb
ror
pop
sarl
imul
rcrl
add
dec
test
das
out
jne
divl
pop
in
cmpsl
cs
add
dec
add
insl
gs
xor
push
sub
paddsb
movsl
imul
mov
pop
sbb
add
pop
add
adc
jmp
mov
scas
or
imul
pop
test
or
push
or
xor
mov
pop
into
xor
arpl
xor
adc
pop
mov
push
adc
or
push
sbb
pop
pop
mov
out
cltd
xor
inc
addb
int3
add
sub
aad
test
jl
mov
and
mov
loop
test
mov
cmp
stos
lret
add
sbb
ss
and
fucom
xor
test
and
xor
jge
pop
call
xchg
insb
jl
pop
xchg
out
sbb
inc
repnz
enter
js
xor
dec
test
rcrl
adc
and
popa
cs
in
int3
xchg
push
add
dec
pop
test
lcall
ja
fstp
pop
mov
ljmp
pop
rol
mov
test
jmp
cli
xchg
repz
test
push
mov
dec
insl
into
aaa
insb
aad
and
xor
and
cld
dec
mov
add
or
push
mov
lods
mov
adc
jo
push
and
ljmp
mov
loope
xor
fidivrs
ror
mov
cmp
jno
test
scas
sub
lretw
hlt
push
xor
or
xchg
movsb
mov
dec
daa
js
mov
enter
fldz
inc
add
mov
xchg
fstl
jns
or
mov
fs
outsb
xchg
mov
call
mov
pop
jb
movsb
push
idiv
iret
sbb
sbb
mov
mov
clc
out
mov
xchg
out
cmc
ret
push
jb
lret
repz
stos
jbe
movsl
out
and
outsb
je
idivb
jo
fs
pop
in
jns
adc
mov
mov
or
aad
mov
pop
roll
out
pop
xor
movsb
jecxz
inc
divl
push
push
jg
push
pop
lds
test
repnz
xchg
mov
or
adc
popf
aaa
fsubrl
mov
sbb
out
dec
or
xor
scas
push
or
lret
push
sub
subb
stos
pop
pop
sbb
ret
mov
hlt
fnsave
ret
pop
ds
mov
das
push
dec
sub
sub
mov
lods
jbe
leave
cmpsl
inc
inc
xchg
fdiv
lret
call
sahf
lea
cmpsl
ret
dec
mov
or
test
mov
mov
into
or
adc
mov
int3
ficomps
sahf
cmp
or
push
out
and
das
mov
push
jmp
testl
test
mov
inc
ret
add
lret
mov
add
or
inc
push
adc
mov
mov
cmc
dec
shlb
xchg
push
lcall
push
test
lods
jge
mov
adc
lcall
pushf
xchg
mov
push
mov
dec
fidivrs
mov
sub
push
insb
mov
subl
loope
int
adc
add
hlt
push
fidivs
lret
cmpsb
ljmp
or
stos
mov
out
xor
pop
inc
repz
popa
add
mov
scas
movsb
iret
ja
xor
push
loop
inc
mov
mov
lea
jne
in
jl
stos
add
push
movsb
imul
xchg
sub
shll
aam
in
jns
and
push
loope
es
mov
js
popa
xor
mov
ret
test
mov
push
adc
movsb
and
mov
scas
and
xor
xchg
int3
mov
dec
add
mov
lock
adc
add
mov
ja
inc
stos
add
sub
mov
loope
cmp
test
fbstp
in
jne
hlt
cli
in
scas
int
gs
push
test
lods
cmp
sbb
outsl
inc
jl
sti
test
jg
lret
cmpsl
das
movsl
dec
mov
cs
popf
sub
inc
lahf
mov
push
mov
shll
mov
scas
and
xchg
inc
xchg
scas
bound
and
pop
mov
cmpsb
dec
int
pusha
adc
imul
push
js
xchg
sbb
ret
inc
add
mov
mov
push
fstl
push
sbb
imul
xchg
jl
fstps
scas
jmp
add
loop
mov
lods
push
loope
dec
fiadds
inc
fildll
cmp
out
fchs
scas
pusha
xor
xchg
js
mov
lods
adc
sbbl
add
push
in
in
movsl
imul
mov
adc
add
mov
mov
loopne
inc
mov
mov
xor
into
push
mov
mov
aad
cwtl
sub
sbb
or
add
mov
push
dec
sti
shrl
or
mov
mov
daa
adc
in
inc
ja
or
jnp
jne
je
sbb
xorl
shll
mov
sub
pusha
push
outsl
mov
or
das
add
pop
ret
shrb
mov
mov
shrl
xor
idiv
sahf
mov
adc
push
and
mov
sbb
imul
scas
xor
loop
pusha
loopne
enter
xor
inc
aad
xor
jle
lcall
or
cld
out
mov
pop
stc
sub
push
mov
insl
repz
das
mov
jne
mov
rcrb
cwtl
and
movsl
mov
stos
jge
les
pushf
and
mov
lret
imul
push
clc
inc
pop
sbbl
ja
cmpsb
push
xchg
mov
xor
repz
mov
in
push
lds
std
cmp
pop
jecxz
xchg
mov
fdivs
ja
mov
ror
inc
dec
cmp
mov
lock
out
push
mov
les
lods
fisubl
jg
inc
call
pop
es
dec
rorl
mov
sbb
cmpsl
xor
cmc
mov
mov
dec
add
cmp
adc
mov
rclb
roll
mov
xchg
dec
sbb
mov
subl
test
lods
mov
xchg
pop
jecxz
lcall
jb
hlt
mov
mov
mov
jns
jmp
mov
push
in
sub
lds
mov
arpl
rclb
or
out
in
pusha
addr16
xchg
hlt
repz
mov
fs
pop
mov
stos
mov
mov
call
mov
in
push
inc
lods
push
pop
scas
cltd
test
repnz
fists
and
repz
cmc
mov
popf
icebp
lcall
mov
xchg
sarb
xor
and
push
mov
int
icebp
jns
xor
mov
bound
add
mov
mov
cmp
adc
pop
cmp
ret
cwtl
and
leave
mov
mov
dec
cltd
cmpsl
out
ja
test
jne
cli
sbb
jg
mov
pop
scas
cmp
jge
mov
in
dec
pop
pop
sub
jno
shlb
imul
ss
shll
idivb
pop
les
and
mov
xor
xchg
push
in
mov
lods
in
mov
xchg
out
ss
ja
cmp
add
es
mov
push
lcall
insb
add
ret
and
mov
call
sbb
cmp
xchg
iret
jnp
mov
lfs
pop
dec
push
mov
ja
int3
xchg
jl
aaa
imull
push
aad
mov
repz
insl
mov
push
mov
std
mov
faddl
jne
mov
ss
or
mov
jns
aad
movl
loop
mov
cmp
sub
movsl
je
fcomp
inc
jbe
int3
xor
xor
cmp
or
dec
dec
ret
movsl
dec
div
into
xchg
mov
xchg
dec
fdivl
imul
mov
push
popa
out
cwtl
push
je
xchg
mov
ret
or
mov
mov
inc
std
sub
adc
test
mov
mov
movsl
add
mov
idiv
jl
imul
fwait
inc
mov
xor
movsl
neg
dec
int3
adc
xor
test
out
addr16
pop
xor
dec
aas
push
movsl
mov
sbb
mov
sub
sbb
add
jp
cmp
mov
sbb
sarb
mov
enter
sub
arpl
mov
xchg
pushf
mov
jecxz
not
test
js
lcall
mov
jecxz
mov
sti
jno
pusha
mov
cs
cmc
fucomip
rorb
xor
push
pop
xchg
dec
jle
hlt
mov
sub
xor
mov
mov
jle
push
ljmp
jbe
push
call
mull
rcr
mov
int
mov
push
sub
divl
fsubl
mov
mov
cld
divl
test
push
jp
mov
mov
fwait
sub
lcall
dec
sbb
fbstp
das
stc
add
xor
popa
js
jae
lret
push
sub
cltd
in
insb
enter
fstpl
or
xchg
roll
movsl
adc
sbb
rclb
ret
scas
and
pop
and
lods
les
inc
push
aam
fstl
movsl
addr16
sub
or
and
dec
cmpsb
mov
pop
mov
cmp
fistpll
outsl
mov
and
cmp
xchg
xor
js
xor
jae
dec
adc
mov
cmp
push
daa
sub
shll
hlt
jno
xchg
lds
xor
pop
testl
scas
xchg
mov
lods
ja
popf
popa
dec
xor
out
orl
pop
add
test
add
xor
xlat
dec
adc
scas
sub
mov
jae
jnp
data16
sub
mov
mov
in
ss
ficoms
jb
mov
cmp
sbb
add
mov
xchg
iret
cltd
inc
out
mov
cmp
xor
mov
sub
fbld
cmc
std
adc
lret
out
mov
sahf
inc
or
pop
pop
sub
pop
loopne
jmp
dec
mov
aas
clc
xor
sub
cmc
test
cld
jle
lret
cmp
data16
int3
adc
xchg
or
push
cmc
push
dec
or
arpl
sub
imul
mov
xchg
cmp
int3
jle
int3
mov
mov
xor
insl
fs
imul
mov
sahf
int3
mov
out
cld
test
pop
lds
adc
jge
das
cmp
cmp
adc
div
lcall
jecxz
ficoml
subb
dec
cld
xchg
mov
sbb
xor
mov
jo
lahf
shl
mov
xchg
cs
clc
mov
mov
imul
shrb
sub
sub
pop
jne
mov
sbb
and
test
sbb
call
fs
push
sub
daa
test
pop
popa
mov
aam
insl
jno
movsb
adcb
push
repz
cmp
mov
dec
mov
push
inc
test
dec
clc
jmp
xchg
cmpsb
fadd
je
stos
mov
mov
or
mov
sub
cmp
int3
dec
test
movsb
jns
cmp
sti
scas
fidivl
iret
xchg
add
ljmp
add
nop
outsl
and
mov
and
sub
int3
mov
insb
hlt
pop
aas
aam
fs
nop
std
rcrb
pusha
or
test
mov
lea
pop
incl
mov
xchg
aaa
int3
or
clc
cmp
fidivl
loope
xchg
inc
adc
int3
xchg
dec
jne
xor
xchg
or
lds
sahf
xor
into
rcl
mov
mov
dec
arpl
jmp
xor
movsl
push
in
and
push
dec
push
nop
pushf
stc
jo
je
or
cmc
jg
or
xor
fwait
sub
in
push
data16
lcall
cmp
push
addr16
or
movsb
out
jno
pushf
std
mov
es
mov
xchg
mov
add
imul
aam
mov
dec
in
dec
dec
mov
xor
mov
divb
mov
mov
pop
leave
jno
int3
loop
aas
cs
sub
sub
pusha
pop
jno
dec
nop
xor
xlat
lret
mov
insl
enter
mov
hlt
and
lret
xchg
stos
pop
xchg
bound
fdivl
and
or
mov
pop
gs
int
mov
ret
jbe
ror
popa
aas
js
addr16
insb
or
repz
and
popa
or
pop
or
dec
sub
jnp
add
or
or
arpl
bound
mov
movsl
ljmp
movsb
pusha
addr16
jecxz
sub
ss
or
push
sbb
sub
loope
std
lret
test
jmp
and
rorl
test
and
jmp
pop
ficoms
jo
das
mov
pop
jge
xchg
je
lret
inc
jno
and
dec
and
int
mov
inc
mov
push
outsl
aas
mov
popa
and
dec
dec
jp
xchg
ja
ret
mov
mov
lds
jp
cmp
mov
mov
scas
sarb
das
stos
insb
lret
sbb
mov
lods
cmp
lds
pop
ja
popa
push
imull
loop
lods
pop
xorb
mov
test
movsl
sbb
jbe
jle
mov
mul
push
outsb
inc
pop
push
popf
aad
cmc
mov
add
pop
into
movsb
hlt
jae
adc
aas
sbb
or
popa
daa
sbb
jbe
out
xor
loope
outsl
sub
push
pop
addr16
pushf
hlt
notb
or
mov
mov
aaa
lcall
inc
ret
in
pusha
adc
mov
xchg
cwtl
mov
dec
mov
pop
js
sub
fistpl
or
sub
jae
push
pop
aas
push
addr16
fadd
or
xchg
idivl
das
repz
pop
inc
adc
int3
xchg
imul
sub
fstpl
dec
mov
mov
push
sbb
in
aam
aas
jmp
mov
cli
les
int3
mov
pop
clc
nop
and
test
popa
pop
xchg
add
inc
push
pop
mov
stos
cmc
sub
cmpb
pushf
pop
xchg
lea
std
jp
rep
or
jne
mov
push
aad
xchg
stos
lods
adc
jae
adc
int
sar
xorl
dec
ret
jge
jo
test
lds
sub
shlb
sub
add
adc
sti
inc
incl
mov
jns
lret
rcrl
pop
cwtl
adc
add
ljmp
sbb
test
push
cmp
lock
mov
popf
dec
mov
insb
test
aad
push
cwtl
mov
js
push
and
stos
dec
sub
pusha
scas
pop
mov
dec
inc
lods
int3
dec
stos
stos
dec
push
mov
push
daa
sub
mov
or
cmp
or
sub
or
jns
js
cmp
sti
pop
pop
cmc
dec
repz
fsubl
mov
or
shll
lock
cli
lock
sub
testl
xchg
mov
mov
movsl
add
dec
ljmp
stos
fcompl
dec
shrl
adc
nop
and
int3
or
inc
rcrl
mov
sub
scas
mov
pop
push
loope
sbb
xchg
pop
cmp
push
aam
jl
js
int3
adc
addr16
mov
fs
mov
jo
xchg
mov
xor
es
pop
jne
or
ss
push
roll
fldl
dec
test
pop
adc
movsl
in
mov
and
mov
dec
push
sarl
fs
push
gs
fwait
iret
push
xrelease
add
divl
mov
test
mov
imul
mov
sub
shlb
lds
lcall
cmpsl
lret
loopne
mov
sbb
push
and
and
insl
pushf
movsl
gs
sub
cmp
sti
fs
repz
out
xchg
and
xor
loop
cmp
jnp
mov
aaa
mov
xlat
sbb
lret
shll
ret
mov
cmc
mov
jecxz
cs
ja
jbe
push
lea
push
dec
movsb
es
push
jae
lret
push
fs
sbb
je
adc
xor
sti
cmpsl
mov
xchg
nop
xor
in
test
inc
add
dec
xchg
cmp
sub
mov
and
mov
repnz
dec
jmp
pop
dec
and
pushf
or
cld
adc
or
orl
add
dec
jb
add
xchg
movsl
sbb
lahf
imul
jge
dec
push
push
test
push
ds
imul
sarl
int3
aad
cs
stos
ljmp
dec
xorb
lds
int3
sahf
fistpl
mov
mov
in
jl
cmpsb
or
lret
and
hlt
xor
fwait
and
imul
push
ja
daa
adc
test
pop
mov
popa
fbstp
orl
cli
xchg
ss
and
mov
sbb
and
inc
jp
repnz
sar
shlb
sub
jbe
lods
sub
mov
dec
inc
scas
loopne
push
xchg
mov
int3
push
leave
jo
ss
mov
cli
outsb
mov
add
ret
inc
xlat
adc
push
xchg
divl
incb
fs
or
jae
test
push
push
shrl
mov
xchg
arpl
ret
push
jmp
ret
push
lods
dec
stc
cli
out
xchg
les
mov
push
adc
mov
cmpsl
push
ja
pop
cmpsl
mov
out
addr16
xor
ret
push
cmpsl
lret
pop
add
inc
insb
jb
into
pop
out
mov
stc
sbb
cwtl
sub
jb
loop
pushf
xchg
dec
lods
fstl
xchg
stos
xchg
xchg
xor
xor
test
enter
cwtl
push
fstpt
push
mov
ljmp
jmp
insb
inc
jg
nop
mov
mov
jbe
movsb
push
inc
sarb
dec
mov
lret
xchg
repnz
adc
jmp
lods
push
and
jo
lock
fdivrs
xchg
mov
pusha
lret
fs
icebp
push
xor
jle
mov
push
lret
xchg
lahf
or
push
inc
mov
popf
and
or
je
dec
mov
movsl
dec
hlt
das
pop
std
pop
into
je
popa
mov
jne
jbe
out
mov
push
arpl
sub
repnz
adc
ret
movsb
in
punpckhdq
test
or
pop
sub
clc
ja
sub
sbb
ljmp
pushf
lret
dec
sub
fs
daa
push
xor
out
xor
mov
pop
mov
push
pop
movsb
movsl
add
jmp
rclb
pop
iret
mov
mov
movl
dec
jo
nop
lods
lea
mov
inc
mov
inc
fcomps
mov
aam
xor
push
xchg
pop
mov
push
cmpsb
fiadds
fmul
mov
leave
lea
xor
mov
sbb
ds
mov
mov
and
dec
pop
mov
test
cmp
mov
mov
push
add
jecxz
adc
xchg
mov
xchg
pop
aaa
inc
outsl
push
sub
mov
adc
inc
ss
sar
sbb
sub
inc
out
push
xchg
cld
stos
xchg
mov
fcompl
pop
push
lock
stos
pushf
mov
sbb
xchg
fwait
je
test
int3
or
add
andb
je
jo
add
aas
in
xchg
fisubrl
xchg
mov
xchg
lret
dec
dec
mov
mov
cmp
dec
mov
fildll
mov
scas
lret
or
push
insb
popa
ljmp
push
mov
fbstp
stos
jp
rorl
es
movsb
dec
add
or
dec
mov
push
fcmovnb
dec
xchg
bound
outsb
loop
mov
leave
mov
dec
ja
and
or
jl
insb
mov
jnp
pop
push
stos
fsubr
and
push
imul
hlt
adcb
int3
popf
in
shrl
push
in
popf
ljmp
stos
stos
jbe
sub
inc
push
adc
out
cld
fs
mov
bound
daa
std
imulb
ljmp
lcall
ja
sub
ret
test
in
mov
test
xchg
lret
aaa
add
push
es
sbb
arpl
hlt
dec
mov
adc
xor
jae
rol
cld
popf
pusha
shrl
cmc
into
fs
sahf
icebp
mov
cmp
std
mov
divl
pop
fcomps
pop
xchg
shrb
pop
lods
test
sbb
xor
cld
fadds
shrl
and
jg
outsb
push
outsl
test
push
test
mov
push
inc
mov
mov
sub
push
mov
dec
daa
or
jge
fbld
xchg
popa
test
js
cwtl
movsl
xor
out
jmp
out
lret
ret
add
inc
or
rcrl
data16
test
stos
cmp
out
arpl
jp
enter
loop
sbb
cltd
inc
jno
xchg
shrb
add
push
xor
and
xchg
push
ficomps
push
rcrl
or
ror
sub
mov
out
aad
mov
aaa
sahf
dec
gs
cld
sbb
movsl
test
jne
mov
fistl
dec
clc
ja
test
xor
mov
gs
dec
xlat
inc
shlb
adc
jnp
fisubrl
ret
movsb
mov
dec
sub
xor
jo
mov
pop
fldcw
cmpsl
inc
test
int
mov
je
nop
shrb
out
sub
arpl
mov
test
xor
loopne
lods
sub
inc
lcall
jl
ret
sahf
out
mov
push
pop
xor
cmp
mov
cmpsb
inc
cld
icebp
pop
sbb
mov
aas
jecxz
push
mov
loopne
sub
or
mov
cmp
int
mov
xor
pop
xchg
clc
xchg
pop
xor
inc
pushf
inc
mov
push
cmp
jno
xorb
pavgb
stos
jae
dec
jecxz
icebp
cli
push
imul
or
shrb
movsl
insb
sysenter
dec
fmuls
pop
cmp
xchg
sub
mov
xchg
pop
jbe
dec
clc
in
jecxz
in
mov
out
fnstenv
push
sub
sub
jle
outsl
pop
iret
jbe
mov
pushf
xor
imul
aam
mov
insl
pop
mov
dec
out
pushl
inc
ljmp
gs
inc
mov
mov
mov
jne
cltd
push
mov
mov
mov
jge
add
pushf
xor
jp
lfs
cli
scas
les
jb
pop
xor
iret
push
out
inc
or
jp
adc
lods
ds
sbb
and
and
les
ljmp
lods
mov
aas
mov
mov
dec
add
mov
jg
sbbb
mov
and
push
nop
aad
inc
mov
dec
js
mov
pusha
push
aaa
shlb
in
xchg
mov
push
icebp
addr16
pop
push
pusha
std
orl
push
push
test
lock
call
mov
loope
jge
out
and
mov
dec
add
jb
adc
adc
loop
sub
inc
xlat
dec
lret
pop
cli
lods
cmpsb
jge
repnz
add
jg
inc
mov
xor
fsubrl
lods
cwtl
or
xor
sbb
mov
test
xor
scas
cmc
xchg
lods
add
xchg
hlt
lret
jecxz
xchg
out
pop
out
mov
jb
mov
jle
arpl
xor
or
sbb
xor
adc
test
aam
mov
jnp
and
sub
cmp
movsl
stos
mov
mov
sbb
xchg
push
jae
dec
jle
ss
adc
cmc
shlb
icebp
mov
insb
mov
add
pop
mov
je
dec
insl
and
push
fwait
lahf
push
js
sbb
mov
out
sub
jb
test
lods
dec
sbb
in
mov
adc
cltd
jae
mov
inc
xchg
cmp
movsb
je
mov
xor
or
add
mov
imul
xor
lea
pop
cltd
adc
in
ja
sub
int
shrb
xlat
movsl
addb
add
cmpsl
pop
mov
lods
jmp
dec
adc
aam
imul
mov
inc
sbb
and
enter
xchg
into
nop
rclb
ss
mov
test
stc
int
in
fdivrl
jo
cmpsl
das
mov
add
adc
mov
gs
hlt
sbb
popf
xchg
and
mov
pop
jb
pusha
mov
mov
movsl
add
sub
mov
xchg
clc
fwait
push
in
arpl
xor
popf
lods
dec
mov
insb
push
pop
stos
mov
lds
stos
pusha
mov
mov
pop
shlb
pop
jns
mov
jae
in
xor
mov
mov
fimuls
cmp
fnstenv
push
sub
mov
cmpsb
int3
pop
mov
and
adc
mov
ljmp
inc
xor
xlat
lahf
jbe
jp
cld
pop
cwtl
cmp
mov
push
lret
jo
jg
jge
or
lcall
push
ds
sarb
add
mov
mov
push
mov
dec
jbe
insl
pop
mov
imul
scas
es
cli
ret
sahf
sub
arpl
xchg
mov
xchg
pop
mov
lret
mov
pop
mov
push
cli
iret
jae
cmp
fbstp
and
pushf
xchg
xchg
cld
loope
jmp
insb
arpl
push
add
stc
and
mov
mov
push
sti
push
dec
aam
cmc
leave
mov
stc
les
mov
aam
adc
fidivrl
mov
imul
fsubrs
add
xor
or
mov
lods
aaa
aad
cmp
mov
cmp
fwait
cwtl
or
stos
xchg
and
mov
fisubs
and
xchg
jl
lea
inc
jle
stos
shlb
adc
je
push
call
push
add
push
je
mov
lock
jl
scas
nop
sub
add
jge
jno
cmp
xchg
jns
test
push
xor
xor
inc
fucomp
jl
pusha
lods
mov
push
addr16
jg
xchg
jge
ljmp
rolb
icebp
push
dec
aad
jmp
mov
add
jmp
dec
ss
jne
test
adc
add
mov
inc
js
lods
mov
rcrb
pop
jle
test
rorb
mov
jp
mov
xchg
jne
push
xchg
mov
repz
lock
mov
ds
ret
cld
shlb
or
jl
jae
enter
jne
fidivs
xor
rcrb
xor
add
dec
xor
adc
push
inc
mov
inc
roll
mov
imul
inc
push
cmp
fnsave
fwait
mov
mov
sahf
mov
aad
fiaddl
or
out
or
sar
aam
fistpll
inc
mov
sahf
xchg
hlt
adc
mov
addb
pop
push
pushf
aam
jecxz
pusha
fsts
mov
xchg
sahf
jp
mov
fcmovnb
dec
mov
mov
in
ret
fwait
shlb
outsl
sti
fnsave
stc
inc
pop
mov
or
scas
ret
cmp
sahf
mov
out
icebp
insb
cwtl
push
add
mov
or
mov
in
call
cli
nop
push
ret
jp
lret
idivl
cmpsb
addr16
mov
pop
mov
mov
mov
enter
mov
jecxz
mov
xorl
fistpll
push
sub
adc
imul
sub
lahf
roll
mov
rclb
push
mov
adc
jp
jns
mov
aaa
inc
or
cmp
xor
movsb
adc
fwait
and
pop
mov
dec
add
mov
jecxz
aam
mov
mov
fcmovne
push
nop
jp
outsl
xor
mov
out
inc
xor
shlb
inc
nop
ja
daa
mov
add
outsl
in
mov
mov
filds
gs
push
cmpsb
je
jecxz
push
pop
sub
insl
and
imul
leave
sub
sub
or
sbb
jecxz
loope
sbb
mov
mov
mov
adc
and
mov
or
incb
mov
sarl
jae
cmp
xor
mov
pop
push
insb
int
je
shlb
mov
lods
aaa
jcxz
and
xchg
xchg
test
mov
das
jnp
shlb
mov
imul
pushf
xchg
xor
mov
movsl
outsl
repz
hlt
sub
xchg
cs
jl
cmpsl
sbb
cld
insb
xor
iret
insl
jmp
pop
test
xor
cmp
and
xchg
js
sub
sub
fmuls
loop
mov
not
lret
or
inc
xchg
shll
fadd
jns
mov
mov
pop
enter
into
pop
mov
xor
dec
mov
sbb
int3
dec
mov
nop
inc
ja
je
jecxz
mov
pop
inc
fcomps
sub
xchg
lret
xchg
rolb
jl
mov
mov
mov
sti
lods
test
fists
xor
mov
xor
movsb
push
inc
pushaw
or
mov
mov
outsb
adc
lret
xor
gs
jb
pop
xor
scas
movl
mov
bound
lret
pop
jnp
test
sbb
push
mov
lock
dec
fldt
aad
add
fld
imul
sub
mov
push
les
xchg
adc
xor
insl
mov
imul
push
test
xor
mov
xor
daa
add
ret
mov
cmp
mov
pop
cmc
inc
pop
ret
pop
dec
daa
iret
pop
mov
stos
lret
push
cwtl
pop
sahf
ja,pn
sbb
jb
mov
je
int3
insb
sub
push
jmp
adc
rcrb
or
nop
mov
addb
jl
mov
das
popa
rorb
sahf
push
add
xchg
in
push
mov
xor
mov
jge
mov
xchg
addr16
dec
in
mov
xor
ret
and
shrb
fildll
iret
enter
mov
popf
mov
push
dec
stos
mov
stos
stc
mov
jae
xor
mov
cmc
xchg
push
or
pop
cmp
jae
lret
mov
js
sbb
push
dec
mov
das
jnp
mov
ret
decb
mov
pushf
pop
mov
clc
inc
xor
push
mov
cli
in
jns
fstpl
mov
adc
pop
ret
xor
adc
out
nop
imul
pop
xlat
test
mov
pushf
xchg
xor
pop
les
pusha
nop
lds
rcll
or
push
stc
adc
inc
lret
and
movsl
adc
xor
movsl
inc
fcomps
push
pop
dec
xor
xchg
lds
outsb
push
leave
fildl
xchg
push
adc
mov
sub
dec
adc
icebp
repz
jbe
cmp
xor
push
daa
sub
scas
test
and
ljmp
adc
mov
jge
pusha
pusha
dec
fists
pushf
mov
cli
ss
push
and
xchg
repnz
scas
outsb
mov
cmpsl
ret
lret
in
xor
adc
add
scas
pop
lahf
leave
and
push
out
das
stc
fstpt
mov
dec
inc
mov
rolb
push
aaa
inc
and
cmp
test
fs
jmp
ret
lret
frstor
mov
flds
xor
xchg
js
xor
or
xchg
sub
mov
xchg
jmp
mov
mov
jl
mov
inc
pop
dec
gs
gs
daa
gs
fcomi
adc
lret
dec
aaa
dec
stos
mov
mov
mov
gs
pop
xor
dec
popf
sub
cltd
imul
push
mov
xchg
jp
js
daa
push
cmc
outsb
pop
mov
rorb
pop
das
lea
mov
leave
xchg
dec
mov
jbe
xorl
mov
xor
in
cld
in
mov
inc
push
jno
sub
pusha
cmp
lea
jae
mov
ljmp
jle
cmp
mov
mov
popa
in
jmp
sbb
outsl
imul
lock
mov
lea
adc
lret
push
xchg
rep
sbb
jbe
es
or
jbe
and
mov
push
pop
ja
mov
into
daa
scas
push
pop
int3
cmpsb
mov
pushf
fistps
mov
sarb
popf
push
cltd
test
adc
mov
ds
jns
fs
mov
ret
mov
mov
xchg
movsb
jae
mov
sbb
mov
ja
mov
out
pop
lea
ret
pushf
xor
push
xchg
fimull
and
mov
dec
loope
mov
cli
fmull
and
jge
pop
sub
repz
lcall
out
xchg
or
mov
xor
jne
and
int
pop
hlt
scas
dec
and
push
testl
stos
xchg
sbb
fsubrs
add
xchg
rcrb
mov
ss
in
hlt
xor
adc
cmp
cmpl
sub
dec
psllq
neg
clc
lea
rol
sbb
add
push
dec
mov
dec
pop
arpl
lock
stc
call
jae
sbb
sub
dec
adc
testb
out
inc
shll
dec
or
loope
mov
push
push
add
scas
xor
mov
dec
jmp
pop
lret
test
test
aam
in
fmuls
arpl
cmpsl
cld
pop
add
xor
psubw
jae
cmp
test
fcmove
cld
xor
mov
sub
push
sbb
sbbb
ja
inc
lret
jle
xor
sbb
push
pushf
sbb
aad
les
and
sbb
fimuls
and
cld
bound
mov
fmuls
xchg
push
xchg
nop
or
cmp
daa
inc
stos
call
cli
xchg
and
push
jb
xor
test
and
jecxz
mov
popf
and
decb
stc
push
test
movsl
sub
jmp
dec
sub
int3
cmp
adc
xchg
cmpsb
pop
mov
outsb
test
es
testl
mov
lods
sahf
pop
mov
notl
cld
repnz
xor
add
sti
xlat
push
cmp
test
pop
ja
dec
adc
rol
movsb
adc
movsl
cli
shrb
rclb
cmp
push
adc
leave
jg
sub
cmp
hlt
push
xor
add
push
fdivs
sub
ret
arpl
out
inc
mov
test
jb
ss
cli
aas
xchg
loope
adcl
cs
into
movsb
cwtl
shl
push
xor
movsb
subl
xchg
jmp
test
fmuls
popf
test
or
js
mov
push
bound
fwait
jg
fsubs
mov
push
adc
fnstcw
xchg
jne
outsb
pushf
sub
popa
int
cmp
mov
mov
lahf
push
jb
xchg
push
pop
jmp
xor
cmc
or
mov
stc
loopne
xchg
mov
xor
pop
xor
test
cmp
aas
das
pop
cmp
push
jmp
xor
pop
add
fwait
sahf
cmp
adc
stos
imul
push
lcall
popf
sub
in
cmp
xor
cmpl
mov
fidivs
negb
cld
dec
jno
push
adc
mov
mov
pop
fs
les
mov
outsb
test
xchg
mov
dec
mov
add
lock
sahf
jecxz
mov
mov
outsl
test
shrl
mov
sahf
and
cli
sbb
lcall
jns
fs
cmp
loop
push
call
popa
sbb
testb
cmp
mov
sbb
jge
insb
mov
xchg
movsb
movsl
sbb
mov
std
or
mov
lock
insb
aas
push
mov
mov
jo
push
mov
lods
sub
sarb
lds
iret
inc
cmc
pop
cmc
stos
push
test
dec
sub
add
adcb
xchg
jne
push
icebp
in
ljmp
jnp
xorb
xchg
mov
lcall
test
inc
imul
xchg
scas
cwtl
dec
fdivrs
sbb
cmp
push
addr16
push
jecxz
in
sahf
psubq
mov
mull
pushl
xchg
fldt
sub
les
bound
pusha
inc
add
pop
mov
sysexit
jo
inc
and
dec
int3
aad
es
arpl
mov
imul
adc
loopne
mov
sub
mov
stos
subl
and
sbb
mov
leave
dec
inc
dec
sbb
or
jg
bound
and
mov
mov
in
int3
sahf
cld
mov
cmp
xlat
data16
test
push
adc
pushf
lods
test
add
stc
sub
dec
dec
sub
xlat
mov
hlt
int3
sbb
movsl
mov
fisubs
je
lds
sub
and
push
mov
stos
fidivrs
subl
xor
push
adc
lret
mov
sub
inc
negl
dec
mov
mov
fstpl
filds
xor
das
mov
hlt
daa
sbb
shrl
pop
scas
xchg
and
push
fildl
shll
inc
test
xchg
push
pop
mov
mov
int
test
fwait
leave
jle
out
fcmove
insl
sub
mov
enter
mov
das
imul
xchg
jo
mov
call
jns
fcmovnu
je
jno
push
scas
sub
ss
mov
mov
repnz
movsb
aam
push
adc
and
mul
mov
dec
mov
mov
repz
and
hlt
jp
insb
push
pop
das
pop
rcll
jnp
mov
es
jecxz
enter
aam
lea
test
mov
cltd
and
dec
jo
nop
iret
mov
xor
aas
test
fcmovu
pushf
ss
dec
sub
sub
inc
or
jle
adc
adc
in
test
imull
mov
jp
push
pushf
mov
mov
int3
fucomi
mov
mov
adc
iret
lods
mov
inc
jle
int3
fucompp
lret
mov
push
xchg
xchg
mov
adc
dec
cmp
int
pop
pop
xchg
xchg
lret
fimull
or
in
inc
ficoms
jo
test
stc
incl
mov
mov
movsl
mov
cwtl
cmpsb
jge
jl
data16
xchg
in
fs
nop
cmpsb
mov
sti
mov
and
sub
jmp
jp
adc
rcll
mov
or
test
pop
and
ret
xor
sub
or
xor
and
out
xchg
aaa
repnz
pusha
xor
xchg
in
jg
stos
stos
test
or
mov
ret
fs
xor
out
xor
pop
xor
xlat
inc
pusha
stos
jb
icebp
mov
mov
mov
ret
add
xchg
push
add
cmpb
hlt
popf
cltd
xchg
insl
jecxz
daa
xor
rolb
xor
mov
pop
test
and
out
lret
sub
xor
divl
out
sub
mov
int
inc
fisttpll
mov
fists
movsb
into
mov
test
loopne
xor
sbb
sbb
push
ja
repz
pop
sbb
inc
pusha
and
sbb
aaa
imul
popa
lods
stos
jae
mov
scas
add
or
sahf
pusha
or
js
dec
mov
ljmp
imul
insb
adc
rcrb
mov
fwait
xor
xchg
jb
dec
mov
imul
repz
mov
loop
add
xor
jle
cli
add
push
xchg
cltd
popa
lea
int
mov
dec
outsb
xchg
adc
mov
frstor
mov
int3
mov
sub
adc
fst
iret
out
cmc
add
es
add
mov
inc
sbb
mov
xor
cmpsl
xor
mov
or
sub
outsl
pop
adc
data16
imul
mov
mov
int3
out
fnstenv
insl
ret
cmp
sahf
test
xor
mov
dec
lret
xor
ret
in
mov
outsl
fmull
inc
icebp
push
popa
call
ljmp
pop
test
pop
leave
cld
movsb
pusha
sahf
insb
nop
dec
dec
test
xchg
and
hlt
mov
int
xor
fistl
lret
xlat
fstpt
and
xor
push
int3
test
sub
int3
aaa
arpl
into
popf
ret
push
inc
fwait
test
and
push
cld
lea
arpl
cltd
mov
push
daa
pop
and
add
push
rcrb
lcall
mov
cli
out
sbbb
das
mov
jbe
xor
ds
xchg
and
or
ljmp
mov
mov
stos
fwait
rorb
test
push
mov
jmp
mov
rorb
add
and
or
es
adc
lods
inc
push
into
mov
cld
int
movsb
mov
scas
or
lods
xor
ds
data16
sti
or
add
inc
sub
cmpsb
out
cmp
cmp
mov
add
test
testl
lods
and
pushf
cmp
push
std
hlt
lds
data16
jo
test
fcompl
mov
cli
adc
into
cltd
test
mov
bound
sbb
ret
mov
cwtl
gs
xchg
fldl
fists
stc
int3
test
mov
mov
dec
cld
ret
inc
sahf
sarb
mov
lea
and
iret
adcb
stc
iret
mov
xorb
cmp
jb
pop
cmc
shlb
mov
int3
and
sbbb
pop
ljmp
or
sub
stos
mov
and
pop
repz
cmp
cmp
mov
outsl
ret
push
mov
mov
lret
inc
addr16
inc
dec
jecxz
xchg
lcall
sbb
mov
dec
leave
fwait
pushf
lock
push
data16
aam
imul
ljmp
and
in
pop
scas
inc
inc
or
pushf
mov
push
mov
sub
mov
ret
mov
and
cs
bswap
or
das
dec
cmpsb
in
push
xor
mov
mov
pop
mov
test
outsl
mov
loope
adc
dec
test
repz
sub
adcb
out
test
cs
adcl
xor
adc
loop
nop
aam
hlt
jns
adc
mov
enter
hlt
sarl
push
test
adc
movsl
and
lret
and
dec
cld
aas
lret
pop
movsl
ja
cltd
push
adc
popa
sub
repz
mov
pop
jns
fnstenv
mov
loopne
or
xor
stc
inc
xor
dec
scas
scas
sbbl
add
ficoms
push
imul
nop
rep
push
and
mov
fs
sbb
movsb
push
push
add
jecxz
jnp
popf
jae
rorl
mov
test
scas
inc
outsb
xchg
aam
gs
or
icebp
cs
lods
ds
cmp
movsl
and
xor
cmp
mov
push
ret
xchg
push
mov
movsb
daa
push
insb
enter
fdivrs
cmp
mov
out
lret
repz
in
sbb
pop
mov
in
xchg
jg
fstpt
outsl
jmp
movsb
dec
hlt
in
not
jnp
mov
addr16
jae
mov
cld
jmp
ret
xchg
xor
mov
cmpsb
push
mov
and
xchg
insb
loop
cld
or
push
xchg
inc
test
inc
mov
jae
jne
push
fwait
and
xchg
das
int3
xchg
out
pop
and
mov
adc
mov
lret
out
je
cld
mov
adc
je
mov
lea
or
lods
xchg
mov
sbb
fildll
cmc
stos
jle
and
push
cmp
rorb
pop
cli
adc
pop
movb
sub
nop
shrb
pop
lds
xchg
sbb
and
mov
cwtl
mov
jnp
or
inc
xor
mov
jbe
loopne
aam
and
pop
and
sub
mov
push
cmc
mov
repz
lret
pmulhuw
outsb
jno
sbb
dec
dec
and
mov
lret
fsubs
push
negl
jo
push
stos
popa
sub
scas
sti
push
inc
mov
testl
fistps
push
sbb
dec
mov
jo
jno
jb
rorl
clc
test
push
loope
cmpsl
cmp
sahf
lea
mov
inc
int3
sbb
or
or
lahf
sbb
push
nop
pop
aad
hlt
xchg
movsl
mov
in
stc
filds
ret
test
xor
jo
push
in
adc
lods
add
mov
sub
mov
pop
ss
push
jne
cwtl
or
push
nop
dec
ret
adc
repnz
pushf
je
insl
outsl
scas
jp
int3
es
sub
lcall
xor
mov
lods
adc
xor
sub
xor
imul
push
jne
dec
stos
inc
fisttps
adc
sbb
dec
lods
shll
pop
lret
sbb
mov
xor
loop
adc
mov
sbb
imul
ret
sub
mov
jb
call
cld
aaa
jl
cmp
adc
ffree
fwait
ja
mov
jnp
xor
pop
pusha
xchg
lret
cmpsb
dec
sub
xchg
sub
push
dec
jno
jg
inc
pusha
mov
mov
or
call
inc
dec
mov
mull
push
cmc
dec
push
mov
sub
lret
movsb
outsb
into
mov
xchg
imul
cmc
rcr
mov
in
mov
sub
mov
cli
xor
xchg
xor
mov
xor
stos
jns
iret
sbb
push
mov
pop
xchg
ror
shlb
cmp
fldl
dec
lds
cmp
mov
loopne
mov
push
lock
dec
inc
pop
mov
mov
cs
or
imul
adc
inc
ret
or
dec
cmp
pop
fsubl
daa
stos
bound
dec
mov
mov
pusha
mov
fdivrp
mov
xor
imul
dec
mov
sbb
pop
adc
xlat
fimull
pop
outsl
sub
push
insb
repnz
jnp
mov
pusha
sbb
ret
bound
xchg
in
dec
scas
add
ljmp
or
or
mov
outsb
jbe
out
int3
in
pop
jg
repnz
sahf
mov
cs
loope
cmpb
imul
pop
adc
dec
dec
push
movl
sbb
jecxz
int3
jnp
xor
rcrl
mov
cli
adcl
cli
lcall
cmpsb
xchg
dec
mov
incl
mov
int3
out
test
repz
daa
les
notb
pop
test
sub
pop
mov
jb
aad
lcall
xchg
push
popa
fadds
mov
xor
cmpsb
pop
push
lea
and
xor
aas
lcall
jae
testb
testb
sub
jg
xorb
xchg
fs
or
mov
ret
mov
orl
ret
imul
movsl
movsl
pusha
dec
mov
dec
mov
fwait
loop
sub
add
xchg
jne
in
lods
xor
subb
outsb
mov
ret
icebp
lret
adc
lods
xor
cs
and
lcall
jno
mov
out
in
jle
test
mov
push
push
push
outsb
push
test
inc
mov
mull
adc
pop
xor
cwtl
sarl
test
xor
push
cli
test
dec
xchg
rclb
clc
sbb
mov
adc
sub
int3
xchg
hlt
add
add
xlat
push
ret
pop
imul
adc
test
das
pop
mull
stos
fisttps
addl
lret
and
mov
mov
dec
mov
outsb
in
addr16
test
adc
adc
add
sub
or
cmp
mov
pop
imul
lahf
cwtl
mov
test
hlt
lret
data16
push
cmp
xorb
add
mov
arpl
loope
and
xchg
movsl
imul
ljmp
inc
leave
adc
pop
lods
int3
inc
sub
mov
fadds
data16
stos
stc
mov
enter
test
jl
lret
cmp
xor
xorb
adc
pop
ret
or
cmp
jmp
mov
mov
aad
jmp
mov
xchg
sub
dec
test
stos
arpl
imul
stos
cld
add
jp
cmp
fs
movsb
aam
xchg
stos
lret
adc
rorl
mov
movsb
and
jmp
movsb
hlt
inc
divb
pushf
mov
pop
push
mov
cmp
adc
jb
push
xchg
js
cltd
sub
mov
test
imul
mov
rcrl
test
out
add
xor
movsb
lods
or
xor
sahf
and
push
shrb
movsl
je
rorl
mov
dec
call
mov
add
pop
mov
adc
xor
in
stos
fdivrs
lea
sbb
pushl
imul
arpl
out
pop
lea
mov
ror
cmpsl
push
xchg
mov
dec
lret
int3
es
inc
out
enter
dec
jg
lods
push
out
test
in
push
jmp
cld
sbb
repz
lret
sub
or
ret
in
ror
sti
mov
into
repz
cli
push
mov
cmp
xor
mov
ss
shlb
test
or
mov
nop
movsb
lods
adc
std
nop
jle
mov
int3
dec
mov
pushf
mov
mov
imul
jmp
lret
stos
std
test
adcl
repz
xchg
test
or
cmp
ret
push
in
repz
mov
mov
pop
lock
mov
inc
jns
outsl
push
push
sub
cld
das
jmp
xor
andb
jecxz
dec
jb
sub
mov
dec
fcom
stos
nop
out
jmp
out
fstl
int3
inc
les
inc
dec
sub
push
and
mov
xchg
sub
scas
sbb
ja
ret
stc
loopne
mov
stos
sbb
shrl
mov
in
lods
test
cmp
pop
mov
dec
fistpl
sti
outsl
insb
sbb
pop
outsb
xor
push
xor
and
cli
sarl
shl
fcompl
fisttps
mov
jne
add
mov
arpl
sbb
in
jne
movsb
inc
mov
js
test
mov
in
and
inc
mov
mov
inc
pop
pop
fmull
das
lret
sbb
adc
out
jecxz
jae
cmp
into
data16
addr16
repnz
pushf
cmp
xor
out
mov
fcmovbe
movsb
rorb
jl
sub
sub
or
sahf
add
cmp
pop
xchg
test
or
mov
xchg
cld
push
lret
aas
cmp
imul
cmp
inc
popf
pop
rcr
aas
pop
cmp
nop
bnd
ds
repnz
pop
dec
ljmp
pop
add
sbb
pop
push
hlt
fs
cli
jmp
sub
in
inc
inc
imul
mov
ds
or
and
imul
rorb
inc
pop
xchg
mov
insb
aas
xor
mov
dec
push
sahf
rcrl
mov
cmp
and
mov
jne
pop
fcompl
pminsw
pop
xchg
fnstenv
popf
add
or
sbb
jp
mov
addr16
scas
sub
mov
adc
dec
cmpsb
in
aam
int3
xchg
jmp
fbld
incb
loope
adcl
ret
mov
fs
leave
push
dec
or
lea
loopne
jo
in
jg
std
mov
inc
fists
or
in
xchg
lea
sbb
rcl
imul
arpl
popf
mov
sub
cld
mov
dec
cmp
sub
mov
and
xor
push
dec
inc
les
cmc
test
movl
cli
push
test
mov
xchg
mov
ss
cltd
lret
gs
mov
pop
scas
lret
int3
mov
jle
divb
ljmp
inc
icebp
int3
dec
adc
nop
mov
pop
mov
push
sti
imul
test
or
or
sub
mov
sbb
xchg
pop
int3
pop
inc
mov
mov
jg
mov
add
sbb
add
xor
push
xchg
les
ja
jmp
xchg
punpcklbw
pop
insl
lret
xor
stos
in
mov
ret
shlb
arpl
cmp
movsb
lock
jno
sub
sbb
lcall
add
call
test
je
data16
mov
pop
cs
xchg
iret
mov
rol
xor
lret
movsb
ds
adc
xor
pop
lods
aad
cs
stos
fucom
scas
or
ret
orl
rorb
xchg
sbb
into
stos
dec
mov
sahf
div
js
movsl
push
out
push
fs
cltd
pushf
sahf
inc
jecxz
repz
jle
imul
stc
lods
imul
mov
fwait
push
loope
inc
popa
lret
sbb
repnz
jge
jnp
mov
push
adc
cltd
push
pusha
push
movsb
dec
lea
xchg
add
mov
adc
pop
stos
test
ret
jmp
add
scas
cmp
daa
or
dec
lret
sbb
xlat
push
in
add
xchg
mov
mov
lds
mov
popf
int3
sub
gs
ljmp
pusha
shl
xchg
mov
pop
mov
jl
jmp
xor
xchg
stos
adcl
arpl
mov
rorb
adc
aaa
enter
mov
jmp
jns
push
push
sub
or
xor
pop
fsub
scas
and
dec
dec
sub
or
and
mov
mov
fldcw
movsl
int3
subb
and
pop
daa
mov
fs
ds
pop
mov
push
inc
aaa
test
ss
leave
xlat
adc
mov
mov
dec
in
rol
push
mov
mov
divl
rol
lcall
mov
jne
pop
arpl
and
dec
cmpsl
int3
mov
pop
cmp
dec
pop
or
fisttpl
popa
pushf
negb
xchg
mov
out
scas
pop
int3
shll
jnp
adc
mov
icebp
imulb
stc
cld
insb
xor
push
leave
je
add
mov
dec
sbb
outsb
mov
mov
lea
mov
adc
sbb
clc
test
sbb
jmp
lret
pop
adc
jae
ja
daa
and
and
imul
jnp
inc
pop
and
cmp
outsl
mov
adcl
or
inc
or
push
int
das
add
pushf
ficoml
mov
mov
lea
test
and
mov
popa
into
sar
jne
mov
mov
shl
xchg
dec
arpl
mov
loope
sbb
movsl
fs
stos
lret
sti
sbb
popl
test
stos
imul
adc
cs
and
clc
mov
or
xor
movsb
ja
mov
push
test
inc
rorb
pushf
push
jg
mov
push
add
mov
mov
or
xor
inc
dec
enter
pop
or
iret
notl
stc
pop
and
dec
and
ds
lea
arpl
mov
mov
shll
mov
outsl
mov
mov
popf
sub
add
push
stos
movsb
cld
cs
fs
pushf
cwtl
mov
and
inc
push
cmc
and
mov
and
adc
sar
lods
ds
ret
sub
cli
sub
stos
add
pop
xor
sbb
and
sahf
or
dec
idivl
push
cmp
adc
jo
ljmp
dec
adcb
ljmp
test
movsl
sahf
in
jecxz
or
add
pop
inc
movsl
add
fwait
call
iret
mov
inc
pop
cmp
xor
filds
popf
inc
and
and
test
mov
lret
arpl
jbe
movaps
dec
adc
jb
fildll
cwtl
cwtl
xor
sub
push
cld
movsl
lea
sub
jbe
or
jp
ds
xchg
xor
std
mov
daa
sub
mov
gs
divl
adc
push
addr16
sbb
mov
xchg
incb
push
pop
mov
xchg
sbb
cmp
mov
mov
test
iret
addr16
lea
or
xchg
mov
out
xchg
cmp
xchg
xchg
fcmovnbe
cmp
jmp
test
shr
and
lea
pusha
inc
ss
mov
push
dec
jns
or
int3
adc
push
jbe
or
mov
xlat
xchg
and
pop
movsb
pop
cmpsb
loopne
push
pop
subl
neg
lret
in
shlb
sub
std
invd
jbe
in
imul
xchg
jne
stos
adc
ret
adc
cli
je
sti
cmp
subb
popa
mov
dec
push
loop
fs
and
rclb
loop
rclb
lahf
lret
pop
sub
cli
sbb
mov
mov
mov
js
xor
clc
enter
sti
lret
enter
sub
imul
or
frstor
scas
pop
sub
adc
adc
inc
mov
data16
sbb
pop
mov
sahf
push
data16
sbb
cmp
stos
jp
xor
divb
sub
rcrl
pop
loopne
inc
loopne
or
mov
repz
cmp
mov
mov
mov
rorl
mov
ret
lcall
push
adc
mov
cmc
or
arpl
dec
lret
xlat
push
imul
vphaddbd
fs
hlt
nop
xor
jne,pn
inc
repnz
add
sahf
shl
daa
jmp
popf
mov
cmp
icebp
xchg
imul
add
sub
jp
sub
add
mov
lods
cmc
mov
sbb
shrb
or
xchg
int3
fldl
je
loopne
push
lock
arpl
xchg
test
dec
fcmove
nop
rol
fwait
sbb
cmp
in
je
and
nop
std
in
test
mov
add
cltd
je
daa
cwtl
mov
pop
adc
sbb
pop
stc
push
std
xor
shl
mov
or
xchg
xchg
jg
jnp
inc
mov
xor
rclb
in
arpl
xchg
mov
movsl
pop
gs
adc
cmp
mov
leave
cmpsb
stc
jge
outsl
mov
push
jl
xchg
pop
fwait
repnz
stc
bound
cmc
ljmp
cmp
and
leave
sbb
sbb
cmp
xor
push
push
inc
jle
ficoml
shlb
xor
sbb
adc
or
int
and
xchg
and
shrb
push
lcall
mov
inc
lea
cmp
mov
fmull
push
mov
xchg
scas
gs
int3
leave
lret
xchg
ds
and
into
add
int3
pop
mov
int3
inc
adc
mov
sbb
inc
jae
cld
cmpsb
hlt
decl
sub
cmp
mov
pushf
xor
idivl
mov
push
lea
test
push
fnstenv
adc
out
shl
lret
jnp
shlb
loop
pushf
and
rorb
add
jl
jl
fiadds
out
xchg
hlt
inc
push
loopne
stos
ljmp
jae
popa
dec
adc
push
shll
ret
ss
mov
jge
jge
add
xor
sti
fldenv
scas
adc
in
lcall
lea
pop
cmp
adc
adc
mov
divb
int3
cmpsb
rcrl
pop
mov
sbb
dec
cmp
inc
dec
out
sahf
call
lcall
sub
loopne
clc
cltd
mov
and
adc
and
push
jmp
test
out
add
divb
dec
pop
repnz
rolb
pop
lcall
movsl
sub
inc
xchg
bound
mov
sub
sub
inc
fldcw
push
push
jno
daa
pop
mov
popf
cwtl
int3
push
jb
fisttps
and
mov
popa
icebp
mov
cli
jb
jbe
insb
pop
mov
outsb
mov
out
ljmp
and
dec
test
popf
mov
popa
rep
cmc
jb
pusha
lret
jl
bound
jp
test
call
adc
mov
sub
cmp
faddl
jae
mov
mov
xchg
ret
lcall
rcl
shll
add
push
xor
outsb
pop
stc
jecxz
rcrb
popf
mov
mov
cltd
leave
push
aam
mov
adc
mov
scas
xchg
daa
mov
xchg
push
mov
popa
pushf
fdivs
daa
jns
mov
loopne
xchg
push
mov
or
mov
pop
pop
sub
fldcw
pusha
adc
or
cli
subb
and
stos
mov
daa
cmp
sbb
dec
mov
xchg
push
addr16
mov
lods
jmp
push
fists
insb
out
xchg
or
sbb
inc
xor
cwtl
stos
sub
xchg
frstor
push
fcompl
scas
aam
or
xor
cmpsb
dec
out
das
xchg
mov
jo
inc
mov
jnp
sub
clc
add
mov
mov
or
fdivrs
je
cwtl
ss
les
shrb
lods
sahf
mov
xchg
insl
je
pop
loope
movsl
cmp
iret
cmp
fcoml
cmpsb
lea
cmp
jbe
push
out
mov
sbb
mov
mov
xchg
xorb
fdivs
sub
sti
mov
mov
fidivrl
push
adc
stos
mov
jno
outsl
repnz
mov
add
ds
incb
pop
jbe
sub
icebp
adc
xor
mov
sub
sub
cs
xchg
pop
mov
adc
clc
in
out
scas
lods
sub
dec
mov
inc
mov
mov
add
in
jge
sub
movsw
cmp
dec
out
mov
lcall
jns
mov
xor
xchg
test
and
inc
and
pop
cmp
push
mov
push
aas
hlt
xchg
adc
in
addr16
ret
lret
shl
inc
mov
testb
rolb
fwait
pop
movsb
mov
ja
mov
mov
test
mov
call
or
pushf
cmpsb
push
in
xlat
in
sub
jle
inc
pusha
cmp
fsubrl
or
jnp
adc
xor
scas
mov
mov
sarb
fcoml
test
jmp
jecxz
and
fs
stos
shl
mov
jae
mov
stos
aam
mov
orl
and
xor
push
rcrb
cmp
and
push
arpl
hlt
and
aas
jae
xor
push
mov
cmp
and
sub
adc
mov
orl
imul
mov
test
pop
fcomps
movsl
loopne
dec
cld
xor
push
pusha
adc
js
mov
lret
mov
xlat
fidivs
xchg
das
mov
shlb
mov
pop
loope
sub
call
fwait
dec
inc
cmp
mov
cmp
inc
lret
mov
fbld
fcomp
pushf
mov
lcall
xchg
xchg
mov
mov
add
bound
mov
mov
movhps
and
aaa
int3
or
ljmp
xchg
jae
iret
dec
addr16
inc
mov
stc
mov
rolb
mul
lock
sub
movsb
mov
mov
insl
test
mov
jl
fldcw
movsl
ret
pop
pop
mov
clc
sbb
mov
idivl
popf
mov
dec
cmp
push
sbb
cmc
mov
mov
sbb
xor
jno
mov
cmp
lret
jge
inc
loopne
and
jg
movsl
decl
pop
adc
adc
xchg
shrb
inc
jg
xor
mov
cld
addl
enter
jl
sbb
mov
dec
fistps
mov
xchg
mov
repnz
int3
and
mov
pop
in
aam
pop
cmpsl
mov
stos
aaa
push
jb
cmp
lods
cmp
pop
rorl
xor
pop
push
hlt
mov
xor
sarl
xchg
sbb
stos
pop
jb
or
out
dec
adc
sbb
int
shll
jns
jae
or
fnstsw
mov
and
les
cwtl
sub
into
cmc
mov
inc
mov
sahf
leave
in
jb
sahf
test
test
test
out
movsl
shl
xchg
push
jae
in
mov
push
sbbl
jmp
cwtl
outsl
out
in
xchg
fs
jnp
inc
pop
adc
invd
pushf
popl
cwtl
mov
push
mov
mov
inc
fwait
or
jb
jnp
rorl
enter
and
mov
es
in
ficoml
pushf
mov
cmpsb
jae
ret
xor
fistps
ljmp
xchg
push
xor
mov
xchg
mov
arpl
mov
movsb
sbb
mov
jmp
lret
mov
into
inc
ss
imul
push
xchg
pusha
adc
hlt
inc
sbb
pop
mov
test
and
mov
ffree
lahf
cmp
sub
mov
mov
jo
jnp
and
int3
mov
adc
insb
sti
mov
push
inc
shrb
mov
dec
ret
push
icebp
mov
sbb
je
xchg
ret
inc
cmc
mov
addr16
divl
js
mov
pop
xchg
aam
push
and
das
sbb
xchg
mov
adc
pop
aaa
lret
hlt
lahf
sub
rcll
rcrl
lods
lock
jp
fidivs
pop
mov
repz
lods
out
push
push
das
ret
lods
fnstsw
lret
movsb
sub
and
enter
sub
mov
mov
push
shlb
mov
aas
xchg
jle
sbb
fcomp
negl
or
mov
push
mov
pop
stos
fidivrs
and
xor
mov
push
jle
cmp
inc
aad
cmpsb
les
pushl
xchg
xor
loope
test
pop
and
popf
pop
stos
jae
sbb
mov
loop
mov
add
icebp
das
push
xchg
gs
ror
lods
andb
loope
mov
aas
pop
mov
push
out
lods
mov
call
mov
int3
scas
push
loope
xchg
mov
movsl
inc
clc
call
jnp
xlat
fisubrl
or
mov
sbb
repz
rorb
fwait
mov
pushf
in
leave
fs
movsl
push
push
scas
scas
arpl
push
addr16
sub
mov
mov
das
dec
cmpsb
mov
pop
lock
rcrb
rcl
inc
pop
mov
pop
addr16
jns
in
mov
push
sub
jae
lahf
daa
push
jb
lods
sbb
and
hlt
inc
aaa
sti
clc
mov
sbb
sub
ja
aam
pop
lods
inc
mov
stos
cs
movsl
call
sbb
orl
mov
mov
inc
cld
cmp
push
mov
subl
fistps
and
push
into
mov
mov
std
out
mov
stos
mov
xchg
dec
add
xorl
insl
add
cmc
pusha
sbb
or
push
in
push
shl
xor
in
in
mov
and
cld
adc
lods
xor
adc
ss
leave
dec
int3
add
inc
mov
dec
fwait
aas
mov
cltd
lret
lods
enter
in
push
xor
mov
leave
push
xlat
mov
push
loop
cmp
jb
and
cmpsl
xlat
mov
cld
repz
inc
sub
dec
int3
xchg
movsb
dec
mov
insl
rcrb
daa
cmc
pop
inc
xor
push
xchg
cmp
mov
fisubs
xchg
dec
push
cltd
inc
or
jno
xor
xchg
lret
fdivrl
hlt
lods
dec
push
test
and
aam
jb
lea
cmp
dec
js
repz
mov
leave
ja
leave
sub
mov
push
lods
pop
sbbb
sbb
pop
mov
mov
mov
dec
xor
loope
jne
lock
and
cmp
push
xchg
fs
xchg
or
push
mov
enter
mov
adc
addr16
aad
push
pop
loope
add
cwtl
cmc
rolb
sbb
push
sub
mov
addl
push
imul
fnstsw
dec
test
mov
jg
lods
adc
fdivrs
cmpsb
cmc
ljmp
xchg
and
add
lret
shrb
sub
lds
push
jne
add
lods
lods
hlt
and
xor
popa
movb
push
and
xorb
jb
test
mov
add
sahf
mov
popa
lcall
popf
add
xor
lods
sub
mov
jge
and
stos
or
mov
xchg
shll
js
test
cmp
xlat
add
mov
pop
rclb
xor
sub
adc
lret
hlt
xor
iret
pop
test
insb
cmp
sarb
fwait
xchg
dec
notl
shr
lret
push
popa
adc
aas
in
roll
sarl
fs
roll
cmp
sbb
xorl
mov
loop
mov
pushf
pop
sti
xchg
jne
mov
sub
lret
fdivrs
loop
je
ret
jno
dec
clc
cli
enter
lods
lods
lds
sbb
mov
into
aad
ja
push
fwait
sub
xchg
loop
cmc
jns
push
pop
mov
dec
sub
and
push
push
cmpsl
fs
and
jecxz
arpl
adc
mov
pop
out
mov
push
add
or
stos
popf
push
and
mov
push
leave
xchg
js
adc
mov
mov
jmp
imul
bound
push
cld
adc
push
push
pop
rcl
mov
rorl
or
nop
outsl
fisubrs
je
mov
cwtl
pop
mov
push
stos
mov
dec
divb
inc
mov
inc
sbb
xchg
mov
push
ror
mov
clc
mov
fldcw
inc
mov
mov
xchg
add
and
pop
ds
xchg
lock
mov
cmpsl
jbe
pop
dec
mov
out
jo
je
dec
imul
xor
lea
sbb
ljmp
test
rcrl
cld
popf
andl
repz
fbstp
sysenter
mov
pop
stc
xchg
outsb
fs
jnp
push
mov
nop
push
stos
decb
arpl
test
mov
ja
arpl
lret
adc
bound
mov
xor
jno
out
fists
lods
dec
cmp
or
daa
push
sbb
shr
arpl
dec
pop
lock
pushf
cmp
imul
mov
das
sub
cwtl
mov
push
push
int3
andb
cltd
lret
mov
and
pop
cld
inc
pop
bnd
outsl
push
mov
mov
int3
insl
lods
sub
xchg
mov
mov
push
test
out
int3
negl
xchg
sbb
pop
mov
xor
sbb
mov
push
sub
aaa
sub
int3
sbb
lret
jb,pt
stos
aas
insb
pop
mov
test
fwait
popa
mov
sub
pusha
xor
pop
push
data16
ror
lea
inc
fldenv
ss
and
xor
divb
loop
and
or
or
aad
std
mulb
sarb
daa
xor
cmc
adc
push
sbb
and
and
or
sbb
push
data16
xchg
dec
lret
sarb
divl
cmp
lcall
bound
push
xchg
cmc
adc
lret
mov
jno
push
daa
data16
subl
test
xor
jecxz
test
aas
xor
stos
movsb
lret
push
in
adc
sub
pop
insb
pop
das
fsubrp
mov
int
dec
lea
int
push
out
fcmovu
mov
pop
xor
dec
inc
cmp
stos
sahf
pop
popa
mov
and
mov
hlt
mov
ljmp
int3
mov
xor
ss
jmp
mov
pop
faddp
mov
movsl
lret
daa
test
add
nop
mov
adc
sub
cmp
test
dec
test
add
jmp
jecxz
pop
jb
ffreep
mov
sub
push
call
int3
es
xor
icebp
out
aam
cmp
adc
shlb
jae
not
cwtl
leave
mov
imul
insl
fs
add
or
xchg
popa
jno
outsl
out
test
lahf
scas
pop
pop
ss
test
mov
dec
push
inc
xchg
loope
stos
sub
mov
je
pop
mov
sub
imulb
mov
repz
mov
push
in
pop
jl
mov
xchg
xchg
push
aad
dec
repz
push
in
insl
in
je
jmp
lock
in
iret
bound
pop
scas
sub
dec
movsb
bound
sub
push
aad
loope
testl
mov
test
rclb
lcall
lock
stos
cmp
roll
add
sub
sahf
loope
xchg
mov
dec
mov
adc
mov
dec
pop
mov
xor
testl
es
push
testl
push
lret
stos
insb
sub
pop
dec
mov
sub
dec
mov
mov
je
fisttps
jno
and
sub
lret
rorl
sbb
sbb
in
lods
shll
jmp
push
out
rcr
sbb
fs
or
shlb
std
outsl
frstor
xchg
ds
int3
pushf
mov
mov
push
pushf
cmc
out
pop
xor
loope
pushf
pop
jnp
incb
pop
mov
out
lea
jl
push
idiv
mov
jl
repz
int3
xor
xchg
jbe
xchg
cmp
ficoms
shlb
rorb
sahf
test
and
push
mov
push
pushf
aas
adcb
add
shl
xchg
xor
out
dec
lea
mov
inc
imul
and
mov
mov
add
mov
adc
scas
fwait
scas
sbb
fnsave
sub
in
cld
sub
adc
jo
ficomps
shlb
or
and
or
loope
dec
jbe
ds
je
sbb
lret
test
fs
test
xchg
fnsave
enter
clc
int
and
stos
jb
int
xor
sub
xchg
xchg
imul
push
pop
test
add
push
sub
sti
jg
push
push
xor
sbb
out
stos
or
jne
nop
jmp
mov
jae
and
xchg
pusha
pop
pop
xchg
iret
jns
popf
stos
lcall
fsubs
outsl
movsb
bound
dec
mov
test
lods
test
or
int3
test
mov
sbb
and
push
lea
lock
xor
ror
sbbl
push
sub
movsl
shlb
adcb
mov
adc
mov
adc
lea
data16
js
mov
or
add
xor
repz
les
movsl
mov
adc
dec
movsb
ds
cmp
test
lcall
outsb
fisubrs
jae
xchg
dec
cmpsb
mov
push
add
dec
call
dec
mulb
jns
mov
stos
xor
pop
push
rorl
pushf
and
inc
inc
mov
ss
frstor
mov
mov
xor
mov
push
and
cmpsb
iret
jmp
icebp
jns
shlb
mov
call
cmp
fiadds
fisttps
jnp
xchg
xor
out
jp
pusha
call
xlat
push
sbb
jg
cmc
cwtl
inc
sbb
ret
nop
add
xchg
add
and
shrb
pop
add
fmul
lahf
cmc
aas
aam
mov
dec
fidivl
xchg
push
addr16
test
cmp
mov
pop
pop
leave
jno
fs
mov
aas
inc
xchg
in
add
push
mov
jl
pop
jge
xchg
lods
push
add
sbb
pop
mov
sbb
add
pop
scas
fnsave
mov
sbb
pop
shlb
cmc
mov
gs
cmp
xchg
or
sbb
outsb
or
mov
ja
add
mov
sarb
mov
and
mov
cmp
ljmp
hlt
lcallw
insb
es
push
xchg
mov
dec
stc
jb
das
sub
addr16
jmp
out
les
sub
push
jo
mov
jnp
mov
cmp
lock
push
cmpsb
cli
xchg
inc
cmp
in
xorb
and
fisubs
loope
ljmp
mov
scas
push
stc
call
popf
add
cmp
xor
ret
xchg
jl
adc
mov
mov
cltd
popa
add
sbb
xor
mov
mov
adc
mov
or
addr16
rorb
fwait
mov
cwtl
xor
ss
fnsave
lahf
jbe
mov
jp
or
pusha
mov
sub
fidivs
jl
mov
mov
movsl
loope
shl
mov
xchg
test
push
mov
push
repz
in
lcall
sbbb
mov
adc
sub
mov
inc
call
aam
cwtl
or
or
cmp
int3
mov
xchg
lock
or
popa
xor
aad
sbb
xchg
xor
cmovp
push
mov
mov
mov
fcompl
xchg
andb
mov
push
xor
cmpsl
cmp
inc
call
jmp
lret
mov
mov
mov
or
decl
stos
mov
aam
mov
stos
jg
movsl
mov
popw
or
jns
sub
mov
dec
add
aam
mov
cmp
inc
hlt
sub
int3
stos
sub
ljmp
pushf
xor
scas
push
stos
test
or
lcall
dec
cmp
xor
mov
and
xchg
cmp
push
add
ret
dec
cmp
sbb
or
movsl
jle
adc
jle
and
rcr
mov
push
add
fiadds
mov
jne
xchg
cmpsb
mov
cmp
jbe
mov
dec
je
fistpll
mov
mov
shll
dec
push
xchg
push
gs
pop
add
test
repz
push
push
lods
xchg
into
jp
mov
outsb
push
add
mov
jbe
cmpsl
mov
mov
jmp
inc
lret
add
mov
xor
sub
lea
cmpsl
mov
inc
dec
jp
pop
and
lods
mov
and
add
scas
clc
rclb
dec
in
outsb
fstps
mov
loope
or
add
adc
dec
in
jge
bound
jnp
mov
test
fstpt
lods
mov
pop
mov
xchg
ja
xchg
hlt
ds
push
xor
sti
inc
sysret
dec
adc
add
cmp
mov
in
xchg
mov
add
test
xor
stc
xchg
daa
out
sarl
push
test
mov
xchg
mov
pushl
mov
mov
sub
shlb
pop
and
imul
fisttps
inc
dec
dec
push
cmpsb
cmc
scas
sbb
mov
sbb
mov
daa
sbb
lods
cmpsl
testb
jmp
mov
setae
lods
cmp
mov
push
inc
aad
out
data16
insl
mov
cmpsl
lods
cmp
test
sub
mov
cmp
jnp
aam
pop
data16
subb
xchg
movsl
inc
iret
mov
or
arpl
insl
cmpsb
and
cmpsl
hlt
xor
cli
out
mov
cmc
outsl
mov
mov
lea
cmp
loop
fld
arpl
mov
mov
mov
lea
sahf
in
hlt
test
mov
lods
shrl
shrb
int3
imul
lret
daa
pop
mov
push
lcall
push
mov
or
cli
lods
mov
call
popa
jbe
fisttps
mov
xor
sub
jle
inc
cmp
mov
sbb
cmpsb
iret
pushf
sbb
hlt
mov
inc
mov
mull
jecxz
inc
movsb
or
mov
xchg
aaa
jnp
add
ror
nop
out
bound
scas
lcall
pop
fsts
jp
push
xor
jbe
adc
xchg
out
cwtl
mov
jge
mov
add
pop
lods
shrl
xchg
in
frstor
int3
lfs
push
jge
mov
test
dec
mov
pop
pop
sti
pop
adc
in
shrb
add
js
mov
and
mov
sbb
mov
ret
loop
xor
test
xor
popf
js
cmpsl
mov
hlt
addr16
ficoml
inc
cmp
mov
rcrl
sub
and
cld
lods
loope
push
add
push
inc
fidivs
pop
iret
pop
xor
ss
scas
in
cmc
sti
mov
je
call
xchg
ret
cltd
pop
mov
hlt
jne
xor
mov
rcl
mov
jno
push
aas
xor
imull
xchg
jae
in
fcmovu
lods
push
dec
mov
leave
and
push
cli
or
fsubl
movsl
out
int
hlt
mov
leave
gs
fs
xor
js
xchg
shrl
mov
mov
fisubrl
ja
xor
pop
sbb
mov
hlt
test
test
inc
xor
add
xor
xchg
or
int3
lods
pop
xorl
out
xchg
inc
xor
sarb
and
push
sbb
mov
add
cli
inc
pop
inc
xor
inc
xchg
divl
aam
pushf
xorl
add
inc
shl
ret
je
sbb
add
mov
jb
jno
dec
inc
stos
mov
sbb
das
dec
test
andl
aam
dec
fisubrs
pop
mov
pop
testb
sbb
stc
int3
adc
pop
xor
into
dec
cmp
std
add
push
leave
sar
lret
sub
sahf
sub
xchg
stc
sub
lcall
enter
mov
ficomps
in
jecxz
mov
xor
mov
jns
push
mov
or
inc
sti
mov
in
js
mov
mov
leave
lock
lret
pop
test
int3
int3
mov
rorb
cwtl
jp
mov
sub
xor
call
inc
push
add
test
inc
rcrb
dec
push
inc
adc
add
mov
cmp
fimuls
pop
test
mov
lods
dec
cmp
jge
fbld
mov
sub
imul
mov
arpl
inc
imul
cmpsl
xchg
lret
fs
int3
and
pop
pushf
jnp
and
subb
pop
and
pusha
call
push
cmc
movaps
mov
adc
adc
test
xchg
push
ss
add
aad
sar
ficoms
mov
pop
fimull
imul
ds
and
movl
inc
xchg
sbbb
add
inc
xchg
mov
inc
sub
sahf
push
xchg
fdivp
mov
imul
dec
sub
inc
lods
int3
fsubrp
sbb
xor
bound
insl
imul
mov
xchg
sub
inc
push
lock
stos
mov
xchg
bound
sbb
push
mov
loope
mov
shlb
pop
push
pop
icebp
xor
rolb
add
call
mov
add
push
cltd
mov
shrb
xchg
push
and
xor
jmp
xlat
sti
and
outsb
insb
xchg
jo
pop
xor
mov
scas
pushf
sarb
xor
mov
mov
nop
stc
aaa
xorb
icebp
xchg
pop
pushf
xchg
fmulp
xchg
imul
lret
mov
xchg
cmp
int3
in
cmp
aas
mov
mov
sbb
adc
sub
pushf
mov
scas
dec
cs
or
xchg
fcoml
push
lds
sub
fistpll
sahf
lds
dec
mov
mov
cmpsb
and
jae
fdivp
sub
rolb
push
pop
add
test
pop
pop
jae
mov
fdivrp
adc
pop
dec
and
stos
es
mov
imul
push
enter
iret
mov
or
in
mov
mov
sarb
shl
mov
test
and
enter
push
jnp
push
lods
xlat
sub
pop
popf
shll
lods
jmp
roll
icebp
insb
sbb
mov
mov
jne
sub
div
addl
cltd
inc
mov
cmp
mov
fstl
enter
pop
ret
add
and
jp
repz
bound
repnz
lret
jg
adc
lea
les
mov
pop
lcall
movsl
cmc
sarb
movsb
and
sar
popf
div
xchg
mov
mov
and
dec
add
pop
sub
dec
sti
popf
push
loope
pop
mov
sub
sbb
mov
in
test
ret
mov
rol
daa
ja
jmp
add
sub
pop
movsl
mov
ja
cmp
icebp
mov
subb
cmp
dec
ret
add
addr16
fstpt
fisubs
lret
ja
icebp
out
aaa
int3
pop
and
or
dec
adc
or
stos
ret
or
xor
mov
fidivs
jl
dec
cmpsb
sub
les
mov
rclb
je
pop
cmp
fstl
repz
mov
stc
xchg
mov
mov
or
push
or
pop
cli
mov
jns
ds
pop
fcoms
outsl
data16
mov
mov
hlt
testb
data16
test
mov
cltd
imul
xor
xchg
xchg
call
xchg
popa
add
cmp
daa
or
in
adcl
xchg
dec
lock
mov
push
push
fxch
cmc
adc
mov
push
shll
andb
sti
mov
rol
gs
sub
mov
jne
push
testl
int3
pop
ljmp
mov
neg
pop
int3
or
mov
outsl
cld
pop
fisttpll
sahf
test
dec
movsl
rdtsc
mov
and
jmp
cld
xchg
mov
jle
lcall
push
adc
int
sub
cmp
or
sbb
xchg
mov
xchg
sub
xchg
and
adc
xor
shl
mov
scas
xor
fyl2xp1
js
aas
inc
out
jp
sahf
xchg
jne
sahf
sbb
mov
sbb
ret
jmp
push
push
sbb
addr16
scas
sbb
int3
fdivrl
sbbl
push
push
pop
inc
xor
test
mov
adc
dec
xlat
rcrb
adc
fisubl
int3
xorb
xor
sarb
adc
pop
xor
or
lock
mull
ret
mov
nop
insb
cmp
jbe
adc
pop
mov
push
xchg
mov
cmp
cmp
lahf
cwtl
lahf
xchg
pop
mov
and
adc
push
shll
adc
adc
dec
decb
repz
pop
or
sub
inc
scas
test
test
push
cmc
or
xor
into
and
movsb
dec
pop
sub
loopne
sbb
inc
loopne
xchg
push
mulb
sub
dec
push
add
leave
and
add
push
mov
mov
lods
andb
fstpt
ss
daa
cli
push
mov
adc
lods
mov
fcoms
clc
in
sbb
dec
and
fs
sbb
movsb
pop
iret
xor
dec
outsl
mov
or
mov
pop
loopne
inc
add
mov
sub
jns
push
sti
cli
jmp
xor
insb
jl
lret
mov
orl
sbb
mov
push
adcb
lock
xchg
adc
fdiv
lahf
out
jno
movsb
and
test
scas
sahf
test
out
xchg
pop
pop
or
mov
call
out
loope
notb
test
orb
pop
dec
test
push
xor
pop
lds
mov
fnop
imul
les
push
pop
loop
xchg
int
sbb
in
addr16
fistl
pop
cld
aaa
xchg
fbld
pop
mov
add
cmp
mov
repz
inc
fisttps
sub
xchg
xchg
mov
pop
push
push
pop
inc
movsb
sahf
adc
inc
js
scas
sbb
test
lret
pop
adc
add
int
lock
cmp
xchg
notb
dec
bound
leave
in
sub
in
bound
mov
fwait
xrelease
jno
test
pusha
xchg
rep
es
push
sbb
mov
xchg
jl
pop
xlat
lods
cmp
imul
xchg
outsb
insb
jae
movsb
rorb
jp
subb
and
stos
pusha
inc
call
mov
mov
dec
lock
call
lods
int3
pusha
push
repnz
cmp
fs
je
adc
pushf
hlt
add
orb
dec
ljmp
push
push
insb
popf
xchg
scas
jge
inc
sub
cmp
adc
insl
ljmp
dec
mov
ja
xchg
pop
iret
push
cmp
fmuls
orb
xor
ds
xchg
std
and
dec
je
mov
test
jge
stos
je
insl
or
out
xadd
stos
imul
lcall
pop
jg
aaa
lcall
push
push
push
rorb
ss
fisubrl
test
mov
mov
lahf
inc
add
nop
push
sub
inc
mov
dec
iret
pop
cmp
xchg
pop
dec
scas
js
mov
jns
leave
xchg
faddp
jmp
pop
imul
mov
repz
xor
orl
ret
xor
mov
pop
inc
or
fildll
mov
jecxz
mov
jge
loop
fcomps
ljmp
cmpsb
out
ret
pop
mov
test
jo
jp
in
pop
or
push
aas
dec
loope
add
cmc
je
loop
ss
lahf
adc
dec
mov
sub
ret
cmpsb
mov
dec
cmp
inc
test
jns
arpl
int3
mov
mov
out
jmp
stos
and
cmpsb
mov
pop
mov
lods
adc
push
mov
repnz
lret
pop
add
sub
push
lea
push
sbb
hlt
fistps
mov
push
add
mov
loope
xchg
cmp
mov
daa
scas
pop
mov
xchg
lds
pop
mov
sub
call
aam
push
pusha
fsubl
int
mov
in
stos
mul
push
push
adc
add
xor
xchg
jns
insb
pop
push
mov
push
xor
movsb
stos
xor
fwait
push
aam
sahf
data16
add
je
dec
mov
mov
dec
and
add
int3
cwtl
push
aaa
lock
cmp
div
and
mov
mov
lret
clc
orb
pop
leave
xchg
sbb
cmc
ret
xchg
xchg
mov
aas
mov
js
popa
imulb
movsb
push
rol
sbb
int3
pop
test
into
lods
pop
setle
lods
enter
repnz
out
push
imul
xor
mov
pop
sub
in
mov
xchg
pop
pop
ret
push
sti
cs
mov
jns
lds
push
aam
test
mov
xchg
fnstsw
sub
mov
cs
cs
lds
shrl
mov
xchg
mov
in
je
orb
pop
sub
popa
sub
lret
lahf
push
sub
sbb
iret
xchg
mov
mov
mov
dec
out
xchg
call
mov
lret
into
pop
inc
add
pushf
bound
mov
loope
and
loope
dec
push
in
push
je
int3
pop
sbb
inc
lock
pop
cld
mov
jno
push
xchg
sub
pop
pop
nop
fstpt
or
mov
imull
popf
in
and
push
xchg
ret
sub
push
outsb
cli
lret
outsb
stos
jb
jmp
je
inc
xchg
pop
push
cltd
popa
pusha
les
and
pop
and
in
inc
or
sub
mov
int
xchg
dec
rcll
int3
sub
test
adcb
push
sub
and
cwtl
dec
add
ja
test
enter
outsl
xchg
mov
ror
sbb
xchg
lret
popa
adc
jmp
loopne
aaa
notl
mov
mov
data16
nop
mov
push
clc
dec
int3
je
test
sarb
icebp
mov
stos
mov
mov
add
xchg
mov
enter
and
test
adc
cmpsl
xor
xor
scas
ret
ficoml
cli
shrb
xchg
xor
stos
aad
jne
mov
push
cmp
in
fildll
and
dec
or
pusha
lds
push
jno
pop
lret
aas
sub
xchg
dec
cmp
shrb
mov
add
sbb
and
stos
sbb
mov
jg
add
sti
adc
push
add
push
mov
daa
cmc
or
out
xor
push
loopne
jno
mov
cmp
jecxz
cs
orl
xor
cltd
pop
fstps
mov
insb
xor
das
test
mov
xchg
test
lock
cmpsb
cli
clc
push
lods
sub
xorl
jl
subl
mov
lock
sub
aas
adc
stos
xor
bound
xchg
lods
std
sub
mov
mov
pop
pop
add
imul
cwtl
push
and
inc
rcr
and
mov
mov
pusha
jne
and
test
mov
mov
xlat
sarb
mov
daa
jns
mov
lock
dec
pop
je
inc
push
mov
xchg
lods
int3
iret
fdivrs
inc
cs
and
testb
fsubrl
mov
out
mov
pop
mov
test
mov
sub
and
mov
movsl
and
ss
enter
xchg
inc
les
jae
shlb
cmpsl
lea
pop
adc
cli
mov
and
jmp
sbb
lret
cmp
loope
in
fisubrl
push
shrb
and
aaa
popa
inc
dec
out
xchg
lods
add
dec
ljmp
mov
mov
and
mov
cmp
mov
movsl
sub
pop
imull
xchg
rorb
push
sub
sub
movsl
and
test
mov
sbb
inc
mov
sbb
mov
bound
insb
popf
mov
xchg
pop
pop
and
cmc
xchg
pop
fstl
sbb
fwait
imul
mov
icebp
mov
shlb
sahf
sbb
mov
ror
cmpsl
add
and
popf
xor
fidivrl
mov
out
inc
mov
xchg
mov
mov
adc
and
pop
sub
imul
ljmp
sub
notb
stc
pop
fs
push
movsb
or
sbb
jg
cmc
dec
lds
mov
push
push
or
pop
inc
mov
cmc
test
pop
pop
push
scas
les
stos
ret
bound
cmp
cltd
leave
xor
mov
cmc
sub
shll
jp
aaa
jae
sbb
shrl
fs
push
fistpl
push
int3
push
jo
pop
mov
incl
xor
lret
out
jmp
mov
and
test
arpl
sub
clc
pop
jle
mov
aam
push
dec
and
sti
mov
arpl
add
add
cld
pop
adc
scas
shlb
popf
xchg
pop
xor
mov
mov
lret
test
add
stos
mov
push
xchg
in
jnp
daa
mov
pop
sub
fwait
and
jmp
xor
clc
mov
dec
inc
pop
push
and
mov
lea
mov
push
nop
pop
shll
int3
mov
test
fidivs
outsb
shlb
gs
lret
mov
xor
pop
out
inc
popf
or
xchg
cld
rcl
aas
mov
inc
or
scas
lret
cmpsb
into
mov
test
in
sub
mov
pusha
mov
push
mov
icebp
dec
xchg
fcmovne
fidivl
int3
lcall
cld
xchg
popf
xchg
xchg
jb
addb
and
lret
inc
and
mov
enter
jne
xor
test
adc
inc
xor
or
pop
ljmp
gs
movsl
cmp
outsb
push
adcl
jmp
out
and
addl
xchg
int3
mov
int3
adc
pop
xlat
add
lret
lahf
dec
movsl
stos
mov
mov
loopne
dec
cmp
xchg
and
xchg
mov
test
popf
int3
sar
shll
leave
sub
mov
sub
push
call
and
pop
ud1
jl
fdiv
stc
pop
xchg
push
mov
xor
out
and
cmpsb
sahf
push
adc
std
sbb
xchg
xor
loopne
outsb
mov
cmp
push
jo
lret
mov
popa
ss
dec
aaa
cmp
loopne
sbb
jo
in
sbb
and
push
xchg
and
ss
cmc
iret
jae
lret
nop
sbb
jecxz
adc
lods
xor
mov
cmc
cltd
bound
clc
cmp
mov
aad
cmp
sbb
xor
pop
dec
push
adc
mov
testb
sub
jecxz
inc
fistl
fdiv
fcmovb
imul
scas
add
pop
pop
out
and
pop
mov
jae
sbb
sti
mov
sbb
call
jle
sub
xor
jne
adc
pop
jl
fidivrs
movsb
jb
mov
nop
rcr
loope
lea
fistl
aam
and
lea
mov
ds
jmp
jecxz
lock
jp
mov
dec
lods
cmc
nop
mov
sarb
aad
xchg
or
xchg
pusha
inc
mov
mov
mov
or
jbe
mov
push
jp
or
test
cli
add
lods
inc
test
bound
jg
dec
clc
stos
jmp
xlat
jae
negb
xchg
cmc
sahf
sub
mov
or
mov
adcl
outsl
test
push
jge
fdivrl
push
je
shrd
pop
test
adc
dec
jae
loopne
in
in
mov
lret
lret
sub
xorl
outsb
mov
sub
cmp
fadd
testb
push
pusha
pop
mov
mov
sub
test
sbb
mov
cmpsl
stos
dec
or
mov
pop
out
lea
jg
dec
fstl
outsb
lods
mov
orl
shlb
or
and
hlt
cs
fs
setnp
mov
imul
jb
das
push
mov
cmc
xchg
mov
cmp
dec
mov
sub
xor
lods
xchg
scas
xor
sub
ret
fsubs
cmp
fmull
cli
add
loop
subb
cwtl
pop
testb
mov
mov
mov
or
test
call
hlt
xchg
or
shlb
stos
bound
sahf
outsl
stos
cmp
pop
out
mov
sbb
jmp
cltd
sti
push
sbb
mov
ficomps
jle
or
push
sub
xchg
and
das
cmp
xchg
inc
sbb
lret
push
outsl
mov
sub
out
xlat
outsb
push
cmp
pusha
rclb
adc
test
ljmp
pop
sahf
pop
scas
mov
fsubl
int3
pop
ljmp
adc
xlat
cltd
fldz
xchg
xchg
mov
sar
mov
mov
test
vmovupd
jne
insl
stc
cli
push
sbb
inc
nop
jg
adc
add
ss
out
inc
push
nop
jl
or
jnp
or
mov
fistpll
jne
js
adc
cmc
mov
or
pushw
add
jns
add
push
pop
jle
scas
pop
daa
xchg
data16
xchg
xchg
lret
out
int3
lret
std
and
adcl
popa
sbb
mov
add
repz
int3
lods
repnz
neg
xchg
dec
pop
add
pop
push
mov
sahf
ja
scas
mov
jecxz
xchg
test
subb
fnsave
lcall
and
add
gs
adc
adc
sbb
xor
mov
adc
dec
dec
cmpsb
test
cwtl
xor
in
test
fsubrp
cmp
incb
testb
call
decb
fwait
mov
pusha
dec
mov
jmp
pop
mov
or
cmpb
ss
mov
add
push
adc
add
stos
dec
push
cld
pusha
push
adc
das
push
aam
push
notb
int3
fsubs
mov
sbb
jae
or
sar
insl
insb
repz
cwtl
ror
scas
out
loopne
adc
jnp
jo
cld
loope
mov
fwait
aaa
xchg
lods
int3
pushf
mov
inc
and
jge
ljmp
sbb
mov
add
sub
push
in
dec
sbb
jmp
mov
mov
mul
popa
adc
test
ret
das
fldz
test
inc
data16
dec
adc
jmp
sbb
jle
decl
stos
mov
movsb
xor
sti
cmp
loop
scas
or
adc
lret
cmpsb
pop
pop
stos
sub
mov
sahf
scas
int3
sub
jg
scas
inc
inc
das
iret
test
sbb
lret
int3
leave
nop
mov
ss
jle
pop
repz
cmp
int
sbb
cltd
cmp
pop
js
cs
sbb
mov
insb
mov
jbe
gs
push
cmp
mov
jge
adc
fsubs
xor
lret
jl
xchg
pop
add
mov
mov
fidivrs
dec
pop
dec
sbb
daa
lds
ret
inc
or
std
push
push
or
fsubrl
fnsave
test
popa
fdiv
lret
cmpb
sub
mov
push
xor
sbb
pop
or
leave
testl
cmp
push
dec
orb
lock
lahf
lds
mov
jo
subb
sub
xchg
jl
sbb
loop
ret
push
out
fildll
add
mov
add
mov
jecxz
hlt
xchg
in
push
mov
int
mov
lret
mov
fdivl
pop
mov
sub
xchg
mov
in
out
xchg
adc
cld
popl
inc
sbb
jl
jo
adc
sbb
mov
cli
xchg
stos
jle
sub
std
xchg
inc
push
cmc
das
lret
adc
dec
mov
jl
and
or
and
bnd
cmp
imul
mov
sti
jmp
imul
mov
cmp
push
xor
cmc
out
jbe
fwait
sub
xchg
int
push
lret
push
sbb
mov
bound
mov
enter
je
daa
js
ss
mov
sub
mov
or
mov
lods
push
arpl
test
repnz
xchg
pushf
dec
pop
pop
jmp
aas
or
push
es
pop
in
cwtl
mov
adc
mov
fmull
cmp
mov
cmp
rcl
popf
cwtl
mov
add
pop
popa
xchg
daa
cs
add
cmc
mov
xchg
dec
inc
add
test
xchg
aad
movsl
sbb
popl
ss
stc
pop
call
sub
or
mov
xchg
mov
addl
add
movsb
jg
sahf
pop
cli
in
cmc
push
add
push
fwait
push
test
aaa
xor
popa
pop
jo
pop
mov
in
mov
lea
adc
jne
out
dec
sub
mov
lret
insb
and
pop
inc
cmc
je
int3
xchg
mov
test
mov
adc
inc
xor
jae
fnstsw
adc
icebp
cmc
test
daa
fmuls
dec
call
lds
adc
imul
dec
into
daa
loopne
jl
mov
sub
cs
mov
push
mov
adcb
loop
xor
xchg
push
cli
into
lret
jo
gs
cmc
jb
lret
dec
mov
push
fiaddl
popf
and
mov
push
dec
les
pop
mov
dec
cmpb
scas
mov
sbb
mov
xchg
inc
adc
cmp
and
andl
pop
cwtl
mov
js
popa
repz
pop
xor
mov
leave
and
leave
sub
ss
leave
ds
or
pop
js
repz
shlb
xchg
daa
push
std
mov
mov
das
mov
fistps
xor
outsb
nop
ja
adc
push
pop
arpl
cs
sub
nop
mov
mov
sbb
pop
in
add
repz
jp
pop
mov
cmp
dec
mov
movsl
stos
sub
fisubl
and
fwait
je
lods
mov
xor
movsl
xor
dec
mov
lea
pop
and
ja
xchg
ds
pop
or
stc
jge
test
stos
lret
push
pop
ret
pusha
xchg
shll
pop
into
loope
push
mov
dec
or
je
lret
sbb
loopne
arpl
lret
and
lret
outsl
mov
aas
mov
mov
cmc
adc
loopne
mov
cmp
sti
xchg
mov
call
cltd
and
lods
pop
ret
sub
cs
adc
jb
inc
inc
sub
lcall
jns
adc
sub
pop
fucom
dec
dec
test
test
mov
sbb
pop
pop
mulb
mov
clc
cmc
jmp
xchg
pop
jl
mov
aam
daa
sti
mov
inc
mov
sahf
lret
mov
shrb
imul
xchg
jl
mov
sbb
jmp
xchg
sub
arpl
shlb
push
dec
push
std
shrb
shll
xor
inc
pushf
push
es
ljmp
xor
inc
xor
and
mov
push
outsl
xchg
add
jb
pop
pop
leave
ja
xor
push
cwtl
cwtl
jae
lret
incb
dec
cmp
pop
das
jle
cmp
mov
inc
popf
test
xor
inc
add
loope
pushf
pop
test
xor
mov
jmp
ds
lret
mov
pushf
jae
arpl
xor
inc
push
lahf
lea
xchg
pop
rcpps
int3
cmp
cmp
mov
and
pop
dec
xchg
dec
mov
insb
negl
add
and
add
lea
outsb
mov
mov
xor
daa
push
sub
test
sbb
movsl
or
add
nop
stos
cwtl
stos
sti
dec
addr16
inc
das
and
sub
pop
xchg
pusha
loop
in
cld
cmpsl
movsl
and
jl
cld
call
mov
sahf
iret
jne
das
stos
pop
outsl
xchg
sbb
int3
and
jp
iret
je
daa
std
insb
lret
int
fisubs
mov
fcomp
sub
mov
movsl
sub
outsb
scas
lea
and
test
nop
mov
xchg
jo
or
divb
addb
aad
cmp
jns
stos
xor
push
mov
pop
xor
or
or
jb
fstpl
mov
bsr
sub
pop
dec
pop
test
lahf
xor
sub
fmull
xchg
cmpsb
pusha
xorb
pop
leave
or
mov
xchg
jb
dec
pop
sarb
stos
lods
push
out
inc
aam
ss
shlb
mov
sahf
addr16
sbb
xor
pop
fstpt
and
stos
mov
xor
int3
loop
and
mov
xlat
and
leave
jle
cmp
hlt
sbb
adc
pop
push
jl
sbb
shlb
pop
cld
es
inc
jb
insl
pop
lea
mov
addb
jbe
aad
clc
dec
mull
push
int3
sub
xor
icebp
dec
xchg
jae
lahf
mov
jge
xchg
dec
jmp
xchg
inc
lret
jae
loopne
push
fdivs
or
outsl
xor
daa
mov
sub
mov
pop
xchg
xor
test
cmp
cmp
mov
in
jl
ret
insb
mov
jb
in
cltd
aaa
inc
mov
int3
mov
push
lret
or
xor
pusha
pop
cs
scas
xchg
fadds
sbb
lret
out
test
enter
and
xor
mov
inc
cld
jae
les
clc
cmp
fsubr
movsl
fstl
xor
pop
inc
cmc
imul
mov
mov
je
xchg
cmp
sbb
pop
popf
pop
es
das
adc
cmpsb
inc
int3
add
fwait
pop
push
xchg
push
push
mov
cld
stos
lret
add
aaa
adc
adc
aad
xor
pop
push
jp
pop
lock
cmc
loopne
fildll
std
shll
out
stc
stos
mov
lret
fwait
dec
scas
jge
shrb
push
je
mov
xchg
mov
pop
push
xor
lret
push
inc
xlat
adc
popa
inc
fistl
or
fadds
das
sahf
jae
lret
in
jmp
push
jbe
and
dec
insb
jae
push
arpl
insb
xchg
lret
jg
inc
out
cli
mov
decb
sub
pop
lcall
cli
push
in
cvtps2pd
out
test
fdivrl
jmp
hlt
mov
dec
call
movsl
stos
and
cld
adc
pop
lret
sbb
mov
aas
mov
push
pop
out
insb
jmp
rcrl
sub
dec
call
ss
lea
and
cli
jbe
push
cltd
xchg
test
fldt
jl
inc
add
push
or
and
adc
dec
stos
out
mov
push
mov
ds
pop
dec
jo
pop
rorb
sub
mov
int3
lret
movsl
xchg
hlt
xchg
clc
cmc
orb
outsl
sbb
mov
fisttpl
scas
clc
or
mov
lea
divb
xchg
add
int3
popa
gs
push
jo
push
ret
je
pop
and
leave
xchg
decl
jbe
jl
das
pushf
lahf
inc
fildll
das
jno,pn
mov
andl
popf
fisubrs
adc
stos
pop
cmp
sbb
lret
cli
mov
aad
lods
inc
pop
and
or
into
in
mov
int
lods
fs
mov
fs
std
push
movsb
mov
clc
add
dec
sbb
mov
mov
sbb
pop
arpl
nop
std
data16
ret
insb
sub
outsb
mov
insl
test
imul
and
in
add
data16
or
cmpsl
inc
or
into
fwait
std
test
inc
xchg
aaa
sbb
pusha
add
mov
and
stos
lds
mov
negl
lcall
xor
std
pop
xor
movsb
int3
idivl
push
mov
orl
enter
daa
pop
push
mov
sub
aaa
and
cmp
ss
cmp
mov
mov
ret
add
fdivl
push
jb
les
repz
dec
ja
scas
mov
clc
inc
xor
and
into
leave
mov
in
daa
xor
out
mov
pop
push
xchg
cmp
fmull
pop
adc
int3
lret
fisttps
mov
leave
jae
mov
xchg
sbbl
sbb
push
push
xchg
adc
mov
sub
mov
imul
and
pop
xchg
pop
cmp
mov
in
popa
scas
mov
icebp
cmpsl
test
orb
movsl
cwtl
repnz
pop
mov
hlt
fisttpl
and
jg
out
jno
and
adc
mov
xchg
neg
pop
inc
add
test
int
dec
or
repnz
daa
push
scas
dec
outsb
mov
dec
push
imul
mov
cmc
pop
mov
jmp
lds
xor
out
and
outsb
movsl
sbb
mov
mov
mov
movsb
popa
insl
int3
mov
nop
xchg
ffreep
hlt
xchg
pop
dec
sbb
mov
fsubrl
sub
inc
adc
sbb
mov
xchg
out
neg
push
and
xor
shll
scas
mov
and
and
mov
scas
and
xor
popf
pop
mov
mov
mov
loope
mov
movl
ds
dec
mov
push
lcall
sbb
adc
lcall
icebp
push
push
dec
dec
stos
fs
xor
fstps
dec
and
jl
jo
sub
notb
pop
push
sub
sub
xchg
adc
push
cmp
mov
pop
insb
sbb
pusha
push
ficomps
cld
test
mov
sbb
aam
test
add
mov
mov
pop
std
into
lret
inc
mov
rorl
sbbl
push
in
stos
stos
test
and
add
bound
mov
cmp
fadd
mov
lea
mov
or
mov
lret
mov
shll
repz
jmp
nop
dec
lods
jbe
push
and
mov
lret
sub
loopne
clc
imul
icebp
xchg
push
pop
fiadds
push
je
repz
data16
push
loopne
notl
push
in
push
aam
cwtd
stc
and
cmp
adc
ss
push
data16
pop
iret
cmpb
xor
lods
cs
pushf
mov
dec
bound
lds
mov
imul
dec
scas
mov
sahf
mov
or
dec
nop
je
loopne
inc
mov
adc
mov
sub
pop
fsubs
inc
stc
mov
shl
xor
mov
hlt
into
push
xorl
mov
mov
test
fsub
cmp
pop
jne
mov
int
scas
stos
lock
sub
dec
dec
sti
mov
xor
jbe
aas
in
scas
push
sti
in
loope
push
lret
iret
xor
fnstenv
mov
arpl
rorl
add
sbb
mov
lock
pop
sbb
lods
cmpsb
pop
js
adc
repz
mov
jp
fnstsw
push
adc
test
push
mov
xchg
movsb
inc
lock
jmp
jg
xor
shrl
stc
test
pinsrw
add
push
repz
lods
jb
inc
dec
sbb
lret
inc
daa
mov
dec
sbb
push
js
lcall
stos
xlat
mov
xor
imul
mov
jns
pop
je
daa
testb
sub
jae
test
mov
int3
jmp
jge
test
fldcw
pop
lcall
int3
and
mov
mov
cmp
cmp
in
sub
push
mov
sbb
sub
fs
pop
neg
lea
stos
fwait
push
test
jo
data16
xchg
je
sbb
mov
cmc
and
mov
cmp
mov
lret
and
lret
js
arpl
dec
movsb
hlt
mov
push
jae
in
and
gs
cmc
pop
insl
andb
mov
inc
cmp
sub
les
pop
pop
insb
dec
xor
lret
gs
mov
fcomps
lea
ss
outsl
mov
mov
jno
rcr
and
cld
add
loop
lret
cld
adc
insb
mov
dec
scas
add
sub
xor
xchg
daa
aad
rorb
lret
nop
ret
sub
pop
adc
jbe
daa
int3
adc
mov
lods
jl
mov
push
cmc
cli
mov
sub
insb
std
test
adc
push
int3
push
imul
lahf
sti
cwtl
fldenv
pop
imulb
pop
pop
sbb
test
cli
repnz
test
mov
and
test
lods
jmp
xor
les
ss
out
push
sub
shrl
sub
dec
and
in
pop
and
jne
push
sbb
mov
cmp
sbb
dec
xchg
mov
pop
sub
sbbl
paddsb
cmpsl
outsb
test
mov
fisttpll
xchg
mov
lcall
jg
mov
mov
gs
xchg
jge
xchg
jns
loope
int3
fs
das
stc
cld
and
xlat
nop
jae
mov
add
cmp
fidivrl
xor
cwtl
xchg
dec
mov
pop
jae
xor
lea
mov
lcall
in
pop
mov
mul
sti
aam
dec
stos
mov
or
popf
and
mov
test
push
cmp
nop
cltd
cmc
mov
sub
xorb
xor
ds
loopne
imul
in
arpl
lea
aas
add
in
sti
test
inc
xchg
sub
pop
sbb
mov
mov
mov
into
adc
mov
mov
cmpsl
xchg
movsl
pop
in
sub
pop
shlb
pusha
repnz
adc
pushf
fmull
std
xchg
popf
adc
fcoml
ror
jmp
mov
test
sar
mov
sub
inc
jmp
in
or
ja
sarb
popf
push
stc
or
mov
negl
or
mov
mov
data16
je
cmc
ffreep
lds
mov
xchg
jge
lahf
cmp
es
pop
cld
loop
jne
filds
xor
xor
popl
imul
or
dec
mov
fstps
mov
out
fs
gs
pop
fbld
hlt
in
cltd
inc
pop
push
lret
mov
lret
stc
imul
mov
movsb
int3
xor
cli
push
and
test
imul
inc
mov
xchg
cmp
bound
jp
push
call
arpl
cmc
addr16
jb
cmp
mov
sbb
xor
shlb
fstps
sub
jecxz
xor
mov
adc
loope
testb
and
pop
test
sbb
lcall
aam
bound
fisubs
pop
enter
xchg
xor
dec
mov
notb
cs
lret
mov
mov
push
xor
push
push
rol
lds
pop
adc
xor
mov
jae
fldenv
jmp
int3
xchg
or
push
lret
hlt
add
dec
sub
pushf
gs
std
mov
pop
cld
icebp
dec
lret
je
test
pop
inc
and
jmp
aaa
sbb
mull
inc
sahf
int3
pop
repz
cwtl
repnz
adc
out
push
pop
xchg
jae
gs
test
ds
jecxz
xorb
jg
or
cld
incl
je
push
loope
pop
push
imul
or
dec
push
out
cmpsb
in
imul
inc
adc
mov
inc
pop
ds
arpl
sarl
negl
xchg
jne
cmp
dec
scas
xchg
pop
cs
loope
cwtl
test
mov
lds
dec
pop
test
jb
lret
gs
xor
dec
loopne
jg
sahf
or
movsb
inc
popf
cwtl
mov
mov
call
mov
xor
sbb
lds
cs
cmpsb
lods
bound
dec
sub
dec
add
jb
lret
ss
pop
in
sbb
mov
leave
les
mov
pop
outsl
pop
mov
or
test
insb
imul
mov
int3
jg
ret
cmc
test
push
xor
sub
sub
sahf
sbb
jae
jne
xor
nop
jle
jmp
jge
cmc
and
in
rolb
jnp
dec
pop
stc
sbb
test
xchg
das
js
xchg
mov
in
sub
stos
aas
push
inc
movsb
dec
cli
sbb
jl
xchg
pop
imul
int3
stos
xor
mov
int3
inc
pushl
xor
dec
sub
pop
inc
or
or
int
repnz
dec
lret
arpl
fdiv
aas
loope
cmc
xchg
mov
dec
sbb
add
cmp
push
shl
les
or
lods
cmp
lahf
push
and
jae
adc
sub
fs
cmp
xor
xchg
pushf
add
push
mov
fwait
xor
mov
push
int3
or
and
sbb
xor
add
cld
out
cwtl
repnz
cmp
orl
jae
pop
insb
dec
test
mov
pop
clc
push
lret
repnz
mov
scas
jp
xor
ja
gs
add
push
sub
cmp
push
push
out
mov
outsb
xchg
push
test
pop
mov
packssdw
dec
fnstenv
push
stc
aas
jnp
insl
lahf
xor
xchg
lret
xlat
cli
inc
xchg
mov
cmc
cmpsb
push
stc
dec
mov
mov
bound
stos
sti
cld
adc
sarb
dec
cmp
testl
cli
cmc
stos
clc
xor
or
inc
add
xor
mov
cmp
pop
and
inc
shll
int3
push
inc
mov
rclb
sub
stos
dec
test
mov
fcoms
sbb
jns
fnstsw
xchg
popl
mov
js
sbb
sahf
push
je
push
push
push
xor
dec
push
lret
movsb
dec
je
adc
inc
pop
repz
out
cmpl
inc
and
stos
sbb
aas
lcall
cs
stos
xchg
sbb
call
pop
fbstp
push
or
cltd
cmp
jmp
xor
or
call
jecxz
xor
fdivl
repnz
push
cmp
fistpll
and
adc
lods
dec
sub
stos
dec
dec
xlat
in
scas
es
push
or
xor
xor
ja
cld
lea
scas
push
lea
sbb
mov
pop
fstl
add
dec
and
sti
and
dec
cs
fwait
mov
sub
dec
and
cmpsl
popw
mov
sub
jge,pn
inc
sti
mov
mov
or
mov
lods
xchg
jmp
cmp
idivl
pop
push
and
subl
call
sbb
test
pop
das
popa
cld
adc
jno
push
sub
xor
pushf
push
imul
dec
cwtl
sbb
lds
sub
int3
sti
or
and
xor
in
repnz
hlt
pop
pop
shlb
int3
pop
cs
adc
and
jnp
out
cmp
flds
lret
push
add
mov
rcll
dec
push
icebp
ds
jecxz
sbb
jb
cmc
add
faddl
es
sbb
mov
pop
movsl
sbb
int3
sub
xchg
call
xchg
scas
push
insl
push
xchg
mov
push
lock
scas
jo
int3
sub
lea
lret
outsl
out
xor
jnp
inc
push
cmpl
dec
jnp
popl
pop
orl
out
leave
subl
std
mov
scas
jo
mov
or
lods
xchg
popf
sub
xchg
or
mov
mov
dec
int
xchg
or
pop
xchg
adc
or
xorl
icebp
data16
xchg
jp
cmp
int3
in
ficomps
jp
loope
mov
mov
int3
pusha
mov
ss
and
add
jecxz
or
inc
arpl
sub
stc
dec
and
test
int3
mov
cmp
loopne
aas
jnp
add
pop
call
data16
imul
sti
mull
movntps
inc
or
imul
sbb
jne
dec
dec
inc
loop
jo
es
or
dec
pop
adc
pop
sbb
jno
fnsave
mov
jne
pop
inc
xor
js
and
push
jns
dec
mov
push
adc
sub
leave
xchg
negb
testb
ret
fcomps
pop
loop
stos
arpl
xchg
fcomps
mov
lcall
inc
cmc
sbb
pop
jl
mov
testl
insl
cmp
test
cmp
or
sti
mov
push
pop
mov
lods
ftst
xor
dec
shl
lock
xchg
push
scas
sbb
xor
lock
add
xchg
fdivrs
jo
pop
pop
popa
mov
data16
mov
xorl
xchg
rcll
mov
or
xchg
iret
lods
cmp
pop
imul
mov
scas
dec
push
xchg
xor
cwtl
or
mov
aaa
xchg
dec
in
ss
mov
sub
popf
loop
mov
xchg
enter
lock
daa
incb
jb
xchg
imul
jnp
hlt
push
sti
dec
xor
jg
and
jae
inc
dec
push
repnz
insl
and
sbb
mov
pop
dec
adc
sarb
daa
add
jae
add
test
out
pop
pop
js
xchg
cli
cmpsb
push
imulb
add
inc
stos
jb
out
pop
xchg
mov
pop
sbbl
xchg
xor
mov
fimuls
dec
push
and
rcrb
or
negb
lret
lea
shlb
loope
fimuls
pop
adcb
push
pusha
push
push
mov
inc
jnp
xor
inc
sbb
mov
and
push
fwait
lret
out
cmc
jp
mov
cmc
push
dec
cmpsl
cmp
loope
js
push
mov
out
cli
inc
lds
scas
ja
lret
int
call
add
cmp
mov
mov
scas
mov
inc
fcompl
push
lock
mov
add
add
aaa
and
sbb
idivl
fbld
stc
sahf
fidivs
popf
pop
sarb
sbb
neg
fdivrs
push
push
dec
xchg
sti
dec
pop
mov
dec
adc
push
sub
fmul
pushf
adc
filds
pop
and
add
std
pusha
pop
gs
mov
push
pushf
sti
pop
jnp
inc
je
cmp
clc
ljmp
out
pop
int3
mov
js
xchg
sbb
lret
mov
add
cmp
push
pop
fsubrs
lret
imul
jno
aas
sbb
cltd
movsl
push
stc
and
idivb
xor
push
and
int3
jg
repnz
push
sub
sti
mov
std
dec
pop
stos
push
lret
in
mov
jl
pop
insb
sbb
jo
lret
loop
fisubrs
lret
cld
lods
and
cmc
shrb
leave
enter
aaa
xor
sbb
loopne
mov
aam
daa
cmp
nop
mov
push
jmp
pusha
scas
mov
fldt
mov
aas
aam
hlt
xchg
test
and
fadd
mov
cmp
lret
dec
push
push
ds
test
xor
lret
xor
jecxz
mov
ljmp
insl
cmc
mov
int3
pop
sbb
cmp
sbb
sub
in
push
pushf
testl
shrb
mov
sub
lahf
xor
movsl
imul
mov
cltd
xor
cmp
adc
ret
imul
in
and
jmp
dec
ja
sbb
cmp
or
mov
push
mov
push
mov
lcall
cwtl
aaa
mov
test
pop
mov
ficompl
je
sub
inc
jmp
into
andl
sti
jae
gs
xor
out
and
mov
sub
and
popa
repz
jo
mov
push
lcall
scas
lret
gs
int3
dec
out
pop
mov
sub
fstpt
push
jns
ljmp
jo
pop
mov
nop
adc
pop
mov
pop
dec
xor
adcl
push
test
popf
and
mov
add
in
inc
jmp
imul
shrb
bnd
je
bound
pop
and
push
test
push
pop
loop
mov
insb
jmp
in
mov
sub
cmpsl
divl
les
xchg
mov
fsubrs
imul
cwtl
sbb
fldt
push
jecxz
je
lret
sub
in
add
xchg
lock
jo
push
shl
xor
push
loop
xor
and
test
fsubrl
repnz
pushf
ficompl
sub
xor
jl
cmc
lcall
adc
xchg
and
lret
insb
push
xchg
xor
shl
jnp
xchg
pop
xlat
mov
cltd
mov
adc
and
pop
xchg
inc
sub
dec
mov
xchg
lods
xor
pop
nop
scas
and
sbb
ret
int
dec
push
pop
movsb
add
mov
int3
mov
mov
lcall
shlb
sub
mov
jae
mov
inc
lret
ja
cmc
pusha
sub
xchg
test
notl
or
sub
jp
ss
dec
in
std
push
mov
pop
test
push
mov
jb
jmp
dec
mov
push
mov
sub
aaa
popa
mov
cwtl
jmp
addr16
dec
movsl
fs
pop
push
lds
pop
sbb
jle
mov
outsl
and
push
cltd
sbb
dec
frstor
popa
mov
sub
mov
shrb
lea
jae
mov
int3
pop
push
stc
push
cmpsb
test
xchg
sahf
rcrb
lods
mov
cld
jne
jp
push
and
mov
adc
xchg
sarb
jne
push
lret
loopne
insb
repnz
cmp
repnz
dec
stos
pop
outsb
push
inc
cmp
xor
adc
repnz
aas
and
lret
pusha
test
ss
icebp
out
jg
call
int3
js
sub
mov
or
les
or
lods
xlat
daa
adc
push
popf
testb
adc
data16
dec
loopne
divl
cmc
sbb
jl
outsl
ja
lea
add
xchg
test
mov
in
xor
jbe
lahf
loop
sub
pop
sbb
jmp
pusha
mov
jle
push
jg
xchg
inc
inc
call
shll
pandn
xor
outsl
fs
lods
mov
cmp
mul
adc
xor
sub
mov
mov
jnp
xchg
push
add
test
mov
cmp
ret
and
jbe
or
push
into
xchg
and
sbb
iret
xchg
mov
mov
or
aad
mov
nop
lods
imul
cmc
out
test
jae
out
mov
push
mov
sar
mov
cmp
outsb
pop
adc
mov
test
pop
std
adc
add
sub
fs
jmp
cmp
xor
stos
int3
push
cmp
ret
xor
test
pop
imul
xlat
jo
insb
xor
mov
jmp
mov
inc
stos
lret
int
mov
xlat
shlb
push
bound
mov
insb
daa
push
mov
test
idivl
das
in
rorb
clc
pop
dec
cwtl
xchg
ja
enter
aam
push
stos
mov
cmc
xor
dec
test
sarb
mov
xor
inc
adc
pop
loopne
dec
sbb
adc
les
push
in
xor
lcall
cmpsb
mov
mov
add
imul
js
lods
insl
add
mov
or
pop
shlb
ds
sbb
dec
inc
mov
mov
std
jno
mov
das
push
xor
bound
adc
clc
mov
xchg
pusha
sub
push
mov
js
mov
xchg
xlat
test
and
mov
fs
frstors
movsl
pop
shrl
int3
xlat
and
into
pushf
mov
mov
xchg
imul
xchg
xchg
or
push
int3
add
lds
pop
scas
add
xchg
hlt
test
mov
je
aaa
fcmovnbe
push
div
popa
loope
shlb
filds
je
pushf
mov
mov
jne
frstor
mov
mov
mov
daa
lret
cwtl
push
jbe
xchg
pop
out
push
in
les
cmpsb
shrl
adc
stc
cltd
mov
out
push
mov
sub
inc
std
js
adc
popl
push
lret
sub
dec
and
pop
jo
nop
pop
jb
sbb
stos
aaa
xchg
jbe
cmpsb
pop
sbb
arpl
sbb
orl
out
inc
inc
push
pop
push
xchg
adc
hlt
lahf
incb
xchg
loope
in
sarl
push
out
pop
add
je
ret
push
stos
cvtps2pi
mov
dec
sub
or
inc
pop
jo
repnz
popf
lret
mov
idiv
rorb
sub
sbb
loopne
lahf
stc
xchg
mov
movsb
mov
dec
cmp
dec
aaa
xorl
dec
add
ret
movsl
mov
jb
mov
sub
fmuls
gs
and
out
lea
xchg
test
mov
fs
arpl
scas
lret
mov
leave
sahf
fnstsw
jb
and
into
fbld
shlb
sbb
popa
push
fldcw
mov
je
add
outsl
push
push
nop
dec
push
lds
dec
mov
mov
lcall
test
mov
lcall
ljmp
mov
loop
insl
int3
call
sub
sbb
mov
or
fdivl
mov
int3
jl
lret
fmul
sahf
or
sub
adc
push
push
xor
bound
mov
insb
aam
sub
sarb
pop
sti
lahf
and
ror
and
mov
sbb
lret
mov
inc
jecxz
jg
pop
std
movsl
mov
jb
push
rcr
xchg
adc
ja
in
xchg
jge
xchg
and
or
mov
or
scas
cmp
ljmp
into
lahf
xor
cmpsb
mov
push
stos
xchg
push
xchg
jo
in
dec
aas
pop
pop
inc
fdivl
clc
xchg
inc
loope
push
mov
sbb
cmp
loope
daa
mov
iret
xor
add
ds
loop
xchg
cmp
mov
negl
dec
pushf
imul
and
adc
xor
xchg
adc
xlat
out
mov
jmp
pop
and
jecxz
decl
outsl
ss
jmp
fcoml
shld
mov
and
hlt
mov
outsb
jmp
repz
scas
pop
mov
xor
dec
shlb
xchg
into
mov
mov
mov
inc
mov
insl
out
fs
and
xchg
pop
lcall
into
cmpsl
jnp
inc
push
imul
cmp
jl
or
sbb
rorl
hlt
push
jecxz
and
movsb
adc
adc
jb
cwtl
dec
mov
mov
jle
add
fisttpll
test
aad
adc
cmpb
mov
inc
mov
call
push
fsubs
outsb
mov
xor
fldt
jns
mov
or
mov
xchg
in
shl
adc
ffree
pop
test
xor
mov
cli
popf
shll
mov
add
cmp
xchg
dec
lahf
int3
out
push
mov
sbb
and
mov
fmulp
imull
sbb
mov
xor
imulb
sub
mov
sbb
std
cmpsl
aaa
lods
and
or
cmp
lds
xchg
shrl
hlt
xor
lret
mov
popf
out
xor
aad
push
inc
mov
mov
orb
in
jl
cmp
lods
jmp
inc
xchg
leave
sub
movsb
in
mov
faddp
sbb
xor
daa
lret
aad
mov
add
xlat
mov
push
push
lock
leave
fistl
out
aam
insb
popa
jg
pop
popf
xchg
adc
in
mov
dec
jl
leave
push
dec
mov
add
stos
xor
mov
inc
jle
enter
subl
ds
aad
dec
mov
mov
loopne
sbb
mov
scas
pop
jo
mov
in
testb
shlb
lcall
aad
inc
fnstcw
cmp
xchg
stc
les
add
mov
mov
push
inc
out
and
mov
imul
or
add
jbe
ja
sarl
call
das
fstl
mov
dec
dec
aam
aad
scas
sarb
jg
insl
push
movb
fcomps
lock
inc
jo
mov
inc
push
mov
sub
movsl
adc
pop
adc
ret
adc
nop
mov
pop
icebp
dec
leave
mov
fsubs
lods
mov
stos
adc
sub
dec
rolb
jne
mov
mov
lds
fs
pop
test
mov
inc
mov
sbb
pop
mov
jge
cli
mulb
add
sar
nop
inc
and
add
mov
mov
movsl
add
xchg
mov
cli
push
jge
mov
and
shll
mov
sahf
mov
xchg
or
mov
jmp
ds
ljmp
call
xchg
cmp
mov
xor
mov
xchg
and
and
hlt
mov
leave
cwtl
aad
pop
js
data16
gs
and
or
jno
leave
insl
xchg
aas
mov
xor
pop
and
cwtl
mov
bound
aam
mov
popf
dec
mov
push
addr16
or
or
lock
mov
stos
in
mov
adc
mov
cmpsl
hlt
xchg
adc
cltd
shrl
rcl
dec
push
movsl
sbbl
loope
aas
je
add
mov
lcall
jl
mov
xchg
and
dec
adc
movsb
les
dec
shlb
test
inc
test
imul
iret
and
xor
test
mov
adc
repz
dec
in
jl
mov
scas
insl
xchg
inc
mov
mov
xor
xor
aam
pmaddwd
aad
or
bound
gs
in
fwait
jle
ljmp
sub
push
movsl
sbb
subb
pop
sub
shll
cmpsb
xor
xor
out
cli
push
repnz
sti
repz
mov
mov
ja
xor
hlt
dec
mov
cmc
insb
hlt
out
jne
mov
dec
ret
mov
cld
fmull
ljmp
push
lcall
mov
mov
jne
lret
inc
inc
dec
mov
sahf
cmp
cmp
mov
pop
pop
push
push
movsb
js
mov
shlb
xchg
sbb
mov
push
dec
movb
out
data16
mov
sbb
xchg
inc
fldenv
sbb
pop
jmp
push
add
fidivrl
cmp
push
push
in
pop
fs
roll
sahf
stos
mov
or
and
les
inc
cs
notl
call
test
shrl
jno
lea
stc
loop
cwtl
mov
pop
and
pop
adc
mov
push
mov
push
mov
ss
xor
scas
xor
inc
push
jecxz
loopne
xor
scas
adc
xchg
xor
sbb
mov
in
xor
inc
fiaddl
aas
xchg
xor
mov
add
movsl
mov
mov
mov
repnz
popf
adcb
dec
mov
mov
jnp
mov
iret
xor
popf
cmp
test
out
mov
icebp
fdivrs
adc
popa
sbb
jl
cmp
mov
int3
inc
mov
or
lret
inc
inc
mov
jae
repz
ret
add
repnz
inc
mov
imul
lcall
push
subl
fbld
xor
sbb
jnp
xchg
mov
mov
inc
jb
jae
outsb
pop
xchg
fildll
hlt
pop
and
in
mov
mov
sbb
mov
ret
mov
fistps
rol
mov
mov
in
or
mov
xchg
or
and
jns
mov
jle
sub
mov
stos
sub
xchg
xor
xor
negb
add
sahf
or
cltd
or
jne
xor
lcall
or
imul
jb
xchg
inc
daa
mov
cmp
fidivs
jo
lods
mov
mov
cmp
push
cmp
push
mov
push
mov
xor
xlat
adc
cmp
mov
fdiv
jno
int3
lret
mov
jns
popa
adc
jb
mov
mov
sub
push
adc
mov
mov
cmp
sub
scas
xchg
int
lret
xor
imul
fstp
clc
lds
lret
mov
pop
lret
scas
addr16
sti
leave
xlat
sbb
scas
in
jns
je
adc
cmp
pop
pusha
sub
dec
or
imul
arpl
and
xor
xor
psllq
inc
inc
cmpsl
lods
stos
int3
arpl
imul
mov
int3
xchg
mov
andl
cmc
mov
adc
pusha
add
inc
outsb
mov
mov
imul
or
icebp
push
inc
sub
int3
dec
jmp
push
or
pushf
mov
sub
xchg
mov
rorl
popa
sub
and
sbb
pop
fcomi
fcmovb
repnz
xchg
sub
sbb
mov
ret
inc
lret
aas
mov
lods
aad
fildl
sub
stc
dec
adc
jl
cmp
mov
jmp
dec
lahf
cmp
pop
mov
add
bnd
mov
push
adc
sub
mov
xlat
movsb
xchg
cmc
push
aas
lea
jmp
sbb
mov
add
rclb
stos
jbe
je
pop
out
leave
mov
add
in
pop
cmp
call
adcb
ret
xchg
int
int3
mov
lcall
mov
sbb
shrl
dec
std
jmp
push
daa
cmc
cmc
push
bswap
scas
lret
mov
popa
push
or
add
xor
mov
xor
scas
lret
repnz
fs
sub
pop
bound
pop
mov
dec
push
mov
mov
push
adc
orl
xchg
dec
add
mov
mov
jb
cmp
popf
sahf
mov
jnp
outsl
cmpsb
lods
xchg
jl
add
roll
std
fisttpl
in
and
imul
std
pusha
lods
dec
test
push
mov
inc
mov
pop
push
in
pop
mov
aad
jb
imul
mov
pusha
pop
stc
enter
inc
fwait
dec
jp
jb
pop
std
xchg
xor
int3
lods
push
push
loopne
jae
out
mov
adc
lods
stos
int3
adc
and
push
sti
xor
xchg
cmp
mov
push
inc
shl
out
movnti
push
ss
xor
mov
xchg
push
lret
test
cltd
repnz
or
test
cmpsl
push
xor
not
insb
aaa
pop
sub
add
and
push
test
jecxz
int3
mov
and
cmp
and
sbb
mov
orb
xor
pop
inc
xchg
pop
fwait
cmpl
int
divl
mov
push
sub
pop
push
jp
dec
push
sahf
sbb
pop
push
in
int3
aas
push
pop
out
cmc
inc
add
cli
gs
jl
movsb
insl
xchg
adc
sub
pop
mov
mov
fwait
loop
mov
sub
pop
test
dec
mov
movsb
pusha
xchg
inc
pop
fistpl
in
ret
insb
xchg
in
pop
xor
int3
jg
xchg
mov
or
inc
je
int3
pop
out
testl
int3
adc
lretw
jno
pop
seto
mov
dec
js
pop
sbb
adc
test
jmp
mov
mov
and
and
ret
loope
mov
mov
in
jo
test
mov
and
ljmp
pop
divl
add
repnz
mov
add
push
and
xchg
fwait
xchg
cwtl
push
pop
sahf
divl
sti
push
jae
dec
in
adcb
sub
fiadds
lds
jge
test
in
mov
loope
pop
movsl
and
xor
push
and
push
dec
stos
cmp
pop
adc
mov
nopl
stos
xor
mov
inc
or
popa
repnz
cmp
mov
shrb
mov
test
sub
sbb
bound
fidivs
shr
pop
aad
xchg
mov
mov
imul
std
in
mov
and
add
mov
and
cmp
in
push
xchg
das
cli
sbb
js
xor
and
insb
xchg
xchg
sti
sub
or
lcall
lock
lret
adc
push
cli
jo
sub
mov
mov
mov
pop
pushf
add
nop
inc
lret
loopne
repnz
pop
loopne
and
xor
and
popf
and
pop
movsb
mov
cmc
ja
jl
mov
xor
dec
shr
dec
sbb
sbb
mov
cmpsb
push
pop
pop
test
bound
fwait
xor
or
add
leave
xor
xor
inc
pop
outsb
ficompl
and
dec
mov
aaa
rcrb
and
fwait
and
pop
in
mov
xor
mov
mov
adc
push
mov
pop
adc
popa
cmc
jmp
mov
mov
sbb
in
das
cli
lret
mov
js
and
pop
mov
pop
lock
sub
push
push
xchg
sub
add
imul
sti
jne
repz
lret
bound
mov
push
mov
movsl
sbb
test
mov
push
push
and
in
ret
popf
sbb
aaa
push
lock
pop
pusha
xchg
xor
addr16
xlat
ds
imul
push
lret
and
pop
sbb
hlt
push
jmp
int3
add
sub
rcrl
in
sub
mov
mov
and
or
mov
xor
ret
pop
xchg
mov
mov
push
jae
mov
mov
jb
push
sub
in
add
push
jge
xlat
cld
aas
push
icebp
sbb
jb
aas
pop
ds
push
mov
jne
or
gs
mov
nop
out
jnp
data16
push
cmpb
sbb
cmp
loope
lock
push
mov
xorl
test
xchg
stos
sub
aam
sub
imul
jo
cmpsl
lods
lret
pushf
js,pn
and
fs
mov
fsubs
inc
call
xor
mov
sti
dec
adc
dec
add
ja
iret
mov
pusha
sbb
inc
pop
insb
xchg
xor
fsts
dec
inc
movsb
xor
jmp
fildll
xlat
mov
lock
xor
stos
stc
in
inc
test
mov
lret
in
add
jecxz
fstl
and
popa
insl
mov
nop
mov
sub
inc
or
mov
movsl
ljmp
lret
mov
inc
mov
sahf
cmp
loop
or
jg
int3
push
mov
sub
in
and
and
dec
push
int3
xor
mov
pop
dec
div
sbb
sub
jno
xor
mov
sub
xor
pop
int3
arpl
ror
mov
pusha
mov
inc
out
sub
push
aaa
jge
dec
inc
into
xor
jns
mov
sub
jp
xlat
outsb
sbbb
nop
xor
es
xor
jae
int3
jl
sbb
sbb
stos
pop
xor
or
xchg
inc
xchg
sahf
rcll
stc
xchg
test
int3
or
stc
mov
push
les
repnz
push
adc
add
mov
add
test
xlat
lcall
mov
inc
enter
cwtl
mov
enter
daa
sahf
lret
rol
cmp
out
xchg
scas
cmp
add
pushf
pop
mov
fsubl
push
jle
int3
pushf
pop
sbb
lods
dec
in
dec
mov
mov
pminub
jle
movsl
push
repz
pop
hlt
inc
in
outsb
cli
mov
pop
outsl
call
mov
mov
je
fcomps
lcall
cmp
xor
lret
sub
xchg
or
andl
cmp
and
mov
fidivl
movsb
jnp
mov
mov
dec
and
sub
dec
xor
das
cmpsb
xor
mov
push
xor
stos
mov
outsb
adc
push
or
jg
push
cmpsl
xchg
adc
add
jnp
je
mov
sbb
mov
cmpsb
orb
aam
mov
inc
mov
lcall
jg
ret
mov
mov
or
mov
stos
dec
xchg
in
insb
push
jae
dec
out
mov
mov
imul
divb
or
pop
dec
pushf
push
add
and
sub
xchg
inc
addr16
mov
sbb
popf
sbb
std
jge
sahf
or
testb
lock
dec
adc
mov
nop
aad
lods
cmpsb
lods
mov
es
js
mov
dec
jmp
stos
mov
shlb
sbb
lret
call
sbb
mov
icebp
fstpt
sbb
mov
jno
shrb
adc
sub
movsl
add
sub
out
gs
xlat
loop
stos
inc
mov
shlb
mov
sbb
lods
push
sub
shlb
xor
or
in
add
aam
xchg
cmp
jecxz
js
mov
sub
mov
jmp
in
rsm
mov
xor
xor
mov
sbb
ret
arpl
sub
sahf
xlat
mov
and
xor
push
mov
sbb
out
mov
jnp
mov
xchg
xchg
fwait
mov
mov
mov
jns
cmp
ja
ret
imul
push
test
xchg
mov
inc
out
mov
and
repnz
cltd
mov
lods
cld
cmp
je
dec
cmpsb
inc
aas
lret
outsl
sub
adc
add
inc
jo
push
mov
mov
lret
mov
popa
sub
dec
in
mov
in
call
movsl
subl
imull
inc
rol
cwtl
lea
push
jl
mov
sub
xor
iret
les
insb
call
pop
cltd
lods
xchg
jbe
cmp
pop
add
lods
movsb
repnz
sti
in
pop
and
mov
push
gs
sub
and
in
inc
xor
mov
add
hlt
lods
dec
jl
popa
or
push
dec
cmp
mov
xchg
jae
cld
xor
mov
mov
mov
mov
icebp
mov
leave
or
pop
xchg
lcall
test
pop
inc
xchg
inc
push
mov
mov
add
cs
or
mov
clc
fcmovb
xor
ret
xor
jmp
insb
adc
jmp
imul
push
xor
adc
btr
mov
hlt
push
cmc
fwait
mov
add
mov
xchg
hlt
test
jae
ja
mov
mov
ja
fcmovnu
xchg
or
push
mov
or
cmp
mov
mov
pop
push
clc
jnp
sub
fcompl
lods
loop
sub
add
or
les
sub
push
clc
xchg
cmp
stos
jp
nop
xor
dec
pop
inc
ljmp
popf
adc
es
cmpl
mov
adc
jp
daa
int
mov
pop
call
lods
mov
adc
push
mov
data16
pop
loop
test
sbb
jo
es
xor
imul
loop
push
jl
mov
mov
je
xor
mov
lods
stc
testl
mov
loop
xchg
cli
loopne
xor
fildl
add
mov
add
hlt
leave
or
xchg
sub
or
mov
push
add
pop
aad
mov
mov
push
sbb
xchg
jbe
xchg
btcl
adc
shl
adc
xchg
mov
jle
and
mov
outsb
push
xor
mov
cmp
jg
jecxz
leave
lods
sub
pop
xchg
pop
test
mov
mov
movsl
and
fnsave
rcll
adc
mov
dec
frstpm(287
icebp
in
mov
xor
pop
pop
sbb
inc
jp
mov
mov
shll
mov
ss
mov
cmp
outsl
inc
inc
icebp
lods
mov
mov
pop
adc
xchg
jle
inc
or
shll
or
lods
cmpsb
dec
mov
mov
clc
js
lock
mov
or
aaa
int3
andl
push
cmp
cmp
outsb
sbb
hlt
or
mov
and
aam
repz
les
fidivrl
pop
mov
push
in
test
push
ja
mov
out
fldenv
cmpsb
mov
std
xor
in
inc
xor
negb
push
or
shlb
rol
cmp
aam
lods
cli
enter
cs
imul
outsl
or
dec
push
add
mov
insb
adc
fadds
jl
mov
jae
adc
test
repz
mov
sub
jp
mov
xchg
dec
inc
or
add
push
pop
movsb
mov
fldt
jo
push
adc
cmp
pop
movsl
push
mov
xorb
dec
adc
mov
mov
fwait
mov
push
push
lea
jge
les
pop
scas
lret
or
adc
mov
mov
arpl
das
insl
scas
cli
mov
loop
in
push
nop
and
fs
sbb
mov
daa
cmp
jo
mov
cwtl
stos
or
int
pop
add
aas
mov
jle
push
dec
lret
hlt
fstp
pop
cmpsl
mov
rcrb
mov
subb
in
jbe
or
dec
lret
cs
mov
popa
mov
punpcklbw
in
cmpsb
mov
mov
sub
adc
hlt
lds
dec
mov
push
mov
inc
or
loopne
fcoml
cmp
ds
push
mov
jns
xor
cmp
cmp
or
xchg
bound
mov
pop
mov
pop
mov
std
jbe
mov
jno
jg
dec
ss
mov
dec
je
daa
js
jne
int3
cmp
out
mov
sbb
iret
mov
sub
pop
aam
decb
dec
mov
retw
lret
push
ljmp
add
mov
pop
mov
mov
out
mov
jb
and
lods
push
jecxz
jg
mov
pop
pop
cmc
adcl
lods
mov
fsubs
jns
hlt
scas
adc
scas
fwait
lock
hlt
icebp
pop
lods
push
cmpsb
xor
inc
cmc
mov
xor
in
add
pusha
outsl
xor
mov
into
jns
pop
jnp
fcoms
fucomi
mov
mov
push
push
aam
shl
sbbl
mov
fdivrl
cmp
xchg
pop
iret
cmpsb
stos
mov
popa
imull
in
imul
mov
adc
loopne
int3
lret
mov
mov
push
jp
mov
add
outsl
push
loop
mov
adc
insl
leave
xchg
mov
sbb
mov
add
pop
sti
xchg
mov
mov
cmpsb
or
subb
popf
jnp
je
dec
push
test
mov
mov
inc
fistpl
dec
mov
shll
mov
add
mov
sti
loopne
sub
fsubrl
xchg
mov
shrb
sub
mov
mov
fmuls
insb
test
mov
pop
imul
mov
mov
les
mov
fdivrs
inc
xchg
sti
fnstsw
jb
je
out
adc
movsl
mov
xorl
sub
out
fsts
enter
mov
jp
push
mov
push
and
mov
mov
in
cmp
jp
stos
xor
mov
or
adc
stos
enter
xor
mov
aas
fcompl
and
mov
or
jecxz
test
mov
xor
sbb
rclb
mov
lahf
arpl
xchg
sbb
mov
sub
sub
pop
mov
jge
mov
jp
jg
lea
mov
xchg
xor
aam
and
shl
jo
and
int
sbb
mov
das
or
mov
ja
dec
adc
aas
fdivrs
aam
sbb
mov
outsl
mov
sbb
xor
fstl
stos
mov
or
dec
pop
mov
mov
push
imulb
mov
mov
lock
jae
std
push
mov
pop
cmp
and
jns
inc
push
hlt
lcall
mov
adc
icebp
cmp
pop
xchg
push
clc
mov
jns
in
nop
jmp
jns
int
pop
sar
shrl
insb
ja
incb
cmpsb
test
pop
hlt
mov
sbb
loope
and
xchg
lret
fwait
addr16
jmp
pop
mov
jnp
cwtl
pusha
pushf
and
mov
shll
outsb
push
mov
andb
das
cmp
mov
movsb
cwtl
push
loopne
into
fs
sbb
xchg
addr16
sub
mov
jae
mov
mov
pop
icebp
insl
add
jmp
mov
mov
scas
pusha
mov
loop
test
push
fsub
jg
dec
das
cmpsl
dec
mov
pop
xchg
mov
pusha
sbb
cmp
cmp
inc
push
in
inc
sub
xchg
loope
frstor
adc
stc
lret
cmp
hlt
mov
sub
int3
cmpsb
xchg
popa
xor
add
frstor
je
pop
jle
jg
shlb
std
enter
popa
mov
sub
xlat
out
movsl
sub
decl
clc
test
sbb
stos
cmpsl
lret
dec
sub
stos
daa
fs
pop
outsl
inc
mov
int3
xchg
movsl
xlat
mov
jns
cmp
push
std
mov
or
cwtl
add
test
jnp
pop
je
aam
inc
push
scas
mov
mov
cmp
xchg
orb
mov
and
xchg
mov
aad
loopne
fnsave
jne
imul
movsb
mov
lcall
sbb
nop
iret
inc
sub
jge
sahf
hlt
fmuls
jb
enter
loopne
ds
mov
fldl
mov
jno
shlb
cmpsb
mov
push
pop
icebp
xchg
aaa
ret
fstps
cmpsb
cs
jne
mov
mov
mov
ds
aaa
mov
add
out
push
rclb
xchg
outsb
inc
adc
outsb
jno
push
xorb
mov
pandn
movsb
xlat
sbb
jmp
int3
xchg
jl
ja
inc
mov
lods
sbb
shld
hlt
cli
mov
xchg
test
pop
dec
in
popa
xlat
mov
adc
testl
xor
hlt
lfs
push
dec
pop
jb
mov
bound
or
mov
cs
jge
loopne
out
jb
dec
fsubr
in
mov
push
cmp
mov
popa
cli
stos
xor
xor
fisttpll
mov
or
inc
push
fidivs
jp
inc
test
fwait
dec
jmp
dec
fisubrs
or
nop
xor
xor
xor
dec
test
mov
sarb
loop
mov
jnp
mov
jnp
sti
fstps
inc
hlt
jl
mov
push
aas
inc
lret
add
filds
jle
jns
sbbb
iret
push
in
jmp
movsl
andb
xor
les
adc
add
inc
mov
std
lds
les
pop
push
inc
sub
sbb
hlt
testb
mov
cli
mov
adc
mov
cmp
adc
ja
inc
fbld
movsb
test
and
ret
inc
dec
jne
mov
sub
in
mov
pop
jnp
aas
mov
bnd
ffreep
scas
and
inc
fs
sarb
pop
mov
add
sarl
aam
push
mov
arpl
call
ret
inc
push
mov
mov
les
int3
mov
cmp
mov
push
mov
or
mov
lock
xchg
xchg
cmp
mov
fwait
arpl
pop
sub
mov
orl
mov
lcall
mov
adc
pop
mov
int3
retw
pop
cmp
lcall
add
out
add
pop
xor
push
stos
cmp
jecxz
mov
inc
les
mov
fs
cmp
xchg
shlb
dec
jne
push
xor
sbb
ljmp
fimuls
push
cmc
leave
repnz
std
pop
mov
sbb
adcl
inc
fs
movsl
add
mov
lret
lods
push
mov
out
ljmpw
mov
mov
or
mov
adc
and
mov
aaa
jecxz
push
mov
inc
sbbl
test
scas
shrl
mov
imul
aaa
mov
xor
cmpsb
mov
push
sarb
aam
lods
ss
sahf
les
push
xorl
jnp
pop
stos
jae
mov
add
inc
lods
scas
cld
push
and
xchg
mov
popf
sub
test
lret
inc
in
dec
and
js
fwait
add
mov
hlt
xlat
cld
fcmovu
adc
test
mov
das
and
nop
push
fidivs
cmpl
lock
in
mov
or
mov
shlb
cmp
insb
adc
mov
mulb
ja
fsubs
imul
pusha
pop
mov
xor
push
cs
sub
push
mov
cmp
mov
xor
dec
rcrb
cmp
sti
and
fwait
adcb
testb
clc
inc
inc
push
xchg
jmp
mov
or
sbb
push
into
rolb
ljmp
cs
lahf
cwtl
or
jne
dec
icebp
cmpsb
ficoms
adc
in
mov
or
loope
test
jne
popa
xor
inc
stc
sbb
sahf
pop
mov
or
dec
out
pop
mov
push
adc
cwtl
dec
shlb
hlt
jecxz
cld
fsubrs
mov
pop
neg
setns
jnp
ss
sbb
mov
icebp
enter
stos
fwait
inc
pop
dec
xchg
inc
sub
xchg
jne
test
xor
mov
and
stos
mov
sub
fistl
mov
scas
push
mov
inc
adc
test
fnstenv
addr16
mov
mov
sbb
popf
xchg
mov
xor
js
lea
and
push
int3
jb
jnp
adc
or
sbb
dec
out
sub
pop
inc
sbb
jle
cmp
loopne
push
fdivrs
mov
push
enter
xchg
jle
mov
in
or
mov
jns
aam
jg
mov
sti
test
mov
mov
pop
pop
jmp
or
pop
mov
enter
mov
cmp
or
clc
stc
cwtl
sub
cmpsb
or
pusha
or
icebp
test
jl
cmp
cmpsb
cmp
adc
inc
stos
movsl
and
inc
fld
mov
mov
jp
mov
out
aad
dec
xchg
inc
dec
test
mov
stos
add
cwtl
push
fadd
ja,pt
pop
or
loopne
sub
add
call
and
xchg
clc
mov
mov
insb
mov
mov
add
mov
ljmp
xor
cmp
out
adc
jo
mov
mov
jb
mov
push
lret
mov
ret
jg
adc
mov
inc
jbe
inc
jnp
icebp
into
adc
jmp
inc
aam
lea
leave
jne
bound
lods
mov
mov
loop,pn
jns
fnstenv
mov
jno
fmull
rcrb
test
hlt
rclb
les
test
mov
inc
add
push
lds
pop
call
sbb
cmc
mov
push
jecxz
cmp
fnstsw
aam
xor
mov
imul
dec
mov
push
push
push
mov
decb
inc
xchg
pop
xchg
inc
mov
lds
pop
mov
es
jg
pusha
mov
mov
pushf
xor
mov
push
fisubl
ja
cmp
ljmp
mov
pop
pop
cmpsl
stos
mov
cmp
in
sahf
aaa
jne
and
stos
push
mov
clc
mov
insl
jbe
div
out
sbb
mov
mov
cmpsb
pushf
mov
mov
rcrb
stos
andb
scas
cld
movsl
mov
push
cmp
adc
inc
int3
mov
daa
ret
xchg
fmul
jmp
stos
adc
mov
mov
sub
lock
jp
xor
call
ret
mov
push
push
orb
rclb
loope
filds
mov
loopne
repnz
fmuls
shl
test
popa
sub
adc
lret
or
hlt
aam
call
mov
mov
aas
add
mov
fcmovb
ljmp
mov
into
xchg
adc
mov
hlt
mov
jl
xchg
adc
bound
lods
mov
dec
xor
cmp
xchg
or
popa
rcrl
rcll
fiadds
mov
xchg
push
inc
mov
imul
lcall
cmp
pop
clc
sahf
movsb
sbb
inc
das
pop
cmpb
mov
icebp
jo
popa
push
mov
mov
jg
dec
push
cmp
push
mov
ret
sbb
clc
aas
jmp
mov
stos
aas
popf
push
inc
popa
sub
scas
mov
and
xchg
cmp
int3
xor
push
fs
dec
cld
stos
scas
lods
mov
cmp
cmp
push
mov
gs
lret
pop
pop
das
xchg
sub
push
lret
lea
mov
mov
dec
test
dec
mov
or
mov
ret
xorl
xor
sub
cltd
or
hlt
cld
lea
or
push
leave
fs
gs
push
inc
sub
cmc
mov
imul
cmpsl
outsb
fwait
lds
int3
cld
sub
test
test
fsubl
in
outsl
lock
rcrl
gs
inc
test
sbb
lds
notb
add
mov
roll
outsb
arpl
adc
cli
xchg
pop
ljmp
lea
sbbb
jae
mov
ds
stos
cli
inc
scas
outsl
lcall
sbb
add
and
pop
mov
jl
sub
jp
jnp
outsb
mov
shr
dec
lret
jle
or
push
outsb
mov
in
mov
push
dec
jae
js
es
xlat
jl
stos
mov
test
sbb
jae
test
sbb
int3
subl
pushf
in
or
adc
lret
push
jg
mov
add
mov
outsb
into
test
pop
dec
mov
sbb
fildl
mov
cli
jno
fsub
cltd
imul
pop
fisttps
repnz
sub
decb
sub
int3
and
mov
inc
mov
mov
lea
jb
in
push
int3
mov
cmp
add
int
int
fs
push
push
mov
fadd
and
in
sub
and
push
cli
mov
aaa
ficoml
dec
mov
xchg
int3
xchg
mov
std
push
push
scas
xchg
sbb
int3
jecxz
mov
add
sub
test
lret
mov
les
test
sub
out
pop
push
cmovnp
xchg
js
rcrb
mov
mov
lock
orb
shr
test
data16
in
xor
cs
sahf
xor
sub
lea
movsl
pop
pop
ret
in
popa
pop
lock
mov
clc
insl
stos
jmp
aad
mov
pop
xchg
int
push
lret
leave
loope
insl
scas
fisubs
imul
mov
stc
lcall
xchg
nop
arpl
inc
lea
sub
or
push
mov
inc
dec
repnz
dec
sbb
sub
vmovd
daa
or
cmp
inc
push
mov
lock
hlt
xor
dec
stos
ficompl
repz
fsubrl
loop
and
mov
and
mov
aam
cwtl
das
mov
or
popf
lret
inc
leave
imul
add
inc
sahf
je
das
int3
mov
pop
xlat
cltd
pop
loope
mov
les
hlt
das
push
mov
lret
das
xchg
xor
rol
int3
cmp
test
rcll
daa
add
testb
xor
rcrl
xchg
push
xchg
nop
sub
and
cmpsb
dec
outsb
ljmp
cmp
adc
cmp
inc
nop
cmp
sti
sub
movsb
sbb
add
dec
and
cld
popf
pop
add
pop
in
xchg
insb
loopne
xor
xor
sub
icebp
xor
sub
jge
fistpl
lret
iret
push
adc
cmp
lret
mov
ss
pop
jle
aas
dec
or
add
mov
repnz
dec
and
cmpsb
push
mov
cmc
out
dec
sbb
xor
lods
rorb
sahf
mov
or
test
sub
nopl
fisubrs
es
cmpsb
push
js
mov
imul
pop
push
push
lahf
sub
mov
cmpsb
mov
imul
fs
mov
cmp
xor
sbb
xor
mov
pop
jo
popa
mov
mov
cmp
mov
cmpsb
xchg
mov
sbb
mov
dec
adc
orb
mov
or
cmp
xor
xor
stos
jge
sub
push
imul
mov
imul
scas
mov
inc
loop
dec
xor
jae
or
jp
mov
int
mov
cmp
sbbl
lret
xchg
mov
sbb
lds
cmpsb
inc
mov
pop
in
inc
in
push
mov
stc
cltd
cmp
inc
mov
fmulp
push
mov
jg
rcrl
popa
pop
popf
xchg
ds
pushf
jbe
inc
mov
adc
shll
inc
mov
xchg
divl
sarl
adc
mov
and
test
xor
mov
fimull
push
xor
jns
in
lea
inc
sahf
xor
out
mov
lret
addr16
and
jecxz
stc
mov
or
or
rcrl
shrd
clc
push
sbb
pop
dec
fiaddl
push
cmp
call
sub
stos
incb
and
fistpl
mov
mov
fsubr
mov
out
mov
outsl
mov
bound
gs
enter
xchg
cmp
push
mov
in
sti
mov
fdivrl
mov
test
hlt
addb
mov
shlb
cld
movsl
cwtl
fstps
xor
adc
jecxz
xor
jp
jle
mov
and
dec
in
out
add
pop
push
push
hlt
in
xorl
call
test
pop
and
stc
xor
or
mov
mov
shlb
mov
pop
fistpl
mov
lret
in
mov
inc
aam
cmp
icebp
test
push
pop
add
pop
fistpll
mov
jns
mov
lods
cli
fsubs
and
xchg
cs
mov
mov
out
mov
andb
icebp
add
rcll
test
lcall
lds
call
mov
mov
inc
push
cmp
lahf
jo
cmp
inc
mov
mov
cmpsl
cmp
repnz
mov
sbb
mov
mov
sbb
fildl
push
xchg
mov
fnstsw
mov
ds
out
cmp
push
inc
add
jmp
shlb
rcrb
mov
dec
xor
xchg
test
mov
sub
fdivl
push
or
in
ds
mov
or
mov
lods
repnz
xchg
iret
mov
adc
lea
and
jl
inc
mulb
stos
test
cmp
mov
dec
lods
in
lds
mov
enter
pop
lahf
cmpsb
inc
daa
pop
bound
in
divl
test
cmp
mov
jnp
mov
sbb
push
sahf
mov
test
psubsb
lods
and
imul
cmpsb
lahf
ret
sbb
push
jge
out
fidivs
push
pop
sub
into
lea
mov
repnz
fsubl
test
ljmp
insl
loope
gs
popa
xchg
movsl
test
sarl
sbb
fnstenv
mov
jle
xchg
enter
movsl
xor
movsl
repz
jp
in
or
push
test
sub
mov
xor
ljmp
negl
mov
lret
fdivl
iret
test
pop
je
mov
ret
xor
or
jnp
pop
js
shrb
xor
mov
jno
lahf
add
dec
xchg
xchg
push
je
push
pop
fdivrp
mov
mov
hlt
xchg
out
xchg
pop
xchg
ret
insb
iret
stos
dec
adc
cmp
xor
jl
jnp
mov
jge
jns
mov
repz
in
jbe
in
popf
int
gs
xor
ror
insl
pop
mov
and
mov
cs
jno
rorb
mov
sbb
mov
mov
outsl
shl
xchg
cld
fbstp
das
aam
xchg
popa
mov
or
add
mov
nop
enter
cmpl
sbb
mov
addr16
outsb
add
fldl
sub
xor
jbe
and
push
shll
mov
xor
xor
or
add
test
push
neg
outsb
in
mov
adc
mov
hlt
cmpsl
movsb
out
lods
das
jg
cmp
test
inc
mov
gs
call
inc
adc
pop
mov
jo
mov
addl
mov
push
ret
sub
loopne
mov
sbb
mov
xchg
sbb
sub
xor
sbb
imul
jl
xor
ud2
sub
mov
fstpl
push
hlt
cmp
movsb
cmc
mov
js
cmpl
mov
stc
lea
xchg
sub
ds
sbb
pop
pushf
and
iret
cmpsb
mov
jg
push
sbb
rcrl
mov
lahf
push
int3
dec
jecxz
mov
mov
mov
data16
xor
push
mov
lods
fisttpl
rcll
scas
jmp
hlt
dec
inc
fmulp
mov
add
ds
and
mov
mov
adc
scas
ja
fucomp
cmp
iret
mov
clc
jne
inc
or
insb
xchg
rclb
cmpsb
ljmp
mov
push
dec
daa
mov
adc
dec
mov
pop
shlb
test
ret
jp
out
adc
in
adc
repz
xchg
jge
inc
cli
movsl
xor
movsb
and
outsl
adc
icebp
mov
add
push
and
mov
cli
pusha
ffreep
repnz
out
and
fs
test
mov
dec
mov
pop
xchg
shrl
jmp
xor
loope
lods
push
lahf
divl
mov
push
pop
inc
xor
hlt
scas
xchg
add
mov
mov
inc
popa
imull
fnsave
push
sti
sub
mov
sub
mov
inc
hlt
pop
or
je
adc
hlt
mov
jle
scas
jbe
push
fwait
sahf
xor
mov
ffreep
test
ficoml
stos
inc
cli
lds
mov
popa
shlb
xchg
loopne
ja
je
movsl
adcl
add
xchg
xor
aas
mov
stos
pop
xchg
pop
mov
cmpb
cmp
test
cmpsb
dec
xor
or
mov
push
mov
add
xchg
or
loope
mov
int
sub
fsubl
sub
mov
mov
in
push
lea
cmp
or
sbb
mov
mov
lods
aas
mov
int3
popf
xor
ret
fs
enter
out
mov
test
mov
mov
xchg
jnp
jle
shl
cmp
mov
sbb
insl
in
dec
add
stos
lods
je
xchg
dec
jecxz
cltd
xchg
cs
or
xchg
jl
sub
rorb
dec
jnp
xor
inc
jmp
jne
scas
out
lret
sub
ja
test
mov
cltd
aas
iret
lcall
repz
cmp
bound
in
jp
inc
add
inc
pop
pop
stos
jae
dec
shll
pop
pushf
mov
mov
fcompl
dec
mov
push
daa
adc
jne
fstps
lret
dec
adc
je
fisttpl
test
imul
sti
xchg
dec
mov
sub
movb
add
push
jb
push
fdivs
pop
and
pop
jmp
xor
sub
xor
or
mov
lds
xchg
mov
jnp
in
jmp
push
mov
mov
inc
sbb
mov
xchg
nop
xor
insb
adc
stos
lods
lcall
mov
dec
std
imul
fnstcw
fmull
pop
loop
out
mov
jp
mov
stos
push
cwtl
mov
repz
cmpsl
aam
ljmp
adc
rcrl
cmp
xchg
jbe
cld
jne
nop
add
int3
test
dec
add
testb
repz
inc
hlt
fsts
inc
sbb
imul
mov
xor
jno
adc
mov
adc
pop
mov
xor
je
mov
or
push
mov
dec
pop
mov
in
add
mov
mov
sub
mov
scas
jb
hlt
push
hlt
out
inc
sub
mov
mov
popa
dec
or
cwtl
pop
xchg
inc
mov
mov
mov
jne
int
push
mov
dec
ret
xchg
lret
xchg
and
mov
mov
sbb
add
lret
cmp
rcrl
lea
repnz
loopne,pt
nop
sbb
sbb
xor
inc
out
mov
pusha
sbb
lret
xchg
mov
or
or
fdivrp
jae
push
int3
cmpl
data16
lods
in
call
mov
jmp
and
mov
dec
gs
jecxz
lret
test
nop
daa
mov
pop
inc
ret
push
or
adc
lret
lock
pusha
dec
icebp
xchg
push
push
imul
lsl
jp
pop
subb
enter
jle
push
cs
push
lret
jbe
lds
fbld
mov
inc
pop
gs
movsl
repz
push
push
sbb
imul
jl
outsb
lea
stos
xor
add
aam
sub
push
data16
imul
xor
xchg
stos
inc
lret
in
pop
mov
push
and
movsb
loopne
negl
mov
xor
sti
insl
xor
xchg
fildl
push
arpl
jmp
lret
insl
test
add
aam
daa
push
mov
fnstenv
lret
ret
pop
sub
int3
adc
add
adc
je
in
fldt
sub
icebp
inc
fcoms
jecxz
fldl
dec
adc
pop
lock
stos
gs
mov
leave
dec
mov
mov
cltd
lea
ds
imul
push
xchg
stos
fnstcw
xchg
dec
pop
stos
dec
mov
lret
stos
scas
fbld
aam
lock
and
push
add
loopne
sbb
adc
rclb
mov
jne
je
shlb
notl
imul
xchg
andl
test
enter
sbb
call
pushf
pusha
xorl
inc
mov
hlt
ss
mov
adc
push
fmuls
dec
stos
lds
mov
insb
in
std
jne
pop
lcall
sbb
cmp
mov
int3
inc
insb
mov
inc
and
pop
xchg
xchg
inc
out
mov
xor
jl
and
and
es
mov
adc
cli
mov
or
stc
pushf
data16
jle
pop
or
loop
xchg
jbe
cwtl
mov
cmc
push
mov
ja
enter
sbb
test
mov
lret
fst
xorl
and
add
nop
icebp
push
adc
dec
pop
mov
int
jg
jnp
lret
orb
xor
sarl
shr
adc
jns
push
int3
cmp
cmc
jg
xchg
sbb
and
out
fs
cmp
jle
movsb
lret
jp
inc
jp
mov
mov
adcl
int3
fidivs
repz
push
js
nop
add
int3
mov
jp
xor
pop
arpl
mov
xlat
adc
fstpl
xchg
int3
xchg
dec
cmp
jno
lahf
push
xchg
stc
sub
es
adc
xlat
fs
int3
shll
sub
les
pop
dec
inc
rcrl
aam
out
xor
or
xor
and
pop
bound
in
sub
aas
in
adc
lret
repnz
stos
push
add
fmull
jg
into
sahf
xor
push
and
test
cmp
mov
daa
sub
push
fdivl
sti
nop
ficomps
mov
xor
icebp
inc
sub
pop
mov
lahf
inc
inc
mov
stos
lret
outsl
jbe
decl
cs
leave
negl
stos
aad
fsub
mov
lds
icebp
and
lret
cli
and
cmp
or
pop
fs
or
and
pusha
fwait
push
pushf
dec
dec
mov
sub
jns
xchg
inc
insb
fisttps
les
pop
int3
jo
aas
out
pop
out
push
arpl
mov
pop
dec
mov
xchg
push
daa
inc
stos
fistpll
pop
pop
lock
xchg
pop
bound
dec
rolb
pop
cmp
mov
mov
lret
sub
cmp
repz
loopne
mov
fs
or
pop
xchg
xchg
cltd
pop
jae
xchg
cmp
sahf
jns
cmp
add
daa
cmp
rorb
jcxz
sbb
ss
sub
test
loopne
lcall
mov
mov
xchg
repz
repz
sub
cmc
pop
push
sbb
imul
cmp
pop
jns
cmp
fists
push
mov
inc
mov
inc
bound
inc
test
mov
fs
mov
mov
jns
in
jae
ret
vpunpckhdq
lcall
mov
mov
cmpsl
mov
push
jmp
ja
outsb
rcrb
xchg
sbb
mov
hlt
xchg
out
mov
dec
fadds
xchg
sub
mov
dec
jo
mov
outsl
dec
std
sub
das
int3
or
mov
enter
mov
or
and
test
cmpsb
in
cmpsl
mov
sbb
xor
pushf
cmp
lret
stc
xor
cmc
int3
mov
xor
pop
sbb
mov
dec
adc
cld
gs
int3
xchg
and
jp
gs
mov
cmp
sub
popa
int3
or
push
ss
push
or
cmpsl
xor
mov
adc
add
lods
pop
sbb
scas
test
bound
dec
mov
jle
adc
push
cmc
and
test
fdivrp
dec
dec
sub
shlb
pop
movb
and
insl
dec
xor
cmp
icebp
lahf
addr16
jns
jbe
jb
and
rcrb
les
lret
mov
leave
push
sub
lcall
ja
xchg
js
icebp
xlat
dec
lock
mov
lret
sub
mov
int3
shrb
imul
mov
mov
sub
pushf
xchg
xorb
ret
subb
mov
mov
fmuls
push
popf
cld
cli
push
movsl
bound
popf
add
jae
sub
mov
or
xor
dec
pusha
xor
mov
shrl
icebp
xchg
sbb
ljmp
cmpsb
insb
add
mov
xor
test
xchg
push
inc
clc
add
stos
ss
movsl
test
fprem1
or
das
mov
hlt
add
mov
out
sub
push
xchg
or
xor
sub
fnstsw
or
rcrl
jge
out
fisubrs
mov
arpl
mov
cltd
lock
inc
mov
add
imulb
aam
ja
and
pop
aaa
outsl
mov
adc
sub
mov
cmpsl
je
lret
xor
xchg
fdivrl
lock
je
sub
dec
adc
jo
sti
pop
and
test
ss
inc
pop
pop
dec
add
pop
inc
jmp
cld
js
inc
nop
imul
ret
xchg
out
jo
sbb
pusha
xchg
and
xchg
aad
fxrstor
or
cmc
jbe
sti
adc
mov
mov
dec
frstpm(287
inc
jmp
movsl
and
xor
lret
jbe
cmpb
xchg
stos
sub
cwtl
ret
into
sbb
pop
repz
out
out
sub
outsl
scas
dec
popa
mov
xchg
loope
movsl
cli
mov
xor
sbb
mov
jb
jp
jg
imul
je
loop
and
ds
int
fisubrl
mov
jb
xchg
inc
mov
and
movups
lds
mov
loope
mov
clc
sahf
lods
bound
fs
test
dec
mov
pushf
loope
xchg
or
dec
mov
lods
imul
mov
jno
mov
push
inc
gs
xchg
fistpl
mov
shrb
inc
xchg
cmp
repnz
lea
cmpsb
stos
lock
cmp
stos
fsts
sti
scas
adc
jo
mov
shrl
daa
push
jo
fwait
xchg
loope
ljmp
sub
add
pushf
bnd
inc
movsl
adc
push
bound
and
xchg
mov
in
push
pop
iret
js
cmp
pusha
mov
pop
push
out
aad
movsb
mov
pop
dec
out
lock
fs
push
push
mov
ds
imul
rcl
jecxz
mov
cmpsb
hlt
das
xor
jo
in
and
sti
pop
push
out
pusha
cmpsb
sbb
stos
xchg
cmc
rcl
movsl
jb
or
xor
mov
notl
mov
dec
cltd
xor
add
nop
in
sub
stc
int3
bound
lret
push
arpl
lcall
repz
dec
inc
dec
call
aad
mov
mov
sub
mov
fstpl
mov
test
bsr
mov
adc
add
js
and
stc
in
lret
testb
leave
adc
fstpl
cwtl
and
hlt
stc
push
lret
lods
stos
cld
fcompl
gs
lret
mov
fisubl
mov
push
pop
sub
mov
lret
adc
add
and
lret
stc
cmc
and
aas
sub
arpl
test
xor
or
out
mov
out
cmp
xchg
jne
cmp
xor
bound
popf
push
inc
ds
jns
or
inc
mov
jp
shll
aaa
push
push
mov
sub
pop
push
sub
clc
loope,pn
sbb
sub
inc
lods
sbb
dec
add
jmp
pop
cmp
and
push
sti
jno
rol
lock
sti
arpl
icebp
mov
pop
les
pop
lret
data16
xor
push
cmp
stos
int3
lahf
adc
pop
jne
xchg
adc
mov
pop
add
inc
bound
in
pop
test
cmp
sbb
dec
mov
nop
xor
lret
cmpsb
lods
mov
ror
or
imull
add
es
movsb
dec
es
sbb
stos
adc
push
ds
stos
fs
mov
repz
int3
sbb
mov
lea
ret
mov
test
push
cmc
cmp
int3
or
lret
loopne
es
pop
push
mov
clc
cltd
enter
pop
mov
ficomps
imul
mov
mov
cwtl
test
icebp
fmull
jb
xor
push
xchg
call
daa
das
cltd
sti
into
jns
mov
lret
xor
xor
pop
in
mov
push
das
call
mov
push
pop
push
gs
dec
jecxz
movsb
and
outsb
pop
xchg
test
sbbl
mov
mov
fstpl
sub
mov
jno
xchg
cs
mov
mov
jb
fs
push
adc
push
jns
shlb
imul
stos
or
arpl
mov
ss
xor
fs
stc
divb
mov
ljmp
mov
addb
js
inc
scas
ror
jg
mov
push
adc
mov
popa
jmp
xor
sub
sbb
sub
test
jl
pop
fmuls
rorb
insb
decb
mov
loope
or
shll
sub
in
cltd
shlb
arpl
mov
jnp
push
jge
lret
inc
insb
imul
and
lret
cmp
and
imul
push
scas
or
push
test
add
inc
add
sbb
lods
pop
add
mov
xchg
fwait
sub
ja
pushf
lahf
sub
mov
fisubl
fs
scas
push
mov
xor
pop
cli
idivl
pop
cwtl
je
lret
and
imul
xchg
mov
pop
sub
sbb
push
mov
stc
imul
or
stos
bound
xchg
xor
jecxz
sarl
fsubrl
mov
scas
pop
ret
data16
ja
mov
nop
mov
fbstp
ds
dec
ficomps
inc
gs
pop
dec
clc
or
jo
jno
popf
push
lret
push
hlt
lods
sbb
cld
imul
test
outsb
pushf
scas
adc
imul
or
mov
in
mov
in
pop
cld
or
fs
mov
lret
xor
mov
inc
push
lock
or
sub
sbb
dec
cmp
xor
mov
popa
lret
scas
sub
loopne
lcall
sbb
mov
pop
sbb
loopne
adc
fmuls
add
test
rcrl
je
or
cs
lret
outsb
add
lcall
push
pop
movsb
xchg
xor
cmpsl
push
adc
orl
push
stos
xor
pop
jmp
ds
enter
pusha
push
mov
sbb
scas
andl
add
push
xchg
and
xchg
stos
mov
cltd
loop
push
fsubrs
pusha
mov
and
mov
test
sbb
or
popa
mov
xor
push
mov
dec
adc
shrb
push
jmp
and
xor
cld
cmp
cwtl
fs
mov
movsl
and
int3
adc
rclb
mov
dec
jg
lods
loope
mov
loopne
cld
jg
mov
dec
leave
sahf
filds
dec
mov
int
je
sub
xor
dec
repnz
pop
xchg
notb
mov
iret
cltd
inc
sahf
pop
loop
pusha
repz
int3
cmc
dec
jo
and
leave
xor
xor
jb
int3
mov
jle
imulb
lahf
int3
sahf
xchg
mov
or
popa
jo
clc
mov
fwait
mov
iret
jecxz
hlt
daa
ss
xchg
sbb
cmpsb
dec
sahf
xor
sub
je
pop
pop
fwait
mov
pop
dec
out
fbstp
dec
shrl
add
jmp
imul
leave
int3
mov
sub
add
xchg
sbb
or
cmp
fsubl
add
and
mov
fnstenv
xor
shlb
test
stc
mov
or
sarb
or
stc
or
or
jns
xor
int3
and
into
mov
mov
cltd
or
jecxz
test
cwtl
mov
imul
lret
arpl
call
xor
lcall
xchg
iret
stos
cmp
aaa
jo
insb
subb
jl
xchg
jae
icebp
xchg
jne
std
mov
sub
int3
mov
push
jl
ljmp
xchg
jo
add
lods
int3
shr
or
arpl
loop
cmpsb
shlb
sahf
and
stos
push
sti
sub
add
cmc
lock
add
flds
sub
lds
cmc
fcoml
bswap
shl
adc
stos
test
repz
js
imul
leave
adc
or
xor
clc
adcb
add
lods
sub
sti
mov
ret
xchg
sbb
cmp
mov
stc
add
leave
rolb
lret
ja
incl
int3
lea
add
gs
outsb
push
shlb
adc
mov
shll
xchg
rolb
mov
je
pop
mov
sahf
sub
xchg
cs
push
adc
decb
or
sub
push
aas
mov
std
xor
das
mov
mov
stc
cmpsb
mov
sarl
add
mov
dec
neg
mov
shll
rol
sub
xchg
and
add
loope
in
aad
jne
sub
jb
cli
xor
xchg
xchg
push
lret
jno
push
scas
cmpsl
idivb
bound
xchg
push
dec
std
mov
movsl
dec
dec
leave
mov
jecxz
add
push
xchg
sub
mov
stc
mov
mov
jecxz
xchg
dec
jl
sahf
mov
mov
pop
and
movsb
adc
xchg
push
mov
mov
test
pusha
add
push
imul
mov
sarb
imul
int3
pop
and
test
and
stos
add
filds
hlt
mov
pop
xor
sti
test
lret
inc
dec
loopne
scas
adc
add
pusha
mov
daa
test
sub
cmpsl
negb
out
rolb
lods
xor
cmc
call
and
loop
cwtl
dec
daa
cmp
sahf
test
jo
push
mov
xor
sub
notl
xchg
jnp
ds
into
mov
hlt
dec
sahf
enter
push
es
dec
mov
imul
fisubrs
movsl
dec
dec
add
pop
lea
inc
test
popa
imul
xor
pop
cmp
mov
into
outsb
mov
cmc
adc
andl
loopne
sub
pusha
push
daa
imulb
sub
jle
and
add
push
sub
xchg
and
lock
mov
mov
stos
int3
imul
push
inc
or
rorl
cmp
inc
dec
dec
mov
ret
jecxz
mov
test
adc
mov
fs
jecxz
dec
xor
lods
mov
movsl
pop
sub
push
mov
xchg
lret
inc
fiadds
fmull
mov
shlb
outsl
je
iret
push
xchg
pushf
pushf
sub
data16
int
data16
enter
jg
int3
test
lret
add
repnz
imul
pop
cmp
push
sbb
das
fimull
pusha
out
mov
and
sarl
fstpl
mov
scas
loopne
mov
pop
or
cmp
pop
xor
push
and
out
lret
fs
mov
lcall
pop
mov
test
mov
pop
not
outsl
push
jg
aaa
fistpl
mov
mov
pop
mov
enter
cmp
movb
loopne
xor
push
mov
gs
jg
jae
test
insb
pop
fisubrl
insl
in
sbb
xor
or
pop
sub
outsb
bound
or
addr16
pop
mov
lret
mov
add
subl
cli
mov
frstor
jge
cltd
jl
and
scas
add
xor
push
pop
or
sub
push
inc
cmp
jnp
and
xor
int
or
xchg
mov
adcb
xchg
lea
outsl
inc
inc
mov
vunpcklps
xor
das
addr16
test
mov
dec
test
dec
mov
push
int3
pop
negl
xor
je
dec
dec
hlt
jmp
hlt
sahf
insl
int3
jge
mov
test
rcrl
jecxz
es
sub
xor
or
popa
mov
lock
outsl
and
or
pop
and
ret
pop
sbb
add
jecxz
add
fwait
inc
xchg
dec
lds
pop
xchg
sbb
jae
out
shll
in
mov
js
mov
nop
xchg
mov
push
gs
clc
mov
mov
and
add
inc
lret
mov
jbe
sbb
xor
in
jle
mov
pusha
pusha
imul
stc
xorb
push
dec
cmovbe
movaps
pusha
fisubs
mov
dec
push
sbb
sub
cld
test
sbb
pop
cli
sarb
mov
sahf
int3
or
cwtl
jns
adc
adc
nop
xchg
or
adc
xor
outsl
sub
mov
lret
add
sub
jb
jmp
mov
shlb
pop
jl
dec
bound
lods
mov
pop
sti
adc
jo
dec
pop
aas
ret
push
test
dec
mov
mov
push
jo
bound
jae
inc
dec
cltd
xchg
fucomip
dec
cmp
lock
frstor
push
jbe
mov
and
ljmp
and
dec
push
scas
add
lds
clc
clc
loope
push
xchg
fdiv
inc
adc
add
stos
cld
aaa
shrl
sbb
cmp
outsl
mov
or
xchg
sub
lods
pop
out
jne
test
test
cli
inc
lcall
cmpsl
mov
mov
cld
dec
fstpl
mov
rclb
pop
rolb
fistps
and
scas
or
mov
sub
lods
pop
hlt
enter
pop
shrb
push
js
xor
movb
jg
push
sub
inc
sub
lret
xchg
clc
adc
and
cld
dec
xor
xchg
popf
sbb
fisubrl
xchg
jmp
sub
pop
hlt
sti
cmp
xor
mov
ficompl
adcb
js
nop
outsb
lods
and
pop
stc
popf
ds
xchg
mov
sti
leave
cmp
das
imul
add
lret
lea
adc
or
sbbl
test
mov
fiadds
cmp
adc
outsl
adc
lret
pop
xor
cmp
adc
insb
sahf
int3
outsl
dec
jb
xor
and
out
in
mov
and
adc
mov
imul
sub
sahf
xchg
push
inc
inc
sbb
mov
fstl
xchg
or
rcr
mov
insb
pop
mov
out
cwtl
xchg
jo
rorb
in
push
aam
xchg
cmpsb
jbe
stos
lret
ss
add
cmpsl
shr
pop
loope
popf
sbb
sbb
test
or
sbb
sub
pop
push
bound
je
dec
mov
add
mov
adc
jmp
or
fadds
jbe
push
sbb
dec
insb
push
and
dec
movsl
lea
lock
xor
xchg
mov
ret
imulb
xchg
mov
ret
mov
mov
shlb
test
cmpxchg
scas
push
test
push
test
aad
sbb
test
cmp
lods
enter
nop
ret
insb
insb
xchg
pushl
enter
sti
ja
adc
inc
and
out
dec
stos
sahf
inc
movsb
pop
das
test
out
inc
lret
cmp
lods
divl
iret
imul
int3
mov
inc
into
mov
iret
xor
dec
adc
push
push
repnz
and
mov
daa
arpl
mov
or
xor
mov
mov
mov
movsl
fldl
outsb
test
sbb
lods
ror
or
jmp
iret
pushf
lods
sub
adc
popa
mov
shlb
into
inc
aam
mov
rorb
fistps
inc
pushf
adc
cmc
mov
jns
mov
jbe
std
cmp
sub
movsb
mov
stos
popf
and
lret
pop
dec
loope
shl
mov
mov
out
or
xor
sbb
gs
test
call
and
clc
js
sahf
daa
pop
ljmp
push
enter
cmp
stc
adc
or
jmp
test
push
jmp
xlat
sub
mov
popa
push
stc
out
push
jno
rorl
cs
push
inc
jp
mov
je
ret
fsubrp
cwtl
mov
cmpsb
push
clc
push
sbb
mov
pop
pop
lret
arpl
xor
pop
leave
outsb
imul
stc
orb
push
js
push
pop
mov
je
cmpsl
mov
mov
lret
lock
mov
pop
fimuls
insb
into
int3
shll
sbb
daa
pop
jne
xor
jecxz
mov
das
pop
xor
pop
aas
int3
push
lret
test
push
jge
sbb
cmp
in
imul
mov
iret
mov
lods
jmp
pop
inc
pop
dec
and
mov
mov
dec
push
xchg
xchg
std
icebp
mov
cmc
adc
dec
fadd
pop
jbe
in
lcall
cmpsl
clc
xchg
std
mov
test
xor
push
in
xchg
xchg
sbb
mov
push
leave
pop
cmp
int3
lret
jns
or
outsb
sub
lods
and
and
add
add
pop
aas
dec
push
daa
mov
std
mov
pop
imulb
mov
lock
mov
and
das
pop
jo
fs
and
int3
lods
popl
stos
jae
add
mov
dec
jle
dec
scas
inc
movsb
test
enter
sub
jne
xchg
icebp
scas
mov
rcll
mov
arpl
jecxz
mov
cmc
cmp
add
push
dec
test
mov
xor
mov
sub
sti
outsb
jno
cmp
rep
je
stos
cwtl
int3
loop
inc
or
pop
and
aam
js
add
mov
lea
pop
mov
push
pusha
or
fbstp
add
push
cwtl
sub
test
and
gs
test
lods
cld
cmc
in
lret
imul
into
sbb
fsubr
jmp
mov
xlat
sub
pop
or
push
and
sbb
aas
sbb
pop
dec
stos
xor
push
push
arpl
pop
or
ja
mov
jg
popf
and
hlt
fstps
push
ficompl
repz
or
xchg
ret
mov
dec
lahf
ljmp
push
mov
or
dec
neg
fldl
or
sub
loopne
lock
cli
insl
test
sub
xchg
imul
lret
xchg
scas
mov
push
push
ljmp
jge
adc
or
test
sbb
ss
sub
divl
cmpsl
push
lods
sti
adc
push
mov
cmp
aad
or
pop
xchg
dec
test
imul
ret
mov
arpl
jne
aas
add
repz
jns
nop
pushf
repz
adc
lods
push
int3
sarb
mov
stos
cmp
adc
insb
jmp
test
sahf
mov
in
lea
and
dec
jbe
test
shrb
jbe
jnp
int3
adc
xchg
rorl
shll
hlt
adc
nop
test
inc
je
mov
jle
lcall
gs
adcb
mov
icebp
ret
mov
push
cmp
lock
test
mov
cmp
es
mov
jge
mov
add
pop
movsl
je
sbb
jnp
fstpl
and
mov
lods
imul
sbb
xor
adc
call
mov
xchg
jo
incb
lods
int3
cltd
fwait
add
lods
push
mov
mov
push
in
or
sbb
daa
inc
cmp
and
cwtl
push
cli
xor
mov
jb
ss
arpl
out
xchg
jb
xchg
pop
push
out
ficompl
or
mull
adc
push
addb
xchg
daa
mull
xchg
xchg
push
cmc
call
movsb
ljmp
jbe
jbe
xchg
stos
les
mov
mov
or
cmp
paddsb
mov
and
adc
jne
dec
or
jl
xbegin
lods
pop
dec
mov
loope
pop
stc
rorb
je
jecxz
fs
add
shl
jmp
and
sbb
aas
adc
dec
enter
adc
cltd
bound
jo
dec
data16
xchg
sub
ja
and
mov
inc
mov
xchg
jmp
shll
subl
aam
mov
add
enter
xchg
xchg
cltd
int3
mov
js
imul
rorb
xor
add
pushf
dec
outsb
jns
pop
lock
mov
lods
mov
dec
in
les
cmp
xor
pop
iret
pop
add
ret
test
push
leave
inc
adc
mov
dec
mov
push
imul
push
loopne
inc
cmp
jno
sub
sbb
adc
ret
ja
rolb
mov
scas
pop
mov
stc
add
and
mov
test
insl
xchg
cltd
test
out
cltd
adc
dec
nop
stc
out
push
lret
mov
arpl
rorl
test
mov
mov
sbb
cld
xor
test
rolb
xchg
lods
add
push
mov
test
push
jns
pushf
int3
jno
jl
call
and
adc
shrl
fmuls
pop
mov
pop
hlt
jno
xor
jmp
stos
xchg
ljmp
rclb
decl
lret
mov
sub
fcoms
mov
jmp
jecxz
in
cmpb
and
cli
imul
leave
dec
repz
xor
dec
xchg
sbb
lret
jae
push
jp
call
lret
out
pop
sahf
test
fs
subl
lods
dec
imul
repnz
hlt
std
and
inc
mov
mov
dec
or
mov
daa
popf
pushf
jae
xchg
or
sbb
jb
mov
lds
jne
pop
dec
xor
push
shll
xor
mov
sbb
sub
cmc
pop
ret
lods
imul
lods
mov
jmp
mov
das
pop
stos
lret
nop
js
je
test
scas
movsb
imul
adc
divb
in
inc
leave
or
out
sub
les
std
rcl
push
hlt
or
sbb
jmp
jg
fnstcw
in
xchg
test
mov
mov
test
sar
mov
push
xchg
cmc
shrl
ret
les
je
in
and
lret
push
pop
movsb
cld
and
xor
stos
dec
pand
in
int3
mov
inc
push
mov
ljmp
loope
into
mov
mov
or
mov
pop
mov
mov
mov
mov
fidivs
into
pop
ja
mov
sub
les
imul
arpl
mov
pop
mov
aas
adc
sbb
inc
lea
ds
cmpsl
xchg
xchg
mov
call
int3
jbe
adc
xor
sbb
cmp
icebp
lcall
push
sub
xchg
fs
lahf
imul
jo
or
jno
mov
popf
js
and
imul
scas
es
sbb
push
xchg
rolb
repz
xor
cmp
mov
movsb
and
mov
sbb
inc
outsl
push
cmp
ficoms
inc
test
stos
insl
cmp
insb
mov
xor
sbb
or
dec
sub
fcmove
xchg
xchg
inc
lret
ss
jmp
gs
stos
pushf
pusha
cmp
test
and
adc
int3
and
add
and
fsubrl
pushf
loopne
je
shlb
leave
cmp
idivl
int3
repz
ss
adc
push
cltd
out
dec
xchg
push
cmp
iret
add
xor
repz
sub
pop
push
out
fsub
push
xchg
loopne
sub
stc
adc
jb
in
clc
cmc
or
xchg
fs
lds
xchg
adcb
popf
fwait
lods
cwtl
add
insb
arpl
mov
imul
push
dec
std
adc
shl
push
in
lahf
int3
scas
or
mov
loop
popa
fcmovbe
inc
and
xchg
mov
push
in
fdivrs
mov
mov
ret
mov
mov
in
popf
sub
sub
mov
mov
push
test
ret
jp
mov
movsl
adc
jae
xor
cli
int3
push
dec
xor
sbb
call
into
mov
in
mov
dec
idiv
pusha
mov
and
or
mov
icebp
and
outsl
das
shrl
test
stos
test
rorl
popf
pop
mov
leave
inc
xchg
mov
mov
or
fdivp
cmc
ja
ds
icebp
fs
and
sahf
pop
repnz
js
jl
xlat
int
dec
lcall
pop
lret
push
xor
addr16
add
lods
mov
daa
js
and
imul
sub
in
lea
pop
mov
xor
and
sub
cmc
nop
dec
mov
data16
mov
push
mov
add
cli
lds
dec
aad
cs
popa
jo
dec
insb
andb
mov
mov
outsl
data16
pop
imulb
movsb
cmp
push
sub
pusha
add
adc
or
pop
mov
mov
iret
push
sub
inc
xchg
pushl
sbb
sarb
arpl
push
jmp
pop
xor
xchg
mov
stos
arpl
js
scas
sbb
cli
insb
mov
dec
xor
and
das
cmp
or
push
dec
push
sub
push
push
and
leave
mov
jne
loop
enter
cmp
jb
repz
addr16
sbb
popa
in
pop
dec
data16
mov
mull
and
adc
sub
pop
push
inc
negl
mov
rol
cmpsl
mov
popa
and
sbb
test
push
inc
lock
incb
movsl
sub
int3
test
inc
xchg
sub
ret
pop
and
push
inc
add
out
sbb
mov
lcall
dec
mov
ficoml
dec
es
not
xchg
fs
sub
or
outsb
pop
mov
cmp
mov
adc
popf
lret
shl
repz
lea
orl
or
sbb
mov
popa
mov
cmpsl
push
aam
sbb
test
push
dec
push
or
mov
xor
mov
push
shlb
pop
pop
mov
pushf
pop
aam
decl
push
cwtl
pushf
ret
push
stos
push
dec
hlt
bound
roll
cmp
mov
imulw
js
aad
inc
ret
jp
leave
clc
aam
lret
sub
neg
fildll
push
jle
imul
clc
xor
loop
pop
lcall
jmp
mov
test
dec
lds
sub
push
mov
ds
sbb
adc
mov
vprotd
mov
xor
icebp
insl
aam
sahf
stc
bound
and
mov
fsubl
cs
or
cld
out
aaa
insl
jmp
into
test
call
pusha
nop
bound
shll
xor
or
orb
rcr
aad
sahf
pop
push
ljmp
ror
test
ret
and
das
push
lret
movsb
or
mov
repnz
mov
lret
cmp
aam
sbb
pop
or
and
int3
and
sub
in
or
push
repnz
rcrl
dec
ret
add
xchg
jecxz
loop
pop
or
pop
pushf
xor
je
add
inc
mov
sbb
dec
mov
push
stc
data16
repz
cmp
push
insb
stos
sub
adc
insb
mov
subl
mov
push
dec
cmp
and
jge
cld
aaa
mov
push
mov
aas
movsb
cmp
call
lds
in
in
inc
sub
jno
test
ds
insl
ret
repnz
ljmp
push
cli
dec
lock
sahf
int3
loop
xor
loope
subb
xchg
push
int3
out
int
mov
test
mov
dec
cli
sbb
cmp
push
sub
call
mov
lret
cmp
fsubrs
fistps
sbb
mov
push
aaa
pop
repz
repz
push
sahf
ffreep
and
push
and
jb
sbb
pop
add
ds
pushf
add
mov
and
repnz
add
stos
jbe
dec
xor
leave
xor
rolb
stos
pop
aaa
int3
daa
mov
stc
push
cltd
fwait
aad
inc
and
int3
faddl
xchg
cmp
mov
out
xchg
xor
adc
aas
add
bound
enter
popf
mov
pushf
mov
jb
popf
push
cmp
int3
pop
push
adc
outsb
rcrb
mov
lahf
add
fs
adc
jp
aas
push
pushf
mov
jge
nop
hlt
sub
negl
sub
andl
pop
push
stos
movsb
pop
mov
jmp
sub
lods
and
dec
push
or
jns
test
or
add
jecxz
push
je
dec
sub
pop
call
arpl
add
aaa
into
mov
dec
mov
les
jmp
dec
dec
int3
or
lods
sbb
jnp
add
add
call
test
xor
jae
mov
xor
arpl
leave
hlt
leave
das
inc
sub
mov
and
dec
pop
imull
test
lea
cli
fcomip
pop
movsl
push
repz
mov
add
jns
dec
sahf
inc
shlb
xchg
sarl
xor
int3
xchg
sub
xor
mov
mov
andb
inc
jg
hlt
sub
rorl
inc
aaa
mov
xchg
xor
jno
and
inc
fcompl
push
hlt
mov
les
pop
in
cmp
push
mov
call
lods
leave
dec
xor
outsb
rorb
mov
pop
mov
xchg
and
dec
clc
test
inc
scas
adc
into
jbe
mov
sbb
lret
ds
mov
push
repnz
data16
sub
mov
mov
pusha
xor
mov
sahf
and
mov
sub
orl
inc
ss
xchg
inc
push
out
push
lock
es
jb
inc
adc
jge
popl
insb
imul
mov
aam
push
cmpl
xor
insb
cmp
adc
call
add
je
mov
cmc
sub
test
mov
mov
mov
mov
insl
daa
repnz
je
hlt
mov
shrb
and
dec
mov
aam
xchg
mov
push
lock
mov
sub
mov
xor
negl
scas
rol
mov
mov
and
pushf
jae
aaa
scas
xchg
sbb
pop
je
sub
ljmp
pop
or
mov
cs
cmp
xor
mov
gs
xchg
sbb
xorl
in
mov
sbb
pusha
mov
loopne
xor
xor
out
push
insl
adc
mov
mov
ficoml
int
idivl
mov
push
mov
in
int3
es
pushf
xchg
dec
into
gs
xchg
mov
subb
mov
cmpsl
sbb
fdivp
aas
repz
scas
mov
shrl
mov
aad
insb
jbe
cmc
pop
cmp
mov
test
stos
jge
inc
mov
pushl
cmc
and
popf
je
mov
popa
std
push
in
xor
cmp
insl
xor
xor
std
call
jp
sub
pop
lods
sbb
add
or
mov
mov
mov
dec
ss
leave
pop
or
mov
daa
andb
xchg
repnz
mov
ljmp
mov
js
xchg
inc
sub
movsl
inc
andb
hlt
out
mov
mov
out
xchg
add
ljmp
mov
pop
repnz
cmc
loopne
jae
sub
xor
mov
add
add
push
out
sub
shlb
dec
cmpsb
out
ja
les
jne
inc
adc
sub
inc
xor
and
cwtl
push
mov
cmp
gs
jbe
jo
into
adc
popf
in
mov
ret
mov
jne
push
sbb
mov
sub
jmp
pop
adc
adcb
test
pop
mov
and
dec
test
jo
flds
mov
adc
mov
outsl
add
fadd
mov
inc
xor
lea
scas
lods
jle
insb
lods
inc
test
push
ds
dec
fsubr
pop
mov
call
ret
repz
inc
pop
fnsave
mov
mov
add
shrl
mov
aam
mov
pop
add
pusha
push
xchg
mov
mov
insl
cmp
sbb
mov
or
mov
pop
out
dec
loopne
test
nop
fcomps
lods
repz
push
add
call
mov
xchg
out
xchg
fsubrl
lcall
xchg
mov
mov
jnp
xlat
pop
cli
mov
inc
sbb
cmc
xchg
sub
mov
jecxz
dec
and
pop
mov
mov
xor
aaa
aaa
jp
std
fmuls
push
stc
xchg
dec
ljmp
adc
shrb
loopne
hlt
inc
lahf
add
imul
cmp
jns
ds
xor
sbbl
scas
stos
dec
cmp
scas
push
cmc
in
mov
inc
mov
lds
add
pop
sub
jmp
mov
pop
scas
inc
mov
inc
jns
adc
std
inc
xor
inc
ffreep
mov
in
xor
push
adc
sahf
push
mulb
movb
xchg
adcb
pmulhuw
cwtl
dec
aad
add
push
jnp
xlat
xor
xor
shll
pop
in
xorl
out
jmp
or
dec
mov
inc
xor
jl
or
cmpsl
mov
dec
out
mov
mov
push
pop
fadd
adc
or
fnstenv
ffree
das
push
push
mov
movsb
xchg
imul
jge
mov
scas
ja
add
lods
xor
sbb
idiv
mov
jns
loope
std
insl
je
or
add
adc
push
clc
rcrb
popf
mov
add
jne
jnp
mov
dec
nop
jp
xlat
bound
mov
fnstsw
and
rol
pop
adc
pop
jne
jmp
mov
aas
pop
push
mov
scas
mov
insl
cmp
pop
xor
and
jbe
mov
push
cmp
mov
das
pop
pop
jmp
test
sub
movsl
fwait
pop
gs
xor
nop
xchg
push
ret
xchg
je
or
dec
fxch
shlb
mov
pop
dec
lock
push
adc
gs
mov
pop
sbb
add
cmp
std
inc
int
xchg
out
divl
mov
sbb
mov
addb
xchg
and
loopne
out
leave
cmp
mov
lea
mov
ret
rcrb
popf
cltd
inc
lods
repnz
jecxz
dec
in
cmpsl
add
mov
mov
sbbl
xor
movsl
mov
test
lret
in
mov
add
es
inc
cli
add
loop
jo
mov
ret
push
xor
xor
mov
or
or
cwtl
push
xchg
adc
je
mov
dec
arpl
inc
mov
jle
mov
cld
adc
bound
icebp
inc
mov
in
xrelease
cmpsl
xor
mov
cmc
jns
fs
push
and
jne
xchg
es
mov
fidivl
jge
stc
xor
jle
xchg
pop
hlt
inc
inc
or
pop
cli
mov
xchg
hlt
mov
jbe
mov
fdivr
in
xchg
cmp
mov
in
mov
adc
ds
jecxz
les
rcrl
mov
xor
jne
jge
mov
rolb
shll
addr16
and
push
stos
js
dec
xor
cwtl
push
orl
jne
inc
jecxz
pop
stos
mov
cli
scas
xor
or
repz
inc
dec
es
sub
push
ret
adc
mov
inc
inc
fstpt
call
cmpsb
sub
mov
data16
xor
leave
int3
sahf
in
int
das
testl
mov
test
mov
mov
mov
add
push
sub
sahf
enter
je
cmp
hlt
pop
lds
mov
cmp
repnz
inc
mov
sahf
mov
and
int3
in
das
lods
jns
push
cmp
mov
cli
mov
cmpsl
jnp
mov
cmpb
pop
push
adc
mov
int
loope
sbb
jmp
pop
push
jns
dec
mov
cmp
nop
dec
xchg
incl
insl
push
lea
ret
fidivrl
mov
imul
cmp
and
std
push
dec
test
imul
lret
movsl
sub
cli
jno
sahf
xchg
and
sub
dec
pop
mov
xchg
xor
add
loop
cld
ret
movsb
shrl
mov
mov
dec
icebp
lret
lea
sbb
sbbb
lods
test
sub
fcomp
in
xchg
in
pop
dec
mov
mov
pop
lods
lock
lret
add
or
enter
add
pop
int3
out
pop
adc
mov
dec
out
imul
jae
in
mov
loope
rorb
jg
or
mov
adc
movsb
inc
aam
cmp
lcall
sub
cmpsb
push
daa
add
je
pop
int3
mov
dec
mov
fs
inc
repnz
insl
lods
xchg
dec
ror
push
add
leave
adc
test
cli
mov
cmc
sub
mov
push
aad
mov
flds
mov
push
pop
fucomp
or
adc
aaa
imul
mov
into
xor
movsl
mov
sbb
xchg
cs
not
mov
pushf
lret
and
imul
testb
int3
push
and
in
inc
out
rclb
mov
movsl
stc
or
mov
lret
xchg
push
xor
mov
mov
mov
cli
sahf
or
xchg
movsb
jbe
and
lea
insb
out
lds
das
rorl
cmpb
push
cmc
js
int3
jg
pop
mov
mov
stos
filds
xor
add
imul
dec
pusha
lock
mov
and
pop
xor
push
out
jne
mov
dec
adc
adc
into
je
daa
xor
mov
cmp
mov
lods
clc
xor
push
in
adc
sbb
imul
js
aad
ss
test
das
sub
cli
arpl
xor
sti
inc
pop
lock
int3
imul
add
je
daa
imul
push
je
in
push
into
sbb
adc
mov
mov
mov
ss
test
faddl
adc
mov
mov
lock
jae
rcl
jnp
mov
jns
push
mov
pop
in
movsl
sbb
or
lods
sbb
test
lret
lahf
push
es
sbb
imul
jbe
jae
mov
push
and
fsubrs
int3
pop
xlat
jl
shll
push
mov
mov
cmpsl
cmp
dec
in
aaa
pop
and
fisubrl
mov
mov
pusha
jns
test
popf
push
nop
cli
lods
imulb
cmp
sub
pop
stos
push
sar
shrl
sub
mov
mov
mov
mov
pop
jne
mov
testb
jecxz
cld
sub
filds
pop
repnz
cmp
fidivrs
shrb
push
mov
jns
mov
pop
cmovp
mov
mov
xchg
push
sbb
dec
nop
push
xchg
sub
ret
ret
cmc
or
push
hlt
pop
cld
mov
lcall
add
xor
jl
xor
push
dec
xor
mov
pusha
xor
ficoml
sub
ds
lods
lret
add
addr16
pop
mov
mov
jnp
aaa
mov
dec
mov
daa
je
adc
es
pushf
mov
out
nop
in
push
sub
mov
pusha
cli
push
stos
cmp
mov
adcb
fs
jae
movsb
xlat
xlat
sub
jns
stc
xor
je
in
stos
dec
scas
sahf
in
adc
addb
cmpsb
sub
push
rcl
pop
movsb
mov
push
std
pop
mov
imul
es
daa
dec
xchg
push
jecxz
sub
cmp
mov
fwait
js
inc
ret
cmc
adc
mov
xor
mov
sub
sbb
mov
ja
inc
fsubrp
data16
ds
dec
sub
xchg
pop
and
test
lret
lds
xor
bound
lret
aad
test
ret
and
cmp
das
mov
out
inc
insb
mov
movsb
sub
and
xchg
into
and
cmp
push
ds
push
pop
push
jae
push
andl
mov
fdivrs
movsb
and
stos
pusha
int3
cltd
xchg
push
and
je
lret
push
mov
int3
leave
adc
test
imul
mov
sub
sbb
sub
ja
sahf
cwtl
or
adc
fwait
pusha
mov
xchg
test
cmpb
pop
sbb
jmp
mov
cli
sti
jle
in
xchg
pandn
sub
jg
out
add
push
push
int3
push
popa
add
clc
cmpsl
or
popf
xlat
std
cmp
jne
and
or
jbe
cmp
xchg
sub
popf
test
fldl
sarb
nop
xchg
pop
sti
push
in
cmp
xchg
push
stc
mov
jl
push
in
daa
test
mov
imul
lret
lahf
cmpsb
cld
dec
and
cld
scas
push
test
repnz
cli
adc
xor
je
push
clc
xchg
xchg
push
ror
pop
mov
push
jae
push
int3
out
js
dec
push
scas
sub
fs
fcoml
jle
mov
mov
inc
cltd
cmpsb
add
mov
xchg
stos
pop
bound
lret
lea
setl
fcmovu
xchg
das
fidivl
pop
js
jmp
add
fbstp
adcb
jecxz
js
jns
je
lods
gs
je
iret
push
mov
js
pop
pop
dec
dec
xchg
cmp
push
repnz
mov
ss
push
les
mov
mov
jb
sarb
sets
lock
pop
jl
sub
lret
push
mov
out
int3
lss
sub
dec
rcll
inc
cmp
movsl
in
pop
xor
sub
xchg
fidivl
sub
adc
cmp
cli
pop
ficoms
mov
adc
test
mov
int3
xor
rcrl
dec
and
cmp
mov
leave
cli
jge
sarl
insb
pushf
pushf
in
leave
mov
and
sbb
imul
shll
push
xchg
ror
push
mov
imul
and
cmp
lock
lods
lret
inc
bound
pushaw
cmc
fdivrl
test
ret
sub
nop
les
notl
cmpsl
jmp
test
dec
aas
and
mov
mov
test
lods
pushf
in
movsb
and
pop
pop
int3
push
mov
mov
jmp
popa
and
rolb
lods
mov
adc
subb
les
push
mov
adc
fisttpll
in
jmp
cmp
and
mov
stos
or
sub
rolb
cltd
mov
xorl
jns
loope
movsl
jne
shld
inc
loop
icebp
adc
shlb
push
fldl
jo
xchg
test
cmc
push
cmc
repz
ja
lret
mov
lea
lret
fadds
fcmovnbe
pushf
imul
xor
sub
ss
add
ss
shl
cmc
gs
and
mov
dec
push
push
mov
rcrb
sti
f2xm1
pop
fcoms
inc
rolb
insb
or
push
ljmp
mov
pop
int3
ljmp
xchg
add
imul
pusha
das
xchg
mov
jp
mov
bound
adc
aad
pop
add
inc
xchg
sti
mov
aam
call
std
fcoms
sub
jno
enter
data16
inc
popf
popa
push
leave
inc
mov
cld
aam
enter
icebp
sbb
sub
mov
push
mov
add
mov
xchg
cltd
ret
mov
ja
lods
int3
cmp
jg
pop
jl
push
stos
lock
nop
inc
icebp
jecxz
imul
dec
stos
jle
repz
arpl
aam
adc
xchg
cli
jnp
pop
push
shr
test
mov
dec
lods
pop
popa
fildl
xchg
data16
lea
lock
adc
and
pop
jge
imul
lods
lock
jno
fcoml
daa
sbb
int
rcr
and
dec
jle
ljmp
sbb
scas
xlat
push
and
add
data16
mov
sub
bound
pop
insb
sahf
sbb
repnz
push
jecxz
in
in
inc
mov
inc
jno
sub
mov
ret
mov
mov
mov
in
sub
adc
leave
or
sub
mov
in
jmp
push
movsb
mov
mov
push
adc
xchg
int3
cmp
mov
or
outsb
jp
mov
mov
pop
xchg
shlb
pop
add
ficomps
push
out
dec
shrb
sub
add
je
das
mov
pushf
test
movsl
xchg
mov
and
pop
jl
inc
cmp
nop
jp
shrb
test
test
sub
dec
xor
into
sarb
dec
cmp
lcall
into
lret
inc
cmp
inc
inc
mov
jg
test
xor
xor
push
jb
push
mov
int3
mov
pop
cmpl
pusha
dec
ret
push
pop
cmc
je
dec
push
inc
sbb
push
xor
fstpt
xchg
popf
lretw
pop
stos
ss
dec
and
xchg
aam
dec
sub
jne
sbb
out
data16
or
aas
add
ljmp
insb
dec
inc
xchg
repz
cmpb
mov
andl
fdivrl
arpl
sbb
jb
cmpsb
repz
cmp
mov
lea
xchg
fsubrs
push
jo
xchg
xchg
out
mov
push
arpl
aas
outsb
xor
push
push
mov
shrl
insl
lds
push
test
std
je
bound
icebp
sti
imul
fldcw
ja
mov
pop
mov
jno
push
mov
aaa
enter
dec
jb
cltd
cmp
flds
pop
mov
sti
iret
mov
adc
cli
pusha
mov
push
sbb
and
fs
adc
sub
in
pop
fstpl
test
sbb
test
std
es
jg
mov
sbb
testb
int3
inc
sbb
jg
push
xor
test
inc
sbb
pop
insb
fmul
test
cmpsl
mov
jae
andps
mov
int3
test
or
and
lret
xchg
outsb
pop
jo
test
adc
pop
lret
ret
xchg
cmp
or
js
or
cli
icebp
clc
ret
jb
pusha
inc
adcb
andb
aas
pop
cwtl
das
lret
jp
shrd
xchg
test
jno
or
insb
sub
mov
push
mov
xor
in
iret
inc
cmpsb
dec
cmc
test
in
xorb
stc
iret
stos
push
jp
push
sub
mov
nop
cmc
pushf
mov
xor
or
int3
test
sub
or
je
in
push
cmp
dec
xchg
fstpt
and
pop
xchg
and
lds
mov
stos
addr16
cmp
push
cmpsb
out
inc
mov
lret
sub
pop
push
jo
push
xchg
sarl
push
mov
lea
push
dec
mov
mov
sub
push
jmp
imul
popf
sub
inc
xor
rclw
push
dec
sub
adc
pop
fidivs
enter
pop
aaa
aas
mov
xchg
jb
pop
imul
int3
or
jg
mov
mov
cmp
pop
cmp
lock
inc
inc
lret
call
in
scas
test
daa
les
push
cmp
ljmp
push
cmc
sub
mov
scas
jecxz
fiadds
fs
adc
ret
and
and
push
mov
popf
dec
xor
cmp
pop
in
outsb
sub
mov
mov
pop
and
mov
add
add
data16
inc
adc
cmp
and
js
adc
sub
aaa
je
nop
sbb
lret
outsb
mov
pop
pop
loopne
addb
daa
test
pop
pop
xlat
and
inc
xor
mov
ds
cltd
pop
test
mov
mov
mov
call
mov
xorb
testb
mov
imul
ds
ss
sub
notb
sub
stos
fld
push
push
jns
jns
sub
std
into
dec
adc
mov
add
mov
popf
inc
sbb
xlat
arpl
pop
fimull
inc
dec
scas
mov
push
and
stos
popa
stos
aad
orl
add
mov
lea
movsb
jnp
mov
daa
fldcw
lret
mov
out
mov
lock
and
mov
and
insb
jg
pop
push
in
adc
adc
add
pop
adc
lret
aaa
imul
cmp
or
cmc
mov
test
cli
dec
cmc
inc
sub
dec
mov
push
push
je
scas
pop
repz
mov
and
jp
addr16
mov
js
pop
mov
cld
adc
push
mov
sub
ds
or
cmp
hlt
jbe
imul
xchg
cmp
test
mov
pmaxub
pushf
fmull
pushf
stos
xchg
dec
mov
in
xlat
cmp
mov
add
scas
mov
enter
inc
pop
test
movl
push
addr16
jg
push
mov
mov
mov
sti
dec
sub
pushf
inc
sub
fdiv
xor
pop
cli
lods
inc
dec
movsb
sbb
pop
loop
xlat
lret
lods
fstpl
pop
arpl
xchg
lret
push
arpl
jns
mov
mov
jmp
mov
fs
and
mov
or
pop
insl
xchg
jno
dec
jmp
cmc
mov
test
sbb
mov
sbb
push
ss
xchg
lods
add
mov
or
imul
sub
cmp
push
or
jno
cmp
aad
inc
repz
ljmp
int
fmulp
imul
pushf
pop
cli
push
dec
stc
js
stos
xor
aaa
pusha
pop
repz
mov
lcall
mov
out
sbb
jo
push
pop
fldcw
xchg
outsb
dec
lret
mov
hlt
sbb
pop
stos
in
out
pop
pop
call
xchg
imul
dec
mov
leave
sub
and
mov
adc
mov
pop
imul
lret
and
ljmp
lea
lock
fistl
shlb
cmp
movsl
and
cmp
dec
ret
xchg
or
xchg
add
call
sti
fldl
into
jmp
daa
repnz
stos
int3
test
pusha
rol
lods
push
pop
loope
push
int
inc
sub
mov
popf
add
mov
add
repnz
cmp
js
jne
and
sbb
cmpsb
sbb
aad
fdivrl
add
add
jnp
xchg
mov
nop
xor
mov
lahf
dec
mov
push
dec
xor
fsubp
push
jnp
repz
mov
daa
shrb
inc
subl
nop
int
cs
pushf
adc
aam
leave
stos
call
jecxz
clc
insb
jnp
push
ljmp
xchg
sbb
mov
mov
xor
pusha
lds
cltd
movsl
and
fs
pop
int3
stos
stc
mov
push
loope
adcb
xchg
fdivr
jle
jb
sbb
sbb
cmp
int3
ss
inc
into
jae
xor
fstl
out
xchg
cmp
pop
mov
mov
pushf
fs
lret
inc
pop
sti
test
mov
dec
sub
subb
test
nop
xchg
int3
test
xchg
mov
or
mov
pop
int3
and
std
sbb
dec
insb
ds
sahf
dec
sbb
and
popf
mov
add
retw
arpl
les
jp
jne
adc
aam
fdivr
jae
pusha
xorb
lds
add
jns
sbb
lock
sti
mov
push
jecxz
mov
push
cli
repz
or
fidivrs
inc
fimull
icebp
dec
cmp
in
je
pop
dec
cmp
push
leave
pop
das
stc
fbstp
mov
mov
cwtl
jno
ret
lret
xor
popa
jmp
xlat
cmp
push
sbb
mov
lret
jl
idivl
decb
bound
js
mov
out
stos
xlat
xor
and
jne
push
cltd
add
loopne
xor
stos
mov
or
xchg
sub
test
clc
sub
mov
dec
shlb
ds
test
pop
in
dec
mov
inc
or
sub
test
mov
iret
fstpt
bound
and
mov
push
int3
mov
push
test
or
mov
push
fbld
scas
test
lret
popf
sti
andb
inc
enter
int3
mov
pusha
jo
jae
adc
scas
cwtl
data16
dec
mov
inc
adc
mov
dec
sub
adc
cwtl
out
sub
mov
data16
pop
mov
lret
mov
in
movsl
int3
jge
lcall
hlt
mov
sub
lds
lret
addb
outsb
bound
cwtl
sub
push
mov
cld
daa
push
inc
mov
mov
push
cli
stos
jg
fisttps
leave
ds
dec
xchg
xchg
mov
push
xchg
sub
jmp
sar
push
jl
jae
xchg
and
xor
les
movsl
push
and
icebp
push
xchg
lea
fwait
mov
fisttps
sahf
out
mov
jnp
push
or
int
sbb
pusha
jo
je
in
mov
imul
mov
ja
pop
mov
and
mov
lretw
repz
stos
imul
dec
sti
pop
jecxz
jb
movsl
loop
sahf
pop
sub
unpckhps
icebp
popa
push
ljmp
and
jmp
add
std
pop
mov
fmuls
lret
adc
push
or
sub
test
sbb
dec
ljmpw
movsb
sbb
mov
push
cld
jmp
and
jne
add
pop
mov
enter
lock
mov
pop
shlb
int3
and
sbb
mov
xchg
cli
int3
jecxz
cli
and
pop
pop
lock
add
and
mov
les
mov
lret
xor
loop
cmc
xlat
cmp
adc
pop
test
jo
rorl
xor
mov
dec
cltd
psadbw
lds
test
scas
sbb
xchg
jo
ss
pop
repnz
push
cmp
negb
ljmp
inc
lods
push
cmpsl
stos
xchg
test
mov
js
popa
nop
mov
xor
and
out
mov
pop
js
mov
cltd
mov
stc
test
test
sbb
lea
scas
sub
xchg
lds
xchg
gs
pop
imul
mov
sbbl
xchg
aaa
movsb
iret
mov
jecxz
sbb
or
fidivrs
push
lahf
push
sub
lods
mov
sti
idivb
mov
adc
mov
lret
test
leave
xchg
aad
jle
jge
and
aas
aas
sub
xchg
test
mov
xor
mov
pop
xlat
mov
mov
mov
dec
xchg
in
iret
fisubl
stos
lock
xor
lods
jb
mov
adc
and
jecxz
in
test
mov
outsl
xchg
mov
daa
into
aas
dec
cltd
push
xchg
jge
aaa
inc
pop
nop
cli
aam
add
and
mov
xor
or
in
aam
jo
inc
cltd
mov
lcall
xor
jmp
rcrb
inc
jns
dec
lret
push
or
inc
jns
iret
ja
xchg
and
sbb
add
mov
pop
adc
pop
aad
dec
jg
sub
mov
sbb
mov
fstl
rcl
aas
fbstp
xor
lods
push
dec
add
stos
mov
loope
xchg
mov
dec
mov
add
push
test
pushf
and
and
pop
roll
lds
add
out
lret
aam
lcall
mov
push
pop
in
imulb
adc
jo
lea
mov
fcomp
inc
das
lret
jg
and
imul
sub
cld
imul
jae
mov
push
or
movsb
int3
adc
scas
or
loop
pop
add
pusha
xchg
xor
daa
mov
jbe
arpl
insb
fucompp
in
and
xchg
xchg
scas
icebp
testb
xor
push
movsl
sbb
pop
sub
cs
mov
pop
add
movsl
or
mov
fsubl
loopne
adc
push
cmp
or
lds
and
jae
adc
xor
pop
icebp
es
incb
cmp
imul
jnp
lret
pop
aaa
pop
dec
loopne
in
loop
pop
push
or
das
pop
enter
push
test
mov
les
push
mov
push
imull
mov
shl
adc
mov
repnz
loope
pop
xchg
xchg
daa
cmp
xchg
mov
xlat
cwtl
and
xor
rcll
rorb
movb
inc
leave
in
enter
imul
add
ss
adcb
sub
dec
inc
imul
mov
int3
loop
lds
xchg
iret
test
pop
loope
xchg
cmpl
and
dec
hlt
mov
arpl
arpl
mov
movsb
pop
mov
cmp
test
mov
pop
clc
pop
mov
mov
pop
popf
or
insb
shl
sub
sti
push
pop
cmpsl
repz
test
xor
push
insb
cmp
or
int3
or
cmp
pop
jg
ss
movsb
mov
insb
jle
and
lret
xchg
mov
scas
loope
rol
test
and
push
sub
negl
lret
mov
dec
stos
sbb
add
lret
cmc
jo
and
mov
cmp
ja
in
sbb
movsb
lds
js
out
and
decl
xchg
dec
lock
dec
fucomi
jecxz
mov
ljmp
popf
mov
add
and
clc
adc
mov
pushf
lret
ljmp
and
mov
hlt
loop
push
aad
dec
into
push
jp
out
je
push
jecxz
and
mov
cmpb
mov
imul
xchg
sbb
add
mov
out
loopne
pop
icebp
je
repz
add
sub
punpcklbw
xor
int3
jne
nop
mov
aad
nop
lret
outsl
ret
cmc
sub
lret
sbb
ret
pop
pushf
loope
daa
mov
fiaddl
imul
mov
ljmp
adc
dec
push
aam
jb
xchg
add
sub
push
fiadds
ret
inc
stos
mov
hlt
and
test
lock
inc
xor
add
int3
jo
push
adc
xchg
stos
lea
mov
fwait
in
sarb
cmp
xor
sub
xchg
int3
sub
push
ret
nop
dec
mov
or
gs
sub
jno
xor
sbb
scas
bound
bound
cmc
ja
lret
jl
pop
fs
pop
notl
ret
arpl
cmpsb
adc
xor
adc
xchg
push
pop
xor
xchg
push
daa
xor
xor
pushf
sub
insb
idivb
cmpsl
subl
adc
or
aaa
xor
std
stos
sub
icebp
xor
repz
sbb
mov
pop
out
xchg
stc
addl
dec
movsb
xor
fldenv
push
rep
lret
ds
cmp
cmc
loopne
das
mov
mov
dec
cmpsb
add
lock
and
sub
jp
push
cmp
inc
imul
stos
lret
cmpsb
js
cmp
mov
testb
dec
js
jnp
shrb
pop
mov
xchg
leave
xchg
aas
and
cld
or
repnz
cmp
daa
pop
xor
cli
adc
mov
jp
sub
je
daa
or
mov
aam
sub
lock
sbb
in
push
mov
mov
sahf
shrl
pop
jo
iret
hlt
mov
lods
mov
mov
int3
pop
push
fisubs
jne
inc
ljmp
cmc
out
dec
sbb
bound
and
jo
push
mov
push
call
imul
ret
xor
jl
cmp
insb
sarb
mov
and
cmp
movsb
xchg
push
lea
mov
popa
rcll
pop
in
sbb
jb
data16
fistl
stos
and
jge
xor
jae
leave
dec
jno
fs
xchg
arpl
push
sti
iret
popl
and
dec
or
mov
sahf
incl
ret
mov
hlt
loop
imul
adc
lcall
shrl
negl
test
mov
je
mov
sbb
dec
stos
xchg
mulb
push
mov
pop
inc
adc
jb
pop
add
mov
lds
xor
adc
fstpl
cmp
dec
clc
mov
jge
test
cmp
out
daa
sbb
mov
xor
inc
sub
pop
dec
outsb
neg
inc
arpl
aas
and
pop
dec
mov
inc
fdivp
sub
flds
fs
adc
lea
cmc
movsb
xchg
sub
push
imul
or
iret
shlb
fdivr
leave
loopne
xor
ret
aad
hlt
xor
inc
scas
inc
lret
xor
sar
clc
jae
push
pop
push
ss
jb
dec
mov
mov
jecxz
sbb
int3
mov
in
mov
push
stos
sbb
pop
jp
pop
pop
sbb
jb
add
cli
xor
lea
cmp
sahf
popa
rcrb
stos
mov
inc
aas
outsl
mov
sbb
inc
cli
jno
rclb
xor
push
inc
lcall
cltd
dec
out
jecxz
fmull
arpl
jge
xchg
jo
out
xchg
add
xchg
scas
lret
addr16
xor
cltd
fldt
adc
testl
pushf
xor
and
pushf
repnz
enter
lods
scas
int3
inc
add
andl
jbe
jo
inc
test
and
dec
and
sbb
imul
or
jae
std
pop
xchg
mov
mov
aaa
or
mov
je
mov
jnp
pushf
mov
push
std
out
jmp
fstl
sbb
ljmp
lret
lock
mov
mov
sbb
dec
enter
fisttpl
fcmovu
in
pushf
pop
clc
sbb
jae
xchg
push
and
mov
dec
xchg
lret
mov
int3
and
or
jae
lods
jle
push
aas
push
pop
icebp
mul
jmp
test
mov
popf
dec
pop
mov
mov
inc
subb
bound
sahf
lret
or
mov
dec
pop
jle
sbb
lret
mov
into
adc
mov
fidivl
lret
ret
sar
daa
pop
movsl
xor
lock
stos
test
fistl
jb
in
sahf
mov
sbb
mov
mov
movsb
sub
jns
xchg
lret
xlat
xor
mov
dec
mov
push
sub
sub
jno
sbb
aaa
jmp
pop
loopne
xchg
test
enter
negb
aaa
mov
pop
mov
or
xchg
ret
test
sub
mov
xlat
outsb
inc
mov
push
pop
xor
loopne
sub
es
sub
and
out
jne
cwtl
pop
dec
adc
mov
decl
fsubrs
or
jl
fs
shlb
dec
mov
lret
sahf
cmp
xchg
mov
sbb
hlt
inc
mov
push
or
cmc
mov
lahf
and
stos
bound
push
mov
out
xchg
jnp
js
enter
stc
pop
add
xchg
or
inc
shlb
or
fs
roll
mul
sub
test
xor
out
notl
gs
leave
push
mov
add
pop
ss
lret
in
aas
int3
push
pop
push
mov
push
xchg
incb
idivb
mov
pop
sub
lret
pop
jmp
push
repz
and
jl
jle
scas
push
mov
adc
ds
push
and
rorb
aad
mov
in
xlat
lcall
fnstenv
push
stc
jecxz
loop
lods
fsubr
jp
xchg
mov
mulb
icebp
xlat
pop
dec
iret
stc
ret
adc
fwait
int3
push
lcall
adc
mov
xor
clc
cmc
enter
stos
repz
je
imul
adcl
inc
clc
rclb
loopne
divl
push
dec
mov
pusha
jno
mov
pop
shrl
pop
cld
dec
cwtl
jecxz
and
cmp
fisubs
jl
lea
aas
xchg
pop
xchg
daa
aam
xchg
mov
aam
mov
xchg
push
xchg
xchg
les
andb
hlt
insb
mov
std
add
xor
out
cmpsb
les
mov
mov
js
out
sub
xchg
push
in
out
popa
idiv
jl
sbb
rcr
mov
xchg
les
in
mov
or
and
out
les
mov
pop
mov
aaa
cmp
stos
stc
push
stos
adc
and
or
test
sbb
arpl
and
xchg
pop
sub
or
lret
sbb
movsb
loop
notl
xor
jmp
pop
mov
inc
jb
bound
rcl
lret
mov
xor
cmp
mov
dec
and
test
jp
popf
int
sub
lret
data16
clc
imul
ret
dec
and
ret
pop
jae
cmp
iret
mov
cmpsb
rcll
pop
pop
pop
and
insb
lock
jae
ret
call
cmc
aad
je
push
out
sub
bnd
pusha
sub
test
dec
repz
push
jae
cmp
mov
cltd
lret
fcmovnb
icebp
lods
insb
cwtl
int3
jns
sbb
js
push
outsl
subl
outsb
xor
sbb
lcall
jb
bound
das
lods
dec
pop
sub
mov
aas
sub
xchg
dec
or
pop
ds
outsb
inc
hlt
inc
test
mov
stos
sahf
or
int
into
bound
sub
xchg
sbb
ss
xor
test
push
mov
je
sub
rol
or
lods
or
pusha
pop
sub
test
aaa
and
lret
mov
sub
in
ret
cltd
loop
fadds
sub
enter
pop
jge
xor
and
les
dec
in
and
jmp
fs
mulb
fisubl
add
fdiv
int3
xchg
push
lret
jno
mov
shrb
dec
int3
mov
cmc
sahf
pop
sub
jnp
jecxz
scas
mov
fwait
dec
rolb
bnd
pop
xor
xchg
and
and
arpl
and
lock
aad
cmpsl
movsb
arpl
lods
lods
shlb
cld
andb
cld
dec
push
cmp
ljmp
sahf
addr16
bound
push
pop
loopne
jo
lret
lds
int3
adcb
pop
shrb
dec
sti
rclb
negb
add
add
test
jo
mov
jmp
jo
mov
test
xchg
pushf
popa
sbb
subl
jb
es
or
repz
aas
mov
or
lret
jnp
mov
sub
push
cmpsl
fistl
mov
cmpsl
push
bound
popa
dec
lret
call
lock
faddp
jle
and
xchg
test
cwtl
outsl
pop
in
inc
mov
mov
xchg
sti
push
test
pop
mov
in
or
push
clc
nop
sbb
xchg
lret
mov
push
int3
sbb
xchg
adc
mov
xchg
aam
xchg
xchg
mov
push
pop
out
pushf
sbb
insb
test
faddp
lret
rorl
das
cmp
andw
scas
repnz
roll
add
notb
mov
mov
popa
pop
mov
and
loopne
add
lret
push
lds
sbb
cmp
sub
out
or
fldt
xor
out
jecxz
jo
addb
or
sub
sbb
add
sti
mov
dec
and
xchg
sub
movsb
into
sub
or
cli
or
sub
pop
cmp
hlt
jge
daa
or
pop
mov
cltd
dec
notl
lea
cmp
mov
mov
pop
pop
jecxz,pn
jge
dec
aad
or
jb
cld
fsubrl
pusha
adc
lods
cwtl
movsb
insl
dec
xor
xchg
fadd
pushf
jo
call
pushf
xlat
dec
lret
sub
aam
notl
xor
xlat
aam
adc
dec
rcrb
fs
scas
cmp
popf
cpuid
aad
sbb
movsl
mov
sub
or
inc
xchg
daa
arpl
xchg
mov
out
cmp
add
adc
jae
xchg
and
mov
push
int3
fcomps
push
shrb
cmp
lods
pusha
out
cmp
lcall
sbb
es
test
sub
fcoms
das
stc
adc
adc
sub
jbe
or
shrl
pop
jg
mov
dec
sbb
jp
cwtl
in
mov
hlt
xchg
jns
pop
cmp
pop
or
pop
imul
mov
sbb
fisubrl
mov
stos
push
adc
pop
xchg
sbb
pop
loopne
stc
mov
xchg
mov
xchg
cmpb
clc
imul
adc
imul
pop
aas
xchg
and
jl
lret
nop
cmp
mov
int3
cmp
loope
stc
cmp
push
les
push
mov
jae
sahf
adcl
insb
pop
and
jl
xchg
jmp
inc
jmp
sahf
sbb
data16
adc
adc
pop
jno
adc
inc
push
popf
cmp
lret
jns
xchg
add
mov
stc
cmp
mov
xchg
dec
enter
fcomps
mov
loope
jno
subb
insl
mov
fdecstp
jl
sbb
test
ss
xor
and
or
add
shlb
lahf
push
clc
push
sahf
cmpsb
mov
add
mov
sub
mov
mov
adc
dec
negl
xor
popf
test
xchg
fldl
in
arpl
mov
inc
ror
popl
int3
stos
fwait
outsl
jae
arpl
ss
add
cs
mov
jp
dec
int3
testb
mov
loope
lock
push
pop
cmp
inc
mov
pop
out
mov
jns
lods
cmp
jno
dec
push
cmp
mov
call
les
lret
movsb
scas
mov
lret
dec
incb
int3
imul
mov
xchg
sbb
fiaddl
cwtl
cmpsb
mov
jb
lods
fyl2xp1
lds
enter
jecxz
mov
ljmp
push
ss
sub
push
fwait
adcb
mov
add
xor
lret
dec
sub
dec
sbb
addr16
cltd
mov
adc
shlb
dec
fs
leave
push
dec
ja
rclb
mov
pop
pop
cld
divl
movsl
xor
leave
xchg
mov
fstpl
and
in
xor
push
movsb
xor
adc
xchg
ret
jmp
lea
flds
lret
es
adc
sahf
int3
dec
xchg
push
jecxz
cwtl
pop
mov
stc
imul
mov
lret
lea
or
rolb
add
pushf
int3
inc
lds
and
mov
jl
mov
add
xor
mov
test
add
xor
lods
repnz
sub
mov
lret
loope
cmpsb
test
mov
lret
or
and
sti
and
sbb
int3
fstpt
jno
sub
popf
lret
scas
movsb
rcrb
test
jmp
sti
mov
test
mov
mov
lret
pop
jnp
or
mov
xchg
push
shll
lcall
mov
dec
cmp
iret
aad
shlb
cmp
mov
add
pop
scas
cld
out
insl
and
lcall
pop
sbb
ret
in
mov
clc
sub
mov
cmp
dec
lock
push
pop
mov
mov
ret
test
shll
xlat
fisubrl
mov
shll
xchg
pop
jb
sub
and
push
popf
dec
sub
or
push
adc
jp
imul
cld
in
pop
sbb
mov
jge
push
mov
ret
adcl
out
push
mov
pusha
and
fdivrl
or
add
je
imul
mov
fdivrp
sbb
mov
xor
or
cmpsb
and
js
mov
fldl
push
and
incb
cld
repz
xlat
test
push
lahf
push
cmp
push
jbe
lods
lret
out
fbstp
add
ficoms
outsl
pop
sti
cs
stos
and
adc
inc
lret
inc
pop
push
test
cwtl
sub
ja
ss
aad
lret
sbb
sbb
jae
scas
mov
push
ss
push
imul
test
clc
sar
fisttpl
jb
fcomip
sbb
push
pop
mov
mov
sub
aaa
and
ja
jmp
shlb
sbb
mov
sbb
add
jbe
aad
in
mov
int3
and
xchg
pop
sbb
inc
pop
cmp
jns
insb
iret
hlt
lods
bound
push
negl
mov
xchg
sub
mov
mov
push
je
push
mov
imul
rolb
push
push
outsl
out
or
fcomip
inc
xchg
std
sahf
mov
jp
inc
movsl
test
outsb
stos
mov
cmc
dec
and
movsl
and
dec
sbb
je
push
orl
mov
imul
or
mov
mov
lahf
push
ret
fmull
jmp
iret
sub
pop
cmp
pushf
inc
dec
xor
adc
pop
mov
test
int3
cs
addr16
or
hlt
push
push
sbb
fmull
xchg
inc
data16
imul
sahf
mov
setge
clc
lahf
add
fnstenv
ret
sub
sbb
lock
mov
dec
cmc
cld
loope
pushf
push
test
add
push
push
das
in
adc
add
mov
cmp
cwtl
pop
leave
aaa
xor
push
bound
je
mov
jp
push
xor
xchg
add
sbb
loopne
mov
push
fucomp
fldl
mov
pop
ds
xchg
lods
js
imul
adc
lcall
jmp
or
stc
mov
test
int3
ficompl
inc
jbe
sarb
mov
insb
mov
shlb
popl
aam
fs
stos
rclb
adcl
int3
in
setle
push
and
arpl
or
stos
jle
aam
andb
adc
jecxz
data16
sbb
lock
int3
inc
dec
ret
inc
pushf
mov
lods
inc
imul
loope
mov
in
mov
xchg
aam
jl
mov
pop
add
stc
fldcw
in
push
xor
dec
xchg
data16
repnz
push
mov
out
stc
pop
mov
stos
push
movsb
push
lea
cmp
or
mov
sbb
mov
test
cld
or
cmp
bound
pop
fiadds
in
repnz
test
sbb
and
fidivrs
push
stos
jne
cmp
mov
and
sub
sub
mov
or
mov
cld
lret
ljmp
fildll
dec
int3
ficoml
je
ret
sbb
mov
in
stc
xchg
pop
jb
loop
lea
push
lods
out
inc
add
jb
push
mov
lret
movsl
cli
dec
in
loopne
andnps
and
jne
mov
cli
subb
out
push
rorb
sub
adc
or
outsb
push
xor
fistps
ret
scas
int3
fadds
jno
xor
pop
sarb
adc
or
int3
or
jg
lods
mov
sbb
int3
push
pusha
scas
out
push
sub
dec
push
mov
test
nop
jnp
push
cld
dec
int3
mov
cmc
inc
cmp
xchg
jl
sub
mov
adc
mov
push
dec
adc
add
pushf
fisttpll
xlat
xor
xor
pop
push
popa
stos
dec
adc
xor
mov
or
fwait
clc
hlt
or
int3
xchg
addr16
cld
into
cwtl
xlat
mov
jo
pop
push
add
std
int3
testl
test
repnz
pop
sbb
and
ret
das
call
jl
outsb
pop
fs
cltd
push
sub
rcr
fcmovnu
jbe
insb
dec
jb
and
ja
or
xchg
bnd
dec
cmp
popa
sbb
test
sbb
fmuls
pushf
push
mov
imul
push
sbb
xor
lock
sub
sub
lds
int3
mov
movsb
cmc
and
nop
arpl
and
mov
loop
xor
push
mov
mov
test
fildl
test
dec
es
mulb
out
clc
cs
repnz
jecxz
mov
jae
fmul
xor
mov
stos
repz
sub
fdiv
push
mov
xor
jo
or
or
test
js
icebp
sahf
js
sub
fs
and
mov
lock
cld
dec
and
mov
lret
jno
mov
arpl
lea
arpl
testb
enter
xchg
mov
mov
dec
or
adc
and
cmp
outsb
repz
test
arpl
in
popa
cltd
data16
mov
jne
cs
lods
stc
pop
lcall
cmp
mov
adc
jbe
mov
xor
sti
insl
out
outsl
xor
sub
xor
sub
dec
outsl
cmp
inc
cmp
cmc
lret
hlt
mov
test
jmp
xchg
lea
mov
clc
and
aam
mov
sbb
sub
mov
cmc
daa
je
mov
jb
cwtl
mov
bswap
sub
int
dec
jmp
push
xchg
fmuls
sahf
cwtl
mov
lret
sahf
dec
inc
mov
daa
dec
test
xor
scas
xchg
pop
jo
push
jmp
mov
daa
into
inc
cmpsl
mov
cltd
mov
pop
popa
aad
mov
cld
adc
push
pop
push
pop
test
popa
push
movsb
arpl
sbb
xor
mov
in
push
mov
sub
or
and
je
mov
mov
push
mov
outsb
jmp
sbb
xorb
pop
mov
dec
add
fcmovnu
adc
lret
sbb
or
rolb
repnz
mov
rol
xchg
fisttps
inc
xor
std
pop
shll
push
sahf
int3
mov
pop
add
dec
pop
push
dec
in
or
jmp
sbb
xchg
mov
out
notb
sub
cmp
add
pop
leave
lret
mov
xor
fstpl
mov
es
or
filds
mov
loopne
mov
mov
mov
jmp
mov
pusha
int3
orb
lret
xchg
fwait
mov
xchg
stos
addb
neg
xchg
dec
ss
mov
mov
mov
mov
aam
lret
pop
out
xchg
dec
mov
sti
push
loop
test
inc
mov
or
popf
dec
push
and
int3
rol
sub
je
testb
pop
stos
movsb
andb
cmpsl
addr16
imul
adc
ds
movsb
push
ret
or
jae
enter
sbb
es
mov
or
lret
xchg
jns
clc
hlt
dec
mov
xchg
movsb
ss
sbb
push
daa
push
dec
adc
stos
push
leave
cli
sarb
xor
lret
jg
sbb
dec
adc
cmpb
lcall
mov
mov
test
mov
jp
call
cmp
push
les
dec
push
mov
mov
iret
ljmp
lret
and
sub
out
imul
stos
stos
subb
mov
pop
sub
dec
lods
xchg
test
aad
stc
ret
sub
fcomip
jg
jo
lds
add
aaa
leave
int3
enter
mov
cli
sub
jmp
sub
and
ss
pop
xor
stos
andl
loope
xchg
mov
mov
lret
push
aad
nop
dec
imul
sbb
decl
adc
ret
mov
dec
mov
cmovo
hlt
repz
sbb
sti
mov
push
mov
in
add
dec
aad
fmulp
hlt
mov
outsl
out
add
cs
aas
adc
mov
stos
mov
xor
sti
fnstsw
push
add
push
mov
jns
mov
aas
and
jne
mov
cmp
add
clc
sti
popl
fisubrl
mov
and
int3
mov
fnstcw
xor
xchg
je
lret
sub
fimull
and
mov
dec
test
mov
clc
xchg
pop
push
fiaddl
mov
imul
test
sbb
mov
pop
test
loop
cmp
js
testl
int3
mov
dec
stos
jge
shl
push
dec
mov
adc
lock
cmp
jle
lds
inc
popf
bound
popf
xchg
sahf
jb
ret
mov
mov
pop
subb
sbb
mov
test
aas
loop
push
xchg
mov
divb
ds
xor
jnp
pop
in
push
xor
shl
es
nop
jmp
xor
and
in
pop
int3
stos
or
dec
add
gs
into
mov
lret
loope
and
repnz
vxorps
pop
ret
mov
lret
sub
fwait
dec
shrl
aas
fdivrp
cmovs
cs
inc
sbb
adcb
lods
test
sub
sub
test
add
je
add
test
int3
mov
or
out
mov
sub
cmp
push
data16
int3
adc
sbb
sub
sahf
pop
decb
imul
xor
bound
sbbl
adc
mov
in
cmp
aaa
jns
dec
and
int
sahf
movsb
jecxz
loope
rcll
das
jo
or
out
xor
sti
in
mov
adc
insl
mov
jl
push
cmp
bound
or
mov
loopne
pushl
jo
xlat
mov
out
and
dec
fstps
stc
lcall
jp
xorb
mov
ljmp
add
mov
add
mov
mov
stos
sbb
scas
scas
pop
mov
into
xor
shll
sbb
cmp
daa
dec
sbb
sub
cmp
out
sbb
add
iret
test
mov
clc
and
lret
xor
adc
add
in
xchg
out
sub
xchg
add
inc
pusha
push
pop
lds
mov
pop
andl
sbb
sbb
popl
test
out
pinsrw
or
xor
push
pop
mov
cld
push
sub
fs
test
add
int3
fwait
cmp
jno
divb
push
cmp
or
or
xchg
in
xchg
ficoms
jmp
mov
pop
mov
pop
pusha
xchg
jg
lret
adc
add
mov
faddl
dec
cwtl
push
jnp
lods
mov
les
fdivs
loop
push
sbb
mov
arpl
push
push
xchg
bound
mov
test
lea
push
pop
jnp
lods
sahf
iret
jno
arpl
jle
xor
pop
xor
out
in
scas
dec
in
test
bnd
or
sub
push
add
int3
jecxz
push
sub
add
jle
in
sub
jb
test
ret
inc
jo
mov
arpl
gs
mov
add
mov
push
popf
mov
testl
clc
shl
pop
fbld
push
xchg
out
lret
jo
push
stos
mov
test
sub
ljmp
lret
shlb
fidivs
or
push
in
add
add
in
hlt
xlat
pop
fmuls
mov
sub
mov
orl
das
adc
xor
mov
jno
hlt
and
cmp
aam
and
add
jne
int3
mov
mov
sub
and
or
lea
movsb
testb
cmc
sub
jnp
and
scas
arpl
sahf
or
or
jmp
or
lret
dec
in
xchg
pop
push
les
and
stos
and
xchg
jae
mov
stos
int3
sbb
mov
arpl
adc
dec
lds
mov
xor
pop
dec
push
jl
mov
inc
lret
pop
fisttpll
je
ret
loopne
ficomps
xor
loop
jmp
sub
mov
pushl
test
and
loop
lret
call
fdivs
sbb
pusha
or
fisubrs
cmc
jb
and
push
pop
jb
or
int
mov
sbb
lret
mov
mov
mov
adc
cvtdq2ps
mov
cmpsb
xor
popa
pop
loopne
push
lea
lods
dec
cld
sbb
je
dec
mov
pop
repz
out
xchg
and
cmc
rclb
adc
or
push
rorl
and
mov
xchg
dec
movb
insl
push
xchg
rcll
xchg
out
and
outsl
xor
sub
shl
ss
arpl
xor
pop
or
daa
mull
xor
cmc
add
shrl
stc
lret
add
push
mov
xor
stc
popa
decb
sbb
movsl
sti
lea
jp
sbb
mov
je
movsb
addl
js
sar
stos
sti
add
mov
push
mov
jecxz
xor
sarl
push
cmp
cs
das
cmpsb
inc
and
jmp
inc
jbe
jae
fs
test
pop
test
xor
jecxz
js
fwait
pop
icebp
sub
mov
inc
subb
adc
call
mov
push
popa
out
pop
mov
jo
sti
clc
fmulp
and
sub
sub
cmp
icebp
cs
mov
clc
mov
decb
out
mov
mov
out
adc
push
lret
or
aas
or
xor
sub
bound
xor
mov
les
shrb
dec
testl
pop
or
fsubs
sub
pushf
test
into
cmp
xor
fs
adc
cwtl
mov
mov
adc
dec
int3
xor
xor
outsl
mov
xor
pop
sub
rcll
or
jmp
xchg
or
mov
ret
fwait
cmp
int3
fidivs
das
popa
push
pop
cld
pop
adc
or
pop
nop
xchg
aas
and
mov
int3
inc
addr16
lods
sahf
rol
mov
imul
adc
mov
cmp
dec
xchg
lea
push
cmpsb
shrl
aas
add
pop
adc
ss
push
push
fstpl
fisttps
cmpsb
addr16
int3
or
pop
dec
push
insb
scas
mov
and
or
push
xchg
sbb
shlb
lock
push
dec
push
loop
out
dec
sub
mov
leave
xchg
cli
cld
ds
add
ret
outsb
xchg
popf
pusha
sbb
add
clc
jp
pop
mov
ds
lret
arpl
in
inc
xor
inc
sub
pop
sahf
xchg
or
adc
js
int3
test
stos
hlt
enter
stos
bound
push
jecxz
mov
hlt
jg
jae
outsl
ficoms
sub
test
loopne
push
loopne
lret
xchg
imul
dec
sarl
push
lock
xor
je
insb
rcrl
sub
jns
subl
int
rorb
dec
je
cmp
adc
repz
or
mov
cmp
mov
cld
mov
arpl
push
adcb
pop
shrl
sahf
sbb
iret
mov
cmp
sub
xchg
push
mov
and
sub
mov
add
cmp
pushf
add
pop
mov
mov
sarl
push
leave
add
cmc
xor
xlat
stos
mov
add
cwtl
inc
scas
test
mov
cli
add
mov
lret
xchg
push
and
test
mov
fwait
insb
xlat
jo,pt
jns
int3
repnz
xor
push
adc
and
lods
cmp
loopne
ljmp
sbb
je
fisubs
xchg
push
cmp
adc
xchg
mov
dec
jnp
mov
fwait
inc
int3
add
sarl
adc
fisubs
or
imul
jl
jae
nop
push
mov
int3
call
sbb
in
fcos
fldt
outsl
bound
cmp
mov
mov
popa
test
testl
mov
and
xchg
adc
xor
mov
sbb
scas
cmp
cmp
mov
bound
addb
xchg
sub
inc
push
daa
mov
shll
shlb
andl
push
mov
jmp
stc
mov
cld
mov
scas
mov
std
shr
or
sbb
ja
fistpl
pop
push
sti
enter
inc
dec
cmpsl
rcrl
stos
loop
xlat
and
jns
push
jl
mov
dec
lods
cmc
lock
mov
push
pop
dec
fmull
or
fnstcw
and
sbb
or
movsl
ljmp
cli
or
lretw
nop
cltd
fsubrs
xor
mov
push
imul
out
andb
data16
das
mov
push
fmul
cmp
leave
lahf
out
mov
jns
imull
pop
jecxz
inc
aam
ret
xchg
int3
loop
ja
lods
mov
or
ror
dec
cmp
jae
sub
or
mov
mov
inc
push
mov
pusha
xchg
neg
dec
mov
xchg
fnstcw
lret
rcrl
in
mov
pop
daa
mov
vpcmpgtb
mov
iret
push
pop
enter
mov
cwtl
push
rolb
arpl
xlat
sbb
xchg
jg
mov
and
mov
xchg
movb
pop
dec
test
mov
mov
xlat
jl
dec
incb
mov
dec
test
jne
mov
pop
imul
ljmp
jmp
push
cwtl
and
daa
flds
sbb
jae
repnz
push
sbb
inc
insb
push
push
xchg
fxch
jecxz
test
cmp
inc
nop
dec
mov
lret
xlat
cmp
push
repz
pop
xchg
push
lret
cmp
push
mov
arpl
xchg
sbb
into
ljmp
bound
lret
adc
mov
sti
in
jge
sub
adc
jge
mov
cmp
cmp
insl
pushf
out
cmc
mov
push
sbb
mov
adc
rorl
fdivrp
mov
cmp
push
mov
lcall
test
enter
mov
dec
pop
dec
jnp
sbb
cltd
cwtl
aam
pusha
push
lret
test
mul
loope
add
mov
push
pushw
hlt
pop
fnsave
lock
pusha
push
enter
xchg
inc
jmp
dec
ret
shll
rcrb
sub
fdivs
cmp
push
push
divl
test
push
cs
pop
outsl
sbb
test
cld
mov
popf
test
or
xor
popa
in
push
fistl
ds
mov
movsb
in
test
loope
loop
mov
icebp
inc
mov
mov
or
mov
test
cs
lcall
mov
dec
xchg
imul
andb
shlb
aam
int3
adc
pop
jo
insb
js
lea
fbld
daa
aad
or
pop
outsb
xor
dec
stc
jbe
cmpsl
sub
into
sub
jnp
push
repz
mov
in
sbb
daa
and
shr
repnz
ljmp
sub
hlt
pushf
cmp
dec
cmc
leave
jo
je
test
cs
repnz
xchg
lea
ljmp
repz
das
mov
dec
stos
lea
mov
or
ror
pushf
jmp
lds
or
xor
dec
insl
lds
iret
push
mov
pop
cli
mov
pushf
imul
jo
je
mov
pop
cli
bound
pop
jo
sbbl
mov
push
lods
xor
xchg
stc
in
sub
adc
mov
xor
imul
int3
cmp
inc
xor
loope
stc
pop
movsb
or
je
loop
daa
lret
ss
ss
jge
and
fistpll
dec
push
popl
inc
sub
sub
and
sarb
sbb
dec
push
jbe
push
pop
xchg
lods
dec
movsl
jmp
jno
lock
test
inc
vmovapd
cli
cld
mov
push
mov
adc
stos
push
xchg
sbb
in
int
lret
push
test
push
sub
pop
inc
sub
pop
jnp
xchg
imul
loop
stos
pop
sti
cmpsb
pop
fdivrl
hlt
push
sub
lret
mov
aad
push
sbb
out
and
divb
int3
ret
popw
mov
test
sub
je
jno
sub
pop
dec
daa
pop
ljmp
sbb
dec
repz
dec
jp
jge
pusha
sbb
pop
pop
pop
xchg
xor
imul
lods
les
cmp
sub
daa
sub
jg
jnp
hlt
pop
int3
xchg
push
jo
outsb
pop
stos
push
aam
iret
call
xor
gs
dec
mov
add
cli
ss
jbe
inc
test
addr16
or
aam
cmp
jg
inc
and
out
test
int3
rcrl
stos
ret
out
xor
jecxz
sub
add
pop
and
lret
mov
inc
pop
sbb
mov
inc
push
add
enter
dec
stos
loope
cmp
or
dec
mov
out
pop
sub
lret
hlt
jl
es
lods
cmc
loopne,pt
push
pop
cmp
imul
or
cmp
add
push
push
adc
insb
ds
idivl
sbb
inc
pop
mov
pop
jecxz
cmpsl
cmp
inc
pop
jae
aam
push
fnstsw
out
xchg
push
jecxz
das
notb
fadds
sub
push
sbb
cmpb
add
inc
in
jb
test
das
mov
ljmp
pop
sub
bound
out
sahf
xor
push
dec
mov
or
xorb
sbb
xchg
mov
push
sbb
dec
stc
lea
data16
stos
push
in
into
enter
add
sub
into
add
mov
int3
out
xchg
push
outsb
sub
and
mov
scas
push
mov
into
pop
pop
cmp
xchg
sbb
orb
lods
clc
xor
mov
test
mov
add
cmc
xchg
or
daa
mov
pop
push
sub
stos
ror
sub
gs
imul
push
jl
mov
mov
push
push
xor
cwtl
lret
dec
mov
mov
call
int3
ja
xchg
orb
and
dec
sbb
daa
int3
sbb
cmp
int3
push
call
jns
call
lods
or
stos
mov
daa
lods
xor
xor
cld
mov
xchg
test
adcb
outsb
jp
mov
sbb
rcr
ret
push
jo
push
call
movsl
dec
cwtl
nop
mov
jns
xor
lea
xchg
xchg
dec
sub
and
lret
test
jl
lock
pop
aaa
fldt
ficoml
aaa
push
cmp
insl
and
imulb
xor
stos
es
push
addb
shl
ljmp
int3
orb
add
fs
inc
sar
inc
cld
xor
bound
lret
adc
scas
lock
cwtl
dec
push
loop
dec
movsb
lret
and
loopne
cwtl
lock
loop
dec
mov
mov
mov
add
and
lahf
scas
nop
cmp
hlt
sub
jecxz
daa
sub
jo
dec
mov
into
mov
shrl
xor
and
faddp
cwtl
inc
sbb
bound
and
cmc
stc
out
inc
imul
cmp
pop
cmp
jecxz
dec
mov
pusha
mull
xorl
stos
std
xor
insl
xchg
mov
es
leave
rcrb
adc
outsb
lea
inc
xchg
lcall
out
cmp
sahf
xchg
jecxz
pushf
pop
or
dec
jp
jne
cmp
push
push
or
jns
outsb
loop
int3
ljmp
dec
subb
pop
stc
test
fbstp
mov
ficoml
in
nop
and
and
mov
cmp
add
mov
mov
push
icebp
in
int3
stc
mov
jecxz
pop
and
rorl
sbb
in
in
push
cmpsl
arpl
lods
lahf
pop
mov
add
repz
test
add
subb
lds
push
pusha
adc
testl
xchg
push
dec
push
push
add
jecxz
add
add
lea
pop
test
jecxz
outsl
arpl
std
jmp
push
xchg
sbb
mov
or
push
out
sub
mov
lods
cmpsb
stos
test
fildll
shlb
stos
movsb
jp
jb
loop
add
mov
out
in
mov
je
xor
rol
lea
inc
push
sbb
pop
pop
inc
mov
ret
inc
mov
and
mov
jecxz
mov
aas
xor
test
scas
pop
pusha
fimull
mov
mov
jo
nop
xor
dec
mov
aad
or
mov
pusha
push
pop
lods
ret
xor
cmp
inc
dec
lcall
cmp
aas
push
aas
out
sub
push
adc
outsb
push
xchg
stos
test
and
out
out
test
rcrb
imul
test
jnp
js
nop
and
mov
sbb
pop
shlb
push
fs
mov
lret
leave
clc
mov
mov
lods
xchg
rolb
popf
lret
lcall
arpl
sbb
mov
stos
daa
in
mov
int3
and
insb
fwait
cmc
repz
sbb
imul
mov
int3
outsl
das
jp
mov
xchg
push
outsl
imul
and
mov
and
int3
je
mov
pop
and
movsl
xor
dec
xchg
sub
sbb
data16
cmpsb
imul
jo
icebp
int3
movb
adc
movsb
pop
dec
stos
call
xchg
lret
jecxz
lea
mov
jp
stos
pop
mov
or
lea
popf
mov
aaa
sbb
mov
int3
scas
xchg
xchg
rclb
push
popf
push
test
push
stos
ret
movsb
sub
xor
xchg
loop
adc
lret
jae
lret
pushf
pusha
repnz
std
loop
sub
insl
pop
adc
dec
jne
subb
outsb
add
push
cmc
xchg
pop
daa
sbb
call
movsb
movsl
mov
jge
sti
add
xor
pop
repnz
les
pop
stos
sub
pop
push
dec
enter
pop
lret
xor
sub
xchg
lret
sub
insb
dec
mov
test
add
cmp
pop
fwait
sub
test
cwtl
int3
ret
sbb
lahf
cmp
xchg
jb
pop
mov
stos
ret
dec
pushf
aaa
dec
mov
or
popf
pop
mov
add
stc
and
push
jo
mov
pushf
cmc
pusha
out
dec
add
ss
adc
pop
mov
decb
mov
xchg
call
mov
in
sbb
fwait
mov
add
cltd
push
adc
pop
jb
and
stos
call
enter
rcl
int3
andl
out
movsb
sub
push
stc
pop
repnz
cmpsl
mov
sub
fsubl
lret
mov
lea
jne
pushf
mov
lds
cmp
lea
int
jl
fldcw
mov
fildll
jno
cmc
fbstp
int3
pushf
jl
pop
pop
cld
lret
insb
cmp
pop
mov
test
aad
movsb
rclb
scas
rorb
fdivs
pop
int3
test
xor
lea
lock
or
shl
rorl
push
clc
sbb
aas
mov
pop
and
es
adc
xor
popf
sub
test
pop
inc
movsb
arpl
shlb
stos
push
cmp
aas
sbb
out
xchg
mov
je
and
or
cmp
into
fs
mov
jge
jb
fwait
mov
das
mov
movsb
sahf
aad
and
leave
inc
imul
inc
jb
rcll
int3
push
and
xchg
movsb
push
sub
push
ret
js
dec
push
or
push
cmp
pop
int3
mov
push
dec
shll
in
and
js
mul
daa
jmp
lcall
das
sarl
mov
mov
jmp
fistps
dec
jne
imul
iret
adc
mov
popf
mov
je
mov
test
stos
mov
xchg
imul
inc
adc
dec
xor
aad
mov
notl
roll
jp
pushf
mov
jmp
jo
push
sbb
push
mov
hlt
out
lret
pushf
jg
jnp
lea
outsl
aam
movsl
imul
sahf
test
cmpsb
fimull
repz
mov
dec
in
imul
lea
cmp
scas
int3
mov
test
ss
jge
pusha
add
test
test
lock
cmpsl
sub
scas
sbb
mov
xor
add
pop
int3
and
out
loope
arpl
mov
jp
xchg
cmp
and
aad
icebp
push
arpl
int3
xor
mov
xchg
setg
test
inc
mov
fdivrl
lods
cmpsb
or
sti
lahf
jmp
test
aad
mov
je
je
adc
push
enter
and
push
je
jno,pn
lret
sti
add
adc
mov
push
test
fs
xchg
pushf
xchg
push
push
int3
push
mov
test
bound
insl
cs
mov
leave
ret
push
sbb
lcall
int3
aam
jbe
mov
adc
xor
pop
ds
lds
shlb
cmpsl
ja
cmp
mov
xchg
test
in
clc
or
popf
xchg
xor
adc
mov
mov
inc
je
push
mov
mov
movsl
xor
xlat
or
push
int3
inc
mov
mov
sub
xor
fcomip
jl
das
mov
mov
jecxz
pop
cmp
mov
aam
ret
sbb
aaa
push
or
push
add
adc
sbb
mov
push
adc
cli
enter
xchg
and
xchg
jno
jmp
stos
sbb
xlat
pop
mov
sbb
leave
xchg
pop
sub
out
fs
imul
lea
cli
sub
add
mov
dec
rcrb
data16
js
scas
inc
xor
push
push
lds
push
mov
in
mov
or
push
nop
ds
rclb
negl
jp
dec
mov
or
fwait
push
mov
mov
lret
inc
pop
fdivs
pop
imul
pop
push
cmc
stos
push
mov
lahf
sbb
leave
adc
js
lods
jb
jle
lret
mov
mov
sar
mov
sbb
jae
stos
ret
bound
mov
jns
cmp
jge
dec
shlb
cld
pop
cwtl
and
lss
adc
push
popf
adc
push
sbb
cld
adc
data16
cld
xchg
ljmp
push
cmp
mov
cltd
lret
mov
rol
shlb
icebp
push
mov
cld
jnp
push
cmpsl
push
int3
jns
pop
add
cli
popf
pushf
or
test
addb
xchg
push
jmp
popa
mov
mov
fstpl
add
stos
and
int3
pop
lods
add
sbb
jmp
xorb
cld
or
dec
into
xor
and
jbe
dec
lods
icebp
pop
cld
enter
mov
cmp
loope
addr16
mov
lock
sbb
fs
or
mov
or
daa
divb
ds
xor
in
pop
mov
dec
sub
inc
mull
cli
ret
add
fldcw
test
push
lret
inc
mov
xor
out
stos
stc
adc
mov
sub
pop
das
sbb
rcll
mov
pop
mov
xor
push
cmp
sbb
test
test
int
mov
scas
dec
mov
jg
sub
cli
and
test
and
sahf
adc
cmp
add
stos
xor
mov
loope
test
cpuid
fs
mov
jo
add
cmpsl
add
xchg
cmpsl
rolb
cwtl
push
jge
sbb
jl
xchg
aam
push
inc
cwtl
ja
adc
xor
int3
daa
iret
icebp
insb
lret
rclb
cmc
sbb
out
pop
stos
xor
nop
xchg
and
and
sub
push
mov
add
lea
jecxz
adc
inc
cmp
movsl
dec
sbb
adc
jb
out
loop
cltd
sub
xlat
fists
jl
jno
xchg
ds
loope
adc
mov
bound
push
push
sbb
pop
enter
xchg
cmp
aas
xchg
push
mov
mov
xorb
push
ficompl
repnz
and
lret
push
and
jp
ljmp
insb
lret
orb
or
pop
arpl
sub
mov
and
jo
iret
mov
ror
mov
push
mov
adc
ret
jnp
test
aas
loop
andb
xlat
dec
add
loope
mov
push
enter
mov
mov
xchg
or
xor
popf
in
cmp
pusha
push
mov
stos
mov
stc
mov
addr16
mov
push
aaa
jne
leave
xor
mov
mov
sbb
pop
in
cmpsl
sub
jle
xchg
pop
inc
in
jb
adc
or
out
adc
lods
adc
dec
cmp
mov
sbb
test
mov
fs
sahf
inc
call
mov
cwtl
mov
push
cmc
jl
add
fs
fwait
hlt
nop
stos
out
mov
sub
adc
dec
icebp
aam
mov
xchg
mov
lret
push
jns
push
mov
dec
test
inc
xlat
imul
sbb
stc
sbb
les
jns
ret
rcrb
andl
negl
aad
mov
mov
jbe
sub
adc
in
pop
repz
and
jae
ja
mov
sub
pop
adc
ret
filds
mov
inc
sub
xchg
fidivs
mov
mov
mov
pop
or
js
pop
mov
out
push
push
mov
mov
hlt
lahf
arpl
mov
xchg
pop
out
cmc
mov
push
loopne
cmp
mov
outsl
push
xchg
xor
xchg
push
inc
popf
sbb
lock
jb
ret
sbb
bnd
call
dec
fwait
push
mov
lds
jns
loopne
lret
dec
mov
pop
inc
out
sbb
pushf
cmp
mov
test
in
sub
int3
cmp
pusha
mov
sarb
mov
mov
out
imul
int3
xchg
ljmp
mov
mov
rep
rorb
imul
push
int
stc
cmp
and
mov
xchg
cmp
inc
mov
cmpsb
std
sbb
dec
and
mov
or
jge
adc
xorb
or
out
repnz
sbb
mov
xchg
bound
mov
das
nop
inc
mov
jge
cmp
cmp
scas
mov
inc
in
mov
adc
push
call
mov
sub
outsb
fbld
dec
sbb
roll
cmpsb
mov
inc
in
into
mov
rorl
rol
mov
adc
pop
xchg
dec
push
fmuls
lods
jns
repnz
movsb
mov
test
jno
int3
repz
xchg
mov
sub
test
adc
push
test
mov
test
dec
mov
mov
fwait
inc
pminub
mov
aas
mov
lods
inc
daa
cwtl
rclb
push
out
dec
fdivs
ret
pop
out
scas
xchg
subl
out
lea
and
cli
mov
xchg
aaa
incb
leave
adc
rcrb
ds
inc
mov
in
mov
in
enter
push
push
pop
cmc
pushf
adc
sarl
test
cmp
les
inc
inc
int3
stos
pushf
mov
push
inc
or
and
jmp
add
sub
add
out
xchg
jle
push
ja
in
mov
cmp
icebp
popa
out
inc
cmp
int3
mov
jb
inc
clc
movsl
jle
fildll
insl
sbb
ja
ret
dec
mov
cld
movsb
lods
mov
push
mov
hlt
adc
adc
jae
mov
mov
jb
rorb
movsb
and
and
dec
cmp
nop
out
jge
mov
adc
ja
outsl
jb
mov
stos
dec
in
das
cmp
cmc
insb
or
mov
ds
or
arpl
mov
out
xchg
add
push
je
xlat
adc
xor
mov
mov
xor
sbb
hlt
addr16
mov
and
xor
xchg
aas
inc
mov
jnp
sub
orl
mov
dec
les
fimuls
dec
ret
outsl
insl
gs
dec
subl
stos
fbstp
mov
sbb
mov
aam
idivl
addb
popf
xchg
sarl
in
out
shlb
enter
fwait
pop
fmuls
hlt
dec
and
mov
insb
dec
jns
mov
mov
js
ss
shrb
mov
fidivrs
mov
lea
stos
jl
xchg
cwtl
jecxz
loope
pop
mov
mov
in
dec
js
sub
inc
or
aam
xor
and
shll
mov
pop
fcoms
adc
adc
popf
add
fbld
vmovdqa64
shr
lahf
outsl
inc
stos
mov
or
xor
icebp
push
andl
mov
xor
movsl
lahf
aas
pop
xchg
mov
movsl
sub
push
divb
mov
mov
mov
je
test
mov
aaa
mov
mov
push
xor
xlat
push
xchg
leave
lret
mov
and
stos
push
add
xchg
add
cmp
sbbb
and
subl
xchg
jnp
aas
lahf
xorb
movsl
xchg
mov
loop
cld
das
pop
xor
daa
cmp
mov
cmpsl
dec
xor
xchg
adc
mov
xchg
xor
xor
in
push
or
leave
gs
shlb
ja
add
inc
cmc
lahf
mov
pop
adc
xlat
jae
sub
inc
and
lret
mov
push
mov
gs
push
mov
cmp
jmp
sarb
aam
insb
les
arpl
in
dec
jmp
jo
inc
fnstcw
cmpsb
mov
daa
adc
adc
mov
dec
out
cmpsb
scas
push
xor
jecxz
cmp
mov
mov
inc
sarb
add
js
shrb
aaa
cmp
hlt
movlps
test
mov
adc
xorl
mov
xchg
add
mov
pushf
fisttpl
scas
sub
ret
push
sbb
scas
mov
mov
subl
mov
jnp
sub
pop
xchg
jb
or
jg
add
aam
mov
xchg
test
pusha
test
decl
xor
mov
rolb
sbb
push
aaa
mov
jmp
sbb
cmp
mov
xchg
pop
lds
xchg
jp
mov
mov
dec
in
in
mov
cs
gs
scas
xor
mov
inc
or
jae
les
test
cltd
dec
mov
sbb
jne
popa
lea
inc
int3
notb
mov
fnsave
cmp
mov
enter
mov
xor
mov
mov
stos
and
jno
into
xor
movsl
cmp
adc
push
mov
xchg
daa
dec
das
int
test
dec
mov
mov
ret
aad
push
mov
repnz
adc
mov
mov
cmpsb
cltd
cmp
enter
cmp
and
popa
in
dec
mov
mov
add
shlb
jns
cmp
cmc
xor
fwait
mov
mov
int3
xchg
sub
mov
pusha
sub
xchg
icebp
mov
test
dec
xor
cwtl
jnp
and
fnstenv
mov
mov
push
sahf
mov
mov
mov
repz
cmp
dec
mov
into
inc
shll
mov
push
loope
loopne
xor
xchg
aam
fstpt
pop
repnz
dec
mov
sti
mov
dec
je
mov
sub
lahf
addr16
mov
sub
lea
test
mov
adc
arpl
mov
mov
stos
popa
xchg
fucomp
mov
and
mov
pusha
add
pop
addr16
cmpsb
mov
pop
loope
clc
movsb
pop
sbb
and
loopne
clc
cmp
sbb
mov
fs
mov
mov
mov
test
mov
mov
cmc
mov
in
shl
movsl
jecxz
sub
mov
xchg
rcr
xor
pop
mov
cmpb
insb
lret
leave
ja
movsl
mov
push
adcl
inc
and
mov
andb
call
push
cmp
lret
sbb
and
jp
sub
sti
jmp
test
xchg
test
mov
dec
inc
inc
in
sub
adc
test
mov
pop
notb
in
sub
mov
cld
push
negl
xor
mov
test
shl
sub
mov
xorl
adc
inc
imul
std
jecxz
rorb
rorl
cmp
push
cs
scas
cwtl
sub
adc
cmp
push
jmp
clc
pop
sbb
xor
sub
dec
imul
lret
dec
mov
dec
push
stos
push
cld
stos
stc
pop
les
sbb
iret
aad
andb
or
scas
les
mov
mov
aaa
dec
cmpb
add
pop
pop
out
sbb
mov
ret
mov
or
inc
xor
mov
ret
lret
imul
test
imul
fisttpl
sar
je
cmc
iret
cld
or
mov
popa
fwait
xchg
test
rol
xor
jmp
xor
push
cmp
loop
sub
fimull
testl
mov
add
cmpsb
test
imul
test
popa
mov
adc
aas
push
jg
pop
mov
iret
sbb
mov
outsl
stos
test
sti
xchg
push
lret
loope
popa
and
stos
dec
adc
and
call
dec
mov
pop
xor
mull
push
dec
int
mov
sbb
xor
lret
jecxz
aaa
orb
mov
mov
dec
js
adc
lods
lahf
push
jl
mov
or
add
push
test
call
lcall
test
loop
push
or
mov
leave
pushf
or
push
insb
test
je
cli
mov
aad
adc
jb
mov
lds
pop
inc
adc
lods
cli
or
inc
movsl
cmc
pop
xlat
stos
std
leave
lret
rcll
dec
test
mov
popf
int3
dec
sbb
inc
insl
and
clc
mov
enter
pop
lret
sub
ficoml
sub
cmp
int3
pop
xchg
dec
fbstp
jecxz
push
pop
test
inc
mov
dec
call
js
and
cmc
cmpl
pop
and
int3
jge
push
sbb
push
das
fdivs
shrl
mov
push
outsb
sub
sub
test
pop
pop
inc
insb
sub
movsb
shrl
int
and
shll
daa
js
ror
mov
in
lods
add
in
int3
mov
pop
mov
push
cli
sub
test
test
mov
push
dec
jmp
inc
push
ficomps
add
int
fstps
pop
lea
pop
xchg
and
es
add
test
mov
dec
test
test
loope
mov
inc
icebp
das
mov
jo
repnz
xor
mov
pop
mov
adc
mov
jns
and
inc
xchg
fs
adc
pop
stos
xchg
jle
and
gs
lods
cmp
sbb
xor
mov
mov
ljmp
pop
loopne
xchg
data16
adcb
in
jnp
popf
mov
xchg
inc
scas
push
mov
sbb
fcomp
mov
mov
hlt
push
gs
xchg
loope
test
aaa
je
adcb
or
in
enter
xor
xor
in
pop
popf
sbb
stc
pusha
xor
sbb
sbb
jbe
rorb
stc
ljmp
mov
and
or
stos
or
test
aaa
sbb
es
dec
sbb
xorl
ret
testb
cmp
pop
loopne
inc
repnz
jmp
mov
imul
xchg
pop
aas
cmp
int3
arpl
lea
loopne
sub
bound
mov
mov
mov
dec
sar
jae
lret
jb
je
mov
cmc
mov
mov
push
loop
test
cld
push
mov
add
jno
xchg
or
push
test
pop
pop
cmp
adc
mov
stos
fstpt
or
dec
stos
scas
js
ret
add
cs
xlat
mov
test
xor
push
je
push
cs
mov
pop
cmc
or
repz
dec
fs
out
ss
mov
jmp
dec
cwtl
pop
ss
loop
add
fs
std
inc
inc
mov
scas
pop
mov
adc
add
lock
jbe
mov
imul
cmp
call
adc
dec
repnz
jl
or
mov
push
in
scas
xor
jne
sub
pushf
xchg
jge
mov
dec
cmp
sbb
and
imul
mov
aas
lock
push
fbstp
push
ret
lret
mov
push
jp
pop
and
dec
inc
mov
push
test
xchg
popf
addr16
ret
outsb
jae
hlt
jo
push
and
mov
push
lods
std
movsb
pop
je
popa
int
sbb
stos
push
cld
lahf
mov
xchg
dec
mov
pop
sub
dec
pop
adc
adc
jmp
les
insb
xor
xchg
lret
aam
sbb
fbld
shlb
inc
mov
cwtl
mov
and
and
inc
dec
mov
movb
ret
sbb
dec
fldenv
mov
ret
jnp
mov
inc
lea
call
fs
xor
daa
or
push
lds
lret
pop
jne
mov
xchg
sbb
pop
jmp
leave
ljmp
pop
test
pop
inc
ficomps
xor
xchg
shlb
cmp
and
idivb
into
jecxz
push
sbb
cmpsb
test
insl
mov
push
int3
repnz
leave
xor
pop
into
mov
int3
jmp
imul
pop
push
mov
lods
mov
loop
lahf
pop
stc
sbb
sub
mov
int3
pop
push
repz
sub
xchg
pushf
jecxz
sub
movsb
cltd
int3
jno
pop
or
je
dec
fsub
jae
mov
xorl
fnstcw
int3
loope
int3
cmpsb
sub
sub
in
das
mov
scas
pop
cli
xchg
jno
stos
stos
sub
jne
gs
das
adc
lret
stos
lret
std
aas
jb
push
stos
pop
pop
pushf
bound
leave
addr16
push
lods
cwtl
popl
stos
xchg
sahf
addb
push
aas
scas
dec
sbb
in
lahf
decb
test
mov
mov
dec
sbb
jo
mov
push
mov
lock
cmpsb
subb
dec
cmc
sub
push
or
sub
nop
cmp
sub
push
jno
fildl
inc
ret
das
add
call
sti
in
imulb
sub
shlb
xor
outsl
push
pop
ds
lret
leave
pop
add
js
mov
andb
push
test
cs
cld
mov
add
xor
stc
loope
mov
fistl
pushf
lret
and
test
pop
fsubl
mov
sub
mov
inc
mov
sub
ret
enter
and
bound
xchg
or
data16
loop
jecxz
pop
ds
hlt
aaa
cmp
pop
or
and
mov
add
push
call
sbb
mov
push
xchg
xor
lret
push
jmp
aad
in
push
sbb
stc
mov
ljmp
dec
iret
loop
das
ss
pop
jp
les
int3
adc
adc
mov
push
test
call
pushf
pavgb
or
sub
in
lahf
fisttpll
xor
mov
push
mov
xor
dec
adc
sahf
les
push
inc
dec
jb
dec
ss
mov
xchg
push
jb
xchg
pop
imul
popf
mov
cmp
and
sbb
ficomps
pop
cmp
cmpsb
cmc
shlb
orb
scas
lret
mov
aam
rcll
imul
xor
xchg
in
sti
jmp
leave
mov
xor
lcall
dec
mov
sbb
xchg
jecxz
icebp
push
sub
jae
cmp
fs
sbb
ret
and
jae
mov
popa
pop
stos
int
xchg
mov
or
mov
xchg
lods
mov
aas
ja
xor
cwtl
out
sub
xchg
pop
inc
cltd
cmp
mov
sub
mov
lret
jp
mov
cmp
stc
cld
sub
dec
sarl
push
cmp
inc
jnp
or
add
add
hlt
scas
mov
mov
pop
jecxz
les
mov
inc
in
cmp
jp
movsb
add
jmp
aas
pop
pop
and
nop
or
test
aaa
add
lods
xchg
dec
mov
int3
sbbl
and
data16
mov
inc
and
mov
push
dec
mov
aas
push
enter
out
sub
lods
jg
mov
test
mov
popa
cld
mov
sbb
mov
jo
sub
jo
push
dec
mov
mov
add
aaa
jecxz
push
dec
movsl
jp
jge
or
and
in
stc
je
lret
fstpl
push
fdivrs
fs
add
fbld
xor
dec
sarl
cmpsl
jmp
das
mov
add
aaa
dec
adc
stc
pop
pop
sub
cld
or
test
lods
vmwrite
cmp
mull
and
outsb
out
rcll
mov
insl
jl
and
movsl
jg
hlt
xchg
outsl
shll
testb
cmp
push
or
cli
xchg
int3
xor
fdivp
jno
shll
add
imul
rcr
push
lcall
push
mov
orb
jmp
insb
stc
dec
imul
adc
pop
or
lcall
pusha
pop
sub
adc
and
aam
out
scas
lods
mov
or
lret
pop
hlt
sbbb
push
mov
cmc
dec
xor
xchg
psubw
int3
dec
lods
mov
inc
int3
cmp
and
jae
and
push
fisttpll
pop
jno
xchg
push
pop
popf
lret
pop
mov
xor
xchg
outsb
jmp
fs
add
bnd
stos
cld
push
pop
out
mov
shlb
inc
adc
int3
xor
test
lahf
jp
fs
lret
mov
fmull
lock
sarb
int3
or
mov
mov
pop
push
push
mov
sbb
xchg
insb
sti
lret
gs
bsf
jg
or
push
mov
push
dec
lock
cmp
data16
mov
xlat
and
scas
lock
push
test
sbb
push
popf
int3
lret
mov
xor
pop
mov
cltd
pop
cmpsb
pop
int3
mov
jmp
movsb
lds
int3
or
call
mov
jmp
add
dec
mov
adc
push
jb
dec
stc
add
stos
fistl
jmp
sub
dec
and
leave
jns
push
inc
jnp
shlb
xor
movsl
sbb
lock
mov
adc
leave
mov
sarl
cmp
adc
cmp
mov
scas
lods
add
adc
pusha
test
cmp
xor
add
fwait
dec
ret
sbb
popa
out
sub
mov
scas
jl
nop
fdivr
jnp
fidivrl
pop
aad
lods
xor
lea
mov
add
mov
mov
ljmp
rclb
xchg
mov
mov
scas
inc
xor
pusha
pop
push
fnsave
arpl
jp
pop
lret
cmpsb
das
sub
mov
pop
or
clc
xor
imul
sbb
xor
arpl
stos
push
sahf
ja
mov
sbb
mov
sub
mov
lret
scas
int3
add
cli
mov
mov
jb
add
xchg
adc
mov
dec
pop
dec
mov
mov
icebp
rcrb
hlt
inc
je
lock
movsl
out
shlb
addr16
mov
flds
adc
mov
mov
xchg
and
or
fpatan
popa
int3
loope
xor
mov
ds
push
push
and
js
add
ret
jmp
push
js
lock
sub
stc
jo
arpl
adc
dec
popf
lcall
and
mov
out
pop
jmp
insl
shlb
sbb
and
push
lret
and
pop
lock
call
gs
dec
lods
xchg
add
in
call
dec
je
sbb
xchg
enter
add
getsec
push
pop
sub
int3
pop
and
das
mov
test
movsb
in
cmp
je
pop
pop
aad
in
sub
vandnpd
cmc
and
push
cmp
sbb
pop
dec
push
test
scas
xor
mov
mov
popa
push
pop
int3
movsl
pop
out
adcl
add
or
out
sbb
int3
mov
xchg
mov
adc
jo
mov
xlat
pxor
sub
pop
movsb
push
cli
and
int3
hlt
mov
jl
imul
adc
dec
xchg
lret
scas
mov
mov
mov
sarb
fs
in
push
inc
loop
stc
and
mov
inc
ljmp
add
test
fstl
mov
push
mov
push
adc
push
pop
pop
mov
dec
icebp
mov
xor
push
push
jno
pop
out
das
xor
ret
jns
and
cld
mov
mov
pusha
xchg
dec
aaa
lret
sub
fidivrl
insb
mov
xchg
jl
cmc
nop
scas
into
cltd
pop
lock
bound
dec
pop
test
inc
sarl
sub
lock
leave
popf
lret
sub
mov
mov
rclb
lods
push
pusha
aas
jp
insb
cmpsb
daa
pop
stos
ret
mov
push
cli
stos
sbb
mov
jle
mov
je
push
lock
sub
xor
and
sarb
pop
pop
xchg
ja
jecxz
es
in
orl
adc
mov
dec
ja
sbb
add
sbb
push
xchg
int
jle
mov
ret
sti
aaa
mov
jb
mov
sbb
jle
daa
dec
mov
scas
and
pop
and
outsb
scas
or
xchg
mov
ret
mov
stos
jmp
push
arpl
sbb
movsb
dec
hlt
mov
add
stos
out
jo
insb
xchg
cmp
sub
dec
lret
or
push
dec
negb
pop
and
bound
mov
or
lock
mov
and
ficomps
cmp
mov
dec
mov
add
pop
lock
int3
movsl
mov
in
sbb
adc
jno
subl
jnp
push
stos
jns
test
aas
jp
jge
icebp
cmp
or
dec
sub
push
mov
mov
std
lock
sbb
call
int3
pop
adc
movsb
xor
ficoml
cwtl
and
ucomiss
push
jbe
mov
lods
mov
inc
imul
push
in
jle
ficomps
lahf
mov
adc
in
out
test
cld
xlat
enter
fsubrs
test
jbe
aas
arpl
and
mov
xchg
popa
scas
fs
mov
or
mov
leave
sub
mov
xor
out
enter
cli
mov
out
or
push
cmp
movaps
and
int3
sbb
mov
ror
fdivr
jae
fstps
das
shll
cmp
xor
js
mov
sbb
pop
cltd
mov
scas
pushf
js
dec
mov
pop
int
xchg
pop
ret
push
ds
daa
and
xchg
xchg
cmc
add
pop
adc
iret
frstor
sub
xchg
jp
sbb
xchg
dec
xchg
fidivrs
pop
insb
sbb
jno
adc
mov
sti
pusha
xor
out
arpl
push
dec
sbb
xchg
popf
lret
and
test
js
mov
ret
or
mov
insl
int3
push
mov
xchg
or
push
or
sub
lcall
fsubp
les
sub
mov
and
lods
sbb
xchg
std
dec
adc
into
pop
cmp
mov
leavew
lea
jno
xchg
dec
sbb
and
mov
mov
lret
or
cmc
mov
scas
call
popa
fwait
test
jnp
jbe
mov
sub
pop
pop
xchg
sbb
scas
lea
jle
sar
add
pop
lret
repnz
xlat
mov
pop
inc
daa
and
mov
test
lods
testb
cs
xchg
hlt
sub
xor
lret
test
in
jb
jmp
ret
push
in
jge
xor
js
fs
scas
mov
push
cmp
dec
sar
mov
mov
sbb
aaa
inc
xor
adc
int3
mov
out
imul
jg
inc
je
int3
push
les
ror
test
jno
xor
sub
outsl
mov
and
sbb
xchg
dec
mov
cmc
stc
mov
pop
and
sub
and
lock
lret
test
sub
lret
cmpsb
sbb
xor
jecxz
aaa
sbb
add
call
and
mov
pop
cwtl
leave
fwait
mov
lret
pusha
dec
sub
push
rcrb
rcr
stos
sub
lcall
push
mov
or
int3
aad
enter
lret
out
pop
push
rorl
leave
shll
push
dec
pop
mov
jo
stos
cmp
dec
mov
pushf
push
popa
test
data16
test
iret
mov
xlat
xor
add
push
shl
std
pusha
sbb
adc
add
mulb
push
jns
push
dec
push
xor
add
sbb
push
dec
mov
mov
insb
test
cmpl
int3
arpl
daa
push
cmp
shlb
decb
stos
mov
push
pusha
lds
addl
mov
int3
dec
inc
nop
daa
dec
mov
and
mov
push
inc
movsb
lret
js
dec
mov
les
lret
sub
mov
dec
out
or
in
pop
fwait
cmpsb
in
arpl
inc
pop
ja
lcall
push
test
lds
adc
jbe
out
sub
push
out
dec
push
push
jmp
sahf
int3
inc
add
sub
test
movsl
fs
mov
and
in
aaa
mov
fsubrl
xchg
arpl
jne
or
orb
mov
and
daa
push
test
ljmp
push
int3
call
and
xor
pop
cli
and
jb
pop
mov
jmp
adc
push
lods
pop
sbb
outsl
out
xor
inc
lock
nop
sub
sub
je
outsb
sbb
xor
push
je
and
push
xchg
xor
out
mov
fimull
lahf
test
push
out
pushf
lret
adc
pushf
mov
test
sub
inc
add
cmp
call
vmread
push
repz
lcall
xchg
stc
mov
mov
mov
xorl
mov
hlt
outsb
mov
cltd
stos
into
shrl
xor
push
fcompl
ja
fstpt
jno
in
rcll
mov
mov
push
shrb
inc
adc
shrl
repnz
rolb
sub
std
mov
xor
add
sub
jo
mov
ljmp
sub
or
xchg
movsl
xor
stos
icebp
mov
or
xchg
xchg
cmp
decb
xchg
imul
es
xor
mov
cmc
xchg
test
mov
leave
pop
push
add
sub
adc
dec
outsl
xchg
sbb
scas
and
push
and
cld
jae
fs
cmpl
xchg
sahf
add
xchg
outsl
aas
push
sbb
imul
es
enter
xchg
ldmxcsr
sbb
insb
xorl
lock
iret
shll
pushf
pop
or
arpl
stos
cmp
je
stc
int
insw
outsl
jl
dec
aam
pop
sbb
mov
stos
lds
adc
call
sub
mov
push
ja
dec
daa
fcompl
lock
cwtl
pop
xchg
cs
sub
aas
jl
pop
pop
adc
cmp
mov
cli
lea
cmp
nop
push
add
cld
mov
shll
das
jnp
push
fdivl
cli
lods
sti
int3
jle
jp
or
sub
dec
cmp
push
jbe
xchg
aam
fstpt
call
ja
lret
into
fwait
push
dec
stos
jns
xchg
cli
addl
inc
push
imul
push
mov
pop
loope
stos
aam
cmp
mov
js
sub
mov
lea
pop
mov
insb
clc
sub
push
cmc
inc
mov
push
mov
test
mov
dec
test
mov
cld
adc
sbb
clc
inc
pop
dec
xor
aam
dec
xor
sub
ret
and
push
dec
test
or
mov
repz
addl
lds
and
dec
lock
sbb
es
je
sbb
sbb
mov
mov
xchg
fcmovne
mov
sbb
cmp
pop
rcrb
arpl
into
jg
mov
adc
frstor
pop
sbb
push
in
imul
repnz
loope
out
inc
lcall
sub
sbb
sti
adcl
mov
dec
mov
xchg
aam
not
pop
mov
xor
add
jae
jl
test
mov
push
scas
in
dec
cmp
sbb
clc
movsb
in
xchg
xor
jmp
insb
cmp
cwtl
dec
test
push
sub
mov
mov
and
dec
jle
pop
and
xchg
loopne
pop
push
xor
adc
andb
and
stos
adc
jp
sub
imul
xchg
pop
jmp
fstpl
andb
xor
lret
mov
mov
and
and
movsl
sbb
xor
ja
fisubs
loopne
insb
or
jmp
pop
dec
popa
adc
push
std
push
pop
aam
adc
cmp
pop
sbb
adc
and
mov
mov
enter
add
popa
dec
out
daa
cli
or
cmpsl
test
dec
fldcw
mov
add
outsl
icebp
int3
fidivs
lahf
outsl
or
sub
fdivp
or
test
pusha
mov
mov
mov
and
mov
xchg
mov
cmpsb
mov
mov
scas
cld
imul
lret
push
xlat
das
adc
aam
dec
fwait
enter
aam
mov
das
pop
sti
mov
lcall
push
adc
mov
stos
mov
js
enter
call
mov
xor
pushf
in
scas
xlat
mov
push
sub
ja
in
fisttpll
jmp
es
add
add
mov
cmp
push
mov
inc
lret
popa
ss
movsl
sbb
je
pop
push
cmp
cld
xor
jb
into
sahf
test
sbb
stc
xlat
or
pop
je
mov
sbb
movsb
dec
int3
call
outsl
imul
loopne
test
ret
outsl
fimuls
jns
stos
cmp
ret
add
popl
repnz
js
inc
jmp
subl
push
rorb
dec
cmpsl
mov
xor
mov
dec
fstl
dec
push
jecxz
test
pop
imul
push
movsb
sub
mov
pop
adcb
daa
cmp
leave
int
popf
pop
scas
int3
mov
add
push
sbb
in
dec
inc
add
int3
cwtl
js
mov
dec
pop
or
xor
inc
mov
insb
cmp
ss
xchg
dec
cmc
jge
out
inc
fadds
jg
add
dec
jnp
fs
inc
xchg
xor
sbb
xor
push
mov
scas
ljmp
mov
pop
fstpt
inc
add
cld
sbb
inc
xchg
imul
scas
outsl
fbld
push
inc
stc
scas
and
loopne
dec
aam
sbb
xchg
jmp
sub
mull
fcoms
sbb
or
lret
pop
dec
fmull
xor
push
aam
pop
pop
je
jl
push
popa
arpl
ret
das
xor
mov
pop
mov
lcall
jecxz
ljmp
test
pop
mov
out
fcmovne
and
call
dec
cmpsb
addb
mov
jae
test
lret
gs
stc
xor
lret
sbb
aad
pop
and
imul
sub
pop
pop
rol
movsb
inc
int3
lret
pop
in
in
mov
mov
les
and
pop
arpl
mov
stc
pop
cli
jo
xchg
insb
lahf
ss
xor
add
xchg
mov
cld
cmpsl
imul
mov
leave
insl
mov
ret
cli
mov
hlt
jns
mov
movsb
leave
call
repz
xor
push
das
imul
pop
insb
in
test
fidivl
jmp
add
and
int
inc
cltd
int3
shr
pop
inc
jno
dec
ret
imul
cmp
outsb
aam
adc
mov
mov
aaa
imul
cmpsb
pop
xor
ja
sub
jns
repnz
jg
fwait
ss
cmp
mov
mov
in
or
sarl
scas
pop
sbb
aas
inc
cmp
and
lret
movsl
mov
mov
add
xchg
sub
lret
and
pop
test
sub
sahf
jmp
cmp
cmpsl
mov
mov
mov
pop
ja
sbb
mov
cmp
inc
aaa
dec
ljmp
xchg
xchg
xor
sahf
and
outsl
js
ja
xchg
lret
pop
subb
pop
add
gs
sub
loop
mov
out
outsl
mov
cli
sub
adc
sahf
inc
mov
adc
vlddqu
cmp
jmp
push
into
xchg
jl
dec
inc
pop
mov
push
fistl
xchg
or
adcl
sbb
mov
sahf
jl
stc
dec
xor
cli
add
or
in
pushf
repnz
negl
cli
adc
push
insl
std
jo
ja
int3
jl
xchg
mov
adc
stos
outsl
lods
xorl
xchg
mov
mov
pop
mov
pushf
int3
sbb
ret
ret
dec
test
fwait
sbb
stos
jecxz
dec
stos
jecxz
pop
lret
pop
jmp
mov
sbb
jl
dec
scas
add
lret
lods
pop
jp
mov
insb
movsl
jge
sub
stos
stos
daa
mov
test
pop
xor
scas
imul
pop
int3
push
idiv
test
pop
mov
jnp
stos
int3
fnstcw
jmp
mov
fisttpl
adc
add
cwtl
pop
pusha
adc
in
lods
inc
pusha
and
mov
lea
loop
pop
pop
xchg
inc
test
mov
sahf
ljmp
xor
mov
xor
xor
sub
repz
sbb
pop
pop
xchg
movsb
push
fmul
xchg
ja
dec
jno
loope
leave
clc
xchg
repnz
popa
rorl
pop
imul
and
add
test
sbb
stos
std
push
dec
mov
int3
shl
clc
sti
lods
repnz
sbb
mov
dec
pushl
mov
cmpb
incb
jno
xor
fdivrs
outsl
xor
insb
push
inc
dec
pop
cld
or
dec
xor
jmp
ret
lods
xchg
or
sti
or
xchg
notl
flds
lods
stc
pop
std
jo
inc
pop
mov
xchg
cmp
mov
pop
or
mov
and
in
lret
adc
or
sub
scas
or
xor
add
test
push
mov
add
add
clc
and
popa
inc
xor
push
dec
or
push
mov
push
and
inc
mov
addr16
xchg
pop
add
clc
xchg
push
fcoms
mov
daa
pop
mov
and
xlat
lret
add
xor
sub
incl
sub
enter
adc
in
cs
js
push
js
ja
testl
ficoml
mov
jge
and
int3
jns
stos
lret
fwait
pop
push
jmp
mov
or
pop
xchg
arpl
stos
mov
jmp
sub
xchg
jmp
aaa
mov
dec
inc
fiaddl
mov
add
xchg
test
adc
push
dec
leave
jle
mov
fs
xchg
lret
mov
insb
rol
mov
dec
mov
stos
addr16
push
jns
cmpsl
dec
sti
add
sub
rcrb
mov
cmp
ficoms
lods
pop
sahf
mov
pusha
jae
lods
mov
das
add
pushf
mov
rcrl
movsb
out
inc
jle
call
mov
ror
jle
lods
and
mov
xchg
and
lds
sbb
ja
das
and
test
lret
xlat
bound
ja
mov
sarl
xor
and
xor
dec
push
inc
mov
stos
test
stos
xchg
pop
sub
sub
fcmovnu
mov
push
je
int
mov
bound
adc
push
pop
pop
jae
mov
shrl
xor
mov
push
mov
insb
divb
or
sub
int3
adc
testb
jp
pop
repnz
mov
xor
add
sbb
mov
ds
push
test
cmpsb
test
jno
jg
xor
cmp
lods
mov
or
sub
sbb
in
sub
jae
addl
fidivrs
lret
jnp
cld
in
dec
mov
push
xor
rcrl
jmp
and
icebp
cmp
pushf
push
push
add
dec
xor
insb
pop
mov
mov
push
mov
mov
push
mov
adc
std
addb
shrb
or
push
in
mov
jb
xor
xor
dec
or
cs
sbb
and
jl
data16
or
jp
sub
into
outsl
lds
lods
xor
repnz
ss
cmp
scas
xor
sub
inc
push
testl
mov
push
in
loop
repz
jo
adc
lret
xchg
add
xor
inc
mov
push
sub
pop
push
xor
hlt
call
dec
xor
loopne
jae
loope
jno
inc
cmc
inc
pop
adc
into
mov
inc
loop
call
mov
dec
push
mov
push
imul
dec
mov
dec
lods
lret
addb
pop
push
stos
inc
cmp
xchg
imul
test
adc
sub
xor
lods
movsl
jne
ss
inc
out
cmp
cmp
lods
inc
test
mov
ret
aaa
mov
add
mov
icebp
daa
xor
cld
fdivrs
scas
push
and
shll
imul
sbb
xchg
sti
mov
mov
stc
fdivs
sub
ds
imul
sub
loope
sub
push
mov
push
sub
imul
mov
add
test
pop
subl
or
je
pop
lods
pop
faddl
fcomps
ret
daa
imul
push
outsb
sbb
dec
popf
shlb
sbb
sbb
mov
dec
inc
mov
divb
lahf
out
cltd
shll
sbb
cmc
cld
movsl
sub
rcll
lods
adc
push
cmpsb
mov
mov
loop
rcll
les
cmp
xor
aam
das
cmp
lods
int3
add
ret
mov
push
pop
test
int3
ja
int
cltd
scas
inc
mul
or
je
stc
cmp
pop
fldl
lret
jecxz
jp
jecxz
adc
sbb
shll
sarb
popf
inc
adc
fsubl
pop
daa
into
xchg
rclb
mov
xor
arpl
pop
hlt
cli
dec
or
lock
pop
and
push
push
lock
xor
dec
and
leave
push
nopl
push
jge
or
testb
xchg
orb
outsl
pop
xchg
imul
pop
or
add
int3
adcl
daa
add
imull
xorb
xchg
outsl
fs
sbb
jbe
aas
imul
subb
mov
mov
lret
stc
sub
iret
arpl
out
jecxz
adc
cmpsb
cmp
lret
fwait
jae
pop
inc
or
pop
push
imul
push
into
fstl
not
and
aas
sub
shrl
arpl
pop
hlt
mov
or
mov
out
xchg
add
jae
movsb
int3
divl
cmc
insb
push
mov
xor
je
cmpsb
andl
fisubs
lods
xor
dec
icebp
rorl
rclb
jns
inc
add
je
adc
mov
cmpsl
stc
jmp
sbb
imulb
mov
xchg
flds
loope
pop
icebp
jno
mov
xchg
mov
int3
xchg
insb
lods
sub
sbb
or
gs
and
mov
cmp
insb
xorl
push
jmp
cmp
xchg
cld
ret
sbb
jae
lock
push
outsb
jg
je
and
and
xchg
adc
xor
xchg
xchg
and
leave
cmp
cli
push
pop
pop
and
dec
std
mov
loop
int3
jl
mov
or
fisubrs
dec
or
jnp
lea
cmpb
adc
mov
fisubs
push
mov
mov
lock
rcrl
dec
push
sahf
cmp
leave
sub
dec
subl
cli
mov
fwait
shll
inc
jns
loope
mov
mov
cmp
pop
fistpll
std
shrl
insb
outsb
std
push
jb
dec
cmpsl
and
xor
sub
or
mov
dec
cltd
xchg
iret
fldt
cli
in
addr16
out
mov
jecxz
and
mov
mov
test
addb
dec
add
dec
mov
push
fistl
in
and
push
bndstx
sub
cmpsb
or
test
sahf
cmpsw
mov
push
movsb
mov
xor
nop
jne
and
imul
stc
imul
stos
hlt
push
cmc
add
inc
test
shlb
push
test
jle
and
cmpl
popa
aaa
mov
cmp
insl
push
add
inc
neg
xchg
roll
pusha
mov
mov
icebp
mov
test
dec
rcrl
mov
cmp
unpckhps
imull
adc
mov
push
mov
or
fnstsw
andb
or
xor
movsl
out
push
test
push
dec
shlb
int
aad
xor
inc
cmp
test
jecxz
xor
lret
mov
les
mov
pop
orb
lret
adc
test
das
and
in
je
lea
ljmp
das
hlt
test
cld
das
push
and
jo
fs
pushf
pusha
scas
dec
mov
pop
jmp
mov
testb
push
mov
out
popf
and
inc
push
mov
inc
push
aas
sub
mov
insb
jb
stc
popf
or
xchg
push
insb
xchg
dec
pop
testb
shlb
stc
xchg
stos
sbb
dec
ljmp
js
push
xchg
cli
shrb
scas
test
jmp
or
fists
sbb
adc
ljmp
mov
mov
xchg
ja
jae
pop
cs
arpl
mov
loopne
repz
lods
inc
jns
pop
lea
in
mov
pop
cwtl
and
nop
push
push
pop
sbb
and
dec
mov
sub
dec
sbb
push
xor
mov
in
xchg
jae
jne
dec
mov
sti
mov
adc
in
lret
mov
jbe
or
mov
adc
xor
mov
pop
dec
out
loopne
add
test
pusha
mov
mov
int3
push
xchg
in
push
add
cmp
sub
aaa
add
outsb
and
sbb
mov
xchg
cmpsb
lret
push
rcrb
xchg
mov
cmp
push
imul
push
movsl
loop
dec
pop
xor
daa
arpl
leave
mov
gs
push
insl
push
push
adc
lods
pushf
int3
inc
cmp
dec
adc
mov
fists
pop
cltd
test
and
repz
test
scas
sub
outsb
loopne
cld
in
mov
in
je
ret
scas
xor
test
dec
es
ret
into
sub
dec
mov
dec
imul
xor
mov
dec
dec
or
and
loopne
in
out
ds
rcr
mov
adc
pop
ror
xchg
incb
xchg
adc
dec
mov
dec
xlat
jp
aad
xchg
sub
pop
dec
push
imul
das
sub
mov
lock
xor
shl
cmc
repnz
popa
mov
adc
sar
je
std
cmp
loop
mov
pusha
lds
rorl
xchg
in
sub
xchg
stos
jnp
inc
ret
dec
pop
mov
mov
sbb
cmp
mov
loope
add
hlt
push
sub
fimuls
int
cli
cmpxchg
lea
cs
jmp
mov
lahf
jl
lret
push
add
out
xchg
sbb
int3
in
mov
adc
jo
push
dec
pushf
shlb
sub
cmp
clc
movsb
jae
push
mov
mov
mov
push
mov
push
add
jne
test
jbe
arpl
outsb
sbb
push
movsl
or
bound
adc
xor
out
inc
xor
out
ss
xor
push
stos
cli
popf
shl
push
sbb
pop
mov
scas
ja
sub
lret
data16
lret
cmpsb
cwtl
xor
cs
inc
mov
inc
fmuls
out
lock
ss
shlb
push
sbb
jae
dec
push
inc
mov
xchg
inc
push
sbb
lret
stos
push
pop
ja
scas
xorl
loopne
lods
std
jo
xlat
dec
inc
pusha
add
decb
iret
lods
mulb
js
xor
mov
mov
loopne
aam
pop
mov
add
test
mov
mov
je
and
sub
pushf
mov
or
sub
jp
lret
repnz
jecxz
adc
xchg
jnp
mov
push
mov
push
xchg
fnsave
sarb
mov
or
mov
shll
lcall
adc
cmp
cwtl
ficoms
push
cld
cwtl
lods
aas
je
fisubrl
mov
xchg
or
dec
iret
xchg
mov
mov
fnstenv
mov
and
mov
rclb
ror
push
adc
push
mov
and
roll
adc
xchg
call
divb
cmpsb
sbb
punpckldq
jle
inc
adc
mov
dec
cmp
mov
or
aad
pushf
adc
pusha
call
rorb
loopne
insl
sbb
mov
shlb
popa
xchg
lods
scas
and
mov
sbb
adc
ja
movsl
fs
mov
pusha
aaa
fbstp
xchg
mov
mov
push
cmp
inc
int
inc
sarl
inc
pop
shrb
and
xor
scas
mov
les
dec
mov
cmp
xchg
nop
mov
cld
xorb
aam
shlb
mov
push
or
subl
stos
xor
imul
test
fildll
xchg
inc
stos
imul
pop
mov
or
cs
mov
hlt
sub
mov
mov
cmp
sti
jae
mov
mov
jg
lahf
leave
fidivs
jnp
xor
push
mov
mov
aad
jno
lahf
enter
push
push
jmp
cs
xor
fs
jnp
mov
ljmp
fidivl
aaa
cmp
mov
mov
push
fsubs
push
movsl
lods
xchg
les
es
mov
outsb
out
testl
addr16
aam
fidivs
lds
sbb
mov
push
xor
sbb
cmpsb
mov
sub
stos
movsl
aaa
adc
pop
mov
mov
aas
fnstsw
icebp
dec
jle
aad
scas
dec
out
je
mov
push
xchg
shlb
int
xor
popl
inc
dec
std
or
mov
lods
cmp
ror
arpl
pop
inc
adc
xchg
adc
shll
out
enter
xchg
int3
iret
std
je
das
imul
loope
insl
xchg
pop
mov
inc
sbb
mov
jo
jl
jecxz
mov
in
mov
jae
push
aad
inc
daa
sahf
push
mov
and
pop
loop
repnz
mov
mov
xchg
pusha
in
mov
ljmp
mov
or
and
xor
jbe
pusha
mov
pop
pop
inc
and
sarb
mov
out
push
ss
xchg
pop
push
adc
mov
sub
fdivs
dec
call
dec
pop
adc
sarb
cmp
in
mov
pop
sarb
aas
in
dec
lods
pusha
mov
mov
xor
adc
jb
inc
int3
dec
fildll
fistpl
dec
mov
mov
cmp
je
stc
in
mov
into
xchg
or
aaa
pop
lea
jle
cmp
icebp
pop
ss
dec
inc
and
popa
pop
push
cli
adc
ds
pop
rcll
pop
cmp
mov
jge
loop
ret
mov
mov
movsl
and
xchg
pop
fs
mov
push
test
cmc
test
push
enter
test
cmp
jb
mov
mov
inc
push
xor
jae
add
sahf
push
jne
push
jns
add
loop
mov
mov
in
loope
mov
aad
mov
and
lret
mov
sub
lea
loop
test
call
int3
imul
adc
notb
pop
and
ret
inc
gs
aam
stos
inc
loop
sub
and
popl
out
pop
cwtl
movsb
int3
stos
pop
popf
xchg
dec
movsb
push
adc
pop
cli
es
je
popa
inc
hlt
mov
and
mov
push
cltd
mov
es
in
mov
mov
insl
movsb
jl
mov
int
repz
mov
xchg
pop
loop
cmc
stos
dec
jmp
sbb
sub
dec
dec
loopne
lods
outsb
or
mov
insl
cs
lahf
sti
adc
xchg
mov
inc
call
push
cmp
arpl
xchg
xor
fists
pop
jnp
popa
int
mov
xor
xor
sbb
and
sub
jge
dec
lret
sahf
out
push
or
arpl
shl
cmc
inc
icebp
mov
xchg
fidivl
push
sub
insb
out
sti
test
sbb
mov
stos
push
dec
outsl
sub
cs
pop
mov
mov
imul
and
mov
adc
mov
pop
pop
mov
lret
stc
cmpsl
int3
add
aad
mov
loope
scas
jno
push
and
mov
jp
pushf
sub
xchg
jb
xor
xchg
movsl
adc
sub
sub
pop
cmp
aad
sahf
pop
stos
lock
cmpsb
add
lods
popa
sub
push
bound
int3
movb
movsb
mov
dec
jmp
or
pushf
jmp
inc
push
add
pop
test
scas
int3
mov
mov
push
sbb
mov
jae
fnstcw
pop
pushf
int3
lods
data16
testb
or
ret
adc
and
mov
mov
push
pushf
jecxz
sbb
or
movl
imul
nop
xor
fdivs
jns
pop
xchg
or
jae
ret
jbe
xchg
push
leave
pop
mov
lods
rorb
clc
push
lret
sub
pusha
pop
sub
int3
in
data16
push
jmp
addr16
cmpsl
fcmovbe
es
lret
lret
rclb
adcl
jns
bound
sbb
popa
push
mov
dec
xlat
pop
mov
push
jge
sub
lret
push
cmp
jne
jge
mov
pusha
xchg
xor
lds
repnz
xchg
fdivr
mov
dec
xchg
out
jns
xchg
xchg
imul
push
pop
test
cltd
jl
pop
add
inc
xchg
or
and
xor
add
fildll
mov
cmp
repz
int3
mov
loop
stos
ds
nop
push
popf
lret
mov
xor
out
imul
xor
adc
or
jg
sbb
scas
dec
lds
mov
pusha
cld
inc
mov
sahf
cli
jmp
daa
push
xlat
and
xor
mov
lock
or
mov
mov
nop
adcl
imul
add
rcr
cltd
sbb
sbb
cmp
sub
inc
arpl
fcoml
xor
ret
pop
xor
jae
stos
bound
mov
mov
mov
mov
push
je
jl
mov
loop
pop
or
adc
lret
inc
adc
cmp
pusha
shll
mov
mov
shrl
nop
mov
and
sbbb
mov
sub
dec
jne
je
cltd
dec
in
pop
popa
add
imul
push
xor
jo
movsb
imul
cmpsb
loop
aad
adc
pop
dec
jg
jg
int3
popa
jl
dec
popf
testl
lock
jp
jae
mov
push
cmp
int
or
in
sbb
xchg
repnz
cmpb
repnz
adc
lret
pop
mov
in
mov
fs
aaa
jge
and
fnsave
sub
push
in
sub
aad
sbb
and
xchg
xchg
cs
pop
dec
mov
xor
lret
cmpl
rcll
cmp
aaa
into
mov
test
xchg
push
push
xchg
je
mov
xor
xor
and
ret
mov
sbb
or
pop
mov
xchg
jl
pop
lock
int
mov
push
ds
lahf
bound
movl
test
mov
or
push
adc
cmp
push
in
sub
popa
cld
pushf
sbb
mov
out
or
bound
mov
movsl
mov
sbb
test
lret
scas
ds
sbb
xchg
cmc
xchg
or
mov
jmp
nop
cmpsb
and
bound
jo
sub
mov
shrl
test
push
sbbb
cltd
push
mov
loope
sub
jmp
hlt
pop
divl
mov
mov
sahf
jg
inc
stc
in
fistpl
stc
sbbb
dec
pusha
jne
inc
in
and
mov
aaa
cmp
mov
ret
push
add
sbb
sbb
lods
xchg
dec
out
pop
fs
xor
int
jg
sbb
je
dec
lahf
stos
mov
and
mov
sub
in
mov
ja
push
mov
lret
jge
dec
push
pop
ljmp
iret
hlt
adc
mov
jmp
movsb
cmp
mov
movsl
cs
inc
pop
add
xorb
mov
aam
outsl
pop
stos
movsb
add
stos
cmp
inc
push
lock
sub
pop
dec
out
aas
mov
aaa
vhaddps
dec
idivb
imul
repnz
jmp
pop
push
aam
test
ret
cwtl
aad
push
mov
outsl
sbb
dec
xchg
and
xor
xbegin
cmp
clc
xchg
cld
adc
test
and
pop
mov
xchg
mov
lock
pop
int3
loop
in
pop
fsubrp
sub
sahf
jp
call
cmpsb
or
dec
fstl
incb
test
stos
pop
stc
int3
add
sti
loopne
mov
imul
fst
shrl
mov
xchg
jbe
pushf
push
adc
xlat
aad
arpl
shlb
and
je
dec
xchg
dec
adc
imul
popf
mov
pop
ss
sti
daa
loop
fmull
cmc
sbb
loope
mov
cmc
repnz
pushf
repz
aas
mov
daa
arpl
lea
push
cmc
into
fwait
pop
cmp
fiadds
lret
push
movsl
lds
jmp
pushf
xor
fucomp
lret
repz
push
mov
jle
out
cmp
inc
pop
fcoms
xor
idivb
xchg
add
pop
mov
into
lahf
test
call
jne
xchg
pop
mov
in
call
dec
cmp
lret
in
into
mov
add
clc
jae
dec
dec
push
sahf
push
pop
popf
repnz
sub
icebp
xchg
movsb
pop
jb
loope
outsl
int3
sbb
push
xchg
or
add
outsl
lret
je
test
call
stos
mov
dec
repnz
pushf
cmp
cld
add
push
jbe
movsl
addr16
push
rol
dec
out
inc
sub
lret
addl
cmpb
push
adc
out
in
cmp
lods
pop
in
ret
add
mov
dec
xlat
push
rcll
fsubrs
enter
outsl
pushf
add
testl
mov
mov
pop
int3
repz
jno
lods
sub
repnz
and
lret
xchg
dec
mov
ficompl
xchg
pop
push
std
inc
dec
cmpsb
xchg
int3
or
inc
fildll
or
fcoms
mov
or
loopne
xor
xor
pushf
insl
or
imulb
adc
push
mov
or
push
cwtl
or
mov
jbe
add
out
shlb
sahf
mov
scas
int
inc
xchg
jns
mov
jmp
mov
enter
imul
sub
mov
dec
lret
scas
mov
jp
sbb
push
and
filds
testl
stc
aam
and
cmp
jns
out
fs
mov
rcrb
leave
leave
shrb
pop
and
mov
push
pushf
icebp
pushf
pop
je
shrb
icebp
fmul
shl
jbe
pop
dec
mov
mov
out
aad
jge
dec
rorb
ss
out
and
push
in
aas
sbb
dec
xchg
dec
int3
cmp
aas
scas
dec
pop
fwait
shl
stos
sbb
mov
std
adc
cmc
dec
cmp
jb
push
lds
mov
sub
jb
xlat
dec
xchg
ljmp
rorl
lret
mov
inc
gs
mov
jb
adc
jg
lods
pop
enter
call
add
mov
lea
orl
sbb
imul
and
insl
mov
push
add
push
dec
shl
jae
mov
push
out
imull
testl
mov
jb
jmp
pop
orb
loope
cmp
sub
and
pushf
xchg
sbb
std
outsb
jmp
test
icebp
pusha
test
adc
mov
push
mov
push
push
lret
pop
push
sub
push
popf
scas
aad
lea
pop
lea
xor
xchg
shlb
stos
pop
push
xchg
xor
sub
dec
inc
pop
push
inc
scas
stc
xor
stc
pop
mov
inc
xchg
mov
pop
xor
leave
lret
add
or
xor
mov
aas
dec
cmp
ret
dec
testl
insb
aad
loope
xchg
aad
aaa
fucomip
sub
movsl
sub
arpl
rcr
mov
out
fldcw
add
or
ja
pop
add
nop
xchg
cmp
gs
subl
push
lods
inc
add
sti
cmp
jae
push
xor
push
xor
fstpt
lock
jecxz
cs
in
cmp
test
insl
nop
lret
test
mov
adc
lea
and
aaa
cmp
lea
sbb
and
fisttpll
or
aas
rolb
cmp
push
mov
xchg
xor
pop
mov
push
cmp
pop
pop
repnz
xorb
aas
adcb
arpl
lods
add
add
cld
and
pop
inc
popf
ljmp
js
push
pop
adc
subb
cmp
jo
out
mov
ja
icebp
fistpl
adc
jae
hlt
lret
nop
push
js
jbe
gs
mov
int3
mov
mov
repz
or
cli
test
mov
sbb
pop
test
jmp
sbb
mov
cmpsb
popa
arpl
sub
call
repnz
mov
mov
dec
cli
or
pop
sti
jl
test
test
sbb
or
pushf
outsb
or
or
and
inc
cmp
xchg
xchg
out
adc
or
jo
lret
adc
daa
test
gs
jbe
jo
sti
mov
jp
decb
mov
mov
add
xchg
pop
sbb
lret
sub
imul
subb
nop
push
aaa
lea
stc
add
inc
fstpl
dec
jl
pop
inc
loopne
lcall
icebp
push
dec
push
push
clc
test
rcl
pop
cmp
test
xlat
cmp
add
push
jecxz
xor
push
dec
sub
test
push
or
push
cwtl
negb
inc
and
sub
cmpsb
dec
iret
movsl
push
and
push
std
lahf
sub
insb
dec
sarb
aas
mov
add
and
push
or
scas
mov
or
lret
dec
cmp
sbb
outsl
add
cmp
and
mov
addr16
jecxz
int3
xchg
mov
dec
pop
sub
push
repz
and
pop
stos
dec
adc
jecxz
fld
shlb
add
addl
xchg
cmp
pop
cmp
mov
pop
stos
jbe
repnz
imul
clc
arpl
fdivl
cltd
int3
fs
jns
mov
mov
insl
adc
xchg
mov
dec
repz
xchg
insb
adc
sbb
andl
ljmp
inc
fistps
mov
mov
jae
xor
bound
sbb
and
pop
mov
pop
rcll
in
dec
mov
add
mov
mov
mov
xor
sub
add
xor
js
lahf
arpl
cmpsb
test
push
cmp
push
mov
adc
call
in
jno
lods
out
jbe
enter
cs
xor
inc
rolb
xor
xchg
ja
and
cmpsb
lret
mov
icebp
out
mov
jg
mov
sbb
add
popf
xor
mov
popa
push
xor
mov
daa
popf
adc
lret
inc
sahf
mov
cltd
ret
popa
icebp
mov
rcrb
xor
jbe
inc
mov
pop
adc
push
mov
ljmp
and
cs
inc
outsl
cmp
in
mov
mov
jmp
or
movsb
stos
xor
jge
xlat
in
add
sub
loop
repnz
adc
ss
push
push
insb
dec
mov
mov
pop
mov
push
mov
hlt
insb
lods
cld
std
mov
inc
jge
sbb
sbb
outsl
mov
add
lcall
xchg
jp
dec
hlt
into
aam
or
xchg
je
daa
mov
push
test
push
cmc
jge
aad
pusha
ss
mov
into
ret
cmpsl
inc
push
mov
cmp
jns
cmp
adc
mov
cmp
ret
pop
les
xchg
nop
jnp
arpl
lea
xor
jl
fdivs
stos
popa
shll
mov
push
mov
add
int
inc
sbb
add
cmp
hlt
divb
mov
fwait
es
mov
idivb
mov
into
daa
lret
inc
mov
pushl
xchg
xlat
xchg
cmp
mov
lds
out
mov
xor
popf
fldenv
dec
mov
and
sbb
jp
mov
pop
push
in
mov
mov
outsb
lods
mov
or
jne
lahf
inc
pushf
cmpsb
das
ret
nop
ds
hlt
push
dec
and
xchg
pop
scas
dec
aas
cwtl
mov
adc
repnz
in
popf
cmpsl
mov
sub
jle
mov
rcl
jae
mov
inc
dec
jo
enter
xor
imul
int
adc
jle
adc
ret
sub
push
mov
mov
cmp
jns
out
mov
outsl
inc
mov
mov
shll
out
lods
pop
xchg
and
or
cmpl
cmp
sub
mov
push
adc
fcomp
mov
sub
in
movsl
out
ljmp
jmp
inc
push
adc
xor
imul
sbb
add
mov
sbb
xor
inc
aam
js
mov
inc
shrl
mov
push
jae
cmc
cmpsb
mov
addl
mov
inc
inc
xor
dec
cmp
mov
mov
push
xor
cmp
mov
or
adc
mov
mov
mov
add
loopne
jns
sbb
fdivrs
lock
cs
test
and
mov
stos
lret
icebp
xor
mov
lea
xchg
xchg
movlps
sub
shll
mov
mov
xchg
inc
mov
xchg
loop
hlt
jge
imul
xchg
out
inc
ja
test
add
pop
gs
imul
push
dec
shl
mov
bound
push
xor
xor
mov
lea
add
mov
mov
fbstp
or
mov
lcall
mov
leave
sbb
mov
lods
popl
iret
inc
mov
push
ret
imul
mov
mov
jno
into
ret
mov
out
push
jle
sub
insb
xchg
lock
xchg
or
gs
lds
xor
rcr
int3
pop
mov
cmpsb
push
xchg
in
mov
xchg
inc
es
aas
mov
cmpsl
das
mov
adc
fbstp
cmp
cmpl
movsb
mov
arpl
or
call
xchg
mov
test
and
sbb
insl
dec
xor
lock
nop
std
xchg
sbb
pusha
mov
repnz
mov
in
je
divl
cmc
stos
test
and
jns
sub
inc
adc
mov
orb
mov
mov
and
cld
mov
sbb
fidivrl
call
or
mov
inc
movsl
sub
xchg
jb
mov
xchg
mov
sub
movb
cli
std
fists
test
cwtl
and
push
js
adc
rcrb
sbb
sbb
mov
jecxz
aaa
jmp
fwait
mov
rorl
push
or
cmpsl
mov
movsb
cmp
dec
out
mov
pandn
adc
sti
jle
mov
ds
loope
popa
pmulhuw
hlt
mov
xorb
sbb
xchg
idivl
mov
mov
test
mov
test
mov
or
jp
scas
mov
in
and
mov
enter
mov
mov
das
sbb
pop
mov
mov
xchg
push
lods
xor
fmulp
imul
mov
mov
sbb
mov
mov
mov
int
xor
xor
sti
mov
mov
lea
jge
pop
mov
stos
dec
mov
fstps
hlt
xor
and
mov
lret
and
cwtl
sub
pop
hlt
je
mov
or
mov
push
add
cli
cmp
dec
mov
popa
leave
mov
stos
bnd
shlb
ret
sub
mov
mov
jl
jbe
cmpsb
aam
aas
daa
hlt
cwtl
cmpsl
add
mov
push
iret
inc
mov
shll
xchg
cmp
sbb
fwait
lods
jmp
les
xchg
stos
sub
cs
lahf
addr16
jns
data16
cmp
mov
push
jecxz
lret
mov
adc
insb
mov
sbb
mov
or
sti
int
sbb
cmc
mov
in
mov
mov
xchg
jbe
adc
jl
mov
cmp
fcoml
outsb
xchg
mov
xchg
fldt
mov
jl
push
add
aas
mov
mov
setnp
std
push
enter
shrb
mov
xor
and
mov
jp
lds
in
push
les
mov
loop
fisubrs
xchg
inc
and
sbb
out
mov
pop
lahf
add
mov
mov
fsubr
lds
sahf
xor
aas
pop
xchg
mov
xchg
jns
dec
mov
and
cmc
arpl
and
or
sarl
jp
sbb
dec
shll
mov
mov
aam
xor
mov
popf
mov
test
inc
shlb
adc
movl
aaa
inc
ret
jl
adc
out
jp
mov
push
mov
push
fisubrl
fmuls
aad
xor
filds
test
and
shrb
xchg
lret
std
dec
jbe
stc
pop
push
jno
xchg
xchg
mov
or
test
stos
xchg
pop
add
andl
inc
mov
mov
or
decl
loopne
imul
pop
imul
pop
pop
fsts
mov
xchg
cmp
mov
out
sbb
cmp
adc
jbe
pop
sub
mov
sti
int
sub
outsb
push
sahf
je
in
pop
lock
mov
stos
loope
lds
jb
lret
repz
popa
stc
sbb
xor
cmp
and
pushf
je
push
push
sub
repnz
loopne
in
imul
out
push
or
cmpsl
int3
stos
ret
sbb
nop
rcll
test
ds
or
sub
sub
dec
leave
and
pop
or
mov
test
sub
fstps
ret
push
xchg
add
sahf
scas
push
icebp
ret
dec
mov
mov
aam
mov
mov
jp
scas
lcall
roll
out
or
or
sbb
xchg
shll
sub
or
jmp
or
rcll
ljmp
xor
push
sahf
mov
lret
push
loop
xchg
push
lods
fistpll
daa
push
stc
fwait
sbb
outsl
insb
dec
ret
and
int
mov
movsb
jp
daa
cmp
xor
rol
pop
add
stc
adc
mov
xchg
mov
dec
add
push
xchg
and
mov
divps
jmp
xchg
xchg
clc
cmc
and
test
inc
sbb
dec
cmp
sub
xor
mov
es
js
push
fnsave
or
or
push
sub
or
mov
mov
pop
adc
loope
jb
pop
int3
arpl
and
movsb
cmp
cbtw
adc
jle
lahf
pop
aas
repz
test
not
in
sub
mov
mov
std
inc
shr
lcall
fwait
pop
jnp
sub
push
lret
movsb
mov
push
stc
jmp
or
stos
test
lret
scas
cmc
or
leave
xchg
pushf
lret
addr16
pop
sahf
inc
xlat
or
repz
fimull
xor
out
aad
or
pop
and
jl
call
pop
test
test
ja
jne
dec
mov
icebp
in
sub
gs
mov
jge
insl
jmp
lods
pop
sub
mov
xchg
mov
jnp
xchg
pop
adc
arpl
mov
in
leave
xchg
mov
xor
mov
adc
mov
cmc
sub
and
xchg
mov
bound
pushf
sbb
xor
jle
sub
adc
lods
push
enter
mov
pop
dec
mov
movsb
push
adc
xchg
add
pop
insb
add
in
pop
mov
je
into
and
cld
xor
mov
add
mov
push
lock
outsb
imul
jo
jl
push
inc
push
cmc
call
xor
outsl
ja
pusha
or
mov
outsb
dec
jmp
add
lret
or
ss
iret
rclb
push
dec
push
inc
insb
leave
stc
lcall
mov
adc
pop
or
pop
mov
or
sub
push
dec
jno
movsb
jbe
arpl
jle
lcall
jmp
test
pop
lods
cmp
fldt
cmpsb
clc
xor
dec
call
push
fdiv
inc
lret
pushf
sar
out
sub
ljmp
push
push
pop
in
int
iret
or
sub
mov
das
mulb
mov
mov
mov
leave
in
int3
and
scas
push
mov
jnp
xchg
adc
inc
xor
inc
outsl
dec
jo
sti
adc
xor
aad
call
jb
push
push
outsl
sub
sbb
sub
push
notl
jne
scas
dec
jo
mov
cmp
lcall
xor
xor
lret
inc
jmp
xor
xor
xchg
sub
or
xchg
aad
repz
or
lret
js
and
add
jns
xchg
hlt
int3
les
mov
addr16
jae
pusha
test
mov
mov
loop
sub
push
push
xchg
xor
mov
pop
fcoms
jmp
mov
clc
mov
xchg
dec
mov
out
adc
lcall
int3
mov
orb
test
mov
outsl
lock
mov
push
es
jb
pop
push
fcmovnbe
jb
or
bnd
dec
outsl
bound
sub
adcb
clc
leave
adc
push
sub
or
xchg
adc
test
pop
pop
jge
fdiv
and
mov
cwtl
fisubs
enter
arpl
lea
rorl
dec
imul
pushf
ss
cwtl
mov
dec
in
sbb
iret
dec
or
pop
lock
int3
or
mov
std
inc
sar
mov
mov
hlt
lret
call
dec
sahf
mov
ja
and
or
cmpsl
add
xchg
mov
xor
dec
xor
dec
sbb
pop
add
testb
call
in
mov
mov
stc
shlb
scas
rsm
fildll
push
shlb
mov
test
in
push
mov
fst
xchg
lea
jno
int3
adc
ds
sub
int3
shlb
adc
pop
mov
xor
add
adcl
in
cmp
lods
pushf
enter
mov
mov
std
test
sbb
movsb
cmp
data16
add
mov
nop
idivb
push
xor
pop
int3
lret
mov
stos
out
mov
test
cmp
fists
jne
lea
sbb
pop
lock
adc
jb
jae
mov
mov
mov
cwtl
mov
movsl
sbb
test
aas
popa
and
pop
lret
xchg
movsl
xchg
lret
hlt
cmp
mov
adc
clc
insb
and
push
fwait
lcall
sbb
push
push
dec
decl
aad
outsb
pop
mov
mov
out
insb
push
imul
bound
cmpsb
loopne
push
int3
mov
mov
std
mov
push
cmc
sub
mov
push
dec
mov
inc
movsb
cltd
push
pop
mov
imul
sbb
mov
nop
sti
dec
adc
xchg
jb
fcomps
and
out
jmp
jae
push
or
pop
hlt
jb
int3
xchg
movsb
inc
push
cmc
neg
aas
enter
ja
pop
outsb
in
pop
aam
sbb
mov
xchg
test
fstpl
lret
xor
pop
lret
add
xchg
in
movsl
mov
mov
inc
cmp
cmp
jo
in
lret
popf
pop
outsl
je
mov
and
test
and
pop
shlb
xor
sbb
cwtl
imul
xchg
punpcklbw
dec
in
push
jnp
pop
push
addl
sahf
pop
adc
mov
push
jne
loop
icebp
mov
cmpsl
xchg
pop
popa
fldt
push
sti
fnstcw
ret
les
mov
add
jg
jecxz
jns
inc
imul
sbb
and
xor
adc
imulb
shl
mov
mov
push
int3
div
cmp
dec
and
sbb
jae
jae
adc
push
lcall
xchg
push
int3
fcompl
dec
mov
cmp
dec
test
xchg
iret
mov
xchg
push
cs
pop
xchg
sbb
adc
mov
and
mov
mov
popw
adc
icebp
scas
or
or
int3
xor
mov
out
sub
mov
inc
popa
bound
mov
jmp
cmpsl
xor
xchg
push
inc
out
push
xor
jmp
mov
scas
mov
and
inc
pop
fninit
popf
negb
out
fiadds
out
sbb
add
call
mov
sbb
nop
dec
fisubrl
mov
hlt
fwait
sbb
lds
popa
jae
dec
sub
sub
enter
xchg
dec
mov
jmp
cmp
push
inc
bound
leave
ror
cmp
and
sbb
mov
mov
jmp
mov
dec
test
pop
call
xchg
push
adc
jne
mov
mov
mov
and
test
repnz
jmp
push
xchg
pop
push
sbb
pushf
dec
lret
daa
lds
repnz
int3
ret
fisttpl
inc
sbb
movnti
std
into
inc
xchg
cmpsb
cmp
mov
push
bound
mov
imul
jecxz
sarl
clc
mov
inc
sti
jb
int3
sbb
ret
lds
mulb
scas
xor
push
xchg
test
cmc
std
dec
stos
jmp
and
andb
aad
jmp
pop
sub
inc
pop
pop
pop
pop
or
pusha
test
or
mov
ficomps
lea
xchg
adc
shll
sbb
andl
add
popa
or
push
adc
lret
fisttpl
cwtl
out
mov
pop
mov
pop
dec
fisubrs
mov
ret
sub
icebp
push
cmc
outsb
pusha
cmpsb
scas
movsl
jmp
mov
fs
xchg
xchg
rorb
mov
std
in
in
int3
mov
dec
mov
xor
sub
lret
aam
mov
jmp
pop
enter
outsl
sub
mov
sub
icebp
dec
xor
out
cmpsb
or
add
mov
cmp
cli
sub
mov
mov
cmpsb
mov
enter
orl
adc
sbb
outsb
xor
push
popa
loop
add
pop
adc
push
dec
pop
jmp
je
pushf
mov
jns
mov
mov
xchg
sub
pop
into
mov
xor
jl
push
fxch
push
jp
daa
adc
and
pusha
lret
inc
pop
ss
xor
aaa
imul
ljmp
sahf
mov
mov
xor
addr16
dec
outsb
mull
mov
xor
lock
or
jmp
mov
std
lret
inc
imul
cmc
push
sti
xchg
inc
sub
imul
xor
cli
into
cmpsb
adc
data16
pop
dec
scas
xor
push
fidivrs
sti
out
shr
adc
sbbl
pop
xchg
add
jecxz
inc
movsb
mov
push
neg
pop
stc
jmp
sub
lret
fidivs
adc
fsubrl
sub
inc
andl
sub
add
and
verr
jg
or
push
int3
inc
fidivl
push
dec
cld
and
jo,pn
mov
jge
add
inc
sub
jbe
and
cmp
xor
mov
or
dec
aas
mov
xchg
jmp
push
imul
out
mov
jmp
inc
cmp
icebp
or
adc
mov
and
out
xchg
cmpsl
mov
mov
jl
jg
loope
sbb
push
add
xchg
pop
dec
repnz
jne
lods
arpl
mov
mov
arpl
test
add
sub
out
sahf
xchg
int
iret
int3
and
xorb
sub
pop
sub
inc
pop
sub
xchg
loope
sub
sbb
shl
jmp
call
dec
jne
popa
mov
push
int
scas
divl
jecxz
das
push
mov
pop
iret
and
sti
inc
std
cmp
js
fnsave
sub
popa
push
xchg
xor
cmp
add
mov
shrb
mov
iret
push
jae
push
popa
mov
int3
sub
pusha
fdivrl
stos
jbe
push
mov
cmpl
push
sbb
cmp
mov
jae
popa
lret
mov
inc
sub
ljmp
mov
pop
pop
mov
sub
mov
imul
lock
outsl
mov
jecxz
subb
data16
stos
jge
jae
movl
push
rolb
pop
push
inc
sub
and
test
push
andb
sub
fstps
fildll
and
mov
pop
mov
mov
or
ror
sbb
push
into
xchg
xlat
xor
out
mov
test
test
pop
add
andl
testb
pop
int3
in
aaa
mov
dec
pushf
shlb
in
adc
scas
je
movsb
add
test
call
push
or
and
push
push
sub
mov
cld
test
sub
xor
repnz
push
cli
imul
fs
pop
cmp
scas
int3
dec
mov
jae
nop
inc
dec
and
mov
loop
sub
mov
adcl
or
cmp
add
iret
mov
stc
or
ret
test
cwtl
ret
int3
lcall
loope
cli
std
mov
cmc
lods
jnp
or
repnz
iretw
ljmp
fld
daa
push
add
and
dec
imul
dec
loop
cli
repz
xchg
jae
push
out
push
sti
ljmp
js
sub
pop
pusha
int3
mov
mov
xchg
inc
push
sub
mov
pop
jmp
mov
inc
mov
lret
cs
sahf
push
inc
lret
jl
inc
mov
or
sbb
sub
je
jo
insl
popa
push
iret
cmpsb
dec
clc
pop
repz
lret
dec
or
sbbl
pop
orb
pop
test
out
call
xchg
dec
leave
arpl
rcll
lea
mov
push
adcb
adc
sbb
sbb
add
lods
sub
je
or
sub
xlat
insb
std
sub
popf
pop
cli
repnz
lret
jp
in
stc
inc
das
jmp
and
out
scas
sbb
cmp
je
stos
inc
pop
lock
nop
lret
test
xor
in
jg
aaa
sub
adc
clc
mov
repz
adc
mov
bound
sti
repnz
pushf
mov
sbb
icebp
or
or
sbb
sub
adc
jae
cld
xor
inc
xchg
sbb
push
out
jno
sbb
mov
jmp
movsb
hlt
test
test
mov
jo
jl
sbb
add
inc
mov
mov
das
decl
test
dec
and
popl
movsb
cmp
pop
scas
mov
lret
jge
adc
jno
mov
add
leave
adc
jl
pop
enter
push
jnp
loope
enter
out
fs
push
push
jecxz
les
sbb
pop
inc
xchg
sub
lds
test
hlt
push
repz
pushf
push
ret
add
les
and
sbb
cmp
popf
sbb
cbtw
xor
lret
sub
bound
or
sbb
xchg
or
pop
test
arpl
lods
add
jns
mov
cmp
mov
inc
cli
sti
stos
mov
jp
sub
ss
adc
lret
enter
cwtl
push
fyl2xp1
lods
insb
add
popa
int3
push
fcoml
lret
pop
nop
mov
mov
fldl
daa
xor
lcall
dec
mov
inc
outsb
fists
sub
mov
int3
inc
movsl
and
push
ja
jae
pop
stos
int3
call
int3
dec
js
jge
outsl
aad
bound
shlb
lock
ja
xchg
div
rcrl
push
sub
outsl
adc
jmp
cli
das
pop
scas
cltd
sarb
in
jb
pop
mov
sub
hlt
iret
sahf
pop
mov
inc
pop
pop
or
adc
add
inc
push
push
fisubrl
inc
roll
and
ret
test
int3
dec
fldt
lods
fwait
sbb
loope
mov
jecxz
mov
mov
push
push
sub
outsl
test
jmp
cltd
stos
xchg
adc
mov
inc
and
out
stc
jg
mov
loop
dec
aas
lret
pop
sbb
pop
dec
mov
sbb
arpl
idivb
mov
mov
movsl
in
dec
scas
dec
shl
test
arpl
adc
or
dec
inc
icebp
jg
movsb
pusha
je
mov
pop
rcrb
jns
add
mov
mov
clc
and
pop
sub
in
inc
cmpsl
mov
push
mov
popf
cmpsb
mov
lret
xchg
add
dec
xlat
icebp
mov
xchg
sti
test
mov
fbstp
ds
mov
xor
push
test
cltd
cmpsb
mov
fisubrs
rdmsr
dec
mov
pop
cmp
dec
test
insb
test
test
mov
adc
pop
bndldx
cmc
ret
jno
xchg
push
mov
repz
lret
pop
sub
add
mov
or
push
in
xlat
ret
int3
jb
sub
mov
aaa
loop
mov
imul
xchg
pop
jns
dec
test
pop
mov
hlt
dec
out
jecxz
xor
aaa
lock
sti
xor
notl
add
std
shl
lods
and
stc
fistpl
dec
sbb
movsb
inc
dec
cmpsl
mov
pop
ds
mov
stos
int3
fs
ds
mov
aad
jbe
and
fsubl
mov
xorl
sarl
push
jae
test
xlat
out
lret
orb
ja
daa
cmp
sub
xchg
cmp
rcrb
pusha
mov
sub
dec
jl
dec
fisubs
push
in
sti
int3
enter
jb
or
imul
shlb
mov
mov
adcl
test
aas
add
loopne
cmpsl
push
xor
popf
cs
jge
and
movsl
pushf
or
dec
pop
clc
shrl
push
test
and
mov
pop
cmpsb
int3
mov
cltd
mov
sbb
jl
lcall
sub
test
pop
xchg
outsb
orb
mov
push
inc
add
push
aad
dec
lcall
insb
jnp
std
pop
lea
sub
jmp
negl
into
pop
repnz
lret
xorb
add
lock
dec
in
leave
test
dec
lahf
mov
loope
mov
sbb
imul
mov
jb
mov
cld
adc
hlt
ja
scas
inc
sub
or
repz
into
inc
aas
mov
outsl
xor
dec
enter
and
lret
jp
xchg
movsb
pop
xchg
stos
mov
push
lret
pop
push
inc
bound
mov
jbe
jb
addr16
mov
pop
int3
fcmovnbe
daa
fwait
test
xchg
push
and
push
ret
lods
add
adc
movsl
push
hlt
mov
orb
push
dec
xor
xor
xchg
cld
dec
adc
pop
lret
push
stc
cwtl
xor
rolb
mov
adc
add
fsubrs
xor
mov
mov
pop
push
dec
or
pop
xor
imul
push
or
mov
add
sbb
lock
cmp
hlt
hlt
cld
add
stos
lods
lret
pop
faddl
jns
imul
gs
or
sub
xchg
adc
and
xor
or
and
clc
jecxz
out
dec
xchg
loope
aam
fnstsw
clc
inc
sbb
out
mov
adc
jl
mov
cwtl
pop
ljmp
xor
scas
pop
add
jnp
adc
xchg
push
add
lret
sub
xorl
mov
mov
mov
mov
push
je
push
push
jbe
int3
jo
cmp
sub
sbbl
or
jbe
imul
jae
ss
inc
mov
out
in
andb
pushf
adc
cmp
inc
cmp
mov
es
mov
movsl
and
sti
xchg
mov
divb
xor
mov
dec
pop
mov
xor
dec
fcoml
jle
or
lock
dec
mov
stos
int3
sub
mov
dec
icebp
test
mov
sub
push
push
loopne
xchg
sub
lret
sarb
pop
lea
fs
sahf
push
mov
nop
sbb
stos
jnp
mov
lods
jmp
fbstp
mov
sti
lock
int3
sbb
loopne
leave
decb
lret
rcll
dec
cmc
ficompl
mov
inc
cmc
adc
dec
mov
and
ret
in
sbbl
or
sub
add
stos
pop
mov
push
xchg
je
mov
outsb
cmpsb
push
adc
clc
imul
mov
test
xor
je
int3
pop
popf
adc
xchg
mov
mov
fistpl
arpl
lret
mov
xor
int
in
test
inc
cmp
and
in
pop
mov
test
jne
dec
cs
dec
div
ret
in
mov
call
in
bound
test
arpl
push
xchg
popa
mov
call
jo
push
cmp
xchg
push
int
and
sub
lret
mov
xchg
or
test
cmp
push
pop
mov
and
pop
jl
fiaddl
scas
push
sbb
push
mov
xor
int3
fists
add
cmp
les
fidivrl
stc
sbbl
jmp
test
jbe
test
mov
lret
push
hlt
movsb
into
push
mulb
mov
xchg
ljmp
push
stc
in
out
dec
es
mov
xlat
xchg
xor
xlat
xchg
pop
pop
cld
enter
mov
das
nop
stos
mov
mov
push
fs
adc
and
add
mov
notb
push
movsl
mov
cwtl
stc
push
xchg
xchg
mov
xor
pop
flds
or
inc
clc
mov
and
cmp
ljmp
push
insb
jae
mov
mov
and
sti
out
sub
xchg
push
shll
in
inc
mov
mov
inc
shl
mov
aas
mov
aam
dec
outsl
jo
aad
jecxz
in
push
in
outsb
je
ds
dec
or
push
sahf
or
ret
subb
lret
stc
in
in
inc
hlt
enter
jne
mov
push
and
and
fmul
cmpsb
jbe
xor
out
stos
xchg
lret
in
pop
jnp
test
mov
mov
mov
and
sbb
movsb
jno
xchg
cmp
mov
insb
das
test
and
in
stos
mov
and
mov
jo
sub
shlb
cmpsb
and
into
dec
sbb
adc
jo
arpl
lret
xor
in
int3
mov
cld
mov
shrb
pop
pop
mov
mov
cmpsb
fs
mov
sub
inc
jo
mov
pop
lret
mov
aad
pop
jmp
push
sbb
shl
int3
sarb
push
sbb
xchg
mov
xor
pusha
sub
in
mov
clc
aaa
add
inc
aas
ret
mov
and
and
fwait
cmp
insb
in
adc
jae
adc
icebp
loopne
out
int
dec
ret
push
cltd
add
mov
shlb
push
xchg
fsubs
push
or
jg
ret
ljmp
aad
mov
mov
insl
scas
loope
xor
das
lret
or
lods
aad
sub
and
insl
lahf
dec
test
sbb
rorb
cmp
fs
rorb
enter
ficomps
mov
arpl
dec
lret
inc
js
xchg
loopne
stc
mov
fsubl
daa
fildll
push
test
cwtl
ret
lret
repz
sub
ret
or
lods
int3
cmp
sub
mov
cmc
dec
push
push
lret
leave
xchg
aad
and
adc
imul
cmpsl
xchg
xor
sub
jg
mov
sarl
test
and
fmull
enter
pop
imul
lahf
or
cli
mov
push
push
push
pop
mov
push
iret
ret
icebp
shll
data16
dec
stos
push
and
cmpsl
inc
mov
lock
out
dec
bound
pop
cs
jecxz
ret
or
aam
pop
outsb
imul
and
sub
pushf
mov
and
and
mov
and
fstps
outsl
mull
pop
lds
fstpt
and
mov
sbb
push
dec
xchg
pop
add
enter
xor
sbb
xchg
arpl
pop
and
mov
push
push
push
sbb
test
movsb
mov
outsb
push
cmc
dec
lods
sub
pop
mov
mov
pop
push
mov
mov
test
out
sti
std
fstpt
fs
int3
add
xor
into
xchg
repnz
add
stos
stc
sub
scas
sbb
push
call
cwtl
jecxz
cli
imul
fisttps
fisubl
js
leave
nop
mov
int3
sbb
and
arpl
lods
neg
mov
pop
dec
jmp
pop
inc
outsl
subb
jp
roll
inc
add
lret
out
sub
clc
lods
adc
mov
pop
mov
shll
mov
pop
mov
mov
mov
mov
mov
jae
insb
lret
sahf
movl
sahf
sbb
std
adc
std
data16
lea
sbb
and
jo
lods
lock
pop
rcrb
cli
loopne
jb
or
popa
cs
lret
jno
mov
pop
mov
inc
mov
daa
imul
aas
dec
lret
call
inc
jo
jmp
int3
shll
iret
repz
movsl
das
pop
adc
mov
or
ljmp
icebp
mov
movsl
sbb
fstpt
std
push
imul
stos
mov
sbb
add
pusha
je
pushf
jne
and
cmpsl
mov
jp
cltd
mov
mov
movsb
ret
subb
add
push
pop
xchg
mov
mov
inc
je
jmp
es
push
cmp
pop
fcmovnu
and
dec
mov
jle
and
int3
and
clc
push
addr16
jecxz
imul
pop
mov
sti
jns
xchg
dec
mov
and
ljmp
dec
fstpl
and
cld
push
aaa
stos
out
sbb
sub
cmpxchg
testl
dec
mov
mov
and
shlb
sbb
sbb
xor
dec
cmp
arpl
and
int
inc
ljmp
pop
push
inc
daa
add
mov
shl
enter
ljmp
mov
rcr
adc
clc
loop
push
daa
js
jecxz
mov
xchg
mov
imul
movsb
push
cmpsb
rol
orb
adc
int3
mov
lea
pop
stos
dec
push
scas
hlt
mov
fistpll
jnp
out
add
repnz
test
xor
sarb
js
cmpsl
int3
xchg
rorl
mov
mov
cmc
mov
iret
mov
xchg
jp
test
aaa
dec
sub
andl
xchg
insb
addr16
daa
imull
or
adc
test
cmp
and
mov
enter
test
pop
xchg
mov
pop
jmp
xchg
mov
mov
jno
mov
test
enter
hlt
xchg
or
adc
aad
call
jg
pop
xchg
hlt
inc
ljmp
mov
jbe
aad
xchg
adc
jp
cmp
outsb
sub
mov
mov
daa
into
xchg
bound
in
lret
je
xchg
cmp
jbe
enter
mov
add
js
dec
aad
js
les
push
pop
cmpsl
stc
jno
xchg
ljmp
jmp
lods
mov
pop
xor
mov
or
mov
shrb
loope
add
leave
dec
cltd
cmp
xor
add
push
sti
jmp
loope
adc
pusha
dec
jecxz
andl
outsl
stos
aas
pop
ja
ds
sub
lods
addb
adc
sbb
mov
inc
aam
loop
sub
out
std
lods
shr
push
nop
fs
push
outsl
cmp
cld
fidivs
lods
lfs
stos
push
out
aas
inc
xor
fdivrs
cmp
push
add
mov
cwtl
mov
cld
mov
pop
test
add
or
mov
aam
ljmp
insb
rorb
pop
cmpsl
cmc
cmp
add
and
mov
jae
lea
jmp
or
out
mov
lahf
in
mov
xor
mov
pop
rcrl
arpl
dec
inc
jg
mov
cmpsl
xor
jns
mov
out
dec
adc
xchg
xchg
divb
aas
cmp
sbb
dec
cmp
jbe
jo
popl
outsb
lock
and
and
mov
rcrb
inc
push
mov
ret
jno
pusha
xor
popf
adc
inc
popa
popl
push
in
cmp
add
outsb
shlb
cmp
les
mov
dec
mov
inc
jae
sub
cli
xor
xor
ljmp
dec
jno
mov
and
sub
roll
pop
xchg
and
fnstsw
jmp
ret
test
push
cmc
lea
repnz
sti
xchg
pop
shlb
dec
sbb
out
mov
mov
inc
mov
mov
jae
loope
fs
stos
andb
mov
mov
jecxz
insb
inc
dec
lret
push
pop
cmp
pop
mov
push
hlt
or
jnp
lahf
jo
fs
je
mov
sbb
or
inc
ds
cmpsb
stos
push
pop
neg
mov
dec
xor
testb
ffree
pusha
or
push
pop
cs
scas
cltd
mov
out
mov
adc
lods
outsb
js
mov
rcll
fbstp
out
lods
sub
push
orb
es
xor
cld
and
sub
cmp
jb
xor
ds
jmp
xchg
push
mov
pop
iret
stos
inc
btrl
adc
scas
sub
aam
xchg
es
mov
lahf
test
mov
inc
sbb
cmp
cld
or
mov
xor
dec
mov
pushf
adc
xor
fwait
cmp
cmp
mov
pop
dec
mov
xchg
mov
or
jge
push
inc
lret
out
fdivs
je
xor
sbb
scas
lea
push
cmp
imul
sbb
xchg
mov
ljmp
sarl
xchg
pop
or
mov
fisubl
inc
mov
sbb
aaa
jp
pop
mov
jb
test
xchg
out
mov
rcrl
add
fcompl
aam
jne
mov
mov
adc
sbb
js
js
popf
mov
lock
inc
jae
push
lods
mov
push
outsl
jp
sub
jmp
sub
sahf
dec
sbb
fiaddl
push
sbb
lods
out
addr16
in
out
pop
adc
aas
mov
fidivl
aaa
mov
sarb
das
pushf
cmp
movsb
and
add
scas
lods
dec
push
mov
les
mov
sub
loope
inc
adc
jp
jnp
loopne
push
mov
adc
pop
hlt
push
out
mov
jno
pop
ljmp
rol
shlb
dec
push
mov
out
daa
bnd
popa
lods
std
divl
mov
hlt
xchg
cmp
push
xchg
shll
jae
aam
adc
push
out
mov
mov
cld
cld
aam
lds
push
sub
push
fisubrs
and
inc
jb
add
push
jp
loopne
fbstp
scas
inc
and
and
xor
mov
cmp
pop
test
mov
mov
mov
sti
mov
add
dec
in
push
pop
clc
mov
sub
sbb
and
cmpsb
mov
mov
cmp
jo
out
imul
das
cmp
sbb
lock
pop
push
stc
out
cmp
cmp
mov
int
notb
jns
fs
stos
fwait
mov
outsl
xchg
sti
xchg
js
adc
add
mov
or
fdivr
outsl
adc
dec
push
cmp
lods
hlt
mov
mov
xchg
mov
add
lret
lret
add
divl
in
mov
adc
cmp
and
push
mov
hlt
lahf
aaa
xchg
xchg
outsl
or
into
fdivr
test
mov
lods
push
outsb
lcall
cmp
xchg
scas
lods
adc
mov
je
mov
cli
outsb
ja
xorb
cs
inc
push
mov
inc
in
ljmp
pusha
loop
mov
pusha
bound
add
cwtl
push
scas
mov
mov
add
lea
adc
mov
pop
fdivrs
xor
mov
or
and
or
adc
or
inc
sbb
push
lret
xchg
enter
sub
mov
out
into
pop
push
lahf
aam
mov
sub
pop
inc
lea
inc
pop
lret
rcl
lods
mov
sarb
mov
out
xchg
add
jp
sub
outsl
pop
xchg
sub
in
shlb
sbb
leave
mov
jmp
add
int3
pop
mov
or
xchg
call
mov
cld
fidivs
xchg
mov
in
jnp
or
stc
mov
pop
jecxz
dec
or
rcrb
pop
mov
hlt
or
je
pop
or
test
test
dec
push
xchg
insb
xchg
mov
shl
inc
or
add
icebp
cltd
pop
pop
mov
inc
bound
push
push
pop
jae
mov
inc
rclb
mov
loope
mov
xchg
nop
dec
add
dec
inc
xor
adc
push
jle
dec
jns
sub
movsl
mov
or
pop
inc
mov
aas
enter
scas
sub
test
push
pusha
popa
out
outsb
mov
jno
ljmp
mov
aaa
cmpsb
nop
popf
roll
mov
loope
sahf
cmp
mov
lea
xor
adc
inc
cmpsl
mov
pop
sarb
xor
jne
sarb
out
clc
and
jle
mov
mov
leave
xchg
add
mov
das
cmp
mov
loopne
push
mov
std
jp,pt
mov
mov
xor
dec
mov
es
lods
jmp
lea
adc
cs
xor
adc
mov
xchg
pop
or
xor
shrb
mov
push
jmp
dec
mov
loop
pop
insb
test
or
push
add
jmp
notl
ja
sub
cmpsl
xor
mov
cmp
adc
sbb
cli
gs
movsb
xchg
pop
stc
mov
popa
sub
push
dec
pop
jo
pop
inc
push
test
rcr
dec
jae
test
or
and
xlat
iret
int3
mov
mov
jmp
mov
pop
lods
or
jae
or
fistl
cmc
mov
divl
insl
aam
push
and
faddl
js
push
dec
test
lret
repnz
push
jne
push
pop
call
clc
add
call
mov
imul
lea
sub
xor
add
imul
lock
sub
jp
jns
xchg
cmp
jbe
movsl
scas
push
dec
sahf
fistps
paddd
shl
sub
mov
adc
stc
jno
lret
bound
fnsave
pop
arpl
pop
mov
adc
and
mov
and
mov
sbb
test
lret
xchg
cmp
xchg
mov
lcall
cmp
cmc
xchg
mov
stc
cwtl
stos
sub
mov
mov
dec
jmp
xchg
dec
sub
fs
sub
lret
sbb
lret
andnps
out
test
dec
icebp
xchg
fwait
loope
and
or
sti
jne
scas
movsl
pop
imul
or
cmp
int3
pop
and
and
pushf
fs
loope
jae
mov
mov
add
or
inc
fs
cwtl
sbb
fistpll
out
aam
pop
pop
les
fsubrp
das
lods
sub
inc
clc
ss
fisubs
mov
jmp
xchg
pop
sbb
xchg
imul
sar
mov
pop
cmpsb
imull
cmp
gs
cld
push
xor
clc
repz
cmp
jno
sub
xchg
adc
mov
ror
mov
push
clc
jo
je
lret
jle
call
jae
nop
dec
fmuls
xor
fldl
mov
mov
xor
ds
pop
xchg
jns
fsubl
adc
aas
mov
pop
mov
sub
cmpsb
mov
hlt
pop
test
xchg
imul
subl
cld
scas
cmc
ret
mov
push
lret
push
push
mov
scas
xor
xchg
pop
into
lods
sub
js
jns
fildl
mov
out
xchg
xchg
jo
mov
xchg
push
imul
xchg
dec
outsb
xchg
aas
out
xchg
andb
int
xlat
call
ss
cmpsl
fistl
mov
lods
pop
xchg
mov
gs
jge
push
pushf
xor
inc
inc
imul
sub
sbb
ret
xchg
iret
ret
inc
insl
push
and
sub
into
pop
mov
repz
jbe
sub
mov
jmp
fcmovb
pop
pop
push
outsl
popa
push
cmpsb
mov
adc
jb
sbb
mov
das
xor
daa
adc
cld
pop
lock
add
or
and
int3
dec
mov
lods
jg
popf
jno
xchg
popa
pop
inc
inc
push
sub
jb
or
out
pop
fwait
add
stos
cmc
int3
xchg
push
sub
mov
mov
mov
in
loop
push
ret
notb
in
mov
push
xor
addr16
lods
lret
xchg
xor
and
das
fcmovnbe
imulb
dec
sbb
pop
cmp
adc
addr16
inc
xor
outsl
sbb
adc
lock
inc
mov
test
sub
pop
push
lock
in
loopne
pop
pop
int3
mov
mov
jmp
fistpll
outsb
dec
mov
pop
cld
cmc
cmp
sub
push
mov
dec
jne
dec
rcrb
xor
adc
lock
mov
mov
and
xlat
mov
lods
into
stos
ret
mov
mov
sub
sbb
mov
loopne
je
or
xor
pushf
mov
jle
cld
jns
outsl
or
imulb
sbb
stos
scas
fbld
mov
pop
cmp
jg
test
push
push
loope
mov
scas
scas
mov
pop
pusha
mul
lods
stc
cs
stos
lahf
js
push
shl
loop
mov
daa
mov
and
sbb
bnd
lret
jnp
xor
sub
dec
jmp
and
insl
or
jo
movsb
inc
call
shrb
pop
jecxz
movzbl
jo
je
and
ficoms
sub
and
sub
test
xchg
xchg
and
xchg
sbb
cmovae
dec
mov
push
cs
lret
mov
imul
cmc
jno
push
jp
nop
dec
je
cmp
int3
rcr
jp
cld
fisubs
mov
jmp
sub
mov
int3
jns
loopne
shlb
test
sub
sub
shl
add
push
stos
xlat
and
std
imul
repz
fwait
mov
lods
push
hlt
je
jmp
xchg
xor
call
cmp
jbe
mov
push
inc
cwtl
sbb
fisttpl
adc
aas
divl
dec
cmpsl
add
fisttpl
dec
dec
add
push
pop
xor
sub
adc
out
cmpsb
mov
xor
mov
repnz
mov
out
int3
gs
push
fadds
dec
ret
cmpsl
adc
neg
dec
lods
pop
out
sub
sub
gs
cmp
sahf
aas
jl
insb
inc
sbb
into
xchg
aam
repnz
adc
bound
xchg
ds
aad
repnz
scas
xchg
lret
push
sbb
add
das
lea
push
sbb
add
cld
and
ret
xor
mov
cmpsb
mov
sub
pop
push
xchg
imul
mov
jmp
icebp
mov
sbb
push
xchg
mov
or
jecxz
out
xor
inc
mov
push
setle
int3
hlt
in
out
mov
push
not
in
and
cmp
xor
test
stos
loope
jmp
out
sub
jecxz
scas
dec
mov
adc
or
dec
lret
sbb
popf
pop
xchg
mov
xchg
idivl
aaa
xor
lods
cmc
mov
jo
adc
movsb
psllq
xor
xlat
call
lcall
mov
loop
stos
or
add
xor
hlt
aaa
adc
lret
xor
xor
xchg
xor
nop
mov
sbb
pop
mov
lahf
andb
cmp
or
ret
repz
pop
adc
sbb
xchg
cmc
dec
and
cwtl
or
xor
mov
pusha
xchg
pop
into
xchg
lock
or
adc
sub
cmp
mov
sub
inc
std
scas
and
xor
add
add
int3
daa
shlb
cmc
mov
xchg
sbb
test
push
jo
sbb
out
jne
jns
leave
sub
and
js
ds
push
fs
stos
and
loope
aam
pop
fisubrl
adc
lret
adcl
sub
inc
cwtl
xlat
mov
stos
cmc
add
int3
and
cmpb
jge
and
mov
aaa
pushf
dec
dec
aaa
lock
mov
adc
adc
scas
cmp
mov
jle
xor
jmp
das
sub
dec
ss
ret
inc
bnd
cli
add
cwtl
mov
mov
mov
xchg
sbb
xor
dec
sbb
push
inc
push
mov
mov
jle
mov
add
sbb
and
arpl
xchg
cmp
ss
and
repz
nop
or
pop
in
push
outsl
pop
fxch
push
add
xchg
lret
jns
adc
cmp
insb
subb
jno
adc
dec
xchg
lock
and
mov
fsubr
push
aas
push
shlb
mov
mov
rorb
adc
cmp
push
xchg
clc
test
out
push
lahf
pop
add
popf
div
mov
xchg
xchg
movsb
ficomps
enter
mov
movsl
es
jmp
ja
clc
and
aad
cwtl
xor
mov
mov
in
fs
fisubrl
jae
pop
jb
xor
sbb
in
cmpsl
xor
test
xor
push
jb
xlat
fstps
jmp
aam
mov
insb
in
sub
or
lods
mov
addr16
movsl
mov
into
scas
jg
lock
mov
mov
sub
add
jl
mov
ljmp
jo
adc
call
addr16
mov
and
aad
pop
out
xchg
in
mov
xchg
das
lret
push
or
sub
and
dec
enter
int
movsl
lods
dec
rcrl
lret
ret
mov
stos
dec
lcall
mov
xor
cmp
lds
dec
push
out
dec
jmp
mov
repnz
arpl
inc
addr16
xor
enter
mov
xchg
popa
push
lods
xor
push
mov
js
adcb
sbb
and
xor
sbb
pop
inc
mov
xchg
dec
ret
in
push
xchg
imul
repnz
aaa
xchg
push
mov
mov
imul
and
jb
push
sub
inc
adc
mov
lret
fildl
pop
int
pop
mov
mov
adc
dec
push
dec
scas
rcll
sub
int3
test
and
shll
lds
repnz
xor
mov
sbb
dec
dec
in
in
pop
sbb
stos
je
mov
pop
push
add
adc
push
sbb
loope
sbb
cmp
mov
push
sbb
je
add
mov
add
dec
jg
mov
push
mov
addr16
iret
lret
inc
jg
xchg
out
flds
out
neg
mov
aad
push
pusha
or
fstps
pop
dec
xor
pop
scas
lret
popa
pop
pop
jne
adc
jecxz
mov
dec
decb
cmp
add
add
ret
lds
inc
jnp
cwtl
dec
jg
adc
lods
bound
jns
inc
or
xor
daa
movsl
or
mov
mov
push
idivl
jo
in
jg
add
mov
jmp
test
cs
inc
les
cmp
repnz
pop
fdivrl
stc
push
cmp
or
add
mov
xor
insl
mov
cmpsl
or
jp
adc
shlb
sahf
lret
andb
aas
push
xor
cmp
sbb
sub
pop
test
je
out
add
jb
fcmovne
xchg
mov
pop
je
mov
std
lock
fdivs
cs
les
aaa
imul
outsb
in
mov
icebp
inc
fcompl
adc
pop
mov
and
das
arpl
xchg
sub
les
or
mov
cwtl
mov
cmp
cmpsl
es
jmp
pop
cmp
repnz
pop
pop
call
or
xchg
inc
sbb
lret
push
fucom
lds
arpl
out
cmp
cwtl
ljmp
inc
jp
mov
mov
sbb
out
jmp
mov
jnp
and
mov
cs
repz
fwait
mov
xchg
cmpsl
jne
mov
sbb
xor
stos
ret
xor
popa
jb
sub
aam
and
dec
xchg
mov
movsl
pop
lock
scas
subb
cmp
test
lret
test
push
pop
imul
mov
out
mov
ficoml
mov
add
jp
mov
repz
lret
stos
nop
pop
insb
popa
sub
sbb
jecxz
fnstenv
fwait
sub
in
sbb
sahf
js
push
xchg
lret
cli
inc
lds
xchg
and
xor
pop
dec
sub
pop
rorl
popf
jp
outsl
ss
xchg
cli
sbb
or
daa
mov
xchg
adc
sbb
jle
or
mov
ror
rcrb
push
mov
and
add
inc
adc
adc
push
xor
dec
cmpsb
imul
mov
dec
mov
push
mov
js
cmpsb
adc
xchg
mov
push
pop
rolb
push
ljmp
inc
adc
test
pusha
popa
jo
stc
into
xchg
sbb
jb
mov
pop
and
xchg
pop
int3
fwait
cmc
xor
xchg
cmp
or
out
pop
in
test
hlt
stc
addb
mov
rol
lret
nop
lcall
push
cwtl
pop
loopne
leave
loopne
adc
mov
mov
fsubs
aam
je
sub
sbb
insb
push
mov
fs
lods
aas
xor
int3
jb
lret
cmpsl
imul
cmpb
push
cmp
cwtl
es
add
clc
adc
pop
adc
pusha
insl
jns
or
and
test
mov
xchg
mov
push
sub
pusha
popf
hlt
dec
iret
hlt
xor
xchg
cld
daa
cmc
cmp
lret
add
idivl
repz
test
mov
sub
sahf
in
sbb
mov
push
cld
or
scas
mov
pop
enter
sbb
leave
dec
sub
sbb
test
mov
mov
push
stos
xchg
xor
je
lret
rcrl
jecxz
push
jbe
sahf
cmp
popf
cli
mov
pushf
sahf
sbb
int3
jg
mov
mov
movaps
push
mov
int3
inc
jmp
scas
pusha
lret
sub
add
mov
aad
test
push
es
mov
jl
pop
popa
xchg
cli
dec
and
inc
mul
dec
inc
jns
sbb
cwtl
ss
cmpsl
jnp
mov
adc
loop
lret
int
int3
adc
pop
sub
movsb
xchg
inc
in
mov
not
push
add
jne
rorb
mov
das
pusha
cmpl
lods
rorl
mov
ja
sub
lcall
lret
pop
call
loope
stos
in
sub
inc
test
mov
pop
pusha
insb
lods
pop
loope
mov
aam
testl
pop
inc
test
test
pop
adc
adc
aad
lods
mov
xchg
gs
imul
popa
sbb
imul
mov
je
lcall
enter
andb
loope
les
or
sub
mov
data16
push
add
jle
adc
icebp
imul
fistpll
movsb
cmp
test
je
and
aaa
inc
mov
adc
cmp
insl
jmp
xchg
and
repnz
rcrl
cmp
xchg
mov
rcrb
fnstenv
mov
jbe
mov
jbe
out
push
jb
int3
test
int3
push
pop
imul
orb
lret
fiadds
ficomps
xchg
jnp
push
mov
xchg
mov
mov
outsl
scas
stos
or
imulb
lock
inc
sub
je
inc
xchg
negl
push
int3
adc
loopne
ret
add
int
adc
inc
mov
push
pop
or
pop
mov
gs
dec
scas
lret
aad
jb
sbbl
xor
les
xchg
push
mov
adc
pop
dec
out
arpl
dec
sbb
mov
mov
or
cld
enterw
push
mov
and
xor
dec
enter
pop
mov
adc
in
and
pop
nop
jo
push
jbe
dec
add
jp
mov
lds
mov
ljmp
scas
xchg
sub
push
cmc
jl
outsb
lret
pop
ret
and
mov
sti
xor
cmpsl
popa
xchg
dec
int3
mov
push
xor
mov
pop
sub
adc
mov
lea
ja
dec
mov
mov
and
jae
cmc
and
mov
std
out
mov
loopne
outsb
mov
mov
fcomp
mov
push
add
push
mov
cmpl
fidivs
and
xor
push
xchg
dec
call
xlat
mov
pop
xor
inc
push
int3
clc
loope
dec
sbb
lcall
aad
mov
int3
cmp
js
movb
lret
jno
xlat
bound
xor
cli
pop
pop
xor
les
mov
lret
nop
xchg
xor
in
dec
sub
pop
ret
bound
lret
imul
nop
rorb
xchg
aas
inc
rcrb
out
mov
xlat
aam
pop
cmpsb
les
adc
lret
shrl
data16
call
into
loop
and
stc
rorl
jae
dec
cmp
push
pop
std
push
push
imul
push
push
int3
mov
ljmp
mov
fcmovbe
ds
jb
mov
or
rcrb
aad
lcall
pushl
enter
mov
dec
adcb
sarl
add
into
cmc
sbb
xchg
mov
mov
flds
xchg
inc
mov
arpl
lret
lods
fwait
push
and
scas
stos
lret
fldcw
rorb
stos
popa
adc
popa
fadds
popa
dec
es
mov
lret
push
pop
and
jl
mov
enter
or
popf
testl
add
add
sub
add
scas
and
xchg
in
lret
adc
sbb
not
jo
push
xor
cwtl
divps
push
adc
ss
dec
pop
or
sbb
dec
clc
mov
mov
xlat
in
mov
jno
add
jmp
arpl
aam
xor
xchg
stos
and
mov
or
xchg
jnp
inc
xor
int3
in
div
cs
pop
lret
mov
in
shlb
ja
jg
daa
cld
stos
popf
pop
mov
and
inc
int3
outsl
lock
cmp
xchg
test
loopne
mov
jl
push
std
in
insb
les
fimuls
mov
mov
dec
jp
xchg
inc
fs
ds
neg
outsb
xor
int3
sbb
insb
inc
lods
int
cmp
xlat
mov
repz
add
aas
jne
push
lret
aam
repnz
cld
das
test
mov
dec
add
stos
jmp
stos
lret
pop
leave
ret
int3
lcall
lods
sti
jp
fcompl
jg
mov
jns
cmp
loop
ret
lret
jnp
test
cld
sbb
mov
int3
iret
sbb
stos
incl
enter
sbbl
and
mov
push
jno
inc
das
push
lods
lds
mov
cmp
sahf
inc
roll
pop
mov
jecxz
mov
bound
shll
and
dec
int
mov
jp
sarb
jl
jmp
jl
int3
in
fwait
or
lds
push
jo
mov
punpcklbw
mov
push
pusha
mov
aad
sahf
sbb
test
push
test
pop
lret
nop
out
jno
xchg
sbb
lcall
xorb
xchg
mov
mov
sub
imulb
mov
sbb
pusha
mov
adc
stc
cli
push
xchg
mov
push
out
in
int3
jo
sbb
popf
jmp
fildll
pop
je
pop
das
pop
ljmp
lea
gs
jns
cli
shl
mov
pusha
mov
stos
js
dec
adc
mov
imul
cli
iret
aaa
loop
and
test
mov
popf
fildll
mov
daa
mov
cld
or
xchg
cmp
jo
mov
sub
arpl
mov
jae
test
mov
dec
mov
push
mov
imul
sub
rolb
adc
and
es
xchg
sub
mov
je
mov
stos
inc
lods
dec
adc
inc
xchg
xchg
aas
nop
jnp
adc
dec
test
add
in
mov
mov
pop
in
mov
iret
decb
dec
ret
sbb
xor
push
adc
push
xchg
mov
xor
mov
cs
xchg
sbb
aas
cmp
mov
lahf
stc
shl
lret
test
stc
adc
jno
pushf
mov
scas
adc
les
mov
lret
nop
push
movsl
pop
inc
mov
movsb
sbb
in
movsb
xor
adc
sbb
hlt
jg
pop
mov
mov
fbld
cld
pusha
jae
xor
push
pop
mov
pop
ror
push
and
jb
loop
mov
push
cmc
jp
lcall
jb
je
jnp
out
push
aam
mov
icebp
int3
or
jb
out
jg
and
xor
xchg
push
shll
mov
pop
push
and
sbb
inc
cli
int
andb
dec
add
push
inc
xchg
sbb
iret
iret
cli
xor
repnz
clc
mov
cmpsb
xchg
jl
bound
lret
mov
outsl
pop
mov
lea
dec
sbb
mov
push
pusha
shlb
int3
mov
jno
push
pop
sbb
jno
dec
or
dec
aas
pop
in
int3
inc
add
mov
fists
fldz
add
sbb
dec
stos
les
cmp
mov
xor
mov
add
in
sbb
jnp
ret
ret
dec
aam
xor
pop
pop
ret
pop
dec
sub
divl
inc
xchg
push
jecxz
les
sbb
jne
mov
mov
repnz
arpl
daa
jl
jl
mov
push
mov
sbb
pop
add
les
std
sbb
ds
add
sbb
pop
dec
cld
popa
push
mov
js
inc
shl
mov
mov
movsb
fistpl
cli
ret
mov
das
dec
aad
lret
inc
jecxz
xchg
nop
mov
test
jecxz
sbb
mov
int
stos
xchg
cmp
das
lret
aas
mov
leave
mov
dec
call
sub
xor
xor
sbb
cmp
jp
or
int
testb
add
pop
mov
stc
xor
addr16
xchg
sahf
lret
mov
addr16
xchg
ret
and
mov
out
ja
popf
adc
popf
push
cltd
pusha
movsl
ret
cwtl
pop
fmuls
fistpl
shr
inc
loopne
fiadds
add
fidivl
insl
sub
sub
pop
sub
inc
dec
aaa
lea
cwtl
je
mov
mov
je
sbb
mov
ss
aaa
call
cli
xchg
mov
add
xor
ds
out
cmpsl
je
jb
lcall
add
and
sub
jb
or
lcall
push
or
adc
pop
cmp
sbb
xchg
mov
dec
sub
hlt
jne
mov
cmp
loopne
sarb
leave
in
push
std
and
mov
inc
setnp
sbb
inc
jl
push
mov
lds
add
popf
jp
xor
bound
add
ljmp
or
jae
push
shl
scas
incl
lahf
xchg
cmp
fimuls
xchg
lcallw
mov
inc
dec
int3
sub
loope
pop
test
test
adc
movsl
and
sbb
jbe
xor
outsb
daa
hlt
dec
out
push
or
test
xchg
jge
insl
std
mov
in
mov
sbb
cmpsl
mov
jecxz
mov
push
test
push
mov
mov
cmp
movsb
mov
adc
push
aas
inc
push
fs
push
and
out
add
test
add
pop
pop
or
cld
jl
fisttpll
mov
inc
push
and
mov
test
repz
cmp
imul
mov
imul
repz
mov
test
add
leave
add
clc
fwait
out
stc
loopne
jp
daa
inc
add
lea
sbb
arpl
gs
push
or
sub
jecxz
pxor
mov
dec
jp
scas
jne
jae
rolb
push
in
cltd
test
mov
jmp
int3
add
xor
filds
roll
fidivl
test
movsl
pop
repz
jmp
sti
cld
xchg
and
xor
rorl
test
ret
mov
push
mov
ss
jecxz
or
in
scas
lret
xchg
es
aaa
jo
push
inc
jb
dec
mov
mov
daa
or
notb
in
pusha
cld
imul
sub
mov
lahf
imul
mov
ret
xor
add
mov
sbb
push
inc
ja
mov
cmc
outsl
ror
sub
pop
lahf
idivl
popf
fadds
imul
mov
je
sbb
sub
int3
pop
aas
ja
adc
mov
lock
sbb
idivb
pop
mov
in
leave
popa
sub
add
xor
pandn
arpl
pushf
punpckhdq
push
pop
into
sbb
into
rcrb
stos
stc
xchg
in
sub
aam
dec
mov
pushf
ret
pop
scas
sub
xor
out
xor
cmpsb
dec
push
sbb
mov
movsb
test
jno
movsl
add
daa
sub
lds
sti
int3
leave
xlat
das
mov
lock
xor
mov
push
push
xor
testl
cmp
cltd
lcall
pop
test
or
addb
pop
sub
es
mov
xor
push
out
test
cli
subb
out
mov
jg
xchg
repnz
jl
lcall
jne
push
leave
pop
xlat
test
push
loope
mov
sbb
in
pop
dec
push
mov
faddl
imul
cmp
popf
je
fucomi
xchg
imul
pop
cld
das
cmpsb
pop
les
pop
loop
mov
stc
ljmp
in
ficoml
push
lea
out
mov
pop
ss
xchg
xchg
popf
pop
hlt
sub
push
stc
mov
popf
loopne
outsb
jmp
mov
sub
and
cwtl
rcrb
cmpsl
mov
arpl
lret
or
mov
inc
sbb
add
pushf
sbb
sub
push
hlt
test
int3
xlat
jnp
adc
aaa
shrd
sub
scas
int3
loope
mov
pop
pusha
ret
push
insb
js
int3
mov
mov
mov
or
movsb
movsb
bound
cs
lret
js
mov
and
out
pop
stos
pop
shufps
mov
int3
and
fs
fs
push
pop
mov
sbb
fs
push
imull
xchg
jae
dec
movsb
jbe
or
or
xchg
popf
cli
stc
enter
nop
jl
pusha
xor
jp
sub
xchg
rcl
scas
in
sbb
xacquire
push
inc
pop
stc
cmp
stos
aaa
and
fstl
push
pop
pop
js
or
jmp
xor
aas
sbb
xlat
popa
inc
int3
cmc
shlb
shr
xchg
fbld
jge
adc
nop
push
clc
ret
lahf
lret
push
les
jbe
mov
fdivrl
aad
pop
pop
lsl
cmc
and
add
push
repz
pop
dec
test
jp
dec
adc
or
jns
mov
rclb
cwtl
mov
xchg
les
cmpsl
xchg
or
div
les
mov
outsb
sbb
xor
mov
scas
andl
pop
sbb
xchg
adc
xchg
push
stc
jno
jo
pushf
cmpsl
sub
bound
push
xchg
mov
dec
mov
cmc
jo
or
test
rorl
jbe
or
sub
stc
cmp
mov
subl
repnz
stos
inc
xchg
sbb
enter
clc
xchg
xchg
fisubrl
sub
rorb
dec
lods
sub
sahf
sub
xor
push
pusha
jg
jns
dec
pushf
imul
and
inc
mov
je
int3
push
out
and
loop
into
test
in
inc
neg
cmp
and
mov
mov
sub
adc
stos
xchg
mov
push
lock
and
mov
push
mov
mov
pop
int3
imul
cmpb
call
hlt
pslld
gs
outsb
repnz
out
dec
lods
call
cmp
xchg
push
jno
push
mov
loop
cmp
andb
ja
cmpsl
int3
sarl
jo
or
mov
aad
and
fimuls
xchg
lret
or
jecxz
ss
inc
add
mov
cmp
jp
ss
cmp
xorb
je
jnp
mov
xchg
das
into
sub
cmp
lret
and
loop
call
fimuls
dec
pop
or
pop
std
repnz
push
scas
or
push
add
lock
inc
dec
shrb
jb
cmp
lret
pop
ret
cld
cmpsb
cs
cwtl
push
jmp
imul
negl
mov
int3
filds
or
stos
sti
mov
pop
sbb
test
data16
popa
push
adc
shlb
out
dec
gs
dec
jae
xchg
inc
xchg
lods
push
mov
jne
scas
lea
test
fcoms
stos
int3
cmp
shlb
add
jb
dec
rol
push
cmp
orb
icebp
int3
insb
adc
and
insl
and
pop
or
xor
xchg
mov
bound
sub
sbb
shlb
pop
mov
js
mov
inc
cmp
pop
mov
mov
add
add
aas
cli
int3
adc
sbb
jge
fmull
iret
cs
or
adc
lods
dec
fsubs
fsub
adc
xor
addr16
out
mov
or
sbb
xor
sub
fldcw
inc
pop
pushf
aad
sbbb
fisubl
insb
jmp
xchg
jbe
gs
push
pushf
pop
movsb
cmpsb
fs
dec
inc
icebp
pop
jo
cs
mov
cmp
dec
lods
negl
fs
push
sub
test
test
mov
xor
mov
mov
lret
into
inc
jae
sbb
addb
pop
push
sbb
xor
fs
pop
pop
add
dec
jb
mov
xor
and
fadd
cmp
insl
in
jl
mov
xchg
sbb
cmpb
loop
inc
ret
fimuls
push
cmp
ret
or
push
xchg
xor
and
mov
jbe
and
jge
mov
mov
mov
xor
jl
idivb
mov
hlt
imull
dec
les
pmuludq
int3
frstor
cli
sub
jae
pushf
testl
pop
sbb
push
sbb
leave
sahf
call
ja
xchg
add
cwtl
pop
mov
sahf
cmc
push
lahf
dec
jmp
in
jno
aad
daa
and
sub
bound
jmp
xor
cli
imul
mov
aad
bound
sub
push
lret
lea
mov
sub
xorl
insb
lret
push
insb
mov
sbb
mov
scas
icebp
lret
das
push
inc
xchg
cmpsl
inc
sarb
lret
inc
stos
inc
aam
add
mov
mov
stc
sbb
int3
mov
pop
inc
iretw
push
in
mov
adc
imul
xor
xor
pop
and
test
int3
cmp
push
jo
push
mov
xor
rcrl
jg
adc
out
mov
stc
loop
add
mov
xchg
out
mov
fucomi
push
cmc
in
int3
jmp
pop
rorb
xchg
daa
stos
push
pop
pop
cli
add
fwait
dec
jo
sub
sub
push
js
adc
popa
aas
mov
push
mov
or
stos
mov
mov
stc
push
jmp
pushf
jl
into
pop
push
int3
lret
and
and
ljmp
addl
pusha
rcll
lea
mov
test
repnz
movsl
clc
mov
or
aas
inc
xchg
das
je
sbb
ret
push
rclb
je
lret
adc
inc
and
cli
jg
je
test
popa
insl
aas
imul
loope
mov
push
cmp
test
arpl
cmp
popf
loope
ret
std
pusha
lcall
movsl
push
gs
cmpsb
jg
loop
add
outsb
mov
cmp
and
jo
std
fmull
das
lret
nop
je
enter
adc
test
rcll
cld
cmc
sbb
pop
rclb
push
ret
adc
and
sbb
aaa
sub
sarb
push
pop
mov
int3
clc
cmpsb
xchg
xor
stc
or
outsl
or
int3
fsubs
pop
lret
leave
inc
or
lock
int3
xchg
or
insb
stos
push
pushf
in
push
push
int3
push
pusha
leave
jo
mov
scas
xor
shll
xchg
jb,pt
xor
mov
je
int3
xlat
loop
mov
js
int3
lea
fildl
mov
add
dec
adc
xchg
insl
fs
push
cmp
xor
or
cmp
loopne
inc
mov
dec
ficoml
push
add
dec
sub
test
pop
push
pop
loope
aad
and
and
test
pop
lret
lret
call
push
cmp
addr16
jg
sbb
and
movsb
adcb
mov
sbbl
repnz
mov
jbe
mov
test
mov
insb
push
cmpb
pop
sbb
repz
hlt
mov
cmc
jle
or
push
cmc
jmp
dec
cltd
mov
and
test
mov
mov
cmp
int3
mov
mov
ret
imul
pop
inc
ljmp
jnp
js
sbb
fwait
leave
or
and
xchg
cltd
test
cmp
mov
scas
jo
shlb
pop
push
and
int3
sub
cmp
mov
pop
out
ficoms
test
insb
pop
jl
xorb
push
ret
fbld
in
gs
aam
add
jae
movsl
in
jp
mov
jl
imul
adc
aaa
lret
dec
ret
loop
negb
jmp
das
punpckhbw
pop
loop
sbb
adc
out
sbb
sbb
dec
neg
lcall
les
mov
js
or
push
xchg
pop
mov
mov
adc
arpl
mov
movsb
in
test
mov
int3
dec
test
push
lret
xor
lea
ss
pop
xor
out
push
shr
lea
outsl
adc
hlt
push
rcr
test
push
cmp
push
mov
dec
push
cltd
xchg
adc
adc
ficomps
movsl
pop
aaa
add
mov
add
popf
jne
mov
xchg
fs
lea
data16
movsl
push
sub
pop
repnz
aad
push
aaa
ljmp
lods
add
mov
int3
es
jb
xor
cmp
fcmovnu
add
dec
mov
test
shrl
movsb
imul
pop
lret
jle
mov
xchg
push
jecxz
out
sahf
cli
insb
js
xchg
jmp
xchg
pop
outsl
mov
or
and
loope
add
add
mov
movsl
xor
aad
xchg
cli
add
in
pop
xchg
aam
add
pushf
adc
jmp
out
mul
cmc
jo
mov
jbe
rolb
lret
xchg
mov
imul
bound
and
mov
adc
dec
pushf
push
inc
push
icebp
and
cwtl
lea
iret
pusha
mov
add
mov
xchg
ret
adc
pop
cmp
jno
sbb
mov
dec
jae
mov
xchg
popa
scas
int3
push
fistl
lret
jae
pop
sbb
aam
adc
add
push
and
insb
xor
push
out
mov
jg
cmp
adc
inc
fidivs
and
lea
cmp
popf
movsb
sub
sbb
insb
test
icebp
cmc
xchg
hlt
cld
stc
aas
cmc
iret
and
adc
adc
ret
mov
shl
cmp
les
fcoml
call
sub
jns
jne
fidivrs
in
cld
insb
clc
movsb
call
add
bound
aas
push
mov
js
ror
push
int3
sub
xor
push
cli
and
fcoml
xor
pop
sbb
mov
mov
loop
ds
inc
dec
cmp
enter
and
movsb
dec
adc
stos
push
and
jle
les
test
dec
push
sbb
pop
test
sub
fisttps
inc
sbb
xor
inc
mov
push
out
je
dec
mov
mov
pop
cltd
xchg
int3
mov
jne
leave
loopne
call
sub
cmp
push
imul
int3
out
or
arpl
push
lods
xchg
daa
test
ret
push
dec
push
xchg
xchg
xor
add
jecxz
stc
jecxz
push
das
sbb
sahf
push
ds
popa
cmc
inc
push
mov
inc
dec
xchg
push
cmpsb
xchg
xchg
aaa
sbb
cmpb
dec
bound
idivb
lret
add
mov
and
adc
mov
stos
dec
out
cld
pop
ljmp
and
int
push
adc
dec
fs
mov
dec
dec
stos
jp
lahf
xor
outsb
not
stc
sub
arpl
hlt
fmuls
add
inc
test
in
mov
movsb
pop
dec
xchg
and
add
mov
shlb
mov
int
int3
mov
pop
rcr
pop
mov
cmp
mov
sub
rcrl
lods
in
stos
sub
call
xor
dec
lcall
dec
hlt
arpl
sbb
jb
cwtl
movsl
xor
mov
pop
cmp
shrb
pop
cmp
movsb
je
sbb
jp
push
out
std
adc
out
cli
orb
pop
scas
dec
fnstenv
push
int3
jle
push
mov
adc
mov
push
dec
rclb
cli
bound
jmp
test
pop
ljmp
ret
jl
daa
push
xor
cld
int
pop
nop
mov
dec
sarl
imul
enter
ljmp
inc
mov
lcall
cltd
cmpsl
repz
jle
sub
sarb
andl
adc
push
pop
fs
in
lcall
in
jo
inc
xchg
or
stos
mov
pop
ds
xor
into
sub
lds
pop
into
fwait
pop
xlat
movsb
mov
in
cwtl
pop
lret
into
cmpxchg
pop
hlt
mov
movsl
push
out
sbb
out
jl
sub
mov
iret
enter
mov
and
or
lret
jno
cmc
adc
pop
out
sub
cwtl
out
push
shll
insb
mov
testb
movsb
push
jb
adc
mov
scas
es
inc
loopne
int3
pusha
push
mov
fstl
shll
sub
add
shll
ret
lods
mov
push
negl
xchg
std
arpl
test
insb
out
or
sbb
mov
push
repnz
stos
std
cli
sub
scas
push
lea
cmp
pop
pop
shrb
dec
and
int3
add
inc
sbb
cmp
bound
sub
dec
cwtl
cmc
mov
stc
sbb
pop
pop
lahf
sub
or
insl
lods
and
les
inc
mov
repnz
sahf
push
add
push
pop
repz
add
insb
lds
xor
inc
test
test
aam
mov
arpl
jge
push
mov
xchg
leave
sbb
lods
psraw
inc
pop
inc
and
mov
shlb
sub
jp
mov
adcb
cmp
lret
fcomps
enter
mov
rclb
pop
jae
loope
fistpll
push
xchg
cmp
push
imul
int3
popf
jecxz
aad
cmp
push
xor
sub
xlat
push
inc
sar
adc
jne
js
pop
pusha
push
fistps
popf
sub
xchg
cmp
int3
pop
mov
in
arpl
pop
dec
mov
lret
mov
rep
arpl
mov
neg
adc
mov
and
hlt
sbb
mov
out
jnp
nop
fildll
pushf
int3
ret
pop
jb
sbb
or
xchg
insb
dec
jns
aas
push
mov
mov
sbb
xchg
daa
dec
add
and
and
mov
jo
push
and
push
or
cmpsb
add
nop
mov
push
sub
pusha
sbb
test
push
test
cli
sub
jmp
sub
fisttpll
mull
xchg
iret
mov
sub
mov
jg
adc
cmp
ds
mov
int3
xchg
fidivrl
pop
jle
dec
lea
ret
mov
test
or
sbb
pop
jge
andb
jecxz
out
mov
xor
mov
movsl
inc
stos
mov
fwait
js
mov
inc
in
ss
inc
mov
inc
jne
popa
sbb
sub
gs
mov
inc
fxch
lock
iret
stos
jns
leave
pop
mov
adc
pusha
int
sbb
jbe
mov
mov
pop
cli
lds
push
mov
mov
jp
mov
dec
outsl
lock
xor
mov
mov
mov
pop
stc
and
arpl
jg
jb
pop
add
mov
ja
aam
clc
and
pavgb
fidivrl
lea
movsb
xor
sbb
notl
and
mov
mov
xchg
inc
lret
xchg
mov
push
imul
pop
fs
and
pop
jg
out
push
stc
aaa
cmp
xlat
stc
sbb
lods
mov
test
cs
addr16
rclb
pop
loopne
mov
flds
pop
imul
adc
mov
aam
mov
lret
aaa
inc
aam
testb
outsb
mov
test
mov
mov
cmp
jmp
inc
dec
mov
je
and
xchg
jns
cmp
dec
mov
sbb
pop
and
push
cli
fdivl
push
scas
push
scas
pusha
cmc
pusha
mov
add
push
outsl
xlat
adc
cli
push
and
gs
dec
push
inc
test
and
stc
aam
es
int3
je
push
jb
shlb
jo
xorb
mov
jl
hlt
filds
sub
lret
jns
xchg
in
jmp
pop
jmp
hlt
adc
push
and
mov
fcmovbe
xor
jne
dec
or
or
stos
sub
mov
dec
es
pop
cld
fwait
arpl
lret
jnp
mov
rcl
xchg
sahf
and
jmp
sarb
or
xor
leave
mov
ret
push
pushf
mov
ds
or
add
pushf
lods
scas
outsl
stos
and
nop
inc
arpl
enter
aas
sub
rcll
cmp
je
pop
mov
add
pushf
imul
ljmp
xlat
shl
clc
jbe
fisubs
cmp
lock
cmpsb
andb
adc
add
push
adc
repnz
or
push
inc
mov
mov
stos
sub
mov
dec
mov
leave
fs
outsl
or
outsb
push
int3
add
mov
movsl
pop
xor
adc
xlat
fdivl
stos
and
inc
sub
jecxz
int3
sbb
iret
insl
ss
lock
loop
test
mov
push
mov
jnp
inc
mov
fcompl
pusha
popa
lods
dec
insb
pop
cmp
mov
sub
pop
adc
sub
pushf
jnp
sbb
cmp
std
xchg
xor
xor
into
add
adc
xchg
xchg
xor
mov
mov
fucomip
movsl
out
or
pop
cmp
push
rclb
sahf
rol
sbb
in
cmc
push
fwait
adc
and
cmp
push
in
lret
cmpsb
movsb
fildll
fnstsw
aas
mov
xchg
mov
cmpb
out
arpl
dec
mov
mov
dec
add
mov
mov
dec
add
xchg
scas
dec
aam
mov
xlat
sub
push
ss
insl
stos
int3
pusha
hlt
mov
xor
dec
aaa
jecxz
sbb
fildl
popf
push
push
xorl
dec
rol
xor
sbb
xlat
arpl
imul
sub
fbstp
xor
insl
out
adc
and
test
push
test
pop
iret
mov
jp
xchg
fucom
ja
push
jns
adc
jo
and
stc
ret
mov
xchg
mov
std
mov
addr16
fists
sub
mov
push
fs
aas
jecxz
mov
adc
mov
jmp
cmp
lret
orl
dec
roll
lods
xor
push
and
xchg
pop
inc
cmp
push
ss
ds
lret
in
xor
adc
adc
rorb
imul
mov
pop
pop
jp
pop
dec
test
je
inc
daa
mov
mov
xchg
mov
std
mov
or
lds
lret
push
jl
in
dec
icebp
les
out
sbb
cwtl
pop
icebp
xchg
xchg
and
mov
bound
lret
insl
and
xchg
jecxz
adc
inc
movsb
lcall
scas
repnz
repz
cld
shlb
dec
pusha
iret
sti
lret
shr
sub
sarl
cmc
pop
mov
push
mov
insb
nop
lods
xchg
push
xchg
scas
int3
and
stc
push
arpl
sub
xchg
dec
call
mov
pusha
pop
sti
lahf
out
sub
nop
xor
aaa
pusha
mov
fwait
xor
pushf
ljmp
stos
pop
int3
inc
test
cld
mov
ret
int3
cmp
pusha
cmpb
pop
mov
pop
sbb
xchg
pop
add
lret
psllw
cwtl
sahf
push
xchg
ds
cli
or
cmc
pmullw
fiadds
sub
stos
lret
in
fsubrs
aaa
inc
arpl
in
dec
push
gs
fildll
add
lret
loop
hlt
add
loope
pop
mov
and
pop
or
bound
lret
mov
mov
je
int3
cltd
and
adc
mov
and
fsubrp
fisttps
dec
push
add
dec
lock
sbb
cmp
adc
frstor
mov
stos
loop
push
mov
jecxz
pop
leave
sub
mov
call
and
pop
jp
jle
cmpsl
mov
ret
inc
cmp
ret
int
or
mov
cld
add
hlt
stc
mov
sub
test
shll
pop
mov
rorl
bound
add
fbld
sub
sub
repz
cmp
bound
fcmovu
sbb
stos
dec
adc
xchg
and
xchg
pop
ss
popf
imul
mov
inc
push
nop
in
mov
test
movsl
pushf
and
lret
iret
fisttpll
push
adc
pop
mov
jl
lods
mov
cmpsb
testl
ss
cltd
xor
mov
gs
fbld
xor
dec
mov
sbb
add
mov
pop
fldt
in
pop
repz
lret
pushf
lret
cwtl
or
mov
pop
mov
pop
jns
test
int3
push
leave
mov
inc
lret
rcrl
dec
je
int3
test
mov
push
insl
sub
mov
fcoms
std
ret
jmp
adc
push
in
jmp
imull
fsts
add
push
push
and
adc
lret
lcall
scas
push
div
pop
mov
mov
ss
fnstsw
mov
xor
mov
sub
in
movsl
dec
mov
cmpl
pop
test
test
loop
dec
sarl
inc
sub
sub
and
mov
cmpsb
popf
fmull
xor
imul
test
arpl
pushf
pushf
mov
bound
cs
mov
pavgb
shrl
pop
push
add
popf
push
mov
sbb
je
int3
dec
pop
add
lahf
lret
inc
adc
xchg
cli
test
sub
xchg
dec
in
cwtl
mov
or
jp
test
pop
or
test
xchg
je
popf
jae
add
aaa
fs
cmp
ss
push
cmc
lock
push
and
pop
xchg
mov
or
dec
dec
movsb
mov
movsl
push
sarb
scas
dec
enter
call
mov
cwtl
adc
or
xchg
or
push
test
lret
and
aam
push
lret
cltd
push
lret
and
js
ffreep
jne
frstor
mov
xchg
mov
inc
lods
rorb
lods
movsl
sub
stc
lods
push
sbb
stos
push
out
dec
pop
int
pusha
stos
cli
aaa
je
int3
in
inc
xchg
in
push
or
add
popl
sub
aaa
inc
sub
dec
test
dec
gs
sti
lock
icebp
pop
fistl
mov
jmp
jbe
and
loopne
mov
int3
cmp
cmpb
xlat
mov
decb
pusha
push
das
mov
sar
mov
scas
and
pusha
sbb
inc
xlat
fwait
andl
xlat
xchg
dec
enter
movsl
out
jecxz
pop
js
and
addr16
xchg
test
mov
dec
sub
pop
jbe
aaa
and
jnp
movsl
je
imul
test
xchg
insb
hlt
pop
push
adc
sub
xor
shufps
pop
das
mov
jecxz
and
movsl
cmp
cs
lret
mov
call
cwtl
mov
cwtl
fcomps
add
cmp
lcall
xor
lret
pop
push
icebp
je
fidivrl
into
int
sahf
lcall
arpl
loopne
mov
fmul
in
mov
cmpsb
and
xchg
divb
fadds
rcl
cmp
sbb
sbb
out
mov
in
imul
mov
push
imulb
or
mov
cmp
lds
dec
lea
push
cmp
sti
cwtl
sub
nop
mov
lock
test
test
dec
mov
lods
in
jae
adc
jl
push
add
and
jmp
dec
adc
enter
leave
lret
inc
xchg
sbb
sbb
loope
xchg
insl
pusha
mov
mov
xchg
int3
and
sub
mov
shlb
daa
and
pop
cmp
gs
xchg
xchg
icebp
fnsave
cmp
push
jb
push
pop
outsb
cmp
push
jns
lods
das
maxps
pop
push
or
sub
sbb
inc
dec
sahf
nop
push
out
dec
mov
movsl
xor
imul
cli
pop
ror
xor
out
sahf
sub
in
jae
add
clc
xchg
test
pop
mov
adc
cmc
xchg
cli
popf
lret
jns
ss
pop
imul
jmp
loopne
push
xlat
sub
pop
mov
fadd
bound
pop
bound
jmp
repz
lcall
mov
xor
aaa
adc
sub
sbb
mov
int3
test
ljmp
int3
add
std
lret
sbb
lret
test
and
sbb
and
xlat
jmp
ja
daa
es
jbe
mov
lea
adc
outsl
adc
mov
and
popw
inc
pushf
adc
test
test
jge
dec
xchg
xchg
aaa
mov
test
jge
cmp
scas
push
sbb
pusha
xor
stos
fs
mov
adc
xchg
add
out
aad
sbb
mov
adc
test
pop
aam
in
jmp
std
sbb
cli
test
arpl
push
pop
cmp
push
and
sbb
jns
outsb
push
pusha
pop
adc
repnz
xor
mov
xchg
mov
pop
jecxz
ljmp
pop
lcall
loopne
mov
lea
pop
test
or
test
dec
pop
leave
sbb
jbe
orl
add
mov
mov
add
repz
lds
mov
mov
pop
add
jne
movsl
sbb
sub
pop
fwait
push
mov
je
sub
sbb
popf
nop
add
ret
mov
js
jp
jb
jo
movsb
mov
xor
mov
sbb
push
leave
ret
dec
dec
mov
cmp
sub
xchg
sbb
repnz
jbe
cli
je
jo
pushf
push
scas
xchg
ljmp
pop
mov
ror
or
inc
mov
mov
movsb
cmpsb
mov
test
icebp
cmp
xor
xchg
mov
hlt
ss
gs
cmp
repz
int3
sbb
mov
mov
arpl
imul
lahf
and
lret
mov
inc
fldcw
lret
pusha
notl
arpl
add
mov
xchg
stc
call
push
lcall
mov
nop
jbe
xchg
push
js
jb
mov
jp
cltd
inc
pusha
rcrb
ror
xor
mov
les
sarb
jmp
test
xchg
mov
push
mov
push
cs
imul
cld
mov
or
stos
lret
pop
jnp
fwait
testl
loop
sbb
add
clc
mov
mov
cld
push
out
je
xchg
stos
notb
test
xchg
jns
pop
aas
xor
and
stos
mov
pop
shr
test
push
mov
test
mov
fcmovb
adc
jno
sbb
ds
ljmp
aam
std
mov
or
sub
stc
lods
push
test
int3
sub
jno
stos
mov
loope
lods
adc
adc
icebp
mov
jge
mov
mov
mov
jl
jne
aaa
lea
mov
neg
cmpsl
jb
rol
pushf
sahf
or
adc
stos
mov
jg
ljmp
xor
arpl
sub
fs
xchg
sbb
stc
mov
and
nop
add
outsl
push
lea
push
test
jp
mov
xchg
es
pop
mov
jl
mov
mov
dec
cmp
int3
jno
dec
repz
loope
sub
stos
dec
sub
out
lods
aad
fs
mov
sti
xor
hlt
cmp
xor
pop
mov
cmp
mov
or
imul
adc
pop
pop
jecxz
pop
xor
imul
lret
scas
xor
sbb
icebp
cwtl
mov
mov
add
cmc
outsb
pop
and
ss
je
mov
push
in
push
mov
mov
cmc
push
jne
ljmp
push
dec
insl
out
add
dec
cmpsb
loopne
gs
cpuid
out
or
add
mulb
stos
repz
and
sub
negb
imul
dec
dec
cmp
sub
stc
test
icebp
in
dec
lods
pop
test
shl
jp
out
dec
fdivs
mov
ss
and
pop
je
daa
push
filds
data16
leave
sub
test
or
xor
mov
and
add
cmpsl
loop
dec
stc
insl
cmp
inc
int3
xchg
cmp
mov
lret
roll
xchg
xor
repnz
inc
arpl
sbb
inc
mov
mov
insb
fildl
or
popf
dec
xlat
mov
jbe
adc
sub
push
dec
pop
lret
ror
pop
push
lock
push
lcall
imul
xchg
push
lods
adc
cmp
xchg
lret
push
jnp
jne,pt
ret
mov
push
das
insb
xchg
sbb
cmp
dec
int
das
in
and
pusha
mov
cwtl
aam
ret
out
clc
push
push
pop
xchg
and
mov
lret
lret
test
jae
and
mov
test
lahf
inc
ss
pushf
pop
jle
hlt
in
cld
jmp
es
mov
dec
imul
add
std
mov
pop
fisubrs
pop
inc
sbb
and
add
ret
and
sub
stc
sub
scas
cmc
jmp
cld
outsb
rorb
cmc
add
data16
fildll
and
into
int3
push
mov
and
pop
int3
lods
gs
loop
cmc
pop
dec
pop
call
fucom
in
negl
cmp
movsl
and
iret
dec
xor
sti
and
xchg
cwtl
add
add
arpl
sub
push
in
jle
enter
push
mov
dec
fbstp
lock
sub
adc
mov
mov
ret
pop
dec
push
movsb
and
push
das
insl
jne
pop
gs
addr16
imul
and
dec
not
and
movsb
cmovnp
loopne
add
lcall
scas
pop
sti
fwait
adc
scas
sub
icebp
stc
xchg
mov
je
sbb
int3
push
imul
cs
ss
add
test
lds
cmc
xor
mov
pop
lret
iret
sbb
ret
pushf
sbb
and
scas
stos
dec
out
aaa
jmp
push
andb
dec
cltd
fcompl
shrl
push
pop
ficompl
out
jecxz
mull
and
nop
pop
xchg
shlb
popa
mov
test
xor
cli
cld
dec
and
arpl
aam
test
mov
or
xor
jecxz
jno
arpl
jmp
sbb
int3
xchg
or
mov
inc
mov
push
inc
sbb
jbe
lret
cli
inc
xor
lock
push
mov
xchg
repnz
int3
sbb
dec
dec
pop
inc
aaa
push
mov
sub
jmp
xchg
jo
stos
cmp
std
or
pusha
mov
lret
sbb
jp
xchg
adc
inc
sub
outsb
xor
and
cmc
test
ficomps
sysexit
movsb
mov
push
xor
cmp
fs
addr16
push
int3
sub
push
push
dec
fcmovb
mov
pusha
and
sti
sbb
mov
lods
adc
mov
daa
adcb
mov
test
push
adc
push
pushf
lret
cmpsb
in
push
int3
outsb
push
and
pop
stos
xor
lret
scas
inc
stos
cmc
mov
and
lret
xor
xlat
jns
dec
or
or
out
xchg
adc
cmp
stos
fnclex
xor
bound
jo
jmp
mov
adc
jns
adcb
sbb
adc
mov
dec
xchg
imul
outsb
iret
push
and
or
adc
jecxz
jb
out
movsb
scas
and
inc
test
dec
xchg
data16
mov
and
aas
je
data16
lock
mov
stos
test
cmp
sub
pop
pop
pop
sub
imul
rorl
addb
loope
dec
imull
scas
insb
pop
push
test
int3
hlt
push
or
cs
icebp
xchg
pop
xchg
ja
add
pop
and
jo
repnz
movsb
in
fldcw
dec
jl
inc
mov
ss
dec
mov
cs
mov
loopne
sub
xor
pop
push
jae
mov
arpl
dec
sub
xchg
pop
jae
mov
sub
adc
add
xchg
div
mov
mov
mov
sub
aaa
add
mov
mov
push
push
rorb
add
std
ret
movsb
or
icebp
adc
stos
hlt
dec
mull
pop
repz
icebp
stc
and
fs
jg
xor
jecxz
pop
inc
sub
sub
sub
xchg
divl
stos
bnd
ss
or
xchg
ljmp
and
mov
add
sub
cmp
pop
mov
sbb
push
push
cld
ja
les
in
sub
pop
test
aas
pop
test
push
lods
pop
mov
pushf
inc
mov
mov
out
scas
add
call
mov
mov
xlat
cmpb
jge
sub
inc
mov
sbb
sbb
int3
mov
ljmp
sub
popa
mov
in
and
shrl
and
xchg
sub
adcb
jle
lret
lods
dec
sti
loop
cmp
pushf
mov
and
xchg
imul
inc
cmpb
mov
push
rcll
mov
mov
cld
loopne
hlt
loope
dec
js
leave
mov
outsl
enter
ja
int3
fisubl
adc
or
clc
dec
mov
gs
cmp
xchg
lcall
outsb
sbb
jae
jns
mov
push
and
lret
pusha
les
int3
inc
repz
int3
lret
daa
push
sbb
or
mov
in
les
dec
xchg
and
mov
xchg
loope
mov
pop
mov
out
cli
sub
jb
mov
pop
int3
fisttps
ficoml
sbb
shll
xchg
jae
jno
push
test
sbb
pusha
xchg
and
gs
xchg
movsl
daa
add
jbe
mulb
sub
sbbb
sbb
stos
adc
jle
lcall
das
push
lock
popa
push
fimuls
loop
int3
sbb
sbb
jg
xchg
or
ds
mov
cmp
xchg
test
call
pop
xor
pop
xor
mov
push
xor
lea
sbb
rol
add
andl
pop
cmp
dec
gs
int3
sarl
pusha
cmp
adc
rcrb
lods
cmp
stos
xor
mov
sbb
stc
int3
xchg
inc
xor
outsl
pop
sbbb
insb
pushf
mov
loopne
aaa
lcall
xor
or
outsl
pop
mov
mov
insb
add
adc
imul
movsb
cmp
aas
push
or
inc
or
xor
aam
mov
xchg
out
ror
ret
pop
mov
fwait
shrl
bound
data16
cmp
sbb
mov
outsl
mov
pop
mov
dec
aad
dec
popa
js
ss
loopne
pop
sub
pop
mov
pushf
arpl
sahf
pop
aam
rorb
jae
ret
mov
lds
mov
cmpb
testb
clc
cmpsb
add
jg
out
and
repz
test
xlat
shlb
cli
mov
adcb
jb
jmp
clc
addb
cmp
xor
and
dec
movsl
iret
sbb
jno
in
cmc
adc
out
mov
cwtl
push
pop
lods
jb
mov
icebp
cltd
int3
lods
in
loope
push
aas
repnz
jl
sbb
filds
dec
in
sbb
arpl
adc
jo
cmp
pop
ljmp
mov
cmp
mov
int3
jmp
jl
dec
push
push
lahf
push
xor
xor
int3
mov
xchg
or
sbb
dec
std
loope
dec
xor
lods
pop
shrb
orb
mov
cld
outsl
push
aam
jae
mov
push
test
mov
subb
mov
fidivl
mov
les
nop
cli
stos
add
and
sarl
add
mov
mov
movsl
mov
dec
int3
scas
or
les
dec
andb
mov
cld
mov
insl
push
mov
out
inc
lcall
clc
xor
jge
stos
loopne
xor
lods
xchg
maxps
sbb
loopne
push
or
test
mov
imul
xor
enter
dec
mov
ficomps
adc
jo
xor
cmpsb
aad
imul
push
mov
testl
gs
mov
mov
fisubrl
add
mov
clc
jl
xor
or
shl
push
in
mov
dec
lds
leave
jecxz
push
inc
adc
test
lock
jg
jo
push
nop
and
popl
xor
xchg
ret
test
pop
mov
push
pop
out
cmp
cmp
pop
daa
lcall
out
loop
icebp
mov
divb
je
sbb
jg
adc
fldl
dec
andb
out
insb
xchg
in
adc
dec
sub
stos
lret
push
in
and
sub
fnsave
mov
adc
pop
shl
xor
sbb
push
push
sub
es
out
mov
or
mov
push
pop
sbb
out
mov
jb
aam
pop
push
adc
test
gs
or
loop
or
in
lea
dec
pop
add
mov
aaa
arpl
enter
outsb
or
ss
int
loop
cli
dec
add
jo
pop
cmp
xor
pusha
jae
stos
cmc
out
lcall
mov
inc
ret
sbb
loopne
mov
cmp
sub
pop
incb
je
int3
lcall
fcomp
dec
cmc
rcrl
xor
mov
pusha
dec
imul
decb
cmp
or
pushf
imul
cli
loope
pushl
ret
pusha
sbb
lea
push
je
dec
pop
sbb
inc
adc
pop
sub
xchg
add
shrl
fstpt
cmp
mov
mov
dec
mov
xlat
jb
and
stos
adc
outsl
mov
mov
mov
push
rolb
inc
xor
ret
fdivl
or
mov
iret
sub
inc
loope
inc
push
mov
push
lock
test
test
xor
mov
lods
movsb
dec
movsl
dec
mov
push
xchg
imulb
adc
cmp
loopne
inc
jne
mov
ja
ljmp
cwtl
sub
pushf
mov
xchg
push
jbe
adc
xchg
and
repz
mov
cmp
int3
stc
popf
icebp
mov
cs
xchg
lahf
out
mov
call
notb
aas
push
stos
pop
notl
mov
mov
jmp
mov
lods
pop
inc
cmp
mov
jbe
in
dec
cmp
mov
mov
jae
loop
xor
mov
mov
pop
and
cld
ret
mov
mov
xor
scas
and
xchg
sub
adc
mov
clc
mov
data16
pushf
or
lret
sbb
xor
push
mov
rcrb
mov
aam
cmpsb
jno
jmp
les
cli
sahf
push
or
aaa
mov
mov
fwait
cld
mov
cmc
fisubl
mov
loop
mov
sbbb
fcmovb
push
dec
mov
in
xor
pop
hlt
mov
mov
mov
and
jne
jne
pop
fisubrl
mov
hlt
sti
fistpll
cmp
mov
les
gs
mov
call
push
mov
jno
add
sarl
in
lret
jp
scas
lock
inc
cltd
dec
je
ljmp
push
sbb
sahf
inc
out
sbbl
ds
cwtl
aad
out
mov
mov
rcll
mov
cmp
lock
cmp
popa
in
imul
adc
pusha
pop
xchg
or
mov
mov
inc
lods
fs
stc
subb
scas
shl
push
repz
inc
lcall
das
sub
adc
mov
fistpll
mov
sbb
mov
test
sub
aad
in
mov
push
mov
adc
add
cmp
mov
dec
push
mov
push
or
in
cmp
dec
icebp
int3
inc
jb
dec
mov
or
or
int3
push
xchg
and
jge
ja
mov
cli
inc
movsb
push
repz
mov
xlat
loop
bound
stc
cmp
mov
add
mov
daa
mov
stos
pop
int3
loopne
ja
dec
add
addr16
data16
stos
sub
cmp
dec
fisubs
fldcw
push
inc
xchg
int3
stc
aas
jne
ret
mov
ficompl
pop
int3
and
out
popa
pop
cmp
pop
lock
faddl
cld
jbe
add
jmp
in
dec
or
lret
push
push
inc
sti
jae
push
mov
pop
xchg
jb
dec
sbb
in
enter
xchg
int3
jecxz
xor
jmp
cmp
je
je
adc
xor
mov
in
jb
xor
ret
xchg
fdivrp
jmp
lods
fbstp
addr16
mov
adc
movsl
inc
or
fidivrl
pop
in
movsb
fcmove
sub
or
fisubrs
outsl
or
pop
fwait
je
out
iret
sbb
push
pop
fistpl
mov
push
mov
cmc
adc
pop
add
lods
adc
mov
scas
lret
icebp
mov
test
stos
xor
xchg
cmpsb
rol
dec
insl
push
out
pop
stos
int3
push
mull
or
es
scas
push
mov
cmp
mov
dec
aas
ret
fwait
xor
shl
mov
test
jae
repz
ret
or
fwait
mov
inc
cmp
imul
into
test
and
fwait
pushf
lods
mov
insl
push
sub
mov
dec
and
dec
push
sub
pop
lods
popa
push
pop
leave
mov
fsts
mov
mov
lods
fdivp
or
pop
xor
push
pop
je
cmp
fcoml
mov
xor
cmp
lea
mov
jmp
js
pushf
scas
mov
idiv
cmp
or
fmuls
cwtl
sub
inc
lods
pop
shlb
mov
jp
adc
sbb
leave
inc
je
hlt
sub
mov
or
xchg
iret
scas
mov
pop
xchg
pushf
push
jp
jl
scas
stos
or
les
cmpl
xchg
mov
pop
adc
int3
inc
xchg
in
and
xor
pop
and
pop
movsb
mov
sbb
xor
repz
pushf
mull
xor
mov
test
sti
jecxz
imul
fwait
clc
adc
out
ljmp
mov
insb
mov
insb
mov
mov
dec
pushf
bound
pop
mov
cmc
xor
fwait
and
xchg
pushf
pop
movsb
int3
ja
pop
cmp
pushf
iret
je
test
lods
inc
je
leave
sub
add
cmp
sub
ljmp
test
ret
push
fldenv
lahf
je
inc
je
insl
je
jbe
fsin
mov
jg
xchg
ret
mov
jnp
mov
je
mov
rolb
enter
cli
jnp
mov
sbb
mov
sbb
push
movsb
xchg
pop
test
aaa
hlt
cltd
sub
cs
addb
and
mov
rcrb
lods
movsb
dec
push
cmp
jge
push
fwait
cmp
test
inc
ret
dec
sub
clc
lods
push
jo
sub
int3
std
add
push
mov
xchg
and
xor
movsb
femms
and
lahf
andb
jo
js
xlat
pushf
push
je
imul
ss
pop
jns
lods
push
cmp
sub
mov
push
mov
out
jb
and
inc
inc
lahf
aam
xchg
pushf
push
jne
shrl
mov
mov
and
mov
mov
mov
mov
xchg
sbb
xchg
xchg
jo
cmc
mov
xchg
jp
mov
cltd
sub
pushf
insl
mov
loopne
push
push
pusha
imul
mov
inc
jnp
jecxz
ds
mov
inc
mov
xchg
fistl
sbb
incb
je
mov
shlb
fsubrl
and
out
cmp
mov
cmp
into
xchg
xchg
fists
daa
ja
rorl
fwait
mull
je
jae
or
xor
lret
aas
pushf
and
push
xor
shlb
mov
and
shll
mov
lea
rcl
pushf
xchg
mov
push
aam
push
inc
aas
push
js
cmpsl
ds
xor
stos
sbb
xchg
insb
xchg
xchg
pop
jo
aaa
scas
adc
lods
jbe
test
or
aam
faddl
out
mov
sbb
add
fisttpll
fwait
test
out
in
into
aam
cmpsl
sub
push
xor
std
notb
mov
ja
fwait
xchg
jo
inc
out
mov
xchg
mov
jg
dec
hlt
mov
adc
aam
lcall
arpl
js
sahf
sub
lods
inc
out
xchg
push
jo
lods
push
and
test
adc
jnp
xchg
mov
cmc
andb
xchg
imul
mov
ficoml
mov
mov
sbb
cld
add
sbb
in
sbb
aas
mov
mov
js
dec
aas
enter
sbb
insb
jae
js
dec
or
pop
jb
movsb
nop
cmp
out
sbb
sbb
es
xor
aam
lods
mov
icebp
sbb
pop
jle
les
cmpsl
ss
cli
enter
les
insb
pop
xchg
inc
scas
sub
jo
ss
js
inc
dec
push
mov
sub
and
dec
dec
adc
pop
xchg
test
mov
sti
loope
jb
pop
lds
ficompl
xchg
xchg
push
jns
xchg
mov
rcrl
sub
nop
fwait
mov
inc
movsb
dec
sbb
daa
push
cmp
dec
jle
mov
inc
aad
repz
lcall
jle
push
movsb
jnp
gs
adc
mov
push
pop
push
sbb
fistpl
add
ret
pop
test
jp
xlat
mov
mov
leave
stos
imul
mov
xchg
scas
mull
mov
xor
sub
mov
jae
mov
or
mov
shlb
loope
pop
sub
int
jle
or
movsb
outsb
xchg
jo
fs
lahf
call
in
imul
sub
lea
mov
jae
sbb
mov
jp
sahf
mov
pushf
in
je
mov
xchg
loopne
xchg
jo
jle
jo
lcall
xchg
aad
push
and
ret
sti
arpl
pushf
pop
hlt
cmp
push
pushf
add
inc
lods
insb
mov
pushf
daa
jne
imul
into
xchg
push
test
in
lods
and
scas
imul
add
xchg
mov
je
lods
xchg
adc
imul
push
push
icebp
shlb
in
and
jbe
mov
cmp
pusha
mov
sub
pop
xchg
and
pop
inc
mov
clc
sub
nop
js
jno
aad
in
jnp
repz
lea
mov
repnz
test
mov
shlb
jo
insb
lods
pop
xor
adc
ss
sbb
sub
out
lods
and
pop
cwtl
mov
mov
cmp
clc
lods
in
xor
aas
cmp
js
xchg
add
lret
and
js
out
xor
sub
adc
sub
rorl
out
jg
cmpsb
mov
lcall
jl
outsl
xchg
into
jno
xchg
pushf
pop
mov
mov
bound
mov
xchg
inc
incb
dec
hlt
fwait
mov
cli
add
scas
enter
fmull
je
ret
rorb
out
dec
mov
iret
gs
pop
insb
push
ja
test
int
stc
in
mov
adc
mov
divps
sarl
lods
into
mov
insl
sbb
or
sahf
clc
jge
repz
xor
and
mov
mov
xchg
dec
adc
movsl
add
and
and
mov
jbe
cmp
inc
sub
clc
cs
je
in
xchg
push
imul
push
and
mov
les
jmp
loope
jbe
fdivrl
mov
rcrl
adc
xlat
sahf
aas
push
mov
or
mov
sbb
js
dec
sub
data16
ret
sbb
push
ss
pushf
jo
outsl
mov
ret
call
divl
and
lock
mov
jns
ja
add
insb
movsb
jge
shlb
xor
and
pop
xchg
push
mov
mov
ja
shll
push
test
cld
sbb
sub
insb
stc
pop
outsb
shlb
inc
shlb
hlt
leave
cwtl
pop
push
mov
cmp
jecxz
cld
mov
cmc
and
inc
pop
mov
lods
add
jecxz
inc
pop
dec
loope
pop
xchg
sub
mov
lods
outsl
xor
fbld
mov
mov
aam
cmpsl
and
cld
adc
andb
sbb
adcl
std
mov
mov
outsb
lcall
mov
dec
fs
mov
adc
mov
je
jp,pt
fnsave
sub
push
shlb
mov
in
scas
adc
mov
sub
hlt
fwait
cld
repnz
test
rorb
daa
iret
pop
jns
test
scas
inc
cmp
fwait
pop
lods
repz
mov
fisubl
popf
xchg
inc
push
cwtl
push
popa
and
mov
mov
shlb
pop
pop
ja
jo
insl
and
xchg
mov
dec
mov
mov
pop
mov
mov
and
cltd
xor
xchg
mov
into
jp
cmpsb
clc
lods
test
or
sbb
and
imul
ja
iret
push
int3
mov
inc
push
es
movsb
sub
push
fistl
xchg
into
push
out
fwait
pop
xchg
inc
scas
addr16
xchg
adc
arpl
mov
je
xchg
ja
andb
mov
dec
lahf
lcall
fsubrl
mov
cld
xchg
roll
push
pop
ret
jns
adc
fcompl
xor
js
dec
pusha
in
dec
xchg
sbb
cld
mov
mov
test
add
test
pusha
push
cmc
test
mov
mov
es
pop
lods
je
lods
mov
xor
sti
faddl
lahf
sub
cmpsb
add
in
test
mov
inc
jl
and
das
leave
inc
icebp
push
xor
adc
cltd
jno
cmp
mov
sbb
cmp
fcompl
cmpsb
sbb
inc
xor
movsb
mov
movsb
mov
sti
pop
sub
jl
insb
mov
mov
adc
mov
ret
pop
das
mov
xchg
std
mov
rcll
loopne
xchg
js
jo
shrl
sbb
add
mov
jmp
fildl
xor
and
ret
mov
sub
imul
call
sbb
stos
pop
test
test
push
shrb
rclb
mov
mov
int3
inc
test
clc
inc
dec
mov
push
pop
outsb
xchg
je
jo
imul
lods
xorb
arpl
xor
push
pop
xchg
mov
shlb
dec
daa
imul
call
mov
clc
in
adc
mov
jl
or
sub
xor
add
lea
lods
mov
mov
and
xor
adc
dec
pop
outsb
xchg
stc
enter
arpl
xchg
pusha
mov
lcall
jno
stos
jp
int3
xchg
and
xchg
stos
mov
dec
scas
popa
xchg
pusha
mov
or
cmpsb
pop
mov
push
out
lods
pop
xor
or
mov
xchg
xor
xchg
mov
mov
js
push
pop
imul
int3
movsl
enter
cmp
cltd
lods
xchg
pop
pop
jecxz
lods
mov
mov
aas
insb
adcl
inc
dec
pop
jecxz
repz
mov
add
jmp
arpl
pop
adc
inc
inc
push
sbb
or
lods
sub
test
dec
mov
test
jmp
testb
xchg
hlt
repnz
mov
aas
sub
dec
mov
sub
inc
lods
jns
cwtl
mov
xchg
sub
das
fwait
mov
push
incb
mov
xchg
pop
pop
mov
je
call
add
movsb
pop
lock
test
ror
mov
and
or
cwtl
and
inc
in
lock
dec
or
mov
in
in
std
jge
insb
jle
loope
push
gs
cmp
mov
out
ss
sub
ds
and
les
pop
inc
adc
fstps
sbb
adc
dec
xchg
dec
adc
fmull
scas
xchg
xchg
sub
les
xor
adc
aas
cltd
aad
clc
xor
dec
insb
xchg
shrl
mov
jp
loope
add
jnp
mov
fs
imul
sbb
pushf
loopne
cmp
pop
shlb
lods
xor
into
or
es
mov
jle
js
hlt
fdivl
ljmp
jl
sub
mov
pop
push
and
idiv
fcomp
insb
push
aas
xchg
call
aam
sub
out
cwtl
ja
cmp
pushf
and
pushf
xchg
lret
push
clc
pop
daa
xor
mul
imul
add
lcall
push
mov
and
loopne
bound
shll
je
aaa
cli
pop
xchg
xchg
add
xor
test
xchg
dec
sbb
sbb
test
popa
fsts
data16
adc
adc
and
mov
hlt
repnz
fsubrl
ja
pushl
je
push
sub
xchg
in
push
idiv
jmp
lods
insb
fwait
xchg
xor
fs
xor
inc
into
mov
add
stos
mov
and
lods
pushf
movsb
jo
lret
pop
call
xor
mov
call
call
mov
push
lret
mov
dec
and
sub
shll
dec
push
test
jle
inc
mov
cli
add
rolb
pop
mov
xchg
jp
popa
cmp
mov
xchg
add
and
mov
pop
fildll
or
hlt
jge
loopne
into
je
cmp
jae
xchg
rcr
dec
dec
mov
mov
jbe
and
push
add
pop
je
push
imulb
insb
and
xor
mov
add
loop
cmp
pop
inc
jmp
or
xchg
ret
sub
adc
and
sub
xchg
aam
sub
mov
or
sbb
call
dec
add
adc
sub
divb
aas
add
cwtl
pop
mov
mov
pushf
pop
fwait
aam
mov
xchg
add
insb
xchg
outsb
jl
xor
loope
sbb
pop
xorb
mov
sub
mov
mov
sbb
xlat
push
xchg
adc
fldcw
out
xlat
aaa
enter
clc
jo
mov
jp
dec
in
push
add
sbb
lcall
or
or
and
sbb
mov
fwait
mov
mov
push
mov
cmp
subl
loopne
inc
fwait
test
pop
lea
sbbl
sbb
les
xorl
dec
or
xor
sub
into
mov
cmp
mov
test
jo
aam
fwait
mov
movsb
jmp
mov
insl
subb
mov
popa
jecxz
mov
xchg
data16
call
xchg
cmp
int3
shl
jbe
outsl
push
push
xchg
loopne
jae
mov
test
setg
repz
jge
ret
les
add
je
imulb
jnp
aaa
push
in
aam
lret
movsb
jae
lds
jb
push
xor
pusha
inc
ficoml
xchg
lods
leave
test
mov
rclb
or
dec
test
sbb
lahf
push
hlt
ja
inc
cwtl
mov
pushf
adc
lcall
or
xor
cmc
imull
mov
imul
xchg
fistpll
loope
scas
stc
jns
dec
adc
mov
jae
les
xchg
cmp
sbb
lea
ljmp
aas
jl
xor
dec
jne
stos
imul
pop
lret
test
mov
and
jo,pn
xchg
pop
mov
and
jb
mov
out
stos
inc
addl
repz
xchg
in
fs
mov
push
pop
insl
pop
aas
in
hlt
dec
popf
cmp
aad
and
jp
push
sub
cld
mov
add
in
add
push
in
stos
sbb
rcll
xchg
mov
dec
stos
in
mov
popa
and
push
or
adc
popf
repnz
rolb
mov
lock
xchg
adc
xchg
or
jo
jno
rorb
cli
xor
or
lock
and
xor
shrb
scas
cld
push
xchg
add
dec
sub
sub
sahf
rcll
movsl
and
stos
mov
insl
std
push
or
inc
pusha
xor
pop
test
hlt
fmull
ret
or
sbb
mulb
add
ss
inc
xchg
movsb
iret
mov
inc
adc
ds
sbb
adc
in
pop
and
pop
in
or
cmpsl
je
dec
hlt
fwait
mov
dec
xor
sub
or
jp
push
dec
or
add
arpl
jecxz
xchg
dec
and
out
pop
xorl
sbb
push
fdivs
xchg
movsb
jl
ss
ud1
mov
iret
lret
pop
dec
adc
mov
hlt
inc
xchg
into
aam
stos
sti
pusha
outsb
push
mov
cmp
mov
sti
ret
xor
cltd
xchg
add
mov
ss
push
mov
cltd
pop
xlat
cmc
shlb
mov
jo
stc
pop
popf
push
xor
ss
xlat
hlt
ss
nop
cld
jle
sti
mov
adc
jbe
insb
cmp
cmpsl
pop
hlt
fnstsw
es
sub
gs
push
push
and
push
or
dec
cmp
fldenv
and
lret
cmp
xchg
or
mov
scas
adc
pushf
lret
leave
dec
fwait
jns
mov
cmp
cltd
inc
cmpsw
cmc
push
pop
push
pop
cmp
ja
mov
fstl
lahf
clc
lods
imul
lcall
xor
lods
cmp
mov
int
orl
and
mov
in
mov
ss
mov
mov
mov
push
xlat
fcompl
lods
stos
push
lods
leave
xor
mov
mov
dec
mov
adc
mov
and
or
repz
mov
pop
ljmp
mov
hlt
mov
ja
repz
xchg
sbb
outsl
cwtl
mov
cmp
mov
stos
mov
or
jnp
push
xchg
insb
push
adc
out
stos
xchg
or
test
test
jae
adc
or
fsub
cli
mov
adc
or
jnp
mov
dec
fcompl
dec
jmp
lahf
pop
out
fisubrs
add
gs
rcrb
push
repz
dec
fistps
mov
std
lds
jge
fadds
addl
mov
cmpsb
xchg
add
movsl
mov
sub
push
adc
mov
mov
mov
movsl
call
mov
cld
out
outsl
sarb
mov
dec
jns
dec
les
fdivl
movsl
add
ficoml
cmp
sahf
data16
mov
lret
ret
adc
stos
or
xor
mov
push
xchg
sahf
les
test
mov
inc
aad
gs
mov
dec
hlt
push
sahf
xor
mov
add
ja
int3
movsl
xchg
sbb
hlt
and
mov
es
xor
lods
dec
ljmp
jle
push
xorb
inc
xor
out
mov
rcl
lds
hlt
test
lea
add
and
movsl
mov
lahf
cs
shl
cmp
movb
lods
push
add
adc
into
fdivs
mov
mov
adc
dec
in
std
mov
ficompl
stc
bnd
mov
pop
xchg
jl
shr
rclb
mov
mov
and
mov
push
cmp
adc
push
loop
std
and
pop
push
mov
dec
subl
div
cmpsl
das
testl
in
xor
movsb
daa
mov
sbb
incl
jg
jle
inc
leave
adc
adc
xchg
add
jns
mov
xchg
outsb
pusha
jl
fcoml
xchg
mov
insl
and
shl
cli
mov
std
sti
jae
jae
daa
mov
sbb
ljmp
mov
pushf
fs
lahf
daa
pop
cmpsl
ja
inc
mov
add
add
jle
cwtl
out
fsubs
rol
in
mov
nop
mov
shll
mov
scas
fnstenv
mov
cmp
scas
sub
xchg
mov
or
dec
mov
push
ja
rclb
sbb
sub
mov
push
push
loopne
or
mov
packuswb
jno
aam
sbb
mov
or
mov
fs
mov
xchg
or
pushf
adc
popa
mov
mov
pop
stc
inc
sub
sbb
cmp
jae
mov
add
movsl
jecxz
cli
sbb
aaa
jnp
lcall
std
hlt
and
sub
sub
call
icebp
xchg
sub
lret
adc
dec
ja
insb
lds
fstps
jmp
lea
outsb
aam
fadds
test
outsl
aam
popf
adc
push
rcrl
movsl
insl
stos
pop
notl
inc
cmp
xor
loop
inc
mov
add
lea
jg
mov
sub
dec
adc
fadd
jns
mov
adc
orl
shll
iret
insl
call
daa
xchg
push
push
jp
cwtl
xchg
cmp
icebp
hlt
push
in
mov
mov
inc
dec
pop
rep
aaa
mov
inc
lock
jp
lods
xor
subb
sbb
ljmp
cs
hlt
inc
mov
iret
incb
lds
hlt
stos
out
mov
jo
je
inc
lock
mov
inc
cmp
shlb
pop
lahf
push
stc
test
in
cld
sbb
ficompl
mov
repnz
imul
dec
fnsave
ret
cmp
mov
out
sub
mov
fs
mov
aam
sbb
dec
loopne
pop
mov
inc
and
test
mov
sbb
lcall
inc
and
hlt
out
popf
js
sub
and
xchg
mov
clc
xchg
test
jp
mov
cmc
push
enter
and
sbb
fists
mov
pop
inc
or
mov
mov
enter
sub
pop
or
push
adc
lock
mov
add
inc
inc
scas
jnp
mov
mov
inc
pop
xchg
out
imul
je
mov
fneni(8087
mov
or
push
int3
cmp
fadd
mov
xchg
and
stos
ds
jmp
in
mov
stos
xchg
lock
pop
loopne
enter
or
mov
sahf
pop
movsb
push
icebp
lods
jne
inc
pushf
fwait
in
pop
or
pop
mov
mov
mov
clc
mov
cld
mov
inc
mov
jb
mov
movsb
sub
mov
add
daa
push
in
mov
sub
mov
inc
arpl
inc
sub
cs
pop
mov
push
lret
scas
mov
loopne
aas
mov
ds
sub
jnp
test
and
sub
mov
ret
ja
add
mov
xchg
or
dec
mov
sbb
pop
and
movsl
ret
mov
es
xchg
scas
jge
je
inc
dec
jp
roll
fdivl
pop
out
jbe
js
daa
lds
mov
lock
jle
mov
sub
fidivs
insb
adc
add
mov
leave
mov
cmp
xor
sub
mov
scas
jp
sub
inc
in
and
call
pop
mov
out
jb
test
cmpsl
int
stos
cmp
jns
rcrb
dec
lret
mov
pop
xchg
in
cltd
jle
stos
shll
out
sub
xor
loope
sbb
jnp
int3
mov
pop
rorb
repnz
lcall
testl
xor
jne
sbb
mov
xchg
and
fsubl
cld
mov
je
push
mov
jl
adc
insl
repz
push
mov
jg
outsb
into
mov
adc
pop
jae
sbb
stos
push
xorl
cmp
out
xor
movsb
xchg
xchg
mov
ss
test
xor
scas
mov
cwtl
bound
in
pop
mov
xchg
fstpl
cmp
or
or
les
rorb
mov
xchg
sbb
in
mov
mov
mov
sbb
std
nop
inc
lea
fidivl
adc
pop
cmpsb
fcomps
pop
cmp
and
xchg
inc
adc
inc
mov
jge
cwtl
cmc
or
cmp
test
aad
mov
mov
fcompl
loopne
ja
xor
mov
mov
out
std
dec
mov
cmp
ja
sbb
cs
inc
or
data16
cld
insl
push
test
fwait
jne
mov
clc
orb
push
lods
fstl
out
pop
mov
cmc
movsl
lods
shll
shlb
loop
push
mov
add
pop
add
sti
xor
fadds
mov
test
push
iret
enter
scas
xor
daa
mov
pop
cs
mov
mov
add
and
bound
and
sbb
lret
xchg
and
int
jbe
mov
js
daa
js
push
imul
ret
insb
cmp
sub
cmpsl
push
lret
lock
ja
hlt
mov
in
cmpsb
and
lds
xchg
dec
int3
pushf
loopne
sub
xor
clc
hlt
mov
out
add
cmpsl
mov
push
mov
xchg
xlat
dec
add
mov
sub
aas
ret
push
sbb
xor
mov
sbb
or
mov
xor
push
out
mov
xor
std
inc
ss
cmp
cwtl
pop
lret
pop
sub
and
mov
push
push
insl
sbb
jo
test
push
push
arpl
sub
push
sbb
add
mov
jns
sbb
divb
jne
lods
push
and
test
push
mov
pop
je
in
cmc
fistpl
scas
ret
dec
je
daa
cwtl
and
push
lods
cmp
rep
faddp
gs
mov
mov
pop
pop
clc
ret
push
dec
outsl
inc
lret
cmpsb
jp
outsl
dec
fs
pusha
mov
and
dec
stc
mov
in
or
pusha
mov
test
sub
loope
or
cmp
mov
fdivl
cmc
div
pop
movsb
in
mov
mov
test
mov
xchg
outsl
add
xchg
sub
sub
mov
stos
repz
push
or
xor
loopne
cltd
jb
push
sti
sub
mov
cltd
in
push
in
in
mov
mov
ret
xchg
arpl
out
pushf
pop
sub
cli
jbe
inc
les
out
adc
insl
push
insb
xchg
scas
sub
mov
pop
movsl
mull
ret
push
popa
addb
sbb
out
enter
inc
and
std
push
jo
add
nop
dec
leave
adc
test
outsb
addr16
jns
add
inc
ret
pop
mov
mov
dec
and
add
mov
or
pop
sub
mov
lret
imul
int3
orl
into
xchg
js
negb
xchg
and
pop
and
rcll
cmpsl
pop
adc
js
bound
mov
imul
mov
js
arpl
push
aas
ficoms
add
adc
out
cli
shll
push
sub
int3
xchg
cld
mov
inc
mov
cmp
fstl
mov
jle
push
lahf
lret
hlt
adc
not
xchg
xchg
cmp
push
lods
test
push
adc
xchg
lock
lret
mov
xchg
movb
mov
xor
dec
jecxz
ret
pop
jne
inc
popf
dec
mov
mov
lret
or
or
fdecstp
lea
pextrw
mov
push
pop
lods
push
add
daa
ja
pushl
sbb
repnz
cli
jecxz
mov
xchg
clc
imul
mov
xor
adc
aam
out
sbb
xchg
fldt
pop
fs
push
testb
push
sub
pop
int3
stos
outsb
dec
mov
pushl
gs
popa
and
mov
dec
outsb
add
xchg
sbbl
and
or
in
sub
cmc
mov
ret
pop
std
enter
ljmp
std
sbb
adc
pop
adc
push
sbb
div
imul
and
cmc
lock
sub
push
mov
rol
push
data16
imul
mov
mov
dec
rolb
mov
and
test
daa
jnp
cmp
push
xchg
push
mov
fcmovnbe
test
push
fldt
out
popf
test
xchg
inc
push
xor
sar
mov
dec
test
sub
xchg
push
cmp
hlt
push
ds
push
imul
scas
jae
add
not
dec
cld
adc
stos
movsl
push
out
aaa
fistl
push
pop
push
add
lret
adc
fbstp
push
xchg
push
sub
mov
fstpl
push
mov
mov
pop
loopne
jmp
and
ljmp
or
daa
or
std
pop
popf
xor
pusha
mov
aad
sub
gs
lea
push
mov
scas
scas
nop
mov
jl
jge
jmp
xchg
insb
stos
jo
popa
sbb
cmp
cmc
movsb
cwtl
and
jnp
mov
cmp
sub
andb
mov
enter
mov
pop
dec
fildll
fwait
std
xor
imul
leave
test
in
adc
mov
idivb
jb
hlt
int3
aam
je
cmc
push
sub
adc
clc
mov
mov
push
scas
lret
and
jge
cwtl
push
testb
outsl
cmp
lea
rclb
or
xrelease
dec
pop
stos
or
scas
push
int3
loopne
test
jb
loop
mov
mov
lahf
mov
mov
push
outsl
mov
call
and
aad
lret
insb
jnp
pop
leave
lea
xchg
adc
push
xlat
and
jo
ljmp
sahf
xor
in
add
imul
inc
push
lea
mov
lods
testb
mov
pusha
xchg
cmp
loop
jmp
stos
adc
push
cli
mov
cmp
dec
lock
les
mov
mul
insl
mov
dec
xor
les
nop
adc
addr16
int3
inc
icebp
and
lods
rcrb
mov
ret
sti
dec
mov
lret
mov
test
shufps
js
subb
mov
pusha
out
xchg
dec
fsubr
mov
sbb
gs
cld
pusha
mov
jae
inc
xchg
std
dec
pushf
mov
in
pushf
lret
sub
fisttpl
cli
sbb
inc
negb
xor
call
addb
std
dec
push
lea
test
add
jne
xor
ror
test
popa
inc
and
jmp
je
dec
ret
fwait
in
sub
jae
call
movsl
adc
lret
es
test
cli
mov
loop
test
and
push
movsb
mov
test
fbld
mov
add
mov
inc
mov
xor
sub
push
js
lock
sarb
pop
int3
or
and
cld
pushf
test
or
aad
mov
out
pop
test
push
int3
xchg
push
jns
imul
loop
sub
cli
and
xchg
daa
pop
sub
ror
inc
adc
cmc
and
movsb
int3
repnz
jbe
es
lret
scas
cmp
rcll
fadds
fs
jmp
ja
shrl
stos
sub
jno
xor
xor
sbb
cmc
out
jp
lods
fs
mov
lods
and
loopne
mov
dec
adc
insl
cmp
call
subl
xchg
stos
out
fwait
xor
or
inc
pop
inc
test
sub
inc
cwtl
jge
mov
and
mov
push
xor
adc
lock
and
sbbl
rcrb
ljmp
push
sub
pop
push
adc
xchg
stc
mov
mov
icebp
mov
mov
mov
pop
add
mov
push
or
imul
insb
fisttps
pusha
movsl
repnz
inc
subb
inc
dec
xor
dec
jns
push
mov
gs
xor
pushf
push
outsb
aam
push
pop
cwtl
adc
jns
jo
sub
xorb
push
push
push
es
xor
aaa
in
pop
mov
add
lods
leave
movsl
add
out
testb
iret
dec
dec
and
gs
movb
aam
xchg
test
mov
stos
xchg
jns
sahf
int3
and
xchg
add
adc
sub
imul
dec
mov
mov
sbb
incl
inc
lahf
orl
pop
ss
popa
ret
int
pop
call
lock
popa
push
lds
rcrb
fs
cli
adc
insb
fidivs
jl
jb
imul
outsb
pop
sbb
push
les
cmpsb
xchg
pop
push
cmpsb
cwtl
dec
scas
jg
int
pop
lret
inc
or
xor
push
mov
int
test
push
aaa
dec
aaa
xor
testb
insl
adc
lret
data16
ds
pop
mov
addr16
test
popa
xor
out
xor
stc
int
je
ja
mov
das
pop
lret
cld
mov
test
sbb
lret
sahf
int3
mov
outsl
sbb
mov
rorb
xor
mov
testl
mov
dec
idiv
jle
cmc
fiadds
jge
pop
push
lahf
pop
mov
add
or
sub
jb
mov
sub
out
mov
bound
jp
insb
outsl
add
gs
or
xor
mov
je
sbb
and
cli
ret
leave
and
pop
mov
addl
pxor
and
mov
pushf
dec
xchg
divb
dec
pop
mov
test
adc
xchg
mov
inc
test
cmp
or
mov
int3
mov
mov
mov
pop
xor
dec
mov
mov
mov
push
repnz
cmp
aaa
fmul
shll
andb
push
inc
mov
sub
mov
jns
xchg
xchg
lea
lret
xchg
jp
pop
xchg
andnps
push
stos
push
test
int3
xchg
sub
ret
push
add
fsubs
or
cmc
std
loop
cli
add
dec
jle
nop
inc
push
mov
jo
push
dec
xchg
mov
popa
addb
mov
test
aas
mov
mov
mov
test
fnstsw
out
lahf
decl
andl
lds
inc
push
pop
arpl
and
sub
mov
mov
aaa
dec
jge
out
insb
mov
jl,pt
push
dec
out
push
add
adc
pushf
out
xchg
xchg
pusha
ja
sbb
mov
daa
movl
int3
idivb
add
mov
popa
sahf
int3
sub
sub
pop
mov
adc
pusha
testl
stos
and
rorb
cli
mov
and
dec
leave
movsb
add
pop
ja
mov
pop
sbb
xchg
rcrl
sub
arpl
lods
sub
xchg
xchg
xchg
xchg
xor
sbb
mov
out
mov
mov
data16
imul
mov
mov
lock
out
mov
mov
ja
push
xlat
jns
sbb
mov
sbb
addl
jp
pop
sub
scas
dec
mov
sub
pop
mov
outsl
enter
push
outsb
and
outsl
xchg
jae
sub
mov
pop
stc
mov
jae
mov
in
test
or
imul
popa
popa
pop
insb
push
mov
xchg
mov
and
ss
push
inc
cmpsb
pop
push
insb
pop
xor
mov
push
sbbb
dec
sahf
push
mov
imul
jecxz
stc
xor
sbb
es
push
stos
add
jecxz
cmpsb
shrl
stc
mov
jmp
xor
pop
lahf
shll
sub
testl
push
stc
in
add
push
loope
insb
adc
test
mov
adc
dec
mov
push
lock
in
pop
popa
aam
sub
sub
push
push
insb
je
add
cmp
sbb
aad
cli
movsb
sub
jbe
mov
fs
cmp
das
sti
pop
xchg
xchg
pop
shlb
stos
insb
loopne
dec
add
daa
mov
in
jne
or
test
and
adc
leave
cmp
or
test
pop
dec
outsb
push
fwait
test
xorb
lcall
jae
sub
dec
std
int3
repnz
mov
adc
inc
sub
nop
mov
lret
jle
jmp
mov
out
dec
add
shlb
in
lods
mulb
fs
dec
sub
dec
ljmp
int3
enter
xchg
or
mov
mov
je
push
dec
xor
sub
aam
push
mov
inc
add
xchg
or
sbb
stos
test
sub
testl
aas
imul
mov
repnz
mov
cltd
xchg
lcall
xor
jne
aam
scas
sub
cs
add
adc
sti
push
xchg
jns
movsl
cld
stos
cmp
mov
fiadds
lret
inc
pop
ljmp
adc
xor
or
and
mov
xor
adc
xchg
mov
pop
sahf
mov
sub
sub
dec
jg
push
gs
clc
push
bound
int3
out
or
xchg
cmp
hlt
insb
mov
shl
sub
add
bndstx
test
push
push
mov
add
mov
xor
push
adc
dec
test
testb
push
inc
mov
xlat
jmp
ss
jae
inc
adc
je
sub
adc
popa
pop
fldpi
lea
movsb
es
ja
addr16
push
aam
fisttpl
in
and
ds
popf
int3
arpl
jns
hlt
dec
inc
sbbl
pop
xor
xchg
insl
mov
cld
or
mov
cmp
push
stc
sub
mov
or
or
icebp
push
test
xor
sbb
xor
clc
test
mov
push
pop
dec
bound
insb
mov
cwtl
aam
stos
in
pop
cli
push
sbb
ret
or
adc
adc
dec
mov
mov
add
and
dec
dec
cmp
xor
fstl
imulb
jns
jg
call
push
dec
mov
mov
sub
push
cmpsl
clc
loop
pop
lcall
leave
popa
cld
leave
adc
push
in
lret
in
adc
mov
xor
xchg
popl
test
lret
cmp
scas
sub
mov
jns
ffree
and
lock
dec
cmpsb
push
and
adc
xchg
out
mov
mov
stos
add
dec
mov
jmp
xorl
push
adc
mov
inc
xor
nop
fnstcw
test
ja
xor
int3
test
xor
std
into
mov
add
mov
cmc
adc
subb
push
cmpsl
push
mov
in
scas
xchg
pushf
xchg
and
push
stc
lea
imul
outsb
repnz
scas
pop
xchg
lret
jb
jnp
jo
add
or
inc
ljmp
add
pop
jne
imul
data16
xor
test
mov
aaa
imul
cmovo
cltd
mov
xchg
les
rorl
leave
imul
addl
sub
divb
aam
mov
scas
aas
daa
rcll
int3
imul
leave
dec
movsb
pop
xchg
fldenv
fists
aam
je
pop
stc
sub
enter
and
mov
xor
test
pop
mov
loop
mov
not
sarb
push
insb
in
in
push
xchg
pop
push
popa
out
adc
cmp
scas
push
addb
fldl
int3
in
pop
mov
xchg
push
mov
gs
imul
inc
movsl
push
push
cli
adcb
stos
popa
mov
mov
mov
lret
mov
lea
pop
rorl
cmpsl
adc
fcompl
add
or
push
push
leave
mov
and
xor
jge
das
test
add
mov
dec
and
int3
lock
mov
sahf
je
stos
enter
int3
jnp
mov
push
jo
loope
dec
push
lods
or
dec
mov
das
mov
rol
push
mov
call
cli
mov
dec
in
testl
sub
cpuid
lea
or
mov
cmc
and
daa
mov
test
and
inc
out
mov
xorl
or
lahf
cs
filds
ja
test
push
pop
cmc
adc
cli
xchg
and
int3
lea
insb
dec
dec
ja
scas
ret
popa
out
cltd
and
and
lret
cld
mov
dec
xchg
cmpb
scas
mov
push
int3
das
lret
jns
mov
or
dec
daa
imul
cmp
sub
sbb
jne
int3
js
pusha
lret
push
xor
neg
mov
dec
outsl
imul
icebp
bound
stos
lret
or
fcoms
pop
xor
jecxz
sti
lea
xor
stos
inc
lret
pop
pop
lret
loope
test
aam
xlat
push
sbb
jge
push
fistps
int3
lds
mov
call
nop
dec
and
loopne
int3
xor
decb
pop
xor
push
bound
xor
pop
jb
push
sub
push
lret
fs
cmp
mov
mov
daa
das
jl
xor
pop
rcl
lret
mov
mov
fstps
das
sbb
adc
inc
in
je
mov
and
inc
dec
pushf
lods
in
jmp
outsb
pop
je
adc
aaa
mov
test
sub
loop
rclb
cmp
push
stc
incl
lahf
pop
xchg
mov
mov
cmp
push
push
jmp
ret
repnz
mov
push
ss
add
std
rcrl
adc
pop
push
jecxz
mov
in
and
leave
xor
jae
call
or
lock
mov
dec
sbb
popa
cmp
or
jecxz
cmp
push
aas
mov
push
int3
lock
jp
mov
ja
sub
mov
jb
int3
faddp
addb
mov
aaa
inc
mov
je
in
cmp
fs
mov
cmc
lock
adc
outsl
jo
out
negb
pusha
insl
adc
loopne
push
call
ret
test
dec
xlat
dec
jb
outsb
popf
bound
pop
or
dec
test
push
lock
inc
enter
mov
dec
push
push
dec
pop
or
hlt
add
mov
or
push
cwtl
std
xor
mov
cmc
in
mov
mov
test
sti
jo
and
and
in
adc
arpl
pop
gs
ret
push
mov
lret
into
mov
lcall
popa
sbb
sbb
add
dec
aaa
fcompl
mov
stos
cmp
lret
sbb
cs
cwtl
and
les
cmc
cmpsl
js
lcall
outsb
add
push
mov
rclb
jae
nop
into
test
mov
fists
aad
and
jno
stos
add
pop
aad
pop
lret
xchg
outsl
std
pop
popf
jno
and
test
jl
or
popw
add
repz
fisttpll
mov
mov
loop
jo
into
xchg
sub
add
pop
mov
jge
cld
test
rclb
push
jae
push
fildll
or
rorb
xchg
cs
in
cmpsl
xchg
das
nop
mov
cmp
imul
adc
mov
cld
shrl
xorl
mov
imul
cmpsl
adc
shl
and
lods
clc
iret
sub
cmp
ret
test
test
pop
fildll
or
mov
clc
aad
and
and
je
dec
stos
aam
repz
insb
mov
xchg
jae
mov
pmaxub
xor
inc
repz
test
aaa
mov
jl
test
pop
stos
or
out
ret
and
jae
fs
dec
xchg
lock
outsb
testl
or
lea
addr16
rcll
andb
push
lret
scas
pop
xor
cmp
fs
imul
popf
push
negl
test
sub
int3
loopne
pusha
mov
mov
arpl
pop
push
movsb
mov
push
mov
sbb
mov
pusha
sar
sahf
push
jl
xchg
xlat
push
pop
aam
aam
into
lock
mov
lret
mov
mull
xor
push
ror
aas
and
cmpsb
movsb
cmp
mov
add
mov
xchg
ret
pushf
sub
ljmp
pushl
jo
jge
pop
dec
adc
sahf
cmpsb
mov
pop
dec
das
rol
nop
lret
mov
jmp
dec
push
adc
cs
xor
sub
dec
pop
call
and
push
pop
sbb
ja
xor
dec
jecxz
pop
mov
imul
int3
fistpl
xor
dec
scas
es
dec
inc
js
shl
lret
pop
push
mov
jnp
arpl
xor
out
cmp
mov
pop
sub
adc
test
in
aad
and
rolb
or
test
sahf
xchg
ljmp
mov
cmc
rcr
mov
pusha
sahf
cmp
std
xor
lret
jge
push
push
pop
push
mov
xchg
mov
mov
sub
mov
push
sub
test
push
pop
ja
int3
mov
adc
les
and
cli
inc
sbb
in
enter
pop
mov
sub
jp
es
out
adc
sbb
sbb
imul
sub
push
lods
jp
sbb
cmp
xor
jne
dec
lret
popa
and
adc
in
mov
lret
push
mov
sub
popf
cmc
pop
outsb
jo
test
or
sbb
sbb
fs
dec
mov
int3
xchg
stos
jbe
int3
adc
mul
jle
add
sub
push
imul
ss
scas
dec
clc
sub
push
inc
mov
sbb
rorb
je
sub
int3
data16
ror
test
scas
xor
loop
cli
sahf
mov
sub
sbb
jmp
imul
jle
stos
ja
ss
xchg
sub
stos
cld
outsb
push
outsl
jmp
test
add
pop
inc
sbb
sub
into
pop
mov
scas
shlb
and
xchg
nop
jnp
pop
ss
gs
movsb
cmc
xor
das
xor
in
xchg
mov
stc
xor
das
pop
mov
xorl
ds
lret
dec
push
test
cmp
mov
adcb
in
cld
test
jae
sbb
fs
leave
jnp
int3
dec
ror
and
sbb
hlt
dec
push
pop
push
int3
nop
xchg
test
dec
mov
xor
add
enter
pop
inc
ret
push
sbb
imul
lock
mov
sbb
stos
cmp
in
push
arpl
mul
and
rorb
pop
sub
jecxz
jo
sbb
cwtl
arpl
jp
pop
jle
jg
loopne
das
icebp
mov
daa
sti
adc
mov
dec
mov
shl
out
daa
negb
inc
enter
std
rol
lock
cmp
lcall
fnsave
inc
dec
das
sahf
mov
lret
inc
addl
ss
repnz
sbb
mov
dec
inc
mov
jp
dec
add
movsb
lret
clc
ss
mov
xchg
scas
sti
push
aaa
adc
aas
test
and
pop
int3
add
mov
dec
bnd
bound
xchg
xchg
pop
js
pop
cli
mov
scas
cmp
or
push
pushf
int3
and
pop
lds
aas
xor
int3
or
mov
pop
mov
enter
mov
xor
cmpsb
je
ljmp
or
xchg
fsubs
push
es
mov
bswap
dec
add
cmc
inc
lret
sar
pop
pushf
sahf
push
dec
int3
mov
mov
push
imul
loope
mov
and
popf
pop
lcall
cmp
jge
mov
ljmp
mov
mov
inc
aad
mov
scas
adcb
idiv
test
dec
pop
mov
mov
jno
mov
dec
out
pop
and
hlt
or
xchg
push
aam
push
bound
sahf
insl
daa
movsb
iret
jbe
popa
cld
testb
stos
pop
lret
or
push
mov
xchg
mov
jne
ljmpw
xor
sahf
add
lock
mov
mov
inc
mov
int3
cld
dec
enter
mov
or
aaa
jo
pop
pop
sub
xor
mov
jle
ljmp
mov
xchg
cmp
lea
fwait
test
out
insl
es
pop
sub
popf
mov
outsl
push
and
shrl
fdivr
sbb
xchg
sbb
xor
test
xchg
cwtl
test
cmpsb
cmpps
inc
stos
std
bound
insb
les
mov
mov
pop
mov
cmp
and
fwait
dec
cmpxchg8b
ret
out
mov
pop
mov
sbb
and
dec
and
mov
push
and
lods
jne
xchg
cmc
imul
bound
data16
xchg
sub
mov
mov
and
cwtl
push
inc
outsl
mov
ror
add
aas
imul
xchg
sbb
cmp
lods
sahf
fcoms
mov
je
subl
fsubrs
dec
push
push
adc
push
sbb
push
das
cmc
lods
pusha
push
pop
mov
aam
lahf
or
sub
mov
stos
mov
cmp
movsl
out
pop
push
leave
xchg
add
or
sub
push
mov
test
adc
imul
and
cld
int3
xchg
ja
movl
pop
inc
jo
push
cmp
imul
sub
sbb
mov
sbb
int3
inc
cwtl
pop
sbb
xchg
ja
sub
mov
je
outsl
cli
xor
test
lods
dec
fisttpll
call
test
push
mov
fsubrs
mov
dec
and
and
push
icebp
xor
push
insl
repz
push
insb
shll
mov
and
pop
pop
pusha
lock
mov
arpl
cmpsl
fdivrp
and
lret
in
iret
jmp
arpl
sub
push
cmp
adc
scas
pop
loop
or
aad
dec
icebp
cmpsl
pusha
pop
sbb
pop
out
push
mov
dec
idiv
push
push
loope
outsl
inc
xchg
sub
iret
mov
ret
int3
push
sub
sti
jg
ds
xchg
pushf
in
movsb
insl
or
mov
fadds
test
inc
popa
je
sub
out
loop
bound
mov
mov
cmovo
or
mov
out
push
inc
ljmp
adc
and
iret
cltd
shl
sub
dec
ret
lret
cmc
std
setp
or
arpl
leave
xchg
jb
cld
mov
add
inc
pop
sahf
aad
push
nop
ret
mov
movl
test
push
mov
push
mov
dec
cmp
aam
push
push
push
in
int3
aaa
iret
add
xchg
pop
push
or
in
mov
fisubrs
movsl
rcl
or
inc
pop
jp
pop
cmp
lret
and
sahf
scas
lret
aas
inc
adc
aam
xchg
int3
jno
xchg
push
inc
aad
out
clc
pushf
add
mov
sahf
movsl
pop
icebp
sub
mov
stos
je
xor
add
adcb
sbb
add
dec
gs
mov
inc
outsb
xchg
sub
shl
and
jecxz
fbld
push
je
sub
xchg
pusha
aam
shlb
stos
int3
cmpsb
test
loope
sub
push
jae
cmp
dec
mov
enter
ds
movl
jne
lock
pop
jmp
xor
movsb
movsl
das
mov
leave
push
push
lahf
add
or
xchg
sbb
fs
lret
addl
mov
push
adc
sbb
lahf
test
fs
push
shlb
xchg
hlt
jno
mov
push
sub
push
aas
sbb
push
movsb
clc
int3
pop
add
inc
sub
outsl
lret
jns
inc
test
daa
adc
pop
test
ja
mov
pop
or
out
fistpl
lret
push
sub
jmp
adc
sub
imul
ljmp
push
gs
enter
iret
mov
xor
inc
data16
testl
testb
in
xchg
sbb
xchg
and
jmp
in
push
and
fistl
mov
push
lcall
ljmp
mov
int3
in
xchg
hlt
mov
ret
fwait
mov
add
cld
loop
fisubs
sahf
jle
adc
xor
loop
inc
xchg
pop
adc
sub
dec
sub
cmp
pop
cmp
imul
test
and
fldt
clc
enter
push
js
jbe
mov
test
cmpsl
sbb
jns
test
mov
dec
stos
aad
add
xchg
push
and
xchg
call
xchg
out
inc
mov
mov
gs
loop
outsl
xchg
xchg
sahf
movsb
lret
adc
push
leave
je
dec
xchg
or
sti
add
lcall
fistps
mov
cltd
cmp
int3
or
scas
or
leave
push
fwait
lock
repz
pop
mov
add
test
pusha
inc
je
pop
cld
dec
imul
pop
jp
xor
stc
xorl
jl
outsl
mov
ljmp
cmp
mov
outsl
cwtl
push
in
loope
dec
or
repz
pop
js
je
mov
sahf
push
jns
shrb
mov
daa
std
stos
ret
mov
lret
jb
divl
xorb
pop
fildll
sbb
sarb
mov
mov
imul
mov
dec
cmpsl
adc
insb
add
jecxz
repnz
inc
lret
test
sbb
xor
xchg
hlt
int3
pop
sbb
mov
and
mov
sbb
mov
lods
fisubs
sti
add
or
dec
and
aam
adc
xor
pop
and
fbstp
fiaddl
addr16
inc
shl
sbb
push
jb
fidivrl
mov
in
stc
aad
jp
in
jmp
mov
outsl
jge
lea
call
mov
into
jg
divl
dec
push
mov
inc
pop
mov
int3
sub
add
and
sub
xchg
ja
push
imul
sbb
lret
jg
and
test
mov
stc
adc
push
fsubl
push
pop
in
adc
xchg
in
dec
pop
pop
pop
dec
cmp
lods
iret
insb
lea
sahf
push
repz
mov
sti
iret
xchg
dec
jne
popf
je
mov
jae
aas
jmp
sub
adc
sbb
es
adc
jl
stos
sahf
das
inc
xor
repz
inc
or
inc
ds
fidivs
ror
aad
loop
sbb
icebp
imul
dec
pushf
cmp
incb
and
test
out
int3
repnz
inc
sbb
push
ljmp
lock
cmp
cli
xchg
fwait
je
push
cmp
fistpl
push
jo
scas
xor
sahf
pop
push
fimull
lret
addr16
cltd
sbbb
dec
shl
test
jmp
sbb
mov
mov
icebp
bound
push
or
icebp
mov
in
xchg
mov
inc
mov
xchg
mov
fs
or
dec
cmp
das
in
popa
jmp
dec
pop
push
pop
jmp
ss
lcall
ret
mov
test
idivl
sarb
xchg
xchg
mov
add
aad
clc
and
jmp
ja
jecxz
sub
mov
shlb
je
ljmp
pushf
and
inc
cmp
fwait
xchg
lret
mov
pusha
movsb
repnz
idivb
lret
push
fadd
loope
int3
popa
fbstp
dec
dec
stos
mov
into
xchg
and
shl
push
push
push
out
pop
cmp
lock
js
mov
pop
or
imul
add
pop
pop
insl
jb
int3
icebp
fistps
jo
xchg
mov
mov
ljmp
imul
sub
cmp
jecxz
enter
cs
shlb
aas
xor
inc
add
inc
jl
sub
std
in
lea
xchg
adc
in
arpl
pushf
hlt
push
popa
push
hlt
insb
aaa
or
loopne
and
repz
push
les
icebp
mov
aas
loope
sti
and
push
mov
iret
mov
mov
cmpsl
push
loop
push
and
jb
stc
xchg
ljmp
int3
scas
push
iret
hlt
mov
jle
dec
sahf
sub
fiaddl
push
push
mov
push
jle
hlt
mov
lea
cli
fbstp
xchg
mov
mov
fwait
hlt
lods
int
mov
push
mov
mov
jecxz
xor
dec
jmp
mov
aam
gs
mov
adc
cld
pop
hlt
adc
inc
mov
xchg
pcmpeqb
sti
aam
sub
dec
jmp
xchg
cmp
cmp
or
pop
lods
pop
mov
pop
inc
in
fs
iret
jp
sub
cld
mov
sbb
pop
fwait
adc
sbb
cmc
xchg
ret
jo
add
test
pop
xor
mov
rorb
lcall
popf
mov
push
push
mov
mov
cmp
outsl
mov
pop
mov
pop
ja
push
add
sbb
pop
xchg
int3
lock
mov
inc
mov
mov
sti
hlt
mov
pop
fsubrs
and
dec
lret
outsb
test
ret
jns
jne
sbb
je
mov
sub
xchg
or
adc
mov
pushf
je
cli
shlb
jp
push
pop
es
pop
fbld
adc
notl
add
sbb
into
jne
sub
lahf
mov
jae
in
mov
xchg
ja
push
mov
int
lods
dec
and
jo
insl
addl
rolb
out
call
testl
mov
jb
pushf
fs
ja
lods
movsb
sbbl
hlt
shl
xor
or
jp
or
repz
adc
divl
stos
and
xchg
jb
mov
in
mov
ret
jle
xchg
mov
fnstsw
add
pop
add
idivb
mov
out
mov
cmp
xor
mov
mov
cmp
leavew
fs
rcr
mov
pop
push
dec
xchg
repnz
gs
sbb
ljmp
inc
lret
and
aam
cmp
jmp
adc
test
movsb
jnp
mov
dec
aaa
ds
lret
imul
pop
divb
jae
out
mov
into
cmp
xchg
sub
mov
sbb
xor
loop
xor
cmpsl
mov
lods
in
aas
ffreep
faddl
test
not
mov
xchg
xorl
mov
and
mov
jnp
das
jo
adc
adc
sarb
out
jns
ss
stc
popa
cmp
test
push
int3
rcrl
fiadds
popf
push
xlat
das
stos
in
loopne
mov
cmp
and
mov
cli
cmp
xor
xchg
bound
inc
repnz
pushf
fcoml
dec
mov
mov
mov
shl
fildl
cld
rclb
in
ret
or
cwtl
mov
and
mov
xchg
cmp
popf
sub
push
and
xchg
and
jns
jo
aam
inc
adc
xchg
outsb
popf
add
jbe
mov
mov
fisubs
dec
adc
cmpsl
jnp
movsl
jns
in
repz
mov
js
jg
jp
cmc
imul
scas
push
fdivl
mov
stos
movsl
repnz
xchg
loope
jmp
out
out
cmp
xchg
mov
repz
in
xor
add
jp
dec
and
and
mov
cmp
subb
mov
jmp
int
mov
movsl
sbb
popa
sub
test
cmpsb
add
ds
pushf
adc
call
or
cs
inc
sarl
adc
je
cmpsb
add
jns
lock
push
jle
out
add
cmp
in
hlt
ret
sub
and
sub
insl
out
popf
sub
fnsave
fidivs
push
bnd
and
xchg
lret
jne
xchg
roll
add
mov
in
cwtl
scas
cmp
pop
inc
out
pandn
aam
mov
movsb
jne
mov
mov
push
divb
cli
sub
or
inc
dec
imul
xor
mov
mov
mov
mov
inc
mov
mov
mov
fidivl
fwait
scas
nop
jnp
adc
cmpb
push
xchg
jmp
iret
mov
loop
push
jp
mov
push
and
ret
xchg
mov
arpl
cmp
jno
repnz
lahf
xorb
mov
js
mov
add
dec
sbb
lahf
rolb
inc
iret
mov
xor
dec
cmp
add
mov
cld
cld
mov
inc
loop
inc
mov
rcrb
mov
iret
popf
mov
out
jmp
les
bound
idivb
rorb
mov
out
js
repnz
xchg
and
jnp
imul
push
push
cld
iret
outsl
cmp
movsl
mov
add
test
js
inc
xor
pop
xchg
and
inc
idiv
xor
fiadds
push
mov
aad
imul
and
mov
sbb
jne
loope
ja
aaa
lcall
xlat
and
cmc
pop
add
adc
inc
mov
pop
mov
or
test
xchg
jne
jp
sahf
repnz
scas
adc
ds
mov
das
pop
fstps
mov
push
dec
mov
mov
or
fs
mov
sbb
ds
dec
mov
arpl
pushf
or
nop
cwtl
or
mov
add
push
sbb
jne
jnp
push
rcrb
mov
xor
cs
cmp
lret
fdivs
lret
or
lahf
aas
cmpsb
divl
mov
inc
mov
stc
mov
mov
sbb
pushf
push
aad
and
mov
rcr
push
mov
jp
and
test
or
inc
push
jno
push
enter
mov
jle
mov
stc
fs
mov
ret
mov
xchg
js
inc
push
mov
adc
bnd
xchg
lods
std
mov
je
stos
dec
xchg
movb
mov
lahf
inc
pop
mov
cmp
cmc
stos
mov
adc
mov
lock
stos
or
ds
les
cmp
mov
xor
xor
xor
mov
pop
out
in
hlt
repz
mov
lcall
imul
sbb
mov
cmp
gs
xlat
mov
aas
sub
lods
and
cmp
adc
mov
stc
jbe
aas
clc
cwtl
pop
iret
sbb
sbb
outsb
out
sbb
hlt
jbe
sbb
push
inc
fisubrs
hlt
mov
das
inc
lods
movsb
cmpsl
in
lcall
pushf
fisubrs
stos
jmp
scas
out
mov
pop
roll
lahf
cld
dec
mov
mov
cmpb
xchg
mov
push
fldl
in
lret
inc
mov
dec
ret
mov
cmp
mov
je
daa
imul
push
cwtl
and
je
in
pop
adc
arpl
jnp
fwait
sub
adc
repz
add
dec
jge
punpckhbw
das
ret
outsl
adc
pop
aad
mov
pop
xchg
ja
push
mov
jnp
lcall
pop
pop
mov
stos
adc
outsb
mov
cmp
dec
and
les
inc
adc
out
ja
and
sub
xor
icebp
adc
int3
shrb
sahf
and
hlt
or
test
xlat
mov
adc
inc
insl
faddl
icebp
mov
pop
pop
xchg
xor
push
leave
bound
das
and
lret
lret
insb
cltd
adc
daa
scas
add
push
shl
cmc
les
mov
mov
mov
jae
dec
add
add
sub
cli
dec
or
shrb
lret
lahf
and
imul
mov
daa
xor
scas
lret
xchg
adc
mov
loopne
jb
inc
xchg
pop
ds
adc
ffreep
scas
mov
push
xchg
sub
lret
inc
mov
push
std
test
idivl
add
std
mov
sub
dec
arpl
mov
jbe
mov
aad
jecxz
jns
and
lret
fwait
push
loopne
dec
movsb
mov
jg
fistpll
orb
gs
in
push
push
scas
xchg
dec
xchg
in
sbb
xlat
cs
adc
test
lock
push
sub
int3
push
dec
mov
cs
mov
insl
jl
xorl
stos
cwtl
push
mov
stc
test
push
addr16
lret
cmp
mov
ljmp
jmp
out
mov
sub
lret
aam
xlat
dec
xchg
dec
push
int3
ljmp
mov
mov
sbb
sbb
push
lcall
jmp
je
or
and
iret
sbb
adc
pop
mull
lds
inc
sub
lret
ret
shll
jnp
lea
cmpsl
jbe
xchg
fxam
lods
daa
sbb
je
cmp
xor
sahf
push
mov
insb
sbb
loopne
test
out
sti
test
jb
movsb
test
fsqrt
xorb
mov
movsb
jae
mov
jecxz
xor
mov
and
add
mov
or
mov
jo
ret
in
sub
push
sbb
lret
mov
rcrl
je
add
pop
jle
shlb
aas
ss
repz
sub
sub
dec
sub
ret
cld
adc
jo
jg
mov
pop
jp
mov
jecxz
jbe
lret
out
test
sarl
out
xchg
and
hlt
xor
xchg
xor
mov
cli
aas
icebp
lods
addb
mov
and
dec
scas
xor
push
sub
mulps
or
popa
stos
xchg
mov
es
icebp
xor
mov
sub
dec
negb
fadds
cwtl
cli
fistpl
jo
push
les
loop
lret
or
adc
mov
mov
fidivrl
stos
shrb
inc
mov
lods
aas
jb
cwtl
pop
push
mov
ljmp
add
xor
push
inc
adc
xchg
inc
dec
lds
fwait
cld
es
push
add
mov
mov
xchg
pop
mov
in
mov
push
push
mov
insb
sbb
jnp
cmp
push
xor
dec
mov
ret
int3
sarb
shll
imul
adc
adc
xlat
mov
cmc
xchg
enter
lock
sub
ljmp
sar
inc
fildll
mov
fcmovnu
mov
mov
xchg
test
orb
aam
and
inc
stos
dec
aas
outsb
cs
add
adc
repz
pop
dec
mov
dec
xor
adc
les
mov
mov
popf
test
sub
dec
inc
or
repz
mov
push
pop
out
add
lret
aas
ss
adc
out
adc
repnz
inc
add
sub
sahf
xor
sahf
adc
mov
jno
daa
cld
rcll
sbb
mov
cmp
int3
mov
clc
popf
sub
popf
int3
mov
lds
pusha
ss
arpl
push
lret
jns
cmp
and
and
shrl
loop
movsl
das
mov
jae
push
adc
xor
pop
and
xchg
fldz
dec
adc
mov
push
adc
rcrl
dec
xchg
xor
aad
outsl
cld
lea
inc
adc
shrl
andl
je
int3
out
dec
adc
jmp
aas
sbb
data16
sub
rorb
repnz
xlat
lock
lret
push
xor
mov
pop
jo
mov
aam
dec
repnz
lret
xchg
pop
je
adc
dec
subl
push
rcl
add
ss
into
icebp
mov
fcoml
movsb
mov
divb
imul
push
xlat
lds
mov
and
repz
pop
js
out
lock
add
rorl
pop
gs
add
ja
cmp
dec
das
or
mov
scas
push
mov
pop
cmp
movsl
mov
scas
int3
cltd
ror
sub
sbb
adc
cld
shl
xor
pop
rep
aas
pop
pop
dec
stos
add
or
push
lret
std
fs
push
shrb
rclb
insb
mov
mov
lret
jg
sbb
lret
pop
mov
sbb
lds
jbe
push
mov
fadd
cmc
sub
aaa
fwait
mov
mulb
lods
dec
faddl
and
adc
adc
pop
dec
out
push
lock
lea
mov
data16
jg
xor
cld
loopne
jbe
mov
sub
fucomp
jge
push
jno
mov
mov
xor
add
test
imul
lock
xor
inc
imul
gs
xchg
in
cmpsb
sub
cmp
popa
int
idivl
adc
pop
add
imul
jbe
mov
jae
subb
int3
ror
mov
mov
int3
aam
imul
mov
mov
pop
xchg
dec
pop
call
test
adc
in
cli
xchg
mov
push
shrl
test
jle
dec
mov
mov
out
test
or
std
cli
mov
push
push
or
sbb
pop
sbb
add
cmp
arpl
shll
push
or
loopne
dec
orl
inc
xor
sbb
pop
bound
mov
mov
xor
jle
inc
cmpsl
notb
or
jno
fstpt
inc
sub
pop
jmp
mov
popf
int3
pop
ret
or
fimuls
jp
pop
jbe
add
pop
sbb
dec
mov
inc
mov
mov
or
ds
pop
imul
add
pop
mov
hlt
shrl
mov
sub
cmp
movsb
xchg
add
bound
lcall
cmpsb
popf
xor
cmp
fnstsw
jmp
add
stc
in
adc
dec
pop
push
mov
clc
aas
loope
das
int3
sahf
hlt
mov
in
jno
aaa
or
adc
aaa
sbb
push
mov
pusha
iret
pop
jnp
mov
sbbl
xor
lods
and
xchg
dec
mov
das
mov
mov
or
shr
xlat
or
ljmp
jle
dec
pushf
pop
lods
or
dec
mov
pop
and
int3
stos
inc
test
add
lcall
pop
in
mov
sbb
sub
mov
cltd
and
into
incl
and
or
jne
and
pop
mov
sbb
xorb
push
adc
mov
ljmp
push
cmc
insb
rorl
xlat
cld
filds
orb
fs
xor
stos
pop
jne
punpckldq
js
in
ss
push
and
testb
sub
loop
xchg
mov
test
mov
test
jp
jl
add
add
pop
xchg
jp
push
pop
cmp
sbb
jb
lods
mov
cmc
fidivl
mov
mov
push
aaa
push
div
into
outsb
fst
mov
pop
int
test
test
mov
hlt
push
mov
adc
xor
pop
add
sbb
mov
add
xchg
jl
incb
fwait
pop
add
jmp
cmovns
aas
imul
ret
fdivrs
dec
pop
adc
jb
cmpsb
sbb
ficoms
arpl
loope
xor
aam
lea
pop
imul
insb
add
lret
lods
push
adc
and
cmp
mov
sbbl
test
ret
and
repz
sbb
je
test
ss
add
adc
xor
mov
add
into
js
jae
sub
and
imul
xchg
dec
outsb
fwait
aas
lret
inc
inc
shrb
imul
jns
insl
sbb
mov
cwtl
lock
int3
pop
push
in
addr16
mov
test
pop
mov
loop
jo
ret
push
test
xchg
aaa
ficompl
and
xor
jmp
xchg
lods
mov
pop
in
dec
jg
sub
push
idivl
shlb
cwtl
out
xor
fwait
sbb
push
imul
mov
imul
fs
cmp
push
daa
mov
mov
loopne
divl
ds
pop
add
movsb
mov
mov
cmc
or
outsb
jp
stc
imul
je
push
add
into
les
enter
lods
dec
pop
inc
std
jl
repnz
mov
movsb
jp
mov
lret
repnz
mov
mov
imul
sbb
cld
mov
sub
or
fiaddl
and
arpl
loopne
bnd
scas
mov
mov
push
add
xor
sbb
aam
outsb
push
jae
push
jecxz
xchg
mov
and
and
pop
xchg
fs
testl
je
test
out
stos
std
lock
lods
mov
push
push
ret
lret
test
xor
xor
mov
xchg
lret
push
pop
push
push
pop
mov
xor
push
pop
icebp
xor
subb
jo
mov
jae
sub
push
jbe
bound
iret
sbb
lock
mov
int3
pop
or
das
inc
pop
nop
aas
out
decb
mov
mov
out
dec
lret
sbb
sbb
in
mov
or
lods
sbb
mov
and
or
bound
icebp
jecxz
rclb
push
or
mov
outsb
push
shrb
repnz
pusha
fimuls
insb
xchg
or
int
or
pop
daa
test
add
outsl
xchg
insb
bound
rorl
idivl
add
lea
dec
lock
xor
int
dec
pushl
xor
mov
push
dec
dec
pop
pop
mov
jno
shll
pop
hlt
dec
clc
pushf
lods
cmp
xor
in
pop
mov
xor
cld
sbb
jo
xchg
jle
xor
adcb
jo
inc
repz
dec
adc
push
rorb
inc
cld
push
xlat
xchg
push
call
subl
pop
sub
mov
jns
wrmsr
sbb
cmpsl
ds
and
jmp
inc
sbb
push
add
push
adc
or
inc
push
test
sbb
pusha
xchg
sbb
pushf
int3
and
push
sbbl
jmp
subb
mov
daa
xor
jge
jo
sti
or
stc
xchg
cmp
arpl
mov
xor
pop
and
cmp
mov
je
js
sub
inc
test
cmp
lahf
pop
outsb
fdivs
xchg
or
fdivp
sub
loope
lea
jmp
inc
cwtl
or
sbb
stos
sahf
subb
sti
loop
mov
fcoms
or
cs
mov
cwtl
int3
mov
dec
scas
lret
test
mov
and
scas
imul
xor
aam
repz
repz
dec
mov
leave
sub
push
iret
mov
icebp
sub
sti
ljmp
je
xor
jl
and
test
or
je
mov
cmp
jecxz
stos
sub
mov
scas
xchg
aaa
and
lcall
lods
and
jmp
nop
inc
jnp
xlat
adc
int3
loopne
clc
push
sbb
push
sub
push
inc
popa
and
xor
orl
in
xor
repnz
fsubl
sbb
fcoml
mov
mov
loopne
shrb
shll
jmp
dec
inc
sub
test
dec
push
cli
loope
mov
mov
popa
sbb
pop
mov
ret
rolb
inc
test
data16
xchg
es
adc
sbb
pop
sub
int3
hlt
dec
loop
cli
iret
push
xchg
pop
movsb
clc
mov
xchg
sahf
xor
loope
pop
fsts
outsl
sbb
loop
movsb
pop
mov
rcrl
nop
lcall
lock
jnp
inc
in
popa
push
repz
sub
idivl
jmp
or
and
jo
xchg
inc
mov
imul
lcall
sarb
mov
ret
cltd
xor
push
test
test
pop
jl
ja
mov
stc
xchg
loop
insb
xlat
movsb
lods
jmp
inc
pop
in
push
mov
pop
jo
mov
push
mull
lds
mov
push
inc
xor
mov
jp
xorl
jl
sbb
mov
loop
cmpl
rorb
inc
xor
pop
mov
pop
sbb
pop
shll
pop
fimull
sarl
cld
jne
mov
add
das
mov
stos
dec
cli
aas
shlb
and
push
xchg
xchg
adc
jo
das
nop
mov
and
in
test
dec
xchg
testb
adc
bound
je
xor
mov
int3
imul
push
push
rorl
test
outsb
mov
das
mov
jbe
xlat
movsb
ds
movsl
inc
xor
xchg
pop
lret
test
push
xor
fsts
mov
sbb
mov
movsl
xor
iret
push
sti
hlt
push
insb
jb
and
mov
or
add
ja
je
xor
das
fisttpl
test
out
xlat
xor
hlt
inc
jno
pop
fdivr
popf
movsb
or
loope
add
dec
pushf
sub
scas
dec
cmp
aas
fnstenv
adc
clc
adcb
ret
pop
aam
mov
dec
js
cmp
lods
inc
aaa
dec
inc
out
mov
repz
and
das
dec
jne
cltd
cmp
adc
and
xchg
in
push
lods
cltd
ja
add
mov
push
arpl
xchg
mov
out
imul
cmp
push
daa
shlb
out
movsl
jae
mov
xor
pop
pop
aam
sub
inc
push
xchg
xor
sti
dec
leave
insl
mov
mov
mov
mov
dec
js
divb
inc
sbb
dec
mov
mov
out
mov
shrb
movsl
loop
xchg
mov
aam
xchg
data16
js
sub
mov
out
dec
addl
pop
aad
mov
xor
lea
shll
out
xchg
mov
shlb
cmp
mov
add
push
sbb
cmpsl
pop
mov
sub
into
xchg
mov
loop
enter
jp
pusha
cwtl
add
data16
test
or
mov
xor
xchg
bound
mov
andl
je
lret
jns
jecxz
cs
inc
loopne
frstor
negb
mov
mov
mov
sbbl
inc
jge
in
cmpsb
pop
hlt
xchg
dec
mov
pop
lret
xchg
outsl
jmp
ss
jnp
ficoms
aad
mov
clc
rclb
hlt
inc
jge,pn
sbb
inc
in
ja
xor
popf
adc
or
mov
jle
xchg
pop
mov
popl
pop
jb
iret
adc
sub
mov
adcl
repnz
aam
call
lahf
mov
ljmp
inc
out
cld
repnz
lea
sbb
jp
das
repz
fldt
cmpsb
sbb
addb
adc
hlt
and
mov
dec
push
std
iret
out
push
add
jb
fldcw
loopne
adc
scas
imul
orb
in
cmp
xchg
mov
cmp
mov
and
adc
mov
aad
dec
in
xor
fs
push
mov
fcmovbe
pop
pop
aaa
cmp
mov
mulb
cmp
cmp
ss
mov
sub
cmp
xchg
stos
outsb
fwait
push
mov
out
jge
inc
xor
cmp
shll
xchg
test
jg
mov
movsl
fdivr
sti
loop
imul
movsb
hlt
and
insb
xor
mov
and
pushw
jl
mov
or
ja
cmp
mov
loopne
mov
push
sbb
cmp
and
insl
loope
into
inc
or
mov
stos
nop
mov
mov
pop
cltd
sbb
push
in
fnclex
push
mov
lahf
cmpsb
sub
cmp
xor
mov
mov
sbb
repz
mov
or
lock
lods
lods
les
push
cmp
mov
xor
lock
mov
pop
rol
aaa
insb
cmp
jnp
aam
hlt
arpl
fdivr
xchg
jo
mov
jl
jne
sub
jmp
or
xor
out
mov
jne
add
movsb
insb
out
imul
test
cmp
icebp
sub
lods
cli
mov
sub
adc
add
jl
in
mov
fstpt
cwtl
stos
sbb
je
sub
xchg
outsl
and
mov
sbb
ljmp
push
aas
push
mov
push
scas
cmp
xor
jp
or
mov
push
push
pop
ror
mov
add
pop
mov
mov
push
fistps
mov
js
xchg
jns
pop
mov
pop
fistps
mov
mov
mov
cwtl
xchg
xchg
mov
lods
mov
aam
dec
dec
cmp
lds
movsl
fdivrl
cld
inc
jo
shlb
pusha
sti
lock
mov
xchg
xor
push
mov
sarl
outsl
mov
int3
mov
shlb
jp
jle
out
mov
mov
je
lcall
pop
push
sbb
fdivl
adc
outsl
stos
push
imull
xchg
add
out
mov
xor
cmp
push
mov
pop
sub
rclb
mov
leave
fs
scas
fidivrl
ja
mov
mov
hlt
test
nop
mov
cmpsb
out
ljmp
shlb
mov
and
leave
cmp
xor
lret
rol
or
cmp
jne
dec
mov
ret
mov
push
inc
ljmp
pushf
popl
mov
mov
negl
shll
xchg
xor
xor
sbb
lock
adc
sub
push
pop
movsb
fidivrs
xlat
mov
in
outsl
pop
in
into
mov
dec
ret
inc
loop
cmp
mov
fdivl
fists
mov
sti
jno
xchg
lock
cmp
rclb
mov
or
xor
dec
lods
cmpsl
push
rorl
jns
dec
mov
pop
inc
or
jmp
dec
mov
subb
jp
popa
out
ljmp
add
mov
lret
xchg
xorb
fnsave
pop
mov
testl
adcb
xor
daa
jmp
mov
mov
andl
cwtl
push
mov
inc
or
mov
in
inc
hlt
adc
scas
push
jle
cmp
popf
sub
pop
shlb
xchg
hlt
lea
jp
jl
out
mov
xor
clc
imul
sahf
stc
jne
test
sbb
lret
mov
lret
insl
bnd
das
lods
cmpsb
and
or
sbb
add
mov
mov
hlt
dec
pop
push
mov
pop
xor
in
mov
cmc
fiadds
mov
xor
nop
rorb
insl
cmp
mov
and
xor
push
icebp
sbb
fimuls
push
mov
fcmovne
outsb
mov
and
call
sub
mov
rorb
xor
cld
outsb
rolb
es
mov
xor
out
xchg
pop
jp
int3
pop
and
cmpsl
dec
in
inc
lods
push
push
sbb
imulb
pop
pop
cld
sub
and
inc
dec
inc
ds
lds
mov
inc
sti
out
test
sbb
test
lods
imul
and
test
xchg
pusha
cmp
and
mov
int
mov
cmp
sub
xlat
mov
test
lahf
loopne
enter
loop
movsl
cltd
aas
addr16
push
cs
mov
inc
das
mov
or
jnp
je
aam
mov
lds
stos
push
adc
push
std
lods
icebp
mov
fs
arpl
xlat
pop
jne
mov
adc
adc
test
sub
or
daa
mov
mov
cmp
out
xchg
push
sbb
lock
outsb
pushl
addr16
inc
mov
fcoms
add
pushf
mulb
mov
pop
dec
mov
loopne
sub
nop
push
jg
call
inc
in
mov
fidivrl
sbb
sub
fdivs
fcompl
pop
xchg
xor
call
or
push
test
push
sarl
jns
jl
adc
jle
lods
das
rcrl
jne
mov
sbb
and
and
sub
test
movsl
leave
aam
mov
xchg
scas
imul
sbb
jo
mov
lds
inc
fistpll
nop
adc
aam
mov
test
mov
push
mov
repz
lahf
daa
ljmp
push
lods
xchg
or
aam
jmp
push
xchg
xor
pushaw
pop
test
mov
mov
stos
inc
xchg
ja
js,pn
jne
pop
test
jmp
cmp
cmp
jbe
mov
lcall
addr16
sub
add
lds
inc
scas
mov
mov
sub
cltd
push
ljmp
loope
mov
aad
lret
call
adc
dec
fildll
negl
fucomip
test
sub
loop
or
add
es
mov
push
lds
mov
int3
push
lret
dec
pop
in
xchg
pop
repnz
mov
sub
scas
rolb
sbb
adc
sub
xorb
mov
cld
sub
rorb
pop
fimull
mov
lret
repnz
sbb
pop
scas
nop
and
in
xchg
pop
int3
mov
lret
or
fstps
movsl
lcall
or
shrb
pop
xchg
push
xor
mov
mov
fwait
push
stos
leave
mov
pusha
daa
js
std
pop
scas
sahf
xchg
int3
lcall
popa
mov
sbb
cmp
xchg
fmull
std
lret
pop
and
leave
jmp
mov
int3
mov
dec
mov
mov
mov
sub
push
mov
rcll
int
into
lret
pop
popa
mov
hlt
int3
fldl
adc
sbb
outsb
pop
loopne
popa
cmp
dec
inc
imul
xchg
aas
push
or
xor
pop
lock
push
mov
jg
add
pop
dec
cmp
push
sbb
icebp
cld
xor
cli
cmp
fsubrl
push
inc
pusha
mov
and
jnp
daa
fistpll
mov
push
decl
fnstsw
out
fdivrl
xchg
pushf
xlat
xchg
lret
fsubrl
imul
stc
ret
dec
jno
sub
shlb
aas
push
clc
jg
fildl
mov
mov
roll
fwait
add
imul
pusha
int3
bound
mov
dec
sbb
pop
daa
lret
sub
popf
loope
fldenv
pop
test
cwtl
jnp
cmp
sub
mov
movsb
les
lods
int3
push
sbb
xor
lea
fdecstp
stos
jl
sub
xor
nop
cmc
aam
xchg
mov
mov
lcall
mov
hlt
push
mov
and
mov
add
pop
dec
sub
or
inc
ja
jmp
cli
and
test
sub
movsb
scas
push
and
xor
pop
or
repz
insb
out
cld
jb
pop
loop
mov
dec
roll
lcall
sub
mov
and
or
sub
movsb
arpl
add
mov
cli
or
ljmp
pop
push
rol
xchg
fidivl
test
push
add
mov
fcmovne
pop
mov
inc
cmp
sub
sbb
cmp
popa
lahf
push
pusha
xor
add
cmpsb
inc
mov
or
sahf
mov
dec
mov
aad
push
pop
call
sbb
int3
mov
sbb
sahf
pop
sub
icebp
jmp
mov
loope
out
das
cld
add
sub
int
xorl
pop
mov
imul
mov
out
lea
cli
adc
push
pusha
lock
mov
inc
int3
xchg
aaa
cmp
call
xchg
jnp
adc
sub
and
lret
mulb
test
and
mov
add
xor
imul
orb
mov
nop
in
sub
inc
pop
or
imul
cmp
push
xchg
jle
push
jne
cltd
mov
int3
ja
push
cld
test
or
cmpsl
fists
inc
or
pushf
sbb
mov
fs
mov
popa
mov
out
int3
mov
dec
xlat
loopne
dec
mov
fs
pusha
sbb
stc
xchg
add
mov
jb
sbb
rcl
movsb
jbe
mov
mov
outsl
and
int3
cmc
push
shrb
lret
push
mov
or
rclb
out
pop
ljmp
in
test
out
pop
pop
sahf
insl
mov
stc
int
mov
cmp
and
and
mov
andb
xlat
jo
pop
fmull
loopne
adcb
xor
jns
dec
mov
pushl
test
test
xor
adc
scas
jno
iret
outsb
push
mov
aam
adc
sub
and
mov
shl
jns
inc
jno
cmp
mov
sbb
mov
sbb
jg
ljmp
movl
jl
push
nop
test
loopne
push
sbb
scas
rcr
mov
xor
adc
add
call
xchg
lock
add
xor
in
leave
mov
xchg
fnstenv
xchg
pop
shrb
shrl
pop
dec
je
test
lea
mov
inc
enter
lahf
imul
pop
enter
cmp
push
cli
subl
dec
fs
jo
cmpsl
incl
out
and
ret
pop
cmp
test
leave
mov
mov
inc
ss
mov
mov
push
pop
cld
push
roll
hlt
test
push
sub
shlb
test
ljmp
mov
test
movsb
fsubl
fcomi
dec
insl
jl
sti
aam
adc
ja
jg
rolb
push
sbb
lds
inc
mov
dec
aas
or
sbb
leave
sub
movsb
sbb
jp
js
negl
push
cmp
mov
jo
jne
jmp
arpl
test
movsl
daa
add
icebp
sbbl
in
xchg
xchg
sub
aad
or
imul
imul
sti
mov
cmovne
popf
push
lret
sbb
movsb
add
rolb
add
insl
adc
push
imul
cmp
add
lret
stos
int3
cmp
fisttpl
cwtl
lcall
mull
cmp
xchg
mov
adc
cmpsl
lds
aas
movsb
mov
cli
cmpsb
pop
mov
lods
mov
dec
xor
xchg
fisttpl
out
es
sub
int3
mov
mov
mov
daa
add
sti
les
jne
repnz
outsl
repnz
adc
xor
mov
incl
mov
or
cmpsb
xchg
xchg
or
test
fldenv
pop
add
jbe
push
movsl
mov
jno
dec
dec
adc
jae
insl
inc
iret
mov
pop
lods
and
cmp
fwait
add
pop
jp
fdiv
mov
cmp
push
jp
shll
mov
mov
dec
cmp
jmp
cmpsl
data16
adc
xchg
movsb
xor
pop
sbb
xchg
mov
popf
int3
ficoms
stos
sbb
pop
or
and
es
xchg
bnd
bound
stos
pop
jge
pop
cmpsl
dec
push
arpl
mov
push
sub
and
dec
std
test
cli
pushf
dec
imul
lock
and
pusha
lea
pusha
mov
pop
pop
js
and
jle
pop
mov
push
daa
roll
test
int3
xorb
std
test
imul
rclb
pop
mov
push
out
out
out
jg
or
repnz
and
rcr
sub
ljmp
pop
filds
xchg
lods
jp
pop
cmp
jmp
data16
repnz
mov
pop
aas
adc
mov
xor
es
sub
push
xchg
stc
xchg
pop
push
push
outsb
push
and
les
xor
xchg
mov
and
bound
fidivl
mov
lret
dec
pushf
mov
mov
in
hlt
pop
sbb
xchg
sub
sub
jne
movsl
clc
mov
icebp
xor
push
cltd
mov
mov
mov
lea
sbb
lcall
mov
mov
data16
popf
and
mov
sahf
imul
cs
xorb
and
sub
mov
and
sar
dec
push
ret
je
mov
pusha
fcmovnb
mov
loope
ret
loopne
shlb
ret
mov
mov
push
repnz
mov
and
adc
jo
dec
lahf
cmp
hlt
dec
rclb
stc
aaa
mov
and
pop
mov
pop
stc
mov
popl
or
cmp
push
loope
fistpll
add
sarb
xor
test
push
jmp
sub
xchg
and
pop
mov
cmp
imul
cmp
or
rcrl
test
jns
stos
aam
sbb
ljmp
fs
jg
mov
fisubrs
mov
fdivrp
je
fsubl
mov
int3
jmp
xor
negl
pop
push
add
lret
jmp
add
inc
pop
imul
jae
syscall
scas
jne
stos
add
out
add
mov
aam
dec
notl
out
push
test
push
jg
xchg
inc
mov
mov
lea
pop
fistpl
popa
dec
jnp
xchg
sub
mov
dec
and
xchg
rorl
popf
mov
loope
sub
es
in
push
cmp
mov
lahf
or
mov
fstpl
xor
mov
imull
xchg
testb
int3
mov
in
aas
jp
shl
pop
push
and
cmp
adc
aaa
arpl
mov
loop
mov
push
xchg
jge
add
adcl
in
mov
lret
sub
mov
cmc
roll
xchg
ret
cli
jmp
add
pop
jp
adc
pop
cmp
popf
push
fidivs
adc
hlt
push
push
stc
in
xlat
jne
jae
jae
iret
pop
lock
dec
xchg
mov
pushf
cmpb
loopne
xor
testb
jae
addr16
mov
xor
sahf
cwtl
cmp
shll
mov
or
or
inc
and
xchg
lret
pop
inc
aas
adc
xchg
inc
hlt
data16
fnsave
sub
ret
not
jae
push
jae
cmp
sub
add
mov
test
mov
add
fildll
adc
cltd
and
mov
mov
fsubs
inc
test
in
push
enter
mov
inc
shll
scas
movsl
adc
stc
loop
pop
mov
cmc
ja
xchg
and
in
sbb
fisubs
dec
push
imul
dec
pop
fidivrs
insb
mov
outsb
and
fcoms
add
ss
jecxz
imul
xor
cli
call
jno
push
xor
or
pusha
enter
ficoml
pusha
pop
sub
imul
xchg
sbb
and
repnz
leave
and
nop
outsb
mov
mov
fnstenv
mov
sbb
ss
loope
or
cmp
inc
inc
pop
mov
sbb
sub
push
jge
push
sbb
push
int3
mov
push
sbbl
cmpsb
mov
jmp
mov
dec
and
jbe
filds
test
jmp
mov
or
in
lret
adc
clc
mov
xor
mov
testl
lods
push
push
jmp
mov
sbb
loop
into
movsl
push
xchg
or
or
sub
and
cmc
aaa
xchg
outsl
out
test
dec
int3
shll
cld
lret
xor
inc
call
in
sbbl
sahf
je
xor
gs
xorb
int3
sbb
jmp
divl
imul
or
outsb
sbb
mov
sub
out
push
push
push
sbb
sub
out
jbe
jb
loop
sbb
pop
test
test
add
cli
lea
lret
jo
leave
mov
mov
cs
push
mov
pop
add
dec
cli
shlb
xchg
ret
adc
lret
cmpb
mov
xor
lret
sub
cli
aad
fisubrl
lock
inc
ret
sbb
and
mov
je
lret
push
push
adc
cmp
push
ror
lea
imul
mov
jmp
sub
jecxz
xchg
imul
ret
fisttpl
mov
mov
mov
je
mov
jecxz
and
je
sbb
mov
imul
push
mov
mov
nop
adc
jmp
jns
pushf
cmp
pop
movsl
cli
fnstenv
mov
jg
imul
not
add
ljmp
adc
xchg
xor
xchg
sti
rcrl
xor
jne
push
repnz
sub
aaa
mov
jle
ss
jns
lea
pop
add
jae
xchg
int3
lock
pushf
push
push
and
out
xchg
dec
js
nop
mov
push
data16
int
push
mov
bound
dec
pop
mov
sahf
outsl
lret
ja
or
jg
sbb
push
decl
sbb
lea
cmc
jo
cmpb
dec
cmp
ds
mov
scas
xor
sbb
mov
outsl
loope
aam
pop
pop
and
nop
xor
je
mov
pop
mov
push
mov
imul
movsb
loop
or
lods
pop
pushf
leave
fcoms
lcall
dec
xchg
xchg
jne
add
and
movsl
sbb
mov
pop
movsb
adc
push
mulb
inc
ret
not
xor
pcmpgtd
lret
push
pushf
lods
dec
jno
xchg
inc
xor
mov
jno
push
stc
test
in
sub
mov
cwtl
mov
data16
in
andl
cli
lods
inc
pop
sbb
cmc
stc
jge
push
and
xor
jno
negl
imul
mov
and
pusha
pop
push
jecxz
push
cmp
jmp
push
sbb
movsb
sarb
fs
mov
jge
sub
adc
sub
push
je
lcall
pop
fwait
loope
jns
hlt
mov
mov
pop
leave
and
cmp
add
loopne
jmp
xor
addr16
ljmp
mov
int3
cld
inc
jp
aam
and
stos
xchg
cmpsl
mov
push
push
imul
push
in
cmpsb
cmc
sub
sbbl
push
sbb
sbbb
adc
adc
in
or
mov
daa
jb
cli
xchg
in
ljmp
pusha
mov
sbb
and
das
mov
jl
gs
jb
fbld
mov
cmp
cmp
movsl
aam
xor
movsl
dec
pop
mov
add
fstpt
enter
sbb
sbb
and
prefetcht0
test
push
pop
jmp
push
loope
mov
test
sub
dec
int
push
jno
sbb
xor
movsl
push
int3
or
cld
addr16
ret
push
jb
movsl
sub
hlt
pop
aaa
sub
lods
inc
cmpsb
and
in
sti
pop
mov
test
pop
nop
popl
jne
cli
and
decl
sbb
addr16
jbe
test
out
lret
jg
negb
mov
out
and
bound
movsl
adc
ds
jbe
ret
out
stc
dec
fisubrl
sbb
jae
out
loope
add
es
out
and
lret
movsb
popf
pusha
mov
adcb
int3
sbb
jbe
insb
ja
cwtl
sbb
stos
xor
mov
mov
aad
andl
add
sbb
out
sub
pop
xchg
imul
imul
mov
lods
add
arpl
sub
cs
sub
pop
mov
imul
nop
bound
xor
and
enter
sbb
adc
cmp
mov
lock
stc
aas
jmp
stos
data16
adc
jo
pop
inc
push
shrl
dec
shl
push
ret
mov
pop
mov
xor
sub
xchg
cmc
rcll
dec
mov
in
pusha
pop
sbb
pop
inc
mov
ljmp
popa
jb
stos
test
scas
pushf
add
cli
ret
inc
pop
inc
cltd
test
jbe
pop
jo
gs
cmp
pop
pop
dec
jmp
push
dec
push
xchg
divb
mov
in
or
xor
sahf
xor
lret
es
shll
xchg
mov
push
mov
leave
lret
daa
and
rorl
push
xor
xor
lret
iret
inc
xchg
xchg
mov
test
rclb
fsubs
outsl
aas
aam
lret
mov
lock
iret
movsl
dec
mov
jl
mov
or
and
sub
in
scas
pusha
imul
xchg
jno
sbb
add
test
adc
or
sub
dec
mov
addl
pusha
stos
mov
cmp
daa
inc
aad
jmp
repz
mov
push
inc
pop
jo
bound
lret
add
mov
push
xchg
mov
roll
adc
add
rcrl
jns
movsl
sbb
or
cltd
or
sub
pop
xchg
xor
gs
xor
jl
call
xchg
mov
imul
inc
sub
movsl
xchg
ret
pop
mov
cmpsb
jp
insb
in
negl
out
mov
add
xchg
dec
xchg
jne
push
popf
cmp
int3
and
stos
jg
or
vmwrite
in
jns
xchg
ret
std
adc
jle
and
movsb
adc
int
pop
inc
ret
jge
jae
stc
das
push
push
stos
andl
xor
push
scas
and
and
xchg
dec
fdivp
repnz
jb
mov
pop
sbb
stc
ret
neg
add
sahf
push
sub
test
iret
insb
insb
or
cli
ja
fcomps
mov
jne
cmp
inc
and
xor
int
sbb
sbb
mov
insl
into
lds
scas
icebp
ljmp
cltd
push
cmp
mov
dec
mov
rcll
xchg
inc
mov
sbb
lret
push
mov
not
cltd
cmp
mov
and
ret
xor
adc
in
xchg
or
xchg
das
repnz
out
ffree
shll
cmp
das
push
test
nop
xor
mov
imulb
ljmp
xor
push
data16
and
popf
pop
es
xchg
jo
xor
rcl
push
adc
xchg
adc
mov
sbb
push
in
jae
repnz
cmp
jecxz
lret
adc
jne
es
sub
sub
mov
jg
mov
lahf
xchg
xchg
push
rcll
fidivrl
or
dec
or
mov
outsb
cld
pusha
ljmp
outsl
sub
cwtl
stos
stos
sub
sub
nop
sub
test
fisttps
pop
cwtl
push
cmpsb
dec
neg
pop
push
dec
add
jb
jge
sub
jne
jo
sub
std
leave
ljmp
fists
jp
and
and
sbb
fnclex
cmp
add
les
pushf
movsb
add
sahf
andb
push
cltd
mov
xchg
out
cwtl
int3
idivl
cs
fcoms
dec
pop
inc
nop
mov
cmp
scas
pop
cmpsl
gs
pop
pusha
push
sub
sbb
and
loop
mov
outsl
mov
js
sbb
cld
add
insl
imul
add
add
jno
xchg
in
and
daa
pop
scas
or
sbb
inc
clc
fisttpl
fs
ret
add
adc
enter
inc
adc
jge
pusha
dec
cmpsb
mov
dec
or
pop
mov
sbb
shrb
adc
mov
sub
or
xor
and
sub
pop
inc
aad
int3
pusha
inc
mov
adc
fimuls
sti
int
sbb
jl
inc
fisttpll
mov
or
add
les
jecxz
or
mov
lret
test
outsb
sahf
bound
ljmp
out
aaa
stc
jmp
lods
push
int3
push
ffree
jecxz
push
ds
cld
cmp
iret
jne
xor
dec
mov
aaa
mov
push
xchg
add
or
xor
add
sti
mov
lods
push
int3
aas
cmp
adc
in
dec
mov
add
jge
or
fildl
push
inc
int3
movsl
push
testl
mov
aam
xor
cmp
sbb
adc
pop
pop
cld
add
sbb
xor
sub
stos
lret
movsb
xor
lea
mov
push
imul
dec
mov
int3
adc
in
mov
mov
lret
test
pop
mov
and
into
scas
dec
adc
jmp
or
sub
mov
leave
sbbb
shl
sbbb
test
in
bnd
cld
in
cmp
mov
or
inc
xor
cli
popa
mov
rcrl
repnz
adc
je
cwtl
faddl
loop
mov
push
add
mov
data16
sub
das
arpl
adc
xchg
mov
xor
xor
mov
pushf
pop
mov
pop
pause
je
roll
jns
imul
push
imul
sbb
lods
dec
or
cmp
stc
sahf
mov
rcll
test
lret
scas
mov
mov
mov
add
add
bound
call
mov
mov
jl
ljmp
jp
xchg
into
cmp
and
mov
cmpsl
mov
loope
mov
test
out
sbb
pushf
lret
cmc
mov
out
outsb
adc
or
mov
test
mov
call
repnz
test
fs
or
int3
xchg
jecxz
lahf
mov
jne
aas
jae
xchg
subb
mov
andl
int3
outsl
loopne
or
ficoml
insl
popf
sahf
pop
xor
and
jae
iret
popf
or
xchg
cli
call
popa
lock
cmp
xor
mov
rclb
les
pop
cwtl
lret
sbb
ja
test
lea
stos
shlb
xchg
lods
sub
pop
imul
negb
sub
loop
jmp
sbb
or
dec
in
pop
and
lret
adc
lea
xchg
lods
insl
shrb
into
xor
popl
mov
leave
dec
add
and
add
lret
loope
mov
rcll
mov
mov
sbb
ljmp
imul
adc
jns
and
sub
mov
mov
mov
mov
test
rcll
sahf
ljmp
jge
les
fisubl
ret
xchg
aas
pop
pop
inc
adc
or
lret
xor
xor
nop
popf
jne
pop
popa
xor
ds
lods
or
pusha
repz
sbb
xor
lahf
and
add
insl
out
icebp
lds
inc
cmp
bound
inc
insb
mov
and
sti
jp
out
mov
sub
fistl
and
xor
loopne
mov
cmc
mov
pop
aad
or
mov
cld
adc
jae
mov
mov
inc
repnz
cwtl
movsl
fstpt
push
pop
or
clc
fs
sub
inc
jge
dec
jl
loop
push
sbb
mov
movsb
das
lret
mov
and
push
pop
mov
cmp
push
in
mov
inc
movsl
mov
fs
dec
int3
sbb
sub
adc
push
loop
push
xor
idivl
test
push
nop
adc
sahf
fdivrs
add
mov
mov
mov
xor
mov
out
jno
daa
stc
in
push
test
jb
scas
movsb
adc
imul
push
inc
movsl
movsb
adc
ficoms
adc
cmc
xor
fstl
cmp
lea
lret
push
push
add
pop
pop
pusha
lds
sbb
inc
mov
xor
cld
xchg
data16
sub
and
mov
lea
fmull
jb
sahf
fwait
lret
sbb
test
mov
push
sbb
cmpsb
mov
push
jg
je
adcb
outsl
push
pop
cmp
jbe
test
out
pop
mov
stc
and
pop
ss
icebp
push
call
fucomip
xchg
mov
sub
test
sbb
test
cld
jg
and
push
inc
xchg
nop
lods
fistps
sarl
test
xor
cmp
pop
adc
call
or
fsubs
push
xchg
xor
adc
mov
gs
nop
xchg
pop
push
mov
mov
lods
xchg
jp
test
cwtl
push
das
std
sub
test
cmp
mov
lcall
jecxz
cmpsb
push
add
leave
adc
aaa
xchg
and
addb
lret
pop
fnstcw
fsub
sti
fcoms
xchg
push
imul
push
testl
shll
mov
je
mov
jmp
push
xchg
stos
int3
or
pop
xor
test
mov
mov
pusha
orl
xchg
mov
test
jo
jns
add
cmp
inc
lret
xchg
mov
mov
lret
pop
push
stos
pop
push
int3
dec
push
mov
imul
sbb
mov
test
xor
cmpsl
xor
test
xchg
and
std
loop
lret
test
stos
loop
add
jb
xor
fdivp
push
and
jp
pop
lret
das
lret
rorl
sub
imul
lret
pop
pop
pop
aas
sbb
xchg
jmp
jg
das
or
imul
pop
jnp
repz
pop
dec
inc
andl
cld
movsb
outsb
out
xchg
popa
sbb
clc
shrl
mov
shll
mov
stc
je
sub
push
out
les
push
lret
push
sar
arpl
jl
push
movsb
int
movsl
xor
fistl
scas
inc
das
mov
add
in
fchs
loop
enter
cmp
movsb
dec
xor
lea
aaa
enter
arpl
lcall
out
decl
mov
push
jecxz
xor
pop
notb
inc
xchg
orl
loopne
cmp
add
xlat
test
je
je
and
repz
sbbb
into
out
cmp
add
sbb
jae
xchg
and
test
push
jmp
jne
mov
cwtl
or
rol
loopne
rep
sub
xor
mov
int3
les
push
or
mov
in
leave
pop
mov
cmc
les
out
push
jnp
dec
sbb
aad
mov
gs
insb
jg
adc
sub
and
or
gs
jmp
xor
dec
mov
hlt
cmpsl
icebp
sbb
ret
mov
les
mov
nop
jmp
mov
out
or
sti
mov
scas
pusha
in
imul
pop
cli
leave
aas
shr
scas
push
lret
ret
add
jmp
test
cmp
xor
inc
jb
pop
lods
shl
mov
out
test
sub
mov
inc
mov
mov
mov
stc
sub
and
imul
aaa
sarb
stos
mov
fwait
out
and
sbb
adc
mov
sahf
int3
xor
push
pop
aad
or
mov
leave
push
and
mov
inc
adc
outsl
int3
setne
xor
aas
popa
jmp
lods
mov
mov
push
xchg
loope
test
int3
mov
mov
mov
dec
or
push
int3
es
xlat
dec
bound
mov
scas
xor
test
fwait
pop
pop
mov
mov
jnp
fsubs
xchg
in
push
sarl
pop
sub
mov
mov
cmp
inc
mov
idivl
int3
adc
inc
mov
pop
jbe
cmp
xor
mov
lret
mov
sub
rorb
stos
stc
out
jno
insb
push
adc
xor
mov
jg
divb
int3
leave
mov
jl
xlat
insl
int3
cmp
xor
lret
push
xchg
xchg
pop
xchg
sub
js
andl
sub
stos
je
push
scas
dec
mov
insl
scas
xor
stos
mov
or
adc
push
adc
fs
hlt
and
daa
mov
les
fwait
aaa
sub
mov
stos
icebp
stc
push
addr16
pop
bound
cmp
iret
cmp
push
repz
les
cmp
inc
out
loop
adc
les
xor
shr
mov
stos
cli
test
int
pop
dec
test
rorb
xchg
jbe
pop
cwtl
mov
mov
out
pop
repz
lahf
shll
outsb
pop
push
pusha
push
mov
xor
mov
xlat
xor
xor
hlt
add
stc
roll
in
add
xchg
rcr
int3
pop
and
mov
xor
or
test
cs
xchg
stos
loop
lods
test
int3
outsl
test
fcomip
mov
mov
mov
mov
and
test
jbe
mov
mov
mov
mov
adc
in
mov
push
push
popa
sbb
scas
hlt
dec
adc
adc
lock
movsb
mov
and
jo
push
cli
jmp
cmp
je
fs
pop
aaa
sahf
inc
mov
test
stos
xor
bound
lret
lcall
mov
add
mov
mov
outsb
jno
stos
fcmove
sti
jne
sbb
xchg
sbb
addr16
cmp
mov
fsts
and
lcall
pop
xchg
pop
inc
bsf
mov
or
or
jo
lods
or
cmpb
ljmp
aad
cmc
out
hlt
push
cmc
stos
adc
mov
inc
mov
add
inc
jl
sar
or
lret
pop
jl
fistl
pop
outsb
fistl
movsb
push
push
lods
fcomps
fwait
mov
xor
shll
cmc
or
stos
add
adc
outsl
lret
push
pop
mov
repz
popa
or
pop
mov
rcrl
pusha
std
mov
sub
sbb
test
ds
sarl
pop
push
push
sbb
lret
mov
sbbl
icebp
push
mov
xchg
mov
test
xorl
popf
push
fmuls
out
in
les
clc
pop
in
mov
push
aad
ret
sub
push
mov
cmp
nop
xlat
xor
stc
test
sbb
dec
xchg
loope
pop
ss
lock
mov
or
dec
xor
mov
sti
inc
lock
sub
and
push
jnp
lock
jnp
repnz
jecxz
nop
call
mov
inc
or
jbe
mov
mov
pop
lret
jl
addl
and
xchg
stc
iret
out
nop
or
jmp
xor
ljmp
mov
int3
push
dec
popa
jb
pop
out
sbb
sbb
sbb
jns
and
in
rorl
pop
cmpsl
adc
pop
xor
sbb
pop
imul
jbe
fcoms
sub
dec
sbb
pop
xor
xchg
in
mov
jmp
pop
test
xchg
out
jb
out
mov
enter
pop
ja
sub
cwtl
cmp
nop
sti
xchg
mov
dec
or
pushf
pop
adc
mov
jae
lret
adc
xchg
push
jp
jo
fcomip
jo
and
mov
leave
dec
insl
sub
dec
cs
int3
sbbl
test
leave
push
push
es
out
hlt
mov
cmpsl
test
xchg
fildll
pop
shrb
add
xor
push
sub
pushf
mov
cltd
roll
idiv
std
adc
das
dec
push
ficoms
dec
sti
arpl
dec
inc
adc
push
add
pop
gs
iret
gs
push
pop
lret
repnz
jecxz
add
add
out
cmp
mov
add
loop
ret
pop
nop
int3
mov
push
xor
inc
inc
jns
mov
shr
lret
vpmuludq
or
mov
lods
insb
testl
fmul
iret
mov
popf
push
testb
mov
mov
mov
mov
movsb
in
fldcw
cmp
xor
xor
loopne
pop
call
ffree
test
ds
mov
sbb
into
cmp
ret
push
dec
jno
push
mov
sbb
imul
aas
dec
test
mov
jne
sub
push
xor
setae
sar
sbb
and
popa
xor
aad
movsl
ja
ss
cmp
int3
push
cmp
jg
insb
dec
mull
pop
push
daa
cmpsl
pop
mov
mov
stos
mul
xchg
jmp
cltd
pop
inc
es
std
mov
int3
dec
sbb
pushf
repz
and
jbe
sub
in
int
cs
loope
enter
insb
jb
sub
mov
mov
rclb
pop
je
adc
cmp
movsb
cli
dec
out
dec
repnz
push
int3
or
out
mov
dec
je
idivl
mov
push
or
into
imul
iret
shll
movsb
inc
and
add
cmp
int3
push
cmp
adc
push
call
lods
mov
ret
push
fildl
push
mov
dec
pushf
sub
cwtl
mov
fxch
push
icebp
es
or
out
out
lret
lret
xchg
repz
mov
js
aas
xchg
dec
daa
dec
add
and
inc
pop
add
das
test
sbb
in
insb
aaa
jae
repnz
mov
int3
int3
stos
sbb
mov
and
dec
add
push
dec
jns
fimuls
sub
lret
aaa
mov
inc
sbb
jbe
fs
shrb
sub
dec
jae
xor
nop
adc
subb
adc
sub
mov
add
adc
xchg
push
dec
or
fwait
push
test
test
inc
adc
xor
mov
ret
loopne
test
int
pop
sti
sbb
std
loop
dec
sahf
jbe
cli
outsl
sbb
test
testb
jle
test
loopne
xor
movsl
xchg
jo
or
and
das
xchg
leave
icebp
push
xchg
xchg
popf
ja
pusha
subl
mov
or
scas
add
ficompl
xchg
shrd
shrb
imul
cltd
inc
or
repz
cld
xchg
xor
xchg
aad
mov
out
imul
xor
and
ret
stos
pop
add
pop
adcb
and
fisubl
xchg
movsb
push
and
inc
xor
das
stos
push
in
fwait
daa
or
int3
mov
jbe
inc
movsb
ds
les
xor
int3
hlt
pop
movsl
add
mov
repz
cld
push
xchg
fsubrs
pop
mov
add
add
out
push
in
cmp
push
clc
ficompl
pop
xor
pop
xor
mov
stos
mov
push
mov
js
xor
inc
iret
dec
outsl
cwtl
sbb
sbb
add
pop
adc
int3
fistl
scas
insb
std
shl
xchg
out
jo
outsl
mov
clc
inc
cmp
xchg
xchg
push
and
jge
pop
popf
int3
mov
and
xor
jg
sbb
hlt
test
adc
dec
sub
icebp
lods
jns
jp
cmpsb
pop
pop
orps
mov
cwtl
fs
xchg
cmp
jecxz
cs
adc
out
dec
and
or
mov
je
mov
adc
mov
in
adc
call
dec
int3
mov
int3
jecxz
and
stos
sti
loop
add
mov
cmp
sbb
lret
cli
arpl
out
cmp
jmp
mov
pop
jmp
test
add
sub
bound
mov
xchg
xchg
push
xor
bound
stc
out
lods
jno
mov
xor
pop
and
lcall
dec
stc
test
pop
mov
pop
and
and
dec
jg
fdivrl
mov
xor
and
mov
and
subl
dec
daa
add
enter
cmpsb
adc
lcall
test
fs
std
cmp
xor
jmp
push
stos
stc
repz
dec
xor
sub
mov
lods
sub
pop
push
dec
jb
lahf
push
stc
push
push
mov
lret
sahf
push
or
test
push
lret
int3
mov
test
push
insl
cmp
jo
and
les
add
push
mov
push
pusha
fstpl
movsb
push
test
lret
imul
add
into
sbb
fnstenv
xor
inc
and
jnp
mov
mov
xor
movsb
imul
pop
cmc
inc
adc
imul
pop
push
and
sub
and
mov
sbb
cmpsb
das
mov
bound
xchg
cltd
mov
mov
dec
mov
xchg
lds
and
xor
cmp
add
aad
adc
push
inc
jnp
int3
dec
inc
mov
sahf
arpl
gs
jle
mov
or
adc
pop
push
shl
push
fisubrs
jmp
dec
leave
mov
popf
jb,pn
mov
mov
push
xchg
xchg
sti
jl
push
sahf
adc
imul
xor
push
enter
xchg
out
sti
stos
jae
imul
xchg
mov
lret
dec
shrl
mov
int3
sub
inc
cld
aam
sub
sub
jns
push
inc
mov
dec
or
mov
add
xor
adc
push
cmp
mov
pop
in
lea
popw
jo
ss
mov
fistps
sbb
mov
mov
and
arpl
fldl
adc
in
xor
lods
mov
ljmp
push
leave
fdivl
sbb
imul
adc
mov
andl
pop
cmp
or
outsb
mov
adc
sbb
sahf
mov
daa
sti
jge
mov
int3
gs
and
repnz
test
stos
push
xchg
xchg
pop
mov
and
cmp
cmc
xchg
pop
outsb
fst
mov
jno,pt
inc
pop
mov
enter
xchg
xchg
push
das
lods
lcall
sbb
and
repnz
mov
pop
sub
mov
add
dec
pop
in
popa
fdiv
mov
lds
out
test
cmp
mov
push
sbb
jbe
lret
in
mov
sbb
scas
int3
loopne
fs
inc
mov
fsubl
cmp
lret
dec
jnp
bound
ret
or
pop
cmp
push
cld
jge
pop
sahf
mov
mov
or
sbb
scas
ret
and
pop
sbb
pop
jne
call
lea
popa
mov
enter
jg
pop
pop
jp
sub
movsl
xor
daa
pop
push
sub
mov
xor
or
fsubp
lret
mov
lcall
es
es
cltd
sbb
ss
shlb
popf
mov
test
cmpl
fnstsw
stos
pop
sub
sbb
mov
add
call
mov
rorl
mov
xor
loop
leave
les
shr
test
addr16
sbb
mov
lock
stc
faddl
adcb
enter
sbbl
mov
in
stos
pop
cli
dec
fs
outsl
or
int3
in
pop
cmp
add
mov
lret
pusha
cmp
aad
int3
mov
cmc
jecxz
jno
xor
int3
mov
ds
mov
popl
pop
mov
mov
dec
lods
cli
repnz
arpl
xchg
xchg
sti
ss
fimull
sub
adc
movsb
aam
mov
jle
outsb
test
into
mov
xchg
hlt
push
and
mov
mov
sbb
inc
orb
lea
push
jo
mov
mov
cmp
out
shrb
fistl
dec
icebp
xor
rclb
stos
and
push
cmc
stos
lds
shlb
and
pop
mov
lret
fists
cmc
fnstcw
arpl
cld
sbb
ret
pop
and
ret
negb
out
push
outsb
mov
das
mov
dec
xlat
ret
fcoms
test
jl
and
lcall
test
inc
fdivrs
enter
out
mov
pusha
lock
jne
sahf
int
outsl
add
sbb
or
push
shlb
stos
pushf
ss
push
adc
ljmp
sbb
ret
in
and
mov
mov
aas
adc
sbbl
aaa
int3
cmp
dec
pop
shll
push
jo
push
into
xor
aas
sarb
mov
and
imulb
xor
and
outsb
mov
mov
aad
push
jbe
mov
and
lret
pushf
xchg
lcall
sub
xorb
adc
xor
in
pop
mov
aam
adc
test
iret
and
in
scas
cli
pop
data16
clc
mov
mov
iret
cmc
fwait
ja
out
mov
mov
sub
insl
dec
pop
sbb
int3
xor
lods
dec
or
or
stos
lret
sar
arpl
jl
sahf
add
test
adc
es
stc
lea
das
test
std
mov
nop
data16
xchg
mov
subl
loopne
jl
das
loop
stos
sub
push
xchg
xor
inc
in
test
sub
dec
cmp
enter
pusha
inc
je
adc
shrb
mov
movsb
mov
jmp
inc
les
pop
mov
adc
in
cmp
cwtl
movsl
pop
in
fcomps
int3
pop
enter
adc
andl
imul
int
xchg
pop
dec
popf
int3
test
sub
imul
lret
xlat
adc
pushf
mov
and
and
and
mov
out
insb
inc
add
jns
jns
xchg
fs
and
jecxz
sub
dec
jge
mov
aas
shll
mov
xchg
mov
mov
or
mov
and
fwait
in
push
lret
out
adc
mov
ss
jecxz
test
and
push
add
in
mov
scas
cmpsl
jbe
ret
iret
sbb
test
push
mov
stos
popf
and
mov
xchg
mov
dec
xchg
xor
or
mov
jns
push
adc
fs
lret
and
inc
lret
lods
jns
movsl
cmpsb
sbb
or
sub
add
jb
lods
mov
std
adc
pop
xor
push
icebp
repz
and
and
andb
lock
cmc
imul
int
adc
and
xor
or
sub
inc
add
movsb
cmpsb
mov
je
dec
mov
lock
xchg
leave
pop
jge,pt
lock
mov
mov
xchg
jno
lret
sub
inc
mov
inc
out
std
adc
inc
lcall
sti
and
repz
inc
scas
dec
sub
sub
sub
ja
xchg
push
daa
dec
ret
fildll
jl
adc
insl
mov
loope
or
push
roll
inc
xchg
mov
cmc
and
cmc
in
inc
jge
cmp
jp
aaa
xchg
les
mov
ret
outsl
sbb
iret
icebp
ficoms
lods
xchg
mov
mov
jnp
fisubs
mov
jle
shlb
dec
fscale
outsb
xor
push
es
and
inc
push
cld
imul
jp
ds
mov
dec
popf
clc
leave
push
test
sub
test
div
mov
dec
js
jl
enter
icebp
inc
cmp
ds
sbb
mov
push
out
scas
sub
into
jmp
int
cmc
mov
test
xlat
inc
cmp
fstpl
movsb
mov
mov
pop
mov
dec
xchg
ja
and
fistpl
lret
adc
xor
cli
pop
jne
repz
imull
inc
mov
test
call
push
bnd
jae
sbb
in
xchg
fimull
push
xor
out
push
mov
sub
xor
in
bound
lret
pop
scas
int3
push
pusha
mov
shll
or
in
push
movsb
pop
push
nop
push
lret
jbe
mov
imul
add
je
pop
cli
mov
jo
xchg
insb
pop
iret
mov
jecxz
cmc
and
roll
adc
addb
sub
xchg
ret
sti
stos
sti
push
jno
push
inc
dec
lods
or
mov
dec
xlat
xor
test
and
cmp
jecxz
dec
inc
repz
pop
cmp
lret
test
mov
sbb
xchg
push
mov
adc
sub
inc
xor
sti
sarb
pop
sbb
sbb
pop
mov
stc
xchg
sub
and
mov
mov
cwtl
insb
xchg
mov
lret
cld
push
mov
fwait
push
and
adc
jb
mov
push
sbb
mov
pop
mov
pusha
dec
lock
push
xor
inc
shll
jge
lds
or
aas
je
scas
sub
pop
push
xchg
or
iret
rorl
call
jl
xor
fisttpl
mov
mov
sub
push
pop
rcrb
scas
cld
shl
in
lret
enter
xchg
or
xor
mov
or
icebp
mov
pop
add
sbb
pop
adc
pop
mov
dec
out
je
je
stos
sbb
dec
test
shl
clc
xor
push
inc
inc
mov
popa
loope
dec
jbe
xchg
push
or
lock
andl
aam
jbe
adc
js
xor
mov
mov
clc
js
cs
mov
mov
add
fildl
xor
xor
and
xchg
divb
test
mov
stos
sub
popa
pusha
out
adc
push
xchg
mov
ljmp
jae
mov
mov
cld
add
test
popa
scas
scas
int3
sbb
push
mov
pop
js
aam
xor
cmpsl
mov
mov
pop
int3
lea
stos
xchg
lret
outsb
push
loopne
insl
je
int3
lds
cmp
dec
test
add
je
xchg
sbb
fldt
fdiv
adc
out
jg
lcall
xchg
and
ret
and
pop
test
cmpsl
lret
inc
xchg
mov
mov
cmpsl
icebp
nop
xor
je
out
add
push
popl
lret
in
hlt
add
sub
movsl
xchg
test
mov
jo
clc
fidivrs
pop
adc
popf
xchg
daa
rcll
out
xor
sub
jl
pop
push
gs
je
pushf
movsl
imul
mov
ret
fisttpll
loopne
js
imul
adc
aad
scas
test
scas
inc
dec
test
and
sub
jmp
and
movsb
push
mov
pop
jns
cli
scas
xor
xlat
fimull
imul
adc
divl
ja
ds
mov
ja
icebp
cmpsl
das
push
pop
mov
data16
mov
test
cmp
xor
stos
ds
pop
ljmp
imul
stos
and
not
pop
push
xor
lret
or
add
je
mov
mov
lcall
outsl
jg
fwait
decb
pushf
jecxz
jmp
adc
divl
mov
out
push
ret
sub
jne
push
test
adc
div
rcrl
add
cmp
push
stc
ficoml
mov
jmp
lret
cmp
mov
call
xor
pop
fcoml
mov
sub
xor
inc
lret
dec
xor
cmp
bound
icebp
dec
xchg
jg
pop
lods
xor
test
int3
mov
push
adc
icebp
sbb
test
mov
jg
xchg
push
mov
loope
or
cmpsb
cltd
test
pop
rol
or
in
jne
mov
fnstcw
mull
out
lcall
aam
dec
mov
adc
sub
sub
shl
repz
xchg
repz
pusha
lea
in
dec
rclb
pop
mov
loop
xchg
push
pop
inc
sub
cmp
lcall
pop
int3
fists
in
mov
sbb
pusha
aaa
dec
in
xchg
jg
xchg
insl
jg
or
leave
int3
mov
sbb
fistps
pop
movsl
pop
out
sti
xchg
mov
adc
mov
push
fdivp
addr16
dec
pop
mov
xor
mov
add
popf
mov
lcall
rcr
scas
loope
or
cmp
fs
mov
xchg
fldl
ja
xor
fucom
sub
pop
orb
das
push
imul
push
mov
inc
dec
xchg
mov
or
mov
inc
into
cld
aad
int3
int3
mov
mov
xchg
mov
lret
inc
outsl
xchg
test
mov
cmpsl
dec
xchg
xchg
imul
sbb
add
mov
int
ljmp
repz
inc
clc
out
add
sbb
bound
sbb
mov
mov
pop
mov
int3
data16
nop
into
les
and
jge
lret
test
stc
repnz
inc
pop
jne
enter
ljmp
cld
in
inc
std
xchg
xchg
and
sub
pop
pushf
cmp
inc
cld
pop
xchg
inc
or
cmp
pop
jmp
or
jnp
lret
push
psllw
push
movb
int3
stos
pop
in
les
lock
decl
pusha
jmp
fwait
int3
int
js
sbb
mov
xchg
and
rorb
inc
movsb
std
pop
pop
push
xor
or
mov
mov
daa
fs
loopne
ret
hlt
xor
out
xchg
iret
jae
sbb
cltd
add
jo
and
pop
lret
pushf
imul
pop
mov
and
push
dec
pop
xchg
push
or
and
and
testb
and
repz
xchg
jg
sbb
mov
mov
pushf
mov
push
fcompl
daa
movsl
insb
jae
lea
pop
popa
outsl
pop
in
scas
push
sub
test
test
and
lods
daa
lods
testb
cmp
sbb
ret
pushf
ret
mov
pushf
jo
or
loopne
push
sub
mov
jmp
cli
je
sti
inc
adc
movsb
aam
dec
inc
lret
mov
out
clc
stos
add
sub
sub
outsb
mov
nopl
in
pop
mov
insb
and
jl
xchg
push
pop
mov
cmpsl
popf
mov
sbb
inc
xchg
mov
adc
mov
mov
sbb
xchg
mov
push
clc
call
pusha
mov
sub
and
lcall
icebp
jge
lock
sbb
push
clc
mov
in
lea
int3
aam
pcmpgtd
mov
lea
mov
aad
fwait
mov
cmp
inc
pop
stos
inc
mov
cmp
mov
inc
mov
int3
sti
mov
leave
mov
lret
outsl
int3
and
mov
sarb
mov
nop
cmp
mov
out
daa
push
jo
ret
sbb
adc
in
cli
push
arpl
lods
jl
add
dec
cld
insb
mov
jns
int
jnp
pop
outsl
cmp
jae
lahf
rcrb
and
add
pop
sbb
add
cmp
lret
rcrl
mov
out
setg
hlt
loop
jno
loopne
pop
js
adc
dec
movsl
jb
lds
fwait
mov
mov
stos
jnp
mov
xor
es
sarl
sbb
xchg
add
gs
sahf
add
jne
pop
scas
pop
mov
sub
test
xchg
in
je
mov
shlb
mov
cs
je
inc
and
mov
ljmp
adc
mov
in
enter
push
inc
std
cmp
mov
pushw
jns
mov
rcrl
aam
les
xchg
inc
sub
mov
scas
inc
adc
leave
cmpsb
popa
mov
pop
sub
mov
sub
cli
mov
dec
cmp
jae
cmp
mov
or
aaa
mov
rcrb
xchg
test
push
imul
and
dec
sub
iret
push
mov
mov
sbb
sbb
cmpsb
cmc
shll
mov
hlt
jo
jmp
fwait
repnz
pop
push
sahf
fisttps
mov
iret
jno
fnstenv
inc
outsl
repz
sbb
rol
cmp
xchg
add
jns
inc
cld
or
mov
mov
and
ljmp
xorl
push
in
add
mov
mov
cmp
mov
mov
in
and
inc
mov
test
xor
insl
outsb
ficomps
lea
ja
jnp
mov
lods
ss
cmpsb
insb
xor
jl
jo
push
mov
sbb
sbb
int3
mov
jns
movsl
xor
mov
fbstp
test
mov
xchg
jae
roll
sahf
movsl
hlt
push
xchg
add
les
ret
scas
push
aad
lret
xor
hlt
mov
jmp
aaa
cmpsb
and
addb
enter
into
lret
lret
jmp
mov
test
and
mov
pop
xor
sbb
mull
pop
stos
outsb
aas
mov
lds
aam
arpl
mov
jns
icebp
addr16
outsb
cmpsl
fwait
in
popf
mov
lods
mov
add
cmc
inc
inc
xchg
or
pushf
hlt
fildll
mov
in
mov
jno
hlt
aad
push
mov
loope
mov
jae
je
pop
adc
mov
pop
pushf
jmp
fwait
sbbb
and
jns
mov
lods
xor
test
in
jb
insb
dec
mov
lea
in
jp
je
xor
mov
mov
dec
add
pop
mov
adc
lds
pop
jl
enter
stc
jbe
jge
icebp
nop
add
push
repnz
sahf
arpl
je
xor
cmc
leave
scas
test
rol
stos
inc
mov
sub
mov
xchg
movsl
fiadds
pop
es
inc
lods
rcll
sub
mov
or
mov
mov
cmpsl
lea
and
ja
fidivrl
sub
aam
or
xlat
xchg
mov
add
push
sbb
fcmovb
je
cwtl
sbbl
lds
xchg
and
xchg
mov
pusha
in
jmp
fdivrs
dec
scas
dec
mov
jnp
push
mov
pusha
loopne
xor
mov
mov
jg
imul
mov
lods
pop
js
xchg
xor
std
out
ljmp
cmp
test
lods
jnp
sbb
and
inc
dec
add
daa
xlat
int3
hlt
xor
xor
inc
and
mov
daa
lds
mov
shlb
ja
test
lret
mov
jne
test
clc
popa
movsl
mov
incl
lret
arpl
pop
mov
add
cltd
xor
loope
sub
lret
outsb
mov
aam
or
stos
mov
mov
cmpsl
adc
mov
adc
imul
int3
outsb
mov
enter
lock
in
xchg
in
xchg
add
scas
pop
mov
test
int3
das
mov
ret
mov
mov
pusha
out
mov
or
fnsave
lods
sti
adc
orb
add
mov
popf
pop
add
mov
and
mov
pop
es
jne
sbb
sbb
xchg
adc
ret
pop
xor
popa
pop
sbb
mov
ss
cmp
std
adc
add
mov
jge
daa
rorl
ret
xor
pop
add
ss
pusha
push
and
dec
sub
cltd
adc
mov
cli
cmp
mov
fwait
xor
hlt
cs
cmc
jno
cmp
xor
inc
push
mov
push
fimull
mov
cmp
pop
fsubrs
mov
add
dec
enter
and
mov
and
jbe,pt
pusha
xchg
leave
jne
fs
mov
or
aam
ror
mov
xchg
adc
gs
loope
lock
mov
lret
and
jno
mov
aad
dec
xor
push
mov
fmuls
mov
adc
sarl
ret
sub
dec
inc
daa
cmpsl
lods
push
cwtl
or
add
sbb
cld
lahf
add
ja
xor
adc
mov
and
jns
fs
add
inc
xchg
loop
sahf
xor
pmaxsw
lock
or
in
xchg
xor
mov
mov
mov
push
in
mov
adc
jge
insl
cmpsb
pop
mov
push
mov
sub
mov
fs
daa
stos
scas
pop
test
mov
sbb
inc
mov
addr16
dec
mov
cmp
imul
stos
sbb
pop
mov
sub
movsb
xor
orl
mov
adc
xchg
mov
clc
mov
adc
stos
in
xchg
mov
scas
sbb
sub
mov
aad
add
xchg
arpl
xor
pop
lock
and
pop
mov
add
mov
int3
sarb
mov
or
hlt
stos
enter
fcmovbe
mov
jne
and
xor
pop
repz
sbb
aas
mov
push
out
mov
rorl
lds
mov
icebp
xchg
insb
data16
pop
mov
and
xchg
mov
jns
xchg
jno
sbb
dec
mov
xor
mov
loopne
sbb
mov
sub
mov
jnp
fwait
mov
mov
pusha
fmuls
xchg
sahf
test
mov
imull
gs
push
mov
sahf
push
shlb
outsl
jbe
jns
xchg
xor
lret
cmp
pop
mov
incb
adc
add
icebp
mov
ja
dec
sbb
push
mov
cwtl
dec
sub
cmp
dec
inc
clc
movsb
insb
inc
inc
mov
lcall
rolb
fnstcw
inc
out
mov
xor
add
xchg
or
nop
dec
insb
xor
mov
mov
out
add
mov
lea
inc
jne
jmp
fadds
push
mov
out
fnstenv
stos
xor
fists
mov
sbb
mov
scas
cmpsl
fwait
cld
mov
push
aaa
leave
scas
insl
sbb
bnd
popf
sbb
dec
pop
shll
stos
loope
in
jae
push
inc
fisubrl
insb
mov
lahf
and
test
stc
xchg
pop
jbe
in
js
in
or
jp
fs
std
push
scas
jge
lods
inc
cli
hlt
dec
add
mov
mov
push
push
psubsb
aaa
and
inc
in
mov
or
shr
or
mov
jl
lret
test
push
mov
inc
mov
lds
adc
add
pop
jl
mov
shrb
sbb
sahf
iret
cmp
cmp
stos
cmp
enter
aas
imul
test
xchg
push
movb
mov
push
or
imul
push
sbb
data16
mov
data16
fwait
jnp
repz
mov
scas
dec
sarb
push
and
sub
insb
in
ret
enter
dec
jg
sbb
pop
xorb
inc
cmp
sbb
sbb
sti
pop
jno
mov
rorb
sti
lahf
push
jb
test
xor
xchg
hlt
add
faddl
adc
mov
int3
sbb
push
stos
outsb
mov
and
ficoml
outsb
mov
int3
and
popf
insb
sub
mov
je
fwait
jae
outsl
mov
sbb
out
loopne
dec
mov
inc
ret
adc
push
mov
mov
and
cli
out
mov
or
data16
mov
stos
pop
iret
popa
jbe
dec
push
sbb
mov
cmp
push
mulb
xchg
je
mov
mov
mov
pop
cli
in
mov
mov
mov
or
or
jo
mov
dec
addr16
mov
push
xchg
inc
add
test
add
dec
negb
xor
js
push
cs
mov
mov
idivb
adc
xchg
jo
pop
pop
push
cmp
test
iret
cmp
movsb
push
xlat
je
addl
aas
movsl
in
jmp
mov
ret
mov
lahf
loopne
cmpsb
scas
inc
mov
mov
std
stos
data16
stc
loop
jno
mov
add
sbb
sbb
push
popf
lret
lds
mov
out
cmpb
fldl
jb
cmp
shl
push
jno
add
and
test
push
lret
js
sbb
sub
xchg
jmp
xor
inc
mov
adc
pop
sub
cld
lcall
adcb
jb
adc
adc
ja
inc
roll
push
pop
ficoms
jbe
adc
fsubp
lahf
add
xchg
insb
fsubl
mov
cli
jecxz
push
movsb
sub
fbstp
pop
movsl
jmp
std
imul
test
les
stos
in
cmp
fimull
loope
mov
jb
aas
pop
les
mov
dec
mov
and
cld
cmp
jno
test
xor
push
insb
lahf
dec
xchg
sbb
fstps
push
int3
and
sbb
mov
fnsave
mov
aam
or
int3
jns
data16
js
lret
pop
fnsave
fptan
lahf
je
pop
mov
pop
mov
loopne
int3
xchg
jb
cli
add
insb
adc
scas
mov
test
sub
ljmp
sub
js
inc
pop
imulb
push
shr
stos
int3
sub
lret
rclb
in
push
mov
movsb
shrb
mov
pop
push
xchg
aas
push
nop
sbb
lret
loope
add
xchg
mov
pop
inc
call
inc
bound
jl
push
es
dec
insb
ljmp
inc
int3
in
divl
into
stc
pop
test
out
shl
mov
add
lret
push
fidivrl
mov
movsl
aam
mov
jns
mov
adc
lret
bound
aam
mov
out
sub
popa
xor
push
adc
stc
inc
data16
pop
or
push
mov
mov
inc
idivb
pop
jmp
jmp
mov
std
mov
sbbb
xchg
sbb
testb
xor
insb
pop
pop
push
rep
dec
lock
ja
scas
rolb
lea
jmp
jp
test
aaa
add
or
cmc
enter
leave
fimuls
popa
cmc
and
push
sbb
lods
pop
push
mov
jecxz
fstpl
shll
jne
jecxz
or
jmp
mov
jno
shrl
popa
lret
push
int3
mov
and
gs
imul
cmp
mov
ss
dec
pop
push
jl
and
push
repnz
mov
xchg
mov
int3
addr16
add
test
xchg
je
cmp
mov
pop
bound
cmpl
enter
dec
ja
mov
int3
add
pop
push
fst
cmc
pop
dec
jmp
pop
test
lret
lahf
sbb
cld
call
and
js
lea
push
push
out
movsl
pop
pusha
xlat
movsb
imul
mov
mov
bound
xchg
add
daa
rcrl
lods
imul
sub
clc
adc
cld
push
cmpsl
pop
xchg
lret
mov
dec
je
mov
lea
popl
xchg
push
daa
or
mov
ficoml
xlat
jns
jne
and
lds
fsts
mov
fbstp
lea
pop
mov
mov
in
add
pop
movsl
xor
pop
inc
jae
aaa
dec
jo,pt
jl
loopne
repz
mov
pop
push
adc
mov
push
pusha
popf
movsl
daa
into
je
dec
imul
cmp
arpl
popa
jmp
fsubs
sbb
out
xchg
mov
push
adc
movsl
push
out
cmp
pop
pushl
insb
cwtl
scas
cwtl
imul
leave
jae
pushl
mov
fldt
and
push
jp
jecxz
jno
das
jmp
movsl
rcrb
and
xchg
or
pusha
mov
adc
ljmp
inc
xor
lret
ja
data16
imulb
insb
push
loopne
in
mov
push
popf
lret
jnp
add
or
aad
stos
pop
cmpsb
lock
mov
xchg
aam
dec
ret
rcrl
fs
testl
mov
pop
repnz
in
imul
inc
mov
add
ljmp
mov
sarl
xor
xchg
call
popf
jno
arpl
lea
int3
add
shr
xor
cmpb
cmp
mov
push
insb
push
dec
stos
lods
jne
out
push
ret
xchg
cmp
js
das
int3
inc
or
lret
shl
xchg
mov
inc
clc
pop
sbb
mov
shrb
mov
es
jb
mov
scas
dec
pusha
lods
arpl
jecxz
ficompl
push
bound
movl
rclb
mov
imul
fmull
dec
cmp
add
add
xor
fs
out
pop
dec
inc
mov
add
push
iret
xor
loope
xor
dec
mov
cld
dec
in
insl
and
pop
pop
repnz
inc
push
push
dec
push
shlb
mov
adc
or
repz
callw
pop
adc
call
je
iret
mov
mov
je
lret
xor
add
mov
notb
xor
loope
or
mov
sbb
xchg
lods
imul
int3
stc
movsl
in
cld
inc
jecxz
mov
adc
sbb
mov
and
les
andb
mov
sub
aam
dec
cmp
int3
lcall
pusha
pop
rcrb
pushf
jmp
fdivl
push
push
jecxz
mov
fidivrs
ss
lock
cli
jns
out
mov
aaa
ret
outsl
jmp
push
je
xchg
xchg
add
push
scas
mov
lock
sub
or
rorb
orb
jle
int3
mov
lock
or
dec
lahf
leave
cmpsl
push
in
jge
mov
ds
inc
int3
pop
push
add
fnstsw
xor
pop
test
movsb
mov
xor
stos
push
div
les
lahf
int3
test
out
cmp
mov
cld
push
pop
addl
cwtl
fwait
and
pop
mov
dec
jge
push
push
das
mov
pop
mov
mov
push
lret
pavgb
xor
out
sti
flds
sub
data16
sub
insb
push
sbb
jecxz
cmp
outsb
pop
mov
daa
mov
ja
xchg
dec
lea
xchg
jnp
pop
mov
sub
repz
add
dec
insb
pop
scas
dec
inc
adc
adc
int3
popa
cld
jae
mov
push
push
pop
je
sub
inc
xchg
cmc
inc
outsb
scas
mov
je
dec
dec
fs
insb
and
and
sub
popf
bound
aam
mov
daa
xor
sub
sbb
push
ficomps
mov
jge
push
cld
push
inc
hlt
call
stos
test
adc
mov
rol
leave
xor
mov
lods
mov
ds
push
cmp
iret
sti
dec
jbe
push
test
add
xchg
dec
scas
sub
in
pop
shrb
lret
pop
std
dec
dec
int3
inc
push
mov
stc
pop
pop
xor
cmc
xorb
cmc
out
outsb
pop
adc
imul
repnz
cmp
test
fs
adc
aas
mov
insl
pushf
and
hlt
push
mov
adc
popf
int3
pop
in
pop
cmp
lret
and
stos
sub
pop
out
sahf
int3
dec
daa
push
popa
add
mov
mov
notb
mov
lds
and
bound
pop
gs
cmpsb
scas
xchg
push
dec
jae
mov
std
je
int3
mov
arpl
inc
and
xchg
xchg
lret
imul
pushf
int3
icebp
dec
lret
cli
repnz
xchg
jge
shlb
push
cmc
inc
insl
sbb
mov
push
in
fcom
stc
adc
jl
and
push
repnz
shlb
iret
das
pand
mov
imull
pop
imul
lods
xchg
mov
lahf
out
push
and
shll
cmpsl
sti
mov
fcomps
or
notb
aad
sub
fadds
jge
mov
in
xor
sahf
or
xchg
leave
orb
push
pop
shrl
aad
push
loope
mov
push
jp
jle
repz
mov
add
inc
fstl
fs
scas
lods
adc
xor
icebp
add
std
xchg
or
sbb
lahf
lret
inc
sbb
push
mov
xor
je
and
gs
and
push
mov
stc
test
mov
pushf
bound
js
out
mov
xchg
mov
scas
xor
mov
aad
repz
or
lret
cmp
mov
mov
scas
jmp
mov
sbb
push
mov
xchg
xlat
gs
xor
dec
xchg
sub
daa
cmp
enter
movsb
mov
imull
jg
dec
dec
mov
inc
in
sbb
in
in
sbb
push
xchg
mov
dec
cmc
xchg
and
xor
inc
outsb
adc
adcl
cltd
or
in
into
push
xchg
out
pop
dec
jo
jo
or
add
jbe
stos
and
mov
jecxz
and
sub
fdivs
aad
jbe
divl
mov
or
scas
sbb
notl
icebp
adc
jp
ja
sbb
ficoms
pop
push
fwait
pop
cmp
xor
jecxz
jecxz
movb
js
jmp
mov
das
lret
mov
out
in
and
and
ljmp
pop
mov
std
fcoms
add
dec
lods
dec
pop
sbb
jg
popf
sbb
mov
push
and
sbb
sub
les
sbb
xchg
movsl
cmp
sub
andb
pop
lret
mov
testl
sub
xchg
sbb
in
aas
hlt
or
testl
and
out
mov
add
xchg
iret
addr16
jno
sub
adc
cmp
ljmp
mov
pop
xchg
push
jl
rolb
push
loop
rol
outsb
dec
sti
dec
cmpsb
pop
mov
xchg
fstpl
jmp
mov
inc
pushf
jmp
test
push
mov
push
std
mov
and
inc
icebp
xchg
fistpl
jbe
orb
insl
sbb
pop
and
push
mov
popf
sub
add
pop
test
in
in
test
dec
cmpsl
cs
andl
ds
lods
add
scas
das
je
mov
cmp
pop
xor
mov
or
mov
xchg
mov
js
mov
andb
mov
sbb
jl
daa
push
push
ret
mov
sub
mov
jnp
or
lods
add
cmp
call
sbb
mov
js
adc
xor
mov
mov
loopne
hlt
mov
loope
lret
push
inc
out
into
lods
inc
sub
imul
int
mov
fwait
xlat
pop
daa
lret
mov
dec
cmp
mov
fcompl
pop
or
mov
clc
add
rcll
push
icebp
out
ds
loope
lret
test
jb
testl
cmpsl
lods
aaa
out
fbstp
repz
jns
fdivl
jnp
cmpsl
gs
mov
notl
in
mov
cwtl
loopne
xor
sub
pushf
mov
loop
lods
xchg
into
insl
and
dec
enter
mov
mov
jle
clc
shrl
mov
mov
mov
xor
leave
insb
hlt
mov
aaa
mov
in
test
ret
lea
enter
mov
leave
xchg
xor
mov
push
sbb
lea
push
fldenv
scas
mov
sarl
mov
or
mov
xor
mov
sahf
cs
aam
cmp
fnstenv
pop
lea
int3
and
adc
mov
or
pop
adc
adc
mov
add
mov
fidivrl
movsl
inc
pop
mov
xorl
outsl
popf
cmpsb
dec
push
cmp
iret
lods
jnp
cld
or
hlt
jb
add
mov
aaa
fisubl
xchg
jle
cmpsb
mov
jp
jb
aas
das
popf
outsb
cs
mov
xchg
or
inc
mov
jecxz
hlt
sahf
mov
fidivrl
loope
imul
ja
pop
in
mov
add
mov
and
or
mov
cmp
mov
xor
imul
insb
xchg
sub
insl
mov
dec
xor
pop
ret
outsl
enter
popa
inc
cmc
mov
icebp
enter
inc
and
stos
in
xchg
lahf
sbb
mov
fucomp
test
xor
inc
pop
xchg
cltd
ljmp
addr16
imull
mov
jno
test
dec
fildl
imul
mov
mov
jecxz
cmc
cwtl
and
mov
std
hlt
in
fcmove
loopne
mov
test
mov
gs
lret
insb
dec
in
mov
popa
fstl
pop
push
outsl
sahf
adc
sbb
pushf
test
jbe
xchg
push
andl
sub
mov
dec
dec
sbb
sub
pusha
add
jo
adc
sbb
or
add
jecxz
jae
push
xor
push
xchg
jg
fnsave
push
and
clc
xor
das
stos
aas
or
mov
repnz
loopne
mov
out
or
in
pop
push
mov
mov
movsb
inc
mov
xor
out
mov
cmp
xchg
mov
mov
mov
push
cmp
jnp
out
xor
fldenv
sti
pop
xor
mov
stc
xchg
ja
shr
stos
mov
pop
mov
add
jae,pn
sub
pop
mov
imul
cs
add
mov
mov
and
xchg
pop
xor
or
addr16
jl
cmp
and
aam
jae
dec
ficoml
pop
fsubs
and
test
push
fwait
mov
orb
das
xchg
fisubl
xor
mov
test
test
mov
sub
mov
xchg
mov
mov
xchg
cmp
xor
test
in
sub
movsb
and
pop
add
jmp
xchg
inc
push
mov
loopne
mov
mov
cltd
inc
int3
push
fimull
adc
lret
xlat
les
mov
iret
jle
xchg
and
push
dec
and
jnp
cld
push
in
scas
mov
push
adc
dec
movsl
scas
mov
repnz
insb
jbe
sub
push
cmp
rcl
mov
mov
insl
jae
hlt
xchg
mov
jb
jnp
jg
mov
cmp
dec
inc
aam
push
in
xlat
cs
test
jmp
notl
or
js
clc
std
js
mov
ljmp
andb
mov
test
popf
pop
cwtl
xchg
xor
imul
pop
pushl
or
pop
pop
mov
or
mov
add
sbb
mov
push
scas
nop
push
xchg
lcall
mov
add
add
fcmovnbe
mov
adc
daa
mov
inc
loop
dec
sub
pop
lods
cli
movsl
jne
aas
xor
into
lret
lcall
in
push
cs
jo
sbb
test
mov
inc
or
repz
popf
mov
addl
fwait
push
scas
jbe
mov
les
std
mov
push
jo
stc
cltd
jle
pop
inc
mov
movsl
call
and
inc
pushf
cmp
mov
das
in
mov
flds
aam
imul
jmp
push
mov
cwtl
out
xchg
xor
pop
icebp
mov
mov
jns
int
jbe
xchg
loopne
mov
loop
decb
ret
jb
movsl
xor
scas
imul
push
mov
jmp
xchg
mov
lock
imul
outsb
js
push
fdivr
mov
out
mov
mov
jno
mov
pop
sub
mov
push
dec
jbe
push
xchg
or
mov
mov
out
clc
pushw
add
push
sahf
hlt
mov
inc
xchg
jnp
pushf
mov
pusha
push
and
icebp
mov
outsb
and
aaa
out
add
mov
jle
lods
mov
jge
pop
cmp
aam
mov
je
and
jg
lods
movsl
loope
jbe
push
adc
aam
adc
lret
mov
test
mov
add
outsb
mov
xchg
sbb
mov
iret
adc
adc
push
pop
and
out
imul
mov
mov
test
push
xchg
cmpsb
xor
bound
adc
push
daa
cmp
or
std
mov
mov
push
add
inc
aam
lock
inc
cwtl
lcall
loop
cmc
shrl
xchg
xor
stos
mov
add
adc
jle
sbb
daa
iret
lods
push
push
push
or
or
lret
and
inc
mov
push
mov
in
int3
inc
cmp
push
in
test
push
repz
inc
xchg
mov
mov
ljmp
setnp
pop
into
pushl
cmp
lret
int3
push
call
cmp
cmp
pushf
je
push
jae
adc
jl
insb
pop
mov
xlat
pop
sub
test
mov
push
lock
xor
rcrb
pusha
dec
dec
aad
insl
lods
inc
cmp
jle
nop
das
aam
mov
jecxz
jbe
pop
imul
mov
rolb
inc
shll
push
cltd
and
inc
jne
jmp
or
mov
fwait
or
and
subl
fnsave
and
loope
jl
pop
subl
sub
fdivrs
into
in
lods
inc
jecxz
jb
orl
mov
add
mov
rol
mov
lcall
jo
movsb
and
push
test
lods
or
cwtl
cmpsb
lret
lods
push
xor
movsl
sbb
dec
jle
push
mov
rcrb
xchg
insl
arpl
pop
in
sbb
inc
cmc
mov
push
xlat
pop
cmpsl
sbb
jp
ds
jne
test
sub
jmp
sti
lods
jg
mov
jle
mov
call
mov
mov
scas
cmp
daa
and
inc
xchg
or
and
fwait
iret
test
fidivrl
sti
aad
test
jns
push
sub
movsb
mov
lret
push
or
test
pop
pop
sbb
and
movsb
inc
xchg
in
push
and
pop
xor
xorl
adc
cli
adc
stos
fxch
jl
mov
xchg
notb
fsub
icebp
int3
fldenv
adc
or
push
das
movl
pop
data16
fsubrl
jbe
mov
pop
add
int3
push
ss
or
adc
cmp
xchg
cli
mov
movl
sub
daa
add
or
pop
mov
xor
sub
mov
push
std
mov
dec
jns
loop
cli
pushf
jo
mov
adc
dec
jmp
pop
dec
cwtl
rclb
sub
enter
cmp
mov
test
push
jecxz
stos
sub
mov
mov
lret
add
pop
sbb
and
int3
push
mov
insb
and
adc
jl
test
mov
repnz
shrb
insb
out
sub
pusha
mov
mov
push
push
popf
popa
int3
incl
nop
fidivs
les
sbb
push
popf
test
data16
fxch
add
lret
mov
add
mov
and
inc
jb
stos
xor
dec
mov
pop
sub
push
sub
pop
lret
out
cltd
cmc
cmp
xor
out
mov
and
shl
mov
aad
and
add
jns
mov
repnz
xor
int3
loopne
jmp
xlat
test
mov
lds
add
mov
jne
push
mov
xor
shll
mov
cmp
push
sti
pop
dec
mull
mov
lret
xor
xchg
jmp
jbe
aam
adc
ss
mov
fdiv
mov
pop
cmp
fstpl
testl
sarb
enter
mov
mov
les
jp
rclb
xchg
jp
or
aad
pop
sbb
icebp
cmc
int
pop
sub
movsb
push
lds
stc
lcall
aaa
fwait
add
mov
cmpsl
xor
cs
push
stos
mov
shrd
outsl
js
lcall
pop
adc
add
dec
push
xchg
dec
outsb
das
dec
add
adc
aaa
lcall
add
sbbl
aam
xor
mov
push
sbb
insb
jb
mov
adc
stc
fildl
aaa
lahf
push
sub
adc
push
mov
je
mov
lods
stos
std
les
in
pop
arpl
sub
movsb
cmp
and
adc
and
lret
mov
pextrw
pop
xchg
sub
clc
jbe
scas
out
xchg
push
loopne
and
dec
jmp
xchg
add
int3
inc
xorb
sarl
fsubs
adc
movsl
pop
dec
add
je
pop
popa
mov
mov
int3
loope
int3
jo
test
out
jae
imul
adc
test
popf
test
dec
aaa
cmp
pusha
pop
mov
popf
insb
add
stos
stos
mov
adc
mov
and
cmp
sahf
orb
mov
inc
jb
out
test
sub
cmp
lea
test
push
pushf
jo
xor
out
jno
and
cmp
push
jecxz
outsl
cmp
xchg
pop
pop
or
or
mov
in
mov
test
imul
rcrl
jmp
adc
inc
das
adc
xorb
loopne
pushf
je
mov
add
mov
daa
mov
push
cmp
jbe
mov
mov
mov
sub
iret
mov
push
addl
popa
inc
mov
out
addr16
repz
in
in
mov
pushf
jo
cmp
jno
es
test
fildll
test
pusha
fs
jnp
mov
movsl
nop
cld
stos
ffree
frstor
lods
xor
and
sbb
pop
nop
stos
xlat
out
xor
bound
pushf
push
out
mov
into
ficoms
dec
nop
pop
jp
mov
pop
enter
aad
mov
sub
xor
pushf
jle
or
mov
sbb
xor
add
sub
jb
test
mov
sbb
push
or
push
addr16
cli
mov
lcall
or
mov
movsl
sbb
jmp
xor
insb
je
or
in
call
pop
sbb
addr16
pop
or
mov
xchg
add
cmp
pop
icebp
mov
xchg
in
xor
lret
adc
pop
sub
mov
xchg
dec
test
arpl
push
adc
cmp
xor
outsl
jnp
aas
and
out
lret
dec
stos
mov
sub
movsl
es
call
lea
js
pop
adc
loop
pop
inc
xor
jbe
inc
adc
out
push
xchg
leave
shrl
xor
lds
jmp
imul
mov
ja
notb
jp,pt
test
arpl
leave
pusha
sbb
dec
popa
mov
dec
int3
inc
aas
xor
jne
dec
jne
and
testl
stos
test
shlb
leave
lret
mov
fs
and
push
sahf
mov
arpl
mov
pop
and
cmc
cmp
adc
out
xorl
push
xlat
loopne
adc
mov
jp
and
ja
outsb
sbb
cmpsb
shl
cmp
decl
adc
lods
shr
pop
fbstp
outsb
lods
les
sahf
stc
adc
inc
subl
xchg
sbb
stos
addl
lock
imul
cmp
outsb
mov
aad
and
pop
ds
pushf
rcrl
add
mulb
popa
or
out
out
sbb
dec
mov
adc
daa
sub
and
out
cmp
iret
push
aam
jge
jg
icebp
les
jmp
loop
pushf
aas
int
dec
cld
ljmp
push
mov
dec
in
dec
out
nop
mov
dec
xor
add
jo
les
ljmp
jg
jecxz
sub
ljmp
sbb
sarb
push
fisttpl
ret
in
add
addl
cmp
mov
add
push
shll
orb
mov
stos
mov
dec
xlat
xchg
imul
js
xchg
stos
imul
std
lahf
dec
sti
ret
cli
adc
push
xlat
stos
push
cmc
into
rclb
mov
popf
movsb
cmp
aam
xor
mov
mov
lret
xchg
test
mov
int3
push
xchg
mov
pop
stos
dec
xor
cmp
pop
or
flds
push
dec
mov
rdpmc
xchg
push
push
cmp
pop
xchg
stos
add
jg
pusha
jp
add
bound
lods
inc
lcall
lcall
mov
mov
pop
mov
enter
arpl
mov
cwtl
push
mov
out
xlat
xor
mov
mov
xchg
bswap
jne
dec
pop
inc
mov
pop
push
and
push
ret
sub
test
push
cmc
push
pop
sbb
mov
popa
mov
out
cmp
sahf
dec
mov
cmp
and
sub
xor
jno
mov
int3
int
cmc
shl
mov
xor
insb
cmp
jbe
fists
mov
mov
or
das
mov
ljmp
mov
divb
dec
sub
sbb
push
std
ss
jae
sbb
fstpt
inc
cmp
mov
pop
pop
sarb
cmp
mov
stos
xchg
push
sbb
xor
adc
and
int3
pushf
test
push
pushf
in
lret
and
outsb
mov
rcr
cmc
mov
sahf
inc
sub
mov
loop
mov
insb
testl
iret
dec
push
xor
popa
pop
push
addb
dec
jno
jo
xchg
mov
iret
pop
adc
mov
popf
cmp
mov
or
aaa
jb
jmp
sbb
outsb
pop
push
mov
fistpl
lret
pop
jnp
xor
dec
cwtl
add
add
frstor
jmp
dec
pop
mov
jbe
adc
je
fwait
cmp
or
sbb
xchg
std
add
jl
lret
mov
negl
popa
aam
and
xchg
sbb
sbb
or
adc
inc
inc
inc
inc
adc
pop
fcmovnbe
push
loopne
pop
fs
or
cmc
bound
add
xlat
mov
pop
cmp
fdivl
push
jl
movsb
fdivr
xor
jne
sub
lahf
pop
push
xor
or
add
je
test
call
popa
mov
rcl
lds
jp
je
lahf
lret
or
xchg
jo
sbb
xor
movsb
add
cmc
hlt
xor
sti
sub
pop
mov
std
push
pop
fdivs
push
in
je
lods
jae
jno,pn
push
lock
inc
imul
dec
divb
push
mull
mov
sbb
pop
sbb
or
push
dec
ret
imull
xchg
enter
mov
fsubs
pop
jmp
mov
lock
adc
mov
or
mov
fiaddl
cltd
lret
xchg
inc
cmp
sahf
cmc
sbb
pop
aaa
outsb
xor
jnp
loopne
xchg
stos
push
int3
push
pop
mov
pop
push
add
sub
cld
aam
hlt
cmp
dec
dec
push
clc
int3
sub
shll
stos
mov
xchg
sub
pop
outsb
stos
jle
pop
lods
mov
inc
adc
in
mov
popa
mov
mov
stos
movsb
add
rep
cmp
pop
push
jns
int3
mov
jb
cmc
sahf
mov
rorl
sahf
xor
fs
testb
push
jo
cs
and
test
popa
dec
fnstcw
mov
cmp
sbb
pop
fisttpll
ds
adc
sbb
loopne
call
xlat
xchg
stos
test
cli
push
imul
stos
stc
adc
repz
lret
enter
jp
jns
movsb
jb
negb
sysexit
inc
lret
movsl
add
cmpsl
int3
cwtl
push
ljmp
lods
push
mov
jb
push
lret
cmc
in
mov
cvtps2pi
cmp
ds
hlt
sbb
in
daa
xchg
das
stos
inc
repz
and
mov
or
adc
sub
sbb
pusha
mov
dec
jmp
ret
xor
lods
lahf
jecxz
mulb
dec
ss
sbb
cmpsb
je
jno
or
daa
xor
daa
sti
xchg
bound
jmp
clc
push
stos
aas
loopne
clc
xor
in
ja
jne
mov
aas
mov
sbb
fsubs
sub
add
call
scas
rorl
push
bound
gs
add
sbb
cmp
jbe
push
inc
xor
jecxz
scas
les
mov
xchg
and
repz
lds
shrb
push
mov
jmp
shrb
mov
into
mov
insb
jp
ror
adc
pushf
cltd
daa
push
test
in
loop
sbb
cmp
sti
subb
or
jp
mov
sub
mov
das
xorl
dec
insb
pop
xor
xor
imul
cld
insb
and
cld
sti
jns
mov
mov
and
xchg
fstpl
pop
popf
je
xchg
dec
pop
mov
pop
movsb
inc
mov
sbb
jne
xchg
in
cmp
push
mov
or
jl
nop
loope
test
adcb
daa
sahf
push
cmp
dec
test
fisubrl
addr16
adc
pop
data16
cld
std
add
nop
aaa
test
push
je
mov
adcl
aas
fs
xor
sub
ror
test
dec
push
lods
mov
mov
and
jecxz
mov
push
testb
movups
adc
and
jnp
sub
mov
das
push
leave
inc
out
cld
loope
lds
cmp
movsl
xchg
repnz
jl
loop
pop
mov
adc
div
ljmp
shrb
insb
pop
mov
test
mov
xor
push
sti
xor
xlat
and
inc
nop
jl
cmpsb
xchg
or
sbb
lods
cmpsb
push
push
sub
sbb
fidivs
lret
pop
loop
mov
mov
arpl
outsl
in
lods
pop
add
int3
lret
adc
fcmovnb
stc
imul
mov
jno
cs
pop
mov
loope
adc
out
or
push
pop
pusha
mov
add
test
test
icebp
out
lods
aaa
int3
mov
mov
sbb
xchg
in
es
lea
mov
data16
dec
sbb
jg
jb
pusha
int3
das
in
mov
and
sbb
out
push
pop
shrl
test
pop
scas
shll
adc
nop
inc
adc
pop
roll
xor
xor
cli
push
inc
add
cwtl
pop
dec
sub
jbe
cmp
add
jmp
adc
sti
test
sub
int3
movsb
dec
shrl
dec
loope
lock
push
fidivl
test
mov
push
sub
xor
js
sub
test
push
mov
into
pusha
fadd
mov
arpl
xor
sub
pop
mov
fs
inc
cltd
pop
jae
fidivl
cmp
xchg
shlb
sbb
pop
cltd
push
mov
js
push
mov
or
leave
xchg
inc
jp
xchg
shrb
insb
fdivrl
pusha
lods
gs
dec
clc
push
stos
jnp
mov
bound
fadds
push
cmc
sbb
xor
pop
push
into
imul
int3
sub
fstl
arpl
xor
xor
fs
and
ljmp
cmpsl
das
dec
ret
arpl
add
dec
fildll
cmp
rcll
inc
and
cmp
adc
imul
sbb
adcb
push
dec
dec
in
or
or
push
xchg
mov
fnstsw
in
inc
hlt
pushf
movsl
and
stc
lock
adc
mov
mov
xorb
leave
mov
add
into
lods
test
xor
add
push
js
ss
xlat
sbb
iret
scas
jno
dec
xor
xchg
xchg
adc
enter
int
mov
fcompl
jg
ljmp
mov
iret
xchg
test
xor
roll
inc
lret
mov
push
pop
mov
lods
andb
mov
cmc
mov
arpl
insb
andb
test
and
lret
int3
test
imul
dec
cltd
scas
daa
les
jl
lret
mov
or
adc
jmp
mov
push
jecxz
and
mov
push
cmc
sub
data16
pushf
pop
sbb
gs
xchg
out
sti
cmp
jno
mov
and
sub
mov
test
sbb
daa
je
xchg
hlt
mov
repz
dec
ljmp
ljmp
or
mov
in
daa
cld
sbb
xor
sti
imul
stos
frstor
decb
mov
mov
call
mov
cld
cs
int3
mov
insb
xchg
push
stos
pop
aaa
aas
in
popl
push
int
pop
mov
sub
pop
das
add
pushf
popf
lret
or
popf
and
adc
stc
clc
sub
data16
fs
sbb
add
mov
jecxz
js
cwtl
sub
pop
sbb
jmp
mov
and
sub
xorb
out
lret
aad
xor
dec
push
adc
bound
ljmp
sbb
ss
ret
loop
mov
testb
fdivl
data16
and
pop
xorl
js
dec
xchg
cmc
sub
adc
mov
movsb
cwtl
ficoml
pop
mov
gs
lret
xor
or
test
bound
fiaddl
ds
xlat
mov
cmpsl
hlt
dec
gs
aad
sbb
cmp
outsl
test
sub
inc
sbb
test
shl
mov
inc
jno
rcr
add
shlb
add
push
test
lcall
clc
or
sbb
xchg
popf
lret
cmp
jbe
and
cltd
lar
xor
push
xchg
fprem1
push
pushf
fs
push
shl
mov
mov
push
and
das
ffreep
dec
mov
data16
shlb
xchg
pop
push
iret
jae
dec
xchg
repnz
mov
inc
shll
cli
insb
dec
mov
jno
sub
sti
test
in
dec
jp
mov
loopne
mov
movsb
popa
ror
nop
out
orl
imul
cwtl
or
mov
adc
icebp
loop
cli
jg
mov
idivb
cltd
mov
mov
int3
das
dec
lret
mov
push
aas
mov
int3
popf
ret
shll
fcmovu
pop
jp
out
je
int3
xchg
enter
mov
push
xor
cld
fsubs
and
aaa
enter
cmc
fnstsw
test
loope
inc
lret
dec
mov
jns,pt
add
lret
mov
rcll
lea
out
fisubrl
cmc
xchg
dec
ljmp
inc
push
mov
or
pusha
pop
stos
mov
enter
lea
ret
subb
lret
mov
lret
xor
repnz
loope
xchg
mov
xchg
jnp
popa
pmullw
fdivrs
adc
sub
xor
loopne
fdiv
push
adc
mov
pop
push
repz
hlt
push
and
mov
ret
mov
scas
test
mov
hlt
pop
push
and
sbb
mov
lods
test
dec
sbb
mov
or
or
test
xchg
xchg
sbb
mov
push
call
pop
push
mov
into
mov
xchg
pop
fstps
lret
mov
jg
pop
mov
popa
pcmpeqw
mov
fdivs
int
mov
add
pop
sbb
mov
sbb
repz
pop
popa
inc
add
test
test
add
lahf
repnz
push
sbb
adc
dec
adc
mov
xchg
clc
lea
idiv
inc
dec
push
subb
pop
mov
mov
dec
xor
icebp
fdivrl
jmp
test
sub
scas
pop
ss
clc
mov
ljmp
dec
bound
pop
mov
cmp
cld
sub
sub
js
xchg
pop
jnp
imul
push
sbb
inc
xor
dec
test
ret
sub
out
mov
cwtl
adc
fisttpl
add
aam
jp
fldenv
xchg
fisttpll
mov
jne
adc
cmp
cmpsl
movsl
sbb
push
not
arpl
cwtl
sti
dec
sub
inc
push
leave
fucom
dec
push
xchg
mov
mov
rcl
push
outsb
call
mov
xor
xchg
call
into
jbe
sahf
pop
int3
addr16
es
movsl
in
shlb
iret
add
leave
xchg
nop
and
mov
roll
lods
test
sub
filds
rcrl
pop
and
fsubp
mov
lea
sub
loope
sbb
mov
mov
sbb
imul
rcr
pop
cwtl
imul
sbb
test
hlt
push
and
repnz
ret
xor
cld
loop
ljmp
es
sub
sbb
pop
popa
push
jo
sub
cld
lea
fs
push
adcb
push
shll
aam
mov
int
xor
dec
call
add
dec
mov
push
jl
enter
loope
sub
sti
iret
push
divb
jnp
mov
xor
mov
addl
lret
shrl
mov
mov
lods
fucomp
cmp
nop
push
xlat
sub
inc
pop
dec
scas
push
sub
xor
lea
and
and
test
repz
mov
scas
pop
jno
cmp
pusha
lock
cld
aas
enter
js
inc
stc
pop
xchg
mov
pop
cmpl
cmp
pop
loopne
jb
push
pop
dec
dec
bound
cmc
mov
sbb
xor
mov
mov
in
scas
push
popl
addr16
push
out
pop
aaa
xchg
pushl
rdmsr
mov
dec
outsb
push
push
aas
xchg
cmp
push
jo
loopne
shrl
int3
jae
fwait
mov
push
pop
cmp
sbb
call
in
out
cs
pop
dec
push
inc
dec
pop
xor
cld
and
add
jg
cmp
cli
les
out
adc
das
fdivr
adc
sbb
adc
add
lea
xchg
cld
into
push
xchg
mov
cmp
inc
push
mov
push
inc
push
jo
lret
sbb
adc
pushf
inc
imul
mov
fwait
movsb
jae
and
rcrb
add
mov
xchg
je
scas
sbb
lret
pop
xchg
jecxz
add
sub
cmp
gs
and
or
cli
push
adc
mov
ljmp
pop
aaa
adc
lds
mov
call
mov
stos
adc
lods
mov
sahf
fs
dec
sub
cmp
pop
ret
sub
jne
test
xor
sub
bound
in
and
or
xor
icebp
mov
js
dec
cmpsb
test
rsm
push
ljmp
pop
jne
mov
add
mov
push
dec
mov
sbb
jb
dec
mov
dec
sbb
repz
sbb
push
hlt
fisttps
xchg
sbb
cli
fldl
pop
jno
jecxz
xor
add
addb
push
sbb
lret
or
push
bound
mov
ss
mov
add
testl
lea
mov
cli
test
pop
push
xchg
push
pop
and
adc
aaa
lods
inc
das
int3
subb
out
xchg
shlb
mov
jecxz
popf
jnp
jbe
mov
dec
or
cmp
and
sub
ror
inc
push
aaa
add
jo
rclb
lret
mov
sub
dec
repz
lock
sub
stos
xchg
cwtl
shll
push
mov
fs
out
xor
lret
mov
stc
push
iret
movsb
or
sti
cmpsb
lock
fidivl
dec
sbb
insb
push
jns
rol
into
mov
repnz
mov
insb
int3
or
addb
sub
cmpsl
push
daa
testl
cmpsb
add
dec
sub
jnp
push
xchg
sub
mov
shlb
adc
pop
or
fs
js
cli
jmp
cmp
push
add
pop
xchg
ss
aas
test
cmp
gs
dec
lret
push
adc
push
imul
arpl
mov
sub
jl
jmp
loop
cmp
ret
fxch
test
shll
cmc
fwait
shrb
push
incb
inc
add
rclb
or
pop
pop
mov
push
mov
lret
rol
push
and
int3
shlb
mov
and
out
adc
je
stc
sub
jle
mov
add
mov
jmp
test
xchg
cmp
pusha
mov
sub
jae
into
sti
inc
ja
add
lret
sub
loopne
repnz
popa
das
dec
sub
push
sub
push
cmp
xor
aas
clc
stos
pushf
out
push
xor
pusha
xchg
cs
pop
sub
mov
add
xchg
jo
lods
add
add
sbb
xor
sub
aam
bound
je
fs
lret
add
leave
xor
push
repnz
mov
and
fdivrl
push
dec
adc
pushf
shlb
adc
data16
add
int3
pop
xor
bnd
pop
rcrl
pop
movsb
cmp
movsl
push
icebp
stc
test
aam
xchg
jp
scas
xor
popf
notl
cmc
pop
lds
xchg
mov
xor
xor
push
mov
sub
movsb
ror
lods
inc
or
adc
rcrb
cli
imul
sub
push
lret
imul
jns
jb
test
shll
in
lods
xchg
cmp
fwait
mov
inc
mov
mov
pop
leave
mov
les
popf
lret
test
and
ds
push
mov
push
int3
arpl
lcall
mov
push
cmpsl
adcl
cmpsb
pop
cwtl
xor
hlt
xchg
push
mov
stos
shrl
repnz
pushf
cmpsb
daa
ja
and
mov
inc
inc
enter
ja
pushl
mov
cli
movsb
mov
mov
cmp
dec
stc
sub
pop
inc
or
les
lret
aas
inc
mov
xor
jmp
pop
inc
lods
sbb
mov
pop
push
sub
pop
mov
jno
movsb
mov
in
add
cmp
pop
mov
jb
int3
imul
test
and
std
adc
insb
cmpsb
mov
mov
pop
and
xchg
pop
aas
lcall
sub
insb
jo
int3
mov
cmp
bnd
cltd
pop
cld
cmc
dec
jno
cmp
or
stos
pop
cmp
cmpl
dec
ret
jg
sub
pop
mul
mov
add
loop
lcall
sub
pop
outsl
enter
cmpsl
into
push
testb
xchg
and
test
jne
xchg
xor
jne
add
push
popa
pop
rcl
popf
leave
push
sbb
inc
test
out
fmul
je
ror
stos
and
shlb
or
dec
push
mov
push
ljmp
xor
sub
xchg
out
mov
mov
jb
movsl
mov
or
int3
xchg
xor
outsb
repnz
and
and
hlt
pop
dec
lods
cmp
mov
scas
lret
xchg
xacquire
dec
int3
mov
movsb
out
jo
test
add
mov
arpl
lahf
adc
xor
xor
xor
xchg
push
xor
pop
sbb
adc
ss
div
sbb
mov
or
add
leave
pusha
aam
pop
fs
shlb
insl
or
fadds
in
push
out
pop
sub
sahf
push
test
mov
dec
test
push
stc
adcb
pop
fwait
xchg
in
out
andl
test
out
mov
sub
inc
inc
mov
imulb
lock
push
or
mov
outsb
cld
test
lea
and
daa
std
in
xlat
bound
divl
xchg
sarb
leave
cwtl
xor
push
arpl
pop
add
pop
stos
das
ja
mov
xor
ret
mov
cld
dec
cmpsb
dec
mov
mov
pop
lret
jae
jge
repnz
cli
add
mov
and
das
arpl
jl
mov
rcll
ret
cmp
sbb
gs
adc
nop
iret
xor
push
mov
hlt
push
inc
shll
pushf
arpl
sub
push
ret
ljmp
or
mov
std
fsubs
mov
mov
data16
sbb
jns
xchg
popf
mov
xchg
xlat
sbb
jbe
xchg
adc
cld
aas
jae
jnp
xchg
mov
add
rcrl
iret
mov
add
mov
sub
or
das
js
and
ret
dec
cmc
movsb
sbb
leave
sarl
bound
and
jne
sub
rcrl
mov
test
fldcw
mov
out
dec
mov
lock
fs
xor
fldenv
or
lods
lret
push
mov
adc
mov
sbb
icebp
add
stos
inc
sbb
mov
or
pop
pop
add
cmc
xchg
insl
cmp
or
inc
mov
loopne
int
push
xorb
shr
aaa
imul
pop
icebp
mov
xchg
or
aas
pushf
adc
hlt
sbb
xchg
out
jno
icebp
filds
icebp
je
inc
mov
jle
mov
lret
cmp
add
in
mov
or
push
repz
scas
mov
mov
jnp
add
lods
mov
insb
aaa
sbb
cltd
je
xor
sbb
mov
out
arpl
mov
in
add
mov
cltd
and
imul
jo
inc
shrb
mov
mov
mov
dec
sbb
pop
sahf
cli
ret
mov
mov
adc
and
sbb
xchg
das
hlt
ficomps
mov
inc
xchg
outsl
pop
iret
lods
out
sbb
and
les
pop
mov
pop
mov
ds
xchg
jg
mov
scas
incl
jp
aas
add
jb
mov
mov
ret
fisubs
and
pop
push
and
gs
or
jmp
pop
rorb
into
mov
leave
imul
sbb
outsb
cmp
mov
pop
and
das
lcall
testl
sub
pusha
adc
xor
stc
add
rcr
sbb
mov
jge
dec
mov
mov
ss
push
jb
xlat
mov
mov
jnp
ret
out
lret
dec
mov
cwtl
mov
lods
push
dec
pop
dec
cmpsb
into
mov
mov
mov
fisttpll
inc
mov
sbb
mov
dec
jb
mov
loop
scas
inc
out
mov
inc
xor
in
add
mov
xor
movsb
dec
aaa
sub
mov
pop
leave
cld
jne
xor
jne
std
inc
inc
dec
mov
inc
pmaddwd
es
pop
pop
ljmp
lods
mov
inc
mov
push
xchg
test
stos
sub
jno
hlt
test
int3
dec
push
or
cmp
movsl
jno
cld
xchg
mov
push
push
sub
push
sbb
lret
or
icebp
repnz
add
fs
test
mov
adc
and
jg
mov
mov
add
iret
mov
or
mov
fs
adc
test
sbb
mov
pusha
roll
or
mov
or
rclb
lods
test
movsb
xor
sar
pusha
sub
or
xor
jo
and
lods
dec
lahf
scas
lret
push
jb
lret
mov
jecxz
push
adc
jns
ficoms
xchg
jb
adc
xchg
mov
dec
pop
sub
push
lahf
push
push
ret
inc
pop
push
and
mov
sub
cmp
jno
pop
int
scas
int3
pop
sub
mov
ljmp
pop
fsubrs
sub
loopne
je
stos
jl
neg
shlb
pop
push
or
push
push
lret
cmpb
sbb
negl
imull
ret
sbb
pop
pop
pop
ljmp
mov
sbbb
dec
daa
xchg
outsl
push
and
dec
addb
dec
sbb
add
subb
fsubrs
ja
lret
jne
imul
inc
pop
aam
aas
push
inc
cmc
mov
mov
sub
sbb
dec
stos
cmc
in
ret
adc
mov
sbb
data16
mov
pop
stos
lahf
icebp
jle
mov
in
inc
cs
test
popl
xor
fs
test
mov
ret
xlat
adc
xchg
dec
in
mov
sbb
push
cmp
call
push
faddp
or
cmp
in
pusha
int
mov
push
jmp
cmp
enter
stos
test
int3
pop
loopne
fldcw
js
push
mov
lret
dec
dec
cmp
sbb
les
push
mov
pop
aam
inc
pusha
push
popa
scas
pop
stos
add
fsubr
sub
btr
inc
es
cmpsb
cmpsb
outsl
div
mov
xchg
pop
cli
jae
out
push
adc
pop
cmp
inc
and
ficompl
data16
pop
jo
sub
stos
stos
cmp
leave
cmp
or
into
out
imul
inc
pop
mov
lret
test
test
sbb
mov
ljmp
les
jbe
jmp
or
mov
data16
in
xor
cmpb
into
repnz
addb
pop
outsl
inc
sahf
mov
loop
std
lea
and
outsb
mov
pop
xor
sub
xchg
andnps
dec
repz
mov
xor
xor
pop
xchg
sbb
aad
loopne
je
pop
adcb
fs
cmp
pop
lret
and
nop
popf
xor
add
jo
movsl
sub
cmp
repz
adc
lea
sar
incl
idivb
adcl
filds
insb
sbb
mov
mov
dec
sti
xor
xchg
add
lret
inc
push
popf
xor
cmp
mov
incb
lret
xchg
pushf
ret
sub
fidivs
lea
dec
ds
loope
sbb
jns
mov
sbb
or
loope
adc
pop
sbb
pop
int3
nop
aad
rorb
inc
jl
scas
lret
lods
push
pop
xorb
in
mov
repnz
cld
js
int3
dec
stos
je
push
xchg
push
mov
or
jno
enter
test
loopne
subl
xchg
mov
mov
inc
and
sub
mov
or
jecxz
das
idiv
stos
adcl
in
outsb
xor
or
ror
test
cmp
mov
pop
mov
xor
loopne
mov
and
out
sub
repz
fldt
xor
test
xchg
or
push
jg
int
je
adc
mov
push
subb
notl
int3
jo
sbb
sub
xchg
fdivs
pop
pop
cwtl
push
add
jl
and
test
fs
pop
gs
faddl
xchg
pop
push
into
add
push
lret
sbb
cmpsb
jmp
ret
adc
sahf
int3
lea
sub
addr16
xchg
enter
jne
sub
mov
inc
or
test
dec
cmp
xchg
mull
xlat
or
stos
stc
test
mov
mov
cmp
sbb
fistl
ret
outsl
add
mov
aam
bnd
rcr
cmp
inc
jmp
and
in
out
lret
xchg
insl
cmc
mov
sbb
sbb
popa
pop
hlt
jmp
dec
in
mov
lahf
mov
or
dec
lret
xorb
fs
xchg
lods
sbb
mov
arpl
dec
mov
imul
mov
dec
lahf
aad
push
or
push
jmp
test
or
aam
aam
stc
scas
dec
cli
daa
hlt
sbb
cmp
xchg
jmp
push
sbb
inc
pop
stc
or
xchg
push
scas
test
ljmp
push
pop
push
or
out
decb
push
fsubp
adc
stos
add
mov
sbb
je
mov
add
inc
sub
pusha
xchg
jp
jae
adc
pop
pavgb
pop
pushf
ss
loope
lods
fnstenv
movsl
sbb
lock
roll
dec
or
jae
dec
cmp
jno
fs
xchg
mov
mov
or
dec
mov
ror
sahf
sub
sahf
dec
negl
out
popa
pop
rcll
ljmp
add
mov
mov
add
popa
ljmp
je
lcall
lret
imul
data16
int3
fcoms
test
push
sub
fs
pop
sar
sbb
and
xchg
xchg
xor
lea
or
xchg
xchg
sub
lods
dec
test
mov
mov
mov
xchg
dec
push
cli
je
xlat
cmp
mov
js
cmc
push
aas
ret
repz
cmp
insb
fbld
leave
ficoms
insl
add
das
out
enter
je
je
lods
std
iret
mov
pop
cmp
imulb
sahf
or
es
xor
dec
adc
lods
imul
mov
fwait
mov
in
pusha
andl
and
pop
or
add
std
xchg
repz
mov
pop
leave
out
in
ss
sub
mov
lods
pop
pushf
idivb
sbb
pop
push
xor
dec
cmp
inc
or
inc
and
pop
sub
adc
dec
lods
sahf
es
lret
dec
ret
xchg
nop
xor
jns
pop
mov
dec
cmp
sbb
notl
sub
adc
adcb
mov
pop
subb
push
mov
aam
out
jge
aam
pop
out
mov
lods
jne
xchg
adc
int3
adc
hlt
test
fdivr
out
test
lahf
and
call
xor
xor
xchg
xchg
jb
lods
pusha
or
and
mov
mov
dec
adc
mov
xchg
hlt
idivl
popf
mov
mov
outsl
inc
mov
pushf
xor
jmp
mov
out
pop
aas
add
mov
adc
jbe
xchg
stos
push
ss
jp
lods
mov
out
xor
pop
lods
sub
sub
sahf
lret
mov
sub
clc
mov
dec
out
ja
je
inc
xchg
mov
pop
mov
stos
mov
das
cmpsl
sbb
mov
movsb
cmc
mov
aad
neg
xor
cmp
add
jno
stc
fwait
addr16
in
inc
mov
daa
scas
or
ror
cltd
xor
arpl
mov
mov
push
ficomps
mov
mov
sbb
xchg
addb
stos
stc
jecxz
idivb
in
shrl
and
mov
cmpsb
dec
add
cmp
lahf
push
ficoml
mov
cmp
pusha
leave
mov
pop
fwait
and
ret
lret
mov
sub
aaa
out
add
sbb
mov
cltd
inc
in
inc
mov
int
xor
aam
clc
mov
fnstcw
enter
cmc
icebp
shlb
jp
and
fidivrl
push
out
mov
pop
aaa
fcmovnb
mov
in
mov
jle
test
xor
iret
cld
bound
fisubrl
mov
scas
mov
and
ret
inc
or
loop
or
shlb
mov
sbb
rclb
nop
adc
orl
and
lods
and
fiadds
adc
pop
push
or
test
ret
cmpb
rcll
push
aam
mov
and
xchg
mov
adc
popf
xchg
pop
mov
push
fidivs
in
or
mov
xor
daa
pop
aaa
je
stos
xchg
jge
sbb
or
dec
mov
outsb
lret
mov
jp
mov
xchg
lods
cmpsb
push
stos
inc
mov
fidivs
pusha
scas
and
lds
dec
push
stos
sahf
shrb
push
hlt
movsl
and
and
and
bound
sbb
cmpsb
cs
or
scas
fiadds
pop
mov
data16
mov
out
fs
adc
sahf
mov
dec
cmp
inc
lret
jg
or
sbb
ret
or
stos
dec
sbb
add
ds
popf
stc
fadd
repz
inc
test
adc
je
repz
pop
add
hlt
mov
movsb
sbbb
cmc
and
mov
xor
lea
ud0
xor
sbb
xlat
cmp
insb
fsubrl
sbb
lods
xchg
mov
testl
mov
aaa
les
das
xor
mov
lods
fs
mov
fildll
outsb
int3
mov
jp
inc
loopne
mov
mov
inc
enter
cmp
insl
ficompl
and
popa
loopne
ror
push
in
xor
ss
sub
add
cmp
dec
fwait
xchg
jb
inc
xchg
inc
fs
movsb
push
cmp
and
cmp
sarl
dec
ss
in
mov
and
jne
ds
push
mov
int
xor
fwait
daa
pop
add
jno
testl
fdivr
sbb
daa
das
inc
inc
push
mov
sub
in
lea
ficoml
stos
xlat
push
mov
popf
and
cmpsb
xor
sahf
jne
mov
ror
divl
sbbl
or
inc
sbb
ret
fdiv
xchg
lret
push
and
sbb
inc
je
jp
cmp
data16
dec
or
mov
nop
sahf
scas
js
mov
xchg
filds
out
sub
fidivs
mov
pop
imul
popa
adc
jo
mov
mov
inc
subl
jl
mov
and
dec
mov
pop
xchg
loop
and
loopne
jp
dec
mov
movsl
xor
add
lea
lods
repz
repnz
jmp
push
pop
aad
das
int3
and
pop
in
fs
xor
inc
pop
stc
imul
ljmp
out
cmp
cli
imull
push
jo
jns
icebp
sbb
lret
pop
lods
or
mov
mov
sub
dec
adc
push
xchg
dec
xchg
cld
or
push
cmp
adc
in
and
sbb
mov
jl
int3
dec
push
sub
sbb
jno
jbe
ret
sub
mov
pop
pop
stc
fst
xchg
push
ss
adc
mov
or
test
push
cltd
mov
push
add
push
call
mov
lahf
mov
aaa
xchg
push
imul
int3
jne
in
test
repnz
shrb
lret
aas
loopne
jae
lahf
xor
mov
dec
rolb
out
nop
inc
cmc
fldl
aam
jl
lock
jno
push
aad
xchg
testb
sti
inc
imul
cltd
xchg
cmc
cmp
sub
xchg
sbb
or
leave
hlt
xchg
xor
mov
xchg
iret
into
rol
and
and
dec
gs
aaa
icebp
pushf
les
mov
pop
or
mov
adc
or
mov
push
xor
daa
les
push
frstor
in
mov
mov
gs
mov
cld
pop
fistl
inc
pop
pusha
popa
xchg
pcmpeqb
loopne
add
lods
repz
add
sbb
jmp
mov
jo
and
int
adc
xchg
mov
push
dec
lahf
in
add
jns
dec
idivb
sub
lretw
push
or
ljmp
sbb
shlb
xor
pop
mov
sarl
pop
test
lea
loop
insb
push
mov
mov
lcall
cmp
dec
sbb
fidivs
scas
mov
pusha
frstor
nop
mov
push
sub
lret
push
cmc
gs
or
mov
fcoml
or
jo
pushl
xor
lret
xor
dec
call
arpl
out
mov
add
aad
lds
and
rcl
xor
jbe
pop
jae
leave
xchg
inc
popf
xor
dec
rcl
mov
test
ja
movsb
sub
fsubr
sti
jge
sbb
test
mov
mov
mov
xchg
pop
stc
jecxz
adc
fs
mov
mov
dec
test
daa
add
sub
fcomi
stc
mov
mov
insl
dec
add
mov
sbb
mov
lock
fsub
cmpsb
cltd
in
scas
push
icebp
movsl
inc
mov
and
mov
add
add
imul
and
xchg
pop
lret
fcoms
jno
mov
or
aam
fsubp
xchg
and
cmp
sbb
adc
stos
ficoml
mov
testb
test
and
lret
negl
or
rcll
dec
in
icebp
sub
sti
insl
adc
jo
int3
daa
or
mov
jnp
xchg
adc
aam
pop
pop
nop
adc
push
sub
cmp
ss
mov
out
outsb
popf
roll
inc
sub
outsl
int3
xchg
outsl
fidivs
je
pop
push
dec
les
ja
mov
add
xor
sbb
repnz
lds
bound
push
adc
sub
pop
out
repz
add
inc
or
cwtl
mov
idivb
and
mov
fisubrl
push
jb
push
pop
xchg
mov
cmc
stos
roll
dec
test
adc
xor
scas
xor
mov
or
sub
fidivrs
imul
cmp
sbb
scas
mov
mov
xchg
test
and
div
cmc
enter
mov
xor
dec
push
sarl
test
sbb
mov
and
imul
adc
mov
mov
inc
pop
sbb
or
mov
push
push
in
fs
clc
xchg
jno
xchg
sarl
enter
mov
mov
cltd
data16
cld
or
lock
lea
ficompl
int3
iret
or
xor
notl
ja
mov
xchg
cld
pop
loope
cli
add
push
nop
jo
out
jp
sub
jp
dec
pandn
adc
push
daa
mov
outsl
pushf
adc
lahf
stos
int3
cltd
xchg
mov
rorl
pushf
sbb
std
loop
movsl
xor
imul
mov
int3
jg
popa
stc
pop
outsl
iret
mov
sahf
jl
test
or
mov
movsb
push
pop
in
jecxz
cwtl
cmp
jnp
neg
xor
and
mov
shlb
xchg
pop
cmp
lret
push
push
jo
xchg
mov
cmp
sub
inc
shlb
ljmp
sti
push
cmpsl
int3
xchg
fcmovu
xchg
rolb
cmp
jecxz
mov
sbb
and
add
movsb
jns
xchg
movsb
jmp
ja
fnstcw
push
pop
mov
xorb
inc
ljmp
rep
push
js
pop
push
adcl
push
cmp
in
jp
cwtl
and
push
ret
adc
gs
test
adc
test
frstor
bound
pusha
push
adc
test
mov
fs
stos
add
jp
negl
cmpsl
data16
pop
cli
xchg
inc
aam
lods
cmp
sub
pushf
into
lret
jge
jmp
bound
jbe
rorl
or
int
pushf
int3
enter
mov
and
dec
arpl
pop
in
mov
cwtl
jg
int3
push
add
je
lret
dec
push
call
push
or
and
jnp
pop
test
fucom
jns
or
adc
cmp
and
jg
xchg
push
int3
addr16
cli
pushf
xchg
cmpsl
jbe
daa
xor
xor
outsl
mov
subl
jb
cmp
inc
push
xchg
or
pop
mov
or
pusha
loope
movsl
aas
sub
pop
xor
mov
mov
add
push
and
repnz
imul
movsb
arpl
mov
lcall
and
int3
dec
sbb
lret
loop
lock
outsl
push
test
in
mov
int3
fcom
mov
jnp
into
push
divb
cmp
inc
cmp
mov
mov
pop
mov
sbb
bound
aad
shrl
ret
int3
mov
mov
jnp
add
add
mov
sbb
and
shrb
cmp
fcomps
test
movsb
rorb
bound
cltd
mov
mov
and
bound
push
pop
shrb
cltd
into
fcomi
pop
mov
xabort
pusha
iret
clc
push
lock
pop
xor
or
pop
mov
add
mov
mov
mov
shll
icebp
push
sti
push
leave
mov
xor
ss
jbe
sti
mov
dec
cmp
test
in
push
lods
and
fldcw
mov
cltd
xor
add
data16
loopne
aaa
pop
adc
cli
enter
iret
rolb
xor
sbb
sub
jge
push
int3
pop
mov
icebp
and
stos
jle
popf
push
shl
int3
jg
fs
sub
push
mov
cmp
mov
cmp
nop
loopne
aas
imul
dec
dec
stc
rolb
sarb
xchg
inc
mov
push
icebp
ret
dec
mov
push
iret
int3
jns
sar
inc
jbe
xor
daa
add
inc
lods
push
lret
pop
aas
stos
jb
and
inc
or
iret
sub
mov
inc
decl
mov
repz
mov
out
icebp
sub
enter
inc
jne
out
jmp
lea
scas
outsb
jns
pop
or
pop
lret
bound
lret
jne
bound
pop
push
inc
lahf
mov
mov
fists
out
ja
push
mov
dec
dec
fstpl
mov
mov
adc
jns
negl
mov
mov
int3
push
aam
push
add
adc
movsl
out
lcall
test
loope
int3
divb
pop
std
xchg
sbb
test
inc
scas
lret
mov
pop
adc
sbb
mov
ja
add
lret
test
aad
daa
add
mov
or
lods
stc
std
xchg
rclb
mov
pop
sub
scas
hlt
mov
popa
sbb
lea
add
sbb
cs
stos
jbe
nopl
sub
add
ljmp
outsl
xchg
add
mov
mov
mov
shrl
jbe
test
ret
pop
ret
mov
addl
ret
or
pop
and
inc
sub
in
lret
push
sub
mul
xor
mov
adc
ret
adc
call
add
add
fndisi(8087
int3
in
ficomps
fsubs
or
push
jmp
sbb
movsb
dec
xchg
or
and
jae
mov
cmp
clc
cmp
imul
fsubrp
and
sub
sub
cmp
jo
jp
mov
in
out
cmp
sub
int3
cmp
cli
jno
and
sub
fmuls
fisttps
fldcw
test
add
inc
mov
dec
push
jne
testb
sbb
imul
mov
pop
dec
roll
test
adc
pop
add
sub
mov
imul
decl
jmp
nop
js
push
inc
jae
sbb
xor
mov
mov
push
daa
mov
or
negl
gs
mov
and
daa
and
cwtl
jl
sub
sti
in
push
inc
loopne
sahf
sub
fadds
stos
push
push
lret
jns
push
shrd
je
add
push
pop
pop
and
popf
mov
jmp
fdiv
xchg
sbb
test
rcrb
mov
xchg
sub
aaa
inc
lret
ret
es
out
mov
aaa
orb
dec
xchg
imul
dec
stos
add
sbb
xor
adc
fwait
dec
xor
das
popf
mov
stos
dec
ja
dec
jmp
or
jbe
pop
cmp
jmp
aaa
mov
mov
cmp
mov
xchg
mov
add
insl
jae
lret
mov
lret
push
into
adc
inc
lret
cmp
andb
sub
mov
movsl
mov
lret
lcall
pushf
jmp
shr
xor
daa
xor
dec
cld
mov
int3
sbb
and
cmp
mov
jb
imul
xchg
sub
mov
in
mov
or
test
fbstp
rcll
pop
lcall
and
gs
out
jo
mov
push
outsl
lret
jbe
pop
int3
fidivs
test
xor
lret
lahf
dec
loop
scas
lods
int3
hlt
ss
xchg
and
inc
negb
fcomi
dec
xor
stos
inc
push
lea
mov
jbe
stos
adc
push
jne
jnp
daa
mov
pop
dec
stos
push
sahf
lret
es
lahf
jnp
xor
movsl
into
cmp
jg
leave
stc
push
stos
rcrl
sbb
and
scas
pusha
lret
jnp
mov
data16
xchg
pop
iret
lea
push
outsl
xlat
jne
test
adcl
pop
or
int3
push
insl
dec
sbb
int3
pop
aaa
pusha
stos
je
mov
out
mov
enter
xchg
mov
push
mov
loopne
nop
scas
shll
push
mov
pop
add
push
jmp
mov
xor
in
cmp
mov
insb
and
jge
roll
fldenv
mov
mov
fisubrl
xchg
outsb
sbb
jo
std
lds
cmpsl
test
cs
mov
mov
jecxz
adc
popa
lcallw
fsubl
es
jns
fs
add
adc
out
fnstsw
xor
movsl
xchg
mov
push
sbb
inc
adc
and
test
jae
shlb
inc
xchg
outsl
xorl
mov
mov
hlt
gs
mov
dec
les
sbb
mov
pop
mov
mov
repnz
bound
pusha
inc
iret
xchg
jo
or
int3
mov
std
mov
pushf
pop
jbe
cmc
and
mov
cmp
mov
fs
popf
cmpsb
inc
xorb
ret
data16
filds
or
lret
jp
vprotq
aas
mov
fiaddl
pandn
push
sahf
out
jge
paddw
dec
test
adc
loope
jno
les
stos
adc
aam
xcrypt-cfb
cmpsl
mov
push
add
sti
xchg
sub
mov
lret
jecxz
test
push
outsb
aam
sbb
sbb
xor
adc
inc
push
rolb
pushf
subb
jo
sub
jbe
jns
cmpb
jp
cmpsl
push
mov
add
dec
bound
mov
scas
push
testb
adc
sub
xchg
xchg
fistpl
add
cwtl
je
sub
adc
dec
push
push
mov
cs
dec
shlb
mov
out
jne
push
mov
xor
add
hlt
push
nop
test
adc
das
inc
sub
sbb
scas
and
dec
imul
sbb
xchg
cmpb
mov
inc
int3
lea
repz
inc
insl
mov
mov
dec
pmuludq
push
or
ffree
out
sub
xchg
sbb
mov
mov
cmp
or
push
sti
inc
jo
in
in
repz
inc
xchg
and
push
xchg
fdivr
xchg
data16
push
sub
mov
cld
cli
mov
cmp
je
add
lea
jb
mov
cli
sar
fbstp
push
movsb
je
pusha
adc
lret
xchg
call
fsubrs
and
push
push
mov
leave
outsl
mov
mov
jp
pusha
ljmp
lods
mulb
popf
sub
js
ljmp
push
pop
push
ret
icebp
xor
adc
xchg
int
add
add
jae
dec
cmp
mov
pop
mov
int3
fsubrs
xor
xor
adc
push
lret
cmp
repnz
jmp
mov
push
sarb
xchg
xchg
and
lock
imul
psllq
sub
repz
sbb
mov
push
xchg
hlt
sub
int3
popf
inc
pushf
mov
sbb
mov
mov
cmp
jnp
pop
adc
lret
in
repnz
cmp
push
and
xor
cmp
bound
xchg
std
or
stos
mov
dec
xor
lret
add
lds
dec
int3
test
je
and
xor
mov
dec
inc
and
pusha
mov
xchg
punpckhbw
cmp
popf
insb
and
sub
mov
test
cmp
sub
push
repnz
adc
fistpl
fcompl
push
jmp
loope
adc
out
jne
gs
test
mov
jae
int3
jle
leave
test
jecxz
or
adc
mov
stos
loop
jno
in
or
inc
sti
xlat
insl
nop
mov
loope
lret
mov
aas
daa
lret
xchg
adc
fwait
sub
sahf
lret
xchg
gs
aas
mov
stc
gs
jae
cmp
mov
nop
sbb
int3
imul
mov
loopne
fiaddl
scas
and
stc
or
or
lds
add
push
ffree
nop
movsb
stc
add
int3
test
xor
and
daa
cwtl
es
cmp
cmp
xchg
pop
or
mov
xchg
loope
mulb
repz
cmp
xor
jne
or
add
aas
adc
pop
into
fbld
icebp
lret
xchg
nop
mov
mov
sub
sub
inc
out
pop
and
push
push
mov
mov
inc
push
cld
int
lahf
test
push
mov
pusha
inc
dec
in
lret
mov
ss
mov
addr16
jmp
out
pushf
sbb
lea
mov
add
pop
add
xchg
fs
iret
xor
xor
dec
jb
pop
sahf
stos
mov
cmp
les
dec
cmpsb
xor
mov
setae
cltd
adc
aam
lock
lods
sbb
repnz
dec
es
adc
dec
adcb
mov
xor
mov
inc
add
in
or
popa
int3
pop
pushf
lret
arpl
stos
inc
pop
jle
mov
pushf
jmp
sub
or
lods
sub
cmp
movsb
sub
cmc
pusha
mov
jb
orb
cmc
mov
loope,pt
push
pop
pop
push
scas
int3
adc
negb
mov
clc
add
mov
and
jns
or
lock
pop
outsl
in
inc
push
ret
hlt
mov
sarb
sbb
rcll
jnp
push
out
xor
scas
xchg
mov
out
sub
mov
dec
push
xchg
jg
clc
pop
push
sub
test
jbe
inc
and
mov
and
lods
mov
cmp
or
push
stc
mov
repnz
xor
push
pop
shll
mov
and
jns
js
test
xchg
sbb
test
xor
popf
test
loop
icebp
mov
push
insb
pop
pop
jns
mov
mov
and
lcall
sub
mov
in
add
sub
fdivp
pop
test
cmpsl
pop
push
fbld
cmp
sti
adc
outsl
cli
and
push
les
cmp
push
insl
cwtl
sub
mov
mov
test
sahf
mov
inc
xchg
mov
push
sub
xor
aam
sub
insl
mov
jb
pop
hlt
jle
lcall
push
inc
fildll
stc
jo
push
xchg
jecxz
mov
sub
arpl
imul
repnz
mov
cli
dec
xor
cli
and
mov
push
sbb
xor
dec
in
inc
xor
hlt
jg
jmp
rorb
sar
movsl
pop
pop
push
cmp
aas
add
cli
xchg
int3
gs
mov
lret
lahf
test
push
ss
cld
cltd
popf
notl
cmp
or
fistpll
test
gs
fmul
gs
pop
pop
notl
add
call
test
xchg
jg
cmp
mov
sahf
mov
xor
in
jmp
push
cmp
pop
mov
aad
int3
mov
in
pop
mov
adcl
cmp
xchg
popa
in
les
mov
cmpsb
dec
daa
sub
into
test
mov
jge
push
cmc
ljmp
loop
jae
lret
mov
push
xchg
int3
mov
xchg
out
xchg
mov
mov
lcall
push
mov
dec
dec
mov
xor
mov
add
js
jb
pop
shlb
shll
faddl
addb
sub
aaa
inc
xchg
mov
mov
pop
mov
iret
cmp
imul
cli
mov
movsl
repz
and
and
adc
lret
sbb
mov
add
pop
dec
xchg
push
sbb
xor
popf
pop
mov
jecxz
mov
arpl
mov
pop
fstps
popf
stc
jmp
stc
jo
xor
in
adc
ds
sub
adc
shll
jmp
push
inc
inc
and
add
dec
push
pop
mov
in
int3
sbb
cmc
and
lret
mov
inc
mov
jecxz
popf
imul
and
and
and
push
pop
rcll
mov
push
add
sbb
dec
jg
lea
fidivrl
cmc
add
adc
dec
fwait
cltd
mov
push
mov
push
pop
lds
mov
sbb
pop
adc
enter
dec
movsb
mov
lret
cmp
xchg
je
mov
sahf
mov
andb
mov
mov
pushf
pop
mov
pushf
xor
xchg
call
lahf
xor
or
inc
inc
mov
aaa
into
or
xchg
push
cmp
pop
xchg
push
fwait
inc
sub
cwtl
mov
std
sbb
andb
imul
and
xchg
mov
sub
pop
mov
cmc
cli
andl
orb
push
fwait
cmc
mov
je
test
test
jae
sbb
cltd
fbstp
sbb
loopne
jns
lock
test
jp
in
hlt
and
int3
jnp
or
mov
cld
mov
jb
mov
jecxz
sub
insb
shlb
push
xchg
les
cmpsl
pusha
add
es
xchg
dec
scas
inc
test
push
mull
and
repnz
cmpl
mov
xor
dec
sub
cld
lea
cmp
out
jg
int3
aam
mov
dec
dec
xchg
xchg
mov
or
repz
or
push
psubsb
cs
mull
jmp
and
sarb
lret
mov
es
fsubrs
jae
testl
cmpsb
mov
movsb
mov
int3
stos
xlat
lock
mov
orb
dec
pop
stc
cwtl
mov
add
jmp
xchg
mov
cwtl
mov
pop
or
stos
dec
cltd
repz
xchg
pop
mov
lret
push
lds
test
arpl
nop
cltd
adc
pop
cmc
iret
daa
push
mov
in
das
stc
fsubl
jg
testl
lock
pop
add
push
jmp
dec
movsb
insb
inc
push
pop
stos
aad
inc
sub
popl
sahf
insb
sub
inc
insl
mov
daa
and
inc
inc
pop
push
adc
mov
aaa
pushf
adc
outsl
lea
adc
or
xchg
xchg
xor
sbb
cmp
stos
inc
push
inc
or
and
cld
xchg
xlat
mov
mov
outsb
mov
push
lock
pushf
mov
dec
cmp
lret
imul
sub
push
dec
rcrb
lcall
dec
and
xchg
sub
xor
dec
subl
mov
fldt
sarb
lret
pop
sub
sub
inc
and
stos
hlt
or
xor
idivl
and
ja
jo
xor
fxch
lret
out
xor
mov
fwait
mov
or
ret
cwtl
test
and
push
xor
subl
push
jmp
adc
dec
movhps
or
sahf
dec
xchg
xchg
subl
mov
dec
ss
push
cmp
popf
lods
xchg
mov
mov
lock
cmpb
test
and
pushf
xchg
int3
mov
lock
and
pop
aad
fsubs
adc
fdivl
pop
and
jo
push
pop
mov
lahf
sbb
cs
cld
popf
jmp
fs
outsl
xor
xor
xchg
mov
push
in
stc
xchg
or
mov
push
jmp
daa
pop
mov
pop
rcll
mov
mov
sub
iret
jecxz
mov
xchg
ret
pop
insl
sub
popf
push
bound
xor
stc
push
je
or
mov
int3
test
or
subb
push
out
js
jb
push
mov
stos
push
test
out
loope
pop
pop
orb
push
outsb
idiv
frstor
mov
push
dec
mov
out
mov
jb
int3
ljmp
jl
xchg
outsl
mov
inc
repnz
loope
xchg
inc
enter
fwait
lret
xchg
mov
in
fildl
add
and
mov
xchg
or
pop
sbb
push
push
xchg
and
cmp
jp
out
test
and
ret
sub
cmpb
aad
jbe
dec
jmp
mov
mov
or
les
sahf
int
leave
ret
jmp
pop
movsb
push
ja
dec
cmp
test
imul
jno
push
imul
mov
outsl
nop
clc
insb
and
cmc
inc
adc
roll
fisubs
xor
jp
jno
pusha
push
movsb
mov
rorb
xor
add
push
dec
inc
mov
popa
xchg
out
inc
sub
movsl
cmpsb
cmc
cmp
add
test
into
popa
mov
xchg
ljmp
mov
inc
mov
mov
mov
daa
movntq
lock
adc
jne
test
ss
test
lcall
scas
je
rorb
mov
aad
enter
xchg
pusha
xor
pushf
jecxz
mov
mov
notb
mov
sahf
jbe
dec
sbb
xchg
push
fcmovne
rol
cmp
pusha
inc
arpl
cmp
sbb
in
aaa
fs
jge
xor
hlt
dec
cmpsl
test
lods
sti
pop
popf
insb
rclb
mov
or
mov
push
push
adc
pop
cmc
xchg
out
hlt
gs
adc
test
cmpxchg
stos
sti
mov
or
xor
lea
lret
and
out
xor
sarb
mov
fsubs
pusha
stos
mov
test
sbb
adc
and
test
sti
add
scas
pcmpgtb
mov
and
sub
inc
and
mov
aas
sub
push
fistps
and
lret
add
adc
and
jo
loope
roll
imul
lcall
imul
adc
push
popf
cli
cmc
pop
cwtl
out
mov
push
aaa
adc
mov
xchg
push
movsl
mov
mov
in
lods
shll
mov
xlat
xlat
dec
cmp
jae
mov
jo
lret
xor
mov
test
imulb
mov
imul
fstps
pop
mov
and
push
inc
shll
push
lret
push
popf
jae
aaa
lea
and
and
dec
mov
out
ja
ds
je
dec
repz
lcall
sub
andl
push
xor
fwait
cmpsl
sbb
dec
test
mov
insl
mov
ljmp
or
jae
inc
push
les
dec
jecxz
out
jo
mov
fmul
and
xor
mov
fbstp
mov
cmp
mov
sar
xchg
ljmp
std
lahf
push
xor
movsl
adc
xor
mov
mov
cld
mov
mov
ret
push
inc
cmc
fidivl
jmp
mov
dec
cmp
lret
push
add
fistpll
shlb
sub
mov
fs
push
in
scas
iret
insl
inc
inc
outsl
ret
push
mov
test
push
dec
ret
pop
js
repz
rorl
lea
aam
xor
mov
jns
lods
adc
mov
sar
out
mov
aas
add
outsb
mov
pop
mov
sbb
stos
fidivl
mov
icebp
cmp
test
mov
xchg
cli
rcrb
push
push
ljmp
mov
adc
dec
mov
test
arpl
mov
mov
xchg
jns
and
mov
mov
dec
int3
movsb
sub
xchg
push
stos
add
roll
and
adc
inc
fsubp
xlat
aaa
jo
cltd
lret
mov
xor
stos
push
notb
cmp
adc
inc
and
sub
xchg
out
fwait
pop
sti
jno
daa
fmuls
adc
imul
pop
cwtl
fdivrl
inc
inc
sbb
sbb
adc
testl
das
loope
jl,pn
stc
sbb
xchg
jmp
xor
lea
jne
xor
jb
shlb
ret
pushl
mov
dec
iret
sbb
dec
dec
jecxz
sbb
shll
jae,pn
jbe
test
cmc
fildll
in
das
cs
cmpsl
and
fdivrl
call
inc
and
fcomi
pop
pop
xchg
sti
lods
mov
push
xchg
subb
out
push
jecxz
rcll
cli
pop
mov
sub
mov
mov
xor
mov
mov
xor
adc
lret
stos
out
pop
dec
mov
lock
bound
ljmp
repz
xchg
mov
dec
mov
jmp
dec
imul
shlb
fcoml
fld
fdiv
hlt
mov
insb
dec
mulb
dec
repz
push
cmp
insb
jno
xorl
test
sub
cmpsl
fs
sub
mov
fcom
mov
and
sahf
inc
scas
mov
subl
mov
lcall
arpl
cmp
mov
or
pop
lock
adc
lea
aaa
shl
std
mov
roll
fisubs
pusha
cs
adc
dec
jp
icebp
adc
nop
jg
xor
xlat
outsb
push
nop
jge
in
testl
fcompl
mull
mov
loope
loopne
lock
inc
mov
in
push
lret
inc
in
test
and
lret
or
divl
out
jb
pop
jne
rorl
in
adc
cmp
sbb
mov
push
sbb
or
movsl
push
bound
xchg
mov
pop
sub
lret
decl
adc
mov
daa
pop
cmpsl
arpl
leave
mov
sbb
and
mov
xchg
mov
and
arpl
inc
and
leave
xor
jg
mov
xchg
iret
add
movsb
cli
js
loope
sahf
mulb
dec
jl
jmp
push
cli
xor
repz
push
int3
ss
scas
mov
sbb
cmp
add
xor
and
lret
sub
xor
ljmp
and
mov
xchg
xchg
xor
lret
or
test
lcall
lea
frstor
mov
dec
stos
jl
sbb
clc
sbb
ss
pop
test
std
mov
shll
cmp
push
sub
sbb
adc
arpl
outsl
dec
andl
rolb
jmp
outsl
and
in
pop
push
and
push
bnd
lret
sub
movb
std
add
cmp
fwait
xchg
mov
daa
push
mov
subps
xor
and
pop
movb
push
cltd
jp
ja
lret
aam
dec
sti
xor
mov
xor
jae
xchg
mov
mov
aam
icebp
cmp
js
xor
mov
xor
scas
pop
add
fdivr
adc
and
ret
mov
leave
jnp
jns
nop
add
xchg
sub
shlb
xchg
loop
mov
idiv
inc
cs
arpl
xchg
test
les
or
scas
jae
mov
add
in
nop
incb
test
sbb
pop
stos
stc
mov
test
insl
mov
add
clc
fldcw
pushf
cli
int3
adc
in
jp
imul
out
test
xlat
sbb
pushf
inc
sbb
jb
jne
arpl
xchg
add
mov
pop
inc
pop
mov
mov
fsts
int3
das
xor
int3
test
mov
ljmp
imul
dec
mov
enter
push
sub
popa
and
outsl
es
or
mov
xor
jo
push
lds
in
enter
stc
push
jecxz
dec
inc
cli
mov
loopne
aaa
jecxz
mov
sbb
and
sub
pop
call
push
jl
in
je
jmp
ret
int3
popf
or
cltd
xor
jecxz
dec
adc
imul
mov
xor
rcll
cmp
mov
xor
sbb
pop
shl
popl
fdivrl
jmp
addr16
ljmp
cwtl
icebp
and
xchg
mov
ljmp
pushf
sbb
jnp
or
sti
ja
mov
cmp
out
dec
bound
and
test
or
imul
int3
lret
je
sub
cmp
jmp
mov
std
and
test
addr16
enter
xchg
mov
stc
pop
jne
adc
int3
sub
push
mov
hlt
jmp
xchg
fistps
cmp
sbb
xchg
pop
xchg
inc
mov
sbb
mov
sbb
sbb
jno
cmp
lds
fs
push
mov
mov
push
sub
lret
subb
push
sbb
int
lock
mov
fwait
dec
call
out
mov
jo
sub
mov
mov
sub
fmull
sub
jo
sub
mov
jg
rcrb
ret
xchg
jmp
cld
xchg
xor
push
sub
or
pop
jle
dec
in
movsl
add
jecxz
sub
movsl
cmc
mov
fnsave
enter
mov
pop
clc
lahf
fidivrs
icebp
test
push
nop
jb
mov
pop
adc
sbb
mov
orb
fistl
bound
sbb
dec
lret
scas
xor
push
jmp
inc
jecxz
push
xor
fwait
xchg
lret
mov
push
bound
mov
pop
push
popf
cmp
sub
data16
add
and
test
cmp
hlt
xchg
mov
mov
sbb
jmp
mov
pop
or
mov
lcall
xor
mov
jb
out
lcall
push
fisttpll
out
xor
xor
push
idivb
cmc
hlt
pushf
add
mov
jns
jl
or
ss
mov
cld
sahf
shlb
out
mov
movsl
sarb
mov
aas
jmp
aam
lahf
jo
hlt
inc
in
loope
jbe
int3
push
xor
into
pop
mov
out
fcmovb
mov
lods
mov
sub
imul
loope,pn
or
scas
cltd
xor
scas
bound
pop
add
fcmovnbe
mov
data16
push
call
cli
dec
subb
mov
mov
xchg
pop
jbe
adc
xchg
stos
dec
and
orl
mov
das
adc
xlat
ds
fdivl
mov
jnp
frstor
jecxz
cli
mov
dec
pop
arpl
push
fxch
mov
pusha
in
xchg
mov
stc
jecxz
xchg
mov
test
sbb
lds
cmp
cwtl
lods
cmpsl
sub
lahf
in
mov
mov
fwait
mov
xchg
mov
and
data16
push
ret
dec
mov
into
mov
mov
or
repnz
iret
int3
mov
dec
cmpsl
les
inc
sub
ret
push
xchg
insb
aam
xchg
test
lahf
dec
fisubs
loope
lret
sahf
xchg
insb
add
outsl
fsubl
imul
push
pop
jmp
jo
loop
ret
ljmp
inc
or
push
je
sarl
mov
sub
stos
inc
pop
and
mov
mov
dec
cmp
nop
push
inc
inc
mov
inc
push
std
inc
out
mov
mov
mov
add
push
fs
mov
out
add
mov
aam
es
dec
jmp
movsl
cmpsb
sbb
cli
xchg
daa
mov
sti
pop
xchg
push
sahf
mov
or
js
adc
or
mov
fdivrs
mov
stc
ficoms
pop
clc
xor
or
xor
outsb
pop
mov
sub
mov
xchg
pop
aas
push
sub
mov
lods
xor
or
jae
sbb
dec
out
fadd
sub
xchg
sahf
mov
test
or
and
mov
xor
or
mov
into
mov
pop
mov
pop
mov
add
filds
icebp
jns
push
jg
and
int
aam
test
popa
fstpl
aaa
popf
movsb
sbb
pop
push
mov
jbe
aam
mov
mov
pop
cli
jle
inc
and
push
xchg
call
inc
sub
cmpsb
xor
movsl
ja
pop
aaa
add
add
lcall
and
hlt
adc
loop
enter
fsubr
sbb
mov
or
fs
adc
ss
fdivrs
push
mov
or
ret
inc
mov
inc
cmp
mov
sub
mov
mov
cmp
loopne
fs
inc
mov
popf
mov
mov
push
add
cmpsl
call
les
and
sbb
frstor
mov
insl
or
mov
cmp
movsl
repz
rcr
mov
cmc
cmp
movsl
dec
sub
aas
hlt
cmp
mov
stos
sti
repz
lock
or
rcl
fdivl
insb
push
mov
jnp
in
mov
jp
push
mov
loope
inc
out
movsl
ss
cmp
xchg
xorb
loope
mov
cmp
mov
xor
mov
mov
ljmp
mov
jb
inc
test
or
fwait
lea
fcomi
std
pop
add
mov
xor
aad
stc
outsl
imull
mov
mov
subb
add
je
in
xorl
jl
int3
inc
fwait
mull
mov
sub
stos
xlat
sbb
loope
mov
mov
dec
lock
std
testb
and
rclb
aam
mov
rcrb
fwait
inc
lret
pushf
push
or
mov
mov
adc
in
cltd
mov
sbb
movsl
sub
jle
daa
mov
sub
and
mov
repz
gs
je
shll
into
ret
insl
sbb
sbbb
push
outsb
js
mov
cmpsl
push
bound
cmp
fdivs
xor
rolb
rolb
sbb
mov
pushf
ds
ja
sub
lods
jl
clc
das
jle
int
push
out
mov
jns
cmp
mov
ret
int
pop
rorb
scas
or
xchg
mov
mov
or
ja
mov
jecxz
scas
lahf
add
inc
out
mov
mov
push
fcomps
in
push
enter
mov
mov
lcall
add
stos
cmpsb
xor
aam
ret
in
adc
sub
mov
mov
hlt
or
xchg
hlt
cwtl
xor
and
jl
mov
js
iret
mov
xchg
xor
jmp
inc
or
add
mov
pop
jecxz
push
xor
sbb
inc
ss
mov
ret
cmp
cmpsl
xchg
lods
shlb
test
mov
shl
cld
mov
outsb
mov
jb
dec
enter
mov
shll
xchg
cld
xchg
and
mov
add
stos
shl
push
fdivrl
xchg
aaa
mov
data16
lds
mov
cld
cmpsb
mov
jle
mov
iret
repz
enter
repnz
lods
and
cmpsb
xchg
gs
dec
test
sarl
hlt
loop
add
jecxz
sub
xor
aam
inc
rcrb
pushf
mov
inc
in
orl
pop
inc
jmp
ret
insb
imul
xchg
pop
lret
mov
pop
inc
into
jb
dec
or
int3
or
jle
xor
jae
rclb
push
jns
pop
xchg
cmp
lods
mov
fisttpll
push
jbe
xor
lret
aas
lds
movsl
arpl
repz
aam
lret
loopne
xlat
scas
push
dec
sti
ret
outsl
adc
sbb
pop
xchg
mov
add
xchg
test
push
cltd
insb
roll
sbb
scas
loop
mov
fbld
xchg
mov
mov
sbb
cmp
lods
cli
xchg
mov
lds
fwait
sub
xor
aam
ss
stos
cli
mov
fistpll
xor
xor
inc
fdivr
cli
sbb
lods
jp
mov
repz
push
hlt
or
push
mov
popa
cmpsb
outsl
je
add
cs
inc
out
mov
js
mov
or
rol
test
xor
inc
xlat
jne
loop
xchg
in
mov
cmp
pop
mov
cmp
jmp
xor
cwtl
mov
les
mov
shrl
aad
dec
mov
fidivs
sbb
mov
add
jbe
nop
inc
fnsave
sub
rcrl
movsb
mov
into
mov
scas
sub
jg
les
jl
je
nop
xor
mov
loopne
pusha
and
inc
cmp
fidivs
cmpsb
loope
je
adc
inc
outsb
popf
stos
mov
in
cmpsl
xchg
push
push
sbb
pop
mov
fcoms
aaa
inc
mov
cbtw
cs
mov
pop
pop
jmp
lahf
cld
pop
je
mov
jbe
mov
jns
mov
push
sub
mov
xorl
iret
xor
lret
mov
fwait
mov
sub
nop
lea
pop
hlt
clc
cmp
negb
sbb
pop
out
pop
inc
stos
pop
push
mov
jmp
aam
xchg
data16
pushf
xchg
test
mov
dec
cld
or
mov
movsb
jae
mov
les
pop
pop
ret
sbbb
daa
and
daa
mov
xchg
cwtl
push
popa
sub
inc
cmp
psraw
icebp
push
mov
js
incl
mov
pushf
outsb
dec
xchg
mov
das
leave
sub
aaa
out
inc
mov
mov
loope
ljmp
jmp
lcall
gs
add
mov
cs
enter
xor
xchg
lock
stos
xchg
int3
and
lds
testb
jnp
sti
sbb
out
mull
cld
adc
dec
sbb
and
xchg
nop
aaa
repnz
xor
push
xor
mov
loop
mul
xchg
test
hlt
push
mov
test
or
mov
inc
test
dec
mov
test
dec
xchg
cltd
lret
shll
rolb
xor
mov
in
mov
pop
mov
mov
mov
push
mov
xor
sub
test
test
faddp
jae
sub
lcall
sbb
jnp
push
leave
push
dec
mov
fstps
test
test
mov
push
cmp
popf
int3
inc
or
push
sbb
push
xor
inc
pop
outsb
sub
mov
adc
push
xor
xor
in
daa
cwtl
out
test
lock
ljmp
mov
dec
clc
mov
adc
or
xor
scas
loopne
push
movsb
xchg
out
popa
pop
push
jb
int3
dec
jbe
mov
movsl
popf
xor
imul
add
int
mov
mov
xor
loope
lds
mov
ret
insb
dec
idivb
or
mov
and
pop
dec
iret
arpl
outsb
sub
movsb
or
test
mov
cmp
and
cmp
ret
xor
shrb
adc
js
shlb
jo
xor
inc
mov
mov
pop
pusha
jne
aam
das
adc
adc
arpl
rcrl
cmpsb
scas
mov
and
ljmp
push
jae
daa
fstpt
into
xchg
fcomps
insb
sti
push
std
xor
or
lret
sbb
shrb
test
mov
scas
dec
jbe
out
jb
xor
xlat
cmp
arpl
jg
sarl
push
pop
dec
sbb
push
inc
mov
or
and
movsl
push
insb
xor
push
pop
sbb
xchg
lret
jecxz
pop
inc
mov
mov
add
out
push
mull
pop
xor
lret
adc
cmp
xchg
and
inc
movsl
lcall
ljmp
popa
mov
adc
pop
pop
aas
lock
pusha
fcmovbe
xchg
mov
loope
pop
and
jb
cmc
push
jmp
gs
test
mov
jnp
test
lret
ja
add
sbb
jmp
lock
cs
bound
add
cmpb
push
cmpsb
stos
div
cmp
std
inc
int3
sub
jbe
insb
adc
push
sbb
inc
stos
scas
sbb
mov
cld
or
pop
call
mov
movsl
xchg
cmp
imul
inc
inc
das
int3
sbb
cmp
push
sbb
int3
call
jne
cmp
sti
and
add
mov
sub
add
xchg
daa
xchg
and
sub
mov
pop
mov
mov
xor
mov
mov
xor
es
xor
dec
aad
sti
mov
pop
fdivl
xchg
push
xchg
add
sarb
xor
or
jae
xchg
scas
jp
mov
add
sbb
shl
mov
jno
push
imul
xchg
mov
jb
jae
nop
dec
sub
cmpsl
mov
movsl
mov
add
push
lahf
xchg
jae
pusha
mov
inc
adc
inc
mov
mov
rcll
call
insl
add
mov
sahf
ljmp
mov
cmp
idivl
aas
sub
aam
arpl
mov
cld
xor
enter
enter
es
out
pop
mov
add
pop
mov
mov
aaa
incb
in
pop
lret
popf
push
and
mov
repz
jge
je
bound
push
in
mov
mov
xlat
dec
mov
fistpll
test
add
mov
lds
push
fisubl
push
mov
dec
in
in
cmp
mov
es
test
inc
pop
jae
xor
inc
xchg
sarl
mov
out
xorl
and
sahf
mov
cwtl
outsl
stc
push
mov
out
imul
shlb
cmp
mov
iret
jae
add
bound
xchg
dec
daa
gs
shrd
dec
xor
cwtl
aam
popf
movsb
inc
mov
mov
mov
xchg
leave
imul
and
outsb
movsl
lods
push
mov
xchg
cmc
gs
inc
add
xchg
mov
movsl
mov
enter
leave
inc
or
stos
clts
call
cmpsb
xchg
dec
shrb
mov
das
sbb
adc
outsb
imul
add
xor
add
bswap
jge
add
xchg
jo
andb
mov
ja
sub
mov
xor
mov
jb
jno
adc
stos
aam
xchg
push
mov
in
add
mov
or
xor
js
xor
cmp
mov
push
hlt
aam
pop
or
les
cli
mov
sub
add
sbb
dec
ss
lods
psubb
xor
cli
jge
xchg
dec
xor
movsb
in
mov
push
push
cs
sub
xchg
sbb
mov
cmp
mov
sub
dec
push
clc
fnstcw
mov
xchg
adc
xchg
int3
sub
fcoms
outsb
push
push
mov
pop
xor
add
ret
sub
xor
imul
lods
or
mov
add
cmp
mov
sub
mov
loopne
fs
dec
int3
dec
mov
test
xor
push
in
insb
or
mov
jbe
stc
jecxz
or
jmp
ret
in
stos
ljmp
adc
push
sbb
jge
shlb
shl
mov
mov
fdivrs
andb
loopne
jnp
pop
sti
pop
pop
inc
adc
pop
rorl
and
cli
pop
mov
imul
adc
mov
les
fs
repz
jb
jns
fidivrl
dec
divl
xor
pop
sub
aad
daa
subl
jg
repnz
dec
mov
ds
inc
mov
lret
and
lds
data16
sub
shll
int3
rclb
test
divl
test
mov
sub
inc
mov
cmpsb
sbb
lea
mov
das
je
outsl
xchg
mov
adc
rolb
pop
pop
adc
mov
mov
loop
sbb
shlb
adc
mov
xchg
ror
add
jge
stos
arpl
ja
sub
push
popf
insl
loopne
cli
jae
and
jbe
out
inc
mov
notl
pop
lock
inc
or
sbb
lods
lret
pushf
pop
sarb
js
or
jnp
fcomi
imul
xchg
and
in
mov
stc
fs
lcall
std
push
mov
int
jge
sahf
cmp
jmp
mov
mov
shlb
outsb
sbb
cmpsl
pop
loop
cmp
sub
xor
dec
jo
sbb
or
or
add
dec
out
xchg
mov
in
outsl
inc
sbb
pop
aaa
inc
outsl
xchg
fwait
or
mov
ds
lcall
sub
jno
neg
and
sbb
mov
lds
jns
insl
inc
pop
lea
test
stos
sbb
int3
add
in
add
xor
int
dec
and
fsubrl
dec
pop
mov
sub
cltd
jl
pop
rcrb
cmc
test
mov
jecxz
js
ja
movsb
mov
xor
lea
xor
mov
fwait
pushf
and
adc
and
mov
cmc
pusha
jns
sub
pop
ss
stc
sbb
incb
orb
sbb
pop
dec
inc
je
jge
cld
mov
mov
sbb
pop
cmc
add
or
mov
mov
daa
lret
xchg
insl
pop
adc
dec
push
test
lods
cmpsb
enter
push
jnp
mov
add
fnstenv
ror
rclb
and
bound
add
sti
clc
fbld
or
shl
mov
or
xor
mov
sbb
ret
repz
cmpb
je
add
xor
inc
sti
add
lods
arpl
adc
mov
movsl
sbb
and
lock
decl
faddl
idivl
inc
push
std
mov
jecxz
addl
int3
out
adc
enter
push
sub
dec
xchg
lahf
mov
mov
outsb
or
subl
and
mov
push
pushf
dec
fs
and
and
xor
cmp
lods
lock
fadds
jo
push
jge
ret
dec
cmp
addl
jl
das
mov
inc
inc
inc
outsl
clc
test
and
fidivs
jg
enter
xor
mov
adc
aas
xchg
push
sub
and
leave
mov
gs
push
sub
or
adc
scas
push
test
or
mov
xor
pop
adc
jp
xlat
arpl
ja
je
mov
xchg
out
mov
stc
and
cmp
pop
js
imul
cli
imul
pop
xor
push
fabs
notl
sub
cld
xor
dec
int3
imulb
ss
pop
pop
cs
es
cli
dec
push
hlt
mov
in
push
fwait
add
mov
push
subl
je
pop
push
dec
mov
push
push
shlb
ret
rol
enter
inc
xchg
or
sub
push
dec
or
icebp
test
and
mov
push
xlat
shufps
sbb
or
out
mov
in
rcrl
mov
jecxz
mov
inc
inc
lret
aad
sbb
ror
dec
fldt
push
xchg
mov
pop
idiv
add
cmp
loopne
popf
outsb
or
js
std
out
xchg
cmpsl
jp
and
test
sar
xor
scas
std
jl
fsubrs
sub
adcl
sub
sub
data16
arpl
repz
gs
jno
jecxz
xchg
cld
mov
int3
xchg
call
scas
lock
int3
shl
loope
jo
mov
stos
loopne
mov
int3
mov
add
mov
leave
mov
push
sbb
and
daa
loope
jp
dec
fcomps
daa
cli
dec
fmull
je
inc
or
es
out
clc
sub
adc
xchg
push
out
add
pop
ret
push
mov
mov
dec
push
mov
sub
stos
cld
dec
pop
lods
mov
xchg
repz
mov
ret
leave
ljmp
add
sahf
mov
jns
outsl
mov
cmp
mov
fistps
es
cmp
mov
jae
inc
rolb
je
sbb
shll
int3
rcll
mov
enter
jle
fnsave
in
and
add
out
mov
pop
mov
mov
test
std
xchg
ret
das
pop
mov
jmp
cs
ret
cld
mov
ja
pop
sbb
dec
mov
pop
xchg
mov
mov
mov
adc
sbb
mov
int3
ss
outsl
push
add
lret
push
sub
lret
imul
add
mov
mov
xchg
push
or
mov
in
and
xor
cmc
aas
push
lret
dec
jg
lahf
lret
or
pop
nop
dec
pushf
mov
lahf
lcall
xchg
inc
hlt
lret
mov
mov
in
mov
add
push
fistpll
add
mov
rcrl
in
push
push
cltd
mov
xchg
and
dec
test
cmc
jmp
movsb
sbb
incb
pop
xor
loopne
fs
cmp
xor
sti
and
xlat
lea
aad
stos
test
cmpsb
xor
movsl
das
shlb
nop
sbb
jecxz
mov
xchg
mov
jmp
inc
das
mov
sub
movsb
xor
push
shr
push
cmp
lret
movsl
cmpsl
cmp
jl
xorl
and
movsb
jmp
hlt
push
pushf
adc
add
jnp
push
xor
and
stc
adc
daa
sub
pop
scas
push
or
mov
add
xchg
test
pop
fdivrs
arpl
jge
cld
movsl
lea
mov
mov
jecxz
mov
movsl
push
aam
and
mov
aam
cli
gs
out
stos
pop
hlt
xor
or
call
xchg
lods
lods
fs
dec
stos
lods
fcompl
test
outsb
fadd
push
mov
xor
mov
test
cli
sbb
mov
shlb
rolb
mov
mov
stos
jne
scas
dec
pusha
dec
pop
xor
jge
push
and
mov
fwait
lret
xor
int3
jmp
clc
mov
cmc
or
enter
cmpsl
xor
mov
inc
mov
cmp
inc
xor
push
arpl
mov
subb
xchg
jb
aad
imul
pushf
sahf
aad
pop
testl
repz
std
jp
pop
lock
xor
or
insl
cwtl
dec
notb
scas
mov
sub
mov
xlat
add
out
pop
iret
jne
repnz
ret
lods
sbb
inc
repnz
add
fists
out
mov
cmp
outsl
mov
pop
cld
adc
mov
pop
xor
inc
les
cld
sbb
imul
mov
jmp
adc
insl
inc
out
mov
push
hlt
in
and
dec
sbbb
sbb
stos
sbb
xor
or
mov
pop
icebp
fimull
pop
or
dec
addb
xchg
int3
lea
fldl
mov
adc
xor
fisttpll
ret
cmpsb
iret
cld
lret
jmp
dec
sub
xchg
fnstcw
int3
mov
inc
cltd
lret
insb
sbb
into
in
loop
xchg
cmpsb
lahf
xor
loopne
das
arpl
aas
push
fnstsw
inc
mov
xlat
jl
inc
enter
or
mov
sub
test
pop
cmp
mov
xchg
jmp
cmc
sbb
out
mov
jmp
inc
mov
stos
repz
pop
cmp
push
xchg
mov
je
shll
imul
ja
imull
lret
ret
imul
mov
and
xor
pop
mov
mov
imul
into
mov
add
fwait
jnp
xchg
std
sbb
out
xchg
push
icebp
mov
add
fadds
call
push
mov
pop
incb
jo
adc
addr16
scas
adc
mov
cs
lds
int3
dec
subb
lods
xor
jl
scas
pop
addr16
data16
sbb
imul
mov
push
aaa
scas
and
leave
mov
add
jnp
mov
and
and
rcrl
push
mov
sbb
mov
cli
or
jle
out
xor
arpl
sahf
lret
int
cmc
sub
cmc
cwtl
push
mov
aaa
mov
xor
jnp
sahf
int3
lds
jecxz
xor
filds
sub
dec
push
scas
mov
js
fbstp
gs
xchg
push
jge
lret
shl
pop
arpl
bound
repz
jl
mov
aas
repz
lret
sub
rcrb
jmp
dec
js
insb
dec
pop
cwtl
push
and
stos
or
mov
loope
push
mov
adc
aad
mov
mov
xor
xchg
xor
push
pop
add
stc
mov
lret
jo
mov
mov
pop
jmp
lahf
test
mov
jg
pmaxsw
ret
mov
mov
xchg
and
inc
push
xor
push
sbb
and
fcmove
mov
adc
ror
jnp
dec
xchg
cmp
xor
xor
mov
and
hlt
test
mov
push
jns
push
mov
inc
jno
jmp
add
outsb
into
dec
lock
daa
js
push
xor
aas
xor
sahf
shlb
adc
jns
push
xchg
bound
pop
pop
and
imul
imul
gs
xor
cmpsl
and
xchg
pop
lret
mov
fisttpll
cmpsb
fcompl
dec
add
pushf
mov
hlt
pop
sbb
stos
pop
mov
mov
test
jae
jge
and
stos
push
or
cmp
add
mov
pop
or
movsb
sbb
fmulp
repnz
add
dec
stos
mov
pop
mov
xchg
push
cld
cmp
daa
push
jne
dec
cmovo
movb
fistps
or
mov
push
inc
adc
sbb
test
dec
push
leave
or
add
jno
cmp
or
inc
mov
pop
mov
outsb
xchg
std
out
jb
ret
mov
notb
adc
mov
leave
push
inc
pusha
lret
xchg
pop
cmpb
jecxz
cmp
in
sub
lahf
and
test
jg
pusha
arpl
lods
push
xchg
mov
jae
and
jmp
repnz
mov
fbld
inc
inc
pop
cmp
pusha
sub
sahf
mov
or
push
rolb
lret
gs
aaa
mov
sub
pushf
jl
xchg
sbb
dec
mov
call
pushf
mov
sub
mov
xor
movsb
ljmp
int3
loop
add
cmp
pop
out
pop
loopne
jmp
push
sbb
mov
jge
or
addl
aam
push
popf
fucom
xlat
or
scas
sti
outsb
rol
mov
dec
das
int3
pop
or
negb
hlt
jp
xlat
shlb
jb
movsl
pop
out
int3
jo
dec
mov
xchg
push
das
int3
movsb
jp
xchg
pop
sbb
mov
in
ret
jl
push
mov
jg
cld
jl
lds
dec
xchg
sub
arpl
inc
xchg
pop
pop
mov
js
mov
xchg
mov
lea
lods
xor
add
mov
fdivs
out
fldenv
rorl
rcrb
insb
lods
pop
mov
pop
lds
mov
push
and
shrb
inc
xor
jae
mov
loop
movsb
movsl
add
add
out
std
jecxz
fwait
pop
adcl
outsb
add
mov
aaa
subb
dec
dec
adc
mov
xchg
in
pop
roll
mov
and
in
insl
fildl
sbb
js
stos
cmp
call
mov
hlt
jl
push
negb
lret
pop
or
lods
in
mov
pop
in
je
and
mov
jecxz
sub
mov
inc
lea
arpl
mov
fstpt
sub
pop
fucomi
adc
imul
push
lret
push
pop
mov
or
sbb
cmp
xor
fisttpll
aam
cmp
cli
js
sarl
stos
sub
jl
jecxz
sahf
pusha
cs
fcompl
int
ss
xor
fwait
adcl
fcomip
nop
jno
shl
jno
cmp
adcl
or
mov
and
fistpl
pop
pusha
adc
mov
xchg
aam
mov
pop
xor
add
popa
sub
inc
mov
xor
dec
fdivrs
lock
in
daa
es
xchg
or
xchg
push
jmp
or
stos
mov
fisttps
in
fs
xor
mov
jne
inc
daa
sub
ljmp
ror
imul
mov
xchg
insb
ljmp
sbb
sbb
push
sub
call
aam
add
cmp
bound
sahf
pop
aam
xlat
xchg
je
outsl
pop
mov
dec
or
stos
int3
pop
cmp
divl
in
sbb
jmp
cwtl
mov
xchg
cltd
aas
dec
pop
in
pop
or
pop
ror
sbb
pop
lret
mov
cli
pop
or
out
int3
divb
pop
add
jne
mov
adc
push
fwait
sbb
adc
cwtl
nop
test
sub
mov
pop
mov
mov
inc
push
stos
test
sub
and
int3
sahf
lahf
mov
imul
arpl
jo
imul
sbb
add
lahf
mov
pop
fwait
les
out
sub
sarb
mov
mov
jge
loop
pop
ljmp
jb
and
sub
mov
cwtl
imul
test
mov
enter
orl
int3
dec
or
mov
xor
jecxz
sbb
inc
xor
and
lds
pop
repz
lret
cmp
mov
vpsrlw
push
mov
sarb
push
sbb
and
test
jmp
std
push
scas
je
dec
jbe
dec
iret
clc
sbb
fisttps
xchg
in
pop
mov
cmpsl
sarl
cwtl
push
daa
stc
repz
mov
in
add
lock
jmp
repnz
es
fstl
jl
in
in
imul
cltd
insb
add
lret
lds
adc
and
mov
out
sub
add
xchg
dec
cwtl
sysexit
sbb
adc
lret
or
inc
push
ret
pop
outsl
jmp
add
fucomp
add
out
fldcw
mov
loope
mov
adc
push
repnz
pop
add
mov
xchg
test
sub
jb
inc
push
ljmp
pop
fisubrl
adc
lret
cli
dec
xor
mov
sub
movsb
lea
jbe
bound
lea
fistps
jae
das
lods
jp
enter
push
push
sub
in
mov
aas
fcom
lods
mov
ficomps
stc
xor
cmpsb
xchg
cli
adc
cli
out
aad
enter
pop
adc
repnz
xchg
sahf
lret
testl
mov
pop
sub
mov
shrl
loopne
fdivs
stc
sub
pop
fsubp
jge
jo
sahf
sti
cmp
sub
addl
not
dec
and
dec
add
sti
popf
sub
jae
call
jle
enter
cmp
mov
cld
sahf
gs
and
xchg
test
adc
and
cmp
mov
mov
fwait
addl
pop
jb
lret
enter
pop
mov
xor
push
cmp
cvtps2pd
jae
cli
cmp
scas
sub
or
fcoml
roll
ds
nop
das
sub
pushf
sbb
mov
daa
fs
repnz
arpl
inc
add
daa
push
adc
insb
and
rcr
dec
mov
cli
sub
fimuls
pop
sti
push
mov
xchg
stos
popa
dec
mov
pop
inc
inc
or
bound
mov
jne
or
mov
jl
mov
lock
xor
in
rcrb
mov
test
push
loop
fcmove
mov
mov
mov
je
mov
xchg
jo
mov
mov
iret
adc
push
insl
cli
and
xlat
sub
call
inc
pop
push
ret
mov
repnz
repz
hlt
push
enter
mov
add
repz
dec
adc
xchg
fs
cmp
cmc
pop
adc
pop
inc
or
push
rorb
pop
ss
fucomp
repz
mov
xchg
aad
mov
sub
int3
into
push
clc
push
es
nop
lds
lret
mov
repnz
movsl
enter
dec
movsb
pop
push
sub
cld
xchg
pop
and
cmp
sbb
sub
cmp
push
add
test
sbb
add
mov
mov
mov
arpl
mov
out
sbb
xchg
and
sub
adc
cld
lock
push
mov
scas
push
into
dec
imul
pusha
push
clc
loop
push
pop
daa
sub
inc
cld
cmc
imul
bound
mov
dec
mov
aaa
sub
inc
jmp
push
mulb
adc
insl
aad
add
sub
shr
lcall
lods
sub
fcomi
push
cmpsb
loop
sbb
jae
xor
popf
rcll
stos
arpl
jg
bound
fdivl
mov
mov
mov
mov
mov
shrl
pop
add
mov
adc
jg
add
daa
cwtl
das
out
leave
test
jle
js
bound
frstor
hlt
push
fstpt
adc
es
push
add
dec
decb
mov
dec
popf
int3
rorl
push
les
or
js
xchg
divl
stos
xor
adc
lods
sbb
clc
dec
lretw
dec
adc
mov
lods
clc
mull
nop
shrb
xor
rorl
xchg
call
adc
loop
inc
cmp
cmp
xor
mov
lods
xchg
dec
mov
sub
xor
pop
and
sub
mov
sbb
test
and
mov
mov
xchg
adc
cmc
mov
fcoml
divps
xchg
jnp
testl
jno
add
stos
push
pop
xchg
ljmp
pop
push
and
xor
mov
adc
adc
xchg
stos
movsl
stos
mov
fsubl
jno
jmp
icebp
xor
fnstenv
ss
lods
push
aam
and
mov
arpl
inc
repz
fxsave
std
outsb
ds
pop
lret
out
jo
lods
and
icebp
enter
int3
stos
fisubrl
mov
or
cltd
idivl
stos
jae
mov
jae
push
xor
in
jg
pop
int3
sub
cwtl
adc
inc
adc
pop
mov
outsb
push
add
xor
cld
sbb
push
and
add
push
jo
mov
jg
fisubs
xor
xor
push
mov
dec
mov
lds
lret
sbb
push
sub
inc
jae
pop
int3
dec
pop
inc
jecxz
in
fldl
mov
sub
mov
xlat
fisubs
push
cmp
enter
js
fs
addr16
mov
repz
fs
inc
sbb
mov
cmpsb
notl
iret
aam
aas
sub
aaa
testb
pop
xorb
xor
mov
jno
jecxz
pop
pusha
insl
push
movsb
adc
mov
gs
shrb
jl
arpl
enter
dec
mov
pop
test
nop
aaa
fldt
testb
not
mov
je
pop
dec
loop
scas
sub
icebp
test
jno
test
negl
jl
xchg
mov
mov
sub
lret
xchg
xchg
pop
cmpsl
xchg
xchg
fmuls
mov
fistl
mov
and
pop
mov
movsl
pop
rclb
hlt
fisubl
dec
nop
inc
test
bound
sub
jne
dec
xchg
data16
cli
xor
out
pop
test
xchg
inc
add
jle
rolb
mov
lret
pop
scas
push
xchg
lret
sahf
push
ljmp
push
xor
adc
je
pop
inc
pushf
rorl
dec
lock
push
or
sarl
adc
insb
pop
sub
sub
or
and
out
mov
int3
test
and
mov
scas
es
xchg
aad
mov
jmp
add
fdivrl
push
push
mov
jg
stc
push
pop
test
xor
popfw
push
lahf
adc
push
xor
mov
nop
inc
sbbl
and
mov
les
jns
gs
and
cmpsb
push
out
xchg
inc
push
mov
outsb
imul
imul
mov
mov
frstor
cld
add
das
pop
int3
test
lea
xor
in
mov
call
imulb
add
pop
jb
stos
mov
dec
mov
lret
and
inc
loopne
pop
add
lret
cli
xor
mov
jl
lock
and
je
xchg
fs
ds
mov
scas
sahf
mov
das
pop
lahf
mov
jmp
lret
ficompl
cmp
rolb
ss
dec
aas
jo
mov
xor
mov
cli
cli
xchg
adc
ss
mov
cmp
mov
lret
shrb
enter
fistpl
sub
push
in
inc
je
je
sub
lcall
pop
xor
mov
pusha
push
dec
rdmsr
jbe
cmc
shr
xorb
dec
fstps
ds
pop
jg
data16
dec
cmpsl
lds
or
loopne
insb
cmp
leave
xchg
pop
xor
and
xor
jno
mov
aas
fucom
jl
adc
sbb
pushf
das
js
xor
stos
ret
lret
std
xchg
test
adc
mov
int3
add
jmp
hlt
enter
mov
dec
ret
mov
std
test
jp
fists
fs
ja
cmp
push
mov
jmp
xchg
test
daa
xor
jae
xchg
adc
jo,pt
mov
cmp
sbb
inc
jge
cmp
push
dec
hlt
mov
es
lret
insl
aam
dec
scas
mov
push
test
fldlg2
sub
mov
nop
mov
and
in
pop
lret
icebp
or
scas
dec
xor
stc
movsb
sbb
inc
lret
xorb
cmp
js
out
xlat
pop
dec
sbb
popa
popa
mov
dec
pop
inc
cltd
loope
sarl
into
pop
mov
pusha
lret
int
imul
sbb
scas
int3
cmp
mov
icebp
ds
jno
push
pop
jl
ret
stos
in
xor
and
mov
add
jo
ret
xchg
add
inc
mov
dec
mov
sbb
mov
ficoms
jb
push
ret
sbb
pop
mov
inc
push
jne
in
add
mov
pusha
sub
mov
sbb
icebp
pop
sbb
xchg
gs
int3
mov
leave
std
rclb
ret
lret
outsb
mov
sbb
divl
xchg
insl
paddq
insb
pop
sbb
out
sub
dec
mov
inc
mov
xchg
adc
rclb
add
mov
pop
repz
fimuls
ljmp
jp
pushf
add
and
pop
scas
call
or
sub
nop
mov
xor
sahf
pop
push
sbb
stos
fnstenv
dec
enter
and
sbb
sarl
je
push
leave
lea
xor
loopne
mov
xor
fs
lock
repnz
sahf
jg
sqrtps
jae
add
dec
aaa
cmp
lcall
out
mov
adc
xor
int3
ret
jecxz
mov
test
xor
sub
rdpmc
test
insb
pushf
lret
pop
jo
xchg
push
loop
shll
gs
cmp
sbb
shll
jo
pop
pop
mov
adc
push
jns
mov
jo
mov
mov
jbe
int
xchg
mov
sbb
push
jmp
or
push
fldcw
daa
jmp
lret
es
in
mov
in
cmp
in
scas
dec
sbb
js
xor
mov
sub
daa
scas
int
dec
mov
pop
xor
dec
mov
je
cmc
sahf
jmp
or
mov
decl
das
ja
add
shll
and
sub
push
pop
pop
xchg
cmpl
imul
pop
stos
fimuls
jo
or
pop
inc
scas
mov
inc
dec
mov
pop
std
and
pop
lea
sarl
jno
sbb
mov
and
pusha
add
cld
out
jmp
pop
fwait
mov
jp
sbb
mov
mov
dec
mov
and
insb
jno
xchg
jle
mov
arpl
pop
test
jl
and
movsb
push
sarl
dec
sub
lret
sahf
idivl
lret
stos
int3
xchg
push
sub
cwtl
sahf
test
adc
neg
lahf
mov
mov
pop
add
mov
outsl
imul
adc
repz
in
cld
mov
xor
pop
and
es
addb
add
cmp
lret
addb
and
idiv
jo
lcall
push
mov
in
orb
or
test
icebp
push
int3
insb
sub
in
xor
lahf
je
mov
jbe
mov
stc
cld
sub
popl
pushf
cs
xchg
pusha
scas
and
std
add
sbb
pushf
int3
mov
subl
cmp
repnz
pop
xor
outsb
shr
pop
push
dec
ja
or
lret
sub
data16
leave
and
int3
ret
pop
xor
mov
test
add
sbb
dec
xor
test
or
test
ljmp
jo
incl
ds
mov
cld
cli
mov
jmp
mov
mov
fisttpl
sub
or
sbb
imul
std
mov
ja
out
push
or
sbb
stos
daa
sar
mov
aaa
sti
cmp
cmp
data16
pushl
loope,pt
mov
shlb
cmc
and
add
sar
aam
or
arpl
es
int
and
jo
test
sub
std
xchg
jbe
loopne
gs
clc
and
sbb
sub
int
gs
cmc
rep
popa
inc
rorb
lea
adc
sahf
jmp
cmp
jecxz
mov
xor
mov
in
mov
pop
or
sbb
add
mov
ljmp
inc
and
lods
or
mov
rorb
int3
rorl
add
adc
xchg
mov
dec
xor
mov
jmp
push
mov
mov
stos
fimull
sub
cmp
lock
test
aas
movsb
fwait
dec
int3
sahf
and
jmp
bound
push
jbe
imul
push
xchg
int3
lock
enter
jmp
aas
in
std
mov
popl
out
jbe
movsl
xor
mov
xchg
shrd
adc
xchg
push
push
addr16
daa
or
imul
or
xor
addr16
mov
pop
dec
sahf
js,pn
pop
push
xor
out
cmp
push
aas
insb
cli
jle
sub
push
dec
sbb
mov
sub
incl
push
pop
repnz
fidivrs
int3
loopne
movb
or
movsb
adc
xchg
adc
cld
sbbb
adc
cmp
subb
mov
dec
lahf
and
insb
pop
nop
das
fistps
mov
popf
movsl
mov
ror
mov
pop
add
arpl
ja
dec
or
sbb
lods
cmpsl
es
inc
out
jo
xlat
data16
mov
jnp
pusha
lea
and
pop
lret
sub
nop
ja
pop
xchg
and
pop
cmp
sbb
xor
iret
scas
dec
add
dec
roll
adc
push
cltd
xor
push
jmp
mov
or
nop
add
inc
push
push
push
mov
int3
sarl
aaa
test
pop
cmp
sbb
outsl
orl
jo
mov
in
lods
dec
ret
cmp
add
mov
mov
cmc
stos
xor
bound
or
sbb
push
inc
outsb
sbb
in
int3
mov
pop
xor
dec
test
and
lods
push
in
lret
jb
pop
fcoms
mov
fs
outsb
rcrb
push
fistps
sub
stos
push
stos
data16
dec
xchg
pop
or
mov
lock
repz
push
inc
mov
jge
mov
cmp
imul
loop
mov
push
in
add
dec
in
mov
dec
repnz
iret
jle
insb
xchg
inc
dec
sub
aas
int3
jns
fnstsw
imul
insl
test
faddl
sbb
loope
and
andl
in
sub
rcl
mov
scas
sub
add
mov
cmp
pusha
jb
mov
lods
test
xchg
inc
aam
popa
xor
scas
pop
iret
stc
popa
adc
mov
mov
inc
adc
cmc
pop
cmpsl
fmul
fnstenv
aaa
lock
jp
or
inc
push
and
mov
add
sbb
gs
in
mov
stc
in
outsl
outsb
mov
xchg
aad
mov
ret
stc
pop
mov
dec
xor
fs
idivl
imul
jae
jg
mov
dec
stos
push
mov
fptan
mov
sub
ret
arpl
psubusw
xchg
and
cmpsb
sbbl
mov
repz
bound
leave
push
clc
cmp
add
cld
test
and
aad
push
int3
xchg
lock
int3
les
testb
push
mov
adc
rolb
movsb
mov
add
and
aas
lods
ret
sub
sahf
adc
jns
iret
xchg
inc
lcall
push
stos
inc
mov
jb
cmp
test
lahf
push
adc
pop
mov
xor
fcmove
mov
test
fimuls
xchg
test
test
out
mov
pop
jle
xor
jno
lock
xor
inc
cmp
int
add
aaa
push
sub
pop
lret
arpl
and
ret
xlat
insl
add
cmp
jae
and
ret
data16
in
test
aad
jnp
hlt
inc
pop
cmp
or
pop
pop
frstor
insl
pop
filds
movsl
sub
mov
jo
stos
jnp
dec
mov
enter
sahf
sbb
and
pop
push
mov
add
pop
fsub
dec
push
outsb
inc
push
icebp
or
add
lret
lods
xlat
nop
adc
pop
mov
jg
cs
aam
mov
nop
mov
popf
xor
jbe
inc
enter
mov
int3
push
out
stos
push
pop
mov
mov
lret
je
fistpll
pop
mov
jge
mov
movsl
push
call
call
cwtl
aas
dec
mov
lret
ss
sbb
sbb
push
pop
neg
popa
data16
fcmove
jg
stc
push
in
stos
inc
mov
sub
push
and
jl
std
rolb
or
sub
mov
aas
sub
add
rolb
and
fidivrl
sub
aad
pusha
rol
fs
mov
shr
lods
lret
cmp
jl
popa
xchg
pop
and
sbb
mov
aas
push
sahf
push
lods
adc
outsb
lcall
sub
fwait
test
lret
mov
test
mov
mov
add
mov
inc
or
jno
jmp
rcl
push
pop
mov
mov
xchg
push
pop
cmp
mov
mov
pop
cld
sbb
test
call
inc
scas
pop
popf
pop
ss
and
jmp
js
shlb
mov
xlat
dec
les
sbb
sbb
or
sbb
outsb
bound
outsb
dec
xor
mov
rcrb
fists
adc
sar
jp
cmp
pop
and
cmpsl
inc
sti
sahf
cli
insl
testl
insb
or
sbb
inc
call
call
sbb
ret
imul
xor
mov
orb
jae
xor
decb
les
pop
mov
enter
lds
push
int3
int3
idivb
push
or
cld
pop
sub
hlt
xchg
jo
or
xchg
cmp
inc
xchg
pop
sub
and
inc
lds
bound
pop
add
out
imul
repz
ja
and
outsb
push
jecxz
clc
loope
lret
jo
lds
mov
scas
imul
loope
mov
sub
test
sbb
pop
fcmovb
push
sahf
lret
rorl
enter
in
stos
cmc
mov
dec
sbb
add
sub
pop
out
pushf
lret
adcl
fcoms
fdivs
je
dec
sarb
fdiv
and
jg
xchg
push
jno
mov
int
pop
xchg
stos
aam
sub
mov
loope
inc
loopne
jb
int3
lret
dec
inc
sbb
movl
xchg
rcll
fcompl
jge
sbb
sub
cmpsb
add
lock
mov
mov
mov
mov
fldcw
sti
movsb
cmp
out
sbb
mov
xchg
pusha
lea
fnstsw
dec
push
push
je
es
icebp
movsb
lods
psrld
dec
push
lret
data16
cmp
addr16
out
and
jecxz
mov
rcrl
dec
insl
dec
ret
mov
mov
sbb
jmp
rcrb
adc
push
mov
data16
cwtl
and
dec
leave
sub
aad
push
sub
in
and
cmc
push
dec
jo
imul
in
jbe
int3
xchg
adc
mov
fisttpll
stc
lods
idivl
int
notl
clc
out
cwtl
stc
ds
pop
and
xchg
arpl
xor
cs
mov
mov
fdivs
or
imul
sub
call
mov
push
jno
push
mov
sub
movsb
pop
lea
adc
xlat
leave
push
hlt
xchg
es
pusha
insb
data16
dec
ja
ret
lods
pusha
test
mov
call
int3
mov
or
test
add
jnp
cmp
pop
xchg
lret
out
adc
pop
xor
int3
and
adc
cmp
push
cmp
loope
sub
dec
push
dec
and
outsl
pop
adc
call
pop
jmp
add
mov
and
mov
sbb
push
test
fs
push
adc
sahf
or
inc
sbbl
scas
stc
fyl2xp1
aaa
xor
jecxz
mov
jae
cmp
test
sbb
in
imul
dec
adc
sub
mov
lods
dec
loope
scas
and
mov
loop
nop
movsl
sbb
sarb
xchg
add
adc
in
mov
call
dec
mov
push
test
test
pop
sub
lods
mov
in
out
sub
push
mov
lret
pop
in
mov
sbb
sti
outsl
jl
insl
jne
jmp
pop
ljmp
pop
int3
dec
in
ds
push
adc
xchg
cmpb
fcoml
bound
xchg
mov
push
push
cmp
jno
pusha
mov
into
pop
rcll
fiadds
into
jmp
xchg
ljmp
mov
inc
add
mov
inc
cmpsb
sbb
nop
in
adc
cld
out
jl
movsb
adc
test
mov
stc
mov
inc
jg
pop
lret
gs
and
rorb
loope
lea
shll
and
out
push
push
pop
jno
mov
test
test
pop
lret
lret
pop
xchg
mov
cwtl
mov
testb
icebp
push
push
and
decl
insl
dec
bound
push
inc
adc
out
pushf
pushf
mov
mov
jl
push
jb
push
fwait
or
inc
inc
aaa
movsl
push
and
pop
jle
clc
sbb
mov
and
lods
add
lret
xor
hlt
mov
in
ret
inc
cmp
lret
mov
fadds
cltd
xor
in
jecxz
xchg
push
imul
jnp
pop
push
aas
mov
push
cli
mov
lret
mov
push
dec
mov
lret
test
sub
test
jecxz
rclb
push
test
jmp
je
cmc
cmpsb
push
outsb
repz
cltd
xchg
out
pop
int3
test
xchg
dec
adc
scas
out
movsl
xchg
rolb
adc
std
xchg
or
decb
lods
into
loop
sahf
aas
cmpsl
hlt
in
push
inc
ret
and
daa
mov
das
in
ja
push
fsub
cli
cld
leave
xor
pushf
adc
sub
mov
mov
or
sbb
cld
hlt
repz
mov
or
stos
push
sub
arpl
xor
adc
fstpl
dec
out
sbbl
or
xchg
push
mov
out
push
movsb
pop
leave
insl
xchg
dec
sbb
movsb
inc
mov
mov
insb
xlat
xchg
insb
adc
test
and
insb
je
addr16
inc
rcrb
sbb
push
push
xchg
rcl
nop
arpl
loopne
push
sub
dec
push
mov
xchg
sub
sub
lcall
add
lret
ret
and
jecxz
out
jp
jae
xor
loopne
xor
sbb
or
mov
cmp
xor
xchg
sub
ficoms
imul
xchg
mov
mov
add
test
mov
cli
jno
jl
cmp
dec
aas
sbb
or
push
lahf
xchg
loope
aaa
shl
subb
ret
pop
xorb
mov
xchg
je
adc
jecxz
mov
pop
cld
jbe
xor
leave
fldcw
mov
in
mov
ficoms
jns
lds
cmc
jb
xor
xchg
std
push
lds
fiaddl
sahf
fbld
int3
push
sub
xlat
pop
sarb
int3
add
lock
pusha
mov
je
iret
icebp
mull
add
mov
jns
cwtl
xchg
pop
and
daa
mov
int
imull
cmp
fwait
movsb
pop
ds
stos
xchg
jnp
mov
fistpll
movsl
lret
int3
out
dec
mov
adc
sbb
jnp
mov
cs
jo
movsb
out
xor
xor
test
into
push
add
icebp
push
ret
inc
cmp
test
lds
push
and
int3
mov
xor
jl
mov
addr16
gs
test
lret
roll
sbb
pop
mov
test
addr16
fisttps
adc
or
ret
xor
sub
mov
ret
popf
mov
pop
mov
xchg
iret
xor
out
lret
inc
std
pop
outsl
mov
lea
leave
in
jmp
daa
int3
mov
xor
xchg
js
mov
scas
bound
movsb
ror
jo
dec
cli
mov
xchg
lcall
enter
push
jecxz
pop
rorl
clc
or
lcall
xor
pop
test
pop
push
xlat
mov
mov
xor
nop
xchg
push
mov
mov
cs
pop
jg
loope
xor
sub
in
pop
jo
rcrb
out
mov
xchg
dec
hlt
dec
je
dec
std
pop
mov
leave
imul
cmpl
xor
nop
pop
popf
loop
mov
arpl
pop
les
testl
push
xchg
subb
add
xor
lret
push
jg
sbb
out
addb
loope
pop
daa
mov
xor
sub
loopne
clc
pop
sahf
dec
bnd
push
sub
sbb
mov
mov
mov
subl
push
cmc
cmp
lret
cmpsl
or
setae
out
andb
dec
cmpsl
lahf
xchg
jmp
dec
push
lcall
mov
test
sub
dec
inc
add
into
ljmp
mov
lret
mov
pop
fistps
push
push
push
loop
lret
sub
leave
pop
insb
mov
int
gs
orb
ret
daa
pop
decb
jmp
addr16
mov
int3
xchg
xchg
pusha
scas
gs
pop
dec
aam
cltd
pop
pop
andl
dec
cwtl
cld
int3
in
jae
insl
hlt
xorl
loopne
xchg
out
xchg
adc
cmpsl
hlt
add
addl
jl
out
jecxz
mov
mov
out
inc
mov
sub
xchg
add
in
pop
or
jmp
jbe
inc
call
sub
shrb
dec
mov
punpckhbw
add
imul
lds
movsl
sub
sub
pop
lret
add
pushf
outsl
test
cld
mov
xchg
icebp
add
add
negl
and
sub
and
popf
mov
mov
adc
nop
pop
lret
inc
pop
add
aaa
out
stos
sbb
push
fisubrs
and
lahf
xchg
or
test
in
int3
imul
ret
jo
imull
push
gs
pop
pop
xchg
jecxz
stos
lea
jmp
dec
stos
imul
pop
xchg
push
xchg
arpl
fwait
stos
aas
xchg
sub
lret
repz
and
int
fmuls
je
mov
adc
xchg
xor
mov
bound
pushf
dec
xchg
insb
cld
mov
dec
int3
in
pop
jo
sbb
mov
mov
lret
push
in
dec
cmp
imul
aam
dec
mov
pop
or
lods
pop
pop
mov
popa
stos
movsb
fcmove
pop
xor
cli
pop
jo
mov
push
sbb
test
mov
out
push
fbld
lret
or
ret
insb
dec
stos
dec
sub
cli
sbb
in
or
push
jmp
adc
arpl
aad
int3
in
aam
lret
stos
not
fdivrl
mov
int
psubd
ror
xchg
mov
and
mov
jl
hlt
push
adc
or
or
cmc
mov
mov
sub
sub
loope
je
mov
adc
bound
cli
mov
je
int3
pop
add
out
sub
call
rcrb
cvttps2pi
cmp
mov
sub
pop
out
cmp
cmp
out
dec
imul
jmp
fucomip
push
xchg
mov
pop
add
int3
sub
in
xor
mov
orb
je
cmp
push
mov
sahf
iret
lcall
mov
shrb
add
bound
mov
popa
mov
leave
sub
cwtl
stos
push
int3
dec
adc
xchg
hlt
dec
mov
pop
std
das
jns
stos
xchg
pop
lock
js
stos
das
fisubrl
jo
adc
out
mov
cmp
lock
inc
clc
mov
sub
daa
stos
dec
sbb
mov
rcl
push
or
mov
fcomps
push
push
pop
arpl
jp
sbb
aaa
push
mov
int3
repnz
mov
jg
mov
cmp
insl
pcmpgtd
jg
mov
adc
sub
pop
lock
clc
and
mov
xchg
fucomp
xchg
push
mov
jl
les
mulps
divl
add
dec
mov
int3
mov
out
sarl
xchg
mov
shrb
mov
xor
loop
xchg
inc
jl
enter
outsl
rorb
loopne
cld
dec
jbe
and
pop
test
aam
adc
movsl
or
jg
mov
jo
pop
movsl
cli
jne
scas
xor
push
pushf
push
sbb
mov
sar
xchg
out
add
xor
mov
inc
mov
lret
and
and
je
lret
fnsave
mov
mov
xchg
ljmp
inc
cs
cmp
fstl
mov
cld
jne
scas
scas
out
xchg
js
lcall
call
cs
stc
mov
cmp
scas
push
enter
les
insb
dec
enter
fidivrs
pop
mov
dec
jno
add
shr
and
pop
movb
add
adc
and
cwtl
push
mov
out
jbe
pop
jmp
insb
pop
adc
mov
inc
xor
dec
adc
mov
popa
xor
adc
mov
push
in
and
jecxz
mov
dec
test
loopne
jae
push
xlat
jp
mov
mov
dec
clc
stos
lcall
pop
int3
inc
push
insl
jb
cltd
jge
cmp
push
stc
popl
jo
imul
lret
das
jb
imul
mov
xor
sbb
pop
sub
cmc
dec
movsb
lods
sti
sub
mov
mov
repnz
arpl
lret
fisubrl
or
and
and
hlt
adc
insl
adc
sbb
sbb
mov
movsl
lret
jg
xchg
aaa
cmpsb
xor
sbb
dec
xor
xor
imul
mov
stos
outsb
adc
mov
push
mov
fistl
leave
sbb
mov
pusha
sub
mov
sub
mov
repnz
mov
mov
pop
push
fcomi
jb
outsb
mov
insl
xchg
dec
js
adc
xchg
xchg
pop
lock
mov
loop
shl
repz
scas
xchg
sbb
in
shlb
or
xchg
push
inc
int
mov
out
fnstcw
test
ret
push
push
mov
enter
mov
dec
ljmp
mulps
lock
and
and
inc
dec
ret
jb
jbe
movb
les
dec
in
fs
and
xor
xchg
rolb
enter
cmp
inc
aas
mov
fimuls
stc
stos
xor
cli
dec
out
aas
push
addr16
add
inc
lock
sub
xor
ror
sbb
add
mov
jno
push
or
push
test
mov
mov
mov
inc
or
pop
ret
push
add
clc
hlt
scas
mov
mov
mov
ja
ljmp
jmp
mov
cmc
pop
mov
dec
stos
test
sbb
bound
mov
mov
mov
cmp
or
push
sub
mov
push
jno
cltd
jmp
gs
pop
pop
fwait
xchg
xchg
stc
in
shrb
fidivs
lods
ret
mov
lret
pushf
dec
loope
mov
xchg
pop
pop
fld
pop
out
sbb
and
pushf
adc
xchg
pop
jmp
setnp
pusha
in
mov
ret
ljmp
es
inc
push
mov
insb
push
and
nop
add
inc
mov
jo
add
mov
inc
rolb
jmp
and
cld
pusha
and
mov
mov
dec
ljmp
add
xchg
xor
mov
cltd
sahf
out
je
jmp
test
cmp
mov
jmp
adc
sbb
cwtl
pusha
sbb
mov
sbb
push
ret
std
jp
fwait
cs
in
inc
scas
add
sub
in
test
int3
xchg
das
xor
pop
and
pop
adc
stos
daa
sub
clc
adc
or
nop
movsb
nop
imulb
shlb
inc
push
ljmp
dec
shlb
cwtl
inc
jecxz
mov
sub
add
sarb
sar
mov
shll
fisubs
add
pusha
stc
add
lock
loop
es
add
dec
pop
aaa
adc
stc
push
mov
shrb
std
push
adc
repz
inc
popa
cmp
sbb
shrb
out
push
xor
loopne
mov
push
mov
mov
stos
xchg
mov
xor
inc
lret
pop
gs
jge
sbb
xchg
aam
andb
jns
into
test
jb
pop
xchg
adc
lret
dec
hlt
mov
jge
in
bound
mov
outsb
jmp
ret
push
sti
stc
je
dec
or
lret
adc
int3
test
loop
add
adc
cmp
mov
aaa
pop
sbb
movsb
add
jmp
jno
adc
xor
jo
sbbb
push
adc
repz
sub
cmp
jge
insl
xor
push
sub
cmc
bound
mov
rol
push
jns
test
and
pop
mov
fstl
jb
lret
clc
pop
mov
push
enter
out
popf
sub
jbe
push
or
ss
adc
outsb
seto
mov
mov
out
adcl
cmp
sahf
enter
fdivl
loop
bound
push
cs
test
push
popf
jae
mov
lret
ss
cli
stos
pop
cs
dec
push
imul
sbb
shl
cmc
rolb
stos
push
pop
pop
jns
push
push
hlt
and
lea
jmp
movsb
sbb
push
fnstcw
sub
inc
and
xor
outsb
out
test
test
push
dec
pop
add
jb
mov
sub
movsl
xchg
shrl
push
pop
inc
call
test
fnstsw
dec
rclb
js
imul
decl
and
test
nop
ret
ss
negb
jl
repnz
sbb
movsl
hlt
and
addr16
lret
mov
mov
add
int3
xchg
test
mov
clc
dec
xor
sbbl
out
jp
or
fs
mov
dec
movsl
add
cmc
mov
jle
lods
cmc
add
cmpsl
leave
mov
xchg
enter
out
inc
idivl
sbb
push
pop
mov
xor
dec
cld
xchg
adc
sbb
std
in
xchg
cmc
pusha
mov
or
mov
call
cmp
xor
cmp
mov
rcrb
leave
dec
fidivrl
repnz
mov
mov
xlat
push
cld
mov
mov
fcoms
test
mov
pop
xchg
lds
dec
ret
pop
mov
stos
popf
dec
sbb
call
add
pop
sub
cli
orb
mov
dec
mov
or
sbb
arpl
mov
pop
mov
sub
xchg
xchg
fwait
in
arpl
mov
aam
nop
data16
dec
inc
mov
adc
loop
daa
addl
or
mov
fs
dec
gs
and
pop
jp
sub
es
mov
sbb
mov
clc
mov
daa
cwtl
addr16
test
imul
nop
xor
mov
cmpsb
es
push
pop
mov
add
push
mov
lock
scas
shrb
es
add
movsb
ret
test
loopne
dec
cwtl
loope
xchg
dec
mov
mov
insb
in
daa
mov
rorb
and
mov
stc
jb
pop
fldcw
out
push
dec
sahf
push
push
and
adcb
test
stc
imul
sahf
int3
mov
inc
or
push
in
lret
popa
dec
imul
test
fsubr
pusha
int3
mov
jne
outsl
mov
xchg
sub
mov
or
out
insb
mov
pop
mov
mov
ret
fisubrl
sarb
jge
dec
test
xor
mov
cmpb
xor
mov
movsb
sahf
jmp
inc
xor
jp
fistps
sti
mov
outsl
add
pop
lret
imul
lcall
scas
in
ret
mov
push
mov
sub
xchg
pop
sub
into
je
and
xchg
inc
insb
xchg
pop
into
xchg
fwait
sub
add
bound
lods
mov
gs
ja
ja
roll
sub
mov
add
aam
mov
bnd
enter
mov
mov
push
int3
sub
mov
dec
xchg
cmc
imul
add
cmpsl
push
xchg
jo
in
and
and
mov
sbb
lret
push
push
pop
dec
lock
jo
pop
or
adc
js
div
adc
sbb
outsb
mov
js
lahf
stc
push
stc
nop
stc
clc
push
jbe
xchg
mov
jl
aad
xlat
sub
addps
divps
jo
movsb
cs
call
ljmp
cld
enter
stc
push
dec
cmpsl
pop
hlt
je
cs
dec
stos
test
jg
aad
lods
cltd
lret
and
andb
inc
lods
mov
jmp
jb
cld
stos
inc
fsubl
dec
fs
sbb
mov
test
mov
mov
xor
test
testb
cli
repz
fidivs
xchg
outsb
roll
mov
sub
xor
adcl
mov
mov
push
fisubrs
loopne
repz
imul
lock
mov
data16
lea
push
imul
sub
mov
mov
fistl
outsb
sti
mov
arpl
dec
mov
adc
and
outsl
mov
into
xchg
xchg
cmc
out
sub
push
jg
push
test
je
test
dec
hlt
in
dec
and
bound
cmpsl
pusha
sbb
and
push
call
sbb
lret
test
pop
popf
fsubr
dec
cmp
js
shrl
add
fs
cmp
mov
dec
in
cltd
popa
jo
pop
dec
rcrb
into
cmp
xor
mov
and
mov
mulb
leave
pop
mov
and
mov
insb
xchg
int
cmp
mov
jge
ja
mov
sub
sbb
popf
add
adc
lock
jmp
or
xor
dec
test
cmc
dec
dec
stos
sbb
std
or
fndisi(8087
pop
xlat
xchg
lahf
icebp
int3
jnp
push
mov
push
mov
cs
or
aam
xchg
cmpsb
sbbb
imul
ss
cmp
or
jl
xchg
shrb
xchg
xchg
pop
sub
pusha
push
dec
sub
mov
bound
test
rcrl
imul
stos
sub
mov
xor
xchg
pop
icebp
xchg
sbb
lret
andnps
fmuls
pop
and
mov
leave
push
mov
aas
pop
jo
mov
cli
add
dec
dec
test
jg
xchg
notl
pop
int3
mov
jns
sbbb
pop
rcll
dec
stos
imul
or
cld
les
sbb
fs
sbbb
mov
incb
push
xlat
or
out
test
xor
and
movsb
outsb
adc
push
mov
xor
inc
sub
stc
lods
sbbb
std
gs
add
or
pop
shl
adc
dec
pop
mov
leave
cmp
jl
out
push
popw
xchg
xor
cli
shlb
mov
pop
xor
lods
xor
bswap
mov
lret
mov
mov
and
adc
enter
mov
addr16
arpl
dec
test
insb
mov
daa
mov
add
arpl
sarb
mov
jb
stos
js
shl
mov
test
loop
leave
pusha
lret
mov
cmp
push
cs
inc
inc
mov
inc
lret
int3
mov
icebp
ds
mov
mov
call
push
icebp
mov
rcll
enter
add
cmp
imul
mov
sahf
adc
dec
mov
aam
sbb
hlt
cld
inc
xchg
cld
mov
hlt
jg
dec
rorl
sbb
mov
xchg
mov
popa
arpl
jae
mov
sub
fisttpll
rcr
mov
mov
roll
pop
dec
je
jle
cmp
outsb
js
scas
loop
sbb
insl
or
xor
cmp
mov
fs
cmc
cld
stc
sbb
dec
mov
push
insl
xchg
adc
mov
loope
xchg
gs
cmpsb
scas
jge
rcl
arpl
add
push
shl
or
cmp
sbb
cmp
xor
jb
xchg
bound
out
pop
scas
sub
pop
jecxz
lahf
jg
je
loopne
xor
jbe
ja
popf
out
jge
fucomi
lret
adc
pushf
dec
aas
mov
das
lahf
mov
arpl
sbb
clc
push
test
int3
movsb
sbb
call
inc
ret
lret
das
mov
mov
pop
jle
and
fidivs
xor
push
cld
cwtl
stos
mov
jno
loop
pop
sbb
pusha
xlat
movsl
mov
adc
add
or
pop
pusha
adc
in
bound
lock
jp
or
lock
add
stos
lret
xor
mov
xchg
dec
ret
into
pop
dec
loop
sbb
stc
mov
test
add
sbb
fnstenv
xchg
xor
sub
outsl
je
push
stos
testl
xchg
sbb
mov
outsw
cltd
lahf
or
or
nop
jl
lock
testl
inc
gs
in
pop
sbb
insb
push
sbb
dec
mov
and
mov
inc
ja
mov
inc
lret
in
bound
push
test
add
jae
mov
pop
pushf
xor
and
js
and
jmp
push
mov
jbe
dec
ds
movl
mov
notl
rolb
test
mov
xor
push
iret
js
jns
ljmp
nop
int3
test
adc
lea
and
nop
mov
xor
jo
adc
test
out
mov
in
in
jbe
gs
dec
xor
cmp
cmp
adcb
push
push
and
shlb
mov
ja
push
or
xor
sarb
xor
xchg
push
or
icebp
jo
xchg
xor
adc
mov
enter
leave
nop
stc
in
cltd
adc
lods
sbb
fs
cmc
push
sub
mov
mov
push
jne
xchg
jp
fsubr
mov
in
idivb
test
jno
in
cmc
inc
cmpb
test
cmpb
repnz
mov
xor
pop
enter
cmp
xor
scas
aad
push
jmp
aam
and
xchg
mov
push
xor
into
xor
in
dec
fidivl
fcmovb
rcrb
add
push
pop
out
repz
mov
aaa
and
add
push
cmp
mov
int3
mov
sub
dec
shlb
or
loope
movsb
push
xor
mul
outsb
push
mov
mov
mov
push
or
loope
fcmovne
into
shll
nop
loopne
xor
push
xchg
jb
sbb
ja
shr
mov
cld
mov
cmp
or
xchg
xor
btc
jmp
jp
aas
or
ss
jo
ss
cmpsb
dec
inc
pop
mov
imul
mov
rcrl
sub
ds
dec
imul
sbb
xor
push
gs
aaa
stos
sub
loope
clc
in
fsubs
jmp
sub
pushf
and
negl
nop
pop
cmp
or
ficoms
test
into
int3
mov
cmpl
mov
inc
cld
icebp
es
xor
jns
test
mov
ljmp
pop
sbb
test
xor
fstpl
push
scas
aam
divb
cmp
daa
xchg
xor
loop
inc
sahf
cwtl
jmp
int3
vpshufhw
shlb
leave
add
pop
idivl
ret
bound
ror
movsl
js
movsl
xchg
mov
test
sbb
mov
mov
mov
lock
mov
pushf
dec
sbb
mov
mov
aas
inc
mov
sbbb
add
or
scas
lret
pop
arpl
xchg
fs
xchg
test
int3
mov
inc
daa
sub
in
test
mov
lret
shrl
test
and
test
lcall
mov
data16
lcall
mov
movsl
lret
sbb
inc
jmp
frstor
xor
pop
jecxz
push
jp
mov
dec
stos
loopne
pop
pop
sbb
xor
cli
dec
pop
jle
shufps
scas
ljmp
push
jns
xchg
gs
das
push
shrb
fwait
hlt
in
popa
mov
push
arpl
or
mov
ret
lret
daa
pop
mov
sub
push
inc
outsb
stos
xchg
mov
leave
jmp
mov
mov
sub
out
leave
xor
imul
fistps
jne
scas
jecxz
ds
push
js
cltd
mov
pop
jo
rclb
adc
das
sub
pop
pusha
pop
pop
popa
and
add
lret
cli
dec
out
cmp
cwtl
mov
jle
sub
inc
gs
loopne
lods
pop
call
adcl
mov
iret
pop
lret
mov
xor
pop
sub
in
scas
js
xchg
mov
lret
gs
in
sbb
repnz
inc
mov
popa
adc
jl
pop
daa
push
ret
pop
loopne
bound
jb
push
dec
in
pop
shlb
pop
fldenv
out
rcl
ss
jg
sbb
mov
jecxz
or
mov
cmp
push
push
mov
push
pop
xchg
sbb
cli
push
push
mov
lock
sbb
daa
mov
iret
movb
inc
lods
cs
mov
mov
int3
and
mov
sub
mov
sub
sub
notl
pop
jne
mov
jo
push
xor
add
test
addr16
xor
sub
daa
mov
sbb
in
lret
jno
andl
dec
aad
mov
movsl
lods
xor
je
lcall
pop
push
in
imul
and
scas
add
gs
int3
fwait
les
mov
in
lret
push
mov
pop
aaa
pop
and
mov
arpl
mov
les
out
popf
mov
jmp
pop
pop
orl
push
jl
cltd
test
iret
hlt
adc
or
leave
jns
test
movsb
cs
adc
pop
cwtl
mov
hlt
mov
xchg
subl
jp
jns
cmpsb
test
xor
repnz
jns
push
and
or
dec
rcr
int3
pop
jnp
dec
jp
jns
js
cmpsb
pop
jns
data16
and
and
ja
shl
int3
jae
jbe
cmpsb
and
negl
in
pusha
movsb
push
test
int3
test
sbbb
adcl
repz
jg
shlb
inc
in
lods
jge
lea
insl
mov
jmp
in
jnp
adc
cmpsl
js
clc
insl
rclb
jbe
jne
gs
cmp
call
lahf
test
add
aas
sbbl
mov
lea
enter
mov
in
xchg
inc
ds
insb
jp
xor
js
ja
jmp
in
jbe
pop
inc
shr
cmp
shl
addb
cwtl
ja
mov
xchg
andl
and
jg
cmpsl
jle
pop
aaa
lods
jno
dec
xchg
mov
loop
leave
fsub
jnp
outsb
jp
sub
sbb
dec
cwtl
xchg
sub
add
mov
cmpsb
test
sbb
xor
and
mov
dec
jmp
jecxz
fcmovnb
sarl
popa
fsubrl
and
adc
jnp
rcrb
cltd
ja
movsb
and
dec
jg
push
out
jle
jl
cwtl
pop
jp
sub
sub
in
in
std
ja
xchg
jbe
and
or
scas
adcb
subl
lea
push
dec
in
mov
inc
das
inc
or
adc
jne
jnp
js
pop
outsl
xchg
push
push
adc
cmc
lret
jne
xchg
addb
sub
int
rorb
sbb
cmpsb
ja
sub
cmpsb
mov
xor
adc
std
sarl
or
or
push
jns
shlb
ja
and
inc
into
cwtl
cmp
add
lock
inc
xor
cmpsb
xorb
out
adc
add
adcb
jg
jle
adc
icebp
pop
jl
and
jnp
jnp
push
pop
les
repz
mov
xchg
fs
in
mov
jnp
jp
cmpsb
dec
xor
xor
jg
jle
rolb
push
jnp
jno
jns
and
js
ror
int3
xchg
stos
ja
jne
in
push
sbb
dec
jnp
adc
andb
adc
add
xorl
pop
ja
jo
jbe
jl
inc
outsl
mov
out
imul
sub
push
movsb
jns
lea
jmp
in
ja
jbe
outsb
jne
or
call
jb
mov
iret
rcll
add
sbbb
add
xlat
jge
jl
and
int3
je
jp
cmpsb
fwait
jns
pusha
in
mov
ljmp
sbb
sbb
mov
andl
sbb
leave
in
addl
sub
stos
jle
jge
mov
push
and
aad
jb
sarb
inc
cwtl
lods
js
adc
movsb
jbe
lea
mov
aam
mov
push
mov
test
adc
ljmp
int3
push
mov
ret
jle
jge
jnp
adc
data16
pop
jp
and
adc
add
jns
cmpsb
js
jbe
data16
js
rclb
loope
out
and
jb
shl
add
loopne
jle
xchg
inc
xor
cwtl
pop
jge
pop
rcrb
jnp
mov
jnp
jp
sbb
js
ja
pop
mov
sub
fsubr
data16
mov
pop
cmpl
std
repz
fcmovnu
aam
jg
sbb
or
add
insl
lret
jnp
in
inc
jns
cmpsb
js
ja
jno
jne
and
adc
xor
sbb
push
jnp
lds
stos
adcb
call
jle
and
shlb
out
adc
movsb
ja
pop
cmp
aas
jbe
lea
pop
jmp
mov
and
push
adc
xorb
sbb
mov
bound
sti
jp
aas
jnp
imulb
jne
xor
sub
loop
mov
jns
js
ja
shrb
and
jnp
popl
and
aas
sub
test
and
gs
stos
mov
es
call
mov
stos
pop
jne
cmp
jl
xor
insb
cwtl
test
je
dec
test
imul
inc
cli
sbb
notl
test
cltd
jp
js
ja
iret
repnz
cmp
cmp
xchg
cmpsl
adcb
out
and
popf
mov
inc
jg
jle
and
adc
jge
jnp
aam
mov
rclb
mov
fsubrl
or
jmp
cli
xchg
insb
jae
test
in
mov
ds
cwtl
popf
sbb
sub
fsts
cmpb
and
scas
mov
scas
jl
pop
sti
lods
mov
outsl
mov
jns
js
ja
divl
jne
and
test
mov
nop
andb
pushf
jnp
xor
or
out
jge
jl
ror
int3
nop
jnp
pop
jp
lods
aaa
jp
js
jbe
xchg
les
cmp
sbbl
inc
add
mov
scas
xchg
insl
mov
jnp
jp
and
jns
shl
int3
lret
or
cmp
aaa
ja
sbb
stos
jbe
mov
test
sarb
shlb
xor
subb
push
push
cwtl
xor
inc
cwtl
pop
jge
pop
mov
mov
push
jo
add
mov
jp
pop
sub
mov
ja
push
inc
mov
cmp
cmp
pop
imul
out
scas
cmpl
es
stos
es
in
es
cmpb
mov
shl
cld
out
jge
mov
fwait
pop
pop
mov
je
push
lock
and
jmp
nop
or
ret
mov
cmpsb
addr16
data16
cmpsb
or
loope
push
xorl
and
pusha
jmp
cmp
inc
push
add
scas
jne
and
xor
jo
xchg
test
dec
in
addl
or
pop
or
jle
shlb
fidivrl
mov
shl
cmpsb
jns
js
push
jp
xchg
jbe
push
xor
test
sbb
das
sbb
in
mov
lcall
pop
jp
cmpsb
insl
jp
or
ret
jns
and
adc
fmuls
shl
add
mov
fs
jnp
add
adc
push
jb
or
xchg
inc
mov
and
mov
in
jle
jge
and
jl
add
cmpsb
jnp
jp
enterw
js
cmp
sub
stc
movsl
sbb
ja
or
out
sbb
and
and
jnp
xchg
sub
dec
pop
notb
jns
sub
inc
iret
pop
outsb
jbe
push
jp
or
repz
push
cli
push
sub
lret
aaa
sti
jo
xchg
sub
mov
jl
fdivrl
int3
mov
jp
and
outsb
xor
add
ja
pop
ficoml
lods
inc
nop
and
jb
adc
sub
fisubl
or
xchg
xchg
jl
jmp
loop
lods
add
adc
pushf
addb
push
push
test
jmp
hlt
jg
jle
sbb
nop
push
cmpb
sti
in
sbb
loopne
mov
xor
and
dec
mov
jnp
mov
adcl
cmp
pop
test
push
jg
push
nop
add
gs
add
testb
sub
jl
adc
das
mov
jae
js
in
sahf
ja
lock
stos
jne
pop
inc
mov
popf
ret
adcb
cwtl
movsl
xor
adcl
xorb
dec
jecxz
aam
jge
cmc
inc
mov
jno
cmpl
fsts
jns
push
sub
int3
movsl
xchg
ja
pop
sbb
test
jle
dec
gs
pop
sbbb
out
cmpl
jnp
mov
sbb
nop
push
mov
fwait
pop
mov
data16
mov
mov
xor
push
in
fs
inc
xchg
es
sbb
mov
cli
bound
pop
clc
mov
cmpsb
sub
lahf
subb
inc
cmpb
mov
data16
jns
and
shlb
je
pusha
push
mov
sbb
in
fcompl
das
fcmovu
and
and
adc
sbb
jnp
shlb
jp
cmpsb
cmpsb
jns
data16
sub
or
lods
jnp
in
leave
cmpsb
data16
data16
push
jne
into
test
nop
push
hlt
cwtl
cmpb
sub
nop
fildl
xchg
imul
xchg
shlb
andb
add
ja
shlb
mov
inc
add
cmpsl
mov
das
fs
cwtl
jg
rol
add
pushf
jnp
hlt
insl
dec
lods
js
lea
xchg
xor
jne
jb
inc
mov
jno
test
and
push
adcb
and
inc
pop
inc
adc
sahf
push
fdivrl
rclb
aad
movsb
cmpsb
jge
jnp
je
jp
jns
rorb
lret
push
aam
and
lods
add
ljmp
jnp
jp
cmpsb
stos
jge
jno
jl
and
jnp
sbb
sub
cld
insl
push
lcall
fninit
aam
ja
push
cwtl
jg
add
cli
mov
adc
and
xchg
mov
jp
jns
cmpsb
lods
andb
sub
test
insl
jg
lea
rorb
aas
mov
mov
jecxz
cwtl
jnp
pop
jp
cmpsb
insl
orl
xchg
xorb
montmul
cmpsb
ret
xchg
mov
inc
jge
les
addr16
shlb
jbe
push
mov
mov
lock
and
sub
sbb
in
imul
jle,pn
sbb
sar
int3
sub
jl
mov
and
ljmp
xor
lcall
pop
imul
add
sub
sub
mov
and
cs
xchg
addl
addb
xchg
pop
jle
jge
fsubl
push
out
pop
data16
xor
inc
xchg
jnp
xor
stos
dec
ja
sub
jb
push
mov
jl
and
cmpl
clc
sbb
call
sub
aad
jno
sub
clc
jecxz
fsubrl
jle
inc
mov
aad
test
mov
repz
xor
fwait
popf
fs
scas
mov
lret
lret
loopne
push
add
pushaw
mov
add
push
and
jne
ljmp
xor
ror
lret
inc
popf
add
and
jno
dec
sbbb
movl
jge
cmpsb
jl
jnp
jno
jp
and
cmp
pusha
ds
ja
jp
cmpsb
xorl
adc
popl
mov
leave
insl
mov
jno
shr
addb
push
sbb
int3
and
and
jg
jmp
and
adc
add
jge
jl
xor
or
jnp
jp
test
jp
fsubrs
push
dec
jne
jmp
mov
addr16
mov
jnp
adc
jnp
xor
xor
jle
jge
or
dec
bound
aam
jp
rolb
and
out
sbb
sti
inc
mov
xchg
jbe
pop
jp
push
sub
sarl
sub
mov
orb
or
imul
adc
dec
jge
jl
out
jnp
jp
lea
mov
js
inc
shrl
ficompl
sbb
adc
shr
test
sbb
cmpsl
aas
sbbl
shll
or
mov
jge
jl
jnp
add
int3
mov
and
js
in
xchg
or
jbe
pop
push
xchg
pop
and
pushf
mov
in
sub
lret
xor
fwait
mov
scas
jg
dec
sub
in
movb
std
jp
fs
pop
loopne
call
push
and
lock
ds
cmpsb
jnp
sub
cmp
cmp
cmpsb
xorb
mov
loopne
add
or
test
and
hlt
mov
adcl
or
jns
shrd
mov
jl
addr16
push
cmpsb
xor
outsb
mov
inc
fadds
cmp
pop
xor
xor
test
and
subl
cmpsb
jnp
test
test
rcr
push
add
repz
cwtl
mov
mov
ja
jbe
nop
jbe
ror
sbb
push
test
mov
push
andl
orb
fsubs
int3
cmp
pop
jp
jns
cmpsb
xor
data16
sub
lock
xlat
push
xorl
mov
or
stos
cmpsl
ja
push
sahf
repz
mov
cli
addr16
lret
orl
push
pop
push
jno
into
int3
scas
test
sub
xchg
adc
inc
dec
nop
add
in
adc
adcl
mov
into
hlt
clc
orb
inc
les
jle
mov
sbb
or
popl
lock
jmp
jecxz
dec
push
test
data16
icebp
sub
and
shlb
mov
sbbl
jns
sbbl
or
bound
pop
jbe
jne
out
mov
aaa
sbb
xchg
js
mov
lret
stos
data16
test
ds
out
cmp
das
mov
lods
push
ret
jp
xchg
jns
inc
sti
xchg
stos
dec
cs
mov
les
rclb
popf
pop
xorb
addl
inc
hlt
inc
sub
push
xor
sbb
sarb
jge
stos
and
clc
insb
iret
les
sbbl
jns
daa
jecxz
fcmovnb
aam
jg
cs
mov
mov
and
jge
and
scas
add
loope
ds
jns
ja
rolb
int3
push
lea
xor
xchg
insb
jnp
mov
sub
dec
insb
aaa
idivb
jp
lea
fsubp
jbe
push
repnz
jmp
insl
sti
shrb
sub
jb
test
mov
and
stos
mov
adc
dec
jg
sbb
cmp
jl
in
or
icebp
inc
int3
mov
mov
lock
iret
jno
sub
or
in
add
and
lods
test
andl
jmp
mov
lcall
jo
jp
jnp
pop
xor
cmc
shll
mov
jnp
mov
mov
pushl
imul
cmp
xchg
test
mov
mov
xchg
fnsave
addb
mov
mov
push
iret
enter
cmp
jns
mov
jnp
jp
les
js
js
cmp
jne
jmp
adc
out
pop
imul
dec
push
xchg
std
add
xor
inc
sub
addr16
xchg
test
and
mov
dec
insl
rorb
and
in
adc
jp
jnp
and
sbb
lahf
jbe
xor
rorb
test
mov
inc
pop
lods
cmpb
je
testl
jp
dec
jno
xchg
mov
test
hlt
cmpl
ficompl
mov
dec
int3
mov
cmp
lods
xor
xor
or
xor
push
sbbb
jbe
stos
je
out
adc
xlat
popf
fdivs
sbb
and
cmp
inc
pop
push
add
out
ja
shll
pusha
sub
xor
jb
sub
cltd
subl
sbb
pop
xchg
mov
stc
push
jle
sub
jnp
push
cmpsb
inc
jp
data16
test
mov
sub
repnz
inc
fs
inc
xor
es
loopne
push
popa
test
mov
bnd
pop
mov
xchg
dec
xor
jp
cmpsb
jae
pop
cmp
push
rep
in
sub
inc
cld
lock
add
ret
xchg
and
xchg
add
mul
shl
jno
sbb
mov
dec
cmpsb
sahf
jns
jno
jbe
and
jne
jmp
inc
mov
test
adc
sbb
hlt
in
jge
addl
pop
imul
mov
xor
add
fwait
sbbl
loop
add
push
push
lret
das
cltd
jl
loope
pop
and
mov
jbe
shll
aam
dec
pop
mov
mov
cli
jbe
and
imul
orb
dec
imul
sbbb
data16
pushw
and
and
pop
inc
inc
mov
push
fnop
or
jne
jp
pop
lock
fstl
shll
mov
inc
pop
inc
add
andl
fistpll
ret
incl
push
nop
ljmp
mov
out
lret
xchg
push
mov
mov
lea
lods
pop
test
lea
jo
clc
cmp
mov
ljmp
push
push
cmpsb
and
xor
and
pop
fsubrl
mov
mov
mov
push
cmpsb
jp
jns
shlb
xor
mov
sbb
test
pop
fdivl
inc
pop
inc
jmp
loop
xor
inc
jg
sarb
mov
jnp
pop
outsl
mov
jp
aam
imul
xchg
lret
mov
sub
gs
jmp
or
push
sub
sbb
jns
cmp
cli
cmp
jg
arpl
sbb
gs
cmpsb
in
pop
mov
les
in
subl
aaa
mov
add
xchg
lea
mov
cmp
push
mov
icebp
addl
icebp
jb
adc
pop
les
mov
xchg
ja
and
shl
int3
insl
cli
push
insb
in
sub
sub
jp
push
pop
aam
sahf
addb
movsl
sbb
mov
sub
xchg
jge
adc
stc
ret
mov
jns
js
clc
pop
jnp
jp
test
adc
sub
and
outsb
add
or
mov
jge
xchg
jnp
and
adc
jp
int3
xchg
lea
rep
fistl
inc
xor
mov
sub
mov
cmp
and
xor
shlb
xor
adc
jo
dec
test
xor
in
fwait
jl
mov
js
pop
or
pop
push
xor
clc
mov
repnz
cmpsb
iret
lods
mov
mov
mov
int3
xchg
mov
push
jns
push
push
data16
adc
arpl
adc
or
scas
test
imul
jmp
jns
push
fisubl
loop
jle
cmp
jle
jmp
xchg
xor
cmpsb
ja
jbe
mov
xor
adc
xor
cmp
adc
fistpl
adc
enter
daa
or
mov
sarl
mov
jp
push
jbe
jne
sub
add
sbb
mov
subb
test
cwtl
pusha
jp
pop
add
and
push
cmp
sub
subl
cld
fcoms
xchg
jmp
xchg
jl
fs
jae
jb
and
add
nop
test
adc
outsb
pop
xor
out
or
xor
xchg
popl
push
jg
ja
shlb
jge
jl
adc
xlat
jns
js
jmp
mov
pop
mov
loop
shrb
and
adc
xorl
into
cs
mov
and
inc
dec
cwtl
push
jl
or
pushf
leave
lods
jp
jnp
je
pop
mov
lret
fsubl
or
mov
add
les
push
ja
pop
mov
loopne
mov
sbbb
adc
jnp
fldcw
call
sbb
nop
stos
push
xor
pop
cmp
imul
loopne
add
scas
mov
cmpsl
subb
push
loop,pt
mov
push
mov
rolb
push
enter
adc
jle
and
and
ja
jbe
jbe
sbb
movsb
popa
mov
lods
hlt
arpl
or
push
dec
aam
pop
cmpb
int3
insb
mov
cwtl
je
dec
jge
push
xor
mov
mov
push
xor
ljmp
and
and
mov
xchg
subl
pushf
bt
mov
clc
stc
push
sbb
or
bsr
stc
push
lea
sbb
movzbw
push
shr
btr
bsf
pushf
mov
sbb
bsr
shl
mov
xor
mov
call
pushf
jmp
push
jge
inc
iret
pop
xchg
cmp
mov
loope
shll
nop
hlt
fwait
sti
pop
in
es
sti
sbb
push
popf
dec
lods
push
lcall
fisttpl
out
enter
cmp
ja
fwait
roll
es
mul
test
jne
push
push
mov
into
mov
mov
fisubrs
dec
xor
or
aam
mov
push
jle
push
and
push
call
icebp
jmp
lcall
sub
adc
fwait
and
data16
inc
stos
sub
push
jecxz
loop
std
pushf
mov
fucomi
pop
out
add
jno
dec
push
pop
pushf
dec
bound
dec
push
loopne
sarb
ret
mov
mov
outsb
lock
int3
loop
dec
push
hlt
pop
in
inc
or
cmp
jo
inc
mov
sub
bnd
and
fwait
mov
and
mov
pushf
adc
pop
push
jle
inc
pop
jo
in
fwait
or
sarb
add
mov
int3
cmp
cmpsl
xor
xchg
stc
jle
mov
push
das
ds
pop
jno
xchg
icebp
imul
mov
fs
test
jl
xlat
pop
cwtl
or
mov
bound
ret
test
adc
mov
faddp
imul
xchg
test
andb
xor
std
ljmp
add
mov
or
sbb
cmpsb
or
xchg
cmpsl
clc
push
call
jle
inc
cmc
jmp
jno
imul
inc
xor
inc
aaa
movsb
sub
mov
lods
sub
repnz
sahf
movsl
hlt
xchg
pop
sarl
nop
push
xlat
jle
jo
in
dec
cmp
adc
daa
push
sub
lahf
xor
shll
repnz
add
outsl
inc
hlt
or
ficompl
xchg
aaa
movsb
test
jnp
push
adc
dec
hlt
push
rorl
sub
xor
jle
and
ret
adc
add
sub
hlt
test
outsl
fcoml
aas
shlb
shrb
rcll
and
xor
mov
out
jb
lds
jecxz
gs
pop
in
inc
aam
movsl
mov
add
inc
mov
mov
lea
or
jae
dec
rol
arpl
imul
ja
mov
sub
push
sbb
mov
into
push
scas
pop
xchg
push
iret
pop
mov
scas
jnp
iret
loop
push
call
int3
setle
push
or
mov
hlt
stc
imul
pop
inc
pusha
xor
out
adc
mov
cmp
int
mov
out
push
lret
jb
sbbb
popf
ljmp
or
unpckhps
mov
jbe
push
pop
fs
push
sub
ss
fdivrl
sarb
mov
popa
aad
add
inc
clc
outsb
test
inc
test
add
and
xchg
cmpsl
sub
mov
ss
add
or
fisubs
push
stos
call
cmp
fiaddl
and
inc
ret
or
icebp
imul
xchg
cmp
std
xor
es
lret
fwait
dec
mov
fisubrs
aaa
call
or
jl
jmp
jno
ja
add
test
push
aad
inc
jle
inc
jecxz
xchg
sti
gs
cs
faddl
enter
mov
js
push
movsb
mov
mov
xor
ret
fnstcw
xchg
sbb
jae
mov
insl
aam
data16
jp
loope
orb
adc
lods
cmp
movsl
xchg
rorb
in
rcl
je
mov
clc
jge
dec
rcrb
inc
lahf
mull
jmp
jo
push
mov
test
pop
cmpsl
sub
dec
sti
dec
mov
sbb
cmp
cmp
insb
addr16
sbb
aaa
mov
mov
fildl
or
jbe
push
call
repz
jecxz
push
pushl
lea
jae
dec
pusha
pushf
mov
not
mov
inc
dec
inc
setle
not
push
mov
mov
mov
jmp
push
call
or
inc
dec
push
call
out
add
xor
add
decl
inc
and
pusha
lea
jns
pushf
lea
call
jmp
push
call
mov
jnp
or
or
add
lea
in
or
push
dec
add
rcll
rep
or
test
add
lahf
mov
gs
cmp
add
push
call
das
jecxz
les
clc
sbb
out
push
loop
call
inc
mov
xchg
jmp
out
add
mov
push
repnz
aas
out
dec
mov
imul
cmc
jmp
inc
fisttpll
push
xchg
jno
test
xchg
push
pop
roll
add
mov
xchg
push
hlt
sbb
dec
stos
out
add
jle
inc
xchg
mov
fbld
push
mov
xchg
xchg
dec
ljmp
cmpsl
pop
mov
mov
jle
lea
mov
call
mov
pop
mov
mov
test
outsl
cld
push
aas
inc
lods
mov
cmp
push
fwait
or
outsb
pop
fdivs
out
stos
sbb
fimuls
insb
icebp
sub
adc
iret
sub
out
imul
pop
int
mov
lret
sub
mov
rep
lahf
sbb
or
ja
or
dec
dec
ljmp
mov
adcb
push
inc
sbb
and
stc
xchg
inc
pop
mov
push
jg
sub
dec
push
stos
add
lcall
testl
test
out
les
push
fisttpl
jbe
push
sarb
addr16
fs
push
ds
mov
xor
cltd
mull
ss
mov
xchg
gs
xchg
addl
cs
lahf
xchg
pushl
addr16
push
jne
fiadds
test
ds
xor
lock
movsl
mov
andl
fwait
adc
mov
xrelease
mov
pop
mov
cmp
fs
faddl
or
in
inc
mov
and
sbbb
add
arpl
notl
add
movsb
inc
mov
lock
in
push
cmp
adc
pop
ljmp
cmp
or
mov
fsubs
mov
mov
push
rcr
xchg
sbb
mov
icebp
adc
adc
adc
xor
add
mov
sub
fists
xor
mov
test
pop
xchg
jae
push
lret
xor
out
jle
jno
aad
fs
jae
clc
cmp
je
push
pushf
lea
jae
pusha
cmc
cmp
cmp
call
push
call
leave
push
adc
or
mov
call
push
call
xchg
ficomps
adc
mov
dec
add
bound
and
push
jo
into
mov
dec
xlat
inc
jo
dec
mov
ljmp
maskmovq
idivl
lods
fcmovnbe
shll
icebp
inc
adc
fsubrl
leave
mov
mov
das
es
mov
out
push
int3
dec
ret
push
aad
call
lahf
xor
nop
adc
out
leave
out
cmp
lret
rcll
jo
sub
sti
addr16
add
out
lods
push
and
mov
sub
jmp
cli
stos
shll
jmp
adc
ret
sbb
js
push
lods
sbb
jle
xchg
movsl
mov
or
lea
ja
jmp
push
rol
jmp
movb
stos
push
jmp
mov
add
add
add
add
subl
add
subl
add
jl
add
subl
add
push
cmp
inc
subl
add
subl
add
outsb
sub
push
subl
add
je
add
sub
cmp
xchg
sub
jecxz
cmp
sub
imul
add
add
add
nop
push
sub
jno
sub
repz
add
sub
sti
xor
add
subl
add
subl
add
sub
xchg
subl
add
push
sub
cltd
subl
add
sub
mov
xor
add
jl
add
xor
add
push
cmp
roll
add
mov
test
xor
or
inc
leave
dec
xlat
xor
adc
push
int
mov
jmp
loopne
mov
xchg
sbb
xor
mov
pop
mov
dec
pop
pop
add
movsb
aad
mov
jp
pushf
dec
arpl
in
popa
arpl
rcll
sub
cmc
push
push
jle
sahf
mov
push
call
out
daa
pop
xchg
adc
mov
pushf
std
pop
shll
fwait
sbb
repnz
arpl
xchg
mov
mov
popl
mov
pop
xor
cli
jle
adcl
push
xorb
mov
jne
adc
aad
push
sbb
or
ljmp
loop
pop
out
push
iret
push
xchg
out
icebp
mov
aam
inc
jge
sbb
mov
sbb
add
mov
jecxz
xchg
or
pop
out
jle
ret
in
mov
mov
mov
dec
rclb
ret
mov
jp
lock
pop
out
xchg
inc
push
dec
and
mov
mov
push
scas
push
mov
fwait
adc
sbb
xor
cli
les
mov
push
push
sbb
jg
xchg
jmp
push
pop
and
ljmp
dec
mov
dec
pushf
ss
pop
xchg
es
orl
clc
movsl
enter
jns
jge
jne
popa
fisttpll
adc
jl
push
push
call
push
or
push
add
movb
cmc
cmp
movl
lea
jb
test
stc
cmp
pusha
pushl
lea
jae
or
cmp
bsr
mov
stc
mov
movsbl
bsr
movsbw
mov
cmc
xor
test
repnz
call
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
push
dec
add
add
movsl
js
or
pop
add
cltd
lds
sub
or
add
pushf
add
pusha
lea
jmp
push
call
cmp
push
call
lret
mov
add
add
push
mov
cld
cs
fidivl
test
mov
mov
test
popf
sti
addr16
lds
ss
sarb
dec
dec
in
mov
xchg
xchg
mov
repz
ss
in
jecxz
ja
out
mov
in
pop
cli
add
inc
xchg
test
mov
out
dec
cld
dec
mov
pop
sub
xchg
adc
movsl
lock
dec
mov
mov
or
mov
push
jle
add
push
call
enter
mov
jns
lock
scas
xor
mov
imul
mov
add
out
mov
ljmp
lods
std
dec
cltd
scas
or
mov
or
jns
das
loopne
sti
pop
imul
inc
gs
loop
push
sub
hlt
push
xor
xchg
les
lock
shrl
fcompl
popf
stc
push
shll
mov
push
jle
jno
lcall
sub
lahf
mov
xchg
add
or
xchg
xlat
shl
cltd
adc
rcrb
and
shrw
sub
pop
xchg
push
rcrb
addr16
push
sarb
out
add
mov
lahf
les
ljmp
xchg
inc
mov
ss
fsubl
or
fmuls
std
fdivr
int3
sub
inc
mov
shrl
or
pop
or
dec
daa
xchg
add
pusha
int3
push
test
js
jl
cwtl
cld
insb
les
push
jle
mov
fldt
mov
add
dec
push
xchg
sub
xor
mov
movsb
or
dec
repz
cli
sbb
dec
jmp
xor
jo
add
pusha
stos
inc
negb
movsb
test
fdivrs
insb
andb
pop
mov
jae
xchg
mov
push
sub
xchg
cs
push
loopne
xlat
mov
mov
mov
jae
pop
fistps
daa
stos
lcall
and
and
push
call
sbb
sbb
mov
add
out
notb
adc
pusha
sub
jmp
ds
sbb
out
data16
push
pop
sbb
out
ds
in
outsl
enter
sub
mov
pop
add
cmp
mov
cmp
sub
sub
fidivs
out
jl
mov
push
test
lods
add
push
aam
jle
pop
jno
mov
mov
inc
fwait
rcr
pop
out
js
rol
pop
pop
lods
ss
dec
pop
sbb
stos
sbb
adc
addr16
mov
add
push
incb
lods
fmuls
xlat
mov
push
xchg
sbb
mov
mov
mov
test
sub
adc
ss
rolb
cmp
fcomps
enter
mov
je
pop
mov
push
imul
clc
push
fidivrs
cwtl
or
jb
cmc
fcomip
outsb
mull
repz
int
xchg
add
fnstcw
xchg
negl
pop
jle
and
mov
xchg
stos
pop
adc
fisttps
fucomi
and
shll
shll
bound
cli
orl
icebp
xchg
push
jecxz
test
les
lock
mov
pop
mov
aad
jp
js
sti
addr16
add
cmp
das
inc
lds
test
pop
fnstcw
js
call
sub
push
push
cmp
int
in
outsb
or
adc
xchg
andb
push
cmp
repnz
sarb
jecxz
mov
push
xorb
and
mov
cmp
je
and
aam
sub
inc
repz
cltd
in
inc
nop
inc
mov
xor
or
fdivs
test
cwtl
and
aas
push
call
je
add
movsl
lea
call
shl
sbb
push
push
lea
call
pushf
pusha
movb
adc
pushl
mov
jmp
fstpl
or
arpl
mov
add
add
mov
mov
push
ss
call
jnp
stos
pop
pop
xor
repnz
push
mov
xchg
adc
imul
gs
cmp
cld
pop
xchg
adc
addb
pop
xchg
loop
sbbl
out
push
or
mov
pop
mov
flds
mov
cli
test
inc
pop
or
mov
mov
and
mov
aas
scas
pop
mov
mov
pop
jle
xlat
sub
sbb
movsl
dec
push
ds
sbb
ljmp
adc
int
dec
cmpsb
loop
adc
inc
jp
mull
loop
stos
jb
or
sub
in
outsl
cmpsl
insb
xor
jno
inc
je
jle
xlat
popa
fisubl
add
in
icebp
loope
decl
je
aad
stos
cmpsl
mov
mul
mov
fstps
lods
push
test
xor
adc
out
mov
les
test
inc
mov
mov
push
jle
lret
outsl
insb
xor
cs
insb
add
cmp
mov
rcl
sarb
imul
sbb
cmc
or
jmp
insb
and
mov
jae
in
adc
shlb
int
mov
stc
test
jae
imul
emms
hlt
mov
test
shl
sbb
negb
pop
dec
pop
inc
imull
outsl
cmp
pushf
add
les
inc
cwtl
adc
aam
mov
jle
cmp
dec
les
push
pop
je
adc
rorl
cli
arpl
dec
fiaddl
fnsave
insb
call
pushf
add
mov
scas
popf
popa
push
pop
pop
incl
xor
adc
popa
add
xchg
mov
mov
jecxz
xchg
outsl
inc
addr16
inc
cwtl
rorb
cmp
dec
or
rcrb
adc
imul
jmp
mov
pop
mov
ficompl
dec
into
pop
push
jle
dec
pusha
mov
in
sbb
adc
add
loope
mov
lds
fs
fdivp
jne
inc
mov
or
cmp
gs
pop
or
daa
enter
jecxz
jbe
fdivp
test
jmp
ja
int3
inc
mov
in
sahf
mov
sahf
in
lea
cld
into
and
jmp
pop
and
or
test
or
movsb
push
out
adc
cs
test
xor
fs
popa
mov
cmp
xchg
jno
push
sub
lods
or
aam
mov
push
jle
in
or
or
jbe
add
pusha
fdivrs
push
call
mov
push
call
pop
xlat
push
call
sub
push
push
call
repnz
lods
xor
imul
fidivrl
mov
lcall
push
push
mov
mov
and
xchg
add
cmpsl
mov
xlat
push
shlb
pop
pop
jp
pop
push
pop
mov
out
push
cld
xor
adc
jg
fs
adcb
pop
mov
andb
loope
repnz
jo
mov
enter
inc
xchg
sti
addr16
ret
and
jle
and
push
call
push
call
xchg
cltd
outsb
or
aaa
daa
add
push
bt
cmp
lea
jle
pusha
pushl
lea
jbe
neg
sub
lea
ror
mov
not
xadd
stc
add
stc
shl
movsbw
rcr
mov
sbb
add
cmc
add
movl
rcl
inc
inc
shl
mov
cmc
bt
cmc
test
pushf
mov
call
loopne
ficoml
imul
in
outsb
shll
stos
adc
mov
xchg
repz
jne
out
push
inc
xor
dec
or
xchg
out
icebp
jge
arpl
xchg
mov
jns
xchg
or
and
mov
sti
aas
nop
in
stos
mov
adc
stos
pop
mov
test
cwtl
jge
inc
mov
sub
aad
pop
fistpll
mov
ja
outsl
ret
inc
mov
xchg
sti
push
jle
xlat
ljmp
xorb
clc
cmpb
pushf
lea
jne
btc
adc
sar
pushf
mov
push
stc
push
cmp
add
clc
jmp
lods
push
xchg
add
sbbb
push
aam
mov
seto
inc
sahf
ficomps
mov
xchg
inc
test
cmp
jne
loope
pop
into
jle
dec
xchg
mov
cmp
rol
aaa
xor
cmpsb
fldcw
inc
pop
xchg
cs
jp
ja
mov
orl
aaa
divb
cli
lret
es
push
dec
jg
push
outsb
nop
jmp
cmp
test
jno
dec
pusha
add
cmp
pop
push
jb
jle
push
lds
stos
sbb
add
pop
and
or
aas
lahf
jnp
mov
adc
xchg
dec
inc
or
xor
or
bound
add
mov
js
mov
push
test
shl
stc
stos
int3
xor
xor
mov
shll
std
mov
dec
pusha
punpckhbw
xchg
or
push
xor
add
cmp
jecxz
rcrb
lcall
fdivrs
adc
lahf
jne
cmp
mov
lds
xor
out
dec
enter
xchg
add
push
xchg
inc
icebp
push
xchg
jne
jno
dec
aam
xchg
shl
gs
pushf
out
dec
bound
or
cmp
push
fildll
jns
cmp
mov
inc
ret
pop
jmp
iret
aas
mov
push
jle
jmp
subl
xor
imulb
jae
jl
cs
scas
cwtl
scas
or
ret
jecxz
int3
fcmovne
adcb
pop
aad
lds
sbb
inc
or
adc
jp
add
add
mov
bound
leave
fbstp
cmp
and
and
into
in
mov
js
fs
inc
mov
mov
mov
or
mov
mov
cld
arpl
pop
mov
std
or
es
pop
out
out
mov
pop
lret
sub
cmc
jne
pop
push
je
hlt
clc
test
ds
and
pop
jge
xchg
add
ja
xchg
adcb
xlat
pmaxub
mov
dec
scas
pusha
sets
arpl
jmp
fistps
dec
mov
lahf
push
jle
sub
push
call
adc
subb
lret
and
mov
loope
mov
xchg
sbb
popf
xor
repnz
fbstp
pop
mov
addb
xchg
or
cmp
add
mov
mov
jge
inc
mov
mov
dec
scas
lods
push
test
jnp
jge
inc
mov
push
arpl
or
mov
jle
fucomi
add
call
mov
add
sbb
out
int3
push
cmpsb
je
hlt
push
int3
add
add
jp
les
jmp
insl
lret
dec
lds
cmpsb
xor
add
iret
inc
call
dec
push
mov
pop
mov
pop
imul
jno
jae
call
out
push
pop
jl
xor
dec
test
mov
jns
jle
pop
call
xor
add
push
stos
sbb
repnz
jle
loope
inc
sbb
push
and
sti
dec
flds
dec
fnstcw
mov
popa
push
mov
pushf
mov
aaa
imul
lahf
pop
jmp
rcl
daa
or
insl
loope
xlat
or
jp
into
add
faddl
cmp
dec
popf
or
sbb
mov
push
mov
fwait
mov
in
in
lea
or
addr16
or
push
jl
pop
clc
shl
mov
push
mov
jg
pop
cmp
incb
mov
repnz
dec
lds
in
jge
inc
roll
push
jle
mov
cmp
out
fsubr
addr16
push
pop
lock
dec
movsb
xor
xor
sub
mov
sub
stos
fildl
adc
mov
jp
das
jl
outsb
insb
ja
inc
insb
rolb
sub
lcall
xor
xchg
in
jae
xor
add
sarl
cltd
add
mov
cld
stc
jne
and
inc
cltd
adc
jle
pop
sbb
mov
jnp
aad
xchg
jg
mov
roll
xor
mov
xchg
sub
push
imull
push
pusha
fstps
push
faddl
call
lock
in
adc
sbb
mov
mov
add
and
mov
cmp
jmp
lods
stos
xor
inc
cmp
mov
hlt
popa
aad
pushf
ss
dec
pop
jb
cmp
pop
fiadds
xchg
pop
fists
pop
mov
mov
cmp
insl
adc
jl
add
mov
stc
repz
fldl
push
int3
cmp
sub
fisubs
push
out
outsl
addr16
in
vmread
pop
gs
fmull
jl
out
insb
sbb
lcall
or
mov
insb
movsb
dec
std
fs
hlt
stc
das
loopne
jg
arpl
sub
mov
mov
mov
sbb
testl
outsl
or
or
add
outsl
shrl
push
ja
cmp
inc
stos
dec
add
add
jecxz
shll
fs
cmc
pushf
scas
push
inc
inc
ljmp
dec
arpl
cmovo
lods
pop
mov
shrb
push
cmc
or
outsl
and
cli
nop
or
and
inc
lret
dec
ficompl
mov
test
rorl
xchg
mov
inc
call
push
call
jnp
cmp
push
mov
stc
jecxz
jbe
insb
cmc
xchg
inc
int
scas
cmp
cmc
gs
xchg
mov
pop
mov
movb
cld
loope
xchg
popf
test
xor
add
shl
dec
mov
cmpsb
shlb
addr16
mov
inc
movsl
adc
rcll
fs
mov
mov
mov
cld
mov
mov
sbb
loopne
jmp
aam
scas
daa
jnp
pop
out
fildll
pop
mov
fwait
pop
push
jle
testb
cmc
push
pushf
lea
call
push
call
sbb
add
adc
sbb
add
xchg
or
dec
jmp
or
lcall
ss
lods
es
loope
cmpsb
push
or
lcall
orb
push
xchg
cmove
cld
pop
and
shl
lea
inc
xor
call
mov
mov
pop
and
bound
rol
jbe
inc
test
mov
mov
imul
popa
leave
xor
jne
popa
jmp
xor
xchg
cli
jnp
pop
fsubs
add
sbb
inc
fwait
adc
push
mov
daa
and
mov
pop
negl
lret
rclb
repnz
stos
lcall
mov
dec
scas
xchg
outsl
std
mov
jnp
cmp
xchg
les
mov
test
aad
push
xor
mov
or
push
outsb
lret
xorl
pop
sub
dec
test
cmp
add
cwtl
and
lea
or
sbbb
add
inc
mov
add
add
adc
inc
lret
push
bound
push
mov
popl
xor
repz
mov
sub
pushl
adc
push
pop
stc
stos
int3
pop
lea
or
or
lods
lds
and
cmpsb
push
enter
movsb
rcll
add
sub
xlat
in
jle
das
mov
or
out
out
dec
ret
pop
mov
outsl
iret
dec
mov
mov
scas
ljmp
outsl
mov
call
fisttpll
orb
mov
es
xchg
or
gs
addr16
movsl
stc
xor
and
push
repz
adc
ja
jp
fisubs
je
outsl
pop
mov
push
loopne
pop
cmp
sbb
scas
cmpl
lods
in
sbb
mov
in
cmp
sbb
out
pop
iret
pop
xchg
xor
push
shlb
in
sub
sbb
pop
loop
sahf
divb
jle
gs
test
data16
lret
mov
mov
nop
std
mov
pop
leave
push
pop
iret
push
push
jecxz
jp
loop
mov
das
sub
sbb
pop
test
and
add
sub
mull
les
xor
xor
loope
cmpsl
sbb
in
mov
jp
mov
leave
into
push
ret
or
cmp
add
dec
mov
adc
cld
pop
fsubrs
push
jle
icebp
add
push
call
sbb
pop
lods
in
jo
mul
notl
mov
jge
pop
call
xchg
sbb
jno
inc
cmc
or
xor
sbb
fstpt
xchg
fs
ss
mov
lret
lock
lret
lods
ret
mov
pop
add
popf
and
pop
jo
std
xchg
cmc
shrb
shll
out
rcl
mov
in
repz
shl
out
outsb
cs
mov
inc
jb
mov
ja
xchg
cmpsl
mov
lds
mov
addr16
jae
or
jno
add
scas
pushf
sub
add
inc
push
dec
push
je
gs
insl
inc
gs
jb
insl
add
pop
cmp
ljmp
mov
xchg
jo
fstps
xor
jecxz
pop
loopne
cli
jg
arpl
inc
call
jp
dec
cmp
inc
es
std
movsb
add
dec
mov
imul
imul
sgdtl
and
cli
xchg
mov
addr16
xlat
push
cwtl
add
xor
dec
jno
xchg
andb
sub
jnp
push
fbld
arpl
aaa
stos
add
xchg
mov
insb
and
mov
mov
pushl
ret
jle
fistl
dec
push
sub
insb
in
and
test
sub
iret
jno
jne
movsb
push
dec
mov
xchg
dec
lret
push
int
ret
sbb
aam
mov
push
jmp
test
adc
testb
jb
pop
arpl
pop
sbb
jae
cmp
jp
orl
lea
push
lods
add
and
or
daa
mov
push
ret
daa
push
jle
mov
adc
aas
repz
lds
mov
iret
in
mov
or
ljmp
push
ss
jge
jno
arpl
cmp
stc
mov
inc
xchg
inc
lock
popa
jno
je
out
ret
jae
jmp
adc
into
jb
cmp
bound
and
jmp
test
pop
dec
sub
aas
mov
sbb
sbb
jle
gs
dec
or
jns
mov
pop
sbb
add
pop
mov
mov
dec
dec
cmp
xor
mov
into
jae
and
ret
incl
addr16
jne
imul
leave
shll
mov
jnp
xchg
or
xchg
mov
mov
dec
insl
jb
js
push
leave
out
mov
icebp
sbb
filds
cmc
jg
mov
aaa
ret
pop
lahf
das
mov
jg
pop
ret
push
jle
lahf
mov
push
push
mov
ret
js
outsb
ret
sub
popf
adc
leave
xchg
push
mov
out
je
jns
sbb
stos
lahf
mov
sbb
xor
std
out
call
arpl
andb
mov
xchg
imul
cli
sub
jnp
in
dec
fstps
shll
ja
cmp
push
push
and
out
jp
shlb
pusha
std
cmp
or
lret
std
jmp
add
jb
push
scas
adc
pop
mov
fs
pop
jno
gs
pop
jecxz
dec
xor
scas
cltd
sbb
fidivs
xchg
stc
fbld
xor
std
xor
leave
jg
xchg
repnz
xor
ljmp
fsubl
pop
stos
int3
pop
mov
sbb
in
pop
or
dec
scas
add
mov
lods
inc
add
test
jmp
mov
outsl
repz
mov
ja
inc
daa
lahf
mull
addr16
push
jle
mov
mov
rcrl
scas
pushf
lea
jne
rcr
clc
adc
mov
movzbw
inc
sub
shld
shrd
mov
cmc
stc
jmp
push
call
shr
cld
push
call
add
push
pop
lcall
dec
jb
fcmovb
fimull
sbb
pop
jl
mov
test
cmpsl
je
je
cmp
or
adc
stos
mov
add
lea
cmp
jecxz
fnstcw
ds
inc
sbb
imul
and
fldcw
ret
inc
jecxz
bound
xlat
stc
push
out
push
icebp
pop
shll
lcall
mov
sbb
or
in
insb
fcompl
sub
lock
jle
cli
or
jmp
cmp
dec
lds
fwait
sub
mov
das
xor
cmpsb
sub
adc
sub
loop
cld
mov
mov
inc
lcall
jge
addr16
mov
pop
lds
rolb
rolb
sub
in
cmpsl
sbb
sbb
mov
push
lods
and
movsb
sub
dec
sbb
xor
insb
in
insl
mov
xor
push
jle
addr16
add
dec
movsl
inc
in
pop
jbe
cmp
fsubl
loop
mov
cmp
cmp
pop
in
pop
out
push
inc
mov
int
and
ds
and
mov
incb
xor
lock
shll
mov
add
aad
loop
aaa
call
repnz
pop
scas
loop
and
xor
mov
cld
in
adc
sub
sbb
add
lcall
push
shlb
xchg
sbb
sbb
out
enter
loope
in
jne
imul
jle
lods
rcl
fs
call
jp
pushf
pushl
mov
pusha
pushf
mov
lea
jmp
push
call
je
jbe
pop
enter
sub
cmpsl
aas
fisttpl
jnp
adc
fidivrl
mov
sub
insl
lret
mov
xor
mov
pop
sarl
xorb
in
nop
cmpsb
push
pop
mov
xorl
fidivrs
mov
adc
data16
dec
cmpsb
push
mov
mov
push
call
or
insl
movsb
insl
push
call
stc
mov
add
bsr
sub
stc
xor
shr
dec
shl
sbb
mov
cmp
mov
shl
movzbw
add
movsbw
bsf
bt
add
add
btr
movzbw
call
add
jbe
rorl
jmp
or
ret
addl
ds
jmp
jecxz
ljmp
push
aam
std
std
stos
repnz
ffreep
cmp
xlat
cwtl
inc
mov
les
pop
in
jl
inc
mov
lret
aaa
insb
xchg
xor
cmpsb
out
mov
jp
push
test
xor
repnz
adc
mov
push
xor
stos
sub
stc
dec
mov
in
popf
and
pusha
daa
cmp
cs
je
sbb
ret
pop
push
sahf
sub
lret
jo
repnz
ret
jecxz
inc
arpl
dec
mov
mov
imul
ljmp
pop
jge
shrb
mov
inc
mov
aaa
out
cmpl
out
scas
imul
mov
mov
inc
scas
push
xchg
popf
out
movsb
pop
stos
aaa
stos
sbb
ret
and
push
jle
cltd
lods
into
pop
push
leave
ss
cld
jne
sbb
mull
jecxz
mov
mov
or
icebp
pop
lds
movsl
sub
pop
mov
push
cmp
shl
jb
dec
into
push
jle
pop
imul
dec
mov
pop
mov
sbb
adc
or
xor
das
nop
icebp
sbb
or
test
lock
dec
push
mov
dec
fdivr
outsl
inc
sbb
sub
dec
sti
pop
hlt
or
cmpsb
sahf
pop
ret
xchg
cmpsb
xchg
sub
in
mov
mov
out
inc
out
mov
in
pop
xchg
roll
into
inc
mov
add
pop
scas
and
lods
mov
sbb
or
add
cwtl
pop
in
mov
push
sbb
mov
mov
jae
pop
rolb
adc
sub
lods
pop
mov
cmpl
cmp
xor
xor
cli
xchg
sbb
jnp
in
sbb
mov
inc
test
in
jge
gs
aad
jle
pop
jb
push
call
aad
push
call
inc
pop
mov
stos
outsb
or
in
adc
xor
sbb
sldt
pop
cmpl
imul
mov
insb
pushf
and
mov
pop
in
mov
jno
pop
imul
sarl
mov
push
cmp
cmc
jge
push
xchg
pop
dec
jg
and
test
inc
xchg
cmpsl
pop
jge
int
xchg
popf
icebp
push
dec
popf
daa
ja
pop
mov
or
dec
push
add
sub
adc
cltd
cmp
fcoms
mov
inc
movsb
adc
pusha
lock
mov
sahf
mov
ret
dec
mov
and
xchg
or
aad
stos
or
shll
jno
fisubs
dec
dec
mov
ljmp
std
loope
rclb
insb
addb
imul
imul
add
mov
mov
jmp
dec
addl
pop
ja
popf
dec
imul
pop
mov
cmc
jne
loop
sarb
jns
jns
in
mov
xchg
sbb
cmc
or
push
call
mov
push
call
xlat
icebp
add
and
mov
add
test
lret
push
call
mov
mov
leave
dec
sarl
cmpsb
icebp
mov
and
clc
mov
adc
jb
and
cmpsl
insb
mov
imul
cmpsl
cmpsl
loop
scas
outsb
mov
lea
out
inc
imul
xlat
int
push
mov
fldl
xchg
add
push
test
out
ds
loopne
mov
pop
sub
repnz
gs
sbb
xchg
mov
push
sbb
pusha
leave
xchg
or
adc
mov
lcall
mov
jbe
data16
stos
sub
loop
inc
pop
sarl
xchg
sbb
addb
adc
jbe
dec
test
bnd
and
insl
popf
or
lret
inc
je
movsb
lret
data16
pop
inc
or
popf
insl
jg
je
imul
cwtl
in
sahf
cld
jns
in
js
cli
stos
int3
cmp
dec
and
das
addr16
pop
in
stc
dec
dec
stc
sbb
mov
cmc
mov
sub
mov
cmpsb
sbb
repnz
push
jle
aam
std
add
push
scas
dec
cmp
mov
fs
cs
dec
xchg
cmpsl
pushf
aas
insb
sub
adc
scas
adc
ds
xorl
roll
xchg
loop
scas
push
mov
dec
loop
fadd
jae
adc
pop
xchg
jns
jnp
aad
jecxz
out
xlat
jl
dec
icebp
popl
negb
push
scas
jae
jno
push
mov
icebp
cmp
dec
push
jle
shl
imul
add
cmp
stos
and
sbb
scas
ror
jno
push
or
or
push
jg
insl
loop
int3
and
dec
mov
iret
mov
cmp
arpl
pusha
lods
incb
in
mov
cltd
scas
jle
fsubr
repz
fisttpll
mov
sarb
test
arpl
push
rclb
and
in
outsl
in
push
sbb
ret
aaa
scas
cmp
mov
pop
scas
ret
stc
data16
dec
inc
or
push
cmpsl
or
sbb
enter
in
mov
adc
xchg
repz
popf
shll
push
xchg
adc
jns
notl
push
inc
movsb
xchg
int3
mov
outsl
lcall
jl
jmp
ret
in
jb
hlt
pop
rcl
pop
lds
push
sub
jl
pop
lret
lods
mov
sub
cmp
imull
inc
in
into
push
fs
in
rcl
mov
sub
sub
push
jbe
pop
out
mov
pop
sub
push
push
call
cmpsl
lea
ja
pusha
movb
imul
call
pop
ret
cmp
or
inc
pop
pusha
mov
mov
xchg
sti
mov
jb
push
leave
es
and
cwtl
sub
cli
jb
ffreep
xchg
jecxz
jge
dec
mov
pop
popa
cmp
cmp
xchg
inc
xchg
jmp
shlb
add
inc
adc
bound
lock
xchg
stc
lea
nop
mov
lret
out
daa
push
dec
stos
pop
dec
arpl
sbb
sarl
push
jle
push
arpl
pusha
imul
jl
adc
dec
ret
xor
popa
retw
jmp
test
pop
push
push
xchg
cmp
pop
cmp
push
or
push
loopne
dec
mov
ja
test
pop
or
add
addr16
and
mov
jmp
scas
pop
or
push
add
and
mov
insl
hlt
mov
fimuls
pop
arpl
push
xchg
or
inc
mov
push
push
jle
ljmp
sbb
lcall
shll
dec
mov
sbb
roll
pop
mov
aas
xchg
add
aaa
xor
js
and
inc
jg
lcall
loopne
shlb
pusha
fdivrs
cmp
es
push
xchg
mov
cmp
and
loopne
jg
repz
cltd
in
mov
push
and
inc
testl
lods
icebp
pop
mov
push
mov
mov
fsubs
push
jle
aaa
dec
insb
faddl
inc
add
and
enter
adc
sbb
and
cmc
or
jmp
addl
inc
push
or
insl
imul
sarl
loopne
clc
jge
iret
pop
mov
dec
fistl
and
and
xchg
mov
dec
inc
mov
mov
test
jg
and
nop
cmpsb
adc
das
cmp
hlt
jmp
jle
inc
mov
mov
jmp
rcrl
mov
mov
xor
jle
stos
mov
pushf
or
sti
push
add
loopne
sbb
or
dec
sbb
add
pusha
stos
shrl
sbb
call
std
clc
cmp
jmp
push
call
test
and
push
call
sahf
ljmp
sbb
pop
push
add
lods
repnz
push
mov
pushf
lea
je
cmp
jmp
cwtl
nop
adc
pop
leave
push
ds
mov
dec
mov
outsl
push
jb
sbbb
jl
cmp
inc
mov
push
outsl
xor
mov
out
push
cmp
fwait
pop
jbe
pop
movsb
cmpsb
lock
in
jl
iret
jle
aas
dec
inc
adc
dec
mov
les
sbb
inc
mov
cmp
in
pop
inc
jae
stos
rcll
mov
mov
dec
push
sti
lods
das
movsb
sbb
adc
cltd
xchg
lods
sub
lret
es
and
movsb
mov
push
call
adc
sbb
repnz
call
sub
nop
add
cmp
push
xchg
add
stc
pop
add
std
in
jmp
push
out
mov
icebp
shrl
mov
lods
faddl
cld
loopne
push
mov
push
jb
fcmovbe
pop
push
iret
sahf
mov
xor
xchg
cmp
pop
mov
pop
adc
fldcw
dec
adc
and
stos
or
shrl
fidivrl
mov
mov
adc
out
add
sbb
push
pop
mov
or
xchg
es
int3
push
addb
adc
sub
xchg
sbb
pop
popl
jbe
fildl
or
dec
xchg
xchg
inc
dec
jno
stos
fistps
or
push
iret
or
cli
gs
push
scas
jecxz
ja
xchg
jb
daa
dec
sar
into
lock
or
lock
add
jns
inc
mov
and
push
outsb
cli
pop
into
sub
ficoms
push
aad
or
mov
into
pop
mov
ljmp
push
sbb
add
sub
ds
flds
add
out
movsb
xor
lods
push
stos
fistpl
mov
push
pop
cmp
shll
sbb
andl
dec
leave
push
mov
push
xchg
hlt
jge
cmp
jle
lea
pushf
shll
dec
rolb
imul
sbb
je
jge
or
pushf
or
push
jle
push
push
call
sbb
mov
aad
movzbl
mov
movb
mov
pushl
lea
jmp
lea
sub
test
jb
dec
mov
out
aam
cmc
pop
mov
push
into
lock
stc
cmp
ds
test
sbb
mov
push
push
fsub
popa
and
call
and
xor
mov
mov
cmp
pop
pxor
sub
add
jge
ss
cmpsb
dec
iret
pop
dec
cli
dec
movsb
add
xchg
loope
pop
insb
aam
mov
loopne
test
mov
push
jle
dec
pusha
jbe
test
js
call
xlat
jle
push
call
repnz
sahf
inc
clc
push
cmc
add
mov
movzwl
test
shld
pop
mov
test
test
add
pushf
pusha
pusha
mov
bt
test
jmp
std
je
jb
sbb
daa
sbb
push
fmull
std
outsb
jae
xchg
xchg
pop
pop
push
stc
push
out
push
cmp
not
in
jbe
jmp
xchg
mov
or
add
in
adc
subl
es
xchg
xor
xor
inc
mov
sub
jno
sub
lock
xor
pushf
sbb
std
lods
ret
pop
mov
jmp
decl
jmp
inc
das
mov
xorb
bound
lock
xchg
imul
mov
lret
push
mov
dec
pusha
jbe
pop
mov
jbe
pop
mov
pushf
std
mov
cwtl
add
sub
cs
movsl
xor
adc
cwtl
in
arpl
mov
mov
inc
in
imul
rcll
or
dec
mov
xchg
inc
leave
and
popa
adc
pop
cmpsb
mov
push
and
aas
scas
aaa
cmpsl
xor
xor
sarl
mov
jae
cli
fcomip
push
movsl
cmp
test
cwtl
add
loopne
call
jle
mov
jmp
cmp
mov
in
fists
stos
sub
out
int3
and
push
outsb
int3
push
mov
lret
inc
sahf
push
dec
movsb
mov
movsl
sbb
out
ss
adc
jmp
pop
dec
pop
mov
call
push
int3
cmp
inc
rclb
pop
insl
mov
dec
mov
push
pushf
call
jmp
pusha
mov
mov
mov
pusha
mov
mov
pushf
push
lea
jmp
sub
call
call
ror
call
cmc
mov
sub
inc
mov
stc
add
push
pushf
movw
pusha
mov
movl
pushl
lea
jmp
pushl
lea
jne
jmp
pushf
pushl
popl
mov
movw
pushl
push
lea
jmp
pushl
popl
pushf
push
pushl
mov
lea
jmp
aaa
lea
bsr
test
mov
call
shl
mov
push
setno
ror
add
pushf
pushf
pushf
call
jmp
mov
call
lahf
mov
call
call
pushf
jmp
lea
mov
cmc
rcl
mov
test
clc
add
jmp
lea
bt
jmp
mov
mov
push
call
pusha
cmc
sub
test
shr
movl
jmp
push
pusha
pushl
pushl
popl
movw
pushl
push
push
lea
jmp
pushl
push
mov
mov
pushf
lea
jmp
cwtl
lea
call
pushf
popl
call
pushl
popl
push
movl
push
lea
jmp
jmp
call
add
jmp
mov
mov
lea
jmp
cmp
call
rcl
cmc
mov
btr
daa
xchg
neg
pop
stc
movzbw
test
and
pop
cmc
sub
cltd
pop
aaa
cld
sar
pop
shr
pop
add
shld
pushf
mov
setg
bts
mov
btc
dec
stc
pushl
popf
pusha
pushf
setae
call
push
mov
call
movb
pusha
mov
push
push
pushl
pushf
popl
jmp
mov
pusha
lea
jmp
neg
pushf
movb
pusha
dec
cmc
cmp
pushf
cmc
xor
cmc
mov
xor
jmp
mov
pushl
movb
pushf
lea
jae
mov
pusha
lea
jmp
call
pushf
not
bt
rol
movb
pusha
cmc
add
clc
pushf
mov
cmp
sub
call
pusha
seta
rcr
mov
dec
pushf
push
rcr
mov
test
cmc
sub
jge
stc
sub
push
shl
pushf
jmp
mov
pushf
mov
movb
push
lea
jmp
mov
pusha
mov
mov
push
movb
mov
lea
jmp
bt
bswap
clc
pushf
add
cmc
xor
pushf
bswap
call
push
push
push
pushf
mov
call
mov
pushf
call
pushf
pushf
popl
mov
lea
jae
pushf
pusha
pushl
popl
pushf
pushf
pushf
lea
jmp
xor
bt
add
call
pusha
pushf
mov
mov
lea
jmp
mov
pushl
pushf
popl
movb
call
mov
call
push
shrd
pushl
pushf
mov
pushf
push
pushf
popl
jmp
call
mov
pushl
push
push
pushf
lea
jmp
stc
jmp
call
add
clc
pushl
cwtl
mov
bt
push
mov
sub
push
mov
movl
push
push
lea
jmp
push
and
call
xor
test
call
pushl
mov
bswap
push
mov
pushl
cld
push
pusha
call
xor
shr
aam
mov
add
call
bt
not
bt
cmc
stc
ror
pusha
movb
lea
bt
stc
pushf
test
xor
bt
xor
test
mov
cmp
jmp
lea
pushf
pushf
lea
jmp
pusha
mov
pushl
push
pushf
movw
lea
jmp
cmp
sub
pushf
div
pusha
call
call
call
mov
mov
pusha
lea
jmp
call
shl
mov
clc
pusha
cmc
mov
call
push
dec
movzbw
shr
movzbl
shl
xor
pushf
shl
movsbw
add
push
movsbw
stc
not
mov
call
stc
not
clc
pushf
sub
clc
stc
and
pusha
mov
pushf
jmp
pusha
mov
jmp
xchg
rcl
lea
bts
sbb
and
bsr
rol
rcr
btc
sub
jmp
pushf
push
jmp
bsf
cmc
mov
rcr
rcr
mov
bt
bt
sub
push
mul
pushf
pushl
jmp
jmp
add
pushf
call
ja
rol
mov
neg
lea
shrd
cmp
sub
call
pusha
mov
pushf
movb
lea
jmp
shld
mov
pushl
pushl
call
add
call
shr
rol
mov
push
mov
test
pushf
push
sub
bt
cmc
bt
pusha
shr
jmp
neg
sub
cmc
neg
shr
ror
sub
call
jmp
bt
test
cmp
jmp
pusha
mov
pushf
pushf
push
jmp
mov
pushl
movb
movb
lea
jmp
pusha
pushl
popl
push
lea
jmp
pushf
call
mov
jmp
clc
add
test
pushf
call
bt
cmp
adc
mov
sbb
xor
sbb
mov
pusha
cmp
sub
call
mov
call
pop
not
mov
movl
pushf
mov
pusha
lea
jmp
mov
pusha
movl
movb
jmp
mov
clc
call
jmp
pushl
movb
push
dec
stc
stc
bt
add
jmp
pusha
pushl
popl
pusha
pushf
lea
jmp
pusha
mov
lea
js
pushf
pusha
pushf
mov
movw
movb
lea
jmp
movb
call
shld
bsf
pusha
movsbw
rdtsc
pusha
pushf
push
bt
sub
mov
jmp
mov
mov
mov
pusha
lea
jmp
push
mov
pusha
pusha
jmp
or
shrd
movzww
test
pushf
clc
xchg
pusha
stc
add
cmp
jmp
pusha
bt
add
test
stc
pushl
bt
add
stc
cmc
mov
cmc
cwtl
mov
sub
jmp
mov
movb
pushf
lea
jmp
pusha
mov
mov
lea
jne
pushf
pushf
mov
pushf
push
pushf
pushl
lea
jmp
lahf
mov
movzbw
mov
pusha
pushl
clc
call
mov
mov
mov
pushl
movb
pushf
pushf
popl
lea
jns
popl
push
mov
push
lea
jmp
push
mov
pushl
mov
pushf
popl
jmp
neg
call
push
pushf
pushf
mov
call
pushf
mov
mov
pushf
pushf
movb
pushf
mov
lea
js
sets
lea
mov
setbe
jmp
sub
cmc
cmc
cmc
add
jmp
bt
mov
stc
call
mov
jmp
movzbw
mov
jmp
lea
inc
movzbl
push
inc
jmp
call
cmc
not
test
pushl
jmp
call
push
mov
mov
push
mov
lea
jmp
call
movb
pushl
popl
pushf
mov
pushl
lea
jmp
jmp
sbb
cmp
xor
mov
bsr
jmp
pushf
pushf
popl
pushl
call
call
pushf
cmc
call
jmp
pushf
pushl
popl
movb
movw
movl
mov
lea
jmp
push
jmp
pushf
jmp
call
cmp
add
pushf
clc
neg
test
test
push
xor
call
mov
dec
test
sub
push
pushf
pushf
push
mov
pushf
movw
mov
lea
jmp
push
pusha
mov
lea
pusha
pushf
setne
mov
not
pushf
movsbw
pushf
popl
shl
rcl
rcl
xchg
xchg
rcr
mov
stc
shrd
sub
ror
mov
dec
bswap
rcl
mov
ror
clc
shl
lea
xchg
rcr
xor
pushl
popl
lea
movl
sar
and
bts
mov
btc
add
shl
and
sub
bswap
rol
xor
adc
mov
sub
lea
clc
rol
lea
not
rol
pusha
lea
sub
pusha
neg
sar
lea
sub
test
pushf
btr
bts
mov
lea
add
sub
or
shrd
bsr
mov
dec
add
inc
dec
bsf
inc
shrd
neg
mov
dec
dec
add
movsbw
jge
dec
inc
movzbl
not
mov
call
call
rcr
aas
mov
sbb
mov
cmc
stc
add
pusha
movb
call
movsbw
pushf
bt
and
push
sar
mov
test
add
jmp
call
rep
push
mov
btc
mov
cmp
clc
pushl
popf
pushf
pushf
pushf
movw
lea
jmp
mov
call
stc
stc
add
pushf
movb
push
rol
cmc
mov
jmp
push
push
mov
mov
pusha
pushl
pushf
mov
movb
lea
jmp
mov
mov
lea
jmp
mov
lea
jmp
jmp
mov
mov
pushf
movl
movb
lea
jmp
test
add
push
jmp
sbb
sar
sub
mov
movzbl
test
test
test
test
xor
bt
call
add
movzbl
call
stc
bt
cmp
shl
pushf
bt
push
shr
clc
pushl
test
or
pushf
mov
mov
cmc
xor
jmp
jo
pushf
movb
push
pushl
popl
pushl
pushf
pusha
movb
lea
jmp
jmp
pusha
mov
call
mov
not
pushf
std
mov
push
cld
std
movzbl
mov
pushf
lea
lea
jmp
call
movsbw
neg
lea
bts
aaa
das
rol
sub
cmc
sub
lea
lea
adc
rcr
test
and
adc
sub
pop
mov
pusha
movzbw
pushf
popl
pusha
pushl
cld
lea
mov
lea
bswap
push
push
mov
movw
lea
push
cld
call
jmp
call
pushf
popl
push
push
jmp
pushl
popf
pushf
pushf
movl
pushf
lea
jmp
neg
xor
test
mov
jmp
push
pushf
mov
mov
pusha
mov
lea
jmp
call
mov
pushf
popl
mov
push
jmp
mov
call
mov
pushf
pushl
movl
mov
lea
jmp
call
shr
mov
movsbw
dec
bt
mov
test
jmp
jb
push
pushf
mov
call
pusha
movb
pushf
popl
call
push
mov
pushf
mov
call
pusha
pushf
popl
pusha
jmp
pushl
popl
mov
push
push
lea
jmp
pushl
mov
pushf
popl
lea
jle
popl
push
push
pushf
lea
jmp
pushf
mov
mov
jmp
pushf
call
pushl
popl
pusha
pushf
movw
pushf
lea
jmp
mov
pushf
pushl
pusha
push
lea
jmp
cwtl
bswap
pusha
xchg
mov
shl
sub
lea
ror
mov
shl
sar
mov
bt
add
add
jle
cmp
shrd
call
pushf
popl
lea
jbe
popl
pusha
mov
lea
jmp
movb
dec
mov
mov
pushf
pushl
ret
mov
movb
pushl
movw
pushf
lea
jmp
pushf
call
pusha
mov
call
pushf
pushf
push
mov
jmp
rcr
sar
bt
and
mov
cmp
xor
jmp
shld
pusha
test
mov
not
xor
shl
mov
movb
pusha
bt
add
jmp
mov
sbb
add
mov
not
pushf
mov
mov
push
pushf
lea
jl
pusha
mov
pusha
movb
lea
jmp
xor
bsr
mov
pusha
xchg
pushf
movl
add
call
mov
lea
jl
mov
call
mov
pushf
lea
jmp
pushl
popl
movw
movl
push
push
lea
jmp
movb
mov
inc
jmp
push
call
neg
shr
sub
shl
mov
push
test
stc
pushl
add
pusha
movw
pushf
pushf
lea
jmp
push
jmp
pusha
pushf
pushl
pushl
popl
push
lea
jmp
call
push
mov
pusha
mov
mov
lea
lea
mov
pushf
pushf
lea
jmp
jmp
call
inc
bt
test
clc
add
pushl
call
pusha
jmp
movzbw
call
test
sub
cmp
adc
neg
jnp
rcl
cmc
sub
call
sub
mov
mov
movl
push
pushf
lea
jmp
sub
movl
mov
movb
lea
jmp
push
movb
push
push
pushl
popl
mov
movb
mov
lea
jmp
push
pushl
popl
pushf
pushf
movb
pushl
lea
jmp
setae
bswap
mov
push
pusha
mov
pusha
mov
movw
lea
jmp
mov
mov
pusha
pushf
movb
pushf
lea
jmp
stc
sub
pushl
jmp
mov
movb
lea
jmp
call
push
movw
pushl
pushf
popl
jmp
pushl
popl
pushl
movw
lea
jmp
push
push
lea
jne
pushf
pushf
jmp
mov
movw
mov
pushf
pusha
mov
pushf
pushf
lea
jmp
pushf
mov
pushl
popl
push
lea
jmp
pusha
mov
pushf
movw
lea
jmp
mov
movsbw
movzbl
mov
bswap
mov
pushf
pushl
ret
mov
movb
push
push
divl
jmp
push
pushl
popl
pushl
push
lea
jmp
pusha
call
pusha
jmp
pusha
pushl
popl
push
lea
jmp
movb
cmc
xor
pusha
inc
pushf
decl
call
push
mov
pusha
push
mov
lea
jg
push
push
lea
jmp
jmp
pushf
or
rcr
mov
pushf
btc
lea
setp
add
rcr
xor
sub
sar
movsbw
bt
mov
pushf
pushf
sub
jno
stc
shl
push
stc
shr
clc
cmp
mov
or
pushf
jmp
cmc
cmp
add
pushf
cmc
stc
sub
push
lea
je
push
mov
mov
pushf
pusha
lea
jmp
mov
movl
cld
call
movb
pushl
popl
test
pusha
add
jmp
mov
pushf
jmp
xor
dec
shl
xor
test
mov
pushl
add
pushf
mov
pusha
lea
jmp
movzbw
mov
push
pushf
bswap
call
mov
pusha
push
lea
jmp
test
movzbl
test
push
xor
cmc
test
bt
sub
pusha
cmc
jmp
push
mov
pushf
mov
pusha
pushf
lea
jmp
call
mov
pushf
call
mov
mov
call
pusha
push
call
pushf
popl
push
pushl
popl
push
lea
jmp
jmp
call
jmp
mov
pushf
movw
mov
lea
jmp
pusha
pushf
mov
mov
lea
jmp
pusha
pushf
popl
pusha
jmp
call
cmc
sub
pushl
pushl
call
pushf
pushf
popl
push
lea
ja
popl
pusha
mov
push
pushl
lea
jmp
pushf
pusha
jmp
push
call
push
lea
jl
push
pushf
popl
je
popl
push
pushf
pushf
lea
jmp
mov
cmp
shl
inc
or
mov
push
test
add
movb
jmp
jmp
jmp
cmc
pushf
sub
push
mov
jmp
aas
pusha
lea
test
cmc
lea
jge
cmp
jmp
mov
pushf
lea
jmp
pushl
popl
movw
lea
jmp
jmp
call
pushl
jmp
push
mov
push
pushf
popl
call
cwtl
setns
push
not
mov
pushf
mov
pushf
mov
lea
cpuid
push
cmp
sub
call
aad
shr
xor
pushf
notl
sar
not
shld
mov
pushf
sub
cmc
and
lea
jo
push
push
movb
pushf
popl
push
pushl
popl
pusha
mov
lea
jmp
call
bts
jge
neg
dec
movzbl
btc
sar
rcr
xor
rol
inc
btc
neg
add
mov
pushf
cmc
not
movsbw
call
test
sub
clc
push
add
jmp
cmp
cmc
mov
neg
shl
mov
stc
cmc
sub
pusha
cmc
shl
jmp
neg
cmp
clc
call
mov
mov
jmp
push
mov
mov
pushf
pushl
mov
lea
jmp
pushf
mov
pusha
mov
lea
jnp
push
mov
pushf
pushf
push
pushf
lea
jmp
daa
btc
not
shld
mov
cmp
mov
clc
cmc
test
cmc
sub
test
shl
call
sub
movb
mov
pusha
jmp
ror
pushf
shl
movzbl
movsbw
or
add
pusha
stc
rcl
rol
not
not
cmc
clc
push
mov
rol
btc
add
clc
and
rcl
mov
push
jmp
pusha
mov
pushf
mov
mov
lea
jmp
pusha
pushl
jmp
stc
dec
shr
sbb
sub
test
movzbl
and
lea
shl
rcr
rol
mov
cmc
call
pusha
decl
call
mov
pushl
mov
movw
lea
jmp
mov
push
push
lea
jmp
jmp
test
jmp
movb
pusha
mov
push
push
mov
pushl
lea
jmp
pusha
pushf
mov
pushf
mov
mov
mov
pushf
lea
jmp
pushf
pushf
mov
push
mov
pusha
lea
jmp
mov
pushf
pushf
lea
jmp
mov
shr
adc
shl
mov
clc
add
cmc
pushf
call
pushf
call
or
mov
rcl
mov
stc
test
cmp
pusha
add
pusha
jmp
test
btc
shld
mov
shl
bsr
shr
mov
clc
not
test
call
stc
mov
pushf
sub
pushf
mov
pusha
jmp
adc
pusha
inc
mov
pushf
mov
add
push
movb
call
pushl
mov
jmp
pushf
popl
jmp
push
pushl
popl
movw
lea
jmp
pusha
mov
mov
lea
jmp
push
mov
pusha
mov
push
movw
push
lea
jmp
pushf
pusha
mov
call
in
lods
jge
cmp
jge
or
add
mov
add
les
mov
jge
stos
jge
jne
jge
jmp
jge
call
ret
jge
sti
les
jne
jge
fldcw
jge
mov
jge
xor
jge
cmp
jge
xor
jge
mov
jge
cwtl
ret
jge
loopne
jge
ja
jge
pop
mov
jge
fnstenv
jge
loopne
jge
aaa
int3
jge
mov
jge
fldcw
jge
mov
jge
jne
jge
cmp
jge
cmp
jge
ffreep
jge
xorl
jge
mov
lods
jge
rol
jge
xor
mov
add
mov
jge
pop
int3
jge
cmp
mov
add
lods
jge
loopne
jge
pop
mov
jge
jno
jge
call
mov
add
lods
jge
test
jge
xorl
jge
or
add
jge
xor
ret
jge
lock
add
lods
jge
cmp
jge
pop
mov
jge
mov
lods
jge
ffreep
jge
mov
jge
stos
jge
sti
les
mov
mov
add
jge
mov
mov
jge
and
jge
mov
mov
add
mov
jge
bound
jge
and
jge
bound
jge
in
jge
mov
mov
add
jge
fnstenv
jge
bound
jge
aaa
int3
jge
mov
mov
add
jge
mov
mov
add
scas
jge
and
mov
jge
fnstenv
jge
mov
mov
add
mov
jge
mov
mov
add
mov
add
jge
bound
jge
mov
jge
mov
mov
add
lods
jge
pop
mov
jge
bound
jge
call
mov
jge
jge
and
jge
fldcw
jge
in
lods
jge
jno
jge
or
add
mov
jge
out
lods
jge
mov
jge
and
jge
jge
in
jge
cmp
jge
cmp
jge
in
jge
mov
mov
add
jge
lock
add
jge
rol
jge
in
jge
test
jge
add
jge
call
int
add
mov
jge
and
jge
mov
mov
add
lods
jge
ja
jge
fnstenv
jge
and
lds
out
lods
jge
pop
mov
jge
add
jge
mov
jge
ffreep
jge
fnstenv
jge
and
jge
add
jge
add
jge
mov
lods
jge
call
lods
jge
mov
jge
enter
ja
jge
xor
jge
and
jge
in
jge
mov
mov
jge
pop
int3
jge
jno
jge
and
jge
ffreep
jge
jge
rol
jge
out
lods
jge
mov
mov
add
lds
cwtl
ret
jge
test
jge
ss
add
jge
mov
jge
or
add
sarl
mov
add
int3
jge
jge
aaa
int3
jge
out
lods
jge
and
mov
jge
add
jge
xor
jge
call
cmc
xor
pushf
cbtw
jmp
pusha
rcl
bsf
cmc
mov
sub
dec
jmp
add
add
mov
call
daa
pushf
mov
call
pusha
mov
push
push
mov
push
lea
jmp
mov
push
mov
mov
push
pushf
lea
jmp
stc
pushf
lea
jns
add
call
mov
jmp
mov
dec
pusha
pushf
stc
bt
add
pushf
dec
push
mov
mov
push
pushl
pushl
ret
cwtl
push
call
movsbw
rcr
xor
dec
mov
test
jmp
mov
jmp
jmp
call
shr
mov
stc
pushf
add
push
jmp
pushf
mov
pushf
movb
push
pushf
lea
jmp
pusha
push
lea
ja
bsf
clc
btc
mov
call
mov
movb
lea
jmp
cmc
clc
pusha
mov
sub
mov
test
cmc
shl
jmp
pushl
popf
movb
movw
movw
movb
lea
jmp
jmp
call
bt
rcl
ror
bswap
pusha
shl
test
xor
shl
btr
pushf
sar
xor
ror
clc
bswap
mov
mov
add
push
mov
push
pushf
mov
pushf
pushl
lea
jmp
clc
add
mov
movb
pushf
lea
jmp
clc
stc
shr
pushl
pushf
call
call
jmp
cmc
rcr
and
ror
shld
sub
or
mov
cmc
call
rol
mov
pushf
pushl
not
jmp
rep
rol
mov
pop
mov
bt
cld
test
call
call
