lock
daa
add
push
mov
hlt
lret
jge
insl
rep
icebp
mov
ss
or
mov
loopne
mov
adcl
ret
stos
dec
orl
cs
into
adc
stos
inc
cmc
popf
inc
push
xchg
inc
repnz
or
cmpsl
inc
in
inc
dec
sub
aas
xchg
pop
cmp
dec
jne
push
xchg
mov
pop
push
lock
xor
fsub
and
movsl
xchg
xchg
jmp
dec
xor
mov
mov
pop
sahf
xchg
cmpsb
in
push
out
mov
lahf
xchg
cmp
insl
push
mov
test
sub
mov
dec
sbb
test
add
push
mov
sbb
stos
stos
jmp
mov
mov
sti
dec
mov
or
jnp
out
dec
or
inc
js
je
jb
arpl
jae
movsl
out
add
jbe
test
dec
dec
outsb
pushf
xchg
cwtl
mov
mov
push
push
aaa
and
into
imul
in
mov
xor
lret
es
lahf
arpl
scas
std
js
imul
adc
jl
jns
lock
sbb
push
stos
mov
cmc
mov
pop
inc
adc
int3
movsl
and
jecxz
pop
lods
leave
jg
icebp
mov
mov
push
inc
mov
outsb
adc
sbb
dec
fs
sti
dec
mov
pop
inc
scas
xchg
push
xchg
int3
jne
sbb
add
fs
imul
add
add
je
outsl
fs
gs
imul
add
imul
rol
and
lods
push
stc
jmp
ror
dec
inc
jmp
mov
jp
stos
mov
mov
pop
adc
mov
sub
movsb
into
sub
fldl
push
daa
adc
inc
push
pop
jg
fwait
cmpsl
fwait
imul
fwait
mov
aaa
movsb
enter
mov
jnp
cwtl
les
rorb
orb
add
mov
mov
xchg
xchg
rorb
loopne
add
pop
call
mov
push
scas
cmc
mov
call
cmpsl
mov
aaa
stos
into
outsb
enter
or
mov
je
inc
es
push
add
or
xchg
sbb
push
scas
jle
in
add
mov
jmp
loopne
out
sbb
loopne
push
decl
dec
cmp
sub
push
pop
test
add
or
mov
rorl
sti
out
fildl
loopne
adcl
addl
or
mov
insb
fidivrl
mov
xchg
jnp
sbb
pusha
jae
call
add
sbb
jno
call
adcl
or
xchg
sbb
cmp
add
or
sbbl
add
add
test
cs
or
mov
mov
or
xchg
sbb
js
xchg
push
adc
lock
mov
cltd
cmpsb
iret
dec
js
pop
cwtl
or
mov
lock
push
lock
mov
jae
into
pop
cwtl
push
push
loopne
adcl
add
loopne
mov
cwtl
repz
sbb
pop
add
or
mov
ret
jbe
shlb
lea
in
xchg
js,pn
add
mov
or
mov
sub
mov
mov
mov
or
mov
adcb
pop
pop
call
or
jo
pusha
test
mov
sbb
scas
scas
cwtl
xchg
pop
loopne
mov
mov
rorb
push
mov
xchg
adc
mov
mov
add
mov
call
stos
pushf
lea
jmp
jmp
pushf
jmp
movw
lea
jge
inc
pushf
jmp
call
mov
movb
pusha
lea
jmp
movb
shr
cmp
push
stc
cmp
jmp
pushl
jmp
mov
call
push
call
pushf
jmp
stc
rol
bt
cmp
setge
jmp
imul
gs
xor
cs
insb
add
test
pushf
pushl
jmp
mov
or
mov
pushf
movw
lea
jne
pusha
pushf
seta
inc
mov
cmp
or
movw
lea
je
movsbw
bswap
seta
movzbl
lea
lea
lea
movzwl
movzbw
mov
push
pushf
lea
pushf
lea
jb
not
mov
push
push
lea
call
pusha
pushl
pushf
mov
lea
jne
cwtl
lea
mov
pusha
pusha
push
lea
jmp
inc
add
or
neg
inc
rcr
xchg
bts
mov
adc
mov
stc
mov
push
clc
mov
adc
pushf
dec
mov
call
mov
or
xchg
test
lods
mov
xchg
insl
imul
paddw
cmpsl
mov
cltd
add
dec
sbb
cld
xlat
jae
movb
xchg
xrelease
js
sub
jae
push
pop
pop
stos
mov
mov
push
xchg
ror
and
and
fs
jae
stc
clc
xor
jmp
jmp
adc
fldenv
cmp
xchg
push
mov
jge
insl
xchg
outsl
jge
jno
ja
rcrb
ret
cmp
jmp
adc
out
jp
push
mov
shrl
mov
inc
jbe
das
pop
push
pop
xor
mov
stos
sub
xchg
cmp
mov
mov
dec
aam
hlt
frstor
push
pop
or
cmc
xchg
push
jbe
push
aaa
sbb
test
add
mov
cli
ljmp
roll
cmp
add
loop
clc
mov
and
loopne
pop
push
daa
pop
repz
xor
arpl
pop
adc
or
ja
in
sbb
bound
fwait
jecxz
clc
mov
call
mov
scas
jecxz
imulb
mov
pop
fadd
test
jmp
adc
insl
cltd
arpl
mov
adc
push
push
orl
fbld
xchg
in
push
sbbl
dec
add
push
fmull
and
leave
and
out
aaa
cmp
scas
inc
xor
faddl
dec
pop
mov
insb
sub
mov
xchg
xchg
js
inc
pop
pop
test
les
dec
insb
inc
jo
xchg
rcll
nopl
add
mov
inc
mov
mov
imul
mov
pop
inc
mov
popa
pop
rcr
into
stc
outsb
cmp
xchg
mov
mov
mov
cmp
pushf
mov
and
sarb
popa
jno
dec
scas
mov
xchg
push
cmpsl
pop
mov
sti
cltd
gs
movsl
mov
mov
inc
mov
xchg
mov
in
cmp
adc
lock
and
push
xchg
shr
push
xchg
mov
je
movsb
mov
dec
shlb
jo
sahf
scas
gs
jo
push
inc
push
cmp
cltd
mov
or
mov
jbe
lret
mov
mov
mov
dec
gs
int3
push
mov
pop
add
ud2
adc
pop
or
out
jecxz
dec
push
push
pop
xlat
inc
inc
mov
pop
loop
xor
loopne
ret
push
push
xchg
shll
push
jg
lea
adc
call
cmp
faddp
xor
xor
es
or
sbb
scas
or
pop
inc
pop
cmp
adc
sub
rorl
rolb
pop
mov
fldt
test
lods
mov
mov
movsl
dec
push
or
mov
add
cltd
cmp
test
roll
cmp
cs
imul
xchg
aam
out
sub
fwait
imul
in
lock
sbb
push
or
loopne
or
call
push
cmpsb
adc
mov
sub
cltd
fs
xchg
test
dec
push
or
fimuls
sub
lret
dec
xchg
sub
cmp
mov
xchg
insl
xchg
xor
cmc
pop
icebp
std
movsl
cmp
es
jg
leave
push
sbbl
popf
and
outsb
test
pop
lret
xor
lods
mov
mov
inc
pop
mov
iret
cmp
dec
ret
fwait
lods
add
dec
into
xchg
imul
imul
leave
sbb
movsb
mov
adc
mov
add
add
iret
mov
dec
scas
cmp
pop
fcoms
orb
rcrl
mov
add
cmp
jae
insl
sarb
push
ljmp
jge
outsb
adc
lcall
out
je
cltd
push
mov
inc
lahf
mov
mov
insl
lea
jmp
mov
inc
xor
pop
add
dec
mov
dec
push
push
push
stos
mov
pop
stos
in
imul
mov
lods
inc
push
inc
scas
pop
or
fcomi
lret
xor
sub
cmp
inc
mov
loopne
outsl
stos
pop
aad
xor
out
pop
pop
add
pop
ret
into
adc
sbb
clc
in
in
clc
cmpsb
mov
out
outsb
stc
xlat
aaa
in
cmp
aam
popa
jl
add
push
jl
xchg
aad
sbbb
popa
mov
clc
in
in
jl
subl
push
sti
popa
test
or
cmp
mov
insb
jnp
mov
imul
fwait
xchg
mov
mov
mov
and
cs
test
or
ror
fwait
xor
mov
push
jbe
xor
imul
and
push
mov
stos
mov
xor
pop
enter
jns
dec
popl
add
dec
mov
clc
xlat
ja
mov
mulb
lea
das
mov
mov
mov
aad
push
jbe
lods
lret
or
ljmp
jno
popf
aaa
mov
sub
sub
clc
aaa
push
jno
jbe
xchg
pop
test
insb
mov
gs
leave
mov
icebp
push
jne
pop
mov
stos
sub
lea
pop
mov
xchg
mov
aas
pop
dec
fdivs
rorb
bound
stos
push
adc
jae
cwtl
jl
dec
insb
lods
mov
dec
movswl
sub
lret
mov
mov
and
stos
pop
lret
leave
sub
mov
cmp
test
clc
mov
loope
jl
lods
mov
fwait
les
mov
imul
push
jbe
mov
pop
leave
sub
test
fcomps
fwait
and
jo
das
xchg
xchg
xchg
cmpsl
pop
ret
jmp
push
add
dec
and
stos
lea
ljmp
xchg
jnp
pop
cwtl
imul
int
and
pop
xchg
ja
push
and
mov
stos
and
jecxz
cli
fmul
push
mov
rolb
lods
mov
movsl
imul
call
push
lret
lods
push
insl
repz
sub
mov
adc
pop
fcmovb
je
and
sub
mov
mov
mov
and
std
pop
sub
sbb
pop
lret
insb
or
or
popf
sbb
div
mov
cld
cmc
stos
sub
out
fsubs
mov
jnp
pop
pop
adc
jecxz
test
xchg
in
aaa
push
jmp
fisttpl
imul
js
icebp
adc
xchg
cwtl
sub
lods
fsub
push
bound
and
jecxz
sub
inc
jecxz
push
fdivs
xor
jbe
pop
mov
cmp
stos
sub
pop
mov
xchg
and
movups
dec
lret
dec
dec
jbe
push
xchg
mov
jecxz
mov
mov
push
and
sub
sub
aam
mov
mov
outsb
fwait
dec
sub
sub
pop
in
mov
and
mov
arpl
jae
dec
adc
mull
push
mov
and
fwait
ds
arpl
mov
jno
rcl
xchg
xor
orl
mov
cmpsb
cmp
out
lods
jb
clc
ja
and
push
cmpsl
push
mov
jmp
ja
aam
jecxz
pop
push
pminsw
arpl
mull
imul
and
and
adc
adc
and
and
mov
dec
cmpsl
loop
adc
xchg
loop
and
dec
push
xchg
bswap
jmp
sub
mov
xchg
mov
in
dec
or
xlat
adc
push
mul
xchg
test
cmpsb
push
xorb
cmove
jecxz
mov
cmpsl
jecxz
cmc
stos
loop
test
jecxz
push
and
fcom
lods
xchg
mov
mov
mov
das
pop
jne
insl
shlb
std
and
mov
sub
ljmp
dec
imul
lock
aad
out
mov
loop
jnp
push
mov
cwtl
or
or
outsb
and
or
fcoms
or
cwtl
insb
imul
or
push
mov
jae
ljmp
fadd
dec
test
rcr
mov
inc
scas
sbb
shll
insl
xchg
lock
or
push
xchg
jb
or
cmc
pop
movsl
jo
insl
xor
lods
stos
fcmovnu
mov
imul
and
stos
jnp
and
or
and
lret
insl
dec
mov
das
rcll
or
push
mov
imul
jbe
mov
sub
inc
test
jno
pop
adc
in
and
rclb
mov
jbe
and
shrl
or
test
xchg
ja
out
xor
jmp
cmp
xchg
ret
dec
pop
test
pop
or
jbe
pop
mov
divl
loop
xchg
jb
test
sbbl
adc
outsb
mov
lret
mov
lret
imul
roll
adc
mov
movsb
jecxz
cmp
into
push
or
jmp
lea
pop
add
outsb
and
lret
popa
pop
js
aas
test
sub
or
lock
stos
or
mov
mov
adc
repnz
test
lret
fwait
pop
and
insl
mov
mov
adc
dec
adc
pop
in
pop
fwait
cwtl
and
or
imul
fsubr
lret
dec
sub
pop
in
cmp
mov
lret
lea
inc
and
test
pop
js
or
mov
stos
xor
cmpsl
leave
xor
lret
shlb
sbbl
lret
jle
adc
push
cmc
out
test
pop
add
jmp
scas
call
xchg
jecxz
lea
and
jecxz
loop
or
xchg
pop
mov
push
lret
sbb
add
mov
dec
xor
jmp
mov
aam
xchg
leave
imul
dec
mov
mov
popa
lcall
xor
out
movsl
dec
cmpsl
ja
in
out
fstpl
das
addr16
jae
popf
icebp
cmpsb
xchg
jecxz
test
iret
js
mov
mov
dec
test
mov
lret
push
sahf
and
cwtl
mov
mov
cwtl
mov
movsl
push
lock
shlb
loope
cwtl
cltd
loop
dec
jo
sub
scas
jb
nop
cmpsb
aaa
inc
mov
jb
lods
cmp
lods
or
dec
mov
imul
mov
xchg
adc
js
test
lret
test
jmp
stos
mov
ljmp
jp
and
pusha
loop
test
into
and
mov
sarl
mov
dec
sub
and
push
sbbb
push
aad
inc
loopne
scas
xchg
xchg
mov
cmc
inc
cmp
cmc
lret
rolb
sets
scas
sar
sbb
sbb
fcom
mov
adc
add
mov
mov
mov
fdivrs
push
jae
insl
dec
test
add
push
jae
mov
loop
mov
and
xchg
jp
cwtl
orl
or
xor
loopne
xchg
insl
out
dec
lret
pop
stos
rcr
imul
xchg
aaa
mov
pop
rcrl
lret
add
lea
lret
fdivs
sub
in
push
xchg
mov
insb
mov
or
stos
mov
lret
stos
xor
repz
lret
rolb
jp
sbb
jmp
sub
adc
jecxz
jecxz
adc
jne
into
cmc
loop
pop
push
mov
shl
std
and
adc
into
mov
imul
aam
sbb
aas
jp
cwtl
test
clc
iret
sahf
mov
andb
xchg
sbb
sbb
push
ljmp
xchg
xor
dec
mov
or
lahf
sbb
mov
scas
test
icebp
jno
mov
dec
jge
or
lret
adc
and
mov
clc
movsl
sahf
mov
jb
cmc
lret
daa
fnsave
into
sub
orb
sub
mov
in
call
jge
jbe
mov
dec
testl
mov
mov
cmp
push
cmp
mov
pop
xchg
fbld
imul
inc
mov
incl
scas
dec
orb
and
cmp
cmpsl
mov
push
cmpsl
sub
or
clc
je
jmp
cmc
mov
lret
mulb
sbb
sbb
imul
jg
idivl
pushl
or
fwait
in
loope
jnp
lret
jmp
dec
mov
popa
or
test
in
mov
fsubr
imul
dec
xchg
mov
fwait
imul
and
outsl
mov
fnstcw
andl
lret
cmc
push
bound
lods
xor
loope
and
push
sbb
in
aad
sub
scas
mov
bound
mov
sub
and
in
ss
addl
shll
fwait
cmpsb
sbb
insl
sbb
imul
xchg
pushf
sarb
je
mov
jbe
mov
pop
jo
jno
jnp
or
dec
mov
jl
xchg
xchg
jnp
cmpsb
in
outsl
mov
dec
dec
cwtl
popf
sub
jmp
pop
aas
mov
dec
jecxz
int
or
mov
mov
mov
mov
and
outsb
mov
ret
cltd
and
cmpsl
clc
dec
adc
add
mov
in
sbbb
fildll
ret
add
lods
mov
outsl
data16
ja
fs
popa
jnp
sti
push
lcall
insb
fwait
xchg
sarl
data16
jmp
loope
inc
sbb
loope
outsb
cmpsb
out
fwait
sbb
mov
je
movl
inc
fs
popa
pop
xchg
cmp
bound
hlt
movsb
pop
in
push
push
mov
mov
sahf
callw
jmp
add
clc
add
jge
bound
and
punpckhwd
in
inc
xlat
push
pop
mov
ret
sbb
test
cmpsl
xor
notl
cltd
mov
addr16
mov
xchg
and
popa
addr16
je
test
pop
cli
stc
ds
fwait
cmc
out
outsb
repnz
int
test
fildl
addr16
mov
jmp
cli
divb
rcr
xchg
jmp
imul
jne
lds
shll
jg
nop
cmc
inc
ret
js
lret
repz
or
icebp
or
and
daa
jg
in
push
and
sti
loope
mov
ret
cmp
and
cmp
inc
outsb
rcrl
in
out
lods
das
xchg
sub
cmpsb
gs
lock
inc
push
jecxz
push
test
dec
dec
lea
cli
test
add
mov
outsl
in
mov
xchg
cmc
fsubrs
jne
insb
addr16
rorb
out
ret
mov
lea
roll
outsl
ljmp
lds
jns
leave
push
jno
enter
sti
xchg
mov
inc
cmp
insl
or
and
push
xor
pop
jg
inc
sbb
mov
dec
pop
jnp
jo
bound
pop
mov
aad
pop
stc
scas
add
lret
cli
sti
out
or
adc
fcomp
xchg
push
cmpsl
xchg
arpl
mov
mov
sbb
ficompl
jecxz
test
cld
jmp
cmp
je
out
cli
popa
imul
cmp
mov
pop
jmp
ss
fs
or
push
pop
lret
je
add
fwait
adc
xor
out
lods
loopne
sti
pop
pop
loope
sbb
popf
or
adc
scas
lahf
sarl
lea
add
dec
je
jbe
jecxz
xlat
js
sub
mov
xlat
mov
outsl
mov
jo
push
pop
loope
sub
inc
xchg
xchg
fs
xor
orl
inc
iret
sbb
lods
xchg
push
roll
push
pop
outsb
aaa
inc
mov
xor
xchg
jo
in
testl
xor
in
gs
in
push
popf
in
das
sub
inc
xchg
lea
cli
insb
adc
jb
or
cmp
jg
or
inc
or
cmp
daa
mov
sub
or
jg
nop
repnz
mov
and
jb
mov
subl
add
sarb
int3
jge
lods
es
addb
push
mov
hlt
mov
lret
outsl
xor
jns
push
inc
clc
stos
fsubr
imul
fsubp
jae
xchg
jns
inc
dec
dec
je
out
arpl
inc
out
and
inc
add
and
lea
mov
bound
fcoml
aaa
mov
mov
test
sbb
xchg
fs
cmc
add
jmp
lods
outsl
shll
cs
push
insb
inc
mov
shlb
jo
testl
mov
cmp
orb
prefetchnta
mov
cmpsb
sub
mov
jmp
push
insb
data16
sub
bound
add
out
testl
outsb
cmp
loop
outsl
loope
iret
xchg
inc
add
out
xor
lods
push
cmpsl
sbb
addr16
jecxz
lea
outsb
inc
and
stos
hlt
mov
xchg
stos
and
dec
pop
stos
or
pcmpeqb
push
outsb
push
pop
loopne
negl
and
call
lret
lods
mov
in
and
mov
es
cmpsl
js
cmp
jo
jae
mov
dec
dec
inc
int
mov
sbb
and
jnp
fs
pop
mov
cs
cmp
add
out
dec
gs
pop
jecxz
nopl
jne
push
xchg
push
lcall
xor
mov
jge
add
in
out
int3
lods
ljmp
dec
call
add
addr16
mov
rorl
jp
and
outsl
jne
mov
mov
gs
cmp
push
loopne
bound
cmp
fidivrl
outsl
push
ja
mov
xchg
aad
xor
jne
pop
fidivrl
or
and
stos
mov
sbb
mul
int
push
sahf
jmp
mov
insb
repz
insb
mov
lods
push
scas
jge
inc
mov
ret
lahf
jbe
or
mov
jns
test
data16
in
xchg
xchg
insb
lahf
push
dec
xchg
popa
or
add
test
out
movsl
call
sub
in
jecxz
mov
jo
imul
mov
pop
outsb
mov
push
mov
lcall
addr16
mov
mov
shlb
mov
lock
pushf
mov
hlt
and
popf
repz
fidivrs
and
lods
dec
and
jecxz
int
lret
cli
xchg
inc
in
inc
loope
out
dec
cmp
push
push
stos
jecxz
pop
lock
adc
jg
sti
dec
push
aam
xchg
icebp
out
cmp
clc
arpl
push
jno
jle
out
sarl
or
sub
sub
lea
ss
fdivrs
aaa
testb
cmpsb
addb
add
dec
push
pusha
fimull
jecxz
xor
cmc
arpl
jno
mov
fisubl
popa
and
das
std
xchg
into
jo
scas
inc
mov
adc
out
xchg
les
dec
gs
xchg
rcl
push
cld
push
rcrl
je
jg
adc
mov
out
push
aad
pop
lahf
push
ljmp
jmp
xchg
push
insl
outsb
sarb
lock
lds
inc
in
dec
xchg
jle
int
fwait
out
arpl
imul
xor
out
mov
imul
test
mov
mov
mov
cmpb
sub
mov
dec
movsl
or
bound
adc
ja
cmpsl
add
and
sub
inc
les
stos
mov
xlat
fiadds
mov
in
sarb
popa
xchg
dec
test
jg
jmp
addr16
sub
xlat
sub
push
icebp
insb
std
jecxz
add
and
jge
or
insb
fldl
jo
mov
xor
aam
xchg
das
jbe
out
cmp
push
xacquire
jb
cwtl
cmovnp
jle
xchg
pop
shl
pusha
movsb
fs
arpl
jnp
je
sbb
jns
dec
sbb
jp
xchg
subl
mov
fwait
out
addr16
aas
mov
repnz
jo
add
jle
dec
lock
mov
data16
lahf
fists
add
rep
jmp
pop
and
jbe
in
mov
jno
divl
mov
sub
push
jge
pop
ficomps
enter
xchg
out
out
outsl
bound
stos
jno
iret
outsl
or
mov
pop
ret
xor
jge
stos
sub
imul
jp
imul
xor
cld
scas
jnp
ss
scas
negl
and
in
jae
xchg
icebp
push
push
loope
add
mov
call
fildl
stos
mov
mul
jno
mov
sbb
das
push
pop
pushf
imul
out
mov
sub
dec
xor
in
nop
rorl
jmp
stos
in
or
rcrl
loop
test
fwait
popa
data16
pop
jo
jmp
add
insl
jne
ss
and
and
scas
jo
out
ja
push
dec
jno
and
lea
or
jnp
lret
add
mov
and
sahf
pop
cwtl
mov
lds
xchg
or
sbb
int
call
mov
mov
mov
adc
repz
or
or
aam
xor
mov
lods
fildl
in
call
repnz
or
stos
jo
roll
outsl
mov
sub
insb
pusha
imul
xchg
test
adc
pop
push
add
xchg
pop
add
jl
gs
cltd
sti
cmp
push
or
andl
mov
dec
jbe
mov
ret
fstpt
outsb
sbb
test
arpl
adc
in
adc
push
jg
jbe
imul
insl
arpl
js
jg
stos
push
pop
stc
xchg
loope
add
les
fld
lcall
sub
stc
sub
repz
rcrl
out
movsl
mov
or
scas
pop
or
cmp
and
je
dec
enter
mov
sti
and
dec
jnp
and
or
les
sbb
push
popf
jns
pop
insl
fisubrs
lret
loope
jecxz
std
inc
push
iret
cmpsb
push
push
mov
fwait
daa
into
or
fiaddl
aas
sti
mov
push
push
and
sahf
inc
adc
inc
or
inc
or
cmp
cmp
lcall
notl
cltd
lcall
push
fwait
inc
mov
decl
fcompl
call
call
test
aaa
xor
out
fimull
fldenv
popa
sub
fiadds
jg
mov
push
enter
repz
mov
jl
cld
popa
dec
or
aad
or
data16
das
lds
mov
inc
out
xlat
adc
arpl
cmpsb
jg
cmpsb
data16
mov
mov
jg
hlt
jmp
sub
mov
lods
pop
and
pop
nop
notl
mov
fs
out
or
sub
mov
cmp
push
into
outsl
ret
jg
jb
lahf
xchg
cmp
add
imul
int
cmp
das
lret
push
mov
jns
jecxz
mov
fildll
movsb
popfw
ret
push
mov
test
test
insb
call
rclb
inc
das
test
jo
movsl
mov
and
xor
or
fisubs
loope
aam
xchg
jns
imul
or
imul
pushw
mull
jg
sbb
repz
jae
pop
lcall
imul
std
stos
xchg
push
test
nop
ss
cmp
out
orl
jns
xlat
xchg
movsb
cmpsb
cmp
and
sti
sbb
cltd
sbb
sub
xchg
sub
cmp
add
jmp
in
xchg
pushf
sti
sbb
xchg
lods
je
and
xchg
fs
jmp
push
mov
push
aas
jmp
sbb
in
outsb
mov
outsl
xchg
push
in
jae
dec
xchg
call
out
push
popa
mov
push
enter
loop
dec
pop
or
jmp
movsl
jg
sti
addr16
movsb
jmp
jmp
std
rcrl
jg
addb
inc
sub
dec
sarl
mov
push
sub
out
outsb
pop
popf
push
push
sahf
inc
fs
cmp
outsb
clc
call
push
xchg
push
lret
ficomps
dec
sti
jbe
or
mov
mov
inc
push
pop
cwtl
loope
ljmp
call
daa
dec
rcrl
je
sti
je
fiaddl
les
cmpsb
mov
push
sub
sbb
lock
mov
shufps
ljmp
xchg
lds
out
mov
out
ss
outsl
add
jnp
movsb
sbb
in
add
enter
and
add
xor
fwait
and
push
test
inc
xor
lcall
test
xor
daa
ficompl
pop
add
out
add
rorl
fcmovne
mov
mov
mov
and
pop
cmc
add
cmpsb
rolb
inc
stos
clc
loop
add
in
pop
scas
mov
clc
or
sti
addl
call
pushf
jg
stos
and
cmp
in
fisttpll
shlb
mov
fisubrl
nop
cltd
pop
push
outsl
in
push
inc
mov
movsb
cmp
dec
inc
jmp
xchg
cmp
mov
jg
aad
nop
mov
inc
lods
and
in
mov
lretw
cs
cmp
js
lcallw
movsl
mov
mov
or
stos
lods
xchg
insb
data16
xchg
fstpl
lea
cmp
test
adc
ror
cld
insb
les
jne
outsb
cmp
and
repnz
pop
inc
cmp
out
call
insl
pop
jg
jle
ret
scas
stos
std
lret
jne
repnz
sub
in
mov
mov
in
mov
or
std
cmp
push
cmpsl
loopne
lret
jbe
jmp
movsb
add
mov
mov
jnp
dec
mov
in
push
lcallw
out
push
mov
push
push
dec
cmp
mov
movsb
pop
mov
push
push
call
pop
or
test
sti
das
testb
orl
ret
pop
add
iret
mov
orl
adc
pop
outsb
loope
or
sti
push
dec
xchg
clc
addr16
or
in
or
bound
sub
adc
fbld
in
fcmovnb
add
xlat
outsl
test
sti
adc
xchg
pop
jb
mov
add
xchg
mov
inc
stc
lock
xor
outsb
mov
sub
push
cmp
add
lret
pop
insb
adc
stos
out
push
dec
mov
int3
adc
sbb
jne
aad
sbb
sub
hlt
dec
pop
loop
add
add
jp
jge
sbb
std
jmp
adc
adc
ja
mov
push
cli
imul
scas
or
gs
je
cmpsl
adc
js
or
inc
into
call
stos
lods
out
mov
mov
xchg
movsl
incl
out
add
daa
and
jb
jge
ret
xchg
sahf
outsb
mov
cmp
mov
scas
jae
rolb
in
scas
xor
in
lcall
adc
dec
add
lcall
sahf
fistpl
mov
jmp
add
sbb
fisttpl
stos
push
insl
xor
xchg
movsl
sti
jecxz
cmp
push
jae
enter
lret
and
inc
jg
mov
push
lea
faddl
jmp
add
dec
subb
xchg
cmp
insl
push
hlt
test
loop
in
imul
rorb
jno
fs
sbb
xor
jg
xchg
test
iret
jg
lock
dec
cmp
dec
shl
loop
sub
jg
mov
sti
xor
sarl
xchg
inc
jl
out
lret
xchg
push
gs
jns
sub
mov
add
dec
mov
xchg
jns
mov
mov
sbb
cmp
lcall
sbb
push
fwait
xchg
orl
ds
lock
push
add
lock
add
fiadds
ljmp
addr16
subb
test
fwait
pushf
dec
test
ds
movsb
cs
pop
adc
out
mov
fisubl
sub
fldcw
or
xchg
jns
ljmp
arpl
inc
test
mov
andb
jmp
mov
jo
pop
test
xchg
lcall
cmpsl
in
sub
push
add
loope
pop
mov
lret
stc
xchg
bound
sub
shl
lcall
jae
jns
jp
jnp
insb
and
push
in
mov
loop
dec
jns
jg
push
pop
shl
enter
dec
sbb
fcmovne
fildl
push
out
mov
fisubrl
popf
mov
in
rol
pop
xchg
lcall
out
fwait
mov
andl
dec
movsb
out
inc
jmp
inc
push
movsl
lea
sub
and
xor
addl
push
out
push
push
jne
push
es
jmp
data16
pop
cmpsb
cmpsb
ja
mov
addr16
test
mov
push
out
mov
std
rol
xchg
test
mov
fs
dec
xlat
lcall
mov
dec
fwait
fwait
jne
ret
cmpb
iret
ret
gs
call
test
or
int
scas
inc
fisubrl
in
shr
cmpsb
es
or
js
loope
sbb
insb
gs
or
out
or
mov
sub
jg
mov
movntq
push
fs
add
inc
mov
daa
jo
movsl
mov
cwtl
enter
movsl
data16
sahf
loope
or
or
jp
call
insb
stos
mov
js
jg
out
mov
popf
insb
arpl
cmpsb
add
push
and
jo
inc
into
aaa
and
or
mov
cmc
add
jecxz
mov
cmp
jle
pop
scas
mov
fstpt
mov
popa
sub
test
mov
fisubrl
outsl
insb
jg
mov
xor
lock
popf
popf
add
mov
jb
sti
fs
push
test
iret
loope
out
sub
nop
cmpsb
pop
mov
push
dec
sahf
shrl
or
dec
fcmovnbe
or
jb
cmp
inc
in
mov
add
add
das
inc
popa
push
pop
lret
cs
lods
jb
into
shlb
fs
out
lret
or
xchg
jmp
and
lret
iretw
imul
and
xchg
cltd
inc
cmp
jecxz
idivb
insb
lret
leave
jmp
bound
ficoml
cmp
xchg
aas
fwait
stos
popa
jg
adcb
inc
xchg
or
xor
lea
xchg
xchg
sbb
into
into
popf
sbb
sbb
addr16
jnp
out
xchg
sub
inc
fcmove
mov
int3
stc
sbb
pop
je
out
fsubr
and
ljmp
dec
cmpsb
call
fstp
xchg
and
pop
mov
scas
pop
and
mov
dec
out
ss
scas
idivl
ret
inc
xor
in
adc
or
add
sbbb
out
xlat
in
in
push
repz
push
nop
ja
inc
cmp
push
stos
push
je
leave
pop
roll
sub
sbb
popa
fistl
int3
scas
data16
push
cs
mov
in
pop
push
mov
pop
cmpsl
push
test
cmp
das
jne
or
or
cld
xor
mov
movsl
cld
xor
fisubrs
pusha
jnp
out
sub
lcall
jns
jb
inc
sahf
in
pop
jg
pushf
aam
xor
cmp
ds
or
xchg
jmp
lret
cli
and
xchg
cmp
lock
cmpsl
pop
ficompl
iret
leave
pop
or
dec
add
push
jge
jae
fwait
jmp
loop
pop
xchg
add
js
out
jg
lock
insl
xchg
jmp
test
cmpsb
jae
xor
scas
arpl
scas
aad
nop
pushf
mov
jnp
arpl
inc
and
imul
test
lds
fidivrs
addl
subb
mov
or
outsl
cld
mov
sub
pop
xchg
test
popf
insl
faddl
loop
mov
out
les
movsl
fildl
pop
push
shl
mov
lret
int3
lds
cmpsb
mov
adc
jg
mov
push
jecxz
fidivl
push
sti
mov
add
mov
fistpl
push
sbb
pop
jecxz
mov
push
jle
fwait
cmpsb
ljmp
sbb
in
and
mov
push
lret
xchg
fwait
jno
ror
out
out
cmpsb
movl
jg
mov
or
mov
mov
popf
rolb
stc
mov
jae
shrl
sbbl
popf
jle
xlat
rol
and
xchg
dec
jg
push
lea
insb
mov
cmp
pop
xchg
adc
lret
aaa
outsb
icebp
jmp
jge
jmp
cmp
hlt
les
xchg
mov
arpl
jbe
dec
aam
cmp
out
fsubrl
int
push
in
or
pop
lret
lahf
xor
sbbb
mov
cmp
in
stos
fwait
jge
sub
sbb
lds
fcmovnu
inc
mov
push
sub
imul
shrb
lret
outsb
or
jmp
cmp
shlb
out
mov
movsl
nop
cs
gs
daa
sbb
cs
nop
test
scas
cltd
xor
orb
jne
ljmp
jbe
fwait
les
jne
jge
mov
stos
sahf
mov
or
and
or
arpl
sti
jno
les
out
test
sahf
jnp
fwait
or
lret
aam
jo
jnp
cmpsb
mov
imul
xchg
xor
cmp
pop
mov
pop
mov
imul
fwait
mov
inc
xor
out
add
jp
out
dec
loopne
lcall
rcll
roll
fcmovb
scas
or
daa
adc
or
decb
and
inc
hlt
int
dec
andl
jae
loop
insb
jnp
fcmovb
mov
jle
shl
pop
jg
mov
std
leave
dec
int3
cmpl
jb
mov
daa
dec
sbb
imul
sub
inc
push
add
icebp
xchg
add
mov
jp
jbe
jae
out
je
jae
jmp
cmp
jb
add
das
and
dec
test
mov
jb
int
addl
repnz
vpshuflw
les
cmpsb
stos
xor
or
fwait
pop
ss
fwait
nop
mov
mov
stos
cmpsl
dec
mov
inc
imul
fwait
mov
loope
mov
pushf
sti
in
out
inc
out
mov
xchg
into
dec
jbe
sahf
les
add
ja
sbb
pop
test
pop
imul
dec
mov
or
adc
xchg
gs
test
mov
fwait
loop
in
dec
test
cmp
rclb
fcmovu
out
push
je
out
xchg
jp
inc
stos
cmp
jns
mov
dec
les
and
lret
push
cmpsl
movsb
in
push
jbe
cli
je
jns
adc
xchg
sbb
lcall
jmp
in
and
inc
pop
arpl
add
outsl
inc
cmp
pop
lcall
and
mov
cmp
pop
fwait
test
insb
mov
faddp
jg
dec
cld
les
bound
pop
lods
in
sbb
mov
pop
cmpsb
lret
jne
mov
and
lcall
xchg
jmp
ret
jg
mov
add
push
mov
ret
int3
out
jmp
jecxz
ljmp
iret
pop
cmc
jle
mov
ljmp
insw
xor
data16
out
push
popa
in
or
insb
or
jnp
mov
ret
les
xchg
cmp
jnp
shrl
mov
pop
sbb
push
dec
xchg
or
adc
cmpsl
adc
or
or
dec
int
hlt
ss
inc
lods
mov
cmpsl
or
adc
jg
scas
mov
adc
cmpsl
dec
jmp
lahf
mov
data16
cmpsl
mov
cmp
andb
inc
push
jg
js
mov
mov
jmp
jae
pop
addr16
push
mov
push
shll
adc
push
pop
cltd
sbb
sub
call
jae
sahf
pop
push
test
mov
mov
aas
xchg
aaa
in
xchg
lahf
cs
in
cmpsb
enter
out
lret
pushf
mov
scas
and
outsl
movsl
in
push
push
fwait
arpl
xchg
mov
add
jae
adc
in
sub
mov
xchg
mov
xchg
mov
stc
cmp
bound
lods
outsl
jg
xlat
stc
jmp
movsb
pop
aam
push
scas
lret
jmp
out
lds
mov
xor
insl
cmp
icebp
repnz
cmp
pop
mov
ret
inc
push
jmp
adc
sbb
ret
sbbl
jp
mov
fs
add
push
fdivrl
fildll
xor
pop
add
xor
out
jmp
stos
mov
cmp
pop
imul
aad
jbe
sti
fimull
and
sub
xchg
xchg
out
das
mov
pop
daa
in
mov
lcall
iret
test
pop
xchg
out
out
cmp
add
std
lret
xchg
sbb
add
lss
outsb
nop
test
sub
aam
inc
mov
add
repz
inc
adc
sub
daa
mov
lret
hlt
or
inc
js
cmp
test
mov
inc
sarl
cmc
mov
imul
shll
mov
mov
jg
cld
outsl
loop
adc
call
jg
sub
jge
imul
jmp
or
cwtl
int
pop
movsb
negb
insb
adc
rorb
es
xchg
add
movsl
adc
movsl
pop
ret
decb
cmpsl
fidivs
push
jbe
jecxz
out
push
pusha
dec
push
xchg
inc
addr16
clc
push
inc
inc
xchg
lock
decb
das
std
daa
test
sbb
xchg
fwait
xchg
test
into
jecxz
lret
test
cld
mov
gs
test
and
sti
add
fldt
cwtl
cmp
mov
mov
cmp
cld
jl
leave
test
lret
push
mov
push
pushl
rol
or
cli
fwait
or
dec
inc
xchg
test
jecxz
lock
imul
rorl
mov
adc
cmc
dec
int3
xchg
or
sbb
jmp
cwtl
lods
outsb
cmp
xchg
jmp
test
mov
mov
imul
ficoml
add
ret
and
and
stos
jo
aam
insb
add
bound
hlt
pusha
stos
sbb
bound
mov
pop
sbbl
daa
stc
ret
stos
sbb
cltd
dec
fidivrl
mov
push
mov
je
xchg
test
sub
ja
xchg
xchg
rolb
fisubl
sbb
push
ret
push
fwait
ja
fsubrp
jle,pt
mov
or
adc
aad
or
movsl
pop
mov
dec
fstpl
incl
sbb
sub
or
add
pop
nop
mov
or
jbe
jg
mull
insl
push
mov
xor
jns
xor
jle
xchg
outsb
stos
out
dec
movsl
stc
stos
out
jne
and
mov
das
sti
or
int
data16
imul
cltd
rol
adc
bound
dec
adc
call
cmc
lds
outsb
xor
aaa
xchg
sub
jecxz
cmpsl
push
mov
mov
and
in
mov
mov
mov
jecxz
mov
jle
lahf
jp
and
adc
pop
jbe
test
inc
jae
push
ds
cmpsl
pop
jecxz
cwtl
xchg
test
mov
imul
call
in
into
jne
stos
lea
mov
dec
adc
inc
mov
cmp
xlat
jle
xchg
add
scas
or
push
imul
fldt
repz
es
cmpsb
in
imul
out
daa
dec
popa
out
movsb
je
outsb
push
popa
mov
jno
lret
icebp
or
data16
jnp
add
lds
popa
push
insl
leave
fistpl
cmp
leave
add
in
fwait
scas
ss
jbe
jg
scas
dec
jge
sub
test
lret
lods
sti
xchg
outsb
ljmp
xchg
insb
inc
out
aad
popa
push
test
test
add
fs
sbb
hlt
jecxz
lret
popa
jo
or
pushf
cmp
xchg
lea
add
rcr
adc
mov
pop
in
clc
cmpb
dec
pop
jo
loope
enter
add
out
jg
popa
mov
fistpl
lods
out
pop
pop
ret
out
lret
sub
in
aad
dec
fsts
lcall
leave
fisttpl
mov
insl
ret
shll
pop
enter
sbb
lods
sahf
pop
je
or
cmpsb
inc
dec
clc
insl
loope
out
pop
nop
into
mov
and
inc
pop
clc
xor
inc
mov
xor
push
sbb
inc
insb
fdivrl
add
arpl
pop
fs
pushf
in
into
int3
into
and
sub
adc
push
dec
mov
ret
dec
xchg
adc
add
fdivs
mov
pop
and
sub
mov
ffreep
cmp
jnp
out
xor
scas
fimuls
jp
xor
pusha
xor
pop
jb
stc
pop
sub
fs
add
inc
jmp
push
subl
test
jns
push
sub
mov
inc
jle
and
push
aad
and
popf
fcoml
xor
jne
lahf
leave
jae
dec
sbb
stos
subl
jg
arpl
imul
add
jmp
pop
sbb
mov
add
mov
sub
jns
out
sub
mov
push
insl
loope
scas
lret
andb
cmp
mov
jno
dec
das
les
js
adc
gs
dec
mov
jg
or
in
jns
nop
inc
cs
jg
xchg
outsb
xor
push
push
lock
arpl
in
xor
cld
es
fs
out
imul
mov
call
add
jnp
cli
add
jae
bound
movsl
mov
inc
cli
dec
movsl
lcall
stos
lcall
into
add
jno
iret
jg
cmp
or
out
jp
push
loop
mov
add
add
pop
adc
xchg
mov
mov
or
cmp
into
je
mov
roll
popa
das
and
sbb
pop
lahf
or
xchg
enter
add
nop
cltd
popf
cmp
jle
or
inc
mulb
cmp
jns
aas
ud0
sbb
inc
mov
jbe
jae
js
mov
scas
ret
gs
mulb
inc
cmpsl
mov
inc
jmp
lds
pop
roll
xor
stos
pop
adc
popf
xor
and
cmpsb
jecxz
jle
lds
lcall
push
mov
cmpsl
inc
xchg
xchg
inc
mov
clc
pop
rorl
mov
fwait
out
or
mov
lcall
das
jno
and
pop
and
jp
mulb
sahf
in
push
fimull
into
rcrl
gs
scas
inc
out
jmp
xor
push
in
dec
jecxz
imul
mov
mov
movsb
jg
shr
cmpsb
ljmp
cmp
jl
fcmovb
jne
loop
push
repnz
sbb
xchg
out
push
es
out
adc
outsl
je
mov
scas
out
loop
adc
xchg
pop
std
push
test
fldln2
test
loopne
in
inc
dec
sbb
dec
repnz
int
sub
idivb
ret
or
mov
pop
push
imulb
jmp
gs
lcall
lds
jg
add
xchg
jge
jg
bound
icebp
lds
or
jmp
push
movsl
aam
mov
mulb
int3
pop
popf
lods
and
or
leave
sar
fcompl
aas
lea
mov
mov
push
jnp
stos
add
fndisi(8087
mov
ljmp
out
dec
or
mov
inc
dec
sub
ja
aam
xchg
inc
add
pop
ljmp
insl
or
jae
bound
out
dec
cmp
push
jnp
int3
rorb
fdivl
xchg
enter
jnp
jnp
stos
ret
xchg
jmp
adc
imul
fs
fstpt
push
cmpsl
mov
sbb
aas
div
add
int
dec
inc
scas
lods
movsb
loop
xchg
and
adcl
mov
ret
int
adc
fnstsw
xchg
or
inc
add
std
add
xchg
repz
inc
outsl
xchg
aaa
mulb
jmp
lods
or
out
push
and
push
jb
repnz
insb
hlt
inc
mov
push
ja
jb
std
and
xchg
subb
cmp
repz
hlt
mov
add
sbb
stos
mov
pushf
cmpsl
movsw
and
test
cmp
imul
adcl
outsb
test
insl
cli
push
mov
in
mov
cld
and
jnp
stos
pop
and
out
icebp
out
inc
xor
out
jnp
int
or
daa
das
xbegin
nop
lods
sbb
repnz
and
jp
mov
pop
daa
jp
shll
data16
enter
push
test
xchg
insl
adc
or
loop
jmp
xchg
movsl
ja
inc
xchg
into
or
or
pop
xchg
jno
nop
call
ret
icebp
xchg
mov
testb
push
jb
jmp
push
mov
stos
jne
rclb
and
mov
sub
jg
lea
in
and
addr16
cmpsl
or
cli
daa
shll
pop
test
lret
repz
pop
jne
mov
repz
mov
imul
xchg
lcall
pop
mov
mov
sub
fists
fld
jg
cmp
inc
stc
cld
add
sbb
mov
inc
lods
repz
mov
xchg
adc
lods
insb
lea
and
bound
sub
movsb
fisubs
int3
push
pop
xorl
lahf
cmp
arpl
dec
mov
xchg
jle
inc
xor
pop
arpl
or
loop
lea
xchg
shld
dec
xchg
push
in
sahf
sbb
out
loope
inc
fnsave
es
xchg
incb
in
rcl
out
lret
jg
and
add
push
sub
pushf
mov
push
jmp
jge
test
xor
cmp
cmpsl
mov
inc
test
lea
jmp
sbb
stos
lret
and
sbb
inc
stos
rcrb
sbb
xor
rolb
outsl
xor
jg
test
in
xor
lahf
or
dec
cmpsl
xchg
cmp
push
adc
stos
xor
andl
push
into
cmp
ret
addr16
icebp
mov
rorb
pop
mov
es
jge
and
popf
leave
sti
inc
in
mov
push
mov
sbb
jle
mov
mov
imul
clc
js
mov
out
mov
pop
inc
repz
mov
pop
lret
pop
add
lret
or
ret
xchg
loope
enter
lock
scas
int
cmc
js
popa
ret
jp
movsl
pop
lret
and
mov
sti
mov
jne
mov
bound
mov
test
fisttpl
jnp
jns
fs
jge
jmp
stos
clc
shrl
push
fs
jge
pop
imul
fcompl
sub
and
jmp
aad
mov
es
ficomps
and
stos
dec
fisubrl
inc
js
fsts
lcall
arpl
pop
xor
lods
mov
orl
imul
out
dec
out
mov
int3
fwait
int
jg
movsb
jmp
jp
adc
mov
xor
add
movsl
jg,pn
addl
aam
and
lods
mov
imul
or
push
xchg
lret
test
imul
jmp
dec
pop
js
jnp
cmpb
movsl
pushf
enter
mov
xchg
add
ficompl
push
mov
inc
out
js
mov
adc
scas
add
out
daa
js
cmpsb
push
leave
aas
sbbl
add
and
stos
mov
or
stos
popa
sub
push
test
push
in
inc
testl
fisubrl
xlat
aad
inc
out
cmpsw
mov
ret
adc
dec
mov
jmp
fcmovne
int
push
lret
jg
jp
mov
punpckhbw
push
ljmp
adc
pop
cmp
push
add
js
jp
aad
sahf
fwait
jbe
jp
jmp
xchg
mov
add
cmp
data16
imul
jb
jmp
jbe
mov
test
mov
and
inc
push
xchg
mov
int
dec
repz
in
xchg
pop
mov
mov
jg
pop
mov
loop
ficoms
cmpsb
xchg
mov
in
xchg
pop
sbb
xor
add
popf
js
add
clc
adc
inc
loop
jg
negl
dec
out
mov
ret
fcmovnu
data16
fcompl
inc
sahf
cmp
fbld
xchg
loop
mov
fs
mov
hlt
in
push
xchg
and
xchg
mov
test
cmc
das
mov
mov
or
bound
sub
inc
lret
imul
xor
mov
fsubr
push
xchg
cmp
std
adc
cmpsl
out
fcmove
jmp
js
mov
orb
add
cmpl
loop
jmp
xor
scas
fs
in
bound
jecxz
popa
add
adc
push
push
les
jg
lods
xchg
cli
loope
in
lret
add
push
or
mov
popa
and
jp
or
test
arpl
je
push
in
incb
ret
test
mov
je
jbe
xor
cmpsb
jmp
or
add
cmp
lret
add
jns
and
mov
stos
fstpt
inc
arpl
wrmsr
cld
push
jge
ret
inc
adc
shlb
sbb
lods
inc
mov
push
inc
adc
iret
mov
cmpsb
test
lahf
and
cmp
add
dec
les
mov
jg
mov
sbb
add
test
lret
fnstcw
mov
dec
xor
cmp
add
jbe
xchg
insb
ljmp
call
jmp
xchg
pop
dec
jg
in
hlt
insb
sar
jmp
aad
in
out
imull
cmpsb
mov
imul
push
and
xor
nop
xor
fldt
dec
jg
xchg
cwtl
nop
inc
nop
inc
jo
inc
std
mov
inc
mov
push
adc
add
adc
popa
push
dec
dec
popf
iret
setp
rolb
pop
data16
cld
or
test
adc
xor
adc
jmp
cmp
ficompl
call
and
imul
jmp
push
mov
push
mov
daa
es
fcmovnbe
fidivrs
mov
lret
aam
cmp
and
add
inc
sbb
push
cmc
and
add
test
sub
push
sbb
das
out
into
fcoml
push
inc
add
push
mov
insb
lahf
mov
or
xchg
xor
test
ret
lret
gs
mov
outsb
adc
mov
xor
out
inc
mov
les
inc
sbbb
fcmovbe
dec
cs
push
leave
cmp
push
pop
cmp
adc
cwtl
jbe
xlat
pop
loop
add
ret
fiaddl
movsl
in
push
mov
arpl
mov
dec
std
xchg
xchg
fs
push
ret
sub
lea
sahf
enter
je
in
push
cmp
sbb
movsb
xchg
xor
add
mov
jmp
or
popf
lock
sub
aas
arpl
cmp
or
scas
xchg
mov
arpl
test
or
in
dec
fwait
out
inc
and
push
sbb
and
shr
sbbb
adc
rorl
dec
lea
mov
jge
scas
hlt
cmpsl
adc
lds
test
xchg
cmc
repz
push
push
aam
jge
pop
xchg
fcoml
inc
outsb
or
and
xchg
mov
dec
fiaddl
lock
test
stos
xchg
sbb
xor
inc
outsb
fwait
ljmp
enter
sbb
int3
in
ret
cld
mov
aaa
bound
jmp
fsubrs
out
and
out
das
sti
jg
mov
lock
xor
cmc
insl
mov
lret
push
inc
test
xchg
jecxz
push
icebp
lret
sbbl
arpl
inc
push
cmp
push
push
test
arpl
addb
xchg
sub
out
out
push
mov
xchg
sub
loopne
jmp
cld
insl
sub
idivl
jnp
imulb
fs
mov
movq
insb
jns
xchg
jg
js
push
cmp
movsl
movsl
pop
add
stos
cs
sbb
push
mov
mov
jmp
sbb
rcrl
repnz
and
mov
movsl
xchg
and
outsb
xchg
les
scas
push
cs
and
addr16
jmp
in
adcb
xchg
gs
popl
push
int3
rol
xrelease
push
pushf
add
jae
jmp
sbb
sbb
dec
popf
cwtl
mov
jbe
jbe
test
popl
cmpsl
lods
movsl
aad
jge
inc
and
jns
ret
and
loop
cmp
fs
out
call
loope
out
and
and
repz
mov
and
movsl
lock
ficomps
loopne
inc
pop
ss
sub
loop
mov
sbb
mov
jg
scas
jmp
mov
imul
mov
imulb
dec
add
fwait
and
lret
leave
inc
lret
or
xchg
sub
in
adc
push
fwait
sub
jbe
sub
push
inc
cltd
cmpsb
out
add
aad
dec
into
imul
or
divl
xchg
adc
popa
xor
cld
push
addb
sub
nop
outsb
sub
aaa
inc
sub
les
stc
mov
imulb
dec
dec
inc
jge
clc
pop
cmpsb
xlat
out
das
mov
aas
cmpsl
push
and
imul
roll
insl
xlat
push
mov
add
orb
in
mov
in
xchg
adc
xor
repnz
pop
shr
shrb
incb
mov
cmp
mov
aam
jg
inc
int3
mov
repz
xchg
in
test
or
mov
or
lret
repz
mov
sub
mov
movq
lea
cs
xlat
or
out
inc
pop
nop
loope
data16
mov
fmull
into
jp
daa
fidivrl
pop
pop
mov
cmp
lcall
imul
pop
sub
imul
test
sub
divl
adc
cld
idivl
mov
adc
add
jg
lods
xchg
scas
scas
je
out
jecxz
or
scas
aas
sub
test
jbe
repnz
lea
pop
dec
lea
in
push
sub
bound
push
inc
and
out
dec
stc
or
adc
sub
pop
fmull
arpl
mov
in
add
push
sbbb
int
addr16
jmp
shlb
ret
pop
jae
push
test
stos
xchg
out
out
clc
adc
dec
jp
pop
out
sbb
fwait
shll
scas
test
add
sbb
es
sahf
mov
or
les
loope
mov
pop
jg
repz
xchg
scas
jge
int3
outsl
mov
in
mov
or
mov
push
jo
add
out
xchg
xchg
and
push
sub
xchg
imull
mov
sbb
and
outsl
jne
pop
repz
loopne
movsl
jg
shl
ret
test
jbe
pop
leave
cmp
mov
push
mov
test
sbb
mov
xchg
rolb
mov
cli
pop
ljmp
into
mov
jo
mov
pop
test
inc
test
jmp
push
push
push
mov
mov
pop
mov
push
cmovs
incb
movb
jge
and
ficompl
imul
lcall
dec
jmp
push
xchg
dec
adc
xchg
fisubl
push
filds
xchg
sbb
outsb
cld
dec
inc
jmp
rcll
scas
cmpl
shlb
add
mov
jg
mov
movsb
xchg
dec
add
push
and
pop
add
sbb
mov
outsl
std
out
cmpsl
pop
aam
stos
arpl
xlat
out
sahf
jb
xchg
jae
xchg
ret
add
cmc
ss
ror
in
lcall
cmpl
nop
push
sbb
cltd
mov
jmp
or
fcmovne
inc
xchg
stos
inc
add
mov
clc
cmc
fisubs
cmpsl
scas
xchg
cmp
xor
lahf
ret
push
int
lock
mov
cs
dec
fucom
mov
push
jae
rcr
repnz
cmp
mov
cltd
orl
pop
or
xchg
ljmp
out
data16
jg
shlb
pusha
jno
xchg
mov
lea
jbe
outsb
sub
or
popa
adc
cld
adc
add
jmp
or
xchg
adc
in
cmp
and
in
pop
sarb
imul
sub
push
and
jg
dec
iret
cli
lds
xchg
mov
or
mov
lahf
imul
shll
loopne
mov
xchg
insb
fsubrl
mov
xchg
adc
pop
cwtl
sbb
rclb
dec
shrl
in
fisttpl
jnp
fcmovu
cs
fildll
jno
xchg
add
jb
push
jnp
xor
andl
jmp
daa
cmp
daa
sub
and
test
cmc
jne
push
adc
repz
adc
or
fwait
lock
cltd
adc
mull
jns
or
add
arpl
scas
rol
jg
xchg
sbbl
mulb
jle
mov
sub
or
lds
sub
jge
out
mov
rol
scas
jle
loop
scas
popa
sti
push
sahf
cmp
into
out
pop
and
xchg
or
aad
push
movsl
pop
xchg
push
clc
jmp
jecxz
xchg
adc
add
aam
cmp
cmp
or
mov
int
jo
stc
jg
lea
add
add
inc
leave
scas
xchg
mov
movsb
dec
adc
mov
fwait
lds
fildl
stos
daa
and
sub
dec
jp
add
stos
mov
sbbl
out
das
test
scas
dec
cs
add
aam
xchg
js
mov
mov
inc
fldenv
adc
mov
xlat
js
dec
inc
fcmovb
imulb
or
js
mull
add
les
sub
mov
das
test
imul
lcall
pop
lret
cli
xchg
ret
or
outsl
outsb
dec
std
in
and
jmp
addr16
rolb
pop
call
popa
jns
xlat
shl
stc
push
pop
pop
add
sub
jg
sbb
sbb
clc
jle
xchg
mov
add
daa
jne
jp
subl
scas
lret
sbb
ret
repz
mov
pop
int3
cmc
push
lcall
jg
loope
loope
add
jno
jge
outsb
xor
dec
ja
xor
sub
cmp
test
mov
lret
aaa
adc
adc
lods
enter
inc
xlat
or
fwait
adc
mov
sbb
dec
std
dec
stos
or
xor
mov
sub
mov
xchg
xor
mov
cmc
repnz
cmc
and
push
xlat
pop
cmpsb
and
ret
les
mov
shrb
cmp
ja
dec
insb
and
shl
pop
mov
mov
and
scas
in
stos
mov
lret
mov
fistpll
lret
test
xchg
mov
cmp
and
pop
and
loopne
xchg
int3
or
adc
loopne
push
sti
push
ljmp
mov
inc
lahf
test
jo
xchg
pop
add
loopne
movsl
xchg
sbb
jno
gs
outsb
jle
mov
mov
or
lret
xchg
sub
cmp
out
test
xchg
dec
or
mov
fucomp
mov
sub
cs
cmpb
lcall
scas
mov
add
xchg
imul
and
aad
xchg
add
stos
jmp
sub
mov
data16
mov
cmp
mov
sub
stos
pop
mov
iret
ja
mov
lea
and
imul
daa
imul
fmul
jecxz
roll
push
add
jg
nop
insb
sbb
sub
inc
fisttpl
jns
lods
jl
dec
push
cs
fs
push
adc
jo
xchg
pop
jle
fildl
and
xchg
sub
cmp
gs
xor
push
out
pop
sub
mov
dec
jge
out
pop
js
xor
xchg
adc
or
push
and
stc
jp
add
in
pop
cmp
xor
cmp
dec
orb
mov
stc
jae
and
mov
inc
mov
clc
xor
mov
es
repz
fs
mov
pop
mov
rol
add
jnp
lcall
pop
mov
ret
mov
lcall
lods
cmpsb
xchg
push
rcl
push
fnsave
dec
mov
hlt
adc
enter
push
jo
add
pop
inc
mov
pop
mov
stos
inc
jecxz
sbb
mov
in
vpaddsb
addr16
cmp
xchg
cmp
aad
lahf
adc
xchg
cmp
aaa
mov
dec
testl
sub
in
out
outsb
notb
push
fucomi
jo
xchg
dec
popa
mov
in
bound
gs
push
pop
out
and
cmp
pop
in
mov
add
mov
cltd
xor
sub
push
mov
sub
arpl
fcompl
pop
push
stc
popf
pcmpeqd
insb
or
push
cmpsl
test
mov
aas
jno
pop
add
push
ret
cs
sarl
xchg
stos
jmp
xchg
or
lods
jae
stos
adc
scas
mov
arpl
hlt
test
cmp
xor
lods
loope
xchg
test
pop
jo
push
fiaddl
mov
lds
fcmovbe
int3
xor
cmpsb
jg
xchg
mov
jo
loop
push
lock
iret
fiaddl
cmpsl
mov
and
pusha
dec
mov
and
cmp
pop
xchg
daa
xor
mov
gs
icebp
stos
out
outsb
mov
inc
xchg
pop
stos
test
sbb
in
xchg
rorb
cmp
data16
or
jb
adc
jle
mov
xchg
lds
pop
jnp
and
jo
xor
mov
int
cmp
mov
out
and
cmc
imulb
and
cmp
insb
push
pop
test
scas
add
mov
bound
insb
jmp
and
daa
jg
mov
in
xchg
gs
es
and
jecxz
xchg
dec
bound
in
fistl
jns
mov
xchg
pop
test
lea
aad
mov
ret
xchg
push
fsub
jl
nop
ret
out
inc
xchg
sbb
or
add
mov
mov
add
adc
adc
sbb
roll
push
push
fisttpll
bound
and
jmp
or
lds
xchg
and
nop
imul
push
inc
xchg
fildl
lods
add
out
dec
out
es
jo
mov
scas
mulb
xor
andb
jno
and
sub
push
gs
pop
imul
xchg
pop
sub
add
add
inc
addr16
add
push
xchg
pushf
pop
jl
xchg
ja
repnz
xchg
sti
inc
mov
ja
inc
xchg
and
pop
mov
test
cmpsb
xchg
xchg
mov
pop
test
aas
add
hlt
nop
js
stc
stos
push
add
jle
jmp
rcrl
int3
out
pop
std
inc
push
sub
jae
xchg
ret
insb
adc
xchg
mov
jle
test
loope
and
rorl
push
jg
insb
push
int3
jne
sbb
dec
push
stos
rcrl
dec
push
fwait
popa
mov
mov
movsl
inc
out
test
lcall
jecxz
fidivl
jbe
mov
cwtl
and
jg
mov
adc
sahf
jle
aad
mov
nop
cmp
movsb
daa
mov
pop
sahf
fwait
imul
jle
stos
data16
out
or
sbb
push
arpl
pop
ret
arpl
dec
adc
dec
fwait
ja
cmpsl
cli
jmp
lret
pop
pop
dec
pop
xor
out
inc
add
mov
sub
mov
push
add
push
mov
pop
out
pop
xchg
xor
outsb
aaa
out
les
jno
test
dec
or
and
stos
push
lods
cwtl
lods
les
push
adc
xchg
jmp
xchg
cmp
xchg
lcall
inc
lods
add
stc
sti
xchg
pop
push
xchg
jecxz
add
pushf
sub
jae
fwait
ds
imul
cmp
lds
loop
inc
cmp
jg
out
das
xchg
inc
pop
js
js
cmp
jnp
cld
jecxz
mov
jg
movsl
ja
enter
roll
push
test
repz
dec
dec
imull
jmp
repz
inc
mov
sub
cmpsb
add
mov
pop
arpl
ljmp
xchg
ret
cmpb
sub
lcall
mov
dec
mov
push
mov
inc
push
daa
and
shlb
jecxz
fs
movl
mov
mov
pop
aam
inc
or
add
jge
scas
pop
xchg
loope
decl
popf
lds
scas
sub
outsl
ret
add
adc
out
dec
lret
xchg
rcl
sti
faddl
jg
mov
in
add
gs
int
mov
adc
movsl
daa
xchg
bound
jmp
enter
xor
inc
shr
pop
push
in
stc
jmp
orl
enter
dec
aam
jmp
mov
mov
sbbl
insb
mov
daa
dec
loopne
inc
repz
cmp
sub
popf
inc
push
das
js
mov
mov
lahf
dec
bound
and
mov
inc
mov
or
insb
mov
imul
sbb
xchg
lret
sahf
jmp
rcrb
mov
fwait
pop
push
jp
cwtl
push
push
in
mov
repnz
mov
mov
stos
lock
aad
add
xchg
mov
sub
daa
insb
stc
sub
nop
lcall
adc
pop
roll
stos
jo
outsl
jns
xchg
adc
sbb
xchg
or
les
shrl
push
xchg
popa
pop
and
dec
loope
clc
xchg
nop
rolb
rcrl
cmp
mov
sbb
push
sub
mov
adc
std
dec
lods
mov
jmp
push
mov
lret
push
mov
not
push
cmpsl
imul
jmp
sub
sbb
fildl
add
xchg
idivl
cwtl
sbb
mov
mov
push
aaa
int
pop
imul
popl
je
stc
jmp
mov
aas
xlat
insb
test
or
adc
mov
out
push
jo
insb
lcall
and
mov
fsubs
sti
mov
xor
lcall
fdivl
inc
jns
xchg
dec
ljmp
out
sub
inc
xor
add
jne
sahf
gs
cmp
outsb
lods
sub
push
enter
pop
jnp
cmp
mov
cmp
pop
mov
movsb
fisttpll
sti
stos
fidivl
mov
inc
out
cltd
push
jp
push
test
dec
sbb
and
push
gs
mov
out
or
fwait
cmp
push
xchg
xchg
mov
ret
fidivrl
movsb
or
adc
cld
jmp
sti
fidivl
mov
outsb
repz
in
mov
inc
push
mov
push
mov
dec
xchg
imul
cmp
arpl
shll
xchg
mov
hlt
lcall
sub
jp
mov
mov
mov
xor
mov
sbb
dec
shr
jp
cmc
mov
jge
stc
test
movsb
mov
xchg
mov
fwait
ret
jb
ficoms
cld
imul
or
hlt
rcrl
jne
test
rorl
sti
jmp
cmpsb
sub
rcrl
adc
or
or
mov
imul
mov
out
out
and
movsb
scas
push
fiaddl
mov
xorb
mov
add
out
bound
adc
ficoml
test
mov
repz
push
xlat
cld
outsl
xor
sbb
popa
xor
adc
addr16
je
loop
mov
inc
pmaxub
call
roll
add
jnp
inc
cmc
xchg
pop
adc
or
mulb
stos
pop
mov
incl
in
jg
cmc
mov
loope
jno
in
in
das
test
cmp
and
inc
xchg
mov
jecxz
or
repz
sahf
sub
movsb
aaa
xorl
testl
int
test
mov
outsl
pusha
jo
pop
gs
or
sub
adc
fs
test
mov
cmpsb
mov
in
inc
jg
fcoms
imul
mov
xchg
test
repnz
pop
cld
lcall
into
cli
mov
outsl
repz
mov
in
imull
and
in
outsl
es
inc
lods
push
push
call
pusha
cwtl
jo
mov
int
fsubrl
sbb
mull
push
outsl
arpl
test
mov
jae
adc
mov
addr16
xlat
inc
data16
shrl
mov
xchg
push
popf
ret
int
adc
or
or
pop
data16
xchg
call
sub
cmpsb
pop
jmp
iret
loop
sbb
std
fldt
add
out
lea
in
mov
jns
pop
jecxz
icebp
popa
mov
xchg
push
cmpsl
sbb
push
mov
or
cli
out
lcall
in
loopne
push
int3
into
aam
adc
out
xchg
js
into
pop
sbb
xor
lret
lea
insl
nop
adc
shlb
cli
insb
mov
push
repnz
xor
or
inc
call
mov
ret
rorb
clc
inc
test
les
pop
mov
divl
inc
xor
arpl
mov
fisttps
shld
pop
push
test
jp
movsl
sarl
and
call
sbb
xchg
lea
push
pop
push
sbb
cmp
repnz
fbld
rol
ds
test
mov
je
fs
or
jae
or
pop
jbe
dec
add
sti
lcall
aas
sub
xor
repz
inc
fsubrl
in
daa
sti
lret
fs
out
mov
cmp
sbb
mov
insl
fdiv
or
ret
bound
stos
out
push
jae
ret
push
insl
sub
xchg
imul
mov
xor
jg
lods
xor
loopne
xorl
inc
jb
int
mov
mov
jno
mov
out
arpl
push
out
out
and
lea
dec
dec
jl
jmp
sti
or
idiv
fisttpl
test
pushw
imul
inc
fiaddl
push
fimull
sub
call
sahf
and
adc
cmp
jle
mov
lret
fmull
sbb
popf
pusha
mov
fiaddl
mov
lds
xor
les
int
adc
test
jecxz
push
or
push
add
jns
xchg
cld
in
inc
push
or
popa
dec
ljmp
in
and
push
pop
rcl
jmp
into
xchg
or
add
nop
enter
test
and
rol
cmp
sub
xchg
jnp
xchg
inc
outsl
sub
cmp
ss
bound
nop
fists
add
cmp
mov
xchg
or
mov
sti
jecxz
jno
sub
jbe
xlat
in
and
or
loopne
cmp
icebp
pop
lods
fisttpl
jmp
repz
in
xchg
push
dec
pop
pop
dec
and
jmp
and
push
dec
jae
lcall
test
ljmp
xchg
mov
rcll
add
inc
test
sbbl
push
xchg
xchg
out
arpl
push
lahf
jge
in
jl
arpl
gs
xchg
shr
mov
ret
call
mov
mov
int3
xchg
mov
push
or
icebp
stos
insb
rorl
pop
mov
mov
fstpl
daa
nop
and
or
lcall
icebp
movsl
pushl
insb
mov
push
xchg
jle
clc
mov
push
aad
addr16
stos
and
push
mov
insb
hlt
lret
les
les
mov
dec
inc
and
pminub
mov
mov
sbbb
stos
lret
test
fsubrs
ret
pop
loopne
dec
mov
test
pop
jo
xchg
mov
sub
fs
jg
pop
inc
lcall
or
jb
mov
lret
loope
js
ret
sub
cmp
pushf
cltd
fstpt
push
xorps
or
sub
fiaddl
movsl
ja
add
jmp
insl
xchg
lret
jae
psrlw
clc
into
addb
sub
push
add
adcb
mov
pop
sar
sub
pusha
and
adc
std
out
dec
jnp
outsl
push
add
in
jge
loopne
imul
dec
scas
call
int
test
leave
nop
pop
sub
push
outsl
xchg
cmpsl
lret
lods
rolb
out
push
mov
outsl
or
xchg
and
push
xchg
sub
clc
mov
and
in
insb
aad
data16
in
out
lea
or
fs
pusha
cmpsb
pop
out
fildl
jg
add
jnp
or
mov
gs
dec
mov
lcall
scas
jne
jno
jmp
aas
pop
mov
push
nop
mov
or
cmp
pop
lea
add
and
jbe
int
cmpsl
jge
cli
mov
push
stos
movsl
fcmovu
xor
fwait
jecxz
jg
xchg
jg
mov
mov
sub
pop
stc
or
mov
cltd
test
loopne
sub
mov
mov
add
mov
call
std
sub
push
fnstenv
fldln2
shr
icebp
push
jbe
mov
jb
daa
gs
aad
leave
je
jecxz
fs
xlat
imul
mov
insb
subb
jg
mov
test
inc
jge
gs
xor
or
cmp
add
fwait
divb
xor
leave
out
fucom
inc
xchg
push
jle
jmp
scas
mov
fs
mov
mov
or
mov
int3
lock
out
jb
inc
fildl
lret
push
jbe
inc
push
pop
cmp
lock
outsl
aad
mov
leave
cltd
rcll
mov
mov
outsb
mov
icebp
cmp
push
and
cmpsb
xchg
mov
cld
ret
jmp
scas
rcr
imul
xchg
add
dec
inc
or
dec
mov
xchg
xchg
outsl
ds
lcall
lea
addr16
adc
scas
xchg
ja
sar
stc
icebp
fnstenv
or
sbb
imul
jne
dec
ja
sbb
insb
cmpsl
lret
jecxz
call
pop
cmp
mov
mov
out
mov
xchg
and
stc
mov
fcmovbe
push
push
xchg
test
pop
lock
aaa
xchg
aam
add
and
stos
or
aad
xchg
mov
into
jb
inc
sarb
jae
jb
xchg
enter
fbld
into
ja
and
jmp
dec
jecxz
cs
je
cmp
jmp
xlat
push
shll
add
imul
int
in
push
and
dec
xchg
xor
ret
cld
fdivr
adc
cli
pop
cmpsl
mov
pop
mov
or
hlt
pusha
aaa
mov
and
arpl
je
gs
les
or
mov
cld
fimull
cli
add
jno
mov
cmp
pushf
pushf
inc
or
push
dec
push
dec
dec
popf
out
mov
push
rolb
mov
sbb
std
iret
insl
jmp
cmp
insl
and
dec
data16
daa
xchg
test
jmp
ficoml
les
shlb
sahf
dec
inc
cs
push
push
ja
mov
push
xor
ficoms
add
sbb
test
xlat
sub
sti
mov
and
adc
in
jmp
int
ljmp
cmpsb
jno
push
mul
cmp
jnp
mov
cmp
sub
jle
jp
shll
jnp
mov
jg
cmp
or
out
pop
ret
push
inc
data16
xchg
das
ret
in
and
lcall
scas
dec
test
in
or
lahf
imul
sub
jb
dec
sub
jbe
push
pop
mov
mov
sti
lods
notl
addl
insl
in
or
fcoms
pop
jecxz
jb
and
std
jmp
cld
inc
jg
lahf
xchg
icebp
lahf
cmp
xchg
stos
test
and
cmp
or
fiadds
jae
sahf
mov
popf
lcall
ds
shll
mov
int
sub
movsl
jbe
pop
push
push
fstpt
jge
in
jle
roll
xor
sub
xchg
jnp
xchg
xor
in
lods
cmpsl
loope
push
mov
push
sub
pop
pop
mov
subb
lods
sub
insl
jg
int
adc
clc
stos
addl
xchg
jae
ljmp
fildl
call
imul
sbb
jbe
adcl
addr16
data16
mov
sarl
dec
test
arpl
fs
mov
mov
mov
out
lcall
sahf
push
or
pop
fnstenv
push
in
jecxz
aas
aas
lock
pop
cltd
xchg
lret
nop
sub
enter
and
add
sarb
jne
test
mov
jl
jnp
xchg
jns
insb
xchg
push
data16
fnstcw
mov
sub
inc
inc
stos
not
loop
sub
pop
test
and
pushf
aas
fs
cmp
push
xlat
pushf
pop
adc
pop
push
mov
pop
lret
mov
jl
fsts
pop
out
popa
pushl
fwait
data16
push
mov
sub
lcall
jae
mov
es
imulb
imul
xchg
insl
cs
sbbb
out
xchg
inc
aas
out
xchg
mov
push
divl
incb
inc
lahf
decl
loop
daa
outsl
les
xorb
and
out
push
dec
add
jecxz
loopne
inc
jae
je
jno
jb
ja
js
jne
lret
xchg
xlat
push
aaa
test
jg
out
adc
stc
adc
cld
adc
push
fisttpl
inc
mov
or
xrelease
pop
call
jle
lods
jbe
ret
out
cmp
movsl
popf
imull
loop
push
jmp
test
or
lahf
push
sbb
cld
cwtd
insb
jbe
pop
mov
add
cmc
pushf
mulb
rep
jbe
cmc
mov
xchg
inc
out
xor
mulb
sub
mov
cmp
jmp
icebp
mov
hlt
pop
mov
xchg
cmc
ljmp
xchg
xchg
out
movsl
in
out
arpl
xchg
dec
in
ljmp
mov
add
out
adc
fistl
out
mov
out
jne
ja
hlt
xchg
jbe
jno
xor
mov
push
imul
xchg
push
xlat
jecxz
gs
jno
sbb
sub
stos
lock
repz
jns
jge
insb
jae
xchg
jp
jmp
lcall
mov
adc
imul
dec
jne
or
push
dec
xchg
addr16
sub
movsl
ljmp
in
outsb
inc
sub
out
cmp
xchg
dec
aam
or
outsw
fcoml
and
iret
cmp
cmpsl
fcmovnu
lods
repnz
mov
push
in
sbb
popa
stos
inc
nop
push
das
cmp
fs
jmp
fldt
cld
outsl
cmp
jnp
xchg
out
fidivrl
ds
out
rorl
push
sub
imul
jecxz
mov
jge
and
mov
fcomps
imul
inc
arpl
popa
inc
lea
loope
lahf
andb
mov
daa
testb
and
jg
pushf
stc
enter
cld
and
sbb
lds
mov
fwait
jecxz
into
pop
jno
fisubl
stos
fwait
stos
sbb
dec
adc
movsl
jg
cmp
xchg
or
jmp
jg
push
pop
add
and
jge
out
push
push
sbb
arpl
mov
iret
mov
in
dec
push
push
js
les
push
inc
jle
cmp
in
dec
je
xchg
push
xlat
sahf
push
dec
test
sub
mov
ljmp
jnp
movsl
jb
aam
leave
in
rorl
sbb
jmp
push
add
test
xchg
insl
repz
cmp
xor
mov
mov
lret
stc
insl
imul
aas
or
sbb
dec
adc
sar
std
sbb
push
pop
pop
stc
jne
or
xchg
adc
jae
es
push
pop
pop
fstpt
and
adc
pop
push
arpl
and
mov
sbb
imul
arpl
rorb
jno
out
fsubl
fwait
test
leave
in
add
pop
out
adc
cmp
bound
ss
mov
ja
mov
sub
jmp
das
xchg
gs
nop
roll
mov
push
in
sbb
movsb
fisubl
xor
push
lds
repnz
sbb
jne
jg
cld
out
out
sahf
inc
movsb
lcall
cmp
xchg
xor
nop
fcmovne
mov
sub
pop
out
cli
movsl
or
pop
cmpsl
call
cld
pop
add
repnz
adc
xchg
pop
push
out
xchg
inc
jecxz
jmp
adc
add
fisubs
outsb
fwait
pop
pop
add
in
xchg
and
movsl
add
or
xchg
out
js
jmp
enter
add
sti
adc
loop
aam
cs
xor
sbb
jge
adc
add
add
jp
mov
out
adc
lret
sti
insb
aad
enter
out
lret
cltd
xchg
fwait
cmpb
mov
cmp
sub
loop
xchg
sar
cmp
dec
ffreep
mov
mov
jge
jnp
imul
xchg
cltd
inc
xor
and
fs
xchg
cmpsl
les
test
cli
loope
jg
into
inc
lcall
mov
pop
test
mov
in
mov
or
sti
fs
xchg
cmp
push
js
and
out
repnz
pusha
jge
push
dec
mov
mov
jp
push
sbb
jge
lock
inc
aad
scas
popf
and
inc
adc
inc
call
sub
js
xor
leave
and
jg
mov
int
jle
sub
imul
xor
cmc
mov
in
js
and
movsl
in
xchg
je
dec
testl
jp
add
stc
hlt
jge
addr16
jl
mov
in
fiaddl
add
fwait
orb
xchg
ljmp
jns
mov
inc
jg
shlb
mov
fwait
pop
push
and
nop
add
inc
adc
arpl
push
push
out
cmc
bnd
add
mov
movsl
fwait
imul
sbb
movsl
pop
aad
sub
mov
dec
cmpl
add
or
adc
lods
and
insl
insb
loope
push
mov
sub
push
cmp
hlt
fstpl
outsb
inc
fs
push
daa
shrb
inc
lret
or
push
std
inc
test
xchg
bound
cmpsl
fidivrl
std
xor
lock
in
push
repz
dec
in
dec
shlb
mov
pop
mov
adc
jae
les
sbb
inc
popa
sub
movsl
std
inc
add
sub
cwtl
xchg
mov
dec
pop
jecxz
rolb
jne
dec
mov
fidivrl
sbb
stos
iret
jmp
imul
fs
pop
test
push
jg
add
lea
std
outsl
jo
xor
mov
push
shll
jae
mov
mov
jg
jbe
stos
es
jmp
jle
add
jbe
push
sub
insb
pop
fidivl
andb
jae
push
out
xchg
js
int
out
pop
in
xlat
cmpb
rolb
lods
or
xor
dec
xchg
inc
inc
lret
std
das
ret
out
xor
sti
test
aam
icebp
fisubrl
sub
cmp
rorb
pop
insb
mov
sahf
fistl
lods
popa
and
pop
mov
out
cld
repz
push
call
or
cld
out
fldenv
sti
cmpl
je
jmp
scas
lret
mov
js
into
jns
aas
pop
and
mov
mov
mov
out
fwait
pop
cmp
cmp
or
dec
mov
scas
xorb
add
jno
xor
fneni(8087
xor
movsl
mov
mov
or
pop
aas
push
mov
adc
in
jnp
addr16
ror
push
xchg
ret
pop
mov
fs
into
xor
nop
inc
inc
jmp
out
dec
les
cmp
jmp
mov
test
insb
inc
jnp
fnstsw
pop
cmp
out
mov
adc
push
into
adcb
icebp
das
xor
jb
mov
and
mov
xchg
cs
out
inc
xchg
xchg
out
fidivrl
stc
shll
add
pop
and
push
nop
adc
iret
rorb
out
jo
out
imul
inc
cmp
mov
jbe
pop
insb
sub
sahf
insb
cmpsb
into
dec
stos
and
out
xor
push
ja
gs
outsb
dec
daa
xor
xchg
jno
jns
xchg
mov
jae
bound
loope
pop
push
addl
xchg
mov
jge
xchg
push
add
lea
outsl
or
icebp
xchg
lahf
inc
mov
xorl
in
lock
mov
or
inc
data16
imull
shrb
cmp
arpl
in
add
mov
mov
imul
mov
loope
out
rol
in
mov
sti
mov
mov
jp
ret
add
cli
lea
push
inc
aam
out
push
pop
mov
sti
xchg
loop
push
in
scas
xlat
std
aad
imul
not
push
jecxz
add
les
rorl
sahf
loope
loope
mov
xchg
cmc
dec
dec
mov
cmpsl
les
data16
lret
sti
and
xlat
iret
or
cmp
outsl
repz
and
xchg
and
leave
jmp
aad
adc
add
sbb
xlat
cmp
lret
cs
sub
inc
sti
push
iret
jmp
or
lea
inc
adc
loopne
out
xchg
je
push
in
mov
repz
out
jl
adc
sbb
or
or
jmp
pop
jmp
adc
xor
xor
push
shrb
test
push
pop
bound
out
jl
pop
xchg
lcall
lret
arpl
adc
push
into
and
test
push
inc
sub
push
insb
jg
fwait
push
sti
insb
outsl
mov
pop
ss
loope
dec
mov
dec
jmp
mov
xor
push
out
cmp
push
xchg
cmp
daa
bound
jae
pushf
jmp
aaa
cmp
cs
or
iret
mov
mov
inc
sub
out
mov
or
jmp
mov
mov
cld
lret
aas
jp
mov
cltd
sbb
dec
pop
out
sub
or
aaa
pop
add
add
arpl
jnp
xchg
pushf
insl
lock
jno
sbb
dec
xlat
popa
inc
ret
scas
sbbb
mov
jnp
jae
jecxz
jo
lret
xchg
mov
or
clc
jbe
pushf
dec
loopne
sbb
cmp
ret
push
cmp
adc
mov
mov
hlt
lock
jae
dec
stc
jae
fsubrl
or
or
and
les
or
and
jbe
cmp
pop
call
loope
add
icebp
in
out
push
pop
add
jmp
shlb
jecxz
add
mov
mov
rcrb
mov
mov
inc
inc
push
sbb
incb
into
push
sub
rorl
cmp
and
lret
in
fstl
xor
mov
jnp
fcom
lods
and
testb
jecxz
cmpsl
cmpsl
jmp
fimuls
les
stos
add
dec
mov
sub
xor
push
mov
mov
mov
or
out
mov
inc
into
loope
push
jo
ljmp
sbb
sbb
xchg
movsl
xchg
call
push
out
pop
cmpsl
test
dec
mov
mov
loop
cs
mov
xchg
mov
imul
xor
jnp
sub
push
mov
dec
inc
aas
lahf
jp,pn
xchg
jecxz
int
jle
sub
inc
ds
fnstsw
aad
ljmp
mov
adc
aas
jns
mov
push
out
cmp
cs
jns
movsl
shl
jl
pop
les
jg
pop
or
xchg
out
mov
ficoml
loop
jp
sub
mov
js
fstpl
imul
fmul
add
ret
xchg
push
popa
stc
jmp
pop
add
sbb
ljmp
lcall
jbe
or
test
arpl
in
ja
es
and
inc
cltd
popa
and
or
cwtl
mov
setnp
or
stos
push
inc
leave
or
out
in
dec
aad
ret
cltd
sub
pop
out
sub
push
pop
out
jnp
out
scas
fwait
leave
mov
pmaxsw
ss
lcall
daa
popa
jmp
lock
xchg
inc
or
cld
sbbb
and
or
imul
lods
and
xchg
scas
enter
into
dec
dec
jne
clc
xorb
popf
sahf
out
xchg
leave
push
inc
fbstp
push
pop
idivl
mov
jne
xor
xor
xlat
fsubrl
repz
int3
aaa
and
pop
xchg
pop
pop
inc
cld
addr16
xchg
mov
push
xchg
mov
shl
mov
xor
cmp
xor
xchg
cmpsb
stos
sbb
les
popf
jge
inc
mov
es
mov
call
les
clc
outsl
mov
inc
jne
mov
fs
pop
mov
mov
mov
mov
jmp
nop
cmp
push
jge
mov
inc
fiadds
inc
inc
cld
jbe
les
add
iret
cmpsl
sub
xor
sub
inc
jmp
cmp
int
stc
cmpsb
sbb
mov
add
adc
mov
and
int
adc
mov
mov
inc
pop
pop
jbe
fdivp
inc
int
mov
sti
sub
shlb
jmp
je
mov
mov
push
inc
xor
and
push
ret
jmp
or
repnz
sub
mov
out
jns
insl
fisubl
cld
lods
sub
adc
jmp
inc
rclb
int3
popa
ret
gs
lods
mov
cmpsb
push
inc
sbb
imulb
leave
mov
push
lret
lahf
cltd
push
inc
dec
xor
pusha
outsb
fwait
lahf
in
sbb
pop
xchg
jno
das
xchg
lods
push
lods
push
flds
pop
sub
popf
push
cmp
mov
xor
fiaddl
in
inc
fwait
data16
adc
mov
fsubl
or
cmp
scas
test
jmp
movsb
mov
popa
out
leave
scas
inc
rcrb
daa
xchg
popf
jle
scas
push
pop
xor
lea
pop
into
push
imul
jecxz
pop
subl
xor
addr16
add
cmp
subb
cwtl
and
sbb
es
inc
push
xchg
xor
loope
add
cs
mov
into
cltd
xor
lods
jp
lret
mov
xchg
adc
add
push
mov
jecxz
call
fldl
shlb
data16
addr16
out
add
out
pushf
jae
inc
jmp
lret
xor
xor
movsl
rcl
cmpl
mov
pop
mov
cs
cmp
jp
sar
mov
inc
lcall
mov
addr16
add
orb
inc
fimull
out
and
scas
out
dec
lea
xchg
or
jecxz
cmp
jg
sbb
dec
mov
jo
mov
and
test
or
les
dec
leave
adc
and
cmpsl
bound
or
loop
sbb
daa
add
mov
push
xor
scas
insb
das
xor
daa
int
push
lea
and
push
sbb
insb
mov
out
loopne
fdivl
imul
inc
push
insb
lcall
bound
popf
adc
jl
pop
mov
cmp
out
mov
popf
lock
or
xor
jnp
std
and
fwait
gs
jecxz
cmp
and
enter
cmpsl
push
fs
js
xchg
stos
lock
enter
loope
xchg
push
push
jp
cmp
jo
add
loopne
out
out
fs
jecxz
sbb
and
in
aam
xor
mov
jecxz
dec
mov
xorb
mov
cmp
mov
and
outsb
jp
lret
shrb
adc
add
push
and
rcrl
into
inc
outsb
xor
jg
xchg
lahf
aas
dec
in
push
jmp
andb
les
rclb
mov
int
pop
jp
push
cmp
aaa
xchg
pop
fcmove
std
mov
pop
inc
arpl
push
and
stos
mov
push
stc
lea
or
aas
xchg
and
incb
lock
or
push
cmpl
pushf
mov
lods
mov
incb
fcmovnbe
bound
test
in
inc
xchg
popa
out
testb
lahf
clc
mov
sub
jmp
or
push
nop
adc
data16
fs
mov
dec
mov
mov
dec
sub
or
jge
out
cmp
ss
ret
and
push
aad
pop
imul
mov
inc
cmp
sub
pop
cmpsb
xchg
outsl
outsl
cmpsl
or
jmp
outsb
xchg
xchg
push
cltd
mov
add
ss
test
inc
stos
nop
pushf
cmp
inc
adc
xorb
inc
loope
call
lcall
mov
push
out
jge
push
mov
into
test
test
dec
daa
ficompl
scas
mov
lret
pop
lret
cwtl
call
inc
jl
leave
test
adc
sbb
mov
push
xor
subb
xchg
mov
mov
aam
jge
in
arpl
out
sbb
aaa
jb
cmpsl
jnp
loopne
sti
xor
movsb
outsb
in
add
xor
out
xchg
and
mov
fstps
sub
jecxz
mov
add
nop
jecxz
call
pop
or
push
rolb
push
dec
lcall
push
xchg
add
or
xchg
cmc
loopne
xorb
fs
popf
in
mov
ja
fs
xor
and
jecxz
jnp
adc
ret
inc
mov
sbb
icebp
cmpsl
mov
sbb
imul
push
cmp
fisubrl
insl
mov
pusha
movsl
cltd
inc
adc
stc
in
int
push
jge
inc
adc
insl
shll
add
xchg
jle
out
mov
dec
pop
hlt
mov
fdivl
fldt
push
fiaddl
test
and
bound
mov
cmc
and
jo
jmp
popa
xchg
ljmp
fadd
xor
jg
lods
mov
add
repz
fldl
dec
nop
daa
addl
jmp
insb
popa
test
addr16
cmpsb
lods
fs
imul
add
xchg
jg
dec
cmp
mov
dec
test
push
mov
test
mov
inc
pop
adc
mov
notb
fcoml
add
jns
dec
xchg
adc
mov
or
xor
dec
inc
mov
adc
xchg
xchg
sub
lds
mov
shrl
jg
xor
jg
imul
imul
enter
cmp
notb
add
ljmp
hlt
adc
adc
lock
mov
lea
jne
out
mov
scas
repnz
in
les
jle
push
dec
cmpsl
cmp
pusha
add
and
aas
sub
leave
push
lock
dec
pop
jg
dec
hlt
test
test
dec
xchg
mov
dec
add
int
icebp
aam
inc
imul
jp
xchg
mov
mov
sti
orb
mov
je
outsb
fsubr
daa
fcoml
repz
and
inc
lret
xor
dec
jp
imul
mov
cmpsl
inc
xchg
xchg
push
mov
lea
loop
dec
cmpsl
sbb
pop
cmp
call
fcmove
cmpsb
xor
test
add
jecxz
in
jecxz
pop
popf
xor
xchg
je
insl
cmp
out
jbe
or
and
mov
out
xor
lcall
insl
out
xchg
lods
sbb
push
pop
cmp
cmp
dec
mov
js
nop
jae
and
stos
inc
cwtl
imul
mov
imul
inc
dec
mov
out
cmpsl
add
pop
jb
out
test
out
pop
data16
lock
pushl
data16
add
mov
popf
roll
mov
shll
jmp
roll
in
cmc
bound
int3
mov
and
es
xlat
sbb
mov
call
cmpsb
mov
sbb
cld
aad
hlt
mov
mov
jbe
mov
pop
cwtl
cltd
andb
mov
or
mov
arpl
std
mov
dec
xchg
idivl
arpl
fwait
cltd
mov
clc
popa
jge
js
dec
pop
or
ja
test
stc
or
cmc
sbb
sub
in
hlt
mov
out
nop
movsl
addb
push
test
rclb
cwtl
xchg
jg
add
dec
lahf
fsubs
add
int
push
add
icebp
movl
loop
loopne
call
jmp
orb
sbb
inc
jnp
sbb
push
mov
lods
pop
cs
outsl
fimull
scas
or
sbb
fmuls
push
push
enter
lods
add
xchg
pushf
jp
sti
lcall
pop
mov
mov
test
fisttpl
adc
imul
sub
rorl
leavew
call
addr16
jmp
add
int3
mov
data16
cltd
jp
jmp
cmp
lods
imul
sbb
enter
jmp
retw
fsubl
aaa
adc
popw
jp
adc
cmc
pop
inc
in
out
fs
call
mov
lret
pop
inc
add
dec
jbe
mov
fdivp
or
testb
ret
enter
cld
inc
jle
orl
aam
xor
fcmovne
push
arpl
dec
out
cmp
insl
sti
mov
pop
aam
shlb
mov
repnz
mov
es
lfs
adcl
xchg
push
and
jmp
push
popa
mov
xchg
mul
sub
test
cli
cmp
addr16
lock
jge
pop
fwait
sub
inc
test
mov
ret
ficompl
lea
shrb
or
jo
imul
fsubr
ljmp
outsl
data16
pop
pop
jbe
mov
fisubl
or
jb
jmp
or
movsl
cmpb
cmpsb
loope
outsb
add
pop
xchg
popf
aad
mov
jmp
xchg
in
jmp
scas
inc
aad
push
xlat
movsl
and
cmpb
lods
out
add
xor
and
dec
sbb
cmp
jns,pn
cmp
jg
mov
cmp
stos
dec
lret
mov
pusha
push
ret
sub
jle
test
aam
inc
xchg
fs
arpl
push
insb
aas
dec
dec
mov
ret
in
pop
orl
scas
push
and
fs
adcl
mov
test
in
aaa
or
hlt
arpl
mov
aad
mov
popf
mov
lock
inc
lods
push
sub
scas
cmpsl
xchg
das
hlt
mov
andb
push
sti
stos
gs
push
jp
into
daa
lods
jmp
lret
js
mov
lret
xchg
ja
push
push
scas
jge
cmp
idivb
sub
dec
or
adcb
inc
pop
nop
into
arpl
int
daa
cmp
cmpsb
fs
jle
cmp
xor
mov
and
adc
dec
js
rclb
jo
sbb
mov
xor
fildl
cmp
mov
outsb
lea
dec
sahf
test
pop
xor
dec
mov
sub
jecxz
jg
dec
push
andb
jge
js
fadd
dec
out
hlt
inc
mov
mov
movsl
pop
out
jnp
jecxz
call
inc
sub
test
scas
lret
mov
lods
fidivrl
dec
lock
fnstsw
test
adc
enter
cmc
jae
inc
jmp
into
ret
pushf
pop
dec
push
xor
xchg
sub
fidivl
xor
pop
xchg
push
sti
push
and
sti
jns
pushf
mov
mov
scas
outsl
push
pop
nop
sub
scas
jnp
pop
addl
pop
lcall
mov
lods
rol
std
clc
inc
fsubl
jb
cmpsb
fisttpl
enter
xor
call
cmpl
jle
push
cli
idivb
movsl
inc
and
add
mov
cmp
js
mov
or
cmp
lock
inc
jecxz
stc
jo
or
loopne
inc
cmpsl
push
sbb
inc
xchg
arpl
loop
xor
fisubrl
sbb
cmp
push
jbe
arpl
cwtl
xchg
test
xor
jle
out
jmp
call
pop
das
mov
inc
ret
jmp
pop
or
inc
cmc
cmp
hlt
dec
inc
cli
shll
sti
imul
test
fldcw
pop
movsl
cmp
dec
enter
push
leave
mov
ljmp
or
inc
fildl
mov
popf
cmp
and
xor
xchg
dec
out
cltd
loop
xchg
sbb
pop
or
out
stc
mov
in
insb
rorb
or
pop
mov
and
movl
add
adc
sbb
dec
fistl
cld
xor
and
mov
ficoml
ret
mov
pop
xor
nop
jbe
call
in
sti
pushw
jecxz
cmpsl
outsb
test
push
push
mov
jle
adc
data16
cwtl
jp
mov
xchg
xchg
pop
out
push
adcl
mov
les
jb
leave
aaa
mov
pop
lods
loop
filds
mov
mov
pop
inc
imul
test
sbb
pop
pusha
lret
push
shrl
and
sbb
js
mov
lods
and
mov
adc
jecxz
hlt
adc
addr16
mov
fcmovb
ret
scas
hlt
xorb
in
mov
sub
jp
mov
gs
lar
stc
add
mov
add
lods
push
mov
popf
jmp
inc
mov
sub
jg
cmp
in
test
jns
jmp
sub
es
aam
stos
imul
and
jg
inc
xlat
push
into
ds
sub
xor
dec
hlt
sbb
fwait
pop
popf
out
pop
xchg
and
mov
stos
int
push
jle
lds
scas
repnz
cld
lea
and
mov
lds
orl
mov
cmc
test
loopne
xor
xor
movsb
imul
lds
xorb
insl
ja
leave
stos
subb
xor
ret
mov
push
mov
push
fisubrs
lods
pop
addl
mov
fisubrl
shlb
aas
fdivs
mov
mov
fisubrl
sbb
lock
add
mov
cmpsl
out
cmp
lahf
int3
lock
aam
ljmp
mov
cmp
dec
push
jno
inc
and
hlt
sbb
stc
jg
dec
dec
xor
push
mov
pop
jg
nop
stos
or
js
cli
add
mov
cmpl
sbb
mov
arpl
fsts
je
pop
mov
fildl
inc
cld
sub
or
outsl
pop
call
xchg
pusha
push
mov
mov
test
in
cmpsb
dec
mov
add
sub
in
and
dec
fisttpll
cmp
lds
rcrb
and
repnz
stos
lahf
into
lret
cmpsl
jo
cmp
lretw
popa
sti
add
movb
xchg
pop
mov
adc
aas
gs
mov
pop
leave
lret
or
loop
fistl
xor
test
and
nop
push
adc
adc
push
xchg
jp
cmova
fmull
push
cli
mov
xchg
sbb
lret
cmp
cmp
mov
jg
or
test
les
mov
popa
cwtl
or
jge
jmp
inc
jp
addl
sti
decl
add
inc
jg
dec
cs
xchg
lcall
pusha
ljmp
mov
fistl
and
jg
arpl
enter
fisubrl
add
scas
sbb
mov
pop
push
dec
insl
xchg
sub
adc
jmp
out
je
jns
add
call
fistl
es
cld
pop
jle
je
mov
mov
cmp
lcall
insb
mov
push
inc
pop
inc
test
loope
lock
xor
push
pop
sbb
mov
mov
xchg
sbb
fisubrs
dec
mov
rep
movsb
neg
inc
xchg
jecxz
addr16
in
jne
push
sbb
jmp
lods
sub
out
imul
mov
xchg
xor
insb
outsl
sti
cmpsb
popa
adc
iret
and
add
and
xchg
jnp
sar
rolb
cmpsb
or
arpl
in
int
mov
xchg
outsb
sub
repnz
cmp
loop
int3
fiadds
push
push
ljmp
jnp
das
sbb
cmp
sbb
aas
lret
rcrl
sbb
sub
insb
test
sahf
pop
ret
mov
fcoml
in
imul
ret
inc
lret
test
mov
in
fsubrs
xor
repz
or
ret
mov
subl
stos
inc
add
subl
test
xor
mov
or
hlt
xor
scas
cmp
jno
mov
repz
add
or
stos
xor
stos
adc
in
out
pop
test
xor
sti
fiaddl
adc
mov
hlt
rclb
jg
cmp
jae
inc
mov
stos
inc
cmp
cmpl
fidivl
imul
pop
mov
mov
mov
lock
les
ret
movsl
mov
fidivrl
es
je
fs
xchg
imul
sbb
bound
sahf
sub
inc
jno
fildl
jg
out
pop
push
fisubrl
fstpt
addl
or
out
pop
mov
mov
aas
ret
movsl
and
add
jge
stos
rcrb
mov
mov
std
or
adc
imul
xchg
stos
aam
adc
imul
nop
lret
push
cli
icebp
std
jb
shl
push
or
adc
jb
lcall
sahf
jp
adc
aad
out
and
and
lret
sub
xchg
mov
mov
call
mov
mov
stc
out
dec
icebp
sarl
lret
xchg
cmp
mov
push
mov
push
shll
std
mov
cmpsl
jmp
lret
out
and
xchg
jbe
xlat
movsl
aaa
or
mov
mov
out
xchg
xchg
popa
fisubl
add
or
cmp
mov
lds
cmpsl
add
movnti
push
gs
lods
push
movsl
lds
sbb
fs
lahf
or
cmp
test
add
xchg
xor
enter
cmp
mov
lds
ljmp
test
pop
dec
cltd
fimull
xchg
cmp
xor
mov
bound
ja
addr16
xor
push
inc
fidivl
mov
test
push
push
sub
enter
xchg
jmp
cmpsl
and
pop
add
xchg
xchg
or
stos
shlb
out
sub
cltd
out
mov
ret
dec
mov
mov
sbb
fnstcw
shlb
sub
push
dec
adcb
icebp
jl
adc
cmc
sub
loop
inc
jg
jo
scas
dec
enter
and
rcll
cmp
push
in
mov
bound
dec
fildl
ret
dec
popf
jns
jae
outsb
jae
insb
xchg
mov
jmp
fwait
sub
push
adcb
scas
mov
cmpsb
or
repnz
test
mov
jno
jp
sub
out
sub
push
test
push
xchg
or
or
jno
iret
repnz
out
pop
push
jp
sti
xchg
int3
adc
adc
push
push
sub
push
pop
stos
mov
insb
push
push
repnz
sbb
xchg
jmp
or
jp
stos
orl
push
jmp
xor
ds
xor
popa
jmp
ret
sub
sub
lock
pop
or
testl
cs
pop
jmp
in
aas
insb
push
pop
jns
mov
push
gs
mov
mov
popa
xchg
jmp
push
jp
push
ret
xchg
mov
or
add
pop
or
mov
xor
add
std
divl
out
add
adc
push
or
negl
add
mov
xchg
lods
les
mov
mov
int3
cld
sti
sahf
sub
push
outsb
sbb
mov
int
jno
jl
mov
cld
sbb
push
mov
sbb
and
mov
daa
cld
xchg
sbb
lret
movsb
movsl
fcmovnbe
jnp
test
sbb
or
cmp
cmp
lcall
sub
and
adcb
movsb
test
sbbl
idiv
xchg
sub
rorb
xchg
fidivrl
dec
movsl
lret
jg
mov
xor
pop
cmp
inc
mov
add
dec
jbe
cltd
test
push
imul
pushf
mov
lods
std
stos
jns
mov
std
lahf
scas
xchg
add
fiaddl
push
sti
lds
cmp
frstpm(287
sub
xor
mov
mov
gs
fimuls
inc
cmp
sahf
scas
cld
in
dec
arpl
out
mov
lret
repnz
mov
lret
push
test
push
lds
mov
xchg
ds
lods
jp
clc
inc
adc
sub
in
inc
test
out
movsb
fisubs
cmpsl
notb
sub
xor
inc
mov
inc
pop
add
jno
dec
mov
add
out
call
ficoml
push
cmpsl
in
pushl
xchg
fiadds
cmp
mov
mov
adc
ja
pop
stos
sbb
fistpll
mul
stos
mov
xchg
ret
xchg
imul
int
sbb
mov
int3
jmp
iret
jb
les
and
clc
clc
sbb
movsb
inc
aad
and
jnp
push
push
and
jbe
stos
push
sbb
push
sbb
mov
filds
mov
int
std
sub
lods
cmc
repz
jae
mov
scas
mov
or
fsubrl
sub
ja
pusha
dec
lcall
dec
xchg
cmp
cmp
jg
test
out
sbb
or
test
jmp
loopne
jg
orl
xchg
pop
dec
xchg
jmp
test
sub
inc
shlb
jne
cmp
add
mov
dec
popa
pop
andb
jle
and
xchg
and
mov
adc
rcll
clc
push
pusha
popf
stos
enter
sub
xchg
pop
orb
push
aaa
push
cli
jg
jp
pusha
jg
imul
cmp
dec
jg
or
loopne
push
adc
sarl
cmc
out
test
push
fistl
dec
test
cmp
js
xor
jo
sahf
push
push
mov
iret
out
addr16
mov
sub
jg
cld
cmpsl
jle
in
in
xor
into
testb
pop
movsb
mov
sub
xchg
gs
add
loope
hlt
fadds
je
pop
jmp
push
jmp
jg
test
ja
hlt
inc
ja
out
gs
shlb
jp
mov
mov
jno
mov
sbb
outsb
adc
jp
lret
jbe
into
dec
cwtl
cmp
adc
arpl
pop
in
mov
daa
mov
insl
or
and
xor
inc
rcrb
inc
out
sub
out
jg
inc
sahf
xchg
lret
movsb
xchg
xor
pop
in
jge
mov
test
cli
and
hlt
popl
repz
inc
sub
jnp
fcompl
ret
lahf
frstor
pop
test
mov
movsl
push
pop
data16
shl
fwait
test
adc
fnstcw
pop
jo
ficoml
out
jp
sub
ret
fucom
bound
sar
pop
mov
ret
shl
in
rorb
fsubr
js
jecxz
jne
pop
arpl
imul
pop
insb
int
in
mov
mov
push
lock
sub
pop
out
jp
sub
ret
outsb
in
xchg
push
fs
jmp
jmp
mov
lret
xor
and
inc
out
imul
mov
cmp
jecxz
mov
clc
jmp
push
xchg
mov
mul
push
mov
jns
loop
adc
jmp
sti
outsb
xor
testb
add
in
movsl
jbe
sahf
sub
or
lsl
outsl
out
lock
out
xchg
subl
repz
outsl
incl
scas
call
mov
push
sub
lret
ss
mov
inc
or
add
pop
in
dec
imul
inc
jle
test
inc
mov
jl
mov
imul
push
fimuls
clc
scas
or
mov
mov
fwait
cmpsb
push
test
fwait
rcr
out
cltd
push
dec
sahf
pop
into
cmp
enter
xlat
leave
movsl
cmp
xchg
mov
xor
lds
push
movsl
and
push
mov
clc
popf
inc
sub
push
jp
sbb
sub
mov
mov
popf
sbb
xchg
dec
inc
mov
or
mov
fimull
sbb
fwait
imul
out
jge
cmp
xchg
insl
lcall
movsl
int
fldt
jp
fstpt
mov
addr16
fwait
movsb
jnp
and
in
rorl
xchg
xchg
jg
lahf
sbbl
addr16
or
and
icebp
jbe
sbbl
jmp
jbe
shl
out
pop
adc
fwait
sbb
das
rcrl
add
jo
adc
out
fisubrl
dec
jl
jbe
std
jp
jae
outsb
cltd
push
out
pop
mov
or
fstpt
xchg
jae
push
adc
mov
lret
mov
dec
push
stos
gs
enter
outsl
in
lds
xchg
sbb
je
jnp
jl
fwait
jg
mov
clc
sbb
in
lock
aas
mov
mov
adc
mov
fwait
xchg
sbb
lods
inc
and
or
cltd
mov
push
xchg
add
das
jbe
out
pop
cmpsl
hlt
shll
push
out
jae
xor
mov
or
cmpsb
sub
pop
lret
xchg
add
inc
xchg
or
sub
hlt
dec
push
mov
jbe
mov
mov
sti
mov
fwait
inc
ficoml
faddl
dec
xchg
xor
inc
sahf
xor
and
ret
mov
inc
test
inc
cmpsb
jmp
xchg
out
push
test
lods
bound
pushf
out
jo
push
mov
out
imul
mov
test
inc
push
or
inc
stc
outsb
inc
iret
xchg
notl
call
pop
je
xor
js
out
out
cmp
arpl
lret
lcall
lahf
dec
jmp
add
dec
out
mov
sahf
les
leave
in
mov
pop
adc
into
bound
sub
dec
inc
push
pop
jge
xchg
lods
sub
pop
in
es
decb
fs
jns
push
shlb
adc
inc
push
je
mov
fcoml
ja
push
dec
mov
add
in
adcl
insb
dec
mov
dec
into
sub
fldt
out
mov
sbb
cld
pop
fiaddl
pop
orl
xor
push
adc
sarl
sub
cld
fisubrl
add
pop
cmc
repnz
test
out
lock
cmp
mov
xchg
sbb
int
out
cvtdq2ps
sub
in
sbb
jnp
ficompl
push
fcom
inc
mov
xchg
data16
sub
sbb
imul
cmpsl
push
inc
dec
jge
mov
stc
sub
pushf
sub
fadd
dec
adcb
cmpsl
dec
pop
cli
push
xor
cwtl
xlat
mov
call
ficompl
cwtl
mov
sarl
cmp
loopne
rcrb
sub
dec
xchg
insl
sub
ret
ret
pop
mov
and
sub
cmpsb
mov
push
gs
jge
daa
adc
sbb
mov
jl
fcmove
les
add
mov
incl
cmpsb
in
test
mov
out
pop
test
sti
outsb
lods
lea
mov
jle
outsb
test
jb
mov
scas
out
xchg
ffreep
imul
insl
push
mov
jnp
mov
jg
insb
mov
notb
xchg
loopne
fs
loop
jmp
sub
shll
lahf
test
adc
mov
gs
pop
sbb
cmp
xchg
cmc
sbb
stos
inc
push
movsl
lock
cli
je
icebp
cmp
jmp
stos
stc
movsl
pop
and
popa
in
dec
mov
pop
add
xchg
push
xchg
lcall
mov
imul
push
xchg
lcall
dec
das
cmp
xchg
mov
arpl
add
push
adc
filds
shlb
lock
inc
adc
testb
xor
das
pop
das
xor
xchg
and
ret
push
push
xchg
lahf
push
das
enter
jae
sbb
stos
in
xchg
mov
out
xor
pop
sub
mov
out
or
jmp
in
push
cmc
shll
adcb
movsl
add
jmp
xor
pusha
push
cmp
test
dec
outsb
mov
xorb
xchg
pop
gs
jbe
mov
jmp
jbe
and
inc
mov
les
mov
cmp
mov
out
test
inc
icebp
mov
adc
les
call
xchg
fs
es
leave
inc
push
sub
adc
idivb
dec
imul
mov
scas
mov
sbb
lahf
mov
orl
pushf
adc
push
pop
roll
inc
pop
mov
mov
push
out
xlat
adc
jne
xchg
cld
push
inc
pop
test
lea
jmp
clc
push
into
push
pop
pop
scas
push
pop
pop
nop
cli
call
jno
mov
out
fldcw
insb
in
ret
out
push
bound
out
imul
cld
test
sbb
xchg
lds
ficompl
or
mov
in
fdivl
mov
push
mov
loop
pop
push
sub
or
dec
mov
mov
addr16
in
xchg
cmp
push
xchg
fstpt
fcompl
xchg
jge
jle
jae
xchg
jno
cmp
xchg
call
in
sbb
repz
loop
pop
test
idivl
icebp
inc
mov
inc
shll
push
test
mov
lock
lock
xchg
jecxz
jmp
out
int
ret
iret
out
mov
out
int
inc
push
jno
jmp
xor
jmp
push
fwait
cmp
addb
mov
aad
cmpl
inc
repnz
stos
cmp
cmc
sarb
pop
xchg
int
sub
add
outsb
add
rorl
imul
mov
adc
loope
xor
orb
jmp
xor
in
les
sti
int
jae
bound
and
cmp
jle
repz
mov
add
cmpsb
lret
movsb
nop
cmc
pop
sti
xchg
xchg
mov
mov
notl
movsb
jecxz
into
and
jge
sbb
hlt
aaa
mov
popa
cmpb
xorb
lock
xchg
adc
fucomi
leave
cld
mov
xchg
dec
ss
mov
outsl
xor
adc
fwait
test
pop
sti
mov
rol
pop
pop
xchg
iret
xchg
pop
imul
jg
or
das
mov
lds
jge
or
or
outsl
jbe
mov
leave
xchg
inc
jmp
ret
push
repz
lods
loope
add
push
gs
xlat
inc
push
movsb
mov
clc
popa
cli
jmp
js
pop
inc
nop
inc
ja
ss
outsl
loop
push
xchg
xchg
mull
sti
push
jnp
dec
test
inc
inc
sub
fnstcw
pop
stos
es
lcall
xchg
cmp
loop
adc
mov
out
cli
xchg
mov
pop
inc
out
cmp
push
arpl
push
insl
bound
push
or
inc
pop
adc
mov
or
lds
lcall
stc
jne
jg
lods
pop
clc
int
ret
ficompl
push
cld
jecxz
ds
sub
fwait
sub
out
fbld
in
cli
iret
sub
in
cmp
push
enter
ret
aas
xor
add
or
sti
js
xchg
sub
xchg
hlt
pop
xchg
dec
ffree
sahf
test
cmpsl
and
adc
or
jg
mov
push
xchg
cltd
stc
add
adc
cld
stos
outsb
pop
xchg
push
mov
sbb
jmp
sahf
mov
sbb
push
mov
or
lahf
fs
mov
add
in
test
in
xor
cmp
out
and
cmp
jg
inc
out
sahf
cmc
sub
in
pushf
pop
addr16
into
in
or
in
inc
loope
ds
push
or
sbb
mov
test
xlat
xor
pmaxsw
out
dec
and
push
jg
leave
dec
push
cmpl
in
cld
mov
cmp
add
sub
hlt
pop
jbe
xchg
mov
lods
stc
sub
pop
push
xchg
push
mov
dec
dec
std
mov
add
jmp
pushf
repnz
dec
and
repz
mov
fwait
dec
mov
sbb
je
cmp
cmp
int
sub
sahf
jmp
or
push
adc
xor
cmpsb
js
jmp
int
inc
movsb
pop
test
dec
fwait
xor
xor
add
mov
pop
pop
lcall
sbb
pop
mov
out
out
cs
xchg
outsl
fcmovnu
or
jbe
jnp
shr
jg
or
or
mov
and
filds
xor
cld
mov
jle
mov
xchg
lods
cld
push
jns
out
sbbb
xor
testl
sbb
mov
inc
inc
or
add
xor
or
xchg
arpl
aad
jae
inc
into
test
push
sbb
lret
cmp
fistpll
push
rcrb
pop
push
mov
and
gs
jmp
dec
leave
push
xor
push
push
lcall
mov
cld
pop
popf
inc
or
test
cmp
mov
dec
mov
out
dec
flds
push
outsb
or
int3
ret
lds
aaa
cmpb
or
ja
movsl
insb
cmc
or
daa
bound
in
repz
pop
mov
outsb
pop
pop
add
fiaddl
lret
or
or
jle
jnp
mov
adcb
je
in
xchg
loope
cwtl
fs
fcomi
sbb
mov
rcll
and
ret
out
cmpsb
bound
sbb
test
mov
sbb
jae
hlt
xchg
xlat
test
inc
shll
mov
pop
daa
xor
xchg
jo
push
movsl
mov
mov
test
out
std
jne
nop
jge
or
jp
cmpsb
adc
fidivs
lea
jge
xchg
xchg
stos
cmpsb
push
pop
stos
arpl
and
lods
pushf
lret
cltd
xlat
push
push
inc
push
pop
xor
sub
cmp
mov
aaa
aas
push
imul
rolb
mov
and
jmp
punpckhwd
mov
cmp
add
xor
dec
imul
sbbl
pop
jno
jns
push
push
sti
repnz
push
sub
add
icebp
xchg
leave
out
imul
jae
hlt
out
je
inc
jns
repz
addr16
jae
mov
xchg
pop
sbb
lods
jmp
xor
fisubl
stc
stos
fcmovu
mov
pushf
loopne
ja
adc
push
int3
cmpb
mov
push
mov
pminub
and
cs
mov
cltd
testl
pop
fwait
and
push
cmpsl
div
inc
movl
mov
xchg
cmp
xor
and
ffreep
sahf
leave
incl
dec
cltd
mov
xor
sbb
sub
bound
test
fs
cmpsb
add
pop
jle
arpl
hlt
mov
int
movsb
mov
lds
jnp
fwait
cmpsb
mov
adc
xor
fiaddl
gs
cmpb
repz
loop
jne
jmp
jg
cmpsb
pop
aam
rcrl
neg
test
xchg
jg
adc
enter
or
fcompl
cltd
jae
xchg
cmp
arpl
jp
jp
in
cmp
sbb
addr16
mov
cltd
into
dec
xor
cmp
in
repnz
dec
ja
xor
sti
mov
popa
xchg
dec
push
outsb
sub
cmp
nop
ret
cmp
push
repz
mov
lcall
cmpsb
add
dec
sub
stc
mov
sub
sub
add
pop
loopne
sahf
lret
movsb
rolb
xchg
mov
jns
ficomps
mov
loop
adc
or
lret
inc
add
or
les
mov
push
fs
gs
xchg
mov
inc
pop
xor
mov
gs
popa
add
gs
push
mov
out
and
int
inc
fcoml
jg
cli
loope
jae
jg
lock
mov
mov
bound
cs
pop
jae
mov
inc
mov
jns
and
sti
pop
jge
add
jl
out
in
cmpsb
cwtl
stos
jno
cmp
lahf
cld
mov
xchg
xor
lret
hlt
cmp
add
and
mov
pop
pop
test
test
sahf
into
rcl
in
fiaddl
xchg
fisubrs
inc
cmp
std
mov
xchg
jle
jg
add
fistl
xchg
js
gs
inc
mov
popa
or
sbb
xchg
sub
xchg
pop
das
movsb
sbb
nop
or
std
mov
ret
fnstenv
jle
dec
fs
jnp
outsb
mov
lds
adc
enter
jae
icebp
popa
or
fldt
fcmove
mov
xchg
mov
xor
dec
lcall
push
add
into
dec
into
hlt
js
cs
bound
call
cmpsl
mov
xor
add
xor
xchg
sbb
ds
dec
or
jmp
lcall
daa
insb
fdivl
xchg
inc
call
cmp
cli
cmp
jge
mov
dec
insb
fcomps
or
or
inc
or
fidivrl
add
je
mov
out
xchg
fwait
pop
xchg
pop
call
lds
jns
cmpsl
fwait
mov
lods
or
mov
insb
les
mov
out
out
pop
movsl
stos
pcmpgtb
cmp
out
fucomi
imul
push
dec
pop
xchg
add
js
cmpsl
ja
cmp
call
xor
cmpsb
xor
lcall
xor
mov
imul
insb
arpl
pop
loopne
jne
dec
fbstp
dec
inc
roll
mov
xchg
inc
sbb
mov
sbb
fimull
fnstenv
orl
lahf
pusha
dec
mov
jmp
add
or
movsb
inc
dec
pop
les
sahf
jbe
dec
fimuls
xchg
push
dec
fistpl
imul
aam
push
stc
mov
mov
das
sti
andl
pop
jl
test
fwait
mov
or
fldt
bnd
imul
push
das
and
call
mov
lea
in
data16
jns
lock
insb
pushf
push
jmp
push
mov
test
lods
cmp
shll
lea
fs
mov
stos
bound
imul
lds
xchg
loope
xor
adc
jg
lcall
ffree
insb
and
nop
enter
out
out
shrl
fisubl
pop
xor
ret
rol
cmp
mov
movsl
out
jg
out
mov
lea
pushf
bound
jl
in
imul
or
mov
daa
test
jae
std
cli
into
and
daa
jbe
stos
cmpsb
test
xor
imul
cmp
jge
leave
std
pop
pushf
jl
jg,pn
inc
adc
mov
loope
movsb
fdivrp
mov
test
mov
sub
loope
insb
les
inc
mov
inc
mov
arpl
dec
xchg
pop
inc
aad
leave
push
dec
pop
mov
fisttpl
push
mov
jmp
insl
lahf
push
cmpsl
adc
movsl
jp
jecxz
ret
mov
arpl
stos
stos
mov
in
xor
cmpsb
ljmp
cmpsl
xor
cli
xor
sti
push
sbb
addr16
xchg
enter
sub
pusha
js
mov
test
xchg
repnz
mov
gs
add
pop
jg
and
sbb
sbb
mov
aam
lds
scas
aam
jle
and
test
aam
popa
pop
aaa
mov
sub
scas
mov
cmc
std
arpl
jle
push
in
pop
pushf
cmpsl
popf
sahf
fs
jae
std
sbb
popa
dec
push
cmpsb
sub
insl
inc
data16
in
add
into
loop
je
cmpsb
mov
cmp
jl
pushf
imul
cmpsl
inc
jle
stos
dec
arpl
call
pop
xor
jg
into
pop
ljmp
je
psubsw
cmpsb
sbb
into
or
gs
fisttpll
sbb
imul
fisubl
mov
pushf
jbe
hlt
sub
jns
push
stos
lahf
les
mov
add
movsl
sub
push
mov
cmp
popa
imul
xor
jecxz
es
cmp
loope
in
jg
add
fldcw
push
sbb
gs
or
xchg
xchg
sahf
iret
pop
outsl
out
lret
loop
sbb
dec
dec
pop
push
cmp
jle
lcall
xchg
cltd
outsb
pop
sahf
pop
mov
pop
mov
mov
mov
ficompl
or
popa
cmp
dec
sar
sar
notb
xchg
dec
xchg
testl
cmp
addr16
shl
lock
jge
xlat
roll
leave
xor
cli
mov
xlat
clc
cmp
or
or
mov
mov
arpl
fcmovnu
and
fsubrs
push
popa
arpl
sub
loope
imul
dec
xchg
xchg
pop
ljmp
mov
jae
sub
or
fcoml
lcall
into
and
sub
dec
mov
shll
dec
movsb
es
inc
pushf
push
das
repz
xor
sub
mov
fisubrs
inc
fiaddl
sub
gs
movsb
dec
lcall
movsl
insb
inc
add
push
and
mov
cmp
jmp
and
or
pop
outsb
cmp
push
mov
jo
pop
ss
hlt
push
mov
jmp
cmp
sbb
or
mov
mov
mov
fs
mov
ljmp
or
jle
into
lds
mov
fisubl
out
dec
inc
out
popf
dec
or
cmp
sahf
push
mov
pop
and
add
lcall
mov
mov
cmp
pop
sbb
arpl
push
mov
fcmovb
fstl
fdivrp
outsb
test
gs
pop
xchg
xchg
das
push
jo
rorb
in
in
cs
fstpt
stos
or
xchg
push
popf
xor
and
test
dec
cld
pop
das
jne
in
inc
mov
xchg
ret
insl
push
les
cmp
out
test
fucomi
xor
popa
je
dec
scas
jns
xchg
in
push
cmpsl
cmp
loop
xor
shl
mov
jbe
prefetch
or
lods
fldenv
fisttpl
imul
movsb
ror
mov
xchg
call
test
call
lret
in
or
jge
push
cmpsl
xor
jbe
jae
out
gs
and
gs
call
push
mov
pop
adc
in
adc
push
lods
stc
lods
insb
out
fs
add
jbe
movsl
jle
mov
inc
cmp
shl
cmp
lcall
ss
jp
jmp
add
fcmovnb
movsl
pop
xlat
xor
pop
lods
loop
outsl
push
push
fimull
paddsw
sub
lds
enter
fisubs
dec
mov
push
arpl
mov
push
stos
cli
sbb
orb
filds
dec
fisubrl
inc
out
dec
sahf
mov
mov
jnp
pusha
or
xchg
jne
lock
andb
pop
pop
imul
stos
fwait
lret
insl
lcall
xchg
std
pop
fwait
add
jmp
ja,pn
lods
fwait
xchg
cwtl
lret
mov
aaa
loope
mov
sbb
add
mov
scas
mov
push
in
xor
mov
cmp
cmp
iret
jo
fs
fnstsw
in
and
aam
or
or
lcall
nop
popf
mov
mov
insl
jo
cs
xorb
aad
ret
lret
imul
enter
push
es
dec
test
fcmove
push
lahf
add
jecxz
cs
test
test
mov
leave
cmp
mov
mulb
in
xchg
push
test
mov
cmc
jae
lds
lret
es
stos
mov
hlt
mov
rol
sti
jmp
lods
cmp
and
les
add
push
icebp
cli
jge
inc
push
jne
cmp
mov
pop
dec
or
xor
sub
mov
out
or
fwait
sub
pop
notl
inc
orb
nop
lock
rcll
adc
pop
and
daa
push
cmp
aas
jns
xchg
mov
sbbl
inc
in
imul
xchg
aas
sbb
out
in
cmpsb
jmp
jmp
sbb
cmp
mov
xorb
leave
ja
repnz
lds
test
add
cmpb
lods
shlb
in
mov
mov
lds
cmp
repnz
mov
adc
push
cmpsb
pop
xlat
repz
cli
mov
test
arpl
jne
push
or
inc
notb
and
push
sbb
or
mov
xchg
ja
test
call
lcall
jo
jge
repnz
out
mov
repnz
pop
ds
pop
pop
cs
cltd
inc
fildl
add
jle
jno
xchg
push
subb
fbstp
enter
cmp
mov
test
sti
adc
sarb
nop
cmpsb
mov
push
mov
cs
jo
popf
cld
or
inc
jo
jmp
jo
cld
jns
xchg
jo
arpl
out
in
out
jo
pop
outsb
jo
pop
ret
jo
in
sbb
xor
jns
push
gs
rcrl
mov
jge
mul
jne,pn
icebp
jae
ja
imull
fs
jb
cmc
dec
or
xchg
stos
lods
sbb
jnp
mov
in
jmp
pop
mov
push
or
shll
insb
sbbl
js,pn
rcrb
fs
mov
insb
test
dec
sbb
scas
fisubl
xchg
shl
push
xchg
ret
rep
jbe
ficoml
cmp
jnp
ret
arpl
and
cmpb
arpl
ret
out
jmp
negb
repz
jne
inc
xchg
ja
push
sub
mov
jne
movsb
add
lahf
ficoms
inc
pop
cmp
sub
xor
mov
test
fimull
mov
gs
loope
lods
or
dec
jo
in
loopne
cmp
repnz
test
test
sbb
mov
leave
cmpsb
cmp
out
in
xor
mov
pop
cmpsl
xchg
enter
enter
sbb
testl
movsb
inc
jmp
sbb
sub
adc
loope
mov
or
push
scas
das
clc
movsl
repnz
cmp
stos
xchg
dec
inc
test
mov
lcall
and
mov
data16
inc
addr16
shl
sub
fisttpl
jno
xchg
rorl
fcmovbe
sub
lea
inc
insl
out
mov
adc
lods
aad
ja
and
jmp
mov
outsb
test
pop
je
pop
sti
sub
mov
call
cmp
stos
inc
add
xchg
test
popa
push
sbb
sbb
xchg
and
fbld
jl
jle
pushf
outsb
in
insl
dec
xchg
xchg
lea
ja
push
or
cltd
adc
dec
icebp
popf
add
aaa
stc
push
cmc
repz
pop
icebp
pop
mov
loop
pop
cmp
clc
sarl
jne
fwait
pop
jge
mov
in
iret
mov
gs
lea
adc
out
fisubl
and
nop
pushw
out
push
or
repnz
jnp
push
sub
and
addb
loopne
xchg
mov
cwtl
call
and
loop
aaa
hlt
cli
cmpb
mov
cmpb
in
mov
rcr
xchg
jge
jae
das
int3
test
es
pop
inc
dec
data16
sub
into
cmpsb
mov
xchg
shl
sbb
out
lock
add
xor
sub
and
movl
das
add
lret
xchg
push
sbb
mov
cmpsb
pop
or
inc
stos
cmp
jae
repz
xor
pop
add
add
data16
repz
aaa
sbb
jnp
in
or
inc
inc
test
fstpt
movsl
push
shl
cmp
jae
jae
jne
xor
outsb
jne
jge
hlt
add
lds
cli
dec
sti
aaa
mov
sahf
mov
sti
repz
clc
idiv
sub
js
cmp
mov
mov
push
push
loope
les
xchg
daa
inc
jo
cld
jmp
cmp
lods
fwait
dec
or
sarb
and
popa
aam
fsubl
js
or
fwait
xchg
mov
or
or
push
pop
imul
jle
popf
imul
mov
hlt
lcall
push
xchg
lahf
or
ds
push
daa
and
fildll
out
mov
insl
jmp
shll
js
cwtl
popf
or
xchg
subb
enter
aam
lahf
mov
dec
shlb
jb
jmp
stos
jne
jae
inc
fisubs
ret
repnz
incl
jnp
aas
scas
insb
out
loope
sarl
stos
mov
cmp
cmpsb
xchg
sub
jo
mov
mov
sub
cvtdq2ps
arpl
cmc
imul
mov
add
shl
cs
inc
push
scas
inc
insb
stos
fcmovb
das
scas
or
aaa
mov
out
xchg
push
out
or
cmp
mov
dec
cmpsl
testb
mov
bnd
or
dec
lds
lret
sti
push
subl
inc
push
cmc
dec
cmp
mov
xorl
lds
out
adc
imul
idivb
cmpsb
out
cmc
fimuls
xchg
pushf
push
mov
or
xchg
sbbl
pop
xchg
fisubl
cmpsl
and
in
jns
jmp
sub
pop
jmp
jp
iret
adcl
mov
jae
mov
xor
mov
out
arpl
xchg
std
cmpsl
sbb
jge
mov
loopne
insl
lret
cmp
mov
or
xor
ret
fwait
add
fildl
shrb
pop
mov
xchg
inc
xor
push
int
in
sub
inc
adc
outsb
push
outsb
sub
jge
ror
xchg
lret
inc
adc
adc
push
pop
push
das
jmp
in
mov
pop
gs
jbe
inc
mov
sbb
lea
mov
ja
popf
les
ret
gs
rcll
loop
popa
daa
push
jae
stos
and
xor
hlt
push
xchg
sti
fisubl
mov
mov
jbe
lcall
sbb
and
out
jg
sti
add
rcl
push
shr
jp
sbb
push
cli
xchg
jns
and
mov
push
jge
push
push
xor
mov
outsl
mov
inc
mov
pop
fiaddl
push
jno
xchg
out
in
inc
cmpsl
sbb
and
fwait
aad
fdivrl
mov
jecxz
push
clc
push
lods
lods
hlt
xchg
lea
pop
test
pusha
repz
shrb
xor
pmuludq
mov
jbe
jp
stc
xlat
cmp
mov
cmc
dec
outsl
mov
ds
cmp
lock
subl
jecxz
pop
xlat
xchg
xor
cmp
adc
jle
mov
jl
lcall
pop
inc
data16
incl
lcall
xchg
xchg
jmp
xorl
out
add
mov
mov
push
adcb
jb
aas
out
sub
jo
negl
les
jns
jp
and
cmpsl
cmc
jecxz
jb
clc
insl
sub
and
ja
cmpsl
je
jl
mov
push
pop
sbb
insb
or
scas
push
stc
cmp
popf
cmove
or
or
pop
or
shlb
or
sti
push
aad
lock
out
jmp
repz
pop
add
out
lods
mov
dec
insb
or
imull
push
aaa
mov
mov
xor
add
pushf
xchg
mov
cmp
or
and
pusha
cmp
fisubrl
in
call
data16
call
xchg
jmp
fidivl
jl
data16
inc
pop
nop
mov
mov
jb
shlb
push
cmp
sahf
and
shll
fistps
ljmp
cmpsl
out
cwtl
pop
in
ret
lds
xor
stc
out
xchg
fldt
sub
negl
fs
push
pop
enter
popf
inc
xor
lock
sub
mov
out
test
cmpsb
sbbl
pop
jle
add
jbe
std
outsl
cmpsb
testl
scas
clc
data16
jge
push
into
pop
xchg
repnz
scas
push
idivb
jno
push
push
push
sbb
xchg
shrl
cld
push
out
call
mov
push
clc
shll
fs
scas
jbe
in
dec
je
negb
pop
cwtl
mov
repz
xchg
jns
xchg
push
fnsave
mov
add
aad
push
xchg
insl
xchg
xor
mov
jp
jb
or
test
pushf
mov
in
jb
xchg
pushf
jp
xchg
mov
or
jnp
or
push
mov
mov
jg
lods
call
outsb
icebp
cltd
in
scas
fwait
jmp
outsb
and
call
jbe
mov
xlat
or
sub
xchg
mov
xor
pusha
cmpsb
push
xchg
cmp
ds
push
sar
mov
jle
movsl
adc
cld
sub
popf
mov
loopne
xchg
shl
lds
xchg
mov
out
jge
insb
mov
pop
xor
and
and
and
mov
mov
jae
je
icebp
mov
je
jmp
or
jno
sbbl
test
xchg
repz
jle
cmp
mov
push
mov
std
pop
rol
jae
popf
pop
push
in
xchg
push
mov
inc
mov
jne
mov
jns
xor
cmp
in
jo
hlt
add
sub
mov
sahf
mov
sbb
dec
gs
bound
popf
jp
aas
ret
xor
inc
jne
pushl
inc
add
or
mov
nop
es
jecxz
les
xor
mov
js
pop
fcmovnb
push
daa
jl
mov
pop
scas
repnz
sub
mov
jecxz
fisttpl
xchg
jae
xchg
in
bound
sti
sub
lea
movsb
aad
push
mov
xchg
mov
fwait
fs
es
lcall
bound
jmp
inc
dec
fsubp
pop
jnp
lret
jae
xchg
data16
mov
pop
push
pop
in
push
fwait
fidivs
jl
mov
inc
jmp
je
les
jns
jg
jno
dec
push
xchg
in
movsb
fimull
iret
es
fildl
outsl
cmpsl
sahf
iret
ljmp
sbb
xor
ficompl
push
and
ss
mov
paddq
in
sarl
cwtl
mov
imul
mov
pop
cmp
idiv
mov
mov
xchg
dec
les
cwtl
ficoms
test
fs
jnp
popf
xor
mov
pop
repz
popf
movsl
or
cmpsl
add
dec
stc
fs
lock
lock
jbe
aaa
cmpsl
movsl
stos
data16
movsb
mov
scas
add
fwait
fwait
push
lods
sbb
mov
sub
xor
jmp
dec
inc
lods
pop
dec
and
mov
fwait
outsb
rolb
add
fisubs
pushf
mov
pop
jnp
movl
push
xchg
or
fwait
pop
push
scas
jle
mov
out
pop
ja
jecxz
cmpsb
pusha
aad
mov
xor
std
int3
jbe
dec
sub
test
loope
ret
outsb
cmp
push
cli
repz
rep
repz
cmc
push
mov
inc
and
and
cmp
dec
adc
push
rep
jecxz
xor
ds
dec
jmp
inc
cmpsb
imul
data16
push
dec
push
mov
adc
aam
out
mov
shr
test
faddp
ds
inc
imul
push
lret
jg
out
add
push
popf
mov
add
lea
popf
dec
sbb
lea
mov
xchg
cmp
jo
jb
jg
sbb
scas
sub
in
ds
cmp
sahf
idivl
mov
xchg
popf
std
or
mov
or
test
and
in
out
mov
mov
out
div
pop
adc
cmpsb
or
cmp
lcall
or
inc
mov
sub
scas
lahf
mov
insb
cwtl
shlb
shlb
cmp
push
dec
push
cmp
cs
xchg
bound
pop
xchg
sub
adc
insl
fstpt
xchg
mov
movsl
cmp
enter
arpl
in
sahf
mov
call
or
setg
rclb
ljmp
mov
sub
outsb
lret
mov
imul
or
xchg
adc
jmp
nop
push
scas
loopne
xchg
or
movsl
movsb
and
or
icebp
fisttpll
ret
add
push
es
fs
mov
push
out
sbb
jecxz
in
lods
mov
ret
popa
jge
inc
xchg
pop
sahf
imul
test
mov
mov
sbb
inc
push
dec
mov
jecxz
pushf
test
sub
xchg
ret
mov
pop
and
addb
call
daa
pop
gs
mov
sub
mov
stc
pop
jp
jb
js
jp
mov
out
test
lcall
hlt
fcmovne
push
cmpsl
sbbl
sub
ljmp
mov
jne
add
adc
xchg
insb
jnp
lret
js
movsb
scas
addl
lods
jmp
push
ljmp
jb
subl
stos
mov
add
push
pop
test
fidivrl
in
mov
jecxz
cmp
insl
xchg
movsl
stos
out
arpl
mov
sbb
xchg
insb
cmc
xchg
jb
ds
arpl
cmpsl
jo
imul
mov
xor
jae
xchg
mov
jecxz
inc
pop
cmpsl
xchg
movsb
cmpsl
arpl
xor
jbe
mov
repz
xlat
mov
lahf
xchg
and
jmp
xchg
mov
jno
repz
xchg
mov
es
movsl
jecxz
sub
cmpsl
jmp
cmc
notl
shlb
push
jnp
aaa
stc
data16
fwait
aas
fs
std
insw
repnz
mov
pop
mov
scas
push
and
cli
test
ret
cmc
pop
dec
negl
daa
loop
xchg
add
sub
pop
sub
push
pop
lahf
leave
je
in
test
add
push
add
push
mov
ret
and
mov
addr16
cmp
sbb
mov
fildl
fwait
mov
test
subb
popa
insl
cmp
lcall
push
movsb
clc
jo
xor
dec
mov
pop
fucomip
inc
jle
inc
push
add
iret
dec
out
movd
test
stos
lods
iret
and
out
clc
popa
popa
mov
add
mov
es
leave
sub
int3
xchg
pop
int
xchg
dec
sbb
lods
out
sub
xchg
dec
outsb
iret
in
cmp
jmp
mov
ds
mov
sti
out
aaa
jns
jnp
xchg
in
out
or
push
movsl
pop
test
inc
xchg
jbe
xchg
dec
jbe
mov
fwait
mov
inc
xchg
es
test
and
jl
call
xchg
daa
inc
andb
add
inc
bound
add
inc
popa
test
inc
andl
inc
arpl
push
cs
outsb
lea
sub
shl
sbb
out
iret
inc
jl
dec
outsl
mov
sub
mov
or
mov
mov
loopne
insb
lock
mov
out
mov
fwait
test
cmp
ljmp
xor
addr16
cli
mov
cmp
stos
sub
addr16
or
pusha
out
jp
adc
ljmp
mov
punpckhbw
dec
stos
inc
mov
pop
in
out
dec
int
movsl
arpl
or
mov
inc
sbb
mov
and
cltd
movsl
andl
hlt
ljmp
outsl
mov
and
and
movsb
push
cmp
xchg
outsw
inc
and
sub
push
pop
mov
mov
ja
push
jmp
cmpsb
outsb
pushf
loopne
popa
dec
out
test
addr16
inc
xchg
jno
or
xor
das
dec
adc
pop
pop
dec
xchg
inc
or
js
je
jno
dec
dec
mov
xchg
push
ret
mov
das
xchg
mov
repnz
jg
stos
scas
mov
or
in
sub
daa
fsubrs
test
mov
lods
ja
cmpsb
in
xlat
bound
wbinvd
subb
mov
test
and
xor
push
mov
hlt
push
pop
dec
rcrl
hlt
mov
or
stc
aaa
cmc
addl
aaa
mov
inc
pusha
test
and
in
jle
mov
not
add
and
sbb
gs
push
sahf
jne
in
lods
mov
ds
cmpsb
mov
push
pop
movl
shl
inc
cmpl
out
in
push
test
adc
sahf
ja
or
clc
int
daa
adc
in
push
dec
push
inc
lret
jle
or
call
mov
popa
cmp
popa
jae
mov
sub
push
xchg
cmpb
pop
jo
push
sub
xorl
mov
test
jns
test
xchg
dec
in
jg
loop
popa
fdivs
subl
push
repnz
inc
pushf
or
dec
cmc
cli
outsl
je
out
sbb
xchg
xchg
lea
leave
push
aad
daa
sbb
push
and
ljmp
mov
inc
mov
fsubl
movsb
adc
fsts
stos
cmpsl
xor
sub
lock
push
dec
call
dec
leave
insl
xchg
jmp
stc
mov
add
mov
mov
mov
sub
ret
data16
mov
sbb
adc
and
sub
sub
ret
outsb
dec
lret
xor
test
add
xchg
outsb
testl
shlb
addr16
xchg
xor
inc
data16
inc
xlat
cmpsl
add
mov
fwait
jae
push
xlat
in
push
outsl
sbb
inc
jnp
or
fwait
sbb
fwait
xchg
fwait
cmp
jl
fwait
jae
xchg
es
jbe
jnp
jnp
bound
insb
push
movsl
inc
mov
push
jl
mov
notb
ss
jbe
xchg
mov
cmc
adc
cwtl
mov
pop
js
xchg
mov
notl
aaa
push
ja
xchg
mov
repnz
push
jb
xchg
mov
icebp
adc
push
jno
xchg
mov
hlt
adc
push
je
xchg
mov
repz
push
jae
sahf
mov
pop
jle
popf
mov
pop
jge
mov
inc
pusha
cmpb
lcall
aas
pop
jg
lcall
jp
cltd
mov
pop
jns
pushf
mov
pop
in
xorb
adcb
jl
mov
rclb
xchg
and
mov
movsb
mov
pop
and
loop
push
adc
xchg
pop
cmp
addl
out
push
subb
dec
sub
push
dec
repz
push
add
cmc
xor
ljmp
subl
jecxz
push
imul
or
scas
jp
rol
sbbl
out
andl
mov
data16
dec
arpl
dec
sarb
stos
jecxz
and
imul
outsl
daa
leave
aaa
in
dec
movq
cmpsb
push
dec
in
sub
outsl
imul
popa
stos
bound
out
push
test
mov
andl
or
scas
stos
and
xor
call
pop
push
mov
dec
or
inc
fdivs
dec
cmp
int
add
out
xor
cmc
add
in
lea
add
nop
push
jnp
pop
or
or
mov
sub
jae
in
push
push
jo
fcmovnbe
xchg
cli
add
jae
mov
fs
int3
lret
clc
gs
cmpsb
test
in
mov
sbb
lock
or
lcall
js
insl
shl
popa
gs
mov
out
loope
sbb
pop
out
sbb
jecxz
loop
push
bound
cmp
push
data16
sbb
jl
scas
bound
js
mov
ret
ljmp
mov
add
popf
xchg
je
jecxz
ret
subl
add
xchg
cmpps
mov
outsb
cmpsl
xlat
call
xchg
mov
push
nop
out
aad
cs
imul
push
mov
pop
mov
and
scas
jecxz
int
gs
aad
push
es
out
pop
mov
jecxz
jbe
push
int3
lods
aas
mov
into
xchg
cmc
ljmp
mov
push
cs
dec
dec
ret
ror
jns
adc
mov
clc
push
jle
jmp
je
repnz
jmp
lods
divl
cmp
leave
push
scas
leave
xchg
addb
cld
add
fs
aad
jmp
imulb
jle
data16
out
xchg
data16
stc
sub
imul
popa
clc
scas
push
test
push
push
insb
mov
dec
adc
pop
mov
push
repz
mov
inc
outsl
or
adc
add
out
jge
xchg
jp
es
ljmp
jle
push
jns
out
dec
sub
add
testb
xlat
scas
push
popa
cmp
insb
jns
inc
mov
or
lods
push
jae
out
xchg
jno
mov
cltd
ljmp
dec
mov
push
jo
adc
xorb
stos
push
jo
adc
push
xor
popa
lcall
je
imul
pop
xorb
dec
cli
fs
xchg
stc
imul
pop
loop
scas
in
out
add
loope
inc
dec
jns
fs
fwait
inc
ljmp
shrl
xlat
sbbl
addr16
xchg
jnp
aas
ret
or
fadds
mov
insb
lods
fisttpl
out
mov
test
outsb
push
mov
push
and
pop
cs
insb
mov
sub
scas
icebp
jnp
inc
xor
sub
mov
imul
fwait
mov
inc
mov
lret
or
xchg
int
adc
icebp
xchg
and
cmp
dec
lods
jbe
dec
mov
arpl
out
mov
pop
mov
add
mov
pop
mov
arpl
inc
add
mov
vpaddsw
stos
ret
std
xchg
inc
cs
jmp
xchg
test
leave
jbe
mov
push
cld
xor
push
add
in
pop
mov
and
jmp
add
repz
daa
push
out
and
add
sub
popf
fwait
mov
sub
lret
ds
pop
je
mov
ret
add
lahf
and
sub
dec
xor
mov
mov
jo
jg
adc
jo
les
int
out
daa
add
inc
sbb
in
mov
lods
test
out
mov
xor
andb
and
jnp
test
mov
fwait
arpl
inc
sub
popf
rolb
push
dec
pusha
or
push
sub
xchg
loope
loope
arpl
and
mov
add
fucomip
push
shr
scas
stos
je
loop
gs
lret
and
pop
add
test
mov
mov
or
fstpt
or
stc
test
mov
cmpsl
xor
scas
jnp
mov
fisubs
fsubrs
push
bound
mov
sbb
in
ret
out
mov
js
xchg
imul
arpl
int3
lea
inc
outsb
pop
pop
xchg
pop
sti
sbb
pop
mov
mov
jb
out
dec
idivb
jle
stc
out
out
add
add
push
xchg
dec
orb
add
push
aad
add
enter
out
subl
dec
add
jmp
loopne
mov
loope
out
scas
mov
dec
lock
loop
inc
xchg
subl
sbb
stos
fists
in
cmp
mov
mov
jle
mov
push
mov
lds
mov
sti
sub
add
push
adc
jbe
inc
dec
outsb
outsl
and
mov
movsb
adc
mov
push
and
repz
addr16
movsl
scas
add
fcmovnb
fwait
repnz
daa
clc
out
outsl
das
nop
in
sub
shlb
clc
fs
add
or
frstor
das
add
jg
xchg
out
sub
pop
mov
jg
ds
cmpsl
cwtl
add
xchg
sbb
mov
aaa
in
int
jae
cmp
loopne
pop
ljmp
fcmovnb
insl
xchg
xchg
enter
xchg
adc
cmpsl
mov
mov
lahf
leave
and
cmpsb
inc
jnp
cmp
mov
js
and
pop
cmpsl
fcmovne
xlat
arpl
push
sbb
cmpsl
out
pop
pop
movl
in
pop
inc
cwtl
insl
data16
in
xchg
movsl
push
fistpl
out
xorw
ret
subb
lods
gs
mov
ljmp
push
call
sbb
mov
pop
stos
aaa
push
arpl
cmp
xchg
jbe
imull
push
pop
push
test
pop
call
out
mov
xchg
rolb
inc
test
arpl
jnp
inc
pop
icebp
xchg
add
jg
xor
jge
pop
call
cmp
call
cmp
adc
pop
mov
outsl
push
dec
push
push
sub
xchg
jnp
jmp
sbb
lret
push
lret
cmpsl
lds
je
fistpl
idivl
cmc
xchg
aaa
pusha
xchg
pop
mov
cmp
fs
mov
xchg
xlat
rolb
adc
adc
out
subl
sahf
test
pop
mov
jle
mov
sti
xchg
xor
les
stos
xchg
inc
sbbb
loop
std
icebp
jecxz
xlat
cmp
fisubl
data16
xchg
repnz
mov
xchg
outsl
je
bound
idiv
popa
pushf
pop
lods
fistl
pop
test
xorb
out
loope
xchg
jecxz
push
addr16
out
arpl
push
repz
movsl
mul
mov
xchg
test
loop
enter
call
out
arpl
arpl
cmpsl
gs
cmpsl
jecxz
mov
arpl
xchg
jecxz
pop
add
das
dec
mov
lcall
mov
fs
fs
xchg
call
cmp
pop
lock
push
adcb
arpl
xchg
je
hlt
jecxz
icebp
xchg
jb
repnz
arpl
xchg
js
clc
jecxz
imul
push
outsl
out
arpl
xchg
out
cmpsl
fs
bound
out
cmpsl
daa
xchg
std
test
test
xor
ljmp
movsl
fldt
jg
push
in
dec
jnp
mov
jbe
jp
push
jne
outsb
int
in
jno
add
loop
repz
push
cs
adc
out
cmp
xor
out
loope
fiadds
push
adc
test
mov
or
scas
loope
out
arpl
xor
mov
out
arpl
testb
pop
leave
mov
jnp
idiv
xchg
jbe
cmpsl
movb
pushf
mov
xchg
jecxz
pop
xchg
push
add
repz
popa
mov
clc
out
outsb
shll
movsl
in
insb
xor
hlt
xor
jl
push
sahf
enter
inc
xchg
sbb
ds
mov
subb
jl
push
ja
adc
mov
jl
sbb
pop
test
dec
mov
lret
jl
xor
sti
inc
push
adcb
pushf
push
js
sbb
mov
cmp
aaa
pop
pop
mov
imul
inc
mov
ja
jl
or
or
inc
push
in
mov
pushf
sbb
sub
ret
xchg
aas
jl
mov
lock
pop
mov
xor
adc
in
mov
fstps
lahf
scas
lods
adc
push
xchg
es
jnp
js
and
stc
inc
out
or
arpl
insl
mov
test
add
and
int
es
adc
dec
adc
mov
pop
jg
jp
xchg
push
inc
es
sbb
mov
jge
adc
mov
jns
inc
push
and
jae
and
sahf
fcoms
push
repz
or
fsub
push
fldt
faddl
add
pop
xlat
push
sti
jns
mov
les
mov
lret
sbb
js
popf
cltd
jns
cmp
jmp
enter
push
cmp
jl
xor
inc
and
fidivrl
hlt
mov
cmc
push
cmp
data16
jmp
inc
dec
sar
insb
inc
out
rcrb
cmc
adc
je
les
dec
jecxz
in
mov
mov
test
add
sub
xor
orl
xchg
int
in
movsl
aam
insb
pop
cmp
sbb
fsub
sub
call
inc
mov
or
jl
push
out
in
and
jl
and
int3
sbb
in
mov
mov
lods
iret
pop
ret
xorl
popa
stos
inc
push
jno
sbb
pop
les
imul
xchg
cmp
sub
mov
mov
or
and
insb
mov
mov
aaa
dec
xor
dec
shl
stos
jl
adc
fwait
push
lods
pop
jecxz
push
or
mov
and
dec
int
ds
lret
nop
fcomi
je
mov
jl
jg
sub
pop
imul
outsb
lret
cmpsl
cmp
into
imul
push
push
sbb
bound
fwait
mov
jge
dec
lahf
insb
data16
jne
popa
scas
cltd
adcb
add
xor
insb
imul
cmpsl
arpl
insl
jbe
mov
cmpsb
decl
add
sub
test
outsl
addr16
adc
pop
push
mov
movsb
mov
mov
push
das
imul
test
jle
push
popa
cmpsb
push
cs
mov
mov
popa
jle
or
insl
mov
mov
cmp
lret
add
xchg
insb
dec
xlat
test
xchg
dec
roll
imul
fsubrl
cltd
ljmp
xor
cmp
lret
jb
mov
ss
aas
in
cs
or
inc
adc
popa
or
xchg
sub
or
aaa
outsb
sbb
jecxz
adcl
mov
mov
cmp
inc
add
arpl
push
inc
dec
fists
ror
xorl
mov
gs
test
stc
imul
cld
mov
sbb
mov
shlb
fistps
mov
add
and
jmp
int3
cli
push
jp
stc
fidivrl
test
movsb
rol
dec
in
add
and
inc
mov
cs
or
inc
adc
push
pusha
shll
aad
xlat
not
push
sarl
sub
cli
cmpb
cld
pushf
je
pop
jg
cli
data16
stc
gs
cld
push
cld
loop
cld
loope
popa
cld
in
fs
jecxz
arpl
out
cld
outsb
cld
in
cld
insl
cld
lret
cld
lods
cld
mov
push
cld
cmc
cld
clc
cld
xchg
cld
mov
cltd
cld
jns
jnp
in
movsb
gs
add
ret
in
and
aad
xlat
jns
sub
jg
cli
pop
cltd
loop
incb
inc
and
leave
jg
cli
or
pop
outsl
push
ds
je
loope
add
pushl
cli
cmp
and
out
stos
in
add
and
inc
pop
inc
pop
mov
fistps
dec
add
sbb
fwait
popa
xchg
ss
pop
sub
dec
loop
loope
in
jecxz
outsb
pop
nop
pop
xor
pop
sub
pop
stos
pop
ss
aad
xlat
pop
ja
xor
pop
mov
pop
mov
aad
xlat
cmp
sbb
add
jg
cli
aad
je
xor
xchg
mov
pop
or
mov
js
mov
jle
mov
xlat
inc
shrl
rorl
arpl
call
cmp
xchg
rorb
xlat
lahf
rcrl
repz
out
ret
jge
fldl
shll
ds
aad
js
mov
push
call
push
loope
inc
xchg
inc
cmp
add
imul
es
xchg
arpl
call
xchg
lcall
clc
sbb
and
pushf
lahf
arpl
dec
pushf
lret
pushf
mov
repz
mov
sub
imul
sbb
or
pop
sbb
mov
rcll
lods
cs
ss
pop
jno
mov
aad
xlat
stos
sarl
rcrl
mov
and
mov
push
test
stc
mov
mov
int3
mov
pushf
jne
adc
pushf
pop
pushf
fstps
in
test
imul
insl
ljmp
sub
sub
sub
sub
call
lods
or
xor
sub
inc
aam
rorl
pop
popf
andl
cld
int3
cld
stos
cld
sbb
mov
mov
jb
push
cld
adc
repz
mov
cld
inc
cld
aas
cld
pop
cld
fcompl
testl
sti
cs
ss
pop
add
push
pop
pop
loope
scas
pop
or
pop
stos
pop
or
pop
dec
pop
adc
pop
jae
ds
mov
aad
xlat
mov
test
mov
sbb
sahf
sub
out
aad
stos
cld
mov
xchg
cld
fdivrp
mov
jg
cli
or
pushf
push
mov
shrb
sub
sub
sub
sub
call
or
lods
cmp
sub
add
cmp
mov
pop
pop
dec
and
xchg
inc
pusha
out
das
sbb
out
insl
movsb
insb
daa
mov
pop
aam
mov
pushf
dec
arpl
dec
adc
mov
jmp
mov
inc
jg
mov
lods
mov
sub
sub
sub
sub
sub
sub
sub
sub
nop
and
movsb
or
hlt
cmp
dec
mov
lret
jns
cld
push
cld
mov
xorb
xor
stos
mov
xlat
or
nop
subb
subb
lods
pop
nop
inc
test
push
jne
pop
lahf
popl
ljmp
sbbl
insl
lods
stos
in
mov
mov
dec
sbb
inc
inc
out
inc
dec
dec
sub
push
mov
push
inc
pinsrw
lret
popf
sarl
in
or
dec
sub
imul
sahf
popa
mov
stc
mov
mov
jmp
mov
mov
inc
in
dec
adc
push
fcoms
aaa
sahf
fnstcw
jp
mov
xchg
cli
pushf
jp
test
xor
mov
stos
sbb
push
cmp
dec
popf
pop
mov
ret
sub
dec
mov
pop
aad
xor
dec
mov
cmp
inc
fldl
test
mov
push
mov
inc
in
and
mov
pop
jmp
pop
lods
cld
andb
jmp
mov
imul
jbe
cmc
sub
sub
sub
sub
adc
outsb
movsl
in
jg
cli
imul
jbe
xchg
cld
loopne
dec
mov
push
in
gs
call
addr16
sbb
fwait
outsb
dec
insb
pop
jmp
imul
add
adc
fimull
shrl
dec
mov
pop
xchg
cmpsb
sahf
lds
outsb
inc
dec
mov
mov
das
popa
subb
jle
lds
sbb
xorl
lret
inc
imul
inc
repnz
mov
push
inc
je
and
cmp
fsubl
jnp
movsl
mov
xor
lret
and
sub
nop
mov
hlt
mov
xchg
outsl
data16
outsl
call
fidivrl
test
into
inc
jbe
iret
add
sahf
sub
hlt
lcall
jmp
adc
lods
call
insb
dec
popa
xchg
inc
push
dec
jle
popaw
cmpsl
mov
outsb
jns
lahf
ficompl
test
jbe
jb
mov
in
add
out
inc
mov
pop
add
hlt
ljmp
mov
pop
jg
mov
mov
ljmp
loop
shl
leave
or
jmp
lret
aad
xlat
xchg
shl
sar
jle
add
pushl
fcmovbe
jg
and
jg
cli
jne
push
test
movsb
mov
adc
sahf
sub
scas
movsl
xchg
inc
xorl
inc
xor
lds
pop
rolb
sub
add
and
pop
pop
pop
sbb
cmpsb
call
insb
mov
push
fnstsw
stc
movl
shll
outsl
sub
pop
or
jg
add
jae
subl
mov
mov
mov
sahf
popa
out
xor
fdivrp
xlat
test
and
push
imul
movsl
or
test
out
lahf
jg
les
add
jecxz,pn
outsb
pop
mov
scas
mov
push
jp
lahf
out
and
jmp
jle
std
cmp
bound
andl
addl
sub
outsl
mov
jae
push
ds
and
inc
mov
push
inc
jecxz
inc
cmpl
sbb
lds
cmpsl
out
push
call
pop
add
addl
push
dec
leave
pop
xchg
pop
jne
clc
pop
js
negl
xor
sahf
cmp
insb
pop
jp
data16
lods
mov
clc
mov
add
pop
jb
popf
pop
add
loope
popa
xlat
in
fs
frstor
out
lcall
ja
repnz
call
xchg
inc
cmp
dec
test
pop
adc
daa
add
je
negl
inc
jno
jae
push
pop
pop
pop
ficompl
add
and
add
les
push
scas
ljmp
repz
mov
ljmp
jg
cli
nop
jp
stc
test
or
divb
imul
in
pop
lock
sbb
add
jmp
jp
stc
sub
jmp
cmp
sub
mov
inc
xchg
inc
push
and
mov
adc
pop
push
pop
jge
inc
jp
adcb
test
inc
pop
popa
mov
in
add
mov
negl
push
inc
test
test
stos
es
xchg
sahf
xchg
lahf
bound
enter
add
fildl
inc
push
mov
pop
inc
sar
mov
outsb
movsl
push
rcl
rcll
fists
fcompp
pop
fstps
jmp
in
dec
push
bound
mov
add
push
inc
test
mov
push
xor
pop
push
jmp
xor
addl
out
mov
dec
and
std
push
jge
jns
xchg
es
jo
ljmp
pop
sub
imul
bound
lcall
jp
cld
pushf
gs
sahf
insl
popf
imul
jns
cld
jns
sub
sbb
insl
sub
aad
outsb
cmpsl
cmpb
test
cld
out
loope
jb
arpl
imul
aaa
jbe
insb
jne
aaa
inc
testl
mov
pop
hlt
pop
je
repz
cld
cli
cld
stc
cld
cld
cld
fildl
out
mov
dec
out
loop
adc
fwait
jecxz
out
cld
in
mov
cs
inc
xor
pop
in
pop
jmp
icebp
divb
and
inc
clc
dec
js
neg
ja
xor
addr16
pop
jno
hlt
fnsave
fnstcw
std
mov
add
insb
pop
cmp
cli
pop
jp
stc
jns
imul
add
gs
call
inc
addr16
loop
bound
loope
in
inc
outsb
pop
in
pop
insl
pop
lock
jo
cmp
outsl
pop
ljmp
test
adc
cmp
aas
test
push
cmpsb
ret
in
out
bndstx
fmull
pushf
mov
fidivl
sti
out
les
dec
mov
add
add
mov
outsb
inc
add
ret
mov
and
loope
add
clc
mov
icebp
fidivrs
repz
mov
jb
pop
bound
gs
cmp
dec
jns
rorl
xlat
repnz
mov
xor
dec
imul
jecxz
jno
or
mov
jae
xchg
fdivr
mov
adc
pop
fcmovbe
mov
in
enter
out
cmp
pop
mov
hlt
adc
data16
cmp
ja
sti
ficompl
std
jge
call
je
dec
adc
pushf
inc
movsb
leave
je
add
ljmp
xor
and
movsl
push
add
and
jp
cli
inc
fwait
ret
cmpsb
mov
and
pop
outsb
in
cmp
inc
shll
cmp
xor
daa
leave
das
add
inc
mov
push
lods
mov
mov
test
adc
cwtl
inc
ljmp
leave
xchg
icebp
jns
cli
add
mov
in
or
jo
sub
mov
fadds
sub
push
aas
lretw
mov
cmp
orl
call
push
pop
cmp
mov
mov
loope
pop
notb
imul
std
and
mov
sti
push
jbe
lods
enter
call
pop
icebp
rcll
mov
into
mov
jbe
adc
xor
xlat
push
fldl2t
ret
and
in
test
push
dec
pop
mov
lods
in
lret
cmp
add
mov
das
out
cmpsl
fs
xchg
sbbl
add
add
inc
jmp
mov
xchg
push
pop
cmpl
xchg
push
push
mov
outsb
insb
lds
lock
mov
jbe
sbb
test
enter
aaa
sbb
insb
sub
les
dec
add
and
in
std
inc
daa
cmpsb
in
clc
lods
fistl
shr
int
sahf
das
adc
es
dec
test
mov
iret
les
add
and
push
in
into
sub
cli
test
rorl
fistpll
data16
bound
mov
sar
bound
loope
std
mov
cmp
dec
sbb
into
cmpsl
mov
fs
imul
sahf
movsb
cmc
and
outsl
adc
jle
add
ret
cmc
mov
test
lea
aas
imul
stc
repnz
lret
ss
ffree
ret
test
mov
sahf
lods
or
cltd
xlat
popf
and
mov
fsubrp
stos
das
push
and
fs
xchg
and
flds
cs
mov
jge
cmp
jle
push
jg
adc
rcrl
addr16
popa
mov
in
test
outsl
mov
lret
iret
or
xchg
and
jg
fidivrs
loope
inc
imul
push
fwait
and
in
loop
rorl
loope
test
ja
jae
in
push
adc
jmp
dec
inc
and
int
decb
filds
mov
call
leave
jno
fsubs
test
add
nop
sbb
mov
aad
popf
dec
movl
jmp
outsb
push
pop
mov
mov
mov
inc
xchg
enter
lock
std
out
sub
push
push
out
inc
and
inc
and
test
outsb
in
mov
arpl
fwait
push
mov
lret
add
test
sub
sub
mov
inc
lcall
mov
jae
lods
dec
pop
xchg
out
adc
orl
scas
js
push
xchg
mov
mov
lock
imul
and
pop
loope
ret
mov
mov
imul
ret
and
sub
repnz
int
add
outsb
push
xchg
pop
cmp
test
add
jbe
mov
scas
into
ljmp
bound
cmp
lret
sub
mov
xor
push
cmpsb
rcrb
mov
cmp
cmpsl
outsl
enter
sub
inc
lods
cmpsl
mov
aas
dec
and
xor
ds
out
mov
jne
fildll
cltd
daa
cmpsb
push
jns
cwtl
das
call
outsl
jp
in
cmp
xchg
lret
rcpps
addr16
cmpsb
push
fsubrp
sub
popa
pminsw
mov
lahf
add
mov
pop
jbe
mov
or
mov
pushf
cmc
fs
das
mov
xchg
and
mov
lahf
imul
in
outsl
mull
jb
and
cmc
pusha
icebp
sub
lock
ret
mov
push
int
add
das
xor
mov
loop
scas
aaa
mov
cmp
push
lcall
sbb
jmp
jbe
test
mull
add
jmp
sbb
rol
das
inc
add
mov
int3
push
sahf
or
rorl
les
lahf
add
andl
mov
adc
mov
cmp
je
add
dec
in
aaa
sub
push
mov
mov
xchg
subl
out
nop
jbe
stc
lret
cmpsl
dec
icebp
push
imul
neg
add
cmp
pop
push
push
pop
loope
movsl
test
push
push
add
push
aaa
pop
pop
je
push
push
push
mov
ljmp
sti
push
sub
dec
arpl
aad
pop
movsb
popa
movsb
cmpsl
fnsave
lret
fcompl
and
scas
inc
popa
pusha
mov
jge
add
push
mov
adc
jmp
jbe
dec
mov
popf
outsb
inc
push
js
dec
clc
dec
arpl
int
add
aas
leave
pop
fdivr
push
fwait
call
andl
ret
lods
fcmove
or
mov
sahf
cmpsl
mov
ss
lods
mull
arpl
dec
adc
dec
lcall
outsl
hlt
adc
jo
cmpsb
rclb
fs
setne
arpl
mov
pop
sbb
movsl
or
nop
aas
mov
ret
cmp
xchg
aam
xchg
jmp
or
andl
cmpsl
and
mov
das
stos
data16
or
sub
dec
pop
out
and
jle
xchg
or
call
xchg
mov
aaa
xchg
fwait
and
add
jno
or
xchg
cs
mov
add
pop
ljmp
cmp
aam
pusha
bound
popa
mov
cmpsl
mov
and
and
adc
ja
into
xor
jne
mov
jbe
inc
fildl
add
lds
dec
cld
cmp
dec
inc
movsb
test
sub
xchg
movsl
mov
add
xlat
enter
jno
movsb
push
cmpsl
xorl
push
mov
arpl
mov
lock
nop
pop
ljmp
inc
popa
icebp
push
jecxz
and
inc
aad
inc
ljmp
shr
jae
or
jno
xor
ror
stos
add
push
loope
mov
push
movsl
sbb
and
pop
outsl
les
nop
lret
push
addl
ret
cmpsl
push
mov
mov
in
push
fnsave
jecxz
ret
mov
inc
add
mov
push
push
adc
sbb
pop
push
adc
cmpsb
addb
cmp
into
inc
jns
mov
dec
orl
pusha
xor
and
and
adc
clc
dec
mov
repz
test
dec
or
out
xchg
jle
inc
mov
push
mov
add
cs
loope
inc
cwtl
jle
je
jo
movsb
mov
and
gs
ss
push
fs
inc
imull
iret
repnz
imulb
insl
dec
xchg
push
inc
aas
mov
add
aad
movsl
cwtl
repz
and
adc
mov
adcb
in
mov
pop
sahf
ret
xor
sahf
inc
mov
int
push
mov
jle
xchg
loopne
divb
add
add
xchg
fisttpl
cmpsb
inc
sbb
dec
xor
test
mov
pop
mov
xchg
mov
adc
outsl
sbb
loopne
sahf
pop
dec
push
subl
and
fidivrl
ret
popa
cmp
loop
aas
push
sub
movsb
cli
divl
int3
loop
adc
mov
pop
or
in
and
xor
shl
or
stc
and
push
mov
and
dec
fsubs
xor
add
fbstp
and
or
push
add
test
dec
pop
imul
push
mov
out
xor
mov
in
stos
adc
inc
neg
and
inc
cmpsl
comiss
pop
or
and
push
xchg
packuswb
in
cs
push
rorl
loopne
stc
ja
scas
push
test
cld
xlat
sub
lahf
leave
or
cli
fs
cld
adcl
xor
or
jb
cmp
sub
cmp
in
xchg
sub
or
mov
add
push
out
inc
and
xchg
mov
or
push
xor
mov
movsl
les
or
xchg
and
popa
and
test
stos
adc
ja
mov
mov
push
testl
pop
cmpsl
lahf
sub
enter
das
out
std
push
into
test
add
add
pusha
outsl
xor
mov
movl
dec
movsb
xchg
xchg
movsl
repnz
inc
push
pop
xor
xchg
hlt
scas
sub
push
push
xchg
inc
mov
push
pop
dec
popl
jecxz
mov
stos
dec
leave
jmp
push
imul
dec
bswap
mov
or
jae
push
iret
mov
mov
insb
add
lret
fcompl
jo
add
xchg
pop
bound
andl
popa
sbb
mov
mov
rorb
jmp
inc
movsb
cmp
loope
add
and
inc
mov
inc
std
test
sbb
mov
sub
mov
cmpsl
les
ret
std
mov
mov
in
mov
sub
aad
int
out
inc
out
sbb
fsubl
pop
call
inc
out
stc
mov
mov
int
push
lock
daa
jg
pop
loope
fmuls
imull
aad
mov
rclb
or
test
addb
mov
xor
rolb
movsl
lock
jbe
pop
mov
out
imul
cmp
stc
cwtl
test
jae
popa
xchg
ljmp
ret
pop
and
faddl
mov
xchg
inc
popa
sub
ret
pop
hlt
push
pusha
adc
sbb
mov
in
adc
cwtl
mov
loope
inc
sub
inc
enter
les
dec
inc
popf
int3
loopne
or
call
mov
add
ret
in
push
data16
fisubrl
inc
pop
mov
add
out
mov
xchg
in
cli
sbb
mov
lods
test
fldcw
xor
sbb
aaa
and
mov
pop
jae
into
or
mov
inc
pop
cmp
dec
ficomps
pop
jbe
fidivl
mov
mov
bound
add
xor
cltd
mov
ret
ret
inc
in
mov
jae
and
dec
icebp
jno
pop
aaa
inc
xor
mov
aad
fisttps
sbb
outsb
pop
xchg
ret
dec
out
lods
mov
shr
pop
rorl
test
cmc
loope
and
lret
sub
mov
call
out
cmp
cli
test
cwtl
out
jmp
fsub
std
sub
aaa
sub
sbb
cmp
aam
pop
dec
ss
cmp
sahf
mov
in
xchg
mov
xchg
adc
mov
nop
mov
aad
mov
int
imul
cmpsb
call
sbb
fistl
inc
fistpll
fsubr
or
clc
mov
clc
lods
ret
pusha
inc
push
mov
icebp
out
add
push
daa
adc
add
push
ja
bound
popa
scas
inc
pop
inc
rcr
fstl
jno
push
inc
aam
dec
fwait
mov
inc
mov
lods
cwtl
mov
mov
and
cwtl
push
jle
data16
leave
push
fs
cmpl
push
outsb
hlt
mov
int
lea
insl
ret
or
out
push
ficompl
pop
mov
cmp
call
sub
pop
shll
fimull
mov
idiv
jecxz
stos
adc
lcall
xchg
cmp
lcall
mov
or
mov
mov
dec
loope
add
and
cmp
stc
push
pop
testl
sbb
fisttps
loope
mov
aam
pusha
not
cmp
mov
push
pop
rolb
push
dec
inc
lea
outsl
mov
pusha
adc
jno
mov
test
lods
and
pop
nop
pop
pop
pop
mov
pop
out
inc
lcall
mov
adcb
hlt
sbb
sbb
bound
cmp
ret
push
xlat
sarb
jne
adc
movsl
pop
cmpsb
cmp
and
lock
sub
iret
sbb
mov
xchg
cmpsl
popa
add
mov
jl
int
inc
dec
pop
inc
sub
outsb
hlt
in
in
movb
bound
outsl
dec
sbb
ss
inc
mov
jle
fnsave
xor
aad
sahf
int
lock
cld
push
aas
mov
ret
push
mov
lret
cmpsb
dec
mov
adc
inc
adc
pop
add
push
data16
cmp
cld
xchg
adc
dec
jge
cltd
xor
cmc
mov
fxch
and
sbb
or
mov
mov
adc
out
dec
or
stos
fsub
mov
sub
sbb
mov
add
inc
rcr
add
mov
inc
dec
or
jmp
jge
test
mov
fcomps
inc
mov
test
outsb
or
int
loope
mov
sbb
inc
pop
insl
add
jmp
lods
cltd
adc
movsl
fstp
mov
mov
xchg
jp
loope
inc
jae
orb
loope
cwtl
jne
inc
movsb
inc
push
ja
shrb
pop
shrb
in
and
aaa
cltd
cmp
mov
icebp
xchg
cmp
jo
add
pop
pushf
sbbl
icebp
push
add
mov
iret
mov
mov
push
das
cmp
fincstp
sbb
scas
adc
das
sbb
sub
int
pop
pop
pop
fs
data16
hlt
arpl
lods
ds
aas
xchg
pop
test
call
push
in
push
call
sbb
and
jbe
daa
loope
popf
inc
fadd
add
movsb
xor
scas
sbb
enter
mov
push
and
and
movsl
mov
rcrl
iret
mov
jns
push
dec
aam
shr
sahf
fsubrs
outsl
push
arpl
cmp
pop
fsubrl
push
add
repnz
int
cs
mov
fdivr
adc
mov
or
adc
imul
adc
aam
arpl
jg
and
int
pop
sub
cmp
mov
mov
mov
mov
or
add
test
mov
sbbb
mov
or
mov
imul
add
cs
add
mov
repnz
popa
test
or
mov
mov
in
and
pop
mov
add
daa
insl
mov
dec
fwait
and
out
mov
leave
lret
sub
shld
arpl
cld
jecxz
aaa
cmpsb
adc
jl
adc
dec
add
les
lods
scas
out
push
shld
movsl
inc
inc
adc
sub
dec
into
inc
cltd
dec
orl
add
add
jecxz
ret
cmp
dec
int
xlat
and
lods
bound
leave
loope
and
out
scas
lods
add
test
clc
das
lea
jl
push
dec
sub
pop
ljmp
aaa
mov
add
inc
nop
mov
loope
out
outsb
mov
ret
dec
mov
pop
inc
jle
rorl
lods
jecxz
clc
sub
ret
scas
test
dec
clc
clc
cs
or
dec
jl
add
leave
sub
pusha
aaa
es
ljmp
enter
push
jo
test
mov
test
sub
outsl
fsub
das
sub
sub
mov
arpl
out
push
or
ret
sub
sti
jo
sub
dec
add
int
popl
inc
add
mov
test
adc
ja
std
int3
lret
cmpps
add
or
stos
lret
push
orl
lods
mov
ret
in
shl
mov
dec
outsb
lret
inc
aas
out
in
push
scas
outsb
push
into
dec
ljmp
and
popa
dec
and
clc
das
int
ret
or
inc
push
out
add
push
insl
jmp
subl
lods
test
cmp
jmp
or
nop
sub
in
or
and
bound
out
into
scas
bound
invd
arpl
jo
ret
jecxz
mov
lret
and
jg
sub
into
testl
xchg
fiaddl
or
add
inc
ret
je
inc
inc
mov
or
sub
das
push
sub
out
xorl
outsl
pop
movsl
or
imul
es
in
mov
push
sub
into
mov
int3
inc
or
lahf
dec
xchg
fimull
jbe
js
leave
dec
arpl
and
outsl
in
out
or
add
fwait
cmpsb
out
mov
pop
pop
sub
mov
outsb
jnp
orl
jecxz
inc
add
scas
lea
cmp
outsl
dec
add
arpl
scas
xchg
rorl
push
add
dec
ja
xor
outsl
dec
mov
jmp
imul
lods
sti
mov
inc
scas
ret
cmp
in
push
je
test
mov
mov
inc
ret
mov
mov
dec
nop
jecxz
arpl
insb
jnp
bswap
arpl
mov
lahf
dec
bound
mov
jmp
and
into
adc
sbb
into
imul
sahf
daa
lret
nop
out
mov
and
mov
or
mov
mov
out
int
xchg
inc
mov
add
insl
lret
sbb
or
sub
lods
in
es
mov
fldenv
stc
push
stos
inc
scas
xchg
sub
or
or
inc
sti
mov
ljmp
clc
in
ret
push
xorl
jns
das
loop
outsl
xor
mov
ret
push
sub
insb
ljmp
xchg
std
stos
add
mov
test
lods
fwait
sub
ret
mov
inc
ret
sub
call
orl
addl
andl
pop
iret
out
push
dec
lods
jne
xchg
xchg
inc
dec
shrl
lods
lods
cmp
dec
sub
rclb
andl
imul
es
sub
imul
dec
add
xorl
and
dec
dec
mov
inc
cmp
iret
lods
lods
xchg
adc
push
mov
jge
arpl
lret
fs
scas
out
mov
mov
jecxz
push
outsb
popa
clc
jge
ljmp
in
popa
sub
push
or
in
out
push
add
test
scas
es
dec
and
xchg
sub
jl
outsl
arpl
imul
jne
subl
fmul
inc
dec
fiaddl
pop
lods
scas
out
cs
mov
mov
lods
mov
repnz
es
subb
push
shrl
lret
es
scas
insl
pusha
xor
call
inc
pop
cld
push
in
pop
rsm
lods
rep
std
xor
mulb
mov
or
xorl
fsubrp
xchg
shrb
scas
sub
popa
pushf
out
ja
jno
out
sub
ljmp
pop
insl
jae
dec
push
xor
insl
mov
sub
jg
nop
jbe
sti
push
leave
jmp
push
bound
mov
add
lea
test
xchg
push
ss
mov
scas
ljmp
lods
jmp
dec
jb
or
outsl
es
lods
dec
dec
roll
or
mov
add
cs
add
jp
mov
arpl
arpl
pop
cwtl
push
iret
push
test
push
sti
mov
cmc
sub
int
fsubrs
arpl
lea
dec
pop
push
inc
test
cld
mov
in
mov
mov
test
loope
insl
lea
xchg
or
sub
pusha
clc
push
in
je
lods
or
scas
cmp
das
xor
leave
dec
sbb
add
lret
movnti
push
outsl
dec
das
cmpsb
das
or
mov
mov
subl
add
and
insb
mov
pminsw
xlat
lret
xabort
test
mov
lea
mov
sti
test
jns
outsl
mov
lock
xchg
loop
js
mov
pop
lods
dec
lods
fwait
add
mov
loop
sub
ds
jnp
or
scas
xchg
aad
leave
out
stos
clc
das
mov
ret
into
and
clc
jecxz
prefetch
leave
push
test
add
test
xchg
cs
fildl
ret
ljmp
inc
inc
jne
lock
fldcw
push
iret
and
subb
mov
arpl
stos
dec
leave
scas
sbb
mov
das
fs
add
or
mov
arpl
js
push
ret
push
scas
inc
popa
cwtl
or
cmp
into
inc
ret
cmp
shll
mov
add
insl
scas
call
or
outsb
and
push
fwait
mov
insl
int
mov
jb
fs
dec
jl
mov
sub
or
push
cmpsl
loopne
shrl
mov
push
lcall
test
xchg
out
and
scas
loope,pn
adcl
popa
call
aad
inc
pop
je
bound
popa
jns
xchg
mov
aaa
in
adc
mov
test
sub
out
pop
xorl
mov
js
pop
sub
sahf
mov
inc
scas
clc
bound
andl
les
outsb
int
inc
lods
jl
in
mov
int
movsl
int
mov
mov
dec
inc
dec
nop
into
mov
hlt
cmp
and
arpl
inc
popa
loop
jl
lods
into
nop
in
lret
cmp
idiv
iret
out
or
jb
imul
orl
push
subl
fistl
stos
pusha
dec
je
imul
xor
jmp
out
into
xor
jl
sub
out
stos
aam
inc
jns
jne
test
add
retw
mov
cs
dec
leave
sbb
sub
add
insb
mov
and
push
sbb
push
sub
cmp
movsb
or
in
lods
cltd
or
sahf
jbe
out
addl
dec
mov
je
in
and
xchg
cmpsb
add
fwait
imul
fmull
vmwrite
pop
mov
or
push
out
sub
es
adc
xchg
push
cmp
jp
jno
cmp
out
lret
loopne
fabs
jnp
push
stos
andl
jg
sub
test
add
mov
iret
ret
inc
test
clc
xchg
sti
cmpsb
jnp
jne
out
das
pop
addl
mov
cmpsl
jmp
ret
mov
test
or
fisttpl
push
leave
mov
mov
push
mov
fwait
and
out
mov
mov
insl
scas
icebp
out
push
arpl
imul
and
mov
fsubl
xchg
and
mov
sub
nop
jno
pop
push
hlt
inc
movsl
mov
lods
sarb
sub
dec
outsb
dec
add
insl
mov
in
bound
mov
mov
fwait
push
lret
cmp
jbe
lods
jmp
mov
sub
jno
lea
xchg
je
arpl
add
stc
pop
sub
lods
pop
fdivl
adc
lods
push
mov
int
jmp
dec
ret
int
dec
cmpsb
xor
outsb
clc
mov
insl
lret
imul
nop
cs
jge
es
scas
test
mov
sub
ljmp
and
ret
outsb
cmp
inc
into
dec
decb
push
mov
mov
ss
loop
mov
bound
push
aaa
stos
or
mov
scas
mov
jo
bound
sub
sbb
rorl
in
in
ret
popf
lods
and
adc
scas
or
test
add
ljmp
or
sub
inc
fwait
out
and
fs
scas
jecxz
dec
inc
and
adc
and
cmp
das
shlb
jg
sub
mov
xchg
imul
mov
and
push
out
loop
jl
dec
mov
out
dec
jge
xchg
insb
mov
insl
mov
jno
jb
mov
dec
out
sarl
scas
add
popa
jecxz
je
test
jne
jb
mov
or
sub
push
and
jae
inc
fwait
push
dec
dec
addl
bound
pop
jle
lret
pop
jecxz
jmp
shll
mov
shll
inc
mov
dec
sti
sub
or
data16
sub
lgs
xchg
xchg
jmp
xchg
sub
bound
loope
ret
outsb
imul
daa
arpl
nop
mov
mov
or
dec
ljmp
pop
add
ret
lods
jne
leave
imul
test
clc
lods
or
push
das
lds
cwtl
lea
iret
mov
inc
mov
push
push
or
push
fadds
ds
subb
test
add
or
pusha
loope
ret
inc
notb
mov
stc
orl
jmp
popa
or
insl
addl
insl
roll
lods
sysenter
daa
cs
mov
pop
and
fisttpl
mov
and
movsb
imul
dec
mov
out
icebp
mov
shlb
in
jbe
pushf
bound
out
mov
loop
into
jmp
into
jmp
dec
xchg
scas
mov
movsb
orl
add
ret
mov
in
sub
stos
or
xchg
fwait
pop
mov
lret
inc
out
arpl
inc
ret
add
insb
outsb
lea
popa
fidivrl
out
jne
and
sub
loop
addl
sti
mov
mov
mov
sbb
xchg
mov
or
scas
outsb
sub
idiv
jmp
mov
int
scas
push
ja
jns
ljmp
mov
pop
subb
push
inc
in
inc
mov
test
push
cltd
add
ljmp
lods
pop
xchg
sbb
mov
ret
jbe
lock
pop
nop
jecxz
out
out
inc
bound
arpl
shrb
cs
pop
addr16
add
ss
sub
mov
jns
arpl
into
mov
xor
jne
in
outsl
lods
mov
das
sub
inc
ret
insb
dec
outsb
scas
insl
mov
and
or
out
arpl
stos
nop
js
or
dec
jae
lea
inc
mov
inc
mov
mov
mov
mov
je
stos
int
ljmp
rorl
insb
mov
dec
scas
orl
popa
cmpsl
insl
outsl
arpl
into
loop
stos
or
dec
dec
gs
out
rorl
lahf
and
ret
cmpsb
and
mov
lds
push
out
mov
or
out
jmp
xlat
inc
push
mov
inc
add
xchg
out
inc
mov
iret
mov
stos
stc
ror
pop
loope
insb
aaa
insl
inc
out
cmp
wbinvd
imul
push
cli
lds
insb
out
orl
xchg
test
dec
mov
lods
in
sti
dec
jecxz
roll
int
cltd
dec
mov
jo
mov
int3
lods
sbb
clc
outsl
out
jp
orl
push
iret
daa
ret
mov
pop
inc
adc
xor
or
bound
setl
sub
out
stos
imull
shrl
out
jl
outsl
lret
dec
out
mov
or
mov
sbbl
mov
push
jle
int
jo
add
adc
lods
bound
cli
in
aas
mov
and
or
dec
lock
sti
and
inc
sarl
cmp
mov
mov
dec
push
loope
ja
test
subl
arpl
cmovns
iret
push
pop
mov
mov
popa
dec
scas
out
das
inc
and
mov
mov
jo
inc
adc
cmp
ret
mov
push
mov
jmp
jnp
nop
inc
imul
sub
aaa
mov
dec
jne
sbb
adcb
js
and
cltd
or
outsl
mov
ret
out
jg
sub
sub
add
push
bts
fidivl
adc
iret
and
or
mov
mov
rolb
lret
push
jge
iret
out
pushf
decl
imul
daa
sbb
int
mov
dec
jmp
mov
and
dec
push
outsl
inc
lea
clc
inc
scas
sub
cmp
dec
dec
xor
je
inc
in
jno
addr16
sti
or
scas
bound
jp
adc
mov
mov
cs
scas
mov
mov
push
out
or
out
stos
iret
jl
arpl
imul
out
inc
out
xorb
popa
or
insl
lret
bound
mov
imul
add
mov
ret
lret
dec
dec
jbe
jge
and
mov
cs
and
out
dec
clc
syscall
inc
in
clc
movsl
movsb
dec
scas
add
push
jl
addl
test
repz
jecxz
and
loope
aad
out
pop
stos
mov
pop
push
jl
or
nop
movsl
out
mov
xchg
popa
xor
es
ljmp
sub
insl
int
in
mov
sti
push
dec
dec
and
outsb
mov
into
arpl
ljmp
outsl
dec
jecxz
mov
stos
inc
add
iret
and
je
inc
add
arpl
push
mov
pop
mov
mov
test
and
dec
in
or
mov
cwtl
insl
popf
add
outsb
or
sbb
inc
push
lea
jb
jne
and
inc
enter
clc
je
dec
dec
lods
jne
js
scas
dec
arpl
out
xor
add
js
sub
movsb
clc
lea
es
test
push
stos
cmp
das
test
mov
fidivrs
out
mov
inc
nop
cmp
mov
lcall
cmpsb
leave
inc
sub
fwait
bound
push
je
mov
ja
adc
mov
jmp
pop
fistl
mov
scas
scas
mov
bound
and
popa
inc
bound
mov
mov
iret
outsb
sub
out
decb
dec
sbb
je
insl
sub
or
in
lods
lock
inc
mov
push
push
leave
vphaddubq
jns
test
lods
popa
inc
sub
cmpsb
int
pop
cmp
mov
add
cld
iret
outsb
pop
mov
xlat
bound
jg
inc
lret
xchg
out
add
mov
xor
popa
jmp
add
cld
sub
imul
in
bound
pop
subb
sti
and
arpl
stc
and
hlt
dec
mov
xchg
lock
std
jl
jmp
add
jbe
jbe
out
add
test
sub
jb
loop
popa
xchg
dec
into
fucom
jp
lods
leave
lods
mov
or
out
outsl
mov
bound
lea
jmp
adc
arpl
cmp
push
dec
leave
sub
ret
andl
mov
test
mov
jmp
sbb
lea
inc
push
lods
lret
andl
out
test
inc
cmp
pop
mov
les
arpl
sarb
daa
arpl
es
mov
sti
insb
mov
or
out
punpckhdq
dec
call
xchg
or
jb
incl
ret
mov
inc
xchg
fldt
dec
idiv
push
jg
jmp
loop
mov
mov
jbe
jb
arpl
outsb
lods
jb
call
repz
arpl
addr16
ljmp
mov
out
sub
mov
scas
jle
push
lea
into
lea
ljmp
jge
popf
scas
dec
outsb
jo
test
insb
mov
mov
loope
jle
inc
addl
stos
jecxz
jo
out
mov
and
xchg
roll
outsl
ljmp
rolb
sub
xorl
ljmp
dec
add
arpl
out
fiadds
jle
pop
push
mov
push
ja,pn
push
sbb
lea
xchg
pop
inc
imul
inc
clc
sti
outsb
and
outsl
inc
repz
js
mov
lods
or
lods
jecxz
out
jbe
js
test
adc
dec
xor
mov
inc
test
jne
sarb
scas
dec
jno
jmp
and
xchg
pop
int
mov
popa
dec
cmp
test
cmp
imul
cltd
lea
les
cmpl
pusha
fimuls
shll
mov
push
adc
insl
or
scas
adcl
in
mov
ret
push
or
je
das
and
ret
out
arpl
xchg
lret
mov
into
popa
data16
add
fisubl
xor
pop
sub
jmp
sti
sbb
data16
pop
mov
lock
dec
std
clc
mov
inc
rorl
jns
lock
movb
imul
dec
or
outsb
inc
mov
out
lcall
pop
outsl
jmp
or
data16
and
das
dec
mov
lds
mov
add
mov
cs
adc
les
test
fwait
and
arpl
push
cmp
dec
or
ds
mov
dec
in
xor
push
lods
xor
in
shll
arpl
push
outsl
sub
lock
test
push
iret
fscale
lret
or
dec
nop
cltd
dec
and
adc
sbb
int
fidivs
subb
loope
outsb
cmpb
cmp
in
ror
stc
sub
mov
outsb
jae
mov
jmp
jge
jo
rol
insl
psrlq
or
add
push
sub
insl
iret
mov
inc
push
subl
int
scas
out
mov
jne
imul
scas
push
mov
push
push
mov
int
movsb
fwait
add
mov
sub
pop
inc
cwtl
dec
pop
inc
insb
les
mov
lods
es
jns
into
lods
dec
stos
add
mov
pop
jp
arpl
mov
insl
push
or
xchg
or
jbe
pavgw
and
pushf
pop
daa
xor
or
lea
scas
bound
subl
ret
and
jg
xchg
sub
dec
pop
or
sbb
or
ror
into
in
into
or
out
sub
je
mov
dec
mov
ret
sub
ror
jbe
leave
leave
adc
lea
lock
loope
insl
xorl
into
pop
leave
xchg
mov
loope
rorb
bnd
sub
sub
inc
jp
scas
in
shr
jecxz
into
inc
xor
subl
cmp
in
stos
data16
sbb
and
das
dec
insl
jb
ljmp
fisttpll
mov
out
clc
stos
ja
in
mov
or
mov
push
mov
stos
jl
inc
insl
bound
and
fisubs
add
dec
es
or
insl
add
int
dec
lahf
lahf
push
mov
into
lret
lret
cmp
outsl
dec
aas
test
out
popa
inc
push
outsb
pop
inc
repz
je
or
or
ljmp
inc
cltd
cmpsl
push
or
fisubrl
mov
mov
stos
les
cmp
clc
mov
sti
arpl
jecxz
jl
add
outsl
pxor
daa
arpl
pop
push
mov
aaa
inc
cmpl
add
push
mov
jne
lea
or
faddl
push
mov
mov
call
cs
das
scas
push
repz
and
mov
js
data16
shll
cmp
iret
pop
dec
in
loope
out
fwait
inc
sbb
mov
insl
test
stos
inc
iret
das
idivl
test
push
mov
or
repz
xchg
adc
inc
xor
add
mov
insl
xorl
out
lcall
ret
sub
mov
into
mov
pop
lret
add
inc
jne
sbb
sub
outsb
filds
inc
push
aaa
imul
jno
jne
sbb
into
mov
and
inc
das
es
xchg
test
xchg
or
sub
add
imul
xchg
fs
punpcklwd
mov
lods
push
sub
cmpl
imul
aas
mov
inc
dec
dec
mov
ret
mov
into
cmp
fmull
mov
invd
inc
or
sub
mov
sarl
stos
mov
ljmp
fwait
or
rorl
test
mov
cmp
arpl
push
out
cmc
out
xor
insl
xchg
out
orl
das
imul
xchg
in
out
inc
dec
bound
adc
pop
pop
fwait
dec
or
sbb
insl
mov
cmc
mov
dec
lods
dec
and
gs
lahf
lea
sti
dec
dec
out
mov
mov
jmp
pop
mov
mov
inc
xchg
and
mov
test
mov
dec
sub
cvtpi2ps
or
sub
mov
push
jl
dec
lods
inc
fldt
iret
dec
mov
jmp
daa
add
les
and
popa
movsb
fs
jp
mov
arpl
xor
imul
cmpl
nop
mov
fildll
pushw
outsb
in
lods
stos
sbb
and
sub
movsl
and
mov
sub
imul
subl
jne
mov
cmp
mov
and
jmp
test
dec
add
adc
mov
add
in
mov
lea
daa
lret
xchg
pop
hlt
out
and
nop
and
sub
lods
and
je
mov
and
pop
mov
into
js
jmp
jmp
das
xchg
push
push
push
and
imul
jno
lds
mov
cmp
rorl
es
scas
outsl
iret
test
mov
jg
and
ret
mov
push
mov
lods
cs
cmpl
jecxz
ret
adc
and
dec
or
mov
sub
fadd
and
sub
mov
add
and
cmp
mov
xor
sbb
ds
das
mov
jo
mov
mov
mov
repnz
outsb
aam
movsb
xchg
sbb
insl
fcomip
xchg
test
aas
lahf
insb
outsl
repz
jp
jno
mov
lods
mov
cs
dec
dec
lret
cmpl
into
bound
outsl
jb
jne
jns
addr16
insl
dec
jecxz
and
jbe
ret
mov
dec
or
mov
xchg
out
and
dec
or
out
loope
sub
popa
ret
lret
out
mov
and
arpl
pop
inc
mov
loope
test
fadds
lock
jo
int
and
mov
test
fnstcw
or
mov
dec
jl
inc
popa
xchg
push
orl
sub
pop
clc
jne
adc
imul
inc
dec
jg
mov
imul
insl
lds
jge
sbbl
mov
arpl
xchg
jnp
sub
shl
icebp
dec
pop
pop
dec
mov
test
clc
andl
nop
sub
aas
inc
aaa
shr
xchg
orl
ljmp
out
cs
add
push
or
mov
int
addr16
jecxz
adc
or
mov
mov
pop
push
ljmp
push
lret
outsb
dec
xor
or
or
push
leave
scas
insb
test
out
ljmp
loop
fwait
rorl
push
imul
movsl
lret
pop
sub
aas
ljmp
out
sbb
mov
push
int3
mov
push
fwait
inc
nop
mov
arpl
xchg
jo
xor
pop
mov
push
imul
inc
inc
jle
insl
inc
movsb
mov
das
mov
jecxz
inc
jp
mov
dec
or
jecxz
xchg
xchg
mov
insb
jbe
dec
fldt
and
scas
push
inc
inc
ret
les
dec
das
shrb
or
mov
dec
jb
jne
or
lret
add
movl
mov
sub
sub
mov
outsl
mov
jecxz
dec
or
in
in
jmp
clc
dec
dec
insb
sahf
nop
ljmp
loope
arpl
popa
dec
popf
scas
xor
out
es
out
stos
testb
pop
mov
jo
test
adc
ljmp
out
or
ret
jno
adc
addb
sub
cmovle
test
ret
jmp
call
sbbb
out
out
sub
sub
sti
mov
push
insb
dec
lods
ret
ljmp
shrl
es
jnp
cs
fdivr
xor
imul
and
mov
repnz
leave
imul
xchg
incl
adc
dec
mov
arpl
jmp
and
lods
fisubrs
or
loope
test
dec
push
mov
jp
mov
sub
mov
sbb
mov
int3
jmp
je
dec
and
lea
lods
dec
jno
jbe
jbe
cmp
push
and
loop
test
shrl
jp
sub
and
popa
push
inc
mov
out
fisubl
enter
mov
arpl
mov
leave
jge
mov
es
ljmp
dec
pop
and
dec
lahf
fistps
ljmp
stos
push
mov
and
push
inc
mov
dec
lods
push
push
dec
repz
mov
cs
decl
cmpb
popl
movsl
ret
popa
mov
sarl
ja
arpl
lds
scas
insl
repz
movsl
jb
sub
inc
mov
sub
scas
rorl
push
and
in
dec
inc
pop
jl
insl
mov
into
nop
arpl
lods
daa
popa
scas
jmp
sub
dec
jne
jg
jns
movsl
mov
movsl
lea
xchg
outsl
push
lods
imul
mov
cmovae
inc
je
dec
arpl
int
sub
scas
add
jmp
mov
dec
and
lret
mov
push
jmp
mov
jno
and
sbbl
movsl
out
std
loopne
sub
xchg
insl
stc
mov
pop
xchg
sbb
in
sub
push
scas
dec
push
jmp
aaa
mov
dec
fisttps
mov
leave
inc
inc
iret
insl
sbb
js
cmp
add
jmp
xchg
negl
stos
fbld
out
mov
fwait
dec
scas
pmaxsw
jb
or
arpl
scas
sti
push
cmp
and
adc
lret
mov
in
out
and
insl
rcl
out
dec
cmp
jne
clc
jbe
loope
fisubrs
lods
push
dec
nop
mov
push
cmp
pusha
fwait
inc
arpl
cmp
ret
aaa
sub
idivl
scas
pusha
inc
out
jne
nop
mov
add
idivb
mov
and
test
daa
movsl
fwait
and
sub
vpmacssdql
out
scas
sti
je
jmp
into
fisttpl
bound
scas
mov
lret
adc
es
jecxz
rcrl
or
sub
inc
sub
adc
js
scas
mov
iret
mov
stos
add
cmp
rcll
in
sbb
sbb
addl
outsl
test
lock
inc
js
orl
mov
loope
cmp
movsb
out
in
sti
iret
lea
pop
in
es
dec
scas
add
sub
andb
sbb
xor
jns
sti
cmpsl
out
add
or
nop
rorl
dec
or
push
fnstsw
imul
inc
call
jecxz
cs
es
mov
cmpsl
mov
in
push
cmp
mov
mov
sub
imul
push
insl
lods
sub
jg
add
sbb
cld
inc
sub
shll
cmp
in
cmc
outsb
adc
sub
inc
test
bound
mov
xchg
lret
or
lods
mov
adc
stos
ja
nop
or
adc
xchg
mov
arpl
das
lods
in
mov
int
add
scas
sti
and
mov
sbb
test
jl
loope
shrl
jg
out
sub
imul
mov
mov
mov
shll
js
das
or
inc
jne
test
arpl
in
lret
int
loop
jnp
ret
bswap
push
outsb
and
fs
ljmp
daa
mov
jmp
jb
movsl
in
mov
call
test
push
push
aaa
inc
jnp
or
loope
pop
sub
imul
lock
and
es
mov
iret
test
sub
insl
dec
ja
pop
inc
mov
xlat
mov
dec
cmp
cmp
iret
int
push
jmp
rcpps
faddl
jno
cmp
in
lret
mov
inc
or
test
and
ja
loop
dec
addr16
ss
push
outsl
std
sub
jmp
js
and
clc
xchg
sub
mov
stc
sub
jl
push
nop
test
dec
scas
leave
push
lods
mov
and
int
insl
dec
imul
dec
in
push
mov
int
sub
mov
push
lea
mov
xchg
pop
jl
lods
arpl
outsl
clc
jecxz
mov
bound
sbb
test
ret
sbb
je
das
or
pusha
into
stc
mov
and
lods
clc
dec
leave
test
jecxz
jp
add
ret
mov
push
pop
inc
dec
add
aad
loope
xor
leave
je
cs
outsl
aas
test
mov
pop
mov
mov
sub
mov
bound
leave
stc
fisttpl
ret
or
dec
lret
mov
lods
sbbl
mov
stos
arpl
outsb
je
cld
mov
das
sub
orl
mov
imul
push
lds
mov
inc
add
imul
aaa
push
imulb
int
xchg
movd
es
pop
orl
imul
dec
or
aam
je
int
lret
sbb
mov
in
and
rcrl
lock
xor
ret
add
call
lods
out
xchg
add
inc
clc
jbe
jmp
cs
mov
addr16
lret
jg
adc
jl
sub
mov
mov
mov
mov
imul
sbb
subl
mov
out
mov
popa
js
das
jbe
mov
test
scas
cmp
lock
out
or
lea
jbe
fildl
add
imul
inc
orl
xchg
cmp
imul
dec
dec
outsl
xor
hlt
bound
roll
jmp
mov
pandn
mov
pop
xchg
inc
lret
mov
imul
or
dec
into
loop
jmp
mov
subl
ljmp
dec
dec
and
dec
ss
ds
clc
sub
ret
xlat
dec
pop
pop
ljmp
push
aas
dec
mov
dec
scas
nop
mov
cmpsb
mov
fbld
lea
mov
jmp
test
xor
sub
popa
mov
je
mov
and
outsb
dec
sub
mov
out
cmp
inc
push
lds
daa
loop
in
out
bound
imul
out
add
or
mov
and
or
ret
xchg
push
pextrw
add
and
xchg
clc
dec
iret
leave
repnz
lods
jecxz
mov
mov
mov
jns
cmp
jle
or
outsl
inc
jp
inc
scas
out
mov
outsb
add
jge
ret
and
sub
cmp
stos
ljmp
inc
jle
lea
cli
out
nop
icebp
sub
imul
inc
scas
sub
mov
mov
popl
int
adc
inc
ret
sti
in
lea
or
mov
mov
adcl
insl
mov
arpl
mov
xor
out
faddp
das
inc
mov
test
jge
cmc
pop
rcrl
popa
jb
ljmp
insl
call
andl
sbb
dec
addl
mov
dec
rol
jno
loop
nop
mov
stos
repz
movsb
in
mov
add
out
mov
xor
jle
dec
jb
cmovae
adc
xchg
pop
inc
inc
ret
sub
jmp
lods
bound
int
outsb
jecxz
mov
scas
mov
inc
fists
and
xchg
jecxz
fwait
mov
lret
and
test
inc
dec
sarl
popa
or
das
cs
mov
enter
in
into
jne
mov
rcll
orl
or
pushf
sbb
push
iret
lock
outsb
clc
add
jne
out
int
mov
jnp
add
repz
adc
inc
loope
push
xchg
inc
push
scas
arpl
xchg
adc
xor
std
divb
ja,pn
pop
outsl
in
mov
ror
ret
sti
divl
jecxz
nop
jmp
or
ja
mov
out
jl
ljmp
xor
fstps
nop
jno
sbb
orl
leave
call
loope
scas
out
dec
mov
stc
out
xor
dec
lods
clc
inc
push
cmp
mov
cmp
es
test
lret
iret
decl
add
into
and
hlt
ljmp
insb
or
fnstcw
mov
scas
push
bound
loope
jecxz
inc
aas
pop
cmc
add
push
inc
sbbl
leave
rsm
repnz
jb
out
cltd
mov
jns
ljmp
fwait
es
and
mov
test
imul
arpl
jl
inc
test
lret
test
and
mov
add
testb
jg
or
xchg
lods
dec
mov
inc
and
dec
stos
adc
or
jb
outsb
sbb
popa
mov
adc
jl
lret
inc
mov
or
push
test
add
push
cmpl
mov
cmc
out
jge
cmp
and
jge
jecxz
jb
mov
rcrl
mov
and
jecxz
into
inc
rorl
subl
stc
cs
mov
mov
and
test
cmp
inc
outsl
loope
filds
cmp
sti
dec
bound
cmc
jge
or
fcmovne
nop
jmp
dec
push
and
das
je
out
inc
out
xchg
sbb
aas
push
jmp
xchg
add
or
testl
push
leave
add
sub
test
arpl
lods
into
arpl
and
out
add
ret
lods
cmp
test
imul
stos
and
int3
inc
and
jecxz
xor
jmp
add
out
xor
jp
out
scas
into
icebp
mov
jnp
loope
out
inc
les
cs
stc
leave
mov
mov
xchg
inc
inc
dec
mov
dec
cs
cmp
add
jl
arpl
mov
out
inc
test
lret
les
xchg
das
repnz
test
ljmp
sub
outsb
das
in
xchg
lret
scas
js
dec
and
ret
mov
test
inc
or
fwait
mov
pusha
int3
inc
nop
xor
into
sub
sbb
jmp
ret
sahf
out
sub
and
dec
subl
xchg
stos
mov
loope
inc
out
out
test
arpl
push
and
mov
mov
sahf
je
nop
or
mov
imul
dec
mov
add
inc
lods
lret
outsl
cmpb
inc
xor
roll
sub
mov
stos
add
xor
cmp
sub
sbb
inc
fmull
inc
dec
ret
outsb
sti
or
sub
aas
scas
mov
jmp
out
dec
or
pop
inc
into
clc
arpl
sbb
imul
mov
je
mov
push
mov
popa
dec
sbb
inc
inc
mov
lock
shll
push
cmp
loope,pt
jmp
lods
sbb
jecxz
pop
movsl
sub
mov
popa
fildl
dec
lods
scas
xchg
dec
mov
mov
cli
dec
pushf
and
sbb
arpl
push
dec
jo
add
mov
mov
arpl
inc
sar
std
lret
mov
scas
cltd
test
cmp
clc
jns
or
or
dec
fwait
psubsw
ret
leave
or
movsl
push
dec
mov
push
mov
sub
jle
sub
arpl
out
dec
dec
add
jmp
xchg
in
scas
pop
imul
movsb
lds
call
lods
dec
cmpl
arpl
sbb
iret
shll
insb
xchg
test
mov
sbb
lods
jg
leave
or
in
cwtl
xchg
arpl
int
push
stc
sub
hlt
int3
daa
and
inc
subl
mov
mov
sub
in
jne
leave
sub
imul
mov
mov
roll
nop
ret
and
mov
dec
and
mov
pop
mov
cld
arpl
ljmp
out
jnp
test
scas
js
dec
inc
sub
cmpsb
push
shll
sub
pop
jecxz
outsb
jle
push
mov
jmp
jecxz
dec
lea
jmp
test
jmp
stos
jg
scas
popa
stc
cmp
jns
dec
jb
int
lods
cmp
jecxz
mov
test
adc
dec
leave
lds
xchg
outsl
jecxz
call
loop
lds
or
dec
outsl
ret
mov
jmp
sub
imul
dec
push
out
ret
int3
jnp
das
lods
cmpl
pop
mov
xor
lret
imul
add
fwait
jne
jp
jnp
inc
outsb
jmp
shlb
lods
packsswb
stos
dec
mov
jl
scas
out
dec
push
fwait
jmp
lods
dec
imul
and
lock
and
xchg
jmp
add
in
mov
nop
iret
jbe
dec
jmp
scas
in
dec
stos
stos
dec
orl
mov
loope
into
xor
loope
xlat
outsb
dec
fimuls
cmp
out
or
dec
fistl
jecxz
jmp
daa
out
loop
push
mov
imull
pop
fwait
sub
dec
scas
and
mov
dec
scas
nop
cmp
sub
push
es
push
jb
imul
or
subl
add
iret
dec
lods
orl
xchg
xchg
imul
or
or
mov
sub
daa
jecxz
test
add
dec
and
loop
dec
add
push
jle
in
bound
jbe
out
push
out
movsl
out
cs
inc
mov
dec
push
or
popa
xchg
jmp
jnp
ljmp
frstor
movsl
pusha
fldt
outsb
xor
mov
aaa
test
cmp
popa
mov
int
movsl
and
ffreep
repz
leave
push
mov
jno
push
scas
jo
pop
test
inc
mov
daa
push
out
stos
mov
test
ret
sbb
mov
sbb
loop
leave
leave
out
pop
in
popa
inc
inc
push
cmovns
bound
add
lea
lods
and
ret
and
sub
dec
test
sbbl
jmp
mov
jl
inc
out
xorl
mov
add
sbb
adc
imul
mov
jl
lock
sub
dec
or
decl
fldt
leave
jno
jecxz
jbe
sub
adc
pop
lods
stos
and
imul
stc
or
dec
jb
outsb
lods
stos
push
sahf
insb
das
or
stos
jbe
movsl
popa
scas
outsb
js
out
jno
addr16
test
faddl
stos
movsb
cs
clc
and
lods
scas
push
lds
cmp
jb
addl
cmp
push
mov
dec
ljmp
push
dec
ds
xchg
es
inc
push
lods
scas
dec
adc
ret
fs
test
es
and
or
cmpsb
nop
stos
xchg
jecxz
fs
sub
leave
lock
and
imul
es
scas
or
push
inc
ljmp
sbb
mov
fwait
lret
and
movnti
mov
scas
mov
out
das
adc
fdivl
lds
jb
sub
dec
lahf
loope
dec
mov
stos
inc
stos
das
subl
xchg
push
fisubrl
push
mov
push
movsl
lods
mov
and
cmp
insb
sti
insl
nop
lea
cmpl
iret
push
or
jl
inc
dec
dec
orl
pop
push
int
cld
add
addr16
jecxz,pn
jne
sub
call
clc
dec
lahf
dec
and
outsb
cld
sub
inc
jns
add
ficoms
jne
push
mov
ja
dec
popa
mov
dec
rorl
inc
imul
inc
scas
ljmp
outsl
mov
dec
and
lds
clc
inc
std
mov
mov
sub
and
es
mov
cmp
addl
dec
add
inc
jmp
fistl
dec
inc
insb
outsl
out
arpl
fildl
dec
mov
sub
out
mov
and
pop
dec
push
cmp
jecxz
jne
add
out
inc
jae
add
inc
mov
ljmp
clc
shll
mov
punpckldq
cwtl
or
faddl
pushf
loopne
adcl
rcr
mov
shl
xor
pop
mov
mov
jbe
mov
in
dec
inc
imul
dec
fcmovne
iret
ret
ret
push
fistpl
loope
jno
push
fcmovnbe
outsl
push
mov
mov
jno
mov
loope
mov
arpl
mov
inc
cs
iret
xchg
push
in
pop
jae
insl
arpl
dec
xor
fisttpl
stos
int
cltd
aad
bound
or
lock
cmpl
mov
loope
sbb
es
mov
mov
fwait
inc
imul
je
pop
addr16
aas
jg
mov
cs
mull
popa
imul
jo
mov
cs
jo
add
out
cmpsl
out
push
out
je
iret
mov
test
cwtl
clc
xor
push
in
mov
jmp
loope
or
leave
popa
imul
stos
arpl
sbbb
jmp
mov
popa
or
xchg
popa
jmp
jbe
pop
fnstsw
mov
sbbl
inc
cmc
lods
sbb
in
xorl
bound
fnstcw
loope
push
add
pop
mov
cli
adc
imul
mov
sub
insb
and
inc
cs
insl
popa
test
jns
lret
and
cmp
inc
jg
test
dec
clc
roll
mov
adc
sub
orb
test
arpl
insl
mov
and
cmp
filds
jmp
pushf
inc
add
jg
mov
dec
jmp
lret
or
or
into
ret
leave
push
mov
jns
dec
or
sarl
mov
shlb
into
mov
and
outsb
sahf
lcall
mov
je
and
sub
das
stos
jle
sti
mov
jae
outsb
or
sub
lock
xchg
sarb
mov
dec
loop
lea
in
mov
sub
cmpsb
mov
xor
fiaddl
das
inc
leave
mov
ret
and
iret
dec
outsb
and
arpl
adc
xlat
outsb
mov
push
das
paddsw
mov
inc
scas
lods
or
jo
test
xchg
jmp
aam
insl
ret
dec
arpl
fwait
dec
scas
test
in
mov
cmp
pop
push
mov
out
imul
dec
and
insl
adcl
sbb
push
mov
xchg
ljmp
loope
int3
push
jno
sahf
fs
fcomi
pcmpeqb
pop
pop
mov
mov
bound
bound
pusha
out
lea
into
dec
sahf
sbb
insl
out
frstor
int
lds
cmp
xor
loope,pn
out
and
jecxz
add
xchg
cmp
dec
mov
dec
mov
jbe
dec
add
nop
and
push
scas
ret
cmp
mov
iret
inc
ret
sahf
loope
push
jg
jo
mov
and
and
jmp
fldt
add
popa
dec
push
ss
mov
ljmp
mov
in
add
ljmp
mov
insb
leave
xor
dec
lods
mov
push
or
insl
sub
or
daa
addl
bound
jns
leave
movsb
ret
mov
popa
sub
cmp
je
lods
push
arpl
lds
dec
lcall
xchg
fildll
or
loop
int
inc
mov
and
push
in
dec
lea
or
mov
or
jg
or
fbld
pop
mov
pop
add
dec
xchg
loope
xor
inc
insl
or
into
aas
aad
or
int
stos
or
adc
insl
jg
leave
mov
push
lock
enter
addr16
call
loope
mov
and
or
inc
in
or
inc
jb
mov
or
lds
pop
scas
fsubs
dec
aas
ljmp
adc
cs
scas
loope
mov
sbb
sbb
mov
leave
aas
inc
in
or
push
in
mov
cltd
xchg
jl
and
mov
mov
out
outsb
or
out
lret
enter
xchg
cmp
es
shlb
jo
sbb
mov
mov
inc
lods
orl
adc
jge
arpl
dec
inc
bound
scas
jb
add
leave
insl
loope
scas
xor
sub
mov
adc
in
loope
dec
sbb
jge
and
movsl
lods
subl
sbb
ret
dec
and
dec
scas
inc
push
mov
jnp
dec
int
dec
outsl
ret
or
in
imul
xor
sbb
test
mov
xlat
je
fs
inc
sub
pop
scas
repz
sbb
xchg
sub
or
lret
dec
mov
stos
adc
lods
sbbl
fldt
shr
scas
jg
imul
outsl
add
cld
loopne
into
pushf
ljmp
ret
orl
je
stos
inc
out
popa
loope
dec
jecxz
cmp
ret
and
mov
into
and
outsb
jb
jbe
jbe
mov
xchg
and
andl
dec
pushf
and
les
mov
cmp
jmp
push
in
lock
sti
push
mov
test
jae
test
stos
ljmp
jnp
vprotq
ret
sub
cmp
popa
ss
and
add
and
jmp
mov
in
test
pop
fcmovu
pop
std
mov
xchg
mov
ret
aad
ljmp
mov
popa
sbb
mov
mov
push
in
inc
insl
popa
dec
cmp
dec
jp
popa
or
popa
iret
arpl
test
stos
outsl
in
leave
jbe
lea
and
jle
popa
insb
ljmp
add
xchg
lret
imul
out
and
mov
push
sub
das
sbb
movsl
cmp
cmpsb
xor
out
bound
cs
add
sub
xacquire
inc
mov
mov
scas
and
test
push
fwait
clc
imul
or
outsb
mov
push
insl
jnp
test
sub
outsl
xchg
clc
mov
dec
bound
jl
ror
ljmp
in
mov
jo
sub
ret
and
dec
ljmp
test
xchg
sbb
leave
or
jb
add
cmpsb
push
mov
into
inc
outsb
in
inc
andl
imul
mov
cmc
cs
and
push
loop
lds
rclb
or
inc
lret
add
lods
scas
mov
insl
xchg
sub
sbbb
leave
fistpll
sub
add
mov
popa
jl
mov
push
out
push
cs
lods
mov
int
xchg
fwait
sub
jp
lods
lds
andl
dec
lock
jnp
dec
test
jle
cmp
fisttpl
outsl
inc
setg
xor
movsb
rorl
push
mov
fs
lea
inc
xor
loope
fldt
jecxz
mov
mov
or
dec
dec
mov
popa
and
xchg
stos
scas
sarl
add
int
addr16
stos
sbb
or
push
nop
in
and
hlt
iret
mov
cs
jnp
loope
popa
das
outsl
mov
add
lret
mov
xchg
sub
jp
or
jmp
and
inc
out
lret
dec
or
js
ljmp
push
mov
jne
cmp
dec
stos
ret
subl
lods
and
and
jno
fidivrl
lods
mov
mov
add
xchg
push
and
mov
outsl
or
sub
mov
mov
les
mov
xchg
push
into
sub
push
dec
mov
shll
iret
cld
or
bound
arpl
in
jmp
in
dec
andl
outsb
mov
das
mov
mov
sub
cs
mov
sbb
dec
outsb
dec
xchg
add
adc
jg
call
cmp
sub
sbb
outsl
jecxz
test
dec
arpl
fdivr
imul
jmp
das
inc
xor
out
or
mov
repnz
out
inc
out
test
stc
insl
es
cs
pop
adc
mov
popa
leave
pop
and
shrl
ret
sub
inc
add
and
jmp
fs
icebp
imul
out
lea
rcll
xor
jmp
das
xchg
orl
mov
mov
insl
nop
loopne
enter
dec
xchg
jnp
dec
inc
imul
jnp
rol
imul
in
lods
loope
pushf
lcall
shr
aad
jmp
test
mov
sub
das
sub
rcll
pop
dec
sub
inc
mov
stos
nop
jne
mov
jo
mov
push
test
and
pop
bound
outsb
cli
loope
js
lahf
stc
push
orl
out
lods
and
mov
and
leave
in
ljmp
lods
leave
mov
fwait
ret
mov
xchg
mov
push
nop
dec
scas
es
hlt
xor
mov
out
and
inc
shll
int
mov
out
cmp
jp
bound
fucomi
sub
mov
jbe
jb
out
scas
adc
sub
outsl
fcmovnu
add
rcll
lods
scas
nop
sbb
call
dec
xor
inc
add
test
inc
and
imul
stc
stos
mov
lahf
xchg
cmpl
test
or
test
jb
inc
lods
bswap
into
jb
ljmp
jg
sub
or
ljmp
out
stos
arpl
inc
sub
add
sti
sub
sub
cwtl
and
jb
dec
test
or
insl
in
repnz
mov
orl
sbb
rorb
dec
inc
es
jmp
jg
es
dec
and
mov
iret
jbe
notl
sub
in
fwait
bound
push
scas
je
nop
mov
mov
stos
and
add
or
mov
dec
or
orl
dec
out
scas
fbld
into
rorl
and
or
js
add
out
fisubl
daa
ret
mul
mov
xchg
push
leave
mov
sub
and
out
jp
andl
in
jmp
repz
dec
imul
mov
insb
popa
jne
loop
scas
icebp
mov
out
outsb
outsl
push
aad
xlat
dec
enter
add
scas
bound
mov
xchg
rol
dec
mov
pop
jnp
sub
leave
push
push
dec
lods
aas
into
cmc
adc
inc
mov
pop
stos
xchg
lods
and
push
outsl
cs
dec
lahf
adc
out
push
inc
rorb
imull
lods
lret
dec
mov
std
jmp
or
pushf
push
fs
in
inc
mov
sbb
cmp
dec
fbld
dec
mov
cmp
pusha
ljmp
inc
iret
or
dec
lods
inc
mov
loope
jecxz
lret
mov
aam
ljmp
sbb
and
pop
iret
cs
push
inc
inc
fs
ljmp
jns
mov
popa
dec
sbb
cmc
add
or
dec
mov
ret
and
das
stos
push
and
mov
scas
and
xor
jp
test
sub
pop
dec
xor
aas
arpl
or
push
fimull
dec
ret
and
mov
popa
pop
out
mov
sub
mov
jge
lods
xchg
nop
xchg
ret
imul
xor
dec
lods
cmp
std
mov
out
adc
jmp
jmp
stos
pop
sub
outsb
mov
or
arpl
popa
dec
repnz
add
popa
mov
dec
inc
out
nop
arpl
sub
fistpll
jnp
out
dec
mov
jns
add
nop
int
dec
lods
inc
bound
in
test
and
fiaddl
outsb
ss
lods
mov
adc
pop
iret
js,pn
out
jb
insb
popf
in
add
pop
adc
icebp
dec
and
mov
xor
test
lret
outsl
inc
mov
dec
lea
lds
mov
into
lea
pop
scas
push
mov
cmp
pop
jmp
in
ret
mov
into
jb
xchg
outsl
lods
scas
cmp
push
or
scas
sub
iret
mov
gs
mov
stos
push
cmpsb
insb
fidivs
xchg
mov
and
and
popa
inc
sar
out
mov
iret
add
lret
jl
pop
xchg
ss
testl
xorb
cmp
push
pop
into
arpl
out
bound
sub
jae
cmp
lea
into
fwait
scas
ret
add
jp
sbb
sub
repz
mov
loope
out
arpl
leave
je
jecxz
into
or
mov
sub
lahf
sub
pop
jnp
outsb
inc
dec
pop
mov
stos
test
stos
popa
xor
cmp
add
jp
sbb
or
stos
mov
ret
jb
jb
movsl
mov
lret
rep
sbb
lock
push
stos
dec
int3
or
daa
lea
or
iret
mov
bound
jne
push
rorl
iret
in
lds
and
dec
sub
sarl
mov
stos
mov
into
je
inc
dec
mov
out
mov
lea
mov
jmp
jno
mov
inc
sub
fninit
es
jle
push
sub
cmpsl
cmp
imul
outsl
pop
call
test
lods
test
iret
outsb
int3
loop
outsl
push
in
out
dec
aam
jecxz
mov
ljmp
outsb
out
dec
sub
mov
sub
lea
leave
pushf
jne
scas
lret
inc
or
addr16
js
outsl
dec
mov
push
shrl
in
aaa
dec
jp
out
add
insl
andb
xchg
mov
push
cmp
in
outsl
mov
mov
out
dec
je
jmp
jns
and
push
mov
xor
movsb
sub
stos
lea
mov
jne
sbb
mov
int
inc
jo
sub
test
subl
xchg
inc
dec
ljmp
test
push
js
push
jno
out
dec
daa
popa
fnstenv
fsubl
lea
js
orl
leave
insb
dec
inc
stos
cs
mov
outsl
jecxz
fldenv
sub
loopne
xchg
mov
icebp
and
movsl
aaa
ja
inc
outsb
mov
das
adc
sub
addr16
jecxz
bound
ja
mov
test
sub
or
lods
arpl
or
das
sub
bound
lods
jb
test
mov
mov
mov
cli
cld
call
movsl
cli
out
ljmp
mov
test
or
add
js
or
fldt
sub
or
fildll
test
imul
cltd
and
popf
btr
push
insl
js
test
inc
push
cmp
pop
mov
aas
ret
xor
pminsw
jge
cmp
ret
mov
out
imul
in
imul
pop
sbb
mov
cs
ret
insl
dec
scas
pop
pop
cli
add
test
dec
insl
ret
sub
lods
shl
mov
lods
sub
mov
shrl
popa
lock
in
fwait
jmp
out
ret
xchg
sub
mov
xadd
sarl
pop
cmp
clc
adc
and
and
cld
jmp
mov
outsl
xchg
lcall
add
nop
bound
imul
sub
mov
cwtl
loope
jo
lods
mov
inc
inc
outsb
test
push
xor
out
outsb
or
ja
insl
adc
mov
daa
sbb
sti
dec
add
pop
push
xchg
int
jns
mov
sub
fwait
ret
and
inc
loop
cmpl
leave
jbe,pn
sub
jl
and
bswap
lret
icebp
movb
inc
push
push
xchg
jnp
jmp
scas
push
dec
addl
leave
aam
push
add
mov
rorl
movsb
in
lock
ja
rol
sbb
dec
ljmp
subl
scas
hlt
mov
xadd
dec
jbe
fwait
out
mov
xorb
pop
mov
cmp
lea
aad
lret
inc
xor
inc
in
mov
or
dec
lahf
lods
jmp
clc
jbe
and
lods
inc
insl
sub
mov
jo
lret
outsl
and
lds
sbb
xchg
or
das
jmp
or
outsl
fstp
ret
dec
arpl
bound
mov
jb
das
push
dec
mov
test
stos
popl
xchg
sub
xchg
push
ss
xchg
jo
loop
dec
jecxz
mov
or
mov
dec
cltd
push
add
cmpsl
inc
or
jno
push
xor
imul
outsb
jecxz
mov
mov
jp
or
roll
mov
sbb
dec
sub
jmp
push
push
inc
adc
mov
loope
cmp
inc
push
repnz
fisubrl
nop
jecxz
ret
jl
inc
push
out
ljmp
and
dec
das
call
je
scas
inc
add
out
or
imul
jecxz
push
mov
cmp
insl
in
stos
je
dec
ljmp
imul
cmp
loop
dec
test
popa
jge
int3
or
lea
out
cld
outsl
or
lods
sbb
test
int
movsl
leave
sti
cmc
ljmp
or
lods
fstps
fstpt
cld
leave
cmp
adc
scas
inc
ja
inc
inc
mov
mov
cs
stos
test
out
scas
mov
push
inc
xchg
imul
scas
clc
or
iret
dec
int
jecxz
dec
adc
popa
sub
jno
xchg
ss
push
sub
jbe
daa
into
sbb
insl
add
or
inc
mov
sti
outsl
lods
xchg
mov
aam
orl
push
fs
mov
test
cmp
or
ficoml
adc
mov
ret
jle
lret
jp
lock
mov
mov
into
lcall
cs
inc
test
out
lods
shll
jne
lock
insl
int
daa
ret
xor
cmpsb
loope
cmp
dec
movsl
jecxz
lret
loop
cli
mov
scas
add
lods
mov
push
push
mov
js
add
mov
mov
lahf
js
loope
dec
fcmovb
dec
add
jecxz
adcl
and
inc
movlps
popa
daa
mov
in
pop
fcmovne
add
je
inc
push
mov
dec
iret
jmp
add
and
sbb
cmp
leave
lcall
adc
mov
repz
test
scas
mov
aam
lods
sub
lods
movsl
pop
cltd
and
pop
dec
or
xchg
ja
push
pop
mov
test
sub
iret
mov
sub
sbb
nop
and
adc
ret
dec
lea
dec
iret
loop
test
fs
lods
movsb
test
mov
xchg
popa
mov
arpl
out
dec
dec
xchg
xchg
dec
nop
mov
lods
add
cmp
push
lods
mov
jo
mov
sub
push
outsb
aam
jne
test
arpl
int3
lock
and
pop
iret
cmp
ret
repnz
ret
mov
push
pusha
hlt
xor
pop
mov
iret
mov
inc
dec
popa
xchg
inc
arpl
out
das
mov
repnz
rorl
sub
mov
mov
sbb
nop
test
out
les
insl
dec
cs
ret
mov
outsl
mov
scas
mov
dec
and
in
or
jg
mov
xlat
lods
sbb
dec
xor
dec
loope
pop
mov
pminsw
or
jnp
dec
mov
repnz
ret
xchg
out
loope
xor
insl
insl
push
arpl
test
dec
xchg
mov
lret
out
jmp
shrl
shll
popa
jbe
in
inc
jecxz
sub
inc
insb
idivb
mov
cmpsl
mov
out
test
hlt
clc
inc
out
mov
ret
mov
orl
mov
cmpsb
and
imul
iret
arpl
cs
and
ja
and
cmpsb
lods
in
test
repnz
dec
mov
fiadds
mov
ret
dec
inc
test
icebp
hlt
cmp
jno
stc
mov
loop
dec
ljmp
call
out
sub
into
je
outsl
push
mov
jbe
lea
lret
roll
sub
das
mov
lea
out
push
daa
sub
xchg
mov
jbe
dec
pop
push
movsl
sub
jae
arpl
cmpsb
add
mov
dec
add
xor
jno
nop
push
fs
lods
jne
out
lret
cmpsl
js
jbe
mov
imul
outsb
daa
mov
push
sub
or
into
outsb
subl
es
insb
mov
mov
outsb
inc
sub
call
lcall
shrl
and
add
imul
jecxz
int3
in
xchg
imul
sub
jg
in
adc
and
shl
out
push
xchg
sub
and
bound
push
sahf
mov
mov
imul
mov
das
push
jb
mov
daa
dec
ret
outsb
ret
or
mul
andb
out
or
add
push
and
popl
lea
mov
scas
ret
imulb
addb
test
fs
outsl
das
out
into
and
sub
aas
mov
jecxz
dec
cmp
sbb
inc
int
ljmp
mov
push
out
nop
in
test
bound
lea
adc
add
push
jl
push
dec
insl
subl
xor
ss
ret
sahf
fwait
mov
mov
push
mov
cmpsl
bswap
sub
lcall
mov
repz
arpl
lret
pusha
sub
fidivl
bound
in
out
stos
movsl
inc
mov
jae
jg
inc
jmp
jecxz
decb
popa
das
test
or
lret
inc
mov
mov
inc
dec
fistps
dec
xor
out
dec
mov
scas
stos
sub
movsl
femms
out
fmul
jmp
push
dec
xchg
xchg
sub
fistpl
test
push
and
xor
jecxz
dec
ret
iret
out
push
jmp
rorl
mov
add
sub
or
mov
adc
pop
mov
je
jg
dec
and
or
test
sub
insl
mov
push
jmp
andl
sub
movb
loope
sub
mov
push
sbb
pop
jmp
pop
cmp
ret
das
dec
sub
dec
bsf
and
and
or
fwait
dec
mov
sub
nop
push
xchg
orl
lods
xchg
out
inc
outsl
xchg
aas
xchg
xor
ss
je
imul
arpl
push
decl
add
dec
jno
jbe
decl
insb
jg
mov
outsl
lods
popa
jno
psubb
ljmp
out
inc
nop
lea
je
popa
inc
inc
jb
imul
mov
test
mov
mov
jle
adc
lret
fildll
inc
dec
outsb
jecxz
sub
orl
out
xchg
dec
iret
repz
ret
pop
ret
cwtl
dec
pushf
out
test
leave
leave
loope
scas
sbb
or
je
nop
out
mov
or
mov
dec
cmp
and
and
mov
inc
pop
sub
xor
js
arpl
fisubs
imul
sub
jecxz
xor
add
mov
dec
xlat
jo
and
jae
jp
mov
jp
jl
dec
or
imul
dec
push
dec
pop
lahf
inc
lods
and
sub
pop
hlt
popa
lock
sti
sub
mov
and
dec
outsb
jbe
lock
sub
outsb
xor
in
outsl
arpl
xchg
or
sahf
fwait
lcall
jns
cs
mov
out
outsb
js
dec
jmp
insl
sub
sub
cmp
lahf
ss
jmp
mov
lods
loope
ja
loop
sbb
out
mov
roll
or
dec
cmp
outsl
rcll
mov
jecxz
push
mov
sub
add
imul
dec
in
insl
sub
jge
lock
lea
ret
add
mov
mov
mov
adc
movsl
mov
xor
xor
imul
outsl
andpd
stos
xor
push
sub
arpl
mov
fldt
dec
dec
call
dec
lret
loop
pop
xchg
fcmovnbe
ret
repz
mov
add
scas
sub
scas
and
das
imul
cmp
mov
cmp
outsb
imul
test
mov
movsb
cmc
lods
xchg
shr
mov
cmpsb
inc
mov
xchg
dec
dec
xor
icebp
jecxz
in
inc
sahf
int3
je
dec
insl
pusha
je
scas
or
mov
pop
movsb
iret
jae
movsb
int
in
add
insl
push
arpl
dec
repz
mov
or
out
leave
push
es
jmp
xchg
data16
jne
sub
addl
jns
adc
or
int
sbbl
inc
stos
les
arpl
jnp
das
pop
add
inc
dec
mov
js
or
and
out
add
ret
sub
scas
jle
lcall
inc
and
jecxz
lods
cmp
nop
or
ljmp
add
or
lea
ret
in
arpl
mov
mov
inc
mov
mov
loop
mov
pusha
movnti
bswap
clc
pop
sub
insl
jle
dec
test
nop
leave
sub
sub
pop
add
scas
and
das
or
or
out
adc
stos
lods
and
add
lea
push
sbbb
int
or
and
mov
pop
pop
rorl
dec
xchg
inc
out
pop
popf
lods
sub
push
or
dec
arpl
in
aas
leave
jb
daa
ljmp
cld
pop
clc
jno
sub
cmp
or
fisttps
and
jmp
int3
jne
or
mov
jl
mov
dec
iret
mov
pavgw
shl
dec
mov
mov
mov
stos
in
mov
sub
int3
scas
fldenv
clc
lock
test
xchg
jmp
xchg
and
xchg
inc
vmlaunch
repz
push
or
jns
testl
jne
repz
sub
pop
mov
push
imul
push
sti
leave
outsb
add
add
loope
popa
ds
jns
xor
cwtl
subl
into
xor
out
in
scas
mov
test
out
mov
loop
lret
movsb
out
jae
sub
stc
dec
adc
addr16
bound
call
cs
jb
mov
arpl
mov
scas
mov
ret
jmp
movsl
sub
fadd
lret
popa
loopne
imul
lods
jmp
repz
sub
pop
fiadds
lea
outsl
xchg
in
or
pop
roll
mov
call
xchg
fwait
std
mov
xlat
shrl
mov
xor
cmc
inc
stos
mov
lods
cmp
sub
mov
lods
in
dec
iret
stos
rorl
lea
jmp
lret
dec
fildll
mov
in
scas
sbb
leave
inc
lods
scas
inc
in
ljmp
xchg
inc
roll
fcmovne
jmp
outsb
nop
push
xchg
nop
or
fldt
jbe
cmp
scas
lods
and
push
or
mov
lret
mov
stos
outsb
ret
dec
insl
mov
jbe
lock
xchg
sub
dec
mov
popa
sub
in
add
outsb
arpl
add
outsl
sub
rcll
sbb
sub
jne
lds
test
or
mov
lea
cmp
or
daa
mov
dec
xchg
jge
mov
inc
popa
nop
addl
push
addr16
inc
data16
inc
andl
xchg
lret
bound
das
jb
leave
iret
scas
jecxz
mov
insl
mov
insl
or
dec
jne
inc
ret
jmp
sbb
pushf
push
imul
add
and
jne
leave
movsb
test
dec
add
rorl
pop
push
lock
inc
mov
mov
dec
inc
cmp
stos
in
test
clc
out
aaa
arpl
popa
or
mov
jl
test
test
mov
cmc
leave
shrl
cmpsb
dec
out
dec
aad
jnp
mov
nop
jno
in
pop
bound
cmp
insb
xorl
dec
std
int3
push
cmc
int
mov
insl
int
mov
fwait
ret
cltd
and
arpl
insl
jecxz
inc
ret
jmp
outsl
lret
hlt
mov
data16
pushf
inc
repz
mov
jl
into
lods
dec
dec
outsb
mov
fwait
pop
or
jb
ret
xor
test
cmp
arpl
jb
sub
addr16
subb
dec
cltd
dec
aas
bound
test
sub
iret
bound
test
sub
pop
je
in
dec
scas
or
arpl
cmp
add
mov
jns
push
lods
cli
inc
jbe
jmp
in
jne
add
or
add
iret
ss
adc
das
insl
fiadds
mov
adc
pop
bound
xchg
push
mov
ret
in
inc
int3
scas
js
leave
mov
aam
and
lods
ja
arpl
ljmp
xchg
outsb
repnz
dec
mov
out
inc
into
mov
sbb
xor
mov
mov
adc
jo
mov
pop
jbe
aas
and
adc
out
cli
inc
js
arpl
mov
adc
icebp
or
dec
scas
cltd
lret
insl
lcall
cmp
inc
aaa
not
mov
mov
lock
lds
and
jbe
popa
sarl
jb
imul
add
imul
jg
inc
insl
test
ret
nop
das
mov
lahf
dec
dec
stos
xor
xorb
jl
mov
popa
outsb
insl
clc
out
mov
pop
mov
ljmp
les
lods
cmp
and
sbb
movsl
mov
cmp
rcrl
loope
pop
adc
sub
daa
fldt
push
mov
bound
imul
aad
loope
jbe
bound
or
jb
adc
test
mov
sub
pop
into
push
stos
outsl
test
push
jecxz
insl
mov
outsl
mov
or
sub
mov
ret
aad
popa
jge
jmp
stos
mov
mov
cmp
add
push
fwait
push
stos
mov
inc
dec
pop
test
leave
loope
das
in
cs
dec
mov
push
test
mov
hlt
inc
test
inc
test
mov
repz
leave
out
arpl
shll
push
ret
test
cmp
jno
jb
leave
bound
mov
call
test
lods
scas
je
lahf
inc
into
stos
out
dec
in
stos
stos
aam
neg
cs
sti
ljmp
lea
out
inc
outsb
add
iret
inc
das
test
fildl
jmp
cmp
cmc
out
adc
out
dec
lret
inc
push
lea
sub
sbb
pushf
dec
addl
jae
xchg
or
shrl
mov
or
dec
jo
lods
dec
into
sti
ret
test
dec
test
in
test
xorl
dec
arpl
jp
and
dec
and
out
pop
loope
insb
sub
or
xor
lods
sbb
into
sbb
bound
or
popf
scas
and
jg
arpl
mov
mov
cli
popa
xchg
push
sub
addl
add
stos
pop
das
lahf
push
push
orl
or
pop
sbb
sbb
shlb
xor
sub
fs
lret
fiaddl
outsl
pushf
loop
into
inc
and
jmp
jne
test
stos
lods
jge
jle
ret
dec
or
sub
add
int
xchg
sub
clc
inc
movsb
jecxz
rcrl
sub
adc
mov
out
popa
cmc
dec
sub
or
dec
inc
mov
add
orl
insb
into
int
outsl
outsb
scas
test
test
in
subb
xchg
cli
or
dec
mov
ret
ss
std
or
cmpsb
stos
gs
mov
je
leave
outsl
mov
stos
and
pop
or
and
xor
into
push
xor
cmpsb
outsb
leave
aam
adc
mov
rep
inc
dec
test
sub
bound
cltd
push
sbb
sub
in
mov
mov
lods
inc
dec
jbe,pn
out
dec
mov
das
push
jl
test
nop
ret
jno
sbb
lret
xchg
add
mov
jae
test
inc
insl
test
lods
fnstsw
je
nop
inc
sbb
sbb
push
jbe
insb
mov
out
lds
ljmp
int
arpl
mov
push
outsb
and
jle
aam
adc
nop
inc
ret
pop
ret
mov
jno
or
movsl
inc
push
call
daa
xor
push
bound
test
or
sub
shrb
lret
inc
popa
into
mov
sbb
into
mov
iret
jmp
je
mov
in
dec
lds
insl
outsl
add
jbe
and
add
cmp
scas
mov
test
mov
in
mov
jae
cmp
movsb
loope
push
hlt
and
outsl
mov
and
aad
jg
add
jb
dec
popa
cs
shrl
lret
inc
mov
push
pop
dec
inc
jg
nop
push
outsl
ss
daa
jnp
dec
mov
jl
imul
stos
mov
std
shl
arpl
sub
addl
imul
loopew
je
into
es
lret
inc
inc
bound
mov
sub
out
insl
mov
imul
or
jmp
mov
out
sub
inc
sub
das
push
addl
inc
in
mov
or
jne
lods
popa
xor
cmovge
leave
sub
sahf
fwait
aaa
nop
or
adc
sub
lret
sahf
jae
ljmp
test
out
jecxz
in
in
scas
stos
jmp
mov
dec
arpl
jo
sub
jb
pop
iret
into
jl
mov
int
mov
ljmp
sub
mov
jmp
iret
jl
popa
wbinvd
int
in
sub
repnz
mov
or
push
dec
sbb
imul
ljmp
int
psraw
imul
adc
cmp
or
nop
stos
test
jp
loope
sub
cmp
push
movsl
or
ret
dec
sahf
insb
nop
test
cmp
pop
into
shrl
mov
pop
push
add
dec
out
bound
fs
daa
dec
ret
add
lds
test
into
nop
ret
ljmp
push
iret
dec
sbb
fcomp
cmp
je
stos
add
cmp
out
jbe
xlat
iret
pop
mov
outsb
repnz
mov
cmp
jne
jbe
sub
mov
xor
je
lret
or
jbe
loop
int
lds
fcmovne
push
pop
shlb
leave
mov
jl
mov
and
in
leave
or
push
jnp
insb
push
out
mov
int
arpl
dec
inc
orl
out
lcall
sub
jmp
and
mov
add
pop
out
sub
pop
jl
sub
leave
dec
gs
outsb
dec
xor
cld
jp
mov
xchg
dec
push
mov
mov
scas
js
test
fs
stos
test
movsb
xchg
lods
xchg
cmp
cmp
scas
repnz
popa
sub
jecxz
icebp
mov
or
scas
addl
nop
imul
dec
enter
sbb
jg
ljmp
outsb
test
imul
cli
pop
popa
dec
imul
dec
cmp
int
loope
iret
add
xchg
add
xchg
or
test
movsl
popa
insl
roll
dec
mov
adc
lock
mov
adc
jno
jg
outsl
in
std
popa
nop
lret
sub
mov
ja
push
add
cmpsl
push
iret
dec
xor
inc
mov
test
push
inc
ret
inc
stos
arpl
xlat
std
std
or
fwait
pop
mov
mov
leave
arpl
jb
lock
dec
shrl
out
sbb
or
loope
mov
dec
adc
into
jnp
dec
or
stc
lea
or
loope
push
jmp
and
addr16
test
in
jb
nop
scas
mov
mov
in
inc
pop
insb
pop
out
mov
jb
add
pusha
lods
outsl
fidivl
push
sbb
mov
push
out
int
movsb
xchg
push
scas
into
add
stos
jb
daa
dec
iret
add
lahf
sub
cli
in
scas
jl
out
in
aas
jmp
call
sbb
cmpsb
jbe
cmp
sub
or
dec
cmp
scas
inc
sub
movsl
lea
inc
pop
jl
out
add
and
mov
scas
es
icebp
out
int3
mov
push
mov
lea
leave
dec
repnz
cmp
out
iret
data16
out
or
push
sti
push
arpl
movsb
mov
nop
lcall
sub
mov
scas
sti
xor
insl
dec
add
jmp
out
mov
push
or
or
int3
mov
int
andl
push
lods
cmp
inc
arpl
pop
mov
mov
dec
sub
testb
addr16
and
jnp
inc
loope
dec
scas
hlt
jmp
into
inc
mov
popl
xchg
clc
out
es
scas
add
and
push
lods
inc
and
int
cs
mov
ret
mov
ds
iret
lea
dec
das
jns
inc
cs
call
dec
stc
cmpb
jecxz
mov
aaa
sub
dec
std
bound
dec
mov
test
mov
movsl
stc
mov
sub
or
fimull
leave
inc
ljmp
hlt
fisubl
in
or
lods
cmp
mov
outsb
inc
ja
out
popa
inc
stos
jns
or
outsl
lods
fcompl
push
stos
fldenv
add
ret
addb
clc
jp
popa
and
push
test
cs
push
xchg
in
xchg
movsl
or
sarl
outsb
outsl
or
inc
sub
jno
insl
imul
sbb
xadd
addr16
ja
dec
xchg
mov
dec
mov
popl
inc
js
aam
scas
scas
cmp
jbe
ret
add
adc
repnz
push
mov
and
mov
lea
jmp
mov
jmp
and
icebp
dec
jno
test
in
or
or
jae
popa
xor
stos
and
leave
test
dec
into
dec
outsl
js
outsb
in
cs
insl
or
ror
sub
out
stos
in
out
fwait
imul
scas
jmp
jno
int3
popa
or
xor
rorb
scas
mov
sub
xorl
mov
lret
push
xchg
iret
jnp
scas
int
and
mov
inc
daa
dec
jnp
lret
add
sub
out
ret
ss
sub
cld
shll
dec
addr16
mov
or
jae
aad
xchg
test
push
mov
bound
sub
dec
push
mov
jl
mov
out
loope
push
and
dec
mov
int3
stos
rcrl
test
mov
or
in
cmp
std
sub
jp
xchg
imul
push
or
scas
and
std
push
rorl
mov
inc
imul
ret
lea
lret
scas
cmp
pop
js
test
js
iret
add
scas
jns
cmpl
dec
inc
jl
leave
mov
or
sti
test
or
inc
stos
and
jmp
outsb
mov
stos
and
sub
dec
dec
adcb
xchg
mov
xchg
or
imul
inc
add
ret
jecxz
lods
insl
arpl
test
mov
icebp
ss
add
or
dec
adc
stos
push
or
cmp
ret
lahf
mov
and
mov
xor
aad
ja
insl
add
dec
das
sahf
out
dec
loop
add
lds
fstps
sti
fwait
jmp
dec
pop
mov
lds
lahf
les
bound
sub
dec
outsb
xchg
rorl
mov
test
mov
jmp
push
enter
mov
lock
outsl
sub
push
fwait
inc
into
add
in
inc
mov
add
ljmp
lock
push
dec
push
cmp
xor
mov
jbe
stos
jo
jnp
leave
stos
inc
test
dec
xor
out
xchg
movsl
popl
loope
mov
lods
push
in
mov
jge
imul
mov
jecxz
and
or
out
rcll
ret
sub
inc
shll
dec
lea
push
jb
and
outsl
xor
lods
cmpsl
jbe
sbb
subl
mov
push
inc
ret
out
jmp
cmpl
lret
cmp
aam
jo
jp
inc
or
push
sub
lods
mov
subl
mov
mov
sub
lret
jl
dec
lods
out
add
leave
aas
jmp
push
push
clc
dec
inc
sti
int
into
xchg
sbb
inc
push
fwait
out
inc
iret
ret
ret
aad
dec
stos
jns
lret
icebp
push
outsl
jmp
jle
jne
daa
jecxz
mov
add
dec
outsb
into
clc
dec
test
test
mov
out
push
lds
ret
xor
dec
ret
pop
push
push
iret
jb
lods
fwait
mov
xlat
mov
ss
lock
jo
add
push
push
sub
das
cmpl
sub
pushf
bound
rcrl
jp
fldt
mov
lcall
mov
je
lods
loope
or
popa
ljmp
fwait
mov
lods
inc
sbbb
insl
iret
hlt
fs
scas
outsb
jecxz
das
jbe
push
pop
out
ffreep
lods
gs
jne,pn
push
outsb
cmp
mov
or
jne
inc
arpl
add
mov
fmuls
push
leave
inc
sub
out
lods
cli
test
bound
movsb
xchg
sub
les
push
outsb
jno
and
int
inc
inc
or
push
jg
lea
mov
mov
out
inc
push
push
and
add
cmp
adc
or
pusha
mov
nop
sub
inc
imul
push
dec
cmp
dec
push
iret
cmovns
cmp
daa
cmc
dec
jp
sbb
inc
dec
jne
jecxz
sbb
inc
lret
adc
mov
xor
lahf
cli
mov
dec
lods
add
or
inc
test
dec
cmp
jno
movsl
ret
mov
mov
lods
out
push
and
out
in
add
jno
insl
mov
das
iret
out
mov
mov
and
add
inc
nop
dec
inc
push
es
cmc
or
rcr
arpl
or
add
movsb
out
fwait
lea
imul
fisttpl
leave
mov
xchg
fwait
sbb
lret
push
imul
push
out
fidivrl
dec
ret
pushf
sub
fs
arpl
inc
mov
leave
popa
and
push
push
int
scas
and
shl
and
pop
imull
jb
jbe
arpl
push
xchg
dec
lahf
jecxz
arpl
dec
jnp
sub
in
dec
imul
jns
out
into
ret
dec
add
shll
add
mov
jmp
dec
jg
arpl
inc
loope
inc
loopne
pop
popf
out
push
lcall
mov
mov
test
outsl
lock
add
mov
mov
stos
add
mov
or
rolb
filds
das
test
dec
sub
cmpb
push
inc
mov
loope
insl
bound
out
ljmp
into
dec
outsl
out
push
push
inc
sub
xchg
mov
mov
xor
insl
test
push
jle
jg
cld
in
imul
mov
jae
mov
jne
loop
outsl
push
inc
jmp
andl
int
stos
inc
out
add
mov
dec
lock
outsl
adc
dec
mov
adc
mov
out
push
push
add
ss
in
or
outsb
test
das
js
arpl
jno
jns
and
cmp
jmp
jns
loop
or
sub
clc
and
push
inc
lods
lods
scas
fs
mov
arpl
jl
jmp
scas
cs
lds
sub
mov
mov
scas
insb
repz
jno
daa
iret
sub
les
stos
jbe
in
outsl
cld
subl
jle
dec
mov
sbb
out
jo
insl
jb
in
mov
popa
in
subl
dec
ret
lds
xor
mov
je
jecxz
sbb
xchg
fidivs
mov
test
cmp
int
inc
mull
sbb
jbe
mov
sbb
cmp
jne
and
cltd
dec
insl
lret
outsb
mov
fistps
jb
nop
insl
ret
out
lods
test
sbb
das
xchg
inc
imul
loope
out
jo
mov
xchg
loopne
stc
ret
leave
insl
sub
mov
stos
push
pop
dec
inc
lahf
flds
fsubs
or
or
out
loopne
dec
das
mov
btr
or
sbb
mov
sub
inc
cmp
inc
stc
int
add
or
movsb
mov
in
ret
adc
xor
ljmp
test
push
out
in
movsl
inc
or
in
mov
lcall
test
movsl
popa
dec
scas
dec
sahf
push
mov
add
stc
sub
lds
xor
movsl
popa
movsl
sub
pop
dec
out
lea
sub
out
test
lret
mov
nop
or
repz
lods
ret
daa
xor
repz
out
sub
ja
and
pop
dec
xchg
rcrb
dec
mov
leave
lods
arpl
dec
and
das
sbb
mov
push
sub
sub
aad
lret
into
pop
mov
je
imul
popf
lods
adc
mov
nopl
lods
or
or
out
mov
xor
mov
add
xor
ret
inc
jae
dec
inc
test
popa
or
outsl
lahf
xchg
gs
push
repnz
arpl
mov
out
jecxz
in
jne
outsb
test
stos
iret
push
jp
mov
cmp
int
popa
nop
xor
fs
loope
or
xor
cli
cmp
jmp
iret
leave
sub
mov
inc
jp
jmp
cmp
add
cmpsb
movsb
xchg
mov
icebp
push
and
das
popa
xor
stos
cs
jp
sub
sub
jb
imul
rol
mov
xor
push
scas
das
inc
jg
or
movsl
mov
mov
stos
mov
cmpsl
xchg
dec
lods
insb
inc
add
bound
jle
lock
sbb
sub
das
push
xchg
push
mov
in
bound
ljmp
insl
mov
xor
in
jnp
jecxz
dec
inc
push
xchg
insl
mov
xchg
out
mov
ljmp
lds
loope
sbb
pushf
mov
ljmp
lds
mov
mov
outsl
inc
int
stc
inc
roll
stc
mov
and
test
jne
sbb
hlt
mov
add
int
das
outsb
subl
mov
decb
dec
push
cld
stos
mov
mov
outsl
mov
cmp
xchg
sub
loope
or
je
stos
cs
pop
lcall
add
dec
mov
ret
lahf
loope
jecxz
sbb
hlt
adc
insb
jl
lods
inc
cmp
bound
or
andl
and
outsl
add
loop
sub
int
mov
mov
cmp
add
inc
mov
jmp
jo
std
dec
dec
arpl
inc
outsb
fimull
pop
into
stos
icebp
sub
lods
pop
stos
mov
out
sub
das
inc
int
stos
cmp
dec
cmp
push
xor
dec
scas
out
popa
push
leave
pop
lock
insl
arpl
dec
dec
jg
mov
or
insl
in
leave
mov
stos
dec
inc
sbb
or
jbe
and
cld
outsl
push
lods
scas
call
mov
ret
out
pusha
dec
inc
push
test
or
mov
xchg
movsl
test
subb
dec
dec
or
xchg
pop
addr16
inc
fwait
jmp
sub
add
sub
mov
scas
bound
sub
aas
insl
cmp
out
ljmp
jo
add
jo
cs
ret
xchg
pop
xchg
insb
and
scas
dec
repz
shrl
xchg
and
ret
dec
mov
jnp
scas
sub
in
pop
bswap
xor
cmp
lods
pop
loopne
pop
std
adc
jecxz
mov
fldl2t
les
pop
jo
scas
jnp
out
mov
mov
jo
imul
inc
lret
fisttpl
sub
shll
into
jecxz
mov
mov
dec
xchg
or
punpckhdq
add
in
rcrl
in
mov
decl
push
out
mov
outsb
fisttpll
sub
addr16
shrl
bound
lods
jb
cs
jno
test
ret
out
outsb
cs
out
ljmp
sbb
jb
adc
xchg
scas
arpl
push
mov
jecxz
mov
jmp
lds
sti
iret
mov
sub
inc
dec
jbe
sti
and
push
lods
cs
xor
xor
push
or
or
fs
out
dec
jb
adc
add
loope
add
pop
call
or
xchg
ljmp
ret
inc
dec
sub
or
add
and
sbb
fs
ljmp
fwait
dec
inc
imul
icebp
jl
jecxz
scas
out
cmp
stos
or
mov
dec
cs
test
decl
insl
lret
out
jmp
shrl
push
mov
jmp
shrl
std
inc
push
cmpsl
rolb
or
cli
mov
and
push
xor
dec
popl
sub
inc
jae
scas
in
bound
cmp
cmp
imul
inc
lods
lods
daa
int
mov
imul
or
lahf
fimull
popa
mov
mov
loope
inc
incl
movsl
lret
ror
repnz
or
andl
out
adc
cmp
insb
jp
sub
scas
jbe
jbe
js
scas
dec
insl
lods
cmp
jp
arpl
iret
or
repz
hlt
add
bound
loope
test
mov
nop
xlat
insl
cmpsb
fwait
inc
int
outsl
mov
shll
pop
cmp
inc
clc
loope
cwtl
mov
jb
outsb
add
stos
sbb
imul
loop
inc
out
jle
mov
xor
xor
imul
xor
out
arpl
inc
xchg
jnp
dec
clc
test
lret
inc
adc
push
sub
xchg
lods
into
xchg
mov
loope
push
pop
mov
dec
or
shlb
cmc
scas
je
add
dec
mov
sbb
jbe
jb
mov
xchg
dec
lret
xchg
imul
loop
lods
xorb
fs
scas
stos
bound
sbb
inc
inc
or
jbe
cs
das
mov
orl
fisubs
add
popf
sbb
jecxz
gs
lea
scas
sbb
mov
shrl
incb
loop
fwait
cmp
dec
nop
jb
lods
xor
sub
sti
add
add
into
dec
or
stos
popf
lods
mov
cmc
movsl
out
div
lds
call
or
jmp
fiaddl
arpl
andl
pop
out
mov
xchg
loope
jbe
inc
ret
push
jbe
jp
test
sbb
lods
ljmp
mov
push
jmp
aas
iret
jne
fstps
sub
test
stos
out
je
leave
outsb
lock
test
inc
out
jp
adc
xlat
add
cmp
inc
fdivs
ljmp
sbb
imul
andl
popa
stos
mov
jecxz
repz
data16
or
jmp
cmp
dec
leave
xchg
and
in
cmp
aad
or
mov
sub
cmpsb
lods
int
or
sub
or
mov
jecxz
mov
popf
shll
or
loope
jecxz
insb
das
mov
out
cmc
outsb
mov
and
lods
jmp
mov
loope
push
cs
mov
scas
outsl
jg
lea
xchg
scas
and
orb
push
rdpmc
popa
ljmp
sub
lahf
insb
sub
jmp
add
or
jb
lock
xchg
frstor
mov
or
dec
mov
lods
sub
daa
cld
add
ret
or
add
mov
in
mov
xchg
dec
mov
fs
lods
out
and
rorb
jmp
test
dec
das
dec
bswap
cmp
insl
sub
lret
or
cltd
popl
stos
cmp
mov
stc
push
rcrl
or
dec
jmp
xchg
pop
out
jmp
movsl
mov
hlt
sub
lods
jbe
mov
nop
inc
test
lods
jo
jg
or
shll
fiaddl
mov
pop
jge
outsb
inc
and
out
outsl
loopne
aas
or
imul
ret
insb
or
into
insl
ljmp
jecxz
ret
out
test
and
jp
sub
sub
mov
decl
fcoml
mov
loop
mov
push
adc
int
xor
fwait
jg
out
into
or
cs
xchg
rcl
and
or
cmp
dec
adc
out
jmp
ja
push
jmp
daa
movsl
push
or
lods
loope
in
lock
mov
shlb
shll
pushf
pop
orb
into
fwait
cmc
loope
xchg
mov
sub
push
add
dec
daa
loope
test
push
and
cltd
fsubrl
sub
test
sub
daa
inc
out
mov
jp
dec
mov
push
movsl
lret
sub
xorl
into
sub
xchg
stos
in
jae
mov
test
outsb
sub
in
nop
mov
int3
mov
dec
sti
mov
adc
xchg
loope
sub
xchg
sbb
ljmp
or
and
jmp
mov
bound
jae
dec
stos
das
out
movsb
nop
and
xchg
sub
ljmp
lret
xlat
jp
or
loope
jge
mov
icebp
xchg
mov
clc
shrl
cld
mov
loop
jle
dec
mov
loope
cld
rol
addl
inc
push
mov
and
scas
add
jbe
sub
imul
mov
inc
arpl
cmp
addr16
leave
sbb
jle
scas
sub
in
push
insl
loope
jmp
scas
outsl
hlt
les
std
pop
xchg
inc
xchg
arpl
mov
inc
jl
sub
jnp
test
ja
mov
xor
clc
arpl
fistpl
scas
jmp
loope
scas
lea
jne
jns
shll
mov
dec
mov
lods
push
sti
popa
lods
dec
scas
mov
insb
in
xor
clc
movsl
bound
xor
popa
sar
push
ror
xor
mov
jne
jne
loop
mov
mov
or
xor
out
in
and
sbb
add
outsb
dec
mov
or
aas
jo
and
loope
arpl
in
or
shrl
lret
xchg
mov
out
lahf
loop
adc
lahf
xor
mov
mov
loope
lods
daa
or
mov
mov
xor
push
rorb
and
push
xor
mov
push
push
adc
cmp
int
inc
dec
xchg
bound
add
or
push
xor
push
fldl2e
sub
sub
cltd
push
out
dec
fisubrs
add
xchg
outsb
mov
push
xor
outsb
add
iret
clc
lds
data16
movsl
sub
cld
cmp
jecxz
jg
addl
inc
cmp
mov
mov
arpl
inc
xor
into
mov
mov
nop
dec
sub
xchg
outsl
inc
xchg
lods
insl
repnz
fstps
mov
subl
or
insb
lds
inc
rorl
cmp
ret
sbb
out
loop
jne
shll
out
lods
nop
loope
out
add
jb
and
mov
xor
out
or
sub
clc
jecxz
insb
push
clc
sub
sahf
stos
xchg
pop
inc
sti
movsl
xor
lcall
xlat
and
scas
sub
int
lds
add
cltd
out
into
mov
arpl
mov
in
int3
out
loopne
rcll
or
sbbb
push
jno
in
and
push
jp
out
dec
out
nop
iret
mov
xrelease
arpl
mov
pop
dec
jle
out
out
and
scas
cmp
scas
jno
pop
test
sub
cs
cmp
imul
adcl
loope
es
mov
arpl
lea
xor
mov
out
sub
jp
lea
pop
add
mov
insl
jnp
lret
bound
out
push
outsb
rorl
and
repnz
push
in
scas
aad
inc
cmpsb
sub
movsl
push
cli
orl
insl
nop
sub
jecxz
cmovb
movsb
scas
sbb
push
outsl
mov
pop
push
xchg
sub
cmp
movsl
mov
pop
xorl
bound
and
fisttps
cmp
inc
mov
xor
push
xorl
shll
test
cmp
or
out
lret
dec
mov
mov
stos
cmpl
push
mov
leave
imul
sbb
dec
xchg
inc
daa
mov
ret
outsb
pop
cli
test
gs
movsl
ret
mov
inc
mov
out
dec
dec
fisttpl
gs
imul
test
sub
mov
and
dec
ret
jecxz
outsb
push
push
pop
cmp
pop
push
loope
mov
pop
dec
stos
xor
dec
lock
lods
pop
iret
shrb
inc
xor
push
or
lret
or
mov
push
cmp
out
dec
incb
add
daa
lahf
pop
jo
scas
je
dec
xor
outsl
xchg
mov
inc
or
add
in
out
mov
mov
sbb
scas
add
bound
sahf
addr16
inc
test
mov
ss
mov
add
sarb
jno
inc
mov
in
dec
jl
dec
cs
test
rclb
leave
mov
insl
out
dec
insl
ljmp
bound
cmp
xorb
or
sbb
sub
insb
mov
jbe
dec
arpl
jb
leave
mov
or
jne
and
sbbl
jmp
cld
in
mov
popa
jge
mov
outsl
mov
mov
imul
cmp
cmp
pop
shll
and
dec
test
lea
sub
fisubl
bound
and
ret
test
out
pop
sub
jle
push
xchg
xchg
jecxz
cmp
test
cld
mov
sub
outsl
test
cs
test
lea
out
insl
sar
add
popa
rcll
inc
mov
xchg
rorl
ret
pop
push
faddl
daa
adc
popa
inc
ret
or
mov
mov
lods
das
int
sbb
sbb
adc
fmulp
sub
inc
push
imul
lods
popa
dec
ret
rcll
sarl
mov
or
dec
js
movnti
cs
sbb
ljmp
or
cmp
cmp
push
into
inc
dec
lods
dec
ret
sub
mov
pop
dec
aas
push
mov
stos
lock
das
push
rcll
ret
leave
dec
setbe
hlt
jl
or
mov
sub
cltd
cmp
push
and
imul
loop
sbb
out
arpl
lds
cli
or
mov
scas
int3
mov
popa
into
dec
sub
lcall
inc
into
sub
loope
inc
lods
pop
jg
jmp
sub
addl
mov
out
mov
lret
lods
or
rcll
jp
out
mov
mov
nop
sub
mov
or
jp
out
popa
or
popa
sub
jmp
insl
mov
arpl
ret
mov
je
jecxz
jb
outsl
shr
inc
mov
inc
sub
fs
scas
jecxz
outsb
iret
rorl
scas
jl
insl
or
adc
stos
mov
imul
arpl
mov
in
fsubr
sub
cmp
ret
imul
or
out
and
addr16
and
mov
add
or
push
or
xchg
cli
or
inc
out
mov
loope
loop
imul
mov
iret
sbb
sub
sbb
pop
in
dec
and
inc
mov
ja
loop
pop
xchg
add
sub
jns
cmp
mov
sub
into
orb
xchg
daa
jecxz
fstps
mov
outsb
pop
bswap
mov
mov
mov
fisubl
lds
scas
or
inc
fcmovu
lods
inc
push
cmpsb
mov
arpl
xor
aad
leave
mov
jnp
loope
orl
dec
lock
pop
sbb
mov
cs
jmp
sti
stos
int
arpl
mov
fisubs
cli
cli
cld
out
imul
movsl
dec
fisubl
jmp
mov
cmp
jmp
sub
mov
fwait
mov
aad
mov
das
cld
push
jns
out
sub
lea
int3
push
arpl
fcmovne
ljmp
xchg
fwait
lret
out
dec
ret
push
aaa
mov
sub
leave
in
dec
stos
xor
mov
pop
dec
cmpb
push
jmp
pop
mov
and
mov
imul
jbe
mov
mov
and
adc
inc
addr16
or
loope
in
pop
dec
enter
stos
bound
scas
lds
mov
cltd
outsl
or
lahf
loope
mov
sub
push
fwait
mov
orl
add
lret
and
shll
inc
out
imul
jecxz
jo
popa
mov
pop
pop
mov
sarb
aas
dec
pop
jmp
insl
int
nop
xchg
mov
xchg
inc
das
in
mov
hlt
mov
mov
movsl
or
inc
test
mov
int
es
insl
jecxz
loop
rcrl
inc
cmp
lods
jnp
das
stos
test
mov
mov
ret
cmpsl
pusha
pop
das
lds
jnp
dec
outsb
inc
jmp
mov
cmp
ja
mov
pop
jae
and
cld
icebp
scas
lahf
cmp
dec
mov
mov
test
add
ljmp
sub
out
sub
mov
jle
cmc
or
int
dec
ljmp
out
pop
cmp
arpl
stos
pushf
and
iret
stc
insb
repz
das
dec
jbe
jne
inc
or
inc
and
push
stc
dec
faddl
lahf
fwait
inc
lds
sub
cmpl
das
or
ret
in
inc
sub
pop
mov
dec
out
xor
or
dec
das
das
ljmp
stos
cltd
inc
iret
dec
inc
add
dec
push
into
and
jns
pop
imul
or
jp
jg
popa
stos
mov
inc
mov
scas
dec
into
fiaddl
std
std
sub
bt
insb
imul
add
ss
sub
outsl
jmp
dec
and
jecxz
in
int
rorb
xchg
mov
pop
and
enter
mov
ja,pn
inc
int
in
xor
movl
and
inc
and
out
push
test
ret
inc
in
cmc
leave
jbe
int3
dec
rolb
repnz
scas
lahf
jae
jns
push
das
loopne
jmp
ljmp
ror
mov
mov
call
in
repz
std
cmpsl
cs
sbb
dec
inc
mov
add
loope
pop
cmp
inc
jg
jb
jb
jb
stos
popf
sbb
sbb
mov
fisttpl
scas
test
jmp
jl
nop
and
lock
ljmp
test
jecxz
outsb
pushf
daa
lods
lods
push
jmp
test
jne
scas
scas
adc
das
idiv
push
sub
scas
lret
dec
jne
lods
inc
insl
xchg
or
mov
xorl
jmp
test
prefetch
lea
cmp
dec
mov
insb
repnz
and
in
inc
iret
lds
and
mov
pop
test
andl
leave
dec
enter
es
mov
push
out
jb
gs
popa
clc
mov
orb
outsb
adc
and
pop
mov
leave
dec
scas
ret
mov
cmp
daa
cs
inc
das
ret
pop
in
xchg
orl
out
scas
sar
lret
inc
push
fimull
add
and
out
dec
lahf
ficomps
sbb
xor
sub
jne
test
sub
jmp
lret
insl
sti
jne
adc
scas
sarl
in
push
repz
pop
xchg
jge
push
shlb
mov
das
xchg
int3
sti
imul
xchg
rorb
and
pop
imul
bound
push
out
inc
loope
and
mov
scas
mov
js
add
dec
subl
cs
out
mov
add
jbe
movsl
xchg
dec
xchg
and
out
sbb
dec
inc
popa
inc
ret
repnz
arpl
loope
stos
sub
bound
nop
test
or
scas
int
movsb
xor
cmc
addr16
mov
mov
rclb
imul
lds
out
pop
lds
pop
mov
dec
dec
push
or
ljmp
shl
lods
jae
loope
and
fwait
and
xor
outsl
nop
add
pop
and
ret
pop
js
mov
xor
jg
arpl
fwait
and
xchg
movsl
push
je
dec
subl
scas
clc
fiaddl
jo
push
add
rorl
dec
add
inc
lods
outsb
paddusb
in
add
push
lock
sub
pop
push
push
xchg
add
lods
mov
sub
in
cmp
bnd
add
push
call
jp
out
mov
sahf
jmp
jp
cs
pop
sarb
bound
rcll
out
mov
ljmp
in
gs
inc
sub
outsb
iret
fs
clc
jecxz
sub
mov
jo
inc
inc
outsl
pop
lods
inc
fwait
sub
xchg
or
cwtl
xor
mov
movsb
sub
lea
or
inc
jp
dec
or
test
das
or
stos
loope
cwtl
push
lds
dec
outsl
xchg
dec
lea
mov
add
cltd
adc
aas
lods
adc
dec
js
or
dec
test
sub
shr
dec
jl
ret
scas
mov
leave
test
lret
mov
mov
push
xor
dec
push
test
mov
add
inc
mov
add
and
mov
outsb
and
divb
dec
out
leave
adc
inc
pop
cmp
mov
outsl
js
dec
call
xchg
sti
into
mov
and
lret
out
or
inc
and
cli
imul
addr16
and
int3
push
mov
sbb
ds
xlat
push
sub
jge
in
test
and
or
jnp
mov
sub
jmp
xchg
inc
dec
repnz
outsb
jmp
jg
mov
cltd
movb
inc
nop
mov
dec
mov
ljmp
or
arpl
jo
loop
ljmp
and
mov
mov
orl
rol
mov
mov
cli
pop
insl
jnp
scas
outsb
jnp
lret
lods
jo
mov
daa
int
cli
movsl
in
movsl
and
arpl
fdivr
push
fldl
cmp
cmpsl
inc
lods
jmp
insl
test
outsb
push
xor
ret
cmpsb
jecxz
mov
and
arpl
push
push
aas
test
jne
dec
leave
inc
ret
movsl
jecxz
insl
sub
cmpl
imul
mov
sbb
sbbl
enter
sbb
sti
xchg
stos
clc
lret
es
pop
andnps
leave
cs
mov
in
jnp
orl
mov
into
insl
lods
or
xchg
stos
jns
dec
mov
lods
cli
mov
mov
xor
push
sub
adc
pop
mov
ret
push
cmp
sub
ret
in
inc
ret
push
cli
shrl
pop
lret
mov
xchg
arpl
pop
mov
jecxz
mov
scas
add
into
mov
jge
or
icebp
jo
jb
scas
fnstcw
mov
loop
and
daa
jb
insl
push
push
test
jecxz
imul
mov
add
and
inc
push
sbb
outsb
mov
sub
loop
inc
iret
lea
sbbl
cmp
inc
dec
cs
ret
inc
outsb
in
xchg
shrl
sub
imul
cmp
lods
inc
test
and
fistl
adc
dec
lret
lods
leave
hlt
dec
in
leave
imul
gs
dec
cmp
and
sbb
and
jecxz
push
lea
cmp
mov
fldcw
je
andl
add
mov
fsubl
ret
jbe
insb
or
sub
inc
ja
xchg
movsl
cs
xor
daa
inc
js
roll
arpl
insl
xchg
and
clc
pop
cld
and
nop
popa
or
bound
pop
dec
lea
sub
in
jns
cmp
ret
hlt
sub
jno
and
out
inc
out
mov
outsb
test
fmull
or
jno
xorl
mov
inc
andl
into
movsl
into
out
ds
mov
dec
mov
jo
bound
das
xor
xchg
mov
sub
out
inc
out
mov
add
andl
mov
push
mov
jecxz
cli
fucomi
sub
push
cs
ret
fs
outsl
push
mov
scas
test
mov
stos
push
shrl
nop
ja
jmp
mov
rcll
pop
inc
insl
xchg
ret
bound
jae
ljmp
push
in
jmp
addl
repz
popa
jmp
or
dec
lret
gs
inc
adc
jecxz
push
aad
cmpsl
sub
leave
sub
scas
xchg
mov
hlt
repnz
divl
sarl
iret
outsl
jb
xorps
pop
scas
sub
addr16
out
das
ss
clc
jbe
js
mov
fmuls
jmp
outsl
pop
pop
insl
lock
js
lret
mov
lods
mov
sub
or
dec
fs
mov
addr16
inc
test
mov
dec
sarl
push
xchg
push
stos
mov
cli
outsl
nop
lahf
jb
ss
or
push
cmp
lods
add
push
shrl
ret
push
or
inc
push
test
out
dec
dec
clc
cs
and
and
cmp
rorb
out
ret
adc
lret
iret
inc
adc
aad
into
sbbl
jne
cli
nop
mov
xchg
mov
dec
jp
dec
js
or
inc
fdivrl
ret
das
insl
and
push
int
aad
loope
mov
mov
outsl
mov
cmp
js
push
loope
lods
inc
insl
loop
mov
test
pop
out
rcll
popa
mov
fsubrl
lea
jne
jbe
xor
out
mov
jbe
pop
bound
shrl
or
arpl
bound
lret
ret
int3
mov
je
dec
out
jmp
push
fwait
in
fildll
jne
jg
sbb
call
loope
clc
cmp
cmp
out
sub
jle
clc
mov
mov
ret
dec
movsl
cmp
jge
cmpsb
outsb
dec
mov
mov
or
cmp
int
xor
scas
dec
stos
cli
mov
mov
mov
daa
inc
jae
cli
out
das
bound
dec
loopne
add
push
scas
orl
lret
pop
bound
scas
and
and
sbb
dec
xchg
test
orl
lcallw
sub
int3
xchg
and
movsl
mov
insl
nop
outsl
pusha
push
js
lods
inc
or
mov
fdivr
push
dec
sub
dec
test
addr16
xchg
in
fnstcw
scas
into
imul
iret
stos
or
inc
fs
jne
out
subl
and
jno
pop
jo
out
sub
cmp
test
cwtl
sbb
lods
mov
jns
insb
xchg
test
pushf
sbb
into
or
stos
pop
roll
shrl
adc
push
mov
jbe
sub
mov
ret
pop
leave
in
pop
and
repnz
cli
dec
loope
imul
push
xor
cld
mov
add
xor
in
ret
repnz
dec
xchg
bnd
loope
nop
or
jge
mov
mull
jmp
stos
mov
je
int
jb
jnp
dec
test
push
mov
sub
xchg
pop
sub
sub
pop
stos
loope
hlt
or
roll
xchg
into
sbb
jae
mov
push
mov
in
insb
ljmp
movsb
adc
sub
int3
dec
or
lock
push
imul
xchg
ss
shlb
ret
push
jo
out
imul
ljmp
ljmp
lea
dec
movsl
dec
insl
sub
inc
lret
inc
xorl
mov
sbb
adc
out
lea
sub
imul
scas
shll
popf
cld
das
xlat
mov
dec
std
cmp
add
jecxz
out
jo
mull
lret
mov
leave
sub
xchg
in
push
mov
test
sub
out
mov
in
add
data16
leave
inc
addl
sbb
test
mov
aam
dec
xchg
dec
inc
movsl
imul
inc
ret
xor
jne
jbe
jne
fwait
ret
mov
adc
cmp
aas
mov
lods
cmp
addr16
mov
bound
inc
fwait
stos
arpl
xlat
mov
xchg
gs
and
outsb
add
fs
or
stos
sbb
mov
in
insl
lea
and
mov
xlat
xchg
lods
insb
in
ret
ret
clc
loope
pop
jle
mov
xchg
leave
out
inc
pusha
out
fisttpl
test
inc
arpl
arpl
popa
dec
in
bound
cmc
push
push
lods
arpl
test
xor
sub
mov
sub
jbe
jbe
add
push
mov
lea
push
mov
mov
fcmovnb
dec
jg
jmp
xor
cltd
ret
scas
add
cmpsl
mov
orb
out
lea
subb
jnp
popa
sub
push
inc
mov
into
fwait
add
loopne
stc
repnz
dec
std
imul
mov
lret
je
pusha
gs
dec
js
test
ljmp
push
mov
in
sub
sarl
push
arpl
inc
or
mov
imul
out
loope
daa
stos
call
inc
add
mov
lds
sub
sub
adc
xchg
push
mov
add
push
add
adc
test
or
es
cmc
in
add
cmp
cmpsl
sub
or
shrb
adc
xor
into
lods
sub
call
mov
sti
adcl
jl
sub
mov
mov
jmp
scas
sub
movsb
inc
add
clc
cmpsb
iret
and
jno
xor
das
sbb
pop
out
int
inc
cmpsb
roll
push
mov
xchg
scas
mov
aad
adc
mov
lret
rorl
or
jge
or
mov
clc
subl
mov
out
dec
int
or
bound
sub
inc
jge
mov
inc
out
movsl
xchg
pop
test
fwait
mov
sbb
mov
js
dec
loopne
xchg
sub
daa
dec
outsl
sub
pusha
mov
mov
in
dec
scas
pop
leave
pop
lods
sub
fwait
in
iret
jmp
fwait
xor
mov
aam
and
add
mov
test
mov
sub
scas
lods
mov
xor
add
add
scas
lods
dec
loope
dec
test
dec
inc
inc
fisubs
dec
pop
inc
push
out
mov
andb
jmp
add
adc
jecxz
and
es
pop
mov
sub
mov
movb
add
xor
aas
add
imul
xchg
lret
sub
add
pop
adc
popf
mov
dec
xchg
mov
out
push
mov
fimull
jmp
xchg
das
clc
sbb
ror
sub
sub
inc
add
dec
cs
inc
outsb
stos
loope
dec
scas
int
xchg
ss
iret
test
clc
imul
testb
imul
cmpsb
and
xchg
div
aam
xchg
push
adc
scas
dec
mov
js
mov
inc
imul
xor
or
jnp
mov
pop
cmp
cmpsl
clc
insb
loop
lods
imul
testb
xchg
or
pop
aas
stc
jg
mov
push
lods
jno
xor
inc
or
lds
movsl
and
cmp
jecxz
mov
cmpsl
call
daa
dec
cltd
or
pop
das
addl
fbld
cmp
adc
cmpsl
fcomip
sub
add
sbb
and
mov
mov
out
pop
imul
adc
jge
push
cmpsb
ja
movb
xchg
orl
jp
test
inc
push
test
mov
ret
mov
xor
or
mov
cmp
clc
cli
and
das
fbstp
inc
and
test
fcoms
out
inc
stos
push
stos
testb
in
and
movsb
dec
arpl
mov
cli
movsl
lea
stos
mov
movsb
and
outsb
bound
dec
es
sub
mov
inc
jns
jecxz
inc
cld
into
jecxz
pop
iret
and
add
imul
push
pop
adc
sbb
add
sarl
loop
cli
inc
lods
sbb
jle
arpl
jno
outsl
lret
ret
adc
mul
or
or
add
xchg
jmp
push
mov
addl
xchg
pop
inc
sbb
ret
mov
bound
dec
rorl
sub
jmp
mov
fildll
cmp
lods
ja
rcrl
and
jmp
sub
out
cld
and
outsb
push
iret
mov
je
sub
pusha
and
mov
fildll
mov
lret
nop
ret
mov
stos
addr16
int
call
aas
cmpsl
mov
stos
mov
cmp
or
test
adc
sub
cltd
in
mov
sub
shrl
or
test
inc
scas
pop
ss
jecxz
lret
push
scas
dec
std
lods
stos
or
pushf
inc
sub
aad
and
clc
imul
dec
in
or
lods
in
pop
rcrl
mov
imul
adc
movl
sub
jb
and
imul
mov
out
mov
dec
inc
leave
je
dec
int
jno
or
sub
xchg
mov
popf
jmp
or
dec
push
adc
hlt
lds
sbb
mov
orl
pushf
inc
mov
addl
andb
cs
sub
inc
in
mov
sbb
int
dec
mov
sub
lret
int
pop
cmp
xorl
jno
int
jns
push
arpl
outsb
push
insl
xchg
inc
jecxz
lahf
push
ret
pop
sub
scas
cmc
popa
shrl
jp
pcmpeqd
daa
ret
test
mov
sub
mov
cld
mov
add
pop
sti
mov
loope
imul
out
into
mov
or
dec
sbb
or
clc
xchg
sbb
push
frstors
jnp
or
or
ret
andl
and
lods
inc
insb
mov
and
pop
xor
out
push
hlt
jnp
clc
and
ret
xchg
clc
or
add
add
inc
shlb
das
mov
mov
lods
xor
dec
shrl
outsl
int3
hlt
dec
insl
mov
push
clc
or
call
leave
inc
mov
scas
test
ss
das
icebp
xor
rolb
xorb
icebp
clc
test
bound
addl
inc
imul
mov
mov
xchg
xchg
mov
cmpsb
or
into
dec
das
clc
mov
cmp
push
dec
out
les
shll
inc
sub
xchg
fimull
sub
test
mov
in
imul
iret
mov
insb
inc
popl
fs
jae
lods
arpl
inc
mov
js
xor
pop
xor
pop
shrb
aad
push
clc
movsl
sahf
out
sub
jmp
lods
sub
or
dec
xorl
negl
push
add
lods
bound
xchg
stos
sarl
out
popf
push
cmc
jecxz
orl
loope
cs
jg
push
mov
icebp
push
add
dec
cmpsl
test
mov
mov
mov
lods
std
sbb
cmp
xchg
lcall
testl
jo
mov
push
push
lea
mov
icebp
jp
insl
daa
out
fcmovu
daa
lcall
xchg
loopne
stc
in
sub
sub
adc
icebp
adc
std
clc
aas
xchg
push
pushl
clc
pop
aas
scas
ljmp
sti
mov
push
pop
jmp
loope
jb
arpl
dec
mov
outsl
or
imul
sbb
test
pop
xchg
popf
lahf
or
xchg
sbb
arpl
scas
dec
out
scas
cli
out
or
cmp
add
out
dec
hlt
cmp
int
je
push
stos
sub
clc
outsb
mov
jmp
lods
scas
lret
insl
int3
je
mov
inc
shrl
iret
mov
dec
and
js
inc
mov
outsb
push
arpl
mov
sbbl
jge
sub
dec
lret
shl
mov
mov
sub
sub
clc
or
and
mull
mov
fwait
out
insl
nop
ret
daa
cli
insb
mov
push
sub
movd
inc
jmp
fdivs
scas
insl
and
lahf
dec
leave
ljmp
push
out
jecxz
dec
cltd
xor
iret
clc
out
scas
pop
cli
loop
or
jbe
push
and
cmp
mov
mov
dec
dec
inc
nop
cmpsl
out
sub
loope
cmp
bound
lods
adc
addl
arpl
iret
test
mov
or
test
test
sub
lahf
jg
stos
lahf
imull
sub
adcl
mov
scas
cs
ret
int3
orl
and
and
or
jmp
sbb
mov
outsl
ret
sub
insl
cs
jbe
int
and
loope
ljmp
insl
and
mov
into
int
push
sub
popa
mov
lret
call
add
sub
inc
lods
inc
xchg
fdivl
outsb
mov
int
mov
ret
or
hlt
clc
stos
jecxz
aad
jmp
outsl
and
and
in
dec
call
or
inc
ljmp
ret
dec
pop
arpl
sarb
outsl
dec
test
ljmp
inc
dec
jl
jmp
out
shr
aas
out
lret
cli
sbb
dec
data16
add
xor
daa
lret
sti
leave
or
xor
adc
sub
ljmp
mov
lret
jnp
iret
mov
insl
cmp
dec
push
arpl
mov
cld
aad
subl
mov
ds
fwait
inc
add
in
jo
push
inc
sub
imul
bound
or
pop
loope
mov
imul
sub
arpl
add
sbb
das
cmp
loope
inc
nop
nop
fwait
lock
jae
imul
add
mov
ds
out
dec
add
dec
sub
mov
sub
xorb
cltd
cmp
das
sub
sub
mov
pushf
outsl
inc
popa
cld
sub
leave
jl
sub
push
sub
dec
mov
int
testl
mov
bound
mov
mov
andl
sub
and
fs
imul
out
dec
sub
sub
jmp
je
outsl
scas
mov
das
add
pop
and
pop
ret
popa
nop
ret
loope
shl
movsb
sbb
bound
in
lods
imulb
clc
lret
or
jmp
add
mov
xor
adc
pop
pushf
push
test
push
mov
insl
inc
cmp
bound
sbb
movsb
add
fldenv
cmp
mov
int
rcrl
add
adc
out
mov
and
ret
out
bound
jl
insl
mov
mov
mov
je
scas
nop
pushf
cld
iret
and
scas
outsl
sbb
mov
sub
mov
imul
repnz
sahf
mov
lret
xchg
mov
iret
stos
inc
mov
sub
out
test
and
push
arpl
adc
inc
xlat
add
sub
cld
cld
mov
inc
out
or
nop
mov
outsb
mov
insl
frstor
inc
adc
paddsw
jmp
ret
insl
xor
mov
jbe
or
or
and
dec
inc
add
outsb
test
fxsave
out
stos
cmp
std
sub
leave
mov
int
outsb
arpl
mov
movsb
mov
leave
lds
push
ret
fisubrs
sbb
imul
push
mov
cmpb
inc
jbe
stc
stos
test
inc
movsl
sub
mov
add
jp
mov
jno
lods
mov
lahf
out
mov
fsubs
sti
dec
dec
in
lods
insb
in
and
arpl
or
sbb
lret
dec
and
pop
mov
popf
outsb
sbb
and
cmp
add
test
test
xor
imul
push
and
sti
xor
mov
in
nop
dec
mov
lods
add
dec
out
scas
rorl
push
sub
mov
jl
mov
or
sbb
std
cmp
xchg
mov
mov
insb
in
out
dec
imul
push
ss
sbb
sub
jno
adc
movsb
add
in
enter
inc
bound
imull
insb
or
ret
scas
fwait
dec
int
lret
or
push
mov
mov
sub
lods
push
bound
out
dec
insb
scas
cmp
ss
and
mov
lahf
jge
aam
fsubrl
sbb
cld
jmp
jmp
or
inc
inc
or
dec
mov
inc
push
insb
fisttpl
stos
sub
rorl
imull
arpl
cmp
jecxz
jmp
push
or
jns
aad
mov
sub
mov
scas
test
je
mov
adc
aaa
and
inc
sbb
cld
dec
addr16
lods
push
into
jmp
ljmp
iret
shll
jecxz
add
cli
popa
bound
dec
sbb
adc
add
sub
xchg
dec
pop
lods
sbb
enter
addr16
push
jge
insl
mov
lock
jnp
test
adc
lock
scas
clc
outsb
repnz
push
and
lret
scas
sub
lcall
int
inc
jl
inc
loope
mov
bound
push
xchg
into
push
or
jno
and
jne
loop
ret
out
cmpsb
adc
jg
adc
bound
dec
outsl
fldenv
cmp
fidivs
add
lods
leave
out
into
das
mov
mov
dec
push
push
stos
stc
stc
push
outsb
push
lea
faddl
inc
jno
out
imul
or
jecxz
mul
arpl
mov
sub
pop
scas
or
ret
das
add
mov
mov
sub
push
mov
cmpsb
pusha
xchg
pushf
test
leave
jb
movsl
dec
mov
and
mov
mov
lods
jns
xor
or
inc
out
lahf
cmpsb
iret
add
fucomi
stos
arpl
fiadds
insl
push
into
mov
aaa
jo
or
cmp
mov
pcmpeqb
cmpsl
cltd
push
je
lock
arpl
nop
inc
mov
mov
loope
rcl
cmpsb
test
or
les
test
inc
jmp
inc
out
dec
stos
lds
inc
dec
sub
xchg
scas
or
mov
movsb
dec
sub
add
scas
mov
stos
fisubs
pusha
ds
adc
stos
jg
popa
into
dec
in
enter
ljmp
mov
insb
xchg
clc
mov
mov
pop
pushf
lods
inc
push
jb
scas
mov
dec
iret
fprem
testb
push
bound
sbb
clc
fldenv
lcall
leave
dec
dec
push
mov
cmpsb
jg
jno
test
outsb
insl
xor
shrl
pop
cwtl
mov
shlb
inc
jns
ret
dec
jo
and
mov
pusha
or
inc
test
xor
inc
jb
out
jle,pn
push
insl
inc
arpl
push
lods
dec
stos
jmp
inc
xchg
inc
jmp
outsb
mov
mov
dec
jne
mov
ljmp
inc
jbe
xchg
push
or
dec
jo
dec
jnp
stos
into
loope
bswap
add
mov
movsl
inc
lods
lds
sbbl
or
xchg
ret
push
add
test
lods
dec
leave
es
or
xor
jge
popa
dec
pop
xchg
loope
rorb
out
out
scas
andl
test
jb
mov
sub
xlat
push
xor
mov
mov
pop
push
mov
add
out
lods
out
stos
and
cmp
xchg
or
mov
sbb
leave
mov
roll
sub
add
fildl
outsl
mov
nop
scas
pop
int
adc
stos
lods
fcoml
inc
or
aaa
pop
jp
inc
mov
mov
or
test
subl
mov
push
nop
incl
inc
imul
mov
lods
clc
xchg
mov
nop
stos
imul
jb
addb
les
loope
arpl
xchg
repnz
dec
dec
push
orb
in
mov
fmuls
int
repz
test
daa
gs
mov
cmp
out
and
outsb
lea
mov
jne
out
push
mov
inc
sahf
and
inc
push
dec
jge
stos
lret
push
bound
andl
stos
mov
sub
push
jmp
cli
dec
mov
dec
pushf
or
clc
leave
sub
dec
sahf
or
test
in
lret
fldl
popa
jmp
push
je
scas
and
jne
jb
mov
jae
lods
testb
dec
or
in
add
mov
add
std
aam
mov
sub
pop
pusha
pop
call
loope
das
stos
into
lahf
inc
repz
inc
add
adc
xchg
in
jns
push
insl
pusha
rcrb
or
cmpsb
mov
lea
data16
cli
bound
in
pop
push
clc
jge
leave
mov
loope
add
add
sbb
inc
outsl
and
xor
imul
push
jecxz
jg
jle
jae
subl
mov
test
lahf
cmp
outsb
fildll
jns
sub
dec
cld
pusha
dec
inc
sub
push
ljmp
jns
ret
arpl
out
xchg
xchg
lods
jmp
pop
mov
nop
mov
inc
mov
fs
out
inc
icebp
mov
dec
jg
ret
lret
adc
rorl
nop
imul
addr16
push
push
in
cs
jl
mov
jecxz
les
add
fwait
pop
inc
dec
ja
loope
xchg
sub
mov
jl
push
mov
or
ret
adc
mov
insl
cmc
jbe
add
or
les
pop
inc
pop
fistl
in
or
sbb
add
outsb
jecxz
jnp
test
push
or
push
ret
jns
and
in
fiaddl
pop
jnp
scas
sub
dec
fs
dec
xchg
cmp
inc
mov
push
out
movsb
mov
inc
push
jl
sub
or
inc
stos
in
das
pop
xor
loop
cmp
sub
sub
test
mov
stc
ret
popa
test
out
xor
mov
test
fisubrl
xlat
and
add
bound
push
push
lea
subb
and
mov
imul
mov
xlat
and
cld
in
pop
jp,pn
mov
ret
mov
les
shrl
leave
sub
xlat
mov
mov
lods
dec
popa
dec
add
out
insl
mov
add
jmp
arpl
mov
in
inc
mov
inc
ret
fsts
outsl
cmp
add
dec
pop
pop
insb
fwait
lret
mov
subl
cs
scas
out
push
test
pushf
sbb
arpl
sub
add
cwtl
imul
mov
adc
int3
pop
nop
or
mov
hlt
mov
dec
dec
jns
mov
mov
ret
sub
add
insl
adc
ret
insl
inc
and
dec
arpl
and
stos
xchg
je
aad
push
in
push
arpl
dec
mov
xlat
mov
dec
mov
jb
outsl
lret
mov
scas
and
push
shl
sub
aad
add
shll
arpl
mov
test
mov
aad
shll
das
add
mov
inc
ljmp
sbb
repz
xor
das
dec
dec
rorb
push
mov
jp
fnsave
xchg
lods
jmp
bound
inc
rorb
imul
jl
das
mov
ret
daa
popa
jmp
outsb
icebp
and
stos
xchg
scas
imulb
or
or
adc
mov
stos
adc
insb
cltd
lods
mov
sub
push
bound
leave
jbe
jne
mov
scas
or
mov
jg
sbb
fstps
stc
inc
sti
iret
das
mov
pop
xchg
mov
out
mov
mov
inc
mov
jbe
xor
mov
mov
inc
outsb
sbb
jmp
insl
and
aam
scas
push
xchg
xor
stos
mov
in
sti
cmp
arpl
xchg
dec
or
mov
out
push
cld
push
in
inc
leave
sub
sbb
mov
es
pusha
in
cmp
dec
add
mov
jnp
cs
inc
inc
into
in
lds
in
leave
mov
clc
sub
jmp
in
ljmp
sbb
jb
xchg
out
mov
lock
xchg
test
or
pop
and
add
neg
cmp
test
outsb
loop
test
clc
notb
adc
ret
lock
insl
xor
shrl
arpl
ret
push
inc
scas
mov
es
and
mov
mov
out
mov
into
pop
mov
mov
nop
sub
xchg
cwtl
jl
popa
shl
lret
mov
push
das
int
and
lret
out
mov
out
scas
aam
iret
or
stos
dec
andl
adc
jmp
jbe
cmp
adc
xor
testl
mov
ret
js
ret
pop
pop
insl
stos
dec
lods
fistpll
iret
xlat
ja
jmp
into
shrd
inc
xor
popa
bound
cs
push
in
outsl
dec
das
dec
loope
loope
cmpsl
jecxz
outsb
and
and
lods
sub
xchg
sub
mov
mov
jbe
inc
dec
and
pop
pop
jns
sbb
inc
cs
dec
movsl
in
aam
shll
xor
dec
out
jb
push
jbe
add
ss
push
ljmp
mov
out
ret
scas
or
hlt
icebp
mul
push
mov
or
jnp
jl
leave
arpl
adc
mov
daa
mov
outsb
add
adc
test
sub
fdivr
cs
call
dec
sub
jmp
je
sub
sbb
cmpsb
out
imul
out
inc
out
test
iret
or
sbb
jmp
stos
mov
dec
and
es
jge
fnstsw
lds
jmp
outsb
movlps
add
loope
lea
pop
cmp
test
bound
mov
push
addl
or
lods
mov
scas
ret
jb
out
scas
dec
dec
lock
sub
leave
inc
bt
cmp
and
xchg
and
sub
dec
loopne
clc
or
xchg
mull
sbb
shrb
stos
bound
outsb
and
jp
jp
mov
adc
mov
adc
pushf
jle
iret
mov
push
lret
cmp
adc
dec
xchg
pusha
xchg
jp
sub
dec
clc
mov
push
loope
mov
xor
push
mov
mov
push
clc
test
cmpl
and
push
inc
insb
ret
jmp
std
lock
push
jb
insl
outsb
or
das
out
xor
out
dec
in
lret
mov
sub
inc
dec
fwait
test
ret
mov
out
add
bound
int3
mov
aad
push
stos
les
fs
add
scas
inc
and
in
testl
sbb
or
lods
add
lods
cmp
lock
inc
push
cli
fmul
pop
movsb
js
loope
sub
leave
jbe
test
iret
or
lret
test
insl
fistpll
dec
fisttpll
stos
inc
xor
and
lret
or
or
addr16
mov
negb
ds
stos
mov
cmp
jecxz
or
ljmp
inc
xor
stos
xchg
inc
push
mov
icebp
cmpsb
mov
fst
test
lret
mov
dec
cmp
mov
dec
push
ret
jo
or
cmp
gs
clc
seto
mov
subl
into
repz
sbb
aas
loop
jnp
mov
mov
loope
ds
fs
sub
mov
lds
shrb
sub
sub
jecxz
jle
inc
arpl
outsb
pcmpeqd
cwtl
mov
pop
ljmp
test
jp
and
jne
aas
leave
pop
bndstx
push
faddl
ljmp
stos
bound
popf
test
jno
ret
ss
outsl
inc
jns
mov
xor
dec
daa
sbb
scas
xchg
jb
dec
movq
in
xchg
mov
add
ror
dec
aas
movsl
pop
clc
dec
adc
test
ret
push
repz
or
dec
inc
cs
les
aad
fwait
clc
pand
fsubrp
in
xchg
mov
or
sub
scas
mov
mov
nop
movsl
addl
xor
xchg
lods
ljmp
pop
ret
mov
out
inc
dec
or
mov
inc
inc
icebp
add
pop
out
lods
pop
jb
imul
sbb
clc
jbe
fdivrs
sub
mov
mov
jmp
cmp
jae
sub
sub
xchg
add
and
push
or
jae
jp
subl
andl
out
xchg
lods
fsubrp
outsl
xchg
cwtl
or
mov
sbb
jae
es
push
jns
inc
dec
cmp
loope
sbb
mov
test
adc
out
mov
dec
lods
mov
mov
sbb
fmuls
pop
inc
push
dec
lods
leave
test
pop
sub
xchg
psrad
mov
mov
insl
push
push
lds
in
shrb
int
dec
jno
or
lea
add
fisttpll
push
fwait
sbb
mov
leave
subl
into
jp
adc
push
dec
inc
mov
dec
fisubl
lods
mov
lods
lods
pop
xchg
jo
shufps
dec
mov
subl
inc
out
out
dec
jmp
sub
mov
push
icebp
out
ret
mov
jl
or
into
test
in
dec
pop
subl
add
jecxz
adc
leave
mov
bound
or
mov
mov
flds
cli
cmp
movsb
jecxz
inc
pop
sbb
and
arpl
cmp
or
ret
inc
bound
subl
or
out
add
inc
call
or
mov
das
mov
les
loope
lahf
inc
sbb
jbe
adc
test
ret
aas
out
and
je
jecxz
jno
mov
xchg
lea
cli
push
test
sub
pusha
xchg
or
push
in
and
jne
lods
inc
mov
sub
jmp
inc
fcmovb
imul
xchg
out
int
dec
mov
or
leave
mov
int
clc
out
popa
es
sub
xor
sub
xor
dec
repz
dec
shrl
scas
mov
int
cmp
dec
orl
jl
mov
ljmp
push
xor
outsb
into
leave
nop
scas
jbe
out
test
pop
mov
sahf
jecxz
jl
jmp
mov
xchg
fimull
lea
or
push
outsl
cmp
int3
nop
sub
adc
and
jmp
sbb
int3
rcr
faddp
pop
push
scas
cltd
mov
out
aas
dec
or
das
pushf
sarl
ficompl
mov
ss
stos
dec
in
ljmp
lret
dec
out
imul
ja
loopne
cmpsb
outsb
add
bound
dec
sub
dec
scas
jecxz
mov
dec
orb
pop
scas
push
out
out
data16
sub
mov
xchg
imul
jo
sti
dec
mov
or
out
mov
cmp
lret
lahf
outsl
outsl
mov
leave
fldt
jmp
repnz
and
repz
test
or
lea
jb
sbb
inc
xor
push
imul
cmp
popf
dec
add
bt
dec
xor
or
int
insl
je
cs
or
fwait
scas
stos
loope
orl
and
push
test
stc
mov
add
out
sbb
push
jae
cmpl
cli
or
jl
mov
fidivs
and
lock
mov
lods
imul
sbb
inc
mov
dec
scas
js
into
imul
dec
mov
ljmp
dec
int
cmp
push
mov
add
out
loope
lret
or
dec
daa
jl
dec
jmp
or
insl
cmp
imul
dec
loope
pop
in
outsb
lahf
mov
push
lods
sub
mov
mov
add
rorl
mov
add
or
imul
adc
je
mov
or
ret
lret
or
test
das
dec
lcall
xchg
out
test
scas
mov
outsl
cmp
cmpsb
out
inc
jge
inc
popa
mov
jp
add
mov
sub
jne
mov
out
xor
roll
dec
push
and
cs
mov
or
mov
fs
or
mov
dec
cmp
push
lock
hlt
iret
sub
mov
sub
cmp
lods
out
sbb
mov
mov
movsl
or
aaa
out
in
into
roll
lea
add
notb
icebp
in
stos
stc
sub
add
push
inc
sub
out
or
pop
mov
cs
jo
popa
insl
into
mov
inc
push
ret
inc
sahf
lcall
pop
jmp
jmp
je
or
and
scas
iret
xor
jnp
jmp
add
bound
fs
jmp
cli
lret
cmpb
shrb
outsl
lods
lods
mov
scas
lea
shll
jno
insb
xor
nop
insl
pop
dec
cs
outsb
mov
mov
loope
add
inc
push
testl
orl
outsl
mov
dec
js
mov
mov
call
adc
imul
dec
dec
subl
lock
xchg
xchg
cmp
fldt
leave
lret
stos
push
imul
ret
push
out
dec
sti
loop
inc
in
xchg
adc
mov
iret
test
sub
sub
popa
das
testb
push
sub
stos
aas
ljmp
xor
jmp
lcall
into
dec
cwtl
inc
stos
mov
push
ret
ret
inc
scas
mov
test
mov
fiadds
enter
jmp
fwait
cmp
lret
test
movsb
rorb
lock
in
or
sub
fmuls
or
leave
inc
mov
imul
aam
pop
sbb
pop
outsl
push
mov
bound
push
add
mov
and
fwait
push
out
clc
dec
insl
add
adcl
lods
arpl
and
out
mov
arpl
js
jmp
jns
jne
jl
scas
ret
mov
mov
fadd
lcall
jbe
and
push
jg
iret
ljmp
hlt
add
sub
dec
xchg
addr16
xchg
jne
jne
push
jle
ficompl
in
sti
mov
stos
shl
mov
mov
in
subl
js
in
movsl
imul
mov
sbb
test
arpl
inc
outsb
mov
jmp
daa
daa
in
popa
jno
psubb
fisubrs
push
decb
sub
cmc
gs
inc
add
cld
cmc
sbb
mov
and
xchg
cli
test
sbb
or
inc
or
ret
mov
ret
mov
mov
dec
sub
sbb
cs
stos
nop
les
jmp
adc
sub
test
jmp
ret
add
lods
das
pop
mov
lahf
pop
popf
scas
push
add
add
push
fsubrl
in
jmp
outsb
xchg
jmp
xor
mov
mov
inc
pop
dec
shrb
arpl
roll
xchg
mov
mov
and
iret
cmp
gs
sub
jo
jecxz
insl
mov
adc
dec
das
dec
jns
or
or
jge
and
mov
lods
adc
lds
jns
cmp
outsl
inc
insl
lcall
lods
sub
dec
dec
inc
mov
xchg
xchg
add
jle
sub
xor
jge
int
pop
fbstp
mov
popa
sub
lods
iret
adc
xor
out
out
scas
movsl
dec
loope
jne
lods
bound
movsl
inc
nop
cld
sti
daa
mov
cmp
in
ret
mov
test
int
mov
dec
cmpsb
or
add
std
xchg
outsb
hlt
mov
mov
insb
sbb
or
sub
pop
or
jecxz
insb
xor
test
jb
jb
dec
dec
repnz
arpl
in
int
test
or
push
lods
cli
loop
fwait
mov
sub
imul
sbb
int
xlat
movsl
mov
jge
jmp
jmp
mov
lods
ljmp
jge
mov
stos
and
ljmp
cmc
clc
stos
mov
sub
std
fwait
and
dec
mov
shrb
cmpsl
sub
push
inc
push
mov
push
dec
mov
cmp
pop
imull
das
cmpsl
jle,pn
pushf
pusha
xor
popa
add
nop
jne
ds
and
shrl
into
icebp
fisttpl
mov
jmp
inc
sub
ljmp
sbb
out
daa
testb
push
iret
leave
int
ja
jne
daa
or
sub
pop
ret
xchg
and
sbb
ret
arpl
inc
inc
mov
sub
outsb
dec
or
or
sub
popa
mov
icebp
test
mov
dec
test
inc
push
insl
fmull
add
jbe
xchg
sub
fwait
dec
rorl
and
pop
lea
ret
in
std
sub
xchg
out
push
fadd
jb
shl
outsl
mov
xchg
mov
ret
ljmp
int
xchg
push
mov
add
or
xor
cmpsb
fistpl
lods
std
xor
mov
outsl
mov
sub
aad
fsubl
sub
scas
mov
insl
push
insb
xchg
lods
out
fstps
imul
ret
push
push
repnz
int
ss
push
lea
fistpll
fs
out
scas
scas
leave
xor
nop
fbld
add
or
jne
out
insl
cld
add
pushf
outsb
adc
mov
ja
xor
or
mov
popa
fildl
test
cmp
out
sbb
sbb
cs
jecxz
add
sub
add
lods
ret
in
xchg
daa
dec
adc
add
pusha
clc
lods
add
mov
or
scas
add
or
cltd
xchg
repz
push
ret
je
femms
leave
iret
nop
test
jo
ljmp
xor
dec
iret
pop
jmp
dec
push
push
mov
test
push
outsb
mov
and
mov
inc
movsl
test
or
inc
fwait
mov
ja
xchg
addr16
insl
nop
jecxz
insl
in
mov
ret
add
or
cld
arpl
and
subl
nop
push
mov
push
inc
bound
arpl
nop
lds
ljmp
dec
imul
sub
nop
insl
and
mov
jb
fsubrl
popa
dec
add
sub
nop
andl
add
outsb
sub
insb
lods
gs
mov
dec
ljmp
inc
or
iret
lds
inc
int
adcb
xor
arpl
nop
ret
lock
outsb
scas
lea
jecxz
stc
inc
addr16
or
out
repnz
mov
or
add
cmp
mov
clc
stc
mov
or
mov
scas
push
pusha
repz
sub
ret
mov
es
sarl
out
subl
inc
movsb
lret
ret
stos
fsubrs
dec
sarb
mov
sub
jns
lock
push
add
jnp
leave
add
push
rorb
xchg
lret
or
mov
sub
pop
mov
dec
mov
mov
mov
sahf
mov
movsl
add
subb
cmpsl
in
cs
lods
dec
js
and
lods
shrl
pushl
repz
bound
jmp
outsb
out
lods
outsl
nop
mov
lods
xchg
lods
iret
stos
mov
dec
inc
lds
add
inc
cs
ret
dec
es
in
mov
push
add
popa
adc
add
scas
arpl
test
jb
xorl
inc
add
insl
test
xor
lcall
mov
in
add
adc
jecxz
mov
punpcklwd
outsb
das
mov
nop
scas
xchg
addr16
popl
jge
adc
add
xchg
repnz
mov
in
test
lds
xchg
push
lods
or
bound
lods
sub
push
add
iret
mov
fisttps
cmp
sbb
clc
pop
and
ret
arpl
ret
lods
iret
push
leave
or
in
ret
sub
daa
lea
out
daa
gs
dec
mov
inc
addr16
scas
sub
and
ret
mov
mov
lods
xlat
mov
ret
mov
popa
xchg
inc
add
mov
int
in
out
push
inc
lds
cs
jb
shrl
mov
out
and
dec
mov
and
lret
mov
test
or
pop
push
imulb
popf
stos
clc
inc
out
test
les
iret
sub
orl
orl
lea
push
rclb
xor
fwait
outsb
ret
loope
push
dec
lock
int
and
add
mov
ret
or
lock
popa
stos
cltd
push
cmp
cmp
xor
pop
sbb
in
or
dec
movsb
lret
and
out
dec
dec
ljmp
sub
fistpll
loope
mov
mov
shr
fwait
add
ljmp
test
mov
ficoml
repz
or
jbe
jne
mov
leave
mov
xor
mov
je
insl
andnps
push
shl
mov
lock
mov
mov
or
imul
adc
idivl
sub
sti
sti
bswap
scas
mov
cltd
mov
leave
lret
lcall
fs
lods
movsl
dec
add
mov
xchg
leave
dec
xorl
pop
addr16
movsl
dec
int
xchg
pop
sub
mov
push
mov
hlt
repz
mov
leave
adc
sub
or
daa
dec
in
addr16
inc
out
cs
xchg
dec
cmp
mov
add
push
ljmp
test
lret
leave
loope
ljmp
dec
xchg
lods
loope
mov
and
add
jmp
test
loope
push
jne
jb
xor
addr16
jnp
inc
nop
mov
subl
ret
mov
mov
ret
jecxz
sub
ljmp
stos
mov
xchg
mov
mulb
testl
lods
enter
inc
lods
lea
or
data16
clc
push
movsl
cmpsl
insw
arpl
inc
imul
arpl
mov
adc
test
bound
leave
sbb
and
popa
mov
es
clc
test
sbb
jne
shrb
dec
ret
daa
test
mov
repnz
mov
mov
sbb
movsb
sub
or
in
in
and
into
fld
add
jns
or
sub
clc
ftst
sub
stos
mov
insl
or
nop
cs
mov
jb
pop
insb
xor
mov
dec
outsl
mov
stc
jl
pop
xlat
mov
cmp
dec
sbb
mov
lds
dec
arpl
loope
inc
dec
sub
sbb
mov
andl
sub
adc
and
scas
insl
or
test
ret
ret
jmp
or
shlb
mov
loope
or
outsl
stos
add
ret
mov
add
lret
dec
ret
add
iret
js
jecxz
movsb
jmp
add
or
dec
bound
jg
rorl
rorb
movsl
mov
fwait
out
mov
and
test
and
push
fcmovnbe
lret
ret
push
jne
adc
dec
jl
add
dec
lea
pop
pop
xor
inc
sub
push
stos
ss
mov
clc
sub
dec
out
ss
fwait
test
and
sub
ja
out
in
loop
je
add
jbe
daa
mov
jnp
outsb
in
sub
fwait
ljmp
repz
xorl
inc
push
mov
ret
sub
pop
icebp
fwait
scas
pop
sub
xor
jmp
dec
cs
repz
or
or
or
mov
push
dec
shrb
lock
int
das
mov
mov
cltd
outsl
packuswb
cmp
sbb
jo
mov
fisubrs
xor
loop
or
lods
outsl
fldl2e
xor
mov
outsb
fnclex
scas
mov
les
andl
jecxz
movsl
hlt
shlb
xorl
outsl
jg
mov
shrl
mov
cmp
loope
mov
sub
movaps
insl
jbe
adc
jns
insb
cli
shll
aas
jl
dec
insl
into
out
lods
dec
ljmp
xchg
jmp
push
adc
pop
mov
inc
push
jno
pop
inc
stos
adc
addl
out
fidivl
inc
push
out
jecxz
dec
add
icebp
stos
xor
push
data16
in
jmp
push
mov
js
arpl
sub
enter
nop
out
jbe
sub
js
or
fbld
mov
nop
loope
out
add
nop
add
xor
lea
add
aas
sub
cwtl
inc
scas
lret
mov
lods
mov
dec
sbb
test
pop
cmp
lods
movsl
dec
or
movsb
adc
lods
shll
in
inc
iret
loopne
lods
mov
ret
and
call
leave
jl
add
rorl
inc
cli
fisttps
jbe
mov
inc
adc
pop
mov
dec
xchg
test
ss
push
lods
mov
in
andps
sub
sbb
and
pop
jb
mov
inc
mov
es
aam
push
stos
cld
inc
bound
cs
in
nop
mov
mov
pop
cmp
push
lret
test
ret
scas
lea
jg
jge
jl
in
and
out
addr16
scas
push
sub
or
cmp
scas
xchg
movsl
nop
mov
jge
stos
mov
iret
dec
mov
cmc
outsb
out
xchg
das
jo
leave
lret
inc
arpl
out
loopne
dec
mov
stos
into
pop
nop
ss
movsl
add
add
test
mov
or
inc
out
in
sub
or
in
mov
xchg
and
outsl
nop
dec
add
rcr
outsl
jb
arpl
les
lods
dec
jne
jg
or
mov
inc
imul
outsb
sub
loope
sbb
dec
scas
pop
cmpsb
roll
add
int
fs
dec
into
mov
cltd
cmp
test
stc
inc
loope
xchg
cmp
lock
and
insl
shll
dec
out
push
movsl
rcrb
loop
mov
xor
or
lret
mov
clc
sti
stos
out
loope
sub
jns
inc
dec
or
jmp
enter
adc
or
insl
dec
pop
imulb
fs
and
dec
xor
dec
adc
stos
mov
int
stos
push
loope
mov
push
mov
orl
aad
xchg
popa
pop
sub
ret
test
insl
xchg
jp
imul
out
mov
dec
mov
repz
cmp
lret
and
or
outsl
cmp
lods
jp
mov
addl
jne
je
roll
lock
addr16
mov
outsl
lret
hlt
stc
jecxz
stos
add
lods
cmp
shll
sti
lock
mov
stos
mov
int
loope
sarl
out
mov
mov
gs
or
outsb
mov
out
jbe
mov
in
in
push
insl
mov
xchg
sbb
xchg
push
jb
pop
data16
xorl
test
clc
xchg
daa
xor
mov
outsl
stc
imul
cmp
addr16
ljmp
bound
out
lret
or
dec
mov
iret
pop
scas
jge
incl
mov
arpl
bound
int
scas
insb
or
lea
lods
or
test
adc
je
jecxz
cmovle
es
xor
adc
shll
fisttpl
insb
adc
add
test
gs
ret
mov
fs
mov
sbb
push
jnp
inc
lods
shl
out
pop
jns
iret
push
xor
test
paddsw
jecxz
lret
dec
shrb
stos
jns
fists
jns
mov
cmp
and
xor
dec
push
into
jb
addr16
or
lret
jne
lret
jns
shll
test
dec
cmp
je
inc
xchg
clc
pop
lret
pop
clc
xor
xor
aad
and
clc
stos
std
loope
push
std
and
popa
arpl
mov
leave
push
jno
dec
or
outsb
insl
sub
std
les
mov
and
jge
shrb
sub
movsl
outsl
scas
inc
test
xchg
and
test
mov
in
rorl
enter
mov
mov
mov
mov
bound
add
push
stos
inc
add
cmp
arpl
push
imul
nop
push
sub
int
stos
imul
int3
inc
fdiv
cli
add
iret
ljmp
out
mov
bound
mov
ret
inc
sub
lods
push
test
sub
mov
and
sub
imul
testb
or
fwait
cmp
out
lods
add
jmp
clc
ljmp
jl
or
inc
imulb
nop
add
jnp
int
outsl
orl
out
insl
pop
fiaddl
hlt
je
or
pop
jns
daa
sub
cmp
and
stos
jne
sbb
push
mov
xor
pop
clc
imul
out
loop
out
pop
pushf
mov
stos
and
insl
cs
mov
mov
cmp
sbb
jmp
jb
push
call
arpl
fwait
inc
lahf
add
sbb
jl
inc
dec
scas
outsl
leave
lods
cmp
out
mov
insl
aam
mov
xchg
or
scas
pop
lret
cmc
test
mov
or
and
adc
into
adc
xchg
mov
lods
sbb
xchg
mov
into
and
mov
nop
push
mov
or
test
and
pop
jb
mov
scas
dec
push
lret
imul
ljmp
lea
dec
jmp
call
mov
movsb
in
sbb
or
lock
fs
mov
jno
test
dec
or
lods
mov
call
cltd
dec
testb
xor
lds
fisubl
add
push
mov
nop
fsubrp
imul
fimull
push
js
xor
fldt
repz
inc
imul
mov
mov
loope
repnz
inc
outsb
test
push
out
stos
xrelease
lds
mov
lahf
add
mov
jbe
leave
in
pushf
and
jb
jnp
sub
insl
scas
xchg
aad
test
add
out
mov
lret
inc
aam
int
mov
int
ret
inc
dec
mov
lods
pop
cmp
fs
lret
cs
lret
sub
dec
shl
ss
cmpsl
mov
adc
test
rcrl
xchg
ret
in
adc
lahf
inc
movsb
xor
jbe
lea
inc
or
outsb
add
adc
leave
arpl
xlat
out
add
dec
ret
hlt
mov
xlat
xchg
aaa
xor
jmp
stos
cli
or
mov
fwait
test
ljmp
into
ret
clc
andl
arpl
mov
out
lea
fs
jmp
int
inc
mov
mov
sub
setbe
cli
stos
cmpl
imul
cmp
cmp
out
popl
lret
repnz
loope
dec
hlt
stos
jl
ror
scas
orl
inc
add
add
sub
out
xor
test
and
in
jno
mov
movsl
and
mov
js
out
leave
in
jne
in
lods
in
js
dec
popa
jbe
loop
out
inc
loop
addr16
lea
popa
jmp
lahf
es
insl
mov
lds
add
scas
dec
shld
jecxz
inc
sub
or
mov
and
outsl
fnstsw
push
outsb
or
mov
dec
leave
in
dec
dec
inc
jle
rorb
dec
arpl
enter
push
xchg
or
iret
xorl
nop
jecxz
ret
dec
in
mov
mov
lds
and
ret
popa
movsl
or
push
jl
mov
ljmp
cmpl
arpl
into
hlt
or
mov
inc
push
inc
mov
ds
movsl
pusha
addr16
bound
popa
out
shll
mov
lahf
stos
lods
jp
dec
mov
stc
js
sub
jle
sbbb
rorl
xor
lods
outsb
lds
dec
pop
cs
bound
loop
and
stos
ljmp
dec
pop
pop
rolb
dec
adc
andb
dec
push
mulb
jbe
jbe
adc
mov
lret
scas
aaa
lea
mov
pushf
arpl
hlt
inc
out
and
push
out
loope
ret
ret
je
out
or
xsave
mov
rcrl
add
ja
imul
ss
push
lret
or
push
sti
out
dec
iret
nop
dec
adc
inc
and
in
popa
jb
cmp
lea
cmp
cmp
shll
sbb
clc
aaa
lods
aam
mov
adc
subl
push
scas
push
es
int
sub
out
cs
popl
and
xchg
dec
insl
sbb
shll
or
das
jb
sbb
incl
push
jg
and
inc
mov
bound
dec
push
dec
jge
into
hlt
sbb
and
subl
ja
jno
pop
mov
xchg
in
loop
test
cmp
cmp
add
int
mov
insl
into
test
xchg
scas
mov
hlt
mov
jno
andb
arpl
mov
and
fnop
cltd
mov
mov
inc
inc
inc
movsb
out
xor
mov
push
loop
inc
cmp
loop
loop
xchg
fwait
arpl
mov
sbb
iret
and
mov
push
dec
rcrl
mov
nop
rcl
mov
into
jmp
outsb
sub
mov
add
sub
subl
sti
dec
stos
out
mov
pop
xchg
push
in
dec
mov
inc
mov
jb
outsl
movsl
fistpl
or
mov
movups
dec
mov
and
mov
in
mov
ret
add
mov
leave
xchg
out
fwait
push
in
sub
ret
cmp
mov
pop
jne
in
scas
std
in
aam
dec
jp
shl
sub
jp
iret
push
es
pop
test
pusha
scas
loope
pop
inc
or
and
lds
scas
add
cmpsb
mov
xlat
sub
into
out
insl
sbb
dec
or
cmpsb
mov
mov
into
ret
dec
xchg
sbb
sub
fisubrl
or
shl
orl
jo
mov
test
sbb
mov
push
mov
jb
jmp
and
popa
lods
push
sub
stos
mov
outsl
jecxz
mov
mov
cli
xor
into
bound
pop
inc
int
test
arpl
divl
shrb
ret
data16
scas
mov
ret
aaa
gs
vmlaunch
out
mov
mov
jne
loope
mov
and
ret
fwait
rorl
mov
or
sub
xor
mov
inc
cli
addr16
lods
fcmovnbe
aam
xchg
add
stos
xchg
fs
inc
lock
test
das
dec
sbb
push
and
insb
rorl
popa
mov
dec
shrb
test
rorb
shll
lret
dec
lods
inc
and
dec
mov
xchg
mov
in
push
outsl
jg
push
jmp
sub
and
push
jno
and
jl
dec
mov
or
mov
dec
shl
push
imul
add
lods
jmp
mov
in
lods
out
scas
dec
lret
aas
push
stos
inc
jmp
and
mov
popw
imul
insl
outsl
sbb
popa
and
inc
leave
test
dec
mov
dec
or
inc
in
and
scas
jnp
imul
aaa
mov
sub
movsl
in
test
imul
xor
mov
sahf
xchg
sbb
test
lods
outsl
clc
std
stos
sti
mov
push
fistl
sub
fcmove
pop
jecxz
imul
mov
int3
mov
jne
sub
dec
into
inc
ret
fucomi
dec
insb
inc
lods
jecxz
jbe
nop
add
bound
sub
cmc
cli
arpl
lret
out
ljmp
in
ret
sub
xchg
stos
shrl
cltd
jb
dec
inc
add
cmp
or
mov
out
or
inc
lock
inc
movsl
jecxz
or
leave
clc
or
or
filds
add
dec
in
int
jb
jmp
lds
inc
jae
mov
cmp
nop
jb
movsb
fs
mov
imul
mov
add
in
lock
addr16
xchg
clc
dec
or
fistpl
jmp
cmp
inc
aas
dec
sub
out
push
lods
outsl
jg
inc
ret
ljmp
sub
out
popa
mov
sub
mov
loop
movsb
sbb
aam
ficoml
out
popa
sub
xor
leave
cs
stos
sub
test
loope
in
inc
dec
cmc
push
movsl
inc
out
fwait
mov
sahf
sub
mov
movb
addr16
xchg
call
lods
repnz
jns
mov
sub
mov
leave
andb
loop
nop
jle
loopne
leave
mov
imul
into
dec
subl
mov
int
in
test
jno
test
addl
mov
cmpsb
push
xchg
enter
stos
jo
inc
out
jne
cli
iret
jb
push
insl
push
dec
lods
inc
xchg
mov
mov
xchg
outsb
cmp
aas
inc
std
scas
in
dec
push
jmp
in
push
outsb
lret
popa
test
xor
pop
adc
jmp
jmp
mov
and
add
mov
jno
and
cld
ret
push
psraw
aas
push
lahf
mov
cs
aam
sbb
and
jns
push
mov
dec
xor
mov
adc
sbb
insl
push
sub
out
xchg
pusha
push
push
mov
imul
sbb
mov
mov
outsl
inc
adc
jns
dec
dec
and
xor
dec
ret
out
arpl
outsl
ljmp
lock
add
fidivrs
or
push
mov
outsb
je
add
subl
jecxz
hlt
mov
repnz
lahf
sub
loop
xor
out
ljmp
push
dec
enter
dec
adc
xchg
mov
test
sti
push
mov
dec
ret
imul
or
adc
jne
cmp
xchg
push
jbe
inc
jle
iret
ret
cmpsb
and
inc
cmp
mov
loope
mov
in
test
sub
iret
lods
adc
imul
mov
mov
cli
jmp
mov
insb
xchg
loope
iret
outsl
test
ret
aaa
insl
jb
or
mov
pop
dec
in
movsl
and
icebp
push
clc
inc
mov
loope
mov
mull
stos
sub
mov
and
ljmp
cli
popf
call
cmp
xchg
dec
cmp
inc
arpl
insb
jg
mov
xchg
fcmove
push
inc
dec
inc
inc
out
in
stos
inc
dec
scas
add
int
xchg
push
scas
cltd
mov
loope
xchg
mov
mov
xor
arpl
pop
mov
jb
mov
cmpl
int
sub
inc
dec
lods
sub
pop
lea
test
or
shll
push
jge
xlat
scas
ds
int
test
push
lret
mov
test
mov
push
std
mov
aaa
inc
jle
jbe
loopew
pop
mov
lret
inc
iret
dec
inc
xchg
mov
lea
gs
insl
jno
out
lahf
jns
mov
insl
sbb
fwait
mov
jle
subl
test
orl
sub
inc
aam
cmpsl
ds
push
pop
mov
ds
std
outsb
inc
test
loopne
icebp
ljmp
loope
test
jmp
call
jns
idivb
xor
test
fldenv
adc
callw
xor
dec
lret
jno
mov
lahf
addr16
popa
out
dec
insl
fists
or
fwait
into
lods
ret
sub
mov
clc
cmpb
push
das
dec
mov
inc
bound
int
lret
and
inc
mov
mov
daa
mulb
xchg
mov
push
add
es
adc
add
or
jecxz
xor
mov
mov
nop
out
lock
dec
lods
sub
mov
into
jbe
jb
push
mov
jo
test
out
js
je
jmp
adc
fsts
add
xor
int
mov
cmp
and
cmpl
sbb
dec
pushf
add
fildll
jmp
out
jns
pop
inc
sbb
scas
inc
into
bound
lock
addr16
stos
lods
xor
xor
mulb
loope
cs
imul
dec
in
out
popl
lods
popa
lea
cmp
loope
pop
movsb
imul
popa
jne
mov
iret
loop
test
movsb
mov
stos
vshufps
fwait
and
leave
adc
imul
and
rcrb
iret
dec
mov
jecxz
inc
cmpsl
lock
loope
lret
leave
mov
sti
lret
mov
mov
jo
sub
mov
pop
fwait
sub
dec
stos
sub
imul
out
adc
lods
jnp
sub
inc
cmp
rorb
jb
sub
cmpsl
nop
out
std
push
popa
dec
jmp
insl
cmpsl
pop
dec
bound
imul
lret
pop
or
mov
and
stos
fldcw
add
mov
iret
jo,pn
nop
sub
mov
push
ljmp
push
add
push
sub
xor
jno
mov
pushf
sti
leave
ljmp
xchg
jo
rorl
stc
jb
mov
sbb
sub
mov
std
mov
aaa
into
cmpsl
dec
push
in
outsl
mov
popa
dec
dec
ljmp
gs
stc
jmp
or
pop
mov
or
inc
je
test
cmp
adc
sub
popf
bound
int3
scas
pop
fistps
lods
jbe
adc
iret
stc
xlat
shlb
cs
adc
imul
or
adc
je
lret
inc
test
xchg
mov
mov
iret
and
out
loope
inc
divl
outsb
jl
or
sub
jno
stc
scas
clc
outsb
pop
jo
das
insl
xor
mov
in
sbb
and
xchg
dec
into
xchg
mov
jecxz
or
ret
adc
fwait
ja
outsb
scas
ret
dec
jle
mov
dec
adc
dec
ljmp
mov
and
lds
push
sbb
sub
loop
and
cmc
jo
popa
test
push
insb
cmp
daa
ljmp
hlt
sub
mov
arpl
or
mulb
insl
aad
jno
clc
daa
add
lods
lret
jmp
and
inc
nop
mov
cmovle
inc
imul
int3
das
sti
iret
jno
sbb
push
cli
dec
fldenv
mov
mov
dec
imul
cwtl
xchg
or
inc
jns
lods
mov
lds
cli
jmp
push
adc
mov
mov
sarl
lock
xchg
arpl
shlb
in
hlt
jmp
or
xor
popf
jnp
popa
leave
in
dec
vpmacssdd
ret
mov
mov
xchg
insb
lods
lods
sub
outsb
lea
mov
rorl
out
ret
or
mov
fmulp
stos
fs
inc
ret
lret
or
push
mov
outsb
jbe
add
mov
imul
fmulp
leave
ret
mov
or
orl
mov
arpl
and
inc
stos
inc
movsb
dec
mov
mov
and
ss
stc
jne
pop
dec
sar
and
jecxz
neg
out
mov
sub
clc
mov
iret
lods
cmc
iret
ret
pop
std
nop
jle
cmp
fldcw
repz
loopne
inc
outsl
cwtl
pop
xor
push
scas
jnp
mov
movsl
mov
cs
or
call
clc
and
arpl
sub
insl
popl
lret
aas
fnsave
ljmp
ret
nop
addl
aam
fdiv
pop
je
out
inc
cs
ds
pusha
sub
ret
mov
mov
dec
sbb
repnz
insb
stos
movsb
mov
jbe
cs
mov
sub
ljmp
jmp
stos
mov
pop
sbb
jb
into
add
xchg
jnp
outsb
decb
and
and
mov
or
push
xchg
scas
mov
inc
call
popa
fwait
arpl
out
inc
mov
in
push
or
jl
leave
ret
add
or
lret
stos
and
jle
sbb
movzwl
insl
pop
xchg
dec
jno
xchg
cmp
in
sti
dec
or
out
int
lds
fsubl
shrl
lods
fisubrl
stos
pop
dec
lods
nop
or
cmp
push
mov
xor
cmpxchg
jge
js
in
iret
test
fcoml
ljmp
sarl
mov
leave
mov
sub
jmp
inc
popa
jecxz
or
loop
test
imul
or
cs
pop
std
fsubs
mov
sub
xchg
dec
sub
lahf
and
sbb
push
outsl
mov
fnstenv
sub
cmp
stos
mov
and
mov
orb
ficompl
inc
cld
adc
jge
inc
jmp
out
arpl
sub
jae
orl
aam
mov
repz
push
rcrb
xor
pop
out
mov
test
loop
inc
clc
out
pusha
inc
pop
fisubrs
addl
adc
into
dec
loope
sahf
jecxz
in
lods
cs
mov
sti
xchg
leave
cmp
out
cwtl
jp
cmp
xchg
adc
outsb
or
jbe
push
add
dec
sub
sub
out
mov
mov
adc
push
mov
inc
bound
add
push
mov
lret
out
sbb
outsl
ret
iret
setl
pop
and
add
jecxz
push
and
js
or
push
jne
jne
pop
loope
jp
fldt
je
inc
sub
xchg
mov
test
das
daa
cs
sbb
and
lahf
push
andl
into
sub
jle
cmp
dec
or
hlt
cmovb
movsb
fdiv
sub
inc
jo
lods
nop
jno
sbb
stos
add
sub
or
and
mov
nop
lahf
xchg
jp
nop
xchg
insb
stos
push
pop
jecxz
insb
movsb
dec
ret
and
push
cmp
lds
sti
pop
add
repz
jg
cmpsb
or
popa
setg
inc
cltd
xchg
fistl
mov
mov
push
pop
inc
shll
or
fsubr
mov
push
and
adc
cmp
jno
pop
push
or
bound
pushf
jne
cltd
bound
dec
in
das
movsl
cmovae
sub
push
lret
ret
loope
jle
movsb
scas
lods
lahf
scas
orl
lods
nop
dec
dec
popf
inc
cltd
or
out
dec
jno
cmc
ja
das
rcll
js
cld
test
cmpl
out
outsb
mov
inc
and
mov
xor
sarl
mov
sahf
mov
mov
daa
inc
seta
jo
mov
ds
arpl
xchg
imul
dec
loope
in
cmp
int
das
scas
outsb
mov
addl
adcl
into
adc
jb
sbb
mov
mov
outsl
or
inc
movnti
stos
sub
mov
out
jecxz
das
xor
daa
dec
jne
into
dec
cmp
jnp
imul
push
mov
int
mov
scas
mov
lods
int3
add
ret
in
iret
rorb
mov
loopne
clc
push
rorl
push
test
mov
dec
loope
push
leave
add
ret
insl
dec
lds
daa
and
lods
bound
xchg
sbb
int
fs
mov
pop
and
add
jbe
mov
clc
add
and
sbb
mov
movq
aaa
push
inc
insl
test
out
es
out
mov
dec
or
or
cs
ljmp
or
out
adc
dec
lods
mov
js
test
fstpt
push
outsl
mov
lret
shrb
ret
jecxz
scas
test
data16
loope
leave
inc
inc
sbb
push
mov
xor
inc
dec
lea
jecxz
mov
int
adc
push
das
mov
fidivl
arpl
mov
mov
rorl
mov
arpl
in
xchg
cwtl
sub
lret
lock
out
in
and
mov
sub
sub
inc
iret
in
jge
cmpsb
sub
cs
stos
xchg
dec
stos
mov
pop
mov
stos
outsb
or
xchg
orl
xchg
imul
bound
or
out
int
daa
lods
mov
test
adc
nop
into
sti
flds
popf
and
sbbl
inc
push
lods
jbe
loop
or
xor
and
inc
bound
cmp
inc
push
push
movsl
test
sbb
and
clc
sub
into
mov
jecxz
outsb
jmp
js
push
add
data16
mov
pop
stos
push
bound
mov
jmp
addr16
cmp
mov
lret
and
mov
inc
push
fisttps
xchg
repz
xlat
shl
outsl
sub
int3
out
pushf
jnp
ret
mov
stos
xchg
inc
jge
add
push
ret
jb
add
or
sub
iret
lea
test
int
mov
divb
negb
insl
add
mov
xor
cmp
adcl
mov
dec
push
xchg
mov
inc
repnz
ss
andl
popl
lods
cmpsb
test
cmpsb
ret
xchg
addr16
cmpsb
mov
ror
dec
dec
cld
out
adc
clc
dec
mov
xchg
outsb
or
cs
push
dec
jno
jbe
adc
mov
xchg
jo
push
add
call
scas
or
fldt
sub
mov
nop
mov
lea
outsb
sti
leave
ljmp
subl
jmp
lds
xchg
fisttps
and
mov
popa
sbb
dec
mov
daa
lret
in
xchg
cs
mov
mov
dec
stos
jns
inc
jecxz
mov
movsl
test
repz
fimull
lea
mov
in
test
push
into
add
cs
mov
ret
enter
sbbl
sub
mov
inc
out
mov
gs
sti
or
insl
out
fsubrl
inc
and
mov
out
loopne
scas
sbb
sti
mov
ljmp
pop
addr16
stc
dec
scas
or
add
in
xlat
addr16
cmp
jbe
jne
jl
inc
out
mov
jb
dec
loope
mov
insl
mov
es
mov
push
call
fwait
and
push
subl
cwtl
ret
add
outsl
mov
outsb
popa
jbe
jb
jb
or
sbb
or
mov
mov
iret
or
mov
dec
int
scas
clc
cmp
arpl
jmp
data16
arpl
pop
nop
fisttpl
lea
mov
cwtl
loope
fwait
scas
push
dec
mov
dec
dec
mov
jl
lods
into
inc
push
iret
scas
lea
lods
ljmp
and
inc
and
bound
insb
mov
in
add
into
sub
shl
fimuls
fwait
push
arpl
ljmp
jecxz
mov
rclb
leave
cmpsl
out
sbb
sub
sub
lds
adc
jmp
cmp
out
sub
lret
lods
mov
jp
jbe
insl
iret
mov
lods
lea
lahf
mov
in
and
mov
dec
push
sbb
sub
repnz
daa
js
andl
mov
popa
dec
push
pop
push
and
clc
cmp
lock
push
mov
sub
inc
ret
into
js
ljmp
xor
je
out
and
mov
loopne
push
lea
cmp
push
subl
bound
jb
movsb
jmp
out
or
mov
in
dec
fucomip
mov
pop
xchg
lret
dec
inc
lret
or
insb
mov
iret
push
mov
mov
in
cs
xor
in
jg
sarb
jecxz
mov
push
movsl
scas
int
movsl
inc
imul
cmp
rorl
sub
pop
pop
std
sub
dec
clc
out
cmpsb
insl
xchg
out
iret
mov
dec
and
mov
sub
jb
add
out
es
ffreep
cvtpi2ps
addr16
insl
lods
or
jmp
aad
cmpsb
and
jp
cld
adc
mov
mov
icebp
lods
ret
arpl
inc
and
test
out
outsl
arpl
jp
jbe
inc
insl
lods
jae
dec
lea
repnz
call
testl
in
pop
jle
das
int3
test
in
mov
add
iret
push
fnstsw
leave
mov
sub
xor
add
jl
mov
push
subl
dec
mov
cli
shll
into
jb
jbe
jbe
cmp
shrd
jg
dec
mov
out
pop
sbb
xor
sub
cs
mov
jnp
mov
push
jo
and
inc
xchg
sbb
dec
mov
dec
scas
dec
out
int
sub
loope
lds
xor
pop
das
sub
bound
ret
inc
sub
nop
incl
lods
mov
js
add
scas
and
mov
lret
cs
lds
cltd
out
aas
popa
push
mov
imul
es
out
xor
mov
and
dec
int3
adc
notl
sub
test
daa
inc
jmp
hlt
xchg
push
int3
mov
lret
lea
dec
dec
pusha
cs
and
inc
push
cmc
scas
clc
movsb
push
push
xchg
dec
lock
and
aaa
test
sub
imul
dec
dec
out
or
das
pop
outsb
outsl
xlat
icebp
inc
test
cltd
mov
lea
sbb
pop
aaa
ret
loope
adc
es
out
jnp
dec
test
xchg
dec
sbb
lea
adc
icebp
sub
cmp
mov
sti
nop
test
arpl
popf
cmp
cld
push
cs
in
push
insl
insl
insl
jb
das
aaa
ljmp
cmp
adc
jle
into
jmp
push
cmp
fimuls
lea
dec
test
insl
clc
mov
lods
insl
stc
insl
in
outsb
and
fwait
ret
scas
sbb
push
bound
pop
lcall
leave
mov
mov
xchg
inc
int
mov
add
inc
mov
mov
stos
lods
mov
xchg
or
push
repz
dec
lret
push
and
and
and
dec
addl
in
arpl
arpl
es
int
sahf
lret
outsb
and
out
add
cmp
test
mov
orl
push
stos
stc
xor
popa
and
scas
pop
jl
sub
and
inc
dec
lret
test
mov
or
adc
jnp
adcl
pop
out
daa
outsl
mov
imul
fildll
mov
lahf
mov
loope
lods
cmp
insw
out
dec
popa
jbe
jbe
jne
out
shrl
dec
scas
rorb
mov
or
cmp
out
cmp
lds
shl
cs
mov
aas
popa
jno
inc
mov
lea
sub
jno
jo
leave
lods
int
std
add
inc
jmp
lods
cmpsl
test
mov
dec
lcall
lods
out
popa
pop
leave
jne
in
jmp
and
jb
jo
mov
pop
adc
cmp
jl
dec
and
xchg
int3
pop
lahf
inc
sub
lea
bound
pop
fwait
sub
int
or
in
mov
jns
lcall
loopne
jne
arpl
push
inc
mov
clc
mov
movsl
jmp
bound
mov
addr16
movsl
iret
mov
jp
mov
xor
scas
sub
inc
outsb
mov
into
mov
or
loopne
test
test
mov
fcoml
pop
ret
sarl
addr16
jns
lea
in
adc
mov
inc
cmp
sbb
cmp
stos
jbe
lret
jge
and
nop
sub
nop
cmp
cs
sub
lret
mov
or
mov
mov
cs
and
mov
sbb
jecxz
sahf
stos
adcl
jno
lock
mov
xor
out
push
add
xchg
inc
btr
or
std
jge
fs
inc
mov
cmp
test
ds
and
adc
out
in
dec
adc
das
inc
out
push
pop
mov
rorb
je
add
insl
jb
inc
outsb
sub
cs
out
mov
inc
dec
sti
clc
in
scas
outsb
ljmp
ret
rol
orb
arpl
push
movb
push
ljmp
jo
push
cltd
lcall
mov
jl
dec
popl
xsave
jbe
xchg
cli
pop
push
sub
insl
mov
loop
hlt
sbbb
dec
bound
je
lods
jmp
insl
imul
ljmp
inc
adcl
minps
inc
dec
adc
push
scas
out
add
in
test
jecxz
or
mov
cmpl
lods
scas
cmp
mov
aad
lods
out
adc
bound
dec
inc
lahf
cmpl
ljmp
lret
mov
clc
nop
lret
sub
and
dec
dec
out
outsl
jp
mov
scas
leave
lea
jo
sub
cmp
dec
add
jnp
sub
cs
in
insl
fildll
sarl
test
jno
pop
mov
shrl
loope
pop
pop
out
push
clc
into
test
jg
outsb
daa
or
in
cmp
inc
push
imul
sub
fsubr
and
stos
push
bound
xchg
jne
dec
mov
std
mov
cmp
fldcw
add
pop
dec
mov
sub
mov
test
nop
mov
cmpsl
scas
mov
mov
push
mov
add
scas
bound
gs
pop
xchg
inc
mov
ret
cmp
cmp
bound
pushf
dec
mov
repz
outsb
add
mov
sti
rol
mov
sub
inc
add
mov
dec
and
aaa
scas
add
lock
adc
mov
sarl
mov
xchg
cwtl
test
dec
fistpll
add
iret
mov
mov
iret
sub
or
xor
mov
lsl
add
inc
cld
jecxz
scas
bound
in
sub
nop
out
mov
outsb
dec
ja
clc
cmp
clc
lods
into
scas
inc
insb
pop
inc
mov
daa
in
scas
gs
popl
stc
lods
nop
outsb
push
arpl
repz
pop
push
fstps
aas
movb
leave
inc
outsb
scas
sahf
jb
xchg
xchg
ss
iret
test
xchg
mov
repnz
insb
add
test
lea
mov
xchg
insl
dec
mov
cmp
push
mov
jbe
fcmovb
push
dec
fisubs
stos
stos
dec
leave
int
jle
shrb
xchg
aas
ljmp
mov
out
test
add
sbb
xlat
ja
lods
jmp
mov
adcl
add
arpl
sub
outsb
inc
mov
adc
std
xchg
and
mov
add
mov
jp
and
or
dec
sub
call
lods
or
loope
xchg
mov
gs
in
jmp
inc
sahf
imul
sbb
mov
add
std
dec
addr16
sbb
jb
sbb
push
push
inc
jmp
fdivrp
inc
stos
pop
scas
inc
push
popl
jo
mov
inc
pop
or
mov
ret
dec
test
hlt
out
xchg
lea
cmp
mov
dec
ja
inc
mov
adc
adc
sbb
mov
mov
push
data16
shll
lods
dec
iret
fs
dec
outsb
cs
mov
and
push
cmp
test
lods
sub
or
mov
pusha
scas
movsb
or
mov
mov
pusha
or
sub
popa
stos
mov
lret
and
ljmp
lret
ds
loope
mov
sub
dec
sub
lock
insl
xor
lcall
lret
lds
jns
dec
arpl
in
mov
imul
imul
push
lock
adc
mov
popf
bound
dec
addr16
lods
arpl
and
dec
push
mov
add
pop
stos
inc
in
jmp
outsb
hlt
icebp
arpl
test
ret
imul
clc
insb
inc
add
leave
out
scas
stos
shll
lods
jno
out
leave
and
jmp
mov
mov
inc
loope,pn
jecxz
xor
cmp
shll
xorb
pop
jl
lods
mov
fisubl
add
sub
xchg
mov
inc
les
mov
mov
cltd
sub
sub
std
mov
loope
push
loope
out
loopne
mulb
pop
or
fistpl
outsb
mov
or
xor
mov
sub
test
or
pop
inc
loopne
mov
shlb
sbb
out
into
lret
adc
sbb
out
stos
retw
dec
adc
mov
pop
xlat
adc
iret
int3
jno
dec
xchg
add
ja
outsb
nop
gs
add
imul
popa
mov
xsave
into
lds
sbb
mov
dec
sub
mov
sahf
stos
sub
outsb
sub
test
or
es
test
outsl
into
ja
js
roll
movb
dec
mov
repz
jmp
repz
adc
jmp
xor
sub
push
sub
push
dec
xchg
jecxz
clc
leave
jne
and
insl
and
ret
mov
mov
inc
jmp
mov
out
lea
test
sbb
in
push
imul
push
or
inc
bound
or
jo
rorl
mov
or
push
adc
enter
dec
mov
ffreep
xor
adc
adc
jmp
mov
aaa
clc
push
pop
sahf
leave
pop
xchg
shlb
adc
addr16
insb
cmp
cmp
test
test
pushf
mov
or
das
mov
addr16
aad
mov
and
outsb
imul
push
dec
bound
leave
push
sbb
jmp
dec
outsb
mov
fsubrp
pop
loop
les
mov
lret
insl
inc
mov
add
xchg
pop
clc
xchg
sub
gs
in
jecxz
or
repz
jne
cmp
or
scas
arpl
iret
pop
mov
or
inc
pop
lock
and
add
xchg
or
xor
cmpsl
jmp
inc
ret
xor
sub
roll
imul
xor
xor
aaa
or
jmp
loope
cmpsl
cmpl
cmp
mov
xchg
imul
add
ret
add
adc
fcmovnb
insl
sbb
bound
popa
repnz
jns
jecxz
outsl
clc
lock
mov
pop
repnz
lcall
mov
stos
mov
or
jg
int
icebp
mov
and
mov
les
and
arpl
clc
xchg
mov
and
mov
lcall
ja
and
mov
aaa
or
clc
mov
stos
clc
ja
xorb
std
clc
ja
int
lcall
fisttpll
clc
cs
inc
arpl
fwait
or
andb
outsb
sub
subl
adc
sub
and
add
in
add
mov
ret
rclb
sbb
into
sub
stos
test
xor
out
rorl
js
test
dec
add
lret
loop
sahf
stos
ja
pop
insl
cmc
into
insl
in
fisubrs
jbe
stc
hlt
pop
jmp
sub
lret
add
inc
lea
dec
pop
fdivr
pop
xchg
push
mov
mov
mov
fidivrs
ret
rcll
and
clc
lods
inc
bound
outsb
loopne
lea
add
sub
push
and
into
mov
sub
stc
ret
das
insb
add
push
insb
pusha
push
pop
in
pop
lods
out
js
ret
loope
sub
bound
outsb
mull
mov
push
outsb
or
leave
push
inc
sub
inc
arpl
lea
lret
ljmp
jmp
jnp
outsb
inc
shll
les
xor
dec
stos
ret
add
mov
int
out
xchg
mov
lods
addl
rcll
ret
xchg
jmp
stos
outsb
add
mov
lret
std
das
or
and
popa
mov
fstpt
or
and
add
jl
and
out
lods
lods
jne
movsl
popl
add
ret
inc
cmp
and
or
lret
aam
dec
jg
es
stos
out
push
and
fwait
test
loope
sbb
jmp
inc
sti
push
mov
jmp
jle
add
ret
movsb
into
mov
mov
es
scas
sahf
outsl
adc
add
insb
mov
lods
dec
scas
iret
insb
loope,pn
test
popl
jecxz
test
add
fsubrp
dec
in
push
xchg
mov
sbb
dec
dec
arpl
test
out
mov
arpl
mov
jp
push
mov
shrl
lods
ficompl
jecxz
repz
and
insb
and
inc
outsl
inc
push
into
or
and
test
cmp
test
mov
int
outsb
rcll
mov
sub
int
lods
in
inc
push
xchg
mov
lahf
pop
push
ret
les
subl
dec
scas
jecxz
or
sub
xchg
xor
orl
out
and
imul
stos
test
dec
outsl
push
in
sub
cmp
lcall
ret
ljmp
lods
leave
daa
sub
xchg
jp
cmp
lods
inc
inc
mov
dec
jns
dec
sub
movsl
outsb
cld
rorl
popa
or
outsl
out
stos
je
lods
sub
shlb
das
or
dec
call
jmp
sub
dec
mov
ljmp
jnp
movsb
dec
push
imul
outsb
pop
lods
stc
ror
mov
loope
dec
lea
popa
add
push
mov
mov
ss
insl
movsl
das
mov
push
ljmp
lret
lret
xchg
stos
dec
dec
sbb
push
sbb
or
jne
jp
out
ret
lahf
movb
dec
inc
dec
sti
or
movsl
pop
xchg
xchg
xor
or
ret
pcmpgtw
mov
ljmp
ror
cli
lret
xchg
add
or
das
rol
jbe
jne
ljmp
ljmp
push
scas
orl
xchg
mov
mov
or
in
push
inc
mov
push
popa
stos
outsb
mov
xchg
dec
pop
clc
cmpsb
add
pop
jge
sub
addr16
or
push
jbe
jbe
cmp
arpl
imul
mov
jmp
dec
mov
dec
push
in
jle
cld
jp
push
je
test
test
or
cli
outsb
sub
js
push
nop
mov
leave
iret
lock
inc
lret
orl
sahf
jno
cmp
jb
pop
jae
bound
insl
movsb
js
lea
push
dec
mov
adc
mov
sub
outsl
iret
clc
push
outsb
xor
hlt
es
ret
pop
rorl
pop
insl
xchg
and
insl
push
out
movsb
gs
repz
mov
inc
iret
jl
outsl
or
jg
pop
mov
sbb
lahf
inc
dec
push
mov
sti
nop
dec
imul
clc
fwait
xchg
lea
mov
les
sbb
fucomi
mov
test
cs
int
into
and
ds
in
repz
ljmp
das
sgdtl
loope
push
jge
repnz
in
push
add
notb
mov
stos
insl
lods
add
cmp
fs
jecxz
add
vmwrite
mov
mov
cli
insb
shr
bound
sbb
iret
jne
int
add
adc
mov
jbe
sar
addl
sbb
out
std
jne
lret
test
xchg
aam
jge
popa
pushf
push
ja
lods
xor
jb
imul
dec
dec
shll
movsl
lret
icebp
fstpl
xchg
in
xor
loop
xor
iret
and
inc
mov
inc
dec
push
lret
sti
and
mov
mov
ret
inc
dec
cmp
lods
aad
into
push
add
movsw
xchg
out
mov
jb
int
and
pop
clc
sti
jle
dec
fwait
pop
and
dec
mov
fnstcw
dec
mov
ljmp
test
mov
imul
mov
adc
in
cmp
jne
and
out
jae
sbb
sub
in
out
clc
jge
jne
jne
add
orl
cs
insl
lea
cmpsb
inc
lret
stc
out
loope
in
jg
stos
mov
das
pop
scas
testl
add
out
mov
add
lea
scas
popa
scas
mov
or
lods
and
jnp
jmp
int
lahf
xchg
or
inc
das
movsl
shll
into
movl
lcall
mov
js
leave
clc
outsl
imul
add
addl
mov
lret
out
int3
ret
loope
ds
lcall
loope
push
add
inc
stos
push
int
ret
inc
ret
hlt
jl
iret
ret
scas
arpl
loop
dec
mov
imul
into
popa
add
popa
inc
add
cmp
adcb
sub
loope
stc
mov
xchg
mov
aad
in
leave
jmp
enter
and
repnz
pop
lahf
fldt
jge
icebp
inc
mov
dec
movsl
mov
cmp
fidivrl
sub
inc
and
mov
add
adc
jnp
arpl
inc
lea
and
out
clc
mov
les
cs
roll
je
jmp
jmp
movb
jl
dec
leave
add
outsb
popa
dec
jnp
iret
andl
into
pusha
cmp
mov
mov
sbb
lods
cmpb
dec
js
ret
cmp
add
lds
adc
inc
lods
jecxz
xchg
ljmp
push
sub
mov
insl
lea
xor
ljmp
lret
lahf
mov
lds
inc
jge
and
cmp
jo
leave
or
in
xchg
lods
daa
lds
jno
jbe
mov
lret
lock
mov
xchg
std
lods
pushf
mov
mov
mov
lea
into
loope
dec
sub
lds
mov
ret
jo
or
daa
arpl
sub
cmp
dec
in
cmp
lods
mov
mov
jns
jbe
adc
ljmp
dec
pop
mov
or
shr
lret
adc
out
jno
and
add
xchg
ljmp
jp
scas
daa
dec
test
dec
jmp
call
clc
mov
sub
or
pop
outsl
or
dec
bound
dec
loope
add
push
leave
or
pop
inc
xchg
cmp
scas
ja
repnz
fmuls
nop
sub
shl
movsb
inc
inc
mov
inc
outsb
mov
popf
daa
push
popa
xor
mov
lahf
nop
or
into
stos
test
jecxz
inc
jbe
arpl
outsb
and
mov
rcrl
push
clc
aas
jecxz
sub
mov
push
minps
push
xorl
pop
pop
mov
add
push
mov
lret
mov
insb
jge
pop
mov
sub
mov
in
sub
test
push
jbe
push
inc
mov
push
orl
and
push
add
lods
dec
movsl
mov
lea
jb
xchg
test
mov
dec
rorl
aas
ja
sbb
cltd
test
popa
cld
pop
fwait
rorl
add
push
dec
fwait
mov
dec
scas
dec
shll
sbb
cs
mov
shl
mov
push
mov
pop
cmpsb
pushf
push
inc
sub
inc
stos
inc
iret
in
or
out
dec
jl
arpl
lods
push
das
xor
xchg
mov
mov
inc
cmp
jmp
or
mov
mov
mov
lock
mov
inc
stos
stos
push
push
shll
sbb
mov
into
test
sbb
scas
test
push
or
mov
pop
outsb
out
inc
xor
bound
cmp
and
mov
sbb
cs
popl
in
dec
scas
subl
shll
jmp
mov
push
mov
jp
lret
shl
push
scas
or
into
sbb
pusha
clc
adc
sbb
in
popa
add
xchg
mov
add
minps
out
mov
mov
insb
jge
in
loope
inc
cmp
adc
lods
outsb
adc
push
xchg
or
mov
stos
pushf
loop
and
xor
lahf
ret
dec
in
and
or
jg
loope
sbb
dec
sub
adc
pop
adc
sbb
add
je
imul
sub
repnz
mov
clc
in
xor
xor
es
xchg
xor
scas
in
js
roll
ljmp
ja
leave
lret
dec
dec
cmp
out
push
sbb
mov
ret
leave
pop
cld
push
sub
dec
and
pop
jl
push
iret
dec
in
mov
sub
mov
xchg
testb
addr16
sub
mov
mov
testl
in
loope
or
stos
jecxz
imul
insl
or
movsl
test
call
scas
dec
or
repnz
mov
cmp
out
in
dec
loop
mov
outsl
mov
stos
lock
das
adc
push
or
scas
iret
test
mov
mov
outsl
jo
jmp
fcmovne
or
mov
push
mov
push
cmp
out
cmp
repnz
int3
xchg
jbe
outsl
mov
xlat
das
out
dec
inc
subl
fwait
popa
lret
leave
mov
cmpsl
mov
and
ds
adc
jns
outsb
sub
mov
js
mov
mov
lods
dec
push
cld
xchg
sbbl
push
jle
mov
pop
mov
sub
sub
fistpl
jp
inc
push
push
call
or
or
sub
out
mov
aad
or
aam
daa
push
or
lds
test
and
imul
int3
dec
mov
sub
add
fwait
clc
nop
test
movsl
rorl
dec
mov
ljmp
push
sub
mov
jmp
hlt
push
scas
addr16
das
ret
xor
outsb
mov
les
add
inc
stos
out
xchg
repnz
or
lcall
inc
mov
mov
inc
pop
mov
mov
mov
dec
sub
adc
push
mov
into
xchg
sti
fwait
inc
jmp
int
inc
xor
clc
insb
movsl
nop
ret
movsb
imul
push
divb
nop
jg
daa
inc
dec
aaa
inc
leave
and
btr
ret
or
mov
stos
push
or
mov
xchg
mov
pop
jns
repz
mov
pop
stc
insl
sbb
inc
push
loope
cld
mov
cmp
push
bound
mov
mov
mov
pcmpeqd
jmp
push
scas
lods
leave
pop
jl
outsb
mov
mov
cwtl
lea
or
jae
fs
imul
into
jbe,pn
jbe
mov
push
ficoms
dec
sub
out
push
and
test
nop
outsb
cmp
pop
stos
fcompl
inc
arpl
lods
subb
adc
jecxz
jmp
push
repnz
mov
inc
mov
in
jle
dec
fdivl
orl
and
xorl
insl
iret
dec
mov
xchg
outsl
scas
jl
out
push
int
out
insl
lret
out
jnp
lret
ljmp
mov
jns
and
dec
xchg
pop
fbstp
or
pushl
popa
dec
mov
sbb
gs
lods
ret
sarl
inc
clc
push
nop
sub
lea
test
std
xchg
pushf
bound
jmp
mov
out
daa
dec
push
movb
push
loop
outsl
or
das
shrl
push
lret
sub
leave
sub
subl
cmp
sub
jns
or
fidivrl
insl
rorl
idiv
mov
pusha
xor
out
xchg
dec
and
pop
cmp
jmp
xchg
loop
push
jb
arpl
sub
mov
mov
push
ret
jmp
test
addr16
jg
loope
push
dec
in
lret
and
int
push
bound
aas
and
and
push
or
jge
mov
filds
and
lods
xchg
or
adc
xor
sub
dec
pop
mov
fwait
stos
outsl
add
mov
jmp
test
or
fs
inc
nop
sub
insl
int
push
dec
lea
dec
or
bound
insb
arpl
and
mov
ljmp
jb
mov
push
mov
jae
int3
xlat
add
rep
iret
int
cwtl
or
jno
out
scas
gs
fldcw
add
dec
outsl
inc
leave
or
int3
lds
inc
mov
lds
sub
iret
pushf
mov
add
push
adc
mov
mul
xchg
sahf
xchg
das
mov
mov
dec
mov
mov
and
bound
dec
jno
cs
hlt
mov
inc
imul
cs
movsl
dec
not
or
mov
adc
mov
mov
insl
xlat
mov
xchg
mov
clc
add
cs
out
scas
dec
aad
bound
dec
scas
push
iret
inc
push
in
mov
add
mov
dec
cmovb
arpl
imul
and
pop
bound
mov
push
dec
inc
iret
popl
xchg
add
fwait
loope
nop
lret
inc
fcomps
fisttpl
inc
inc
sbb
jne
imul
imulb
daa
out
cmp
test
and
lods
push
xchg
xor
lea
arpl
mov
mov
js
dec
test
testl
xchg
add
mov
jo
outsl
push
push
mov
mov
test
sbb
sub
sub
and
push
jbe
xchg
insl
jecxz
sbb
or
ret
sub
addr16
push
mov
addr16
sbb
outsb
loope
loop
push
or
addl
and
lods
or
jnp
dec
in
scas
repnz
or
sbb
iret
push
jno
ljmp
ljmp
stos
mov
test
xor
jle
outsl
dec
addr16
lea
push
clc
sub
mov
adc
and
mov
scas
cmp
outsb
out
push
inc
dec
das
arpl
nop
jle
add
or
subl
int
jns
scas
mov
mov
nop
inc
subl
sbb
aaa
sbb
das
sub
cli
scas
in
jo
out
shrb
outsb
out
or
addr16
test
jns
out
outsl
outsb
mov
sub
dec
mov
das
add
mov
dec
out
stos
mov
shlb
xor
call
lock
and
pop
leave
mov
mov
stos
insl
pop
lea
xor
xor
mov
xor
clc
adc
lods
inc
xor
clc
stos
call
clc
lods
or
scas
lods
xchg
xor
xor
lods
clc
lods
mov
xor
call
mov
xor
clc
cwtl
lods
adc
xor
clc
mov
aaa
clc
lods
dec
arpl
push
clc
mov
mov
adc
out
clc
lods
xor
mov
clc
mov
clc
adc
clc
test
xor
mov
clc
mov
mov
add
stc
and
cmp
add
sub
cmp
mov
add
cmp
subb
fwait
into
popa
ret
lret
int3
scas
xor
imul
sub
xchg
pop
stos
int3
js
scas
stos
sbb
sti
test
andl
jmp
adcb
or
mov
pop
scas
sarl
test
add
adc
rcrb
pop
pop
mov
mov
into
cmp
mov
sub
lock
into
repz
jl
sub
mov
jns
inc
and
push
orl
dec
jnp
in
stc
test
nop
adc
jle
scas
ds
imul
add
js
sub
outsl
popa
push
xor
pop
rcll
mov
arpl
call
or
jnp
add
add
stc
leave
addr16
in
jmp
stos
in
mov
dec
sub
insl
and
mov
pop
addl
shrl
fdivrs
add
orl
faddl
xor
test
sub
inc
mov
out
dec
lods
push
sub
mov
sar
scas
push
jg
psubq
dec
test
popa
arpl
jmp
stos
out
pushf
movsl
iret
fildl
ljmp
inc
in
arpl
lret
mul
xor
enter
mov
mov
sbb
std
mov
mov
or
inc
xchg
pop
cmp
push
add
mov
in
shrl
or
sbb
psraw
jmp
dec
andl
insb
jge
mov
subl
mov
add
mov
xor
cmp
nop
movb
imul
leave
scas
cmp
dec
jecxz
or
and
fwait
jmp
outsl
iret
xor
or
mov
inc
mov
inc
jmp
mov
dec
outsb
out
insl
inc
bound
es
scas
mov
outsl
fs
push
out
mov
mov
cmpl
test
inc
inc
dec
leave
or
push
lods
jne
arpl
stc
pop
mov
dec
in
and
ljmp
mov
arpl
sub
imul
inc
mov
nop
imul
je
or
cmp
out
rorl
add
ret
nop
add
outsl
cld
pop
cwtl
sub
push
lods
jge
add
and
cmp
or
add
rclb
mov
into
inc
ljmp
pop
je
ret
int
mov
sbbb
js
scas
lret
out
dec
sub
dec
movl
repnz
imul
mov
xlat
fdivl
lods
out
movsb
scas
mov
nop
in
push
cwtl
jecxz
out
adc
leave
orl
or
into
scas
inc
jbe
popa
imul
add
scas
cmpsl
cltd
cmp
arpl
sub
mov
adc
into
sub
lods
sub
jecxz
loope
jmp
mov
scas
lea
jbe
movsl
push
shll
popl
inc
js
leave
outsb
lret
pop
mov
out
into
add
or
jecxz
or
imul
dec
mov
lds
shll
stos
stos
daa
push
movsb
fidivl
pop
mov
cmpsb
jne
test
roll
sub
mov
inc
lock
mov
lds
push
cmpsb
rcrb
jl
scas
test
dec
jb
stc
sub
mov
andl
dec
insb
inc
leave
imul
dec
mov
addr16
outsb
inc
outsl
ret
in
stos
data16
mov
bound
das
jnp
ljmp
lret
mov
or
jnp
rorl
sub
push
scas
lock
movsl
sbb
sahf
popa
dec
jb
xlat
xchg
cmp
movsl
jge
cwtl
cmp
subl
std
lret
bound
loope
or
mov
pop
or
lods
and
arpl
sub
out
dec
addr16
lods
scas
dec
out
pop
jns
call
sti
in
mov
leave
out
xchg
insl
lods
les
push
test
out
in
inc
popa
das
test
sub
adc
pop
cmp
and
xchg
xchg
sub
jle
out
stos
fiaddl
pop
cmp
mov
jecxz
ret
sub
lds
and
out
popa
scas
push
pusha
xor
push
paddb
cs
movb
lret
jl
ret
pop
xchg
sahf
stos
mov
add
pop
addr16
out
je
jo
movsb
and
rorb
insb
jg
popa
rorl
jo
test
xchg
popa
test
inc
rcrb
or
je
popa
out
or
imul
dec
and
insl
jecxz
std
cmp
pusha
popa
stos
mov
and
adcl
add
sub
test
insl
or
scas
cs
movsl
arpl
sub
loope
sti
fiaddl
cli
mov
imul
jns
push
dec
rorb
and
mov
mov
sub
lock
jne
inc
dec
in
scas
call
popa
aas
or
faddl
in
lea
rcll
add
add
test
roll
das
in
sbbl
dec
lods
sub
in
cltd
adc
or
push
mov
inc
iret
jo
ljmp
inc
push
shr
dec
and
push
inc
mov
into
ljmp
push
inc
insl
sub
inc
ret
pushf
lods
xchg
push
int
sbb
add
pop
out
out
arpl
mov
push
cmpsl
jecxz
nop
cs
or
mov
inc
jb
test
arpl
adc
stos
inc
iret
dec
arpl
jp
insl
sub
movsb
mov
inc
scas
lea
into
jmp
loop
les
lret
mov
cmc
adc
out
lea
jecxz
push
jp
dec
dec
mov
ret
lods
int
and
test
mov
dec
rorl
inc
das
cmp
push
int
es
mov
cs
rorl
insl
dec
icebp
out
andl
daa
inc
push
inc
iret
mov
lcall
jl
dec
bound
daa
outsl
mov
lock
imul
dec
dec
sti
test
dec
ljmp
jmp
adc
xchg
stos
xchg
jge
push
scas
inc
push
out
outsl
sub
push
dec
jp
add
insl
rol
mov
ret
adcl
movsl
mov
test
or
mov
add
push
or
movsl
into
dec
das
push
cmpsb
or
fisubl
sub
cmp
arpl
mov
in
clc
dec
leave
repnz
fwait
out
push
jecxz
fs
ljmp
jb
mov
int
mov
sub
mov
out
sub
inc
loop
inc
jmp
das
outsl
js
ret
and
stos
and
enter
xchg
test
jb
sbb
nop
ja
cwtl
daa
loope
jnp
mov
packuswb
jnp
subl
stos
inc
jmp
js
lret
into
sbb
push
fsubl
cs
scas
push
push
jecxz
loopne
popa
cs
jb
mov
add
andl
aam
popa
iret
scas
add
lahf
arpl
outsl
or
sub
cld
mov
dec
mov
bound
lods
inc
sub
dec
mov
and
test
lret
dec
lods
dec
clc
loopne
xlat
test
mov
sub
in
sub
pop
orb
jecxz
and
pop
pusha
jl
loope
inc
or
scas
pop
loop
inc
insl
test
inc
and
cld
xchg
jge
and
and
lock
push
xor
cmpsb
push
cmp
lods
xchg
out
nop
scas
adc
insl
mov
or
test
mov
push
mov
fsubrs
mov
imul
scas
jno
mov
fsubl
jmp
clc
lods
inc
scas
popa
jg
out
sub
jnp
mov
mov
push
popa
imul
leave
add
push
or
aaa
popa
test
das
pop
mov
out
sub
cmp
jnp
scas
scas
insl
jmp
bound
in
inc
scas
subl
mov
les
jno
dec
and
aas
cmp
lods
sub
pop
loopne
adc
mov
popa
inc
mov
and
xchg
adc
xor
or
aaa
test
push
lock
jecxz
into
sbb
ds
popf
and
xchg
sarl
lea
mov
popa
add
adc
iret
sub
arpl
mov
addl
jmp
pop
shll
mov
fs
int
sub
push
out
dec
shll
into
repnz
iret
out
shl
imul
mov
test
xchg
inc
andl
stc
lods
inc
fwait
cmp
into
lahf
sub
pop
or
je
mov
sbbl
cs
sbb
imul
mov
clc
insl
cmp
jl
inc
sub
mov
les
dec
jge
arpl
lea
repz
loop
and
je
mov
bound
cmpl
and
dec
cs
pop
pop
push
jge
icebp
or
movb
dec
int
lods
sbb
clc
mov
cld
or
outsl
loope
into
lods
xchg
xchg
jnp
popa
outsb
imul
movsl
or
out
incl
mov
hlt
cmp
ret
xchg
daa
jecxz
add
lret
mov
add
scas
clc
orl
jbe,pn
inc
scas
lods
jmp
mov
mov
ss
or
lret
mov
leave
cltd
les
loope
dec
inc
dec
dec
je
mov
xorl
mov
mov
nop
add
jmp
ret
rcrl
pop
mov
fidivs
in
mov
xchg
inc
imul
out
xchg
push
and
push
mov
lea
mov
leave
push
in
stos
test
cmp
push
sbb
push
cmc
dec
inc
mov
xchg
jl
ret
mov
outsl
cmpl
das
test
inc
cmpsb
inc
push
mov
pop
or
mov
test
lret
scas
push
sbb
int3
inc
push
and
dec
std
movsl
ja
jne
and
mov
out
add
rorl
or
jb
mov
jne
jo
popa
jecxz
dec
scas
xchg
mov
lods
js
push
stos
js
lea
cmp
mov
sbb
in
mov
mov
xor
lods
push
mov
gs
pop
push
sbb
or
cli
lods
jb
jbe
insl
das
and
adc
iret
and
cwtl
or
add
sub
negl
cmpsl
outsb
mov
push
push
js
inc
dec
ret
out
dec
popa
imul
orl
dec
iret
mov
xor
mov
sub
addr16
and
out
loope
fs
dec
fdivr
jmp
or
inc
out
push
lock
add
rcll
mov
cmp
in
sbb
push
jb
jne
sbb
and
iret
jnp
insl
mov
add
dec
rorb
stos
fmuls
loope
sbbl
int3
jae
outsb
xlat
andl
sub
jmp
lods
or
add
lods
sbb
scas
addr16
insl
cmp
sbb
sub
jb
fildll
and
cmp
cmp
cmpsl
dec
orl
or
mov
and
xor
lods
push
insl
inc
mov
pop
iret
and
and
fsubl
dec
lret
outsb
arpl
mov
xchg
and
xchg
mov
iret
push
insl
sub
mov
cs
xchg
push
stos
lcall
ret
dec
mov
cmp
mov
ds
push
mov
mov
scas
imul
es
subl
lods
cli
leave
in
lea
sub
dec
sti
insl
dec
lods
and
fisttps
push
xorb
outsb
shlb
shlb
and
sub
and
xor
dec
push
mov
sub
outsl
and
dec
movsl
dec
fwait
sub
mov
push
jns
jl
lea
das
inc
lret
inc
jb
mov
jo
lods
scas
jne
jbe
in
test
mov
or
push
mov
repz
stc
fcmovne
into
imul
mov
mov
test
mov
sbb
adcl
lods
dec
ror
jns
or
add
dec
inc
fimuls
add
sbb
jmp
or
and
mov
jno
insl
rorl
xor
fmull
push
dec
pop
mov
out
mov
stos
jecxz
and
ret
mov
out
mov
jmp
dec
adc
into
cld
mov
or
pop
and
inc
inc
pop
inc
inc
lahf
push
xorl
dec
add
loop
popl
bound
rcrb
pop
and
sub
cs
sub
repnz
sar
and
das
dec
out
leave
xchg
mov
dec
or
xor
jnp
mov
ret
scas
push
lods
out
mov
add
dec
push
popa
jmp
test
inc
pop
in
mov
lea
shr
scas
and
in
xor
scas
in
aaa
and
inc
add
or
arpl
ret
push
lahf
sub
aad
and
out
cs
jge
inc
gs
insl
push
dec
insl
or
jbe
daa
leave
shl
clc
sub
mov
or
mov
mov
inc
lds
sbbl
jo
add
dec
sbb
scas
rorl
xlat
push
xchg
inc
dec
js
ljmp
sub
fnstsw
add
insl
ss
outsl
iret
addr16
int
jne
insl
sub
rcll
inc
imul
loope
loope
xchg
dec
rorl
push
push
sbb
fwait
dec
popa
or
imull
sub
gs
add
inc
out
loope
sahf
jnp
mov
dec
pushf
subl
adc
sbb
and
jb
test
mov
insb
popa
push
arpl
lods
outsb
and
lock
inc
xor
and
sub
int
dec
cmpsb
repz
add
stos
and
shll
stos
cmpsb
dec
jo
rol
cmp
cmp
scas
lods
add
dec
adc
leave
inc
jmp
lods
insb
jnp
int
loop
mov
scas
shll
mov
cs
ficoml
mov
nop
or
jecxz
ret
lods
sbb
push
mov
call
js
ret
jae
test
push
out
ret
leave
insl
sub
dec
push
and
call
lock
mov
jbe
int
dec
repz
pop
or
push
pop
out
mov
cmpl
or
scas
lods
mov
pop
inc
push
lds
mov
int
sub
mov
mov
lret
or
inc
nop
sub
scas
dec
xor
ret
dec
lods
out
out
loope
lods
jne
inc
in
bound
test
movsl
push
inc
mov
in
int
mov
cmp
or
cli
and
outsl
sub
test
mov
movsb
mov
pushf
and
lea
xor
sub
sbb
or
popa
bound
push
dec
in
scas
mov
xchg
or
and
mov
xor
or
mov
insl
ret
jnp
out
add
and
and
test
imul
test
insl
push
and
hlt
scas
xchg
das
sarb
int
fs
jmp
push
iret
jge
pop
mov
popa
stos
stos
lods
mov
inc
faddl
dec
out
or
add
adc
iret
out
push
and
rcll
test
or
nop
aam
lock
dec
or
test
xlat
popa
cmp
into
inc
dec
and
inc
jg
out
sub
cmp
inc
sub
and
push
mov
adc
adc
fldl
xchg
loope
loopne
shr
es
imul
jae
out
shlb
cmp
mov
push
sahf
add
arpl
jb
pop
jge
into
in
ret
loop
push
je
nop
dec
scas
sbb
lods
repnz
stc
pop
imul
inc
cs
and
mov
pop
ret
add
hlt
movsl
out
repnz
jne
jbe
jb
sub
inc
mov
fldt
lret
or
xlat
jmp
xchg
fmulp
or
xchg
imul
sbb
clc
sbb
int
or
dec
add
imul
mov
mov
lret
or
mov
addb
movsb
sti
lock
mov
pop
jge
jmp
sbb
jbe
mov
push
mov
outsb
sbb
clc
push
mov
inc
jns
lahf
add
dec
inc
sub
dec
mov
popa
insl
cmpl
xchg
arpl
sbb
daa
and
mov
es
push
outsl
mov
loop
call
hlt
lods
test
mov
test
and
dec
imul
pop
test
into
sub
daa
ljmp
jl
mov
popa
iret
call
out
test
clc
pushf
psubsw
je
and
test
ja
imul
mov
in
ret
bound
into
outsb
pop
out
iret
sahf
cvtps2pi
mov
mov
cld
lods
xchg
and
dec
loope
and
sub
enter
sub
repz
imul
inc
sti
xor
mov
pop
push
dec
ret
lret
xor
add
daa
mov
outsb
inc
mov
scas
in
push
push
push
xor
iret
mov
push
push
dec
or
scas
dec
mov
mov
or
jo
mov
jb
decl
dec
stos
test
sub
popa
mov
lds
jb
shrb
fmull
je
repz
aam
add
popa
lea
insl
ret
pop
xchg
sub
xchg
jo
sub
stos
test
outsl
jp
sub
into
rcll
out
je
adcl
lret
test
ret
pop
push
mov
sbb
subl
fcmovb
dec
lods
arpl
lods
inc
scas
mov
dec
mov
out
mov
stos
ljmp
xchg
inc
insl
xchg
add
imul
sub
outsb
mov
jno
lock
or
or
iret
jbe
jl
loope
lods
dec
bswap
jecxz
notb
fwait
pop
ret
fisttps
sbb
aas
push
mov
and
and
add
xor
repz
sub
push
jp
dec
mov
mov
or
out
sbbb
inc
test
add
mov
inc
dec
lahf
stc
mov
test
add
or
push
add
inc
lods
jnp
inc
inc
leave
outsb
mov
out
popa
and
dec
test
xor
bound
incl
pop
jb
out
add
sub
xor
test
and
test
or
lcall
pushf
into
mov
clc
dec
loop
push
or
cmpsl
ret
or
imulb
int
sub
add
jecxz
and
scas
jnp
sub
ret
aas
mov
mov
ret
in
and
and
pop
sti
mov
ja
and
xchg
mov
pop
sub
mov
ret
test
xchg
add
ljmp
adc
or
orl
dec
and
push
fwait
iret
lods
or
lods
orl
out
loope
in
movsl
mov
xchg
stos
or
mov
leave
addb
add
enter
sbb
sub
mov
in
jne
imul
lret
std
adc
imul
xor
shll
inc
add
mov
inc
cmp
mov
daa
nop
imul
jnp
and
iret
int3
shl
stos
cs
sbb
xchg
test
mov
cmp
sub
loope
sar
cmpsb
out
mov
mov
push
aas
lea
inc
loope
ret
cmovae
out
jg
sub
cs
cmp
outsb
dec
int3
inc
es
push
popa
scas
std
xor
mov
call
fwait
sbb
je
leave
dec
insl
in
xlat
mov
imul
insl
jo
push
das
call
out
daa
sub
lods
stos
add
add
vfpclassss
jge
mov
sbb
hlt
fistps
cmp
or
out
inc
ja
mov
and
dec
adc
std
imul
mov
jp
imul
xchg
subl
add
dec
repz
cmp
xchg
mov
or
xchg
jl
popl
or
push
imul
mov
fisttps
mov
loope
shrl
xor
rorl
sub
mov
inc
lds
shr
jp
out
dec
imul
repnz
arpl
cmp
cmp
dec
and
subb
cmp
dec
decl
jo
arpl
or
sbb
cmpsb
dec
test
pop
sub
out
and
and
arpl
cld
mov
jns
loop
loope
fwait
roll
das
into
dec
inc
scas
sub
aam
or
jo
xor
xchg
popa
loope
jo
nop
pop
in
or
mov
cld
aas
pop
jl
lret
roll
mov
popl
bound
mov
mov
ret
bound
inc
sub
sbb
clc
jo
arpl
test
out
mov
jle
adc
xchg
fs
insl
arpl
mov
iret
mov
jecxz
outsb
or
scas
addr16
mov
sub
jl
arpl
dec
add
popf
cmp
outsb
jle
je
jecxz,pn
and
iret
add
add
addr16
mov
scas
jno
sub
or
int
inc
pusha
insb
aam
lea
xor
leave
pop
or
cmpl
lcall
bound
sub
popa
pushf
ja
push
addl
nop
or
jmp
mov
mov
jmp
mov
cmp
popa
popa
test
imul
cwtl
mov
aam
scas
jmp
or
clc
daa
or
sbb
and
inc
add
mov
sub
inc
ret
scas
imul
inc
daa
sub
outsb
mov
popa
imul
outsb
scas
cmc
dec
outsl
mul
outsb
mov
xchg
inc
out
sti
mov
lea
and
xor
ret
leave
xchg
outsl
jecxz
cmp
scas
dec
lea
insl
xchg
mov
out
inc
add
or
les
bound
rorb
and
out
leave
hlt
sub
scas
aaa
in
ss
arpl
add
clc
js
loope
arpl
dec
dec
jns
and
xchg
movb
hlt
cmp
jp
sbb
mov
mov
arpl
shrd
iret
loope
push
jmp
lahf
mov
movsb
int
outsl
orl
cmp
insl
xor
loop
bound
imul
jmp
test
inc
sbb
in
jl
mov
out
lods
dec
ljmp
push
jecxz
out
leave
inc
into
jne
iret
ret
stos
clc
pop
roll
add
jecxz
movsl
ret
scas
in
jnp
and
jbe
aas
jmp
jne
lock
fwait
mov
or
sahf
imul
inc
shrl
das
andl
out
jne
jb,pn
jecxz
dec
mov
movsl
or
in
push
mov
push
ljmp
es
inc
shrl
fsubs
and
push
jge
xlat
dec
icebp
mov
inc
scas
repz
rcrb
mov
stos
insl
loope
sub
xor
and
mov
or
popa
jo
nop
jb
dec
int
inc
cmp
scas
loop
insl
dec
int3
movsl
or
iret
bound
roll
dec
mov
sub
pop
in
lock
dec
sub
adc
jle
popa
ret
jo
dec
jne
pop
mov
int
in
xchg
shll
and
aam
add
daa
sub
or
in
and
inc
daa
pop
inc
dec
aas
cmc
sub
mov
outsl
sti
lret
faddl
lods
pop
or
lds
cli
mov
cmp
loopne
mov
dec
cs
mov
out
nop
or
roll
sbb
pop
sub
add
je
or
int3
scas
in
mov
mov
adc
push
jecxz
in
nop
mov
jg
imul
jnp
dec
outsl
jmp
je
inc
mov
in
int
jl
jecxz
mov
xchg
scas
or
mov
popl
nop
jb
dec
or
repnz
js
inc
dec
dec
arpl
or
out
dec
mov
loope
lret
les
les
jmp
xchg
out
leave
fdivrl
outsl
mov
out
outsb
lods
psubb
mov
outsb
insb
pop
imul
jbe
jns
pop
mov
lret
mov
xchg
mov
and
das
jns
in
outsb
cld
imul
fdivr
add
out
into
cmpsl
clc
fldt
insl
scas
test
xor
ljmp
xor
add
and
jae
mov
jp
jbe
arpl
addr16
lahf
inc
shr
dec
popa
das
loop
sub
lods
out
inc
out
mov
dec
enter
fnsetpm(287
clc
nop
jge
inc
or
fisttps
aad
movsl
push
data16
or
stos
push
dec
cld
in
das
sarb
outsb
scas
jo
lods
jne
mov
lods
jns
insl
test
pusha
sti
or
test
shl
mov
subl
in
and
stc
cmp
jne
test
scas
dec
inc
xorl
gs
arpl
and
imul
and
dec
arpl
outsb
mov
mov
dec
es
das
scas
sbbl
out
xabort
jl
dec
leave
out
inc
and
inc
or
cs
cs
imul
or
cltd
arpl
mov
cmp
push
imulb
in
dec
pop
cltd
mov
sub
and
xor
lret
lcall
sub
or
scas
in
dec
sub
lds
test
xor
sbb
or
pop
and
cmpsl
dec
stos
mov
loope
dec
lds
push
mov
out
mov
mov
xchg
int
insl
sub
insl
xor
jecxz
or
lahf
and
pop
push
inc
imul
leave
mov
cmpl
mov
mov
or
inc
inc
bound
or
adc
ret
mov
xor
seto
pop
xorb
jbe
decl
inc
test
and
lods
dec
push
xor
jbe
or
nop
arpl
cmp
cmpsb
jo
clc
and
or
out
pop
inc
dec
inc
out
jmp
fwait
push
into
leave
or
add
es
lods
cmp
push
sub
mov
and
inc
lods
scas
mov
push
dec
in
adc
les
loope
dec
into
test
push
and
sub
or
and
xor
pushf
and
dec
fdivs
insl
nop
cmp
arpl
lods
out
jecxz
scas
shrl
sahf
dec
lods
sbb
push
cmovne
lods
movsl
rorl
sar
andl
outsl
dec
dec
mov
jmp
clc
in
bound
mov
mov
ret
std
xchg
sub
test
xlat
loopne
xor
lret
push
ucomiss
dec
in
or
xor
popf
adcb
iret
das
add
mov
nop
test
decl
ret
leave
mov
jp
jp
or
inc
arpl
arpl
into
lahf
sbb
inc
movsl
insb
or
adc
sub
clc
js
ljmp
loopne
jle
sub
inc
sbb
jecxz
lods
popa
dec
mov
dec
in
out
fisttpl
scas
mov
jmp
and
mov
mov
subl
adc
mov
cs
clc
outsl
test
das
out
pop
mov
fisttps
inc
mov
hlt
push
xor
mov
inc
test
mov
pop
leave
iret
dec
add
mov
int
pushl
dec
iret
nop
or
jmp
jo
inc
mov
int
movsl
je
xor
notl
push
adc
xchg
xor
orb
cld
ret
test
lods
arpl
jecxz
jne
popa
and
lret
mov
or
rol
imul
mov
inc
jo
mov
jbe
mov
iret
ljmp
xchg
arpl
iret
xchg
fimull
subb
rorl
push
aam
cld
imul
lea
popa
addr16
mov
jecxz
jecxz
clc
inc
lcall
or
push
test
lods
int
into
mov
js
dec
arpl
sub
sub
test
imul
push
scas
outsl
test
fwait
out
inc
jmp
leave
jbe
sbb
adc
lret
lea
jmp
gs
fwait
cmpxchg
ljmp
add
jmp
fwait
dec
leave
dec
lods
iret
bound
outsl
push
mov
outsb
outsb
nop
lods
inc
pop
cmp
lea
adc
mov
lret
mov
sub
xchg
or
sub
scas
dec
iret
scas
mov
scas
call
ljmp
and
ds
jb
call
stos
mov
leave
movsb
dec
shll
or
orb
xor
pop
or
push
je
cmp
sahf
lods
adc
cmpsb
and
loope
ss
push
lods
fs
insl
orb
xlat
mov
inc
scas
add
dec
stos
lahf
or
sub
dec
xchg
add
sub
mov
bound
mov
mov
pop
mov
jbe
mov
dec
fwait
jecxz
lods
lods
jo
lret
jge
ret
out
sbb
ljmp
data16
mov
mov
mov
sbb
pop
mov
outsb
jb
mov
inc
leave
jno
pmaxsw
dec
cltd
fs
and
ret
add
xor
push
test
subl
push
inc
xchg
aad
das
lea
arpl
mov
cmp
mov
orb
es
and
stc
push
xchg
jl
fmull
fcmovnb
popa
or
mov
inc
in
in
and
ljmp
bound
inc
into
or
arpl
mov
incb
cs
mov
dec
lods
jle
jp,pn
pop
jmp
add
push
insb
cld
push
or
jno
outsb
outsl
cltd
ret
and
int
out
es
dec
push
jb
out
mov
ret
add
cmp
mov
out
out
and
mov
jnp
subl
ucomiss
jg
outsb
mov
popa
mov
xor
je
sub
dec
dec
pop
bound
jno
jne
and
xor
sub
and
pop
scas
pusha
xchg
test
push
mov
jbe
rcrl
pop
addb
test
arpl
push
mov
hlt
outsb
jecxz
fisubrl
shl
shrb
adc
outsb
add
aaa
scas
adc
and
or
popf
sub
insl
dec
subl
add
lods
jae
lods
xchg
bnd
lea
lods
imul
mov
test
test
roll
popa
dec
sub
fwait
mov
int
sub
ret
scas
test
inc
and
mov
mov
mov
js
pop
mov
or
test
scas
push
fildl
int
scas
mov
dec
jmp
pop
fcmove
jle
dec
lods
push
xchg
mov
mov
or
and
cs
and
mov
ljmp
xchg
ret
mov
mov
sbbl
sub
jb
clc
test
hlt
test
adc
jmp
je
sub
cltd
push
out
out
add
out
movb
repz
xchg
fimull
mov
ljmp
shll
or
mov
fidivrs
sub
scas
addr16
sub
lock
inc
out
inc
nop
pusha
fildl
dec
or
shl
stos
int3
mov
sub
jmp
loope
push
dec
mov
lahf
dec
dec
and
mov
test
mov
out
sarl
inc
pop
jp
ljmp
jge
xchg
clc
clc
ret
jns
jbe
js
imul
lods
and
in
lea
mov
ss
xor
mov
dec
das
push
jge
pop
outsb
dec
pop
push
fisubrs
stos
cmp
rorl
mov
inc
or
je
bound
addr16
mul
ret
insl
or
mov
outsl
cmovs
lret
stos
int
call
hlt
ret
xor
jl
ljmp
bound
nop
inc
and
lahf
mov
out
into
popa
jb
jbe
mov
add
outsl
test
mov
into
enter
leave
outsb
add
jo,pn
scas
sub
jl
imul
outsb
stc
jmp
sbb
mov
scas
bound
mov
add
fiadds
call
jae
sbbb
mov
and
insb
pop
stos
push
dec
bound
je
mov
mov
dec
jnp
arpl
stos
mov
lods
std
nop
leave
pop
mov
cmp
sub
fs
dec
in
jno
mov
rorl
stc
add
pop
jecxz
stos
dec
lods
jo
push
into
cld
sub
mov
lds
pop
mov
mov
orl
pop
cltd
sub
inc
lret
sbb
jle
fistpll
loop
ret
cmp
outsb
jecxz
lret
mov
dec
jl
adc
cmpl
dec
pusha
in
mov
das
out
dec
fnstcw
dec
outsl
mov
movsl
dec
mov
dec
sti
stc
ret
iret
adc
dec
int
push
add
stos
adc
pop
arpl
test
in
lret
jl
iret
mov
sub
sub
xchg
mov
dec
imul
xchg
das
outsb
cltd
adc
xchg
sub
sub
jmp
ja
mov
jbe
mov
inc
js
mov
inc
or
inc
jae
cmp
dec
jl
dec
push
add
lock
sbb
ret
jno
cs
mov
das
jnp
mov
int
lods
test
lods
jle
jge
jno
pop
push
clc
add
mov
jnp
or
lods
and
dec
arpl
jecxz
jbe
inc
outsb
xchg
mov
out
stos
jne
fwait
push
xorl
jecxz
xchg
xchg
in
stos
cmp
mov
xor
ds
leave
hlt
cmpb
add
sub
pop
into
jns
in
aam
add
cmp
jecxz
dec
cmp
bound
jb
dec
imul
test
jecxz
jle
jbe
filds
and
mov
sti
cmp
ljmp
adc
dec
and
inc
jno
out
test
cmp
loope
push
icebp
cmp
push
xorl
out
outsl
mov
mov
imul
arpl
scas
adc
xor
dec
ret
popa
mov
jecxz
mov
dec
ja
jl
popa
scas
lods
imul
or
inc
movsl
leave
insl
mov
jp
jno,pn
add
push
scas
pop
hlt
push
outsl
xchg
jo
push
mov
shll
imul
sub
ja
ret
into
int
jmp
mov
jmp
xchg
out
imul
mov
int
xchg
dec
out
dec
or
stos
mov
dec
push
ljmp
jmp
sub
sbb
sub
comiss
imul
adc
scas
xchg
insb
add
ljmp
dec
stos
cmp
push
cs
in
lea
inc
cmp
stos
out
js
addl
xor
pop
dec
cs
xchg
clc
push
mov
test
popa
test
jno
xor
mov
adc
iret
jmp
outsl
das
daa
cmp
or
add
lods
mov
jnp
inc
jb
movsl
imul
lea
cs
push
xor
adc
or
subl
ret
mov
stos
rclb
and
xchg
mov
ret
mov
mov
dec
and
scas
inc
push
pop
insb
inc
or
dec
scas
imul
dec
fmull
lea
cmp
test
out
jmp
mov
movsl
popa
jnp
dec
dec
ljmp
jle
and
into
lods
push
jns
insb
ds
or
ret
data16
jnp
sub
add
sbb
arpl
arpl
cmc
push
mov
cli
add
mov
dec
daa
sub
lret
jl
shl
jno
pushf
sahf
dec
stos
stos
mov
push
icebp
arpl
sbb
sub
out
movd
leave
jnp
das
push
sub
inc
lock
lea
mov
test
pop
adc
mov
jg
mov
dec
jecxz
into
sub
xorl
test
jle
jecxz
loop
outsb
loop
pop
loop
inc
push
iret
or
shr
push
sar
inc
sub
sub
push
scas
xor
loop
scas
xchg
test
out
dec
lods
mov
mov
hlt
leave
mov
divl
adc
jb
outsl
daa
int
ds
pop
inc
jae
popa
in
push
into
popl
mov
mov
sub
fwait
rcr
jmp
mov
cmovge
xchg
pop
sti
mov
fsubrl
out
test
dec
leave
mov
push
mov
jl
push
or
imul
mov
insl
inc
mov
subl
dec
lock
or
push
and
jo
stos
arpl
daa
mov
jmp
in
test
mov
mov
cli
cmpsl
xchg
lods
outsl
inc
loop
loope
aaa
in
popl
and
push
ds
pop
push
lahf
mov
inc
add
xorb
dec
arpl
popa
jecxz
add
ret
sub
lret
lods
inc
sub
or
pushf
pushf
cltd
outsb
or
dec
insl
iret
imul
movsl
test
clc
cmc
sub
insl
repz
or
push
adc
xchg
push
test
int3
jb
arpl
test
bound
in
test
mov
in
sahf
scas
int
lcall
stc
cs
or
push
inc
aam
ret
sbb
repz
pop
lret
das
mov
andl
sub
das
leave
mov
jo
test
mov
lret
sub
je
jmp
lods
dec
test
lods
fisttpll
lds
inc
jns
mov
lods
add
adc
out
mov
jbe
out
ret
scas
and
outsl
in
dec
popf
imul
stos
or
lods
rcrl
es
ret
leave
in
out
mov
xchg
flds
mov
mov
stos
sub
shll
lcall
mov
outsl
inc
fwait
and
sub
dec
in
dec
int3
movsl
roll
movsb
xchg
ret
leave
jmp
pop
mov
stos
mov
cld
inc
or
movsb
lods
repnz
inc
clc
rol
mov
outsl
sbb
out
sbb
pusha
ret
jge
out
mov
stos
arpl
pop
mov
add
mov
pop
push
sbb
mov
ret
ss
into
loopne
addb
in
lods
in
pop
dec
ret
cld
arpl
xor
pop
jmp
dec
lods
imul
loop
jge
mov
lods
mov
mov
sub
cmp
int
bound
cs
inc
ret
cmp
lahf
cmp
dec
lock
add
fildl
lods
push
mov
bound
out
sbb
jp
into
inc
jg
lea
dec
andl
scas
or
inc
stos
loope
mov
pop
sbb
loope
inc
std
insb
movsl
cs
addps
pop
pop
out
int
in
lret
cmpsl
mov
dec
lret
inc
lods
imul
sbb
xchg
add
hlt
repz
bound
vcvtsd2si
ret
cmp
push
scas
pop
stc
shrl
mov
and
into
cmpsb
lret
sti
sub
stos
jle
jae
dec
into
insl
loope
arpl
roll
cmp
rcll
loop
sub
test
sub
fs
hlt
bound
dec
xchg
aad
out
movsl
sbb
inc
push
arpl
out
jbe
inc
outsb
ret
in
push
push
sub
out
clc
hlt
lods
js
subl
mov
jmp
xchg
or
mov
in
xor
scas
popa
bound
mov
push
sub
lods
sub
sub
ljmp
iret
lds
out
mov
jmp
jns
int
out
dec
in
loop
inc
outsb
mov
aad
aam
cs
shll
pop
push
insb
pop
outsb
jecxz
mov
sub
mov
in
xchg
mul
and
sub
push
ret
dec
adc
cwtl
and
shrb
jg
mov
push
adc
pop
imul
mov
pop
jo
test
and
in
xlat
popf
shrl
popa
sub
jg
imul
bound
sub
in
or
les
stc
js
subl
inc
jb
sbb
or
arpl
lea
lods
sub
out
into
fsincos
scas
inc
iret
mov
sbb
dec
pop
dec
scas
into
add
mov
subb
jno
js
ret
mov
arpl
outsl
lods
loope
ret
popf
insb
mov
and
jbe
movsl
outsb
push
cmp
prefetch
dec
scas
lds
orl
outsb
mov
sbb
inc
lret
scas
call
jge
or
add
frstor
dec
arpl
mov
mov
or
inc
scas
jo
orl
decl
popa
xor
inc
and
orl
imul
stc
testb
inc
dec
push
sahf
sub
lds
sbb
rorb
and
bound
and
stc
rcrl
test
jnp
popa
lods
insl
scas
push
mov
pop
sbb
and
xchg
jl
ret
popa
ljmp
stos
xor
xor
stos
hlt
cmp
or
mov
cli
cmp
sub
inc
stos
iret
dec
sub
fwait
imul
dec
roll
pop
cmp
pop
je
loope
jno
push
push
insb
jb
or
mov
lds
movsb
mov
jmp
test
dec
dec
cs
mov
mov
jmp
push
divb
outsb
push
dec
dec
out
jne
rorb
pop
or
jns
push
push
inc
jb
or
cmp
loope,pn
test
sbb
scas
jg
or
movsl
leave
insl
push
cmp
dec
insl
xchg
jbe
sub
imul
push
inc
dec
jp
daa
lods
or
leave
adc
adc
loopne
nop
clc
push
clc
movsb
fwait
sub
lods
popa
shll
subb
or
in
jb
lods
insl
outsb
stos
mov
cld
pop
insl
sub
mov
shll
in
arpl
inc
sbb
push
mov
sub
or
add
cs
enter
dec
cltd
mov
mov
jp
stos
pop
cmp
insl
and
mov
jmp
les
pop
leave
mov
jp
sub
inc
dec
xchg
xor
xor
add
in
nop
dec
repz
mov
lods
je
mov
pushf
lock
mov
lcall
or
sbb
stc
sbb
mov
in
cmp
iret
jo
outsl
int3
inc
pop
in
mov
mov
mov
rcrl
or
mov
lret
or
unpcklps
push
iret
test
dec
ljmp
sub
mov
mov
cmp
movsb
and
fmuls
dec
out
jb
pusha
mov
jbe
add
ja
insb
pop
insl
dec
inc
imul
hlt
in
int
outsl
int3
scas
shrl
call
out
test
dec
add
jns
aam
push
jmp
ret
scas
stos
lods
or
int3
cmp
push
mov
out
mov
mov
int3
mov
mov
push
stos
in
and
ret
outsl
ljmp
mov
loope
mov
sbb
adc
bound
cs
fdivrl
push
jns
in
jmp
lea
or
out
in
pushl
sub
test
inc
mov
into
out
imul
stc
in
aas
or
ror
and
int
jbe
and
popa
test
addl
xchg
fs
stc
lods
repz
cmpsl
dec
mov
sub
mov
mov
and
cld
scas
push
out
out
dec
call
dec
lods
in
cmp
jg
jb
or
imul
push
arpl
push
dec
dec
jecxz
sub
ljmp
pusha
fsubrs
pop
int3
js
add
and
inc
movsb
dec
das
mov
mov
cmp
stos
sub
movsl
js
fidivl
ret
xchg
movsl
dec
test
mov
inc
nop
sub
ljmp
push
je
popa
add
mov
lods
in
fisttpl
lret
es
lea
out
lods
mov
jecxz
imull
sub
cmp
insl
test
daa
outsl
imul
inc
pop
out
leave
addr16
add
int3
ljmp
daa
mov
mov
sub
test
cmp
outsl
insb
push
mov
inc
inc
sub
mov
xorb
xorl
and
or
in
jmp
js
dec
dec
adc
push
mov
inc
jo
bound
leave
mov
into
lods
dec
xchg
bound
lea
test
jl
into
scas
dec
ret
add
das
jge
leave
imul
lock
es
or
adc
inc
imul
mov
insl
mov
out
ficomps
cmp
mov
jl
arpl
loope
sbb
das
mov
mov
xchg
mov
call
xorl
jbe
std
ljmp
icebp
test
sahf
xchg
xor
insl
ret
iret
jb
fwait
push
scas
mov
inc
or
lret
xchg
jmp
jns
xlat
xchg
mov
mov
imul
stos
pop
arpl
out
dec
leave
pop
mov
dec
out
inc
mov
mov
clc
stc
cmp
mov
jnp
pop
xor
jl
jmp
push
or
push
ret
jmp
mov
insl
adc
lods
in
adc
add
into
test
push
pop
ljmp
nop
cwtl
out
push
inc
dec
mov
sub
jecxz
mov
ss
dec
out
sub
addl
lods
scas
or
arpl
jne
inc
push
loope
mov
arpl
scas
js
ret
imul
movsl
lea
mov
loop
or
movsl
dec
push
lds
in
lahf
out
mov
sub
add
imul
or
out
outsb
pop
insl
cmp
dec
adc
xor
cld
mov
cmp
push
insb
mov
mov
jl
or
lret
out
jl
sub
inc
jns
xor
iret
add
out
ret
mov
nop
outsb
cltd
out
aam
mov
jl
dec
out
sub
and
jne
xchg
int
les
mov
test
scas
movsb
push
sahf
jnp
mov
stos
insl
cs
lods
lds
mov
jecxz
jb
pop
ljmp
outsl
xchg
mov
cltd
pop
push
cmp
clc
nop
push
imul
stos
inc
outsb
dec
push
loope
shll
pop
bound
test
and
fwait
mov
push
mov
and
outsb
mov
mov
cmp
jno
push
popa
stos
mov
scas
jmp
push
mov
jbe
or
xor
int
cs
jno
lock
loop
inc
jo
loope
add
sub
scas
and
outsb
or
xchg
sub
pop
lods
scas
cmp
bound
scas
ljmp
mov
shr
insb
popa
sub
inc
adc
xor
out
insb
sbb
call
lret
insb
pop
ret
arpl
cltd
push
or
jmp
cmp
sub
mov
mov
fistl
das
orl
jo
inc
jne
pop
lods
je
add
dec
jno
mov
jns
jb
in
lea
add
mov
sbb
or
loope
jmp
fldt
mov
add
fwait
jge
sub
xor
bound
mov
lahf
out
ret
push
sbb
dec
notb
and
rol
inc
pop
xor
jge
popa
cmp
mov
push
jecxz
ret
cmp
out
push
repz
stos
add
leave
add
arpl
dec
cli
lds
pop
cli
xchg
xchg
mov
fcmovnu
test
lcall
inc
jbe
jbe
jb
mov
int
fwait
cmp
scas
push
sbb
and
rorb
pop
pushf
and
call
stos
add
inc
push
subb
or
call
inc
inc
or
test
shl
sub
arpl
cs
mov
les
test
pslld
dec
bound
pop
jae
imul
mov
cmp
out
ret
cmp
inc
ror
dec
sub
nop
sahf
mov
stos
ret
mov
dec
and
lock
rorl
loope
sub
iret
pop
xchg
into
push
cmp
out
shr
fsubrl
jecxz
sub
dec
cs
arpl
mov
fistpll
lods
jecxz
insb
lds
mov
out
push
bound
in
aas
pop
and
cli
leave
arpl
mov
pop
and
test
andb
stos
dec
arpl
mov
rcrb
xchg
cmp
cli
sbb
mov
out
jp
and
arpl
inc
mov
outsl
lods
dec
icebp
push
and
bound
arpl
add
sbb
sub
out
std
ss
insl
nop
ret
inc
push
stc
sub
sub
orb
lock
xchg
and
leave
or
sahf
imul
pop
lods
insl
bound
xor
jl
test
ss
jg
sbb
add
jmp
mov
add
outsb
lods
movsl
dec
rorl
or
pop
bound
mov
sbbl
sub
int3
das
in
inc
test
das
enter
pop
sbb
mov
cmp
jae
repz
add
xchg
in
jp
iret
insl
adc
mov
mov
xchg
insl
subl
jno
scas
scas
scas
mov
into
bound
jl
sub
dec
cmpl
jecxz
or
scas
imul
ljmp
call
inc
lods
in
lea
add
daa
xchg
push
into
mov
cli
lods
cs
dec
cwtl
sub
mov
in
mov
jo
int
sub
jl
inc
dec
ret
or
sub
leave
xchg
mov
popa
mov
les
insl
jmp
mov
das
sub
jns
lret
test
cmp
mov
outsl
dec
scas
ljmp
push
mov
clc
mov
mov
ljmp
jmp
movsl
or
repz
and
test
push
loop
sbb
cmpb
insb
out
mov
jle
decl
jb
mov
sub
mov
loop
or
scas
and
in
loope
fisubs
inc
add
call
mov
sub
out
out
sub
sbb
loop
jmp
inc
scas
stos
dec
or
cmpsl
loop
test
fisttpl
in
arpl
push
and
and
scas
clc
sub
stc
mov
lret
push
scas
mov
outsb
push
mov
rorb
fmulp
dec
stos
lods
stos
adc
jno
jb
lret
adc
and
fwait
push
scas
dec
js
lods
push
and
test
pop
mov
lret
jb
ss
mov
loope
sub
jnp
leave
add
inc
sbb
cmpsb
insl
inc
outsb
call
inc
jns
xor
xchg
addr16
sub
lods
add
insl
add
sub
inc
sti
outsb
in
mov
mov
lock
cld
arpl
dec
imul
xchg
pop
and
idiv
pop
and
jmp
xor
out
or
and
ljmp
loope
lods
sub
test
aaa
insl
xchg
enter
mull
sub
test
cmp
pop
ret
xchg
insl
int
clc
repnz
pop
loope
mov
insl
push
push
pop
pop
cmpsb
leave
cltd
jecxz
in
dec
int
mov
dec
arpl
arpl
dec
outsl
int
movsb
mov
cs
mov
xchg
or
push
and
jg
sub
mov
pop
sbbl
dec
pop
clc
dec
jl
sub
daa
or
leave
imul
cmp
xchg
inc
repnz
mov
into
add
mov
and
lock
outsb
ja
fbld
jb
mov
jle
jne
dec
das
std
iret
bnd
insl
add
gs
bound
insl
into
lds
or
mov
into
outsb
cltd
push
jo
add
outsl
ljmp
int
add
ret
cltd
insl
sbb
push
lods
jmp
into
das
addl
jecxz
ret
sahf
mov
ss
push
lea
ljmp
or
sti
fsubrp
fildl
lret
loope
ret
and
pop
scas
jne
arpl
test
sub
jne
dec
dec
gs
pop
push
mov
mov
scas
arpl
imul
sub
lock
shrl
iret
ret
add
push
aam
adc
jbe
mov
mov
loopne
mov
sahf
and
popa
cwtl
jbe
imul
sub
arpl
mov
jg
push
lret
rorb
xchg
ljmp
leave
bound
aaa
shr
insl
out
add
sahf
lret
mov
insb
aam
insl
dec
out
dec
lret
inc
arpl
inc
or
jmp
shll
or
add
inc
mov
and
loopne
mov
mov
gs
out
in
das
inc
inc
sub
mov
daa
add
out
movsb
add
fwait
roll
inc
subl
or
lods
jmp
push
dec
andb
rcl
cltd
dec
jmp
scas
scas
jl
in
mov
scas
dec
fildll
sti
push
jp
mov
jae
and
xchg
out
lods
inc
xchg
aam
add
xchg
mull
sbb
out
or
aas
dec
repnz
insl
sub
notb
mov
test
dec
sbb
inc
dec
mov
int
loope
mov
push
cmpsb
add
mov
or
scas
push
or
xchg
dec
cmpsb
sarb
push
mov
insl
dec
dec
cmc
mov
out
add
popa
arpl
and
lods
sti
test
push
mov
decl
out
inc
mov
insl
clc
add
dec
sub
neg
addr16
lret
scas
inc
int
xchg
ret
out
dec
iret
pop
jecxz
pop
insb
loope
inc
sub
mov
jmp
stos
mov
pop
dec
in
inc
orl
dec
dec
and
shrl
hlt
mov
jl
ret
in
lods
inc
dec
inc
dec
inc
movb
iret
stos
mov
or
mov
ret
loop,pn
arpl
push
and
xor
lock
jp
arpl
fs
and
nop
test
lods
mov
inc
arpl
movsl
dec
sub
inc
or
dec
xchg
mov
and
popl
out
scas
push
jnp
das
and
lods
inc
adc
clc
dec
mov
and
prefetcht0
sub
scas
fsubl
sub
xchg
xchg
out
mov
scas
jb
sub
testb
mov
sbb
add
movsl
loope,pn
or
scas
mov
inc
ret
lret
inc
ret
add
roll
and
lock
cmpsb
out
ljmp
scas
xor
xchg
das
or
test
cmp
out
jne
leave
bsf
sub
jb
lret
fucomp
nop
sahf
jp
sahf
inc
addl
js
mov
sub
mov
int
js
clc
cmp
cs
fsubrs
icebp
out
insl
jo
add
scas
stos
push
xchg
nop
push
mov
popa
aaa
scas
jle
dec
fisubs
mov
sub
xchg
clc
orl
mov
addr16
adc
imul
mov
test
inc
cmpb
nop
push
insl
scas
jmp
mov
cli
mov
xor
imul
xchg
mov
jp
and
test
xchg
out
jl
mov
lea
outsb
dec
loope
dec
mov
iret
hlt
lea
andl
cmove
scas
mov
je
addb
adc
jns
jl
mov
out
cmp
jne
cmp
lock
mov
push
jae
popa
out
inc
loop
or
dec
scas
int3
cld
mov
xchg
inc
scas
mov
stos
pop
lret
mov
cmc
je
orl
leave
inc
sub
dec
mov
arpl
bswap
jle
bound
cs
scas
dec
into
daa
mov
call
nop
push
scas
dec
imulb
mov
inc
jle
loop
int
addr16
ja
mov
lods
inc
xchg
imul
mov
mov
dec
ret
orb
xchg
test
testl
test
repnz
insl
ret
movsb
test
outsl
pop
nop
jmp
pop
dec
mov
and
push
and
mov
mov
test
insl
or
cld
arpl
push
xchg
lcall
test
lods
lods
or
daa
test
iret
ret
mov
mov
mov
rorl
inc
ret
outsb
test
pop
lea
outsb
mov
sub
mov
scas
adc
jecxz
mov
out
es
cs
outsl
sub
je
sub
jbe
mov
or
lods
push
mov
cli
fbstp
std
dec
dec
sbb
xor
mov
loopne
and
shr
orl
xchg
mov
in
mov
dec
stos
test
repz
insb
mov
inc
lods
jmp
outsl
lods
sbb
mov
lock
aaa
pushf
leave
es
push
icebp
jmp
call
mov
std
test
jl
out
inc
lret
pop
pop
mov
add
stos
add
sub
outsb
sub
cltd
inc
orb
jb
in
cs
je
jmp
popa
dec
dec
and
out
or
push
jle
add
shrb
outsb
test
dec
mov
mov
fistpl
jno
mov
jmp
xchg
add
dec
fs
bound
lcall
or
in
dec
inc
jb
lds
addl
jae
leave
ret
scas
add
out
xor
out
sub
dec
cs
testb
push
subl
mov
jb
arpl
and
pop
or
xor
cmp
stos
mov
fsubrl
imul
push
jnp
int
out
lcall
lock
add
bound
addb
out
outsl
insl
movsb
repnz
jmp
ljmp
jge
xchg
xchg
mov
sub
in
jno
leave
xor
and
call
lds
mov
push
out
cmp
push
add
or
and
mov
das
ret
scas
lea
fsts
mov
add
test
jmp
cmc
lods
push
iret
dec
das
ljmp
scas
mov
sbbl
movsb
stos
imul
adcl
and
aas
mov
lret
fisubs
sub
mov
stos
sub
add
leave
adc
jg
outsb
lds
inc
bound
mov
or
shll
pop
test
inc
das
out
lods
push
pop
ljmp
push
or
loop
insl
adc
and
test
cli
insl
cmpxchg
into
jmp
cmp
or
fisubrl
mov
jmp
lahf
pop
test
repz
push
dec
mov
bound
dec
or
leave
jne
and
inc
jecxz
lods
or
lea
push
shl
outsb
sub
in
push
mov
mov
lods
addl
and
mov
repnz
jecxz
add
loope
leave
gs
clc
dec
std
and
or
xchg
fimull
jns
gs
or
ret
or
and
out
ret
sub
popa
jmp
movsb
into
leave
in
sub
mov
dec
imul
xchg
and
in
jle
mov
sbb
cmp
mov
lods
dec
dec
outsb
push
repnz
iret
js
leave
scas
dec
out
jbe
push
and
jge
into
lods
pushf
cmp
jmp
adc
insb
lret
sub
ja
das
insl
jne
ucomiss
or
xor
movsb
sti
lahf
mov
jle
xchg
or
aas
rcl
jle
and
arpl
mov
mov
dec
sbbl
adc
rep
stos
mov
cmovg
xchg
scas
sub
addr16
sbb
mov
insl
dec
mov
ljmp
sbb
or
ljmp
lret
inc
pop
imul
pop
mov
and
jg
push
out
lods
popa
lret
adc
shrb
and
dec
xchg
ret
add
or
dec
mov
add
fs
stos
dec
push
xor
inc
sbb
ret
cwtl
stos
ljmp
pop
sub
cmpsl
mov
push
ret
ret
dec
vphadduwd
test
ret
in
xor
inc
mov
mov
and
imul
bound
adc
dec
xlat
cmp
mov
repnz
mov
js
mov
movsl
mov
icebp
sbb
sub
out
cmp
cmp
ror
jmp
or
insl
dec
mov
loopne
mov
arpl
and
jecxz
outsl
into
or
dec
or
iret
sub
cli
xchg
mov
jecxz
push
testw
lret
ret
xchg
xchg
jmp
fwait
ret
or
sub
icebp
mov
add
sbb
cmpsb
dec
mov
loope
out
inc
add
sbbb
and
cmp
dec
mov
sub
jbe
outsb
outsl
mov
ljmp
sub
cmp
insl
dec
fsubs
and
jmp
std
push
inc
lods
cmp
ljmp
dec
je
popl
in
loop
mov
and
mov
push
nop
stc
insl
test
popa
imul
xchg
sbb
js
inc
add
ja
push
and
loop
inc
scas
insb
test
in
lods
movsl
stos
scas
bound
in
xor
pushl
popa
into
ljmp
dec
sub
ret
add
dec
or
sub
sub
jo
out
jbe
pop
mov
nop
fwait
inc
outsb
ret
add
test
inc
xchg
movsl
cs
mov
outsb
jecxz
jno
jbe
insl
add
popa
xchg
std
addr16
dec
dec
lret
imul
mov
test
and
inc
sub
or
or
mov
push
ret
jns
jge
inc
jge
inc
sub
out
and
jmp
into
shll
jmp
cmp
mov
dec
add
pop
outsl
cmc
into
mov
push
nop
push
jp
mov
insl
add
inc
int
cld
mov
cmovle
dec
ffree
pop
iret
shlb
sub
fwait
arpl
adc
sub
sub
int
mov
les
inc
andl
stos
cwtl
adc
jne
mov
xlat
adc
insb
or
imul
mov
and
and
dec
xchg
out
mov
inc
int
cli
xor
jg
pop
sub
scas
mov
daa
add
push
call
mov
scas
dec
sbb
adc
lret
out
int
test
ljmp
stos
pushl
outsb
sbb
sbb
and
fwait
into
inc
and
mov
ret
rcll
push
pop
imul
inc
cmp
repnz
add
jns
std
in
jecxz
lods
sub
icebp
sub
scas
mov
jnp
and
in
test
xor
cmpps
insl
sub
int
push
scas
pop
mov
insb
ficoms
orb
jo
repnz
mov
clc
dec
lods
loope
lret
stos
or
scas
cmovp
ror
jg
mov
ljmp
pop
or
add
idiv
popa
pusha
rorl
movsb
xchg
outsl
scas
int
cmp
or
test
mov
ret
repz
cmpsl
mov
jo
outsb
scas
out
jecxz
jl
addl
mov
iret
and
imul
and
xchg
orl
and
or
adc
out
lcall
ret
sub
dec
mov
xor
mov
sbb
mov
mov
fwait
lock
lods
dec
sbb
mov
movhps
lcall
outsb
lea
mov
addr16
xor
push
mov
mov
adcl
nop
mov
mulb
nop
scas
ficompl
in
and
leave
fisttpl
test
repnz
lret
scas
insb
nop
iret
scas
mov
cmpl
daa
test
test
jae
test
sub
or
stos
lods
push
popf
mov
fmull
jg
or
jno
cmp
jne
fisubrs
pop
int
xchg
arpl
test
lods
mov
fildl
jno
and
jo
out
inc
out
ljmp
mov
out
bnd
mov
out
sub
loope
pop
mov
stos
jg
mov
jmp
addl
mov
not
push
sub
and
scas
lock
or
adc
test
ja
mov
push
popl
psubsw
jecxz
addr16
out
adc
dec
out
mov
insl
scas
or
out
sub
sub
mov
push
fmulp
outsb
dec
mov
xchg
mov
xchg
dec
inc
and
or
mov
xchg
mov
or
in
or
imul
or
lret
jle
mov
hlt
dec
mull
xchg
and
push
popa
std
test
dec
sub
add
lea
cli
lods
or
das
dec
jno
cmp
orl
jns
xlat
xchg
cmpsb
in
arpl
testb
data16
mov
fwait
inc
and
insl
aam
cmp
ret
add
cmp
out
push
lret
lods
and
daa
pop
js
mov
mov
or
push
sub
mov
out
mov
jl
lods
scas
cli
rol
or
test
adc
pop
xchg
xor
movsl
sub
mov
dec
push
jae
xlat
scas
out
rolb
mov
push
out
out
lods
cmp
dec
dec
out
daa
ljmp
subl
jle
test
and
xor
mov
out
dec
lods
in
inc
or
int3
or
add
sub
leave
in
in
dec
loope
outsb
xchg
mov
lods
dec
outsl
fcmovu
mov
push
inc
sub
mov
push
imul
arpl
xchg
push
inc
jmp
mov
sahf
sub
ljmp
mov
mov
test
xchg
sub
add
int
sub
sbb
popa
and
fisubl
bound
inc
or
loope
insb
jbe
mov
adc
out
insl
pop
jmp
dec
movsl
ret
jno
jl
nop
lret
inc
leave
scas
out
ret
add
adc
test
push
sbb
sub
xor
xchg
sub
pop
xchg
xor
add
or
xor
mov
loope
icebp
mov
cmc
jb
sub
dec
xor
ss
shll
or
sub
imul
sub
out
mov
xchg
subl
push
imull
into
add
sbb
out
mov
or
sub
out
lret
bound
iret
out
mov
ret
loope
push
lods
loop
or
clc
test
push
mov
insb
lods
dec
and
lds
sub
mov
mov
dec
and
jnp
mov
lods
cltd
xchg
cmc
sub
or
and
sub
push
push
nop
testl
sub
sti
mov
jne
divl
ret
sub
lods
das
scas
shrl
fwait
into
ret
popa
int
arpl
mov
and
es
sub
mov
subl
xor
imul
test
sub
sub
mov
nop
sub
mov
jecxz
inc
lret
jl
lea
xorl
add
mov
cmp
or
and
scas
or
and
add
cld
mov
push
inc
sub
ret
jnp
sub
scas
dec
add
aaa
ficoml
and
push
js
jmp
call
gs
pop
cmp
dec
dec
mov
int
adcl
out
sub
pop
inc
jg
test
pop
push
outsb
das
pop
jmp
inc
sub
scas
lods
aaa
sub
dec
sub
sub
in
in
sbb
inc
adc
scas
mov
aaa
jmp
or
test
inc
push
sbb
inc
jo
loope
jnp
dec
ret
dec
inc
out
pop
lret
pop
movsl
and
jnp
imul
fcmovu
cmpsl
lcall
add
lods
pop
outsl
dec
sahf
ljmp
ror
sub
push
inc
xchg
sbb
in
and
sub
cmp
lods
out
stos
sub
pusha
std
inc
stos
pop
mov
lret
push
orb
movntps
jle
mov
inc
inc
test
sbb
lods
std
sbb
push
push
mov
scas
dec
xchg
dec
iret
bound
add
push
and
popf
clc
lods
in
bound
adc
stos
and
test
test
loop
shrb
adc
inc
jne
shrd
cmpsb
ljmp
xchg
rclb
clc
stos
sub
dec
arpl
mov
jp
in
xchg
dec
lods
mov
lods
cld
popf
clc
in
jb
nop
stos
test
fwait
outsb
push
decl
leave
sub
xchg
dec
cs
test
xchg
ljmp
sub
arpl
jb
sar
dec
add
xchg
das
mov
outsl
int
ds
mov
cmp
dec
lea
sub
pop
dec
mov
test
jmp
and
dec
and
test
bound
jbe
lods
push
mov
jne
sbb
cmp
in
ret
pop
cltd
mov
rcll
cmp
loop
and
dec
inc
repnz
insl
cltd
cs
xchg
inc
cmp
or
ret
loope
push
mov
stos
jp,pn
mov
jb
mov
stos
leave
mov
mov
dec
out
arpl
inc
cli
jecxz
outsl
push
inc
add
or
inc
dec
mov
pop
dec
loope
subl
inc
xrstor
adc
add
cmp
outsb
mov
cmp
xchg
jmp
int
pop
or
into
sub
lret
inc
scas
leave
add
or
int3
jp
mov
stos
les
sub
aam
mov
mov
sub
push
outsb
sub
xor
lods
mov
mov
dec
into
mov
insl
into
mov
or
add
test
inc
mov
sub
adc
xchg
sub
das
popl
int
or
xchg
mov
int3
out
push
daa
cmp
ljmp
pusha
ja
xchg
enter
dec
mov
in
pop
lret
or
dec
int
jg
jl
cs
bound
nop
test
adc
jbe,pn
push
push
lahf
pop
and
pop
imul
fwait
in
mov
sbb
inc
jno
and
jno
jnp
shl
iret
das
push
jp
mov
ss
subl
mov
lea
add
test
dec
xchg
mov
or
pushf
and
stc
jmp
push
add
inc
or
inc
jae
in
popf
clc
mov
mov
stos
out
inc
hlt
and
test
pushf
andb
outsb
dec
jb
int3
or
or
adc
andl
std
imul
insb
mov
std
push
push
and
dec
jo
fstpt
or
jmp
in
mov
dec
mov
test
ds
push
lea
jmp
nop
mov
ljmp
jmp
out
sub
mov
cli
iret
pop
sub
arpl
in
clc
mov
sbb
add
daa
test
ret
popa
addr16
or
stos
xchg
sub
dec
loope
ret
or
jecxz
std
iret
lods
call
mov
dec
sbb
mov
leave
or
push
push
dec
or
rorl
lods
test
inc
mov
dec
mov
loope
das
jbe
sbb
add
stos
int3
jb
shl
push
fisttpl
das
scas
pop
stos
dec
test
outsb
jecxz
in
jp
cs
dec
pop
adc
orl
inc
inc
ret
lods
shrl
mov
dec
ret
push
clc
out
out
jp
bound
out
lods
mov
ret
rorl
inc
loope
cmc
dec
sbb
insl
imul
mov
loopne
jmp
scas
or
mov
push
jmp
sbb
aad
rol
insl
jnp
sub
popa
popf
jmp
fadds
shll
fmuls
jne
pop
ljmp
add
sbb
mov
int
mov
test
or
jecxz
pop
mov
jmp
or
lock
or
pop
lods
or
mov
inc
rol
lret
fcmovu
arpl
into
mov
jne
faddl
or
cmp
mov
pop
mov
stos
arpl
push
ss
insb
xchg
es
aam
lcall
pop
popf
mov
lods
and
dec
stos
int
dec
or
inc
dec
popf
lea
inc
jb
sahf
mov
das
push
je
add
dec
arpl
scas
in
test
jmp
adc
scas
mov
daa
out
iret
inc
clc
test
jecxz
roll
insl
jne
push
int
ret
dec
lret
imulb
bound
mov
dec
lock
fdivrl
lea
or
push
out
mov
push
mov
ret
out
in
adc
jge
imul
arpl
or
adc
repz
lods
mov
or
loope
cmpl
repnz
sub
jo
and
inc
imul
outsl
fsubl
orl
inc
insl
dec
sub
out
push
add
idiv
ret
andl
inc
inc
lods
out
dec
test
stos
cmc
scas
daa
push
push
lds
ret
imul
mov
xor
dec
inc
sub
int3
sub
dec
arpl
dec
xchg
xor
loope
insb
xchg
shrl
leave
int
jb
sbb
or
dec
stos
push
and
dec
push
mov
subl
shrb
ret
test
insl
fldenv
iret
out
paddusb
xabort
leave
out
jp
mov
xchg
jae
outsl
iret
jbe
repz
or
inc
scas
dec
sarl
les
mov
inc
jge
sub
movsl
or
sbb
iret
inc
in
pusha
lahf
pusha
jmp
and
push
sub
arpl
lods
inc
jne
stos
hlt
sbb
lods
mov
scas
jno
ret
std
jecxz
cmpsl
loope
jb
popa
mov
in
leave
test
jmp
ljmp
cmp
add
lods
outsl
loop
into
cmp
mov
dec
stos
mov
mov
and
sub
pop
push
jmp
mov
cmp
pop
jle
faddl
jb
jl
leave
mov
fildll
stos
dec
imul
ljmp
inc
loope
inc
cmp
push
shll
dec
or
mov
stos
mov
inc
insl
add
dec
lods
popa
xor
jae
mov
or
ret
jnp
dec
or
inc
stc
ficomps
mov
jne
dec
inc
ret
or
dec
push
mov
outsl
sbb
sahf
sti
pop
shll
cmp
insl
shrl
das
mov
insl
test
push
arpl
lds
out
ljmp
add
or
outsb
mov
out
lds
dec
dec
mov
test
int
mov
or
mov
ljmp
in
jo
sbb
jns
insl
push
lds
movsl
xor
outsb
ljmp
xchg
dec
xor
cs
sub
add
dec
jnp
leave
mov
fwait
jecxz
imul
fldl
jb
ret
iret
leave
in
loope
loop
ljmp
lods
cmp
cs
test
out
push
daa
jecxz
pop
outsb
sub
mov
cmc
jl
ret
or
xchg
cmpsb
lret
jae
out
insb
sub
dec
jno
dec
lods
je
nop
push
ret
jb
insl
leave
stos
mov
mov
dec
shlb
xacquire
imul
mov
addr16
cltd
jo
in
mov
lods
inc
stos
jmp
mov
enter
ja
bound
add
or
mov
push
pop
lahf
scas
in
xor
outsb
jne
or
clc
fadd
push
mov
aam
or
outsb
std
ficoml
add
jl
in
and
pcmpeqd
fnstsw
mov
push
scas
mov
cs
mov
or
inc
add
adc
mov
pop
icebp
mov
popa
or
xchg
inc
xchg
push
dec
mov
dec
or
add
pop
jb
int
hlt
and
insl
jmp
in
inc
out
pop
mov
xchg
jecxz
int3
inc
stos
ret
nop
xlat
into
mov
les
ljmp
or
xor
imul
sahf
in
jl
scas
lret
in
add
clc
scas
or
and
nop
jecxz
push
mov
or
sarl
inc
out
mov
dec
dec
push
insl
popf
outsb
mov
cmp
sub
out
ret
pop
xchg
dec
mov
or
push
jmp
mov
lahf
jmp
lea
nop
int
gs
test
sub
dec
ret
dec
or
dec
add
mov
lds
cld
sub
dec
ficoml
dec
mov
mov
or
cltd
inc
insl
or
outsl
jo
nop
mov
xor
mov
mov
jne
add
insl
lock
loopew
jb
std
out
andl
popa
add
iret
out
rcll
mov
jb
mov
xchg
xor
subl
pop
lret
jmp
popa
arpl
inc
clc
mov
cmp
cmp
or
fadd
out
outsb
cs
out
insl
inc
aad
push
in
negl
jne
test
das
mov
mov
dec
in
outsb
jecxz
pop
mov
orl
out
mov
push
or
jb
xchg
lods
mov
jecxz
jnp
pop
inc
push
iret
test
mov
sbb
sub
sub
mov
fs
outsb
andl
push
xor
lret
pop
jmp
dec
mov
outsl
leave
stos
out
lods
rcrb
and
es
mov
mov
scas
insl
je
mov
and
xchg
jl
jecxz
daa
out
lret
orl
xor
loop
insl
out
pop
daa
xor
cs
movsl
push
inc
mov
cltd
nop
sub
stos
scas
imul
jns
mov
or
push
outsb
push
bswap
in
or
stos
mov
popa
outsb
jle
dec
lea
xchg
jo
ret
subl
orb
adc
lea
scas
or
jmp
push
dec
outsl
mov
cld
loop
sub
inc
ljmp
mov
mov
or
into
js
or
lock
test
arpl
cmpsb
arpl
insl
mov
mov
stos
mov
popa
inc
shll
dec
fs
dec
cmovno
out
dec
cltd
es
mov
loop
xchg
jp
pop
shrl
and
setnp
out
and
mov
pusha
ds
cli
mov
mov
int
and
movsl
cwtl
jns
loope
clc
adc
or
sbb
in
jo
lods
jne,pn
into
popa
jns
test
lret
dec
andl
jmp
fcmovne
inc
or
dec
xchg
shll
mov
mov
push
inc
loop
xchg
shrl
ljmp
nop
es
mov
dec
ftst
fs
into
les
adc
lds
andl
or
pop
out
es
fbld
mov
lret
xchg
dec
push
ret
jbe
dec
adc
cmc
pop
push
cmp
add
push
fiaddl
and
push
sub
xlat
inc
and
leave
or
mov
fwait
das
pop
push
ret
inc
jne
and
in
gs
clc
aaa
popa
aad
jle
dec
add
jb
and
stos
loope
push
shll
insl
ret
outsb
cmp
cmovl
into
bound
lret
inc
dec
je
or
fcomip
pop
add
add
repz
jae
lock
pop
dec
mov
mov
cmp
in
lea
inc
or
out
ss
imul
psubusw
out
and
inc
mov
dec
mov
sbb
test
inc
out
es
dec
mov
repz
cs
arpl
pop
je
dec
inc
jbe
mov
aad
loop
sbb
and
call
or
insl
dec
mov
dec
fnstsw
mov
loope,pn
and
test
cmp
aas
jo
jmp
shrl
mov
pusha
je
leave
dec
scas
rol
movsl
rep
cmp
push
jecxz
jl
or
popf
insl
insl
cmp
jecxz
call
lods
add
out
hlt
jecxz
jne
jb
and
sbb
aam
bnd
arpl
xor
jb
lds
add
ret
push
lret
mov
out
andl
mov
dec
jecxz
cmc
cli
imul
insl
test
insb
adc
mov
mov
ljmp
dec
out
mov
mov
push
dec
xchg
inc
fwait
push
mov
or
outsl
cmp
aad
ljmp
popa
imul
outsl
mov
fwait
inc
dec
inc
ret
nop
scas
iret
cli
jecxz
or
test
into
jp
bound
pushf
popf
jno
leave
or
lea
adc
out
popa
sub
push
ljmp
sbbl
scas
test
stos
jb
mov
jb
mov
mov
fwait
mov
mov
and
push
inc
jecxz
pop
fcmovnbe
or
mov
mov
mov
cmp
addb
cmp
imulb
dec
dec
insl
inc
in
mov
jnp
dec
push
jmp
mov
ljmp
movsb
aam
or
inc
into
mov
jne
arpl
mov
mov
inc
inc
cmpsb
add
aam
scas
lods
fisttps
push
ret
fistps
mov
popa
dec
scas
stos
pop
into
fs
mov
out
lea
dec
dec
dec
dec
mov
push
out
inc
into
add
int
out
dec
lret
lods
lods
clc
or
xchg
lods
test
outsb
pop
out
stos
lret
jb
cmc
or
and
scas
adc
sti
inc
dec
btl
lds
pop
fwait
mov
dec
mov
mov
mov
into
scas
push
or
cltd
movsb
movb
jns
ficompl
mov
std
dec
loope
andl
cmc
pop
and
push
lds
mov
inc
jecxz
pushf
or
lods
mov
insb
in
and
pop
daa
dec
cmp
and
clc
mov
cmp
scas
pop
mov
add
mov
stc
stos
inc
lea
test
ret
jae
mov
add
ljmp
dec
lock
imul
pop
pop
and
mov
stos
scas
out
popa
mov
and
je
mov
leave
subl
insl
inc
leave
inc
and
int3
push
dec
insb
insb
dec
outsb
inc
add
ljmp
arpl
mov
jecxz
loop
daa
out
cwtl
mov
mov
xor
lods
mov
test
mov
ds
push
xor
jns
out
jne
and
inc
jnp
mov
roll
mov
dec
lods
scas
mov
sahf
add
add
out
mov
mov
jmp
adc
hlt
push
out
iret
lret
dec
dec
sub
push
mov
inc
jbe
inc
orl
cmpsb
ljmp
dec
sti
lods
adc
into
test
imul
adc
shrl
mov
mov
xchg
jl
push
sub
jbe
and
test
lods
arpl
cmpl
or
sbb
out
stos
out
inc
jge
lret
or
inc
jp
mov
test
clc
test
lcall
lea
mov
add
cmp
mov
jno
adc
inc
and
inc
je
mov
adc
jmp
hlt
bound
fwait
das
into
out
adc
cmpsl
scas
inc
in
mov
inc
dec
xor
and
dec
dec
dec
jmp
xchg
roll
mov
jb
jge
mov
dec
and
out
mov
loope
clc
ret
jl
int
test
out
popl
gs
sahf
sub
addb
mov
gs
popa
and
lret
cmp
adc
sub
xchg
push
jb
scas
dec
cld
in
test
pop
rcrb
shll
das
dec
iret
cmp
aad
in
cld
mov
push
subl
out
and
repz
push
jl
mov
shrl
mov
outsl
arpl
stos
scas
nop
jb
push
mov
xor
lret
adc
lret
in
out
imul
std
fstpt
ja
cmpb
lea
or
dec
add
mov
push
popa
inc
arpl
mov
test
insl
inc
das
mov
jo
sub
shr
mov
push
fisttps
and
pop
sbb
sbb
sar
xor
mov
pop
stc
mov
int
sub
bswap
cld
sub
adc
into
inc
xchg
imul
testl
rorb
mov
add
call
cmpsl
cli
or
sub
loope
lret
or
or
daa
inc
dec
or
sbb
insb
push
inc
push
lea
inc
scas
insl
ljmp
jno
mov
scas
push
inc
rcrl
and
or
jecxz
ret
mov
fucomp
push
adc
fs
inc
arpl
mov
roll
add
sahf
movswl
mov
jmp
dec
and
hlt
mov
sahf
xchg
push
lods
sub
int
or
into
mov
ss
and
sub
push
inc
arpl
outsl
xchg
inc
sbb
mov
xchg
xor
nop
jge
fs
sub
mov
sbb
cmp
hlt
rcll
jne
mov
imul
cld
inc
xchg
ret
imul
stos
dec
sbb
popa
nop
push
dec
in
std
lods
fsubs
xor
dec
cs
iret
int
add
or
and
les
int
add
stos
pusha
arpl
shl
mov
fwait
outsb
leave
das
and
ss
and
mov
lds
mov
adc
stos
lds
pop
daa
inc
popa
test
jmp
lret
mov
push
das
out
arpl
fsubl
scas
mov
popa
mov
je
les
bound
sti
mov
and
inc
aas
int
sbb
popa
jae
addr16
pop
outsb
rcll
inc
scas
ret
dec
mov
popl
popa
mov
fs
out
loop
ret
mov
mov
shll
sbb
test
repnz
movsl
arpl
push
loope
lods
inc
sarl
js
scas
jbe
and
fadd
xchg
mov
and
fildll
popf
das
dec
ret
inc
stos
clc
sub
iret
out
sub
lret
jle
leave
and
bound
nop
out
outsb
jge
arpl
out
cmp
mov
pop
mov
cmp
and
and
jno
push
mov
ss
hlt
pop
out
jmp
popf
loop
mov
es
int
or
dec
fwait
test
ret
fcomp
loope
icebp
and
push
jmp
mov
test
adc
fdivl
mov
stos
dec
lods
cwtl
xor
test
hlt
cmp
mov
daa
arpl
cmp
add
outsl
inc
rcrl
inc
nop
and
lea
inc
das
ljmp
outsl
popa
mov
iret
sbb
sub
mov
stos
jb
out
jle
js
push
sarl
dec
lods
popa
pop
sub
mov
daa
arpl
push
jge
inc
inc
scas
je
in
shrd
sub
add
shrl
push
dec
push
adcl
insl
scas
jg
push
out
ja
pop
push
and
jge
jecxz
test
mov
sub
mov
movsl
mov
cs
push
sub
icebp
std
stos
fisttpl
jo
andl
or
loopne
mov
out
clc
xor
das
pop
in
sahf
leave
cmp
mov
out
pushf
xchg
mov
sbb
and
cmp
inc
mov
sub
ja
stos
mov
mov
scas
mov
cs
pcmpeqw
loopne
clc
push
xlat
test
call
cltd
lods
stos
in
mov
iret
add
xor
adc
jne
imul
dec
pand
arpl
jecxz
ret
sbb
dec
je
mov
push
jmp
and
add
dec
sbb
mov
ret
dec
inc
popa
mov
cltd
sub
and
aad
test
jne
sub
jmp
addl
stos
sub
shrb
sub
sbb
xor
adc
lds
pop
jne
mov
jmp
sub
push
push
insl
lret
jne
mov
push
mov
sub
mov
arpl
mov
mov
jno
orl
dec
out
ret
imul
jmp
add
out
xchg
mov
aad
inc
and
mov
or
cmp
ljmp
lock
loope
cmp
arpl
and
and
jns
insl
dec
mov
lret
sub
or
loop
cmc
loop
jl
mov
or
fwait
mov
and
je
mov
movsb
dec
and
xchg
sub
into
sub
inc
mov
fisubl
bound
or
add
add
push
movsl
sub
add
jmp
and
clc
adc
mov
xchg
pop
cmpsb
stc
mov
subl
das
test
xor
ja
add
cmp
or
js
mov
lret
in
mov
sti
push
test
pop
pop
insb
insl
imul
outsl
pop
push
lret
inc
test
stos
lds
cs
dec
nop
or
jle
movsl
stc
gs
mov
jne
lock
fwait
out
push
dec
dec
iret
sub
fwait
lret
scas
je
jmp
jecxz
lods
out
mov
push
out
mov
push
outsl
sub
dec
adc
outsb
lock
or
leave
jl
or
scas
mov
dec
flds
imul
lahf
push
mov
mov
loope
scas
inc
jl
or
jbe
stc
dec
add
lods
cmp
insl
mov
cli
dec
loop
xor
lcall
cs
push
dec
ja
inc
ret
mov
jl
scas
inc
jmp
push
fwait
lret
and
sbb
lds
movswl
mov
fisubrs
movsl
outsl
jnp
out
iret
lods
imul
shlw
inc
stos
push
or
push
inc
into
rcll
mov
sbb
jbe
xchg
je
loope
add
lret
dec
push
sub
imul
lods
sub
jns
subl
push
roll
sti
pop
inc
push
in
sub
mov
into
push
inc
nop
mov
fldenv
sbb
sub
les
mov
mov
aas
lahf
sbb
mov
inc
gs
leave
jp
lods
daa
add
inc
adcl
jmp
dec
and
jnp
out
add
test
movsl
adc
sub
jb
out
and
bound
inc
scas
popa
insb
cmp
jmp
dec
dec
movsb
outsl
mov
push
inc
mov
dec
lret
fs
loop
inc
movq
test
mov
mov
stc
clc
mov
mov
fisubs
jge
jne
xor
jno
sarl
xchg
clc
ret
outsb
inc
sahf
aam
fdivl
cmpl
in
mov
addr16
aas
sub
nop
idiv
jbe
scas
jge
test
push
dec
call
cmp
out
add
nop
scas
mov
fldcw
and
ja
or
test
test
dec
jno
iret
inc
ljmpw
push
lods
jb
out
jb
xor
sub
insb
cld
mov
jb
lock
in
bound
outsl
into
mov
or
sbb
int3
dec
mov
icebp
out
clc
jmp
call
and
shrl
ret
ljmp
fcmovbe
pop
or
lret
shlw
test
popa
sub
sub
inc
lock
mov
mov
fnsave
es
scas
cmp
jb
inc
sub
pop
insl
or
pop
sub
int
inc
leave
das
xlat
sub
stos
ret
insb
and
das
dec
insl
mov
cmp
or
pop
jnp
dec
dec
and
scas
scas
cld
ret
sarl
lods
leave
or
out
and
and
jecxz
or
add
push
inc
mov
dec
jnp
loope
lret
test
mov
imul
adc
jae
ret
test
dec
bound
dec
push
push
fldenv
out
sbb
inc
dec
ja
stos
inc
adcl
mov
pop
pop
scas
stos
jnp
ret
js
inc
dec
mov
pop
insb
addl
mov
or
out
dec
add
lret
sbb
cs
jecxz
cmp
sub
dec
jbe
push
mov
lret
or
pop
insb
mov
sbb
add
inc
jne
jne
pop
push
push
int
mov
mov
adc
push
clc
dec
das
pop
jmp
dec
jno
clc
adc
dec
mov
iret
sbb
push
scas
test
fwait
sub
movsl
outsb
das
test
or
push
loop
fsubrl
insl
fwait
popa
or
scas
leave
jne
lock
inc
dec
mov
ss
pop
femms
jmp
adc
test
iret
xor
inc
aad
sub
scas
mov
xchg
mov
lret
dec
add
jae
lret
insl
or
bound
int3
pop
mov
cmp
shll
sbb
clc
sub
jne
cmp
aas
das
fstps
movb
jg
add
mov
inc
orl
sub
mov
mov
pop
mov
shrl
mov
out
mov
ljmp
cmpsl
scas
rorl
cmp
push
mov
in
or
in
add
into
sbb
out
push
test
aaa
not
pop
xor
mov
mov
sub
inc
stos
andl
mov
roll
stc
cmp
lods
mov
js
push
lods
lea
sub
add
and
sbb
push
and
repz
xor
psubw
faddl
hlt
movsb
mov
mov
pusha
inc
into
add
adc
scas
outsl
popa
das
pop
mov
outsb
nop
mov
push
scas
cmp
addr16
arpl
stos
sbb
xchg
je
nop
xchg
inc
imul
bound
pop
ja
stos
jbe
cmp
jmp
mov
cmpsb
push
and
pop
cli
pop
dec
pop
push
out
xorl
push
cs
sub
aas
and
cmp
cmpsl
fsubrs
out
es
dec
loop
outsl
and
dec
loope
insb
push
repz
shlb
bound
inc
mov
popf
pop
push
inc
out
leave
pop
mov
int
mov
adc
addl
push
cmp
cmc
and
dec
push
jmp
mov
insl
inc
jo
clc
subb
leave
or
or
or
lock
clc
xor
ret
ljmp
cld
push
pop
mov
adc
push
sti
daa
dec
add
test
mov
adc
or
outsl
clc
push
mov
daa
cmpsl
xorl
mov
lock
jcxz
int
bound
push
addr16
cs
mov
jp
xor
push
test
add
sub
sbb
adc
clc
push
jns
adc
imul
not
popf
arpl
push
jecxz
clc
cwtl
and
leave
push
cs
repz
push
xchg
call
jbe
and
out
imul
popa
jns
inc
fistps
add
pop
and
je
pop
lods
scas
pop
dec
mov
lods
mov
fwait
xchg
push
mov
push
mov
fsubr
mov
add
insb
pop
cmpsw
cmp
adc
adc
mov
movsb
push
ret
add
repz
push
or
cmpsb
aad
xchg
adc
push
stos
push
cmc
jle
push
popf
gs
or
out
pusha
mov
dec
or
ds
lock
fcomps
imul
push
negb
repnz
and
push
mov
int
mov
and
push
cmp
les
test
clc
cmc
iret
lock
dec
mov
jno
and
sar
push
xor
cwtl
scas
mov
loopne
clc
dec
cmp
cmp
int3
scas
clc
popa
jl
pop
add
insl
out
out
in
jmp
das
and
fildll
mov
xchg
dec
int
mov
xor
ja
pop
dec
in
dec
sub
or
add
into
fs
mov
test
xchg
sbb
scas
rorb
and
mov
cmc
add
clc
sbb
mov
outsl
js,pt
push
ljmp
ja
adc
or
add
les
sub
call
xchg
jnp
lods
insl
nop
in
cmp
leave
arpl
orb
lods
into
sub
cs
and
leave
int
lcall
test
lock
fists
test
cli
xchg
je
sub
subl
sti
insl
out
ljmp
testl
inc
imul
xchg
stos
stos
hlt
inc
fmull
dec
cli
xor
pusha
sub
stc
or
int
cmpsl
popa
out
outsl
and
hlt
js
test
in
dec
pop
dec
js
dec
xchg
ss
cs
rcl
pushf
scas
xchg
or
lahf
test
adc
mov
hlt
xor
dec
or
scas
cmp
sub
mov
cs
stos
sbb
fsubrl
adc
adc
in
cmp
stos
push
xor
lahf
clc
outsb
arpl
xchg
jp
into
or
test
lea
insl
sub
lcall
arpl
in
dec
inc
add
mov
test
data16
test
or
and
pop
sbb
ret
mov
outsb
mov
outsl
add
in
loop
or
popf
clc
ret
sahf
jmp
jb
lds
data16
adc
callw
mov
and
jg
ret
inc
stc
lret
mov
jmp
enter
mov
dec
repz
int
out
lea
lds
xchg
sub
sbb
fwait
dec
or
lea
in
jp
push
inc
leave
sub
jo
shll
hlt
inc
out
into
test
push
sub
imul
inc
xor
outsb
subl
mov
push
ja
inc
lret
pusha
jle
pop
lods
xchg
pusha
ret
jg
out
mov
test
jbe
push
mov
add
rep
bound
pop
fldt
jecxz
adc
mov
mov
dec
inc
js
scas
xlat
pop
xchg
cmc
sub
push
out
out
xor
jle
roll
mov
in
popa
int
adc
sub
jecxz
push
jbe
and
add
sub
jb
scas
fwait
prefetchw
int
adc
jmp
mov
and
jne
test
ljmp
push
jecxz
add
lods
mov
jbe
sbb
pusha
xlat
nop
and
or
or
out
insb
xchg
into
jmp
push
ret
sub
test
inc
fldt
popl
cmpl
or
fwait
cld
dec
and
outsl
test
pop
insl
sub
add
dec
and
push
shlb
loop
fcmovne
out
stos
dec
dec
jns
out
insl
scas
insb
imull
iret
gs
mov
mov
xchg
out
leave
test
push
movb
int3
bound
jmp
movsl
scas
jecxz
sbb
dec
adc
jno
xchg
lods
cmovge
xchg
or
scas
int
add
clc
push
je
mov
jmp
mov
jg
out
stos
fadd
mov
mov
and
sub
sbb
pop
lret
leave
addr16
jg
lea
fdivr
outsb
mov
test
dec
movsl
mov
out
imul
add
stos
in
test
dec
into
cs
push
mov
add
dec
lea
dec
stos
test
jns
rol
jle
lcall
out
lret
and
xchg
stos
rorl
in
iret
sahf
arpl
outsb
inc
ret
jns
or
jg
bound
inc
addr16
mov
repz
jmp
adc
sub
mov
subl
jmp
jge
movsb
arpl
nop
outsb
iret
ror
arpl
jg
outsb
lods
cmp
cmpsb
int
add
mov
and
dec
push
cwtl
fldcw
lea
cmovl
scas
push
arpl
out
xlat
enter
push
push
test
cmp
fucomp
int3
repz
mov
test
insl
jbe
daa
inc
scas
add
fs
jbe
shrl
pop
add
in
mov
shlb
push
cmpsb
lea
loope
arpl
push
mov
xchg
mov
jmp
arpl
add
dec
push
jmp
push
sub
loope
ljmp
and
into
inc
cmp
scas
scas
or
imul
mov
ret
adc
jge
into
adc
xchg
lock
lods
and
sbb
mov
mov
inc
out
clc
dec
jbe
xchg
loope
jl
bound
gs
cmc
mov
fnsave
pop
es
mov
ljmp
out
mov
and
cmp
lret
ret
out
leave
mov
shr
push
dec
hlt
xchg
or
scas
or
inc
mov
sbb
jl
mov
dec
jmp
repnz
mov
lret
subl
add
cli
outsb
out
insl
bound
sub
sbbb
pop
insl
fdivl
lret
add
jl
leave
dec
jecxz
dec
into
lea
adc
mov
sub
mov
jb
int3
leave
and
popa
mov
sub
xchg
int
push
out
insl
cmpl
arpl
inc
dec
stos
mov
lea
or
xchg
push
arpl
lock
ss
pop
pop
dec
insl
movntq
out
jmp
shl
lret
ljmp
int3
fnstcw
inc
or
lret
daa
daa
addr16
or
flds
mul
scas
adc
sbb
and
dec
mov
decl
scas
xchg
in
jle
out
mov
into
ljmp
cmp
sub
fdivr
ja
iret
or
xchg
jmp
out
insl
mov
es
out
subl
and
jnp
dec
inc
mov
push
outsl
imul
jmp
mov
jge
in
push
cmp
or
movsb
call
jg
fistpll
sub
jmp
fndisi(8087
jmp
inc
pop
push
push
pop
sarb
scas
mov
bound
fistpll
mov
jno
out
mov
mov
leave
dec
dec
popa
adc
sbb
rclb
arpl
or
mov
in
sbb
out
dec
jb
add
jle
pop
jge
dec
outsl
or
cmp
sub
movb
jge
enter
jns
jge
imul
dec
or
pop
xchg
jecxz
push
sbb
mov
cmp
fisubl
inc
dec
and
nop
leave
bound
je
ljmp
push
and
xor
xor
pop
ret
stos
dec
fsubrp
sub
sbb
sbb
cmp
fcomi
mov
int
dec
jne
ljmp
mov
dec
xorl
push
aaa
or
sub
lea
ret
fists
repz
jl
out
push
lods
cs
jecxz
arpl
es
loope
cmpl
aad
mov
add
or
leave
dec
out
jno
dec
out
mov
ss
xchg
lahf
push
orl
or
out
test
or
orl
mov
repnz
lods
je
mov
sbb
sub
jmp
or
xor
mov
and
aas
sub
out
add
mov
xchg
into
xchg
mov
leave
dec
mov
or
dec
hlt
mov
ss
outsl
int
movsl
xor
repz
insb
jo
dec
push
int
push
mov
fucom
inc
fistl
push
pushf
xchg
dec
sbb
xchg
leave
or
sahf
or
lahf
mov
mov
cmpsb
dec
out
shlb
jmp
xlat
stos
mov
and
das
xchg
sub
mov
push
into
out
dec
jg
inc
sbb
lods
lret
cltd
outsb
mov
and
mov
lods
sbbl
cmp
and
jl
mov
add
cs
mov
outsl
nop
jecxz
shll
mov
out
mov
or
push
movsl
mov
dec
imul
cld
scas
jbe
sub
test
rcll
ljmp
mov
lds
push
mov
sbb
in
repnz
push
jns
dec
or
arpl
adc
adc
jmp
mov
sub
scas
out
call
movb
lock
incl
mov
ret
mov
sub
sarl
or
sub
jmp
mov
mov
fwait
int
loope
mov
es
sub
mov
int
cltd
mov
sbb
insb
push
mov
add
nop
xchg
leave
ret
rorl
adcb
lods
arpl
aaa
roll
mov
leave
push
mov
out
push
scas
dec
je
inc
and
out
in
into
xchg
aaa
cli
iret
out
jbe
out
mov
in
arpl
loop
and
mov
sbb
mul
outsb
pop
out
imull
lods
arpl
mov
sbbb
stos
out
dec
out
push
lds
inc
mov
xchg
into
out
jl
das
outsb
jecxz
or
fisttps
call
orl
cmp
std
and
fwait
dec
out
mov
push
inc
sub
jecxz
test
jno
lahf
mov
dec
jne
xor
mov
in
outsb
push
push
sbb
insb
ss
out
jecxz
scas
cmpsb
arpl
xchg
ja
fyl2x
push
stos
scas
cmp
lea
loopne
shll
mov
push
sub
pop
lret
gs
or
cli
daa
push
pushf
sub
mov
testb
imul
movsl
jecxz
jl
sub
out
mov
outsb
arpl
sbb
sub
dec
loopne
popa
dec
and
int
dec
cltd
addr16
inc
andl
sub
shl
jbe
mov
aad
out
stos
outsb
int
xchg
imul
xorl
subl
loope
mov
jle
push
imul
clc
out
sub
lods
loope
ret
outsl
cmp
loopne
movsl
out
mov
xchg
sbb
xchg
imul
dec
push
xchg
dec
lods
or
cs
into
outsb
ds
ja
fldt
dec
insb
mov
mov
or
sub
das
bound
aas
test
push
decb
lcall
in
ljmp
sbb
jmp
sub
push
or
test
jg
dec
scas
jecxz
lods
stos
push
add
rorl
cltd
fbld
arpl
mov
mov
sbb
fwait
and
outsl
shll
cmp
rcrl
jmp
or
mov
ljmp
cs
subl
cmovno
mov
stos
in
adc
roll
add
insb
ret
push
out
add
scas
stc
sub
inc
dec
movsl
cmp
or
loope
pop
das
ffreep
filds
xchg
test
sbb
je
insl
dec
scas
and
mov
popl
clc
into
scas
mov
hlt
cs
ja
dec
ret
stos
test
enter
dec
pminsw
dec
aam
cmpsb
cmp
ret
cltd
sahf
movsl
sub
xchg
xchg
xchg
cmp
sub
stos
shl
gs
mov
ret
jbe
jns
js
mov
out
sub
ret
inc
xchg
pop
or
push
insl
lods
int3
scas
movsl
stos
mov
fwait
daa
scas
test
ja
incl
mov
fs
loope
insl
stos
imul
push
xor
pop
aas
hlt
sbb
push
scas
jbe
or
pop
movsb
into
lret
mov
lods
mov
lea
mov
sub
mov
mov
leave
out
out
out
push
pop
orb
rorl
and
std
mov
mov
and
mov
insl
inc
ljmp
ret
enter
imul
stos
ljmp
pop
arpl
out
add
mov
cmp
sub
push
jge
xlat
ret
pop
clc
popa
push
mov
jne
sti
jmp
stos
jo
xchg
popf
jnp
popa
mov
pop
pop
test
je
nop
cmp
pop
cs
dec
stos
cmp
js
inc
jmp
xchg
cli
lret
sbb
arpl
dec
cs
or
pop
cmp
imul
repz
insb
loopne
and
adc
inc
dec
xor
pusha
mov
mov
pop
outsb
jb
lock
and
insl
insl
mov
scas
pop
jp
cmp
int
sub
jno
xlat
popa
xor
addr16
outsb
imul
nop
loope
lea
fwait
push
popl
dec
or
jg
sti
out
mov
outsb
or
arpl
test
mov
mov
decl
jb
xor
enter
scas
cltd
or
insl
loope
push
mov
dec
insl
scas
shr
push
jns
into
cltd
mov
test
push
jmp
mov
dec
hlt
cmpsl
pop
dec
loope
out
movsb
add
jb
sub
outsl
ret
int3
faddl
or
dec
int
out
clc
imul
ds
mov
jb
fdivl
dec
arpl
movsl
mov
out
scas
imull
out
lds
aaa
lea
dec
pop
loope
xchg
jmp
mov
dec
scas
mov
insb
add
das
ljmp
push
mov
incb
in
test
mov
and
push
or
mov
cmpsl
mov
xchg
fists
mov
clc
add
dec
lods
lret
jle
push
push
push
add
call
loope
stos
in
jne
and
fs
dec
push
in
sbb
mov
inc
and
cs
ret
out
and
cltd
adc
lret
inc
out
scas
xchg
iret
mov
decl
xchg
mov
sbb
stos
bnd
bound
imul
or
stos
xchg
cmp
addl
xchg
in
inc
and
jecxz
in
bound
lret
inc
fcoms
cs
fbstp
stos
mov
iret
orl
loope
push
nop
into
mov
test
lds
bound
test
push
add
and
or
pop
jp
into
repnz
prefetchw
xchg
out
and
sub
jbe
movsl
jecxz
test
dec
roll
xchg
scas
mov
pop
jno
fwait
dec
mov
add
jno
mov
inc
jp
sahf
imul
lods
push
into
nop
add
dec
dec
xchg
cmp
push
cs
cmpsb
pop
jmp
mov
inc
adc
jp
in
loop
add
pop
dec
stc
sub
cmp
scas
lds
lahf
test
stc
mov
adc
mov
sub
and
in
inc
fmuls
jmp
mov
subl
je
iret
and
cmp
push
fs
mov
orl
insl
mov
cltd
mov
dec
sub
or
xor
mov
push
leave
mov
bound
mov
jb
movsl
das
push
out
cmp
sub
in
repz
lea
mov
sub
mov
inc
test
jbe
loop
leave
fsub
cs
inc
or
adc
jl
insl
lea
out
mov
adc
into
dec
dec
or
je
test
mov
outsb
push
int
es
dec
cmp
cli
add
lods
dec
lock
imul
out
inc
insb
push
nop
test
or
out
cs
cmp
insb
orb
inc
test
sub
fimull
push
lods
jne
xlat
inc
push
dec
dec
outsl
iret
or
add
cmpsl
mov
adc
in
inc
or
scas
repz
enter
into
test
ss
lahf
sub
mov
push
jno
sub
jo
bound
adc
popa
in
mov
pop
outsb
testb
faddp
subl
xchg
ret
cmp
and
xchg
out
ret
fs
mov
inc
pop
lods
cmpsb
mov
outsb
dec
jg
loop
adc
xor
scas
dec
dec
jg
insl
loope
scas
hlt
jecxz
fldcw
add
rcrl
setg
lret
jo
popa
std
lods
mov
int
pop
ljmp
repnz
adc
subl
dec
mov
imul
popl
imul
lods
mov
clc
leave
sub
jno
inc
mov
lds
xchg
mov
nop
jg
dec
insl
out
loope
jmp
icebp
jmp
pop
inc
test
xlat
scas
or
cmovb
icebp
pushf
jae
out
or
repnz
out
loopw
jecxz
iret
frndint
ret
mov
scas
aam
dec
icebp
fucomp
mov
call
ret
js
test
out
inc
arpl
test
incl
jbe
lahf
mov
mov
test
ret
cs
dec
outsb
lea
xchg
sti
test
or
popa
add
ret
and
outsb
bound
mov
daa
dec
scas
imul
pusha
outsl
popl
arpl
sub
inc
inc
mov
popf
jnp
and
leave
bound
lahf
das
dec
push
mov
or
int
scas
fsubrp
jecxz
bound
out
inc
sub
test
sbb
popa
sub
push
call
and
sbb
bound
test
lock
stc
stos
popa
dec
lods
ret
int
ds
dec
xchg
clc
insb
arpl
outsl
mov
int
lock
out
xchg
call
lds
insl
iret
cmpsl
jl
lret
mov
leave
mov
out
cmp
subb
ja
sub
cmp
inc
jmp
or
dec
sub
aaa
mov
mov
xlat
popf
mov
add
hlt
testl
stos
ljmp
lods
repnz
xchg
leave
imul
add
xor
ljmp
jns
lods
inc
arpl
imul
and
jno
scas
mov
lcall
out
in
loope
inc
arpl
or
xchg
inc
xchg
jmp
sbb
pop
ret
and
outsb
sti
std
lods
scas
push
popa
or
stos
xchg
dec
subb
clc
into
sub
dec
inc
or
add
in
dec
or
mov
insl
scas
jno
into
mov
daa
or
outsl
add
bound
cmpsb
test
sub
mov
int
sub
jno
imul
jl
cwtl
mov
lret
int3
pop
and
inc
out
orl
dec
dec
mov
cs
or
stos
lret
out
jg
mov
loop
sbb
in
decl
arpl
daa
push
jo
and
dec
mov
ja
cs
fs
mov
call
jnp
loope
or
mov
jo,pt
mov
int
dec
test
lods
mov
out
sub
inc
jmp
je
loope
out
jne
pop
test
inc
jns
xchg
fsubp
mov
daa
daa
or
test
dec
ret
xchg
fwait
pop
add
lcall
js
mov
or
jbe
movsl
dec
add
sub
and
imul
mov
sbb
je
stos
subb
arpl
lods
mov
lea
jl
outsb
lods
into
and
dec
cmpb
les
add
iret
in
fwait
and
jb
mov
and
push
xor
xor
sub
stos
sbbl
add
cmpsl
and
xchg
and
mov
bound
cmp
sub
dec
push
dec
xor
out
or
out
xchg
enter
fldcw
pop
sub
sub
daa
dec
lds
fs
arpl
lds
js
loope
ror
mov
or
dec
xchg
sbb
scas
je
nop
push
sub
jbe
mov
movsl
dec
push
iret
dec
jbe
dec
bound
aad
mov
push
sbb
data16
jb
and
lea
ret
push
pop
pop
sub
dec
movsb
loop
add
jb
arpl
xor
and
sub
cld
jge
lds
jmp
ret
shrb
mov
push
dec
jecxz
sub
addr16
rorb
es
mov
ret
js
test
xchg
xor
sub
rorl
outsb
imul
outsb
or
mov
pop
ffreep
out
rorb
insl
mov
cmp
in
inc
rorl
mov
mov
ret
fsubr
jp
in
jmp
mov
dec
sub
sub
outsb
out
inc
out
lock
inc
scas
inc
dec
mov
bound
ret
sahf
in
mov
mov
dec
jb,pn
lods
out
nop
jo
mov
inc
sub
into
stos
in
mov
andl
arpl
add
pop
stos
add
and
inc
lret
rorl
fdivr
jecxz
insl
mov
dec
jl
add
ljmp
scas
ret
mov
sbb
sub
aas
fucomi
arpl
fidivs
add
push
pop
repnz
in
inc
insl
ret
sub
ret
iret
push
leave
dec
cli
mov
mov
mov
sub
mov
dec
mov
cmp
mov
scas
leave
lret
outsb
leave
in
jb
arpl
lds
sbb
daa
stos
push
lods
mov
sbb
loope
iret
das
nop
arpl
dec
inc
mov
bound
add
inc
outsb
dec
test
scas
or
loope
nop
lret
lods
sub
cli
xlat
and
push
and
add
jl
mov
subl
out
lds
pop
dec
gs
adc
aad
mov
popa
push
in
xchg
clc
ljmp
mov
fwait
out
mov
iret
sahf
outsl
insb
out
arpl
inc
sti
push
lods
jmp
scas
ljmp
inc
pop
rcrl
jge
jbe
outsb
movsb
xor
bound
jbe
js
or
pop
jmp
pop
jecxz
push
xlat
mov
xor
pusha
mov
mov
scas
imul
arpl
jne
jnp
and
sub
out
sbb
iret
call
lods
aam
and
stc
add
and
mov
jno
sahf
jecxz
loop
in
mov
inc
sub
lret
js
lea
arpl
xchg
mov
in
daa
stc
or
push
out
repnz
shll
clc
arpl
mov
xchg
loope
js
mov
xchg
xor
mov
mov
insl
subl
xchg
and
in
cli
and
dec
dec
and
lods
jbe
inc
add
stc
xchg
in
adc
aam
roll
pop
ret
or
jnp
dec
into
mov
repz
sbb
arpl
sub
scas
popa
mov
lds
or
repnz
arpl
mov
or
nop
movsl
or
add
mov
xor
outsb
jmp
cmp
js
bound
in
sbb
add
jp
les
cmc
cmp
dec
and
dec
bound
stos
jge
cmp
inc
jecxz
outsl
and
push
movsb
aad
test
in
out
popa
mov
push
add
in
inc
sub
movsb
push
ror
stos
bound
dec
int
mov
subb
xor
sub
outsl
or
dec
and
pop
adc
loope
jns
dec
lods
mov
push
jno
test
mov
in
pop
outsb
and
psllq
sub
scas
sub
outsl
sub
insb
xor
stos
popa
jne
jb
ss
icebp
subl
inc
jbe
les
lock
out
arpl
addr16
and
pop
in
pop
adc
stos
sub
mulb
lea
lret
andl
in
lea
jg
clc
daa
push
mov
and
imul
jge
js
in
ret
jnp
test
das
out
sti
sub
mov
ret
cmp
nop
leave
push
arpl
loop
shrl
add
dec
leave
mov
or
sub
mov
push
inc
addl
and
lret
bound
xchg
mov
and
mov
stos
inc
dec
mov
sahf
insl
sbb
popa
cmp
das
xchg
movsb
jg
imul
jns
xor
jmp
sbb
jns
fisubrl
loope
scas
add
sti
inc
nop
and
mov
leave
dec
dec
lock
mov
inc
adc
and
scas
sub
mov
adc
dec
mov
movaps
ret
ss
lds
add
das
in
test
xchg
insl
imul
shl
sub
sub
test
fildll
mov
or
adc
jge
or
imul
insl
ljmp
in
dec
outsb
inc
cmp
pop
add
mov
and
jl
scas
int
lcall
ljmp
enter
arpl
push
cmp
push
and
sti
dec
test
fcmovnu
adcl
sub
add
adc
dec
push
cmp
jp
cld
xlat
jae
or
loope
or
jp
or
addl
xor
xor
es
push
fisttpl
out
jmp
dec
rcl
push
ja
cmp
outsl
in
add
sub
ljmp
nop
lcall
ljmp
cltd
mov
test
and
xor
cmp
es
scas
into
sub
subl
lcall
dec
cld
xor
das
orl
lret
out
insl
mov
movswl
sub
and
sub
xchg
push
mov
xorl
jnp
and
arpl
into
sbb
dec
insl
test
and
outsl
inc
inc
adc
bound
lcall
popa
lods
jno
push
stos
out
iret
subl
imul
dec
sbb
mov
lahf
shll
sbb
dec
mov
mov
scas
outsl
inc
loop
sti
leave
inc
jecxz
pop
cmp
popa
lods
mov
test
mov
insb
insl
stos
push
loope
cs
dec
scas
add
pushf
mov
das
xchg
aam
call
popa
shrl
fs
ja
adc
sub
roll
fisubs
ja
lds
or
test
fldt
outsl
sub
loope
bound
nop
push
lds
test
push
in
adc
sbb
das
popa
out
cs
scas
out
mov
shl
lods
mov
mov
jmp
shr
dec
lcall
out
mov
sub
dec
in
cmp
stc
sub
sub
add
js
out
inc
and
mov
mov
xor
lods
dec
out
sub
in
insl
scas
aad
dec
arpl
iret
ret
sub
inc
arpl
roll
ret
mov
mov
pop
imul
loope
inc
and
insl
mov
dec
nop
imull
clc
xor
aad
or
out
popl
xchg
pusha
out
dec
jne
push
movq
popa
push
ficomps
das
mov
es
inc
std
lret
inc
nop
jns
test
pop
scas
nop
mov
mov
mov
in
mov
inc
stos
test
and
push
mov
xor
lock
ss
stos
mov
push
adc
push
jl
or
dec
sub
mov
test
add
scas
adc
ljmp
dec
ret
dec
fiaddl
movsb
and
push
out
fwait
xor
pop
add
outsb
inc
outsl
mov
mov
push
or
addl
outsl
jg
dec
mov
and
xor
cmp
arpl
outsb
mov
lea
stos
cmpsb
push
in
xchg
inc
and
mov
xchg
iret
outsl
inc
scas
outsb
es
out
mov
sti
dec
lods
insl
bound
andl
and
mov
repz
and
das
outsb
mov
mov
mov
jg
dec
out
sbb
add
lahf
dec
add
lret
lea
test
rclb
std
bound
dec
loope
xor
loop
lcall
mov
jg
shld
lret
or
popf
mov
inc
jp
or
scas
insl
jp
mov
xlat
cld
lds
xchg
xchg
fwait
ret
jo
insl
or
bound
es
outsl
clc
add
xchg
inc
push
test
xchg
stos
pop
sub
jne
dec
popa
and
jp
clc
dec
mul
mov
adc
push
sub
inc
out
mov
orl
or
movsl
jl
add
or
sub
daa
ret
addr16
repnz
and
imul
psubb
repnz
jp
jo
or
es
xchg
dec
dec
pop
or
dec
iret
pop
insb
ss
or
bound
mov
lods
jns
jle
and
into
mov
dec
subl
or
lods
ljmp
xor
push
jp
dec
arpl
cmc
mov
cmpsb
jmp
xorl
bound
fisttpl
dec
repz
or
jno
insl
aam
jnp
leave
test
test
hlt
pop
sub
or
or
insb
xchg
push
outsl
add
mov
stos
jae
cld
incb
cs
xchg
lods
scas
mov
sarl
mov
fs
dec
mov
and
scas
iret
sub
cli
cmpsb
mov
rcl
cs
inc
pushf
sub
mov
mov
inc
leave
xchg
out
ret
cmp
cmovno
lods
add
test
jmp
insb
and
ret
in
fisttpl
mov
add
loope
sbb
pop
push
mov
arpl
std
arpl
arpl
daa
cltd
gs
push
jmp
push
lret
or
outsb
mov
into
jb
daa
leave
or
loop
fwait
outsl
and
filds
cli
push
call
insl
nop
test
mov
bound
sub
jne
gs
dec
test
test
and
stos
out
xchg
jo
imul
jecxz
sub
xor
std
cmp
add
mov
je
ljmp
leave
arpl
and
push
paddsw
mov
lods
dec
inc
shl
jmp
or
in
imul
jecxz
popa
in
ljmp
jecxz
shrb
loopne
mov
cmovg
insl
outsb
fldcw
push
test
fbld
mov
scas
scas
ljmp
insl
or
mov
int3
addl
jecxz
out
jmp
inc
sub
or
or
leave
dec
arpl
sub
push
dec
sarl
sub
and
or
mov
int
xor
jmp
popa
andl
in
loope
stos
lea
arpl
jl
leave
andb
and
push
stos
ror
sub
out
sti
outsl
add
jne
lods
insl
dec
rorb
or
push
or
lods
subl
inc
sbb
cs
hlt
out
jb
xor
mov
xchg
sub
sti
jl
mov
jecxz
or
add
lods
dec
mov
mov
ret
jmp
mov
in
sbb
int
ret
outsb
insl
xor
cmp
mov
cli
out
lods
into
mov
aad
int
in
cltd
push
jecxz
mov
outsb
filds
je
dec
roll
lods
inc
xor
enter
dec
sub
leave
dec
or
scas
xchg
sbb
sub
ljmp
mov
pop
jo
outsb
sysret
test
sbb
cltd
push
jp
sub
imull
xchg
jnp
ret
sub
lods
push
dec
sub
mov
jns
popa
out
movsl
mov
pushw
inc
and
shll
dec
mov
cld
lret
mov
lea
mov
in
mov
dec
pop
mov
ret
jne
dec
clc
pop
xchg
inc
sub
je
push
es
jecxz
add
xor
jmp
lock
add
shr
mov
dec
jnp
scas
dec
scas
sub
popa
lcall
push
or
and
out
inc
inc
popa
arpl
cld
je
and
push
add
and
and
popl
xchg
add
xor
cli
into
in
imul
lea
scas
xorl
add
cmp
sub
addl
mov
aaa
arpl
iret
lods
push
sti
orl
or
cltd
bound
pop
nop
lret
cmc
out
jbe
stos
lods
push
push
insb
adc
add
dec
xchg
and
mov
or
out
test
mov
je
loope
inc
inc
into
popa
insb
fisttps
or
ret
imul
outsl
bound
iret
sub
push
out
or
daa
ret
push
in
and
arpl
insb
outsb
sub
lock
lock
or
mov
xchg
ljmp
dec
lret
sub
rcrl
sbb
subl
adcl
xlat
stos
jno
pusha
repnz
jp
pop
iret
psubsw
es
jecxz
test
leave
test
mov
mov
lods
add
xchg
sub
into
shlb
dec
and
test
mov
xchg
in
jns
push
dec
pand
nop
roll
cmc
cmp
push
icebp
aas
rep
push
push
scas
sub
bswap
jmp
add
mov
insl
mov
xchg
ror
lds
inc
push
scas
pop
or
in
adc
pop
jle
mov
or
dec
mov
push
int3
roll
sub
pop
mov
jo
cs
iret
je
lods
dec
mov
pop
sub
and
imul
jnp
pop
push
dec
outsl
loopne
inc
repz
test
aam
ljmp
sbb
xorl
imul
dec
test
addr16
xor
lahf
pop
popl
lods
fs
scas
stos
or
jp
mov
inc
ret
push
stos
pop
leave
dec
outsb
dec
jno
daa
dec
incb
into
jmp
mov
add
and
decl
insl
cltd
out
fcmovne
xchg
pop
push
or
xorl
mov
add
sub
dec
jmp
nop
je
into
or
in
ljmp
push
lock
cld
popa
scas
clc
sub
fs
out
jmp
xor
sub
outsl
clc
push
arpl
pop
inc
iret
call
mov
add
xchg
cwtl
or
in
popa
into
and
testb
sti
scas
jecxz
or
imul
ror
ret
clc
insl
inc
push
scas
mov
loop
mov
and
inc
iret
lret
or
enter
ja
sbb
push
cmpsb
and
popl
mov
mov
push
movsl
insl
jl
dec
outsb
loope
scas
insl
dec
pop
les
or
aam
clc
add
lret
mov
and
pop
sub
dec
into
mov
xchg
outsl
jmp
and
mov
adc
lcall
jno
adc
rcll
outsl
and
arpl
or
jb
loope
into
jne
mov
lcall
inc
test
lods
loope
add
push
cmc
insb
pushf
lods
scas
mov
and
and
imul
das
jmp
dec
lret
xchg
mov
dec
sub
mov
sub
pop
fsubrl
arpl
sbb
inc
mov
fiaddl
jecxz
adc
mov
xchg
pop
mov
stos
loope
adc
adc
ja
je
add
mov
mov
jecxz
jg
addr16
jp
and
scas
insb
cmpsl
orl
pushf
and
shrl
sub
imul
push
insl
ret
or
test
xor
or
mov
lods
outsl
aaa
incb
subl
jle
lea
leave
cmp
cmp
bound
inc
lea
mov
movsb
jae
insl
jb
leave
dec
out
sbb
xchg
xchg
mov
outsb
outsl
pop
jnp
dec
mov
mov
nop
add
mov
in
loope
popa
inc
sub
movl
iret
jne
in
mov
and
push
out
sub
lock
or
jb
sbb
sub
outsb
dec
fiaddl
jecxz
stos
xchg
out
scas
scas
repnz
into
mov
outsl
cmp
or
xchg
out
sub
cmp
sub
imul
outsl
pop
shrl
out
mov
es
loope
and
popa
insl
mov
mov
jo
mov
push
adc
repnz
sbb
jmp
push
imul
out
fadd
in
fsubl
dec
iret
sub
push
loope
lds
fwait
xchg
ret
or
jmp
adc
popa
stos
sbb
iret
mov
ret
scas
inc
sub
insb
mov
inc
lods
in
cmp
push
mov
cmc
add
dec
mov
jb
jecxz
inc
lret
lods
je
dec
leave
ret
test
sub
daa
int
mov
adc
decb
inc
ret
jecxz
mov
stos
jae
shll
mov
inc
push
iret
into
inc
jb
nop
jno
pushf
mov
cmc
cmp
fs
scas
jno
dec
mov
out
add
shll
pop
jbe
add
or
arpl
in
fimuls
scas
and
or
jnp
add
ret
jae
dec
ljmp
fldt
jmp
push
imul
xchg
mov
mov
inc
cmp
mov
xchg
ljmp
push
lret
inc
sub
lret
push
dec
filds
sahf
dec
push
out
and
or
dec
fcmove
cmc
jns
subl
inc
arpl
std
pop
inc
mov
push
daa
int
xchg
or
outsb
jmp
sbb
cmp
test
vmwrite
sbb
mul
inc
xlat
mov
xor
in
push
lods
ror
and
bound
int
xlat
adc
es
mov
aam
dec
es
jl
sub
inc
cs
inc
push
pop
or
movsb
sub
imul
imul
sub
add
out
pop
mov
lahf
rorb
push
jbe
pop
imul
ret
push
inc
andl
jp
add
aaa
lds
mov
movsl
mov
mov
imul
add
shrl
test
mov
cmp
push
dec
mov
jb
loop
cs
movsl
dec
jecxz
sub
jns
jo
sub
mov
stos
adc
xchg
inc
ljmp
movsl
iret
push
es
aad
out
mov
or
fcmovne
mov
adc
out
nop
icebp
dec
stos
or
push
dec
int
popa
dec
sub
jbe
jg
push
into
je
sub
mov
arpl
inc
arpl
inc
insl
aam
arpl
ja
push
cmpl
add
dec
ljmp
xchg
imul
sub
dec
mov
lret
outsb
adc
cmp
jo
outsl
arpl
jle
push
dec
cli
sub
sub
mov
push
jecxz
out
jmp
aam
enter
daa
orl
dec
int
push
xchg
pop
xchg
andl
rcr
cmpsl
dec
adc
fwait
das
add
outsb
dec
push
inc
icebp
insl
add
andl
inc
fildl
sub
test
jne
adc
scas
or
lret
popa
mov
add
orl
out
arpl
pop
cmp
xor
stos
dec
dec
stos
imul
jmp
xor
arpl
ljmp
sub
in
das
dec
out
mov
push
jmp
clc
addl
mov
mov
jmp
mov
loope
push
pushf
ficomps
dec
mov
or
int
mov
scas
ret
loope
outsb
fs
int
into
sub
bound
lahf
jns
arpl
sub
addl
push
bound
push
dec
nop
lock
in
inc
and
push
push
into
cld
mov
mov
mov
js
loope
test
mov
adcl
nop
ret
inc
or
out
dec
or
or
or
out
jo
into
dec
and
jbe
mov
xchg
xchg
fstpt
int
in
inc
sub
in
out
popa
pop
jo
or
out
add
arpl
cs
arpl
sub
out
xchg
sub
jne
jb
and
add
leave
dec
sub
sub
sub
insl
push
rorb
pop
insb
pop
sub
into
and
mov
mov
sti
sbb
jmp
lahf
mov
out
add
dec
lods
clc
or
dec
ljmp
inc
pop
ret
es
or
lea
jp
inc
imul
mov
test
cmpl
outsb
scas
adc
popa
or
std
lods
dec
test
leave
clc
cmp
outsb
push
scas
ljmp
loope
and
lret
outsb
add
or
xchg
loope
bound
mov
scas
subl
mov
push
cmc
stc
stos
push
or
aad
outsl
mov
push
iret
jmp
and
cs
mov
cmp
push
das
jmp
loope
lea
lods
jns
adc
lret
enter
scas
stos
push
jmp
or
imul
scas
push
mov
inc
fstpt
add
jns
ret
outsl
mov
jmp
jmp
je
mov
in
imul
je
aad
int
test
jecxz
push
iret
push
popf
in
arpl
pop
mov
mov
sbb
outsl
dec
arpl
push
fcmovnu
sub
rcr
xchg
iret
ffree
dec
fucomip
je
or
leave
lods
ja
outsl
adc
les
or
push
es
bound
jno
clc
dec
stc
xchg
dec
lods
ret
mov
push
inc
sbb
fstps
fucom
lock
jmp
pushl
fwait
out
test
and
jb
mov
mov
mov
in
and
fisttpl
mov
daa
push
and
inc
or
and
dec
fs
add
lock
push
test
mov
outsb
lods
sbb
add
dec
es
subl
fnstcw
leave
xor
stc
outsb
popa
das
scas
mov
push
lret
mov
mov
sub
mov
addl
jo
mov
lcall
jb
sub
jno
call
leave
or
push
lret
pop
add
outsl
cmpxchg
int
test
mov
mov
or
mov
sub
inc
push
and
sub
mov
in
dec
test
ljmp
sub
push
mov
mov
es
or
lea
cltd
push
ret
push
pop
pop
jp
test
xor
add
and
mov
outsl
jle
scas
mov
scas
and
xchg
push
inc
enter
inc
jecxz
iret
and
pop
es
add
jge
loope
shlb
movsl
or
pop
jnp
test
std
ljmp
iret
add
sub
mov
and
add
arpl
jbe
dec
ret
and
repnz
pusha
dec
or
mov
inc
outsb
jge
stos
jle
popa
std
jg
inc
out
mov
and
mov
sub
jp
mov
sub
ds
clc
cli
out
sub
and
mov
and
mov
daa
popl
loop
sub
ljmp
cmp
ret
jbe
arpl
xchg
insl
jnp
stos
jecxz
mov
aas
ret
repnz
into
ljmp
test
cmp
repnz
andb
insl
stc
dec
mov
cmp
dec
or
mov
ds
popf
ljmp
inc
je
test
cs
shll
sub
xchg
cmp
ss
outsl
ret
mov
ja
sub
shrl
jae
bound
out
lcall
rcl
lods
shr
fldenv
sub
or
in
je
dec
test
add
sub
inc
and
es
icebp
jb
loop
in
mov
and
jo
bound
mov
dec
jb
and
push
sub
in
int3
jl
lea
enter
fildl
inc
roll
mov
arpl
insb
iret
sub
ss
popa
cli
sarb
out
clc
stc
and
mov
mov
mov
and
outsl
cltd
loop
mov
cwtl
add
ja
test
lea
jmp
inc
jmp
movsl
push
subl
ljmp
mov
sbb
jle
sub
cmp
push
ljmp
scas
pop
or
nop
je
scas
ret
outsl
loop
mov
mov
jb
hlt
addl
inc
jno
and
fwait
pop
scas
dec
iret
jo
dec
inc
push
mov
inc
insl
mov
or
mov
pop
cmp
inc
add
mov
nop
sarb
push
inc
stos
aam
mov
push
rorl
or
sub
lock
push
imul
lea
mov
sub
jnp
mov
jecxz
cld
mov
add
xchg
xchg
insb
addl
jno,pn
mov
in
fs
xchg
inc
leave
ret
dec
aaa
or
lods
sbb
jl
popa
mov
lock
xchg
arpl
lock
cmp
sub
sbb
imul
push
or
jmp
cli
movsl
inc
outsl
cmp
pusha
setg
orl
push
sti
sub
enter
mov
in
pop
dec
jb
out
xlat
push
subl
iret
or
lods
ljmp
test
fildl
add
inc
dec
das
pop
dec
push
fistl
pcmpeqb
test
popa
arpl
push
int
scas
daa
push
pushf
add
into
xchg
test
mov
mov
mov
push
dec
mov
imulb
cmp
and
ret
stos
inc
int3
out
int
sub
test
js
leave
iret
jb
mov
lret
ljmp
mov
popa
scas
arpl
shll
mov
into
xchg
jge
xchg
clc
shrl
pop
pop
xor
pop
daa
insb
test
or
dec
xor
jns
int
jle
loopne
mov
xorl
dec
nop
fistl
dec
ret
data16
sub
inc
rorb
cs
or
cmp
and
xchg
xlat
dec
push
sbb
cltd
mov
subl
mov
pop
lods
ret
mov
js
inc
mov
stos
jbe
jne
push
inc
dec
xor
stos
test
enter
mov
loop
inc
bound
sti
loope
xorl
mov
cmc
jmp
or
out
int
inc
add
mov
inc
inc
pmulhuw
out
mov
adc
mov
sarb
inc
imul
repz
repz
pop
pop
adc
xor
bound
iret
mov
dec
mov
imul
cmp
imul
mov
bound
add
mov
lods
movsl
jb
pop
inc
in
enter
rorb
cmp
das
mov
xchg
fs
mov
out
push
sarl
sub
lret
and
push
cli
call
jnp
or
jno
imul
clc
nop
in
loope
dec
je
int
lods
scas
ljmp
sub
loope
in
lret
cmp
nop
cld
dec
mov
aas
ret
or
popa
jno
js
lret
in
int
rcrl
inc
ret
mov
sbb
iret
or
cltd
adc
sub
dec
movsl
add
out
fcmovne
fcoml
sti
stos
dec
or
in
pop
mov
mov
jecxz
or
lret
jae
jle
inc
or
jo
dec
arpl
pop
inc
mov
or
std
jne
add
push
icebp
bound
add
mov
sbb
jge
dec
cltd
cmp
lret
ret
mov
inc
sub
movsl
ret
outsb
ret
and
or
mov
mov
inc
or
and
mov
insl
dec
stos
sbb
ret
clc
rorl
inc
nop
sub
fld
mov
nop
popl
mov
movsb
xchg
or
jne
movsl
sub
int
jmp
jne
jns,pn
jbe
lcall
jo
inc
lods
pop
mov
fldenv
lret
jb
and
in
mov
jo
sti
dec
bound
imul
xchg
rorl
ljmp
jecxz
push
jl
ret
push
jmp
ret
andl
outsb
mov
xchg
fnstsw
cmp
idiv
add
mov
sbb
xchg
and
inc
sub
faddl
aad
xor
mov
or
in
jecxz
fldt
outsb
mov
addr16
jb
sub
scas
mov
mov
jg
vmread
mov
insl
inc
or
repz
std
cli
fld
and
out
lea
mov
insb
mov
int
int3
outsb
jne
adc
int
iret
in
ret
nop
faddp
inc
jp
pop
xchg
bound
test
fwait
mov
iret
lods
iret
adc
dec
int
insl
outsb
mov
stos
iret
lcall
insl
jecxz
mov
sub
outsb
xorl
movsb
push
dec
sub
loop
addr16
dec
and
flds
add
mov
xlat
lds
das
or
test
stos
dec
loope
xor
outsl
and
les
mov
xor
jp
movsl
cmp
jecxz
jle
xchg
ret
ret
popa
hlt
jae
out
add
mov
push
lcall
fnstenv
inc
jge
in
jg
daa
add
in
negl
lahf
xor
mov
addr16
frstor
scas
mov
push
js
stos
test
ret
outsl
scas
wbinvd
push
push
add
sti
sub
mov
jo
dec
add
mov
cmp
movsl
mov
dec
push
xor
mov
and
inc
scas
popa
fsubp
adc
xchg
cld
or
imul
mov
cs
outsb
push
xor
inc
pop
jno
jnp
ljmp
xchg
sub
insl
leave
cmp
adc
fwait
sub
dec
sub
sub
dec
bound
adc
pop
out
insb
sti
mov
cwtl
xchg
mov
int
dec
dec
push
dec
pop
subb
pop
imul
push
inc
sbb
inc
pop
dec
sub
adc
ljmp
or
jg
std
mov
sti
out
addr16
arpl
xchg
outsb
test
jb
dec
mov
popf
mov
test
orl
test
pop
push
pop
mov
in
in
add
subl
or
and
jecxz
sub
cmp
mov
stc
fisttpl
adc
dec
in
stos
and
outsl
mov
dec
popa
mov
arpl
lods
imul
lcall
orb
lret
or
lahf
lret
pushf
mov
mov
mov
dec
int
xor
insl
mov
out
ret
ffree
loope
dec
insb
movsb
cs
iret
mov
and
sahf
jl
inc
into
popa
dec
mov
mov
in
cmp
adc
mov
int
or
iret
add
aad
dec
mov
or
lods
pop
popf
push
mov
fisttps
mov
dec
scas
add
scas
lds
dec
addr16
iret
out
dec
and
mov
in
clc
jg
add
sub
popa
punpckldq
or
arpl
mov
add
inc
in
arpl
jmp
mov
push
jl
movsl
dec
dec
sub
sub
sub
sub
add
and
call
stos
xchg
adc
cmp
cltd
test
das
or
fs
or
ret
mov
decb
lods
inc
sub
jno
daa
cs
add
icebp
cmp
imul
mulb
dec
in
sub
scas
test
push
cs
sub
nop
movsb
leave
jns
lds
or
dec
inc
jle
arpl
cmp
jbe
jne
xchg
ljmp
or
sub
nop
out
jmp
out
scas
dec
and
js
popa
loope
orl
inc
in
cld
push
jbe
daa
addl
xor
lret
lret
jnp
cs
push
inc
les
lahf
and
mov
push
imul
repz
je
insl
mov
js
popa
cmpl
bound
insb
mov
ret
in
out
adc
jp
mov
out
fstps
mov
rol
pop
shr
scas
aas
faddp
lods
and
mov
jg
mov
mov
inc
mov
test
dec
sub
nop
push
cmp
scas
add
fimuls
dec
mov
pop
xor
clc
jb
mov
jl
stos
outsb
test
inc
or
leave
cmp
test
xchg
mov
jno
js
shrl
inc
shld
scas
iret
and
inc
addr16
and
mov
push
jp
scas
scas
inc
pushf
outsb
push
inc
push
mov
and
fcmovne
and
les
shll
adc
xor
bound
call
cmp
inc
lods
fildll
das
push
adcb
into
movsb
push
imul
mov
stos
mov
inc
mov
xor
jae
ja
out
lods
stos
stos
imul
shrl
sub
mov
fildll
jae
jno
sub
insl
jno
out
lods
outsl
sub
lods
aad
sbb
popa
xchg
cmc
je
insl
ret
inc
lret
bound
inc
lods
nop
arpl
cwtl
xchg
sub
stos
pusha
loope
mov
adc
lods
cld
add
adc
lds
ljmp
je
clc
loop
ss
loopne
mov
lret
pop
jecxz
scas
ret
dec
push
jb
pop
loop
outsb
and
jbe
stos
fisttpll
xor
xchg
cmp
xchg
es
jecxz
and
in
mov
dec
in
push
hlt
lods
imul
mov
lret
xor
jecxz
push
in
lea
testl
fildl
sub
pop
add
push
wrmsr
cmp
mov
dec
pop
dec
xor
jno
out
cli
insl
push
ss
push
adc
imul
jae
sub
adc
jb
out
inc
fs
test
scas
arpl
mov
mov
or
aaa
inc
sub
sahf
sub
test
sbb
sbbb
sub
mov
into
cld
call
or
and
leave
fisttpl
sub
pop
cmp
loop
daa
mov
lcall
lahf
mov
dec
mov
pushf
out
dec
out
jbe
jb
pop
ljmp
jnp
and
jecxz
sarl
dec
jp
imul
fiaddl
push
or
mov
leave
sub
lahf
mov
lds
mov
push
sbb
js
imul
popl
stc
jg
lds
sbb
outsb
mov
xor
outsb
movsb
out
dec
or
inc
mov
je
in
dec
dec
les
mov
mov
fcoml
arpl
xchg
or
dec
inc
clc
bound
insl
scas
push
xchg
push
push
and
xchg
xor
ljmp
std
cmp
test
imul
das
ljmp
lods
jb
insl
sub
in
out
pop
cmp
stos
sub
sbb
data16
sub
sub
cmp
mov
pop
bound
out
nop
push
mov
outsb
push
imulb
jg
push
test
jmp
cmp
pop
sti
je
cmp
out
leave
loope
imul
cmp
das
mov
mov
test
jo
dec
ret
leave
dec
into
pcmpeqb
or
arpl
lods
lret
push
subl
dec
aas
ret
arpl
mov
sbbl
inc
mov
xchg
sti
femms
dec
repz
inc
and
pop
out
ja
fs
inc
pop
mov
ret
dec
out
iret
push
pop
popa
nop
popf
mov
repz
jl
dec
mov
scas
xorl
sbb
out
add
mov
xor
mov
subb
inc
out
ret
mov
or
out
jo
ljmp
push
das
dec
int
rcrl
or
inc
mov
cs
iret
mov
stos
pop
inc
mov
push
insl
mov
mov
mov
into
xchg
inc
xor
shrl
inc
insl
out
xchg
in
addr16
popf
xlat
fistl
or
dec
add
jg
nop
mov
xchg
jecxz
sbb
test
push
mov
mov
aad
jne
repz
xor
lret
dec
idivb
lods
sti
rorb
ja
movsl
arpl
or
in
int
cmc
leave
int
mov
aad
imul
subl
xchg
stos
fucomi
sub
lahf
call
lahf
sti
mov
loope
ljmp
cmp
jecxz
lods
bound
sti
pop
mov
lds
cmc
push
mov
outsb
sub
in
push
push
loop
insl
repz
dec
insl
arpl
lret
out
subl
xor
jb
stos
sub
jns
rcrl
out
or
call
rorl
mov
adc
cltd
les
jbe
arpl
iret
sub
repnz
xor
xchg
outsl
pop
mov
shrl
sahf
adc
add
out
jne
or
out
lret
aad
scas
nop
stos
mov
cmc
dec
mov
mov
dec
inc
mov
jb
adc
pushf
fmull
sbb
mov
rclb
sub
or
stos
sub
fistl
or
push
icebp
std
jp
mov
pop
iret
movsl
mov
xchg
or
add
loop
outsb
popa
pop
mov
jge
clc
mov
pop
mov
outsb
jae
movsl
test
pop
in
mov
orl
cmpl
ret
in
sbbl
mov
gs
out
cmp
leave
lods
mov
or
sub
sti
scas
rorl
iret
and
shlb
stos
aam
outsl
or
dec
and
ja
jecxz
cmp
xchg
jmp
out
loop
es
sub
outsb
in
or
bound
mov
pop
mov
imul
insl
repz
dec
in
sub
cmovge
ret
ljmp
and
sub
aad
jb
imul
and
loop
xor
dec
lahf
jg
add
add
mov
and
mov
inc
mov
xchg
xor
push
sub
jecxz
ret
imul
xchg
adc
stos
cwtl
fs
into
add
cmp
inc
dec
ljmp
pop
fldl
mov
pop
xchg
adc
ds
ljmp
daa
popa
fiaddl
cs
inc
in
ss
stos
sti
dec
into
outsl
jmp
xchg
hlt
andb
out
iret
inc
or
addr16
push
jmp
jg
push
shll
out
mov
mov
imul
or
popl
iret
in
mov
insl
out
and
inc
dec
xor
and
sbb
out
add
mov
ljmp
inc
add
cmp
xchg
or
adc
aaa
jo
das
and
sahf
insl
mov
jo
lods
popa
and
and
ret
addr16
jbe
mov
iret
nop
sub
dec
subl
xchg
jecxz
ljmp
andl
mov
lods
ret
cwtl
and
sbb
sub
pop
fs
or
out
dec
and
add
ljmp
test
jnp
mov
jg
in
mov
or
andl
mov
add
cs
xor
cmp
inc
push
sub
sbb
adc
or
sub
in
nop
jno
lds
loop
daa
daa
test
scas
dec
subl
dec
sbb
dec
in
xchg
sti
lret
fprem
or
or
sub
and
jae
outsl
fwait
mov
sub
mov
dec
jb
jbe
xlat
test
or
stos
or
scas
mov
and
insl
jmp
ss
mov
out
or
icebp
jb
imul
in
jnp
out
imul
sub
stos
sub
adc
test
cmp
or
nop
inc
dec
dec
cmp
dec
inc
loope
bound
loopne
mov
inc
mov
scas
mov
popa
scas
pandn
add
jecxz
lea
pop
add
inc
sbbb
outsb
js
leave
nop
sbb
push
js
or
in
inc
out
inc
sbb
pusha
jnp
sub
mov
int
push
insl
popa
ret
scas
mov
bound
mov
sbb
loop
xchg
lea
loope
out
cmp
dec
jl
popa
mov
sub
out
xchg
mov
in
push
add
shl
stos
hlt
das
je
or
gs
sub
mov
call
jecxz
lret
push
adc
bound
fsubrl
mov
jg
in
outsb
aad
arpl
scas
cld
dec
mov
add
pop
mov
sbb
in
js
dec
jecxz
xor
ret
movsb
mov
aaa
push
cmp
mov
ds
add
stos
arpl
out
and
jbe
mov
dec
scas
dec
dec
mov
popa
dec
pop
pusha
add
inc
test
hlt
jmp
addr16
movsl
sub
or
in
xor
in
jb
lret
dec
mov
out
lods
push
gs
dec
mov
in
scas
in
insl
pslld
jmp
add
xchg
cmp
mov
stos
out
add
iret
rcll
push
mov
fiaddl
jecxz
sub
int3
das
arpl
or
xorb
test
mov
push
subl
cmp
lods
jecxz
add
push
bound
jmp
xor
mov
jg
mov
addr16
lret
mov
adc
lcall
ljmp
and
lret
std
nop
adc
lods
mov
add
lods
jl
leave
mov
dec
jb
pop
jo
jb
mov
out
scas
addr16
adc
popa
jo
test
dec
mov
popw
mov
rcl
xor
and
cmp
icebp
xchg
mov
pop
push
sub
mov
outsl
in
sbb
cltd
daa
lods
inc
je
add
js
into
jecxz
cmp
mov
cmp
mov
das
mov
imul
or
cmc
inc
mov
inc
scas
into
mov
pop
fimuls
aam
lock
movsb
sub
sub
xchg
scas
dec
dec
jmp
outsb
dec
dec
daa
or
add
stos
mov
xchg
inc
aaa
push
sub
scas
pop
and
lahf
popf
dec
mov
or
mov
sbb
ret
test
int
mov
lock
lods
mov
leave
dec
test
and
and
mov
dec
lods
mov
scas
fistps
daa
data16
lods
lret
iret
push
scas
jb
and
test
push
popl
and
dec
out
je
sub
ret
or
outsb
das
jmp
jl
mov
jbe
or
jno
jb
mov
nop
repnz
dec
mov
sub
mov
adc
out
xchg
xchg
mov
jns
cmp
int
dec
mov
inc
cltd
mov
cmp
cwtl
adc
lods
es
int
stos
cltd
ljmp
and
stos
inc
and
inc
outsb
aas
jae
insl
out
inc
dec
jg
bound
cli
ret
xchg
arpl
inc
dec
dec
mov
inc
mov
arpl
mov
andl
hlt
adc
loope
incb
or
inc
and
jg
jno
stc
dec
and
in
movsl
popa
cld
insb
out
or
xchg
cld
insl
stos
xchg
lahf
subb
jle
mov
aam
add
add
loope
pop
mov
dec
mov
sbb
dec
mov
dec
ret
int
scas
stos
or
push
xchg
dec
scas
cmovg
dec
movsl
add
mov
movb
mov
push
out
addr16
pop
cltd
mov
loope
jmp
cs
nop
sub
daa
and
pop
push
das
cmp
and
push
or
test
mov
push
imul
jnp
outsl
mov
inc
testb
lret
mov
arpl
leave
inc
or
jno
sbb
mov
scas
nop
or
xchg
orb
mov
arpl
sub
xchg
leave
scas
insl
pop
jmp
xor
jbe
das
push
xor
out
faddp
xchg
dec
out
lods
ret
daa
cltd
jecxz
fnstenv
icebp
xchg
add
scas
aad
call
sub
in
fisubrl
fcmovnb
and
or
mov
push
fmuls
inc
lret
pop
clc
jmp
mov
rep
mov
xor
test
xor
outsb
fcoml
or
pop
repz
jbe
lahf
lret
ss
dec
les
icebp
jg
roll
scas
out
out
push
jb
nop
into
fstps
lds
xchg
bound
dec
add
scas
out
push
sbbb
sub
xchg
popa
imul
lods
xchg
jg
sub
dec
jmp
out
nop
fwait
outsb
mov
jle
push
clc
jmp
xchg
mov
sbb
arpl
sbb
into
mov
mov
xor
cld
jnp
mov
jb
aas
mov
outsl
imulb
out
and
daa
or
fildl
mov
cmc
insl
mov
nop
lock
lock
mov
dec
add
or
fwait
fs
dec
lods
bound
inc
or
les
nop
dec
push
or
add
out
and
repnz
push
jle
lea
testb
or
sub
out
in
outsl
sub
dec
arpl
dec
adcl
and
or
insl
xchg
mov
sub
inc
mov
dec
sub
arpl
arpl
sbb
sub
push
mov
jl
iret
nop
test
jae
shrd
lea
sub
xchg
andw
dec
mov
aas
push
xchg
pop
jecxz
inc
pop
out
jecxz
test
iret
sbb
push
sbb
cs
jb
fldl
mov
add
cli
lret
mov
fbstp
sub
insl
mov
sub
ja
add
dec
pop
fistps
sub
lret
cmp
imul
mov
into
subb
movsl
ret
mov
movsl
sbb
adc
jb
das
in
add
lods
mov
je
lea
in
ss
jbe
sbb
ret
bound
push
dec
and
scas
or
loope
jns
jbe
jne
leave
out
pop
fs
sub
clc
stos
out
outsb
cmp
mov
mov
dec
jb
arpl
arpl
xchg
sub
cmp
es
jb
or
mov
std
add
jp
sti
or
jns
lret
mov
mov
outsb
mov
arpl
or
sub
inc
dec
clc
lret
cmp
adcl
push
int
push
das
cld
push
and
movnti
nop
pop
stos
dec
loope
lahf
xchg
jecxz
cltd
mov
leave
lods
sub
inc
test
clc
sub
stos
hlt
stos
mov
sbb
jb
js
jecxz
stos
sub
mov
mov
mov
push
loope
iret
stos
push
inc
jp
jbe
mov
fldt
inc
dec
shld
scas
dec
ret
ljmp
dec
lcall
scas
outsb
mov
cmp
cmc
orl
jns
leave
ret
test
imul
or
out
dec
cld
jb
rorb
dec
lds
mov
dec
outsb
jb
ljmp
aas
xchg
in
xorl
shlb
pop
jb
or
and
ror
dec
leave
add
push
cmc
scas
lret
pop
int
inc
jns
scas
lods
andb
and
and
xor
jnp
loope
popl
rorl
hlt
cmc
push
inc
mov
js
inc
or
es
sub
cmp
push
arpl
cmp
and
out
test
outsb
mov
bound
push
jbe
arpl
sbb
dec
stos
test
adc
add
jp
adc
rorb
xchg
add
bound
pop
inc
mov
jbe
out
or
popf
leave
mov
scas
xlat
scas
je
sbb
iret
bound
inc
mov
mov
jg
lock
out
sub
pusha
movsl
pop
mov
sbb
and
jne
xchg
jecxz
outsb
incb
jno
stc
or
jbe
jne
js
nop
stos
jbe
inc
push
ret
jb
sub
lods
into
inc
iret
mov
sub
imul
add
nop
cmp
mov
stos
aad
das
cltd
jno
mov
lods
outsb
jne
dec
iret
xchg
lret
lret
sub
popa
pop
mov
xchg
loope
add
mov
iret
lods
pop
or
inc
loopne
movsl
mov
sbb
test
sub
push
cmpsb
jl
insl
rorl
lods
bound
scas
pop
push
pop
jcxz
mov
mov
sub
mov
ret
lea
rcll
mov
pop
adc
inc
jg
and
cmp
imul
push
mov
mov
stos
cmpsl
ret
xchg
bound
push
dec
mov
jecxz
cs
outsb
cltd
in
jb
jb
and
mov
leave
out
inc
lods
addl
or
sub
fwait
ret
into
sub
pop
scas
mov
ret
mov
adc
mov
dec
push
out
out
inc
js
arpl
outsb
imul
inc
leave
xchg
push
cmpsb
cs
movsb
mov
lods
push
or
outsb
lea
xor
jno
push
repnz
pop
out
add
jb
mov
cs
mov
dec
inc
inc
add
icebp
mov
push
mov
arpl
imul
das
dec
jge
decl
xor
stc
push
xchg
mov
adc
xor
mov
sub
jg
jbe
mov
into
loope
sbb
bound
cmova
outsb
mov
jg
lds
andl
jo
mov
test
jno
into
lods
iret
mov
in
push
mov
fcmovnb
lods
insl
sub
cmp
addl
hlt
xchg
lret
insl
jecxz
out
je
lods
leave
push
mov
sbb
add
in
mov
sub
mov
in
sub
add
movswl
sub
mov
jae
jo
dec
ljmp
ret
inc
sarl
mov
jg
mov
and
pop
adc
dec
sti
sub
int
push
sar
lea
sub
cs
test
push
arpl
inc
ret
das
mov
jmp
fwait
jmp
outsb
sub
or
in
punpckhdq
jbe
push
fwait
mov
jnp
push
mov
mov
lods
popa
test
shr
iret
jb
loope
mov
jne
dec
imul
inc
sub
mov
lods
mov
and
cmp
jne
pushf
andl
insl
add
mov
test
dec
inc
or
inc
loope
sub
dec
jmp
arpl
mov
dec
out
ljmp
mov
inc
ffree
and
sub
nop
out
outsl
iret
popa
in
mov
scas
mov
inc
into
out
jnp
dec
sub
iret
popa
gs
loop
ret
ljmp
test
adc
add
in
imul
jmp
cmp
test
dec
out
roll
jmp
mov
and
sub
and
xor
dec
pop
sar
ja
adc
outsl
aas
fs
dec
mov
push
ret
test
mov
or
mov
mov
inc
xor
mov
pop
lods
leave
bound
cmovp
add
or
or
inc
out
mov
push
lret
xchg
test
push
inc
jp
mov
dec
dec
push
adc
mov
inc
shrl
repz
mov
mov
jbe
jb
jb
and
mov
lods
ja
cmp
out
jnp
or
andl
iret
cmp
iret
into
push
out
cmp
mov
and
dec
insb
in
stos
add
mov
pop
sub
scas
lds
iret
push
and
xor
push
or
scas
shrl
jecxz
popa
add
cs
mov
sti
outsb
cmp
test
iret
jmp
xor
mov
sub
or
push
stc
and
insl
cs
roll
cmp
fmulp
add
xor
mov
lret
out
sub
inc
inc
or
std
dec
mov
bound
ljmp
testl
pop
repz
arpl
or
lea
inc
dec
xchg
push
bound
imul
repnz
ljmp
outsl
jb
out
popa
or
imul
ljmp
into
ret
scas
mov
cwtl
and
xor
popf
lea
mov
insl
or
ljmp
fistps
pshufw
dec
xchg
jnp
repnz
loope
ret
leave
das
fdivl
sub
ss
dec
or
in
imul
fsubs
jp
mov
cs
and
scas
push
sub
xchg
pand
inc
aam
add
lods
lret
pop
leave
jge
stos
imul
insb
dec
cmovns
inc
or
sub
nop
mov
shr
adc
popa
mov
lods
mov
mov
aam
lret
mov
xchg
test
leave
scas
mov
sbbl
and
sti
scas
ret
sahf
xor
dec
insl
ljmp
dec
in
or
inc
mov
mov
bound
sti
jb
push
jl
and
scas
ljmp
insl
push
or
ja
jno
arpl
es
inc
jge
imul
stos
adc
ljmp
es
aam
inc
mov
clc
outsb
cmp
push
mov
daa
cs
pop
mov
shlb
fisttpl
sub
mov
cmpsl
xor
scas
and
iret
push
hlt
mov
push
jnp
push
iret
lods
cltd
dec
xchg
in
out
push
loop
and
inc
lock
mov
jmp
dec
sahf
ret
or
fildll
xchg
outsl
andl
or
test
pop
int3
cltd
test
insl
vphaddbq
xor
jne
sbb
sub
insl
imul
int
lret
das
leave
stos
iret
add
jp
out
cmp
jno
mov
sub
movsb
jae
inc
or
jne
jg
jb
or
pop
sbb
dec
jecxz
loop
inc
cmp
xchg
loope
test
subl
jl
scas
jecxz
insl
and
arpl
inc
cmp
loop
add
inc
jp
ljmp
lock
test
ss
xlat
daa
in
fnstcw
sub
dec
fadd
clc
out
or
out
and
movsl
nop
inc
and
jmp
por
repz
jmp
test
orb
insl
push
rcll
lahf
and
push
bswap
xchg
dec
lock
cltd
mov
fsubrs
loope
ret
sub
outsb
bound
jmp
push
push
inc
in
mov
nop
mov
mov
push
mov
inc
sub
fmul
fwait
ja
subl
dec
dec
cmpl
push
jmp
cs
mov
inc
fsub
pop
mov
xchg
dec
mov
orb
lds
mov
gs
add
jne
fdivl
mov
outsl
shll
in
out
into
inc
xor
mov
xor
test
sub
mov
mov
jo
dec
out
insl
int
dec
jl
lret
cs
out
nop
les
push
orl
std
test
aad
inc
call
mov
push
mov
mov
jg
out
and
gs
nop
shll
cmp
js
popa
dec
inc
jnp
mov
int
mov
in
mov
movsl
es
out
mov
lea
sub
sahf
dec
xchg
add
loope
cs
ret
loop
scas
icebp
dec
mov
fidivrs
lahf
add
outsb
sti
inc
into
lods
out
or
inc
xchg
mov
sub
push
cmpsb
outsb
outsb
add
or
shlb
jb
mov
add
scas
jne
pop
jnp
jecxz
popa
popl
mov
jno
js
inc
dec
insl
mov
lahf
sbb
inc
pop
in
sub
jbe
and
pushf
ja
insl
pop
in
sti
mov
stos
adc
push
jp
out
inc
lods
jb
cmp
or
iret
and
adc
dec
dec
ss
xchg
inc
stos
mov
nop
cmp
mov
clc
and
lea
mov
dec
ljmp
stos
jb
outsb
pop
xchg
fwait
cs
mov
int
adc
jecxz
adc
outsb
out
mov
push
arpl
cmp
mov
das
mov
clc
popa
outsb
arpl
and
sbb
and
scas
cvtpi2ps
rcll
cld
xor
or
loope
into
in
test
xorl
pop
sub
jbe
shr
cltd
dec
inc
jp
sbbl
cmpb
jmp
mov
or
fistps
loope
aaa
lcall
sub
xor
mov
movsb
and
rorl
outsb
jb
dec
xor
adc
sbb
mov
leave
push
cmc
xchg
dec
xchg
mov
fidivl
mov
jb
bound
cmpsl
outsb
inc
fldt
out
jecxz
inc
lahf
sub
or
js
dec
mov
jb
adc
frstor
stos
out
mov
ja
ret
lods
push
add
je
cmp
lds
jb
inc
jmp
or
out
add
out
pavgb
stos
sbb
mov
add
add
sbb
popa
push
dec
mov
push
jge
jmp
mov
push
in
pusha
in
addl
arpl
test
in
mov
add
imul
lea
das
loope
hlt
sbb
mov
dec
das
aas
bound
test
and
loope
inc
add
jge
mov
fwait
nop
lods
dec
scas
dec
jle
addr16
out
lods
in
insb
jns
in
mov
pop
sti
out
iret
mov
int3
movsl
mov
push
lahf
cmpsl
outsl
ds
imul
mov
xor
nop
push
mov
jo
dec
sub
mov
cmp
lahf
or
sub
dec
test
popa
adc
test
mov
dec
mov
mov
or
lret
scas
insl
sti
shrl
sub
push
inc
mov
jp
mov
lret
jp
mov
adc
mov
inc
loope
arpl
jbe
out
or
sbb
or
cmpb
mov
pusha
mov
scas
xchg
ss
loop
outsl
or
dec
xchg
clc
arpl
aaa
mov
call
mov
sub
xor
ret
sub
in
cmp
or
push
sub
shll
stc
mov
outsb
scas
cmpsl
insl
dec
jo
test
jb
lret
or
sbb
scas
jbe
arpl
cmp
cmpsb
xorl
imul
insb
jl
popa
inc
or
cmp
mov
and
in
xorl
inc
bnd
dec
nop
cli
jbe
stos
mov
jmp
xchg
int
out
sbb
ja
push
xchg
and
adc
mov
shlb
adc
xchg
test
dec
cmp
xchg
into
stos
inc
cmpsb
add
int
dec
test
jb
jb
lea
into
or
repnz
loopne
subl
inc
es
push
loope
iret
dec
scas
subl
repz
dec
jecxz
ljmp
mov
scas
lret
mov
int
push
insl
add
rolb
mov
or
sbb
mov
pushf
push
add
jmp
fidivrl
ss
hlt
fistps
push
cmp
stos
xchg
enter
push
int
add
out
mov
dec
je
push
jecxz
rcll
lods
int
dec
and
jo
das
scas
mov
loope
rcrl
icebp
mov
and
idiv
sub
fmull
js
insl
or
lcall
out
and
hlt
mov
sbb
cmp
pop
lds
incl
mov
ret
inc
or
aaa
insl
add
mov
fists
push
dec
insb
jbe
push
pop
insb
call
arpl
out
scas
pop
and
addl
shrb
stos
subb
sub
orl
stc
add
popa
mov
or
scas
or
mov
xor
cmp
mov
lret
shll
popa
and
or
push
push
notb
in
stos
sub
inc
inc
imul
test
into
out
cmpsl
cmp
scas
mov
sub
pop
into
mov
inc
ljmp
xchg
leave
dec
push
fwait
cld
sub
das
int3
inc
arpl
pop
in
movb
sub
add
popa
inc
outsb
ljmp
xor
xchg
jmp
mov
mov
and
dec
outsb
rorl
ret
adc
ja
in
jae
xor
inc
mov
fs
cli
lods
bound
out
push
dec
xchg
jge
repnz
ror
pusha
inc
js
sub
bound
mov
jmp
mov
lahf
mov
or
cmpsb
mov
out
ljmp
arpl
test
das
ret
lcall
push
or
mov
mov
nop
jecxz
mov
sbb
and
dec
ret
or
lods
insl
mov
push
xchg
and
mov
mov
sub
xor
out
lea
push
out
xor
lret
mov
lods
dec
push
inc
lret
popa
test
imul
ljmp
out
or
pop
aaa
jecxz
jmp
lret
cld
ljmp
sub
mov
icebp
xchg
imulb
sbb
push
dec
add
and
repz
insb
lods
vmovdqu
lods
test
push
lds
push
jns
mov
ljmp
lock
jbe
lock
leave
cmp
jb
es
dec
ret
dec
inc
mov
js
push
jo
loope
out
subl
inc
dec
out
out
inc
mov
stos
movsb
loope
std
clc
and
rorl
mov
adc
cmp
stos
mov
and
int
out
ljmp
pushf
out
daa
aam
mov
fidivl
decl
lods
ret
pop
fildl
push
sti
stos
jmp
jno
cltd
mov
cs
or
imul
nop
aas
mov
fs
ret
iret
loope
dec
in
push
jns
sub
js
sub
cmp
es
cs
ds
mov
inc
lock
or
int
xor
cmp
adcl
dec
push
jnp
jmp
out
pushw
out
das
push
jo
lret
pop
bound
mov
jge
and
les
arpl
sub
sub
stos
int
imul
clc
nop
scas
cs
sbb
lcall
xchg
dec
sbbl
leave
cmpl
daa
lret
test
mov
cmovl
jbe
sti
in
or
push
jecxz
mov
mov
popa
cmpb
jne
sbb
cmp
mov
cmp
dec
inc
inc
fwait
mov
scas
roll
mov
addr16
lret
fadd
lret
scas
insl
mov
mov
cvtps2pi
inc
mov
and
jb
or
stos
das
into
gs
xor
dec
imul
xchg
dec
sub
mov
xchg
iret
out
dec
jge
adc
pop
and
dec
cs
in
leave
mov
ficompl
addb
sub
leave
mov
mov
jp
jnp
inc
orl
loope
cs
jnp
push
outsl
lods
dec
mov
adc
stos
insl
xchg
aas
in
decb
sub
mov
shl
adc
jb
mov
out
or
div
int
scas
ja
inc
dec
fstpt
outsb
pause
or
cmp
jp
imul
cwtl
out
mov
dec
lret
push
and
dec
idivb
iret
xchg
mov
mov
cmpsb
in
jnp
cs
ret
sub
call
mov
jmp
mov
movb
jl
int
inc
ljmp
arpl
inc
sbb
shrl
inc
out
test
jecxz
in
push
dec
or
jecxz
mov
sti
scas
insl
sub
out
xor
inc
sub
stos
ret
ja
leave
mov
adc
fmull
cs
iret
aad
dec
jl
inc
scas
inc
pusha
movsl
mov
jo
rolb
stos
out
iret
test
and
out
or
lret
ret
mov
loopne
xor
movsl
scas
jecxz
call
outsb
in
inc
scas
repnz
jecxz
addr16
ds
clc
push
in
aad
lahf
test
call
nop
repnz
sti
scas
stos
or
xchg
dec
leave
jmp
dec
je
into
or
rorl
pushf
inc
push
sbb
lret
push
xchg
xchg
mov
and
dec
scas
lret
in
inc
dec
sbb
ret
sub
scas
into
in
mov
jl
out
dec
or
fnstenv
mov
scas
test
setg
stc
inc
popa
jno
dec
subl
shll
add
int
push
or
pop
insb
cld
test
and
bound
cmp
mov
sti
jg
jmp
cld
fs
orl
inc
mov
aad
stos
cmp
sarb
push
ljmp
jle
dec
jne
xchg
daa
dec
stos
into
insl
adcb
dec
lock
out
psubb
dec
xchg
or
sbb
dec
mov
test
xchg
stc
mov
mov
rorl
mov
xchg
or
inc
jecxz
arpl
arpl
cmp
fs
inc
stos
jbe
cmp
arpl
add
mov
jnp
or
in
test
inc
out
and
jne
lea
sbb
jmp
out
hlt
and
out
add
sub
out
mov
popa
or
imul
outsb
inc
lea
sub
mov
pop
inc
fdivr
out
out
sbb
popa
outsb
scas
call
lret
push
out
inc
ret
sbb
cld
xor
inc
mov
cwtl
lds
or
mov
outsl
movsl
add
xchg
pop
add
dec
pusha
in
sub
out
inc
stos
sub
mov
fsubr
iret
ljmp
out
cmpsb
fnstenv
sbb
and
push
cmpsl
cmp
mov
mov
dec
lret
bound
bound
scas
add
jmp
xchg
lock
add
clc
add
leave
in
fsubrl
and
xlat
mov
sub
cmp
lods
test
mov
xorl
into
fidivrl
ret
inc
add
cmp
loope
out
dec
fsubrl
dec
or
ja
popl
das
mov
mov
push
push
push
cld
imul
cmp
dec
sbb
leave
test
and
inc
int
out
outsl
jmp
into
iret
popf
stos
pop
mov
clc
in
popf
daa
cmp
xor
add
in
mov
adc
or
add
stc
inc
push
inc
leavew
dec
lods
sub
into
lock
pop
pop
ret
mov
nop
jo
mov
jecxz
jo
out
add
sub
repnz
sub
ja
stc
lock
shrl
pop
jne
xchg
lds
mov
lea
adc
ja
sbb
mov
aas
iret
push
mov
sbb
out
arpl
mov
push
xorb
adc
movsl
aam
addl
nop
sti
int3
jmp
jg
xchg
subl
mov
bswap
adcb
inc
flds
leave
fs
mov
pop
jecxz
cmc
in
xchg
rclb
nop
mov
fistl
xor
or
outsl
push
inc
shl
xorl
test
cmp
bound
insl
jo
lea
sub
and
cltd
in
nop
xchg
outsl
add
mov
clc
cs
imul
scas
xchg
lahf
ret
ja
push
int
mov
addl
jns
sub
in
mov
lods
stos
out
fists
mov
dec
outsb
mov
jmp
xchg
adc
je
ret
or
push
insl
bound
popf
sub
jbe
hlt
jg
mov
insl
inc
mov
mov
add
and
dec
mov
in
mov
cmp
outsb
lods
mov
in
xchg
adc
jo
sbb
pop
movsb
out
stos
movb
int
scas
jb
mov
test
inc
je
outsl
scas
pcmpeqd
jae
sub
jmp
sub
movups
out
fs
arpl
leave
insl
dec
imul
test
outsb
pop
iret
fildl
je
test
pop
ljmp
outsl
int3
out
cli
shll
stc
dec
in
lods
stos
jnp
mov
test
or
inc
dec
add
or
xchg
repnz
aad
mov
xor
xor
dec
or
pusha
jbe
mov
filds
insl
and
stos
fadds
outsb
adc
das
jb
adc
sub
lods
lds
fistl
loope
push
xchg
mov
xchg
push
leave
in
or
test
out
cmp
sub
mov
ret
mov
xorl
lea
sub
mov
ljmp
cmp
scas
int
mov
mov
xchg
aas
jmp
sub
lahf
mov
or
fwait
xchg
in
dec
lock
fwait
cmovno
or
in
iret
ret
jnp
push
inc
ret
outsb
cmp
mov
push
in
sarb
decb
lods
sbbl
mov
bound
pop
jns
mov
lds
dec
inc
sub
stos
cmpsb
mov
mov
pop
sub
int
and
lods
imul
sahf
jb
pop
into
mov
mov
out
inc
sub
rcrl
sbb
pop
sub
loop
test
rep
fsubs
add
orb
or
lods
jmp
push
into
xchg
dec
movsl
dec
in
or
jmp
movsl
mov
js
das
dec
repz
lret
mov
lds
call
pop
or
dec
jecxz
leave
mov
scas
xchg
cmp
mov
jbe
jo
sbb
ret
in
scas
scas
or
xchg
cmp
ret
mov
out
loope
and
jge
inc
stos
push
imul
nop
popf
cmp
mov
sub
mov
cmp
cmpsl
and
dec
or
out
out
add
jo
lea
inc
bound
lret
pushf
int3
mov
arpl
inc
sub
or
stos
arpl
dec
jmp
jb
movb
leave
shrl
mov
jecxz
test
jae
insl
in
fisttpll
lock
int
mov
mov
xor
call
into
js
push
rcl
in
popa
mov
aaa
cs
in
adc
gs
in
ljmp
or
pop
aas
iret
loopne
insb
mov
push
jmp
test
out
testb
ljmp
ljmp
js
js
mov
mov
pop
mov
ret
loope
mov
js
adc
push
cmp
cmpsb
into
ljmp
and
cltd
mov
xlat
ret
arpl
add
shrl
and
test
jne
es
ret
int
cmp
mov
or
mov
imul
pop
ret
filds
add
push
cmpsl
loop
addl
jb
xor
sub
orl
jno
inc
dec
nop
add
xchg
notb
mov
or
sub
jne
jns
pop
cmp
sub
add
lcall
aad
xor
xchg
dec
mov
ror
cli
insb
or
jb
inc
jmp
fs
lea
mov
lret
fisubrs
or
inc
push
stc
addr16
test
lret
cwtl
lods
test
sub
lahf
jno
lcall
mov
scas
jb
daa
sub
daa
push
or
mov
dec
fsubrl
outsb
jne
jbe
jns
fsubrl
mov
sbb
sub
cs
mov
test
sub
push
nop
push
mov
or
cmpsb
std
push
push
stos
pop
mov
addr16
xchg
mov
popa
arpl
jge
les
ret
popa
andl
or
xchg
movsb
in
fcmovb
scas
cmpl
lret
clc
push
das
lods
repnz
out
dec
insl
mov
pop
es
add
lods
dec
mov
insl
or
out
mov
int3
mov
call
stc
cmpsb
inc
lea
les
outsb
ja
jp
jno
in
dec
out
mov
fcmovne
int
mov
es
dec
jo
cltd
sub
inc
xchg
push
add
popa
dec
scas
xor
jl
lods
and
out
mov
cmp
out
dec
add
dec
mov
sahf
or
mov
movsb
sub
mov
subl
adc
dec
push
scas
pop
push
lods
inc
xchg
bnd
lret
movsb
test
push
jbe
into
outsb
cld
sub
scas
aaa
push
push
mov
lds
filds
cmp
fisttpll
decl
iret
daa
xchg
inc
out
popa
not
and
jecxz
insb
and
cmp
jb
xor
out
call
dec
or
int
sbb
lds
mov
in
push
lods
or
adc
nop
jno
jb
arpl
sti
lret
mov
dec
scas
outsl
cmp
jne
add
add
out
cmp
inc
mov
jp
push
cmpsl
mov
dec
outsb
dec
dec
dec
and
leave
insb
repz
xor
enter
movsl
outsb
mov
add
mov
sub
scas
fs
test
int
arpl
lods
mov
xorl
jecxz
outsl
inc
shr
or
jns
imul
dec
cmpsb
call
in
call
add
lret
stos
jle
add
jmp
inc
rolb
iret
jmp
out
hlt
add
stc
inc
cmp
cmp
mov
dec
cltd
pop
pop
cmpsb
jo
stos
jb
jne
jne
jp
jbe
mov
add
pop
dec
insl
dec
leave
push
into
mov
add
and
int3
or
out
push
js
inc
ficompl
popa
andl
in
sbb
mov
inc
jp
popa
test
mov
sub
push
sub
testl
imul
xor
fcmovnb
iret
jnp
scas
stos
sub
jmp
dec
cmpl
sub
aam
or
mov
xchg
xchg
push
adc
cmp
xchg
sbb
mov
outsl
sbb
ss
mull
fadd
ja
mov
add
iret
cs
in
js
sub
cltd
stos
dec
fldt
mov
in
dec
ret
cltd
jp
decl
insl
xchg
sub
nop
and
push
movb
mov
mov
imul
test
mov
mov
stos
mov
and
push
sub
dec
sti
ds
rclb
cs
mov
sbb
sahf
ret
dec
inc
scas
outsl
outsb
jmp
in
clc
arpl
jp
xor
sbb
mov
mov
outsl
ljmp
stos
jo
sub
or
pop
jg
jmp
into
mov
jle
push
addr16
sbb
adc
sub
sub
and
push
test
or
shlb
sub
mov
push
push
and
sub
or
aas
or
sub
or
inc
adc
movsb
nop
insl
push
into
repnz
ret
xchg
and
lret
mov
push
pop
dec
mov
out
out
arpl
lods
or
into
jb
and
cmp
out
outsb
arpl
and
popa
adcb
and
arpl
xchg
call
loope
bt
lret
sub
jecxz
add
fwait
popa
sub
jns
out
in
adc
jnp
jecxz
jmp
pop
xchg
arpl
sub
cmp
insb
ret
mov
daa
lea
mov
insl
and
adc
sti
sub
inc
jno
sbb
inc
jbe
jns
ja
dec
popl
add
fs
mov
call
lea
dec
sub
out
outsb
popa
rorl
js
shrb
sub
in
inc
mov
mov
orl
test
adc
inc
and
lods
inc
add
push
add
mov
sbb
int
jne
lock
leave
and
or
insl
fdivrp
jg
lds
jnp
bt
push
dec
insb
lret
mov
mov
cmpl
outsb
and
push
sub
out
cmp
cmp
scas
subl
jmp
mov
push
cwtl
or
jecxz
fsubp
inc
push
inc
repz
sarl
mov
or
fidivs
dec
out
dec
scas
xor
mov
das
lcall
mov
add
push
int
loope
test
dec
orl
lods
add
loope
test
scas
and
jecxz
xor
jbe
ds
lcall
sub
dec
into
mov
mov
fisttpl
push
xchg
mov
addl
out
js
or
mov
mov
dec
jecxz
sub
or
outsl
or
dec
lret
mov
in
in
mov
lods
cmp
add
stos
add
cli
mov
es
push
and
leave
lock
outsb
inc
inc
lods
cmp
mov
scas
leave
je
mov
jno
lock
add
jecxz
jae
popa
mov
jmp
mov
push
stos
dec
sbb
mov
lods
into
mov
lahf
arpl
xorl
popf
out
cs
into
out
scas
jmp
movsb
push
movsb
test
mov
mov
in
dec
jb
lock
add
inc
gs
shlb
mov
imul
out
les
inc
sub
andl
and
cmp
clc
add
lods
stos
lock
xchg
mov
ret
jo
mov
mov
jmp
insb
xlat
leave
lea
pop
addl
dec
std
fdivl
dec
pop
pop
fisubrs
mov
jmp
dec
xchg
jne
jo
inc
push
subb
es
insl
leave
cs
and
call
inc
push
push
insl
jge
and
lcall
int
leave
fidivrl
pop
insl
cmpsl
push
cmovs
ss
mov
and
dec
push
aad
in
lret
popl
push
jmp
pop
pop
sub
push
xchg
xchg
xchg
stos
and
jo
dec
scas
push
adc
insb
inc
ljmp
scas
push
loope
mov
cld
loop
fnclex
cltd
inc
dec
andl
adc
fisttpl
scas
mov
movd
add
or
lds
bound
sub
sub
adc
jp
jbe
jne
insl
imul
dec
dec
sub
mov
in
daa
lock
xchg
dec
jp
dec
jb
mov
popa
stos
mov
iret
insl
inc
jno
cmp
lret
fwait
xchg
lods
out
mov
mov
inc
cli
and
ret
dec
and
push
arpl
xchg
push
mov
xor
cltd
push
sbb
push
and
or
mov
test
jo
int
js
out
std
push
and
jns
dec
xorl
psubsb
outsb
lods
leave
repz
or
dec
or
fsubl
mov
cs
fistl
push
inc
or
dec
inc
add
mov
icebp
popa
nop
add
jne
in
dec
pop
fidivrl
in
push
je
arpl
push
scas
leave
scas
ret
mov
lock
insl
out
dec
stos
dec
cs
arpl
ljmp
outsb
pop
and
mov
mov
jle
inc
stos
scas
dec
mov
xchg
aas
cs
dec
sub
js
ret
scas
mov
lock
je
arpl
ja
and
xchg
js
je
scas
jecxz
push
andl
add
lods
inc
cli
mov
mov
out
vcvtsd2si
into
sti
pop
leave
popa
xchg
and
inc
mov
dec
bswap
lret
popl
call
iret
xor
idivl
outsb
and
clc
sub
popa
jno
xlat
jns
imul
inc
insb
lcall
cmpsb
arpl
sti
rorl
xor
xor
pop
add
push
out
mov
lea
add
adc
in
fisttpl
test
fwait
lods
jne
scas
mov
mov
pop
adc
xor
call
bound
flds
iret
sti
sub
loope
jecxz
mov
dec
out
mov
sti
dec
leave
loope
xchg
lea
imul
popa
inc
add
or
imul
ret
or
mov
mov
dec
cmp
and
inc
jl
inc
sub
scas
imul
ljmp
cmp
loop
jnp
dec
inc
test
and
pop
fimuls
and
or
inc
push
shll
sti
jg
hlt
ja
add
xchg
mov
pop
jo
or
repz
xor
adc
insl
dec
arpl
pop
and
cmp
push
lcall
cltd
and
dec
stc
mov
dec
push
flds
outsl
sub
into
ljmp
ret
lea
xor
or
jb
fldt
lret
sub
cmovge
cmp
jl
out
inc
push
jmp
ret
push
jp
mov
mov
lahf
fistps
paddsb
lods
push
mov
sub
sar
arpl
test
ljmp
lret
dec
add
cltd
imul
push
jmp
jmp
mov
mov
out
aaa
clc
sti
dec
and
adc
popa
sub
leave
and
sub
push
push
mov
mov
jp
dec
or
dec
jmp
dec
imul
std
push
enter
repz
or
mov
arpl
jb
mov
scas
mov
flds
aam
mov
popa
lea
scas
cmp
leave
mov
pop
jo
mov
push
lret
xorl
or
dec
iret
outsb
rcll
sbbb
sub
inc
in
outsl
xor
dec
and
mull
popa
lods
lret
outsb
xchg
and
outsb
cli
push
insl
in
stos
insl
and
out
test
adc
popa
int
xor
pop
fildll
jp
mov
push
shrl
xchg
out
lret
lcall
xchg
add
inc
xor
mov
sub
leave
cmp
ja
xchg
incb
mov
ret
add
cmp
mov
sti
sub
jp
mov
push
inc
rcl
int
iret
ret
test
mov
loope
lahf
mov
push
scas
sub
pop
lods
jecxz
pop
mov
iret
mov
jmp
or
dec
fs
sub
int
lret
dec
mov
lods
in
jmp
outsb
sub
jge
jl
int
psraw
mov
lret
aam
lcall
xchg
mov
cld
dec
cmp
or
mov
movsl
outsl
dec
dec
hlt
dec
lret
push
jl
lods
ljmp
scas
dec
insl
cltd
push
shr
loope
dec
cld
inc
dec
lea
ret
loopne
ret
pop
stos
repz
call
or
add
sub
popa
sub
inc
jge
jb
adc
jns
add
lock
jmp
jmp
in
sbb
into
inc
ret
xchg
xchg
inc
jns,pn
lods
lret
sub
out
mov
mov
popa
or
lods
adc
mov
out
add
mov
ret
xor
lcall
repz
push
rcrb
jo
ret
jmp
stos
adc
ret
mov
fs
outsb
add
arpl
add
leave
movsb
dec
in
inc
scas
lret
out
scas
sub
inc
or
icebp
jno
int3
adc
sub
and
jno
inc
stos
mov
in
fnstenv
xchg
scas
or
mov
js
call
dec
push
js
lret
dec
dec
insl
inc
bound
roll
push
insb
and
sub
inc
mov
mov
popa
mov
dec
jl
or
jo
stos
arpl
test
iret
in
xor
sbb
push
out
subl
jecxz
dec
or
ss
in
scas
xchg
xor
ljmp
movsb
push
adc
call
ret
mov
out
pusha
lahf
popf
dec
jo
into
test
in
popa
jne
out
scas
adc
stc
jo
das
outsl
dec
or
ret
imul
lret
pop
stos
adc
clc
mov
in
pop
out
jo
shll
inc
mov
into
stc
cmp
call
out
dec
fs
out
loope
or
jns
jne
jb
inc
mov
mov
add
arpl
xchg
push
sbb
mov
addr16
ljmp
in
push
clc
mov
mov
rcll
les
and
mov
insb
jle
scas
jecxz
sbb
mov
imul
ss
lahf
jmp
lods
arpl
jmp
pusha
out
sti
jmp
movsl
ljmp
add
aaa
stos
fiaddl
cs
shlb
movsl
rolb
xor
jbe
test
insb
lea
pop
push
nop
stos
jb
lods
dec
movsbl
push
mov
mov
jne
daa
cs
out
push
cmp
and
xorl
stos
xor
ret
xchg
stos
xchg
scas
fs
dec
leave
loop
dec
mov
outsl
ss
cmp
pop
lret
out
das
std
daa
mov
mov
bound
cmp
clts
sub
jecxz
jge
outsl
lds
lret
and
mov
in
push
inc
push
leave
dec
cmp
inc
insl
xor
sub
and
rolb
sbb
popa
arpl
test
ret
or
int
lds
jmp
xor
mov
arpl
inc
or
push
push
jae
jmp
push
fcompl
adc
shlb
sub
add
xlat
pop
dec
incb
loope
lahf
cmp
jge
mov
dec
fidivs
loop
ja
jno
push
xchg
xorl
cltd
stc
or
popa
cwtl
dec
jmp
vprotb
add
jecxz
nop
cs
inc
lods
imul
push
cmp
outsl
or
push
or
andb
inc
mov
mov
sub
ds
lods
push
push
outsb
leave
xchg
les
inc
and
ljmp
sub
bswap
xor
iret
push
shlb
outsl
xchg
or
and
add
lds
and
mov
icebp
mov
outsb
xchg
mov
push
push
inc
lds
in
js
popa
push
mov
insl
test
or
dec
mov
pop
or
mov
xor
dec
jne
sub
insb
addr16
ret
jecxz
jb
jbe
pop
cmp
jae
int
mov
sub
cltd
cltd
out
ret
cmp
decl
addr16
and
xorl
jne
fldcw
icebp
jmp
lahf
cld
aas
xchg
lret
inc
daa
push
insl
test
ljmp
cmp
insl
push
push
sub
mov
out
add
jbe
jbe
inc
popa
int
adc
out
outsl
int
iret
sub
into
or
mov
popa
adcb
test
sarb
xchg
dec
std
shrl
fidivs
dec
test
sub
or
hlt
or
jge
jb
inc
lea
scas
jecxz
insl
dec
iret
adc
addb
ret
push
scas
repz
arpl
pop
je
jmp
into
les
cld
addr16
orl
add
dec
imul
loope
outsb
jne
inc
or
sub
xchg
mov
adc
data16
inc
test
jo
add
jb
call
push
dec
dec
ljmp
inc
repz
sbb
push
push
xor
sbb
orl
inc
movsb
outsl
xchg
inc
loope
jle
sarl
andl
mov
sbb
lods
iret
pop
ss
mov
rep
push
inc
dec
cmp
pop
and
lret
lds
push
es
or
dec
ljmp
sub
hlt
leave
pop
stos
sbb
xchg
push
js
or
xor
mov
mov
jl
jmp
sub
movsl
dec
dec
cmp
inc
in
pushf
addr16
push
jp
jb
outsb
mov
lock
pusha
imul
mov
jnp
jmp
dec
insl
arpl
sub
imul
nop
pop
mov
dec
jmp
push
fs
jns
and
inc
call
jecxz
add
je
addl
loope
jp
lock
arpl
sbb
ret
mov
ljmp
mov
ror
xchg
insl
sti
sbb
mov
ret
orl
push
and
jecxz
dec
xor
test
gs
cmpl
mov
out
repnz
push
addr16
out
test
ret
lcall
mov
aam
daa
int
loope
orl
nop
or
mov
dec
dec
fs
inc
and
or
mov
sub
sub
shll
dec
in
std
inc
inc
xchg
dec
jne
inc
or
popa
stos
xchg
dec
imul
dec
add
orl
or
popa
loop,pn
lds
add
subl
sub
jecxz
sub
sub
inc
add
inc
sub
adc
std
subb
sub
leave
lods
outsb
in
or
lahf
and
loope
icebp
test
clc
sbb
nop
lods
call
pop
mov
das
dec
sub
bound
pop
lds
gs
or
popa
fisttpl
lods
subl
scas
into
jnp
test
mov
insl
addb
mov
inc
test
inc
int
out
arpl
or
or
sbb
jg
cmp
loop
ret
fwait
add
bound
jecxz
mov
dec
dec
jno
sub
addr16
sub
outsb
mov
or
in
mov
sbb
sbb
insb
sub
out
nop
jne
jb
xchg
testl
add
js
ss
shrl
dec
pushf
movsb
xchg
cltd
mov
jne
lock
jmp
iret
sub
and
fsub
out
icebp
lds
cmpsb
popa
out
pop
test
sti
aam
int
es
mov
in
jecxz
fisubrl
testb
jbe
divl
out
imul
shrl
lea
sub
mov
shll
pmaxsw
ja
or
es
pop
mov
xchg
subl
outsl
pop
ja
pop
jbe
jne
jb
cmp
push
lret
and
test
adc
mov
stos
jb
and
jns
push
lahf
imul
scas
enter
sarl
mov
sbbl
outsl
std
xchg
mov
jle
sub
cmp
add
inc
das
andl
idivb
push
scas
in
mov
mov
mov
bound
out
dec
out
ret
mov
jle
jno
jne
scas
push
mov
fs
scas
loope
jp
jb
inc
inc
and
pushf
js
out
push
pop
mov
sub
xor
dec
inc
outsl
into
inc
outsb
cmp
inc
lret
jne
or
jecxz
mov
test
dec
iret
addr16
cld
mov
sbb
scas
adc
jnp
outsl
inc
add
push
mov
jmp
cltd
add
mov
push
insl
aas
push
jge
xlat
popa
movsl
jno
dec
out
or
bound
inc
sub
inc
lods
cmp
mov
imul
inc
pop
xlat
dec
jecxz
loopne
jns
cltd
into
xor
movsl
in
sub
dec
jae
lods
mov
test
push
lds
insl
arpl
inc
and
lods
mov
iret
loopne
fstl
in
stos
mov
jge
and
outsl
xchg
in
cmp
xor
push
dec
addl
add
lods
insl
outsl
test
in
cmp
cmp
dec
mov
jecxz
sub
mov
add
dec
lock
shr
mov
ret
and
xchg
out
or
roll
dec
pop
mov
mov
nop
cs
hlt
lods
xor
mov
inc
add
sub
and
jo
insl
inc
dec
scas
dec
pop
out
and
leave
pop
ffree
sbb
pushl
xor
dec
sahf
fwait
inc
dec
jecxz
loope
mov
orb
jbe
jmp
lret
sub
insl
xchg
leave
imul
inc
loop
addr16
ror
hlt
shlb
outsb
imul
inc
sub
or
aas
ljmp
leave
fldt
imul
xchg
ljmp
inc
iret
scas
mov
les
or
mov
sub
inc
jo
loop
in
leave
nop
sub
test
mov
push
or
int
sbb
xchg
addl
sub
or
scas
outsb
movsl
into
add
imul
pop
stos
mov
out
out
popa
rolb
jb
decl
mov
xchg
mov
dec
dec
jne
add
test
mov
andl
lods
pop
mov
adcl
jmp
and
mov
in
imul
dec
jmp
or
jecxz,pn
testb
adc
sub
fnstsw
jg
repz
mov
int3
pand
ljmp
or
fldt
or
lods
pop
lds
iret
aaa
sbb
lods
mov
outsb
daa
loope
mov
inc
push
fwait
daa
lret
jnp
mov
inc
sub
shrb
mov
filds
jno
js
dec
popa
adc
ja
dec
sarl
sub
addr16
sub
scas
stos
sbb
jb
outsb
add
daa
rcll
addl
and
into
loop
xchg
or
aam
cltd
nop
or
in
scas
xchg
mov
mov
cld
xchg
or
cs
bnd
inc
xor
addr16
lret
xchg
add
dec
loope
bound
sti
ret
add
mov
pushf
add
jne
inc
insb
das
dec
and
in
outsb
mov
nop
stos
call
mov
mov
lods
mov
push
orl
add
add
ret
out
stos
nop
dec
push
adc
shll
stc
adc
pushf
loope
int
lods
dec
jbe
inc
mov
jmp
insl
mov
loop
rcrl
or
lret
bound
into
outsb
cli
push
dec
out
stos
cmpsl
test
outsb
xchg
sti
ss
ret
pushf
orl
dec
arpl
mov
mov
pand
popf
inc
lods
sti
pusha
cs
fs
imul
sub
dec
outsb
sub
sbb
pop
fwait
sbb
test
ret
popa
mov
push
mov
xchg
out
enter
xchg
dec
sub
dec
loope
lret
jbe
dec
and
testl
mov
in
lcall
xchg
cmp
js
mov
shrb
jne
jb
pop
xorb
scas
inc
ljmp
cs
jmp
pop
mov
sbb
loope
adc
dec
jmp
xchg
jp
pop
popl
adc
pusha
mov
ljmp
xor
or
hlt
ss
bound
outsl
testb
shrl
mov
cmp
movsb
cmp
pop
cmpl
enter
mov
movb
iret
xor
out
cmpsb
or
pop
or
sbb
arpl
leave
dec
bound
mov
dec
mov
or
pop
insl
add
sub
or
jmp
sti
fisubl
fwait
ret
andb
out
sub
out
int
and
jno
jmp
xor
outsl
cli
sbb
xchg
push
rcll
xchg
dec
lods
pop
rcr
fcompl
popa
dec
push
jno
xor
dec
push
mov
dec
lret
loope
iret
scas
je
sub
jne
xlat
jg
je
test
mov
ret
sub
outsb
outsb
arpl
push
mov
mov
inc
mov
push
mov
das
nop
sbb
outsl
inc
addl
dec
inc
add
push
insb
and
out
cmpsl
out
mov
sub
ljmp
stos
lds
clc
pop
xor
jmp
stos
mov
fwait
mov
scas
sbb
sub
jns
dec
adc
and
xchg
test
rcll
jmp
ret
or
arpl
lret
daa
mov
out
out
inc
dec
mov
lret
push
dec
xchg
rorb
loope
dec
or
out
lcall
into
and
out
movsb
jl
push
or
and
in
movsb
and
arpl
adc
mov
into
lret
ret
sub
xor
mov
into
mov
xor
add
mov
ljmp
add
shrl
lea
ljmp
pop
outsb
or
inc
imul
mov
bswap
or
jnp
and
arpl
fwait
bt
mov
mov
nop
loope
or
scas
leave
stos
ret
mov
es
sbb
rclb
inc
jnp
fwait
dec
mov
scas
mov
jmp
xchg
ds
push
inc
lcall
push
clc
mov
into
test
sub
in
pop
sbb
xchg
mov
jp
lods
sbb
pop
bound
test
test
stc
xor
loope
mov
mov
mov
iret
or
cld
psubb
fsubrs
outsb
dec
push
leave
or
and
loope
ljmp
hlt
fwait
fwait
cs
outsl
leave
popa
scas
mov
jl
add
and
mov
cmp
and
push
cmove
mov
repz
xchg
xor
and
addr16
mov
dec
arpl
andl
nop
rorl
out
mov
int
mov
or
ficoml
push
inc
jbe
push
jp
stos
jb
icebp
cs
clc
inc
test
xor
ret
insl
sub
les
cmp
inc
mov
push
mov
lcall
aad
mov
dec
cmp
lret
loopne
mov
dec
in
ret
lods
outsl
ja
adc
lock
sbb
sarl
mov
xchg
inc
jo
or
lret
loop
inc
jge
adc
adc
push
push
leave
data16
cwtl
mov
jecxz
lods
or
cs
mov
cmp
xchg
aam
cmp
iret
subb
sub
sti
sub
or
cld
cmp
mov
cmpl
arpl
int
mov
mov
mov
jae
add
mov
insl
sbb
test
mov
clc
pop
jle
dec
andl
add
adc
mov
test
add
cmc
mov
outsb
cs
test
xchg
and
loope
scas
mov
sub
insl
mov
addb
int3
ret
mov
add
cmc
or
mov
ret
out
and
test
out
or
xor
jbe
ret
in
jno
add
lock
in
sub
lret
jo
lcall
hlt
jnp
inc
push
jnp
bound
sarl
sub
adc
or
es
push
sub
in
or
add
test
iret
subl
jecxz
or
shrl
insl
lret
dec
jns
sbb
dec
fcompl
bound
insl
xchg
stc
sub
mov
inc
cmp
mov
inc
repz
xchg
adc
and
mov
mov
push
iret
lods
int
ljmp
cmpsb
fwait
and
scas
push
mov
sti
lcall
cmp
dec
sub
and
insl
add
and
jne
popa
mov
cmp
repz
xchg
sahf
jecxz
cmp
in
xchg
scas
mov
push
mov
scas
outsb
mov
lods
test
repnz
movsb
jecxz
jno
stc
sub
cwtl
out
aaa
jg
lds
js
mov
push
iret
insl
push
add
lea
adc
mov
cmp
out
and
dec
aas
lea
dec
xorl
sub
into
mov
cs
dec
out
ret
sub
hlt
jmp
push
lods
mov
jb
leave
jmp
leave
ljmp
dec
popa
ret
mov
ffreep
lea
imul
mov
lods
stos
arpl
stos
dec
jno
dec
ret
sti
adc
lea
lea
dec
push
mov
fwait
mov
data16
mov
stos
and
add
dec
in
out
xor
pop
adc
lea
pop
je
or
jb
lea
jo
insl
jg
js
sub
jbe
sti
dec
das
dec
mov
mov
ret
arpl
dec
sub
mov
lds
and
inc
push
scas
rol
xor
cmpsb
insb
dec
push
scas
dec
xchg
mov
inc
jmp
inc
or
repnz
insl
scas
leave
sti
shrb
or
outsl
mov
push
test
push
push
sub
add
into
sbb
jno
cmpsb
dec
in
imul
fcoml
add
or
dec
in
pop
les
inc
lret
sub
stos
jne
je
bound
mov
jbe
addr16
jp
cmp
test
dec
jp
push
or
nop
add
scas
or
flds
je
mov
nop
mov
or
orl
xor
test
add
or
jns
loopne
ja
loope
mov
or
adc
lds
fs
ljmp
add
jne
loop
mov
sub
mov
jmp
mov
ds
fs
jecxz
out
xchg
cmp
dec
popa
add
jmp
adc
test
jae
xchg
out
or
and
jecxz
shll
aad
shlb
jp
add
mov
std
push
je
dec
imul
mov
xchg
dec
xlat
les
mov
mov
jmp
mov
cmp
lea
pop
outsb
mov
ljmp
lods
into
je
add
mov
cs
icebp
out
shl
cmpsl
addr16
cmp
daa
pop
and
inc
hlt
dec
sub
andb
cmp
flds
lea
imul
stc
and
push
mov
cld
and
ljmp
call
jl
sub
mov
xor
aas
insl
flds
int3
push
lahf
movsl
iret
outsb
sub
push
or
jne
xor
out
das
xchg
jno
sub
lret
jno
imul
dec
out
mov
push
push
mov
stc
cmpsb
xchg
xor
outsb
dec
pop
pushf
roll
imul
cld
pop
pushf
sti
xchg
lret
roll
cld
clc
dec
lock
add
ds
test
jle
bound
leave
fldenv
cmp
test
mull
out
cmpsl
xchg
and
mov
pop
jle
dec
ret
cmp
inc
lcall
ljmp
pop
bound
mov
iret
imul
test
dec
loop
test
cli
adc
jl
xchg
es
or
stc
shll
pop
pushf
int
mov
pop
lahf
hlt
sub
mov
stos
inc
out
sub
lods
iret
pop
sbb
jp
scas
jl
insl
scas
inc
shrl
pop
xor
xor
in
adc
jecxz
mov
and
mov
lahf
inc
scas
punpckhwd
or
inc
das
imul
push
xchg
loope
mov
mov
iret
lds
mov
mov
insl
ljmp
push
int3
outsb
cmp
or
fs
sbb
xchg
ret
pop
pop
add
bound
or
popa
ja
jg
imul
xor
dec
jbe
andl
fmuls
xchg
stos
lds
fs
imul
arpl
in
nop
das
clc
cmpsb
leave
add
inc
loope
insl
jecxz
mov
lods
mov
jb
sbb
mov
and
jg
and
mov
mov
add
subl
dec
sarl
test
adc
mov
divl
dec
lahf
imul
leave
cs
push
out
lea
pop
fs
lret
jl
mov
out
and
pop
or
or
mov
daa
adc
pcmpgtw
jle
jmp
adc
das
or
inc
mov
xor
iret
dec
dec
outsb
das
xor
add
scas
cmpsl
mov
lea
xchg
clc
or
sub
lret
js
pop
lret
push
dec
into
dec
dec
mov
leave
dec
inc
dec
jnp
inc
mov
les
icebp
dec
jecxz
leave
lret
dec
and
mov
mov
mov
fmull
cmp
xor
add
insl
mov
jecxz
xchg
push
mov
jnp
cs
add
cmp
mov
and
sub
mov
xor
stos
je
xchg
and
cmp
jne
pushf
bound
sub
cmovb
jp
fidivl
imul
cmp
mov
ret
ljmp
push
lea
dec
insl
or
stos
scas
jo
dec
or
xor
lods
mov
and
in
repnz
mov
xorl
shll
ret
insl
dec
roll
mov
sub
inc
and
jnp
or
into
fwait
sbb
fcompl
xchg
xor
add
and
inc
mov
mov
bound
ss
bound
jl
dec
mov
xor
in
inc
push
and
or
repz
push
dec
stos
push
lods
cs
dec
outsb
rcrl
and
scas
sub
mov
das
inc
dec
or
cmpsb
bound
fldenv
push
dec
sub
pop
add
jno
dec
shld
stc
dec
repz
adc
mov
cli
or
das
cmp
mov
jbe
lock
inc
iret
sub
fisttpl
test
cmp
popa
mov
and
mov
add
or
jo
sub
pop
sub
mov
clc
sub
insl
mov
out
lods
iret
ds
loop
out
pop
inc
inc
xchg
mov
fwait
xor
into
nop
bound
sub
mov
add
into
pushf
and
pop
aam
cld
mov
or
out
lods
fiaddl
push
scas
int3
xchg
push
push
pop
testl
insl
sub
hlt
aaa
adcl
outsl
xchg
scas
dec
test
bound
paddb
insl
imul
ljmp
jecxz
stos
inc
nop
jo,pn
shrl
mov
outsl
imul
jnp
or
shrl
jb
outsb
imul
or
out
xor
repz
iret
xchg
js
insl
jecxz
arpl
lods
mov
jbe
enter
sbb
ret
repnz
add
lods
jns
and
jnp
into
outsb
ret
in
xchg
mov
jns,pn
jb
sub
mov
scas
jo
pop
incl
lock
or
int
sub
pop
cmp
lods
lods
sub
lea
jne
xchg
scas
into
dec
pop
out
jno
jbe
stc
or
dec
cmp
inc
loop
loop
inc
int
imul
lds
and
mov
add
test
sbb
cs
inc
and
mov
outsb
clc
adc
and
inc
and
jns
cmpsb
dec
mov
ret
and
and
movsl
out
int
pop
in
jge
insl
sub
popa
dec
insb
add
ss
sub
ljmp
cmpsb
jmp
lods
pop
pop
and
pop
loop
lds
fadds
or
push
imul
mov
shll
insl
imul
sub
mov
jno
add
pushl
jbe
adc
xorb
push
mov
lret
push
ljmp
pop
mov
or
mov
arpl
mov
popa
push
je
lods
mov
jecxz
jno
mov
dec
subb
xor
daa
lods
insb
lds
cmp
jo
test
cwtl
aam
arpl
loope
outsl
insl
loop
and
jge
add
outsl
roll
pcmpeqd
lock
push
pop
add
cs
cmpsl
push
mov
xchg
or
icebp
ja
popa
mov
mov
push
dec
adc
daa
scas
je
test
aas
lds
pop
in
add
gs
xadd
lds
jecxz
push
pop
clc
in
cmp
lods
xchg
mov
and
loop
lds
mov
icebp
outsb
inc
insl
arpl
inc
pop
inc
call
cmp
test
sbb
rorb
lods
xor
push
pop
loop
imul
loope
and
insl
push
ss
xlat
int3
push
jmp
call
mov
mov
mov
stos
outsl
rorl
mov
sbb
fsubrp
and
add
fidivl
cmp
jg
jnp
stos
or
mov
sub
and
push
and
scas
inc
push
jp
mov
call
in
jl
out
push
pop
lcall
xchg
dec
leave
push
dec
rorl
iret
dec
outsb
loope
xchg
and
inc
js
sub
ret
lret
dec
out
push
or
aas
sbb
or
out
dec
push
and
outsb
dec
fsubrl
xor
imul
lods
es
scas
out
fisubs
cmp
ss
mov
sub
les
outsl
pop
filds
dec
push
adcl
or
dec
aas
sbbb
push
jb
mov
xchg
cld
rcrl
cmp
call
push
fmull
inc
and
outsl
rorl
pusha
and
dec
addr16
bound
and
subl
lcall
xor
sbb
subl
in
fs
mov
mov
mov
jne
jb
adc
leave
dec
xchg
and
xchg
and
insl
js
es
xchg
cmp
inc
inc
int
out
test
sub
mov
out
add
insl
add
inc
pop
shl
stos
hlt
inc
dec
filds
push
xor
mov
or
sbb
leave
clc
or
sbb
jl
ljmp
ja
jnp
test
dec
jmp
pop
jmp
iret
mov
mov
cmpsb
and
inc
jl
test
iret
out
jmp
out
pop
inc
faddl
inc
push
sub
inc
test
repz
mov
dec
or
jo
into
jecxz
and
scas
sub
cli
fwait
lods
lock
jb
mov
lea
mov
or
enter
adc
sub
imulb
es
mov
and
sub
outsb
sub
and
sub
cmp
iret
xchg
jnp
add
mov
clc
dec
sub
cli
and
out
cmpsl
mov
out
xor
sub
mov
push
in
gs
mov
dec
lods
and
pop
lods
arpl
jns
and
mov
das
bound
ljmp
fs
dec
adc
mov
loop
movsl
das
jecxz
out
add
insl
cmpsb
mov
adc
filds
subl
ljmp
inc
add
jb
pop
dec
dec
cmp
cmp
jne
loop
cs
leave
ja
arpl
imul
arpl
sbb
popa
shr
pop
ret
out
mov
sub
dec
adc
andl
or
shrb
sub
clc
push
mov
cmp
test
bound
lea
rolb
imul
inc
xchg
jle
lods
fstpt
insb
xor
out
and
mov
ret
orl
aas
or
pop
sub
sub
in
or
popl
xchg
out
mov
cs
mov
and
sti
stos
mov
xor
mov
subl
fs
jp
inc
popa
lcall
scas
dec
jo
and
pusha
clc
fisubrs
mov
stos
out
out
dec
mov
mov
sbb
into
dec
jmp
jmp
stos
out
mov
insl
sbb
jbe
adc
cmpsb
fucomi
shr
outsl
jp
ret
inc
mov
pop
sub
inc
jle
pop
mov
lret
out
or
scas
and
inc
mov
dec
loope
ret
iret
or
outsb
dec
xchg
lods
sub
sub
jb
addr16
mov
test
jb
insl
and
sub
clc
or
or
mov
out
xchg
xchg
jnp
sub
cmp
add
xchg
or
insl
push
sti
mov
jl
outsl
sub
out
mov
pop
xorl
xor
jecxz
scas
jecxz
dec
js
out
stc
das
je
mov
popa
lcall
arpl
xchg
stos
out
test
adc
push
je
outsl
mov
arpl
arpl
fsubp
sub
and
sti
es
das
lret
pop
push
into
mov
mov
insl
mov
mov
dec
pop
daa
dec
lea
fs
dec
mov
add
push
das
lahf
mov
cmp
call
test
in
cs
jb
cmpsl
scas
mov
add
out
dec
jb
aad
imul
dec
roll
sbb
xorl
movsl
stc
dec
test
jmp
pop
or
mov
out
out
mov
dec
lret
xorl
xor
pop
repz
lods
out
sub
shll
cmp
loop
call
rcr
push
mov
jb
inc
mov
imull
out
enter
ja
dec
imul
out
inc
inc
xchg
subl
stos
imul
push
add
out
ja
ret
aaa
inc
nop
movsl
sbb
push
jle
mov
gs
lods
mov
test
outsb
dec
divl
inc
dec
lock
fldt
pop
loopne
mov
je
outsl
out
movsb
jmp
sub
ret
adc
popa
sbb
sub
push
lea
dec
or
daa
lods
mov
pop
in
xchg
sub
jecxz
das
outsb
jg
loope
clc
sub
stos
addr16
into
out
inc
add
je
int
inc
loop
nop
test
sub
mov
inc
popa
jnp
iret
dec
add
lea
or
into
adc
mov
insb
dec
add
dec
lea
loop
push
fwait
ret
or
push
and
mov
loope
dec
aas
sub
out
arpl
or
inc
punpckhwd
out
in
and
ret
and
jns
es
arpl
out
mov
mov
add
hlt
mov
je
scas
in
out
cld
mov
jmp
add
inc
stos
scas
clc
movl
jne
arpl
das
lea
mov
pop
cli
jecxz
or
jno
out
iret
mov
inc
daa
mov
sbb
pop
std
and
dec
push
jno
fwait
or
mov
add
dec
xchg
sbb
adc
sub
sub
mov
into
orl
jb
leave
insl
mov
mov
xor
mov
mov
xlat
or
mov
add
dec
bound
ret
dec
mov
sbb
lea
fadd
mov
dec
sub
cli
andb
or
dec
dec
mov
cli
sub
addl
dec
je
scas
or
loopne
sti
test
jmp
cltd
adc
jecxz
iret
dec
or
and
xchg
scas
ljmp
call
test
loop
push
sub
or
int
push
inc
mov
testb
je
dec
sub
in
xchg
jmp
cmp
dec
push
lcall
andl
push
ret
sub
or
into
dec
push
mov
mov
ret
cmovp
dec
loope
movsl
and
sub
loop
dec
push
subl
sbb
pop
insl
mov
cmp
mov
stos
pushf
mov
movsl
xchg
dec
dec
ret
xchg
jne
es
loope
insl
pop
and
mov
cmc
dec
sbbl
inc
lea
dec
push
movsb
insl
mov
cld
imul
ljmp
sub
fsubrs
scas
leave
mov
xor
sub
into
fcmovnb
and
nop
out
clc
out
jno
inc
sub
in
out
jno
ja
test
call
fstps
push
cld
repz
icebp
jmp
xor
ret
dec
pop
ljmp
add
sbb
jmp
mov
jmp
je
cmp
mov
push
roll
and
dec
cmpsb
mov
jno
outsl
stos
mov
push
arpl
jmp
js
ljmp
xchg
adc
push
or
and
cmp
into
mov
dec
cmc
inc
dec
imul
jecxz
test
and
xchg
jo
dec
cmpsb
roll
fiadds
sub
sub
and
out
imul
int
aam
insl
pop
ret
xor
arpl
daa
sub
ret
ljmp
cli
fldcw
cli
in
mov
adcb
mov
out
mov
jb
adc
js
subl
xor
xchg
jecxz
stos
dec
scas
pandn
mov
sbb
cli
and
mov
outsl
jbe
pop
jecxz
fwait
xor
in
xlat
out
clc
fdivr
mov
inc
jl
out
and
js
in
loope
push
imul
mov
in
xor
sbb
jle
rol
sbb
and
test
mov
leave
fisubl
push
outsl
ljmp
iret
sbb
mov
imul
cmp
rorl
bound
xchg
nop
jo
dec
push
cmp
and
jmp
in
dec
dec
scas
push
outsl
mov
les
pop
popl
clc
cld
sub
test
dec
test
push
test
adc
mov
cwtl
pop
shrl
or
jp
sti
ret
lods
int
xchg
dec
les
or
repz
hlt
inc
inc
sub
jne
push
inc
or
and
jns
or
cmpsb
icebp
addr16
or
mov
in
sbb
and
sar
scas
call
sarb
inc
jecxz
iret
int
les
xchg
dec
mov
ret
dec
test
rorl
mov
add
jecxz
add
clc
lret
arpl
rorb
out
inc
nop
iret
sub
es
frstor
or
xchg
sub
arpl
mov
lods
mov
popl
mov
daa
outsb
and
jmp
push
push
scas
lret
aam
pop
imul
xchg
adc
shrl
lcall
or
adc
bound
dec
add
cs
fprem
adc
add
hlt
outsl
mov
pop
popa
dec
into
pushl
mov
arpl
es
je
in
dec
out
sub
mov
shlb
insl
sbb
dec
add
add
dec
sub
in
xchg
outsb
sub
jne
jb
pop
sub
ret
setg
dec
bound
test
xchg
fisttpll
je
sub
movsl
stos
outsl
cmpsl
outsl
scas
dec
leave
bnd
sub
push
popa
in
push
cs
iret
cmpsl
test
pop
je
test
scas
lock
mov
or
add
jl
add
inc
nop
imul
lahf
cltd
pop
into
fstpl
bound
sar
popa
outsb
mov
sub
jo
mov
js
dec
add
outsb
cwtl
sub
mov
outsb
mov
bound
mov
arpl
inc
sub
inc
std
insl
add
rcll
in
cmp
inc
clc
mov
push
cli
add
int
push
or
lea
loop
add
xor
mov
or
bswap
cmp
jecxz
ljmp
mov
jl
iret
sub
dec
stos
sbb
xchg
xchg
fcomi
pop
repz
cmc
cmpsl
repz
into
movsl
pop
or
les
xchg
xchg
loope
add
mov
push
lret
xor
movb
das
stos
arpl
cmpb
sub
das
lds
mov
lock
fldt
lock
jno
add
outsl
stos
enter
jg
jmp
dec
sub
out
push
add
and
and
repz
scas
pop
jo
sub
mov
jg
arpl
loope
sub
mov
inc
dec
mov
ret
inc
mov
sub
mov
pop
sahf
insl
or
sub
mov
add
hlt
aam
inc
and
cmpl
nop
jmp
into
leave
arpl
mov
cmp
scas
mov
sub
fs
dec
test
cmpxchg
adc
sub
insb
mov
nop
insl
mov
and
mov
mov
push
sbb
nop
jae
sub
stc
daa
jp
aaa
leave
jno
dec
data16
push
sub
push
andl
mov
and
cmc
inc
test
lret
insb
repz
movsl
scas
cld
lret
xchg
push
loope
stos
adc
pop
das
mov
jecxz
push
inc
ret
out
cmp
xor
daa
jns
popa
mov
nop
sub
push
lret
mov
mov
mov
ret
push
mov
fildl
je
jmp
mov
cmp
outsl
das
inc
mov
jbe
dec
push
ljmp
mov
out
mov
or
shrb
jmp
insb
test
or
data16
dec
das
and
out
sub
ss
bound
test
mov
popl
imul
loopne
mov
test
adc
dec
subl
jbe
cmp
push
mov
stos
mov
imul
or
daa
mov
inc
and
inc
daa
cmp
test
int
jbe
cs
sbb
push
stos
nop
test
sub
jl
inc
lods
inc
ret
cmpl
lret
dec
jecxz
in
jb
outsb
nop
jno
push
jmp
dec
push
inc
mov
jmp
out
inc
lds
cltd
lds
cmp
fisttpll
in
nop
pop
jnp
scas
mov
inc
and
insl
mov
les
or
jb
sbb
sbb
sub
fwait
cs
mov
in
sub
frstor
lea
push
pop
inc
aaa
jnp
insl
mov
pop
inc
scas
jo
loope
inc
outsl
cs
pop
sti
mov
mov
imul
sbb
ljmp
repz
pop
dec
dec
add
movsb
lahf
movsl
sub
add
inc
inc
outsb
mov
sub
lret
mov
mov
out
sbb
into
call
daa
mov
mov
stos
cmpl
mov
dec
rorl
into
ljmp
mov
push
iret
add
cmp
loopne
add
dec
ret
movsb
stos
mov
cmp
addr16
orl
imul
dec
pop
stos
je
jp
pop
mov
inc
mov
movsb
popf
and
adc
fs
or
loop
mov
fcmovu
inc
jo
out
sbb
mov
xchg
pop
bound
movsl
adc
dec
arpl
popa
jp
mov
jecxz
mov
push
sub
out
in
ljmp
imul
lea
subl
inc
les
and
jmp
and
vpand
or
jb
test
in
push
mov
js
cmp
scas
shrl
clc
sar
out
out
xor
lret
jne
adc
lods
movsl
insl
mov
movsl
sub
cmp
or
mulb
xchg
mov
lcall
or
and
dec
mov
mov
imul
or
imul
cmp
adc
out
add
mul
or
fdivl
daa
stos
scas
jl
icebp
clc
repz
cmc
shl
fmuls
inc
rclb
mov
mov
leave
scas
dec
pop
es
jno
out
or
cmp
mov
xlat
gs
dec
loope
outsb
jne
bound
and
xchg
cmp
lret
push
mov
pop
int
mov
xorb
dec
fwait
mov
dec
xchg
sarb
scas
subl
out
loope
arpl
cld
in
dec
cmp
xchg
out
subl
lock
and
icebp
inc
xchg
inc
pop
xor
movsl
jecxz
adc
mov
clc
loope
ret
mov
flds
inc
dec
lret
sbb
bound
dec
pop
movsb
add
loope
cmpl
imul
daa
xchg
mov
xlat
aas
sub
inc
push
stos
int
push
inc
cmp
sub
sbb
clc
outsb
or
shll
bswap
scas
lcall
into
mov
dec
mov
loop
mov
imul
nop/reserved
les
imul
push
daa
pop
addr16
add
fs
outsb
sub
ret
mov
lods
push
or
push
jb
or
jbe
jne
xchg
dec
lods
int
daa
out
mov
fisttps
add
push
mov
scas
andb
xor
sti
faddp
out
insb
cmp
or
lea
aas
xchg
jecxz
lds
xor
insl
adc
insb
daa
or
jno
and
fsubrl
jmp
lahf
iret
xchg
insl
push
sub
jne
mov
test
jae
fs
movsb
sub
pop
mov
add
adc
jle
out
fimuls
mov
insl
dec
jmp
dec
add
outsb
and
sbb
popa
and
or
xchg
dec
jmp
iret
ficoml
sub
std
add
dec
daa
sub
pop
rcrl
pop
stos
xor
sbb
add
shll
sub
in
bswap
push
cmp
insl
scas
mov
mov
test
fsubl
int3
pop
jecxz
adc
bound
mov
bound
dec
mov
or
scas
test
add
mov
in
xchg
mov
cmp
jl
lods
rorl
test
inc
out
lret
ret
jbe
test
testb
mov
test
stos
xor
dec
or
insl
outsl
ud1
mov
dec
mov
fimull
pop
mov
lret
mov
dec
into
mov
iret
mov
imul
loope
arpl
enter
les
inc
lea
lcall
lods
and
aaa
vmread
add
adcl
and
outsl
jbe
cmp
test
sub
inc
es
and
jnp
inc
outsb
mov
test
les
dec
pusha
repnz
outsb
mov
fistps
mov
add
mov
xchg
sbb
loope
mov
std
cltd
dec
add
mov
je
iret
arpl
ret
pop
sbbl
mov
mov
and
jmp
stos
test
cmp
cmp
leave
pop
dec
roll
mov
cmp
mov
mov
mov
inc
testb
or
add
or
xor
and
mov
arpl
stos
pop
outsl
sub
lods
inc
and
mov
xchg
imul
mov
mov
mov
scas
cmpl
jg
dec
jae
jno
sbb
mov
fsts
jne
jb
movsl
dec
or
mov
dec
lock
and
cmp
mov
out
or
push
int
jp
dec
daa
jmp
and
enter
ret
in
mov
jo
jb
push
add
test
insl
stos
push
mov
hlt
dec
fstpl
popw
jg
dec
lret
push
sub
jg
cmovne
add
push
sub
test
jo
ret
mov
sbb
jno
push
mov
xor
mov
dec
sbb
stos
mov
mov
and
or
addl
into
push
shr
jecxz
cmp
out
lods
xchg
daa
jae
in
jge
and
and
imul
outsl
jno
mov
dec
add
lock
mov
lods
fwait
jne
dec
jmp
push
and
mov
sub
cli
cmpsb
dec
outsb
or
or
cmc
mov
inc
stc
dec
stos
lock
aam
movsl
out
push
ret
jnp
dec
inc
subl
scas
jne
jb
mov
cmp
fs
and
dec
mov
and
test
cwtl
mov
xchg
pop
jmp
insl
jmp
push
je
mov
sti
iret
scas
dec
test
and
aam
in
scas
inc
mov
mov
jo
out
dec
mov
ret
jmp
call
ss
mov
lahf
scas
adc
testb
into
inc
mov
stos
test
jmp
inc
mov
mov
cs
inc
jl
lods
ret
xchg
cltd
push
and
loope
popa
rcll
xchg
push
outsl
mov
into
or
pushf
add
test
jnp
scas
nop
arpl
loope
pop
jmp
and
dec
and
pop
sub
mov
push
cmp
sub
fsubrl
cmp
pop
mov
std
filds
or
xchg
push
test
sti
adc
inc
jne
out
cs
add
pcmpeqd
scas
sahf
sub
aaa
sbb
insl
ljmp
outsb
ret
add
sbb
cmc
inc
in
and
or
mov
loop
or
sub
mov
ret
sub
add
dec
inc
mov
sub
ljmp
repnz
shrb
mov
mov
mov
lods
popa
dec
cs
das
jb
icebp
mov
in
add
lea
popa
jbe
jb
xchg
mov
cmovno
jle
subl
ret
daa
cmp
jae
outsb
scas
movsb
loope
insl
mov
rorl
pushf
lds
jl
xchg
inc
iret
and
jge
das
adc
jbe
shll
lret
mov
or
shrb
jmp
out
pop
or
in
jbe
mov
push
movzbl
movsl
sub
jecxz
sti
nop
ret
je
outsl
scas
test
or
data16
das
sbb
hlt
dec
popf
pop
movsb
js
outsb
pop
mov
jge
fidivrs
iret
jmp
repz
pop
jns
jg
cmp
dec
leave
push
cmc
ja
fsubs
push
out
pop
push
outsl
pop
inc
imul
in
pusha
sar
push
mov
call
dec
adc
mov
mov
std
int
add
mov
scas
inc
jbe
mov
fs
push
mov
lar
aad
mov
cmc
adc
jecxz
add
insl
pop
or
cmp
ss
dec
jecxz
jb
daa
mov
fwait
scas
loope
mov
in
jmp
repz
pusha
dec
add
or
test
pop
insl
cwtl
pop
mov
jp
xlat
cmp
arpl
jl
sub
lea
sbb
push
mov
lret
inc
int
jnp
scas
add
jo
nop
movsb
ljmp
sbb
scas
jge
arpl
cmp
insl
add
mov
push
lea
inc
popa
stos
sub
mov
dec
loope
mov
ss
lret
jl
ljmp
scas
jp
adc
test
dec
icebp
xchg
lret
push
ljmp
in
rorl
jno
nop
das
cltd
push
xor
fcmovnu
lds
das
jne
dec
or
jns
cli
inc
sti
dec
loope
iret
repz
mov
push
jecxz
or
or
cmovne
sarb
icebp
subl
ljmp
push
clc
ss
sub
push
inc
roll
mov
jno
dec
xchg
imul
ljmp
jb
inc
scas
or
inc
lods
pop
cmp
les
ror
hlt
jle
int
sti
jne
jb
test
stos
stos
sbb
cltd
inc
add
mov
jb
and
sahf
fs
loope
popa
mov
mov
mov
jp
add
push
aas
fcmovnbe
inc
mov
lahf
outsl
ljmp
xor
call
mov
test
mov
inc
jo
outsl
ret
shlb
mov
and
dec
in
test
dec
aam
jmp
jnp
repnz
ret
lahf
jno
inc
pop
xchg
mov
daa
scas
mov
das
inc
add
xor
std
and
into
mov
and
rorb
pop
roll
into
jmp
stos
arpl
cmp
push
xor
daa
std
fldt
or
aam
mov
mov
adc
iret
and
frstor
insl
mov
insl
mov
push
orl
movsb
popa
add
pop
test
mov
popl
stc
je
in
mov
mov
lret
insb
cmp
dec
dec
scas
bound
sub
arpl
lcall
push
cmp
leave
mov
int
sub
inc
push
scas
repnz
outsb
popf
mov
jecxz,pn
and
je
push
sub
lcall
sub
insb
rorl
adc
int
xlat
imul
movsl
and
and
fiaddl
inc
push
cmp
outsb
sbbl
into
insb
and
scas
imul
movsl
xchg
jmp
int
xlat
iret
dec
test
xlat
xor
jmp
xchg
testl
inc
outsl
lods
or
lea
sub
nop
cmp
shr
decl
cmp
in
lock
mov
stos
push
mov
jmp
scas
dec
xchg
imul
jge
stos
ss
add
das
inc
jbe
mov
or
lret
nop
jmp
dec
insb
inc
dec
lods
popa
mov
cld
sub
rorb
mov
mov
fistpl
mov
sub
and
dec
and
in
mov
sub
test
shll
sub
sub
cli
push
scas
out
pop
stos
movsl
lea
add
mov
mov
lret
clc
ret
inc
jp
out
and
pop
jns
xchg
clc
arpl
out
shrl
sub
push
ljmp
call
stos
sub
scas
mov
sbb
or
nop
and
fmuls
jg
loope
or
js
stos
lods
cs
adc
outsb
and
in
ret
mov
roll
inc
xlat
sub
ja
dec
mov
mov
sbb
stos
lret
fldt
pop
stos
sti
dec
fs
out
add
fsts
or
ja
jl
or
popa
sub
stos
insl
and
in
lea
push
xchg
cmp
arpl
outsl
in
jmp
mov
bound
and
scas
into
add
into
inc
sbb
ljmp
rorl
addr16
inc
lret
adc
loopne
dec
subb
and
dec
push
add
popf
arpl
outsl
orl
or
dec
insb
fisttpl
ret
mov
movsl
imul
sti
popf
xorl
nop
sbb
iret
mov
imul
fiadds
xlat
int
loope
jecxz
orl
and
mov
xchg
shrl
fs
sahf
pop
sbb
std
out
jle
and
outsl
jecxz
scas
lods
shll
sub
xor
sti
popa
int
loope
mov
cmpsl
lcall
movsl
popa
add
insl
and
jmp
lock
and
mov
cli
mov
shll
add
and
fwait
mov
ret
fs
mov
insb
jmp
mov
icebp
or
push
imul
and
mov
int
popa
xchg
jp
sbb
xchg
cld
test
inc
jns
inc
fwait
aas
out
dec
scas
subl
mov
shll
jecxz
inc
dec
mov
and
test
sbb
das
stos
clc
and
or
mov
movq
mov
and
test
ret
stc
sub
or
ljmp
test
in
bound
jecxz
and
bound
andl
subl
dec
lock
add
fs
ret
outsb
and
lods
jnp
scas
add
nop
lret
xlat
repz
call
outsb
xor
aaa
inc
imul
push
outsl
lret
clc
ret
jmp
fldt
inc
in
insl
rcll
dec
lahf
imul
dec
popa
mov
rcll
outsb
hlt
lds
sub
scas
jl
in
inc
outsb
mov
leave
xchg
xor
mov
push
ret
mov
loope
lods
push
pop
dec
xchg
outsl
sub
xlat
shll
or
out
sub
fisttpl
iret
push
push
adc
dec
pop
xchg
mov
cli
ret
inc
sub
jp
push
fwait
out
dec
mov
sbb
out
inc
jmp
add
bound
ret
push
cld
dec
mov
std
insl
iret
mov
dec
loope
dec
cli
dec
jne
mov
jp
lea
dec
sub
loop
ret
mull
mov
test
inc
mov
scas
xchg
in
sub
sub
lods
inc
sub
movsl
inc
mov
jo
into
scas
jno
dec
mov
inc
lods
or
xchg
add
dec
aaa
push
sahf
dec
imul
jb
or
jbe
mov
rolb
popa
inc
je
scas
mov
jb
stos
clc
dec
sti
cs
mov
lds
sub
jge
lods
or
jle
cmpsl
lret
scas
shrl
out
inc
outsb
inc
pop
push
jmp
pushf
les
nop
in
inc
adc
mov
sub
out
test
out
cwtl
cmpsl
sub
adcl
pop
outsl
and
mov
sbb
and
imul
pop
or
aam
jp
or
dec
dec
inc
inc
push
mov
and
insb
xchg
mov
mov
shr
add
xchg
lret
dec
cs
push
cmp
jecxz
pop
ja
jb
jb
cmp
jbe
jns
jbe
ds
adc
out
or
out
add
push
push
add
stos
test
inc
jmp
dec
sbb
lcall
and
bound
mov
out
ret
imul
sarb
gs
and
clc
in
inc
push
lods
push
push
mov
in
xor
das
mov
cmc
or
ljmp
sbbl
loope
sbb
arpl
insl
test
jo
pop
sbb
andl
or
sbb
stc
icebp
push
ds
sbb
test
add
aas
outsl
popa
cmc
inc
and
cmp
mov
lea
testl
lods
xchg
mov
aaa
std
clc
push
jecxz
outsb
mov
outsl
fs
stos
and
sub
loope
bound
dec
lahf
dec
ja
int3
pop
push
push
mov
sub
ja
out
sub
xlat
insl
pop
cmpsl
lea
xor
out
xchg
sub
or
jle
subl
inc
stos
sbb
xchg
pop
in
sbb
sbb
push
mov
fimull
xchg
and
aaa
add
clc
cwtl
out
popa
mov
arpl
xchg
rclb
mov
sar
jne
xor
inc
xchg
scas
xor
jecxz
ret
xor
subl
imul
andl
adc
sar
mov
jne
jns
fsts
arpl
iret
rorb
loope
fidivrs
mov
xor
sbb
sub
or
repnz
mov
imul
idiv
push
test
push
lods
loopne
bound
xor
mov
add
sahf
and
cwtl
cmp
sbbb
sbb
add
orl
js
fadd
icebp
jmp
loopne
push
stos
decl
aaa
into
std
addl
adc
xchg
sub
sbb
int3
ljmp
in
xchg
ljmp
sbbl
pop
das
std
mov
imul
lcall
fdivrs
addr16
test
clc
repnz
cld
fsub
lret
test
lea
aas
pop
clc
inc
test
jecxz
xor
test
adc
fucomp
clc
mov
pop
clc
inc
xor
pop
xor
jecxz
or
push
xor
xchg
idiv
mov
loope
lret
rorl
ror
lds
lods
nop
cli
xchg
out
push
ljmp
sbb
lret
sub
mov
or
sub
sti
out
lret
scas
bound
ret
mov
les
push
mov
imul
and
add
and
push
popf
leave
fdivrl
mov
insl
mov
leave
sub
lods
dec
xchg
icebp
movsb
push
or
mov
scas
inc
add
cmp
lds
dec
mov
push
lret
outsb
and
sub
xchg
cwtl
xchg
leave
push
cld
dec
or
jl
ret
nop
loope
jecxz
add
mov
xchg
cmp
arpl
outsb
stos
or
push
push
push
jl
shl
iret
inc
fsubrl
outsl
inc
sub
into
divl
inc
imul
loope
push
arpl
out
mov
sub
test
push
or
sub
sbb
fs
xor
mov
test
popa
mov
and
ljmp
and
and
sti
mov
cld
in
jmp
jb
lret
and
ljmp
test
lods
xchg
int
aad
sarl
nop
outsb
out
cs
sbb
cwtl
mov
bound
int
sub
or
add
inc
fimull
leave
mov
iret
das
aam
les
insl
lods
mov
dec
mov
xchg
mov
add
rorb
adc
test
in
sub
out
xchg
clc
mov
and
mov
into
xchg
adc
mov
inc
into
pusha
out
dec
lods
jbe
stos
inc
lds
inc
icebp
adc
add
loope
outsb
or
out
imul
jge
loop
mov
fildl
ret
inc
pop
outsl
mov
es
lock
pextrw
push
sbb
mov
cs
jnp
cmp
out
sub
pop
add
sbb
jnp
outsb
push
mov
subb
mov
mov
scas
insl
pop
inc
lock
clc
dec
adc
pop
sub
xor
clc
push
jno
call
jae
adc
out
jbe
lea
push
into
fmuls
mov
fnsave
xchg
clc
adc
outsb
mov
mov
outsb
add
clc
testl
arpl
out
xchg
mov
adc
repz
das
jb
dec
loop
rcrb
test
fsubrs
lcall
aam
or
inc
clc
sub
cwtl
xor
mov
mov
mov
mov
cli
and
in
push
or
dec
ss
stos
jecxz,pn
lret
xchg
hlt
scas
jns
push
imul
sub
out
pusha
lods
mov
push
inc
dec
into
imul
sub
mov
orb
lods
pop
dec
jo
roll
test
mov
mov
iret
out
outsb
out
jg
inc
imul
insl
stos
add
int
mov
hlt
scas
and
int
shlb
scas
dec
mov
mov
bound
push
pusha
mov
push
pop
mov
xchg
jp
rcrl
lds
scas
add
sub
test
xchg
mov
int
or
subb
cmp
int
or
jg,pn
fmuls
movsl
jecxz
popa
pop
sub
shr
test
add
xchg
test
jns
arpl
xchg
loop
add
mov
and
jmp
push
adc
movsl
jne
sub
dec
stos
sbb
mov
popa
lret
mov
or
mov
inc
comiss
inc
xchg
sub
pop
xchg
push
push
ror
ljmp
xchg
add
sub
push
call
jp
js
mov
jb
fildl
or
dec
lret
mov
punpckhwd
and
jg
out
lock
ljmp
lea
out
into
int
dec
sub
in
punpcklwd
sti
nop
add
and
outsb
out
out
lods
or
and
into
add
cmp
jle
or
loope
and
in
scas
jbe
es
add
mov
fcompl
jmp
jmp
adc
in
inc
jbe
dec
scas
jmp
mov
ss
sub
ret
pop
pop
jmp
dec
lret
sub
lods
ss
sbb
add
scas
aad
mov
addr16
ret
leave
mov
hlt
cs
dec
pop
jo
jmp
stc
fidivrl
test
popa
in
dec
lea
mov
inc
out
mov
nop
fwait
cmp
inc
fidivl
scas
iret
in
arpl
jl
popa
das
mov
inc
ret
jb
ljmp
mov
lret
mov
dec
add
ret
inc
inc
call
mov
shll
out
push
cmpsb
scas
mov
clc
lea
mov
and
ret
lret
inc
or
sub
int
inc
or
jmp
clc
push
jno
or
scas
addl
lea
jecxz
leave
sub
mov
lret
push
mov
mov
inc
into
mov
dec
inc
jecxz
mov
dec
jns
int3
or
es
leave
in
mov
or
inc
cmpsb
jecxz
int
fsubs
loope
int
dec
jb
insl
cs
inc
mov
sbb
add
mov
popf
int
ror
jb
std
aaa
adc
insl
ret
test
stos
pop
mov
or
cmc
lahf
inc
ret
popa
inc
fs
mov
add
push
loop
stos
scas
jl
dec
lea
ret
mov
insl
mov
test
dec
arpl
subl
mov
add
rorb
adc
xchg
nop
jecxz
je
jo
jno
mov
ret
lock
popa
mov
test
clc
or
out
xchg
insl
add
jo
out
mov
sti
mov
iret
movsb
lret
cmpsl
adc
clc
inc
and
in
es
inc
movsl
out
jmp
mov
and
scas
push
clc
lods
fldl2t
stos
lret
pop
sbb
clc
inc
mov
test
mov
out
or
das
fisubrs
and
test
aad
inc
iret
or
es
dec
add
jmp
push
test
outsb
sbb
test
ss
add
dec
int3
aaa
loope
leave
stos
imul
pop
jp
bound
dec
into
jns
mov
dec
lret
lods
lods
jp
scas
jb
cmpsb
popa
rorl
mov
ret
outsl
mov
cmovae
rorb
into
pop
subl
insl
or
arpl
and
in
cltd
sti
iret
ret
int
insb
cltd
nop
outsl
loope
orl
xchg
pop
sub
insl
insl
xchg
in
dec
jae
js
sub
cs
dec
adc
xor
dec
cmp
inc
jecxz
bound
bound
into
scas
cltd
push
jno
or
mov
push
orb
mov
arpl
xor
and
je
orl
mov
imul
pop
cltd
subl
pop
mov
mov
push
cltd
mov
pushl
pop
dec
sub
pushf
loope
or
lds
ret
mov
stc
out
insl
ret
lahf
sti
arpl
mov
mov
sub
daa
mov
mov
add
push
subl
jb
cld
scas
jne
jne
cmp
jo
mov
in
dec
pcmpeqd
adc
clc
dec
es
or
mov
ret
dec
stos
dec
ret
adc
sub
psrld
arpl
dec
lea
mov
fxtract
sarl
icebp
insb
mov
out
jmp
rcrb
inc
cmp
mov
cmpsl
mov
mov
or
jle
sbb
repz
inc
adc
lds
adc
mov
bound
sti
insl
inc
push
nop
ret
pop
loope
mov
scas
in
jl
push
mov
inc
jecxz
pop
dec
fwait
subb
stos
jo
std
lock
mov
fwait
lret
je
or
xchg
mov
push
and
adc
cld
cmp
rol
popa
cmpl
insl
mov
loope
shll
or
imul
stos
dec
scas
fs
add
outsl
push
test
mov
dec
mov
add
jnp
outsb
lods
das
in
popa
into
bound
cs
leave
out
pop
xchg
loope
fmull
scas
lods
ljmp
stos
jecxz
addl
and
inc
lea
or
push
sub
cmp
and
nop
or
dec
add
int
jo
mov
arpl
add
mov
lods
push
insl
std
outsl
dec
es
cmp
ret
and
lock
test
jecxz
imul
add
into
mov
mov
movsl
or
xchg
ret
cmp
or
and
in
ret
aas
arpl
push
cli
bound
push
imul
scas
xchg
outsb
push
push
xlat
jnp
arpl
stc
orl
jmp
insb
clc
fisubrl
out
jp
out
dec
sub
repz
sub
ret
dec
ljmp
jl
xorl
into
jl
sub
mov
scas
hlt
inc
out
or
push
in
or
lods
in
mov
das
insl
insl
sub
jmp
or
dec
repnz
rcrl
mov
fstpt
dec
mov
cltd
and
ljmp
sahf
or
mov
js
jne
add
bound
addr16
add
xlat
mov
iret
lret
push
sub
mov
cmpsb
test
dec
sub
sbb
bound
jle
or
fildll
loope
test
out
lods
loop
inc
sub
inc
mov
xchg
jo
mov
cld
out
shrl
test
gs
mov
mov
nop
sbb
ljmp
stc
mov
lcall
testl
jae
in
mov
out
sub
cs
and
inc
scas
mov
mov
xchg
xchg
jo
mov
push
push
adc
xchg
dec
into
int
fldt
jecxz
enter
mov
xchg
jp
jb
add
out
push
ret
xchg
out
insl
arpl
out
imul
jmp
bound
push
and
movsb
inc
add
add
cmp
lcall
pusha
xchg
xchg
add
stos
add
aad
lods
in
cltd
outsb
hlt
dec
and
fwait
scas
je
faddl
out
test
or
fwait
mov
clc
leave
add
adc
jl
jecxz
dec
mov
jl
popa
cs
pop
and
outsb
sub
fldl
lcall
jne
jne
inc
and
push
nop
bound
cwtl
lods
fwait
or
adc
mov
test
cmp
xor
jbe
call
insl
arpl
jmp
adc
mov
pop
inc
inc
punpcklwd
pop
roll
mov
mov
dec
jnp
cs
add
inc
inc
andl
sub
mov
mov
daa
mov
ret
sub
mull
push
pop
addl
xor
lods
cmc
mov
enter
add
leave
pop
out
xchg
and
dec
test
arpl
sub
out
jecxz
loope
mov
inc
ret
push
imul
pop
or
outsb
lea
or
mov
ret
dec
push
mov
lcall
scas
jne
jl
je
mov
mov
mov
arpl
cmp
push
or
dec
and
ret
sbb
jmp
adc
inc
fsubp
mov
and
jge
std
xchg
jnp
inc
imul
sbb
jg
sbb
pop
lea
js
ljmp
sub
sub
sbbl
cli
scas
mov
imul
test
popa
imul
dec
sub
adcl
outsb
adcl
push
xor
repz
lods
inc
mov
mov
ljmp
push
fistpll
scas
push
add
mov
inc
outsl
inc
arpl
subl
scas
cmp
test
push
popf
dec
lret
ret
xlat
lea
cmp
into
push
loope
icebp
cltd
mov
gs
outsl
out
pop
inc
in
mov
mov
es
insl
int3
clc
lods
scas
out
arpl
loop
das
push
test
pop
lret
ret
xor
popa
andl
sti
rorl
lret
das
mov
or
dec
inc
js
leave
cmpl
cld
test
and
outsb
inc
rcr
mov
clc
cmp
cld
mov
lock
into
insl
jmp
mov
outsl
das
push
lods
cmp
dec
add
out
sbb
or
loope
rolb
popl
lods
sub
dec
cmp
or
dec
adc
push
push
jg
pop
jmp
jb
jno
sub
popa
ljmp
adc
lcall
lret
roll
jecxz
inc
mov
dec
jnp
scas
or
clc
mov
shlb
insl
outsb
add
lret
xor
iret
add
jbe
stos
lahf
jo
in
or
and
cs
inc
add
imul
jo
or
dec
push
out
lods
jecxz
pop
mov
xchg
leave
and
inc
mov
sub
in
cli
and
jp
mov
stos
mov
jo
popa
mov
lea
and
fwait
inc
and
jnp
jmp
ficomps
xchg
andb
popa
leave
pushf
cmp
pop
mov
lods
jmp
call
push
push
jns
xchg
dec
loope
jmp
das
dec
jno
movsb
iret
and
or
aas
mov
pop
push
outsb
adc
stos
dec
add
leave
movsb
sub
sub
xorl
lret
push
lcall
das
adc
int
xor
arpl
popa
dec
or
aad
loope
cmc
add
mov
iret
jg
pop
mov
and
rorb
jg
sub
daa
inc
push
fimuls
inc
push
lods
out
dec
inc
daa
mov
or
dec
and
es
imul
movsb
daa
das
push
loop
inc
into
sub
enter
and
cs
jmp
ret
mov
rcrl
jp
sahf
clc
ljmp
dec
cmpb
cltd
popf
lods
and
and
insl
and
enter
mov
subb
bound
mov
dec
stos
lret
mov
stos
or
fwait
ror
jmp
loop
addl
das
in
xor
cmpl
add
jle
insl
mov
scas
mov
mov
dec
sub
call
negl
push
into
mov
rcl
sbb
loope
out
mov
mov
das
or
jne
sub
inc
ret
dec
dec
jecxz
stos
bound
into
loope
shrl
adc
jae
xor
push
dec
push
fs
cmp
pop
ljmp
push
lods
test
aam
loope
jnp
int
mov
outsb
add
test
frstor
fisubrl
mov
push
push
loope
pop
dec
mov
bound
mov
js
rcll
lea
xor
std
stos
pop
or
and
sbb
mov
inc
repnz
and
sub
push
popa
or
lock
outsl
imul
add
test
jb
std
gs
test
movsl
out
mov
cmp
scas
mov
cli
rsqrtps
subl
imul
lahf
insl
bound
nop
xor
push
daa
push
jns
sbb
mov
stos
and
scas
repz
cmp
mov
sub
shrl
dec
jno
xor
push
inc
lods
ljmp
in
jo
comiss
mov
test
jbe
in
outsl
mov
pop
sbb
mov
sub
and
add
cmp
sarb
ror
xchg
jp
jbe
sbb
fisttpl
iret
lret
repz
popf
subl
popa
mov
mov
jb
or
xchg
jge
push
in
outsb
cs
out
mov
outsb
lret
jl
lea
inc
pop
popa
mov
add
insb
jo
sub
movl
mov
jnp
dec
out
sub
nop
pop
std
in
repnz
addr16
lea
mov
fs
loopne
and
popf
sbb
fsts
outsb
mov
filds
arpl
out
stos
pop
in
push
mov
test
jb
mov
jbe
jne
dec
mov
outsb
test
scas
cli
leave
out
int
and
jnp
jecxz
jmp
sahf
inc
sub
push
push
leave
insb
insl
jecxz
into
insl
call
mov
jmp
jecxz
out
mov
dec
shrl
bound
sub
shrl
mov
or
cmp
fcmovnbe
jp
mov
xchg
or
cmp
cmp
enter
xchg
or
lret
les
ret
mov
mov
sbb
sbbw
or
and
mov
jg
add
jp
dec
out
imul
dec
stos
jecxz
mov
sub
jmp
jmp
dec
repz
add
inc
nop
ret
mov
inc
inc
dec
jns
inc
stos
cs
mov
inc
or
inc
push
mov
lret
test
add
test
test
sub
sub
test
loope
inc
or
scas
ss
dec
into
shl
dec
sbbl
std
mov
jnp
lea
lret
sub
sub
test
scas
sub
scas
and
dec
mov
insb
pop
or
mov
cltd
repnz
and
dec
mov
in
inc
mov
mov
mov
aas
mov
clc
mov
insl
pop
dec
cmc
stos
mov
in
out
out
shrl
ljmp
mov
iret
cmp
add
dec
sub
jle
leave
pop
mov
sbb
pop
adcb
loope
sub
out
into
mov
inc
or
inc
nop
dec
sbb
or
popa
fdivl
jne
and
mov
subl
leave
or
cmp
sub
stc
jecxz
sub
cs
dec
and
adc
scas
adc
bound
push
stos
xchg
test
ljmp
inc
and
pop
iret
dec
nop
data16
xchg
mov
pushf
inc
mov
bound
flds
shll
dec
mov
imul
outsb
test
dec
scas
hlt
sbb
leave
dec
lods
in
jbe
int
jbe
fildl
push
lods
or
cmp
bound
decl
push
iret
add
lret
inc
scas
push
mov
jbe,pn
mov
lret
push
jno
mov
mov
ret
dec
cmp
jecxz
mov
outsb
scas
mov
out
sub
dec
dec
mov
xchg
int
cli
movsl
or
xlat
lock
or
in
add
test
stos
mov
jmp
nop
insb
cld
and
sub
mov
scas
xchg
ret
sub
or
jae
ret
lds
stos
or
pop
insl
test
iret
push
jp
scas
stos
and
mov
or
dec
adc
pop
push
pavgw
xor
xorl
mov
mov
and
mov
xor
shrl
push
jne
dec
xchg
pop
inc
sub
outsb
out
sub
ret
add
adc
inc
das
aam
insl
sbb
sub
in
push
push
inc
dec
mov
subb
scas
add
out
sub
arpl
xorl
cmpsl
or
sub
daa
sarl
mov
clc
inc
pop
enter
adc
sub
inc
outsb
dec
xor
jl
or
nop
rorl
cmp
ljmp
gs
outsb
fwait
pusha
stos
mov
mov
pop
iret
into
push
lahf
lods
or
out
jne
jbe
cmc
icebp
inc
repnz
divl
test
inc
into
inc
punpcklwd
iret
dec
js
orl
arpl
out
sub
xor
jno
adc
int3
mov
fcmove
mov
es
jb
stos
sbb
imul
test
and
dec
scas
in
jmp
les
xlat
mov
test
pop
out
sub
sbb
into
jne
out
imul
sub
fsubrl
insl
adc
mov
jo
sub
dec
bound
sub
stos
bound
aad
mov
fs
test
paddsw
lods
jle
addb
cs
sub
popf
add
jp
enter
cmp
stos
addl
das
push
dec
lret
mov
dec
dec
arpl
dec
iret
inc
hlt
loope
pop
stos
bound
imul
out
mov
jecxz
lret
lods
inc
loopne
xchg
loope
push
arpl
dec
mov
addr16
jbe
sbb
rcll
jge
dec
dec
inc
dec
dec
cli
jecxz
loope
std
add
xchg
jmp
int3
js
outsb
fdivp
dec
rclb
and
push
bound
inc
add
inc
rdmsr
add
cmp
clc
dec
mov
jbe
arpl
mov
ljmp
aas
pop
out
dec
mov
mov
dec
loope
cli
xchg
fnstsw
adc
in
xor
iret
je
inc
stos
ret
int3
int
lods
mov
stos
adc
clc
movsl
pop
or
mov
push
sbb
shr
pushf
sub
xchg
mov
movsb
sbbl
adc
pop
out
out
aad
mov
mov
dec
xlat
pop
or
nop
fnstenv
mov
sarl
loop
dec
outsb
pop
into
xor
loope
int
xchg
inc
lea
dec
js
mov
into
je
test
outsb
shll
imul
and
aam
or
inc
inc
in
roll
push
jecxz
or
sbb
insl
das
in
inc
out
repnz
bound
insl
jb
jbe
arpl
faddp
add
popa
imul
cs
imul
icebp
sub
jbe
ljmp
out
inc
mov
mov
mov
adcl
scas
clc
mov
xchg
cs
nop
jmp
cli
inc
or
pop
lock
das
and
sub
and
push
hlt
xor
jbe
xor
das
mov
inc
jmp
leave
out
pop
dec
lods
insb
jb
mov
mov
push
xor
daa
sbb
sub
pop
leave
ljmp
push
xor
lods
mov
std
inc
loop
pop
add
and
inc
insl
lret
mov
pop
xor
loope
jle
popf
jecxz
in
mov
dec
pop
xchg
inc
pop
dec
sub
sbb
lods
scas
mov
das
scas
out
inc
lods
xor
push
pop
mov
loop
mov
push
dec
insl
pushf
push
mov
test
shrb
dec
jge
lock
xchg
xor
or
clc
push
jg
mov
jp
mov
mov
jmp
or
arpl
lock
mov
xor
stos
pop
into
xchg
shrl
push
arpl
mov
fwait
ret
ret
jns
pop
push
add
ljmp
xchg
push
add
pushf
stc
pop
out
test
arpl
push
mov
test
dec
int3
mov
pop
mov
and
lea
and
jbe
pop
push
push
pusha
fisubs
int
xchg
pop
out
mov
pop
xchg
xchg
dec
outsl
dec
or
shl
cmp
insl
mov
sub
pop
cmpsb
int
clc
or
insb
lods
or
xorl
dec
js
push
ret
jg
outsl
add
fwait
mov
or
sub
jmp
stos
xchg
jmp
ljmp
int
lea
cmpsl
pop
dec
fs
outsb
leave
loop
or
cmpxchg
sub
addb
arpl
sub
and
ljmp
dec
adc
loope
add
cmp
clc
call
addl
loope
or
lods
repnz
mov
sub
repnz
repz
test
inc
jp
clc
push
mov
rcrl
push
subl
push
clc
cmp
imul
jle
cmp
xchg
dec
popa
inc
mov
pop
repz
xchg
out
shll
add
das
mov
into
mov
dec
dec
ljmp
into
sub
pop
pop
inc
pop
in
mov
call
and
or
rcrb
imul
or
xchg
es
std
jne
movsl
sub
fdivl
adc
out
subb
into
mov
out
inc
dec
inc
add
mov
arpl
outsb
push
dec
out
cmpsb
inc
ljmp
fwait
push
push
into
xor
add
icebp
in
ret
test
add
outsb
add
push
popf
push
inc
push
call
push
ljmp
lret
enter
es
ljmp
mov
sarl
cmpsl
scas
cmc
push
imul
aaa
out
ds
mov
jg
sub
inc
adc
pop
and
dec
mov
movsl
mov
add
daa
cmp
outsl
int3
sahf
xor
clc
cmp
test
mov
mov
addr16
out
arpl
test
cmp
push
mov
mov
or
clc
test
push
adc
rolb
sahf
loop
cmp
sbb
mov
lock
inc
in
icebp
xor
int
sub
inc
outsl
testl
jno
lds
cli
in
sbb
lcall
xchg
mov
and
sub
popa
into
lods
push
inc
test
sub
lret
popf
sub
mov
sub
pop
dec
mov
gs
push
scas
dec
lock
enter
sarl
cmpsl
mov
in
stc
mov
pop
insl
cmp
bound
loope
ja
sub
mov
mov
or
ret
in
fwait
pop
pop
out
mov
or
stmxcsr
imul
dec
mov
in
sub
cmc
and
ljmp
int3
xchg
add
cld
cmovae
int3
jns
xor
in
sbb
nop
or
clc
jbe
and
fidivrs
lods
inc
stos
jbe,pn
or
lods
inc
shrl
outsl
and
cmp
das
xor
mov
sbb
mov
stos
aaa
clc
push
and
movsb
and
jg
dec
icebp
clc
lods
cmp
clc
and
ret
int3
inc
clc
cmp
roll
lea
push
xor
lret
push
jmp
lret
aas
cmc
cwtl
mov
call
lock
or
fnstenv
js
stos
sub
xchg
imul
out
or
popf
popa
in
sub
dec
iret
lods
loope
cwtl
xor
xor
mov
stc
movsb
js
clc
dec
xor
ret
das
loope
cwtl
cmp
loope
clc
lods
cmp
clc
and
pop
and
ficoms
sub
stos
push
cmp
into
iret
arpl
jecxz
mov
dec
dec
fisttpll
or
nop
popa
pop
mov
mov
incl
cltd
push
ret
pop
sbb
add
and
adc
mov
mov
sub
cli
cs
lahf
push
fdivl
fucomip
inc
and
and
fsubrs
inc
push
xchg
xchg
xor
adc
push
insb
lds
test
clc
mov
in
mov
mov
dec
insl
xchg
loope
in
outsb
mov
jge
pop
rcrl
test
sub
dec
ret
ljmp
out
pop
les
lods
insl
mov
bound
shll
hlt
adcl
mov
dec
test
out
pop
xlat
jecxz
dec
scas
xchg
mov
ret
lock
mov
sub
sub
es
into
push
cmp
das
mov
mov
or
into
leave
jge
lret
and
stos
dec
jmp
dec
sbb
out
push
sub
das
dec
cwtl
cmp
js
popa
push
shr
imul
in
ror
in
int
stos
and
fwait
outsb
inc
bound
sub
mov
mov
daa
lods
mov
outsb
lods
jns
scas
and
into
aaa
adcl
sarl
or
cltd
xchg
xor
dec
cmpps
nop
andl
stos
rorl
loope
or
mov
sub
jno
push
outsb
in
out
push
out
jp
jmp
sbb
dec
push
sub
or
ret
movsb
divb
xor
addr16
push
mov
pop
push
sub
dec
xlat
mov
inc
pop
add
jmp
pop
outsb
add
ljmp
cmpb
jb
pop
outsb
rcr
push
jp
in
seto
leave
roll
or
dec
cmp
add
out
jg
cmp
adc
test
and
nop
fs
insl
das
mov
sub
fcmovu
vphaddbd
mov
mov
cmp
movsl
add
inc
lea
or
cli
sub
scas
lods
xchg
orb
sbb
add
in
xchg
outsl
fcmovnb
jmp
jge
mov
cmp
repz
orl
out
add
or
adc
mov
or
adc
outsb
add
dec
les
jecxz
adcb
dec
imul
mov
insl
or
int3
std
cs
out
sub
out
clc
add
cmc
inc
pop
inc
mov
sbb
insl
cmp
mov
inc
mov
scas
stos
and
jmp
insb
lahf
loop
inc
mov
dec
scas
into
popa
decb
or
hlt
into
and
cs
dec
xchg
fwait
pop
inc
insl
outsb
push
xchg
push
hlt
dec
inc
hlt
in
or
jb
out
ljmp
mov
leave
or
push
imul
das
inc
scas
lret
xchg
frstor
or
mov
test
dec
insl
fisttpl
inc
mov
mov
arpl
insl
sub
add
sub
jecxz
lods
fmull
in
insl
mov
mov
pushf
pusha
pushf
insl
outsl
aad
inc
fistpl
or
inc
int
mov
outsb
out
iret
adc
or
mov
or
jp
cs
and
mov
mov
mov
outsb
mov
test
add
shrl
in
add
clc
mov
stos
shrb
hlt
ja
ret
jb
arpl
and
orl
inc
or
dec
mov
hlt
push
cmpsb
insb
and
mov
dec
lods
test
mov
mov
in
dec
lret
and
inc
insl
clc
arpl
xchg
movsb
inc
outsb
rorb
jns
jl
dec
ljmp
adc
sbb
dec
popa
ret
and
jg
int
or
mov
bound
scas
jne,pn
jb
sub
lret
add
dec
es
clc
in
imul
adc
dec
lret
insb
ljmp
cli
ljmp
pop
dec
test
testb
sub
cmp
mov
jmp
xchg
imul
inc
pop
lods
or
loope
mov
push
sub
dec
xchg
imul
inc
inc
jp
lods
mov
mov
lock
and
mov
std
aad
rep
insl
mov
test
ret
lods
dec
inc
dec
pop
insb
call
iret
stos
cld
int
mov
mov
outsb
xchg
lea
lock
arpl
xor
jl
xsave
mov
inc
pop
aas
jno
xchg
inc
stos
cmp
leave
sbb
scas
and
mov
mov
fs
adcl
out
jmp
scas
push
int
into
inc
inc
loope
adc
lods
out
inc
je
dec
lret
add
repnz
je
sbb
loope
bound
mov
shrl
fiadds
bound
xchg
inc
scas
int3
aad
lret
leave
pop
fwait
lods
orl
dec
xchg
cmpsb
jnp
mov
ret
aad
ljmp
pop
movb
lods
or
sbb
adc
addr16
jo
mov
dec
in
iret
and
xchg
sahf
ret
mov
xorl
dec
out
setle
scas
nop
inc
int
test
scas
inc
or
fldt
stos
cmp
lahf
arpl
or
loope
popa
jmp
adc
xchg
or
and
out
in
mov
sub
popl
imul
sub
out
lods
or
sbb
call
xor
cmp
stos
nop
outsl
jl
int
ret
mov
out
and
and
out
into
scas
and
lods
test
sbb
push
movb
cmovae
test
jmp
arpl
lea
inc
addr16
cltd
xchg
lret
mov
and
ret
int
fwait
lcall
out
inc
fs
test
stos
sar
test
cmc
das
stos
mov
lods
arpl
mov
test
push
leave
dec
repz
sub
popa
out
add
into
sub
hlt
cld
xor
inc
aad
mov
rcr
add
mov
xchg
fistpl
and
scas
clc
into
insb
and
call
movups
je
popa
inc
cmpsb
and
adcl
mov
out
jp
mov
daa
insl
ret
lahf
adc
fdivs
mov
cld
push
lret
inc
pop
das
lock
scas
xchg
pop
test
pushf
inc
data16
xchg
or
mov
sbb
mov
dec
xor
or
and
mov
scas
dec
popa
sbb
jne
and
mov
push
mov
int3
subb
in
dec
outsb
inc
inc
lods
adc
add
popa
std
fs
bswap
mov
mov
xor
daa
shr
sub
lret
nop
lods
insl
xorb
bound
pop
mov
iret
jp
mov
das
jo
add
lret
rcll
sbbb
mov
arpl
outsb
inc
cmp
sub
stos
stos
or
scas
movsl
xchg
xchg
addl
lret
sub
lods
test
or
cmpsb
add
out
outsb
mov
ret
dec
mov
imul
arpl
rorb
cmp
mov
mov
inc
sti
cli
arpl
gs
mov
mov
and
out
add
dec
into
mov
sub
outsb
loope
outsl
ret
sub
lret
hlt
jb
lods
and
xchg
dec
pop
sbb
mov
mov
pushf
mov
out
xchg
jp
cmp
jbe
jne
inc
popa
scas
lods
movsl
and
stos
je
mov
outsb
mov
or
leave
jecxz
jne
lds
add
mov
shl
pop
test
loope
gs
or
jbe
add
jmp
add
roll
test
jmp
lret
outsl
adc
or
add
imul
mov
insb
dec
add
int
and
popa
jno
lock
mov
outsl
lods
xor
comiss
jmp
arpl
lret
and
and
dec
mov
movsl
call
dec
cmp
es
xchg
test
mov
out
and
add
movsl
cs
nop
add
sub
dec
icebp
clc
loop
cs
add
push
imul
into
andb
inc
gs
pop
dec
xchg
lods
shll
cmp
dec
je,pn
ljmp
inc
mov
mov
ficomps
mov
or
lods
fsubs
and
or
dec
xor
rolb
add
sbb
mov
xor
inc
sub
int
ja
andb
dec
outsl
loope
sbb
aad
jp
ret
jne
std
xchg
insl
adcl
xor
fwait
cs
mov
inc
dec
into
inc
lods
hlt
mov
arpl
inc
push
in
dec
ret
xchg
popa
aas
sbbl
nop
cs
arpl
loope
mov
iret
sub
rcrl
jecxz
xchg
insl
movsl
sub
mov
sbb
scas
lods
dec
ret
lcall
mov
lock
mov
sub
ja
cmp
sub
sub
ret
popf
adc
jbe
mov
into
or
imul
lea
push
jno
or
xor
push
dec
out
mov
test
dec
inc
cli
scas
jge
mov
jl
out
stos
jmp
fidivrl
push
lock
mov
out
dec
loop
out
push
mov
fmuls
imul
ljmp
cmp
mov
fcmovnb
sub
xorl
jo
mov
adc
subb
sbb
mov
les
inc
add
clc
bound
idivl
dec
jecxz
insl
dec
or
sub
ret
inc
dec
sub
movsb
mov
cmpsl
insl
sub
jp
adc
mov
out
cmp
test
jmp
nop
inc
test
xor
lods
jbe
sti
scas
ljmp
jo
dec
mov
imul
scas
out
mov
imul
adc
cmpsb
mov
and
inc
cmp
push
fsubrp
dec
ljmp
imul
sub
cli
inc
and
mov
dec
insl
dec
xchg
aad
imul
pop
lea
xor
ret
lods
lods
inc
out
in
aam
outsb
hlt
dec
jbe
daa
das
or
and
je
xchg
out
add
stc
inc
jns
setnp
dec
lahf
ljmp
jne
or
inc
cs
sbb
mov
add
mov
and
in
data16
loope
sbb
fcmovnu
test
out
std
mov
jns
mov
push
lsl
mov
sbb
xor
mov
fs
mov
pop
jle
int
jb
lea
push
jo
push
jo
jmp
loope
push
mov
loope
js
push
or
int
lods
push
sbb
lock
loop
inc
sub
or
insl
jge
pusha
jo
stos
bound
mov
jno
cmc
and
mov
sti
sub
jecxz
xlat
popa
add
ret
cmp
jbe
out
xchg
cmp
ret
pushf
ret
subl
pushw
cmp
movsb
inc
call
mov
jecxz
mov
mov
roll
mov
iret
dec
bound
ret
ss
pop
cmpsb
lods
arpl
jno
imul
mov
cld
movsl
sub
ret
insl
in
cmpsb
add
push
cld
nop
inc
loop
mov
xchg
xchg
and
ja
repnz
mov
andl
out
lret
imul
dec
iret
loop
or
ret
xchg
lahf
outsl
jo
mov
arpl
add
jecxz
mov
cmpsl
cmc
subl
loop
call
dec
cmp
addr16
iret
mov
xor
inc
stos
cltd
movsl
push
mov
call
enter
idivb
loop
icebp
clc
imul
and
sub
add
mov
in
sbbb
and
cs
mov
lds
lds
in
mov
jno
jnp
jb
movsl
cvtpi2ps
inc
add
je
das
inc
cld
or
scas
and
aas
dec
sbb
inc
and
sub
mov
jb
pop
add
ljmp
adc
fldenv
ret
sbb
test
dec
scas
dec
mov
inc
inc
test
vpand
subb
dec
add
ja
inc
sub
lret
or
mov
cmp
sub
aad
loop
xor
jno
dec
mov
pop
lods
ja
dec
add
or
int
fbstp
imul
mov
clc
jle
in
leave
and
outsl
inc
outsb
int
ljmp
popa
lock
xor
stc
jne
daa
or
xchg
out
and
shufps
pop
pop
mov
mov
popf
jl
or
xor
outsl
and
jbe
sub
pop
cli
push
lea
inc
lea
loopne
push
sub
mov
sbb
repnz
cmp
add
insl
inc
bound
lods
lret
lods
sub
add
outsl
nop
add
dec
dec
ja
add
cmp
dec
pop
cmpsl
test
je
add
sub
repz
mov
mov
cmp
pop
shll
dec
dec
sub
mov
mov
jns
xchg
shr
xlat
bound
mov
mov
and
mov
ss
ret
call
mov
push
mov
ret
lods
jno
fucomp
movsl
lret
ficomps
mov
repnz
mov
jne
insl
loope
mov
inc
jecxz
xchg
dec
ret
jo
mov
mov
jno
inc
dec
lods
bound
push
or
pop
insl
lods
test
jl
arpl
nop
imul
cmp
dec
iret
xchg
clc
dec
stos
adc
jecxz
leave
xor
jecxz
int
out
push
loop
add
pop
jmp
ret
pop
sub
in
mov
or
arpl
ds
stos
outsb
mov
sbbl
mov
adc
cmp
or
mov
jno
jo
mov
inc
out
pop
pushf
leave
jle
mov
mov
ja
imul
scas
jp
popa
mov
jp
and
lods
or
aam
movsl
leave
fcmovbe
jge
clc
adc
or
frstors
clc
mov
jmp
outsb
jp
jb
sub
insl
ds
into
nop
test
jb
jbe
int3
or
push
or
fisttpl
push
push
mov
test
pop
insl
mov
or
nop
out
push
invd
mov
or
insl
sub
into
loope
dec
dec
push
lods
faddl
jecxz
sub
dec
or
push
ja
inc
dec
xchg
orl
lods
js
scas
lcall
jmp
leave
lods
push
test
mov
in
test
sub
out
mov
int
cmp
cmp
test
dec
mov
jecxz
or
xorb
scas
jae
popa
scas
out
iret
sbb
leave
xor
insb
jb
mov
andl
lahf
xor
push
mov
mov
lret
push
dec
jo
or
sub
xor
cmpl
aaa
sub
bswap
or
lods
cmp
out
mov
sbb
imul
xchg
jl
int
dec
mov
iret
test
mov
orl
mov
dec
dec
mov
inc
sub
bound
stos
test
insl
jle
sub
movsl
leave
ljmp
mov
iret
scas
fisttpll
roll
nop
pop
adc
stc
inc
out
clc
cli
fwait
test
sub
clc
lds
outsl
out
jl
mov
stos
in
test
cs
lods
adc
insb
rorl
mov
cltd
sbb
jne
pop
jle
ret
mov
out
scas
cmp
into
inc
out
mov
mov
push
mov
shl
sbb
jbe
outsl
push
xor
lock
sub
lea
sub
out
dec
outsl
sub
scas
fnstcw
fidivs
es
inc
and
in
repz
test
jecxz
scas
jno
arpl
inc
lods
push
call
inc
loop
fcmovnb
scas
dec
roll
sub
dec
push
pushf
popl
lea
jns
inc
mov
sbb
xor
jle
ljmp
into
dec
fidivl
push
dec
test
cmp
clc
loop
rol
and
or
fs
jecxz
sub
sti
bound
mov
jno
outsb
leave
jbe
xchg
cmp
dec
push
sub
test
and
subl
cmp
mov
in
movsl
fnstcw
in
call
mov
ljmp
inc
lret
push
or
jo
popl
mov
imul
loop
or
fiadds
sub
mov
sbbb
shl
inc
nop
scas
and
clc
dec
movsl
lds
inc
mov
jmp
js
jecxz
shlb
jbe
and
sub
sbb
push
and
dec
inc
add
jp
sbbl
ljmp
and
xchg
push
movsb
inc
jmp
insb
decb
add
mov
lret
leave
call
mov
ljmp
mov
out
iret
arpl
rorl
add
imul
mov
test
das
xchg
or
faddl
xor
je
or
jecxz
das
lods
mov
and
bound
inc
mov
popa
sti
cmp
add
cmp
out
sub
clc
into
xchg
sub
stos
add
dec
ss
mov
adc
lea
jnp
mov
adc
sub
insl
test
insb
in
dec
scas
test
outsb
stos
push
arpl
jmp
xlat
lret
pop
cmp
or
cmovbe
push
or
mov
in
dec
or
outsb
ret
outsl
add
cmp
into
cmp
data16
iret
jecxz
mov
test
scas
pop
xchg
fwait
mov
loope
stc
adc
lock
pop
jnp
loope
int
sub
mov
cwtl
lret
push
mov
repz
push
arpl
scas
popa
sbb
jb
jmp
xchg
inc
sub
stos
sub
lods
xchg
or
dec
push
mov
scas
test
scas
lea
insl
pop
push
or
loope
push
repnz
loop
jle
shrl
leave
in
add
scas
mov
call
sub
push
scas
pusha
mov
cs
insl
mov
dec
jbe
out
jecxz
enter
dec
clc
ret
into
call
mov
rorb
movsl
ret
mov
or
ljmp
sub
rorl
out
and
lods
outsb
ljmp
mov
ret
nop
das
into
mov
movsl
add
jmp
fcomi
imul
mov
out
outsb
xlat
jbe
test
or
inc
pushf
mov
popl
mov
and
and
leave
dec
mov
xor
mov
inc
pop
movsb
fs
sub
scas
push
out
xor
or
mov
ret
inc
inc
movsl
mov
dec
dec
mov
jo
sub
insb
lea
lods
hlt
cmp
jbe
jns
pop
sbb
ljmp
mov
ror
test
lods
or
or
arpl
scas
popa
mov
jnp
sub
cmp
shl
test
xchg
cltd
and
xchg
js
inc
lock
loopne
mov
jne
stos
sbb
sti
sti
mov
jmp
movsb
lods
mov
push
bound
repz
push
dec
jnp
lods
mov
xchg
or
add
clc
mov
push
push
mov
mov
test
cmp
pushf
mov
sub
dec
adc
or
dec
lods
scas
push
jno
out
ret
and
mov
dec
gs
mov
bound
sbb
adc
popa
sbb
mov
lods
mov
dec
mov
into
test
pop
stos
mov
bound
dec
movsb
and
into
sub
xchg
inc
into
and
mov
testl
daa
dec
daa
punpckhbw
bound
arpl
xchg
loop
movsl
ret
cmp
cmp
sarl
sub
lret
sub
mov
jno
divl
out
mov
xchg
pushfw
lret
scas
cmp
dec
push
shrb
dec
lea
cld
cmpsb
jl
or
or
jg
inc
inc
mov
xchg
arpl
mov
mov
movsb
movsb
jg
adc
push
jp
les
add
das
stos
and
in
arpl
ljmp
mov
insl
test
in
sub
lret
dec
push
fs
and
and
mov
stos
lahf
imul
fucomi
inc
and
mov
scas
sub
mov
movq
mov
jp
jbe
lret
jl
das
or
inc
dec
mov
sub
sub
cmp
insl
popa
sub
mov
mov
sub
dec
pusha
and
xchg
je
mov
arpl
and
dec
loop
repz
jo
jmp
sti
out
dec
ljmp
aas
dec
out
stos
jl
lock
fs
jecxz
out
push
or
mov
scas
cs
clc
stos
das
cmpl
lret
jns
lock
inc
lods
daa
loope
xor
jno
in
cs
aaa
adcl
gs
daa
jmp
mov
shlb
sbb
dec
sbb
fisubrl
jns
inc
test
loop
les
push
inc
push
popa
jnp
dec
out
dec
stc
ret
leave
pusha
out
or
int
dec
xchg
arpl
out
fwait
cltd
test
xorl
xchg
mov
push
push
xorb
rol
outsl
and
sti
or
clc
and
test
jl
arpl
popa
mov
mov
scas
popa
and
das
cmp
push
ret
js
ret
rolb
jns
mov
mov
and
lea
int3
fidivrl
imul
mov
adc
decl
mov
lret
das
add
sub
stc
bound
xchg
mov
dec
outsb
dec
ja
inc
cmpsb
mov
lods
cmc
inc
push
loop
out
push
sti
dec
cmovg
and
ljmp
ss
or
jb
in
in
cmp
cld
into
dec
xor
orl
sub
enter
inc
insl
cmp
push
lods
mov
ret
pusha
outsb
fcomp
pop
xchg
insl
int
dec
std
mov
jecxz
jbe
mov
lods
jmp
or
scas
test
mov
xchg
push
or
bound
arpl
lret
fiadds
in
sub
or
push
mov
ret
dec
mov
in
cmp
and
mov
arpl
test
inc
sub
shr
nop
inc
sbb
stc
lcall
jo
jecxz
add
popa
lods
addr16
leave
jmp
lods
out
mov
mov
lea
or
filds
daa
test
xchg
addr16
scas
int
push
or
or
mov
mov
out
jns
dec
jb
fdivrp
test
mov
mov
daa
cwtl
addr16
jbe
das
rcr
fs
ret
mov
cmp
mov
loope
inc
popa
cmc
lods
pusha
xor
into
mov
inc
inc
dec
leave
inc
scas
mov
sub
subb
pop
xchg
nop
out
jecxz
pop
and
mov
movsl
xchg
mov
sbb
cmpsb
outsb
or
leave
or
imul
and
int3
push
mov
lods
stos
out
jmp
sbbl
add
int3
outsl
iret
into
andl
and
imul
arpl
mov
jecxz
fists
insl
or
or
arpl
sub
jmp
mov
cmp
ret
in
cmp
cmp
leave
jne
cmp
fildll
es
popa
inc
pop
adcl
sar
imul
rorl
jmp
stos
cs
or
jecxz
mov
jge
out
dec
fs
stc
jnp
ret
bound
lock
in
and
or
inc
std
mov
lret
xchg
or
sub
test
lods
mov
call
push
popa
lea
inc
add
inc
jecxz
orl
outsl
mov
jb
scas
dec
je
mov
test
out
and
or
add
outsb
mov
mov
inc
add
dec
sub
das
loop
mov
cmp
test
or
or
inc
or
fdiv
mov
lcall
out
in
dec
scas
jmp
subb
sbb
ror
test
mov
mov
lods
mov
or
mull
dec
jnp
loope
in
sub
lea
divl
imul
insl
mov
enter
sub
aas
sub
popa
pop
insl
and
stos
loop
out
ss
stos
jecxz
or
mov
ljmp
push
sbb
fistpll
std
push
mov
sti
jbe
jmp
dec
mov
lds
addr16
cmpsb
cmp
fsub
jbe
push
dec
or
dec
sub
adc
pop
mov
adc
ret
xor
cld
arpl
jle
into
and
sub
cwtl
in
lods
je
sub
daa
movsl
or
lcall
fdivp
adc
das
dec
inc
jg
insl
pop
mov
xorb
inc
jno
xchg
adc
adc
push
stos
shrb
fwait
pop
in
and
dec
mov
push
test
clc
jne
jbe
mov
and
lea
mov
cmp
sti
in
outsl
mov
dec
lahf
loope
sub
cmpb
leave
mov
jecxz
cs
cmp
push
shll
add
jnp
push
stos
dec
inc
jmp
dec
sarl
sub
bound
lods
and
sub
lret
in
dec
in
jne
jno
pop
push
lret
jne
cli
mov
and
scas
mov
ret
xchg
lret
bound
dec
lock
aas
sysenter
orl
xlat
insb
rolb
nop
jo
dec
adc
jl
out
mov
mov
les
ret
fadds
sbb
pop
push
nop
cmovp
xor
mov
int
or
loope
sub
ljmp
orl
into
insl
lods
stc
outsl
test
or
pop
loope
xchg
bound
xchg
subb
inc
lahf
enter
iret
jno
mov
jns
arpl
cmovle
addr16
cs
out
inc
jmp
jns
outsb
shll
int
movsb
pop
fnstenv
jecxz
outsb
push
xchg
in
add
scas
pop
aad
mov
and
jnp
push
shl
outsl
in
cs
in
bound
outsb
sub
xchg
aad
jo
out
xlat
hlt
rorl
cli
fmuls
sub
ret
dec
pop
inc
icebp
nop
pop
imul
out
out
scas
insl
ss
fwait
ljmp
scas
ret
jns
and
paddusw
push
cmp
mov
sbb
jo
dec
stos
pop
mov
movsl
lds
jl
mov
dec
inc
arpl
stos
or
mov
sbb
insl
scas
lods
inc
test
int3
and
inc
push
jmp
wbinvd
in
test
mov
repz
add
mov
je
das
scas
sbb
mov
insl
and
lret
pop
inc
nop
fstpl
xchg
mov
into
inc
arpl
stos
insl
mov
jno
adc
cmp
pop
mov
fs
in
push
fwait
fwait
negl
and
ret
dec
or
imul
xchg
inc
in
insl
lds
mov
shll
push
inc
cmp
andl
lods
dec
mov
js
sub
out
jne
xlat
mov
arpl
sub
inc
xchg
mov
repz
jl
add
stos
mov
sti
push
popa
mov
sub
sbb
movsl
stos
popa
sbb
sbbl
jmp
shll
mov
pusha
lods
scas
test
jns
xor
pop
outsb
xor
cmp
mov
scas
sbbl
es
mov
addr16
or
leave
inc
int
ds
scas
sub
inc
sti
pop
ljmp
dec
lret
adc
stos
xlat
outsb
scas
adc
loop
stos
mov
lods
mov
clc
jno
int3
lea
adc
push
popa
adc
jle
adc
aaa
test
mov
in
movsl
subb
add
lret
dec
outsl
das
inc
ret
imul
in
clc
sbb
mov
mov
and
add
mov
ficomps
sub
adc
int
xor
jle
and
cmp
mov
repz
popa
int
andl
fbld
sub
dec
test
inc
lds
mov
pop
adc
jo
rorl
repz
jecxz
mov
insb
into
icebp
pop
clc
ret
sub
sub
push
das
cltd
int3
cmp
mov
leave
add
xchg
into
add
das
loope
int
and
inc
push
sub
call
mov
inc
clc
mov
xchg
rol
les
mov
inc
imul
adc
bound
cmp
or
int
and
scas
push
out
lods
into
sti
add
leave
arpl
arpl
or
imul
xor
outsl
pcmpgtw
ljmp
out
addr16
insl
dec
mov
loopne
mov
mov
nop
jnp
add
imul
insl
stc
stos
lahf
iret
add
mov
orl
test
call
andl
xchg
mov
mov
xchg
push
orl
jl
dec
popa
mov
lods
inc
nop
outsb
jecxz
push
cmp
cmp
xorl
or
imul
jl
sub
movsl
inc
jmp
sti
cltd
dec
loope
pop
ret
mov
out
xchg
cwtl
inc
sbb
sub
iret
jbe
push
push
dec
test
sub
outsb
jl
test
popa
movntq
rcll
clc
scas
jecxz
arpl
dec
xchg
movsl
mov
xor
lret
cwtl
and
sbb
lahf
lahf
fs
imul
outsl
ljmp
popl
fwait
mov
jmp
push
inc
mov
popa
mov
adc
or
scas
dec
outsb
test
lret
sbb
lcall
mov
imulb
mov
rcl
xchg
ljmp
ret
mov
push
outsl
testl
jp
mov
out
push
mov
inc
sahf
clc
lods
insb
adc
add
push
out
test
push
insl
lea
xor
add
sbb
xchg
fildll
mov
dec
mov
inc
and
mov
inc
jb
in
mov
imul
push
jbe
movsl
rorl
gs
scas
or
lds
inc
jecxz
jno
xor
push
insl
outsl
jnp
in
sub
out
push
test
sbb
arpl
add
push
into
imul
movsb
jecxz
jg
leave
jbe
jb
adc
inc
addr16
out
rcr
and
or
xchg
cs
cmpsb
dec
pop
lods
outsb
arpl
insl
lock
xchg
das
dec
add
add
push
xchg
mov
inc
inc
je
dec
das
mov
or
out
movsl
mov
scas
xchg
pop
mov
sbb
lods
sbb
outsl
dec
dec
stos
into
xchg
push
jmp
mov
push
mov
out
jle
insl
arpl
mov
into
sbbb
ret
cmpb
mov
out
scas
jne
mov
stos
scas
jle
mov
inc
inc
orl
cmp
cmc
lds
cmp
mov
xor
lods
adc
jno
fstpl
pop
insb
dec
add
cmp
stos
lea
jmp
sub
sar
int
xchg
fwait
mov
dec
xchg
nop
mov
insl
lods
inc
leave
lret
mov
fwait
das
sub
int
scas
adc
mov
outsb
js
or
ret
sub
jbe
mov
out
flds
mov
push
into
imul
in
inc
jns
inc
leave
mov
fcmovne
ret
inc
xor
movsl
dec
test
aad
nop
test
mov
shrl
pop
stc
bound
xchg
jno
sbb
inc
lahf
adc
into
push
lahf
fmulp
pop
cld
je
lods
lods
imul
out
push
mov
push
jecxz
mov
in
out
scas
imul
mov
js
sub
push
popa
int3
test
iret
dec
scas
and
xchg
repz
or
movsl
mov
add
imul
jbe
loop
dec
aas
lds
add
lods
cmp
or
add
xlat
inc
fs
jmp
mov
cli
xchg
movsl
dec
test
and
jns
test
les
xchg
lret
fists
and
mov
test
ljmp
mov
dec
jo
mov
ret
movsl
mov
scas
outsb
or
adcb
add
mov
repnz
add
jg
test
sub
movb
fbld
sbb
add
mov
iret
in
test
lods
inc
xor
mov
bound
push
ja
and
int
mov
imul
inc
mov
and
mov
mov
lret
stos
nop
add
fwait
sbb
and
dec
fwait
lret
cmp
out
into
push
and
ja
lds
ret
and
adc
ret
std
sub
lods
and
iret
in
dec
cli
adc
jmp
or
lods
inc
stos
inc
into
shrl
sub
insl
and
jle
jge
clc
lret
inc
jp
scas
ret
sbb
inc
outsb
mov
lock
xchg
bound
test
sub
jmp
fdivs
mov
push
push
rolb
and
stos
add
stos
outsb
mov
mov
clc
loope
rorl
and
insl
jecxz
sub
jmp
es
andl
ja
push
outsl
movb
xchg
xlat
push
mov
popf
jecxz
mov
call
mov
iret
bnd
mov
addr16
pop
push
sub
jnp
mov
out
xchg
or
pop
or
push
jmp
sar
arpl
mov
iret
je
in
stos
daa
bound
pop
test
loope
seto
lea
inc
mov
test
sahf
mov
les
stos
or
push
and
dec
out
dec
jmp
cs
inc
scas
or
add
nop
in
push
cmp
dec
xchg
add
test
loop
test
negl
imul
sti
bound
loope,pn
mov
jo
iret
pmaxsw
stos
sti
es
into
xchg
repnz
les
add
stos
sub
loope
movb
outsl
stos
xchg
push
mov
sarl
add
ljmp
and
xorl
xor
push
adc
outsl
leave
fistpl
js
paddb
adc
jp
mov
lods
mov
adc
getsec
mov
sbb
cmp
sbb
insl
push
addr16
clc
jecxz
das
mov
ret
dec
sub
aad
jmp
mov
into
jecxz
lock
or
inc
scas
pusha
add
xchg
inc
or
insl
inc
pushf
mov
mov
and
inc
add
or
std
jmp
xchg
cmp
ret
jmp
mov
je
outsb
das
jno
and
and
xchg
sahf
cmp
in
lret
xor
sbb
orb
add
loopew
dec
cld
mov
bound
sti
scas
iret
insl
mov
das
mov
mov
push
sub
out
lods
add
lods
cmp
jb
mov
pop
pop
fwait
jns
mov
add
xor
outsl
dec
push
not
daa
divb
jnp
loope
sub
mov
push
cmc
pop
imul
ret
or
xchg
inc
aad
cmp
push
rcl
bound
inc
aas
mov
sbb
inc
rorb
pop
inc
xor
lretw
jns
mov
mov
push
xchg
scas
leave
in
int
fidivrl
vcvtsi2sd
in
dec
xchg
inc
sub
loope
mov
fwait
mov
lods
ret
add
scas
xorl
mov
outsb
sub
loop
mov
into
lahf
and
stos
loope
push
jo
dec
jns
adc
xchg
push
fisttpl
cltd
mov
sub
lret
bound
out
dec
sti
dec
mov
pop
jecxz
or
orb
scas
hlt
lods
in
imul
add
mov
pushf
jmp
add
lahf
mov
or
arpl
mov
insl
dec
shrl
ret
inc
inc
add
inc
scas
or
cmp
jmp
fsubrl
stos
jns
fwait
dec
sbb
jbe
test
bound
jno
cmp
jb
xchg
xor
pop
loope
insl
mov
sub
iret
daa
jne
loop
clts
out
add
nop
fildl
mov
adc
popa
mov
mov
sbb
xor
dec
js
test
js
or
test
push
cld
or
xor
sti
int
dec
roll
inc
out
cmp
pop
xor
jnp
ret
in
add
fldt
dec
aaa
cs
jge
test
les
inc
es
inc
stos
out
das
scas
arpl
imul
jg
scas
lea
dec
aam
clc
sub
mov
jb
lods
mov
dec
mov
sub
push
push
sahf
arpl
test
jp,pn
inc
cmp
out
shll
cmpsb
mov
lret
mov
jmp
cmpb
jg
and
push
push
and
out
sub
add
sbb
das
add
into
fisttpl
or
mov
add
das
into
mov
adc
lret
loope
cmp
xor
mov
jecxz
mov
inc
mov
dec
mov
mov
leave
bound
sarb
pop
popa
daa
call
scas
repz
mov
loope
sbb
push
mov
jp
and
inc
jne
or
or
cmp
jo
dec
out
mov
mov
inc
arpl
fisttpll
es
mov
xchg
imul
inc
dec
lock
jecxz
jmp
or
mov
mov
pop
outsl
stc
push
lods
jbe
sub
scas
fwait
cs
cmp
leave
add
xchg
sub
lea
mov
pusha
out
scas
aad
aam
pop
jo
mov
mov
xchg
aaa
loop
pop
out
mov
mov
and
mulb
pop
mov
jp
mov
out
out
rorl
nop
sti
push
inc
bound
cmp
sub
mov
mov
or
insl
subl
mov
mov
and
xchg
jo
loope
stos
orb
sub
dec
outsl
inc
mov
jg
into
inc
jns
daa
sub
mov
lea
dec
add
inc
add
pop
sub
in
jecxz
es
das
mov
aam
jb
or
iret
or
and
add
inc
test
add
pop
insl
pop
lcall
mov
sbb
movsl
dec
push
test
or
and
inc
sub
loope
test
and
rol
and
mov
dec
jle
hlt
jae
into
clc
fldcw
arpl
outsb
outsl
lods
cmp
stc
xchg
sbb
stos
dec
sub
inc
test
adcl
sldt
lds
or
stos
rol
ret
jnp
lods
ljmp
stos
rorl
inc
out
int
cwtl
dec
cwtl
out
xchg
xchg
lret
push
scas
loope
cmpsb
adc
pop
cs
gs
push
lcall
xchg
mov
imul
inc
dec
inc
and
inc
cmp
or
mov
lea
and
lret
lea
or
outsb
inc
xor
ljmp
nop
aas
insl
scas
adc
mov
out
or
inc
sar
out
test
jno
sbb
push
scas
add
test
mov
int
in
std
clc
sub
inc
fisubrs
pop
daa
xchg
cmpsb
imul
cmpsb
xchg
cld
xchg
das
cld
or
pop
and
push
cld
push
pop
jg
or
cld
test
nop
ss
arpl
scas
scas
mov
lahf
dec
mov
lds
clc
fwait
rorl
push
arpl
daa
iret
xchg
xchg
jmp
inc
mov
out
jno
jne
mov
or
pushf
pop
shr
pushf
out
lea
mov
or
inc
stos
into
pop
xchg
xchg
inc
adc
sti
and
lea
push
mov
mov
jp
sub
decl
jno
xlat
cmpsb
jle
leave
inc
or
dec
mov
jp
stos
into
sub
push
imul
mov
fwait
inc
out
ret
andl
pushf
mov
out
jmp
nop
repz
aam
mov
lret
lods
leave
and
orl
daa
das
mov
nop
or
push
mov
sbb
sbb
inc
in
mov
jbe
imul
jmp
or
std
xchg
jmp
call
imul
loop
test
push
sbb
bound
adc
test
or
outsl
and
mov
out
or
lods
add
mov
pop
inc
movsl
xor
in
mov
push
pop
pop
mov
dec
int
jecxz
out
test
sub
sbb
xchg
dec
repz
push
sbb
inc
or
inc
add
push
push
int
stos
bound
das
inc
push
ret
mov
xchg
dec
insl
test
inc
das
fwait
jecxz
or
mov
sub
mov
sub
mov
bswap
mov
inc
mov
out
mov
int3
xchg
incl
ss
lsl
stos
roll
jb
mov
jle
mov
add
or
test
inc
sub
mov
inc
dec
cwtl
insl
stos
fsubs
ljmp
push
mov
xor
and
ljmp
push
sub
iret
inc
sub
movsb
pop
ret
sub
enter
push
movb
sbb
or
loopne
je
lods
das
addr16
test
out
jmp
pop
movsl
adc
or
shlb
inc
inc
xchg
cmp
push
and
scas
pop
iret
outsl
pop
int3
inc
addr16
stos
stos
insb
inc
ret
aad
mov
or
insl
jmp
out
scas
scas
lds
jnp
fsts
or
daa
iret
mov
pop
lret
and
out
clc
pop
lds
lock
scas
inc
test
pop
shl
outsb
leave
lret
cltd
mov
insl
int
jnp
scas
add
scas
inc
test
loope
cld
mov
ret
mov
or
and
int
test
cld
ss
js
orl
cmp
sub
outsl
jecxz
insl
les
inc
mov
add
nop
dec
imul
push
jmp
fwait
nop
sub
xchg
fildll
mov
push
sub
add
push
jp
lret
lcall
mov
and
outsl
cs
in
cld
bound
stc
mov
test
mov
push
inc
jns
and
cld
arpl
scas
out
or
fcmovne
outsl
out
in
ljmp
adc
cmp
mov
cs
inc
outsl
add
jl
lret
inc
call
mov
sarl
mov
cltd
mov
mov
test
fucomi
and
in
das
test
dec
stos
dec
repnz
push
jo
fldt
dec
push
cmp
inc
popa
bound
dec
out
mov
cld
popa
mov
cmc
sar
and
stos
out
or
or
sub
insl
mov
add
iret
test
jb
popf
adc
cmpsb
or
imul
loope
push
es
push
push
rorl
mov
sub
adc
cs
add
xchg
inc
sub
jge
jnp
or
ret
das
iret
stc
lods
and
xor
dec
int
shrl
jp
rcll
sub
cmp
inc
out
insl
mov
or
dec
ljmp
inc
leave
push
xchg
pushf
sub
ret
jp
mov
dec
imul
jp
push
or
hlt
mov
mov
and
nop
arpl
mov
sub
lds
lsl
bound
sti
std
mov
dec
mov
dec
jle
orl
dec
add
inc
pop
scas
subl
add
jae
or
xchg
fdivl
sub
ret
test
push
xor
jmp
and
adc
push
inc
pop
cmp
sub
jmp
mov
pop
sti
or
outsl
xchg
jno
scas
mov
add
mov
dec
add
scas
mov
insl
mov
ljmp
dec
stos
jns
in
mov
push
shll
andl
popa
mov
orl
fs
jl
out
sub
inc
loope
rorl
adc
lret
insl
cmovo
and
imul
push
xchg
jge
out
ss
adc
mov
popa
and
je
dec
add
jbe
jbe
hlt
mov
out
adc
in
add
mulb
sub
test
pop
jg
mov
dec
sbb
out
insl
inc
insb
je
arpl
or
out
inc
outsb
lods
lods
inc
jb
loope
inc
stc
inc
testl
das
and
mov
lret
cltd
xor
mov
insl
leave
push
jbe
fwait
inc
dec
bound
sub
mov
inc
push
lret
fcoml
dec
and
daa
cmp
out
lods
ss
divl
in
out
lret
inc
mov
xchg
in
ss
or
sub
jle
mov
and
out
lret
mov
mov
pop
es
inc
test
sub
int3
lods
fisubs
mov
popa
insl
mov
je
jle
rcr
mov
lods
mov
sub
mov
clc
dec
loopne
or
insl
mov
ljmp
icebp
or
je
pop
adc
inc
scas
wbinvd
mov
add
mov
push
rcr
inc
inc
lret
daa
int
or
mov
lods
dec
setnp
arpl
popa
outsl
scas
xor
lret
hlt
jcxz
mov
fidivs
xor
or
out
add
popa
and
loop
sub
lds
inc
nop
mov
jne
ret
cmp
adc
arpl
test
scas
xor
push
dec
scas
movsl
mov
add
jl
insl
into
dec
iret
leave
mov
shll
pop
sub
test
call
sub
mov
and
jecxz
sbb
push
in
fwait
int3
pop
lods
jb
bound
cltd
add
mov
bnd
add
into
xchg
aaa
out
push
mov
fimull
mov
and
inc
arpl
sub
inc
imul
cs
jmp
loope
mov
ljmp
or
cmp
int
imul
clc
test
insl
or
lds
in
das
xchg
scas
jnp
loope
lods
jns
rol
dec
frstor
push
pop
lods
loope
xor
push
mov
pusha
jbe
sti
pminsw
dec
and
mov
jbe
jne
cltd
mov
pushf
mov
shll
loope
mov
push
sub
adc
or
lds
lahf
pop
inc
repz
and
sbb
out
outsl
push
cmp
stos
or
or
popl
sub
out
jle
cmp
dec
out
fwait
or
sbb
imull
daa
jmp
dec
xorl
cmp
out
lods
lret
popa
jp
scas
test
frstor
arpl
adc
movsb
mov
lds
nop
or
mov
sbbb
arpl
pop
in
lock
call
cs
int
lds
and
jno
dec
mov
dec
push
mov
mov
push
or
xorb
fiaddl
push
xchg
dec
push
pushf
lods
mov
test
or
test
ljmp
jmp
fdivp
stos
fs
xchg
rclb
sbb
das
lahf
and
aaa
and
mov
mov
enter
cmpl
scas
mov
cmp
adc
fistpll
sbbb
out
outsl
sub
cmp
push
filds
mov
or
mov
stos
xchg
mov
addr16
sub
cs
and
lods
outsl
jno
arpl
mov
aad
dec
hlt
and
js
and
int3
loope
pop
xchg
popa
and
popa
jmp
test
clc
out
mov
inc
jbe
lret
insl
in
insl
or
popa
mov
movsl
push
xchg
orl
mov
imul
push
push
or
sbb
je
scas
leave
clc
fwait
inc
fists
or
in
ret
and
arpl
into
xchg
arpl
xor
test
or
inc
leave
cmp
or
dec
test
in
scas
mov
imul
lea
xchg
xor
sub
pop
sub
loopne
xorb
adc
hlt
sub
add
dec
insl
into
inc
mov
ret
test
jnp
das
nop
dec
push
sub
add
push
mov
pop
mov
insb
add
lcall
shll
mov
test
push
call
mov
and
jl
arpl
or
aaa
scas
movsl
loop
andl
arpl
in
aas
mov
jb
or
je
push
out
sub
add
or
inc
and
jl
sub
jne
jne
jmp
call
loope
xchg
sti
lret
ret
mov
xor
cmpxchg
sbb
mov
and
adc
loope
scas
xchg
test
mov
stos
adc
loopne
cmpl
inc
loope
inc
and
cs
sbb
cmp
movsl
dec
dec
sub
mov
nop
subl
imul
in
and
fiaddl
sub
cmp
test
cmp
xchg
dec
scas
xorb
inc
mov
mov
adc
ret
jne
decb
js
cli
scas
outsb
sbbl
inc
push
mov
aam
inc
add
jo
xchg
or
mov
or
lea
pop
movsb
mov
out
test
stc
dec
fisttpl
insl
scas
mov
scas
mov
out
adc
leave
sub
lret
scas
icebp
daa
mov
mov
fldt
add
jmp
out
shll
or
xchg
dec
or
mov
adc
andl
dec
out
add
push
call
nop
adc
adcl
out
insl
mov
adc
sti
test
or
nop
roll
into
lods
sub
mov
insl
addr16
jne
inc
scas
iret
jecxz
jo
or
ret
mov
jmp
jl
rorl
sub
inc
xchg
mov
bound
sbb
out
sbbl
inc
or
outsl
sub
inc
push
jo
jle,pn
xchg
int3
push
inc
aaa
ret
mov
dec
rcl
mov
scas
pop
stos
xor
or
pop
dec
cltd
cmp
out
dec
sbb
into
dec
or
sub
push
insl
lret
jns
loop
loope
bound
imul
xor
aaa
mov
ret
outsl
xchg
insl
or
and
cmpsl
stos
inc
xchg
or
jecxz
jmp
sub
arpl
jns
ret
pop
scas
jge
cmp
jbe
fdivl
sub
inc
pop
mov
stos
cmp
fwait
jecxz
jmp
lret
jne
mov
sbb
xor
add
sub
sub
out
shr
mov
xor
pop
in
xor
cmc
push
das
lods
inc
dec
jbe
adc
mov
faddl
inc
out
test
mov
adc
sub
test
out
sub
daa
mov
movsl
int
es
sub
push
jnp
ljmp
outsb
pop
orl
sub
lds
lret
testb
push
xorl
or
lods
mov
add
ljmp
bound
cs
shrb
and
cmc
out
cmpsl
lock
insb
mov
xor
cmp
mov
ret
bound
xchg
push
xchg
in
scas
inc
pushf
jno
adc
or
pop
pop
mov
imull
mov
int
and
jb
xchg
push
jns
rcl
std
adc
loope
lods
cltd
into
pop
addr16
leave
out
rcrl
out
xchg
jmp
lret
stos
aas
or
add
and
scas
outsb
ret
clc
daa
leave
mov
xchg
inc
outsb
xor
insb
rorl
xor
jge
push
jl
cs
jecxz
adc
js
mov
mov
ret
aam
in
or
dec
fsubl
inc
test
rcll
jecxz
out
stos
xor
in
mov
mov
mov
shlb
test
push
or
mov
push
fcmovnb
or
aaa
sub
or
imul
leave
dec
or
enter
insl
test
lds
dec
sbb
lret
jnp
outsb
scas
lods
cmpb
jg
arpl
inc
push
sub
sbb
and
mov
add
sub
out
mov
scas
aam
add
fidivrl
jae
mov
dec
out
test
jl
xchg
push
sub
arpl
pop
out
push
out
imul
jmp
xchg
andl
xor
sub
add
test
faddp
xchg
lods
lret
inc
repnz
das
jle
outsl
sub
inc
jge
jbe
push
xchg
pop
inc
fiaddl
shll
insl
jmp
pop
mov
jo
lea
dec
out
mov
cmp
ret
daa
insl
cmp
mov
insb
les
scas
mov
daa
mov
dec
arpl
punpckldq
xchg
imul
nop
arpl
fisttps
cmp
test
addl
push
mov
cmp
inc
sub
mov
sub
loope
add
arpl
dec
into
shll
popa
cmp
dec
mov
imul
mov
iret
push
fwait
out
push
add
scas
jne
fwait
lods
outsb
arpl
mov
jo
outsl
jno
jbe
pop
movsb
dec
lods
push
in
das
arpl
out
or
orl
cmpsb
add
scas
sub
push
mov
bound
scas
sbb
test
adc
scas
lods
arpl
das
nop
test
das
ret
xorl
or
fldenv
jnp
int3
dec
push
std
fsub
adc
incl
testb
jp
mov
clc
stos
dec
arpl
scas
xorb
ret
jb
rorb
sti
addl
test
cmp
lret
int
fbld
inc
add
sub
jns
cmpl
sub
stos
dec
mov
dec
int
repz
adc
jb
sbb
or
dec
stos
push
jo
mov
cltd
pop
hlt
jns
dec
fs
add
dec
push
and
and
push
je
jns
in
cltd
jnp
nop
shll
cs
inc
mov
scas
cmc
push
inc
loopne
add
or
ss
cmp
mov
cld
mov
daa
test
inc
pop
pop
and
mov
arpl
lods
das
out
lret
jmp
jmp
sub
mov
sti
and
dec
adc
jne
jb
push
stos
xor
mov
cmpsb
outsb
mov
mov
jo
das
iret
jne
cld
bound
imul
movl
jns
xchg
es
push
ret
cli
push
fcoml
ljmp
or
adc
repz
clc
loop
inc
cs
jmp
mov
scas
mov
outsl
dec
out
dec
divb
lret
dec
out
dec
lods
nop
dec
dec
std
into
inc
in
pop
dec
push
ljmp
lahf
ret
mov
inc
add
mov
mov
cld
stos
lods
data16
clc
hlt
pop
stc
cmp
js
loope
pop
jae
or
rol
sbb
bound
outsl
scas
movsb
arpl
sub
mov
inc
dec
setle
mov
lods
ja
into
jnp
es
mov
js
jb
dec
dec
cltd
lods
mov
stos
adc
mov
cld
lret
pop
mov
call
lods
jne
pop
xchg
lret
jecxz
adc
outsb
iret
dec
push
outsb
fidivrs
outsl
imul
arpl
sub
in
xchg
into
mov
scas
pop
dec
and
out
jle
jbe
xor
mov
push
std
ds
xchg
lods
in
popf
popa
imul
mov
nop
dec
ret
dec
js
iret
insl
outsl
dec
into
jno
inc
arpl
sti
add
ret
dec
mov
mov
fxch
imul
stc
adc
fiaddl
jecxz
mov
pushf
mov
mov
subl
std
jbe
and
adc
insb
loopne
scas
and
jbe
or
mov
xchg
std
mov
jo
and
pop
cs
out
mov
mov
inc
dec
addb
pop
ljmp
fnstsw
scas
dec
jl
into
subl
lds
leave
lret
scas
lods
in
mov
into
add
mov
test
and
xchg
loop
fsubrl
cmp
and
dec
aaa
jmp
cli
push
scas
or
and
xor
and
rcl
loope
decb
xchg
pop
stos
test
scas
out
dec
and
xchg
jb
inc
fstpl
or
idivl
xor
ljmp
inc
inc
sub
mov
sbb
out
dec
iret
fidivs
pop
orb
xchg
lret
loope
shrb
or
lods
test
movsl
out
and
hlt
sbb
mov
sub
mov
and
das
repz
dec
jmp
outsb
mov
dec
lcall
repnz
and
fwait
jb
jbe
xlat
push
ror
js
jmp
fimull
sbb
arpl
inc
mov
push
in
jnp
into
inc
rcr
ret
and
leave
scas
loop
mov
addl
bound
sub
dec
or
mov
test
push
ja
mov
out
dec
ret
and
lea
jecxz
inc
subl
scas
out
dec
inc
mov
or
or
sub
fucomi
outsl
ljmp
xor
mov
lea
insl
test
out
mov
push
insb
mov
ja
sub
push
scas
sahf
xchg
mov
movsb
popf
mov
inc
sbb
jmp
mov
xor
add
insl
push
or
lret
les
pop
arpl
xor
ret
and
and
jecxz
lea
outsl
mov
insl
outsl
pextrw
sub
cmp
ret
adcl
dec
fcompl
hlt
lods
dec
stos
int
iret
dec
pop
lods
inc
inc
adc
mov
push
inc
sub
inc
mov
mov
jbe
out
test
or
push
fwait
call
lods
fs
lret
push
movsl
mov
push
pop
arpl
movsl
mov
sti
sbb
scas
mov
sub
in
call
insl
inc
sti
repnz
inc
imul
lock
out
stos
jmp
daa
in
jle
mov
or
xlat
xor
adc
daa
data16
and
add
add
out
inc
jbe
lret
xlat
leave
and
lods
leave
ror
xchg
dec
mov
int
lods
imul
and
ds
sbb
bound
shll
add
push
cld
scas
insl
scas
ljmp
jmp
mov
out
lods
repnz
xor
mov
and
cltd
pop
sbb
mov
das
ret
repnz
sbbl
mov
leave
scas
or
test
test
sub
push
mov
mov
popa
bound
xchg
jmp
jbe
push
outsb
scas
adc
ror
bound
in
mov
aas
movsb
repnz
add
add
jmp
mov
je
push
leave
jbe
jmp
xchg
in
dec
scas
dec
cwtl
push
arpl
mov
iret
das
jg
out
decb
ret
into
sbb
dec
push
aad
cmp
mov
in
add
ret
mov
outsb
mov
mov
mov
out
ret
int
cs
mov
or
ret
adcl
ret
aam
mov
es
dec
sbb
add
loope
dec
mov
adc
push
sub
repnz
nop
pushf
inc
daa
scas
outsb
in
sub
and
nop
sbb
dec
push
mov
lahf
mov
jo
stos
jne
imul
nop
in
scas
cmp
into
lea
dec
sub
push
shrb
jb
add
mov
xor
adc
ret
repz
shl
add
mov
test
dec
mov
jb
and
lds
or
into
iret
into
daa
cmpsb
icebp
daa
mov
pop
jecxz
test
mov
fwait
shrb
clc
shll
or
sti
or
inc
xchg
xlat
popa
das
pop
insl
cmp
dec
xchg
test
push
and
sbb
filds
outsl
xor
lret
out
stos
push
push
mov
sub
clc
adc
roll
xchg
add
pushf
arpl
out
addl
dec
pusha
cmc
scas
mov
cli
xchg
scas
sub
out
lea
lock
mov
xchg
clc
lock
pop
loope
stos
xor
mov
xchg
clc
jmpw
fldcw
mov
clc
push
repz
mov
xor
xchg
imul
icebp
push
cmp
scas
push
inc
jg
stos
and
clc
sub
out
inc
ret
sub
movsb
pop
pop
add
jno
jo
insl
iret
stos
out
sub
jmp
or
mov
shll
jmp
cs
shll
push
adc
and
out
add
out
aaa
test
and
dec
iret
lods
imul
ret
test
or
mov
add
ret
push
sbb
test
das
lock
mov
out
lea
scas
sub
cmp
icebp
stos
insl
pushf
sahf
clc
or
mov
popa
inc
mov
ljmp
cmp
add
jge
and
sti
cmp
nop
stos
popa
mov
cmpsl
cmp
push
mov
test
scas
loope
mov
data16
clc
push
movsl
pop
lock
ss
cmp
mov
test
leave
jmp
fimuls
bound
stos
scas
mov
outsb
jecxz
add
and
fwait
imul
fdivrl
ds
fidivrl
cli
cmp
movb
dec
cmp
inc
dec
in
cmc
jbe
inc
idivl
push
or
cmp
lret
push
cmp
das
and
shr
inc
in
arpl
push
ja
iret
dec
iret
xchg
mov
pop
sub
jecxz
dec
dec
lret
cmpsb
das
enter
and
dec
cs
dec
imulb
bound
das
in
int3
sub
or
cmp
ljmp
outsb
nop
dec
sbb
lods
mov
data16
and
pop
dec
jp
lret
xchg
pop
pop
stc
dec
repz
add
int
lods
imul
sub
sub
ret
xchg
test
gs
sbb
sbb
out
test
into
jecxz
aas
cmp
aaa
cs
mov
arpl
sbb
loope
into
adc
pushf
test
xorb
mov
ljmp
loope
outsl
lea
sbb
pop
out
xorl
sbb
sub
lods
mov
push
xlat
xchg
add
out
or
sub
inc
dec
jmp
sub
ja
mov
add
xchg
bound
movsl
inc
andl
test
sub
or
out
lret
in
mov
ret
jne
inc
rorl
add
scas
popa
pop
int
jns
jbe
jp
sbb
mov
mov
inc
jo
out
int3
dec
jbe
jg
mov
sub
andb
add
xor
mov
hlt
push
scas
push
or
lods
xchg
stos
push
jb
iret
cld
lret
aas
fst
push
add
nop
sbb
in
in
ljmp
cvtps2pi
dec
xor
shrl
mov
cltd
nop
mov
jecxz
clc
sub
lods
or
xor
lret
dec
inc
cmpsl
roll
dec
jno
ret
sub
in
iret
inc
lods
push
inc
bound
adcb
repnz
mov
mov
in
lock
inc
clc
pop
nop
popa
add
loop
or
mov
mov
repz
or
cmpsl
add
lahf
nopl
repz
ja
out
push
inc
add
cmpsb
ret
mov
cmp
mov
jae
je
out
jecxz
arpl
stc
lea
addb
jbe
pop
addr16
dec
leave
outsb
stos
scas
ret
fimull
xor
gs
insb
jg
imul
addr16
clc
push
or
mov
in
cmc
scas
je
sub
cs
out
mov
daa
lea
or
movsl
and
out
or
mov
bound
and
int
repnz
scas
ret
mov
mov
into
fdiv
repnz
ljmp
imul
sbb
ficoms
outsl
out
mov
cmp
cli
scas
inc
lea
outsl
pop
lahf
jmp
or
adc
out
orb
sarb
or
lods
push
pop
inc
lret
out
xchg
mov
cmp
dec
clc
jmp
fidivs
jl
int
out
test
adc
insb
sub
inc
dec
arpl
mov
fldt
dec
pop
cmpl
mov
add
sub
cli
adc
bound
clc
out
sub
cmovle
or
rep
sub
hlt
push
lret
and
mov
out
out
mov
jecxz
out
pop
iret
rcr
mov
inc
pop
std
adc
mov
test
fdivs
sbb
das
mov
mov
dec
out
in
cs
jo
mov
or
sub
fldt
test
sti
in
das
add
cmp
or
inc
jecxz
jnp
xadd
mov
ljmp
xchg
cmpl
outsl
int
jae
mov
jne
fistpll
test
inc
lahf
mov
in
je
arpl
int
repnz
das
jbe
insl
jmp
or
js
inc
test
pop
sub
out
and
pop
test
jb
loope
push
push
vmovdqa
xlat
add
cmp
cwtl
inc
jmp
inc
test
fs
out
fwait
inc
scas
outsb
jp
popa
push
and
mov
insl
outsl
or
into
insb
scas
and
leave
jb
stc
ljmp
outsl
jae
movsb
and
jae
pop
ret
mov
sbb
dec
inc
xor
cwtl
push
int3
js
mov
nop
mov
addr16
scas
imul
cmp
jg
addl
fldt
pop
inc
pushf
call
lret
fldl
sbb
bndldx
xchg
and
jne
repz
mov
addl
outsb
and
pop
daa
iret
sub
mov
xchg
push
fcomip
pop
push
adc
arpl
cli
cmp
xchg
inc
push
jo
arpl
mov
outsb
mov
ljmp
leave
das
fwait
pop
dec
out
lods
nop
mov
sub
jg
fwait
in
iret
mov
mov
int
push
mov
adc
dec
inc
inc
lods
insb
add
ljmp
mov
movsl
andl
sbb
cmp
outsl
insl
dec
mov
xor
aam
adcl
mov
mov
in
ret
jns
stos
and
xor
nop
int
test
inc
cs
shrl
jne
and
loop
loop
bound
lds
mov
or
clc
loop
xor
sar
movsl
iret
lods
push
fwait
scas
mov
inc
leave
dec
fnstcw
mov
lret
jl
popa
mov
pop
push
mov
inc
mov
sub
add
loope
lret
repnz
pusha
adc
lods
push
popa
or
loope
ret
push
div
push
cld
inc
out
and
adc
imul
mov
adc
int3
icebp
lods
jb
outsl
pusha
pop
aad
xchg
sub
or
sub
mov
out
push
adc
and
add
xchg
outsl
add
add
mov
push
add
imul
sti
test
outsb
dec
in
mov
push
lods
mov
sub
xlat
mov
or
pushf
loope
out
inc
repnz
mov
mov
xchg
loope
pop
ljmp
in
icebp
jg
lret
out
scas
push
lea
add
les
xorl
in
jns
dec
sbb
cmc
xchg
jmp
and
cs
push
lock
xchg
imul
sub
ljmp
push
mov
test
add
or
orl
mov
and
xchg
add
fs
inc
sub
lds
dec
pop
out
orl
daa
sbb
mov
out
mov
mov
cld
shrl
xor
pop
and
subl
out
jb
sbb
jp
outsb
or
jecxz
addr16
ret
call
test
sbb
push
shll
or
int3
lahf
cld
fidivl
mov
sub
push
mov
sti
iret
pop
aam
xor
fisubs
lret
mov
mov
and
ljmp
and
push
test
lea
subb
fnstenv
test
mov
adc
mov
cmpl
cmpsb
and
out
leave
mov
int
jg
mov
push
test
ret
adcl
stos
scas
int
out
jnp
add
shrl
xor
sub
and
push
push
in
add
imull
ja
insl
imul
inc
adc
mov
dec
mov
lods
nop
jmp
arpl
or
shr
out
ret
insb
jg
in
and
into
dec
and
test
scas
imul
push
mov
outsb
aas
dec
fidivl
sub
call
jg
insl
shll
pushf
lods
xchg
push
mov
ds
inc
jmp
mov
adc
rcrb
iret
jl
jmp
push
incb
sub
bound
jno
imul
dec
mov
outsl
dec
js
jmp
inc
addr16
pop
fcmovne
das
pop
sbb
int
movsl
addr16
dec
or
shll
jge
clc
scas
lret
mov
decb
scas
cltd
mov
mov
sub
ret
dec
out
jbe
int
inc
andl
jg
into
xchg
cmp
cmc
dec
xchg
icebp
scas
getsec
lret
ret
push
pop
icebp
clc
in
lahf
stos
lea
movsl
lods
bound
outsb
in
cs
dec
jb
leave
add
xor
das
add
enter
lea
sub
loope,pn
scas
jae
dec
clc
adc
sub
push
sub
test
lock
sub
dec
das
mov
mov
jne
repz
mov
push
or
nop
cmpsb
loop
cmpsl
ja
lret
xor
push
mov
clc
inc
mov
sub
out
stos
out
ret
jne
out
mov
out
loop
jg
jecxz
dec
lcall
arpl
inc
loop
sub
jae
ds
mov
sub
add
cli
push
subl
dec
sbb
test
adc
imul
das
sub
decb
xor
mov
inc
jle
mov
dec
jae
leave
and
and
iret
popa
cld
mov
mov
fsubs
mov
outsb
nop
into
bound
mov
pushf
pusha
and
test
loopne
sti
imul
lret
sahf
mov
mov
cs
ss
pop
dec
inc
ret
into
pop
rcll
mov
mov
jns
dec
dec
xlat
push
jg
mov
or
imul
sbb
lods
call
scas
push
dec
fldt
ds
dec
cltd
std
test
jo
lods
or
outsb
sbb
mov
xor
mov
jne
mov
movsb
test
mov
arpl
pop
insl
mov
mov
mov
fsub
in
mov
fsubr
push
push
dec
or
movsl
add
pop
fldl
cmp
loopne
sbb
outsl
daa
orl
dec
fsubr
cmp
pop
insl
cs
sub
mov
adc
rorl
jg
mov
arpl
in
movsl
sub
outsl
jmp
or
addr16
inc
scas
sub
and
pop
mov
mov
sti
int
clc
sbb
stos
xor
sbb
movsb
outsb
hlt
sub
adc
xchg
lods
jecxz
repz
sub
adc
mov
jo
sub
jne
arpl
daa
int
mov
dec
pop
stc
mov
outsb
mov
das
comiss
fs
test
mov
call
jl
scas
das
stos
and
jne
pop
sbb
nop
cli
sarl
clc
and
sub
das
xchg
or
pop
add
cmp
in
cmc
lea
iret
add
xor
push
cwtl
push
mov
shll
out
clc
mov
lcall
imul
ret
lret
mov
mov
push
and
push
cmp
mov
insl
and
loope
lods
xchg
fstpl
lcall
add
mov
int
jbe
lock
in
mov
push
mov
fidivs
in
outsb
pop
repnz
aaa
aaa
ret
iret
or
xor
sahf
leave
dec
sahf
dec
cmp
cmp
scas
dec
insb
in
loope
nop
mov
xchg
lahf
push
cmp
arpl
addr16
imul
mov
arpl
scas
inc
and
call
hlt
lock
out
scas
sbb
sub
dec
lods
add
push
sarl
leave
iret
or
sbb
add
sub
lods
mov
dec
cmpl
add
loope
xchg
or
push
rcrl
nop
jns
and
js
ds
pop
or
cwtl
das
nop
cmpsb
out
movsb
je
iret
in
into
jbe
cld
leave
lock
dec
test
add
mov
xchg
popl
mov
out
arpl
or
dec
lods
stc
jecxz
pop
int3
fisttpl
outsb
int
orb
int3
lret
adc
and
test
mov
pushf
push
sub
shl
fstpt
mov
into
inc
fisttps
mov
outsl
add
add
and
cli
or
xchg
and
out
iret
and
scas
lods
mov
or
xchg
sub
lea
cmp
repnz
fwait
dec
ret
mov
mov
mov
add
arpl
int
add
or
jge
inc
mov
in
jns
lcall
testl
and
clc
inc
fs
out
or
aad
popa
mov
mov
cmp
lret
nop
test
repz
fdivrl
ja
test
sub
jo
outsl
in
jno
cmp
sub
int
lods
sub
pop
loope
push
sarl
push
mov
test
jmp
insb
mov
imul
sub
scas
or
out
and
ja
cmp
dec
or
es
mov
pop
ret
add
into
bound
mov
int
dec
lods
dec
shll
cltd
mov
ljmp
into
jp
out
sub
dec
int
jae
ret
push
inc
leave
lret
loop
orl
mov
add
jecxz
repz
fdivrl
into
out
ret
pop
mov
out
cmp
je
or
loop
leave
fldt
mov
lret
inc
pop
mov
push
push
push
ret
ret
inc
or
nop
jbe
add
loope
xchg
lods
arpl
testl
mov
and
lds
pop
cmovg
stos
es
int
push
testb
mov
dec
in
mov
cmp
in
push
bound
lea
xchg
mov
and
leave
into
shr
mov
dec
ss
jo
test
sub
or
int3
mov
nop
and
jecxz
les
in
lea
xor
pop
test
jae
inc
adc
insl
and
in
fisttpl
or
loope
inc
das
lds
ret
dec
js
sub
les
or
arpl
nop
lea
inc
adc
fistps
out
adc
pop
mov
inc
scas
push
mov
test
andl
imul
fisubrs
inc
inc
into
mov
mov
js
aas
or
cs
xorl
mov
sub
dec
addl
jne
loop
dec
sbb
cmpsb
sub
mov
jnp
ljmp
xchg
lods
jg
test
xchg
nop
incb
inc
mov
adc
inc
lods
arpl
iret
mov
loop
stos
mov
rclb
pop
xlat
arpl
mov
push
aas
push
lret
pop
cld
jp
mov
or
sub
insl
mov
push
popa
mov
popa
andl
mov
lret
mov
xor
outsb
add
in
nop
sti
mov
jp
sub
outsb
stos
push
dec
cli
scas
cmp
in
mov
ret
mov
subl
int
cmpsb
lret
sbb
lea
mov
leave
jle
jne
mov
cltd
outsb
pusha
js
out
sub
mov
push
and
jae
dec
or
lea
bound
lret
sbb
jb
inc
add
cmp
dec
sub
test
push
fstl
or
mov
andb
mov
pop
jge
fld
mov
insb
jbe
add
leave
inc
and
inc
dec
dec
xchg
pop
xchg
es
lods
fwait
mov
sub
sbb
lods
jb
mov
jecxz
jmp
mov
jle
xchg
lds
std
addr16
or
xchg
arpl
repnz
or
inc
bound
movsl
push
or
or
adc
mov
iret
cmp
repz
in
mov
dec
scas
mov
push
cmp
jp
ret
mov
push
scas
push
repnz
mov
mov
jnp
stos
shll
lret
or
push
xor
fwait
mov
insl
dec
dec
ret
loop
fidivrs
mov
out
loop
push
outsb
xlat
insl
dec
test
out
movsl
dec
fistps
setbe
or
sbb
vfrczsd
and
call
psubd
or
bound
sbb
mov
jb
dec
loop
arpl
add
fidivrl
test
sbb
cmp
pop
popa
xchg
sbb
push
dec
stos
sub
mov
leave
or
lahf
hlt
jecxz
sub
jmp
lret
mov
jb
sub
adc
xchg
sub
idivl
jecxz
scas
add
das
out
sub
into
adc
sub
sub
dec
into
cld
popf
dec
xchg
orl
imul
add
push
xchg
sti
or
cmp
or
scas
lods
cld
dec
and
dec
mov
jnp
dec
int
arpl
scas
jb
xor
out
loope
adc
popa
mov
mov
in
lds
packuswb
sub
jmp
cmp
jecxz
sbb
ret
dec
push
rorb
test
cmp
iret
xchg
and
clc
sub
arpl
outsb
test
cmovno
jo
bound
sub
imul
lods
mov
stc
das
dec
addr16
mov
xchg
pop
movsb
and
in
add
mov
lahf
scas
outsl
mov
inc
cmp
out
xchg
mov
inc
es
int
sti
adc
jecxz
mov
cltd
or
dec
cltd
outsl
ret
insl
mov
test
scas
sub
popa
and
lea
aam
stc
scas
nop
leave
int
push
xchg
dec
ret
jo
jecxz
xor
gs
clc
sub
fadd
dec
iret
mov
jmp
loope
je
inc
mov
scas
loop
jl
test
scas
xchg
ss
adc
jno,pn
sub
addl
inc
insl
inc
sbb
movnti
clc
outsl
jbe
sbb
fs
dec
jecxz
dec
out
popa
mov
inc
shll
insb
out
leave
mov
and
nop
sub
add
jmp
stos
mov
push
test
jge
movsl
and
xchg
imul
outsl
test
xchg
jo
add
xchg
enter
jecxz
fs
pand
ljmp
rorl
ret
arpl
mov
ret
pop
jecxz,pn
jne
add
cli
adc
jp
iret
jne
insb
pushf
outsl
ljmp
test
and
push
icebp
movsb
je
ret
leave
push
in
sbbl
lds
lods
lahf
jb
jo
ret
les
and
dec
cmpsb
dec
xlat
inc
ret
mov
mov
cltd
jb
out
and
andb
fldt
pushf
mov
test
imul
jo
out
insl
inc
inc
daa
push
movl
int
push
ljmp
and
mov
or
xor
mov
outsb
cmp
insl
pop
dec
sbb
out
cmp
push
cmpsl
fwait
jne
mov
das
cmp
lret
inc
das
lock
jmp
mov
lods
pop
ret
iret
inc
xchg
ljmp
push
cs
in
sub
cmp
inc
movsl
outsb
nop
xchg
sti
push
and
push
dec
jno
iret
pop
push
pop
dec
std
popa
inc
sub
scas
int
sub
aaa
inc
lds
movsl
adc
jecxz
in
into
inc
mov
mov
das
bound
insb
ret
popa
adc
inc
std
add
imul
jns
std
or
sub
shrl
lcall
cmp
shr
push
repnz
subl
sbb
out
sub
mov
in
dec
mov
lret
pop
sub
aam
dec
in
lds
call
insl
cld
add
jne
jmp
sub
arpl
or
nop
dec
fdivrp
adc
mov
add
aam
or
test
mov
scas
rorl
iret
out
mov
dec
fwait
jnp
jmp
mov
ds
xorl
add
dec
stos
mov
out
lea
dec
push
mov
add
js
mov
and
dec
jne
cmp
imull
adc
jl
push
dec
ret
scas
fisttpl
push
out
push
mov
loope
in
outsb
add
insl
mov
sti
inc
lods
insb
jmp
mov
mov
leave
inc
dec
dec
dec
ljmp
jmp
ret
sahf
sub
jbe
jns
out
iret
xlat
in
adc
push
imul
ljmp
popa
pop
mov
popf
iret
mov
js
lods
jbe
or
sbb
inc
cld
mov
jne
jno
pop
gs
cmp
fwait
mov
shll
clc
dec
loope
mov
insl
mov
or
sub
xor
and
roll
ret
shll
movsl
iret
dec
mov
jno
mov
xchg
dec
mov
lock
cmp
sub
inc
out
pop
pop
cmc
adcl
jne
fs
imul
sti
test
loope
es
or
es
iret
bound
push
stos
adcb
int
lret
mov
pop
jns
enter
clc
inc
push
outsb
outsl
dec
lods
or
test
ljmp
test
or
arpl
pop
ljmp
inc
je
jecxz
jb
push
jnp
mov
cmpsl
test
into
mov
loop
fistl
mov
stos
or
test
push
cld
sub
arpl
test
jbe
and
dec
dec
les
or
and
call
inc
lods
into
dec
mov
sbb
loop
das
xor
sub
loopne
and
movsl
lock
or
pop
out
in
jl
popa
into
bound
lods
popa
or
mov
dec
inc
aad
jmp
push
imul
sti
jns
sarb
insl
and
stos
add
daa
loope
mov
sub
inc
dec
call
xchg
cmpsb
inc
mov
fidivrs
ret
out
arpl
stos
mov
inc
jge
pushf
out
jb
push
imul
cmc
js
iret
jbe
loope
leave
js
or
add
push
fistl
dec
andb
xor
inc
push
push
std
mov
mov
inc
inc
sub
inc
xchg
cs
xchg
dec
sub
ret
dec
leave
inc
aam
dec
imul
sub
dec
enter
outsb
push
repz
les
stos
daa
add
scas
jl
das
and
in
jb
push
clc
scas
dec
or
mov
insl
ret
lret
mov
dec
inc
add
lds
mov
and
lea
inc
or
jno
arpl
mov
movsl
sub
js
lret
jb
shl
insl
clc
sbbl
leave
lods
xchg
iret
sti
adc
ljmp
xor
outsb
sub
movsl
lds
rcll
into
int
lea
arpl
arpl
jmp
out
sub
push
xchg
test
jo
mov
sub
or
push
xchg
pop
es
andb
cmp
int
bound
sub
mov
imul
loope
leave
or
xor
addl
pop
dec
cvtps2pd
dec
iret
cwtl
loope
mov
movsb
nop
sbb
ret
repnz
ds
or
cs
mov
stos
jo
int
and
in
and
call
add
nop
lret
lods
bound
arpl
sbb
sub
dec
sub
mov
push
and
fstl
lods
lds
push
hlt
lret
nop
scas
jl
add
dec
in
mov
in
stos
cmp
fsts
sub
sti
mov
ret
mov
out
je
lods
inc
inc
loope
pop
and
cltd
mov
adc
cmc
xchg
mov
pop
fldt
add
cmp
insl
test
add
es
shll
insl
push
cld
ficompl
ljmp
and
les
test
and
pop
mov
insl
repnz
inc
lods
and
imul
adc
aam
adc
jmp
scas
lret
adc
ret
or
mov
add
ret
xor
scas
fs
shrl
out
push
gs
cmc
sub
stos
or
arpl
iret
pop
push
repnz
or
dec
sti
out
or
push
and
push
jmp
add
mov
inc
xchg
push
dec
outsl
and
xor
or
imul
out
jecxz
add
out
imul
pushf
inc
or
xchg
cs
mov
cli
lea
out
stos
leave
inc
cmp
mov
mov
sarb
or
jbe
add
jbe
arpl
movsl
or
jecxz
dec
das
out
jmp
mov
mov
mov
adcl
lret
jge
or
and
push
fs
or
out
inc
bound
arpl
out
add
xor
inc
insl
testl
xchg
jns
je
dec
and
pop
push
lods
lret
fs
loop
lds
xchg
dec
jl
mov
stos
cmp
jmp
je
push
or
ljmp
cvtpi2ps
js
xchg
pop
cld
lea
inc
mov
test
sbb
arpl
out
in
out
insl
fwait
inc
cmp
mov
test
aaa
loope
jge
loop
arpl
repnz
and
cwtl
in
daa
sub
mov
je
push
ja
in
iret
pushf
gs
ret
popa
inc
scas
fmulp
mov
sbb
cmp
jle
lods
xchg
in
mov
lock
shrl
leave
dec
jge
or
into
inc
cmp
cmpsb
out
mov
pop
push
pop
cmp
and
gs
data16
add
sti
outsb
and
lret
xchg
test
cli
or
or
call
xor
and
popa
stos
cli
lods
arpl
xor
mov
pop
or
or
js
test
mov
ret
lret
sub
icebp
mov
mov
jmp
mov
inc
mov
or
cmp
insb
dec
sub
leave
mov
stos
xchg
mov
popf
adc
and
jmp
xchg
movsb
int3
mov
mov
out
loop
push
jp
js
jecxz
imul
insb
sub
ret
pusha
in
loop
inc
mov
jne
inc
dec
arpl
mov
dec
xor
push
adc
lock
in
jp
arpl
cvttps2pi
jno
push
mov
aas
cmp
sahf
mov
scas
insl
addr16
movsl
or
mov
out
stos
fwait
and
paddb
sbb
dec
scas
ret
iret
cs
aam
hlt
loope
nop
into
dec
mov
test
sbb
arpl
stos
dec
ret
sub
enter
or
insl
push
imul
or
movsb
iret
xor
daa
jnp
mov
scas
push
insb
ror
or
or
out
into
add
insb
lea
or
lahf
cwtl
xorl
iret
leave
out
bound
clc
insl
sub
daa
in
inc
cmpsb
scas
outsb
fsubp
add
int3
arpl
jmp
jecxz
mov
jne
dec
mov
or
pop
popa
iret
dec
sub
inc
aad
cltd
jecxz
sub
sub
and
leave
ds
fprem
iret
sbb
jge
leave
mov
jnp
dec
stos
out
inc
das
bound
and
sbb
call
dec
jmp
test
inc
sub
dec
imul
movsl
pop
jo
add
jbe
sbb
addl
mov
mov
lahf
in
push
icebp
sarl
mov
orb
out
leave
outsl
xor
ljmp
popa
mov
arpl
out
jmp
repnz
mov
dec
repnz
pop
mov
jmp
out
clc
mov
fldt
mov
nop
insb
in
outsl
mov
ficompl
scas
push
push
arpl
mov
dec
out
and
lea
inc
movsl
pop
xchg
xor
into
fildll
insl
leave
fucomi
movq
lods
imul
hlt
mov
jnp
int
dec
sub
lar
jmp
sti
push
inc
push
stos
daa
sub
out
movsl
in
mov
sub
cli
mov
mov
mov
ss
loope
xchg
and
inc
dec
fmull
jecxz
lahf
pop
test
fsubr
repz
push
add
jmp
scas
push
or
daa
dec
out
incb
dec
sub
mov
sub
mov
scas
add
dec
mov
inc
cs
sub
ja
jecxz
cmp
scas
faddl
orl
popa
aas
icebp
adc
das
out
stos
repz
mov
std
pop
mov
inc
imul
iret
sub
or
arpl
loop
dec
ret
outsl
clc
orl
jl
test
mov
cmpsb
add
dec
lret
roll
inc
or
xor
fcmovnb
dec
stos
jg
mov
mov
mov
lahf
nop
icebp
imull
insl
mov
cmp
lahf
and
std
loop
decl
imul
shl
mov
iret
lea
jbe
insl
out
xchg
and
xorl
sbb
insl
sub
aas
into
out
mov
jg,pn
shr
ret
idivb
sub
nop
dec
dec
movsl
lods
cmpl
fidivl
sub
add
dec
and
jno
adc
call
xchg
and
stos
dec
scas
out
ss
dec
and
sti
mov
int
into
rcll
out
push
cmp
dec
aad
insl
adc
in
xchg
jnp
and
ret
sub
lcall
lds
xor
in
dec
nop
add
adc
fwait
lahf
dec
push
outsl
cmpb
dec
jmp
aam
cmpsl
lret
jmp
push
dec
lds
mov
cmpl
shrl
ds
scas
inc
or
rep
push
out
inc
xchg
or
test
jecxz
int
movsb
lods
stos
loope
outsl
mov
jl
sub
popa
nop
ret
xor
mov
subl
jg
push
mov
in
push
cmc
mov
jecxz
push
sub
notb
or
addr16
insb
mov
out
lods
and
sub
dec
inc
pusha
mov
sbb
and
and
add
jecxz
outsb
xlat
ret
movsl
add
fwait
add
dec
inc
out
sub
mov
xchg
outsl
lods
mov
stc
dec
adc
in
pushf
dec
incl
mov
out
xchg
push
sub
js
in
inc
test
mov
outsb
cmp
lods
bound
roll
jo
jbe
sbb
or
arpl
mov
cmp
dec
popa
aas
loopne
push
stc
fs
mov
mov
or
vphaddbq
loope
loope
mov
inc
cmp
or
insl
outsb
andl
mov
fnsave
jnp
mov
test
sbb
es
fsubp
mov
std
lea
leave
pxor
fsubp
cmp
sahf
test
testb
loope
insl
movsb
call
jne
dec
orl
inc
movsb
imul
bswap
stos
popa
sub
pop
xchg
leave
mov
lret
ret
xchg
dec
ret
cmp
inc
dec
ja
mov
cmpb
insl
inc
and
lea
cmp
in
cwtl
daa
sub
cmpsb
mov
sbb
dec
ja
and
pop
mov
sbb
outsb
lea
jnp
dec
add
jecxz
test
cltd
mov
sub
es
iret
inc
mov
mov
dec
xor
jl
mov
jmp
xchg
cs
out
add
push
bound
or
dec
std
loop
dec
test
dec
subl
add
adc
ret
xlat
out
repz
dec
or
push
insl
jmp
xchg
out
in
stos
enter
or
lds
xchg
sbb
add
iret
pop
call
test
sbb
cli
and
andb
movsl
stos
dec
lods
push
cld
sub
fs
outsl
loopne
ja
inc
dec
xchg
push
sbb
jmp
xchg
xchg
fldt
cwtl
sub
ret
insl
sbb
xchg
or
roll
scas
cmp
xor
sub
mov
ljmp
leave
jne
xor
movsl
push
sbb
inc
lea
dec
das
or
add
pop
jp
add
dec
or
cmpsb
jmp
insl
arpl
shr
push
adcl
je
add
jge
lcall
mov
xor
xchg
inc
pop
mov
xor
shrl
in
jmp
in
lds
cmp
fildll
pop
lahf
and
out
dec
stc
es
push
or
jns
arpl
outsb
mov
mov
dec
in
out
jne
and
add
insl
stc
dec
scas
dec
das
insl
leave
outsl
iret
mov
mov
jmp
fcmovbe
fcmovb
xchg
out
or
int
sub
mov
xor
sahf
cs
dec
or
and
push
mov
loope
push
out
bound
and
mov
dec
mov
dec
js
or
cs
daa
out
and
push
jbe
movswl
inc
dec
lods
jnp
inc
mov
fsubl
outsb
arpl
dec
leave
xchg
arpl
data16
inc
insl
stos
imul
push
sahf
andl
inc
aam
jns
ljmp
scas
into
dec
out
jecxz
inc
in
mov
das
jl
popa
lret
bound
xchg
fwait
cmp
xchg
push
fstpt
lcall
cmp
ss
pusha
dec
mov
mov
fstpt
cs
jp
mov
jbe
sbb
jg
scas
or
and
jmp
scas
lret
cld
lods
jbe
daa
subl
fisttpl
add
mov
fwait
shr
jmp
cld
pop
in
or
jecxz
add
inc
inc
sub
fisttpl
add
test
imul
ljmp
in
arpl
or
lods
mov
insl
bound
imul
mov
cmc
nop
es
dec
insb
push
jmp
mov
sub
out
xor
in
out
lods
mov
mov
jp
xor
push
mov
cmp
add
lea
sub
insl
inc
imul
les
dec
mov
cmp
iret
imul
test
movsb
mov
and
das
test
inc
xorl
mov
js
or
and
addr16
imul
jmp
xchg
gs
lcall
xchg
in
ret
lcall
movsl
mov
mov
or
fwait
add
std
jg
and
or
stos
out
and
adc
imul
imul
dec
test
sti
cs
ret
jp
shll
lods
lock
repnz
ucomiss
movsb
scas
popa
jae
inc
or
mov
mov
sub
mov
cld
orl
or
fsubr
cmpsl
xchg
std
cs
jo
rcr
outsl
mov
xchg
xchg
leave
mov
into
ret
mov
cmc
cmp
orl
outsl
out
nop
mov
popa
dec
mov
inc
inc
test
ds
adc
mov
ret
and
mov
and
in
mov
sti
test
mov
bound
pop
mov
adc
mov
arpl
mov
mov
int
lret
dec
push
addl
mov
fldenv
mov
sbb
xchg
ja
sub
jecxz
subl
stos
fldt
xor
int
jl
addl
stos
ret
loope
les
dec
insl
bound
sbb
jne
in
jmp
sbb
out
iret
mov
lret
jb
lcall
les
mov
and
lock
sbb
das
test
dec
push
push
popa
mov
dec
movsb
and
insb
lods
lret
outsb
mov
jg
out
ds
sbb
pop
dec
daa
nop
stos
fwait
scas
inc
lods
ret
jmp
push
sahf
ret
stos
mov
test
iret
xchg
push
push
adc
clc
insl
dec
adc
subl
popa
or
and
ret
into
push
mov
and
mov
jl
ret
leave
or
fisubl
js
arpl
jb
mov
daa
sub
and
pop
dec
rorl
mov
dec
jno
out
mov
loop
cmp
sti
cmpsb
lret
fwait
in
add
mov
iret
push
jmp
pusha
jb
or
mov
dec
inc
xchg
inc
mov
dec
sub
mov
cmp
outsb
leave
in
enter
or
inc
jmp
mov
pop
movsl
popa
mov
push
inc
cltd
sbb
faddl
cmp
add
mov
arpl
nop
dec
jge
jb
lock
les
imul
inc
mov
insb
fsubp
scas
or
es
lods
clc
mov
mov
mov
inc
cmp
mov
dec
popl
outsl
xchg
pop
dec
daa
lea
scas
lods
inc
push
nop
and
sbb
loop
clc
and
ss
add
mov
mov
insb
and
outsl
stos
cmovge
xchg
popa
lods
jae
dec
scas
int
jmp
ja
fldt
or
or
jl
or
stos
scas
aad
int
daa
or
roll
mov
out
cli
dec
jo
int
stos
mov
jecxz
inc
inc
addl
dec
mov
inc
lea
stos
mov
add
in
mov
xor
mov
and
inc
mov
and
iret
outsb
in
add
jnp
mov
outsl
lods
mov
out
mov
loope
aaa
jnp
orl
lret
daa
and
inc
insl
stos
gs
out
lea
dec
mov
mul
inc
push
sub
add
mov
ljmp
inc
inc
dec
hlt
icebp
loop
aaa
dec
dec
sub
inc
dec
xchg
and
push
bswap
daa
push
mov
dec
ret
mov
push
dec
ss
mov
ret
inc
mov
push
int
push
cli
loope
add
nop
stos
cmp
ret
sbb
notb
pop
dec
int
roll
test
mov
imul
mov
scas
pop
jo
arpl
loope
jecxz
push
addb
mov
sub
xorl
push
jmp
xor
les
dec
scas
jp
mov
scas
ficoml
dec
cmpsl
int
loope
nop
lret
les
and
js
insl
sti
cs
loope
mov
dec
sbb
imul
outsb
adc
jle
in
jno
jne
loop
ret
lret
lds
jecxz
mov
and
nop
cmp
cli
sub
lods
loope
in
pavgw
and
repz
sub
xchg
adcb
cld
out
scas
xchg
xchg
sbb
mov
insl
inc
sub
outsb
xchg
js
test
dec
ljmp
add
out
movb
mov
rolb
mov
xor
mov
mov
adc
insb
push
push
bound
pushf
subl
jmp
mov
mov
dec
jb
flds
and
cld
lret
mov
in
adc
mov
sub
sub
outsb
loop
jb
mov
iret
lea
ljmp
xor
ret
jecxz
mov
cmp
push
sti
and
test
inc
adc
mov
fwait
dec
mov
cs
jbe
out
stos
ljmp
dec
push
lods
rclb
mov
inc
jmp
imul
ret
fldt
inc
cs
fbld
jecxz
xor
dec
clc
push
mov
push
dec
orb
sti
dec
test
add
iret
arpl
mov
add
inc
jno
popa
outsl
mov
inc
das
dec
cltd
insl
xchg
fs
jmp
cmp
decl
xor
and
int
pop
inc
bound
xor
outsl
das
ret
push
lret
dec
lods
or
arpl
jns
inc
int
adc
mov
in
dec
push
bound
add
imul
out
sbb
lcall
pop
insl
lcall
sbb
out
dec
lcall
or
mov
push
mov
mov
out
ret
xor
add
test
divl
jnp
int
orl
jno
out
popa
xchg
std
xor
or
imul
pop
or
sub
andl
add
mov
or
test
dec
jecxz
dec
jnp
popa
into
dec
outsb
lods
mov
imul
mov
inc
push
jns
inc
add
dec
lds
arpl
sub
jmp
inc
dec
jno
cmp
mov
loope
std
dec
push
insb
or
sub
mov
add
repz
push
shlb
lret
or
xchg
shrb
mov
sub
or
fucomip
stos
rorl
daa
pop
clc
mov
test
ljmp
cltd
jecxz
mull
leave
bswap
xlat
fildll
inc
outsl
mov
or
dec
repz
pop
inc
mov
fistps
mov
into
mov
dec
rcl
repz
scas
xor
dec
fldt
popf
int
cmpsb
and
pop
test
jmp
cmp
dec
and
call
sbb
or
aam
sahf
sbb
jl
in
push
sub
lahf
call
insl
jno
mov
or
mov
insl
es
push
je
lods
or
fsub
mov
mov
cld
inc
cmp
sti
or
popa
ljmp
push
push
scas
scas
cli
ja
sub
dec
mov
out
bound
mov
ljmp
push
in
scas
dec
mov
or
das
movsl
fdivs
sti
add
test
dec
sbb
xor
outsl
outsb
pop
iret
inc
lock
pop
rol
jbe
arpl
ret
xchg
arpl
sbb
iret
scas
clc
in
sub
call
add
je
xchg
push
push
mov
dec
into
ret
mov
pusha
outsb
aas
stos
xchg
sbb
mov
push
insl
out
dec
daa
dec
test
lods
mov
and
add
cli
inc
push
test
jnp
mov
pop
insl
lcall
pop
dec
dec
mov
shrd
lods
out
sub
add
mov
and
mov
mov
test
or
mov
mov
mov
sti
sbb
lret
pop
inc
loop
mov
sahf
inc
or
leave
jbe
nop
outsl
insl
inc
sti
les
out
insl
pop
or
mov
jecxz
cmpsb
mov
lds
fstpt
test
popa
cmp
fisttpl
leave
jmp
mov
mov
mov
jmp
das
inc
nop
out
mov
cmpsl
jmp
mov
mov
clc
or
out
jb
mov
adc
clc
outsb
rcrl
movb
push
sub
inc
je
leave
xchg
in
add
inc
scas
adc
movsb
sti
shrl
pop
iret
mov
jmp
and
loope
jb
int3
loopne
inc
scas
push
sub
push
jmp
aaa
inc
push
test
add
or
outsl
stos
dec
mov
cli
fwait
daa
add
jl
int
leave
subl
mov
jo
mov
sub
outsl
jmp
leave
ret
in
clc
mov
jecxz
mov
jp
arpl
loopne
loop
mov
insl
scas
arpl
ret
xor
inc
jne
jbe
int3
ret
loope
or
pop
lea
nop
pand
lret
leave
and
arpl
jmp
mov
and
cmp
test
mov
sbb
sahf
jnp
ret
sbb
sbb
out
or
out
sub
and
sub
push
imul
stc
adc
dec
rcr
in
outsl
pop
inc
leave
lods
jecxz
fdivr
andl
insb
push
lods
dec
into
jbe
sti
mov
insl
inc
mov
add
jne
gs
lods
xorl
pop
test
mov
mov
pop
mov
mul
inc
sbb
cmp
add
fmul
clc
pop
push
sub
clc
lods
scas
in
or
iret
out
out
arpl
out
ret
add
add
arpl
jg
mov
mov
push
dec
push
mulb
pop
ljmp
test
push
jmp
jno
xor
mov
movsl
scas
pushl
push
pop
in
mov
iret
xor
mull
ljmp
stc
inc
push
sbb
jecxz
mov
push
lahf
sub
out
out
mov
gs
bound
jl
loope
inc
scas
push
push
jb
in
ret
lea
into
in
nop
dec
add
and
insl
push
adc
lahf
jmp
adc
test
cld
dec
jo
inc
add
pop
lods
outsw
cltd
movsl
int
lds
js
out
dec
into
sub
lahf
or
lret
push
mov
iret
push
scas
decb
sbb
cmp
cmp
xchg
mov
and
push
sbb
dec
xlat
and
sti
adc
arpl
and
pop
push
mov
sub
fwait
insl
add
stos
mov
sub
inc
mov
pop
xchg
pop
or
ret
in
mov
test
lret
popa
add
inc
xorl
mov
out
or
lods
lds
movsl
xchg
and
orl
cld
push
int3
loop
inc
or
jbe
xor
jmp
jecxz
mov
cmp
orb
xor
ret
lods
loope
and
or
je
add
jecxz
inc
adc
push
and
imul
shll
out
fs
int
mov
ret
sub
or
xchg
or
imul
cmpsl
shrb
rol
js
movsb
cs
bound
inc
daa
push
in
and
insl
xchg
stos
cmpsb
mov
and
das
mov
xor
adc
or
leave
insl
cmpl
outsb
das
movsb
pop
icebp
mov
imul
lods
jne
movsb
insl
stos
insl
cmp
pop
push
loope
mov
popa
outsb
sub
out
bound
mov
inc
pushf
inc
pop
mov
pop
or
ljmp
popa
popa
pop
push
popa
pop
mov
in
ret
and
addr16
int
roll
insb
mov
packsswb
pop
dec
cs
imul
dec
arpl
cld
mov
mov
int
lds
mov
imul
or
bound
jg
lods
inc
or
ret
xchg
clc
subl
adc
or
and
push
roll
mov
popa
in
test
loope
test
pop
pop
inc
jecxz
leave
push
paddsb
loop
or
pop
int
popl
dec
fistpll
sbb
xor
push
jmp
dec
imul
repz
sub
lods
mov
lods
leave
lret
scas
mov
cs
jno
cld
movsl
das
push
test
scas
out
ret
pop
push
cmp
repz
lret
cmc
mov
das
stos
ret
ljmp
fidivl
and
leave
mov
inc
or
daa
push
sbb
jo
int
cmp
and
sbb
outsb
cmpsl
jne
pop
outsb
popf
js
popa
mov
outsb
jb
inc
rorl
dec
dec
in
sub
leave
inc
mov
xchg
push
sub
inc
leave
mov
jmp
insl
subb
loopne
sbb
cs
imul
and
push
xor
pop
lret
sub
xor
ljmp
lahf
fisttpl
leave
xchg
sub
cmp
adc
bound
ret
jbe
xchg
mov
dec
test
push
nop
lods
outsl
mov
push
and
jl
or
int
outsl
neg
cmp
sub
mov
imul
mov
popa
loope
dec
ss
ret
and
cmp
jns
dec
lds
cli
mov
sub
scas
xor
sbb
test
and
xchg
hlt
ret
mov
cmp
sub
add
jmp
mov
mov
enter
dec
mov
nop
jns
out
out
sub
loope
jecxz
arpl
mov
and
lods
push
leave
xchg
push
sub
push
subl
bound
outsb
arpl
daa
out
leave
inc
filds
arpl
pop
mov
outsb
mov
cmp
loop
in
xlat
xchg
or
sbb
int3
scas
sub
dec
and
dec
xchg
out
das
push
pop
ljmp
int
push
stc
lahf
pop
lret
sub
mov
pop
push
push
fnstsw
lods
mov
inc
incl
aad
ret
out
mov
xor
add
orl
sub
lods
lret
bound
js
insb
dec
fwait
jno
out
outsb
in
jmp
mov
pop
jmp
movsl
or
mov
pop
test
jmp
mov
lods
call
jmp
ljmp
and
mov
add
sbb
dec
dec
xchg
jb
mov
sahf
xchg
rol
xor
sbb
insl
jne
fsubrl
popa
mov
dec
mov
cmp
cltd
call
popf
out
or
addr16
or
dec
jp
jno
jbe
jb
jne
arpl
pusha
dec
ret
cmp
jb
pop
cld
stos
sub
and
insl
scas
in
xlat
cmp
nop
mov
adc
iret
popa
or
lods
pop
mov
push
mov
stos
loopne
adc
or
lret
ret
popl
push
mov
xorl
scas
or
sti
arpl
je
stos
ror
dec
fisubrl
lds
movsl
das
call
inc
out
shr
pop
cld
jno
insl
lods
out
outsl
xchg
xchg
fisttpl
mov
or
cmp
outsl
xchg
out
cmpsb
jle
xlat
push
inc
cld
xchg
inc
das
imul
fdivs
out
xchg
ljmp
pop
and
xorl
ds
subb
cltd
imul
xchg
push
int3
dec
and
xor
adc
xor
push
jo
inc
mov
mov
add
jmp
sub
into
adc
scas
and
and
sub
jmp
sub
xchg
and
mov
shrl
mov
stos
sub
or
sbb
out
out
clc
shll
lret
out
ret
insl
scas
mov
jecxz
jo
sbbl
lea
jo
jmp
insl
jno
mov
ret
out
repz
fidivl
mov
ret
in
pop
movsb
inc
lods
test
leave
into
jbe
js
sub
jbe
inc
mov
mov
or
sub
loop
mov
or
sbb
cmpsb
nop
scas
and
in
dec
mov
stos
popa
je
punpckhwd
jo
andl
stos
nop
jb
and
mov
xchg
inc
jmp
aad
in
inc
jmp
out
cmp
inc
scas
fwait
lcall
ret
sbbb
mov
lea
add
movsb
loop
fadds
repnz
lods
jle
das
lds
push
dec
pushl
jo
test
mov
imul
mov
ret
in
cmpsb
loop
inc
mov
jne
mov
pop
jb
movsb
arpl
fmul
jg
imul
loope
mov
xchg
jl
ret
cs
dec
lea
push
int3
dec
scas
imul
mov
add
dec
arpl
lock
scas
fwait
dec
sbb
into
nop
loope
cs
repnz
sbbl
mov
mov
iret
imul
dec
filds
or
ljmp
ss
or
ret
sbb
nop
scas
mov
add
lods
mov
adc
into
sub
addb
ret
shl
dec
push
popa
pop
jmp
out
call
out
push
cmp
in
lea
loopne
stos
fisttpll
stc
pushf
sub
push
dec
sbb
repnz
rcll
repnz
jb
and
in
jae
inc
mov
and
and
cmp
push
push
lods
aaa
jle
mov
mov
xor
inc
mov
sub
pop
inc
iret
dec
or
lahf
leave
jo
add
xchg
cmp
xchg
ja
dec
jbe
mov
jns
dec
pop
stos
cmp
andb
scas
cmp
cmp
ljmp
jbe
mov
mov
sbb
sub
add
inc
daa
inc
sub
loopne
loopne
or
xchg
pop
cmpsb
mov
fbld
add
loope
stos
or
pop
or
mov
out
loope
jmp
out
nop
adc
or
inc
data16
and
iret
dec
femms
repnz
sti
jnp
add
inc
outsb
dec
lret
push
push
fs
arpl
leave
push
sub
inc
orb
cmp
out
mov
mov
lahf
loope
push
mov
nop
jmp
mov
push
inc
xchg
mov
ret
nop
xchg
cmpsl
nop
push
test
outsl
sbb
xchg
jecxz
lret
test
mov
lret
test
decl
stos
dec
cmp
imul
add
outsl
fldl
stc
jp
sbb
shll
cmp
fsubs
out
fnstsw
xor
inc
lock
test
inc
mov
iret
ljmp
lock
xchg
aam
jge
into
and
in
fucomi
lret
or
ljmp
test
stos
cmp
aas
push
mov
lcall
xchg
fildll
fisttpll
xlat
or
sbb
mov
mov
jmp
dec
cmp
lock
pop
stos
pop
insl
cmp
cmpsb
test
lods
xor
daa
inc
and
test
jbe
in
ror
mov
loopne
push
sub
sub
dec
or
dec
dec
cltd
movsb
push
shlb
adc
xor
xor
mov
jmp
leave
out
test
xchg
cmpsb
pop
addr16
xchg
inc
sbb
or
enter
push
cli
data16
or
imul
out
in
mov
popa
mov
or
loope
mov
sub
cmp
inc
and
sub
add
inc
adc
ret
ss
call
shll
mov
xchg
dec
test
test
hlt
fsubs
mov
jecxz
mov
jge
rep
out
outsb
stos
fs
lods
add
cs
cmp
jmp
lret
mov
arpl
add
mov
test
shrb
jns
cmpsb
iret
adc
jbe
jne
cld
lods
add
or
jge
jo
aaa
mov
stos
leave
faddl
mov
sub
imul
aas
psubb
sbbl
add
or
sub
push
and
inc
xor
xor
sub
mov
adc
mov
or
int
xor
sub
andl
add
lods
or
mov
jmp
pushf
sub
aad
sub
pop
mov
fcmovb
jo
sub
jns
imul
mov
or
add
dec
iret
cmpsb
inc
dec
or
sub
insl
ret
shrb
and
mov
add
or
in
aas
jae
mov
lods
pop
out
ljmp
mov
jnp
arpl
bound
test
sub
and
mov
pop
ret
add
retw
dec
leave
mov
jmp
dec
ret
pushf
in
sub
jecxz
sub
jl
loope
mov
in
movsl
dec
ret
in
push
jne
jg
pop
mov
pop
and
mov
test
push
mov
cli
push
cld
out
and
or
xchg
and
mov
push
or
sub
pop
lea
ret
inc
lods
addl
inc
dec
aam
xchg
insb
xchg
mov
ret
ret
sub
rorb
scas
dec
or
push
aas
test
fstpt
in
add
testl
inc
pop
inc
mov
cltd
sub
rol
lds
in
or
cs
leave
mov
sub
or
outsb
das
cmpl
fldt
mov
and
inc
jmp
int3
dec
sub
popa
or
pusha
das
add
xor
in
stc
xchg
leave
mov
imul
or
sub
movsl
dec
and
xchg
lds
int
daa
cmp
push
push
loope
ret
je
or
mov
jb
sbb
out
outsl
mov
sub
cli
or
dec
sti
insb
loope
xchg
pushf
and
xchg
lds
push
cwtl
out
addr16
lcall
scas
in
loope
jno
scas
loop
test
daa
imul
test
inc
int
js
popa
jbe
cmp
outsb
mov
mov
pop
jmp
lret
adc
dec
mov
mov
xor
sbb
xor
sub
cmp
and
lea
dec
lods
fwait
mov
in
das
jmp
or
sub
cmp
ja
inc
into
iret
cmp
mov
fwait
inc
ror
mov
in
cmp
jecxz
scas
add
out
arpl
sub
in
mov
lret
loope
not
fwait
in
leave
jae
xchg
insl
push
cmpsl
nop
outsl
out
stos
adc
xor
or
test
cs
add
lock
or
movsb
into
test
out
dec
mov
arpl
jg
xor
mov
dec
dec
shr
es
mov
jo
xorl
or
adc
in
lods
or
arpl
mov
adc
ret
xchg
test
xlat
adc
mov
jns
push
cs
repnz
jge
fs
mov
out
stos
pop
push
imul
es
aad
nop
int
dec
mov
dec
jne
mov
jo
lods
iret
and
xchg
dec
in
push
dec
sahf
sub
shll
movsb
insl
lret
bnd
inc
dec
rorb
or
lods
mov
lret
sub
pop
mov
mov
cmp
ds
xchg
jnp
out
insl
mov
stos
xchg
movsb
out
inc
jge
jb
pop
mov
test
dec
js
or
push
xor
dec
cs
ret
outsl
test
xchg
add
scas
sbb
lock
lret
mov
dec
jg
scas
mov
test
sarl
arpl
nop
bound
cmp
les
roll
xchg
or
addr16
lods
cmpl
leave
push
outsb
or
ljmp
mov
frstor
jno
or
bound
outsb
loope
dec
jmp
subb
out
mov
subl
adcl
nop
push
cmpl
dec
insl
sub
dec
leave
jbe
mov
jo
sub
in
mov
and
sub
in
out
add
jecxz
xchg
lret
negl
lods
jl
out
dec
jmp
cld
es
loope
out
test
dec
add
xchg
xor
popa
mov
xchg
out
stc
scas
insl
add
push
jp
pop
sbb
out
mov
es
roll
push
lret
inc
insl
fstl
lds
das
lcall
movsl
pop
arpl
orb
out
sub
mov
mov
push
hlt
filds
and
mov
dec
push
add
cmc
sub
fucomip
and
movsl
or
cmc
outsl
lret
adc
cmpsl
sbb
insl
mov
inc
insl
fldt
and
imul
repnz
outsb
jg
cmc
bound
scas
xor
and
sub
lods
loope
or
cmp
insb
les
mov
addl
push
scas
jg
in
ret
jno
dec
ljmp
jb
mov
and
outsb
lret
inc
add
insl
test
insl
jne
popl
dec
adc
fistl
sub
in
dec
mov
jg
movsl
add
jg
out
jge
jmp
sub
outsb
test
test
nop
mov
testl
rorl
nop
test
sbb
out
iret
mov
ret
mov
jp
xor
leave
rorl
lods
out
lea
jecxz
pop
dec
and
push
arpl
test
xchg
jne
push
bswap
pushf
loop
sub
sub
and
add
sbb
mov
leave
iret
orl
lods
xor
mov
add
leave
jge
fisttpl
dec
das
lea
dec
jmp
test
out
jo
cmpl
nop
cmc
roll
mov
shlb
out
or
mov
mov
lds
mov
sarl
ret
ds
je
add
lea
jae
fwait
mov
push
jnp
ljmp
xor
out
bound
pusha
clc
into
lea
jmp
jb
outsl
cltd
adc
arpl
sub
mov
jb
loop
lods
fldenv
mov
bswap
orb
cmp
xchg
mov
push
fwait
add
push
add
sub
dec
dec
dec
popa
daa
push
js
jmp
jmp
lods
jge
xchg
outsb
or
dec
and
ret
shll
inc
jne
jbe
lock
stos
lods
test
dec
xchg
out
cmp
jmp
sarl
jb
sub
dec
mov
jecxz
jle
stc
mov
xorl
jbe
add
add
ljmp
jo
loope
cmp
mov
jmp
inc
xchg
push
xor
sub
lahf
cwtl
ljmp
mov
mov
jl
comiss
test
stc
addr16
imul
mov
iret
daa
xlat
gs
out
pmaddwd
lret
pop
inc
leave
mov
out
jl
inc
ret
mov
insb
pusha
push
lods
jo
sbb
iret
ror
jnp
dec
dec
or
orl
je
scas
mov
iret
mov
push
xchg
lods
andl
xchg
jp
imul
mov
shll
lahf
stos
push
imul
shll
add
outsl
hlt
outsb
das
push
jmp
insb
pushf
mov
nop
xchg
fldcw
dec
into
es
sub
stos
aaa
pop
test
out
bound
int3
fldt
mov
mov
add
popa
je
loope,pn
sub
ja
cmp
jb
pop
xor
lock
out
inc
jl
mov
imul
jmp
sub
lahf
dec
dec
cltd
dec
inc
std
pop
mov
scas
sbb
and
insl
push
dec
sub
in
push
lea
sub
popa
fdivl
add
dec
push
cmpsl
or
or
mov
rorl
inc
sub
mov
mov
out
mull
daa
dec
dec
int
jo
ret
repnz
cmp
test
into
pusha
fildll
fisttpl
mov
sub
or
mov
push
ljmp
subl
movsl
test
cmc
sub
lret
mov
jecxz
negb
mov
mov
bound
loop
or
mov
aaa
and
adcl
clc
mov
and
lds
arpl
and
sub
inc
fs
dec
das
mov
not
and
or
frstor
dec
jne
lock
iret
jmp
nop
jbe
dec
jecxz
or
jbe
dec
and
xor
dec
mov
gs
jb
pop
aaa
ret
mov
insl
into
sti
jbe
jmp
adc
test
ss
cmpsl
pop
nop
mov
inc
cmpsb
into
dec
sub
push
scas
loop
test
mov
or
sub
lds
adcl
insb
sub
in
ret
xor
arpl
jns
push
lods
jns
scas
xor
stos
bound
popa
inc
sub
pop
xchg
or
add
into
test
push
dec
pop
jo
sub
out
lret
cmovns
xor
les
xor
push
xchg
leave
outsb
xchg
push
mov
adc
or
mov
cmp
test
test
imul
adc
stos
or
in
lret
push
subl
mov
or
xchg
test
lret
dec
xor
add
sub
fnstcw
push
cs
pop
jbe
loope
jbe
out
dec
daa
lds
out
jnp
in
stos
mov
push
mov
shl
scas
int3
mov
jns
jbe
sub
lret
adc
sub
sbb
outsl
das
ljmp
mov
xchg
pop
stos
dec
sahf
cmp
mov
dec
mov
lret
mov
mov
loope
dec
leave
or
int3
out
es
jne
sub
and
xor
daa
nop
test
inc
std
or
das
cld
mov
push
or
into
ljmp
out
and
sbbl
shlb
mov
jg
scas
leave
arpl
scas
mov
ds
xchg
cli
shrl
mov
scas
push
xor
or
mov
push
push
sbb
mov
jno
push
xchg
das
dec
or
sarl
and
out
jb
cld
in
out
leave
or
fisttpl
adc
fwait
jne
sub
insl
xchg
lods
cs
sbb
jne
mov
insb
ljmp
inc
add
jo
lods
inc
data16
insb
mov
push
pop
mov
push
stc
adcl
inc
xchg
jg
ret
or
push
leave
test
cmp
enter
or
push
mov
lods
inc
loop
lds
mov
dec
and
pop
cmp
jmp
mov
insl
mov
frstor
jne
adc
add
arpl
or
test
jbe
jb
mov
fbld
out
xor
inc
or
cmp
orb
sub
cs
ss
orb
outsl
pmaxsw
cmp
pop
loope
mov
mov
scas
roll
xchg
scas
iret
push
mov
mov
pop
dec
pop
lret
arpl
pusha
xchg
call
push
imul
inc
lods
test
or
jecxz
ret
mov
loope
fs
jmp
dec
imul
jbe
jne
xchg
xor
jmp
bound
fs
jb
jbe
in
lods
imul
out
mov
dec
sub
jmp
xchg
xor
in
push
inc
scas
and
dec
frstor
xchg
jmp
insl
and
or
popf
ja
lret
push
dec
or
jbe
jne
sti
sub
dec
imul
xchg
cwtl
fs
dec
or
scas
cld
loope
andl
lods
outsb
in
mov
inc
ljmp
negb
fisttpll
ja
xchg
push
outsl
subl
inc
push
jbe
out
add
mov
jmp
mov
lods
and
ret
sub
roll
popa
mov
movl
xorb
and
xchg
mov
dec
mov
adc
push
fcmovnbe
test
push
sub
inc
lods
scas
or
pusha
ret
in
mov
jnp
sub
inc
pop
lret
imul
jp
or
or
out
sub
jnp
popa
mov
inc
sbb
or
stos
jns
test
std
jmp
and
jns
mov
lret
xchg
out
imul
les
lods
cmpl
jge
push
dec
jmp
add
stos
adc
and
jg
xorl
xchg
jae
leave
dec
jns
js
mov
push
les
and
fs
push
cltd
mov
add
jecxz
fwait
call
jcxz
add
das
add
xchg
and
fs
mov
in
fwait
push
wbinvd
shll
bound
subb
daa
shl
xchg
add
or
jne
insb
jbe
dec
insl
mov
fbstp
cmp
shr
fwait
outsl
dec
out
push
bound
in
ret
xorl
mov
outsb
dec
sti
mov
je
iret
and
ljmp
arpl
insl
mov
je
xchg
outsb
das
jbe
aas
mov
cmp
mov
or
cmp
dec
lret
mov
das
sub
mov
aad
loope
pop
dec
sub
stos
sub
push
jmp
out
cmp
lahf
ret
into
pop
jp
or
push
orl
xchg
xor
out
pop
loop
and
popa
dec
cli
lea
pop
xor
cltd
push
or
arpl
out
sub
jo
ljmp
xchg
in
lss
test
xchg
or
filds
pop
and
stos
out
adc
adcl
jmp
push
mov
and
lods
add
mov
scas
hlt
imul
jg
jbe
fbld
scas
outsb
adcl
dec
fs
lods
out
lsl
stos
mov
jae
hlt
cmp
inc
in
insl
sub
dec
dec
mov
mov
or
mov
arpl
rep
adc
jns
les
xchg
inc
gs
outsl
mov
mov
loope
imul
xlat
xchg
pusha
int3
mov
mov
scas
sbb
cmp
mov
dec
push
push
incl
repnz
lods
in
insl
inc
loope
and
lea
mov
jp
mov
mov
mov
cmp
inc
inc
and
paddd
push
lock
sub
in
push
push
loope
sub
lret
dec
cmp
outsb
dec
sub
out
arpl
sbb
lret
xchg
shll
andl
repnz
mov
adc
dec
iret
push
cs
es
dec
cs
add
outsl
xchg
les
lcall
or
jb
jne
sub
lret
popa
clc
sub
dec
fucomi
pxor
lahf
cmp
leave
jbe
scas
sub
jno
lock
pop
leave
dec
inc
and
movsl
es
mov
shll
cs
mov
out
lods
arpl
out
in
test
into
insb
dec
or
in
sbb
inc
add
outsb
sub
cmpsb
das
iret
push
jno
fnstenv
mov
and
dec
jl
mov
mov
cmp
jg
imul
xlat
imul
into
hlt
out
mov
ror
inc
jno
lods
and
lret
test
into
insl
hlt
icebp
dec
inc
dec
outsl
mov
lds
sub
pop
mov
sub
nop
in
jecxz
ret
std
insl
shlb
test
or
addr16
or
jmp
dec
mov
ret
add
imul
mov
push
add
mov
cmp
in
insb
inc
jmp
lahf
pop
jnp
insl
outsl
or
scas
cmp
push
xchg
dec
ret
js
daa
outsb
inc
mov
lds
mov
sub
sub
clc
jb
mov
push
sub
bound
shrl
and
mov
andl
inc
dec
ret
sub
dec
mov
repz
repz
test
or
insl
imulb
adc
cs
popf
sub
cmp
into
inc
in
mov
iret
cli
mov
bound
dec
js
scas
jg
adc
call
sub
rorb
jp
loope
out
or
out
adc
mov
mov
outsl
jb
fstpl
or
dec
xor
and
mov
push
loope,pn
shll
cmc
push
mov
test
mov
repnz
cld
push
add
lods
jno
lret
xchg
push
push
setbe
das
or
mov
push
xor
jae
rorb
push
or
inc
ss
lods
mov
divl
mov
jo
dec
ret
or
push
sub
xchg
fwait
ret
mov
inc
or
sub
jmp
and
test
xchg
bound
decb
std
jo
mov
jmp
das
out
mov
shll
adc
add
stos
pop
dec
jmp
mov
das
je
scas
scas
inc
outsl
dec
inc
add
add
call
push
lret
xor
lods
mov
leave
ret
mov
xchg
lret
xchg
sub
ljmp
stos
loope
test
out
mov
mov
leave
nop
jne
pop
stos
stos
shrl
std
mov
dec
lods
iret
mov
test
in
mov
das
xchg
and
shlb
or
ljmp
cmp
leave
repz
ret
jns
xor
imul
iret
dec
mov
and
xchg
sti
adc
mov
lock
or
lods
call
mov
loop
orl
into
test
int
ja
stos
jo
dec
lods
dec
or
and
es
inc
mov
add
int3
repz
xor
cmp
insl
loope
push
sub
cmp
leave
mov
es
shl
fsubr
pushf
mov
insb
fsubrs
ror
jb
sbb
lret
ror
je
in
dec
arpl
push
lds
lretw
mov
shll
jle
scas
mov
lret
lcall
and
outsl
inc
pop
mov
push
leave
jno
mov
pop
dec
push
sbb
ret
int
je
or
xlat
pop
push
ret
lock
and
push
out
decb
decl
out
sub
cmp
cld
filds
sub
es
lods
sbb
jns
popa
bound
cvtpi2ps
std
mov
stos
gs
mov
inc
xor
cmpsb
movsb
mov
lds
out
push
outsb
ljmp
scas
dec
pusha
and
ljmp
cs
add
or
or
sub
outsb
and
bound
dec
int
dec
jl
andl
out
outsl
jp
fistpll
bound
jle
jecxz
inc
repnz
lods
sub
dec
int
dec
popa
sub
and
ja
cmp
pop
roll
nop
push
arpl
jne
jbe
jne
dec
into
subl
jmp
jnp
sub
sahf
fwait
pop
fmulp
jb
orl
mov
in
dec
inc
dec
xchg
lods
test
cmpsb
outsl
mov
jp
mov
ja
ret
add
out
sub
iret
add
or
jmp
rorl
jns
mov
cmp
xchg
push
bound
push
jge
xlat
fstpt
dec
mov
mov
jnp
inc
or
jle
jb
jp
filds
mov
outsb
inc
inc
dec
movsl
cmp
ret
arpl
pop
fucomi
and
cli
nop
outsl
and
scas
test
xor
and
jmp
mov
mov
sub
leave
icebp
insl
scas
xor
mov
stos
bound
xchg
iret
insb
xor
outsl
cs
mov
fstpt
mov
out
clc
lds
into
jecxz
outsb
orl
jnp
cs
scas
ret
iret
scas
xor
jne
test
jmpw
and
stos
xchg
ds
addl
cld
imul
lea
test
mov
dec
sub
mov
scas
arpl
outsl
outsb
clc
loop
push
sti
ret
sub
fs
clc
add
mov
daa
out
ret
andl
int
lds
sub
bound
imul
jmp
mov
es
lea
lods
bound
dec
lock
inc
out
push
leave
lds
hlt
mov
popa
or
lods
sub
mov
add
xor
int3
scas
outsb
rcrl
sub
outsb
stos
or
into
in
and
mov
leave
in
lea
gs
outsl
outsb
imul
sub
std
popa
stos
bound
imul
test
fidivl
mov
ret
push
lea
xchg
test
nop
push
adc
loopne
fimull
jbe
mov
leave
xorl
jl
mov
scas
jecxz
dec
jb
pop
bound
out
and
mov
dec
in
mov
adc
mov
mov
aaa
xor
imul
pop
dec
movsl
cs
dec
in
iret
insl
dec
int3
js
or
jo
outsl
push
inc
sub
mov
sbb
out
mov
sub
mov
std
mov
mov
xchg
daa
jnp
inc
arpl
outsb
fidivrl
imul
mov
sub
or
mov
or
cmp
loope
dec
or
mov
lgs
or
jl
jecxz
mov
leave
test
arpl
ljmp
cmpl
sbb
vshufps
inc
jp
int
outsl
imul
out
repz
sub
sbb
data16
mov
xchg
and
push
pop
iret
mov
imul
lds
mov
mov
and
sub
pop
pop
cmp
inc
out
or
or
and
jbe
sbb
cmovge
loope
mov
movsb
mov
dec
add
jae
movsb
cmp
pop
push
stos
jno
loop
lods
dec
call
out
aaa
jecxz
in
popf
daa
mov
scas
movsl
and
out
lret
iret
insl
int3
stos
add
ret
into
push
insb
lods
cmp
int
and
xchg
sbb
pop
cld
jb
sub
stc
and
mov
jb
inc
dec
test
jb
cltd
mov
cmp
lods
andl
cmp
int
dec
jns
lock
dec
popa
cs
scas
loopne
lock
cs
loope
leave
xsaveopt
pop
mov
push
icebp
repz
fimull
lea
subl
jb
jmp
std
mov
popa
sub
std
add
dec
mov
scas
inc
mov
outsb
sub
bound
mov
mov
nop
push
ret
dec
mov
push
dec
lds
push
stos
leave
push
in
int
jmp
mov
or
out
das
xor
add
in
or
sub
xchg
mov
fs
dec
out
insl
sbb
das
into
mov
sub
scas
pop
jo
push
jg
or
cltd
push
outsb
leave
inc
cmp
orl
pop
jecxz
test
scas
loope
fs
add
sbb
mov
ret
mov
pusha
dec
iret
or
xchg
inc
and
sub
cwtl
popa
dec
jo
nop
dec
sub
cmp
shll
test
jecxz
xor
mov
das
bound
jl
dec
or
add
outsl
outsb
jno
sub
ret
jb
out
lea
mov
iret
push
xor
repnz
ljmp
jb
push
bound
sub
sub
dec
or
or
adc
iret
jne
jnp
jmp
dec
lahf
punpckhdq
ljmp
out
lret
lock
add
mov
xchg
mov
and
psraw
sbb
xchg
cmp
movsl
insl
xchg
mov
scas
pushf
loope
je
lret
lods
jns
in
stos
cmp
jns
sub
in
paddb
mov
mov
jae
cmpw
test
in
or
in
mov
mov
cmp
dec
dec
xchg
insb
inc
into
lods
mov
push
insl
cs
mov
je
test
jp
jecxz
mov
sub
imul
push
scas
in
mov
mov
fs
inc
addl
inc
shll
lods
jae
nop
in
jle
outsb
mov
mov
or
fldcw
push
jecxz
test
jb
js
push
andl
jp,pn
mov
push
lods
pop
mov
loope
mov
or
das
jmp
out
stos
out
ret
mov
aas
mov
icebp
mov
lret
sbb
mov
or
inc
inc
or
cmc
xchg
sbb
xor
in
cli
ret
ljmp
sub
rorl
adc
push
movsl
mov
inc
das
push
and
xchg
fwait
sbb
lods
into
sub
stos
pusha
or
cmp
or
add
jmp
out
push
js
ljmp
outsb
in
arpl
fldz
cltd
xchg
out
push
test
inc
sbb
mov
stos
push
cli
outsl
xor
or
js
push
mov
mov
int
or
adc
inc
scas
dec
or
jmp
inc
cmp
fisubs
mov
fisttps
lret
in
into
testb
lods
ja
jns
add
jne
jmp
push
adc
mov
clc
xchg
enter
dec
es
outsl
push
fnstsw
out
mov
fwait
test
push
popa
fs
into
int
cmp
lods
mov
outsb
add
ret
arpl
mov
push
test
lds
ret
mov
fimull
pop
mov
inc
cmpl
and
sub
ror
mov
mov
dec
mov
addb
in
dec
subl
push
das
mov
call
test
push
das
inc
leave
add
and
test
xor
lret
or
dec
and
lret
jnp
ljmp
dec
dec
xorl
sub
xor
in
dec
out
out
jecxz
xchg
bound
push
nop
jae
mov
decl
adc
test
and
leave
into
mov
faddl
inc
dec
jp
dec
cmp
addr16
lea
in
scas
add
sub
add
pop
push
mov
push
arpl
out
and
jns
xchg
clc
shll
pop
inc
jnp
jecxz
dec
lahf
stos
outsl
and
lock
add
jmp
insl
and
sub
fscale
inc
push
lahf
and
scas
lret
sub
mov
int3
arpl
xchg
or
lea
mov
psubw
bound
mov
or
sbb
sarb
mov
pop
jg
add
mov
fbstp
shrb
inc
add
jge
nop
scas
adc
fisubrl
cmp
or
loop
and
aaa
loope
mov
mov
mov
call
lods
leave
or
scas
das
ss
jo
bound
lea
add
andb
int
inc
out
inc
xorl
cmpl
cmpw
test
test
arpl
sub
dec
aas
cmp
mov
sub
movsl
int3
cli
mov
xor
iret
xchg
in
out
mov
cmp
mov
cs
inc
push
scas
cmpsl
xchg
jns
insl
sub
bound
ljmp
insl
sub
iret
shll
jecxz
xor
mov
je
loope
incl
testl
push
test
pop
andl
dec
outsb
sub
jp
xor
sti
outsb
dec
fwait
imul
mov
add
in
scas
movsl
ret
imul
or
int
xor
ja
sub
mov
dec
arpl
out
adc
jbe
sbb
pop
cmp
mov
cmp
cmpl
jbe
dec
dec
jecxz
or
arpl
xor
test
into
hlt
xchg
inc
push
jge
out
push
sub
mov
fwait
test
mov
dec
leave
iret
dec
fisubl
inc
mov
cs
mov
cld
pop
dec
mov
push
or
jnp
or
scas
mov
mov
or
iret
fadds
jno
lea
add
jge
sub
dec
push
mov
mov
pop
lahf
push
add
push
xchg
add
mov
add
jo
mov
out
popa
push
jle
add
cmpl
lock
mov
add
nop
in
jb
jne
mov
leave
insl
sub
int
jecxz
inc
in
xchg
dec
test
lods
cmp
out
popa
xor
int
and
stos
aad
lret
insb
and
dec
test
insl
or
mov
jbe
mov
pop
mov
pop
mov
dec
into
inc
gs
dec
fwait
mov
mov
push
mov
jg
and
pusha
icebp
ds
pop
dec
jbe
lcall
out
and
shrl
mov
iret
stc
mov
pop
inc
nop
je
push
or
daa
dec
xor
ret
popa
mov
mov
push
inc
out
leave
bswap
inc
xor
sub
ror
xor
or
sub
in
in
jae
loop
andb
push
dec
in
jle
out
mov
lret
movsl
add
and
dec
out
mov
sub
lret
add
push
shlb
js
es
dec
test
lods
iret
out
xchg
scas
or
mov
xchg
jnp
lds
dec
andl
pop
popl
sbb
test
add
bound
out
dec
scas
inc
jle
out
iret
outsb
or
out
mov
subl
or
mov
les
out
sub
dec
cli
cmp
outsl
fnstenv
rorb
hlt
insb
loop
jb
sub
lret
push
sarl
mov
ret
push
push
lods
mov
and
mov
or
cmp
mov
insl
jno
loope
jecxz
push
lock
nop
lret
or
push
and
mov
push
lret
outsb
dec
insl
in
mov
loope
push
or
jmp
mov
mov
scas
mov
mov
stos
sub
imul
mov
loope
push
jo
arpl
aaa
push
cmpsb
out
lahf
inc
das
iret
pop
outsb
fisttpll
jl
sbb
push
imul
push
jl
hlt
or
insl
arpl
movsl
orl
imul
or
or
pop
pop
inc
sub
mov
addl
lret
ss
dec
push
daa
mov
lret
mov
fisttpl
xor
sub
jb
and
dec
hlt
mov
mov
inc
and
out
clc
and
and
mov
mov
outsb
daa
bound
sub
loop
lds
in
lea
sub
js
sub
sbb
aas
dec
and
fiadds
mov
ror
int
lods
inc
add
imul
mov
roll
movb
fs
stos
nop
mov
lods
mov
int
mov
addl
jo
or
cs
ljmp
mov
cmp
leave
add
out
or
outsl
or
jl
popa
into
lods
orl
lcall
test
lods
insl
sahf
cmp
bound
scas
add
or
inc
mov
xchg
out
dec
sahf
arpl
hlt
or
xchg
loop
ret
cmp
jnp
imul
push
nop
inc
mov
or
loope
test
inc
xchg
bound
xchg
or
imul
pop
es
in
mov
adc
dec
insl
sub
mov
popa
scas
or
mov
stc
add
test
xor
aad
lret
mov
out
mov
insb
mov
mov
jecxz
lds
out
arpl
pop
sub
ljmp
out
into
add
jno
and
scas
inc
sub
mov
mov
shlb
dec
sub
cs
inc
addl
or
neg
dec
outsl
bound
sbb
push
call
sub
lea
cli
into
out
out
jb
sub
pushf
add
outsl
enter
mov
stc
dec
dec
sub
jne
cmp
mov
mov
dec
outsb
bound
add
vpacksswb
jae
ss
pop
dec
ljmp
sbb
jge
dec
mov
and
insl
shrl
lahf
test
outsb
out
sbb
stc
aam
shrb
outsb
lods
out
nop
or
ret
in
pop
jmp
mov
mov
inc
outsl
lods
shll
movsb
sbb
ljmp
cmpsb
and
lret
std
int
mov
lods
insb
jle
push
popa
jb
in
outsl
pusha
jp
jecxz
cmp
imul
xchg
shrl
in
loop
stos
lcall
out
std
push
loop
push
cmovne
imul
add
pop
cmp
adc
stc
inc
jo
sub
push
jecxz
push
dec
scas
cltd
mov
and
cli
push
xor
dec
xchg
mov
and
mov
enter
out
push
in
lods
dec
cmovae
iret
and
insl
sbb
adc
cli
jo
outsb
movsb
or
scas
lods
push
movb
loope
mov
loope
mov
and
les
xor
andb
rcll
scas
std
mov
fldt
daa
insl
add
in
std
inc
into
jle
mov
roll
xchg
sub
add
pop
mov
lock
jge
jmp
je
ljmp
ds
mov
push
mov
dec
inc
shll
ret
mov
andl
lea
in
sti
and
repz
call
and
clc
shll
test
and
jecxz
jo
dec
arpl
jmp
int
insb
add
sub
out
insl
data16
jecxz
stos
js
fs
mov
lock
dec
movsl
dec
in
arpl
xchg
mov
xor
jmp
jo
ret
scas
jno
pop
push
jecxz
dec
or
sahf
cmp
int
out
push
movsb
add
insb
shrb
pop
sbbl
mov
and
popa
jmp
ljmp
xor
arpl
add
outsl
test
test
adc
stos
pop
sti
dec
leave
or
and
add
push
and
dec
lock
or
out
fstpl
push
lds
stos
lods
dec
es
push
scas
inc
jnp
mov
xchg
in
insl
das
into
leave
jecxz
or
or
imul
fsubrl
jmp
out
adc
fs
push
in
xor
push
dec
jbe
jbe
add
inc
std
aaa
inc
or
jne
inc
outsb
ljmp
adc
add
fwait
sub
fwait
push
sub
dec
sub
test
jmp
mov
ret
in
dec
add
jae
and
call
out
jno
movsl
or
jmp
and
in
lcall
mov
ds
insl
stos
mov
xchg
fs
jmp
shll
sahf
dec
lods
out
imul
pusha
ss
in
jns
inc
nop
and
or
out
lret
lahf
movsb
je
mov
dec
cs
sahf
xchg
fisttps
xorl
ret
cmp
insl
dec
push
in
jne
in
or
pop
loope
mov
inc
bound
pop
bound
scas
imul
outsl
stos
ja
and
sbb
arpl
aas
imul
jg
scas
dec
inc
mov
sub
test
mov
jp
fnstenv
xor
adc
mov
jl
mov
rorl
cmp
clc
outsb
scas
jmp
insl
mov
jno
outsb
clc
nop
jbe
jb
mov
sub
mov
pop
popf
insl
bound
ljmp
in
subb
int
and
dec
sub
and
sbb
insb
jmp
or
lea
insl
and
xor
jb
xchg
xchg
sub
xchg
mov
pop
push
out
lds
push
daa
out
enter
test
jg
jbe
mov
sti
andl
jecxz
push
xchg
add
and
mov
jo
shl
jne
fwait
jmp
lea
xchg
inc
mov
ret
cmp
mov
out
and
cmp
or
or
jle
xchg
outsb
cmc
jne
lea
movsl
popa
dec
jl
mov
dec
mov
arpl
inc
inc
sub
loop
loop
addr16
dec
mov
mov
aam
push
jp
or
stos
stos
jp
ja
into
push
push
iret
scas
leave
bound
or
mov
daa
ljmp
lds
sbb
subb
lea
clc
test
shl
repz
jl
andl
fstpl
ja
arpl
inc
dec
inc
popa
dec
das
jmp
call
push
sbb
xchg
fs
lret
mov
inc
out
add
xchg
cs
push
call
outsb
mov
nop
push
insb
sub
mov
mov
shr
pop
mov
scas
addl
stc
out
pop
pop
clc
jp
jbe
jne
cmpsb
add
js,pn
sub
andl
fmull
int
test
mov
jp
inc
test
outsl
inc
jmp
stos
movsb
insb
jecxz,pt
mov
lret
jle
sbb
jg
in
cmp
adcl
outsl
mov
mov
out
push
jo
or
push
insl
scas
lahf
or
rorl
jbe
pushf
into
popa
mov
mov
push
int
inc
push
xor
or
in
dec
clc
xor
mov
dec
scas
js
and
push
nop
mov
mov
sbb
mov
or
add
or
push
popa
cli
out
test
lret
mov
pop
je
rorl
int
insl
arpl
sub
jno
mov
std
inc
inc
add
jmp
lret
jns
imul
cmp
sarl
daa
dec
mov
add
adc
lret
pop
out
jno
sub
test
imul
inc
out
cs
jo
or
mov
loop
mov
test
iret
xchg
je
in
push
mov
mov
or
pop
mov
imul
dec
mov
fwait
outsl
add
push
or
shll
insl
iret
xchg
xchg
mov
mov
add
jecxz
jb
sbb
and
xor
scas
scas
stos
jno
mov
test
outsl
adc
movsl
lds
sbb
dec
outsl
cmp
inc
xchg
loope
jl
leave
mov
adc
cmp
add
loopne
pop
jmp
xchg
mov
sbb
jp
or
lret
mov
jb
jge
ret
scas
imul
push
pop
nop
jbe
outsb
and
mov
mov
sbbl
lods
sub
ljmp
mov
sub
push
mov
clc
stos
addr16
arpl
mov
mov
je
add
nop
jno
shr
out
int
dec
in
mov
scas
or
jecxz
sbb
xchg
xor
dec
or
leave
sub
out
sbb
loop
or
movsl
mov
and
shlb
mov
push
dec
rorl
lret
into
lahf
lret
and
xor
int
iret
xor
ret
mov
add
ffreep
loope
std
out
push
clc
ljmp
outsb
mov
jecxz
xchg
bound
inc
daa
out
mov
outsb
sti
mov
mov
push
sub
and
test
scas
loop
cmp
fmuls
push
aam
stos
fwait
mov
test
inc
ljmp
or
sub
mov
loop
into
cmp
orl
mov
in
or
leave
fidivs
stos
dec
dec
inc
cmpl
lods
test
insb
sub
insl
dec
and
repz
insb
sub
mov
out
scas
pop
je
imul
dec
and
cmp
sub
fimull
push
inc
inc
jmp
or
repnz
ljmp
xchg
bound
xorb
jo
outsl
aas
and
mov
arpl
mov
mov
and
aas
test
in
lea
das
scas
in
loop
subl
comiss
ret
sti
arpl
mov
xor
mov
xchg
jbe
jb
ret
sahf
fs
cmp
iret
pop
cmp
test
cmp
inc
outsb
jle
push
outsb
dec
scas
jne
mov
and
lods
leave
insl
stos
popa
arpl
add
out
mov
or
ret
ljmp
shlb
lret
cmp
sub
inc
fiaddl
test
dec
xchg
lods
inc
add
jecxz
test
das
push
aaa
js
or
fisttpl
mov
stos
scas
in
andl
xchg
pop
and
mov
jo
leave
loop
or
lds
and
sub
outsl
dec
push
or
sbb
and
jecxz
enter
mov
pop
sarl
cmpsl
adcl
in
lods
int
stos
iret
loope
out
mov
push
add
out
insb
roll
out
fbld
xchg
in
test
lods
popf
call
fisttpl
scas
pop
sub
or
xor
mov
outsb
sub
mov
mov
jnp
lods
test
push
jge
scas
call
insl
push
shl
cmp
into
scas
cmpsb
stos
mov
and
lds
vmovapd
inc
cmp
dec
mov
jecxz
lret
cltd
inc
and
arpl
or
loope
test
stos
repz
or
push
and
arpl
pop
dec
mov
dec
mov
cmpl
in
je
mov
cmp
insb
rolb
and
lret
cmpsl
out
into
inc
or
add
inc
das
test
push
scas
jl
fisubl
inc
jb
std
lods
mov
ret
xchg
inc
lods
dec
jae
out
int
in
cli
push
into
lods
fcmovnu
stos
mov
std
cmp
push
lret
xchg
or
scas
cmc
jb
add
cmp
mov
pop
fwait
jge
or
jno
jne
jbe
cmp
xchg
in
ret
shrd
movsb
scas
mov
mov
lret
cmp
push
xor
icebp
mov
or
jecxz
loope
popf
in
sbb
and
lods
or
or
out
nop
mov
in
lods
loop
or
xchg
pop
cld
and
fs
ret
mov
loop
sub
outsb
insb
and
lods
lds
jecxz
sti
iret
out
bound
shll
jmp
jno
and
push
movsl
das
pop
push
jmp
xchg
fwait
outsl
leave
and
std
add
mov
pop
cli
insl
stos
filds
mov
mov
xchg
scas
sub
mov
lods
or
xorl
scas
or
jo
jmp
pop
bound
pop
clc
inc
rolb
xorb
es
fisubl
les
and
sbb
pop
jge
jb
mov
incb
scas
jecxz
jge
insb
jb
popl
mov
dec
ds
lods
push
pop
jo
into
sbb
mov
dec
mov
ficompl
pop
mov
out
cmp
daa
lods
jmp
adc
bound
sub
int3
dec
out
test
nop
pop
push
scas
out
into
int3
mov
xchg
lds
ljmp
jb
dec
and
outsl
scas
push
jl
ljmp
dec
push
addr16
lock
xor
or
mov
dec
xchg
int
jo
test
mov
mov
and
dec
mov
push
mov
std
or
push
repz
inc
dec
stos
jbe
jnp
popa
dec
into
outsb
bound
jne
out
mov
or
insl
ret
lret
xchg
push
out
mov
roll
push
and
ret
test
push
cmp
arpl
and
cmp
scas
lods
addr16
lret
out
roll
popa
inc
call
or
out
bound
push
cld
and
scas
dec
out
out
repz
dec
or
das
inc
outsl
dec
mov
adc
test
or
push
sub
push
daa
mov
cmp
test
push
xchg
nop
cmp
dec
sub
lods
stos
jg
sub
dec
or
jmp
sub
outsl
iret
mov
push
stos
adc
test
mov
fadds
ret
push
or
call
arpl
jb
js
mov
mov
and
inc
scas
cli
and
test
hlt
push
sub
lods
pop
jmp
add
sub
ljmp
mov
cmp
jmp
clc
out
in
push
sub
roll
mov
shr
imul
jp
jne
popa
inc
mov
je
sub
jbe
dec
push
test
bound
push
fwait
sub
dec
imul
dec
jmp
iret
push
sbb
bound
lfs
inc
push
xlat
cld
inc
dec
or
cmp
fisttpl
and
push
data16
addr16
push
sti
pop
nop
push
call
daa
pop
sub
lods
outsl
inc
pop
pop
xlat
nop
or
lret
or
fwait
push
mov
and
jmp
imul
mov
mov
movsl
lds
inc
sub
mov
inc
and
xor
mov
mov
je
dec
movsl
mov
or
scas
inc
fmuls
xlat
dec
or
and
jne
mov
pusha
inc
mov
imul
mov
arpl
or
or
and
das
popa
loop
and
scas
jmp
mov
stos
xchg
lret
push
xchg
jno
fadds
insl
mov
jne
leave
iret
push
sub
cmpsb
popa
xchg
outsb
mov
jg
lea
jb
stos
std
fs
loope
or
ljmp
jecxz
mov
sub
in
sub
stos
iret
mov
xchg
stc
dec
pop
outsl
adc
imul
je
leave
lret
scas
cwtl
adc
sbb
wrmsr
dec
jecxz
ret
push
lea
jb
dec
scas
lock
or
scas
loop
push
filds
cwtl
outsl
cmovb
sbb
outsl
push
lahf
cld
dec
bound
dec
pop
xorl
mov
stos
hlt
mov
inc
mov
nop
movsl
enter
cmp
roll
xor
push
or
jne
jmp
jb
or
mov
dec
outsb
or
arpl
test
sti
jnp
dec
insl
das
out
inc
scas
inc
std
inc
cmp
leave
test
into
add
inc
lcall
mov
out
shrb
jne
gs
and
lods
jnp
sub
iret
push
push
jecxz
sub
lret
leavew
push
jmp
aas
lea
or
aad
les
scas
shll
mov
dec
and
sub
das
rorl
sbb
jnp
arpl
and
pop
sub
lds
push
sti
dec
lea
or
push
mov
out
call
mov
or
arpl
or
mov
xchg
dec
stc
dec
sub
out
and
sub
dec
or
outsb
jge
jbe
daa
stos
dec
hlt
xchg
lods
mov
cli
in
mov
inc
inc
into
sub
adc
mov
inc
subb
jno
dec
shrl
scas
daa
add
and
call
add
add
add
mov
and
fwait
into
jns
repz
adc
inc
shll
mov
jecxz
fwait
and
idivl
xor
prefetch
mov
inc
stos
xchg
adc
xchg
mov
in
sub
add
adc
or
jle
jnp
inc
stos
loope
in
cs
pop
rolb
or
push
xchg
or
fsub
pop
dec
cmp
add
xchg
fldt
in
insb
cltd
scas
inc
add
imul
pop
xchg
fistpl
xor
js
mov
cli
jo
dec
inc
dec
popa
or
nop
insb
sbb
xchg
jnp
sub
out
dec
inc
jecxz
cltd
mov
ret
or
popa
ret
lret
jbe
leave
and
mov
test
cmp
mov
mov
imul
ret
cmpl
pop
shrl
mov
mov
pop
popf
inc
out
push
or
add
popa
sub
ljmp
loope
dec
cmp
mov
mov
or
popa
popf
int
xor
popl
dec
outsb
stos
mov
mov
pusha
dec
sbb
ss
fsubs
add
mov
push
ret
jne
mov
xorl
jns
popl
and
inc
neg
clc
arpl
ret
cmp
insl
dec
jb
jb
add
dec
pop
lods
push
inc
and
cmp
into
lret
ficoms
dec
js
fildll
test
mov
outsb
pushf
insl
fwait
out
or
popa
pushf
pushf
in
lret
mov
xchg
ret
xchg
out
or
js
dec
nop
adc
adc
inc
xor
cmp
cs
dec
arpl
es
jno
jmp
sub
mov
repz
ret
inc
or
mov
test
in
leave
inc
ret
test
rsm
add
pop
insl
loopne
cli
sbb
in
ret
faddl
arpl
cltd
push
jo
cmp
mov
pop
cmp
in
sbbb
orb
sub
data16
dec
clc
jecxz
add
and
inc
and
pop
cmp
loope
lret
das
sub
test
test
jo
add
lea
out
dec
outsb
lods
sbb
mov
and
iret
in
and
xor
dec
push
sbb
test
xchg
jne
stos
jb
mov
mov
outsb
loope
or
in
sub
iret
push
mov
and
aaa
mov
xor
cmp
in
mov
ret
inc
sti
inc
lods
dec
sbb
add
call
ja
pop
add
shl
scas
mov
push
into
mov
mov
in
jo
sub
rclb
insb
out
sub
sub
and
add
mov
add
add
lods
or
insl
push
pop
lods
decl
out
cmp
outsl
das
cld
xor
rclb
lcall
je
in
mov
or
and
add
inc
out
jmp
sub
dec
dec
aas
and
loope
cmp
and
xor
xchg
loope
mov
data16
xchg
push
cmp
int
je
or
mov
dec
popl
mov
adc
or
mov
mov
dec
bound
ljmp
cs
iret
lea
das
int
or
cld
mov
dec
dec
je
dec
xor
jne
cmp
jl
mov
outsb
test
std
bound
inc
dec
mov
outsl
add
lret
add
cli
insb
push
jecxz
pcmpeqd
sub
in
add
mov
ljmp
pop
lahf
sub
and
imul
roll
dec
dec
mov
mov
mov
loop
scas
movb
es
outsb
or
jae
and
push
dec
push
outsl
out
out
jecxz
outsl
roll
xchg
imul
lret
hlt
inc
and
fs
mov
pop
jns
lea
jl
bound
and
es
nop
ljmp
fsubl
push
popl
jnp
and
iret
jo
push
xor
rorl
icebp
jp
mov
bound
fisubrl
xchg
in
aas
inc
sbb
cs
insb
inc
ret
imul
clc
fwait
movsl
or
jmp
sub
outsl
cmp
in
xchg
push
or
mov
inc
roll
lods
in
hlt
outsb
out
push
push
cmc
flds
outsb
insl
add
dec
cld
jne
jbe
dec
mov
and
jmp
sub
sub
arpl
sub
pop
out
lret
shrl
inc
stc
dec
test
jmp
ja
xchg
stos
dec
ror
add
int
sub
lods
mov
mov
mov
lock
stos
mov
jbe
cli
rolb
cs
ucomiss
fsubrs
adc
mov
dec
dec
test
jge
add
xor
fadd
loopne
cmp
pop
cmp
mov
fistpll
outsb
or
or
dec
sub
xchg
shll
sbb
lret
jno
bswap
jo
sub
je
sti
add
inc
stc
out
lods
jno
pop
adc
mov
mov
xchg
mov
inc
add
or
jno
es
mov
mov
arpl
andb
out
in
dec
push
dec
jg
add
and
iretw
mov
xchg
or
mov
lock
or
movsl
sub
push
lds
push
lret
imul
mov
sub
addl
subl
push
mov
femms
mov
add
or
fwait
ss
nop
iret
jecxz
xchg
mov
jo
adc
push
lods
fisttpl
mov
enter
sbb
insl
in
mov
cs
clc
ret
mov
push
push
std
dec
inc
dec
leave
roll
stc
jecxz
loop
push
inc
das
lods
out
out
inc
mov
dec
js
cs
iret
or
jne
leave
inc
lock
dec
inc
sub
sub
mov
dec
int
push
sub
sbb
cmp
mov
adcl
mov
insl
imul
leave
adc
dec
out
mov
setb
subb
jno
dec
push
add
punpcklbw
add
inc
dec
nop
test
mov
dec
mov
clc
mov
jmp
das
mov
orl
jg
cltd
fstl
fcomi
loope
repz
jecxz
rcrl
mov
add
arpl
outsl
sahf
cmc
nop
pop
out
or
sar
mov
or
jmp
ret
imulb
xor
out
imul
stc
pop
mov
sub
or
cltd
inc
jo
or
lcall
daa
and
insb
add
mov
jecxz
jo
add
sahf
inc
scas
nop
shrl
lods
jbe
jnp
sub
imul
loop
dec
mov
sub
lods
inc
test
daa
cmp
sub
inc
into
fmulp
cld
insb
push
and
push
lods
scas
test
subl
and
test
and
jecxz
add
outsb
into
jo
dec
jno
and
stos
mov
subl
cmc
mov
mov
push
repz
or
imull
imul
mov
push
lahf
clc
ljmp
out
dec
jecxz
lcall
and
cli
iret
sti
cs
scas
mov
add
sti
jae
lods
mov
push
scas
mov
out
mov
sbbl
cmpsl
jne
pop
scas
dec
mov
lahf
ljmp
in
or
into
rcrl
fnstenv
dec
bound
lock
mov
inc
jae
imul
jmp
sub
clc
ret
jle
jecxz
leave
push
pop
mov
mov
jle
scas
loope
ret
or
push
insl
adc
popa
out
sub
into
sub
mov
sbb
or
mov
int3
fucomi
dec
or
lods
repnz
sub
outsb
outsl
out
jnp
mov
sub
jae
lods
test
in
cmp
outsl
scas
dec
cmp
or
inc
scas
movsl
cmp
andl
or
jl
scas
imul
lods
es
mov
daa
mov
dec
fs
dec
aas
sub
mov
lods
rcll
and
mov
dec
or
imul
cmp
and
decb
sub
jne
pushf
fcoml
clc
dec
lock
lods
xor
jecxz
push
lds
rcr
push
cltd
loope
dec
jo
or
cmp
add
push
bswap
out
test
mov
jl
in
shrl
sti
test
dec
hlt
rcl
mov
inc
mov
lret
and
insl
loope
fsubr
mov
mov
shll
adc
sub
mov
adc
dec
ret
das
out
add
scas
dec
jb
adc
leave
or
mov
shr
je
sub
push
cmc
inc
insb
movsl
jecxz
scas
out
sub
leave
or
inc
stos
iret
shll
insl
movsl
outsl
mov
xchg
jecxz
push
andl
fisubl
sbb
dec
mov
and
loope
xchg
dec
ja
mov
out
leave
fstpt
mov
jb
orl
insl
leave
into
iret
and
jo
loope
outsb
push
mov
or
mov
dec
or
dec
insb
inc
outsl
dec
ljmp
in
add
rclb
add
shlb
fstps
js
stc
or
inc
jb
bndldx
stc
shl
or
xor
and
testl
outsb
and
and
int3
xchg
add
imul
xchg
fs
ror
shll
jae
lds
inc
ret
repnz
cmp
or
das
scas
sbbl
arpl
dec
push
ret
inc
dec
ljmp
cmp
loop
push
sti
out
mov
rcrl
dec
cltd
mov
movsb
outsl
arpl
repnz
mov
xor
mov
fldt
leave
out
insb
js
ret
mov
cmc
push
mov
shrd
mov
jno
insl
lods
and
lea
movsb
arpl
xchg
test
mov
mov
jnp
add
sub
lret
outsb
dec
into
xchg
jns
andl
loope
popa
jp
mov
imul
pop
jne
and
scas
cs
pop
mov
cmp
into
sarl
fldt
orl
sbb
loope
and
int
imul
lret
xchg
dec
dec
mov
hlt
mov
jmp
int3
js
scas
inc
add
in
lds
data16
push
call
iret
mov
mov
and
lret
inc
in
or
fistpll
loop
jno
dec
inc
sbbl
mov
outsb
inc
mov
das
dec
and
loopne
pminsw
xchg
insl
mov
out
dec
xchg
mov
pop
and
or
sub
jl
test
das
out
adc
mov
loope
in
outsb
pop
nop
mov
iret
dec
push
xchg
jo
or
js
mov
dec
mov
mov
xchg
je
paddb
dec
pop
lods
inc
aas
arpl
jmp
lret
frstor
orl
ror
mov
dec
movsl
or
add
insl
lret
outsb
mov
dec
and
mov
inc
or
arpl
clc
ret
js
roll
and
leave
inc
mov
sub
lods
into
dec
hlt
cmp
mov
mov
jbe
jbe
dec
into
mov
mov
mov
out
ror
or
mov
and
inc
xor
mov
stos
scas
cld
dec
or
xchg
out
jle
and
xchg
add
bound
nop
dec
loop
std
je
outsb
lret
xor
test
dec
xor
jecxz
outsb
or
leave
add
test
bnd
out
cmp
push
inc
xchg
insb
cmpsb
out
nop
mov
mov
out
dec
mov
push
mov
insl
mov
rorl
sub
and
jmp
repz
leave
scas
pop
xorl
sub
and
lea
push
xchg
stos
cmp
bound
andl
push
jnp
push
ja
iret
clc
or
mov
imul
dec
cmp
dec
stos
sub
shrl
mov
cmpl
outsl
and
or
sub
leave
jecxz
addr16
inc
imul
ret
das
jg
lods
test
or
jne
prefetch
or
pop
insl
cmp
mov
nop
push
sub
scas
sub
sti
mov
dec
outsl
iret
add
repz
les
or
stos
push
sbbl
fistl
and
xchg
inc
fcompl
jne
lods
mov
loop
cmovo
test
in
ror
pop
ret
out
shll
addr16
jb
movsl
andl
test
pxor
inc
pop
bound
andl
add
or
repnz
inc
insl
outsl
mov
dec
insb
lret
lods
sub
sub
loope
mov
int
mov
ret
push
cmc
leave
outsb
jbe
and
add
addr16
insl
ret
in
loop
cmp
leave
mov
sub
daa
mov
cmp
aad
pop
push
inc
mov
jnp
out
or
push
outsb
out
push
jle
jbe
sti
mov
scas
inc
insb
jno
in
stos
jbe
into
add
mov
std
xor
mov
aaa
and
andl
lea
mov
sub
daa
jecxz
and
pop
in
xchg
nop
loop
add
lods
or
dec
dec
lock
std
daa
dec
pop
lds
scas
fldt
push
into
jecxz
loop
int
xchg
dec
lds
lods
iret
movsl
ret
xchg
push
in
lods
cld
dec
cmp
and
cmc
add
nop
das
jns
lods
ja
sub
dec
jb
insl
and
arpl
outsb
scas
jns
cmp
pop
sbb
add
fisubrl
cwtl
test
or
scas
sar
les
out
and
leave
outsb
sarb
jb
push
sub
out
das
mov
in
cs
popf
out
pop
fwait
and
add
lock
and
out
movsl
loope
mov
jne
cld
rcll
das
outsl
jo
add
fsubrp
stos
mov
xchg
sti
stos
out
jmp
jne
adc
mov
cltd
testb
dec
fwait
outsb
in
or
scas
sbb
lret
and
mov
pop
jl
ret
loope
mov
call
mov
add
mov
test
outsl
subl
imul
push
lea
ljmp
cmp
ja
jmp
fcmove
sahf
add
lds
and
mov
lret
sub
push
mov
mov
adc
fmul
sub
dec
in
mov
adc
into
dec
daa
mov
mov
iret
cld
lea
dec
sbb
lcall
movq
arpl
adc
sub
inc
xchg
call
cmp
add
out
push
mov
cli
xorb
inc
mov
push
jl
insl
test
pop
jp
lret
mov
js
and
mov
push
scas
int3
jb
lea
lret
mov
dec
cli
mov
out
lret
test
dec
or
jnp
sub
xlat
push
jg
pop
bound
ret
out
jno
out
sub
outsb
aad
bound
scas
ret
mov
arpl
incl
ja
and
icebp
push
sbb
add
addr16
out
outsl
lea
fisttpl
out
mov
loopne
cmp
lds
int3
shr
fs
adc
mov
insl
ljmp
sbb
imul
xlat
ja
inc
or
mov
test
inc
ljmp
daa
push
and
or
dec
mov
sub
mov
xchg
test
data16
or
sti
lods
into
and
inc
push
mov
stos
out
loop
movsl
dec
andb
in
out
jbe
adc
sub
lods
and
arpl
and
insl
leave
add
sub
clc
mov
fists
inc
lret
mov
adc
inc
push
mov
push
ret
out
and
or
fmull
sub
dec
int
xchg
mov
lret
popa
dec
js
dec
das
inc
dec
add
sub
xchg
and
clc
xor
out
xchg
push
je
sub
jo
fwait
jl
popa
lods
dec
into
js
mov
test
ljmp
xchg
lahf
dec
int
add
out
mov
js
movsl
iret
push
fwait
sbb
stos
and
sar
or
adcl
shr
fcmovb
pop
inc
fwait
mov
pop
dec
lods
push
xor
mov
or
insl
and
inc
add
cmc
and
insl
mov
xor
jns
dec
mov
lods
dec
inc
or
pop
and
jne
fwait
mov
in
ja
insb
inc
and
fsts
js
push
andb
inc
divl
cmpsl
sub
push
push
insb
test
and
mov
add
fldt
jmp
stos
je
dec
addl
idivl
xor
mov
dec
fcoml
mov
and
xor
lods
into
add
inc
arpl
cltd
in
outsb
push
repnz
out
push
arpl
inc
dec
mov
mov
mov
add
loope
jnp
lods
dec
iret
dec
imul
lret
add
or
into
and
fsubl
popf
jne
sub
mov
inc
scas
mov
outsb
ret
ret
test
dec
outsb
divl
int
loope,pn
pop
mov
add
jnp
nop
test
xchg
fisubl
ss
push
dec
ret
ja
aad
sub
mov
arpl
jp
mov
pop
mov
mov
push
cmp
leave
xchg
adc
jecxz
jb
clc
daa
insl
inc
sbb
call
cmp
jmp
lret
inc
test
push
inc
cs
dec
adc
insl
negl
sub
sub
and
sbb
jae
adc
lods
or
xor
aas
fwait
rol
xorl
sub
sahf
clc
insl
cmpsb
push
jno
int
ds
fisttpll
out
outsb
push
lea
mov
in
clc
ss
bound
pop
sub
repz
stos
ret
out
insl
dec
or
inc
imul
lods
jecxz
scas
push
outsb
arpl
cvtps2pd
ds
clc
jmp
mov
mov
push
ss
jge
rcrl
cmp
filds
bound
sub
into
and
adc
jg
mov
daa
ss
pop
insl
mov
adc
sub
jmp
inc
pop
int3
loop
loopne
xorb
push
push
loop
or
dec
lock
insb
lods
aaa
and
mov
inc
xor
mov
sub
clc
repz
sub
mov
or
or
cs
iret
xchg
mov
push
lahf
movsl
nop
scas
scas
jnp
mov
mov
sub
int
mov
dec
add
mov
pop
iret
add
stos
sub
arpl
clc
lock
or
bound
scas
int
mov
in
xbegin
or
or
bound
and
mov
sbb
daa
ss
icebp
lock
in
aaa
fimuls
in
jno
adc
push
into
repz
xor
pop
jbe
cltd
cmp
movsl
jb
loope
lret
daa
mov
loopne
daa
clc
out
pop
lods
fmul
js
xchg
clc
mov
js
jb
push
sub
ljmp
and
sub
out
add
inc
dec
inc
test
clc
out
mov
sub
mov
ret
mov
jecxz
xchg
mov
sub
test
movsb
scas
dec
sub
sub
icebp
and
lret
cld
lods
rorl
sub
xchg
ss
fldt
sahf
call
dec
mov
mov
mov
inc
aas
cld
and
in
andl
xor
lods
or
movsl
add
and
inc
or
sub
lods
jno
movsb
mov
sub
ljmp
rcrb
stos
loopne
add
or
outsb
push
xchg
mov
pop
adc
out
dec
sbb
mov
fldenv
push
or
xor
cs
fldt
add
mov
dec
iret
das
ljmp
in
jae
mov
jnp
dec
jmp
sub
lods
ret
lret
mov
mov
nop
push
shrl
dec
pop
in
fs
scas
and
sbb
in
popa
jbe
mov
inc
jecxz
mov
fs
inc
jmp
dec
cmp
dec
mov
jo
sub
mov
iret
pusha
xchg
out
add
lods
adc
insb
je
scas
sub
add
iret
inc
jmp
je
dec
and
test
or
mov
add
and
dec
mov
xchg
and
lea
cmc
adc
in
lea
das
stc
push
sahf
imul
or
jno
out
mov
ds
out
dec
mov
outsl
sub
arpl
les
dec
fidivrl
xchg
hlt
cmp
mov
mov
repz
lret
cs
inc
arpl
js
out
lods
mov
mov
in
bound
movsl
iret
or
mov
clc
push
cmp
fnstcw
fs
arpl
das
es
test
loope
outsb
sub
popa
push
and
and
test
jbe
push
jo
dec
outsb
out
mov
gs
jmp
or
pop
clc
ljmp
mov
adcl
dec
sbbl
mov
std
push
ret
fwait
jbe
stc
lea
jmp
xchg
mov
lret
outsb
sbb
mov
xchg
push
lods
dec
jb
push
loop
sub
jnp
int
das
or
mov
inc
aas
loope
mov
scas
or
int
xchg
jae
nop
jo
fisubrs
jmp
push
lea
mov
lds
or
or
pop
in
cld
fiaddl
lods
mov
xchg
ret
inc
add
add
arpl
jecxz
jge
xlat
ret
push
jb
loope
je
stos
shlb
jns
movsb
mov
imul
jne
jne
lods
or
adcl
dec
cmp
arpl
inc
repz
adc
faddp
out
xor
sbb
lahf
dec
add
adcb
out
or
inc
fildl
test
jg
bound
lods
mov
ret
clc
fwait
pop
xchg
pushf
lea
sbb
dec
loope
push
pop
scas
or
out
out
inc
outsl
sub
daa
mov
lds
or
pop
push
loopne
arpl
mov
add
dec
jmp
xor
xchg
in
pushf
ret
aaa
xor
lds
outsb
dec
into
cs
mov
imul
add
sbb
xor
loope
jns
arpl
insl
insl
ret
lods
into
or
add
mov
scas
mov
jns
or
cmpl
xor
outsb
or
mov
push
and
imul
xor
bound
sti
inc
lods
arpl
xchg
lret
daa
xlat
or
jmp
dec
pusha
enter
aad
and
jge
inc
and
dec
lods
insl
int3
xchg
leave
shl
pop
add
xor
pusha
nop
leave
mov
dec
jecxz
cmp
dec
out
insl
lcall
addl
inc
sub
mov
sub
jle
jle
dec
insl
jmp
or
add
adc
jnp
inc
add
lret
pop
jb
or
int3
dec
mov
iret
jmp
outsb
sub
shrl
je
or
popa
mov
test
jne
pop
stos
addb
lock
mov
clc
popa
repz
xchg
xchg
inc
cmpsb
insl
lods
daa
lods
inc
inc
inc
and
imul
pop
pop
adc
jnp
test
or
fstpt
out
enter
jg
imul
das
mov
iret
int
and
jno
push
outsb
ret
in
ret
clc
sub
shll
cs
cmp
push
das
jno
fwait
scas
in
out
add
and
dec
insl
das
ljmp
lods
insl
or
dec
jg
sub
dec
pop
test
mov
mov
mov
imul
call
mov
push
insl
mov
inc
fiadds
sub
jo
outsl
mov
jo
out
fisttpl
test
mov
iret
test
lea
mov
lret
bound
or
dec
es
and
mov
das
or
inc
lret
mov
push
pop
nop
es
insb
xor
outsl
mov
adcl
cltd
mov
xchg
into
scas
lock
je
add
test
insl
sub
daa
mov
pop
mov
mov
jbe
fcmovu
clc
jge
inc
ret
cmp
orl
insb
ds
shrd
and
out
arpl
int3
lock
jnp
or
mov
and
pop
arpl
inc
scas
in
fs
ret
mov
mov
mov
lahf
mov
lret
mov
mov
shl
bound
lahf
outsl
scas
xor
test
jmp
jnp
sub
outsl
nop
lods
repnz
dec
test
pop
lret
mov
fs
sbb
xchg
sbb
mov
xchg
outsb
stos
mov
dec
mov
mov
dec
and
scas
add
popf
nop
or
sbb
std
mov
and
cmp
fcomip
add
jecxz
int
jecxz
pop
stos
or
clc
lock
xchg
dec
or
shrb
xor
icebp
pop
lds
sub
into
dec
dec
nop
sbb
inc
jle
dec
into
loopne
rorl
inc
lret
sub
popf
fwait
in
push
or
cld
inc
sti
mov
ret
sub
jl
inc
test
outsb
mov
jecxz
pop
fcmovnb
pop
ret
lds
cli
inc
movsl
loope
es
jmp
iret
xchg
xchg
mov
add
repnz
loope
push
cs
in
into
dec
pop
push
lcall
das
lea
std
xchg
stos
dec
test
subb
and
fucomi
sub
test
ja
mov
mov
jnp
outsb
add
mov
jmp
mov
into
push
jle
dec
jmp
and
sub
push
cs
mov
mov
dec
arpl
mov
add
mov
push
jns
sbb
es
fisubl
push
ret
loop
mov
sub
and
dec
out
sti
mov
nop
mov
inc
out
mov
bound
sti
in
xor
lock
lret
into
jnp
add
adc
cmp
mov
xor
xor
lea
repz
cltd
push
xor
out
in
iret
jne
push
das
leave
pop
shlb
loopne
dec
inc
cmp
dec
cmc
pop
mov
imul
arpl
jl
arpl
ljmp
cmp
jp
or
fnstsw
out
test
mov
out
and
paddsb
in
xchg
add
outsl
pop
in
push
jp
inc
arpl
popa
scas
pop
dec
lods
insl
pop
cld
dec
jnp
clc
cs
bound
jb
lret
push
pop
sti
scas
test
rcl
xor
dec
inc
inc
repnz
lret
loope
mov
mov
ret
mov
or
push
mov
fs
dec
jp
mov
mov
jecxz
and
popa
movsl
shll
leave
decl
lods
cmc
jae
iret
sub
mov
jbe
aas
dec
cmp
pop
outsb
out
lea
push
mov
or
push
mov
inc
lods
iret
mov
aas
outsb
ljmp
mov
sbb
push
jmp
rcrl
sub
enter
dec
lret
dec
in
test
lods
stos
test
fisubrs
mov
dec
sub
and
jmp
mov
xor
out
leave
jp
lods
dec
out
or
out
jge
lods
inc
arpl
or
pcmpeqw
cmp
adc
inc
mov
scas
das
in
jle
sti
inc
mov
or
nop
mov
xchg
or
cmp
jbe
in
sub
insl
outsb
scas
pop
sar
inc
addr16
jb
xchg
test
pop
jg
bound
push
xchg
rcr
mov
test
int
pop
fimull
clc
jne
loope
into
mov
xor
das
add
jb,pn
jb
cld
add
jb
daa
loope
pop
cmpl
sbb
sub
int3
stos
outsb
nop
jns
add
leave
sbbb
aas
sub
daa
lock
imul
mov
inc
test
jbe
or
arpl
mov
xchg
jl
mov
iret
sub
and
outsl
mov
dec
push
fsubl
dec
inc
sarl
shrb
daa
dec
dec
sbb
jns
add
mov
lea
xor
jl
jbe
mov
fs
scas
jbe
mov
or
xor
sub
inc
int
fdivs
jle
lea
cmpsl
das
jbe
push
imul
bound
out
hlt
imul
shl
insl
xor
ljmp
movsl
daa
sub
es
ret
leave
dec
adc
lods
mov
pop
and
push
and
cltd
xchg
sbb
stos
aas
iret
pop
mov
lahf
scas
jmp
ret
xor
loope
jb
sub
or
jge
loop
or
lds
data16
bound
adc
lock
jecxz
push
xchg
popf
arpl
xchg
adc
xchg
lods
lods
sub
cli
stos
dec
bound
leave
icebp
or
or
sub
mov
sub
mov
adc
scas
scas
roll
imul
sarb
xor
jnp
into
out
or
je
int
dec
out
and
mov
mov
xchg
or
outsl
aam
arpl
push
cmpsb
cmpl
dec
ja
outsl
xchg
into
inc
out
xchg
mov
scas
int
std
mov
xchg
push
cmc
inc
inc
mov
gs
inc
cmc
andl
lods
mov
stos
int
lds
cmpsb
out
test
mov
pop
sti
insl
ljmp
jne
push
jle
out
dec
std
insl
mov
sub
jbe
mov
test
dec
or
pop
pushf
or
push
sti
mov
ret
mov
mov
fldt
loope
ljmp
and
popa
push
popa
hlt
lea
dec
xchg
add
mov
pop
push
into
lret
test
scas
jnp
jmp
sqrtps
lret
or
lret
test
jecxz
adc
fs
inc
sti
mov
stos
outsl
and
pop
pop
push
add
iret
fsubrs
lret
cmp
orl
lds
ret
into
sub
and
test
clc
dec
push
arpl
jb
add
lahf
sbb
pusha
psrlq
mov
subl
test
into
cmp
sbb
sub
rorl
out
movsl
push
pop
movsb
or
or
iret
xchg
mov
bound
push
xchg
or
dec
fbstp
cmp
stos
nop
loope
lods
subl
add
bound
hlt
loop
daa
aam
into
xchg
xor
xchg
bound
sub
fisubs
mov
or
enter
mov
mov
clc
mov
out
inc
add
int3
jmp
test
mov
pop
out
inc
mov
cmpsb
push
insl
fsubr
in
insb
jecxz
scas
ret
stos
out
and
lods
mov
jge
insl
mov
mov
lret
pop
int
mov
outsl
cmp
sub
cli
mov
pop
out
dec
inc
add
or
int
lret
into
mov
dec
dec
mov
push
mov
ret
hlt
stc
xchg
lods
jns
cmp
mov
dec
cmova
jge
mov
mov
scas
sbb
add
cmp
push
adc
jne
dec
sbb
in
jo
sti
test
sub
imul
outsb
or
sbb
ret
or
dec
add
scas
dec
in
xor
lods
clc
mov
or
mov
ficompl
sti
fsubrp
xchg
sub
test
loope
insl
insb
fdivrl
sub
aaa
inc
mov
ret
adc
outsb
out
hlt
and
daa
je
lea
popa
stos
inc
xchg
int
dec
cmpsb
mov
inc
mov
daa
outsb
ret
jno
pushf
and
icebp
rolb
loope
dec
sbb
std
outsl
jns
cmp
ja
rorb
loop
loope
inc
push
inc
push
or
xchg
int3
cmp
add
mov
lea
bound
pop
insl
jb
and
clc
and
out
push
inc
dec
pop
popa
out
das
repnz
ficompl
push
mov
sub
in
out
mov
and
push
jnp
mov
mov
add
and
cmp
sub
test
jl
wbinvd
or
ja
bound
jecxz
inc
in
shlb
jl
nop
shrl
ljmp
lds
movsl
fisubrl
xchg
sbb
leave
add
test
inc
stos
dec
daa
insl
pop
sbb
bound
cmp
or
mov
dec
stos
ret
push
add
mov
cs
shlb
rorl
in
std
inc
stos
inc
ret
inc
sbb
lods
inc
push
in
or
jp
and
push
jne
lret
es
jno
fwait
ljmp
test
mov
mulb
insl
push
sbbb
sub
jo
dec
pop
mov
fwait
rorl
mov
inc
iret
cs
jmp
mov
ret
sbb
jo
imul
fbld
inc
popa
cmp
cmp
add
pushf
sub
mov
ret
inc
lea
lods
sti
and
inc
xchg
ret
loope
add
or
push
cli
or
jmp
jecxz
insb
cli
loope
inc
dec
lea
cli
out
mov
mov
dec
stos
cmp
sub
add
scas
outsb
data16
jbe
lods
stos
sbb
dec
nop
in
xorl
bound
inc
int
rcrb
mov
push
dec
add
push
xor
or
ret
arpl
insl
jo
iret
dec
cmp
in
mov
or
in
or
sub
lods
iret
int
dec
arpl
xorl
dec
inc
jb
or
andb
insl
push
adc
pop
mov
pushf
mov
cltd
jecxz
push
test
arpl
out
jmp
push
jecxz
dec
sub
in
dec
scas
je
leave
popa
mov
sub
int
insl
pop
scas
mov
imul
xchg
in
in
test
cmp
dec
dec
sub
dec
dec
std
out
or
cs
stc
es
das
lret
cltd
iret
inc
and
imulb
or
loop
loop
loope
xor
dec
das
add
mov
mov
cli
int
leave
jns
xor
in
cwtl
cmpsb
stos
nop
insl
pop
loop
jl
outsl
inc
cs
jmp
int3
mov
and
outsb
shrd
in
into
jge
sub
imul
int
mov
lods
adcb
lea
inc
and
outsl
es
into
mov
clc
test
mov
cli
leave
and
inc
ret
fistps
aas
pop
jge
js
shrl
push
movsb
out
bound
mov
std
scas
mov
push
pop
bound
add
std
sub
int
sub
mov
lahf
cmp
std
pop
dec
into
clc
js,pn
push
loope
dec
xorl
ljmp
dec
sbb
mov
dec
dec
adc
dec
ljmp
inc
or
xchg
out
out
push
mov
mov
mov
inc
xchg
test
lods
ret
xchg
ss
js
imul
and
mov
test
jns
imul
arpl
inc
leave
pop
iret
mov
push
arpl
pop
lods
scas
or
pop
inc
scas
cmp
push
jl
or
dec
lods
xchg
outsl
pop
mov
sub
std
imul
in
hlt
jnp
lods
sub
jns
shll
out
or
imul
and
adc
nop
add
repz
adc
adc
dec
int3
lods
xchg
dec
mov
and
xlat
test
inc
ffreep
push
sbb
jl
inc
mov
loop
nop
cltd
add
pop
xor
stos
xlat
jecxz
cmpsb
lods
in
ret
and
vpsubd
cs
jmp
cmp
mov
mov
cmp
mov
mov
lret
shrl
test
in
arpl
imul
add
or
dec
fbstp
out
in
xorl
xor
lret
jne
or
lods
outsl
repz
lahf
inc
insl
bound
lods
jne
pop
mov
pop
mov
mov
outsb
out
arpl
out
jno
test
test
loop
sti
ret
mov
lret
inc
int
mov
orb
sbb
incb
fdivrs
out
out
dec
xchg
sbb
or
dec
or
add
out
std
cmp
jne
out
dec
and
push
gs
jb
scas
xlat
push
jno
orl
incb
sub
and
sbb
outsb
and
sbb
mov
mov
insl
dec
jmp
inc
or
mov
push
xor
aad
insl
movsl
push
jge
outsl
jg
xor
nop
jbe
in
pop
dec
sub
clc
adc
cmp
das
sub
insl
outsl
lds
inc
add
cmp
int
fs
fistpl
bound
movsb
dec
lods
sub
in
cmp
inc
popa
test
sahf
dec
dec
xorl
clc
adc
cltd
sub
fsubs
dec
outsb
mov
sub
arpl
arpl
lods
out
inc
mov
lods
push
mov
test
and
outsb
xor
movsl
out
test
repz
jmp
dec
adc
scas
jno
stc
scas
int3
test
sub
xchg
cs
jecxz
jmp
roll
lea
lret
sbb
jns
mov
xchg
out
int
lods
and
ret
outsb
push
insb
mov
jno
jb
movsb
and
push
clc
stos
outsb
lea
stos
imul
fwait
daa
lods
in
inc
jmp
ret
inc
outsb
cli
insl
mov
pop
stos
mov
or
xor
jo
inc
lock
paddq
imul
and
dec
sub
out
jo
leave
stc
scas
pop
insb
rol
bound
test
arpl
imul
dec
or
cs
xchg
loope
inc
and
lds
mov
test
sub
mov
mul
sbb
sub
inc
push
and
insl
or
into
test
sbb
or
sbb
inc
and
out
das
loop
call
sub
insl
sub
ds
mov
loop
push
and
cli
loop
movsl
ljmp
inc
mov
mov
outsl
in
ret
lahf
or
pop
je
scas
cs
lcall
jl
add
or
and
inc
test
insl
push
push
inc
shll
cs
push
sbb
xor
sti
pusha
test
and
addr16
pop
stos
je
scas
add
shr
and
das
pop
lds
iret
jl
push
sub
or
sbb
push
mov
xlat
ss
cld
daa
lea
cmpsl
aad
push
push
test
andl
jecxz
outsb
cltd
or
dec
into
push
dec
dec
add
mov
adc
inc
sub
mov
mov
scas
mov
iret
sub
das
bound
insl
stos
dec
mov
faddl
jnp
ret
dec
and
bound
or
push
test
jne
mov
fidivs
push
pop
jnp
lods
or
orl
xchg
sub
pushf
sbb
lods
sbb
fs
imul
inc
out
into
lahf
mov
pop
outsl
push
cmp
test
fwait
outsb
mov
arpl
pop
bound
dec
mov
inc
scas
insl
into
addl
call
or
and
cmp
jbe
xchg
scas
sub
lods
sub
or
fdivl
or
mov
cmp
inc
movsb
cmc
or
jecxz
sbb
and
sti
dec
inc
dec
xor
mov
mov
jmp
das
sub
or
adc
subl
lahf
lods
jns
mov
scas
cmp
dec
data16
mov
xchg
and
push
lods
loop
ljmp
mov
loope
insl
repnz
aaa
fistl
cmc
adc
xchg
in
into
dec
and
movsl
ljmp
cwtl
mov
insb
xor
out
mov
add
or
scas
cmpsl
imul
lods
cmpb
cmp
daa
mov
aas
inc
test
in
lods
dec
int3
gs
pusha
je
imul
and
jge
sub
scas
bound
rorl
lods
inc
ds
out
sub
outsb
movsb
scas
sub
rcll
pop
mov
out
and
stos
out
orl
lock
fcmovnu
dec
outsb
dec
sub
sub
jnp
inc
lret
ljmp
and
movsl
out
in
shll
or
btr
loop
outsl
test
push
sbb
subl
sub
sti
inc
orl
int
pop
lahf
inc
inc
jb
mov
xor
dec
leave
inc
or
mov
sbb
ret
push
dec
and
nop
jbe
mov
cmp
or
lahf
xchg
xchg
clc
inc
imul
arpl
hlt
insb
js
lea
lods
out
dec
push
insl
and
jb
mov
aas
sbb
scas
or
hlt
push
imul
test
jne
add
inc
mov
jns
mov
jecxz
popa
mov
lods
push
leave
dec
stos
push
lods
cmp
nop
jne
jb
adc
lds
loope
sbb
stos
add
repz
mov
mov
inc
or
jecxz
and
sbb
lret
clc
arpl
and
xor
xchg
leave
js
mov
insl
mov
ds
lea
sbb
in
shl
and
xchg
push
lret
daa
insl
pmuludq
nop
das
sbb
imul
clc
imul
and
subb
lahf
scas
dec
push
sbb
jne
scas
dec
push
outsb
gs
bound
jecxz
xchg
xchg
jle
cmp
lret
push
aam
ficomps
jl
inc
push
test
scas
lahf
lods
outsb
sbb
test
in
aaa
sub
int
inc
fdivs
or
mov
or
nop
inc
int3
push
dec
sub
out
xchg
sbb
jmp
push
jb
lea
inc
insl
scas
and
ret
lcall
xchg
push
iret
test
bound
add
inc
mov
loopne
inc
push
push
pop
ret
push
je
sub
leave
or
imul
xor
inc
lods
das
mov
lock
mov
jo
loope
ljmp
mov
rcl
mov
sub
lret
dec
adc
out
repz
xor
in
mov
jl
roll
cmovp
cs
push
fiadds
hlt
jl
outsl
mov
dec
sub
lahf
adc
sub
popa
pop
mov
test
add
imul
jmp
leave
iret
xor
or
arpl
bound
loope
add
in
int
inc
or
mov
sarl
mov
out
arpl
sub
mov
mov
sub
pop
sti
into
dec
sub
dec
scas
jno
or
jnp
outsl
mov
jmp
dec
cmp
filds
sub
push
arpl
mov
subb
shrl
jg
pop
scas
jge
xchg
push
inc
aas
scas
bound
lcall
int
dec
das
jmp
in
stos
fmull
loope
adc
lock
dec
push
jns
jp
arpl
or
out
and
dec
nop
mov
sub
iret
movsl
lret
cltd
sub
dec
into
negl
out
inc
jmp
push
push
out
mov
cmp
lret
push
hlt
jg
aad
or
add
jecxz
or
add
iret
sub
loopne
iret
push
add
scas
ret
sub
xor
out
outsb
dec
cs
nop
sub
fldenv
push
in
mov
inc
ret
add
dec
or
shll
outsl
push
add
insb
insl
rclb
imul
nop
mov
lea
or
mov
outsl
mov
pop
or
lret
stos
add
int
cmpsb
loope
inc
dec
adc
dec
xchg
ljmp
movsl
jb
hlt
pop
mov
mov
test
into
insb
std
or
iret
dec
jae
and
push
xor
dec
loop
push
ljmp
hlt
and
test
test
sbb
stos
pop
dec
xor
arpl
inc
and
push
dec
sub
mov
roll
or
popa
push
push
cld
dec
sti
mov
mov
out
fsubl
add
das
jno
sti
mov
insl
imul
add
shrl
jmp
dec
fwait
mov
inc
je
or
cs
icebp
fcmovnu
mov
test
or
test
movsl
cs
xor
push
imul
and
das
inc
jle
jbe
xor
outsb
mov
addr16
push
push
repz
mov
mov
jmp
add
cld
es
sub
sarl
mov
outsl
popf
testb
jnp
sarl
sub
jnp
fwait
jbe
push
scas
nop
fs
mov
or
adc
mov
adc
arpl
xor
fwait
in
bound
mov
imul
push
add
mov
push
enter
outsl
sub
add
mov
je
int
sbb
add
subl
mov
out
sub
inc
test
fsubrl
cs
jno
and
xorl
stos
aaa
vmwrite
and
ret
rolb
push
int
adc
ss
iret
sub
jecxz
in
cmc
test
sub
cld
cs
mov
push
leave
bound
insb
inc
dec
nop
jecxz
mov
add
jl
arpl
mov
cmp
pop
add
cvtpi2ps
sub
adc
cmp
xchg
ja
jmp
mov
sub
sahf
stos
popa
imul
jns
mov
shll
leave
jno
pop
jne
sti
and
add
fsubl
mov
ja
fwait
dec
inc
arpl
lods
scas
add
inc
jo
add
mov
daa
inc
movsl
push
in
arpl
adc
lods
lret
popf
inc
pop
movsl
or
ret
push
je
and
adc
in
in
adc
out
mov
out
je
inc
push
nop
daa
test
inc
inc
cmpsb
push
daa
loop
or
dec
lods
adc
inc
shrl
jo
lret
inc
rcr
mov
stos
fwait
outsb
jle
lock
dec
mov
mov
jo
xor
jnp
mov
iret
and
arpl
das
jecxz
ret
push
xlat
dec
fucompp
outsb
fdivrl
xchg
in
aas
cmp
imul
mov
cmp
scas
scas
mov
insl
mov
lods
sub
pop
lock
and
and
jg
js
lret
insl
les
mov
dec
mov
pop
stc
mov
outsl
lock
dec
out
test
cmp
andl
jo
mov
sub
pop
nop
repz
cmp
jne
cli
inc
mov
int
lret
xor
es
insb
inc
out
loope
in
and
mov
fs
dec
or
push
js
dec
and
push
push
mov
sub
enter
sbb
push
sbb
xor
insl
insb
fucomip
mov
cmp
jne
jno
or
and
jns
dec
por
sub
in
mov
cmp
cmp
daa
lea
pop
stos
ret
outsb
fnstcw
or
ror
addl
iret
jbe
out
mov
sbb
lods
sub
mov
push
inc
dec
lods
cmpl
popl
jne
sbb
push
out
push
loope
scas
test
aas
shl
out
vmwrite
es
outsl
sub
stos
mov
cmpsl
int
sbb
or
push
mov
scas
scas
inc
sub
or
imul
std
or
movsl
ljmp
loop
lods
and
push
mov
mov
in
sub
and
sub
mov
or
or
sub
bound
arpl
arpl
popa
add
jl
or
iret
clc
out
sbbl
bound
jns
ljmp
shl
call
int
jns
mov
test
xchg
or
rorl
dec
jmp
aaa
popa
iret
out
daa
push
loope
and
jl
out
stos
sub
lea
arpl
mov
insl
test
test
dec
int
lea
outsl
or
or
sbb
add
xchg
gs
int
sbb
fiaddl
jle
sbb
stos
sbb
fwait
stc
into
mov
addb
pop
pop
je
outsl
int
adc
outsb
or
stos
aas
scas
mov
movsl
dec
lea
lods
pop
mov
loope
dec
ucomiss
or
pop
inc
dec
fisttpll
scas
icebp
jo
or
out
add
mov
lods
decl
pop
push
jbe
jbe
jmp
dec
movsl
ret
and
cmp
push
sub
aam
sub
dec
arpl
les
jb
xchg
orl
mov
dec
cmpb
add
cmp
inc
lea
out
lods
lds
fwait
sub
jl
mov
or
outsl
jecxz
xchg
mov
nop
outsb
cmpl
or
jmp
outsb
or
or
mov
ret
mov
mov
arpl
stos
dec
orl
das
leave
lods
lock
sti
iret
mov
xchg
ret
ljmp
js
mov
push
das
jnp
imul
jbe
ljmp
jb
insl
scas
ss
push
and
stos
mov
ljmp
in
sub
loop
es
mov
inc
pop
aad
shlb
mov
jmp
and
jns
test
mov
push
jb
sub
jmp
test
mov
loope
jne
sarl
clc
outsb
out
mov
pop
add
sub
mov
popa
scas
inc
lahf
movsl
aam
or
xchg
scas
leave
imul
push
mov
jno
test
add
insl
bound
andl
test
icebp
movsb
andl
rorl
jmp
popa
xor
das
cmp
mov
ret
ret
insl
iret
in
stos
punpckhwd
out
adc
sbb
stos
scas
fsubp
stos
addl
jo
mov
mov
arpl
mov
test
mov
int3
or
int
mov
or
orl
cs
sbb
mov
stos
dec
push
bound
inc
sarl
xchg
mov
loopne
shrl
cvtpi2ps
ja
or
icebp
clc
insb
enter
jg
inc
outsl
scas
subl
hlt
insl
sti
out
ret
imul
adcl
insl
jg
dec
cli
mov
jecxz
and
jl
or
mov
mov
push
aas
cs
out
insl
dec
add
test
call
push
jecxz
dec
pushl
mov
push
mov
sub
into
movsb
lods
sub
or
cmp
xor
add
add
insl
mov
inc
mov
lods
in
std
mov
mov
fs
mov
jl
dec
ljmp
out
scas
aaa
pop
out
les
dec
outsl
inc
add
sub
clc
xor
jnp
stos
int
jmp
or
dec
mov
stos
xchg
clc
inc
imul
or
jecxz
inc
adcl
ljmp
scas
cmp
sub
addr16
int3
push
es
add
or
xchg
int
lahf
sub
leave
xor
mov
nopl
pusha
mov
iret
push
sub
push
dec
sbb
jo
sbb
add
out
je
cs
mov
cmc
fs
out
dec
jne
out
sub
inc
mov
mov
jno
add
fwait
inc
in
or
int
sti
fildl
mov
lods
imul
inc
mov
mov
add
xchg
add
xchg
fwait
ss
mov
mov
push
int3
push
stos
push
iret
clc
add
dec
fistpll
punpckldq
mov
incl
outsb
mov
arpl
out
dec
jp
jbe
inc
orl
int
popa
jecxz
adc
loope
or
lcall
out
test
push
dec
inc
xchg
cli
adcl
and
sub
ret
testb
movsl
imul
mov
inc
ljmp
mov
rorb
arpl
pop
pop
cmpsb
cmp
sti
inc
leave
addl
movsl
dec
or
cmpps
mov
mov
xchg
add
and
vmovdqu
xor
lea
mov
popaw
fiaddl
xchg
std
ljmp
push
jmp
fwait
mov
jmp
lods
add
cltd
mov
neg
xor
mov
dec
dec
out
insl
mov
out
cs
sub
jle
cli
into
xchg
in
mov
addr16
loope
loop
cmp
and
bound
fisubs
sub
daa
bound
xor
lods
ljmp
ret
out
hlt
cmpsb
inc
push
mov
xor
push
cmp
lea
inc
xor
cmp
ljmp
sbb
xor
lock
inc
jle
loope
pop
and
nop
cmp
lcall
add
adc
mov
cmp
addl
lds
cli
lahf
arpl
lea
pop
dec
pop
push
test
lods
dec
sti
fisubl
hlt
mov
imul
test
mov
push
nop
shrl
int3
xchg
les
jecxz
dec
dec
or
push
int3
inc
sub
scas
ret
mov
outsb
lods
sysenter
mov
int
xchg
inc
scas
jmp
imul
jle
das
sub
push
daa
outsl
and
lods
sub
arpl
sbb
mov
or
push
dec
mov
in
dec
dec
pushf
mov
push
sub
mov
arpl
jl
mov
call
mov
fldt
mov
xor
inc
lods
outsb
cmp
subb
mov
repnz
test
repz
push
out
mov
and
sub
jmp
fcoml
jle
arpl
mov
dec
lret
or
xor
seto
lods
mov
dec
jne
xchg
in
andl
imul
scas
jge
mov
push
cmp
push
dec
sti
mov
xchg
push
cli
lods
adc
pusha
subl
inc
loope
rcll
movsl
lcall
mov
lret
push
mov
inc
xchg
aaa
cmc
pop
inc
imul
leave
and
outsl
outsb
into
ret
xlat
sti
dec
leave
iret
shlb
scas
jbe
cmp
xlat
jnp
push
sub
jb
in
scas
scas
fwait
mov
lea
scas
cmpsl
or
dec
stos
scas
lret
bound
in
pop
das
or
leave
lods
adcl
adc
push
sahf
aaa
hlt
cmpsl
sub
lods
mov
push
or
repnz
leave
fwait
scas
add
jecxz
mov
fcmovnb
mov
dec
or
mov
iret
push
arpl
fwait
test
mov
cmp
mov
dec
sub
outsl
dec
lods
add
pusha
inc
jl
nop
iret
into
jmp
sbbb
sti
inc
ljmp
jbe
test
mov
arpl
xchg
dec
xor
or
lds
jmp
hlt
sbb
pusha
outsb
insl
bound
jbe
mov
shrl
ds
jo
add
leave
sub
icebp
sbb
aad
or
jns
inc
dec
cs
out
scas
jbe
push
lret
aas
mov
roll
jg
outsl
pop
jo
imul
in
fnsave
nop
or
out
mov
dec
test
add
pop
imul
mov
sahf
mov
insl
lods
test
xorb
loope,pn
pop
arpl
dec
jl
dec
jae
mov
lods
call
sub
mov
sti
jl
ljmp
scas
and
loope
push
in
mov
inc
or
dec
add
popa
jb
dec
scas
adc
into
and
loope
loop
cmp
sub
jo
loope
test
cs
call
addr16
or
mov
xchg
dec
and
jb
jb
xor
push
lret
leave
outsl
and
sti
push
add
and
lods
lret
loop
popa
fwait
jnp
dec
mov
rcr
adc
fimuls
xchg
rorb
mov
add
insb
call
dec
dec
jnp
jecxz
leave
push
lock
sti
xorl
inc
xchg
mov
and
pop
push
and
sub
cs
arpl
pop
out
mov
stos
sub
ret
mov
out
push
jbe
insl
ret
test
call
arpl
icebp
xchg
mov
loopne
jg
dec
xchg
push
dec
xchg
fs
jl
and
xchg
leave
mov
push
repnz
xchg
popa
sub
mov
push
mov
push
mov
pop
push
aas
loope
aad
push
inc
aam
test
imul
mov
ljmp
inc
push
cmp
insb
cli
ljmp
sub
rcrb
dec
sub
in
lret
and
lea
pop
mov
stos
loop
cmp
lods
xchg
dec
jl,pn
push
test
cmpsb
or
out
fisubrl
push
sbb
sub
insl
adc
iret
mov
pop
test
push
xor
cmp
out
jmp
xchg
pop
or
stos
jo
jo
inc
add
das
sub
jecxz
test
clc
push
xchg
inc
punpckldq
test
or
mov
aas
inc
inc
scas
jecxz
or
mov
or
pop
insb
decb
mov
iret
sub
dec
decb
mov
cmp
lcall
mov
xchg
xchg
scas
xchg
jg
pop
and
out
mov
ss
orl
stos
jbe
lret
mov
loop
jecxz
hlt
dec
or
popa
js
sub
or
mov
or
scas
inc
ret
clc
sarl
bound
testb
cs
pop
jns
or
dec
loope
dec
pop
insl
inc
stc
mov
mov
add
jne
xlat
xchg
pushl
mov
ffreep
adc
push
cmp
stos
imul
lahf
lock
outsb
lea
int
lods
lret
test
stos
mov
addl
xchg
sub
faddl
das
dec
cmp
dec
insl
push
xchg
pop
dec
cmpsl
push
sbb
cltd
cmp
mov
push
mov
aas
or
and
cmp
ret
out
test
subl
je
insl
mov
lock
jnp
dec
das
mov
popa
add
or
sti
inc
push
dec
test
lcall
ljmp
iret
js
sub
stos
out
fldenv
stos
push
scas
lret
jmp
fists
je
mov
arpl
stos
ror
xchg
inc
xchg
sub
lcall
jl
arpl
sub
pop
daa
pushf
cmpsb
mov
pop
cltd
in
sbb
cmp
mov
mov
das
jne
dec
int
jp
mov
cmpl
and
dec
leave
stos
out
dec
int
bound
mov
insl
lods
mov
clc
push
repnz
daa
cs
cs
jo
stos
ret
sub
es
aad
mov
mov
fs
dec
icebp
lds
addl
mov
arpl
lock
mulb
xchg
imul
clc
lods
arpl
es
nop
loope
ljmp
stos
xor
leave
mov
ficompl
pop
rorl
jnp
ja
add
movnti
push
dec
ja
jecxz
cwtl
stos
outsl
mov
lods
sub
jnp
mov
lret
adc
mov
test
fldcw
jns
dec
cmp
mov
pextrw
lods
sti
adc
xchg
in
inc
sbbl
push
mov
mov
jmp
push
stos
fwait
das
xchg
imul
push
or
or
ljmp
insl
ret
ljmp
nop
lods
scas
or
sub
mov
popl
and
popa
ret
scas
pusha
pop
iret
push
lcall
push
movsl
and
call
xchg
xor
enter
sbbl
sti
mov
cltd
ret
inc
or
jno
inc
mov
ja
out
insl
mov
lods
push
cs
lret
aas
imul
push
push
addb
stos
rol
iret
xchg
inc
insl
xorl
sbb
das
cld
push
cmpsl
ja
pop
mov
jmp
inc
xor
cmp
clc
iret
out
shll
in
xorl
adc
test
imul
test
and
pushf
imul
jbe
mov
ja
daa
dec
sbb
leave
addl
jne
fcompl
clc
inc
inc
mov
lea
lods
outsb
jl
dec
mov
add
jae
sub
ret
inc
pop
pop
aaa
sub
add
mov
decl
fdivrl
ret
cld
roll
and
lea
mov
or
out
adc
and
mov
mov
pop
aad
popl
mov
test
mov
xor
jb
lcall
mov
and
fcmovb
stos
out
shrb
add
xchg
fcmove
push
cli
mov
out
push
test
and
hlt
sbb
out
cwtl
into
jg
dec
fadds
push
lea
adc
test
pop
adcl
mov
jns
vmovd
xchg
test
out
jle
mov
jg
dec
mov
arpl
orl
mov
xchg
dec
lea
sub
dec
dec
test
mov
mov
test
dec
ret
pop
push
dec
sarl
fdivrs
fadd
clc
enter
sar
push
shrl
int
outsl
push
rcr
inc
mov
push
inc
outsb
scas
jl
andl
leave
jecxz
ret
stc
sub
into
andl
fiaddl
inc
mov
scas
addl
lods
sarl
ret
test
out
and
or
aas
mov
pop
fxch
insl
sbb
clc
mov
push
adc
leave
das
nop
pop
or
mov
jmp
adc
add
lods
arpl
mov
jecxz
mov
mov
iret
cmp
xchg
mov
push
inc
jle
test
clc
jbe
scas
aam
daa
sub
ret
push
arpl
inc
mov
vpminsw
or
or
imul
dec
inc
into
dec
dec
jl
ljmp
lods
outsb
mov
jne
and
hlt
aaa
inc
dec
test
pop
lds
bswap
insl
jp
subl
cmp
lods
cltd
jle
add
or
mov
mov
mov
jl
dec
ret
sub
movsl
inc
loope
cmp
push
dec
lret
xor
push
aas
mov
xchg
and
faddl
lods
aam
out
in
enter
out
test
mov
das
sub
mov
add
outsb
ja
cmc
daa
scas
test
mov
dec
lods
iret
inc
and
jecxz
arpl
stc
imul
fs
sub
into
or
pop
lds
outsb
fadd
and
aad
stos
es
rorl
lahf
xor
and
in
shll
mov
sub
jp
mov
and
mov
test
dec
fsubrl
add
popa
out
mov
jmp
and
stos
push
test
imul
fs
outsb
nop
popa
dec
sub
inc
andl
movsl
add
das
inc
in
mov
add
cmpl
sub
pop
imul
push
mov
jbe
scas
or
add
jge
lock
jmp
inc
sbb
cmp
out
popf
and
dec
mov
nop
add
cmp
into
int
xor
bound
mov
mov
sub
inc
push
data16
sub
bound
xchg
cs
cli
dec
popa
cmp
dec
mov
inc
add
xorl
out
fwait
into
sub
push
jg
andl
ret
into
das
test
scas
insb
clc
int
push
jmp
int
xchg
xchg
add
mov
sbb
ucomiss
lods
ljmp
xchg
adc
movsb
dec
pop
push
popa
push
sbb
lret
hlt
std
fs
loope
mov
ljmp
and
jecxz
add
daa
dec
mov
mov
xchg
bound
stc
or
and
pop
stos
sbb
out
push
stc
xor
dec
add
sub
bound
sub
repz
mov
jmp
popa
or
push
test
inc
loope
arpl
cwtl
mov
xorl
sub
dec
pop
sti
sbb
or
sub
scas
ljmp
arpl
dec
es
in
push
pop
in
scas
mov
pop
punpckhbw
outsl
jl
mov
mov
sbbb
out
inc
aad
aas
dec
and
jecxz
add
lea
frstpm(287
mov
imul
mov
add
arpl
inc
mov
ror
sub
inc
bound
jnp
scas
or
outsb
adc
inc
imul
popa
mov
jbe
flds
std
xchg
mov
adc
sub
leave
dec
cmp
insl
popa
adc
push
cmpsb
out
arpl
clc
hlt
movsl
ljmp
stos
lret
mov
jmp
aam
fimuls
push
or
push
imul
or
lods
movsb
inc
jae
push
adcl
scas
stos
sbb
mov
in
lahf
out
xor
movsb
jne
insl
loope
out
repz
aas
xchg
mov
jb
lock
or
popa
or
jbe
int3
outsl
add
sbbl
xchg
cmc
insb
lret
lret
int
push
jne
imul
jb
fwait
test
jmp
scas
sbb
push
out
cmpl
test
or
or
dec
outsb
iret
int3
jb
inc
imul
mov
add
cs
outsb
sahf
lods
out
push
vpsubb
xchg
jnp
mov
ljmp
jne
push
outsb
jno
mov
lcall
pcmpeqb
sarl
orb
stc
jmp
cld
inc
mov
jmp
hlt
lods
cmp
mov
sbb
sub
inc
ret
sbb
pop
lret
push
lods
arpl
and
bound
arpl
xchg
int
scas
repz
adc
adc
xor
jns
loop
pop
and
fildl
and
inc
outsl
out
mov
enter
std
jecxz
loopne
mov
jo
leave
int3
and
or
and
daa
test
inc
inc
inc
xor
cmpsl
iret
jp
lret
xchg
nop
lret
inc
add
loop
jnp
or
scas
jne
mov
sub
into
add
daa
test
xor
int
or
inc
jecxz
bound
dec
sub
test
lds
test
popa
adc
mov
das
push
lcall
mov
pusha
mov
arpl
ss
xchg
lret
stc
and
add
stos
clc
sub
js
in
hlt
jnp
mov
or
add
add
mov
scas
hlt
cmp
pop
nop
mov
push
inc
scas
lcall
inc
mov
pop
fs
push
into
bound
jmp
pushf
iret
fstpl
pop
outsl
inc
imulb
ljmp
int
or
lea
icebp
insb
sub
or
mov
bound
jbe
and
loope
stos
xor
outsb
mov
insl
test
or
fcmovne
cli
inc
std
jmp
mov
sub
leave
or
out
add
mov
cmp
iret
test
adc
outsl
jmp
fwait
aad
stos
mov
lods
arpl
outsl
add
movsb
pop
andl
xchg
or
sbb
mov
lods
bound
and
fwait
xor
mov
add
mov
lds
loope
into
ljmp
sub
scas
mov
testb
bound
sub
mov
push
mov
movsb
andl
sub
int
jecxz
test
nop
sbb
stc
popa
movsl
mov
dec
gs
call
xor
inc
push
mov
xchg
and
lea
dec
mov
wbinvd
mov
mov
push
das
push
mov
xor
jp
lods
jno
out
mov
or
ret
into
clc
xchg
gs
cmc
dec
mov
mov
push
or
and
jno
testl
fildll
clc
stos
fisubrl
mov
xor
dec
and
cmp
dec
imul
dec
fsubrp
popa
sub
dec
xor
dec
into
es
mov
shll
add
or
shll
repz
rcrl
testb
mov
dec
loope
lods
inc
sbb
ljmp
ret
popw
into
ret
daa
hlt
jp
xrstor
mov
mov
push
ljmp
leave
inc
add
dec
mov
ret
xor
sub
and
faddl
pop
sti
pushf
scas
adc
inc
out
add
movsl
mov
dec
outsl
ljmp
sub
repz
push
decl
pop
stos
xchg
cmpl
insb
movsl
mov
push
fildll
pushl
daa
sahf
inc
xchg
fldt
jnp
dec
mov
arpl
pop
scas
fld1
jecxz
arpl
dec
and
scas
and
fadds
or
orl
cli
ret
int
loopne
and
and
jg
daa
dec
bound
mov
mov
out
dec
lret
add
or
test
lea
mov
sub
mov
sbb
xchg
inc
add
add
xorl
pop
out
out
inc
subl
mov
and
add
and
inc
iret
imul
call
sarl
jg
insl
jecxz
es
das
mov
dec
stos
ret
and
jo
add
mov
jmp
dec
add
rep
into
test
leave
or
jne
stc
shl
lahf
lds
movsl
popf
movsl
cwtl
lret
jp
mov
jg
shr
mov
bound
lahf
inc
lea
fsubl
sahf
out
test
int
or
lock
sti
addr16
lock
arpl
pop
das
in
mull
je
shrl
sub
movsl
sub
lods
cmp
stc
mov
js
arpl
cmp
dec
ljmp
adc
sbb
adc
dec
outsl
insb
jo
inc
inc
sbb
jge
bound
dec
out
mov
fwait
test
xchg
imul
push
iret
call
test
bnd
jb
and
cltd
dec
out
loope
in
aas
jle
add
fnstsw
sub
xchg
shrb
idiv
add
iret
add
lods
out
push
fwait
insl
out
dec
nop
xorl
sbbl
call
cltd
pop
add
out
movsb
sub
outsb
cmp
jmp
cs
movsl
sub
and
test
lods
xchg
imul
jb
pushf
orb
cs
aas
out
lock
out
ret
pop
push
imul
add
or
sub
xor
mov
outsb
mov
imul
add
mov
and
cmp
loop
or
repnz
dec
in
add
in
cmp
cmp
scas
outsb
cld
shll
ss
sbb
sub
arpl
das
nop
adc
xor
lds
xchg
les
pop
movsb
pop
dec
or
loope
sub
es
pop
push
cmpl
arpl
out
imul
mov
nop
jb
xor
inc
iret
mov
jp
dec
sub
into
je
lock
stos
mov
add
inc
lcall
test
xchg
test
cltd
nop
ljmp
insl
push
orb
test
ret
or
cmp
mov
and
add
or
loope
sub
mov
mov
outsl
clc
and
push
or
iret
or
rcll
jb
mov
pop
sbb
xor
test
mov
pushf
leave
loop
dec
daa
adc
inc
lahf
push
xchg
loope
mov
sahf
and
sub
nop
push
leave
dec
add
dec
and
adc
cld
mov
ret
adc
inc
jp
loop
nop
mov
sti
and
mov
cmpsl
pop
ret
dec
into
push
sub
adc
pop
ss
jbe
and
fwait
into
popa
subl
clc
pop
in
arpl
insl
cs
and
mov
mov
popa
jo
mov
dec
bound
and
in
and
insl
lret
bound
and
cmp
fwait
test
stos
out
xchg
subl
pop
adc
popf
fldl
out
mov
fistpl
ret
jo
cmpl
loope
into
add
outsl
cs
ja
ljmp
iret
fs
das
dec
subl
jae
sti
icebp
stos
movsl
mov
popa
fiadds
shrl
dec
imul
sub
scas
xchg
lods
std
and
mov
pop
mov
mov
push
inc
sub
jo
outsl
arpl
inc
lea
mov
in
std
mov
imul
dec
push
sub
or
mov
jge
movsb
subl
lds
loope
das
push
out
outsb
imul
mov
test
mov
out
or
aaa
aad
inc
ud1
mov
push
into
jmp
dec
leave
int
lahf
fwait
mov
mov
stos
insb
clc
orl
jo
shll
fisubrs
aaa
mov
add
ljmp
and
bound
fs
out
ret
xor
iret
mov
mov
ret
scas
clc
sbb
inc
sti
mov
enter
dec
mov
inc
cmp
arpl
out
iret
and
scas
arpl
dec
jb
lea
pop
jp
in
sub
push
in
jmp
shr
lret
adc
je
jmp
adc
in
arpl
and
dec
arpl
xchg
test
xor
push
inc
jo
jp
out
out
rolb
ret
and
xchg
mov
push
popa
pop
test
pop
mov
sbb
fadd
jb
bound
clc
mov
in
mov
pop
mov
dec
lret
lods
and
rol
or
ret
sbb
bound
lods
outsb
ret
jne
pop
stc
outsl
pop
adc
sub
test
inc
aas
mov
pop
jns
dec
dec
or
mov
mov
dec
rorl
and
fsubrl
or
das
movl
into
fsubrl
mov
mov
je
outsb
inc
or
outsl
or
mov
cmc
lahf
lods
loope
jmp
fisubrl
dec
mov
imul
popa
shrl
loope
cs
insl
imul
out
dec
mov
clc
loope
andl
in
outsb
mov
stos
jne
mov
mov
stos
xor
icebp
std
data16
push
loope
out
jecxz
or
repz
mov
push
mov
popa
mov
cmpsb
mov
xor
dec
in
ret
and
push
clc
popf
mov
mov
mov
das
ja
dec
push
aad
lret
lahf
sub
dec
imul
dec
pop
jno
push
out
mov
cs
xchg
and
negb
dec
lods
iret
bound
cltd
and
mov
add
dec
mov
nop
sub
pop
int
lret
sbb
lods
jns
jbe
subb
add
and
clc
xor
or
and
leave
mov
add
es
mov
and
pop
scas
sbb
sbb
push
or
dec
comiss
in
ret
jg
dec
xor
popf
clc
daa
ja
mov
imul
inc
inc
or
pushf
arpl
mov
nop
mov
push
xor
xchg
lea
xorl
in
idivl
jno
movsl
das
mov
outsl
mov
nop
push
jo
inc
ljmp
int
sarl
in
sbb
and
xor
lods
orl
sahf
or
cs
lret
push
ret
inc
sbb
and
std
leave
mov
and
mov
cmp
sub
mov
add
push
ret
xchg
je
xor
les
mov
dec
xchg
sub
and
arpl
jge
imull
mov
push
stos
mov
cmp
mov
je
test
bound
aaa
into
das
inc
mov
repz
int
outsb
sub
lods
paddsw
jecxz
dec
mov
sub
mov
js
inc
lret
adc
frstor
xchg
leave
and
mov
mov
jl
arpl
nop
jmp
lods
add
insl
mov
mov
outsb
bound
lods
mov
je
add
jl
test
push
or
mov
out
lods
fs
dec
in
lods
stos
jmp
mov
sub
addl
cli
mov
test
nop
dec
scas
jp
cmp
dec
es
lahf
leave
or
dec
aas
fs
int
addr16
inc
stc
and
mov
das
or
jg
test
push
pop
dec
into
push
sub
icebp
movsl
jl
add
cmpsb
mov
ror
out
jecxz
test
out
movsl
xorl
dec
push
adc
pop
lock
sbb
lods
xchg
sub
dec
jbe
pop
or
scas
out
in
xor
stos
xchg
fs
jne
movsl
sub
mov
adc
lods
imul
lret
or
mov
ss
int
jecxz
shl
ret
adc
lods
inc
mov
mov
rorb
test
mov
in
dec
mov
lret
hlt
scas
test
dec
cmovb
mov
inc
test
lcall
pmaxub
clc
pop
insl
pop
xchg
mov
pushf
lods
mov
arpl
scas
xchg
add
test
dec
push
das
lahf
or
stos
mov
inc
imul
mov
scas
and
into
jle
sarl
mov
outsl
dec
push
mov
loope
jl
imul
lea
dec
mov
out
or
out
mov
jg
insl
inc
mov
call
pop
jnp
jmp
push
push
icebp
in
push
movb
mov
cmp
mov
vhaddps
outsb
out
leave
ret
lods
push
push
mov
dec
pop
stc
scas
or
popf
in
test
dec
sub
jo
das
mov
shrl
xchg
test
sub
out
jnp
mov
sub
inc
mov
pop
mov
js
outsl
jg
jbe
jl
out
or
popa
dec
lods
inc
dec
pusha
scas
orl
mov
jb
and
mov
outsl
dec
iret
pop
or
insl
mov
loope
inc
or
mov
mov
out
sbbl
out
ja
dec
inc
or
pop
xchg
pushf
bound
adc
add
cmp
jg
jbe
lock
adc
in
jecxz
inc
das
dec
dec
in
cmp
or
mov
dec
in
mov
scas
shrl
jbe
leave
out
bound
dec
jno
scas
cld
add
ljmp
cs
out
xor
call
addr16
ret
dec
pop
movsb
push
cmpb
jne
cli
pop
jns
stos
push
or
jno
movsl
or
in
inc
fwait
into
lret
or
dec
jne
jb
out
out
loope
bound
into
lea
xchg
clc
sub
rol
mov
push
movsl
insl
adcl
in
adc
jnp
jecxz
out
out
xchg
mov
mov
mov
lods
clc
js
inc
test
jmp
insl
fstps
jnp
or
sbb
leave
jecxz
addl
and
inc
into
dec
mov
fwait
dec
loope
or
popa
rclb
ret
in
int
scas
mov
sub
jo
and
mov
ret
scas
pop
insl
arpl
jb
test
dec
ljmp
test
lahf
pop
loopne
mov
mov
out
lods
pusha
add
jns
lods
mov
dec
or
mov
out
and
mov
dec
fnstsw
out
scas
arpl
mov
xchg
mov
mov
out
gs
iret
lds
arpl
ret
cmpsb
lock
xor
dec
pop
and
lds
jb
jp
das
or
inc
iret
nop
or
pop
les
imul
mov
lea
jo
and
leave
adc
das
adc
sti
adc
jnp
nop
imul
stos
sub
and
or
cmp
imul
pusha
fldt
dec
xchg
fldt
bound
adc
loope
jb
arpl
xlat
jmp
dec
out
ret
mov
jmp
pop
sti
test
clc
mov
push
adc
sbb
sbb
mov
nop
jp
add
dec
arpl
jbe
mov
fnstsw
sub
cmp
arpl
and
cwtl
shl
mov
ret
out
out
das
push
inc
sub
iret
xor
clc
xorl
dec
imul
scas
or
out
test
repnz
add
stos
mov
popa
iret
jge
lret
sub
xor
pop
jmp
cmp
stos
push
mov
xchg
pcmpgtw
xor
cmpb
movsl
mov
iret
int
push
mov
cs
lret
adc
loop
xchg
mov
jb
cmp
pop
push
mov
dec
lret
sub
daa
iret
ljmp
popa
addl
imul
clc
or
bound
sub
das
inc
lods
lods
xchg
arpl
out
mov
mov
sub
cmpl
add
out
dec
shrb
xchg
imul
movb
nop
or
cmp
aas
or
movsb
scas
mov
clc
popa
mov
nop
jno
movsl
out
cmovg
sub
push
test
push
shll
jb
in
sub
test
in
push
push
xchg
push
test
scas
or
out
orl
out
stos
out
rolb
lret
shl
push
popa
movsl
into
ret
jnp
ljmp
jnp
lods
mov
mov
and
lret
mov
or
outsl
and
orl
fnstcw
int3
inc
jno
lret
jl
in
int
push
out
mov
ret
jne
loop
ljmp
subl
lea
mov
dec
lea
adc
xor
daa
dec
in
insl
scas
shr
daa
mov
aad
jnp
and
mov
and
mov
scas
mov
bound
xor
mov
pop
inc
dec
jp
mov
xor
lods
js
inc
insl
outsb
scas
out
js
and
lret
push
add
or
pop
in
and
push
movsl
sub
add
mov
scas
nop
cli
rorb
ret
dec
or
adc
jecxz
push
insb
cld
dec
ret
int
inc
rorl
clc
cmp
pop
jns
ljmp
inc
roll
xor
adc
cmpsb
cltd
icebp
mov
mov
clc
jp
pop
mov
addr16
lahf
dec
add
inc
jecxz
or
xchg
mov
add
test
jnp
test
pminub
nop
out
sub
inc
insl
nop
in
enter
cli
push
ljmp
scas
bound
out
repz
cmp
jmp
or
jecxz
stc
sbb
dec
adcl
enter
or
inc
dec
iret
lret
lock
arpl
daa
and
lods
or
adc
jge
test
and
jmp
sub
jne
out
or
sbbl
push
adc
bnd
outsl
inc
lods
add
jecxz
in
outsb
mov
adc
frstor
add
repz
addb
out
mov
jmp
sub
nop
out
test
insl
mov
mov
and
and
ljmp
mov
stos
push
loope
jne
push
push
adc
sub
das
popa
jmp
in
jg
leave
and
sub
mov
sub
icebp
clc
loope
stos
cmp
mov
insl
lods
movsb
add
popa
stos
mov
mov
call
mov
ss
insl
or
inc
mov
mov
in
shll
stos
dec
test
jmp
dec
mov
push
mov
sub
adc
stos
sub
lock
adc
add
xlat
mov
outsl
sub
cli
mov
jbe
and
mov
daa
jle
add
mov
ret
jae
clc
aad
mov
mov
push
cmpl
out
mov
mov
ret
sub
in
repz
or
jle
in
loope
jne
lahf
test
shrl
lods
adc
adc
jecxz
imul
push
and
imul
add
stc
mov
cli
bound
lahf
mov
std
jmp
dec
ljmp
mov
insl
ret
scas
scas
out
jne
nop
and
js
mov
lods
pop
mov
iret
pop
popf
loope
add
dec
dec
loope
out
push
xchg
mov
leave
les
sbb
int3
cs
sbbl
jp
dec
inc
xchg
dec
loop
dec
cli
mov
add
mov
xchg
and
adc
mov
sub
push
arpl
sub
xchg
jle
scas
mov
mov
aaa
cld
pop
cmp
add
push
pause
mov
cmp
sahf
dec
dec
add
pop
lea
or
pop
adc
sbbl
stos
in
ljmp
cs
inc
push
je
inc
lcall
lods
test
mov
imul
out
or
xchg
jecxz
nop
mov
scas
mov
cmp
sub
or
mov
and
cmp
dec
into
sub
mov
stos
scas
dec
jno
leave
fcompl
mov
inc
loope
lret
jmp
sub
in
lods
nop
ljmp
iret
mov
jmp
push
int
cs
add
into
add
add
loope
arpl
and
cmp
leave
mov
ret
dec
int3
js
jmp
outsb
das
iret
adc
cmc
pause
scas
int3
ud0
lds
ret
jg
scas
xchg
cmp
cmp
jbe
ljmp
push
pop
mov
lret
sub
orl
sub
out
dec
cmp
inc
outsb
stos
int
mov
mov
mov
arpl
loope
mov
in
outsl
dec
cs
ret
ja
ret
adc
insl
into
ja
lea
in
jbe
inc
movaps
jp
and
enter
divl
inc
mov
imul
movsb
ret
scas
mov
out
xor
lcall
daa
or
dec
dec
mov
adcb
cmp
lea
mov
into
dec
jl
add
mov
inc
mov
or
stos
push
or
loope
loope
scas
jbe
scas
inc
clc
orl
stc
pop
sub
leave
outsl
fucomip
testb
pop
imul
and
pop
jmp
sub
jl
imul
jbe
arpl
pop
in
xchg
iret
sbb
mov
and
push
loope
aas
arpl
adc
mov
lret
ja
cmp
scas
outsb
mov
data16
out
mov
jecxz
xchg
testl
out
sub
call
mov
mov
adc
outsl
imul
jne
or
ss
dec
outsl
cmp
pop
mov
mov
dec
xchg
fwait
mov
add
xchg
fwait
lea
nop
ljmp
mov
dec
int
fdivrp
je
into
push
mov
inc
lahf
jo
cli
ret
in
inc
xor
leave
lret
fmul
mov
pusha
xchg
mov
lret
fisttpl
or
popa
jecxz
lds
rcrb
dec
orl
xorl
jmp
outsl
rep
or
and
leave
lods
lock
out
sub
xchg
pop
xor
jbe
leave
iret
xchg
mov
sti
mov
push
sbb
bound
jl
imul
scas
mov
dec
das
xchg
rorb
pop
lods
mov
into
inc
cli
mov
and
or
inc
pusha
sub
int
pop
iret
inc
jecxz
jge
jbe
inc
in
dec
out
push
sub
out
jmp
std
jecxz
add
rorl
dec
push
inc
arpl
mov
xchg
push
test
orl
ret
andl
mov
test
leave
add
push
mov
add
jnp
jmp
jecxz
lods
adc
loope
enter
outsb
or
mov
out
inc
mov
push
sbb
pusha
jmp
ljmp
bound
out
test
repz
sahf
into
cmp
ret
out
test
popa
sbb
out
mov
cs
mov
lods
arpl
movsl
adc
pcmpeqw
popa
ljmp
pop
or
jns
arpl
xor
xlat
daa
jmp
or
jg
sti
nop
das
scas
mov
repz
or
jmp
mov
add
scas
leave
out
xchg
into
sbb
cmp
sbb
jmp
lods
stc
dec
jbe
pop
pop
fldt
xchg
jae
xchg
insb
loope
subl
lret
sub
outsb
sub
cmp
and
insl
iret
mov
jmp
adc
es
out
in
cmp
and
aam
lock
inc
push
outsl
jle
cmp
xchg
cmc
sub
cmpsl
daa
adc
into
imul
stos
pop
aaa
pop
cs
test
es
std
pop
jle
dec
out
ret
test
lods
int
out
push
pushf
lsl
pop
mov
stos
mov
mov
lods
or
push
pop
outsl
je
stos
nop
mov
or
das
lret
mov
jno
push
mov
jmp
sti
aad
mov
es
je
inc
bound
test
paddsb
pop
mov
int3
xchg
add
loope
sub
inc
inc
and
jmp
stos
int3
sub
jbe
pushf
and
mov
sbb
hlt
or
lock
in
cmp
call
lcall
or
fbstp
fadds
and
inc
pop
push
fwait
scas
jmp
or
lea
mov
clc
mov
jne
lds
test
mov
iret
or
ret
dec
push
jb
cmp
test
and
rorl
jle
ret
into
cmp
push
imul
dec
mov
loop
addr16
insl
leave
cmp
imul
out
mov
popa
add
push
ljmp
add
stos
xchg
and
lret
cmp
insl
push
mov
mov
iret
outsl
insl
scas
or
in
shll
push
std
dec
lret
ljmp
or
ja
imul
inc
scas
outsb
sbb
daa
orl
inc
rcll
ffree
pop
cli
inc
bound
out
and
adc
cs
sahf
mov
jo
scas
gs
and
mov
pop
lret
push
push
in
and
leave
and
scas
daa
jnp
arpl
out
test
cli
insb
lds
jp
das
test
scas
mov
rorl
sti
insl
dec
bound
mov
sub
jp
rcr
in
jno
lea
dec
leave
cmp
outsl
rcr
testb
mov
ss
push
leave
xor
adc
aam
int
mov
add
dec
in
inc
xchg
daa
jl
popa
dec
inc
jbe
push
lods
xchg
sbb
or
mov
adc
ljmp
push
sbb
jae
cmp
add
and
filds
sub
xor
mov
ret
in
popa
mov
xchg
mov
sub
lret
mov
ret
mov
and
stos
lcall
sub
add
andl
mov
cs
jmp
gs
or
and
out
pop
sbbl
insl
inc
sbb
arpl
mov
mov
mov
out
and
pop
inc
or
xchg
push
ret
out
lcall
loopne
xor
jp
lret
mov
mov
dec
in
popa
aaa
insl
sbb
out
leave
popl
push
into
stc
and
inc
mov
mov
jno
and
inc
nop
arpl
inc
dec
outsl
nop
in
cmpsb
into
fwait
ljmp
out
add
and
sahf
jg
mov
int
mov
sub
fwait
leave
add
popf
or
fisubs
mov
inc
lock
jo
jbe
lock
daa
mov
push
dec
sub
mov
outsb
test
mov
dec
mov
das
ret
stc
ror
pushf
mov
add
or
mov
fmull
sbb
fldt
sub
jne
outsb
push
bnd
cs
das
lods
jecxz
push
push
lret
and
arpl
out
inc
sarl
sbb
outsb
jo
mov
test
andl
pop
out
sub
lea
scas
loop
cmp
ss
in
aas
imul
cmpsb
jp
daa
xor
mov
bound
fisubrs
inc
lock
and
mov
mov
add
pop
dec
jmp
jo
inc
adc
mov
lret
cvttps2pi
cs
in
lods
scas
mov
and
loop
outsb
xor
sub
mov
test
in
mov
or
outsb
and
mov
jne
in
cld
sub
and
push
int
scas
jg
cmc
in
add
adc
sub
out
nop
jo
bound
sub
addr16
xor
ret
into
leave
xor
xchg
stos
insl
hlt
pop
xor
daa
push
cmp
lods
mov
leave
frstor
arpl
cmp
dec
out
mov
or
jo
inc
and
lods
cli
dec
daa
ret
mov
sbbl
nop
insl
or
hlt
inc
imul
leave
iret
fldcw
mov
pop
nop
xchg
mov
arpl
fsubrl
mov
movsl
mov
movsb
out
mov
aad
jp
paddb
icebp
shlb
mov
push
dec
in
out
out
add
push
mov
dec
test
jnp
jmp
scas
dec
out
clc
push
ja
das
hlt
ja
scas
insl
std
fldt
inc
stos
adc
daa
mov
sbb
test
mov
mov
and
mov
sub
and
loope
rorl
sbb
inc
popa
or
jg
clc
js
mov
add
push
or
lods
dec
fsubrp
dec
sbb
mov
or
insb
and
outsl
cli
in
sahf
dec
jb
orl
stos
inc
dec
lea
outsb
in
fidivs
in
and
ret
popa
daa
adc
out
sbb
xchg
outsl
jecxz
hlt
mov
or
lods
xchg
dec
jmp
xchg
cmp
int
jns
jne
jne
jo
std
or
jp
mov
out
loope
xor
push
add
out
nop
push
mov
out
clc
or
in
sub
bound
and
int3
out
lea
cmpl
iret
pop
mov
push
mov
xor
into
jb
int
and
mov
xchg
stos
push
scas
loop
stos
test
sub
out
jb
add
stos
mov
mov
testl
jp
mov
cs
cmp
and
in
cmp
cmp
mov
scas
ss
mov
addl
push
mov
adc
test
orl
insl
mov
cltd
cmp
dec
add
jge
movsl
mov
into
mov
sbb
cltd
and
out
cmp
push
mov
rclb
dec
lock
jo
in
dec
insl
sub
sti
cs
cmp
jnp
xorl
call
or
mov
mov
pushf
imul
mov
pop
loopne
imul
mov
stos
into
dec
sti
stos
jecxz
xor
cmp
inc
loope
sub
fwait
and
outsl
test
mov
iret
jle
aas
addr16
stos
cmp
jne
mov
jl
outsl
mov
add
or
mov
das
out
mov
movsl
add
int
pop
mov
push
movsb
xchg
sarl
mov
pushf
cmp
mov
shll
cmp
or
dec
dec
movsl
mov
sbb
sub
into
int
fmuls
in
insl
cmp
mov
jns
dec
cs
sti
into
sub
notl
ret
mov
flds
push
arpl
mov
fs
test
dec
add
sbb
hlt
cmp
dec
out
mov
out
leave
arpl
add
pop
mov
lock
or
int
or
daa
mov
xor
mov
sub
inc
das
int
inc
test
pop
repz
cltd
int3
inc
subb
jge
mov
int3
outsb
movsb
insl
inc
cmc
push
outsl
xchg
cmpsb
ret
add
fsub
mov
es
mov
inc
dec
cmp
ss
and
push
push
fsubr
sub
insl
rdpmc
inc
shl
icebp
inc
dec
call
int3
jno,pn
and
jnp
nop
imul
push
mov
cmp
dec
loop
inc
testl
es
or
dec
cwtl
leave
add
pop
cmpsb
adc
fldt
jns
aas
lods
jno
mov
mov
jecxz
xor
jnp
stos
mov
inc
aad
mov
push
movsl
mov
mov
push
cwtl
or
popa
lret
in
je
mov
std
mov
decl
jmp
fimull
jb
mov
ret
jno
mov
jno
scas
adc
leave
pop
push
lock
and
adc
icebp
push
add
jae
addr16
jmp
scas
out
mov
mov
push
and
movsl
pop
repz
je
iret
inc
jmp
push
xchg
cmp
arpl
jbe
in
lods
daa
push
popa
xchg
insl
dec
lret
outsl
or
inc
call
mov
mov
xchg
mov
pop
js
sub
out
inc
leave
adcl
insl
test
clc
jo
inc
add
imul
jne
lods
mov
lcall
nop
pop
push
inc
outsl
xor
ljmp
scas
or
test
sbb
bound
mov
push
inc
lods
push
mov
out
bound
mov
sub
xchg
clc
jne
loope,pn
cs
imul
test
mov
cmc
push
jle
sbb
jp
loope
fs
stos
insl
fld
imul
lret
out
inc
jbe
sbb
push
cmpsb
or
in
lods
pop
dec
mov
aam
stos
mov
inc
scas
scas
ret
into
dec
jmp
call
push
dec
xor
arpl
rorl
inc
jge
leave
and
add
inc
inc
adc
shl
mov
lock
mov
jle
and
add
jo
jecxz
mov
cmp
and
ret
inc
shrl
mov
into
call
xchg
dec
fistl
mov
sub
in
fistpll
sub
aam
jno
leave
lods
pop
mov
arpl
scas
leave
arpl
cltd
sub
inc
cmp
arpl
nop
out
mov
loop
cwtl
and
dec
jecxz
and
out
das
out
loope
ret
adc
gs
ja
sbb
adc
ficoms
outsb
std
mov
and
jge
in
jecxz
mov
les
lret
clc
cmp
add
inc
movsl
mov
cs
lock
or
mov
xchg
sub
loopne,pn
pop
test
inc
sbb
out
xor
pusha
rol
xorb
fisttpl
jns
leave
and
cltd
movsl
dec
sub
bound
mov
mov
stos
xchg
scas
xchg
jmp
cmpl
push
add
lret
fimull
pop
adc
cmpsb
and
cs
mov
mov
sub
outsl
dec
js
cmp
insb
je
scas
movsl
out
das
into
pop
je
imul
jle
test
add
scas
movlps
inc
sub
popa
sbb
outsb
iret
in
ljmp
mov
pushf
pop
and
stos
jmp
in
mov
mov
into
jg
or
dec
xchg
cmp
out
leave
pop
pushf
or
outsl
or
jmp
insl
scas
cmc
mov
jno
out
mov
sub
and
mov
and
roll
out
mov
xchg
imul
insb
dec
addl
add
daa
mov
mov
cmpsl
dec
insl
ja
mov
scas
push
nop
sub
fwait
aas
iret
add
jo
dec
roll
dec
imul
daa
daa
lods
lret
dec
dec
scas
xchg
movsl
out
jns
test
jbe
jb
dec
imul
and
inc
inc
dec
movsl
rcl
ljmp
fmull
jne
out
int
inc
mov
jne
sbb
scas
out
insl
jp
mov
pop
sub
sahf
or
int3
cmp
je
scas
jns
jbe
test
outsb
mov
lock
adc
out
and
popa
inc
sub
push
mov
js
cmp
std
sub
enter
outsb
or
mov
in
dec
lret
sub
sub
out
frstor
out
jg
jns
es
stos
into
mov
iret
scas
mov
movsl
dec
mov
arpl
mov
mov
or
ret
and
imul
out
sbbl
lret
out
mov
sub
ljmp
or
mov
push
lea
push
insl
mov
ret
scas
in
mov
cmp
lds
jno
cltd
mov
mov
push
leave
mov
movsb
lods
in
repnz
imul
cmp
out
dec
dec
inc
andl
sub
lods
mov
ds
lahf
outsl
bound
or
scas
jge
int
leave
mov
mov
or
push
jmp
mov
or
ret
cmp
movsb
sarl
mov
daa
add
stos
jg
rolb
add
fsubp
inc
out
sbb
lret
imul
sub
je
out
push
jno
cmpsl
mov
add
scas
jno
mov
pusha
cld
cld
pop
arpl
repz
into
mov
fs
pop
sti
jmp
jp
dec
sub
fprem1
daa
sub
out
sbb
adc
mov
push
mov
iret
mov
mov
imul
mov
jno
push
pop
cmp
scas
lea
jmp
xchg
and
dec
xor
add
scas
movsl
xchg
lret
or
pop
pusha
mov
push
loope
or
scas
pop
xor
mov
mov
sub
xchg
outsb
fwait
rolb
mov
add
dec
out
insl
mov
js
add
out
insb
jb
sub
jge
pop
ret
jbe
outsb
ljmp
and
jmp
push
inc
insb
ljmp
insl
lret
adcb
call
mov
and
bound
mov
stc
subl
popa
js
dec
dec
mov
cmp
mov
cli
dec
inc
iret
pop
xchg
jno
cmp
rorb
subb
mov
add
dec
mov
inc
mov
xchg
jl
lret
sub
mov
dec
mov
or
scas
imul
cmp
mov
mov
clc
pop
mov
mov
out
or
inc
loope
popa
dec
insl
jns
dec
arpl
arpl
adc
loope
sub
mov
inc
mov
or
or
scas
aad
mov
add
pop
mov
inc
pop
fstpt
je
stos
in
adcl
js
dec
dec
and
lods
int3
into
loope
push
push
mov
mov
mov
sub
xchg
lods
lods
adc
inc
subb
mov
xor
ret
mov
dec
leave
mov
outsb
jbe
les
outsl
pavgw
lods
jmp
fisubrs
dec
or
and
jg
loope,pn
out
jno
mov
lret
fildl
scas
in
sbbl
dec
adc
push
inc
and
pop
jge
inc
das
jmp
jg
dec
data16
xor
lret
lcall
gs
mov
subl
mov
add
loope
lock
adc
dec
subl
popf
xchg
jo
insl
lock
inc
sbb
lret
mov
mov
repnz
xchg
jmp
dec
lret
pop
sub
dec
aaa
arpl
inc
ljmp
xchg
leave
xorl
xor
ljmp
insl
imul
or
mov
shrb
inc
lods
xor
mov
lahf
cmpsb
dec
push
push
inc
imul
scas
mov
xchg
jne
push
xchg
dec
push
push
cmp
repnz
or
mov
jge
push
and
insl
fs
or
sub
jl
mov
dec
mov
jno
and
mov
fstps
inc
adc
sbb
and
popl
rorl
ret
dec
scas
mov
ds
lds
push
in
mov
repnz
or
jmp
add
inc
add
cwtl
lods
iret
shr
or
inc
outsb
xor
inc
jnp
popa
mov
je
lods
dec
inc
imul
ret
cmc
or
sti
dec
out
call
push
es
ret
cld
add
cli
test
out
ds
push
lret
or
xchg
lock
sub
dec
mov
cld
outsb
mov
leave
mov
cmp
cmpsl
sub
add
jbe
push
je
imul
mov
xor
das
scas
inc
stos
loopne
ret
pushf
out
cs
cmp
out
mov
paddb
je
aas
mov
mov
or
orl
outsl
and
add
mov
loope
add
out
or
xchg
mov
add
adc
dec
adcb
stc
push
stos
lahf
daa
iret
aaa
lods
outsb
repnz
sub
mov
jecxz
fisubl
orb
dec
inc
into
loope
add
das
les
imul
out
int
lds
cmp
cmp
add
pop
ret
subb
les
cmp
insb
nop
sub
mov
shrl
push
loope
pushf
inc
and
fisubrl
xchg
xchg
add
xor
je
mov
jbe
out
bound
and
je
push
jge
adc
mov
and
leave
mov
out
sub
in
cs
mov
jb
sub
mov
sub
scas
clc
lods
pop
cld
jae
scas
jg
mov
push
das
xchg
sub
mov
push
popl
mov
sub
imul
outsl
loop
aas
popa
and
dec
test
xchg
cmp
sub
push
xor
dec
ret
mov
mov
adc
stos
divl
fldcw
lcall
sub
scas
sahf
xchg
cmp
out
repz
or
ljmp
out
jecxz
sub
dec
cmp
into
out
inc
fs
and
dec
inc
imul
mov
out
lea
loop
out
cmpsb
nop
inc
fsub
stos
call
fisttpll
loopne
rorl
xchg
cltd
ret
dec
pop
dec
lods
mov
xorl
cli
xor
ret
lods
add
sub
fdivrp
dec
adc
iret
mov
sbb
outsb
ret
xorl
xchg
jecxz
lret
lret
out
lods
pmulhw
xor
sub
xor
into
and
in
lods
xor
or
ret
mov
outsb
lea
push
outsl
push
lret
fucomi
lret
inc
push
mov
test
es
inc
jle
push
inc
jb
into
out
nop
ljmp
outsl
test
push
loope
jns
cmp
sahf
sub
xchg
xchg
add
std
bound
mov
scas
mov
sahf
push
and
jo
lods
imul
pop
mov
ljmp
dec
or
js
popf
mov
popa
push
or
cli
frstor
xchg
jg
jo
inc
mov
and
or
out
jns
in
sbb
mov
dec
shl
add
shlb
outsb
lods
or
addr16
and
mov
mov
test
sub
mov
shrl
fidivl
mov
in
ret
add
sbb
or
ljmp
inc
stos
dec
cwtl
pop
mov
outsb
or
mov
xchg
into
lcall
loope
arpl
mov
and
lret
call
mov
pop
adc
test
mov
jecxz
and
loope
hlt
repnz
es
cli
or
insl
inc
lcall
or
pushf
insb
jecxz
push
pushf
scas
loope
or
mov
or
pop
outsb
outsb
icebp
mov
mov
fwait
out
mov
dec
sbb
sub
std
fbld
cld
fildl
jecxz
nop
imull
popa
shll
mov
jns
mov
stos
lods
pop
jge
adc
jmp
clc
loope
lods
into
add
int3
insl
add
popa
outsb
pop
ret
mov
sbb
sub
gs
xchg
dec
push
mov
mov
ret
outsb
pushf
add
ljmp
out
xorl
das
jbe
cli
dec
ds
fimuls
inc
jmp
sarl
inc
call
jecxz
ja
insb
ss
outsl
in
sub
iret
mov
aas
sub
lret
adc
scas
cmpl
ljmp
ret
mov
out
pop
leave
jecxz
fiadds
repnz
out
mov
testb
in
sub
inc
addr16
imul
dec
push
jp
dec
nop
lret
and
and
push
subl
jno
pop
insl
dec
sar
jbe
imul
mov
ret
movsb
popf
loopne
call
call
stos
add
or
jle
cltd
imul
cmp
inc
lds
dec
into
das
dec
pop
add
je
inc
mov
mov
xchg
in
push
mull
out
mov
adcl
xchg
sub
push
shrl
add
into
mov
stos
cs
repnz
sub
popf
cmpsb
cmp
addb
dec
and
sbb
clc
arpl
sbb
setne
mov
sti
dec
inc
and
stos
push
inc
fmull
or
out
leave
mov
jns
add
pop
add
jb
fnsave
dec
dec
andl
lret
add
test
mov
pop
ret
test
ret
fs
sbb
cmp
inc
sub
in
dec
or
jmp
imul
and
sar
push
dec
daa
mov
test
int3
jb
inc
add
in
cmp
scas
int
or
mov
nop
ret
dec
inc
sahf
in
vdivsd
call
dec
mov
ljmp
inc
cmp
inc
cmp
out
mov
ret
dec
sub
scas
add
scas
mov
mov
dec
jo
push
dec
roll
daa
fwait
xchg
mov
mov
in
xchg
fcmovnb
out
adc
std
in
dec
cli
and
scas
pusha
mov
lahf
cmp
rclb
imul
mov
jp
fidivs
ficompl
add
arpl
fwait
insl
dec
dec
or
push
mov
lret
jecxz
repnz
xchg
push
leave
fildll
adc
andl
sbb
push
sub
dec
das
out
ret
sub
dec
fwait
in
mov
jns
outsb
jbe
out
sub
inc
nop
dec
and
das
outsb
and
movaps
or
dec
mov
pop
add
jno
xchg
xchg
bswap
lods
addl
popa
or
into
ret
push
int
lea
sub
cwtl
mov
clc
xchg
test
jecxz
xchg
cmp
iret
xchg
fimuls
pushf
andl
movsl
sahf
dec
insb
push
mov
inc
or
dec
xchg
stos
cmc
lret
jle
fs
push
test
sub
int
xchg
bound
pop
sbb
inc
xchg
push
in
rclb
add
outsl
or
lret
js
or
dec
int3
sbb
movswl
leave
mov
lods
jae
cmpl
and
sbb
push
xchg
cmp
popa
lods
lods
push
es
mov
cmp
xchg
lods
orl
cmp
dec
stos
add
data16
movsl
or
mov
outsb
xlat
jb
sbb
jecxz
scas
scas
sar
ljmp
jge,pn
out
rolb
leave
xchg
mov
pusha
int
mov
push
test
inc
or
int
or
jmp
xchg
js
mov
sub
outsb
or
inc
jo
and
jb
popa
out
jecxz
dec
jl
ret
into
inc
mov
lret
xchg
mov
mov
insb
mov
test
mov
mov
ret
sahf
sub
sub
aas
pop
in
scas
cwtl
sbb
loop
loope
daa
hlt
add
iret
sub
mov
cmp
scas
nop
sarl
stos
cmp
push
xchg
dec
push
leave
mov
inc
jp
jne
inc
jecxz
into
out
roll
dec
call
outsl
mov
test
lock
shll
lahf
lods
or
je
stos
mov
leave
out
inc
pop
fwait
dec
cmpxchg
mov
fisubs
or
pop
hlt
cli
loop
testb
movsl
divb
add
mov
repz
mov
mov
pop
insl
ljmp
ret
inc
mov
pop
shr
std
mov
sub
jo
bound
inc
dec
inc
inc
js
ret
outsb
add
loope
push
or
das
mov
imul
subl
and
test
in
test
or
shrl
mov
pop
mov
int3
int
and
fmulp
loopne
push
loopne
jmp
inc
stos
add
mov
mov
scas
mov
stos
xchg
leave
mov
nop
jp
jnp
mov
inc
mov
push
jne
outsl
inc
jmp
test
mov
insb
pop
iret
loope
in
sbb
stc
dec
mov
stos
inc
jecxz
mov
adc
pop
outsl
jecxz
add
or
inc
xchg
scas
push
jle
cmpsb
sub
popa
lea
sub
daa
or
test
mov
insb
js
push
push
and
out
sbb
dec
cs
mov
dec
sub
insl
repz
or
jo
nop
pop
in
mov
inc
out
mov
in
mov
and
push
outsb
jecxz
sub
in
and
xchg
adc
lods
test
insl
hlt
lds
mov
ret
es
bound
sarl
arpl
out
dec
insb
lea
orl
lcall
and
or
test
lret
test
lods
test
das
jb
cmp
stos
xchg
arpl
mov
inc
mov
in
jbe
bound
dec
or
ss
sub
mov
pop
and
and
loopne
test
cld
in
sub
xchg
out
adc
cmp
out
push
div
inc
inc
sbb
push
adc
adc
out
adc
add
cmpsb
lea
addr16
mov
push
xor
pop
cld
iret
insl
arpl
orl
cltd
xor
xlat
mov
dec
push
inc
out
outsl
jmp
lods
lahf
bound
sub
jl
out
mov
inc
and
inc
outsb
mov
arpl
shlb
jnp
mov
loope
xchg
lods
stos
mov
xchg
mov
mov
push
mov
xchg
sub
outsb
inc
adc
scas
push
loope
ret
mov
in
sarl
ljmp
inc
xlat
inc
stos
lret
lods
or
push
out
outsb
or
arpl
push
sti
adc
aaa
lret
pop
cs
sub
in
mov
jnp
and
orb
inc
leave
mov
ljmp
les
int
into
push
stos
or
rorb
addb
sbb
and
mov
out
lds
addl
inc
jecxz
lea
add
test
dec
mov
aaa
dec
or
mov
out
outsb
imul
mov
rcrb
test
sub
flds
push
jmp
pop
fcompl
mov
push
rcrb
jge
fsubrl
dec
cs
jp
ljmp
ret
iret
orb
imul
lds
test
repz
xor
and
jmp
sbb
iret
jb
push
sub
mov
cmp
pop
iret
je
sub
pop
mov
mov
sub
add
mov
insb
leave
sub
nop
adc
push
ret
cmp
ror
mov
test
loope
lea
push
mov
ljmp
dec
orl
rorl
mov
or
insb
loope
into
dec
test
iret
subl
loope
sub
xchg
sbb
repz
test
jecxz
sbb
jns
push
leave
cltd
out
or
arpl
or
mov
mov
repz
jmp
shlb
clc
dec
and
lods
lea
dec
jne
inc
subl
int
ljmp
mov
scas
cmp
cvttps2pi
mov
sahf
push
outsl
rorl
in
cmp
push
nop
test
imul
cld
popa
adc
test
sub
and
cmp
mov
mov
jl
push
or
imul
dec
or
push
loope
ljmp
sub
sub
aam
movsl
insl
mov
mov
ret
loopne
hlt
iret
mov
mov
stos
mov
pop
inc
stos
out
scas
dec
lods
xor
add
xlat
and
cmpsl
in
iret
pshufw
lods
add
hlt
jae
arpl
dec
pop
fwait
add
int
mov
inc
filds
push
dec
stos
sub
sub
dec
cs
pop
sub
int
jb
shr
mov
outsl
je
into
sub
mov
fldt
and
bound
push
add
stos
test
ret
leave
faddl
and
pop
loope
imul
addl
shl
sbb
das
sub
xor
sub
iret
enter
adc
sar
pop
dec
out
cs
or
pusha
xchg
add
add
or
mov
add
mov
imul
pop
sub
lock
aas
sub
shll
test
std
imul
or
nop
pop
mov
mov
stos
test
cs
mov
nop
test
or
outsb
sarl
je
or
nop
and
mov
in
mov
dec
inc
frstor
lds
or
leave
add
mov
mov
adc
mov
arpl
cwtl
sarb
mov
arpl
daa
out
es
and
outsb
gs
mov
and
stc
test
adc
add
or
xchg
adc
mov
or
sbb
jne
pop
fistpll
notl
in
xchg
lea
je
jne
cmp
and
imul
outsl
je
or
gs
cld
push
loop
lds
gs
adc
mov
xor
sub
ss
sub
ror
sub
jno
inc
loope
subl
int3
push
out
lods
fisttpll
cs
bound
inc
outsb
push
jo
or
dec
push
in
xor
jecxz
jmp
mov
and
mov
or
xchg
and
lret
loope
and
ret
or
lods
sub
inc
sub
jecxz
rorl
cli
repnz
adc
or
stos
and
or
ret
xchg
mov
ret
lods
xchg
insl
outsb
mov
inc
inc
ret
out
pop
rclb
test
jne
arpl
mov
fmuls
rorl
inc
jmp
ljmp
xchg
xchg
out
popa
sub
addl
xchg
inc
out
lods
and
jns
icebp
out
and
or
out
pusha
mov
dec
jns
jo
lods
test
imul
mov
jmp
sub
andl
xchg
xor
dec
sbb
int3
dec
push
sub
lahf
pop
mov
mov
das
mov
aad
scas
pop
mov
ljmp
stos
inc
ja
or
nop
dec
imul
subl
xor
test
stos
ret
repnz
dec
cli
inc
in
orl
mov
es
jmp
push
shll
aaa
mov
sub
mov
call
iret
arpl
cmp
sub
outsb
and
lods
in
movsl
mov
xchg
add
mov
fsubs
lods
mov
mov
xchg
inc
mov
out
inc
add
lock
pop
outsb
and
mov
jl
ret
test
and
arpl
scas
and
out
mov
or
cmp
jbe
lds
lods
iret
cmp
sbb
lahf
mov
outsb
mov
out
leave
push
out
sub
out
orl
fstpt
mov
mov
fs
or
jne
sbb
mov
push
lcall
xchg
xlat
fadd
ret
iret
out
outsb
je
cs
mov
stos
sti
dec
imul
into
popa
call
or
mov
or
push
shl
loop
lret
or
sub
loope
unpcklps
je
daa
flds
mov
jmp
jp
in
push
jb
lahf
dec
lods
sub
mov
xchg
orl
mov
dec
xorb
jb
out
or
out
fs
stos
dec
lods
dec
out
mov
sbb
scas
or
sub
jp
test
ret
orl
nop
jg
cmp
jge
lods
bound
mov
dec
scas
lret
and
sti
outsl
ret
test
adc
into
sar
scas
out
dec
incl
leave
into
add
xchg
lods
ja
pushl
pop
insl
xor
lds
in
ljmp
mov
push
mov
rorb
fs
popa
mov
dec
dec
mov
mov
push
out
dec
jbe
addr16
ret
jmp
dec
unpckhps
bound
jecxz
out
or
mov
mov
sbb
movsl
ljmp
int
jo
dec
out
inc
popa
jno
scas
insl
xor
enter
sbb
clc
dec
sub
mov
jg
leave
jne
xor
jmp
add
addr16
lods
dec
inc
scas
dec
xchg
push
push
pop
push
mov
pusha
mov
lret
ret
stos
ss
lods
sub
into
outsb
mov
xchg
push
test
leave
stos
bound
fwait
in
insl
sub
dec
arpl
push
pop
cmp
aam
outsl
lea
mov
cld
sub
popf
outsb
mov
inc
inc
inc
dec
or
add
xor
jne
dec
xchg
rorb
pop
cmp
inc
orl
daa
iret
push
out
pop
data16
in
in
das
mov
ret
push
push
lahf
pop
ljmp
mov
std
repnz
jno
and
mov
or
dec
mov
out
mov
lret
sbb
cmp
jmp
adc
inc
cmp
pop
out
nop
es
adc
fistpll
shrl
or
lock
mov
int
dec
insl
mov
nop
or
fcmovnu
shll
gs
adcl
clc
out
lea
pop
sub
mov
pop
jge
cwtl
mov
mov
std
nop
push
scas
ret
mov
aas
mov
mov
les
jmp
ja
dec
lods
vphadddq
shll
or
std
pop
pop
mov
jne
pop
jo
test
sbb
or
mov
jmp
mov
out
push
push
or
and
lods
movb
jb
leave
sbb
jmp
add
or
jb
sbb
hlt
sub
mov
mov
arpl
xchg
nop
cmpl
ret
lret
jbe
xorl
pop
mov
ljmp
lods
jbe
in
dec
add
ret
loop
bound
das
fistpl
sub
ret
andl
cmp
mov
adc
in
pop
mov
mov
push
sub
or
lock
lea
out
sbb
leave
int
xchg
mov
xchg
out
sahf
dec
stc
lods
scas
daa
out
and
hlt
mov
loop
repz
inc
lods
add
fcoml
sub
aam
sub
mov
ljmp
jmp
xchg
xchg
sub
orl
jmp
es
push
mov
sbb
mov
into
test
jb
insb
sbb
dec
pop
inc
inc
xor
push
or
sahf
mov
add
pop
and
fs
sbb
test
data16
xchg
arpl
sub
loopew
jbe
mov
scas
mov
cmp
dec
das
repz
popa
cmp
inc
das
mov
fcomi
mov
loope
push
rcr
add
js
sub
add
jmp
push
loope
jo
dec
or
bound
lea
pop
lods
push
pop
mov
jae
out
cmp
pop
ficoms
and
imul
in
pop
out
je
insl
scas
or
stos
jo
sub
or
xchg
andl
arpl
arpl
stos
inc
out
dec
adc
xchg
or
ret
add
aas
outsb
into
dec
lahf
adc
sbb
out
add
inc
xchg
mov
lahf
je
jb
sbb
popa
jbe
call
mov
jbe
scas
ret
shlb
sub
scas
pop
cmp
push
and
out
iret
dec
stos
xchg
outsl
and
add
pop
clc
out
je
insl
dec
imul
popa
mov
rolb
repnz
xchg
int
inc
dec
cwtl
fildl
xor
jb
outsb
or
xchg
or
iret
js
xchg
cli
popa
fsubl
subl
cld
sub
clc
mov
dec
and
testl
add
lret
out
scas
pop
jle
add
jne
fistps
pop
movsl
cmp
sub
and
shrl
xor
mov
mov
xchg
into
mov
sbb
dec
dec
imul
dec
insl
jns
std
fs
lret
hlt
push
xchg
das
shr
js
push
inc
int
insl
add
mov
jo
test
dec
insl
popl
dec
dec
lea
jno
stc
push
xor
pop
mov
dec
mov
movsl
in
mov
jno
or
mov
push
push
push
or
insb
aam
test
sti
pop
nop
push
mov
sbb
mov
or
inc
clc
into
inc
int3
aam
mov
jbe
xchg
lret
insl
out
xchg
out
dec
inc
add
in
gs
int3
lods
mov
mov
sbb
push
clc
iret
lret
sbb
bound
dec
inc
fdivrl
and
sub
and
stc
das
out
into
xor
divl
scas
jne
inc
jl
scas
popa
inc
and
and
leave
fsubrl
push
testl
jno
jmp
inc
movsb
mov
push
mov
dec
std
mov
or
mov
and
mov
dec
fwait
push
out
scas
cmp
sbbl
ret
inc
mov
add
ljmp
cli
add
lea
int3
icebp
add
cld
jp
scas
cmc
inc
imul
cmp
das
icebp
inc
out
in
scas
pop
cs
xchg
mov
jecxz
les
jge
or
insb
cltd
nop
inc
jecxz
jne
sub
ret
ret
mov
mov
arpl
or
adc
loop
inc
inc
lret
movsb
arpl
mov
mov
or
lds
call
jmp
adc
ret
les
sbb
dec
jb
loop
dec
sti
sub
insl
mov
sub
fidivs
dec
cmp
mov
dec
sub
sbb
mov
sub
adc
dec
addr16
and
icebp
pop
inc
lods
scas
mov
mov
mov
or
sub
test
lds
cltd
jnp
sub
sbbl
leave
iret
mov
push
adc
js
imul
dec
push
sub
sub
lea
loope
icebp
xchg
mov
inc
jbe
xchg
mov
ret
mov
push
out
jae
es
fisubrs
dec
sti
test
adc
xchg
dec
sub
jmp
xor
jne
pop
mov
pop
shl
aaa
sub
incb
movsb
jle
push
jne
lret
xor
xor
nop
add
dec
test
adc
push
clc
dec
add
dec
dec
testl
mov
punpckhdq
cmpsb
out
daa
icebp
and
test
xor
dec
push
bound
and
jmp
imul
add
mov
inc
aaa
push
insl
fsubl
mov
sbb
xchg
inc
out
fwait
insl
into
push
pop
iret
out
leave
dec
das
and
std
outsl
or
jb
cmp
jno
sbb
xor
mov
xor
das
xor
mov
inc
fists
sub
xchg
mov
addl
sbb
in
insl
sub
test
or
cs
popa
inc
cli
pop
mov
and
scas
idiv
ja
and
mov
insb
in
jl
outsb
sub
loope
test
xor
inc
jo
stos
clc
ljmp
insl
ret
fwait
bound
leave
in
push
inc
jg
stos
push
nop
xchg
ret
mov
jb
jg
sbb
fwait
inc
sub
dec
and
jmp
sub
add
hlt
pop
lods
loop
into
mov
lret
adc
insb
cmp
insl
nop
jne
loop
out
fldenv
xchg
mov
pop
jae
inc
int
lea
sub
leave
movsb
lret
push
or
ljmp
das
push
cmp
and
je
arpl
cmp
xchg
data16
pop
in
in
xor
inc
inc
insl
jne
into
loop
lea
fisubl
ret
xor
ss
and
movsl
jb
stos
fucomi
dec
xor
out
bswap
push
add
xchg
mov
mov
mov
or
cmp
and
or
cmp
mov
pop
stos
cld
shll
push
cmc
dec
out
das
mov
lods
out
mov
inc
jmp
ret
faddp
add
fucomip
repz
gs
clc
cs
mov
fmull
jno
lods
ss
fwait
arpl
dec
into
test
nop
repz
rorb
outsb
test
rclb
sbb
xchg
imul
and
in
add
out
jbe
mov
pop
leave
lods
bound
dec
sbb
or
test
stos
mov
mov
inc
bound
dec
mov
and
loopne
lods
je
test
sub
int3
jecxz
sarl
fwait
and
insl
xlat
orb
repz
mov
out
or
jnp
out
iret
ret
mov
je
ret
add
insl
insl
pop
lret
sub
jecxz
iret
scas
xchg
nop
fndisi(8087
leave
dec
out
inc
add
out
sbb
mov
movsb
or
clc
scas
pusha
fwait
arpl
rorl
stc
mov
mov
and
xchg
imul
xor
push
out
and
dec
test
rorl
loope
inc
fucomip
notb
push
subl
mov
mov
stos
int
sub
gs
fldt
dec
jmp
xchg
hlt
ret
lret
push
into
fmull
jge
push
xchg
faddl
lea
sahf
arpl
in
shlb
add
jbe
out
add
addb
dec
push
sub
scas
loop
movsl
test
out
cmp
or
mov
stos
fiaddl
and
pop
imul
out
stos
rorb
arpl
and
sub
outsb
add
sub
sti
or
jecxz
hlt
stos
sub
push
dec
mov
add
hlt
mov
cltd
push
inc
daa
or
out
lods
das
xchg
idivb
jmp
in
ret
enter
push
cmp
out
push
mov
ljmp
dec
or
scas
jne
or
dec
cmp
or
outsb
jecxz
xchg
mov
sbb
mov
xchg
addr16
pop
push
mov
arpl
decb
sub
and
push
std
mov
out
or
mov
std
mov
insl
mov
rep
mov
cli
stos
loop
fadds
lods
dec
popl
lret
cmp
add
jno
fs
push
dec
test
imul
into
fistps
loop
das
ja
arpl
lods
sub
mov
or
mov
sub
mov
std
inc
and
and
out
andb
mov
jg
dec
imul
xor
daa
lahf
and
dec
outsb
mov
andl
arpl
or
out
and
scas
jno
mov
fsubp
push
sbb
ja
xchg
or
filds
je
loope
insl
mov
out
test
jo
mov
outsl
add
mov
and
iret
dec
popl
in
ret
test
mov
aad
fisubrl
test
insl
ret
mov
and
dec
das
mov
out
stos
insb
mov
js
cmovae
in
cs
mov
jbe
mov
dec
outsb
in
jmp
sub
test
push
jmp
jg
js
mov
outsl
gs
jno
arpl
arpl
aad
xor
mov
fidivs
je
jle
cli
push
dec
and
mov
dec
scas
enter
jae
pop
stos
clc
jecxz
adc
jecxz
mov
jecxz
mov
insl
test
das
popa
lret
pop
popf
movsb
jne
scas
inc
or
test
jmp
jle
sub
dec
push
jle
out
xchg
mov
or
xor
jmp
cmovs
adcl
jns
insl
into
je
lods
dec
cmp
sti
push
mov
imul
outsb
mov
dec
and
jecxz
adc
lods
mov
lret
fidivrs
popl
sbb
outsb
add
inc
mov
and
into
dec
out
das
es
ret
dec
sub
push
mov
mov
scas
and
iret
mov
loope
in
insl
mov
xchg
cmp
lock
in
inc
popa
xlat
inc
dec
test
enter
xorl
pushf
arpl
sub
fstps
push
iret
and
out
and
std
insl
inc
mov
outsl
clc
pop
and
inc
jb
lock
mov
loop
out
and
cs
cmp
popa
dec
out
test
scas
push
in
inc
add
adc
and
arpl
scas
outsl
adc
adc
arpl
leave
rorb
es
mov
je
ret
mov
pop
lods
inc
in
jb
movsb
test
imul
subl
popf
jge
mov
in
dec
mov
loopne
loopne
imul
lret
push
cmpsb
jo
movb
inc
mov
int
inc
out
sub
out
in
jecxz
push
xlat
pushf
push
clc
cmp
cmp
pop
icebp
clc
aam
test
inc
inc
jmp
in
jnp
mov
mov
mov
mov
jle
outsl
sub
xchg
arpl
scas
pop
cmp
dec
mov
lea
push
sub
mov
stos
cli
dec
mov
mov
out
ds
add
mov
or
mov
xor
out
and
bswap
fmul
clc
cmp
mov
in
popa
lret
and
cwtl
ret
fildl
mov
dec
push
in
scas
pop
ljmp
sub
xor
cmp
clc
push
and
push
pop
cmp
sar
ret
ret
dec
sub
mov
test
scas
lahf
mov
adc
iret
xor
outsb
cld
scas
lods
leave
dec
or
mov
inc
mov
xchg
jle
jns
out
subb
mov
lods
sbb
sbb
adc
push
add
clc
sub
lea
mov
or
rclb
leave
or
jecxz
inc
in
outsl
clc
mov
test
dec
cli
movsb
dec
sub
dec
movsb
testl
sub
mov
lods
add
push
clc
sub
mov
dec
xchg
ret
mov
in
dec
mov
xchg
inc
mov
in
dec
mov
divb
outsb
clc
cs
push
dec
dec
jp
inc
adc
sti
sub
jae
or
inc
movsl
test
pusha
rcl
inc
addr16
outsb
sarl
sahf
adc
fwait
xor
jecxz
or
and
mov
out
or
push
stos
mov
sub
cmp
mov
jbe
sub
ljmp
push
int3
fwait
adc
aam
into
sub
ret
insl
orl
les
mov
ror
int
pushw
adc
mov
orl
inc
mov
inc
or
das
dec
push
adc
cmovl
call
insl
mov
lea
jnp
mov
lret
aaa
cmpsl
out
mov
lods
push
sub
xchg
sti
dec
mov
bound
xchg
sub
adc
test
jp
arpl
js
jecxz
andl
inc
int
push
dec
pop
out
fidivs
nop
push
sub
shr
call
ret
mov
push
sub
je
test
lods
nop
mov
cmp
or
or
js
popa
movsl
scas
mov
aam
inc
push
jl
insl
lret
mov
outsl
popa
inc
lods
scas
mov
outsb
leave
sub
bound
dec
ljmp
push
test
jb
out
fwait
iret
shr
mov
dec
jmp
ret
cmp
arpl
test
fsubr
fisttpll
xchg
insl
in
pop
ljmp
lret
ret
pop
xlat
loope
adc
pop
stos
outsb
test
fwait
imul
or
pushf
inc
push
es
rcrl
and
cmovns
cwtl
or
iret
bound
sub
lea
lds
das
js
dec
dec
ret
dec
lock
loopne
clc
aam
sub
or
clc
cmpsl
lcall
icebp
clc
mov
idivl
pop
jbe
popa
orl
sarl
push
into
addb
daa
push
add
das
test
or
iret
mov
mov
and
jecxz
xchg
inc
cmp
push
pop
test
lods
mov
movsl
call
into
add
or
inc
jecxz
lods
xor
jb
jnp
inc
orl
dec
nop
lods
xchg
cmp
fidivrs
jle
movsl
lea
out
mov
inc
out
and
dec
stc
in
lods
xor
or
cmp
test
bound
xor
push
jo
or
mov
mov
mov
xor
inc
inc
ljmp
outsb
pop
scas
imul
loope
xchg
fwait
sti
inc
ret
pop
mov
iret
sub
inc
bound
insb
xchg
dec
inc
mov
es
movsl
adc
or
jmp
mov
cltd
sbb
pcmpgtb
in
adc
imul
lahf
xchg
insl
xchg
xchg
xchg
pop
call
mov
or
notl
loopne
mov
dec
insb
stos
leave
mov
popa
scas
fmulp
rorl
jo
or
inc
mov
adc
sbb
fildl
iret
push
mov
push
or
je
sub
pop
jbe
js
leave
mov
sbb
lock
and
push
clc
mov
repnz
aam
mov
mov
mov
arpl
out
movsb
out
sbb
push
insl
push
pushf
mov
dec
lahf
pop
std
xor
push
lret
xchg
ret
mov
dec
stos
lahf
dec
in
mov
repnz
das
jno
loop
rolb
in
pop
mov
movsl
movsl
sub
inc
jno,pt
fs
mov
dec
scas
or
mov
ljmp
inc
jmp
test
loope
stos
ds
dec
jno
mov
mov
dec
xchg
pop
sahf
xorl
bound
and
and
pop
insl
fldcw
nop
or
jb
arpl
dec
push
leave
jmp
cmc
mov
push
shll
leave
or
sub
cmp
loope
cmp
inc
cmpps
outsl
ja
fisubs
test
rorl
arpl
push
out
cmc
sub
test
sub
dec
iret
jmp
jp
out
nop
mov
dec
xlat
imul
hlt
adc
xor
mov
test
dec
imul
lea
cmp
adc
mov
jmp
mov
jl
push
jbe
sti
add
stos
into
push
xchg
iret
dec
xchg
jmp
inc
push
adc
scas
repz
jnp
xadd
jo
stos
dec
mov
lock
adc
or
lods
inc
dec
sub
sbb
xchg
xor
pop
and
mov
xchg
dec
stos
xor
cmpb
in
pop
xchg
jae
lret
scas
leave
nop
insl
js
mov
mov
jecxz
mov
pop
inc
clc
test
leave
ja
mov
mov
loope
jmp
xor
adc
imul
inc
int
lods
nop
lods
lret
sahf
movsb
jnp
dec
outsl
in
pusha
push
fdivrl
outsb
sub
jne
in
loope
add
cs
int3
or
cli
insl
jb
adc
pushf
stc
scas
in
jne
push
lea
and
nop
enter
aam
out
mov
bound
jno
outsb
jns
or
jmp
test
pushf
roll
xchg
sub
sub
jmp
and
add
out
test
outsb
ret
add
std
js
imul
inc
ror
jecxz
testl
cmp
cli
push
lea
cltd
push
sbb
movsl
and
inc
add
test
sbb
sub
dec
aas
jno
js
or
lods
add
lds
and
in
jno
out
es
mov
int
mov
lea
jp
push
push
daa
arpl
movl
scas
push
mov
test
lds
stc
loope
pop
das
mov
and
gs
sub
inc
ljmp
rorl
arpl
mov
into
pop
inc
test
xchg
lods
ret
adc
ret
dec
adc
sub
arpl
daa
shrb
mov
mov
ret
inc
out
insb
incb
in
imul
mov
jb
lock
arpl
push
dec
bound
inc
sub
pop
jmp
leave
popl
pop
push
pop
iret
lods
outsl
ljmp
mov
insl
lods
cwtl
les
int
push
scas
test
push
add
dec
and
cld
mov
lret
sbb
mov
adc
add
adc
push
jp
jp
into
into
loop
jge
mov
fsubrl
mov
into
cmp
jg
lea
aam
repnz
and
push
leave
add
into
subl
sbbl
insl
dec
mov
dec
mov
push
xor
movsl
cld
mov
mov
push
xchg
iret
loope
mov
shrl
cmovae
sub
popf
popa
mov
dec
jne
push
mov
mov
imul
or
lahf
or
lahf
xchg
jmp
popf
dec
jo
lret
jg
out
mov
push
sbb
into
mov
leave
jecxz
cmp
or
movsb
xchg
cmp
insb
sub
push
bound
ljmp
jge
xor
mov
arpl
inc
pusha
imul
and
xchg
cmpsb
movsb
ljmp
ret
jae
sbb
call
shrl
call
cs
mov
mov
xchg
in
test
sarl
push
inc
rorl
jl
inc
bound
das
xor
jns
daa
and
sbb
jmp
inc
in
fsubl
and
aas
or
mov
into
outsb
pop
aaa
std
lea
scas
adc
dec
out
call
and
push
push
daa
xchg
dec
or
addr16
dec
insb
dec
call
mov
inc
cmc
daa
and
fisttpll
push
and
inc
cmp
scas
repnz
insb
aam
iret
test
outsb
out
loop
stos
lock
test
and
dec
iret
mov
push
dec
mov
xor
out
outsb
and
dec
cs
lea
clc
add
loope
cmp
add
lods
icebp
mov
stos
add
sbb
push
dec
mov
mov
push
ljmp
shll
dec
mov
loopne
push
and
fwait
neg
idivb
and
adc
fucom
mov
scas
repz
hlt
test
inc
scas
inc
mov
sbb
push
rorl
sub
enter
nop
insb
push
ljmp
cmp
mov
cs
and
and
jbe
and
dec
into
hlt
inc
dec
insl
dec
lods
arpl
rorb
xor
stos
fwait
outsb
nop
aas
popf
in
gs
lods
sub
mov
pop
es
stos
scas
outsb
into
mov
push
push
sbbl
xor
imul
mov
scas
lea
inc
decl
xchg
mov
mov
bound
in
in
mov
jns
mov
add
jno
mov
insl
mov
jmp
subl
push
cmp
mov
mov
dec
mov
dec
push
in
mov
pop
arpl
pop
or
leave
or
sub
push
test
arpl
mov
lods
or
ja
loope
std
mov
call
add
aas
dec
mov
loope
mul
mov
into
adc
jmp
dec
mov
xor
inc
in
cs
mov
stc
pushf
popl
ret
xor
outsb
jecxz
scas
dec
arpl
lods
test
sub
outsl
stos
push
mov
ret
ja
mov
xor
dec
push
or
lods
xchg
jnp
bound
sbbl
ror
jge
loope
jne
and
dec
dec
leave
outsl
subl
fildll
notb
mov
mov
add
mov
clc
in
inc
pop
inc
lret
insl
fwait
popa
mov
out
push
je
mov
incb
out
loope
pop
outsl
dec
out
xchg
es
inc
ror
sbb
jne
into
add
cmp
xchg
insl
lret
lock
and
fcompl
imul
lods
jbe
pop
push
arpl
rorb
addr16
mov
push
stos
adc
xchg
fwait
push
xchg
push
int3
ljmp
test
jb
mov
and
aad
out
orl
popa
and
push
mov
lret
dec
or
jns
sub
dec
imul
into
push
pushf
stos
jp
push
jbe
daa
mov
mov
xchg
or
mov
loop
cmc
ret
clc
cmp
or
in
imull
bound
out
xchg
pop
std
mov
iret
lods
outsb
mov
sti
and
cs
sbb
mov
into
dec
sti
out
cmp
add
mov
out
data16
jg
jno
mov
cltd
push
cmp
mov
pop
repnz
jl
arpl
int
jg
lock
daa
insl
mov
lds
or
jecxz,pt
and
mov
loope
lods
movsl
divl
pop
and
gs
lret
mov
into
and
outsb
arpl
in
jb
jne
jne
jne
sti
arpl
leave
ret
inc
push
fdivrl
mov
sub
or
mov
into
mov
push
or
sbb
shll
push
stos
hlt
dec
xor
inc
sub
cmp
in
inc
negl
icebp
jnp
or
mov
add
push
jns
js
mov
mov
sbb
lret
dec
mov
mov
ljmp
xchg
imul
stos
popa
dec
int
jne
jmp
mov
dec
ftst
outsl
ja
jbe
mov
aad
sub
lret
add
sub
jle
insl
loop
lret
pminsw
in
push
js
out
test
or
sbb
loope
and
pusha
sti
int
ret
call
outsb
sub
jmp
sub
mov
sub
mov
jno
in
jmp
arpl
fldl
repz
in
arpl
out
dec
movsl
mov
mov
pusha
dec
insl
ret
sub
jb
in
dec
push
in
mov
loop
insb
lret
sarb
ret
test
adc
shrl
orl
jnp
ljmp
and
adc
mov
mov
sub
loop
addr16
test
iret
mulb
repz
jbe
xor
xor
xor
inc
outsb
inc
aam
or
into
sub
movsb
aad
jmp
mov
mov
push
mov
jmp
push
push
jmp
mov
iret
mov
or
shrl
dec
adc
xor
or
push
out
cmp
rolb
repz
lods
jbe
cli
into
jno
out
scas
jno
loop
popa
pop
cmpl
loope
xchg
inc
inc
and
xchg
mov
jae
hlt
xchg
mov
and
add
clc
insl
mov
loope
imul
cmp
testl
jecxz
or
popa
scas
lea
mov
push
out
addl
push
pop
repz
dec
dec
sbb
adc
mov
stos
add
outsl
or
loope
subl
nop
es
push
test
lea
icebp
in
insl
in
insb
int3
cltd
jo
stos
dec
push
xor
sti
and
arpl
ljmp
sub
or
jmp
leave
shr
decl
in
xor
outsl
jae
mov
sub
jne
jnp
or
nop
stos
int
xor
ret
aam
aad
push
pusha
mov
sub
bound
and
mov
add
ret
inc
daa
add
lods
femms
andl
stos
pop
cli
push
push
add
jmp
jecxz
lock
or
mov
hlt
icebp
int3
sub
cltd
jecxz
dec
mov
or
ficompl
dec
mov
jmp
addr16
in
adc
lock
repnz
int3
sbb
cmp
ret
or
dec
push
xchg
daa
outsl
add
mov
inc
loope
in
cmp
pop
push
pop
mov
out
push
outsl
fwait
lods
lret
in
test
push
mov
push
insl
jno
dec
clc
sub
lahf
xchg
int
add
inc
pop
mov
imul
scas
ret
sub
imul
lcall
iret
lods
into
cmp
mov
lret
or
pop
fs
or
sub
push
dec
mov
mov
inc
xchg
or
sbb
std
mov
lds
mov
nop
mov
inc
or
ljmp
add
or
xchg
decl
ret
loope
jg
cs
int
lds
and
repz
jl
mov
add
iret
dec
adc
adc
inc
ret
test
aam
shrb
push
cmp
dec
popa
bound
push
movsb
andb
dec
sub
movsb
fsubrs
dec
aad
jl
arpl
mov
mov
loopne
icebp
je
dec
out
in
jb
and
jno
dec
or
jnp
and
ljmp
out
test
adc
scas
push
mov
stc
insl
stos
jo
dec
imul
clc
inc
out
ret
fwait
outsl
bound
xor
ret
mov
scas
out
dec
dec
stos
int3
xor
dec
push
ror
int3
jnp
and
cs
push
testl
cmp
jbe
in
dec
jne
jbe
xor
loope
mov
imul
cmp
or
sti
xchg
inc
imul
mov
pop
into
push
sub
mov
iret
add
mov
mov
fisubrl
das
mov
jecxz
push
push
push
dec
das
dec
movsl
mov
ljmp
mov
pushf
add
jb
outsl
ret
movsl
popa
jg
in
lods
arpl
add
xor
das
in
outsl
mov
mov
cmp
out
dec
inc
out
lea
add
ret
dec
dec
loop
mov
ljmp
inc
sbb
inc
mov
imul
shr
jns
inc
mov
dec
js
outsl
xlat
jmp
sub
js
fwait
jp
scas
mov
rcrb
lea
add
mov
jo
and
dec
daa
ret
in
cs
clc
lods
jbe
mov
lret
sbb
inc
hlt
repz
cmp
pusha
insb
leave
das
out
movsl
dec
and
fsubrl
outsb
clc
insl
or
xor
imul
jmp
dec
jle
arpl
adc
insl
test
or
cli
in
bound
mov
xchg
mov
lods
mov
jmp
and
mov
lods
dec
in
int
or
movsb
je
or
lock
mov
popa
inc
test
jb
cmp
mov
mov
cmc
pop
bound
ret
dec
add
insl
out
xchg
mov
ss
xchg
inc
push
dec
cmp
dec
int
mov
popa
jmp
mov
stos
movsl
xor
aaa
arpl
jno
add
jb
jbe
mov
push
sub
insl
gs
sbb
mov
out
jmp
aas
adc
add
leave
inc
test
ret
or
or
push
insl
jb
ror
dec
shll
movsl
lods
lret
dec
outsl
push
popa
int3
inc
jg
sub
jecxz
stos
sub
mov
jg
push
inc
in
outsl
scas
sbbl
jae
inc
nop
fdivrp
sbb
insb
inc
js
mov
ret
dec
xchg
out
mov
shrl
faddp
mov
ret
inc
push
repz
mov
fs
out
std
clc
dec
arpl
nop
int
stos
cmp
and
jecxz
xor
cmp
mov
sub
mov
mov
daa
mov
dec
lods
sub
lret
insl
lea
add
sbb
or
sbbl
dec
lds
xor
or
and
cmpsb
inc
push
push
fwait
nop
into
push
je
int
dec
add
decb
loope
ljmp
jmp
outsb
sub
jmp
mov
jmp
cmp
lret
mov
add
nop
dec
cmp
add
xchg
sti
out
loope
dec
pushf
fidivrs
and
test
jnp
inc
sub
lea
roll
int
lods
adc
push
mov
mov
pop
dec
inc
and
lret
bsr
dec
popa
push
stos
or
insl
in
in
andb
xor
inc
fwait
sar
push
pop
jg
sub
outsl
lds
into
test
out
dec
lret
xchg
das
ret
das
and
pop
jecxz
cmpsb
daa
shlb
mov
pusha
fmul
addr16
push
cld
inc
jecxz
repz
or
sub
add
dec
addl
int
add
jno
cmpl
sub
fstps
stos
je
inc
dec
and
inc
ds
popa
dec
push
scas
test
mov
loop
cwtl
or
sbb
pop
adc
sbb
leave
into
jle
fadds
arpl
mov
push
jmp
fucomip
pusha
aad
das
pop
fwait
mov
mov
jb
out
into
sub
and
sub
int
pop
clc
imul
leave
in
scas
ljmp
test
repz
imul
scas
dec
fnsetpm(287
int
ja
loop
push
fisttpl
push
fldt
or
mov
dec
mov
cmp
cmp
out
cli
ficompl
sbb
inc
int
push
mov
loop
dec
dec
andl
in
jbe
cltd
jmp
dec
test
and
loop
add
cs
lret
pop
shl
movsl
mov
and
xor
sub
je
andl
scas
inc
in
das
mov
pop
into
inc
std
mov
outsl
clc
daa
mov
add
push
ret
sbb
sub
stos
mov
outsb
ret
and
sub
pop
cli
cmp
mov
js
iret
ret
mov
mov
and
aaa
sub
fnstenv
pop
pop
mov
outsl
inc
outsb
dec
rol
or
test
scas
and
leave
ljmp
arpl
mov
out
dec
js
inc
bound
mov
inc
mov
ret
add
xchg
jbe
pop
lods
lods
cmpb
lret
add
pop
sbb
jmp
jg
dec
inc
cmp
in
imul
into
xchg
inc
inc
mov
push
loop
sti
loope
inc
repnz
xorl
mov
mov
or
jge
adcl
arpl
push
inc
stc
sub
enter
push
jg
jmp
daa
push
add
decl
popf
push
imul
cmpsb
lods
or
and
inc
popf
out
dec
pop
cli
aas
mov
dec
mov
inc
in
dec
ss
xor
sub
mov
mov
out
movsl
and
into
push
pusha
inc
arpl
dec
jmp
cmp
add
in
add
cmp
arpl
mov
mov
std
sbb
cld
loopne
or
sbb
imul
leave
test
mov
sbb
jmp
dec
or
and
lcall
add
stc
insl
clc
inc
popa
adc
in
in
inc
ret
outsb
insl
subb
lret
ss
clc
pop
shrb
rcl
adcl
jle
jb
jns
adc
mov
mov
fucomi
out
dec
or
jmp
lret
mov
ljmp
iret
ffree
fnsetpm(287
jmp
scas
xchg
out
dec
nop
inc
inc
inc
add
shll
iret
cmpl
ljmp
adc
out
xchg
movsb
cs
nop
sub
cmp
dec
mov
test
fcomi
lret
in
or
dec
jns
in
outsb
nop
inc
pusha
insl
adc
mov
scas
sub
js
test
or
iret
popa
sbb
pop
rcrb
lea
scas
scas
xchg
jns
scas
subl
mov
out
dec
dec
movsb
inc
push
pop
mov
mov
lods
mov
arpl
lods
popa
imul
push
inc
inc
push
push
mov
sub
out
fstps
cmpsl
and
loope
arpl
dec
gs
clc
add
and
es
ds
dec
insl
outsb
inc
arpl
loope
fs
imul
mov
dec
inc
lock
mov
mov
jecxz
mov
mov
adc
cmp
mov
pop
dec
and
jge
pop
icebp
cmp
inc
es
aad
outsb
jbe
cmpsb
outsb
leave
lret
popa
cmp
push
mov
adc
into
push
jg
stos
xor
push
out
mov
in
arpl
subl
outsl
scas
cmc
and
iret
nop
in
xchg
daa
inc
dec
jecxz
push
popa
sub
ljmp
lods
ficomps
scas
lret
mov
sub
or
dec
inc
or
fwait
sub
outsl
das
aad
xchg
xchg
mov
int
sub
imul
icebp
jmp
aas
popf
inc
sub
dec
lods
xlat
es
push
sbb
notl
fs
inc
outsb
into
into
cmc
mov
jl
dec
bnd
lret
sbb
cltd
stos
in
addr16
cmpsb
test
sub
repz
mov
stos
inc
in
pop
inc
repnz
fwait
and
sahf
repnz
cs
sbb
bound
lea
push
mov
mov
lret
loope
mov
push
les
mov
out
stc
and
aad
stos
fwait
nop
out
xor
pop
xchg
out
test
mov
nop
push
cld
sub
xor
push
dec
xor
lcall
popa
mov
je
xor
rep
pop
fbstp
loopne
or
dec
notl
loop
mull
clc
and
loope
cld
ljmp
fwait
dec
std
and
jecxz
push
mov
int
adc
push
and
sahf
or
test
mov
mov
or
popa
mov
cmpsl
clc
xchg
sub
fwait
std
daa
xchg
xchg
xchg
punpcklbw
cmp
je
into
dec
arpl
dec
insl
or
mov
int
popf
inc
ret
popa
xchg
sbb
jns
insb
dec
mov
outsb
jno
adc
lret
push
psrlq
subl
jle
and
jle
mov
sub
shrl
hlt
ret
es
jne
loop
inc
pop
pop
sub
cld
xchg
dec
sub
add
dec
adc
or
push
call
mov
mov
insb
addr16
push
jp
dec
dec
lods
sub
ss
shrb
mov
nop
mov
andl
dec
mov
outsb
ljmp
js
fimull
ret
das
scas
ret
xorl
pop
rol
iret
out
clc
lea
int
nop
outsb
lods
mov
loope
arpl
imul
inc
stos
sub
cmp
mov
push
dec
add
nop
sub
mov
jns
jnp
xchg
xchg
and
inc
cltd
xor
scas
xchg
jecxz
sub
shrl
ljmp
jmp
mov
out
leave
cli
mov
in
ljmp
jmp
or
rol
outsb
jmp
int
add
mov
dec
stc
mov
fwait
test
ljmp
and
pop
orb
jb
pop
leave
imul
stc
lret
sub
das
arpl
bswap
mov
ja
sbb
ljmp
leave
pop
lea
dec
push
adc
jnp
scas
bound
sub
and
inc
out
jecxz
add
adcl
push
jae
daa
lods
mov
xor
inc
insl
subl
stos
in
out
jecxz
push
test
cli
mov
out
mov
ljmp
clc
scas
insl
insb
test
leave
cs
or
push
mov
or
mov
pop
insl
testl
cld
mov
jmp
outsb
lods
push
test
mov
and
sub
dec
dec
orl
in
xor
lods
movsl
popl
or
enter
subl
jo
daa
mov
or
mov
adc
dec
ret
es
rol
shlb
in
and
lods
je
mov
das
inc
nop
adc
inc
mov
mov
sub
pop
in
rclb
es
orb
push
dec
les
das
test
call
sub
mov
mov
cmpl
loope
or
mov
ret
in
mov
and
loope
mov
ret
iret
mov
fwait
orl
je
bound
sub
jp
or
int
nop
stos
and
popa
in
bound
pop
outsb
or
mov
out
int
cmp
popf
scas
sub
ficompl
out
xlat
jb
insl
ljmp
fucomi
dec
popa
bswap
lret
or
pop
rcrb
inc
and
scas
mov
and
xorl
lods
inc
inc
or
rorl
ret
add
push
je,pt
stos
dec
inc
jne
lea
les
outsb
loop
les
sbb
mov
nop
mov
scas
leave
dec
ss
pop
push
orl
dec
push
pop
jmp
push
insb
xchg
mov
dec
mov
cmp
mov
es
push
rcl
mov
pusha
inc
jmp
sub
mov
or
push
push
inc
add
jmp
push
sub
out
imul
out
aas
outsb
out
push
pop
es
or
outsl
fcmovu
mov
jecxz
sub
movsl
mov
ret
inc
push
stos
clc
xchg
sub
cmp
insb
dec
mov
es
sub
rorl
scas
cs
sub
mov
in
mov
es
or
jge
jno
arpl
icebp
out
popa
sti
out
add
lods
and
leave
mov
push
lea
push
in
das
out
pop
sub
scas
fwait
test
mov
inc
jecxz
inc
outsl
mov
mov
or
test
lods
pop
les
jle
push
out
mov
sub
add
daa
mov
jecxz
fists
aaa
mov
dec
in
mov
in
inc
imul
mov
subl
or
adc
mov
mov
dec
imul
bound
leave
lea
in
out
out
bound
xor
mov
cmpsl
popa
jge
imul
or
bound
inc
popa
insl
nop
addr16
mov
lods
add
sub
dec
sub
mov
jmp
arpl
push
test
iret
dec
or
lock
or
jecxz
dec
hlt
jl
inc
sub
pop
les
xorl
and
jne
daa
bound
imul
jl
or
jl
in
insl
into
shll
leave
jg
fnstsw
dec
jmp
lods
stos
push
insl
or
insb
mov
mov
pop
cmp
sub
stos
or
sbb
out
jb
insl
or
movsl
mov
mov
mov
lret
mov
push
cli
je
add
pop
cmp
inc
pop
cmp
sub
dec
repz
xchg
aaa
push
and
pop
jbe
into
and
das
or
dec
test
inc
mov
scas
jno
mov
jp
arpl
sub
nop
fsubrl
inc
dec
bound
dec
outsl
mov
repnz
in
jnp
out
mov
sub
and
push
mov
arpl
cld
decb
scas
xchg
sbb
push
clc
insl
mov
jb
mov
and
mov
sbb
cmp
sbb
lock
pop
push
jmp
or
out
lea
arpl
jno
mov
out
jmp
addr16
sub
sub
xchg
scas
add
ret
jb
jne
inc
jmp
insl
iret
popa
adc
cmp
adc
outsb
loop
jo
or
andl
insb
shrl
jb
out
test
jnp
into
inc
xorl
ret
orl
stos
or
imul
insl
lock
inc
push
or
fldt
xchg
insl
popa
lea
out
imul
cmpl
stos
adc
arpl
xchg
mov
clc
ja
cmp
xlat
xor
clc
mov
test
sub
sar
and
mov
std
mov
lea
or
xor
push
pop
lsl
insb
out
and
popa
jb
mov
cmp
xchg
dec
mov
stos
add
rorb
lods
test
bound
js
test
test
stos
sub
loop
dec
loope
sets
shll
inc
arpl
scas
jg
inc
and
repz
push
cltd
scas
dec
test
mov
sbb
pop
mov
call
jae
call
mov
mov
movsl
bound
lds
sti
aas
and
dec
push
in
mov
push
cmpl
test
popa
mov
jmp
movsl
mov
jmp
cmpl
adcb
jno
in
dec
shl
inc
into
aaa
mov
xchg
cmp
out
and
lret
bound
xchg
es
into
cmp
xor
lods
daa
out
jecxz
sub
and
push
insb
lods
scas
jne
or
aas
dec
xchg
ds
outsb
ds
jmp
fisubrl
iret
loope
cs
inc
rcr
out
scas
rorl
lcall
call
sub
sub
mov
xor
sbb
dec
out
dec
rcll
add
mov
in
sidtl
lock
nop
in
mov
jno
ret
addr16
mov
cld
mov
mul
mov
mov
dec
lds
and
sbb
jno,pn
add
fidivs
or
sub
out
xchg
fwait
dec
scas
ret
shll
xorl
in
push
popa
mov
xor
aas
mov
inc
and
das
popa
inc
add
lods
stos
mov
out
loope
arpl
add
jb
arpl
add
push
loop
sub
outsl
dec
inc
mov
mov
and
xchg
popa
and
sbb
add
jmp
cmp
or
xchg
inc
and
insl
fwait
out
insl
dec
lret
aaa
mov
or
inc
in
fldt
arpl
add
popa
int
arpl
dec
lock
xchg
xor
int3
jmp
xor
in
sub
mov
and
shr
out
lds
cmp
test
push
out
xchg
pop
adc
jl
int
in
adcl
or
inc
jne
test
ljmp
movd
jecxz
mov
add
fisttps
jb
imul
movsb
pusha
movsl
sub
or
arpl
jno
add
jl
inc
or
ret
test
jecxz
ja
out
fs
faddl
out
sti
stos
mov
call
push
dec
test
jecxz
mov
repnz
into
sti
nop
lods
sub
addl
mov
sbb
pop
jns
mov
ret
pop
or
mov
jl
dec
dec
ret
loop
int
jnp
popa
leave
jmp
in
test
mov
sub
out
lret
push
jmp
out
dec
test
cld
ret
loop
sub
sub
insl
bound
fldt
lods
or
push
repnz
dec
xor
cmp
pcmpgtd
jne
xchg
ret
test
inc
jg
mov
xchg
cmp
add
pop
in
push
pop
xlat
out
lods
jmp
jecxz
mov
mov
loope
xlat
test
sub
jp
dec
call
mov
jl
lods
add
cs
mov
popl
jns
fdivr
lret
inc
loope
jmp
imul
mov
and
nop
es
bound
sub
sbb
sub
sbb
mov
repnz
pop
jmp
dec
ljmp
popa
lods
fimull
imul
daa
test
ret
out
popl
push
pushf
das
into
and
pop
es
dec
mov
outsl
pop
jae
dec
push
push
cmpl
jecxz
frstor
push
lds
cwtl
orl
inc
or
jae
lods
add
sub
mov
cmc
icebp
and
rcrl
and
adc
pmaxsw
jb
sub
inc
xlat
sub
or
pop
das
lret
fwait
movl
jns
fcompl
pop
daa
jle
jnp
outsb
sub
xorl
push
sub
xor
testl
inc
or
cli
pop
and
mov
and
ds
add
js
stos
lods
jbe
inc
scas
xor
inc
test
in
and
dec
mov
outsb
mov
scas
sub
leave
jmp
cmp
dec
insb
out
mov
lods
scas
mov
xor
orl
or
ljmp
push
lods
dec
mov
xor
insb
je
pop
add
jbe
out
insl
sub
or
or
dec
or
cmp
mov
pop
aaa
aaa
sti
push
into
mov
mov
aam
mov
arpl
dec
aad
nop
mov
xchg
js
push
int3
stos
sbb
jmp
pop
lock
insb
outsb
and
scas
cmp
push
or
leave
sub
jb
mov
scas
into
jae
pop
addl
fsubl
mov
push
out
mov
inc
add
pop
or
xchg
push
daa
imul
dec
mov
in
iret
mov
pop
das
mov
mov
clc
add
ret
inc
pusha
cmp
sub
pushf
movsl
dec
jb
scas
sub
gs
int
arpl
decl
out
pop
aaa
orb
or
shl
mov
bound
ljmp
jg
sub
push
out
push
and
stos
push
add
cli
fimull
testb
sbb
push
outsl
mov
mov
idivb
daa
cmovae
test
stos
jnp
jecxz
push
add
cmp
fidivs
out
jl
or
sub
dec
pop
clc
add
out
or
dec
sti
xchg
inc
jmp
lret
sub
outsb
mov
lret
sub
and
add
fs
pop
inc
scas
shrb
loope
iret
bound
or
scas
push
popa
sub
jbe
insb
inc
sub
iret
lock
sub
movsl
addl
xchg
ret
and
or
adc
es
cwtl
addl
std
push
rcll
pop
jl
mov
iret
imul
fldt
stos
lret
push
out
cs
jb,pn
addr16
inc
hlt
lock
je
stos
int
dec
lret
arpl
les
insl
mov
scas
addr16
pop
in
insl
mov
and
mov
mov
popa
mov
cmp
aam
out
xor
insl
leave
and
sub
in
dec
test
add
dec
inc
scas
ss
stos
iret
loopne
mov
sub
xchg
dec
add
outsl
jmp
sub
push
lods
outsb
mov
or
add
and
ljmp
dec
out
inc
insl
sub
shll
filds
add
jp
jle
mov
pop
mov
test
mov
cmp
pusha
push
dec
mov
cmp
ds
mov
sbb
jmp
inc
pop
insb
dec
lods
imul
popf
stc
cmp
addr16
sbb
xchg
addr16
cs
daa
sar
call
ss
int
mov
std
dec
ljmp
iret
les
push
jmp
call
inc
in
mov
into
push
and
scas
sub
shll
and
popa
and
sbb
jnp
scas
push
cs
imul
out
scas
bound
movnti
pop
xchg
xchg
push
push
sahf
outsl
or
ret
cmpsb
fsubs
jmp
loop
mov
mov
dec
into
mov
push
into
xlat
das
fldt
or
into
adcl
arpl
outsl
mov
mov
int
or
pop
xchg
mov
lods
dec
cmp
or
shll
push
and
test
ja
loopne
loop
dec
dec
xchg
or
dec
in
std
ds
out
std
into
jno
in
cmp
xchg
adc
fwait
stos
lods
insl
or
push
push
lret
push
in
ret
dec
sbb
ljmp
mov
xor
insl
push
fnstsw
cmp
or
in
insl
mov
and
sti
scas
dec
test
or
inc
cmp
sub
pop
mov
fisubrl
add
push
mov
je
add
iret
xchg
fistl
insl
xor
fs
ret
sub
loope,pn
cmp
or
xor
sub
mov
fisubrl
ljmp
ret
insb
mov
lods
or
inc
pushf
jns
arpl
sub
jg
mov
jb
insl
out
out
mov
stos
ret
adc
sbb
cmc
xchg
mov
outsb
loop
filds
adc
in
inc
mov
adcb
jbe
outsb
insl
push
out
lock
lds
test
sub
and
sub
mov
lahf
push
ja
xor
fnstcw
add
leave
mov
addr16
loop
or
mov
mov
push
fildll
stos
jecxz
mov
iret
mov
cmp
jb
adc
inc
jne
into
mov
inc
in
ret
dec
sub
add
push
push
stos
lea
mov
scas
out
test
das
xchg
dec
hlt
jg
cmp
out
pop
pusha
jecxz
dec
mov
cld
lods
lods
cs
lret
dec
mov
mov
shrl
jecxz
sub
push
jp
xlat
or
ret
div
sbb
das
scas
mov
inc
out
insl
stos
or
jo
popa
shll
push
dec
or
stos
lret
dec
or
shr
andl
sub
scas
jbe
mov
and
sbb
sbb
add
fbstp
inc
or
lds
cmp
jle
adc
or
mov
inc
mov
mov
and
dec
jo
arpl
lods
xlat
mov
mov
insb
int
and
mov
clc
stos
mov
dec
lea
ret
mov
jecxz
inc
ret
pop
sub
dec
cmpsb
jbe
xchg
addr16
and
pop
pop
inc
inc
add
pop
inc
arpl
cmpl
dec
push
scas
or
jb
push
out
int
inc
into
arpl
and
sub
test
out
adcl
inc
xchg
pop
inc
orb
push
andl
ret
clc
shrb
dec
sub
xchg
dec
xchg
sub
xchg
xchg
lcall
shl
int
test
in
popa
push
imul
pop
jno,pn
fs
mov
pop
mov
and
decl
cmp
or
loop
inc
mov
in
or
or
imul
insl
pop
cmp
popa
jge
movsb
test
jmp
fwait
mov
lret
cmpsb
xorl
adc
popa
repnz
jp
test
clc
mov
jge
scas
out
jle
lods
cmp
xchg
das
or
cmp
jmp
scas
mov
jbe
pop
push
scas
cmp
out
andl
sbb
or
jge
outsl
push
lods
fbstp
dec
sub
pop
lods
jae
xor
ljmp
or
lods
ret
jno
lea
pop
les
lret
and
push
dec
dec
out
arpl
mov
nop
lods
pop
add
push
out
rorl
jns
and
xchg
lretw
scas
dec
or
call
addr16
mov
mov
incl
lret
sub
sbb
ljmp
daa
mov
sbb
data16
popa
ljmp
movsb
dec
sub
and
jecxz
fbld
cmp
into
dec
stos
mov
outsb
xchg
cld
in
add
jne
lret
push
xchg
nop
test
and
pop
mov
push
aam
pop
ror
pusha
pusha
movsl
aam
dec
add
jecxz
hlt
bound
and
hlt
jb
xchg
imul
xor
mov
inc
dec
mov
xchg
adc
outsb
daa
jb
mov
mov
dec
xchg
mov
lods
jae
jmp
lret
xchg
fildll
xchg
xor
js
sub
mov
sbb
insb
lds
nop
inc
imul
outsl
test
jno
scas
cli
mov
mov
imul
add
rorl
xorl
popa
mov
scas
insl
sbb
test
mov
test
ljmp
or
sub
pop
mov
xor
vpsubsb
sub
je
fdivrl
arpl
or
popa
scas
std
lods
mov
jl
stos
jmp
xor
xor
dec
imul
mov
arpl
dec
xchg
xchg
xchg
iret
and
ficoms
dec
nop
add
ret
pop
movsl
fidivs
in
mov
cmp
xchg
ret
jns
xchg
mov
cli
mov
or
clc
daa
loopne
ljmp
push
cmpsb
test
sbb
roll
imul
iret
outsb
in
bound
and
xor
dec
in
or
add
stc
push
stos
test
sub
out
mov
lods
fbld
mov
sub
pushf
inc
jno
orl
push
mov
sbb
add
int
cmp
cmc
or
out
dec
adc
andl
ret
mov
jecxz
push
jno
mov
loope
jns
into
out
cltd
into
ja
adc
scas
add
adc
mov
daa
inc
push
inc
lea
scas
sbb
or
dec
dec
insl
out
packuswb
pop
mov
aas
stos
cmp
pop
pop
aaa
roll
dec
sub
lret
inc
imul
in
in
into
dec
dec
xchg
mov
pop
xchg
mov
out
into
cmpl
adcl
pop
mov
es
gs
movsl
add
into
inc
mov
push
xchg
arpl
cmp
outsl
scas
movsb
push
and
and
jae
add
inc
cmpsl
dec
jge
jne
mov
mov
mov
jmp
lock
add
insl
scas
into
lret
insb
mov
push
cs
jge
jnp
orl
leave
stos
mov
and
pop
outsb
add
or
dec
dec
add
mov
insl
leave
mov
jmp
lret
pop
mov
sbb
repz
inc
or
lods
fimull
cmp
iret
inc
aad
sbb
pushf
andl
adc
mov
insb
comiss
xor
jg
xor
dec
dec
rcll
lods
mov
lret
mov
repz
push
out
ret
mov
or
mov
dec
pop
out
adcl
aad
xchg
sar
leave
lock
fucom
iret
popa
mov
test
out
inc
neg
es
lods
xchg
mov
shrd
mov
cld
and
jne
scas
dec
mov
rorl
loop
inc
gs
out
es
sub
cli
jmp
push
sti
mov
test
in
dec
outsb
in
xchg
mov
repnz
je
stos
subl
popa
pop
push
arpl
push
arpl
dec
push
pop
imul
clc
mov
sub
jmp
or
dec
lcall
dec
rclb
add
les
incl
inc
or
dec
pop
push
rclb
cli
jbe
test
movsb
sub
int
orl
inc
imul
ljmp
xor
xchg
dec
scas
inc
jg
sub
mov
out
xchg
xor
dec
cltd
dec
jb
out
loope
mov
sub
out
mov
push
ss
or
nop
into
and
arpl
push
sarl
mov
lcall
add
mov
dec
mov
and
lret
mov
and
jmp
out
jne
test
dec
jmp
repz
mov
lea
stos
lcall
inc
popf
test
lret
lods
adc
cmp
lock
aam
mov
adc
inc
and
jae
into
mov
es
mov
popa
outsl
or
mov
xchg
pushf
les
insl
cmp
orl
xchg
mov
sub
mov
mov
cs
sub
cltd
stc
js
jbe
inc
out
lock
out
loop
movsl
mov
dec
into
dec
lret
pop
mov
dec
push
call
loope
mov
mov
lods
iret
xchg
pusha
das
ud1
test
ret
inc
cmp
and
lea
mov
pop
out
lahf
push
lret
ret
xor
push
inc
scas
imul
and
adc
cs
push
cmp
dec
jmp
imul
sub
dec
pusha
or
pop
mov
push
aas
sub
outsl
ja
inc
lret
dec
ret
pop
sbb
test
nop
dec
mov
or
inc
sub
shrl
les
add
and
jnp
or
popa
mov
mov
sub
stc
dec
or
mov
movsb
jl
loope
inc
test
dec
mov
hlt
xor
dec
movsl
loopne
rcrb
stc
arpl
adc
or
lea
sub
fwait
and
dec
call
arpl
mov
outsb
mov
lods
sub
mov
sti
inc
cmp
rcr
test
js
jecxz
clc
inc
lds
enter
jmp
adc
xor
xor
lock
mov
arpl
or
ret
xor
xchg
sub
iret
int
movb
lods
jmp
pop
fmull
pop
cltd
sub
mov
lret
cmp
mov
ljmp
xchg
xchg
cmc
clc
psllw
jecxz
xchg
or
cli
add
outsl
mov
adc
arpl
loope
xor
arpl
movsl
fwait
and
jecxz
add
push
mov
jp
or
test
aas
or
cmpsl
mov
nop
mov
leave
fildl
mov
sbb
xorl
mov
lahf
xor
mov
and
arpl
mov
test
lock
adc
in
out
movsl
mov
leave
stos
mov
pop
aas
shll
out
xor
cltd
pop
mov
pop
out
addr16
mov
fs
scas
fnsave
int
xor
filds
and
or
or
or
or
test
and
mov
pop
sti
imul
ficomps
mov
lods
or
bound
dec
mov
push
out
dec
testb
inc
arpl
lea
loope
ror
lret
xchg
test
test
lods
pop
jge
sub
out
int
daa
mov
inc
xchg
mov
sbb
scas
stos
test
lret
shrl
or
test
orl
and
arpl
lcall
movsb
jns
or
imul
jnp
bound
or
movsl
lods
insl
test
add
sti
pop
imul
mov
xchg
and
pop
mov
or
mov
push
stos
mov
xchg
mov
cld
daa
in
bound
jl
and
imul
cmp
nop
ret
xor
cmp
sub
dec
outsb
orl
dec
pop
sahf
sub
outsl
das
stc
mov
lods
stos
sahf
in
fs
mov
mov
aas
dec
repz
jmp
sub
arpl
test
inc
xor
or
jg
and
dec
inc
mov
or
pop
mov
sahf
out
jb
insl
lods
cmp
aaa
xchg
inc
or
inc
mov
outsl
mov
jnp
popa
ret
cmp
sbb
scas
and
lods
arpl
or
cs
xor
cmp
cmp
add
mov
inc
loope
je
call
lock
outsl
dec
es
popl
subl
add
das
or
cmpsl
in
mov
jo
arpl
dec
cmpsb
push
ljmp
mov
ror
mov
xchg
fistl
nop
pop
scas
sbb
aas
into
jnp
inc
leave
outsb
int
ret
scas
sbb
mov
mov
fistl
jno
inc
sub
outsl
cmp
pop
jo
dec
test
cmc
mov
dec
iret
bound
movsl
mov
out
mov
mov
rcrb
int
clc
sbb
add
xor
dec
sbb
inc
clc
loope
dec
sbb
repnz
out
fcompl
cwtl
sub
in
mov
xchg
lea
or
iret
ret
dec
loope
sub
dec
sbb
dec
imul
or
sub
clc
push
jle
std
pusha
movsb
or
ss
pop
lods
ret
addl
shl
nop
push
inc
jne
wbinvd
xor
lret
stc
ljmp
mov
mov
icebp
addl
add
jo
inc
jl
lods
imul
ret
lahf
mov
adc
movsb
xor
out
sub
xchg
popa
movsb
xchg
daa
mov
mov
mov
in
mov
insl
sub
xor
outsb
dec
into
imul
and
andb
sbb
jbe
movsl
iret
int
out
lods
outsl
mov
mov
ljmp
fimull
push
imul
cmpsl
mov
out
jp
mov
pop
ds
sti
iret
dec
leave
insb
adc
inc
add
into
inc
or
jmp
mov
mov
cs
jns
daa
into
subl
sub
or
sub
pop
mov
mov
xchg
jne
jns
lds
repz
inc
cmpsb
pop
sarl
dec
repnz
push
out
pop
in
or
mov
pop
ret
inc
xchg
lcall
sub
movlps
stc
insl
xor
scas
decl
dec
cmpsb
mov
jmp
leave
mov
into
dec
movsl
bound
cld
push
cld
lds
add
dec
mov
or
arpl
xchg
push
mov
jno
lods
dec
jb
loop
inc
lock
push
sub
or
adc
pusha
or
sub
ss
xor
mov
jecxz
and
cmp
dec
repz
testl
add
inc
sub
test
mov
mov
push
fldt
loope
sub
inc
push
stos
rorl
insl
lret
jl
jmp
jecxz
xor
lods
mov
mov
cmp
into
ret
push
fsubl
push
xchg
or
in
dec
bound
sub
pop
xchg
jle
lds
cld
mov
daa
inc
dec
dec
sti
lods
outsb
adc
sub
lods
jae
mov
mov
or
and
sub
hlt
pop
daa
push
dec
push
mov
ret
xchg
insl
iret
fs
inc
sub
jg
loop
lods
out
ljmp
pop
sub
mov
in
pop
mov
mov
or
push
outsb
inc
mov
pop
or
or
roll
jle
push
push
shl
ds
pop
pushf
and
mov
inc
out
fdivrl
scas
mov
leave
jb
pop
dec
insb
ja
into
test
inc
es
lds
dec
movsl
leave
mov
push
adc
pop
lods
scas
jnp
dec
sub
leave
fcmovu
dec
dec
mov
push
push
push
ss
push
frstor
and
sbb
jne
adc
call
add
add
cmp
push
arpl
xorl
jmp
loope
xchg
popa
xchg
mov
dec
adc
and
outsb
mov
sub
icebp
shrb
dec
jb
adc
inc
sidtl
mov
out
add
dec
sub
leave
ljmp
bound
outsb
mov
pop
inc
hlt
xor
ja
inc
xchg
cld
mov
mov
ja
subl
mov
add
iret
mov
push
sub
xor
into
dec
addb
out
add
cs
outsb
outsl
je
dec
mov
mov
or
jg
stc
into
cmp
ret
nop
mov
pop
loope
insl
ret
adc
push
test
mov
fbstp
in
inc
and
fwait
add
push
and
xor
sub
stos
mov
mov
nop
xchg
aaa
call
jmp
dec
inc
xchg
dec
dec
in
mov
aad
fstpt
or
xor
sub
cmovne
dec
mov
lahf
call
bound
and
ret
ljmp
jo
clc
jmp
into
mov
orl
mov
insl
sti
jne
xchg
push
leave
add
and
bound
test
or
arpl
scas
cmp
sbb
mov
mov
sarl
push
pop
mov
outsl
iret
call
test
mov
iret
xor
loope
and
fldcw
pop
and
outsb
mov
mov
es
out
arpl
lea
dec
popf
inc
icebp
mov
imul
mov
iret
or
jb
cli
imul
in
and
stos
sub
loope
mov
add
bound
ret
push
clc
shrl
sbb
int
lock
xchg
fwait
inc
in
cmpl
scas
outsb
sub
scas
imul
in
and
call
inc
ljmp
je
dec
iret
add
jns
sub
xchg
lret
int
lods
jmp
jge
jb
insl
cs
lea
lods
loope
xchg
push
cld
out
sub
out
sub
mov
jb
adc
mov
cmp
sub
sub
insl
iret
mull
jp
out
jb
inc
cmovle
add
mov
or
and
jne
cmpsb
push
mov
into
add
lret
aad
xchg
nop
lods
jmp
or
lods
xor
bound
add
lods
jl
mov
dec
push
lea
inc
xchg
jecxz
dec
cmp
clc
stc
dec
out
out
xchg
dec
fisttps
jp
sub
jo
arpl
lahf
outsb
xchg
nop
sub
mov
fucom
call
mov
lea
jne
mov
out
test
imul
dec
out
in
nop
test
and
lods
cltd
jg
iret
sub
sub
dec
sub
pop
loop
lret
cmp
ret
dec
mov
lret
call
inc
mov
inc
pop
mov
outsl
lret
and
es
jp
pop
lods
cmovo
jg
lret
push
gs
mov
push
mov
fbld
loop
dec
mov
mov
or
or
mov
xchg
push
scas
call
stos
push
outsl
or
pop
lods
mov
or
mov
scas
inc
insb
add
ljmp
xor
pop
stc
sub
into
jmp
mov
bound
or
dec
pop
push
ds
pop
inc
xchg
ss
inc
icebp
xor
push
out
pop
jl
outsb
or
popa
dec
ret
sbb
lret
in
insl
arpl
ljmp
jmp
sub
push
pop
addr16
mov
jno
in
or
icebp
mov
sbb
int3
js
stos
pop
jmp
jg
jb
in
mov
dec
fisttpl
int
jmp
es
jmp
fisttpl
or
int3
lret
pop
sub
lcall
xchg
ljmp
or
push
fs
into
lods
jg
fldt
dec
in
rcr
nop
adc
mov
pop
jnp
inc
push
imul
push
jne
xchg
add
shrb
sti
lods
jae
int
push
sub
mov
lock
dec
push
cs
jmp
add
mov
mov
js
out
leave
popa
mov
out
dec
out
mov
sbb
insl
nop
jbe
jne
out
scas
mov
leave
dec
and
mov
popa
push
loope
add
push
addr16
dec
stos
mov
lret
arpl
popa
insl
out
movsl
dec
lds
sti
aam
mov
cld
adc
es
inc
outsl
mov
out
mov
pop
lods
cmpsb
xchg
or
test
outsb
or
mov
pop
inc
arpl
cmc
dec
cmc
adcb
test
imul
leave
inc
push
bnd
push
or
mov
mov
dec
repz
ss
hlt
repz
and
lods
pop
sbb
sub
sub
das
lret
xchg
scas
push
xor
loope
jno
sbb
or
mov
dec
cmpsl
sub
or
rorl
int
mov
jns
add
dec
lods
mov
in
mov
sar
mov
mulps
mov
and
int
cli
cli
arpl
scas
sub
js
or
lret
cld
lret
outsl
sbb
stos
insl
xchg
cli
roll
fwait
jns
shlb
es
sub
sub
das
bound
fmull
push
fcmovbe
pusha
cwtl
cmp
movsl
or
ljmp
repz
scas
popa
scas
xchg
xchg
out
xchg
push
inc
sahf
scas
jo
arpl
mov
jecxz
push
push
and
lock
pop
adc
stos
jecxz
iret
jae
add
add
std
ds
jecxz
addl
lahf
popf
ret
bound
jbe
arpl
scas
into
push
xchg
iret
jns
mov
stos
insl
daa
mov
fbld
outsl
inc
xor
jnp
andl
push
in
jmp
outsl
push
ret
lods
insl
int
sub
sbb
mov
adc
aas
sub
add
cli
mov
clc
lret
cld
push
jecxz
xchg
lods
jnp
mov
mov
add
mov
add
inc
or
arpl
fwait
bound
arpl
shlb
jmp
mov
insl
outsb
jns
dec
xor
mov
sbb
ret
jecxz
pop
shlb
lret
and
sbb
add
cmp
out
lea
outsb
and
iret
xlat
cli
push
push
push
push
lods
xor
jmp
andb
insl
mov
or
mov
sub
outsb
mov
bound
inc
mov
das
addb
outsb
inc
pushf
mov
cs
and
outsl
lods
ja
data16
jb
arpl
jb
adc
or
outsb
mov
jae
out
lds
rolb
inc
bound
bnd
xor
iret
mov
cmpsb
sub
inc
stos
shrl
pop
inc
and
sub
in
jne
test
fldcw
xchg
push
out
dec
mov
push
into
scas
dec
adc
jbe
or
insl
mov
scas
jge
out
and
inc
loop
mov
bound
lock
cmp
mov
outsl
imull
or
scas
lcall
dec
jo
in
inc
jne
jl
orl
imul
out
xor
rolb
shl
ret
ljmp
pop
loop
add
inc
xor
dec
inc
scas
inc
stc
xchg
and
xor
daa
popa
adc
js
sub
int
addl
jb
adc
stos
cli
outsl
out
scas
adc
lods
fistl
sti
mov
push
jo
arpl
push
inc
sub
inc
je
lods
inc
insl
bound
arpl
clc
dec
ljmp
sbb
int
call
bound
dec
arpl
and
sub
insl
leave
jecxz
scas
loop
jbe
jno
loope
and
int
xor
fwait
mov
lock
push
dec
adc
pusha
sbb
add
loopne
pop
add
pushf
add
pop
mov
leave
out
jle
ret
ja
push
call
lods
and
aad
sbb
add
in
imul
and
lret
mov
push
or
in
mov
in
inc
jle
jb
pop
sbbl
gs
sti
push
mov
or
das
lods
pop
xchg
push
mov
or
loop
and
jnp
std
lods
pop
ret
mov
stos
orl
adc
sub
stos
mov
inc
and
insl
lods
sub
dec
cs
outsb
jbe
mov
inc
addl
or
in
clc
int
push
push
sahf
sbb
xchg
inc
or
in
jae
cld
jle
in
cmp
aas
clc
dec
in
test
in
xchg
lods
pushf
sar
test
clc
xor
clc
test
arpl
outsl
xor
outsl
jmp
ret
das
lods
clc
dec
in
and
and
cmp
pushl
and
sbb
lods
mov
lods
cld
jle
in
cmp
aas
clc
dec
in
test
lods
test
clc
test
clc
xor
clc
add
arpl
outsl
xor
outsl
jmp
in
cld
sub
movsl
xor
inc
fwait
daa
dec
ret
stos
adc
in
repnz
mov
dec
jmp
mov
add
sub
popa
mov
arpl
das
roll
cmc
pop
mov
and
lods
nop
fs
ucomiss
inc
arpl
adc
lret
lods
scas
or
pop
mov
mov
sub
out
push
or
mov
sbb
outsl
addl
add
scas
pop
loop
out
xchg
add
add
outsl
lods
subl
cmc
sbb
popa
pushf
dec
dec
jmp
pop
insb
and
bound
cmc
cmp
xchg
jmp
ret
daa
addr16
mov
mov
and
mov
mov
add
sbb
sarl
das
shrl
jns
les
mov
add
insb
or
mov
push
arpl
loope
lret
mov
dec
popa
mov
imul
push
jge
push
xor
or
ret
lock
lods
xor
in
or
test
shlb
jmp
or
ljmp
or
daa
push
pushf
cmp
pop
imul
aaa
xchg
lods
add
clc
fcmovb
aaa
ljmp
andl
dec
icebp
sub
divl
repz
fwait
stos
mov
cmp
inc
xchg
rol
and
aaa
or
loopne
pop
scas
mov
addr16
and
push
icebp
icebp
xchg
cmp
loop
outsl
xor
inc
ljmp
mov
js
push
daa
dec
addr16
xorb
inc
clc
or
jg
push
jmp
cmp
pop
aas
arpl
testl
jmp
lock
cld
arpl
dec
out
icebp
icebp
ficoml
out
nop
subl
cmc
push
jle
mov
mov
cmpsb
or
xor
push
clc
jmp
call
lcall
or
dec
call
movsb
xor
mov
xor
adc
incl
outsl
insb
ret
out
fld
and
addr16
cmp
inc
dec
cmc
leave
fst
ja
inc
clc
or
repnz
xchg
xor
adc
adc
or
test
loop
lds
xor
cmc
mov
mov
clc
pop
jecxz
adc
xchg
and
xor
jecxz
dec
mov
mov
flds
psubsb
push
daa
mov
jnp
into
jmp
and
push
lahf
imul
jae
lea
and
inc
fcoml
jle
and
jns
or
mov
inc
mov
push
ss
dec
shr
lods
jp
es
bound
movsl
insl
jnp
lret
iret
jle
or
movsb
sub
sub
gs
nop
sbb
and
or
insb
nop
push
mov
ds
mov
mov
cmp
imul
cmp
pop
and
add
fs
cmp
or
mov
mov
outsl
xchg
dec
leave
xor
add
or
das
add
push
in
shrl
sbb
lea
psubw
or
sub
or
mov
fldcw
xlat
mov
pcmpeqw
cmpsl
and
sub
pop
mov
dec
xchg
shll
mov
dec
and
inc
or
cmp
and
push
cmpsl
andb
or
nop
add
inc
dec
cmpsl
ret
pushf
test
mov
push
movsl
cmpsl
in
mov
push
in
cmpsb
jnp
out
push
push
push
push
dec
dec
sti
lret
cmp
nop
add
jo,pt
es
out
xchg
add
call
mov
loope
out
add
xchg
nop
inc
cmpsb
jae
sub
movsb
xor
adc
inc
inc
xchg
mov
scas
outsb
mov
inc
mov
inc
insl
andb
add
jle
jno
sub
and
inc
pop
outsb
punpcklwd
in
test
xor
inc
jbe
adc
inc
jbe
hlt
add
jmp
inc
xchg
popa
sahf
test
cmc
in
orl
ror
inc
xchg
mov
jae
xor
lods
pop
mov
mov
mov
push
test
andb
mov
mov
xchg
mov
popa
inc
mov
in
add
sarl
and
cmp
es
xchg
test
jo
vpshrdvq
dec
loope
fucomi
inc
pop
and
movsl
inc
fisubs
orl
in
mov
and
xorl
sahf
loope
jecxz
adc
icebp
mov
icebp
mov
cmp
loop
xchg
in
fwait
mov
mov
scas
mov
lcall
test
aaa
scas
icebp
lods
mov
dec
outsl
jle,pn
and
or
test
stos
push
mov
jecxz
shrl
divl
icebp
mov
icebp
mov
icebp
mov
icebp
mov
icebp
mov
icebp
mov
adc
fwait
icebp
mov
mov
pop
sub
into
andl
nop
shrl
or
adc
es
xchg
cmpsb
lods
adc
into
add
cwtl
cld
lods
vmwrite
cmp
lock
add
daa
repz
mov
pmuludq
lock
icebp
test
jb
fwait
xor
xchg
push
push
iret
dec
jno,pn
or
bound
bound
shlb
or
inc
inc
and
cmp
aaa
sahf
adcl
pop
mov
pop
fdivs
cmp
mov
int
mov
add
or
sub
inc
cmp
xchg
das
jbe
xchg
and
fcomi
mov
aam
gs
shrb
popa
xor
jbe
sbb
daa
popa
and
out
popa
bound
inc
daa
popa
loope
into
popa
movsb
xor
popa
sbb
popa
ds
ds
xor
pop
inc
xchg
lock
push
add
cmp
jbe
push
mov
hlt
orl
orl
cmp
mov
into
stos
mov
test
jmp
adc
jno
stos
adc
fisubrl
push
stos
mov
cmp
jp
and
add
add
cmp
add
incl
mov
mov
mov
inc
mov
movsl
mov
out
adc
outsb
mov
loop
jns
mov
in
dec
sub
rorb
mov
aaa
in
or
fimuls
sahf
nop
cli
xor
mov
scas
mov
js
arpl
add
add
add
sub
mov
push
jg
test
into
mov
sbb
sub
neg
bound
cmp
mov
or
mov
out
mov
xorl
test
mov
loop
push
push
mov
loope
data16
push
inc
xor
xorl
cmpsb
lods
jecxz
sahf
push
jmp
in
xorb
xor
and
xchg
loope
fldt
hlt
mov
out
insb
mov
and
mov
inc
sub
xchg
lods
cmp
bound
popa
es
and
mov
mov
and
pop
mov
jle
mov
bound
jae
push
sti
out
lret
pop
xor
cmovns
es
es
mov
mov
gs
inc
loopne
addr16
adc
out
int
push
in
add
imul
popa
inc
xchg
mov
mov
repnz
mov
dec
xchg
or
add
push
pop
jmp
dec
jmp
xor
filds
loop
mov
icebp
pop
push
sahf
pop
mov
aaa
int
cltd
cs
lock
adc
imul
loope
test
jmp
mov
int
mov
mov
cwtl
ljmp
adc
call
inc
loope
cmp
inc
shl
pushf
cmc
xchg
popa
jb
int3
aam
int
or
mov
call
rcll
loope
and
dec
psubq
imul
mov
inc
popa
add
test
insb
arpl
mov
xchg
popa
movsl
shr
and
cwtl
jo
popa
jbe
lret
aaa
pop
jns
xor
fisttpl
cmp
aaa
sub
cmpsb
lahf
insb
cli
nop
aaa
lea
lods
scas
and
xor
arpl
popa
mov
pop
xor
dec
lods
mov
dec
sahf
scas
addb
cmc
and
std
outsl
das
lret
lea
fldt
icebp
popf
xor
sarb
inc
sub
dec
addr16
movsb
loope
test
xor
cmpsb
or
in
loope
push
divl
xor
jbe
std
xchg
clc
cmc
popa
jns
aaa
lods
mov
lods
movsb
mov
jg
loopne
xchg
movq
cwtl
arpl
add
dec
mov
insl
adc
inc
jo
stos
fs
mov
ja
clc
stos
and
ja
and
ljmp
mov
test
lods
ds
cmpsl
jbe
cmp
rclb
ja
sub
mull
jbe
jmp
jb
cli
lods
stos
mov
movsl
and
popa
orb
jne
shlb
in
pop
lods
movsb
and
cmp
shll
xchg
ja
mov
sub
sub
andb
add
andl
insb
mov
jle
popa
mov
out
fs
dec
adc
insb
and
jecxz
mov
ljmp
jb
jbe
lea
fwait
sub
mov
shl
out
popa
mov
lods
push
xor
adc
push
and
test
call
push
stos
dec
fs
adc
push
outsl
mov
mov
shrb
xchg
xchg
xor
push
cld
or
bound
sub
dec
jmp
lock
and
add
mov
std
daa
loope
arpl
mov
add
popa
sbb
pop
out
iret
and
cmp
das
jae
aam
jbe
ljmp
loope
loop
mov
dec
shll
incl
add
mov
mov
mov
jo
xor
adc
mov
inc
aaa
pop
sub
mov
xchg
ret
rol
or
arpl
jmp
scas
cmp
andl
insl
mov
dec
push
or
arpl
and
int
jle
inc
mov
sahf
movsl
test
icebp
adc
out
scas
out
jle
popa
cld
fisttpl
xchg
cs
jne
popa
aad
divl
xchg
movsb
mov
ss
dec
test
insl
out
imul
or
in
call
ss
sbb
loope
insb
repnz
dec
jno
jmp
mov
fildl
shrb
mov
lea
test
pushf
lods
jp
fs
sub
mov
popa
mov
bnd
insl
jl
ss
int3
mov
jmp
xchg
mov
js
loope
xchg
js
test
aas
daa
push
test
aad
in
ja
xchg
cli
mov
pop
mov
aaa
outsl
fs
in
add
shlb
loop
sahf
loope
fistl
xchg
leave
enter
imul
rcrl
shl
pop
mov
jmp
push
cmp
enter
xchg
loope
call
stos
dec
out
in
movsb
jns
int
cmp
nop
ret
and
scas
mov
scas
push
roll
push
add
orb
mov
mov
jne
loop
scas
loope
outsl
aaa
loope
in
xchg
sarb
fwait
test
sub
leave
aas
and
test
mov
gs
fs
aam
insl
push
mov
push
cmpsl
jle
imul
push
popa
incl
mov
sub
daa
and
in
lods
push
sub
nop
xchg
push
lret
mov
mov
jo
sub
ljmp
dec
das
and
test
test
daa
popa
movsb
pop
test
fwait
add
xor
out
push
jmp
jecxz
and
lds
nop
cmp
xor
outsb
in
in
test
inc
mov
push
arpl
jp
mov
scas
xchg
in
xchg
fwait
andl
adc
ja
lods
push
cmp
in
out
sub
stos
out
out
shll
sti
xchg
gs
push
inc
mov
cmpsl
mov
std
and
lret
or
lret
aas
popf
mov
mov
jmp
xchg
dec
test
mov
js
gs
hlt
decl
movsb
daa
insl
fwait
mov
mov
cltd
aas
sub
loope
mov
popf
xchg
jmp
xchg
in
stos
stos
shr
mov
or
jg
push
inc
xchg
mov
and
call
xor
lcall
outsl
popa
ret
decb
fdivrs
scas
lods
gs
popa
sub
push
into
cs
stos
cltd
cli
cmp
movsb
fwait
shl
dec
or
xor
movsb
or
imul
sub
xor
sahf
loop
daa
xor
jg
outsb
add
inc
lods
inc
cmp
ret
mov
cmp
xor
sub
mov
loope
lret
scas
xor
xor
mov
xchg
sub
mov
popa
lcall
cmp
pop
and
in
cmp
cli
jle
insb
ror
xchg
test
outsl
and
jle
push
xor
xor
cwtl
call
int
outsl
movsb
out
jno
xor
loope
bound
test
in
jae
outsb
pop
xor
lret
outsl
movsb
sub
hlt
mov
mov
mov
sub
bound
sub
inc
lock
hlt
out
gs
test
mov
xlat
scas
js
adc
mov
jb
or
xchg
lock
xor
xorb
clc
inc
loope
cmp
pop
mov
test
stos
mull
pushf
inc
repnz
adc
ljmp
mov
mov
dec
add
bound
lods
inc
stos
adc
cmp
xor
and
cmc
icebp
filds
jbe
sub
inc
rcll
xor
popa
fs
lods
hlt
xor
mov
bndstx
es
adc
adc
fcomip
adc
and
fisttpl
adcb
imul
mov
shll
or
push
xchg
dec
sub
mov
mov
mov
stos
jmp
call
inc
nop
add
mov
outsb
ss
sbb
mov
jge
xor
dec
and
loopne
mov
shll
jae
out
push
mov
pand
mov
push
jno
test
scas
ss
movsb
sub
dec
push
push
mov
add
shrb
lods
gs
imul
mov
addb
adcl
mov
das
push
inc
mov
pop
sarl
sbb
or
sahf
cmp
movsl
jb
in
mov
cmp
adc
imul
add
mov
cmpsb
popa
add
xor
and
je
and
ret
lea
inc
jo
and
mov
rolb
push
test
or
in
into
xorb
fsubp
out
mov
ljmp
inc
mov
stos
add
mov
lcall
popa
sbb
lret
scas
fistpll
xor
mov
int
popa
adc
mov
xchg
and
sub
push
aas
add
filds
xchg
adcl
cmc
je
test
add
and
jmp
and
push
mov
lods
jb
lods
jbe
xchg
sub
push
mov
insl
ljmp
and
repz
popf
xchg
fmulp
push
jp
in
fwait
sub
fyl2xp1
lcall
arpl
sub
es
or
loope
test
sub
lea
and
movsb
push
push
lret
xor
push
add
in
jp
or
lods
xchg
repz
mov
xchg
mov
lcall
add
daa
pop
mov
or
dec
push
and
jle
xlat
push
je
nop
call
cs
es
mov
scas
icebp
addr16
lock
xor
out
or
out
hlt
enter
cmp
inc
in
mov
sub
fwait
popf
jbe
push
orb
lods
sub
sub
inc
loopne
sbb
movsb
outsb
push
sbb
outsl
popa
lea
xorb
xor
lods
std
loop
shll
mov
lods
push
mov
xor
sub
and
or
lahf
sub
insl
sbb
mov
cmp
lock
in
jle
js
leave
mov
add
cld
mov
inc
test
lret
xor
and
mov
xor
jg
popa
js
in
sbb
std
les
aad
mov
pop
das
add
andl
xchg
jae
fcoms
xchg
leave
xor
and
aam
out
xor
in
push
lret
sbb
loop
loope
jge
inc
test
sahf
add
push
or
push
ret
les
in
nop
pop
mov
mov
sub
movsb
jl
rolb
je
sub
je
insl
imul
shrb
inc
dec
push
fidivs
and
xor
sub
ds
xor
dec
xchg
in
lret
mov
sbb
movsb
in
jbe
lea
imul
jmp
or
popa
xor
cmp
stos
insl
sub
out
lods
clc
mov
addb
pop
addb
orb
push
pop
push
mov
lret
repz
cmp
dec
popf
movsb
cs
cmp
add
xchg
aaa
nop
cmp
mov
pop
jno
add
sub
or
xchg
in
mov
loop
test
movsl
arpl
test
push
mov
mov
into
mov
stc
imul
mov
mov
into
dec
fs
cmp
insb
shr
inc
jno
and
add
mov
or
jl
popa
cli
lods
pop
ljmp
pop
sub
push
daa
loope
ficompl
fistl
sti
xlat
mov
jbe
xor
mov
ret
test
test
mov
mov
fsubrl
push
mov
scas
adc
xor
in
shlb
xchg
cli
into
test
movsb
test
cmpsb
and
xor
mov
jge
pop
sub
shrb
add
incl
aas
sub
add
cmpb
sub
inc
imul
xor
sarb
push
jb
xchg
int3
pop
mov
sti
sub
mov
mov
mov
sti
int
cs
lret
sub
fwait
out
imul
sub
sarl
sti
mov
mov
sarl
xor
mov
push
pop
outsl
fcos
push
loope
inc
xor
add
sbb
js
loope
inc
and
ret
test
insb
loope,pn
outsb
mov
inc
loope
hlt
push
int
in
jl
push
cld
test
mov
add
mov
adc
popaw
loope
jp,pn
scas
inc
shlb
movsl
adc
xchg
loope
popa
les
add
and
stos
into
mov
mov
cmp
movsb
das
xor
mov
subb
ds
or
xor
pop
nop
cltd
jg
aaa
dec
mov
ja
aad
lret
lock
push
push
stos
mov
adcb
popa
lods
scas
add
xor
popa
jle
mov
and
push
push
lods
mov
movsl
in
into
mov
cli
push
lcall
out
test
jnp
enter
jmp
and
in
daa
loope
nop
inc
inc
lret
adc
in
enter
sti
dec
pop
adc
adc
xor
jne
movb
mov
lea
jge
ja
bt
imul
jmp
lea
jne
inc
call
lea
jmp
movl
call
sbb
xchg
xchg
or
xchg
addl
jge
popf
imul
mov
rcl
jge
fsubrl
sbbl
sub
or
mov
adc
imul
scas
jae
imul
lahf
xchg
mov
pushf
ret
add
call
cmp
test
mov
call
pushf
push
pushf
call
insl
push
dec
dec
mov
cld
sbb
lods
jno
mov
push
stos
mov
daa
push
cs
cmc
bound
inc
push
pop
jecxz
mov
jnp
mov
dec
je
cmp
test
mov
ljmp
jecxz
lock
cmp
shl
andl
lods
push
bound
jg
cwtl
xchg
je
cli
inc
lea
cmpsl
popf
and
add
xor
rcl
mov
mov
or
fsts
mov
ds
ljmp
lcall
in
test
lcall
or
arpl
jecxz
or
repnz
cltd
stos
cmpsl
std
decl
sti
jle
nop
stos
repz
in
sub
cmp
sbb
add
js
pop
dec
and
xchg
aaa
fbld
pop
enter
mov
xchg
xchg
push
pushf
ret
lods
ret
cmpsl
dec
mov
out
jle
pusha
shll
pop
jl
js
nop
lcall
add
fildll
sub
jge
mov
and
lret
aam
mov
or
jns
into
mov
xchg
outsb
mov
inc
sbb
pop
adc
insb
int
out
mov
mov
mov
jns
mov
addr16
mov
xor
xor
andl
gs
dec
cmp
add
dec
mov
add
push
dec
rcl
mov
dec
call
aaa
mov
pushf
mov
cwtl
ror
pusha
lea
test
sub
rcr
lea
bswap
push
shl
dec
lahf
push
mov
push
shl
rol
push
xor
not
mov
jmp
andb
xchg
dec
cmp
xor
sbb
add
adc
sbb
and
push
clc
sbb
ficompl
ss
jae
movsb
push
scas
cmp
dec
sub
js
mov
and
mov
clc
cld
cld
in
or
cmp
lods
cmp
lret
push
and
faddp
xchg
push
mov
sti
pusha
pushl
ror
pushf
cmc
cmc
push
xor
jmp
jo
mov
arpl
pop
pop
scas
stos
cmpsb
aas
xchg
xchg
fwait
xchg
pop
addr16
inc
cmpsl
scas
xchg
xchg
xchg
insb
jb
inc
cltd
lret
enter
cwtl
test
xor
mov
and
push
add
sbb
sub
push
imul
add
sbb
jle
loope
nop
inc
inc
pop
stos
push
push
mov
test
fisttpll
into
push
sahf
fisttps
call
enter
mov
dec
dec
mov
insb
mov
out
mov
jae
popa
jbe
adc
in
or
push
add
loop
cli
push
imul
aam
cmp
and
mov
mov
mov
mov
enter
cmp
or
xchg
aaa
loope
mov
sub
fbstp
adc
push
pushf
fidivl
out
testb
cli
insl
xchg
xchg
lahf
imul
jae
xchg
lahf
sub
jb
pop
lock
jle
pushl
movsl
inc
mov
push
pop
movsl
pop
mov
cltd
mov
lds
mov
push
mov
sbb
cmp
mov
jp
adc
clc
pop
fsubrp
pop
mov
cmp
movsb
clc
add
sub
cs
pushf
adc
pusha
not
mov
pop
setge
lea
lea
je
pusha
movl
pushf
push
push
pushl
popl
push
pushf
mov
pushl
ret
xor
push
inc
pop
outsl
scas
daa
pop
jns
hlt
incb
sbb
sbb
clc
out
in
jmp
pop
fs
outsl
imul
adc
aam
xchg
add
test
lods
stos
mov
ffree
sub
lods
adc
mov
xchg
xchg
lahf
bound
repz
mov
xor
cs
dec
fmul
aaa
cmp
iret
add
pop
out
pop
cmc
push
pushf
leave
es
push
pushf
movl
pushf
call
push
xor
outsl
icebp
pop
andb
jp
sahf
test
arpl
mov
add
scas
push
rorb
orb
int3
fcomp
cmp
jp
pop
adc
stos
cli
jae
mov
pop
sub
das
ret
xchg
xchg
js
and
fcmovb
cmp
int
adcl
clc
adc
repnz
mov
add
repz
pop
dec
dec
dec
fcmovb
cs
aaa
loop
xor
test
and
ret
sub
out
push
pushf
mov
ja
shrb
sti
not
xor
movzbw
movsbw
add
shrd
mov
dec
stc
mov
clc
clc
repnz
push
lea
jne
not
jmp
lods
lock
mov
sub
out
xor
fsubs
fmul
mov
adc
and
inc
pop
mov
jb
add
ljmp
xlat
lahf
push
cmp
jge
mov
je
xchg
mov
jecxz
add
mov
and
pop
inc
xor
cmc
ret
sub
imul
out
fldt
or
mov
push
pop
adc
testl
popa
xchg
dec
inc
aad
jl
insb
inc
adc
addb
std
mov
clc
jae
jne
xchg
mov
mov
wrmsr
mov
pop
and
ret
imul
enter
inc
ljmp
lods
mov
fwait
mov
dec
test
nop
aaa
inc
mov
mov
inc
out
int
pop
out
and
pop
lret
sahf
adc
mov
fwait
add
jnp
rcrl
outsl
subl
lret
jae
jmp
movb
popl
movb
push
pushl
ret
lea
jae
not
jmp
pop
adc
shr
lcall
shl
sbb
push
or
add
or
push
sbb
out
push
mov
stos
fmull
pop
xchg
sbb
mul
std
jmp
stos
push
xchg
lcall
sub
rclb
es
cmpsl
xor
pop
and
xor
xchg
les
and
ja
les
fsubr
or
mov
popl
fnstenv
movsl
inc
and
xchg
sti
nop
push
clc
add
pusha
cmp
test
mov
or
mov
in
ds
das
sbb
xchg
or
in
xor
push
pushf
leave
dec
sub
bt
pusha
pusha
call
call
shr
cli
cld
ror
popf
rcrl
jo
test
stos
mov
popl
sub
mov
dec
sbb
adc
push
cmpsl
adc
lret
pop
outsl
jno
jo
ja
lret
inc
cs
lods
inc
adc
adc
or
fsubrs
movsl
imull
lods
mov
sbb
jbe
fnsave
ss
and
cmpsb
push
movsl
mov
dec
push
push
add
or
filds
inc
adc
icebp
cmc
adc
rorb
dec
sbb
or
mov
mov
pop
push
mov
inc
dec
push
pushf
lret
and
mov
add
sti
aaa
nop
add
movb
pushl
movb
lea
jmp
jmp
xor
push
inc
stc
jmp
push
pushf
mov
lea
jne
bsr
aas
sub
shr
mov
push
or
test
jmp
movl
pusha
pushf
pushl
movl
movl
mov
mov
lea
jmp
hlt
lret
fmull
sbb
lock
out
hlt
rol
shl
loop
cld
fcmovb
aas
mov
cli
mov
lods
cwtl
or
pop
jmp
sub
inc
test
out
fwait
mov
cmp
lcall
lods
movsb
push
push
mov
mov
pushf
lret
jl
cmp
in
add
push
mov
int
add
in
ror
xor
sbb
imul
pop
pop
mov
movb
pop
pop
mov
pop
inc
mov
push
pushf
lret
mov
cmp
jmp
xchg
push
pushf
lea
jmp
movl
pushf
lea
jb
pusha
pushl
ret
bswap
movsbw
mov
lea
jl
pushf
mov
not
movsbw
push
mov
mov
pushl
ret
pusha
mov
cmp
call
xor
bt
jmp
pusha
pushf
mov
lea
jae
pushf
jmp
lea
call
jmp
aad
int
cmp
pushf
or
jmp
pop
jmp
iret
and
xor
mov
jg
push
mov
xor
shrb
fsubrl
ret
mov
sbb
das
jg
adc
cltd
vpsraw
or
sti
push
pushf
int3
fmuls
push
lea
ja
push
lea
jb
cmp
cmpb
push
call
mov
inc
movb
rcr
call
cmpsb
inc
push
mov
sub
xor
cmp
testl
push
inc
js
leave
out
mulb
ljmp
sahf
rcrb
cmc
mov
add
inc
jp
aam
mov
sub
std
dec
push
jmp
or
xor
pop
mov
cmpsl
std
lds
repnz
push
fisubrs
in
add
fadd
seta
cmp
cwtl
outsb
out
jmp
repz
in
outsb
pop
push
dec
dec
out
xchg
aaa
call
sub
sub
jbe
xchg
scas
push
pushf
into
or
jbe
xchg
xchg
lea
stos
inc
mov
adc
call
xor
pusha
popf
add
jp
insl
clc
fwait
dec
idivl
xchg
and
outsl
or
mov
pop
je
xchg
mov
adc
ret
adc
jmp
leave
xor
sbb
push
pushf
into
movl
jmp
pusha
lea
jne
movzbw
pushf
mov
pusha
lea
jmp
movb
xchg
or
push
subl
dec
inc
scas
movsl
fwait
cmpsl
mov
sub
sub
pushf
sahf
fsubrl
mov
faddl
ret
scas
int3
pop
scas
push
jmp
sbb
xchg
stc
pop
call
xor
pop
add
cmp
das
cmp
sub
into
push
scas
cmp
mov
sbb
lea
not
push
mov
jmp
ja
imul
jb
iret
sub
movsb
push
dec
dec
insb
sahf
pusha
imulb
nop
pusha
xor
aad
cmp
and
nop
popa
shll
cwtl
mov
adc
mov
push
mov
xlat
dec
inc
inc
pop
dec
add
cmpsb
mov
rol
fdivr
movsb
lock
scas
sbb
mov
scas
mov
out
mov
cmp
ljmp
imul
out
jno
call
sbb
adc
mov
call
pushf
rorb
pusha
repz
call
movzbl
movsbw
mov
movb
mov
mov
movzbw
call
push
mov
lea
jns
push
lea
call
jmp
bswap
call
bt
clc
test
xchg
pushf
mov
cmp
test
cmc
stc
sub
jmp
pusha
lea
movsbl
bswap
xchg
xchg
movzwl
not
movzbw
not
call
bswap
lea
lea
jo
pushf
movl
pushf
pushf
pushl
popl
pusha
pushl
push
pushl
ret
lea
je
call
xchg
inc
pop
mov
push
subb
cmp
add
inc
addr16
and
cli
out
add
in
pop
push
dec
lock
test
mov
mov
inc
icebp
sbb
fs
gs
int
ret
xchg
imul
cmpsl
add
lods
push
insl
popa
jno
mov
movsl
dec
dec
push
pushf
rcrb
es
inc
or
xchg
xorb
nop
xchg
nop
lcall
cmpsl
repnz
jae
lods
mov
push
in
or
mov
sub
sar
out
xchg
out
hlt
fistpll
repnz
mov
xor
orb
cltd
gs
ja
popf
sbb
fisubrl
push
js
pop
sbb
jge
data16
pop
pop
push
dec
push
jb
fisubrl
add
add
jmp
pushf
rcl
sub
ja
pushf
add
bt
or
movb
pushl
lea
je
bt
cmp
pusha
mov
pushl
lea
jne
push
inc
pushl
pushf
pushl
inc
movl
push
lea
jmp
push
mov
pusha
call
pusha
pushf
lea
jbe
jne
dec
aam
sub
shld
bsf
btc
mov
shl
add
shr
mov
bt
call
sbb
mov
cmp
jl
adc
ror
das
lds
lds
cltd
repz
sahf
pop
mov
aas
pop
mov
repnz
xchg
mov
gs
xlat
aas
adc
add
sahf
lock
data16
mov
ud2
dec
mov
insl
push
inc
sbb
sbb
out
xlat
mov
rorl
sub
xor
mov
arpl
fildl
mov
bound
ror
pusha
mov
int3
cmc
aam
mov
cmp
ror
testb
ljmp
shll
call
mov
and
sbb
jecxz
ror
flds
testb
call
pop
test
push
pop
mov
clc
mov
mov
in
pop
push
lea
jae
mov
adc
and
adc
clc
lock
pushf
shll
js
out
dec
push
mov
rcrl
movsl
sbbl
test
add
bound
pushf
jle
in
xchg
in
and
cltd
push
lea
or
dec
mov
rcll
insb
xchg
mov
repz
sbb
pop
aas
addr16
sarl
pusha
xchg
aaa
out
ret
mov
ja
sub
iret
aas
cmp
sub
add
jmp
xchg
cltd
cltd
mov
rcll
jne
sbb
add
clc
fmulp
cmp
and
into
int3
or
and
cwtl
pcmpgtw
lea
sub
dec
aam
fcmovnb
xchg
in
cmp
add
sbb
add
insb
pop
in
or
lods
ret
and
iret
int
lret
arpl
jns
scas
repnz
orl
xchg
and
repnz
jbe
fs
sbbb
pushf
push
push
xchg
pop
lea
je
not
movzbl
lea
mov
jmp
das
insb
dec
fadds
mov
and
and
cmp
and
mul
sbb
xor
shll
ret
sti
stos
sbb
adc
push
inc
and
je
imul
push
cmpsb
xchg
dec
inc
jae
jl
pop
sub
sbb
in
iret
xchg
je
inc
mov
in
rorl
call
mov
sbb
ds
out
jne
mov
fsubrs
xchg
add
inc
aas
pop
mov
fst
lret
addr16
js
insl
pushf
lcall
or
lods
and
push
je,pn
adc
or
lret
cmpb
mov
sub
xor
idiv
sti
jecxz
pop
xor
aad
call
movl
jmp
jns
sbb
lock
fisttpll
cmpsb
test
push
mov
inc
adc
mov
loopne
jns
popl
push
pop
xor
lea
cs
sbb
sbb
clc
fadd
and
fcoml
aam
dec
call
jmp
cmp
cmp
jmp
pusha
lea
jae
jns
pusha
lea
jne
call
cmp
pushf
lea
ja
jmp
cmp
call
movb
test
add
jmp
and
and
pop
test
pop
jp
data16
xchg
mov
aam
stos
fstpl
mov
jp
fcmovu
rclb
in
iret
iret
loope
push
dec
gs
inc
imul
imul
movsl
popa
jbe
daa
arpl
lock
in
adc
push
adc
xor
and
add
jmp
in
cmp
fidivl
sub
jo
jb
lcall
sti
pusha
pushl
pushf
movl
mov
pushl
lea
jmp
and
bt
stc
add
add
jmp
cmp
push
addb
inc
push
inc
inc
inc
mov
inc
mov
push
inc
xor
jae
fisttpll
test
sub
rcll
dec
xchg
push
mov
fadds
pcmpeqd
inc
inc
dec
mov
pop
jbe
push
pushf
xlat
xor
lret
leave
and
add
jae
xchg
mov
inc
stos
mov
rcl
insl
lods
ds
add
or
push
or
mov
pop
jae
dec
push
cmp
int
in
bswap
jg
lds
fs
jbe
out
mov
inc
pusha
pop
cld
xchg
push
lret
icebp
ljmp
inc
pop
mov
dec
add
call
leave
cmp
cmp
add
in
mov
and
push
push
push
out
adc
push
ljmp
out
lea
ja
pushf
imul
bt
clc
add
mov
push
pushf
pushf
lea
jmp
fsub
or
and
mov
shrb
mov
mov
imul
lahf
stos
mov
outsb
pop
pop
or
xchg
pop
popa
xchg
aaa
repnz
jno
into
nop
jle
imul
jnp
imul
push
popa
cli
ret
dec
push
push
jle
sahf
jo
mov
pop
jl
xchg
lds
repnz
jg
sub
stos
pop
sbb
xor
sarb
pop
lret
ljmp
popa
cltd
mov
pop
das
imul
xchg
aaa
icebp
fsts
mov
add
call
xor
pushf
xlat
push
scas
cmp
setl
inc
pushf
setl
call
jmp
popf
cpuid
nop
jmp
push
pushl
popl
setl
mov
lahf
call
jmp
bts
bsf
mov
call
jmp
jmp
test
add
cmc
pusha
mov
bt
stc
push
pushf
test
jmp
cmp
pushf
lea
ja
call
lea
jne
setle
pusha
push
mov
pusha
lea
jmp
out
or
xchg
lock
test
xor
and
int
fcmovne
xlat
ret
leave
fdivrs
mov
pop
adc
mov
mov
jae
inc
scas
ljmp
fsubrl
testb
iret
nop
jmp
pushf
adc
cld
les
sbb
sbb
sbb
sub
sbb
fadds
mov
mov
fnstsw
lods
inc
dec
mov
jp
dec
push
inc
dec
outsb
pushf
mov
out
mov
fsubrl
rcll
jne
and
sub
fdivl
ljmp
or
loopne
cmp
add
hlt
cld
loopne
add
out
pushf
xor
setne
lods
mov
neg
stc
cmp
xor
call
call
add
dec
outsl
arpl
inc
jb
add
mov
shr
in
add
and
xorl
xor
popl
mov
pop
push
movsl
mov
mov
sti
inc
cwtl
jo
in
jmp
add
add
or
dec
inc
push
xchg
sbb
call
xchg
cmp
push
hlt
push
sbb
push
movsl
rorl
sub
bsf
lcall
mov
pop
mov
push
pushf
fsts
jmp
lea
jb
cmp
cmp
push
jmp
lea
jne
cmp
pushf
xor
shld
mov
call
lea
jne
lea
mov
bt
add
not
sub
bsf
mov
push
movw
pusha
sub
movb
pushl
popl
clc
stc
pusha
cmp
pushl
call
push
call
mov
sbb
or
mov
movsl
push
pop
push
push
push
inc
lea
stos
lods
mov
rcrb
sbb
mov
hlt
cmp
in
popa
repnz
inc
repnz
push
loope
cmp
adc
add
push
dec
dec
mov
cltd
popa
mov
sub
sahf
pushf
sysret
and
xchg
popf
cmpb
sbb
orl
sub
ret
dec
adc
mov
xchg
mov
clc
outsl
jno
xchg
aaa
cmc
mov
mov
jne
xchg
stos
xchg
mov
pushf
ficompl
pushf
lea
jmp
adc
pushf
pusha
call
adc
pop
dec
nop
in
mov
inc
pop
movsb
orb
push
mov
cmp
stos
cmp
out
lds
or
fisubrl
rcl
mov
lea
and
sarb
xor
repnz
mov
sti
mov
sub
adc
mov
xchg
imul
clc
scas
push
jge
cwtl
in
sbb
mov
xor
xor
test
pop
inc
xor
cltd
outsb
pop
pusha
in
cs
cmc
pop
xchg
push
and
push
insb
jl
test
pusha
pop
push
pushf
fisttpl
aaa
or
pushf
lea
je
pushf
movl
or
pushf
pushl
pushl
pushf
lea
je
shl
sar
sub
daa
setno
bsf
mov
seta
mov
movzbl
bsf
clc
shr
sbb
clc
rol
sar
mov
jmp
push
pushf
lea
call
pushf
jmp
sub
mov
lea
call
jmp
lea
pushl
mov
pusha
pushf
pushf
push
pushl
ret
neg
test
xor
pushl
inc
jmp
push
dec
popf
pushf
xor
shrl
das
or
xor
pop
or
cmc
std
add
jmp
ficomps
test
inc
cmc
shl
or
dec
pop
pop
mov
imul
push
fsts
dec
mov
into
das
negl
add
and
frstor
enter
fldenv
test
cmp
add
xchg
in
icebp
fucomp
in
adc
pop
bound
xchg
aaa
testl
xchg
je
adc
dec
inc
dec
mov
pushf
fmull
sbb
add
jnp
popl
ss
push
insb
push
cmpsb
jnp
jg
popa
ret
in
and
test
inc
and
fdivr
ret
es
mov
pop
xchg
loop
or
int
cwtl
dec
add
xchg
sbb
inc
pop
xchg
rcrl
xor
repz
ja
pop
popa
lahf
leave
jecxz
push
pop
pop
insb
fs
dec
sbb
inc
push
push
lods
ljmp
loope
xor
cmp
addr16
bound
inc
pop
daa
and
loopne
cmpsl
jne
inc
das
adc
push
insb
xor
aad
xchg
lcall
jmp
mov
stos
xorl
shrl
dec
pop
fs
jle
cmp
roll
mov
jae
stos
sub
movsl
ss
jp
pop
fwait
data16
bound
mov
pusha
jl
ret
push
rcrb
out
mov
scas
je
outsb
mov
cmp
jecxz
test
mov
dec
sub
leave
and
ljmp
cmpsb
cmc
outsl
pop
cmpsb
sub
aas
andb
mov
add
mulb
adc
test
xchg
xchg
jnp
lea
dec
ret
cmp
test
adc
pop
jnp
test
hlt
repz
arpl
cmpsb
push
sarb
xor
xor
sahf
cmp
insb
push
jp
jb
frstpm(287
lock
out
gs
push
data16
mov
xchg
call
jo
and
mov
push
xchg
decb
inc
ret
out
ja
or
add
xchg
mov
mov
mov
mov
repnz
xchg
addl
ja
xchg
mov
loop
je
push
mov
imul
mov
test
mov
js
hlt
dec
add
test
js
mov
out
mov
lds
hlt
insb
push
aad
pop
jns
call
cli
ljmp
dec
std
in
dec
add
ljmp
xor
out
xchg
jge
iret
cmpl
mov
icebp
sbb
andl
jmp
out
jns
jle
and
jg
pop
hlt
xor
gs
xchg
mov
mov
add
incb
mov
addr16
and
out
sub
jle
cld
aas
mov
and
mov
mov
and
pop
hlt
dec
dec
sahf
jle
call
subb
jecxz
xchg
cmpsl
outsl
jecxz
insb
fs
xchg
hlt
movsl
ja
jge
repz
jns
ljmp
loop
xchg
out
movsl
popa
out
arpl
jne
insb
jecxz
ja
std
movsl
cli
inc
out
lahf
xchg
xchg
imul
movsl
jno
stc
arpl
mov
cmpsl
jb
es
sbb
test
or
std
lods
incb
in
movsl
ljmp
xchg
vfpclassps
data16
imul
inc
jnp
out
scas
ljmp
xchg
jg
jae
fmuls
out
arpl
push
fcomi
loope
jne
pop
ficompl
jne
outsb
push
fs
cmp
lds
jmp
cwtl
out
scas
repnz
push
jne
clc
cli
popa
jnp
enter
outsb
rcll
jb
outsb
out
insb
testb
push
jp
shll
repz
jae
in
arpl
push
jge
popf
push
push
push
fnstcw
and
inc
dec
scas
in
fldt
cmp
jne
pop
add
repz
aad
movsl
out
jecxz
test
outsl
pop
je
mov
jle
ljmp
repnz
loop
idivl
test
inc
jne
pop
mov
out
stc
in
arpl
inc
mov
test
out
in
test
fs
insl
das
sbb
sub
dec
fwait
outsl
jae
lock
pop
test
arpl
out
cmp
xchg
xchg
inc
xchg
and
fildl
movsb
outsl
pop
pop
sbb
inc
cli
cmp
jb
arpl
outsl
js
hlt
pushf
fld
out
mov
mov
insb
add
hlt
push
aaa
out
mov
jo
std
push
xchg
and
jns
mov
pop
mov
jp
insl
jecxz
popf
pop
push
jmp
out
or
gs
pop
jmp
xchg
lret
jns
subw
scas
imul
pop
negl
in
imul
out
or
push
repz
xrelease
mov
outsl
mov
int
shl
outsl
shl
mov
jmp
mov
xchg
call
xchg
xlat
out
xchg
ss
push
in
mov
orb
test
enter
loop
insl
test
or
jge
mov
je
mov
and
add
jo
mov
ljmp
fs
popf
sti
jecxz
xor
cmp
xchg
mov
lods
out
dec
xor
call
push
fwait
push
jb
push
add
sub
mov
lds
call
xchg
insl
cmpsl
xchg
out
repz
je
pop
jns
es
xlat
xchg
arpl
bound
pop
data16
clc
sbb
mov
fbld
mov
out
jae
leave
cs
popa
loope
dec
scas
lock
insb
imul
mov
jecxz
jbe
std
enter
sub
in
jg
out
imul
xlat
out
inc
loop
push
jae
rolb
jbe
fsqrt
mov
sub
jmp
jmp
imul
fldl
loop
outsb
pop
cwtl
out
jbe
xorl
pcmpeqd
fs
jne
mul
in
lods
pop
jae
std
je
out
out
addb
data16
fnsave
mov
repnz
ret
push
jmp
ffree
add
aaa
ret
jmp
mov
mov
cmc
or
icebp
or
ss
into
or
pop
push
add
xchg
xchg
out
in
arpl
xchg
popa
ret
jmp
out
in
xchg
ljmp
test
clc
mov
sub
daa
out
dec
ljmp
fcmovnu
mov
shr
scas
push
pop
popa
ds
push
fcmovnu
jecxz
jp
in
xchg
arpl
gs
mov
jp
mov
js
pop
leave
mov
frstor
cwtl
repz
popa
ds
cltd
and
out
dec
imul
test
add
call
pop
xchg
gs
cmpsl
data16
pop
fs
pop
out
and
icebp
xchg
ljmp
gs
ss
loope
jg
imul
lock
testb
imul
test
in
mov
mov
out
pop
gs
jle
test
jae
mov
call
test
imul
gs
ss
out
fldt
mov
popf
gs
inc
ljmp
lock
testb
imul
arpl
aaa
popa
data16
out
roll
jmp
call
sub
test
loope
adc
jmp
pushl
popa
xchg
data16
and
out
bound
addr16
scas
ja
call
inc
pop
test
scas
addr16
add
jbe
stc
divb
test
xor
iret
incb
cltd
in
ljmp
mov
jae
inc
sti
jne
inc
loop
in
jbe
data16
cwtl
fistpl
gs
jg
jnp
ja
jo
in
mov
xchg
xchg
xchg
pusha
ret
push
jecxz
xchg
cld
mov
inc
lea
jno
fwait
das
add
je
jbe
outsl
mov
addr16
mov
fcmovnu
or
stc
jnp
xacquire
addl
xor
sahf
mov
xchg
and
clc
test
call
ss
cs
push
dec
enter
loop
xchg
in
test
nop
sub
addr16
adc
lods
push
push
push
arpl
or
loope
test
test
push
jbe
sub
mov
insb
cmc
adc
mov
push
js
fistl
mov
mov
scas
jne
fwait
call
sti
jp
jp
xchg
pushf
xchg
push
cmpl
push
or
loope
mov
out
jge
push
std
xor
test
out
in
testb
ljmp
out
hlt
scas
mov
jb
xchg
mov
aas
out
scas
cli
xchg
adc
jno
cwtl
xchg
insb
mov
mov
inc
jge
test
orb
jae
icebp
insb
das
out
scas
mov
out
sbb
xchg
cmp
out
in
lods
stc
div
and
jmp
add
das
xchg
in
out
jle
test
inc
roll
inc
mov
sbb
add
fs
call
insl
aas
arpl
fs
jns
cwtl
jae
jg
test
imul
mov
xchg
pop
push
gs
and
not
add
lea
call
aad
lock
fildl
stc
sub
cmc
or
subb
mov
addr16
pop
mov
test
mov
js
loope
push
aad
xor
mov
mul
add
xchg
stc
sub
outsl
mov
jle
mov
mov
out
xchg
inc
out
cli
in
jecxz
dec
mov
lret
fwait
bnd
mov
pop
scas
loope
and
pop
jnp
mov
jae
pop
test
jo
addr16
outsb
in
arpl
add
out
cld
movsl
test
ljmp
push
outsb
inc
in
push
popa
or
subl
cs
jp
xchg
decb
and
dec
cld
jge
pop
fs
cmp
data16
mov
pop
add
rorb
daa
bound
mov
cli
and
mov
pop
pop
push
mov
scas
lds
jb
shl
orl
in
jle
in
xorl
cld
fdivrp
pop
in
je
jp
imul
cmpb
js
hlt
popa
mov
fldt
outsb
and
das
repnz
jecxz
add
addr16
das
clc
mov
xchg
mov
dec
es
insb
fs
jae
int3
push
push
cmc
aas
pop
jno
imul
out
mov
xchg
or
mov
xor
cmp
mov
std
divl
gs
scas
aas
mov
test
xchg
arpl
xlat
out
cwtl
ss
xchg
popa
out
ljmp
add
jmp
fstpt
dec
scas
hlt
mov
in
call
cli
mov
std
out
mov
sti
ja
cltd
imul
sbb
out
jbe
jmp
xchg
sub
mulb
xchg
repz
jmp
add
scas
add
jecxz
mov
add
andb
xrelease
jge
cmp
mov
cwtl
mov
bound
jecxz
bound
jmp
pop
jno
cmp
xchg
add
std
push
mov
mov
ret
pop
cmp
mov
jae
insb
cwtl
mov
xchg
std
and
mov
pop
jmp
outsb
mov
add
leave
in
jb
mov
add
lock
add
das
push
cmpsl
xchg
aad
mov
xorb
mov
repz
into
add
jmp
out
lock
sbb
sbb
pop
cmc
into
push
scas
xor
jle
test
add
stc
lds
jbe
rcrl
push
cmpsb
mov
lahf
add
xchg
data16
jns
sarb
imul
imul
into
dec
loope
addr16
ret
lock
add
xchg
jae
xlat
out
xchg
ss
cwtl
movsb
out
xchg
out
xchg
xlat
out
xchg
ss
xchg
movsb
out
xchg
out
sahf
xlat
out
mulb
outsb
loope
push
jl
sbb
xor
mov
mov
insb
cs
loope
cmp
aas
add
ret
out
test
into
repz
xor
xchg
push
pop
inc
bound
lds
popa
jmp
ret
xchg
ret
pop
stc
outsb
jb
mov
mov
cwtl
rcr
push
mov
ret
loope
fwait
cmpsb
sti
sti
outsb
jmp
push
xor
inc
outsb
js
jnp
scas
jl
inc
arpl
data16
lea
xchg
insb
cmp
xchg
in
mov
outsb
sbb
jns
jl
ja
and
add
outsb
xchg
and
sub
cli
call
mov
and
mov
insl
push
js
cmpsb
imul
sbb
ss
add
jl
in
arpl
inc
jbe
dec
in
jecxz
insb
dec
mov
adc
idivb
popa
xchg
cmpsl
push
or
jl
sbb
das
pop
and
gs
jp
cmpb
neg
mov
and
jl
adc
pop
fwait
adc
loop
popf
int3
add
jnp
mulb
mov
ret
bound
aas
pusha
jl
mov
jae
or
lret
iret
adcl
cmp
and
out
add
out
repnz
out
bound
aam
cli
or
push
mov
je
inc
insl
mov
pop
push
xor
data16
pop
outsl
arpl
pop
sub
dec
rcrw
cmpsl
xchg
out
negl
xor
cli
mov
call
jp
and
jno
jecxz
pop
jbe
stos
sar
dec
cwtl
mov
sbb
xor
outsl
rcl
dec
aad
pop
mov
daa
push
jmp
mov
jecxz
fildl
test
loop
std
decb
xchg
mov
std
xchg
jg
cld
push
xchg
loop
int3
hlt
scas
cld
xchg
nop
stc
cwtl
push
out
data16
jl
xchg
loope
gs
imulb
test
xchg
jae
jp
fistpl
xchg
jo
jmp
divl
jge
jg
jns
pop
sti
lea
addr16
popa
cmpsl
arpl
insl
outsl
xchg
imul
std
jecxz
cli
xchg
jns
fistpl
fwait
out
arpl
loope
fs
insl
xchg
out
movsl
push
in
arpl
clc
cmpsl
jb
repz
mov
mov
pop
aaa
cmp
scas
jns
fstpt
fcomi
and
pop
mov
xchg
testl
subl
ficompl
loop
push
outsb
bound
and
outsb
cld
das
mov
mov
add
icebp
int3
mov
sbb
aas
fdiv
lock
shlb
loope
js
scas
mov
loope
mov
mov
or
push
outsl
jo
enter
jno
popa
xchg
in
movsl
lock
jno
repz
out
xchg
adc
and
gs
mov
data16
dec
jg
fstpt
push
jnp
outsl
cmp
decl
js
cmpsl
mov
mov
jmp
jo
arpl
jns
mov
je
outsb
mov
jmp
imul
rcrl
popf
cmpsb
in
mov
mov
mov
jnp
addr16
jg
popf
andl
stc
rcrl
in
cwtl
clc
lea
xchg
fcomi
gs
out
pop
test
std
jbe
fwait
cltd
bound
fwait
popw
inc
fsubs
and
shr
icebp
mov
jo
cmc
mov
mov
xchg
jg
push
inc
jl
lods
hlt
cmc
mov
jno
pop
cmc
hlt
mov
imull
arpl
andl
jg
imul
mov
test
mov
out
add
jns
pop
clc
inc
icebp
arpl
push
insb
lock
shll
cmpsl
xchg
push
clc
xchg
repnz
hlt
out
arpl
jns
fmull
repz
imul
mov
in
out
arpl
insb
cmpsl
jbe
add
xchg
mov
push
xchg
cwtl
xchg
xchg
out
das
jle
jg
push
ja
jno
stc
jl
sahf
test
int
jno
daa
div
pop
xorb
jne
addr16
and
insb
in
insb
popa
cli
insb
loope
insb
gs
insb
inc
mov
jb
pop
ja
pop
icebp
mov
arpl
out
mov
push
jmp
nop
js
es
xorl
add
mov
loopne
cmc
fs
repz
mov
lds
jno
jp
pop
cwtl
out
stos
xor
xchg
call
pop
sahf
call
popa
cli
call
gs
call
insb
aam
jb
dec
pop
ja
mov
mov
push
jns
push
cltd
dec
pop
outsl
sahf
push
push
dec
pop
jmp
push
pusha
dec
call
xor
xchg
pop
outsl
add
mov
push
loopne
pop
addr16
mov
mov
mov
cmp
mov
test
in
scas
ljmp
mov
es
in
aad
data16
fdivs
fldt
icebp
jno
scas
jle
or
imul
roll
push
arpl
jg
pop
dec
in
repz
inc
out
je
nop
call
les
and
xchg
imul
out
shl
jge
gs
cli
addr16
in
out
rep
pusha
cli
loop
mov
xchg
pusha
mov
gs
cli
adc
pop
xor
imul
out
in
addr16
adc
cli
and
and
jmp
int
stc
test
jmp
clc
icebp
pop
pop
xchg
out
js
bnd
hlt
xchg
jae
std
shl
iret
arpl
orl
lock
sarb
popa
mov
jae
outsb
xchg
cld
and
ljmp
sbb
std
out
jns
sub
add
push
xchg
mov
out
cld
clc
xorb
roll
mov
mov
pop
xor
xchg
out
inc
insb
jns
fildl
inc
ja
mov
lock
xchg
lods
js
into
xor
inc
mov
xorb
out
mov
scas
jle
sub
mov
jne
test
cs
sti
test
xchg
mov
xlat
and
pop
cld
sbb
daa
insb
mull
xchg
push
pop
sub
test
push
adc
imul
mov
in
push
in
mov
andb
out
ret
daa
mov
leave
jo
mov
out
xchg
inc
out
xchg
or
and
adcl
jge
aam
jge
mov
loop
cwtl
cmpsl
loope
add
bound
in
push
pop
pushf
xchg
loope
stc
je
adc
adc
adc
mov
cmc
popf
in
jb
jae
nop
inc
icebp
clc
data16
adc
add
mov
psubw
jle
cld
test
pop
dec
loope
jae
call
outsb
aad
std
ffree
lock
pop
pop
repnz
ja
frstor
jle
enter
inc
mov
jg
outsb
add
lret
pop
cmp
insl
cmp
bound
cmp
cld
jo
mov
roll
ljmp
loop
loope
mov
or
jns
data16
movsb
cld
scas
fs
ret
je
repnz
xor
add
jb
loop
push
lock
add
test
xchg
pop
out
dec
in
sbb
jnp
sbb
gs
loope
lods
imul
pop
push
test
nop
mov
divl
js
arpl
push
or
cmpl
pop
jns
movsl
push
negb
les
iret
mov
xor
std
call
jno
gs
cli
rcrl
aam
outsl
imul
jo
addr16
or
jl
int3
es
jmp
out
hlt
pusha
es
jbe
add
out
adc
pushw
lahf
hlt
inc
es
lahf
divl
add
call
adc
arpl
lea
test
pop
mov
push
es
ret
mov
push
or
xchg
jmp
out
jns
or
ret
imul
dec
fldcw
sti
sub
mov
testl
je
mov
addl
mov
aaa
jno
mov
jecxz
jne
sbb
add
jle
sahf
xchg
jb
hlt
sub
jp
fstpt
mov
mov
inc
jb
in
sbb
imul
jmp
popa
lcall
xchg
jo
mov
mov
test
jae
jne
xchg
mull
jmp
pop
scas
xchg
outsb
cld
arpl
jb,pt
shl
cwtl
imul
push
imul
xchg
xchg
mov
lcall
sar
andb
test
testb
call
push
mov
out
insl
xchg
out
lds
push
in
cmpsl
xchg
cmc
js
jb
je
jle
add
pop
jp
xchg
jo
ljmp
jecxz
hlt
xchg
jae
std
out
push
mov
movsl
push
jecxz
insl
xchg
out
movsl
jmp
xchg
clc
cmpsl
repnz
jae
jge
jg
jns
pop
mov
cmpsl
loope
in
jno
mov
sahf
loop
outsl
insb
and
out
aam
xor
fidivl
cwtl
out
js
repnz
xchg
jae
add
jg
stos
in
push
jecxz
outsb
xchg
lock
ljmp
cmpsl
repnz
xchg
jge
movsl
test
repz
sti
push
shll
gs
inc
jge
in
enter
cmpsb
inc
ljmp
insb
cmc
jns
gs
pop
jecxz
insb
scas
movsl
push
enter
stc
jnp
xorl
imul
andb
int
add
loope
gs
clc
gs
insb
fstpt
in
mov
test
and
adc
mov
decb
les
and
and
popa
in
ret
cmp
je
test
jmp
jns
popa
pop
xor
test
popa
out
loop
les
in
jmp
fidivrs
in
imul
sbbb
mov
arpl
cmp
imul
cmp
push
sbb
mov
xchg
imul
lea
cs
loop
ljmp
testb
and
gs
fstpt
les
jne
inc
data16
and
clc
stc
jno
arpl
push
insl
mov
jg
cld
cmpsl
in
cmp
repz
popa
hlt
icebp
iret
loop
cmpsl
pop
fdivs
icebp
cmp
addr16
jno
cwtl
push
data16
and
jne
mov
hlt
imulb
mov
push
mov
aad
jge
outsb
cs
icebp
ret
mov
int
cli
mov
jmp
inc
sti
dec
incl
xchg
mov
out
in
fldt
arpl
test
scas
cld
jg
jmp
jecxz
insb
std
es
or
movsl
push
addr16
popa
fwait
sub
repnz
ja
adc
pushl
imul
hlt
dec
mov
imul
xchg
loop
gs
popa
imul
gs
int3
xchg
add
mov
cli
mov
jmp
call
push
adc
out
icebp
sub
arpl
arpl
and
outsl
cmc
imul
jbe
jo
imul
jno
or
jno
in
outsl
ret
movb
mov
imul
cli
adc
jg
jne
clc
fs
or
loop
stos
loope
addr16
and
cmc
pop
in
pop
incb
fisubs
test
aaa
stos
in
pop
in
lea
cmp
and
bound
popa
test
cmpsl
xchg
call
icebp
xchg
fucomp
xchg
cmc
outsb
scas
jmp
ljmp
cli
gs
std
inc
insb
out
test
ds
repnz
sub
insb
cmpsl
lret
mov
dec
push
xor
insl
adc
data16
addr16
sti
push
icebp
cmpsl
imul
fstpt
fcomi
pop
push
loop
outsb
arpl
subb
icebp
outsb
std
pop
cmc
mov
lcall
fstpt
jnp
outsb
out
negl
test
dec
or
pop
mov
jne
fisttpl
arpl
lock
divl
data16
ja
mov
lock
xlat
xchg
jecxz
pusha
xchg
flds
out
arpl
xchg
dec
push
cwtl
jg
cli
outsb
pushf
cmpsb
cli
stc
push
jo
in
add
pop
outsb
push
in
jecxz
jo
addr16
mov
data16
push
jae
xor
je
inc
jnp
std
sub
in
bnd
insl
or
rol
jl
call
or
cmp
jecxz
in
xchg
in
cmpsb
nop
mov
in
dec
stos
mov
mov
in
mov
addr16
outsb
mov
movsl
mov
popf
decb
ljmp
jecxz
jae
or
push
jnp
outsb
jbe
clc
lea
negb
xor
pop
mov
aad
icebp
cmpsl
xchg
in
jmp
fidivrs
xorb
xchg
stc
xchg
pop
push
add
cmpsl
ljmp
es
in
std
cli
mov
pusha
xchg
jno
in
outsb
adc
mov
imul
idivl
push
clc
xchg
hlt
mov
xchg
mov
jb
test
fildl
out
das
ja
clc
xchg
mov
jecxz
loop
dec
mov
outsb
xchg
and
outsb
data16
mov
jo
decb
lods
jbe
into
data16
ja
aad
imul
fildl
roll
js
imulb
ja
imull
mov
out
out
jge
cli
xchg
cld
lds
pop
push
jecxz
ljmp
arpl
xchg
jle
jmp
jns
ljmp
movsl
lock
arpl
xchg
jne
repnz
add
mov
xchg
out
arpl
xchg
jo
ljmp
hlt
out
lock
popa
test
in
xchg
in
xchg
jne
mul
repz
xchg
jp
sbb
jae
in
arpl
xchg
stc
cwtl
xchg
repnz
xchg
data16
out
xchg
outsl
movsl
jmp
xchg
jno
jmp
out
test
jge
xchg
enter
dec
xchg
loope
test
pushf
xchg
ljmp
js
icebp
xchg
je
jecxz
stc
imul
movsl
addr16
arpl
lock
push
in
jbe
clc
movsl
jb
je
jle
jmp
jecxz
loop
movsl
outsb
out
arpl
xchg
insb
cmpsl
cmc
jecxz
jno
movsl
add
jp
data16
xchg
in
out
out
arpl
xchg
in
cmpsl
imul
ja
icebp
movsl
je
std
arpl
stc
enter
notl
out
arpl
ljmp
ja
icebp
out
arpl
xchg
jg
cld
push
popa
mov
cmp
scas
mov
repz
pop
stc
push
dec
inc
insl
fcompl
sti
cmp
pop
inc
and
mulb
data16
popa
pop
imul
hlt
aas
imul
out
outsb
data16
add
popf
push
jmp
test
iret
mov
mov
mov
testb
out
sbb
outsl
fsub
mov
pop
inc
jae
xlat
out
sbb
out
jp
jae
xchg
mulps
out
adc
popf
push
inc
out
arpl
decl
inc
out
jae
decl
inc
out
sti
or
jecxz
jno
mov
push
incb
repz
jl
inc
sub
imul
data16
out
xor
jae
fwait
in
bound
add
clc
lods
std
out
xchg
or
mov
inc
outsb
daa
mov
adc
imul
js
xor
decb
push
xchg
fs
and
xchg
xor
in
dec
push
outsl
sub
and
and
pop
jecxz
mov
jmp
mov
push
imul
jle
je
in
imul
and
jne
pop
lea
pop
div
data16
xor
jmp
cld
jae
pop
jg
push
out
mov
jg
call
jg
js
call
icebp
jge
inc
repz
jns
iret
fsubl
mov
data16
mov
mov
push
lds
mov
pop
xor
gs
push
jecxz
out
addr16
movsl
gs
jno
mov
xor
hlt
hlt
aaa
outsb
inc
jbe
aam
outsb
jecxz
pop
mov
gs
addr16
stc
in
ss
mull
addr16
ss
cmpsb
repz
jb
gs
adc
out
loop
scas
hlt
mov
inc
addr16
arpl
jae
mov
call
mov
test
jae
mov
cwtl
xlat
cwtl
xchg
fisubs
cmp
pop
enter
ret
add
jo,pt
popa
xor
lods
popa
call
mov
popa
popf
jnp
repz
cmpb
lods
imul
in
jg
mov
inc
push
xorb
addr16
jae
xor
jnp
imul
js
push
jb
inc
popa
addr16
cmpl
std
cmp
outsb
xchg
nop
repz
and
in
jl
and
in
insl
lea
fs
jle
xchg
push
gs
test
out
cwtl
mov
xchg
jp
adc
or
and
and
scas
data16
and
jb
mov
jnp,pn
sub
scas
xor
imul
jecxz
in
stos
fstpt
mov
sti
and
jp
imul
sar
in
sub
add
insl
mov
jl
sbb
sti
mov
or
fiadds
sub
loopne
dec
sbb
adc
jnp
hlt
mov
sub
cmp
adc
fucomi
cmpsl
sbb
aaa
sbb
pop
out
testl
ja
imul
arpl
xchg
test
sti
mov
fadds
lods
mov
ss
cmpl
roll
addb
dec
lds
ret
dec
cs
in
out
and
insl
jl
dec
or
jmp
scas
and
fisubrs
xchg
xchg
mov
out
jp
jnp
jns
jge
jbe
out
mov
shl
push
mov
cmp
pop
test
cmp
inc
xchg
push
notl
in
jl
push
adc
lcall
adc
sbb
jbe
aaa
addr16
stc
or
jns
shll
jmp
pushf
pop
int3
insb
jbe
cwtl
enter
jae
cmp
adcb
and
insl
enter
dec
out
inc
dec
arpl
testl
inc
inc
xchg
inc
add
mov
and
dec
test
loope
lods
test
mov
clc
insl
sbbl
sbb
cs
sub
jmp
inc
scas
stos
mov
add
gs
fwait
fs
insl
xchg
mov
jge
jns
sti
sbb
adc
adc
sbb
test
out
cmpsb
push
dec
jnp
decb
cltd
pusha
push
js
inc
daa
jns
aaa
xchg
loop
dec
push
into
mov
jo
xchg
mov
outsl
out
mov
dec
into
jae
add
insb
fsubs
add
out
mov
jl
mov
fmuls
mov
xchg
std
test
loop
sbb
movsb
mov
rorb
in
fisttpl
mov
pop
not
loop
stos
addr16
fidivs
or
jnp
jno
sbb
gs
mov
dec
push
iret
lret
ljmp
sub
push
mov
sbb
push
add
cmpsl
jl
sahf
or
fsubs
gs
clc
mov
in
push
xor
mov
and
mov
andl
cmpsl
xor
scas
jecxz
dec
loopne
lds
outsl
cmp
das
lea
xchg
fnsave
fistpl
xlat
sahf
jl
ret
fmull
dec
mov
bound
lds
in
insb
or
xchg
sub
inc
jl
cltd
insb
fildl
xlat
or
nop
pop
ja
outsb
mov
xor
ret
xchg
rcl
scas
cltd
and
outsl
jl
mov
leave
jl
divl
lods
lret
push
jle
jl
mov
outsl
jae
cli
icebp
jnp
aam
jmp
lods
mov
iret
sub
clc
ret
call
bound
add
addl
enter
xchg
bound
and
arpl
test
xchg
out
jbe
shlb
pop
imul
and
mov
mov
push
mov
fisubrs
dec
pop
loop
pop
cld
sub
mov
jnp
fwait
jecxz
mov
imul
imul
sub
or
jmp
dec
scas
out
jmp
add
popa
call
outsb
ret
mov
idivb
adc
aas
addr16
repnz
addr16
xchg
fs
sub
scas
lock
or
repz
sbbb
sbb
push
push
insl
mov
pop
inc
jns
je
sbb
dec
mov
jne
xchg
mov
mov
mov
cld
mov
xor
inc
jl
or
scas
je
out
xor
arpl
jno
bound
repz
mov
mov
jne
aas
bound
repnz
hlt
in
out
jno
mov
inc
xchg
jae
in
outsl
sub
mov
fidivs
pop
add
fsubp
jg
hlt
lea
out
adc
jg
lds
fsubrs
mov
mov
mov
insb
cmpsb
inc
data16
out
test
push
fwait
out
sub
lea
ja
insl
out
scas
fldt
loop
pop
in
scas
stos
mov
jae
dec
push
inc
popf
inc
adc
arpl
push
mov
inc
insb
es
fs
popa
jbe
shll
lock
in
insb
jae
pop
xchg
in
int
clc
jnp
jo
jno
sub
jns
xchg
int
clc
inc
test
data16
xchg
mov
scas
call
out
xlat
xchg
ficoms
cmp
jecxz
inc
or
outsb
xchg
or
call
lock
jb
clc
mov
jle
movd
jle
xor
jns
loopne
movsb
jle
push
or
mov
cld
mov
mov
repnz
xchg
insb
xor
jne
pop
xorb
jg
repnz
ja
xchg
or
cltd
popa
scas
imul
adc
cli
imul
test
in
insl
clc
loop
or
insl
cmc
mov
xchg
ss
movsl
decb
xrelease
push
mov
loop
mov
test
test
jmp
sub
push
fcomi
or
addr16
jg
repnz
in
mov
es
data16
repz
jbe
scas
imul
out
inc
bound
jecxz
jmp
loope
jmp
mov
jne
out
jne
ljmp
icebp
loope
testb
jnp
push
jnp
sbb
mov
mov
repz
inc
in
jg
aad
ljmp
mov
shld
jne
xchg
ljmp
in
cmpsb
in
ret
mov
lahf
mov
push
test
icebp
mov
jb
repz
hlt
arpl
cltd
out
es
sti
xchg
out
jae
imul
jae
mov
sbb
lea
pop
clc
shlb
notl
jb
popa
jmp
lea
outsl
jmp
idiv
testl
fdivp
xchg
jne
push
dec
imul
xor
lea
ljmp
test
clc
ret
pop
repz
or
lretw
movsl
aad
push
arpl
xchg
pop
cmpsl
filds
pop
mov
jmp
pop
in
out
cmp
fisttpl
jo
imulb
loop
inc
mov
in
push
scas
in
dec
push
ja
push
jnp
in
jmp
sub
sahf
incb
mov
scas
ljmp
push
imul
mov
out
push
icebp
in
lods
jecxz
mov
push
popa
dec
in
jge
xor
pop
cmc
hlt
jo
out
jmp
push
xor
pop
in
scas
mov
push
add
jmp
popf
add
out
add
mov
and
fldt
repz
jp
jmp
popf
jae
call
repnz
popa
cmpsl
push
aas
inc
repz
cmpb
addr16
xor
test
inc
data16
bound
int3
insb
jg
imulb
cmp
loope
jmp
push
popa
mov
movsb
out
subb
test
gs
dec
xor
mov
cmp
andl
std
fldl
jg
push
sub
cmp
cmc
sub
test
icebp
test
mov
out
popf
in
xchg
jns
sub
cmc
imul
test
push
mov
movsb
jmp
mov
test
jbe
arpl
out
lahf
cld
test
stc
test
inc
jno
es
iret
fisubrs
test
mov
loope
mov
je
mulb
jge
jns
shll
in
dec
into
fucomi
out
inc
cmp
in
int3
popa
cmp
call
xchg
mov
jbe
popa
push
add
shl
in
ret
in
sbb
xchg
jecxz
outsl
in
jno
and
insw
lcall
out
jge
test
xchg
call
stc
imul
fwait
sahf
dec
xchg
pop
divl
lds
jne
pop
dec
imul
pop
out
mov
imul
cli
lea
notl
inc
xor
jne
cmpsb
cltd
in
sub
jne
pop
popa
popa
clc
push
pcmpeqb
bound
lcall
lock
fcomi
out
dec
js
stos
call
pop
repz
in
mov
or
imul
out
testb
and
xor
cltd
imul
outsb
xor
insb
gs
mov
push
xchg
stc
arpl
ret
jecxz
dec
xchg
int3
movsl
xlat
and
mov
shrl
cmpb
add
pop
jo
andb
pop
xchg
push
ljmp
ret
je
hlt
mov
sbb
jg
hlt
cltd
data16
dec
out
jg
mov
arpl
push
andb
jmp
call
lods
and
jb
dec
and
cld
insb
lods
imul
mov
jno
in
pop
lods
in
mulb
pop
xor
xchg
out
cmc
andb
in
addr16
mov
std
sbb
in
mov
in
clc
mov
into
paddw
repz
ljmp
data16
inc
das
loopne
jbe
test
jmp
mov
call
gs
clts
xor
data16
test
insb
in
in
mov
dec
data16
add
cld
js
arpl
jbe
aad
jmp
push
imul
sahf
inc
pop
repnz
xor
push
jg
mov
out
sub
data16
jae
push
clc
push
scas
mov
xchg
cli
or
outsl
pop
cs
xor
testl
popf
mov
xchg
out
arpl
mov
add
arpl
xchg
xchg
mov
imul
movsb
test
fprem1
shrl
lds
xor
xchg
test
cmp
jne
in
and
out
arpl
xchg
xchg
je
imul
pop
jbe
pop
fneni(8087
test
cmpsl
jne
jg
fs
xchg
repz
cmc
and
out
jmp
fwait
loope
fnstenv
mov
dec
mov
jno
jbe
sbb
push
push
scas
lods
pop
add
mov
imul
add
sbbb
imul
pushf
fwait
inc
and
xchg
jne
cmpsb
dec
imul
cmpsb
mov
imul
sti
in
and
xor
lea
or
lea
pushf
std
or
insl
jecxz
push
dec
jno
xchg
mov
push
shll
loopne
data16
cltd
jo
es
xchg
jge
mov
stc
lock
popa
mov
jle
mov
call
mov
pop
call
mov
inc
inc
sahf
hlt
stos
arpl
imul
sub
das
imul
xchg
outsl
xorb
gs
jae
imul
cld
es
cmp
icebp
testb
addr16
outsw
jbe
mov
lea
pop
clc
hlt
jecxz
adc
cmc
imul
xchg
cmc
movsl
xchg
cmc
inc
addb
pop
xor
jne
jae
lods
mov
out
insl
inc
out
adc
xchg
ljmp
pop
lods
cmp
inc
xchg
xchg
inc
movsl
int
dec
arpl
push
repz
xchg
fisubs
arpl
out
out
or
jae
xor
jb
and
clc
sbb
xchg
jnp
add
jnp
cli
push
insb
cmp
in
jo
imul
clc
lods
imul
daa
jg
dec
pop
test
out
out
push
ss
popa
mov
add
pop
sbb
jecxz
clc
out
push
fs
jmp
arpl
loop
or
sub
jns
adc
int
out
fsub
stc
in
mov
jecxz
popf
jmp
push
addr16
push
adc
pop
jge
push
imul
xor
jbe
inc
insb
or
jmp
ljmp
add
mov
adc
jmp
hlt
mov
imul
es
notl
addr16
sub
gs
xchg
fisubs
pusha
jno
pop
cmpsl
sub
jbe
fildl
and
in
xchg
push
incb
sahf
movsl
shl
pop
in
xor
addb
dec
lds
add
dec
fnstenv
lock
insl
xchg
cld
hlt
mov
jno
leave
jo
negb
sbb
or
hlt
jne
jecxz
pop
adc
out
jge
jp
xchg
ljmp
cwtl
loope
jno
lods
add
push
jle
cld
mov
mov
mov
fisubrs
dec
or
cmp
out
pop
js
jecxz
jg
adc
testl
pop
lock
pop
das
lcall
repz
out
imul
xchg
pop
loopne
outsb
fldenv
and
adc
pop
dec
xchg
scas
clc
jno
pushw
insb
fs
imul
je
mov
pop
out
pop
push
stc
cwtl
repnz
push
cld
and
jp
xor
pop
aas
gs
bound
jbe
xchg
scas
jle
sub
jbe
hlt
aas
js,pt
push
sbb
cli
xchg
push
mov
in
repz
aaa
imul
test
push
jp
outsl
subb
test
inc
es
push
outsb
or
mov
cwtl
add
adcl
dec
je
out
repnz
addr16
mov
xchg
mov
loope
call
loop
adc
icebp
pshufw
xchg
mov
insl
in
push
insb
int
addr16
jbe
sbb
ljmp
out
outsb
ljmp
loop
cmpsb
ljmp
fldt
jns
testb
mov
dec
xchg
outsb
jae
push
add
imul
cmp
insb
mov
in
insb
sahf
lods
cmp
insb
jne
sti
dec
imul
sti
sub
in
fwait
imul
jmp
stc
xchg
fistpl
mov
addr16
enter
int
arpl
jbe
jle
sbb
call
addr16
aas
xchg
imul
jne
inc
in
push
cmp
fildl
pop
in
inc
cltd
out
cmp
imul
cltd
insb
cmp
testl
mov
imul
ljmp
incb
fisubs
cmp
enter
ret
jecxz
lret
movsl
aad
push
arpl
xchg
pop
cmpsl
fistps
push
mov
jbe
cmc
stc
ljmp
jo
dec
in
in
mov
mov
ljmp
xchg
jae
hlt
xor
in
xchg
mov
call
outsb
test
jle
jno
fsub
inc
out
aad
pusha
jb
push
gs
cli
adc
cwtl
addr16
in
out
mov
cld
adc
out
hlt
jmp
out
hlt
clc
pop
repnz
mov
pushf
cli
scas
lock
imul
adc
jmp
push
push
loop
jbe
repnz
icebp
lods
imul
mov
test
dec
clc
cld
add
jo
repz
fldt
clc
push
mov
xor
jnp
in
jmp
pop
adc
mov
xchg
pushf
out
lock
xchg
mov
test
fldt
outsb
std
loopne
scas
outsb
xor
in
inc
notb
lock
sub
imul
push
adc
lock
sub
fs
ret
in
js
jg
push
mov
adc
pop
test
dec
inc
inc
popa
jnp
sbb
clc
cmp
mov
repz
xlat
xchg
sbb
pop
push
stc
loope
fsubp
je
push
jae
imul
inc
sahf
inc
fstp
pop
adcb
pop
dec
frstpm(287
lods
cmp
jns
in
outsl
bound
ljmp
mov
loope
cld
add
out
mov
add
push
outsb
xchg
js
xor
jl
add
ljmp
xor
mov
xorb
loop
mov
cmp
imul
mov
cld
repz
inc
jg
sahf
add
jl
push
push
mov
xchg
jmp
insl
jne
insb
lcall
addl
out
jge,pn
divb
xchg
mov
fs
xchg
cltd
ret
insl
das
sub
xchg
sbb
icebp
mov
shll
sub
jp
nop
sub
jnp
and
xlat
jge
notb
xor
jo
mov
xchg
cld
lcall
incb
mov
hlt
sahf
lods
je
js
ja
and
and
xor
mov
leave
icebp
xchg
jne
out
pushf
xchg
outsl
icebp
and
jae
ret
gs
pop
je
fstpt
xchg
mov
subb
out
push
xor
mulb
punpckhbw
sub
pop
arpl
jno
loope
jbe
jnp
jne
pop
pop
hlt
es
shlb
aad
pop
scas
mov
repnz
mov
in
out
fimuls
pop
fcmovnb
or
in
mov
jmp
jno,pn
out
in
imul
repz
ljmp
sub
and
in
jns
test
js
shrb
repnz
mov
inc
dec
imul
lds
js
out
mov
cli
in
scas
repnz
out
inc
dec
xchg
je
mov
out
inc
test
pushw
inc
test
std
fiadds
jecxz
dec
adc
repnz
xchg
dec
push
incb
adc
hlt
aad
push
repnz
loope
test
subl
repnz
xchg
mov
and
repz
stc
cs
cld
xchg
mov
push
mov
imul
call
repnz
outsb
cltd
std
push
ss
std
jmp
jb
jmp
call
jb
out
test
test
jb
in
cmp
sbb
imul
std
jb
pop
arpl
popf
std
out
jbe
lock
xchg
adc
js
test
stc
in
and
in
addr16
sbb
cld
xchg
jno
mov
jmp
test
push
jecxz
xor
nop
push
imul
jae
das
jmp
nop
daa
push
mov
and
ja
test
loope
mov
pop
js
sti
in
and
lds
pop
out
out
push
mov
sar
call
icebp
shll
sub
jae
sub
pop
jecxz
jmp
hlt
xchg
loop
mov
outsl
popa
adc
lock
gs
arpl
cltd
jbe
stos
jp
jp
push
lods
dec
imul
movsl
cld
stc
mov
inc
push
jmp
cwtl
outsb
mov
adc
jbe
pusha
imul
inc
test
mov
pop
std
subl
or
xchg
push
cwtl
dec
xchg
movsl
push
out
push
mov
flds
out
arpl
xchg
dec
cmpsl
lret
aad
push
movsl
aam
pop
arpl
xchg
pop
add
mov
jp
add
scas
addr16
addr16
fs
inc
jnp
testl
ljmp
outsl
pop
out
scas
jo
adc
loop
out
imul
outsb
jno
mov
pop
pop
inc
mov
jmp
cltd
bound
daa
bound
subb
cmc
insb
out
mov
ja
loopne
xchg
gs
pop
jmp
cli
imulb
push
jne
arpl
pop
addb
push
fiaddl
hlt
in
jl
jg
jmp
push
dec
jb
loop
push
data16
jo
ljmp
call
idivl
jge
inc
loop
iret
adc
and
daa
repz
dec
mov
outsb
ja
fistl
cli
int3
div
imul
jo
clc
dec
jae
jb
imul
stc
jns
push
ja
rcl
jp
mov
dec
push
andb
fisttpl
in
jae
int
repnz
sahf
or
imul
jae
dec
arpl
jmp
lods
pushf
fadd
jmp
mov
mov
push
out
in
cmpsl
inc
in
jmp
push
mov
mov
dec
and
sub
andb
mov
js
xor
imul
shlb
mov
loop
jae
jle
mov
outsb
sub
icebp
push
mov
and
int3
jmp
loope
and
jbe
jno
bnd
lock
or
divl
adc
in
in
rolb
pop
mov
imul
clc
mov
xor
add
cld
jl
repnz
mov
into
jl
jmp
push
mov
cmpsb
in
sub
mov
xchg
fistpl
jecxz
jmp
fwait
icebp
cmc
add
bound
je
loop
out
cmpsb
push
or
jnp
jecxz
jbe
imul
test
cmpsl
inc
sbb
dec
cmpsb
jg
negb
cmpsl
clc
mov
push
bound
ret
scas
mov
in
bound
addr16
loop
and
push
mov
sahf
mov
repnz
push
cwtl
pop
in
push
test
or
clc
mov
scas
call
loop
or
xor
out
movsl
inc
imul
mov
or
in
bound
jle
bound
movsl
out
mov
add
mov
xchg
adcl
mov
popl
inc
xor
jbe
push
pop
clc
nop
flds
in
lock
je
loop
xchg
subl
jae
out
xchg
push
jae
imul
fwait
out
jp
jecxz
or
pop
fsubs
test
imul
xchg
push
imul
cmp
and
outsl
jo
xchg
mov
dec
mov
imul
out
lea
in
loop
in
incb
jp
mov
jo
imul
imul
mov
jg
je
jbe
xchg
gs
in
call
das
xchg
out
in
or
jb
out
js
in
insl
and
repz
cmc
fwait
in
pop
jo
jb
xchg
push
sub
push
bound
inc
imul
test
lcall
jecxz
mov
hlt
divl
arpl
and
data16
pop
decl
nop
std
inc
insb
mov
subb
mov
lcall
hlt
je
outsl
add
in
test
rolb
jmp
xor
xchg
jo
out
jne
jmp
dec
mov
das
test
cmpsl
and
dec
pop
cmp
jp
and
or
pop
int
scas
sub
or
pop
adc
insb
xchg
pop
int
das
ja
mov
dec
sub
cmp
cmpsl
mov
out
into
movlps
iret
push
push
test
mov
popf
ret
pop
data16
cltd
js
data16
jmp
sub
lods
ja
lods
outsb
es
ljmp
cld
or
fimull
ffreep
jg
scas
out
mov
pop
subl
dec
mov
imull
sub
in
or
les
xchg
leave
into
cs
push
sub
cmpsb
cmp
push
push
push
pop
popf
cmp
hlt
sub
es
jb
jecxz
push
lds
jl
out
mov
jl
add
lods
jnp
std
popa
jp
daa
jl
repz
sarb
cmpsl
mov
ja
adc
mov
push
out
mov
push
fst
in
mov
shl
xchg
and
cld
mov
lock
sarb
adc
movsb
lock
test
or
cmp
bswap
decl
sub
jmp
arpl
mov
lods
int
out
stc
dec
sub
mov
and
out
or
jb
jg
sbb
xchg
fildl
adc
mov
mov
shlb
add
gs
out
mov
mov
repz
test
adc
mov
sbb
pminsw
sub
punpckhwd
mov
js
sbb
mov
add
movsb
jb
out
daa
lahf
lret
pop
rcrb
jp
or
jl
xor
es
movsl
inc
pop
ret
cmp
dec
mov
jecxz
ror
xchg
leave
mov
or
mov
dec
iret
popl
mov
or
out
sarb
cmpsl
loope
xchg
pop
dec
out
adc
clc
mov
jecxz
xor
adc
pop
and
and
sbb
in
xor
lods
xor
mov
sub
jb
xchg
out
out
std
sub
pop
popa
daa
and
inc
jne
mov
outsb
lods
daa
dec
iret
mov
into
cmpsl
andw
aaa
hlt
and
push
cmpsb
out
mov
dec
xchg
popa
rcrb
sti
ficoms
icebp
in
mov
movsl
mov
add
push
inc
out
cwtl
xchg
sub
mov
jmp
sbb
ret
dec
and
or
xchg
scas
rorl
in
mov
xchg
outsl
or
jecxz
xor
jle
lahf
cld
pop
mov
dec
sti
scas
in
test
iret
xor
stos
cmpsb
aaa
arpl
pop
iret
lea
cmpsb
adcl
or
sbb
movd
cwtl
push
cmp
lods
push
xor
bound
adc
and
dec
and
jl
fsubr
xchg
int3
sbb
insl
fldcw
mov
sub
testb
push
ljmp
stos
pop
inc
mov
popa
call
push
mov
push
movsl
out
pop
out
mov
pop
shlb
addr16
fisubs
mulb
inc
ds
call
sub
sbb
jbe
fs
jbe
jae
sub
out
jmp
jg
jl
sarb
push
lods
es
in
es
push
clc
les
outsl
xchg
and
push
aas
lea
je
add
xor
bound
cmpsl
and
not
jl
jmp
lahf
dec
dec
mov
cwtl
fwait
test
call
imul
insl
and
daa
xchg
cmp
int3
sub
xor
lods
push
fxch
and
jl
sub
lcall
jl
test
rol
dec
mov
outsl
ficoml
cmc
std
and
test
lret
addl
aas
outsl
xchg
jae
jmp
xchg
out
insb
loop
insb
xchg
icebp
jle
mov
push
pop
movsl
cmpsl
cli
psubb
into
mov
jne
fs
jnp
movsl
and
sbb
mov
loope
gs
call
insl
jnp
push
and
push
cmp
lret
lock
ljmp
test
punpckldq
les
push
dec
out
sub
sbb
ds
test
cmovp
pop
jmp
cltd
data16
stc
xchg
in
jno
out
scas
and
dec
adc
and
in
popa
and
clc
cmc
jle
iret
movsb
mov
arpl
pop
in
jl
call
in
jl
xor
mov
stos
lock
scas
cwtl
es
push
rdmsr
or
mov
andb
add
jmp
out
mov
out
ss
cmpsb
mov
aad
inc
jecxz
cmpsl
lretw
stc
lods
sbb
jp
jl
scas
inc
lea
push
jl
xor
stos
jl
xchg
sahf
sub
inc
clc
test
cmp
fst
cmp
lret
jl
pop
out
aaa
in
xchg
lea
bswap
dec
pop
push
cmpb
cmp
fldenv
outsl
lret
lds
in
ror
lock
mov
icebp
jg
pop
cmp
lods
dec
ljmp
sti
mov
ret
sub
stos
mov
bound
cs
pop
mov
jg
arpl
outsl
hlt
xadd
or
push
jne
shrl
data16
test
addr16
scas
cmpsb
cmpsb
jb
dec
movsl
xor
test
jns
sub
lock
int
jecxz
dec
fs
or
pusha
lret
shlb
clc
jmp
jne
inc
adc
jnp
ja
mov
mov
decb
xchg
clc
or
shlb
repnz
repnz
add
jge
jle
stc
std
cld
pop
in
mov
out
subb
pop
jb
adc
es
loope
cmpsb
repnz
out
mov
lods
adc
xor
fdivrl
pop
sbb
out
imul
cmpsb
movsl
and
lea
stos
fwait
or
pop
mov
insb
jne
mov
xlat
pop
jno
xchg
jns
jmp
in
call
je
and
test
fs
cmp
call
arpl
inc
arpl
popa
ds
push
arpl
outsl
inc
loope
out
cmc
mov
data16
pop
movsb
mov
or
nop
cwtl
insb
mov
insl
loop
data16
js
js
jg
jmp
dec
dec
lock
pop
shl
jp
fistl
jo
push
mov
xchg
std
jmp
aad
movsb
out
in
nop
outsw
je
lea
popa
push
data16
gs
sub
xchg
xchg
jmp
outsb
leave
jmp
fsubrl
int
dec
or
jo
arpl
push
data16
mov
inc
pop
jle
in
outsl
test
iret
mov
mov
in
jae
popf
insl
es
repz
sub
pop
aad
nop
xchg
cld
mov
out
in
jecxz
outsl
out
dec
xchg
inc
jle
ret
ljmp
push
stos
jecxz
outsb
jae
popf
push
lock
push
add
adc
movsl
dec
outsb
inc
clc
arpl
or
std
fs
mov
jmp
inc
jae
push
dec
movsl
roll
jle
popf
gs
push
imul
arpl
out
push
mull
mul
cmc
popa
ljmp
or
jne
leave
xchg
cli
cmc
mul
jae
popf
js
jb
movsl
mov
jl
cs
jmp
xchg
jns
lock
out
mul
repnz
cld
push
aad
outsl
imul
repz
cmpl
and
popa
jecxz
mov
mov
adc
mov
jbe
in
xchg
hlt
mov
call
jmp
out
mov
pop
test
or
sub
ljmp
jae
jle
fcmovnu
aam
int3
mov
jmp
fst
pop
jbe
arpl
xor
pop
mov
test
call
mov
mov
nop
push
and
pushf
test
aaa
out
test
imul
es
xor
xchg
jge
in
scas
jns
xorb
enter
out
fsubl
push
les
jns
mov
leave
in
imul
arpl
imul
cs
adcl
gs
outsl
mov
sahf
cs
arpl
call
out
sbb
in
mov
ret
lret
mov
mov
andl
outsb
in
sti
xchg
mov
imul
loope
in
jbe
scas
punpckhbw
sub
andb
imul
inc
jae
push
data16
add
sub
dec
mov
stos
jo
call
in
movsl
jecxz
and
lds
scas
jb
test
xchg
imul
xchg
add
repnz
bnd
repz
out
jecxz
popa
jle
xchg
inc
mov
xchg
sub
iret
pop
fimuls
adc
negb
gs
imul
dec
addr16
and
push
in
imul
out
dec
cmpsl
es
inc
test
popl
arpl
imul
popa
repnz
jbe
filds
aad
adc
stc
pop
insl
push
outsl
clc
dec
pop
fstpt
addr16
mov
jnp
push
pop
mul
bound
mov
pop
test
sub
jbe
orb
in
stos
popl
pop
test
xchg
mov
add
in
loop
lock
gs
push
push
shl
jns
xchg
out
shlb
mov
pop
push
xlat
sbb
dec
mov
xor
into
std
and
test
inc
loop
and
adc
insb
push
inc
jmp
scas
sub
mov
lcall
inc
cmp
fisubs
lock
inc
fwait
xchg
mov
test
sbb
pop
mov
scas
sub
mov
pop
out
out
push
pop
insl
in
pop
sbb
pop
ljmp
outsl
pop
xchg
in
out
push
leave
push
in
insb
mov
outsb
push
out
lock
in
insl
jo
lea
mov
mov
loope
push
lods
jo
arpl
ljmp
int
outsl
out
push
sti
loopne
out
imul
ljmp
and
insl
pop
sub
testl
pop
sbb
add
mov
inc
ljmp
sub
lock
test
shl
ljmp
push
jb
mov
fildl
cmc
jne
arpl
or
xchg
and
dec
push
movsb
push
arpl
jo
mov
lea
mov
outsb
arpl
out
fwait
int3
sub
in
loop
insb
sbb
push
int3
jne
inc
nop
ss
mov
daa
xchg
js
gs
cmpsb
popa
sub
cmpsb
push
jmp
loope
stc
pmaxsw
cmp
xchg
or
cmp
mov
jnp
and
icebp
out
cmp
popa
dec
outsb
mov
sub
dec
arpl
stos
in
in
outsb
bound
pop
outsb
int
and
scas
rcrb
adc
frstor
loop
mov
adc
jge
cmp
mov
mov
cs
jnp
ljmp
outsl
stos
sub
xor
scas
gs
lret
xor
sub
push
inc
pop
fs
dec
xchg
pop
sarl
jl
xchg
leave
xor
loope
mov
sti
clc
inc
addr16
imul
in
insb
mov
add
xor
out
cmovbe
push
cld
jge
int
scas
jle
jns
mov
loope
test
insl
fucomi
mov
loop
push
push
mov
loop
push
in
jl
call
or
outsl
imul
pop
mov
imul
loop
addr16
in
das
jecxz
mov
xor
clc
cmp
cmp
mov
lcall
scas
outsb
sti
xor
xchg
imul
sub
int
leave
decl
subb
shr
addr16
stos
mov
xor
jge
out
cmp
iret
pop
lods
cmpsl
add
xchg
jge
sbb
jb
sub
jmp
dec
ds
daa
mov
jmp
pop
mov
negl
test
jnp
add
out
mov
imul
push
outsl
subb
mov
in
jbe
jne
jb
adc
cmp
adcb
jg
cld
or
in
bound
je
and
out
in
repz
in
out
insb
scas
sbb
in
sbb
pop
dec
out
mov
xor
and
add
insl
shlb
jnp
fsubrs
stos
insl
add
out
xor
jg
outsw
jbe
inc
lods
mov
adc
jne
imul
jge
jnp
jge
jo
pop
push
sub
cmpsb
cld
addl
mov
in
and
gs
adc
mov
aas
lock
test
icebp
xchg
loope
je
jno
and
movsb
loope
scas
and
adc
out
inc
addb
sub
subb
jae
mov
push
xchg
nop
jge
popa
out
pop
pop
gs
gs
je
or
outsb
fisubl
divl
test
push
mov
arpl
pop
in
repz
jno
pop
addr16
cltd
lods
mov
shl
jmp
mov
repz
lods
lahf
mov
jmp
sahf
sub
jmp
jae
jle
repnz
xchg
cmpsb
es
push
lds
push
or
mov
imul
aaa
jo
std
imul
out
push
movsl
add
xlat
jecxz
and
iret
inc
inc
ds
test
mov
movsl
lock
negl
imul
stc
call
loopne
and
inc
add
jns
pop
push
nop
jg
idivb
mov
jnp
push
inc
xchg
mov
fisttps
insl
xchg
dec
pop
int
mov
add
cmp
insb
in
out
out
xchg
add
call
repz
mov
jae
popf
bound
pop
call
pop
adc
add
clc
mov
out
repnz
dec
sti
lret
cmp
lods
imul
test
cmp
andl
cld
hlt
and
jnp
arpl
push
in
dec
into
push
xchg
in
mov
test
cmp
cmpsb
jb
ror
jl
xchg
in
jecxz
sub
sti
xchg
cmp
lcall
popf
sub
scas
dec
or
sar
lods
lock
aam
call
pop
pop
add
push
sbb
jno
rolb
push
cld
testb
jmp
xchg
imulb
and
popaw
push
fldenv
ljmp
mov
lcall
imul
icebp
dec
lods
imul
mov
cmp
outsb
psubd
insl
imul
out
xchg
xchg
inc
jge
testb
out
test
adc
outsb
mov
hlt
jecxz
push
fs
sub
out
xchg
imul
xchg
test
jl
mov
push
jmp
mov
sub
jbe
and
imul
enter
loope
dec
imul
inc
dec
mov
push
lcall
sub
int3
cmpsl
out
mov
lds
cmpsb
ljmp
outsl
mov
jne
mov
out
das
jb
or
mov
sar
je
jb
mov
ja
jbe
or
sub
pop
jmp
mov
sub
jle
out
push
pop
hlt
loope
lods
dec
mov
arpl
movsb
dec
jecxz
pop
cwtl
jno
adc
loopne
mov
pushf
jg
jo
ret
arpl
jmp
data16
in
adc
mov
es
inc
sbb
jl
pop
movsl
xor
mov
push
jl
push
cli
repnz
es
pop
nop
sbb
je
outsl
xlat
jecxz
stc
or
imul
add
out
mov
je
push
sub
mov
movsl
jnp
sbb
jo
mov
cs
ss
daa
lret
cmp
mov
push
mov
lds
out
pushf
pop
xchg
sbb
ret
jae
fmul
repnz
cli
inc
jo
insl
es
xchg
in
movsl
jl
clc
cli
inc
pusha
bound
mov
jge
inc
mov
aad
xlat
mov
test
pop
push
lock
inc
and
xchg
arpl
or
lret
xchg
loope
mov
in
cmp
imul
leave
js
push
stos
xchg
jge
jl
ss
sub
lcall
lcall
cmpb
in
mov
ljmp
movsl
jecxz
das
mov
cmp
loop
in
gs
mov
aad
aad
jge
xor
jno
mov
mov
es
jb
in
mov
push
push
aad
add
jmp
mov
aad
negb
ds
das
jb
outsl
sti
sub
and
cmpsw
jo
fistpl
lock
icebp
insb
lcall
push
ljmp
jbe
cmc
adc
inc
cmc
mov
jecxz
sub
out
and
aam
out
lds
fwait
gs
or
call
push
in
call
push
cmpsb
push
push
outsb
out
mov
mov
mov
out
push
loope
scas
adc
inc
test
movsb
jge
push
pop
xchg
popa
inc
mov
call
fsubrs
push
scas
xor
sub
addr16
mov
or
data16
outsl
ja
xchg
in
rcrl
outsb
movsl
push
ja
push
call
leave
push
mov
push
test
loope
dec
jbe
and
sub
int3
push
arpl
testl
scas
sbb
in
outsb
out
fcmovnb
pop
int
jg
mov
aaa
ljmp
repz
fs
adc
pop
cmc
inc
lods
sahf
lds
mov
insb
and
lret
pop
stc
sub
out
fisubl
push
dec
jge
mov
insl
xor
repnz
cmpb
in
popa
bound
pop
out
jnp
bound
data16
out
pop
lret
popf
imul
push
sbb
push
repnz
adc
in
jnp
out
xchg
lock
cld
lods
or
in
insb
lods
frstpm(287
cmpl
sahf
or
cmpsb
add
jp
test
jbe
popa
push
stc
lea
sbb
popa
call
fidivrs
sbb
mov
addr16
adc
or
lea
fdiv
sbb
arpl
arpl
scas
sub
into
mov
addr16
mov
xchg
bound
stc
gs
movsl
das
into
int3
test
andb
mov
push
mov
mov
scas
mov
jle
jae
push
mov
jnp
aaa
or
scas
jmp
popf
cmp
mov
or
cmpsl
out
push
test
in
lcall
jnp
push
add
outsb
add
lret
jb
dec
or
and
mov
je
in
clc
loop
int
pop
lret
xchg
outsl
inc
dec
gs
jnp
xchg
stos
xorl
scas
hlt
outsb
jecxz
sti
leave
lds
stos
data16
push
fdivr
jo
int
imul
leave
inc
jns
emms
fwait
mov
jmp
cli
js
test
cwtl
add
lods
sub
push
call
es
cmovg
xchg
jb
push
in
test
cmp
call
ja
scas
push
out
mov
dec
cmp
cwtl
imul
mov
sti
cmc
daa
int3
push
arpl
aas
add
jp
loop
and
sub
gs
push
mov
xlat
call
daa
dec
outsb
jno
jne
jmp
scas
jle
test
out
cwtl
xchg
fwait
popa
cwtl
pop
clc
callw
lret
imul
cmpsb
shlb
data16
jmp
stos
pop
out
push
sub
push
imul
jae
out
arpl
notb
xchg
xor
xor
mov
les
mov
jl
xor
sbb
int
push
xchg
dec
dec
idivl
add
mov
sub
shlb
inc
dec
out
cld
dec
icebp
jge
addl
out
test
xchg
in
addr16
aam
adc
test
dec
in
popa
out
mov
inc
popa
mov
loope
sub
nop
test
jecxz
pop
outsb
cmc
and
shll
mov
js
dec
jbe
mov
movsb
out
cmp
xchg
scas
push
xor
fmull
call
outsl
push
mov
mov
sub
inc
sbb
jae
and
push
cmpsl
add
fildl
lock
movsb
movsl
mov
xchg
pop
cmpsl
cmc
std
repz
cmc
jl
das
repz
enter
imul
and
or
popa
dec
mov
xchg
negb
pop
daa
jp
add
lret
or
popa
mov
test
add
cmp
bound
jle
outsl
jb
arpl
mov
scas
stos
into
lret
jb
adc
dec
cmpsb
pop
lods
stos
mov
sub
cmpsb
test
jmp
in
out
shr
cld
imul
out
test
lock
out
outsl
and
arpl
cmpb
fwait
iret
popa
xor
call
push
stc
ret
add
ret
imul
enter
popa
iret
lods
xor
dec
jecxz
inc
scas
hlt
nop
mov
dec
test
out
jle
xchg
lret
mov
cs
dec
mov
jb
call
mov
push
pushf
push
ds
arpl
movsl
xchg
imul
cmpsb
scas
in
imul
call
popa
dec
aaa
call
call
imul
gs
fs
in
outsb
ljmp
or
adc
insb
sub
ret
insl
xchg
mull
popw
xlat
arpl
push
jge
fwait
xor
dec
sbb
mov
jge
repnz
call
mov
scas
add
divb
in
pop
in
jae
test
sub
scas
test
jbe
mov
cmp
sahf
mov
push
into
add
shrl
and
mov
rcrb
testl
data16
ret
adc
andb
xorl
aaa
fisttpl
popa
or
push
not
ss
dec
mov
xor
sbb
ret
jg
mov
push
fwait
pop
xchg
push
pop
out
aad
pop
and
popaw
push
mov
add
pop
jmp
mov
and
enter
popa
outsl
mov
shll
mov
mov
imul
insb
rolb
out
add
dec
out
movsw
mov
sub
test
xchg
lock
in
mov
pminsw
cmpsl
jge
call
and
arpl
in
and
add
push
jbe
adc
cld
cmpsl
mov
and
int3
arpl
and
loop
or
imul
and
andl
xchg
adcl
pop
out
add
mov
das
rcrb
ja
jge
or
outsb
sarl
jno
push
bound
es
and
mov
mov
adcb
jp
jmp
test
insl
mov
imul
imul
fsincos
jo
cs
test
or
cmpsb
ret
dec
xchg
loope
mov
inc
xor
xor
pop
pop
arpl
push
popw
leave
mov
into
mov
cmpsb
int
aaa
icebp
sub
iret
aaa
out
or
pop
push
out
repz
mov
outsb
sbb
arpl
scas
incl
mov
and
xchg
in
mov
fwait
sub
gs
decl
scas
subb
fwait
cmpsl
iret
jle
test
call
movsb
inc
outsl
aas
out
push
cmp
jns
inc
lea
lcall
mov
cmpsl
cmp
fsubs
je
imul
jecxz
leave
out
out
add
xchg
sub
jl
sub
ja
nop
and
test
cs
scas
lea
loope
xchg
add
mov
leave
mov
in
or
out
mov
jmp
jae
sbb
loopne
fcomip
mov
mov
jmp
je
out
loope
sbb
test
in
in
fcmovnbe
ljmp
jne,pt
cs
xchg
cmpsl
pop
mov
out
movsl
jo
scas
pushf
out
fstl
mov
xor
xlat
js
push
mov
loope
jg
fst
js
push
movsb
leave
js
stos
test
outsb
sarb
xchg
and
lea
ret
xchg
sti
jge
lods
out
xor
out
repz
xchg
imul
fwait
mov
divb
dec
lods
sti
dec
mov
xor
and
psubsb
into
mov
xor
xchg
call
jmp
lods
jb
jbe
cmpsb
fs
into
scas
jb
in
push
loope
int3
loop
addr16
mov
ret
xor
cmpsb
inc
in
cmc
xchg
mov
jo
nop
lret
dec
jge
sti
daa
dec
testl
ss
outsb
inc
dec
lret
push
fcmovnbe
push
insb
out
iret
lret
dec
inc
sub
out
out
in
or
outsb
outsb
shrb
push
imul
data16
add
mov
arpl
lods
cmp
jmp
insl
and
sti
mov
js
es
outsb
aam
test
clc
and
jg
sub
or
ljmp
fcompl
mov
out
jmp
dec
out
mov
out
imul
mul
mov
stos
outsl
lods
notl
cmpl
lock
test
xchg
test
out
daa
and
int
xor
jl
les
fs
jmp
inc
inc
nop
jbe
out
jb
in
popa
andb
test
jmp
insb
test
insb
subw
bound
xchg
imul
cmp
shrb
dec
call
sbbb
fs
fwait
decl
cwtl
pop
xchg
jne
mov
lods
xor
inc
loop
xchg
mov
gs
outsb
cs
in
mov
out
lret
shl
jo
imul
test
cmp
dec
in
ret
cmc
jecxz
lods
xor
imul
in
xchg
push
push
cmp
repz
add
xor
lods
int3
imul
popa
sub
or
jo
out
fwait
mov
cmp
dec
repz
call
mov
outsb
inc
adc
insl
in
xor
dec
add
int
cli
das
cwtl
jb
add
adc
xchg
out
bnd
jo
rorb
mov
mov
subb
mov
sub
xchg
aas
inc
negb
xchg
idivb
out
cli
sub
es
inc
sub
xchg
mov
inc
jge
cwtl
ljmp
push
jnp
push
inc
jne
sti
mov
lods
add
leave
mov
mov
pop
cs
test
stos
inc
pop
xchg
in
pop
dec
imul
out
or
pop
jl
stos
mov
sub
push
imul
in
lea
or
test
adc
shr
jg
add
push
out
jge
orb
sub
test
jbe
popa
sub
push
subl
in
loopne
in
in
fdivrs
lcall
push
adc
sahf
lcall
loope
imul
push
sub
out
lock
cmpsb
cs
lods
lret
divl
jb
inc
lods
push
pop
and
int3
xor
shlb
jp
dec
cmpsl
ss
adc
push
or
push
ja
lds
and
das
jbe
lods
lods
mov
aaa
in
shrb
pop
dec
data16
ror
shrb
mov
ljmp
mov
movsl
jo
popa
adc
ss
hlt
sahf
adc
jl
shlb
outsl
inc
sub
push
and
in
in
jno
lret
push
xor
and
xchg
in
js
out
xchg
mov
hlt
loop
mov
dec
in
insb
test
xor
jle
out
xchg
cld
mov
jmp
jmp
jmp
imul
clc
arpl
xchg
rorb
mov
inc
aas
add
in
mov
dec
in
xchg
stos
and
lret
in
out
imul
push
jbe
xchg
je
arpl
sbb
out
xor
pop
daa
sub
in
push
mov
or
mov
outsb
fs
int3
lret
cs
push
xchg
add
int
push
jmp
mov
leave
cmp
test
imul
addr16
jmp
scas
movsl
cmc
adc
repz
repnz
jecxz
pushf
sub
mov
sub
and
ss
lods
cmovg
ss
xchg
test
cs
subl
outsl
mov
sub
cmp
ja
ret
scas
outsl
out
jecxz
test
imul
or
out
pop
shlb
mov
out
cs
push
in
daa
orb
dec
aas
notb
cs
call
int
lock
jmp
xchg
xor
lret
jne
test
jle
imul
out
movsl
aaa
jbe
popa
mov
xchg
icebp
aad
add
mov
in
fbld
scas
cmpsl
cmpsw
mov
push
mov
dec
pop
in
or
stos
call
sub
aas
mov
inc
jb
add
push
hlt
cmp
popa
arpl
insl
and
in
int
and
push
in
scas
mov
pop
cld
bound
inc
int
out
inc
push
addr16
arpl
mov
dec
pop
mov
test
out
fwait
add
jbe
loope
pop
fs
and
cs
in
and
dec
js
push
sub
jg
dec
mov
aaa
outsl
mov
xor
pop
leave
cld
fisttpl
push
cmp
nop
pusha
dec
aaa
jb
jnp
pop
xor
sub
int
sub
imul
sub
inc
mov
sub
pop
jl
jge
push
or
dec
loope
repnz
in
daa
scas
ss
and
or
jl
dec
mov
sub
lret
ljmp
ljmp
movsl
ljmp
mov
rclb
cmp
es
mov
jmp
imul
xchg
cmpsb
and
mov
jne
pop
xor
sub
inc
push
ds
jne
insl
mov
adc
bound
adc
jne
xchg
imul
push
nop
inc
lea
test
pop
adc
int
cs
leave
xor
out
ljmp
fwait
bound
add
lahf
xchg
jmp
daa
int3
negb
mov
call
cwtl
iret
add
lods
xor
outsl
adc
jbe
sbb
mov
fucom
jbe
stc
scas
in
inc
xor
mov
mov
mov
xor
loope
jmp
mov
fsubp
pslld
mov
lods
and
add
scas
sub
imul
sub
and
xchg
nop
data16
dec
xchg
adc
xor
in
mov
shl
pop
dec
lock
data16
aam
stos
pop
mov
hlt
loope
and
or
mov
sub
and
jle
xchg
lea
clc
jbe
lock
addr16
mov
outsb
cltd
into
cld
mov
jecxz
mov
js
jnp
test
mov
popf
jge
filds
outsl
lea
popa
jb
adcb
in
add
loope
loop
lret
call
clc
lock
and
movsl
lahf
dec
in
divl
sub
jp
jbe,pn
and
add
jbe
jmp
in
pop
stos
cmpsb
out
imul
jge
stos
insb
clc
in
pop
pop
loop
sub
pop
dec
jmp
imul
call
idivb
inc
arpl
jo
data16
jg
adc
push
outsb
pushl
inc
ss
int3
mov
jmp
mov
inc
push
sub
call
lea
push
out
inc
popa
ja
mov
push
mov
adc
ljmp
jg
xor
data16
adc
popa
mov
loope
xchg
in
fs
aas
mov
cs
jbe
sub
xchg
shrb
daa
sub
in
mov
iret
jecxz
inc
or
jp
lock
outsb
es
jo
iret
jmp
test
mov
jbe
fisubrl
inc
loop
jp
call
call
iret
cmp
arpl
cmpsb
inc
in
out
dec
daa
mov
inc
lds
ljmp
or
aad
out
jb
cmpsb
lods
push
xchg
cs
add
icebp
mov
mov
in
call
cs
inc
jg
popf
mov
xchg
xchg
in
loop
lock
jg
cmp
add
je
push
jge
popf
out
js
leave
pop
mov
sub
rclb
icebp
ss
es
mov
mov
pop
int
jae
xchg
insl
fwait
lods
xchg
std
mov
cmovg
out
outsl
dec
rclw
in
or
int
push
xor
fwait
jno
and
jb
lret
xchg
or
loope
push
cmp
ja
fs
sbb
clc
js
mov
gs
xchg
loope
lods
movq
mov
add
xor
jnp
insb
notb
mov
sahf
scas
push
popa
sub
arpl
lcall
clc
in
jbe
cmp
icebp
outsb
lods
jbe
or
xor
or
out
aaa
cli
cmpsb
es
into
scas
in
jle
dec
cmpsb
lret
imul
in
ret
std
dec
mov
hlt
outsl
pop
enter
outsb
jge
cmp
ss
out
mov
out
das
popa
sub
pop
jns
outsl
in
xchg
movsb
test
js
ficoms
and
loope
or
testb
data16
je
push
stos
aaa
int
cmc
jge
mov
jne
and
mov
out
je
xchg
shlb
ret
int
inc
mov
mov
imul
pop
movsb
sub
iret
aas
insl
and
inc
rorl
out
insb
mov
pop
lods
jp
or
outsb
lds
ret
ljmp
push
sbb
fcomp
and
js
loop
xor
andb
lock
outsb
pop
mov
add
fwait
mov
mov
addl
cmpsl
out
icebp
xchg
arpl
aas
repnz
push
inc
xchg
and
leave
sbb
popa
mov
hlt
jmp
and
add
mov
lds
sbb
mov
mov
in
mov
jmp
lret
mov
test
add
loopne
movsl
aas
mov
outsb
cs
jle
sbb
popa
cltd
lods
loop
jge
push
js
sub
scas
lret
add
and
xor
dec
lahf
call
data16
pop
push
cmpsb
leave
into
out
and
cs
sti
test
loop
cmpb
mov
sub
test
sti
dec
jns
xlat
ret
xor
idiv
in
xor
bound
bound
adcl
call
js
cmc
cmpsl
out
loope
add
or
lods
iret
test
lret
sub
cs
mov
out
repnz
out
stc
loop
int3
test
mov
cmc
inc
cs
mov
sub
xchg
arpl
add
out
push
out
in
cmpsb
js
mov
fs
insl
cwtl
lea
outsl
xchg
or
outsl
mov
out
mov
cmpsb
jmp
shl
hlt
jo
in
sub
cs
mov
lods
jno
call
dec
inc
imul
inc
incb
mov
cmc
ljmp
aad
dec
aas
out
cmp
insb
movsl
imull
lds
scas
lret
clc
addr16
scas
imul
loopne
xchg
icebp
ret
xchg
inc
decl
in
orb
xchg
stc
mov
sub
in
out
clc
loop
and
push
bound
es
sbb
mov
cmpsl
mov
jmp
adc
data16
jae
lods
dec
xor
stc
jg
jle
rcrb
pop
add
popf
bound
test
dec
jbe
dec
fsubs
repnz
mov
dec
icebp
fstl
or
jo
dec
sbb
shr
cld
movsl
in
and
push
mov
push
punpcklwd
lock
ljmp
xor
nop
and
push
jle
cmp
lcall
mov
xor
or
lods
pop
dec
xor
push
mov
mov
cs
cmp
pop
scas
sub
nop
jle
ret
add
ret
jnp
ljmp
aas
icebp
in
cmpb
jp
lret
arpl
inc
daa
in
inc
push
scas
sbb
mov
xor
jno
sbb
xchg
and
jecxz
or
aaa
or
cli
cld
testl
icebp
push
sub
mov
adc
jmp
out
push
rol
mov
repz
rolb
lcall
cmp
jnp
out
test
mov
pop
jge
push
mov
es
mov
xor
ljmp
fdivrp
push
loop
and
pop
jnp
push
je
fistl
mov
sbb
sub
xchg
jmp
je
and
xchg
andb
es
repz
fsubs
fs
bnd
js
leave
jae
gs
stos
pushf
sbb
orl
outsl
jno
roll
call
xorb
out
pop
push
outsb
das
push
call
add
sbb
rorl
mov
pop
xchg
add
adc
in
sti
dec
loope
xchg
decb
and
movsl
popa
fs
inc
xchg
sbb
js
scas
xchg
movsb
adc
jo
subb
outsb
std
outsb
int3
dec
jns
cmpsl
jno
shll
sbbl
arpl
out
fwait
inc
sub
sub
call
les
cmp
jo
popa
lods
neg
push
xchg
pusha
imul
and
sub
mulb
fs
mov
je
add
xchg
std
cmpsl
and
jb
icebp
cmc
orb
popa
stos
push
cwtl
arpl
movsl
sub
imul
out
dec
inc
xor
int
jne
iret
fidivl
mov
repz
stos
out
lret
cli
push
push
gs
pop
je
aaa
jbe
add
mov
iret
leave
imul
stc
sti
out
or
jb
movl
ret
or
addb
mov
int3
shrl
mov
lds
push
inc
or
or
vmovlps
mov
std
cmpsl
lret
cmp
pop
jmp
mov
stos
incl
dec
fs
js
repnz
daa
je
inc
cs
out
ror
in
xchg
outsl
mov
in
cmc
lcall
inc
xor
sbb
mov
ljmp
cmp
gs
xchg
push
imul
arpl
lds
sub
imul
push
push
or
in
sahf
je
mov
call
sbb
adc
in
out
andb
or
mov
push
addr16
cmc
mov
push
out
loope
jb
movb
jle
mov
js
imul
ret
add
faddl
jp
jns
in
push
cwtl
bound
jne
adc
loop
rolb
mov
ret
xchg
sti
cli
rcll
jge
cwtl
and
lods
lahf
repz
dec
inc
cld
fldt
out
mov
push
jnp
sti
xorb
fsubs
inc
jg
into
push
es
loope
movsb
xchg
imul
jo
in
jno
iret
fwait
ja
test
ret
ja
mov
cmp
insb
pop
dec
sbb
or
and
pop
xorw
data16
push
push
addr16
mov
movsl
inc
sub
loop
lods
sub
imul
push
mov
fiadds
jp
je
call
iret
or
push
addr16
jp
inc
mov
in
sarl
jecxz
sbb
scas
insb
gs
ret
jle
jecxz
mov
addr16
out
iret
insb
inc
inc
divl
inc
arpl
xchg
fwait
out
mov
std
daa
lods
imul
sbbl
push
out
jge
js
addr16
mov
xorl
out
into
outsb
xor
out
cmp
arpl
mov
imul
arpl
sub
jp
jnp
jle
clc
cmpsb
dec
sbbb
mov
jo
mov
outsb
incb
loope
addl
jl
mov
call
pop
or
clc
data16
mov
rcrl
push
dec
and
sub
mov
cmpsb
daa
out
jl
mov
outsb
je
leave
mov
xchg
jl
mov
or
cmp
test
add
fnclex
or
pop
xchg
push
je
hlt
in
sbb
dec
pusha
mov
icebp
stos
jl
jmp
pop
sbb
jl
sbb
adc
cmp
outsl
push
cmpsl
mov
push
repz
jl
test
mov
lock
xor
mov
lods
cmpsb
clc
insb
rclb
and
mov
push
jl
or
rorb
push
jp
fsubrl
outsb
mov
mov
int3
fnstsw
psllq
pop
lret
inc
fisubrs
faddl
pusha
lret
jb
int
or
cmpsb
dec
jmp
rcrb
js
repnz
and
sub
pop
js
jge
gs
push
insb
loopne
dec
mov
pop
rclb
add
sbb
or
cmp
ud0
in
jl
push
insb
xchg
repz
cmp
xchg
or
cwtl
push
or
add
cs
mov
int
mov
xchg
sbb
shl
inc
or
daa
js
call
jno
icebp
movsl
xchg
loope
xor
jl
jbe
insb
jge
jl
cwtl
dec
lds
stos
pop
das
jmp
fisubs
cmp
imul
aas
out
out
insb
adc
cmp
subl
mov
sbb
movsl
jb
imul
mov
sub
bound
and
dec
stc
sarb
lret
push
cmp
insb
jl
cltd
sub
fisubrl
lods
jl
aam
cli
imul
adc
jl
xor
push
ret
xlat
imul
push
add
inc
push
push
add
jl
mov
imul
insl
mov
out
adc
pushf
add
cld
arpl
je
and
int
in
iret
fistpll
dec
adc
test
add
mov
stos
sbb
addr16
arpl
insb
cltd
mov
mov
sub
icebp
jns
fstps
fmuls
popf
pushf
sbb
test
sti
imul
adc
xor
dec
bnd
inc
aas
icebp
daa
lock
sti
test
outsl
xlat
and
sub
test
and
stc
fwait
push
jl
nop
jo
ja
out
fs
xchg
and
jae
pushf
jb
ljmp
jnp
xchg
xchg
adc
lahf
ds
mov
jne
dec
je
inc
out
mov
movsl
bound
jne
loope
add
sub
adc
mov
pop
mov
lret
out
or
push
add
rorb
gs
sahf
sub
sub
insw
lds
mov
adc
insb
fwait
adc
pop
stos
mov
je
ja
adc
enter
adc
xchg
pop
push
hlt
pop
jb
xchg
nop
inc
enter
mov
arpl
ja
test
xchg
jp
fdivl
add
xchg
add
adc
gs
cmp
and
push
xor
jecxz
pop
mov
hlt
cmp
or
in
mov
sbb
jnp
add
test
cmc
gs
bound
fisubrs
cmp
adc
enter
or
int3
pusha
xchg
mov
push
rol
fwait
add
xor
push
dec
push
push
xchg
add
testb
push
xchg
rcrb
jnp
daa
call
mov
push
fcmovbe
movsl
mov
jnp
adc
rclb
sbb
sti
push
fsubl
movsl
mov
in
mov
push
fs
xchg
scas
push
xor
arpl
mov
sbb
and
pusha
scas
mov
call
sub
movsl
test
js
adc
cmc
call
fistpll
xor
inc
aam
cmp
mov
insl
fnsave
push
sti
gs
popa
mov
push
movsb
jge
in
adc
jb
xor
fistps
test
out
mov
jle
cmp
pop
xor
jae
out
loope
fwait
loope
pop
scas
stos
shl
add
shrl
jnp
stc
xor
popa
jle
insb
fidivrs
ja
push
xchg
fs
add
add
mov
in
add
cli
sbb
hlt
cld
mov
js
repz
leave
aaa
rolb
xchg
mov
imul
int3
sbb
inc
fildl
aad
or
movsb
push
adc
pop
pop
lods
or
dec
pop
imul
sub
mov
sbb
dec
daa
mov
jb
dec
mov
test
enter
inc
and
xlat
sub
and
cmpsl
fwait
ret
data16
je
mov
scas
bound
es
scas
fwait
push
loope
rorl
mov
je
fwait
test
xchg
cmp
lret
lea
dec
jp
jp
mov
adcl
xchg
lea
cmp
and
lcall
movsb
data16
jnp
movsl
pop
cmp
hlt
cld
cmpsb
dec
jns
inc
jae
mov
aam
xchg
cmpsl
repz
jnp
dec
inc
xchg
jnp
inc
jg
xchg
adc
aas
and
fildl
jmp
mov
aaa
push
xchg
imul
add
jb
add
int
les
into
bound
jmp
popa
dec
xchg
jb
jge
hlt
movsb
call
adc
scas
mov
push
lock
nop
jnp
daa
dec
inc
push
insb
jb
push
shrl
outsb
ret
xchg
pop
lret
in
mov
pop
inc
or
dec
sbb
ret
sahf
sti
mov
gs
cltd
dec
call
mov
sub
out
jle
aas
aad
call
pusha
vpmacsdqh
sbb
faddl
jnp
test
fadd
xlat
cmpsl
xor
outsl
cmpsl
adc
push
popa
scas
loope
arpl
gs
sbb
jb
aam
jmp
push
cs
shl
cmp
dec
cmpsb
in
imul
xchg
jge
mov
xor
push
je
je
cmp
jge
push
test
lahf
sub
mov
jle
jnp
and
cmp
jmp
inc
cmp
pop
sub
mov
fnstsw
pop
adcl
in
icebp
and
scas
dec
aam
frndint
loop
cmp
jnp
mov
cmp
int
aad
roll
movsl
in
and
fildl
int
test
cld
lahf
inc
inc
pop
mov
fdivr
jl
rcl
push
sahf
jle
fwait
cmpsb
lods
push
pop
jo
push
and
and
xchg
bound
add
pop
jp
jg
inc
cmpsl
jns
add
fisttpl
pop
and
lea
ret
xchg
mov
cs
mov
add
cmpsl
out
rcrl
cli
jae
xchg
pop
fwait
aam
adc
repz
push
test
push
je
fstpl
jae
leave
and
outsl
outsl
ljmp
jecxz
inc
cmc
imul
out
fwait
ret
add
mov
mov
fwait
scas
pop
mov
sbb
dec
repz
pop
mov
fcmovnb
mov
and
jnp
pushf
addb
mov
sub
inc
fwait
rol
ljmp
push
xchg
adc
movb
xchg
mov
mov
jae
mov
ss
sbb
sub
cmpsb
inc
bound
out
mov
jmp
adc
mov
daa
fwait
dec
movsl
jg
adc
and
pop
push
ret
pop
call
xor
jnp
push
mov
hlt
dec
pop
pop
and
mov
dec
loop
in
adc
cmp
cmp
loop
xchg
fwait
jmp
pop
push
xor
stc
mov
cmp
lcall
dec
push
movsl
or
sbb
nop
mov
xor
jl
fldt
gs
mov
das
aas
shlb
scas
pop
sbb
jg
jl
jle
sbb
ret
jg
push
cmpsl
js
in
jae
add
ret
mov
cmp
mov
stos
inc
mov
jle
sub
lods
popf
jno,pn
sub
xchg
mull
sarl
add
mov
sahf
lret
jl
push
in
mov
add
mov
movb
ljmp
mov
sahf
imul
push
int
sbb
movsl
inc
out
xor
aam
cs
aam
jl
ffreep
xchg
push
test
pop
ljmp
cs
jae
push
test
popl
xchg
adcb
cmp
fnstenv
mov
les
and
sti
mov
lea
jmp
sub
dec
push
jnp
sbbb
push
push
ret
mov
inc
jmp
ret
mov
cs
or
dec
imull
sub
push
mov
jmp
aaa
fcom
xor
sbb
dec
pop
lret
push
sbb
insl
test
pop
jge
inc
data16
shll
jnp
fwait
scas
sti
mov
loopne
repz
mov
pop
xchg
jns
out
cmp
push
out
lock
xchg
leave
out
movsl
pop
test
aam
hlt
and
add
inc
mov
movsl
pusha
gs
and
mov
sub
jo
dec
jnp
repnz
dec
mov
sbb
ret
dec
inc
sti
adc
fwait
ja
sbb
addr16
xchg
ret
adc
jle
push
xorl
dec
pop
test
jl
lds
in
mov
mov
lods
popf
jp
shrl
insb
push
mov
andb
inc
jl
test
and
push
or
jl
iret
out
comiss
mov
stos
aaa
jl
sub
mov
dec
imul
adc
mov
pop
aaa
push
ja
jl
mov
icebp
adc
push
jno
xchg
mov
shl
adc
push
jl
sahf
mov
cmp
rcrb
aas
pop
jg
mov
stc
sbb
pop
jns
mov
push
jg
test
inc
jge
test
lret
pop
mov
and
jecxz
jl
movsl
orl
cmpsl
cmpsb
pop
in
shrb
xchg
shrl
cmp
cltd
mul
sub
or
icebp
add
mov
or
inc
inc
and
dec
xor
adc
push
jl
shlb
add
aam
jl
cmp
push
addb
jl
orb
mov
xorl
imul
inc
or
cmp
push
test
jecxz
ss
mov
ret
in
stc
cwtl
ljmp
or
std
cmp
and
out
xchg
jl
push
sbb
ret
ret
jns
add
jae
mov
mov
ja
jb
inc
push
pop
aam
fs
icebp
dec
insl
sub
jo
mov
xor
insb
or
inc
jp
cmpb
lcall
inc
adc
sub
jl
xchg
mov
sti
fcompl
sub
or
push
sbb
cltd
xor
jg
and
inc
cmp
xchg
mov
adc
dec
sarl
je
imull
inc
jns
mov
or
lods
adc
icebp
add
leave
insb
or
dec
mov
cmp
stos
mov
mov
push
xchg
jl
nop
gs
stc
jle
es
daa
cmp
xchg
xchg
or
cmp
mov
mov
outsb
fstl
mov
loopne
cmp
xor
inc
mov
test
push
jmp
mov
fs
stos
fimull
cmp
push
and
loope
dec
lea
sub
insb
xor
inc
in
mov
movsl
lahf
jl
lret
mov
dec
mov
lods
nop
jle
or
dec
rcr
mov
loopne
imul
push
cmp
adc
cmp
add
and
nop
scas
push
cmpsl
dec
jl
sbb
shlb
jl
mov
xor
jl
dec
adc
jnp
push
or
sbb
sbb
pop
jl
mov
out
mov
sub
jo
xchg
xor
in
and
js
push
mov
dec
jl
adc
jle
mov
out
ss
push
cmp
cld
mov
jl
hlt
xchg
inc
rolb
and
lds
add
ds
mov
test
fcmovu
sub
sbb
pop
icebp
fdivs
sub
cltd
jl
jns
ljmp
push
xor
outsb
fs
arpl
jl
mov
inc
data16
mov
repz
and
dec
add
sbb
cli
jl
jno
mov
ficomps
or
imul
divb
outsl
rcll
insb
mov
std
mov
ret
mov
cmp
int3
sar
data16
push
xor
jne
xor
repnz
adc
and
out
jl
mov
ss
clc
test
jo
aam
inc
roll
lds
cmp
mov
lcall
jmp
xor
pushw
mov
fwait
loope
cli
jne
mov
cld
shlb
inc
addr16
jns
dec
jbe
stc
lahf
jnp
rcrl
push
jmp
jns
idivb
push
data16
lahf
jl
cld
and
jl
repnz
aaa
decb
insl
jl
pop
fwait
sbbl
xor
jp
fistl
test
rcrl
inc
rep
leave
dec
les
es
or
into
sti
adc
lahf
jl
repnz
enter
daa
cmp
jge
lds
mov
out
or
mov
fstpt
movsb
lock
jl
std
adc
pop
adc
jns
js
add
mov
mov
aam
cmp
sub
jne
jns
jl
xchg
out
xchg
roll
scas
pushf
jbe
dec
ret
xchg
jns
or
jp
aam
mov
lock
fldcw
loopne
jl
push
push
add
sbb
add
movsl
ret
ljmp
subb
out
jl
or
push
fnstsw
dec
cltd
dec
and
pop
sti
adc
pop
insb
inc
enter
add
inc
setg
fmul
jl
outsl
ljmp
pusha
lods
fsubp
and
fld
jns
xor
daa
jl
sbb
pop
cld
add
push
mov
sub
or
cmp
mov
in
jl
pop
add
stc
pop
jo
aaa
cmp
or
fsubrl
mov
call
rorl
push
cmp
sbb
inc
mov
jl
rorl
cmp
or
mov
les
cmp
adc
push
push
pop
mov
mov
mov
nop
pop
jl
int
add
addr16
inc
aas
mov
mov
imul
or
into
jp
jl
sti
add
jl
mov
imull
xchg
roll
lods
jp
divb
jl
js
mov
jnp
mov
pop
jo
push
jl
repz
lahf
adc
cs
jbe
inc
fmull
sub
sub
add
cwtl
loop
idivl
sbb
jl
arpl
jns
andb
pop
jg
inc
loopne
stos
xor
jl
xlat
and
push
sti
stos
push
and
call
xchg
and
inc
sub
into
lret
icebp
out
cmp
cmp
jl
sti
pop
dec
subb
test
jl
ss
cltd
pop
jmp
in
mov
int
outsb
sbb
loope
jl
or
jp
lcall
add
xor
aas
loop
inc
mov
aam
jl
ficompl
scas
inc
nop
mov
fidivl
insb
fdivrs
ret
fwait
jge
insb
xor
sub
mov
test
iret
pop
dec
lahf
in
cli
jns
sti
fisttps
mov
jl
outsl
cmp
jp
sub
cmp
iret
xchg
lea
insb
leave
cmp
push
sub
mov
jbe
sbbb
mov
shlb
push
xchg
lahf
insb
fs
repnz
lds
or
daa
fdivs
outsl
pop
stos
gs
enter
inc
lods
jl
mov
lret
xchg
or
and
jbe
and
in
lcall
enter
out
bound
dec
push
pop
jl
jle
and
add
inc
cli
inc
pop
lahf
call
sahf
inc
jl
mov
bound
repz
pushf
ljmp
mov
xor
stos
add
repz
jl
lea
jl
sbb
insb
xchg
push
pop
sti
in
std
inc
sbb
mov
cmp
push
inc
push
lahf
jp
dec
mov
or
lcall
dec
insb
scas
shl
addr16
jl
cwtl
ret
jmp
stos
xchg
push
out
xlat
push
in
mov
adc
shl
iret
mov
insl
adc
jl
popf
jae
pusha
enter
shll
sub
xchg
sub
or
nop
out
mov
lahf
out
push
movsl
insb
fistpl
add
sub
sub
sarb
xorb
inc
cmc
dec
xchg
xor
dec
scas
jmp
jbe
test
fs
fidivrl
call
or
pop
push
shl
push
xchg
bound
xchg
cmp
inc
test
decl
sub
enter
cli
adc
js
jle
scas
mov
mov
adc
adc
dec
mov
push
loopne
pop
jns
sub
movsb
pop
inc
out
add
pop
jnp
lahf
loope
xor
pop
mov
fwait
jnp
mov
es
lods
push
or
rolb
sub
sbb
ss
sub
jae
loopne
xchg
cmp
int
pop
or
lods
mov
sub
cmp
imul
cmc
xlat
mov
cmpsl
test
cmpsb
or
jno
pop
sti
mov
div
xor
sub
out
scas
in
sbb
fisttps
or
inc
scas
and
and
mov
jecxz
or
add
out
stc
xchg
test
push
jg
jmp
movl
data16
lea
enter
add
mov
stc
xchg
inc
xor
sub
xchg
mov
and
mov
dec
cltd
push
jns
repnz
out
add
push
push
mov
loope
xchg
sub
xchg
cmpsb
xchg
shll
fidivl
out
push
gs
addr16
cmpb
ljmp
into
mov
ret
and
fst
jbe
lds
call
out
in
xchg
add
sub
out
imul
nop
jbe
mov
xchg
scas
popa
inc
dec
repz
daa
lock
nop
mov
mov
jmp
mov
nop
arpl
xchg
fistl
inc
jbe
jmp
cmp
mov
nop
add
call
jg
jbe
mov
mov
popa
sub
ljmp
xchg
out
dec
dec
jns
jmp
lock
add
cmp
jl
fidivrs
pop
xchg
xlat
aam
xchg
cmp
int
popa
pop
fdivrs
icebp
mov
in
outsl
jnp
iret
sbb
pop
fdivrs
jle
js
jle
xchg
loop
add
xor
jp
out
mov
es
fxch
xor
cmp
mov
in
cmp
and
outsl
imul
popf
add
mov
fwait
push
push
mov
dec
jle
cltd
jg
push
jg
out
icebp
fldcw
movsl
pop
mov
xchg
test
shrb
inc
pop
xchg
inc
movsl
sbb
rolb
ja
pop
or
push
push
outsb
bound
inc
or
push
lcall
jae
loopne
bound
enter
pop
or
test
cmp
pop
jns
cmp
inc
sbb
lea
es
mov
mov
or
jne
cs
call
jmp
inc
inc
jmp
mov
xchg
adc
out
mov
mov
mov
out
fildl
je
mov
in
mov
scas
scas
cmp
add
cli
jbe
mov
mov
fs
jb
cld
mov
lcall
pusha
inc
xchg
aas
clc
push
aaa
pop
inc
mov
add
popa
sbb
mov
adc
cmpsb
pop
test
or
cmpsb
mov
xchg
mov
icebp
inc
cmp
int3
add
scas
push
inc
sbb
test
icebp
xlat
pop
mov
sub
pop
xchg
push
insb
inc
jecxz
insl
int
pushf
xchg
repnz
cmpsl
cs
mov
jmp
jl
cmp
cmp
sti
nop
fs
cltd
es
lret
adc
push
insb
sbb
push
inc
jns
jl
and
je
int3
add
jnp
daa
iret
into
fsubrs
jmp
cmp
sbb
push
loop
fwait
jmp
and
ficoms
jnp
mov
xor
mov
or
push
outsl
push
mov
repz
js
inc
and
aam
add
jecxz
jl
ss
fmuls
xorb
xchg
jecxz
out
jb
inc
jl
dec
add
mov
sub
sbb
cmp
cld
jl
cltd
fwait
ret
sbb
in
cmp
addl
cmp
sbb
xor
ror
fistpl
and
sub
push
in
mov
clc
insb
add
repz
imul
push
fwait
mov
insb
cmp
cmp
jecxz
jl
xchg
sbb
or
mov
xor
xchg
in
jl
jae
fcompl
test
mov
dec
aas
inc
jl
adc
dec
and
jp
fucomp
push
les
jl
mov
cmc
jl
loop
cwtl
xlat
push
add
mov
mov
andl
cmp
sbb
loopne
stos
rorl
hlt
les
push
sbb
fdivl
sbb
add
fnstcw
roll
int
push
cmp
fwait
dec
push
in
inc
xor
and
addr16
push
pop
repz
sbb
lods
mov
decl
inc
inc
out
xchg
sarl
jno
sarb
notl
jne
sbb
addr16
out
jg
lock
inc
xchg
push
into
fisubl
fadd
mov
es
jb
add
insb
or
lods
cmp
push
jl
mov
push
push
movsb
mov
in
shll
nop
jbe
cld
cmp
xchg
fwait
dec
in
jle
lock
inc
leave
mov
xchg
popf
in
lods
dec
jg
cmp
jo
aam
sahf
xchg
sbb
out
dec
insl
xor
xchg
and
mov
in
fs
cmp
movl
jnp
lock
cmpsl
sub
and
mov
jnp
cmp
xchg
mov
xor
scas
cmp
aas
pop
js
jns
mov
xchg
and
jnp
jns
or
nop
out
pop
add
shl
mov
movb
in
icebp
sti
or
add
sub
push
out
cmpsb
and
push
out
addb
sti
sbb
fdivp
cltd
incl
pop
cmp
scas
mov
loope
pop
daa
xor
add
mov
and
loop
int
jg
pop
push
sbb
add
sti
loope
and
in
nop
sti
gs
jmp
mov
leave
cld
add
lock
scas
add
out
fdivp
fisubs
lret
cmp
jbe
cwtl
movsb
mov
mov
test
sbb
push
jns
fs
mov
repz
test
mul
xchg
push
imul
enter
add
popa
gs
adc
fldt
push
sub
inc
clc
sub
test
faddl
adc
dec
xchg
dec
sbb
add
dec
jbe
test
movsb
roll
mov
movsb
mov
ret
xchg
xchg
and
out
out
cmp
scas
push
adc
jle
jae
out
and
inc
adc
rcr
fwait
inc
jnp
es
movups
lret
pop
xchg
mov
repnz
out
daa
cmp
pop
mov
mov
outsb
jno
xor
mov
mov
pop
xchg
movsl
test
loope
jg
cmp
insl
push
push
dec
xor
fucomip
xchg
add
mov
sbb
ret
push
jl
stc
pop
pusha
xchg
jge
xchg
sbb
mov
jp
push
and
add
rcll
push
xor
push
push
cmp
fimuls
or
into
gs
add
adc
and
jns
cmp
bound
clc
andl
jo
dec
cmp
in
jnp
xchg
mov
jo
dec
ds
mov
icebp
jp
mov
bound
push
incl
out
rorb
add
jb
xchg
lret
arpl
adc
push
pop
xor
movl
test
sub
or
jno
mov
imul
jl
xchg
mov
mov
into
or
xor
popw
inc
inc
push
arpl
enter
dec
adc
add
xor
cmpsl
sbb
leave
call
ss
clc
stc
test
loopne
jecxz
das
fmull
xchg
jecxz
dec
cmpl
scas
inc
js
movsb
cmp
push
out
add
sti
pop
push
or
xor
cmpsl
dec
test
xchg
pop
push
loop
adc
movsl
xor
adc
daa
arpl
leave
std
lods
sahf
mov
js
test
movsl
movsl
jae
push
mov
call
into
aad
aam
fwait
push
aad
rol
movsl
stos
or
sub
inc
rcl
aaa
outsb
imul
lods
or
jmp
outsl
in
divl
dec
aad
aas
sub
in
fcomps
mov
aas
dec
and
push
push
jg
call
mov
lock
sbb
add
jmp
jae
inc
lret
das
hlt
sbb
pop
adc
pop
ds
insb
inc
xchg
push
mov
mov
jle
pop
sbb
sahf
jb
push
pop
push
aaa
cmp
popf
fwait
xchg
clc
mov
mov
or
and
push
pop
mov
fstpt
je
xor
and
jg
xchg
pop
subb
pop
jb
jno
push
xor
rcrl
andb
loope
hlt
rcll
inc
push
add
jmp
or
lea
pop
insl
pushf
out
dec
test
lahf
cmp
movsl
jmp
mov
push
es
sbb
xlat
sarl
inc
out
iret
lret
mov
outsl
mov
xorb
jb
repz
xor
cmc
movsl
loope
dec
pop
mov
jecxz
out
push
xchg
jo
push
outsb
pop
xchg
mov
ds
movsb
fwait
xchg
testl
adc
icebp
xor
push
jo
xchg
pop
inc
loopne
inc
popf
push
int3
mov
push
push
outsl
aad
hlt
fidivs
ret
xchg
add
cmp
or
cltd
out
repnz
add
cmp
movsl
adcl
push
mov
loope
dec
cmp
and
int
sbbb
in
push
popf
inc
push
sbb
into
les
cltd
addr16
cs
addb
dec
push
push
popf
sbb
enter
push
jmp
pop
addr16
out
sbbb
mov
mov
xorl
jmp
arpl
lods
push
push
movsl
dec
ljmp
mov
inc
mov
call
push
mov
push
and
pop
jg
icebp
shrb
mov
pop
adc
addr16
push
inc
add
repz
xchg
imul
push
sub
pop
mov
gs
aad
lcall
sahf
pop
cmp
inc
test
sahf
pop
cmp
andb
stc
pop
inc
jmp
sahf
pop
cld
std
popf
sub
cmp
jbe
mov
dec
add
scas
loope
lods
dec
inc
les
cmc
lahf
jbe
mov
dec
adc
loope
arpl
sbb
pop
mov
sub
scas
fldcw
fisttpl
cmpsl
dec
pop
jecxz
nop
fstpt
mov
sbb
fcmovnbe
mov
sti
mov
xchg
inc
js
mov
jge
xchg
fistpl
jecxz
and
mov
inc
adc
add
test
push
cmp
repnz
data16
mov
pop
cs
repnz
daa
cmp
int
inc
or
xor
sahf
xor
inc
jl
cmpsb
add
test
dec
pop
xchg
out
pop
fdivr
arpl
ljmp
fs
xor
cs
adc
fwait
mov
out
arpl
xchg
add
xor
fwait
loope
add
inc
popl
int3
mov
cwtl
lock
jbe
pop
inc
out
mov
cmp
push
pop
xor
jae
lods
pusha
add
mulb
push
inc
inc
stos
xor
ret
data16
mov
sub
xor
jg
xchg
rolb
add
lods
cmp
pop
jns
or
in
fwait
jns
adc
dec
movsl
nop
mov
push
ja
imul
aam
dec
mov
add
inc
xchg
mov
stos
aas
sbb
pushf
ret
mov
cs
mov
or
data16
arpl
add
push
pop
jae
je
test
ds
test
pop
testb
fisttpl
cmp
loope
sahf
dec
cmp
or
clc
outsb
scas
mov
jmp
cmc
out
dec
xlat
dec
inc
pop
loopne
mov
xor
cmc
in
loop
out
movsl
pop
add
insl
jle
add
test
pop
xor
jecxz
cmpsb
cmc
pop
fidivl
sbb
mov
mov
pop
test
push
jge
lods
cmpsb
scas
push
ret
mov
pop
in
es
mov
mov
pop
xchg
fwait
push
aas
hlt
mov
dec
repz
and
repz
sbb
movsl
sub
ret
bound
bound
fsubr
outsl
or
arpl
xchg
inc
repz
movsl
sub
sbb
cmp
lahf
inc
pop
out
mov
fcomp
sbb
add
xchg
and
dec
jge
lret
testl
push
fwait
imul
pop
lods
mov
das
xchg
sarb
movsb
sub
pop
jl
adc
daa
icebp
mov
inc
andl
xchg
mov
test
outsl
jl
sbb
inc
push
push
sub
test
mov
out
dec
adc
jp
movsb
and
inc
jl
repz
xchg
push
and
adc
movsb
insb
leave
push
dec
jl
scas
inc
int
xchg
mov
dec
arpl
das
jns
mov
push
rol
ljmp
std
lfs
add
sub
cli
inc
mov
out
jl
mov
add
jae
jb
cmp
ret
sbb
sbb
mov
test
js
pop
aas
push
jl
loope
sub
jmp
fs
rcll
call
ljmp
hlt
sub
cmp
mov
aaa
jae
pop
imul
ret
jp
xor
dec
push
push
xchg
cmp
or
xor
fsub
xchg
cmpb
mov
scas
arpl
mov
call
cld
ret
cltd
inc
insb
fldcw
jp
or
xor
in
mov
imul
pop
shll
hlt
test
lock
cmp
push
pusha
js
jl
inc
repz
pop
hlt
into
mov
je
xor
inc
sub
insb
xchg
dec
adcb
stc
fadds
xor
jl
imul
sub
xchg
and
js
loop
pop
dec
jno
sbb
cld
dec
or
sub
cmp
inc
xor
cmpsb
lcall
mov
xor
dec
lret
cltd
lock
das
testb
sahf
in
addl
sarb
sbb
xchg
xor
incb
jl
push
inc
mov
inc
and
adc
push
lock
ljmp
sub
jl
repz
in
mov
jbe
in
jl
or
cld
rcr
jle
or
fcmove
inc
sub
shrl
mov
jl
pop
fidivrs
loop
psubusw
jl
into
loope
mov
cwtl
insl
les
add
in
les
jns
cltd
dec
xchg
cmc
add
mov
mov
cmp
jbe
or
or
test
inc
mov
dec
and
arpl
movsl
fstps
jl
pop
add
es
cmpl
push
incl
out
pusha
shrb
in
es
popl
jne
xor
loope
cmpsb
add
cld
fwait
cvtps2pi
outsl
pop
or
fldl
inc
adc
movsl
cmpsb
mov
xor
popf
push
mov
xchg
inc
daa
pusha
mov
dec
cli
pop
xchg
sbb
into
les
mov
insb
mov
pop
mov
dec
lahf
push
push
and
push
sbb
fsubrl
mov
lret
push
jns
fcomps
sbb
push
pusha
sarb
inc
sub
ja
inc
mov
jnp
adc
xor
je
out
jl
test
dec
add
sub
fiaddl
cmp
or
cvtpi2ps
mov
icebp
jne
inc
enter
roll
dec
arpl
pop
lret
lea
into
aam
jl
dec
push
mov
cmp
imul
adc
jl
aam
mov
sub
xor
jecxz
jbe
je
cmp
xor
adc
aad
negb
mov
movsb
xchg
pop
movsb
aaa
cmp
mov
es
pop
inc
scas
or
cmp
shl
jle
and
mov
ss
sti
test
pop
fld
inc
cmpsl
in
push
lea
adc
shll
push
es
xchg
call
jmp
push
add
pop
sbb
js
jno
sub
lea
lea
test
mov
imul
shl
and
pop
test
fsub
inc
imul
push
mov
mov
sub
leave
call
data16
arpl
mov
and
inc
out
pushf
adc
pop
xchg
gs
or
push
pop
xchg
cmpsl
int3
pop
sub
shl
push
cmp
pop
aas
sub
jbe
sti
jg
and
arpl
xchg
andl
fisubs
rcl
and
jle
addr16
push
push
nop
push
inc
outsb
dec
sbb
adc
aaa
es
sbb
icebp
pop
jne
pop
sti
push
push
mov
mov
out
dec
xor
cmp
mov
cmp
add
int3
fdiv
loopne
mov
cmpsl
leave
or
bound
negb
call
jge
sub
xchg
notb
je
bound
inc
mov
push
dec
sbb
pop
cmp
div
xchg
out
pop
fwait
jecxz
rclb
push
ficompl
jg
pop
mov
adc
push
adc
inc
je
fldt
mov
in
and
push
sti
mov
push
mov
pop
mov
test
call
sti
pop
repz
sti
mov
aam
js
mov
and
aaa
test
in
out
dec
sbb
popa
cmovb
leave
jmp
mov
mov
mov
es
and
mov
movsl
test
xchg
mov
xchg
test
loope
movsb
pop
inc
iret
add
jnp
popf
push
xchg
push
xor
sti
call
push
arpl
mov
les
imul
adc
clc
adc
daa
cmp
xchg
in
push
dec
add
repnz
int3
cmc
int3
popf
jp
sub
bound
shll
punpcklwd
cmp
or
mov
mov
adc
inc
fistpll
fcomp
jmp
dec
lods
mov
fistpl
push
cmpsb
or
orl
jae
pop
cmpsl
movsl
mov
fwait
fwait
cmp
jno
addr16
lret
lea
sti
fildll
ss
xor
les
fmul
and
pop
int
adc
fidivrl
mov
daa
mov
push
into
xor
je
insb
negb
mov
xchg
sub
jl
mov
repz
test
cld
arpl
dec
jl
jns
push
and
ds
jl
jp
mov
jp
movsb
subl
aaa
sti
jno
xchg
and
repz
dec
push
adc
dec
sub
movsb
or
test
pop
shr
in
lcall
scas
jbe
inc
enter
adc
mov
push
loop
mov
cmp
push
setb
push
jbe
scas
pop
test
iret
and
fcomps
xchg
sub
addr16
cmp
sarb
aas
mov
int3
dec
xor
jae
mov
dec
in
jno
int
leave
jl
icebp
dec
rol
out
jl
push
jp
dec
repz
sbb
shrb
scas
mov
push
pop
adc
adc
and
mov
xchg
sbb
sub
jl
mov
jae
cmp
xchg
jl
divb
cmpb
movsb
inc
cld
dec
jns
sbb
sub
xchg
imul
jp
pop
ljmp
popf
mov
inc
jl
testl
xchg
ret
fsubs
jl
cmp
enter
pop
sbb
imul
jl
fimull
jl,pt
xor
or
dec
int3
jl
ret
scas
xor
xchg
sub
sbb
pop
push
out
stos
pop
cmp
cltd
push
cmp
push
repz
or
faddl
add
shll
and
hlt
jl
cmp
repnz
dec
sarl
push
sbb
popa
loope
insb
push
dec
jbe
popf
add
jl
rolb
in
inc
sbb
dec
test
mov
pop
jle
or
cmp
cmp
push
and
add
roll
xor
std
ret
dec
inc
lock
cmp
aam
jl
imul
mov
rorl
add
sub
lret
xchg
popa
in
jae
out
mov
std
mov
pop
and
or
pop
jge
stc
push
in
jns
jl
add
inc
cmp
adc
fisttpll
jp
push
mov
jl
push
mov
nop
jl
pop
and
add
mov
adc
jnp
dec
repz
rcrl
jle
cld
daa
inc
xchg
jl
movsl
mov
xor
cmc
mov
jl
mov
inc
nop
xchg
xor
mov
leave
out
add
movsl
and
arpl
jl
rcr
push
mov
jg
aad
ss
add
dec
jl
out
inc
out
sub
xor
mov
inc
jno
scas
cmp
xchg
jb
push
xor
jl
jmp
jp
les
jl
sbb
dec
xchg
push
mov
add
repz
es
gs
js
test
mov
call
sub
add
or
sahf
xor
jmp
jp
jmp
stos
ljmp
push
adc
insb
cltd
inc
xchg
jmp
dec
dec
jbe
ror
cmp
add
mov
mov
inc
adc
inc
sarb
in
clc
addr16
in
push
ja
loopne
lea
sub
adc
jno
or
jl
das
mov
test
mov
mov
and
mov
js
andb
or
in
push
jp
jb
movsl
fnstsw
inc
push
enter
jns
jl
daa
xchg
sbb
or
lahf
jo
cmpsl
mov
fimull
jnp
dec
xor
jns
fstpt
or
mov
xchg
jae
orb
imul
adc
mov
pop
lahf
ret
shr
outsl
lcall
inc
cmpl
ret
loopw
jl
mov
dec
sub
movsb
clc
sbbb
push
cld
jnp
sbb
inc
je
popl
mov
cmpsb
dec
sub
mov
mov
icebp
fadd
add
inc
jl
dec
hlt
nop
dec
cmpsl
loope
cmp
xchg
dec
pop
loop
mov
adc
cmp
jp
push
jl
inc
xchg
jns
int3
jge
dec
jl
fiaddl
or
cmp
mov
movsl
and
mov
incl
jnp
pushl
shlb
jns
repz
lock
xchg
cmp
fucom
push
jl
stos
es
lahf
jge
cmp
mov
mov
fsubl
xorb
mov
fisttps
sub
fs
mov
pop
std
out
jl
notb
and
push
mov
test
adc
shl
jl
mov
cmp
movb
inc
pop
and
xor
rcll
xchg
addr16
jl
xor
imul
imull
push
ret
fs
mov
mov
sbb
jl
or
sub
push
into
push
adc
push
mov
or
idivl
leave
xor
push
jl
cltd
inc
sbb
push
in
imulb
add
call
dec
push
stos
inc
dec
xchg
jl
adc
call
fimuls
dec
mov
out
jl
fistpll
pop
mov
mov
add
lods
mov
xchg
adc
lret
cwtl
xchg
lock
loopne
adc
mov
out
repz
adc
divl
xorl
rol
jl
sbb
xlat
jp
outsl
sarb
pusha
inc
jns
lcall
dec
pop
lods
jb
xchg
gs
or
imul
xchg
push
or
pop
ret
and
mov
loope
or
fldenv
dec
and
push
and
xchg
adc
sahf
aaa
out
inc
xor
jae
out
bound
lds
arpl
xor
fstpt
cltd
push
jmp
xorps
dec
jnp
cmp
inc
mov
add
cltd
shll
out
jb
das
and
xchg
push
jle
lea
jl
movsl
ret
adc
aaa
sbb
add
insl
fisttpl
out
jb
fadd
cmp
jb
jae
sbb
sbb
mov
xchg
jg
adcb
inc
push
xchg
push
and
lods
mov
out
addr16
or
std
imul
xor
cld
enter
insl
pushf
mov
rorb
jecxz
data16
fs
mov
jno
jb
push
clc
test
inc
jl
dec
add
shlb
inc
inc
insb
les
adc
arpl
out
xchg
jecxz
jmp
mov
lret
xor
mov
add
outsb
ret
jb
push
and
jns
jnp
sub
xchg
pop
jg
dec
or
mov
mov
inc
repz
mov
out
mov
xor
sbb
xor
mov
jl
aas
ret
and
inc
sbb
push
sub
sti
lret
or
je
and
int3
rorb
cmp
scas
insb
lock
xor
or
cmpsb
mov
jp
cmp
inc
sarb
rorb
jl
lds
fs
mov
sarb
in
pop
insb
hlt
push
jnp
xchg
inc
pop
jl
mov
repnz
jl
push
xor
and
ret
xor
mov
fstpl
retw
imul
jl
push
inc
dec
hlt
rcll
jl
cltd
in
cmp
lahf
mov
aam
sahf
push
ss
mov
xor
std
push
push
push
cld
dec
cltd
pop
mov
in
sub
jl
cmp
sbb
mov
mov
jl
js
mov
and
cmp
rclb
jae
mov
jl
stos
out
cwtl
cltd
inc
cmp
leave
jl
repz
pop
lret
in
fnstsw
mov
or
fxch
inc
aad
cwtl
xchg
adc
mov
push
adc
or
fs
aad
cwtl
lret
mov
cmp
cmp
mov
gs
or
mov
lret
jl
sbb
dec
sub
sar
cwtl
jl
popf
mov
push
jl
push
arpl
adc
pop
ss
adc
xchg
imul
push
jo
lcall
fimuls
aas
mov
out
push
jl
les
in
xchg
jl
fistpl
push
cmp
and
inc
inc
out
pop
add
out
mov
or
mov
stos
rcll
cmpsl
loop
jg
jl
imul
and
mov
pop
mov
addr16
jns
mov
cmp
xchg
mov
jl
shll
test
leave
inc
in
inc
adc
repz
push
out
andl
negb
jl
cld
ja
repz
imul
add
sbbb
jp
xchg
in
jl
ja
test
or
int
mov
and
inc
sub
jb
mov
mov
cmpsb
mov
ja
je
jl
repnz
adc
lahf
or
rclb
call
adc
loopne
imul
push
lret
push
adc
mov
je
inc
mov
sbb
xchg
and
lods
push
add
xchg
arpl
inc
stc
pusha
dec
jl
add
filds
daa
jl
jmp
pop
dec
cmp
jl
sbb
repz
in
mov
pusha
loopne
inc
mov
dec
rcrl
fistl
jns
jl
ret
push
pop
or
add
sbb
icebp
jl
pop
loope
inc
rcrl
jns
inc
lods
outsl
mov
mov
add
nop
mov
adc
push
xorb
xchg
jl
ror
scas
int3
cmp
jl
fistpl
imul
inc
icebp
and
aam
std
jnp
xor
jg
xor
mov
mov
js
sti
mul
ds
mov
mov
push
push
and
je
shll
jb
add
lahf
aaa
std
dec
mov
sub
sub
loopne
fwait
es
adc
insb
mov
or
inc
jl
in
inc
xchg
iret
popa
jp
jns
adc
or
addr16
stos
jae
mov
movsl
aam
or
push
es
out
inc
js
push
and
out
cmp
mov
jge
mov
push
repz
outsb
inc
add
into
mov
dec
fstpt
cmp
mov
cmp
mov
xor
xchg
scas
stc
mov
dec
jo
sub
xchg
and
jp
scas
ss
jl,pn
sub
mov
dec
ret
adc
insb
pop
outsb
jecxz
addr16
insl
fistps
fistl
sbb
pop
popa
add
push
loopne
dec
call
enter
jae
ss
enter
pop
push
cmp
lret
jns
lret
inc
mov
and
jl
loope
xchg
insl
mov
mov
call
aas
arpl
inc
mov
sahf
gs
inc
loopne
imul
or
sbbb
add
cmp
mov
jl
add
xlat
inc
cwtl
xchg
cmp
divl
jl
outsb
icebp
jbe
push
inc
rcrb
push
je
pop
dec
jl
out
faddl
repnz
mov
sub
jl
mov
xchg
mov
out
jl
push
push
mov
dec
sub
daa
jns
cltd
ja
aad
imul
pop
shlb
adc
pop
mov
mov
fs
lock
roll
pop
testb
shlb
pop
test
ret
icebp
push
mov
gs
insl
jge
cld
dec
or
fimuls
xchg
add
jl
js
xor
int
leave
cmpsb
add
pusha
sarb
and
imul
or
rcrl
mov
mov
push
cmpb
dec
mov
or
je
mov
and
sbb
insb
jle
or
int3
stc
dec
je
mov
out
inc
mov
out
adcb
cmp
jno
decl
out
jp
xchg
jl
cmp
push
fcmovnb
ret
adc
mov
jl
rcl
lock
stos
lods
insb
out
jle
in
sahf
mov
jl
out
xchg
jl
xor
lahf
or
pop
push
xchg
pusha
mov
shl
sbb
push
arpl
mov
loope
je
sub
mov
in
xor
sub
xchg
test
jns
mov
out
insl
fwait
xchg
test
mov
cmp
adc
stos
mov
mov
into
cmp
je
stos
mov
lahf
push
ret
sub
jl
pop
dec
pop
adc
adc
arpl
in
je
dec
lahf
pop
jl
xchg
mov
add
stc
jl
arpl
es
repz
cmp
xchg
jnp
push
std
fst
into
data16
insl
and
ja
jecxz
test
decb
fs
adc
pop
shlb
cld
imul
jmp
sub
or
lods
cmpl
push
adc
jns
jnp
notl
fidivl
xor
mov
sbb
add
xor
cltd
inc
shll
repz
mov
cmp
lods
sub
ror
or
mov
add
es
or
xor
idivb
mov
xchg
cmp
add
cmp
leave
lds
mov
jl
xlat
mov
lea
mov
mov
lods
dec
imul
jg
dec
jl
outsb
mov
out
mov
lock
hlt
mov
and
mov
shrl
xchg
fs
cmp
aad
pop
add
jmp
aam
inc
sarb
std
ljmp
scas
popf
pop
gs
jo
sub
xlat
cmp
mov
in
gs
cmp
adc
xor
dec
cmp
lret
jl
inc
roll
inc
and
inc
dec
adc
ret
lret
sbb
xor
push
fidivrs
add
mov
inc
aad
cli
jl
push
es
subl
push
sbb
push
jl
movsb
imul
jl
ds
or
xchg
jl
aas
mov
and
in
sub
repnz
loop
sarl
arpl
xchg
js
and
inc
jnp
add
dec
mov
fcompl
jl
pop
or
lahf
cmp
pop
xchg
es
cmp
sub
std
daa
or
adc
push
jle
ss
mov
mov
xchg
inc
jl
ror
iret
add
fistl
and
outsb
dec
pop
mov
stos
fsubl
mov
cmpsb
or
cmpsb
test
into
and
pushl
mov
jecxz
xor
orb
jl
rclb
dec
mov
mov
pop
inc
and
xchg
bnd
and
mov
xchg
xor
adcb
call
test
jl
jmp
adc
js
pop
jl
mov
pusha
inc
stos
jl
outsl
mov
mov
icebp
sub
jl
shrb
mov
cs
out
mov
jno
lret
push
xchg
jp
xor
mov
sbb
movsl
mov
dec
mov
rclb
jp
add
jnp
aas
pop
jo
sahf
into
repz
loop
xchg
mov
popf
jl
ljmp
add
lahf
jl
dec
roll
dec
or
dec
add
xlat
sbb
insl
pop
cs
cmp
xor
cmp
or
sub
inc
icebp
dec
push
mov
jbe
mov
jbe
push
pushl
xorb
sbb
mov
sbb
fstl
aam
inc
stos
or
mov
sub
adc
push
cmc
imul
insb
sbb
jge
mov
xor
cmc
insb
jns
fmul
lcall
ds
cs
cltd
es
leave
mov
mov
add
cmc
push
and
popf
or
je
insl
pop
xchg
repz
jl
add
outsb
dec
cmp
stc
xorb
sub
jo
stos
lret
in
nop
ja
imul
cltd
les
mov
into
sub
daa
insb
add
lret
cmpl
outsb
loop
bound
mov
cmp
mov
jl
adc
repz
inc
sub
and
int3
fadds
jl
lock
lret
test
jl
loopne
pop
jno
mov
jl
xchg
das
test
fimuls
jecxz
push
mov
loopne
push
jl
adc
jo
cmp
icebp
sub
pop
popf
dec
sbb
inc
insb
loope
enter
mov
test
or
in
jl
imul
add
cmp
aam
jnp
mov
pop
cli
decl
jns
mov
add
adc
dec
xor
jne
or
inc
rcl
shl
jl
push
std
pop
xor
xor
jl
fldenv
testl
insb
push
ja
test
gs
js
aaa
add
cmpsl
mov
ja
icebp
adc
into
xor
gs
xor
mov
bound
movl
in
inc
pusha
addr16
es
jbe
ds
pop
pusha
dec
ljmp
rcr
jmp
lods
cmpsl
and
or
dec
das
in
add
push
into
push
sarl
mov
fsubrl
cs
imul
arpl
out
ror
push
add
les
mov
and
ret
xorl
movsl
and
mov
ss
pop
cld
mov
stos
test
jmp
add
and
js
inc
into
xor
jno
popf
mov
inc
add
push
repz
call
cmpsl
push
add
dec
xor
ds
jl
rclb
push
pop
pusha
hlt
jb
jae
in
mov
add
adc
cs
fstpt
adc
xchg
fwait
xor
sbb
sub
jnp
mov
adc
jae
and
mov
js
mov
out
subb
insl
movsb
and
out
outsb
std
dec
lea
mov
and
xchg
xchg
sti
sub
es
and
jp
fnsetpm(287
out
jge
dec
fisttpl
mov
test
pop
subl
popf
shrl
ds
xchg
and
mov
add
hlt
mov
jge
rcr
xchg
pop
mov
enter
sti
and
inc
ljmp
jbe
inc
icebp
sbb
gs
popa
lds
mov
sub
add
mov
int3
mov
jb
and
bound
shl
push
sub
into
push
aas
jmp
aad
inc
jecxz
pop
add
mov
xchg
sub
lea
mov
test
sub
std
mov
xor
mov
xorl
out
inc
fistpll
cld
in
push
sbb
push
mov
mov
loopne
mov
push
add
cs
cmp
jns
out
pop
inc
or
cmp
insb
fildl
push
call
mov
testl
mov
mov
js
lods
out
pusha
inc
push
test
mov
sub
xchg
inc
shll
and
push
xor
cmpsb
jns
and
xchg
jecxz
into
or
shr
imul
lahf
enter
stos
xchg
pusha
int
mov
test
js
inc
and
lds
xchg
mov
pop
ljmp
xchg
and
mov
fistpl
push
rorb
in
sub
xchg
inc
data16
aam
cmp
pop
mov
pcmpgtw
adc
xchg
and
adc
xchg
fs
mov
je
jbe
and
movl
mov
and
push
push
and
adc
inc
mov
push
mov
add
mov
sbb
jne
inc
xchg
dec
cli
call
mov
push
mov
jle
sbb
xchg
inc
push
push
jae
mov
lret
add
addr16
add
cmpsl
call
push
jbe
pop
outsl
jp
pop
mov
jge
inc
sub
scas
shl
and
rolb
test
rorb
shll
pushf
and
lahf
xor
fldt
or
imul
rorl
popf
and
pop
sbb
add
jae
cmp
inc
test
int3
incl
push
cmp
pop
mov
sti
sub
xchg
and
sub
jg
sub
pop
xchg
inc
test
mov
xor
fldenv
leave
cli
jns
inc
gs
mov
data16
fbld
sti
dec
jb
addr16
inc
int
mov
test
mov
fisttpl
jmp
mov
fistpl
pop
aas
mov
loope
pop
insl
pop
push
mov
pop
vpmacssdql
cmp
rorb
jnp
outsl
fucomi
addr16
in
add
mov
in
addb
pop
add
adc
cmp
xorb
pop
mov
cmpsb
xchg
mov
pop
push
pop
out
or
mov
jns
cs
push
pop
je
jbe
push
sbb
push
lea
jae
inc
adc
out
xchg
adc
nop
mov
imul
scas
in
add
inc
mov
pcmpgtd
push
dec
repz
sarb
int
and
out
and
imul
mov
lock
imul
cs
imul
ficoml
jl
adc
popf
xchg
loop
cli
repz
in
mov
pop
mov
ds
cmp
jns,pn
xchg
xchg
jae
adc
ret
out
stos
jns
or
fs
xor
cmpsl
xchg
pop
xlat
push
fdivl
je
cmp
pop
jl
cmp
push
push
icebp
fldenv
repz
scas
je
fwait
cmpsl
jb
clc
gs
fs
ss
iret
xchg
xchg
inc
sub
mov
push
adc
idivl
aam
xchg
jae
cmp
loop,pn
mov
ds
xchg
add
inc
push
xchg
popf
or
test
add
loop
lahf
xlat
mov
fistl
sub
cmp
push
mov
fwait
push
fwait
mov
test
dec
ljmp
repz
jle
xchg
ffree
push
loop
jg
rclb
jl
je
jae
xlat
mov
mov
fwait
dec
addr16
cmp
movsl
stos
addr16
sub
inc
jmp
sar
mov
add
popa
add
sub
or
fistpl
xor
arpl
mov
adc
movsb
jb
jo
loop
lods
test
and
data16
ja
sub
jecxz
mov
ds
mov
repnz
aam
js
mov
out
loop
scas
daa
adc
fs
xlat
jbe
out
aaa
lds
daa
xor
adc
iret
push
lea
out
adc
mov
fwait
test
test
ljmp
lock
or
loopne
xor
mov
or
outsb
inc
or
pop
inc
dec
pop
xchg
add
insl
and
push
adc
mov
jbe
xchg
aad
mov
add
inc
pop
xlat
inc
ds
into
fwait
pop
movsb
movsb
jb
insb
and
je
cli
push
sub
cmp
imul
jne
xchg
inc
sahf
loop
movsb
scas
cmp
jge
add
push
test
loopne
jnp
shl
sti
adc
cmp
insl
int3
push
test
imul
dec
or
sbbb
fidivl
jl
dec
fcoml
imul
cmp
lret
jl
sub
sub
cltd
add
push
xor
mov
out
sub
loope
cmp
add
mov
sub
pop
inc
in
fdivrs
or
icebp
stc
je
jne
jl
sbb
push
and
sbb
inc
aas
inc
jmp
in
call
mov
in
dec
mov
jl
lea
mov
push
xchg
in
daa
xlat
add
jl
ficomps
xchg
jl
mov
leave
ja
insl
mov
cltd
and
test
adc
fwait
inc
and
jge
or
imul
mov
call
adc
test
inc
jl
shrb
bnd
mov
xchg
xor
mov
out
jmp
call
cmp
insb
cmc
daa
sarl
mov
enter
push
rolb
jl
imul
les
and
pop
xchg
jl
sahf
dec
stos
in
inc
jne
dec
fisttpl
cld
out
sub
cltd
fs
inc
fdivs
jl
bndstx
push
inc
out
lcall
sarb
inc
in
mov
leave
push
jae
mov
mov
add
shlb
jp
div
jmp
lds
dec
shrl
test
gs
int
imul
data16
mov
and
movzwl
pushf
cmpl
and
sub
outsb
jnp
jle
pop
jge
cmpsb
addr16
dec
popf
loopne
jecxz
test
popa
jnp
out
pop
movsl
inc
stos
jge
sti
sbb
ljmp
mov
fisubl
adc
repnz
sarb
cmp
or
lds
fimull
fisttpll
add
nop
mov
lcall
jmp
out
mov
jg
sbb
rcr
std
pop
pop
sbb
adc
mov
fwait
mov
out
fs
cmp
inc
shll
or
es
pop
push
jg
jmp
pop
or
sbb
cld
mov
push
adc
cld
imul
inc
pop
and
mov
jo
jle
xor
pop
insb
mov
rcrb
arpl
movsl
popa
hlt
leave
fists
add
inc
popa
stc
test
je
imul
js
xchg
cmc
orb
xchg
fwait
pushf
jno
ret
daa
xchg
out
or
push
lods
dec
fnstenv
jmp
dec
push
fnstcw
popa
jae
mov
cmp
rolb
xlat
arpl
jns
out
xchg
inc
out
movb
cmpsl
out
dec
iret
lret
cmpsl
mov
xchg
pop
lds
xchg
daa
imul
popa
lds
push
mov
xor
xchg
cmpb
test
out
jp
out
movsl
jae
pop
fldenv
mulb
sahf
in
and
ret
cmpsl
inc
xor
test
pop
mov
scas
xor
cld
xchg
cmp
stos
pop
out
push
xor
add
inc
fwait
mov
stc
inc
ja
xchg
testl
jecxz
and
jbe
scas
add
bound
mov
bound
mov
int3
ret
rcll
inc
mov
movsb
negb
jbe
sti
lret
pusha
int3
inc
jnp
fmul
pop
mov
ficoml
call
in
cmp
rcll
inc
or
or
or
dec
in
int
jo
sbb
fstl
aas
jecxz
xor
das
mov
lods
fwait
loop
add
subl
push
cltd
mov
loop
in
scas
dec
pop
pop
fs
stos
mov
insb
rcll
arpl
push
mov
fnstsw
sbb
pop
xchg
sti
push
xchg
imul
movsl
adc
add
or
add
or
mov
cmp
nop
push
cwtl
jle
movsl
fisubs
roll
jl
fnstenv
jl
lods
mov
adc
pusha
out
sarl
stos
pop
dec
jnp
lret
aas
mov
jb
inc
xchg
in
and
and
iret
push
mov
popf
mov
sub
inc
xchg
jle
into
and
dec
fdivl
pop
nop
push
movsb
leave
idivl
cmpsb
adc
cli
sub
mov
xchg
jl
mov
ret
and
jl
sahf
push
push
or
or
jl
cmp
cld
es
sub
stos
and
jl
pop
and
mov
scas
into
mov
jb
mov
jo
cmpsl
cmpl
fcompl
or
xchg
imul
rcll
mov
jo
sub
test
mov
mov
aaa
jbe
cmp
or
xor
cmpsb
loope
push
les
popa
jnp
jl
dec
push
jl
or
xchg
outsl
fmulp
jl
fisubl
cmp
and
xchg
xchg
pop
add
pusha
xchg
cwtl
inc
jae
inc
and
pop
lds
out
pushf
imull
data16
repz
jnp
mov
repnz
inc
in
xchg
adc
cli
dec
mov
mov
xchg
push
jp
push
fldt
mov
lods
lret
insb
and
jl
mov
pop
mov
int3
inc
fadd
jge
clc
sub
adc
adc
out
add
pusha
jl
push
jns
inc
shlb
cmp
mov
cmc
sub
push
enter
clc
push
dec
loope
loop
call
popa
fs
ret
fwait
or
out
and
cmp
mov
pop
jae
sub
outsb
jae
xchg
call
imul
arpl
gs
lahf
sub
inc
out
jns
add
leave
lods
push
out
icebp
popa
sbb
xlat
into
lret
jl
fistpll
das
jl
cmpl
fwait
push
jle
in
cld
xchg
sub
mov
jmp
jl
add
push
jl
daa
cmp
ret
mov
jl
jno
in
lea
mov
dec
jae
stos
mov
jo
sbb
dec
int3
daa
imul
scas
fmuls
pop
fistl
adc
fisttps
arpl
idivl
mov
sbb
int
mov
mov
mov
sti
icebp
mov
outsb
mov
cmpsl
aas
mov
push
jl
and
lfs
lahf
jl
fcoms
inc
into
test
pop
jl
jo
repz
dec
jl
inc
test
xchg
xchg
lds
in
cld
insb
xor
sub
inc
pop
xor
cmpb
andl
mov
jae
repnz
pop
leave
cmpsb
stc
sahf
jl
push
clc
in
aas
enter
xor
push
ds
mulb
jl
sbb
mov
cld
sub
jecxz
mov
sub
mov
in
je
in
adc
insl
insb
clc
aad
jl
aaa
fcmove
lret
pop
cmp
int3
inc
jl
xchg
cmc
loop
std
js
call
adc
xor
mov
outsl
pop
add
mov
push
jecxz
stc
push
leave
inc
fs
sahf
orl
jg
mov
sbb
sti
shlb
jne
jecxz
fs
and
in
ret
mov
lea
std
call
adc
enter
cmp
jle
push
xor
sub
and
dec
push
jnp
insl
cmp
cmpsl
aad
sbb
outsb
les
fistpll
dec
jl
dec
sarb
dec
dec
ja
bound
sub
adc
inc
stos
lods
fsubrp
mov
adc
mov
test
aas
fwait
popf
mov
sbbb
adc
std
icebp
push
lds
test
pop
ja
jae
movsl
lods
push
icebp
push
mov
aaa
jnp
adc
jns
outsl
fwait
cmp
push
cmp
cmp
add
in
sti
xchg
stos
and
xchg
subb
insb
stos
push
cli
sub
cmp
jl
std
cmpxchg
icebp
mov
sti
push
imul
jnp
jecxz
or
and
popf
aas
ja
mov
loopne
jl
mov
inc
mov
sbb
repnz
jns
jl
and
mov
jl
mov
lcall
mov
sub
jl
sbb
fs
out
jmp
movsb
stos
out
or
xor
dec
lahf
mov
movsl
stos
test
lods
test
add
or
sahf
ljmp
mov
cld
xor
add
and
push
fisttps
or
imul
mov
aam
xchg
aaa
dec
out
add
je
xor
sarl
push
icebp
jl
cli
clc
lock
cmp
jl
cmpsl
dec
repnz
ss
es
mov
inc
add
jp
xchg
pop
adc
or
xor
xor
lret
push
jl
adcl
adc
aad
fdivrs
sub
mov
popf
scas
jnp
aas
sub
xor
jmp
cmp
sbb
hlt
inc
xor
xor
sbb
cmc
xor
adc
push
pop
xchg
ljmp
je
inc
iret
jl
imul
fdivrl
in
aam
adc
xor
nop
sbb
insb
or
adc
in
xlat
xchg
aam
shll
fcomps
lods
insb
fmul
loopne
jl
mov
push
add
pop
cmp
cs
mov
jge
jl
jp
rol
jae
daa
jl
cld
arpl
cmp
aam
enter
dec
insl
push
jl
mov
pop
jns
jl
scas
sarl
rclb
push
jl
stos
mov
daa
jl
and
fmulp
jp
jl
mov
jnp
cmp
mov
jl
mov
jne
cmp
add
or
mov
mov
jl
push
fwait
push
cmc
pop
ror
jl
xlat
sbb
mov
addb
repz
xchg
int
les
lock
inc
mov
jle
imul
les
lea
pop
mov
js
dec
or
cltd
dec
mov
pop
idivl
out
shr
hlt
jl
push
lock
loop
xchg
xchg
mov
aaa
add
or
cmp
fdivs
adcb
or
mov
sbb
mov
xor
mov
daa
cmc
mov
cmp
flds
jl
jae
xor
and
call
push
jnp
jb
inc
movups
push
cmp
std
dec
imul
jno
inc
rep
jl
sbb
lcall
adc
pop
jl
sub
pusha
sub
inc
mov
stos
pop
push
push
add
shlb
adc
fimull
std
sarb
pop
mov
jl
jns
pop
xor
mov
inc
rorb
es
push
lret
je
xor
in
aas
leave
jl
xor
push
je
or
jl
cmp
sbb
arpl
xchg
gs
xlat
hlt
lret
jb
or
add
bnd
mov
ror
xlat
stos
mov
inc
ds
pusha
jl
and
lret
int
sti
pop
test
frstor
pop
in
jl
mov
pop
mov
mov
in
adc
shl
aaa
paddusb
mov
or
fistl
push
aas
scas
jl
xor
repnz
sub
push
das
cltd
dec
add
push
sub
jns
popf
call
jl
lahf
test
mov
mov
lea
popf
add
fs
xchg
fwait
mov
xchg
or
xchg
mov
jecxz
in
outsb
test
pop
gs
and
fsub
adc
adc
pushf
andb
icebp
data16
xchg
and
xchg
movsw
mov
mov
fistl
jae
xor
insl
lcall
jns
xchg
rorb
mov
fs
nop
movsl
je
pop
cmpsb
icebp
pop
push
jns
inc
scas
cld
jmp
test
mov
xchg
inc
and
stc
jl
out
inc
dec
dec
pop
lahf
nop
fildl
insb
cmp
jnp
sbb
adc
les
push
mov
in
cmp
test
push
inc
and
outsb
cmpsb
dec
mov
mov
add
in
sbb
movsl
cmp
jle
lds
sahf
lahf
mov
sub
lahf
xchg
jbe
mov
and
insb
cmp
scas
mov
mov
es
inc
enter
mov
test
push
mov
aaa
addr16
push
icebp
call
ret
test
push
mov
xlat
mov
and
mov
enter
mov
pop
int3
lcall
daa
fwait
pop
jae
lcall
cmp
cmp
adc
pop
pop
subb
outsl
subb
out
push
stos
icebp
push
push
out
push
pop
loop
ret
mov
jo
pop
mov
cmp
scas
cmp
xor
cmp
mov
aas
mov
rclb
jo
inc
jb
sbb
addl
sbb
mov
ret
mov
jp
push
and
mov
add
shll
ret
adc
in
mov
shl
jmp
testl
cmpsl
out
orb
insl
jge
ljmp
je
subb
ret
ljmp
xlat
arpl
arpl
stos
pop
insl
pop
scas
sbb
dec
dec
push
lds
inc
call
test
mov
sbb
psubusb
push
add
jecxz
int
mov
sbb
mov
test
lahf
inc
cmp
hlt
ds
div
xchg
popa
push
psubsw
jmp
stos
xchg
popl
das
xor
xchg
mov
pop
ror
jg
pop
scas
fildl
mov
lahf
repnz
xor
fimuls
push
push
jne
mul
push
mov
pop
jns
sar
in
mov
mov
cmp
loop
inc
sti
push
ret
arpl
int3
out
test
pop
mov
pop
and
ljmp
into
add
aam
adc
jno
loope
movsb
ds
xorb
into
les
jnp
fs
jl
mov
fnstcw
cmc
popf
call
rcll
pusha
idiv
int3
out
pop
std
push
loope
or
jl
frstor
or
aad
jl
inc
jbe
xor
mov
cmpsl
and
not
int3
sbb
sbb
in
cmp
mov
adc
xchg
repz
pop
mov
jnp
xor
sub
pop
adc
cmp
sub
pushf
aad
sub
jecxz
mov
cmc
movsl
into
pop
mov
pop
mov
pop
xchg
int3
jp
jl
jb
mov
dec
sub
mov
je
cmp
out
mov
loopne
mov
mov
ret
cmc
in
sub
aas
dec
inc
fistps
and
cld
arpl
subb
js
sarl
xchg
add
fstpl
jo
fwait
cmc
sbb
pop
nop
aaa
fsts
daa
test
jl
adc
iret
das
cmp
inc
enter
jp
xor
je
outsl
mov
xor
xchg
mov
stos
mov
or
cmp
leave
call
pop
jl
in
icebp
mov
shl
jecxz
nop
insl
jne
cmp
cmp
cltd
cld
andb
xchg
jl
or
adc
jl
scas
ss
and
sbb
xor
adc
mov
mov
aaa
or
repz
xor
cwtl
jl
add
sarb
push
xor
push
imul
test
mov
fs
notb
fistl
inc
xchg
jl
cmp
lret
ljmp
xchg
sbb
jnp
repnz
push
ss
sub
es
or
mov
jns
sub
leave
dec
cmp
daa
push
add
sub
jl
sbb
inc
mov
pop
imul
xchg
lret
idivl
out
jmp
inc
or
inc
jl
adc
mov
and
xor
lahf
mov
add
inc
jb
xor
lock
fldt
cmp
xchg
aas
les
sahf
stc
dec
jmp
inc
mov
push
dec
xor
stos
jnp
lds
imul
mov
adc
sbb
mov
push
hlt
xchg
jl
inc
mov
jl
out
cmp
rorb
mov
mov
push
xlat
fs
inc
xchg
push
rorb
jl
push
inc
scas
jp
ss
jl
mov
sbb
sarb
jns
arpl
jl
xor
sub
leave
cmpl
mov
jl
dec
outsl
outsb
mov
push
dec
inc
call
jge
mov
mov
out
lret
repz
and
or
repnz
idivl
ss
hlt
mov
jne
es
xor
orb
insb
inc
repz
pop
push
sub
jl
idivl
mov
arpl
xchg
fdivrs
rorb
jl
dec
leave
sbb
jg
sub
into
je
fnstsw
icebp
push
cwtl
jne
mov
mov
mov
repz
mov
outsl
jl
xor
ja
aam
push
test
cmp
jl
mov
or
xor
mov
lods
fcomps
push
jl
inc
add
add
movsl
jl
or
jl
mov
cmp
mov
mov
xor
les
in
cmp
jl
jo
hlt
pop
cmp
sbb
xor
leave
cltd
push
outsb
test
pop
push
jl
mov
pop
mov
add
int3
jg
push
daa
scas
jmp
jl
and
sub
sbb
push
mov
repnz
mov
in
jp
cmp
jge
and
sbb
out
mov
jl
orb
pop
loope
fisubs
imul
scas
jl
pop
fstps
push
sarl
sti
adc
ficompl
movsl
mov
mov
jns
adc
lret
in
ja
mov
int3
xchg
push
jb
out
xchg
jge
ljmp
imul
adc
stos
jns
mov
lret
jnp
ljmp
ss
call
push
loop
pop
mov
ljmp
int3
popa
lret
inc
lcall
sub
fdivrs
xchg
cld
jl
jns
xor
pop
mov
mov
adc
jl
insl
add
test
in
insb
lods
js
movsb
adc
jp
mov
aas
or
imul
mov
mov
pop
fistps
pop
sar
lock
lret
mov
aas
enter
jl
and
adcb
mov
jmp
and
aas
push
cmp
dec
xchg
inc
sbbb
or
jp
stos
jl
and
ret
jl
adc
fnstsw
lret
mov
xor
in
cmpsb
push
jl
rolb
lock
das
push
inc
lds
pop
ja
inc
test
imul
mov
mov
adc
xchg
pop
add
stc
push
fisubs
sbb
jae
xlat
dec
aaa
jl
incl
ficomps
jmp
sbb
jl
xchg
push
adc
jmp
into
xor
pop
cwtl
xlat
add
lret
mov
pop
mov
inc
sub
ljmp
sbb
lods
pop
jle
lret
js
add
pushf
mov
call
jb
test
push
movsl
sbb
xlat
add
xor
adc
and
inc
mov
cmp
pop
push
mov
pop
or
xchg
popa
add
mov
fistpll
push
call
jno
rcll
and
adc
cmp
mov
mov
xchg
inc
sub
in
test
push
pop
mov
mov
xor
ss
inc
xchg
jle
mov
int3
imul
icebp
and
imul
sti
sub
cld
rol
clc
in
andl
repz
jno
cmp
jnp
out
xchg
jp
push
call
mov
dec
popw
dec
insl
fwait
mov
and
pop
ja
jmp
pop
sub
je
jb
dec
mov
sub
jge
or
xor
arpl
pop
jmp
hlt
lcall
jne
pop
sti
repz
mov
pop
fldl
xchg
jae
data16
in
and
xor
push
xor
add
mov
inc
push
jg
insl
imul
push
mov
xchg
movl
imul
psrlw
xchg
push
mov
test
push
mov
xchg
mov
and
test
andb
inc
push
push
fisubs
out
je
aam
xchg
repz
adc
inc
mov
inc
xchg
mov
fildl
jno
aam
cmpl
push
or
and
arpl
shr
xor
pop
test
inc
xchg
ret
daa
int3
orl
test
lea
cmc
test
ret
inc
add
fwait
nop
popa
into
inc
popa
cmpsb
in
test
adc
popa
mov
cmc
push
lahf
repz
or
sub
sbb
lea
mov
jo
hlt
inc
imul
ds
test
mov
xor
pushf
dec
cmc
aam
mov
add
xor
add
inc
jae
mov
enter
cmp
mov
xor
lods
jbe
mov
mov
adc
cmp
xor
jno
xlat
repz
or
cmpsb
add
mov
cs
xchg
movsl
push
dec
clc
dec
fwait
push
inc
je
lahf
jnp
sbb
pop
out
xchg
mov
xor
adc
fwait
push
dec
mov
pop
mov
xor
lcall
mov
lret
cmpsl
xchg
scas
mov
loope
push
cmp
adc
add
mov
gs
push
add
mov
stc
inc
es
int
mov
push
cld
and
xchg
pop
ds
aad
es
inc
rclb
lds
cmp
adc
jbe
mov
addr16
in
lock
mov
push
mov
xlat
dec
jle
dec
dec
movsl
adc
imul
in
add
stc
lock
dec
mov
jmp
pusha
mov
pop
xchg
test
mov
push
pop
xor
inc
and
ss
cmp
mov
movb
xchg
aam
mov
or
aam
mov
hlt
andb
faddl
fistps
out
add
cltd
sbb
imul
lods
ja
xchg
adc
sbb
pop
dec
call
js
xchg
pusha
mov
aaa
imul
sbb
mov
or
cmpsl
out
push
outsl
sub
mov
mov
enter
decl
jmp
fwait
mov
mov
jae
cmp
cmpsl
cmc
cmp
jmp
or
dec
insb
pop
cmp
add
in
adc
scas
repnz
push
pop
out
jecxz
insl
mov
loopne
ljmp
out
pop
jp
je
mov
pop
jns
xchg
imul
frndint
xchg
mov
lea
xchg
divl
pop
aas
out
pop
add
movsl
mov
jge
out
xchg
icebp
jae
xchg
test
mov
out
imul
sarb
and
je
mov
mov
stc
push
popa
fs
and
pop
mov
repz
pop
flds
mov
xchg
pop
fildl
jae
inc
sbb
fnstsw
out
xchg
nop
sbb
es
nop
sti
rcll
popf
mov
dec
out
and
in
push
cmp
mov
leave
orl
test
es
jle
addl
hlt
fstpl
hlt
mov
mov
inc
sub
inc
mov
pop
outsl
cmp
push
mov
jo
movsb
adc
into
mov
stos
bound
fisttpl
cmp
stc
ljmp
mov
jnp
cmpsl
mov
fistpll
lock
fisttpl
shll
fidivs
jo
sub
notb
les
dec
push
sbb
jbe
fidivs
push
jg
inc
cmp
pop
pop
out
add
pushf
xor
pop
sti
stos
nop
xor
fsubr
xchg
out
mov
rcl
fcmovne
add
test
cld
daa
push
mov
in
ret
cmp
out
fwait
xor
sbb
and
call
mov
out
test
cmp
and
push
cmp
push
jl
mov
outsl
mov
out
in
cmpsl
rolb
jnp
push
fcmovnb
mov
aam
hlt
and
bound
dec
dec
fwait
nop
andl
sub
mulb
dec
dec
movsw
in
lea
cld
mov
xor
rclb
xchg
cmpsl
inc
inc
lods
mov
popa
and
sub
inc
add
or
or
dec
loopne
pop
xchg
push
mov
xchg
lods
mov
push
ret
push
addb
mov
mov
mov
andl
sub
push
push
jg
jae
mov
mov
cmp
mov
inc
or
pop
jne
cmove
jge
cld
xchg
out
or
jae
mov
cmpsb
sub
mov
jo
jae
int
mov
into
fcmovbe
lods
cmp
jmp
pop
inc
xor
in
cmpsb
int3
push
mov
dec
insl
sub
ss
mov
and
lea
nop
xchg
push
test
inc
lahf
pop
pop
xor
and
ja
and
push
dec
repz
sub
cld
and
stc
shrl
outsb
jbe
pop
fldpi
xchg
out
ss
and
xor
mov
enter
pop
sbb
mov
repnz
push
lock
sub
inc
fisubs
aas
cmpsb
mov
nop
sub
xchg
bnd
out
add
add
push
dec
inc
sarl
ret
xchg
or
in
jp
je
mov
ret
mov
sbb
or
cld
mov
pop
das
cmp
subb
fcoml
add
popa
int
pop
mov
shll
jb
pop
push
mov
std
pop
pop
jbe
adc
adcb
cmc
roll
mov
lret
fistl
stos
je
xor
fildl
dec
data16
cli
sti
push
mov
adc
jecxz
out
cld
mov
mov
and
in
nop
mov
inc
jecxz
xchg
sbb
das
dec
enterw
jmp
ret
call
pop
sub
out
imul
push
in
daa
mov
scas
nop
out
jmp
xchg
mov
pop
mov
nop
jecxz
movsb
xchg
fcmovnb
out
jo
xchg
xchg
mov
nop
push
es
cmpsl
scas
std
mov
and
cmpsl
mov
iret
dec
imul
mov
cmpsl
adc
dec
insl
out
jg
jmp
std
push
jbe
mov
mov
mov
xchg
nop
in
sbb
mov
mov
cld
pop
push
push
and
pop
jge
ds
xor
mov
push
inc
mov
pmulhw
aaa
in
js
jp
and
push
mov
mov
push
jg
jbe
in
movsl
mov
fisttpl
mov
and
xor
daa
cmp
enter
xchg
loop
adc
out
repnz
adc
leave
outsb
pop
movl
xchg
jl
sbb
or
into
pop
or
cmp
fcoml
sub
mov
cmpsb
dec
jle
popa
add
sahf
mov
mov
dec
nop
push
pusha
adc
xchg
cmpsl
fisubs
insl
imul
cmp
cld
jp
mov
test
imul
hlt
scas
cld
mov
dec
cmp
nop
addr16
test
scas
in
adc
pop
hlt
pop
inc
sbb
add
mov
inc
dec
jge
rolb
cmc
inc
sub
sbb
gs
lods
push
mov
mov
xor
out
pop
pop
push
push
insl
arpl
ss
mov
push
sbb
daa
cltd
dec
daa
faddp
test
inc
pusha
adc
js
jmp
mov
gs
pop
pop
enter
pop
push
sti
out
inc
or
ja
repnz
mov
push
outsl
add
bound
cmp
mov
test
imulb
xor
mov
mov
xor
ds
je
push
fsubrl
jmp
stc
lods
mov
and
outsl
and
repnz
ret
ja
mov
ret
fsub
dec
hlt
out
xchg
pop
jbe
mov
cmp
mov
popa
repz
out
inc
popa
inc
dec
into
nop
mulb
insl
mov
sub
pop
or
push
insl
push
jmp
or
ss
sahf
loope
add
inc
in
adc
mov
fucomi
jecxz
rcll
subl
inc
arpl
test
fwait
movsl
jno
repz
mov
mov
jp
sbb
sbb
xchg
enter
fnstsw
fwait
in
out
push
shr
dec
xchg
outsl
popf
mov
cltd
push
pop
imul
add
jmp
fwait
adc
imul
cmpsl
push
or
xor
pop
and
sarl
fiadds
jae
or
data16
test
arpl
jl
sub
dec
and
mov
popa
daa
insb
es
negl
int3
xchg
iret
jle
mov
xchg
ss
mov
and
xchg
jecxz
stos
sub
gs
jne
pop
sbb
insl
add
ss
adcl
mov
lods
test
lods
lea
in
push
add
inc
dec
lods
mov
in
test
lea
lds
gs
test
sub
and
mov
or
or
mov
xchg
and
mov
lds
data16
loop
imull
dec
xor
dec
and
call
test
mov
jno
mov
loop
cmpsl
sub
fs
xchg
adcb
xor
xchg
xor
aad
int
cmp
push
adcb
or
sbb
mov
in
insl
repnz
sub
or
loop
dec
mov
push
dec
jmp
cmp
sbb
push
jp
mov
in
pop
enter
add
sub
mov
fsubr
fs
shl
mov
nop
sti
mov
test
shl
cmp
jo
push
cmpsb
add
sbb
cld
xor
cmpsb
or
mov
and
inc
orl
sub
or
shll
int3
rolb
test
and
xchg
mov
sbb
mov
adc
pop
mov
imul
sti
mov
mov
push
in
ror
mov
addl
mov
cmpb
shll
roll
add
adc
pop
fs
enter
mov
int
ret
cmpsb
pop
mov
jecxz
ljmp
insb
push
je
mov
push
cmp
pop
pop
push
out
mov
jmp
cmpsb
dec
xor
andl
pop
pop
loope
inc
xchg
sub
movsb
out
addl
dec
in
xchg
mov
inc
das
ret
xchg
repz
add
in
out
sub
push
imul
ljmp
test
cmp
scas
jnp
ret
sbb
xchg
pop
adc
out
dec
data16
pop
mov
fwait
mov
push
ss
jae
leave
jmp
mov
mov
insl
nop
dec
mov
bound
fwait
fwait
out
cmpsb
ljmp
mov
fs
lds
and
in
push
push
lods
mov
stos
add
pop
sub
jno
in
mov
movsb
push
lret
sbb
mov
std
mov
sub
insb
cwtl
addb
mov
and
sub
sbb
out
rolb
stos
sarl
adc
sub
ficomps
pop
lods
add
mov
sbb
cld
sbb
lea
sti
lock
xor
sti
outsl
in
lcall
loop
fucomip
mov
pushf
icebp
jb
jno
inc
mov
xchg
lods
leave
out
inc
or
std
movsb
ja
imul
popa
and
sbb
ficoms
jecxz
xchg
push
sub
popa
xchg
cmpsb
jae
jecxz
mov
repnz
clc
lret
push
xchg
pop
xor
fstpt
pop
mov
int
sub
ficomps
add
push
inc
add
pop
ljmp
out
jae
add
pop
push
ja
fwait
aam
in
loop
daa
std
into
repz
xor
testl
push
jnp
scas
inc
lea
jns
xor
mov
in
sub
ret
pop
add
test
push
ficompl
fs
push
call
sub
add
jl
or
out
xchg
sub
lea
push
jno
dec
cld
pushf
imul
popa
jo
repz
loop
xchg
xchg
mov
jmp
pop
ret
stc
ljmp
iret
adc
cs
movsb
data16
sbb
mov
arpl
dec
cmp
mov
outsb
lods
sub
in
notl
jae
dec
cmpsl
enter
sub
imul
test
cmpsl
out
lea
btr
mov
and
push
and
xchg
or
xor
out
cs
addr16
out
jl
iret
test
movsb
jno
addr16
jae
dec
sub
sub
stc
jnp
arpl
daa
inc
adc
xchg
sub
add
mov
ret
xor
or
adc
mov
cmpsb
js
push
xor
dec
xchg
loope
jnp
out
sti
addr16
inc
xchg
sarb
jno
mov
movb
push
mov
mov
ss
shrl
or
xchg
in
mov
jl
inc
sbb
faddl
stc
movsb
ret
test
sbb
pop
enter
pusha
loop
fsubs
out
js
fcompp
cmpsb
pop
jl
insl
negl
je
in
into
xor
fimuls
mov
dec
rcr
cltd
inc
jl
pop
mov
push
jl
or
push
jns
add
mov
mov
rorl
ret
sbb
icebp
orb
push
dec
rorb
cltd
cs
imul
repnz
xor
std
mov
or
std
mov
jl
or
jno
stc
mov
stos
and
lret
push
mov
imul
sub
mov
aas
std
hlt
in
cmp
jl
sub
xchg
pop
out
jl
xor
and
jmp
push
pop
js
pop
shll
jl
cmpsl
jp
pop
lahf
push
es
mov
push
adc
mov
mov
scas
or
repnz
loopne
jl
mov
cwtl
fwait
jl
cmp
rcll
jb
mov
fucom
jno
mov
jl
call
jp
jl
or
xor
xchg
dec
mov
iret
sti
mov
and
test
into
push
push
sub
or
mov
imul
pop
mov
inc
mov
cmp
ljmp
jecxz
lock
loop
dec
int3
dec
cwtl
sub
jmp
cmp
mov
repz
insb
or
sub
pop
sbb
pop
insb
lds
enter
or
and
sub
cmp
fs
push
movsl
and
call
and
mov
leave
add
push
into
fdivl
mov
cltd
or
pop
xchg
cmp
das
insb
cmp
adc
test
cmp
bnd
jl
xchg
test
lock
xor
rcr
adc
cmp
insb
xorl
xor
jl
ja
stos
outsl
inc
cmp
jl
ljmp
popf
mov
cmpl
and
jl
ja
mov
movsb
jl
sub
xor
aaa
jns
movsb
xor
xchg
mov
mov
in
or
push
imul
push
sbb
in
cmp
adc
fs
leave
rol
cmp
jns
jp
arpl
push
xor
rcll
or
pop
loopne
or
inc
notl
dec
sbb
mov
jl
xchg
addb
gs
cmp
cli
mov
jnp
dec
mov
push
xor
aaa
test
adc
jmp
sahf
pop
xor
das
dec
jl
aas
imul
xor
rcrl
jb
sub
push
cmp
cld
rcll
fnstcw
inc
adc
inc
ret
stos
roll
pop
or
mov
jne
sub
adc
push
push
jl
mov
xor
out
loope
lea
fs
in
js
fcmovnu
inc
dec
repz
scas
aaa
arpl
mov
test
add
add
xchg
push
pusha
je
cmp
jp
dec
icebp
pusha
push
and
jl
mov
pop
jl
add
movsl
ds
xchg
sarl
imul
sbb
add
jnp
popa
xor
mov
in
mov
lret
mov
rorl
jl
push
fiaddl
jl
adc
push
call
cs
hlt
dec
mov
jae
and
xchg
aam
dec
mulb
cmp
push
inc
int
mov
enter
mov
push
les
sub
xchg
jno
mov
jnp
daa
mov
mov
mov
ss
jnp
das
je
fstps
gs
rcll
in
cmp
jb
push
fidivrs
dec
std
adc
hlt
jp
imul
jl
mov
scas
push
and
js
jmp
daa
stos
xchg
fnsave
jl
dec
and
in
aaa
inc
rclb
test
xchg
int
jp
jmp
cmp
popf
sbb
cmp
lods
cmp
imul
mov
inc
stos
imul
jl
adc
sbb
push
push
cmpl
dec
xor
shll
mov
jl
out
cmp
sub
inc
adc
jno
xchg
stc
xor
and
inc
jl
lret
xor
in
cmp
es
mov
push
es
adc
cmp
lds
insb
xchg
push
and
sbb
in
xor
jl
imul
mov
nop
jl
es
jp
hlt
add
cmp
jne
or
mov
lcall
push
adc
sbb
test
clc
pop
hlt
jb
call
pushf
movsb
movb
lds
dec
cltd
testl
test
and
xor
addr16
lock
adc
dec
push
mov
lods
push
jl
xor
fsubp
jle
cmp
icebp
push
xchg
jl
pop
fwait
xor
xor
jl
pop
push
leave
inc
fstl
dec
inc
sub
mov
sub
aas
push
jl
mov
jg
push
bound
mov
fstps
cmpb
jae
cmp
jp
xor
fstpt
add
inc
lahf
dec
aad
lcall
push
leave
dec
es
mov
ja
jle
sbb
jnp
pop
aas
cs
xor
xor
lods
fidivrs
push
xchg
inc
idivb
fstpt
repz
and
push
mov
push
add
cmp
sbb
or
loop
out
jl
imul
cmp
jae
xchg
sahf
inc
daa
push
std
or
cmp
sbb
je
dec
cld
ret
push
imul
adc
fstl
or
cli
pushf
jl
shlb
xor
in
insb
arpl
ss
add
lret
pop
jmp
and
je
rcrl
test
mov
mov
pusha
cmp
xchg
dec
jae
leave
fs
movsb
addr16
fwait
cmc
push
sub
lret
xchg
orl
pop
cmp
push
repz
movsl
xor
fistpl
mov
mov
jno
or
sti
add
mov
fwait
iret
movsb
rcrb
and
xchg
fsubrl
xchg
lods
enter
inc
or
shl
stos
bound
andb
cltd
mov
xchg
in
das
jmp
movsl
sub
xor
dec
stos
inc
sub
loope
xchg
sub
and
lahf
in
int3
jne
add
jnp
outsb
push
leave
lret
lods
insl
ss
mov
dec
loopne
jecxz
sub
mov
mov
sub
and
push
mov
cld
daa
mov
or
mov
loope
dec
movsl
shrb
hlt
push
xor
or
insb
insb
es
rolb
mov
test
mov
mov
or
pushf
cmpsl
clc
cmp
mov
outsb
push
push
fs
lahf
ret
sbb
mov
jae
pushaw
push
lock
pop
jl
stc
pop
pusha
push
in
leave
in
push
mov
fnstsw
fists
mov
jnp
push
mov
js
mov
and
adc
mov
mov
in
call
filds
fisubrl
test
sub
mov
dec
movsl
test
data16
fisttpl
movsl
and
cmp
pop
loopne
dec
insb
jbe
fisubs
jg
sti
sub
cs
lds
sbb
pop
fidivrs
push
cmp
cmp
jl
sbb
in
pop
push
cltd
fstpt
shlb
dec
xchg
mov
decb
shl
stos
into
loop
mov
adc
fs
enter
jecxz
sahf
pop
jbe
arpl
ljmp
dec
fistpll
xlat
or
pop
addb
cmp
adc
and
cmp
or
lcall
in
mov
inc
into
gs
jne
and
lahf
jl
and
inc
test
mov
popf
test
sbb
imul
or
mov
xor
jl
dec
inc
aam
xchg
push
mov
jg
xor
jl
add
xchg
loope
cmp
adc
push
lahf
testl
mov
pusha
jp
dec
mov
insb
call
sbb
jl
inc
rclb
cld
push
int3
xor
xlat
dec
pop
inc
popa
pushf
cli
mov
jg
cmpb
dec
sbb
push
push
inc
sub
dec
jl
adc
cmp
lea
scas
lds
rep
nop
cmp
xchg
and
jb
and
jmp
jno
addr16
cltd
sbb
es
cmp
out
xor
sahf
lahf
fisubrl
push
test
jno
mov
mov
repnz
int
ds
in
loop
mov
and
inc
les
mov
jge
cmp
add
push
cs
cltd
jl
sub
lea
sub
and
mov
test
xor
inc
addr16
arpl
sbbb
loopne
or
xchg
adc
ds
xor
ss
add
mov
outsl
jecxz
stos
out
movsb
xor
subb
cmpl
mov
cmp
jns,pn
cltd
or
jp
dec
mov
pusha
mov
idivb
and
jl
jae
jne
xor
xchg
dec
xchg
sub
gs
test
loop
push
xorb
cld
fs
xchg
jl
mov
jmp
sbb
cld
xchg
and
push
cmp
push
ret
mov
movsb
adc
aad
je
xchg
mov
jl
jne
pop
xchg
inc
push
scas
jl
cmp
mov
inc
pop
jnp
or
jecxz
fsubl
adc
and
rep
dec
leave
jl
jge
and
incl
jl
and
pop
jl
add
les
mov
xchg
add
pop
fs
lret
and
sub
das
notb
scas
stos
imul
jl
push
loope
adc
dec
pop
les
es
mov
jl
push
push
or
jl
or
inc
push
inc
imul
pusha
repz
xor
xchg
push
xor
test
adc
inc
in
mov
mov
nop
out
sub
sub
and
jns
jp
and
rcr
dec
in
cmp
imul
push
setb
fs
loop
mov
test
in
mov
mov
cmp
mov
jle
lcall
inc
push
je
sarb
jl
cltd
cmp
pop
mov
sbb
or
jns
and
inc
cmp
insb
dec
dec
icebp
and
jl
arpl
and
rcll
ljmp
jp
imulb
in
sti
jl
push
and
jns
mov
ret
mov
pop
js
sub
mov
fadd
mov
and
repz
lret
jmp
sub
inc
sub
push
cmp
inc
out
xchg
jp
dec
xchg
dec
cmpb
into
sbb
shlb
mov
mov
jl
cmp
jb
jl
fbstp
dec
je
add
push
lret
loope
jnp
lret
in
test
mov
pop
stc
push
jl
add
jo
ss
gs
push
int3
ljmp
mov
test
jo
mov
jl
inc
add
pop
jmp
std
ficoms
or
sarb
repz
std
das
jl
and
icebp
pop
inc
push
stos
jl
out
call
jl
mov
mov
nop
push
mov
xchg
iret
lahf
jl
xor
jl
dec
sbb
jns
jae
xchg
in
mov
push
std
jl
mov
mov
jl
and
xor
cmp
lret
cmpb
push
popa
lahf
push
insb
adc
lock
mov
repz
mov
fwait
inc
lret
in
daa
mov
jge
sarb
scas
jb
cmp
jbe
jl
sbb
sbb
inc
in
jns
or
dec
cld
daa
pop
jl
cmp
mov
sbb
push
ficomps
scas
jl
mov
arpl
jl
daa
and
jl
jne
mov
push
mov
jl
cmp
sub
int
repnz
cmpsb
addr16
insb
fstpt
adc
or
or
idivb
enter
pop
jns
pop
mov
cmpsl
data16
mov
jmp
xchg
xlat
push
ja
or
fnstsw
sub
popf
jae
dec
data16
sbb
aaa
test
inc
es
and
mov
das
xor
or
jmp
sbb
in
jmpw
pop
xorb
cmp
mov
clc
pushl
in
in
repz
jmp
mov
mov
sub
repz
cltd
sub
mov
mov
loop
cmp
sarb
movsl
addr16
fldl
popa
loop
out
data16
sub
std
pop
mov
loope
inc
inc
sub
push
inc
xlat
outsl
lods
jl
push
sahf
mov
in
scas
mov
mov
xor
fs
xchg
and
mov
jl,pn
and
jge
xchg
jp
lahf
jle
ja
jae
xchg
fdiv
mov
fimuls
xlat
jo
pushf
xchg
jp
push
test
mov
cmp
sti
loop
jg
mov
mov
je
jno
xlat
xchg
cli
pop
adc
ljmp
in
or
pop
out
add
mov
out
inc
and
test
push
xchg
jecxz
inc
call
dec
pop
lods
movsl
jnp
mov
out
dec
dec
shlb
lret
orl
fs
dec
jb
inc
loope
fwait
shr
shll
in
push
sub
nop
mov
xchg
out
adc
pop
test
test
addr16
mov
lds
mov
sbb
lret
lds
inc
in
cmp
rol
dec
mov
dec
sbb
mov
outsl
insl
cmpsb
sbbb
shl
xor
imul
push
push
int
jmp
loop
mov
movb
mov
movsl
mov
sbb
add
push
out
push
dec
sbb
mov
jp
stos
or
stos
jl
aas
mov
into
inc
and
jnp
ja
fadds
dec
addl
sbb
sahf
je
dec
jl
arpl
sbb
push
in
orb
lahf
jl
in
jnp
ja
enter
jne
insb
lret
push
xchg
sahf
outsl
cmpsl
jbe
xor
int3
mov
insl
jmp
xor
or
ss
dec
mov
push
lret
and
fnstsw
or
inc
inc
lock
jl
leave
mov
in
dec
cmp
xchg
out
xchg
jo
xor
inc
cli
sub
fisubl
orb
jl
test
dec
jb
iret
movsb
jl
xlat
pop
jns
shlb
in
jnp
aad
sbb
adc
loopne
fdivl
jecxz
je
int
int3
jl
les
imul
dec
test
lahf
or
xchg
sub
icebp
jl
push
jmp
pop
jl
aaa
lret
repz
jne
jl
cmp
cli
fbld
outsl
popf
push
xchg
inc
xor
in
jl
filds
stos
mov
add
inc
dec
out
sub
jl
leave
iret
repnz
loop
pushl
xchg
mov
pop
out
lock
cmp
mov
add
fistpll
cmp
adc
pusha
mov
add
movsb
xorl
adc
ficoms
test
push
hlt
aad
sub
repnz
test
jl
shr
inc
or
adc
and
cmp
gs
out
mov
loopne
adc
inc
cmpb
and
pop
add
and
out
test
fwait
pop
inc
addb
dec
jmp
dec
cmpsl
loop
loopne
aam
lret
pop
ret
movsl
adc
fists
add
pusha
jl
call
xchg
lods
imul
fildll
dec
xchg
sub
pop
popa
lcall
inc
loopne
mov
filds
pop
cli
movsl
int
mov
mov
lret
or
push
out
out
and
data16
mov
lds
hlt
dec
pop
mov
pushf
sbb
jecxz
and
xor
arpl
mov
outsb
lahf
les
sbb
mov
sbb
movb
mov
jp
jns
and
pop
test
test
jp
jle
jae
test
xchg
daa
and
mov
jns
cmp
stos
push
es
mov
jle
xor
jl
push
orl
jl
sbbb
movsl
call
jl
imul
mov
jb
and
stc
push
jl
iret
imul
cmp
pusha
in
add
and
cmc
movsb
push
aaa
jne
push
dec
inc
in
xor
jl
xchg
mov
fdivrl
repnz
loop
jg
mov
dec
mov
scas
jp
cmp
fisttps
nop
jle
cmpsl
insl
jnp
std
test
pop
mov
jge
xor
scas
mov
cmp
jl
add
shrb
add
push
xchg
pop
mov
cmpsl
aad
or
cmp
insb
scas
mov
inc
dec
jnp
cld
pop
xchg
or
jg
pop
jnp
mov
jno
jl
icebp
and
xor
mov
mov
cmp
clc
fwait
out
jno
sub
push
and
and
xor
pop
dec
cmp
in
cmp
jl
or
das
repz
rcl
jno
lock
xchg
push
ja
adc
or
loopne
sbb
jl
xchg
test
xchg
sbb
or
stos
jl
clc
int3
dec
je
imul
cld
inc
jp
pop
scas
pop
mov
cmc
jmp
mov
mov
xchg
loope
bound
adc
pop
dec
aad
test
data16
es
cli
lret
stos
test
xchg
jl
imul
jl
cltd
push
sbb
sbb
ss
insb
shlb
xor
mov
inc
cmpl
test
into
pop
inc
pop
cmp
push
dec
fwait
pop
jns
js
or
dec
dec
repz
out
popa
imul
addr16
xchg
pop
lea
sahf
cmpsl
ret
mov
enter
flds
cmp
mov
sbb
mov
fwait
push
ret
rol
mov
pop
jns
ja
mov
pop
mov
inc
fs
loopne
fistl
xor
popa
push
cwtl
out
and
jmp
repnz
fisttpl
repnz
cmc
shl
adc
jmp
adc
test
pop
mov
mov
fwait
mov
je
rorb
cmp
and
out
ja
imul
ret
inc
xchg
test
pop
scas
je
sti
jge
jmp
adc
cmc
and
mov
in
mov
or
xor
jbe
push
cmp
lds
enter
xchg
fildl
inc
mov
or
sbb
push
and
addb
clc
sub
push
int
into
mov
ds
addr16
push
mov
mov
add
inc
adcb
adcl
jecxz
jecxz
repz
mov
out
into
fwait
sti
gs
pusha
mov
dec
mov
push
sub
cli
fldcw
repz
lcallw
xor
rcll
je
jnp
cmpsb
pop
je
mov
std
mov
data16
clc
adcl
jb
jbe
xor
mov
addr16
xor
add
cmpsl
inc
inc
test
shll
dec
cmpsb
mov
call
movsl
loope
in
pop
mov
in
ja
fidivrs
cmp
fs
jnp
add
jp
arpl
fs
jg
enter
stos
icebp
push
out
fldcw
mov
dec
addr16
and
xchg
jg
movsl
addr16
mov
add
xchg
jle
mov
test
test
stc
test
ret
xchg
notb
dec
or
mov
cmp
push
xchg
loop
push
dec
xchg
push
jle
push
lcall
mov
out
lock
setns
enter
jne
jecxz
lcall
inc
sahf
mov
pop
cmpb
sbb
adc
jae
jecxz
in
jge
xchg
sbb
in
fmulp
dec
mov
jne
xchg
push
fwait
xchg
ja
push
fistl
cld
mov
xchg
pop
cmp
jae
adcl
push
aam
cli
js
movsl
add
pop
jp
filds
lret
fistl
sub
pop
js
scas
dec
jle
scas
out
adc
inc
mov
jnp
ss
pop
cmp
dec
mov
fisttpl
inc
aaa
mov
pop
aaa
stos
dec
cmp
movsl
aad
xchg
and
fcmovnu
mov
cmp
insl
arpl
cmpsl
and
daa
test
dec
mov
or
push
in
into
fdivr
push
pop
push
cmp
and
mov
loop
sub
jne
out
fwait
xchg
push
movsl
clc
popa
inc
into
aad
dec
cmp
xchg
jno
mov
mov
dec
stos
dec
sub
jecxz
inc
js
aam
test
push
int
fstpt
cs
loop
in
push
outsb
pop
in
cltd
out
push
jnp
add
cmpsb
sub
xchg
pop
xchg
sbb
fs
or
and
add
mov
jle
pop
cmp
cmp
mov
fcomi
mov
xor
aaa
sarb
or
mov
stc
jg
dec
mov
fld
test
mov
jbe
ds
xchg
fsubr
stc
sbb
fistl
cmp
dec
dec
bound
jae
iret
daa
stos
lea
scas
jae
mov
fcmovnb
testl
pop
repz
sti
sahf
in
sub
mov
sub
adc
lahf
mov
lods
pop
sub
mov
pop
push
into
inc
lahf
pop
movsl
sbb
inc
push
sbb
push
push
sub
fstpt
aas
movsw
dec
jge
popf
hlt
sbb
adc
push
pop
ds
xchg
mov
popf
push
sbb
push
mov
mov
mov
lret
pop
xor
mov
or
sahf
jb
push
aaa
cmp
insb
pop
sbb
pop
pop
pop
push
adc
xchg
pop
cmp
add
or
mov
addl
jle
xor
push
gs
dec
push
out
mov
in
aam
xchg
lcall
imul
mov
pop
mov
ret
jnp
adcw
repz
cli
pop
out
pop
out
pop
push
or
sahf
movsb
pop
enter
out
pop
mov
sbb
iret
sbb
bound
arpl
loopne
xchg
mov
enter
jo
mov
dec
test
jle
jle
jbe
out
mov
sub
bound
jbe
dec
gs
std
bound
jbe
cmpsb
mov
insl
push
fidivrl
insl
adc
add
mov
mov
stc
inc
idivl
cmp
mov
movsl
pop
sahf
jg
pop
push
mov
mov
jge
dec
shlb
sub
push
mov
stos
subb
jbe
negb
int
jmp
sbb
jecxz
inc
jmp
xchg
mov
xchg
mov
xchg
out
in
or
mov
mov
mov
addr16
cmpsb
xchg
mov
xchg
sub
cmc
ljmp
push
stc
dec
test
mov
daa
jns
mov
popf
xor
lods
and
pop
lcall
cmp
ja
jmp
cmp
in
mov
test
push
jg
out
xchg
and
jp
insb
in
xchg
pop
xchg
lret
mov
stc
xchg
pop
push
pop
jnp
cld
push
icebp
andb
ljmp
int
pusha
xchg
inc
xchg
xor
push
push
push
mov
xchg
add
gs
sti
cmpsb
xchg
shll
xorb
jl
sti
push
fsubl
sub
sub
pop
cmp
dec
push
mov
inc
ret
push
jg
ret
subb
pushf
imul
out
or
ja
scas
pop
xor
adc
cmp
and
mov
push
aam
inc
jecxz
adc
cmp
cmpl
xchg
insb
or
test
jnp
lods
test
pop
rcll
mov
xchg
cld
cmc
sub
out
roll
push
imul
jnp
adc
jecxz
fiaddl
popf
es
jmp
fidivrl
les
sub
push
idivl
pop
into
das
mov
mov
mov
sbb
lock
sbb
cs
pop
add
adc
cltd
sub
fdivs
xchg
fcmovnb
pop
xbegin
jnp
xchg
hlt
incl
cmp
inc
mov
pop
dec
and
sahf
imul
imul
xor
fsubrs
mov
ds
call
and
in
pop
das
jae
jbe
pop
or
pop
jb
jno
push
data16
in
pop
psubsw
cmpsl
xchg
mov
js
pop
in
mov
xor
push
out
xchg
clc
out
jno
mov
test
popa
pop
mov
ficoms
cld
mov
mov
ds
out
xchg
data16
aaa
fsubrs
aad
xchg
mov
push
stos
pop
imul
jle
je
jae
mov
daa
cmp
repz
push
xor
nop
add
not
xchg
push
iret
cs
stos
test
data16
loopne
mov
sbb
jnp
xchg
lds
es
mov
ror
push
xchg
movsl
out
sub
push
mov
pop
sub
cmpsl
inc
nop
jecxz
push
mov
xor
xchg
ds
stos
xor
mov
ret
mov
xlat
xchg
stc
fwait
insb
data16
mov
xchg
adc
and
adc
push
xor
lock
insl
scas
mov
rcr
sub
xor
loop
xor
int3
ret
mov
andb
es
lea
es
push
jg
inc
cld
xor
iret
pop
jp
popa
dec
mov
xor
or
fidivrl
test
pop
movsb
movsb
js
in
int3
sub
test
int
dec
jle
ja
movsl
push
ret
xchg
test
jns
aaa
clc
push
and
repz
test
xchg
mov
add
in
mov
stc
or
loope
add
pusha
js
std
imul
dec
aad
mov
lahf
test
orb
repz
repnz
and
pusha
xchg
pop
in
out
mov
rclb
je
cmp
sbb
adcb
adc
js
int
addr16
jl
stos
xor
mov
addr16
inc
sbb
fs
fidivrl
cmpsb
movsl
lcall
cmp
jnp
repnz
jle
sub
lcall
dec
bound
test
andl
test
cwtl
dec
mov
xchg
inc
jbe
imul
dec
je
mov
int
jnp
push
cltd
loop
daa
and
xor
sub
pop
mov
mov
test
popf
inc
dec
add
outsb
push
push
orl
jbe
mov
mov
and
xchg
test
es
inc
mov
lea
mov
xor
cli
and
or
or
mov
xchg
add
xchg
cli
imul
and
mov
cvtps2pi
inc
fiaddl
test
adc
pop
stos
mov
inc
inc
les
testl
mov
pushaw
adc
addb
dec
mov
test
jg
jp
je
inc
out
mov
jae
loopne
fildl
je
mov
or
dec
insb
jo
daa
arpl
imul
xchg
or
inc
in
sbb
mov
jnp
das
movsl
lcall
lret
enter
lods
leave
fildll
cmp
in
jg
push
ror
jmp
scas
and
jge
mov
scas
subb
pop
cmp
cmpsb
inc
mov
cmp
add
imul
clc
call
jnp
push
popa
out
outsb
bound
enter
test
xchg
orb
cli
adc
lea
shl
jmp
add
je
lcall
pop
in
dec
pop
add
sub
fwait
mov
loopw
mov
repnz
xlat
mov
dec
mov
aam
cmp
fcoml
cmpb
pop
repnz
scas
cmp
xchg
dec
shrb
mov
mov
xchg
dec
mov
jmp
sub
and
pusha
xchg
mov
dec
mov
in
popf
mov
and
jns
jno
movb
stos
pop
outsb
cmpsb
mov
scas
mov
in
imul
lahf
mov
outsb
inc
dec
add
mov
ss
adc
into
pop
cs
and
pop
dec
mov
outsl
pop
mov
out
mov
add
sub
push
sbb
mov
hlt
cmp
xor
std
jmp
cmp
mov
pop
sti
lret
mov
repz
or
cmp
pop
sti
mov
test
cmp
or
bsf
xchg
hlt
sbbl
sub
pusha
mov
jae
cltd
cmp
sub
packsswb
inc
inc
jae
adc
mov
xchg
xchg
test
icebp
lret
arpl
jecxz
xchg
out
or
mov
jae
stos
jmp
and
and
xor
inc
outsl
mov
insl
xor
jecxz
and
stos
sub
repz
or
test
or
lea
bound
dec
es
daa
lock
or
insb
fwait
cs
int
decl
dec
cs
mov
into
mov
pop
xchg
cmpsl
outsl
in
sbb
pop
stos
sub
scas
dec
addr16
push
xchg
subl
pushf
test
or
dec
xor
dec
prefetch
or
and
pop
arpl
pop
jns
jnp
call
pop
inc
popa
inc
add
push
inc
jbe
jle
jae
pushf
pop
xchg
pop
aas
sub
mov
stc
xchg
out
push
pop
mov
inc
out
wrmsr
scas
pop
out
lods
out
pop
and
mov
add
push
lds
arpl
jl
cmpb
popf
xchg
sub
fiadds
pushf
pop
sub
pop
cmp
inc
adc
sub
in
adc
ds
repz
hlt
fs
insb
pop
cmp
in
popf
jnp
or
ljmp
data16
mov
in
jp
jmp
imul
loop
mov
inc
mov
lret
mov
test
xchg
push
cmpsb
sarl
or
xchg
pop
xor
sub
dec
test
repz
outsb
out
mov
addr16
push
aad
mulb
sub
xor
addr16
sub
in
xor
xchg
lcall
lock
sub
pop
mov
sub
add
or
outsb
and
repnz
push
outsb
enter
les
push
call
mov
push
push
aam
mov
mov
mov
mov
iret
out
fcompl
mov
mov
mov
das
jp
push
xchg
jecxz
loopne
aas
cmp
sub
xchg
dec
lret
test
xlat
sbb
push
pop
adc
jp
cmp
mov
xorb
inc
cmp
stos
mov
xlat
push
fcmovnu
jg
mov
xchg
sub
sarb
pop
push
push
pop
xor
cmpsb
dec
jle
add
mul
push
imul
jns
popa
incb
out
jp
add
jnp
or
push
cmp
pop
xorb
test
dec
mov
add
lock
ret
sbb
adc
push
inc
mov
fwait
dec
jl
out
xchg
ret
jle
das
in
mov
das
sbb
sub
dec
pop
test
xchg
jb
xchg
mov
pop
icebp
lea
and
mov
push
or
and
sti
data16
sahf
pusha
int
and
mov
mov
inc
repnz
int
movl
adc
loop
std
mov
jnp
hlt
ret
jmp
mov
sbb
jae
lea
xchg
pop
pop
xchg
pop
xchg
dec
lock
aad
pop
xchg
aam
in
lock
inc
cmpsb
je
repz
sbb
mov
rcrb
sbb
adc
push
fwait
push
je
pushf
xorl
jp
xchg
aaa
imulb
jnp
rorl
mov
xchg
fwait
insl
mov
mov
es
dec
mov
xor
fs
fstp
push
jo
out
mov
adc
sub
shlb
push
test
stc
imul
sub
lcall
imul
stc
push
popa
mov
push
jg
lods
movl
pop
test
fwait
inc
in
push
pop
movsl
rcrl
in
or
sub
clc
ljmp
xchg
clc
es
inc
fcompp
mov
repz
mov
mov
push
inc
shll
or
data16
mov
popa
mov
mov
call
icebp
xchg
or
mov
cmp
adc
test
popf
xchg
out
mov
or
jecxz
repnz
imul
js
inc
fnsave
into
push
xchg
mov
jbe
inc
or
les
mov
insl
es
jp
ds
insl
sahf
out
or
inc
in
mov
fdivs
sbb
cmp
mov
pop
mov
test
push
jg
outsl
xor
ret
and
bound
add
and
imul
stc
xchg
in
mov
push
adc
pusha
js
fs
out
jecxz
and
and
js
jg
xchg
pushw
pop
jo
xor
sbb
fsubl
and
sub
xor
add
sbb
xor
mov
enter
jns
mov
push
push
or
pop
push
outsb
divl
mov
jmp
mov
popf
mov
or
mov
notl
push
jl
pop
repz
mov
sahf
lahf
cmp
aam
pop
adc
lret
inc
cli
addr16
fwait
je
mov
dec
inc
in
scas
inc
mov
enter
adc
sub
pop
inc
fs
shrb
and
and
pop
imul
inc
mov
pop
push
inc
daa
xchg
cmc
in
vpcmpgtd
adc
mov
inc
xchg
jne
mov
fcomi
push
movsl
repnz
dec
add
mov
stc
je
xlat
test
mov
int
inc
out
aas
stc
aas
pop
mov
int3
orl
xlat
popf
adc
loope
pop
cmpsb
shl
movsb
sti
cmpsb
xchg
cmp
popa
dec
jle
clc
jg
testb
inc
cmp
push
pop
stc
imul
cld
cli
mov
faddl
jmp
fwait
test
pop
test
lods
test
enter
scas
cmp
push
insl
loopne
xchg
cmpsb
out
or
jae
out
pop
addr16
push
cmp
xchg
jecxz
or
sbb
push
push
mov
test
mov
pand
je
movsb
sti
mov
mov
push
push
lea
pop
add
pop
dec
xchg
push
mov
int3
repz
fucomi
and
sub
xorl
inc
in
push
imul
stc
out
bound
test
mov
jnp
or
sbb
cmp
sub
push
push
ret
xchg
cld
lock
les
push
jns
jmp
sti
loop
lahf
ljmp
push
loopne
jle
test
andb
mov
mov
pop
or
or
stc
xor
test
enter
inc
mov
js
sbb
nop
mov
mov
xchg
out
inc
jecxz
mov
jns
jno
xor
jecxz
gs
sti
cmc
jbe
rolb
popf
dec
hlt
fidivs
popf
movsl
movsb
cmp
xchg
popa
push
lods
pushf
lods
mov
movsb
test
ds
or
sub
lea
mov
xchg
sub
popf
dec
call
jns
mov
jo
inc
enter
mov
xor
mov
mov
mov
cmpsl
push
loope
insl
dec
cmpsl
inc
ds
add
test
push
mov
fiaddl
dec
pop
in
cmpsb
arpl
add
in
stc
mull
xor
sub
push
jb
mov
xchg
test
into
inc
popa
int
push
cmpsl
and
sbb
sbb
xor
js
sbb
les
jno
int
inc
add
sub
cmpsb
pop
jae
lcall
cmp
jle
sbb
in
cli
cmp
sub
pop
lods
icebp
xchg
out
cmp
movsl
in
lds
jmp
xchg
aad
idivl
insb
loope
xchg
mov
adc
dec
out
loopne
je
sbb
pop
movsb
xchg
imul
loopne
cs
out
mov
inc
mov
cmp
jbe
cmc
jnp
pop
jmp
cmp
int
jne
mov
repz
jne
inc
push
mov
insb
sbb
mov
mov
es
mov
cli
pop
lds
stos
aas
adc
enter
mov
mov
sub
pop
std
push
dec
clc
pop
decl
or
fsubrs
loopne
xchg
out
or
insb
cmp
test
sbb
stos
data16
adc
pop
mov
ret
push
imul
xor
fldenv
mov
popa
cmpsb
jnp
push
roll
fstpl
shll
mov
data16
fdivrs
mov
out
jo
in
repz
xor
pop
lahf
and
xchg
out
icebp
jp
mov
sub
repz
sbb
mov
and
addr16
push
pop
pusha
pop
lock
ret
xchg
mov
inc
jecxz
shrb
and
inc
js
out
xchg
add
lock
jge
mov
ret
cmp
mov
clc
xchg
xchg
mov
sub
jle
inc
fdivp
pop
mov
pop
xchg
mov
fsubrl
pop
adc
rorl
mov
sbb
aas
nop
pop
enter
sub
xchg
push
sbbl
insl
je
push
int3
out
xchg
fs
lea
addr16
mov
test
jmp
test
sbb
imul
push
mov
repz
sbb
push
pop
adc
jno
hlt
xchg
push
or
lahf
out
dec
mov
adc
out
jle
mov
out
fadd
ljmp
add
add
sbb
add
test
insl
push
fwait
sahf
pop
ficomps
xor
xchg
es
mov
push
mov
jle
xor
arpl
cwtl
inc
jl
jnp
cmp
push
hlt
inc
push
jg
stc
in
dec
dec
xchg
or
cmpsb
and
sbb
pusha
xchg
pop
jb
bts
pop
jle
out
or
jp
dec
insb
xchg
push
mov
fs
fs
pop
rcll
je
pushf
push
pop
or
aam
xor
shl
loope
hlt
je
fcmove
icebp
xchg
dec
dec
data16
icebp
data16
push
push
in
jmp
xor
aad
xor
fadd
data16
or
loope
in
hlt
sbb
imul
jmp
pusha
pop
cvtdq2ps
mov
sbb
std
jb,pt
popf
pushf
loop
mov
in
cmp
shl
xchg
pop
xor
loop
leave
jl
sbb
adc
xchg
into
fwait
hlt
icebp
push
sahf
add
sbb
jb
fstpt
stos
test
movb
in
addr16
push
push
push
cli
inc
rolb
and
ret
fiaddl
push
adc
insl
or
out
stc
inc
loopne
jecxz
add
lds
inc
sbb
test
loopne
in
scas
jne
jp
test
cmpsb
sub
clc
iret
push
js
pop
pop
in
dec
sbb
loopne
sti
pushl
pop
xchg
dec
popa
add
rcl
mov
xorl
stos
loopne
mov
fstps
in
push
lods
icebp
push
lods
or
sbb
mov
mov
push
push
mov
mov
mov
sub
cmpsb
xchg
dec
sbb
jnp
mov
mov
sub
fisttpl
push
mov
jmp
adc
test
push
addl
cli
or
insl
in
mov
decl
mov
pop
dec
lock
push
in
dec
sbb
push
sub
rol
shlb
push
pop
fs
mov
mov
iret
movsb
arpl
call
scas
pop
shlb
das
popf
xchg
std
cltd
mov
das
pop
dec
sub
sub
and
in
cmp
sarb
scas
mov
loopne
jbe
pop
jae
add
popa
mov
stc
pushf
loopne
push
nop
xchg
jmp
popf
out
test
sahf
xor
test
inc
sysexit
punpckhdq
push
shlb
mov
jl
inc
jge
xchg
push
fldt
xchg
cmpsl
add
or
inc
fs
imul
xor
sbb
gs
mov
adcb
test
pop
sub
or
xchg
repz
jecxz
data16
into
sbb
inc
into
mov
sbb
shrb
push
cltd
std
mov
mov
rcr
adc
movsl
xchg
pop
pop
adc
jnp
loope
xor
out
je
mov
imul
subb
mov
cld
sti
add
loopne
add
xchg
cmp
loope
cmpsl
scas
add
outsl
dec
cmp
loopne
clc
pop
mov
enter
xor
cld
cmpsb
push
push
subl
cltd
out
push
test
xchg
sub
pop
inc
aad
adc
sub
dec
inc
mov
jle
insl
adc
ss
idivw
jp
int
sub
test
pushf
mov
inc
sbb
and
xorb
cmp
shl
push
pop
sub
add
jmp
andl
mov
int3
mov
imul
stc
mov
push
push
pop
test
iret
cmpsl
movl
pop
jl
sbb
cmp
jge
mov
add
cmp
sub
icebp
inc
cmpsl
inc
or
pop
fisubl
push
or
sub
sahf
xchg
inc
pop
mov
xor
and
mov
in
icebp
cmp
xchg
fistpl
shlb
lret
mov
bound
push
push
mov
xadd
scas
push
pop
dec
dec
test
push
fidivl
sti
outsl
pop
jbe
jae
cmp
dec
and
pop
mov
cwtl
loopne
mov
inc
mov
inc
in
cwtl
stos
shl
mov
mov
dec
fimull
int3
imul
insb
jno
ljmp
arpl
jp
mov
je
outsb
xchg
jg
in
ja
mov
adc
xchg
mov
hlt
inc
fwait
jp
cmpsl
imul
adc
pop
jne
mov
inc
push
je
outsb
fs
mov
dec
rorl
rcrb
jge
rcr
fwait
jge
jbe
mov
mov
in
lods
pushf
adc
sub
pushf
mov
jecxz
imul
les
mov
dec
in
push
loop
fstl
loop
and
cld
fisubrs
or
addl
cmp
mov
lods
lret
pop
adc
nop
ss
lock
add
movsb
jmp
jmp
into
clc
or
sub
jns
sahf
and
add
mov
fnstenv
nop
cmp
push
jo
int
jae
lret
mov
mov
xorb
cs
jae
mov
ret
mov
js
sahf
sbb
movsl
mov
bound
pop
loopne
inc
inc
in
dec
jne
dec
movsl
popa
xchg
bound
mov
test
pop
mov
popa
shlb
out
int3
stc
mov
xor
nop
cmp
iret
mov
mov
jnp
cmp
xchg
pop
loop
insl
out
fs
shr
or
jl
pop
mov
lods
and
insb
test
imulb
dec
push
call
jno
cmp
xor
jl
inc
sub
xor
sub
adc
shrb
pop
cmpl
jb
rorb
out
mov
xchg
jl
sbb
in
mov
es
jns
push
add
rol
mov
gs
fisubrl
inc
movsl
pop
fs
arpl
mov
push
cmp
or
dec
hlt
in
ja
inc
xchg
gs
sub
push
out
mov
inc
xor
pop
mov
adc
fisubrl
fdivrs
rclb
add
mov
jle
mov
test
sbb
add
rcll
outsl
outsb
inc
imul
jl
stos
cltd
xchg
jp
adc
shrb
xchg
mov
cmpb
out
jno
out
jl
fisubs
xchg
pop
mov
cmp
stos
mov
into
jl
rolb
jecxz
cmp
push
je
mov
dec
sub
jecxz
movups
cmp
sbb
mov
jl
inc
push
ret
mov
xor
lret
sarl
sbb
jge
test
jl
jno
scas
jle
add
jnp
dec
fsubp
mov
mov
rolb
les
in
xor
mov
pop
sarb
cltd
mov
mov
push
jl
xchg
sub
cmp
dec
jl
dec
xor
pop
and
sarb
push
dec
and
insb
fs
pop
jl
cld
or
ret
mov
es
les
dec
std
jmp
jecxz
adc
loope
add
jle
bound
jl
mov
data16
xor
or
sub
push
in
mov
stos
mov
mov
rcll
add
mov
arpl
sbb
call
stos
jl
orl
fdivp
xor
jle
mov
sub
inc
mov
rorl
repz
push
clc
and
add
add
aad
push
rcl
call
lcall
adc
push
cwtl
xlat
xchg
mov
jl
jb
ds
aaa
bound
lock
add
filds
inc
and
xor
imul
mov
dec
leave
or
jmp
xor
pop
jne
add
pop
jl
mov
sbb
push
mov
jl
adc
out
push
adc
add
std
icebp
sbb
sbb
out
add
fbstp
jb
pop
dec
or
call
jo
fldl
pop
xchg
ret
pop
xlat
mov
jno
inc
cmp
push
cmp
addl
inc
cmp
bound
xor
imul
jmp
xchg
mov
xchg
jl
cmp
fsub
scas
push
add
xchg
push
xlat
fwait
mov
data16
xchg
data16
mov
pop
outsb
mov
cld
in
mov
or
sub
fs
inc
fildl
and
or
cmpl
test
and
xchg
mov
in
or
adc
pop
and
pusha
loop
lock
jmp
push
pop
and
cltd
test
lods
imul
inc
sub
add
cmpsl
push
dec
test
es
push
adc
pop
sarl
inc
test
pop
mov
das
mov
mov
inc
jmp
clc
popf
pop
cmp
repnz
sbb
inc
in
jle
in
inc
movsl
pop
lahf
out
inc
out
lret
dec
movl
mov
pop
lahf
pop
pop
mov
test
ss
jp
mov
jmp
insl
sub
imul
cld
inc
pop
mov
xchg
andl
call
pop
lahf
call
icebp
mov
pop
cmp
jnp
repz
dec
incl
and
xchg
pushf
jo
and
mov
out
push
mov
test
repnz
jbe
xchg
inc
pop
cmpsb
xchg
cltd
in
testl
loope
pop
pop
out
leave
jae
loopne
movsl
fildl
ss
pop
inc
movsb
mov
fistps
ss
fsubrs
frndint
icebp
jmp
mov
test
stos
insb
adcw
add
popa
xor
clc
sbb
pop
add
push
xchg
push
cmp
push
sbb
dec
pop
jp
rcrl
ret
cltd
cmp
rcll
mov
cltd
lea
sub
call
imul
cld
out
pop
cltd
mov
pop
lahf
pop
jmp
out
adc
push
inc
mov
das
mov
pop
sub
or
push
inc
mov
ds
mov
xchg
inc
xchg
pop
jb
out
xchg
imul
mov
rcll
add
shrl
jno
adc
data16
cmpsl
insb
xor
xchg
jb
fcomi
cld
inc
rcr
cmpsb
bound
push
mov
mov
lret
adcl
push
test
xor
add
insl
hlt
mov
enter
mov
mov
test
lds
bound
movsl
and
mov
cs
std
movl
xchg
push
dec
push
gs
dec
ret
pop
jmp
jbe
push
out
or
sub
push
xchg
in
push
dec
fnsave
mov
imul
test
arpl
imul
dec
out
dec
fnsave
push
ret
test
mov
push
push
mov
dec
cmpsl
bound
enter
cmp
scas
pop
mov
xchg
icebp
or
mov
lea
xorb
inc
arpl
loopne
out
sub
addb
mov
and
pop
ret
sbb
and
xchg
lahf
enter
insl
bound
sbb
sub
and
mov
repz
or
mov
xlat
add
clc
sub
adc
add
loopne
pop
or
sub
jge
std
xchg
dec
cmp
fnsave
inc
movsb
fs
cmp
scas
push
mov
repz
sub
mov
popf
dec
repz
daa
insl
xchg
or
mov
cld
fsub
xchg
or
jns
jmp
insl
or
cmpsb
jns
jmp
loope
clc
int
jbe
jns
jmp
sbb
mov
dec
pop
ss
jp
lea
scas
xchg
cmpsl
loop
outsb
push
mov
inc
jbe
jbe
int
ret
data16
hlt
sti
jmp
mov
subb
fistl
fistl
orb
icebp
inc
dec
jmp
scas
sub
in
mov
jecxz
lahf
stos
mov
lods
orb
cwtl
in
mov
lret
sub
mov
sti
leave
into
dec
pop
ret
dec
test
aaa
dec
xchg
push
incl
imul
clc
stc
loopne
xchg
out
repnz
fistpl
pop
push
sbb
add
leave
addb
dec
outsl
fistl
add
cmp
dec
icebp
mov
cmpsb
sub
mov
addr16
movl
or
in
pop
pop
ret
mov
mov
jbe
daa
outsl
dec
fwait
push
inc
fisubs
out
jnp
cmp
and
push
pop
sub
sub
mov
rorb
popa
cs
dec
lahf
sub
sub
sub
jle
sub
push
xchg
in
push
mov
add
add
add
cltd
data16
insl
add
in
inc
or
inc
fisttpl
in
es
or
mov
mov
daa
insl
xchg
or
jmp
sbb
mov
mov
or
hlt
out
sarl
in
scas
popa
adc
repnz
test
cmp
shll
cmp
leave
pushl
leave
sub
jle
jp
jmp
jg
fisttps
sub
shll
sti
and
inc
hlt
jns
push
xchg
into
lahf
inc
push
insb
xchg
sti
push
jg
cld
mov
imul
fdivs
or
sub
fisttpl
mov
lds
add
gs
cmc
hlt
mov
fdivrl
icebp
in
fistpll
sbb
inc
call
mov
xchg
cmpsl
inc
jbe
jbe
jecxz
test
out
out
sub
mov
xchg
mov
sbb
cmpsl
and
imul
pop
and
xchg
jo
mov
or
push
outsb
cmpsb
jp
xchg
int
push
push
mov
pop
mov
and
arpl
add
data16
imul
das
mov
lea
xor
data16
jmp
push
xor
fwait
enter
in
push
repz
adc
faddl
push
push
xchg
push
push
mov
lods
repnz
dec
jge
pop
popf
les
out
push
insl
repz
xor
fsubrs
dec
pop
cmp
xchg
out
adc
into
or
lret
sub
pop
imul
inc
mov
jno
and
imul
add
aam
push
js
dec
scas
mov
out
fucomip
stos
sbbl
leave
xor
or
jp
xor
add
js
mov
icebp
mov
js
loop
xor
pop
sub
sarl
push
or
dec
leave
mov
subl
insb
jmp
mov
sub
fldt
sub
daa
mov
or
fisubl
or
mov
jnp
push
stos
fadds
mov
ret
sub
sti
mov
add
and
mov
pop
xchg
repz
movsl
fbstp
inc
daa
push
rcrb
mov
jle
shlb
mov
fstl
data16
sbb
sbb
jl
rcll
ror
jl
int
jmp
jle
push
dec
mov
sahf
mov
and
xchg
outsb
mov
fiaddl
mov
sbb
mov
pop
mov
mov
sbb
jb
shl
push
lds
sbb
jmp
inc
add
faddl
test
ret
ja
push
in
popa
movsl
push
mov
or
in
mov
pop
push
xorl
fdivl
mov
add
or
pushf
je
mov
jno
push
imul
pop
or
mov
add
das
in
fists
cmp
add
in
adc
push
scas
sbb
leave
out
mov
and
enter
mov
push
dec
mov
jae
jle
jo
popf
pop
jl
out
dec
scas
punpckhbw
outsl
imul
xlat
ret
int
dec
mov
pop
mov
bound
rorl
and
xchg
decb
mov
adc
dec
in
xor
ljmp
mov
fnstsw
test
dec
and
lock
cmc
arpl
pop
dec
out
loopne
movsl
add
std
std
rcll
push
sub
push
or
insb
push
mov
fistpl
push
adc
inc
add
popa
lds
jnp
imul
mov
in
pop
lcall
scas
cmp
mov
dec
clc
addr16
and
cmpsb
cli
repz
adc
and
mov
inc
rorb
push
inc
leave
inc
callw
xchg
insl
add
outsb
pop
lcall
in
and
subl
mov
mov
jl
out
lods
xchg
scas
jl
loope
stos
popf
ret
cmp
jl
int
lahf
cltd
iret
leave
add
mov
daa
jecxz
in
jl
add
mov
mov
jnp
and
imull
adc
stc
pop
adc
sbb
das
sub
xor
cmp
dec
jl
dec
dec
push
push
push
push
pop
test
pop
test
dec
mov
movsb
xchg
add
stos
xchg
mov
mov
xchg
sti
shl
lahf
xchg
mov
test
cltd
pop
sbb
mov
mov
dec
or
mov
in
lret
cmp
push
push
jmp
insb
mov
dec
les
lret
pop
inc
dec
mov
imul
or
adcl
dec
jl
inc
mov
cmp
xchg
mov
xlat
add
mov
jl
addl
jp
sbb
jl
dec
outsb
pop
cli
pusha
mov
sub
js
std
fiaddl
xchg
sub
gs
push
test
jp
mov
dec
add
inc
stc
fcmovbe
jl
mov
filds
xchg
or
jno
pushf
jl
mov
hlt
mov
gs
or
jl
dec
and
das
xchg
cmp
xchg
push
mov
fnstcw
xor
xor
sub
test
or
xchg
sbb
les
insb
mov
fldenv
jl
cmc
or
jl
sbb
cmp
aas
int
jl
stos
jecxz
dec
into
dec
jl
push
sub
jmp
inc
mov
xor
int
jo
inc
or
test
inc
lods
xor
lret
mov
std
repnz
cmp
adc
pop
incl
jnp
stc
pop
jmp
dec
lcall
add
dec
in
inc
sub
mov
inc
das
jo
jnp
daa
mov
jg
insl
mov
fsubr
pop
insb
imul
jl
push
or
fidivrl
aaa
or
xor
cltd
cmp
push
mov
jne
and
xor
clc
mov
loope
call
ss
stos
cmpsb
ret
mov
dec
xchg
insb
ds
addr16
pop
sbb
jl
or
push
cmp
dec
inc
shlb
aad
rcrl
loopne
push
mov
sub
add
fwait
pop
push
mov
cli
adc
mov
sub
sub
sti
sarl
xchg
movsb
mov
push
mov
outsb
mov
cld
stos
mov
dec
adc
jl
adc
pop
sub
lcall
xchg
mov
jne
fstp
fs
mov
enter
mov
cli
stc
ror
or
xor
mov
dec
push
jns
and
jl
nop
fcmovnb
push
adc
aam
in
insl
stc
pop
mov
lea
cltd
jl
mov
inc
insl
or
cwtl
cmp
data16
mov
jl
cmp
fstpl
es
out
push
and
mov
jl,pn
lods
xor
test
div
iret
xchg
cmp
call
inc
daa
jl
push
adc
jge
pop
mov
jmp
das
mov
dec
dec
xlat
sbb
sbb
shll
and
je
sbb
xchg
xor
jno
test
sub
jnp
lcall
out
adc
cmp
push
js
loopne
xchg
fistpll
cmpl
push
sar
std
call
mov
cwtl
cld
cmp
movsbl
jnp
push
shl
or
xchg
bound
jl
mov
dec
imull
jl
clc
inc
mov
mov
jo
or
jge
dec
shr
int3
jl
cvttps2pi
jl
out
rep
and
mov
push
in
or
jno,pn
or
push
or
sbb
repnz
adc
fisubrs
cmpb
pusha
fdivrs
sbb
aam
push
cmp
dec
sbb
add
jl
rorl
push
cmp
jno
jl
shl
jg
stc
adc
dec
fadd
ja
mov
and
mov
xor
cmp
push
jp
ja
psraw
adc
sub
xor
in
xor
jl
mov
pusha
sub
sbb
jl
jne
out
leave
xchg
and
and
sub
shlb
jp
mov
cmc
jmp
jbe
test
dec
and
outsb
adc
jb
shlb
stc
les
out
leave
adc
fidivrl
es
subl
pushf
dec
jnp
shl
cltd
and
mov
fldcw
stos
daa
test
and
dec
mov
sub
jo
cli
add
mov
popf
fdivr
stc
xor
pop
dec
fstpl
sub
mov
jl
dec
es
pop
cmp
shl
sbb
jl
and
mov
call
jl
cmp
sub
push
jge
lock
sbb
xchg
push
das
mov
andl
imul
add
jl
push
cmc
pop
lret
mov
jge
stc
inc
fisubrl
push
xchg
je
add
jl
push
and
jg
cmp
mov
mov
inc
div
inc
scas
subl
lea
loop
cli
je
push
pop
jle
fldenv
push
call
jns
lret
std
mov
fsub
test
jl
cmp
mov
jl
fdivrs
pusha
fisttpl
lret
in
imull
test
xor
sti
cmc
xchg
sub
sarl
inc
jmp
in
dec
pushf
insb
cmp
jg
movsb
jl
cmc
jmp
inc
jl
nop
int3
out
fwait
pusha
pop
push
jl
sbb
pop
fdivl
sbb
mov
jle
pusha
lret
popa
xorb
insl
into
rcrb
push
sbb
das
in
jl
out
divb
repz
jl
push
lcall
repnz
jecxz
push
sbb
pop
jnp
dec
mov
mov
repnz
add
aam
dec
mov
jl
adc
pop
push
mov
inc
es
mov
js
mov
add
sub
jne
cmc
insl
sti
push
imul
shrl
je
xor
sbb
cmp
sub
push
stc
fnstenv
popf
ss
jl
pop
cmp
mov
hlt
add
stos
mov
jno
fsubrs
ror
fnsave
fwait
adc
cld
xor
push
jl
fists
cmp
or
jl
out
movsb
xor
pop
mov
cmp
jl
int3
sbb
pusha
stc
add
inc
xchg
lcall
pop
push
int3
sbb
or
lret
data16
jmp
int3
dec
jl
push
pop
xor
lods
pop
cmpb
mov
adc
pop
jbe
or
loopne
inc
outsl
or
inc
cmc
cmp
jnp
sbb
cmp
rcrl
insl
push
cmpsl
jl
dec
imul
jbe
jl
sbb
or
or
ficoml
icebp
lcall
adcl
daa
repnz
fcoms
pavgw
jno
jl
or
rcr
mov
stc
add
dec
faddl
cmp
pop
cmp
js
pop
lds
ret
xchg
inc
xor
xchg
push
cs
cwtl
dec
je
xor
mov
push
and
daa
ret
sbb
mov
push
pushf
jg
nop
aad
adc
mov
mov
mov
xlat
iret
dec
int3
movl
mov
push
add
push
inc
das
pop
push
jns
pushf
mov
sbb
push
dec
jle
mov
sbb
cmp
jp
pusha
dec
or
cmp
cli
mov
sbb
mov
mov
or
jl
mov
inc
aaa
dec
xor
push
dec
test
dec
ja
jl
lods
adc
mov
popf
or
jl
cs
icebp
sub
sahf
mov
adc
stc
fs
sbb
jl
icebp
sub
xor
mov
inc
xchg
rcr
push
or
or
add
jl
sbb
inc
mov
jl
push
xor
jns
adc
pop
hlt
cmp
mov
sbb
sbb
jb
mov
cmp
xchg
mov
cmp
cwtl
sbb
aad
aam
push
jnp
add
mov
inc
jl
imul
daa
push
add
nop
cmp
cld
cmpsl
je
mov
push
subb
push
popa
jl
jmp
sub
cmp
jmp
add
cmp
cmp
lods
inc
mov
jp
push
push
sbb
push
jnp
hlt
and
mov
or
cli
aas
jl
cld
xor
in
test
cmp
or
push
push
adc
mov
sub
addr16
mov
pop
std
aas
shrb
jl
mov
jb
je
sub
mov
sbb
movsl
mov
and
adc
lahf
pop
push
jo
int
push
ja
cmp
xchg
insl
insl
cmpb
mov
push
mov
js
and
js
mov
dec
push
jl
sbb
jmp
mov
add
test
sti
pop
data16
jl
bsf
push
jl
pop
lods
add
movsl
mov
jp
cld
popa
pop
js
xor
lock
mov
push
mov
pop
jl
mov
rcll
jo
js,pn
mov
loop
pop
cwtl
clc
mov
push
popf
addb
jl
pusha
sbb
jl
inc
or
lods
out
dec
lods
scas
jne
jl
xlat
sbb
sub
pop
je
adc
sar
leave
jl
int3
enter
xchg
cld
mov
jmp
nop
inc
lfs
xchg
mov
insb
das
xchg
repnz
jns
or
fmull
aad
setb
jae
pop
jmp
je
push
sbb
insl
mov
mov
ljmp
cmp
sub
push
inc
je
xchg
nop
mov
pop
xor
test
in
inc
shl
adcb
lods
stos
out
mov
je
mov
xchg
fisubrs
inc
adc
inc
jl
lret
cmp
fwait
imul
mov
dec
jb
les
aad
push
sbb
fs
loope
lods
dec
mov
cmp
mov
ljmp
aam
in
push
jnp
sub
inc
dec
jae
cmovs
xor
ret
clc
pusha
sbb
sahf
mov
xor
push
jmp
rorb
xor
xor
push
inc
sbbb
push
lods
sbb
cmp
dec
sbb
cwtl
inc
push
sarb
in
cmc
por
sub
in
dec
xchg
lock
push
jne
jl
push
push
sub
jl
rclb
adc
xchg
in
aad
xchg
jl
push
push
rcl
sbb
xor
sbb
ljmp
std
mov
inc
adc
or
sub
xor
aaa
out
and
xor
jl
jge
pop
outsl
movsb
sub
rcl
adc
cmp
and
cmp
mov
pop
mov
std
jl
xlat
aad
dec
mov
bound
jl
push
hlt
movsl
mov
or
int3
adc
xchg
jecxz
in
loopne
or
jl
scas
push
cmp
sub
mov
fs
pop
adcb
sarb
adc
insb
xor
es
sbb
clc
jl
movb
sbb
dec
adc
jne
inc
fsubrp
adc
xchg
mov
cmp
dec
fistpll
sub
pop
and
popa
incl
rcll
imulb
cmp
loop
add
pop
ja
inc
xor
iret
mov
cmc
insb
jp
inc
movsl
push
sarl
xlat
cmp
mov
inc
adc
rcrl
jle
popa
jl
loopne
call
jl
insl
pop
dec
mov
xor
cli
cs
mov
dec
mov
and
jl
aam
cld
fbld
mov
cwtl
aad
adc
push
jl
xor
add
fucomi
sbb
sub
add
ja
jns
jl
sbb
shll
icebp
sub
insl
xor
adc
imul
inc
cmp
rcrl
mov
jbe
adc
push
arpl
cmp
lret
addr16
mov
push
or
sbb
jl
aam
stc
add
xchg
mov
sub
lcall
out
mov
or
jl
mov
sbb
mov
xchg
stc
xchg
fnstcw
push
or
or
mov
out
xchg
ror
dec
jg
lcall
scas
sbb
push
in
sbb
loopne
xor
pop
push
sbb
mov
push
jno
pop
or
jb
loopne
jl
ljmp
dec
cmp
mov
jo
jl
pop
mov
into
mov
mov
or
jne
sbb
sbb
pop
jb
popa
mov
hlt
inc
ret
addr16
mov
xor
push
jl
iret
sbb
sbb
addb
or
jl,pt
pop
push
aad
cmp
and
fbstp
push
dec
insb
loop
loopne
mov
aaa
stc
cmp
test
dec
xchg
and
mov
outsl
imul
js
push
jl
add
xor
and
jl
hlt
sub
fwait
aaa
sub
mov
mov
adc
cmp
or
jl
jle
repnz
inc
inc
jns
jl
cld
cmp
es
mov
aad
jle
outsl
mov
dec
and
dec
cmp
cmc
dec
dec
sub
ss
cwtl
jl
jge
loop
push
shlb
inc
inc
int3
sbb
push
inc
mov
aam
pushf
insb
push
pop
notl
pop
jl
adc
loopne
jge
jl
inc
jb
xchg
push
ljmp
lret
sbb
mov
xor
cmpsl
mov
pop
jnp
je
lds
cmp
pop
mov
mov
jmp
push
adcb
insb
test
xchg
enter
pushf
ds
jnp
adc
jnp
ss
jle
add
pop
leave
dec
jno
rcrl
fiaddl
jl
jmp
mov
mov
pop
jns
test
jl
out
dec
andw
jl
scas
dec
pop
fnstenv
inc
call
stos
fidivs
stc
nop
jl
inc
sti
push
and
xchg
insb
fnsave
xor
xchg
jl
mov
mov
sbb
cmp
push
stc
add
mov
jl
ss
aaa
xor
shrl
aam
lcall
arpl
jl
push
cs
mov
repnz
inc
xor
jl
leave
sub
xor
jl
popf
iret
clc
pop
test
cli
sbb
pop
lock
cwtl
ss
cmp
fs
cmp
sbb
pop
fldcw
mov
loop
fistl
hlt
inc
call
inc
mov
lcall
popl
shld
xor
dec
jl
gs
add
loop
sti
and
sub
add
inc
mov
xchg
arpl
fwait
mov
cmp
add
mov
repz
lods
mov
sub
fcomps
and
push
jl
int3
inc
and
mov
sbb
add
jns
dec
iret
jl
add
ljmp
and
xor
push
aaa
inc
mov
sub
popl
mov
gs
sbb
ud2
cmp
loop
push
add
dec
sbb
cbtw
cmp
jnp
fisubs
jne
pop
and
jl
xor
ljmp
fisubs
sub
sub
and
jl
mov
mov
push
lret
or
or
insl
jb
add
xchg
jmp
xlat
inc
cmp
add
ja
je
shrl
bound
inc
lret
sarb
ret
cld
es
rclb
ret
push
adc
jno
ss
jl
es
std
mov
loopne
fwait
arpl
xor
sahf
fldcw
in
mov
mov
dec
cs
popf
movsb
inc
ja
out
loopne
and
dec
jl
xorl
jl
jnp
jbe
add
test
mov
gs
inc
sub
rorl
xor
inc
xchg
and
mov
and
jecxz
mov
inc
shrb
sub
pop
and
sbb
cmp
out
std
sbb
push
jl
fstp
lcall
xchg
mov
cld
mov
jnp
push
mov
mov
jp
fdivp
jl
jmp
testl
cmp
iret
inc
jg
lahf
sub
adc
pop
cmc
jl
in
cld
jbe
nop
sbb
cmpsl
mov
lock
dec
lret
dec
jl
dec
xchg
adc
pop
ret
sahf
jl
ficomps
pop
mov
js
mov
dec
add
loopne
shrl
repnz
mov
or
hlt
ds
sbb
enter
or
mov
adc
push
mov
push
sub
cmp
cmc
inc
and
push
je
dec
lcall
inc
cwtl
adc
out
jecxz
xlat
sub
mov
je
cmp
mov
subl
movb
push
ja
mov
pusha
xlat
dec
push
jl
cwtl
cld
fbld
dec
jl
rcrb
xor
adc
jbe
cmc
leave
inc
cmp
dec
mov
mov
lahf
jl
push
test
rcrl
int
fidivs
inc
gs
adc
adc
xchg
jo
inc
arpl
sub
jnp
sbb
inc
sub
jbe
int3
xchg
sub
sti
mov
pop
pop
dec
mov
pushf
int3
popa
popl
lods
add
jnp
pop
lea
je
jge
push
cmp
sbbl
gs
iret
jnp
aam
mov
sarb
ja
ss
int3
dec
data16
stc
push
jl
sarl
fcomps
jge
lds
loop
mov
inc
pop
jl
adc
push
cld
test
xor
mov
je
jns
jl
pop
sub
movaps
fwait
je
sub
sbb
out
jl
cmp
mov
dec
sarb
addr16
fisubrl
mov
xchg
xor
push
mov
jae
mov
stc
fmul
inc
dec
pop
sbb
cmc
lahf
inc
and
sub
and
xor
cld
jl
ljmp
jl
jmp
lret
adc
jl
add
imul
pop
xchg
or
test
sbb
prefetch
push
sarb
push
cli
mov
mov
mov
or
and
dec
loopne
call
sbb
lret
mov
jnp
test
sbb
push
or
in
loop
xor
mov
jl
and
stos
xchg
cmc
js
or
movsl
inc
fisubrl
pop
ja
inc
divb
leave
jl
mov
les
mov
in
sbb
add
std
iret
push
jl
pop
mov
out
pusha
inc
jl
stc
sub
push
mov
add
push
dec
inc
push
stc
ss
jl
cli
dec
sbb
or
pushf
mov
aam
push
leave
push
inc
jnp
pop
in
sub
inc
out
shr
pop
cmp
or
sbb
and
cmp
jle
mov
sbb
adc
sbb
insl
sahf
cmpb
sbb
push
fdivrl
insl
push
insb
fisttpll
movsb
dec
push
jl
sub
jl
mov
gs
sub
jl
pop
and
into
cmp
out
sub
add
cld
jl
or
push
cmp
pop
adc
in
lcall
mov
insb
push
pop
pusha
jl
or
mov
popa
insb
cmp
jb
cli
xor
xchg
pop
push
cmp
frstor
mov
cmp
pushf
and
pop
add
push
push
mov
jp
push
stc
jo
in
fbld
jmp
incb
dec
or
nop
fmul
loope
dec
xchg
jl
sub
inc
push
ret
pop
and
mov
fcomp
dec
mov
iret
sbb
and
sbb
stc
inc
xor
das
addr16
jne
jo
or
into
in
xor
dec
jo
mov
movsl
bnd
dec
inc
pop
push
daa
inc
sbb
cmp
clc
or
pusha
jp
inc
cmp
scas
cmp
sbb
dec
fdivrl
popf
mov
jl
push
sbb
inc
aam
mov
dec
jl
mov
mov
sub
lcall
flds
nop
push
mov
xlat
adc
sub
ret
aas
cmp
sarl
pop
call
sbb
sub
and
jl
stc
mov
jno
sbb
mov
pusha
fidivrs
lret
xchg
je
pop
inc
fnstcw
mov
mov
xchg
sbb
sbb
lret
jl
fdivr
lock
mov
push
jge
and
adc
sbb
ja
outsb
mov
clc
jnp
inc
imul
jp
jge
aam
add
push
insb
rcll
lds
fisubs
pushf
ds
test
int3
outsb
aas
adc
sahf
fs
push
ret
cmp
fucom
test
aad
jl
lcall
sub
pop
aas
sbb
sbb
fisttps
xor
pop
dec
dec
sub
dec
rclb
pop
call
sub
xor
cmp
fcomp
in
jge
or
add
and
aam
mov
icebp
dec
sahf
loopne
inc
or
mov
shrl
or
jl
inc
rol
sbb
inc
pusha
fsub
dec
insb
cmp
mov
xchg
mov
or
push
push
jae
faddl
xchg
aam
js
pop
sbb
sbb
sbb
push
pushf
xor
lret
fdivl
add
jl
jge
cmp
jl
jp
xor
adc
daa
jl
mov
jno
jl
and
inc
xor
test
cmp
push
cmp
scas
je
dec
dec
jle
sarl
xchg
jl
lcall
xchg
fdivrl
je
pop
jl
cmp
adc
jnp
ror
and
adc
push
loop
push
mov
push
adcb
mov
xchg
jo
push
jl
sbb
push
inc
sub
dec
and
mov
loope
lds
shll
jl
mov
pop
xchg
jnp
mov
insb
call
jo
sahf
push
pop
movsl
popa
daa
mov
es
insb
and
fildl
pop
movaps
sub
fnstcw
cmpsl
and
inc
das
jbe
push
movsb
lds
arpl
fistps
push
and
xchg
xchg
sbb
jae
test
push
ja
jle
call
pop
and
fs
sub
arpl
and
cmpsl
data16
mov
jnp
jne
xor
test
gs
fldt
dec
es
or
dec
stos
mov
xor
adc
popf
or
sub
ljmp
dec
cmp
adc
addr16
adcl
ljmp
jb
mov
dec
dec
lods
pop
outsl
loope
sbb
iret
or
sub
dec
outsl
mov
movsl
mov
jecxz
nop
cmp
test
jno
pushf
fidivrs
in
add
add
push
inc
movsb
ljmp
jne
mov
out
add
test
or
aad
dec
dec
mov
add
dec
or
movsl
fs
leave
dec
movlhps
sbb
dec
in
xlat
aam
mov
imul
push
out
ss
inc
jg
sub
fiadds
andl
inc
mov
inc
incb
out
mov
mov
mov
inc
add
dec
ret
stos
cld
xor
mov
dec
and
ja
pop
arpl
inc
mov
cmpsb
pushf
pop
mov
addr16
pop
pop
lea
out
fists
outsb
mull
fsubl
jp
imul
xchg
sub
jnp
out
gs
sbbl
jo
nop
push
sbb
xchg
dec
or
mov
cs
inc
xchg
adcl
xchg
setae
outsb
xchg
outsl
cwtl
mov
xchg
lods
cmpsb
push
pop
arpl
cmp
sbb
pop
push
jmp
mov
outsl
jmp
mov
sbb
mov
imul
fisttps
push
call
lret
push
add
or
push
and
jo
movsl
dec
add
ljmp
ret
movq
lods
test
in
iret
lahf
lret
out
jnp
inc
and
in
movsb
jae
push
imul
loopne
call
mov
popf
imul
push
outsb
pop
adc
jno
das
mov
mov
or
ror
sbb
xlat
stc
out
sti
das
movsb
lods
jecxz
and
popf
push
decb
and
sub
imul
sub
imul
jp
jmp
fnsave
bswap
and
push
pop
jmp
roll
jg
andl
imul
popa
scas
iret
cmp
cmpsb
jne
and
lcall
sub
push
seta
or
and
push
cmpsl
addr16
test
das
test
xor
add
in
call
cs
or
insl
jecxz
test
xor
and
add
lock
test
xchg
test
nop
push
mov
push
movsl
push
inc
push
rcrl
jle
sbb
dec
dec
icebp
inc
in
movsb
arpl
lea
cmpsb
in
push
push
fsubrs
stc
push
mov
add
mov
mov
mov
jecxz
or
call
mov
mov
mov
ret
push
outsl
ss
inc
mov
imul
mov
push
and
mov
pop
xor
lods
roll
scas
addb
fiadds
add
mov
jmp
movsb
push
pop
push
out
stos
and
dec
out
or
mov
add
mov
inc
out
cmpsl
mov
test
sub
ret
xor
or
push
out
sub
sbb
inc
xchg
and
inc
dec
iret
or
jmp
lock
cmpsb
iret
cmp
icebp
lods
sbbl
and
in
iret
sbb
sub
pop
lds
lods
nopl
leave
rcrb
mov
ret
jbe
mov
stos
push
stos
mov
and
in
shll
orps
xlat
stos
jnp
dec
rsqrtps
cmpsb
push
and
sti
xor
push
mov
xchg
imul
jnp
fwait
mov
cmp
bound
rep
loop
mov
sbb
aaa
push
push
jle
cmp
sti
fildl
sbb
inc
fdivrl
popl
cmp
xchg
xchg
dec
and
scas
mov
iret
sbb
shlb
dec
cmp
std
jl
and
jl
lea
inc
jl
mov
ret
jl
xchg
jp
loope
cmpsb
mov
add
int
stos
jl
mov
jecxz
leave
add
movb
addr16
and
mov
aad
xlat
rcl
fstp
andb
mov
cmp
or
mov
lcall
cwtl
lcall
push
mov
lahf
test
rcll
mov
sbb
aad
xchg
cmpsl
lds
xor
pop
jl
mov
xchg
add
and
jl
ret
test
stos
loope
stos
jl
iret
jecxz
mov
daa
add
and
out
inc
cmpsb
leave
cmpsb
lret
aad
jmp
or
xchg
je
subb
mov
sti
addr16
dec
das
popa
push
cmpb
fimuls
jl
insl
outsl
imul
jge
jns
mov
cwtl
xchg
xchg
sahf
mov
movsb
scas
mov
lods
jnp
mov
mov
mov
jl
pop
data16
mov
nop
jl
cmpsb
fimull
xchg
push
cwtl
or
lret
and
xchg
int
lret
sahf
inc
mov
jl
cmc
pop
mov
push
jl
ss
insl
mov
pop
bnd
stc
stos
cmp
das
mov
push
insb
and
cwtl
cmpsb
bound
mov
rcrl
and
cmp
or
adc
push
inc
rcrb
scas
fidivrl
adc
dec
add
aas
mov
or
jl
sahf
dec
out
ja
cmp
and
fidivrs
in
fdivs
stc
and
into
aaa
repnz
add
cli
jl
dec
sub
add
roll
xchg
cltd
lret
cs
inc
sbb
sbb
add
jl
inc
aam
inc
loopne
lea
ja
push
adc
jg
or
jne
in
push
shll
in
jl
add
rol
push
cmpsl
sub
cmp
enter
pop
loop
xchg
xor
xchg
jbe
adc
jl
mov
xlat
addb
inc
fwait
add
js
loop
xor
inc
xchg
leave
cmp
jo
or
sub
push
mov
cltd
xchg
in
adc
or
inc
jl
stos
push
xchg
jl
cli
xor
or
and
add
cmp
xchg
fildll
je
sarl
pop
cmp
push
fnstsw
idiv
int
inc
push
xor
nop
pop
fwait
repnz
rclb
lcall
pop
fidivs
push
mov
gs
dec
mov
sarb
xor
outsb
cmpl
fnstcw
jl
mov
lahf
jg
es
dec
push
jmp
rorb
and
in
aam
sahf
jne
test
mov
xchg
xchg
jnp
jl
pop
mov
lcall
pop
pop
stos
jl
in
adc
leave
xchg
fdivr
in
insb
fcom
int3
addl
jl
out
add
jl
mov
or
xor
add
jl
xor
lea
sbb
sti
lret
mov
into
cmp
jle
repnz
es
mov
cmp
fcomip
xor
aaa
cltd
cwtl
into
movsl
jnp
dec
int3
mov
push
aam
aas
es
aaa
data16
insb
cmp
dec
es
aas
or
xlat
mov
insb
das
imul
fstps
dec
add
popf
mov
xchg
sti
dec
sub
repnz
cs
inc
test
fimull
lret
repnz
jae
in
mov
popa
push
pop
mov
arpl
and
insb
and
jbe
jl
or
or
pop
lahf
jl
add
jp
mov
call
cmpsl
jo
push
pop
mov
mov
aas
dec
fldl
or
pop
jl
xor
mov
cmp
jl
in
mov
push
adc
into
fimuls
clc
bound
xchg
lahf
pop
pop
xlat
or
jl
adc
mov
sub
fsts
mov
adc
xchg
scas
popf
jb
cld
jl
jns
push
fidivl
jne
jl
add
inc
xchg
jae
test
subl
int
jl
push
cmp
cmp
out
cvtdq2ps
inc
andb
sub
sbb
sahf
scas
jl
dec
or
daa
dec
sbb
addr16
into
ret
jl
adcb
jl
or
test
inc
stos
jecxz
and
mov
or
sbb
sbb
and
sub
fimuls
ret
out
push
mov
mov
adc
rcll
sub
scas
mov
rcrl
out
je
imul
aad
and
lods
push
sbb
sbb
mov
dec
push
push
pop
std
inc
shrb
mov
xchg
or
cmp
sbb
mov
stc
lcall
xchg
fsubrl
das
or
push
in
mov
lock
int3
and
push
nop
push
xchg
push
jnp
adc
decb
and
sub
jl
repnz
push
xor
lea
cli
or
cmp
test
mov
je
popa
lea
xchg
mov
jbe
rcll
mov
mov
or
and
clc
jl
loopne
pop
mov
jns
jl
das
fs
outsl
sub
cli
sub
pusha
sbb
mov
ja
xchg
pop
or
rorb
cld
cmp
dec
les
xor
bswap
dec
fwait
push
insb
jno
cmp
inc
cmp
add
and
and
cld
adc
je
mov
inc
in
add
xor
pusha
dec
nop
and
mov
lahf
repz
insb
loop
sub
xchg
fistpll
rcrb
divb
in
cmpsb
xchg
cld
ret
jae
sbbl
fwait
xchg
stos
jl
rcrl
aas
lcall
mov
sbb
imul
ss
push
insb
dec
cmpsl
xlat
ret
mov
mov
ss
mov
fdivrl
push
or
xchg
mov
fdivrp
pusha
jl
add
push
sbb
push
or
aaa
mov
jl
cmp
and
sti
mov
stc
cld
loop
push
ret
mov
jl
and
xchg
jmp
incl
jl
dec
sub
jl
push
hlt
repnz
mov
mov
mov
inc
cmp
aad
sarb
jl
lds
and
cmp
insb
in
xchg
dec
fisttps
mov
xor
jl
mov
fs
sub
inc
fstpt
test
cmp
adc
dec
sti
nop
aad
jl
mov
enter
leave
bound
jbe
inc
push
mov
repz
sbb
arpl
inc
mov
push
push
sbb
outsl
inc
cmpxchg
sub
jl
inc
dec
dec
lret
jl
movsb
rcrb
aaa
add
jae
es
stc
aas
dec
outsl
pop
adc
dec
dec
inc
push
cmp
fs
adc
xchg
or
loope
jl
arpl
ja
push
scas
out
and
sub
jb
or
jl
mov
cmc
and
std
pusha
loopne
pop
sub
xor
int3
cmp
in
jmp
adc
jge
cli
repz
das
jae
ss
pop
daa
jl
pop
xchg
push
dec
or
and
fiaddl
fbld
inc
sahf
jl
mov
jl,pn
inc
incb
xchg
mov
iret
aas
jae
add
cmp
and
outsb
repnz
cmpl
xor
jl
mov
pop
jl
movsb
dec
outsl
pop
call
jl
pusha
enter
jl
mov
aaa
dec
arpl
int
cltd
and
loopne
adc
push
ss
or
pop
xchg
jl
psubusb
out
adc
jl
jno
xchg
dec
mov
inc
aas
mov
rclb
cmp
stos
xlat
loope
inc
xor
or
jl
or
add
insl
testb
cltd
pop
mov
inc
nop
aas
mov
cmp
pop
ds
add
jno
cmp
jns
ljmp
jl
dec
les
add
mov
sub
inc
lcall
xchg
call
aas
lret
lods
inc
movsb
subb
and
enter
xor
jl
xor
xchg
iret
jl
cltd
cmc
ljmp
and
push
sbb
and
mov
aad
add
aas
xchg
adc
fsubl
jl
jmp
cmp
jl
push
mov
aas
jl
mov
aam
jl
add
ss
jl
out
jge
fwait
xchg
pop
mov
push
inc
shrl
jle
sarl
cmp
loop
mov
jl
test
out
sub
es
cmp
cmp
decl
ljmp
or
repnz
push
movsb
xchg
int
dec
sbb
lret
mov
fisubs
or
imul
jge
cmp
jo
dec
xchg
cmp
inc
movsb
push
add
in
sub
icebp
adc
sbb
push
jl
fisttpll
pop
jl
das
mov
mov
sbb
cmpsb
pop
enter
mov
std
push
jo
dec
and
notb
sbb
add
mov
sbb
popf
jno
rcll
hlt
pop
clc
out
or
push
jne
jb
mov
xor
dec
jl
dec
cld
sub
movsl
fwait
sahf
nop
add
sbbb
idivb
lahf
fidivs
inc
nop
jl
sbb
cltd
xchg
jp
hlt
mov
mov
jg
in
std
scas
pop
xchg
and
cli
sub
fistpll
or
loop
movsl
add
int
jl
adc
lds
mov
push
add
loop
fmull
jl
mov
xor
jl
mull
orl
cmpsb
mov
jp
out
jl
in
mov
mov
lcall
jns
lods
jl
fadds
arpl
lret
mov
jbe
cmp
insb
int
rolb
les
cmp
pop
cmp
adcb
fstpt
imul
pushf
push
inc
insl
and
dec
xor
dec
jno
adc
andl
movzbl
add
or
orl
cld
xor
sbb
pop
add
popf
insl
sarb
cs
inc
test
pusha
mov
shll
adc
lods
jnp
out
cmp
std
mov
mov
inc
cltd
repz
mov
ljmp
mov
pop
xchg
xchg
xchg
ja
repz
xchg
jl
in
dec
pop
into
sbb
jl
pop
jb
sbb
mov
loope
adc
jp
mov
or
test
lcall
dec
aas
leave
lock
xchg
jl
push
sarb
movsl
sub
add
dec
pop
mov
xlat
sub
dec
arpl
inc
sub
or
sbb
outsb
cmp
add
rclb
lahf
aam
cmc
call
jb,pt
or
ret
fidivrl
inc
sbb
cli
dec
sub
jbe
es
push
xor
jle
out
cltd
les
sti
into
mov
scas
lahf
fsubp
repz
adc
and
sahf
dec
adcl
loope
pushf
pop
push
and
arpl
xchg
jl
dec
lret
test
jl
xchg
or
loop
jno
arpl
out
jp
popf
sub
sbb
or
pop
pushf
arpl
xor
int3
lahf
jl
dec
aam
pop
sbb
or
rclb
insb
sub
xor
movsl
dec
cs
cbtw
sub
out
flds
nop
sub
loopne
xchg
mov
outsb
cmp
push
inc
xchg
cs
cwtl
sub
jmp
push
data16
insb
imul
test
sahf
cmp
aam
int3
jnp
stc
aas
inc
roll
stc
out
adc
jae
xchg
adc
pop
jbe
addr16
dec
dec
shlb
ret
ret
mov
into
sti
add
inc
idivb
dec
jno
mov
push
std
insl
inc
jle
je
es
outsb
dec
insb
add
les
jl
inc
xchg
or
in
add
mov
insb
sti
cmp
xchg
dec
insb
push
and
movsb
jl
imul
sbb
jl
aam
dec
xbegin
into
dec
inc
add
mov
aad
lret
sahf
push
out
xchg
jl
xchg
jbe
jb
mov
push
outsl
addb
jbe
shrl
loopne
or
xchg
dec
mov
orb
sahf
addb
and
mov
jl
or
sahf
push
mov
cmp
jb
aaa
bnd
mov
ds
xchg
dec
add
xchg
mov
les
stos
mov
jg
and
push
xchg
jge
mov
jl
mov
lds
sub
pop
mulb
sti
shr
aas
jl
repz
push
inc
movsl
jl
ss
popf
in
negb
cmpb
les
pop
sahf
jo
jl
jge
loopne
in
and
es
sbb
push
xchg
cltd
vpsrld
jl
mov
jl
push
cmp
jl
es
dec
jnp
mov
stc
cmp
in
sub
cmp
inc
scas
dec
push
call
sub
jl
cmp
mov
out
pop
jecxz
fildl
ret
adc
jnp
xor
fldcw
xorb
stc
gs
and
xor
rcrb
std
sub
sub
insb
test
xchg
fldl
mov
jecxz
mov
aad
add
and
cmp
mov
pop
sub
sub
and
jl
push
adc
push
in
jns
loopne
incb
jl
daa
sub
aad
repnz
scas
adc
pop
dec
sub
jl
fidivrs
and
in
outsb
lea
mov
stos
scas
insb
int
mov
push
push
dec
push
pop
mov
in
popf
xchg
outsb
jb
ret
push
aam
mov
mov
test
fs
std
jl
mov
and
xchg
rol
lds
int3
out
sbb
or
outsb
test
je
in
das
jl
adc
imul
or
mov
adc
jns
sub
icebp
test
fisubl
or
outsl
push
data16
sarb
jns
lea
sub
inc
sub
or
and
cmp
scas
test
ja
sbb
add
push
pop
dec
sub
mov
lds
jl
adc
pop
mov
idivl
cli
or
jl
fwait
jle
loope
add
and
pop
out
add
adc
adc
sbb
mov
outsb
cmp
pop
enter
push
aaa
cltd
adc
sub
inc
imul
mov
lods
cmpb
adc
inc
xchg
xor
dec
scas
adc
icebp
jl
or
jbe
dec
jl
mov
or
inc
pop
hlt
add
orb
rorb
sub
fnstsw
push
and
cmp
popa
mov
mov
out
and
mov
mov
div
xchg
mov
inc
mov
cld
mov
xor
inc
popf
jl
neg
movsl
jns
loopne
mov
or
xor
pop
ds
js
sub
fmulp
jg
dec
ret
es
test
je
jne
andb
scas
dec
imul
jle
pushf
sub
adc
xor
push
scas
call
in
mov
dec
sbb
lock
sarb
xor
and
jge
xchg
jnp
lahf
loope
jl
pusha
or
mov
push
in
cld
ficoml
fwait
cs
and
movsl
or
and
incb
jne
lock
sub
inc
sub
adc
divb
je
loop
dec
dec
das
stos
inc
outsb
pop
add
cmp
hlt
sbb
cmc
inc
mov
inc
popf
jne
jne
jl
fmuls
les
mov
ljmp
adc
jl
jg
inc
pushf
subl
jno
and
mov
mov
sub
mov
push
dec
dec
jl
mov
rorb
out
cmp
cmpb
sub
icebp
je
jg
mov
pop
lahf
fnsave
push
es
or
int
lret
sbb
push
imul
mov
cmpb
mov
and
nop
out
push
jl
in
push
adc
pop
pushf
xchg
mov
call
fidivrs
int3
pop
xchg
cmp
adcl
jg
bound
jae
mov
push
out
in
insb
xchg
and
rsqrtps
or
call
sub
ds
daa
in
cmpsb
cmp
stc
jl
add
push
shrl
xchg
sbb
insb
mov
jbe
jl
inc
xor
adc
pusha
mov
data16
adc
adc
cmp
mov
fsubl
fidivrs
shr
leave
sbb
jl
test
call
add
orl
jl
in
inc
mov
mov
cmp
icebp
leave
push
ret
pop
jg
push
iret
cmp
jg
jns
mov
out
insb
cmp
inc
xchg
cmp
icebp
xchg
fisubs
aad
mov
scas
mov
idivb
inc
add
push
mov
mov
ffree
movb
fcoml
xor
into
dec
ss
fwait
mov
std
ret
fs
repz
es
fwait
cmp
jo
add
test
dec
push
and
pop
movsb
or
add
shl
dec
mov
mov
aad
jbe
fwait
imul
jnp
add
or
jl
sbb
aam
pop
mov
insl
in
jmp
or
xor
popa
orl
sub
jnp
dec
jb
add
sub
dec
jl
out
cltd
pop
push
mov
mov
push
adc
add
ss
arpl
lcall
push
aad
jl
outsb
movsl
insl
xchg
sub
jmp
imul
and
je
jbe
push
jns
ficoml
jl
sbb
es
stc
test
mov
push
xchg
dec
std
jle
out
ret
push
dec
push
inc
pop
xchg
adc
mov
jnp
mov
je
sbb
lcall
pop
jl
decb
xor
out
pop
hlt
sub
mov
jl
adc
test
dec
push
sub
add
imul
dec
cmc
cmp
int3
rorl
or
hlt
insb
icebp
mov
and
sub
rorl
cmpb
dec
iret
push
loopne
jl
movsb
mov
dec
dec
or
jnp
mov
mov
sub
insb
jecxz
cld
xchg
push
cmp
aad
sub
mov
sub
mov
pop
es
push
add
repnz
xchg
jl
out
movq
jl
test
pushf
sbb
inc
call
pop
or
push
push
jl
aad
inc
in
dec
out
mov
cmp
mov
jns
jl
mov
xchg
aad
xor
std
and
mov
sub
ror
or
xor
dec
jnp
popf
test
inc
xchg
cmp
out
cmp
push
les
imul
sbb
mov
out
mov
loopne
push
dec
dec
fldl
or
jl
inc
fcmove
inc
and
mov
cwtl
cmp
enter
push
dec
xchg
sub
jg
jge
inc
inc
pop
push
jnp
je
cmpsb
mov
jl
push
add
ret
push
jp
cmp
insb
insb
out
xchg
cmp
aas
add
pop
data16
bnd
dec
in
push
inc
cmpsb
push
jl
xchg
test
hlt
push
in
stos
jl
cmc
pop
dec
xchg
add
adc
jp
sbb
xchg
mov
mov
das
inc
cmpsb
loop
or
mov
aaa
ret
cmpl
pop
sbb
jae
data16
xchg
inc
pusha
and
cmp
fistpl
clc
push
popa
inc
pop
fistpll
pushf
or
push
dec
xlat
add
adc
sti
jl
pop
lret
scas
xchg
fnstcw
xchg
cmpsb
les
xor
xor
add
sarl
mov
stc
stc
jl
cmp
cmp
sarl
into
sub
xor
pop
adc
out
cmp
sbb
adc
push
cmp
mov
pushf
fs
inc
lret
popf
push
lahf
and
push
jl
inc
divb
insl
jl
add
ret
or
and
pop
roll
fisubs
mov
call
inc
lcall
aam
cmp
pop
and
frstor
push
xchg
rcrb
shrl
or
ja
xchg
inc
jl
push
mov
add
push
pop
and
add
mov
movsl
int
jnp
cmp
mov
sahf
bound
jnp
dec
fnstsw
roll
and
lcall
rorb
sbb
jo
cmp
repz
push
push
xor
jae
adc
lods
push
jl
shll
add
je
jns
rcrl
mull
mov
cmp
repnz
js
popf
jbe
fisubrl
mov
test
xchg
roll
lcall
jmp
fs
shlb
in
bound
mov
fsubl
xchg
ss
popa
mov
xchg
sub
inc
jl
pop
mov
pushf
jl
mov
fisttps
jl
inc
shlb
ljmp
jl
stos
out
les
add
fwait
inc
andl
addb
jl
jp
out
aaa
mov
notrack
jnp
or
sahf
mov
mov
dec
ja
arpl
push
or
pop
add
fwait
fs
popa
jl
push
cmp
sub
or
xor
add
sub
add
fnstsw
cmp
jl
push
xchg
lds
shrb
mov
rcrw
mov
pop
push
lret
enter
ljmp
jge
adc
push
loope
xor
jne
mov
arpl
jl
mov
or
iret
test
aad
push
sub
xchg
repz
shl
pop
jl
push
lahf
es
shr
fisubrs
jbe
jge
jl
mov
lret
aam
mov
loopne
jns
lcall
xchg
push
and
ds
loopne
rorl
add
and
jl
aaa
adc
xor
insb
je
imul
test
xchg
jb
fadd
cmp
loopne
adcb
in
fwait
nop
shll
pop
fs
mov
dec
loope
jl
xchg
mov
subb
sarl
fsubs
nop
jl
addr16
mov
int
jl
outsb
addl
out
js
in
jl
sub
xor
xchg
inc
adc
call
iret
lock
inc
mov
in
jnp
test
add
arpl
adc
fdivrs
sbbl
inc
pop
xchg
loopne
insb
dec
push
es
in
rclb
sub
outsb
pop
jl
pop
out
mov
in
jmp
jl
mov
jno
jl
nop
mov
shr
jne
inc
inc
cmp
mov
jl
lret
cmp
xor
stos
test
pop
adc
sub
jbe
mov
jl
into
fmuls
jnp
popf
dec
mulb
push
incb
jnp
xchg
add
mov
jno
in
fcoms
cmp
add
lcall
or
or
xchg
jp
fwait
xchg
pslld
xor
aaa
ficomps
imul
add
insb
arpl
lods
ret
jl
cmpsl
xor
out
mov
push
lods
test
add
mov
inc
scas
xchg
hlt
and
jo
imul
cmp
jl
aaa
bound
fwait
mov
mov
inc
sub
and
sub
adc
push
test
xor
adc
jl
lcall
in
out
sti
cmp
mov
stos
jl
mov
cld
loopne
hlt
loope
lret
jb
jno
pop
insl
jp
jo
mov
leave
and
mov
ljmp
add
xchg
scas
jl
outsl
stos
divl
aam
or
leave
jp
or
jl
mov
xchg
jl
xor
fdivrl
sbb
and
fisubrl
or
jbe
xchg
and
cmc
fldenv
jno
jge
mov
sbb
pop
test
fwait
insb
insl
push
dec
sbb
cmp
jp
mov
mov
sbb
out
std
cmp
es
dec
mov
jl
in
and
and
sbb
cmp
movsb
mov
sbb
insb
mov
xor
in
or
subb
sbb
jl
mov
or
jl
jecxz
lods
fldln2
gs
fsubrl
out
jbe
daa
jnp
repnz
out
test
add
in
inc
xlat
icebp
cld
jg
jnp
jmp
test
and
jbe
add
jnp
cmpsb
sub
into
sti
jl
inc
adc
aaa
jnp
arpl
mov
pop
icebp
dec
cwtl
iret
cltd
insb
sti
mov
addl
or
in
cmp
jl
cmp
and
rorb
adc
je
cli
out
loopne
inc
out
push
mov
jl
daa
roll
in
mov
push
jl
rorb
xchg
jo
stos
mov
jno
xor
push
dec
loop
jl
loopne
rcrb
cmpb
sbb
add
and
cmp
adc
in
push
sbb
pop
imul
mov
sub
cmc
je
add
lds
aam
je
loop
jecxz
jl
sahf
pandn
mov
jl
dec
sbbl
popf
adc
outsb
xchg
push
cmp
in
xchg
insb
add
cmp
popf
adc
push
jl
push
xor
ret
cmp
mov
xchg
push
std
scas
sub
inc
mov
and
insl
push
sub
dec
xorb
add
xchg
mov
fisttpl
xchg
push
add
inc
imul
call
mov
inc
outsl
inc
pushf
add
fst
mov
mov
push
outsl
dec
pop
jl
add
ljmp
lods
xor
jl
mov
loope
inc
xor
std
fxch
in
loop
lods
jl
imulb
xor
or
enter
test
out
cmp
insl
xchg
cmp
je
dec
leave
icebp
nop
jae
mov
sub
dec
jnp
lret
in
fwait
outsb
mov
call
pop
jae
repz
mov
cltd
fadd
sti
jl
aaa
pop
or
cmp
xor
test
cld
in
pop
inc
addl
mov
sbb
aam
loop
jp
xchg
adc
mov
push
mov
loopne
fldl
mov
and
je
hlt
dec
sbb
sub
lock
insb
repnz
dec
mov
gs
lret
aam
and
sbb
stos
aaa
inc
mov
mov
xor
jl
xchg
lret
sbb
jle
sub
dec
stc
test
bound
cmp
cld
push
inc
jnp
nop
shll
je
sub
in
mov
ret
lret
dec
jl
push
fdivp
sbb
and
jne
adc
insl
enter
add
stos
or
push
jp
fwait
push
or
std
add
bound
fucomi
xchg
sbb
adc
gs
mov
pop
pop
loopne
pop
and
pop
ljmp
mov
xchg
mov
adc
jg
loop
jl
cs
jl
rcl
shll
fdivrs
aam
xchg
aaa
dec
cmp
imul
mov
ja
sub
inc
pop
in
inc
je
or
xor
push
jae
loopne
jl
loop
xchg
aas
imul
sbb
mov
sub
bound
dec
out
mov
inc
xchg
adc
jnp
mov
popf
ja
cmp
jp
scas
cld
sub
pusha
icebp
shlb
jnp
jb
pop
mov
push
xor
aad
mov
and
xchg
push
out
sbb
mov
rcr
shll
inc
sub
adc
sarb
notl
call
or
leave
xor
test
sarb
xchg
pusha
add
mov
movsb
aad
insb
movsb
lea
mov
dec
dec
xchg
idivl
mov
and
lahf
mov
out
jle
arpl
jo
repnz
sub
mov
lods
iret
cmpsl
repnz
nop
lahf
testl
outsl
mov
inc
mov
jb
jo
mull
cmp
pop
mov
ja
sbb
push
in
xchg
sbb
pop
and
insb
jp
jne
push
test
push
xor
push
sarb
in
dec
or
mov
ss
lods
xor
aam
jbe
or
jl
xor
mov
mov
or
icebp
adc
daa
in
and
movl
mov
lods
cmp
fwait
inc
push
mov
test
jae
mov
adc
jmp
aaa
jl
adc
cmpl
daa
sub
jmp
fldenv
test
stos
push
and
adc
fidivl
lret
pop
aaa
mov
jl
rcl
adc
inc
xchg
cld
jl
push
lahf
daa
ss
arpl
cmp
adc
hlt
adc
lret
iret
pop
dec
test
stos
imul
lods
add
push
add
loopne
insb
scas
hlt
lock
aaa
jl
repnz
sti
and
iret
jl
cmp
addb
test
pusha
xchg
in
jl
cld
fmull
inc
sbb
mov
movsb
xchg
test
jl
adc
push
sbb
pop
leave
and
or
icebp
iret
pop
imull
shrl
aas
mov
sbb
sub
xchg
push
loop
xor
test
mov
sub
daa
pop
fcmovne
sti
sbb
xor
pop
lcall
ljmp
jl
fisttpl
into
pop
stos
and
inc
aas
jl
test
outsl
cmpb
jnp
add
fs
stc
fnstsw
into
cmp
movsl
enter
loop
mov
mov
mov
inc
and
jo
push
jl
push
scas
imul
xchg
push
jl
ficomps
mov
jl
iret
xor
test
jbe
mov
adc
push
mov
sub
sub
pop
hlt
aam
ljmp
or
popa
jp
stos
icebp
mov
insl
ss
cltd
out
mov
in
pushf
cmpsb
mov
mov
inc
mov
jge
in
cmp
or
pop
int3
adc
aad
dec
mov
mov
xchg
lret
movsl
popa
and
je
bound
inc
dec
jl
pop
mov
int3
shlb
mov
and
jl
mov
add
fwait
push
jl
stos
imul
jl
rol
shll
add
mov
movsb
pop
jae
loop
mov
ret
inc
sbb
push
cwtl
dec
pop
sbb
dec
dec
inc
mov
loopne
pop
xchg
call
sahf
mov
dec
test
jp
fdivrs
out
xchg
bswap
cmc
jl
and
adc
jl
cmp
cmp
inc
call
jns
out
ja
push
sub
test
clc
mov
stos
rorb
in
jg
sbb
xchg
pop
jbe
repnz
xchg
mov
mov
mov
faddl
addr16
mov
aam
je
and
leave
dec
xchg
cmp
push
imul
gs
lea
dec
xchg
jl
lahf
mov
sub
movsb
aam
and
mov
sbb
insl
dec
je
bnd
fwait
push
jl
inc
pusha
lds
inc
jl
xor
les
test
cli
std
call
js
fdivp
cmpb
jae
push
xor
lret
and
mov
jp
pop
jl
push
pop
xor
loopne
shl
jb
jl
ret
mov
fisubl
push
mov
fs
mov
iret
test
xor
pop
mov
out
mov
jnp
popf
sbbb
inc
jl
or
daa
cwtl
test
out
cmp
xor
dec
pop
fimull
mov
outsl
lea
jno
add
lret
cmp
jb
and
jl
cwtl
inc
lods
test
es
cmp
jge
add
jl
pop
cmp
xor
or
in
push
jl
dec
pop
rcr
dec
mov
jl
stc
cvtdq2ps
ret
jl
sub
jo
jl
test
mov
insb
sub
cli
push
jmp
pop
dec
push
stos
insb
jg
fsubp
jmp
les
bound
gs
pushf
or
cmp
pop
sbb
bound
ljmp
jp
imul
mov
inc
adc
jns
push
ret
cli
call
les
add
cmpsb
cmp
sahf
fisubl
sbbb
mov
out
in
loope
cmp
jae
jl
inc
ds
adc
mov
je
or
jnp
xchg
jnp
lret
test
cmp
orb
mov
mov
sub
ds
xor
fnstcw
mov
in
mov
rep
fdivl
stc
aam
dec
xchg
add
cmpb
clc
add
lods
mov
pop
jl
rcll
sub
cltd
stc
call
add
jmp
arpl
push
push
test
stc
inc
inc
cld
inc
cmp
sbb
xchg
mov
jl
pop
push
pop
fstps
fcmovnbe
dec
cmpl
out
mov
je
test
jno
inc
ja
test
xchg
cmp
cmp
push
scas
adc
loope
insb
mov
mov
lcall
pop
popf
pop
xor
jl
add
scas
nop
mov
mov
shll
ret
mov
cli
jns
push
lods
inc
inc
pushf
sub
jge
jns
mov
arpl
jl
pop
mov
int3
dec
lods
or
pushf
xchg
jl
and
adc
vpaddusw
jl
in
mov
jl
push
push
and
add
insb
push
mov
push
fistl
outsl
je
mov
mov
add
jl
add
rcll
or
add
rolb
call
gs
movl
or
sub
shll
inc
or
mov
loopne
lret
mov
ret
sbb
testl
ljmp
push
rorl
xchg
mov
mov
loope
sbb
movsb
add
jl
pop
dec
push
xor
loop
psubsw
add
add
jl
movsl
jb
jle
mov
je
pop
mov
fsubrl
pop
jl
fcmove
xor
cmp
or
jl
add
in
lcall
dec
out
jns
add
push
jbe
push
adc
jl
loopne
push
rcll
inc
fidivrs
in
js
mov
imul
jge
mov
and
aaa
pop
push
jl
out
cli
dec
jb
and
data16
bound
jl,pt
mov
popa
adc
lret
push
cmp
aas
push
sub
pmuludq
fmul
in
and
pop
sub
fisubl
jle
ss
inc
jl
cs
mov
xor
push
jl
rcrb
mov
and
das
mov
les
ss
test
jl,pn
stos
insl
incl
call
xchg
dec
cmp
mov
es
mov
or
std
inc
scas
bound
decl
jl
rclb
movsb
mov
stc
enter
cmp
daa
jl
stos
mov
fsubs
jae
in
data16
dec
cmpsl
jmp
movsb
test
movsb
pusha
cmpsb
and
cld
push
fistl
insb
jle
push
mov
in
lret
shrb
ljmp
xor
sarb
in
cs
jl
aad
mov
cmp
gs
pop
ficomps
inc
mov
xchg
jl
and
xor
hlt
cmp
lret
jl
mov
sub
jl
push
neg
cs
insb
call
sub
imul
dec
daa
sbb
jl
push
jecxz
and
mov
mov
stc
mov
add
xor
mov
cmp
push
setno
cmp
jge
aaa
sub
inc
lret
sub
jns
mov
push
out
hlt
add
add
mov
mov
iret
imul
cmp
bnd
out
dec
mov
inc
push
jl
cmp
mov
in
jl
adc
pop
sbb
mov
pop
ss
sub
jl
loope
fidivl
push
out
repnz
movsb
pop
call
cmp
fcoml
jp
sbb
sub
loop
inc
in
enter
mov
cmp
ja
adcb
hlt
ror
mov
sarb
and
or
sbb
jl
cld
mov
push
stc
xor
icebp
lcall
ja
sub
shlb
fildll
inc
push
adc
ss
nop
fsubl
sub
movsb
pushf
mov
xchg
incb
push
jl
push
sti
out
daa
and
jl
adc
in
ljmp
xchg
jl
aas
and
cli
jge
test
sub
lret
leave
jno
gs
aaa
push
in
into
jl
mov
sahf
adcb
jnp
lock
lcall
push
jmp
dec
mov
mov
fnsave
sarb
ljmp
jl
es
cwtd
add
fstpt
addr16
add
insl
xchg
xchg
sbb
cmpsl
imul
das
pusha
xor
mov
adcl
jl
hlt
dec
mov
cs
jl
or
lods
popf
or
jl
add
imul
stc
inc
jmp
jns
sbbl
push
push
call
sub
clc
stc
add
xchg
jg
push
divb
push
mov
lret
dec
jl
imul
addl
jg
jl
sbb
dec
jl
and
push
dec
into
xchg
jl
lahf
loope
lds
mov
lea
push
inc
jl
push
icebp
jb
and
and
cmp
jl
mov
sub
insb
inc
jl
pop
or
loope
sbb
std
pushf
add
fiadds
cmp
sub
sub
cwtl
lods
xor
pop
inc
jecxz
jl
sub
jl
dec
cmpsl
andb
notb
pop
sub
mov
push
push
adc
insl
sti
cmp
test
insb
inc
scas
xor
cmp
jl
xlat
pop
jo
arpl
insb
and
rcll
test
sahf
pop
loopne
std
lods
mov
mov
jb
bound
leave
jl
test
dec
pop
mov
pop
add
das
push
repz
fidivrl
dec
xchg
hlt
sub
inc
push
jnp
sub
arpl
mov
xchg
jnp
adc
jg
nop
pop
sahf
xor
test
inc
in
daa
jmp
mov
jae
repz
dec
and
cmp
aam
or
jbe
jl
gs
loopne
lock
es
call
cmp
cltd
out
insl
jbe
xor
sbb
push
inc
cmpb
scas
fcmovnbe
ret
mulb
stc
mov
fsubrs
in
cmp
mov
pop
sbb
xchg
pushf
jge
movsb
cmp
mov
or
loopne
iret
andb
jns
jl
xlat
lcall
es
inc
jge
and
shll
int3
mov
push
fsts
stos
xor
aad
addr16
adcl
mov
sub
test
rcr
push
push
mov
loopne
sbbb
mov
push
loope
fiadds
jl
pop
enter
sbb
out
les
xchg
jl
daa
mov
mov
gs
jle
add
sub
test
jo
cmc
das
movsb
cmpl
cmp
dec
loopne
jp
popf
je
add
or
dec
insb
add
sub
pushf
and
jge
int3
test
jl
push
jl
and
xlat
stos
adc
popa
jl
mov
adc
jl
and
cmp
fisttps
in
or
fstpt
sbbl
cltd
movsl
xchg
or
push
jl
fistl
xchg
lock
jne
cld
les
cli
jl
or
cmp
ret
pop
cmp
push
mov
and
stos
xchg
imul
shlb
es
addr16
jne
jl
test
sub
cmpsl
xchg
pop
push
push
in
or
ja
test
sbb
dec
in
dec
jg
xor
addr16
jl
sub
lcall
fsubrl
jp
sub
jl
fnsave
rolb
and
jns
push
jb
fsubl
aad
or
testl
or
imul
cmpsl
mov
lret
and
es
push
lods
mov
iret
nop
insb
popf
or
stos
jl
test
mov
imul
mov
add
cmp
sbb
push
or
test
inc
jl
mov
jle
sub
loop
add
xchg
gs
jle
xorl
or
dec
cmp
dec
push
inc
mov
fwait
mov
sub
sarb
repz
mov
jmp
lds
jl
jmp
or
adc
jns
inc
xor
orb
test
pop
inc
pop
mov
fnsave
cli
stos
jl
lret
sbb
jl
mov
das
dec
popa
movsb
test
aad
and
push
inc
pop
and
jb
add
mov
jl
push
mov
loop
lret
xchg
mov
stos
or
cmpsb
fnstenv
pop
cmc
jge
int3
mov
jp
mov
rolb
mov
cmp
xchg
xor
pop
movl
addr16
in
mov
cmpsb
loope
popa
cmp
mov
jno
repz
mov
mov
push
test
adc
dec
clc
insl
jl
and
push
dec
jns
mov
jne
jbe
adc
aas
push
jge
fdiv
jl
orl
inc
mov
dec
inc
pop
pop
pop
jl
sahf
fstps
xor
cmpsl
cmp
mov
insl
jl
int
mov
icebp
dec
mov
rcl
push
sbb
inc
aas
daa
jl
pop
xor
lods
inc
stos
outsb
cmp
lock
insl
test
jl
mov
movsb
enter
aam
inc
push
pusha
add
jl
in
nop
cli
fldenv
cmpsb
dec
out
jl
rcrb
dec
push
push
cmp
in
xlat
jno
cmp
pusha
pop
push
or
ret
cmp
fldt
clc
popa
jl
call
dec
or
fisubs
push
out
and
scas
cmp
jns
jl
mov
cmp
call
subb
je
jnp
filds
mov
bnd
inc
lds
xor
aaa
xchg
je
cmc
sbb
xorl
sbb
add
pop
ret
jl
aas
test
dec
adc
sub
sbb
jne
add
jl
sarl
mov
gs
loop
cmp
jo
lea
adc
lds
sub
inc
cli
xchg
inc
dec
jo
add
stc
out
or
sub
fs
jle
push
xor
or
movsl
jmp
mov
jo
cmpsb
xorb
outsb
mov
inc
inc
add
mov
jbe
scas
dec
jl
dec
xchg
stos
xchg
ret
jl
push
clc
mov
jno
and
sbb
push
fwait
clc
imul
jns
jno
jnp
dec
and
mov
ds
push
jnp
mov
mov
cmpb
dec
das
or
xchg
mov
sahf
xor
inc
jns
mov
jl
mov
push
sbb
inc
ret
push
mov
xchg
in
xchg
jl
lcall
outsb
inc
jae
jl
in
pop
std
or
mov
pop
mov
outsb
add
insb
jl
pop
lds
outsl
dec
or
test
jecxz
ljmp
jl
movl
jl
fcompl
aas
jl
aaa
mov
lcall
xorl
je
aas
out
push
leave
daa
lods
dec
inc
sbb
dec
dec
push
mov
push
inc
push
sub
sub
adc
jl,pn
push
xor
add
inc
adc
jle
xchg
lods
mov
and
jl
ror
div
out
fs
mov
scas
call
dec
fldl
or
pop
movsb
sarb
lock
jne
lea
add
mov
add
insb
in
inc
mov
cmpl
xor
sub
iret
lret
stos
mov
add
data16
sbb
add
mov
mov
xchg
push
jl
scas
xlat
jae
dec
dec
test
xor
and
daa
sbbb
mov
sub
mov
pop
idivb
sub
jl
pop
push
cmp
data16
jl
test
lea
mov
insb
sub
int3
or
mov
inc
jne
lock
icebp
mov
sub
dec
push
cmp
push
mov
and
mov
mov
imul
adc
shl
xchg
sub
gs
cmp
jl
in
mov
or
mov
xor
jl
pop
xchg
inc
and
call
and
das
pop
cli
sahf
cmpb
pushf
push
repnz
outsb
mov
jne
call
adc
push
daa
or
cmp
in
jl
cli
xor
jl
mov
mov
imul
lods
dec
sub
xchg
xorb
ret
scas
bound
jl
add
fdivl
or
aad
cmp
xchg
jg
and
call
jp
insl
jl
ds
mov
loopne
adc
aas
push
je
addb
ja
mov
scas
jl
or
imul
inc
jns
jl
dec
jae
add
bnd
movsb
insb
add
imul
or
cmp
ljmp
sub
cwtl
std
add
jl
mov
cs
mov
xor
cltd
push
dec
fbstp
jnp
push
fstpt
or
testb
push
push
cmp
fsubr
popa
pop
fdivrp
xlat
arpl
push
cs
jb
fcom
cltd
adc
lds
inc
cli
cmpl
scas
stc
jg
jl
sub
jns
cmp
popl
inc
insb
mov
jmp
and
je
add
fs
loope
push
sahf
jge
test
inc
xlat
cmc
in
push
cmp
fstpl
jo
and
clc
mov
andb
cmp
push
mov
mov
sbb
dec
push
and
adc
popa
jg
lret
test
call
sbb
fcompl
out
fstl
push
jb
xor
pop
jg
aad
cmpsb
jmp
loope
cs
jo
add
xchg
adc
sbb
cmp
jl
push
rcrb
shlb
movsb
loopne
jl
cwtl
adc
inc
in
and
mov
jno
icebp
pop
loope
inc
jl
push
pop
push
jl
jnp
jle
push
rclb
in
lea
mov
and
dec
lret
pushf
mov
jl
mov
shll
mov
dec
mov
jl
add
jmp
xlat
fidivrs
std
lahf
jl
cmp
cmp
inc
mov
cmp
inc
cli
les
jl
push
sub
jb
adc
jl
push
icebp
mov
sub
insb
cltd
pop
push
push
sub
clc
enter
aam
js
cmp
fmull
ljmp
lods
push
mov
push
setb
insl
xorb
jnp
out
pop
in
xor
int
cmp
js
inc
fisubs
cmp
addr16
pop
push
test
sbb
cmp
push
inc
jl
cmc
cmp
std
add
sub
jl
sbb
shlb
sti
jl
out
cmpsb
loope
movsl
stc
jl
push
enter
xchg
sub
mov
aam
jl
mov
jge
mov
push
xchg
shll
frstor
les
jp
daa
jl
sub
rolb
into
jl
adcl
jmp
cmpsb
pop
lea
lret
dec
aad
outsl
fwait
mov
leave
xchg
jns
insb
shrl
aad
fwait
dec
mov
sub
test
or
and
repz
jnp
popf
xchg
xor
stc
aaa
outsl
sbb
movsb
movsl
std
cmpb
shl
pop
sub
adc
xchg
sub
add
shrb
popf
or
outsb
mov
addb
jae
fimuls
jl
jbe
pop
int
mov
xchg
jmp
jae
nop
jl
jne
ds
std
dec
jl
in
inc
clc
xchg
dec
fidivrs
mov
in
mov
add
jnp
xor
pop
mov
cmp
push
ret
xchg
jl
fimuls
cltd
cmp
jae
andl
xlat
scas
jl
dec
call
cwtl
jl
pop
or
fadds
cmp
fwait
pop
rolb
and
in
ljmp
xchg
mov
xor
adc
or
fsubl
jnp
mov
jp
jle
ljmp
rolb
test
lret
stos
loopne
or
sbb
mov
inc
aaa
jb
cmp
jl
cmp
pop
test
cld
lret
inc
ret
shlb
mov
call
fs
xchg
mov
jne
insb
cmpb
pusha
pop
fistpll
arpl
xor
pop
jl
addr16
cmp
loopne
xchg
jb
aam
mov
test
and
push
fimull
jae
jl
out
cmp
add
leave
test
insb
mov
add
jne
jl
fisttps
out
mov
in
stos
fnstsw
popf
dec
cmp
mov
cli
cli
or
and
jl
pop
in
push
mov
pop
jl
clc
mov
call
inc
fs
jae
jl
adc
mov
mov
sub
jns
dec
fdivrs
cmp
sbb
mov
and
push
mov
xchg
mov
stos
mov
jl
inc
xor
add
pop
movsl
testl
push
jne
mov
ja
jo
xchg
xchg
jbe
dec
ss
clc
hlt
cmp
jl
das
int3
fwait
mov
sub
fdivp
rclb
in
cmp
mull
dec
inc
fs
pusha
add
cltd
or
jb
jmp
das
lds
adc
adcb
aaa
cmp
jl
adcl
out
xchg
out
ret
ljmp
cmp
fcoml
fstpt
or
in
test
scas
jl
mulb
test
fistl
leave
add
cmp
and
cmpsb
in
aad
jl
jg
cmp
xchg
fnsave
clc
cmp
mov
ret
addr16
test
jl
jecxz
pop
js
xchg
jl,pn
mov
sub
jl
in
pop
lea
lods
jl
and
fimuls
adc
push
loopne
jns
out
jl
mov
jnp
cmp
stc
jl
lret
sub
mov
jl
imul
jbe
fidivl
sarb
inc
xor
or
adc
jno
sub
jnp
mulps
dec
shrl
scas
mov
adcb
sarb
iret
mov
and
imulb
or
mov
jl
enter
pop
sbb
xchg
sahf
cmp
adcb
add
xchg
fwait
out
jecxz
mov
mov
jl
sub
add
xor
je
js
mov
fwait
iret
mov
cmp
pop
je
sub
xchg
push
cltd
pusha
mov
pushf
inc
mov
xor
insl
leave
xchg
xor
sub
cli
aaa
jge
sub
jl
pop
outsl
test
jl
add
movl
sub
in
add
mov
sub
sub
xor
push
jl
ret
fisttps
jno
jl
sub
xor
jl
loop
mov
inc
test
jle
arpl
fistpll
jns
jl
stos
fimuls
pop
pop
test
insb
dec
push
cmpl
sub
jl
or
adc
scas
mov
and
mov
test
inc
pop
dec
jl
ds
aam
or
sbb
test
xor
dec
and
jge
jl
jno
or
lea
mov
call
cld
pop
xor
or
test
insb
jl
lods
inc
imul
in
jnp
js
fs
push
insb
loope
push
xchg
jne
inc
dec
pop
sbb
cmp
scas
inc
lea
dec
sbb
push
dec
icebp
or
mov
xchg
imul
jmp
ljmp
adc
xor
mov
cpuid
fidivrs
fists
jl
dec
adc
fmull
cmc
cmpsb
xlat
aad
icebp
mov
fistpll
inc
fldl
loope
scas
cwtl
push
stos
jp
int3
add
adc
push
pushf
cmp
dec
xchg
jge
or
push
jo
insb
sub
push
jl
imul
sub
rclb
test
xor
js
jl
mov
das
sub
cli
xchg
aaa
insb
pushl
adc
dec
xor
loop
push
jl
add
mov
arpl
xlat
and
je
outsl
test
jb
push
je
int3
adc
sbb
ja
scas
cli
daa
push
pop
xor
mov
sub
mov
mov
dec
and
mov
out
iret
outsl
mov
and
data16
xchg
cmp
test
popf
fdivs
cmp
jno
jl
int
xchg
addb
sub
add
lea
jl
stos
fimuls
cmp
add
jl
int3
add
sahf
lds
cs
fldl
cmp
fmuls
scas
pop
fs
dec
jge
aad
test
mov
ja
imul
sarl
scas
sahf
aad
sarl
mov
rclb
stc
je
add
mov
add
jl
cmpsl
adc
std
test
inc
mov
jle
dec
mov
rcrl
xchg
lods
push
jl
jge
mov
mov
fstpt
imul
jg
out
push
call
into
sub
div
in
push
jl
push
push
mov
jl
or
jmp
push
jl
adc
pop
aad
mov
mov
adc
cmp
fstpt
std
lds
test
xchg
cmp
repz
addb
dec
in
stc
mov
icebp
insb
fstpl
mov
ret
dec
push
push
es
in
mov
or
and
pusha
cmpsb
add
cmp
mov
push
mov
popa
movsb
adc
adc
call
bound
mov
add
out
sub
repz
or
mov
shlb
addb
movsl
sub
push
cmp
je
ja
sub
int
test
or
test
mov
cs
jl
rolb
cmp
inc
push
lret
and
das
jl
int3
repnz
jno
xchg
es
push
xlat
test
lods
inc
icebp
mov
jl
aam
jo
xchg
xor
jl
ret
adc
lcall
mov
popa
addr16
sti
pop
jl
into
adc
stc
cmp
jl
xchg
pop
jbe
mov
insb
mov
sahf
in
gs
jbe
xchg
sub
jl
pop
rolb
jl
in
mov
sbb
cmp
jo
ss
inc
mov
pop
cli
jb
and
pop
cmp
dec
pop
loop
sbb
jb
rcr
fdivrl
sub
loope
les
jl
mov
cmp
xor
das
movsb
push
pushf
xchg
sub
dec
or
inc
sub
xor
inc
shr
sbb
fldt
cmp
or
popa
cli
leave
insb
xchg
nop
inc
mov
jmp
call
sahf
jg
jo
test
xor
xor
add
inc
mov
mov
mov
adc
fwait
xchg
pop
cmc
adc
xchg
xor
jnp
filds
sub
cmp
adc
inc
mov
xchg
adc
mov
dec
jmp
lcall
lahf
roll
outsb
das
lret
jl
iret
orl
inc
sub
jno
add
xchg
jl
cmp
jb
cmp
jl
daa
xchg
mov
jl
loope
mov
jl
loop
push
pop
rol
pop
jl
push
pop
xchg
fisttps
dec
jl
push
ficoms
aaa
ret
icebp
mov
je
inc
or
repnz
mov
xlat
pushf
ja
jo
jl
push
mov
dec
jl
lock
jmp
pop
es
push
push
add
mov
icebp
jl
xchg
call
xchg
jl
aaa
leave
cltd
out
mov
xchg
out
inc
and
sub
mov
gs
push
add
jl
inc
ret
sbb
dec
js
out
jecxz
fstpt
push
dec
in
dec
jl
lahf
push
push
or
rcrl
loop
xor
pop
repz
push
jl
xor
ljmp
fwait
or
je
xor
fwait
inc
cmp
cmpsl
lea
mov
push
insb
inc
call
fistpl
pop
leave
je
xchg
unpckhps
push
add
pop
jnp
popa
sub
fcmovbe
push
or
dec
iret
pop
mov
fistpll
call
adc
movsb
test
dec
insb
cmp
inc
fnsave
ds
lcall
fmull
jl
aam
fwait
xchg
and
jl
loop
ljmp
xor
or
jae
imul
mov
int3
leave
pushf
push
sbb
and
and
ss
mov
sub
call
insb
jbe
call
mov
ljmp
jl
push
xchg
inc
cld
roll
sbb
ss
inc
jno
add
adc
rorl
xorb
sbb
scas
stc
iret
sahf
pushf
jle
sub
push
inc
or
jle
inc
sub
cli
sti
insb
push
and
bound
dec
pop
jl
repz
aad
mov
jl
das
adc
test
jl
mov
xor
sbb
cltd
push
btc
mov
or
loopne
xchg
mov
out
outsl
rclb
popa
inc
ret
dec
fisttpl
insb
jmp
movsb
int
push
lods
test
jns
pop
xor
loope
je,pn
push
cmp
sbb
pop
into
lret
outsb
sti
test
rcr
je
fsubrs
mov
jl
push
rcrb
cld
push
jl
sub
add
lahf
std
jne
pusha
cli
ficompl
jl
push
pop
xlat
insl
lock
aaa
inc
sub
jno
push
inc
pushf
dec
jns
jo
fwait
adc
je
push
mov
push
bound
xor
fstl
or
je
jnp
std
leave
dec
jp
cli
sub
jl
adc
mov
sub
int3
lods
fwait
cmpl
pushf
in
or
cmp
xchg
mov
stos
mov
dec
ds
push
fs
mov
or
loope
adc
ljmp
insb
popf
push
in
arpl
add
jl
fsubrl
xlat
sub
adc
dec
push
push
cmp
push
shl
cmp
jl
jmp
aas
stos
inc
pop
ret
popf
sbb
out
clc
or
inc
mov
adc
out
out
jg
inc
pop
mov
lcall
add
repnz
lods
movsb
jl
mov
dec
xchg
sbb
inc
sbb
ret
xchg
add
inc
int
mov
mov
inc
jo
in
test
adc
test
cmc
call
call
jnp
and
push
mov
jl
adc
or
fisubrl
adc
mov
rcrl
jl
hlt
xchg
sbb
pop
mov
inc
punpckhwd
inc
adc
cmc
jbe
dec
add
cmp
cmpsb
aad
je
scas
test
jmp
int
mov
mov
mov
je
shlb
fwait
jl
xchg
loopne
adc
imul
cltd
add
or
sub
jb
adc
cwtl
insb
xor
pop
jl
ljmp
jl
fs
addl
in
fsubr
mov
sub
in
and
mov
test
cmpl
fstl
jne
lock
orb
jl
cltd
pop
xor
sbb
mov
push
aaa
pop
mov
call
mov
dec
mov
push
dec
lret
lahf
jb
es
inc
and
or
mov
ss
mov
add
jl
pop
xchg
jne
jl
rorb
and
test
jl
add
sub
stc
and
adc
add
push
add
jl
aam
mov
jl
clc
leave
out
fidivrs
loopne
scas
popf
xor
jo
or
sbb
pusha
cmp
jl
cmc
sti
xchg
cmpsl
mov
dec
ss
lret
aam
enter
repz
jl
dec
jecxz
jle
jl
sahf
dec
cli
jmp
mov
int3
push
stc
push
xchg
push
insb
rcll
pop
jl
pusha
add
xor
enter
nop
or
sub
pushf
inc
fs
adc
jl
and
clc
lahf
daa
inc
les
jns
fxch
pop
in
xchg
xlat
cmp
sbb
dec
imul
sbb
cli
xor
sbb
outsb
push
jno
xor
jge
push
push
lahf
sbb
jl
sub
js
sub
mov
lahf
call
dec
push
jmp
movsl
xor
xchg
pop
cs
xorl
insb
test
test
and
fistpll
sbb
not
test
cmp
add
imul
cltd
fidivrl
je
add
lods
lret
inc
adc
cmpsb
inc
fstpt
outsb
insb
loop
insl
mov
fstl
fcoms
jb
push
lcall
add
loop
pop
dec
jg
dec
idivl
popf
fidivrs
shl
jl
lea
addl
iret
ret
repz
push
jp
pop
pop
push
dec
jg
jl
dec
ljmp
cwtl
out
cmp
js
std
pushf
adc
aad
jl
inc
cmc
push
xchg
out
es
insl
push
jl
lea
test
and
ljmp
bsr
mov
jl
call
cmp
lcall
lea
movsl
andl
lods
add
aas
jl
cmp
jl
add
test
jle
inc
dec
ljmp
mov
or
lods
outsl
inc
mov
hlt
or
cmpsl
xor
cmp
mov
dec
jg
and
test
sub
in
add
jl
test
sub
jnp
xchg
cli
divb
jns
cmp
xchg
cmp
imull
mov
cmp
insl
in
sub
adc
jmp
jb
or
aaa
jl
sbb
jl
shlb
cmp
data16
repnz
cltd
sub
jl
adc
dec
cmp
jl
clc
xlat
mov
push
jl
add
imul
mov
jnp
shrl
cmp
xchg
jl
loopne
mov
ret
xchg
jp
std
mov
mov
dec
dec
int
loopne
jl
cmp
mov
sub
jl
imul
xlat
dec
mov
call
xorb
in
jp
jnp
std
icebp
cmc
cltd
loop
repz
ja
sub
leave
xchg
lret
cmp
clc
into
lock
clc
mov
daa
hlt
sbb
fstpt
insb
sbb
ljmp
in
jo
inc
xor
into
inc
sahf
ja
jl
repz
mov
leave
xchg
jns
insb
nop
negb
out
jl
push
das
cmpsb
mov
cmp
jl
clc
push
mov
dec
test
inc
add
push
jb
scas
push
dec
or
movsb
and
push
and
push
cmp
jecxz
adcb
les
test
xor
cmp
ljmp
addr16
and
adc
jl
in
or
sub
aad
cmp
sarb
mov
cld
scas
inc
cltd
in
mov
fcom
fisubrl
mov
push
or
mov
or
jbe
outsb
mov
std
mov
pop
jnp
cs
push
push
adc
dec
test
loope
lock
rcr
xchg
bound
ja
js
xchg
jl
sub
push
lods
iret
sub
mov
adc
adc
out
adc
je
cmpb
pop
in
daa
cld
stc
add
jl
xor
sti
aas
jns
jno
jl
sbb
hlt
leave
dec
jl
adc
test
ret
pop
lahf
mov
jo
das
in
jo
mov
pop
dec
push
ds
pop
cmp
inc
push
daa
inc
sub
frstpm(287
adc
mov
test
inc
mov
cmp
sarb
lock
pop
fs
and
and
mov
jl
mov
jge
add
cs
frstor
mov
sub
jne
adcb
jl
xor
push
sub
repnz
in
cld
addr16
mov
adc
out
test
mov
or
cmp
imul
jl
xchg
fwait
roll
sbb
stc
add
jnp
mov
insb
aaa
cmp
xor
lods
pop
inc
pop
insb
outsl
dec
faddl
xchg
scas
cmp
enter
mov
movsb
stos
hlt
mov
test
addb
fwait
jnp
insl
sahf
xchg
popf
push
cwtl
sbb
loopne
jne
pop
sub
and
addr16
jl
sarl
pushf
jl
or
cld
lahf
jno
dec
jnp
leave
or
fnsave
jl
adc
cmp
pop
test
lds
add
mov
inc
stos
mov
nop
out
mov
xchg
jl
jg
cmpsb
mov
mov
jl
rol
dec
test
or
adc
fdivrs
nop
pusha
adc
jl
popa
xorl
xorb
nop
insl
adc
jl
icebp
fnstenv
movsl
mov
loope
mov
jl
or
das
dec
insl
add
es
xchg
repnz
inc
jl
ret
xlat
mov
out
jl
stc
push
jae
sbb
xchg
movsb
inc
dec
jl
out
scas
nop
push
xorl
mov
push
jl
mov
lahf
cmp
fs
jp
jl
movsl
jle
loope
sub
push
aam
xchg
mov
mov
jmp
je
mov
fsqrt
sub
xlat
jns
dec
push
fistl
mov
inc
jl
pop
lcall
mov
xlat
add
test
vrcpss
test
pop
adc
pop
jl
xor
lock
mov
push
jae
adc
jl
scas
and
stc
push
jb
jl
cs
cltd
jl
inc
dec
je
sbb
pop
lahf
cli
fprem1
pop
push
pop
jl
lret
xchg
inc
jae
jl
adcl
mov
sbbb
mov
inc
push
xor
dec
shlb
add
in
test
mov
insl
mov
sub
mov
fildll
add
in
lahf
insb
es
clc
loopne
int
jl
insl
xor
sahf
fildl
movsb
dec
or
or
jge
or
movsl
dec
ret
cs
decb
jnp
mov
stos
mov
fs
insb
jl
jae
pop
popf
test
loope
push
mov
lods
nop
jl
ss
ret
aaa
push
ja
pop
fistps
or
dec
imul
cmpsl
lret
or
shlb
adc
daa
mov
add
pusha
insb
mov
cmp
jp
int
jl
jecxz
add
jl
push
pop
mov
leave
idivl
shl
and
and
ss
push
jns
jb
sti
pop
rcll
or
add
pop
mov
imul
or
mov
mov
in
or
outsl
das
mov
and
iret
or
jl
lret
sub
xchg
jno
mov
mov
movsl
jl
inc
adc
out
cmpsl
pop
inc
jns
cmp
push
jl
push
lret
mov
jl
out
cmp
or
xchg
insl
dec
insb
jl
into
push
ja
cli
movsl
jl
inc
js
in
push
jl
sbb
mov
jl
rcr
in
aaa
cmp
imul
clc
jl
fcomps
and
push
xchg
out
jge
xor
rcll
jl
dec
pop
adc
jmp
roll
inc
fbld
jl
adc
cwtl
cmp
in
je
repnz
or
call
push
and
lods
adc
in
xchg
jl
or
jae
or
icebp
xchg
loope
pop
cmp
xor
dec
and
lods
push
cmp
sbbb
ja
xchg
adc
jle
repz
mov
or
inc
cmpsl
or
jge
fbstp
js
orl
pop
jl
pop
xor
push
push
xor
and
data16
pushl
or
sarb
adc
jl
leave
mov
cmp
xor
mov
dec
scas
xchg
mov
aas
aaa
and
jae
repz
add
and
dec
loope
jmp
jl
mov
leave
or
push
insl
fs
mov
fstpt
xor
jb
jle
sbb
mov
inc
cmp
aad
repnz
lret
xor
aam
jl
or
es
ficompl
push
inc
es
inc
in
add
xchg
je
stos
loop
insl
fdivrs
popf
decb
cmp
mov
inc
fstl
je
lods
shll
cmp
xlat
int3
or
mov
stc
mov
add
sub
adc
xor
icebp
jg
dec
lcall
or
mov
lretw
lods
mov
fstpl
jl
dec
out
pop
fwait
push
or
shl
sub
inc
jnp
or
pusha
pop
jl
frstor
sbb
loop
jnp
outsb
popf
repz
pop
jae
sbb
insb
sub
xor
dec
imul
std
adc
push
in
jl
bnd
dec
jle
test
and
pushl
sahf
pop
pand
out
js
mov
jne
and
xchg
fwait
sub
inc
repz
mov
jle
call
insb
adc
push
jl
clc
push
add
push
mov
jl
outsl
mov
sub
fimuls
jl
adc
mov
push
add
aad
shrb
add
or
iret
ss
addr16
ret
scas
les
and
fcoml
leave
hlt
sub
xor
jl
pop
movsl
insl
xchg
add
dec
addl
or
jl
lods
pop
mov
enter
orb
dec
je
push
jle
push
push
jl
jne
mov
movsl
pop
mov
lahf
add
inc
mov
sbb
repnz
rcll
hlt
lea
and
jl
mov
sub
mov
xor
jne
insl
outsb
mov
jp
dec
sub
inc
cmp
outsl
jl
pop
outsb
xchg
fidivs
aam
ret
jne
cmp
pop
pushl
or
test
mov
fdivrl
push
cs
ss
mov
dec
popf
imull
mov
jp
mov
es
dec
addr16
mov
repz
jl
xchg
push
cmp
js
jl
pop
jle
les
pusha
ljmp
je
mov
test
in
mov
pusha
ret
dec
push
cmp
mov
lret
negb
in
pop
je
pushf
jg
sub
out
or
movups
fldt
jbe
sbb
out
test
es
mov
dec
insb
xor
mov
lds
jg
pop
out
jl
stos
mov
loope
adc
dec
lods
push
push
insb
dec
into
mov
les
jnp
mov
push
dec
inc
es
add
jl
dec
push
push
sahf
xor
mov
aad
jp
add
sub
mov
in
sbb
rcrl
out
fnstsw
pop
call
insl
xchg
mov
out
mov
inc
cwtl
push
push
je
cmpsl
vmulps
dec
adc
mov
inc
mov
sbb
int3
pusha
xchg
xchg
jo
jl
movsl
sti
imul
insb
fstpl
mov
inc
xor
push
insl
adc
mov
mov
ja
sub
push
or
scas
mov
icebp
ja
mov
aam
dec
pop
sarl
sbb
std
bound
jl
addr16
int3
mov
or
es
cli
sbb
cmpsl
das
adc
stc
jg
mov
push
fdivp
push
inc
daa
jno
sbb
or
test
fstps
movsb
dec
cs
fsubrp
push
push
jl
xor
mov
mov
aad
ret
mov
push
mov
push
push
out
sub
push
jb
jne
mov
fldcw
jo
test
adc
xchg
mov
out
addr16
lahf
push
int
or
add
xchg
jbe
jl
lahf
adc
sub
sbb
cmp
inc
mov
push
jae
jbe
call
subl
cmp
ljmp
and
or
fisttpll
fdivs
jl
xor
cmc
jns
jge
nop
xchg
stos
inc
jl
lea
adc
test
sbb
sub
je
into
mov
or
icebp
mov
dec
lods
pop
ret
adc
sti
clc
xor
inc
jl
in
jge
ss
xchg
mov
mov
sbb
das
cltd
stc
jl
in
dec
adc
rol
nop
nop
fisubrs
jl
jge
ret
add
add
dec
mov
mov
mov
sarb
jb
jl
in
sub
mov
ficomps
insl
push
addr16
dec
jl
fildll
call
cli
cmp
icebp
test
mov
push
jbe
lcall
pop
jl
jp
push
ss
inc
movsb
push
adc
cmp
add
add
ss
sti
pushf
pop
jmp
add
sbb
mov
fbstp
in
int
jle
pop
mov
cmp
imul
push
and
push
adc
jne
inc
sarb
jle
je
mov
fwait
xchg
push
or
jg
inc
and
lock
hlt
push
inc
jbe
pop
shr
jb
cmp
push
jl
dec
ja
dec
cmp
loopne
pop
push
flds
xchg
sbb
insb
or
mov
fmul
mov
imul
jl
and
or
fcomp
jnp
vphadddq
push
and
cmp
mov
cmpsl
loope
imul
ljmp
add
and
or
pushl
das
adc
es
push
mov
mov
loop
mov
cli
jl
orb
jl
scas
or
jl
pushf
adc
int3
xor
leave
movsl
sub
lds
or
scas
ljmp
mov
cltd
mov
aaa
xlat
or
lea
mov
pushl
or
div
cmp
jb
sbb
jbe
icebp
insl
sarl
mov
mov
sub
add
subb
dec
ret
ds
aam
pop
subl
cmp
ds
dec
std
adc
call
sbb
jl
adc
xchg
inc
push
es
cltd
cmc
sub
jae
sbb
sbb
stos
inc
mov
fdivr
dec
mov
fsubrs
pop
andb
out
movsl
jae
adc
in
ret
icebp
xchg
mov
sbb
aas
int3
inc
jecxz
sub
je
push
dec
add
imul
movsl
inc
idivb
inc
mov
cli
jl
push
daa
and
aaa
mov
jl
push
arpl
inc
divb
mov
lahf
add
scas
inc
push
sbb
push
inc
and
dec
xor
lods
jl
imul
movsl
xchg
aad
jl
fwait
inc
mov
mov
addb
adc
and
jge
aas
mov
into
lock
xchg
cmpsb
divb
push
and
js
cmovp
pop
and
sahf
mov
mov
inc
out
aas
sbb
adc
dec
push
push
or
cmp
in
cmp
add
sbb
outsl
jl
cli
adc
popa
test
aaa
or
jl
cmp
push
cmp
loopne
jl
dec
js
sarb
stos
mov
lret
jl
jg
and
xor
pop
jl
xchg
or
mov
popf
dec
imul
sbb
inc
or
xchg
lds
mov
and
inc
xchg
mov
pushf
jl
lar
jp
sub
push
sarb
mov
and
mov
jl
dec
jae
xor
or
pusha
insl
add
stos
dec
int
jl
inc
xchg
jl
test
jae
lods
push
loop
ss
das
dec
outsl
scas
ret
push
in
lea
arpl
xorps
bound
ja
inc
adc
daa
push
xchg
jge
jl
mov
int
mov
pushf
stc
or
push
add
insb
push
addr16
inc
mov
cmp
shrl
jl
push
movsl
popf
inc
cs
mov
mov
push
in
test
ja
pop
jl
aad
add
push
jl
les
mov
jl
lahf
jb
mov
jge
lods
arpl
jl
insb
pop
mov
hlt
jl
and
xorb
icebp
sub
dec
scas
jl
bound
or
and
jl
mov
imul
xchg
pop
or
jb
jge
sub
loopne
lahf
mov
jle
mov
in
jl
xchg
jl
inc
inc
push
jmp
test
cmp
mov
loopne
cld
dec
jg
push
cmpsb
das
int3
xchg
cmp
ljmp
ret
and
sbb
mov
hlt
add
loopne
mov
push
and
jl
or
pop
cmp
cmp
xchg
dec
jl
leave
push
mov
cmpsb
pushf
mov
jb
in
cmp
rclb
and
divb
cli
sub
fwait
mov
mov
push
je
cmpsl
cmpsb
sarl
mov
sahf
inc
or
imul
popf
lcall
call
sub
and
mov
jl
ja
sarl
mov
adc
add
or
in
je
jne
mov
cmp
out
pop
jl
or
inc
lds
je
clc
fs
sbb
cmp
in
mov
cmpsl
out
out
jns
into
xor
adc
std
sbb
lahf
std
inc
outsb
fwait
cli
int3
mov
mov
call
imul
lret
push
fwait
sub
fs
mov
inc
shr
push
mov
pop
shll
idivl
xor
mov
sarl
push
push
dec
dec
in
bound
call
sub
fwait
or
cltd
jp
add
mov
std
cs
dec
les
insl
jno
pop
xlat
push
dec
jl
gs
mov
in
jecxz
jle
mov
jl
mul
xlat
mov
mov
xor
js
shlb
jl
add
std
mov
jnp
xor
xchg
jl
jp
int3
dec
sub
sarb
out
mov
icebp
cmp
sahf
cwtl
cmpsl
aaa
bnd
and
mov
jl
pop
cwtl
xchg
les
pop
iret
mov
jns
jo
in
arpl
sti
popa
dec
aad
popa
xor
sbb
adc
pop
loopne
cmp
add
cmp
or
es
sbb
leave
or
cli
mov
test
adc
sahf
loop
add
das
and
mov
je
jo
stc
loop
xchg
jl
int
js
xor
cmp
mov
pop
jl
inc
mov
arpl
insl
jl
sbb
movsb
cmc
and
add
popa
stos
sbb
stc
jl
pop
xor
inc
push
es
fs
test
mov
or
mov
jl
aad
ret
in
add
lock
xor
sub
jl
mov
mov
cwtl
xchg
mov
adc
inc
into
or
mov
jl
push
sbb
mov
fsubl
jnp
mov
fadds
lods
cli
push
dec
clc
dec
sbb
fwait
insl
jae
push
lods
sub
cld
stos
sub
jl
fisttps
in
and
cmp
rep
cmp
push
sbb
sub
jnp
pop
dec
mov
cmp
adc
ja
mov
jnp
mov
jo
repnz
jl
xchg
lods
xchg
cmpsl
jno
jl
sbb
test
scas
jo
clc
xor
hlt
cmp
sub
xorl
test
into
je
rorb
mov
xor
dec
or
fdivl
cmp
shr
cld
insl
out
inc
sub
sub
enter
mov
fldl2t
pop
pop
mov
sbb
test
roll
nop
adc
xchg
insl
lcall
into
mov
in
jbe
inc
fs
out
xchg
cmp
mov
add
test
xchg
fwait
icebp
loope
adc
das
xchg
insl
inc
repz
mov
jo
xchg
cmp
or
stc
insb
xchg
addr16
add
cmp
out
in
fisubl
mov
orl
push
ss
push
fistpll
or
adc
mov
xchg
lahf
lahf
mov
or
sub
cmp
pop
int
in
mov
daa
sbb
dec
inc
popa
cs
insb
pop
push
ffree
and
jg
mov
sub
fistpll
icebp
scas
sti
add
adc
lcall
xchg
push
int
fistpl
jp
mov
setb
jl
add
push
fstpl
pop
imul
movsb
and
sub
mov
cmp
cmp
jl
sbb
xlat
push
dec
mov
int3
dec
xor
cmp
sub
movsb
lods
outsb
fs
mov
dec
dec
dec
jb
jl
mov
mov
jnp
lret
cs
push
add
in
cmc
or
pop
adc
push
xlat
aam
orb
jg
jl
insb
test
sub
ss
dec
and
sub
mov
jl
and
mov
adc
pop
cmp
loopne
pop
cmp
and
push
pop
and
push
dec
rclb
loopne
dec
cmp
std
aas
idivb
xor
jle
or
push
jl
and
mov
sub
xchg
into
and
daa
adc
idivb
loop
icebp
rorb
xchg
inc
lods
xor
push
jmp
aaa
testl
jl
mov
arpl
out
ret
pop
test
adc
inc
out
je
aaa
cmp
adcb
insl
loopne
jl
adc
andl
cmc
xchg
jb
lods
jl
pop
and
or
mov
aam
mov
jl
sbb
pusha
enter
jl
add
jge
leave
in
test
stc
addl
jnp
stos
das
push
cli
addb
imul
jge
cli
inc
or
mov
movsl
inc
inc
cmpsb
push
test
mov
ret
out
add
test
imul
jecxz
push
sub
imull
test
dec
sbb
jl
dec
inc
jae
xchg
pop
mov
and
jns
repz
jnp
push
or
es
cmpb
aam
inc
pushl
lahf
mov
lcall
jnp
out
mov
fbstp
hlt
in
mov
sub
lret
int3
sbb
adc
out
pop
out
jb
cmc
jmp
mov
jl
aas
sub
mov
cmp
mov
fldenv
push
sub
mov
jbe
jl
cmp
sub
mov
pusha
cmc
or
mov
or
or
fstp
xor
mov
cmp
xor
insl
mov
xchg
xchg
mov
ror
mulb
mov
das
mov
sete
add
pop
je
test
pop
jl
sahf
flds
aad
xor
add
iret
jbe
jl
notl
cltd
fidivrl
aas
adc
popa
adc
cmp
cld
push
jg
and
jnp
sbb
cli
pop
and
push
mov
jl
fdivrp
xchg
aam
scas
cmp
xchg
xchg
cmp
lea
sub
out
jns
outsb
cld
shlb
mov
loopne
cmp
cmpsl
or
out
cmp
jmp
daa
call
fisttpl
jl
push
es
jl
fmul
jmp
inc
hlt
xor
jl
push
nop
lea
dec
jl
jp
movsb
std
mov
out
push
jl
mov
sub
jnp
int3
ret
leave
sbb
mov
xor
ret
cmp
data16
lock
xchg
pop
dec
mov
sbb
dec
mov
ret
pop
cld
and
sbb
sbb
mov
jl
or
out
mov
inc
jle
sub
or
and
rorl
in
rcrl
loop
push
or
mov
outsb
pop
push
jl
addb
stos
inc
enter
mov
cmpsb
push
movb
movsb
or
in
jb
fildl
movsb
call
xchg
iret
leave
xchg
into
cmp
and
lods
lcall
dec
xor
inc
pushf
jl
or
inc
ds
pop
adc
stos
or
into
mov
repnz
push
adc
adc
jl
stos
loop
mov
jp
insl
scas
cmpsb
movsb
sahf
pop
arpl
jl
push
addr16
mov
sbb
pop
mov
popa
xchg
js
mov
jl
dec
js
bound
insb
out
adc
cmp
sub
dec
orb
mov
xchg
fistpll
stos
pop
out
sub
lahf
jnp
or
lret
push
xor
mov
dec
jl
and
std
jecxz
adc
mov
inc
jno
jmp
add
xchg
xchg
out
fwait
int
shll
lcall
jl
mov
int
dec
push
fwait
into
xor
pushf
dec
or
fdivrs
lods
mov
dec
jl
mov
out
sbb
sub
jl
jp
push
ror
xor
cmp
or
loopne
mov
outsl
or
jl
inc
lahf
lcall
xchg
pop
sub
sbb
cld
int
lcall
insb
jl
inc
daa
shll
mov
out
jb
lret
xor
into
dec
idivl
popf
cmpsb
test
add
mov
repnz
adc
push
sbb
aad
hlt
inc
filds
js
out
pop
insb
jg
jl
aad
fsubrp
xchg
sahf
arpl
jle
mov
fcmovnu
push
xor
pop
repnz
call
les
mov
into
mov
add
add
inc
enter
shl
jmp
xchg
jl
bound
cmp
add
inc
xchg
push
xchg
in
cmp
mov
and
cmp
pop
jnp
cmpsb
daa
leave
movsl
popa
ss
jnp
addl
call
and
mov
shll
call
push
inc
inc
mov
sub
jl
in
mov
or
jp
jbe
fisubs
xor
sub
xchg
jne
addb
ret
cwtl
lcall
dec
push
in
ss
stos
inc
sub
ret
rcr
loopne
sub
xchg
movsl
jl
cwtl
daa
mov
out
xor
int3
lret
sub
clc
pop
push
jecxz
jl
xchg
cmp
imul
in
out
jl
xor
hlt
pop
push
cmp
cmp
jl
into
and
xor
sbb
cld
xchg
push
mull
adc
push
lods
sub
adc
ss
push
mov
adc
dec
fstps
repz
testl
dec
adc
pop
insb
fcoml
xchg
sbb
mov
jnp
xor
data16
and
out
sti
movsb
mov
mov
jg
mov
add
popf
push
xchg
jl,pt
movsb
out
xorl
jne
jae
jbe
pop
adc
pop
lds
adc
outsl
je
into
add
xchg
cmp
or
sbb
inc
aas
insl
pop
inc
xor
xchg
sbb
aaa
mov
les
sub
mov
fldt
jl
test
popf
pop
mov
jg
jl
mov
fs
stos
inc
loop
push
inc
sbb
dec
adcb
mov
add
or
int3
push
mov
and
xlat
xchg
xchg
shll
cmp
cmp
mov
fdivrs
rorl
jno
cltd
popa
jl
sahf
adc
in
and
ljmp
enter
fmuls
jae
mov
jl
cmp
jl
dec
hlt
and
pop
jb
mov
outsl
mov
pcmpeqw
arpl
jl
cwtl
push
in
cmp
jl
stc
sub
mov
dec
jl
lods
cli
add
jne
icebp
jl
mov
jl
cmp
sahf
jmp
sbb
pop
les
fcomip
push
call
xor
jge
xchg
jno
pop
add
jl
push
fdivrl
es
loopne
add
xor
ja
call
jno
push
mov
insl
loopne
dec
dec
mov
scas
orb
pop
test
mov
hlt
mov
pusha
add
lds
push
jl
dec
fidivs
cmp
loopne
pop
add
push
sbb
add
and
rcl
xor
test
lret
ficoms
jl
mov
shrb
mov
in
js
movsl
mov
xchg
pop
inc
cwtl
push
xor
xchg
leave
js
xor
xchg
xchg
push
push
jae
mov
inc
cli
test
sbb
cmp
sbb
xlat
push
stc
jl
dec
sub
les
push
xchg
fidivl
adc
push
mov
adc
mov
cltd
jl
lods
push
xchg
mov
in
sub
jnp
je
cmp
mov
out
mov
push
or
push
jl
hlt
adc
test
dec
call
jmp
mov
sarb
xchg
lods
adc
outsl
sub
xchg
jl
pop
sbb
mov
pushf
jnp
lret
jmp
gs
shl
sti
push
mov
ficoms
scas
jl
scas
cmpsb
test
cmp
pusha
jl
inc
hlt
addr16
ljmp
sarb
aad
xchg
sub
jl
repnz
cmp
or
jl
add
dec
xchg
jl
jecxz
aas
mov
xor
mov
inc
xchg
and
jl
fisubrl
mov
jl
lock
dec
push
lock
testb
lods
fdivs
movsl
loopne
push
jnp
mov
negb
adc
cmp
mov
mov
lahf
icebp
movd
jl
xchg
mov
cmp
mov
xor
adcb
dec
jp
push
xor
cmp
add
jo
dec
les
cmp
filds
stos
lea
jg
cmp
je
or
test
addr16
push
xor
clc
sub
jo
popa
inc
push
add
or
movsl
xlat
in
jl
fcoml
dec
divl
jl
loope
imul
jl
dec
push
scas
daa
jge
or
push
jns
sahf
fnsave
dec
pop
jl
or
xor
xchg
jl,pn
xchg
pushf
lds
xlat
enter
xchg
jecxz
testl
sbb
xlat
sbb
mov
adc
shlb
sbb
push
insl
inc
cmpsl
mov
jnp
ja
cmp
les
or
loope
bound
arpl
ljmp
mov
outsl
clc
jl
cld
adc
aam
add
call
fwait
ret
sub
add
idivb
inc
or
inc
mov
insb
mov
jl
inc
repz
xor
insl
sub
js
cmp
mov
mov
out
aad
sbb
jb
jl
fs
repnz
cmp
movsl
fstpl
cmp
jle
int3
cmp
lahf
mov
inc
push
add
push
inc
les
sarl
mov
mov
mov
fldl
sub
jl
mov
cltd
or
push
jl
cmp
mov
jl
call
ret
loop
sub
jne
jge
push
xchg
jl
sbbl
inc
jl
daa
and
scas
arpl
mov
clc
inc
js
cmpsb
adc
cmp
push
jno
xor
inc
das
or
dec
pop
icebp
pop
jl
je
push
fwait
outsb
fwait
stos
mov
fbld
dec
add
fs
adc
xchg
mov
gs
hlt
movsb
or
leave
fidivrl
out
cmpsb
test
xchg
sahf
int3
sub
lea
jg
mov
mov
out
cmpsb
inc
mov
fstpl
sub
add
stos
mov
adc
out
andl
mov
inc
ss
jnp
push
std
add
dec
and
inc
sarb
push
xchg
test
mov
push
and
fiadds
outsl
or
xchg
jle
and
inc
mov
out
adc
lea
add
movsb
adc
cmpsl
jl
ret
jmp
shlb
push
jo
fcomps
sub
pop
or
mov
xchg
pop
jp
fwait
aam
push
push
stos
and
xlat
xor
in
jl
out
mov
movsb
or
fs
cmpsb
and
arpl
daa
outsb
test
mov
and
or
dec
xchg
inc
jmp
aam
out
mov
add
mov
insb
push
subl
mov
popf
xchg
pop
jmp
xchg
jp
jl
mov
mov
jl
inc
push
or
sub
xchg
jl
hlt
push
jge
dec
pop
cmp
push
jl
cli
fwait
ret
xchg
inc
jl
adc
rcrb
pop
push
cmp
xchg
sub
add
addr16
add
dec
pop
rcrl
push
outsb
repz
popf
hlt
loope
movsb
ds
inc
cld
add
sahf
jo
in
int
inc
inc
mov
fs
mov
jecxz
pop
mov
out
cld
inc
jl
mov
push
dec
loope
orl
cmp
add
loop
mov
and
std
dec
jo
or
loopne
or
jno
dec
jl
sahf
adc
mov
cs
mov
jl
imul
jl
push
lret
inc
arpl
fisttpl
outsb
cmp
xchg
mov
adc
sbb
push
xchg
sbb
mov
xor
or
mov
inc
lods
sbb
sub
adc
aaa
jl
insl
shlb
repz
xchg
and
outsl
mov
mov
insb
call
jl
cmp
and
dec
mov
pop
cli
add
inc
lret
xor
mov
stc
icebp
or
test
jbe
out
shl
icebp
pop
jl
sti
cs
into
jbe
fwait
jns
push
into
xor
push
cld
xchg
mov
leave
jnp
lock
outsb
rcr
jno
roll
es
lret
cltd
addb
push
fs
bound
or
pop
std
pusha
dec
mov
push
mov
mov
pop
mov
jl
jae
lods
testb
jl
inc
movsb
pop
ljmp
pop
pushf
insl
xchg
adc
cmpl
mov
stos
cmp
sub
dec
push
cmp
jl
mov
sub
add
mov
mov
iret
pop
ret
loope
adc
test
xchg
jnp
fwait
pop
mov
in
jecxz
cmp
repz
cmp
cmpb
jbe
jl
sbb
lea
imul
cmp
jl
andl
jl
dec
jb
cmc
inc
cmpl
fldenv
lcall
in
cmp
subb
adc
pop
stos
mov
xor
outsl
jl
shll
xchg
jl
xchg
sbb
jbe
clc
sbb
and
cli
jl
and
mov
cmpsl
push
jl
cmp
je
inc
jl
mov
in
jnp
leave
dec
stos
jmp
mov
jo
jl
pop
lret
test
jl
sbb
mov
icebp
mov
cmp
ljmp
mov
inc
sbb
mov
ss
js
or
xor
adc
and
ja
or
or
lds
int3
cmp
push
lcall
sbb
dec
pop
push
jae
push
jb
mov
ret
aad
xchg
push
jmp
mov
mov
jl
in
iret
bound
dec
das
stc
outsb
ja
jge
mov
pop
and
cmpsl
adc
mov
loope
rcr
dec
sti
add
je
push
sub
test
cmc
cmp
stc
jl
dec
rcll
xchg
jns
jl
add
sbb
mov
je
xchg
xchg
fdivrl
or
add
push
data16
jnp
and
mov
fimuls
xchg
pop
cli
jl
add
or
jbe
lcall
or
movsb
je
sahf
push
pop
sbb
inc
test
fldt
insb
mov
jmp
mov
aaa
jl
xchg
js
pop
mov
xchg
push
inc
test
lods
mov
jbe
js
jae
jl
cs
arpl
mov
ljmp
xor
xchg
int
mov
jl
in
xchg
pushf
mov
inc
test
adc
mov
insb
mov
inc
pop
push
gs
jo
mov
dec
pop
mov
loop
cmp
out
cmp
dec
movntq
jge
movsb
cld
and
jl
mov
xor
push
leave
cmp
test
stos
sub
int3
test
jl
sti
cmp
jmp
and
sarl
push
sub
repz
inc
xchg
inc
jp
fcoml
push
sub
aas
jl
mov
popf
sbb
jl
and
imul
cmpsl
push
sbb
clc
fimuls
insb
cmp
arpl
xchg
cmp
push
insl
jns
xchg
xorl
pop
cwtl
xchg
inc
push
cmp
jl
xchg
ja
iret
jl
pusha
outsl
mov
cmp
mov
stc
adc
jl
push
xchg
mov
xor
js
lret
or
jl
stos
lock
mov
sahf
stc
mov
mov
in
xor
jmp
lds
rcr
dec
cmp
das
and
lds
add
or
or
mov
cmp
mov
and
dec
xchg
je
lret
adc
cmpl
adc
ja
pop
jg
subb
xchg
adc
jl
pop
inc
mov
jl
xchg
or
icebp
mov
jne
adc
popf
xchg
add
sub
in
out
into
jnp
xor
lcall
push
pop
xor
insb
insl
scas
push
jl
xchg
sbbl
fstl
jmp
jle
repz
out
or
jno
mov
adc
fld
lock
mov
jns
addr16
mov
dec
pop
push
xorb
fistpll
loop
jb
sub
imul
aam
mov
dec
push
lea
mov
or
cwtl
jl
sub
lods
mull
enter
pop
mov
jnp
loopne
clc
fistpl
lahf
cld
jge
sub
push
jecxz
test
inc
xchg
ret
or
fsubrs
fcmovu
test
add
dec
ficoms
inc
mov
dec
push
inc
lahf
jb
sub
sbb
popf
push
and
sbb
fnsave
lahf
rorb
imul
jno
enter
sub
iret
ret
idivl
mov
cmp
aad
jl
cmp
xchg
jecxz
movb
insb
lds
adc
xchg
imul
or
jl
mov
dec
or
or
jl
mov
and
cmp
jle
arpl
popa
in
mov
jl
or
lock
jle
js
xchg
mov
add
test
cmp
jl
mov
sbb
int3
notb
fadds
fnstcw
leave
sub
xor
sahf
fucomi
lods
add
add
es
adc
ret
pop
mov
sbb
in
dec
or
sub
xor
dec
mov
adc
lea
pop
add
repz
sbb
mov
jnp,pn
adc
nop
sbb
fimuls
imul
xor
hlt
jl
out
add
imul
xor
jl
lods
jg
cmp
rcr
xchg
jl
pop
fdivr
icebp
sti
mov
cmpb
jae
lcall
mov
mov
and
shrb
push
or
cmp
pusha
xchg
jns
jge
jl
cmp
and
inc
cltd
sub
stos
movsb
xchg
addr16
insl
lcall
jl
push
dec
mov
add
xor
xchg
jp
fstpt
adc
inc
es
xchg
pop
stos
xchg
stos
xchg
push
jnp
mov
adcl
jl
xlat
fiadds
jge
pop
aas
pop
out
jno
out
mov
lock
push
mov
cmpl
ja
mov
cmp
mov
stc
and
dec
jl
add
sbb
int3
push
mov
jge
gs
or
sub
xchg
mov
push
sub
push
lock
in
mov
push
mov
jb
iret
gs
inc
dec
cli
push
xor
std
jno
call
subl
jecxz
nop
mov
mov
jl
insb
adc
mov
lock
sarb
sti
adc
in
mov
mov
dec
jl
ja
lcall
fisttps
xchg
stc
push
jl
inc
movl
stos
mov
jl
sbb
mov
sbb
imul
jne
adc
push
dec
mov
fwait
jl
sahf
mov
arpl
jl
adc
xor
dec
cmpsb
jl
push
shl
iret
push
or
inc
inc
mov
js
xor
mov
jnp
adc
mov
sub
sbb
in
insb
aam
ja
adc
mov
adc
pushf
sbb
jb
push
sbb
cmp
cmp
mov
roll
repnz
jl
push
and
and
scas
or
dec
insb
sub
jl
push
inc
or
lds
dec
cmp
xor
nop
xchg
add
inc
mov
scas
pop
jp
pusha
sbb
rclb
xchg
jl
jnp
lods
fbstp
cmp
sbb
sbb
fwait
movsb
std
jbe
lods
fs
cmp
jo
setne
popf
into
mov
xchg
aas
jp
incb
loopne
dec
lea
cmp
addr16
out
stc
or
jl
xchg
cmp
jl
dec
testl
jl
push
lea
adc
jbe
cltd
cmp
loopne
jl
enter
adc
rep
dec
aad
repnz
ret
mov
jnp
lea
add
fwait
adc
dec
insb
fisttpl
push
mov
test
jl
mov
cmp
xor
xlat
push
divl
mov
mov
or
lock
inc
jb
dec
add
ljmp
or
sbb
aas
adc
pop
push
and
fs
jg
scas
xchg
sub
jmp
dec
push
sub
movsb
andb
xchg
pop
inc
sbb
lahf
inc
dec
jns
cmp
out
mov
lock
xor
mov
testb
dec
dec
ret
insl
push
int3
loope
mov
cld
cmpb
adc
or
jne
dec
jl
or
sub
add
sbbl
stos
in
push
sar
insb
push
push
jg
mov
and
fistps
dec
mov
jl
cmp
cmpsb
inc
outsl
cmp
inc
mov
mov
out
lea
fcoml
jl
dec
pop
adc
add
jl
shrb
scas
jl
mov
mov
mov
enter
std
shll
roll
fs
sub
jne
push
cmpsb
jns
jl
mov
inc
pop
cs
xor
int
adc
and
push
sbb
aad
test
push
lock
cli
xor
movsb
in
insb
jl
xchg
lahf
ret
mov
dec
pop
jno
stos
cmpl
mov
movsb
mov
cld
mov
pop
pop
fsubrl
push
je
jl
int
pusha
cld
sub
pop
jl
fstl
push
and
or
pop
xchg
xchg
xchg
sbb
add
out
es
xor
mov
jp
xor
push
movsl
fsts
jl
and
sbb
lods
add
movsb
lds
jl
lods
dec
iret
mov
inc
fnstsw
lgs
std
jl
cmp
stc
jl
lahf
jg
dec
bound
das
orb
rcrb
mov
mul
pop
or
cmp
mov
lods
jl
xlat
mov
xor
aas
fdivrp
ja
testb
xor
call
test
mov
mov
cmp
jl
pop
movsb
jns
xchg
inc
mov
jl
xchg
push
mov
xchg
mov
jbe
call
cmpsb
addb
pop
sti
rcrb
cmp
and
mov
jl
daa
ja
test
rcrb
jl
int3
push
bswap
aas
mov
sbb
test
cmpl
call
lea
xor
add
shl
insb
aad
jb
jl
and
adc
jo
xor
xchg
or
lret
in
sbb
jnp
dec
cmp
dec
pop
jns
popa
or
jo
jl
push
gs
je
mov
jl
loopne
sti
or
mov
fs
xor
xchg
or
data16
jecxz
mov
clc
jnp
push
out
mov
mov
es
jno
sub
fidivrl
cmp
call
lret
loopne
popa
sbb
pop
push
arpl
xchg
xchg
scas
pop
sbb
out
movsb
leave
sbb
jl
or
outsb
inc
pusha
popf
jl
xchg
push
dec
pop
sub
cmp
js
ds
sub
movsb
pusha
sti
je
sbb
cmpsl
cli
mov
cmp
mov
jl
sbb
test
lret
mov
xorb
int3
jp
cmp
popa
xchg
mov
shrb
add
call
or
bnd
sub
and
mov
or
push
add
mov
inc
mov
stos
lods
fs
mov
mov
xorl
add
mov
in
sbb
test
rorl
dec
jl
loope
lods
xchg
dec
add
je
pusha
das
mov
inc
jl
outsb
xchg
mov
sub
daa
mov
cmp
mov
pushf
cmp
jo
shll
jl
mov
or
call
fmuls
daa
int3
and
nop
jl
push
xchg
insb
sahf
add
divl
call
mov
cmp
arpl
jnp
pop
hlt
or
insb
aas
popa
xor
in
enter
mov
mov
jp
jl
sbb
cld
daa
insl
mov
fwait
mov
aaa
pushf
imul
push
dec
inc
jae
inc
fistps
aam
cmp
jnp
sbb
test
movsl
fmul
mov
lea
pop
mov
push
push
push
insb
or
adc
in
loop
xchg
repz
mov
fnstsw
cli
jecxz
mov
jl
mov
pop
stos
lods
ss
mov
xor
jno
push
arpl
adc
dec
dec
and
sbb
lods
and
xor
mov
ljmp
add
pop
jl
pop
into
xchg
les
jl
fists
aaa
jl
ljmp
jnp
xlat
sti
test
xor
pop
jle
incl
es
cmpsl
mov
dec
cld
les
pushf
mov
jle
jb
flds
mov
add
fdivs
and
or
mov
scas
and
mov
jo
xor
popf
jns
dec
adc
repz
loop
iret
dec
jl
imul
or
mov
popa
push
push
or
loop
mov
xor
mov
jl
call
outsl
jo
mov
push
xor
cwtl
test
repz
dec
and
int
add
shlb
pop
insb
and
mov
or
xchg
lods
inc
aaa
jbe
sahf
push
sub
mov
imulb
dec
or
aad
and
pop
inc
xchg
ja
jmp
add
jl
mov
cmp
stc
fldcw
pop
outsl
je
xchg
xlat
jnp
inc
leave
xor
pandn
fiadds
cwtl
addr16
mov
jl
lods
cmc
mov
cmp
or
dec
movsl
push
fstpt
test
mov
pop
jb
push
divl
scas
call
cmp
lcall
shlb
sbb
adc
jmp
push
insb
int
xlat
ss
adc
xor
jns
push
jl
out
aas
mov
push
and
or
lahf
add
and
jno
pop
sbb
xchg
fsts
mov
xor
lods
and
sti
lcall
dec
mov
shlb
jmp
cli
in
jl
push
out
sub
aas
jl
mov
add
jl
xchg
xchg
out
sbb
cli
movsl
sub
minps
repz
mov
adcb
popf
sbb
mov
mov
movsl
adc
dec
ret
mov
daa
pop
and
je
movsb
aas
cmpsl
scas
cmpsb
jl
adc
ror
push
push
insl
cmovns
cmpsb
je
xor
cmpsb
push
sub
inc
fcoms
repz
lret
xor
cmp
cmpsl
jbe
std
mov
mov
xchg
inc
fwait
cli
mov
je
imul
jl
sbb
jge
loop
pop
in
sbb
pop
inc
test
push
sarl
jb
orb
adcb
sbb
repz
jmp
jl
sti
xor
jb
jl
lcall
cmp
jo
int
and
jecxz,pt
ret
jl
pop
aad
dec
pop
cmp
xor
lds
mov
ss
lret
shll
jp
call
je
rolb
adc
pop
xor
sarb
mov
jl
je
int
push
sahf
push
jl
push
adc
notb
inc
roll
pop
pop
cmpsb
push
inc
push
inc
xor
sub
mov
jo
dec
stos
and
xor
mov
rcll
xchg
jbe
sbb
xchg
gs
xor
jecxz
add
in
rcr
cmpsl
jl
dec
jbe
test
movsl
ja
aas
rcr
bound
add
stos
add
pushf
movsl
mov
mov
or
pop
and
mov
sti
out
push
rorl
lock
jl
mov
pushf
or
fiaddl
jb
jge,pt
jns
jno
adc
outsb
jl
xchg
xor
test
ja
jl
and
mov
jle
call
cmp
fdivrs
mov
arpl
jl
xchg
cmp
pop
push
mov
cli
sbb
jbe
cmp
mov
push
loop
jl
mov
movsb
dec
inc
imul
or
ss
fdivs
dec
adc
ljmp
xor
loope
testb
test
das
add
cmpb
jae
out
imull
jl
pusha
pop
xor
es
jne
cld
fs
mov
push
mov
stc
lds
fidivrs
icebp
cli
ret
call
push
jmp
inc
test
sub
das
sbb
sub
mov
mov
sbb
push
ss
push
int
add
mov
ja
std
je
or
xor
or
fldcw
xor
xor
scas
cmpsb
add
ja
mov
push
insl
sbb
fs
movsl
dec
xchg
popa
test
mov
jmp
dec
pop
push
das
cmp
test
mov
inc
je
loopne
or
mov
jl
jbe
or
push
cltd
pop
cmp
jnp
icebp
sub
cmp
jns
loop
test
lret
fucomi
jl
ss
sub
lahf
cmp
mov
inc
leave
xor
lret
inc
push
cmp
sbb
mov
int
insb
xchg
dec
mov
and
std
add
adc
jge
add
xchg
jae
lods
jb
cmp
into
mov
sbb
mov
adc
add
mov
cmp
fbstp
jl
cli
mov
roll
lcall
idivl
mov
imull
fs
arpl
xor
ljmp
xchg
jl
push
mov
jno
pop
imul
jecxz
push
and
movsl
insl
das
jl
adc
push
pop
jle
popf
adc
inc
pop
push
inc
pop
fxch
dec
dec
lcall
and
repnz
loopne
fcoms
jb
xor
cmpb
sbb
sahf
das
iret
cmp
jl
in
adc
push
mov
jl
pop
push
sbb
test
fidivrl
sub
cmp
and
jns
push
cli
xchg
lret
inc
jo
outsl
jnp
lcall
push
adc
pop
sub
call
jl
mov
sti
cmpl
and
mov
aas
movsl
addr16
gs
js
repz
or
jmp
icebp
movsb
mov
add
push
jl
xchg
xor
jl
mov
mov
push
push
jge
rcr
int3
cmc
jl
adc
inc
ret
dec
jp
jl
push
inc
adc
inc
sub
out
shll
repnz
xchg
fisttps
jp
push
pop
sbb
jne
jl
outsb
and
pushf
stc
xor
loopne
pop
js
inc
pop
lock
xchg
dec
popa
pop
jmp
cmpsb
xchg
jb
or
jns
out
jl
andb
jge
jl
add
iret
mov
mov
popf
clc
arpl
stc
push
mov
sbb
lods
scas
lret
out
mov
adc
xor
les
test
cli
pop
pushl
mov
sub
pop
sbb
js
insb
in
inc
es
movsb
dec
sub
ljmp
mov
mov
and
jae
mov
lock
test
fsubrl
iret
in
repnz
sbb
jp
and
lods
std
mov
cmp
ss
jle
aas
cmc
mov
scas
cmp
xchg
cld
or
jo
dec
pop
out
test
xlat
loopne
sub
jl
lahf
sbb
jbe
sbb
mov
mov
push
mov
xor
dec
mov
loopne
sub
jne
dec
add
sub
dec
push
mov
mov
mov
loop
fwait
andl
stc
cmp
adc
cmp
es
je
outsl
sarl
push
mov
inc
mov
stc
outsb
fmulp
sbb
adc
cmp
mov
jecxz
bnd
add
cmc
fimull
jl
sti
add
imul
imul
test
in
fldenv
or
inc
and
cmp
xlat
adc
sub
mov
mov
call
sbb
sub
sbb
leave
int3
test
jnp
popf
cmp
push
mov
cmp
or
pop
mov
cmpsl
lret
cmp
outsl
mov
mov
fucomp
scas
loop
es
dec
fiaddl
jle
inc
mov
mov
sbb
cld
test
xchg
xchg
popf
xor
xchg
adc
or
jnp
xchg
cmp
push
shrl
repz
test
mov
mov
or
inc
fwait
xor
or
push
mov
repz
add
pop
inc
lret
adc
and
mov
in
xor
xor
insb
jl
sub
xlat
outsb
adc
jl
jb,pn
pop
shll
and
xchg
dec
sub
rorl
mov
cwtl
mov
rcrl
lea
add
mov
rcrl
cli
movsb
jae
ljmp
inc
xor
jl
in
das
aas
jo
imul
clc
and
mov
or
cmp
xor
mov
jp
and
mov
js
jl
xor
push
push
lock
xchg
pop
loopne
popa
mov
mov
fisttpl
sub
outsl
arpl
push
insl
sub
ljmp
stc
pop
lret
mov
jl
jae
fsts
call
lock
sahf
sbb
sub
loope
enter
mov
mov
jle
lret
jl
xchg
adc
dec
mov
ret
inc
out
jnp
jmp
call
mov
mov
inc
stc
shlb
lret
aas
add
pop
pop
or
insb
cwtl
adc
int3
ffreep
sub
push
rorb
fidivl
cmc
loopne
sub
inc
and
aaa
push
inc
daa
mov
clc
add
sbb
jo
xchg
stos
jl
lods
scas
inc
cmp
les
add
aas
js
call
sbb
or
cld
push
jl
ss
jl
int
cltd
sub
and
popa
movsb
repnz
sbb
inc
int3
faddl
mov
push
sahf
rcrb
add
lret
dec
lea
xchg
jae
ja
sub
das
sbb
mov
xor
mov
imul
ja
jnp
aad
cmp
adc
jl
pop
in
movsl
in
sbb
sbb
jl
cld
jecxz
gs
mov
jnp
push
ret
aaa
imul
jno
test
outsb
pop
fs
mov
jnp
sbb
fistl
adc
jno
cwtl
mov
les
or
jl
gs
adc
xchg
jl
mov
jne
add
or
les
cmc
mov
or
jl
mov
xor
enter
sub
cmp
outsb
sar
fnstenv
cmp
ds
fisubrs
sub
mov
jmp
jl
dec
xor
stc
stos
jl
int
cmp
sub
lcall
je
icebp
mov
jnp
add
jl
into
scas
adc
pop
repnz
cmp
xchg
aad
mov
cltd
jl
fcomps
jne
clc
add
jl
jmp
loop
jb
out
aad
jnp
xchg
and
sti
jge
cmp
fwait
jns
lock
jo
scas
cltd
jl
mov
push
inc
jl
testb
inc
cld
je
das
hlt
dec
pop
stc
jle
cmp
dec
pop
jl
popf
xchg
stc
sbb
orl
jl
jns
push
push
std
dec
mov
sbbl
scas
jno
into
xchg
rcr
mov
out
andb
push
mov
inc
jbe
jnp
in
mov
mov
pop
arpl
imul
mov
mov
cltd
jl
aas
adc
nop
jl
xchg
divb
std
fidivl
jl
fistpll
pop
mov
and
inc
push
or
mov
nop
mov
sub
lret
push
shrl
cld
or
mov
std
stc
rorb
in
sub
cmpsl
aas
and
dec
xchg
test
add
mov
push
insb
loop
sbbb
jmp
outsb
and
cs
in
inc
jno
push
jo
sub
xor
addr16
jp
loopne
imul
lahf
testl
jle
jns
xor
jnp
push
jl
mov
stos
imul
out
mov
xor
pushf
dec
leave
and
jg
jl
lahf
not
test
out
jnp
addr16
jmp
insb
js
and
and
sarb
or
jp
xchg
lahf
pop
cmp
fldl2t
dec
or
stc
dec
mov
push
sub
insl
cli
cmp
ljmp
iret
aam
inc
daa
and
jl
movb
jl
cmp
sbb
stos
add
adc
dec
fnsave
fcomp
mov
jno
sbb
ja
inc
pop
push
int
das
popf
mov
inc
call
cmpsb
shrb
fistpll
fcmovb
sti
push
and
jo
lods
push
fucomip
jl
pop
lods
fimull
lahf
push
xor
in
add
mov
pop
pop
and
int
xor
xchg
sti
jl
out
insl
scas
fcmovnbe
aam
and
into
out
enter
pop
adc
les
subl
sub
daa
sub
mov
xchg
cmp
add
outsb
jnp
xchg
cmp
daa
andl
jp
inc
and
inc
xchg
andb
xor
xor
jl
js
mov
jae
cltd
jl
sti
jno
out
xchg
add
jne
call
orb
addb
inc
out
mov
lcall
jl
arpl
js
jo
jl
xchg
test
jl
mov
push
ret
or
leave
loope
stos
lock
imulb
nop
mov
loopne
jbe
pop
in
inc
inc
push
push
add
dec
jae
pop
xor
jl
cs
sqrtps
js
mov
scas
and
jno
mov
cmp
adc
pop
jo
dec
mov
shl
cld
das
and
pop
out
shlb
cli
and
push
or
jge
adc
or
fs
jno
mov
mov
add
je
shlb
stos
pop
sahf
les
push
int
jp
jl
rcrb
mov
jl
sub
icebp
pushf
jl
scas
pop
pop
lds
sti
adc
hlt
cld
insb
adc
iret
dec
cmp
daa
cmp
pushf
and
test
mov
jl
adc
adc
add
movsb
sub
cwtl
xchg
sub
insb
subb
mov
adc
aam
popa
sbb
stc
movsl
lds
add
xchg
push
or
inc
scas
or
cmpsb
sbb
sub
jl
xchg
ds
lods
inc
pop
adc
fdivs
hlt
stos
lods
pushf
aas
mov
push
and
inc
sub
sbb
push
fiadds
sbb
mov
jne
out
fbld
xchg
inc
add
push
cmc
loop
jl
iret
cmpsb
or
lret
fbstp
inc
cmp
scas
cmp
or
fs
cmp
cmp
jl
mov
nop
ret
push
push
cmpsb
or
sarb
sub
jl
mov
lods
jl
adc
aad
sti
jp
dec
lea
dec
jmp
xor
enter
shrl
div
inc
push
dec
inc
add
add
cmp
or
arpl
scas
test
xor
pop
rolb
idivl
inc
sub
lods
xor
mov
les
jl
mov
inc
mov
out
lods
jp
movsl
inc
jl
filds
leave
jl
sahf
inc
xor
inc
bound
test
insl
nop
into
mov
dec
mov
data16
jo
in
push
add
push
pop
popf
mov
mov
cmp
cmpsb
je
sbb
push
bnd
loopne
or
sbb
pop
push
mov
xchg
out
jne
es
arpl
xchg
inc
pop
aaa
inc
subb
cltd
in
mov
add
push
push
push
cmp
and
push
push
jl
push
adc
or
dec
cmp
iret
addr16
in
lods
push
adc
mov
cmc
jl
and
fldl
mov
into
int
out
adc
add
das
hlt
add
mov
jne
jp
or
push
mov
movsl
int
cli
ret
jl
mov
enter
xor
push
push
add
jle
js
sbb
jl
and
stos
push
xchg
pop
adc
mov
or
dec
xchg
jl
dec
loopne
adc
and
sbb
xchg
sub
pop
insb
mov
or
and
mov
xlat
push
jp
cmp
je
ds
push
cmp
cmp
bound
in
out
cmp
cmp
fidivrl
add
leave
jge
pusha
aam
lret
xor
and
push
iret
jecxz
sahf
dec
inc
inc
fldt
dec
stos
fwait
pop
sub
lock
flds
add
repz
add
icebp
xchg
pop
test
sti
dec
test
jno
xor
mov
rcrl
fwait
xchg
jl
cmp
jns
mov
jne
push
pusha
and
aam
addr16
bound
cmp
add
lahf
push
lret
or
pushf
ljmp
xor
jg
in
cltd
dec
cwtl
mov
loopne
mov
cmp
xor
jl
enter
or
negl
xor
ja
std
cmpb
inc
mov
test
jg
jl
pushf
ss
fstpl
jnp
sub
mov
dec
sub
shl
cmp
insb
int
sbb
jl
mov
aaa
leave
sbb
dec
mov
jl
lods
cmpsl
push
lret
mov
and
les
push
rorl
xchg
xor
sbb
cmp
aas
call
sub
jl
push
lcall
adc
pop
iret
jl
sub
popa
mov
ja
lret
push
jl
call
mov
insb
movsl
sbb
push
popa
test
xchg
pop
dec
rclb
aaa
shrl
jae
hlt
mov
push
jnp
add
leave
sti
jle
out
test
jno
pop
push
add
pusha
loop
subl
or
jl
mov
cmp
jp
jl
push
pop
test
pop
jl
lahf
mov
pop
jl
xchg
push
enter
inc
jg
jl
adc
call
dec
jnp
into
andb
xchg
or
das
sbb
cmp
or
leave
jle
cmp
lods
outsl
ret
push
loopne
je
ds
es
into
rolb
mov
push
xor
pop
ds
inc
adc
inc
lea
sbb
stc
push
and
and
ret
lods
loop
dec
fwait
dec
push
loope
fstpl
cmp
stos
fbstp
mov
mov
pop
push
jo
push
loopne
cmp
fidivrl
sub
sbb
mov
fwait
les
mov
mov
jne
and
sbb
cli
cld
push
dec
dec
movsb
sbb
sbb
mov
repz
aam
inc
adc
sbb
or
jl
dec
outsl
cli
push
xchg
mov
xor
nop
inc
adc
jl
adc
int
aas
xchg
mov
mov
mov
jl
lcall
jl
cmp
call
stc
and
fcom
lcall
ja
xchg
or
jl
movsl
shlb
adcl
adc
xchg
mov
imul
push
aad
dec
movsb
and
xor
lcall
cwtl
sub
mov
test
pop
leave
sbb
jl
shlb
lret
mov
add
fisubrs
cmp
mov
int
jl
sbb
xchg
jmp
lret
fcom
dec
sub
mov
sbb
int
dec
add
cmp
mov
jnp
adc
mov
cli
add
in
repnz
ret
mov
push
push
push
in
inc
mov
and
cmpsb
add
lock
cmp
test
fistpll
fisttpll
enter
xchg
push
int
jge
cli
sbb
rolb
popa
gs
in
lcall
adc
or
lahf
sbb
lret
mov
xor
mov
jg
jno
pop
cmp
dec
in
insb
fcmovb
jns
lcall
jbe
jl
pop
icebp
movsl
mov
stos
xor
sub
cmp
or
sbb
faddl
push
sahf
inc
sub
ja
jl
adc
fwait
push
cmpl
jmp
ror
stos
ret
mov
xchg
mov
sarb
push
insb
ljmp
out
stc
in
jl
mov
nop
sbb
mov
add
cmp
adc
dec
js
sbb
mov
mov
sbbb
mov
sub
mov
jg
xor
jl
fadd
add
jecxz
lds
fstpt
insb
inc
xchg
cld
push
movsb
cmp
mov
lock
call
jl
loop
stos
testl
jle
movsl
adcl
cld
jne
ret
test
sbb
push
dec
and
pop
bound
pusha
inc
stos
sar
sub
mov
kmovw
xor
fs
int
loope
clc
xchg
leave
mov
fwait
mov
movsb
add
fwait
jl
pop
inc
shll
icebp
pop
push
jp
mov
sub
data16
xchg
push
push
jl
pop
cs
and
dec
scas
jl
xor
mov
jl
shl
pushf
jmp
mov
push
testb
jge
cmp
jg
add
inc
icebp
loopne
loop
xchg
fdivrp
roll
adc
inc
sub
jle
add
lods
mov
jl
adc
ficomps
xchg
push
in
cld
jl
xchg
mov
pop
xchg
mov
jbe
cmpsl
xchg
jl
sbb
dec
cmp
loope
xor
je
push
sub
lret
mov
mov
pop
sbbb
jl
roll
sahf
out
mov
jmp
enter
lds
je
std
scas
mov
pop
pop
sub
jae
pop
or
mov
test
xor
cmp
push
call
out
sbb
lret
jb
imul
mov
fisttpll
xor
jecxz
inc
addr16
sub
subl
stos
out
cmp
lds
daa
inc
push
add
push
fs
jl
in
xorl
jl
sub
and
int3
test
in
dec
dec
insb
into
mov
sub
lds
lahf
mov
jle
jns
loop
scas
mov
mov
jl
repnz
cmp
aaa
popa
mov
add
inc
test
jle
add
popa
fwait
insb
insb
mov
mov
xchg
insl
cltd
or
jns
mov
in
or
arpl
jae
les
xchg
sub
jnp
and
scas
mov
push
sbbb
xor
mov
add
cmp
ret
jne
inc
push
jl
ss
jge
mov
daa
mov
xor
adc
movsb
or
in
addr16
or
bound
or
mov
sub
mov
aas
cli
data16
sub
jbe
jl
mov
mulb
movb
jl
pop
sub
dec
add
insb
fcoms
dec
mov
movzwl
filds
mov
jl
js
psadbw
ret
or
xlat
mull
xchg
mov
mov
imul
in
dec
jns
pusha
sub
leave
sbbb
movb
cmp
and
iret
adc
movsl
cs
cmp
mov
fcoms
fsubr
scas
jg
mov
pushf
adcb
out
bound
adc
rcrb
push
loopne
lret
sbb
shl
xor
iret
adc
xor
lea
pop
sbb
test
adc
nop
mov
or
push
insb
xor
andl
jp
mov
lcall
loope
dec
jl
pushf
stc
xor
insb
adc
adc
or
insb
lahf
cmc
stos
cmp
mov
inc
sub
push
jle
inc
jbe
cmp
imul
mov
cmp
jl
aaa
ficoml
cs
mov
cmp
mov
std
daa
dec
into
outsl
call
pop
stos
or
pop
imul
inc
xchg
arpl
dec
lret
jge
inc
fsubrl
push
iret
fstps
adc
dec
mov
add
hlt
sub
mov
push
xchg
mov
fstpl
pop
xor
test
push
insl
mov
es
lea
scas
repnz
jne
mov
or
xchg
aad
outsb
shlb
stos
jl
pop
jne
push
into
xchg
lea
jne
xchg
or
xchg
inc
jl
inc
xchg
cld
jns
rcr
mov
fcoml
jl
sub
xor
mov
adc
ret
ja
and
ljmp
sbb
fnstcw
push
add
inc
mov
repz
imul
sarb
and
push
mov
jnp
insl
pop
adc
cmp
stc
inc
jle
and
mov
cmp
mov
jle
jmp
fnstsw
ljmp
clc
jl
out
sbb
jg
add
push
lods
jl
pop
imul
mov
lcall
dec
sbb
ljmp
movlps
cmpsb
outsl
test
or
testl
mov
imul
stos
insb
ror
jns
jns
jl
cmp
rcrb
cmp
cmp
mov
mov
cltd
out
fldl
xlat
ret
and
lcall
cmp
push
and
mov
adc
ljmp
aad
sub
fwait
adc
out
mov
xchg
imul
div
or
jo
scas
rcll
jl
mov
fcmovnu
jl
dec
sar
add
popf
jl
mov
insl
xor
fdivrs
aas
add
test
out
fcmovnb
test
push
sub
movsb
shl
jl
inc
cs
xor
xchg
movsb
cwtl
sti
lds
fildl
in
loope
popa
insb
out
inc
repz
cltd
sub
rcl
daa
sbb
ljmp
jl
cmp
mov
push
jnp
jno
fstl
and
jl
jecxz
xchg
test
outsl
mov
mov
andb
adc
jno
imul
aad
xor
inc
dec
sarb
pusha
rcll
scas
cmpsb
cmp
dec
in
inc
fisubs
or
cwtl
and
mov
call
dec
fwait
out
andl
add
mov
loop
or
mov
xor
cmpsb
xor
xor
inc
jno
jl
addr16
xor
stc
add
jl
rorl
mov
dec
and
fistl
dec
je
scas
push
repz
push
pop
es
or
mov
in
jl
aam
push
sbb
xor
or
sbb
dec
lea
test
mov
jl
clc
imul
sbb
mov
jle
fs
jl
inc
je
sub
test
jl
pop
inc
data16
leave
popf
jl
pop
xor
pusha
iret
enter
in
dec
xor
es
inc
fdivrl
hlt
jmp
pop
je
dec
pop
mov
icebp
pop
sbbl
jo
xor
jg
pop
adc
jns
push
inc
leave
out
push
dec
jl
xorl
pop
or
xchg
dec
sub
data16
rclb
jl
cltd
push
out
sbb
or
leave
aas
sub
inc
repz
loope
jmp
dec
xchg
inc
in
sbb
cmpb
sti
in
cld
inc
pop
fnstenvs
adcl
cmpsl
es
xor
add
cmp
jb
jl
xor
cmove
pop
mov
jmp
stos
jl
lret
cli
in
and
gs
jl
pop
in
push
inc
xchg
idivl
mov
mov
ror
jl
sub
fildll
popf
cmp
cmp
gs
jb
xchg
gs
mov
jl
and
push
arpl
sti
cmpl
sbb
imul
pop
jno
or
in
jns
aas
jle
cli
testb
and
cmp
adc
leave
loopne
imul
fdivrl
jge
dec
sub
adc
jl
test
ret
add
daa
sub
cmp
jbe
aas
cmp
lock
and
jb
in
mov
lods
add
add
sti
xor
xor
mov
adc
sbb
jl
popf
xchg
ljmp
cld
jo
push
sub
add
out
lods
int
pop
inc
mov
adc
xlat
jl
xchg
mov
mov
fists
fisubs
cmc
mov
jb
fistps
scas
xchg
out
adc
xchg
jl
aam
stos
in
std
and
inc
adc
cwtl
mov
mov
adc
jge
cmp
jl
out
fnstsw
inc
and
in
shrb
jno
xor
mov
or
jo
or
fstpt
xchg
in
and
pusha
jl
gs
cltd
es
or
adc
in
xor
sbb
je
sub
dec
xchg
cld
test
arpl
jl
gs
sub
rcrl
and
push
adc
aas
std
repz
mov
mov
fs
stos
mov
xor
jl
loopne
fs
xchg
mov
or
cltd
inc
ja
insb
and
mov
sbb
shll
stc
push
jl
dec
dec
mov
cmp
add
dec
jge
cmp
mov
inc
mov
stc
jl
insl
sbb
mov
jmp
lods
int3
inc
leave
inc
mov
sub
fbstp
insb
jbe
rorl
jl
scas
sub
push
pop
adc
out
aas
dec
jo
int3
inc
cmp
add
cli
pop
outsb
lock
or
jp
cmp
xor
dec
sub
push
push
jl
roll
loopne
ljmp
pop
xchg
inc
outsb
push
es
adc
inc
sarl
push
push
sub
ret
rcrb
push
ret
cmp
jl
lea
adc
dec
mov
inc
or
cmp
fdivl
repz
scas
jl
test
iret
ja
inc
push
jl
pop
enter
fsubrs
jl
call
push
sbb
pop
xor
jl
mov
pusha
fmull
sahf
clc
or
add
cmp
xchg
cmpl
js
cmp
aaa
aas
mov
arpl
and
cmp
jle
int3
xchg
iret
in
inc
mov
sub
cmp
arpl
bound
jle
divl
lret
mov
ss
out
xor
in
into
sarb
dec
xchg
and
mov
push
shll
mov
loop
or
xor
cli
inc
jl
dec
or
bound
dec
dec
out
jb
pop
loope
jl
lcall
jl
clc
sbb
cmc
leave
adc
dec
pop
xchg
push
dec
cmp
ss
cmp
xor
mov
jl
and
xchg
sub
test
dec
pop
mov
lds
inc
mov
in
or
aas
sbbl
nopl
inc
sub
jl
daa
jne
insl
push
jp
jl
sub
jp
shll
shlb
clc
cmpsb
cmp
idivl
xchg
cmp
adc
imul
or
cmp
cmp
lret
add
fiaddl
popa
jl
xchg
xor
in
jge
jl
add
adc
mov
xor
jns
cltd
into
int
push
lock
imul
mov
push
sbb
jl
sbb
xor
xchg
dec
loop
jl
pop
adc
or
sbb
add
insb
and
psraw
mov
mov
cltd
jl
jns
ret
not
cmp
mov
sbb
in
sahf
or
pop
lret
fs
enter
sub
adc
add
scas
cmpsb
in
sarl
adc
dec
ret
je
jbe
inc
cltd
pop
and
sbb
push
ds
pop
ret
or
ljmp
xchg
repnz
dec
jl
dec
mov
jge
loopne
mov
and
call
push
jmp
xchg
call
out
scas
pusha
subb
push
xor
and
aas
xchg
loop
addr16
cmp
xchg
out
jae
hlt
enter
imul
dec
push
iret
xor
mov
push
shrl
sub
pop
jp
test
jl
pop
pop
push
push
je
jl
shll
call
stos
push
mov
push
xorl
add
or
cld
int3
jnp
pushf
add
dec
xor
lahf
out
pusha
je
cmp
push
dec
push
jl
out
sbb
add
mov
jno
add
les
adc
fadd
push
insb
scas
cli
shrb
addr16
dec
loop
xchg
ficomps
sub
sub
mov
pop
jno
push
out
jnp
dec
aam
push
adc
jle
testb
pop
daa
push
jle
pop
icebp
mov
xor
push
mov
arpl
adc
jl
mov
dec
jl
xlat
or
loop
sarb
add
ss
imul
in
cs
movsb
insb
or
fmul
pushf
push
sub
dec
cli
insb
push
jp
dec
or
dec
xor
and
cmp
nop
ss
repz
or
mov
jnp
jge
daa
insb
shlb
sub
js
xchg
add
mov
fistps
cmp
push
jnp
push
leave
xchg
mov
stc
test
inc
loop
ljmp
jb
jl
xor
fnsave
out
sbb
push
and
inc
mov
daa
insb
jl
mov
mov
int3
lea
xchg
insl
inc
sub
mov
jo
outsl
xchg
movsb
jne
jl
inc
adc
jnp
or
das
sti
fisubs
mov
hlt
adcl
cmp
jne
insb
loop
and
mov
pop
aam
adc
mov
bound
call
cmp
out
das
xchg
insl
stos
jl
pop
sbb
pop
dec
push
hlt
inc
inc
adc
cld
mov
int
out
dec
sbb
xor
shll
push
ja
pop
sub
test
ss
pusha
mov
pop
push
loopne
aam
jecxz
leave
bound
in
movsb
and
out
add
mov
adc
loopne
in
rcr
xchg
sarl
arpl
xlat
cld
cmpsb
jl
inc
sub
or
sub
adc
in
scas
push
fnstsw
jl
mov
pop
jb
jl
sub
and
pop
pop
jl
test
xchg
ret
sbb
push
repnz
pop
or
adc
jb
cmpsb
jmp
lods
sbb
cltd
jl
or
add
xor
jl
das
into
fiadds
xchg
fnstcw
in
pop
int
push
jl
int3
sub
mov
call
inc
jnp
mov
and
cltd
jnp
mov
leave
bound
test
pop
or
jbe
je
mov
lock
in
repnz
ficompl
push
jae
jl
mov
xchg
push
pop
jmp
dec
cmpsl
cmp
add
into
insb
lods
call
imul
mov
stc
and
addr16
push
cs
push
aas
push
mov
insl
fsub
mov
stc
ret
iret
push
mov
sbb
push
sub
jl
in
dec
ljmp
sub
call
or
push
cmp
jl
fidivrl
lcall
add
aad
out
pop
jl
push
fyl2xp1
out
mov
mov
aad
pop
stos
popa
dec
or
insb
movsl
lcall
add
mov
and
cli
lods
mov
xor
adc
jl
mov
xchg
add
aas
call
mov
mov
xor
lahf
aas
cs
cmp
jl
cmp
sbb
cmp
push
jnp
cmpsl
sbb
pusha
xchg
mov
or
inc
fldenv
lock
jl
loopne
repnz
pop
push
mov
jl
lret
mov
imul
jg
mov
push
jl
ret
in
movsl
xchg
and
cmp
xor
add
and
dec
cmp
cld
adc
jge
push
shrb
mov
je
push
imul
lea
xchg
lret
mov
pop
cmp
rorl
icebp
jno
ds
jl
xchg
movups
inc
out
stos
cmpsl
mov
push
jno
loop
jnp
cmp
int3
jo
pop
dec
ljmp
sbb
aaa
jl
push
loopne
stos
imul
xchg
stc
cmp
or
ljmp
mov
or
xor
add
fs
sbb
test
jge
add
cmp
test
idivb
out
ljmp
jo
jmp
cmpsb
xchg
mov
xchg
in
pop
jle
imul
pop
mov
push
pop
shlb
mov
cmp
subb
jbe
mov
jl
inc
push
add
push
out
popa
xchg
test
xchg
or
dec
stc
inc
adc
sub
inc
or
aam
cmp
sub
stos
cmp
insb
iret
xchg
cmp
negl
es
sahf
fs
sbb
sub
lock
sarl
add
jb
or
mov
jmp
jge
xor
fstpt
sbb
adc
inc
cld
fnstcw
call
mov
imul
dec
mov
jbe
shl
cld
bound
and
pop
inc
dec
push
setne
cltd
lcall
fidivrl
sahf
dec
ljmp
inc
jb
inc
cli
sti
adc
pop
aas
lret
pushf
ljmp
stos
jnp
add
sub
xor
dec
int
std
or
call
jecxz
xor
adc
shrl
pushf
out
jne
inc
and
mov
or
mov
push
adc
or
imul
sub
inc
in
dec
jl
inc
cmpsb
adc
add
jl
out
je
dec
aam
mov
jl
add
mov
bound
dec
std
mov
lods
mov
fs
or
and
pop
and
mov
add
lahf
sbb
gs
mov
cli
mov
push
jl
inc
push
mov
jl
dec
pop
jg
scas
and
jmp
bound
push
lret
add
sbb
add
xlat
push
fmull
cmp
or
sub
pop
out
insl
pop
insl
lea
cwtl
dec
push
or
and
or
adc
fisttpl
outsl
aaa
sahf
shll
lea
jl
pop
out
fcmovne
imul
cmp
mov
jl
test
jmp
push
pop
xchg
jl
lock
stc
jl
rcrb
shll
sbb
leave
ret
aam
jge
cld
jl
cmp
lahf
out
push
dec
push
or
adc
mov
jl
mov
cld
movsb
pop
rcrb
movsl
xor
pop
mov
repz
fs
gs
insl
scas
addr16
jmp
inc
inc
aaa
fmul
lods
movsb
movsl
jl
add
pop
mov
and
add
mov
notl
push
sahf
repnz
int
es
lcall
bound
pop
fwait
jl
decl
or
mov
lods
sbb
mov
xlat
jp
sbbl
out
or
arpl
in
incl
mov
int
insb
sahf
sub
push
jl
mov
xrelease
inc
ss
adc
movsl
sbb
aaa
jl
inc
sbb
leave
dec
and
adc
dec
dec
out
inc
mov
pop
jp
sub
add
fmull
sbb
fsts
jle
pusha
sbb
xor
xchg
jle
adc
jmp
jl,pn
imulb
mov
orl
dec
stos
mov
cmpsl
xchg
mov
jl
xor
jbe
and
adc
bound
adc
xchg
mov
or
cmp
add
sub
cmp
jl
pushfw
mov
push
js
xor
jmp
cmp
ljmp
push
je
call
xor
into
jnp
mov
es
mov
mov
jp
fstpt
lods
loope
les
pushf
mov
mov
jl
imul
jns
fwait
test
insb
out
mov
and
mov
cwtl
xor
je
aad
jl
test
mov
movsl
aas
mov
push
dec
incb
sarb
dec
stc
pop
add
out
jae
fisubs
in
call
adcb
jl
jecxz
aas
adc
sarl
jl
dec
cmp
sbb
sti
cltd
arpl
cltd
jl
inc
int3
cmp
repz
jo
js
mov
jl
xchg
addr16
lds
lret
decl
pop
push
jl
mov
aas
cltd
and
push
cmpsl
data16
sbb
mov
add
std
xchg
inc
mov
jl
push
lret
or
jl
pop
sbb
dec
lods
dec
imul
andl
xor
data16
jl
lods
jle
mov
cwtl
loop
xorb
inc
cli
push
aam
arpl
es
stos
fs
repz
jle
ss
and
sub
jl
dec
lods
jno
xchg
pop
jge
in
mov
cmp
jmp
iret
fcoml
sbb
sbb
dec
sub
icebp
jbe
sub
jl
mov
push
mov
push
inc
add
xchg
push
fs
sbb
cltd
jne
fists
loope
out
inc
sbb
push
dec
pop
cld
popa
xchg
sub
sbb
jl
int3
loopne
aam
jno
xchg
adc
sarl
sub
mov
pop
inc
dec
and
jl
or
push
cmp
jl
popf
xchg
jae
lret
in
aad
mov
int
in
mov
lea
arpl
jae
xchg
in
sub
jl
outsb
push
sbb
add
std
jl
mov
jno
test
int
inc
dec
rorl
bound
mov
push
and
pop
jl
dec
aaa
sub
ljmp
testb
xchg
pop
add
loopne
ret
xchg
add
shll
orb
int3
les
arpl
pop
outsl
xor
cmp
in
xorb
jp
push
aaa
jbe
loopne
movsb
cmp
pcmpeqb
fidivrl
mov
jne
inc
push
jo
out
jb
sbb
dec
push
lods
mov
inc
cltd
or
and
iret
jl
inc
pop
sub
das
jl
cmp
adc
xor
insb
cmpsl
sbb
dec
stos
sub
out
push
loope
add
add
inc
in
mov
iret
bound
cmpsl
movsb
mov
lcall
mov
push
pop
fildll
mov
jmp
mov
jl
cld
loope
shll
hlt
mov
adc
lahf
sbb
stos
sti
mov
mov
fistpll
cld
jne
loop
repz
xor
pop
xor
push
roll
adc
dec
andb
mov
lods
cmp
imulb
test
imul
pop
dec
es
mov
push
in
xor
mov
test
jge
adc
sub
mov
sbb
inc
jl
stc
aaa
lcall
mov
cmpsb
dec
and
jl
mov
jg
push
in
push
adc
adc
cmp
or
inc
lea
fwait
jae
push
push
jno
je
ljmp
pop
add
jle
sub
faddl
loop
cmp
xchg
fs
push
decl
mov
mov
inc
jns
push
cwtl
ficompl
loopne
inc
lcall
jmp
fstpl
icebp
js
pop
lea
outsl
jns
mov
call
mov
and
out
sub
lods
in
jnp
movsb
or
sahf
xor
loopne
insl
push
sub
inc
or
iret
fs
sbb
jl
repnz
cmpsl
ja
lock
or
das
addr16
push
je,pn
push
mov
add
push
adc
bound
imul
pop
fisttpll
dec
mov
pop
sub
push
push
scas
push
sbb
jl
xchg
jmp
bound
out
and
dec
mov
fs
insb
lret
jl
mov
lods
push
push
pop
fstp
popf
and
fsts
pop
sahf
xchg
jl
adc
push
jno
cltd
sbb
pop
aaa
insb
sbb
cmp
mov
loopne
into
add
and
enter
addr16
jno
cld
push
jnp
add
stc
dec
in
jl
outsl
pop
icebp
add
test
test
jl
xchg
jno
sub
sub
ret
lcall
and
cmp
hlt
inc
adc
imul
inc
jl
push
mov
aam
or
jl
out
orb
scas
repz
sub
xchg
jl
jmp
out
and
cmp
add
cmp
jecxz
add
pop
jge
jl
aad
mov
jg
xor
insb
jl
adc
jl
xor
sub
fs
cwtl
loopne
test
sbb
adc
push
ljmp
js
or
inc
scas
sbb
add
je
push
fidivrl
repnz
adc
jb
sub
andb
lods
aad
xchg
pop
adc
fwait
sbb
lock
pop
call
mov
pop
xor
insl
cmpl
hlt
lret
int3
js
sub
adc
iret
cmp
rorl
loopne
xchg
fldt
cmp
je
arpl
scas
add
lahf
out
and
xchg
or
push
jns
jl
enter
push
or
pop
ds
jg
out
pop
call
je
into
adc
clc
jl
bound
cmpsb
xor
lahf
mov
xlat
cs
adc
es
sub
pop
in
mov
movb
pop
inc
fcomi
and
les
cs
push
stos
or
add
xor
aaa
xchg
cmp
xor
inc
inc
out
xchg
jl
mov
test
ds
xor
nop
pop
fisubrl
into
lret
xlat
jl
das
aam
out
pusha
lea
dec
int3
xchg
lcall
and
and
scas
popf
test
pop
test
cmp
aad
jl
xchg
int
repnz
jl
dec
add
test
inc
rcr
loopne
jb
and
push
imul
addr16
jl
mov
shl
xchg
or
mov
pop
jl
sub
and
inc
loopne
and
dec
sub
sti
dec
jnp
dec
rclb
sub
and
jp
xchg
inc
jl
xor
mov
jl
xor
or
cmp
in
push
jl
imul
hlt
call
cli
xchg
int3
lret
mov
cmp
dec
sub
fcompl
jmp
cmp
add
xchg
push
dec
jl
hlt
pop
pop
dec
jne
out
jl
cmp
pusha
jbe
idivb
push
add
scas
or
xchg
imul
jl
sbb
mov
jl
sbb
int
sub
jl
inc
sub
cmp
mov
dec
loopne
popa
jl
stos
mov
mov
pop
ja
out
push
dec
bound
mov
cmp
xor
sub
in
jle
adc
dec
ja
pusha
or
aas
adc
loopne
pop
call
cltd
pop
flds
cmp
out
arpl
cmc
addb
mov
fwait
cmp
jno
lcall
inc
push
jbe
mov
jo
mov
sub
lods
arpl
xor
jp
sub
pusha
jns
fistpl
ret
lret
sarb
into
out
jg
sbb
pop
or
aad
jl
mov
pop
outsb
inc
and
xchg
sub
adc
jl
sub
jl
out
das
test
fdivrl
xlat
cmp
mov
mov
push
push
aam
jmp
mov
pop
ss
je
dec
testl
insl
shlb
aaa
lret
fwait
mov
push
cld
dec
sub
jl
pusha
mov
aaa
jl
and
adc
mov
xlat
fdivp
cmp
fwait
rorl
xorb
fcoml
aas
jno
and
leave
mov
ret
outsl
dec
sub
stos
xlat
add
and
sbb
push
ds
mov
xor
inc
jl
lock
shrb
jne
push
jl
movsl
push
fiadds
jl
ds
push
sub
pop
rcrl
xchg
jno
sub
mov
loopne
sahf
jp
push
or
fwait
cmp
adc
cltd
je
mov
jl
cmpsl
xor
jl
push
push
and
pop
lret
adc
mov
iret
jge
pop
jl
mov
imul
mov
stos
mov
fadds
push
add
pop
sti
and
inc
std
loopne
enter
add
sbb
cmp
rolb
popf
fdivrs
aam
das
mov
mov
add
add
cmp
out
fidivrl
data16
lods
in
sbb
push
mov
ja
add
xchg
mov
lea
loopne
dec
dec
inc
js
mov
rcll
jno
pop
mov
std
inc
rcl
push
jno
dec
mov
xor
dec
in
imul
mov
xchg
pop
or
cwtl
cltd
bound
add
sub
movsl
push
jo
sbb
cwtl
xchg
jb
enter
cltd
vucomiss
add
hlt
mov
push
es
xchg
ret
cld
lret
dec
mov
and
jo
xchg
mov
mov
fsubp
lcall
or
mov
loopne
xchg
push
clc
xchg
mov
xchg
push
or
cltd
testl
stos
xlat
cmpsb
mov
jl
inc
les
pop
addr16
sub
dec
mov
cld
mov
fists
movsl
jmp
cmc
jbe
jl
ss
sub
lods
daa
jb
jl
or
bound
sbb
stc
cld
int3
mov
jmp
push
jne
xor
je
sbb
dec
scas
jl
dec
add
ljmp
add
mov
mov
sub
scas
lods
mull
cmp
pop
movsl
inc
add
dec
cmp
fldcw
and
lret
nop
idivl
xchg
sub
fwait
movsb
js
xchg
mov
mov
cmp
mov
cmc
jg
jl
test
call
or
adc
mov
add
pop
int3
sub
fistpl
pop
sub
popa
jno
jmp
mov
bound
push
push
xchg
jmp
mov
fmuls
cmp
inc
ljmp
jnp
push
ja
push
int3
adc
inc
xchg
js
aaa
je
dec
out
push
insl
adc
ficoms
push
lret
stos
cmp
xchg
insb
mov
jl
fistps
sub
and
push
add
lahf
jl
mov
in
adc
mov
xchg
cmp
jmp
jl
lock
fidivs
mov
loope
add
mov
rcll
cmpl
jne
jp
add
sub
mov
rcrl
repnz
sahf
outsb
in
lods
mov
dec
es
cltd
insb
push
jno
outsl
jl
stos
fildl
adc
jnp
inc
sub
xor
int3
jl
sbb
jl
fmull
movsb
gs
nop
andl
xor
jo
inc
aaa
adc
repz
xchg
cmp
repz
dec
pop
sbb
inc
cmp
mov
dec
aaa
rorl
inc
test
ficoml
in
xchg
dec
push
pop
sub
jae
pop
push
adcl
ret
daa
test
mov
sub
or
mov
mov
stos
adc
jg
jae
or
in
inc
mov
subb
std
sub
and
jl
sbb
xchg
push
sub
cmc
push
adc
or
jns
es
push
aam
inc
incl
mov
call
xor
roll
jl
xchg
or
fucomp
mov
and
xor
mov
xchg
or
int
data16
je
dec
bnd
insb
lret
add
inc
call
aad
push
mov
pushf
lret
push
mov
iret
das
lcall
hlt
sub
mov
pushf
dec
notl
je
in
int3
in
inc
xchg
stos
xchg
push
jnp
subl
add
jp
repz
sub
sbb
inc
jl
cld
push
icebp
sbb
sub
jl
and
subps
push
xlat
fimull
jl
bound
xchg
push
mov
jnp
sti
and
jae
loope
sub
out
xor
lock
test
push
in
cvtpi2ps
jnp
push
mov
and
mov
inc
xchg
pop
aad
dec
and
ret
cmpsb
add
loopne
inc
mov
pop
cmp
jl
sbb
and
xor
jl
pop
dec
mov
mov
lods
push
or
dec
mov
push
dec
fldl
jp
dec
mov
pushf
add
xor
lods
add
dec
sbb
cld
and
xor
jl
xchg
repnz
xor
jl
jecxz
push
lahf
sbb
jo
ds
sub
mov
ds
mov
mov
testb
enter
push
xor
push
in
loopne
xor
jbe
pop
jo
dec
xor
clc
pop
mulb
pop
insl
lds
inc
mov
pop
and
xchg
inc
dec
mov
or
xor
scas
jmp
clc
jl
arpl
ret
cli
lods
jl
xchg
inc
ss
push
dec
jge
ja
sub
scas
jl
pusha
ficoml
pop
movsb
xchg
in
mov
cmp
push
dec
pushf
sbb
mov
scas
sbb
cld
rep
dec
dec
cmp
push
cmp
bound
je
jl
les
adc
lods
negb
sub
stc
add
cmp
jle
mov
pop
sub
aad
jl
shlb
mov
shlb
cmc
mov
jl
mov
ret
idivl
jl
push
and
popa
jl
sbb
dec
aas
xchg
mov
push
jno
mov
imul
jp
es
inc
sbb
add
pop
repnz
insb
pop
push
pusha
nop
fistpl
rclb
in
insb
fdiv
pop
or
hlt
mov
sbb
xchg
jl
xchg
xlat
or
hlt
sub
jl
shr
inc
push
shrb
push
popa
sbb
xor
jne
jbe
lock
jns
cmp
pop
cmpsl
insb
fwait
cmp
ja
dec
mov
inc
jge
inc
xor
dec
mov
sub
mov
aam
adcl
rcl
pop
popf
xor
push
jl
mov
lret
mov
xor
lods
jns
push
data16
std
mov
ja
dec
dec
jmp
cmp
fchs
push
enter
inc
xlat
aam
jle
ret
add
stc
mov
rcr
xor
or
fstps
mov
outsl
jl
mov
push
ss
jl
test
mov
push
test
push
es
outsl
xlat
jnp
clc
adc
jnp
cmpsb
xor
adc
cmp
enter
jp
jbe
xchg
jl
ja
inc
mov
fmull
cmp
pop
nop
dec
adc
daa
rep
mov
iret
inc
xor
aaa
sahf
jo
jl
adc
mov
xchg
fcom
movl
fs
cmp
sub
call
pop
sbb
sub
jbe
and
in
les
ja
inc
jnp
inc
jne
shll
jl
mov
test
out
mov
repnz
cmpsb
nop
mov
xchg
fcmovb
add
xchg
mov
out
and
int3
into
jl
dec
jo
sbb
mov
jl
mov
pop
pop
xlat
jne
cmp
sbb
je
push
sarl
cld
mov
jl
shl
fnsave
jl
lahf
aaa
mov
jl
sub
loop
in
jl
sub
fadds
lods
insb
movsb
mov
lret
arpl
jl
mov
jg
cwtl
lods
mov
inc
sbb
hlt
lret
sti
sub
dec
mov
mov
xor
ljmp
js
imul
shlb
aad
out
mov
sub
push
call
cmp
xor
or
jl
lret
sti
pop
loope
jl
adc
je
jnp
lds
mov
cmp
jp
sbb
loop
mov
sub
insl
jo
pop
sub
add
sub
imul
jl
push
test
in
mov
push
insb
pushf
lahf
mov
xor
outsb
xchg
aad
mov
dec
and
arpl
leave
push
mov
xor
das
out
mov
cmp
insb
ret
cwtl
sub
aas
in
push
mov
mov
xor
fisubl
fdivrp
and
adc
loopne
pop
fsubrl
std
ja
loope
insb
stos
orl
fistl
mov
fwait
lods
and
insb
add
jbe
jecxz
outsl
jl
dec
and
adc
cmp
jl
bound
mov
and
jl
ret
rolb
add
cmp
xor
xor
jl
mul
aam
repz
jl
push
mov
into
icebp
popa
in
sub
sub
jl
and
lret
sub
pushf
hlt
es
add
les
jl
mov
dec
xchg
mov
mov
jae
cmp
stos
pop
bound
mov
int
insb
fwait
push
outsb
dec
jae
add
movb
jl
imul
insb
stos
movsb
pop
inc
loop
jno
mov
cld
hlt
sti
sub
mov
pop
xchg
fistps
jl
mov
negl
dec
fsincos
jmp
repnz
outsb
inc
mov
mull
add
push
es
or
sub
inc
das
outsb
fs
mov
push
and
gs
xchg
jl
stos
cltd
fstp
push
mov
paddsb
mov
insb
mov
adc
xlat
mov
leave
repnz
push
push
or
mov
not
xor
lahf
jge
xchg
out
jl
lods
cmp
jl
xchg
mov
aas
jl
push
mov
jl
shrl
push
adc
fistpll
xchg
xor
jo
jne
jl
out
dec
fadd
addr16
jl
test
fdivrp
nop
adc
jl
adc
leave
in
or
aam
scas
jl
testl
bound
xchg
jbe
movsl
idiv
dec
jl
sarl
das
jmp
fidivs
cmp
sub
rorb
fwait
sti
sub
jo
push
xchg
jl
daa
mov
cmp
and
mov
push
push
fistpll
jp
cltd
push
mov
je
les
jl
das
addr16
stos
sub
add
ret
push
gs
fwait
jl
mov
leave
cmp
xor
sbb
sbb
cmp
repz
jl
loopne
into
adc
mov
xor
rcl
dec
ljmp
push
imull
dec
inc
adc
shlb
and
sub
popa
adc
xor
sub
loope
in
sub
mov
outsl
push
add
jl
les
or
nop
daa
ret
jl
xchg
dec
pop
sarb
jl
xor
push
cld
push
adc
jl
ss
sarb
mov
and
xor
mov
ret
add
push
inc
jnp
movsb
das
mov
xchg
xlat
jl
arpl
in
or
xchg
or
push
mov
repz
mov
addr16
adc
fwait
mov
cmpsb
sub
xor
test
mov
xchg
outsb
aaa
xchg
cmc
jl
dec
push
or
bound
in
jae
leave
fwait
adc
nop
aam
into
je
push
inc
jl
data16
cltd
mov
ret
jmp
mov
add
sub
push
mov
mov
mov
fbstp
pop
xchg
jl
mov
add
jnp
popf
lea
jmp
faddl
lods
pop
std
js
cmpsl
cmpl
push
xor
xchg
mov
mov
jnp
dec
shll
mov
add
or
xchg
cmp
mov
mov
cmp
inc
mov
lock
lods
sub
jl
sar
test
jmp
mov
sub
loop
test
sbb
jl
movsl
rolb
into
stos
push
std
out
jl
sbb
xor
jo
fsts
int3
je
dec
sbb
adc
hlt
pushf
decb
jl
shlb
xor
lea
add
mov
jl
subb
jge
into
imul
or
cmp
test
pop
and
icebp
xchg
mov
insb
movsl
or
stos
in
and
jl
shr
pop
out
int
jl
adc
dec
pop
jl
sub
push
pop
mov
test
ja
cmp
xor
scas
mov
adc
jl
lods
iret
scas
cmp
call
xchg
insb
mov
and
jl
fdivl
sbb
test
pop
loopne
int3
adc
aas
enter
xchg
jl
cmp
adc
rcr
jl
dec
div
test
out
jl
adc
ljmp
je
add
cmp
sub
sbb
stos
inc
pop
lahf
ds
nop
pusha
incl
or
push
sbb
add
cmp
jbe
and
or
push
in
adc
out
mov
jno
xchg
dec
inc
leave
push
pop
jl
aam
mov
movsb
dec
shrb
cmp
jl
jp
xor
in
int
cmpsl
jl
std
xor
lret
cmc
cld
jl
inc
and
jl
add
pop
repz
and
addb
jne
sbb
xchg
ds
sbb
sahf
cmp
ficoms
adc
mov
aad
sub
ljmp
les
dec
repnz
cmp
jno
in
sub
lret
out
je
daa
mov
sub
lcall
int3
lds
lahf
sub
in
xchg
mov
sub
loopne
addl
sbb
add
or
jl
out
gs
mov
dec
jae
hlt
sbb
sbb
xor
adc
in
aad
jl
sahf
cmpsl
mov
push
movsl
loope
sub
xlat
add
fidivl
rcrb
cmp
pushf
stos
mov
mov
dec
lret
sub
sub
divb
popf
jl
cmp
daa
sbb
in
cmp
mov
adcb
fsubrl
sbb
mov
xchg
insb
adc
sub
jl
inc
pop
test
dec
cmp
jno
jl
aaa
jae
jp
pop
scas
ss
es
xor
mov
jl
mov
icebp
or
loop
jno
hlt
or
jle
dec
fdivrl
jb
inc
out
jl
iret
mov
dec
jno
jl
mov
movsb
jne
inc
push
fdivl
push
jl
arpl
fldt
jno
lea
sahf
dec
jl
push
adc
jnp,pt
js
push
push
push
int3
cld
jb
out
ret
loope
xchg
mov
dec
call
daa
add
mov
sub
add
or
push
bound
hlt
insb
pop
xlat
or
mov
push
inc
adc
mov
xchg
jl
fs
daa
js
mov
pop
and
int3
test
test
mov
hlt
xchg
sbb
insb
je
mull
out
cmp
in
jl
and
cmp
arpl
and
in
sbb
std
jl
sarl
pusha
sub
xorb
or
cmp
fdivrl
leave
sub
push
daa
mov
add
or
add
imul
ss
and
push
dec
cmp
mov
jle
push
cld
lcall
jl
into
push
test
daa
stos
cmpl
mov
sub
dec
ss
or
lcall
fldenv
inc
and
jl
xchg
adc
add
repz
and
cmpl
and
jl
pop
sahf
adc
iret
xlat
fwait
in
jmp
aad
nop
stos
jl
push
push
pop
out
lods
jne
ret
rorb
adc
iret
push
mov
push
jl
popa
sarb
adc
test
pop
sbb
je
in
jno
pop
mov
shrl
add
dec
sti
push
idivl
iret
dec
jne
and
xor
xor
add
jecxz
jle
in
push
jl
mov
sub
push
stos
fwait
enter
stc
sub
mov
loopne
push
pop
hlt
push
cmp
adcl
int3
data16
or
aad
popf
ret
cs
xorl
in
out
mov
jbe
dec
sbb
loopne
mov
aam
jno
xor
and
insb
jae
push
mov
mov
aaa
inc
pop
arpl
inc
or
insb
imul
jmp
or
jnp
outsl
inc
ja
pop
and
lods
mov
add
dec
bound
dec
and
jl
aaa
mov
sbb
jmp
jo
jae
jg
jo
lock
aaa
pop
jl
or
mov
jl
test
test
jg
jl
xchg
lock
int
loopne
sub
sbb
pop
mov
lock
je
call
fisttpll
aas
in
repz
jl
push
movsl
arpl
stos
sbb
add
jl
xor
ljmp
pop
cld
inc
sub
xchg
jl
gs
add
outsl
aas
out
jmp
jnp
push
loope
add
cld
dec
push
lods
loopne
cs
adc
push
je
adc
push
stos
das
leave
jb
nop
in
loop
dec
cmp
jp
js
enter
mov
and
jl
loop
in
mov
adc
outsl
lret
cmp
and
fcoml
mov
adc
sbb
in
pop
mov
iret
pop
test
pop
fisubs
or
sbbl
test
and
jno
sbb
xor
imul
stos
jl
mov
and
fidivrs
pop
pop
push
cld
sarb
daa
cmp
mov
sbb
movsb
xor
insb
or
ret
mov
clc
test
cmc
ss
stos
cmp
mov
pop
je
in
movsl
jl
pop
outsb
cmpsb
or
sbb
jge
jl
dec
pop
aaa
xor
shr
jl
pop
or
xor
cmp
loopne
jl
xchg
adc
mov
fldt
push
cmpsl
inc
adc
push
fcoml
mov
jl
enter
pop
adc
jl
jecxz
mov
adc
mov
mov
sub
aaa
ja
dec
shll
adc
rep
xchg
daa
mov
pop
inc
sbb
in
jl
mov
stos
lock
test
aad
mov
dec
jne
or
adc
mov
mov
inc
jle
push
xchg
stos
stc
js
push
mov
jae
pop
adc
into
and
inc
add
lods
or
fstpt
sub
es
add
and
movsb
cmp
cmp
xchg
bound
mov
adc
insb
sbb
push
pop
ret
mov
outsl
fwait
aam
jl
mov
sahf
mov
jo
jne
push
gs
sbb
or
ficompl
enter
sbb
and
ja
pop
jbe,pt
jl
pusha
or
mov
xchg
push
xchg
mov
out
sbb
jg
sbb
cmpsb
fdivp
mov
aas
mov
jg
daa
pop
fwait
jno
jae
add
mov
outsb
loopne
dec
jl
jne
leave
cltd
add
into
test
ja
scas
jl
or
dec
inc
jno
faddl
push
outsb
fisubrl
mov
mulb
jl
push
js
pop
std
sbb
lret
xchg
int3
daa
push
jl
inc
ss
and
jbe
jnp
cmp
mov
and
inc
pop
jl
aam
das
ret
movsl
xor
mov
insl
out
cmp
movsb
in
test
in
rorb
into
mov
pop
arpl
or
int3
sub
jle
idivl
loop
imul
jb
sahf
jnp
gs
insb
pop
data16
test
jmp
mov
mov
adc
adc
fnstsw
pushf
mov
jbe
incl
lods
push
adc
dec
js
jle
cmpl
testl
popf
in
inc
add
add
and
sub
or
push
xor
push
xor
ja
xor
sbb
imul
dec
mov
inc
jns
dec
push
bound
sbb
mov
bound
adc
mov
mov
fbld
dec
loope
cmp
movsb
inc
cmp
sbb
adc
das
hlt
or
jl
scas
insl
gs
and
in
movsb
cmp
mov
fstps
ja
lods
or
and
jmp
in
out
or
push
jl
jb
data16
mov
inc
mov
fs
xchg
lds
daa
mov
jmp
sbb
jp
mov
out
pop
iret
or
add
cmp
in
mov
fidivrs
fstpt
cmpsl
jb
es
push
sbb
jns
mov
je
rcr
ja
mov
push
and
mov
out
mov
jnp
iret
fisttpll
in
sahf
jp
sbb
pop
mov
sbb
ljmp
cmp
cmpsb
nop
cmpl
in
jl
xchg
call
cmp
lret
data16
cmp
mov
lock
add
pop
call
rcrl
shlb
mov
adc
and
stos
cmp
shrb
imul
lods
adc
sbb
pop
stc
push
fcmovne
stc
pop
int
je
mov
daa
popa
sbb
test
mov
xchg
fcmovnu
jl
fsubrs
jle
addr16
mov
xor
into
jne
es
cltd
inc
ret
fisubl
xor
mov
mov
icebp
and
idivl
lods
ss
add
jl
lock
clc
mov
insb
mov
aas
call
outsl
mov
js
fisubs
mov
call
or
ret
mov
insb
in
ret
fsincos
popa
inc
fildll
adc
jns
adc
mov
cmp
xlat
xchg
movsb
push
jnp
mov
inc
push
je
push
xor
mov
jl
pop
cltd
cmc
mov
imull
adc
loop
popa
aad
loope
push
dec
test
xor
cmp
jl
jbe
int
ss
or
cmp
and
xchg
jl
aas
pusha
jmp
in
bound
out
jbe
jg
cmp
imul
jo
subb
mov
inc
int
int3
jl
xchg
lock
out
vpsubsw
fsubs
test
xchg
jl
clc
or
push
xchg
add
jl
jmp
jge
out
rol
push
mov
sbb
lods
xchg
je
sbb
cld
push
shlb
sarb
flds
lret
mov
pop
xor
daa
jmp
adc
jl
test
or
and
popf
pushf
xlat
jl
flds
jl
hlt
sub
push
inc
add
inc
test
jl
push
cmp
mov
cmpl
std
cmp
sub
hlt
insl
fistl
dec
imul
mov
cld
xchg
mov
pushf
dec
dec
test
int3
out
outsb
jno
jl
sahf
cmp
push
adc
jl
mov
dec
leave
jl
mov
cs
and
push
mov
push
mov
popa
adc
pop
cmp
aad
cmp
rcr
xor
jl
js
into
repz
jl
add
pop
push
out
lock
jl
roll
fwait
addb
mov
sub
mov
adc
js
jmp
jo
insl
sub
jb
sahf
jl
bound
push
jl
fidivrs
mov
aaa
cwtl
jl
cmpb
mov
lods
xchg
jb
insl
jl
adc
loop
les
sub
inc
adc
es
jnp
jne
jo
das
mov
mov
dec
xchg
inc
fadds
sbb
xchg
xor
lcall
pop
sub
jns
sar
mov
mov
stos
js
mov
mov
pop
or
xor
cmpsl
adc
gs
mov
push
push
sarl
or
loope
jge
mov
push
push
jl
call
clc
ret
jl
fcomps
es
lret
xor
sub
sub
xchg
mov
jl
lret
insl
xchg
push
stc
adc
dec
and
dec
and
xchg
into
nop
je
loope
movsb
jne
mov
push
and
daa
add
mov
pop
jp
lcall
sahf
pop
lret
jae
into
xchg
mov
push
daa
in
inc
mov
cmp
es
pusha
or
cmpl
cmc
push
jl
imul
popf
jmp
mov
lret
push
cmp
ret
clc
pop
cli
aas
cmp
in
loop
sbb
decb
adc
mul
aaa
mov
or
stc
push
repz
outsl
imull
add
jl
testb
js
loope
cld
push
jnp
pushf
test
mov
xchg
repnz
cmp
outsb
mov
mov
fimuls
jns
mov
in
aam
and
outsb
notb
xchg
test
mov
sarl
push
inc
push
sarb
sub
loopne
push
test
fisubl
lds
jl
cmpsl
inc
dec
hlt
rolb
jno
in
sarl
js
jns
ss
sub
sub
adc
pop
or
sub
mov
mov
lods
xor
or
jnp
push
cld
lahf
aam
push
pop
xchg
jl
xor
fsubrl
mov
aad
jno
stos
lahf
jl
inc
sbb
sub
sbb
add
adc
jnp
jmp
add
adc
andb
loopne
imul
jl
adc
popa
push
pop
mov
mov
fldenv
mov
xor
scas
sub
je
cmpl
dec
jl
adc
mov
out
adc
and
popf
cmpsb
jl
jno
jo
scas
jl
add
nop
scas
mov
mov
stos
cmp
push
jb
mov
adc
jl
adc
xchg
fsubl
jl
cmp
loopne
push
jl
xchg
push
stc
push
aaa
sub
pop
das
cmp
pop
and
jl
aam
enter
jne
pop
xchg
jmp
sbb
iret
mov
insb
add
jnp
cmp
push
sbb
enter
inc
cmp
test
daa
lcall
push
xchg
ret
int
fdivl
inc
jl
fists
loopne
or
stos
mov
xor
jbe
in
loope
icebp
cltd
cpuid
pop
sahf
and
out
out
outsl
mov
push
int3
jl
or
out
dec
xor
stos
repz
sbb
cmp
add
enter
jl
jno
adc
cmp
add
jns
es
dec
fbld
or
or
cmp
push
sbb
sbb
xchg
insb
dec
cmc
ror
push
shll
aam
mov
cmp
and
rolb
ret
pop
jl
push
mov
or
xor
sub
orb
inc
dec
inc
or
lods
pop
or
xor
jl
call
pushf
lret
dec
xchg
mov
push
test
cmp
jg
mov
and
in
dec
fistl
xchg
clc
mov
jp
rorb
sub
insb
sbb
aam
xchg
mov
dec
and
mov
adc
imul
jns
fidivrs
mov
adc
stc
mov
sbb
mov
in
sbb
jl
aas
push
sub
cmp
int3
pop
jl
int3
push
pop
or
sbb
mov
movsl
xchg
orl
sbb
jmp
or
push
in
xchg
cmp
dec
inc
inc
mov
or
mov
loop
jl
leave
add
mov
rcrb
loope
inc
mov
push
xchg
mov
es
rcr
cmp
pushf
mov
jl
pop
cmp
sub
cli
sti
andb
idivl
jno
mov
adc
in
sbb
fistpl
add
arpl
sub
aas
imul
clc
jns
and
in
add
sbb
sbb
mov
jl
xchg
xchg
mov
push
jmp
push
push
push
jle
aad
sub
insb
jg
xchg
add
mov
inc
push
es
jl
roll
inc
les
lods
xor
jnp
gs
xchg
adc
pop
fcomps
jle
fs
sub
fs
scas
mov
push
cmp
fstpl
xor
insb
and
mov
pop
mov
jl
xlat
nop
mov
adc
adc
xchg
std
sub
insb
push
or
aad
sahf
shll
or
xchg
jl
lods
addr16
jb
lds
cmp
cmp
mov
mov
out
fistpl
push
mov
stc
lock
dec
inc
pop
test
sahf
int3
ljmp
je
or
lret
dec
loopne
jle
sbb
js
mov
fsubrl
sub
xchg
cs
cmp
xadd
movsb
jo
aaa
xor
sbb
mov
pop
pop
jl
adc
inc
add
jl
sbbl
lret
pop
sbbb
js
xchg
push
imul
mov
xchg
dec
frstor
xchg
adc
push
pop
jl
xchg
xor
pop
sbb
cmp
aam
add
idivb
sub
popf
pop
cmp
bound
cmp
mov
loope
addl
inc
pop
sub
mov
xchg
insb
sbb
jecxz
es
sti
shll
fs
inc
lcall
test
or
sub
mov
adc
aad
xor
sahf
sub
rolb
sbb
lods
add
or
movb
mov
cmp
inc
adc
fcoml
cmp
shlb
fimull
call
sbb
mov
jns
icebp
adc
add
scas
aas
sbb
add
and
jl
test
xor
mov
inc
jl
dec
loopne
jno
lahf
xor
movsl
jl
loop
sbb
sub
add
jl
cltd
dec
iret
or
loopne
loop
fwait
mov
cmp
mov
stos
test
popa
mov
xchg
mov
int3
arpl
mov
push
jl
push
or
rcr
jl
inc
arpl
aas
int3
sahf
idivl
xchg
inc
and
scas
push
jl
stos
mov
scas
cmpsb
dec
pusha
movsl
inc
push
mov
add
cmp
movsl
test
movsb
sub
mov
add
mov
lock
jl
push
mov
outsl
inc
cmp
iret
shrl
test
cs
mov
cmp
and
out
sbb
jl
adcl
enter
jl
mov
sarl
mov
sub
or
sub
pop
aam
inc
mov
push
and
inc
pop
inc
jno
faddl
cmp
ror
mov
cli
jnp
jl
and
lahf
jl
inc
repz
fs
in
fidivrl
cmp
dec
dec
data16
sub
fsub
inc
inc
jge
cmp
adc
add
test
idivb
and
shlb
push
add
mov
mov
je
inc
mov
sbbl
jl
pop
mov
cmp
cmp
iret
push
cmp
repz
cmp
and
jne
gs
subl
in
in
call
stos
mov
gs
jl
lea
das
or
mov
mov
push
xor
sarb
or
pop
mov
cmc
jl
aaa
cmp
mov
jl
notb
out
pusha
and
xlat
sub
cmp
sbb
pop
push
subb
jl
xor
mov
test
jl
sbb
insl
xchg
mov
scas
jb
jl
mov
push
pop
rcll
and
pop
mov
lds
add
movsb
jl
or
sub
scas
xchg
int3
lahf
sub
xor
in
icebp
popa
sbbl
add
sub
adc
add
and
and
xor
push
scas
adc
mov
jl
nop
push
arpl
push
jnp
or
sbb
pop
pop
es
xor
fidivl
pand
test
mov
or
ja
mov
jne
jl
cmp
mov
mov
sub
cmp
movsb
pop
or
ds
loopne
out
movb
lahf
push
xchg
and
and
leave
dec
mov
mov
outsb
cwtl
jl
sbb
addr16
rolb
push
adc
pusha
sub
xor
mov
int3
ja
xor
jb
jno
add
and
lods
mov
in
sbb
int3
fnsave
mov
add
in
push
rcrl
loop
jecxz
jp
pop
ret
mov
testb
lods
jnp
daa
pop
xchg
bound
jne
adc
xchg
shrl
in
push
add
stos
cmp
mov
popa
mov
sbb
jl
sub
mov
jns
jl
pop
mov
jo
test
cmp
insb
xchg
lret
cmp
mov
dec
or
sub
jl
sub
es
and
jp
xchg
jle
shl
jl
or
lds
dec
sub
jne
fldenv
jl
xor
cmpb
sub
lcall
sub
lock
cmp
inc
adc
in
int3
js
idivb
fadd
jmp
filds
jne
jl
push
sub
lds
jmp
fidivrl
je
cs
sarb
dec
repz
jne
jl
leave
in
arpl
std
jl
stos
fs
xor
fsubl
adc
cmp
mov
jp
call
hlt
inc
xchg
jl
rcl
sahf
push
jp
lds
aaa
sarl
xchg
fcmovu
cmp
or
jno
add
push
jl
and
ja
mov
or
loope
mov
sbb
jecxz
cmp
cld
jl
adc
jge
dec
rorb
loopne
sbb
xor
cmp
sti
cmp
jl
pop
lret
fisubs
das
insb
mov
xchg
leave
cmp
and
pop
aas
add
mov
inc
in
test
mov
pop
fadds
jl
mov
inc
dec
aaa
mov
shl
movhps
cmp
add
hlt
mov
ss
mov
add
jl
mov
adc
mov
outsb
jge
test
cwtl
jl
or
es
add
xchg
scas
test
movsl
and
adc
mov
push
inc
dec
inc
jno
jl
movsb
dec
jo
mov
pop
inc
mov
ret
aam
dec
push
jo
pusha
push
mov
fdivrl
and
sub
pop
pop
adcb
jl
push
inc
sbb
stos
test
orb
cwtl
sbb
das
sarl
mov
adc
mov
pop
cmpsb
sarb
cmp
cmp
std
mov
cmpsl
stos
pop
out
dec
lds
dec
aam
push
dec
mov
jle
loop
sbb
mov
push
mov
rol
std
mov
and
rolb
lea
and
sarb
dec
sbb
flds
insb
iret
and
nop
mov
arpl
stos
pop
in
fwait
mov
out
insb
mov
xchg
aam
adc
dec
jl
fldcw
mov
outsb
cmp
ret
dec
outsb
outsl
sti
int3
cmpl
inc
je
test
jl
jecxz
nop
mov
mov
insl
mov
lods
xor
fwait
jl
push
and
clc
test
jmp
adc
or
popf
fxch
in
and
adcl
lret
stc
std
fdiv
outsb
jbe
xor
adc
and
cs
in
sbb
mov
or
and
inc
dec
push
sbb
mov
cwtl
mov
cmpb
test
cmp
sub
and
fsubp
insl
dec
inc
jl
std
test
fs
and
js
out
jl
or
mov
std
stc
out
sub
in
pop
dec
jae
das
or
xor
mov
and
cwtl
mov
xchg
loopne
or
into
xchg
xchg
mov
mov
in
sbb
rorl
test
pop
je
out
popf
pop
pusha
jl
stos
cmp
dec
jb
jge
adc
add
aas
sub
cmp
repnz
jno
enter
lea
push
gs
out
outsl
repz
and
jl
lret
mov
push
add
jl
jno
adc
loopne
dec
and
sub
popa
repnz
jge
sub
imul
insl
jbe
jl
jne
jmp
push
les
faddl
mov
jl
jmp
lock
sti
sub
add
and
push
insb
into
out
fsts
divb
jl
jne
mov
mov
imul
jl
xchg
ret
pusha
or
mov
xor
xor
enter
stos
sbb
jnp
inc
ss
jae
in
xchg
jo
or
adc
add
cmp
jl
in
lret
push
pop
jnp
popf
mov
dec
fidivs
out
dec
push
mov
les
pop
int3
mov
daa
mov
fwait
sub
sub
ljmp
dec
iret
jl
inc
mov
xorl
repz
or
pushl
cmc
add
movsb
mov
sub
jnp
xchg
in
sbb
je
inc
popa
mov
mov
mov
cmpsb
sbb
int3
inc
loope
jno
outsb
pop
inc
cmpb
in
dec
in
push
jl
push
cmp
and
jl
jbe
mov
push
lock
scas
inc
stc
add
stc
jge
sahf
cmp
jl
inc
and
inc
scas
mov
mov
das
jno
hlt
jl
test
lcall
ret
dec
sub
js
jl
rorl
add
jnp
cli
mov
out
push
pop
mov
xchg
or
jl
mov
cwtl
or
mov
add
jbe
loop
pop
sub
add
pop
mov
jl
cltd
jb
jge
xlat
push
jl
cmp
adc
in
mov
rcll
jl
jne
lods
std
aas
xor
mov
gs
inc
inc
jp
push
push
into
adc
cmpsb
jge
pop
and
and
jl
add
or
mov
test
mov
ss
insb
iret
sbb
mov
jl
dec
ret
cmp
mov
mov
in
adc
sbb
jl
rcrb
ret
push
sub
ljmp
call
xor
frstor
jl
mov
lret
cmp
jp
jl
icebp
testb
outsb
mov
repnz
pop
xor
fsubrp
pop
sub
imul
dec
and
daa
nop
jnp
mov
clc
out
jl
movsb
loopne
xor
aam
add
ljmp
cltd
jle
and
push
jl
mov
push
xor
fidivrs
mov
xor
or
in
add
mov
jb
mov
inc
push
cmpsb
call
jl
or
mov
jge
mov
mov
imul
mov
inc
sub
jp
jl
jge
decl
iret
sub
push
jo
mov
adc
clc
and
and
jns
push
mov
sub
test
imul
cmp
stc
into
int
add
cmc
cltd
icebp
aas
or
scas
cmpsb
mov
jl
and
pop
ljmp
clc
xchg
dec
test
test
mov
adc
rorb
iret
sbb
inc
lahf
mov
cmc
add
stc
cmp
sbb
loopne
cmp
cmp
add
cmp
aas
or
lahf
xor
and
mov
fs
jl
inc
or
js
xchg
jo
cmc
add
sub
jl
cmp
ljmp
stos
mov
or
push
push
inc
jle
arpl
jl
fdivl
stos
mov
or
mov
mov
insl
enter
lahf
dec
in
jecxz
outsb
mov
cmp
movsb
push
mov
jb,pn
adc
jnp
jo
test
sub
push
popa
addr16
stos
xor
shl
fists
jp
jecxz
call
push
shl
lret
scas
mov
cmpsb
ljmp
dec
psubw
xor
jl
mov
loope
leave
jl
xchg
pop
sbb
ret
arpl
in
std
jle
pop
jl
cmp
xor
pusha
jp
mov
jb
fs
insb
enter
std
jl
adc
xchg
and
xchg
add
xor
mov
js
add
mov
es
je
xchg
les
xchg
jl
sub
bound
sub
jl
ds
clc
mov
push
add
or
insl
insb
js
int
lock
jl
fistpll
movsb
xor
mov
xor
mov
arpl
pop
sub
xlat
mov
adc
int
or
aas
mov
jl
xor
das
xor
sarb
jl
push
xchg
cmp
fadd
es
popf
pop
lock
clc
lar
test
cltd
jl
cmp
jp
jnp
orl
aam
add
xchg
shrb
xor
jl
insl
fisttps
adc
jb
jl
idivw
add
loop
pop
add
stos
mov
call
cwtl
sbb
jg
mov
xchg
pop
leave
lahf
inc
call
flds
mov
mov
fs
adc
mov
loopne
or
sbb
or
mov
jge
fidivl
push
test
stos
or
inc
inc
nop
push
filds
loop
je
out
jecxz
imul
test
jp
mov
enter
inc
jl
mov
mov
call
scas
sub
lret
jl
test
stos
and
jl
cli
push
xor
and
push
mov
inc
xor
jl
insl
adcl
ret
add
jp
loope
and
js
add
cmpsl
adc
sahf
xchg
mov
ja
mov
jl
and
xchg
jl
adcl
jge
sahf
jae
or
mov
in
ja
mov
jl
mov
or
jl
inc
addr16
nop
or
jl
icebp
or
xorl
and
jo
dec
or
cmp
std
dec
adc
sub
push
sarb
sbb
xor
movsb
pop
or
shl
ss
mov
je
push
decl
rcrb
mov
fildl
sub
fs
push
out
push
and
mov
insl
mov
out
sub
jp
cmp
inc
aad
and
test
dec
jl
cmp
xor
xor
xor
cmp
test
mov
jle,pn
loope
jl
cmp
cmp
or
sbb
movsl
gs
push
aad
dec
mov
dec
sahf
jb
pushf
mov
push
aad
movsb
fcmovbe
fisttpl
xchg
dec
adc
ss
aaa
scas
stos
in
xor
call
add
jae
cli
call
fs
movsl
sbb
sub
icebp
xor
xor
xchg
push
cmpsb
stos
add
imul
cmpxchg
in
push
pop
fisubl
cld
xor
iret
push
jl
pop
repz
mov
ret
shll
jge
in
clc
pushf
jl
std
cli
push
push
out
sub
sar
test
daa
xor
add
lods
dec
testl
call
mov
or
mov
in
data16
jg
arpl
lods
es
jl
pushf
jbe
dec
and
dec
fcomp
dec
lret
jle
enter
inc
cmp
mov
push
lret
out
mov
sarl
add
scas
sahf
cmp
imulb
imul
jl
cli
pop
adc
jp
jl
push
movsl
ret
stos
mov
mov
pop
mov
mov
rcl
je
mov
cld
pop
or
jmp
outsb
ss
daa
inc
adc
jno
insb
adc
inc
pop
rolb
cmpl
pop
jnp
cmp
daa
inc
sti
pop
jle
xlat
jl
mov
dec
rclb
add
and
sub
mov
dec
mov
and
xchg
ret
jl
inc
sbb
xlat
mov
loop
daa
in
xchg
cmp
xchg
js
test
jl
add
dec
jmp
inc
jbe
ret
mov
movsl
xchg
out
mov
cltd
lock
outsb
dec
jno
and
push
sub
push
and
xchg
jl
sub
cmpsl
fildl
dec
fidivrl
test
and
insb
cmp
pop
cmp
cld
and
jb
jge
jl
cmp
xor
push
mov
adc
and
rol
sbb
sbbb
imul
jo
std
aad
scas
out
push
in
mov
in
fimuls
arpl
inc
int3
fidivrl
sahf
push
inc
into
out
jl
fincstp
aad
xor
cmpsl
insb
enter
cli
xor
icebp
or
fcoml
inc
pop
rolb
push
ds
in
in
sbb
mov
mov
mov
jecxz
test
push
fwait
mulb
fisubs
std
jl
ret
les
sbb
loope
xchg
jl
ret
xchg
inc
jbe
jo
jb
outsb
sbb
adc
push
lret
xlat
test
frstor
or
jl
subb
jl
sub
jmp
or
les
jl
insl
mov
popa
enter
pop
lods
aas
imul
jge
sarb
and
jl
mov
imul
icebp
mov
idivl
pop
add
cmc
cli
aas
cmp
xor
gs
fs
xor
pop
mov
xchg
add
add
dec
jl
or
ja
icebp
push
call
cmp
and
xchg
popa
xchg
test
add
repz
sbb
xor
cmc
imull
mov
mov
sbb
pop
dec
jecxz
sub
inc
sahf
cmp
jnp
pushf
jb
lock
inc
addb
mov
ret
test
or
inc
jl
hlt
xor
out
jl
aam
outsb
in
xchg
jb
jl
cmp
aas
adc
xlat
inc
jnp
pop
cs
ds
faddl
cmp
xor
pop
mov
sub
in
int
gs
dec
jp
mov
incb
jnp
addr16
vpandn
jg
jl
lea
jae
cmc
jl
mov
lods
mov
mov
cs
js
jne
sbb
sub
mov
flds
xchg
repnz
mov
test
inc
adc
dec
das
sahf
mov
mov
xchg
lahf
mov
out
ds
jne
lods
mov
pop
pop
fsubrp
out
fstpl
call
jge
xchg
push
sbb
xchg
add
mov
mov
dec
xor
fmuls
ret
fs
hlt
test
loope
dec
lret
cmpsb
xchg
jl
cli
adc
mov
jl
and
jl
sub
cmp
rolb
mov
or
jne
ljmp
inc
pop
cs
rorb
push
mov
push
insb
jge
push
test
mov
icebp
bound
mov
push
loop
rolb
mov
sbb
rcl
test
inc
pop
sub
cmpsb
inc
sub
dec
pop
insb
stos
cltd
cmp
scas
shrl
sbb
out
fs
jl
cmp
cmp
loopne
dec
leave
push
or
lahf
ffree
insb
push
es
xchg
push
dec
jl
out
ja
mov
in
mov
sbb
jl
cltd
cmp
xor
jbe
jl
or
and
jl
sub
dec
add
pop
lods
jl
das
ljmp
les
loopne
cmp
int3
sti
jl
out
mov
inc
add
jmp
rcll
xchg
or
loope
insb
pop
enter
call
jae
pop
daa
rcr
ss
and
jnp
insl
adc
mov
in
pop
iret
aaa
clc
outsl
xchg
jl
sub
sbb
enter
dec
icebp
pop
lods
sbb
mov
jl,pn
js
or
xchg
aaa
fisttps
jnp
fs
mov
push
push
clc
jl
ljmp
jl
pushf
lret
cld
jge
push
mov
fcmovbe
add
cmc
jne
xor
imul
fisttpll
ss
sub
jl
lods
or
lret
jl
mov
xor
sbb
aad
ret
and
jge
loop
and
imul
stos
add
mov
test
inc
xchg
push
int
xchg
sbb
jp
or
push
jmp
jl
mov
xchg
mov
into
pop
lret
jb
mov
jl
mov
arpl
inc
jle
daa
sbb
push
mov
leave
cmp
mov
adc
dec
mov
dec
and
add
sbb
stc
cmp
add
das
cmp
sub
aas
pavgw
sub
sub
jl
mov
mov
sub
mov
push
cwtl
dec
out
test
sub
pop
scas
adc
aas
adc
push
ja
jl
adc
loope
pushl
and
gs
lods
js
jl
jecxz
mov
movsb
cmp
lret
push
cmc
test
jge
jne
dec
or
outsl
add
xor
lds
xchg
fisttpl
xchg
icebp
andl
or
pop
test
out
arpl
push
jl
push
aas
adc
mov
sub
or
jae
dec
dec
jnp
shll
inc
xor
mov
cmp
pop
mov
jae
roll
jl
int
pop
outsb
push
pushf
leave
lcall
xchg
aaa
jl
cmp
cmp
rol
int3
jl
push
xchg
loopne
dec
int3
idivb
adc
rcl
in
jmp
leave
push
mov
std
shlb
xlat
pop
in
fwait
xchg
fimull
pop
je
mov
test
repnz
and
mov
fwait
outsl
fldcw
mov
jns
push
lds
mov
jl
cld
inc
daa
push
jl
mov
ljmp
ret
dec
fimuls
inc
outsb
jp
and
mov
scas
clc
sub
fldenv
sbb
or
jl
fstpl
xchg
jl
push
sbb
push
aad
test
lock
jl
fstps
add
arpl
xchg
stc
sarl
xchg
pop
jae
test
sbb
adc
xor
je
mov
rorl
subl
clc
jl
xchg
bound
mov
mov
mov
prefetchwt1
xchg
jl
sbb
or
jl
fcoms
cmp
rcl
call
insb
popf
das
aad
dec
movsl
mov
fidivl
mov
jl
out
cmpsb
cmc
dec
cmp
call
gs
and
shrb
fdivr
sbb
mov
and
loope
xor
cs
mov
rcrb
add
cmp
andb
and
leave
adc
jne
iret
inc
mov
mov
in
push
push
cmpsl
adc
xor
shrb
lods
jl
push
sahf
inc
test
sub
cmp
bnd
fadds
rolb
jl
inc
in
int
xlat
sbb
xchg
imul
insb
inc
aas
jl
xor
repnz
pop
aad
int3
push
or
mov
jl
mov
hlt
push
jnp
adc
push
jge
or
cwtl
and
scas
add
mov
jne
nop
mov
fidivrs
adc
cmpb
pop
mov
inc
jl
repnz
movb
dec
mov
pop
xor
cmpsb
dec
test
dec
shll
iret
cmp
push
mov
mull
cli
addb
sub
xlat
push
jno
cmp
loopne
pop
mov
movl
or
sahf
and
jl
lods
notb
imul
push
jnp
mov
test
xchg
test
lea
pushf
out
in
je
enter
lret
mov
xchg
jl
push
pop
jecxz
push
adc
loopne
cwtl
js
jl
jne
xor
inc
aam
cmp
outsb
push
jp
jae
pop
movsl
or
add
mov
mov
xor
jl
inc
test
jl
mov
mov
fwait
lea
jae
jo
movsb
in
aaa
inc
sub
fsubrl
inc
jnp
push
push
fcmovbe
jg
push
je
in
out
jl
les
jp
insl
cmp
sbb
mov
int3
jg
jl
and
push
lock
ret
icebp
and
dec
mov
mov
std
jl
lahf
mov
sub
mov
or
or
leave
xchg
xchg
in
jl
shlb
xor
test
repz
cmp
mov
popa
xor
adc
imul
sbb
mov
mov
jl
mov
out
mov
mov
lret
mov
negb
mov
addr16
add
dec
pushf
mov
enter
mov
loop
and
leave
push
jl
jae
jne
fsincos
adc
out
lss
mov
inc
mov
dec
data16
hlt
cmp
inc
pop
fs
inc
out
pop
and
mov
or
xlat
push
in
mov
jbe
jl
mov
ljmp
sub
push
scas
jecxz
clc
arpl
repz
add
lcall
xchg
sub
pop
or
pop
push
pop
shlb
insb
mov
scas
ljmp
xor
xor
push
or
fidivrl
mov
scas
arpl
pop
inc
stos
insb
cli
lock
xor
iret
and
test
loop
jnp
in
es
mov
mov
and
aas
pusha
jnp
roll
sub
inc
test
shll
js
sti
in
push
jl
stos
idivl
sbb
dec
jl
push
mov
fmul
lahf
stos
add
outsb
insb
sub
pop
das
cmp
rcrl
movsl
mov
cli
int3
and
push
ljmp
or
jl
add
push
call
dec
xor
icebp
sbb
cltd
stos
push
mov
push
dec
jge
rclb
das
jl
rolb
xchg
xchg
out
cmp
test
and
sarl
push
mov
cmpb
shll
jo
aam
sub
jl
shl
and
mov
inc
add
loope
dec
sbb
out
push
in
das
nop
lret
in
in
xor
ds
cli
jl
push
push
push
inc
cs
mov
push
data16
hlt
inc
add
adc
cmp
add
xlat
inc
in
adc
je
mov
or
or
int3
ret
adc
push
and
jl
sar
add
lahf
xor
mov
popf
pop
insb
imull
jmp
mov
dec
jl
or
jl
add
xlat
jge
push
pop
jl
lahf
adc
xchg
pop
loop
sbb
mov
jl
xchg
xor
lea
test
pop
int3
inc
jns
iret
jl
mov
sar
cmp
jb
sub
xchg
jl
mov
or
jl
push
sbb
cmp
pop
sahf
jl
lods
add
xor
lret
adc
xchg
xchg
mov
stc
sub
lcall
cli
push
jl
xchg
fdivs
jl
jno
add
jp
mov
std
stc
jle
mov
mov
loop
jne
xor
jl
mov
and
sahf
mov
dec
jl
add
loop
jge
mov
ds
jnp
sahf
or
push
lea
scas
jl
mov
in
cmp
mov
dec
push
lcall
lods
jl
sbb
loop,pn
and
test
dec
jl
push
or
jl
push
mov
test
ficoms
in
jne
push
xchg
je
ja
mov
jle
or
mov
std
add
sub
xor
add
lcall
jl
hlt
mov
jl
or
mov
xchg
inc
xchg
insb
fbstp
data16
fimuls
jae
ret
jnp
test
out
add
jl
dec
shlb
mov
jmp
test
mov
jl
ret
in
in
int3
mov
pushf
fst
lret
mov
fdivrl
push
xchg
jl
adc
sub
mov
jo
jne
jno
mov
out
clc
je
pop
loop
insb
xor
int
xchg
inc
add
dec
dec
insb
shrl
arpl
scas
inc
and
cmp
ss
push
cmp
push
lahf
jecxz
jl
fcmovnu
xor
addr16
lea
push
dec
sti
jl
std
adc
lret
add
jge
sbb
rcrl
and
jb
movsb
dec
leave
or
jl
adc
movsl
cmp
out
mov
shl
roll
jl
inc
sbb
jno
dec
jl
dec
pop
xor
in
aad
cmp
mov
dec
lods
adc
sub
jl
xorl
cwtl
dec
sarl
dec
inc
push
sbb
call
lret
aad
xor
push
sti
call
loope
and
mov
jnp
pop
adc
int3
adc
jp
insl
jl
adc
and
cld
movl
outsb
adcl
repz
repnz
enter
dec
call
cltd
adc
dec
sbb
jne
mov
push
jp
jl
mov
scas
data16
loope
mov
test
insb
js
jp
bound
jl
test
mov
sbb
jl
dec
negb
mov
mov
ja
mov
in
adc
movsb
jnp
or
cld
inc
sbb
jne
stc
stos
jl
in
shl
jmp
loop
or
and
xor
mov
jno
mov
or
loope
out
pop
dec
movl
push
or
and
insl
scas
dec
daa
or
lock
sub
or
push
arpl
cmp
jb
int3
push
sub
enter
outsl
mov
jl
and
incb
mov
ret
mov
add
and
mov
outsl
cmp
loope
mov
lds
mov
test
test
xchg
shlb
jl
lcall
jl
or
xchg
jb
dec
jl
idivb
mov
stos
dec
pop
mov
sub
pop
loope
in
lock
jno
lods
popf
std
jl
cwtl
test
fcomip
cli
inc
sbb
ss
movsb
lcall
jae
adc
xor
and
outsb
in
rcll
test
or
mov
jns
jecxz
jl
xor
hlt
movsb
sbb
repz
jl
pusha
add
imul
dec
pop
or
loop
pop
or
dec
mov
add
enter
xor
or
push
add
std
cmp
jbe
in
mov
inc
loopne,pn
pop
jp
jl
xor
and
jl
lods
mov
movb
sti
mov
cwtl
jno
cmpb
mov
outsb
fidivl
mov
jl
dec
xor
push
jbe
lcall
fnstsw
mov
pop
ss
sbb
push
add
cmp
cli
hlt
sti
das
cmpsl
jmp
push
pop
adc
mov
gs
or
call
push
jne,pt
jns
jl
add
mov
xor
xor
cmp
aad
add
mov
pop
adc
cld
rcl
jl
xchg
sbb
pop
out
call
sbb
dec
jl
int3
into
mov
fwait
push
loopne
push
addl
stos
mov
lret
insl
out
and
fdivs
icebp
popa
mov
lds
or
xchg
or
lock
sub
insb
inc
or
lret
and
movsl
ljmp
inc
idivl
sbb
cmp
sub
mov
mov
jnp
pop
mov
jns
push
popa
std
int3
insb
inc
icebp
mov
jl
rcl
or
and
pop
cmp
in
jb
sub
mov
pop
mov
popf
jo
xchg
jl
xor
pop
mov
sub
xchg
std
gs
in
xchg
jl
mov
test
fs
xor
sbb
into
movsl
outsb
sbb
fcmovb
int
insb
or
enter
or
inc
dec
test
jno
pusha
into
push
xlat
call
sahf
lods
dec
mov
pop
mov
inc
call
jl
and
xchg
mov
push
loopne
sahf
cmpl
call
push
pop
cltd
pushf
jmp
inc
loopne
dec
mov
mov
mov
stos
jl
sbb
mov
inc
and
enter
das
add
subb
icebp
cltd
stc
scas
jl
pushf
ret
decl
lock
jl
mov
jmp
imul
movb
jo
jnp
mov
add
push
in
cld
lcall
je
test
push
jl
or
test
sbb
dec
mov
add
mov
mov
test
sbb
mov
bound
or
xchg
es
add
faddl
cmove
stos
rcrl
cmp
fnstcw
ds
jl
jno
outsb
jb
inc
pushf
jl
or
pop
cld
pop
push
fistl
push
sub
dec
rcll
jl
push
sub
lock
sarl
jmp
jnp
jns
add
movb
fwait
jl
dec
popa
shrb
jnp
cli
cmp
inc
sarb
lods
and
dec
sub
jp
jno
sbb
mov
dec
mov
lds
inc
jae
push
and
fsubrl
mov
dec
pop
mov
dec
pop
aas
mov
loop
je
js
pusha
jp
mov
popf
dec
xor
movsl
pop
mov
pusha
sub
out
dec
mov
pushf
sbb
test
adc
xorb
cmpb
cmpsl
adc
push
cmp
sbb
shll
sub
stc
cmpb
jge
mov
sbb
aaa
addr16
popl
jo
xor
cmp
push
pop
sub
mov
mov
jns
int
test
push
dec
call
lds
inc
sbb
cld
xchg
fnstsw
mov
pop
mov
xchg
insb
dec
sbb
cmp
inc
xchg
popf
jle
adc
loope
or
add
fmuls
cmp
mov
pop
inc
xor
adc
push
in
add
sbb
sbb
jb
sub
mov
inc
lea
jl
push
xor
push
mov
pop
push
sbb
jnp
jg
ficomps
dec
lods
jl
push
loope
mov
cmc
xor
or
xor
pop
jb
cmp
mov
add
mov
cltd
sarl
xchg
jl
lods
pop
aas
dec
out
sbb
mov
sbb
xor
sbb
fstl
shll
xor
ss
pop
mov
enter
out
add
lcall
cli
inc
jno
jmp
fdivrl
aas
add
jl
jns
stos
cmp
mov
nop
shl
call
push
movsl
lret
cwtl
js
aad
pop
or
test
inc
pop
fbstp
cmp
pushf
jno
xor
es
jl
ret
mul
xchg
test
shlb
push
dec
inc
call
pushf
sbb
push
push
jl
push
xchg
xchg
rorb
icebp
jl
jae
aaa
adc
popf
jl
lret
dec
ss
hlt
add
adc
div
xor
xor
add
gs
data16
pop
int
jl
ljmp
jl
mov
mov
push
into
jl
imul
call
fs
movsb
and
test
push
pushf
scas
cld
lahf
sarb
mov
xchg
sbb
rcrb
sbb
imul
lock
insb
jo
sbb
jl
stc
xchg
pop
jmp
sub
mov
fnstenv
arpl
or
in
jl
fbld
cld
sub
es
jl
push
mov
shrl
leave
insl
mov
sbb
test
xchg
xchg
in
jo
push
imul
sbb
ss
cmp
add
jnp
ret
in
imul
je
push
loop
pop
pop
xchg
lret
stc
call
mov
adc
fdivrs
movsb
inc
dec
out
rol
sub
sti
movsl
loope
insb
jl
test
notl
xchg
jnp
xorb
xchg
jns
insb
xchg
sub
in
fs
jb
cld
dec
jl
outsb
dec
aam
lea
test
insb
pop
test
stos
data16
inc
pop
rolb
insb
out
adc
fwait
sbb
xorb
inc
enter
lock
inc
mov
mov
xchg
mov
bound
ss
sar
mov
jl
add
cmp
out
daa
jge
jno
pop
rcr
or
in
int3
insl
rol
cmpsl
cmpb
ucomiss
int
in
lcall
jl
pop
fdivl
lahf
xchg
inc
add
sbb
adc
lods
mov
inc
dec
cmp
mov
push
test
sbb
jne
ss
aad
push
popf
dec
mov
push
sarb
mov
xchg
jne
jnp
jns
inc
ror
addl
fcoml
sub
lahf
jle
xor
jl
cltd
pop
adc
cmp
sahf
jl
mov
lret
sub
push
adc
xchg
fs
mov
mov
pop
jns
inc
sub
stos
xor
cmp
dec
dec
adc
inc
enter
mov
mov
xor
jb
sahf
add
jl
and
cmovns
jl
shr
js
pop
jge
jl
sbb
fimull
lret
xchg
jecxz
sub
pop
cli
add
ds
xchg
imul
sbb
insb
xchg
loope
cs
call
sub
cld
xchg
pop
sub
push
cmp
nop
pop
dec
jl
notb
jbe
insb
jl
dec
test
jnp
ret
or
pop
rorb
adc
push
test
data16
xor
add
scas
or
push
loop
xchg
dec
mov
dec
xchg
or
push
sbb
fxch
or
xchg
nop
jno
frstor
jb
rol
add
int
fistpll
aad
dec
pop
stos
jl
pop
inc
xor
jmp
mov
inc
jp
jnp
fsubl
std
and
jl
add
jae
ljmp
ja
aad
cmpsl
dec
insb
jg
cmp
xchg
out
int
sarl
fildl
aaa
jl
pop
cmc
mov
pop
repz
loopne
xlat
dec
stos
scas
sti
sbb
sbb
xchg
sbb
cmp
pusha
daa
xor
xor
push
cli
sbb
xchg
sarl
or
cmp
js
or
xchg
scas
xchg
sbb
dec
mov
out
ret
sarb
dec
pop
fnstenv
and
push
std
in
jnp
xor
and
adc
pushf
sub
or
cmp
popf
adc
mov
push
cs
jnp
dec
or
test
push
in
or
aam
fdivrl
andb
mov
sbb
ficoml
jae
inc
dec
jl
sbb
je
out
addl
mov
jl
inc
push
les
dec
stos
push
jmp
jbe
or
push
std
or
fistpll
aam
jl
pop
sti
and
xchg
ret
cmp
incb
mov
push
and
cmc
dec
or
jl
rcrb
iret
mov
sti
in
rorb
cmp
push
shll
dec
add
inc
ret
inc
loopne
aas
sarl
je
adc
jl
add
xchg
or
insb
push
xlat
or
dec
call
std
fdivrl
cltd
cmp
cmpl
add
lahf
pop
int
jl
aam
ljmp
jp
into
ret
or
fdivrl
out
pop
ljmp
jl
lds
sub
cmpb
cmc
mov
mov
cmp
aad
cli
js
sbb
jl
pushf
fcom
push
cltd
rcll
jnp
cmp
fcom
lret
mov
mov
pusha
fldcw
push
mov
clc
jp
dec
cld
movsl
bound
mov
jb
fnstcw
cwtl
outsl
xor
pushf
pop
jl
adc
and
sbb
or
xor
fistpll
repz
and
cmp
or
adc
add
jl
shll
xlat
jl
imul
xor
es
sub
jl
sti
enter
sbb
leave
cwtl
sub
jp,pn
jne
sub
or
rorl
jl
dec
lahf
gs
cwtl
lds
push
cmpsb
fs
scas
lret
xor
je
push
inc
dec
fidivs
and
sub
add
loopne
mov
dec
ss
jl
xchg
rolb
cli
fnstcw
push
push
or
dec
jl
push
std
cltd
add
outsl
rolb
jl
mov
ds
jl
dec
loopne
sub
lock
es
ja
sub
mov
ret
jl
gs
mov
or
xor
js
out
mov
int3
jecxz
inc
or
push
push
or
jl
lcall
cmp
sahf
or
add
jl
jns
hlt
jp
xchg
sti
jl
pusha
pop
icebp
movsb
push
jl
rcr
aam
lret
ret
ss
dec
pop
xor
jmp
cmp
and
bnd
imul
stos
push
jl
sbb
push
aam
jno
or
in
adc
hlt
sbb
pop
lock
out
ffree
jl
lods
add
popa
testl
loopne
cmp
jl
les
adc
add
mov
test
jbe
in
and
test
in
xchg
jo
sub
jl
or
dec
pop
leave
out
jl
or
shr
jle
insl
rcll
inc
inc
mov
enter
popf
cli
mov
loop
test
inc
jl
mov
adc
and
inc
jl
mov
mov
call
push
loop
rclb
xchg
inc
popa
cmp
push
rcrl
mov
into
push
mov
repz
mov
inc
pop
push
cmp
cmp
icebp
and
add
and
adc
iret
filds
lahf
fwait
mov
push
push
js
out
mov
pop
ss
cli
in
sub
add
addr16
and
ja
jae
cli
pop
jnp
jb
clc
in
stc
xchg
mov
and
cmp
push
jle
mov
dec
add
jmp
dec
or
xchg
xor
out
and
lods
or
out
inc
xor
or
xlat
jbe
jo
and
popa
xchg
inc
sbb
inc
int
mov
jl
adc
dec
mov
inc
dec
add
sbb
arpl
mov
mov
fldl2t
pop
xchg
divl
popf
outsb
jl
cmpsl
aaa
or
pop
xchg
jl
loopne
adc
out
and
es
daa
cmp
xchg
movsb
jl
adcb
div
pusha
jb
fistl
rolb
daa
je
es
cmp
gs
pushl
mulb
addr16
and
cld
loopne
insb
out
nop
mov
fnstsw
mov
fwait
jl
cwtl
xchg
push
loop
cmpsb
in
jmp
add
add
lret
pusha
jp
jl
iret
jb
cwtl
ret
cmp
add
push
mov
das
mov
cmp
jl
push
push
and
or
cli
mov
sarl
mulb
inc
call
sub
mov
dec
mov
pop
jl
cltd
movsl
xchg
mov
gs
insl
or
jmp
adc
in
movsb
pop
push
pop
jl
add
add
jo
inc
mov
ret
add
cld
sbb
leave
pop
jl
in
lea
jl
or
test
inc
xor
dec
jbe
aam
pop
cmp
ret
push
lahf
dec
mov
jp
fwait
testl
jl
sbb
xlat
adc
testl
mov
cmp
cmp
scas
mov
sub
sbb
fmull
cmp
xor
mov
bnd
sub
jmp
aas
leave
insl
nop
push
jl
adc
lahf
lcall
je
rcrl
pop
sub
jl
xchg
and
inc
jns
add
lds
and
addr16
pop
push
fsts
push
jp
add
scas
sub
inc
mov
insl
lods
xchg
xchg
ficomps
mov
inc
push
ss
push
mov
mov
in
jecxz
sahf
add
dec
cwtl
lahf
repz
in
imul
std
fsubrs
jp
jl
dec
pop
push
ficoml
add
fwait
sarl
mov
idivl
pop
or
mov
xor
jns
or
jnp
inc
in
nop
xchg
dec
jns
adc
jnp
dec
out
stc
jnp
or
fstl
sub
inc
jl
mov
call
add
popf
in
clc
cmp
insb
stos
cmp
fisttps
jl
sub
rclb
movsl
daa
mov
mov
jnp
jnp
cs
dec
push
push
dec
je
add
das
bound
hlt
mov
inc
gs
fcmovb
js
push
and
mov
dec
jge
loopne
js
outsl
inc
mov
cmp
push
bound
test
popa
xchg
xor
out
cmp
sub
lock
jo
jbe
mov
movsl
dec
hlt
int3
jl
push
gs
xor
lcall
xor
mov
mov
or
repnz
push
xchg
cmp
leave
sub
sub
roll
jl
fldl
popf
jl
add
mov
mov
mov
lock
lea
jl
mov
mov
mov
xlat
leave
push
jge
jl
scas
iret
into
imul
xchg
dec
adc
pushf
sbb
jl
fistpl
lods
cmpsb
inc
lahf
jnp
lods
cmp
adc
jl
inc
testb
adc
cwtl
call
inc
push
mov
xor
and
xor
ret
orb
cmp
rcrb
loopne
or
mov
sub
pop
jl
add
sbb
shlb
lods
fidivs
jnp
les
test
jl
aad
adc
pop
and
lock
xlat
mov
jl
add
mov
pop
or
mov
pop
insb
lock
xchg
fists
gs
or
adc
mov
cltd
pop
inc
sti
pop
mov
jmp
mov
leave
loope
lds
cltd
xor
add
inc
bound
test
push
es
mov
lcall
dec
pop
push
dec
jae
dec
imul
mov
jmp
push
test
add
push
sub
cmp
sbb
dec
dec
sbb
pop
adc
xchg
mov
xor
mov
ret
cli
pop
and
cmpsb
sti
daa
lods
mov
fwait
xchg
fbstp
mov
push
jl
push
mov
xor
scas
aas
fsubrs
js
je
push
and
mov
add
mov
add
xchg
cmpsb
jl
xchg
lahf
shll
loope
jle
push
jl
aad
sbb
xor
cmp
push
dec
dec
lret
ret
mov
xor
cmp
jl
aad
ljmp
cmpsl
pushf
inc
xchg
les
mov
pusha
jle
jl
xchg
push
mov
aas
aad
push
push
out
and
sahf
push
rorb
jl
daa
add
aaa
xor
adc
sub
and
inc
mov
nop
movsb
jne
add
insl
inc
push
jl
jns
push
stos
dec
outsl
cmp
hlt
mov
push
push
jp
daa
stos
xlat
jl
add
dec
push
dec
push
mov
mov
cmp
cmp
jl
ds
ss
sar
lret
push
es
divl
or
pop
cld
mov
outsl
jns
fidivrl
sub
repz
and
jl
and
push
lea
ss
dec
jl
imul
sub
in
sub
jl
inc
push
out
imul
test
mov
test
pmaddwd
xor
jnp
insb
mov
lods
in
or
adc
pushf
lret
in
dec
jns
loop
aas
xor
mov
jnp
fadds
jge
jl
jo
adc
cli
sbb
jl
call
xchg
jl
leave
sub
mov
jl
add
mov
lcall
xor
mov
stc
jo
sti
jl
push
and
cmp
cs
stos
pop
in
jle
repnz
jl
loope
mov
jbe
ja
xlat
cmp
push
xor
sbb
insl
push
insb
inc
out
ret
sti
adc
rclb
aam
rorl
pop
hlt
jae
inc
or
int
xor
fisttpl
loopne
shll
and
gs
cltd
xchg
mov
pop
aaa
adc
mov
insb
cmc
in
ds
insl
xchg
int
pop
sub
cli
cmp
test
jl
sbb
inc
jg
xor
ljmp
bound
jnp
jl
fidivs
mov
mov
fadds
jl
xor
jmp
dec
pop
lds
mov
or
jl
add
lret
popa
cmc
sbb
outsb
cmpsl
int
repnz
fbld
sahf
mov
fldl
xor
jge
push
sarb
jl
leave
cmp
rorl
cmpl
test
jnp
jns
data16
xor
cmp
sbb
cmp
mov
shlb
sub
je
or
add
cmp
jl
push
lods
jmp
inc
jl
lcall
mov
jns
in
push
push
or
pushf
movsb
sbb
dec
fs
shrb
mov
jbe
cmp
sahf
mov
mov
adc
mov
cmp
mov
loope
in
and
adc
xchg
call
mov
out
mov
in
test
lret
mov
adc
cmp
pop
mov
pop
push
mov
jl
xchg
push
cmp
sbb
and
cltd
push
add
rorb
inc
jb
mov
dec
xor
fs
mov
into
cmp
es
add
in
scas
mov
jae
jbe
cmp
or
sahf
aam
adc
sbb
add
js
mov
loopne
roll
stos
fs
push
popa
push
cmp
fcmovnb
les
lods
cmp
test
in
push
iret
ret
xor
pushf
or
push
sahf
cmp
fidivrs
test
outsb
jl
or
and
andb
bound
dec
add
cs
cmp
sub
loopne
aam
test
fwait
jbe
inc
pop
lea
add
xlat
lcall
jl
out
fs
in
jl
xor
push
push
dec
adc
test
ljmp
fcomp
mov
cltd
mov
pop
xorl
jl
push
inc
push
jp
lods
jge
mov
insb
xor
mov
jbe
or
clc
adc
jo
pop
insb
lods
in
or
fidivs
push
cld
cld
movsb
jnp
shlb
fstpt
jnp
incl
fisttpl
je
ds
xor
sbb
insb
int3
jp
inc
cmp
and
insb
mov
inc
pop
jl
xor
enter
adcb
jl
mov
andb
aam
push
fwait
xlat
pushf
insb
mov
mov
daa
jne
and
mov
mov
pop
cmpl
jbe
jl
sub
adc
push
push
xchg
xchg
push
insb
mov
sub
jne
loopne
inc
pop
cld
jl
dec
loope
xchg
adc
hlt
jl
mov
cmp
testl
sbb
jnp
ds
jo
mov
bnd
sub
aad
mov
das
or
inc
and
mov
loop
frstor
enter
in
dec
pop
mov
idivl
cmp
ficoms
xchg
addb
cs
jmp
fists
mov
mov
sbb
lds
jl
xor
jne
test
jae
sti
jl
xchg
gs
pop
jl
push
testl
and
lods
mov
out
dec
pop
jl
arpl
aaa
int3
xchg
xchg
in
pop
jl
lods
push
adc
jl
test
adc
leave
scas
dec
add
in
sarl
adc
pushf
add
jge
mov
mov
push
and
aam
or
sbb
mov
sbb
push
jbe
pop
jo
sbb
sbb
popa
imulb
inc
adc
jne
jl
cmp
push
add
aad
aaa
mov
jl
fbstp
sbb
inc
es
test
mov
jle
fs
fbld
rcr
jg
inc
in
popf
pushf
int3
in
jg
es
outsl
sahf
lcall
jae
lea
aas
std
jl
pop
or
sub
jmp
sbb
jge
dec
mov
sbb
arpl
jl
pop
or
or
jl
xor
outsl
inc
adc
jae
mov
outsl
in
jl
jbe
inc
arpl
movsb
fdivrs
std
mov
cmp
rolb
jb
mov
jo
call
inc
aas
insb
or
jno
jl
and
mov
arpl
dec
lahf
cmc
je
out
mov
xchg
stos
jns
stc
pop
jnp
fcoml
mov
shlb
dec
jmp
xchg
push
push
add
ss
dec
pop
enter
push
es
adc
aam
push
jl
lahf
stc
lret
repz
ja
inc
outsb
push
pop
in
pop
dec
jbe
adc
push
jl
pop
addr16
adc
mov
mov
fnsave
add
jl
lock
mov
hlt
inc
xchg
dec
das
push
mov
aam
clc
cwtl
fidivrs
outsl
mov
sti
jmp
aas
pop
mov
nop
jl
call
in
mov
cmp
jl
add
shlb
out
pop
push
les
mov
jl
jecxz
nop
pop
cmp
repnz
aam
ja
and
sub
jne
dec
jl
lahf
sub
add
das
call
jmp
aam
jbe
pop
jl
sub
mov
or
mov
jecxz
out
stos
outsl
adc
leave
fsts
faddl
inc
jno
mov
jl
mov
std
lock
shl
pop
jmp
imull
ret
pop
cmp
sub
push
cmp
jl
loopne
shlb
xchg
sti
hlt
add
sbb
roll
sbb
cmp
out
mov
mov
add
cmpsb
mov
jl
jmp
pop
jns
mov
filds
cmpsb
pop
cmp
or
cmp
jo
pusha
adc
andnps
mov
daa
in
or
test
sub
mov
mov
jg
xchg
lock
cmp
and
push
je
hlt
stc
ret
push
jnp
xchg
xor
sarl
or
mov
jl
cli
fdivl
sarb
jl
jmp
repnz
loop
lcall
bound
sbb
je
dec
mov
jl
enter
xchg
mov
adc
ret
dec
mov
mov
call
jge
mov
and
arpl
out
or
movsl
jb
jl
scas
jno
int3
into
or
in
or
mov
stos
jb,pn
int3
cmp
pop
inc
adc
cmp
cmp
xchg
cmp
jl
and
js
sbb
ret
inc
outsb
push
fwait
jb
adc
push
jg
and
int3
stc
or
push
pop
icebp
loopne
xor
sub
pop
test
ret
std
xchg
mov
cs
arpl
jl
xchg
orb
xchg
mov
lds
adc
xchg
mov
add
scas
xchg
cmpsl
repz
popf
movb
dec
push
cmc
cmp
jl
in
movsl
jnp
lock
push
out
push
jmp
mov
repz
arpl
lahf
xor
loop
fstpt
mov
stos
cld
test
sarb
out
or
xchg
es
in
adc
inc
pop
lret
jl
push
mov
mov
mov
or
mov
add
aaa
push
adcl
mov
pop
mov
jmp
push
repz
fs
pop
js
bound
pop
out
pop
scas
call
ds
rclb
fidivrl
out
mov
cmpsl
jns
jl
add
pop
xchg
out
movsb
movsl
jl
or
cmp
aam
imul
and
inc
insb
mov
xlat
cmp
jl
popf
ficomps
sbb
push
ss
loope
xchg
jl
loop
out
outsl
aas
mov
arpl
push
xchg
sub
inc
or
pusha
adc
push
cli
loop
cmp
mov
jbe
mov
or
mov
insb
dec
cmp
pop
sahf
les
ficomps
fnstcw
out
or
sti
repnz
movsl
arpl
mov
sbbb
mov
ud1
pop
push
sahf
dec
push
sbb
adc
and
aas
les
push
jl,pn
push
dec
cli
xor
test
repz
test
sub
fisubrl
fsubl
shll
sbb
xor
push
into
push
add
add
or
push
das
daa
jnp
cs
imulb
jl
mov
pop
mov
insb
fsubr
test
push
mov
dec
out
sbbb
jl
mov
out
fisttpl
add
adc
jl
dec
inc
sub
fadds
sub
lret
sbb
daa
enter
imul
jge
in
sbb
xchg
or
xor
test
je
movaps
and
xchg
fwait
sub
cmp
adc
aam
pop
jge
or
mov
cltd
lds
pop
or
xchg
adc
inc
jl
imul
or
decb
mov
mov
insb
lods
jno
arpl
push
pop
jecxz
jne
cmp
fbstp
jl
pop
inc
icebp
mov
jns
pushl
cmpsl
aad
pop
in
pop
cltd
xchg
cs
insb
cwtl
cmc
fsubrl
call
jnp
fstpt
pop
jl
push
ja
lods
xchg
xchg
out
arpl
jl
mov
dec
jl
sub
sbb
inc
xchg
loop
into
add
mov
xchg
jl
jbe
add
ja
mov
push
loop
jb
jl
sbb
mov
les
insb
fidivs
and
ret
dec
int
fisttpl
mov
fwait
stos
push
divl
loopne
push
jmp
data16
call
movsb
lea
jl
push
mov
jl
sub
push
push
add
dec
das
cmp
into
jnp
inc
sub
push
xor
mov
mov
dec
fistpll
stc
loopne
or
jg
xchg
push
rolb
xchg
fadds
cmp
test
mov
adc
mov
decl
jl
xchg
mov
cmpb
call
and
sub
adc
hlt
cmp
dec
cmpb
in
ss
in
jl
out
test
xor
sub
test
pop
jl
xor
xchg
push
lahf
add
mov
loope
mov
jno
pop
jne
arpl
inc
pop
in
xchg
add
jbe
jl
push
lods
push
cld
push
and
push
or
call
add
fdivs
push
push
sbb
rorl
insb
add
dec
test
stos
insl
push
jbe
inc
jl
outsb
out
test
mov
dec
adc
xor
cmp
aas
dec
and
pop
jl
mov
andl
sahf
movsl
push
sub
jl
dec
xchg
xchg
adc
icebp
lret
inc
lods
cmc
pop
rcl
jg
jge
push
jl
repnz
dec
dec
cmp
jg
jl
mov
xlat
lcall
xor
in
cli
testb
std
lcall
inc
pushf
jo
stos
ret
mov
cmpsb
jge
sahf
inc
mov
int
xchg
mov
push
imul
adcb
idivb
pop
je
xor
dec
int3
or
xchg
xchg
fdivrl
in
jl
or
js
or
call
lock
ss
push
mov
sbb
cmp
jmp
or
jp
sbb
in
cmpl
mov
roll
popf
jnp
inc
jecxz
pop
add
ror
aas
jl
or
fs
inc
mov
pop
int
imul
add
rclb
jl
lret
push
inc
pop
insl
add
jl
mov
xchg
lds
insb
jl
test
es
out
or
jnp
fldcw
add
scas
push
jns
movsb
inc
jl
sub
les
cltd
mov
test
cmp
add
jge
push
cmp
je
sarl
dec
sub
xlat
cmp
push
or
pop
mov
dec
push
jo
aas
adc
cmovbe
mov
mov
es
sbb
loop
jl
dec
or
pop
push
loopne
fwait
sub
xchg
sar
adc
add
jmp
mov
divl
jbe
mov
loop
jnp
cmpsl
xchg
sub
jo
mov
in
mov
in
cltd
jl
dec
dec
pop
xlat
sbb
cs
lret
cli
mov
dec
adc
bound
fidivrl
add
inc
push
mov
xor
adc
movsb
aas
cmp
mov
je
mov
xchg
fisubs
fmuls
adc
add
fs
sub
jl
xor
scas
testb
xlat
ljmp
pusha
fdivs
adc
aas
xor
scas
jb
pushf
cmpb
ret
aam
push
lea
dec
add
adcb
mov
lret
fistpll
stos
mov
jl
sbb
dec
hlt
push
cli
pop
jl
or
lcall
sbb
data16
dec
mov
jl
adc
outsl
pop
push
andl
es
je
and
xchg
jl
cmpsl
aas
enter
fidivrl
inc
xchg
mov
jg
jl
xchg
push
sub
icebp
pusha
loopne
fnstenv
sub
jl
mov
xor
pop
subb
jl
push
cltd
jmp
jl
imul
jnp
jno
mov
sub
clc
cmpsl
ret
ret
push
call
push
cmpl
pop
aam
push
or
xchg
push
loop
sbb
out
je
jl
cli
mov
dec
cmp
push
cmpb
jne
mov
mov
imul
dec
lret
loopne
stc
mov
dec
cmp
hlt
mov
cmp
fildl
fnstenv
mov
dec
arpl
adc
js
arpl
mov
lcall
es
jno
jae
mov
xchg
jbe
ret
mov
fadds
ja
insl
sub
cmp
aas
push
jl
adc
mov
mov
aaa
daa
cltd
add
push
push
mov
ss
cmp
out
loope
popa
jl
adc
and
fdivs
jl
ret
ja
call
mov
add
xchg
mov
and
xor
sub
jbe
xchg
sub
cmp
jnp
lock
bound
cld
sub
mov
cli
jl
in
test
jl
sub
mov
jl
sbb
jo
mov
add
cmp
jl
dec
inc
test
decl
mov
not
push
jns
repz
or
inc
lahf
inc
cmp
mov
in
jl
fdivrl
in
jl
fidivrs
rolb
adc
pop
jbe
jl
jne
hlt
lret
or
mov
jl
xchg
sti
clc
push
push
into
aam
sub
imul
ficompl
in
cmc
jno
test
mov
decb
inc
sbb
rcrb
mov
insb
cltd
shll
pop
insb
out
jmp
jl
lea
dec
pop
mov
push
add
mov
call
clc
xchg
aas
push
mov
adcb
js
fimull
rorl
or
dec
es
cmp
std
fldt
dec
mov
shlb
jl
sarb
in
out
xor
add
jl
fistps
xchg
mov
mov
ret
xlat
jae
out
outsl
orb
in
lods
daa
aam
mov
jbe
sti
imull
xchg
xchg
cmp
mov
cmpl
xchg
and
out
fsubr
jl
mov
mov
stos
jmp
test
or
or
test
je
sbb
je
icebp
or
scas
jl
movsb
test
add
arpl
repz
inc
imul
xchg
vaddss
mov
push
aam
aaa
pop
inc
out
stc
and
sbb
sarl
outsl
jae
fidivl
aad
jge
cmp
dec
sbb
add
add
adc
and
push
mov
xchg
and
or
push
or
xor
andl
dec
pushf
mov
jns
jl
ret
add
sub
jl
dec
dec
pop
and
push
addr16
sub
mov
hlt
jl
inc
pop
push
or
out
int3
mov
jnp
push
sbb
pusha
sbb
inc
in
mov
call
outsl
jge
mov
mov
pop
xor
int3
cwtl
jl
jno
loopne
out
pop
call
jl
mull
or
je
test
js
jl
mov
sbb
lods
sar
adcl
nop
int
mov
scas
mov
mov
insb
jp
mov
sub
mov
push
pop
ds
pusha
cli
mov
movb
mov
xor
enter
loopne
and
fadd
jl
xor
fiadds
lahf
lcall
jbe
jecxz
ja
cmpsb
rolb
shl
xlat
loopne
mov
pop
jl
fdivp
sub
xor
je
jne
stc
sbb
jl
push
dec
sub
fiaddl
jl
adc
jne
ret
jl
and
shrb
std
aas
or
adc
mov
xor
sahf
pop
inc
sub
mov
xchg
jnp
test
xor
inc
xchg
repz
jns
mov
jl
test
mov
mov
movsb
inc
icebp
push
stos
dec
jo
add
cmp
jl
jno
rclb
mov
adc
xchg
lds
jl
and
mov
jl
jns
push
loop
cltd
out
ss
pop
sbb
iret
cmp
push
cmp
or
imul
subb
jl
in
je
ja
out
jl
ret
xor
hlt
dec
scas
mov
movsl
in
rcrl
cld
sub
xchg
push
add
push
je
out
sbb
inc
dec
shlb
jb
in
cmp
test
lds
mov
ret
int
imul
movsb
cld
test
push
dec
add
xchg
mov
js
inc
cmpb
push
cmp
adc
repz
jo
mov
mov
jl
divl
sub
loopne
xchg
out
adc
ja
add
jb
in
sbb
xchg
adc
sub
fisubrs
pop
jl
mov
stos
lcall
insb
xchg
testb
repz
lcall
xchg
push
roll
pop
inc
pushf
je
jne
iret
dec
fdivrs
dec
push
mov
pop
ss
xor
and
xchg
add
call
xchg
or
orl
subl
sub
icebp
sbb
loopne
stos
add
xchg
xchg
js
add
push
mov
int
jl
pop
mov
jle
out
cmp
data16
mov
cmp
push
int3
sbb
cmp
leave
dec
fmulp
dec
lahf
cmp
in
adc
mov
insb
xchg
shrl
sub
stos
je
lret
cld
and
incl
shrb
outsb
jl
imul
sub
mov
sbb
jecxz
ss
cmpb
add
sbbl
mov
xchg
jnp
movsl
arpl
insl
faddl
adc
push
int
push
inc
cmp
push
adc
mov
mov
dec
fxch
jns
ret
test
xor
lahf
mov
mov
ret
outsl
icebp
jg
stc
lds
fdivrs
insb
xor
jl
ror
aam
fnstsw
adc
push
xchg
or
cmp
add
jle
and
loop
arpl
insb
lea
inc
ds
fbstp
rclb
inc
jl
mov
jle
dec
dec
jl
fdivrl
int
mov
cmp
subl
or
mov
xchg
jl
fwait
and
jl
es
mov
jl
and
movsl
xchg
xor
xor
out
arpl
popf
lret
pop
push
inc
rorb
sbbb
scas
cs
pop
push
jnp
mov
push
jae
push
lcall
es
inc
sub
dec
push
push
jl
ror
fmuls
iret
mov
mov
loop
sahf
adc
xchg
xor
out
clc
outsb
cmp
test
gs
test
das
nop
push
inc
aad
xor
mov
je
insb
mov
sbb
inc
addl
xorl
and
or
sub
mov
adc
int3
in
mov
int
lret
je
jo
les
stos
lods
std
pop
icebp
aam
sub
shll
adc
leave
mov
cmp
mov
xor
mov
lock
cs
inc
mov
js
shrl
add
addw
push
cmp
inc
sbb
mov
mov
and
mull
jl
ja
imul
jmp
xchg
std
adc
inc
jl
or
loopne
pop
rorb
jl
scas
test
mov
jnp
daa
dec
push
sub
inc
ret
dec
ss
insb
insb
push
les
shll
lcall
rcrl
fnstsw
out
out
add
sub
mov
fists
xor
ret
pop
mov
jge
xorl
xor
dec
addb
dec
dec
pop
or
add
dec
loopne
out
jl
sub
jns
pop
mov
sarb
add
jl
xchg
jno
push
lret
jl
lahf
and
and
cmp
inc
mov
pop
es
movsb
mov
sbb
mov
jae
mov
int3
fwait
pop
je
xor
mov
push
sub
dec
daa
dec
rclb
decl
or
sub
jg
jl
or
int
insl
sbb
ret
data16
jl
cmpsl
xor
xchg
dec
outsb
cld
jno
in
xor
in
adc
xchg
sub
aas
repz
jo
movsb
jl
or
icebp
leave
jmp
sbb
adc
out
and
inc
add
or
ja
movl
sub
mov
test
jne
fistpll
cmp
jns
xor
mov
xor
jnp
cmp
bound
add
dec
or
pop
jo
in
cmp
sub
ret
xor
jl
mov
ficoms
jbe
lcall
in
jo
aas
rcrl
loopne
sbb
push
ljmp
mov
adc
jl
out
cmp
mov
cmc
lods
je
mov
dec
cmp
jl
test
or
outsl
movsb
out
ds
sub
mov
stos
fmuls
push
inc
xor
imul
jl
mov
les
pop
lds
in
ret
mov
ss
mov
loopne
dec
int3
mov
mov
xorb
repz
into
jl
or
adc
mov
mov
cmc
sub
shr
pop
es
jmp
add
divb
xor
shl
cwtl
jl
push
or
mov
cld
adc
scas
sub
loop
lds
cmp
shrb
xchg
jl
cmpsl
mov
mov
cmp
insb
fidivl
push
in
xchg
in
adc
sbb
insb
leave
pop
aam
jl
or
sbb
xchg
and
popa
cmpsl
int
out
repz
mov
pop
cs
lea
add
or
pop
pop
dec
fsubp
cmp
jne
sbb
mov
insb
shlb
xchg
std
add
cwtl
and
push
jl
lea
push
xor
jl
fnstsw
insl
jle
mov
sbb
add
dec
dec
sbb
push
jne
cmp
push
dec
xlat
xor
or
sub
dec
in
insb
sahf
jno
sbb
jmp
add
rcrb
mov
jno
sbb
jns
mov
and
inc
add
outsb
mov
sbb
sbb
jl
adc
loopne
pop
les
shlb
mov
inc
adc
jl
add
fbstp
int
aas
test
ret
sub
and
nop
adc
xor
dec
fstpt
mov
lock
inc
imul
es
push
sub
sub
nop
in
iret
jl
rorl
cmp
es
cwtl
out
and
insb
jo
gs
cmpl
push
imul
fdivrl
loope
xchg
xchg
push
sub
les
xor
testb
fsubrs
outsb
mov
xor
in
pop
outsl
pop
insb
jle
hlt
add
sub
sbb
xor
dec
push
ss
jl
sbb
ret
push
je
stos
mov
mov
icebp
sbb
fistl
push
jl
add
not
dec
and
or
inc
mov
sti
xchg
test
in
jae
mov
hlt
jnp
cltd
fistpll
ja
std
imul
jmp
shlb
xchg
insb
and
js
jl
das
mov
push
inc
jl
jle
imul
mov
in
cmp
dec
sbb
inc
pop
dec
mov
and
or
adc
enter
pop
cmp
js
xlat
repnz
sbb
cltd
sbb
mov
sub
mov
pop
pop
jo
dec
xor
js
stos
pop
adc
or
jle
test
frstor
mov
repnz
pusha
in
mov
dec
mov
arpl
jl
packsswb
cmp
lods
push
dec
mov
sbb
mov
jl
pop
add
rcr
lret
or
in
push
bound
jo
mov
sbb
addb
push
mov
lods
js
sbb
jl
ret
mov
aad
xorl
lods
aam
adc
or
jge
jns
jl
xlat
adcl
mov
lea
add
rcrl
das
pop
jo
jl,pn
pop
dec
jmp
popf
sbb
bound
inc
jl
and
inc
cltd
xor
nop
fmuls
insb
sbb
fs
mov
push
jl
inc
adc
mov
mov
fdivrs
adc
jl
orb
jmp
lea
inc
jb,pn
fnstcw
bound
cmp
push
in
and
or
pushf
xchg
jle
jp
fisubs
jle
jp
pushl
jl
rclb
jl
hlt
mov
push
dec
inc
sbb
xor
inc
aam
adcl
push
jp
pop
emms
jl
out
scas
pop
xor
out
shlb
fcomps
enter
push
leave
lret
je
cmp
stos
mov
mov
clc
pop
cld
or
mov
push
pop
push
sub
dec
push
and
jmp
jl
std
push
cs
fistpll
orb
mov
scas
addr16
imul
sbb
dec
cld
pop
mov
mov
mov
xchg
adc
add
jge
rcr
std
sub
jecxz
add
push
sub
inc
or
lds
push
add
jp
repz
std
mov
dec
jl
rclb
xchg
inc
sbb
dec
jl
push
aas
adc
pop
mov
arpl
push
lods
sbb
orl
movsb
ss
lea
mov
push
cwtl
xor
add
add
ss
dec
fwait
in
out
push
fadds
jl
dec
xchg
jg
sub
mov
sub
jne
and
mov
lcall
push
mov
jo
jl
push
fiadds
pop
jge
outsb
enter
pop
jno
mov
jl
nop
mov
cmp
insl
cmpsb
mov
movsl
inc
mov
fucomi
xchg
jl
les
loope
xchg
mov
and
xlat
outsl
sbb
mov
iret
hlt
mov
jb
pop
or
out
dec
xor
stos
add
iret
inc
pop
cmp
inc
mov
mov
dec
mov
or
mov
movsb
pop
incl
mov
bound
divb
jge
or
nop
hlt
ja
rorl
push
insb
mov
mov
or
out
pop
jae
dec
add
insb
xchg
into
lods
mov
jbe
cwtl
addb
xor
mov
jb
pop
je
cmp
out
popf
jl
pop
adc
repnz
andl
cmpsl
lcall
test
jl
cld
fdivl
fdivp
div
jnp
push
in
sbb
cmp
push
movsl
daa
pop
sarb
in
push
in
arpl
dec
push
push
push
and
sbb
adc
aad
jl
mov
or
incb
movsb
push
pop
jl
pop
jmp
push
mov
jns
in
loop
mov
fldenv
movsl
test
push
and
or
sub
jle
mov
loopne
imul
fwait
xor
je
add
mov
shlb
jl
aad
pushf
cmp
cmp
xchg
popf
test
decl
jl
insb
data16
out
mov
sub
in
xor
mov
push
cmp
bound
cli
icebp
inc
mov
push
es
lea
xchg
sub
push
mov
fists
arpl
jl
add
insl
push
mov
movsb
shrb
fists
test
jns
or
sbb
xor
push
mov
dec
jbe
mov
int3
out
cmpsb
xchg
mov
jl
aas
sbb
mov
cwtl
sub
loopne
adcb
test
gs
call
rolb
push
dec
lds
cmp
jl
and
shlb
mov
test
jo
daa
xchg
mov
sbb
push
jl
fs
jg
push
xlat
int
mov
rorl
jl
enter
or
jl
xor
xchg
mov
adc
das
xchg
fmulp
movl
into
adc
push
mov
and
mov
dec
xchg
insl
outsb
dec
dec
movsb
jb
xor
jg
cmp
ret
and
pop
jl
lret
std
dec
lds
push
mov
insl
inc
mov
jns
dec
jnp
inc
je
es
push
add
push
aad
mov
insb
andb
shlb
ss
jl
add
insb
cmp
cwtl
bound
xchg
mov
out
xor
jbe
jl
push
or
cld
int
inc
mov
sub
push
fwait
dec
jno
xor
sub
jl
dec
sbbl
sub
xchg
rcrb
add
mov
jl
mov
pushf
aad
fld
lret
lret
ljmp
add
and
jl
test
dec
sub
mov
shll
mov
stos
push
jl
mov
mov
aas
xor
pop
jg
add
and
sub
and
mov
inc
addr16
push
cmpsb
in
inc
es
imul
ficompl
mov
xor
or
add
mov
in
loop
jae
dec
mov
cs
jl
xchg
pop
mov
jnp
xchg
sarl
or
and
fadds
pop
dec
xor
xchg
loopne
push
mov
mov
push
repz
mov
sbb
jl
pusha
push
xchg
pop
adc
lock
fwait
and
jl
and
push
cmpl
xor
enter
test
push
in
in
xchg
jl
fsubr
xchg
inc
cmpsb
icebp
mov
and
iret
jbe
xchg
arpl
push
jl
xchg
pushf
sbb
popf
dec
sbb
sbb
adc
loopne
adc
ret
sub
mov
fidivl
ja
fsubrl
cltd
or
jle
sti
or
insb
add
mov
push
cmp
pop
cltd
inc
jno
adc
movaps
retw
pop
test
inc
sbb
sbb
leave
dec
add
cmpsb
xchg
loopne
lahf
xor
mov
adc
pop
push
es
dec
xchg
test
cmp
mov
loope
nop
jl
stos
push
xor
push
jns
ss
sbb
sahf
or
mov
mov
mov
sbb
jno
sahf
call
xchg
scas
sub
imul
repnz
xor
in
dec
mov
fcmovnu
and
je
andl
mov
fnstcw
and
jl
cli
bnd
jl
rclb
testl
jae
cmp
or
in
and
pop
addr16
shlb
bound
jl
push
mov
adc
lea
pusha
faddl
pop
in
jbe
pop
xchg
pop
ss
and
xor
sub
jl
jne
hlt
shr
icebp
mov
add
mov
je
xor
test
cmp
lahf
cs
insb
mov
jecxz
sub
xlat
dec
jl
pop
pop
ja
into
aam
jl
mov
lahf
fwait
out
cmp
fs
sub
adc
es
je
in
filds
jl
adc
in
lods
push
sahf
jl
mov
mov
sti
les
dec
mov
ljmp
inc
mov
testb
cmp
adc
jno
push
jb
adc
stc
mov
push
dec
insl
lret
mov
mov
add
icebp
jg
lds
lods
push
rcl
pop
cs
out
xor
jno
push
cld
loope
jl
pop
dec
and
int3
inc
or
push
pop
jle
loopne
jl
jb
xor
iret
mov
adc
sub
cs
test
pop
cmc
sahf
dec
jns
jl
xchg
leave
jne
stos
out
jl
xchg
sbb
fsubs
jae
dec
pop
jnp
stc
and
test
inc
sbb
xor
icebp
mov
imul
dec
test
in
rolb
loopne
fcmovu
mov
enter
shrl
cwtl
popa
add
insb
dec
jns
fldl
jl
scas
push
pusha
loopne
call
mov
or
sub
iret
xor
fwait
in
jecxz
ret
fs
fstpt
xor
enter
sub
push
push
jl
in
xchg
sub
mov
out
enter
xor
call
ljmp
push
in
movsl
gs
stc
mov
dec
clc
jl
mov
push
sub
xor
xchg
sub
jl
cmp
in
pop
loope
jl
xchg
out
stos
shll
push
push
add
cmp
das
test
dec
jno
jl
mov
out
sbb
jne
lea
xchg
dec
in
push
adc
and
mov
scas
insl
out
std
sbb
cmp
int
xor
in
shl
inc
mov
imul
jbe
jle
je
mov
lods
push
sub
pushf
pop
xchg
or
addb
ret
or
pop
mov
mov
roll
add
dec
jp
fwait
sahf
sub
insl
shr
je
mov
jg
aad
stc
rcrb
mov
xchg
movsb
cmp
and
jl
mov
jne
jnp
mov
inc
ficoms
sahf
insl
bound
add
or
adc
jl
push
dec
pop
xor
or
jl
rorl
std
jl
mov
dec
inc
push
push
xor
in
jbe
test
cmpsb
js
xchg
push
call
cmp
adc
push
jl
jg
clc
xor
fisubs
fisttps
cmp
out
in
loope
pop
push
push
sbb
ljmp
scas
jnp
adc
jne
or
push
jg
mov
es
fs
mov
int3
inc
jl
push
xor
jge
call
lods
xchg
sub
or
dec
jl
popf
clc
cvtpi2ps
scas
jmp
aad
iret
mov
lret
jno
and
jns
adc
jae
add
xchg
out
fcompl
lods
push
jno
das
mov
jl
bound
xorl
push
jl
rorl
push
rcl
xchg
xor
xor
enter
sbb
lret
sbb
xchg
aad
jmp
scas
mov
mov
mul
imul
aaa
adc
mov
mov
loop
shrl
pushf
jl
inc
lcall
aas
dec
cmp
movsb
pop
jnp
out
rolb
jo
jl
push
mov
cs
sarb
cmp
gs
int3
jl
mov
roll
and
sub
enter
or
dec
lret
xchg
sbb
sti
jl
mov
push
shrb
cmp
je
inc
ret
jl
in
cmc
scas
jbe
int3
add
xor
inc
sub
jl
xor
or
pusha
sbb
out
mov
cmpl
and
stc
and
add
sbb
gs
jl
adc
dec
and
push
std
loopne
xchg
mov
jnp
xor
ror
movsb
jp
sahf
or
jns
cli
daa
mov
int3
stos
jge
xchg
loope
mov
xor
insl
hlt
or
mov
xchg
jnp
sbb
push
and
push
mov
dec
stos
sbb
mov
sub
push
inc
mov
scas
dec
mov
mov
fnstenv
inc
pop
jl
push
fstl
cmp
js
xlat
jl
jge
leave
mov
shrl
add
or
subl
add
pop
andl
jl
jle
imul
or
fistps
xchg
sub
iret
aam
jge
shlb
cmp
inc
push
sbb
jnp
mov
add
push
or
mulb
mov
jl
aas
movsb
and
int
push
cmc
push
lea
jb
and
add
inc
xor
ja
jl
iret
mov
aad
push
addb
xor
out
sbb
jl
int
out
je
idivb
add
cmp
push
jl
test
mov
jecxz
insb
ljmp
in
out
std
arpl
add
mov
or
sub
xor
xchg
sbb
es
fs
and
repz
addr16
es
xchg
jae
pop
movsb
iret
outsb
sti
out
mov
jl
shrl
cmp
sarl
add
enter
mov
push
jl
push
push
aaa
bnd
or
int3
repz
jmp
fs
cli
pop
add
sbb
adc
popf
xchg
xor
cltd
jae
out
fdivrs
repz
jl
repnz
jmp
mov
outsl
jl
push
mov
inc
insl
and
jl
add
ss
jno
movsl
loopne
sub
or
pop
sti
pop
bound
es
or
test
sub
sti
inc
mov
movb
xchg
mov
out
inc
and
and
jmp
rol
jnp
mov
ss
pop
jg
and
test
out
fs
fs
xchg
inc
lret
insb
ret
and
insb
adc
out
lds
data16
mov
arpl
lea
add
jp
jbe
xchg
xchg
cmpsl
sbbl
push
jg
mov
xor
and
mov
add
outsl
jle
mov
jnp
repz
cmp
hlt
cld
stos
dec
push
fstpt
inc
mov
andb
lods
inc
loop
jnp
inc
dec
xchg
cmp
dec
jnp
in
pop
les
add
cwtl
jb
cmp
fstpt
cmp
xchg
aaa
push
xchg
xchg
data16
jnp
imul
int3
xchg
mov
jnp
mov
out
scas
pminsw
nop
in
scas
add
imul
push
cmpsb
out
arpl
pop
dec
out
jnp
and
je
std
and
pop
pop
fwait
mov
dec
mov
jmp
fwait
mov
dec
dec
test
xchg
mov
mov
jns
ret
mov
and
mov
inc
data16
out
mov
or
pop
adc
xchg
mov
stos
arpl
shl
out
test
cmpsb
movsb
add
mov
mov
fwait
lds
stos
int
in
out
lahf
stos
test
ljmp
jg
fwait
push
in
xchg
jbe
sub
pop
mull
mov
loop
dec
sti
aaa
fildl
pop
fwait
call
cmc
xchg
ljmp
or
lods
ffreep
xchg
push
or
test
jns
mov
into
jno
ljmp
mov
lret
lret
or
bts
das
adcb
jae
cmp
jmp
cmpl
cmp
int
repnz
and
mov
insb
test
push
mov
es
pop
dec
jnp
test
rorl
fildl
ret
cmp
and
divb
in
mov
push
mov
popa
xlat
mov
fwait
es
jnp
lds
push
cmp
pop
bound
ret
dec
or
lock
test
loop
jo
addr16
push
cli
dec
and
test
pop
cmpsb
mov
cmp
jne
imul
out
add
xchg
or
outsl
lret
aad
gs
sti
jnp
hlt
push
fwait
pop
xchg
roll
mov
fsubrs
lock
fstpt
pop
fists
shrl
dec
and
shll
ja
imul
mov
jb
xchg
loop
lds
fcmovne
adc
or
mov
sbb
mov
ret
nop
mov
out
retw
scas
out
gs
lcall
xchg
enter
in
loop
mov
mov
sub
mov
icebp
jmp
jp
addr16
cs
mov
fwait
mov
pop
push
cmp
mov
cld
je
fwait
shlb
jecxz
fs
rorb
cmp
fbstp
xchg
scas
dec
data16
sbb
mov
loope
jmp
mov
jns
ficompl
inc
xchg
pushw
inc
test
dec
xchg
js
mov
push
xchg
dec
xor
dec
data16
push
bound
mov
cmp
mov
imul
inc
xlat
cmp
cld
imul
jo
adcb
cltd
ret
popa
inc
push
push
in
dec
aad
nop
hlt
data16
jbe
xchg
mov
insl
xchg
stc
je
sbb
mov
jae
xchg
lock
jp
adc
dec
movsl
inc
iret
int
popa
mov
loop
push
mov
call
subl
push
pop
in
sbb
repz
jnp
cmpsl
xchg
sar
cmp
lcall
ja
push
mov
fs
movsl
and
jge
or
mov
xor
sub
lret
outsb
and
dec
xor
lea
movsl
addr16
sbb
inc
jbe
pop
jae
insl
imul
ret
push
jno
cmpl
ret
aam
je
mov
lahf
lret
mul
inc
xchg
or
jb
cmp
aas
shll
add
out
in
pop
sub
ss
scas
pop
popa
repz
les
movsl
fwait
lret
or
xchg
movsb
popa
mov
jp
or
ret
push
push
fwait
mov
frstor
out
mov
movsl
popa
mov
clc
mov
es
in
mov
xchg
and
fwait
cs
mov
mov
test
mov
scas
sbb
sbbb
and
cmpsb
jbe
adc
in
pop
aaa
repnz
cwtl
and
cmp
lds
mov
sbb
int
popa
xchg
sti
adc
popa
sti
ucomiss
mov
pop
xchg
xchg
push
cld
test
test
aaa
ds
popf
xchg
std
cltd
jae
jg
incb
cmp
subb
hlt
lods
dec
iret
or
cmp
adc
jnp
dec
pop
loop
out
add
or
stos
mov
pop
loop
loop
popf
or
loop
ret
cmpsb
mov
mov
mov
sub
or
test
clc
out
add
jnp
adc
sahf
rcl
fsubr
and
call
and
and
shl
mov
popf
push
mov
gs
sub
arpl
sub
xchg
cmp
cmp
movsb
arpl
push
cmpsb
test
mov
jnp
or
sti
dec
mov
pop
xor
mov
jle
jno
repz
in
fsubrl
in
mov
push
and
lea
and
pop
vpmacssdql
mov
xchg
das
ljmp
in
popf
ret
dec
jb
ret
loop
out
push
add
or
bound
jmp
inc
xchg
pushw
stos
std
adc
rolw
jmp
popf
repnz
push
idiv
enter
cmpsl
push
and
add
inc
popa
and
mov
and
xchg
in
popa
jecxz
loop
ret
fcmovnb
es
fwait
jae
fs
hlt
jecxz
jecxz
ret
and
out
lcallw
mov
addb
data16
xchg
xchg
jnp
fwait
pop
jnp
sbb
iret
push
insb
push
jo
roll
push
push
in
mov
movsl
add
jae
jbe
repnz
pop
push
ds
data16
lahf
cmc
mov
retw
out
cmp
hlt
adc
imul
xchg
cmpsb
ss
out
addr16
cmp
cwtl
testb
ret
jecxz
cmpsb
inc
arpl
fcmovnu
out
fs
out
loopne
out
aad
ficoml
outsl
mov
xchg
lds
popa
mov
jbe
cli
push
push
popa
mov
add
js
in
inc
cmp
call
mov
push
pop
in
notb
push
hlt
jnp
add
into
arpl
fsubl
fwait
cli
rolb
push
repz
sahf
ja
fstpt
mov
mov
fistpl
jge
cmc
fs
pop
test
jmp
icebp
and
ja
test
insb
pop
data16
cld
inc
out
addr16
push
xor
es
jmp
clc
in
out
jl
xchg
repz
call
in
mov
dec
mov
shlb
icebp
cld
ret
push
in
push
cmc
lock
fisttpl
out
sub
loope
les
ljmp
scas
fs
bound
add
xchg
lcall
mov
dec
in
in
pushl
hlt
dec
test
enter
imul
arpl
ja
addr16
sub
leave
imul
xchg
lods
push
mov
sbb
sbb
lds
push
test
pop
xchg
lods
push
in
fisubs
popa
jae
fwait
cwtl
xor
out
jne
jecxz
ret
and
jle
jle
sub
mov
lahf
enter
jmp
xchg
or
sti
ret
sbbb
jb
pand
sub
out
data16
jmp
ljmp
popa
mov
or
mov
sub
enter
xchg
add
sti
xor
push
dec
in
daa
sbb
repz
cmpsb
jnp
or
pop
mov
add
roll
fwait
dec
jmp
cmc
push
mov
mov
fnstcw
ficompl
jmp
mov
xor
sub
addb
jne
ret
data16
fs
inc
out
jp
dec
mov
cmpl
jmp
loope
adc
sbbb
and
jae
data16
sbb
mov
dec
jne
fwait
ljmp
test
jne
sbb
sti
push
lret
addr16
lret
add
sub
idiv
pop
fcmovne
mov
inc
stos
in
push
xchg
and
pop
neg
cmp
das
out
arpl
mov
mov
add
sti
imul
cli
push
daa
jmp
push
repnz
push
sar
mov
sub
in
outsl
je
arpl
pop
and
mov
call
test
inc
in
rcrl
stc
mov
mov
cmp
es
sbb
xlat
mov
mov
pop
insl
addr16
xchg
dec
in
outsb
enter
lcall
jg
mov
das
mov
jno
push
out
push
cmc
cmc
or
cmpsb
loopne
out
mov
in
movb
out
jb
bound
sub
dec
inc
testb
in
call
xor
shlb
or
jmp
out
inc
pusha
jo
push
movsb
ljmp
pop
add
outsb
sub
int3
in
out
add
push
push
loope
xchg
add
loop
mov
call
cmpsl
push
sub
jp
mov
loope
call
enter
in
outsb
loop
repz
or
push
dec
pop
push
jp
js
mov
pop
mov
in
rep
loope
out
xor
jecxz
flds
jno
cwtl
pop
shll
sbb
icebp
pop
xchg
cltd
enter
pop
out
push
jb
adc
ljmp
lret
imul
cmc
lret
outsl
mov
enter
pop
outsl
sbb
sbb
out
in
out
out
jp
inc
in
add
call
ljmp
xchg
loop
xchg
out
lock
insl
fwait
stos
in
add
in
call
inc
push
mov
or
pop
jg
cmc
inc
je
imul
cmpsl
mov
fwait
in
sbb
xor
add
lods
pop
add
shl
and
mov
in
add
popf
jno
jnp
loope
call
push
and
loope
mov
outsb
inc
inc
popa
lds
mull
cmc
xorb
add
test
push
pop
xchg
in
outsl
mov
sub
and
icebp
add
aas
ret
lcall
fisttpl
add
test
andb
dec
aad
in
mov
fwait
test
hlt
jmp
or
js
cmp
jle
icebp
cmpsl
and
lods
push
pop
mov
fisttpl
xor
jmp
arpl
imul
jle
data16
mov
stos
xor
mov
jnp
pop
and
push
loop
and
inc
mov
in
cmpsb
ljmp
cltd
cmp
mov
fldt
and
cmpsb
and
xorb
xlat
repnz
mov
mov
out
ds
addr16
xchg
inc
jbe
jle
push
icebp
cmpsl
and
jmp
xchg
cmpsb
mov
mov
jp
dec
pop
enter
add
push
ret
addr16
dec
mov
shl
subb
sbb
push
push
in
sub
cld
insl
lret
pop
mov
xor
inc
jmp
push
cmc
jmp
or
sub
mov
scas
or
cmp
out
mov
stc
mov
lret
shrl
test
xor
cmp
mov
rcrl
cld
lods
call
jne
ret
movsl
popf
sahf
insb
in
movsb
inc
cs
in
insb
fnsetpm(287
shll
std
out
sub
or
es
cs
in
fs
jmp
or
push
in
mov
adc
sbb
call
arpl
in
fisubs
das
jl
xchg
mov
fstps
jbe
scas
addr16
cmp
xor
mov
push
jbe
bound
push
fstpt
cli
mov
jmp
sub
and
pop
dec
call
mov
mov
jg
hlt
sub
jnp
notl
call
data16
negl
testl
scas
outsl
mov
sub
in
mov
rorl
pop
sbb
in
mov
cmpl
cld
jecxz
in
sbb
gs
push
fistpl
fisubrs
add
mov
loop
hlt
cli
cltd
push
mov
mov
inc
mov
sub
mov
in
add
out
icebp
arpl
jae
lods
imul
mov
outsl
mov
add
sbb
fs
imul
xor
rorb
sub
enter
ss
and
push
test
or
scas
cmpsl
jo
outsb
add
in
xchg
icebp
aaa
add
in
ret
mov
arpl
push
push
adc
lea
andb
addr16
mov
dec
shld
and
push
xchg
add
test
sahf
pop
lret
imul
out
pop
testl
aad
ret
scas
andb
mov
mov
mov
scas
js
sbb
jnp
bound
pop
lahf
sarl
cmpsl
arpl
and
inc
xchg
cmpsl
add
es
scas
dec
push
jb
jns
fldt
xchg
in
mov
cmp
inc
push
fs
addr16
jne
in
nop
gs
fcomi
mov
ljmp
imul
add
jle
sub
and
cwtl
js
xchg
jmp
insl
cmp
xorb
out
out
test
call
movsb
inc
sub
test
aas
jge
xchg
out
in
ja
fs
enter
pushf
sbbl
pop
cmpsl
sbb
jecxz
imul
mov
outsl
out
out
xchg
dec
sub
adc
aaa
rolb
cmpsl
sti
gs
js
lods
inc
mov
ljmp
jecxz
mov
jmp
push
jge
sti
cmp
test
loope
pop
cmpsb
test
pop
into
call
lret
lods
sub
mov
cmpsb
sub
fsub
mov
test
lds
out
push
call
push
sub
jmp
xor
data16
sbb
lock
fldt
cmp
mov
andl
sbb
mov
adc
dec
or
cmc
mov
aaa
and
jo
bound
mov
jmp
call
ja
stos
out
pop
adc
cmpsb
mov
cmc
jo
and
cmpsl
cmc
icebp
xchg
ljmp
aaa
sbb
push
push
mov
call
scas
scas
or
in
and
popa
push
mov
call
cmpsb
mov
fs
bound
sbb
mov
popf
mov
pop
ret
gs
lea
cmpsb
and
push
lds
cmpsl
jb
outsb
inc
adc
and
aas
push
sub
stc
inc
fcmovu
pop
cmc
jne
int
out
rolb
fs
lock
dec
jmp
mov
aas
sti
push
or
out
test
es
push
loop
fs
jne
subb
sub
jno
repz
inc
test
ljmp
test
inc
lods
or
inc
inc
call
daa
jle
sbb
adc
nop
adc
fcmovne
lods
mov
addl
out
push
es
mov
call
arpl
pop
inc
iret
jbe
push
jne
cmc
cmp
lock
decl
fldcw
popa
pop
sbbb
fldt
push
outsl
fstpt
movb
lds
xchg
add
subl
and
jns
pop
cs
jmp
mov
xor
in
pop
sub
clc
inc
sub
fcmovnb
ljmp
insb
decb
jo
push
stos
iret
dec
outsl
outsl
mov
insb
push
loope
or
call
stos
insl
pop
pop
cwtl
xchg
add
xchg
inc
out
stc
push
or
push
jg
arpl
push
mov
push
popa
aad
data16
xor
jo
adc
outsl
loop
test
and
testb
push
in
mov
popa
pop
enter
dec
jl
fwait
and
mov
loop
lods
adc
test
sbb
repnz
in
jo
sub
sub
mov
jne
push
mov
jnp
pop
cmp
fisubrs
or
push
xchg
or
clc
and
aaa
sub
sub
out
icebp
jb
mov
loope
xchg
das
popa
jbe
dec
sub
cld
fsubrp
jmp
xchg
or
mov
and
cli
pop
lods
push
sub
out
arpl
out
imul
cli
lock
arpl
pop
out
mov
mov
add
out
das
outsl
sbb
pop
cs
clc
xchg
sub
mov
jle
sbb
xchg
out
adc
sub
movsl
out
ja
push
inc
sub
loop
push
out
dec
movsl
ds
call
gs
mov
hlt
lcall
outsb
pop
arpl
ljmp
pop
addr16
cmp
in
fdivr
loop
jb
call
out
mov
cld
out
cmp
out
jns
data16
sub
push
loop
push
fscale
xchg
out
loope
sub
jb
push
jne
pop
rcrl
movsl
es
sub
test
movl
lods
cmpsl
test
xor
xchg
je
arpl
arpl
stc
shll
jmp
sarl
test
adc
lds
xchg
repnz
xchg
bound
in
add
xor
cwtd
outsl
mov
movsl
pop
sti
and
add
jo
jne
movb
jmp
loop
sbb
imul
lahf
das
add
out
cmp
out
popa
xchg
cmp
arpl
fwait
pop
insb
data16
loope,pn
xchg
sbbb
insl
jnp
or
cmpsl
xor
mov
sub
insl
and
mov
cmpsl
add
jecxz
lods
movsl
adc
sbb
xor
pop
addr16
lret
arpl
sbb
out
in
xor
dec
stc
mov
fidivrl
rcr
loopne
pusha
sbb
out
aad
xchg
cmp
fisttpll
outsl
lret
clc
cmpsl
sbb
out
pushl
add
out
leave
mov
mov
ss
jb
out
ret
inc
movsb
stc
jge
call
push
out
xchg
cmp
add
sub
mov
xchg
sub
pop
movsl
pop
data16
pop
in
les
in
cmpsl
cltd
in
add
mov
inc
bound
bound
jae
dec
testl
jge
sbb
mov
sub
shrb
inc
imul
loopne
loope
lcall
outsl
lcall
mov
push
pop
dec
jae
mov
cwtl
inc
jo
in
insl
addr16
sahf
cmpsb
jge
jecxz
xor
mov
push
cmc
pop
pop
fcmovne
in
lock
insl
stos
jne
sub
into
xchg
adc
andb
push
stc
mov
outsb
subl
lea
addl
ja
imul
in
sbb
mov
js
test
rolb
daa
sub
mov
and
fwait
sub
mov
out
fcmovnu
out
bnd
bnd
out
cmpsb
jl
loop
icebp
push
lods
ljmp
insl
enter
mov
es
nop
aad
in
mov
out
dec
lcall
mov
data16
out
movsl
repz
lods
pusha
push
add
scas
movsl
lods
out
or
sub
and
adc
scas
int3
cmpsb
test
incb
sub
in
mov
in
movsb
das
jmp
mov
repnz
sbb
mov
pop
icebp
iret
pop
add
push
mov
push
inc
inc
arpl
es
cmp
jb
fwait
and
inc
jns
xor
movsb
popa
push
inc
cs
ret
lea
push
leave
fwait
and
push
ret
push
ljmp
dec
inc
outsl
jne
gs
cmc
lea
fcoml
add
and
add
push
in
or
enter
jo
jne
nop
repz
xchg
pop
jae
js
popa
enter
pop
mov
jecxz
arpl
xchg
ljmp
push
pop
outsb
into
cmpsl
mov
xchg
lcall
je
pop
es
test
cmc
in
mov
and
xchg
xor
add
out
xor
jb
in
sti
fsubp
jecxz
mov
inc
in
mov
outsb
mov
in
icebp
xchg
sbb
xchg
mov
push
add
pushf
inc
mov
leave
enter
cmpsb
test
fdivrl
scas
es
pop
lock
xchg
jbe
outsl
dec
mov
jcxz
xlat
jne
fyl2x
imul
movsl
call
xor
clc
cwtl
int3
pop
bound
xor
movsl
bound
addr16
inc
fucomi
test
push
ret
neg
aas
sub
repz
ret
incl
push
pop
decl
cli
mov
mov
inc
imul
or
hlt
imul
fisttpl
fpatan
mov
cmpsl
cmp
xor
call
ret
jae
mov
inc
xchg
hlt
unpckhps
inc
xchg
jbe
leave
push
jbe
jae
data16
mov
or
jle
inc
negb
notl
enter
in
mov
movsb
push
ljmp
fcmovnu
cli
out
fidivs
imul
daa
addb
inc
sbb
mov
insl
adc
shrl
or
inc
aam
mov
outsl
fisubrs
push
gs
ljmp
pop
cli
jno
push
ljmp
hlt
jecxz
rcll
mov
loopne
test
adcb
in
jo
ja
enter
push
jecxz
mov
ffree
jb
inc
and
mov
sub
push
dec
adc
or
loope
add
lret
xchg
mov
je
push
std
adc
imul
shlb
push
cmpsb
xor
push
daa
out
adcl
xor
popf
mov
jne
divb
insb
js
insl
xor
mov
out
push
mov
lret
sbb
push
mov
add
sub
cli
cmp
out
mov
shrl
and
add
in
mov
xor
add
mov
sub
sub
xor
push
inc
inc
imul
sub
sub
add
out
cmpsb
sub
add
mov
jmp
addr16
xorb
sub
jne
dec
sahf
mov
cwtl
jg
test
ljmp
push
xor
fwait
rolb
and
cmp
add
mov
shll
jle
call
popl
sbb
loope
xor
popf
out
mov
mov
xor
insb
and
aad
jae
xchg
xor
insb
mov
negb
mov
mov
std
shlb
subb
ret
mov
icebp
addr16
jbe
pop
dec
pop
andb
mov
icebp
push
test
movl
test
adc
push
adc
shl
mov
cmp
es
mov
cmp
sub
sti
out
test
lods
lock
inc
rclb
cwtl
push
sub
sub
xchg
jmp
fldl
sti
outsb
shll
push
dec
pop
movsb
lds
stos
mov
mov
leave
std
test
out
out
ljmp
fidivl
aad
stos
adc
or
daa
jbe
out
lret
stos
stos
xchg
repz
fs
lahf
aas
xor
add
cmc
test
movsb
pop
inc
popa
stc
adc
sub
and
push
dec
hlt
outsb
out
lds
stc
in
jge
dec
or
sti
repz
sub
push
outsl
mov
scas
cmp
idivl
sbb
mov
adc
xor
ficoms
mov
cld
xor
mov
daa
add
mov
adc
pusha
lds
jecxz
sti
addr16
jne
jne
imull
stos
popf
sub
xchg
ja
ss
and
in
mov
and
mov
rep
enter
sub
jmp
mov
mov
lret
insl
cmp
scas
sbb
mov
ret
rclb
mov
dec
xchg
jmp
int
rcrl
adc
or
add
lcall
xchg
out
inc
in
ljmp
scas
xor
mov
mov
notl
sbb
or
inc
out
cmpsl
jae
inc
ret
push
pop
lret
mov
ja
mov
js
jge
xor
in
inc
jns
subl
test
mov
push
pop
xor
mov
out
inc
gs
push
nop
inc
inc
xor
loope
mov
push
in
xchg
inc
out
dec
cmp
loop
mov
push
xor
fildll
loope
out
addr16
mov
xlat
jno
imul
lea
ret
sub
sub
out
fwait
loop
add
data16
aas
mov
popa
out
sub
fwait
cltd
bound
cmp
out
lods
pushf
decb
cmp
arpl
fmulp
mov
movsl
adc
test
push
mov
scas
test
stos
and
jge
or
test
mov
test
jae
std
aad
xor
outsl
pop
clc
inc
icebp
xchg
outsl
pop
xorl
rorl
test
icebp
fdivp
adc
or
lcall
cli
into
inc
lcall
jmp
dec
mov
test
js
push
nop
out
bound
bound
fisubrl
les
repnz
jecxz
fcomi
aam
popa
cmp
in
pop
into
addr16
mov
add
sbb
mov
and
arpl
out
jge
pop
cmpsb
stos
xchg
adc
decb
pop
js
arpl
pop
loope
test
pushw
inc
mov
mov
loop
push
scas
divl
imul
mov
jmp
jp
out
movsl
arpl
jecxz
cs
insl
push
popa
imul
outsb
adc
inc
xchg
lods
std
out
xor
clc
lret
adc
xchg
rcll
mov
repnz
aad
pop
jge
sub
dec
pop
xchg
adc
jle
mov
cmpsl
data16
sub
ret
and
sbb
adc
ja
test
mov
xor
out
clc
push
in
pop
xchg
xor
mov
mov
push
movsl
aaa
cmpsl
insb
decl
or
in
icebp
cmpsb
ljmp
and
je
ljmp
mov
mov
mov
jne
or
cmpsb
push
scas
pop
adc
lock
addr16
push
aad
mull
sahf
sti
jb
dec
add
jg
movsb
jo
pusha
lds
lds
lock
cmpsb
outsl
out
mov
inc
stos
and
nop
in
xorb
push
loope
push
ljmp
enter
iret
in
mov
and
xor
mov
add
and
addl
inc
stos
nop
aam
or
popa
arpl
jne
pushf
and
push
out
es
jae
push
push
ja
in
lock
mov
inc
fmull
inc
ja
mov
movsb
mov
addb
addr16
xchg
leave
mov
test
cld
jo
sbb
adc
bound
repz
sbb
mov
addr16
in
and
xor
in
xchg
ja
in
inc
jg
mov
xchg
push
or
aaa
jae
daa
pop
out
mov
sbb
jp
test
in
jns
xor
imul
xchg
aad
sbb
push
or
xor
cmpsl
outsl
add
cmpsl
popf
push
push
outsl
arpl
mov
mov
data16
out
out
movsl
xor
ret
out
movsl
in
add
jle
icebp
stc
jns
data16
gs
stos
adcl
pop
ds
sbb
jp
movsl
xchg
pop
mov
or
mov
mov
gs
cmp
and
jle
push
addr16
xchg
pop
jo
jmp
repnz
lcall
fs
jb
movsl
mov
push
and
xor
pop
inc
cmpsl
sti
insb
lea
ret
subl
add
out
xor
lahf
fs
int
jmp
inc
in
push
push
rep
mov
js
jg
cli
jl
mov
repz
arpl
dec
insl
add
xlat
mov
or
inc
jecxz
sub
out
aad
add
mov
xor
fadd
mov
mov
jmp
sbb
enter
mov
cmpsl
cmp
mov
mov
fisttpl
adc
add
and
xchg
in
mov
ja
cmc
in
sbb
arpl
out
adc
cmp
inc
mov
sahf
xchg
das
inc
hlt
xchg
inc
pop
iret
leave
fs
cmp
sub
sti
cli
roll
fdivrl
rcrb
ret
jecxz
mov
cwtl
ret
add
out
cltd
pop
cmpsl
pop
push
scas
lea
sarb
mov
loop
fs
cmp
add
sbb
and
ret
xor
mov
out
aaa
and
into
pop
pop
jl
imul
sti
loope
addb
jnp
in
jmp
jecxz
lahf
addr16
xchg
push
loop
mov
daa
aad
add
fdiv
adc
dec
add
jno
cmp
fcoms
data16
mov
xor
lock
and
icebp
add
iret
repnz
popa
jne
iret
ret
fs
sub
cmp
les
jp
mov
fidivrs
pop
outsb
je
arpl
in
lahf
jnp
dec
jae
sbb
jge
cli
addl
hlt
mov
inc
xor
jne
cmpsb
push
push
jge
adc
clc
mov
out
lahf
jo
ja
fadds
lock
cmp
cli
mov
scas
std
xor
xchg
sbb
mov
int
adc
sub
pop
decl
add
inc
mov
into
in
loopne
cmp
add
add
out
jo
lret
sbb
bts
mov
js
movsl
pop
cmp
arpl
imul
mov
mov
test
test
add
cwtl
in
mov
loope
mov
pop
das
cwtl
rol
dec
subl
icebp
or
sub
jecxz
and
sub
in
enter
sahf
cwtl
test
inc
pop
ss
lds
dec
imul
xor
in
jbe
loop
repnz
sbb
ss
xchg
test
mov
sbb
lret
sbb
in
mov
jecxz
push
call
push
push
clc
jnp
shrl
lret
jp
mov
push
pop
cmpsl
out
push
arpl
xor
mov
mov
in
ljmp
out
sarl
sub
xor
jno
jno
jge
into
xchg
negb
std
stc
dec
arpl
xor
cs
imul
jmp
push
loope
pushl
out
scas
pop
enter
push
insb
push
cmp
out
dec
cmpsb
jno
gs
nop
pop
loope
cmp
mov
mov
stc
into
shlb
testl
or
add
pop
sub
jmp
adc
adc
sbb
pop
jg
sbb
loop
xor
sbb
aas
enter
hlt
inc
ss
jno
shll
mov
add
xchg
in
sub
dec
jbe
jae
data16
repnz
cmp
ret
adc
out
xor
lahf
incl
adc
fldt
repz
stos
mov
faddl
xorl
insb
fiaddl
call
adc
arpl
insl
jecxz
push
loope
repnz
repz
repz
pop
rorl
dec
into
outsl
rcl
out
add
ret
or
out
jecxz
incl
jbe
inc
lahf
lret
adc
sub
inc
jno
test
mov
insl
jle
and
std
cmp
and
imul
clc
in
xor
test
push
adc
xchg
test
mov
cli
cld
out
out
inc
cmp
in
adc
and
movsl
mov
lret
dec
fmuls
add
mov
cli
imul
loop
rcrl
outsl
and
pushw
cmpsb
mov
fistpl
sbb
bound
jno
pop
loope
ja
jae
out
ljmp
pop
and
sarb
pop
mov
nop
arpl
js
xchg
lods
pop
test
jecxz
aaa
movsl
xchg
test
sbb
jne
add
std
push
popa
pop
xor
push
call
xor
mov
inc
pushl
stos
inc
arpl
sbb
cmpsl
dec
jecxz
fldl
loopne
and
scas
lds
xchg
dec
sti
push
xlat
sub
stos
mov
mov
push
int3
pop
sti
sub
dec
sub
sti
out
cmp
push
mov
mov
pushf
int3
out
data16
inc
mov
adc
mov
iret
mov
popa
lods
xor
daa
ljmp
nop
pop
lock
fmull
in
shrl
ljmp
repz
outsl
sub
outsb
push
mull
enter
mov
subb
sarb
adc
into
imul
jo
shll
ljmp
cmc
xchg
add
inc
and
cmp
addr16
add
and
jmp
inc
enter
mov
mov
lock
mov
arpl
faddl
xorb
add
mov
aad
repnz
mov
fnstcw
call
xor
jecxz
andb
out
js
into
outsb
add
and
addr16
inc
xchg
gs
or
mov
xchg
out
call
stos
jns
sahf
lock
aaa
rolb
sub
test
jge
mov
lahf
xchg
pop
mov
lret
push
popa
cmpsb
ljmp
mov
push
stos
sub
inc
cmp
jp
xlat
cld
jae
pop
sub
je
out
out
pop
mov
jge
scas
sti
cmpsl
sub
sahf
fwait
inc
jl
call
sub
xchg
in
mov
movsb
out
inc
adc
and
push
jl
in
lahf
dec
test
jae
mov
lret
movsl
push
mov
sub
and
xor
hlt
push
mov
out
in
addr16
repz
xor
pop
jno
shlb
insb
stos
in
stos
sbb
xor
mov
ja
popf
and
in
add
popa
push
outsl
in
mov
enter
dec
mov
insl
inc
lock
xchg
call
cld
out
cld
push
and
lahf
mov
jo
or
lret
stc
inc
sub
jne
and
popa
neg
in
cli
push
rcl
jg
push
sub
add
call
stc
out
adc
out
popa
in
into
push
mov
call
sbb
mov
incl
adc
movsl
fcomi
pop
pop
adc
gs
daa
xor
cmp
mov
call
add
cmp
sub
es
push
or
push
sub
enter
movsl
pop
lret
or
fwait
cmp
sbb
fiadds
gs
sbb
ficomps
add
lods
fs
lods
addl
mov
lods
ret
add
lods
jecxz
jae
out
rcrl
mov
xchg
repnz
adc
lcall
fcompl
xor
jno
sub
stos
fs
test
test
sbb
dec
or
ljmp
call
inc
add
xchg
fs
and
xchg
lods
mov
xor
scas
inc
test
pop
stos
std
pusha
push
jmp
xor
sti
and
faddl
xchg
sub
or
and
fwait
in
leave
js
cld
cmpsl
mov
cmpsl
add
fldl
cmpsb
mull
mov
cmp
out
inc
push
fadds
orl
jnp
call
sbb
frstor
dec
call
or
rolb
add
push
cltd
sarl
fbld
xor
sbb
push
fs
pxor
nop
lock
or
fs
sarl
testl
hlt
sub
call
mov
and
push
and
rol
out
jmp
add
addr16
mov
xor
mov
movsl
push
imul
scas
cmpsb
daa
pop
rcr
outsb
in
popf
out
sbb
cmp
push
call
push
push
lock
lock
popa
jae
stc
fcoml
jle
outsl
adc
push
push
insl
pop
mov
lock
mov
jge
inc
das
test
ficomps
popa
push
or
xchg
enter
push
mov
push
xlat
enter
cmpsb
pushf
push
leave
inc
repz
pop
xchg
cmpsl
hlt
repz
ljmp
icebp
fwait
mov
jle
jp
out
stos
and
mov
sub
incl
adc
aas
nop
add
std
cli
mov
mov
mov
jns
xchg
mov
loope
jns
push
ljmp
push
loop
jns
gs
fcomps
out
clc
pop
push
gs
in
sti
xchg
inc
cmpsb
mov
movb
repnz
jle
ljmp
cs
lds
ficoml
stos
lods
xchg
mov
test
cmpsb
adc
sbb
imul
std
sub
stc
fmull
imul
lea
cltd
fwait
out
cmpb
jno
arpl
push
dec
xchg
scas
and
push
mov
adc
jmp
bound
imul
xchg
ljmp
mov
outsl
pop
popf
jmp
or
testl
repz
jo
or
js
movb
jecxz
xchg
xchg
and
mov
dec
pop
stc
mov
sti
pop
and
push
or
jns
int
jmp
shll
je
andl
fwait
fs
push
inc
xchg
pop
push
in
jg
cmp
jbe
pop
jno
insl
xchg
ljmp
sbb
test
pop
sbb
sarb
jecxz
into
stc
mov
les
inc
push
rorl
fsubs
div
in
ljmp
out
mov
lods
lret
sbb
out
xchg
in
fistpl
xchg
mov
hlt
jle
inc
mov
inc
lock
movsl
jbe
inc
bound
fildl
nop
pop
push
cmpsl
sbb
stc
imul
push
lock
movsl
push
xor
in
dec
mov
or
mov
je
pusha
push
sti
adcl
sbb
mov
push
icebp
xor
mov
dec
add
jecxz
ja
mov
test
sub
push
inc
fnstenv
imul
rol
loope
and
push
dec
fldenv
notb
xchg
test
pusha
sub
push
pop
xchg
sbb
cmp
arpl
inc
rorb
stos
adc
sbb
idivl
cmp
lea
inc
jge
out
pop
fcmovu
dec
mov
mov
ljmp
insl
inc
sbb
in
sahf
push
movsb
add
out
adc
add
push
mov
jle
or
xor
inc
test
sbb
or
inc
loope
outsl
mov
push
andl
daa
fimull
cwtl
cmp
jle
or
mov
sbb
add
out
popf
and
push
inc
nop
call
jecxz
sti
out
mov
pop
mov
jns
sti
test
loop
jno
jo
fsubl
mov
arpl
bound
cmpsl
sbb
test
adcb
pusha
cmp
cltd
lea
movsl
add
sbb
jp
shlb
and
and
xchg
call
pop
jle
popa
mov
lret
shl
sub
cmp
fsubl
inc
pop
and
movzwl
push
inc
in
ja
jbe
adc
xor
les
cmp
das
mov
and
dec
or
cmpsl
xchg
les
xchg
call
jbe
jg
js
mov
pop
insl
xchg
fs
in
daa
dec
out
mov
inc
scas
call
repz
outsb
xchg
pop
enter
mov
shrb
sbb
lret
sub
adc
jne
mov
in
outsb
and
xor
sub
xor
test
push
js
ds
repnz
jge
fcoml
fdivr
movsl
ljmp
es
cs
je
data16
mov
and
jmp
push
inc
dec
jge
sub
stc
movsl
inc
in
xor
adc
sub
ret
movsb
push
shlb
sub
jecxz
dec
test
jns
and
imul
and
inc
scas
xorl
subl
pcmpeqd
jae
movl
out
cli
and
imul
daa
push
xchg
outsb
mov
pushf
inc
cwtl
popa
popa
ja
imul
addr16
sti
jae
out
jnp
stos
cmp
fs
clc
mov
es
push
dec
xor
aas
fisttpl
xlat
repnz
mov
in
movsl
mov
pop
sbb
jbe
jmp
push
ljmp
xchg
int
inc
and
push
add
stos
loopne
popf
sub
pop
xor
mov
sar
lods
jmp
ficomps
ficoms
stos
test
add
stos
clc
fcomi
ljmp
bound
adc
test
pop
push
repnz
push
sub
loopne
jnp
lret
repnz
mov
test
push
jg
leave
sub
jo
lods
ficoml
jmp
popa
iret
xor
inc
into
repnz
push
movb
mov
jnp
jmp
cmpsl
popa
jecxz
bound
dec
data16
mov
xchg
out
test
or
mov
cmpb
loopne
xchg
ds
jg
dec
test
fcomps
aad
aaa
xchg
ljmp
add
stc
dec
mov
cmc
and
mov
rcll
loope
adc
mov
imul
and
or
dec
fldenv
sbb
clc
imull
fwait
jnp
add
dec
call
jns
mov
pop
jl
mov
cs
out
fs
lock
repz
fldt
jne
jmp
and
mov
popa
add
fsubrl
dec
test
inc
push
xchg
leave
addr16
sub
cltd
andb
adc
out
add
cmpsl
sbb
mov
xchg
fs
jg
or
hlt
jge
cld
mov
loopne
sub
negb
push
push
rcl
leave
jbe
pushf
lods
mov
add
sbbb
cld
ss
mov
out
int
add
sti
xor
testl
bound
out
pop
std
xor
pushf
xchg
mov
loope
xor
mov
shll
loope
pop
add
cltd
jbe
andb
and
sbbb
out
xor
mov
cs
movsl
pop
sub
das
outsl
aad
mov
jnp
inc
push
lock
or
in
out
sahf
cld
mov
cld
jo,pn
in
sub
cmp
sub
adc
push
adc
imul
cmpsb
adcb
jbe
xor
jnp
test
je
sbbl
mov
fwait
mov
or
mov
cli
add
lods
arpl
addl
inc
outsb
mov
outsl
jmp
imul
mov
popf
cmpsl
imul
jns
int
mov
addr16
xor
mov
xchg
ffree
add
jmp
imul
jns
push
insb
sbb
in
xchg
in
ret
dec
aad
xchg
sbb
sbb
xor
outsb
cwtl
sub
pop
add
scas
xchg
push
mov
sbb
jno
cmp
scas
mov
push
xchg
sbb
out
repz
pop
sub
stos
sub
cld
popf
into
dec
mov
in
and
jecxz
dec
xor
push
cs
ljmp
ja
lahf
push
jmp
loope
mov
or
push
and
daa
jmp
sub
add
popf
call
cmpsl
sub
fisubrl
int3
es
call
icebp
jnp
gs
cmpsl
imul
mov
test
cli
xlat
leave
negb
cmp
jmp
int
das
push
andb
hlt
cmpsb
lock
pusha
mov
ljmp
mov
addr16
not
iret
ja
stos
jns
in
arpl
addr16
jecxz
mov
sbb
fldt
arpl
in
data16
imul
repz
jo
insb
pushw
xchg
call
cmpsl
jmp
jae
or
sub
jne
arpl
outsb
mov
cmpsb
in
sbb
arpl
testb
outsl
std
outsb
outsl
and
out
imul
add
inc
inc
rclb
mov
ljmp
cmpsl
xchg
sub
pop
inc
jnp
push
clc
lods
ret
ljmp
int3
test
hlt
or
call
and
repz
jp
sahf
adc
outsb
lcall
insl
xchg
jecxz
add
ja
addr16
stc
xchg
insl
push
jbe
lahf
movsb
cwtl
ret
ret
sbb
cmp
sarb
jecxz
adc
scas
insl
sub
mov
fwait
in
fs
mov
out
subl
cmp
mov
jnp
jecxz
test
les
and
mov
sbb
clc
test
mov
fcompl
pop
push
push
in
lret
inc
loop
push
gs
stc
out
xchg
dec
xor
push
into
inc
cmc
push
mov
fistpl
das
pop
stc
pop
hlt
in
fucomp
jg
pop
jp
xor
cmpsl
das
mov
call
in
lds
pop
out
shr
lea
mov
clc
test
in
pop
pop
movsb
jne
inc
sbb
dec
in
mov
jecxz
cmpsb
cmp
pop
sti
xchg
mov
insb
xlat
xor
out
dec
xchg
rol
in
clc
lock
call
push
arpl
testb
push
push
xor
lds
js
xchg
jns
divb
sub
push
cmpb
in
arpl
xchg
in
cmpsl
out
jecxz
loope
loop
mov
lods
ret
out
and
inc
sub
rcrb
and
mov
testl
pop
mov
test
dec
sub
out
jecxz
add
jne
popa
mov
enter
stos
mov
mov
cwtl
mov
fsubrs
stc
mov
movsl
aad
gs
in
sub
int3
fcomps
jmp
pop
in
push
mov
xor
inc
jle
pop
psllw
movsl
jmp
out
outsl
neg
mov
push
inc
jno
add
lahf
es
clc
andb
pop
mov
jnp
inc
jmp
sti
ss
das
adcl
mov
cmc
lret
xchg
xlat
mov
mov
push
lock
fwait
mov
ljmp
cs
push
insl
and
pop
sbb
jae
sbb
and
outsl
push
pop
arpl
mov
inc
push
add
jnp
sti
loop
and
push
inc
and
and
pop
rorb
bnd
ret
loope
cmpsb
aad
dec
cmpsl
in
add
dec
jno
and
mov
jnp
clc
sub
push
sub
sub
pop
lods
stc
xor
and
test
repnz
dec
in
clc
and
push
sub
popf
xor
enter
outsl
cwtl
rcr
movsl
sub
mov
scas
decb
iret
mov
std
xchg
xchg
stos
adc
or
out
xlat
loope
pop
das
test
jmp
addr16
and
data16
jnp
in
xlat
jle
outsl
mov
jae
lret
push
ljmp
add
sub
or
inc
inc
push
xor
popf
out
or
cs
add
mov
fsubrs
das
bound
imul
xchg
cmp
xor
outsl
scas
sbb
dec
sub
inc
push
push
in
inc
imul
cmovg
in
addr16
dec
jbe
xchg
iret
pop
sub
outsb
std
mov
int
and
stc
std
push
incl
inc
in
cwtl
in
push
popa
jnp
imul
int
and
dec
lock
js
push
and
jnp
aas
xchg
pop
pop
rcrl
push
dec
fwait
out
mov
dec
pusha
stc
scas
in
addr16
ss
push
call
call
pop
or
cmpsb
mov
orb
clc
mov
rcr
hlt
cmp
inc
xor
cmpsl
inc
out
xor
clc
jbe
mov
sbb
mov
cltd
mov
pop
jns
in
movsl
int3
in
addr16
out
push
in
pop
data16
and
cmp
lock
es
mov
pop
dec
scas
cli
add
mov
pop
movsl
iret
and
push
lret
loope
mov
push
mov
pop
mov
mov
loopne
jl
int3
insl
shlb
xor
lock
push
loop
jp
movsb
data16
in
rcl
lret
aas
imul
fsubrs
jb
pop
fnstenv
out
mov
icebp
fcoms
cmp
nop
les
mov
mov
aas
add
movsb
inc
xchg
push
sbb
xor
imul
sub
in
lods
popa
lds
mov
loop
addb
cmp
out
push
mov
test
lcall
sarb
enter
adc
in
les
push
sahf
repnz
jns
xor
adc
add
lcall
loop
inc
mov
mov
dec
movsb
cli
dec
loope
push
inc
enter
inc
cmpsb
push
loop
data16
mov
subb
popf
mov
and
lret
icebp
pop
outsb
in
sbb
lea
cmp
xchg
fcmovne
and
xchg
dec
pop
jp
jbe
or
fwait
sub
mov
popa
in
adc
adc
jnp
pop
imul
in
mov
fimuls
sub
mov
jnp
inc
mov
and
mov
mov
fnstsw
movsl
sti
xchg
popa
fwait
inc
inc
loope
lods
dec
xor
shl
leave
sti
mov
repz
stos
xchg
scas
les
lret
adc
in
push
scas
jecxz
call
inc
addr16
cmp
or
shlb
lea
das
sub
cmpsl
cmp
data16
push
sbb
inc
add
push
cmpsb
outsb
icebp
mov
dec
fldenv
mov
in
push
push
sbb
fistpll
and
aam
outsb
jbe
mov
cmp
sbb
jecxz
loope
pop
and
cmp
sub
dec
sbb
jge
cld
cmpsl
inc
cmp
push
xor
loope
movsb
icebp
and
xchg
outsb
loop
fs
xlat
jb
fdivr
in
mov
cmc
ret
loope
cmc
in
jnp
jb
mov
xchg
in
idiv
xchg
repz
inc
mov
call
addr16
jnp
mov
js
xchg
data16
xchg
out
test
ljmp
pop
pop
mov
ja
xchg
data16
icebp
out
sub
dec
jmp
xor
hlt
mov
mov
jecxz
pop
xor
je
push
and
pop
aam
in
pop
movsb
mov
enter
je
negb
loop
fldt
jnp
jmp
mul
cmpsb
nop
arpl
loopne
xchg
stc
rorb
lods
jnp
inc
dec
push
xchg
pop
pop
clc
adc
and
loope
push
leave
inc
add
sbb
mov
sub
ret
push
loope
test
fwait
mov
jns
push
sub
scas
stc
ja
fs
pop
ficoml
lods
pop
ljmp
sti
lock
push
lret
clc
cmpsl
sbb
jnp
dec
xorb
pop
addr16
mov
testl
cmp
inc
dec
sub
int
pop
cmpsl
test
out
pop
std
mov
cmc
ljmp
in
lods
dec
call
cmc
enter
call
sub
call
add
jbe
fs
sbb
jae
fwait
mov
mov
imul
ss
mov
imul
mov
push
adc
push
ret
jne
jae
rol
jno
std
roll
cmc
cmpsl
js
mov
insb
clc
push
or
repnz
push
dec
inc
adc
cmp
pop
push
cmpsl
push
dec
xchg
xlat
fwait
test
cld
jnp
jns
out
xchg
pop
loop
cmpsl
xchg
xchg
jnp
mov
scas
mov
out
clc
out
das
xchg
mov
lock
jae
mov
mov
outsb
pushf
in
cmp
mull
lds
out
sbb
pushf
xor
jmp
iret
cld
cld
jo
xor
cs
push
or
mov
aaa
and
cld
out
push
test
out
mov
aad
jb
add
cmpsb
add
push
insl
dec
movsb
sbb
pusha
shlb
nop
out
cmpsb
movsl
cmpsl
shrl
jbe
outsl
das
sbb
and
mov
cmpsl
mov
mov
pop
sub
sbb
mov
mov
pop
pop
pop
add
out
sub
mov
neg
sbb
iret
outsl
inc
popf
pop
out
or
xchg
jae
in
ret
xchg
test
push
or
movsl
mov
jae
in
ret
add
mov
jbe
ja
sub
arpl
icebp
mov
addr16
jo
mov
jb
mov
imul
jge
les
into
jns
push
scas
adc
xlat
ror
mov
test
arpl
ret
test
icebp
xor
pop
movsl
loope
es
data16
out
sbb
call
lea
out
data16
ret
fsubp
and
movsl
std
fld
cli
out
in
cld
outsb
js
call
mov
sub
fwait
sti
das
cmpsb
xchg
out
xor
je
mov
in
movsl
or
or
and
dec
scas
sub
pop
aam
repnz
mov
fincstp
sahf
loope
mov
rorb
cld
cmp
out
adc
shl
mov
and
and
jae
pmaxsw
loop
mov
xchg
add
xchg
cmc
repnz
nop
call
out
dec
cltd
push
inc
sbb
sub
and
mov
loop
pop
bound
addb
jbe
pop
cmpsl
jp
fadds
in
dec
pop
dec
add
inc
lret
mov
gs
sub
adc
js
jle
pop
inc
outsb
cmp
pop
test
inc
jmp
cli
pop
sarl
xchg
loop
mov
ficoms
mov
jle
mov
fisubs
ja
cmp
mov
cltd
paddq
push
xchg
jp
xchg
bound
mov
add
mov
jae
sub
cli
jnp
loop
xchg
inc
xchg
xchg
iret
jnp
mov
enter
shlb
fsubrp
inc
sbb
lret
mov
sti
pop
ret
mov
sub
dec
fsub
mov
jmp
and
repz
cmp
roll
aad
sub
or
sub
repz
addr16
test
out
cmp
inc
and
sarb
push
imulb
pop
sahf
sub
dec
cmp
sarl
in
push
pop
jmp
sbb
jg
jae
xchg
arpl
mov
add
xchg
pop
lds
mov
mov
outsb
push
cwtl
out
xchg
push
insl
cmc
mov
in
mov
mov
fildl
cmpsl
lock
jmp
cwtl
mov
sbb
js
dec
mov
movsb
mov
push
xor
in
pop
cmp
jl
lods
push
mov
inc
imul
inc
hlt
testb
add
test
jecxz
ja
ja
hlt
adcb
lock
rcll
scas
fnstcw
flds
xchg
popa
jnp
bound
ljmp
test
bound
xlat
stos
mov
icebp
and
fs
in
ret
in
call
ret
nop
out
add
fwait
mov
popf
cmpsl
and
lds
sbb
mov
shlb
jnp
fdiv
xchg
adc
decb
bound
insl
jnp
push
adc
lcall
push
push
mov
push
enter
ljmp
or
xchg
test
fstpt
sti
add
cmp
add
cli
in
jae
push
in
xor
mov
stc
pop
outsb
sti
mov
mov
or
xor
testl
ret
call
xor
aaa
or
outsb
sub
push
xchg
movsl
leave
dec
pusha
popa
ret
lods
and
dec
pop
cmp
mov
out
sub
push
and
mov
call
xor
mov
fisubs
mov
push
out
lret
test
lock
jnp
jmp
xchg
push
push
jg
test
out
div
pop
repz
cltd
out
inc
pop
sahf
push
jg
dec
stc
xchg
mov
pop
and
imul
and
jns
jnp
int
repz
inc
enter
inc
push
jnp
mov
pop
sbb
out
inc
imul
cmc
mov
add
dec
out
dec
addl
mov
lret
and
out
add
fwait
push
pop
popa
mov
scas
divb
push
ficompl
xor
xchg
sbb
mov
push
jg
out
or
lahf
mov
xlat
fwait
xor
mov
ds
adc
subl
and
out
movsl
pop
mov
fdiv
data16
push
pop
cwtl
jbe
popf
pop
xchg
testb
fstl
jo
sub
pop
add
call
sub
adc
movsl
gs
cmp
xor
jp
mov
mov
adc
addb
cmp
mov
push
ds
into
test
push
into
pop
xchg
jne
icebp
in
inc
jmp
popa
out
jo
ja
movsl
cld
jns
or
ret
or
shrl
test
loopew,pn
jecxz
xchg
mov
mov
mov
xlat
fisubrs
test
jnp
jae
test
lahf
out
fwait
ret
leave
add
movsb
fisubrs
cmpsb
inc
clc
jae
data16
addr16
aad
pop
jmp
nop
push
pop
inc
sub
mov
add
shlb
sub
out
and
lea
cmp
push
sub
ljmp
jnp
xlat
jl
aad
jnp
mov
push
pop
loop
es
add
pushf
addb
ljmp
inc
pop
std
mull
out
ret
insb
out
aaa
outsl
loop
pushf
aam
notl
data16
xchg
push
mov
inc
pop
xorl
fdiv
mov
pop
fldl
popf
fucomi
jnp
pop
loope
push
mov
and
insl
jg
aad
fidivl
fidivrl
cld
mov
jne
xchg
and
shll
jmp
gs
mov
lock
notb
hlt
jecxz
aaa
out
ja
ss
clc
ss
js
in
stc
imull
repz
data16
ja
mov
bound
adc
icebp
ss
jno
leave
lods
jnp
psubsw
test
mov
dec
or
mov
es
fwait
cli
dec
out
push
in
or
push
fwait
hlt
popa
insb
fimuls
mov
gs
std
arpl
cli
arpl
sbb
out
xchg
out
push
mov
lock
jecxz
mov
gs
pop
icebp
incl
outsb
sub
push
add
repz
cmp
int3
and
insb
lock
pop
mov
jg
imul
out
lsl
cmp
inc
call
out
pop
or
pop
movsb
loop
lds
jg
mov
test
push
nop
sbb
dec
pop
cmpsb
and
sahf
dec
mov
pusha
mov
mov
jbe
imul
icebp
push
add
shll
sbb
in
test
ds
mov
bound
outsl
test
sbbb
imul
fildll
ljmp
lahf
cld
ret
push
xchg
sahf
cmp
sub
sbb
cmp
or
arpl
lods
loope
jmp
mov
or
pop
add
out
or
jl
outsb
and
out
andb
into
in
cli
dec
push
imul
int
std
adc
lcall
lock
scas
aaa
push
loopne
test
test
mov
xor
jo
imul
ja
push
icebp
jle
add
pushf
arpl
add
adc
test
popf
pop
jbe
icebp
ror
xorl
imul
pop
nop
bound
push
cmp
andb
xor
adc
pop
imul
push
lahf
push
xchg
shlb
and
adc
dec
cmp
scas
rcrl
mov
jae
pop
sub
sahf
pop
enter
jg
outsb
daa
pop
pop
mov
in
adc
pop
jmp
jnp
idiv
sub
lcall
xor
inc
and
mov
dec
jbe
outsb
mov
mov
push
mov
adc
pop
ds
fdivr
clc
loop
notb
in
cli
std
lcall
ficoms
jo
add
adc
pop
bound
adcb
shll
add
add
add
xchg
jecxz
push
sbb
fisubl
sub
in
mov
es
loope
and
adc
xor
jno
popf
push
push
ret
mov
lods
gs
sub
aad
fucomi
mov
test
xor
imul
dec
out
repz
jmp
mov
call
mov
dec
in
jne
shl
call
fs
psllw
xor
sub
inc
bound
sbb
push
imul
addl
and
mov
andl
add
ret
sbb
push
dec
jle
sbb
hlt
call
out
loop
imul
dec
jmp
cmpsb
cmpsl
popa
inc
jmp
imul
pop
mov
adc
xor
pop
sbb
mov
es
adc
pop
arpl
call
ret
in
insb
jnp
out
popa
inc
addr16
jo
jns
sub
jecxz
xor
mov
push
popa
push
mov
pop
andl
or
pop
pop
nop
fisttpl
mov
mov
sub
push
pop
std
cmp
pop
es
imul
shl
mov
inc
inc
push
std
sti
cmpsl
test
lods
fisubrl
sub
adc
stc
ss
lds
pop
in
mov
lods
cmp
lahf
or
fcompl
push
fstl
cltd
sti
and
inc
out
gs
mov
imull
aad
rorb
cli
addb
lea
adc
inc
sbb
cmp
es
sub
test
into
mov
mov
cmp
fidivrs
adc
mov
pop
mov
xchg
outsb
cmc
push
enter
jl
inc
dec
or
add
push
in
rol
ljmp
push
push
imul
sub
out
mov
or
mov
jmp
dec
pop
cli
in
mov
xor
push
insb
sti
inc
cld
mov
out
adc
and
scas
lret
xchg
mov
pop
mov
adc
inc
add
in
ret
int3
xchg
repz
push
test
sbb
leave
lret
or
out
cmp
call
mov
popf
stc
pop
mov
push
ljmp
jg
mov
pop
xlat
in
ret
jecxz
out
mov
addr16
out
dec
xchg
nop
out
ljmp
cmc
add
xor
jecxz
pop
repnz
mov
inc
int
pushw
adc
pop
imul
outsb
xchg
je
pop
divl
pop
insl
mov
sub
cltd
adc
sub
cmp
or
ds
sub
sahf
enter
or
insl
les
out
xchg
mov
bound
popa
nop
jae
inc
jmp
in
jle
mov
scas
mov
jecxz
adc
loope
cmp
lahf
scas
dec
pop
or
dec
mov
int3
push
pop
xlat
popf
aaa
lock
imul
mov
cmpsl
push
popa
adc
pushf
fisubrs
arpl
scas
out
cmp
lea
cmc
in
ficoml
out
push
jae
cwtl
add
ljmp
pop
ja
aas
movl
leave
jnp
xor
mov
jne
jmp
aad
jmp
mov
pop
mov
cmp
fiaddl
inc
scas
add
insb
data16
out
jg
xor
pop
loop
jbe
jmp
shr
scas
xchg
add
outsb
call
xchg
adc
insl
loope
add
jmp
out
push
xor
sbb
outsb
push
aas
fwait
int
or
aas
clc
jmp
and
cmpsl
cmc
sbb
cli
mov
pop
stos
loope
ljmp
stc
xchg
jp
push
into
outsl
push
lret
xchg
sbb
pop
cld
jg
mov
dec
xchg
mov
ret
ljmp
into
add
cli
hlt
jnp
inc
ljmp
insl
outsb
sbb
push
pop
inc
cmp
fldl
ja
sub
lret
ss
sbbb
out
mov
test
aas
and
jecxz
std
cwtl
icebp
pxor
scas
out
add
lods
mov
pushf
fcoml
ss
add
scas
insl
fmulp
pop
lret
mov
mov
andb
aad
pop
test
adc
aaa
out
mov
lret
pop
loope
and
rolb
xlat
icebp
xchg
push
inc
jp
lods
push
add
call
movsl
lods
mov
or
jno
jns
bound
xchg
pop
in
inc
add
shll
fsub
xchg
out
pop
call
punpckhbw
and
icebp
xor
lcall
outsb
ljmp
dec
pop
push
fwait
imul
jo
push
data16
and
insl
mov
out
pop
cmp
mov
mov
push
and
cltd
in
push
ror
inc
sub
enter
in
ljmp
les
push
mov
cmp
sbb
mov
ja
arpl
js
xchg
jp
or
loope
cmc
addr16
cld
repnz
fs
imul
push
mov
js
xchg
mov
sbb
dec
cmp
sbb
push
mov
aaa
xchg
lds
jle
add
cmp
sbb
outsb
not
sbb
cmp
xchg
inc
outsl
push
ret
and
inc
mov
xchg
push
out
andl
rcll
out
inc
adc
xchg
mov
insl
jae
xor
xchg
xor
lods
cmpsl
jne
inc
fdivr
adc
mov
fs
mov
push
in
test
andb
push
push
mul
loop
push
in
add
scas
out
mov
jae
movsl
test
xchg
xor
hlt
orl
cmp
imul
cmpsb
lahf
cmpsb
popa
adc
fnstsw
pop
lds
sbb
fwait
enter
xchg
dec
fildll
fsub
or
inc
popa
stc
sub
cs
and
mov
imul
mov
cmpsl
rcrl
nop
stos
jmp
mov
scas
lods
jns
sub
xchg
xchg
sub
iret
insl
cwtl
jmp
dec
out
ss
and
daa
push
or
pushl
insb
ds
xchg
insb
push
pop
jmp
adc
icebp
cmp
xor
pop
adc
mov
fld
shl
mov
inc
mov
movsl
cld
jnp
rcrl
out
out
outsb
or
pop
movsl
adcl
and
xor
into
cld
mov
insb
movsb
fnstcw
pop
xchg
pop
adc
test
inc
outsb
xor
into
lock
jno
cli
sub
pop
jecxz
sub
sbb
addr16
addb
cmc
fildll
fdivl
in
movsl
lock
lahf
dec
xor
fldt
imul
dec
push
mov
fucomi
jg
and
sub
dec
cmpsl
inc
hlt
push
pop
mov
out
pop
pop
jmp
arpl
ss
mov
push
mov
out
adc
mov
inc
dec
push
xor
movsl
pop
and
and
inc
adc
xchg
lods
xor
mov
lds
push
or
push
repz
test
push
adc
inc
dec
jmp
sti
adc
in
les
push
jmp
mov
jg
insb
and
out
add
cli
enter
and
push
sub
xchg
fstpl
and
jnp
addr16
mov
jmp
push
icebp
mov
notl
pop
scas
sbb
inc
xchg
call
stos
sub
adc
pcmpgtw
lods
insb
bound
repz
mov
xor
adc
push
sub
lods
xchg
pushf
popf
out
out
and
ret
and
nop
add
imul
movsl
popa
jno
mov
mov
push
in
inc
popa
lds
mov
data16
cmp
jo
call
sub
outsl
fcompp
dec
cltd
mov
cmpsl
and
and
xchg
popa
inc
cmpsb
inc
repz
jmp
jo
sbb
rcrb
scas
divl
stos
adc
dec
int
lods
cmpl
push
xor
add
popa
out
pop
decl
repz
mov
popa
ret
inc
in
in
std
testb
scas
inc
jecxz
stc
cmp
xor
arpl
pusha
pop
shlb
push
xchg
sti
and
cmp
push
cmp
cmpsb
and
lret
sub
lock
in
ljmp
sub
icebp
dec
test
adc
push
sahf
outsb
stos
fdivrl
inc
xchg
jg
and
mov
ljmp
imul
push
push
and
xchg
lods
test
push
jge
cltd
pop
and
ds
pop
sahf
cmp
out
loope
jnp
pop
outsb
push
mov
sub
mov
sub
shrb
stos
das
pop
mov
rol
lahf
decb
dec
push
or
pop
pop
popa
dec
mov
jecxz
xor
add
mov
cmp
sub
aad
into
in
loopne
pushl
or
movsb
sahf
in
mov
jnp
int3
jne
in
out
bound
jo
leave
jns
sbb
mov
adcl
test
insl
cs
je
sbb
jl
jns
jge
pop
addr16
js
fdiv
push
push
jge
movsl
jae
jnp
jno
ja
data16
jne
dec
out
xor
push
lahf
cmp
inc
into
clc
ficoms
xor
ja
insb
pop
mov
popa
int
arpl
jge
fdivl
jg
pop
xchg
pop
insb
push
imull
icebp
mov
and
jmp
in
out
cmc
ljmp
lahf
int
sbb
cmc
mov
push
push
out
mov
out
xlat
ja
jmp
pop
mov
cmp
xor
jmp
inc
ljmp
fisubrs
movsb
iret
lods
adc
test
pop
fsubs
insb
scas
sbb
sub
jno
int
or
cmc
pop
sub
ja
outsl
clc
xor
cltd
or
and
inc
push
mov
or
mov
lahf
jne
enter
push
clc
push
lock
mov
sbb
shlb
mov
mov
jne
jmp
jmp
pop
dec
add
aad
jne
popa
sbb
in
adc
mov
and
icebp
and
pop
inc
jecxz
fiaddl
repnz
or
jnp
pop
xchg
stc
sub
lret
call
stc
or
es
ljmp
mov
mov
jns
sbb
mov
outsb
xor
jle
cmpsl
mov
jbe
push
out
stos
dec
jp
sar
and
lock
loope
jg
inc
enter
cmp
inc
lret
pop
orb
test
or
fsubrl
cmp
movaps
in
out
mov
repz
js
push
sub
cli
not
std
gs
mov
sub
add
cli
pop
push
ret
out
inc
mov
mov
mov
dec
ret
sub
in
leave
daa
insb
dec
push
cli
mov
xor
or
pop
mov
fs
movsl
repz
test
push
bound
fs
cmpsb
dec
dec
push
loope
pop
mov
cld
pop
cmp
dec
enter
sub
sahf
cli
cmp
icebp
icebp
data16
out
lahf
cmp
ljmp
insb
and
cmp
clc
and
xorb
xchg
lret
jbe
out
insl
lea
pop
and
xor
add
and
dec
and
cmpsl
inc
adc
jnp
push
mov
inc
cli
cmp
rorl
into
cmp
repz
cltd
add
ja
repnz
insl
test
subb
xchg
insl
aas
out
lock
pushf
cltd
bound
into
add
sbb
je
data16
std
cmpsl
or
mov
flds
pop
std
dec
mov
and
xchg
std
nop
mov
lock
push
stos
aad
test
xchg
inc
test
lret
add
sub
inc
ret
xchg
sub
pushf
xor
enter
and
fimuls
xchg
jnp
dec
call
gs
test
mov
in
je
or
cmc
arpl
sub
and
cmpl
int
test
jae
cmpsb
mov
mov
push
and
daa
imulb
mov
fcmove
jecxz
and
scas
inc
lods
aas
idiv
lret
mov
jecxz
clc
jnp
adc
mov
push
inc
in
adc
jns
cmp
lret
dec
add
cmpsl
outsb
jbe
ret
imul
jno
mov
in
enter
xor
push
arpl
aad
daa
and
scas
outsb
pop
mov
sbb
and
icebp
sub
cmp
ret
inc
ljmp
pop
leave
shl
sub
sub
leave
mov
push
add
arpl
in
out
push
popa
mov
out
fildl
imul
test
cmp
sbb
xchg
push
popa
stos
add
outsb
lea
std
mov
inc
xchg
iret
sub
leave
jo
out
jb
and
in
push
mov
xchg
jns
inc
insl
inc
mov
jo
xchg
insl
imul
jg
jecxz
in
aaa
pop
mov
xor
adc
pop
ja
cs
outsb
mov
mov
cmpsb
pop
fsubs
fdivs
fstpl
es
mov
sub
cmp
popa
sti
jp
shlb
out
xorl
xchg
daa
and
cwtl
push
jb
mov
sbb
inc
mov
pop
or
inc
fprem
inc
imul
mov
mov
cmpsb
out
dec
popa
cmp
cmp
sub
pop
fstl
jecxz
xchg
ljmp
gs
pop
ljmpw
push
push
pop
imul
mov
int3
imulb
mov
mov
repnz
clc
out
cld
push
dec
pop
mov
dec
sbb
int3
imul
call
xor
xchg
jne
lea
and
inc
sbb
sub
ljmp
loop
cld
mov
insl
and
es
loop
and
and
out
rcrb
mov
pop
sbb
mov
sti
out
push
pop
dec
negl
inc
cld
jge
ljmp
xchg
jnp
pop
montmul
cmpsb
inc
loopne
addr16
cmpsb
andb
test
and
and
inc
enter
xor
or
icebp
sub
call
add
cs
jnp
jg
and
mov
mov
sbb
bound
sub
test
and
inc
int3
int
dec
xchg
mov
and
dec
inc
xchg
pop
mov
push
sub
cmp
movsl
jne
les
popa
fwait
idiv
mov
fsubr
pop
sub
cmp
jecxz
testb
in
movsl
in
pop
inc
arpl
imull
addr16
nop
fsts
and
imul
pop
pop
sub
mov
imul
sub
in
idivl
sub
in
sti
mov
cmpsb
mov
mov
dec
imul
jecxz
xchg
jns
sub
lret
xor
test
lock
call
lods
push
repz
inc
cmp
das
push
add
xchg
xchg
outsb
push
subl
sub
mov
pop
inc
push
cmp
mov
cmpsl
stc
rcpps
jno
lock
mov
ret
mov
lea
ja
scas
fwait
repnz
mov
bound
shrl
or
xchg
push
pop
mov
sbbb
push
sub
jecxz
loopw
data16
imul
cmpsb
xchg
in
jmp
hlt
fdivs
loope
addr16
jnp
ds
movsb
repnz
sub
cmp
pop
cmpsb
scas
push
add
add
push
decl
in
adc
roll
push
add
jg
popf
lods
mov
ja
adcl
pop
mov
sbb
test
frstor
lret
and
adc
fwait
pop
jp
outsl
fidivs
add
push
sar
push
push
insb
mov
decl
push
xor
xor
and
sub
cltd
xchg
and
aaa
mov
lret
cmp
fwait
scas
cmpsb
and
pop
xchg
pop
lds
cmp
push
out
addr16
ret
jae
mov
xor
sbb
sub
push
push
push
stc
xchg
or
push
adc
sub
and
xchg
adc
leave
mov
lret
push
sbb
jp
jecxz
test
xor
push
fldt
clc
outsb
lock
cmpsl
add
shlb
ret
pop
cmpsb
loop
cmp
nop
pop
cpuid
push
subb
inc
and
pop
pusha
push
fdivrs
popa
nop
push
bound
and
dec
pop
push
inc
cmpsb
sbb
movsb
jecxz
xorl
aam
ficoms
orl
scas
aas
fildl
mov
rorl
pushl
es
or
jnp
xchg
xchg
sub
lds
loope
outsb
and
sbb
test
pop
int
dec
ret
sbb
mov
and
imul
add
inc
mov
fdivrl
cmpsb
adc
add
sbb
pushfw
fwait
out
in
and
jae
push
jnp
jg
orl
divl
dec
loopne
arpl
jbe
outsb
push
jae
pop
adc
add
pop
out
push
cmp
fisubl
shll
cmp
mulb
scas
push
in
aam
insb
xchg
into
mov
inc
call
mov
cld
cmp
and
imul
cmp
inc
inc
cmp
dec
popf
mov
outsb
test
shrl
jecxz
inc
repz
cld
insl
sub
int
add
sub
xor
fwait
int3
mov
std
cs
xchg
or
movsl
jns
mov
orb
mov
leave
xchg
push
outsl
les
push
pop
out
mov
andb
dec
jbe
mov
jae
mov
inc
xchg
cld
jmp
mov
cmp
popa
mov
in
pop
mov
mov
out
inc
cwtl
jl
sub
sub
ss
dec
pop
test
aaa
sub
xchg
movsl
out
les
jge
je
js
out
jp
pop
xchg
ret
scas
jne
and
jnp
jecxz
mov
jmp
mov
imul
shlb
pop
shlb
insb
fwait
push
jno
pop
mov
push
lea
enter
and
int3
cli
dec
loope
pop
mov
jnp
mov
sub
push
cmp
sbb
ds
mov
push
cmp
push
add
lds
hlt
cli
repnz
sarl
enter
sub
loope
jns
push
loope
shll
movsb
mov
out
faddl
out
mov
imul
fwait
pop
adc
repz
aam
dec
test
and
sbb
iret
repnz
mov
adc
aad
push
or
gs
cs
gs
testl
push
sbb
ljmp
pushf
or
dec
mov
jbe
jno
push
ljmp
jl
in
jno
cmpsl
inc
jbe
stos
pop
addb
and
jnp
loope
out
inc
loope
adc
dec
inc
sbb
test
adc
jge
xchg
ljmp
cs
jo
lret
cmp
jge
adc
stos
push
mov
push
and
lret
mull
mov
movsb
cld
fs
repnz
add
and
jo
divb
mov
das
push
dec
mov
ljmpw
add
fwait
pop
mov
jne
ret
enter
jbe
sti
mov
aaa
cmp
into
sbbb
pop
inc
icebp
sub
stc
gs
adc
sbbb
hlt
stos
stos
sub
aad
adc
push
btc
jo
mov
cmp
int
movsl
lods
cmp
cmp
xor
cmc
imul
jp
mov
insl
xchg
int3
bound
sub
xor
lahf
stos
add
out
out
xor
mov
pop
fisttpl
xor
push
and
jmp
cmpsb
pusha
adc
ja
dec
sbb
sbb
mov
sbb
jbe
or
sbb
push
fadds
cwtl
mov
idivl
cmp
jo
xchg
loope
cmc
out
in
push
pop
and
fwait
scas
jne
sti
cmpsb
fsubrl
nop
add
out
sub
mov
mov
sbb
in
test
out
sti
in
push
jae
dec
inc
jne
push
imul
sub
cmp
test
xor
pop
or
shlb
shl
mov
stc
popa
xchg
push
xchg
call
lods
movsl
xorb
add
cmpsb
sub
add
push
push
scas
and
int3
xlat
mov
ret
xor
jmp
cmpsb
lret
pop
std
into
jmp
out
leave
cmc
divb
add
loop
cmp
and
repnz
aas
or
js
xchg
lds
jnp
jo
lods
or
sub
shr
mov
fsubp
jmp
dec
lret
lods
sbb
std
out
in
jae
sub
xor
outsb
xchg
dec
fwait
inc
mov
xchg
popl
insb
nop
sbb
and
fadd
gs
fwait
scas
gs
adc
addr16
fwait
sbb
out
sub
sub
ficoml
push
iret
sbbl
cmc
cmp
popa
ljmp
movsl
test
inc
call
pop
and
jne
sbb
inc
lahf
test
data16
push
mov
cmpsl
in
push
call
or
mov
add
lock
jnp
lea
jecxz
pop
ja
add
mov
lcall
je
loope
out
popa
add
mov
push
mull
in
aas
jns
sbbb
loope
xor
lock
scas
xor
rclb
xorl
sbb
cmc
popa
jmp
loop
fs
sar
cmpsl
fidivrl
das
pop
xchg
stos
xchg
out
sbb
movsb
sti
mov
popf
inc
mov
out
es
in
push
fs
dec
pop
aas
repnz
inc
and
rorb
mov
in
std
xor
jne
andb
shl
loope
mov
dec
idivl
mov
jmp
fildl
sti
les
gs
loopne
call
pop
add
push
jmp
sbb
jle
lock
sub
insl
cld
sbb
bound
jge
loop
jne
movsl
out
jne
icebp
outsb
sarb
fildll
ds
mov
out
repnz
cmp
out
adc
scas
jne
lods
dec
mov
pop
lock
or
cmova
movsb
or
lock
adc
cs
aaa
mov
fistpl
jb
mov
cmp
test
popf
movl
call
fwait
outsb
es
cmp
sbb
sub
in
push
jae
jge
addr16
sub
sub
fwait
pop
loope
data16
fwait
test
push
mov
sub
ficompl
popa
and
pop
inc
sub
sarb
dec
and
incl
aad
jg
hlt
sbb
dec
mov
gs
mov
or
pop
ljmp
stos
stos
cmpsl
rclb
sbb
lock
arpl
idivl
mov
outsb
je
scas
sbb
popa
mov
add
inc
jg
inc
js
lcall
jecxz
push
dec
clc
popa
and
out
inc
stc
loope
pop
dec
popa
and
lret
jae
vshufps
xor
ss
ret
mov
out
or
xchg
jae
in
ret
out
push
lea
out
or
mov
jae
in
ret
test
test
imul
jbe
ja
sub
sub
mov
ja
sub
mov
lcall
jbe
jae
in
ret
inc
xchg
lea
add
jecxz
mov
jae
in
ret
mov
xchg
or
mov
jae
in
ret
outsb
in
or
dec
jne
idivb
fwait
xor
fwait
or
mov
je
and
mov
dec
pop
in
mov
and
xorl
fisubrl
mov
mov
or
es
adc
dec
lahf
popaw
cli
sti
dec
leave
repnz
loope
pusha
xchg
ret
flds
xchg
sbbl
in
pop
xchg
xchg
fwait
data16
cmp
mov
fidivrs
pushf
testl
les
add
dec
data16
jae
popf
jnp
les
xchg
fsub
cmpsb
inc
jae
out
clc
outsl
mov
test
test
sub
test
sti
inc
call
mov
mov
xchg
xchg
fwait
test
xor
cld
cwtl
sub
xlat
imul
pop
add
pop
lcall
clc
or
test
sub
enter
mov
enter
dec
gs
lods
pop
dec
mov
lret
dec
enter
cmc
xor
in
outsb
hlt
or
aaa
test
jb
push
mov
cmp
outsb
cltd
loop
in
ret
fwait
adc
loop
in
repz
pop
mov
test
cmp
lea
jge
stc
hlt
mov
add
xor
call
adc
mov
jo
in
in
outsl
mov
out
jecxz
jmp
ss
aad
rol
fwait
sub
lcall
adc
daa
add
xor
xchg
lds
jne
sub
and
jp
mov
mov
push
insl
ret
imul
fdivrs
lock
lcall
xor
pushf
in
shl
fnsetpm(287
push
sbb
testl
fwait
lea
into
mov
outsb
or
pop
xchg
pop
inc
cmp
mov
lea
jecxz
push
into
fwait
xchg
and
jnp
pushw
jae
jmp
loope
and
push
data16
add
fwait
mov
mov
out
ljmp
mov
sbb
jns
daa
sti
pop
jo
push
lahf
movsb
xchg
jno
jmp
push
inc
out
gs
push
sub
mov
imul
jecxz
call
scas
call
xchg
call
adc
sub
and
fiaddl
mov
inc
out
les
xor
jo
std
pop
push
jo
mov
lods
dec
fdivrl
arpl
and
imul
icebp
test
orb
jbe
jno
or
cmpsl
out
stos
imul
sbb
sbb
or
icebp
outsl
iret
dec
push
xorl
cmc
push
lods
cmp
in
mov
xchg
mov
sub
popa
ficoms
ret
jbe
xor
jo
cmp
inc
rolb
mov
jnp
sub
cmc
xchg
jns
or
xchg
gs
arpl
mov
bound
out
hlt
or
cmp
es
mov
out
sub
lock
hlt
cmp
hlt
xor
imull
fstps
add
js
push
data16
cmpsl
mov
insl
dec
and
stos
add
cmpsb
lret
cmp
out
jae
inc
adc
rolb
loope
sub
jmp
imul
es
gs
movsl
cld
dec
xchg
sbb
inc
sarl
and
pop
call
test
dec
or
and
sbb
inc
lahf
mov
test
or
in
sub
call
xchg
jecxz
insb
mov
xor
dec
mov
lea
add
test
test
out
push
jo
cmp
jns
or
insl
shll
nop
inc
movsb
lahf
fisubs
sbb
call
imul
loop
shl
jne
ret
scas
pop
mov
mov
imul
cltd
lods
sub
or
arpl
and
add
mov
mov
daa
fildl
or
movsl
mov
ljmp
ss
xorl
stc
in
mov
loope
kandnw
inc
popa
adc
out
popa
and
ljmp
fcompl
data16
pop
gs
lock
into
cmp
scas
jo
test
push
sub
sub
ret
iret
lea
lds
and
sbb
loope
mov
jbe
fiaddl
inc
mov
mov
enter
ror
cmp
addr16
aam
rcl
or
dec
jecxz
mov
add
in
mov
and
int
int
push
out
inc
dec
sub
andps
xchg
cmp
pop
data16
in
push
rolb
mov
ljmp
out
fsts
pop
fidivrs
pop
in
out
mov
jle
call
sahf
dec
cwtl
xor
shl
or
jno
fsubs
aam
imul
fistl
pop
jp
adc
sub
loopne
stos
lods
rorb
and
push
test
lods
xor
xchg
inc
sbb
movsb
jns
cmp
pop
xor
je
cs
pop
lods
test
es
and
pop
mov
fcompl
jg
movsb
lahf
in
in
jae
movsb
pop
jne
movsb
imul
sbb
movsb
in
jecxz
mov
subb
jmp
sub
insl
mov
xchg
xchg
shlb
xlat
and
pushf
stc
cmp
jp
pop
mov
and
test
adc
jne
cmpsl
jmp
jns
and
je
sub
or
jne
jg
sti
incb
popa
out
push
test
push
pop
xchg
repnz
and
int
or
rorl
push
out
les
cmp
xorb
and
and
cmpsl
mov
mov
ljmp
xor
push
loop
sub
push
call
cli
rorb
insl
push
mov
sbb
js
fwait
ljmp
inc
xchg
or
add
jmp
mov
fisubl
mov
add
test
gs
jnp
cli
cmp
lock
mov
bound
mov
insb
pop
pushl
ja
imul
out
arpl
bound
lea
lock
pop
fldcw
pop
fwait
sahf
add
fucomi
push
adc
jbe
mov
movsl
inc
jbe
push
addr16
xlat
mov
out
cld
xchg
pcmpgtw
testb
movsl
movsl
push
adc
mov
pop
mov
sub
addr16
lahf
mov
gs
ljmp
push
arpl
xchg
lock
sbb
cmc
xchg
push
gs
stc
cmp
std
mov
adc
push
cmc
pop
fmull
jecxz
repz
arpl
movsl
mov
icebp
mov
pop
daa
cmc
ficoml
in
dec
jmp
mov
loopne
stos
or
out
jo
in
outsb
and
movsb
mov
jno
push
std
and
pushf
cmp
dec
lcall
xor
fwait
sahf
push
ret
xor
icebp
fidivrs
scas
bound
arpl
inc
fstps
aam
je
pushf
mov
in
lods
and
jbe
fcmove
jl
cmpsl
xchg
jecxz
cmc
push
loopne
add
data16
test
in
mov
dec
xchg
sbb
inc
xchg
sub
out
loop
fwait
icebp
jo
push
dec
mov
xor
loope
inc
sub
and
add
addr16
in
inc
pop
xlat
imull
and
xlat
test
mov
add
popa
push
loope
loope
divl
pop
popa
sub
sub
pop
ljmp
mov
scas
xchg
and
addl
popw
mov
mov
das
jmp
xchg
sahf
mov
lahf
pop
xor
inc
or
mov
imulb
xor
out
popa
in
addr16
movsb
call
jnp
xchg
outsb
jl
sub
into
out
stos
test
mov
call
or
jnp
movsl
cmpsb
pushf
jno
mov
stc
sti
data16
cli
into
adc
scas
ret
inc
scas
jg
mov
stc
loop
fisttpl
int3
lock
out
test
daa
in
popa
out
loop
fistpl
jecxz
into
call
lds
sbb
lret
scas
fiaddl
insl
lods
or
jns
mov
inc
lcall
fs
in
ret
cmpsl
push
dec
sub
adc
fsubs
popa
cmp
xor
scas
addr16
sti
sti
sub
xor
push
lret
sbb
cmp
das
or
pop
outsb
cld
push
outsb
mov
pop
loop
aad
push
mov
out
inc
aad
mov
icebp
mov
push
out
and
mov
add
repnz
data16
repz
cmpsl
jno
orl
ljmp
jns
sub
xchg
pusha
out
pop
xor
cmpsl
jle
or
fwait
xor
mov
loope
int
cmp
adc
jo
or
dec
lock
adc
mov
arpl
jle
push
inc
in
call
movsb
cli
lods
popa
mov
gs
and
sti
jle
cmp
pop
push
sub
pusha
call
or
mov
jmp
cmc
jno
stc
xor
aam
mov
sbb
cmp
lret
divl
dec
push
shlb
adc
scas
addr16
dec
cltd
imul
cmp
mov
loop
lock
cwtl
lock
mov
ds
popa
cli
jmp
out
add
loop
data16
dec
cmp
repz
mov
cwtl
adc
pop
ffree
xor
jl
mov
mov
leave
jecxz
gs
mov
ret
mov
add
mov
fs
push
sub
xor
mov
mov
outsl
movsb
shr
scas
call
bound
addr16
mov
out
mov
sbb
jo
scas
mov
sbb
or
scas
and
int3
aad
popl
mov
iret
jbe
xchg
ds
mov
mov
nop
insb
jo
mov
popf
sbb
inc
push
jnp
mov
rcrl
fadds
das
jnp
int
and
ret
or
ret
das
jnp
sub
fimull
cltd
lods
cmc
add
out
mov
cwtl
sub
aad
mov
mov
outsl
test
xchg
out
mov
ret
push
out
enter
repz
ret
jecxz
rorl
mov
in
rep
add
out
sub
lret
mov
push
add
sub
add
adc
test
fwait
scas
insl
dec
rcll
shlb
xchg
adc
sti
mov
xor
dec
jae
ljmp
xor
lahf
dec
mov
sti
test
jecxz
rorb
inc
mov
fiaddl
repnz
cmp
mov
call
push
add
jg
inc
sub
icebp
inc
inc
outsb
push
or
inc
mov
in
inc
add
add
fmul
jecxz
and
mov
lahf
pop
mov
scas
nop
fs
adc
push
mov
mov
xor
int3
mov
cmpsl
or
jmp
js
push
loop
cmp
mov
or
sub
in
lods
or
lods
xor
mov
out
push
call
scas
shr
pop
add
xor
mov
lds
in
push
push
ret
sub
pop
scas
dec
addr16
jecxz
cmc
movsl
push
jecxz
adc
mov
dec
push
pop
or
sub
xchg
mulb
sbb
xchg
push
leave
add
sub
or
ret
add
in
inc
inc
mov
xchg
xor
cmpsl
mov
stos
repz
push
cmc
lea
cmc
ret
insl
enter
in
dec
aaa
jp
xchg
lds
push
jbe
cmp
inc
addr16
movsb
out
or
repnz
adc
mov
loope
arpl
loope
arpl
arpl
test
jbe
mov
outsb
lock
mov
mov
mov
sbb
sub
add
jbe
sbb
popf
jne
sub
fcompl
sti
in
mov
data16
or
cmpsl
xor
mov
xchg
je
rcll
adc
gs
jle
mov
push
or
or
mov
xor
pop
inc
mov
lods
fistpl
hlt
jbe
data16
mov
out
lea
inc
js
fsub
into
loopne
fisubrs
loope
inc
xchg
push
aas
adc
mov
xchg
xchg
jecxz
and
mov
jae
jecxz
loope
shl
dec
in
jmp
cmp
add
sbb
mov
repnz
inc
clc
mov
gs
mov
inc
mull
test
mov
xor
mov
dec
push
sbb
sbb
pop
xchg
xor
mov
mov
loop
movsl
jne
xor
add
add
out
ret
dec
adc
fs
movsl
cli
cmp
pop
sbb
jmp
cs
mov
sub
push
xchg
ficoms
repz
inc
xor
jnp
jg
in
popaw
push
pop
dec
sub
movsl
dec
xor
mov
ljmp
fildl
in
jae
xor
idivl
dec
pop
cmpsb
test
sbb
stos
es
mov
cmpl
pop
ljmp
clc
enter
sbb
mov
sarb
xchg
ljmp
mov
clc
xchg
xchg
out
movsl
in
loop
fldt
xor
data16
out
imul
adc
mov
shl
pusha
mov
lahf
sbb
js
push
pop
lcall
mov
out
dec
imul
and
cltd
in
xchg
inc
mov
stos
cli
sub
push
addb
test
xor
les
or
hlt
jnp
jae
adc
add
movsl
fcmovnbe
mov
pop
lahf
sub
xchg
xchg
adc
enter
add
scas
push
enter
or
imul
push
dec
mov
scas
out
push
in
repz
test
cmpsb
sub
mov
jnp
xchg
mov
inc
lds
jmp
pop
mov
int3
cli
and
mov
cmp
cli
push
or
xchg
jmp
sti
sbb
sub
imul
rolb
out
testl
mov
dec
jae,pt
mov
sbb
call
ljmp
inc
ja
mov
jo
adc
lock
ret
mov
in
stc
and
or
loopne
cmp
dec
ljmp
or
or
es
loopne
sub
pop
sub
pop
insl
test
cmp
xchg
inc
fwait
xchg
cmp
cmpsb
cli
sti
insb
lods
fwait
jne
inc
or
inc
mov
lahf
fnsetpm(287
inc
movsb
push
imul
jle
push
push
imul
das
dec
test
push
imul
sbb
adc
out
shlb
jl
jae
movsl
inc
bound
pop
popf
fs
pop
sti
inc
fisttpl
fwait
jb
test
insl
ljmp
push
jl
outsl
pop
popf
jbe
or
cmpsl
xchg
insl
mov
data16
inc
or
test
xor
jbe
scas
mov
mov
fwait
sbb
pop
arpl
pop
pop
cwtl
dec
xor
inc
test
sbb
inc
inc
adc
jbe
add
lock
mov
jb
sahf
outsb
bound
or
movsb
push
sbb
or
leave
jecxz
inc
cli
cmp
sbb
jecxz
xchg
icebp
and
scas
clc
cs
addl
pop
out
xor
xor
xor
cltd
xchg
data16
sub
cld
sub
ds
mov
cli
or
or
mov
out
jno
icebp
add
fimull
sbb
call
and
into
sbb
movb
cmp
and
jae
data16
cmpb
fimuls
adc
mov
xchg
mov
inc
pop
jmp
pop
push
jmp
push
gs
fldt
jmp
sti
shl
test
pop
and
rorl
cmpsb
daa
xchg
jb
ja
and
and
std
or
sub
fwait
push
sub
mov
add
xor
bound
adc
fidivs
jg
fs
outsb
push
fdivr
test
addr16
xchg
or
cmp
shlb
jnp
xchg
scas
and
sbb
jnp
dec
sbb
test
cmpsb
pop
nop
push
inc
out
sub
sbb
call
cmp
mov
fcompl
lock
outsb
scas
push
cltd
cmpsb
mov
xor
lea
mov
lret
repnz
fldenv
les
mov
mov
jecxz
jne
repz
cmp
jbe
adc
inc
xchg
cwtl
mov
or
or
idivl
inc
mov
inc
fs
loopne
cmc
jbe
call
movsb
xlat
push
jae
pop
push
push
arpl
adcb
xor
outsl
add
jge
jmp
xor
cmp
cmc
mov
jae
adc
add
xor
add
xor
pop
ja
out
push
cld
lret
out
and
daa
cli
inc
lods
loop
sub
test
lock
cwtl
mov
mov
out
test
hlt
sub
push
mov
inc
xor
lods
xor
cmpsb
add
jnp
push
popf
or
xchg
fiaddl
xchg
bnd
mov
cmp
inc
lock
js
adc
lret
ljmp
in
xchg
out
or
jg
sbb
call
das
scas
cld
fwait
add
inc
out
loop
iret
xchg
outsb
not
fadds
adc
xchg
les
jnp
xchg
ret
inc
test
xchg
cmp
inc
dec
push
jno
mov
mov
leave
ss
xchg
xchg
lods
scas
lock
pop
shrb
test
push
aad
sbb
cmc
xchg
aam
mov
mov
shlb
inc
lock
or
xor
loope
inc
mov
and
or
into
adc
push
pop
jecxz
jp
gs
mov
int3
jecxz,pn
repz
and
cli
and
shlb
push
das
lret
sub
pop
dec
movsl
and
mov
add
or
in
in
push
test
mov
cs
inc
data16
out
jle
addr16
push
jle
ja
sbb
movsb
test
sub
add
mov
or
hlt
inc
std
aad
aam
mov
and
js
inc
js
repz
add
pop
jge
gs
mov
daa
and
xor
jns
mov
mov
sbb
les
inc
hlt
jecxz
jno
arpl
xchg
jb
inc
out
pop
out
jecxz
dec
divl
lods
pop
sub
into
les
arpl
mov
js
jbe
sub
cld
addr16
clc
roll
cmp
movsb
roll
sti
push
insl
mov
jg
test
sarb
mov
and
out
inc
add
idivl
pusha
ds
mov
scas
fcoms
jae
push
jmp
cmp
lods
pop
sti
xchg
pop
dec
add
jbe
jb
fwait
stc
add
jo
push
das
subb
lret
call
xchg
mov
adc
jl
jmp
cmpsb
in
scas
mov
xor
mov
std
xchg
xchg
jecxz
icebp
xchg
jb
repnz
arpl
xchg
js
repz
jmp
jbe
cmpsb
cmpsl
push
js,pn
pop
jnp
and
lahf
mov
mov
lahf
dec
mov
cmpsl
add
aam
shlb
enter
adc
out
fwait
mov
aaa
lock
inc
adc
xor
cmp
fwait
dec
push
ja
xchg
mov
fwait
pop
xchg
and
pop
inc
jecxz
jecxz
js
push
outsl
jl
test
add
in
arpl
and
js
or
jne
repz
xor
mov
mov
sbb
or
cmp
popa
or
out
mov
addr16
push
xchg
jae
inc
out
dec
xor
add
cltd
es
cmp
and
fcompl
in
repnz
dec
nop
cmpsb
roll
movsl
cmpsb
and
pusha
xchg
cs
jns
aaa
mov
add
test
das
pop
xor
mov
sub
pusha
dec
loop
mov
and
pop
mov
or
pop
and
mov
inc
cltd
arpl
pop
test
in
andb
xchg
rol
mov
sbb
rcll
aam
test
cld
fwait
sahf
lock
movups
lock
xchg
or
ljmp
sbb
mov
icebp
sbb
jmp
repz
ljmp
or
xchg
xchg
insl
push
rcrb
les
or
sub
movl
in
push
mov
dec
push
fistpl
dec
fucomi
ret
sbb
jp
mov
mov
pop
jecxz
cmc
pop
xchg
sub
in
mov
lods
jnp
pop
test
fwait
in
inc
out
dec
imul
cmp
mov
pop
or
dec
daa
pop
and
push
fistpl
ret
into
push
bound
fcmovnb
inc
imul
pop
out
jne
mov
pop
mov
push
mov
mov
in
xor
mov
dec
rclb
sub
add
dec
mov
ss
jae
les
int
xlat
mov
mov
cmpl
in
mov
push
push
jbe
push
xor
int3
sar
mov
es
push
inc
add
aam
jecxz
and
pop
hlt
ret
popf
xchg
imul
movsl
push
pop
mov
bound
inc
jae
mov
test
jnp
jecxz
out
or
cmc
add
cli
push
fisubrs
in
or
cs
addb
push
repz
jle
out
call
sub
out
mov
into
imul
stos
insl
popaw
mov
dec
jb
cmp
scas
in
ss
into
mov
iret
push
push
cmp
jle
dec
mov
lds
dec
roll
loopne
pushf
jle
jns
mov
fisttpl
cs
aaa
xchg
popa
lods
xchg
sbb
das
lea
cmpsb
out
in
jns
sbb
or
test
mov
push
icebp
hlt
jecxz
mov
movsl
jmp
sub
out
cmpsl
out
inc
in
imul
shll
scas
shlb
push
push
mov
incl
in
test
xchg
test
in
cmpb
cmc
xchg
jnp
ljmp
cli
inc
or
out
test
inc
out
sub
xor
rorb
ds
inc
dec
jae
lock
in
and
mov
xor
mov
jnp
out
lret
mov
and
dec
push
lret
xor
stos
sub
test
addr16
push
fwait
sub
bound
jne
outsl
loopne
cmp
jbe
and
fisubl
orl
out
lods
push
pop
scas
cwtl
mov
mov
loop
mov
inc
fimull
ror
dec
xchg
lret
loope
sub
ss
sub
jbe
int
in
call
lcall
cli
jmp
ret
scas
cmp
insb
cmp
subb
dec
and
rcr
push
xorl
imul
sbb
push
xor
outsl
dec
adc
push
outsb
repnz
jnp
xchg
clc
out
jmp
xchg
xchg
and
scas
cmp
jmp
shrl
mov
aaa
cmc
dec
out
in
mov
pop
pop
mov
sbb
ljmp
aam
in
pop
ljmp
fucomip
lods
in
add
jp
mov
mov
outsb
popf
mov
out
hlt
sub
in
mov
outsb
je
mov
pop
loopne
outsl
jne
add
mov
pop
sub
arpl
cmpsb
sbbb
push
sub
mov
pop
dec
xor
repz
or
xor
push
gs
inc
inc
mov
inc
jo
pushf
out
sahf
ds
mov
mov
sbb
or
adc
adc
xor
in
push
in
push
mull
imul
sub
sub
in
fidivs
dec
mov
inc
in
sub
xchg
xor
mov
xchg
call
or
mov
fimuls
fidivs
loop
inc
call
mov
aas
jae
ja
int
adc
das
outsb
rcll
sbb
imul
sub
mov
in
jg
lock
out
inc
mov
loope
das
sbbb
mov
fistl
inc
jbe
xlat
loopne
pop
punpckldq
int3
jnp
loope
les
frstor
popa
jecxz
pop
sub
push
lea
mov
test
jmp
clc
gs
int3
ret
out
outsl
push
mul
mov
jns
icebp
lock
mov
jecxz
outsl
add
arpl
adc
in
data16
in
jae
hlt
add
mov
in
xchg
mov
ja
testl
adc
stos
jmp
adc
scas
cld
cwtl
mov
cmp
inc
xchg
sub
lahf
ror
fidivrl
call
push
enter
xor
gs
dec
jnp
sub
shr
mov
stos
add
jbe
xchg
inc
bound
jmp
sub
add
push
insl
out
and
mul
out
push
fmul
push
xchg
or
push
xchg
daa
xchg
shll
outsb
fisubl
call
in
std
shlb
popf
mov
fistps
mov
mov
lds
or
cmc
jo
fs
fs
xor
mov
enter
lea
push
mov
sti
xchg
xchg
sub
je
jnp
and
fwait
sbb
shr
sub
sbb
jmp
clc
or
and
jae
inc
mov
sbb
test
enter
jge
sbb
call
ljmp
and
jae
fs
sbb
and
jecxz
pop
xchg
jae
scas
jmp
outsb
jnp
cmpsb
lcall
sub
and
pop
out
fsubrp
por
and
pop
es
ljmp
and
add
je
mov
push
fsubr
stos
cmpsl
lret
test
repz
repz
mov
fldt
repz
inc
and
mov
bound
test
jae
loopne
push
incb
lds
test
leave
cs
in
xchg
movsl
mov
vcvttps2dq
or
out
mov
sub
inc
std
mov
dec
cmpsl
xor
arpl
imul
sub
sbb
lods
jecxz
pop
into
pushl
out
test
sub
dec
fnsave
out
movsb
out
fstpt
mov
incb
shll
incl
scas
mov
or
mov
mov
sbb
and
fwait
in
mov
in
lea
add
mov
and
push
addl
sbb
aaa
jl
imul
cmpsb
inc
cmp
in
flds
mov
push
jnp
cltd
or
nop
sub
bound
inc
push
xchg
test
xchg
push
xor
popw
call
data16
push
out
mov
pop
lods
cmp
cmpsl
and
loop
fldenv
mov
add
mov
push
lahf
enter
jbe
push
xchg
cmp
or
mov
pop
adc
in
loope
fidivrs
insl
fcmovb
lret
icebp
out
pop
data16
push
sbb
loop
lcall
xchg
xor
dec
xchg
fbstp
enter
or
ret
adc
or
add
mov
xor
mov
mov
pop
imul
adc
cs
dec
add
call
cs
adc
lea
jecxz
and
xor
pop
cmpsl
push
mov
fs
jae
movsl
insb
mov
adc
call
adc
and
lods
or
outsb
ljmp
add
jnp
ret
and
xlat
outsl
in
bound
sub
mov
fwait
xor
sbb
test
adc
mov
sub
sbb
mov
scas
aad
cmc
mov
ficompl
push
push
ljmp
push
adc
jmp
dec
mov
pop
xor
jbe
or
jae
mov
clc
lds
pop
sub
mov
std
cmp
scas
insb
dec
cvtps2pd
sbb
out
loopne
cmp
xchg
out
pop
mov
fldenv
ljmp
outsl
scas
xchg
push
push
das
dec
mov
jnp
fildll
outsl
cs
scas
mov
mov
cs
lds
clc
jns
inc
mov
cmp
dec
ljmp
mov
pop
jle
rclb
inc
cmpsl
in
loop
mov
inc
gs
lret
jecxz
inc
dec
xor
inc
add
mov
cwtl
imul
mov
aad
arpl
imul
xorl
fwait
in
repnz
xor
pushf
mov
cmp
add
pop
sub
jmp
adc
fstpt
add
dec
jbe
mov
push
xchg
sbb
lock
sub
stc
or
rorb
out
andb
add
sbb
icebp
repz
xor
repz
pop
lods
mov
inc
adc
mov
mov
test
pop
jle
jnp
pop
test
andb
out
xchg
andb
in
mov
cs
int3
jg
adc
ret
xor
enter
loopne
out
out
lods
mov
mov
add
dec
dec
push
and
inc
xor
nop
push
in
into
ja
fisttps
mov
cmc
daa
cmp
xchg
repz
lock
fwait
or
mov
fwait
sub
out
test
std
scas
and
fldcw
xchg
or
cmp
movsl
cmc
fprem
in
jo
daa
fwait
sbb
mov
cmp
jecxz
pop
pop
mov
pop
scas
mov
leave
jmp
fwait
imull
scas
int
xchg
shlb
inc
fwait
jge
fsub
jnp
fildl
mov
sahf
and
sbb
ss
test
scas
arpl
mov
aas
xchg
mov
fcmovnb
popa
stos
jmp
out
stc
inc
repz
in
mov
insl
lret
clc
xchg
rorb
out
pop
mov
loope
int
mov
sub
xchg
fcmovnu
add
test
mov
ret
pop
jae
dec
push
inc
imul
pop
mov
test
adc
cmpsl
pop
sti
sahf
mov
sbb
and
xchg
andl
jae
test
scas
sti
inc
mov
lds
cmpsl
dec
adc
inc
stc
fs
sub
mov
data16
jne
dec
mov
dec
call
jbe
imul
mov
mov
data16
fidivrs
push
jecxz
pop
rorb
inc
xchg
scas
jae
dec
adc
fwait
stos
test
jbe
mov
andb
jae
jecxz
pop
mov
or
add
imul
jmp
pushf
dec
jns
pop
repnz
xor
xor
int
adc
loop
rclb
mov
cmp
lods
out
hlt
cmp
jns
ficomps
cld
stos
sahf
pusha
ficomps
cmpsb
es
cld
pop
pusha
lahf
and
mov
or
or
add
lahf
or
fcoml
jno
jle
mov
outsl
lret
fnstcw
negb
icebp
sbbl
and
xchg
adc
adc
jns
mov
mov
mov
test
inc
xchg
or
pop
mov
arpl
stc
cmp
cmc
jp
imul
in
jae
ret
push
mov
adc
shlb
inc
imul
add
paddusw
inc
stos
ror
and
inc
mov
out
in
mov
sub
bound
xchg
jnp
test
stc
sub
mov
adc
pop
sbb
inc
addr16
imul
jp
mov
out
addb
xchg
jp
mov
int
orb
cmc
xchg
insl
out
call
ret
hlt
insl
popa
sub
xor
mov
cs
movl
cmp
stos
xchg
jnp
addl
arpl
sub
push
dec
out
sbb
imul
movsl
cmp
xor
fwait
bound
dec
ljmp
insl
mov
sub
push
adc
and
sub
add
cmp
and
pop
fidivs
mov
js
out
rorb
push
dec
setns
enter
in
in
mov
xchg
dec
ret
mov
mov
pop
inc
sti
jg
loop
out
jmp
or
xchg
addr16
nop
fcmovnb
repz
mov
popa
jb
icebp
and
repz
pop
lcall
imul
cwtl
incl
jle
xor
adc
mov
popf
and
scas
sub
lcall
jns
fldenv
or
cmpsl
adc
cmpsb
or
in
scas
dec
sbb
bound
pop
mov
out
jo
inc
pop
jbe
pop
push
push
or
xchg
shr
sub
test
call
mov
shrb
cmp
mov
and
call
arpl
push
push
mov
jle
cmpb
push
es
movsl
repnz
je
xor
xor
push
in
lret
mov
shll
add
sbb
ljmp
or
in
shll
cwtl
jmp
imul
outsb
or
fwait
adc
daa
jmp
bound
mov
push
inc
sbb
jp
adc
mov
imul
out
bound
in
mov
pop
dec
in
adc
cmp
fdivrp
sub
clc
sbb
ds
shlb
adcb
xor
or
mov
jg
push
lds
push
sbb
inc
mov
cs
pop
and
mov
in
dec
filds
add
sbb
mov
rclb
adc
cmpsb
ss
xchg
rcr
mov
xchg
jecxz
jo
arpl
push
cmp
dec
mov
mov
cwtl
hlt
cmp
sbb
ret
fsubrp
mov
sahf
sbb
mov
repnz
sbb
shlb
jo
sbb
mov
lods
push
adc
loopne
inc
movsl
outsb
and
inc
inc
dec
push
fdivrs
xchg
out
scas
sub
mov
dec
sbb
xchg
pop
fistl
into
sarb
jl
std
pop
je
out
cltd
arpl
inc
sub
loope
push
inc
arpl
xchg
add
sbb
jle
popf
add
loop
jno
cmp
mov
out
popfw
call
xchg
cmp
dec
add
fwait
pop
cmc
out
mov
shll
enter
popf
stos
mov
inc
mov
fwait
bound
mov
call
or
enter
test
cs
inc
ds
hlt
pop
and
call
xchg
pop
push
fldl
xchg
pop
sbb
shlb
call
pushf
enter
mov
pop
cmp
or
adcl
jb
inc
add
inc
popf
lods
mov
mov
nop
leave
jo
sub
add
out
pusha
fnstcw
push
out
daa
ss
push
cmp
ficompl
stos
pop
mov
out
pop
jb
arpl
test
cmc
cmpsb
cmc
call
mov
jbe
inc
out
dec
and
xor
sbb
adcl
aaa
push
mov
js
cli
cmp
movsl
jecxz
cmp
fistl
add
inc
rclb
stos
adc
dec
in
fs
stos
jno
ret
mov
xlat
outsl
jb
xor
insl
lcall
fs
jo
in
add
push
pop
mov
pop
stos
in
jg
pop
popa
loope
jae
push
cmp
imul
mov
mov
cmpsb
and
xchg
add
in
ror
push
inc
lcall
loope
repz
arpl
adc
and
mov
cmp
out
psubsb
stc
out
ss
test
nopl
fs
and
movsb
pop
insb
loope
mov
fildll
or
call
call
into
sti
out
lods
call
bound
adc
imul
or
push
lea
ss
cmp
sub
mov
sbb
jecxz
sahf
lock
imul
sbb
sub
data16
mov
hlt
xchg
mov
callw
sti
add
gs
addr16
mov
dec
out
popa
in
popa
js
push
inc
and
mov
inc
ljmp
push
fisttpl
jmp
lods
mov
imull
out
mov
ret
pop
mov
pop
pop
lock
stc
mov
scas
inc
cld
enter
dec
mov
fwait
arpl
push
loop
push
xchg
shrb
or
push
jmp
mov
xor
jmp
inc
stc
cmp
sub
and
out
adc
push
mov
outsl
es
out
cs
mov
lea
cs
aad
fs
pop
jnp
cs
test
cmp
icebp
std
or
das
std
and
xor
addr16
ljmp
sbb
add
repnz
int3
popf
mov
cmp
movsl
sub
lds
push
ja
mov
fistl
sub
dec
and
jge
data16
cmpsb
mov
and
arpl
lahf
and
fisubrs
mov
pushf
inc
push
push
scas
mov
fwait
mov
mov
jmp
add
aaa
and
inc
roll
ret
mov
arpl
imul
dec
mov
call
in
xor
imulb
jnp
in
push
sub
inc
jp,pn
xchg
fmul
mov
gs
arpl
frstor
fistl
mov
push
fstpt
push
mov
flds
mov
out
cmp
and
outsl
pop
cld
pop
xlat
push
aad
fisttpl
mov
ret
jae
pop
jmp
pop
insb
cmpsl
bound
cmp
repz
scas
outsb
push
incl
in
out
nop
cmc
in
jg
jae
pop
data16
test
in
into
xchg
mov
push
out
sbb
cmova
scas
stos
pop
cmp
pop
mov
mov
dec
mov
movsl
and
jnp
orb
gs
lods
xlat
mov
inc
test
lret
and
loop
arpl
sbb
jmp
and
push
data16
subl
jmp
cmpsb
out
add
jae
mov
cmp
jns
adc
movsl
jbe
jmp
outsb
cmp
inc
out
xchg
outsl
push
pop
mov
daa
out
jae
negl
in
fsubl
lret
or
pop
pushf
jp
xor
outsl
retw
or
in
mov
jle
mov
dec
testb
in
add
in
out
and
sub
out
arpl
mov
js
pop
dec
test
push
es
lret
sub
mov
ljmp
xchg
aas
sub
jle
push
xchg
es
jp
rcr
call
call
dec
fidivs
push
stos
sbb
jp
mov
cmp
inc
fwait
lcall
add
push
xchg
jae
pushw
lahf
jp
inc
jle
je
and
adc
mov
stc
adc
es
mov
xchg
jne
mov
dec
notb
mov
arpl
and
jb
xor
and
notl
jnp
pop
xchg
lds
loope
fbstp
xchg
xchg
mov
adc
jecxz
test
loope
dec
orb
icebp
data16
sahf
ljmp
cmp
adc
in
cltd
lods
mov
pop
jns
xchg
mov
out
loopne
cs
out
ja
mov
stc
push
cmpsb
insb
testb
in
adc
sub
and
and
arpl
sti
or
aaa
std
push
pop
sub
mov
stos
test
out
nop
jg
out
out
add
cmpsl
and
je
xchg
js
testb
arpl
icebp
ja
loope
xor
andb
cs
cmpsb
movsl
xchg
fcmovnb
xor
add
stc
fldt
test
push
inc
movsl
cltd
fucomi
into
or
pop
outsb
mov
cld
in
push
cli
int
cmpsl
addb
mov
test
rclb
mov
mov
cltd
popa
andb
out
dec
cli
je
in
fucom
sub
addr16
push
lea
or
in
pop
icebp
mov
mov
cwtl
lea
addr16
mov
icebp
rcll
or
mov
xor
negl
jne
and
and
mov
mov
shl
outsb
call
inc
sbb
ret
adcl
mov
ljmp
jmp
out
fisubs
cmc
outsb
fiaddl
adc
out
bound
test
clc
ja
add
leave
outsl
sbb
rcrl
push
out
cmp
loop
pop
push
fmul
push
ds
jl
ret
sub
hlt
dec
mov
test
xor
jae
or
push
xchg
pop
fisubs
or
hlt
jecxz
das
leave
jg
je
stc
mov
loopne
fucompp
mov
xor
hlt
sbb
scas
mov
push
cmpsl
fwait
hlt
cmp
ljmp
loopne
cmpsl
movsl
fs
xor
fs
sub
sub
imul
cmpsl
inc
push
sarl
jnp
lods
cltd
push
mov
lock
mov
sub
cmc
mov
pop
sti
push
add
outsb
adc
xor
mov
mov
cwtl
mov
push
mov
adc
push
pop
sahf
in
cmp
fwait
aas
pop
into
out
in
aam
mov
jbe
cmpsl
out
ret
outsl
push
jecxz
add
cmpsb
xchg
jo
pop
cli
loope
inc
orb
stos
cltd
mov
inc
cmp
icebp
cmpsb
inc
in
pop
out
pop
in
call
jecxz
in
scas
mov
dec
rcrl
add
jge
loopne
and
jno
shlb
cmpsb
xor
lea
inc
int
into
cmp
jnp
sub
bound
lods
in
inc
test
inc
movsl
pusha
ret
ds
cmp
insb
pop
test
out
popa
pop
and
cmp
inc
rcl
sub
dec
std
jg
sub
imulb
or
jge
pop
sbb
inc
mov
push
testl
js
inc
ja
jno
test
clc
fistl
outsl
in
cmpsl
adc
fucomi
cltd
cmp
js
mov
outsl
rcl
or
jg
add
pop
sub
je
mov
push
testl
cld
pop
jne
cmc
jbe
pop
xor
mov
lret
outsl
push
inc
add
adc
sbb
add
sahf
leave
mov
or
jg
ret
ljmp
test
adc
jbe
imul
in
test
pop
sahf
or
push
pop
mov
mov
out
popa
pop
test
loope
fs
or
jmp
and
mov
cmova
mov
in
jecxz
add
jbe
xchg
scas
andl
test
fisubl
sbb
ret
daa
jle
mov
mov
cltd
out
or
sub
in
adc
or
xor
bound
loop
jp
jg
or
jne
mov
sbb
out
daa
out
add
add
cmpsl
jecxz
clc
xchg
jne
jo
imul
xchg
mull
in
aas
jecxz
shlb
ljmp
jns
push
or
add
sub
inc
sbb
out
and
xchg
mov
ret
pop
pop
loope
push
fiaddl
lcall
jne
push
repz
ret
cmp
mov
test
in
mov
arpl
inc
lcall
lret
enter
or
jmp
jmp
push
in
out
cmc
push
dec
icebp
sahf
arpl
repnz
movsb
cmp
iret
fisttpl
push
add
cld
add
arpl
add
sbb
cmp
jle
push
inc
rorb
in
gs
fwait
add
loope
aaa
lods
imul
fcmovne
sbb
dec
leave
daa
fstps
cmc
adc
int3
inc
insl
xchg
test
inc
cmpsl
pop
adc
cwtl
sbb
aad
add
lret
sar
lock
lea
dec
sbb
fst
int
sti
cmp
test
in
movsl
iret
lods
cmp
jb
inc
mov
pop
mov
xor
add
popf
adc
movsl
pop
push
adc
and
ljmp
fisubl
aad
jmp
cmp
gs
repz
fwait
cmc
fucomi
jmp
inc
daa
and
cmpsl
inc
jecxz
dec
js
dec
fwait
out
jnp
pop
int3
mov
fnstenv
out
adc
mov
fucomi
in
cmp
and
into
dec
in
jnp
push
xchg
sbb
mov
imul
xchg
xchg
or
xor
jo
fidivl
mov
call
jbe
sahf
jmp
push
mov
adc
loop
call
xchg
in
adc
pop
imul
outsl
sub
lock
xor
pop
rcrb
mov
fwait
mov
pop
jg
jmp
stos
inc
sbb
aas
pop
test
rcll
and
push
sarb
adc
and
pop
js
pop
jbe
faddl
mov
inc
push
mov
and
lds
cli
dec
test
mov
xor
dec
add
jnp
jnp
xor
loopne
movsl
outsb
fidivrl
or
cmc
call
pop
orb
icebp
cld
lods
adc
in
in
insl
in
into
icebp
repnz
sub
cld
sbb
test
popa
movsl
imul
xchg
stos
push
out
push
pop
outsb
xor
pop
push
mov
jbe
repz
insl
xor
neg
imulb
repz
cmp
sbb
bound
add
outsl
jnp
outsl
lods
and
decl
lahf
cmp
xchg
js
call
loopne
mov
add
out
xrelease
mov
adc
out
sbb
cmc
stos
bound
pop
out
ret
xchg
pusha
insb
sub
push
leave
cltd
xchg
inc
cmovp
jmp
mov
js
mov
out
and
test
pusha
inc
fadds
fisubrl
dec
mov
shll
jmp
ret
bound
rorb
jae
popa
shrb
push
ljmp
movsl
les
scas
fucomp
lock
in
frstor
mov
sarl
jae
mov
aad
pop
and
add
out
jle
and
dec
cmp
sbb
movsb
sarb
mov
push
js
xor
mov
jle
mov
xchg
pop
xchg
pop
push
clc
into
imul
ret
addr16
fdivrl
out
cs
inc
rolb
dec
xor
cli
pop
test
in
pop
icebp
cmpsb
cwtl
jle
cwtl
cmp
jo
cmc
cs
fcompl
out
bound
pop
mov
gs
cmp
fldenv
addr16
pushf
gs
push
loope
sbb
and
jne
in
inc
cmc
add
cmp
sahf
or
cmp
mov
dec
sti
cs
mov
mov
xchg
push
scas
lods
loope
jnp
adc
scas
cld
dec
sbb
stc
jecxz
push
add
jg
and
popa
inc
ret
add
add
inc
adc
inc
jnp
in
sub
mov
pop
bound
mov
xchg
add
insb
sbb
adc
cmp
scas
ret
dec
jecxz
out
jo
inc
es
cmc
out
xchg
add
outsb
inc
jnp,pn
stos
xchg
outsl
cmc
stc
pop
cmpsl
addr16
scas
and
jg
inc
fwait
pop
fsubl
fwait
push
jae
add
ss
outsb
fwait
jecxz
pushf
cmpsb
xchg
sub
test
ss
out
dec
mov
dec
mov
mov
xor
cmpsl
addr16
mov
test
sbb
leave
or
dec
test
fsubl
fistl
iret
mov
cmpsb
fs
inc
sub
add
mov
mov
add
es
xchg
push
and
addr16
adc
xchg
jmp
sbb
push
sub
or
movb
lods
inc
cs
in
cmp
or
mov
adcb
dec
cmp
outsb
popa
lds
stc
repnz
lcall
push
push
ja
pop
loope
jecxz
add
or
and
je
in
into
add
sti
sub
xor
lea
into
movsl
mov
repz
lods
pop
cs
das
cs
pop
mov
gs
xlat
cwtl
les
add
pop
cmc
cmp
jmp
dec
cld
mov
cli
dec
imul
mov
pop
les
mov
mov
daa
movsb
sub
push
jcxz
es
and
push
lahf
dec
sbb
xor
xchg
lock
mov
aad
popl
sub
mov
jecxz
andl
aam
stos
dec
sub
add
dec
lret
jecxz
decl
mov
movl
lods
mov
xchg
out
shlb
push
adc
xchg
push
scas
sbb
sbbb
arpl
jo
or
in
mov
push
jg
or
push
or
push
cmpsl
add
jg
cmp
arpl
fcomps
leave
xchg
in
stc
adc
xchg
xchg
push
mov
mov
ret
leave
sbb
mov
and
or
mov
neg
mov
sub
ljmp
jno
mov
pop
aad
andl
aad
repnz
mov
frstor
repnz
out
outsw
lods
idivb
cmp
push
repz
rcrl
mov
cs
ret
and
scas
dec
rcrl
dec
sbb
test
aam
pushf
cld
out
push
ss
jnp
mov
js
mov
std
cmp
pop
adc
js
je
sti
adc
cld
fidivrl
addb
call
mov
int
lds
fbstp
aad
inc
lock
jne
cmpsb
cmc
xchg
jle
push
dec
sbb
inc
jbe
cwtl
mov
mov
mov
scas
pop
cmp
and
adc
xchg
in
loop
ret
pop
adc
or
push
mov
jle
out
insb
fs
push
sub
data16
ja
fisubl
or
sarl
mov
sarb
sub
iret
push
movsb
or
lret
xchg
xchg
cwtl
lds
push
test
jp
push
inc
and
adc
test
push
inc
ljmp
faddl
stos
dec
mov
sahf
cli
pop
out
pop
in
repnz
xor
movsl
insb
xchg
xlat
mov
ja
add
cmp
shlb
imul
pop
mov
pushf
pop
pop
cmc
jge
cmp
push
jae
mov
lahf
dec
mov
dec
cmp
xor
jbe
arpl
xor
fstpl
xor
loopne
arpl
fwait
inc
or
imul
cmpsl
xor
and
insl
out
arpl
cltd
lds
xor
lret
addr16
pop
imul
dec
out
in
sbb
jge
mov
data16
jae
jg
lea
out
ja
imul
fs
imul
imul
jno
insl
jmp
imul
stc
pop
mulb
gs
inc
and
and
mov
cmp
insb
mov
mov
mov
jno
dec
scas
sub
jbe
imul
jp
xor
xor
jbe
sub
out
insb
int3
sbb
arpl
daa
push
aaa
mov
or
cli
xchg
mov
xor
mov
data16
sub
xchg
xchg
xchg
mov
pop
cld
ja
adc
xor
adc
sub
lds
int3
push
flds
and
mov
ljmp
clc
out
ss
cmp
cld
loope
push
or
jae
pop
sbb
test
test
and
mov
subb
dec
push
push
jnp
push
fidivrl
hlt
movsb
mov
test
push
insl
inc
repnz
jmp
pop
sti
in
cld
jecxz
jbe
and
subb
xchg
fs
mov
jge
imul
jne
stc
imul
insb
into
gs
xchg
jno
ja
jne
xchg
imul
add
stc
arpl
inc
hlt
dec
jecxz
inc
mov
jbe
add
add
hlt
cmp
into
sbb
sub
lret
sti
inc
in
xchg
sti
pop
mov
inc
xor
xchg
push
xchg
xlat
mov
into
cld
out
xchg
add
mov
jnp
fisttpl
mov
jb,pt
in
and
mov
push
test
fwait
es
mov
inc
scas
nop
sti
cmpl
vhaddpd
ljmp
jno
icebp
adc
push
out
sub
cmpsl
hlt
mov
mov
jb
insl
repnz
mov
pop
lcall
xchg
push
or
cmpsb
sub
imul
adc
inc
imul
pop
jge
jae
and
ret
cmp
push
mov
jmp
cmpsl
jg
and
cmpl
add
lods
push
dec
js
push
in
adc
ljmp
dec
pop
shlb
cmpsl
xor
xor
addb
sub
leave
xor
sub
cmp
adc
into
adc
lahf
call
sbb
cmpsb
rcr
stos
jecxz
sbb
test
xchg
pop
cmp
rcrl
xor
test
mov
or
fsub
outsb
hlt
push
call
sub
ret
xchg
and
sub
sub
pop
scas
inc
in
outsl
into
inc
insl
mov
leave
das
subb
test
sti
pop
insl
pop
mov
jg
jecxz
mov
mov
xchg
push
fwait
inc
inc
dec
fwait
jbe
or
xor
out
mov
lods
dec
cmp
mov
dec
or
aas
cld
movsl
in
mov
inc
aad
aaa
dec
outsl
push
hlt
ret
push
das
movsw
jg
ret
daa
jecxz
mov
fwait
repnz
lret
mov
in
adc
push
movsl
out
mov
out
xchg
sahf
mov
pop
sub
and
scas
xchg
movsl
pop
mov
jb
push
sysret
aad
sbb
mov
pop
mov
popa
inc
mov
in
jge
out
jno
sti
stos
loop
jge
sub
inc
mov
pop
inc
ljmp
mov
int
adc
lods
inc
xor
in
jne
or
pop
stos
std
mov
inc
cmpsb
xchg
xor
xchg
dec
lret
outsl
je
sti
push
leave
les
jbe
les
popf
mov
aas
push
outsl
xor
jp
popf
out
mov
pop
mov
lret
enter
jecxz
cmc
sarb
test
dec
cs
adc
mov
add
arpl
jecxz
and
cltd
xchg
push
mull
out
js
or
sbbb
xchg
shll
and
adc
std
lock
mov
aad
jmp
movsl
test
pop
movsb
jmp
xor
arpl
imul
leave
jge
cltd
fisttpl
out
pop
and
mov
lds
jl
pop
or
lock
cli
stos
sub
jnp
iret
push
add
sbb
sbb
add
sub
sbb
out
cmpsl
shrb
jae
push
in
movsb
lods
mov
lret
hlt
mov
in
adc
aas
stos
int3
or
cmpsl
jle
sbb
repnz
rolb
push
test
jp
cmp
scas
out
inc
or
rolb
inc
xchg
js
xor
pop
insb
testb
lea
adc
push
mov
cltd
ss
lods
lret
dec
jg
adc
loope
ja
call
bound
fidivrs
out
cmpl
sti
inc
call
xor
add
outsl
rclb
ljmp
jg
mov
shlb
cmpsl
pop
ljmp
inc
lret
adc
xor
outsb
cmp
popf
cmpsl
imul
jecxz
sub
mov
mov
push
add
fadds
mov
mov
in
jnp
enter
stc
adc
test
fmuls
push
aam
ljmp
jae
or
gs
adc
jb
out
cld
cltd
mov
insl
jecxz
pop
lock
ss
cwtl
push
data16
jmp
mov
out
jo
mov
jo
pop
lret
xor
push
cmp
add
fdivrs
pop
sti
jge
call
pop
fs
data16
adc
and
fwait
jo
bound
in
test
cmpb
pop
push
bound
mov
adc
arpl
xchg
daa
push
call
inc
mul
into
out
fsubs
outsb
pop
pop
mov
jae
call
mov
lahf
jnp
hlt
call
shlb
jbe
push
add
inc
jns
loope
xchg
ret
loope
jmp
js
xchg
test
das
xor
rolb
out
fistl
shl
xchg
adcb
jnp
fldt
negl
mov
pusha
decb
xor
repz
push
push
jne
sbb
xchg
ret
and
push
mov
fstpt
cwtl
lret
and
movb
add
int3
push
loopne
icebp
and
xchg
aam
jno
call
sub
dec
out
mov
daa
adc
mov
pop
push
ss
enter
minps
int3
mov
jns
jecxz
inc
aas
push
cld
xchg
mov
jne
lds
jne
inc
shll
cs
push
xchg
stc
xor
aam
adc
or
cs
cmp
arpl
clc
pop
inc
imul
pop
cmp
inc
mov
mov
lea
into
sub
xor
movsb
push
cmp
jno
stos
mov
mov
mov
cmp
dec
sbb
insb
xchg
cmp
jns
data16
insl
test
xchg
xlat
fldt
mov
jg
int
mov
pop
outsb
sbb
lds
out
sub
outsb
movsb
push
jg
movsb
mov
insl
xchg
lock
and
xchg
out
dec
outsl
sbb
cmp
lods
mov
pop
add
jg
and
and
sbb
inc
enter
test
or
xchg
shrb
cs
ss
aaa
or
int
out
pushf
icebp
mov
out
cmpsl
testb
outsb
cmc
cli
fisttpl
cmc
in
dec
outsl
xchg
out
pop
mov
out
xchg
in
xchg
movsl
call
mov
push
fistpll
lahf
in
mov
not
or
pop
outsl
in
dec
xor
aam
add
subb
push
nop
mov
dec
test
xchg
jo
mov
xor
int3
call
push
jbe
leave
neg
out
stc
adc
andl
js
popf
lahf
add
sbb
push
addl
push
mov
dec
dec
lret
iret
movsb
ds
cmc
test
push
out
stos
out
shlb
sti
jecxz
stos
lds
mov
push
cltd
test
jg
mov
sub
push
ja
pushf
imul
outsl
out
mov
fcoml
jae
jno
or
mov
imul
imul
out
daa
fisubrs
loopne
push
sub
imul
pushf
pop
or
mov
push
pop
int3
cwtl
cmpsl
cmp
pushf
cmpsl
xchg
xchg
test
xchg
sbb
xchg
mov
fstpl
jecxz
mov
inc
pop
push
stc
pop
iret
in
xor
mull
dec
adc
sub
hlt
daa
sub
push
nop
and
push
cmpsl
fcmovne
push
dec
or
enter
adc
mov
adc
cmp
leave
fs
jmp
jecxz
lods
stc
outsb
jge
sub
push
adc
out
ss
clc
xor
sub
popf
pop
mov
mov
lahf
xchg
pop
xchg
inc
movsl
xor
adc
daa
fldt
lcall
and
xchg
sbb
mov
pop
hlt
popa
jne
out
push
pop
jb
and
gs
mov
jne
pop
sbb
add
pop
mov
push
outsl
pop
leave
push
popa
xor
cltd
xchg
rcl
dec
sub
sbb
stc
fimull
mov
mov
add
and
mov
sub
in
out
pop
addr16
inc
push
sbb
inc
inc
jecxz
leave
sbb
mov
fisubrl
sbb
sarl
ja
jae
mov
inc
iret
push
mov
es
loop
push
mov
in
je
and
sbbb
cmc
push
data16
loope
adc
mov
popa
icebp
lret
add
dec
sub
lock
das
movsb
js
pop
and
mov
arpl
pop
les
adc
cltd
int3
xor
cmp
imul
aaa
jp
adc
mov
out
push
sub
out
loop
cmp
aam
andb
inc
outsb
mov
out
inc
push
loop
ja
lods
and
mov
jp
out
test
stos
push
fcompl
popa
mov
fidivs
test
push
mov
ret
cmpsl
fisttpl
test
xchg
xor
mov
cmp
cmp
shlb
fwait
push
mov
out
dec
ja
imul
sbb
push
xor
dec
fistpll
mov
mov
std
push
in
jecxz
sbb
jbe
xor
push
mov
add
xchg
enter
outsb
mov
add
mov
hlt
cmpsl
fsubrp
inc
xlat
out
mov
or
sbb
mov
movsl
out
mov
addr16
or
popa
imul
and
mov
enter
adc
in
inc
loope
loope
sub
push
mov
jae
mulb
cmpsb
in
pop
leave
mov
or
loope
cmpsl
jge
cmc
imul
data16
and
fcoms
jno
loop
sti
nop
jecxz
shrb
sahf
dec
out
sbb
lret
ja
test
mov
call
xor
mov
mov
not
movsl
sbb
mov
push
imul
in
sbbb
jle
dec
jae
sub
add
pop
out
xor
call
xor
ljmp
xchg
shlb
push
int3
mov
push
test
loope
xchg
test
data16
das
stos
dec
pop
cmc
mov
bound
jnp
insb
and
movsb
stc
vsubss
call
lret
in
sub
sub
loop
xchg
lcall
pop
addl
and
adc
scas
and
jmp
adc
iret
rcrl
lock
mov
sarb
xchg
in
sti
push
popa
out
sub
icebp
fwait
movl
cmpsb
xchg
jnp
or
jns
jp
push
outsb
sahf
dec
int
inc
lock
ljmp
lock
sub
pop
divb
outsl
stc
or
ljmp
dec
ljmp
adc
out
data16
sub
sub
mov
or
mov
movsl
dec
ret
and
adc
idivw
push
inc
out
out
xorb
mov
imul
lret
pop
inc
jmp
arpl
xor
sbb
arpl
popa
imul
dec
test
mov
ret
or
ret
jns
sahf
mov
cmpsb
loope
faddl
inc
in
insl
mov
sbb
int3
xchg
nop
mov
jo
enter
sbb
add
test
mov
adcl
push
fdivl
push
jbe
test
inc
xchg
fimull
push
pushaw
xchg
dec
mov
pop
in
mov
xor
and
fwait
cmp
sub
popf
lods
jmp
imul
in
fwait
ljmp
add
jae
inc
arpl
out
bound
push
xchg
out
sub
testb
js
inc
jbe
out
insb
dec
imul
or
not
xchg
mov
outsb
xchg
fs
cmpsl
in
bound
fwait
push
jmp
pop
mov
sbb
sbb
fwait
and
push
sub
sbb
xor
jno
icebp
jne
cmc
jmp
shr
mov
scas
or
int3
stos
out
dec
cli
and
mov
in
ljmp
add
test
sub
loopne
pop
rclb
inc
xchg
test
fcompl
sbb
insb
shlb
cld
pusha
scas
notb
push
sub
push
iret
or
push
filds
and
push
sbb
pop
mov
ss
push
xor
out
mov
add
xchg
sti
sbb
stos
jmp
mov
and
pushf
push
jle
cwtl
fildl
dec
bound
lret
mov
sub
lods
inc
outsl
mov
xlat
out
test
fwait
scas
pop
add
notb
sub
sti
push
mov
mov
xor
or
imul
movsl
add
jecxz
int
pop
sbb
hlt
add
jno
mov
insl
mov
pop
mov
sbb
lret
sub
aad
cmp
out
pusha
call
push
sar
cmpsl
xchg
bound
mov
sub
cld
cli
mov
scas
pop
jle
lods
jmp
int
mov
fwait
add
jb
lret
and
movb
mov
cmpsb
mov
mov
enter
test
pusha
enter
in
aad
mov
pop
bound
repz
lds
pop
cmp
sub
mulb
cmp
and
insb
push
push
lds
sti
jns
sti
or
loope
test
test
orl
sti
jns
mov
dec
or
cmp
mov
jbe
push
mov
stos
aas
and
sti
data16
jbe
and
pop
mov
pop
xor
inc
js
lahf
cli
add
addb
jle
mov
xchg
inc
xchg
sub
xor
shlb
jle
pop
fucomp
test
mov
mov
adc
call
test
mov
test
je
andb
js
imul
je
insb
jae
pop
test
outsb
xchg
fs
cmpsl
in
bound
xor
shlb
sub
mov
push
mov
or
xor
jae
loopne
jne
cmc
sub
mov
dec
jg
ss
jmp
jae
pop
xchg
add
das
xchg
add
popf
lea
and
cmc
mov
icebp
mov
addr16
cbtw
fwait
outsl
aas
mov
inc
xor
aad
pop
cmc
dec
pop
cmpsb
jae
pop
icebp
dec
lods
xchg
icebp
jo
sub
out
je
stc
in
std
mov
xor
fwait
fwait
mov
sbb
pop
lock
insb
jno
ja
jmp
cld
or
push
cld
push
jecxz
arpl
fstpt
in
test
cmp
pop
jmp
xor
jb
xchg
jbe
insb
out
arpl
outsb
cmpsl
fs
push
xor
cmp
dec
jnp
push
movsl
fimuls
add
pop
inc
and
mov
arpl
insl
lods
in
int3
xor
mov
scas
enter
imul
add
fs
repz
outsl
or
mov
ficomps
or
dec
call
pushf
inc
out
pop
loop
mov
mov
sahf
inc
cmpsb
dec
lods
pop
mov
icebp
bound
xchg
es
sub
mov
mov
cmp
movsl
mov
inc
sub
sbb
mov
in
push
lock
push
cld
fstps
xlat
pusha
xchg
jbe
test
leave
fcmove
dec
es
mov
mov
arpl
inc
pop
rorl
mov
push
and
clc
pop
inc
movsb
mov
ss
in
das
dec
test
and
insb
inc
push
jnp
dec
test
cli
arpl
gs
insl
out
mov
mov
rorl
jp
or
loop
mov
test
stos
fs
adc
xor
mov
out
data16
mov
subb
enter
sahf
das
jb
int
dec
jbe
jecxz
lret
jmp
push
jo
outsb
pop
test
bound
data16
add
sub
push
inc
push
cmc
out
jle
or
jp
aas
mov
or
jne
xor
outsl
out
shlb
jae
mov
inc
hlt
mov
loope
sub
sbb
sbb
push
xchg
test
jno
addb
in
add
bound
add
aam
out
sub
jmp
push
test
jmp
lods
inc
fwait
gs
xchg
jns
adc
sub
mov
jmp
pop
push
das
jp
enter
jo
cmp
ja
jge
fs
scas
addr16
repnz
push
pop
cmp
das
or
lret
outsl
jecxz
enter
ljmp
arpl
mov
inc
fldt
mov
xor
sbb
xchg
mov
out
jg
mov
mov
and
into
stos
sbb
das
fwait
mov
daa
push
pop
pop
andl
jmp
lods
dec
mov
mov
or
jmp
sbb
loop
data16
out
aam
insl
jae
jmp
in
and
sarl
jecxz
mov
ljmp
arpl
add
mov
out
xor
icebp
andl
mov
add
mov
push
pop
andb
xchg
js
jbe
insb
push
jo
outsb
out
arpl
pushw
iret
jb
mov
movsl
cmpsl
test
xor
dec
out
cmp
negb
push
inc
jge
adc
outsl
aam
sbb
xchg
jnp
mov
icebp
pop
mov
pusha
sbb
ret
add
inc
popl
pushf
cmpsb
out
jge
addb
pop
or
movsb
mov
mov
iret
dec
mov
mov
cmp
call
jmp
sbb
mov
sar
cmp
stc
add
xor
dec
sub
cmp
xchg
fwait
call
dec
ljmp
sub
mov
enter
out
xchg
push
addr16
jae
out
outsb
or
mov
mov
scas
mov
fs
cli
sbb
mov
in
mov
xchg
ret
xchg
shr
sub
sub
pop
dec
push
and
call
mov
in
mov
loope
leave
jle
sarl
push
into
dec
mov
fmuls
call
enter
movsl
ret
add
push
repz
sub
orb
sub
jae
jecxz
loop
pop
aas
pushf
fadd
add
incl
mov
push
imul
ja
clc
dec
test
cmp
inc
frstor
pop
xor
cwtl
jno
and
aas
rolb
cld
xor
pushf
ljmp
jae
in
pop
bound
xlat
mov
adc
lock
jbe
jg
divb
dec
or
bound
pop
cmp
insb
fcmovb
jnp
inc
cmp
sbb
push
sbb
mov
and
cmp
cltd
push
dec
xor
sahf
sti
adc
fdivrs
xchg
push
or
adc
ljmp
in
fisubs
add
jmp
divb
xchg
and
cs
mov
jle
jmp
iret
adc
sbb
dec
jns
xchg
outsb
jnp
sbb
in
xlat
jmp
pop
rorb
lods
outsb
fistl
popa
enter
lods
mov
mov
popa
out
push
cmp
icebp
outsl
push
fs
loop
data16
push
gs
add
insb
sbb
pop
mov
push
push
add
dec
xchg
out
movsl
loop
jp
cmc
cli
xchg
loope
add
call
jb
adc
mov
addr16
addr16
mov
or
sub
cmp
imul
scas
in
iret
mov
out
fildl
test
ja
push
mov
and
inc
aam
sub
mov
sti
inc
jbe
cli
popf
pop
jno
ret
gs
mov
lods
adc
xchg
pushl
test
inc
int3
enter
scas
stc
pop
mov
adc
jmp
enter
mov
addr16
mov
pop
pop
sbb
push
push
sbb
and
jg
bswap
inc
or
rcrl
adc
cmp
cmpsl
pop
out
rcl
mov
in
arpl
imulb
and
cmp
ret
push
pop
push
adc
adc
mov
push
add
nop
daa
pop
in
aam
repnz
dec
nop
sub
pop
push
xor
push
pop
fwait
push
sub
push
mov
fmull
nop
jno
out
pop
loop
popa
xchg
loope
add
mov
bound
and
js
add
cltd
pop
cli
imul
movl
dec
call
xlat
mov
test
and
xchg
ret
sub
inc
sbb
xchg
xor
outsl
jg
sub
lock
xchg
sbb
xchg
lods
and
push
cmp
or
pop
imul
stos
cwtl
and
in
jle
jecxz
pop
push
sbb
xor
cmpsl
data16
xchg
fwait
jno
sub
fmull
mov
or
leave
out
movsl
fs
jg
jge
stos
sub
out
stc
in
xchg
pop
out
jns
push
out
sbb
int3
aaa
jmp
out
insl
scas
iret
xchg
test
addr16
dec
outsl
out
gs
or
imull
repz
rorb
jmp
sbb
sub
mov
out
inc
inc
fcompl
xchg
out
mull
sahf
and
or
and
push
fs
ss
movsl
out
inc
mov
inc
pushw
jmp
xor
mov
ss
mov
mov
push
sub
add
mov
mov
pusha
pop
sahf
mov
and
mov
xchg
and
sar
jne
push
jbe
adc
cmpsl
arpl
lods
in
out
shlb
and
dec
sbb
int3
and
lods
mov
gs
test
fsubrl
imul
pop
imul
and
sub
jle
in
stc
jae
dec
mov
ss
loopne
sub
out
sub
add
outsb
iret
mov
and
and
imulb
mov
xchg
enter
sbb
push
add
xlat
add
out
call
push
in
fwait
sub
imul
push
shlb
dec
dec
orb
loop,pt
fisttpl
ljmp
bound
lock
imul
xor
xchg
xchg
pop
movsl
test
cmpsl
stc
xor
xor
loope
xor
hlt
lcall
movsb
xor
push
jecxz
push
mov
std
pop
xrelease
lea
into
or
and
adc
in
or
sub
stos
lcall
and
stos
hlt
mov
jno
xlat
ret
loope
or
mov
hlt
outsl
adc
std
lock
mov
push
dec
add
hlt
xor
in
gs
outsl
xorl
loop
add
dec
push
jge
out
adc
shlb
push
ja
xor
mov
sbb
in
ret
and
mov
divl
stc
imul
or
pop
jae
out
fstpt
lret
cltd
call
cli
jmp
dec
sub
xor
pop
lret
out
test
pop
pop
dec
divb
sar
cmp
or
sbb
mov
push
cli
jne
cld
shr
adc
sbbb
jne
xor
fsubl
mov
mov
scas
jne
or
push
shrl
pop
and
popa
mov
jecxz
inc
jno
popl
mov
test
out
pop
lods
lahf
adc
dec
fwait
inc
sbb
mov
and
push
sub
icebp
inc
sub
sbb
leave
arpl
jae
loope
xor
mov
mov
jmp
push
cmpb
jmp
add
jnp
pop
test
fucomi
outsb
inc
sbb
mov
inc
gs
insl
sub
outsl
call
mov
ljmp
movb
sub
xor
popa
xchg
jmp
jnp
lcall
push
adc
mov
test
adc
loope
mov
addl
cmc
add
push
inc
popa
sbb
fwait
mov
inc
mov
out
out
jno
push
data16
ret
cmp
jno
xchg
lahf
int3
cli
push
jmp
xor
or
nop
out
mov
jnp
sbb
enter
fwait
cmpsl
add
cli
lret
stc
rcrl
and
clc
ret
xchg
stc
cmpsb
stos
cld
stc
scas
sbb
scas
repnz
sub
add
xchg
sar
mov
pushf
arpl
xchg
jp
push
push
stos
xchg
pop
popa
insl
push
jae
into
pop
dec
xchg
or
lods
sbb
jo
je
jne
repz
outsl
jne
xchg
sti
out
and
fnstsw
fwait
sbb
mov
sub
js
ljmp
pop
push
mov
sbb
scas
xchg
push
mov
movsb
loop
add
cmp
or
repz
in
xchg
imul
fwait
in
movsl
mov
xchg
lret
jle
adc
jecxz
dec
fsubrl
or
fstpt
andb
jne
test
sarl
subb
into
push
test
out
and
loopne
lret
cmp
mov
call
xchg
or
jo
and
mov
test
dec
dec
fbld
mov
mov
add
jnp
inc
iret
sbb
add
arpl
mov
xor
mov
ljmp
pop
out
daa
sti
jbe
inc
pushf
daa
or
popa
mov
and
or
ret
cmp
sbb
pop
jecxz
mov
leave
jno
add
push
fsubrp
mov
popf
data16
sub
mov
loop
jo
dec
sub
jecxz
xchg
push
pop
sbb
jnp
rclb
xchg
jbe
inc
faddl
xor
loop
push
call
addl
stc
outsb
lock
add
fldl
inc
add
repnz
push
mov
or
imul
ficompl
mov
xchg
in
ret
lock
lock
sub
scas
cld
pop
push
loope
xor
cmpsl
inc
jo
add
mov
mov
lds
hlt
mov
cmp
stos
stc
into
pop
sbb
data16
pop
mov
adc
mov
out
outsl
mov
mov
push
pop
loop
mov
add
outsb
adc
push
out
fwait
add
stc
sbb
jmp
fsubr
clc
sub
shlb
jmp
inc
push
mov
mov
sub
lock
mov
test
mov
mov
or
jge
jbe
lret
test
shlb
andw
dec
mov
xchg
pusha
pusha
push
pop
mov
sti
cld
fwait
ljmp
inc
popa
fldcw
arpl
xchg
xchg
and
sub
clc
test
dec
lods
sbbl
xchg
lods
fwait
mov
stos
scas
outsb
fisubrl
jbe
sub
fsts
js
jp
cli
mov
loop
js
add
mov
pop
and
dec
sahf
sbb
pop
subb
aaa
mov
cmp
test
das
mov
pushf
into
adc
push
out
sbb
xchg
sbb
jbe
movsb
mov
gs
sub
sar
sbb
lock
dec
mov
mov
sti
mov
decl
sub
or
jecxz
pop
adc
inc
mov
xchg
inc
imulb
xor
or
fsts
inc
adc
out
fildl
stos
mov
xor
je
jne
repz
xchg
xor
lret
subl
ret
out
addr16
inc
mov
push
int
sbb
idiv
adc
bound
out
add
add
push
fsubl
mov
add
sub
enter
inc
sbb
mov
jne
xchg
stos
cmp
leave
ret
or
out
or
inc
je
icebp
shlb
repnz
cmp
cmp
pop
in
lock
pushf
call
sbb
push
mov
cmp
data16
and
adc
dec
sub
enter
cmpsb
shl
cmp
jns
sahf
sub
fisubrs
roll
clc
rcrb
enter
outsb
push
and
lret
inc
pop
loope
mov
out
enter
mov
mov
inc
push
sbb
fs
movsl
test
in
mov
dec
cltd
bound
loope
popa
xchg
or
sub
repz
push
stos
mov
and
out
jecxz
jno
adc
test
lcall
insl
pop
or
cmc
jae
ret
cli
es
imul
cld
rcrl
aaa
inc
sbb
in
test
jns
stc
jmp
lods
mov
lods
loope
inc
adc
ljmp
es
add
dec
mov
jbe
and
and
mov
cltd
lds
mov
add
mov
mov
dec
mov
sti
lock
jbe
aaa
dec
out
mov
push
mov
pusha
arpl
add
cmc
lock
pop
in
sbb
sahf
adc
clc
lock
aaa
xchg
sti
add
jbe
pop
cmpsl
out
lea
xor
inc
xorb
jae
mov
dec
and
loope
mov
adc
imul
call
push
rcr
movsl
sbb
cltd
ficoml
cmp
ja
jg
int
xor
ds
sub
mov
sbb
clc
addl
xchg
test
push
mov
imul
inc
pop
lds
scas
jmp
dec
cli
shl
adc
lock
inc
sbb
adc
imul
in
mov
mov
aaa
test
outsb
pop
push
cmp
ret
out
ret
in
les
ss
sti
jbe
mov
jmp
outsb
sahf
imul
outsb
movsl
loope
xor
nop
jecxz
pop
jg
out
das
in
sub
addr16
data16
xchg
xor
lcall
cltd
lea
arpl
fwait
mov
and
icebp
add
jge
data16
rolb
pop
data16
data16
mov
jecxz
push
sub
jno
in
cmc
ja
jae
pop
test
nop
ret
imul
in
dec
or
push
lock
outsl
xor
jecxz
xor
pop
fcomi
inc
xor
fs
shlb
dec
out
movsl
inc
aam
mov
paddsb
jae
push
jmp
dec
hlt
in
into
jno
aas
dec
int
in
xchg
jne
cld
dec
mov
add
cwtl
dec
outsl
push
in
pop
insl
mov
into
popa
dec
decl
ficomps
xchg
sti
push
popa
xchg
sbb
dec
repz
pushf
test
mov
add
dec
clc
in
sbb
and
xor
call
lcall
test
movsb
sbb
push
and
pushf
les
mov
ret
pop
adc
pop
lret
sahf
dec
push
cwtl
jbe
hlt
mov
ljmp
and
test
call
daa
mov
lcall
push
mov
push
bound
pushf
mov
jg
out
scas
in
es
dec
xchg
jecxz
push
loope
daa
mov
scas
out
lods
ds
xor
cmpb
lret
enter
outsl
hlt
fisubl
loope
add
mov
sbb
mov
out
lret
ficomps
mov
pushf
dec
mov
sbb
clc
bound
pop
sti
adcl
inc
or
popa
push
push
out
mov
movaps
mov
lret
mov
push
shr
sbb
and
jnp
pop
push
xchg
cmpsl
lret
push
mov
adc
push
pop
int3
pop
dec
pop
adc
mov
and
insl
scas
repnz
fs
sbb
andb
or
scas
aam
scas
pop
mov
jo
out
sbb
sar
das
mov
aam
sbb
xchg
clc
xchg
add
cs
pop
ret
sti
inc
mov
bound
lock
int3
test
sub
push
in
addr16
cmp
adc
fstl
mov
mov
out
cmpsb
lcall
mov
scas
and
int3
cs
bound
mov
int3
dec
jnp
sub
jae
in
push
fsubl
sarl
ss
cmpsb
sti
xchg
ret
lds
lret
shrl
add
fadd
dec
jnp
cmp
loop
pusha
shl
pop
or
or
into
push
popa
andb
lret
jmp
pop
pop
jb
sarb
cmpb
add
cmp
xchg
fistpl
jge
or
in
scas
addl
cmp
add
pop
test
dec
fsubrl
out
outsl
add
add
dec
mov
or
push
jle
aam
aam
icebp
rcl
add
enter
stc
jae
mov
fwait
or
stc
call
shll
clc
mov
mov
sbb
fists
pop
in
pop
inc
in
and
jmp
mov
jne
movsl
in
int3
test
mov
int3
std
and
outsl
dec
adc
int3
fldcw
nop
and
scas
int3
dec
jg
lods
pop
nop
ljmp
mov
movsl
lret
xchg
notb
inc
ret
xorb
inc
add
cmc
outsl
dec
or
stos
jbe
dec
les
mov
stos
clc
dec
fdivs
xlat
mov
mov
cmpsb
mov
push
adc
xchg
ja
andb
add
cmpsb
loopne
pusha
cltd
andb
nop
aaa
out
push
test
mov
aad
xchg
in
or
popf
scas
xchg
jno
mov
call
inc
jno
enter
cmp
daa
fs
sub
aam
popf
leave
mov
int
sub
dec
movb
stos
arpl
dec
test
and
cwtl
jl
lret
mov
insl
mov
iret
sti
cmp
pop
xchg
popf
pusha
scas
mov
mov
js
mov
rolb
andb
loope
mov
cmp
out
mov
push
add
xchg
cmp
ret
sarl
test
cmp
add
and
out
jnp
cmp
cld
hlt
ds
std
cmp
inc
out
pop
mov
out
insb
pop
push
xor
xor
pxor
mov
mov
pop
jo
cmp
mov
outsb
pop
mov
jo
scas
imul
pop
scas
enter
js
loop
mov
mov
loopne
inc
push
push
xchg
popa
inc
lods
out
js
or
js
pop
test
rcrb
fwait
imul
decl
js
iret
mov
andl
imul
in
loopne
and
jns
mov
inc
data16
or
push
in
idiv
stos
pop
push
sbb
pop
fldt
add
dec
call
shl
cmpsb
mov
sub
jnp
lret
mov
addr16
outsl
movsl
fwait
add
push
fldlg2
push
ficoms
out
jbe
push
js
cmc
popf
fisubl
cwtl
mov
lret
jns
stos
fwait
mov
jecxz
mov
movsb
xchg
hlt
push
in
and
mov
movsb
push
out
pop
fcmovne
sbb
add
pushf
lods
mov
shl
lods
out
pop
sbbb
xor
sbb
jl
out
mov
in
mov
mulb
mov
push
pop
xchg
add
mul
leave
mov
cmp
push
imul
cmp
adc
mov
movsl
test
clc
scas
pop
mov
xchg
cmp
cmp
jle
jbe
mov
mov
fistpll
cmp
pop
sbb
pop
ss
into
scas
scas
mov
andb
sbb
outsb
jecxz
cltd
movsl
dec
mov
je
ja
cli
or
sbb
scas
sti
stos
call
xchg
out
cwtl
and
dec
cmpsl
push
fwait
adc
dec
mov
mov
aam
loopne
mov
ljmp
inc
cmp
sub
dec
pop
inc
and
add
bound
mov
sub
call
es
cmpsb
into
test
mov
push
add
out
in
out
insb
inc
push
aad
pop
mov
sub
scas
and
aad
lcall
sub
fnstenv
add
outsb
lcall
mov
or
js
ret
pop
repz
lock
imul
loop
loop
jmp
jg
div
out
adc
mov
movb
or
aam
test
add
fstp
pop
fidivrl
repz
loope
xlat
cmpsl
add
push
loope
imulb
bound
mov
jbe
mov
adc
stos
inc
stos
ficompl
data16
inc
ret
jmp
out
push
ljmp
in
sub
push
and
gs
jnp
lret
insl
in
mov
dec
push
mov
jle
incb
sbb
inc
push
enter
xor
jle
mov
data16
fsubrp
inc
sti
mov
pop
ljmp
scas
push
fwait
inc
flds
jmp
xchg
dec
nop
flds
out
lea
mov
sbb
sub
sub
out
stos
jecxz
mov
xchg
and
pop
loope
in
loop
nop
add
out
inc
mov
inc
enter
push
mov
lcall
loop
daa
fsubrs
dec
cmpsl
mov
add
out
hlt
shlb
push
mov
nop
shl
call
add
mov
lret
sbb
cmp
outsb
insb
push
addb
mov
pop
aad
fs
jb
sub
pop
inc
push
xor
out
dec
cmp
pushw
mov
mov
sahf
pop
mov
popa
fistl
cmp
xchg
loope
daa
or
push
cld
mov
push
call
xchg
jnp
dec
fimuls
adc
loope
rcr
add
sub
or
call
outsl
clc
mov
mov
adc
outsl
cmp
int3
dec
gs
movsl
add
cmpsb
jae
sub
and
xor
stos
pop
mov
cmc
mov
adc
cltd
mov
cltd
or
fwait
loope
ljmp
sub
lea
ret
inc
out
xchg
mov
push
or
inc
mov
movsl
or
lahf
dec
cmp
sub
lcall
cltd
sbb
sahf
cwtl
mov
lods
loope
mov
mov
ds
fsubl
stos
mov
leave
dec
out
cs
xchg
xchg
stos
jae
femms
mov
mov
mov
pop
dec
stos
dec
cmp
aad
imul
pop
fistpll
or
fst
push
pushl
addl
pop
outsb
push
stc
leave
mov
idivb
pusha
xchg
in
call
mov
lret
and
lds
adc
pop
popa
push
pop
mov
jae
repz
inc
rcr
loope
pop
add
sub
and
mov
subl
aad
es
insb
sub
and
aad
adcl
punpckldq
dec
fnstcw
cmp
mov
aas
xlat
and
sub
adc
lods
inc
in
call
xchg
mov
loope
xchg
bound
mov
sub
andb
inc
jecxz
jns
cs
scas
xchg
lock
mov
popf
les
pop
ja
jno
ss
loope
sti
mov
mov
adc
push
in
inc
das
popa
push
and
inc
lods
test
xor
stc
inc
adc
cld
dec
adc
out
push
inc
cld
mov
fwait
sbb
add
dec
aam
xor
sub
into
push
mov
adc
adc
push
mov
jmp
inc
jecxz
jbe
cld
sar
out
mov
xor
mov
mov
adc
fldcw
xchg
sub
mov
aad
fsubrs
mov
dec
das
lods
int3
data16
daa
xchg
daa
inc
cmpsb
sbb
pop
cmp
dec
xchg
cmpsl
or
into
out
or
pop
pop
jno
lods
dec
xchg
xor
dec
dec
mov
adcl
inc
inc
xchg
sub
shlb
sbb
lock
jecxz
adc
test
stos
dec
lods
mov
mov
fs
ret
call
jae
shr
arpl
ret
pop
add
mov
bound
out
push
push
mov
cmp
push
mov
enter
bound
mov
outsb
jae
out
sar
into
lds
and
inc
pop
test
js
and
movsl
lods
pop
mov
fsubs
cmpsb
xor
mov
rcll
addr16
xchg
in
sub
jno
dec
push
sbb
cmp
sub
fcoms
mov
xchg
dec
jbe
shlb
mov
mov
in
imul
inc
xor
and
daa
inc
jecxz
fs
adc
cmp
and
nop
lock
xchg
test
or
jne
add
outsl
fldt
sub
dec
ljmp
stc
jle
push
lock
adc
call
push
push
mov
pop
xor
push
add
sub
sub
mov
sub
mov
jmp
mov
aas
movsb
jge
and
ja
jecxz
lahf
mov
stos
inc
int
leave
or
jae
inc
sarb
lret
add
fucom
fwait
imull
inc
loope
cmc
idivb
sbb
mov
popf
pusha
or
loope
dec
inc
out
xor
jecxz
das
add
rcr
ljmp
xchg
xchg
inc
cmpsb
stos
adc
cli
fimull
cs
dec
shlb
dec
mov
inc
push
bound
in
dec
rclb
movsl
adcl
ljmp
mov
mov
and
dec
push
mov
xchg
inc
out
leave
add
pop
xchg
mov
add
inc
ljmp
in
push
sub
fs
lods
cmp
pop
mov
out
cmp
sub
data16
arpl
add
notl
out
je
stc
mov
and
loopne
mov
mov
popa
jle
sbb
ss
shr
fs
fwait
sarb
cltd
sub
dec
cli
loop
and
push
loopne
out
dec
and
xor
pop
jnp
ljmp
das
cs
pop
aam
ljmp
mov
nop
fbstp
rclb
add
or
in
in
cltd
xchg
sbb
iret
inc
cmpsb
and
dec
aas
stc
sub
lock
or
mov
or
mov
pop
mov
clc
or
ret
sti
mov
and
jle
pop
cmp
or
cmpsb
outsl
ret
pusha
jno
mov
mov
loop
lret
sub
into
aam
cmpsl
dec
jnp
lock
inc
inc
mov
inc
sub
decl
xor
cmp
xchg
xor
mov
push
rorb
cld
inc
cmpsl
adc
pop
push
dec
ja
outsl
aam
je
mov
ja
lcall
pop
jmp
pop
mov
or
xchg
jle
fldt
test
fnstcw
add
pusha
fdivrs
jns
pop
jecxz
dec
test
mov
inc
jbe
repz
pop
mov
push
pop
xchg
adc
xor
sti
sub
or
xchg
xchg
push
dec
jnp
inc
out
rcll
insl
insb
mov
test
jecxz
push
xchg
faddl
sbb
jnp
cmp
js
inc
test
sarb
dec
cmpsb
call
xor
dec
jnp
or
or
lods
sbb
and
lret
push
adc
xchg
test
sub
jle
dec
movsl
sti
pop
fistps
stos
fwait
pop
push
push
sub
dec
adc
outsl
jne
cmp
dec
fwait
jne
cmpsb
in
mov
fwait
dec
or
call
pop
fwait
cmp
xor
push
push
movl
repz
lahf
sbb
push
and
xchg
and
push
mov
stos
icebp
mov
xchg
lods
and
decl
call
iret
js
jmp
mov
mov
es
bound
imul
sbb
in
mov
notl
mov
pop
leave
push
popa
mov
out
fdivs
scas
sbb
addr16
fdivp
and
test
divl
notb
mov
inc
mov
and
pop
gs
or
adc
sub
bound
add
mov
out
sub
xchg
sti
insb
inc
push
sub
dec
cltd
nop
out
jmp
ljmp
data16
jmp
subl
pop
daa
mov
cltd
jnp
or
leave
mov
lret
lea
jmp
fmull
pop
push
rol
lcall
push
xor
inc
and
mov
jb
mov
mov
or
adc
sbbb
fdivr
scas
rorb
lds
stc
pusha
imulb
push
mov
push
dec
jb
data16
imul
dec
cli
jbe
fidivs
xchg
ja
and
insl
cmp
icebp
aam
jno
or
jge
pop
adc
imul
mov
mov
sbbb
gs
jo
mov
sbb
bound
pushf
mov
sbb
scas
add
in
fstps
mov
add
jbe
mov
cmp
outsb
fsubrs
jge
xor
icebp
repz
out
das
mov
cmp
stos
in
dec
fs
fwait
inc
scas
jnp
sti
mov
inc
mov
arpl
or
mov
fucomp
loope
sti
out
out
cli
subb
xlat
idivl
add
lret
outsl
into
icebp
push
mov
std
testl
pop
hlt
ret
test
jnp
pop
sub
icebp
pop
cmp
out
in
loop
fs
repz
lds
in
fucomi
lods
mov
ljmp
or
ret
inc
jbe
xlat
push
ret
popf
out
cmc
push
repz
repz
pop
sub
adc
call
not
imul
lds
xchg
inc
mov
sbb
cwtl
out
repz
cmp
mov
and
jp
jno
into
lods
sbb
dec
jae
pop
cs
push
mov
mov
or
cmp
cmpsb
push
scas
inc
push
imul
xchg
lahf
es
add
in
xor
fs
add
pop
pop
pusha
repz
rorb
mov
test
adc
add
call
cmpsl
mov
punpckhdq
lcall
mov
stos
dec
testl
aad
rcrl
les
les
out
daa
movsl
sbb
in
mov
sbb
inc
jno
mov
mov
popa
sbb
call
cs
imul
call
cmp
loope
cmp
add
outsl
cmpsb
xor
push
insl
cmpsb
testb
cmp
sbb
xor
mov
sub
cli
jnp
xchg
cmpsb
dec
xchg
sbb
jmp
aad
in
add
call
jg
mov
and
fsubp
sub
cmp
jp
stc
pusha
pop
sbb
or
xchg
flds
scas
adc
adc
inc
int3
stc
sub
push
dec
aad
push
xor
jle
in
icebp
shrb
mov
outsl
repz
ds
lock
push
sub
mov
movsl
shrl
rorb
adc
adc
jno
push
lret
in
mov
jg
adc
outsb
dec
mov
imul
mov
inc
mov
sbb
popa
outsb
into
push
push
test
stos
outsb
cld
fldcw
loope
jmp
test
add
mov
sub
out
push
repz
mov
ffree
push
jnp
imulb
insb
mov
cwtl
dec
xchg
fistpl
arpl
mov
in
xchg
xchg
add
sub
push
sbb
lock
adc
xor
arpl
mov
sub
lahf
popa
fcoms
imul
mov
dec
jecxz
mov
imul
sub
inc
jp
fdivr
out
arpl
in
fs
xor
add
push
sbb
xchg
out
xor
test
push
jns
inc
jae
jmp
add
push
add
cmpsb
popf
xchg
push
jbe
daa
insl
addr16
cmp
insl
mulb
aam
outsl
aad
inc
mov
sbb
iret
mov
movsl
hlt
add
cmpsl
cld
loopne
scas
shlb
mov
xchg
addr16
dec
push
or
ret
sub
mov
lea
adc
fwait
jo
in
sti
push
pop
sbb
add
ss
loop
jecxz
loop
test
push
push
xorl
mov
xor
inc
sbb
scas
cmp
add
adc
stc
mov
dec
call
movsl
out
test
ja
push
and
hlt
in
rol
mov
push
xchg
mov
lds
push
jle
adc
loope
push
in
push
inc
in
outsb
inc
sub
push
outsb
repz
push
pushw
outsl
mov
sbb
fisubl
xor
mov
pusha
clts
movsl
stc
push
js
xchg
cs
inc
jp
jbe
insb
lea
leave
push
cmpl
xchg
sbb
push
loope
xchg
scas
ss
xor
or
fsubl
cmc
jbe
stc
out
or
stc
sub
mul
negb
mov
lock
jp
cmp
lahf
jp
cmp
add
icebp
cmpsl
or
test
imul
fwait
int
jg
data16
cmp
push
movsb
dec
and
and
pop
jb
std
cmpsl
jne
mov
pusha
lret
pop
xor
push
out
mov
out
dec
in
loop
sbbb
lcall
push
jge
jae
mov
jg
ds
cmpsl
fsubr
outsb
insb
cmp
xchg
inc
sub
shr
leave
loope
cli
inc
sbb
add
inc
add
sbb
push
jnp
loope
cmpsb
mov
and
xchg
gs
aaa
js
or
lds
sub
lcall
jb
test
mov
pop
scas
mov
and
add
mov
mov
adc
adcl
imul
inc
lcall
in
mov
add
mov
mov
lahf
mov
mov
call
nop
arpl
pop
mov
sub
xor
push
fwait
dec
in
mov
mov
inc
hlt
subl
jnp
pop
adc
cmp
push
movsl
jecxz
jmp
push
jbe
clc
stos
cs
mov
fwait
push
dec
jno
sahf
mov
jmp
inc
out
ljmp
pop
xchg
pop
push
out
ljmp
cli
pop
mov
je
lcall
fsubl
gs
sbbl
jae
mov
je
movsb
sti
jg
push
popf
mov
call
or
je
jmp
mov
ret
lods
dec
loopne
imul
jp
cmp
jmp
sub
push
or
sbb
je
sub
je,pt
inc
sti
inc
mov
and
div
mov
sbb
or
loopne
in
xchg
out
shll
cld
pop
fnstsw
imul
frstor
outsl
lcall
loopne
xchg
inc
or
lock
lods
sbb
sub
dec
push
mov
call
arpl
mov
sbb
out
les
adc
cmp
jae
jns
sbb
testl
mov
dec
popa
test
push
push
mov
inc
add
lahf
jmp
sub
adc
fs
clc
aaa
rolb
mov
aas
pop
cmc
in
push
sbb
in
xchg
cmp
cmp
jnp
mov
out
pop
xor
stos
cwtl
std
loopne
mov
imul
xchg
jge
cltd
pop
add
sub
cs
jmp
out
icebp
addb
stos
dec
and
sub
ret
mov
movsl
add
fwait
fs
sti
xchg
push
or
mov
mov
bound
mov
pushf
cs
xchg
lret
push
int
les
cmpl
scas
adc
fst
call
scas
xor
mov
repz
call
pop
xchg
ljmp
cmp
iret
cmp
dec
xlat
arpl
jae
xor
push
mov
ja
pop
jmp
mov
cwtl
mov
adcb
push
jnp
adc
or
bound
sbb
bound
mov
cmp
sahf
cmp
icebp
mov
aad
popa
lods
cmc
in
dec
pop
or
dec
cs
popa
int3
ss
div
adc
push
xor
mov
mov
cmc
outsl
dec
pusha
mov
in
mov
das
inc
rcll
sub
or
sub
pop
inc
je
idivl
cwtl
daa
lds
fwait
push
mov
add
mov
or
push
rcl
dec
neg
add
and
movsl
xchg
stos
clc
shll
out
scas
fs
xchg
xor
xchg
sub
jmp
sti
lock
stos
sub
cmpsb
cs
rorb
fistpll
dec
mov
mov
inc
or
out
sarb
cld
jle
and
lds
lds
data16
test
scas
push
xor
adc
cmpsb
fimull
mov
mov
xchg
xchg
test
ds
push
xor
nop
adc
insl
push
mov
xlat
mov
shl
mov
mov
mov
pusha
subl
jmp
loope
mov
xor
addr16
xchg
adcl
repz
dec
mov
scas
lock
lcall
mov
test
jmp
aam
and
sbb
and
adc
in
in
mov
repz
out
add
xor
repnz
and
test
sarl
pop
cmp
adc
jg
cmp
push
sbb
jmp
mov
dec
xor
sbb
mov
addr16
mov
sarb
pop
push
leave
rorb
sub
xchg
adc
sub
out
enter
das
aad
mov
ss
mov
inc
shr
gs
stc
mov
push
or
stos
lcall
jae
push
movsl
and
aam
das
inc
mov
add
test
sub
cmc
fcomps
cmp
lahf
lahf
xchg
pop
jns
rclb
inc
lock
mov
out
ficompl
icebp
bound
lcall
imul
mov
sbb
inc
xor
pop
pop
in
inc
ss
pop
mov
gs
lea
das
test
sub
enter
loope,pn
or
dec
lret
and
stos
out
sti
pop
in
dec
pop
cwtl
outsl
cli
inc
fistl
sarb
and
jbe
pop
push
loope
pop
dec
stc
mov
sbb
cmp
daa
loope
cmpsl
and
int3
lods
xor
cmp
in
lds
cld
insl
inc
xor
stos
jne
and
inc
movsb
pop
mov
pushf
push
loope
add
cmpsb
ret
subb
xor
xchg
imul
jno
test
xchg
js
out
jnp
lods
sti
push
pop
rclb
pop
mov
adc
inc
mov
mov
cmp
add
dec
fistpll
scas
into
jns
loope
imul
pop
sbb
std
fsubrp
dec
je
push
mov
dec
jle
cmp
mov
push
inc
pop
or
cltd
xor
cmp
xchg
stos
add
movb
jle
repz
xchg
stos
and
divb
or
in
add
push
and
insl
out
rcll
mov
leave
stc
jmp
cmpb
stc
enter
fnstenv
ss
and
adc
aad
add
rcrb
or
and
inc
out
sbb
push
jnp
push
enter
popa
and
pusha
sti
sbb
test
pop
dec
lret
je
call
and
repz
test
cmp
popa
gs
int
adc
xor
inc
loop
inc
lar
loop
pop
jecxz
andb
push
rol
adc
into
shrb
push
and
dec
push
xchg
xchg
xchg
out
bound
or
arpl
mov
loop
pop
into
jns
add
sti
lahf
cmp
and
add
dec
push
sbb
pop
ja
movsl
jo
test
and
les
pop
aad
inc
mov
mov
enter
roll
mov
xor
or
sub
movsb
dec
imull
pop
imul
fldt
gs
dec
out
adc
mov
jecxz
iret
subl
push
sbb
int3
inc
mov
push
mov
test
inc
testl
repnz
adc
loop
inc
out
mov
cmpsl
data16
sbb
enter
inc
pop
notl
arpl
adc
out
sub
sti
dec
pop
sub
xchg
xor
pusha
inc
add
fiadds
repz
xor
or
xchg
and
pop
pop
or
es
sbb
mov
outsb
jnp
xchg
mov
divl
in
xchg
pop
movsl
addr16
repz
mov
cmp
fcmovnu
jecxz
dec
pop
das
pop
cmpl
sbb
into
cmp
cmpsl
fistl
movsl
cld
push
mulb
adc
in
dec
out
rclb
clc
ret
adc
xlat
mov
jl
mov
mov
sub
in
jnp
lea
or
jmp
gs
or
xchg
clc
jp
lock
sub
movsb
dec
imul
mov
sub
mov
mov
data16
xchg
jb
lods
in
in
dec
movsb
cmpsb
fwait
pop
xlat
push
lods
sub
cmp
jecxz
pop
add
andl
xchg
or
mov
lods
movsb
nop
pop
enter
addr16
mov
xor
movsb
and
cmp
js
xchg
jmp
scas
sbb
jnp
dec
stc
ljmp
xchg
lock
ja
jg
push
jbe
idiv
jmp
test
inc
test
imul
je
fildl
mov
pop
ret
out
stc
dec
xchg
or
xlat
ljmp
xchg
xchg
mov
outsl
lret
call
push
ljmp
mov
int
jmp
movsb
nop
out
cmpsb
shll
xchg
jmp
lahf
js
subb
jle
aaa
and
sbb
push
orl
lcall
push
enter
jns
pop
lret
in
jmp
sub
mov
sbb
movsb
ja
adc
fldl
cmpsl
inc
push
lock
jmp
jge
movsb
mov
and
out
mov
jno
xor
pop
jmp
mov
mov
sahf
test
or
inc
popf
inc
das
das
xchg
xchg
shlb
jmp
rorl
mov
out
repnz
jg
push
int3
push
jg
imul
mov
enter
out
jmp
out
movsb
xchg
popa
or
xor
pop
cmpsl
ss
outsb
mov
jmp
in
movsl
dec
call
xchg
jmp
jae
jnp
imul
scas
movsb
repz
mov
in
sti
mov
dec
fidivrs
mov
je
nop
sub
and
pop
in
jmp
inc
movsb
daa
cmp
mov
movsb
repz
pop
jmp
sub
sub
mov
insb
push
out
stc
lods
mov
jb
cltd
and
iret
das
jmp
or
icebp
push
jbe
idivb
sarl
cmpsl
cmpsl
out
push
cs
and
pop
mov
movsb
mov
movsb
and
jae
jecxz
xchg
and
xchg
movsb
cmc
mov
cmc
lret
movsb
mov
and
adc
add
jmp
imul
movsb
test
mov
mov
js
push
das
ss
xchg
and
jb
addr16
cmp
ret
xchg
imul
repz
mov
int
xor
insb
push
mov
into
test
movsb
xor
add
and
test
popf
call
ret
mov
ret
cwtl
mov
mov
call
not
call
out
mov
adc
adc
shr
shll
jbe
imul
and
out
mov
addr16
andb
jecxz
call
sbb
popa
ss
inc
loop
or
js
jae
rol
mov
xchg
loop
icebp
sarl
loop
outsl
js
and
xchg
mov
loope
call
call
xchg
xorb
mov
pop
cmpsb
sahf
and
fwait
mov
int3
mov
jg
ljmp
push
daa
call
xchg
insb
xchg
mov
ds
mov
sub
jecxz
jo
pusha
idivb
callw
dec
push
adc
arpl
in
lock
sbb
test
fs
loop
and
test
fs
push
push
test
push
xchg
popa
mov
push
jecxz
stc
and
fldt
mov
pop
lret
xchg
movsl
cltd
repnz
xor
cli
adc
test
loope
sti
and
sbb
div
fwait
ss
fwait
inc
jns
push
faddl
push
jecxz
faddl
call
mov
fistl
iret
xlat
fsubrl
mov
or
pop
and
pop
cmpb
lret
mov
out
xor
xchg
or
or
push
pop
mov
out
inc
add
in
rcrb
stos
in
popf
mov
mov
sti
test
enter
call
jnp
sub
mov
gs
jbe
and
daa
pop
test
je
sti
xchg
jnp
and
arpl
and
mov
sub
ret
sub
bound
sbb
add
gs
lods
and
enter
lods
hlt
push
enter
rcrb
adc
push
or
mov
mov
repz
test
cmp
sbb
das
add
and
dec
sub
leave
loop
ja
sub
lds
pop
push
mov
xlat
fcom
nop
xchg
lock
pusha
xchg
push
dec
lods
and
mov
add
sbb
jmp
fisttpl
movsl
sbb
jae
sti
cmp
sub
ljmp
cmp
mov
test
xor
je
lret
jecxz
sbb
sub
int
icebp
scas
data16
pop
pop
xor
daa
andb
pop
and
iret
and
lea
push
cmp
xchg
add
sbb
movsl
push
xchg
punpcklwd
jecxz
sub
pop
mov
inc
test
jae
jmp
outsl
pushf
xor
dec
call
sbb
aaa
or
mov
inc
cli
push
jg
out
enter
sub
sbb
scas
xor
mov
insb
ja
xchg
test
fdivr
sub
push
daa
aad
xchg
or
xchg
out
or
out
mov
inc
sub
pop
mov
in
jmp
push
addl
fwait
in
fs
jmp
arpl
pop
ja
stos
movsb
pop
ja
outsl
mov
outsb
rcll
cli
xchg
or
sub
cmp
sar
adc
and
sbb
cmpsb
xchg
jbe
pop
pop
notl
pop
test
inc
mov
push
push
arpl
jnp
cmp
push
lahf
sub
push
data16
ficompl
xor
arpl
adc
mov
cmpb
xlat
addr16
jle
pop
test
cmpsb
test
mov
out
leave
mov
rep
aad
and
cmpsb
push
mov
add
cs
jb
dec
sub
int
push
and
and
cmp
mov
insl
mov
out
cmp
dec
imul
in
test
aaa
data16
mov
outsl
push
adc
out
cmp
movsl
inc
mov
fbstp
xchg
push
in
or
shll
push
jg
mov
cmp
call
xor
fistps
push
out
xchg
dec
ret
or
es
cmpl
aad
nop
hlt
in
lods
lods
or
stc
cmpsl
push
jo
inc
adc
add
std
mov
gs
sti
mov
clc
hlt
push
scas
pop
xchg
pop
push
popf
jbe
jg
pop
jp
pop
add
popa
dec
outsb
jbe
mov
sbb
ja
gs
dec
sbb
in
cmp
jge
pop
sub
lods
mov
pop
jg
lock
jmp
jno
cmp
jnp
popa
cmp
xchg
push
add
sub
push
fstpt
test
push
dec
lea
jae
push
mov
or
movsl
ljmp
inc
dec
inc
cmpsb
sahf
fstpt
call
dec
idivb
cmpsl
xchg
mov
movsb
pusha
test
inc
xchg
xchg
in
xchg
add
ljmp
xchg
lret
jle
and
in
aam
leave
call
sub
inc
jbe
jge
out
stc
out
lea
popa
cmp
sbb
xor
add
xor
push
lret
ljmp
cmpl
sub
push
pop
pop
xchg
fs
adc
or
iret
fisttpl
dec
ljmp
mov
data16
sub
jb
enter
addr16
cs
clc
and
push
das
jl
pop
fucomi
mov
pop
push
enter
mov
data16
push
scas
xor
lret
mov
clc
data16
loop
out
jmp
in
lret
shll
ljmp
daa
jnp
jmp
es
stc
sti
or
inc
outsb
mov
rcr
bound
dec
mov
out
lahf
icebp
mov
pop
mov
xor
or
jecxz
xor
sbb
mov
or
call
ret
sbb
or
push
mov
add
and
data16
jmp
sbb
stc
or
cmp
cmp
aaa
mov
jmp
cmc
lahf
sbb
aad
xchg
xchg
cmp
outsl
mov
sub
lret
jmp
and
or
push
and
in
clc
lods
mov
in
pop
mov
cs
cmp
push
mov
les
das
scas
add
hlt
cmp
push
dec
movsl
repz
sub
mov
jbe
mov
jbe
cmpsl
notl
testl
xchg
movsl
sbb
and
arpl
and
mov
insl
js
gs
testl
push
or
movsb
mov
lock
daa
imul
hlt
adc
das
and
mov
repnz
xchg
add
cs
imul
sub
shrb
jp
mov
xor
mov
cld
cld
dec
ror
mov
fimuls
push
xor
aas
mov
xchg
stos
xchg
in
and
mov
enter
mov
jecxz
pop
jge
lods
andl
mov
sti
adc
cli
inc
in
and
ljmp
mov
xor
or
pop
dec
jne
test
pop
jecxz
and
mov
hlt
scas
mov
orl
mov
mov
and
inc
push
mov
adc
fistpl
xlat
fdiv
mov
mov
cmp
imul
mov
mov
out
roll
sub
push
pop
sub
lods
lock
mov
std
ret
push
push
outsl
push
mov
out
dec
mov
xchg
mov
in
lock
testb
fstpt
cmpsb
popa
mov
push
pop
jne
xchg
hlt
inc
add
cwtl
jmp
and
out
jecxz
test
mov
testl
ljmp
ss
out
xor
scas
repz
addr16
mov
xor
sub
lret
pop
cs
xchg
dec
sub
sti
pop
pop
loopne
push
test
jns
push
jmp
test
test
jo
xor
imul
push
aas
bound
mov
push
ret
add
or
jb
sahf
adc
push
inc
sub
xchg
mov
inc
out
and
adc
sub
add
mov
jae
ljmp
out
mov
push
stos
fmuls
jecxz
movsl
sub
andb
or
inc
adc
outsb
in
push
popa
xchg
fs
cmp
pop
int
inc
dec
mov
mov
jo
repnz
lods
test
stos
jae
pop
in
lods
mov
cmp
mov
xchg
mov
lret
xor
sub
pop
ljmp
and
add
les
ret
mov
rol
cmp
loope
xchg
mov
push
cmp
pop
pop
pop
or
popa
scas
sub
call
or
lea
push
jns
stc
add
adc
fistl
jg
mov
push
fldcw
mov
xchg
xchg
adc
push
mov
pusha
xchg
lret
mov
out
daa
pop
popf
mov
jb
outsl
movsb
xor
out
mov
mov
sub
ljmp
std
lds
lret
add
jns
or
gs
cmp
mov
in
or
call
cmp
xchg
dec
pop
cmp
inc
jg
push
mov
cmpsb
movsl
mov
aam
ljmp
and
mov
mull
mov
add
xchg
sti
or
out
popa
inc
mov
daa
test
jecxz
push
adc
xchg
fcmovne
inc
xchg
push
in
ja
cmc
ja
and
xchg
popf
sbb
sub
adc
ret
mov
cmpsl
add
ljmp
xorl
jecxz
xor
sbb
sub
cmpsb
movsl
and
frstor
test
cs
into
mov
mov
fwait
fwait
out
xor
sub
dec
pop
test
mov
je
push
push
mov
pusha
lds
shlb
movsl
test
out
scas
call
xchg
xchg
lcall
add
daa
pop
aad
scas
pusha
cmp
movsb
mov
adc
imul
popf
mov
push
mov
xchg
sub
std
pop
mov
jno
mov
jno
sti
sub
lods
xchg
sub
outsb
cmpsb
mov
cs
xchg
push
fcmovbe
scas
in
xchg
xchg
sti
sub
xor
sbb
jecxz
jno
mov
push
mov
xchg
movb
jbe
add
mov
loop
aam
mov
jecxz
adc
pop
pop
xchg
inc
lock
stos
mov
pop
ja
add
mov
cld
cmp
mov
xchg
fisubl
rorb
dec
jb
out
pop
cld
iret
out
or
fwait
add
add
movsl
arpl
addr16
orb
jne
xchg
lcall
pushf
jmp
test
in
add
dec
loope
inc
fstpt
ret
loope
nop
pusha
jecxz
loope
xchg
push
mov
lods
hlt
outsb
outsb
pusha
enter
stc
loopne
mov
jge
repz
push
lods
push
pop
jle
repz
rcll
and
push
sub
loope
or
xlat
repnz
jns
filds
jmp
xor
xor
cmpsl
repz
mov
fistpl
hlt
int
call
jmp
pop
and
cs
cmp
xor
arpl
imul
ja
ret
lret
loopne
in
test
or
and
xchg
repnz
mov
call
dec
and
jecxz
lcall
lea
pop
stc
xlat
int
and
mov
lret
mov
push
loopne
gs
mov
xchg
loope
mov
mov
test
push
sub
inc
lea
and
sbb
pop
aad
adc
push
stc
jle
xchg
sti
lcall
cmp
mov
and
jle
pop
and
pop
stos
jnp
xor
or
xchg
in
imul
mov
mov
lds
push
adc
lds
push
sbb
iret
sahf
push
cli
xor
icebp
scas
cmpsl
out
push
pop
in
pusha
js
dec
sub
incb
or
and
std
mov
int
test
aad
daa
push
mov
jmp
mov
notb
test
notb
outsb
sbb
jno
add
mov
mov
enter
sub
addr16
adc
test
cmpsb
mov
imul
cmpsb
les
mov
cld
pop
xor
loope
pause
cwtl
mov
ja
adc
push
sub
xchg
cwtl
ja
cmp
stc
xrelease
sbb
hlt
xor
pusha
mov
cmpsl
sbb
mov
sbb
push
xor
add
mov
sub
enter
and
leave
cltd
loop
arpl
fwait
adc
movsb
pop
imul
push
lcall
dec
xchg
xor
cmp
ljmp
psraw
into
in
addb
xor
test
test
mov
fwait
out
mov
sbb
mov
push
in
xor
mov
lret
out
imul
cmp
add
adc
fsubs
xchg
and
test
test
cmp
lcall
ljmp
pop
add
pushf
jp
addb
dec
sub
outsb
sbb
or
jmp
or
in
push
mov
sbb
call
int3
mov
aas
test
out
mov
cmpsb
mov
rorl
mov
das
enter
pushf
loopne
mov
cmp
repz
jnp
inc
pop
fnstcw
pop
arpl
loopne
pop
cld
cmc
loope
idivb
insl
jo
es
outsl
stc
test
jecxz
mulb
xchg
jo
incl
and
bound
cwtl
or
xor
and
and
mov
testl
push
mov
push
pop
jbe
jmp
cmc
cmpb
pop
and
adc
jge
pop
cmp
jnp
outsb
pop
sti
frstor
and
mov
push
outsl
loopew
call
mov
lds
xchg
jecxz
ljmp
arpl
xchg
insl
fidivl
cmc
push
int
movsl
jne
divb
adc
out
out
dec
stos
repnz
mov
lret
cmp
xchg
data16
pop
dec
push
in
in
cmpsl
decb
xchg
repnz
mov
clc
or
jecxz
dec
imul
popa
test
inc
cmpsl
fs
sub
loop
and
out
scas
mov
data16
sbb
pushf
or
inc
hlt
imul
negb
jecxz
dec
imul
jne
out
test
xchg
loop
int
call
pop
dec
inc
cld
gs
inc
js
sbb
sub
mov
jecxz
dec
imul
ret
inc
cmpsl
fs
out
fwait
insl
test
or
jecxz
dec
imul
inc
loope
dec
js
xor
sbb
pusha
hlt
add
mov
pop
test
mov
jecxz
mov
pop
in
ss
movsl
ljmp
arpl
data16
imul
test
mov
jecxz
mov
cld
and
sbb
hlt
add
iret
imul
test
mov
jecxz
mov
movsl
ljmp
arpl
subw
test
mov
jecxz
mov
outsl
data16
sbb
hlt
add
sub
push
clc
hlt
jecxz
mov
movsl
ljmp
arpl
data16
imul
test
mov
jecxz
mov
outsl
data16
sbb
pusha
hlt
add
mov
push
clc
hlt
jecxz
mov
in
ss
movsl
ljmp
arpl
inc
imul
test
mov
jecxz
mov
pop
cld
and
data16
sbb
jbe
outsl
imul
test
mov
jecxz
mov
movsl
ljmp
arpl
and
pop
test
xor
test
mov
sub
mov
adc
sbb
andl
xorl
jnp
pop
stos
cltd
pop
pop
lahf
push
pop
xchg
push
push
xchg
push
pop
mov
sahf
mov
push
mov
cwtl
mov
dec
mov
mov
dec
mov
test
inc
mov
xchg
sbb
andl
and
test
pop
lds
lds
popf
lds
xchg
out
outsb
xchg
push
xchg
xchg
xchg
pop
xchg
xchg
xchg
push
xchg
mov
dec
lock
cld
cmp
mov
xchg
sbb
lahf
repnz
sbb
pop
call
sbb
inc
add
dec
hlt
dec
repnz
pushf
pop
lcall
es
and
inc
je
push
call
pop
aas
pop
cltd
test
pop
inc
cmp
pop
push
pop
sub
cmp
mov
in
inc
mov
sbb
je
or
sub
inc
or
sbb
fwait
pop
pop
mov
xchg
xchg
pop
add
out
mov
dec
mov
or
inc
movsl
cld
jbe
pop
push
push
pop
test
clc
inc
cmp
sub
inc
movsl
inc
sbbl
movsl
mov
adc
add
push
out
hlt
cmpsb
or
xchg
or
fwait
push
mov
mov
nop
jbe
cli
movsl
leave
push
movsl
fsubrl
mov
dec
add
rcrb
jg
arpl
xchg
push
test
jle
or
movsl
mov
mov
inc
bound
add
add
and
adc
popf
and
outsl
xchg
das
mov
pop
pop
mov
dec
jne
popa
sub
pop
daa
pop
pop
lret
xchg
jno
jo
into
pop
push
lret
repnz
dec
repz
or
push
stc
loop
xor
fisttpl
inc
lock
pop
jge
fcmovnbe
jno
arpl
inc
xor
scas
jo
clc
mov
push
mov
jecxz
loopne
adc
loopne
cmpsb
insb
out
out
imulb
xchg
add
repnz
sbb
add
loop
call
jg
mov
call
pushf
inc
jae
add
call
pushf
inc
jae
adc
call
pushf
inc
jae
add
call
pushf
inc
jae
fsubr
repz
cmpsl
pushf
inc
jae
add
call
pushf
inc
jae
add
cltd
inc
jae
add
call
pushf
inc
jae
add
pushf
inc
arpl
add
call
pushf
inc
jae
add
call
add
inc
test
call
pushf
inc
jae
add
call
pushf
inc
jae
pop
jmp
pushf
inc
jae
add
call
pushf
and
movsl
out
es
repz
das
data16
rorl
mov
xchg
shlb
arpl
push
dec
imul
mov
cmc
xchg
iret
test
inc
cmpsl
in
jmp
fucom
or
in
mov
jecxz
test
mov
jecxz
jns
mov
fldenv
incl
xor
scas
shl
repz
inc
mov
in
test
mov
jecxz
mov
movsl
in
fisttpl
into
loope
fldl
imul
stc
cld
sbb
test
mov
jbe
lea
pop
test
mov
jecxz
mov
jmp
repz
data16
imul
test
mov
jecxz
mov
into
stc
decb
ljmp
std
mov
repz
test
mov
jecxz
mov
movsl
jmp
repz
outsw
imul
test
mov
jecxz
mov
xchg
incb
stc
mov
and
js
addr16
test
or
jecxz
dec
imul
add
jmp
imul
loope
ret
test
inc
cmpsl
fs
jmp
or
cmpsl
stc
pushf
sub
push
and
mov
jecxz
hlt
push
repz
jmp
cltd
movsl
jmp
repz
subw
test
mov
jecxz
mov
cmp
jecxz
jns
push
pop
incl
addr16
repz
cmc
pop
push
jecxz
dec
imul
and
in
outsb
jmp
jecxz
xchg
loope
push
imul
test
mov
flds
pop
incl
addr16
inc
repz
cmc
pop
arpl
jmp
imul
dec
cmp
mov
mov
inc
xorl
mov
imul
cltd
stos
pop
pop
lahf
pusha
push
xchg
push
push
xchg
pop
push
mov
mov
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
mov
mov
lcall
jmp
lock
insl
inc
insl
jnp
pop
out
cltd
out
pop
out
lahf
out
pusha
out
popf
out
pop
out
xchg
out
push
out
xchg
out
push
out
xchg
out
pop
out
xchg
out
push
out
mov
dec
out
mov
dec
out
out
push
out
out
dec
out
sub
inc
out
cs
testl
cmc
mov
fsubp
or
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
push
jecxz
popf
mov
es
insb
out
ljmp
cld
es
fldt
jo
js
comiss
mov
shlb
pop
leave
sbb
ljmp
cltd
fisubl
inc
or
fcmovnb
push
in
pop
mov
fistpll
or
jecxz
inc
out
cmpsl
add
loope
xchg
mov
lods
mov
pop
inc
test
ja
pop
int
cs
add
lods
mov
clc
push
jp
push
xchg
cmpsb
mov
ret
pop
vmread
inc
lret
mov
repnz
adc
pop
shl
and
push
insl
bound
mov
and
sub
push
xlat
lret
sub
daa
das
in
mov
xchg
xchg
sti
add
ret
js
scas
mov
push
sbb
push
adc
subb
fsubl
cmpsb
mov
lods
out
or
pop
mov
sub
add
and
daa
inc
add
cmpsl
mov
test
insl
cmpsl
pop
outsb
das
mov
pop
out
mov
stos
cmp
in
outsl
and
push
data16
push
jle
adc
xor
shlb
mov
out
imul
add
lds
roll
mull
jne
imul
mov
or
dec
jmp
movsl
xchg
divb
hlt
je
out
jmp
data16
clc
inc
jo
incl
and
popa
pop
and
idivb
in
cld
adc
mov
or
push
shl
fiaddl
in
xor
in
push
cmp
xchg
insl
int
mov
cmpsl
pushf
inc
jae
add
call
pushf
inc
jae
jecxz
divl
cmpsl
pushf
inc
jae
add
call
pushf
inc
jae
add
lcall
xchg
in
call
pushf
inc
jae
add
jmp
mov
mov
call
pushf
inc
jae
add
call
pushf
movsl
pushf
and
cmpsl
pushf
inc
jae
add
call
pushf
inc
jae
jecxz
divl
cmpsl
pushf
inc
jae
add
call
pushf
inc
jae
add
lcall
xchg
in
call
pop
in
jns
mull
mov
shr
cmp
ljmp
push
and
jmp
in
stc
inc
ret
lret
cmpsb
xchg
sub
inc
movsl
andb
or
movb
rclb
mov
pop
mov
cmp
fdivr
mov
std
mov
mov
out
lea
insl
adc
lock
icebp
cs
idivl
es
test
inc
loop
ja
lds
and
test
lods
pop
pop
outsb
fnstcw
cs
clc
aad
add
out
inc
add
jge
enter
pop
xor
mov
testb
aaa
xchg
mov
in
mov
mov
popa
scas
lds
lods
or
pop
popa
enter
inc
sub
cmpsb
call
cmpsl
or
orb
bound
movsb
lods
imul
fwait
jae
out
lods
and
ret
lret
sbb
enter
lock
sbb
leave
pop
adc
push
xor
into
xchg
mov
jle
cmpsl
push
jp
fnstcw
les
xchg
inc
popl
icebp
cmpsl
sbb
imul
or
imul
sbb
pop
mov
popa
push
insb
repz
data16
sbb
push
loop
pop
jne
movsl
popa
mov
std
fldl
ljmp
imul
lock
rcrb
push
addb
sbb
insl
movsl
add
call
pop
sarb
or
cmp
mov
mov
xchg
je
es
out
mov
in
pop
repz
stos
scas
cld
push
mov
dec
sub
rolb
addr16
mov
stc
sbb
push
mov
push
xchg
add
sgdtl
scas
out
xor
test
std
neg
sahf
inc
enter
inc
mov
andb
sbb
dec
sbb
sub
out
xchg
fisttps
lcall
lea
jle
addr16
push
or
pop
jo
popf
push
and
scas
push
sbbb
jb
adc
nop
loop
pushf
daa
test
mov
jle
xchg
out
out
out
sbb
add
push
cmpsb
sarb
xchg
add
push
cmc
fidivrl
fcomps
in
cmpsl
or
pushl
loopne
xor
test
xchg
cld
decb
cmp
call
mov
inc
cmp
scas
enter
lods
data16
ss
xchg
cmpsb
mov
push
cmpsb
add
in
imul
dec
pushf
mov
shlb
movsl
test
outsl
jbe
lds
shlb
or
mov
enter
push
arpl
stc
sahf
movsl
loop
movsb
add
mov
fldt
int
mov
fists
test
into
mov
sub
out
iret
stos
popa
divl
cmc
lea
pop
jbe
movsl
sbb
bound
imul
lea
adc
mov
addr16
push
xchg
mov
sub
push
fdivl
adc
out
dec
gs
inc
sbb
loop
outsl
mov
cmp
jne
dec
enter
mov
sti
sbb
movsb
lahf
call
mov
mov
inc
fldcw
test
inc
xor
inc
clc
enter
out
std
dec
fucom
test
cmpsb
inc
sbb
lcall
in
out
lcall
leave
ficomps
stc
jg
pop
loopne
mov
xchg
mov
out
adc
jl
notl
cmp
push
sti
es
xor
loope
stos
sub
loop
push
ljmp
mov
push
mov
jae
xlat
andb
dec
push
dec
mov
es
call
sti
add
mov
or
cmp
pop
mov
outsb
mov
cmp
mov
repz
mov
mov
sbb
repnz
jnp
fstpt
push
sub
sub
inc
jnp
dec
mov
push
imul
data16
sbb
imul
inc
push
insb
mov
fadd
movsl
fwait
clc
call
sub
jno
xchg
fwait
insl
nop
fwait
or
ljmp
repnz
and
mov
data16
xor
mov
test
mulb
dec
mov
mov
pop
mov
cs
mov
dec
cmp
xchg
fldt
cmp
outsb
mov
or
jno
mov
loope
sub
cmpsl
jns
mov
sbb
sub
jbe
ss
inc
add
mov
lods
inc
in
daa
mov
pop
aaa
imul
sti
inc
jbe
mov
fwait
push
insb
jbe
xchg
repz
cmpsl
pop
and
stos
sub
in
sbb
push
sti
sub
add
pop
sub
cmc
test
inc
dec
sub
adc
sub
imul
mov
pop
xchg
inc
mov
mov
daa
outsb
loope
sub
sbb
clc
in
sbb
mov
sbb
mov
xchg
aad
sub
fists
push
sbb
pop
xchg
jbe
jno
or
cmp
test
xchg
enter
in
mov
and
nop
mov
scas
pop
repz
cmp
jmp
mov
movsl
sub
sti
dec
xchg
push
je
std
push
ja
jmp
jo
iret
jbe
jno
fildll
outsb
cmpsl
push
dec
mov
xor
int3
adc
sbb
mov
ret
pop
dec
xchg
mov
cmpsl
xchg
and
lds
jmp
jp
cltd
out
add
pop
xchg
cmp
lahf
insl
xchg
daa
pop
clc
fldcw
inc
inc
clc
repz
js
pop
xchg
xchg
mov
test
popf
and
cmpsb
iret
jae
lock
push
push
subl
xchg
outsb
lods
enter
pmuludq
xchg
test
add
dec
xchg
sub
add
xor
add
dec
mov
xor
aad
jecxz
xchg
mov
test
pop
push
pushf
xor
and
mov
jecxz
and
mov
sub
jl
aad
mov
in
mov
iret
jae
lock
lods
sarl
cmp
jp
out
or
out
push
pop
imul
xchg
or
dec
scas
xchg
or
add
out
ret
xchg
fdivrs
jmp
and
mov
push
pushf
push
inc
iret
xchg
es
or
xchg
pop
and
xchg
pop
lret
or
mov
les
scas
out
insl
push
in
jg
inc
cmp
pop
dec
jo
into
inc
es
sub
dec
pop
xchg
je
scas
xor
stc
xor
or
loop
popf
roll
es
add
mov
push
mov
in
add
sbb
fstpt
push
rcrl
mov
inc
jbe
add
and
popa
xor
subb
pop
push
sub
loopne
out
bound
add
add
dec
fcomi
icebp
adc
jns
inc
jp
shr
iret
sti
fldt
and
iret
mov
mov
and
adc
cmp
jmp
and
xor
in
imul
push
int
movsl
fcompl
mov
inc
sbb
das
repz
enter
xchg
in
jnp
bnd
xor
in
or
lret
mov
mov
addr16
popa
in
inc
push
bound
jmp
mov
adc
pop
xrelease
inc
mov
cmp
xchg
mov
ss
scas
cld
xchg
inc
das
andl
adc
stos
pop
push
push
outsl
out
xchg
xchg
xchg
mov
push
push
fnstcw
mov
fucomip
mov
xchg
das
cmp
dec
mov
sbb
lock
fldenv
out
mov
in
inc
jmp
in
popf
push
sub
lret
ror
mov
jg
mov
gs
xor
mov
jnp
into
cmpsl
out
mov
stos
idiv
lret
aas
rolb
sti
pop
push
jle
lret
adc
out
cmpb
jnp
sub
stos
push
and
dec
fnsave
push
and
lret
inc
dec
ljmp
push
ja
orb
adc
insl
ss
xchg
sahf
xlat
in
mov
push
cmpsb
mov
push
mov
xchg
sbb
sbb
les
sub
push
popa
enter
decb
lds
into
adc
les
test
addr16
ds
push
loop
push
call
jmp
repz
lret
cmp
sbb
sti
ret
xlat
data16
push
lods
cltd
pop
adc
in
pop
jmp
jg
or
mov
sbb
in
cli
jae
lcall
lret
test
jns
fmuls
mov
or
fiadds
lea
stos
movb
shll
add
jbe
loop
add
jg
scas
daa
pop
fmul
leave
cmp
sbb
dec
pop
mov
je
popa
cmp
push
lret
push
rolb
push
push
mov
into
aas
or
xor
lds
and
push
lret
mov
add
xor
jle
lret
shlb
and
std
mov
push
addr16
call
loope
in
cmpsl
adc
xor
mov
fisubl
ljmp
repz
cmp
jp
cltd
jns
sahf
popa
cmp
and
daa
js
push
ret
roll
movsb
das
enter
into
fistpl
mov
sahf
scas
cmp
mov
push
dec
xchg
pop
or
push
and
aam
roll
out
mov
xchg
xchg
mov
cmpsb
out
sbb
cmp
jg
imul
cli
nop
sbb
imul
sti
and
cmp
ret
mov
push
mov
loop
cmp
movsl
fwait
negb
xlat
call
ret
fcmovnb
mov
jecxz
mov
fnstsw
nop
fwait
mov
sahf
ret
jbe
jbe
fdivs
and
add
movsw
fwait
mov
sub
xchg
fiaddl
mov
es
or
sub
jno
adc
jne
out
inc
lock
dec
movsl
sbb
push
jmp
mov
mov
arpl
add
and
mov
inc
mov
subb
call
loope
call
pop
sub
lock
scas
mov
add
call
dec
insb
mov
or
mull
pop
sbb
jecxz
sbb
inc
testl
push
in
test
sbb
arpl
out
les
jmp
sbbl
mov
mov
sti
and
dec
lahf
mov
pop
cmpsl
push
call
ljmp
movsl
scas
jmp
sbb
movsl
andl
dec
and
inc
movsl
adc
sbb
push
inc
inc
jp
outsb
push
adc
call
pop
je
lock
push
mov
mov
popa
movsl
test
and
mov
sub
imul
fs
and
int
into
cmp
lea
xchg
gs
mov
sbb
idivl
lods
sbb
jecxz
push
mov
mov
popf
data16
and
sub
nop
mov
mov
daa
mov
in
sarb
mov
loopne
push
mov
std
sub
ret
call
aam
sub
jecxz
add
dec
cmpsl
sub
push
cwtl
out
in
xor
out
dec
jbe
jne
stc
sti
inc
fiaddl
jle
ret
loopne
out
sub
cmpsb
xor
mov
outsl
repz
mov
xchg
insb
sub
push
add
jge,pn
cmpsb
pop
xor
mov
cltd
inc
mov
into
cmp
call
xchg
imul
xor
xchg
stos
lock
insb
add
sub
xchg
push
xor
js
xchg
push
jno
data16
push
int3
or
repz
xchg
loop
lods
dec
push
dec
rorb
or
push
cmpsb
mov
in
test
pushf
dec
push
inc
pop
dec
mov
xchg
ja
ret
repnz
out
movsb
push
ljmp
add
push
loope
cmp
xchg
jg
sub
xor
sahf
imul
arpl
leave
jmp
adc
movsb
push
sub
nop
inc
sub
adc
sub
es
adcl
xor
int3
lds
jnp
and
mov
mov
or
xor
in
jle
push
jo
mov
adc
sbb
outsl
mov
push
sub
in
lret
clc
test
sbb
cwtl
repz
fdivs
add
es
enter
dec
push
xchg
test
clc
inc
call
cmp
adc
and
mov
jmp
divl
in
imul
xchg
out
hlt
insl
and
pop
jnp
pop
popf
jo
popa
int
or
and
jecxz
in
xchg
outsb
sub
fstpl
out
cmp
jno
pop
outsl
hlt
inc
test
pop
dec
call
sar
ljmp
pop
sbb
inc
mov
push
inc
mov
adc
and
cwtl
data16
jmpw
out
lcall
jg
mov
dec
cvtpi2ps
mov
adc
pop
mov
movsb
sub
mov
testb
es
movsb
xor
push
stos
and
mov
cwtl
dec
jnp
je
negb
lods
cmp
cmpsb
inc
jae
jo
and
repnz
ss
cmp
add
sub
and
inc
mov
mov
sub
sub
cmpsb
int
push
inc
data16
dec
repz
push
inc
jg
jae
out
in
cwtl
gs
lret
jle
call
xchg
insb
test
in
das
pop
iret
enter
adc
loop
add
cs
mov
add
fwait
sub
popf
mull
jnp
jmp
pop
jae
jecxz
sub
jbe
imul
jnp
xchg
dec
adc
fwait
cwtl
xchg
cmpsl
stos
dec
cmp
jb
lea
jp
fdivrs
sahf
in
clc
ljmpw
imull
lea
push
mov
hlt
sub
movsb
jae
stos
or
mov
ret
das
into
jecxz
add
sub
jge
cli
pop
fdivrl
sub
and
pop
add
cmpsl
ja
dec
imul
and
and
or
jmp
fs
push
sub
mov
rcrl
stc
fisttpl
cmpsl
mov
jecxz
scas
add
sti
repz
addr16
sti
jmp
push
sti
gs
jmp
test
add
ret
daa
pop
fldl
mov
loop
sti
insb
mov
pop
sbb
jbe
push
pop
pop
sbb
fs
jecxz
test
jp
sbb
arpl
xchg
mov
clc
cmp
int3
jne
leave
stc
push
adc
xchg
xchg
and
pop
cwtl
or
int
addr16
jae
inc
lock
jnp
push
test
xor
sub
xchg
pop
xor
test
xchg
inc
push
fprem
sub
add
rcrb
xchg
mov
or
mov
jmp
mov
mov
out
jmp
pop
cmpsb
es
mov
clc
add
push
ret
mov
sbb
movsb
inc
ja
sahf
push
in
mov
movb
cmp
push
adc
cs
mov
sub
cmp
bound
ds
stc
cmp
push
push
sub
xor
fwait
orb
inc
mov
test
mov
add
frstor
inc
dec
repz
shr
jns
pop
or
xchg
dec
sti
xlat
xorb
lcall
xchg
adc
inc
in
add
inc
cs
cmp
jg
inc
std
enter
lret
nop
cs
mov
sbb
movsb
mov
jecxz
sub
call
adc
dec
test
lret
mov
mov
test
jnp
out
push
jge
or
jge
cmpsb
shlb
int
addr16
mov
jae
imul
out
sbb
in
lods
out
and
xor
testl
pop
or
push
int3
cld
pop
inc
jns
fcmovnbe
call
lock
adc
out
mov
xor
and
pop
imul
call
sbb
lods
mov
imulb
push
pop
leave
subl
into
ret
pop
ret
gs
cmpsb
add
adc
adc
cli
jnp
test
out
mov
mov
es
sub
mov
and
or
lret
fnstsw
shlb
pushf
lea
test
mov
cmp
int
mov
sub
add
jecxz
xchg
or
sbb
adc
loope
mov
pop
out
xor
adc
pop
push
and
mov
out
jmp
pop
xor
lea
movsb
fwait
pop
mov
dec
xlat
pop
jmp
jbe
inc
push
loop
dec
and
mov
mov
push
dec
enter
fucomi
sbb
xor
mov
call
out
pop
and
jle
mov
dec
jno
push
xchg
scas
sbb
xchg
enter
mov
scas
sbbb
sbb
xor
mov
and
sub
xchg
sahf
test
jl
xlat
dec
cmpsb
add
scas
push
data16
jbe
mov
gs
scas
in
cmp
int
dec
xchg
add
nop
int
add
outsb
call
adc
sub
cmp
mov
sub
cld
divl
shl
push
outsb
cmc
fwait
fs
push
cmpsl
bound
sub
gs
sbb
xor
lcall
js
jmp
das
insb
imul
xchg
das
cmp
sar
pop
repz
and
jns
fsubrs
add
push
mov
add
loop
loope
xchg
cmpsl
dec
and
sbb
sub
sub
lds
cmp
xor
and
inc
cmpsl
lret
ror
mov
adcl
cmp
cmp
scas
lret
lock
push
clc
sbb
jae
pop
lret
lcall
mov
in
loop
dec
xchg
adc
jns
xchg
cmp
or
sbb
std
jae
xchg
cmpl
out
xchg
addr16
add
or
pop
or
pop
cs
pusha
inc
add
xchg
mov
and
push
test
stos
cmpsb
sub
adc
out
in
gs
fsubs
pop
jne
push
lock
push
mov
out
iret
inc
add
gs
sub
cwtl
test
imul
pushf
or
mov
out
jge
addr16
div
mov
int3
jae
or
daa
movb
jnp
inc
loop
mov
cmp
clc
std
pop
fmul
mov
stc
sti
sbb
popf
out
jmp
icebp
xchg
into
test
pop
call
fsubl
add
lock
jnp
push
or
in
ss
sub
add
jmp
movsl
rol
enter
mov
jp
ja
mov
repz
testb
lea
aad
loope
cmp
xlat
push
fwait
and
sbb
sbb
cmp
ret
cmp
jecxz
add
push
xchg
pusha
mov
pusha
jbe
push
sbb
call
jmp
enter
hlt
inc
xor
inc
sub
mov
and
aad
add
mov
jae
sub
adc
xor
inc
stos
mov
pop
jae
adc
pop
dec
adc
sub
dec
cmp
and
xor
dec
mov
out
xor
xor
jnp
cmp
sbb
into
sar
gs
notl
loope
cmp
push
xor
pop
in
or
jmp
subl
imul
stc
leave
int
lock
loopne
out
bound
add
and
add
push
lods
xchg
or
out
dec
pop
jecxz
ret
jmp
daa
lds
cmp
movsb
sbb
sbb
push
fs
lods
and
int3
jge
push
test
in
out
lcall
in
divb
pop
mov
mov
std
dec
lods
adc
lods
adc
leave
sbb
mov
or
jg
arpl
push
cmp
xchg
or
fwait
out
inc
push
in
dec
repz
xchg
out
add
stc
idiv
inc
ss
test
rorl
mov
sti
cwtl
jo
xor
jnp,pn
push
jns
inc
xchg
mov
cmc
stc
mov
movsb
fs
stos
adc
mov
xchg
mov
push
jg
jmp
xchg
movsl
pop
cmp
test
push
js
js
pop
pop
push
sbb
cmp
mov
mov
dec
jno
cmc
das
mull
js
lock
push
int
cmc
jae
data16
clc
mov
dec
imul
jo
dec
mov
push
ljmp
xchg
lock
int
mov
push
jmp
mov
push
stc
mov
subb
jp
cmp
lods
lds
push
cmpsb
jmp
data16
jge
jno
std
dec
js
int3
call
ja
cvtps2pi
in
cmc
loop
jo
call
mov
mov
in
cmc
mov
in
jle
lret
std
xchg
cmc
push
add
out
cmp
out
cld
sbb
jge
das
sbb
cmc
ret
in
cmc
into
aam
test
add
lcall
inc
nop
mov
mov
cmpsl
mov
repz
push
adc
loopne
and
and
mov
mov
xchg
mov
ss
jbe
adcb
mov
xchg
mov
jmp
data16
stc
jmp
xor
aad
sub
fwait
xchg
dec
rcll
sbb
sub
scas
rcl
mov
sub
xorl
adc
mov
xor
lret
cmpsb
jecxz
push
andb
lock
pop
js
clc
cmp
shlb
call
aam
sbb
jge
sti
push
sub
adc
and
push
cmp
pusha
mov
sbb
jecxz
into
push
add
sub
inc
pop
sbb
cmpsb
adc
sbb
cmp
adc
add
pop
mov
outsb
push
xchg
call
loope
imul
and
xor
cmp
sbb
push
xor
idivl
cli
mov
aam
enter
sub
xchg
adc
les
iret
mov
mov
les
pop
add
jae
lea
pop
jns
pop
or
cld
fbstp
pop
pop
jmp
sbb
ret
jnp
or
adc
mov
pop
fsubs
fs
lahf
and
popa
jae
add
imull
out
push
call
mov
xchg
aad
ds
inc
jge
cmp
gs
bound
push
jbe
xchg
and
push
jge
cld
mov
jbe
jbe
fnstsw
pop
mov
push
pop
cmc
cmp
mov
repz
push
data16
cwtl
in
pop
and
mov
and
inc
cmp
pusha
push
xchg
adc
lds
pop
mov
and
cmp
outsb
mov
cmc
pop
loop
icebp
movsb
inc
add
lds
je
icebp
jnp
data16
ja
cmpsb
inc
stos
mov
jmp
cmp
fs
fnsave
add
and
mov
arpl
imul
js
clc
push
sbb
insl
out
fnop
mov
arpl
in
xchg
out
lret
xchg
push
jge
cmp
fildl
scas
cmc
in
je
cld
xchg
jno
aam
cmc
ljmp
in
jle
lock
push
jp
sub
inc
in
xchg
loop
push
call
pop
movsb
mov
mov
inc
add
mov
mov
inc
dec
push
xchg
dec
add
mov
or
dec
xchg
popl
xchg
das
dec
pop
mov
dec
push
xchg
jmp
dec
pop
mov
or
dec
xchg
dec
add
mov
mov
inc
ljmp
pop
dec
data16
add
add
add
inc
cmpsl
pushf
and
clc
and
fs
test
addr16
cmpsl
lock
repz
out
pop
xchg
inc
cmpsl
jae
jecxz
dec
imul
js
mov
leave
sub
jecxz
out
mov
pop
arpl
pop
clc
xchg
mov
pop
test
add
jno
pushf
mov
pop
in
mov
push
pop
movsl
imul
pushw
cld
pushf
out
mov
pop
out
sbb
gs
mov
lock
test
adc
nop
sar
ljmp
jno
sub
dec
nop
scas
jae
xor
lret
in
pusha
xchg
ret
mov
hlt
jmp
xchg
mov
jae
xor
jbe
hlt
ud2
jmp
jae
xor
mov
jbe
hlt
jmp
xchg
sub
jae
xor
jbe
hlt
dec
or
dec
inc
xchg
mov
jae
xor
jbe
hlt
or
ljmp
shufps
mov
jbe
xchg
pop
out
add
addr16
hlt
hlt
jecxz
aam
callw
scas
pop
pop
cmp
add
pushf
leave
jae
xor
jbe
hlt
or
addl
jae
xor
jbe
hlt
leave
or
jmp
mov
mov
jbe
xchg
icebp
push
test
mov
push
mov
in
outsl
lds
imul
mov
jnp
adc
ds
out
xchg
xchg
in
loop
sub
mov
dec
jns
fisubrs
jo
sub
lret
xchg
jbe
or
pop
fucomi
aam
test
pop
popf
sbb
out
jg
inc
loop
jb
sub
lods
test
push
push
mov
cmpsb
aad
xor
mov
pop
push
sub
int
popa
enter
jl
lea
xchg
mov
push
dec
fisttpl
mov
out
dec
pushf
fistps
push
cmpsb
sbb
xchg
flds
stc
stc
fidivs
push
mov
add
lcall
insl
dec
mov
int
sub
mov
bound
xchg
dec
jl
jo
mov
inc
and
xchg
movsb
sbb
je
bound
pushf
inc
push
outsb
push
lret
daa
je
addb
push
test
daa
lret
aas
roll
mov
jne
addr16
stc
inc
gs
or
pusha
repz
lret
and
lods
lock
push
pop
pop
in
popa
gs
mov
xchg
lods
xadd
and
and
mov
and
mov
call
mov
jbe
outsw
mov
iret
mov
mov
cmp
insl
out
jmp
daa
mov
xchg
mov
test
push
push
imul
mov
lcall
cmpsb
mov
or
hlt
jge
add
mov
cmc
adc
out
fdivrp
or
inc
lea
jnp
sbb
dec
cwtl
pop
sub
pushf
mov
cmp
dec
cs
ljmp
repnz
dec
jae
orps
fs
jmp
psubsb
cmp
mov
outsb
cmpsb
andb
ret
test
lds
shl
push
mov
push
mov
sti
lods
or
push
adc
scas
and
cmpsl
jg
pop
pop
scas
cmp
lods
hlt
sbb
cmc
xor
aam
dec
lods
std
movsl
pushf
cltd
call
sub
and
mov
test
lret
mov
inc
lods
arpl
inc
xor
xor
cli
in
and
mov
dec
jae
dec
pop
into
cmpsb
cltd
xchg
fbstp
xchg
inc
cltd
mov
das
inc
orl
shlb
icebp
dec
inc
test
xchg
and
mov
sub
inc
in
shll
jbe
in
jge
mov
pop
fidivrl
or
mov
ficoms
pop
movsl
inc
mov
push
pushf
test
cmpsb
lods
mov
push
iret
test
call
rorb
xchg
call
jl
cmpsb
test
push
xchg
les
sub
mov
xor
dec
data16
jmp
scas
push
pop
xchg
shll
lods
cs
addr16
bound
add
lahf
mov
imul
mov
pushf
movsb
push
mov
mov
out
or
lock
ljmp
xchg
ljmp
lret
mov
mov
dec
test
rorl
outsb
sbb
sahf
push
hlt
push
loope
push
sbb
es
push
xor
shl
jecxz
loop
js
call
sub
test
pop
fwait
mov
fcmovnbe
sbb
ljmp
mov
mov
mulb
out
ret
lods
dec
dec
adc
test
fsubrs
int
bound
insl
and
repnz
dec
ljmp
adc
pop
mov
pmulhuw
sbb
or
fldt
cwtl
ljmp
sbb
clc
mov
xchg
lea
adc
adcb
add
xchg
mov
hlt
repz
cs
cmpsb
stc
fwait
cmp
movsl
out
jmp
inc
jnp
cmp
imul
loop
adc
lock
mov
pmulhw
and
cmp
fucomip
insb
in
insl
test
sub
jae
xchg
push
outsb
es
out
rcrb
call
cvtdq2ps
jge
addr16
xchg
nop
popa
push
sub
ljmp
or
or
sub
call
scas
stos
xchg
push
jmp
in
or
test
pop
lcall
push
mov
jo
adc
push
std
jmp
in
cmpsl
pop
pop
lcall
lcall
jg
push
mov
data16
cli
add
or
lods
loopne
xchg
lock
pop
stos
dec
inc
cmp
xchg
and
jnp
mov
daa
lcall
mov
xchg
jmp
inc
movsb
ja
or
outsl
scas
lea
cwtl
pop
popa
xchg
lds
loop
dec
test
loop
in
ret
fwait
cld
mov
out
es
and
inc
std
movsb
lds
inc
sub
repnz
cmpl
out
cmp
test
push
mov
jmp
dec
fidivl
addl
xlat
pushf
gs
jp
push
dec
jns
push
or
xchg
lahf
dec
test
push
cmc
mov
stos
es
ret
pushaw
sub
repz
inc
aam
adc
fsubl
push
testl
call
pop
and
inc
enter
jge
cmpsl
test
pop
cmpsb
ss
data16
pop
xorl
pop
lock
xchg
cld
inc
lret
and
sbb
ret
mov
jae
bound
dec
cmpsb
call
lret
enter
imul
mov
pop
outsl
dec
inc
dec
jecxz
insb
adc
les
dec
loope
subl
mov
xchg
add
inc
fsubl
data16
mov
addr16
xor
adc
mov
in
test
dec
filds
icebp
in
jecxz
adc
and
cmc
in
xchg
jmp
xchg
out
jmp
out
pop
adc
imul
insl
shr
and
or
ss
shll
out
mov
icebp
mov
and
fistpl
ljmp
inc
xchg
mov
jae
xor
jmp
mov
arpl
hlt
dec
xor
mov
out
jecxz
adc
rcr
orb
movsb
lahf
out
dec
push
pushf
inc
dec
xrelease
mov
inc
imull
cmc
sub
jmp
adcb
mov
cmp
aam
mov
mov
aam
out
cmpsb
out
push
mov
pop
or
cmpsb
cs
pop
loop
or
jecxz
repz
mov
jns
cmp
jmp
out
pop
mov
jmp
out
pop
cs
cmpsb
out
push
dec
mov
cmpsb
out
push
ret
jp
out
cs
aam
xor
iret
stc
pop
ret
inc
call
pop
out
cmpsb
cs
inc
sub
ret
call
das
push
xor
gs
xor
jle
pop
cmp
addr16
and
xor
lahf
sbb
xor
xchg
fnstsw
incb
cmc
test
adc
jmp
jecxz
cwtl
repz
pop
popa
punpckhdq
dec
pop
in
and
pop
mov
sub
cli
icebp
lahf
fists
mov
mov
jns
fisttpll
push
pop
xor
add
mov
push
arpl
pop
fs
jmp
std
sbb
stc
cmp
sbb
movl
cmpsl
mov
inc
in
fdivl
mov
call
jnp
dec
les
fidivs
xchg
cmp
mulb
ficoms
sbb
fld
or
and
cmpsl
fwait
inc
mov
or
mov
fcomi
push
mov
mov
jge
loope
outsb
sbb
cmpsb
into
out
arpl
fcmovnb
push
outsl
dec
and
lods
fwait
cld
cmpsl
nop
je
and
inc
lret
push
outsl
xchg
add
push
cltd
test
mov
sar
lahf
jmp
jb
inc
cmp
fwait
jnp
or
mov
jae
xor
mov
xor
jecxz
insb
and
hlt
jecxz
aaa
in
in
cli
xor
insl
rol
cmpsb
js
add
pop
call
movsb
sbb
call
mov
test
sub
sbb
je
imul
xlat
rorl
jae
add
fimuls
xchg
call
mov
adc
or
xchg
insb
push
mov
je
or
adc
imul
pop
shlb
pop
in
push
push
int3
movsl
cmp
fwait
enter
pop
push
out
out
cmp
in
fwait
repnz
adc
inc
cmpsb
fstpt
or
leave
fs
in
test
aas
outsl
xor
iret
out
std
jmp
and
inc
xor
lods
pop
lods
xor
stos
stos
mov
loope
icebp
push
stos
pop
cmc
mov
push
outsb
outsl
push
jle
sahf
loope
dec
inc
sbb
call
ud1
inc
jbe
push
leave
or
jmp
fmuls
sbbb
nop
psrlq
mov
bnd
js
imul
push
jo
imul
out
pop
and
push
mov
std
push
push
loope
jmp
push
push
jl
jmp
mov
xchg
mov
stc
dec
mov
cmp
out
filds
imul
fucom
mov
and
subl
push
bound
xor
mov
sub
clc
sbb
cmp
jp
dec
push
lods
jne
movsl
jb
fstl
and
push
xor
dec
inc
dec
insl
xchg
inc
ret
mov
sub
bound
cmc
call
iret
dec
jge
inc
gs
pop
fldt
scas
out
jnp
push
mov
or
cwtl
test
xchg
repz
loope
sbb
fs
jecxz
js
jbe
insb
out
arpl
outsb
cmpsl
fs
push
ja
or
andl
mov
push
pop
insb
in
lock
pop
out
loopne
mov
xchg
mov
fdivl
or
push
inc
imul
mov
rorl
icebp
mov
call
add
xchg
shll
jmp
jnp
insb
gs
lcall
notb
call
jae
hlt
mov
adc
xchg
inc
xor
icebp
cmpsl
adc
push
or
adc
mov
fwait
xor
lds
pop
out
inc
xchg
inc
data16
mov
jae
mov
mov
fwait
sarl
and
repz
and
adcb
jg
ljmp
mov
bound
inc
jae
push
rolb
mov
add
jae
sub
or
mov
loop
outsl
mov
dec
loop
fidivrs
inc
orb
inc
mov
call
loop
gs
or
jno
inc
imul
testl
clc
movsl
cwtl
flds
mov
mov
ret
aam
hlt
push
call
xchg
test
pop
fmull
enter
mov
cld
fyl2xp1
and
ja
inc
test
je
js
mov
dec
push
test
hlt
imul
ja
pop
das
call
cmpsb
cmpsl
pop
mov
callw
imull
testb
xor
jae
mov
test
and
movsb
mov
mov
mov
ds
pop
movsb
xchg
enter
cli
jmp
test
and
in
sbbb
arpl
ljmp
mov
js
mov
data16
dec
je
test
scas
int3
sbb
mov
test
or
sti
movb
imul
pop
arpl
push
jmp
mov
in
lds
repnz
mov
pusha
lea
push
lods
adc
in
jmp
xchg
adcl
add
call
mov
sbb
dec
jmp
add
movsb
xor
scas
mov
shlb
sbb
xchg
add
in
insb
add
pusha
movsl
and
sub
imul
inc
rcrl
push
mov
aam
inc
jbe
mov
sbb
jle
in
cmp
lcall
or
or
mov
cmpsl
jne
call
adc
pop
shlb
je
movsl
or
stos
ret
std
jnp
adc
loope
jge
mov
xchg
inc
add
cmc
pop
xchg
mov
add
mov
inc
jo
pop
enter
and
lods
add
push
dec
xchg
sti
jg
mov
aad
cs
xchg
popa
movsl
and
dec
mov
pop
test
out
adc
pop
add
or
xchg
mov
popa
add
adc
cli
inc
push
cwtl
scas
xor
outsl
test
jmp
ss
jae,pt
add
test
xor
mov
and
std
xor
popa
pushl
mov
iret
mov
cmpsb
lahf
inc
outsl
inc
xchg
inc
jmp
mov
jae
mov
inc
in
jno
and
inc
icebp
ret
xchg
pushfw
jae
jecxz
movsl
xor
out
mov
inc
and
stos
ret
cmpb
mov
imul
sbb
stc
mov
jmp
jbe
jecxz
ret
lahf
jnp
stos
lea
scas
movsl
ret
ss
popa
scas
aam
outsl
sub
mov
xchg
mov
int
into
ss
xchg
pop
rol
add
addr16
decl
pop
mov
call
data16
imul
dec
int3
jecxz
mov
jecxz
call
jnp
inc
out
lcall
jg
xchg
xor
dec
mov
and
and
stos
test
js
icebp
mov
test
or
setno
fidivl
xchg
comiss
jnp
in
test
push
data16
pushf
pop
adc
jecxz
ljmp
pop
mov
inc
outsl
movsb
jecxz
cmpsl
or
call
pop
js
and
insl
ja
adc
mov
jo
dec
dec
stc
mov
out
test
inc
jge
es
jp
imul
sbb
cmp
jmp
mov
test
test
loopne
icebp
cwtl
mov
jecxz
notb
sub
mov
pop
es
data16
inc
arpl
mov
fs
sbb
inc
jl
xchg
pop
test
aam
lret
fs
jmp
dec
adc
mov
cmpsl
movsb
aaa
test
jg
push
xchg
jmp
cmp
test
cmp
insb
fisubs
mov
ret
ss
lods
xchg
inc
movb
or
dec
imul
or
sub
call
fsubl
call
hlt
mov
jns
imul
outsb
data16
cld
imul
aaa
lret
mov
mov
mov
test
adc
ljmp
dec
lcall
xchg
jmp
adc
inc
mov
mull
flds
popf
inc
enter
jnp
inc
imul
shr
inc
lds
in
and
rorb
out
fwait
orl
jbe
and
out
ret
inc
xchg
sub
test
shrb
enter
add
inc
ss
std
jbe
lcall
jmp
out
jmp
or
sti
bound
add
insb
or
add
mov
popf
push
insb
ret
fucomi
mov
pop
and
in
sbb
mov
xor
xchg
cmp
pop
xor
nop
and
mov
repnz
mov
xchg
out
lea
fucom
out
mov
movsl
and
outsl
jo
xchg
sbb
pop
test
jo
loopne
mov
pop
jae
jmp
jecxz
sub
bound
jecxz
jecxz
out
into
test
je
xchg
aam
pop
nop
push
fiadds
test
fld
cmp
data16
movsb
ss
data16
jno
dec
xchg
inc
sahf
pop
inc
dec
data16
dec
xchg
dec
jae
mov
call
jae
mov
call
mov
das
jbe
mov
dec
aad
shlb
lret
dec
test
xchg
iret
test
xchg
or
xchg
fistl
jae
and
dec
xchg
dec
jae
mov
sub
mov
inc
sahf
pop
inc
lds
mov
pcmpeqd
sub
mov
inc
jbe
mov
bound
hlt
or
inc
xchg
lds
inc
aam
pop
data16
xchg
jae
clc
jae
dec
aas
sub
pusha
pushf
sub
add
add
jmp
data16
lahf
out
dec
clc
andl
pop
add
add
daa
shr
mov
in
clc
notb
sub
and
and
pop
loope
mov
push
xor
imul
lret
dec
add
cmpsb
sbb
xchg
jp
hlt
movl
jae
mov
clc
mov
jg
xchg
lock
cmpsl
in
out
pop
jo
cmp
fwait
jnp
cli
jae
cmp
lods
pusha
fnstcw
add
sahf
pusha
inc
cmc
lcall
lcall
lcall
scas
hlt
or
lret
push
imul
stos
inc
sub
mov
inc
inc
add
fdivrl
pop
push
pop
xor
jmp
cmpb
jl
iret
popa
pop
cmc
out
push
adcb
andl
cwtl
push
out
outsb
ljmp
sbb
nop
sub
test
dec
lcall
call
push
bound
les
pop
rcl
cmp
icebp
ljmp
ret
mov
cmpsb
sbbb
mov
mov
fwait
dec
jle
and
inc
add
jp
fidivrl
sbb
movsb
and
and
cmpsl
pop
fmull
cs
imul
inc
xchg
jmp
testl
and
fs
fldt
add
or
xchg
inc
andb
das
loope,pt
sub
xor
test
lock
fcomps
mov
lahf
repz
movb
scas
push
cmpsb
mov
cmp
sti
mov
push
in
loop
dec
jge
outsb
sti
inc
repz
mov
data16
loopne
sbb
movsb
push
mov
pop
and
cmp
xor
fwait
inc
mov
std
push
inc
add
popa
movsl
adc
xchg
mov
ret
sub
dec
xor
xchg
pop
rep
sub
shll
cmc
push
cwtl
ss
pop
fmull
sarl
in
pusha
mov
or
sub
int
mov
insl
mov
aad
imul
dec
or
gs
ss
push
test
out
jecxz
xor
out
mov
sub
rep
pop
mov
jecxz
arpl
ja
lahf
cmp
mov
jmp
repz
sbb
jno
mov
movsl
cmp
cmp
and
mov
out
mov
jnp
in
cmpsb
jmp
jnp
jne
out
ss
test
test
cmp
and
bound
push
fstpl
adc
ss
xchg
inc
sbb
lods
fisubl
dec
mov
add
mov
dec
in
xchg
movsl
jecxz
call
movsl
or
out
ljmp
ficompl
call
loop
xchg
imul
xchg
xchg
movsw
out
mov
add
std
push
jp
pop
rol
fsubrl
fwait
outsl
lret
clc
pop
mov
sbb
ret
sti
in
out
inc
cmpsb
scas
das
inc
mov
inc
lds
cmp
mov
dec
loopne
lds
dec
push
sbb
call
out
leave
jmp
fwait
arpl
dec
and
add
call
cmpsb
fsubrl
pop
aad
imul
xor
xchg
iret
mov
data16
lock
xchg
cs
pop
pop
adc
jbe
push
dec
mov
adc
test
fwait
shlb
jae
xlat
fcmovne
and
sysret
test
int3
inc
andl
addr16
hlt
and
pushf
rcll
add
pusha
mov
stc
xchg
in
clc
xchg
call
push
lods
cmp
xor
xchg
push
jb
movsb
jae
add
xor
les
movsl
sbb
sub
shlb
mov
out
imul
ret
clc
adc
jae
jmp
inc
imul
sub
sbb
inc
loop
js
mov
lds
push
sbb
sub
add
sti
out
and
rolb
outsl
dec
clc
out
gs
sbb
dec
insl
xchg
add
push
ret
call
xor
jmp
xchg
jmp
xchg
loope
and
add
pushf
sub
cmp
scas
mov
push
in
push
orb
fists
or
imul
clc
pop
addr16
cmp
data16
xor
inc
sbb
arpl
fs
sbb
arpl
xor
or
xor
mov
movsl
and
stos
adc
ds
dec
and
insl
sub
lahf
das
iret
cli
xchg
sub
inc
stc
add
sbb
dec
inc
addb
sbb
loope
sbb
pop
nop
sub
repz
loope
sti
repz
cld
and
ret
mov
mov
movsl
sub
inc
call
orb
and
jnp
insb
and
popf
mov
jmp
cmp
dec
popa
out
cs
icebp
dec
xor
stc
cwtl
shrb
shl
adc
lea
nop
out
addb
push
mov
loop
inc
add
pushf
pop
mov
adc
mov
sub
xor
fisttpl
es
xchg
aaa
icebp
and
lea
sti
cmpsb
cmpsl
inc
sahf
int
mov
out
lcall
out
xor
outsb
jnp
dec
sub
xlat
cmc
cmp
mov
ds
or
mov
cs
dec
cmp
mov
in
ret
inc
movl
nop
out
iret
fsubp
xor
pop
dec
test
pop
cli
stos
and
mov
and
lods
cltd
insb
sbb
cmp
mov
ret
and
dec
fs
rcrl
sbb
ds
imul
inc
mov
jno
dec
cltd
dec
xchg
sub
call
nop
insb
mov
shll
leave
mov
or
pop
pop
mov
arpl
mov
cmpb
jo
add
push
push
mov
mov
and
dec
leave
jmp
cld
xchg
bound
fwait
sahf
and
sbb
push
xchg
adc
movsb
xor
call
jle
mov
sbb
mov
call
mov
dec
jecxz
cmpsl
imul
scas
jae
repnz
and
cmc
pop
sub
cli
jmp
rol
jae
and
faddp
daa
in
aaa
loop
imul
xor
push
mov
fldenv
dec
fmuls
aas
add
mov
or
sbbb
pop
add
add
jg
jl
xchg
cli
pop
jnp
xchg
pop
cmpsb
mov
movsl
mov
mov
mov
rclb
repz
ret
sbb
pop
pushf
ficomps
out
loopne
popa
mov
pushf
mov
in
sub
in
pop
dec
mov
mov
xorl
pop
pop
arpl
adc
lods
stos
dec
inc
addr16
jns
mov
sbb
sahf
lds
lahf
or
mov
jecxz
das
xor
cs
pop
jns
mov
out
and
sub
adc
inc
popa
jnp
push
data16
push
xorl
dec
int3
inc
jbe
xchg
sub
data16
jae
adc
push
cmp
outsl
xchg
fists
and
out
and
mov
push
mull
xlat
sbb
push
adc
cld
push
pop
xchg
aad
mov
xor
pop
clc
adc
call
xchg
rorl
xchg
lret
pop
icebp
fstpt
dec
pushf
loop
jb
clc
dec
pop
and
jno
inc
adc
pop
xorl
inc
idivl
add
clc
dec
nop
movsl
mov
ja
fsubl
cmc
dec
lods
adc
fwait
stos
pop
lds
test
imul
mov
add
popa
call
movsl
jbe
in
add
mov
stc
mov
mov
fldt
andb
mov
mov
fidivl
gs
aad
inc
call
shll
lock
outsb
in
and
fcmovb
mov
out
sub
aad
out
mov
loopne
movsl
out
aam
stc
fnsave
in
icebp
xchg
jb
repnz
imul
cmpsl
in
out
imul
jge
fistpl
mov
arpl
fs
jl
ljmp
fistl
jge
addr16
aam
xor
add
repz
push
data16
jg
scas
add
in
mov
jp
jno
imul
imul
aaa
lahf
insl
hlt
jecxz
aaa
in
popa
imul
jp
jns
roll
js
sbb
sub
repz
imul
imul
insl
hlt
jecxz
ss
popa
imul
jns
roll
js
xchg
icebp
jge
in
out
xor
jp
repz
jne
imul
outsl
xchg
insl
inc
cmpsl
inc
arpl
popa
hlt
jecxz
ss
gs
das
data16
js
sbb
lods
sbb
jno
test
ja
jp
jne
cmpsl
inc
imul
hlt
jecxz
pushf
daa
outsl
subb
jecxz
aaa
outsb
inc
popa
imul
push
sahf
stc
jns
negb
in
in
cmpsl
push
jae
mov
in
test
mov
jp
iret
sub
insl
dec
imul
out
jae
pop
test
dec
js
ss
in
in
pushf
mov
ret
in
ss
inc
sahf
cmp
inc
ja
js
xchg
inc
cmpsl
jns
ret
leave
in
ss
inc
fiadds
mov
fs
repz
gs
imul
popa
jns
outsl
data16
jbe
pusha
iret
hlt
add
in
xchg
ja
add
jne
mov
gs
subl
addr16
popa
inc
cmpsl
into
cmp
gs
add
rcrb
data16
ljmp
jae
leave
test
mov
jecxz
dec
imul
addr16
pop
test
outsl
xchg
insl
inc
cmpsl
into
arpl
fs
popa
hlt
jecxz
ss
gs
mov
ret
mov
addr16
addr16
mov
and
jnp
sbb
cwtl
data16
xchg
or
mov
loopne
xor
adc
lea
mov
push
add
add
dec
add
add
inc
ret
test
and
inc
mov
xor
lds
add
lds
lds
test
inc
movsl
jnp
pop
movsl
cltd
movsl
pop
movsl
lahf
movsl
pusha
movsl
popf
movsl
pop
movsl
xchg
movsl
push
movsl
xchg
movsl
push
movsl
xchg
movsl
pop
movsl
xchg
movsl
push
movsl
mov
dec
jne
sbb
xchg
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
mov
mov
mov
mov
scas
pushf
scas
pop
scas
lcall
out
jns
stc
jge
jae
mov
movsl
jne
insl
imul
arpl
dec
pop
addr16
gs
pop
lahf
jns
jg
jge
jae
jno
ja
jne
imul
nop
mov
jecxz
inc
xchg
ja
or
lret
in
jle
inc
pop
outsb
jecxz
jg
and
dec
sub
jne
mov
xchg
cmp
jne
or
mov
mov
push
sbb
add
push
push
ljmp
es
data16
jmp
iret
popa
ljmp
loopne
lret
loop
popf
push
mov
mov
cmp
imul
in
insl
push
lret
inc
ret
cwtl
shl
or
inc
int
in
sub
cmp
lock
fwait
xor
xor
push
iret
mov
inc
nop
repnz
fwait
adc
shr
dec
pop
mov
insb
push
inc
sbb
fimuls
je
out
bound
call
cli
mov
inc
xor
out
xor
in
push
add
dec
dec
mov
data16
cmp
sbb
jb
dec
out
dec
jecxz
sbb
in
stos
xchg
push
or
leave
repz
mulb
xor
lcall
cld
add
test
imul
fsubl
add
aam
push
daa
jb
test
push
fsubs
out
xchg
push
xchg
inc
add
aad
rclb
movsb
mov
add
rol
mov
xchg
mov
lret
int
hlt
add
mov
mov
dec
fisubs
inc
das
addr16
mov
sbb
mov
aaa
movsb
dec
sbb
cwtl
cmpsb
scas
sbb
dec
loope
mov
scas
shrb
mov
add
pop
mov
aas
test
xlat
push
outsl
jne
subl
movsb
mov
push
inc
adc
jne
adc
ja
daa
lret
shl
jge
outsl
ret
in
cmp
pop
repz
out
outsl
popf
lods
sbb
mov
cmpsl
fwait
jl
cmp
test
popf
cli
push
call
fwait
andl
xchg
rcrb
jge
repnz
push
sub
int3
mov
mov
mov
pop
pop
push
mov
popf
inc
xchg
xchg
xchg
fs
cltd
out
data16
and
xor
sbb
xchg
int3
ret
push
jg
xchg
loope
push
movsl
mov
in
addr16
sbb
push
sar
repnz
mov
jg
push
push
mov
mov
mov
mov
repz
or
xor
add
mov
out
cli
int
jmp
aam
std
pushf
stos
pop
fnstcw
xchg
rcrb
sbbl
in
push
loope
inc
jo
js
push
cmp
iret
out
cmp
movsl
mov
jnp
out
mov
mov
loope
mov
push
call
xchg
sub
xor
fs
xchg
out
xor
sub
orl
shrl
fwait
mov
outsb
mov
movsl
in
fnstcw
movsb
mov
aaa
jne
outsb
xchg
in
jne
popa
jns
mov
sbb
cmp
pusha
cwtl
xor
and
and
in
in
adc
pop
nop
hlt
out
jns
jg
jge
psllq
add
jne
fnstenv
imul
clc
out
popa
pushf
js
gs
mov
mov
call
pushf
inc
jae
add
call
pushf
inc
jae
cld
jmp
pushf
inc
jae
add
call
pushf
inc
jae
add
cltd
inc
jae
add
call
pushf
inc
jae
add
mov
mov
call
pushf
inc
jae
add
call
add
call
pushf
inc
jae
add
call
pushf
inc
jae
adc
call
pushf
inc
jae
add
call
pushf
inc
jae
pop
jmp
pushf
inc
jae
add
call
pushf
inc
jae
add
cltd
inc
jae
add
xchg
out
inc
jbe
add
jbe
lea
push
test
out
shlb
mov
loop
scas
and
dec
fwait
out
dec
add
inc
cmp
outsb
sub
call
outsb
mov
js
xchg
je
addr16
mov
call
cmp
and
inc
bound
dec
xor
test
or
insl
test
dec
insl
pop
insl
fwait
jbe
mov
xchg
out
popf
push
xchg
push
xchg
jno
inc
pop
shrb
test
push
mov
movsb
mov
imul
cs
daa
iret
push
adc
mov
jmp
cmp
out
cmpsb
jge
cmp
fldz
outsb
cmpsb
fsubl
cmp
mov
insl
dec
scas
add
out
popa
add
ret
and
repz
mov
sub
stos
xchg
test
xchg
or
call
lds
outsl
shlb
jne
pop
aas
mov
jbe
xor
in
cmp
add
outsb
jne
stc
nop
sti
popf
ja
sub
dec
imul
jbe
xor
inc
hlt
push
xchg
push
jecxz
popa
out
stc
ret
pop
imul
ljmp
cmp
lods
inc
jb
imul
imul
sbb
mov
shll
jbe
inc
or
jbe
jb
fnstenv
mov
insl
pop
dec
and
mov
scas
sub
jbe
push
lret
sub
negb
repz
lock
xor
loop
inc
mov
sub
andb
dec
data16
push
jecxz
test
inc
popf
push
es
or
ret
inc
imul
mov
negb
mov
ds
imul
ret
imul
jbe
pop
jae
dec
ljmp
mov
inc
mov
call
jmp
out
xchg
jmp
mov
add
jmp
dec
jmp
mov
insl
jmp
popa
inc
push
lods
jecxz
ret
jmp
jnp
insb
push
rolb
xchg
insb
push
xchg
insb
pop
popf
insl
pop
xchg
test
mov
mov
addr16
imul
xchg
xchg
loop
cmc
adc
imul
faddl
add
lahf
decb
push
xor
packuswb
fidivl
mov
out
pusha
js
call
mov
mov
jne
cmpsb
scas
sub
jmp
loope
xlat
push
fcomps
outsl
ljmp
lods
call
pop
sbb
out
inc
add
daa
cmpsb
jecxz
cmpsl
scas
fwait
hlt
mov
dec
xchg
push
cld
dec
and
push
lret
pusha
arpl
or
sbb
or
or
dec
es
rol
and
sbb
mov
int
clc
in
shrd
movsb
in
jnp
ss
sbbb
dec
push
or
sub
sbbl
adc
jnp
inc
push
sbb
push
dec
bswap
adc
push
repz
mov
dec
dec
icebp
adc
out
or
mov
test
repnz
shlb
ss
call
cmc
xchg
inc
dec
jp
cli
es
fbstp
popa
sub
jbe
pushl
frstpm(287
das
sub
add
outsl
fnstcw
xchg
fwait
in
out
or
push
cmpsb
mov
xlat
out
jecxz
lds
in
push
ret
sti
jbe
xchg
pop
and
fucomi
movsl
out
les
xor
sbb
push
rolb
arpl
or
int
add
sahf
push
nop
and
mov
sbb
inc
loopne
sub
xchg
cmpsl
and
xor
arpl
lret
push
outsb
je
add
out
fadd
nop
ljmp
sti
mov
mov
push
cmpsb
dec
sbb
inc
push
dec
ljmp
and
call
pop
fucomip
inc
fwait
dec
xor
arpl
or
je
in
lret
sahf
aad
cmc
xor
sub
push
pop
xorb
jnp
out
mov
push
sub
aaa
call
add
sub
mov
sub
mov
call
mov
test
cmpb
ret
dec
xchg
lea
andb
cmpsb
push
mov
cmc
les
sbb
jge
daa
add
jge
imul
cltd
sub
ja
shlb
lock
cwtl
cmpsl
cmp
pop
cmpsb
leave
adc
in
jmp
sbb
sub
pop
mov
out
jns
sbb
mov
idiv
daa
fdivrs
addr16
gs
callw
jp
testb
addr16
xchg
sar
lock
shl
sub
fisubrl
add
jbe
aad
out
int3
cmp
pop
movsl
scas
test
outsl
mov
jmp
imulb
lret
es
sub
sbbb
fisttps
push
iret
scas
cmpsb
dec
xchg
sub
sub
outsb
loopne
bound
jb
gs
popf
repz
test
cmp
call
push
popf
call
push
sub
mov
imul
sub
decb
shlb
mov
out
insb
cmpsb
lods
std
mov
daa
ss
lret
lods
sub
icebp
sub
mov
inc
gs
incl
jle
dec
cmpsb
dec
stos
scas
mov
and
mov
mov
and
push
lods
inc
in
gs
ja
rorl
aas
pop
mov
mov
mov
addb
outsb
pop
andl
pop
adc
nop
and
pop
test
inc
add
adc
xor
ljmp
pop
add
inc
and
sbb
jbe
int3
divl
mov
sub
xchg
call
test
sbb
pop
fcmovne
insw
jne
aad
fsubrs
cmp
push
mov
and
ja
xor
mov
mov
sbb
pop
out
stos
fsubl
popa
or
sti
inc
fcompl
and
push
subb
ss
push
jg
mov
test
rcrb
ljmp
push
aaa
push
adc
pop
outsb
push
int
xchg
mov
mov
xor
scas
test
cmpsb
sub
lods
inc
adc
movsl
lods
adc
xchg
sub
or
and
arpl
fs
ret
push
arpl
dec
inc
mov
mulb
push
jg
dec
mov
lcallw
push
jns
and
icebp
push
jbe
pushf
ljmp
add
or
pop
or
jne
mov
out
popa
jmp
jae
mov
movsl
xchg
and
imul
data16
dec
dec
cli
and
out
lcall
sbb
fldcw
mov
fwait
out
jnp
cli
fldl
xor
adc
mov
add
or
sbb
hlt
stos
push
fistps
test
stos
iret
push
in
cmp
xor
je
es
inc
xchg
cmpsb
lret
sub
xchg
por
mov
xchg
dec
or
popa
test
jo
jmp
out
sub
cmpsb
push
andl
lock
xchg
es
dec
lahf
cmpsb
xor
cmp
pop
dec
mov
es
jne
xchg
xor
pop
in
and
lds
movsb
cmp
xchg
push
insl
ss
clc
test
push
cmpsb
and
or
add
into
mov
adc
adc
mov
xor
fisubl
add
pop
or
adc
cmc
outsb
divl
sub
in
js
lds
movl
xchg
cmp
pushf
mov
js
outsl
aad
add
push
jbe
sbb
sub
in
jbe
push
push
inc
scas
push
mov
push
jmp
daa
movsb
es
adc
jae
jmp
arpl
lcall
add
pop
xchg
test
cs
test
ja
cmp
lods
int
int
mov
or
in
mov
movsb
bnd
gs
fsubl
pop
shrl
aam
pusha
pop
leave
imul
push
int3
add
add
adc
mov
inc
psubsw
and
int
cmpsl
sub
jmp
add
mov
lahf
es
mov
sbb
and
jge
mov
stos
mov
mov
out
bt
lock
sbb
xor
jecxz
xchg
out
in
add
ficoml
fistpl
cmp
ret
adc
cmp
in
inc
rorl
in
std
test
and
cld
xchg
outsl
and
push
sbb
popa
pop
jmp
cltd
int3
cli
popa
idivl
pushf
cld
cmp
jbe
hlt
stos
jmp
arpl
imul
clc
cwtl
enter
loop
int
sbb
dec
fdivl
cmp
jo
cmpl
aas
dec
jecxz
cmp
cmpsl
int
fistpl
add
cld
icebp
psraw
data16
push
popa
mov
call
mov
aad
clc
push
adc
movsl
mov
fs
cltd
xchg
test
xor
arpl
pop
lret
test
bound
cmpsl
cmp
arpl
movsl
sub
scas
stc
cmp
dec
sbb
psllq
inc
repz
sbb
xor
in
nop
xchg
enter
pop
fcompl
and
mov
in
cld
enter
push
lret
mov
sar
arpl
pop
sub
arpl
mov
mov
pop
das
push
out
mov
aad
dec
xchg
jecxz
mov
xor
inc
cli
adc
je
fs
cmp
faddl
sub
jo
push
and
movsb
into
sub
cmp
lcall
out
outsl
mov
mov
fadd
out
call
inc
les
ffree
xchg
stc
dec
mov
test
jp
xrelease
push
testl
cmp
add
mov
imul
pop
outsl
adcl
shlb
and
sbb
dec
movsb
in
daa
in
mov
xlat
repnz
les
pop
push
lods
push
add
xor
imul
cmp
or
xlat
lods
mov
imul
inc
mov
add
data16
inc
jle
call
scas
jno
dec
iret
sti
orl
push
out
pusha
loope
lods
mov
jecxz
in
add
in
ret
outsb
xchg
mov
repz
rclb
and
cmpsl
in
dec
lock
js
add
push
ljmp
aaa
jbe
jg
stos
sbb
xchg
and
cwtl
stc
fs
dec
insl
cmp
jns
push
ljmp
arpl
jmp
in
and
stos
mov
or
data16
pushf
enter
push
mov
sub
dec
lods
push
divb
insb
cltd
rolb
add
out
stos
stos
push
xchg
and
gs
jg
mov
fwait
scas
stos
fwait
or
data16
cmpsb
push
insb
rep
lods
arpl
stc
sbb
dec
imul
sti
lea
lods
movsb
arpl
mov
repz
mov
add
inc
adc
jns
or
movsb
cmpsb
fimull
out
cmpsl
call
ret
out
mov
pop
insl
adc
addr16
jnp
mov
jmp
sub
sahf
add
xchg
jmp
dec
mov
int
mov
in
insl
nop
pop
mov
jbe
mov
cltd
cld
adc
arpl
shlb
test
cmp
lock
dec
inc
stc
and
inc
xor
cmp
cmpl
mov
inc
arpl
cli
in
xchg
xor
mov
dec
cmp
add
gs
and
test
stc
out
xchg
test
jg
pop
sbb
mov
cmp
lea
cli
jmp
mov
push
sbb
lret
repz
sbb
call
inc
leave
add
es
int3
ret
ja
sub
out
aas
fwait
xor
ret
push
push
push
mov
inc
movsl
jae
pop
clc
add
inc
stc
inc
sub
inc
ja
movsl
aas
aas
popa
iret
inc
and
mov
cmp
and
inc
movsl
dec
daa
out
mov
scas
fadds
nop
outsb
dec
data16
mov
adc
sub
retw
xchg
pop
pusha
sub
les
call
dec
dec
lods
test
add
xchg
mov
mov
jns
push
jno
cmpsb
movsl
dec
aaa
mov
push
movsl
icebp
mov
push
sub
add
jmp
lret
clc
test
mov
cld
jg
es
jnp
push
xchg
out
iret
cmp
inc
enter
cltd
ss
jne
rolb
cltd
xchg
rclb
pop
test
arpl
test
stc
jg
adc
popa
and
mov
push
inc
je
push
jecxz
xlat
sub
aas
add
addr16
or
and
jo
je
cmpsl
popf
add
cmp
imul
push
pop
jbe
or
add
and
movsb
inc
add
cs
mov
dec
jbe
push
jne
push
cwtl
add
inc
repnz
cltd
mov
jbe
and
aas
and
movsl
loop
repnz
subl
clc
bound
hlt
nop
call
xor
and
lret
fiaddl
push
jecxz
mov
scas
jle
mov
sbb
jns
pop
loop
call
or
jmp
outsl
xor
outsb
inc
je
xor
inc
sub
add
xchg
mov
movsl
inc
pop
or
ljmp
inc
and
testl
jmp
mov
jg
adc
push
popa
ret
jecxz
call
cmp
push
data16
cli
or
pop
pop
xchg
inc
ljmp
mov
call
sbb
dec
insl
mov
jbe
test
fneni(8087
xchg
xlat
aas
jb
test
mov
mov
clc
ds
pop
repz
fists
mov
xor
addr16
ljmp
addb
and
xlat
loopne
dec
add
imul
scas
sub
arpl
sub
mov
jb
sar
std
aam
jbe
lret
sbb
xchg
jne
add
icebp
repz
loope
test
out
jmp
lret
add
enter
xchg
out
push
outsl
cld
in
mov
cmp
mov
insl
push
sbb
out
fwait
jb
dec
inc
xchg
inc
data16
push
cwtl
xchg
lods
xchg
add
test
dec
xchg
scas
shlb
orl
sbb
scas
dec
fdivs
cltd
lret
or
sub
pop
lea
data16
fdivl
cmp
sbb
push
pop
enter
jns
xchg
push
inc
call
out
xor
sbb
cmp
mov
imul
stc
adc
arpl
lock
test
xorl
je
orl
sub
mov
add
lock
fldt
iret
pop
mov
push
stc
mov
pushf
dec
clc
stc
xlat
dec
mov
sub
jle
and
jle
out
push
imull
clc
pusha
outsw
sub
ljmp
inc
sbb
sahf
inc
push
movsb
imul
xchg
sub
sbb
adc
fwait
fs
mov
scas
insl
rcll
dec
xchg
insl
add
pop
jne
dec
out
out
xchg
fisttpl
pop
add
mov
js
pop
jp
xor
or
xchg
pop
or
mov
sbb
sub
sbb
lea
popa
inc
mov
ficomps
add
call
push
pop
xchg
xchg
data16
shrb
fldl
mov
adc
arpl
out
and
out
cmp
cmp
test
mov
sbb
inc
out
outsb
push
ja
int
add
imul
pop
lods
xchg
test
add
je
sbb
call
xor
mov
repz
fwait
push
rorl
dec
push
in
xchg
in
ss
jae
adc
adc
es
repz
shlw
loop
test
loop
push
dec
sar
mov
popa
jnp
stc
mov
jns
xor
pusha
movsl
es
stc
xlat
roll
jae
adc
aam
es
lea
dec
cmpsb
fwait
lahf
pop
in
sbb
into
divb
jnp
xchg
xchg
dec
idiv
into
inc
pop
mov
inc
divb
stos
pop
inc
fiaddl
inc
data16
and
cs
fxch
mov
mov
out
fisubrs
push
mov
add
repz
jae
dec
test
ja
and
push
or
loope
mov
xor
pop
dec
fs
sub
inc
int3
xor
mov
pop
insl
loop
outsl
push
bound
cmpsb
ljmp
sbb
arpl
jmp
dec
shl
rclb
sbb
mov
xor
scas
add
test
mov
ljmp
jecxz
or
jnp
stc
imul
inc
inc
imul
mov
dec
xchg
sub
jnp
data16
test
mov
dec
mov
dec
push
dec
test
ja
xchg
outsb
mov
mov
inc
sbb
mov
in
inc
sbb
ja
sbb
mov
push
and
fwait
jg
out
fistpl
ret
lds
pop
push
ret
lds
push
jg
out
fs
push
ret
lds
insb
push
lods
enter
push
and
daa
fwait
push
test
push
xchg
lds
aaa
push
test
push
xchg
lds
daa
push
test
push
xchg
lds
lds
jle
arpl
and
jle
arpl
and
shlb
mov
push
lds
movsl
jbe
push
lds
jbe
push
lds
jbe
push
lds
jbe
push
sbb
test
jns
mov
call
or
insl
ljmp
mov
pop
cld
cmp
out
pop
push
rol
add
gs
mov
xchg
rcrb
pop
pop
add
adc
mov
data16
xchg
sub
mov
idivb
adc
xor
out
mov
arpl
insl
sbb
ljmp
sbb
loop
add
call
hlt
mov
insb
fdiv
push
ret
jg
or
jp
cmc
mov
mov
sahf
addr16
imul
arpl
jmp
mov
push
xchg
cmpsb
fs
add
mov
scas
jnp
fs
out
mov
aaa
scas
lea
push
inc
push
aaa
test
imul
mov
and
scas
sub
test
push
inc
in
sbb
addr16
sti
push
mov
mov
and
inc
mov
add
imul
ja
data16
mov
movl
cmpsb
js
rcrb
mov
add
pop
jg
or
out
cmpsl
test
fadd
push
aad
jne
dec
mov
ret
mov
inc
mov
add
dec
out
jnp
fldt
sti
sub
call
out
addr16
fisttpl
es
jmp
in
addr16
test
inc
cmp
push
fs
jecxz
dec
mov
aas
xchg
jge
push
outsl
std
pop
jae
fstpl
xchg
xchg
pushw
lahf
xchg
outsb
cmp
cmp
mov
ret
stc
cli
pop
push
fs
mov
dec
mov
lcall
fwait
jns
pop
cld
dec
out
cmp
dec
and
out
mov
mov
mov
mov
hlt
outsb
mov
mov
addr16
sbb
cmpsl
cmpsl
sbb
mov
ljmp
popa
cmpsl
pop
sbb
inc
repnz
cmc
jae
stos
jecxz
xor
inc
loopnew
stos
fistl
jae
std
pop
jo
aam
or
cmpsb
ja
data16
push
xor
movl
fmuls
jmp
fstpt
mov
pop
std
or
sbb
data16
fadd
xchg
jle
std
mov
pop
cwtl
loopne
aas
cli
inc
push
fs
mov
dec
mov
sub
pop
std
pop
jecxz
cmp
sbb
in
pop
push
pop
mov
addr16
sub
cmc
shl
inc
mov
sahf
lds
jns
js
aad
arpl
sbb
xchg
nop
rorb
dec
addr16
mov
out
and
cmpsb
std
pop
or
pop
pop
or
jnp
popf
data16
or
pop
outsb
dec
sub
ja
cmp
inc
js
aas
loop
inc
mov
add
ret
outsl
xlat
or
push
ja
test
fsubrl
push
fs
sub
pop
dec
mov
jmp
pop
aam
pop
mov
xchg
data16
fidivrl
iret
sub
fwait
or
cmpsb
aaa
add
icebp
icebp
add
hlt
adc
inc
sub
dec
sbb
add
and
lock
data16
cmp
insb
mov
mov
insl
sbb
sbb
data16
fdivrl
or
insl
jnp
gs
push
data16
stos
or
clc
xorl
jbe
loop
xchg
jbe
adc
sti
and
sti
lock
sbb
xor
sub
jmp
mov
or
out
arpl
iretw
add
call
enter
std
loopne
mov
push
inc
jmp
scas
popa
jecxz
add
enter
arpl
xchg
add
inc
xchg
adc
sub
push
rcll
int
fs
mov
dec
jbe
leave
andl
out
inc
outsl
pop
xchg
pop
xlat
data16
inc
sub
out
arpl
mov
and
pop
push
jp
shl
mov
arpl
mov
xchg
enter
rclb
sub
sbb
mov
and
arpl
mov
mov
js
inc
lret
and
jecxz
ljmp
push
mov
addr16
jg
roll
xor
adc
fidivrl
ret
ljmp
jbe
mov
daa
adc
jo
sahf
jae
outsb
push
mov
in
mov
fninit
dec
jbe
ja
add
mov
loop
xchg
and
sub
xchg
and
js
push
pushw
xchg
lods
imul
dec
sbb
and
imul
dec
pop
jmp
repz
inc
cmpsl
adc
fisttpl
fs
mov
fs
push
mov
into
adc
repnz
icebp
movsb
je
ret
sub
daa
loope
fiaddl
fs
inc
or
in
xor
jecxz
push
xchg
mov
testb
mov
adc
loope
in
je
outsl
nop
sub
cld
add
cmp
xlat
ljmp
movsl
and
and
out
push
dec
test
sbb
mov
jbe
ja
stos
sub
adcb
outsl
dec
dec
mov
push
xor
dec
in
pushf
aam
in
xchg
scas
lods
ffree
cmpsb
jae
cmp
hlt
arpl
mov
pushf
cs
mov
dec
imul
gs
cmp
xchg
out
scas
lods
cmc
sbb
outsb
inc
add
sbb
test
mov
int
pop
dec
push
sbb
popa
mov
inc
jle
icebp
mov
pop
int
ja
dec
ficompl
nop
in
and
icebp
mov
out
es
lcall
es
lods
imul
stos
jge
inc
stc
ret
dec
pop
nop
or
xchg
rcr
jb,pn
pop
push
in
cmc
out
popa
movb
push
movsb
add
jbe
imul
push
mov
cmpsb
int
out
in
cmp
arpl
pop
mov
or
outsl
pop
test
pop
in
in
cld
sub
and
inc
popf
ja
test
jbe
movsl
int
mov
mov
push
into
lock
add
xchg
test
and
adc
sbb
js
dec
ret
add
mov
mov
loop
fwait
pusha
jns
push
dec
cltd
sahf
push
lret
adc
inc
test
stc
les
shrb
iret
lock
js
imul
and
and
add
mov
lcall
mov
inc
lret
loope
and
in
push
test
or
rcrl
inc
xchg
scas
int
ret
push
mov
mov
in
inc
push
ja
pop
jmp
cmp
lahf
jmp
push
out
ret
ja
mov
mulb
int3
bound
leave
and
xlat
mov
adc
arpl
cmc
addr16
push
pushf
push
sub
push
mov
dec
cmc
add
aam
ss
out
icebp
movsb
call
fs
mov
mov
jbe
pop
pop
inc
mov
and
mov
push
in
push
add
inc
call
mov
adc
cmp
movsb
add
cld
pusha
clc
sbb
ljmp
movsb
hlt
mov
jmp
pop
arpl
insl
adc
insl
popf
es
fadd
out
call
sbb
xor
mov
jae
sbb
ja
clc
sbb
jl
daa
inc
fs
arpl
int
xchg
lret
xchg
scas
outsb
mov
test
jg
jmp
int
mov
sub
nop
scas
cmpsl
add
in
js
ja
jbe
leave
aas
pop
jno
cmp
inc
cmp
mov
ljmp
push
popa
ljmp
jae
mov
out
mov
loope
jns
stc
sti
mov
and
ja
in
pop
popa
inc
mov
push
cmc
call
lcall
es
fldt
jo
loop
bound
mov
hlt
loopne
mov
or
out
xor
bnd
xor
jne
loopne
imul
in
mov
in
and
sbb
scas
test
popa
sbb
and
das
adc
fucom
jmp
lds
mov
adc
addr16
and
mov
sbb
fwait
jnp
adc
mov
lcall
adc
add
inc
adc
add
inc
adc
add
inc
adc
bswap
bnd
jmp
addr16
sub
jnp
cmc
jnp
gs
jnp
int3
jb
call
fs
xchg
std
push
cli
jbe
icebp
pop
lss
xchg
push
iret
sub
xchg
xchg
pop
clc
cmpsl
jne
outsl
out
xchg
jo
out
arpl
jae,pt
stc
xchg
jp
cli
mov
lcall
pop
jge
mov
repz
arpl
ljmp
loope
add
sti
out
lcall
xor
aam
data16
lret
or
pop
jno
mov
sti
gs
cmc
gs
repz
rcr
lods
pop
mov
push
or
sbb
sbb
lret
mov
insl
lahf
in
mov
mov
shll
xchg
mov
fs
scas
cmpsl
add
mov
ret
cwtl
int
lret
or
nop
outsl
or
test
pop
das
testl
ret
xlat
add
arpl
cmc
popa
mov
sub
dec
out
mov
adc
mov
dec
sub
rolb
fs
inc
push
fs
cmp
lds
sti
or
cwtl
jno
cwtl
daa
inc
add
daa
dec
fs
repnz
out
mov
out
and
loop
ret
sub
loop
sub
out
xor
mov
adc
jle
cmp
xorb
popf
mov
jecxz
add
mov
cltd
pop
fwait
gs
dec
push
imul
in
sub
sbb
sub
aam
je
cs
pop
mov
mov
add
popa
imul
push
insb
dec
or
jne
cmpsb
shll
and
out
or
sti
or
mov
stos
sti
cwtl
nop
outsl
cmp
mov
das
sti
in
jne
mov
rolb
leave
mov
mov
inc
mov
inc
ja
push
jge
sbb
and
push
test
cmpsl
inc
sahf
sub
and
fwait
pop
ljmp
enter
imul
push
mov
pop
mov
ss
das
mov
mov
jge
imul
sarl
cmpsl
int3
mov
out
add
mov
hlt
pop
or
and
jb
mov
mov
jbe
lcall
in
loope
stos
sti
sub
scas
pop
push
sbbb
cmp
pop
and
xchg
call
shrl
jmp
mov
sub
and
mov
add
inc
jb
call
dec
enter
shlb
add
test
xchg
sub
mov
je
enter
aam
cmpsb
lds
int
subl
xor
daa
add
mov
dec
lcall
inc
adc
out
or
jecxz
sbb
in
sahf
ss
in
jne
movsb
ret
enter
or
lods
sbb
mov
sub
inc
mov
clc
or
sbb
addb
xor
ja
popa
and
cltd
dec
cltd
jp
nop
mov
mov
mov
cmp
sub
aam
jecxz
sti
call
iret
dec
data16
pop
and
inc
test
mov
jl
mov
xor
out
out
fdivrl
cmpsl
in
cmpsb
inc
and
fcompl
jo
and
sub
out
dec
cmpsb
cmpsb
mov
fcmove
filds
xor
sbbb
inc
out
das
sbb
mov
xor
popa
mov
cltd
test
xchg
lods
insl
xchg
or
push
out
pop
push
xor
push
cmpsb
call
pushl
push
lahf
outsl
jne
or
pop
sub
mov
and
mov
es
and
lock
out
jl
int
jb
sbb
in
xor
mov
es
and
es
push
test
sbb
xchg
push
xchg
sub
mov
sub
mov
or
cs
inc
dec
nop
cmp
mov
lock
push
push
xchg
inc
dec
mov
ret
mov
xor
xchg
inc
mov
mov
xor
daa
repnz
cltd
sahf
aas
mov
mov
jns
arpl
xorl
repz
out
ljmp
lds
popf
outsb
add
xchg
adc
in
fbstp
or
les
ja
ljmp
sub
jbe
out
ljmp
fistpl
or
mov
jmp
lds
icebp
sub
mov
icebp
pop
adc
enter
adcb
iret
push
ret
push
cmp
push
cmp
dec
cmp
dec
xchg
clc
aas
clc
push
cmpsl
in
jae
ljmp
lahf
cs
push
fsubrs
test
repz
daa
dec
pop
or
fmull
cmpsb
push
lcall
xor
sub
push
cmc
jb
icebp
loop
cld
arpl
mov
jge
aad
test
push
stc
lock
jae
dec
dec
frstor
movsl
movsl
sub
or
dec
cwtl
jb
jecxz
add
mov
or
jmp
dec
mov
cmp
subl
stos
dec
sub
es
in
dec
and
adc
sbb
inc
repz
pop
cltd
lret
enter
xchg
in
sub
dec
cmpsb
filds
rcrl
movsb
scas
xor
test
out
mov
add
or
cmc
and
or
xchg
and
mov
dec
pop
fcomip
pop
test
movsb
sahf
mov
cltd
adc
mov
add
xor
pop
into
push
sub
ja
xchg
gs
mov
sarl
pop
test
jmp
mov
xlat
imul
mov
test
mov
fs
pop
test
sarl
or
lahf
test
sbb
mov
fadds
dec
push
dec
push
ficomps
dec
lcall
mov
inc
mov
or
gs
enter
mov
or
into
ljmp
and
out
dec
cwtl
outsb
insl
aad
in
xor
in
pop
jecxz
and
jo
std
loop
jmp
call
adc
cwtl
call
cmp
xor
lret
les
fs
adc
push
push
es
xchg
in
mov
sbb
das
in
andb
js
into
fwait
push
xchg
pop
pusha
push
lods
xor
sbb
outsl
leave
shr
xor
jo
clc
popl
cmp
ret
cld
sub
call
stos
out
dec
cmpsl
nop
and
mov
or
mov
daa
stc
cmp
popf
push
jns
pop
sbb
arpl
call
sub
mov
loopne
or
test
loope
stos
cli
and
and
cmpsb
xor
mov
dec
mov
out
subl
popa
lods
inc
jae
dec
nop
addb
mov
push
mov
fdivl
dec
rcr
push
dec
dec
jae
sbbl
imul
fs
add
push
je
cmp
mov
cld
jbe
sti
stos
push
outsb
jle
mov
pop
cmp
xor
cmpsb
cmpsl
movb
sub
jmp
push
imul
sbb
test
mov
repz
out
cmp
and
pcmpeqd
mov
arpl
imul
sub
push
gs
call
push
arpl
sbb
cmp
jns
inc
dec
jg
mov
arpl
je
add
lcall
imul
popa
je
mov
fdivrl
jne
imul
out
pop
loopne
aas
and
mov
data16
xorl
mov
sbb
cmp
xchg
ljmp
sbb
cmp
dec
faddl
push
mov
mov
jle
dec
or
sbb
imul
and
pop
pop
fisubs
dec
xorb
sbb
push
ds
ljmp
and
pop
push
ss
cmp
mov
fildl
lods
imul
gs
and
dec
adc
aaa
inc
jmp
mov
mov
das
push
xor
cli
cmp
in
mov
js
sbb
push
jecxz
cmpsl
fistpl
mov
push
or
negb
pop
fdiv
ror
dec
and
cmpsl
mov
inc
push
sub
icebp
push
arpl
mov
add
popf
mov
addr16
push
push
inc
cli
jmp
jmp
out
ljmp
xchg
push
dec
jp
jbe
int3
mov
jno
ja
gs
testb
aam
insb
stos
sbb
cwtl
ret
jg
mov
xchg
sbb
int
xchg
inc
adc
ljmp
fstpl
mov
and
cmpsb
in
loopne
push
lods
scas
stos
sbb
push
movsl
das
fwait
inc
js
push
scas
aad
scas
jne
nop
enter
clc
or
push
fwait
xchg
cmp
cltd
push
mov
inc
imul
movsb
call
repz
bound
cmpsb
dec
or
mov
sub
into
mov
dec
popf
add
push
addr16
mov
mov
outsb
push
fs
cwtl
nop
sbb
xor
scas
fcmovb
addr16
mul
dec
xor
mov
pop
cmp
xchg
sub
sub
push
mov
outsl
cmp
jae
imul
outsb
sti
sbbb
imull
lods
loop
das
or
inc
fstpt
mov
movsl
jnp
test
lcall
shll
and
call
inc
in
xchg
data16
inc
cmp
or
mov
out
mov
fs
bound
mov
clc
ret
outsb
mov
scas
ret
aad
repnz
test
cmpsb
cmp
jmp
movsl
push
sti
inc
xchg
and
clc
xchg
repz
out
call
jle
inc
cwtl
jae
std
jne
xchg
clc
pop
jb
cwtl
data16
jae
or
pop
xchg
dec
mov
out
jb
mov
jbe
jle
mov
movsb
mov
inc
aad
aaa
xor
bound
outsb
data16
ljmp
pop
in
arpl
mov
xchg
sbb
cmpsl
and
fldt
fcomip
lock
jg
dec
fistl
data16
ljmp
sbb
stc
insb
call
mov
cmp
data16
test
mov
adc
and
data16
repnz
sbb
es
jmp
and
data16
push
push
bound
xchg
cmc
les
fs
cmpsl
and
jae
or
jns
inc
mov
cmpsb
mov
scas
xor
sbb
add
mov
cli
out
adc
adc
sbb
test
add
aad
mov
enter
and
and
push
cmpsb
loope
xchg
mov
mov
call
std
or
and
push
mov
notl
mov
mov
dec
push
mov
fs
movsl
fsubs
imul
mov
out
sbb
or
jnp
cmp
testl
mov
or
sti
lds
push
fbstp
sbb
push
inc
stos
and
mov
subb
and
loope
fwait
and
inc
retw
mov
sbb
xor
mov
push
pop
mov
inc
mov
push
gs
popa
cmpw
mov
loop
bound
loop
sbb
movsl
and
push
mov
out
mov
repz
push
push
les
testb
and
add
mov
sbb
enter
ljmp
lcall
lods
shlb
arpl
sbb
int3
jecxz
xorb
mov
pop
adc
addb
xchg
push
jno
jmp
popf
add
jae
jno
or
and
pop
out
push
sub
gs
lock
or
sbb
and
cmc
xchg
dec
mov
adc
stos
inc
or
jae
loope
add
inc
inc
mov
xor
jp
and
sbb
es
jne
and
cmc
popa
cmp
data16
jg
into
shrl
out
aaa
jae
sti
loope
in
add
daa
hlt
lods
call
inc
lds
cmp
pop
test
mov
call
mov
or
jg
mov
sahf
test
test
cld
jnp
imull
loop
xor
data16
cld
jns
ja
lods
sub
out
adc
mov
in
cli
test
inc
je
fstpl
into
arpl
fsubrl
roll
loope
sti
sub
and
push
das
jmp
lods
sti
dec
ljmp
call
push
fmuls
mov
mov
inc
mov
push
lcall
sbb
int3
add
in
int
fidivrl
int
dec
pushf
jo
fs
xor
les
aam
es
into
push
imul
inc
jmp
adcl
icebp
imul
insl
add
push
push
popa
ds
and
fisubs
lcall
sbb
jge
mov
xchg
out
adc
pop
lea
mov
call
lods
mov
repz
jmp
lods
pushf
cltd
imul
insl
outsl
mov
push
and
mov
inc
lcall
mov
mov
pop
orb
imul
lods
fcmovnu
lds
in
sub
jp
sbb
pop
stos
outsl
lcall
push
pop
cmpsl
fisubs
lcall
cmp
or
sti
cld
sbb
fs
rol
cmpsl
fwait
fldt
xor
xchg
push
jbe
mov
cltd
test
and
fdivrs
dec
jg
jge
jbe
jno
idivl
aad
aad
cmpsl
sub
jns
push
xor
cmpsl
ret
sbb
xchg
loopne,pt
mov
inc
cs
shl
jmp
push
out
add
and
repnz
std
rorl
dec
addb
mov
test
cli
and
dec
inc
sti
sti
lds
jp
push
lea
lds
xchg
repnz
cmp
xchg
jnp
out
lahf
mov
cmpsl
test
bound
loop
jecxz
in
jbe
xchg
in
addr16
stc
xchg
call
xor
add
pop
and
cmpsl
jne
dec
mov
cwtl
jbe
insb
movsl
push
pushf
push
outsb
push
jmp
hlt
std
aam
es
test
movsb
and
cmpsl
mov
mov
jp
mov
adc
xchg
cmpsb
mov
xchg
cmpsl
xor
int
sub
xchg
push
cmpsl
imul
xchg
test
cmp
sub
ja
xchg
jae
xchg
lds
jecxz
jmp
or
out
enter
jbe
mov
add
pop
jbe
rol
jnp
mov
mov
aam
insb
jl
mov
lea
call
pusha
call
or
add
subb
aad
adc
shl
shr
fidivrs
fs
sub
rcl
lret
xlat
dec
xchg
cmp
pop
sbb
pop
add
addr16
clc
jae
dec
lods
aas
ja
jns
dec
out
mov
inc
adc
ficoms
mov
sub
arpl
or
push
pop
repnz
jle
popf
sbb
xor
or
xchg
push
mov
xor
je
js
mov
les
push
pop
push
mov
pushf
lea
call
push
push
push
adc
mov
call
bt
repnz
mov
lea
jne
jmp
pushf
movl
pushf
lea
jmp
adc
pusha
mov
lea
jmp
pushf
lea
jle
stos
push
mov
lea
jmp
pusha
mov
lea
je
jb
pushf
pushf
mov
pushf
pushl
push
pusha
xchg
jmp
movzbw
push
bswap
mov
lea
mov
pop
not
xchg
setae
pusha
mov
pushf
jmp
mov
pushf
pushf
call
pushf
push
pushf
lea
call
push
pushf
lea
jae
pushf
setbe
jmp
lea
jb
pusha
cmp
pushf
pushf
call
mov
call
call
push
mov
call
pushf
xchg
lea
outsl
insl
xchg
aaa
outsl
jns
test
jmp
inc
xchg
sub
in
sbb
femms
adc
in
sub
mov
dec
push
inc
push
adc
cmpsl
int
fisubs
out
stc
pop
idivb
jno
aaa
cmc
or
inc
cli
adcb
les
xchg
sub
or
sarl
mov
call
xor
push
call
sbb
dec
cmpsl
add
fdivl
sub
rol
int3
cmp
cmp
fmul
lcall
inc
pop
dec
iret
add
push
fdivs
mov
cmp
ret
jmp
jmp
dec
push
inc
jno
inc
popa
sbb
adc
pop
xchg
das
xchg
ret
jp
pop
push
lret
inc
sbb
in
call
movsb
roll
push
mov
mov
xor
cmp
mov
push
pop
inc
push
inc
inc
dec
jno
insl
popf
test
push
mov
call
xchg
push
pop
ss
lds
int
sub
ret
jmp
into
shll
sub
pop
mov
mulb
lea
shll
adc
push
xchg
dec
lret
dec
pop
dec
cmpsb
scas
mov
stos
dec
mov
push
mov
test
sub
pushf
cmp
lea
jne
pushf
pushl
lea
jae
pushf
movl
lea
jmp
mov
pushf
lea
jmp
rep
call
lods
xchg
pusha
pop
bound
mov
mov
mov
popf
mov
lea
jl
fdivl
inc
mov
scas
stos
sbb
loope
aaa
or
insb
movsb
lcall
mov
sbb
aaa
les
add
xor
add
ss
loop
or
push
mov
pushl
popl
pushl
pushl
ret
xchg
mov
mov
dec
bt
shl
jmp
pushl
popl
mov
pushl
ret
or
jmp
lea
jae
bt
cmp
call
or
pusha
pushf
movb
pushf
lea
je
push
not
pop
lea
lea
call
lea
jbe
push
mov
push
movsbl
lea
push
push
pusha
movl
jmp
not
movsbw
mov
pushf
lea
call
pushf
pushf
lea
jne
not
cwtl
lea
mov
pusha
lea
jmp
pusha
movb
lea
jae
bt
pusha
bt
xor
pusha
lea
call
call
mov
setl
bswap
jmp
add
jl
add
inc
push
add
add
jl
add
push
add
add
jl
add
xchg
adc
je
push
add
add
shr
xchg
add
push
lock
std
std
test
ffree
xor
mov
and
mov
pop
push
ss
aaa
scas
cmp
jge
cltd
in
push
fcmovnbe
pop
pop
leave
add
in
fisubrs
push
test
dec
insl
xchg
and
mov
leave
inc
inc
inc
idivb
xchg
push
imulb
pop
mov
sub
mov
mov
lea
jae
not
shl
mov
xor
mov
shl
rcl
mov
jmp
pushl
jmp
test
push
lea
je
lea
sbb
lea
or
mov
or
btr
add
add
movzbw
mov
cmc
bt
pushf
clc
test
pushf
call
call
cmp
push
pushf
push
pushf
lea
ja
pusha
add
lea
ror
mov
pushf
pusha
bt
cmp
pushf
pushf
lea
je
push
lea
jb
stc
jmp
pusha
movl
movb
push
push
push
lea
jmp
pusha
bt
add
jmp
pusha
pusha
mov
mov
pushl
movb
jmp
jb
push
test
mov
clc
push
add
shl
shrb
and
xor
or
clc
call
outsb
sbb
push
add
cltd
lahf
xchg
cmp
dec
adcl
repz
jmp
or
sub
rcl
push
mov
pop
pushf
pusha
push
movl
pusha
pushf
call
clc
jmp
push
imul
data16
sub
iret
xor
aad
pop
aas
imul
shl
lret
fmuls
and
dec
lret
int
mov
dec
and
daa
aaa
add
add
xchg
pop
xchg
or
dec
add
push
pop
insl
aas
stos
and
jae
xchg
roll
fcmovb
ljmp
fsubl
cmc
lods
cmpsl
outsb
std
cmc
scas
inc
adc
and
xchg
mov
in
stos
cmp
imul
ss
addr16
add
xor
dec
roll
stc
pop
cs
aam
push
ret
inc
jne
jecxz
movsl
mov
ret
mov
sbb
rcl
inc
les
jmp
sub
mov
fwait
mov
iret
inc
jle
push
jecxz
lds
stc
mov
inc
ret
out
push
ja
jns
mov
pop
ja
lods
insl
imulb
push
lret
jo
cmp
inc
cmp
orb
pop
and
movsb
add
daa
xchg
add
add
push
sub
or
add
jno
and
jae
ror
pushf
leave
pushf
jnp
icebp
bound
or
pop
cmpb
popf
jbe
xchg
es
outsl
sub
xchg
hlt
mov
test
fstpl
fiadds
int3
xchg
fs
stos
xor
xor
pop
iret
push
dec
loopne
add
adc
lock
sbb
xchg
test
mov
test
lods
xor
pop
movsb
push
mov
push
mov
pusha
movw
call
dec
repz
sbb
outsl
mov
popf
sti
insb
dec
push
pushw
lcall
data16
sbb
add
lods
and
jle
adc
jge
test
xor
lahf
je
inc
movsb
xor
mov
lods
mov
mov
addr16
loop
rcll
cmpsb
adc
dec
adc
lods
xchg
mov
push
mov
and
add
out
or
sti
add
icebp
jecxz
pop
add
and
xchg
jae
xor
xor
mov
lods
pop
mov
gs
sub
movsb
mov
cltd
repnz
movsl
int3
ss
iret
cmp
dec
and
jo
test
push
mov
dec
fisttps
mov
ss
pop
add
call
seta
pop
xchg
pushf
pop
pusha
mov
call
add
dec
gs
popa
addr16
outsl
js
add
frstor
add
repnz
lcall
lods
or
sahf
pushf
mov
sahf
mov
cmp
and
xor
scas
push
lea
cwtl
sub
aad
in
jnp
jmp
sub
dec
dec
pop
pop
xor
cmp
fucom
adc
mov
aad
push
call
movl
call
call
push
pushf
pusha
lea
jae
clc
clc
bt
cmp
xor
jmp
pusha
push
pushf
pushl
movl
pushf
pushl
popl
pushf
pushf
pushf
pushl
ret
movl
test
xchg
xchg
xchg
andb
add
insb
shll
dec
xor
add
jp
enter
fisubs
daa
nop
mov
repnz
popf
mov
lods
pop
mov
lods
push
cmpb
repz
mul
push
or
imul
call
sub
aam
cld
shrb
mov
inc
inc
pop
pop
inc
pop
dec
dec
sbb
movsl
dec
mov
lods
pop
inc
lock
dec
testb
cli
push
es
inc
mov
xor
and
mov
add
in
push
push
mov
pushf
mov
movzbl
pushl
popl
lahf
pushf
setnp
pop
mov
pusha
push
movl
mov
sets
cwtl
setno
lea
pushf
movl
pushf
push
pushl
popl
push
pushl
pushl
ret
pushf
movb
pusha
movb
inc
pusha
call
pushf
push
xchg
pushf
mov
lahf
call
stos
xchg
xchg
imul
int3
es
xor
sbb
or
mov
adc
in
fs
fwait
sub
addr16
in
add
or
push
repnz
sbb
fmul
fsub
hlt
jmp
xor
out
icebp
outsb
fldenv
sub
xor
jge
xchg
addr16
fadd
ret
sub
addb
sbb
add
sbb
out
lods
inc
mov
mov
mov
test
pop
cmpsb
jl
xchg
popa
xchg
xchg
fstps
clc
xchg
sarb
sub
mov
xchg
pop
inc
je
cmc
movsl
adc
fwait
push
lods
pop
inc
fbld
cmp
jo
jmp
xlat
add
sub
nop
jmp
jg
test
out
jmp
sbb
jne
push
xchg
iret
sub
mov
icebp
clc
sbbl
jle
in
sbb
and
mov
clc
dec
add
jnp
dec
cmp
xchg
xchg
mov
movsl
test
into
lret
sub
adc
dec
pop
stos
adc
pop
pop
outsb
cmp
inc
test
fwait
add
fwait
roll
sub
or
fwait
rolb
xorb
lds
inc
xorb
cmp
mov
inc
xor
and
sub
cs
outsb
js
cmpsl
pop
sbb
sub
outsb
dec
imul
push
jne
xchg
mov
add
imul
sbb
push
push
adc
sbb
rorb
xor
iret
ret
daa
sysret
das
cmp
xlat
daa
and
mov
mov
bswap
mov
jmp
and
loope
lds
jno
jge
gs
mov
mov
pop
pop
ds
sub
rclb
loope
rcl
mov
adc
or
and
xor
mov
mov
dec
pop
pop
xor
add
xor
xor
lret
or
mov
push
mov
mov
movb
call
and
add
cmpsb
js
add
add
add
xchg
adc
mov
sahf
sbb
mov
adc
add
add
push
mov
lea
jae
cmc
pusha
clc
xor
jmp
xchg
jmp
pusha
movb
dec
pushf
lea
jne
bt
sbb
bsf
mov
call
jmp
in
pushf
jmp
pop
push
bswap
lea
pusha
mov
pushf
call
leave
sub
xlat
and
push
shlb
jne
mov
jge
addr16
imul
push
fldl
mov
xorl
sub
dec
adc
xor
and
popa
jnp
mov
movsl
test
sub
hlt
adc
and
imul
inc
aas
mov
enter
inc
addr16
aaa
test
sbb
mov
outsl
pop
mov
and
mov
in
push
mov
scas
xchg
fwait
jno
inc
or
jmp
jmp
out
pop
or
sub
cmpsb
movsb
fdivl
sub
hlt
nopl
loopne
pushf
mov
imul
inc
sub
sub
adc
fidivl
and
repnz
repnz
fcmove
es
mov
call
jmp
pushfw
popw
seto
and
neg
pusha
mov
cmc
pushf
neg
jmp
lea
lea
movw
jmp
lea
jae
push
push
pushf
lea
jne
pushf
stos
pusha
pusha
pushl
lea
jmp
aam
cltd
test
xchg
imul
test
test
push
test
test
orl
gs
test
imul
jge
mov
add
inc
sub
jg
ret
and
fs
jmp
clc
cmc
pusha
or
pusha
call
shr
pusha
pushf
lea
je
push
movw
pushl
adc
pushf
movb
pushl
push
lea
jmp
or
roll
int
xchg
outsl
mov
adc
add
hlt
loop
or
int3
xor
test
out
jns
xchg
pop
inc
push
in
sbb
in
shl
push
pop
jp
bound
jno
adc
loope
pop
shl
cmp
jne
addr16
add
mov
push
inc
mov
mov
inc
ficomps
and
mov
pop
add
xor
jbe
inc
add
nop
mov
pop
test
adc
dec
inc
fcmove
add
xchg
adc
mov
xchg
pop
mov
shll
aad
outsb
xor
fsubl
sbb
test
dec
inc
pop
jle
jns
cmp
pop
push
or
inc
pop
imull
cmc
inc
test
iret
jmp
inc
mov
jecxz
push
push
dec
mov
add
pushf
popa
repnz
dec
sbb
adc
clc
lock
out
cltd
mov
mov
les
jnp
xchg
ret
dec
mov
sbbl
xchg
cmp
adc
sbb
sbb
loop
or
testl
mov
mul
sub
jne
repnz
sbb
jle
div
in
cs
dec
call
fcom
aas
test
push
pop
dec
clc
dec
xor
mov
movsb
stos
mov
mov
dec
and
movsl
push
psubq
adc
pop
insl
aaa
into
xchg
lds
xchg
jl
int
iret
leave
ret
shll
pop
mov
push
pop
in
sub
ja
mov
lahf
add
popf
push
mov
pop
out
lret
xchg
inc
lods
int3
imul
daa
decl
sbb
pop
add
cmpsl
mov
mov
sbbb
loop
cmpsb
das
jge
lcall
add
add
fcmove
fcmovu
es
mov
push
push
pushf
movb
movl
pushf
push
lea
jmp
call
fadd
xor
sub
mov
sbb
cld
out
adc
lock
fisubrs
repnz
add
push
sbb
xor
dec
mov
ret
lea
inc
shll
dec
xchg
dec
adc
sbb
xchg
lret
sub
js
enter
mull
pop
inc
idivb
test
in
jmp
in
cltd
ja
jne
xlat
sub
cmp
iret
sub
jne
mov
aas
int
cs
sub
iret
rorb
fwait
ret
push
pop
test
popf
mov
mov
sahf
xchg
sbb
sbb
mov
pop
call
ffreep
cltd
inc
and
loopne
popa
js
jnp
pushf
add
mov
push
psllw
xor
push
nop
cmp
sbb
mov
or
inc
cld
xor
cmpsl
mov
mov
dec
adc
cmp
popw
sahf
cmpsb
xchg
jbe
pop
dec
out
push
daa
shll
and
sar
out
neg
push
lds
or
mov
int
outsb
xlat
scas
lret
out
or
sbb
mov
pushf
movl
push
movb
mov
push
lea
jmp
jp
loope
xchg
push
push
jnp
subl
jg
mov
inc
mov
sub
int
lods
stos
mov
mov
mov
ret
xchg
lret
xchg
sbb
rcrb
and
xor
loopne
in
into
push
mov
push
lea
je
lea
mov
bswap
movzbw
push
lea
pusha
lea
jge
push
movzbw
pushl
bswap
not
movzbw
cwtl
push
pusha
pop
movl
call
pusha
mov
pusha
pushf
movl
pushl
ret
push
bswap
lea
bswap
pop
pusha
mov
movb
call
push
pusha
pusha
lea
je
pushf
pusha
pushl
add
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
call
movb
movb
mov
movsbw
push
bswap
pushf
mov
push
mov
pushf
movb
pushl
ret
inc
js
jo
rolb
sbb
icebp
add
pop
sbb
sbb
incb
pop
pushf
lahf
out
int3
mov
aas
test
cs
and
test
outsb
xchg
outsb
jb
fcmovb
sar
sarb
ret
cmp
cmp
dec
arpl
lret
push
mov
pop
inc
dec
inc
into
push
jecxz
jmp
aam
and
mov
lods
cli
movsl
es
daa
pop
inc
mov
xchg
cmpb
xchg
iret
mov
cmp
fildll
xor
mov
addl
lods
scas
icebp
popa
jp
popf
add
mov
hlt
in
xchg
imul
movsl
rol
enter
in
mov
into
hlt
in
nop
mov
out
in
jecxz
xor
fiadds
negb
jg
or
pop
sub
imul
mov
je
cmpsl
xor
mov
or
sti
push
cli
call
mov
or
sbb
pop
lods
push
dec
push
jl
xlat
push
sub
iret
cmpsl
stos
xor
dec
fbstp
cmp
in
sarl
sbb
dec
imul
xchg
lret
xor
mov
les
int3
mov
push
shrl
outsl
mov
sbb
cwtl
or
clc
dec
dec
push
dec
jbe
pop
jmp
cmpb
pop
pop
movsb
push
pusha
mov
lods
ss
xor
les
jo
pushf
xchg
lcall
inc
ds
out
enter
fstps
pop
jg
add
shlb
aam
sarb
into
shll
sub
and
jecxz
sub
cmc
mov
stos
mov
icebp
imul
clc
out
call
mov
mov
add
dec
pop
out
pop
mov
mov
movsb
mov
lret
and
es
dec
sub
sbb
jl
xchg
push
movsl
dec
sbb
push
mov
mov
loop
pop
into
rclb
sub
insl
push
aas
sahf
dec
fistps
mov
sarl
sbb
sub
xlat
testb
dec
aad
das
cmp
aaa
aaa
xor
xor
scas
fisttpll
sahf
push
add
popf
fwait
fs
add
sbb
adc
mov
lea
je
btc
add
pusha
setg
mov
test
mov
add
cmp
clc
call
push
movb
push
jmp
movb
lea
ja
clc
add
test
clc
cmp
bt
or
jmp
cwtl
cmpsb
mov
xchg
push
lds
cmp
cmp
out
jecxz
adc
xor
adc
jmp
adc
or
or
mov
lret
and
cmc
shrl
mov
test
xor
movsl
das
add
xchg
or
xchg
fisubl
fnstsw
aas
jnp
xadd
cmpsl
test
test
sbbb
aam
xchg
scas
or
jle
into
xor
fnstcw
adc
ret
das
inc
rcrl
push
outsb
jl
xchg
in
add
lret
aad
cmp
in
cli
mulb
xor
mov
insb
jmp
mov
add
xor
sbb
inc
sub
xor
icebp
aam
adc
jbe
int
into
sahf
popa
popf
lret
jns
mov
ljmp
dec
mov
lock
mov
loope
xchg
test
out
in
ljmp
pop
cli
rcr
xchg
adc
or
xlat
or
daa
clc
mov
shll
xor
jp
rolb
jae
mov
fildl
pop
popf
data16
jl
jo
lcall
stc
mov
inc
add
sub
and
sub
enter
push
imul
push
xorl
jno
hlt
jmp
out
iret
pop
daa
sbb
divps
sub
sahf
mov
inc
aad
daa
cmp
adc
imul
int3
mov
jno
shl
dec
adc
rcl
inc
mov
pop
jns
jns
test
jno
rcl
sub
movsl
xor
jns
jnp
xchg
loopne
fs
in
inc
push
inc
push
inc
push
mov
scas
dec
cmpsl
mov
je
sti
insb
dec
inc
mov
mov
mov
inc
mov
into
push
mov
ss
adc
pop
add
int3
pop
das
shll
jb
sbb
inc
addb
and
aaa
or
jns
push
lcall
jge
sahf
mov
or
inc
aam
mov
pop
ffree
lock
push
shlb
push
fdivrl
cltd
adc
jmp
push
and
or
mov
stc
sbb
cmp
ds
dec
mov
lcall
inc
or
jbe
xchg
shll
in
hlt
push
add
or
mov
ret
stos
lea
fisubrl
add
fmulp
sub
xor
sbb
add
sbb
push
mov
inc
int
mov
lods
push
mov
pushl
popl
movb
pushl
ret
jmp
cmp
push
jmp
pushf
mov
mov
push
mov
pusha
pushl
ret
pusha
jmp
inc
lea
push
push
pusha
call
inc
movb
push
stos
setne
pushl
mov
lea
jmp
es
lcall
pop
dec
inc
dec
outsl
dec
cmpsl
pop
inc
test
in
push
xor
or
out
xor
lahf
xlat
mov
adc
pop
inc
and
xorb
addb
insb
jle
mov
pushf
call
sar
push
add
xlat
mov
mov
jp
xchg
jl
test
dec
mov
icebp
aam
scas
cmpsl
cmp
mov
xchg
sbb
lods
push
add
jns
cmp
out
les
lods
dec
inc
pop
fs
pusha
bound
je
mov
push
dec
mov
mov
add
and
adc
mov
push
push
lea
jae
mov
pusha
seto
mov
mov
call
test
test
bt
sub
clc
cmc
repnz
push
pushf
jmp
repz
cmp
xchg
hlt
arpl
lods
scas
mov
cmpl
mov
cld
adcb
fdivl
ja
xorb
loopne
mov
les
rcr
popf
dec
xor
int3
es
clc
hlt
in
hlt
lock
in
adc
dec
adc
push
mov
test
bt
xor
mov
jp
pop
movsbw
bswap
pop
not
xchg
pop
call
call
push
pushl
popl
pushf
pushf
movb
pushl
ret
lea
je
push
pusha
cmp
call
pusha
pushf
stos
pushf
push
lea
jmp
adcl
movsb
dec
pop
mov
add
les
jnp
out
xchg
int3
aas
lret
add
aaa
das
xlat
and
dec
dec
fldcw
sub
dec
sbb
ss
push
mov
or
call
call
lea
jne
adc
movsbl
xor
inc
mov
stc
push
jmp
stos
call
stos
and
push
cltd
mov
lea
mov
pushf
xchg
push
lods
dec
cmp
jo
lahf
gs
outsl
fsubrs
xor
xor
xchg
outsl
dec
test
mov
iret
pop
lahf
insb
mov
mov
mov
aas
cmp
imul
mov
repnz
dec
jge
xchg
mov
pop
adc
int3
sbb
or
push
cmp
sub
cmp
rol
xchg
leave
ror
mov
mov
push
scas
pop
cmp
or
int3
in
test
xor
in
xor
push
roll
cmp
lock
mov
into
rcl
xlat
rcr
push
mov
lods
scas
test
jp
jmp
mov
imul
cmp
out
cmp
inc
mov
lret
add
xor
cmp
lret
and
push
jge
and
stos
add
mov
push
jns
lea
jne
push
and
sub
push
into
stos
cmp
cmp
icebp
push
sub
mov
add
clc
push
push
mov
cmc
neg
push
call
stc
mov
bt
bts
push
movzbw
mov
lea
clc
ror
pushf
mov
pusha
stc
push
mov
clc
jmp
pusha
pusha
lea
ja
inc
pusha
pusha
inc
dec
pushf
inc
shr
xchg
ror
bsr
shl
mov
mov
or
clc
mov
jmp
pushl
pushl
popl
pushl
pushl
ret
push
lea
ja
jp
movsbl
pop
bswap
pushf
xchg
movzbw
mov
sets
not
pushf
mov
lea
push
setbe
mov
push
pusha
mov
bswap
pusha
bswap
movzbl
mov
pushf
movb
pushl
pushl
ret
push
lea
jne
push
stos
push
pusha
movb
lea
jmp
pushf
mov
movl
jmp
lea
jae
sar
lea
bt
bswap
mov
bts
sar
mov
movzbl
shld
movsbw
mov
cmc
xor
clc
repnz
call
jmp
jg
lret
mov
out
sahf
push
jecxz
pop
jo
jg
cmp
outsl
mov
xchg
in
xchg
popa
clc
jg
fdivrl
fisttps
pusha
sub
fs
push
out
sub
push
arpl
lds
jnp
or
gs
add
rcll
loop
cmp
std
inc
inc
inc
mov
cmpsb
mov
push
and
pop
scas
lret
or
lea
out
or
mov
jns
je
dec
insb
cs
fldt
dec
xor
cmp
inc
dec
mov
or
lahf
arpl
out
or
rcr
push
fldcw
loop
mov
inc
mov
sub
sbb
sbb
cmp
xlat
stc
sti
testb
pop
inc
pop
test
dec
das
xchg
in
push
addr16
out
fs
fdivl
sub
xorb
inc
xor
jl
jg,pt
cmp
add
aas
jl
jp
pop
push
arpl
xor
xor
cmp
or
jno
pushf
gs
jg
add
shl
pop
cmp
das
mov
pushf
data16
fstps
sbb
fistpll
jae
inc
test
lods
faddl
iret
test
jmp
mov
pushf
rclb
xchg
loope
jo
push
jg
cmc
out
outsl
lahf
pop
mov
gs
lcall
jg
or
xchg
arpl
lret
dec
adc
clc
loope
cmp
mov
jl
dec
pusha
sub
mov
jle
jg
test
mov
sbb
out
lcall
sbb
sbb
gs
xor
pop
mov
add
mov
clc
jbe
pop
fwait
bound
mov
adc
inc
in
in
js
fiadds
pop
sbb
hlt
out
sbb
cmp
xchg
add
mov
test
fisttpl
das
or
cmc
mov
stos
loopne
stos
add
test
in
and
sub
jmp
ja
loopne
mov
mov
mov
xchg
imul
mov
repz
jl
jle
sbb
roll
push
mov
repz
sbb
sbb
outsl
push
sub
mov
dec
jnp
cli
fsts
adc
mov
jae
cmp
cmpsb
sahf
fs
lcall
mov
add
movsb
jo
repz
or
fistl
jle
xor
push
in
jl
lret
mov
inc
stos
sub
inc
cmpsl
notl
jecxz
cmpsb
gs
xchg
cli
pushf
std
fwait
jmp
adc
imul
cld
mov
xchg
push
xchg
xchg
add
loop
mul
mov
arpl
xchg
inc
xchg
mov
shr
insw
clc
adc
jo
shll
cmp
adcb
fisttpll
repz
ss
mov
jg
push
mov
out
out
ja
pop
stos
addr16
pop
fs
add
nop
fmull
add
inc
outsb
je
test
sti
outsl
ds
scas
adc
je
aaa
pushf
leave
aam
push
imul
stos
dec
xchg
mov
repz
pushf
push
dec
fs
js
std
fwait
sbbb
imul
pop
push
add
pop
test
cld
lods
xchg
push
xorb
pop
jg
pusha
mov
cs
sbb
mov
mov
jg
jnp,pn
push
outsb
cmp
push
jecxz
int3
mov
data16
and
pop
push
pop
pop
fstpl
fwait
or
mov
lds
mov
iret
imul
clc
out
jl
das
pop
jge
addr16
mov
jbe
out
lods
mov
jo
sahf
out
in
into
in
ds
pushf
lds
or
jb
pop
cmp
addr16
call
lcall
mov
jg
xor
xchg
pushf
popl
push
mov
sarb
pop
pop
mov
js
push
sti
mov
jne
jbe
fstpl
out
mov
adc
outsl
sub
arpl
out
pushf
and
cmp
mov
loope
aaa
repz
fistpl
cmp
sarl
sbb
in
je
sbb
fs
sbb
add
jecxz
mov
jno
imul
mov
movl
mov
iret
mov
mov
das
sbb
pop
lret
out
out
pop
mulb
xchg
subb
push
pop
out
jg
call
arpl
jnp
mov
stc
jnp
or
xchg
mov
mov
ja
mov
sub
push
jnp
in
jg
ds
xor
push
lcall
add
lods
xchg
outsb
clc
out
addr16
lcall
cli
mov
out
in
cmc
xchg
adc
insb
stc
in
push
mov
jg
inc
cli
arpl
adc
cmp
ja
lcall
iret
jle
fwait
inc
inc
xchg
jg
pushf
decl
cmp
lds
icebp
mov
mov
xchg
jg
aas
lret
jns
xor
mov
push
jl
pop
subb
lret
movsl
xor
out
insl
ja
imul
sbb
mov
lea
cmpl
sub
cmpsb
sub
fnstenv
cmp
ficoms
addr16
outsl
xchg
das
add
push
mov
outsl
pop
loopne
bound
in
adc
imul
xor
xchg
add
loopne
or
loope
data16
popa
mov
outsb
ja
out
xor
jp
je
lahf
fwait
out
out
cmpsb
jmp
mov
shrb
in
jo
outsb
negl
out
lcall
push
push
xchg
jns
xchg
cmp
jg
xor
popa
negl
jo
and
push
leave
xor
mov
jg
bound
inc
daa
in
adc
mov
aas
repz
out
jns
xchg
test
jne
inc
jne
sub
fdivrl
jae
inc
lcall
lcall
out
aas
inc
adc
shlb
or
movsb
sbb
lock
jns
cmp
push
jp
mov
popa
pop
loop
cmp
mov
es
enter
mov
outsb
sbb
or
and
insb
in
mov
cli
and
orl
nop
lock
xor
fwait
inc
push
addr16
jg
add
sub
xor
lret
jno
push
loopne
and
mov
sahf
call
je
repz
sbb
loopne
lods
bound
sarl
pop
stos
mov
cmp
xchg
scas
push
sbbb
xor
xchg
push
scas
cmc
or
xorl
pushf
mov
cmc
pop
in
nop
xchg
mov
fsubrp
xchg
in
inc
xor
cmp
mov
data16
out
jg
je
test
lret
out
bound
xchg
adc
lret
cwtl
pop
lahf
dec
inc
shll
dec
adc
jle
cld
ret
lea
push
xlat
mov
repnz
les
jmp
jne
cltd
iret
sub
rclb
popa
xchg
scas
into
data16
lods
adcl
xor
mov
outsl
push
fwait
dec
xchg
cli
loop
idivl
xchg
call
xor
jmp
ja
repz
movsb
jle
mov
jo
add
xchg
out
mov
push
and
push
fwait
out
jnp
pop
mov
movw
outsl
fadd
insl
mov
js
jbe
xlat
lea
in
sarl
dec
jnp
cmp
clc
addr16
or
jmp
dec
js
xchg
xor
mov
call
and
hlt
jne
cmpsb
mov
mov
xchg
cmp
test
xchg
sti
mov
aaa
in
jl
outsl
les
sub
adc
bound
mov
loop
jae
mov
scas
mov
pop
addr16
mov
outsb
pop
subb
div
dec
outsb
shlb
je
xor
cmp
pop
fcmovnb
dec
or
mov
pop
stc
outsl
add
mov
mov
jl
pop
shr
mov
outsb
fcoml
mov
cmp
add
cmc
cwtl
repz
jge
and
aaa
lret
add
and
jmp
insb
dec
mov
xchg
loop
xchg
mov
pop
enter
out
jg
stc
movsl
call
fwait
sbb
adc
movsb
mov
push
hlt
and
fs
xor
sbb
out
shlb
pushf
or
jbe
outsl
popf
sub
ja
nop
mov
out
pusha
lods
jo
mov
ud1
xor
iret
cmp
lcall
add
out
push
cmc
loope
pop
adc
and
sub
cwtl
shll
pop
fimuls
mov
imul
lcall
es
pop
xorb
pop
cmc
cmp
nop
jo
lcall
imul
sbb
mov
mov
inc
cmp
outsb
hlt
hlt
jnp
outsl
stc
sub
fs
sub
lcall
sbb
in
xlat
mov
jecxz
in
inc
inc
add
jmp
cmpsb
xchg
xchg
or
xchg
test
fwait
addr16
push
xchg
ss
hlt
mov
popf
stos
fisttpl
jne
lea
lcall
pushf
lods
add
mov
enter
and
rcll
inc
call
fimuls
push
fstpt
arpl
and
ja
imul
sub
or
mov
dec
mov
out
fwait
sbb
mov
loop
and
lods
dec
cmp
lcall
data16
or
imul
push
mov
nop
idivb
les
cmp
iret
jnp
aas
sub
xor
xor
xor
inc
mov
out
push
bound
hlt
cld
jno
mov
xor
sub
mov
sub
insb
mov
adcl
lahf
cmp
adc
cmp
sbb
sbb
add
mov
xor
pop
inc
movsl
jnp
mul
movsl
outsl
les
xor
cmp
push
jb
pop
in
add
xchg
imul
jbe
out
fbld
mov
iret
cmpsb
jns
xchg
mov
xchg
out
jmp
ja
fs
fcmovne
cli
outsb
jns
shll
mov
arpl
mov
pushf
stc
mov
rorl
insb
cld
fisttps
in
push
cmp
dec
mov
fptan
icebp
sub
adc
adc
push
mov
sti
pushf
pop
hlt
stc
push
fistpl
push
mov
jbe
iret
test
xchg
pop
mov
popa
add
aaa
fistpll
out
mov
xor
outsl
es
ret
pop
aaa
shlb
enter
mov
jmp
sbb
sbb
dec
push
pop
inc
jp
pop
mov
insl
lcall
roll
repz
daa
sbb
pop
outsl
imull
inc
scas
mov
ret
jo
out
mov
fistl
imul
popa
cli
pop
mov
icebp
mov
sarb
pop
popa
lcall
insl
mov
sbb
insb
jnp
call
inc
xchg
sbb
inc
mov
insb
xor
and
xchg
mov
out
cmpsl
push
arpl
push
cwtl
out
jg
fldl
in
roll
sbb
lds
sbb
int
inc
mov
push
or
sti
lcall
pop
in
pop
xchg
cmp
and
adc
mov
inc
pop
sbb
iret
test
dec
outsb
push
xchg
jns
cmp
mov
mov
xchg
push
jmp
and
push
rol
mov
dec
lret
out
pushf
popa
pop
xor
add
fwait
loope
in
pop
lahf
cmp
and
mov
aas
and
jg
or
lds
inc
add
lcall
sub
ficompl
mov
divl
incb
jbe
mov
insb
cmp
lods
or
in
rcll
int
in
outsl
call
mov
mov
scas
clc
fnstenv
icebp
mov
fcompl
outsb
adcb
mov
fwait
jns
jmp
jp
cmpb
cmp
cmp
fistpl
sbb
jae
mov
idivl
xchg
mov
cmp
ds
out
sbb
ljmp
xchg
mov
xchg
mov
mov
push
sbb
lods
call
in
fisubl
jge
fucomi
xchg
push
inc
xchg
data16
mov
aam
cmp
sbb
nop
push
adc
mov
jae
cmc
mov
sbb
call
test
sbb
lds
lcall
jnp
fisttps
cwtl
sub
push
jle
inc
aad
or
js
outsl
adc
xchg
or
cltd
jns
scas
push
lcall
and
push
jecxz
pop
fdiv
push
mov
push
inc
xlat
xchg
mov
push
pushf
mov
stos
xor
out
fwait
jl
dec
popa
lahf
loope
and
in
dec
dec
jecxz
fwait
jmp
out
xchg
pop
outsb
sbb
sbb
dec
jo
call
pushf
clc
popa
mov
mov
mov
pop
fldt
cmpb
outsl
sti
jbe
repz
adc
cmp
fistps
addr16
loop
cmp
fildll
jo
lea
dec
repnz
sub
in
cmc
mov
cld
insl
fnstenv
fst
push
jae
sbb
addr16
or
sbb
jb
shll
mov
movsl
adc
ret
jg
stos
xchg
pop
xchg
adc
fcmovbe
clc
mov
test
rcrb
imul
mov
push
jg
mov
ljmp
insb
jns
ja
outsb
and
outsl
xlat
inc
sahf
mov
out
nop
push
jge
fabs
pop
jo
jg
lcall
push
ret
mov
lret
xor
jae
ficompl
bound
cmpsb
jmp
int
jle
cwtl
mov
mov
movsl
scas
rolb
or
outsl
or
xchg
xchg
out
mov
cmp
lock
in
pop
or
mov
push
insb
or
push
imul
and
mov
xor
dec
aad
xchg
lea
mov
inc
xor
add
pusha
ficoml
in
xchg
inc
cmp
mov
mov
in
aad
lret
fs
test
pop
sub
popa
pushf
xchg
imul
ds
push
push
mov
and
mov
sarb
rorb
xor
out
xchg
cmp
cmp
sbb
lods
add
lds
cli
adc
sub
popa
mov
insb
insl
std
mov
out
pop
jns
hlt
testb
out
pop
push
jns
cmc
repnz
sub
pop
insb
outsb
jle
jae
cmp
adc
pusha
xchg
data16
sbb
and
jl
mov
addr16
fstpt
loop
xor
inc
iret
lcall
sbb
sub
jno
inc
sub
call
push
pushf
repz
daa
mov
adc
jns
pusha
inc
sbb
sub
pop
lcall
in
push
add
ret
xchg
cmp
inc
jg
pop
jae
imul
xchg
and
sub
sahf
repnz
or
jne
repz
inc
sub
jo
movsl
sbb
sbb
loopne
jl
xchg
cmpl
push
cmp
dec
or
mov
test
insl
lahf
imul
jo
pushf
gs
fdivl
inc
push
sti
fs
or
or
xchg
sarl
in
dec
dec
cmp
daa
repz
outsw
jns
in
add
aad
sub
mov
inc
cmp
mov
fildl
mov
xchg
lcall
add
fildl
enter
jg
clc
sub
pop
test
xor
adc
and
cmp
cwtl
lds
in
jge
cmp
cmp
outsb
pusha
scas
inc
xor
loope
shll
dec
cmp
xchg
int
popf
inc
lea
into
cld
imul
mov
in
outsl
mov
mov
and
lock
mov
push
cmp
pop
insb
cli
mov
mov
xchg
cmp
lahf
clc
mov
sub
cltd
and
mov
jo
outsl
lret
cmp
rolb
stos
push
out
sub
mov
cld
pop
dec
shll
cmp
call
xor
sbb
test
icebp
jb
jecxz
lods
ret
xor
inc
cli
rclb
aaa
data16
test
mov
add
outsl
int
adc
addr16
out
cmp
jle
notb
jmp
jne
jne
cli
cld
inc
mov
dec
test
sbb
sub
xor
cmc
sbb
je
jp
fs
fs
sub
cmpl
jne
and
ja
jmp
ds
out
adc
scas
cmpsb
data16
dec
jbe
jnp
repz
push
out
adc
and
pop
adc
push
mov
and
cmpsb
cltd
lock
lea
inc
sbb
addr16
push
imul
pop
xlat
inc
push
daa
cmp
add
iret
pop
mov
and
addr16
data16
outsl
jno
ret
mov
lret
loope
je
mov
mov
cmpsl
jnp
jle
out
xor
lea
lahf
push
lret
ror
jb
mov
jbe
pop
xor
outsw
mov
push
mull
sub
rolb
outsl
data16
out
stos
arpl
arpl
scas
arpl
shll
jge
jbe
arpl
xchg
jb
jecxz
loope
arpl
in
out
inc
xor
imul
ret
jb
in
mov
mov
imul
incb
out
jle
jecxz
jb
js
insb
nop
jecxz
bound
xchg
push
pause
je
out
pmuludq
insl
mov
jp
jae
xchg
outsb
jne
shrb
shl
jae
ljmp
je
popa
popf
ja
mov
ja
jne
cmc
cmpsb
xorb
pop
in
scas
gs
cmc
addr16
jmp
stos
jle
and
outsl
jo
mov
jns
jmp
out
push
push
mov
popf
andl
adc
mov
sti
bound
pop
divb
test
je
add
sbb
gs
and
lea
lea
in
insb
cwtl
jl
loop
icebp
out
outsb
cmc
icebp
int
lea
test
cmc
cmc
loope
je
dec
leave
pcmpgtd
mov
push
jmp
push
nop
pop
jl
scas
inc
lods
jecxz
lcall
stos
lods
xchg
mov
pop
je
jb
in
cmp
push
xor
sbb
xor
mov
stc
int3
fcmovnu
push
cmp
pop
loope
jg
and
mov
cmp
insb
add
cmp
aad
xor
in
jno
inc
sub
jecxz
scas
sbb
pop
jg
jb
xor
cs
dec
test
xchg
ds
int
sub
sti
aas
lods
lcall
jp
clc
sbb
outsb
mov
decl
fwait
gs
movsb
cmpsb
jne
rolb
inc
mov
push
imul
icebp
xchg
je
lcall
popa
mov
icebp
dec
imul
jae
clc
in
out
jne
add
mov
lahf
xchg
lcall
bound
jae
insb
cmc
std
mov
jo
jno
lcall
jb
jns
adc
nop
pop
in
imul
push
call
or
cmp
lcall
jmp
pop
xor
jae
sub
push
and
cmp
jbe
stos
push
mov
mov
mov
test
push
repnz
add
inc
into
cli
push
lret
jns
nop
and
stos
add
cltd
inc
ret
pushf
rolb
fldl
into
fwait
mov
xchg
das
and
adc
lea
sbb
jmp
cmp
mov
lock
cmp
ret
hlt
pop
fwait
dec
into
xor
add
push
inc
imul
fldt
nop
lret
movsl
daa
das
mov
and
outsl
mov
pop
cs
sub
out
cmc
inc
dec
lea
insb
adc
xchg
add
mov
jle
fsubrl
mov
sub
lcall
dec
in
inc
adc
jg
mov
pop
inc
scas
cld
push
repz
mov
shll
imul
xchg
push
sbb
and
movsb
cmp
insb
sbb
icebp
sub
mov
icebp
rol
jbe
fs
xchg
jge
imul
or
xchg
test
jns
je
jae
xor
add
lret
cmp
shrl
pop
hlt
out
ret
pushf
lds
jmp
jno
dec
jo
mov
xchg
test
aaa
xchg
and
jno
sahf
cli
inc
fsubr
lcall
mov
test
jo
daa
sarl
xor
movsl
mov
jnp
push
mov
sbb
call
lea
loope
mov
mov
shll
aad
data16
je
fwait
xor
mov
pop
sbb
mov
mov
xor
push
outsb
push
scas
fnstcw
push
gs
inc
gs
gs
jp
xorl
and
sub
dec
ret
xchg
loop
mov
imul
out
insl
cmp
mov
push
lret
ret
jnp
push
fldt
dec
gs
dec
in
shl
jle
in
cltd
add
adc
ds
xchg
mov
inc
add
shrb
push
out
mov
test
lahf
push
pop
xchg
push
pop
mov
mov
cs
push
loop
imul
ja
stos
add
popa
imul
push
stos
imul
dec
xchg
lods
sub
jle
jmp
daa
lods
outsb
int3
in
popa
add
out
adc
push
and
test
stos
daa
mov
mov
inc
repz
push
jg
scas
fs
outsl
aaa
bound
ffree
jle
xchg
pop
sbb
rolb
jmp
outsl
fcom
mov
pop
pusha
mov
mov
cmp
jnp
outsl
pop
pop
fldcw
outsb
test
fmull
or
sub
lret
xchg
mov
jmp
lret
cld
mov
icebp
in
fs
lcall
push
arpl
cmp
pop
aas
pushf
fildll
adc
dec
aaa
adc
cmp
outsl
scas
and
push
hlt
aad
cmp
jno
mov
gs
stc
xchg
jo
push
jmp
in
aas
push
aad
sub
insl
mov
xor
mov
xchg
std
pop
xor
xchg
jnp
jo
imul
push
test
je
mov
push
insl
sub
cmc
jnp
repnz
add
sbb
or
lret
dec
in
mov
adc
adc
dec
clc
bnd
aad
dec
mov
mov
jno
ja
push
jno
sti
jae
jae
in
mov
orb
mov
mov
push
jg
add
out
data16
xor
bound
push
scas
xchg
mov
mov
xchg
push
mov
movsl
sub
jne
test
movsl
jo
in
mov
dec
jmp
mov
xchg
popa
stos
mov
jae
lds
js
stc
sbbb
fs
xchg
push
jns
movsl
pop
xorb
pop
mov
sub
pop
out
in
out
call
pop
and
push
data16
cltd
lds
arpl
lret
jl
in
jnp
lcall
fwait
jmp
outsl
sqrtps
cmp
popa
std
sub
mov
sub
icebp
mov
mov
std
push
cmpsl
xchg
daa
stc
std
mov
outsb
mov
lret
sbb
and
insb
fadd
mov
sarl
push
test
mov
jnp
gs
sbb
mov
test
leave
jnp
xor
sahf
or
xchg
lcall
jo
jg
jg
pop
pop
jmp
cld
dec
push
mov
mov
loope
jmp
out
imul
in
push
fcmovne
mov
jmp
adc
nop
imul
sti
inc
or
fucom
insl
jnp
insb
sub
aaa
mov
inc
mov
int
push
adc
xor
mov
jo
jb
pop
data16
jg
inc
divl
in
jp
pop
cld
xacquire
stos
imul
incb
pop
iret
outsl
mov
dec
ljmp
mov
and
jns
cmpb
cmp
xchg
fldln2
xchg
std
rclb
pop
stos
sbb
cltd
mov
in
xor
ficoml
repnz
frstor
xor
repz
pop
xor
xchg
out
xor
inc
mov
jbe
adc
jg
push
shll
das
lcall
mov
push
push
mov
call
outsl
imul
pop
pop
jmp
imul
mov
aad
sub
test
insl
lods
push
push
repz
imul
inc
popa
push
stc
push
aad
jne
data16
push
jb
dec
into
mov
jg
sbb
pop
enter
aas
cmpsb
imul
das
pusha
aam
xchg
and
fildl
jmp
jle
movsl
loop
loope
pop
inc
lcall
in
xchg
rol
mov
mov
push
fnclex
lcall
pop
js
dec
fwait
fs
xchg
inc
pop
jg
into
mov
or
jo
mov
xlat
jb
hlt
imull
popa
mov
movsl
jge
out
insb
lret
insb
outsl
insl
xchg
push
jle
xor
xchg
sub
out
jecxz
mov
test
fs
sbb
sbbl
sub
mov
cmpsl
aam
cli
adc
subl
jg
cltd
xchg
ljmp
pushf
sbb
jge
pop
mov
inc
ret
frstpm(287
mov
loope
mov
mov
dec
dec
lods
rcl
lods
mov
jne
push
cmp
jae
in
jo
add
xchg
jo
pop
stos
add
insl
dec
out
mov
sub
sub
mov
pop
lods
xchg
and
out
xlat
xor
hlt
jno
out
sub
scas
cmp
push
sub
dec
sbb
aaa
loopne
mov
and
movsl
xlat
pop
sbb
inc
jo
or
aad
sbb
sub
jl
mov
jge
enter
add
sti
xchg
adc
jo
dec
int3
scas
icebp
jne
subl
mov
mov
movsl
outsb
inc
adcb
push
dec
jns
movb
pop
jg
insl
insl
lahf
loopne
in
int
repz
mov
xchg
cmp
pop
adc
adc
or
fs
not
jns
xchg
imul
movsb
push
and
jne
adc
test
mov
xchg
mov
fildl
sub
inc
adc
insl
das
mov
cmc
pop
sti
cmp
or
fstps
and
sbb
sub
xor
mov
out
pop
mov
in
orb
mov
fsubrl
repnz
mov
ja
push
fs
inc
push
adc
lcall
inc
js
and
call
adc
fildl
jp
fstps
notl
fwait
pop
outsl
lds
ret
repnz
ja
iret
gs
daa
lods
lcall
or
jno
fistl
inc
xchg
xorl
mov
push
mov
inc
inc
and
ds
and
in
mov
enter
mov
mov
sbb
inc
push
mov
jmp
xor
cmp
shll
lcall
jno
rcr
sub
lods
les
cmp
aad
mov
push
ljmp
xchg
pop
inc
mov
mov
popf
imul
popa
pop
pop
shrl
push
or
jns
cli
out
loop
sub
xor
int
pop
lret
lds
or
loopne
bnd
nop
addl
jo
xchg
repz
jae
sbbb
inc
sbb
rcrb
cli
cmpsb
insb
mov
lods
jbe
cmp
loop
clc
outsl
xchg
movb
or
pop
test
jg
xor
add
mov
fnstenv
stos
into
call
pop
mov
hlt
orl
aad
add
mov
sub
repnz
je
mov
jb
addr16
mov
xorb
insb
arpl
daa
nop
pop
fistpl
xchg
icebp
sub
sbb
adc
js
lcall
insb
cmp
sti
jns
jg
mov
jmp
fs
sbb
or
mov
jns
and
push
inc
leave
xor
out
and
xor
idivl
popa
repnz
jae
adcb
jnp
andl
stc
das
in
cmpsb
xchg
outsl
xchg
sti
or
push
outsl
and
mov
iret
add
in
jno
lds
jp
mov
out
pop
adc
imul
out
out
push
daa
add
cwtl
in
xchg
fsts
insb
ljmp
lcall
out
sub
push
repz
adc
sbb
mov
bound
movsl
sub
mov
call
xor
out
adc
movsl
test
loope
xchg
adc
cmpsb
cs
fsubrs
pop
pop
pop
call
sbb
jo
daa
cmp
or
outsl
mov
into
mov
jle
cld
into
jnp
xchg
outsb
arpl
rorb
add
fistl
push
dec
fs
sbb
xchg
jbe
push
movsl
outsl
scas
iret
pop
ds
lds
test
and
jmp
xchg
push
pop
sbb
cmp
addr16
sub
test
push
mov
ret
outsb
mov
lret
sahf
out
in
iret
push
scas
cmp
mov
outsb
outsw
out
inc
lods
imul
fstp
jmp
xor
and
xchg
cld
mov
mov
cld
sub
outsb
sbb
xor
pop
push
pop
push
xchg
int3
data16
xchg
xchg
mov
xrelease
sbb
in
mov
loop
les
pop
dec
out
mov
mov
arpl
sub
or
hlt
fwait
mov
addb
pop
ficompl
push
mov
mov
test
mov
sarl
mov
cli
mov
xchg
sbb
mov
xlat
xchg
jl
mov
jmp
jmp
iret
inc
andb
ret
and
mov
sbb
inc
mov
jbe
fistpl
xchg
test
repz
cmp
push
and
push
lret
nop
push
xchg
test
lret
imul
xor
scas
in
repz
or
in
pushf
call
stc
testl
pop
xchg
mov
pop
push
cmp
bound
pop
nop
loop
test
pop
ret
addr16
addb
insl
clc
mov
inc
or
je
outsl
and
dec
outsb
inc
addr16
xchg
icebp
pop
or
fwait
outsl
movsl
push
sub
and
pop
mov
leave
cmpsl
or
loopne
adc
dec
aad
mov
jne
popa
int3
cmp
mov
mov
in
popf
pop
pushf
lods
subl
insb
jns
jno
pop
loop
inc
fildll
out
jmp
into
pop
xor
ds
fnstcw
jg
loope
repnz
testl
add
sub
pop
test
mov
fildl
clc
lea
sahf
cmp
insl
outsl
push
or
dec
js
dec
sbb
fdivl
lds
pop
insl
xchg
or
int
clc
xchg
in
mov
cli
pusha
rclb
mov
nop
mov
xchg
in
icebp
cmpsb
outsb
jns
cmp
roll
psllw
in
insb
pop
xchg
das
lret
lods
mov
mov
lret
mov
lcall
inc
xor
jecxz
add
aas
and
xchg
into
fs
cmp
cmp
push
dec
adc
mov
or
test
sahf
sti
inc
jmp
ret
jb
inc
pop
xorl
pushf
or
xchg
sarb
scas
ds
scas
jae
sahf
mov
inc
cwtl
xchg
sub
insb
mov
iret
push
xchg
jno
rcr
jb
stc
xchg
adc
jg
shrl
shlb
add
mov
in
fisttpl
in
mov
push
sub
sub
sub
js
mov
cmp
mov
sarl
add
xchg
xchg
setp
mov
es
cli
gs
sarl
addr16
xchg
xchg
mov
jl
and
or
gs
js
inc
daa
imul
or
in
setne
xor
lock
xchg
inc
clc
mov
inc
pusha
data16
xchg
out
sar
imul
xchg
lods
divb
clc
sub
icebp
mov
push
gs
inc
jge
jo
pop
outsb
mulb
cwtl
sub
mov
xor
insb
aaa
stc
mov
outsl
lahf
mov
push
fstpl
lret
fiaddl
cmc
loopne
jle
je
out
sub
idivb
aam
push
jle
mov
jno
insb
pushl
fwait
inc
cltd
imul
adc
aaa
and
adc
clc
xchg
push
dec
mov
xor
loopne
loop
xchg
cmpb
inc
je
jg
fsts
inc
adc
outsl
inc
std
jne
xchg
inc
mov
rolb
std
inc
pop
mov
stc
outsl
push
inc
sti
inc
mov
out
movsb
mov
xchg
add
xchg
lea
mov
xor
divb
or
sahf
mov
lock
outsb
jl
clc
je
sti
daa
jmp
jp
stos
fisttps
fidivs
mov
mov
fwait
movq
lock
add
mov
in
jae
jg
add
jbe
lcall
cmp
push
and
inc
insb
lea
ja
je
mov
int
mov
arpl
xchg
data16
jnp
sahf
subl
stc
inc
cwtl
hlt
out
fs
sub
popf
lods
fucom
mov
ds
cwtl
stos
jnp
cmp
jo
cmp
cmp
loop
insb
stc
and
ret
pop
mov
fs
outsl
mov
out
xor
into
fs
adc
push
inc
xchg
outsl
jns
lds
jae
inc
je
pop
or
sub
xchg
cmp
sti
xchg
jmp
imul
mov
or
repz
sub
sub
gs
out
fucomp
aas
imul
xor
imul
lcall
cltd
mov
scas
arpl
xchg
mov
fiadds
shll
das
pop
add
and
fwait
cltd
mov
inc
mov
fmull
lea
jnp
jg
sbb
xor
aaa
pop
pop
out
fnstsw
out
mov
xor
jnp
mov
cmp
pop
aam
arpl
outsl
scas
jo
in
push
mov
mov
out
leave
pop
and
popa
sbb
out
in
mov
sahf
dec
shr
xchg
sub
cmp
dec
mov
pushf
lret
cli
imul
gs
cmp
or
push
outsl
ds
cmpsb
scas
call
push
lgs
cmp
mov
fildll
xchg
rcrb
ds
mov
loope
lret
sub
bound
jg
mov
xor
popf
jb
in
sbb
lret
xchg
jo
jne
jmp
scas
aas
clc
lock
inc
enter
sarl
hlt
or
notb
adc
out
outsb
bound
or
gs
fucomi
jne
pop
icebp
test
pop
stos
push
or
xchg
les
jo
scas
rcrb
js
pop
test
cld
jecxz
mov
pop
lret
xchg
adc
pop
xchg
inc
mov
adc
scas
dec
fnstenv
jle
jecxz
icebp
cmp
out
mov
ret
lds
sbb
cld
fwait
loop
rclb
xchg
inc
divl
das
mov
repnz
outsl
dec
into
mov
jp
mov
sub
insl
xchg
jg
out
jmp
dec
movsl
insb
push
lret
into
es
arpl
enter
call
dec
jo
cmp
xor
inc
jle
inc
mov
ret
movsb
sub
dec
fs
inc
cwtl
out
mov
shlb
jle
into
mov
ret
and
out
pop
jmp
pop
popa
pop
je
mov
fistpl
into
cwtl
icebp
cmp
mov
jg
rorl
out
fstps
jbe
fistl
push
gs
adc
xor
aam
outsl
xor
pop
in
sti
pop
push
lcall
jg
push
shrl
sbb
arpl
mov
pushf
outsl
dec
mov
add
xlat
cmc
lcall
pop
inc
pushf
jg
mov
cmp
ffreep
inc
data16
scas
call
shl
outsl
xchg
divb
cmpl
test
and
int
or
xchg
test
out
shl
or
in
and
jns
dec
xor
xchg
xor
dec
aaa
mov
sahf
mov
out
jg
mov
sub
xabort
xchg
mov
bound
iret
mov
imul
adc
pop
into
sahf
les
ljmp
insl
or
lahf
or
int
lds
imul
pop
pop
xchg
push
sbb
imull
lock
pusha
pop
cmpsb
inc
cmpl
and
jne
fidivrl
arpl
and
jge
cmc
daa
jl
push
std
push
push
mov
inc
sub
cmp
mov
sub
jl
cmp
mov
mov
xor
pushf
dec
pop
lahf
iret
idivb
sbb
lcall
cld
push
popf
daa
add
push
or
je
adc
lret
in
xor
fsubr
sbb
jo,pt
mov
dec
pusha
inc
and
jp
mov
outsl
mov
sti
jg
cmp
rcll
mov
mov
xchg
cmp
mov
nop
test
xchg
sub
xchg
pop
cmp
pop
sbb
jnp
lcall
inc
sbb
push
test
lret
mul
clc
shrl
stos
decl
outsb
in
in
mov
int3
fldenvs
lcall
dec
inc
or
cmp
fcmovnu
cmp
out
movsl
sti
sub
mov
ret
xchg
sbb
fistl
movsb
mov
push
jl
cmpb
jnp
jnp
sti
outsl
mov
aaa
cmp
xor
push
movsl
fcmove
dec
sti
inc
mov
ja
mov
inc
inc
jns
mov
insb
pop
dec
stos
mov
and
push
fwait
shlb
out
dec
in
js
push
neg
mov
js
inc
sbb
cmp
cmpsb
popa
fcompl
mov
out
jp
add
inc
shll
rorb
xor
mov
mov
dec
lods
test
repz
andb
pop
in
cwtl
call
pushf
and
lahf
cltd
icebp
mov
cmp
inc
pop
imul
arpl
jb
jl
outsl
cs
in
adc
pop
mov
or
scas
lret
sti
das
pop
pop
cltd
xor
pop
jbe
imul
add
in
mov
jmp
mov
push
jne
test
jne
arpl
cmp
mov
cld
inc
stos
shrb
jae
popa
ds
pop
insb
cmpb
or
sti
ja
jg
push
vpaddb
shrl
or
aad
test
in
daa
popa
jmp
loope
aas
fnstsw
repz
out
gs
push
fists
gs
shl
inc
pop
xor
mov
fcomi
pushl
mull
and
out
adc
lods
push
push
lahf
xor
xchg
xor
jle
mov
aaa
fs
fwait
push
jg
mov
jle
mov
in
cmp
bound
jge
lcall
fwait
or
push
cmp
inc
adc
jae
test
mov
xchg
test
test
arpl
popa
xor
xlat
dec
inc
data16
je
insb
pop
lds
push
outsb
cwtl
mov
jmp
fidivrs
lds
fcoml
scas
add
jnp
and
out
xchg
jmp
xor
pop
outsl
dec
loop
adc
loop
imul
addr16
cmp
cmp
imul
jae
dec
and
xchg
aaa
push
kmovd
dec
aas
pop
iret
je
repnz
dec
sahf
push
insb
sbb
mov
cmpl
insb
xchg
sarl
mov
jmp
roll
adc
push
push
sbb
mov
enter
adc
aaa
xchg
cmp
jge
jle
xchg
pop
mov
add
fs
lock
add
push
mov
add
lcall
movsl
out
andl
je
in
cmp
scas
insb
inc
sbbb
int
jo
sahf
imul
into
xchg
pop
test
leave
jae
cmp
mov
inc
pushf
gs
movsl
xor
fisubrs
inc
jle
push
fldt
daa
lcall
inc
and
lea
jecxz
rcll
push
inc
shrb
stos
sub
sub
int3
inc
out
jecxz
out
ds
cld
shrb
scas
loope
ljmp
mov
jp
addl
cmp
xchg
rorb
lods
call
push
jbe
sub
inc
lea
mov
je
outsl
jbe
inc
sti
les
gs
xchg
cltd
lds
cwtl
daa
sti
lcall
insl
push
mov
mov
sbb
and
outsl
jecxz
ja
push
fists
movsl
cmc
pop
cmp
mov
jo
pop
lcall
mov
outsb
xchg
loop
imul
push
mov
sbb
jns
mov
sbb
pop
mov
mov
push
xchg
inc
pushf
movhps
scas
mov
push
adcb
fbld
pop
mov
jp
ret
movsl
add
daa
loope
fldl
das
dec
insl
mov
jns
out
stc
aad
inc
xor
aaa
cmpsb
lds
mov
das
xchg
push
in
sbb
bound
fdivrl
and
sub
lcall
push
inc
xor
push
nop
push
test
aam
gs
stc
jl
popa
outsl
rol
int3
enter
cmp
cmp
push
outsl
inc
imull
stos
gs
sbb
or
cmpsl
jnp
outsl
call
daa
sub
sub
ja
adcl
mov
mov
fs
aaa
mov
cmpb
sub
repnz
cmpl
hlt
pusha
jg
insb
outsl
xor
pop
inc
add
mov
cmp
cltd
dec
fldl
bound
push
xor
cld
xlat
xchg
lods
inc
add
cmp
pop
repz
pop
out
mov
and
into
leave
lds
dec
es
jg
in
jmp
hlt
pop
jo
mov
movsl
mov
mov
std
push
lods
lahf
inc
inc
popf
aaa
xlat
add
pop
sahf
push
sub
xor
je
inc
dec
pop
push
dec
repz
lods
dec
movsl
mov
test
mov
cltd
sbb
das
xor
push
push
test
dec
jl
push
outsl
repnz
sqrtps
pop
out
lods
movl
cli
mov
sahf
shll
mov
repnz
fsub
jne
push
jns,pt
cli
push
push
lods
xchg
push
add
mov
mov
in
mov
add
ds
clc
dec
jecxz
jecxz
pop
dec
add
push
xor
sarb
data16
shll
scas
push
in
sbb
lcall
sub
mov
or
flds
push
lret
loope
and
xsha256
cmpsb
adc
insb
inc
outsl
or
xchg
loope
iret
fiadds
ret
jmp
xor
inc
jo
jmp
fwait
loope
adc
stc
cli
and
jb
pushf
push
out
ja
outsb
dec
or
adc
mov
jl
push
jg
imul
inc
movsl
jns
xchg
orl
int3
push
imul
mov
pop
jg
push
lock
and
mov
fincstp
pushf
stc
jne
imul
xor
cltd
cmpl
xchg
dec
loop
scas
sbb
mov
mov
adc
adc
hlt
push
fs
xchg
inc
mov
add
mov
stos
push
push
insb
mov
inc
inc
pop
jae
lea
pushf
dec
mov
or
mov
stos
les
push
mov
out
mov
sbb
cmp
xchg
xchg
jns
pop
sarl
ljmp
sub
jae
ds
mov
xchg
dec
js
pop
shlb
mov
aas
adc
movsl
pop
lods
mul
loop
test
repz
push
stos
clc
iret
inc
adc
adc
add
stos
sbb
popa
fdivs
outsb
cmp
sub
adc
jg
sub
mov
xchg
test
jge
or
test
mov
fs
xchg
add
movsl
testb
addl
cmpl
sbb
imul
lods
stos
sbb
ja
cmp
jmp
jg
push
mov
and
rcrb
xchg
mov
in
ret
mulb
cld
lret
cmc
cmp
xchg
push
mov
xor
and
fnstsw
lods
and
add
push
lret
fs
push
leave
insb
jg
push
xor
es
in
xchg
in
add
adc
push
adc
data16
xor
jbe
outsb
jb
jle
mov
pop
outsb
andb
mov
push
jbe
ret
pusha
stos
fs
add
cltd
ret
xor
lds
xor
js
fldpi
jnp
mov
sarb
in
or
jo
imul
iret
mov
ret
mov
cmp
fstpl
pop
jge
inc
adc
inc
out
jg
cmpsb
and
pushf
push
leave
adc
add
mov
xchg
mov
out
dec
andb
arpl
data16
or
dec
xchg
fldl
inc
sub
xchg
inc
pusha
shrl
jno
cmc
stos
inc
pushf
lret
adc
push
lods
stos
lcall
rcr
cltd
sbb
sbbb
daa
mov
jno
inc
jo
push
nop
cmc
pop
pop
jns
jns
mov
sbb
lcall
push
inc
xchg
pusha
adc
jmp
rorb
jnp
sahf
xchg
xchg
mov
shl
rolb
adc
add
movsl
and
xchg
sbb
aaa
sbb
add
and
cld
mov
negl
cld
xchg
mov
popa
push
in
gs
jmp
insb
jbe
mov
es
push
inc
adc
int
mov
ljmp
jo
pushf
mov
fnstcw
loop
push
filds
fwait
lock
jmp
pop
mov
sbb
mov
inc
cmp
jmp
into
inc
insl
stc
in
addb
pop
jmp
jg
in
orl
rorl
jmp
popa
adc
sub
sbb
jg
fisubl
std
subl
mov
popf
mov
test
pop
ret
mov
xchg
and
xor
fnsave
insb
cmp
fistl
ds
sti
arpl
movsb
lds
sbb
dec
rcll
lods
jae
lcall
mov
xchg
push
arpl
jg
and
stc
outsl
fimuls
fwait
out
add
dec
sbb
outsl
ja
cmp
mov
pop
adc
std
leave
or
jmp
mov
bound
mov
sub
adc
movsl
and
inc
add
out
push
aad
mov
jmp
inc
xor
xchg
adc
mov
jne
cmp
mov
loope
repnz
pop
mov
xchg
mov
cmpl
cli
in
push
sbb
jge
lock
into
xchg
push
fisubs
or
xchg
js
sub
clc
lcall
jle
adc
pusha
mov
jno
std
mov
es
ffree
repnz
or
in
xor
jo
stos
out
mov
pop
lock
iret
pop
push
lds
in
xor
xor
mov
and
jmp
bound
mov
repz
mov
loop
insb
aas
mov
adc
cmp
jnp
ss
cmpsl
scas
bound
xlat
cltd
jmp
and
push
loope
negl
add
pop
outsl
jnp
mov
xchg
fidivrl
mov
or
mov
insb
cs
xchg
sti
xor
mul
xchg
jo
and
in
adc
icebp
xchg
imul
jmp
shrd
outsl
in
inc
fdiv
sub
jb
bound
fs
xchg
into
movsl
imul
jge
adcl
fs
fcoms
xor
movsl
dec
sti
dec
jle
xchg
lret
mov
lods
push
mov
lds
enter
xchg
aam
mov
cli
sbb
jne
outsl
arpl
xlat
sbb
mov
lock
jmp
inc
sbb
cmpsl
rcrl
je
outsw
scas
or
jb
call
fisttpll
js
cmpl
add
stos
scas
push
sbb
cli
in
out
clc
pop
imul
aaa
fildl
ss
ljmp
push
mov
dec
lds
aam
std
clc
je
popa
outsl
ds
mov
mov
jecxz
mov
push
imul
or
jae
sbb
cld
jg
cmp
dec
frstor
mov
jle
xchg
clc
outsl
fs
xorl
xchg
xchg
pushf
sbb
leave
ja
pop
fwait
push
jl
int3
dec
mov
lret
and
jno
sbb
lret
cmpsl
mov
lock
mov
test
xchg
inc
les
leave
xchg
dec
pop
aaa
mov
cmp
xor
pop
lods
and
out
fnstcw
movsl
jo
aam
sbbb
cltd
push
lcall
gs
xchg
xor
sbb
lds
movsl
mov
jmp
pop
movsl
jae
nop
pop
adcl
test
addr16
lea
mov
inc
rcr
enter
fimuls
pextrw
jg
je
les
adc
fbstp
or
mov
adc
outsb
ja
aas
adc
pop
shlb
outsl
loope
aad
sub
leave
mov
inc
insb
flds
stos
mov
lds
shl
movsl
push
insb
fisubrs
arpl
xchg
jo
xchg
cmc
repz
outsb
stos
divb
pusha
scas
icebp
mov
pop
sub
push
scas
dec
mov
test
es
loopne
jne
sbb
aad
cli
pop
push
jecxz
call
roll
jmp
and
ss
jg
jp
je
popa
jns
cmp
in
mov
sub
mov
mov
test
lds
mov
les
mov
aam
add
inc
cld
out
xchg
cmp
test
push
data16
push
cld
mov
push
aaa
and
mov
cmpsl
ret
jo
pop
popf
cld
dec
xchg
daa
xchg
mov
jg
mov
js
adc
xor
ljmp
or
sti
jo
js
imul
pop
xchg
jmp
arpl
adc
jg
dec
sbb
in
xchg
pop
popf
mov
nop
push
stos
shlb
movsl
pushf
push
and
sbb
add
jbe
repz
jg
imul
mov
xor
xchg
movsl
jns
push
sbb
push
in
outsl
fnstenv
hlt
cmp
xchg
addr16
loope
xor
andl
xchg
in
sub
push
insl
arpl
xchg
xor
cmp
outsb
jle
in
and
popa
push
cmp
ret
jae
add
push
inc
jg
sub
jmp
dec
in
jmp
fnstsw
xchg
mov
aad
fs
jecxz
jecxz
lcall
add
jne
pop
adc
stos
jae
hlt
push
mov
sahf
je
sbb
sub
xchg
mov
ret
jl
mov
shlb
jmp
inc
push
xchg
push
js
outsl
xor
mov
test
shrl
mov
jb
xor
outsl
jnp
test
push
roll
repz
clc
fs
outsl
aam
cmp
movsl
mov
cmp
xor
push
sbb
in
mov
or
divl
in
iret
or
dec
mull
jp
adc
cmp
sti
sbbb
aaa
xchg
fmulp
and
jns
and
push
lret
xchg
cld
daa
mov
insb
xchg
xorb
outsl
fwait
cmp
std
pop
inc
mov
daa
push
push
jbe
xor
or
repz
ret
call
inc
frstor
cld
scas
movsl
out
dec
lret
ja
add
in
call
sub
mov
xor
hlt
mov
clc
and
jp
mov
jne
jmp
jg
imul
decl
loope
adcb
xor
jo
shlb
xchg
add
movsl
pushf
mov
push
daa
add
inc
out
push
movsl
imul
and
popa
pop
loop
mov
xchg
out
sti
cli
pop
fcomi
inc
push
shl
adc
dec
setg
sub
xchg
mov
mov
xor
xchg
push
xor
jbe
aas
mov
lret
enter
xlat
adc
inc
jg
or
rcrb
xchg
adc
clc
jg
out
loop
mov
xchg
mov
jb
sub
and
xchg
push
cmp
cli
aas
fbld
xchg
inc
imul
jbe
pop
imul
sbb
andl
push
jns
cmp
pop
sub
push
sub
jle
xchg
pop
fwait
mov
icebp
repz
inc
sub
pop
xchg
add
jge
outsb
jno
scas
cs
xchg
cwtl
jg
xchg
jnp
ja
outsb
or
lds
mov
jbe
lcall
jmp
ja
push
fcmovnb
cmp
roll
stos
pop
lods
xchg
fdivrs
jnp
mov
mov
int
mov
fstl
dec
jl
inc
aam
jg
adc
cltd
leave
ja
orl
add
pushw
das
mov
xor
xchg
insb
fistl
loopne
push
out
sbb
xor
lea
loope
je
stc
inc
bound
rolb
mov
xor
sti
xchg
insb
and
jnp
cmp
push
lret
lea
push
push
jbe
fldt
imul
lcall
es
xor
xchg
jae
adc
add
mov
inc
jle
popa
pop
outsl
adc
sbb
cmp
mov
js
rolb
jo
fnstenv
leave
fidivs
or
mov
cmpsb
aas
lcall
gs
push
dec
mov
push
aad
mov
sbb
mov
cmpsb
movsl
lds
sahf
rcrb
inc
mov
add
ret
lret
mov
out
push
outsl
js
mov
les
out
call
call
mov
add
fiadds
lods
pop
mov
test
jle
stc
arpl
or
incb
mov
mov
xlat
mov
arpl
and
arpl
dec
int3
out
stc
cltd
sbb
rcrb
je
mov
adc
repnz
cmpsb
sub
push
clc
loop
repz
or
out
xchg
and
div
out
mov
in
cld
xchg
mov
push
pop
insl
out
xchg
mov
jge
rcr
outsl
xchg
pop
lret
gs
sbb
packssdw
ret
stos
shr
jl
test
cmp
sbb
out
cld
xor
sub
scas
pushf
in
lods
ss
aad
in
in
xchg
pop
mov
jno
in
lods
push
push
lock
aaa
mov
rclb
jecxz
loop
dec
mov
cmp
mov
out
and
sub
dec
test
mov
cmp
aam
das
xor
jle
imul
adc
sarl
mov
inc
loope
daa
jecxz
cmpsl
xor
mov
jno
out
mov
jg
xor
data16
sbb
sub
mov
dec
add
push
xchg
adc
mov
incl
cltd
mov
data16
outsb
aas
sbb
mov
mov
mov
mov
xor
dec
ficompl
lods
jbe
pushf
scas
int3
lods
dec
xchg
lcall
test
mov
xor
scas
jo
jg
imul
and
lret
fisttpl
xchg
xchg
jmp
jae
jg
mov
mov
aaa
rol
je
mov
inc
idivl
xchg
aaa
lcall
sbb
lret
xchg
std
scas
mov
mov
aam
std
imul
data16
xchg
mov
mov
movb
and
in
and
or
pop
mov
sbbb
imul
pop
jl
cmp
lcall
cwtl
lahf
mov
jle
sub
shrl
jmp
and
push
mov
push
cld
jae
jl
jge
ds
or
sbb
cwtl
mov
outsb
jb
test
adc
pop
inc
in
andb
faddl
sub
push
jbe
inc
xchg
mov
adc
add
mov
xchg
pop
sti
sub
dec
dec
pop
pop
mov
out
addr16
pop
sti
in
xorb
mov
inc
jns
aas
xor
shl
lcall
incb
bound
jg
fwait
adc
mov
mov
and
aaa
dec
imul
enter
dec
ds
lock
jo
lcall
int
testb
xchg
xor
pop
popl
jg
fsubr
or
jns
push
mov
inc
lcall
cmp
jo
xorb
lock
pop
aas
jg
inc
shlb
jle
call
outsl
push
mov
dec
repnz
jmp
jl
cmpl
cli
stc
lea
movsl
cmp
pop
mov
mov
fs
and
xchg
scas
xchg
fcmovnb
cwtl
dec
cltd
imul
push
mov
or
and
clc
pop
je
outsl
cmc
xchg
js
mov
and
sub
push
inc
fildll
pop
jnp
cmp
mov
add
lods
into
aaa
int
inc
pop
lds
adc
sbb
pop
mov
adc
add
lahf
jne
push
pop
mov
scas
jg
push
ss
div
cmc
shll
pushf
mov
push
popa
loop
stos
in
idivl
pop
pop
inc
jbe
adc
ficomps
roll
sti
jns
xor
ret
lahf
mov
and
sti
stos
dec
fdivrs
sbb
xchg
jg
imul
pop
jb
movsl
adc
insb
cmc
or
lods
leave
mov
xor
jbe
jg
rcll
es
pop
cli
imul
xor
add
sahf
dec
cmp
or
lahf
dec
inc
loope
dec
stc
xchg
aam
sub
pop
mov
inc
out
or
scas
mov
adc
fcmovne
pop
lret
or
jecxz
ljmp
mov
inc
data16
js
fsubl
clc
xchg
in
dec
mov
out
sahf
in
adc
push
xor
test
mov
xabort
xorb
scas
pop
outsb
dec
out
mov
mov
push
popa
sub
xchg
test
and
push
cmp
test
mov
das
addb
xor
je
mov
add
shlb
xchg
sub
repnz
jmp
aas
fmull
mov
scas
lock
push
sub
mov
jg
fnstsw
loope
xchg
in
xchg
xlat
gs
push
addb
scas
fs
mov
mov
clc
push
mov
cmp
dec
pop
xor
xchg
xchg
mov
stos
inc
mov
stos
fcmovb
push
jl
jne
adc
inc
cmpsb
jl
mov
pushf
push
in
lcall
insb
pop
lock
mov
lea
shlb
pop
in
xchg
push
inc
or
mov
gs
data16
je
in
adc
sarb
xchg
inc
in
push
icebp
pop
mov
and
cmp
fnstenv
mov
fisubl
subb
sub
cmp
or
mov
fwait
push
add
or
data16
push
xor
aas
icebp
inc
enter
xor
sarl
popa
icebp
push
pop
mov
jae
fstl
gs
ds
xor
adc
add
sub
fs
inc
pushf
cmp
xchg
pop
jl
jo
cli
hlt
inc
not
sub
and
dec
jmp
jo
push
je
pusha
mov
lret
sti
rorl
faddl
jnp
jae
int3
add
popa
xchg
pop
pop
fwait
xor
ret
fs
arpl
or
pushf
stos
inc
out
ss
mov
in
cltd
movsl
add
push
inc
dec
fsubrs
pushl
insl
jae
push
enter
fxam
sbb
and
cld
test
mov
push
lock
jp
scas
lea
push
mov
adc
push
in
xlat
fildl
lods
fwait
in
pop
mov
mov
mov
inc
sbb
lods
in
subb
xlat
inc
rclb
outsl
test
out
aad
sbb
imul
mov
fisttpl
out
pushf
jbe
outsl
loop
in
lcall
inc
out
xchg
mov
lock
jnp
cli
ss
mov
aas
inc
push
push
dec
lds
jp
mov
add
pop
add
aam
js
cwtl
sbb
aad
popf
fbstp
sub
arpl
lcall
jg
ret
xchg
lahf
mov
iret
pop
arpl
cmpsb
idivl
and
int3
subb
fistpl
push
mov
filds
test
outsb
jnp
lcall
loop
sub
clc
mov
test
push
lret
mov
sub
jg
jae
and
xor
cmp
mov
enter
push
pop
scas
jbe
cmp
in
in
jmp
bound
lahf
jo
call
jle
aas
mov
pop
mov
int
mov
pushf
cmpsl
push
lock
fwait
push
pop
push
jl
imul
cmp
cs
pop
cltd
mov
xchg
push
shlb
sti
pop
lcall
enter
cs
inc
jg
xchg
pop
mov
cmc
pop
ret
xchg
aaa
and
outsl
sti
xchg
repz
mov
cmp
dec
sbb
in
pop
sahf
icebp
pop
mov
lock
dec
push
xlat
imul
xchg
rclb
cmpsb
addr16
add
aaa
dec
cmpsl
test
cmp
cmp
enter
lahf
inc
jg
dec
cmp
and
js
outsl
movsl
sbb
pop
jnp
es
subl
jo
lods
lcall
adc
sub
cltd
dec
js
outsl
aas
arpl
stc
test
hlt
add
cmp
xlat
adc
mov
mov
cmpsl
ds
mov
lea
xchg
loope
cmp
push
lcall
movsl
and
repnz
or
jmp
xchg
outsl
or
cmp
je
das
inc
pop
and
and
xchg
pop
mov
push
sbb
insb
outsl
lahf
sub
pop
rorl
popa
leave
inc
andl
mov
imul
push
repz
sbb
xor
imul
mov
lea
xor
in
cltd
lds
jmp
lahf
xor
inc
fnstsw
dec
jmp
pop
mov
push
xchg
sbb
fistpll
pop
int3
sbb
jg
add
rorb
cmp
pop
les
mov
push
in
lret
xchg
push
fwait
mov
push
cmp
dec
stos
pop
std
jle
es
clc
outsb
mov
aad
pop
dec
fistps
pop
loop
adcl
insb
jg
jnp
shll
je
cmp
ds
add
sbb
sarl
jbe
clc
pushf
jp
push
cltd
cwtl
xchg
jecxz
popf
sub
mov
pop
int
push
mov
fcmovnbe
divb
pop
stos
inc
sbbl
pop
imul
jg
sahf
loope
xchg
jle
mov
inc
mov
xchg
pop
je
cmp
pop
test
mov
scas
mov
jne
out
sub
xchg
mov
bound
lret
cmp
mov
scas
sub
jle
jo
inc
scas
and
sbb
les
fadds
sbb
or
int3
in
inc
ds
fwait
insb
mov
mov
shl
sbb
add
dec
dec
ror
divps
out
xchg
mov
or
insl
pop
lret
test
cmpsl
inc
lcall
call
xchg
stos
sub
jle
sub
clc
loope
jg
ret
sti
push
inc
jbe
or
and
cmp
roll
lcall
dec
adc
scas
imul
jno
inc
mov
stc
mov
pop
mov
push
cmp
aad
cmp
push
stc
in
xchg
fidivl
push
jno
lahf
ret
addl
das
xor
xlat
fsubl
lcall
dec
sti
mov
mov
pop
fistpl
add
in
mov
imul
xchg
inc
dec
outsl
ret
loop
jo
cwtl
jecxz
int
or
dec
lcall
xor
pop
hlt
mov
movsb
jg
jmp
aam
cld
sbb
lea
mov
dec
and
into
lret
movsl
es
shlb
cmc
test
out
dec
ja
fwait
pushf
loope
clc
cs
lahf
jmp
and
mov
jnp
xchg
mov
sbb
push
mov
xchg
jns
outsl
jnp
or
pop
popf
jg
out
mov
ret
es
sbb
scas
xchg
popf
adc
cmp
mov
add
scas
ret
data16
data16
out
mov
lcall
mov
push
in
data16
pop
data16
idivb
dec
xlat
data16
pop
cmc
and
xchg
pop
out
mov
pop
leave
jmp
scas
test
fs
fs
outsl
insb
inc
repz
cmp
mov
fs
sti
data16
pop
push
bound
xchg
ljmp
out
sbbl
jg
data16
xchg
cld
pavgw
data16
aam
mov
test
mov
gs
gs
xchg
out
pop
pop
iret
xchg
push
test
pop
fcmovnb
call
push
stc
jecxz
in
imul
mov
popa
imul
xchg
mov
pop
push
mov
arpl
mov
mulb
test
push
test
out
inc
ja
lea
call
in
fldt
mul
rcrl
or
test
js
lock
insb
fwait
insl
mov
pop
bound
jne
inc
cmpb
data16
dec
mov
in
mov
je
jne
call
jecxz
jmp
jmp
jmp
stos
ja
popf
mov
pop
pop
cmpsl
testl
imul
pop
mov
loope
mov
stc
sti
insl
out
and
fs
and
mov
test
mov
cli
arpl
jb
cmpsb
jp
out
pop
lock
fs
cmpsl
jno
sti
leave
out
clc
jbe
subl
mov
movsl
loope
insl
pop
jge
call
insb
cli
pop
mov
loope
loope
mov
mov
cld
jbe
jbe
bound
mov
js
outsb
push
js
outsb
jbe
jbe
jbe
subl
mov
xchg
popw
stc
out
pop
js
jmp
adc
cmp
jp
jbe
add
js
sub
out
shlb
rorw
mov
sbb
push
sub
pop
mov
clc
sub
cmp
xlat
int3
sub
lahf
sub
push
mov
add
dec
lods
cld
int3
into
mov
in
jecxz
mov
andl
jg
add
mov
xchg
mov
fldt
mov
or
pop
jnp
jge
pop
lahf
sti
in
notl
or
cwtl
movsl
mov
loop
fcoml
imul
fwait
sbb
out
fucom
aaa
fcompl
ds
jne
adcl
in
pushf
cmp
jge
lcall
mov
shl
and
xor
jae
push
mov
insb
mov
jnp
inc
push
rorb
ret
loope
cmp
sbb
es
mov
jnp
sbb
inc
loop
movsb
jns
xchg
int3
fwait
shl
in
or
nop
outsl
iret
std
push
mov
inc
out
mov
lret
ss
lcall
stc
insb
into
jb
in
push
push
mov
lods
mov
gs
sub
insl
adc
int3
lea
outsl
stc
jae
push
ficoml
arpl
lock
rcl
mov
int
shlb
outsl
in
cli
and
clc
jecxz
lcall
aam
adc
lret
sbb
sti
xchg
cmpsb
sbb
cmp
mov
mov
jae
sbb
stos
cld
mov
in
cmpsl
scas
js
pop
jno
xchg
nop
add
test
pop
sarl
popa
jg
dec
hlt
jno
ja
xchg
xchg
aam
and
bound
push
pop
into
clc
decb
mov
adc
mov
ljmp
cmp
outsl
mov
jns
xchg
adc
stos
jge
and
xchg
fstps
mov
lcall
mov
arpl
mov
or
cmpsl
imul
adc
mov
push
cmpb
outsl
ljmp
xchg
insb
jge
lods
cs
inc
jmp
lret
ja
or
in
orb
xchg
cmp
lds
call
pop
insb
push
jecxz
dec
jne
aaa
jl
push
pop
xor
clc
jg
repnz
cmpsl
lcall
mov
xchg
daa
test
loope
jl
outsl
dec
mov
xchg
xor
ds
mov
nop
mov
lret
lcall
and
mov
add
js
clc
push
cmp
scas
repnz
fwait
jg
lret
xor
fsubp
xor
repz
inc
cli
and
inc
test
ud2
jno
or
in
sub
dec
mov
add
sbb
xchg
insb
adc
jp
ja
xchg
push
arpl
inc
mov
out
sbb
push
sahf
fisubl
cltd
push
mul
cld
ret
or
and
outsb
in
push
and
jg
mov
cmovb
sbb
jle
pushf
xchg
sbb
pop
stos
rorb
mov
mov
push
xchg
mov
scas
cld
add
sbb
outsl
xchg
loopne
ficompl
push
sbb
lcall
outsl
lods
push
ja
imul
scas
out
shr
jb
and
inc
jge
mov
scas
je
lods
stos
cmp
xor
lock
xchg
andb
pop
pop
pop
ret
out
pop
pop
xor
sbb
popa
mov
fbld
add
loope
push
stos
push
push
mov
jmp
jnp
push
push
movw
lods
in
loop
repz
add
jge
dec
fisttpl
mov
pop
hlt
push
xchg
out
pop
mov
jnp
inc
jnp
loop
or
arpl
lahf
jnp
into
mov
fs
gs
stos
repnz
and
addr16
ja
int
jae
mov
pop
fld
insl
xchg
sub
arpl
dec
test
stc
mov
aaa
jp
lea
fiadds
insl
jle
in
ja
imulb
arpl
push
pop
mov
incl
jg
cmc
gs
sbb
int
out
xor
js
insb
stos
js
push
orb
test
push
stos
nop
xchg
in
adcb
pop
mulb
pop
jmp
xchg
push
arpl
jno
testb
fisubs
in
jo
and
arpl
clc
and
loope
fldt
stc
jle
outsb
push
aaa
ja
repz
insb
jne
jge
jne
imul
fldt
add
jg
pop
push
xchg
jl
in
arpl
adc
push
add
imul
mov
cmpsb
jp
push
popa
push
jo
jb
je
xor
clc
mov
jae
mov
mov
imulb
mov
fs
xchg
xorl
jl
outsb
repz
into
jo
jae
fs
outsl
adc
add
pop
sbb
sub
sti
inc
mov
cld
mov
aaa
int3
subl
mov
jmp
addl
test
inc
adc
sahf
sbb
dec
stos
sub
shrl
test
into
insb
mov
outsl
les
xchg
xchg
sbb
imul
jg
sub
clc
aaa
int
and
jnp
fwait
jecxz,pn
mov
lds
jg
xchg
dec
add
ficompl
outsb
aaa
rolb
mov
adc
push
mov
sahf
mov
dec
fistpl
xchg
xchg
stc
add
repz
invd
fcmovnbe
add
pop
fdivrl
push
inc
jg
je
lea
ret
push
movsb
js
push
nop
repz
aam
adc
xor
xchg
in
jne
xlat
cmp
sbb
test
stos
outsb
cmp
mov
jns
fldt
repz
jns
mul
jns
cmp
mov
sti
popa
rorb
or
push
repz
or
lcall
hlt
lea
repz
outsb
stc
adc
xor
dec
cmp
adc
mov
mov
iret
mov
stc
inc
rol
xchg
jg
pop
lea
jo
pop
bound
outsl
subb
push
jnp
jg
test
lods
xchg
pusha
call
mov
mov
pmulhw
jnp
sbb
mov
mov
jp
popf
or
lcall
mov
daa
nop
cmp
jo
outsl
dec
xchg
and
aad
gs
ffree
jbe
lcall
into
pop
jno
cmp
sbb
jmp
scas
fwait
sub
sub
xchg
xchg
popf
popf
pop
stos
loop
mov
and
mov
cmp
sbb
mov
pop
xchg
jo
das
xchg
mov
push
mov
adc
or
inc
in
pop
mov
sub
push
ja
popa
in
push
cli
jmp
fs
dec
insb
outsl
sarb
loop
push
mov
mov
fadd
lret
xchg
lods
cmpsb
fsubp
imul
andb
sub
shrb
fcmove
into
or
jbe,pn
fidivl
jge
pop
cs
jg
mov
imul
in
popa
mov
cmp
and
mov
push
movsl
inc
lahf
popl
adc
mov
popf
into
inc
lds
push
xor
in
sub
in
dec
jmp
mov
mov
xchg
sbbl
ret
sbb
or
mov
push
jg
in
cs
xchg
lahf
push
jnp
push
cmpsl
imul
dec
dec
insb
mov
dec
cmp
push
jg
sbb
xlat
jl
pop
pushf
cwtl
aam
xchg
dec
insb
cltd
sbb
lahf
in
xor
shll
inc
inc
loop
jae
jp
mov
je
cwtl
sbb
pushf
lcall
cmp
jle
cwtl
cltd
fwait
outsl
and
sbb
sub
jne
cwtl
cmp
push
hlt
push
pop
rcrl
mov
pop
into
pop
inc
sub
scas
aas
xchg
in
sbb
push
add
mov
adc
sarb
mov
pop
int
cmc
push
mov
out
fstpl
jns
xchg
int
mov
scas
xor
push
mov
mov
notb
add
nop
sarb
lock
pop
xor
ret
insl
outsl
sbb
pop
lahf
sbb
push
jnp
lcall
cmp
sub
sub
jmp
int
lea
adc
jle
sahf
xchg
iret
lretw
out
sahf
call
push
ja
stos
sub
imulb
mov
das
xchg
lret
lods
and
push
icebp
pop
inc
pushf
mov
jo
mov
aaa
dec
cmp
jns
push
or
jae
jbe
add
inc
mov
test
lea
jecxz
dec
and
insb
orl
mov
xchg
mov
xchg
fs
fs
jp
jns
mov
inc
pop
sub
pop
pop
sub
out
bound
push
das
mov
out
fsts
jb
call
jns
push
frstor
test
mov
push
int3
sbbl
push
dec
aas
mov
popa
pop
mov
jg
inc
pop
push
jg
xor
dec
int
xchg
mov
incl
mov
fisttps
repz
mov
xor
jle
and
mov
mov
xor
and
sbb
mov
pop
or
out
and
cld
mov
xchg
lcall
int
xor
out
jnp,pt
mov
adc
mov
data16
andl
lock
pop
lret
pop
cmpl
lcall
fnstsw
lods
insb
cmp
clc
jnp
lahf
mov
out
xchg
lea
sub
sbb
jne
jns
mov
sub
mov
xchg
lea
mov
inc
enter
pop
push
daa
add
inc
cmp
and
inc
add
mov
xchg
popa
sti
pop
lods
push
lea
mov
in
out
push
push
adc
stc
add
clc
jo
je
push
andl
xorl
jecxz
push
adc
adc
inc
es
int3
rcrb
push
jae
cmp
lcall
insb
pop
test
push
mov
andb
xchg
adc
sahf
jb
sbbl
dec
mull
bound
lcall
xor
jge
fwait
pop
push
in
jg
cmp
movsl
lcall
xchg
fildll
in
dec
je
xchg
int
fcmovb
mov
lds
sti
call
test
popa
movsb
inc
in
divl
jecxz
inc
movsl
bnd
mov
add
lcall
xor
fwait
inc
repz
cmp
hlt
push
dec
cmpsl
jnp
pop
arpl
shll
fs
lods
mov
repnz
les
add
lods
dec
repnz
cmp
pop
cs
mov
mov
pop
add
jmp
and
enter
dec
movsl
jnp
out
test
pushf
imull
dec
mov
cli
stos
xor
arpl
test
lods
pop
out
jbe
jno
pop
push
stc
repnz
loope
gs
data16
cmpsb
mov
pop
adc
faddl
dec
fs
cmp
subb
jmp
cmpsl
sti
adc
out
jp
gs
fs
jle
add
push
popl
imul
outsb
popaw
gs
mov
mov
push
ficoml
out
data16
data16
pop
sub
or
data16
sub
pop
stos
xorb
out
jbe
scas
popa
cmp
cmpsb
arpl
in
pop
inc
loope
jbe
bound
push
aas
bound
data16
outsl
jle
data16
or
jmp
mov
mov
mov
out
movsl
jmp
out
cwtl
in
jecxz
xchg
sub
jno
jp
imul
sbb
fildll
jns
call
cmpsb
out
xchg
repz
aad
in
ret
fsubr
insb
mov
jbe
fcmovnbe
arpl
stc
repnz
stos
imul
outsb
daa
ljmp
cmpsb
mov
out
jmp
jl
cmpsb
jne
push
jg
insl
and
nop
adc
std
or
std
sbbb
and
push
icebp
outsl
push
jo
out
in
xorl
cli
lahf
and
xor
fldt
in
pop
push
loope
out
xchg
cmc
jecxz
subb
das
fldt
fs
ljmp
lock
jbe
xchg
popa
jmp
push
lahf
mov
jbe
mov
fnstsw
jo
lcall
xchg
mov
ficompl
cmp
mov
pop
adcb
pusha
call
xor
in
xor
fcomi
fcmovbe
maskmovq
imull
pop
js
fisubl
xor
add
jns
jmp
cld
and
into
rclb
ljmp
loop
clc
cld
sub
or
je
push
dec
ror
sbb
movsl
jg
subb
push
mov
int
xchg
pop
push
jae
test
jl
outsl
pop
xchg
icebp
scas
push
sub
ja
cli
in
mov
imul
repz
int3
loope
ret
ret
insb
mov
xchg
inc
cmp
pushl
lods
sub
fwait
xor
push
gs
outsl
sbb
cli
sbb
or
add
lret
jge
xor
loop
pushf
lods
add
js
pop
jle
stos
bound
ljmp
fisubl
jecxz
negb
fldenv
in
movsl
mov
pop
imul
jo
ljmp
jnp
push
decb
rcr
lcall
out
loope
xor
push
stos
cmp
xorl
mov
jns
jne
xchg
pop
insb
xor
lcall
add
inc
push
mov
aad
jo
mov
sub
xchg
fcmovne
mov
clc
cs
sti
push
pusha
mov
and
xchg
mov
movsl
fcmovnbe
jae
test
inc
in
lods
daa
lea
mov
inc
or
pushf
fildll
out
and
or
sub
or
into
ret
aam
mov
rcl
xor
movsl
mov
mov
sbb
ds
adc
xchg
sahf
fs
inc
push
data16
out
mov
inc
dec
pushf
aam
std
push
jg
mov
inc
call
push
cmp
cwtl
mov
popa
jmp
pop
pushf
add
inc
dec
mov
fs
outsl
sbb
sub
jo
xchg
push
repz
lds
cltd
lret
incl
sub
mov
xchg
idiv
jne
imul
je
or
xchg
lcall
jg
cmp
aad
je
xchg
sbb
mov
push
mov
add
xor
fdivrs
addb
inc
sbb
xchg
cs
js
sbb
stc
mov
inc
pop
sarl
fcomps
sbbl
mov
xor
rcrb
sbb
cs
xchg
daa
imul
sahf
mov
mov
or
push
scas
lret
xchg
mov
push
jp
pinsrw
or
cwtl
aad
push
xchg
xor
js
pop
outsb
loope
cmp
xlat
loope
xorl
das
jno
daa
pop
sti
outsl
stos
call
in
inc
push
nop
ret
in
ljmp
sbb
sti
addb
jg
push
arpl
and
xchg
imul
imul
or
repz
data16
or
popf
popf
jle
cld
and
scas
loop
cwtl
out
out
xchg
sub
in
lret
xchg
ret
adc
jle
adc
add
and
ds
stc
hlt
scas
fs
movsl
push
push
popl
je
les
insl
xchg
or
sbb
lods
mov
jg
or
test
add
shll
add
das
imul
cmc
cltd
push
jo
je
jmp
push
inc
ja
sub
pop
mov
adc
cmp
xchg
mov
arpl
cmp
lea
add
push
jecxz
or
mov
jp
push
adc
and
jae
mov
xchg
push
jmp
lcall
xchg
out
ljmp
jg
imul
scas
sahf
data16
dec
into
ja
add
mov
sub
std
sbb
sub
xor
jg
mov
insl
fimull
pop
aam
cmpsl
jp
adc
arpl
pop
sti
outsl
nop
jg
sbb
mov
pop
sbb
or
int
and
mov
push
and
cmp
fnsave
cmpl
sub
jle
mov
adc
pop
lods
push
fwait
in
outsb
sub
xor
adc
sub
xchg
push
sub
or
mov
xchg
inc
movb
lods
lcall
adc
mov
stos
sub
jo
outsl
add
aaa
inc
xor
add
push
aam
filds
in
jmp
rolb
sti
outsl
scas
pop
mov
add
lods
aas
cmp
daa
sti
cmc
fwait
outsl
lds
pushf
outsb
mov
faddl
jns
in
inc
and
mov
cmpsb
push
cwtl
rcrl
lret
daa
ss
pop
fs
mov
sbbl
pushl
fwait
or
fsubr
inc
hlt
jns
out
sub
cmc
cli
sbb
pop
fwait
pop
add
cmp
mov
arpl
stos
pushf
cmpsb
repz
mov
adc
not
test
jg
jmp
pop
lcall
outsb
cmp
dec
push
mov
rolb
cmp
add
jb
mov
mov
mov
push
je
xchg
imul
movsw
insb
fwait
outsl
stos
gs
dec
out
sbb
std
test
push
mov
stos
pop
jecxz
in
xor
sub
xor
movsb
mov
loop
jnp
jmp
das
dec
jne
sbb
jp
jo
cwtl
scas
sbb
sub
data16
aam
xor
stos
pop
frstor
mov
daa
mov
xchg
pop
sti
scas
sub
fcoml
sub
jle
sub
mov
adc
add
rep
pop
mov
pop
clc
cltd
loope
xor
lds
loop
jno
imul
sub
sub
jg
daa
xor
repnz
jo
mov
imul
adc
push
and
into
mov
mov
data16
sbb
daa
into
in
out
leave
jg
std
cmp
push
lahf
cmpsb
inc
daa
mov
jae
jnp
loope
push
lret
dec
out
or
or
mov
xchg
scas
adc
out
and
push
pop
ljmp
jo
addr16
shr
es
scas
cld
sbb
xchg
mov
dec
incb
sub
jg
push
adc
fwait
jbe
out
jno
das
mov
mov
imul
xchg
adc
les
sbb
sub
mov
aas
mov
mov
xchg
xor
loopne
xchg
in
leave
xchg
into
jne
mov
jo
add
in
mov
sbb
push
shrb
push
in
inc
inc
nop
ret
pop
mov
aas
cs
jmp
or
rep
mov
push
orl
sbb
inc
inc
xchg
adc
jle
jns
push
adc
pop
cmp
into
push
fstpl
nop
andl
call
jns
call
lds
xlat
sbb
inc
cltd
int
xor
xor
std
scas
notb
lcall
lahf
mov
mov
inc
test
test
dec
movsl
lcall
or
sub
insl
cmc
imul
pop
cmp
push
ffree
xchg
mov
jg
pop
pop
dec
push
lods
or
rorl
xor
adc
out
int
push
jmp
mov
dec
jl
jns
pop
push
movsl
mov
add
scas
pop
outsb
sbb
lcall
outsl
jo
pop
and
xlat
dec
fwait
pop
leave
outsl
lea
movsb
iret
mov
xlat
gs
and
data16
in
dec
jnp
loop
shrl
mov
fldcw
adc
out
push
pop
out
jle
out
cmc
hlt
or
sbb
repz
cli
dec
fcmovnu
repz
and
and
imul
cmp
jle
mov
loop
mov
data16
or
xor
divl
pop
mov
out
xchg
repz
add
cwtl
push
jo
fwait
movsb
ss
ja
mov
mov
daa
ret
icebp
loope
lea
insl
addr16
or
lea
add
icebp
or
dec
out
jge
cld
sbb
out
mov
out
stc
test
jo
std
pop
in
scas
or
mov
imul
xchg
outsb
mov
jg
mov
jbe
add
addb
pop
rcrb
popa
daa
addr16
jb
jp
jmp
dec
sti
je
daa
out
mov
jae
jo
out
enter
jno
arpl
imul
std
mov
jns
subl
in
clc
or
bnd
jns
cmc
ja
fildl
testb
icebp
sub
jae
xchg
imull
jno
jno
jno
js
jmp
stos
imul
js
imul
xor
jle
imul
sub
loope
or
jb
push
xchg
mov
mov
ja
in
das
data16
push
pop
mov
jecxz
add
data16
movsb
data16
lods
mov
sahf
mov
movsb
scas
out
loope
stos
jg
call
das
jmp
and
ss
popa
fistpl
jo
xlat
sub
sahf
pop
popf
aad
cwtl
clc
jo
mov
jne,pt
loope
shlb
test
enter
dec
jl
outsl
pop
mov
mov
push
and
pop
cmp
lcall
loope
lods
pop
pop
test
push
nop
xor
pushf
sbb
data16
push
pop
or
lcall
fwait
xchg
jmp
mov
shrb
ret
xlat
xor
mov
js
rclb
jle
repnz
pop
pushf
cmpb
push
fwait
cmp
loope
pop
aas
cmp
mov
das
xchg
mov
cld
jg
pop
pop
mov
std
ret
test
cld
dec
fmulp
repz
inc
dec
adc
movsl
into
insl
jno
mov
push
jno
sahf
mov
cmp
cmp
cmp
into
jns
jmp
ds
pop
xor
pop
jge
sbb
lcall
inc
xchg
dec
jmp
xchg
ret
pushf
push
cmp
lret
mov
mov
pushw
lods
mov
mov
inc
cmc
dec
into
call
incb
test
xor
xchg
push
and
loope
jp
xchg
or
push
xor
iret
mov
into
and
push
cmp
fimull
jecxz
idivl
sti
mov
xchg
push
ret
js
dec
and
add
fwait
inc
mov
or
fldenv
in
dec
cmp
jecxz
xchg
sbb
shl
int3
pop
mov
inc
inc
cmp
ret
test
lock
xchg
repnz
adc
jg
jno
xchg
mov
sbb
mov
inc
sbb
pop
mov
cld
aam
mov
cmp
xchg
sti
lahf
inc
shr
in
stos
scas
or
mov
xchg
or
push
mov
arpl
in
sahf
sbb
and
fsubrs
movsb
imul
pusha
cmpsb
jp
les
lea
aam
data16
sbb
scas
push
gs
push
pop
mov
cmp
lds
arpl
xor
cli
sbbl
pop
insl
sub
loope
fs
lods
jb
push
in
pop
scas
pop
mov
push
jb
jo
ljmp
xor
outsl
xchg
gs
movsb
call
jmp
test
push
ds
mov
pop
jae
loope
jbe
adcb
mov
and
inc
gs
cli
cmpsl
imul
pushf
jge
mov
dec
inc
xor
std
arpl
fildl
mul
in
out
hlt
jle
push
cmc
fs
sahf
lods
aaa
insl
mov
out
fwait
imul
xchg
mov
ja
jne
dec
outsb
out
push
cmc
mov
pop
sbb
jo
pushf
je
cmc
mov
mov
bound
data16
xchg
sbb
in
mov
adc
nop
cld
push
jno
jo
outsl
je
arpl
xchg
push
out
movsl
pop
data16
test
pushf
shrl
sbb
ret
jno
jl
repnz
push
jae
div
test
out
in
stos
fildl
ja
jge
sub
nop
out
data16
out
in
out
jbe
and
jg
out
ja
jns
pop
loope
xchg
jb
std
push
popa
push
ja
mov
rep
out
cmp
js
clc
addr16
data16
outsb
push
hlt
gs
fstl
ljmp
pop
inc
xchg
mov
jbe
push
cli
cmc
loop
gs
mov
add
jge
mov
je
and
testl
adc
push
pop
mov
xor
dec
add
data16
or
in
and
pcmpeqw
subb
cmp
jg
int3
xchg
call
fstps
and
sub
ja
sub
in
insb
dec
dec
rorl
xlat
cs
pop
loope
ret
mov
popa
or
xor
fnstcw
outsl
xchg
ss
mov
in
in
sub
je
idivl
es
mov
adc
and
insb
cmp
hlt
pop
lcall
lods
jo
jmp
lea
and
jbe
adc
adc
sub
fs
push
jg
mov
popa
popa
loop
inc
rolb
std
pop
and
xor
sti
sbb
clc
xchg
pop
les
adc
xchg
ja
mov
test
ss
je
jle
jg
fdivl
outsl
inc
cmpsb
fcmovb
jp
xchg
mov
xchg
or
pop
rolb
out
inc
bound
lods
sahf
fsubs
push
jmp
and
cmpsl
aaa
mov
pop
outsb
xchg
pop
jecxz
and
inc
shlb
popa
mov
mov
cmp
in
sub
out
out
sbb
lods
sbb
cltd
add
pushf
outsb
add
subl
mov
sbb
das
add
xchg
sbb
lcall
cmp
outsl
sti
cmp
add
sbb
push
inc
jg
jg
dec
test
sbb
je
lcall
outsl
or
js
lods
dec
test
addr16
cld
lcall
jo
in
dec
out
into
sub
cmp
jle
outsl
movsl
shll
lods
cmp
adc
inc
mov
mov
cwtl
int
sahf
addb
aad
lds
jae
lds
jmp
outsl
xchg
jmp
adc
insb
jg
dec
in
decl
dec
inc
lahf
jle
rolb
jecxz
mov
aas
lahf
mov
mov
popa
cs
and
std
xlat
or
into
adc
sbb
sub
or
dec
bound
jmp
repz
jp
mov
mov
fldt
xchg
xchg
adc
sti
dec
hlt
pop
faddl
xor
push
movsl
ficompl
mov
outsl
or
ds
jge
outsb
stos
cmpsb
pushf
adc
sub
jle
pop
popa
push
clc
adc
jns
add
out
sub
rcl
mov
out
jnp
sbb
push
jecxz
xchg
divb
jge
dec
inc
pushf
dec
and
push
aam
lea
stos
fistl
lahf
outsb
xchg
pop
ss
xor
mov
int
xorl
int3
fidivs
mov
stc
loop
inc
aaa
test
or
mov
rclb
jo
inc
aam
jg
fsts
dec
mov
idivb
cmc
push
mov
pop
sub
dec
or
xor
call
ds
popa
data16
sbb
or
add
cmp
pop
sbb
bound
fdivrp
xchg
lock
jo
ror
sbb
cmp
xchg
cmpl
mov
jle
adc
xchg
pop
push
jg
fstl
clc
dec
and
inc
loope
sbb
or
cmovge
faddp
pop
sub
fisubs
jle
jne
in
dec
push
mov
lahf
std
adc
icebp
mov
pop
jne
push
sbb
test
icebp
sti
movsl
jg
push
sahf
mov
jo
fadds
outsl
adc
cmc
cmp
ret
sub
nop
dec
imul
jg
dec
aaa
xor
in
fwait
shll
jo
fnstcw
sbb
jbe
jmp
adc
mov
and
loop
push
lcall
sbb
aas
out
dec
aad
sbb
sub
lret
jl
es
mov
sub
cmp
test
sbb
insl
scas
or
xlat
mov
lret
mov
mull
sarb
clc
inc
hlt
pop
cmp
jo
loopne
inc
int3
cld
inc
std
fnstcw
dec
aaa
cli
xchg
pause
xchg
sti
pushf
lea
jbe
je
push
fwait
cmpl
scas
xchg
ret
testb
lret
mov
cld
out
lcall
cmp
jno
cmpsb
adc
clc
pushw
into
sbb
sub
jg
mov
xor
repz
dec
jmp
loope
jle
ljmp
mov
lods
cmp
pop
xchg
push
cmc
lahf
inc
rorl
lcall
rolb
push
sub
cmc
out
jg
stos
add
jle
mov
jge
push
jp
xor
add
imul
clc
jg
nop
ds
stos
add
int3
and
pushf
push
and
movsl
iret
call
out
les
lcall
test
cmp
pusha
and
lds
mov
outsb
fidivl
hlt
std
cmp
scas
fldt
jmp
cmp
popf
push
adc
test
data16
or
mov
test
out
push
orb
adc
aaa
sub
fldz
jmp
adc
popf
aas
stos
and
jae
int3
xlat
pop
mov
mov
mov
mov
mov
dec
pop
xor
lods
sti
jno
adc
into
jg
pop
fdivs
filds
int
mov
into
addb
xchg
inc
pop
push
mov
pushf
mov
sbb
popf
imul
push
xchg
adcl
stos
add
cwtl
sub
mov
sub
scas
mov
fstpt
dec
cmpb
push
cli
fsubrs
out
xchg
adc
enter
xchg
cwtl
int
popa
in
inc
mov
repnz
xchg
cmp
adc
mov
mov
mov
pop
out
cmc
rcrb
enter
mov
into
outsl
popf
in
dec
add
push
jge
pushf
fdivr
xlat
and
mov
repz
cli
ja
data16
imul
and
xor
xchg
sub
out
movsl
sbb
outsl
jg
push
shlb
mov
mov
xchg
movsl
cltd
mov
jnp
cmp
adc
pop
mov
in
and
sub
movsl
adcl
movups
xor
es
cli
sbb
scas
in
mov
mov
jle
pushf
or
sti
repnz
mov
dec
cld
xchg
push
call
mul
lea
scas
mov
mov
pop
sbb
jp
fs
out
rcl
aad
adc
push
xor
mov
divb
xchg
mov
sbb
idiv
push
jp
fldt
cmp
nop
or
pop
loop
sti
outsb
jg
out
adc
fwait
add
xchg
mov
xor
outsb
jb
jns
daa
sbb
fsubrl
popa
mov
inc
inc
ds
call
popa
cmp
xchg
rcrl
lcall
int3
xor
insl
clc
mov
push
ds
sub
jb
lcall
push
fwait
jns
cmp
aas
sub
dec
xor
aam
mov
pop
and
ret
jg
add
mov
push
push
jmp
or
cmpb
fst
sti
xchg
test
jno
mov
stos
out
and
pop
and
daa
in
jecxz
xlat
sbb
mov
xor
mov
cmpsb
lds
pop
dec
jg
xchg
ror
bound
neg
cmc
sbbb
push
mov
outsl
jnp
jns
mov
mov
jecxz
adc
rcll
push
das
pop
fiaddl
mov
aas
xchg
or
lods
jo
jb
pop
mov
push
int
add
mov
nop
imul
mov
or
push
mov
mov
add
int3
xchg
cli
pop
stc
sti
jecxz
mov
mov
jg
loop
mov
jg
pop
shrl
mov
or
fs
lret
jl
fisttpl
imul
popa
sbb
jg
push
and
movsl
cmp
daa
sbb
jmp
fldl
imul
jnp
sub
clc
jae
movsl
add
jp
jle
sbb
cmp
xchg
loopne
and
pop
test
xchg
stos
push
sarb
xor
int3
inc
scas
shl
xchg
loope
adc
addr16
sbbb
loop
and
xchg
pushf
lods
in
arpl
cs
sbb
and
mov
dec
pop
lods
xchg
fnstsw
mov
xor
and
push
sbb
movsl
lcall
jae
arpl
dec
adc
pop
fistps
sbb
imul
xchg
lods
mov
addb
ss
sbb
inc
sbb
es
pushf
clc
mov
mov
cmpsb
xor
and
push
stc
rcrl
inc
dec
dec
aam
push
mov
gs
outsl
ljmp
dec
movsl
mov
shlb
and
pushf
push
adc
mov
sbb
mov
popf
lahf
xor
insl
ljmp
and
mov
ds
ljmp
sbbl
jg
xchg
out
mov
adc
sahf
jo
sbb
insb
rep
cmp
jns
pop
int
iret
add
lea
scas
jno
push
inc
ret
fldenv
pushf
je
fildll
subb
scas
adc
or
and
jae
mov
jl
push
imul
dec
js
xor
mov
jo
arpl
mov
pushf
cmp
fs
outsl
jnp
mov
sub
mov
das
add
enter
icebp
inc
cltd
cmp
or
sbb
les
fisttpl
clc
cltd
mov
repnz
mov
mov
subl
mov
pusha
pop
adc
mov
or
repz
cmp
out
out
xor
sbb
int3
push
mov
mov
mov
mov
push
mov
fs
pop
or
jg
subb
lods
ds
mov
loope
or
dec
mov
test
ret
xorb
jbe
and
divl
out
dec
jge
call
stos
and
xor
jae
and
or
lock
push
nop
bound
adc
cmpsl
lret
xchg
lcall
fsub
mov
test
scas
lahf
cld
jp
jo
mov
out
fwait
lock
mov
fs
mov
inc
je
fwait
fs
xor
in
cmp
int
test
mov
fadds
into
inc
xlat
into
mov
fdivl
sbb
pop
and
push
iret
cmp
setnp
jns
sbb
sub
into
imul
mov
cwtl
rol
mov
push
aad
or
sbb
jo
push
lods
xchg
subl
movsl
sub
xchg
hlt
cmpsl
fldt
test
in
mov
lods
cmp
in
fs
push
push
rol
xchg
adc
in
add
test
push
ror
pop
cmp
pop
xor
std
stos
xchg
jge
xchg
aas
cld
js
fcmovnu
jle
inc
cmp
outsl
fcmovne
dec
leave
cmp
add
adc
pusha
in
xchg
cld
lods
dec
stos
push
push
jl
xchg
repz
push
gs
jbe
jmp
mov
sub
xor
cmp
pop
mov
test
dec
outsl
cwtl
outsl
scas
lds
pop
jnp
sbb
lret
inc
jo
push
or
pop
js
inc
cmp
data16
rclb
popf
rorl
aam
mov
pop
lcall
nop
arpl
push
push
jo
adc
hlt
or
xchg
jge
lahf
mov
jle
cmp
mov
jnp
add
inc
fwait
jo
sahf
sbb
cmp
mov
lahf
or
xor
jecxz
iret
xor
loop
push
mov
and
and
popa
out
aas
and
fcoms
mov
jns
and
mov
sahf
out
jg,pn
cld
sbb
fcmovne
pushf
push
and
sub
jne
shrb
cmc
inc
stos
dec
mov
mov
sbb
inc
dec
imul
add
jg
mov
call
jmp
repnz
pusha
mov
inc
jp
ljmp
xor
sbb
shlb
mov
sub
mov
jle
jmp
clc
dec
popa
jns
addr16
pop
inc
sar
xchg
or
pop
sub
jnp
cmp
or
in
roll
iret
int
popa
pop
movsl
aam
repnz
push
xchg
xchg
sub
mov
outsb
jecxz
popa
mov
out
clc
sti
pop
popf
mov
xchg
xor
mov
leave
negb
outsb
int3
add
push
lods
inc
pop
cmpsb
cmp
mov
jnp
shl
jg
testb
test
ret
push
aam
jnp
mov
or
inc
fcoms
mov
dec
sub
inc
cwtl
inc
enter
out
sahf
scas
add
popf
je
sbb
aam
mov
mov
or
sbb
or
cltd
loope
hlt
push
sub
in
lcall
insl
xlat
jle
imul
push
outsl
mov
dec
loopne
sbb
cli
and
sbb
mov
push
jae
sbb
or
dec
addb
sbb
sbb
cmpsl
xchg
xchg
dec
sub
jg
jb
or
or
jmp
fiaddl
fs
dec
jo
lds
cmp
in
jnp
adc
insl
cli
dec
jnp
imul
je
jne
inc
push
cmpl
sti
adc
rcll
xchg
pop
aas
sbb
pop
insl
insl
mov
fnstcw
mov
out
scas
imul
jns
outsl
inc
cltd
xchg
sbb
dec
rcrb
aaa
xchg
int3
insb
pop
clc
outsl
adcb
cs
repnz
dec
jg
mov
aam
decl
gs
mov
jp
cltd
inc
jg
add
movsl
push
cmpsb
jmp
inc
pop
out
lahf
add
popf
std
jae
mov
cld
pop
mov
add
jbe
xchg
sbb
sbb
inc
sahf
sub
call
xor
in
lods
mov
imul
jno
pop
adc
inc
sub
scas
cmp
push
adc
dec
orl
pop
mov
cmp
xchg
mov
pushl
mov
rorb
repnz
cli
inc
mov
push
cmpsb
cmpsl
add
subl
xor
dec
lahf
xchg
ljmp
jbe
adc
jmp
or
jecxz
xchg
lahf
mov
scas
sti
jno
hlt
push
daa
and
sbb
outsl
cmp
add
jecxz
int3
and
std
sub
popf
xchg
inc
jg
pop
decl
data16
insb
clc
hlt
mov
loop
sub
cmp
aas
add
mov
pop
out
adc
mov
rclb
push
lcall
daa
jne
outsl
xchg
rclb
mov
scas
dec
fwait
in
sahf
gs
push
inc
pop
imul
vmovdqa
xchg
add
arpl
xlat
sbb
dec
jnp
jg
or
out
jge
loope
sbbw
adc
out
cmpsb
sub
jle
cmpl
jno
aam
in
sbb
and
pop
cli
clc
in
mov
pushf
mov
in
jg
test
sarb
pop
mov
je
fsubrs
lcall
jg
add
outsl
add
int
xchg
jg
clc
cmpsl
pop
ficoml
jmp
repz
push
mov
shlb
inc
inc
or
div
adc
dec
dec
fistl
lret
mov
xchg
xor
pop
scas
fsubrl
mov
shll
pop
lods
loop
lcall
movsl
cmpsb
loop
stos
in
pop
mov
xrelease
cld
data16
sar
aad
jbe
std
lea
inc
movsl
jg
ss
jno
mov
out
pop
les
mov
mov
xchg
mov
xorl
icebp
std
into
pop
push
sahf
and
xchg
jecxz
movsl
aad
push
mov
dec
sub
jae
ds
inc
fcoml
sbbb
insl
stc
sahf
adc
dec
and
sub
xchg
push
mov
in
and
lgs
mov
push
ss
pop
ds
jno
mov
cmp
adc
idiv
loopne
aas
sbb
mov
jne
movsl
jg
mov
loop
mov
adc
outsl
popf
sub
sti
lret
inc
ja
popf
imul
loopne
push
addr16
mov
jo
lcall
xchg
movl
fisubl
mov
jmp
mov
mov
cmp
icebp
push
mov
mov
cmc
mov
popf
nop
lcall
sti
cmp
repnz
test
xchg
push
sub
addl
cmp
jle
lcall
test
dec
shrb
and
xchg
lods
cmp
push
mov
jne
cmp
pop
mov
xchg
xor
std
imulb
jg
fdivl
cmp
ja
push
adc
jns
insb
mov
pushf
mov
add
outsl
inc
or
mov
sahf
mov
push
inc
jae
cmp
sub
rorl
xchg
add
int3
lret
sub
and
pushf
sbb
gs
aaa
ljmp
outsl
out
add
mov
sar
cltd
xchg
mov
push
mov
in
lcall
out
jg
leave
cwtl
popf
xor
add
jmp
pop
scas
sub
sub
or
cli
cli
jp
into
or
jmp
mov
out
aam
jge
jo
or
sbb
aas
mov
daa
dec
ja
push
mov
adc
jg
or
add
fneni(8087
sti
out
dec
movsb
jo
inc
or
pop
xchg
sarl
adc
pop
in
inc
je
pop
jg
out
jecxz
jl
outsl
leave
lret
inc
mov
mov
fistl
xorl
shrl
dec
sbb
aas
mov
jmp
jne
imul
out
push
ret
jmp
adc
jo
or
jno
jmp
jnp
mov
je
loop
lea
jl
mov
cmp
xchg
sbb
mov
lcall
insb
addr16
adc
insb
xchg
aas
ja
leave
adc
xchg
jp
push
jo
mov
rclb
stos
insb
cmp
adc
xchg
lock
pushf
dec
fstpt
xchg
cld
sub
pop
adc
mov
mov
aaa
inc
xor
jo
sub
mov
rorb
int
cmp
push
loop
mov
insl
jl
outsl
shll
inc
xchg
add
push
movsl
jg
std
cmp
data16
bound
mov
insl
stos
pop
xrelease
in
or
sub
cs
sub
fisubl
or
jnp
faddl
cld
ret
xor
cmp
dec
pop
xor
mov
xchg
pop
jg
in
in
nop
out
scas
inc
cmp
or
mov
cmp
pop
xchg
xchg
pop
mov
jnp
mov
inc
xor
les
xor
repz
sbb
and
ret
mov
ficoms
call
pop
push
pop
jnp
mov
sub
pop
clc
mov
lods
mov
adc
pop
push
lea
cmc
adcl
cltd
push
scas
pop
mov
cmp
push
add
dec
jae
fldenvs
jno
aad
lds
jbe
push
loope
push
movsl
sbb
pop
cmp
push
dec
xor
lcall
xor
test
icebp
sub
popf
popa
test
lcall
outsb
jg
push
xchg
and
jae
inc
gs
in
push
int
data16
fwait
outsl
adc
sbb
and
and
aas
push
cld
push
inc
mov
add
ja
addl
int3
out
std
rcrb
or
dec
add
cmpsb
pushf
popf
into
cs
xorb
xor
mov
push
fimuls
mov
adc
stc
mov
out
mov
inc
int
inc
test
aaa
ja
jle
in
mov
sbb
mov
std
test
imul
xchg
push
sub
sarl
rcl
iret
loope
out
int
xchg
cmp
sbb
js
sub
inc
pop
mov
je
idivl
adc
in
pop
lds
clc
lds
and
jmp
shlb
inc
subb
xchg
movsb
imul
push
scas
insb
lea
push
sahf
pop
jns
js
outsl
xchg
xchg
mov
cmp
mov
hlt
outsb
fsubr
inc
add
inc
fldt
jmp
pop
fdivr
addb
in
sbb
adc
rcrb
andl
scas
push
mov
int3
adc
or
in
insb
dec
das
inc
packuswb
sub
gs
outsb
loop
pop
icebp
jmp
jp
outsb
out
adcb
inc
and
scas
mov
lods
dec
shl
inc
cmp
xlat
stos
inc
dec
popa
loopne
mov
shr
addr16
adc
sbb
leave
fwait
jge
inc
pop
jp
scas
dec
adc
xchg
mov
mov
lods
es
add
mov
and
repz
cmovg
outsb
rcll
fistps
xor
inc
mov
stc
dec
iret
push
sub
xchg
mov
inc
xchg
dec
iret
push
loop
xchg
sbb
std
out
mov
and
cs
mov
ror
mov
enter
xor
enter
shrb
inc
loopew
inc
inc
ss
jb
sub
scas
and
bound
stos
inc
mov
out
xchg
in
mov
das
mov
sbb
xor
loop
fildl
mov
imul
adc
out
es
mov
es
sbb
in
sbb
in
push
aas
xor
mov
lds
and
lea
cmp
jg
xor
jnp
xchg
cs
mov
lcall
in
cmp
jp
addr16
out
mov
imul
ret
in
ret
iret
mov
jo
dec
cs
dec
sub
daa
scas
sub
or
push
out
pop
jo
movsl
pushf
rclb
test
xor
mov
jmp
xchg
lahf
adc
or
in
push
hlt
outsl
std
movsl
test
jg
adc
cmp
mov
sub
push
pushf
pop
inc
js
ret
and
xor
push
adcl
cmp
sahf
clc
cmp
popf
adc
pushf
cmpsb
inc
cmc
xchg
cld
push
clc
je
outsl
or
and
push
gs
outsl
or
and
es
out
lock
scas
cmp
fs
mov
sbb
jbe
or
cmp
mov
das
inc
xor
xchg
adc
adc
xchg
int
cmp
jne
mov
bound
push
insl
out
cmp
rclb
cld
sub
out
adc
sub
unpckhps
cmp
inc
flds
mov
idivl
adc
cmp
xchg
fs
jb
in
adc
shll
push
and
jmp
fbstp
lods
out
subb
mov
adc
arpl
ljmp
out
imul
gs
xchg
and
movsl
arpl
adc
mov
pop
or
pop
inc
scas
fs
push
and
fstp
rcrl
dec
mov
cltd
daa
mov
cmpsb
sub
add
add
xchg
out
popa
fsubl
jb
ljmp
push
addb
xor
orl
iret
cmp
ja
jb
mov
sahf
cmp
sahf
xchg
sub
lret
xchg
loopne
stos
dec
sub
mov
mov
lods
xchg
jg
jbe
leave
outsb
inc
push
pop
or
or
push
imul
repz
int3
pop
movsl
aam
sub
jo
js
or
mov
push
sar
rol
inc
lret
jne
pop
cwtl
mov
std
xor
loope
pop
imul
lods
pop
je
outsl
out
pop
lds
xor
repnz
sub
cli
jmp
shl
lods
test
out
adc
lea
inc
push
mov
outsl
xor
sbbb
cmp
hlt
loop
xchg
lods
ja
mov
fcmovnu
xorb
push
mov
repnz
ljmp
cs
insb
fsubrl
cmpsl
out
icebp
or
cmp
or
pop
test
push
sbb
ret
pushf
push
loopew
insl
add
in
mov
jge
data16
movsl
cli
adc
inc
pop
mov
andb
popa
adc
outsl
shld
xor
fwait
xchg
cs
std
lods
in
gs
mov
pushf
bound
iret
outsl
ja
andb
movsl
test
pop
mov
popa
inc
in
jmp
cld
aaa
push
cmpsb
arpl
ficomps
jae
nop
cmp
jns
cmp
lret
push
arpl
in
adc
fidivrl
loop
daa
mov
mov
adc
lock
clc
not
push
inc
or
insb
mov
pop
loop
sub
lret
and
add
pop
shlb
loop
mov
mov
pop
loopne
pushf
pop
pusha
into
negl
inc
movsb
sbb
loop
shlb
sti
addr16
lock
cmovge
out
mov
xor
cmp
mov
cmp
lret
or
stos
gs
mov
shll
sub
outsb
jle
lcall
jne
push
fcomps
pushf
jmp
mov
js
es
ss
push
or
pop
aas
out
mov
inc
sbb
lcall
clc
or
arpl
stos
adc
sbb
out
pop
sahf
xchg
jmp
adc
mov
or
test
xor
idivb
add
fs
out
das
pop
jbe
mov
cmp
push
mov
divb
mov
jg
out
cmp
orb
cmp
mov
adc
pop
mov
inc
sub
xchg
sub
or
loope
imul
frstor
mov
xorl
test
mov
pop
insb
ret
cmp
cmp
mov
fwait
pop
pushf
lcall
ret
xor
leave
cmpl
mov
insb
sub
inc
xor
and
sub
adc
test
cld
outsl
and
setp
push
xchg
addl
push
xchg
sbb
xchg
insb
dec
jge
repz
push
pop
sub
jp
imul
arpl
outsl
es
mov
pop
add
sub
stos
jl
xchg
ja
insb
lahf
in
and
addb
lret
aaa
jecxz
push
mov
dec
sub
setg
jmp
das
jae
push
sub
or
jo
clc
fisubrl
hlt
arpl
or
daa
jmp
lret
mov
or
push
out
mov
shll
sub
dec
xor
push
mov
in
bound
mov
in
adc
adc
sbb
mov
leave
xor
jne
lock
addr16
ljmp
ficompl
shll
cmp
inc
inc
jge
jg
xchg
jno
xor
cmpsb
hlt
mov
jg
pop
stc
sbb
jo
pop
inc
scas
not
dec
sub
loop
aaa
mov
sti
jle
loope
sub
cmp
and
mov
std
jecxz
ret
mov
jns
sbb
cmpsl
fists
stc
jo
stos
orl
adc
sbb
or
iret
outsl
jno
xchg
push
cmpl
mov
es
jo
and
ret
sub
jae,pn
push
insb
in
outsl
inc
das
bound
sbb
popw
jg
dec
push
add
scas
aad
sub
lcall
mov
cli
loope
clc
dec
out
mov
xchg
mov
add
pop
jmp
shl
cmc
xchg
imul
mov
xor
stos
cs
dec
imul
sbb
fisubs
stos
inc
popf
sti
mov
or
push
dec
pop
adc
ss
jg
cwtl
aam
or
push
sbb
movsl
xor
jg
cltd
push
add
pop
and
scas
popa
mov
fdivrs
sbb
outsl
mov
or
ljmp
scas
es
jg
pop
mov
test
jns
popf
clc
xchg
or
stos
outsb
xchg
fisttpll
jne
or
xchg
fs
dec
aaa
shrl
xchg
je
outsl
cmpsl
mov
shll
sub
jmp
pop
pop
mov
xchg
or
movsb
mov
fadd
mov
jge
sub
adc
cwtl
pop
mov
stc
xor
jno
or
idiv
xchg
insl
leave
mov
nop
push
mov
mov
mov
mov
dec
popa
mov
test
xchg
ret
out
mov
mov
or
lcall
outsl
arpl
outsb
xchg
leave
lret
jg
ds
sbb
outsl
adc
pop
lcall
loope
ljmp
mov
mov
or
pop
dec
and
ds
mov
xchg
fdivs
inc
dec
lods
fisttps
or
loopne
inc
push
inc
mov
outsl
lret
jg
in
subl
mov
arpl
jl
pop
push
rol
loop
xchg
jo
out
xor
fucompp
pop
ret
out
loope
pop
xlat
jne
inc
pushf
mulb
sub
mov
lock
jmp
jnp
xchg
push
test
jecxz
pusha
dec
mov
jle
dec
mov
in
pop
shll
pushf
dec
or
sub
shrl
std
out
sub
sbb
sub
jl
shll
data16
test
fisttpl
push
add
iret
mov
push
stos
pop
stos
jl
or
dec
fwait
xchg
jnp
sub
push
sbb
inc
test
dec
sbb
lcall
sbb
mov
xchg
sti
push
and
jg
in
shlb
iret
cmp
lret
mov
jmp
insb
ret
jo
mov
out
notl
rcll
out
sub
xchg
add
ror
push
dec
sbb
movsl
jnp
mov
stc
adc
mov
push
lcall
jg
lahf
dec
loop
jl
adc
repnz
pop
push
arpl
call
pop
xor
int3
enter
xchg
mov
jo
repz
mov
adc
push
xchg
fldenv
push
rolb
data16
lea
inc
cltd
aad
adc
mov
dec
push
jne
mov
mov
pop
cmp
add
adc
arpl
adc
enter
insb
mov
or
inc
push
mov
add
mov
sbb
inc
jecxz
cltd
xchg
fildl
insb
addb
sub
jg
mov
jb
in
pop
jno
mov
push
lret
ja
sti
insl
jno
adc
mov
and
imul
xchg
xor
sub
lods
xor
xchg
jo
cmp
pop
jns
dec
call
sub
mov
stos
cltd
sbb
and
pusha
fimull
jno
xchg
cmp
mov
fs
outsl
rcrl
loope
cmp
jo
ud1
lds
jo
cmp
or
cs
inc
scas
mov
lea
add
cmc
push
data16
pop
fiadds
dec
out
push
and
and
sbb
gs
scas
mov
lock
iret
lods
in
adc
cld
int
cmp
lcall
aad
push
push
pop
dec
sbb
lahf
movsb
and
movsb
xchg
xor
sbb
sub
icebp
movsb
mov
cmp
fs
jne
repz
jmp
mulb
mov
stc
outsl
outsl
xchg
add
mov
mov
xor
repz
add
add
ss
cwtl
pop
lret
jo
cmp
test
or
xchg
pusha
mov
and
mov
add
jo
lods
call
inc
movsb
mov
xor
es
out
sbb
loopne
cld
pop
jl
inc
add
xor
js
insb
adc
inc
mov
sbb
dec
fsubl
mov
and
mov
mov
test
pop
insl
loop
pop
int
sbb
mov
ss
sahf
jnp
xchg
push
mov
scas
sub
insl
je
fwait
out
fistpl
or
lods
xor
mov
jns
insl
jne
adc
and
and
aas
adc
or
repnz
je
xor
or
mov
jo
lret
divb
scas
inc
sbb
lcall
fdivrp
stc
mov
cmp
out
scas
mov
xchg
push
sbb
xor
sbb
pop
add
pop
cmp
adc
mov
jne
addl
mov
daa
shlb
mov
sub
mov
stos
imul
ret
cmp
fimuls
outsl
mov
mov
xchg
arpl
adcb
jb
ss
sbb
xor
das
push
xor
mov
sub
sub
scas
mov
cmp
clc
cmp
cmp
cmc
movsl
je
outsl
mov
repz
and
in
cmp
push
or
inc
adc
rcll
mov
mov
insl
xor
mov
rcr
fisubrs
rcrl
into
adc
cmc
shrb
pop
dec
and
jle
jnp
inc
enter
gs
popa
inc
inc
adc
cmpsl
sub
dec
jne
outsl
test
nop
jecxz
sahf
scas
jg
test
hlt
push
aam
clc
loopne
add
and
add
sub
adc
bound
sti
fidivs
jle
int
stos
mov
jnp
punpcklwd
push
bound
mov
xchg
jae
sbb
push
leave
pop
jge
fistpl
pop
mov
and
popf
push
xchg
arpl
sbb
adc
add
jg
mov
cmc
movsb
scas
jg
arpl
sar
fs
in
jns
sbb
adc
sarl
cmpsl
sub
mov
mov
mov
add
in
xchg
pop
sub
sub
mov
cmp
fcmovnb
ja
adc
out
jo
xchg
je
js
pop
jbe
scas
loopne
mov
jge
add
mov
lret
icebp
sbbl
xor
in
and
or
shr
rcll
icebp
xchg
push
jg
imul
in
xlat
pushf
dec
mov
inc
aam
stc
push
in
push
loope
psubsw
add
mov
push
lock
das
xchg
outsb
gs
jb
dec
cmp
icebp
fsubp
mov
movsl
data16
test
xchg
popf
pop
sbb
int
loop
xchg
and
sbb
mov
inc
push
or
mov
outsl
cwtl
lret
xchg
rolb
sbb
out
xchg
sarb
mov
scas
notl
push
mov
adc
dec
cmpl
rcrb
xor
adc
es
push
xchg
inc
mov
lea
cmp
iret
cmp
mov
inc
scas
push
sahf
sti
cltd
rcrb
or
fucomip
sahf
cmp
push
mov
xor
and
popf
jmp
jb
ja
or
fucomi
adc
rclb
cwtl
loope
insb
lcall
lds
fwait
scas
jg
lock
repz
dec
inc
mov
clc
sarb
call
pop
cmp
je
xlat
jp
jns
adc
popf
fnstsw
loop
inc
pop
mov
xor
arpl
loope
mov
xor
pop
mov
jmp
xchg
jns
mov
int
dec
mov
out
test
lret
xchg
outsl
xchg
movsl
les
insb
and
push
inc
xor
jp
sbb
jns
inc
dec
xor
cmpl
clc
rolb
scas
and
sbb
xchg
stc
xor
aas
mov
jp
push
stos
adc
fnstcw
pop
jl
push
push
or
mov
sbb
cs
xorb
and
push
adc
xchg
mov
push
les
xlat
ret
sti
daa
popf
lcall
xchg
orb
pop
adc
pushf
dec
sbb
lods
or
fisubl
mov
sub
mov
jo
and
nop
lret
add
sub
loopne
mov
or
lea
lods
aas
cld
fwait
mov
imul
leave
test
iret
push
ljmp
mov
pushw
jb
sub
ja
icebp
jmp
aad
out
push
jp
repnz
stc
repnz
ss
or
or
pop
es
mov
cmc
incl
pop
jecxz
adc
xlat
test
push
or
pop
je
aas
push
ffree
push
in
and
xchg
popa
xor
jg
push
pushf
imul
cmp
imul
adc
dec
push
fnsave
lods
in
jnp
insb
das
dec
ficoml
rcll
lret
pusha
fwait
mov
fstl
dec
sub
and
xchg
pop
sub
jg
mov
fdivrl
rol
outsl
sbb
in
push
pop
out
ljmp
stc
aam
fnstenv
pop
shl
test
inc
sub
pushf
enter
mov
outsb
mov
sbb
and
push
mov
dec
mov
dec
arpl
cmpsb
add
pop
notl
scas
fistpl
xchg
insl
pusha
into
inc
and
popa
lods
pop
mov
sub
jns
ret
cmp
popf
pop
mov
add
inc
jp
cmpsl
fcmovbe
mov
and
cwtl
pusha
pop
std
lret
sbb
jg
stc
dec
xchg
ja
repz
out
jb
test
pop
mov
cld
pusha
aaa
mov
gs
fbstp
sbb
in
adc
scas
mov
or
xor
push
das
mov
sbb
mov
xor
andl
xchg
aad
adc
ja
gs
mov
aad
mov
das
rcll
add
and
subl
xor
adc
xor
repnz
test
sar
ljmp
outsl
aad
inc
leave
pop
fdivrs
dec
push
lcall
sbb
jmp
sbb
mov
arpl
jp
outsb
clc
call
xor
push
xchg
lret
sub
add
rcl
mov
pop
or
mov
push
mov
loopne
and
pop
nop
jbe
pushf
or
mov
jg
fs
lods
icebp
sbb
cltd
cwtl
imull
xchg
xorb
mov
out
mov
fdivl
popa
jle
push
mov
in
mov
fldcw
fwait
lret
es
jno
clc
out
in
xchg
scas
and
mov
jg
or
shld
mov
bound
enter
jns
jg
lods
cltd
fwait
outsl
js
popf
lret
mov
push
jmp
negb
fldt
jecxz
add
addr16
add
imul
setl
adc
cmp
cmp
out
jmp
add
adc
inc
jecxz
pop
mov
jl
adc
mov
xor
jmp
daa
jg
pushf
mov
filds
add
lock
or
mov
ja
jg
test
sbb
xor
add
jecxz
sub
stos
stc
in
loopne
xchg
aaa
outsl
lods
lds
jnp
lahf
shr
imul
lret
aaa
loope
bound
outsl
sti
inc
pop
test
inc
inc
mov
aad
lret
outsl
lods
je
and
and
xlat
adc
xchg
jg
fisubl
inc
jmp
mov
popf
js
subl
xor
pop
out
fsubl
cmp
sbb
mov
mov
xchg
mov
mov
bound
test
jmp
popa
xchg
aaa
sbb
or
cli
mov
cmp
cmpsl
push
sbb
call
jae
movsl
jo
mov
pop
jecxz
insb
les
fdivrp
jg
mov
adc
pop
mov
test
ret
xchg
bound
je
ja
jg
unpcklps
mov
addr16
jns
je
xchg
cmp
xchg
dec
movsl
pop
inc
lds
rclb
pop
lahf
jnp
push
xchg
or
push
int
xchg
jg
ss
or
or
or
jns
xchg
and
inc
push
sub
hlt
mov
sub
sbbl
cmp
cmp
jle
cmp
mov
jnp
mov
or
mov
jl
jns
jae
inc
pushf
pop
jle
add
mov
into
loopne
cmpsl
jecxz
fstpl
repnz
fnstsw
push
stos
push
stos
push
inc
xchg
ja
imul
push
outsl
popa
inc
std
imul
movb
sbb
fiaddl
out
jge
and
icebp
or
lcall
or
fcoms
out
cmp
movb
in
lock
xlat
jmp
add
into
shlb
xchg
sbb
insb
imul
lock
mov
clc
add
stc
pop
push
and
outsl
adc
mov
xchg
cmp
push
mov
sub
in
rorb
inc
sbb
cld
arpl
inc
cmpsl
adc
pop
push
das
aad
xchg
sbb
fstpl
cmp
popf
cmc
cli
inc
pop
negl
fstpt
adc
pop
imul
xchg
dec
outsb
daa
push
pushf
lods
or
xchg
dec
jp
adc
in
jnp
data16
xchg
jmp
xchg
xchg
clc
xchg
jnp
push
mov
movsb
push
sbb
mull
pop
jle
popf
mov
lea
loop
mov
in
les
fidivl
outsb
cmc
or
loop
sbb
repnz
and
sarl
es
call
cmp
in
jg
ss
arpl
mov
pop
and
aam
lock
dec
cmpsb
addr16
mov
lock
mov
testl
push
adc
push
and
push
outsl
fs
sub
jo
sbb
sub
push
push
pause
scas
shlb
je
fwait
scas
adc
mov
mov
jge
test
fucom
ljmp
movsb
testl
bound
pop
sbb
pop
not
mov
push
or
sub
lock
xchg
xchg
loope
adc
in
mov
mov
sbbb
leave
adc
jg
bound
adc
fucomi
fs
daa
testb
clc
bound
dec
je
fwait
insb
inc
fdivr
and
sub
movsl
fisubl
bound
lds
ficomps
and
jg
inc
int
push
jb
jne
or
pop
inc
mov
pop
movsl
out
xor
lret
xchg
and
dec
shll
push
xor
or
test
sbb
mov
lods
fs
outsl
es
fxch
fnsave
or
jle
std
and
clc
add
mov
mov
adc
fnstsw
dec
mov
sbb
aad
pusha
add
pop
dec
push
cltd
sbb
push
mov
mov
mov
sub
jg
shrb
sbb
pop
out
pop
loop
lret
push
xor
out
mov
mov
mov
push
push
jge
pop
les
mov
leave
dec
movhps
das
popf
shrb
xchg
movsl
cmpsl
clc
sbb
mov
pop
sbb
lahf
xchg
push
and
jmp
mov
ds
fldt
insb
pop
loopne
push
in
xchg
rcll
mov
fmulp
mov
sub
jo
insb
jb
pop
int
in
data16
scas
imul
sub
xchg
push
int3
out
mov
push
dec
xor
movl
dec
imul
and
xlat
mov
fwait
jle
adc
dec
movsl
fisttpll
push
mov
rorl
int
enter
mov
pushf
rcr
dec
mov
outsb
enter
sbb
mov
sbb
imul
adc
mov
insb
sahf
loop
pop
mov
adc
mov
push
add
testb
xor
lret
les
sysret
push
stos
sub
jo
cmp
repz
jns
jae
and
aaa
pop
sub
ret
xor
jecxz
ja
out
jp
cmpsb
outsl
adc
frstor
test
addr16
or
push
jo
int3
jns
sub
inc
mov
fucomi
sbb
mov
sub
cmp
lds
xchg
adc
xchg
push
dec
repnz
loopne
jo
out
cmp
into
into
cmp
fistpll
jp
mov
sti
or
xchg
stos
imul
jl
jg
and
scas
scas
fnsave
or
sub
imul
adc
mov
inc
test
mov
or
xchg
cmc
out
shrb
je
leave
jle
jns
and
or
outsl
loopne
dec
leave
dec
bound
xchg
ss
and
icebp
cmp
jno
and
insb
cld
aas
jo
pop
leave
loop
outsl
xchg
mov
repz
mov
xchg
shr
pop
pop
pop
stos
jle
lcall
inc
or
jne
lcall
pop
movsl
out
dec
push
mov
jbe
add
inc
movsl
dec
ja
jmp
out
xlat
popa
mov
inc
xlat
loopne
ficomps
arpl
sarb
repz
pop
pushf
fbstp
cli
lret
lock
shlb
mov
data16
dec
xor
lods
adc
lcall
mov
mov
movsb
jne
aad
outsl
xchg
lds
mov
mov
xlat
jo
sub
jo,pn
mov
outsl
mov
inc
add
pop
inc
sarl
gs
shrb
push
rorb
or
shl
mov
stos
push
pusha
add
dec
inc
mov
push
mov
movsl
pop
inc
and
ds
inc
jo
jg
fwait
mov
jbe
bound
xor
sti
outsl
subl
push
add
lea
idivb
inc
fidivl
outsl
cmp
inc
pop
movsb
ds
push
leave
ljmp
cld
dec
xor
ljmp
mov
fistpll
lcall
loope
cwtl
pop
sbb
mov
inc
inc
in
inc
stc
fistpl
jecxz
and
mov
inc
xchg
or
rcl
sbb
pop
imul
mov
lcall
push
scas
xor
imul
or
lods
cmpsb
or
outsl
mov
push
jmp
imul
repnz
push
jg
lret
jnp
xchg
clc
sub
pop
cmp
scas
push
bound
or
leave
cmc
jmp
cli
adc
jns
mov
push
lock
push
mov
ja
sbb
fwait
add
in
or
cmc
arpl
dec
push
jnp
je
xor
adc
dec
and
clc
mov
pop
test
in
sbb
and
prefetch
daa
sahf
repz
stos
pop
cmpsl
add
loop
daa
cs
cmp
clc
outsl
or
xchg
mov
or
ja
outsl
or
mov
incb
aam
popf
inc
faddl
push
inc
shrl
mov
fcompl
sub
lods
mov
sub
mov
fpatan
outsb
inc
xchg
je
arpl
adcb
jle
xor
pop
add
fstpt
jns
jo
arpl
iret
jp
insb
xor
push
sub
sti
jae
out
sbb
mov
pop
cmp
xchg
out
loopne
popa
xchg
shlb
popf
inc
fs
adc
dec
dec
pop
add
int3
xor
jnp
in
mov
jbe
data16
out
sti
push
je
outsl
orb
decb
xchg
ja
enter
leave
fcompl
arpl
jg
insb
gs
mov
inc
sbb
dec
mov
adc
andl
dec
mov
jbe
repnz
out
repz
outsl
fidivrs
ljmp
popaw
in
in
out
data16
pop
in
data16
and
stos
jge
jae
cmpsb
mov
cli
aaa
mov
push
popa
pop
sub
fisubl
xor
popf
data16
jecxz
outsb
in
in
icebp
jae
adc
jae
mov
sub
or
arpl
push
push
outsl
popa
push
cmpsb
sub
mov
mov
imul
mov
out
pop
jne
jae
xchg
out
aad
or
ja
lods
cmc
add
outsl
js
or
xchg
pop
nop
xlat
popa
jne
jle
out
loop
js
jbe
jmp
out
jbe
add
add
cmc
repnz
mov
insl
cli
jae
ret
imul
mov
shr
and
lea
bound
and
outsl
pop
mov
push
jge
in
jl
jle
subb
arpl
imul
and
jno
jb
push
pop
shrl
test
push
inc
aad
xchg
jae
sub
stos
push
outsb
sub
mov
pop
sub
iret
bound
lcall
cmp
testl
dec
lcall
jmp
jmp
xchg
inc
mov
stos
je
add
add
sahf
addr16
and
into
nop
shrl
pop
and
in
in
fidivrs
inc
pop
repz
jg
cmp
fwait
sub
push
out
vxorps
ret
jo
popf
adc
lcall
sbb
mov
mov
gs
ficoml
cmp
jnp
jge
pop
jo
dec
mov
push
rcrl
xchg
jecxz
mov
inc
dec
and
es
int
dec
jbe
popa
jg
xchg
in
adc
imul
in
notl
rolb
lcall
xchg
insb
outsb
outsl
cmp
jo
cs
mov
sahf
movsl
in
movsb
lods
cmp
inc
or
mov
ds
pop
cli
jg
xchg
call
movsl
out
lcall
outsb
mov
pushf
cmpsb
ds
xchg
fimuls
aas
xor
das
popf
mov
mov
cmpsb
jmp
insl
mov
outsl
lcall
movsl
jge
cli
aam
push
mov
scas
xor
ljmp
mov
or
ret
dec
mov
cli
addb
jge
fadd
rcrl
or
cmp
jo
outsl
imul
sahf
pop
lcall
shlb
outsl
fimuls
ss
xor
sbb
sar
mov
dec
dec
lods
jno
mov
sbb
sti
fidivrs
mov
xor
in
sub
in
mov
pushf
in
icebp
inc
dec
test
jo
or
lcall
aas
movb
mov
jb
jnp
mov
dec
rcll
sbb
sub
stos
pushf
jg
mov
test
mov
push
loopne
jl
addr16
loop
or
rcll
popf
push
daa
sti
mov
push
sbb
xchg
pop
mov
dec
mov
fdivrl
cmp
mov
xchg
subl
adc
add
cmpsb
jae
mov
mov
insb
xchg
lcall
jnp
lret
imull
xchg
mov
and
sbb
dec
rclb
pop
sahf
push
mov
punpckhdq
dec
pop
mov
xchg
and
cmpsb
lock
pop
jae
jns
bound
pusha
or
add
and
add
popa
push
lcall
mov
add
data16
xor
inc
inc
cli
mov
pop
mov
stos
or
lods
add
mov
jle
lahf
push
jp
insl
pop
xchg
cmp
lahf
sarb
mov
sub
dec
imul
pusha
jo
adc
xchg
fiaddl
or
fdiv
pushf
add
cmpsl
jp
mov
xor
jg
iret
and
pusha
addr16
lret
xor
call
adc
jnp
jae
jg
push
mov
jge
lcall
and
int3
sti
mov
jae
mov
inc
adc
les
jmp
mov
mov
jmp
push
jnp
das
xchg
dec
imul
adc
mov
shld
or
jmp
ficomps
xchg
movsb
push
or
imul
sahf
dec
adc
movsb
das
divb
bound
lods
sub
jmp
mov
js
data16
ljmp
mov
rcrb
sti
pop
mov
call
insb
xchg
iret
dec
xchg
mov
pop
ret
mov
or
and
sub
shrb
insb
jns
rcrb
xchg
mov
cld
fcoml
nop
sbb
inc
and
xchg
jns
test
je
lcall
bound
pop
out
pop
push
sub
pop
jg
push
lods
add
pop
mov
xchg
sbb
jne
into
dec
fistpll
fstl
lock
imulb
push
adc
push
jnp
outsl
pop
dec
pop
imul
xor
or
mov
les
push
hlt
pop
rcll
daa
xchg
cmp
pop
sbb
pop
sbb
loope
sbb
in
add
call
sbb
sbb
dec
lret
out
add
pop
sbb
call
mov
dec
pop
je
lcall
sbbl
cmp
push
call
outsl
repnz
sub
scas
in
dec
push
das
mov
cmp
adc
ret
std
dec
inc
popa
popa
cmp
mul
jle
cmc
fsubl
xor
inc
xor
xchg
pusha
jo
testb
adc
adc
cmc
lods
xchg
sub
repz
outsb
stos
pop
xor
push
lds
imul
adc
pop
pop
movsl
mov
jmp
cld
jmp
pop
sub
xchg
fdiv
pop
loope
mov
sub
sub
pushw
cmp
outsl
mov
pop
jns
outsl
xchg
mov
lods
jo
inc
jge
mov
popf
mov
xor
add
xor
sub
lods
scas
adc
out
xor
jge
push
das
jno
int
jo
xor
lcall
leave
sti
outsl
sub
pop
ja
mov
or
rcr
lds
push
in
ficompl
sub
mov
xchg
adc
leave
lods
xchg
fiadds
mov
cmp
fs
dec
out
sbb
int
jbe
fidivs
pop
mov
xchg
pop
out
cmp
data16
sbb
dec
gs
mov
pop
inc
sbb
mov
jns
stc
je
jecxz
data16
testb
fistpl
aaa
cmp
mov
data16
loop
mov
scas
pop
push
cmp
inc
jne
pop
int3
fs
outsl
fcom
std
shlb
dec
or
jl
popa
lahf
insb
pushf
pop
jnp
adc
sbb
sbb
xorl
cmp
mov
jg
mov
mov
jne
mov
push
aaa
bound
mov
inc
outsb
sbb
out
adc
ja
push
clc
xlat
idivb
lcall
iret
aam
loopew
mov
xchg
inc
adc
test
clc
push
repz
sbb
popa
pop
jmp
push
imul
cmp
xchg
movsl
stos
movsb
cwtl
sub
or
sub
inc
hlt
mov
inc
enter
mov
pop
mov
test
mov
sub
pusha
mov
js
je
inc
imul
jne
fdivs
push
jae
popa
sarl
ds
sbb
fwait
lcall
repz
push
jecxz
pop
notb
push
jl
xchg
nop
outsl
leave
or
cmp
scas
aad
incl
cwtl
xor
stos
aas
and
mov
push
movsl
cmpsb
adc
jno
mov
adc
sahf
xchg
lcall
sbb
pop
jnp
cmp
and
mov
repz
sub
jmp
mov
or
test
popa
shl
cmp
fldcw
addr16
cmc
insb
loop
adc
or
push
fchs
inc
pushf
or
mov
add
xor
push
sub
xlat
adc
xor
shll
pop
or
xor
mov
adcb
shlb
push
addr16
lock
pop
jae
mov
lret
jg
mov
add
xor
xchg
js
xchg
sbbb
fs
mov
xor
jb
adc
pushf
push
lock
lcall
push
movsb
inc
in
sub
cmp
pop
xchg
outsl
and
pushf
movsl
inc
sub
jp
mov
sbb
es
icebp
mov
dec
inc
pop
mov
repnz
hlt
dec
cli
xchg
sbb
ljmp
mov
add
xchg
fs
jns
jg
lcall
mov
nop
outsb
mov
imul
pop
in
scas
sti
inc
jl
xorb
std
adc
xchg
lret
repz
pop
lret
mov
sub
add
imul
stos
aad
js
push
int
out
fwait
jmp
inc
jg
mov
lcall
testb
enter
outsl
daa
fistps
mov
jo
fs
mov
fistpl
cli
cmp
add
idivb
jbe
sub
mov
mov
cmp
pop
lcall
xchg
mov
cmp
pop
cs
mov
test
lahf
mov
out
lds
mov
stc
stos
iret
ja
loop
movsl
bswap
push
adc
insl
test
adc
mov
pushf
test
push
ljmp
lcall
push
cld
or
int
adc
call
aam
sbb
and
adc
push
xor
push
pop
leave
and
icebp
mov
jmp
mov
add
lea
sbb
sbbb
cmp
aam
push
hlt
cltd
es
jl
add
jg
sbb
ljmp
insl
fnstsw
xor
push
jnp
mov
sbb
out
fsubrl
or
je
sbb
xchg
sbb
sbb
mov
mov
test
xchg
xchg
add
lret
jbe
adc
call
loopne
clc
dec
jecxz
and
movsb
ss
mov
cld
clc
daa
jns
jo
inc
xchg
mov
mov
lods
in
adc
fldt
sarb
xor
mov
push
sbb
pop
pop
mov
cmp
inc
imul
cmp
mov
js
add
sub
add
repnz
aaa
push
jecxz
jns
pop
mov
pop
jg
push
adc
xor
xor
stos
in
jne
movsl
jae
ds
outsb
or
add
call
sub
pop
addr16
cld
mov
xor
sbb
xchg
or
int3
outsl
jg
push
nop
push
adc
pop
rep
ss
mov
in
xor
icebp
movsl
sub
outsl
outsb
push
lods
adc
je
popf
popa
mov
pop
imul
fadds
pusha
xchg
stc
sahf
jo
add
in
cmp
int3
movsl
call
pop
ja,pt
mov
pop
sub
jg
out
xchg
daa
mov
sbb
mov
mov
pop
popa
inc
mov
jg
cltd
adc
jne
fimuls
andb
fstpt
add
loop
mov
lcall
outsb
mov
out
push
gs
mov
dec
insl
xchg
daa
jo
ficoms
mov
fidivrl
loopne
std
and
cmp
mov
mov
pop
sti
mov
sub
stc
adc
add
loop
outsb
jns
shrl
cmp
stos
jb
sbb
lcall
je
mov
mov
cltd
es
jge
fwait
adc
sahf
add
scas
loop
push
fwait
iret
jmp
or
mov
mov
xorl
and
and
inc
into
mov
test
dec
cmpsb
loop
xor
mov
xchg
pop
jmp
movsb
repz
sub
arpl
pop
jmp
pop
sti
or
es
or
outsl
ljmp
nop
pushf
cmp
shrb
push
sbb
daa
xchg
loop
dec
fisubrl
into
mov
inc
mov
cwtl
stc
daa
sub
lcallw
xchg
inc
outsb
xchg
in
xchg
or
fnstsw
jns
fistl
mov
ret
or
sub
jg,pn
sti
fcmovnb
vcvttpd2dqx
cmp
sbb
adc
sbb
addr16
test
cmp
subl
mov
movsl
xchg
cmp
mov
cmp
lds
mov
lock
add
or
adc
inc
outsb
cmp
sub
popa
xchg
push
jle
cld
or
in
clc
and
sti
fistpl
xchg
mov
loop
xchg
lods
mov
sbb
xchg
sti
rcl
mov
loop
xchg
call
in
fndisi(8087
lcall
add
xor
repz
mov
push
mov
sub
or
push
scas
jno
sahf
enter
mov
or
jb
test
movsl
mov
data16
mov
int
movb
pop
shll
cmp
hlt
into
jmp
outsb
popa
push
into
int
lock
jae
sbb
lds
ljmp
jbe
insb
in
imul
adc
mov
inc
jg
scas
mov
lock
cmp
push
mov
out
aaa
movsl
and
push
push
lahf
movsb
or
and
xor
repz
nop
in
clc
imul
cltd
sti
mov
push
jo
popf
cmc
pushf
xchg
inc
mov
push
stc
in
add
mov
jle
test
aam
std
lods
mov
imul
mov
lock
jns
sbb
jae
pusha
lods
mov
call
testl
callw
mov
outsb
lds
ja
xlat
push
pop
mov
rcl
lods
push
roll
or
jg
dec
dec
mov
xchg
movsl
repz
popa
inc
jle
mov
clc
mov
arpl
push
orl
inc
jo
mov
das
fbld
sti
cs
jo
cli
jle
xor
ja
cwtl
inc
xchg
out
shl
jb
and
adc
js,pt
pusha
mov
mov
push
cmp
iret
or
cmp
jmp
cwtl
push
xchg
xchg
repnz
les
sbb
pop
jnp
and
dec
jns
adc
jmp
dec
ja
xor
outsl
or
je
fwait
test
jg
mov
repz
sub
jb
pop
and
sti
push
arpl
xlat
and
fisubs
repnz
insl
adc
jmp
sub
dec
sahf
mov
cltd
popf
inc
imul
cltd
push
and
inc
jmp
push
pusha
mov
dec
jg
fpatan
mov
pop
xchg
inc
mov
fsubrs
outsl
shrl
je
aam
cmpsb
repnz
fs
jmp
push
fmull
lret
lahf
movsl
xchg
add
sbb
aad
dec
mov
hlt
jl
cmp
arpl
push
lcall
jmp
xor
mov
dec
adc
sbb
inc
mov
rcll
xchg
int3
push
cld
sbb
inc
push
xchg
push
inc
or
jne
stos
pop
fsubrl
subl
sub
gs
pusha
test
ficoms
adc
frstor
outsl
jl
mov
test
adcl
pop
cmpsb
sarb
pop
inc
imul
sbb
pop
mov
clc
insb
and
roll
mov
push
xchg
je
jmp
mov
outsl
mov
jbe
push
push
loopne
or
sbb
jg
mov
xor
out
icebp
jg
int3
aam
je
adc
movsl
nop
or
out
fistpl
incl
dec
scas
inc
jg
sahf
lods
mov
push
and
std
fnstsw
int
mov
mov
pop
xchg
rclb
outsl
pop
or
xchg
xchg
hlt
mov
xchg
pop
gs
pop
xlat
and
add
mov
ja
pop
mov
mov
imul
test
adc
rcrb
pop
mov
mov
addl
shll
xchg
xor
lahf
bound
and
and
dec
test
xor
sbbb
cs
addr16
gs
cltd
clc
or
jnp
outsb
inc
push
fcomip
dec
adc
sti
mov
scas
jne
sbb
jg
push
pop
add
ss
movb
in
xchg
lods
xchg
jg
jno
pop
loop
cmpsb
mov
pusha
xchg
dec
and
inc
mov
jo
and
mov
frstor
ja
clc
test
inc
mov
mov
repz
out
inc
sub
jne
imul
loope
out
fistpl
fwait
pop
xchg
stc
dec
leave
shll
leave
add
lds
pop
dec
nop
jg
faddp
mov
mov
test
mov
outsb
shlb
scas
xor
aas
cmpb
push
je
ret
mov
jmp
and
sub
mov
inc
jae
jb
mov
shlb
call
jns
push
out
lret
sub
js
pop
inc
dec
sbb
fcmovnu
hlt
cmc
jle
fwait
mov
call
sbb
filds
lods
pop
or
mov
loop
xor
sahf
dec
insb
movsl
jp
adc
sbb
push
mov
xchg
dec
aad
xor
mov
jp
inc
cltd
jg
mov
loop
fadds
cltd
rdmsr
sub
ds
jne
xchg
xlat
fwait
cmp
jmp
or
mov
fmull
jecxz
divl
inc
jae
jns
es
repz
arpl
dec
push
or
sbb
xor
outsl
hlt
fistpl
pushf
jo
jge
adc
imul
sbb
test
in
mov
sbbl
pop
sahf
test
lret
xchg
mov
sub
xlat
pop
fidivl
jno
push
or
leave
cmc
jns
lods
scas
dec
nop
push
and
xchg
xchg
dec
movsl
shlb
mov
sub
fwait
sub
sub
and
fwait
outsl
stos
xchg
jge
push
clc
cld
mov
mov
shlb
and
mov
jb
or
add
sti
addr16
and
or
sbb
dec
lret
add
and
dec
call
aam
loopne
jle
popa
pop
jg
sbb
scas
inc
mov
sub
or
dec
gs
cltd
mov
daa
jns
data16
das
add
push
mov
rcrl
cld
lahf
adc
xchg
mov
addb
stc
adc
xor
lcall
jecxz
jg
cmpsl
pop
dec
jb
add
out
cmp
xor
inc
inc
aaa
and
inc
leave
pop
mov
adc
lret
popa
or
inc
xor
lods
jecxz
xchg
inc
and
repz
fwait
lcall
lods
pop
out
loopne
test
pushf
push
mov
imul
push
nop
test
jg
stos
jg
dec
jl
sahf
cmp
jns
out
sbb
pushf
gs
adc
lahf
jl
xlat
insb
fsub
fildl
aad
imul
repnz
xlat
pop
in
jb
dec
xchg
pop
shrl
nop
xor
scas
fiaddl
inc
jg
bnd
orl
jne
push
sbb
insb
pushf
inc
and
xchg
push
jo
jns
sbb
add
jmp
jp
jle
fsubs
movb
arpl
mov
out
popf
mov
ret
je
jns
and
insb
rcrl
cwtl
sub
clc
mov
mov
out
sbb
and
push
mov
lret
mov
cmp
lcall
shrb
test
adc
ja
jp
sub
jb
shl
mov
inc
cmp
cmp
jns
xchg
fnstenv
aam
leave
js
and
jge
imul
lds
inc
jle
pop
dec
orb
adc
inc
mov
ret
stc
test
dec
pushf
inc
inc
jo
testb
in
ds
jae
out
adc
pop
or
in
fwait
xor
loop
pop
fmull
gs
fs
push
call
orb
xchg
aam
enter
cli
inc
lods
gs
jecxz
fistpl
jecxz
test
rolb
into
gs
lahf
mov
stos
push
pop
stos
mov
and
insb
cmp
repz
xchg
mov
stc
cmp
sbb
pushl
push
sub
adcl
sub
pushf
hlt
mov
loop
bound
addr16
cpuid
es
cmp
sahf
ljmp
xor
daa
mov
fwait
outsl
mov
nop
lret
dec
xchg
mov
int3
add
sub
neg
sbb
sbb
imul
mov
or
jno
fisubs
mov
fldenv
cmp
das
lds
jg
add
fistl
test
xchg
es
and
xchg
dec
dec
xchg
inc
push
lcall
jo
pushf
cmp
mov
mov
jg,pt
dec
and
jne
mov
jecxz
or
pop
arpl
inc
lcall
jne
mov
pop
sti
clc
scas
xchg
jecxz
mov
stc
into
cli
fdivrl
xchg
jae
jg
cmp
jg
nop
adc
loope
lret
lods
adc
add
push
mov
addr16
or
repz
push
xchg
jae
lcall
cs
pop
pushl
mov
or
xchg
jmp
sbb
repz
xchg
push
and
adc
dec
sbb
icebp
push
scas
insb
cli
jo
aam
inc
push
sahf
mov
push
sti
cmpsl
dec
roll
xchg
push
sti
flds
stos
scas
lret
mov
pop
push
lock
lcall
or
cmp
cmpsl
dec
stos
dec
orl
dec
mov
lcall
mov
mov
lods
nop
test
int
lahf
mov
loopne
adc
je
pushf
pop
xor
fistps
cmp
mov
sub
aad
xor
je
jbe
push
cmp
test
xchg
add
xchg
lds
xor
adc
movsl
and
push
jl
xchg
dec
test
jg
adc
jecxz
sbb
pop
xchg
xchg
and
pop
mov
xchg
pop
testl
aas
insb
outsl
cmp
mov
xchg
cmpsb
or
and
adc
mov
mov
push
adc
cwtl
jo
push
lcall
inc
mov
xor
xlat
jl
xor
push
scas
jns
jle
ss
pusha
push
mov
pop
movsl
iret
xchg
inc
rolb
repz
outsl
jno
or
mov
movsl
repz
fdivs
dec
pop
rol
cli
mov
push
scas
cmp
mov
jno
dec
pop
jecxz
xlat
fs
insb
inc
mov
push
rorb
add
in
pop
pop
dec
cs
cmpsl
stos
pop
mov
xlat
pop
cwtl
sub
jg
cld
sub
or
sarb
adc
sahf
ss
sub
imul
cmp
mov
subb
push
lods
mov
mov
jbe
pop
mov
psubusw
pop
push
mov
sbbl
in
hlt
repz
mov
xor
fcmovnu
pop
int
fwait
mov
lds
xchg
cmp
push
shrb
or
and
mov
push
adc
lahf
imul
cwtl
or
cmpl
sbb
in
pushf
and
testl
lcall
int
out
outsb
loop
aaa
pushf
clc
jle
je
subb
cltd
jg
mov
pushf
jbe
andb
cmpsl
sbb
xchg
pushf
cmp
rclb
cmpl
mov
mov
bound
jge
stos
jmp
adc
mov
mov
mov
repnz
push
push
xchg
das
aam
jns
loope
inc
insb
stos
jmp
scas
jb
push
iret
sbb
cmp
and
add
out
pusha
lcall
outsl
cmpsb
repnz
sub
shl
mov
cmpsl
add
push
pop
cmp
adc
mov
cmp
cmp
fwait
sbb
add
clc
dec
adcl
xlat
pop
xor
adc
xor
push
jns
push
imul
inc
mov
data16
adc
pop
inc
imul
lret
sub
sbb
xor
outsl
push
mov
sbb
fildl
push
fs
push
clc
mov
test
rclb
sbb
in
sbb
divb
fidivs
adc
pop
popa
popf
inc
popa
mov
cwtl
mov
daa
mov
popa
scas
repz
lret
pop
andl
pop
test
jecxz
ljmp
xor
sub
test
insb
gs
test
xor
popa
repz
xor
sbb
scas
popf
mov
xorl
jmp
pop
mov
and
movb
adc
dec
pushf
sub
or
cld
sbb
dec
adc
pusha
aad
push
idiv
jg
sub
mov
or
cwtl
push
lahf
jb
fstps
lcall
int
dec
or
daa
or
dec
movsl
push
cwtl
xchg
negb
dec
out
imul
cld
pop
imul
scas
add
adc
shll
and
pop
xorb
jg
loop
jns
lds
cli
dec
cmp
outsl
xchg
out
scas
jns
pop
fdivrl
rclb
sub
inc
and
nop
cmp
movsb
ret
fisttpll
pop
cmp
pop
cmp
xchg
test
xchg
pop
jle
mov
insb
cmp
out
pop
add
inc
adc
addr16
or
or
cmp
jae
fs
jmp
aad
clc
jl
or
inc
dec
xor
xchg
ja
jo
ret
cmp
mov
idivb
sbb
outsl
int
jb
adc
js
pop
ret
cmp
sub
add
xor
push
imulb
into
pop
push
in
jmp
mov
xchg
and
or
movsl
jmp
stc
add
data16
cli
push
or
xchg
jbe
jae
fstpl
shlb
xlat
jg
xchg
add
xchg
ja
imulb
fwait
push
outsl
fldt
rolb
jp
sbb
cltd
cmpsl
ret
pop
fcmovne
cmp
mov
add
jmp
mov
sbb
popa
push
sbbl
in
pop
das
mov
lods
xchg
fadds
xchg
inc
pop
push
mov
movsb
enter
negb
add
pop
mov
and
mov
mov
sbb
sbb
xor
int
jnp
outsb
insb
cmc
dec
mov
lcall
std
xchg
out
jle
cli
jg
lcall
mov
or
ror
mov
aam
imul
lods
rol
sbb
repnz
jmp
or
push
cmpsl
decl
in
sti
mov
adc
aas
mov
adc
mov
push
or
movsl
mov
cmpsb
jg
sbb
xchg
push
out
mov
push
mov
push
dec
xchg
xor
mov
aad
jecxz
push
data16
jo
xor
sti
ds
mov
popa
push
leave
gs
add
into
insb
ja
mov
sti
rorb
aam
jbe
xchg
ss
addr16
jo
pop
js
insb
fisubl
aam
sub
ljmp
fsubrs
imul
frstor
jge
or
xchg
adcb
mov
push
sub
je
rcrl
and
xchg
pushf
jns
mov
sub
inc
stos
xchg
mov
jno
sahf
sbb
out
cmpsl
push
cwtl
ret
and
daa
out
test
ja
pop
dec
mov
jmp
call
inc
dec
icebp
cmpb
bound
add
icebp
sub
cmp
repz
pop
insl
and
mov
lods
enter
cmp
xor
sti
cltd
clc
cmp
loopne
jne
pop
and
pop
scas
pushf
jbe
bound
repz
or
jne
insl
mov
les
lds
xor
mov
jg
and
adc
das
jg
xchg
sbbl
or
push
mov
mov
cmpb
out
mov
pop
fstl
es
out
add
scas
inc
fstpt
decb
clc
or
inc
sbb
inc
insb
mov
scas
mov
cmp
lcall
pop
jecxz
cld
xchg
jnp
dec
sub
mov
mov
cmp
popa
cmp
adc
hlt
mov
frstor
popf
outsb
or
cmp
xchg
jno
rclb
jl
insb
pushf
rcrb
jg
stc
js
outsl
int3
push
scas
mov
dec
mov
sarb
leave
sahf
adc
lahf
repz
mov
pop
xchg
repnz
andl
je
mov
add
aad
fwait
test
bound
sahf
mov
push
mov
push
fbstp
jns
sub
subl
add
xchg
jno
in
lock
adc
pop
mov
adc
push
sti
jns
sahf
addr16
adcb
sbb
lds
push
insb
sahf
jo
cmp
cmpb
push
add
jl
fcom
notb
dec
sbb
cmpsl
pop
pop
sub
ds
call
popf
and
lret
aas
pop
dec
xchg
negb
iret
mov
xor
stos
out
sbb
push
dec
push
mov
out
mov
sbb
pop
jmp
js
adc
leave
and
jnp
imul
popf
in
stos
xor
test
and
in
test
fadds
xchg
sub
or
es
inc
sub
mov
and
adc
and
add
mov
je
fwait
rol
mov
sub
addr16
and
mov
test
pop
inc
call
in
pushf
mov
jb
inc
mov
js
xchg
cwtl
mov
jle
outsb
push
outsl
scas
cmpsb
xor
jo
imul
ljmp
sbb
sub
test
test
imul
mov
shll
sbb
out
push
and
aam
and
add
lds
mov
movsl
stos
lods
orl
inc
dec
adc
aas
fiaddl
lock
out
sbb
icebp
pop
cmp
adc
jns
push
pop
je
ss
shll
daa
je
mov
push
outsb
int3
cmp
nopl
adc
rcrb
xchg
adcb
popa
int
lods
mov
jbe
movsl
mov
movsl
cwtl
sbb
dec
xor
jo
lcall
and
out
jecxz
arpl
rolb
in
das
xchg
push
push
inc
outsb
movsl
jns
adc
bnd
push
fildl
xchg
pop
dec
dec
dec
lcall
sbb
jge
adc
lea
shrl
scas
ficomps
clc
mov
mov
mov
aas
pushf
mov
mov
add
xor
add
jl
ret
push
jmp
mov
popf
cli
mov
and
sbb
fwait
pop
rcr
cli
inc
je
push
inc
jg
rcrb
dec
add
push
mov
pop
sarl
sbb
scas
dec
dec
xor
bound
cli
jbe
jge
mov
xchg
subl
popa
stc
jl
xor
out
sbb
xor
sbb
mov
push
xchg
mov
popf
adc
lcall
loop
aad
loop
mov
push
stos
adc
jge
mov
lcall
sbb
jmp
jns
sti
ss
lds
or
mov
jno
fs
mov
sti
stos
jp
ds
sbb
aam
xchg
lcall
xor
cmpsl
ret
scas
adc
mov
ja
out
sub
gs
dec
mov
cmp
loopne
push
mov
out
push
ficoml
out
and
lret
cmpsb
push
mov
dec
sbb
lret
insb
jp
das
or
repz
lock
xor
mov
dec
aad
xor
jnp
add
pop
movsl
jbe
idivl
outsl
ljmp
xchg
and
fbld
fstpt
insb
xor
sahf
pop
and
push
aad
loope
cmp
or
outsb
rclb
insb
test
mov
xor
inc
lods
cmp
lcall
or
inc
loop
jmp
xor
ss
scas
and
xchg
and
add
enter
test
int3
pushf
inc
out
jle
or
mov
inc
inc
xor
adc
in
sub
mov
subl
and
jg
into
lahf
outsb
push
loopne
lods
dec
int
jle
jns
in
push
lods
jl
in
sti
and
lea
std
push
mov
cmc
stos
and
mov
jnp
sbb
stc
xchg
and
xchg
dec
xchg
xchg
xor
lods
icebp
jmp
mov
jl
int
sbb
and
xchg
data16
jecxz
jmp
add
sti
pop
mov
sub
out
adc
imul
mov
xchg
inc
jecxz
rcrl
mov
addr16
adc
mov
scas
mov
gs
data16
test
push
jp
and
mov
js
lcall
mulb
test
push
andl
lret
lcall
push
outsb
push
movsl
rorl
cmp
xchg
js
fldt
push
add
arpl
mov
push
inc
stos
inc
jns
jb
pop
in
sbb
scas
push
xchg
push
mov
pop
scas
and
xor
jecxz
cmp
fcoms
mov
ja
pop
pushf
arpl
xchg
mov
loope
cld
outsl
or
insl
das
popa
jg
adc
aad
xor
in
mov
push
sbb
mulb
jo
das
int
movsb
in
jmp
mov
scas
aam
shlb
inc
orl
inc
pop
mov
cmp
jg
xor
push
lods
adc
mov
mov
jo
imulb
cltd
jo
jo
xchg
scas
pop
inc
rorb
mov
hlt
movsb
in
insb
loope
jno
xlat
sub
xor
sbb
jns
dec
mov
push
mov
jecxz
dec
aam
fisttpl
and
out
cld
pop
or
in
incb
mov
or
aaa
jmp
pushf
cmp
mov
xlat
fcomi
clc
loope
and
inc
mov
jae
ficoms
pop
repnz
and
inc
push
cmc
insl
test
test
mov
cmp
and
pop
jno
or
jecxz
pushf
fimuls
pop
lock
mov
dec
and
ficomps
test
pusha
mov
mov
imul
shlb
pop
mov
sbb
inc
scas
les
pop
or
add
mov
xchg
test
lahf
das
fisubl
leave
mov
pop
sub
jno
sbb
inc
nop
and
in
xorl
jle
jecxz
int
ja
adcl
stos
outsb
sbb
andl
clc
push
fwait
outsl
ret
ja
out
adc
adc
push
push
js
lret
outsb
or
and
or
mov
xorb
mov
out
cmp
aad
fildl
subb
mov
jae
push
fstpl
clc
xorl
enter
mov
xchg
inc
push
scas
nop
cmpsl
jl
jg
call
mov
jecxz
mov
xchg
xorl
push
test
push
cmp
aaa
xor
fistpl
gs
lea
sbb
roll
pop
pushfw
stos
dec
sbb
fnstsw
dec
cmpsb
cmpsb
adc
push
add
aaa
mov
jmp
xor
inc
jg
test
pop
outsl
outsb
leave
mov
jbe
lea
in
mov
mov
fdivl
sbb
mov
adc
inc
jg
adc
sti
or
in
mov
mov
repnz
fldl
sbb
out
fisubs
or
stos
xlat
pop
jae
cmp
pop
push
nop
addl
xor
fwait
hlt
jle
dec
mov
mov
mov
in
mov
xor
in
cmp
mov
jns
and
pop
repz
adc
add
repz
je
xchg
movsl
lcall
mov
dec
rorb
ftst
decl
mov
push
jnp
das
sub
jmp
inc
cmpsb
jo
sti
test
cmp
ficoml
mov
pop
lods
jns
mov
aaa
xor
out
push
enter
pop
mov
in
aad
lock
ret
fistpll
push
clc
scas
stc
movsl
dec
scas
shrl
and
mov
cmp
adc
arpl
repnz
mov
xchg
jp
pushf
inc
data16
add
mov
in
outsb
pop
mov
xchg
repz
insl
popf
fdivrl
push
stos
cwtl
pusha
push
and
ss
push
cmpsl
mov
jmp
loopne
decb
xchg
sbb
outsb
or
insb
xor
loop
je
notb
rolb
jg
jge
adc
push
xchg
roll
insl
xchg
sbb
xchg
and
xchg
xchg
push
or
xchg
sbbb
xor
faddl
pop
popa
xchg
sbb
lods
xor
dec
ja
aad
jnp
mov
dec
lods
jbe
adc
clc
cmp
or
loope
fs
jo
ror
xor
shrl
xchg
es
into
je
sbb
fwait
xchg
lods
sub
cmp
xchg
jg
adc
pop
xor
mov
movsl
dec
lock
xchg
jp
sbb
cmp
loopne
outsb
push
pop
jno
jbe
pop
cmpsl
sub
and
cwtl
stc
add
jmp
rcr
push
outsb
mov
xor
rcll
jle
cs
xchg
ds
stos
bnd
mov
push
popf
xchg
shrb
icebp
jae
jnp
jle
add
pop
mov
sbb
jns
stc
lods
mov
inc
cmp
pop
push
lcall
arpl
pop
mov
divps
xlat
mov
push
add
fwait
mov
xchg
popa
mov
fstpt
insb
mov
pop
pop
cmp
jmp
sbb
inc
pop
adc
jnp
and
das
add
cmp
push
mov
movsl
into
and
aam
cld
ss
repz
inc
sbb
pop
xchg
stc
outsb
gs
xor
sbb
pcmpeqb
lcall
addr16
mov
sbb
outsl
jns
sub
cmpsb
inc
and
cmp
shlb
out
rep
cmp
mov
pop
das
insb
xor
mov
lods
push
and
xlat
stc
push
mov
sub
test
cmp
sbb
sahf
push
mov
dec
pop
std
mov
outsb
dec
pop
jle
pushf
or
adc
or
je
out
ret
jb
and
sti
lret
adc
xor
ret
fistpl
movsb
push
push
xor
jg
or
out
push
aam
cwtl
repz
jge
pop
xchg
call
xchg
sub
push
faddp
push
push
cmpsl
negl
or
and
cmp
sub
enter
mov
leave
dec
cwtl
cmp
sbb
jo
add
mov
jg
js
lods
fwait
scas
nop
sbb
dec
fldenv
lret
repz
inc
ss
add
sti
xchg
push
push
xlat
jnp
jg
xchg
or
nop
into
mov
insb
pop
cmp
push
insl
fdivr
outsl
ja
bound
repnz
fnsave
cld
test
fyl2xp1
jge,pn
clc
sbb
inc
add
xchg
dec
insb
xor
cld
notl
nop
cmp
test
in
sar
xor
in
cwtl
in
and
ljmp
subb
sub
push
fwait
push
mov
mov
push
or
outsl
mov
fiaddl
inc
mov
sbb
inc
and
movsb
lds
out
mov
sbb
stos
lret
xchg
or
adc
sbb
cli
fld
fs
lea
lcall
jae
xor
inc
pop
or
push
outsl
sbb
jo
mov
gs
cmp
add
dec
lret
mov
mov
inc
stos
jne
lods
xchg
clc
ret
repz
aam
sbb
cld
xchg
cli
xchg
fwait
call
jl
jle
mov
and
add
adc
add
je
out
mov
movsl
pop
jo
mov
push
cmp
mov
or
subb
push
push
inc
jbe,pn
aaa
dec
pop
in
and
in
sub
xchg
cli
leave
scas
jg
call
cld
rcrb
mov
add
int3
push
sub
sub
sub
dec
mov
scas
es
mov
jle
fwait
push
pop
clc
bound
sbb
cmpsl
adc
xor
mov
decl
in
js
pushf
adc
xchg
not
fmul
pop
out
cmp
and
popf
pop
mov
stos
fdivl
mov
into
mov
pop
arpl
rorl
aaa
inc
and
out
sub
jmp
add
xchg
adc
sarl
outsl
push
dec
aaa
dec
fbld
mov
imul
add
adc
fisttpl
mov
push
aad
dec
mov
fsubrl
jecxz
jg
fsubr
xchg
or
jae
or
mov
mov
sbb
movsb
stos
lret
sbb
psubd
test
mov
test
mov
push
subl
faddl
gs
add
adc
int
sub
mov
fnstcw
fadds
aad
mov
lods
mov
push
js
xor
mov
andb
pop
popa
cmp
test
pop
lcall
jno
addr16
and
out
pop
cmp
ds
cwtl
lea
popa
aas
or
add
and
jno
int3
mov
imul
inc
xor
xchg
mov
or
mov
hlt
jnp
loopne
xchg
nop
or
movsl
enter
pop
outsb
jnp
sub
cmp
mov
pop
mov
fldl
ret
jg
daa
push
pushf
lods
inc
jo
adc
gs
cmp
sti
cmp
push
popa
xor
orb
add
cltd
and
xor
in
stos
lods
sub
sbb
movsl
and
xor
cmpsb
sbbl
jb
xchg
sub
push
scas
cld
repz
loop
push
and
inc
test
insb
and
sbb
dec
mov
xchg
xor
sbb
mov
jg
out
push
rol
and
push
out
lea
mov
inc
insb
inc
incl
nop
add
jg
test
imul
sub
pop
and
iret
and
sub
pop
inc
int
pop
jbe
jg
adc
int3
xor
jo
xchg
scas
push
xchg
ljmp
mov
mov
insl
je
outsl
mov
les
cmp
jne
fs
pop
add
lcall
mov
add
das
sub
xor
dec
lcall
dec
ds
mov
ret
sahf
jbe
mov
mov
adcb
and
push
cs
jp
push
sar
test
lcall
pop
repz
mov
movsb
xchg
adc
popa
push
adc
sub
repz
fistpll
sub
ljmp
xlat
mov
sbbb
jns
mov
lcall
xchg
test
xchg
xchg
shl
dec
and
pushf
push
push
ja
pop
gs
into
iret
cmp
lea
push
mov
cmp
fldl
jno
pop
push
cmp
mov
adc
xchg
xchg
jno
out
and
sarl
dec
jb
push
fstl
fbstp
dec
lcall
insb
cli
lock
adc
push
jge
aaa
ds
cmp
lock
data16
lcall
lret
xchg
cltd
or
mov
test
mov
sub
mov
sar
rcpps
cwtl
mov
filds
adc
fs
idiv
imul
inc
dec
popf
push
dec
pop
cmp
in
add
fdivrl
or
jo
sub
daa
jbe
mov
mov
sbb
push
inc
jmp
outsl
pushf
mov
add
adc
je
mov
mov
sub
outsl
cmpsb
out
std
rcrl
aad
pop
movb
jg
outsb
inc
out
cmp
pop
adc
rcll
pop
mov
in
sub
xor
or
in
jmp
jno
fwait
outsl
push
mov
inc
fs
int
mov
jg
xchg
loop
xorl
sbb
add
clc
stc
repz
jbe
sbb
pop
imul
sub
filds
lods
out
notl
gs
in
add
mov
mov
pop
js
outsl
sbb
or
cmp
jnp
and
popa
call
mov
or
jo
call
lods
imul
mov
jg
push
mov
ja
test
mov
cmc
and
xchg
divb
jle
in
push
cs
es
lea
shrb
push
movsb
stc
stos
lcall
mov
or
xchg
loope
pop
mov
xor
jnp
gs
loopne
pop
lock
dec
js
nop
pop
out
cld
mov
xchg
xchg
inc
mov
and
jle
pop
jge
mov
pop
subl
lcall
rcrb
ds
pop
lods
add
loopew
xor
subl
fs
gs
shll
sub
fdivrs
sbb
lcall
sub
push
lret
insb
loop
adc
or
out
stos
jg
shr
push
mov
add
setnp
jo
xchg
sahf
jns
push
pushf
insb
mov
outsl
jne
add
xchg
scas
popa
mov
and
in
in
mov
fldt
mov
pop
jae
mov
xchg
jecxz
mov
mov
jns
stos
lcall
pushf
pop
stos
cmpsb
jmp
sbb
jg
out
sub
mov
fstps
lock
stos
into
decl
push
mov
inc
cmp
fsubrl
test
mov
inc
fiaddl
iret
lods
push
or
and
cmpsl
stc
dec
mov
pop
shlb
out
or
stc
pop
in
xchg
or
clc
sub
cmp
dec
cmp
adc
pop
into
out
ds
cmp
addb
ja
jmp
adcb
cmp
cmp
mov
xor
out
push
jbe
data16
add
inc
cmp
and
push
sbb
ljmp
sub
imul
mov
adc
std
pop
and
adc
sti
or
jno
and
inc
sub
push
mov
lock
out
jmp
mov
shll
mov
pop
inc
cld
jae
frstor
repnz
movb
daa
int3
cld
pusha
mov
xchg
push
sbbl
std
jmp
adc
jle
and
test
ds
cwtl
xor
pop
jmp
test
jle
cmc
add
bnd
jecxz
cmp
jae
jo
mov
mov
cmpsl
jg
pop
loopne
xchg
pop
outsb
push
and
push
add
mov
and
xor
in
xchg
outsl
ret
shrb
mov
sbb
sub
movsb
sbb
dec
mov
lret
dec
jg
ja
call
adc
ss
cmpsb
mov
fisttps
push
inc
imul
incl
inc
fcomps
in
adcl
push
out
add
lcall
mov
out
lock
xchg
dec
jecxz
and
mov
call
inc
or
dec
xchg
jb
icebp
ret
fiaddl
test
pop
xchg
in
lods
data16
lcall
xchg
je
cld
fwait
and
pop
movsb
jg
cmp
ret
push
mov
out
pop
fisttpl
in
cmp
into
pop
out
mov
mov
lods
or
fcomip
lahf
inc
mov
add
inc
adc
mov
cs
mov
in
mov
test
in
sub
shl
stos
jecxz,pt
std
cmpsl
repnz
inc
fstps
hlt
and
movsl
hlt
jge
call
dec
sbb
ficoms
and
push
sbb
clc
fs
arpl
xor
repnz
fwait
jp
mov
dec
les
xchg
arpl
mov
ja
insb
inc
fdivs
mov
mov
clc
pushf
ljmp
xchg
lods
xchg
jg
fs
ficoml
out
sub
rclb
push
mov
xor
in
dec
sarl
or
stos
mov
add
or
mov
mov
movsb
pushf
pop
jecxz
lock
sub
add
popf
adc
jecxz
mov
cld
sub
sub
inc
jmp
push
cmp
test
lret
push
outsb
sahf
lds
out
fists
iret
adc
sti
insb
call
inc
sbb
stos
mov
sti
sub
dec
pop
stc
inc
inc
add
push
leave
loopne
pop
outsb
in
frstor
sti
xchg
pop
inc
daa
bound
stc
sub
outsl
movsb
out
mov
cmp
and
add
je
arpl
popa
inc
jmp
sub
pusha
xor
mov
jge
aaa
jl
inc
imul
mov
sbb
mov
inc
adc
adc
xchg
jge
jmp
mov
jae
mov
or
push
adc
les
jne
mov
or
mov
in
push
imul
leave
ss
mov
scas
xchg
or
aam
pop
clc
mov
ss
inc
bound
mov
jg
mov
gs
sub
xor
cwtl
adc
lcall
jae
idiv
imul
mov
out
mov
dec
lcall
fs
movsl
enter
mov
inc
or
pop
mov
call
cld
inc
adc
out
stos
in
stc
pusha
jo
push
das
mov
cli
push
cmp
pop
pusha
jb
outsl
std
and
mov
push
faddl
pop
xchg
sub
dec
dec
fs
sahf
push
and
scas
shlb
aaa
push
std
mov
mov
mov
adc
mov
das
jbe
and
lds
and
push
shlb
jmp
add
jae
scas
movswl
push
xchg
jbe
loope
adc
pop
inc
rcl
add
pop
insb
repz
mov
in
bound
into
sarl
movsl
rorl
dec
out
daa
fwait
jo
das
add
scas
stos
push
jnp
sbb
xchg
imul
adc
lock
jg
jge
lahf
and
decb
cmp
and
cmpsb
pushf
enter
insb
lds
leave
cld
mov
cltd
rcrl
xchg
outsb
sbb
sbb
test
imul
cmpsb
xchg
jo
gs
xchg
js
in
add
xor
pop
in
jb
mov
mov
mov
push
shll
adcb
pop
or
push
decb
enter
fldt
jmp
push
mov
cmp
repnz
ds
cmpsl
cmc
sbb
frstor
sub
stos
mov
sbb
sbb
inc
jg
inc
adc
pusha
repz
js
cs
mov
mov
or
add
into
mov
xor
orl
sub
test
jp
test
out
call
push
mov
mov
mov
in
jp
cmp
inc
jae
push
xchg
pop
lcall
jnp
lods
aas
movb
sbb
out
xlat
nop
stc
mov
testb
into
stos
xchg
aaa
sbb
cmp
and
lret
in
add
push
inc
cmp
ja
mov
hlt
shlb
jns
sbb
xchg
mov
std
cmc
cmpl
adc
jg
push
sbb
sbb
bound
lods
outsl
es
jmp
jg
je
xorl
mov
shl
enter
xor
jbe
jbe
insb
xchg
xchg
cltd
dec
aad
scas
sub
fwait
cmp
minps
cltd
mov
hlt
dec
xor
mov
jg
xchg
push
outsb
xchg
mov
stc
xor
movsl
sbb
cmp
ret
xor
xchg
and
push
jne
add
insl
inc
and
mov
pop
dec
dec
mov
cwtl
std
pop
out
or
xchg
stos
push
or
ds
push
out
mov
sub
stc
fwait
adc
pop
jl
repnz
push
cmp
subl
xorb
mov
mov
repnz
mov
fsubs
ljmp
jge
adc
add
sahf
mov
push
push
xchg
and
gs
mov
jo
mov
adc
nop
jb
addl
stos
enter
data16
mov
mov
pop
data16
or
outsl
test
outsl
xlat
add
lock
fwait
js
sub
ret
mov
daa
enter
daa
popa
adc
mov
mov
mov
jge
dec
mov
or
insb
mov
mov
jmp
cmp
cmp
ljmp
in
inc
add
pushf
sahf
bound
lahf
loope
repz
pop
mov
mov
cmp
pop
arpl
push
sbb
popf
push
pop
sbb
test
clc
rcrl
mov
sub
lds
sbb
out
sarb
adc
mov
inc
add
add
xchg
or
jns
inc
jns,pt
mov
push
push
in
xchg
dec
pop
loopne
loop
xor
insl
inc
fnstcw
imul
cld
add
lcall
push
mov
sti
pop
mov
addr16
xor
cmp
hlt
sbb
lock
fdivr
imul
inc
pop
dec
or
sub
sbb
push
out
push
pushf
jmp
pop
out
or
cmp
addr16
inc
push
mov
popa
and
imul
mov
movsb
or
mov
xor
movsb
xor
mov
inc
and
into
dec
fsubl
jae
mov
push
adc
les
fwait
mov
sbb
out
insl
dec
xchg
int3
dec
xchg
cmc
sub
adc
stc
test
adc
pop
dec
in
imul
xchg
lcall
or
arpl
outsb
cmpsb
inc
jmp
stc
xor
jb
pushf
inc
push
fwait
mov
dec
out
dec
cmp
dec
cwtl
xchg
popa
jg
loopne
lea
or
aaa
inc
ja
outsl
xchg
jp
std
xor
cs
jne
nop
cmp
mov
inc
adc
xlat
mov
push
pop
inc
push
lret
jne
lcall
mov
adc
dec
push
mov
xor
xchg
ficoml
addb
in
xchg
mov
xor
ds
movsl
out
popa
mov
mov
cmpsb
hlt
sbb
jae
cmp
in
insb
jbe
mov
fdivs
jmp
ss
adc
aad
pop
jecxz
cmp
inc
movsb
mov
fisttpl
pop
pop
cld
xchg
push
mov
dec
inc
push
xchg
mov
adc
lcall
mov
mov
roll
outsl
xchg
icebp
les
sub
sbb
xchg
jecxz
aaa
popf
out
pop
fs
mov
pop
pop
mov
lds
push
xor
cmp
mov
into
stos
filds
mov
fildll
mov
insb
pop
mov
shlb
mov
mov
cmp
adc
jmp
std
xchg
inc
rcrb
sbb
cmpsl
pop
cmp
pop
ficompl
xchg
ret
mov
fwait
xchg
data16
jg
pop
xorb
xchg
repz
clc
jns
push
lods
adcb
pop
sbb
dec
js
outsl
cmp
loope
in
imul
dec
xor
mov
xor
mov
in
es
and
xor
pop
cmpsb
loopne
cmp
inc
jns
push
jmp
cvttps2pi
mov
aaa
dec
mov
rcrb
mov
mulb
sub
jo
lods
mov
in
adc
inc
scas
andl
mov
mov
outsl
push
push
push
in
or
xchg
aam
out
inc
mov
push
mov
jg
jmp
sti
imul
mov
dec
push
jmp
mov
das
push
cld
lods
lds
inc
mov
inc
in
in
push
cmp
je
enter
and
ds
jmp
xchg
out
inc
sbb
arpl
test
dec
int
rclb
pop
and
lock
inc
cs
sbb
adc
sbb
clc
pop
outsl
sarl
jnp
push
dec
bnd
jecxz
xor
xchg
in
mov
adc
rcl
lcall
jo
mov
xchg
movb
call
fisubl
popl
jns
xor
xlat
mull
clc
mov
sbb
test
loope
mov
or
sub
loope
lods
lret
rcrb
int3
ljmp
fsubs
into
sub
inc
cmc
mov
cmp
int3
addl
jbe
ret
gs
mov
aad
daa
push
in
sbb
lret
lds
and
out
adc
sub
jns
mov
jg
test
repnz
movsl
jg
pop
push
push
cwtl
in
xor
cmp
or
sbb
pop
imul
pop
sahf
dec
adc
movsl
rcrb
aam
lret
xchg
mov
scas
hlt
and
dec
or
daa
lods
sbb
jg
mov
bound
adc
into
push
adc
lds
lcall
push
lcall
movsb
imul
pushf
jae
jae
jnp
dec
fwait
pop
jo
ljmp
push
bound
mov
cli
mov
sub
sbb
aad
inc
cmp
mov
loopne
push
inc
aam
leave
pop
push
or
fcoml
push
and
mov
sbbb
inc
mov
xor
ds
jecxz
fwait
push
add
daa
lahf
push
or
mov
jg
test
rcl
add
and
arpl
pop
lahf
cmp
out
or
enter
outsl
jne
pop
adc
dec
mov
adc
dec
ret
outsl
xchg
jae
xor
xchg
inc
cltd
imul
dec
hlt
sbb
adc
aam
fs
inc
xchg
stos
iret
call
lahf
xchg
sbb
sahf
push
jecxz
insl
pop
sbb
cltd
outsb
inc
mov
dec
add
clc
jbe
ss
daa
rcll
dec
pop
fimull
push
lcall
imul
fwait
outsl
loop
jno
out
cmc
pop
daa
pop
and
xchg
loop
jb
xchg
out
cmp
dec
dec
jge
jg
sahf
sbb
sub
movsb
cmpsl
call
lret
mov
je
cmp
insb
sbb
lret
inc
sbb
movsl
daa
sbb
sbb
js
sbb
cmp
xchg
fucomp
mov
sti
sbbl
mov
mov
inc
out
pusha
pusha
pop
scas
sbb
data16
jnp
jns
sbb
mov
sarl
insb
mov
mov
test
and
push
orb
sarb
add
out
loopne
add
jo
jns
insb
push
insb
and
lods
dec
ljmp
or
mov
or
sti
cmpb
repz
lret
orl
test
pop
sahf
xchg
sub
jg
ret
mov
and
das
push
popf
adc
pop
cmp
lcall
out
in
addr16
push
imul
cmpsb
das
and
cmpsl
jo
je
outsl
jb,pn
lds
lds
subb
int3
mov
mov
jg
jo,pn
pop
loop
imul
test
sti
jne
inc
cwtl
repz
jne
shrl
test
repz
and
dec
pop
shll
jne
jle
dec
dec
jg
cmpsl
adc
addr16
sahf
adc
jnp
mov
popf
or
int3
xchg
pusha
sti
add
inc
sub
ja
fwait
dec
push
out
loop
movsl
jmp
mov
repnz
inc
and
addr16
mov
stos
cs
adc
stos
shll
jbe
inc
ss
jne
adc
xlat
jp
xlat
sbb
sbb
mov
or
andb
aas
add
inc
lcall
adc
mov
nop
nop
jnp
scas
sbb
dec
cld
mov
push
scas
dec
inc
jb
mov
sub
push
bound
mov
es
into
int
out
stos
cmpsb
xor
fs
jecxz
lahf
stos
sub
lret
cmpsb
test
pushf
mov
lods
jns
and
dec
push
mov
fsubl
loope
aam
test
shlb
es
repz
stc
jne
adc
lock
rcr
pushf
fdivs
dec
jmp
imul
jb
jns
es
movsl
stos
cmc
adc
jnp
xchg
cld
gs
clc
jmp
mov
or
add
movsb
outsb
movsb
pop
sub
scas
inc
in
jge
lcall
je
push
adc
lcall
repnz
xchg
xchg
test
pop
jg
cmpsb
push
push
jns
inc
jo
xchg
cltd
daa
mov
jmp
mov
inc
out
cmpsb
dec
mov
fnstcw
xchg
cwtl
jae
icebp
mov
mov
dec
mov
outsb
push
aad
cltd
pop
in
mov
xchg
or
ljmp
pop
jge
pop
add
incl
cmpl
stc
fucomi
scas
inc
or
xchg
fcmovnbe
call
rcll
movsl
imul
xor
push
mov
dec
jb
push
inc
scas
ja
xchg
add
jno
or
aam
cmp
movsb
adc
call
cli
loope
jp
mov
dec
xchg
dec
cmpsl
into
mov
fwait
inc
jo
in
pop
rcrb
bsr
sub
sub
pop
and
jae
jp
lea
jo
jmp
mov
mov
add
sub
repnz
fstpt
mov
cmp
rclb
xchg
dec
xchg
mov
inc
dec
pusha
nop
stos
xchg
rorl
pop
jmp
jecxz
dec
pop
and
inc
lds
ret
jns
stc
and
mov
nop
sti
arpl
icebp
lret
aaa
xor
mov
sub
out
imul
in
divb
adc
xchg
jb
aas
clc
mov
adc
mov
push
clc
push
daa
inc
push
scas
movzbl
inc
mov
pop
and
or
push
add
mov
lcall
jmp
outsl
jne
fisttpll
vpsubusw
mov
jg
shrl
pop
nop
outsb
lods
and
pop
fld
jb
inc
jle
jb
mov
bound
xchg
je
add
dec
lret
aam
sub
or
pop
int
xor
inc
sbb
rclb
imull
je
mov
test
adc
js
xchg
popf
fldl
dec
test
loope
pusha
sbb
inc
fs
and
mov
loope
mov
adcl
loop
icebp
jb
add
insl
add
je
pop
insb
and
adc
cmp
push
sti
mov
sub
rcrb
int3
push
aas
push
dec
adc
adc
lcall
sub
jg
lcall
sub
es
sbb
jl
jge
adc
pushf
scas
mov
mov
dec
mov
cld
pop
lds
add
lahf
js
jo
in
outsl
dec
aam
xchg
xorb
inc
xlat
mov
sbb
rcrb
dec
test
mov
in
out
pusha
mov
pushf
nopl
ret
adc
out
fwait
out
nop
test
cmp
mov
dec
shlb
push
and
ds
cmc
jle
pop
mov
loop
add
mov
sbb
lods
mov
dec
mov
cmpsb
xlat
pusha
stos
jg
inc
pop
outsl
daa
negb
push
add
pop
xchg
mov
mov
push
je
out
dec
loopne
gs
sti
scas
popa
rclb
loop
outsl
sub
dec
repnz
sub
sbb
ret
stos
add
cld
mov
outsl
mov
les
pusha
sub
out
jg
loope
pushf
clc
pusha
in
jae
fwait
mov
add
mov
ret
pop
gs
clc
and
sbb
inc
je
loope
jg
into
cmpsb
cmpsl
imul
andb
sbbl
push
mov
xor
xchg
fnstsw
jns
inc
cmpsb
aas
aad
jecxz
jl
push
sub
jno
pop
cmp
out
pop
add
pop
sbb
aaa
loopne
xor
stos
mov
and
and
inc
imul
jbe
mov
inc
clc
in
xor
iret
scas
insb
add
mov
bound
jl
lock
jnp
push
scas
xchg
ss
sbb
adc
mov
repnz
inc
es
xchg
jmp
mov
test
adc
repz
fdivl
push
sahf
mov
jg
insl
popa
and
icebp
iret
sub
sbb
and
and
hlt
lcall
sbb
add
arpl
mov
addl
movsb
mov
add
inc
lds
inc
into
lret
sub
or
dec
adc
cmc
xchg
movsb
inc
mov
bound
mov
sub
loope
fldl
inc
jg
mov
fisubs
lds
shlb
xor
push
cmc
repnz
push
adc
fmulp
inc
jg
into
in
jno
std
push
pop
or
sub
js
sub
and
dec
xor
sub
orl
xor
icebp
mov
es
addr16
xchg
and
fwait
xchg
push
lea
les
push
into
data16
or
lods
sarl
fs
leave
loope
clc
push
pop
jmp
imul
mov
mov
jns
xchg
addr16
inc
shrb
adc
imul
mov
xor
shlb
mov
jge
std
pop
mov
cmp
movsb
jnp,pt
loope
lcall
push
insb
lcall
mov
dec
loope
jns
std
and
and
sub
loopne
nop
jnp
jp
out
fsubl
xchg
lods
mov
addr16
mov
sbb
lcall
jbe
xchg
in
imul
fbld
push
mov
sti
xchg
mov
vmovss
gs
aam
add
cwtl
popf
inc
mov
sub
jg
lcall
sete
jbe
jns
jg
xor
mov
adcl
jmp
dec
xor
ss
mov
xrelease
adc
xor
pop
and
aaa
inc
insb
jg
cs
xchg
mov
or
push
pop
lahf
or
inc
or
hlt
sub
mov
scas
fnstsw
xchg
add
and
fwait
arpl
in
add
dec
movq
in
sbb
insb
pop
jns
add
cld
mov
mov
loope
xchg
cmp
mov
xchg
addr16
push
dec
fwait
outsl
aas
aaa
sbb
sbb
insb
mov
pop
mov
cmp
adc
mov
lods
xchg
xor
push
jo
mov
cmp
je
jne
test
ja
jmp
pop
jns
jae
cli
insb
dec
xor
cmp
test
int
xor
sti
mov
popa
loop
push
dec
test
fstl
fldt
xorb
outsl
jle
push
clc
add
test
jo
mov
imul
inc
mov
mov
jno
and
push
lds
dec
in
insb
stos
or
lds
push
stc
hlt
sar
jbe
push
insl
fs
arpl
xchg
pop
in
dec
out
mov
pop
mov
mov
adc
push
sbbl
inc
mov
mov
imul
pop
sub
fimuls
mov
fimull
xchg
stos
cmp
into
cmp
push
add
jg
jne
add
clc
add
jecxz
stos
out
push
dec
cli
stos
and
jmp
lods
jl
fisttpl
rcr
insb
inc
ljmp
or
push
mov
data16
and
add
sbb
pushf
pusha
dec
lret
lret
cli
cmpsl
xor
dec
and
and
push
roll
movsl
cwtl
lcall
mov
cltd
pop
mov
inc
je
std
insl
shrl
nop
adc
rcll
int
jne
popa
sbb
pop
jle
fprem
mov
xchg
jb
outsl
ljmp
data16
repz
int
cmp
je
mov
fdivrl
cs
adc
mov
cmp
push
xchg
insb
lret
mov
jl
inc
test
jle
and
jns
std
adc
imul
xchg
mov
hlt
fstl
push
sahf
mov
dec
mov
mov
cli
add
inc
dec
jns
mulb
gs
outsl
jge
sbb
xor
xor
je
idivl
sbb
scas
ljmp
or
cmp
aad
lds
clc
lahf
rol
popa
lahf
fiadds
pop
sti
mov
in
cmp
or
mov
ss
stc
xchg
loop
sub
xchg
stos
inc
pusha
mov
ljmp
push
fdivrl
ret
loope
les
outsl
pop
inc
inc
jmp
pushl
aam
insl
cvtdq2ps
xchg
jecxz
jne
mov
test
shrb
pop
mov
jmp
fldt
insl
jne
mov
les
push
rolb
rep
xchg
pushf
jmp
ljmp
lods
jns
mov
xchg
into
cmp
xchg
ja
std
cmpsb
xchg
sbb
jo
jnp
jmp
sub
sub
fstps
jo
jg
mov
lods
icebp
mov
sbb
push
dec
shlb
cmpsl
insl
pop
jb
xor
int3
dec
sub
pop
xchg
mov
outsl
or
inc
ret
out
adc
and
dec
dec
xchg
cwtl
lds
push
fcomip
mov
shl
mov
adc
jns
nop
push
lahf
push
jmp
scas
arpl
outsb
lcall
cmp
jge
cmp
fistl
outsl
int
test
mov
stc
fistl
push
out
sahf
adc
mov
adc
pop
lret
in
mov
cmp
mov
adcl
mov
fldl
and
pop
fiaddl
jbe
data16
push
dec
mov
test
jl
xor
in
xchg
fwait
out
dec
jbe
pusha
xor
repz
dec
fildl
and
jns
push
pop
mov
cmpsb
xor
pushl
cltd
in
cmpsb
imul
mov
jg
sti
dec
addr16
imul
lea
insb
dec
lods
pop
arpl
lods
out
data16
and
fldenv
pop
insl
insb
inc
insb
pop
jge
out
ja
lods
imull
dec
lahf
sub
mov
jnp
aad
imul
xchg
jae
sti
push
bound
add
int3
das
rep
idivb
pop
cmpl
sub
or
cmpsb
subb
xchg
icebp
movsb
int
xor
imul
jbe
cmp
fldt
mov
int
xor
adc
sub
insb
dec
push
lret
scas
xchg
daa
dec
shll
jecxz
es
mov
pop
popf
cmc
cmpsb
jp
jns
fs
scas
jl
out
jb
enter
jp
fisttpl
arpl
add
add
jp
jo
jne
outsl
ja
jo
out
shlb
hlt
mov
jmp
int
out
insb
verr
arpl
repnz
data16
jmp
daa
sub
mov
arpl
jmp
jno
push
jmp
std
xchg
adc
jl
hlt
push
ljmp
cld
xchg
addr16
out
push
jle
jb
insl
lock
repz
jecxz
jns
fs
cmpsb
cld
jl
jle
push
xchg
popa
mov
insb
in
push
insw
insb
sub
mov
icebp
jbe
and
arpl
bound
js
jl
jge
lods
jl
jo
or
rolb
hlt
push
fst
and
jg
jp
add
inc
ljmp
sbb
jl
sbb
dec
add
sub
xchg
jo
mov
divl
mov
popa
lcall
cld
shlb
pusha
jge
rorb
into
sbb
aad
in
bound
sahf
mov
lcall
lock
cmpsl
sbb
sub
fcmovnb
popa
movsb
sub
les
adc
mov
jg
sbb
xchg
in
or
movsl
and
addr16
xor
ja
ret
jb
jns
test
jne
repz
mov
pop
jae
push
jbe
clc
pop
xchg
test
mov
stos
loop
std
push
movsl
jo
inc
data16
shr
cmpsb
outsb
shl
dec
inc
jmp
push
cmpsl
mov
clc
es
push
mov
leave
repnz
cltd
stc
sti
jns
push
cmpsl
ret
fbstp
add
out
data16
jge
adc
mov
bound
mov
in
push
jle
cmp
rclb
mov
in
jo
mov
fstps
pop
icebp
or
mov
pushf
cld
lcall
xor
stos
dec
out
psubq
cmp
pop
or
adc
in
pop
mov
or
cmp
xchg
cmpl
adc
mov
fimull
xor
xor
xchg
icebp
jge
inc
mov
mov
add
mov
shlb
sbb
sbb
xchg
fcomps
inc
mov
inc
mov
cld
ja
cmp
cwtl
sbb
mov
sti
pusha
sti
mov
xchg
fwait
pop
int3
ds
lcall
es
fwait
jg
outsb
adc
dec
das
inc
push
pop
frstor
inc
sub
in
rol
mov
sbb
push
pop
jle
mov
xor
jg
movsl
ja
mov
and
jns
jo
adc
push
and
lods
or
movsb
adc
jl
outsl
aaa
adc
test
je
loopne
jnp
sub
jbe
cmp
mov
je
mov
sbb
adc
daa
pop
cmpsl
scas
fcmove
mov
xor
or
cli
cs
push
xor
or
lcall
ja
xchg
in
jg
inc
and
shlb
dec
push
outsl
sbb
xchg
sti
rcrl
sub
popf
lods
das
pop
or
adc
fwait
push
into
push
inc
fs
loopne
lods
mov
in
lret
mov
out
stos
les
sbb
int3
or
xchg
xor
pusha
mov
dec
gs
and
push
dec
js
sarb
cmp
aam
sti
sub
xchg
mov
stos
lock
popl
inc
imul
scas
mov
orb
scas
cmp
sub
imul
out
sub
outsl
cmc
jecxz
in
jecxz
jb
pop
dec
sahf
inc
lea
lret
xchg
lret
pop
filds
xchg
jno
sbb
xor
in
xor
lret
dec
fsubl
popf
stos
mulb
into
adc
mov
outsb
jp
loop
loopne
std
ficoms
out
rcl
int3
mov
jae
xor
push
lea
cmp
ret
jae
xor
push
arpl
ja
sub
lcall
bound
je
cmp
in
jne
int
scas
mov
cmpsb
jmp
mov
xchg
scas
push
xor
adc
notb
faddl
pusha
fisubs
notl
jg
mov
data16
imull
and
stos
mov
ficoms
int
pop
out
in
sbb
mov
mov
fistl
int
xor
gs
scas
jb,pn
insl
cmp
mov
das
inc
les
insb
sarl
ljmp
cmpsb
mov
mov
or
inc
mov
jo
mov
sub
rol
or
or
xor
shrl
and
fs
sbb
out
repz
jae
jno
xchg
mov
stos
xchg
adc
pop
aaa
loopne
jns
push
cld
adc
in
notb
jle
andl
add
scas
roll
fiadds
out
leave
and
pop
dec
mov
push
test
adc
mov
jg
push
std
adc
inc
mov
out
mov
inc
cmp
lret
mov
insl
sbbb
int
push
adc
add
imul
pop
cmp
je
pushf
cs
std
fistps
cmc
jne
fucom
cmp
lea
dec
mov
enter
lcall
loop
je
gs
push
push
xchg
into
push
mov
sub
stc
push
adc
pop
pusha
negl
sbb
sbb
xor
out
inc
lds
fdivl
in
mov
and
jne
clc
push
in
js
adc
cmpl
dec
lcall
aas
vcvtsd2ss
jnp
sbb
lret
cs
int
repnz
icebp
arpl
jb
inc
mov
lock
jg
push
clc
test
cli
pushf
push
jle
bound
adc
jb
aaa
pop
cs
push
lds
ljmp
jge
mov
and
xor
dec
int
push
push
addr16
adc
data16
in
sub
jns
jae
arpl
lret
bound
out
cmc
push
movsl
cmp
xor
add
jb
mov
mov
leavew
pop
clc
sbb
mov
inc
inc
jbe
sbb
xchg
repnz
into
and
jg
mov
push
out
jo
sti
outsl
mov
jg
jg
cmc
mov
jge
pop
push
mov
cmp
insb
xchg
jl
inc
adc
and
sub
stc
repnz
and
test
movsb
daa
mov
aad
or
mov
enter
aas
inc
ja
lret
pop
mov
xchg
aas
test
add
pop
and
fists
fcoml
jge
inc
outsb
movsl
xchg
inc
cmpsb
jg
aad
out
mov
pushf
jmp
clc
xor
inc
cld
jp
xor
mov
jno
xor
imul
pushf
call
jmp
sti
ret
xchg
jg
test
push
cmp
xchg
lods
pop
aad
test
xchg
scas
push
inc
or
inc
sub
inc
mov
add
pop
fs
and
inc
imul
imul
es
and
aad
sbb
add
xchg
sbb
dec
jne
in
rcrl
jo
adc
pop
sarl
xchg
ja
and
and
stos
add
mov
push
push
dec
push
cmp
jne
sbb
fnstcw
xlat
dec
outsb
or
shl
mov
je
mov
insb
mov
mov
pop
jo
sbb
dec
and
xchg
xchg
pop
das
or
repnz
or
repnz
push
mov
iret
sub
pop
pop
les
popa
add
xor
loop
push
jl
outsl
js
jns
mov
xor
sbb
int3
inc
outsb
or
mov
clc
sti
mov
mov
shlb
leave
stos
mov
xchg
std
in
mov
pop
test
jl
adc
jmp
je
jg
push
loop
aas
jle
test
pop
push
rclb
insb
and
stos
and
fwait
lods
gs
pop
sbb
pop
mov
cmp
lahf
xor
scas
mov
pusha
sti
jo
xor
outsb
mov
into
fistl
xchg
scas
add
cmp
ss
xchg
adc
scas
pop
rcll
jae
or
fisttpl
xchg
inc
mov
push
mov
jb
and
pop
negb
xchg
pusha
cmp
xchg
mov
dec
int
adc
cmp
cli
mov
aad
int
adc
xor
push
outsb
lcall
sbb
cmc
dec
xchg
mov
pop
xor
gs
stos
or
push
mov
mov
jo
mov
sbbb
xchg
mov
iret
lret
jae
call
mov
int
dec
sub
jns
popa
cltd
pop
and
and
inc
adc
pop
pushf
push
push
fwait
adc
lods
xor
loope
jg
add
push
stc
movsl
pop
fiadds
jo
xchg
shl
cmpsb
shll
mov
add
fwait
in
or
std
push
inc
xorl
jg
dec
push
sub
lea
sbbb
and
pop
inc
jae
addr16
fnstsw
pop
ljmp
sub
xchg
test
gs
mov
jp
outsl
mov
in
loop
jnp
mov
subb
das
mov
icebp
add
insl
jno
inc
nop
pop
mov
in
scas
push
xchg
adc
sub
loop
add
push
cmp
scas
popa
int
push
pop
loopne
sti
cmp
mov
fldenv
xchg
sub
mov
add
lcall
push
mov
scas
pop
jg
xchg
rorb
mov
adc
jl
outsl
mov
and
add
pop
mov
xchg
shll
jmp
sbb
mov
mov
cmc
push
sbb
pop
push
outsb
outsl
sub
sub
sbb
and
mov
out
or
and
push
push
clc
cmp
test
push
adc
sahf
pop
test
fistl
mov
cmp
fsubrp
les
mov
negb
mov
lods
ljmp
stos
out
lcall
ja
mov
mov
outsl
pop
adc
cmp
addb
xchg
lcall
lds
cs
imull
sub
jbe
bound
outsb
xchg
sbb
mov
jg
sbb
ljmp
xor
jle
mov
inc
clc
ss
cltd
bound
jns
xor
pop
pop
sub
loope
repz
xor
xchg
stos
and
movsl
outsl
push
mov
jmp
mov
jae
mov
arpl
inc
mov
or
stc
cltd
ss
adc
clc
pop
pop
in
cltd
mov
jg
add
in
xchg
ljmp
ja
cmpsb
loop
pop
scas
lods
mov
fisttpll
je
cli
jge
lds
mov
jecxz
je
lcall
scas
mov
sbb
shr
mov
pop
cmp
pop
jns
adc
pop
sbb
xlat
cld
les
cmp
xchg
pop
push
adc
inc
push
adc
fdivp
dec
xchg
leave
repnz
cwtl
jge
testl
pop
pop
mov
cs
arpl
xor
pop
out
adc
xor
push
xor
xchg
jo
cmp
cs
dec
jecxz
push
adc
push
jne
outsl
jnp
cltd
jge
xchg
sarb
clc
and
add
cli
insb
adc
andl
fwait
xor
cmp
sbb
out
outsl
movb
inc
gs
aam
or
lret
jbe
fsubr
xchg
outsb
push
call
jl
outsl
imul
out
cli
mov
xor
fildl
enter
mov
jecxz
idivl
fs
test
pushf
into
pop
addb
and
out
cli
pop
adc
cltd
lahf
nop
mov
and
mov
jg
pop
jg
jmp
das
std
push
push
incl
sbb
subl
inc
or
loop
fsubrl
xchg
wbinvd
pushf
push
fs
adc
call
push
cmp
scas
xor
repz
adc
adc
aam
fstl
mov
xchg
fwait
dec
mov
gs
fnstsw
push
cmp
add
lods
pop
js
pop
inc
imulb
movsl
sbb
rcll
insb
sahf
xor
mov
xlat
push
rclb
mov
ds
ja
insb
inc
jg
and
push
popf
add
lock
pop
xchg
movsl
sbb
insb
cmp
sbb
jmp
ds
aam
mov
mov
hlt
aaa
addl
pushf
push
lods
pusha
inc
cmpb
fistl
movsb
ds
dec
xchg
jnp
xchg
imul
scas
jg
inc
cmpsl
mov
insb
fdivs
and
loope
cmp
xchg
cmpsl
jns
mov
xor
add
dec
movsl
pop
cmc
inc
aam
push
in
mov
pop
jmp
pop
jnp
lret
mov
jo
enter
dec
repnz
mov
xlat
fistps
mov
inc
rcll
sbb
inc
stos
or
cld
out
fstpt
in
sbb
pushf
cmpsb
xchg
mov
pop
and
fs
faddl
push
mov
imul
movl
fnstsw
pop
pop
adc
mov
out
loope
pop
jecxz
jbe
fwait
sti
outsl
cltd
inc
icebp
fdivrp
insb
sarl
cltd
xchg
icebp
jmp
pusha
mov
call
jae
pop
mov
aaa
sbb
cmpsb
inc
out
pop
add
fistpl
xchg
es
mov
pusha
std
push
jecxz
cmp
idivl
loop
pop
cmpsb
xchg
sbb
lcall
jecxz
cmpsl
aaa
lds
out
sbb
cwtl
lods
iret
xor
sub
mov
fstpt
movsb
push
push
aas
mov
popf
shrb
ds
sub
pop
or
jg
in
into
lahf
push
cwtl
add
cmp
je
stc
jbe
test
cmp
dec
out
fs
outsl
and
in
ljmp
nop
imul
cmp
outsl
inc
mov
jp
lcall
cmp
mov
mov
cmpb
inc
adc
sti
mov
pop
mov
fisubrl
sub
mov
push
jnp
lcall
jg
inc
inc
or
jae
dec
push
rcl
hlt
sti
imull
cmpb
jge
je
pcmpgtd
test
scas
add
pop
test
inc
sbb
inc
mul
jns
movsl
jge
cld
imul
jae
mov
cltd
frstor
jecxz
inc
outsl
adc
loope
sahf
pop
push
xchg
jg
push
jns
stc
jmp
clc
dec
adc
push
cmp
mov
lods
lcall
cs
rcl
adc
sahf
imul
pop
mov
idiv
je
outsl
xor
mov
into
shl
es
popa
in
stos
dec
jbe
add
dec
push
popa
movsb
mov
test
bound
dec
fstl
push
push
sub
shlb
pushf
fdiv
loop
outsb
jg
sbb
insb
cmp
jo
sbb
leave
outsl
mov
cmp
xchg
les
lcall
stos
xor
mov
cwtl
mov
mov
jnp
imul
jne
in
inc
push
mull
sbb
gs
iret
scas
pop
push
pop
gs
xor
jno
add
jnp
xor
out
or
xor
cmc
fwait
out
dec
fwait
sub
arpl
test
mov
ljmp
fs
insl
inc
insb
shl
repz
jp
data16
outsl
insb
ljmp
js
jge
lcall
xor
call
hlt
cmp
pop
push
shrl
sbbl
lds
mov
cmpsb
lret
jae
shll
cmpsb
sbbl
negl
hlt
lods
add
addr16
movsl
sti
push
out
jle
jmp
mov
loope
popf
jns
cmc
or
das
jg
jmp
insb
out
pop
push
stos
fwait
insl
xchg
mov
ret
fs
gs
leave
mov
jns
dec
imull
out
jmp
and
pop
jns
idivb
fs
outsb
mull
scas
jbe
loope
xchg
andl
ret
inc
jne
add
insb
bound
imul
sbb
sarl
outsl
outsl
insl
lods
imul
insb
ret
addr16
popa
cmpsb
insb
mov
xorb
call
jle
call
mov
mul
icebp
mov
mov
lods
mov
mov
bound
imul
bound
jbe
repnz
repz
push
jae
ljmp
mov
call
outsb
cld
hlt
aad
xchg
jmp
xchg
popa
das
std
test
test
push
arpl
js
cmc
push
jp
fisttpl
fcomi
fs
out
outsl
stos
jno
call
jns
push
push
insb
mov
xchg
mov
xchg
gs
lds
mov
test
outsb
mov
xchg
jns
cmp
xor
push
imul
je
in
lds
outsl
lods
insb
std
les
sbb
cmp
mov
and
movsl
repz
dec
jns
scas
sub
in
ret
pop
loop
das
enter
add
adc
subb
jo
mov
arpl
leave
pushf
adc
incl
sar
pushf
push
jl
sahf
je
dec
aaa
or
in
lcall
pop
out
lock
lcall
movsb
jae
cld
xor
cmp
test
cltd
push
xor
mov
popf
movsl
push
mov
std
mov
ss
les
outsl
outsb
inc
inc
jae
fimuls
jg
outsb
nop
pushf
inc
jns
inc
test
mov
sbb
cmp
loopne
gs
repz
lods
jge
cmp
pop
mov
loope
pop
insb
inc
fildl
sbb
clc
cs
and
add
or
sub
movsl
popa
and
xor
dec
cmp
push
xchg
pop
cmp
and
scas
push
pop
sub
jo
adc
lahf
scas
push
pushf
sbbl
pushf
js
push
fs
call
push
sub
rorb
leave
sbb
outsl
xchg
bound
sbb
in
pop
in
clc
fucompp
mov
jmp
dec
xchg
mov
les
mov
sbb
dec
pushf
push
mov
dec
scas
mov
dec
push
fs
incl
pop
inc
jmp
adc
mov
mov
lcall
sub
pop
loopne
repz
pop
jnp
stos
scas
adc
pop
movsl
mov
cmpsb
jno
xchg
sbb
ja
cmpsb
mov
or
shl
jo
mov
stc
mov
jg
pusha
mov
lods
inc
add
xor
je
and
out
xchg
pusha
add
loop
decb
fldt
ret
aam
xchg
movsl
and
ror
jmp
fnstcw
nop
mov
or
lds
repz
sbb
add
jbe
dec
mov
test
imul
lcall
push
arpl
hlt
sti
jae
inc
and
das
dec
int3
es
popa
sahf
mov
sbb
mov
shll
cwtd
sbb
dec
in
rclb
sub
ss
jge
das
mov
inc
lcall
jns
jnp
sti
xchg
test
pop
mov
jp
sub
mov
push
and
dec
call
bound
push
fldcw
jne
out
inc
push
fadd
push
sbb
add
and
cmp
fidivl
jge
outsl
in
testl
pop
jae
repnz
cmp
or
or
sahf
imul
pop
daa
dec
xor
pop
ds
jns
xchg
mov
and
dec
jbe
push
mov
dec
cmpsb
pushf
mov
push
push
and
popl
rcrl
xchg
cmp
repnz
repz
dec
inc
data16
mov
es
jne
insl
pop
xchg
clc
or
mov
jae
shll
fbstp
scas
lock
out
jne
pop
cmp
outsl
inc
jns
insb
loop
out
mov
xchg
shr
xor
push
lods
xchg
adc
xchg
insb
adc
adc
jo
jno,pt
add
mov
jb
mulb
data16
add
arpl
fiadds
pop
push
pop
add
pop
stc
or
lcall
adc
push
popa
inc
outsb
lock
insb
xchg
scas
mull
movsl
test
dec
sbbb
adc
add
adc
sahf
or
sub
lods
addl
daa
scas
dec
xor
add
cld
mov
bound
or
dec
mov
mov
into
cltd
sbb
push
jle
sbb
xor
jne
jae
inc
jg
cli
sbb
mov
push
imul
and
mov
fcmovnb
pop
data16
sub
pop
jno
xor
adc
cmp
bound
out
mov
imul
loopne
pop
push
inc
loop
mov
insl
xorb
mov
pop
dec
adc
scas
movsl
or
clc
jo
sbb
pop
ret
aam
lahf
sub
mull
mov
mov
hlt
dec
jecxz
xchg
and
pop
out
cwtl
clc
xor
lods
fwait
mov
in
and
gs
push
mov
adc
cmp
pop
sarb
cmp
std
hlt
aas
jge
out
les
sub
test
mov
test
rcll
in
repz
mov
outsb
pushf
cld
pop
pop
and
insl
cmc
movsb
xlat
mov
add
add
orb
xchg
mov
fstp
dec
sbb
xchg
cmp
in
aas
dec
push
jbe
sti
sbb
ret
shlb
fstp
inc
aad
push
push
xchg
adc
lcall
mov
push
sbb
loopne
fisubrs
in
xchg
les
dec
outsb
add
sub
cmp
pop
mov
addr16
pop
loopne
loope
mov
adc
cmp
dec
xchg
add
fistl
in
js
pushf
lcall
cmp
or
add
lods
xor
stos
jb
lea
lret
sub
aad
fdivl
add
popa
or
enter
mov
rcrl
test
xor
push
sbb
lcall
gs
xor
mov
je
test
jmp
lcall
jns
push
inc
jle
sub
bound
lcall
out
outsl
xchg
mov
pop
cmp
xchg
inc
hlt
push
xchg
popf
mul
cmp
call
inc
adc
aam
in
aam
addl
jg
xor
out
cmp
dec
daa
dec
mov
jns
sub
lcall
lds
cltd
xchg
sarb
je
mov
mov
imul
sub
fwait
inc
xchg
bound
sbb
sub
lcall
frstor
mov
filds
jns
inc
push
dec
push
lea
adc
and
dec
notb
add
out
loope
insb
imul
aam
mov
dec
cld
fcoms
or
ret
lods
add
pop
test
sbbb
push
mov
xchg
sbb
mov
mov
scas
stos
xchg
clc
jo
fs
insb
ljmp
xor
loop
jle
outsl
pop
stos
push
sbb
xchg
pop
clc
sbb
cltd
hlt
mov
xor
hlt
into
fs
mov
fs
xchg
xor
or
mov
mov
inc
mov
pop
xchg
xor
sub
inc
push
fs
adc
pop
pop
sti
or
xor
push
loop
scas
adc
in
lahf
in
xor
fstpl
int3
inc
jp
movsb
lcall
add
sub
dec
inc
lcall
mov
push
imul
adc
inc
mov
out
fisubs
repz
in
xor
daa
xchg
pop
aad
inc
sub
jmp
mov
daa
fdiv
mov
dec
mov
sub
loop
lret
jge
ljmp
pop
mov
dec
push
or
pop
sbb
stc
lret
mov
cmp
in
cmpsl
xor
out
push
or
lea
xchg
xor
mov
cmp
into
xchg
je
mov
icebp
and
mov
mov
rcl
into
mov
dec
lock
cmp
lahf
xchg
jmp
pop
lods
push
dec
sub
pop
nop
add
fwait
xor
mov
or
pop
adc
fildl
or
aam
movsb
xor
sbb
jmp
cli
fwait
cmp
mov
rcll
xchg
cmp
fstpt
xchg
lds
cmpsb
ja
rolb
sahf
and
leave
pop
lcall
push
cmp
idiv
lahf
inc
fs
mov
or
icebp
cltd
cmp
mov
test
sbb
int3
jae
push
mov
add
fucomi
lcall
faddp
out
lea
pop
mov
rclb
inc
fidivrs
fwait
outsl
and
adc
pop
shl
fimull
or
xor
iret
and
pop
fisubrs
fldl
mov
cmp
jne
mov
dec
loope
inc
addb
lret
lcall
insb
cmp
pop
mov
inc
and
test
jae
sbb
jne
xor
mov
aaa
lcall
fsubrl
mov
pop
clc
cltd
add
or
cld
adc
sahf
sarb
int
jns
inc
and
ret
cmp
mov
rcll
clc
jno
adc
dec
bswap
xchg
rcll
add
lds
fiadds
pop
popf
fs
stos
jns
jmp
leave
xor
xor
mov
dec
xor
fprem1
dec
pop
inc
repz
loop
or
xor
cmp
pop
jae
sbb
fcom
push
and
jnp
sahf
sub
popa
jle
loopne
sub
fistpll
lods
adc
fs
jne
cmp
cwtl
cmp
jo
xchg
pop
movsb
insb
sub
push
mov
imul
mov
addr16
aas
insb
pop
into
inc
add
push
xchg
sbb
dec
and
jle
es
jge
sbb
fldl
sbb
adc
jp
fstpt
mov
imul
and
dec
push
jmp
lea
push
fcomps
js
sub
pop
aad
mov
in
push
adc
fwait
xor
jl
pop
test
ja
movsb
jg
outsl
stos
pop
out
dec
push
cmp
and
adc
fninit
adc
xor
mov
fistl
sahf
sbb
fnsetpm(287
or
inc
test
xorb
les
test
stos
cmp
pop
xor
cs
cmc
jmp
scas
xchg
ret
jbe
addr16
sub
cmc
outsb
cmp
pop
es
bound
data16
stos
jne
bound
out
adc
inc
push
insb
push
lock
or
mov
xchg
pop
data16
in
ja
or
or
loope
js
addr16
sbb
jae
push
lret
jo
negb
push
jp
jmp
fildl
insb
shlb
push
lock
sbb
shrb
repz
stos
jo
push
jle
call
in
loope
rep
roll
insb
shlb
jno
popa
jno
cli
in
stos
in
cmc
jno
in
subl
or
movsl
out
insb
jns
aad
sbb
in
clc
popf
xchg
out
jg
adc
repz
bound
test
mov
push
pop
addr16
jmpw
insb
out
mov
xchg
insb
jmp
add
movsl
pushf
mov
in
ja
cmc
icebp
mov
arpl
addb
rep
ja
fiadds
and
jle
outsb
add
arpl
divl
data16
mov
jbe
insl
adc
mov
imul
arpl
hlt
push
mov
pop
sbbl
mov
cli
jbe
int
xchg
imul
stos
jo
mov
in
xchg
je
addr16
daa
in
icebp
loope
pop
imul
mov
fistpl
xorl
fstpt
out
outsb
out
movsl
jg
out
stos
mov
adc
les
add
ljmp
fistpl
xchg
push
and
mov
mov
xchg
push
mov
push
pop
cs
xchg
mov
xchg
fiadds
repz
dec
cs
psllq
clc
outsl
pop
xchg
cmpsb
xchg
inc
lret
adc
cmpsl
inc
cmp
adc
mov
lahf
gs
sahf
xchg
popf
pusha
jne
push
adc
cmp
popf
movsl
mov
mov
cmp
pop
or
pop
sbb
fsubp
inc
dec
mull
cmp
mov
sbb
and
mov
dec
jns
popa
mov
xchg
add
aaa
fdivrs
cmp
sub
sbb
je
outsb
push
pushf
das
and
jno
and
fstcw
daa
lcall
lods
mov
std
jg
arpl
je
test
xor
hlt
push
add
cmp
xchg
btc
or
mov
scas
and
pop
cli
rcrl
jnp
outsl
aas
int3
mov
ret
call
inc
jne
lcall
cmp
fwait
push
movsl
out
jns
movsl
in
repnz
xchg
sbb
fsubs
push
cmp
pushf
enter
outsl
bound
mov
mov
jl
ljmp
inc
and
into
out
xlat
pop
jecxz
sbb
fwait
pushf
mov
pop
pop
imull
push
loop
cmp
mov
out
pop
aas
out
es
pop
mov
outsb
lcall
inc
mov
repz
mov
clc
dec
outsb
arpl
cs
inc
jmp
scas
in
mov
bound
inc
and
push
push
scas
insb
mov
in
dec
adc
and
push
lahf
and
fs
cmp
test
sarl
pop
shlb
sbb
and
sbb
pop
roll
repnz
cmp
addl
push
adc
mov
in
lods
cwtl
aad
sbb
inc
mov
cmpb
xchg
jg
mov
mov
pop
test
sbb
jl
inc
insb
out
cld
xchg
mov
inc
jno
pop
clc
jb
pushl
mov
inc
xchg
and
fstpl
in
mov
negl
lahf
in
sbb
xorb
aam
xor
scas
cli
test
push
jg
adc
jp
cmp
iret
jb
adc
push
cs
outsb
into
clc
xor
and
rorl
push
call
sub
ffree
adc
push
gs
stos
dec
mov
push
loop
jle
shlb
jg
bound
sbb
pop
mov
inc
or
subb
mov
cmp
fwait
mov
xlat
or
into
gs
movsl
mov
push
js
mov
inc
clc
div
cmpsb
cmp
outsl
xchg
stc
call
add
or
scas
stc
daa
cmp
loop
and
xchg
lods
scas
clc
mov
and
decb
into
adc
xchg
outsl
outsb
xchg
sbb
aad
push
scas
xchg
adc
insb
jmp
mov
in
and
sbb
jnp
jle
je
mov
and
push
jmp
ljmp
push
out
repz
pop
jg
insl
mov
sahf
lret
or
or
insb
fneni(8087
or
cmp
fdivrl
and
sub
into
inc
xchg
or
mov
mov
xchg
or
enter
test
pusha
mov
xor
iret
das
int
test
outsl
jp
dec
cs
mov
out
sbb
je
call
mov
add
cmpsl
xchg
adc
inc
and
lret
popf
repz
sbbb
dec
shrb
sbb
push
cmc
outsl
mov
mov
movsb
fcmovu
jo
imul
mov
jb
outsl
push
xor
int
push
sbb
loop
gs
adc
aas
out
mov
and
dec
mov
jge
xchg
inc
fwait
adc
cltd
xchg
xchg
mov
sbb
lock
in
xchg
loop,pn
pop
loopne
lea
data16
sub
xchg
or
inc
outsb
in
imul
xchg
shl
repnz
jg
lcall
mov
xchg
pop
mov
data16
xchg
test
push
data16
incl
cs
dec
sbbb
or
jg
or
hlt
ja
sub
and
aaa
loope
arpl
mov
pop
test
outsl
sahf
or
xor
adc
data16
and
adc
pushf
sbb
inc
mov
sub
cmpsl
insb
outsl
jbe
iret
lods
inc
lcall
mov
sub
xchg
mov
mov
stc
aam
aad
pop
js
xchg
mov
loop
shl
push
rclb
sarl
fs
or
pop
add
xor
jge
fstpl
push
pop
scas
add
popa
add
ja
rcrl
or
cli
pop
mov
les
test
push
roll
daa
or
movsl
mov
test
xor
nop
lret
jb
jbe
or
mov
subb
lcall
jne
mov
and
mov
test
call
lds
fwait
dec
mov
shrb
jbe
lcall
bound
cmp
inc
mov
jnp
xor
jle
gs
sbb
insl
push
jns
sti
outsl
roll
xor
leave
into
cmp
adc
nop
pop
mov
adcl
pop
test
pop
push
in
add
mov
jle
inc
out
adc
or
jb
clc
push
inc
clc
sahf
dec
and
insl
jae
sub
mov
jb
jbe
adc
imul
add
inc
sbb
adc
popa
subb
mov
xor
xchg
test
and
roll
adc
scas
popa
pop
popa
lahf
lods
fcomip
pop
loopne
cltd
sbb
pop
jnp
insb
cli
dec
dec
xchg
inc
jle
xor
mov
pop
push
mov
fisubl
pusha
movsl
or
popa
fcmovnu
xchg
or
fbld
sahf
and
pop
fs
int
pop
insb
jb
adc
xchg
bound
and
add
cltd
dec
cmp
jo,pt
cld
or
mov
mov
aad
fistpll
jl
inc
inc
std
jb
cmp
fs
bound
aas
sbb
shlb
xor
jne
xchg
mov
dec
jbe
jo
push
sti
sar
sbb
iret
std
jbe
jne
or
fsubp
je
jmp
push
mov
out
ret
adc
lods
sbb
in
daa
sahf
xor
popf
shlb
aaa
mov
cmpsb
jl
or
mov
xor
dec
dec
pop
insl
movsl
iret
loope
aam
mov
das
sti
and
mov
cmpsb
rclb
jae
pushf
scas
jns
cmp
clc
adc
fucomi
inc
mov
jo
sti
jl
andb
pop
outsb
pop
adcl
outsl
cs
jp
pop
and
xor
shlb
sahf
fistpl
sbb
dec
jno
mov
out
jb
xor
push
add
sbb
lret
xor
daa
jb
adc
adc
clc
add
inc
imul
push
adc
outsl
xchg
adcl
das
mov
xchg
and
ds
out
insb
cltd
andb
insl
cmp
lods
outsl
cmpsl
jp
jg
mov
lods
out
dec
xchg
pusha
insb
mov
in
aam
or
outsl
pop
xor
sub
xor
lods
jmp
inc
stos
push
jno
push
jecxz
fsubrl
pop
popf
jle
cmp
inc
sbb
aad
int
pop
jo
in
je
sahf
push
fsubs
movsl
sahf
fistpl
adc
sti
mov
jmp
movsb
pusha
mov
cmpsl
bound
cwtl
lds
fbstp
jge
test
xor
inc
sub
dec
inc
cmp
mov
and
dec
aad
mov
stc
mov
push
imul
insb
stos
mov
stc
div
clc
mov
push
mov
scas
dec
xchg
cmpsb
push
imul
xor
cld
mov
xor
pop
in
out
int
hlt
push
insb
in
mov
inc
pop
sahf
pusha
mov
outsb
in
adc
leave
enter
push
add
push
cmc
dec
xchg
jne
xchg
push
lods
inc
and
xchg
movsl
fidivrs
test
out
bndldx
sbb
cwtl
int3
jne
add
ja
daa
jb
pop
repnz
xor
popa
daa
pop
inc
jmp
mov
movsl
pop
pushf
fdivrl
aad
ds
dec
fs
ja
jecxz
cs
mov
loop
aas
in
cmp
adc
jo
imul
outsb
bound
mov
lcall
push
mov
mov
and
sti
mov
xlat
jnp
shlb
xchg
sub
mov
sbb
ret
mov
or
and
lcall
jbe
and
or
popw
enter
inc
push
jns
cltd
jecxz
in
mov
addr16
cmp
push
adc
inc
cmp
dec
repz
hlt
mov
and
add
inc
arpl
decb
jg
xor
xchg
pop
cmp
scas
push
popl
sbb
ret
shll
xor
mov
out
pavgw
jmp
into
movsb
mov
repnz
sbb
or
lea
pushf
popl
mov
xchg
fwait
push
mov
pushl
jne
repz
push
pushf
pop
fisttpll
scas
mov
repz
cmp
out
xchg
es
push
in
and
divl
popa
sub
mov
call
lock
mov
jo
jb
test
dec
test
std
xor
inc
insb
xchg
cld
sti
popa
mov
cmp
lret
sti
push
cmp
outsl
test
inc
sti
in
jbe
call
mov
pop
xchg
leave
jl
stos
or
mov
imull
outsl
sub
rcrb
lret
es
and
push
gs
pop
adc
mov
imul
xchg
pop
jbe
inc
insl
jg
sub
sti
fsubrs
shlb
cwtl
cli
inc
enter
dec
cmp
cmp
loop
sbb
daa
push
dec
icebp
mov
ss
hlt
mov
lock
in
pop
push
add
pop
data16
jo
call
inc
out
jb
jl
xchg
mov
ljmp
sahf
dec
xor
push
sahf
aad
or
inc
pop
imul
jecxz
push
add
out
inc
outsb
jno
fdivl
inc
shlb
outsb
mov
shll
outsl
mov
stos
bound
outsb
jecxz
jg
sbb
inc
notb
scas
pop
or
aam
pop
push
xor
add
lea
jmp
lea
in
out
inc
loopne
jne
inc
add
fs
loope
jnp
jns
stc
into
mov
sbb
mov
fwait
push
insb
and
nop
sub
bound
inc
clc
imul
loop
mov
js
fmul
adc
mov
ret
out
or
jns
loope
sbb
push
and
mov
pop
clc
or
xchg
dec
in
push
xchg
mov
xchg
sbb
sbb
pop
pop
clc
ret
xchg
cmp
fnstsw
out
cmp
cmp
dec
pop
mov
add
jo
cmp
lods
lods
insl
xchg
inc
call
fldt
xchg
outsl
fucomp
add
mov
push
pop
cmpsb
enter
mov
and
nop
repz
lods
add
mov
inc
aad
adc
jne
mov
cmpsb
movl
pushf
push
mov
fisubl
enter
testb
jle
or
push
mov
hlt
test
jns
in
ja
inc
js
sar
bound
fs
lcall
and
in
jb
inc
cltd
sub
cmp
gs
mov
jo
jp
outsl
jl,pn
subl
arpl
jo
icebp
cmpsl
mov
ja
inc
push
pushf
call
insl
out
mov
gs
data16
jns
pop
bound
dec
mov
icebp
pop
gs
xchg
bound
fndisi(8087
data16
stc
push
inc
gs
les
push
jbe
push
into
jno
mov
dec
push
push
fisubrl
stos
cmp
out
mov
inc
je
jns
data16
andl
gs
ja
jg
into
xchg
insb
out
and
hlt
jp
cmp
jno
gs
or
or
icebp
out
lret
sbb
gs
jns
jnp
inc
add
jne
insl
jne
popa
or
xchg
loope
fwait
jbe
ja
or
jnp
or
andl
clc
cmpsb
jge
mov
dec
loop
mov
int
xchg
gs
in
imul
stos
ret
imul
jecxz
gs
in
imul
fldt
fs
js
sbbl
pop
mov
aam
cs
mov
sbb
ss
repnz
jge
mov
cld
pop
pop
jnp
pop
jmp
loop
mov
out
fistps
fs
or
xchg
andb
repz
jnp
or
adc
jae
pushf
cwtl
xchg
inc
imul
insb
std
inc
js
nop
ret
andb
testb
popa
mov
push
add
push
sbb
fucomi
mov
mov
fstpt
or
or
adc
jbe
stos
enter
iret
lock
push
xchg
out
les
jns
gs
and
jo
ljmp
data16
cmp
repnz
mov
inc
mov
pop
rorb
fwait
cmpsb
out
ja
cwtl
rorl
mov
dec
jns
fwait
dec
push
out
lcall
outsl
repz
mov
xchg
or
movsl
sbb
dec
inc
fldt
js
lcall
fnstenv
xchg
outsb
stos
sub
xchg
mov
lods
push
or
push
aas
mov
mov
jb
and
in
xchg
dec
scas
in
jp
mov
and
lcall
mov
xor
mov
test
mov
mov
push
or
push
jbe
xor
cmpsb
stc
cmc
fs
bound
ljmp
stc
adc
test
in
xchg
mov
pop
pop
push
mov
lcall
fbld
push
lods
xor
sub
mov
push
in
dec
push
dec
mov
xchg
lcall
pop
jg
mov
mov
jne
fsts
mov
xor
lcall
outsl
jmp
jno
orb
push
pop
sbb
scas
lcall
inc
push
test
test
jg
hlt
adc
pusha
and
ror
addr16
or
mov
les
shr
mov
pop
mov
imul
xor
xchg
dec
insb
adc
in
out
stos
dec
fmuls
jecxz
mov
push
dec
and
lret
ja
pushf
outsb
in
mov
lret
fwait
iret
insl
inc
notb
push
xchg
and
sub
adc
insb
out
lahf
call
push
jg
mov
or
jbe
lcall
xor
ret
jno
add
cwtl
adc
jae
xchg
adc
inc
sbb
jg
pop
jl
sbb
data16
clc
cmp
mov
mov
add
xchg
jmp
jecxz
mov
adc
in
xchg
in
not
call
mov
loope
insl
out
aam
js
call
jno
into
ffree
mov
push
fiadds
insb
dec
pop
insl
movsl
mov
adc
test
xor
and
or
jo
jg
mov
loopne
push
mov
lcall
in
or
dec
stos
das
in
sarl
sbb
mov
ret
xchg
jmp
or
xchg
xor
fiaddl
or
jnp
outsl
sbb
add
add
inc
pop
imul
mov
subl
inc
insb
adc
and
push
jno
call
mov
push
or
jno
mov
aas
jg
mov
dec
mov
jge
mov
mov
out
jmp
test
in
cmp
outsl
xorl
jbe
fdivrl
loope
or
adc
call
cmp
mov
sahf
clc
or
xor
or
mov
hlt
sti
dec
pop
jmp
call
push
dec
lret
movsb
lcall
icebp
add
push
movsl
jbe
pop
bound
mov
sbb
jo
xchg
punpckhbw
in
mov
jns
sbb
aam
inc
pop
cmpb
xchg
dec
jns
cmp
js
lcall
jns
out
and
movsb
shlb
ss
pop
repnz
stos
das
loopne
jge
movsl
mov
gs
fsub
push
xchg
mov
stos
stos
xchg
push
sbb
shll
add
xorps
push
lea
cmc
xor
sub
adc
in
and
inc
sbb
icebp
insb
cmpsb
sub
insb
mov
jl
xor
outsl
idivl
and
into
ja
inc
mov
xor
sub
push
jno
inc
ret
fs
in
mov
ljmp
jl
pop
or
jg
cmp
adc
mov
xchg
sub
into
fdivs
leave
mov
push
stc
jecxz
cmc
and
xor
xor
in
sbb
sbb
rcll
mov
mov
out
data16
pop
pop
jo
pusha
add
out
cmp
push
or
in
inc
jecxz
imul
outsb
xor
idivl
mov
sbb
sub
pop
es
adc
inc
sub
jo
xor
jmp
jl
or
pop
sti
inc
scas
mov
sub
popa
jmp
loopne
bswap
xchg
push
les
shll
xchg
fstcw
fsubr
pop
mov
stc
in
loopne
xchg
ret
mov
int
xor
in
xchg
or
rcll
insl
xbegin
xchg
loop
test
dec
cmp
ljmp
out
mov
mov
xor
push
addr16
outsl
cmp
iret
cmp
in
call
mov
ljmp
es
lret
incb
cwtl
movsb
addr16
and
sahf
enter
adc
xchg
cwtl
sti
jl
insb
xor
lcall
pop
jg
cmp
add
dec
jmp
inc
lcall
lret
adc
sub
jle
pop
xchg
lcall
mov
or
xor
lcall
outsl
xchg
mov
mov
fwait
outsl
push
dec
repnz
sub
idivl
sarb
pusha
jge
xor
push
roll
mov
lea
jo
pop
aam
mov
das
jns
dec
jbe
mov
adc
adcl
cmp
fadds
ss
fstps
lds
inc
adc
push
out
mov
jno
xchg
cmp
pusha
xchg
in
xlat
in
dec
movsb
stos
mov
daa
inc
pop
int
fcomps
out
shrl
cli
popa
xchg
add
lcall
dec
jnp
outsb
std
out
jo
adc
fisttpll
mov
mov
repnz
inc
mov
dec
pop
jg
add
clc
nop
xchg
mov
xor
cs
mov
push
cmpsb
mov
out
cmp
xchg
cs
dec
mov
pop
mov
xor
lcall
xor
lods
sti
fwait
cmp
cs
dec
sti
loope
jbe
stc
xchg
into
jge
call
lahf
cmpb
outsl
adcl
std
pop
dec
daa
jp
sbbb
daa
test
dec
xchg
jbe
js
xor
lcall
sbb
fdivl
mov
mov
pushf
mov
push
push
push
fstpt
popf
daa
jp
pop
lcall
outsb
enter
inc
lret
add
inc
cmpsb
xchg
call
sti
push
and
fsubrl
adc
mov
push
loop
jl
lods
repnz
inc
repz
mov
mov
push
icebp
sbbl
dec
in
jae
xor
int
jl
jg
daa
and
cmc
lgs
sbb
int
pop
es
je
push
mov
popa
enter
push
std
push
ret
adc
sub
shlb
es
push
clc
jo
leave
cmp
pop
call
lods
in
adc
mov
fistpl
and
xorb
scas
neg
clc
mov
xchg
mov
bound
lcall
cld
sbb
mov
jp
mov
imul
or
push
cmp
jecxz
cmpsl
mov
pushw
icebp
cmc
aaa
push
mov
inc
pop
adc
in
ret
jg
movsl
fstpl
jecxz
fsubp
jo
ss
cmpsb
fwait
clc
jg
jmp
out
imul
filds
inc
sub
xchg
in
mov
inc
or
jo
gs
jbe
xlat
aas
mov
in
push
and
ret
jbe
mov
or
pop
clc
xchg
mov
das
test
stos
cld
sbb
pop
mov
push
mov
divb
lcall
and
jbe
push
mov
adcb
cmp
push
and
push
ret
add
in
nop
add
mov
icebp
in
shlb
dec
movsl
jae
jg
mov
js
push
mov
mov
rcll
ret
loop
fsubrl
imul
inc
fs
movsl
xchg
mov
popl
push
sbb
add
sti
cs
mov
xchg
pop
pushf
out
ds
mov
popf
pop
mov
and
push
test
pop
jg
or
dec
pop
in
mov
xchg
xor
push
cmpb
dec
jg
xor
lcall
subb
scas
int
std
push
test
cmp
mull
push
adc
xchg
or
rorb
into
mov
jnp
sub
insl
lcall
loope
dec
faddl
dec
mov
and
loop
aad
jmp
fldenv
add
mov
bound
call
push
jmp
fwait
cmp
enter
mov
or
nop
insb
or
mov
sbbl
pop
mov
test
ds
es
cmp
vmovshdup
test
and
out
adc
cmp
aaa
inc
cmp
adc
shrl
sbb
cmpsb
sub
mov
insl
popa
mov
push
xorl
mov
jb
ljmp
es
xor
mov
insb
mov
cltd
jg
pop
add
pop
mov
mov
out
push
fnsave
mov
or
adc
adc
fidivrs
mov
ss
and
sti
sti
push
bnd
lds
jmp
xacquire
pop
arpl
fldcw
mov
sub
scas
sbb
pop
push
fldt
mov
cld
cli
mov
push
xchg
popa
aad
ja
sti
inc
cmp
aam
movsl
mov
mov
std
mov
lcall
mov
lods
inc
stc
xor
in
mov
cmp
jg
inc
add
outsl
fs
loopne
test
cmp
mov
inc
test
aam
mov
push
jecxz
mov
fwait
jg
xor
push
clc
push
test
dec
adc
ss
lcall
push
rcl
push
repz
push
clc
and
jnp
xchg
add
loope
jae
fwait
arpl
jnp
ja
mov
sbb
sbb
adc
mov
cmp
out
mov
enter
cli
xor
je
movsl
in
mov
or
into
cld
cmpsl
adc
dec
and
push
outsl
cmp
mov
pop
pop
push
xchg
test
mov
mov
mov
orb
dec
not
push
xchg
lock
mov
idivl
lea
scas
outsb
xchg
push
pop
movsl
xchg
test
mov
pushf
aaa
xlat
adc
push
aam
int3
psubusw
idivl
add
mov
mov
lods
sti
dec
jg
adc
adcb
lds
cltd
btc
cwtl
test
stos
lea
add
pop
xchg
cmpsb
je
or
fwait
out
jbe
pop
outsl
mov
cmp
iret
movsb
jp
test
mov
aaa
dec
sub
xorb
mov
lods
jp
not
pop
pop
std
insb
jl
fildl
outsl
mov
jg
or
cltd
dec
adc
adcl
int3
inc
outsl
pop
fldt
mov
ja
mov
loopne
jg
insb
jmp
mov
aaa
mov
outsl
cli
and
data16
push
and
test
outsl
insl
mov
bound
pop
adc
jbe
dec
jo
mov
dec
pop
scas
jbe
sub
lods
outsb
and
sub
xchg
scas
mov
pop
jo
outsl
sti
vmovntps
fs
jge
idivl
mov
dec
cli
lods
dec
pop
xor
lock
jmp
test
fs
lods
mov
rclb
xchg
lcall
mov
in
pop
inc
lea
call
push
mov
fwait
insl
fcom
out
pop
movsl
and
mov
stc
dec
and
dec
jne
inc
sbb
mov
xor
push
lcall
out
sbb
aad
fsubrl
inc
lds
arpl
lcall
insl
cmpsl
jg
into
mov
adc
push
mov
mov
inc
jbe
sbb
in
push
idiv
scas
mov
cmp
lcall
mov
int
sub
cld
loope
and
test
aad
sbb
jg
rol
dec
pop
bound
mov
push
jecxz
pop
popa
sbb
shll
out
out
test
fistps
xchg
or
scas
push
lods
fs
jg
sarb
mov
sub
out
movsb
dec
scas
mov
or
pop
dec
and
push
xchg
pop
pop
clc
add
adc
in
repnz
push
add
pop
lcall
push
popa
mull
jp
mov
mov
inc
inc
aam
daa
or
lcall
addr16
nop
xchg
or
aaa
lods
cmp
and
movsl
fs
std
xchg
dec
cmp
jg
orl
or
int3
imul
dec
icebp
js
sbb
mov
mov
jg
sub
lock
sbb
mov
and
fidivrs
cs
pop
mov
sbb
fisttpl
push
xchg
push
mov
mov
out
loop
jnp
std
cs
or
mov
jo
jg
pop
mov
pop
xchg
push
clc
inc
fdivs
xchg
outsl
push
jno
add
sbb
or
outsb
push
push
dec
mov
jmp
repz
xor
pop
ret
stos
clc
pushf
mov
or
daa
stos
and
repnz
bnd
rcl
jne
and
mov
gs
mov
push
fidivrl
stos
loope
repz
fwait
repnz
mov
cmp
jns
jg
scas
cmp
addb
ja
aas
jnp
and
mov
or
and
stos
xlat
and
push
scas
shrl
addb
adc
lret
shrl
je
jne
push
and
and
sub
mov
lret
xchg
cmp
jbe
dec
maskmovq
divl
or
rolb
jne
rcr
jo
out
icebp
bound
mov
cmp
xchg
adc
mov
mov
mulb
dec
lcall
fs
cmp
test
repnz
mov
js
ficoms
ss
or
or
jmpw
xchg
add
xchg
into
sahf
testb
dec
outsb
push
test
or
stc
mov
push
ror
mov
cld
jo
out
sub
pop
std
cmc
ret
sbb
sub
int
pop
ret
fcomip
fs
dec
and
pop
ljmp
das
pop
enter
mov
nop
push
hlt
push
xor
das
push
and
jae
repz
push
xchg
fimull
dec
aam
xor
add
movsl
jg
cmc
cmp
add
and
inc
inc
sti
and
mov
sub
jecxz
mov
sbb
lcall
cmpsb
in
jno
cmp
cmp
and
sbb
imul
lods
push
insb
pop
add
in
scas
in
pop
jne
lds
jmp
aad
shll
xchg
das
in
pop
cmp
lds
mov
push
mov
scas
sbbl
mov
xchg
into
imul
outsb
lcall
movq
cmp
in
int3
or
lcall
aad
mov
cs
stc
test
sbbb
mov
mov
jg
jbe
outsl
jae
inc
inc
loopne
test
lea
addr16
in
cmp
cli
inc
pop
push
pop
fwait
mov
aad
or
xchg
pop
pushf
int3
dec
aaa
in
sbb
push
mov
mov
movsl
mov
mov
outsl
add
sbb
dec
jge
mov
pop
and
out
sbb
lea
jmp
into
adc
push
nop
mov
mov
push
stos
je
outsl
arpl
scas
or
mov
in
flds
notb
or
or
je
jg
xchg
cmp
add
sarb
jne
clc
mov
xlat
inc
lcall
jno
stos
outsb
stos
push
clc
stos
mov
fdivrl
mov
bound
mov
push
adc
xchg
idivb
push
jb
por
js
imul
sbb
stos
jg
jmp
cld
mov
jmp
push
mov
clc
mov
push
call
push
inc
mov
leave
icebp
dec
pop
mov
or
or
insb
sub
movsl
jl
inc
repnz
mov
sahf
pusha
loop
or
xchg
jl
lahf
jno
dec
xchg
inc
popa
std
insl
jne
fucomi
cmp
pop
fs
jmp
outsb
sbb
mov
jl
xor
cmc
sub
jl
icebp
or
jle
std
jmp
mov
cwtl
mov
data16
cmpsb
cld
test
sub
mov
xchg
jl
mov
data16
roll
mov
inc
jbe
dec
hlt
adc
test
xchg
popa
imul
std
lods
int
insb
lcall
inc
jmp
iret
sbb
mov
sbb
dec
pop
repz
sub
jmp
inc
sti
mov
rcrb
icebp
test
add
movsl
inc
into
jo
dec
mov
and
icebp
pop
popa
cmp
mov
push
adc
cmpsl
stos
xchg
add
jl
inc
call
es
push
pop
outsb
xchg
add
mov
mov
sub
jg
insb
add
jmp
push
mov
sub
dec
mov
sub
adc
cmpsl
lahf
push
bound
gs
xchg
subl
outsl
dec
icebp
jl
mov
jo
fs
adc
mov
cltd
fwait
out
dec
inc
and
inc
data16
lock
or
xchg
pop
popf
and
cs
fwait
out
std
sub
frstor
jl
push
cmp
pop
cmp
ss
addl
fwait
xor
add
jo
pop
jae
sahf
bound
jge
cs
or
scas
ds
loopne
xchg
inc
js
and
adc
jnp
inc
xchg
pop
inc
xchg
dec
in
xchg
lahf
out
mov
jmp
filds
push
jno
pop
adc
adc
mov
test
lods
sarl
imul
lret
fwait
shll
movsl
stos
fs
call
xchg
inc
mov
lret
mov
popf
subb
outsb
mov
push
adc
or
inc
fsubr
xchg
fs
dec
cmp
and
daa
es
std
lock
cli
mov
cmp
cmpsl
jl
push
pop
lea
imul
lds
jg
pop
out
les
call
sbb
test
mov
xor
dec
sbb
adcb
ret
daa
pop
daa
jecxz
push
push
clc
arpl
jnp
popa
mov
lret
lock
add
jl
movsb
jae
push
mov
lret
cwtl
fstpt
dec
frstor
in
pop
dec
jns
cmp
mov
mov
or
cmp
das
and
lods
and
popa
jae
fwait
fwait
addr16
jb
push
inc
mov
fcomi
add
stos
jno
je
imul
into
imul
push
sti
pop
lods
add
or
cmp
sub
and
add
jl
int
xchg
pop
xchg
mov
jl
std
dec
bnd
adc
jl
xor
mov
aas
mull
fwait
mov
jl
iret
inc
fimuls
sti
leave
jl
xchg
inc
inc
dec
sub
test
test
jl
pop
rcll
data16
test
mov
cmc
xchg
pop
jl
xor
mov
sbb
pop
call
mov
and
ja
push
aam
loopne
jle
mov
pop
jnp
icebp
mov
repz
hlt
jl
jmp
and
jl
mov
arpl
cmpl
loope
in
stos
insb
neg
pushf
fidivrs
int3
insb
jl
int
rcrl
or
cmp
dec
jno
cmp
pop
inc
dec
stos
jl
jns
add
jg
mov
mov
mov
pop
pusha
adc
idivb
cmpsl
mov
dec
sub
je
dec
jno,pn
push
pop
xor
fistps
sar
iret
lods
cmp
sub
jl
jo
pop
repz
mov
int3
and
sbb
daa
iret
js
push
sahf
fildl
imul
add
adc
fnstsw
or
jge
outsl
cmpsl
jl
iret
pop
repz
clc
mov
jo
jl
mov
bnd
sbb
lahf
ret
lcall
sub
in
sub
insl
repz
jl
testl
movsl
js
push
xchg
mov
cli
xchg
jbe
rcr
xor
or
pop
xchg
jl
push
loopne
sbb
pop
xor
mov
add
sub
repnz
xor
sub
jl
add
sbb
jnp
rcrb
cmp
push
pop
lret
mov
adc
movsl
mov
jns
and
outsl
stos
jl
fdivl
jl,pt
out
pop
mov
push
fisubs
cmp
scas
jnp
mov
lea
push
push
cmp
inc
cmp
cltd
push
jbe
jl
jp
sbb
cmc
add
outsl
push
lds
push
scas
dec
jae
movsl
addr16
jmp
movb
xchg
js
repz
cmpsb
dec
fistpl
pop
mull
xor
xor
popa
sbbl
mov
pop
adc
ds
push
jl
mov
xchg
inc
jnp
sub
fistps
push
mov
insb
insl
cmp
fwait
iret
jnp
icebp
jg,pn
mov
nop
mov
clc
jge
loopne
add
shl
xchg
pop
push
movsb
pusha
ficompl
gs
mov
ss
mov
inc
scas
sbb
scas
pop
cmp
outsb
inc
sub
data16
pushf
pop
fnstcw
dec
inc
push
lcall
popf
pop
mov
insb
cmpsl
pop
and
and
outsl
fdivs
add
xor
scas
pop
or
in
mov
mov
insb
pop
mov
and
icebp
cmp
inc
leave
mov
fildl
lock
xor
fcmovnu
push
outsb
jl
inc
out
fwait
inc
loop
lcall
mov
fs
mov
int3
inc
or
and
jl
jae
adc
pop
nop
jl
sbbb
scas
fwait
ds
test
mov
or
dec
js
clc
mov
mov
mov
leave
out
out
jle
insl
mov
out
jl
je
out
lods
adc
inc
and
loopne
jge
fwait
jb
and
add
push
mov
sub
jnp
inc
sub
repz
jne
in
and
xchg
mov
jl
dec
call
add
repz
push
xchg
pop
pop
fs
int
mov
add
das
lret
addr16
cmp
jl
insb
cwtl
inc
sbb
mov
jl
test
jae
push
cmpsl
jno
cmpsl
in
dec
mov
xchg
cmp
push
adc
fildl
jo
jmp
sbb
shrb
outsl
mov
jne
fs
push
jne
jl
add
lds
cmp
mov
push
js
jmp
fwait
jl
jge
outsl
and
rcll
jp
jl
adc
inc
fwait
popa
aaa
add
test
cmpl
adc
inc
adc
push
call
ljmp
cmc
push
arpl
arpl
inc
popf
fwait
insb
imull
sarl
mov
add
jnp
std
fcmovnu
push
out
stos
inc
pop
ret
arpl
inc
jl
xor
cli
xchg
cmc
jl
push
sbbl
outsb
jl
in
imul
cltd
xchg
es
pushf
pop
adc
or
aad
jg
data16
insb
fs
and
and
adc
jl
jg
lea
idivb
iret
insb
jge
push
arpl
inc
lea
leave
inc
push
fbld
aad
sub
cmp
pop
xchg
fs
jnp
inc
insl
scas
push
std
xchg
and
and
pop
jmp
add
cmp
mov
aas
jecxz
fwait
mov
jp
sahf
pop
enter
jbe
inc
out
xor
mov
jnp
aaa
jl
pop
lds
dec
bound
and
jl
int
ljmp
cmc
xchg
jge
insl
int3
pusha
jnp
cmpsb
jns
jbe
jl
lock
ret
shll
jl
ja
xchg
jns
loopne
es
scas
adc
arpl
push
scas
ja
ds
pushf
jl
or
mov
lods
jl
add
xor
or
sub
jne
decl
inc
mov
pop
insb
inc
jl
int
mov
cmpl
mov
popa
xchg
jae
into
mov
ret
mov
dec
test
push
cmp
cmp
addr16
jne
and
jl
cmp
inc
fldl
call
insl
push
cwtl
ret
movsl
jp
lret
ljmp
mov
pop
les
scas
in
dec
addr16
dec
imul
out
jl
aaa
lds
mov
daa
lret
xor
jmp
dec
push
test
xor
orb
call
mov
fnstsw
push
sub
xor
je
std
imul
mov
iret
add
movsl
nop
outsb
jl
add
mov
jnp
add
hlt
pop
xor
add
lods
mov
nop
dec
and
sbb
dec
addl
push
xchg
cmp
pop
inc
mulb
dec
fwait
pop
xor
std
pop
lea
aam
mov
inc
push
mov
jl
stc
and
fcoms
insb
into
fidivl
lock
arpl
fdivrl
jp
cmp
add
imul
pop
and
fists
dec
je
sti
dec
ds
fstps
fcmovb
out
push
pop
pushw
scas
add
ret
hlt
pop
pop
movsl
lods
data16
pop
mov
fs
add
xchg
daa
or
inc
jl
lods
inc
or
test
leave
pcmpeqb
adc
insb
movsl
mov
push
test
jl
and
lret
jnp
sub
jo
cld
test
std
insb
ja
pop
sbbl
dec
inc
cli
mov
jae
jmp
int
sbb
jl
jne
shl
and
push
icebp
mov
dec
add
jecxz
dec
sub
cwtl
inc
test
adc
int
add
push
in
inc
push
mov
int3
loopne
pushf
mov
int
jns
xlat
pop
fwait
pop
shlb
cltd
push
insb
cmpsl
int
mov
stos
je
popa
cmp
out
cli
jo
in
mov
pop
test
arpl
push
fnstenv
sub
dec
inc
dec
out
jl
push
jl
cmp
mov
sahf
push
xchg
inc
movsl
insb
cli
enter
jbe
js
fiaddl
call
pop
pusha
fwait
xchg
jnp
pop
fbstp
popa
jb
out
ret
pushl
add
test
pop
es
out
mov
xor
inc
sar
add
sbb
es
sahf
ret
jbe
cmp
in
jmp
inc
and
fisttpl
mov
mov
jae
test
and
test
bound
andl
jae
inc
mov
movsl
andl
xor
lret
inc
and
movsb
clc
les
mov
push
and
cmc
clc
jp
lret
mov
loope
decl
add
scas
test
out
in
jbe
add
gs
aam
jle
inc
or
sahf
jge
push
inc
dec
std
fs
pop
call
mov
incl
sbb
xchg
test
gs
add
xchg
cmpsl
and
add
inc
dec
ljmp
jnp
add
jae
add
imull
shlb
mov
pop
dec
bound
push
cwtl
in
xchg
arpl
imull
pop
subl
jae
les
dec
in
movsl
aaa
jae
fsubl
addl
test
mov
inc
movsl
sbb
mov
call
ret
xchg
popf
sahf
fistpll
popa
outsb
mov
test
imull
mov
in
insb
insl
clc
inc
out
mov
loopne
push
lods
jbe
mov
ficoml
inc
popa
jecxz
cwtl
test
mov
xor
sti
js
out
orl
loope
lods
es
mov
dec
add
packsswb
jmp
pop
jbe
add
repnz
es
in
xlat
insb
sub
inc
xor
sbb
sti
loope
add
xchg
inc
cmp
sbbb
sub
adc
test
movsb
shl
in
jecxz
pop
loope
repnz
call
jbe
std
and
pushl
test
movsb
sarl
mov
xor
test
dec
and
loop
jp
out
call
inc
rorl
popa
test
jo
cmpsl
hlt
cmp
loope
push
test
and
cmp
and
daa
pop
and
mov
outsb
mov
fisubl
pop
movsb
mov
xchg
popa
add
movsb
fs
adcb
fildl
test
mov
and
popf
mov
add
jl
insl
out
xor
mov
mov
les
jmp
pop
data16
jecxz
and
subl
add
adc
pop
dec
push
add
xchg
and
jae
inc
mov
testl
fs
mov
mov
push
mov
inc
dec
aad
xlat
xchg
movsl
std
outsb
lds
int3
sub
movsl
xor
mov
loope
mov
sahf
insl
mov
and
push
dec
popaw
mov
push
xor
or
shl
clc
push
dec
and
push
xchg
rol
rcr
push
shr
rol
push
and
mov
bswap
mov
xor
mov
push
shr
sar
mov
add
sbb
pusha
sub
lea
pusha
lea
jg
lods
rol
dec
mov
sar
neg
pushf
xor
jmp
mov
dec
dec
inc
rcl
cmc
pushf
ror
call
lea
jae
push
test
sub
pushf
jmp
call
adc
pushl
pushl
pushl
ret
setae
mov
pusha
mov
pushf
lea
call
fsub
loopne
fadd
pop
ljmp
or
call
ret
das
add
mov
mov
lahf
and
les
ret
rorl
int
mov
mov
xchg
dec
inc
rep
rorb
push
test
inc
push
pop
inc
push
pop
mov
jp
lods
pop
add
mov
repz
mov
mov
in
fists
repnz
scas
inc
mov
pop
pop
push
push
mov
mov
cmpsl
xor
ds
sub
loopne
or
insb
cmpb
decb
sbb
push
mov
je
push
call
movsbw
lea
call
fwait
xchg
xchg
mov
inc
pop
movsb
mov
mov
outsb
cwtl
fwait
mov
clc
dec
cmpl
mov
mov
mov
rol
lds
inc
inc
pop
mov
in
jb
cltd
insl
test
setbe
bound
add
xor
sbb
and
and
or
push
int
adc
test
push
inc
mov
scas
mov
adc
ja
cmc
push
dec
mov
js
push
dec
inc
mov
push
sbb
in
jbe
int
pop
lds
scas
gs
push
mov
clc
sub
pusha
mov
lea
jne
call
pushf
jmp
adc
mov
lea
jae
jmp
test
int
ffree
mov
or
pop
in
in
out
icebp
ror
jmp
sbb
adc
out
mov
popa
xchg
fmuls
sbb
jne
pushf
sbb
out
jg
pop
xor
push
int
sbb
or
adc
and
fsubrs
insb
push
fsubrs
or
inc
ljmp
js
jbe
add
cmp
test
or
add
add
call
shrb
test
jno
cltd
xchg
pop
cmp
push
cmp
imul
xorl
jno
test
test
orl
gs
test
imul
jge
mov
add
data16
mov
xchg
jecxz
ret
sarl
and
adc
sbb
fidivs
pop
iret
jmp
mov
xor
sti
cmp
mov
jge,pn
cld
cmp
lea
pop
sbb
andl
loop
jge
movsl
push
loopne
stc
dec
lods
sub
lods
mov
pop
aam
lods
mov
add
pop
mov
int
pop
bound
repnz
mov
aas
leave
push
mov
cmpsl
cltd
arpl
test
or
or
sti
loope
rol
aaa
and
jbe
loope
pop
push
mov
and
ljmp
pop
lods
mov
and
adc
leave
cwtl
in
and
dec
cmc
xor
adc
sar
adc
mov
pop
fmuls
adc
mov
add
shlb
push
fsubl
movsl
loope
in
stc
jmp
sbb
inc
js
adc
xchg
cmp
mov
bound
inc
mov
mov
mov
fwait
adc
pop
jmp
cmpsl
sbb
call
ds
shl
add
push
push
cmpsb
pop
jns
cmc
push
and
mov
xor
leave
sub
xor
cmp
sub
adc
fsubs
xchg
daa
sub
fcoms
dec
add
add
mov
cmp
sub
xor
ds
test
pop
adc
xchg
add
inc
fdivs
out
push
cs
mov
sti
dec
mov
adc
jne
test
lods
inc
dec
inc
push
cmpsb
movsb
pushf
js
test
mov
jp
insl
and
push
dec
push
lds
mov
adc
pusha
push
cmpsb
push
mov
cmc
mov
jb
or
mov
vpshlw
mov
ja
inc
sbb
lea
mov
js
dec
pop
add
mov
sub
and
lods
iret
or
add
sub
repz
mov
mov
sti
scas
stos
xchg
scas
xchg
jae
push
mov
push
aam
and
xor
enter
push
sbb
filds
xor
loope
ror
fmulp
lret
shlb
cmp
repnz
sbb
inc
push
push
ret
fmuls
mov
adc
jne
les
lret
aaa
fsubl
and
push
mov
data16
mov
cmp
mov
arpl
mov
adc
jno
cmp
and
add
in
in
adc
sbb
cwtl
ret
fsubr
push
pop
xor
pop
pop
test
xchg
mov
jecxz
data16
adc
js
jp
xchg
adcb
xchg
out
jge
sahf
inc
add
movl
call
loope
frstor
fsts
call
add
in
xor
pop
sbb
mov
outsb
jl
dec
add
jo
stc
out
addb
into
mov
lods
mov
or
jo
lods
xor
ret
leave
out
cmp
add
inc
push
adc
movsb
aaa
setge
inc
call
pop
adc
repnz
mov
dec
inc
dec
mov
xchg
xchg
jno
gs
insl
dec
imul
inc
sbb
add
outsb
data16
add
call
jl
fcoms
adc
rolb
dec
aaa
add
mov
pusha
xchg
cwtl
movsbw
movsbw
mov
not
lea
movw
xchg
mov
not
movl
lea
seto
pop
lahf
lea
call
pushf
mov
fs
fnstcw
test
inc
inc
mov
mov
push
push
mov
lods
in
out
mov
cmpb
jp
dec
inc
pop
scas
mov
and
pop
mov
adc
adc
mov
mov
sbb
ficompl
push
inc
pop
int
pop
dec
mov
mov
xor
out
in
decb
or
push
pop
add
movsl
push
fnstsw
sbb
mov
mov
mov
loop
jmp
mov
imul
mov
push
outsb
pusha
test
sub
adc
rolb
xchg
xchg
cmp
inc
mov
jae
insl
je
push
mov
pop
inc
cmp
loope
dec
pop
loopne
lea
fs
mov
cwtl
mov
push
mov
jb
xor
sub
or
popa
lahf
imul
scas
mov
sub
sub
mov
lret
imul
clc
test
loope
out
pusha
cmp
inc
pop
ret
sarb
sub
adc
add
or
cld
cld
cld
or
and
mov
pusha
call
pushl
popl
pushf
mov
movb
pushf
pushl
ret
add
pusha
movl
lea
jmp
adc
jno
add
sbb
fs
mov
dec
push
js
ss
in
jmp
iret
add
icebp
in
add
sbb
loop
sbb
dec
mov
xchg
mov
outsl
mov
jg
pop
cmp
rcl
xchg
btc
jmp
mov
ffreep
rcr
cmp
and
sub
mov
pop
add
mov
jge
push
pop
loopne
rep
sbb
aad
inc
dec
xchg
cmp
das
xor
mov
shll
iret
xor
pop
pop
outsl
aaa
push
mov
and
sub
mov
xchg
hlt
arpl
mov
dec
push
inc
inc
lods
mov
lods
or
ja
cltd
xorb
adc
sbb
repz
cmpsl
mov
xchg
cltd
enter
jbe
jb
lea
inc
jmp
insl
push
movsl
mov
sub
cmp
fldl
lret
rcrb
mov
faddl
aad
es
ret
sub
mov
or
cmpsl
fidivrl
stos
pop
mov
stos
mov
dec
mov
mov
mov
lea
call
jmp
cld
sub
iret
shl
fbstp
lret
rcl
and
enter
cmpsl
dec
pusha
inc
lods
je
cld
loop
scas
sbb
jecxz
pop
jecxz
dec
test
sub
mov
leave
and
and
flds
push
outsl
xor
lcall
xchg
jb
std
cmpsl
movsl
fwait
scas
mov
outsl
inc
dec
mov
popa
mov
dec
clc
call
movsbl
movl
lea
lea
mov
movl
movb
pushf
pushl
popl
pushf
mov
movw
push
pushl
ret
mov
testb
jge
cld
push
sbb
call
sarb
into
lret
pop
or
pop
inc
subl
in
icebp
mov
add
icebp
bound
mov
mov
pop
mov
and
lds
mov
insl
fildll
jae
xchg
sbb
aas
lods
push
lea
ja
bt
call
or
inc
or
xchg
inc
inc
inc
scas
mov
je
xchg
test
jae
dec
fdivl
into
rorl
cmpsl
sub
sbb
sbb
aaa
dec
xor
movsl
addb
out
push
sbb
sbb
lret
ds
or
mov
push
imul
rcl
ret
aad
and
pop
jmp
cmp
pop
jmp
out
sbb
adc
sub
int3
mov
std
lods
push
mov
dec
mov
mov
sbbb
cs
pushf
bt
ror
pushl
not
setnp
pusha
inc
pushf
stos
lea
jp
mov
pushf
mov
pushf
lea
call
pushf
pushf
call
mov
lea
je
test
cmc
sub
pushf
jmp
pop
pop
dec
dec
mov
adc
mov
mov
js
xchg
popa
jl
in
mov
mov
pusha
jl
push
mov
adc
sub
mov
enter
push
or
mov
scas
dec
push
dec
lret
sub
push
mov
dec
push
ret
pop
das
stos
test
xor
aad
stos
hlt
test
icebp
data16
or
xchg
imul
inc
inc
push
mov
call
pusha
pusha
mov
mov
jmp
jmp
lea
ret
mov
pushf
pushf
pusha
push
lea
jmp
pusha
cmp
mov
mov
pusha
lea
jae
clc
jmp
insl
push
test
adc
lea
in
cld
or
cli
call
sbb
jecxz
add
push
cmp
dec
bound
cmpsb
cmp
push
add
inc
filds
push
adc
inc
shlb
ja
push
mov
jae
pop
outsl
push
push
mov
arpl
push
mov
daa
fs
lcall
movsb
xchg
xchg
xchg
xchg
stos
out
push
vmovsd
cmc
data16
xor
add
cmpsl
jecxz
push
mov
jge
in
dec
je
fisubl
pop
mov
mov
das
std
loope
push
out
shlb
out
sbb
aas
shll
xor
les
jg
pop
dec
pop
inc
adc
sub
rcr
jbe
fs
mov
mov
and
xchg
push
or
bnd
cltd
imul
fdivl
and
fbld
pop
mov
mov
mov
inc
stos
cmpl
xor
dec
jb
mov
pop
test
dec
inc
or
shll
or
inc
mov
ja
pop
mov
push
mov
nop
out
mov
xor
add
jge
inc
or
andb
dec
adc
add
addl
ret
jo
std
lret
fdivrl
lcall
sub
xchg
nop
cmc
mov
stc
clc
or
pop
in
or
in
xor
insl
jae
fwait
in
int3
xor
xor
aam
sbb
mov
jae
enter
cmp
mov
sbb
push
dec
stc
arpl
insl
cli
cld
loopne
test
enter
loope
nop
int3
mov
jmp
nop
cwtl
cwtl
mov
cwtl
sbb
std
roll
dec
dec
mov
sbb
push
ds
out
adc
push
repnz
mov
dec
fwait
mov
addr16
insl
xorl
mov
lret
fcom
test
push
or
inc
scas
inc
push
mov
mov
outsb
and
inc
mov
adc
push
dec
les
jnp
in
cmp
int3
rorb
jle
mov
js
mov
dec
push
inc
lea
setg
call
cmc
imul
call
pushf
movl
jmp
es
ror
inc
test
adcb
or
daa
and
sbb
aad
cmp
stos
test
clc
cmc
in
int
sub
add
cmp
rcl
outsb
insb
jno
dec
dec
mov
in
inc
popf
pop
xor
sbb
xchg
repz
push
xchg
addl
push
push
push
insl
xchg
outsb
ds
xchg
sbb
xlat
mov
sti
or
cmp
jnp
xchg
or
adc
cmp
in
sti
out
cli
out
in
and
jno
inc
clc
outsl
cltd
imul
loopne
loopne
out
or
insb
sti
stc
repz
xor
xorb
mov
mov
add
fbstp
daa
push
mov
hlt
rol
mov
das
sub
xlat
mov
pop
into
repnz
arpl
cmp
mov
sahf
je
push
mov
pop
sub
pushl
sbb
dec
fst
push
and
or
jmp
outsl
addr16
jo
stc
imul
xor
fucomi
xchg
fists
movsl
cmp
dec
insb
pusha
nop
mov
popf
push
cld
inc
dec
popa
jae
or
pop
stos
inc
inc
mov
cmpsl
cmpl
sub
push
add
mov
repz
ret
jno
aam
loope
pop
jbe
push
adc
subl
loop
hlt
fldt
shll
sub
std
in
fstp
stc
in
adc
cmc
std
push
mov
fsub
in
cmp
xor
xor
mov
test
scas
mov
fdivp
push
xor
enter
mov
popa
lcall
hlt
shl
divl
jno
cmpsb
test
push
sub
dec
addb
mov
sahf
popa
xchg
lret
and
mov
xchg
movsl
mov
add
xchg
cltd
xchg
test
arpl
das
decb
push
or
sbb
insb
pushf
fmul
mov
flds
jbe,pn
icebp
jbe,pn
faddp
hlt
and
jns
inc
jae
ja
push
lods
mov
dec
pop
mov
or
or
imulb
bound
scas
sbb
rol
int
push
mov
lods
lock
and
jno
aad
cmp
mov
jbe
and
inc
xlat
iret
jle
gs
sub
loope
pop
jb
or
test
lea
insb
adc
push
adc
insb
add
mov
xchg
add
or
and
jle
loop
and
shrl
cmp
dec
test
nop
push
push
xchg
mov
enter
jmp
adc
cld
dec
lods
cltd
cs
pop
ds
lret
aad
lock
arpl
add
orb
shl
xchg
inc
loope
lods
dec
out
xor
mov
xor
shl
dec
imul
sbb
pop
xor
push
jge
mov
imul
inc
icebp
call
nop
movl
or
mov
mov
arpl
add
into
mov
sti
add
les
sbb
jl
lods
aaa
sub
das
and
pop
arpl
mov
sbb
add
add
add
not
bt
rcl
mov
mov
pushf
lea
jo
test
pusha
call
mov
push
lea
jae
push
call
inc
movw
pushf
jmp
call
aas
jl
nop
mov
add
sbb
out
jecxz
add
pop
xor
mov
mov
addl
jle
cmc
call
jmp
adc
repnz
ret
loop
es
mov
movl
movb
lea
jmp
push
test
pushl
cmp
pushf
pushf
jmp
xor
shr
shld
mov
pushf
shl
push
call
jmp
mov
lea
pusha
lea
call
call
cmp
pusha
lea
ja
mov
and
shl
sub
movsbw
call
xchg
shll
or
lods
int3
pop
pop
inc
dec
mov
insl
xchg
jns
xchg
jns
jp
lds
inc
pop
ret
mov
mov
mov
dec
lods
inc
sbb
cmp
ljmp
mov
loop
adc
or
xor
cmp
cld
adc
aaa
in
jo
ret
roll
fincstp
ljmp
orb
add
hlt
into
int3
jae
pushw
sbbb
jle
js
mov
in
sbb
loopne
stos
inc
aad
les
pop
lds
push
je
mov
adc
in
mov
aam
icebp
stos
mov
repnz
aam
popa
in
loopne
inc
fnsave
insb
jae
pop
adc
adc
jle
jnp
and
mov
mov
mov
sbb
mov
push
pop
outsb
sbbb
push
or
js
push
mov
call
icebp
outsl
mov
adcl
cld
fcmovu
and
and
mov
push
sbb
mov
lods
xor
or
aas
xchg
or
lahf
jbe
xchg
jae
jae
lea
mov
pop
pop
mov
loopne
gs
leave
or
sub
outsl
inc
mov
push
sbb
mov
pushf
lea
jae
call
adc
lea
pusha
mov
jmp
mov
sub
push
cs
xor
fnstenv
sub
sbb
add
rol
rorb
loope
dec
insb
xchg
imulb
dec
adcb
pop
jnp
jne
xchg
mov
out
rcrl
jl
fimull
cmpsl
dec
mov
jnp
js
jecxz
cld
lods
pop
xor
insl
lods
mov
fmul
jo
outsl
sub
push
pop
fcomp
ljmp
cmp
push
mov
out
shrb
out
cmc
lds
sub
ffreep
shrb
fstp
dec
dec
dec
xchg
cmp
popf
int
and
jo
or
sub
adc
push
mov
str
jmp
jmp
je
xor
mov
pushf
add
sub
sub
shl
shr
pop
or
cmp
mov
inc
add
inc
or
sbb
xor
add
push
adc
mov
bt
clc
call
mov
pushf
call
pusha
call
pusha
movl
mov
pushf
movl
pushl
mov
pusha
lea
jmp
add
xor
sbb
add
add
add
add
add
sbb
add
ljmp
add
push
ljmp
add
mov
xchg
imul
loop
inc
repz
xchg
sbb
push
enter
mov
pop
mov
xchg
addr16
sub
fsts
pop
xlat
insl
xchg
or
lret
fcmovnu
sub
hlt
lods
rcll
leave
arpl
add
push
in
lock
cmp
fdivrs
js
pop
comiss
dec
subb
imulb
jno
aam
imul
pop
jp
fxch
sbb
in
push
in
dec
ss
and
fstl
and
lcall
xor
mov
movb
push
cld
lret
add
jmp
mov
push
dec
push
clc
imul
sti
or
inc
leave
imul
mov
jns
hlt
jl
xchg
fcomip
aam
push
fbld
shrl
fsubr
sbb
daa
popa
sahf
cmpsb
jg
xchg
fprem
icebp
stc
sub
je
or
enter
push
movsl
jecxz
dec
add
pop
or
pop
cwtl
xchg
jno
jecxz
push
or
sbbl
push
in
rclb
pop
pushf
adc
imul
push
and
jg
fidivrl
fwait
loopne
mov
scas
aas
ret
xchg
pop
mov
imull
dec
insb
xchg
mov
scas
rcrl
fisttpl
fwait
into
xchg
call
inc
mov
mov
gs
testl
aas
cs
dec
jp
and
pop
in
loop
jp
scas
lods
inc
xor
cmp
inc
jnp
loop
flds
adc
mov
loop
rcrl
and
push
xchg
or
push
ss
push
jp
push
adc
arpl
in
clc
aaa
mov
outsb
and
je
pop
adc
mov
divl
aad
lret
clts
aad
jne
cld
mov
lods
xor
push
mov
fadd
pop
pushf
loopne
outsl
cmp
xchg
in
arpl
xchg
subb
cmp
push
icebp
push
adc
inc
fistpl
dec
xlat
push
pusha
icebp
cmp
jmp
les
xor
inc
mov
out
jl
test
std
jge
call
scas
push
jle
mov
dec
out
outsl
scas
or
out
push
leave
loope
icebp
incb
int
repnz
lods
sub
inc
popa
pop
daa
dec
fwait
cmp
xor
js
fsubrl
adc
imul
fists
dec
cmc
pop
fimuls
test
mov
clc
pop
fnstsw
xor
dec
sub
and
popa
cmp
pop
or
push
xor
sbb
std
out
mov
lods
je
lcall
add
sahf
jl
aad
sub
test
std
in
jo
cs
ja
inc
jg
data16
dec
adc
or
in
insl
and
cmp
ficoml
test
sahf
stos
inc
fisubl
mov
sahf
sbb
popa
ficoms
push
inc
cltd
iret
push
mov
call
inc
test
mov
xchg
jns
loop
ds
sub
outsl
loope
add
lahf
inc
jp
and
loope
bound
aaa
jbe
movsl
in
mov
inc
mov
push
xchg
dec
lods
mov
pushf
je
fsubs
push
dec
adc
andb
dec
inc
jb
in
sub
xor
pop
cmp
iret
mov
outsl
movsl
iret
insb
fsts
cmp
stos
bound
leave
cmp
call
mov
imul
push
xchg
pop
in
insl
and
cs
mov
daa
fiaddl
fstps
lcall
int
rorb
cmp
les
scas
adc
and
ja
enter
mov
test
call
fmull
mov
cltd
das
jg
mov
sbb
sbb
and
sbb
js
xor
nop
xor
cmp
lds
and
sub
clc
push
jo
fwait
jp
dec
rcrb
push
push
int3
sub
xchg
orl
int
aad
jo
mov
mov
repz
inc
mov
icebp
xchg
xor
push
push
test
mov
cltd
mov
fs
push
push
pop
shl
hlt
call
xchg
sub
dec
adcb
fmull
ss
and
rolb
xchg
outsl
push
icebp
into
test
andl
lock
dec
or
pop
int3
scas
dec
repnz
aas
xchg
popa
clc
sahf
loope
inc
daa
mov
cmp
mov
push
pop
and
loopne
test
and
cs
shl
push
add
inc
adc
bsr
ljmp
jo
mov
aad
out
test
mov
test
xchg
lods
mov
lods
mov
jbe
jp
cmpsb
lret
aam
fwait
ds
xor
fsub
dec
sub
imul
cmc
mov
hlt
rol
lods
inc
or
cmp
xchg
sub
std
xchg
test
mov
pop
mov
xchg
add
shl
loop
dec
push
arpl
mov
out
pop
xchg
cwtl
and
push
fistpl
mov
fadd
sbb
fsubrs
push
mov
lods
sub
out
sub
dec
mov
daa
add
pop
jns
xchg
icebp
pop
lods
sarl
in
outsb
aam
sub
pop
sbb
mov
and
pop
adc
test
cmp
mov
cli
fdivl
push
mov
inc
adc
and
imul
mov
imul
sub
int
ja
mov
loope
test
stos
rcrb
and
mov
cs
adc
or
dec
dec
or
inc
inc
stos
sbb
mov
lods
hlt
pop
push
outsb
jbe
dec
ljmp
xacquire
fdivrl
and
les
loopne
sub
out
jb
out
cmpsl
outsl
mov
jno
fsub
xchg
or
test
mov
scas
sbb
xchg
fistps
xchg
push
sbb
cltd
mov
setle
sbb
jnp
test
pop
or
addl
xchg
mov
imul
ljmp
aas
jmp
cld
inc
movsb
cmp
jge
or
sbb
inc
and
mov
mov
orb
jp
insl
cmp
mov
inc
js
adc
mov
adc
ret
dec
lcall
xor
fwait
jbe
fdivrl
sbb
dec
test
arpl
out
jne
pushf
cmp
call
shll
sarl
lahf
roll
jg
dec
sti
xchg
inc
sbb
adc
sub
sbb
fdivrp
jp
sbb
jp
dec
sub
inc
mov
jg
sub
arpl
stos
push
icebp
fistps
leave
ljmp
add
jle
pop
mov
sub
jns
inc
adc
adcb
mov
inc
imul
dec
mov
je
or
adc
adc
repnz
xchg
mov
in
or
lahf
sbb
push
mov
lcall
rol
imul
dec
roll
out
xchg
call
lahf
fldl
fidivs
pop
pushl
les
movsl
stos
xchg
sbb
and
push
add
bsf
jns
rcll
and
outsb
es
xchg
lcall
sbbl
cmp
js
loop
fs
fsubs
push
addps
xchg
jl
mov
lcall
or
add
push
xchg
into
push
mov
cmp
loope
mov
stos
push
mov
pusha
xor
fs
cmpb
adc
fs
cmpsb
imul
loop
fisttps
inc
sub
shrb
gs
mov
fisubl
sub
jmp
int3
pushf
cmpsb
out
lahf
xor
xor
add
mov
xchg
and
nop
xchg
xor
mov
cmp
scas
pop
aam
jno
lods
mov
jns
stos
pushl
jle
dec
aam
jl
push
and
cmpsb
fiaddl
lds
enter
daa
jb
aad
movaps
sahf
outsl
ret
mov
movsb
insb
enter
and
lahf
in
mulb
inc
or
add
mov
mov
xchg
mov
daa
test
sahf
xchg
shll
imul
ror
out
insb
mov
xor
rcl
cmp
add
or
inc
pop
stc
aad
pop
mov
mov
or
jg
pop
rcl
and
adc
clc
aaa
stos
xlat
int3
mov
and
loop
es
ret
imul
aaa
out
enter
dec
sahf
dec
int
jmp
pop
divb
and
jle
loop
sub
jbe
push
or
jae
filds
or
push
sbb
or
xchg
addb
mov
daa
out
pop
pop
pop
hlt
pop
xchg
adc
daa
mov
dec
mov
ffree
add
jne
int
jnp
mov
mov
repz
cld
push
sbb
dec
mov
xchg
lcall
lcall
in
jb
sub
or
mov
in
sbb
sub
int
test
push
inc
ja
popf
adc
mov
pop
mov
sbb
int
pop
mov
cmp
adc
stc
imul
and
mov
ss
inc
arpl
add
sbb
push
mov
in
ljmp
ret
or
shrb
xchg
cmp
pushl
cmpsl
push
int3
and
fs
movsl
dec
divb
bound
pop
test
mov
pop
mov
xchg
jb
stc
hlt
dec
movb
bound
clc
lret
push
jp
shrl
xlat
jbe
or
sub
mov
test
loope
and
popa
mov
loope
pop
xchg
push
gs
repz
mov
and
ret
into
lock
push
stos
stc
sbb
or
cmp
or
xor
loope
cwtl
in
lock
mov
aas
push
add
xchg
sbb
mov
sarb
sub
push
push
daa
adc
mov
push
les
loope
sahf
adc
insb
xchg
pop
loop
loopne
and
stos
popa
cmp
adc
cmp
xchg
cltd
pop
inc
ss
xor
and
lret
push
loope
cwtl
adc
lock
ljmp
int
sbb
dec
sbb
popa
push
sub
mov
ret
inc
lcallw
mov
push
lret
sub
or
xchg
shlb
fdiv
aas
fsin
push
mov
sub
xor
enter
enter
or
test
or
shlb
add
call
stos
cmp
xchg
and
adc
testb
pop
inc
pusha
inc
jge
or
inc
into
push
nop
mov
popa
mov
xchg
pushf
andl
mov
movsb
pushf
xor
int3
iret
loope
pop
call
fdivp
pusha
xchg
pop
cmp
jecxz
sti
mov
insb
jb
popf
mov
jmp
sbb
and
stc
jmp
call
jns
sbb
ja
insb
push
stc
jmp
sbb
jne
rcr
push
mov
push
dec
mov
repz
jmp
sub
push
imul
sbb
dec
pop
dec
mov
lcall
sub
out
lock
add
cmp
add
pop
push
out
or
aad
pop
mov
and
push
jbe
ss
and
xor
clc
lock
cld
pop
mov
push
sbb
adc
in
nop
lcall
lret
or
jl
pop
pop
sarb
xchg
aaa
cmp
movsl
fadds
fdivrl
lock
rcl
ret
push
mov
push
cld
mul
jmp
jmp
dec
dec
pop
aam
js
push
push
mov
push
mov
mov
lea
call
cmp
cmp
pusha
pushf
pusha
lea
jae
clc
bt
jmp
movzbw
movsbl
movzwl
bswap
pushf
pop
lea
lea
jmp
rcrl
lcall
adc
push
sbb
in
or
loop
in
fwait
cmp
inc
jnp
xor
fcmovu
repnz
dec
mov
xchg
xchg
nop
mov
in
ljmp
xchg
loope
lcall
push
roll
xor
cmpsb
xor
outsl
into
xor
xor
shll
imul
and
sbb
aas
and
imul
mov
jae
fwait
xchg
xchg
jae
push
mov
push
and
int3
ds
or
outsb
subb
test
pop
inc
data16
jne
lcall
fdivl
out
repnz
xor
stc
and
sub
pop
in
push
in
mov
cmp
das
lret
aas
pop
out
jmp
out
jmp
sub
add
das
test
decl
xchg
mov
pop
je
cs
cmpsb
xor
fcmovnu
out
loope
loop
sbb
mov
xchg
cmp
fs
imul
stos
inc
stos
movsb
push
mov
pop
cmp
mov
xchg
sbb
std
or
mul
repz
jmp
out
mov
adc
or
fimuls
dec
clc
jae
sbb
pop
sbb
fcmovnu
add
cmp
int
data16
fiadds
jmp
xor
shrb
and
xor
jmp
push
mov
lds
dec
pop
push
mov
out
mov
push
mov
mov
mov
push
xchg
cmp
jns
pop
bound
mov
mov
pop
mov
xor
call
add
lea
jne
pusha
push
pushf
stos
pushf
movw
pushl
mov
lea
jmp
inc
push
inc
call
lea
call
pushf
pushf
pushf
pushf
lea
jmp
jmp
clc
cmp
xor
call
arpl
mov
clc
adc
mov
pop
pop
cmpsl
scas
cmpsl
stc
out
repnz
out
mov
sub
mov
inc
into
pushf
int3
or
lea
cmp
xor
mov
fistps
ret
pop
out
and
xor
dec
cmp
inc
xchg
cwtl
xchg
adc
test
loop
mov
sti
jmp
je
dec
imul
rorl
push
mov
rep
bswap
not
call
lea
jae
cmc
stc
stc
cmc
sub
call
cmp
or
pusha
lea
jne
mov
lea
mov
cmp
pushf
or
pushf
mov
pusha
mov
lea
je
jmp
pusha
pushf
mov
movl
pusha
movb
movl
mov
lea
jmp
lea
call
jmp
sahf
mov
push
frndint
sbb
xchg
xchg
jge
popa
jae
ja
arpl
fwait
test
pusha
xchg
insb
rolb
push
rclb
mov
ds
adc
adc
pusha
jl
push
add
pop
std
andb
pushf
inc
dec
mov
test
cmpsl
dec
cltd
add
xlat
inc
jmp
add
or
adc
mov
adcl
xchg
xchg
mov
insb
xchg
stos
cmp
pop
mov
lds
ds
fcmovb
aam
mov
in
push
mov
adc
mov
mov
loop
adc
rcrl
pop
add
adc
xor
push
test
test
mov
dec
mov
mov
shll
in
in
adc
ljmp
lret
sub
adc
les
jg
mov
into
xchg
mov
rcrb
mov
jmp
pop
jp
or
adc
cmp
xlat
push
adc
call
mov
xor
aam
shlb
sub
xor
dec
mov
and
jae
popf
xchg
fwait
imul
inc
addr16
jns
jle
mov
out
loopne
xor
lods
dec
fldenv
cmp
cmp
mov
xchg
aaa
pop
mov
pusha
movl
push
movl
pushf
lea
jmp
lea
call
jno
push
lea
jb
pushf
pushl
ret
add
sub
enter
mov
dec
dec
mov
cltd
mov
xchg
enter
or
mov
dec
pushf
pop
sbb
or
out
mov
mov
jae
ficoms
or
or
out
test
xor
pop
pop
or
cli
out
imull
jns
jge
cmp
out
add
out
sbb
cmc
test
dec
mov
xchg
daa
fsubrs
outsb
adcl
int
and
insb
push
inc
int
sbb
cmc
aas
fldt
into
sbb
daa
xor
jbe
push
or
popa
xor
aam
ror
int3
lret
popf
mov
mov
or
pop
adc
jecxz
dec
xchg
rolb
dec
mov
fwait
ret
jge
pop
xor
adcb
xchg
sbb
inc
insl
inc
push
jbe
add
pop
call
mov
mov
cmp
daa
cmp
mov
push
xchg
movsb
scas
mov
xor
addr16
adc
mov
iret
cmp
stos
xchg
leave
cltd
inc
js
and
xor
jmp
push
jl
iret
inc
jecxz
bound
and
insl
push
push
and
sub
inc
stos
mov
push
dec
push
pop
repz
in
shll
xor
sub
inc
or
cmp
add
cmpsl
inc
xchg
aas
add
cmc
in
push
mov
pushf
movl
jae
push
pushf
push
lea
jmp
cs
jae
movsl
sti
or
and
xor
rcl
ds
sbb
lret
das
push
lds
movsb
mov
orb
push
pop
imul
xor
icebp
cmp
jae
cmp
stos
adc
cmp
and
test
and
hlt
adc
sbb
call
cmp
repnz
add
xchg
in
lea
pop
into
fsubrl
xor
sub
aam
cmp
mov
out
test
inc
rcl
mov
xchg
mov
popa
jnp
pop
push
ret
rol
jecxz
out
adc
call
pop
in
push
mov
call
push
not
pushl
popl
pushf
lahf
mov
setno
pushf
movsbw
movl
jmp
adc
xchg
nop
cmpsl
lcall
push
sub
cmp
and
enter
add
dec
dec
lahf
jge
xor
cli
xchg
sqrtps
or
jbe
in
mov
xchg
mov
mov
or
pop
cmp
push
xchg
lock
add
outsb
pop
xchg
jbe
icebp
add
adc
lock
xchg
ds
xchg
cmc
adc
mov
and
mov
divl
int
jmp
adc
sbb
js
sbb
xchg
cmp
mov
test
insl
dec
mov
rcll
pop
add
icebp
mov
push
movsb
xchg
adc
inc
shrb
or
sbb
adc
or
add
cld
add
decl
adc
jo
cld
movsl
inc
bound
and
shl
fbstp
rcl
cmc
add
xlat
jecxz
out
add
pop
or
insb
out
loopne
push
popf
adcl
mov
push
es
cwtl
jp
mov
test
scas
sbb
popf
sub
stos
and
das
xchg
jbe
sbb
adc
cmp
fbld
std
stos
inc
mov
lret
jp
bound
nop
sarb
aas
and
es
into
repnz
cmc
ror
aaa
in
lock
adc
jae
shld
push
dec
push
pop
inc
stos
push
mov
mov
pushf
pushl
ret
jmp
movl
call
movw
lea
jne
add
pusha
sub
aaa
lea
sbb
aaa
mov
pushf
add
bt
mov
mov
push
test
mov
lea
je
clc
cmc
sub
pushf
cmp
jmp
cmp
cmp
call
mov
push
iret
cmp
das
mov
mov
insb
sahf
nop
pushf
sahf
cmp
mov
pop
jbe
out
bound
or
and
ja
or
dec
mov
dec
dec
mov
push
idivb
imul
cmc
int
mov
inc
insl
lahf
and
fbstp
lcall
cmp
sbb
icebp
jmp
xor
and
int3
sbb
test
enter
xorl
cmp
roll
shrb
adc
or
add
std
fcmovne
rol
out
sbb
incl
adc
sub
pusha
fdivl
mov
inc
push
iret
sub
int
fwait
adc
or
cld
and
xchg
inc
ja
insb
shlb
sub
sarb
test
ljmp
shrb
les
add
push
call
out
sbb
fsub
in
mov
stos
in
into
int3
pop
fldl
fwait
adc
pop
push
in
sbb
mov
mov
cltd
jno
mov
push
pop
push
fcomps
sti
aas
popa
jnp
popf
popf
xor
notb
leave
insb
mov
xchg
lret
inc
insb
cwtl
cwtl
mov
in
icebp
outsb
sbb
stos
out
jl
xchg
cmp
mov
movsl
inc
dec
xlat
sub
cmp
inc
adc
or
cmp
mov
lods
dec
push
inc
mov
cli
push
mov
mov
mov
push
or
mov
arpl
scas
decl
dec
inc
and
insb
and
xor
xor
popf
jae
lcall
lods
fnsave
push
inc
out
pop
stos
ret
pop
push
sub
pushf
cmc
jne
popa
sub
and
sub
xchg
pop
jl
test
cmp
mov
adcl
xchg
cmp
xchg
sub
sub
adc
clc
js
sub
push
mov
jmp
test
lods
imul
or
dec
push
mov
stos
lea
fwait
mov
pop
sarl
mulb
sahf
pop
ss
pop
push
dec
pop
push
pop
cmpsl
scas
scas
pop
fcompl
das
pop
jb
movsl
push
divb
jle
xchg
cmp
xchg
mov
push
mov
mov
add
cmp
sbb
jp
xchg
fwait
xor
ret
pushf
jne
fs
sbb
mov
dec
cmp
rcrl
or
nop
pop
jmp
push
adc
shll
popa
sahf
xchg
test
ds
call
incl
and
or
add
pushf
lea
call
mov
xchg
pop
jmp
gs
add
in
decb
fcom
sub
and
fnsave
push
inc
jbe
ret
jp
push
mov
aad
mov
nop
pop
push
push
pop
mov
div
ljmp
push
push
push
add
mov
mov
push
lea
jne
rcr
movsbw
or
pusha
mov
pusha
cmc
add
clc
stc
pushf
movzwl
sub
rcr
bts
bsr
mov
jmp
pusha
movb
mov
movzbw
jg
movsbl
pop
pushf
movw
pushl
ret
pusha
movw
lea
jae
push
pusha
pushf
pushf
lea
jmp
call
mov
lea
call
pusha
push
mov
pushf
pusha
lea
jmp
movl
lea
je
pusha
sub
movb
mov
mov
cmp
push
call
call
jmp
jmp
push
call
pop
sub
jecxz
loopne
insl
mov
sbb
lock
into
in
add
lret
shll
sub
dec
adc
and
cs
je
cmp
sahf
mov
or
mov
leave
xchg
lret
outsl
adc
push
xchg
jmp
jo
bound
lret
mov
xchg
inc
ss
push
push
pop
and
xchg
push
insl
inc
mov
sub
push
mov
pusha
lea
je
xchg
lea
bswap
call
pusha
call
mov
bts
neg
mov
pusha
bt
cmp
movb
pushf
lea
jbe
rcl
neg
stc
shrd
mov
test
lea
sbb
sar
add
shr
shld
mov
test
pusha
not
push
add
mov
rcr
shl
rcl
movl
cmp
shl
cmp
sub
mov
add
jmp
pushf
add
shl
lea
rcr
shr
sbb
shr
bts
xor
mov
bsf
bts
btc
add
pushf
pusha
pop
pushf
mov
lea
pushf
call
clc
imul
cmc
stc
bt
add
push
movb
lea
jmp
call
jmp
lea
jae
push
pusha
call
outsl
push
dec
inc
dec
jg
mov
xor
ljmp
rcr
aam
iret
pop
imul
out
imul
js
shr
hlt
imul
adc
lcall
fs
push
mov
jmp
xchg
cmpl
daa
cmp
rdpmc
add
jecxz
out
sbb
mov
into
lock
push
or
out
gs
xor
repz
fildll
and
inc
inc
pop
lret
icebp
out
dec
or
shlb
sub
aam
fdivr
cld
adc
out
dec
push
mov
in
mov
icebp
push
shlb
and
sub
inc
push
ss
jmp
mov
iret
cmp
lret
ret
mov
ret
daa
aaa
add
repz
adc
push
mov
pushf
pushl
pusha
call
loope
test
pop
es
xor
ja
imul
mov
mov
mov
mov
shlb
sbb
push
add
lods
mov
jle
pop
popa
loopne
add
xor
cwtl
repnz
movsb
mov
or
and
xchg
nop
cli
sahf
fwait
xor
cmp
sub
sub
cmp
xchg
xchg
lahf
data16
subb
nop
push
jnp
push
js
sbb
mov
sbb
mov
pop
fcmovu
arpl
push
jnp
inc
pop
rcr
xor
pushf
jp
adcb
push
mov
leave
ffreep
and
xchg
jge
mov
pop
xchg
stos
cmp
movsl
mov
jmp
xor
movsb
xchg
xchg
iret
jb
popf
fdivs
movsl
cmpsl
mov
inc
enter
mov
scas
inc
inc
inc
push
stos
xchg
mov
xchg
jmp
leave
inc
pop
scas
pop
inc
push
stos
movsb
andb
xchg
stos
fucom
cmp
mov
pop
inc
loope
sub
add
enter
cs
loope
jmp
mov
push
aas
cmp
test
xorl
movsl
fdivrl
and
lock
clc
call
push
mov
jne
mov
stos
add
adc
or
negb
push
sbb
cld
bnd
stos
loop
cli
xor
nop
adc
imul
in
out
jecxz
add
jle
pop
inc
push
mov
jge
stos
jg
incl
xchg
cmc
inc
mov
rcr
xor
hlt
call
jmp
inc
jp
push
push
mov
test
xlat
dec
pop
inc
popa
dec
sbb
enter
hlt
or
sub
insb
jb
xchg
js
push
pop
test
push
jb
push
outsb
dec
jne
cmp
xchg
add
jmp
jmp
jp
insl
fs
lahf
xchg
mov
test
adc
mov
and
fcompl
ror
jmp
cmp
mov
push
pop
mov
int
mov
jno
sti
in
dec
or
cmp
and
out
out
push
add
loop
xor
inc
jo
sbb
enter
and
pushf
lea
jae
inc
stc
pushf
stc
call
movb
push
lea
jne
inc
shr
btc
shl
mov
shl
sub
test
rcr
mov
clc
call
sahf
mov
adcb
dec
or
aaa
xor
cltd
jb
loope
cs
decl
iret
add
pop
push
lds
jle,pn
shl
std
jmp
push
jge
arpl
jg
cmp
movl
fidivrs
fwait
mov
es
xor
pop
dec
inc
insb
push
xor
xorl
add
adc
aas
xor
and
sti
ret
test
or
decb
clc
and
mov
xchg
orl
inc
cltd
imulb
rorb
add
add
roll
xor
cli
add
and
iret
and
int
leave
iret
in
outsl
xor
aam
stos
jecxz
cltd
xchg
push
sbb
add
xchg
and
daa
fstl
icebp
scas
scas
xchg
popa
mov
pusha
loope
add
add
fcmovu
xor
adc
add
sbb
jge
and
cmp
xor
jp
add
fdivrl
xor
outsl
add
test
sub
push
sbb
sub
fincstp
sbb
and
dec
adc
sbb
int3
fsubr
in
loopne
mov
insl
push
mov
les
insb
sti
std
pop
add
sbb
sub
shll
push
mov
arpl
test
imul
std
fstps
xor
out
mov
jae
sbb
stos
inc
fs
or
addr16
xor
test
push
ror
addr16
ljmp
lods
into
pop
inc
sbbb
jae
lret
daa
aaa
add
and
and
int3
std
cmp
bound
inc
aad
std
dec
push
js
je
mov
inc
push
lods
ds
pusha
pusha
mov
lea
call
jmp
call
movl
pushf
pushf
pushl
lea
jmp
bt
pushf
or
pusha
lea
jne
cmp
bswap
neg
mov
clc
push
or
jmp
lea
je
pushf
push
test
add
pushl
pushf
mov
lea
jmp
pop
cmp
sbb
adcb
fisttpll
mov
mov
mov
mov
enter
adc
pop
data16
inc
and
cmpb
and
dec
mov
add
insb
dec
xchg
sub
cmp
xchg
or
test
jecxz
hlt
sahf
mov
sub
repz
out
mov
xchg
fistpll
shr
cli
mov
pop
lret
push
jg
push
push
scas
scas
test
mov
decb
mov
pop
pop
movsb
push
test
test
mov
inc
push
push
mov
mov
shlb
mov
push
inc
mov
jne
rorb
aas
pop
iret
aas
iret
repz
cmp
lds
in
aas
sbb
xchg
loop
cmp
cmp
ret
stos
decl
or
out
push
mov
mov
rclb
icebp
or
out
testl
std
dec
pop
sbb
jle
xor
and
insb
mul
sbb
add
sub
into
aam
test
std
lods
and
sub
sub
or
inc
push
mov
push
stc
int
ja
mov
ret
pop
inc
mov
adc
sub
dec
push
dec
inc
loopne
mov
clc
pop
mov
xchg
test
cmp
mov
xchg
imul
in
mov
add
inc
pop
loopne
or
hlt
add
mov
inc
mov
call
movl
push
pushf
movl
movb
lea
jmp
movsbw
movb
jmp
push
psraw
icebp
sti
cmc
or
sub
aaa
sub
mov
xor
ds
bound
push
cmp
ret
adc
cltd
data16
cmp
mov
push
mov
jno
pop
mov
or
int3
ljmp
adc
clc
loop
clc
push
testl
sbb
add
subl
addl
push
and
xchg
ljmp
sbbb
cltd
mov
inc
lods
xchg
test
dec
sbbb
inc
pushf
push
pushf
movw
lea
call
clc
call
pushf
pushf
inc
mov
pusha
pushf
mov
stos
jmp
push
pushf
movl
mov
lea
jmp
push
call
setp
pop
pusha
lea
pusha
mov
movzbw
movsbw
mov
lea
push
not
movsbl
mov
mov
mov
movw
mov
pushl
ret
stc
jmp
cld
inc
push
mov
mov
pop
inc
stos
movsb
mov
pop
pop
pop
push
jl
inc
pop
mov
aam
insl
shlb
inc
hlt
inc
inc
inc
imul
sar
into
loopne
aas
inc
outsl
es
push
stos
mov
insb
cwtl
imulb
and
ret
fistpl
sbb
out
sbb
pop
and
adc
add
or
sbb
add
pop
sub
rcll
rolb
daa
cmp
test
mov
pop
push
mov
lret
mov
inc
lods
repnz
ret
cld
imul
add
jo
les
xor
cs
fdivr
call
mov
mov
jmp
jo
cld
in
adc
cmp
in
in
or
push
pop
std
loopne
ret
push
fnstenv
rolb
shr
jl
jg
jnp
mov
loop
pushf
jmp
scas
xchg
xchg
cltd
popa
or
jl
test
inc
bound
nop
outsb
dec
jne
mov
adc
inc
aad
fdivl
stc
in
dec
push
pop
sub
pop
dec
sbb
roll
add
mov
dec
mov
mov
jge
lea
mov
push
mov
pushf
pushf
sub
add
test
call
push
sbb
cli
clc
loope
lahf
push
dec
lods
cmp
sbb
les
xor
enter
ds
xchg
pop
into
xor
push
cld
iret
ds
les
sbb
ljmp
dec
or
mov
sbb
push
mov
mov
aaa
add
mov
push
pop
ja
in
mov
fcmovnb
fsubl
lds
adc
mov
push
je
nop
fs
sbb
test
stos
adc
sub
dec
sbb
fmulp
fcmove
sub
bnd
jb
sbb
adc
mov
sbb
maxps
adc
adc
fwait
jns
data16
bound
enter
test
add
les
sub
fdivr
fdivrs
or
cmp
pxor
mov
outsl
sub
mov
mov
pop
pop
pop
mov
push
mov
pushl
popl
cwtl
not
setp
pushf
mov
not
jmp
fs
mov
nop
xchg
lock
sub
add
cli
or
loopne
in
adc
adc
inc
xchg
inc
inc
pop
aad
cmpsl
add
mov
and
fmuls
pop
repz
sbb
cmc
dec
imul
xor
xor
aaa
add
or
mov
xor
add
cld
in
call
mov
jl
add
push
jmp
or
push
repnz
rcr
iret
leave
pop
cmc
pop
or
or
push
mov
daa
mulb
popf
pop
loop
std
in
jbe
imul
aad
xor
leave
rcr
int
in
int
push
mov
or
rol
and
mov
call
call
push
movl
jmp
cmp
pusha
cmp
pushf
movw
mov
lea
jae
clc
test
pusha
pushf
add
pusha
pushf
mov
mov
pushf
movb
lea
jmp
lahf
not
call
call
mov
sbb
insl
test
test
jecxz
out
leave
rclb
add
and
pmulhw
jmp
es
pop
push
xorb
mov
cmpsl
jnp
xor
add
pop
or
or
lcall
testb
cmp
add
cltd
stc
test
dec
cmp
mov
cmp
jmp
xlat
in
mov
into
adc
jmp
shlb
and
sbb
dec
sbb
dec
inc
pop
int
aas
std
in
or
cmc
popf
rcl
rcll
dec
ret
repz
pusha
mov
call
call
not
btc
push
shl
mov
or
mov
mov
btr
push
inc
push
sub
bt
movzbw
push
btc
shld
test
clc
push
cmp
shrd
push
xchg
mov
sbb
bt
mov
test
sub
mov
call
pusha
jmp
mov
inc
inc
dec
pop
jg
cmp
mov
dec
pop
js
sub
push
mov
xchg
xchg
stos
cli
jl
out
fxch
clc
loop
pusha
gs
pop
xchg
sbb
dec
pop
scas
call
push
jbe
xor
jecxz
xchg
daa
inc
rcr
mov
jle
push
stos
mov
fstl
cmpb
xor
fst
xlat
xor
shrl
call
mov
sub
repz
xor
jno
aaa
aad
aad
add
cmc
in
cltd
int
sti
mov
loopne
daa
pop
lret
xlat
lea
scas
xchg
mov
and
sub
and
jns
loop
out
mov
in
enter
movsb
dec
pop
add
lea
mov
mov
dec
mov
test
or
mov
outsb
std
insl
insl
pop
loop
dec
jmp
mov
lahf
jae
add
jmp
push
std
data16
insl
add
mov
pushf
movl
movb
push
lea
jmp
xor
xchg
scas
shlb
ror
sub
ret
shl
icebp
out
leave
test
jns
cmp
jp
ds
mov
or
repnz
inc
sbbl
or
addb
les
jecxz
test
xchg
aad
std
adc
jo
mov
nop
push
scas
fdivrs
pop
jmp
sti
add
in
or
clc
in
pop
xchg
mov
icebp
int3
or
jno
inc
push
test
inc
inc
push
mov
jmp
adc
pushf
pusha
lea
jae
pushf
push
movw
mov
lea
jne
pusha
jmp
push
lea
call
cmc
pusha
call
jmp
mov
pushf
mov
pushl
ret
test
jmp
push
pushl
lea
jne
call
lea
call
call
cmpsb
cwtl
lcall
insb
mov
cmc
or
rol
sub
xor
ds
into
add
pop
adc
inc
mov
fsubrs
insl
inc
jns
daa
sbb
ss
hlt
xor
test
repnz
dec
insl
jo
xchg
subl
push
add
push
xchg
mov
jb
xchg
adc
xlat
inc
nop
or
ret
in
adc
out
in
outsb
sbb
push
dec
fcomi
xchg
cmp
fs
jge
xchg
in
inc
dec
dec
inc
dec
push
mov
pushf
jmp
fnstsw
xor
xchg
fcmovnbe
xor
je
cmpb
push
fmul
xor
push
fstpl
mov
adc
adc
sbb
push
mov
lods
xchg
jae
stos
rol
or
fdivrl
add
aas
fidivrl
adc
hlt
loope
cmpb
lret
mov
outsb
xchg
stos
icebp
repnz
sub
add
lahf
sbb
lahf
xchg
xchg
inc
add
jmp
sub
adc
inc
and
adc
cld
xor
ss
or
inc
test
outsl
sti
or
add
lea
sbb
lock
test
xor
jecxz
fildl
enter
sub
inc
pop
sbb
lcallw
aas
or
push
pop
test
stos
xor
mov
sahf
mov
jle
jp
mov
xor
je
out
js
cwtl
jbe
xchg
add
cltd
pop
mov
rorb
xchg
shlb
adc
cld
dec
dec
stos
das
dec
shlb
repnz
adcb
pop
out
or
test
or
std
out
pop
mov
xor
andb
push
mov
cld
ret
xor
sbb
aad
pusha
jp
addb
cmpb
loope
fld
lds
ror
popf
data16
pop
cmpsb
sahf
stos
push
loopne
jmp
and
sub
mov
cltd
fwait
add
inc
dec
cmpxchg
sub
lahf
popa
sarl
arpl
sahf
bound
push
cli
cltd
enter
xchg
aaa
orl
or
in
jno
je
cwtl
subb
sub
ret
stc
xchg
push
into
and
sub
sub
adc
cmp
push
inc
pop
vmovdqu
inc
sbb
loopne
outsl
mov
test
sti
xchg
imul
fmuls
aam
mov
mov
lods
mov
or
or
lcall
repz
out
in
jecxz
pop
cmc
pmaddwd
lcall
xlat
push
pop
lds
pop
inc
pop
mov
add
or
and
test
scas
push
js
scas
push
push
jnp
xor
mov
aad
mov
dec
inc
dec
cld
mov
rcll
add
sub
pop
outsl
push
push
pop
cmpsb
push
mov
stos
out
iret
aas
fnstsw
inc
pop
movsb
movsb
mov
insb
nop
mov
and
aas
lods
mov
jno
stos
xchg
or
out
or
add
push
push
mov
ret
inc
mov
out
std
call
popf
push
in
mov
jno
dec
jne
adc
out
jmp
mov
push
mov
dec
lods
test
ds
data16
scas
dec
mov
inc
mov
mov
or
mov
add
test
mov
mov
mov
mov
jmp
movsbw
mov
pushf
cmpb
pusha
call
jno
sub
into
clc
push
adc
pop
mov
call
or
nopl
in
aas
es
mov
push
scas
std
fs
ds
int3
call
fs
fs
pop
cmc
loopne
sub
pop
or
shll
out
clc
sbb
mov
cmp
cli
loopne
test
xchg
iret
aaa
push
movsl
stc
sti
filds
push
cmp
out
mov
sahf
mov
push
psraw
dec
xor
ret
mov
xchg
jmp
mov
imul
or
std
jecxz
xor
imull
dec
scas
push
xor
movsb
mov
lahf
cmpsl
xchg
daa
pop
das
fildl
into
sub
xor
pop
test
and
fisubs
es
sub
cmp
push
mov
dec
cmc
add
incl
xor
sub
ret
cmp
sub
int3
xor
lea
cmp
mov
xchg
out
mov
lret
xor
and
cld
mov
xor
ret
sahf
loop
xor
cmp
into
movsb
mov
adc
jp
adc
rorb
idiv
or
add
call
ror
cmp
aam
xor
push
mov
adc
cwtl
jmp
fmuls
jae
popl
outsl
xchg
cmpsl
mov
mov
sbb
fmuls
fdivl
movlps
push
sub
gs
mov
add
jle
cmpb
scas
mov
dec
mov
scas
pop
push
mov
mov
jbe
push
repnz
cmpl
dec
dec
cmpsl
pop
aaa
jae
pop
add
cltd
shlb
pop
dec
mov
shrb
pusha
shlb
loop
push
rolb
jae
pop
mov
push
loopne
cli
xchg
mov
stos
sbb
jle
xor
or
scas
ud1
push
sahf
mov
fs
shrb
mov
lcall
mov
fs
outsb
sbb
loop
dec
push
jg
cmp
inc
jmp
repz
pop
out
jmp
out
push
mov
jmp
call
or
jmp
call
jne
gs
xor
fs
insb
add
je
add
cld
lea
push
pushl
ret
insl
cs
imulb
push
jecxz
or
cmp
xchg
imul
cmp
add
inc
pop
inc
out
jae
add
push
push
inc
or
icebp
add
fldcw
push
movsb
mov
mov
mov
jbe
jbe
in
inc
movsb
aas
sub
adc
add
call
in
push
mov
sbb
mov
lret
cmpsl
mov
popf
ja
xchg
addl
xor
outsb
bswap
pop
dec
push
mov
iret
lea
mov
mov
jmp
adc
dec
fsubrl
xor
jns
lds
mov
mov
inc
gs
cmp
outsb
aas
ror
mov
mov
call
jnp
mov
jnp
or
test
aas
aaa
out
decl
sub
jmp
iret
mov
popf
and
icebp
rep
testb
dec
sub
jl
mov
call
jmp
cs
hlt
mov
stos
mov
icebp
cmp
mov
dec
dec
js
pop
lods
mov
push
stos
int
jae
iret
std
in
push
dec
push
pop
push
cmp
bound
mov
je
sahf
mov
push
inc
mov
xchg
lahf
lea
int
add
mov
fs
lds
fcmovnu
ret
leave
pop
dec
mov
push
xchg
xchg
cmpsb
mov
out
lock
insl
add
adc
dec
push
sti
movsb
sbb
dec
mov
push
dec
jp
mov
jle
jae
dec
clc
arpl
xor
add
pop
dec
adc
pop
out
lahf
ret
aas
push
mov
jmp
adc
lods
cmp
sub
cld
or
ret
adc
dec
pop
inc
aaa
addb
jp
pushw
sbb
stos
add
daa
sub
jl
lea
cmc
icebp
add
adc
or
lahf
mov
cwtl
mov
xchg
or
or
jge
pop
mov
pop
jae
pop
pushf
pushf
lea
je
cmp
cmp
pusha
lea
je
bt
cmp
push
lea
je
pusha
pusha
lea
jmp
inc
jp
fs
loope
nop
mov
push
dec
push
mov
mov
dec
dec
adc
push
test
inc
lret
rcr
repnz
mov
sbb
mov
loop
loop
cld
ljmp
test
clc
jae
ja
mov
jmp
loop
mov
cmpps
mov
cltd
jnp
nop
daa
fldenv
jae
into
xor
loope
stc
xlat
outsb
icebp
push
or
add
or
push
mov
push
pushl
lea
jae
not
jmp
push
pushf
push
movb
pusha
lea
jmp
pusha
pushl
movl
pushl
push
lea
jmp
sub
or
mov
pop
push
mov
dec
mov
mov
mov
mov
add
dec
adc
add
push
inc
imul
xor
mov
mov
xlat
jmp
addr16
lret
aaa
and
aas
pop
in
mov
stc
jmp
lea
mov
jmp
movzwl
movsbw
lea
movsbw
jmp
push
mov
jmp
movb
pushl
lea
call
pushf
lea
jne
pushf
call
mov
setns
inc
mov
inc
not
pusha
movb
mov
push
pushf
lea
call
pushf
mov
call
int3
popf
pusha
movl
movw
movw
movw
movl
pushl
lea
jmp
in
push
clc
push
add
lcall
jnp
push
push
inc
pop
jnp
mov
test
clc
mov
fdivs
in
cmp
dec
pop
dec
aam
fnsave
aad
imul
jle
repnz
cmp
sbb
dec
or
sbb
add
lahf
xchg
outsb
xor
out
mov
lret
push
js
inc
sub
std
mov
jp
push
pop
jne
mov
adc
mov
push
fldl
icebp
data16
loope
test
xor
lods
xchg
mov
sbb
push
jo
cmpl
aam
and
sub
aam
clc
push
push
mov
lea
jne
push
mov
mov
push
pusha
pushf
call
lea
call
jmp
pusha
pusha
lea
jne
jmp
jmp
pushf
inc
not
not
mov
jmp
xchg
call
mov
pushf
pushf
jmp
stc
pusha
pusha
or
mov
jmp
push
outsb
insb
orb
push
ret
call
lret
loopne
jmp
pop
mov
sbb
pop
fcomp
es
sub
in
inc
ja
mov
or
orb
mov
mov
cltd
lods
in
dec
adc
outsb
push
fwait
inc
pop
in
test
jb
mov
xor
int3
mov
cli
lock
mov
setbe
dec
push
inc
push
jl
aam
jo
je
jl
push
mov
mov
mov
movw
push
mov
lea
jmp
call
push
pusha
lea
jae
pushf
mov
not
mov
call
mov
or
out
pop
and
int
cmp
int
and
sub
fdivrs
daa
mov
inc
fdivl
insb
jno
jae
sub
call
push
adc
pop
shrb
arpl
pop
imul
icebp
adc
pop
loop
mov
sub
fwait
mov
and
out
push
hlt
ljmp
std
loope
xor
and
fdivrl
icebp
jmp
fnstenv
nop
mov
or
std
adc
repz
xor
push
add
cmp
les
xorl
pop
loop
add
mov
inc
cld
lods
push
je
movsb
pop
aad
test
jge
and
lods
push
sub
cs
add
in
iret
xchg
jg
xor
cld
mov
andb
pushf
sahf
jg
push
jmp
jle
insb
jo
jp
mov
scas
mull
loop
idivb
sahf
orb
test
inc
pop
inc
push
mov
stos
dec
adc
pushf
xor
outsb
cmc
adc
adc
jns
inc
pusha
cmc
fdecstp
sahf
mov
imul
pop
push
inc
popf
mov
cmp
ss
push
push
or
enter
xchg
rcl
inc
shlb
jbe
mov
fprem
xchg
add
fwait
arpl
mov
pushf
cs
out
fsubs
inc
mov
cs
or
hlt
adc
add
call
push
mov
mov
or
sub
cmp
jecxz
sti
sti
ljmp
movsl
mov
mov
into
jbe
ret
faddl
add
loope
inc
sbb
or
fwait
or
jecxz
mov
pushf
test
pop
aaa
cmp
lret
ret
jmp
sti
jnp
and
jbe
popf
rdtsc
nop
pushf
movl
pushf
movb
movw
pushf
movl
pushf
lea
jmp
pusha
movl
pusha
push
movb
lea
jmp
mov
pushf
inc
stc
ror
pushl
pusha
call
sub
call
test
ffree
rcl
ret
sub
leave
fcmovnb
in
shl
stos
loope
push
aaa
fincstp
iret
add
shlb
pusha
xlat
aad
or
mov
call
fimuls
jg
adc
inc
sbb
pusha
mov
sub
prefetch
push
in
pop
add
loopne
enter
in
add
push
mov
pushl
lea
call
pusha
push
lea
jae
clc
cmp
xor
pushf
lea
call
push
push
pusha
push
lea
jae
stc
pusha
stc
cmc
xor
push
lea
call
pushf
lea
jae
xchg
pushf
pushf
mov
jmp
cmp
clc
cmp
jmp
inc
ds
or
pop
adc
std
xor
leave
xlat
fistpll
sub
pop
fdivl
add
pop
lahf
sub
mov
push
scas
int3
daa
add
xlat
add
ret
ret
adc
int
rol
lds
push
mov
jmp
mov
movb
and
int3
mov
adc
hlt
push
adc
out
enter
stos
jecxz
add
stos
mov
movsl
ds
popa
cmp
ss
push
test
mov
lret
mov
mov
fildll
xchg
xchg
dec
pop
sbb
inc
fcmovb
and
sbb
insb
fsubl
lcall
in
pop
jp
jne
mov
leave
adc
icebp
lret
pop
cmpsb
mov
xlat
cmp
rcll
rcr
std
bnd
cmp
add
in
lock
and
ljmp
xchg
imul
mov
inc
jb
inc
pop
test
push
stos
mov
jmp
jecxz
xor
cmc
sbb
jl
orb
add
aad
xor
aad
movsl
icebp
add
mov
jb
bt
cmc
cmp
push
pushf
jmp
test
cmc
shr
mov
lea
je
push
push
jmp
movw
lea
jne
pusha
not
mov
movb
pusha
mov
push
lea
jmp
mov
pushf
mov
pushf
push
call
pop
adc
into
enter
lcall
mov
fs
pop
cmpsb
inc
mov
mov
mov
mov
mov
loope
lods
push
inc
sub
adc
push
jae
test
inc
sub
or
sahf
xchg
arpl
cmp
sar
sti
pop
out
fucomi
push
mov
lea
jl
pushf
stos
pushf
pushf
mov
lea
jmp
jmp
movsb
lcall
je
gs
clc
out
adc
in
add
out
aam
loop
adc
sub
scas
fdivl
and
loope
jmp
mov
rolb
lret
icebp
and
aaa
adcl
adcl
mov
push
mov
movl
sub
jmp
mov
out
adc
add
xchg
jge
pop
pop
push
dec
mov
stos
cmc
jmp
stos
in
cmpsb
in
mov
push
inc
push
mov
push
pop
push
pop
jo
orb
ret
or
inc
push
popa
jl
jns
cmp
push
pop
inc
mov
fsubrs
xor
shr
fmull
clc
call
mov
and
fisttpll
pop
add
inc
and
sbbb
not
pop
mov
mov
push
pusha
lea
call
call
jmp
mov
sets
not
lea
call
pusha
mov
pushf
lea
mov
pop
push
mov
call
jmp
lea
call
pusha
adc
pushf
pushf
movw
jmp
sub
test
pushl
popl
jmp
call
push
call
add
in
cmp
add
jmp
pop
loope
sbb
fs
push
arpl
ljmp
pushf
adc
adc
push
std
sti
insb
xchg
adc
push
jle
stos
rclb
jl
mov
fdivl
jmp
icebp
lahf
enter
mov
lret
xchg
adc
adc
rcl
mov
mov
jle
pusha
bound
jae
nop
mov
inc
sahf
jmp
subl
jne
popf
mov
dec
xor
nop
jl
sub
cmp
fsubrl
sbb
in
in
sbb
push
mov
inc
pushf
cmc
pushw
popfw
jmp
cmc
cmp
add
call
lea
ja
pusha
clc
jmp
call
pushf
push
movw
lea
jbe
pushf
rol
bsf
sub
cmp
mov
sub
sar
sub
rcl
dec
mov
jmp
cwtl
cmpsb
mov
dec
sub
and
aas
cmp
or
aaa
sub
stos
in
lods
out
jns
jge
push
inc
call
push
lahf
outsl
xchg
or
jmp
cmp
popa
add
loope
mov
push
or
xor
push
fdivs
stos
pop
mov
out
pop
or
aas
inc
and
push
add
or
in
fsubl
sbb
add
leave
fistpl
loope
cmp
cmpsb
mov
pop
es
stos
mov
pop
stos
lods
push
mov
pusha
pushf
movl
movb
lea
jmp
pop
mov
bswap
pusha
call
movl
movb
jmp
push
pusha
movl
call
lea
je
push
jmp
pushl
or
pushf
lea
je
pushf
mov
pusha
movzbw
cwtl
lea
pusha
call
jmp
jmp
add
add
or
shl
sar
sbb
push
bts
cmc
btc
mov
btc
sub
shld
cwtl
push
pusha
mov
bswap
mov
push
aaa
sub
sub
mov
pushl
sete
call
pushl
lea
je
pop
bswap
jmp
call
jmp
or
mov
outsl
imul
add
lock
fdivl
push
pop
jle
add
loope
add
insl
sbb
pop
pop
cmp
xchg
push
ljmp
scas
xchg
cmp
stos
mov
imul
sub
add
loopne
shrb
rclb
insl
cli
sub
sub
sbbl
mov
mov
and
cltd
addr16
xchg
cmp
ret
icebp
in
int
mov
je
sbb
jl
insb
push
mov
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
or
lea
cmpl
dec
or
adc
loopne
popa
fdivrl
dec
mov
pop
pop
fsubrl
imul
in
lret
sub
nop
lret
pop
push
mov
push
bound
mov
mov
call
movl
lea
jp
pushf
movl
pushf
mov
pusha
pusha
lea
jmp
je
push
dec
or
sbb
imul
mov
mov
data16
sbb
fdivl
pop
add
sbb
sub
push
imul
addb
push
pop
mov
imul
add
add
fwait
adc
popa
mov
lret
pushl
inc
dec
inc
dec
movsl
stos
lods
scas
pop
mov
push
inc
inc
lahf
cmp
dec
inc
lcall
insl
cmp
xchg
scas
inc
lahf
outsl
mov
jb
add
inc
mov
mov
ds
mov
in
push
mov
mov
mov
mov
sub
repz
std
inc
lahf
outsb
dec
mull
jb
xchg
mov
ret
aaa
sub
cltd
je
in
inc
jnp
mov
pop
imul
sbb
mov
popa
mov
icebp
mov
cmpsb
mov
cmc
jnp
pavgw
loope
dec
sbb
xor
mov
movsl
pop
or
std
xor
xor
push
mov
movl
call
pusha
lods
add
jne
push
pushf
test
neg
call
add
add
adcb
adcb
adcb
das
pop
add
pop
add
add
add
cld
pop
pushf
jmp
lods
bt
bt
ror
stc
pushl
add
bt
stc
clc
jmp
or
pusha
rcr
test
mov
cmc
cmp
cmp
pusha
lea
jb
pusha
call
cmp
insl
dec
jnp
lds
add
push
cmp
fdivr
or
call
xor
sbb
sahf
jle
jmp
call
add
sbb
rol
out
mov
xor
das
and
pushf
mov
insb
mov
sbb
out
fcmovbe
xor
sti
inc
mov
lods
xchg
xor
data16
xor
test
jo
in
jb
enter
movsl
scas
or
enter
fmull
or
cmp
ret
xor
imul
push
cmp
sahf
mov
aas
xor
cmp
add
adc
lds
and
stos
ret
push
scas
mov
sbb
push
or
sahf
jno
inc
stos
mov
movsb
pop
inc
push
cmp
cmc
ror
fmul
cmp
inc
aas
push
jae
fisubrs
mov
cmp
adc
add
mov
arpl
mov
icebp
std
xor
dec
pop
icebp
int3
sbb
sub
xchg
sbbl
pop
jle
mov
loop
push
pop
mov
mov
lods
push
in
loope
dec
pop
icebp
outsb
stc
push
or
push
mov
and
idiv
adc
mov
hlt
dec
pop
xor
mov
push
scas
mov
jns
inc
push
insl
inc
pop
add
jecxz
mov
fucomip
stos
cmp
push
add
call
add
jle
stc
imul
out
xchg
sub
jo
je
je
test
lds
jl
mov
push
scas
mov
mov
pop
inc
stc
imul
sub
xchg
pop
push
test
inc
push
iret
inc
ds
inc
test
sarb
neg
leave
rolw
jmp
pop
jg
inc
pop
or
mov
or
mov
lock
xorl
or
pop
iret
inc
pop
data16
adc
cmpsb
xor
loope
shr
sbb
mov
mov
push
mov
jmp
xor
sub
lahf
fwait
mov
inc
inc
push
lods
mov
mov
je
lret
incl
cmp
sti
sbb
pop
xchg
les
mov
or
ss
adc
je
mov
lea
orl
out
popf
popf
push
push
clc
inc
fidivrs
xor
les
jns
mov
inc
std
cmpsb
mov
push
mov
fidivl
rclb
xor
dec
inc
cltd
outsl
ljmp
cli
fndisi(8087
sbb
sbb
sbb
stc
mov
mov
jp
push
inc
push
push
dec
pop
mov
cwtl
es
mov
xorl
add
xor
les
push
sbb
sub
cmp
add
inc
cmpb
imul
ljmp
xchg
nop
ljmp
jmp
popa
jl
jp
and
das
imul
pop
push
inc
mov
sub
sarb
add
mov
mov
sbb
sub
inc
push
dec
push
mov
add
add
dec
mov
pusha
clc
cmp
test
jmp
test
aam
fidivs
orps
adc
jecxz
repz
inc
mov
fwait
adcl
cmp
aam
jbe
lock
add
cld
mov
mov
jb
jecxz
xchg
sub
push
and
xacquire
je
xchg
jno
sbb
lret
scas
push
dec
iret
sub
aad
hlt
cs
push
sahf
xchg
mov
mov
sahf
push
mov
jl
mov
push
push
int3
sub
dec
imul
jnp
addl
test
and
adc
inc
push
out
pop
add
add
add
pop
pop
iret
sahf
out
sti
mov
jb
in
and
inc
fbstp
jge
test
loopne
rolb
sub
out
inc
mov
push
mov
sub
test
test
test
leave
aas
jb
cmp
mov
adc
mov
cli
enter
int3
cmpsl
xchg
mov
mov
push
icebp
push
push
mov
fimuls
inc
mov
jb
push
jb
out
sti
in
test
ret
push
mov
and
inc
mov
or
test
push
and
icebp
pop
sti
sbb
cld
out
add
mov
ret
adc
and
cld
mov
inc
aad
int
shl
ret
sbb
sahf
jbe
nop
call
mov
inc
pop
scas
pop
lods
mov
pop
test
push
fbstp
imul
jmp
sub
xlat
inc
mov
inc
pop
push
call
inc
or
lret
push
cmp
mov
jnp
movsb
mov
push
fnsave
inc
mov
shll
scas
mov
and
jo
mov
pusha
jbe
pop
adc
jo
jbe
xor
mov
sarb
fwait
lock
jae
cwtl
pop
mov
rcr
dec
mov
ficomps
jae
shll
into
cmp
repz
add
cmp
popf
insl
xor
jge
sub
fmuls
mov
jle
insb
sbb
adc
outsl
popf
inc
xchg
sbb
into
int3
adc
cmp
dec
adc
and
and
fistpl
xor
dec
cmpsl
ds
sti
sub
mov
insl
cli
in
out
jg
ret
xchg
xchg
imul
mov
shll
jge
icebp
push
lcall
pop
and
icebp
pop
sti
sti
int
ja
push
jle
xor
sub
cmp
and
inc
xlat
and
jne
lcall
dec
imul
fisttpll
shlb
jle
xor
nop
inc
fs
push
lret
mov
jbe
xchg
pop
neg
jecxz
inc
inc
inc
sbb
add
jnp
dec
test
les
mov
arpl
popa
notb
repnz
pusha
pop
mov
cltd
bnd
imul
mov
rcpps
pop
mov
dec
loop
scas
dec
movsb
inc
pop
out
int
cmpsb
lock
dec
cmpl
dec
mov
dec
faddp
cs
movsl
sarb
in
jge
pop
push
ljmp
inc
out
out
xchg
gs
outsl
out
movsl
mov
lock
mov
push
dec
inc
pop
lods
mov
and
push
adc
cli
std
lds
xor
lods
into
pop
inc
dec
push
push
xor
scas
push
or
jae
and
jae
jl
inc
inc
movsl
push
mov
mov
out
lahf
jnp
ret
popa
xchg
cmpsl
push
aam
jb
push
adc
cld
add
mov
cld
imul
test
outsl
lea
sbb
adc
push
mov
mov
sbb
mov
daa
sub
in
nop
mov
pushw
out
orb
insl
push
aas
dec
mov
dec
sub
xor
sub
dec
xchg
lds
and
mov
inc
pop
mov
pop
imul
ret
xor
shlb
mov
movsl
call
sbbb
adc
out
call
cmc
and
sbb
ds
sub
pop
inc
xor
dec
jp
insl
fldenv
dec
insl
sbb
daa
inc
ror
cmp
xor
jge
ret
cwtl
mov
ret
es
movsl
or
lds
cmp
shlb
fcompl
das
popa
mov
fbstp
int
sub
lret
int
ret
pop
stos
jl
lods
inc
scas
pop
mov
fs
xchg
push
inc
pop
into
cmp
fsubr
jae
scas
out
je
sqrtps
addr16
into
subb
fistpll
mov
ja
icebp
data16
sub
push
ds
movsb
mov
inc
rcl
fcmovu
cli
push
mov
cmp
shl
mov
fnstsw
test
mov
sub
sbb
push
mov
mov
xchg
or
sbb
push
pop
mov
les
mov
scas
or
aas
fisttpll
jle
icebp
or
mov
in
jle
icebp
or
cmc
jbe
inc
lods
mov
in
push
jae
ds
xchg
xchg
jp
or
out
arpl
or
insl
xchg
or
sahf
mov
sahf
lcall
xchg
arpl
sub
add
sbb
mov
jecxz
scas
mov
mov
jmp
add
daa
jp
sub
jb
push
xlat
sbb
add
xchg
pop
dec
mov
xor
lock
fdivs
out
loop
scas
xchg
fsub
pop
in
lahf
shll
nop
hlt
int3
sbb
ret
push
pop
push
mov
test
lods
cmp
cmp
sbb
popa
xchg
pushf
push
mov
cld
hlt
mov
and
sub
add
in
push
mov
fwait
movsl
orl
sbb
or
not
into
xor
out
add
xor
in
xor
mov
andb
cmpsl
pop
lods
pop
or
loope
push
and
es
incb
xor
xchg
bound
out
repnz
xor
ss
xor
or
jbe
jbe
push
lock
std
std
addb
xchg
mov
ret
jnp
xlat
in
shr
and
mov
pop
nop
ss
popf
das
pop
sub
inc
pop
dec
inc
xor
cmp
push
push
int3
add
out
shlb
adc
test
sahf
or
roll
rorl
inc
push
in
in
xchg
push
test
jne
xchg
push
enter
aam
cmp
cmp
or
jnp
pushf
movw
pushl
lea
je
call
pusha
and
test
test
add
pushl
pushf
push
pushf
lea
jmp
pushf
movl
mov
push
mov
push
lea
jmp
pushl
pushf
lea
jno
call
pusha
jmp
lea
jg
pushf
lea
je
pushf
add
pushl
push
cmp
pusha
jmp
bsf
inc
rcl
clc
mov
clc
bt
cmpb
jle
push
pushf
lea
jne
shl
xor
movzbw
xor
sub
mov
bt
add
call
and
lret
inc
mov
xchg
mov
dec
dec
mov
push
dec
mov
aaa
andb
prefetchw
pushw
cmp
mov
dec
lcall
nop
pusha
addb
adc
fs
mov
mov
fsubl
mov
loope
in
loope
add
notl
ja
and
pushl
call
clc
mov
gs
cmpsl
xor
sub
xor
and
sub
shl
dec
dec
pop
sub
push
mov
xor
xorl
xor
jge
out
sbb
sbbl
xchg
outsl
inc
les
vmulsd
popf
rcr
dec
push
add
repnz
ss
fidivs
adc
push
mov
cmp
cld
jmp
fildll
xor
iret
cmp
sbb
stc
out
adc
xor
clc
repnz
add
mov
inc
data16
inc
shlb
cmpsb
xor
jbe
lret
adcl
loopne
pop
int
pop
add
push
lret
mov
push
lods
fdivr
into
lret
mov
mov
shll
addr16
movsl
jb
cltd
cltd
scas
gs
cltd
add
aas
es
mov
scas
cmp
jcxz
push
fisttpl
xor
jmp
aas
es
mov
lret
dec
repnz
testb
rolb
and
mov
inc
ret
lret
push
xor
sbb
scas
xchg
xchg
loopne
shll
jmp
push
mov
rclb
sahf
or
das
xchg
stc
mov
subb
pusha
in
and
push
pop
xchg
xchg
xor
test
dec
fisttps
fcmovnb
xchg
add
fs
pop
xor
popa
jns
mov
and
ss
mov
call
test
fimull
pop
arpl
pop
push
sbb
cld
outsl
pop
cmp
adc
jb
pop
dec
sub
mov
loope
scas
mov
push
jl
pusha
nop
insb
sahf
push
mov
dec
inc
mov
insl
cli
hlt
ror
lret
sub
cmp
push
dec
rolb
mov
and
shlb
das
int
sbb
fcmovbe
inc
mov
xchg
cmp
movsb
mov
enter
in
sar
ret
jns
adc
leave
push
and
div
add
lret
or
testl
mov
imul
dec
inc
push
cld
fxch
xchg
fiadds
int
stc
ret
inc
inc
call
mov
cld
in
mov
js
outsb
out
push
loopne
aas
stc
das
ds
cmc
sbb
pop
aaa
lods
scas
mov
aaa
ret
cltd
jae
jno
jne
xchg
popf
test
mov
pushf
movl
pushf
pushl
popl
pushl
pushl
ret
movl
pushf
pushf
lea
jmp
push
stc
jmp
test
jmp
lret
lea
mov
in
adc
stc
pop
or
add
dec
adc
imul
mov
ss
int
sub
adc
jp
pop
add
or
stos
lock
push
xchg
dec
mov
mov
aas
ss
jne
jnp
jl
mov
sbb
jmp
sti
dec
loope
xor
aas
cmp
mov
aaa
jae
stos
mov
rorl
sahf
jmp
icebp
xlat
into
js
push
pushf
daa
mov
nop
lret
jnp
jns
inc
mov
sbb
call
mov
mov
push
sub
sub
jno
xchg
cld
or
and
jns
popf
imul
mov
ret
mov
or
push
in
add
es
mov
push
pop
mov
push
xchg
push
mov
out
lcall
sub
push
pop
and
repnz
pop
xchg
in
test
cmp
jb
xchg
pop
xor
popf
popf
lcall
xchg
inc
mov
test
inc
inc
sbb
add
out
jp
mov
das
ret
lds
jge
inc
pop
mov
mov
jle
xchg
int3
sub
dec
por
adc
or
imul
into
xor
das
outsb
sbb
dec
dec
xchg
cmp
xor
fxch
jmp
push
mov
pusha
not
mov
movsbw
pusha
not
pop
mov
push
mov
pushl
mov
movb
pushl
ret
movl
call
mov
movb
jmp
call
dec
fwait
jne
cltd
lahf
popf
xchg
mov
lea
arpl
add
iret
mov
insb
xor
cwtl
test
mov
pop
daa
xor
jmp
ret
ret
mov
inc
add
or
pusha
jbe
jb
addb
jb
ret
leave
mov
xor
rolb
push
fdivl
fcmovb
sub
jnp
inc
pop
shlb
xlat
out
popf
dec
pushw
lock
dec
dec
pop
push
mov
bound
push
push
mov
movb
lahf
call
cmp
cmp
pusha
pusha
mov
movb
lea
ja
jmp
jae
clc
jmp
cmc
or
jmp
pushf
jmp
pushl
bt
jmp
inc
jnp
pop
popa
js
xchg
jae
cmp
inc
mov
jnp
jg
jnp
dec
push
dec
mov
adc
mov
cmp
mov
mov
das
cwtl
lcall
das
jae
add
cli
out
aam
xchg
xchg
mov
loope
cmc
leave
mov
icebp
adc
jecxz
mov
bt
cmc
cmp
and
bt
mov
test
test
add
push
lea
jmp
add
add
call
sub
cmp
das
mov
mov
test
mov
mov
mov
call
pop
pop
sbb
cmp
fildll
inc
imul
negb
negb
mov
test
push
mov
sub
sbb
push
jl
sub
xor
push
mov
mov
cwtl
int3
enter
cmp
sub
push
mov
lea
ja
jmp
jae
dec
push
lods
or
and
or
call
fdivrp
push
int3
enter
lods
mov
pop
js
fadd
fdivl
mov
out
mov
aam
movsb
iret
incb
push
test
popa
xchg
mov
dec
dec
pop
leave
popf
xchg
push
mov
push
call
movl
pushf
movl
push
pushl
pushf
pushf
lea
jmp
lea
je
call
add
add
addb
add
cmpsb
js
add
add
add
xchg
adc
mov
sahf
sbb
mov
adc
add
add
add
pushf
mov
pushf
lea
call
call
movl
push
pop
lea
pushf
pushf
movl
pushf
call
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
std
outsl
mov
and
push
pushf
call
mov
call
iret
icebp
jmp
loope
xchg
fnstcw
or
adc
add
add
in
in
testb
or
leave
pop
test
pop
pop
pop
fiaddl
or
pop
out
or
loope
inc
jge
dec
pop
out
nopl
fiadds
lahf
sbb
push
dec
les
jb
pop
inc
push
sbb
xor
insb
push
inc
cmp
mov
int
push
lods
push
adc
inc
jg
fisttpl
and
adc
dec
mov
jo
rcl
shlb
out
icebp
or
mov
mov
mov
add
ja
jmp
nop
mov
cli
leave
cwtl
mov
jo,pn
and
mov
jle
pop
inc
adc
push
ljmp
flds
fiaddl
xchg
sub
je
shr
jge
xchg
push
sub
mov
and
inc
mov
rcll
fs
je
test
cmp
call
mov
test
xchg
lods
lock
jno
jne
popf
fwait
jne
inc
push
push
mov
mov
mov
out
sub
xor
ja
jne
in
jle
insl
push
cmp
imul
in
sbb
sar
fstps
xor
aad
daa
push
mov
xchg
ror
xor
xchg
arpl
mov
jnp
popa
arpl
push
pop
pop
dec
imul
out
dec
pop
xchg
test
lods
aaa
and
and
sarb
cmpsb
cmpsl
sbb
xchg
push
xor
cmp
std
in
in
jle
jns
repnz
or
adc
mov
stos
cmp
pusha
sbbb
xchg
sub
mov
adc
lret
out
jnp
lret
xor
adc
pop
adc
addl
push
pushf
fisttps
pop
test
je
js
mov
movsb
push
jo
je
jp
js
aas
scas
mov
aas
insl
xchg
dec
mov
cld
in
pop
mov
enter
imul
push
cli
jecxz
jle
xchg
xchg
test
push
daa
ret
loopne
sbbb
jae
mov
cmp
add
ficoml
adcb
into
iret
add
iret
repz
iret
xor
std
cltd
les
adc
jle
vunpckhpd
lods
stc
or
cmpb
lods
and
iret
aad
xor
mov
inc
pusha
aaa
outsl
xchg
das
int
cmpb
push
mov
xor
punpcklbw
xchg
mov
inc
or
dec
push
cwtl
lcall
js
or
sub
adc
xchg
mov
test
push
mov
movw
movw
lea
je
bt
sub
jmp
imul
clc
add
pushf
pushf
lea
jmp
jmp
push
push
test
stos
mov
pop
jle
pop
mov
xor
jmp
or
loopne
call
mov
pusha
sub
enter
insb
mov
mov
mov
inc
push
jbe
xchg
lds
shr
hlt
movsb
adc
jecxz
leave
mov
cld
cmpsb
push
ja
mov
ret
ficoms
jle
pop
lods
cmc
scas
mov
scas
mov
rcr
xchg
insb
jb
mov
daa
push
or
test
or
arpl
stos
int
mov
imul
inc
sbb
push
adc
xor
jb
cmc
scas
lcall
repnz
push
mov
movsbw
jmp
bt
xor
pusha
pushf
inc
clc
movw
bt
ror
call
test
add
push
lea
jne
setnp
call
lea
jne
pusha
pusha
movb
inc
pushf
pushf
inc
push
mov
movb
lea
jmp
pusha
movl
movl
lea
jmp
clc
call
popf
fidivs
loop
lds
dec
mov
mov
arpl
imul
jb
stos
or
xchg
push
mov
hlt
in
int3
loopne
xchg
enter
aam
adc
jns
cmpsb
jle
mov
paddsb
xchg
push
cli
test
shll
sbb
cmp
fs
insl
orl
lret
mov
adc
mov
adc
adc
sti
fldl
push
pop
push
mov
cmp
or
jecxz
in
clc
in
in
enter
mov
mov
movsl
or
sti
std
out
in
sbb
int3
roll
push
push
mov
cmp
dec
ret
sub
xor
jmp
dec
fcmovnu
xor
idivl
sub
fisttpl
dec
mov
loope
jp
into
and
inc
mov
pop
inc
pop
dec
jl
pop
push
mov
adc
or
adc
sbb
adc
xor
sbb
or
add
stc
jmp
ret
repnz
fadd
out
jne
loope
push
insb
je
js
fimuls
fsubl
repnz
xchg
ret
mov
je
nop
mov
push
mov
loope
mov
stos
or
inc
cmpsb
xor
add
loope
cmc
add
sti
loope
icebp
std
repz
leave
adc
sub
imul
jne
dec
pushf
cld
push
mov
or
sti
mov
jle
test
dec
inc
arpl
movsl
ss
mov
fsubs
mov
push
push
stos
rclb
addl
js
movsb
cwtl
mov
movsb
xor
test
and
mov
movw
pushl
lea
jmp
mov
pushf
popl
movb
mov
pushl
popl
pushl
pusha
lea
jmp
pusha
pushf
repz
popl
test
pusha
mov
mov
mov
push
add
shrd
xchg
not
lea
mov
add
xchg
rcr
mov
setbe
bt
mov
bsf
movsbw
not
mov
btr
rcr
pushl
popl
or
dec
movl
rol
call
mov
call
not
clc
lea
jne
push
pushf
rol
test
pushf
jmp
call
bsf
mov
cmp
pushf
xor
call
stc
cmpl
pusha
pushf
pushf
call
mov
bswap
ror
not
movsbl
movb
sub
xchg
rcl
btr
rcr
not
sub
rol
shrd
mov
bsf
rcl
mov
or
sub
inc
push
cmc
pushf
lea
lea
bsf
clc
bt
btc
mov
pusha
lea
bswap
btc
add
sub
stc
bswap
call
mov
sar
xor
mov
mov
push
sub
sbb
add
bts
test
shl
add
xor
sub
neg
mov
jmp
push
mov
pusha
pushf
lea
jmp
add
not
mov
pusha
push
mov
cmc
add
jmp
mov
pushf
lea
jmp
pushf
mov
push
push
lea
jmp
pusha
pushf
mov
push
push
pushf
lea
jmp
call
stc
rcr
cmc
shl
mov
stc
sub
jns
add
push
movb
jmp
pusha
mov
mov
mov
pushl
lea
jmp
ror
mov
pushf
pushf
push
add
movw
movl
mov
pushf
lea
jmp
jmp
mov
mov
bt
stc
ror
pushf
jmp
sbb
mov
test
cmp
test
add
ja
push
movw
pushf
mov
push
mov
pusha
movb
pushf
lea
jmp
sub
mov
mov
clc
and
pusha
call
jmp
cmc
push
cmp
add
jmp
movw
mov
pushf
jmp
mov
pushf
pushl
lea
jmp
call
movb
lea
jne
stc
push
mov
sub
mov
xchg
call
pushf
movb
pushf
decl
call
stc
sub
movb
cmp
neg
stc
cmp
cmp
bswap
clc
cmp
pusha
sub
clc
clc
pushf
pushf
sub
pushf
mov
mov
pushf
pushf
lea
jmp
pushf
popl
mov
jmp
clc
add
std
pusha
pushl
popf
mov
pushf
mov
pushl
lea
jmp
jmp
bt
test
neg
bt
cmc
clc
clc
ror
pushf
cmc
pusha
xor
pushf
cmp
mov
stc
sub
push
jmp
shl
movzbl
cmc
jmp
not
bswap
setnp
mov
push
pushf
call
cbtw
lea
jne
cmc
bt
cwtl
stc
sub
call
movb
movw
test
mov
bt
jle
push
test
jmp
setno
jmp
pushl
mov
push
lea
jmp
push
dec
cmp
cmp
call
push
pushf
pushl
jmp
cmp
add
movb
pusha
push
mov
pushf
mov
mov
pushl
ret
push
jmp
cmp
sub
movw
not
pushl
pushf
lea
jmp
inc
ror
push
mov
adc
sbb
shl
mov
movb
pushf
add
jmp
pushf
popl
movw
pushf
pushf
pushl
popl
pushf
lea
jmp
stc
shl
push
shr
call
jmp
pushl
popl
pushl
lea
jmp
pusha
mov
cmc
rcl
bts
bsr
sub
neg
neg
not
shrd
bsr
rcr
stc
neg
and
inc
xor
or
cmc
sub
push
rol
and
mov
bt
call
bt
mov
dec
ror
mov
bt
pusha
jmp
dec
push
pushf
inc
jmp
jmp
sub
pushl
rol
mov
movw
dec
push
cmp
add
cmc
sub
jmp
call
push
clc
mov
clc
cmc
stc
not
bt
sub
call
neg
cmp
test
xor
call
shl
setle
clc
sbb
mov
add
shld
mov
call
shr
dec
ror
neg
mov
stc
add
pushf
pushf
pusha
mov
lea
jmp
sbb
xadd
mov
sbb
cmp
bsr
btr
mov
pushf
mov
cmp
not
stc
not
call
pushf
pushf
push
pushl
popl
push
lea
jmp
pushf
mov
mov
call
cwtl
bt
sub
pushf
jmp
or
sar
lea
xchg
mov
bt
dec
sbb
mov
mov
stc
cmc
push
sub
jmp
push
push
clc
and
pushf
mov
call
jmp
jmp
mov
pushl
jmp
not
cwtl
movzbl
push
mov
rcr
mov
bt
movw
add
call
pushf
pushf
popl
pusha
call
push
pushf
not
pushf
movb
mov
movw
lea
jmp
sub
movsbl
shl
add
mov
call
mov
pushf
pushf
pushl
repz
popl
cmc
clc
clc
mov
call
lea
jmp
mov
cmp
add
test
cmc
stc
cwtl
mov
bt
stc
movw
sub
test
jmp
mov
push
lea
jmp
and
call
clc
add
clc
test
add
jmp
xor
mov
bsf
xor
mov
cmp
not
pushf
pusha
stc
not
clc
cmc
push
jmp
add
jmp
mov
push
pusha
pusha
lea
jmp
mov
jmp
call
clc
jmp
mov
push
mov
pushf
movb
movb
lea
jmp
repz
popl
cmp
mov
mov
mov
cmp
pusha
clc
test
mov
cmc
cmp
cmc
push
mov
pusha
cmp
xchg
sar
lea
movzbw
lea
mov
pushf
sbb
ror
mov
inc
shl
btr
pushl
popl
shrd
adc
bsr
movl
pushf
call
push
pusha
movw
pushf
popl
push
pushf
jmp
pushf
clc
push
mov
bt
jmp
shrd
mov
cmc
add
pusha
push
push
pushf
lea
jmp
das
mov
bts
shld
mov
bt
not
add
mov
clc
add
bt
push
stc
bt
shrd
pushf
lea
js
pusha
pusha
mov
call
mov
pushl
test
test
mov
push
pushf
mov
mov
clc
call
movb
jmp
pushl
popl
pusha
push
lea
jmp
pusha
pusha
mov
jmp
push
mov
pushf
lea
jmp
dec
aas
sub
rdtsc
mov
neg
cwtl
shr
shl
pop
stc
bts
lahf
pop
xadd
sets
aam
lea
pop
btr
shr
jmp
not
pushl
mov
lea
jmp
stc
cmc
test
push
clc
test
push
mov
pushf
mov
or
push
call
add
add
pop
pop
add
push
pop
add
push
pop
add
pop
pop
add
pop
pop
add
jo
add
pop
pop
add
gs
add
pop
add
dec
pop
add
pop
pop
add
push
pop
add
pop
pop
add
pop
pop
add
pop
add
bound
pusha
pop
pop
add
pusha
pop
add
pop
pop
add
outsb
pop
add
pop
add
pop
pop
add
fs
add
pop
pop
add
push
pop
add
pop
pop
add
push
pop
add
pop
add
fs
add
pop
pop
add
pop
add
pop
pop
add
pop
pop
add
jo
add
pop
pop
add
imul
push
pop
pop
add
push
pop
add
pop
pop
add
push
pop
add
dec
pop
add
pop
pop
add
gs
add
pop
add
dec
pop
add
pop
pop
add
imul
sbb
add
pop
pop
add
pop
pop
add
dec
pop
add
pop
pop
add
pop
add
pop
add
imul
imul
outsb
pop
add
pop
add
pop
pop
add
dec
pop
add
pop
add
pop
add
pop
add
pop
add
dec
pop
add
gs
add
pop
add
pop
pop
add
jo
add
dec
pop
add
push
pop
add
pop
pop
add
jo
add
pusha
pop
add
pusha
pop
add
fs
add
dec
pop
add
pop
add
outsb
pop
add
pop
add
push
pop
add
imul
push
pop
add
pop
add
addr16
add
pop
pop
add
push
pop
add
dec
pop
add
pop
add
pop
add
dec
pop
add
push
pop
add
outsb
pop
add
pop
add
pop
add
gs
add
pop
add
jo
add
dec
pop
add
jo
add
dec
pop
add
pop
pop
add
pop
pop
add
outsb
pop
add
pop
add
push
pop
add
dec
pop
add
pop
pop
add
push
pop
add
pop
pop
add
jo
add
push
pop
add
push
pop
add
outsb
pop
add
pop
add
pop
pop
add
pop
pop
add
addr16
add
push
pop
add
pop
add
pop
add
outsb
pop
add
pop
add
dec
pop
add
dec
pop
add
pop
pop
add
dec
pop
add
pop
pop
add
fs
add
dec
pop
add
pop
add
push
pop
add
jo
add
pop
add
fs
add
push
pop
add
pop
add
add
pop
add
pop
add
pop
add
pop
add
gs
add
pop
add
pop
add
add
pop
add
push
pop
add
pop
add
pop
pop
add
push
pop
add
pop
add
push
pop
add
pop
add
jo
add
pop
add
dec
pop
add
fs
add
push
pop
add
pop
pop
add
outsb
pop
add
pop
add
pop
pop
add
pop
add
dec
pop
add
jo
add
jo
add
pop
add
pop
add
push
pop
add
pop
pop
add
fs
add
dec
pop
add
pop
add
dec
pop
add
push
pop
add
pusha
pop
add
pop
add
pop
add
gs
add
pop
add
pop
add
pop
add
pop
pop
add
pop
pop
add
dec
pop
add
pop
pop
add
imul
bound
pusha
pop
pop
add
pop
pop
add
dec
pop
add
pop
add
pop
add
add
pop
pop
add
pop
pop
add
jo
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
add
pusha
pop
add
pop
pop
add
push
pop
add
pop
add
push
pop
add
pop
pop
add
addr16
add
pop
pop
add
push
pop
add
mov
pushl
popl
mov
movl
lea
jmp
cmc
bt
movzbl
jmp
push
pusha
push
mov
pushf
lea
jmp
pushf
popl
push
mov
call
test
movl
cmc
sub
jmp
call
or
call
sub
call
aam
cmc
ror
movsbl
mov
cmc
sub
pusha
pusha
mov
push
pushf
pushf
lea
jmp
not
mov
lea
jmp
jmp
pushl
popl
pushf
mov
mov
lea
jmp
mov
pushf
call
call
mov
shl
pushl
popl
cmp
pop
movl
test
sar
bsf
mov
pusha
push
not
cmc
bt
cmp
sub
mov
call
pushl
pushl
mov
mov
mov
movb
pushf
lea
jmp
pushl
call
repz
popl
movw
push
test
cmp
mov
pushl
stc
jmp
jmp
rol
bswap
mov
bt
dec
mov
pusha
clc
pushl
stc
sub
sub
jne
shr
push
pushf
mov
pushf
pushf
popl
push
pushl
popl
pusha
lea
jmp
push
jmp
cmp
mov
mov
push
test
mov
pusha
bt
cmc
mov
bts
call
push
mov
pushf
mov
jmp
push
pushf
popl
pusha
jmp
sar
not
and
or
mov
bt
bt
pusha
cmc
sub
bt
call
pushf
popl
push
call
pusha
mov
call
bt
mov
cmc
pushl
bsr
cmc
pusha
movl
call
sub
clc
shl
jmp
pushf
call
cmp
sub
call
mov
pushl
mov
call
call
mov
pushf
mov
pushf
pushf
movb
mov
lea
jne
cmp
xor
ror
bsr
mov
test
push
cmp
and
pusha
test
cmp
movb
call
pushf
jmp
shl
jmp
bswap
notl
shl
movzbw
mov
push
clc
jmp
movsbw
not
movl
shl
cmp
jmp
lea
cld
call
pushf
popl
movb
lea
jg
popl
push
lea
jmp
jmp
push
cmc
push
shld
jmp
pusha
call
pusha
pushl
popl
pushf
push
lea
jmp
add
setne
movb
mov
call
rol
pushf
pushf
call
xor
pushf
push
call
push
pusha
call
xchg
pop
movzbw
push
mov
movw
std
cld
cld
pushf
push
call
pushf
push
repz
popl
movw
mov
stc
cmc
call
daa
mov
shl
neg
cmc
and
mov
cmc
bt
pusha
cmp
add
call
movzbw
sub
call
pusha
mov
sub
pushf
jmp
inc
test
sbb
xor
rdtsc
cmc
stc
jmp
mov
push
pusha
pushl
movb
mov
push
lea
jmp
sar
mov
cmp
pushf
mov
add
pushl
lea
jmp
movb
call
test
xchg
and
mov
btc
xor
bt
cmc
mov
sub
pushl
popl
rcl
bswap
pusha
movl
pop
mov
mov
clc
push
bt
movl
not
cmc
sub
pushf
push
movw
not
pushl
mov
push
push
lea
jmp
mov
lahf
mov
mov
mov
push
push
movw
push
divl
call
cwtl
pusha
setns
mov
movsbw
mov
push
movb
call
call
stc
test
pushl
jmp
not
bt
pushf
mov
rol
push
mov
add
call
not
pushf
lea
jmp
pushf
movb
movl
pusha
call
call
sub
jmp
sub
pusha
call
add
pushf
pushl
push
pushf
lea
jmp
movb
mov
pushf
pushf
pushf
pushl
lea
jmp
jmp
sar
mov
cmp
movb
test
call
call
call
mov
pusha
push
pushf
popl
movl
pushl
popl
push
pushl
movb
lea
jmp
pushf
pushl
popl
pushf
push
pusha
lea
jmp
mov
movl
pushf
popl
jmp
pushf
popl
jmp
adc
mov
cmc
test
add
pushf
mov
lea
jb
pushf
pushf
pushf
pushl
popl
pusha
movb
lea
jmp
mov
push
lea
jmp
test
mov
rcl
mov
call
call
pusha
neg
pushf
mov
or
shl
or
cmc
mov
clc
sub
pusha
jmp
bt
neg
setg
neg
shld
shl
bsf
sub
rcr
bsf
shr
xor
or
btr
and
inc
lea
mov
shl
mov
stc
clc
pushf
jmp
movw
mov
movb
jmp
push
repz
popl
jmp
bt
not
cmc
bt
sub
pushf
pusha
pusha
not
movb
push
pushf
lea
jmp
mov
cmc
jmp
add
movsbw
push
shld
lea
mov
mov
pusha
mov
movl
cmc
not
call
lahf
and
clc
mov
cmp
clc
sub
pushf
jmp
test
neg
btc
bt
neg
xor
sub
rol
pushf
xor
bts
and
mov
inc
bt
shld
mov
pushf
bt
pusha
sub
jmp
lahf
mov
call
jmp
mov
jmp
pushl
mov
jmp
pushf
jmp
mov
jb
pusha
movb
pusha
mov
mov
pushf
lea
jmp
lahf
btr
movzww
call
pusha
pusha
add
pushf
mov
mov
lea
jmp
mov
pushf
pusha
pushf
pushl
lea
jmp
call
call
not
clc
mov
pushf
sub
jmp
pushf
repz
popl
movw
bt
test
mov
pushf
mov
call
mov
cmp
cmp
push
cmp
push
jmp
jmp
mov
pushf
popl
push
pushl
popl
pushf
lea
jmp
movw
pushf
popl
pushf
pushf
pushl
popl
mov
mov
mov
lea
jmp
pushf
push
pushl
popl
pushf
movb
pusha
lea
jmp
mov
mov
pusha
pushl
ret
mov
movw
lea
jmp
shrd
mov
push
cmc
cmc
bswap
jmp
movb
pushf
mov
push
mov
pushl
lea
jo
pushf
pushf
jmp
mov
cmc
test
not
call
mov
cmp
mov
pushf
call
rol
mov
sbb
btc
bsf
lea
push
or
shld
add
add
not
btc
shl
mov
movzbl
pushf
call
mov
pusha
push
movl
pushf
lea
jmp
push
pushf
push
mov
pushf
movl
pushf
lea
jmp
mov
pushf
pushl
lea
jmp
btr
clc
movl
sar
neg
mov
cmc
jmp
neg
shr
xchg
mov
not
mov
pusha
pusha
sub
cmc
stc
pushf
shr
push
pushf
lea
jne
mov
pusha
jmp
mov
movw
pushl
pushl
ret
sub
push
call
mov
pushf
movsbw
mov
cld
cld
lea
push
jmp
pusha
mov
cmp
stc
movl
or
mov
jmp
movzbw
push
shrd
movsbw
bt
call
add
pusha
call
movl
mov
lea
jne
shl
xorb
push
bswap
movsbl
call
clc
mov
pushf
test
bt
mov
mov
pushl
bt
stc
xchg
shld
or
mov
mov
movw
pop
or
mov
shl
clc
pushl
popl
btr
movl
shl
mov
pushf
not
test
mov
push
sub
push
not
push
lea
jmp
pusha
pushl
mov
pushf
mov
pushf
popl
movb
pusha
pushl
popl
pushf
pushf
mov
mov
lea
jmp
movsbw
call
mov
push
jmp
cmc
mov
mov
pushf
bt
xchg
test
push
shrd
push
shrd
pushl
jmp
pushf
call
pop
shl
pop
mov
shl
pop
ror
xor
bswap
pop
btc
rol
dec
shr
pop
add
or
pusha
bsf
mov
cmp
sar
shl
pushl
popf
setns
mov
mov
push
mov
pushl
ret
bt
pushf
add
call
rcr
setae
mov
cmc
cmp
sub
push
push
clc
add
jmp
shld
mov
cmc
add
push
pushl
movb
lea
jmp
lea
jne
push
call
pushf
mov
jmp
cmc
shr
mov
call
jmp
pushf
call
mov
test
lea
jb
pusha
mov
push
jmp
cmc
stc
xchg
bsr
btr
btc
and
mov
btc
add
shrd
mov
bsf
pushl
xor
push
sbb
mov
pusha
test
mov
bt
not
call
sub
mov
pusha
jmp
mov
push
pusha
pushf
lea
jmp
pushl
jmp
not
pushf
push
lea
jmp
xadd
btc
mov
rol
stc
dec
mov
push
cmc
sub
stc
test
stc
cmp
shl
push
mov
pushf
pushf
push
pushf
popl
call
btc
clc
adc
mov
clc
add
pusha
movb
lea
jmp
mov
test
add
push
push
pusha
pushf
lea
jmp
push
call
stc
stc
sub
pushf
movb
push
pusha
not
push
push
lea
jmp
call
clc
dec
add
shl
movzbl
clc
xor
bswap
inc
not
dec
dec
neg
pusha
ror
shld
add
dec
bsf
rol
not
xor
bswap
neg
mov
cmp
cmc
bt
add
pusha
mov
push
mov
lea
jmp
mov
pushl
popl
pushf
lea
jmp
push
pushl
mov
push
repz
popl
pushf
pushf
pusha
mov
clc
mov
push
mov
test
jmp
clc
push
sub
call
push
pushf
clc
xchg
sar
push
mov
or
push
ror
pushl
or
add
push
bsf
test
add
mov
call
cltd
shld
mov
add
or
rcl
mov
shr
mov
rcr
mov
cmp
add
pusha
add
jle
clc
bt
shld
jmp
rol
clc
call
push
mov
jmp
movb
mov
lea
jbe
pushf
movw
pushf
pushf
popl
jmp
rcl
mov
rcl
cmp
stc
mov
cmc
pushl
popl
rcr
call
cmc
add
jmp
mov
pushf
movb
pushl
movl
lea
jmp
mov
pushf
pushl
mov
call
push
push
not
cmp
bt
test
stc
sub
pushf
not
pushf
lea
jmp
not
push
lea
jmp
bt
lahf
sbb
mov
rol
inc
mov
push
cmp
pushf
add
mov
jmp
jmp
clc
pushf
pushl
popf
movw
lea
jmp
sub
jmp
call
clc
mov
not
mov
bt
cmp
jmp
bsf
xor
ror
cmp
shld
xor
neg
mov
clc
neg
neg
call
not
mov
pushf
push
lea
jmp
pushl
mov
push
push
pushl
push
lea
jmp
repz
popl
cmc
movb
mov
pushl
mov
cmc
mov
pusha
jmp
pushl
popl
pushl
lea
jmp
mov
jmp
jmp
or
shl
xor
lea
sar
stc
sub
not
push
ror
movzbl
movzbl
clc
jmp
call
push
mov
jmp
pushl
popl
mov
mov
movb
lea
jmp
call
pushl
pushf
popl
pushl
push
push
pushl
popl
pushf
movl
pushl
movb
lea
jmp
mov
pushl
movb
lea
jmp
pusha
mov
pushl
cmp
cmc
call
push
xchg
call
sub
cmp
pushf
sub
cmc
cmc
call
cmc
rol
call
mov
push
mov
movl
pushl
lea
jmp
cmp
add
push
jmp
mov
jmp
jmp
pusha
call
and
cmc
lea
mov
cmc
not
pusha
clc
sub
call
movb
pusha
lea
jne
pushf
mov
pushf
pusha
lea
jmp
shr
call
btc
push
lea
cmp
stc
pushf
pushf
cmp
pushf
lea
ja
rdtsc
mov
sar
movsbw
bsr
lea
stc
sub
sbb
add
lea
bsf
or
movsbw
clc
and
pusha
shld
bt
neg
sub
movsbl
mov
pushl
movzbl
mov
jmp
sub
bt
test
mov
jmp
or
bt
stc
xor
pusha
pushf
inc
push
lea
jle
push
decl
pushf
call
sbb
xor
cmp
xor
sub
jb
test
shl
inc
xor
rol
btc
rol
rol
sub
cmc
mov
rcr
movzbl
clc
ror
rcr
not
mov
stc
ror
clc
pushf
test
add
call
call
add
pushf
lea
jmp
call
jmp
call
rol
clc
add
pusha
pushl
sub
test
test
call
mov
pusha
call
clc
movw
rol
pushf
dec
jmp
movsbw
mov
jmp
bt
pusha
cmp
call
pushl
popl
pusha
pushf
pushf
lea
jmp
cmp
add
bt
pushf
stc
cmp
sub
stc
mov
push
sub
pushf
mov
pushf
lea
jmp
call
add
lea
jl
pusha
pushl
mov
push
lea
jmp
mov
mov
jmp
pushf
push
pushf
mov
pushl
jmp
pushf
stc
mov
mov
test
xchg
movsbl
mov
pop
bsr
rcl
mov
movsbl
ror
rol
pushl
popl
sar
dec
bsr
bswap
movl
adc
stc
test
mov
pusha
sub
jl
not
bt
pusha
sub
push
call
mov
rep
bt
neg
mov
shr
pushl
mov
cld
call
movl
push
mov
lea
jge
pushf
push
repz
popl
jmp
push
call
xchg
rcr
sbb
rcr
add
mov
lea
mov
btc
bsr
clc
movzbl
pushl
popl
shr
pop
stc
movl
stc
mov
push
cmc
not
test
clc
call
push
pushf
popl
pusha
pushl
popl
pusha
lea
jmp
bswap
mov
call
pushl
not
pushf
push
pushf
pushf
lea
jmp
call
jmp
not
pusha
clc
pushf
sub
jmp
add
stc
pushl
clc
sub
call
call
mov
call
call
lea
je
clc
sub
clc
xchg
cmc
cmp
push
push
test
sub
pusha
call
jmp
xor
shrd
xor
test
mov
jmp
xchg
mov
ror
adc
sar
add
call
aas
or
shld
movzww
cmp
cmp
test
bt
xchg
clc
pusha
bt
clc
add
cmp
bt
movl
call
call
call
pusha
pushf
pushf
mov
repz
popl
pushf
clc
mov
clc
clc
stc
mov
bt
cmp
mov
movw
pusha
bt
push
mov
bt
call
xchg
sar
clc
movzbw
shr
mov
neg
adc
mov
clc
pusha
bt
test
pushl
popl
lea
call
call
push
jmp
cmp
mov
cmc
clc
jmp
pushf
pushf
popl
pushf
movb
pushl
popl
pushf
pushl
lea
jmp
repz
popl
test
stc
push
test
push
cmp
push
call
call
test
push
add
mov
movb
pushl
pushf
lea
jmp
mov
pusha
pushf
pushf
movl
lea
jmp
pushl
mov
pusha
mov
movb
pushf
lea
jmp
call
pop
mov
sbb
btc
jmp
rol
mov
seta
cmp
test
mov
stc
call
push
mov
pushf
pushl
pushf
lea
jmp
mov
pushf
pushl
movb
lea
jmp
lea
cpuid
test
stc
stc
sub
stc
jmp
mov
mov
mov
pusha
pusha
lea
jmp
call
test
sar
shl
mov
pushf
sub
jns
cmp
bt
add
pushf
push
pushl
lea
jmp
mov
movb
pushf
call
pushf
popl
call
call
pusha
mov
jmp
btr
mov
bt
btc
add
pushf
rol
btr
not
pushl
movzbw
call
mov
movsbw
mov
pushf
mov
jmp
pushf
mov
pusha
mov
lea
jmp
jmp
call
mov
clc
mov
xor
call
jmp
dec
cmc
stc
cmc
pushl
rol
call
mov
pushf
mov
push
mov
lea
jmp
stc
push
ror
push
lea
neg
mov
bsf
shl
push
bts
pushl
jg
rol
cmc
not
push
sub
sub
bsf
neg
mov
cmp
cmc
pushf
not
pusha
pusha
bt
sub
pushf
jmp
mov
sub
mov
pusha
pushf
call
add
call
cmc
shl
jmp
