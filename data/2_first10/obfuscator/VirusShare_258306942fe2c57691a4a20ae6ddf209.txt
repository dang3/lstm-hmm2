incl
inc
add
inc
add
push
pusha
rorl
xor
nop
and
add
add
pusha
push
or
xor
call
decl
adc
or
and
add
add
jg
jle
addb
push
sbb
adc
or
add
sbb
jg
mov
lcall
inc
sub
add
inc
inc
or
and
inc
andb
mov
pushl
add
or
xor
add
or
cmp
push
add
das
or
lcall
push
dec
and
orl
pushl
fildl
pusha
iret
in
dec
decl
pop
dec
adc
test
add
inc
adc
cs
mov
and
addb
cmp
dec
and
add
add
nop
adc
and
and
and
add
sbb
xor
adc
or
xor
test
xor
add
pop
mov
add
orb
add
pusha
inc
inc
push
or
and
or
inc
lock
add
and
mov
addb
push
sbbl
inc
lock
inc
sbb
shrb
incl
int
jb
mov
lret
inc
and
push
add
sbb
pop
movl
call
addr16
xor
pop
rolb
or
lods
inc
add
dec
movsb
dec
sbbb
cmp
inc
jno
cmp
decl
or
je
mov
push
jo
and
ljmp
pushf
add
cwtl
add
loop
xor
add
aas
mov
or
fidivl
in
aam
cld
mov
or
mov
push
scas
push
idiv
pusha
scas
loopne
add
jns
ja
sarb
loopne
mov
fcom
xchg
pop
mov
cs
sbbb
cmpsb
daa
lods
dec
cmp
lcall
mov
fists
sbb
shrl
pop
sbb
sbb
loopne
jno
sbb
std
xchg
xor
das
in
incl
add
add
or
push
pop
xchg
int
xor
sbb
inc
fcomip
add
and
sub
sbb
add
popa
ret
ret
jecxz
sub
imul
push
mov
add
push
add
je
add
imul
adc
int3
addr16
incl
mov
push
sahf
roll
mov
add
push
pop
adc
cld
pushl
xchg
ret
push
scas
jl
jo
or
out
mov
mov
loop
add
stc
lcall
push
cwtl
rorb
cld
pop
icebp
pushl
add
dec
push
mov
repz
add
mov
xlat
pop
mov
mov
ds
movsb
test
pop
mov
adc
cmp
es
xor
xchg
mov
mov
insb
loopne
pushl
add
pusha
into
sub
lock
jge
into
das
ja
in
lods
in
rclb
clc
sbb
dec
push
shlb
fldt
cltd
add
add
dec
es
daa
xchg
je
fildl
inc
sub
add
pushf
pushl
jmp
mov
leave
mov
shlb
ret
add
daa
cmp
pop
xchg
enter
dec
notl
es
xchg
add
ss
repz
mov
cmp
add
or
add
or
push
mov
jle
pop
jp
mov
adc
jp
leave
push
push
sti
or
loop
fcmovnb
and
sub
in
xchg
scas
hlt
jbe
or
mov
icebp
cwtl
and
into
add
cmp
scas
sub
daa
pop
mov
add
jo
test
mov
lock
and
push
push
xor
xchg
mov
ret
loop
rcl
decl
es
mov
mov
rolb
mov
das
out
sbb
fcomps
into
or
cmp
ffree
pop
inc
dec
hlt
incl
jl
inc
movsl
aaa
ljmp
loope
pop
ret
sti
fistps
jo
sub
push
pop
sbb
xor
test
incl
popl
icebp
add
outsl
xor
out
stos
push
in
addr16
push
out
mov
arpl
enter
cwtl
mov
mov
add
aaa
ljmp
or
sub
add
enter
je
or
pushf
fldcw
or
or
movsb
js
enter
hlt
push
adc
xchg
ret
stos
sub
lcall
or
and
cli
lods
or
aad
sti
mov
ds
inc
in
xor
cmpsb
xor
xor
xchg
imul
lret
add
jle
xchg
push
xor
mov
aas
pop
cld
ret
add
pop
into
aam
aaa
cwtl
decl
push
add
gs
adc
andb
push
cmp
mov
loope
mov
xchg
dec
mov
add
push
stos
movsl
ljmp
pop
jle
xlat
jp
push
lock
jecxz
sub
and
ret
push
adc
imul
mov
jge
pop
fsts
stos
cmp
test
sub
mov
or
fisubrl
mov
fiaddl
ret
int
leave
xchg
repnz
rcrl
inc
loopne
sub
mov
jno
mov
mov
jg
cld
push
dec
dec
xor
adc
mov
mov
sub
shlb
dec
ljmp
lret
ss
inc
xlat
js
cmpxchg
loopne
xor
aas
xor
xor
cs
aam
push
ss
notl
lods
cwtl
subb
xor
mov
aas
dec
mov
mov
jp
adc
repnz
mov
sub
push
fnstsw
or
das
pop
stos
popf
in
inc
dec
int3
outsb
int3
or
out
fisttpll
xchg
sahf
add
and
fstpt
test
roll
add
ds
lcall
add
in
add
stc
in
aas
outsb
in
pop
cmc
add
sbb
dec
cmpsl
outsb
outsl
sub
mov
and
add
cld
and
and
in
and
and
mov
add
cmp
add
iret
add
sti
lret
movsl
pushf
push
shll
and
fstpt
pop
or
cmp
xchg
push
adc
in
push
cmpl
push
or
fistpll
decb
andl
jge
mov
lock
je
shrb
inc
dec
dec
xor
movsb
push
add
out
decl
sub
adc
ja
loop
std
sbb
daa
test
mov
push
mov
sti
xor
iret
mov
inc
loopne
or
mov
push
scas
repz
cmp
add
in
mov
mov
sbb
jbe
rcr
cmpsb
dec
push
shll
ja
incl
mov
icebp
dec
jp
or
loope
sbb
das
cli
shl
stc
fnsave
arpl
mov
inc
imul
aaa
sti
mov
mov
xchg
loopne
and
rclb
pushf
add
pop
jno
jo
add
adc
pop
mov
daa
jne
dec
mov
pop
fcoml
divb
sub
test
call
mov
cli
sbb
mov
dec
jmp
mov
das
pop
push
adc
scas
xchg
dec
fwait
sbb
jge
sahf
inc
sbb
aam
pop
xchg
mov
nop
inc
in
sbb
fwait
sub
jmp
cmp
mov
fcoms
orb
pusha
mov
fwait
mov
into
cwtl
inc
fcmovbe
jle
mov
shlb
add
jno
dec
js
pop
or
cwtl
pop
roll
decl
add
xchg
add
outsb
movq
and
dec
inc
outsl
outsl
jg
or
fiaddl
incb
cmpsl
xchg
inc
or
shlb
jbe
cwtl
faddl
push
fcomip
jg
ret
popf
push
mov
xor
cld
jp
inc
dec
cmp
adc
pop
or
sar
fcmovnbe
and
scas
mov
les
mov
sahf
fwait
xlat
out
sbb
jg
out
mov
sub
stos
xor
ljmp
push
sahf
adc
popa
or
fcomip
mov
data16
sbb
testl
or
sub
bound
pusha
mov
outsb
sub
sub
and
aam
cli
xor
incl
rcrb
add
scas
pop
pandn
ljmp
sub
and
sti
mov
jns
add
push
and
or
pop
adc
std
fbstp
mov
mov
sub
xor
push
adc
mov
loop
imul
inc
xor
push
outsb
sub
leave
sub
jbe
sbb
pop
in
incl
inc
adc
push
ret
inc
loope
repnz
clc
inc
ljmp
push
mov
jb
cld
push
out
sub
lock
test
add
std
call
inc
sbb
pop
xchg
push
xchg
sub
stos
inc
andl
cli
dec
xor
jmp
adc
push
rclb
ror
mov
adc
cmpsb
add
and
xchg
clc
ljmp
and
in
add
add
ss
fwait
mov
ficomps
add
or
std
stos
enter
int
loopne
add
js
pop
fsubrs
xorb
xor
add
cmp
decl
rorb
int
and
lret
test
dec
inc
mov
or
int
add
add
imul
mov
push
cmp
sbb
xor
push
push
and
imul
fstpl
jp
addr16
fistpl
mov
clc
lret
fwait
movsl
jbe
dec
xorb
xchg
loop,pt
cmp
out
outsl
notb
stos
and
outsl
mov
mov
jbe
or
mull
or
and
xor
int3
shrl
push
pop
scas
fcomip
push
arpl
mov
cltd
daa
jno
push
sbb
jp
mov
mov
cli
das
ljmp
mov
jb
in
cpuid
rcrl
dec
sbb
mov
xchg
sarl
or
lahf
fstpt
fdivrp
add
mov
or
mov
cmp
mov
add
test
jg
loopne
mov
rorb
and
movsb
jno
or
xchg
in
and
fcomip
mov
out
outsb
dec
dec
sbb
js
pop
add
xchg
pop
fdiv
xlat
or
into
mov
mov
push
mov
rcr
xlat
pusha
pop
scas
popf
aas
sar
mov
mov
cmp
xchg
xor
push
arpl
dec
das
clc
scas
imul
rorl
jo
imul
mov
jns
addb
cmpsb
sbb
dec
arpl
lock
mov
lods
push
sbb
loope
and
lock
jnp
push
mov
rcll
ret
xor
aas
std
jge
shrl
lock
in
xchg
popf
or
fistpl
dec
jg
jmp
test
es
jg
xchg
cld
inc
clc
push
sub
nop
loop
push
cli
pushl
mov
movsb
push
add
add
mov
pushf
pusha
sbb
sahf
cmpsb
out
movsb
cmp
and
push
leave
adc
add
dec
dec
loop
pusha
es
test
xchg
stos
inc
repnz
or
adc
ret
inc
pop
dec
test
mov
and
cld
mov
lods
bound
fdivl
sub
adc
dec
out
shrl
adc
add
jo
fnsave
adc
outsl
xchg
xchg
pop
inc
mov
xor
jmp
call
ss
push
push
adc
add
dec
jg
mov
shl
and
pop
adc
and
push
mov
sub
and
mov
es
cmp
xor
adc
mov
jbe
lds
roll
dec
pop
push
add
aaa
inc
std
or
out
inc
or
sbb
lods
loope
mov
add
in
and
sbb
into
xor
iret
adcb
or
pop
pop
movsl
pop
popa
push
int3
adc
into
inc
jae
aaa
cld
pushl
sbb
mov
cmp
jae
sbb
sbb
or
sub
rorl
imul
push
rorb
jg
in
cwtl
orl
inc
mov
fsubrl
sbb
testb
call
fs
imul
stos
sub
imul
push
std
push
inc
loopne
cltd
xor
and
jge
rcrl
mov
fdivrl
xorb
pause
add
push
popa
adc
inc
cmpsl
fwait
or
rcrb
pop
je
jg
add
call
cmp
cmp
lret
or
les
push
incb
outsl
aam
rcrb
loope
add
outsl
insl
xlat
stos
add
imul
aad
hlt
mov
in
add
in
andb
inc
repnz
subl
jle
and
jo,pn
arpl
cmp
cmp
ja
int3
loop
mov
pop
jbe
jg
loopne
je
or
scas
insb
pop
cmp
pop
sti
in
ja
mov
std
sbb
xchg
mov
hlt
sbb
scas
outsl
push
call
lds
test
lret
or
insl
xor
pop
inc
ret
cmp
mov
mov
push
sbb
push
es
mov
mov
lcall
push
adc
scas
scas
xor
enter
xor
cmp
decl
pusha
loop
int3
jmp
sbb
cmc
adc
jp
pop
mov
cmc
jb
es
fcoms
and
mov
mov
add
xor
gs
mov
push
hlt
add
movsl
into
subb
sbb
push
js
mov
inc
jbe
mov
add
mov
gs
mov
cmpsb
cmp
sub
loopne
push
sbb
adc
cmp
filds
imul
arpl
sbb
pop
sbb
addl
and
test
cwtl
cmp
incl
enter
mov
stc
sub
mov
sub
fwait
xchg
es
decl
loopne
outsb
shlb
push
add
ja
xor
rclb
sti
add
mov
mov
push
in
jp
xor
jo
sbb
pop
test
inc
arpl
cmpsl
aas
mov
fildll
stc
add
pop
insl
test
push
insl
stc
add
incl
outsb
jl
test
cld
rorl
scas
adc
outsl
or
pop
inc
push
into
and
test
add
sbb
mov
cs
int
xchg
add
jo
and
mov
pop
test
or
int
imul
js
inc
pop
mov
mov
cld
out
push
cmp
push
or
xchg
add
jns
cmp
fcmovbe
sbb
lock
hlt
filds
movl
jb
add
fwait
enter
cmp
and
push
addb
xor
imul
hlt
inc
fldt
dec
dec
lea
das
push
das
inc
jp
xchg
pop
hlt
adc
xor
sbb
scas
clc
inc
int
adc
sbb
js
add
sbb
std
das
push
cwtl
fdiv
xor
cmp
mov
iret
repnz
push
pushf
stc
mov
aas
inc
sbb
add
repz
loope
inc
call
inc
sahf
outsl
sbb
add
add
cmp
sbb
ja
cltd
add
jecxz
ljmp
orl
subl
inc
add
addr16
mov
std
pop
cwtl
cmpb
push
filds
dec
jne
daa
xchg
mov
mov
xchg
xor
rcrl
push
mov
bound
js
mov
fwait
xor
add
xchg
mov
cmp
inc
das
cli
cmp
push
add
mov
fistps
dec
roll
jle
loopne
dec
push
shll
cld
inc
inc
shl
push
cld
add
add
adc
fisttpll
leave
bound
decl
inc
or
add
and
shlb
dec
inc
jmp
or
pop
mov
push
adc
notb
sbb
adc
into
xor
aaa
inc
jmp
aaa
mov
and
pop
mov
cmp
ja
inc
xchg
mov
and
dec
ss
mov
or
mov
pushf
stos
and
pop
mov
inc
outsb
fstpl
xchg
pop
push
std
decl
pop
hlt
out
mulb
or
mov
fldt
push
cld
push
xor
xchg
icebp
push
loop
xlat
sbb
xor
add
rol
adc
stos
fstpt
je
rcr
and
mov
repz
int
and
xor
repnz
incl
clc
xor
xor
dec
shlb
mov
xchg
jmp
je
push
lcall
add
faddl
lods
imul
fcomp
push
pop
cwtl
sbb
mov
and
inc
aad
and
fsubl
and
adc
jg
push
ss
sarl
push
iret
lret
or
in
xchg
jmp
inc
mov
push
dec
xchg
xor
sbb
inc
clc
scas
lock
cmp
sbb
sarl
sbb
push
or
aam
jb
ljmp
mov
es
push
cmp
les
daa
add
clc
es
insb
pusha
xor
test
add
fistps
daa
fmull
pusha
push
jno
lock
and
mov
aas
fucomp
jo
cld
movsb
in
jl
popa
fstpt
fwait
mov
in
add
inc
outsl
push
sbb
mov
int3
xor
jge
rcr
inc
pop
lods
jp
ss
in
ja
adc
mov
mov
aas
fcomps
add
ret
les
out
add
or
cmp
ret
mov
adc
push
jg
push
mov
aad
movsl
adc
loop
push
aaa
add
loopne
jecxz
loopne
sbb
mov
pop
std
xor
testb
lcall
pop
mov
inc
push
dec
loop
insb
push
jnp
test
idiv
jg
movsl
xor
push
lods
add
jmp
dec
mov
fwait
or
lret
or
push
mov
aas
mov
ds
add
adc
jg
jle
ret
pop
into
fucomp
hlt
cmpsl
ret
add
lds
push
adcl
dec
addb
loop
jns
push
rcrb
test
or
ljmp
inc
sub
pop
in
jbe
adc
adc
or
cwtl
add
test
xor
jg
ret
outsl
inc
or
outsb
jo
sbb
xabort
push
rclb
push
sbb
decl
add
push
pop
into
shl
add
ljmp
mov
add
mov
into
imul
jno
fistpll
xor
shrl
add
adc
and
cmp
es
scas
fs
subl
push
les
sbb
push
jbe
add
cmp
adc
inc
mov
loope
outsl
ds
add
jno
repnz
imul
data16
or
or
inc
stos
mov
mov
cmp
jmp
push
and
xor
arpl
add
pusha
inc
les
lret
shll
out
cwtl
loopne
xchg
pop
insb
enterw
adc
sbb
test
pushf
or
rcr
enter
sbb
mov
clc
in
mov
inc
roll
xchg
out
inc
sbb
jo
mov
outsb
dec
add
cld
cmpsb
jg
mov
fcoml
je
out
add
mov
lea
jbe
into
xor
mov
hlt
pop
out
and
leave
movsl
mov
sub
fsubrs
cmpl
les
jg
jmp
repz
mov
sub
cwtl
jmp
xor
jb
inc
add
in
mov
mov
add
mov
jmp
not
int
pushf
cmp
pushl
push
imul
movsl
dec
scas
mov
push
fwait
mov
cmp
push
hlt
push
icebp
jbe
push
jbe
mov
out
and
out
cmp
in
xchg
and
cmp
sbb
mov
rorb
adc
cmp
fisubs
add
icebp
sahf
ret
or
add
sub
add
jae
cmp
icebp
fwait
jmp
ds
sub
dec
lahf
enter
hlt
pop
cld
add
mov
sub
xor
rcll
xorl
ljmp
adc
mov
adc
in
add
addr16
test
mov
or
cmp
ficoml
lock
stos
mov
inc
push
jl
pop
repnz
mov
lods
cld
incl
adc
cmpsl
out
xchg
jg
xor
scas
mov
jbe
mov
lock
push
decl
or
xor
call
fwait
outsb
pop
sub
inc
xchg
or
cmp
jb
test
inc
mov
jecxz
aaa
loop
and
aaa
mov
dec
dec
and
or
mov
outsb
sub
dec
data16
mov
inc
ds
add
insl
outsb
xchg
call
push
pusha
xor
jo
dec
iret
dec
xchg
jg
imulb
js
lock
inc
test
add
cmp
rcrb
mov
ds
or
jmp
repnz
push
and
mov
jo
add
into
pop
call
in
addb
clc
mov
aam
sub
stos
xchg
push
push
push
sbb
sarl
pop
imul
pusha
mov
imul
mov
jg
sub
cmp
aam
adc
add
mov
dec
ret
cli
push
or
jmp
jmp
fisubl
inc
int3
push
pop
mov
in
push
nop
push
fidivrl
decb
and
cmp
and
stos
xchg
jg
fdivl
insl
or
jmp
push
sub
repnz
pop
stos
dec
cmp
std
mov
outsl
and
aaa
cld
sbb
xor
test
xchg
or
lds
lock
enter
inc
inc
add
test
inc
xchg
xor
adc
je
out
or
negb
dec
mov
dec
xor
scas
leave
or
mov
mov
adc
add
add
jmp
pop
mov
nop
mov
pop
jb
repz
push
sti
add
mov
sub
sbb
cmpsb
inc
pop
pop
add
pop
adc
bound
add
mov
mov
sub
mov
nop
sbb
jl
inc
data16
or
es
jecxz
scas
dec
xchg
jl
fiadds
loop
add
call
filds
mov
pop
cli
je
or
add
sbb
pop
call
or
mov
sbb
shrb
jg
dec
mov
jge
mov
cli
fnstenv
mov
or
mov
mov
out
orl
jg
movsl
cmp
mov
inc
fimuls
iret
sbb
ja
cltd
inc
test
pop
xlat
aaa
cld
out
lock
and
jnp
cmp
lret
sbb
cmc
sbb
lahf
sub
add
subb
outsb
xor
loop
fildll
jp
pop
xchg
ss
fidivrs
add
flds
lock
lahf
xor
push
mov
sbb
lock
ljmp
mov
std
pop
cli
bound
shrl
cmp
push
std
ds
push
xchg
shl
je
sub
mov
dec
xor
cwtl
mov
movb
jge
xchg
cmp
dec
nop
push
cmp
pop
jbe
pop
data16
jno
test
mov
sub
add
in
pop
mov
out
loop
xchg
mov
mov
jnp
sbb
push
xor
xchg
jecxz
stos
rorl
and
sbb
or
mov
mov
mov
or
outsb
and
push
fcomip
imul
adc
dec
cwtl
adc
mov
dec
incl
hlt
pop
mov
and
orl
aad
xorl
or
cmpsb
push
fisttpll
and
mov
lcall
fs
cmp
push
mov
jecxz
and
pusha
dec
and
das
fdivrs
or
mov
addr16
add
idivl
aad
pop
out
aas
lcall
loop
inc
ds
jno
jp
xchg
cli
adcb
add
testl
push
pop
sahf
movsb
fs
out
arpl
sbb
and
in
pop
sbb
pop
ja
call
mov
dec
mov
andl
fildl
loopne
xor
jb
pop
sbb
cmp
push
xchg
je
add
mov
jg
pop
es
dec
fwait
pop
push
loop
fs
das
clc
cmp
mov
ss
mov
jo
jge
cmp
inc
cld
add
pusha
in
jle
fdivrp
in
pushf
inc
pop
jne
imulb
gs
or
jnp
cli
fisttps
dec
mov
out
cmp
in
insb
pop
jb
ret
pusha
adc
clc
push
inc
inc
mov
xchg
xchg
push
shlb
rol
clc
shl
adc
inc
movsl
into
add
loopne
cmp
pushl
or
imulb
jmp
cmpb
push
cmp
inc
in
add
xor
scas
add
mov
xor
shll
or
xchg
mov
cs
push
shrb
decl
addr16
test
add
andb
int3
dec
ss
mov
pushl
daa
mov
mov
enter
nop
mov
cli
pop
add
pop
cli
lds
loopne
mov
call
cmp
and
movsb
add
je
xchg
pushf
xchg
jmp
mov
cld
push
bound
ss
pop
pop
cmpsb
es
cmp
cli
out
cli
lcall
or
cld
pslld
xorl
mov
xchg
dec
or
xchg
add
xchg
dec
jg
pop
xor
call
jecxz
push
ja
or
movl
ror
inc
rolb
mov
fincstp
cwtl
and
add
add
add
pop
or
negb
popa
std
pop
fcomip
testb
push
and
or
pop
cs
cmp
mov
adc
testb
and
cld
push
fcoml
js
fdivs
popa
movsb
dec
mov
es
in
test
mov
jno
inc
in
in
jo
lahf
jge
loope
or
sbb
popf
es
loop
mov
testb
mov
and
pop
push
loop
mov
into
pop
sbb
lcall
pop
pushf
ret
xchg
lods
outsb
add
in
pop
jecxz
lods
call
shll
xchg
cmp
inc
aam
mov
inc
mov
cmp
mov
aaa
test
das
lcall
mov
xlat
add
test
cmpl
add
add
mov
sbb
orb
add
lahf
lock
and
push
xchg
adc
mov
sbb
cmpsl
lret
and
sbb
test
ds
stos
mov
data16
test
add
out
sbb
jle
sub
push
hlt
add
into
cmp
in
mov
cli
dec
mov
inc
clc
mov
test
pop
mov
adc
loopew
mov
fcomip
pop
inc
sub
fistpl
jmp
dec
mov
subb
out
push
jecxz
and
mov
or
js
mov
movl
scas
outsl
outsb
sbb
push
nop
mov
cmp
mov
dec
pushf
add
jns
mov
inc
or
imul
and
mov
or
in
pushl
faddl
cmp
cmpsl
fcom
shl
fdivs
sbb
dec
jl
add
sub
fcomip
popa
xchg
and
sub
ret
mov
insl
xchg
pop
jo
incb
add
fcmovb
add
mov
in
cmp
leave
gs
test
adcl
adc
rol
adc
jo
mov
shll
add
cmp
lret
sahf
das
xor
jns
add
stos
mov
in
loop
jle
ljmp
add
mov
ret
std
jne
fwait
add
xchg
loopne
repz
sahf
inc
cmp
or
call
xchg
pushf
fwait
inc
mov
aam
cwtl
fisubl
repz
mov
adc
nop
adc
subl
into
mov
scas
addr16
and
test
xor
xchg
movsb
add
push
sbb
push
jmp
pop
jle
popa
repnz
subb
lock
jg
in
mov
rcl
pop
or
push
xlat
mov
inc
mov
inc
adc
adc
xchg
pop
inc
or
pop
data16
jl
stos
jmp
incl
mov
mov
mov
ds
adc
lret
incl
sub
mov
add
push
es
inc
es
push
std
pushl
loope
pop
xor
sub
sarl
or
es
or
pop
cld
pop
fdivrl
xor
add
stos
inc
cli
clc
xor
mov
sbb
cli
gs
into
ljmp
push
and
adc
scas
adc
pusha
dec
dec
sbbb
outsb
fstps
add
sub
stc
testb
or
sbb
jmp
jnp
es
enter
clc
jno
sub
sbb
rcll
cmp
fsubrs
mov
push
mov
or
add
and
add
movzwl
lret
mov
push
mov
push
xor
pop
andb
add
cmpsl
jle
jne
scas
sbb
mov
inc
cmp
sarb
jmp
pop
cmp
hlt
mov
movsl
mov
xchg
leave
adc
add
cli
cwtl
fnstenv
scas
jb
xor
ficoml
and
push
sub
rolb
mov
mov
fnstsw
lock
inc
dec
mov
cmpsl
push
or
jg
sarl
fcoms
imul
dec
hlt
test
adc
insb
sbb
pushl
js
xchg
fidivrs
fnsave
cmp
push
cmpsl
inc
mov
shl
ss
pop
insb
lods
lds
cmpsb
wrmsr
and
pop
loopne
push
pop
sbb
mov
xchg
out
and
push
adc
push
mov
push
xor
fbld
call
inc
jo
inc
mov
mov
sar
roll
xchg
pop
sub
or
cmp
or
sub
std
jge
inc
dec
cmp
add
shlb
mov
or
call
xor
stc
add
iret
or
mov
and
jno
fildll
mov
js
add
pop
add
or
pop
aam
cltd
lods
pop
leave
or
pop
test
jge
pop
mov
or
dec
push
push
mov
addb
jb
popf
js
outsl
cmp
call
adc
lds
pop
dec
sbb
stos
add
add
add
add
sub
push
add
dec
mov
lret
push
fistpl
loop
mov
and
xor
or
or
and
add
or
in
lret
mov
clc
mov
stos
lods
sbb
addb
or
inc
mov
xlat
pop
fdivl
add
or
cli
jg
rcrb
add
movsb
cmp
add
jmp
aas
cli
lock
push
enter
cmc
cmpsl
add
rcrb
in
and
clc
add
fs
sahf
or
cmc
cld
mov
lods
jge
imul
push
shll
bound
add
addr16
sub
push
push
es
repnz
add
cmpsb
adc
lret
xor
or
mov
incb
in
pop
in
ret
and
sbb
and
fisttpll
fwait
rolb
jb
adc
mov
loopne
std
sub
lret
shrb
and
cmp
adc
lods
adc
fs
pop
xchg
sub
jg
mov
add
xchg
mov
inc
lahf
mov
dec
fldt
pop
aam
incl
out
cmp
pushf
sbb
incl
push
add
jo
xchg
mov
mov
shll
out
ljmp
cld
mov
mov
jecxz
loope
int
adc
dec
xor
and
mov
ljmp
mov
jne
rorb
ds
or
addl
sbb
inc
jb
in
adc
lods
ret
add
int3
bound
loope
shlb
incl
insl
pushf
aam
testb
test
inc
cmp
fwait
subb
xchg
mov
je
sbb
outsb
and
push
pop
mov
clc
adc
test
loop
xchg
push
add
jl
inc
sub
xor
pushf
in
leave
xor
inc
add
incl
dec
jno
popf
int
pushl
pop
jb
out
add
mov
push
mov
cmpb
ljmp
add
es
adc
xchg
push
rclb
cmp
pop
push
dec
mov
adc
or
mov
dec
out
std
loope
cmp
movl
jnp
gs
test
and
fbstp
lock
rcll
jo
or
cmp
mov
pop
enter
inc
outsl
pop
pusha
popf
lcall
mov
cmp
popa
inc
out
pop
cmp
cmp
call
shrl
inc
das
add
mov
fiaddl
lahf
decl
jmp
pop
add
addl
mov
aaa
mov
and
orl
pop
add
inc
add
fcomip
cmp
in
orb
repz
add
pop
lea
add
int3
or
cmp
inc
rolb
icebp
decl
mov
lahf
je
sub
lret
jmp
test
lret
je
add
xchg
sbb
scas
mov
jbe
lds
cld
dec
xor
push
fsubrl
sub
call
xchg
xchg
xchg
inc
sbb
xchg
imul
ffreep
jecxz
sbb
jl
inc
js
mov
fdivrs
add
adc
pop
cltd
fs
cltd
push
xor
lds
mov
adc
or
rorb
add
push
sbb
dec
add
and
cmpsb
add
out
fistpl
mov
loop
add
fiadds
or
rol
fsts
add
jle
imull
in
fdiv
cmp
jg
adc
sub
clc
call
add
lds
cld
cmc
lcall
aas
repz
jae
dec
movsb
fisttps
in
jb
mov
inc
sub
xchg
pop
inc
xchg
inc
pop
push
jbe
mov
incl
fs
mov
adc
scas
cli
pop
subb
cmpb
out
les
dec
or
pop
insb
sahf
lods
add
mov
lock
rclb
jecxz
js
add
xor
das
movsb
into
cmp
push
jo
icebp
jp
push
std
aas
pop
mov
and
mov
divl
cmpl
fadds
add
jae
xchg
dec
hlt
fdiv
mov
cwtl
lods
or
xchg
shrb
mov
add
or
js
lret
adc
jg
mov
lret
lods
fcompl
pop
cwtl
lds
sub
push
sti
jnp
sahf
mov
es
push
dec
sti
dec
ret
jl
pushf
add
cmp
sarb
sbb
jmp
lock
mov
push
sbb
sbbb
loopne
mov
fmull
dec
cmpsb
push
sar
test
cmpsb
idiv
aaa
adc
lea
dec
xchg
fidivl
loopne
add
data16
mov
call
cmp
xchg
iret
loope
xor
cmp
fildl
loopne
andb
sti
mov
inc
popa
lea
inc
mov
mov
add
int3
cli
jno
jbe
shl
decl
inc
add
sub
mov
fcompl
ja
mov
jns
xchg
cld
clc
and
mov
mov
cli
push
out
xor
lahf
xchg
xor
xor
out
clc
lahf
ljmp
dec
push
lock
loopne
add
dec
mov
cwtl
imul
and
lcall
repz
das
and
dec
jge
lock
push
mull
xchg
xor
push
loopne
add
or
dec
cs
cmc
mov
xchg
dec
dec
test
inc
shl
faddl
add
dec
add
xchg
add
js
fbstp
pop
pop
mov
xchg
cld
dec
xor
sub
std
mov
mov
xor
mov
aas
and
or
dec
movsb
add
ljmp
pusha
scas
cwtl
faddl
adc
jns
scas
cli
lcall
push
lock
and
loopne
push
dec
sub
scas
pop
push
fcmove
dec
das
cli
sti
ja
sub
out
adc
rcll
push
stos
mov
jle
jno
incl
sbb
xor
sti
or
mov
fiaddl
outsl
inc
xor
xorl
shlb
jg
mov
out
or
cmp
and
nop
jg
icebp
push
sbb
loope
mov
repnz
scas
jns
jle
scas
inc
inc
pusha
test
sbb
loopne
mov
jg
xorb
jge
xlat
fdivrl
aad
cmp
out
test
push
cmpsb
call
push
dec
mov
dec
arpl
sub
pop
pushf
test
push
mov
loopne
and
mov
outsl
dec
scas
inc
nop
mov
inc
mov
hlt
jle
incl
inc
inc
adc
cmovnp
mov
in
aaa
cld
incl
js
add
jbe
movsl
jo
xor
sbb
mov
cmp
ret
dec
mov
loop
lcall
jg
aaa
test
in
clc
ljmp
pop
je
xor
pusha
add
jg
inc
jne
mov
xchg
inc
push
jb
cld
lcall
dec
pop
into
adc
lcall
les
test
and
icebp
add
les
push
bnd
push
out
mov
in
fstpl
je
imul
lret
mov
or
mov
dec
jmp
jg
jp
test
sbb
lds
add
add
pushf
loopne
stos
add
mov
mov
lods
fistl
mov
push
inc
data16
pop
mov
les
sbb
int
push
std
jg
inc
inc
test
xchg
and
imulb
lret
or
cmp
push
sub
std
pop
scas
xrelease
arpl
ja
mov
inc
cmp
xchg
mov
leave
les
mov
mov
push
dec
jbe
mov
or
mov
jp
or
mov
fcomip
dec
mov
sub
add
adcb
and
pop
clc
jg
push
add
mov
imul
add
adc
dec
and
and
test
js
lret
cmpsb
addl
xchg
movsb
adc
or
pusha
xorb
lret
jge
mov
push
es
cmp
pop
mov
mov
adc
lds
scas
jp
scas
and
nop
push
hlt
sub
add
testb
fmulp
dec
fisubl
pop
mov
loop
pushf
fwait
cmpsl
decl
sub
fisttpl
insb
mov
daa
dec
iret
push
ret
cmp
test
push
push
mov
in
fisubl
daa
movsb
xchg
adc
rolb
clc
scas
cli
jmp
rol
cmp
mov
cmp
sub
mov
inc
jg
cmpsl
aaa
dec
hlt
mov
push
imul
movsl
and
or
shlb
cmp
jns
ljmp
faddl
cli
add
xchg
cmp
and
adc
ja
dec
adc
mov
jmp
test
jns
ret
fwait
movsl
add
adc
and
jg
ljmp
sahf
ret
sbb
inc
mov
cmp
push
in
inc
jle
imul
xor
mov
aaa
insl
pop
loopne
fildll
addb
pop
clc
mov
lock
sub
and
stos
push
mov
das
jp
incl
mov
inc
add
adc
mov
xor
js
mov
call
dec
std
test
jbe
fcomps
shll
inc
sub
xchg
ja
cmp
adc
pop
stos
dec
or
push
push
and
jp
xor
jmp
add
cmpsl
int3
mov
push
jl
loope
mov
xchg
test
push
pop
sti
adc
xchg
mov
hlt
xchg
mov
cmp
mov
lret
or
ds
hlt
adc
jp
scas
addr16
aad
jl
lods
mov
inc
call
add
mov
iret
gs
rcll
outsl
clc
call
aaa
fcmovnbe
add
cmp
pop
negb
clc
xor
hlt
or
fdivrl
das
xchg
lea
aam
dec
mov
rorl
jp
mov
loop
xchg
add
dec
js
ret
add
inc
cltd
pop
sbb
int3
outsl
sar
jmp
mov
sbb
jno
inc
sub
daa
int3
movsl
jmp
mov
sarl
adc
and
xchg
mov
movq
xchg
std
mov
xchg
jecxz
in
loopne
fdiv
js
cmp
ret
ret
icebp
leave
jmp
in
popa
test
imul
cmpsl
adc
leave
out
push
adc
mov
cmpl
pushf
mov
aad
outsl
mov
inc
into
mov
mov
out
inc
mov
fucomp
inc
icebp
or
inc
pop
add
ret
das
mov
inc
adc
test
mov
push
pop
test
mov
loop
ljmp
sbb
adc
faddl
inc
mov
push
int
and
insl
push
xchg
lret
scas
add
jo
js
mov
mov
mov
bound
mov
rorb
sbb
lcall
mov
mov
adc
popa
data16
rcrl
lret
xchg
sbb
inc
lea
fsts
push
enter
in
add
decl
fcoml
lock
push
jno
into
cmpb
aaa
scas
clc
xchg
mov
sbb
js
lahf
and
lea
loopne
or
outsl
pop
hlt
in
ret
rolb
push
call
inc
and
sbb
fistps
test
imul
testb
sbb
je
mov
sti
mov
xor
jp
add
repnz
stos
mov
imul
sub
flds
lcall
jp
out
or
mov
out
mov
shll
sub
xor
popf
cmc
ja
mov
mov
add
popf
icebp
xchg
or
xor
aas
jae
jge
mov
fbld
dec
and
arpl
enter
or
add
pop
cmpsb
leave
fldenv
fsub
fcmovnu
incl
sbb
add
or
xchg
in
cli
test
push
lods
ret
cld
aas
sar
pusha
in
call
add
jl
daa
pop
sub
adc
pushw
mov
decl
add
add
adc
mov
pop
clc
aaa
dec
ja
cmp
loop
clc
outsb
sub
gs
mov
pushf
mov
mov
ret
push
add
mov
jne
pop
filds
out
sbb
lock
add
dec
lahf
mov
sbb
jg
lcall
mov
adc
jge
rclb
fcmovnb
add
loope
popf
stos
sar
mov
iret
lds
fs
out
ss
jge
and
xor
dec
pop
movsb
mov
decl
push
loop
frstor
rcrl
fstpt
cli
mov
jp
push
xor
inc
mov
dec
or
stc
add
jne
pop
pushl
cs
lock
aaa
add
mov
decl
outsb
sbb
mov
mov
add
out
mov
ret
jecxz
add
mov
add
inc
ret
inc
mov
ret
lea
out
mov
add
pushf
xchg
call
mov
arpl
add
stos
decb
andl
cmp
lea
jle
dec
jecxz
inc
jle
push
rclb
jnp
jmp
jle
ljmp
mov
cmpsl
and
sbb
aas
lret
popf
inc
aaa
inc
subb
jg
mov
add
xor
mov
nop
adc
jb
outsl
sbb
addr16
sarb
in
pushl
sub
inc
mov
xchg
inc
cmp
inc
rcrb
mov
jo
mov
addb
in
dec
add
lcall
cmp
aas
cwtl
ds
add
stos
lock
std
xchg
fimuls
clc
xchg
fcmovbe
daa
jge
out
aad
add
adc
add
loope
and
stos
jmp
or
daa
jb
rcrb
enter
movsl
xor
int3
and
add
lods
xchg
cmp
mov
mov
jge
jb
ret
push
jmp
mov
and
jbe
xor
std
add
jmp
cld
enter
scas
pop
xor
js
lods
cmpsb
hlt
jg
scas
ljmp
js
pushf
xchg
pop
test
rorl
out
jp
xor
je
scas
and
xchg
inc
rcrb
sub
push
push
dec
mov
ret
les
sub
pusha
leave
adc
ss
sub
mov
jmp
mov
ljmp
adc
xchg
xchg
cmpsl
xchg
cmp
fcomip
sti
sub
mov
mov
and
and
bnd
add
lock
lcall
lcall
popa
aam
incl
mov
mov
xor
mov
outsb
inc
mov
scas
ja
pop
xor
add
push
cld
ja
push
or
jne
xchg
imul
incl
jno
out
sub
pop
add
cwtl
jae
test
in
fsts
fnstsw
mov
lock
jb
add
fcmovnb
and
jmp
add
daa
add
shrl
leave
cli
cmc
dec
nopl
xchg
or
lahf
cmp
xlat
je
jae
in
cmp
push
add
push
rcrb
sbb
in
xchg
sti
sti
cmp
xchg
pop
cwtl
cmpsb
incl
leave
mov
jae
mov
rorb
xchg
mov
push
cs
lock
inc
add
inc
add
fsubrp
and
mov
pushl
jb
xor
xchg
ds
mov
loopne
cmp
mov
orl
pop
mov
pop
mov
push
add
inc
xchg
repnz
test
int3
jp
add
popa
loop
xor
and
adc
fcom
out
jmp
jg
clc
jg
or
push
aam
pop
push
shlb
mov
push
and
mov
push
and
adc
push
in
dec
das
js
aaa
aas
stc
cs
fwait
repnz
add
jno
loopne
lcall
sub
inc
add
dec
jbe
cli
es
sub
add
movsb
cmp
adc
adc
xor
inc
mov
hlt
jnp
scas
movsb
mov
adc
mov
inc
ret
repnz
adc
dec
mov
jno
pop
fisttpll
incl
std
jge
nop
push
loope
mov
fisubl
inc
sar
fidivs
sti
decl
cmpsl
cld
ret
or
mov
xchg
adc
dec
pop
lock
jne
push
fst
push
call
sbb
clc
sub
jge
outsl
bound
outsb
and
sbb
xchg
or
es
bound
mov
cwtl
andb
in
negl
movsb
mov
loopne
mov
call
insl
aas
push
inc
mov
nop
rcr
int
adc
into
in
add
jg
decl
xchg
addl
lcall
push
push
mov
stos
aaa
std
movsl
xchg
repz
fdiv
dec
fildl
cmp
mov
mov
adc
subl
jg
inc
adc
jo
pop
pop
mov
loop
pop
loopne
lcall
push
out
repz
cmp
push
icebp
add
push
pop
pop
roll
icebp
sub
inc
movsl
aas
and
mov
es
aad
jmp
xchg
cs
cmp
sbb
je
xor
popa
insb
jo
test
fnstenv
icebp
mov
loop
jle
stc
cmp
push
pop
jo
add
shlw
cld
mov
mov
add
loopne
inc
sub
jmp
repz
repz
ljmp
hlt
fisttps
push
lods
loop
mov
xor
roll
mov
loopne
add
xlat
insb
fstpl
push
fcompl
repnz
loopne
pushl
xor
add
inc
and
pusha
adc
scas
jmp
cmp
int
sbb
movsb
inc
pop
mov
add
ret
push
xchg
jle
outsl
int
and
lods
ret
outsl
mov
lret
dec
mov
xlat
inc
dec
sbb
sub
add
imul
inc
out
sbb
mov
sub
add
cmp
xchg
mov
fidivrs
push
scas
inc
aas
sub
clc
pop
insb
inc
loopne
cmp
pop
jl
lret
or
adc
jmp
add
cltd
xor
aas
add
dec
and
dec
shlb
lret
jg
sbb
cltd
dec
mov
andb
lea
add
cmpsb
nop
mov
je
dec
imul
icebp
adc
icebp
mov
setp
lret
cmp
push
push
jo
inc
js
clc
xchg
orb
outsl
pop
push
xchg
xchg
decl
mov
lods
rcll
push
dec
mov
dec
mov
or
repz
dec
mov
aam
pop
in
dec
fwait
xchg
push
in
mul
push
add
scas
add
pop
mov
add
lcall
adc
mov
clc
xor
jo
test
xchg
add
xor
xchg
xchg
jno
add
and
in
add
jmp
ret
mov
aaa
std
outsl
stos
scas
sub
pop
and
cmc
mov
jge
add
in
insb
sarb
adc
push
xor
pop
in
cs
in
ljmp
loopne
nop
xchg
push
cli
add
clc
mov
add
cwtl
inc
pop
mov
adc
jmp
scas
decl
mov
add
in
data16
or
pusha
mov
mov
xlat
cwtl
adc
mov
stos
cltd
cmc
sub
adc
inc
jecxz
ficoms
movsb
cmp
mov
jae
add
xchg
mov
aam
inc
jo
sbb
jbe
aam
jo
icebp
rcll
lock
push
aas
stos
shrb
aaa
cmp
pop
mov
sub
push
sbb
out
xchg
mov
and
sub
aas
cld
addl
inc
outsl
jae
ret
add
mov
mov
imul
and
sub
jns
mov
pop
mov
lods
ret
movsb
in
ljmp
shll
popf
inc
insb
enter
dec
inc
cmpsb
jns,pn
lock
dec
adc
mov
add
dec
pop
testb
xor
dec
ret
mov
fisttpl
or
pop
fs
and
je
popa
filds
inc
scas
in
add
stos
mov
outsl
cmpsb
enter
push
push
stc
sub
add
pusha
fidivrl
adc
cld
push
cmp
movsl
mov
lcall
pop
movsl
shr
stos
jg
xor
push
ficompl
and
inc
sarl
fcomi
adc
popf
enter
jle
fists
add
aas
cmp
jg
dec
sahf
cli
push
je
and
lret
adc
sbb
xor
incl
addl
ror
add
add
out
aam
jo
clc
mov
cld
sbb
aaa
add
sti
mov
xor
std
icebp
mov
std
lret
rorl
clc
add
sbb
out
je
dec
push
pop
fdivs
mov
das
sbb
pop
mov
mov
cmp
rorb
mov
loop
insb
rcl
inc
fadds
in
shl
mov
fwait
jle
aaa
insl
pop
add
inc
pop
and
push
and
cltd
inc
mov
xchg
enter
mov
sbb
mov
mov
je
loope
mov
or
push
inc
cmpsl
repz
add
inc
adc
shl
or
add
or
loopne
push
das
lcall
jle
or
mov
dec
add
add
ss
aas
int
mov
lea
xor
add
sub
add
pop
cmp
testl
mov
mov
nop
sbb
dec
inc
sub
adc
lret
add
pop
pop
add
je
mov
jle
mov
and
or
data16
add
shlb
sti
adc
push
ret
pushl
pop
jo
mov
std
shl
in
clc
int3
rorb
add
sub
push
push
cmp
fmuls
mov
sub
mov
xchg
add
cmpb
fdiv
add
push
pop
cmp
dec
es
mov
pusha
ret
sub
repz
push
imul
shrl
mov
jmp
ljmp
and
cmp
sub
pop
mov
hlt
fistl
inc
push
scas
mov
sbb
fidivrl
jecxz
lret
xor
dec
xchg
xor
std
mov
mov
xchg
xchg
xchg
pusha
sub
push
dec
sbb
add
scas
mov
call
cmp
lcall
inc
loopne
push
and
mov
mov
sub
mov
pop
jne
in
or
cmp
pop
movsb
sbb
movsl
pusha
mov
cmp
incl
cld
sbb
sbb
pusha
daa
adc
nop
cmp
jmp
hlt
pop
mov
dec
mov
add
mov
xchg
push
add
push
mov
incb
outsl
das
cli
bnd
inc
cmp
js
arpl
xlat
decl
loopne
cmp
das
xor
push
push
movsb
dec
ds
and
mov
cmp
xor
jnp
mov
call
icebp
fildll
add
xor
filds
mov
call
xlat
insl
jno
leave
clc
fwait
or
insl
mov
sbb
jg
mov
fmuls
inc
mov
sbb
push
lahf
jecxz
addr16
xchg
lahf
cmp
push
pop
jle
jg
ret
sbb
add
dec
push
sar
add
push
push
iret
mov
rclb
in
jg
mov
or
out
inc
jb
int3
mov
pop
hlt
sar
jmp
add
and
fnsave
cmp
cld
xor
or
fldl
mov
add
dec
mov
xor
out
inc
xchg
xor
push
inc
mov
jg
mov
cmp
aas
dec
add
dec
lods
cs
ror
add
sbb
push
call
and
mov
pop
lret
adc
push
dec
icebp
pop
xchg
jmp
mov
mov
push
pushf
out
out
pop
cmp
inc
add
hlt
fwait
adc
push
xchg
pusha
inc
repz
hlt
jecxz
push
dec
arpl
push
pusha
or
movsb
cmpsl
mov
in
or
cmpsl
mov
shr
fisubrl
jmp
jo
adc
or
xchg
sub
je
jg
add
ljmp
cmp
call
stos
and
test
xchg
pop
sub
in
add
popa
lock
dec
add
add
and
mov
or
nop
add
push
push
sti
ljmp
xchg
pop
lret
frstor
add
lcall
test
dec
inc
adc
enter
mov
out
test
jg
inc
jae
popa
push
and
fnstcw
scas
test
cmpsl
pop
adc
shl
ret
add
in
xchg
in
out
sbb
pop
sub
and
subl
std
sub
mov
push
ds
mov
add
mov
xchg
fsub
pop
pop
add
pop
mov
xchg
lock
add
mov
rcl
das
clc
sbb
fwait
sub
inc
test
aam
int3
int3
inc
sbb
icebp
mov
mov
sbb
mov
add
xchg
sub
aas
inc
es
fstps
std
sbb
add
adc
cmp
pop
sbb
xchg
adc
test
lret
test
inc
xchg
or
aaa
cwtl
dec
add
inc
inc
rol
into
mov
mov
cmp
cld
sub
fldt
xor
push
jle
mov
mov
jmp
jecxz
lret
arpl
das
xor
lods
scas
adc
sub
add
xchg
mov
hlt
aas
add
or
addr16
out
xchg
add
lahf
stos
test
jns
xchg
scas
lds
fmull
clc
fsubrs
adc
xchg
ss
push
mov
hlt
cs
push
push
pop
push
sbb
pop
mov
xor
or
test
mov
das
dec
xchg
xor
jg
add
add
out
jnp
arpl
test
jb
sbb
les
mov
cmpsl
bound
cli
adc
dec
dec
jno
dec
stos
pop
jns
mov
phsubd
mov
push
mov
popf
push
cld
ljmp
or
lea
insb
xor
mov
xor
test
add
cld
sub
roll
push
sub
data16
lods
mov
mov
enter
pop
pop
add
cs
shll
test
loopne
fsincos
inc
das
sbb
enter
sub
into
in
test
push
mov
into
push
lds
iret
lock
jle
movsb
mov
daa
repnz
cli
add
push
jl
out
rclb
decl
push
arpl
jle
lock
mov
push
jb
pop
xchg
test
cld
adc
popf
and
jg
push
cli
pop
insl
pushf
lds
cmp
out
pop
dec
movsl
fdivrs
pop
sub
loope
orb
sbb
adc
xchg
pop
ljmp
sti
fadds
push
push
dec
arpl
jl
ds
inc
test
je
and
jl
test
adc
in
loopne
jmp
add
dec
push
push
mov
scas
lahf
jns
mov
arpl
repz
sbb
push
adc
jae
aam
mov
scas
jg
repz
add
and
jnp
mov
mov
out
data16
add
xchg
inc
sbb
loope
xor
or
fisubrs
aas
mulb
jmp
add
and
out
inc
int
lock
hlt
mov
push
pop
push
cmpsb
into
pop
rcll
add
xlat
mov
or
mov
subb
out
cli
pop
add
ret
pop
mov
jno
dec
xor
push
mov
lock
lcall
and
sbb
and
sbb
and
mov
pop
scas
mov
idivb
fnstsw
bt
ja
xchg
cs
mov
inc
pusha
out
pop
lock
push
push
nop
rcrl
clc
call
jmp
push
mov
popf
out
inc
ja
lahf
push
inc
jge,pt
add
adc
mov
in
decl
inc
sbb
insl
inc
push
adc
jb
pushl
lcall
inc
test
testl
faddp
sbb
pop
and
insl
es
cmpsl
adc
cwtl
hlt
repz
mov
testl
pusha
jns
jmp
out
incl
add
push
adc
xchg
jae
call
xor
lret
push
popl
push
pop
dec
xchg
test
rorb
hlt
mov
pop
push
xor
cmp
in
add
push
sbb
outsb
stos
mov
xchg
sub
pop
loop
push
data16
jp
or
dec
xchg
cmp
and
dec
outsl
add
or
cmp
xchg
sti
mov
inc
fs
leave
in
add
rcll
icebp
push
test
test
mov
mov
dec
mov
pop
or
jle
call
dec
or
inc
int3
shlb
fcmove
push
lods
add
jg
dec
in
mov
pop
and
add
jl
pop
icebp
fndisi(8087
nop
mov
lods
cs
xor
sarb
add
cmp
and
dec
movsl
call
add
daa
xchg
sbb
movsl
mov
decl
shr
mov
cmp
mov
out
mov
arpl
adc
add
lcall
add
xor
pop
push
jb
orb
lahf
cmpsb
rol
add
add
xchg
add
arpl
popa
cmp
loopne
incb
lds
push
dec
lret
loope
fwait
dec
out
ja
mov
xor
mov
jg
or
push
shrb
dec
dec
push
enter
cmpsl
pop
push
int
sets
mov
mov
nop
sbb
test
jnp
out
adcl
or
inc
rcrl
inc
cmp
add
xchg
stos
sbb
add
jg
xchg
lcall
xchg
push
sbb
mov
push
jo
dec
mov
add
jmp
int
add
mov
mov
and
fcompl
sbb
int3
add
stc
pop
shrb
incb
aaa
fistps
add
inc
and
aad
sbb
sub
mov
pushfw
jnp
stos
pop
jecxz
dec
inc
push
mov
mov
aad
ds
lock
jo
mov
das
mov
pop
mov
inc
sub
bound
sbb
rorb
imul
adc
inc
pop
sbb
pusha
mov
push
jbe
aas
outsb
cmp
cmp
jb
sbb
jg
cltd
iret
imul
push
cld
add
sub
xchg
and
sub
cmp
dec
push
cld
popl
pop
mov
pushf
pop
fdivp
sub
cmp
cmp
and
push
pop
mov
les
js
jg
adc
or
and
push
and
inc
scas
xchg
mov
sub
lea
xor
lods
cmp
das
lcall
or
sbb
rcl
pop
stc
pop
dec
or
xchg
lret
sub
popf
or
mov
icebp
or
stc
mov
fidivl
hlt
movsb
push
outsl
daa
js
pop
xchg
stos
pop
cmc
or
xchg
lret
test
push
shrl
add
enter
or
push
ja
inc
mov
mov
pop
push
dec
pop
cmp
sahf
push
frstor
decl
mov
jae
push
cmpsb
push
negb
mov
nop
sbb
movsl
out
lock
dec
push
lock
aas
add
sarb
pop
add
daa
stc
arpl
call
cmp
cli
mov
aas
jno
notb
dec
dec
cld
push
fdivrs
fldcw
pop
xor
jae
pop
or
and
inc
jl
dec
jp
clc
ljmp
pop
fs
sub
test
mov
shrb
in
popa
xor
adc
and
push
rorb
sbb
stc
xor
cmpsb
clc
push
subb
repz
aam
or
scas
js
cmp
adc
jle
ljmp
push
mov
outsl
push
lds
mov
fstpl
or
ds
ja
cmc
or
rclb
and
lds
ljmp
mov
lahf
pushl
rorl
pusha
sbb
incl
inc
and
push
add
testb
incl
push
fistpll
jnp
adc
and
mov
loopne,pt
mov
mov
add
addr16
jbe
jmp
and
stos
mov
jle
aaa
std
and
cmp
rcrb
es
pusha
add
loopne
loope
mov
xor
push
sbb
shr
ljmp
cmp
loopne
xchg
bound
scas
inc
mov
test
dec
pop
or
add
clc
mov
je
add
and
xor
cld
incl
mov
mov
and
div
scas
shrb
or
filds
jg
or
push
push
mov
lods
mov
push
jae
or
sub
testl
adc
aas
popf
xor
jg
test
leave
lods
add
or
or
xchg
mov
addb
movnti
popl
adc
push
insb
pop
mov
xchg
push
lock
mov
mov
ljmp
xor
test
daa
pop
icebp
sbb
arpl
add
pop
mov
add
jecxz
loopne
loope
cld
outsb
je
inc
jg
js
xchg
js
insb
fstp
jns
pop
in
je
stos
sub
sub
jg
scas
adc
and
push
inc
or
adc
lahf
ja
mov
aad
mov
push
mov
cmp
adc
jl
add
add
jno
xchg
out
cmpsl
add
push
sarl
mul
ljmp
inc
sbb
shl
adc
sbb
aad
sbb
mov
inc
dec
cld
xor
pusha
ror
dec
sub
or
sub
inc
inc
mov
pushl
adc
dec
arpl
sub
gs
and
test
adc
lcall
fcomp
or
divb
push
popa
imul
fisttps
dec
push
sbb
loopne
aad
pop
cli
jo
jbe
cli
iret
icebp
and
and
sub
sub
mov
sbb
nop
add
jge
or
insl
pop
into
sti
inc
test
sarb
fisttpll
sub
push
ljmp
out
xchg
fs
sbb
xchg
mov
add
jns
repnz
les
or
gs
frstor
push
in
je
adc
ja
test
lcall
js
frstor
out
insb
mov
mov
lock
ljmp
add
insl
add
popa
push
jp
mov
jnp
rol
incl
pop
mov
push
cmp
xor
mov
add
and
xor
aaa
xor
add
push
push
lods
dec
and
add
divb
jo
inc
rcl
in
ss
mov
leave
ds
scas
sub
cs
jge
add
jmp
cmp
aaa
or
test
out
and
hlt
pop
repz
adc
ja
cwtl
rcl
push
adc
pushl
out
addl
sbb
and
jg
or
mov
lds
aas
sub
lahf
cmc
aas
into
test
pop
xorb
out
pop
mov
add
push
movsl
out
enter
add
idivl
adc
aam
xor
negl
and
shll
enter
fldcw
fsubs
lds
bound
sub
ltr
sbb
iret
and
mov
mov
push
in
sar
clc
cmp
xor
pushl
mov
sub
popa
mov
clc
decl
inc
xchg
fwait
add
je
push
jnp
ds
mov
or
fisubrl
jle
stos
mov
pushf
dec
xlat
clc
dec
add
dec
pop
call
mov
sub
call
outsb
push
lcall
add
xchg
call
add
push
testl
neg
test
dec
jmp
rolb
out
mov
sbb
repnz
sbb
add
push
jle
jns
iret
xchg
lock
cmp
fcmove
ret
ss
xchg
push
xchg
ds
incl
adc
int3
mov
dec
dec
or
add
aaa
test
sub
or
jg
sub
popf
stos
lret
insb
add
jne
sbb
and
mov
sbb
lods
nop
bound
call
push
ds
or
add
loop
bound
push
dec
leave
nop
and
mov
mov
pop
data16
aas
jmp
or
sar
jmp
fs
cmp
add
out
xchg
mov
rorl
pop
stos
pop
sbb
xor
fnstenv
and
aam
rorl
inc
pop
enter
jp
mov
scas
or
cmp
pop
mov
jle
mov
repz
push
or
and
test
or
xchg
mov
sbb
repz
adc
sar
pop
and
loope
pop
xor
xchg
imul
add
ljmp
push
and
dec
add
mov
sbb
pop
push
out
insb
xlat
out
jp
std
lret
and
aas
nop
es
add
pop
mov
inc
cmp
pop
push
or
sbb
ljmp
inc
aaa
sahf
sub
data16
addr16
adc
out
push
and
in
scas
mov
pop
push
xor
ja
scas
ljmp
push
xor
push
add
xor
dec
and
cli
add
loope
clc
decl
jo
out
setns
pushf
cmp
mov
cli
cmp
pop
adc
dec
cmc
jbe
and
push
jmp
movsb
adc
xchg
sbb
lea
je
and
clc
enter
rcr
aaa
jae
push
mov
rorl
jne
jmp
pop
int3
sub
mov
nop
aas
jecxz
sbb
out
lock
cltd
and
xchg
push
dec
fildll
cld
into
or
filds
dec
xchg
mov
loop
jo
dec
pop
vmwrite
pop
outsl
rorb
jl
jo
pop
cmc
and
cmp
insb
ss
xchg
hlt
test
sub
ffree
sbb
cmp
data16
mov
jle
fisttpll
jp
outsb
dec
cmpsb
loop
loopne
ret
inc
xchg
sub
sub
fildl
cmp
orb
mov
xchg
dec
mov
mov
pop
dec
inc
sbb
sbb
mov
mov
es
loope
mov
lcall
rcr
sbb
std
cli
push
mov
icebp
mov
mov
insl
add
popa
xchg
add
xor
mov
test
lea
fstl
xor
popf
pop
mov
inc
outsb
push
cld
decl
lds
mov
adc
test
insl
sbb
or
stc
iret
dec
xchg
ljmp
jb
mov
clc
cmp
fiadds
aas
sbb
clc
dec
das
cmp
repnz
mov
test
sbb
sbb
into
inc
push
cld
test
mov
jo
push
push
movsl
cmp
lcall
dec
movsl
mov
mov
repz
js
cmp
mov
nop
add
stos
add
xor
add
outsl
cmp
add
inc
push
in
inc
dec
fidivs
pop
into
push
stos
jb
jg
add
fldcw
int3
push
imul
adc
outsl
mov
mov
push
mov
pop
xchg
adc
adc
icebp
push
adc
pop
dec
scas
cmpsb
push
push
jl
fistpl
shr
ja
add
dec
stos
or
mov
add
xor
cs
lret
lods
pop
jbe
imul
aas
dec
sbbb
pop
or
jg
jle
add
jno
mov
jmp
jecxz
cld
add
or
in
je
fs
xor
loop
fnsave
inc
movsb
pop
add
incl
and
bound
dec
and
pusha
lret
inc
jl
leave
jb
or
pop
xor
pushl
and
mov
pusha
jae
xor
adc
outsl
jae
xlat
mov
sbb
mov
push
pop
add
pop
mov
faddl
sub
cmpsb
mov
adc
js
xchg
or
mov
ss
lods
push
jp
dec
bound
ficomps
add
push
or
mov
adc
push
mov
or
lret
cld
mov
dec
push
rcll
jp
add
and
ret
icebp
insb
xchg
addb
cmp
loopne
xchg
or
jmp
loope
mov
in
insl
jp
jb
dec
sbb
cwtl
inc
push
rcrb
cld
xchg
test
push
bt
jmp
jmp
push
mov
mov
cmp
test
ljmp
cmp
sub
add
loopne
push
notl
addl
imul
adc
mov
repnz
mov
and
mov
sub
xor
es
hlt
pusha
jno
jg
mov
push
xchg
push
enter
add
jmp
daa
leave
mov
xor
add
inc
fsubrl
jno
pop
jge
cmp
push
pop
xorl
cmpsl
sub
pop
loopne
xor
jb
jne
test
inc
dec
lret
pop
dec
lock
mov
andl
xchg
pop
or
sbb
decl
out
clc
push
mov
arpl
or
es
mov
insl
es
mov
jmp
or
add
les
sub
and
mov
sub
ss
cwtl
jne
out
add
adc
lds
adc
ss
pop
loop
insb
add
inc
mov
fisttps
rcrl
inc
test
ljmp
xor
jg
mov
add
jmp
loopne
mov
loope
and
and
scas
lock
pushl
pop
or
insb
dec
pop
pop
add
sti
dec
pop
addb
fucomip
xor
in
cmpsb
enter
jl
pop
fadd
mov
test
aad
or
sbb
sahf
xor
push
in
sbb
cmp
out
leave
push
cld
dec
dec
scas
dec
andl
mov
and
int
xlat
shl
push
push
mov
lahf
push
lret
sbb
insl
adc
cmp
repz
in
mov
sbb
insb
dec
mov
cld
sub
imul
mov
incl
loopne
enter
mov
out
testb
cltd
popa
pop
push
add
pusha
jb
jbe
add
sub
add
std
or
xchg
jne
loop
stc
push
call
fcmovb
es
int
daa
cltd
jp
dec
add
add
ficoml
pop
pop
lock
std
pop
call
or
inc
dec
sub
stc
ds
test
loope
clc
stos
cmp
mov
pop
pop
mov
repnz
and
mov
push
jecxz
rcll
dec
adc
and
adc
or
push
pop
inc
dec
dec
mov
sbbl
pop
ss
sahf
ret
ss
cli
pop
loope
or
xchg
aad
and
xor
clc
in
call
insb
call
mov
outsb
jmp
rclb
adc
in
xlat
loopne
xor
pop
test
push
jo
inc
lea
orb
pop
cwtl
mov
sahf
push
xchg
fiadds
add
test
dec
mov
pop
cmp
lea
shlb
test
nop
ret
fsubs
lcall
add
hlt
jnp
sbbl
decl
call
pop
ljmp
inc
mulb
inc
xor
es
push
js
addb
orb
mov
stos
jp
adc
lea
sti
mov
les
mov
outsl
loop
mov
adc
xchg
inc
add
xor
push
cltd
mov
call
or
jo
stos
popa
cmp
popa
incl
negb
incl
incl
pop
adc
xor
mov
inc
adc
ret
mov
xchg
ljmp
rolb
js
xchg
dec
jbe
add
div
inc
ja
and
mov
sbb
mov
adc
push
jg
decl
add
inc
faddl
rcrb
fimuls
jg
inc
cmp
push
mov
adc
adc
cmp
xor
lds
sbb
jnp
test
ljmp
pop
mov
mov
repnz
mov
sub
or
shll
jbe
cld
enter
cmp
push
pop
fiadds
fwait
adcb
loope
xor
xor
ljmp
jg
pop
xchg
pusha
ret
fcomip
lock
dec
cs
and
dec
incl
inc
adc
mov
js
jl
ret
imulb
push
pop
flds
pop
sbbl
cwtl
fdivs
in
jl
jbe
xor
push
test
pushf
xchg
or
clc
jae
push
xchg
fdivr
cmp
xchg
loop
sahf
push
mov
outsb
decl
or
jle
arpl
jno
scas
and
inc
mov
mov
jns
test
mov
pop
or
jg
inc
das
clc
dec
clc
mov
and
in
pusha
mov
cmpsb
dec
gs
or
dec
cwtl
pop
popf
sbb
and
push
lds
adc
xor
ljmp
dec
add
loop
pop
sar
sbb
add
push
push
xor
dec
test
scas
clc
pushl
or
add
jbe
add
daa
cmpsb
sahf
mov
pop
push
dec
and
push
call
mov
dec
loope
int
jecxz
mov
cmc
dec
xchg
popf
mov
or
out
adc
loop
cs
pop
decl
mov
xchg
or
lea
loope
jle
sbb
push
imul
mov
add
jmp
in
or
cmp
aad
sbb
ljmp
sti
mov
xor
or
cmp
pusha
fsubr
cmp
push
repz
dec
or
and
mov
icebp
mov
add
lods
fistpll
cld
jo
xor
xorl
xlat
xor
jmp
ret
pop
fistps
stos
push
or
sbb
shll
andl
aas
sarb
lods
fbld
aam
cltd
fsubrs
add
xor
mov
adc
insb
push
ss
dec
ja
ja
incl
cmp
pushf
sub
jb
bound
jecxz
std
pop
cmp
stos
adc
add
shll
orb
dec
dec
xlat
test
push
sbb
sub
shrb
add
fsubrs
cmc
ja
fists
inc
mov
ds
movsl
mov
sar
mov
add
or
xchg
xor
bound
ret
dec
adc
dec
and
clc
ja
inc
pop
xchg
adc
pop
addl
icebp
int
das
rclb
mov
fstpt
repnz
aas
inc
sti
push
xchg
ficoml
sbb
sbb
add
dec
add
mov
std
inc
fbld
ss
ficoms
adc
shl
adc
and
popf
adc
pop
dec
fisttps
jg
pop
out
fwait
shll
pop
test
in
xchg
pop
aaa
jg
nop
dec
adc
mov
or
mov
push
mov
xor
jmpw
pop
pop
xorb
xchg
ja
ss
aaa
insb
xchg
or
cmp
and
jp
cmpsb
sbb
cmp
lds
arpl
pop
clc
cmp
add
pop
ror
and
push
adc
ja
sub
adc
ljmp
pop
sub
rcrl
out
xor
hlt
cld
fdivl
push
loopne
cmp
es
push
pop
dec
imul
das
add
or
cli
pop
leave
add
rcl
mov
inc
stos
int
add
lahf
xor
lods
xchg
incl
cmp
mov
mov
mov
je
xchg
mov
pop
sub
lods
adc
push
sbb
sbb
sbb
adc
xor
xchg
add
mov
dec
ret
mov
leave
cmp
ljmp
and
xchg
mov
sbb
add
test
mov
xchg
jb
cmp
fiaddl
sar
fisubrl
std
inc
addb
nop/reserved
into
xorb
enter
cld
icebp
cmpsl
aam
and
divb
or
and
loopne
rolb
cld
out
clc
inc
rcrb
cmp
aas
dec
xor
aas
cli
aaa
push
lcall
push
cwtl
or
adc
outsb
xchg
in
or
adc
fmull
fidivrl
adc
and
bound
push
xchg
adc
pop
jo
incl
js
sub
inc
call
mov
jg
ljmp
loope
and
adc
stos
andb
out
cli
mov
adc
mov
or
clc
cmp
push
inc
xchg
add
inc
adc
add
inc
mov
inc
sbb
or
xchg
and
jl
push
test
xchg
inc
sbb
jg
or
push
mov
divl
xorb
cld
das
ret
out
adc
sub
push
aad
push
xor
adc
inc
jg
cmp
lods
das
inc
mov
bound
ljmp
adc
out
pop
loop
jecxz
fwait
inc
addb
mov
pop
ret
cs
xchg
sub
sub
cmpsb
push
stos
sbb
sbb
xchg
insb
movsb
in
fimull
loopne
adc
cmp
and
inc
dec
sub
pop
adc
mov
inc
outsb
or
and
insb
mov
sbb
sbb
add
in
test
decb
jg
arpl
inc
mov
call
clc
call
lock
jg
pusha
mov
arpl
ljmp
and
jl
pop
jnp
fdiv
push
movsb
sub
add
mov
push
decl
mov
push
dec
mov
cs
add
adc
js
test
js
push
ds
scas
xor
test
xchg
movsb
mov
jo
pusha
int3
xchg
cmpsb
pop
cli
shl
loop
mov
jg
in
or
cltd
dec
stos
jle
mov
jb
mov
stos
test
or
outsl
jg
clc
jmp
dec
push
jnp
cmp
test
rorl
sub
decl
cli
adc
nop
add
add
sub
mov
inc
hlt
sbb
or
cmp
cli
push
push
int3
loop
pushf
jecxz
push
fwait
dec
add
jl
sub
js
gs
xlat
xchg
sub
gs
incl
adc
mov
add
mov
xcrypt-cbc
cmpsl
xchg
pushf
pop
ficoml
lcall
xchg
pop
push
or
es
inc
andl
stos
decb
mov
cltd
sbbl
push
out
push
repnz
inc
pop
pop
jno
xchg
or
sub
mov
push
adc
push
mov
pop
cmp
xchg
dec
mov
ljmp
add
cmp
jge
pop
stos
xchg
scas
mov
sub
stc
push
xchg
or
je
push
call
jmp
cmp
xchg
stos
leave
call
call
loopne
inc
lcall
adc
add
imul
icebp
mov
mov
inc
mov
in
sar
das
mov
push
jmp
jne
or
mov
push
mov
pushl
cmp
mov
xchg
sub
imul
xchg
jg
adc
leave
leave
popw
jne
jle
scas
jmp
sub
test
push
push
lock
mov
adc
mov
std
stos
out
repnz
in
mov
cli
aam
xor
sub
outsl
add
aad
inc
dec
fnsave
add
cmpsb
or
decl
mov
push
sti
inc
mov
in
fldl
pop
inc
std
sbb
mov
mov
lock
jecxz
clc
imul
mov
in
pop
and
cmpsl
dec
cmp
mov
mov
xchg
cmp
insb
loop
shrb
lcall
filds
dec
inc
arpl
adcb
jno
cmp
push
test
xor
int
in
movsl
push
mov
cmpsl
push
mov
xchg
imul
and
xchg
clc
je
dec
mov
imul
xor
sub
mov
addl
adc
mov
mov
loop
cmc
inc
bound
sub
mov
sti
mov
add
test
jno
mov
sbb
in
xchg
adc
mov
mov
dec
sub
add
adc
flds
or
mov
int
xchg
loop
jmp
jns
mov
jne
bnd
or
ret
mov
incb
insl
dec
mov
scas
xor
pop
std
mov
in
push
loopne
jo
inc
or
jb
cmp
dec
jmp
stos
insb
or
push
xchg
add
mov
push
fs
mov
jecxz
out
adc
add
adc
pop
adc
pop
mov
xor
lods
in
cltd
pop
push
stos
or
dec
aam
sub
mov
or
and
xchg
int
push
add
push
add
add
movb
jmp
push
fdivs
cld
mov
pop
jg
outsb
stos
cmpsb
inc
push
movsb
sub
inc
add
lcall
test
xchg
pusha
and
push
idivl
clc
jmp
xor
shrb
mov
popa
push
or
fildll
pop
mov
mov
incl
orl
add
push
jle
pop
adc
mov
cmp
sub
or
sahf
mov
sbb
test
lcall
decl
dec
pop
movsb
dec
sbb
nop
iret
iret
out
loopne
xor
inc
pop
xchg
popa
mov
call
jbe
jg
lcall
or
int
les
and
adc
iret
das
mov
xor
inc
ficomps
cli
add
inc
mov
lahf
mov
mov
outsb
insb
out
enter
jp
xor
or
add
and
fwait
pop
mov
fisubrl
out
mov
sbb
je
inc
sbbl
lahf
sbb
adc
push
add
and
stos
clc
faddl
mov
test
scas
mov
decl
subb
jo
push
xlat
movsb
f2xm1
and
into
xchg
and
sarb
cmc
inc
test
and
loopne
gs
lcall
jno
push
and
outsl
movsb
out
push
faddp
lcall
fists
push
rorb
nop
push
test
daa
movsl
jmp
pusha
sub
inc
inc
shll
dec
sub
add
jnp
pusha
cld
mov
les
xchg
aam
fisttps
je
jecxz
pop
shl
in
pop
stc
gs
cmpb
es
enter
ficoms
xchg
push
das
clc
ljmp
incl
adc
shrl
jbe
fisubl
les
ds
xchg
cli
push
add
mov
pop
lret
sbb
jne
stos
loope
pushl
js
mov
or
outsb
pop
add
sbb
mov
adcb
mov
add
call
loope
sti
xchg
pop
xchg
test
in
add
pop
notb
push
lods
ret
xchg
mov
jbe
fidivs
lods
and
mov
jmp
decl
das
nop
movsb
es
cld
sub
andb
lcall
adc
mov
add
out
imul
aam
jle
jo
inc
add
popf
stos
outsb
mov
inc
adc
fnstcw
inc
mov
mov
xchg
scas
fisubrl
add
mov
adc
out
fbld
mov
scas
cli
jmp
mov
mov
push
sbb
xlat
adc
mov
add
pop
int3
mov
sti
push
sbb
jmp
push
push
mov
dec
and
lock
sub
inc
add
lds
cld
les
in
loop
dec
or
adc
dec
cmp
push
clc
jmp
inc
scas
sbbb
sub
rcr
jg
xchg
cmp
xlat
add
mov
test
add
fiaddl
pushf
pop
cmp
pushf
xor
mov
and
jg
stos
clc
inc
cli
push
popa
jl
lods
mov
mov
xchg
sti
jbe
or
push
enter
fdivrs
or
fmulp
add
es
adc
loopne
movsl
lods
gs
mov
lcall
fimuls
arpl
xor
clc
scas
movsl
mov
popl
lds
sub
lea
add
xchg
mov
cmp
pushl
adc
sbb
xchg
roll
sbb
repz
loope
mov
mov
xorb
mov
mov
dec
mov
in
or
push
mov
mov
insb
and
loope
jmp
mov
mov
loopne
mov
cli
pop
mov
pop
dec
mov
orb
xchg
ljmp
stc
mov
in
pushl
push
test
lret
xor
or
jecxz
test
xor
mov
pop
ja
mov
pop
mov
cmpsb
insb
inc
int
sbb
sbb
and
adcb
sbb
mov
adc
jmp
pop
inc
pop
inc
jbe
js
test
ds
incl
adc
xchg
push
dec
mov
cmpsb
sub
out
sar
pop
jo
or
sbb
call
xchg
dec
jl
jo
and
cmp
add
and
or
aas
popf
inc
lret
pop
sub
test
push
in
aam
imulb
xchg
add
or
mov
aas
lods
lea
push
cld
jg
dec
arpl
dec
adc
movsl
mov
inc
stos
clc
inc
cld
test
dec
cwtl
sbb
mov
fdivrl
sar
incl
add
sarb
js
mov
pop
and
mov
lds
dec
lds
in
ljmp
dec
decl
cmpsl
sbb
inc
popa
xchg
inc
and
xchg
jbe
and
inc
loope
test
push
loop
cltd
mov
ja
jge
or
inc
std
xorb
lret
dec
xchg
lods
adc
dec
dec
std
loope
jg
and
and
pop
cmp
or
and
fs
add
push
test
dec
cld
or
out
jecxz
push
subb
sbb
push
into
or
xor
sahf
mov
sbb
pushf
xor
or
pushf
fwait
xchg
nop
test
lahf
pop
cmpsb
call
sbb
mov
add
or
enter
xchg
add
loopne
scas
mov
call
xchg
sub
dec
je
mov
and
jno
loope
inc
sub
movsb
scas
xchg
incl
jp
sub
test
sbb
js
add
lret
add
add
mov
incl
cli
sub
out
inc
adc
ret
int3
pop
daa
enter
push
push
cmp
mov
divl
imul
mov
mov
nop
sub
add
inc
js
sbb
push
clc
outsl
fistpll
mov
arpl
loope
js
adc
int3
clc
cmp
jmp
loopne
xchg
mov
push
dec
cmc
push
mov
mov
inc
jecxz
push
cwtl
inc
call
lock
fs
out
test
pop
push
das
inc
sarl
sub
ljmp
lock
mov
int
outsl
aam
das
test
mov
jmp
or
add
add
insl
call
in
inc
mov
and
scas
clc
mov
in
adc
sub
cs
scas
clc
mov
xchg
inc
adc
or
in
iret
jmp
push
xor
adc
and
dec
mov
adc
xor
add
mov
test
mov
and
test
sbb
mov
lret
jnp
icebp
cmc
repz
inc
pop
pushf
adc
xchg
mov
xor
sbb
sub
aaa
jmp
xchg
push
fcomip
sbb
lret
or
push
push
add
out
ljmp
add
dec
lea
aad
lea
sbb
xchg
bound
in
test
rcrl
test
cmp
mov
or
into
pushf
pop
xchg
adc
pop
test
adc
cmp
lods
jo
in
xor
testb
pop
pop
std
pushl
add
push
rcrl
push
mov
or
mov
aam
cs
scas
ljmp
data16
xor
aad
mov
pusha
sbb
dec
cld
jb
cwtl
sub
imul
mov
mov
pop
pushf
mov
and
xlat
ljmp
adc
xor
test
push
clc
push
xchg
add
aam
pop
xor
pop
movsl
call
out
mov
daa
or
pusha
and
push
push
pop
pop
popa
mov
mov
mov
fnstcw
adc
mov
sti
mov
push
inc
jb
outsb
cmp
mov
cltd
xor
pushf
insb
stos
sub
dec
sar
fcomip
and
fstl
std
xor
push
adc
ret
pop
popa
pop
in
xchg
mov
inc
lcall
clc
jg
mov
cmpsb
rol
mov
xchg
arpl
dec
les
dec
jmp
into
test
add
fsubs
scas
inc
mov
pusha
jle
fsubr
call
jbe
fildll
fdivl
and
sti
ds
xor
sbb
inc
loope
out
incl
nop
repz
mov
maxps
cmp
mov
shlb
mov
ret
xor
movsb
inc
kmovw
cmpsl
outsb
push
push
cld
out
cli
xchg
or
inc
ficomps
mov
pushf
jle
and
out
fcomp
push
lcall
cmp
or
adc
xchg
or
adc
jne
in
aaa
call
adc
repz
shlb
or
stos
sbb
mov
fsubl
stos
mov
test
jg
incl
das
jle
cmc
xor
mov
pushl
loop
mov
orl
ljmp
xchg
js
adc
ret
loope
xchg
inc
je
gs
xchg
mov
jle
cmp
ret
movsl
pop
mov
sbb
or
hlt
adc
cs
mov
mov
pushf
out
push
xor
mov
leave
fisubrs
inc
hlt
outsb
xor
cli
sub
js
cmp
ljmp
inc
and
pop
push
jp
in
ret
inc
and
add
js
das
mov
cmp
loop
dec
mov
jmp
or
add
xrstor
lcall
sbb
cmp
lcall
fcmovnu
jg
mov
add
inc
push
ret
std
add
cmp
sbb
inc
add
lock
dec
std
dec
shrl
fstpt
push
cwtl
push
xchg
testb
push
jnp
sub
mov
pop
test
clc
cmpl
xor
test
jae
lcall
xor
cmp
xchg
sub
mov
rcl
icebp
inc
add
ret
cmpsb
jg
jg
mov
ds
and
lret
test
shl
call
les
int
test
push
test
mov
jl
incl
adc
and
outsb
adc
jle
pushl
fmul
jbe
push
lods
test
or
pop
jmp
mov
push
lock
jg
fdivl
lcall
std
sbb
xchg
mov
add
inc
out
mov
lret
sub
xchg
mov
dec
push
mov
mov
sti
mov
xlat
mov
or
mov
xchg
cmp
stos
sarb
movsl
pop
lcall
push
sub
fcompl
push
add
pslld
into
inc
inc
subb
add
pushl
scas
or
pop
push
and
mulb
jne
or
rclw
orl
sbb
jl
lods
inc
outsb
mov
push
mov
inc
dec
paddq
pop
push
pop
xorb
xor
fbstp
adc
test
add
sub
insb
in
popa
pop
pushf
dec
sbb
loopne
mov
and
imul
jmp
xchg
pop
lcall
sbb
testb
test
pop
mov
or
mov
es
out
pop
sbb
hlt
xchg
cmp
sbb
cs
lock
push
fmuls
out
mov
jo
stos
loope
sbb
jo
movsl
push
or
push
cmpb
adc
out
fndisi(8087
xor
ret
mov
add
pop
es
inc
jo
xchg
and
sahf
lods
add
mov
and
insb
cltd
mov
faddp
or
fnstenv
sar
idivb
and
mov
inc
or
or
dec
call
add
mov
scas
ljmp
and
sbb
dec
or
inc
stos
mov
hlt
ja
mov
test
dec
cli
test
pushl
das
cwtl
mov
cmp
and
and
mov
aam
mov
inc
loop
push
lcall
fists
cli
pusha
lcall
pop
mov
or
push
mov
inc
fsubr
mov
or
jp
jnp
fidivs
outsb
jbe
inc
test
fstpt
adc
jb
cltd
xchg
ficoms
testb
loop
rcrl
push
testb
enter
jb
shlb
jge
loope
lds
ljmp
mov
sahf
cld
jmp
testb
dec
fimuls
sahf
inc
xor
sub
xor
add
xor
jne
xor
mov
jno
ljmp
scas
mov
cwtl
jne
shr
dec
inc
mov
incl
mov
cs
cmp
jae
stos
sub
hlt
call
sub
outsb
mov
fldcw
ret
sarb
sbb
mov
lret
jge
adc
loope
mov
xor
push
sar
mov
jno
iret
out
mov
xor
ret
mov
cmp
mov
cmpsl
jl
and
jecxz
push
std
fiaddl
movsb
daa
dec
mov
mov
pop
fdivr
xchg
les
mov
adc
repz
fnsave
cs
adc
movsl
shlb
dec
in
mov
or
mov
pushf
push
jae
xchg
push
mov
hlt
push
aas
dec
pop
push
sub
les
jbe
inc
adc
pusha
cmp
and
cmp
mov
stos
fs
shl
xchg
xchg
test
jg
adc
bound
or
ljmp
pop
sub
sub
mov
subb
sbb
adc
adc
sar
inc
ret
lahf
mov
movsb
mov
das
inc
jg
push
das
adcb
and
jge
cmp
or
xchg
cmpsl
xor
inc
sbb
filds
mov
mov
inc
clc
pop
add
loopne
ja,pt
mov
xor
movsl
inc
cli
leave
test
std
ljmp
sub
test
sbb
inc
or
into
adc
or
jp
sbb
in
lcall
xchg
ficomps
popa
fildl
mov
lods
mov
jg
push
das
sub
mulb
xor
enter
shl
ljmp
add
mov
or
repz
mov
mov
lds
xor
pop
cs
inc
ss
lods
out
cmp
aam
push
dec
stos
pusha
gs
cs
add
push
out
mov
xor
jecxz
dec
jecxz
aad
jmp
clc
pop
test
push
adc
pop
mov
add
mov
inc
push
cli
stos
cmp
or
popf
ror
and
jle
mov
shrl
lret
dec
and
sub
incl
fildll
pushf
add
push
insl
add
and
addb
add
and
loop
bound
ljmp
jns
in
adc
mov
lods
add
or
push
dec
xchg
push
mov
fsubrs
addl
jne
mov
stos
dec
adc
inc
fidivrs
repz
mov
inc
jmp
fwait
inc
orb
mov
ret
les
or
aad
sbb
sub
xor
cld
sbb
xchg
mov
leave
inc
pop
push
icebp
incl
lahf
loope
dec
inc
in
sub
ja
push
faddl
xor
push
xchg
xorb
ja
pop
mov
pop
cld
call
test
sbb
ds
scas
jo
pop
out
sbb
stc
inc
clc
sub
subl
add
push
sub
mov
cmpsl
adcb
ret
lcall
pop
aad
test
lods
hlt
cmp
inc
inc
sahf
orl
pusha
in
inc
mov
cwtl
push
cwtl
aaa
mov
cmp
xchg
adc
cwtl
in
shrb
push
mov
cmp
fisttps
ljmp
mov
xchg
xchg
add
popa
inc
sti
scas
bound
inc
xor
sub
rclb
mov
sbb
inc
ljmp
or
mov
test
sbb
xorb
cmp
sub
inc
outsb
mov
lcall
sbb
xor
mov
and
inc
lcall
mov
push
lods
fidivrs
inc
dec
jb
sbb
cmpsb
outsb
clc
pop
add
and
mov
mov
add
mov
mov
in
push
loopne
push
cmpsb
mov
jl
add
loop
cmc
int
and
xchg
jno
mov
add
sbb
adc
stc
push
adc
add
jl
ja
loope
cmp
mov
adc
dec
push
xchg
dec
mov
push
inc
in
insl
sub
cwtl
lcall
add
scas
push
sub
add
add
shlb
cmp
icebp
mov
mov
lahf
loope
shl
jecxz
push
push
add
inc
mov
push
decl
ss
xchg
gs
cmp
sbb
test
jg
xor
adc
call
mov
mov
xchg
push
sub
add
shll
cmp
sarb
shlb
pop
icebp
inc
decl
leave
add
addb
ret
nop
pop
add
sbb
lcall
mov
jb
mov
add
fisubrl
mov
or
jmp
jmp
pop
jp
popa
rorl
in
jg
cwtl
and
clc
push
inc
or
pop
add
mov
sub
inc
adc
pop
xchg
shl
cmp
int3
pop
sub
jmp
pop
fs
bound
das
clc
aaa
mov
or
xchg
fcmovnb
cmp
add
adc
test
shll
inc
stos
and
dec
sarb
and
jb
cmp
clc
pushl
sti
out
add
sahf
xor
pop
inc
add
test
mov
dec
xor
dec
add
cli
mov
mov
lods
push
xor
out
xor
xchg
dec
addb
sub
addb
sbb
adcl
xchg
mov
cmp
shrl
sub
lcall
xorb
mov
sbb
out
sbb
pushf
inc
add
push
cld
aas
adc
aas
pusha
lods
mov
loopne
mov
enter
mov
cmp
cmp
push
push
xor
sub
lock
jno
loop
add
jg
and
scas
sarb
in
push
cld
adc
stc
jmp
popa
add
push
pop
pushl
stos
mov
out
mov
loop
sbb
adc
push
xor
nop
fcompl
outsb
aam
jb
add
mov
lcall
sub
or
inc
insl
rol
cwtl
mov
sbb
sub
cli
sbb
ss
dec
mov
nop
pop
aas
sbbb
cmp
mov
lea
ljmp
rorl
cld
inc
cld
jmp
ror
lds
and
movsb
push
xchg
adc
cmovs
push
mov
mov
pusha
negl
add
fstps
cwtl
or
mov
jl
inc
pop
cld
push
inc
aas
test
pushf
scas
cli
std
mov
rolb
sbb
fsubr
lock
jb
cmp
lock
test
dec
idivb
push
movb
cmp
mov
mov
mov
xchg
ret
sbb
shufps
std
and
hlt
or
push
lahf
mov
add
mov
push
outsb
scas
push
jge
mov
sbb
xor
jbe
in
xor
dec
lock
call
cmp
jg
xchg
jl
imul
fwait
jbe
sbb
and
in
or
mov
sti
call
int
inc
sub
mov
mov
sbb
xchg
push
push
xor
pop
mov
shlb
xor
or
jb
loope
push
jl
loopne
rclb
xor
push
push
stos
inc
and
lahf
add
arpl
es
dec
dec
jae
jae
inc
addb
std
fwait
mov
dec
jnp
xchg
inc
mov
cld
decl
adc
cmpsb
xchg
fstps
mov
sbb
sbb
mov
pop
loopne
out
jecxz
and
inc
inc
inc
dec
dec
or
insb
inc
sbb
add
cmp
mov
addb
sub
in
dec
add
scas
adc
mulb
popa
mov
add
mov
pop
xchg
dec
scas
in
xchg
mov
aaa
fdivs
out
jne
iret
xchg
fsubs
jg
shlb
jno
out
add
mov
bound
popa
nop
ss
jb
mov
icebp
mov
mov
es
dec
inc
fidivrl
int
mov
xlat
icebp
and
pop
add
mov
adc
mov
cli
es
cwtl
mov
push
mov
add
addb
jg
mov
add
rcrl
jp
add
push
arpl
adc
jg
daa
or
push
lahf
popa
pop
push
and
incl
or
rcrb
cmp
aas
push
dec
sbb
sbb
ss
ja
add
cmp
not
mov
adc
and
mov
push
or
adc
xchg
dec
lods
fiaddl
lods
daa
adcb
nop
scas
lcall
das
stos
sub
add
cmp
cwtl
sbb
lods
test
bound
pop
in
mov
mov
and
mov
mov
sar
jae
cli
xor
cmpsb
cli
lods
jo
xchg
push
xor
inc
test
sbb
and
ljmp
movsl
in
push
adc
mov
push
sub
outsb
test
jae,pt
mov
shr
pop
je
insl
add
faddl
sub
ss
data16
mov
add
jg
lods
mov
mov
xor
sar
push
mov
inc
pop
cmp
sub
incl
call
movsb
add
sub
jecxz,pt
mov
push
cld
divb
add
cmpl
push
xchg
cli
sti
js
sar
ds
sbb
cld
addr16
xchg
fidivl
outsb
pop
adc
sar
adcb
cmp
test
es
je
jmp
fs
pop
shll
insb
movsb
mov
add
cmpsl
mov
fbld
sbb
cmp
repnz
push
inc
fmull
icebp
dec
fiaddl
mov
push
or
sub
push
xchg
out
ret
xchg
cmp
add
popf
enter
xchg
mov
mov
outsb
mov
test
and
aad
sahf
out
pusha
pop
loopne
sahf
mov
and
fs
dec
mov
fs
imul
xchg
push
int
lcall
add
mov
xchg
pop
mov
ljmp
mov
jb
or
dec
mov
ds
push
mov
inc
out
jmp
mov
loope
repnz
xorb
ret
mov
lock
and
fwait
in
test
test
clc
sub
mov
or
test
jo
inc
bound
stos
add
jo
dec
cltd
mov
pop
popa
pop
inc
adc
out
add
sub
push
lahf
test
call
rclb
decb
outsb
mov
pusha
faddl
test
popf
roll
pop
decb
outsl
dec
jne
or
dec
arpl
mov
jg
and
mov
push
pusha
sarl
xchg
adc
rclb
roll
pop
lahf
cmp
je
lret
rcrb
clc
mov
inc
jbe
adc
and
jo
mov
loopne
push
inc
or
sbb
mov
push
add
pop
sbb
jecxz
inc
push
ljmp
sub
cmp
jecxz
adc
bound
inc
xchg
add
je
or
idiv
push
loop
lods
sbb
jno
mov
js
in
fisubrl
xchg
cmp
or
arpl
jge
xchg
js
sub
mov
add
ljmp
push
add
push
inc
ret
arpl
inc
or
xor
cmp
push
ret
rcll
jle
loope
sbb
fisubs
inc
xlat
popf
jnp
fldt
and
adc
mov
fsub
mov
mov
clc
jne
int3
popa
or
out
xor
jp
mov
and
test
cld
mov
and
aad
push
cld
sbb
adc
rcrb
test
lock
add
scas
lret
pop
sarb
xor
inc
cld
call
test
mov
loop
and
push
and
cmp
pop
rorb
nop
cwtl
not
decl
add
out
ss
xchg
test
mov
push
xchg
rcrl
lods
inc
movsl
xchg
jo
inc
ret
mov
fdivs
out
rcr
or
inc
mov
negl
push
je
inc
sub
rolb
incl
jl
jne
push
add
mov
aas
add
cmp
pop
or
add
cltd
pop
cmp
pop
bound
scas
sub
jns
sbb
adc
add
pop
mov
push
xchg
test
lock
rorl
jno
daa
jge
hlt
or
cltd
push
mov
adc
cmp
addl
addr16
adc
pop
xor
sahf
adc
inc
sti
in
sub
incl
rcrl
test
roll
mov
push
add
push
sbb
call
movsb
cli
cs
pop
or
add
adc
sbb
add
loopne
lods
push
inc
add
hlt
cmp
enter
imul
scas
push
and
movsb
sbb
pushl
loope
lock
mov
or
xchg
dec
pop
jge
xchg
fsubl
aad
clc
xchg
xor
xchg
and
pop
ljmp
jl
idivl
test
pop
jmp
or
jp
cmpsb
mov
das
fucomip
das
jmp
lret
inc
jecxz
insb
dec
repnz
push
inc
testb
sarl
clc
mov
pop
arpl
psrlw
or
repnz
push
jmp
jo
jge
testl
decl
scas
mov
push
xlat
mov
js
inc
fnsave
or
push
outsl
push
mov
adcb
adc
fs
fbld
or
andb
mov
cmp
dec
mov
xor
mov
or
add
or
or
jge
sub
lret
jmp
xchg
dec
fdiv
sub
pop
add
pop
push
in
dec
repnz
and
aaa
or
push
mov
repnz
aaa
dec
fdivl
test
sub
jmp
dec
sahf
out
test
adc
jmp
sar
mov
cwtl
nop
mov
inc
int3
push
push
lock
mov
data16
incl
or
hlt
es
or
cmp
add
pop
sub
insb
inc
mov
outsb
xchg
cwtl
mov
movsb
adc
pop
outsb
xchg
and
sbb
mov
aaa
fadd
xchg
jg
sbb
adc
sub
ja
ffree
lret
add
xchg
call
adc
jnp
pop
lcall
or
ret
arpl
and
mov
lcall
addb
popf
ss
adc
jmp
mov
loopne
stos
test
adc
out
sub
and
test
leave
jg
sbb
test
adc
push
rol
jp
adc
sbb
adc
mov
ret
jp
hlt
and
xchg
push
sub
add
dec
outsb
fistpll
fimull
dec
bound
and
dec
roll
dec
sbb
cld
mov
loopne
int3
pop
push
inc
test
cmp
jge
lret
push
lock
call
pushf
cmp
push
mov
dec
push
mov
pushf
dec
ljmp
jae
adc
jns
jo
jb
lock
push
dec
xchg
ss
dec
out
push
shlb
jl
ljmp
mov
int3
and
xchg
xor
pop
cmpsl
jbe
jle
mov
pusha
mov
test
lods
rolb
sub
popa
xor
pop
sub
fcoms
dec
pop
cwtl
sarl
stc
add
aam
shll
jg
lock
outsl
sub
mov
ss
inc
subb
xchg
mov
stos
pushf
inc
mov
ret
xchg
xlat
add
lret
out
subb
mov
addr16
dec
mov
arpl
jmp
clc
ds
cmp
push
out
cmpsb
mov
dec
xchg
xor
xor
cmp
jmp
and
lret
scas
sbb
push
ret
cmpb
adc
pop
xchg
out
hlt
cmp
scas
ljmp
daa
cld
insl
mov
test
and
push
sti
xor
movsb
pop
inc
lret
or
or
ljmp
or
repnz
adcb
lahf
sub
add
or
stos
addl
push
xchg
jle
mov
cld
push
or
mov
sti
cmpsl
push
cltd
int
adcb
scas
call
jo
jle
adc
movsb
pop
push
and
or
adc
xlat
test
dec
lea
sahf
ljmp
jmp
daa
ret
ret
mov
add
push
cmc
popa
xchg
scas
loope
test
mov
jg
add
mov
fisubrs
sbb
sahf
cmp
daa
call
shll
out
cld
push
repz
add
js
jno
cld
loopne
jo
inc
or
sbbl
out
mov
cmpsl
les
xor
mov
call
xor
scas
inc
pop
sbb
rcrl
push
fiadds
lcall
rolb
sub
lock
shr
push
jo
movsb
jnp
popf
stos
stos
imul
loopne
insb
mov
cli
out
jb
fwait
outsl
inc
pushl
or
iret
pop
and
es
sub
inc
fidivs
arpl
lahf
scas
aas
mov
dec
test
pop
loope
xchg
jmp
inc
fwait
jnp
add
ss
or
jge
in
cmp
jg
incb
mov
aaa
inc
cwtl
xor
xchg
int3
cmc
pop
and
std
add
popf
push
sub
hlt
orb
xor
cld
or
push
stos
pop
pop
sbb
jmp
dec
add
xor
out
lcall
sbb
push
adc
clc
sbb
leave
lock
xor
push
add
insb
les
ja
mov
push
and
ss
aad
out
inc
jmp
sub
jg
stos
ret
cmp
xchg
sub
pop
orb
add
clc
ljmp
andb
frstor
cmp
or
or
jmp
add
subb
sub
dec
push
and
xchg
psubq
jb
sub
hlt
aaa
jge
mov
sbb
adc
popa
mov
push
ret
add
filds
ja
std
sub
or
xchg
fs
cs
mov
rorl
ficompl
xor
or
roll
in
mov
xor
fcoms
roll
pop
or
xchg
and
jae
scas
mov
jae
cmp
loope
hlt
ja
sub
push
xchg
mov
jbe
pop
pop
pop
cli
repz
sbb
push
mov
cmc
lods
push
mov
pop
dec
lock
cmpsl
push
clc
adc
mov
inc
jns
sbb
or
ja
repz
xchg
and
and
or
adcl
popf
fcoms
jl
and
out
aas
repnz
adc
incl
or
inc
dec
mov
es
shlb
pop
mov
lcall
mov
mov
call
mov
pop
add
add
mov
jbe
nopl
push
mov
enter
test
add
arpl
jle
or
call
add
rclb
loopne
ss
or
inc
cmp
dec
ret
lock
incl
adc
inc
mov
addb
test
sub
aad
cmc
leave
lret
pop
call
sbb
cli
adc
pop
mov
out
push
adc
inc
sub
testl
mov
or
xchg
dec
adc
inc
scas
add
out
mov
and
into
aam
cmp
pop
sbb
mov
rcll
xchg
add
out
cmp
test
out
adc
inc
pop
dec
inc
in
imul
jo
cmpb
mov
jo
aas
imull
adc
xchg
dec
or
pop
push
jp
jg
sbb
inc
ficomps
ret
lcall
add
pusha
lds
test
xchg
aam
lcall
mov
out
fcomps
clc
icebp
add
adc
push
in
cli
push
sub
xchg
mov
push
out
push
icebp
add
push
enter
pop
pop
cmp
add
sbb
or
push
inc
mov
pop
ds
cmp
hlt
decl
fldl
cmpsb
cmp
dec
add
or
cli
stos
or
mov
fdivl
pushl
adc
loopne
repz
mov
cmpsl
jg
popl
outsb
pusha
cld
pop
inc
or
dec
gs
add
icebp
jb
int3
mov
lret
decl
pop
test
lret
pushf
fmulp
mov
loop
push
pop
adc
ds
mov
inc
lcall
scas
mov
adc
pop
jae
inc
xor
inc
shl
pushf
mov
xor
push
mov
sbb
push
popa
xchg
cld
jmp
imul
dec
xor
or
jmp
cmp
push
and
sub
mov
mov
hlt
test
or
xchg
mov
sub
cwtl
incb
out
jne
fwait
push
enter
mov
push
dec
mov
icebp
pop
ljmp
stc
add
sbb
dec
ret
sti
cmpb
outsl
notb
fbld
int3
jns
adcb
mov
bound
mov
incl
cmpsb
scas
loop
call
cmp
add
mov
jns
xchg
mov
jne
mov
test
adc
jo
mov
in
test
lret
jne
cld
ljmp
ffree
mov
xchg
mov
or
stos
or
inc
xor
ja
adc
ss
jl
std
cs
shrl
in
subl
jb
ljmp
out
outsb
shlb
lock
xchg
jae
adc
sti
popa
mov
xchg
ljmp
test
jb
or
pop
js
cmpsb
cmp
cmp
das
add
clc
lods
push
cmp
jge
push
insl
ss
push
xchg
cli
and
and
shrl
adc
rcl
inc
mov
xor
cld
ja
inc
ja
sbb
in
rclb
cld
out
hlt
jl
xchg
cmpsl
in
xchg
jge
inc
push
jl
xor
call
lock
dec
inc
mov
add
jg
pop
clc
sbb
test
out
mov
and
sub
jge
ljmp
cltd
cmp
addl
in
push
nop
xchg
sub
or
jns
mov
aas
jecxz
adc
aaa
mov
and
pusha
xlat
ficoms
sub
push
mov
test
jg
lock
popa
lea
add
jg
and
movsb
stos
inc
and
xor
repz
cmp
cmc
mov
pop
push
les
imul
xor
dec
mov
jl
adc
pop
xchg
movsl
xor
aaa
arpl
fldl
loopne
mov
adc
add
jmp
push
inc
or
insb
pop
xchg
jmp
subb
ja
call
sbb
int
and
cmp
fcoml
jmp
add
push
and
pusha
jmp
push
orl
gs
lods
and
cmc
add
jecxz
adc
popf
inc
ja
std
pop
cmp
and
ret
push
inc
add
mov
cmp
fstl
jo
shrb
push
int
add
mov
and
xchg
jns
fdivr
mov
mov
cmp
movsl
add
and
imulb
or
cmpsb
and
or
aam
sub
aaa
xchg
jbe
cld
cld
add
insb
push
ljmp
mov
lock
or
insb
movsl
ffreep
out
add
sbbb
lcall
lds
jnp
jge
cmp
xor
clc
rcrb
sbb
ds
xor
icebp
into
test
fbstp
nop
test
cwtl
mov
cmp
xchg
mov
lods
test
ljmp
sbb
lcall
add
test
addr16
pop
add
push
cmp
add
mov
mov
xor
fcomip
mov
int
ja
insb
sar
pusha
loope
add
mov
lods
cmp
pop
test
and
sbb
nop
int3
cmp
jae
and
add
jg
aam
jg
arpl
sub
add
adcb
int
inc
dec
rcrl
push
jne
cmp
sub
fcomps
iret
addr16
leave
adcl
push
std
or
cli
sbb
jnp
xchg
add
mov
andb
pop
popa
pop
mov
add
jl
and
jecxz
aaa
int3
cmp
in
and
stos
arpl
mov
lcall
inc
aaa
xchg
cmpxchg
je
rcr
cmc
decl
mov
adc
sub
sbb
pop
push
mov
mov
mov
das
insb
sbb
adc
mov
pop
mov
adc
adc
jmp
jge
test
ret
out
mov
stos
cmpsl
js
nop
pop
mov
int3
daa
sub
scas
fcoms
bnd
push
adc
xor
ret
xchg
rolb
push
inc
cmp
out
cmc
xchg
das
nop
mov
mov
pop
icebp
cmp
dec
pop
call
xor
divb
xor
shrb
ja
cmpb
enter
mov
cmp
or
cwtl
out
mov
aam
adc
push
adc
das
ljmp
or
in
aad
xorl
mov
sub
or
sbb
cmp
or
icebp
jmp
add
mov
mov
add
popa
inc
mov
pop
mov
push
adcb
jg
mov
or
jl
jne
pop
mov
adc
mov
lds
nop
test
ret
adc
loope
pop
je
jnp
push
fst
addr16
loop
cld
das
xor
and
adc
ret
inc
mov
jmp
mov
jmp
mov
add
or
inc
dec
cmp
xchg
inc
pop
xorl
push
sbb
mov
divb
or
sbb
stc
andnps
notl
in
outsb
arpl
push
inc
cmp
push
mov
adc
rclb
jbe
dec
and
adc
rorb
into
pushf
divb
xor
stos
dec
push
mov
push
sbb
jb
jl
push
push
add
or
cmp
test
data16
push
mov
sarb
lds
pop
inc
cmc
xor
dec
stc
adc
jnp
fwait
cmovs
in
add
icebp
mov
mov
ds
dec
ret
push
fs
insl
cmp
pop
test
mov
iret
lea
fiadds
mov
jno
ret
and
fsts
pop
inc
xor
int
adc
push
sahf
mov
sbbb
inc
jbe
sbb
loopne
fs
ret
fistl
ss
lock
enter
lds
mov
xor
add
arpl
outsb
add
mov
fs
mov
jnp
stos
loopne
xor
pop
sbb
add
movsl
and
jnp
jl
mov
loope
push
adc
and
es
scas
push
jmp
add
inc
sub
data16
int
hlt
fstpt
ret
hlt
sbb
xor
pop
lods
mov
push
pop
loopne
mov
pop
mov
inc
loopne
mov
xchg
lods
add
cmc
out
bound
icebp
mov
subl
inc
add
frstor
sahf
adc
int3
cltd
xchg
mov
test
pop
pusha
mov
cli
sbb
jle
es
cltd
mov
or
add
pop
push
cmpsl
xchg
add
cmp
add
daa
mov
ds
outsl
and
add
inc
jg
es
out
pop
nop
testb
inc
test
mov
pusha
pop
ds
adc
test
xchg
mov
push
add
aas
stos
sbb
mov
cmp
popf
rolb
lahf
addb
mov
js
iret
jbe
sbb
add
das
ret
add
or
mov
cmp
fsubl
jb
adc
jo
xlat
shll
sbb
jb
les
insl
cli
in
ret
jb
cmpsl
adc
push
nop
dec
xor
ljmp
jl
ret
sbb
cmp
ret
sub
sbbb
mov
mov
repz
xchg
leave
in
or
push
pop
aas
loopne
aaa
jno
lock
sti
sub
out
test
aas
mov
je
xor
add
add
dec
jmp
sbb
pusha
cmpsb
decl
data16
stc
inc
movl
push
xor
into
cmp
and
es
sbb
stc
out
inc
mov
sbb
mov
xchg
in
test
push
add
push
adc
jmp
mov
push
jne
imul
js
pop
pop
mov
icebp
fistps
pop
pop
ret
movsb
jae
cmp
or
sbb
decl
mov
jne
lret
cs
xor
lea
or
or
repnz
add
test
aaa
dec
mov
divb
push
mov
or
cmpsl
and
adc
sbb
fnstenv
jg
in
mov
fwait
adc
pop
jb
mov
and
sahf
cld
decl
mov
andb
sub
add
arpl
cli
out
cmpsb
jmp
mov
outsl
push
cwtl
sbb
mov
addb
dec
add
mov
mov
mov
fs
repz
sar
cli
add
and
or
rcrl
add
aaa
cmp
xor
inc
push
and
cld
cmc
mov
mov
stos
orb
gs
xor
mov
andl
adc
out
mov
jno
ret
stos
dec
std
call
xchg
rcll
xchg
fxam
push
orb
addl
push
mov
shlb
sub
adcl
push
fdiv
ljmp
clc
aam
inc
adc
mov
shl
pushl
test
inc
jbe
cmp
mov
inc
or
lds
sbb
adc
mov
hlt
fisttps
out
les
and
cwtl
ljmp
nop
sub
lods
push
lahf
sub
pop
mov
inc
adc
and
mov
adcl
sub
push
roll
cmc
add
dec
xor
rorb
aam
add
aad
sbb
jge
xor
add
loopne
pushf
gs
dec
iret
sahf
std
add
mov
shlb
in
ss
out
fiaddl
pop
pop
sbb
dec
test
ljmp
pop
daa
cmp
sbb
dec
int3
inc
repnz
or
xor
fs
out
add
iret
lock
call
xchg
bound
inc
inc
jmp
add
rol
into
add
popa
push
fmul
mov
xchg
cmpl
mov
mov
add
mov
push
and
pushf
fiaddl
mov
inc
mov
es
sbb
mov
aam
add
movsb
jbe
lcall
or
shlb
jg
scas
fs
frstor
push
jecxz
scas
mulb
cmp
je
or
and
mov
mov
fcmovnu
jmp
fdivrp
xchg
xorb
sar
rorb
rolb
ret
xor
or
loopne
mov
lods
ffreep
lret
bound
mov
movsl
lock
jne
dec
mov
add
std
test
xor
lahf
jb
pop
jo
enter
jl
cmp
test
push
call
sub
jp
outsl
xchg
adc
jg
out
hlt
mov
xor
loop
aad
jb
shrl
pop
add
sub
cmp
jno
adc
stos
daa
scas
cli
call
dec
xor
aam
xchg
iret
inc
push
shrl
xchg
add
clc
ret
xchg
test
idivb
in
hlt
add
cmp
pop
fcos
sbb
adc
adc
fwait
xchg
mov
test
andb
ret
adc
pop
and
mov
dec
hlt
sub
lcall
outsl
mov
pop
rclb
sarl
jo
pminub
lock
ljmp
and
jg
mov
inc
push
xor
jnp
shlb
rclb
add
sbb
pop
xchg
pop
jno
sub
pusha
sub
pop
or
scas
mov
jns
pop
adc
mov
ss
xor
fwait
inc
push
rol
or
jmp
cs
add
inc
dec
arpl
adc
push
cmpsl
sub
and
fst
addl
lret
rcll
hlt
out
fildl
rcrl
sar
pop
mov
ret
lcall
dec
xchg
or
dec
cld
decl
pop
and
push
lret
lods
xchg
lock
xchg
add
adc
cli
in
nop
xor
cmp
cld
sub
gs
sbb
decl
je
add
out
cs
sub
roll
cs
jmp
push
inc
add
movsl
push
add
or
dec
inc
jle
dec
and
cmp
nopl
ljmp
es
out
cmp
sbbl
clc
loopne
movsb
data16
stc
add
add
xchg
dec
inc
dec
mov
add
inc
jmp
cli
add
sbb
ljmp
popa
add
push
dec
and
or
mov
hlt
inc
pop
xchg
or
mov
xchg
addb
test
sub
mov
pop
insl
xchg
insl
push
ljmp
pop
cmpl
or
and
ljmp
clc
scas
add
loop
pop
pusha
mov
mov
or
cmp
push
sub
movb
das
cli
mov
mov
inc
cli
add
fstp
xor
xchg
lahf
mov
fmuls
test
mov
mov
dec
jbe
mov
outsb
loopne
and
xor
das
add
push
negl
push
scas
imul
mov
or
int
xchg
dec
andb
xchg
lock
or
call
inc
clc
lcall
inc
or
inc
and
mov
pop
out
movsb
lea
add
ja
sti
test
sbb
jecxz
cmp
mov
ja
mov
or
call
lcall
xchg
pusha
lcall
and
adc
jmp
and
cli
sbb
call
cmc
test
mov
mov
cmp
mov
and
int
ret
outsb
lods
pop
add
xor
adc
sbb
bound
pop
add
and
push
or
cmpsl
xlat
gs
push
xor
out
or
and
add
or
sbbl
int3
inc
ret
sbb
xchg
xchg
loopne
fildll
int3
add
adc
add
insl
dec
cmp
push
xor
out
ljmp
out
dec
fmuls
and
ds
fdivrs
popf
fwait
adc
shll
daa
adc
xor
mov
jge
and
dec
test
and
cmpb
or
inc
adc
sub
aaa
or
adc
push
jo
test
jb
mov
dec
clc
rcrl
sub
subb
rolb
rcll
or
mov
jmp
stos
fs
pusha
aad
push
sahf
adc
xlat
cmp
mov
jg
xor
xchg
inc
pop
cmp
cli
aas
xchg
mov
xchg
cmpl
xor
mov
or
es
mov
add
sbb
sub
jo
int
push
movb
cmp
std
std
jmp
adc
fcomps
jae
test
pop
add
cli
cmp
cli
lret
cmp
lock
or
adcl
mov
and
mov
les
mov
xor
sub
xchg
loopne
inc
lock
push
mov
xchg
call
push
or
pop
inc
sarb
pop
mov
xchg
sub
or
or
std
mov
leave
or
pop
dec
and
mov
inc
filds
sarb
hlt
lods
sbbl
push
adc
bound
movsb
sbb
aaa
sub
mov
mov
daa
xchg
sbb
sbb
cmc
sbb
fwait
or
test
incl
jno
cmpsb
lret
mov
sbb
ljmp
xor
jo
sbb
mov
jg
xchg
cmp
xchg
xchg
out
xchg
xor
fs
into
pop
enter
sar
sbbb
jmp
xor
add
mov
mov
incl
sub
push
mov
jg
adc
sub
inc
mov
movl
lock
jo
pushf
xchg
incl
imul
adc
ret
imul
cli
loopnew
add
xorb
loope
jne
jmp
adc
mov
dec
jg
dec
out
mov
fimull
jns
stc
sarl
and
loopne
push
inc
sti
incl
and
int3
movb
adc
loope
addb
jg
dec
clc
and
and
and
call
nop
cs
ljmp
lock
push
or
fiaddl
inc
dec
pop
jbe
push
fldenv
lds
ljmp
ljmp
push
daa
rcll
out
insb
jge
xchg
fwait
loop
xchg
xor
cwtl
in
xchg
jg
adc
loopne
cld
mov
cmp
or
adc
shrl
add
add
jle
andl
repz
inc
sbb
pop
and
fdivs
adc
repz
incl
pop
jno
cld
mov
jo
mov
push
inc
cmp
xchg
js
insb
or
cmp
mov
or
jns
inc
mov
add
scas
inc
xor
adc
pop
hlt
or
shll
in
jmp
pushf
mov
decl
adc
int3
sub
cmp
cs
lea
jo
xor
xor
pop
jno
sub
cmp
std
inc
mov
dec
imul
imulb
or
push
add
ds
lcall
xchg
push
lret
sbb
rorb
fsubrs
xchg
jbe
and
jmp
stos
inc
cwtl
or
push
push
pop
dec
movsl
ret
je
dec
dec
mov
or
or
subl
rclb
and
stos
push
outsl
jb
sbb
gs
push
push
mov
shlb
cmp
jns
scas
decl
inc
add
pop
stos
test
out
sub
testl
fbld
cmc
shrl
and
inc
les
pop
pop
arpl
int
rcrb
insl
mov
aaa
add
imul
lods
add
push
mov
adc
scas
xchg
push
mov
leave
call
nop
fwait
jne
cmpsb
call
orl
mov
test
or
xchg
adc
and
dec
dec
push
loop
add
xchg
mov
push
clc
outsl
decb
test
sub
and
sub
and
ljmp
incl
mov
sbb
sbbl
cmpsb
xchg
loopne
out
shll
das
pop
aaa
cwtl
mov
lret
adc
xchg
jge
mov
fsubs
add
push
xchg
pop
inc
loop
dec
ret
pop
cmp
cs
std
in
cmp
outsb
fnstcw
adc
stos
aam
or
lods
subb
adcb
jmp
addb
outsl
jp
mov
push
je
aaa
dec
pop
push
jp
sarl
cli
pop
std
ljmp
loop
addb
cmp
test
xchg
call
dec
shlb
dec
lea
lcall
jecxz
adc
or
leave
adc
pop
shlb
call
sbb
idivb
sbb
pop
add
mov
cmp
bound
mov
pop
clc
jns
ret
xor
lahf
and
lods
mov
loop
andb
fdivrp
sub
add
or
insb
push
mov
inc
stc
push
cmp
adc
scas
je
and
jb
std
jg
icebp
arpl
loope
jns
inc
jecxz
xchg
or
cltd
cmp
incb
enter
sub
mov
int3
insl
test
inc
and
push
mov
adc
and
sbb
add
decl
push
add
push
addb
jb
lods
jo
les
xor
push
fcompl
adc
lods
push
mov
and
cltd
cmc
fwait
ret
sub
dec
and
in
inc
std
mov
ja
mov
add
mov
lds
pop
add
fnstcw
xor
sahf
dec
cmp
movsb
xchg
test
push
pop
cli
orb
cmp
pop
push
sbb
subb
out
dec
loopne
xor
inc
fimull
loop
cmpb
add
or
xor
push
or
rolb
sar
or
lods
les
jo
mov
lcall
push
add
ret
paddd
pop
loop
jmp
dec
cld
lods
push
push
test
pushf
mov
shr
stos
decb
aaa
adc
xchg
xor
mov
cld
push
loop
xchg
lcall
mov
stc
add
loopne
data16
lock
jbe
shl
or
or
icebp
test
jmp
mov
cmp
sub
and
sbb
daa
add
es
inc
out
popa
sar
inc
icebp
dec
lock
push
div
les
es
mov
add
or
jbe
leave
or
mov
sub
push
mov
push
stc
scas
les
and
icebp
in
adc
loopne
pop
mov
mov
pop
lock
int3
lock
outsb
arpl
adc
adc
sub
add
leave
repnz
pop
sarb
push
xor
mov
jo
jne
les
ret
mov
cwtl
dec
mov
jge
lret
aam
dec
cmp
adc
cld
ret
ja
sbb
mov
mov
test
push
inc
or
fprem
mov
shlb
clc
fistpl
incb
jg
dec
dec
or
mov
outsl
cmpsl
dec
inc
push
sarl
jmp
loop
push
sbb
mov
mov
sub
xor
mov
inc
in
cmp
fistps
cli
ficoms
and
das
ficompl
sbb
mov
pop
outsb
fdivs
lock
sub
add
inc
bound
cs
pop
inc
cmp
scas
test
add
addr16
lcall
mov
mov
inc
jl
mov
mov
cwtl
adc
dec
pop
cmpsb
fwait
cmpb
inc
hlt
pop
dec
enter
mov
cmc
pop
sbb
addr16
push
lock
enter
or
add
aad
jp
add
and
imul
movsb
inc
adc
lock
dec
outsb
negb
push
in
pop
aaa
add
decl
pushf
add
mov
inc
sbb
sub
push
loopne
xchg
xor
clc
repnz
or
push
jmp
add
adc
popa
dec
jno
insl
cli
mov
mov
sub
in
das
and
mov
add
add
test
ljmp
mov
rolb
faddp
lret
and
adc
aam
xchg
rclb
enter
cmp
sbb
int3
push
push
inc
scas
decb
xor
sbb
dec
pop
insb
xchg
dec
fwait
loop
push
cld
or
and
iret
push
into
jge
cmp
push
xor
popf
add
stc
cs
mov
push
mov
dec
add
or
jb
fwait
jg
pop
or
push
inc
out
mov
fwait
xchg
fiaddl
xchg
inc
push
imul
inc
pop
mov
and
add
sbbb
jmp
adcl
int3
aas
xor
lods
mov
pop
aas
ret
xchg
addl
addb
pop
loope
movsb
popl
dec
dec
movsb
add
arpl
pushf
sarb
xor
add
inc
mov
in
push
ret
test
dec
outsb
jns
inc
sbb
push
hlt
lcall
loope
sbb
push
pmaddwd
out
into
ds
pop
add
add
stos
pusha
sub
inc
push
sub
sbb
and
add
jb
clc
stos
jo
hlt
cmp
sbb
es
sar
mov
dec
inc
pushf
push
inc
fildl
mov
jae
mov
repz
add
int
scas
cli
push
lods
shlb
mov
or
call
or
rclb
xchg
pusha
add
pusha
sub
fmuls
ss
mov
pushl
xchg
rolb
push
push
push
mov
xchg
inc
inc
add
lahf
lea
adc
sub
loopne
imul
loopne
mov
and
outsb
cmpsl
mov
mov
inc
stos
dec
mov
rcrl
icebp
mov
scas
push
in
cs
stc
mov
pop
mov
pop
and
inc
arpl
or
jns
add
bound
andb
sub
jnp
mov
xor
into
popa
addr16
xchg
cmpsb
sbb
mov
fucomip
inc
pop
inc
cld
add
sbbl
out
and
enter
add
lea
mov
or
xchg
and
fadd
and
lcall
into
adc
inc
aad
xchg
sbb
les
jmp
cmp
xor
pop
in
mov
addr16
push
mov
mov
or
sbbb
inc
fdivl
aaa
cld
outsl
cmp
call
sbb
inc
cld
mov
jmp
ret
mov
pop
sbb
sbb
adc
cwtl
pop
faddp
mov
mov
sub
nop
rolb
add
decl
and
xchg
xchg
test
aaa
pop
pusha
add
and
fstpl
xchg
or
sbb
pop
add
ret
pushl
add
xor
loopne
mov
stos
fistpll
roll
popf
jecxz
push
xchg
cld
push
inc
xor
mov
adc
pushf
xor
test
mov
pop
pop
dec
add
push
js
decl
stos
push
and
rolb
add
add
sub
xchg
mov
sbb
mov
outsl
mov
mov
mov
inc
lret
or
pop
shrb
mov
mov
and
pop
out
cmpsb
dec
add
lods
outsl
repnz
fiaddl
or
and
les
push
data16
pushf
adc
mov
cmpsl
push
mov
out
sbb
push
pop
adc
lds
dec
mov
data16
or
rol
mov
jg
or
cmpsb
add
push
lcall
xchg
push
popa
stc
clc
and
gs
add
or
fs
mov
lods
and
cmp
out
sbb
loopne
out
clc
mov
shlb
xchg
inc
mov
loop
or
jecxz
stc
out
inc
lods
adc
and
iret
dec
pop
test
pop
dec
push
mov
jge
cmp
and
inc
icebp
push
outsb
inc
cli
push
stc
out
and
pop
or
pop
xor
sar
aas
xlat
fsts
loope
mov
fs
fildll
icebp
sbb
push
call
sbbb
lods
xor
test
cmc
or
xchg
out
dec
xor
stos
add
js
pop
test
adc
testl
insl
jl
mov
jbe
notb
ljmp
mov
dec
jge
adc
adc
sub
femms
rcrb
dec
pop
mov
push
jge
cmp
add
push
rcll
and
incl
int3
lds
inc
aas
lret
adc
jge
nop
mov
outsb
or
jb
cmc
test
orb
and
mov
sbbb
loop,pn
add
shrb
or
push
aaa
cld
inc
jg
int3
mov
inc
mov
rorb
xlat
orl
jb
dec
mov
or
fidivrs
adc
add
rolb
jns
nop
or
add
mov
cmp
adc
nop
bound
aaa
jl
aad
fsubrs
loop
lcall
jle
inc
inc
pop
cmc
pop
ror
lcall
or
add
adc
xchg
mov
mov
add
push
jge
jns
pop
gs
xchg
lock
test
imul
cmp
add
adc
mov
fs
test
add
xor
mov
sub
jnp
nop
rdtsc
push
add
lret
adc
push
in
inc
or
jg
pop
sar
sahf
inc
pop
or
add
add
std
movsb
mov
cs
rol
testl
pusha
movsl
push
push
rcrl
sub
mov
cs
fucomp
lock
inc
mov
test
or
sbb
mov
data16
imul
test
or
jg
lcall
add
add
sahf
dec
pop
pop
incl
lret
lock
aad
mov
sbb
pop
or
fs
mov
testb
and
xor
cmpsl
pop
jbe
sbb
in
mov
pop
jne
xor
push
jb
loop
loop
mov
psubusb
lcall
lea
les
mov
cmc
mov
movsb
pusha
into
or
in
or
adc
loopne
jno
ljmp
loopne
and
xor
fildl
test
sub
xor
fcoml
pop
popa
jbe
add
mov
imul
ja
jle
and
cmp
jg
pushf
lcall
cld
sub
or
xchg
shll
pop
or
mov
fcompl
mov
aaa
sbb
xor
sahf
xchg
movsl
into
fdivrs
arpl
inc
addb
lret
push
cli
adc
decl
xchg
or
dec
movsb
imul
dec
int3
iret
dec
fcmovb
in
faddl
ret
or
pop
or
repnz
test
fs
ficomps
xor
int
lods
sahf
repnz
or
stos
les
and
sub
incb
stos
cmp
ja
sbbl
ljmp
imul
dec
nop
inc
add
jg
aas
jp
push
pop
inc
jmp
cwtl
mov
jns
mov
insb
fidivl
or
lret
xchg
adc
mull
test
and
pop
fs
or
movsb
pop
clc
dec
push
fstpt
add
int3
adc
cs
dec
in
or
in
ja
lods
xor
sub
gs
xor
fucomip
pop
mov
ror
fimuls
rorb
inc
cld
mov
and
push
xchg
lea
pop
sub
adc
push
sub
testb
lret
adc
mov
adc
jg
daa
movsl
lret
loope
add
aas
and
jo
xor
outsl
pushf
sub
or
fists
cmpsl
decl
add
sbbl
inc
negb
mov
mov
aaa
xor
ficomps
add
inc
inc
dec
cmpsb
pop
sub
push
pop
mov
out
add
add
lcall
hlt
cli
decl
repz
icebp
inc
mov
inc
add
push
int
bound
test
into
xor
out
cmp
pushf
or
adc
mov
negl
xchg
add
mov
push
ja
and
ljmp
lea
clc
pop
or
notb
mov
lea
insb
add
mov
fidivs
rcrl
fimull
sub
and
or
jb
sbb
cmp
lods
das
clc
xorl
adc
ret
xchg
fcomps
aas
adc
test
imul
out
lock
add
fsubrl
loop
rcrl
or
mov
andb
inc
or
pop
js
mov
repnz
icebp
pop
add
addl
push
les
inc
and
aam
cld
es
mov
pop
dec
add
pushf
add
dec
outsl
in
loope
lock
cmp
data16
decl
shrl
lds
mov
cmpsb
push
scas
xor
mov
cmp
xchg
sbb
or
pop
and
call
push
pop
clc
addb
cmp
outsl
mov
addr16
je
xor
cmp
fwait
loop
push
inc
leave
in
xor
or
jo
sahf
and
test
xchg
rcll
and
and
loope
add
ret
lods
cmp
cwtl
push
adc
cmp
mov
or
sbb
outsl
or
lods
loop
cmp
daa
hlt
lret
test
inc
pop
lock
mov
adc
rorb
or
pop
orb
push
mov
ja
add
ljmp
inc
aaa
push
cmpsb
pop
je
mov
cmp
xor
pushl
pop
inc
pop
mov
filds
sahf
pop
cmc
out
mov
add
push
mov
or
outsb
jmp
clc
fisubl
mov
mov
mov
es
addr16
decb
xchg
push
stos
test
fistps
xchg
xchg
add
push
aam
add
adc
popa
add
test
jne
jge
pop
cltd
pop
xchg
cmpsb
xor
mov
inc
sub
movsb
aas
inc
xlat
hlt
lods
jge
and
add
loop
movsb
jmp
push
lock
mov
test
mov
push
or
cli
jns
push
adc
inc
lods
inc
xchg
pop
repnz
data16
mov
fcomip
imul
mov
jp
dec
add
push
pop
xor
insl
pop
jo
aam
sar
adc
ret
les
dec
enter
loopne
ljmp
inc
push
bnd
stc
inc
inc
cmp
xchg
and
sub
rcll
xchg
outsl
inc
inc
inc
leave
daa
loope
mov
out
dec
loopne
add
es
sahf
inc
xorb
hlt
pushl
add
roll
inc
cmpsl
enter
mov
pop
push
lock
pop
pop
rcl
repz
or
push
pop
push
jnp
push
jle
add
jno
gs
call
xor
dec
xor
in
pop
daa
cmp
lds
nop
and
fcmovne
in
push
repz
shll
loop
ss
sub
cwtl
push
mov
pushf
test
add
cmp
std
mov
dec
shlb
push
add
cmp
mov
xor
outsl
sti
mov
leave
pop
insb
cmp
inc
mov
cmpsb
push
cmp
xlat
add
idiv
xchg
pop
decl
in
sbb
pop
movsb
inc
jns
rolb
pushf
push
rorl
or
sti
bound
jge
adc
xchg
lahf
adc
and
adc
xor
mov
cmp
dec
lcall
shr
mov
add
divb
add
stc
ret
xchg
jge
sub
push
cwtl
mov
dec
and
xor
xor
mov
dec
pushl
add
mov
jle
pop
in
inc
pop
cmp
shll
dec
mov
xchg
sub
jne
in
in
jle
incl
aas
cmp
ss
outsb
in
loope
push
sbb
add
add
repnz
adc
sti
fdivl
lcall
mov
lock
sbb
add
idivb
lock
adc
xor
loope
mov
ret
xchg
divl
enter
lods
fs
popa
daa
inc
in
mov
mov
orl
scas
insb
mov
mov
and
jnp
pushl
std
add
loopne
orb
stos
add
iret
sub
fnstenv
cmp
push
loop
fcomip
jns
push
sub
pop
mov
mov
leave
pusha
out
cli
mov
test
mov
in
clc
pop
lods
inc
scas
jmp
rclb
pop
addr16
ret
lret
mov
dec
adc
mov
mov
hlt
inc
push
out
mov
fcoml
push
sti
rolb
ds
xchg
mov
dec
mov
sub
pop
or
nop
stos
inc
xchg
xorl
mov
mov
add
addr16
dec
test
xchg
jl
cmp
out
out
clc
mov
xor
js
cmp
loope
test
adc
test
xorb
adcl
roll
in
mov
call
std
ffree
jbe
add
or
mov
clc
call
mov
int3
lret
push
push
fiaddl
push
cmc
jmp
outsl
fbstp
mov
mov
sub
mov
idivb
jg
fs
xor
imul
aaa
mov
lcall
jo
aam
test
popf
into
divl
ss
push
decb
rclb
cmp
jo
lcall
fadds
push
inc
pop
push
divl
cmc
repz
fbld
test
test
out
dec
inc
push
std
pop
clc
insb
rcrb
pop
roll
inc
and
push
jne
bound
dec
sub
sub
xchg
pop
push
es
fisubl
cmpsb
push
ljmp
jbe
jle
mov
add
movsl
mov
add
outsb
cli
jg
ja
hlt
xchg
push
and
sarl
pop
mov
adc
mov
pop
or
dec
loope
negb
mov
cs
lds
rclb
sbb
into
mov
pusha
jo,pt
jno
push
push
dec
imul
mov
dec
lods
add
mov
sbb
fistps
jl
add
in
inc
mov
lcall
jnp
outsb
cmpl
hlt
fdivr
add
inc
jmp
sbb
orb
cmp
xlat
push
or
pop
xor
mov
ljmp
cli
pushl
addr16
inc
sti
test
mov
add
pop
mov
sub
pop
fistpl
mov
sbb
arpl
das
pushl
mov
out
insb
aaa
adc
add
or
fists
or
cmp
cs
jecxz
cli
shll
adc
lds
test
fists
adcb
mov
in
sar
xchg
lahf
loopne
push
mov
or
aam
xchg
sbb
jbe
mov
add
pop
or
add
xchg
lret
roll
sbb
cld
daa
add
xchg
or
lret
fdivp
push
pop
jae
mov
push
fdiv
nop
js
adc
mov
rorb
add
jp
sub
daa
std
lcall
cmpl
hlt
int
dec
mov
sbb
rolb
lods
ret
push
test
or
adc
mov
adc
or
add
mov
or
andl
push
push
test
dec
xchg
push
in
adc
push
aam
outsl
fwait
loope
movsl
pop
aaa
jecxz
sbb
mov
rcl
stos
je
add
incl
push
jp
outsb
xor
pop
subl
jbe
rcll
fistl
pop
xchg
cltd
movsl
mov
insb
adc
orb
push
adc
stos
mov
mov
filds
jl
jl
cld
push
jge
lods
push
fs
lods
mov
mov
xchg
sahf
cmp
scas
adc
xor
pop
or
rolb
mov
dec
jl,pn
movsb
ja
nop
xor
ret
jl
mov
add
aam
push
add
adc
pusha
dec
and
mov
sub
add
das
sarb
sub
cmp
rcr
add
mov
aaa
sarb
inc
jle
iret
xorb
cmp
sar
xchg
mov
mov
data16
mov
inc
loope
adc
std
jmp
mov
lods
jle
sbb
sbb
je
xchg
push
insb
and
dec
pusha
stos
cmp
ret
inc
call
push
test
ret
jb
pop
xlat
hlt
sbb
jg
pop
push
mov
push
mov
sub
jg
dec
add
sbb
add
push
xchg
sbb
dec
add
pop
clc
add
jae
add
pop
test
ja
dec
out
and
std
add
xchg
cs
adc
lock
out
incl
enter
bound
sbb
pop
in
scas
aad
mov
mov
je
adc
mov
add
dec
sbb
add
pop
pop
faddl
inc
jns
ret
mov
inc
imul
jl
push
pusha
adc
dec
orps
test
mov
incl
fcomi
add
das
mov
inc
dec
cltd
xchg
mov
cmp
push
adc
or
fildll
xor
sti
cmp
jg
or
inc
xchg
stos
mov
mov
cmpsb
les
push
ja
in
cld
and
add
sub
imulb
jnp
das
cld
loopne
mov
incl
xchg
stos
sub
or
mov
sub
pusha
mov
sub
leave
cld
test
cmpsb
jb
dec
scas
jae
fs
mov
js
inc
movsb
daa
les
aad
test
sub
inc
mov
xor
adc
stos
pop
jp
lock
jg
sbb
inc
repnz
dec
mov
push
cmp
mov
sub
sar
fistps
outsl
jmp
pusha
mov
shll
xlat
inc
popa
pop
je
pop
icebp
jnp
or
lahf
cmp
jg
stos
test
enter
mov
adc
push
push
fidivrl
mov
xchg
nop
je
aaa
add
imul
ret
sbb
lods
cs
mov
pop
mov
add
jp
insl
out
inc
aaa
sub
xor
incl
and
mov
xchg
mov
cwtl
inc
and
inc
popa
cli
aaa
inc
push
outsb
clc
mov
xchg
cmp
jmp
cmpsb
push
add
insl
in
lret
cmp
push
decl
mov
jno
add
scas
jg
sub
rclb
leave
mov
lock
push
es
and
rorl
or
or
xchg
or
xchg
leave
add
jecxz
or
or
int3
movsl
cmp
mov
stc
mov
filds
and
inc
add
add
vmaxps
and
or
popf
aam
fs
push
es
sub
adc
clc
scas
cli
sbb
outsl
adc
addl
mov
lods
in
stos
aaa
cli
mov
add
mov
inc
xor
mov
jp
ljmp
stos
gs
dec
inc
ficomps
inc
add
jg
jp
call
sbb
outsb
cmpb
insb
pop
xlat
test
jp
test
insb
mov
dec
aas
add
je
jge
and
test
out
iret
xor
push
jle
pop
hlt
inc
cli
and
int3
test
jmp
sbb
pop
jmp
jb,pt
jle
inc
jb
mov
and
push
push
ret
fucomip
repz
adc
movsl
sbb
dec
insb
enter
add
pop
ljmp
jl
inc
cmp
push
sub
adc
clc
ret
xor
sub
sbb
push
loop
sub
xor
testb
jle
pop
adc
add
or
or
scas
rcrl
and
add
jl
jg
cmp
daa
inc
jg
dec
addr16
ret
and
sti
sbb
inc
mov
add
bound
xchg
or
push
add
inc
stos
ret
and
adc
mov
jbe
sbb
shlb
movsl
lahf
movsl
mov
stos
outsb
and
into
cmp
mov
sbb
cld
outsl
dec
std
into
les
pop
enter
and
sbb
inc
cmp
js
fwait
xor
add
in
cld
rorb
fistps
push
repnz
push
jmp
ljmp
mov
push
or
pop
dec
scas
repnz
cltd
decb
aad
ret
push
push
mov
mov
pop
dec
inc
aam
adc
fiadds
outsb
stos
mov
subb
out
movsl
jmp
push
or
insb
aas
out
mov
shlb
fists
push
enter
flds
jne
movsl
aam
movsb
xor
es
subb
or
mov
hlt
pop
lds
ds
ret
lcall
test
push
and
cs
fadds
push
sub
inc
lea
fimull
fdiv
and
and
repz
shlb
pop
mov
jecxz
out
cld
idivb
sbb
push
push
mov
dec
cmp
sub
incl
rclb
adc
sbb
or
je
testb
pop
out
cmpsb
pushf
fadd
loopw
inc
adc
cmc
ja
cmpsb
push
cmpl
into
mov
add
mov
push
push
xor
pop
repz
dec
inc
cmc
add
and
repnz
lcall
xor
inc
lret
or
inc
jg
ds
adc
dec
mov
mulb
and
adc
loopne
fdiv
mov
jo
mov
or
fiaddl
mov
test
pop
inc
push
push
repnz
addb
mov
aam
adc
sahf
repnz
dec
mov
sbb
sub
decl
movsl
sti
or
jp,pn
cmp
or
rorb
pop
mov
gs
add
mov
dec
mov
sub
movsb
jg
pop
orb
fisttps
cmp
leave
ds
loopne
je
mov
stos
loopne
je
sub
lahf
fmull
ret
mov
and
push
scas
xor
jecxz
mov
data16
imul
mov
add
loop
pop
daa
hlt
das
dec
movsb
ja
addb
adc
push
std
incl
pushf
in
push
mul
int3
icebp
push
aam
imulb
popa
sub
push
orb
push
inc
insb
mov
out
and
mov
insl
or
pop
mov
bnd
push
xor
imul
cwtl
addr16
push
cmpb
cld
cld
mov
dec
xor
dec
adc
orb
fbld
dec
pop
xchg
add
in
add
cld
adc
xlat
call
or
mov
jg
cmpsl
nop
repz
push
jp
pushf
pop
out
xor
les
xchg
das
inc
xor
fcomps
sub
sbb
xchg
out
clc
jg
mov
enter
rcll
int3
stos
lret
xchg
scas
add
jo
mov
pushl
mov
addb
test
ss
mov
and
lahf
add
aam
ficoms
sbb
pushl
push
jno
les
xchg
or
cmp
faddl
std
daa
dec
in
xorb
inc
sub
dec
jg
lock
xchg
bound
cwtl
pop
or
pop
cmp
mov
lahf
push
sbb
mov
inc
xor
lea
stos
sub
add
idivl
data16
push
aad
movsb
inc
adc
pop
call
add
add
mov
je
stos
lock
movsb
xor
pop
mov
push
inc
iret
lods
ret
dec
sbb
jno
icebp
dec
pop
arpl
stos
add
hlt
sbb
xchg
jl
and
adc
xchg
jo
pop
add
pop
movsb
addb
dec
out
add
adc
and
pop
jg
arpl
jp
sub
aas
add
adc
mov
dec
cld
or
pop
dec
xchg
inc
lret
sbb
push
addr16
dec
adc
fistpll
add
iret
cmpsb
pop
enter
movsl
add
scas
or
add
inc
mov
cli
pop
test
nop
mov
xor
jae
add
jg
incl
out
inc
ret
in
push
and
pop
pushf
push
sbbb
add
adc
hlt
dec
ret
mov
iret
dec
cmp
stos
or
mov
push
and
mov
addr16
sbb
dec
loop
ficompl
notl
add
insb
clc
mov
lods
call
scas
mov
aas
pop
sti
cmpsb
fwait
cmp
sub
jb
push
fwait
inc
cld
lcall
jge
jl
or
adc
adc
imul
mov
sub
mov
add
in
test
sub
fucomip
into
pop
fbstp
in
out
test
xchg
fcomi
imul
pushl
cmpsl
add
pop
dec
lret
mov
ljmp
or
mov
add
pop
mov
push
pop
ret
xchg
scas
inc
test
mov
stos
cmp
add
sahf
test
loope
les
xchg
movsb
loopne
outsb
clc
nop
sub
pop
jp
aaa
sub
in
push
cmpsl
ds
jmp
out
mov
dec
xchg
aad
mov
and
test
mov
mov
or
or
mov
daa
mov
lock
sub
and
mov
jmp
pop
stos
jmp
idivb
sub
nop
scas
out
add
mov
mov
loope
or
xchg
scas
aam
lret
add
incb
pop
pushl
push
into
ret
aas
push
call
mov
dec
sub
ficoms
or
xor
adc
jmp
cmp
push
leave
and
fidivrs
push
pop
jmp
xor
test
aam
sbb
sub
in
inc
dec
mov
cs
sbb
dec
outsb
flds
push
mov
sahf
scas
jge
xor
or
sar
mov
icebp
imul
add
inc
lret
cmpb
mov
add
dec
xchg
inc
cmovo
cmp
lods
clc
lds
outsb
cld
pop
sarl
push
les
push
in
jp
sub
jae
mov
pop
add
mov
popa
insb
clc
lods
ret
ret
xchg
xlat
jg
insb
pop
or
and
sbb
inc
roll
call
test
push
xchg
popa
or
adc
jl
sar
xchg
sbb
imul
ret
mov
out
shlb
adc
mov
mov
sub
cmpsl
pop
repnz
es
out
xchg
jg
mov
nop
int
pop
fldcw
ljmp
sbb
jmp
out
pop
sub
mov
sbb
lret
in
adc
cmp
jbe
je
xor
aaa
lods
fsubs
adc
and
repnz
jne
cmpsl
lret
jnp
mov
shrl
xor
jnp
mov
mov
add
cmp
sub
pop
icebp
xchg
insb
push
xchg
add
into
mov
decl
mov
pop
movsb
sub
jns
popa
in
aad
outsb
mov
ret
stos
cmpsb
outsl
clc
xchg
ret
xorl
or
fistpl
clc
leave
xor
or
cld
push
jle
adc
add
inc
add
enter
add
cmp
jecxz
shl
xor
cmpl
mov
dec
pushw
stos
inc
add
pusha
iret
loopne
test
imulb
push
mov
std
push
add
cs
ljmp
adc
mov
cmc
inc
push
cmp
movsl
leave
out
es
sbb
pop
test
idivb
push
test
cmp
pop
jge
inc
fwait
mov
cmp
adc
repz
dec
test
push
push
sbb
jo
je
fwait
mov
mov
int
into
xchg
das
mov
xchg
fidivrl
je
xchg
jg
pushl
or
xorb
xor
and
pop
mov
mov
push
cltd
add
inc
jno
out
xchg
mov
aas
shl
out
pop
cltd
lock
cmp
push
fisttps
lock
push
ret
mov
vcmpps
or
scas
std
cmp
add
inc
or
jnp
cmpsb
inc
cli
ret
or
and
pop
add
and
sbb
ja
adc
rcrb
call
loope
push
push
pusha
arpl
jl
push
aam
in
xlat
insl
mov
inc
pop
pushf
cmp
xor
and
adc
pop
rol
cld
mov
mov
stc
push
add
jbe
lods
and
inc
loopne
push
in
jne
subl
cmp
inc
sub
rorl
pop
pop
mov
mov
push
and
push
mov
js
fiadds
jg
adc
and
popa
sub
xor
sub
aaa
push
clc
mov
test
add
inc
inc
idiv
push
in
shll
insb
repz
cld
add
bound
mov
pop
jecxz
sub
add
mov
stos
or
nop
jle
or
dec
sbb
adc
fwait
and
pushf
sbb
lods
adc
cld
pop
xor
inc
call
mov
lods
leave
jb
test
das
mov
in
repz
call
inc
js
mov
call
rcrb
lret
jbe
or
push
nop
and
mov
adc
call
or
cmp
adc
sbb
sbb
mov
inc
pop
cmc
add
adc
and
loop
push
lea
sbb
lds
es
aaa
or
adc
aad
push
add
lcall
data16
jg
popf
add
adcl
shll
decl
fcom
incb
cmp
out
je
xchg
lcall
mov
adc
mov
mov
cmp
add
or
inc
loope
arpl
add
jo
aad
jp
push
pop
sbb
gs
push
mov
int
and
mov
adc
icebp
repz
inc
cmpb
shll
ret
ret
jecxz
dec
stos
dec
xchg
and
or
push
xchg
sbb
movb
adc
hlt
and
ja
div
dec
mov
cmp
fdivr
aad
outsb
mov
rcrl
sub
push
push
pop
adc
decb
dec
adc
mov
and
mov
and
or
inc
add
rolb
shrb
pop
js
lods
mov
stos
clc
lock
xor
loopne
inc
fsubs
push
shrb
insb
andl
sar
int
xchg
push
or
cmp
scas
outsl
sbb
mov
cmp
sub
adcb
das
sbb
mov
lock
fs
loopne
ret
data16
mov
dec
sar
or
call
lds
daa
repnz
and
pop
enter
jmp
fdivr
ljmp
cmc
cmp
mov
sbb
adc
sbb
add
dec
insl
jg
mov
mov
sub
je
fwait
mov
lock
sbb
les
repnz
push
cwtl
inc
int
pop
dec
push
xor
mov
out
and
pop
ljmp
pop
inc
bound
stos
movsb
push
enter
mov
xor
jmp
in
push
add
mov
add
cmpsl
push
loopne
xor
adc
loopne
lcall
outsb
pop
stos
icebp
shlb
js
mov
stos
pop
incl
inc
in
pop
pop
add
push
push
mov
jmp
std
test
stc
out
adc
mov
pop
inc
fistpll
inc
loopne
out
int3
mov
std
inc
dec
mov
lock
pop
mov
fldl
jne
xchg
inc
lcall
mov
fdivrl
cmp
sbb
cmp
je
clc
and
adc
inc
scas
pop
pop
and
sbb
or
ret
mov
adc
adc
sbb
sub
rcrb
cwtl
xlat
in
xor
lcall
cld
cmc
pop
mov
int3
dec
xchg
jns
mov
mov
ret
pop
xor
jl
xor
sub
add
mov
out
pop
insb
jmp
add
push
fildl
mov
fstp
inc
icebp
fcomip
cli
daa
cld
leave
mov
mov
push
cmpsl
xchg
sbb
adc
jmp
std
sub
add
mov
jb
sti
mov
icebp
rorl
scas
orb
loopne
fidivrs
push
push
sub
or
xor
sub
loopne
xchg
push
loopne
out
push
mov
sub
push
push
sti
xchg
mov
mov
inc
and
rcrl
cmp
das
lods
push
xchg
jmp
enter
incl
stos
ret
push
mov
xchg
ljmp
jle
daa
mov
outsl
clc
and
ds
add
add
or
adc
aaa
push
in
out
loope
push
mov
push
aam
mov
push
xchg
add
fldcw
add
rolb
dec
loop
outsl
add
mov
ficompl
sbbl
sbb
jp
ret
xchg
cwtl
adc
and
imul
divb
pop
test
or
rcr
dec
mov
call
lcall
sbb
add
decl
cmp
dec
add
xchg
mov
push
lock
cmp
pop
mov
outsb
adc
pop
inc
push
push
jmp
cwtl
notb
cmp
mov
test
smsw
pop
jmp
or
add
in
xor
pop
ret
mov
loope
inc
dec
ret
mov
push
imul
cmc
mov
lcall
add
cmp
test
popa
pop
sar
mov
inc
xor
ljmp
mov
pop
xchg
push
dec
test
inc
into
cmpl
jmp
test
xchg
clc
decl
sbb
jg
popf
sub
push
sub
subb
xorb
insb
lret
push
rcrb
movsb
popa
add
movsb
nop
adcb
adc
push
test
fidivrs
mov
jae
popa
inc
stos
pushl
cltd
stc
pushf
and
adc
mov
or
int
add
add
pop
jle
mov
xchg
inc
xchg
pop
pusha
or
xor
jbe
lock
outsb
repnz
stc
dec
nop
clc
jmp
call
push
fwait
adc
inc
mov
cmp
push
or
mov
push
sahf
test
and
xor
jmp
lock
movsb
xor
add
dec
das
xor
es
push
ds
inc
loope
jbe
push
aam
daa
jo
mov
in
push
add
test
mov
and
mov
call
pop
in
or
add
aas
adc
xchg
in
jo
push
jl
or
jl
or
enter
ret
cs
pop
mov
sbb
sub
movsb
in
sbb
addr16
xor
into
adc
adc
mov
inc
std
xorl
fs
push
xlat
ljmp
roll
cmp
jo
cmp
xchg
add
arpl
subb
shlb
pusha
rcll
incb
sub
dec
js
loope
xchg
and
mov
ljmp
or
test
add
mov
xchg
mov
and
pop
xlat
ret
adc
xchg
adc
push
mov
daa
nop
sub
je
pop
cmc
out
bound
pop
xorb
es
xor
lcall
push
adc
mov
add
call
loope
or
in
cmc
leave
ds
push
lods
clc
mov
mov
jb
jl
pop
push
cli
mov
mov
das
push
adc
mov
das
js
movaps
xchg
cmp
pop
push
rorl
enter
add
sbb
subb
out
pop
loopne
inc
lcall
sarb
add
adc
inc
xor
mov
out
sbb
fwait
mov
mov
pop
add
mov
hlt
add
lret
xor
std
out
xchg
loop
ret
shl
lock
push
cmc
push
push
incb
cli
jle
ret
inc
movb
lods
sub
push
lock
ret
cmp
mov
pop
std
cltd
mov
pop
cmp
pop
xor
clc
mov
leave
or
js
clc
das
jp
pushf
push
sub
rcrb
add
push
adc
ljmp
faddl
xchg
mov
loopne
hlt
add
mov
imul
jmp
pusha
sti
ds
roll
and
js
jo
cvtps2pi
sub
cmp
and
fcomip
push
cmp
mov
addl
movb
adc
mov
arpl
and
in
insb
or
jmp
loop
pop
add
shl
sbb
pop
icebp
inc
add
xor
es
repz
sbb
mov
and
sub
fistps
cld
mov
sub
add
call
and
sbb
sbb
inc
push
das
push
pmaddwd
outsl
sbb
cmp
bound
decb
inc
sbb
inc
dec
cli
stos
test
ljmp
lahf
jmp
or
aas
mov
pop
jno
and
outsb
mov
sub
mov
aas
jl
jg
icebp
push
cld
adc
and
andl
lock
les
stos
add
jne
and
dec
adc
mov
fidivrs
repz
or
jl
mov
lcall
or
mov
subb
mov
push
aaa
loop
loopne
jecxz
and
and
adc
fistl
mov
fsub
xor
push
mov
loop
hlt
mov
mov
push
rorl
test
ljmp
mov
inc
dec
sahf
and
mov
inc
sub
mov
sbb
std
fisubrl
pop
les
lds
and
ret
imulb
fwait
jl
mov
sub
incl
cmp
fstps
xchg
or
sbb
pop
fistpll
xor
pop
and
sbb
mov
sbb
decl
sub
arpl
stos
ja
int
mov
les
orl
sub
fnstsw
cli
inc
sub
bound
and
std
mov
rcrl
aas
ret
xor
inc
cmc
mov
sub
add
in
dec
push
icebp
filds
sbb
popl
or
or
repnz
lahf
hlt
adc
stos
or
filds
pushf
adc
add
jnp
clc
and
mov
bound
sbb
mov
adcb
mov
popa
and
push
mov
int
cmpl
shlb
in
and
jl
shlb
mov
mov
cmp
sti
mov
mov
les
push
dec
adc
icebp
ds
mov
dec
popa
mov
cmp
mov
call
sarb
ljmp
insb
inc
jne
add
add
cwtl
and
mov
or
call
mov
fdivs
adc
call
fwait
xor
cltd
lods
sub
dec
adc
pop
and
call
sbb
lret
out
cli
pop
xchg
pop
fdivrl
push
dec
add
and
mov
jo
cmp
sbb
and
mov
notb
sbb
cmpb
decl
fisubs
lock
imul
mov
adcb
xor
and
es
cs
ljmp
dec
pop
ret
add
xchg
xchg
cs
inc
lds
inc
daa
adc
std
push
hlt
pop
js
jb
sub
jbe
lock
mov
xchg
clc
das
xor
and
repnz
lcall
sbb
cmpsl
nop
arpl
lods
es
aaa
ret
arpl
push
cmp
adc
fimull
in
lds
inc
iret
or
or
nop
add
add
jl
popf
stos
xchg
push
shl
movsl
sbb
sbb
std
or
in
cld
dec
repnz
cmp
cmc
or
sbb
adc
fisubrl
jecxz
arpl
stos
icebp
fildll
subb
xor
out
adc
movsl
and
mov
out
dec
shrb
and
aam
dec
add
and
aas
push
lods
adc
sahf
and
je
inc
pushl
rolb
dec
and
add
add
dec
dec
int3
cmp
aad
sub
sbb
pop
adc
cwtl
hlt
pushl
or
cmp
mov
push
or
jle
int3
inc
sub
or
icebp
inc
andb
rcrl
or
dec
add
mov
movsb
pushf
xchg
call
loopne
pop
push
xchg
or
jmp
and
xlat
stos
add
aam
jl
call
jge
imull
cmp
pusha
xchg
adc
movsl
mov
data16
adc
stos
sub
icebp
add
mov
call
and
dec
fldenv
mov
lds
and
inc
mov
sub
das
jp
in
pop
dec
or
or
adc
lret
add
pop
cmpsb
pop
mov
outsl
repnz
jg
fst
inc
lret
xchg
lcall
cmp
andl
out
clc
pushl
imul
and
pop
clc
mov
das
add
pushl
adc
sub
jo
or
nop
push
lds
cmp
xabort
add
mov
adc
add
pop
stc
incl
mov
stos
pusha
aas
and
cltd
test
mov
adc
aad
cli
scas
mov
out
movsl
sbb
test
repz
sub
xor
add
add
add
jg
xchg
pop
sbb
dec
out
inc
xchg
lods
sbb
int
divb
cltd
sub
xor
add
adc
test
mov
push
lods
testl
sub
sub
xor
adc
lock
cmc
popf
loop
sti
in
dec
es
adc
loope
mov
or
lods
mov
fcmovne
filds
ret
jecxz
mov
daa
add
dec
push
or
push
lock
daa
adc
add
add
add
adc
imul
fiaddl
repnz
loop
mov
jg
mov
shll
aas
push
dec
imul
cmp
dec
dec
dec
or
daa
push
ss
sbb
add
repnz
fs
cmp
addr16
mov
add
incl
rclb
push
xor
push
roll
fsubrl
push
test
call
int3
pusha
cmp
cmpb
adc
pop
rol
mov
adc
outsb
inc
in
adc
cli
test
mov
jb,pn
rcrl
pop
push
jmp
xor
push
gs
jns
cmp
adc
dec
or
add
daa
cwtl
dec
cmpsl
or
xor
cmpsb
add
mov
push
inc
dec
or
or
daa
push
mov
cmp
mov
lods
inc
sti
mov
fnstenv
sti
push
in
push
shlb
jp
pop
xchg
mov
test
js
jg
loope
ss
addr16
sbb
adc
test
or
inc
push
not
or
pop
out
clc
fbld
out
or
out
lods
pusha
push
je
enter
call
mov
dec
hlt
mov
mov
sbb
push
or
shl
outsl
mov
fsubs
dec
and
add
adc
adc
call
test
ret
sbb
js
inc
dec
xorl
sub
add
stos
sbb
and
mov
push
jge
fldl
add
xchg
jl
cmp
cmc
lcall
push
js
ja
push
sbb
in
add
je
test
or
cmp
ds
push
out
xor
push
jno
xor
pop
comiss
das
push
push
fwait
insl
mov
outsl
lods
dec
sbb
jne
pusha
push
mov
sbb
cmpsb
shlb
repnz
and
cmp
jl
fdivs
push
mov
cmp
mov
or
add
add
pop
or
adc
aad
subb
imulb
incl
push
stc
jecxz
arpl
mov
inc
mov
jg
dec
dec
dec
ret
rorl
sbb
cmp
and
pop
and
fwait
cmp
dec
inc
mov
pusha
jbe
in
rorl
pop
and
add
lcall
jmp
push
sbb
mov
jle
mov
inc
inc
aam
cmp
cmp
push
inc
adc
les
mov
cmpb
xor
xor
je
fists
fsts
ret
les
adcb
fdivrs
adc
lahf
orb
jl
scas
pop
lock
mov
jo
and
push
call
or
jg
aas
jg
jo
cld
pop
test
inc
jns
adc
sar
pushl
xor
shlb
js
nop
xchg
gs
jmp
lahf
and
inc
insb
dec
dec
jl
push
xchg
mov
repnz
jno
or
push
sub
insb
outsl
clc
and
dec
icebp
adc
adc
or
add
call
and
or
mov
clc
cmpb
xor
add
dec
adc
mov
and
push
pop
int3
fbld
jb
adc
out
incb
cwtl
inc
lock
xchg
xor
and
sub
sbb
push
movd
fimull
ret
sti
icebp
jbe
sub
clc
std
or
movsb
mov
in
ret
mov
bound
push
add
arpl
mov
cmp
in
push
ljmp
mov
dec
xor
daa
sub
mov
popf
inc
js
or
xlat
and
mov
test
in
fcmovbe
xor
movsl
jmp
in
add
xor
clc
add
mov
or
outsl
lret
mov
sbb
xchg
faddp
adc
pusha
sub
cmpsb
pop
fbld
fisubs
cmp
pusha
and
xchg
icebp
das
cli
loopne
adc
mov
dec
and
adc
and
adc
shll
mov
inc
mov
test
and
jecxz,pn
lock
mov
inc
popf
enter
xchg
pop
add
imul
sarb
repnz
mov
add
jmp
leave
ljmp
inc
adc
hlt
inc
call
add
cmpsb
mov
or
and
test
or
call
lcall
inc
xchg
bound
push
xor
mov
add
and
lcall
sub
jo
nop
push
adc
loopne
mov
xor
mov
cmp
push
adc
push
nop
sbb
sbb
sub
sub
or
pop
cmp
pop
std
or
iret
cmp
cmp
rcpps
xlat
inc
pop
mov
repz
jmp
and
cwtl
daa
inc
mov
push
mov
sti
loop
loopne
mov
fstpl
outsb
loopne
je
clc
mov
mov
gs
add
add
and
add
add
and
loop
inc
push
cmp
inc
mov
inc
push
std
out
out
xchg
pushf
rorb
pop
xor
bound
fwait
mov
imul
add
inc
lahf
loope
jno
nop
and
daa
cld
jno
add
pop
push
data16
insb
sub
mov
push
icebp
fildll
mov
mov
jnp
mov
fdivs
pop
xor
sar
push
sub
xchg
adc
cmpsl
mov
push
lods
and
add
mov
mov
cmp
pop
and
fcomps
cld
ret
icebp
cltd
popa
aaa
add
and
mov
mov
incl
xor
test
mov
sahf
mov
enterw
xlat
jno
and
jo
clc
mov
push
add
aad
sti
fwait
mov
mov
xchg
push
xor
shrb
jno
pop
xorb
add
dec
inc
push
movsb
xor
movb
jg
pop
jmp
mov
test
dec
insb
into
push
iret
scas
fwait
movsb
out
fisubs
pop
xchg
xchg
pop
dec
out
ss
test
mov
add
popf
pop
jge
loop
pop
push
repnz
adc
pop
lock
pop
je
fdivl
dec
and
cld
fldl
js
xchg
scas
push
inc
push
dec
rol
loopne
mov
inc
scas
outsb
cld
add
or
xor
mov
call
pop
sub
bound
dec
and
inc
sbb
popf
outsb
fidivl
mov
push
call
pop
pusha
nop
inc
lods
loop
lods
mov
add
push
decl
inc
lds
movsw
stc
dec
nop
sbb
movsb
loopne
leave
fwait
or
adc
jb
std
mov
pop
push
push
xchg
ret
mov
incl
sahf
add
push
aaa
je
cmp
decl
das
or
sbb
cmp
cmp
pop
adcb
cmpl
add
sub
push
sti
adcb
popa
loop
and
lahf
and
add
xchg
cmp
and
jge
sub
inc
lods
or
fsubl
ljmp
in
fists
dec
aam
ret
jle
in
pop
push
cmovl
hlt
inc
add
add
sub
sbb
mov
aam
cli
inc
into
les
pop
in
nop
lods
mov
pusha
cld
loope
mov
add
sbb
cwtl
xchg
pop
orb
pushf
cmp
sbb
pop
andl
mov
push
lea
rclb
and
xor
fmull
cmp
dec
aas
addr16
inc
popf
clc
cld
jmp
push
add
cmp
push
rorb
mov
nop
inc
sub
add
xchg
ljmp
mov
sbb
aaa
cwtl
and
mov
icebp
jg
jmp
lock
mov
mov
je
int3
jne
inc
and
sbb
jle
addr16
cmp
pop
sub
mov
mov
push
ja
xor
mov
outsl
decl
imul
ret
mov
ljmp
outsl
xor
jge
mov
ja
add
push
rorb
sub
adc
and
mov
jne
js
xchg
faddl
pop
mov
push
or
xchg
and
or
mov
fcoml
ss
sub
movsl
jle
jge
push
and
push
dec
cwtl
adc
pop
xchg
cltd
out
loopne
jo
stc
jo
xor
sar
jmp
jne
clc
roll
xor
sahf
in
lock
addb
stos
add
data16
and
cld
add
sar
jns
js
cmpsb
jecxz
fsubrl
loop
push
sbb
adc
ret
mov
sti
ret
adc
aas
xorb
nop
jge
xor
xor
mov
or
clc
pop
mov
adc
or
or
loop
xor
mov
aam
adcb
mov
les
sbb
dec
inc
rorb
dec
xchg
test
push
es
fwait
hlt
mov
and
or
insb
outsb
inc
iret
dec
jl
notb
cmc
addr16
test
mov
and
mov
or
mov
imul
ret
jo
andl
pop
pop
mov
ss
jne
mov
cld
xchg
sbb
mov
xchg
and
push
dec
pop
icebp
out
cli
push
adc
xchg
sarl
bound
xchg
mov
inc
sarb
dec
out
cwtl
cs
aad
xchg
add
les
adc
out
adc
lods
test
or
pop
mov
lahf
popa
and
incb
add
and
fcoms
jl
lods
or
call
ss
loop
add
mov
lock
cmc
push
mov
jecxz
loope
out
pop
cli
push
inc
pop
test
jns
str
dec
pop
insb
or
push
fsubs
ss
pusha
mov
jmp
pop
adc
into
rorb
dec
pop
sbb
xchg
daa
xor
ja
outsl
sub
or
lahf
iret
push
pushf
shrl
cwtl
clc
mov
daa
shll
and
and
xor
xor
fisubrs
sub
movsb
movsb
out
das
cmpsl
push
pusha
inc
xchg
xchg
or
or
pop
adc
mov
cld
idivl
mov
mov
lds
rclb
fsub
push
cld
decl
cmpsb
sbb
jmp
inc
push
inc
pop
sbb
adc
adc
fistpl
sarl
les
dec
or
adc
push
rolb
lea
push
cmp
pop
pop
push
mov
lock
out
stos
xchg
aam
jg
icebp
lcall
lock
int3
cmp
test
js
pop
sub
lcall
decl
fdivrs
or
xor
mov
adc
sub
mov
cmpsb
orl
das
sbb
push
rcl
xor
push
add
lock
lock
jb
mov
add
mov
loopne
mov
les
icebp
scas
ret
dec
pop
and
jmp
in
sub
shr
lcall
ja
jne
jb
sub
and
inc
ficompl
rcll
std
xlat
push
clc
dec
mov
test
fisttpl
idivl
sub
test
sbb
mov
insl
jl
push
orl
add
repz
sub
mov
push
dec
lcallw
pushf
lret
xchg
mov
adc
pop
add
jne
or
adc
in
out
dec
ret
bound
pop
sbb
lret
mov
aad
stc
fstpl
aaa
cmp
enter
rclb
push
fnstsw
xchg
jecxz
xchg
mov
jmp
jbe
xchg
sub
std
cmpsb
out
mov
cmp
add
add
clc
frstor
xchg
sub
mov
fildll
pop
sub
lret
mov
add
adc
pop
adc
scas
das
lock
push
cwtl
sbb
lods
mov
sbb
cmc
cwtl
mov
divl
cli
sbb
jle
dec
scas
lds
mov
push
jl
add
inc
ljmp
adc
sbb
pop
mov
sti
cmp
call
insb
out
loop
pushf
addr16
mov
jo
lods
inc
or
pop
rorl
repnz
in
ret
stc
mov
mov
inc
ljmp
ljmp
adc
mov
add
lahf
push
xchg
aam
inc
adc
push
and
xchg
fcomip
cltd
loop
mov
loop
inc
inc
in
inc
and
enter
sub
mov
fdivrs
sub
cs
mov
mov
mov
sub
mov
sbb
add
mov
lcall
sub
mov
out
or
xchg
cs
jno
jo
jmp
xchg
cmp
add
fidivrl
xor
ucomiss
das
sahf
in
pop
das
xchg
or
mov
addr16
cmpl
mov
pop
push
faddl
push
flds
adc
pop
push
mov
fs
push
cmp
adc
fadds
mov
fldl
mov
pop
push
add
sbb
pushf
cmpsb
pop
flds
pop
xchg
xor
pop
idivb
dec
fisubs
fldenv
push
test
cwtl
xor
inc
cmp
cwtl
aas
adc
jne
mov
lods
mov
mov
push
inc
mov
xlat
mov
lods
pop
cmpsb
sbb
bnd
cmpsb
and
pop
or
and
sub
xchg
mov
clc
loopne
out
loope
jmp
xor
dec
dec
add
jbe
cmp
sbb
mov
sbb
lock
push
es
cmp
xor
mov
scas
ljmp
out
jl
pop
mov
fdivr
aas
xchg
push
xor
sbb
add
lahf
jp
ja
add
mov
xor
sub
mov
sbb
cld
mov
mov
sub
fwait
mov
push
dec
data16
pop
je
cmp
js
shlb
out
sti
test
out
push
imul
jle
das
clc
out
jb
popa
adc
aad
clc
xchg
mov
out
xor
scas
sbb
push
test
dec
popf
sbb
dec
data16
lods
inc
jle
das
adc
mov
inc
adc
ret
ja
data16
call
xor
pushl
cmp
adc
std
clc
jg
ficompl
dec
sub
adc
inc
lods
je
pop
call
push
or
push
mov
jl
mov
add
and
sub
stos
inc
cld
loope
cmp
in
aaa
jle
mov
cmpsb
push
add
xchg
cmp
sbb
xlat
add
clc
sbb
clc
pop
xor
push
stos
stos
jno
sbb
aaa
push
enter
or
cmp
in
int3
and
push
loop
out
mov
nop
sarb
mov
pop
add
inc
pop
lock
cmp
loopne
ret
push
and
sub
sub
add
pop
lock
and
inc
in
jb
pop
or
lods
pop
faddl
decl
rorb
jg
push
stos
jbe
out
inc
out
jmp
jo
outsb
cwtl
les
shrb
push
sbb
or
sub
xor
test
jmp
out
bound
or
test
jecxz
pop
jbe
das
xor
filds
mov
pushaw
popa
xchg
xor
movsb
loope
cmp
push
jae
jg
scas
movsb
aas
pop
out
js
jp
movsb
pusha
sbb
stc
mov
fwait
xor
roll
xor
sub
popf
mulb
ljmp
aas
cld
shll
push
sbb
into
in
faddl
sbb
add
aad
push
adc
jg
testb
imul
negl
sub
incl
mov
inc
cmp
and
sub
stos
lea
inc
incl
mov
cli
push
nop
cltd
xor
jmp
pusha
roll
jecxz
sbb
push
sub
cld
inc
mov
mov
sub
xor
pop
cli
cmp
dec
mov
xor
pop
mov
and
push
pop
stos
or
push
in
loopne
cli
jo
push
and
dec
mov
push
jns
jg
movsl
loope
pop
sbb
loopne
sbbl
and
mov
fsubrp
call
pop
inc
mov
jb
lods
scas
mov
fs
data16
add
hlt
fadds
loopne
inc
or
in
add
xchg
clc
fiaddl
fidivrl
inc
popa
rol
nop
cmc
dec
adc
es
shll
inc
leave
dec
add
stos
fdivs
mov
pop
lea
jns
mov
scas
fiaddl
and
pop
call
mov
mov
jo
inc
mov
cmpl
pop
jmp
add
inc
cmp
jp
sub
sbb
outsb
aam
lds
outsl
push
stc
insl
jns
fwait
repz
lahf
decl
add
xor
call
add
jnp
and
dec
cmp
inc
push
andb
das
rclb
add
andl
arpl
lret
popa
sbb
pop
lock
cmp
jae
add
bound
outsb
and
push
daa
mov
cmc
inc
sbb
add
movsl
out
ret
daa
cli
lods
scas
idivl
inc
ret
push
cld
jg
sub
xor
or
push
and
outsl
sarb
insb
xorl
imul
mov
lods
iret
frstor
fisubrs
dec
or
cmp
or
mov
jmp
stos
inc
jge
clc
imul
loopne
add
fsubl
pushf
dec
das
dec
mov
push
fistpll
and
mov
sub
jecxz
cwtl
jne
gs
stos
js
cli
mov
ljmp
or
unpcklps
pop
cli
orb
fcomp
cltd
jae
or
dec
cmpsb
fsubrl
test
dec
rclb
or
pop
repnz
std
adc
sub
mov
jp
add
add
jg
lahf
adc
add
xchg
dec
in
test
clc
push
dec
enter
cli
movb
lret
dec
mov
movsl
addr16
jmp
pushl
jmp
loopne
dec
inc
mov
push
in
ret
add
pop
pop
dec
enter
add
or
adc
pop
or
rcll
fimuls
sub
pop
sub
adc
xchg
pop
inc
sub
lock
cmc
stc
add
pop
dec
ss
loopne
enter
pop
stos
clc
lock
js
sbb
mov
mov
daa
add
or
xchg
pushf
outsb
aam
cmp
out
push
ljmp
fucomip
cli
mov
jg
xchg
pushf
into
fmulp
sbb
arpl
fnsave
fsub
dec
dec
mov
mov
add
jmp
inc
orb
clc
add
fcmovu
or
and
add
jbe
sbb
dec
out
mov
ja,pt
sbb
mov
mov
xchg
int
xor
lock
sub
jbe
cmp
sbb
aaa
clc
aam
mov
xchg
mov
lock
test
jno
call
push
out
loope
gs
incl
adcl
fbld
sbb
mov
mov
lcall
mov
dec
cs
add
inc
rcrl
jns
xor
test
inc
stc
push
or
add
lods
xor
aas
sub
in
sub
and
pusha
insl
andl
sarl
dec
jg
cmpsb
add
ficomps
pop
jg
add
adc
lret
scas
cmp
cmp
jg
adc
xor
bound
in
clc
adc
loopne
push
push
lea
xor
cltd
out
lock
pop
shrb
mov
in
jnp
ror
in
aas
inc
mov
pop
and
adc
popf
and
stos
loope
dec
subl
cli
outsl
test
push
dec
add
adc
push
inc
test
test
adc
jmp
cmp
sbb
sbb
jb
sbb
pop
mov
jbe
lods
push
je
xchg
or
fwait
jle
aaa
mov
lahf
in
mov
in
adc
cmpl
jno
aad
mov
push
inc
mov
pop
add
jle
jg
ficompl
add
adc
cmp
mov
mov
push
sbb
cli
mov
mov
sub
add
mov
pop
int
sub
daa
cmc
add
mov
loope
mov
sbb
cs
push
clc
xor
dec
dec
push
sub
mov
sub
add
out
pop
loop
or
inc
inc
push
sbb
loopne
push
adc
test
orl
push
ja
lcall
xchg
cwtl
jmp
call
sub
fmuls
stos
dec
ror
cmpsl
dec
add
cmpsb
lock
add
or
mov
iret
sahf
jp
and
adc
pop
pop
lret
hlt
or
shl
loop
jge
pop
ret
cmp
outsl
jecxz
or
jp
mov
push
cmc
dec
xchg
and
fimuls
xor
pop
add
xor
nop
cli
pop
pop
inc
clc
data16
insb
adc
lcall
push
push
inc
mov
lock
cmp
mov
pop
jecxz
ja
mov
mov
dec
daa
dec
out
fnsave
dec
cli
mov
cmc
mov
inc
xlat
push
mov
stos
mov
add
icebp
shll
cmp
mov
outsl
push
inc
fdivs
pop
lahf
mov
cmp
stos
mov
lods
cmp
cmc
test
sbb
in
sbb
inc
and
inc
pusha
mov
xor
mov
push
and
push
mov
push
or
test
pop
jo
pop
inc
mov
dec
ficomps
movsb
jle
add
repnz
or
ds
es
hlt
out
mov
inc
pop
fidivs
mov
cld
mov
pop
pop
loope
push
push
rol
incl
movsb
mov
movsl
jle
aas
adc
mov
fisubl
cmp
push
jne
lret
int3
insb
sub
out
repz
mov
sbb
mov
push
cwtl
mov
popa
xchg
xchg
add
inc
mov
push
dec
clc
push
pop
dec
push
outsb
push
cld
mov
ret
je
dec
xchg
addr16
push
into
xor
push
call
out
stos
pop
loop
push
ret
decb
push
cld
ljmp
loop
mov
add
add
test
push
and
adc
dec
shl
sahf
cld
mov
pop
mov
mov
ljmp
aas
add
orb
pop
and
test
aaa
jge
mov
test
stos
pusha
push
arpl
jmp
lret
lods
adc
popa
mov
push
es
push
icebp
decl
push
popa
nop
or
inc
cmp
dec
sub
xchg
or
xchg
ret
incl
pop
loopne
loop
hlt
adc
push
xor
popf
pusha
test
push
js
and
push
arpl
test
icebp
out
add
mov
sub
xchg
mov
pushl
jg
shlb
jae
dec
sbb
mov
push
adc
repz
dec
or
mov
outsb
sub
rclb
jnp
xor
imul
fwait
jns
mov
lcall
or
inc
mov
pusha
fs
movb
fwait
mov
jae
adc
js
mov
fadds
and
sub
push
dec
mov
test
ret
outsb
lahf
mov
mov
mov
data16
insb
aad
shlb
adc
outsb
call
xchg
int
test
fwait
repz
inc
xorl
fs
cmp
fcomip
inc
cmp
call
mov
jecxz
loop
adc
add
add
clc
mov
loopne
and
cld
jl
addl
js
mov
or
setno
or
lea
jecxz
dec
repnz
test
cs
rorl
call
test
dec
inc
lahf
pop
cmpsb
xchg
je
jl
cmp
cmp
xchg
sbb
adc
pop
lock
add
inc
cmc
cmp
xor
movsb
call
mov
mov
mov
jg
xchg
push
sbbl
fsubl
xchg
clc
stos
cmp
das
scas
fildl
das
lock
mov
stc
adc
add
cmc
into
int3
push
in
arpl
or
in
mov
add
dec
jle
mov
lahf
pop
adc
inc
push
arpl
xchg
xchg
add
adc
loop
adc
mov
inc
xchg
lods
cld
aad
pop
xor
pop
iret
sub
ret
jecxz
les
shlb
repnz
aam
sub
call
mov
xor
sbb
xchg
in
mov
dec
or
je
sub
jae
xor
sbb
fidivl
mov
pop
das
shrb
stc
test
xor
cs
repnz
mov
lock
ret
rclb
sbb
mov
loope
xchg
fucom
je
mov
lods
jo
push
lock
imul
in
or
je
mov
rorb
adc
addb
arpl
ljmp
icebp
movsl
subb
inc
scas
mov
mov
fldt
pop
pop
int3
lock
call
cld
mov
add
pop
andl
dec
mov
inc
push
adc
lds
cmp
roll
sbb
mov
dec
ret
insl
js
testb
out
jp
sbb
pop
andl
pop
clc
jg
data16
push
mov
adc
adc
ja
in
addl
jecxz
loope
in
or
lods
mov
in
jle
dec
andb
call
lcall
lret
xor
lods
imul
cmpsb
cmp
fdivrp
incl
mov
xchg
lods
lock
rclb
lock
inc
add
or
add
mov
xor
insl
outsl
fadds
loopne
pop
ja
jg
js
loop
les
add
in
orl
cmp
and
ja
mov
pop
mov
add
jne
popa
sahf
and
inc
xchg
xchg
pop
inc
mov
mov
jmp
pop
out
dec
cltd
jb
push
mov
mov
adc
lock
loopne
jnp
popa
jns
xor
push
adc
fcomip
add
xchg
into
jb
push
imul
mov
xor
xor
sbb
push
mov
pop
loopne
aaa
stos
outsb
cli
fwait
movsl
dec
jle
imul
scas
in
jle
es
push
pop
pusha
xor
pop
lds
stos
mov
outsl
xchg
arpl
push
adc
sub
sub
sbb
sbb
jnp
adc
cmp
mov
and
cmp
out
mov
pop
cmpb
ss
bound
push
jb
add
lcall
mov
mov
scas
sub
mov
inc
xor
aam
out
add
sbb
sub
sub
xchg
nop
ss
mov
add
sbb
jg
push
sub
out
push
jne
mov
mov
inc
add
lock
mov
ficompl
or
in
xchg
shll
cmp
add
adc
fnstcw
mov
enter
cmp
jl
outsl
fdivrs
and
and
xor
sbb
rolb
incl
fcomp
dec
pusha
lcall
and
inc
fwait
xlat
fmuls
decl
pusha
out
or
push
loop
mov
out
imul
push
je
dec
and
clc
jns
and
mov
das
hlt
ljmp
ret
dec
mov
inc
cld
rol
pop
hlt
mov
faddl
enter
adc
sbb
push
lret
pop
loope
sahf
addl
cmp
clc
push
outsl
pop
push
mov
mov
xchg
subl
andb
add
push
lea
or
pop
dec
stos
xchg
pushf
out
pop
jmp
ret
aad
lock
add
jbe
movlps
sub
mov
sarb
sub
fstpl
lcall
xchg
gs
sbb
das
adcl
cmp
lock
fdiv
dec
and
or
dec
jbe
fldenv
add
subb
and
scas
sub
mov
xchg
nop
push
cwtl
lock
jp
dec
orb
inc
sahf
mov
les
dec
loope
cld
aaa
and
cwtl
or
orb
and
aas
pop
inc
test
mov
xlat
pop
cmp
ret
pop
cmp
incl
test
mov
mov
pop
movsl
add
pop
gs
lcall
and
adc
outsb
add
xor
repnz
icebp
sub
xor
adc
jge
push
aaa
inc
pop
adc
mov
clc
aas
sub
pop
pushf
add
pop
push
push
and
bound
and
movsb
cs
push
ljmp
mov
leave
pusha
and
sti
neg
sbb
rol
fcomip
adc
add
ss
insb
cld
ljmp
ffreep
loope
sub
xor
neg
push
call
out
jg
push
mov
pushf
inc
mov
adc
aas
aam
xchg
pop
flds
xchg
xchg
mov
xor
fs
mov
mov
or
dec
ds
or
lcall
jp
or
xchg
mov
jg
mov
bound
mov
popa
ficomps
cmp
xor
negl
pop
sub
popa
sti
rclb
mov
push
mov
ficomps
mov
out
mov
jl
decl
repnz
out
or
out
dec
sbb
mov
stos
jb
leave
aad
mov
fiaddl
add
or
mov
call
xchg
adc
dec
jecxz
pop
dec
sub
cmpsb
jl
incl
cmpsb
sbb
andl
movsb
or
mov
and
nop
mov
add
push
mov
and
lds
mov
lods
outsb
cli
testl
jo
loopne
and
sbb
ljmp
or
out
lea
jns
sbb
mov
popa
fdivrs
add
mov
jg
xchg
adc
jbe
jns
mov
xchg
xchg
cmp
and
jns
mov
inc
inc
mov
stos
jle
insb
pop
repnz
std
mov
icebp
incl
mov
into
inc
inc
fwait
out
lcall
sub
and
mov
sbb
pop
or
adc
dec
mov
inc
xchg
ret
lcall
shrl
int3
mov
jp
xor
enter
cmc
cmp
les
add
xchg
or
add
jb
cmp
or
gs
mov
clc
jg
fs
jb
daa
test
out
fildl
inc
loope
aaa
out
mov
nop
jbe
incl
jle
xchg
loope
mov
insb
pop
inc
sbb
stos
jl
jg
outsl
inc
push
jl
shl
mov
cmp
cmpsl
jmp
or
fs
mov
shrb
or
add
push
sahf
mov
inc
test
lods
hlt
insl
andb
mov
jge
mov
mov
movsb
and
sbb
mov
or
call
push
xchg
pop
mov
push
repz
lcall
je
and
adc
mov
inc
adcl
push
ljmp
jmp
adc
adc
test
fdiv
pop
jns
andl
xor
sbb
cmc
cld
jp
ds
and
rol
xchg
arpl
pop
dec
fdivl
or
sub
data16
lock
adc
mov
inc
mov
pop
add
xchg
xor
pop
fisubrs
fsin
fwait
sbbl
add
in
ucomiss
jb
das
jo
mov
add
divl
stos
out
and
scas
rolb
cld
movsb
fsubp
mov
mov
test
stos
iret
xchg
push
jb
icebp
cmpb
push
sub
out
jmp
adc
loopne
xchg
sahf
add
dec
add
fcmovb
cmpsb
cmp
pop
cmc
fidivs
dec
cmp
dec
rorb
clc
scas
dec
rolb
je
jae
sbb
mov
ljmp
xchg
pop
insb
adc
sti
jmp
dec
add
jl
imul
dec
int
ficoml
enter
push
daa
mov
loopne
add
pop
popa
aam
xor
xchg
mov
push
adc
add
js
dec
ficoml
movb
pop
push
xchg
data16
icebp
sbb
cltd
mov
adc
adc
adc
addl
mov
mov
or
cld
jg
jg
pusha
or
and
das
add
mov
pushf
add
icebp
add
je
jb
les
imul
fcomip
fistps
inc
or
shl
sbb
add
leave
mov
add
sub
sahf
js
rclb
in
loope
pop
or
scas
adc
cmpsl
add
sub
jmp
enter
movsl
cmpsl
enter
sub
pushf
adcl
xchg
inc
pop
outsb
jne
bound
rcr
or
mov
sub
fimull
shr
sub
cmp
adc
mov
fists
ret
sbbb
in
and
sub
dec
add
sti
lret
pusha
es
popf
mov
stos
xor
out
jp
ror
mov
xor
int
adc
pop
insl
loopne
ja
ss
jecxz
add
and
cwtl
push
loope
mov
pusha
cmp
mov
ds
mov
sbb
sub
or
sbb
mov
sbb
call
hlt
sub
gs
into
aas
push
add
push
incb
decw
pop
mov
loope
add
movsb
mov
or
mov
sub
cmp
ljmp
add
xchg
sbb
push
or
icebp
test
add
inc
mov
sbb
aaa
adc
lock
pop
sbb
push
and
out
decb
mov
nop
mov
out
into
or
lock
loop
movsb
push
movl
xor
fildll
sub
fcoms
mov
lcall
xchg
adc
cmp
or
sbb
mov
cli
das
sarl
imul
xchg
pop
insb
push
inc
jo
add
add
test
inc
pusha
mov
mov
ljmp
fcmovu
mov
push
data16
mov
cwtl
cmp
leave
jle
das
sub
nop
xchg
mov
stos
hlt
or
jns
xor
int
mov
test
jns
add
or
cld
push
pop
call
ds
outsl
outsl
rorb
test
repnz
jno
shl
jecxz
jge
int3
add
push
mov
scas
mov
inc
in
int
insb
das
int
jle
orl
loopne
cld
lock
sbbb
sbb
notl
daa
mov
out
shrb
stos
into
fs
hlt
jbe
call
pop
mov
data16
rcll
cmp
pushf
adc
lcall
push
dec
mov
cmp
fs
mov
loop
push
add
mov
shl
pop
shlb
pop
jnp
cs
sub
pop
cs
inc
push
lahf
clc
xor
dec
jb
jmp
adc
test
dec
adc
lcall
mov
sub
insb
test
int
push
adc
lcall
icebp
pop
out
test
xorb
pop
leave
test
cmp
sub
test
and
sub
jnp
clc
jg
push
out
jmp
or
mov
adc
lret
data16
int
xchg
and
lods
add
dec
mov
or
dec
mov
push
xor
clc
adc
push
jle
cmp
pusha
jne
ds
push
loop
push
sbb
loope
or
mov
lcall
lret
add
cmc
xchg
dec
push
mov
add
in
test
ds
inc
sbb
test
jle
jmp
dec
je
sub
lds
pop
inc
add
add
mov
or
jno
cmp
mov
ljmp
xchg
cmp
leave
mov
jb
add
push
jmp
or
imul
fstps
enter
mov
adc
shrb
jecxz
fwait
test
jno
stos
fistl
mov
mov
lock
test
mov
pop
aaa
xor
push
nop
mov
xchg
lock
mov
xor
xchg
data16
pop
imul
loopne
push
xorl
loopne
jecxz
sete
xchg
or
test
scas
jae
lret
xchg
and
pop
shll
push
je
ret
mov
scas
fbstp
shll
lods
inc
fcompp
mov
xchg
add
rorb
inc
test
pushf
cli
push
fdiv
and
fisttpll
stos
push
push
mov
hlt
lahf
pop
das
inc
jbe
cwtl
ret
push
push
sub
jecxz
shlb
faddl
adc
pop
sbb
adc
pop
stos
and
scas
or
out
inc
mov
and
call
xchg
add
add
xchg
cs
pop
pop
fs
or
out
mov
ss
lods
imul
cltd
push
push
jl
push
mov
imul
call
sub
jle
test
cmp
into
pop
rorb
add
pop
mov
mov
add
inc
cmp
inc
mov
ja
cli
test
dec
xor
bound
je
xchg
cmp
cmp
push
test
adc
mov
lods
repnz
pusha
push
adc
cld
xor
xor
or
inc
stos
or
pop
mov
stos
sbb
cld
adc
jg
push
out
fiaddl
sbb
cmpb
ds
je
ljmp
push
test
jmp
xchg
orb
loop
add
lahf
lock
outsb
push
inc
imul
xchg
sahf
or
adc
jg
les
ja
pusha
ljmp
rcrb
sub
add
inc
jmp
call
add
pushf
dec
mov
xchg
inc
push
imul
inc
mov
sub
shl
push
loope
push
mov
or
dec
add
adc
xlat
incl
lock
sbb
lcall
pop
popf
mov
add
or
loopne
push
out
inc
xchg
mov
cli
mov
dec
mov
cmpsb
jno
ss
mov
adc
test
out
push
jno
outsb
mov
hlt
cmpsl
test
mov
outsl
push
adc
cmc
mov
inc
sub
ja
insb
lret
mov
or
push
int
jl
pop
adc
movsb
adc
xchg
outsb
sbb
into
rolb
inc
jo
push
rorb
mov
int
enter
sti
ljmp
xor
popa
xor
jne
ss
push
divb
adc
loop
pop
bound
test
aam
fcom
mov
call
pop
sbb
sub
lahf
je
xlat
decl
fisubs
mov
cmp
mov
inc
loopne
sbb
mov
std
lahf
shl
add
fs
cmp
into
jg
notb
push
mov
decl
xchg
popa
dec
loopne
push
lcall
push
ja
clc
data16
mov
test
cmp
ret
inc
and
cltd
adc
or
jecxz
arpl
or
dec
and
call
pusha
roll
mov
out
and
stos
je
hlt
leave
jmp
dec
lcall
xor
mov
nop
xor
mov
aas
in
add
and
lret
cld
dec
shl
cmp
str
dec
aaa
mov
pop
mov
push
push
lods
mov
add
mov
js
leave
and
subl
cmpl
pop
mov
test
push
test
and
jmp
push
loope
icebp
sub
inc
scas
mov
adc
call
or
out
inc
ljmp
adc
sub
je
or
ficomps
lds
fs
in
das
ret
outsl
pop
or
shrb
push
in
test
sbb
mov
add
in
scas
inc
fsubrs
sub
in
jmp
jl
sti
inc
or
mov
ficompl
mov
inc
fsubs
bound
xorl
and
sub
jmp
push
xchg
add
ret
adc
push
lock
out
out
loope
mov
or
mov
gs
dec
ds
add
pop
popf
inc
jp
outsl
out
incl
lock
pop
jbe
add
leave
mov
in
fiadds
decb
out
xchg
std
inc
je
and
pop
mov
or
aad
ljmp
or
jle
add
jb
call
sub
mov
adc
ss
pop
mov
js
xchg
std
subb
cmp
mov
push
cs
jb
mov
repnz
lock
inc
movsb
shl
jg
movsb
dec
lock
mov
and
jecxz
lods
mov
js
outsb
mov
jns
addb
notb
lcall
cmc
dec
addb
mov
add
jo
imul
mov
test
xchg
or
fcmovb
scas
shrb
push
add
mov
inc
fsubl
push
sbb
lods
and
adc
aad
pop
jbe
les
add
repnz
scas
sub
inc
dec
scas
ret
scas
xor
daa
push
lods
shr
xor
mov
adc
pop
cmp
das
xor
sbbb
push
mov
sub
mov
movsb
pop
mov
mov
div
mov
mov
mov
adc
xchg
cmpsl
push
and
jbe
mov
push
das
and
dec
test
add
cmp
adc
pop
pop
sbb
les
clc
mov
xchg
push
xor
xlat
jo
push
movsb
mov
clc
test
inc
dec
lret
mov
pop
and
inc
push
pop
rcrl
push
add
nop
js
testl
subb
mov
aam
sub
inc
das
push
and
neg
jge
ljmp
fcmovu
or
ss
sbb
mov
jecxz
jns
push
sbb
dec
fiadds
mov
incb
sahf
or
jmp
or
lock
push
cmc
ljmp
cli
mov
js
or
mulb
bound
test
ja
xchg
loopne
out
and
add
mov
inc
sahf
inc
xchg
add
dec
inc
xchg
clc
mov
mov
outsl
cmp
or
dec
jmp
or
add
out
xchg
lds
xchg
dec
call
ret
push
xor
adc
add
jg
ds
sbbb
cs
inc
pusha
mov
dec
jl
ret
cmpsb
filds
sbbl
lcall
dec
popf
jb
cs
sub
add
call
cmp
lea
mov
lcall
and
adc
sbb
fcomip
push
sahf
pop
inc
loop
inc
push
fs
dec
xchg
push
dec
call
dec
fdivs
insl
pop
bound
jbe
pop
decb
adc
xorb
mov
dec
dec
and
jge
push
movsl
cmp
cltd
sbb
les
mov
xor
out
pop
and
pop
outsb
es
cmpb
or
popa
orb
adc
adc
outsb
loopne
xchg
insb
or
orb
dec
test
xchg
fcoms
xchg
les
xor
sbb
pushf
cmp
cs
mov
or
imul
sub
pop
or
or
dec
cmp
daa
mov
push
xor
out
push
pop
sbb
or
call
adc
inc
cmp
jb
imul
mov
add
rcrb
in
inc
dec
pop
mov
mov
lret
je
or
and
add
aas
mov
in
or
stos
pop
inc
or
gs
test
es
movl
cmpsb
push
or
jbe
fwait
jge
cli
jecxz
pusha
sbb
xchg
outsb
enter
stos
and
mov
test
push
mov
push
inc
add
call
mov
jae
in
sbb
or
or
add
add
add
adc
mov
push
lods
lods
rolb
mov
push
xor
cld
decl
dec
and
xor
in
je
hlt
test
adc
or
shrl
inc
sbb
add
orb
cltd
dec
add
dec
jbe
xor
lcall
cmp
push
aad
add
enter
cmp
scas
fisubrl
decl
mov
jnp
pop
pop
push
jmp
sbb
xor
aas
mov
or
mov
test
mov
je
imull
hlt
sub
sub
aad
sbb
cld
lcall
and
call
mov
test
ficoms
hlt
pop
fcomi
das
sbb
in
add
add
aas
ror
out
data16
push
popf
push
add
or
xchg
add
pop
clc
pop
push
adc
push
add
dec
mov
xchg
sub
es
jmp
daa
lahf
movsb
cmp
cmp
sub
mov
xchg
sbb
mov
dec
sbb
xor
mov
pop
in
mov
cwtl
scas
pop
repnz
cmpsb
xchg
xor
mov
add
test
out
dec
xchg
mov
jo
pop
mov
jbe
mov
sbb
clc
mov
push
outsb
cld
aaa
std
push
pushf
fwait
das
jg
push
scas
jle
sbb
xchg
fidivs
icebp
pop
sbb
xchg
pop
xchg
or
push
pop
shrb
jne
mov
push
enter
fildll
push
jge
lea
gs
rcrb
mov
lods
xor
xor
in
lcall
push
cli
in
push
sbb
ljmp
loop
add
jecxz
scas
jo
add
iret
aam
fisttpl
inc
les
sub
jge
lock
cli
fsubrl
hlt
pop
sbb
xchg
cli
sbb
jp
stc
shlb
push
cmp
mov
dec
xchg
pusha
jecxz
dec
in
mov
sahf
negl
int
pop
mov
push
lock
cmp
js
add
and
movsl
enter
cmpb
inc
sub
xor
push
lock
cmpsl
cmp
lock
push
arpl
js
test
or
lahf
lods
sub
push
sbb
test
sbb
ss
call
pop
pushf
pop
jo
push
push
addb
xor
les
mov
iret
mov
sub
fildll
inc
xor
sub
push
cld
mov
add
mov
add
popa
jl
or
ret
stc
jmp
dec
clc
aas
inc
les
int
fs
imul
adc
xlat
test
sbb
and
push
dec
decl
xchg
add
adc
dec
push
out
clc
mov
test
divb
or
popa
and
add
shr
adcl
jg
hlt
decl
xchg
push
cli
cmp
inc
push
insl
mov
loopne
or
test
jbe
cmp
and
adc
aad
aam
clc
or
sbb
sahf
in
add
sbb
dec
clc
stos
pop
mov
add
jns
pop
daa
pop
adc
test
frstor
js
shlb
jbe
out
mov
js
lcall
hlt
push
cs
xor
adc
into
lea
jecxz
je
pusha
sbb
pop
movsb
pop
shrb
push
jb
cmc
jmp
xchg
add
push
pop
mov
sar
push
mov
je
lret
push
xor
leave
pop
lock
enter
mov
ja
xchg
add
lcall
lods
or
iret
sahf
out
fisttps
fnstcw
arpl
sbb
out
cli
push
clc
sbb
push
pop
imul
xor
mov
xchg
fistps
pop
scas
cmp
sbb
pusha
xor
pop
push
push
vpmaskmovq
push
fwait
or
rcrl
jo
loopne
sub
in
test
fcmovu
sub
mov
xor
adc
add
and
lcall
adcb
enter
push
xor
xor
pop
and
mov
out
mov
shl
cmp
pushl
add
pop
rolb
movsb
iret
das
pusha
mov
mov
inc
decl
and
in
push
mov
sbb
int
loopne
add
shlb
test
ds
data16
hlt
and
push
cld
xchg
jne
push
add
pop
pop
cwtl
push
lcall
add
cmp
enter
pushl
cmp
pushf
xchg
and
push
pop
pop
out
cmc
or
mov
sbb
shlb
js
mov
movsl
cmp
cli
ss
or
push
lods
sbb
sbb
out
lods
dec
inc
cld
outsl
cmpsl
adc
es
loope
mov
push
scas
imul
push
mov
std
js
lods
dec
pop
mov
mov
jbe
stos
cmp
jo
inc
jo
adc
ret
add
rorb
loopne
arpl
dec
out
mov
lods
adc
rcll
dec
and
cmp
je
test
sub
dec
xlat
mov
sbb
test
jge
cmp
push
or
mov
mov
outsb
ds
mov
sbb
pusha
leave
rolb
incl
addl
cmp
movsl
orb
mov
lock
and
ficompl
add
mov
test
xor
clc
pop
dec
sub
mov
cwtl
jae
dec
clc
incl
add
icebp
add
inc
or
scas
or
sub
les
xchg
mov
push
sub
add
and
clc
mov
sahf
int
pop
add
std
mov
mov
or
les
and
push
mov
scas
clc
lret
or
or
dec
sub
push
lock
or
maskmovq
negl
mov
addr16
lds
xlat
and
dec
mov
or
std
call
or
push
enter
jno
pop
or
fdivl
fildll
loop
sbb
inc
lock
inc
add
out
dec
xchg
add
jg
pusha
rcrl
xchg
mov
xor
jp
push
pusha
dec
pushf
sub
mov
rorl
dec
xlat
adc
call
push
sbb
cs
inc
pop
pushl
cmpsl
pushl
xlat
test
std
add
mov
xor
sbb
or
test
xchg
push
in
addr16
mov
decl
and
es
call
inc
adc
xlat
pushf
dec
cmp
loopne
pop
push
je
push
add
xchg
sub
imul
dec
scas
and
ficoms
adc
inc
jge
inc
inc
jo
out
pop
xchg
int
cltd
inc
cwtl
inc
push
lods
fnstsw
xchg
and
out
outsl
test
lods
fnstenv
xor
sbb
xchg
mov
rolb
cld
cmp
dec
clc
aas
aaa
add
xchg
cmp
push
loop
lcall
ret
mov
inc
sub
adc
js
outsl
imul
mov
mov
inc
sbb
cmpsl
xchg
lock
pop
popa
loope
xchg
sbb
andl
mov
mov
and
mov
sbb
addr16
mov
xchg
sar
rol
ffree
call
jge
pop
mulb
nop
cmp
js
and
adc
or
cmpb
xor
dec
icebp
stc
push
cltd
pop
mov
pop
jno
mov
push
jg
pop
mov
hlt
pop
adc
push
inc
or
adc
test
cmp
repnz
and
ss
out
xchg
pop
inc
test
testl
outsb
push
xchg
aad
pop
xor
lds
push
jle
test
rcr
cwtl
sar
mov
xchg
hlt
adc
and
push
popa
stc
outsb
add
inc
or
enter
jg
mov
mov
mov
and
nop
dec
mov
sub
or
cld
pop
hlt
call
mov
or
cmp
das
lcall
in
mov
inc
dec
or
ss
nop
mov
ret
xchg
xchg
lock
push
iret
adc
push
push
xchg
pop
fisubs
or
and
cmp
cmp
lock
xor
bound
inc
fsubl
pushl
mov
and
loope
ret
jb
movsl
fbstp
push
jno
sub
cmpsl
xchg
mov
jno
ja
mov
loopne
and
dec
cmp
jg
cmp
mov
ds
add
les
add
mov
dec
and
lods
mov
inc
lock
bound
add
jg
mov
xchg
adc
pop
dec
sbb
jo
cmp
leave
lods
fs
xchg
lret
or
arpl
imul
scas
jmp
addl
and
outsl
push
jbe
mov
scas
lea
mov
push
mov
mov
clc
loope
loop
xchg
rorl
stc
shlb
and
stos
add
pop
push
add
jl
sub
test
test
shrb
adc
loope
fidivs
xorb
inc
mov
pop
cmc
dec
sub
subb
xchg
les
dec
add
xchg
mov
mov
sbb
in
or
add
push
js
mov
jp
adc
into
addb
jmp
inc
jg
stos
cmp
repnz
push
dec
scas
aas
push
cli
shll
mov
cmpsl
clc
pop
cmp
sti
insb
jp
out
js
adc
or
pop
movsl
movsb
jle
or
add
jp
test
push
pop
and
mov
stos
pminsw
insb
icebp
fildll
inc
je
adc
and
or
mov
or
adc
sbb
aaa
hlt
add
popw
mov
scas
cli
pushl
push
sub
jge
aaa
push
jo
int3
push
mov
sbb
jmp
test
dec
and
sbbb
out
rcrb
call
in
ljmp
call
mov
cli
jo
cmp
or
hlt
or
test
xchg
mov
xor
mov
scas
pop
fmull
jo
add
jo
mov
add
fildll
test
bound
loop
mov
dec
pop
ret
inc
and
fcomip
out
fucom
enter
sbb
stos
and
jg
movsl
cmpsb
shlb
lret
rcrb
outsb
dec
xor
cltd
out
inc
inc
fcomip
je
lahf
bound
push
or
and
out
loope
fildll
ljmp
jge
nop
loopne
jno
insl
shr
clc
in
sub
push
mov
sbb
int3
inc
xlat
decl
test
inc
add
addl
movsb
sbb
enter
xchg
inc
adc
xlat
push
jle
jns
mov
aaa
jmp
pop
push
orl
inc
orb
xchg
add
fdivrl
out
inc
jg
mov
les
sbb
daa
inc
test
nop
out
cli
add
xchg
cli
push
js
pop
mov
decl
or
pop
push
les
clc
stos
cmp
add
sarl
leave
sbb
push
add
jo
rolb
insl
push
jo
stos
or
outsl
es
pop
aaa
es
repnz
rorl
dec
mov
in
popa
lds
pop
inc
add
data16
gs
scas
push
inc
add
stos
cmpl
clc
pop
push
adcl
push
sahf
ss
cmp
ret
aaa
test
xlat
inc
push
cmp
test
cmp
fwait
adc
out
les
in
sub
sahf
in
mov
pop
jb
daa
adc
xchg
jp
inc
ja
mov
push
mov
mov
jecxz
lods
ret
ret
int3
divb
clc
xor
push
xchg
fcomps
rcl
mov
cmp
into
push
int3
rorl
jmp
fcmove
sbb
xlat
add
ftst
outsb
out
je
jl
mov
mov
push
xchg
push
jo
add
jle
jb
pop
inc
mov
cld
jnp
add
lds
mov
or
dec
jno
lret
mov
mov
cs
mov
int
cli
jmpw
mov
sbb
inc
ss
fsubrl
fists
sub
pop
xor
cmp
icebp
pop
scas
clc
enter
jbe
mov
xchg
rcrb
aaa
or
hlt
ss
push
pop
cli
loope
insl
mov
pop
lea
pop
cmc
jo
sbb
call
jbe
jge
loop
mov
inc
add
add
sbb
or
scas
mov
push
ficoml
popa
imul
cmpsb
hlt
dec
or
popa
test
cmp
jns
out
pop
ror
jns
inc
sar
fbstp
and
pop
cli
pop
movsb
in
es
mov
sub
push
mov
stos
popa
pop
jb
xor
inc
pop
ja
jp
fisubrl
imul
sub
add
xor
into
and
xor
sbb
and
andl
js
adc
leave
ret
xor
inc
shlb
mov
mov
push
or
mov
fsubs
je
mov
orb
loopne
push
or
mov
push
std
cmc
inc
jecxz
lock
enter
loope,pn
aam
dec
sub
repnz
adc
sbb
outsl
pop
jg
bnd
xchg
add
mov
xor
add
push
adc
jmp
xchg
sbb
adc
xor
cltd
mov
cmp
fsubrs
lahf
pop
sbb
pop
sarl
mov
or
mov
stos
mov
push
pop
mov
mov
mov
decl
mov
mov
adc
jne
outsl
clc
push
dec
dec
popf
test
mov
pop
mov
dec
fidivs
cld
aaa
push
inc
inc
lret
xchg
dec
cltd
sub
or
push
or
jmp
outsb
mov
shll
call
lahf
add
pop
sub
dec
dec
test
add
push
mov
cmp
cld
decl
jle
mov
les
cld
dec
gs
dec
lret
rol
popa
popa
inc
cmp
fiaddl
push
xor
loopne
cmp
cmc
or
jno
subb
pushf
js
cmpsl
pushl
pop
xor
xbegin
mov
mov
pop
loop
dec
sub
sub
std
pop
dec
push
add
rcrb
hlt
sti
repnz
je
add
dec
jle
pop
mov
lock
jb
mov
push
inc
jbe
push
rcrb
push
lcall
mov
out
xor
test
jl
push
push
in
add
stos
ljmp
pop
sbb
add
or
incl
cwtl
ret
push
push
fidivrl
sbbl
sub
pusha
mov
push
xor
loope
cli
je
mov
inc
inc
adc
push
adc
sub
clc
lahf
mov
sub
repz
xchg
push
andb
or
inc
sub
xchg
jo
sub
add
inc
or
inc
adc
outsl
fsubs
ja
aaa
xchg
clc
mov
xchg
dec
xchg
pop
lea
mov
lods
cmp
lock
and
mov
std
mov
add
push
rorl
jnp
push
in
or
sbb
jg
mov
sbb
fimuls
ss
enter
pusha
call
adc
mov
cli
rcrb
push
mov
sbb
mov
shl
ss
pop
or
insl
mov
ret
jb
push
neg
pop
decl
cs
cmpsb
add
ficoms
mov
pusha
lds
scas
add
adc
repnz
mov
orl
lcall
add
outsl
fstl
jle
incl
mov
jp
add
adc
cld
outsl
mov
lcall
xor
mov
ret
fsubr
add
neg
add
leave
movl
adc
hlt
mov
ret
adc
xchg
jmp
sbb
rorb
addl
stos
and
out
dec
icebp
fsubrp
mov
hlt
mov
xor
lock
mov
call
xchg
jo
inc
xchg
and
jg
test
cmc
outsb
xor
test
cld
movsb
lods
ss
push
jmp
adc
xchg
bound
arpl
imul
lret
sbbb
add
idivb
xchg
ficompl
push
add
cltd
sbb
jae
lar
cmpsb
push
fldl
mov
bound
mov
pop
pop
sub
sub
or
xor
xor
js
dec
jns
sbb
push
mov
mov
inc
sbb
or
or
test
mov
ret
call
xchg
orb
xchg
cmp
add
cmp
dec
cld
mov
jb
loopne
or
std
mov
pop
push
fadds
xchg
sbbb
adc
cmp
cwtl
das
mov
rorb
or
dec
test
popa
push
in
jns
pop
add
fbld
adc
iret
rolb
loopne
cwtl
lods
dec
jecxz
dec
adc
incl
out
xchg
sahf
xor
mov
inc
inc
push
repz
or
sub
mov
jle
pop
sar
lea
pushf
cmp
xchg
xor
sub
add
movsb
sub
xor
fistps
in
ret
jg
leave
pop
fisttps
fwait
pusha
rdmsr
add
push
or
lahf
push
pop
and
cmpsb
push
movsb
fcoms
pushf
std
add
or
out
test
neg
js
mov
xor
and
imul
push
sub
call
fnsetpm(287
loope
jno
adc
pop
aam
lock
insl
movsb
icebp
insb
fisubs
sarl
orb
aam
cmp
sub
rorb
mov
cli
or
cmpsl
lahf
mov
shrb
pop
xchg
push
je
xchg
cmp
nop
adc
rolb
add
dec
push
push
mov
jge
add
fdiv
pop
loopne
or
sbb
cmp
stos
or
push
push
adc
js
push
sub
rcrb
mov
das
push
call
add
jae
pop
xchg
jns
mov
inc
fs
hlt
push
orb
decl
cmpsb
faddl
jp
dec
les
or
adc
mov
enter
sub
ljmp
lcall
mov
pop
push
sbb
les
inc
mov
repnz
pop
lcall
sbb
loop
xchg
out
rorb
imul
mov
inc
loopne
cli
dec
js
loopne
ss
arpl
adc
cmp
test
jbe
mov
into
orb
push
jo
xlat
dec
aaa
std
test
inc
dec
mov
shll
call
ficoml
cmp
sub
xchg
push
call
ficompl
jmp
xor
movsb
rorb
or
test
lods
xchg
flds
and
cmpsb
mov
mov
dec
sarb
or
jle
adc
outsb
movl
mov
mov
or
pop
js
std
fistl
pop
out
inc
push
jo
inc
pop
mov
insl
add
cmp
mov
mov
pop
out
adc
jg
imul
cld
fwait
inc
sbb
bound
xchg
loop
call
xchg
stc
hlt
cmp
dec
cmp
cltd
imul
pop
add
imul
xchg
sbb
aaa
jge
or
stos
pushf
and
fistpll
sbb
mov
std
fildll
adc
mov
cmpsb
adc
cmp
sbb
and
repz
mov
add
mov
dec
inc
jo
jge
fwait
dec
pop
mov
jbe
pop
nop
inc
testb
les
pop
or
mov
nop
cmc
pop
hlt
mov
sbb
fcoms
shl
xchg
je
movsb
clc
out
rclb
sbb
ss
in
sahf
mov
ror
xor
mov
jg
mov
fiaddl
lods
adc
add
movb
sahf
into
adc
inc
dec
or
sub
incl
push
loope
mov
sub
adc
scas
mov
jmp
hlt
jg
jl
rol
xor
arpl
std
pop
in
mov
dec
add
aam
push
call
or
nop
push
fwait
jmp
push
push
fnsetpm(287
dec
mov
mov
jmp
mov
aaa
push
or
es
jp
lea
mov
jno
jl
ficomps
mov
dec
or
inc
lock
outsb
sbb
ffree
add
xor
mov
mov
sarb
jne
sub
call
pop
dec
dec
ja
lods
jmp
mov
ja
jo
mov
ret
test
decb
lods
loope
andb
push
mov
outsl
stos
add
dec
cwtl
out
pop
sbb
fwait
hlt
adc
stos
push
aam
shrl
dec
call
sub
and
adc
jbe
or
mov
mov
xchg
and
add
pop
jmp
mov
xlat
cmp
or
xor
pushl
nop
lock
int3
imul
or
push
or
sub
push
dec
mov
lret
or
in
push
jg
ljmp
mov
inc
cmpsb
arpl
add
inc
stc
outsl
rorl
cli
aaa
mov
sbb
cltd
icebp
push
push
push
mov
cmp
in
push
jo
push
cmpb
mov
jb
or
insb
enter
cld
pop
in
xor
enter
add
mov
mov
inc
int
cmp
lods
je
mov
std
mov
mov
add
add
ds
pop
mov
cs
fildll
loopne
inc
push
push
jns
add
cs
sbb
dec
nop
loope
pop
jmp
inc
mov
subl
loope
das
rcrb
add
rclb
sbb
pushl
xchg
addr16
testb
scas
jecxz
inc
enter
mov
mov
lcall
mov
and
or
loope
in
mov
mov
jecxz
and
pop
mov
pop
mov
pop
cwtl
js
jecxz
fmuls
out
rolb
pop
stc
clc
fs
out
mov
mov
cmp
imul
pushf
sar
fstpt
cmpsb
leave
aad
sbb
mov
sub
jmp
or
sar
jb
or
add
ficoms
decb
mov
xor
hlt
daa
jecxz
icebp
fildll
or
movsb
sar
js
xor
fsts
mov
scas
in
jp
scas
cli
xor
adc
lock
xor
add
mov
push
push
rcrb
daa
mov
inc
push
adc
movlps
dec
sbb
loopne
hlt
decl
jne
add
ds
sub
dec
ss
push
cmp
in
pop
dec
mov
xor
or
pop
and
test
shlb
xchg
cmp
clc
or
loopne
xchg
xchg
jno
sbb
mov
cli
inc
es
cmpsb
mov
mov
push
pop
sbb
aas
xchg
inc
mov
imul
mov
sub
xor
mov
or
loopne
xchg
pop
insb
pusha
imul
sbb
mov
mov
or
imul
and
adc
sub
dec
lods
iret
add
sbb
jb
push
add
or
xchg
inc
scas
lret
cmp
inc
in
mov
mov
fisttpll
dec
jb
cld
xchg
and
and
inc
jmp
shlb
add
adc
ret
mov
mov
js
xchg
fcomps
rcr
mov
or
bound
mov
push
or
dec
push
pop
sbb
roll
xchg
jbe
insb
iret
dec
sbb
loope
xor
pop
lahf
and
pop
jno
lcall
xchg
es
mov
stos
nop
adc
incl
mov
cmpsl
and
js
jmp
test
loopne
mov
loopne
movsb
and
xchg
jmp
cmp
jg
push
in
idivb
mov
jb
push
cmp
dec
mov
pop
and
mov
mov
pop
sub
je
movsb
dec
cmp
adc
and
stos
inc
or
mov
inc
fists
shll
cltd
insb
sbb
mov
add
test
inc
loopne
ss
incl
insl
add
test
xchg
pop
pop
and
mov
mov
or
lret
lock
lahf
push
loope
aad
outsl
inc
pushl
sbb
or
push
and
call
imul
jp
test
lret
xchg
outsl
sub
aas
std
outsl
xor
and
adcb
std
test
mov
into
stos
or
inc
pop
inc
in
dec
or
dec
sub
rclb
inc
pop
mov
mov
push
mov
xchg
lock
xchg
inc
stc
loope
inc
jg
xor
sub
ficoml
sar
mov
add
ret
mov
pusha
fldl
sti
push
cmp
test
lcall
mov
mov
orb
repnz
inc
sub
jmp
mov
add
jl
pop
inc
std
push
dec
xlat
mov
lods
dec
and
addl
jbe
orb
xor
scas
sar
dec
sbb
ret
pop
shlb
incl
sub
xchg
push
scas
push
sbbb
push
scas
pop
lcall
insl
es
mov
je
adc
inc
mov
clc
sbb
test
pop
in
roll
out
adcb
shlb
stos
gs
loop,pn
mov
decl
and
xor
out
ds
sbb
int
inc
pushl
add
ds
jge
rolb
and
sar
repz
push
cmp
or
cwtl
add
add
dec
test
pushf
sub
je
adc
sbb
repnz
and
inc
outsl
mov
sub
and
shlb
mov
decb
shrl
ds
ds
pop
ret
jnp
das
fwait
stos
ss
and
dec
andl
adcl
push
iret
repnz
push
sub
jbe
arpl
punpckhdq
sbb
mov
xorl
sub
in
pop
cs
lods
insb
mov
jne
mov
clc
sahf
pop
lcall
or
test
jo
movsl
inc
ret
add
lock
add
fbld
adc
cmp
add
clc
mov
pop
mov
cwtl
xchg
ljmp
je
stos
fcoms
xchg
outsl
icebp
sbb
jb
aad
fistps
fisubs
push
push
je
loop
aaa
std
fcomip
adc
mov
sub
jl
inc
push
cmpsb
jp
outsl
mov
or
adc
jg
xor
dec
mov
mov
push
gs
jb
popa
xor
or
in
call
xor
test
outsb
pop
rorb
push
shll
sbb
mov
fcomps
clc
jmp
or
shl
sub
orb
mov
lods
cli
xchg
scas
sbb
add
inc
adc
sbb
jne
and
incb
sar
js
mov
jbe
bound
push
push
hlt
test
adc
ret
out
js
or
adc
std
jo
mov
jp
lret
rcr
addb
mov
push
hlt
mov
jl
sub
clc
add
pop
pop
xchg
sbb
xor
stos
les
and
addr16
loop
cwtl
add
andl
movsb
or
ret
inc
jl
sbb
hlt
jg
out
sbb
mov
mov
or
sbb
loop
sbb
cmpsb
ficompl
sbbb
das
mov
fdivrs
inc
sbb
pop
jne
mov
fcomps
insb
push
fnsave
aam
xchg
and
clc
stos
xchg
adc
fists
stc
or
sbb
shrl
and
inc
mov
mov
inc
and
pop
insl
mov
lock
int3
push
shlb
cmp
dec
fwait
add
add
mov
in
sub
pop
stos
clc
lret
add
bnd
idiv
mov
in
pop
sbb
and
mov
push
push
push
loope
mov
mov
fisttpl
call
xchg
or
dec
ret
push
or
jg
sbb
rol
sbb
loope
jnp
test
mov
aad
dec
lcall
mov
pusha
and
lcall
nop
sub
movsl
sub
pushf
andb
lret
bnd
xchg
test
fcoms
inc
lds
and
filds
mov
and
adc
sub
aam
mov
jb
sarl
dec
mov
inc
sub
shll
call
out
jne
mov
out
or
rolb
pop
sub
dec
pop
pop
sub
imul
mov
std
push
pushl
adc
cmp
shr
jmp
std
or
das
daa
mov
push
stos
jbe
sub
rolb
insl
fmuls
mov
ds
das
into
in
mov
stc
mov
pop
mov
out
mov
or
stos
aam
js
add
cmp
mov
pushf
mov
lret
jmp
cmp
dec
sub
add
jnp
cmp
aam
cmpsl
mov
cmp
ja
imulb
cmp
daa
xchg
push
sub
pop
ss
dec
mov
inc
test
sbb
sahf
inc
dec
mov
in
and
jp
jl
or
adc
inc
daa
loop
adc
ljmp
and
sub
mov
inc
sahf
xchg
or
fisubs
cli
inc
cmpsb
mov
sub
mov
adc
out
xor
idiv
decl
inc
xchg
cmp
pop
enter
fdiv
loope
push
loopne
pop
test
in
adc
mov
inc
aaa
add
mov
popf
xchg
aaa
adc
dec
js
es
dec
fdivrs
sbb
loopne
and
clc
bound
sub
decl
nop
xor
in
lret
mov
mov
sbb
stos
add
xchg
repnz
lods
adc
pop
call
adc
and
push
jns
mov
lods
cli
pop
jl
mov
xlat
int3
fistl
addr16
dec
cs
mov
mov
clc
call
aaa
mov
mov
sarl
jp
hlt
out
arpl
out
add
cmpsb
cmp
lea
dec
sub
sub
ljmp
xor
pop
and
xchg
push
lods
pushf
aad
jmp
pop
mov
add
out
or
scas
add
mov
test
test
pop
push
inc
jg
push
clc
xor
jnp
pushf
mov
call
sbbb
push
loop
xchg
jmp
hlt
lea
scas
xchg
loop
clc
jg
das
or
mov
pop
sbb
lods
adc
jns
sub
jbe
fs
out
add
add
pop
mov
pop
popa
inc
jne
pop
rorb
in
clc
sub
mov
sub
fs
call
adc
add
sahf
pushf
in
std
loopne
incl
scas
popf
adc
dec
mov
adc
push
adc
incl
mov
enter
data16
add
in
inc
or
es
pop
mov
mov
adc
push
jl
sub
xor
into
mov
xchg
jo
cmpb
sahf
je,pt
icebp
xchg
xchg
lret
mov
enter
mov
subb
iret
rolb
jg
sahf
mov
lcall
pop
iret
insb
rcrl
fs
cld
out
test
or
or
stos
stc
and
leave
mov
mov
addb
jno
sub
lcall
mov
xlat
sub
lcall
ss
nop
add
shlb
cs
or
jb
pop
adc
ret
or
ja
push
cmpsl
pop
fs
push
jnp
and
push
mov
ljmp
in
imul
xlat
dec
mov
cli
add
in
pop
inc
cmp
lcall
lcall
sub
inc
inc
fidivs
repz
push
cs
push
jg
es
pop
sub
or
jmp
clc
sbb
add
jae
push
xor
dec
cmp
add
inc
xor
mov
rol
jle
cmp
cmpsb
fcomip
sti
or
loop
fiaddl
mov
iret
mov
lcall
cmpb
jmp
std
cmp
sub
fucomp
and
aaa
xor
decl
aad
xchg
popl
or
sahf
push
pop
loopne
pop
hlt
orl
lods
jl
into
add
mov
insb
inc
add
in
xchg
xor
or
mov
inc
sub
frstor
jo
icebp
mov
lcall
fcomp
push
cmpsl
bound
push
ja
subb
mov
sub
decb
and
int
mov
mov
sti
mov
mov
push
mov
push
push
cmp
shll
mov
lock
inc
scas
out
mov
xchg
jl
popa
rcll
or
lahf
lret
cwtl
inc
xchg
xchg
decb
or
sbb
xor
leave
adc
popf
mov
push
jb
push
push
aas
ret
fnsave
dec
addb
test
sub
xor
clc
cmpsb
mov
jg
movsl
mov
and
decl
test
mov
mov
sbb
mov
jle
rolb
cmp
popa
sbb
adc
mov
dec
sub
ljmp
xchg
or
pop
sbb
cli
add
jbe
pop
inc
leave
lock
lods
aad
mulb
lods
js
inc
decl
and
sti
andl
jl
lcall
clc
sbb
jmp
scas
xor
push
inc
lods
popa
mov
pop
lock
mov
pop
hlt
or
dec
inc
rcl
mov
dec
or
fcomip
mov
lret
pop
or
jbe
imul
pop
sbb
xchg
lds
xchg
xchg
imul
inc
loopne
push
cmc
cmp
fcompl
repz
stos
jge
lea
idivb
cs
and
and
sbb
fildl
adc
mov
push
testl
and
sbb
cmp
mov
jp
lret
repz
inc
loopne
shll
inc
popl
xor
add
outsb
cld
lcall
out
jne
and
rcrl
cmp
out
sbb
or
pop
and
lcall
ja
imul
cmp
jge
inc
scas
mov
repz
fbstp
mov
mov
insb
dec
insb
icebp
mov
cmpsb
lods
xchg
xor
loop
shrl
ret
mov
pop
xchg
and
push
and
jne
enter
ss
ja
mov
mov
add
inc
lret
adc
push
push
data16
sbb
sbb
inc
nop
push
gs
cmp
std
out
lcall
add
sub
adc
mov
mov
shlb
xor
popa
mov
outsl
and
sbb
jecxz
in
rorl
xor
mov
and
adc
cwtl
xchg
inc
icebp
cmp
mov
pop
and
out
pop
rcrb
adc
push
or
or
add
insl
ret
dec
sub
incb
scas
push
xchg
fs
movsl
dec
std
adc
jae
dec
push
adc
dec
roll
jnp
pop
lods
pusha
cmp
sbb
xor
or
mov
bound
lock
push
imul
sub
mov
xor
push
stc
mov
mov
pop
stos
lods
add
add
lock
cwtl
lock
loopne
add
mov
ret
or
or
push
push
xchg
jae
out
xor
incl
cld
add
mov
sub
test
insl
inc
and
dec
mov
incl
xor
lds
sub
push
movb
fisubrs
pop
sub
cs
mov
enter
fbstp
sahf
adc
mov
call
pop
outsl
xchg
and
flds
repz
push
ljmp
fimull
mov
faddp
cs
mov
or
xor
adc
mov
mov
imul
jecxz
ljmp
xor
xchg
xor
and
addb
stos
push
dec
shlb
lds
idivb
loope
les
arpl
shll
test
fdivr
jg
call
adc
xchg
test
test
add
xchg
mull
jg
mov
rorl
movsl
xor
add
mov
loope
dec
cmp
inc
clc
adcl
cltd
inc
out
stos
lcall
test
push
lods
call
jle
and
push
addl
add
cmp
sub
sbb
add
insb
pusha
xchg
jnp
clc
dec
scas
add
xchg
cmp
xor
incl
mov
icebp
aam
mov
pusha
punpckhdq
loopne
les
insb
sbbb
add
lret
fsub
push
mov
rcrb
dec
in
jecxz
stos
stos
mov
cmp
xor
add
je
or
in
gs
add
jg
test
leave
or
fnstcw
mov
sbb
and
cld
jmp
aad
inc
pop
js
bound
push
shrb
lock
cmp
shrb
pop
and
xor
je
in
psubw
sbb
jmp
cmp
adc
inc
andb
xchg
mov
mov
pop
add
sub
mov
xor
mov
inc
and
push
sub
fbstp
mov
movsb
js
test
sbb
jnp
stos
xor
int3
ret
xchg
adc
pop
hlt
add
add
pop
or
sbb
sub
mov
mov
test
clc
or
pop
xor
gs
leave
and
pop
shlb
xor
cmp
push
dec
pusha
sub
inc
enter
insb
jecxz
inc
test
sbb
das
cli
fbld
loopne
cwtl
add
pop
nop
push
pop
fisubrl
pushf
je
mov
and
out
orb
add
pop
adc
out
cli
fwait
test
clc
into
or
push
or
cld
adc
pminub
rolb
les
adc
rcll
popa
add
ss
clc
mov
jnp
add
push
add
xor
jecxz
out
mov
or
mov
notb
jp
test
ja
pop
and
lahf
popa
test
ss
repnz
incl
cmpsb
filds
inc
dec
push
xchg
sbb
add
das
ljmp
xchg
fwait
dec
jno
and
insl
decl
adc
dec
add
into
xor
icebp
ret
sbb
test
or
loope
cmpsb
in
incl
mov
mov
dec
mov
repz
mov
cmp
mov
imul
mov
sbb
ret
mov
jp
pop
cmp
pop
sub
es
sub
mov
aam
or
mov
jno,pt
stc
loopne
jecxz
mov
xchg
ja
xchg
cli
rolb
dec
ret
shrl
mov
je
lds
je
fs
push
mov
push
pushf
xchg
mov
push
cld
inc
push
cmp
std
mov
push
sbb
lret
or
aaa
loope
add
outsl
mulb
dec
into
mov
pusha
or
and
adc
mov
jecxz
fwait
sbb
dec
test
and
cli
push
dec
ret
mov
loopne
xchg
cmpsb
andb
stos
add
sbb
add
in
xorb
adc
or
mov
shrb
scas
sarl
adc
out
mov
mov
push
add
lcall
repnz
xchg
jbe
xor
sub
xchg
aam
jo
shrb
cmp
inc
fists
dec
in
scas
pop
or
add
int
and
add
out
add
aad
outsb
sub
mov
mov
call
and
imul
icebp
call
sub
js
pop
jb
inc
fwait
loopne
pusha
in
push
dec
lock
mov
xor
es
and
adcb
mov
loopne
jmp
mov
xchg
in
mov
nop
sbb
ret
or
mov
mov
mov
ret
xchg
nop
loop
sbb
not
sbb
out
sar
call
or
mov
push
clc
add
repz
call
and
adcb
icebp
mov
ds
jne
lds
mov
fsubs
shll
adc
or
sbbl
mov
mov
ljmp
pop
in
out
popf
aas
add
mov
mov
cmpsb
cmpsl
mov
pushl
enter
sub
leave
add
or
sub
pop
orl
std
addl
je
fs
mov
sub
push
inc
xlat
add
subl
cmpsl
hlt
xor
dec
dec
add
jl
push
add
mov
ret
mov
inc
jmp
mov
roll
mov
rcr
push
jnp
imulb
dec
add
xchg
or
dec
cli
mov
dec
nop
and
rcrb
test
loopne
inc
push
jo
or
test
cmp
push
mov
cmp
jmp
jmp
sbb
inc
adc
mov
jg
jae
mov
sub
outsl
loopne
subl
ljmp
pushl
bound
add
add
or
xor
shlb
mov
and
subb
dec
adc
xor
mulb
mov
pop
lock
scas
add
lock
inc
xor
xchg
lret
shlb
repnz
cs
push
stos
jno
and
sbb
incl
inc
and
cmp
add
bound
loope,pt
lods
jmp
das
movsl
loop
xor
es
cmp
jg
fisubrs
jae
cwtl
xor
loopne
adc
sbb
mov
cld
add
movsl
push
xchg
dec
hlt
outsl
cli
pop
jp
dec
addr16
jg
loop
sbb
shlb
cli
xchg
ret
or
dec
int3
mov
adc
loope
dec
int3
bound
into
xor
push
dec
mov
add
movsb
sbb
or
inc
sbb
in
decl
mov
popf
in
mov
or
adc
add
cmp
or
jg
push
xchg
fwait
mov
mov
jmp
fdivs
and
je
leave
sbb
xchg
int
fcomip
pushl
call
fwait
repz
cmc
and
sub
cli
incl
add
adcb
das
jo
lea
ret
dec
xchg
clc
cmp
mov
incl
pushl
fsts
or
dec
push
call
and
popa
inc
cmpsb
xchg
sub
decl
add
out
inc
jp
fdivr
in
adc
sbb
or
scas
add
push
inc
sarb
jno
shlb
mov
icebp
add
lds
and
psubusb
pop
cli
test
ljmp
pop
push
fidivrl
mov
hlt
fists
clc
and
adc
lret
jge
js
sar
sub
cmp
andb
movsl
adcb
std
das
dec
lret
mov
mov
mov
loop
lcall
stos
insb
jae
pop
or
or
jmp
test
fisubrs
rorb
adc
jmp
inc
inc
jg
mov
dec
mov
pop
enter
cmp
cwtl
mov
xlat
or
jae
imulb
pop
or
mov
cmpsl
cmp
rcrb
movsl
call
inc
push
mov
in
dec
or
push
mov
xorb
lret
inc
cwtl
cmpsl
mov
pop
sub
lods
xchg
jg
pop
inc
aam
ret
or
enter
loop
or
ficompl
lods
lods
xchg
ret
mov
out
xchg
add
cmp
int3
push
add
data16
mov
mov
sbb
clc
push
out
xor
dec
test
xchg
mov
cmc
fists
mov
push
es
test
pushl
jo
fsubrl
sbb
push
pop
mov
out
out
rorb
add
mov
lcall
xlat
enter
pushl
cwtl
and
addb
test
nop
jbe
pop
inc
inc
dec
jo
xor
test
lret
test
xor
add
sub
jl
mov
push
add
or
mov
lea
fdiv
mov
jns
data16
add
jl
mov
mulb
lahf
das
shlb
pop
or
add
dec
cwtl
sarb
cmp
fldt
cwtl
notb
sahf
sbb
inc
cld
sbb
lock
add
sub
fdivp
xchg
bound
inc
mov
mov
dec
loope
mov
rorb
ret
mov
mov
lcall
inc
mov
cmp
pop
mov
adc
pop
faddl
or
cmpsb
incl
shll
pop
fldcw
and
jge
sbb
add
ret
jg
mov
inc
xchg
ret
dec
hlt
pop
jg
lods
fidivrl
repz
or
imul
mov
leave
push
mov
adc
aaa
dec
and
rolb
add
stos
scas
xchg
cwtl
ret
scas
outsl
and
jb
mov
jb
push
mov
std
scas
cli
mov
idiv
daa
cld
sub
in
jo
std
xor
test
lock
mov
je
bound
idivb
repnz
jle
ljmp
mov
pop
push
fwait
int3
pop
add
cld
add
sbb
inc
decl
fwait
pushw
rol
rcl
mov
push
and
rorl
cld
mov
scas
loop
inc
divl
xchg
pop
inc
push
icebp
jae
mov
repnz
and
mov
lock
and
imul
in
jg
sub
xor
push
mov
add
in
ficompl
pop
ljmp
pop
mov
movsl
adc
pushl
mov
ret
fstl
and
jl
push
clc
cli
fistpl
in
mov
notb
es
jle
adcb
add
fmuls
dec
std
orl
mov
mov
fcoms
test
into
fidivrs
js
or
add
adc
sbb
add
daa
ret
in
add
fistpll
and
xchg
dec
sahf
cmp
push
pop
or
loopne
or
clc
push
out
nop
pop
andl
or
cmp
jae
adc
fists
or
add
insl
and
jns
cmpl
decl
cmp
ja
inc
dec
mov
mov
arpl
stos
std
addb
cmp
mov
divl
in
loope
fisttps
loopne
imul
cmp
mov
fwait
inc
ret
ds
dec
shrb
or
mov
xor
jl
cmp
push
scas
lock
xchg
fwait
dec
pop
or
and
inc
insb
in
jo
das
push
cmp
rcrl
sub
mov
incl
inc
loopne
jle
adc
and
mov
cmp
test
lea
shlb
sub
adc
insb
test
or
mov
lret
aam
ds
add
mov
mov
inc
lcall
aaa
jecxz
push
jge
jo
add
ret
adc
lock
push
hlt
mov
aam
jl
mov
ret
mov
sub
rcll
out
mov
jbe
mov
inc
fs
fdivr
daa
call
icebp
lcall
add
jns
adc
xorb
mov
lcall
ljmp
and
jle
mov
jl
mov
stos
mov
xchg
in
jmp
jno
mov
mov
mov
sub
mov
add
xor
or
xorl
rolb
nop
push
mov
cld
ja
inc
sub
and
dec
enter
adc
lods
fadds
dec
push
inc
xor
mov
jmp
or
xchg
bound
xchg
jmp
xor
pop
fcmovb
lock
add
xlat
aas
je
xchg
lods
or
xor
std
inc
fisttps
and
test
mov
mov
jb
add
pusha
and
das
adc
jg
adc
test
add
mov
sub
push
xor
inc
xor
out
mov
push
mov
fmull
and
xchg
add
nop
xchg
movsl
jnp
aad
scas
or
in
push
dec
ret
jge
adc
data16
imul
mov
mov
cli
push
adc
dec
ds
cmp
stc
inc
mov
or
out
adc
movsl
mov
or
jbe
xchg
in
mov
mov
test
enter
jg
lods
es
cmpsb
mov
cld
lock
pushl
and
out
enter
in
or
dec
fiadds
cmp
in
pop
pop
lds
pop
icebp
push
add
nop
ret
push
push
dec
fstpl
clc
les
sub
push
cmc
stos
sub
lcall
filds
jl
movsb
call
sahf
xchg
lahf
popf
clc
xchg
ljmp
add
pusha
jne
mov
adc
mov
sbbb
xchg
xlat
dec
jb
ljmp
inc
ds
push
rorl
cld
cmp
adcb
mov
add
jg
dec
mov
arpl
push
mov
pop
icebp
scas
mov
movsl
or
orl
andps
pop
test
pop
cmp
inc
adc
hlt
mov
jmp
inc
into
push
cmc
fisubl
outsb
sar
mov
push
outsb
mov
imul
shrl
lods
in
jg
mov
sbb
out
bound
adc
lock
push
rorl
dec
and
sub
int
or
pop
xchg
addl
lcall
push
xor
mov
loop
lock
mov
add
rorb
call
outsl
jg
cs
les
dec
push
mov
inc
aam
loope
mov
loope
jmp
outsb
xchg
les
mov
push
jae
roll
add
divb
add
movsb
mov
push
test
inc
mov
mov
cmp
dec
mov
mov
sbb
xchg
dec
mov
popf
rclb
nop
out
xchg
jno
inc
xor
aad
pop
nop
sub
lcall
xchg
imul
scas
stos
push
test
dec
das
jmp
je
add
jecxz
cmpsb
mov
or
and
and
sub
xor
les
cmp
lret
cmpl
rclb
cmpb
push
mov
add
iret
enter
mov
push
loopne
and
mov
jnp
cmp
je
mov
add
imul
and
jge
mov
xor
add
lock
ljmp
or
out
ja
xchg
test
or
dec
cwtl
fiaddl
cld
cli
and
mov
push
aas
stos
mov
mov
push
xchg
addr16
in
movsb
rol
xor
jp
js
test
ljmp
lret
je
nop
xor
and
hlt
sub
and
mov
stos
xor
inc
push
inc
cmp
pop
adcb
push
ljmp
adc
mov
add
mov
pop
loopne
mov
shrb
jb
loopne
cmp
inc
test
incl
xorb
sbb
and
loopne
mov
shlb
mov
sbb
mov
xor
adc
mov
ss
pop
shrb
movsb
xor
pushf
adc
movsl
cld
decl
or
jg
mov
out
int
jbe
jbe
sbb
inc
mov
insl
nop
mov
ljmp
bound
mov
cmp
mov
cld
aas
add
jns
inc
xchg
pop
fs
stos
decb
fwait
mov
push
loope
sub
fcomip
push
or
sub
outsb
scas
gs
xchg
mov
shrb
adcb
or
scas
stos
cmpsb
sub
inc
xorb
subl
fmuls
ljmp
call
mov
pop
rol
push
cmp
cltd
sub
cld
test
push
ds
sbb
ret
repz
ljmp
cmp
inc
loopne
push
call
loop
and
fwait
mov
rol
test
push
into
jle
or
mov
orl
mov
jb
call
and
decb
add
jp
and
lcall
outsl
push
icebp
ja
ret
addl
adcl
jle
jae
and
jne
cld
sbb
ds
jbe
das
sub
push
pop
hlt
movsb
in
insb
add
imul
or
lods
jmp
test
adc
cmp
pusha
aad
adc
or
jecxz
rcrl
pop
movsb
adcl
repz
xchg
lcall
popa
pop
js
mov
loopne
shlb
push
or
lds
ljmp
add
dec
sub
dec
daa
adc
fisubs
push
rcrb
adc
mov
xor
loope
jecxz
inc
scas
out
or
xor
pop
movsb
aas
or
bound
aaa
inc
xor
jg
adc
mov
jge
sub
rcrb
add
or
pop
stc
push
dec
lds
add
mov
mov
push
push
scas
test
inc
inc
or
cmp
push
or
lods
inc
dec
push
stos
cmp
test
outsl
cli
lcall
out
push
push
out
mov
push
insl
pop
sbb
rorl
cld
outsl
xchg
out
mov
rcrb
mov
adc
mov
push
add
js
cmp
and
loop
aaa
in
mov
mov
sub
and
xorl
jle
inc
es
stc
cld
add
das
fwait
bound
bound
cli
call
pop
mov
jne
xchg
testl
test
dec
clc
inc
sarb
xor
sub
mov
rcrl
outsb
xchg
pop
push
dec
pusha
jns
ret
sub
sub
pop
push
repnz
dec
adc
push
fucom
lock
insl
loopne
adc
mov
aam
mov
add
bound
inc
push
jle
ljmp
and
mov
cmp
ljmp
ljmp
out
leave
ds
shll
add
call
cmpb
cmpsb
xor
out
loop
xor
sub
daa
icebp
add
test
int
mov
sbb
jmp
and
mov
jnp
cmpsl
xlat
mov
jecxz
mov
adc
rcrb
cmp
push
or
inc
add
jb
add
and
into
sbb
fisttpl
pop
loopne
xchg
fldl2e
mov
loop
jg
sub
shll
out
xor
aam
das
clc
sbb
mov
pop
sub
mov
aaa
jbe
ljmp
out
ret
in
out
ds
mov
arpl
xchg
hlt
out
popf
sub
mov
out
sub
adc
mov
mov
push
or
or
int3
inc
mov
mov
jo
jno
jecxz
pop
pop
add
out
push
inc
push
dec
stos
mov
lret
mov
test
cld
push
mov
mov
test
data16
cmp
jne
outsb
xor
pop
dec
cli
stos
jge
jmp
mov
and
adc
cmp
pop
jle
add
push
adc
add
shrb
sbb
clc
pop
inc
cs
pop
ljmp
dec
jecxz
scas
mov
inc
pop
add
dec
jge
out
sub
pop
or
icebp
and
push
test
dec
stc
pushl
test
aam
add
add
loopne
mov
pop
lock
ret
or
jge
dec
xor
dec
jge
aam
stos
adc
add
push
dec
xorb
daa
pop
loope
cmp
cmp
fisttps
ds
dec
add
daa
test
mov
push
mov
cmp
shrl
movsb
rclb
ja
mov
pusha
fsubl
push
aad
push
and
or
pop
push
scas
jle
loop
movsb
mov
or
inc
decl
scas
sbb
popa
addr16
xlat
sbb
cmc
add
sbb
dec
push
xor
loop,pn
inc
shlb
cmpl
sub
int
xor
cmp
sbbl
or
jo
xchg
orb
movsb
push
pop
out
mov
or
testb
sahf
adc
imul
adc
dec
fstl
sbb
xor
pushl
adc
into
mov
outsb
aas
push
subb
sbb
bound
push
and
incb
andl
push
pop
lods
in
sbb
xlat
pop
xorb
mov
mov
inc
adc
inc
rorl
dec
cmp
je
jno
add
insb
ljmp
or
shll
leave
push
enter
sbb
push
push
add
mov
jle
sub
push
mov
iret
add
push
and
dec
mov
lods
decl
pop
in
dec
sbb
decl
imul
inc
in
stos
aaa
mov
or
mov
movb
sbb
mov
hlt
cld
xor
pop
imul
ljmp
xchg
mov
shr
xchg
ret
out
popa
stos
or
pop
imul
insl
cmp
fists
xchg
or
xchg
add
mov
dec
add
cmc
inc
add
incl
pop
in
lds
jl
movsb
jg
inc
cwtl
mov
or
cli
xor
cmp
dec
adc
xor
ja
sarb
lret
test
arpl
mov
aas
pop
and
pop
mov
adc
ret
iret
test
adc
cld
out
lods
leave
iret
push
fadd
xchg
movsl
push
jb
cwtl
push
or
das
adc
adc
xor
xor
rolb
loopne
push
subb
adc
decl
mov
add
aam
mov
push
clc
mov
aas
xor
mov
call
xor
cld
mov
add
mov
mov
and
aaa
cmpsb
push
push
add
push
loopne
pop
cmp
inc
lea
mov
and
sub
cwtl
inc
cmpsb
sti
out
xchg
hlt
push
cwtl
cli
sbb
shl
ficomps
ja
into
pop
in
enter
mov
fst
cmpsb
mov
and
add
dec
inc
xor
bound
push
pusha
pop
mov
pop
test
mov
sbb
ja
sbb
mov
mov
cmpsl
sub
jg
jecxz
cwtl
dec
pop
inc
pop
add
mov
leave
dec
or
and
xchg
push
shr
loop
clc
or
lea
mov
adc
out
loop
addb
iret
clc
imul
cmpsl
fstpl
int3
daa
add
pusha
fidivs
cli
cld
imul
decl
cmpsb
gs
bound
add
jg
push
mov
jg
add
or
cwtl
es
int
push
push
xor
mov
xor
sbb
xor
lea
jb
fistl
mov
adc
cmp
psubb
mov
mov
andb
sbb
clc
outsl
sbb
mov
cmp
aas
inc
adc
outsl
mov
icebp
arpl
add
xchg
add
xlat
fldcw
out
or
ret
cmpsl
mov
insl
mov
inc
fs
adc
ret
int3
test
filds
out
xorb
pop
or
xor
adc
aaa
test
or
cmpsb
outsb
andl
or
fcomp
or
add
addb
in
sbb
outsb
pop
and
fists
push
das
shrb
fwait
ss
push
lods
mov
mov
orb
cltd
fimuls
dec
lea
push
cmp
ds
sub
cmp
shrl
out
lock
adc
cmp
test
and
in
movsl
mov
mov
mov
adc
push
jp
imul
mov
hlt
jg
inc
xor
jns
lock
inc
cs
out
fs
cmpsl
mov
or
push
imul
roll
mov
out
add
add
pusha
push
shll
test
add
jl
cmp
jp
icebp
pop
adc
imul
outsb
and
shrl
das
jmp
and
fcomip
ja
inc
push
jle
cmp
insb
js
pop
cmp
sbb
sbb
add
es
adc
jo
dec
sub
or
divl
push
xchg
add
clc
sbb
mov
in
mov
sbb
lahf
sub
sub
lcall
ljmp
lahf
leave
das
add
lods
iret
sbb
test
push
ja
stos
out
ss
ss
lcall
lods
hlt
jmp
push
push
aas
sub
pusha
fadds
pop
jbe
xor
cli
dec
jb
icebp
cmpsb
sti
xor
data16
dec
leave
int
or
loope
add
push
xorb
aam
outsb
inc
std
xchg
or
mov
leave
out
xor
aam
and
or
mov
push
addl
ret
cmp
push
lds
jb
xchg
mov
hlt
dec
outsl
dec
and
add
insl
fcompl
imul
mov
in
mov
mov
mov
inc
sub
outsl
call
mov
out
fstps
cmp
mov
ss
sbb
mov
icebp
cs
mov
sti
daa
xlat
cmp
add
es
imul
mov
sahf
sarb
dec
jb
aad
xchg
inc
mov
xor
add
neg
jo
mov
pop
push
push
nop
mov
call
jg
ds
into
aas
lock
pop
ss
ds
test
push
cwtl
pop
pop
pushf
lods
loope
and
pushl
lret
fdivs
inc
cmp
test
dec
lcall
test
call
and
sbb
hlt
lcall
push
pop
dec
add
inc
enter
mov
js
lock
loopne
and
jbe
bound
xchg
movsb
dec
loopne
push
mov
add
ja
bound
mov
and
rolb
outsl
adc
rcll
adc
stc
pop
ficomps
adc
nop
popf
cmp
cmp
adc
test
or
add
pop
adc
outsl
lahf
in
sub
mov
stos
hlt
sub
shrl
add
outsb
aam
add
dec
ret
scas
clc
pop
xchg
add
cmp
mov
adc
scas
adc
inc
test
les
add
dec
test
pop
and
sub
add
inc
pop
dec
leave
push
xor
inc
and
add
or
loope
sbb
shl
in
sub
mov
mov
cli
scas
push
dec
xor
add
adc
hlt
inc
dec
scas
js
testl
icebp
stos
pop
adc
dec
xchg
or
mov
push
push
sbb
push
andl
popf
stos
jbe
jmp
dec
jne
lret
fstpl
jl
jmp
add
shrb
pusha
mov
sub
pop
xlat
inc
add
dec
mov
xchg
inc
xor
lock
add
adc
sub
imul
call
inc
mov
add
mov
adc
aad
data16
and
and
add
cmovbe
or
mov
cmp
xlat
fists
or
fs
ja
cli
mov
std
ret
jl
sahf
jo
lret
pop
xor
cmp
mov
test
addl
inc
daa
lret
lock
stos
mov
add
jmp
push
push
call
jle
icebp
ljmp
sbb
cld
cmp
push
fcom
and
xor
ljmp
or
xor
gs
aas
pushf
sub
sub
push
arpl
mov
movsl
rolb
mov
enter
xor
test
xchg
repz
xlat
ljmp
xchg
add
orb
das
and
test
or
adc
xchg
push
push
fdivrp
icebp
sbb
inc
mov
incl
aaa
sub
insb
ljmp
pop
mov
movsl
fisttps
nop
sbb
add
sbb
adc
and
add
sbbb
ja
cli
out
dec
xchg
sub
pop
in
icebp
clc
mov
pop
add
mov
test
sbb
pop
xor
jle
or
xor
mov
mov
popf
jmp
insb
push
mov
sbb
negb
and
mov
push
cmp
and
pop
call
push
cmc
xor
fcom
shrl
rolb
arpl
lahf
les
fildl
lock
push
je
mov
add
mov
cld
pop
int3
bound
fdiv
outsb
jl
jo
push
inc
sbb
jl
add
and
stos
insl
xor
or
loopne
cmp
cwtl
fwait
pop
mov
and
push
inc
fistpll
mov
or
xchg
sub
loope
jnp
adc
std
incl
or
lar
dec
daa
fdivr
mov
mov
lea
sbb
mov
dec
lods
adc
ja
inc
push
adc
push
js
je
cwtl
sub
pushf
jmp
mov
popa
mov
or
or
xor
hlt
lcall
andl
xbegin
jge
or
pop
loop
ja
bound
and
cmp
or
xchg
in
test
push
ret
pusha
mov
cmp
push
imulb
int3
fs
xchg
push
cld
pop
adc
adc
mov
cmpsb
call
xchg
imul
pop
cs
pusha
or
cmc
adc
jle
xchg
push
loopne
outsb
mov
adc
mov
or
imulb
and
clc
inc
xlat
insl
rclb
mov
clc
jg
or
lods
mov
fwait
clc
add
xchg
xlat
push
mov
cld
movsl
jl
call
dec
sbbl
xchg
mov
lock
mov
and
pop
dec
sbb
lock
pop
add
adc
test
ljmp
lret
mull
sbbb
fbstp
jo
and
jmp
lock
call
add
psubusb
add
je
inc
add
sub
or
popa
cmc
mov
dec
mov
xchg
adc
mov
dec
ds
mov
stos
push
lods
filds
xorl
xor
xchg
or
aaa
das
loop
add
mov
je
mov
adc
add
and
or
sarl
in
fbld
loopne
cmp
or
cli
jg
gs
sub
sub
mov
and
inc
sbb
fcoms
push
dec
xor
cs
inc
mov
mov
popa
lods
into
xlat
sti
mov
or
sbbb
jb
out
shrb
in
fcomip
jg
cld
mov
lret
js
repz
movsl
mov
sub
push
js
out
test
push
cmpsl
jnp
adc
add
jmp
stos
lahf
icebp
maxps
pop
inc
mov
push
stos
jne
cmpsb
and
stc
clc
add
fists
roll
enter
test
sahf
int
lahf
aaa
psrad
jnp
sbb
hlt
add
cmp
cwtl
out
sahf
repz
mov
das
cli
loopne
push
mull
icebp
mov
add
loope
mov
movsl
xorb
adc
scas
jno
jbe
sbb
rorl
add
cli
mov
faddl
inc
inc
lcall
out
adc
adc
inc
das
jecxz
jb
hlt
or
add
lock
in
repnz
jnp
jns
inc
jmp
sub
pop
push
inc
sbb
jg
sub
xchg
add
xchg
int
sub
test
bound
hlt
fidivs
adc
cmp
arpl
bound
cmpl
ret
and
lcall
decl
sub
js
pop
ss
sbb
mov
or
and
add
fldl
sub
ret
push
inc
outsl
test
jecxz
mov
inc
mov
leave
clc
push
repnz
stos
subl
inc
push
sub
sub
ljmp
and
jbe
sbb
inc
mov
incl
insl
andb
stos
int3
jno
cmpsl
pop
add
push
addr16
ret
push
pop
rcrb
sbb
pusha
push
and
and
or
cmp
testb
adc
sahf
cmp
scas
std
jno
dec
jbe
add
movl
jg
hlt
jl
inc
stc
cmp
bound
stos
push
loop
repz
mov
addr16
xor
cli
cmpsb
adc
std
jmp
lea
bound
decl
jecxz
pop
sub
push
add
jmp
jmp
lret
add
shlb
ds
sub
sub
push
mov
inc
jge
push
push
pop
aad
mov
jecxz
test
pushw
mov
cli
mov
test
and
dec
call
das
clc
adc
dec
bound
inc
add
add
hlt
pushf
add
imul
cmp
or
mov
in
test
add
jno
decl
nop
pusha
scas
dec
mov
xor
out
add
mov
xchg
pop
jecxz
push
mov
inc
fisttps
in
aad
sub
sub
fdiv
xlat
mov
lea
mov
or
sbb
push
loopne
fiaddl
sbb
push
pop
cmpb
mov
cmpsb
rorb
push
fistpll
leave
mul
sbb
rclb
xchg
orl
jg
lcall
pop
push
mov
adc
mov
loope
jp
nop
les
icebp
adc
or
jecxz
or
adc
pushl
test
or
mov
xorl
jb
and
cmp
xchg
xchg
daa
cmp
add
stos
pop
mov
cwtl
fdivrs
jo
xchg
sub
lcall
xchg
dec
inc
divl
add
mov
pop
lods
insb
sti
iret
mov
or
ljmp
dec
jns
mov
cli
add
pushw
movsb
jns
push
loope
inc
mov
jg
pop
push
stc
aas
xor
cld
popf
cmpsb
add
outsl
mov
in
pop
mov
decb
xor
shll
add
arpl
add
pop
subl
mov
mov
int3
hlt
int
incl
call
or
xchg
es
xchg
lahf
bound
decl
cwtl
and
lea
insl
lret
andl
adc
cli
lcall
ror
rolb
popa
cmp
data16
jg
nop
or
arpl
iret
in
mov
loopne
sbb
lcall
mov
subb
xor
push
xchg
or
lcall
push
and
decl
lods
mov
mov
js
mov
mov
xchg
movsl
leave
test
push
arpl
mov
pop
xchg
cwtl
stc
pop
in
pop
xor
mov
std
push
add
jmp
cmpsl
cmpsb
std
push
mov
aas
add
aas
minps
ss
divl
add
jg
cmpl
add
subl
iret
mov
or
int
jg
insb
repnz
xchg
sahf
mov
pushl
sbb
lahf
adc
push
add
pushf
into
cwtl
xchg
shlb
adcl
mov
mov
mov
lds
popa
leave
icebp
cmpsb
cmp
push
or
decl
cmpsl
mov
mov
cwtl
int3
xor
into
incl
inc
aam
unpckhps
punpckhdq
sbb
hlt
decl
pop
js
arpl
xor
mov
in
call
mov
xchg
adc
add
fisttps
jmp
or
mov
cld
push
fcoms
cmp
ret
inc
mov
ja
inc
mov
lea
xchg
jle
mov
jg
cmp
xor
out
popa
mov
cli
fildll
sub
scas
sbb
js
addb
imul
cmp
loop
adc
dec
add
or
xor
in
push
mov
push
and
pop
dec
mov
push
add
inc
pop
sbb
scas
add
adc
aad
stos
xor
clc
lods
popl
outsl
das
and
pusha
sub
fsubrl
and
out
das
shlb
sub
inc
cmp
inc
add
insl
push
xchg
push
gs
out
clc
sbb
pushf
jge
add
fdivr
pop
dec
push
mov
push
popa
mov
into
scas
mov
mov
mov
mov
cmp
jle
mov
pushl
aaa
aam
inc
push
xor
lock
outsb
lret
pop
mov
in
mov
adc
pop
and
insl
in
sbbl
jo
das
inc
xchg
insb
out
jle
sar
lahf
mov
daa
shl
sbb
jnp
dec
mov
add
in
cmp
dec
enter
xchg
sahf
mov
cmc
out
hlt
jmp
mov
loop
xor
fimull
or
movsb
sti
push
inc
loopne
cld
fldl
or
pop
imulb
adc
enter
scas
into
push
add
imul
xor
xchg
ljmp
daa
mov
fmuls
loopne
rolb
xor
sbb
sub
les
jg
outsl
or
stc
pop
jae
in
push
in
add
aaa
es
stos
in
adcb
jno
dec
sub
ja
clc
jg
out
xchg
mov
dec
idivl
inc
inc
pusha
in
and
clc
mov
dec
lock
fisttps
cs
sbb
ss
leave
fistl
inc
add
nop
cmp
sub
int3
inc
push
repnz
scas
adcb
add
pusha
in
sahf
mov
xlat
or
push
push
add
push
sti
or
push
cwtl
rol
cmp
addl
add
ret
add
cmp
pop
sbb
inc
lds
in
ljmp
jl
cli
ljmp
add
xor
dec
add
mov
mov
fldl
sub
jmp
ret
adc
jg
xor
ljmp
xor
lcall
rolb
sbb
pushf
mov
dec
mov
dec
lret
lahf
push
mov
mov
and
xchg
outsl
add
pop
pop
cmp
lea
rolb
loope
mov
popa
or
in
std
dec
inc
mov
filds
dec
add
mov
xor
ret
cmp
lcall
push
pop
pop
and
jp
pusha
push
sub
leave
inc
add
inc
loopne
arpl
and
pop
mov
mov
pop
xor
ljmp
ret
test
add
gs
test
inc
fcmovb
hlt
decl
loope
add
outsl
popf
push
cmp
jmp
pop
or
xchg
xlat
push
mov
clc
cld
fcomip
fisttpl
fcmovne
dec
add
test
gs
add
loope
lret
dec
sub
jmp
and
push
aaa
fcomi
sbb
pusha
push
cmp
xchg
cmpsb
es
and
or
xchg
adc
xchg
sub
into
cmp
jno
push
decb
hlt
inc
inc
adc
pop
push
xchg
ja
and
lods
mov
adc
mov
mov
stos
add
dec
or
pop
cmp
pusha
xor
rcll
mov
cmp
movsb
xor
shr
inc
adc
mov
push
clc
enter
pop
push
add
sub
call
lock
sub
mov
leave
jecxz
dec
stc
stos
pushl
mov
adc
jge
pusha
or
cli
ljmp
mov
fcmove
andb
mov
mov
into
lods
hlt
das
adc
pushf
je
repz
mov
adc
xchg
pushl
fcomps
inc
pop
jb
mov
subb
loop
pop
cmp
push
mov
js
xor
outsl
stos
dec
cs
xor
aad
jle
sub
sbb
into
lret
mov
mov
les
cld
dec
inc
loopne
repnz
movsb
inc
or
fcos
and
pop
les
shlb
sub
jmp
pop
cwtl
push
or
scas
inc
xchg
cmp
js
outsl
subb
test
mov
loopne
mov
add
jo
fwait
or
jns
pop
rcr
sub
test
push
imull
xchg
mov
or
mov
insb
repnz
mov
inc
jbe
cmpsb
adc
mov
fldenv
in
clc
inc
repnz
int3
ljmp
decb
ljmp
icebp
lcall
cmp
nop
pop
aam
out
adc
xchg
int3
test
jmp
xchg
push
pushf
dec
sahf
icebp
fdivl
or
sbb
add
fdivrs
adc
cmp
packuswb
clc
lcall
mov
cmp
aas
add
xchg
addr16
fsincos
ljmp
inc
mov
sbb
addr16
lcall
sbb
mov
sbb
je
call
lock
ljmp
incb
jp
jne
xchg
aas
fcmove
testl
fcoml
imul
push
aam
sar
insl
loopne
dec
lea
cmpsl
mov
jns
dec
in
push
jno
call
data16
outsb
pushf
addl
fildl
sbb
add
filds
fsubs
loop
sti
test
mov
mov
lret
sbb
add
push
fisttps
dec
push
int
rorb
pop
push
inc
adc
dec
adcb
mov
je
push
push
pop
and
enter
inc
jl
stc
sbb
inc
mov
testl
aad
dec
jnp
and
rorb
movsb
pop
and
dec
sbb
cmp
ffreep
jae
add
popa
cli
pushl
lock
mov
ss
ror
int
subb
cmp
aam
pop
outsb
add
dec
pop
mov
test
sub
cmp
aaa
add
push
lea
lds
and
push
xchg
mov
dec
paddw
jg
push
shlb
inc
fbstp
and
mov
xor
cmp
xchg
inc
mov
aaa
cld
in
pop
cmp
or
add
fwait
test
dec
leave
ja
push
inc
mov
clc
or
aaa
pop
ljmp
icebp
and
sbb
adc
pushl
lock
add
push
arpl
mov
clc
stos
aas
pop
outsl
call
inc
out
mov
lret
movsb
xchg
cwtl
push
clc
push
inc
sbbl
loop
filds
dec
fstpt
xorl
incl
arpl
in
adc
jp
ss
hlt
push
enter
push
cld
flds
rorl
popa
push
out
aam
pop
mov
mov
and
mov
call
pusha
jo
add
jns
lcall
add
adc
fstps
push
nop
loope
repnz
or
pusha
push
mov
shrb
mov
call
push
xor
jb
lods
mov
ret
sub
ret
or
add
add
pushl
mov
cwtl
push
aaa
cmc
mov
cmp
lahf
popa
pushf
into
sbb
lea
rcr
ljmp
xchg
and
ficoms
dec
and
fists
sbb
jo
adc
popa
andb
cmp
add
sbb
adc
lock
push
push
xor
cmp
out
scas
fsubrp
stos
mov
adc
ljmp
out
addb
mov
scas
xor
lds
inc
jb
add
mov
addb
adc
adc
xchg
mov
dec
dec
js
mov
mov
popf
call
jne
scas
adc
data16
pop
or
fnstcw
lret
ds
je
xchg
popa
add
mov
cmp
es
add
or
scas
pop
push
xchg
fiaddl
test
inc
ja
cmp
or
pop
mov
out
adc
bound
mov
and
cmpsb
scas
leave
push
adc
add
lock
sahf
dec
xor
or
clc
or
and
mov
or
scas
dec
test
xor
jg
mov
xchg
xchg
cld
adc
push
mov
call
shll
ss
shlb
dec
xchg
add
sub
ret
das
mov
mov
dec
push
insb
fdivrp
xor
cmpsb
or
stc
xchg
ljmp
call
mov
movsb
sub
dec
or
lahf
stos
fdivs
ljmp
fiadds
ljmp
adc
addr16
loope
test
outsb
add
or
sbb
pop
repnz
push
jmp
in
add
inc
ljmp
add
xor
xor
and
loopne
inc
fldl
and
xchg
mov
or
inc
push
push
mov
add
outsl
cmp
je
call
mov
lcall
mov
ljmp
sub
push
cld
dec
inc
push
sub
xchg
inc
xor
clc
or
stc
faddl
loope
inc
in
mov
sbb
ljmp
lds
and
mov
inc
jp
pop
inc
iret
push
mov
mov
and
cli
cmp
mov
mov
sbb
dec
adc
xchg
cli
and
es
imul
cs
cld
imul
aam
and
mov
ds
xchg
fimull
mov
ret
dec
jp
mov
std
mov
mov
inc
push
arpl
pusha
out
xchg
fwait
loopne
mov
xchg
mov
adc
mov
shlb
fs
mov
add
push
addb
cmp
push
sarl
jle
fimull
cld
mov
push
dec
inc
sbb
jmp
dec
sbb
testb
pop
adc
roll
sub
ret
jbe
int3
data16
cmp
ficomps
mov
add
push
mov
pusha
or
adc
adc
mov
imul
ds
mov
mov
pop
push
cmp
mov
jmp
sub
flds
sbb
loope
loope
fildll
jmp
test
push
mov
jae
mov
arpl
sub
shlb
adc
leave
lock
enter
add
ret
fdivl
cmp
ljmp
and
mov
lock
xchg
sbb
cli
ja
out
xor
rorb
nop
add
pusha
pop
rcl
add
and
xchg
pop
aas
sbb
lds
clc
mov
ret
jl
sub
insl
imul
test
mov
add
xor
bound
jmp
loop
xchg
aam
jl
sub
cmpsl
dec
cs
mov
mov
lret
pop
pop
push
xor
jmp
sbb
push
dec
or
dec
xchg
mov
cld
fwait
aam
sti
ds
imul
xchg
lcall
xor
jp
lock
jbe
lcall
xor
loope
in
and
lods
pushf
ficompl
adc
jl
std
or
or
pop
fidivrs
pop
cld
ljmp
adc
lcall
or
xchg
rcr
and
adc
mov
pushf
push
arpl
xchg
sub
and
mov
cmp
dec
ret
sub
into
and
sbb
js
sarb
add
pop
iret
ljmp
es
adc
adc
mov
lahf
loop
xchg
aaa
pop
mov
in
ljmp
ss
add
jecxz
adc
decl
inc
push
mov
jg
mov
push
das
and
fcoms
lods
mov
sub
or
iret
mov
push
or
add
repnz
test
mov
pusha
xchg
lds
mov
sub
push
cltd
mull
dec
inc
popf
cli
arpl
cmp
movsl
mov
inc
fimull
mov
sbb
xchg
mov
cli
jo
sbb
jnp
sar
dec
or
dec
push
test
ficompl
subb
push
xchg
aam
in
mov
add
mov
dec
xor
mov
decl
ja
add
push
shl
add
es
add
test
outsb
mov
cmp
nop
pop
std
ss
orb
adc
hlt
sub
out
mov
jne
adc
jne
imul
loopne
aad
adc
das
mov
mov
popl
jne
xor
mov
repnz
gs
out
push
cmp
mov
lcall
negb
inc
mov
adc
js
jg
mov
pop
stos
int
sarl
addr16
imul
icebp
cmp
sub
jecxz
cmp
and
fcmovnb
cld
mov
pop
sarb
push
or
int3
or
stc
or
icebp
ljmp
mov
ret
inc
call
lods
add
shrl
mov
arpl
push
cld
dec
add
pop
clc
mov
cmp
adcb
inc
lea
stos
xchg
incl
popf
xchg
scas
int3
sbb
dec
push
das
or
or
out
lock
mov
ret
push
stos
std
aad
sahf
cmp
loop
addb
fldcw
icebp
incl
dec
lret
dec
addb
data16
movl
mov
aas
es
addr16
mov
rclb
test
and
dec
call
sahf
pop
outsb
loope
fistps
imul
jg
dec
aas
testl
inc
lock
push
and
mov
mov
jecxz
add
cltd
sub
fnstcw
jmp
ss
add
inc
cwtl
and
fdivp
testb
sub
sub
xchg
mov
rcll
ret
dec
int
rcll
je
jg
jle
pop
mov
dec
fdivrl
mov
xchg
adc
mov
or
pop
sbb
call
cli
int3
sbb
jg
orl
sub
loop
and
and
movsb
and
jbe
pop
or
das
mov
popa
outsl
xchg
add
and
fwait
sub
cmp
andb
xchg
jbe
and
mov
xor
shrl
xchg
mov
pusha
add
pop
int
loopne
std
popa
popa
movb
inc
gs
mov
mov
imul
fildl
mov
das
mov
pop
aad
pop
int3
nop
cmp
and
cli
fidivs
jbe
sbb
jp
call
js
insl
scas
lret
mov
out
ret
jecxz
iret
add
pop
xchg
add
adc
fnop
inc
ror
push
jp
sub
cli
mov
push
icebp
add
jns
mov
stos
enter
lret
js
ds
pop
sbb
test
jle
cmp
mov
dec
test
mov
test
stos
jo
pop
adc
mov
filds
xchg
xor
adcb
mov
mov
cmp
pusha
enter
pop
hlt
push
jne
imul
aaa
ret
xor
xor
cli
sarb
out
popf
jne
cli
ljmp
push
sbb
adc
movsl
or
push
mov
xor
mov
hlt
inc
jno
pop
push
xchg
mov
and
push
push
mov
adc
loope
cwtl
ficomps
sbb
mov
inc
mov
pop
add
jge
mov
shlb
jge
pop
sub
sarl
add
add
add
adc
repz
dec
insl
xchg
jnp
xorb
pop
push
and
insl
in
arpl
pushl
jo
clc
loope
ljmp
push
shll
sbb
or
adc
sahf
cltd
lret
or
cmp
mov
jo
pop
cmp
xor
mull
cs
gs
mov
or
pop
adc
jp
cmp
sbb
xchg
cmp
jl
imul
jg
sahf
lea
cmp
xchg
stc
fdiv
cmc
data16
repnz
dec
jmp
pop
call
and
cmp
scas
clc
fbstp
adc
sbb
imul
mov
mov
mov
mov
mov
mov
jbe
xchg
or
mov
cmpsb
mov
inc
push
sub
mov
std
call
sub
adc
dec
int
nop
jg
cld
jbe
xchg
add
loopne
loopne
roll
incl
mov
stos
dec
add
ljmp
stos
fwait
mov
sahf
or
or
cmp
jbe
daa
cmc
mov
mov
mov
push
pop
adc
add
and
test
sbb
int
cs
mov
jge
inc
jg
dec
aas
add
mov
and
mov
test
movsb
mov
fbstp
mov
ficomps
xchg
or
call
arpl
add
imul
and
xor
in
add
mov
subb
lahf
mov
mov
ret
push
test
nop
xchg
push
cli
faddl
mov
je
aad
push
mov
inc
or
iret
sub
inc
xor
pop
push
lods
pop
push
push
cmp
popf
addr16
decl
dec
jg
add
dec
inc
cld
arpl
addb
pop
mov
rcrl
push
add
push
jmp
das
push
xor
push
addl
lcall
sti
inc
sub
mov
lds
sub
mov
mov
add
sub
add
pop
stos
gs
fisubl
push
or
dec
mov
jp
aaa
sbbl
clc
ljmp
mov
nop
arpl
addb
mov
sub
mov
cmpsb
das
js
xchg
fdivs
jmp
ljmp
cli
mov
lret
fdecstp
pop
es
push
mov
mov
icebp
decb
and
or
push
incl
sti
cmp
outsl
push
jb
push
or
cmp
xor
dec
lock
push
mov
and
es
std
ja
inc
cld
push
adc
ljmp
rclb
arpl
or
clc
mov
mov
data16
add
subb
lahf
orb
int3
lds
and
pop
sub
lcall
xchg
sbb
clc
mov
sbb
leave
idiv
or
int
mov
repz
or
mov
mov
and
and
mov
fwait
stos
push
dec
xor
int3
aam
rclb
bound
les
cltd
mov
insb
cmp
mov
adc
incl
popa
popa
push
add
pop
clc
pop
es
mov
xchg
add
lock
lahf
imul
sbbl
xchg
outsb
add
mov
sub
add
movsl
lods
lahf
add
inc
fisubs
cmp
subl
fisttpll
jae
push
pop
cli
sub
mov
hlt
idiv
mov
jp
aam
je
aas
in
cmpsb
lcall
lcall
push
test
mov
mov
mov
jl
inc
ljmp
mov
add
test
pop
pop
fistl
cmp
pop
xor
pop
fwait
sarb
xlat
decl
push
out
mov
out
and
sub
add
dec
int
iret
and
and
aaa
test
pop
sbb
dec
xor
mov
repnz
test
loopne
xchg
dec
scas
push
add
pop
ret
callw
adc
and
popf
iret
out
xchg
xlat
jbe
data16
jno
pushl
loopne
test
xchg
stc
pop
or
xchg
dec
lods
add
xchg
mov
fs
cli
cwtl
push
xor
mov
mov
adc
mov
adc
js
or
popf
push
movsl
jbe
pop
dec
aaa
cwtl
sub
or
cltd
lods
clc
ljmp
mov
push
hlt
jne
out
je
mov
inc
jne
or
das
inc
ss
and
les
ja
sarl
ss
aad
js
inc
xchg
jo
jle
aas
or
inc
movsb
imul
stos
or
inc
fbstp
add
mov
lods
mov
filds
pusha
popf
pop
add
mov
mov
scas
adcb
dec
mov
rol
mov
lea
add
loop
icebp
inc
int3
sub
sbbb
push
push
out
add
insb
jb
cltd
shlb
cmp
mov
cld
outsl
add
inc
add
jl,pt
in
and
sbb
jge
subl
xchg
fs
sbb
movl
xchg
jb
sub
test
call
jns
xlat
enter
ds
scas
movsb
add
push
sub
test
test
hlt
mov
stos
mov
aas
sbb
sub
or
or
gs
cwtl
lret
or
xor
shl
fucomi
fisubrs
js
icebp
scas
fcomip
icebp
dec
xorb
mov
push
fcompl
bound
sahf
mov
lock
icebp
push
or
decl
dec
test
mov
hlt
or
cli
and
shl
aam
gs
pop
dec
push
daa
mov
ss
mov
xchg
call
aam
or
std
mov
add
add
and
mov
stos
sub
xchg
add
aas
aam
cmp
pop
fiaddl
dec
jnp
imul
xchg
jge,pn
jmp
xchg
fmull
loopne
rcl
inc
in
aaa
push
mov
fistps
outsl
pusha
cmp
lret
sbb
fabs
push
aas
or
cmp
jl
enter
xor
fldenv
cmp
xorb
sbb
mov
outsl
add
and
sbb
sub
pop
sbb
mov
je
pusha
jns
sbb
adc
enter
imul
inc
cmp
dec
pushf
xor
cld
or
sar
and
inc
lods
jo
sar
add
pushf
push
mov
dec
aaa
gs
mov
xorl
or
xchg
adc
pusha
into
and
pop
adc
push
push
xchg
or
sub
xchg
xor
fcomip
lds
movq
fisttpll
xor
sbb
xchg
es
mov
pushl
push
sbb
fdiv
insl
and
outsl
push
fwait
mov
push
pop
fst
pop
ret
mov
inc
mov
pop
test
aaa
mov
pop
popf
inc
insl
cli
adc
add
pop
add
in
push
rolb
and
cmp
imul
rclb
add
or
and
pushl
jecxz
movb
fcoms
xlat
outsb
cmp
or
push
sbb
bound
jo
pop
adc
xlat
dec
mov
shr
xchg
movsl
mov
or
xchg
cmp
rcrl
sbb
scas
flds
jne
imul
xorb
fstpl
icebp
pop
dec
fimuls
dec
mov
mov
push
dec
lds
jo
fcomi
dec
adc
lock
daa
and
mov
ss
sbbl
dec
stc
cmp
pop
ds
ret
mov
adc
xlat
insb
divl
lock
fucomip
or
xor
push
std
dec
inc
mov
cld
sub
mov
shl
adc
add
pop
mov
push
inc
xlat
mov
ljmp
push
mov
and
add
xchg
mov
cmpsl
add
inc
cli
inc
xor
ds
adc
push
or
cmp
add
jo
inc
add
sbb
cli
into
jl
mov
aas
sbb
cmp
imul
jp
jl
stc
sbb
imul
inc
sub
mov
adc
pusha
jmp
or
xchg
jbe
jmp
lods
into
sbb
shll
dec
clc
mov
jo
out
mov
add
lahf
push
jne
loope
sar
inc
test
lahf
call
ret
sub
test
push
sub
pop
add
lods
cs
push
jmp
ss
test
sub
jmp
sar
and
sub
pusha
mov
stos
cmp
or
push
out
and
sbb
push
into
inc
bound
jle
das
add
popa
fsubl
pop
mov
test
sahf
fs
lods
push
mov
mov
inc
pop
push
fldl
adc
pop
xchg
inc
fnstsw
xchg
ret
pop
outsl
fadds
jg
xor
addb
sub
and
in
cs
add
push
xchg
mov
daa
fcoml
ss
add
adc
sbb
cmp
sbb
add
sbb
orb
lcall
push
push
and
stc
adc
cs
call
add
pop
add
jb
cmpsl
adc
popa
jmp
mov
lods
lret
push
adc
adc
std
add
lea
aas
push
inc
std
fbld
mov
enter
fwait
fwait
cmp
pop
push
dec
int3
pop
das
test
hlt
cwtl
add
out
sub
adc
xchg
std
mov
call
jle
enter
inc
ljmp
or
or
ja
clc
dec
xor
or
rol
pop
add
or
add
outsb
andl
nop
sub
insb
push
sub
es
clc
sub
aad
mov
jo
ljmp
jg
push
and
or
enter
adc
imul
test
data16
sub
pop
es
cmc
adc
jle
hlt
adc
fcomip
mov
adc
cmp
gs
test
add
xchg
loopne
push
mov
pop
call
pop
mov
xor
ret
mov
adc
enter
mov
dec
or
loop
cwtl
inc
roll
mov
jno
add
lcall
incl
add
scas
inc
pop
in
jle
test
das
cli
jmp
dec
int3
dec
movl
sbb
cmp
gs
fsubr
xor
loope
lcall
call
sbb
adc
cmp
inc
ficoms
inc
cmp
or
cmp
lods
call
adc
cmpl
adc
add
mov
dec
lods
or
and
xchg
inc
outsb
vdivps
fadds
call
cmpsl
in
mov
pusha
and
push
pop
hlt
fsubr
add
incl
xor
push
sahf
leave
and
add
mov
popf
bound
mov
hlt
jl
ds
push
xchg
and
add
cmp
jae
add
mov
mov
pusha
addl
rcl
popf
lock
or
push
inc
call
push
add
test
out
add
add
and
ret
rolb
fmull
jl
popf
loop
int3
and
mov
xor
or
shrb
cmpsb
lock
mov
push
aam
add
mov
aaa
pop
icebp
outsl
nop
xor
jno
mov
jne
insl
cmp
loopne
ja
sar
or
data16
xchg
in
jg
icebp
enter
fstl
jp
pop
lcall
arpl
or
lcall
fwait
ds
xchg
in
and
push
js
shrb
mov
ret
fs
adc
into
lods
push
fsubrl
push
in
fists
cld
inc
mov
adc
ret
jne
fbld
lods
jo
aaa
cld
das
rcrb
ret
lea
and
jb
cltd
push
add
rolb
jle
pop
outsl
ret
ds
cmp
test
inc
stc
or
pop
xor
cli
xchg
push
lret
sbb
cmc
addb
and
mov
inc
out
rcrb
sarl
cld
aaa
loopne
out
sbb
loop
subb
lods
or
add
pop
shrb
call
and
and
push
cli
stos
out
decl
pop
test
xchg
xchg
jmp
add
sbb
fisttps
xor
adc
repnz
add
push
cld
incl
mov
addb
adc
add
popf
add
add
fwait
jmp
arpl
adc
cltd
aad
call
mov
sub
xor
outsl
aas
popf
mov
nop
inc
call
pop
orb
sbb
pushf
xor
mov
movsb
lods
add
dec
lret
push
xchg
arpl
inc
cld
idivb
mov
xor
std
inc
sub
inc
clc
pop
xchg
push
dec
shll
fisubrl
incl
outsb
mov
mov
adc
fldl
or
shrl
cli
push
fildll
pop
or
sub
adc
mov
adc
mov
incl
xor
les
jns
xchg
movsb
out
mov
inc
test
sub
lcall
stos
mov
pop
pop
or
or
pop
mov
adc
jg
cmp
adc
outsl
adc
inc
push
mov
hlt
add
bound
sub
push
mov
popa
mov
jb
mov
jmp
push
or
sbb
pop
xor
mov
adcb
aad
xor
fsubrp
rolb
test
mov
cli
incl
clc
add
mov
and
xchg
sbb
or
mov
lods
nop
jo
jno
pop
test
push
dec
push
jg
and
test
or
mov
imul
icebp
add
sub
and
dec
add
std
xorl
clc
incl
xor
push
scas
or
pushf
xchg
mov
mov
sbb
pushl
inc
outsb
pop
test
sub
mov
push
adcl
aam
pop
ret
mov
lds
adc
loope
pop
mov
fidivs
clc
adc
mov
decl
sbbb
add
mov
js
push
sub
jmp
daa
xlat
ljmp
scas
push
or
inc
cmp
enter
lock
mov
divb
mov
push
jno
notb
adc
ror
lods
push
jge
mov
sub
pop
or
ja
mov
aaa
pop
add
cwtl
out
movsl
negl
nop
dec
mov
inc
or
push
in
add
out
ljmp
and
cvtpi2ps
adc
shll
jb
mov
cltd
jp
bnd
lock
xor
lock
mov
cmp
hlt
mov
pop
add
or
inc
mov
jo
fbld
mov
insb
ss
or
stos
js
mov
sub
imul
mov
push
adc
xlat
popa
pop
jle
xchg
std
xchg
rclb
xchg
and
pop
and
sti
aaa
loope
mov
add
cmp
mov
cs
addr16
call
icebp
sbb
push
pop
out
inc
cmp
decl
lds
xchg
or
or
enter
lods
mov
xchg
shr
add
das
nop
push
lods
lcall
insb
mov
add
aaa
sarb
and
xchg
push
mov
add
mov
les
sub
xchg
cwtl
pushf
sahf
repnz
mov
lret
push
fxtract
jno
clc
mov
push
mov
mov
lods
pop
mov
imul
adc
pop
push
mov
add
pop
mov
sbb
insl
xlat
xor
push
pushl
add
mov
add
aam
pop
sahf
add
xchg
fstps
out
add
in
stc
inc
jns
jecxz
sbb
jmp
or
hlt
jmp
orl
and
rolb
cld
in
hlt
dec
sub
or
cwtl
jg
jle
adc
jecxz
adc
sbb
movsb
xchg
or
test
and
mov
lds
cmovo
out
ja
loop
iret
push
mov
push
outsl
adc
decl
pop
mov
push
mov
mov
sub
test
xor
lcall
jle
inc
jg
jo
dec
ja
dec
adc
jp
jge
stc
insb
add
outsl
xchg
cs
std
push
pop
orl
push
mov
inc
adcl
jnp
fimull
aam
in
dec
push
rolb
incl
fmulp
filds
lods
mov
test
lahf
repnz
mov
pop
add
frndint
mov
lcall
add
push
add
lds
push
add
jbe
loop
xchg
pop
stos
pop
movsb
in
and
cmpsb
sbb
push
jmp
jmp
aad
sub
es
iret
add
add
movl
lret
icebp
dec
pop
xor
pusha
or
lahf
cmpsb
adc
pop
inc
adc
push
stos
fsub
cld
push
add
dec
lods
pop
cmpsb
cltd
sub
jno
sbbb
push
mov
jge
or
jecxz
ret
mov
and
add
or
mov
fisttps
sub
cld
pop
or
repnz
cmp
fsubrs
add
lret
hlt
iret
cmp
clc
aaa
push
inc
mov
mov
mov
push
add
leave
mov
or
and
push
clc
push
aam
rcrb
mov
cmp
mov
pop
out
push
mov
dec
ret
stos
jecxz
mov
mov
outsl
les
dec
cltd
mov
leave
pop
cld
sub
pop
push
xchg
push
pop
iret
or
test
or
loopne
inc
dec
out
aaa
sub
incl
mov
ja
ja
adc
nop
test
jl
push
push
pusha
jbe
insb
jmp
jg
mov
push
mov
jae
jo
jo
pop
dec
ljmp
cmp
lock
mov
dec
shlb
pop
push
add
push
loopne
push
mov
shlb
xlat
ljmp
mov
sbb
repz
xchg
outsb
pop
pop
inc
add
cmpsl
mov
adc
pop
out
ret
inc
popa
popf
movsl
mov
cmp
les
jne
adc
fiaddl
xchg
mov
mov
xorl
shrl
popa
in
je
pop
add
xchg
or
jbe
js
pop
js
test
cld
inc
out
insb
jp
mov
scas
ss
repnz
jo
mov
xchg
push
mov
and
adcb
lock
fdivrs
cmp
mov
jge
movsl
pop
cmp
std
jg
sub
mov
jp
add
push
sub
sub
incl
jns
xchg
jne
enter
jb
add
into
and
call
imul
aad
insl
sub
xchg
add
push
scas
inc
insb
decl
rclb
mov
sbb
or
repnz
sbb
xor
xchg
sbb
add
jo
sahf
ds
add
movsb
lock
push
es
aas
loop
or
add
adc
stc
or
xor
jmp
xchg
das
sub
lcall
add
add
int
and
fwait
cld
sbb
stos
loopne
pop
aaa
lods
ds
or
push
xchg
pop
add
call
loop
mov
pop
cwtl
sub
rcll
mov
out
mov
cli
xchg
loop
sub
jg
jae
pushf
sbb
add
and
js
test
bound
push
pop
or
jns
pushf
cmp
pushf
or
jg
push
clc
pop
jns
push
xchg
jbe
and
inc
lea
adc
call
xchg
icebp
sub
or
jl
std
mov
pushf
in
add
ljmp
jge
addr16
je
stos
mov
adc
stc
fstl
dec
call
xchg
test
inc
pop
push
or
mov
xchg
aad
dec
fnstcw
movsb
fisttpl
enter
and
mull
nop
and
pop
pop
adc
sbb
sbb
push
sbbl
inc
ss
aad
mov
jg
cs
sub
pop
push
inc
or
jmp
fimull
popa
push
push
dec
inc
add
test
xor
pop
and
cs
arpl
and
xchg
data16
cmc
sbb
pusha
shlb
decl
sahf
sbb
mov
gs
adc
rclb
cmpsb
sub
in
jmp
xchg
dec
frstor
dec
popa
aad
imul
mul
xor
cmc
movsb
add
adc
add
insl
and
js
cltd
jb
out
cli
adc
mov
pushf
test
add
lds
jae
dec
push
cld
fwait
mov
jge
lods
mov
pop
mov
xor
xor
and
jns
push
sub
pop
mov
sub
adc
imul
mov
jo
cmp
movsl
repnz
inc
ljmp
scas
adc
imul
xchg
adc
bound
push
les
pop
sub
xor
cmp
dec
xchg
into
sub
inc
adc
adc
xchg
dec
and
pop
push
add
add
addr16
xor
push
outsb
cmp
inc
sbb
jmp
push
addr16
sub
je
lret
lock
push
inc
test
or
aam
push
dec
dec
add
fcmovu
xorl
sbb
push
nop
loopne
inc
or
or
dec
ret
notb
test
rolb
ss
sbbb
adc
sub
jne
push
lret
pop
and
mov
aad
lcall
incl
pop
push
mul
subl
sbb
add
xchg
and
out
aas
clc
pop
clc
pop
pop
xchg
pop
fucomi
sub
sbb
scas
sbb
fcoml
sets
shll
mov
or
call
mov
xchg
int3
int
shlb
decl
ret
rorb
adcb
decl
or
push
mov
inc
incb
mov
pop
lcall
xor
add
push
or
test
aam
jmp
add
cmp
adc
or
mov
sbb
fsubl
mov
inc
sub
mov
aam
push
fbld
dec
push
push
jmp
sub
das
and
out
jae
les
fnstsw
shll
lret
sarb
shrb
add
pop
cs
dec
cmp
aam
mov
sub
jg
outsl
xchg
std
leave
mov
int3
idivl
inc
les
pop
std
fildll
aad
lret
movsl
scas
xchg
bound
jecxz
insl
ret
adc
jl
decl
or
add
add
sub
je
js
cmp
mov
cmpsb
pusha
jle
lock
ret
fldenv
mov
loopne
lahf
fmull
sbb
leave
mov
cli
mov
shll
pop
ret
or
or
and
cmp
fstpt
jnp
stos
and
add
adc
fwait
std
incl
iret
rolb
xor
xchg
jp
loop
cmpsl
adc
fcoms
lock
and
decl
push
xor
stos
push
jecxz
imul
xor
sub
sbb
jmp
in
loope
jge
rol
in
push
and
adc
loope
mov
xchg
push
nop
xor
cmp
push
jnp
pop
ljmp
fcompl
inc
das
adc
jg
dec
ja
decl
jns
add
xchg
loop
pusha
sahf
shll
movl
and
add
and
mov
jge
cwtl
jns
push
cwtl
jae
jo
pop
sar
fimull
rcrb
or
add
inc
shll
fwait
add
pop
fnsave
clc
mov
dec
sbb
dec
jmp
addr16
ret
aaa
cmp
call
adc
cltd
out
and
jp
xchg
ss
adc
dec
out
cmp
jo
and
xchg
cli
call
jae
xor
or
add
stos
inc
lock
or
inc
adc
repz
mov
pushl
ljmp
cwtl
popa
lods
mov
sub
fsubl
jo
add
cmp
scas
out
pushf
xor
mov
jl
xchg
xchg
or
dec
mov
pop
cmpsl
dec
lock
mov
jl
cltd
pop
adc
idivb
jno
dec
outsl
jle
daa
or
cmp
fsubl
adc
sbb
dec
leave
sub
mov
pushl
pop
js
pushf
dec
cmp
imul
mov
mov
pop
xor
aaa
ret
push
or
mov
in
inc
ss
sub
dec
dec
ss
push
add
bound
pusha
sbb
add
out
fbstp
pop
jns
cmpsb
shlb
sub
fs
inc
pop
cmp
test
in
inc
lds
mul
push
sti
std
adc
test
ljmp
shl
and
mov
in
and
inc
cmpsb
hlt
decl
mov
ret
out
inc
jnp
stos
sub
ljmp
fdivs
stos
push
daa
cmpsl
jl
jno
test
mov
popf
stos
or
loop
adc
dec
out
add
pop
sti
fcomip
lcall
or
add
icebp
bound
nop
fs
lcall
dec
lcall
insb
jle
sbb
lahf
shrl
xor
xchg
subl
add
jecxz
popf
dec
ret
push
lret
cmp
xorb
ds
das
mov
pop
ret
sub
inc
nop
lods
jecxz
sub
push
lret
test
inc
mov
orb
nop
in
jle
cld
pop
mov
or
and
nop
xchg
sbb
hlt
cmpsl
adc
scas
int
jecxz
sub
lahf
pop
or
fisubl
scas
cmp
inc
fs
mov
roll
xor
pop
jne
cli
decl
roll
or
nop
sub
pop
outsb
js
push
cld
jmp
out
sbb
inc
fwait
mov
cmp
dec
inc
clc
bound
xor
iret
sub
add
cmp
data16
sub
mov
jmp
jle
xchg
push
add
loopne
push
clc
das
xchg
push
inc
adc
call
faddl
out
lods
sbb
push
aam
addr16
lea
dec
imul
imul
push
mov
out
cld
or
or
push
push
jne
push
fidivl
mov
or
inc
inc
add
je
jo
jo
and
dec
dec
ljmp
mov
subb
imul
fidivs
hlt
jo
pop
fneni(8087
add
sbb
and
jg
jg
sub
add
inc
scas
push
pop
adc
imul
nop
testb
xor
insl
cltd
jnp
mov
das
jbe
mov
ss
lods
sub
nop
pop
insb
ljmp
iret
sarl
or
int3
fcmovnu
bound
subb
add
ja
jg
mov
add
push
dec
dec
lret
ss
pop
cmpsl
push
outsb
aas
cmpsl
lock
pop
adc
push
jo
aad
lret
cmpsb
dec
dec
les
pop
aam
fsubrl
fcomip
pop
push
mov
movsb
and
pop
dec
sbb
loopne
dec
ljmp
lock
into
sahf
test
outsl
insb
cltd
addb
test
xor
and
dec
in
inc
sub
xor
xchg
popf
inc
pop
outsb
add
mov
arpl
aad
outsb
cld
das
xor
not
add
mov
leave
push
add
push
dec
dec
jmp
fwait
mov
clc
sub
fmull
shl
nop
clc
ds
sahf
in
xchg
outsb
sub
or
mov
add
push
adc
sub
fcoms
sbb
sbb
push
pop
add
jae
or
loop
je
sub
sar
sub
inc
pop
cmpsl
dec
sbb
adc
pop
lock
das
jne
aas
pop
inc
pop
sbb
ds
out
test
adc
cmp
popa
xor
mov
pop
inc
call
hlt
mov
lret
mov
xchg
jmp
subb
leave
adc
inc
xchg
adc
aad
add
xor
or
push
cwtl
stos
xor
insb
lret
aas
mov
pop
pop
push
add
and
push
cmp
test
add
xor
sbb
mov
mov
dec
add
add
cmpl
or
fmull
add
lods
sub
lcall
cmp
lds
mov
xchg
in
int3
or
jg
fisttps
pop
mov
mov
imul
add
mov
nop
push
add
adc
jg
mov
mov
nop
and
adc
jmp
incl
out
add
insb
inc
inc
lock
sbb
in
lods
mov
push
xchg
int3
mov
and
jo
sbb
dec
add
icebp
fstpl
cmp
pop
mov
rep
adc
lods
nop
xlat
mov
inc
ret
sbb
incl
push
sub
pop
je
mov
rorl
icebp
mov
out
push
or
fisttps
inc
cli
inc
movsl
popa
fdivl
or
push
andb
inc
mov
push
xor
sub
dec
dec
inc
pushl
inc
decb
mov
sub
mov
repz
in
stos
lds
mov
pushf
fidivrl
jg
mov
adc
adc
jecxz
sbb
mov
push
lods
popf
xor
js
dec
pushfw
mov
lcall
xor
pop
xor
dec
movb
enterw
idiv
mov
lea
int3
lahf
hlt
rcrb
movq
dec
clc
orps
sub
xchg
cltd
rolb
or
ja
outsl
mulb
adc
mov
lods
outsb
ret
call
sbb
add
rcrl
mov
insl
std
fbstp
add
xchg
mov
fildll
lcall
fmull
adc
cld
mov
fisubrs
sbb
add
sbb
cmp
fmuls
lcall
lcall
add
lock
add
enter
sub
js
xchg
lahf
inc
imul
push
int3
and
adc
stos
mov
add
bound
sti
and
pop
pop
jmp
adc
xchg
fsubrp
insb
inc
mov
decl
test
add
pop
mov
xor
test
pop
or
jnp
xor
mov
pop
lret
stc
push
bound
jmp
ret
sar
add
xchg
out
mov
pop
hlt
mov
or
mov
aas
push
jbe
sub
pop
lock
sbb
sbb
notb
inc
test
mov
cmp
addl
mov
lret
mov
ss
ss
aad
and
xchg
xor
inc
std
sbb
mov
pop
adc
hlt
lcall
fwait
test
aam
jbe
adc
jo
inc
dec
or
xchg
jp
incl
sub
neg
ja
mov
or
mov
sub
pop
cmpsb
jle
icebp
pusha
xchg
loopne
xlat
xor
adcl
inc
icebp
or
mov
mov
les
rcrl
adc
mov
fsubr
repnz
jne
bound
and
push
jnp
pop
hlt
inc
arpl
aad
iret
jo
mov
in
mov
push
jg
lret
adc
add
pusha
insl
scas
movl
lret
or
clc
js
mov
lds
or
test
dec
addr16
addr16
pushf
mov
decl
xchg
push
add
mov
dec
jle
icebp
jg
cmp
push
call
push
push
shrb
aad
mov
cwtl
lcall
lods
jecxz
add
mov
jle
cmp
pop
movb
xor
jae
mov
pop
or
cwtl
decl
shl
mov
out
sub
inc
ret
fnstenv
xchg
add
inc
dec
inc
add
adc
dec
mov
movsl
sub
xor
or
call
loopne
fisubl
cmp
out
jge
mov
outsb
mov
outsb
cld
mov
orl
enter
jp
xchg
sar
inc
int
pop
push
xchg
mov
cmp
je
lret
inc
pop
xchg
add
es
sti
out
xchg
cmp
push
adc
adc
les
jg
xchg
jle
scas
ret
stos
add
pop
fbld
loopne
push
imul
or
pusha
mov
sbb
xor
jne
jb
mov
cmc
imul
out
inc
mov
sti
clc
pop
hlt
incl
shlb
adcb
mov
testl
dec
sub
xor
lret
mov
fwait
jbe
jo
or
ret
add
aad
outsl
mov
sub
xlat
js
orl
mov
lcall
jns
jmp
pop
and
mov
pop
and
hlt
inc
mov
in
or
or
mov
lcall
bound
add
fwait
jb
jns
xor
inc
out
adc
dec
pushf
loope
xor
sbb
sub
shrb
leave
xchg
inc
pop
je
xorb
ja
xor
pop
mov
jg
stos
sbb
dec
subb
adc
subl
sbb
cmp
les
push
lds
xchg
mov
cmpsl
pop
push
add
mov
jb
clc
mov
pop
fstpl
jbe
lret
pop
or
jno
daa
and
scas
fiaddl
adc
ljmp
dec
lahf
push
sub
jmp
adc
cmp
mov
push
add
jne
mov
sub
shll
push
xchg
test
dec
cli
loop
pop
push
call
sbbl
mov
sub
aaa
or
push
scas
mov
cwtl
jg
sub
add
dec
rolb
inc
and
add
push
adcb
inc
jo
out
adc
add
arpl
mov
imul
clc
loopne
inc
ret
gs
mov
iret
daa
lret
add
add
mov
stos
xor
inc
in
or
xchg
fwait
js
lret
xchg
jo
mov
add
repz
dec
and
inc
outsb
add
add
dec
cld
mov
pusha
hlt
ljmp
adc
push
js
cmpsl
mov
sar
inc
loope
test
ss
cltd
xchg
pop
mov
int
pop
lock
nop
lea
cwtl
pusha
add
cltd
push
pop
dec
xchg
xchg
jb
jge
or
xchg
mov
inc
out
inc
push
xchg
aaa
dec
mov
inc
mov
add
mov
adc
jmp
mulb
jo
mov
sbb
jmp
xchg
imul
sub
int3
movsb
dec
ljmp
cli
nop
sbb
pop
and
mov
pop
cmc
jno
lock
mov
mov
inc
push
sub
add
aam
or
push
jge
mov
icebp
add
lods
inc
mov
dec
stos
ds
outsl
cld
jmp
sbb
mov
lock
mov
cmp
repnz
lock
pushl
add
popf
push
sub
fs
add
mov
adc
cmp
mov
xchg
add
rcl
xchg
fisttps
pop
jns
and
sbb
push
ljmp
mov
loopne
lret
loopne
cmpsb
lret
push
dec
or
inc
or
std
cmp
pop
inc
in
cmp
add
ljmp
leave
ret
xchg
pop
lea
ljmp
inc
mov
xorb
loopne
add
cmpsb
popf
push
jmp
xchg
mov
mov
fldcw
mov
frstor
cmp
xchg
add
cmp
subb
enter
adc
sbb
enter
cld
mov
mov
jo
out
pop
test
sbb
mov
mov
jae
dec
inc
sbb
add
in
or
xchg
movsl
mov
push
inc
orl
enter
ret
cwtl
push
adc
mov
push
enter
adc
js
popf
movsb
inc
mov
xor
negb
lret
scas
pop
adc
xchg
clc
mov
sbb
xchg
push
adc
pop
pop
mov
loope
push
mov
push
fistpll
inc
pushl
jmp
add
mov
sahf
xor
or
inc
sti
sub
in
pop
adc
int3
cmp
clc
stc
pop
or
les
dec
in
out
out
push
mov
adc
mov
pop
into
pop
pop
sar
mov
adc
jle
mov
dec
in
xlat
leave
jb
mov
mov
in
imul
fmull
adc
or
jmp
loop
cs
xchg
sti
gs
pop
loopne
push
cmpsb
or
cs
cmpb
movsl
call
adc
xchg
add
and
xchg
adc
push
pop
adc
jg
mov
hlt
add
pop
cmp
pop
inc
cltd
jbe
pop
mov
and
lods
shlb
xchg
mov
cmpsb
lods
ret
mov
xchg
push
xabort
lret
lret
sahf
add
push
sbb
cmpsl
pop
movsb
push
out
sub
xor
dec
lret
dec
dec
pop
sub
cmp
and
repz
bound
jmp
sbb
mov
call
dec
clc
add
lret
inc
mov
or
out
shl
mov
movsb
mov
jecxz
fimuls
xor
inc
mov
jmp
mov
mov
into
gs
push
adc
mov
imul
fwait
add
pop
mov
mov
shr
in
sbb
add
jp
sub
mov
or
adc
lret
int
xor
xor
jae
ficoms
adc
test
loopne
dec
lcall
movl
insl
cli
in
push
ret
shlb
stc
cmp
in
in
cld
mov
xor
or
cwtl
jno
outsl
add
push
int3
jnp
cmp
adc
into
cmp
sbb
mov
push
push
lock
mov
sbb
in
inc
fcoms
mov
mov
cmp
dec
lods
inc
cmp
dec
aam
call
jecxz
jb
out
pop
inc
scas
or
push
mov
insl
xchg
add
out
add
inc
fsubl
xor
mov
and
add
jmp
push
adc
cmp
sub
sbb
dec
mov
adc
int3
dec
sbb
or
imul
addb
lods
popa
call
mov
inc
xchg
jmp
incl
daa
dec
mov
xlat
nop
jge
jge
inc
popf
sbb
stos
add
inc
cmp
pushf
loopne
cmp
inc
sub
shl
pop
pusha
test
ljmp
test
ljmp
test
subb
xchg
xor
sub
or
pop
adc
add
sbbb
xor
cmp
test
rcrb
lahf
adc
mov
mov
push
push
fistpll
insb
push
das
sbb
pushf
jle
pop
pop
cmp
push
xchg
push
push
sub
cmp
pop
mov
push
jmp
lods
xchg
imul
or
or
mov
dec
add
fisttps
add
mov
push
ret
inc
ja
xchg
pop
jp
sarl
cmp
aam
iret
popa
stos
cmp
and
fs
cmp
xor
es
mov
add
std
js
pop
adc
and
mov
in
dec
mov
lock
inc
sbb
addb
jl
ds
icebp
mov
push
cmpsl
cmp
dec
decl
dec
inc
inc
sar
mov
cmp
clc
cmp
fsubrp
add
or
or
out
repz
rcrl
out
mov
insl
ficompl
dec
orb
ljmp
cwtl
pop
roll
sub
adc
les
movsb
popf
decl
in
jl
push
shll
loop
dec
sarb
or
sub
mov
shrl
inc
xor
addr16
pushl
push
into
jne
pushf
jmp
add
mov
mov
dec
xchg
sub
and
ret
aaa
loope
mov
hlt
testb
fisttpll
test
add
xor
scas
lcall
arpl
cwtl
dec
repnz
cmc
popf
scas
push
xor
cltd
cmp
sub
and
mov
outsl
clc
aam
inc
faddp
ljmp
insb
add
test
add
adc
xchg
mov
sbb
mov
ljmp
js
mov
lods
mov
cmc
pusha
cmp
jmp
aaa
lods
movsb
inc
and
sbb
adcl
movsb
scas
dec
decl
lods
or
nop
sub
ret
cmc
push
shlb
jo
popa
jmp
or
xor
pushw
mov
enter
or
xchg
lret
int
add
cli
lods
inc
ret
aaa
inc
rclb
cld
dec
sbb
push
push
mov
insb
sbb
jg
inc
and
inc
add
mov
into
add
test
pushf
jl
out
jl
test
cmp
jbe
je
stos
rclb
push
xchg
xchg
mov
dec
rorl
pop
in
push
insl
inc
jmpw
jp
pushl
dec
cmp
or
jo
or
fisubrl
mov
stos
hlt
mov
push
popa
in
jle
clc
shll
push
fisttps
std
sub
adc
mov
lret
jg
push
clc
jge
pop
ss
mov
xorb
or
clc
push
mulb
fiaddl
sbb
push
jmp
cmp
xor
test
movsl
sub
and
pushw
cmp
out
and
loope
jg
fcomp
imul
xchg
mov
and
addl
ss
int
mov
adc
popl
sbb
ljmp
inc
or
or
sbb
push
push
imul
cli
adc
add
in
lret
sbb
fbstp
or
test
and
dec
std
jae
push
jbe
mov
lret
loop
jne
push
push
int3
and
fstpl
ljmp
jg
movsb
leave
int
outsb
xchg
pop
add
sbb
imul
sub
adc
push
jl
and
add
jbe
cmp
repnz
cmpsb
mov
mov
lea
je
and
mov
popa
cmp
mov
sub
bound
pop
adc
pop
movsb
aam
fsubr
shlb
xchg
add
mov
inc
dec
sbb
add
jg
jg
sub
jo
rolb
rorl
sub
push
loop
lcall
pusha
sub
and
mov
push
mov
add
adc
je
sbb
unpckhps
mov
aam
adc
cwtl
mov
je
test
fwait
mov
loope
and
repz
lcall
incl
mov
xchg
xchg
int3
mov
lret
cmp
jmp
nop
xchg
hlt
mov
cltd
pop
andl
pop
or
xor
adc
lods
jg
or
call
mov
mov
das
pop
cmp
movsb
test
jae
loopne
adc
add
aaa
mov
ss
scas
dec
xor
and
or
lock
or
xchg
icebp
inc
aas
xor
push
mov
cmp
pop
sbb
out
mov
call
js
mov
mov
pop
and
dec
jp
sub
test
jecxz
add
cli
mov
hlt
mov
jle
cmp
outsb
or
clc
ret
pop
test
xchg
inc
fcomps
mov
jp
lcall
clc
dec
xchg
cld
popa
push
int3
inc
mov
pop
hlt
test
jle
repz
aam
mov
inc
mov
jle
mov
rcll
mov
es
jmp
cmp
popa
sbb
and
cmp
daa
cmc
aaa
dec
push
add
push
mov
push
imul
sub
mov
clc
cmp
or
dec
rcrb
aad
je
fadds
pop
jg
adc
aad
aas
xchg
lret
mov
decl
lds
incb
fisubs
mov
lods
movsl
dec
pusha
sbb
imul
es
or
bound
test
outsl
mov
outsb
popf
call
fbld
addb
push
sub
lea
mov
pop
push
push
divb
out
sbb
insl
push
dec
adc
mov
mov
sbb
jns
push
xorl
pop
or
outsb
fsubr
stos
xlat
ljmp
out
ret
push
sbb
pop
rcll
mov
jo
lret
sbbl
in
out
movsl
notb
jg
js
shlb
filds
shrb
inc
mov
hlt
inc
mov
repz
dec
cmp
xlat
xchg
outsl
mov
or
inc
mov
and
pushf
ss
or
adc
inc
xor
bnd
or
ds
pop
lods
icebp
mov
aam
push
pop
push
and
sbb
pop
movsb
js
and
out
dec
or
and
jo
fimull
loopne
lcall
loopne
or
in
cmpsl
or
fists
and
push
aam
cli
clc
pop
mov
ds
mov
push
iret
test
xor
mov
enter
daa
bound
daa
test
sbb
in
scas
aaa
cmc
call
xor
jmp
insl
and
sbb
out
lods
jmp
and
pop
mov
repz
push
sbb
mov
shll
lret
sbb
pop
adc
sbb
movsb
inc
movsl
inc
inc
mov
mov
mov
scas
cs
test
xchg
fmuls
lods
lahf
push
lds
aad
mov
mov
into
arpl
jmp
jmp
lret
xchg
das
xlat
adc
sbb
lea
aas
insb
jb
add
sub
add
into
test
jo
cmc
jnp
pop
add
xchg
insl
icebp
xlat
xchg
push
add
decl
repz
cmpsl
stc
add
mov
fidivl
sub
fwait
jge
xchg
inc
ret
sub
xchg
jle
addb
push
jl
outsl
xchg
sbb
inc
and
mov
xor
xchg
cmpsb
add
add
into
sbbl
inc
pusha
subl
es
fisubrs
pop
lret
jne
aaa
or
sub
rclb
ljmp
mov
or
repnz
lcall
inc
mov
adc
out
cmpsb
iret
mov
add
ss
aas
inc
cli
dec
sbb
push
nop
add
and
mov
mov
add
push
pusha
dec
push
test
sti
push
jmp
xor
mov
stc
xlat
das
add
sbb
mov
sti
ja
xchg
in
cwtl
lds
push
dec
or
dec
ljmp
cld
dec
sub
push
cmp
lret
pushf
fidivrs
sbb
mov
inc
xchg
or
add
mov
add
fldt
mov
mov
add
stos
push
mov
inc
sub
sbb
repnz
mov
aam
mov
inc
mov
cmp
add
ficoml
test
cmp
dec
and
fwait
int3
add
lahf
jns
pop
std
filds
mov
adc
jge
mov
fisubrl
pushl
inc
jle
addb
cmpsb
xor
sbb
or
jmp
add
lcall
repnz
and
testb
test
pusha
arpl
decl
add
mov
mov
dec
xor
adc
add
dec
sub
xor
or
data16
inc
fisttpl
xchg
xor
add
insb
push
or
xchg
xor
popf
jecxz
mov
decl
xchg
push
sub
dec
pop
pop
and
insb
or
jg
inc
pushf
inc
and
lea
loope
or
pushf
loope
jno
loope
inc
cmpsb
mov
imul
pop
cwtl
inc
xchg
push
insl
scas
test
lods
adc
and
push
pop
cli
lcall
mov
outsb
dec
add
adc
dec
adc
jge
xor
ret
add
sbb
push
xchg
movsb
fsubs
mov
add
add
jbe
dec
pushf
addr16
incl
add
bound
ficoms
out
mov
call
add
mov
pop
mov
lock
test
nop
add
sub
adc
push
dec
incl
pop
testb
jge
sbb
sar
movsl
mov
outsb
roll
push
adc
lcall
adc
mov
mov
mov
mov
jns
in
pop
cmpsb
jo
and
andb
jg
xor
out
sbb
jb
push
push
sbb
icebp
dec
add
and
mov
test
cwtl
jle
jbe
ss
lock
andb
call
movsb
repz
fbstp
push
sbb
pop
adc
sbb
mov
ljmp
push
shlb
les
lods
push
and
inc
adc
aas
mov
add
bound
arpl
bound
clc
cltd
pop
xor
ret
and
and
ja
movsl
adc
add
xchg
orb
mov
bound
orl
es
sti
incl
dec
pop
push
push
enter
in
enter
fcoml
or
fnstsw
das
cmp
test
bound
mov
adc
sbb
pop
dec
rorl
or
pop
mov
and
inc
push
addb
and
ljmp
sbb
add
pop
orb
add
add
add
fcmovnbe
add
jae
add
inc
lret
cmpsb
mov
fistpll
inc
push
cmpl
sub
les
sbb
call
pushf
or
shl
mov
data16
fdivr
or
and
push
popl
mov
dec
push
pushf
std
or
adcb
leave
and
add
es
mov
lea
insb
movsl
aas
adc
jecxz
mov
cwtl
lret
sub
inc
ret
cli
mov
fstps
or
inc
stc
addb
lret
xchg
lds
or
and
js
aaa
cli
aas
fists
dec
push
lcall
idivb
add
dec
inc
sbb
inc
or
orl
inc
repz
cmpsb
nop
inc
mov
lcall
sub
dec
and
xchg
and
sti
mov
icebp
xchg
xorb
inc
ss
mov
xchg
add
mov
int3
daa
sbb
test
mov
mov
mov
lea
aad
push
xorb
shr
ljmp
rcr
repnz
repz
jmp
jo
test
test
cli
mov
leave
xchg
jne
add
sahf
push
mov
sbb
push
adc
shll
aaa
jecxz
push
aam
pop
mov
sbb
icebp
add
push
lds
jg
rol
nop
test
mov
and
int3
into
pop
sbb
add
clc
incl
adc
mov
xchg
and
sub
lcall
ds
lret
mov
mov
pop
sub
es
inc
mov
enter
out
rorl
lods
xchg
or
addb
lcall
xchg
loopne
xor
jne
testb
or
or
negl
dec
les
mov
jg
out
sahf
cmp
dec
cmp
mov
push
pop
sub
dec
push
popf
add
xor
sbb
cli
jnp
push
adcb
jg
mov
or
and
pop
dec
cs
ret
sarb
mov
add
nop
inc
push
push
movsb
add
push
les
movsl
inc
or
subb
mov
adc
test
cmpsb
flds
and
push
dec
divl
loope
outsl
sub
push
outsb
shll
rcl
ret
cmpsb
call
mov
pop
jge
mov
xchg
sub
mov
ljmp
lea
xchg
or
test
in
in
jmp
int3
test
insb
adc
xor
xchg
mov
addr16
jge
mov
fmull
sti
aas
pop
push
add
lods
sahf
add
xchg
mov
scas
jb
adc
in
sbb
js
out
cmpsb
xchg
jge
mov
ljmp
ljmp
adc
or
clc
mull
push
fiadds
adc
dec
ljmp
in
mov
adc
pusha
inc
lock
or
xor
mov
lods
movq
rorl
jo
pop
shrl
cs
es
fsubs
push
mov
push
cmpsl
dec
sbbl
jecxz
je
ffree
mov
sub
add
xor
insb
lcall
or
cmovl
jae
rorl
mov
jl
adc
js
lcall
jg
jne
adc
insb
inc
mov
jnp
inc
shrb
mov
pop
scas
clc
call
mov
fdivp
add
shl
add
push
xchg
aam
pushf
jle
and
adc
cmp
jbe
dec
add
cmp
add
xchg
test
popa
jge
pushl
adcl
mov
or
call
mov
icebp
cmp
fs
inc
or
pop
and
mov
incl
inc
aas
or
sbb
pop
mov
cltd
fcom
or
inc
bound
fidivs
call
scas
inc
and
jmp
imul
mov
inc
add
es
icebp
call
inc
and
add
xor
loopne
adc
fisttpll
lods
pop
mov
mov
je
dec
jecxz
orb
pop
pop
xchg
xor
test
inc
adc
ret
call
and
cld
adc
xchg
sbb
push
xchg
jmp
pop
insl
jecxz
sbb
inc
or
and
fldt
add
pop
sbb
mov
add
rcrl
fnstsw
std
jmp
repz
sbb
add
xorb
decb
cld
das
jbe
push
push
pop
lret
faddl
push
sub
jg
sbb
jge
orb
xor
jmp
inc
rcrb
xlat
xor
inc
mov
clc
jecxz
xchg
mov
leave
xlat
mov
push
push
aaa
in
mov
cli
dec
mov
xor
mov
decl
mov
dec
add
sbb
add
sub
lock
incl
and
mov
lret
test
mov
push
pop
lods
mov
jecxz
pop
stos
aad
cmpsb
cmp
push
mov
push
cmp
mov
and
lock
hlt
sbb
inc
out
cli
jns
aas
sbb
cmp
cltd
push
pop
mov
stos
jb
in
inc
loope
data16
add
mov
sahf
imul
pusha
call
loopne
daa
mov
xor
push
push
jl
test
pop
in
pop
test
mov
jo
cmp
imul
test
add
aam
nop
in
jg
and
lea
call
adc
rclb
jge
xchg
jle
stos
sbb
scas
fsubrs
pop
shrl
dec
xchg
dec
in
inc
or
sub
mov
aam
inc
dec
pop
mov
or
inc
add
in
stos
mov
imul
gs
add
into
dec
cld
shl
pop
int3
add
jb
sub
inc
pop
xor
js
call
sbbl
cmp
lea
popw
mov
and
and
xor
fwait
sti
jmp
out
jbe
pop
shll
mov
mov
cmpsl
sbb
loopne
incl
daa
xchg
pop
outsb
dec
js
test
mov
fcomps
sbb
aad
out
pop
leave
decb
stc
xchg
xchg
rcrb
xor
inc
out
mov
push
ret
adc
sub
adc
shrb
fwait
inc
sub
mov
mov
testb
dec
adc
loopne
clc
sbb
outsb
aas
andl
and
cmpb
sbb
inc
enter
xchg
inc
adc
cmp
sarb
mov
dec
sub
outsl
jl
adc
mov
push
push
cmpb
pop
cld
mov
sub
inc
add
sbb
or
mov
fdivl
lret
incl
ret
mov
insl
lret
in
dec
pushf
sbb
popf
aas
lods
test
jle
add
sbb
mov
xlat
or
test
in
incl
iret
xchg
mov
js
leave
repz
or
mov
sarl
aam
jecxz
ljmp
call
dec
jp
mov
and
sub
pop
mov
fs
mov
add
cmpb
mov
je
into
cmp
pop
leave
dec
mov
push
mov
cmp
adcl
lods
sbb
lcall
pop
jecxz
fwait
add
ljmp
out
push
sbb
ss
and
xor
loope
int
adc
cmpl
pop
test
mov
je
xor
sub
mov
call
adc
mov
fildll
push
je
out
clc
xor
pop
and
push
sbb
inc
pop
addb
push
inc
std
cmpsl
aad
mov
push
cwtl
hlt
into
adcb
and
push
push
or
jg
aaa
adc
dec
fsubrs
and
stos
jge
idiv
sbb
loope
les
jmp
cltd
jno
push
popf
orl
jl
outsl
das
mov
pop
stos
sbb
fcomip
or
out
adc
add
xchg
lcall
ss
sbb
call
xchg
inc
and
xor
in
lods
cmp
add
sbb
outsl
xor
call
pusha
hlt
pop
add
cmpl
push
lcall
sar
lea
pop
mov
cmpsb
pop
push
jg
movsl
sti
data16
imul
aaa
cld
mov
pusha
pushf
pushl
add
loopne
movsb
cmpsb
lock
sbb
push
jp
mov
shlb
mov
sub
imul
adc
fistpll
into
jmp
pop
pusha
lahf
add
mov
idiv
loope
popa
rcl
inc
test
out
add
call
aad
loopne
xchg
enter
ja
loopne
fimull
sub
loop
mov
dec
push
shl
dec
mov
scas
inc
std
fcmovne
fsub
enter
ret
fstl
mov
xchg
popa
sti
add
aad
push
lret
add
cs
adc
add
push
pusha
ljmp
lcall
push
je
das
push
xor
cwtl
mov
xchg
jg
es
packsswb
int3
ret
mov
pusha
sti
incl
stos
push
rorl
rcrl
inc
adcb
sbb
movb
hlt
mov
mov
shlb
dec
push
adc
rorl
cwtl
mov
incl
and
xchg
movsl
addl
sub
sbb
shll
sub
stos
sub
sub
enter
insl
push
mov
mov
ja
nop
pop
dec
add
or
sub
cmp
pop
push
mov
cs
mov
les
add
cwtl
imul
jp
pusha
dec
lods
adc
cmp
jno
pop
push
jo
mov
lock
cmp
jo
add
mov
push
mov
pop
scas
clc
lock
ret
push
xor
jnp
jo
inc
in
pop
movsl
jp
sub
ds
xor
cli
pop
sbb
cmp
sahf
hlt
cmp
jmp
pop
or
imul
dec
clc
out
xor
and
push
jbe
push
mov
jl
das
add
pop
call
mov
add
lea
add
jp
leave
shr
pop
add
adc
xchg
icebp
dec
call
and
adc
mov
inc
jle
mov
cmp
mov
cmp
in
ljmp
out
stos
xor
fstl
xchg
pushf
mov
sub
xchg
mov
mov
lock
pushf
adc
loop
xchg
or
fucomi
or
jmp
pushf
add
add
xchg
sbb
sbb
jg
add
movb
shrb
dec
shrb
pop
xchg
scas
mov
popf
cmp
mov
out
mov
or
enter
inc
or
push
mov
out
aam
inc
cwtl
aam
xchg
hlt
in
mov
cmp
iret
push
adc
sbb
ret
enter
js
dec
shlb
fwait
js
dec
loop
cmp
loope
adc
push
test
and
adc
mov
out
sbbb
or
clc
mov
jecxz,pn
pop
inc
or
dec
ja
stos
cltd
xchg
mov
adc
jb
out
mov
fiaddl
inc
cmpsb
ja
mov
push
test
fsubs
pop
or
ret
incl
push
insl
xor
inc
xor
mov
push
inc
pushl
and
dec
inc
nop
dec
add
out
enter
jmp
and
into
mov
sbb
adc
repz
dec
jl
xchg
sub
sub
loopne
lods
xchg
ja
jge
je
mov
sub
xchg
push
push
xor
cmp
pop
mov
add
xor
outsb
pop
in
stc
fcomps
pop
sahf
cmp
mov
aam
xchg
sub
mov
mov
dec
pusha
pusha
mov
into
pushf
mov
inc
mov
inc
mov
fcmovu
lea
gs
xor
pop
ljmp
pop
add
div
imul
mov
loopne
popf
clc
mov
shll
cmp
pop
adc
cmp
pop
sbbb
das
insb
xchg
inc
inc
pop
es
movsl
ja
js
rclb
add
cmc
add
pop
dec
pop
in
sarb
sahf
out
fs
and
sbb
sub
mov
clc
push
hlt
fcomi
ss
cmp
cmpsl
and
lock
out
lret
xor
inc
xchg
es
sbb
sbb
stc
push
pushf
push
lcall
fimull
jecxz
mov
sub
sahf
stos
test
xor
inc
in
jge
or
aam
jg
mov
or
pop
mov
push
pop
test
out
pop
inc
into
cmp
jge
es
or
push
jnp
sahf
ret
inc
cmp
andl
stc
leave
push
mull
fwait
add
dec
subb
fcoml
and
fwait
testb
out
mov
rcrl
fwait
mov
idivl
sti
nop/reserved
xlat
sub
sbb
inc
sti
adc
scas
enter
pushf
rolb
inc
push
lods
insb
mov
lret
or
or
pop
cmp
and
pop
jl
cmp
jg
mov
add
test
jns
jmp
mov
cmpsb
lcall
fildl
cmp
dec
or
rolb
js
jne
pop
mov
add
xchg
mov
push
std
fidivs
add
pop
int
aas
adc
mov
fs
imull
movl
and
insb
divl
lods
clc
js
dec
nop
out
cmpsb
xor
test
pop
xchg
inc
lods
loopne
inc
dec
mov
sub
sbb
inc
push
push
pop
or
test
loop
dec
or
jmp
fildll
pop
adc
loopne
push
sti
cmpsb
jmp
repz
cmp
loop
fsubs
mov
dec
pop
inc
jne
lahf
pop
or
cmp
aas
cmc
inc
out
mov
fwait
and
les
in
outsb
xor
adc
mov
jle
and
add
mov
push
mov
or
shlb
addb
pop
jl
stos
jge
jg
fidivs
mov
pop
sub
and
addr16
push
gs
lcall
in
pop
add
jns
stos
sub
mov
das
and
outsl
adc
mov
ljmp
and
insb
int3
mov
dec
movsb
and
mov
xlat
out
and
shl
pop
incb
pusha
push
sub
adc
sbb
fistps
push
addb
push
xchg
push
outsl
cli
sbb
adc
in
cmc
and
loop
add
xchg
sarb
push
jle
jbe
xor
bound
push
insb
sub
jno
adc
mov
mov
mov
xchg
add
or
loop
xchg
orps
jg
fldcw
sbb
mov
movsb
jl
test
add
jo
inc
mov
inc
mov
sbb
shlb
pop
std
mov
movsl
mov
ret
cmp
setg
add
dec
adc
rorl
jmp
dec
dec
sub
sub
xorb
xchg
mov
in
mov
out
pop
sar
sub
sbb
mov
and
filds
cmp
xchg
jmp
scas
cmp
in
cli
in
je
jne
jnp
push
fisttps
mov
movsb
dec
aam
jno
pop
push
xchg
sbb
xor
push
das
outsb
mov
ljmp
adc
jecxz
or
mov
and
adc
int3
aaa
fs
cs
data16
sub
ljmp
cmc
cwtl
sbb
xor
xchg
add
testb
dec
adc
daa
push
dec
dec
and
loop
xchg
sbb
ss
imul
mov
jns
inc
ret
cmp
cld
loopw
rcl
sar
lret
add
leave
jg
push
pushaw
and
mov
jg
adc
mov
push
jno
andl
std
iret
orb
ja
pop
adc
push
add
call
in
cmc
jne
inc
pop
decl
mov
or
nop
pop
addr16
push
int3
sub
ljmp
out
imul
mov
mov
jae
mov
hlt
incl
ret
dec
sbb
lods
insb
pop
adc
pop
incl
and
add
dec
push
rcrl
fnstsw
leave
mov
jg
negb
inc
mov
repz
xchg
add
mov
or
mov
jmp
je
lods
or
ljmp
sub
xchg
add
movntps
pop
dec
loope
in
loop
or
mov
adc
hlt
ja
fmull
andb
add
pop
jmp
loope
xchg
fbstp
inc
outsb
mov
lock
add
int3
jecxz
xchg
mov
inc
mov
mov
ja
pusha
and
lock
push
clc
incl
out
jecxz
out
jg
enter
sbb
inc
xchg
rorb
decl
add
adc
arpl
pushf
aas
add
loopne
daa
dec
or
mov
mov
stos
push
or
leave
test
mov
xchg
fmull
mov
mov
dec
loop
rcll
call
mov
add
cld
push
ror
loope
push
insb
pop
jmp
and
in
mov
filds
cmp
mov
sbb
pop
or
adc
stc
int
imul
jb
push
std
ljmp
fwait
cmp
lods
push
lds
push
sbb
push
sbb
sbb
out
add
or
cmp
push
out
shll
sbb
mov
dec
lcall
xor
int3
scas
push
frstpm(287
adc
and
sbb
outsl
clc
push
ret
cmpsb
dec
and
and
js
add
pop
mov
js
xor
icebp
xor
shr
repnz
fs
push
ja
test
fdivs
loop
adc
mov
mov
pop
daa
lock
add
arpl
test
xchg
cmp
xlat
fs
aaa
cmpsl
push
inc
or
scas
pop
jbe
inc
or
jg
push
repnz
mov
jno
mov
sub
push
out
and
and
decb
subb
dec
popf
out
inc
cli
mov
lcall
sbb
cmp
jmp
in
testb
push
test
or
pop
and
inc
mov
std
pushf
jbe
hlt
mov
jbe
repnz
icebp
imul
and
dec
repz
cmp
and
add
dec
cmpsb
jp
loop
cmp
rorl
es
add
dec
add
and
jle
push
pusha
int3
in
rcrb
pop
inc
pop
js
and
xchg
add
xor
dec
mov
call
repz
loop
in
inc
mov
push
ret
sbb
add
jmp
xchg
dec
jmp
pop
cmp
shrl
adc
ficoms
mov
daa
icebp
and
jg
lods
clc
je
add
dec
add
dec
call
push
pushf
out
add
loop
jb
jge
inc
add
mov
jle
ljmp
jle
or
inc
pop
sub
cmpsb
add
mov
pushl
in
mov
std
out
sub
xchg
inc
push
mov
cmp
mov
jnp
adc
xor
add
js
push
sub
clc
push
inc
mov
xor
xchg
push
pusha
mov
outsl
stos
or
push
or
loop
clc
out
sub
cli
lods
adc
push
lcall
popa
repnz
mov
xchg
mov
ds
nop
test
dec
jg
lret
inc
negb
ljmp
test
xor
add
mov
or
idiv
push
rcrl
add
inc
jecxz
cmp
gs
add
and
adc
mov
into
cmc
addb
fmuls
dec
push
xchg
addb
or
sti
andl
or
mov
sbb
test
insb
lcall
sti
dec
pop
xor
adc
or
push
rorb
in
test
mov
mov
xor
out
jp
sbb
test
movsl
or
dec
pusha
imul
push
adc
rcrb
ljmp
xor
lcall
inc
orb
daa
icebp
pushl
mov
xor
sub
sarb
mov
inc
hlt
aad
sti
mov
mov
les
outsl
clc
pushl
mov
ds
lods
mov
sub
das
mov
ds
pop
fadds
or
call
xchg
les
test
test
int3
cmp
daa
push
fwait
popf
test
pop
flds
js
pop
ret
push
and
call
inc
ret
call
add
lcall
clc
dec
xor
pop
dec
sub
xchg
adc
cmp
dec
add
mov
ljmp
imul
xchg
xor
push
adc
or
clc
outsl
cli
or
rep
mov
mov
test
rcll
pusha
dec
push
inc
add
movsl
add
arpl
mov
outsb
xchg
fs
iret
lahf
sahf
add
fwait
cli
push
or
into
mov
ljmp
push
inc
bnd
adc
rcrb
mov
and
mov
jo
cmc
cmp
in
add
inc
aam
outsl
incl
lret
pop
mov
mov
bound
loop
cmp
cmp
ja
cli
or
decb
bound
mov
add
xchg
xor
pop
mov
mov
push
pop
jp
inc
cld
pop
aas
std
inc
mov
test
push
cmpb
jmp
xchg
push
push
pop
sti
add
pop
and
xchg
jle
sub
lret
add
lcall
inc
mov
inc
add
mov
xchg
add
sbb
xor
hlt
aam
fisttps
dec
call
dec
mov
pop
inc
pop
jg
jp
add
shrb
fimull
xlat
cmp
mov
movsb
or
adc
pop
jl
lock
or
xchg
and
jne
fsubl
call
adc
sbb
sub
testb
movsl
clc
and
pop
fisttps
rol
lcall
aad
sbb
rolb
push
inc
or
lods
mov
outsb
jmp
enter
jo
inc
bound
cld
fbstp
adc
mov
cmp
and
aad
jns
mov
adc
loope
incl
add
cltd
mov
mov
adc
pop
negl
std
xlat
ret
out
ss
and
mov
add
push
or
int
and
jecxz
mov
sub
mov
inc
jg
gs
ret
xchg
mov
mov
leave
shlb
add
aam
lcall
aas
test
sbb
push
mov
adcl
in
int
mov
out
adc
sar
inc
jnp
lock
and
or
int3
mov
lods
inc
or
testl
roll
stos
pushl
add
pushf
sbb
add
pop
mov
xor
jmp
sbb
pusha
and
push
or
arpl
cmc
sar
roll
jo
lock
cs
jb
add
and
sbb
movsb
mov
scas
in
fwait
scas
or
xor
movsb
inc
test
popa
add
insb
xchg
mov
or
lcall
scas
cli
in
pushl
xchg
lret
insb
or
mov
dec
call
sub
aam
lahf
clc
pop
xor
dec
ret
clc
movb
mov
out
lock
jle
mov
jo
int
mov
jge
sbb
adc
nop
dec
int
add
adc
das
cli
pop
inc
les
rclb
jno
mov
dec
add
pop
jns
xor
dec
mulb
jecxz
out
dec
test
inc
in
mov
ds
add
fucomip
loop
mov
xchg
lret
pop
sbb
clc
mov
mov
call
repnz
inc
test
cmc
pop
cmp
mov
xor
scas
outsb
jg
or
xorb
repnz
test
push
shlb
adc
inc
add
xchg
lock
mov
push
cltd
cmpsb
aad
mov
mov
inc
ss
outsl
mov
add
cmp
ja
inc
adc
dec
inc
adcb
dec
aad
sub
dec
aam
sbb
mov
sti
test
and
mov
mov
xchg
jae
xchg
stos
ljmp
cld
mov
pop
jns
lock
inc
popf
jne
cli
call
mov
xor
incb
push
dec
mov
notb
fnsave
jp
test
push
pop
ucomiss
adc
inc
inc
mov
pop
adc
adc
or
push
call
in
orb
ret
dec
mov
ds
cmp
pop
imul
lds
jle
mov
pop
mov
dec
jae
cmp
addr16
pop
add
insb
mov
and
sub
mov
push
cli
sbb
cmpsl
rol
xchg
pop
cli
fiaddl
insb
cmp
push
and
mov
push
cmp
loopne
inc
add
movsb
jnp
add
inc
stc
and
cmp
or
mov
in
add
push
fsubr
js
cli
xchg
xor
movl
daa
test
jg
adc
and
pop
jbe
ljmp
lret
add
cmpsl
roll
ljmp
fwait
inc
inc
fsubr
mov
aam
out
dec
mov
rcrb
std
cmp
adc
mov
push
leave
clc
and
std
divb
sub
loopne
dec
ljmp
pushf
add
jl
fidivs
push
es
mov
icebp
xchg
movups
mov
subl
dec
addb
adc
xchg
and
cli
arpl
and
mov
lock
mov
decb
frstor
fbld
xor
popf
and
movsl
push
sub
adc
call
lock
loope
negb
or
out
pop
ljmp
jecxz
loopne
stc
add
add
xchg
xor
xor
clc
ficomps
pop
cmp
push
cld
fstps
or
ljmp
sahf
ret
into
rol
push
lods
outsl
incl
int3
mov
inc
cmp
enter
mov
cltd
add
mov
scas
and
pop
lods
out
clc
mov
or
jg
rcr
inc
fwait
enter
leave
shll
icebp
out
sbb
mov
xor
rcr
ljmp
mov
cltd
shll
add
pop
shrb
aam
movsl
jl
jo
in
pop
push
sub
cs
mov
mov
icebp
arpl
lea
or
enter
pop
pop
mov
repnz
rorb
dec
and
jmp
roll
cmp
mov
cwtl
ljmp
lock
or
adc
cli
and
add
outsl
inc
shrb
test
inc
mov
xchg
std
mov
leave
and
sbb
sub
pop
sbb
dec
inc
inc
inc
push
idivb
push
mov
inc
push
push
rorl
push
loope
incl
pop
fucomip
xor
pop
and
outsb
addr16
jo
outsb
test
aaa
add
jae
push
fs
jne
dec
pop
movsl
sbb
cld
sbb
std
jg
add
xchg
xchg
mov
sbb
or
loop
clc
out
dec
adc
xchg
adc
xchg
dec
or
out
push
pusha
sarl
jbe
loope
mov
add
pop
loop
jbe
out
ret
mov
fiaddl
jmp
mov
xchg
les
push
sub
out
test
and
sbb
xor
insb
push
call
iret
pop
inc
add
inc
or
xor
inc
inc
sub
xor
es
js
enter
in
pop
pop
or
icebp
cld
imul
jb
cmp
mov
inc
ljmp
xchg
cld
call
pop
mov
lret
fsts
or
jns
xchg
pusha
negl
aaa
sbb
pop
adc
pusha
mov
repz
test
ljmp
sub
dec
mov
lea
out
cld
clc
call
xor
loope
jle,pt
aaa
in
pop
sbb
pop
scas
lods
data16
outsb
lret
and
cmpsb
and
mov
ret
loope
push
filds
shll
push
sub
sub
lods
sbbb
call
pop
aas
cmc
mov
or
bound
cmp
fidivs
shll
pop
inc
inc
and
mov
fcompl
jne
int3
add
mov
sub
nop
or
xor
jb
adc
push
dec
push
cmc
nop
test
dec
cmp
jbe
mov
enter
aad
sub
cmp
and
jnp
push
pop
insb
jmp
loop
test
mov
inc
loop
inc
adc
mov
pop
std
fcomip
out
outsb
xor
inc
mov
jo
or
adc
adc
ja
or
xor
movsl
jmp
pop
dec
pusha
int
xor
or
inc
jo
pop
test
push
and
js
sub
cmc
cmp
push
pop
inc
loop
fiaddl
cmpsl
mov
jle
mov
call
cwtl
cwtl
xchg
roll
add
push
sbb
leave
add
fwait
and
cmp
push
call
xchg
or
int3
lcall
adc
je
xchg
push
jno
add
jecxz
outsl
jmp
cmp
outsb
fnsave
test
sbb
test
mov
inc
add
mov
add
pusha
movl
or
aam
out
rolb
mov
loopne
mov
lock
cld
jg
jmp
xchg
dec
push
out
xchg
add
pushl
cmp
sub
sub
cld
decl
outsb
ss
outsl
fiaddl
adc
aaa
jmp
inc
inc
aaa
mov
add
lcall
lock
stc
cmp
adc
adc
sbb
cmpsl
stc
loope
sub
sbb
mov
xlat
dec
adc
repnz
pop
outsl
pop
adc
fcmovnb
test
sbb
pop
clc
icebp
sub
dec
int3
psrld
jg
decl
dec
cmpsl
sti
addb
lret
ret
inc
mov
icebp
incl
stos
sub
add
cltd
sbb
pop
cld
lcall
stos
in
mov
rol
lea
xchg
and
add
call
adc
loopne
adc
adcb
pop
push
jno
xchg
cmp
xor
pushl
sub
xor
addl
in
mov
orb
ret
in
lret
push
test
add
test
int3
mov
jne
xchg
hlt
cmpsb
pop
inc
pop
xor
ds
loopne
or
out
lcall
jmp
inc
iret
flds
cld
out
or
push
mov
adc
in
and
adc
pushl
fistpll
ret
jno
xchg
xchg
addr16
stos
rcrb
insl
sti
cld
xchg
pop
mov
clc
dec
adc
add
jecxz
sub
mov
inc
lcall
inc
mov
jmp
dec
add
lahf
rorb
and
mov
push
or
pop
das
fwait
ds
xor
dec
pusha
out
inc
call
incl
cli
jb
cmc
addr16
adc
push
add
or
lds
mov
push
hlt
decl
xchg
dec
mov
popa
out
add
scas
stos
ljmp
cli
mov
stos
inc
inc
in
hlt
rolb
shl
cmp
insb
arpl
cwtl
shl
push
or
inc
push
push
lods
dec
pop
imul
push
jecxz
ret
push
cmp
adc
mov
cmp
cmp
test
adc
gs
pop
jg
mov
pop
cwtl
jno
fadds
sub
xchg
out
add
mov
mov
xchg
rolb
inc
sti
push
sub
and
add
aas
std
adc
cmpsl
xor
aam
icebp
nop
cld
push
mov
lcall
pop
adc
out
je
pop
or
xchg
inc
test
mov
add
cmp
and
sub
sbb
aad
add
jbe
adc
mov
adc
adc
push
xchg
sub
aad
jp
ljmp
add
sbb
mov
loopne
dec
dec
int3
enter
xor
or
orb
mov
fwait
pop
sbb
jo
fisttpll
pop
mov
ret
dec
lea
add
adc
jae
add
adc
lock
in
jg
bound
insl
and
rol
xor
mov
cmp
ds
cmp
or
adc
fwait
dec
xchg
out
pop
and
add
fst
pushl
rcl
or
in
mov
add
inc
jg
loope
mov
les
add
sti
andb
jne
or
jmp
mov
int
in
arpl
fmuls
sbb
dec
fistps
sbb
mov
push
and
popa
xchg
movsl
dec
inc
adc
xor
push
repz
test
stos
sub
sbb
hlt
push
jbe
call
and
cmp
push
outsb
jbe
scas
adc
lret
add
out
add
add
sub
rolb
jo
cld
cltd
in
js
sub
or
gs
cli
add
add
push
enter
pop
adc
xchg
dec
clc
ja
imull
shlb
aad
and
xchg
sbbb
jp
pop
add
and
mov
inc
or
pop
icebp
or
mov
mov
pushl
je
jne
cmp
nop
cmpsb
aam
idiv
stos
int3
or
cmp
push
loope
pop
pusha
mov
dec
and
aaa
pushf
or
clc
and
cmp
pop
cmc
in
pop
xchg
sar
incl
mov
test
dec
sbb
and
lods
add
sbb
cmc
sbb
adc
out
push
rorl
mov
xchg
and
and
mov
mov
popf
xor
cli
lea
jle
sub
incl
push
loopne
and
add
add
scas
shrl
test
sbb
scas
push
mov
clc
repnz
call
hlt
sbbl
test
push
cmp
out
push
mov
cld
mov
inc
les
add
imul
and
push
xchg
shll
imul
movsb
aaa
sbb
andb
jle
std
ja
sbb
loope
mov
in
or
inc
enter
add
inc
pop
ret
repnz
add
mov
es
dec
and
sbb
xchg
xchg
sbb
aad
dec
or
adc
mov
cmp
or
jg
mov
mov
jnp
xor
adc
mov
push
xchg
scas
call
cmp
data16
sub
mov
cmp
imul
rcrb
add
aaa
std
fildll
enter
or
fildl
inc
loope
cld
loopne
test
cmc
jne
das
rol
xchg
sub
and
jb
or
mov
inc
cmovbe
subb
cli
sbb
jmp
test
lahf
leave
push
sub
pushl
loop
cmpb
lock
mov
xor
icebp
icebp
inc
push
cmc
adc
add
mov
add
cmpsb
in
pop
mov
adc
call
repnz
or
imulb
les
js
push
pushl
push
rolb
negl
adcb
jl
scas
clc
adc
add
fadd
dec
andb
lock
mov
je
push
inc
mov
das
and
mov
ljmp
xor
sti
mov
stos
xchg
js
jns
test
or
lcall
mov
insl
mov
push
cmp
js
loopne
ds
cld
pop
cmc
mov
and
pop
or
jmp
mov
push
xor
pop
or
dec
into
push
jg
lea
or
outsb
adc
xchg
stc
inc
movsb
sub
or
pusha
dec
jg
fnop
testb
cli
jb
lahf
mov
pop
push
clc
fisttps
mov
and
xlat
mov
pop
or
push
cwtl
pop
jg
je
int3
dec
sbb
icebp
pop
mov
jbe
inc
enter
loop
es
and
inc
in
add
ret
push
mov
pop
xchg
cltd
movsl
xlat
push
repz
push
nop
adcl
jno
leave
or
rolb
lcall
gs
add
inc
xor
out
aaa
adc
filds
movsl
push
cmp
mov
daa
mov
sub
inc
cmc
jmp
add
add
xchg
fs
into
into
lock
js
xchg
rolb
fiaddl
push
pop
adc
enter
pusha
popa
ja
cld
clc
das
adc
fs
mov
repnz
ror
insl
mov
adc
lcall
jbe
clc
rolb
les
add
loopne
lcall
fstpl
incl
pop
sti
and
es
pop
jo
fbld
dec
xchg
jne
lret
inc
ret
jg
jg
cmp
mov
cmp
or
bound
std
scas
fcmovnb
ss
js
nop
or
leave
pop
push
mov
call
cmp
inc
scas
fisttps
subb
jo
mov
sub
iret
mov
inc
aam
aad
mov
dec
lret
mov
lods
dec
cwtl
lods
popa
out
loop
fnsave
dec
pop
push
jge
or
pop
mov
fbld
xor
jle
andl
nop
sub
sub
cld
incl
push
scas
test
sbb
cmp
out
add
dec
push
jl
cwtl
add
nop
push
dec
mov
in
lcall
mov
sbb
repnz
and
xor
jns
mov
sbb
xlat
mov
xor
pushf
jo
cmp
add
clc
cltd
mov
adc
mov
sub
lcall
stos
dec
pop
push
leave
addl
mov
aam
clc
imul
inc
push
lret
adc
lock
or
add
and
jmp
pop
xchg
sbb
xor
ss
adc
mov
add
stos
dec
adc
sbb
lcall
loope
push
or
xchg
pusha
add
xor
lcall
fwait
lods
incl
aad
data16
ret
dec
push
inc
sbb
fstpt
fldl
pop
xor
sbb
aas
pop
hlt
stc
jo
or
aad
push
subb
and
pusha
jl
push
mov
arpl
xchg
in
adc
and
pushl
cmp
push
push
popa
das
in
push
enter
cs
cmpl
xor
add
rolb
js
lods
popa
mov
icebp
test
or
cmp
pop
lock
or
inc
add
jb
jnp
out
push
test
xor
enter
dec
pop
cld
outsl
cli
loope
stc
insb
aaa
ljmp
ret
data16
ficoms
lcall
or
xor
xor
jo
mov
sub
mov
data16
mov
jg
push
outsb
xchg
aam
or
cmp
mov
mov
jbe
fimuls
pop
icebp
jno
xlat
and
xchg
mov
or
lcall
ljmp
scas
into
pop
add
ja
pop
sub
mov
inc
inc
int3
and
dec
mov
adc
enter
dec
jg
mov
mov
add
mov
sar
xor
xor
subl
mov
mov
rorl
and
dec
mov
inc
js
inc
into
and
push
ljmp
fists
mov
pop
cmp
fstps
pop
pavgw
adc
xor
notb
clc
push
jbe
push
scas
mov
xchg
jae
incl
sbb
cmpb
sbb
loop
pop
or
add
rcrb
push
push
xor
or
mov
je
mov
sbb
push
xchg
into
inc
sahf
call
std
push
lock
add
dec
add
in
inc
pop
fisttpll
stos
shlb
pop
mov
enter
clc
ficoml
add
jo
lret
inc
mov
sub
test
pop
sbb
cwtl
add
mov
loop
xor
fidivs
xor
in
sub
pop
cmp
int3
and
sub
test
pop
xchg
call
ror
sarb
loop
scas
mov
lcall
fildl
aaa
or
shrb
lret
add
push
std
jg
jb
pop
sbb
dec
add
ds
pop
jecxz
scas
std
jg
jo
decl
and
ret
and
fcos
aam
aaa
cwtl
and
xchg
pop
rcl
mov
and
cmc
call
insl
insl
test
adc
and
xchg
scas
js
adc
daa
lods
insl
scas
mov
push
mov
adc
sbb
add
lods
lahf
es
xlat
xlat
lcall
je
fdivrs
add
pop
inc
shrb
xlat
mov
mov
ljmp
dec
aam
inc
hlt
out
xor
popf
notb
xor
or
push
into
push
aas
in
adc
pop
cmp
lret
sbb
sti
jbe
pusha
fcoml
adcb
inc
cld
scas
sbb
adc
and
push
xchg
pusha
imul
mov
aaa
cltd
lods
dec
imul
lret
cld
push
inc
dec
ss
popa
and
jge
add
rolb
subb
adc
je
add
sti
sub
mov
outsl
icebp
rol
xchg
xchg
dec
cwtl
adc
jg
mov
mov
in
mov
push
fdivr
out
mov
mov
lock
jae
icebp
lock
adc
fidivrs
out
mov
test
outsl
scas
pop
ret
mov
ljmp
cs
insb
dec
insb
ljmp
lret
js
xor
aas
xchg
test
jg
jle
fistl
pusha
rorb
inc
lods
or
ja
jl
sar
incl
adc
lock
pop
shll
jecxz
lds
decl
mov
pop
or
icebp
pop
jbe
jb
ret
dec
cs
and
mov
rolb
push
pop
and
mov
mov
sbb
inc
push
xor
call
imul
sbb
or
js
outsl
mov
pop
adc
jge
xchg
insb
or
pop
fistpll
jg
adc
sbb
andl
jbe
dec
fcoml
mov
pop
sub
pop
ret
or
cmpsb
adc
fists
sub
or
inc
inc
jl
cmp
popa
mov
mov
outsl
xchg
mov
out
mov
aas
pop
outsl
clc
sbb
push
mov
test
orb
mov
cli
aaa
jo
dec
inc
pushf
and
jnp
inc
out
mov
cmp
xor
cmp
faddl
xchg
aaa
xor
std
pusha
fwait
lods
movsl
cwtl
les
je
lcall
fimull
loopne
in
xor
ret
stos
mov
and
and
and
jle
jle
imull
mov
push
mov
mov
push
push
mov
rcrl
insb
cli
add
iret
adcl
inc
pop
or
hlt
jmp
addr16
adc
push
mov
inc
nop
ret
xchg
pop
nop
jecxz
shrl
pop
cmp
push
inc
cmp
and
lock
xlat
cwtl
push
fiaddl
and
lcall
adc
ds
push
repnz
adc
mov
jb
lret
and
into
scas
add
xchg
stc
sti
loope
aaa
shll
adc
dec
xchg
cmp
add
sbb
std
decl
aad
arpl
and
ljmp
sbb
loop
imul
roll
mov
or
mov
cmc
push
pop
inc
les
fsubrs
adc
sar
fcomip
add
xor
ljmp
aaa
mov
jmp
sbb
icebp
add
dec
add
mov
or
shlb
ja
sub
mov
xchg
mov
add
inc
push
or
sbb
push
jge
pop
inc
cmpsl
loop
add
hlt
ja
and
adcb
movsb
mov
or
add
in
xchg
jge
push
mov
sbb
cmp
je
insb
pop
cmpsb
mov
rcll
adc
pop
lock
jg
cli
sbb
sti
ficomps
dec
test
mov
mov
ljmp
add
nop
mov
pusha
cltd
mov
arpl
adc
insb
add
mov
cld
ljmp
lock
push
and
clc
or
scas
cli
xchg
stos
add
popa
mov
in
cwtl
pop
popf
add
loopne
subb
and
out
or
test
sbb
jg
push
inc
mov
addl
xor
ja
and
cmp
dec
dec
in
test
sbb
aad
dec
mov
cmp
cwtl
add
xor
arpl
out
roll
adc
push
pushf
pop
push
in
arpl
push
into
clc
pop
int
adc
lea
mov
mov
or
movb
mov
and
xor
lea
imul
jmp
or
or
sbb
xchg
xchg
subl
dec
dec
call
nop
shrd
loopne
ss
inc
mov
inc
fwait
lcall
mov
sub
inc
sub
inc
mov
adc
gs
or
outsl
push
inc
std
sbb
pop
sahf
inc
push
imul
fildll
or
inc
mov
dec
repz
testl
fildl
add
cmp
jecxz
mov
fs
stc
xchg
pop
js
adc
pop
ret
mov
or
cmp
cmp
mov
sbb
push
pop
pusha
or
test
pop
or
pushl
outsb
or
mov
shlb
add
fwait
mov
iret
outsb
xchg
sbb
jae
mov
aad
movsl
xchg
inc
addb
bnd
jp
mov
mov
les
xchg
idiv
jmp
dec
jbe
push
fidivrs
icebp
jg
mov
xchg
in
jnp
sub
aam
sub
push
out
clc
insb
pop
dec
mov
and
clc
sub
pop
mov
sub
cmp
inc
add
cli
ljmp
fs
mov
lods
cmp
push
xchg
mov
sub
loop
mov
push
lods
push
push
jge
lret
sbb
mov
pop
and
sahf
add
ret
aad
fs
inc
mov
xor
cmp
jg
sub
push
fnclex
xchg
and
sub
lret
dec
daa
cmc
push
xchg
inc
inc
dec
fmulp
push
in
arpl
cmpsl
add
pop
andl
sub
xchg
add
or
mov
or
ja
rclb
andl
adc
ret
loope
xchg
jmp
lea
inc
cmc
les
jnp
lds
mov
test
orb
or
and
inc
pop
add
cmp
push
ljmp
es
push
jmp
ret
sar
sar
and
in
arpl
inc
int
imul
and
inc
cmp
sbb
pop
repz
loope
cmp
hlt
ljmp
sbb
cs
mov
or
shlb
lock
jle
and
dec
mov
pop
call
orb
or
xchg
sbb
jg
xchg
ss
pop
adc
inc
or
mov
das
push
in
sbb
nop
or
adc
call
xchg
sbb
mov
movsl
jnp
pushf
or
jmp
inc
ret
pop
icebp
incl
mov
fldt
inc
add
mov
das
clc
jg
jb
sbb
arpl
sbb
sub
sub
push
pop
in
xor
call
push
xor
jmp
cmp
or
popa
pop
test
shll
sub
xchg
or
vmaxss
add
pop
adc
imul
mov
jne
pop
cmpsb
bound
insl
pop
sbb
jp
sub
lock
mov
and
mov
lock
dec
dec
sub
call
hlt
xor
in
add
sbb
dec
push
adc
mov
incl
cltd
push
jb
arpl
cwtl
repz
mov
cmp
xor
sbb
push
sub
jmp
sti
ljmp
in
hlt
jg
push
cmc
mov
enter
adcl
sarl
xorb
mov
je
push
imul
loop
mov
sahf
mov
leave
mov
mov
fisubl
xor
icebp
mov
push
xchg
pop
mov
mov
cmp
aam
sub
rcrl
test
rcrb
cli
rcll
call
lods
cmp
push
mov
add
ret
mov
jecxz
arpl
rorb
mov
lds
imul
notb
jg
jo
popf
inc
mov
int
jle
bound
dec
enter
xor
cmc
pushl
mov
pop
loopnew
repz
pusha
adc
cld
inc
sbb
sahf
and
sub
icebp
mov
aas
cwtl
push
test
adc
jno
movsl
mov
mov
dec
inc
and
out
std
sub
or
pop
dec
mov
cmp
data16
inc
sar
incl
iret
add
jae
aaa
jnp
mov
out
mov
aam
fstpt
push
mov
and
adc
add
fldt
pushf
mov
sbb
sub
ja
add
stos
mov
fsubrs
xchg
or
mov
cmp
lock
mov
inc
cltd
mov
test
hlt
fistpll
adc
test
sbb
push
or
sub
adc
xor
cmp
sub
add
cmp
adc
ljmp
imul
add
hlt
in
mov
in
out
add
hlt
mov
insb
cmp
push
add
mov
or
push
adc
pop
ljmp
aaa
rcl
lcall
xorb
int3
ds
daa
push
and
jbe
xchg
jne
or
pop
adc
push
jp
inc
and
mov
and
mov
cmpb
bound
xor
int
mov
sbbb
add
inc
ljmp
ljmp
jo
xor
dec
pop
xor
pop
clc
decl
ja
jle
out
mov
call
push
popf
dec
sahf
jl
std
pop
or
rorb
loopne
jl,pn
or
test
scas
cmp
or
push
add
lret
dec
fsub
clc
add
in
adc
fidivs
jle
fldl
rorb
xchg
pushl
push
jle
sub
push
mov
inc
jmp
xor
mov
jg
adc
jl
sbb
xorb
add
ljmp
or
pop
inc
shlb
cmp
adcl
in
aaa
add
jg
jmp
out
push
adc
sbb
or
scas
or
std
fld
mov
outsl
sub
or
mov
mov
push
fdivrl
push
or
push
xor
and
xchg
imul
mov
test
jmp
sbbl
jg
mov
cld
push
add
insb
fimull
add
rcll
stos
mov
add
inc
mov
aad
addl
and
add
xchg
push
add
loope
fs
push
mov
dec
cmp
inc
and
aam
or
pop
stos
cmc
sub
xor
sub
incl
stos
jl
and
push
or
xchg
dec
enter
push
out
jmp
sahf
test
inc
cmc
mov
leave
enter
add
cmp
jno
pushf
dec
cmpb
xchg
repnz
or
mov
cmp
or
stos
push
pop
inc
push
mov
js
lcall
and
mov
mov
sti
ror
out
pop
mov
test
inc
shrl
xchg
pop
sub
xor
push
fldcw
xor
cli
push
sahf
cli
inc
cmp
ja
insb
cmp
jns
jne
mov
call
clc
dec
mov
xor
sahf
mov
adc
add
js
clc
push
pusha
mov
xlat
and
xchg
into
cmp
adc
dec
mov
mov
ficoms
push
sahf
cmp
dec
scas
orb
daa
movsb
sub
adc
sbb
sbb
subl
mov
pusha
pushl
ljmp
dec
pop
adc
xchg
pusha
mov
rcrb
push
sar
stc
call
jne
ud0
bound
dec
push
std
mov
sbb
mov
ret
incl
mov
in
inc
imul
inc
sub
sbb
gs
sbb
jns
xchg
push
fidivrl
iret
mov
aas
int3
adc
fcomi
sbb
xor
inc
dec
mov
xor
add
jle
call
sub
leave
adc
clc
mov
inc
or
std
add
nop
mov
outsl
cmp
data16
fwait
and
sar
add
sbb
popa
xchg
lds
incl
add
mov
mov
or
adc
int
sar
cld
jg
cwtl
sub
mov
mov
std
sbb
jae
mov
inc
cmp
test
push
repz
cmp
xor
push
mov
mov
inc
sbb
hlt
cwtl
xchg
ret
or
and
gs
mov
das
rcrl
incb
push
push
or
pop
push
adc
std
call
dec
adc
mov
sbb
push
jbe
mov
adc
mov
dec
adc
stos
mov
dec
sub
aaa
test
je
movsb
test
dec
push
popl
mov
stos
mov
pop
mov
xor
push
lods
push
jo
adc
movsb
into
loopne
movsb
pusha
jg
push
or
pop
push
loopne
gs
xor
test
subl
xor
mov
inc
xchg
cld
sbb
mov
fdivrp
decb
mov
jecxz
adcb
push
sub
inc
cltd
or
xor
jo
in
cli
aad
inc
mov
movsl
aas
sti
or
dec
mov
or
sub
mov
cld
lahf
add
out
sbb
mov
cmp
jbe
mov
xchg
add
mov
divb
or
inc
das
and
outsb
inc
xor
jle
or
loopne
idivb
pop
add
data16
or
adc
sbb
bound
push
rolb
popa
dec
int
in
mulb
inc
xchg
xlat
stos
dec
clc
dec
xor
push
jg
adc
pop
jmp
push
cmp
fdiv
jb
push
cmp
incl
xchg
scas
ljmp
add
mov
lock
push
inc
inc
mov
leave
mov
nop
sbb
loope
out
divl
add
adc
jnp
pushf
test
dec
jae
rol
and
add
push
and
icebp
inc
mov
lret
dec
test
mov
pop
pop
dec
pop
loop
lcall
clc
inc
das
imul
inc
push
cmp
repz
mov
add
push
test
hlt
gs
sbb
incb
cwtl
or
add
adc
jmp
idiv
lcall
rcl
lcall
int
popa
movl
and
cmp
push
pop
jp
ss
imul
cmp
mov
add
push
loopne
dec
ljmp
dec
nop
adc
ficomps
je
jnp
mov
shrl
cwtl
mov
div
lahf
lock
cmp
xorl
clc
aaa
dec
decl
xchg
or
mov
pop
or
insl
fisttps
fists
pop
mov
lahf
daa
mov
ds
and
sbb
xor
sbb
mov
pusha
jnp
nop
or
mov
xchg
cmpb
dec
inc
mov
mov
xor
inc
add
scas
clc
mov
cmp
outsl
jg
test
push
test
notb
mov
outsl
xor
je
cs
or
incb
jmp
cmp
bnd
adc
xor
filds
int
aam
test
add
xchg
jmp
lahf
mov
es
cmp
jno
pop
bound
push
rolb
and
xchg
loope
mov
mov
stos
sub
cmp
sub
xchg
sbb
jp
xor
mov
fldt
mov
and
jmp
add
mov
adc
aas
xchg
dec
push
adc
mov
and
dec
in
pushf
mov
lds
jg
lret
icebp
lds
lods
fidivrs
pop
add
movsb
lcall
rorb
adc
dec
jp
inc
adc
mov
adc
push
mov
movsb
push
mov
mov
inc
jmp
sti
lcall
dec
in
ljmp
mov
sub
xlat
lods
aas
mov
cmp
insl
cmp
jl
jo
hlt
xchg
iret
push
or
jmp
mov
pushf
push
call
pop
popf
out
std
mov
imul
addl
or
pop
pushl
add
mov
pop
jb
xchg
mov
call
out
icebp
add
orb
cmp
and
jne
xchg
cmc
lods
or
sub
sub
shrl
xor
pop
inc
ret
ljmp
mov
insb
and
outsb
xorl
jmp
xchg
xor
lods
push
mov
sub
and
sar
dec
scas
call
cmp
ret
inc
push
or
add
jb
push
incl
aas
cmpsl
icebp
and
xchg
fdivl
or
inc
inc
push
push
nop
mov
cmp
hlt
dec
or
dec
mov
jo
push
dec
cld
call
sub
add
mov
jp
fwait
sub
jg
scas
mov
pop
es
adc
dec
test
mov
rcrb
pusha
jnp
mov
xchg
pavgb
push
pusha
cmpsb
dec
xor
in
cmp
xchg
jg
jl
enter
je
nop
in
lret
iret
decb
add
xchg
add
sbb
incl
clc
and
sub
bound
inc
pop
dec
dec
outsb
idiv
leave
mov
lahf
inc
pop
or
clc
dec
add
gs
inc
xlat
cmpsb
jae
movsb
inc
sbb
in
adc
in
push
cld
ss
ret
fwait
and
ret
rorb
orb
out
cli
inc
scas
or
add
inc
cwtl
rolb
ja
adc
xchg
out
adc
lds
adc
or
enter
cli
and
xchg
test
jo
and
jo
popa
dec
mov
inc
repnz
dec
and
jge
notrack
add
dec
mov
jp
loope
stc
ret
shll
xor
lret
out
imul
stos
js
mov
mov
push
dec
dec
push
pop
mov
or
inc
sar
sub
sbb
dec
hlt
cmpb
sahf
pop
jnp
mov
lods
cli
mov
jp
aaa
push
enter
cwtl
add
imul
loope
mov
or
stos
jb
mov
aaa
mov
jmp
xor
mov
mov
or
aaa
imul
jns
loopne
pop
jl
pop
cltd
push
jo
pop
ljmp
sub
adc
cmp
pusha
jmp
xchg
sub
add
push
mov
lcall
sub
decl
lock
or
push
lcall
pop
daa
aad
lds
les
pop
addb
call
std
shlb
jmp
in
decl
mov
push
add
push
add
jecxz
lods
das
add
mov
ret
ljmp
shll
nop
xor
and
ljmp
xor
mov
loope
add
mov
loop
ret
sbb
mov
jecxz
ret
fwait
mov
cmp
test
or
or
add
jl
into
sub
mov
fisttpll
push
sarl
sbb
or
and
mov
test
jp
in
or
out
js
daa
mov
call
mov
aas
bound
lods
xor
push
enter
adc
lcall
push
rclb
jle
sti
sub
int
xor
int
sbb
mov
shl
js
adcl
test
sbbb
loope
dec
xchg
ljmp
or
fistl
xor
push
orb
sbb
fwait
andb
inc
cmp
int3
mov
and
popa
cmp
ss
dec
fs
andl
testb
mov
testl
aad
sub
fwait
cmp
jmp
add
pop
aam
push
pop
pop
mov
aas
jg
inc
xchg
mov
add
ljmp
add
jbe
sub
fmull
fbstp
sub
ror
sar
xchg
loopne
mov
cmp
inc
adcb
inc
std
pop
into
pop
push
and
ljmp
aas
mov
lcall
jno
xchg
les
cwtl
hlt
int3
xchg
scas
mov
and
pop
les
add
pop
lods
mov
xchg
mov
and
mov
pushl
cmpl
cwtl
and
mov
cli
mov
jg
test
add
xchg
add
sahf
arpl
xor
in
cltd
jbe
mov
js
cmpsb
scas
nop
inc
outsb
std
je
cmp
cmpsl
xchg
loopne
push
mov
mov
mov
out
inc
sbbl
or
inc
mov
cmpsb
lcall
imul
aaa
mov
dec
and
add
sbb
cld
cmp
add
push
inc
and
or
call
pop
push
push
sbb
add
pop
das
clc
jmp
rcl
push
mov
adc
jle
inc
out
mov
scas
movsl
pop
outsl
xchg
sbb
cld
mov
lcall
mov
lea
sti
subb
or
leave
cli
jg
mov
xchg
xchg
lods
jnp
add
jns
pop
sbb
jnp
andl
add
icebp
cld
jl
add
mov
pop
mov
cmp
adc
and
sbb
in
jno
shlb
cmp
out
mov
mov
jecxz
mov
dec
sbb
iret
mov
lret
mov
pop
push
das
cld
pushl
mov
jno
pop
sbb
mov
cld
sub
fnstsw
add
jp
push
in
mov
dec
cmp
and
int
xor
mov
test
xor
pop
xchg
sbb
mov
pop
add
stos
lock
jge
add
jle
xor
cmp
decl
sub
fwait
adc
sbb
sbb
mov
inc
loope
xchg
jo
nop
nop
dec
fcmovnbe
fcomip
inc
xchg
pop
xchg
cmp
pop
dec
bnd
ret
xchg
inc
stos
mov
sbb
rorb
inc
dec
notb
mov
and
cmp
sar
cmc
sub
cwtl
cmp
mov
stc
pop
aad
push
stos
add
push
inc
adc
in
lahf
in
lcall
repz
sbb
and
xchg
aad
add
cld
lds
lock
fcomip
push
test
mov
fsub
jge
faddl
mov
pop
inc
sub
pop
add
outsb
hlt
pusha
lret
sub
xor
sub
xor
sub
stos
fistps
nop
icebp
push
test
fiaddl
inc
xor
pop
dec
call
lcall
pop
andl
int
in
fldcw
cmp
lahf
stos
pop
lock
push
dec
sbb
clc
aad
dec
jo
sbb
int
jmp
mov
lock
out
mov
out
lods
mov
mov
rcrb
xorl
jp
int3
flds
jle
popf
add
andb
jmp
andb
movsb
pop
xor
add
cli
mov
and
dec
lahf
jno
lret
fwait
mov
mov
cli
add
and
iret
jno
shl
ss
orb
add
push
shr
std
sub
fstps
je
lds
mov
xor
add
mov
mov
mov
add
sbb
fbstp
repnz
in
sub
int
stc
and
inc
push
push
ret
jp
outsb
daa
out
aas
and
pop
cmp
push
movsb
sub
shll
aad
imul
pop
or
test
mov
cli
mov
pop
add
mov
cli
clc
enter
inc
jmp
pop
clc
and
cld
sub
dec
test
add
aaa
inc
mov
dec
orb
cmp
adcb
add
in
jg
pop
popa
sarb
jo
leave
cmp
jbe
mov
sbb
lock
movsl
cmpsl
or
js
or
ljmp
sbb
pop
mov
adc
or
dec
inc
shll
subb
aam
jge
movsl
stc
cmp
jo
fwait
inc
sbbb
push
dec
repnz
cmp
mov
dec
loopne
lret
and
or
push
lcall
lcall
mov
jl
adc
adc
decl
fisubs
push
pop
stc
adc
and
pop
ds
sbb
stc
add
iret
scas
imul
ret
ljmp
clc
test
jo
test
mov
adc
pop
mov
fsts
nop
test
sbb
pop
incl
or
dec
add
test
les
fbstp
add
aam
add
mov
testb
outsb
adc
dec
jg
mov
pop
add
sbb
int
aas
and
mov
in
out
fwait
sti
stos
add
sub
mov
dec
frstor
mov
and
dec
jno
mov
mov
xor
pop
imul
lods
inc
cmpsl
sub
fwait
outsl
jl
ret
xchg
lds
or
or
hlt
in
adcl
jecxz
push
cs
jns
mov
inc
hlt
pop
rclb
cltd
insl
jge
shr
dec
incl
mov
inc
and
outsl
push
rolb
and
inc
sbb
jmp
pop
fld
sub
stos
push
inc
sbb
add
insl
mov
xchg
or
insl
mov
rclb
loope
fisubrs
mov
adc
mov
jb
roll
cwtl
addb
sbb
fists
adc
fisubrl
inc
xchg
mov
xchg
fmull
sub
int3
inc
jecxz
sti
scas
fdivrl
js
jo
sub
adc
and
inc
add
loop
jecxz
dec
jne
loopne
shll
sub
mov
mov
push
dec
cmpsb
lock
jle
mov
mov
cmp
add
or
in
jg
aas
add
stos
fsts
out
sub
pop
cld
call
and
mov
int3
jnp
loopne
mov
dec
sti
pushl
inc
pinsrw
shll
mov
popf
ljmp
jge
lods
pushl
or
xor
loopne
nop
mov
cwtl
cmp
dec
lds
ret
rolb
js
aam
cld
sahf
xchg
push
rorb
in
sub
sbb
das
pop
mov
mov
jge
ljmp
add
sbb
test
icebp
push
inc
icebp
mov
fbstp
jp
dec
sbb
or
test
lea
mov
inc
sbb
inc
loop
jnp
dec
pop
outsl
clc
loopne
incl
mov
notl
xor
andl
jle
scas
or
mov
ja
decl
and
jnp
cmp
sbb
mov
push
pop
pop
in
add
ror
jle
inc
dec
shll
fsubrp
xchg
sbb
movsl
pop
aam
loope
jge
enter
push
lea
cmp
ret
add
stos
jmp
popa
mov
add
ljmp
mov
sahf
dec
xor
push
fildl
inc
addl
mov
xchg
jb
sbb
xor
pop
sarb
ljmp
mov
dec
insl
in
jmp
xor
add
dec
mov
test
and
sbb
add
add
rcrb
roll
push
popa
mov
inc
and
test
push
or
xchg
adc
ds
xor
aas
add
addl
dec
and
loopne
lods
add
outsb
mov
xchg
lret
xlat
jp
xchg
loopne
loop
aad
out
push
aas
or
mov
jmp
inc
jae
mov
je
lods
mov
dec
sub
sbb
jo
test
shrb
mov
inc
cs
insl
push
sbb
inc
aaa
mov
jmp
std
fsubrp
mov
inc
jge
xchg
sub
jge
xchg
xchg
push
xor
ja
cmp
fistpll
mov
mov
cmp
dec
adc
outsb
jb
pop
sbb
in
pop
je
test
jns
pushf
ljmp
xor
mov
cmpsb
mov
adc
xchg
loop
mov
dec
mov
pusha
test
out
ljmp
sbb
mov
push
js
fsubrs
cmpsl
push
cltd
push
xor
loopne
mov
imul
ds
sub
push
insb
adc
stc
cmp
add
mov
add
inc
sub
imulb
fcoms
rorb
sbb
dec
inc
cmpsl
sub
inc
dec
cmp
lea
push
inc
stos
add
fcomip
aaa
add
lret
fs
and
ret
shrb
mov
add
and
xchg
dec
arpl
mov
scas
lcall
mov
jle
ret
rolb
fstps
inc
rcrl
leave
or
mov
call
imul
out
js
test
xor
pop
add
and
popa
lahf
sbb
dec
ss
inc
fistps
rcll
mov
sbb
lock
pop
xchg
push
xlat
aas
imul
push
and
call
sub
adc
fisubs
or
cmpsb
psubusw
jg
xchg
pop
push
fmul
andb
addb
addr16
adc
in
xchg
lock
push
cmp
outsb
nop
shld
add
shrl
cli
aaa
sub
mov
pop
negb
lcall
in
mov
sarb
les
and
leave
sti
icebp
lods
dec
mov
addr16
fldcw
mov
cmp
mov
mov
rcrb
adc
cli
mov
rcrl
imul
scas
push
push
dec
or
decl
mov
and
jb
pop
sbb
sti
cld
and
push
mov
lods
das
stos
lods
insl
jae
xchg
test
jno
mov
and
xor
cld
pop
bound
mov
fldl
or
pop
addb
or
xchg
mov
add
int
scas
fiadds
mov
push
andb
xchg
in
jnp
mov
cltd
mov
jns
mov
test
xchg
les
mov
mov
outsl
inc
lea
ljmp
push
les
add
loope
xchg
jne
jbe
insb
xor
pushf
push
lock
hlt
adc
mov
pop
pushl
pop
loop
clc
mov
inc
ss
mov
cli
rclb
scas
mov
mov
popf
cmp
mov
rorb
sbb
sbb
push
jb
and
jb
ror
jl
jbe
ja
mov
add
ljmp
sti
movsb
push
mov
dec
inc
nop
aas
call
lock
jmp
adc
call
ss
and
add
ret
jle
or
je
lods
leave
xchg
xor
add
cmpsb
into
xchg
in
test
mov
dec
add
sbbb
push
pop
xlat
push
push
fcomps
mov
fisttpll
push
or
mov
pop
or
pop
mov
mov
cmp
adcb
js
add
loop
add
and
ret
fiaddl
mov
pop
dec
add
shlb
mov
cmp
inc
cmp
jecxz
and
or
fwait
xor
mov
fstl
xchg
jg
ds
mov
lock
pop
mov
sub
xor
push
aam
ljmp
inc
and
ret
mov
dec
sti
insb
fdivrp
mov
pop
cmp
mov
call
pop
push
xor
mov
pop
adc
xchg
jg
pop
sub
and
fstpt
mov
lock
push
mov
adc
sarb
xchg
cli
adc
fadd
jl
rorb
es
test
enter
sbb
shlb
xor
out
jbe
sub
inc
push
lcall
cmpsl
ret
insb
cli
jg
mov
jle
jns
ret
dec
xchg
mov
ss
and
xlat
cmpsb
pop
pushf
pop
es
jg
add
mov
jmp
jmp
xacquire
cld
subb
call
fldl
add
std
out
clc
cmp
xor
das
insb
clc
test
jns
nop
and
sbb
pop
pop
clc
pusha
jo
sub
add
push
sbb
hlt
mov
mov
rcrl
add
and
xchg
adc
sbb
and
xor
sub
fisttps
loopne
xchg
and
or
push
cmpb
mov
dec
dec
imul
lods
and
scas
fiaddl
test
lcall
cmp
jle
pop
rcrb
or
in
divb
test
pop
add
sbb
je
ficompl
inc
sbb
nop
or
jmp
gs
cmpl
inc
ja
enter
or
or
stos
outsl
push
or
les
push
repz
sahf
inc
shlb
gs
pusha
sbbl
mov
roll
stc
add
pop
xchg
cwtl
inc
xchg
dec
adc
push
mov
mov
aad
dec
lea
jg
mov
popa
push
hlt
adc
sbb
mov
ret
mov
add
loopne
fs
in
decl
pop
xor
mov
mov
inc
imul
movsb
sub
loopne
gs
xor
pushf
ljmp
mov
adc
inc
cld
addb
fldcw
sub
or
add
xchg
or
bound
sbb
add
nop
and
push
jmp
dec
push
ficoms
rclb
aaa
dec
xchg
push
mov
aam
je
and
add
jne
mov
ficomps
or
and
lret
popf
xchg
and
out
adc
ljmp
mov
in
les
pop
stos
in
fcoml
add
pop
loop
scas
incb
jmp
pop
cmpsl
or
ljmp
mov
push
shrb
jl
scas
mov
pop
sub
inc
rcl
nop
mov
mov
cwtl
cld
xchg
add
push
out
jecxz
fisttps
pop
mov
jge
xor
loope
sub
pop
int3
loopne
loope
lret
xor
fdiv
add
adc
push
mov
fiaddl
pop
xchg
mov
fiadds
push
jl
jae
les
and
cmc
das
add
shr
lret
xchg
add
lahf
pop
mov
sub
dec
repz
sub
and
incl
pop
imul
and
cmc
xor
fildll
jl
xorb
mov
push
cld
cltd
scas
sbb
jno
mov
iret
mov
addl
pushf
mov
ljmp
and
inc
sbb
decl
add
int
add
mov
pusha
or
cmpsl
mov
jmp
add
nop
ljmp
add
jle
and
hlt
pop
test
ljmp
mov
push
or
fisttpl
popf
bound
mov
and
outsb
mov
inc
sahf
xchg
push
scas
ret
pop
loope
cli
inc
or
sub
dec
addb
inc
clc
add
loope
clc
cmpsl
into
fdivs
dec
lea
ret
add
inc
mov
sub
xor
int
aas
and
pop
jne
xchg
nop
fs
xchg
or
mov
mov
jp
dec
rolb
jg
fwait
mov
shlb
lea
cli
or
push
mov
cli
xor
loopne
incb
mov
sub
test
decb
or
jp
push
add
out
je
cmc
cmpsl
aam
cmp
cmpb
push
xor
in
fistps
push
ret
popa
idiv
add
xchg
hlt
iret
or
add
xor
sub
dec
push
mov
pop
clc
cmp
call
inc
arpl
lea
cmp
sti
or
add
jecxz
mov
or
or
mov
or
dec
sub
popf
out
adc
and
fwait
ds
sbb
fs
mov
subl
neg
fmull
call
mov
pop
ss
scas
cli
or
lret
inc
jbe
pop
shr
hlt
cmpsb
inc
ss
sar
mov
das
test
test
cmpl
push
out
mov
cmp
sbb
mulb
test
lds
sub
imul
sub
xchg
jp
loopne
mov
or
aad
das
push
test
mov
cmpl
movsb
mov
into
mov
inc
daa
or
fmull
cmp
sub
arpl
push
or
sbb
xchg
and
jle
or
inc
cwtl
cmc
aaa
sub
kortestw
push
adc
and
std
out
xor
outsb
mov
data16
pop
stos
or
xchg
and
insl
int
add
addr16
ljmp
ficompl
scas
test
jns
lahf
arpl
pop
aaa
pushf
xor
inc
push
js
shl
cs
inc
std
je
push
pop
loopne
inc
cld
outsl
addb
call
sub
add
mov
repz
js
add
xchg
push
std
push
mov
test
loop
int
pop
sub
rorb
jns
scas
add
sbb
bound
cmp
movzwl
aad
rorl
call
pop
and
adc
push
xor
mov
jl
leave
inc
xor
and
in
fcmovnb
jnp
and
testb
adc
mov
test
pop
adc
pop
stc
push
rcl
add
cmp
pop
jle
stc
and
stos
insl
jmp
repnz
repnz
inc
or
adc
je
mov
cli
mov
out
insb
jbe
cli
xchg
dec
fs
mov
mov
ret
imul
jmp
out
idiv
pushl
imul
mov
sarb
icebp
or
bound
sahf
ret
dec
jg
mov
popw
jbe
lods
loopne
xor
sarl
jg
jg
add
jnp
dec
mov
add
push
jle
incb
add
iret
mov
push
inc
mov
jo
ret
and
outsl
lret
xchg
jge
in
pop
int3
ljmp
sti
arpl
lods
cmp
sti
dec
jo
inc
and
xorb
sub
xor
cwtl
ljmp
mov
adc
sub
lcall
cmpsb
cmp
test
nop
test
add
jecxz
cli
add
jno
lods
incl
mov
fwait
add
cmpsb
mov
xor
sbb
push
xor
scas
sbb
push
jo
cmp
movsl
push
cmpb
xor
bound
or
shlb
inc
xchg
ds
push
or
adc
ja
inc
mov
rolb
add
adc
mov
mov
sbb
push
mov
stc
sbb
aad
adc
lret
or
mov
sbb
and
into
les
xchg
inc
scas
mov
and
out
mov
rorl
cmpb
nop
adc
adc
push
das
fsubrs
movsl
aas
xchg
shlb
xor
nop
dec
dec
xor
decl
cmp
scas
push
push
dec
leave
out
jb
add
xchg
sub
les
jmp
lret
rcll
push
jmp
cli
out
add
mov
movsl
paddsb
fs
mov
cmpsb
stc
rolb
pusha
cmp
xor
xor
jge
pop
inc
jge
not
add
adc
cmpb
xchg
mov
aas
push
icebp
mov
or
push
test
out
and
lret
fimuls
fistpll
into
es
es
outsb
push
repz
add
lds
adc
or
jae
jno
adc
push
mov
push
stos
push
or
into
add
jae
pop
dec
or
les
add
cmp
clc
in
push
aam
push
mov
stc
ret
dec
pop
test
mov
ljmp
insl
or
std
pop
xchg
jmp
xchg
popa
pop
test
dec
push
repnz
add
pop
stos
out
pop
add
cmc
mov
fistpl
inc
push
push
add
cmp
xchg
sbb
pop
inc
pop
je
loopne
sub
lcall
inc
shl
call
pushf
jns
jmp
in
push
dec
mov
movsb
popf
std
inc
sarb
decl
sti
cmpl
add
lds
cmc
sbb
repnz
adc
lods
xor
sti
rorb
sbb
bound
iret
dec
loopne
sub
dec
imul
add
push
cmp
push
or
call
lret
fmuls
mov
jmp
aad
xchg
test
pusha
mov
popf
subb
out
pusha
popf
inc
mov
orb
das
push
push
sbb
mov
mov
int3
loope
xlat
xor
jp
xchg
lret
adc
inc
sti
clc
add
cmpsb
pop
shrl
mov
cmpsl
mov
fwait
int3
cmp
scas
pop
adc
jmp
inc
add
cwtl
push
imul
jnp
mov
loopne
lret
mov
jmp
test
xchg
pop
adc
mov
repnz
mov
jae
push
or
cmc
das
lock
mov
lcall
xlat
pop
xchg
xor
pop
dec
xor
addr16
mov
cld
dec
mov
nop
push
adc
stc
mov
clc
or
sub
loope
fmuls
inc
icebp
pushl
shlb
filds
fcoml
cmp
nop
loopne
add
push
add
ja
clc
mov
xchg
insl
cmp
mov
or
test
mov
jle
xchg
jp
pusha
movsb
push
or
jle
idivb
mov
jb
or
movsb
xor
mov
aam
imul
adc
shrl
fisubs
xorl
add
or
and
mov
pop
call
push
loop
pusha
sti
push
aas
cmp
js
popa
mov
xor
xchg
sbb
push
cli
rclb
sub
add
ret
stos
mov
nop
adc
lods
push
xchg
rolb
out
repnz
mov
rcr
sub
test
cmp
or
test
pop
fs
fdivp
pop
movsl
loope
dec
lds
mov
xchg
iret
push
pop
call
push
cmpsl
dec
xchg
pop
pop
scas
fbld
lcall
test
mov
inc
clc
bound
cld
aaa
push
cld
ud1
xchg
sub
aas
loopne
dec
les
cmpsb
aaa
outsb
enter
test
ret
loopne
mov
cmp
jg
xor
ss
add
or
mov
xchg
dec
lcall
test
pop
dec
jno
sbb
scas
add
add
and
dec
fistpll
movsb
mov
xchg
jne
mulb
xchg
mov
int3
dec
adc
decl
lds
push
add
or
loope
roll
ret
mov
push
jne
sub
jo
pop
ljmp
popf
inc
cmp
andl
or
test
pop
inc
xor
mov
inc
jb
jmp
mov
adc
cld
scas
cmpb
sti
lret
imul
push
xchg
jle
clc
sub
xchg
divl
inc
or
js
dec
push
push
mov
mov
or
in
add
jmp
outsl
sahf
push
xorb
jmp
repnz
icebp
inc
mov
adc
jne
and
inc
dec
rcrb
adc
push
sbb
jp
push
popf
shl
es
std
incl
in
add
mov
push
push
movsb
adc
and
shr
jae
or
jg
pop
push
ljmp
mov
xor
push
inc
push
stos
mov
add
scas
push
xchg
fs
cld
mov
xor
rcll
or
and
out
pushf
xor
push
fbld
cmp
pop
mov
add
loop
jle
shlb
inc
or
mov
sbb
fldenv
shl
push
inc
xchg
inc
mov
or
add
test
pusha
ret
call
sub
loop
xchg
pop
inc
xor
lret
push
xchg
xor
pop
and
pop
icebp
dec
mov
sbb
mov
pop
adc
jmpw
add
outsl
lock
aad
jnp
mov
fnstsw
ret
lcall
sbb
jmp
mov
mov
sub
mov
lret
ss
xchg
movsl
or
call
xchg
rorb
popf
inc
subl
add
lods
cmp
cld
adc
fdiv
adc
jg
fisubs
into
loop
insb
xchg
inc
test
add
xor
mov
inc
aad
mov
xchg
sbbl
or
mov
aas
into
pop
decb
mov
mov
les
pop
icebp
lahf
sub
add
jae
sbb
or
ljmp
xor
out
xlat
in
sbb
es
mov
lret
ja
pop
push
popl
cld
ja
fistpl
shl
int3
push
jb
xlat
dec
push
or
rorb
and
adc
and
push
or
xor
and
push
daa
mov
adc
mov
pusha
dec
cli
sbb
popa
out
adc
push
dec
loope
xchg
jecxz
pusha
outsl
outsb
xor
mov
lcall
push
adc
mov
xor
mov
jnp
sbb
and
jp
stos
in
add
inc
dec
out
pop
add
lods
ret
call
pop
clc
lret
movsb
stos
icebp
push
call
sub
in
jg
or
xchg
scas
roll
add
cld
inc
dec
dec
addr16
xchg
mov
negb
add
add
inc
rorb
add
push
jbe
cmp
sbb
jmp
out
push
out
es
ja
movsl
fmuls
xor
jmp
test
leave
rcll
daa
fxch
fdiv
dec
inc
sub
pusha
mov
out
adc
out
in
rorb
leave
cmp
sub
mov
adc
push
sub
sbb
dec
or
aam
cmpsb
imul
scas
ja
rolb
jno
enter
inc
outsl
sbbb
sub
enter
push
cmp
mov
in
cmp
stos
pop
xchg
icebp
xchg
mov
sub
shll
cmp
cs
lcall
aad
jg
lock
jne
lcall
idivl
dec
jno
mov
mov
or
sbb
in
pop
test
jns
fdivrs
sti
lea
xchg
repz
add
dec
rep
push
lcall
daa
fidivs
mov
jl
fisubl
jne
das
sub
push
add
scas
mov
clc
outsl
ret
mov
add
insb
mov
add
inc
push
arpl
fs
mov
repnz
aaa
outsb
mov
arpl
bound
hlt
int
mov
xchg
jp
cmp
lock
xchg
mov
aam
lret
test
jmp
xchg
xchg
jb
icebp
aas
and
ret
add
add
or
xchg
cwtl
xor
jg
mov
or
add
dec
add
into
in
xchg
das
cmp
rol
imul
mov
pop
add
enter
rcrb
mov
push
jmp
adc
rclb
les
cmc
mov
testl
bound
jecxz
scas
sbb
xchg
cmpsl
cmpsb
stos
push
loop
shlb
cld
hlt
sub
jle
loope
add
pop
std
idiv
push
inc
insl
sbb
mov
fwait
mov
jg
ret
aam
sub
sbb
gs
jp
mov
xchg
push
xor
shrl
loop
or
test
hlt
decb
les
jmp
cmp
in
adc
sbb
loopne
add
cld
pop
jns
mov
mov
xchg
mov
jge
cmp
mov
mov
mov
test
int3
loop
mov
lods
fldl
lahf
scas
xchg
stc
sbb
add
orl
and
aaa
test
xchg
addb
fdivl
dec
or
decl
mov
movsb
lahf
dec
leave
fstpt
std
aaa
jl
fstl
jnp
mov
pop
out
jge
push
lock
lds
sbb
lcall
clc
pop
icebp
and
test
push
aad
add
sub
add
cmp
sub
les
cmpsb
mov
or
and
fistps
push
and
cmp
rcl
inc
mov
lods
ljmp
or
pop
pop
cs
cmp
enter
and
jecxz
call
inc
push
add
in
or
test
mov
ret
add
mov
insb
push
sarl
mov
inc
add
int3
ret
pop
lock
mov
dec
or
pop
rcl
add
dec
fsubrs
xchg
fs
pushl
push
mov
sbb
fstpt
ds
fildll
fistps
mov
gs
sub
into
std
push
lds
adc
sbb
int3
mov
fimull
inc
nop
sbb
aaa
lcall
xchg
add
pusha
dec
xor
pusha
fsubrs
push
sub
filds
loopne,pt
in
dec
in
ljmp
repz
movsl
inc
sub
and
push
mulb
arpl
popf
loop
out
mov
sbb
mov
jecxz
jg
or
inc
mov
inc
ja
scas
xor
addb
js
mov
sti
mov
pop
incl
movsl
shl
mov
fists
add
cmp
add
aam
add
roll
xlat
fmull
outsb
fdivr
loop
repnz
push
xchg
jg
aad
mov
aad
and
fimull
push
inc
cwtl
cmpsb
aam
mov
das
cli
dec
push
scas
xchg
ror
xor
pop
repnz
or
sub
mov
xor
inc
hlt
outsl
adc
fcomps
dec
mov
sahf
inc
xor
jae
xor
inc
adc
in
incl
clc
jbe
mov
dec
cmp
clc
dec
lahf
shrb
fcoml
inc
push
stc
int3
inc
add
xor
movsb
push
push
adc
push
fnstenv
lock
inc
mov
adc
fcomps
cld
jg
clc
cmpsl
out
push
test
sub
sub
xorl
sbb
ficompl
lods
cmc
dec
mov
push
and
xchg
pop
jnp
sub
or
cmp
jg
movsb
shlb
add
in
mov
pusha
jmp
pop
pop
out
mov
cmp
test
insb
insb
add
inc
adc
mov
lret
sbb
adc
notl
data16
xchg
add
into
mov
mov
inc
pop
sbb
jo
and
in
inc
pop
mov
push
inc
bound
icebp
mov
or
loope
pop
mov
clc
scas
and
scas
dec
bound
adc
cmc
jl
add
jecxz
ret
sar
ja
add
movsb
mov
or
lods
xorb
out
loopne
js
ss
or
pusha
shlb
aas
mov
cld
adc
sub
insl
push
sub
jg
ret
scas
dec
pop
pop
sbbb
lds
loopne
cmpsl
out
jg
es
dec
jge
sub
ljmp
add
push
and
movsb
test
sti
in
add
xchg
add
ret
adc
lcall
mov
in
mov
mov
mov
mov
rolb
loope
scas
ljmp
pop
leave
sub
mov
arpl
mov
sbb
pusha
mov
add
hlt
in
inc
add
cmp
mov
inc
or
cmp
imul
push
mov
mov
enter
stc
xor
outsb
and
and
pop
jle
lods
push
hlt
test
fmull
add
aad
jmp
pop
or
or
add
mov
shlb
push
pop
hlt
add
xchg
sbb
pop
rorl
cli
mov
loop
xor
cmp
jmp
inc
orb
call
and
das
rcl
ret
sub
mov
and
mov
and
or
jmp
pusha
xorl
and
inc
sbb
call
pop
pushf
push
push
pop
mov
dec
lods
dec
js
add
in
sub
fwait
das
inc
in
or
and
enter
mov
fbld
mov
inc
mov
jmp
xchg
sahf
push
sbb
jg
mov
adc
les
sahf
add
add
fdiv
push
into
sbb
decb
lock
sahf
push
mov
push
cmp
or
mov
push
shl
jmp
mov
mov
pop
scas
xchg
mov
sub
cli
insl
mov
fistps
dec
cltd
cwtl
jl
ds
pop
jecxz
lret
jle
xchg
cmp
xchg
push
fs
add
mov
push
clc
mov
aam
add
ret
jp
test
push
in
mov
stos
subb
shrl
and
and
inc
push
inc
je
fdivl
fnsave
es
ja
sahf
popa
inc
push
jmp
lret
mov
fldcw
aaa
push
das
mov
loopne
stos
mov
addl
mov
movsb
add
movsb
cmpsb
and
xor
lahf
adc
mov
xchg
xor
mov
mov
pusha
movsl
xorl
mov
xchg
and
xchg
subb
mov
mov
push
lods
fdivrs
inc
inc
adc
cli
push
das
cli
in
stos
push
dec
jle
and
ds
jmp
or
jnp
cwtl
mov
xor
adc
or
mov
jecxz
pop
pop
mov
gs
xchg
inc
dec
in
jbe
xor
aam
xchg
ss
jne
sub
push
cli
stos
outsb
push
lock
jmp
stos
and
add
sbb
push
add
fcmovnu
shlb
cs
jmp
pop
inc
jecxz
cs
inc
xchg
push
sbb
loopne
scas
xchg
push
jb
sub
pop
fbld
and
add
ror
sarb
dec
out
xor
sar
adc
in
and
out
push
sub
fisubrl
push
outsb
xor
scas
stos
clc
adc
and
or
and
js
jg
jl
push
sub
repnz
jge
xchg
xor
lock
xchg
sub
inc
xchg
icebp
incl
pop
adc
je
or
and
add
scas
pop
testw
stos
pop
inc
es
add
push
and
push
xlat
dec
add
adc
mov
adc
and
sub
dec
push
fcomi
xchg
pop
jb
leave
roll
mov
sbb
cli
notl
mov
lret
inc
push
fs
fdivrp
incl
cmp
and
sbb
add
jg
lret
enter
push
or
cmc
or
test
pop
jl
cmpsl
pushf
nop
loope
push
cs
push
xchg
xchg
loopne
sbb
inc
aam
addr16
mov
mov
mull
lds
outsb
inc
dec
mov
repz
scas
and
fimull
lcall
ds
jp
jl
imul
mov
and
ss
adcb
ret
dec
clc
idiv
aas
pushf
imul
mov
mov
sbb
xor
cli
pop
incl
xor
cmp
mov
push
stos
aaa
outsb
fsubs
fs
lret
mov
icebp
shl
incb
adc
clc
lds
pop
and
clc
mov
and
aas
fisubs
cld
jg
mov
sub
fimuls
mov
daa
movsl
movsb
add
lds
ret
jmp
fsubrs
and
push
incb
adc
jno
bnd
push
cmc
mov
sub
loop
lock
dec
lock
sub
test
jle
mov
xor
repz
mov
sarb
incb
clc
das
cmp
std
jl
sub
or
mov
addl
shrl
jo
outsb
push
or
add
jl
fwait
rcl
adc
lds
and
push
es
xor
ljmp
sti
cmp
roll
rorl
fisubs
bound
jmp
fwait
pusha
push
push
test
dec
es
rolb
cmpsl
daa
mov
and
dec
or
das
cmp
inc
xor
xchg
fcmovne
cmpxchg
std
or
fcompl
sahf
add
xor
loop
mov
cli
xchg
sbb
cwtl
dec
pop
jg
jl
aam
inc
les
mov
dec
push
shr
in
ret
xchg
lock
adc
push
hlt
aaa
lds
sbb
xor
dec
mov
ljmp
hlt
xchg
xchg
or
xchg
fidivrs
and
ljmp
orl
mov
pop
cmpb
imul
mov
push
cs
mov
aas
out
xchg
adc
fnstcw
xlat
stos
fucomip
sub
and
push
fdivrs
cmp
mov
ljmp
cmp
adcl
dec
sbbb
pop
int3
add
movsb
mov
inc
sub
test
cli
push
cwtl
mov
mov
jecxz
push
or
jno
jmp
es
movsb
mov
in
jg
scas
mov
mov
inc
jo
and
adc
pop
cmp
cmp
insb
mov
sub
add
aaa
lret
mull
xor
lock
jmp
mov
pushf
adcb
in
xchg
inc
or
imul
cmpsb
imul
sub
fcoms
or
jb
lret
hlt
push
cli
sbb
scas
mov
xchg
lds
das
jo
stos
cmp
or
xchg
out
daa
and
push
sbb
jg
xchg
push
ret
cmp
mov
mov
clc
call
and
mov
xchg
and
pop
dec
mov
loope
cwtl
out
bound
mov
imul
sbb
mov
xorl
pop
adc
push
adc
ret
dec
lods
inc
fisubl
repz
testb
mov
or
adc
out
sbb
aam
cmp
inc
add
mov
add
xor
push
fwait
cmp
jo
mov
adc
pop
nop
mov
dec
cmpsl
cmp
test
or
dec
push
loop
cli
adc
inc
mov
into
cmp
cmp
mov
pushl
pop
pop
pushf
cmp
xchg
fwait
test
decl
inc
or
adc
or
inc
out
outsl
add
mov
pop
jp
mov
test
andl
imul
add
push
fdivs
pushf
and
out
jb
cmpsl
out
nop
sbb
lods
pushf
pop
mov
mov
mov
sbb
aad
rclb
pop
imul
sub
mov
push
cwtl
inc
cmpsl
sahf
inc
mov
stos
scas
cli
mov
sub
mov
adc
incl
lods
and
sbb
fdivrp
xor
inc
xchg
dec
jae
repnz
daa
jo
loop
cmpb
xor
add
ja
pop
adc
icebp
and
stos
lds
inc
add
sub
stos
sbbl
pop
or
xor
xchg
mov
sbb
or
in
ret
lods
pop
bound
and
daa
xchg
clc
movsb
or
sbb
int
pop
js
pop
lcall
mov
pop
sbb
in
push
and
inc
sbb
adc
mov
xor
sub
mov
inc
jg
cwtl
js
sbb
popa
inc
in
hlt
add
loopne
das
sub
jp
mul
fsubrs
fucom
xorb
ds
shrb
loopne
add
dec
mov
dec
cmp
fidivrl
or
popl
inc
xchg
into
sahf
add
cs
mov
or
movsl
push
xor
push
int3
or
jg
iret
and
cld
in
push
addr16
jo
jg
hlt
inc
mov
sub
jno
add
ret
lret
roll
pop
jmp
imul
push
ds
sbb
test
cld
call
rorb
mov
mov
lock
ret
movsl
xchg
xchg
gs
dec
icebp
lahf
fiaddl
add
stc
lahf
cmp
pop
mov
cld
pop
and
push
in
dec
push
int3
add
dec
movl
aad
test
ds
adc
lock
clc
and
in
test
jl
rcll
subb
pop
sbbb
pop
and
xchg
stc
add
icebp
add
sub
jecxz
ja
jmp
xorb
es
sahf
dec
scas
pop
add
rorl
add
ret
add
dec
stos
sbb
jo
fs
lock
push
adcl
test
xchg
mov
aaa
std
sbb
mov
hlt
xlat
adcb
lret
mov
inc
out
ljmp
lahf
outsl
popa
mov
push
inc
mov
push
or
jb
or
adc
or
xchg
bound
pop
xchg
cmpsb
sub
lcall
push
xchg
lods
mov
hlt
jg
decl
xor
nop
pushl
add
and
aas
adc
ljmp
cmp
out
pop
sbb
clc
incl
mov
push
stos
into
in
loope
add
or
xor
sub
xor
out
test
adc
jae
lock
add
test
cltd
add
fsubrl
adc
pop
hlt
test
cwtl
add
jmp
shl
cmp
and
inc
push
cmp
xlat
add
adc
cli
pop
cmp
xchg
sbb
push
push
test
addr16
icebp
lds
push
sub
rorb
call
xchg
sub
sub
pop
adc
fiadds
fdivr
xlat
mov
lcall
test
dec
ss
shr
sbb
push
cld
xchg
test
cli
inc
xor
mov
cmc
jbe
loopne
cld
cmpb
pop
and
lcall
rclb
mov
insl
jo
rep
mov
mov
add
sub
adc
sar
mov
adc
stos
push
decb
fldt
cltd
or
shr
scas
push
and
cmp
sbb
outsl
cli
and
lret
jo
fsubrs
dec
jle
or
push
adc
and
je
out
outsl
lcall
add
ja
pop
nopl
xlat
jmp
dec
cmp
cmp
mov
pop
mov
loop
jl
cmp
xchg
xchg
mov
mov
dec
mov
mov
mov
fiadds
fsubs
xor
and
fcomip
jg
cmp
mov
push
and
inc
dec
mov
or
dec
pop
lds
aam
addr16
xchg
or
sub
mov
mov
dec
ficoml
and
jl
ret
bound
xchg
cmp
mov
lock
lods
fucomip
xchg
scas
or
fbld
stos
adc
call
icebp
or
rcrb
xchg
loopne
pop
lock
cmpsb
rol
mov
decl
push
push
loopne
arpl
push
loopne
out
fwait
dec
add
push
imulb
aad
xchg
mov
pushl
cld
add
xchg
insl
mov
mov
jp
sub
mov
sub
xor
fistpll
clc
sub
mov
pop
loope
clc
rolb
add
pusha
jnp
pop
clc
mov
inc
pop
ret
pop
arpl
sbb
add
cmp
and
xor
lcall
cli
test
data16
inc
or
cmp
or
xor
mov
jp
xor
xor
out
gs
sbb
cld
fs
sbb
sahf
push
shrl
int3
or
mov
cmp
push
pop
push
push
sub
add
mov
xchg
sarb
rcrb
mov
clc
pop
push
jns
xchg
jl
and
loopne
popf
dec
push
add
cli
dec
mov
sub
xchg
pop
xor
push
popa
xchg
jmp
pop
popa
jge
dec
or
adc
mov
and
xorb
rorb
dec
inc
inc
pushf
mov
repz
mov
shrl
jnp
mov
cli
scas
shrb
lock
jne
cmpsb
ljmp
sbbl
inc
fs
push
shll
imul
jo
push
xor
xlat
pop
inc
jmp
dec
mov
pop
sbb
ljmp
mov
mov
js
cmp
lahf
xor
cli
mov
jp
and
insb
xchg
cmp
xchg
push
jp
xchg
addr16
jmp
or
cld
out
imul
and
lahf
adc
inc
push
adc
adc
push
pop
ss
out
sarb
es
test
xor
xchg
lods
adcl
lods
add
push
add
xchg
mov
loop
mov
and
sub
xchg
xor
jb
push
add
pushl
in
inc
dec
inc
push
sbb
add
mov
xchg
std
loope
add
inc
in
sub
jbe
js
movsb
dec
scas
adc
fwait
xchg
or
cmp
loop
or
xor
cmp
push
out
sarb
inc
loop
das
sbb
sbb
insl
ret
adcl
cmp
or
lods
adc
lcall
pushf
loopne
loop
mov
lds
cld
sbb
int
xchg
mov
pop
dec
and
or
movsb
ljmp
mov
test
mov
add
and
push
loop
cwtl
sbb
inc
or
mov
mov
jbe
mov
je
and
icebp
nop
dec
inc
movl
jo
xchg
inc
lock
or
addl
mov
ja
ss
or
mov
fsubs
cmc
mov
pop
loopne
dec
or
cmovo
or
cmpsb
cmp
fiadds
and
rorl
clc
inc
add
out
cmpsb
add
bound
ja
ret
shll
add
lock
inc
in
push
inc
fstp
lods
clc
cs
jmp
int
sbb
pusha
cmpb
sbb
adc
add
fwait
out
les
lock
fs
adcb
or
sbb
sbb
adc
std
or
pushaw
pop
das
loopne
xor
mov
aam
lds
icebp
mov
iret
and
add
push
pop
mov
adc
sbb
mov
mov
les
and
ja
sbb
clc
shl
or
xchg
movsb
cmp
arpl
mov
stos
adc
cmc
push
or
add
dec
sbb
sbb
sub
mov
dec
add
lods
mov
out
mov
jp
inc
clc
pop
hlt
pop
mov
push
mov
dec
xchg
add
mov
fbld
add
and
iret
lds
and
rolb
mov
aam
mov
sub
adcl
fimuls
movsb
ret
mov
inc
ds
fdivr
lcall
lea
int3
repz
aad
inc
cmp
and
sbb
out
jp
mov
ljmp
inc
xchg
loope
push
loopne
cld
ret
sbb
shl
dec
adc
cld
adc
cs
arpl
incl
mov
in
jb
icebp
scas
outsb
jo
stos
pop
xchg
sbb
and
cld
sbb
adc
mov
ljmp
jmp
loop
movsl
push
pop
cmp
insb
loope
ljmp
push
push
xchg
push
shll
sbb
loopne
pop
and
push
and
mov
fcomps
rolb
or
lahf
in
mov
push
clc
lods
jae
aam
jg
call
arpl
mov
mov
aas
cmp
es
and
fldenv
xchg
mov
ret
cmc
mov
cld
ss
test
sub
sub
or
adc
xchg
out
push
fiadds
jmp
push
xor
imul
int
incb
lock
sub
paddw
in
test
ja
add
loope
out
xchg
pop
add
push
test
data16
dec
fcoms
add
fldl
push
dec
aas
insl
ret
cmp
jle
push
sbb
sub
stc
add
pushf
and
js
add
loopne
loope
cli
call
or
je
xlat
jp
push
fistpl
mov
das
fldl
test
and
push
and
pop
add
lcall
lcall
dec
add
iret
pop
loope
enter
orb
xlat
mov
mov
adc
pop
daa
mov
stos
andl
test
out
jg
aaa
inc
push
es
aam
scas
loop
sbb
push
mov
mov
aaa
push
mov
rcrl
scas
scas
clc
inc
pop
ss
outsl
sbb
adc
xlat
and
cld
or
cmc
and
pop
jo
or
sbb
adc
pop
add
lds
les
iret
dec
pop
shlb
jo
inc
jge
aaa
jo
jecxz
sarl
mov
add
or
mov
add
adc
pop
cld
loop,pn
ljmp
ss
mov
xchg
and
out
sub
loopne
mov
js
mov
or
fsubrp
cld
mov
orb
dec
std
pushl
pop
mov
push
push
mov
add
out
test
xchg
sar
movsb
push
decb
inc
mov
cmpsl
test
and
add
aaa
loopne
das
je
mov
mov
cwtl
jg
or
xlat
cs
add
adc
cmpsb
jg
in
sbb
push
mov
icebp
pushl
data16
mov
mov
mov
jno
inc
test
dec
xchg
lods
ss
mov
mov
std
into
xor
inc
push
test
pusha
mov
inc
cmpl
inc
sbb
or
fistpl
and
push
pop
push
dec
ja
cli
sbb
ret
dec
mov
jge
pop
xchg
gs
mov
push
cld
dec
cmp
add
aas
lret
loope
loopne
stos
mov
scas
jl
pop
xchg
aaa
das
cwtl
es
std
jg
cs
in
push
add
add
push
xor
outsl
aaa
or
int3
dec
add
loopne
and
test
cwtl
fdivrl
pusha
aas
sbbb
adc
mov
fists
fdivrp
mov
mov
push
mov
cmp
xor
pushf
scas
cmp
popa
mov
lods
jnp
push
call
mov
mov
ret
test
mov
mov
mov
jle
bndstx
shrb
sbb
jae
scas
pop
jg
je
adc
dec
mov
pop
jecxz
in
add
mov
xor
jae
and
ja
in
sub
add
outsb
jle
cltd
popa
sub
adc
xchg
xor
mov
mov
mov
pop
mov
and
lcall
sub
and
xchg
mov
push
rcl
call
mov
popf
scas
je
clc
pop
ret
xchg
mov
in
sub
decl
mov
adc
dec
cmp
cmpsl
out
inc
out
clc
cld
and
push
xchg
xchg
mov
icebp
mov
dec
in
sar
es
subb
xchg
xchg
mov
sub
enter
push
roll
aaa
or
xchg
xor
and
dec
nop
dec
mov
hlt
mov
push
inc
cli
cmp
enter
mov
jbe
jg
filds
push
and
jnp
or
ficompl
icebp
dec
popa
sarl
int
dec
push
scas
mov
imul
xchg
jns
dec
loope
mov
sub
push
inc
adc
jle
push
pop
fsubrp
lcall
mov
adc
aad
ret
inc
push
nop
or
jmp
jae
sbbb
pop
rclb
test
adc
xchg
stos
aas
es
push
test
inc
inc
or
divl
sarb
xor
test
test
mov
pusha
push
push
push
nop
loopne
ds
mov
or
daa
or
decl
cwtl
les
dec
mov
fnstenv
aaa
in
das
sbbb
dec
xor
sarl
and
sti
dec
jmp
nop
in
mov
mov
and
lock
ljmp
imul
out
add
dec
pop
fdivs
rclb
and
push
push
lcall
cmpsb
sub
sub
add
inc
or
decl
test
jle
mov
inc
cmc
movsb
lods
inc
cld
fistpll
push
and
insl
add
pop
subb
imul
mov
or
jmp
fistl
cmp
sub
sbb
int
pop
jp
daa
icebp
xor
pushl
push
daa
rorb
or
pop
add
mov
push
outsl
dec
jo
push
mov
test
cmp
mov
cli
lods
sub
mov
xchg
imul
cld
mov
pop
add
sub
add
fucomip
jne
jl
addr16
jbe
incl
mov
aam
inc
fs
sub
jecxz
lahf
lods
cmp
pop
jg
ljmp
xchg
fwait
pusha
push
and
push
jle
out
adc
ss
sub
les
iret
in
pop
dec
jmp
faddl
scas
jp
add
dec
inc
pop
aas
outsb
cmp
xchg
jle
insb
pop
iret
or
xlat
push
pop
add
fmul
xor
mov
xchg
xor
pushl
lcall
mov
addl
test
fbld
add
add
imul
fldl
lods
out
js
sub
sarb
mov
add
jmp
xchg
push
jp
push
pop
pop
std
call
sbb
inc
loop
mov
add
lods
call
repz
les
inc
repnz
lcall
inc
and
enter
out
mov
cltd
mov
mov
or
jbe
call
pop
pop
xchg
stc
inc
pop
inc
or
push
leave
ss
ljmp
lock
int
inc
enter
cwtl
lret
add
adc
das
adc
xchg
mov
mov
xor
add
xchg
inc
adc
std
testb
clc
pop
jno
jb
mov
lods
fs
adc
mov
jno
mov
inc
subl
loopne
dec
mov
test
dec
add
lds
mov
xor
push
sbb
dec
xor
test
and
scas
jmp
je
jbe
into
ret
dec
cltd
push
mov
push
add
adc
xchg
add
mov
movsb
pop
or
data16
sub
movsl
cmp
sbb
filds
dec
and
insb
repz
loop
movsb
shlb
adc
sub
loop
lahf
dec
or
les
mov
or
cmp
adc
add
cmc
inc
xchg
in
hlt
pop
subb
sbb
push
sbb
or
mov
push
lds
ljmp
sub
dec
out
out
loop
xor
mov
mov
jl
push
sub
jle
pop
nop
pop
mov
push
mov
or
pushl
adcb
inc
inc
pop
inc
mov
mov
adc
or
rolb
cwtl
sub
fdivp
mov
cmp
push
jmp
add
xchg
or
nop
daa
push
adc
jb
lret
add
push
jecxz
cmpsb
inc
lahf
inc
push
stc
xor
and
lods
inc
or
es
lock
jne
mov
cmp
dec
cld
inc
or
xor
stos
addb
mov
aam
jnp
lahf
jo
add
mov
mov
mov
addr16
clc
mov
loope
addb
or
cmp
dec
in
lods
push
pop
hlt
or
push
lock
cmp
addb
add
add
push
sarb
adc
xchg
lods
ljmp
repnz
dec
aas
lods
mov
imul
sbb
mov
sub
ljmp
adc
xor
cmpsb
setnp
jae
loopne
rcl
mov
jmp
in
inc
jl
stos
repnz
xchg
add
sub
in
and
xchg
push
sbb
pusha
and
push
rolb
xlat
popa
mov
cmp
mov
mov
and
mov
and
or
rcrb
test
adc
repnz
sbb
sbb
adc
ret
inc
shlb
lods
cmc
jo
xor
rolb
jbe
incl
xor
repz
mov
jo
cltd
aaa
add
mov
inc
cli
push
rorb
ds
imul
popa
add
sub
jle
mov
shll
clc
imul
push
pop
lds
cs
je
sbb
or
decl
jl
jp
lea
int
mov
insb
jmp
sub
xchg
sbb
pop
dec
xor
rorl
inc
xchg
xor
mull
int3
mov
mov
movsl
loope
mov
inc
shll
imul
xorb
jo
dec
sbb
cmp
and
fs
jg
sub
notb
mov
dec
call
adcl
dec
push
sbb
inc
adc
and
dec
les
jo
outsb
jo
and
add
mov
adc
sub
jmp
pop
hlt
popf
sbbl
mov
jg
hlt
sbb
inc
mov
int
and
sbb
add
imul
jg
stos
xchg
jle
dec
mov
lds
push
cli
fistpll
fcomps
mov
and
das
scas
clc
pushl
mov
roll
jns
ss
aad
sub
sub
addr16
das
loope
mov
inc
shlb
or
cmp
push
or
and
and
xchg
test
add
jns
inc
adc
mov
xlat
push
mov
ljmp
mov
rolb
cmp
pop
inc
jo
out
push
jle
stos
pop
sub
push
inc
mov
int3
out
mov
imulb
std
xchg
add
mov
divb
lret
sti
dec
jle
rcl
popa
andl
ror
jmp
ss
jge
and
aas
es
test
or
bound
fbstp
jb
sbb
sub
clc
stc
dec
and
pop
call
cmc
ds
push
fdivs
stos
pop
mov
xchg
xchg
adc
or
sub
sub
jb
sbb
ret
jle
pop
xor
leave
push
insb
hlt
sbb
pop
inc
dec
cmp
xor
pop
pushl
xchg
das
jno
jge
test
or
mov
cmp
insb
and
iret
mov
add
adc
inc
rcrb
imul
jg
push
test
ja
lcall
das
pop
cmc
cld
dec
lods
or
add
les
xor
xor
icebp
jg
sub
out
subb
stos
or
ljmp
cmpsb
lret
fadd
sbb
pop
push
dec
out
inc
fisttpl
sbb
cwtl
and
sub
mov
loop
sbb
inc
xchg
nop
outsl
xlat
jp
pop
dec
push
enter
inc
bound
mov
jmp
jmp
sub
int
inc
ljmp
xchg
push
mov
test
add
pop
cld
ljmp
inc
xchg
xchg
adc
out
add
dec
and
mov
daa
sbb
jns
cmp
sub
pushl
pop
and
rolb
iret
insb
mov
cli
out
sub
test
loop
push
bound
and
sbb
inc
push
outsl
clc
mov
sbb
add
rcl
in
mov
hlt
jbe
adc
lock
pop
mov
or
jg
es
xor
jmp
dec
add
lcall
or
cmp
cmpsb
fiaddl
ljmp
inc
daa
out
or
xchg
ds
adc
cmpsb
dec
mov
pop
sub
xor
xlat
add
dec
inc
stos
lods
decl
sbb
mov
rclb
cwtl
xchg
dec
dec
xor
ret
xor
rol
notb
adc
ffree
or
aaa
pusha
leave
arpl
mov
fsubs
aad
push
jle
les
adc
push
lods
mov
mov
jmp
std
jg
ljmp
mov
pop
aaa
mov
pop
rorl
es
pop
shrb
xchg
add
outsb
pushf
or
jno
cmp
mov
mov
nop
aad
or
sahf
ret
movsl
mov
jge
add
pop
call
call
adc
pop
test
loop
add
cwtl
jecxz
push
scas
and
sbb
test
int
cmc
adc
loope
cmp
and
pop
and
fs
data16
mov
stc
mov
call
rorb
mov
inc
into
test
adc
lahf
aaa
andl
std
pop
imul
ret
pop
add
xor
jnp
scas
and
pop
pop
scas
icebp
cltd
add
iret
push
mov
xorl
jg
jno
in
pop
bound
pop
movsb
inc
daa
std
inc
test
incl
lock
fsub
pushl
test
sti
push
add
enter
inc
filds
fisubl
sub
mov
shrb
pop
iret
mov
and
pop
insb
xor
xor
inc
inc
jle
loopne
ds
adc
sti
ss
jo
ret
out
adc
cmp
mov
pusha
jle
mov
scas
les
push
xchg
jg
fnsave
add
and
jg
call
sub
xchg
hlt
sbbb
test
push
mov
shll
mov
sbb
icebp
add
test
test
and
push
cld
sub
add
xor
xchg
lret
add
jo,pn
lods
out
clc
or
aad
cmp
xor
or
loopne
mov
daa
test
or
fwait
fwait
adc
fisubrs
loop
cli
pushl
nop
inc
adc
ret
inc
xlat
or
mov
lods
dec
push
call
inc
sub
add
inc
xor
add
fld
jg
sbb
rcr
mov
add
insb
add
mov
inc
icebp
sbb
xchg
mov
fidivrs
xchg
xor
push
aas
call
mov
jns
push
mov
push
adc
xor
add
pop
outsl
push
lahf
ret
pop
and
movsl
leave
inc
xor
inc
cli
xlat
rclb
or
ror
push
and
jno
inc
xor
pushl
pop
add
mov
inc
xchg
add
jecxz
scas
data16
mov
out
and
pop
push
ficompl
push
jo
mov
push
lds
sub
mov
fwait
popa
add
mov
ds
pop
or
jp
fdivp
dec
movb
push
ficomps
outsb
xlat
aaa
cld
push
in
push
sbb
add
ret
dec
test
jl
aas
sarb
roll
addl
rcrb
stos
nop
and
mov
jl
pop
fistpl
loopne
xor
sarb
sbb
cs
xor
scas
add
in
shrl
hlt
jg
or
mov
test
push
or
add
mov
decb
or
xchg
in
fstpt
cmp
es
pop
sub
testb
mov
jne
mov
popa
jl
mov
loop
test
mov
xchg
hlt
inc
call
std
jg
inc
fdivrs
cmp
sbb
push
push
inc
jbe
inc
dec
xchg
sub
clc
mov
push
and
fs
cmp
pop
and
loopne
sbb
sub
stc
adc
or
jg
in
xchg
mov
movsl
inc
arpl
pop
push
pop
decl
mov
xchg
enter
rolb
addr16
add
xlat
mov
sbb
movsb
cmpb
mov
emms
clc
adc
loop
pushf
and
and
pop
mov
stos
out
push
push
nop
idiv
incl
leave
dec
pop
int
xlat
cmc
sbb
cmp
sub
scas
pop
mov
ficompl
inc
sahf
aam
iret
xor
mov
loop
sbb
nop
push
or
sar
test
inc
adc
dec
push
jle
pop
testb
jg
je
sbb
add
dec
jle
inc
xorb
scas
and
mov
stos
cmp
adc
adc
mov
jmp
sbb
out
sbb
jl
inc
dec
imul
sub
out
rorb
dec
xor
xor
nop
pop
movsb
scas
bound
idiv
orl
jns
out
mov
mov
ss
dec
lea
fcmovu
jbe
aam
test
pop
adcb
addb
dec
inc
add
jle
cmp
and
or
popf
xor
add
xor
mov
das
ljmp
mov
sahf
dec
testl
push
xchg
loope
sar
mov
or
dec
push
ja
stc
push
push
mov
ds
imul
lahf
pusha
sbb
adc
orb
mov
sbb
movsl
dec
arpl
jmp
movsb
daa
mov
inc
mov
cmp
cmp
dec
shlb
repz
add
pop
aad
dec
fwait
loope
push
js
xor
add
sub
movsb
fwait
data16
adc
icebp
aaa
ficoml
je
ljmp
hlt
inc
or
ret
mov
cmp
add
jmp
and
push
pop
inc
mov
lock
cld
adc
pop
add
sti
pop
adc
cmp
fwait
call
insb
les
and
dec
dec
lret
jo
cmc
xchg
jb
inc
lods
add
fdiv
xor
adc
jg
das
sahf
mov
add
iret
cmp
pop
movsl
and
or
jg
jnp
cmp
std
or
jae
or
loopne
mov
stos
ljmp
adcl
mov
push
xchg
or
xchg
mov
in
xchg
jle
iret
sahf
xor
lds
xchg
inc
push
sub
aad
jno
jmp
jno
push
or
test
dec
pusha
test
std
repz
lock
out
jnp
push
mov
sub
sbb
and
out
xchg
outsb
or
cli
sahf
mov
lcall
nop
ret
aaa
insb
repz
push
fstpt
pusha
addl
dec
fisttpll
enter
orb
rclb
mov
enter
shll
inc
repz
popa
loope
add
mov
popa
popa
flds
jbe
xchg
and
dec
mov
and
push
cmp
imul
in
pop
or
cltd
sarl
shlb
cmc
sbb
js
sub
dec
pop
or
pop
push
ret
imul
jno
pushl
int
cltd
lcall
fstpl
dec
lcall
sub
add
mov
mov
js
pushf
lcall
add
or
sub
mov
sarb
pop
popa
pop
dec
gs
rcrb
out
leave
lock
sti
add
frstor
push
orl
incl
es
movsb
fsub
xchg
shll
loop
lods
mov
xor
sti
adc
lock
mov
add
jg
icebp
clc
sub
pop
mov
jb
cmp
adc
mov
add
mov
pop
cmp
and
loop
dec
sar
mov
and
inc
or
inc
shll
fsubs
sbb
cli
mov
aas
xor
jo
lds
push
push
outsb
and
movsb
push
cmpsb
jg
add
push
in
or
sbb
mov
xorb
sub
mov
jmp
push
or
mov
add
out
fwait
adc
pop
cld
outsl
xor
adc
sbb
mov
push
shll
mov
stos
test
push
incl
or
add
test
std
or
mov
hlt
cmp
incb
mov
mov
and
xchg
and
mov
and
or
mov
sbb
ds
call
cld
jo
xlat
insb
mov
pop
and
mov
jmp
push
es
pushl
gs
pusha
xlat
jmp
aam
mov
mov
jbe
clc
sub
fisttps
adc
adc
adc
mov
pop
inc
clc
lret
add
into
sub
mov
incl
jno
push
jge
js
and
popw
std
ret
loop
repnz
loopne
adc
icebp
in
into
add
inc
jo
stc
clc
inc
xchg
push
test
lret
jle
sbb
shl
daa
inc
xor
mov
adc
push
cmp
pop
shl
push
push
push
inc
adc
decl
jl
js
dec
adc
icebp
cwtl
mov
repz
adc
adc
bound
and
adcb
and
aaa
std
lcall
xor
mov
mov
xchg
das
cli
mov
jecxz
popa
and
add
mov
dec
addr16
call
add
add
or
inc
orb
in
ljmp
jle
add
adcb
mov
ds
sbb
mov
cmp
int3
popf
or
mov
sub
jae
xchg
inc
loope
sub
pop
push
and
rorb
enter
outsl
into
xchg
ljmp
pushf
cmp
lcall
fcomps
cli
fistl
lods
cwtl
int3
cmpl
xchg
sbb
pop
add
mov
add
pop
insb
insb
xor
lcall
xor
jp
gs
add
mov
stos
push
add
loopne
fidivs
fs
jo
repnz
xchg
xchg
cmp
or
out
pop
sbb
or
or
shl
inc
add
mov
das
pop
je
lds
cmpsb
das
and
sbb
add
loop
xor
loopne
sbb
mov
jmp
jbe
and
pop
xchg
pop
push
cs
mov
sbb
push
pop
and
pop
inc
fistpll
or
add
cld
insb
js
and
xchg
adc
mov
cmpsb
andb
hlt
dec
dec
dec
dec
dec
add
cmp
jo
mov
outsb
xchg
xchg
push
pushf
adc
xchg
mov
outsl
cli
out
push
imul
js
or
or
inc
mov
fistps
out
outsl
mov
and
sbb
icebp
ficoml
shlb
loopne
mov
mov
js
in
fcmovnb
out
subb
movsb
aad
add
test
pop
jns
add
mov
push
nop
or
orl
dec
cli
jg
mov
push
in
sbb
adc
push
ja
pop
and
mov
add
decl
aas
ret
int
xor
in
scas
and
mov
dec
movsl
mov
cli
jne
push
mov
adc
or
cmpsb
mov
xor
ss
incb
lock
orl
jle
pop
xor
add
dec
js
add
rorb
cmpsb
aam
pushl
lahf
addb
sub
xchg
add
xor
pop
mov
jne
and
incl
popf
push
push
data16
mov
sub
sbbl
push
adc
xchg
loope
xlat
add
dec
sbb
adc
push
push
std
sub
add
out
repz
or
add
sbb
or
lods
pop
adc
stc
inc
jbe
test
jle
das
cmp
push
ds
clc
jo
sub
cld
mov
sahf
js
xchg
hlt
mov
or
lret
jno
lcall
orb
call
pop
orb
mov
rol
jge
sbb
notb
cld
jg
cmc
ljmp
int3
and
lods
and
enter
decl
push
jo
stos
aad
or
xorb
aas
aam
lret
sbb
insl
adc
ret
xchg
push
out
and
or
jg
decl
lods
cmp
jns
cmpsl
lcall
leave
adc
das
fsubs
testb
push
inc
ljmp
iret
xor
sti
push
icebp
adc
fiaddl
push
test
js
xchg
dec
jle
cltd
js
call
fisttps
dec
or
shl
xor
enter
std
call
int
inc
mov
or
imul
sub
adc
mov
pop
test
or
sub
aaa
mov
xor
insb
aam
sbb
stos
jmp
mov
add
outsb
mov
sbb
insl
pop
or
shll
jnp
adc
rcl
lock
cld
mov
mov
mov
jne
in
fwait
clc
push
cmp
sar
push
fiadds
cmpsl
lcall
fs
fmuls
add
add
xchg
loop
insb
lret
fsubs
xor
xor
cld
adc
add
insl
out
inc
dec
push
ret
je
clc
push
inc
cwtl
inc
sar
pop
loopne
sahf
sub
adcl
or
repz
ret
stos
and
mov
add
lcall
mov
lret
cmpsl
popa
imul
out
sub
lock
mov
add
cli
js
imul
scas
pop
jne
ljmp
sbb
mov
push
mov
jg
add
stos
leave
adc
xchg
add
or
fisubrs
outsb
add
ljmp
pop
scas
xchg
data16
andl
ss
rcrb
sub
dec
fisttps
idivl
mov
push
loopne
mov
addr16
add
cld
cmp
stos
lds
sub
add
lret
fdiv
push
cwtl
ljmp
pop
mov
ret
push
std
fisttps
movsb
jns
shr
push
stos
loop
or
das
push
test
sub
cmp
xor
nop
dec
pop
push
push
xchg
lahf
clc
scas
inc
cwtl
inc
add
insl
iret
ret
in
icebp
mov
cmc
jg
ja
mov
cmc
je
dec
int3
pop
sbb
lret
add
cmp
loop
or
ljmp
dec
add
loopne
call
std
ds
push
andl
and
push
loopne
and
push
jle
pop
xchg
and
push
xchg
sbb
inc
or
call
push
inc
push
testb
jb
hlt
push
sbb
add
movsb
xor
daa
pushl
dec
es
cmp
jg
xor
mov
and
lret
fstpt
clc
cmpsl
inc
int
cmpsb
or
sbb
inc
inc
stc
cmp
daa
mov
or
popa
cld
xor
ret
cmp
clc
xchg
push
hlt
mov
inc
and
push
fadds
mov
jmp
in
adc
cmpsb
adc
sbb
mov
fucomip
call
bound
adc
icebp
negb
sbb
pop
mov
push
pop
int
pop
adc
xchg
adc
mov
pop
clc
decl
je
add
dec
enter
adc
mov
lock
inc
push
inc
out
cld
repz
push
cmp
xchg
mov
dec
or
adc
mov
add
xchg
mov
and
ljmp
aam
inc
cmp
sti
jnp
out
out
ss
out
ss
inc
jp
xchg
into
xchg
dec
lea
mov
add
arpl
add
outsl
push
ja
push
bound
sar
and
or
dec
arpl
adc
pop
pusha
out
leave
and
cmc
add
push
xor
cli
out
cwtl
or
cli
push
in
in
dec
out
sbb
test
jmp
jecxz
ja
inc
and
mov
fstpl
or
call
push
cmpsb
inc
cmc
iret
dec
lods
inc
cld
call
sbb
mov
xchg
fucomp
inc
shll
inc
out
and
stos
shll
or
rcll
les
dec
pop
lahf
es
aam
push
add
decl
add
mov
into
int
xchg
xor
lahf
inc
fmull
jg
mov
inc
repz
ja
addb
and
cltd
aaa
movsl
shlb
test
sbb
call
cld
sbb
jmp
add
jo
add
fdivr
mov
mov
push
sub
push
ja
inc
jne
and
cmpsl
add
mov
outsl
sti
sub
mov
sbb
out
cwtl
sahf
jecxz
sub
aaa
pop
inc
push
xor
pushf
dec
cmp
dec
push
dec
adc
bound
sar
call
hlt
insb
and
xchg
dec
in
xor
cmp
and
adcb
mov
xor
mov
lods
stos
sbb
pop
mov
or
sub
inc
daa
sub
add
adc
mov
ret
fsubrl
cmp
or
pushf
fldenv
mov
call
addr16
mov
shll
xor
push
fwait
xchg
loopne
or
cli
push
pushl
sti
clc
dec
stos
jge
jbe
jg
push
outsl
mov
loope
or
popa
fidivs
push
xor
fldt
out
xchg
lcall
imul
js
daa
and
sub
adc
xor
jmp
lcall
add
decl
mov
loopne
inc
popa
mov
hlt
jg
jbe
adc
xchg
jo
jae
lcall
add
xchg
data16
push
add
jno
adc
mov
dec
xchg
and
xchg
pop
outsl
xchg
add
inc
adc
ljmp
dec
add
mov
xchg
daa
add
daa
jb
or
dec
jl
jns
pop
jecxz
mov
pop
push
pop
add
push
sbb
decl
sbb
pushf
mov
sub
add
sarb
push
add
scas
clc
mov
ss
mov
push
pop
inc
push
sar
add
lock
call
in
outsl
fdivrp
push
out
jle
test
fsubrs
push
in
mov
mov
cmc
xchg
fists
add
out
jno
sub
ds
jns
es
xor
adc
imul
jle
faddp
loop
call
xchg
sub
sub
test
test
out
outsl
fstpt
mov
mov
pop
popf
push
sub
pop
cmc
decl
sbb
mov
jo
ljmp
sarb
in
ret
cli
ds
or
sbb
gs
lcall
dec
dec
mov
stos
inc
fisubs
sub
sub
pusha
pop
fsubl
mov
adc
mov
js
or
or
das
repz
dec
scas
cltd
scas
xor
leave
xchg
dec
adc
pushl
add
jge
sbb
jmp
in
pop
arpl
fildll
scas
repz
dec
insb
pop
pop
add
rclb
sti
sub
or
scas
xor
repz
pop
cmc
xchg
dec
pop
push
pop
cs
and
and
fimull
inc
xor
pop
sub
dec
dec
add
ljmp
loopne
jae
lock
jns
daa
sarb
jl
lcall
pushf
and
inc
addb
js
fiadds
lds
sbb
add
mov
repnz
push
xor
lds
fimuls
adc
xor
jle
jle
imul
cmpsl
push
lds
into
lock
loope
movzbl
inc
cltd
daa
leave
mov
ret
ja
insl
jb
push
mov
mov
dec
mov
xlat
mov
out
clc
pop
mov
cmpsb
das
dec
cwtl
and
or
adc
and
sbb
add
pop
adc
or
sbb
lcall
add
adc
dec
jge
xchg
fcomi
or
mov
popa
test
out
movsb
test
repz
incb
add
dec
pop
shlb
test
pop
push
xadd
je
adc
cmp
sub
aam
and
xchg
xor
xchg
cmp
xchg
and
aam
insl
test
jmp
jne
sub
jle,pn
in
sub
lea
inc
and
pop
dec
mov
mov
frstor
jo
cmp
dec
lods
pop
nop
enter
ljmp
movsl
and
or
incl
aas
bound
or
incb
cmp
add
inc
mov
cmpsb
jle
pop
and
mov
jo
xor
lock
fcoms
and
xchg
fldl
sub
mov
xchg
pop
cld
scas
add
cmp
fbstp
int3
fldenv
adc
dec
shlb
push
ret
sub
scas
aam
or
push
outsl
xchg
add
fsubl
mov
cmp
jmp
inc
adcb
inc
lods
mov
jnp
test
hlt
out
ljmp
insb
lods
repz
cwtl
push
push
pushw
add
mov
nop
mov
neg
push
xchg
sub
fdivl
dec
stc
rcl
incl
push
add
bound
repnz
cmpl
lds
shl
add
inc
add
xlat
cs
popa
and
add
pop
out
xorb
clc
pushf
mov
pop
sub
jbe
shlb
lds
add
dec
ds
xchg
sti
sub
leave
xor
sbb
mov
rcl
clc
aaa
std
dec
jo
dec
test
inc
out
push
fisubs
jo
inc
bound
add
stos
mov
leave
call
push
xor
and
cmp
push
mov
pop
fs
jo
test
sbb
inc
dec
lods
mov
shl
sbb
cld
mov
movsl
sub
arpl
pushl
test
push
or
inc
test
and
nop
inc
lcall
js
mov
inc
or
mov
dec
cs
fdivrl
jbe
push
push
loop
push
iret
cld
xor
xorb
ljmp
fcos
test
je
cli
aas
je
add
int3
fisttps
and
sbb
adc
bound
loopne
and
add
sbb
leave
sar
movsb
das
push
push
xchg
add
fildll
lahf
fs
and
dec
imul
lahf
into
xchg
addr16
std
in
pop
out
dec
xor
push
push
sub
outsl
cmc
lcall
mov
xchg
add
lock
cmpsb
out
cmp
ljmp
stos
and
dec
test
je
inc
sahf
dec
push
sarl
pop
cmc
adc
insb
rcrl
test
mov
ja
shrl
das
adc
les
mov
sub
cmp
pop
and
inc
xor
les
and
sub
jae
adc
decl
ret
cmpsl
push
int
and
add
push
decl
sub
cld
jno
test
xchg
xorb
js
pop
and
mov
insb
out
insb
pushf
out
addr16
movsb
push
mov
in
adc
inc
aam
shll
ljmp
adc
sub
adc
mov
add
xor
mov
lock
adc
push
adc
cli
mov
mov
scas
pushf
jp
mov
jle
adc
add
adc
sub
pop
jmp
je
jo
mov
mov
fsubl
or
add
incl
jl
mov
incb
add
push
in
aam
mov
loope
loope
dec
and
aam
adc
mov
push
pop
push
add
testl
sahf
ja
hlt
fstps
out
movsl
add
dec
mov
loopne
orl
xchg
lock
adcb
fdivr
add
cmpsl
mov
sbbl
xor
add
and
sub
mov
add
sbb
movsb
mov
pushl
in
or
aaa
xorl
dec
mov
stos
xor
mulb
je
mov
pusha
dec
mov
jl
fwait
mov
into
loop
mov
outsb
pushf
fcmovbe
loopne
lods
aaa
xor
and
punpckhbw
out
aas
jp
and
addb
sub
movsl
add
and
daa
mov
les
test
ljmp
outsl
cli
fidivrl
mov
test
dec
daa
xchg
push
or
ljmp
dec
pop
fsubrl
jg
jbe
dec
push
mov
adc
inc
dec
js
fcoml
cmpsb
pop
jo
in
sub
addb
sub
pop
arpl
add
cmp
enter
out
insl
adc
xchg
lock
add
push
and
jne,pt
inc
cmp
push
or
sub
inc
inc
les
and
movsl
inc
sbb
sarl
add
add
sbbb
push
pop
or
mov
outsb
repnz
loope
mov
test
roll
mov
inc
fldl
test
lret
push
cs
or
push
push
sarb
nop
fcmovu
rorb
xor
xchg
sbb
adc
cli
movsl
pop
cmp
aas
ret
pop
test
stos
inc
cwtl
dec
xor
incl
addps
adc
lea
adc
outsb
jle
push
sub
lock
sbb
lcall
sbbl
negb
aas
mov
add
push
loope
sbb
mov
pop
bsr
pushl
sbb
sbb
fsubrs
enter
sbb
test
cld
pop
push
jns
lods
pop
ljmp
lcall
insb
call
inc
mov
popf
dec
rcl
rcr
xor
adc
stos
and
lea
addb
inc
sub
pushf
rorl
jecxz
jb
jg
lea
in
mov
lcall
gs
in
and
mov
dec
enter
stc
push
std
pslld
lock
hlt
xchg
cmp
icebp
mov
jge
je
or
lock
idivl
cmp
mov
test
dec
fwait
call
and
jo
aaa
pop
mov
add
imul
decl
sbb
xor
dec
jecxz
mov
insb
inc
mov
mov
lock
mov
xchg
pop
xor
outsb
inc
lret
cmc
xor
fidivl
arpl
jg
cld
mov
dec
scas
sbb
xor
adcb
jnp
clc
addl
ljmp
push
ljmp
or
test
push
mov
aad
fbld
add
je
scas
js
loopne
fisubrl
push
cli
call
jne
push
inc
xor
sub
jmp
and
and
add
hlt
je
xchg
lods
cwtl
cwtl
xchg
xor
mov
rclb
dec
pop
lods
pop
addr16
mov
sub
dec
jnp
and
cmpsl
lods
xor
sub
mov
sub
and
dec
jg
cmp
loope
dec
adc
ret
loop
inc
mov
insl
jbe
or
cli
mov
mov
out
adcl
test
loop
push
out
xchg
sub
jns
bnd
sahf
pop
add
mov
mov
jmp
test
loopne
out
das
clc
shrb
xlat
xchg
or
push
lret
sbb
xlat
je
mov
imul
movsb
les
dec
sbb
insb
addr16
push
mov
adc
mov
mov
sbb
add
in
hlt
push
nop
mov
popa
lods
mov
mov
aaa
inc
adc
sbb
loope
dec
cmc
call
scas
and
cmp
sub
push
jecxz
sbb
mov
push
ret
call
pop
std
mov
xchg
mov
mov
add
jecxz
and
stos
cmp
aad
in
jmp
pop
out
mov
in
adc
push
xchg
test
lock
add
fidivs
cltd
icebp
iret
add
xchg
cltd
std
imul
ja
sub
mov
loopne
jmp
mov
sbb
call
jno
fdivs
mov
jns
shll
call
and
xchg
enter
clc
in
in
les
add
jge
dec
xchg
jg
cmp
aad
pop
cwtl
jb
jecxz
aaa
aad
loopne
decb
fcom
mov
andb
mov
fbld
imul
mov
dec
push
push
lea
cld
pop
jg
bound
or
cmpl
dec
mov
nop
pop
sbb
jb
push
xchg
or
or
mov
ljmp
pusha
movsb
pop
adc
test
mov
jb
fcoml
fstl
xor
hlt
mov
cmp
add
mov
mov
js
cmpl
jmp
or
shll
js
jb
mov
xlat
mov
push
aaa
sbb
cli
cmp
data16
rcl
lods
mov
loopne
stos
mov
add
xchg
add
outsl
ja
rorl
scas
testb
das
sub
push
popf
cmpsb
lcall
enter
inc
into
or
xorb
mov
dec
or
pusha
push
jmp
and
cli
das
inc
inc
pop
push
sub
ja
cs
or
popf
push
adc
xor
pop
add
mov
cmc
movsl
push
aad
std
cmp
fiaddl
push
xor
pop
cmpsl
and
adc
fcomps
outsl
mov
xchg
push
roll
ret
mov
jmp
aaa
popf
std
stos
das
movsl
adc
addb
sbb
xlat
jb
sub
xor
mov
int3
inc
call
pusha
lea
ret
inc
data16
clc
mov
mov
cmp
aad
mov
adc
negb
mov
adc
push
cld
add
adc
inc
cld
data16
sub
push
popa
push
les
sub
mov
shll
std
test
mov
iret
mov
xor
pushf
outsb
adc
sub
loopne
sbb
aaa
xchg
push
lock
adc
dec
push
add
pop
or
sub
and
jg
cwtl
into
cmp
fidivrs
bound
inc
sbb
hlt
inc
rolb
add
call
jae
sahf
sub
sbb
xor
sahf
or
movsb
push
repz
pop
sbb
mov
fists
ret
arpl
and
and
aas
inc
push
and
notb
and
popf
jbe
enter
andb
pop
mov
inc
cmp
test
je
mov
add
jecxz
mov
inc
inc
mov
cli
pop
adc
loope
push
dec
jo
xchg
add
pop
jg
adc
mov
push
xchg
in
sar
mov
adc
stos
lods
sahf
cmpsb
jae
clc
mov
xchg
jg
lea
test
or
std
addr16
inc
push
sub
add
les
dec
mov
movsl
pop
into
ret
mov
std
pushf
add
repz
and
call
sbb
push
ficompl
popf
lret
call
call
or
dec
bound
mov
inc
cmp
test
xor
mov
movsl
movsb
jp
adc
jmp
jmp
xor
sbb
bnd
addr16
fimull
fucomi
jns
or
inc
sbb
xor
pop
out
mov
call
and
push
leave
pmaddwd
stos
movsb
adc
inc
sub
push
outsl
test
incb
xorl
mov
add
stc
add
sbb
roll
or
xchg
mov
loopne
jg
push
mov
mov
outsl
xor
mov
pushf
loope
add
fstl
clc
inc
rcrl
jb
icebp
or
call
nop
xchg
adc
sahf
in
mov
xchg
or
adc
add
add
sbb
xchg
dec
repnz
pushf
sub
mov
cld
scas
add
fidivl
xor
pop
inc
sahf
inc
mov
loop
cld
cmc
cmpsb
ror
sub
mov
xchg
es
inc
sub
push
xchg
mov
add
inc
mov
jbe
imul
leave
xchg
mov
je
rcll
add
popa
sub
mov
adc
clc
aad
sbb
jl
mov
inc
jb
ret
cpuid
out
hlt
adc
cwtl
sbb
test
push
int3
pop
fdivr
sbb
push
inc
fistpll
xorb
pusha
jp
ja
cli
ljmp
add
sub
outsl
add
sbb
add
push
les
out
pop
scas
loop
sbb
cli
stos
mov
call
es
mov
adc
cmp
fs
add
leave
xchg
mov
testl
pop
inc
add
xlat
es
cmp
repnz
sub
inc
jecxz
sub
roll
hlt
xlat
or
and
mov
js
paddusb
ret
fisttps
dec
lea
push
insb
loopne
ljmp
adc
or
addl
dec
pop
je
movsb
mov
and
clts
push
cltd
mov
mov
enter
mov
lock
scas
fs
and
jmp
shlb
cmpsb
pop
add
mov
and
jo
add
sbb
cli
jg
lods
mov
sub
sub
mov
xchg
jmp
cmp
dec
lods
lret
mov
pop
sub
dec
sbb
stos
add
adc
fistpll
in
fmuls
mov
roll
hlt
movsb
sbb
ficoml
repnz
mov
xor
cmc
dec
and
jp
int
je
lds
shrb
mov
push
out
das
pop
push
mov
push
dec
nop
push
je
xchg
sti
cmpsb
jp
decl
lods
adc
inc
sub
scas
pop
and
fildll
push
insb
imul
lods
mov
cmp
inc
xor
or
test
cmp
xchg
mov
or
push
fwait
mov
imul
xchg
aam
imul
inc
jnp
aas
or
pop
mov
inc
mov
paddsb
adc
fistpll
mov
or
xlat
roll
push
push
stos
and
mov
iret
cmp
jno
pusha
int3
daa
xchg
cmpsb
in
inc
fadds
adc
xor
mov
pop
shll
outsb
jp
fiaddl
lret
add
jmp
push
je
hlt
and
push
inc
push
ror
xlat
adc
push
sub
mov
inc
and
das
addb
push
or
xor
decb
fisubl
inc
dec
dec
sub
mov
push
mov
insb
pop
sub
inc
clc
fildll
aam
and
fisubrs
xchg
mov
lods
insl
in
mov
xlat
push
rorb
mov
mov
icebp
mov
adc
fnstenv
clc
pop
out
cmc
cmp
mov
push
out
xlat
or
fwait
test
lret
pop
mov
add
loopne
pushl
into
sbb
rcrb
xchg
push
std
pop
cli
filds
jecxz
or
ss
dec
cld
das
xor
loope
iret
mov
and
dec
sbb
inc
clc
in
push
out
jnp
jbe
cld
cmp
add
jmp
sub
pop
cmp
out
iret
andb
xor
ret
jge
jne
or
pop
jg
ljmp
lret
xor
test
outsl
in
and
or
out
mov
xchg
push
shlb
ss
nop
mov
lahf
adc
dec
sub
add
inc
xchg
pop
mov
xchg
jp
pop
xchg
aas
js
mov
jo
aad
rclb
xorl
fbld
js
mov
adc
lret
inc
jne
jmp
insl
lret
cmp
pop
inc
mov
add
mov
cmp
mov
dec
cmp
dec
cmpsl
dec
sbb
and
dec
mov
inc
addl
jl
outsb
mov
mov
sar
jg
lock
jecxz
popa
sub
cmp
push
sbb
xor
add
cmpsb
cmp
xor
jl
pop
push
add
pop
push
decl
scas
cmpsb
add
sbb
sub
in
jmp
loopne
pcmpeqw
lret
jmp
cmpb
out
popf
sbb
loope
jbe
pusha
add
loopne
xchg
test
mov
inc
lcall
rcrl
jecxz
mov
xchg
sub
mov
pushf
lods
jno
out
push
in
push
notl
jecxz
fmuls
add
push
pop
cld
shl
cmp
popf
icebp
outsl
mov
or
pop
dec
cmc
fsts
loope
fisubrs
mov
cld
push
aas
dec
dec
rolb
rol
es
sbb
pushfw
pop
test
repnz
loope
int
sbb
jo
loop
xchg
and
iret
sbb
or
int
notl
loop
xor
pop
add
iret
push
ljmp
rcr
pop
test
push
and
jb
push
add
jg
jno
or
ficoml
jbe
addr16
loopne
mov
gs
lods
scas
adc
or
sbb
outsb
repz
mov
in
cs
mov
push
int
sbb
bound
loop
decl
inc
mov
add
or
sub
int
xor
mov
add
rorb
cmp
sar
stos
pop
popa
pop
sub
out
xor
push
xchg
xchg
frstor
add
mov
cmp
and
push
mov
movsl
jg
addr16
xor
adc
pop
loopne
outsl
fwait
testl
fs
decl
pop
pop
sbb
mov
stos
mov
add
test
mov
push
mov
int
cmp
mov
push
call
sub
stos
loopne
scas
sub
jno
and
mov
cmc
callw
nop
pop
or
xchg
inc
inc
movsb
and
dec
mov
dec
mov
ljmp
lret
cmp
decb
in
in
clc
stos
inc
jbe
test
jns
nop
cmp
es
cli
lcall
mov
add
and
sbb
mov
adc
push
dec
data16
mov
inc
jmp
and
xchg
out
mov
popa
and
push
fwait
xchg
addb
dec
std
testl
pusha
out
or
push
sbb
push
and
xor
xchg
push
aaa
test
sti
icebp
add
into
inc
mov
popa
jnp
shlb
in
add
xor
mov
pop
or
dec
mov
iret
aas
sub
xor
push
inc
icebp
push
dec
mov
outsb
adc
test
cld
or
ja
xor
xor
cld
mov
rcr
test
or
adc
fbstp
fcoml
or
xor
push
std
sub
pop
enter
das
ret
test
popa
mov
sbb
popa
xchg
in
pop
push
call
imul
rorl
decl
cmp
clc
xor
mov
push
addr16
mov
imul
andl
mov
sbb
sbb
or
mov
ljmp
sbb
push
rorl
loopne
decl
dec
or
push
pmulhw
xlat
xor
ds
andb
rcll
jo
jle
jmp
xchg
jnp
mov
jmp
adc
lcall
push
and
dec
xor
int3
loopne
add
cmpsb
inc
dec
stc
lcall
push
fcoms
aam
jnp
sarl
or
lods
push
mov
cmpsl
popf
mov
pop
ja
jmp
sti
pop
xchg
sbb
sbb
add
inc
pop
nop
enter
and
cmp
icebp
push
adc
aaa
nop
push
adc
pop
out
addb
mov
ret
push
cmpsb
mov
fbld
sub
mov
pop
jg
add
not
jg
hlt
fisttps
pop
jbe
enter
imul
incl
popa
fs
incb
incl
jmp
pop
std
loope
rcr
push
push
adc
or
adc
xor
pop
rclb
stos
je
cs
push
clc
ja
movb
sbb
fwait
insl
jp
jmp
add
sbb
fisubrl
inc
push
je
decl
inc
dec
xor
mov
cwtl
lods
sbb
cmp
dec
pop
jge
jg
mov
dec
cmp
or
lock
cmc
or
movsb
or
sub
mov
aaa
insb
test
or
fsubrl
sbb
xor
into
adc
incl
std
xchg
out
dec
add
jge
aas
loopne
inc
sbb
cmp
pop
sub
dec
pop
ds
iret
add
xchg
xorl
push
mov
incb
mov
mov
push
fisubs
jg
sbb
sub
xor
dec
pop
clc
movsb
sbb
jp
jg
out
push
jne
xorl
mov
dec
push
cmp
icebp
notb
cmp
in
loopne
mov
xor
jne
and
fnstsw
ds
cwtl
push
jg
push
mov
xchg
fs
call
add
push
dec
les
cmp
push
cmp
lock
insl
or
fsubrs
iret
in
pop
dec
adc
inc
loope
push
sub
mov
shrl
out
ficompl
pop
les
add
sbb
test
scas
movsb
test
ljmp
mov
mov
or
cmp
or
mov
mov
into
or
cs
into
push
lds
jmp
and
add
push
es
mov
mov
test
push
inc
adc
fdiv
scas
cmp
add
movb
mov
dec
cli
lcall
ljmp
xchg
and
jns
in
xor
add
popa
mov
adc
das
and
push
push
movsl
aam
or
or
or
jp
jecxz
movsl
sub
xlat
lods
in
lods
xchg
cmp
push
push
stos
inc
mov
mov
repz
pop
inc
cmp
xlat
movl
pop
imul
pop
jno
push
scas
cli
fbld
push
and
mov
loope
sub
jg
adc
or
mov
xor
les
add
jg
xchg
add
and
xor
aas
jae
inc
rcl
insb
inc
movsb
sbb
xchg
push
arpl
xchg
sbb
aam
sbb
pop
xchg
and
ret
loope
xchg
dec
mov
xchg
ja
dec
test
xor
push
push
push
sbb
outsl
call
dec
cmp
pusha
sahf
dec
xchg
mov
fwait
push
cli
add
cltd
and
jo
inc
mov
jbe
in
dec
iret
xor
sbb
ja
clc
dec
imul
jbe
or
adcl
add
loop
sub
dec
orl
add
dec
sbb
and
and
fbld
out
xchg
insl
stc
mov
call
cld
outsl
fmuls
dec
push
xor
sbb
dec
add
mov
repz
or
ds
push
sub
cmc
jg
jmp
mov
inc
add
and
sub
or
sbb
dec
push
lret
push
flds
push
add
jg
loop
fucomp
pop
inc
test
gs
adc
mov
jge
cmp
out
lcall
scas
adc
lcall
aaa
add
pop
dec
call
xchg
mov
ds
aam
dec
jmp
mov
mov
mov
inc
push
add
mov
rorb
shrb
xchg
xor
cmpsl
fisttpll
pop
test
sbb
mov
clc
add
nop
loop
arpl
jg
pop
jo
push
adc
ror
xchg
or
inc
add
test
das
das
cli
mov
push
push
test
or
pop
xorb
fildl
dec
jl
mov
loop
into
aam
adc
and
push
mov
pop
ds
js
aam
mov
iret
loopne
subl
cmp
scas
jno
xchg
xor
pop
ret
mov
mov
push
mov
neg
lock
push
pusha
xchg
mov
out
or
data16
inc
jmp
insb
inc
push
add
push
push
or
decl
orb
loope
mov
pop
icebp
je
pop
decl
fiadds
bound
mov
ret
or
pop
add
clc
orl
sbb
and
fimuls
or
mov
daa
call
or
call
push
lret
repz
xchg
and
xor
adcl
adc
mov
push
sbb
hlt
push
push
aaa
pusha
sub
rcrw
or
jg
sti
sarb
add
mov
aaa
mov
aaa
mov
out
sbbl
loop
popa
add
ja
lock
in
pop
shlb
and
push
mov
dec
fdivl
pop
fildll
jl
adc
roll
pop
xchg
jl
jge
xor
movsl
out
jb
push
push
mov
inc
mov
sbb
addl
movsb
jae
mov
pop
cmp
fisttpl
test
lock
enter
inc
cmp
pop
mov
les
mov
inc
adc
bound
push
in
incb
adc
into
andb
loopne
cmp
int
xchg
push
cs
ljmp
inc
fidivrl
mov
scas
jmp
out
cmpsb
sub
mov
inc
mov
or
popf
es
mov
or
andb
es
pop
xor
push
mov
sahf
lock
movmskps
loop
mov
inc
add
decl
sub
pop
dec
decb
and
dec
lock
jg
mov
pop
xlat
movsb
sahf
roll
mov
and
adc
adc
aam
std
addl
push
in
pop
mov
xchg
cmc
mov
test
rorb
push
sub
insb
pop
cld
add
incl
sbb
add
xor
and
fadds
icebp
adc
xchg
adc
cmpsb
scas
cs
sub
arpl
jge
int3
sub
and
add
sbb
pop
push
jp
mov
sahf
pop
push
std
cmpsl
pop
outsl
int3
dec
pop
pop
pusha
cwtl
fnstsw
mov
inc
andb
sub
out
dec
push
cli
adc
js
loope
js
lcall
push
or
jb
daa
sbb
cli
push
aad
and
push
dec
mov
add
jg
pushl
xor
cmp
xor
pusha
mov
inc
mov
xchg
cli
dec
or
dec
mov
jmp
in
and
sub
insl
mov
push
fildl
push
shll
cmp
or
push
cs
pop
xchg
pop
pusha
mov
bound
jge
subb
cmp
and
add
jb
sub
insl
jo
xchg
dec
push
sub
xor
adc
incl
inc
popa
dec
mov
sbb
fsubr
mov
sub
pop
into
test
out
xchg
cmp
add
int
jb
clc
jl
ds
mov
outsl
cli
sub
in
fisubrs
aas
ret
jne
insl
testl
loope
and
pop
popf
sbb
mov
push
push
call
out
xor
movsl
je
mov
push
adc
rcl
sbb
jmp
pop
clc
stos
xchg
pop
out
inc
and
or
out
je
jne
aaa
jo
fcmovb
mov
pushl
xor
mov
pop
orb
push
sub
jle
lcall
scas
jp
incl
addb
or
xchg
cmp
stos
sbb
push
xor
or
rcrb
inc
pop
aaa
add
cld
or
cmp
dec
fcompl
pop
xorl
sbb
jmp
xor
or
ret
cmp
dec
pop
sbb
fs
out
dec
dec
push
xor
adcl
mov
inc
addr16
xchg
loopne
cmp
incl
ss
and
pop
hlt
dec
fs
push
add
scas
add
jno
jae
xchg
cmc
sti
push
js
inc
loope
daa
rcrb
pop
test
mov
sub
cld
pop
pop
or
mov
mov
push
mov
inc
mov
lret
xor
subl
inc
out
add
mov
mov
push
and
outsb
es
std
lods
scas
icebp
jo
adc
xchg
in
int
mov
xchg
dec
cli
jno
sar
ja
and
stos
push
lods
je
xor
dec
cwtl
mov
sub
lds
mov
insb
xchg
pushl
call
roll
test
push
and
repz
sarb
insl
pop
fs
ds
jecxz
push
fadds
ljmp
sti
or
jl,pt
int3
fdivr
pop
jmp
test
test
xor
adc
fs
xor
or
pop
inc
push
cs
push
inc
pop
movsb
cs
or
mov
addr16
or
push
fstp
lock
and
hlt
mov
ret
jl
fsubl
pushl
mov
inc
push
or
inc
insl
sub
ret
sahf
pushf
pop
lods
nop
insl
push
scas
insb
popa
clc
pop
in
clc
adc
cmp
arpl
das
call
outsl
dec
les
inc
ja
gs
xchg
js
sarb
dec
or
lcall
sbb
fs
push
pop
mov
pop
insb
in
push
xor
les
ja
aad
fdivrl
push
incl
xlat
mov
notb
in
cltd
and
add
jnp
in
mov
orb
jl
mov
sbb
decl
bnd
iret
mov
push
and
cmpsb
jo
xor
adc
mov
mov
mov
ja
fildll
js
or
fdivrs
stos
rclb
push
jge
es
adc
or
test
mov
mov
sbb
cwtl
pop
fimull
sub
push
push
aad
call
cmp
and
and
mov
lock
adc
jg
pushf
lds
mov
pop
cmp
mov
sbb
mov
js
les
arpl
ds
mov
cmp
add
xor
call
push
cmpsb
jecxz
xchg
outsl
clc
ljmp
adcb
dec
mov
jae
mov
xor
jae
inc
ficompl
mov
js
stos
push
jmp
and
fs
add
inc
or
fmuls
mov
lock
adc
daa
push
push
push
dec
pop
mov
sbbb
cwtl
add
sbb
aaa
pusha
mov
push
cmp
pusha
jb
dec
ljmp
xchg
cmp
inc
bound
popf
jl
jg
lds
cmp
call
inc
jmp
incl
xchg
lahf
mov
fisubrs
dec
xor
and
and
ret
and
aad
std
push
inc
dec
jb
lret
lahf
mov
push
dec
inc
ljmp
clc
das
mov
orb
jmp
or
cmpsb
sub
add
lret
scas
sarb
pop
xchg
sbb
cmp
ret
fs
sbb
shrb
xor
jmp
arpl
fcmovbe
sbb
cmp
inc
mov
out
rclb
push
aam
clc
jg
ljmp
pop
and
and
cmpsb
pop
test
sub
xor
in
dec
pop
push
hlt
out
pushf
or
xchg
or
xor
mov
sub
ljmp
pop
aaa
add
xchg
push
mov
aad
jle
and
xlat
sbb
lret
adc
loope
mov
dec
jecxz
es
or
push
cmp
cmpsl
jbe
add
jg
decl
xchg
adc
mov
add
int3
shr
xchg
inc
in
cmp
mov
decl
or
int
cmpsl
in
mov
pop
mov
push
add
in
ret
push
push
icebp
pop
sti
cmc
dec
sub
xor
call
je
sahf
push
clc
aas
sub
sub
popa
inc
pusha
ret
xor
loopne
clc
cmpsl
aad
mov
out
pop
loop
repz
ret
inc
jg
xor
cmp
es
loopne
adc
jne
mov
rol
add
sub
decl
dec
lea
sbb
scas
test
shrb
jnp
incl
enter
and
mov
adc
nop
sub
fidivl
or
xor
das
or
add
call
and
mov
aad
rcrb
sub
movsb
outsb
adc
xor
imul
mov
mov
cmp
add
icebp
fildll
push
and
fidivs
ss
lcall
imul
rolb
fcomp
fs
cmp
mov
cwtl
xchg
movsl
add
jecxz
jb
cli
jle
sbb
push
jnp
pop
push
test
jno
cs
filds
adc
or
mov
cli
xor
test
mov
ret
out
mov
mov
push
enter
les
push
add
inc
je
insb
fildll
xchg
add
add
xchg
aaa
adc
jmp
sbb
and
out
das
mov
loope
inc
adcl
aaa
pop
cmpsb
incl
xor
test
lcall
cmpsb
push
dec
mov
push
mov
jl
mov
push
out
push
dec
or
mov
movsb
xchg
jae
fiadds
pop
xchg
sub
pop
adc
sahf
popf
in
cmp
lahf
stos
fstps
sti
adcb
loope
lock
ja
aam
out
add
cltd
add
mov
pop
testb
int3
ret
sar
das
pop
roll
mov
pop
lock
rorl
es
push
subb
pushl
adc
or
aad
mov
mov
push
lock
mov
jg
popf
mov
cmp
jno
mov
adc
repnz
xchg
clc
pusha
ss
cmp
pop
movsb
pop
mov
loope
cmp
subb
cli
cmp
adc
xchg
cltd
jge
cmpsl
or
inc
daa
js
xchg
and
std
add
mov
in
and
das
clc
outsb
push
xchg
sbb
push
sub
adc
pop
xchg
or
dec
int3
je
test
in
pop
repnz
mov
lods
adc
dec
jge
bound
push
mov
push
inc
movsl
daa
clc
sub
jmp
adc
xor
adc
fucomp
insb
push
pop
jp
inc
incl
loop
cmc
xor
ret
push
jge
test
add
push
add
push
roll
ljmp
dec
fwait
mov
push
adc
add
sub
push
or
mov
jb
jo
pushl
enter
ds
aad
ljmp
cmp
xchg
subl
movsb
ret
add
clc
mov
imull
aaa
pop
pop
hlt
rcrl
dec
clc
inc
pop
out
rclb
test
shufps
mov
daa
jmp
jb
fs
jp
ljmp
js
dec
mov
aaa
xor
or
jp
xchg
xor
mov
push
repnz
jecxz
jns
sbb
sbb
pop
repz
pushf
cld
es
cvtps2pi
or
pop
mov
enter
sbb
mov
push
push
fldcw
movsl
stos
dec
fcomip
jmp
ficomps
popf
fidivrl
adc
inc
inc
xor
cwtl
inc
mov
add
gs
push
mov
cltd
ret
push
mov
test
dec
fidivrl
mov
or
hlt
in
inc
fimuls
sbb
push
jb
in
inc
es
pusha
leave
movsb
add
add
out
mov
push
sar
aad
insl
js
jo
cs
jge
add
mov
fidivrs
mov
lret
push
outsl
add
mov
and
call
jns
add
dec
pop
sub
cltd
rcr
je
and
lcall
pushl
push
pop
ret
mov
or
adc
lock
enter
ret
test
icebp
cld
les
mov
fwait
mov
pop
ret
decl
pushf
outsl
and
mov
inc
mov
arpl
ljmp
call
xor
inc
dec
xchg
pusha
add
mov
add
pusha
sub
sub
mov
mov
lock
rolb
mov
pop
lods
mov
push
add
outsl
and
rcrb
sbb
cwtl
int3
lods
dec
or
xchg
enter
jge
mov
mov
aam
mov
jl
pushl
pop
or
cmpb
mov
and
add
test
jl
scas
jo
xchg
mov
pop
mov
adc
push
cld
sbb
aaa
sahf
add
dec
rolb
push
adc
mov
mov
mov
ret
pop
add
sbb
push
push
xchg
shlb
pop
mov
jb
fmull
jmp
lods
aaa
bound
call
inc
std
aas
fidivs
cmp
ret
shlb
loop
mov
orl
adc
aaa
push
jle
pop
hlt
sub
or
lods
ret
pop
idivb
iret
jbe
xor
and
lcall
adc
into
mov
mov
clc
fists
push
iret
lea
sti
add
mov
insb
xor
call
mov
pop
gs
jg
int
ret
test
js
aaa
data16
sub
out
xbegin
nop
in
scas
xchg
mov
andl
incl
inc
push
out
and
loopne
sbb
cld
pushl
jmp
push
daa
aaa
mov
jg
clc
imul
arpl
mov
add
in
aaa
jns
pop
nop
ljmp
and
jns
cs
mov
roll
int3
addb
push
fsubl
sarb
daa
and
scas
cmp
decl
mov
fwait
jne
add
add
xor
or
add
jmp
mov
bnd
shl
lock
push
sub
daa
mov
jb
clc
insl
xchg
in
inc
sbb
daa
cltd
filds
fld
aad
pop
and
or
xor
push
jg
js
jne
lret
push
aaa
sbb
bound
icebp
cmp
xchg
mov
cltd
push
jecxz
lods
or
add
mov
scas
mov
jecxz
push
pop
aam
inc
sahf
sbb
xchg
stos
cli
add
jp
ret
cs
movsb
popl
push
xor
les
je
call
imulb
sbb
clc
mov
jecxz
into
mov
daa
and
stc
lcall
mov
fnstcw
aaa
scas
out
xlat
push
test
je
sbb
es
mov
mov
pop
and
rclb
popf
or
pop
pop
ret
mov
orb
sarb
mov
adc
mov
iret
xchg
clc
decl
push
sub
jo
mov
mov
repz
push
outsl
into
aad
enter
das
inc
ror
sub
mov
sbb
or
subl
call
std
ljmp
inc
push
sub
mov
push
loopne
cmp
lock
xor
lock
lods
outsb
rorl
add
lods
push
mov
jmp
mulb
lock
out
or
test
dec
rorb
adc
in
mov
pop
scas
shll
in
pop
mov
or
sbb
sub
or
push
cwtl
sbb
les
or
pusha
inc
sub
push
cmp
decl
jo
jnp
push
subb
icebp
xor
jno
dec
ljmp
andl
stos
dec
imul
and
fadd
cmp
xor
push
pushf
pushf
lcall
or
mov
or
test
rol
mov
or
mov
jo
stos
sub
mov
loopne
imul
das
and
fstpl
pop
outsl
loop
xchg
stos
sbb
aaa
lock
pop
rcrl
sbb
popa
sbb
lcall
ss
popa
rolb
and
decl
decb
adcb
pop
repz
push
ret
dec
sarb
or
sbb
in
outsl
and
jp
ficomps
jne
es
aad
ljmp
add
jg
loopne
inc
lahf
pop
inc
and
jl
cli
insb
hlt
bnd
xchg
out
call
cltd
mov
jg
cs
rorb
mov
inc
push
cmp
je
mov
shl
pop
std
push
lcall
aad
loope
jno
je
jg
in
pop
sti
pop
mov
sbb
mov
gs
pop
std
push
bound
mov
repnz
rorb
adc
mov
xchg
sub
jo
call
push
sub
xchg
or
add
push
push
cld
outsl
add
add
rorl
out
mov
test
pusha
jmp
or
dec
jbe
sbb
mov
loop
push
or
sbb
mov
sub
and
loop
push
dec
pop
sub
ljmp
cld
xor
cwtl
xlat
or
sub
cmp
push
sarb
jbe
movsb
into
pushf
in
sbb
push
jle
and
pop
push
lahf
xchg
inc
lret
cmpsl
arpl
lock
push
mov
mov
jno
icebp
mov
add
mov
adc
dec
loop
sub
and
sbb
pop
adc
dec
out
test
add
pop
sub
sub
mov
aam
inc
adc
xor
jbe
inc
jne
mov
or
stc
dec
icebp
inc
sub
loopne
pop
sbb
mov
pop
ret
inc
lods
add
xor
dec
incl
xor
inc
sbb
push
sbb
mov
cmp
cmp
sub
out
jae
mov
icebp
mov
leave
pushw
addr16
pop
ret
ret
js
sahf
pop
xchg
call
pop
sbb
sbb
xchg
mov
xchg
cmp
lret
or
aam
add
inc
jo
dec
in
loopne
sub
testl
pusha
add
inc
test
cmc
es
jb
cmpsl
test
mov
adcb
or
sbb
push
or
inc
pusha
push
push
add
lods
cmpb
jg
bound
repnz
insl
out
scas
add
jmp
push
js
outsl
test
out
sub
fs
or
fmuls
push
cmp
jmp
cmp
outsb
xchg
mov
and
lcall
sub
rolb
sahf
dec
mov
inc
mov
cmp
add
test
decl
mov
jo
pop
nop
jne
jmp
shll
out
daa
mov
loope
loope
dec
cmpsb
sbb
in
or
jbe
sub
sub
jno
ret
xor
add
xchg
bound
jo
xor
add
mov
xor
jg
arpl
dec
lock
sub
sub
push
in
add
mov
cmc
adc
call
ret
fcomip
lcall
push
or
jns
xor
sbbb
aas
rclb
push
enter
push
clc
leave
mov
cmp
sbb
popw
push
das
xchg
sub
sub
inc
sub
pop
pop
jns
xlat
and
aaa
pop
cld
mov
das
aaa
in
push
testl
test
ss
or
or
test
mov
add
lods
adc
mov
loope
test
or
xor
sbb
sbb
std
mov
iret
adc
scas
js
xchg
clc
popa
pushf
pop
cmp
sti
test
sbb
call
lods
stos
sarb
add
jp
aam
pop
faddl
int3
jbe
sti
test
out
jg
dec
loopne
mov
push
cmp
cmp
push
add
push
mov
mov
mov
rorl
pop
sub
mov
popl
cmp
out
mov
push
adcl
mov
imul
push
push
mov
xchg
adc
add
rolb
test
addr16
pop
insl
stos
stos
incb
popa
mov
pop
inc
outsb
ja
inc
call
xorl
movsl
daa
jo
mov
add
adc
inc
int3
add
prefetchwt1
or
inc
fistpll
stc
aam
outsl
cli
idiv
sahf
xor
xor
xchg
xchg
add
cs
repnz
cmpb
mov
pop
cmc
mov
xor
loope
data16
enter
add
lods
dec
std
int
ret
fstl
cmp
repnz
adc
ja
je
lods
adc
enter
push
and
add
push
cli
push
lret
dec
mov
adc
test
lcall
or
clc
mov
mov
push
add
into
popf
inc
or
mov
or
pop
xor
pop
loopne
jle
mov
fwait
mov
orl
and
cmpb
sbb
fbld
mov
add
ljmp
mov
mov
imul
push
dec
jne
add
fisttps
push
iret
add
push
lcall
out
jmp
out
ds
xor
nop
ss
push
ljmp
dec
or
adc
xchg
test
clc
xor
jns
push
scas
or
negl
repz
and
int3
dec
scas
clc
pushl
pop
pop
adcb
lods
push
loop
lret
subl
incl
jg
xor
mov
les
cltd
mov
xchg
pop
adc
add
popa
sbb
enter
je
lcall
cld
or
pusha
shll
out
inc
inc
xchg
push
mov
xchg
test
push
cmp
add
or
mov
dec
repz
lds
and
xchg
test
test
sbb
or
in
mov
mov
xchg
repnz
adc
jecxz
orb
je
push
or
mov
mov
adc
jne
jbe
loop
xchg
sbb
neg
inc
xor
mov
sti
mov
dec
xchg
push
pop
adc
sub
pop
popf
or
out
lods
inc
int3
mov
mov
data16
mov
adc
xor
dec
and
or
gs
sar
lea
movsb
sub
mov
mov
cmp
add
daa
pop
and
push
gs
xor
xchg
add
test
and
mov
cld
or
cmpb
mov
cltd
pushf
jo
inc
cld
push
dec
sbb
mov
cmp
jb
das
jg
pop
cld
inc
outsl
lret
dec
sahf
pop
jg
pop
sahf
xchg
jo
mov
or
mov
push
jmp
sub
inc
mov
pmulhw
hlt
and
xchg
add
or
pop
inc
rorb
shl
cmc
dec
notl
int3
and
sub
fnstsw
mov
pusha
sub
ret
and
ja
icebp
fcomi
sub
insl
out
xlat
jmp
inc
gs
cli
mov
sbb
dec
les
adc
add
pop
nop
loopne
sub
pushf
scas
loop
pop
hlt
push
mov
cmp
insl
ficoms
adc
sti
pop
sbb
into
adc
inc
in
pop
rcl
dec
in
testl
push
sbb
push
add
lods
sub
lock
push
dec
add
stos
dec
adc
decl
jle
mov
aad
cmp
sbb
mov
sub
add
mov
jmp
dec
and
xchg
jmp
mov
lahf
pop
enter
and
gs
mov
ljmp
test
add
cltd
shlb
mov
add
stos
sub
push
ds
rorb
lcall
test
lret
cli
ficoms
push
jecxz
clc
jecxz
xor
xchg
ficoml
mov
scas
cmp
pop
and
jmp
fisttpl
scas
sar
cli
lcall
clc
mov
and
or
das
mov
mov
mov
add
sub
push
xchg
xorl
dec
dec
xlat
or
xor
cmp
fsubs
ds
mov
clc
dec
popa
mov
jo
fs
xchg
outsl
inc
movsb
mov
int3
mov
inc
incl
loop
decl
pop
mov
fstpl
jb
icebp
stos
in
adc
push
add
xor
int3
or
mov
jmp
cmp
cmp
mov
idivb
jle
fiadds
or
add
js
sbb
push
add
push
xchg
lcall
inc
addr16
mov
push
cmpl
loop
sbb
scas
cli
out
add
aad
push
xchg
dec
scas
pop
pop
inc
cmp
out
dec
ja
cld
popf
fisttpl
cwtl
or
int3
add
pop
fildll
push
sti
mov
pushl
sbb
arpl
xchg
xor
push
xabort
cmpsb
aam
int3
js
in
add
pop
mov
push
mov
xchg
sbb
mov
idiv
loopne
xchg
xor
push
icebp
and
test
mov
jns
aad
xchg
or
mov
fsubs
and
sub
ljmp
sub
xor
int3
inc
push
jg
fidivs
mov
xchg
pop
add
mov
inc
dec
ret
inc
add
mov
aam
mov
or
mov
fldcw
sar
pop
add
xchg
lock
jns
sub
dec
or
pop
cmp
mov
fsubrl
out
and
data16
push
and
xor
jno
and
cmpsl
ds
push
mov
add
imul
inc
call
xorl
leave
sbb
mov
add
lea
pop
mov
pop
sbb
shrb
pop
rcrl
test
in
cli
incl
add
mov
fisubrl
add
sbbb
xor
loopne
dec
out
test
pop
or
sub
mov
xchg
inc
push
in
imul
add
pusha
mov
adc
mov
aaa
mov
jb
je
rcll
pshufw
faddl
jae
repz
mov
ljmp
mov
jae
lea
sbb
hlt
not
jl
and
aad
cmp
dec
lods
lret
addb
in
xor
mov
ja
mov
ljmp
les
lcall
mov
cmpsb
shlb
adcb
pop
icebp
inc
mov
pop
inc
mov
fldl
sbb
test
dec
loopne
sbb
test
out
pop
lcall
loop
repz
mov
cmp
jmp
and
push
mov
cs
and
nop
add
sbb
std
xchg
sti
push
es
mov
inc
cld
mov
fcoml
dec
fildll
mov
pop
sti
adc
ret
scas
mov
jne
pop
sbb
mov
mov
inc
jnp
sbb
loopne
mov
stos
mov
sub
pushw
and
add
sub
aad
lcall
in
inc
add
cmp
in
pop
cmc
call
and
sbb
mov
push
sub
test
cltd
pushf
xchg
sbb
cli
push
in
xchg
jnp
adc
and
int3
in
or
dec
pusha
or
ljmp
in
or
push
test
and
or
and
movsl
sbb
sub
je
push
mov
notb
test
mov
fs
and
inc
jb
outsb
lret
aad
scas
mov
xor
push
mov
dec
adc
jmp
ret
or
add
add
dec
pop
jg
jle
inc
leave
aaa
push
or
jb
outsl
cmp
adc
push
lds
incl
dec
sbb
push
andb
jmp
and
mov
nop
call
xor
inc
sbb
addr16
cmp
nop
xchg
mov
mov
bound
pusha
mov
scas
inc
mov
add
js
mov
xor
jbe
call
lret
jecxz
out
jl
xchg
and
lock
clc
dec
loopne
clc
outsb
adc
inc
sbb
aas
xchg
mov
pop
jl
leave
inc
sarl
testl
pusha
or
out
fimuls
out
cmp
bound
push
inc
sub
sbb
push
push
sub
aad
clc
push
xor
sub
es
inc
data16
sbb
test
dec
lods
pop
inc
js
icebp
les
ret
fadd
jmp
mov
test
pusha
dec
out
push
insl
or
pop
std
push
dec
and
pushf
ret
jo
dec
data16
dec
inc
mov
sbb
push
xchg
cmpsl
sub
mov
inc
push
loope
ret
add
dec
jbe
adc
gs
icebp
push
lcall
outsb
dec
jo
test
fdivl
or
sahf
push
and
les
lcall
and
lock
and
pusha
out
inc
cmpsl
ret
ret
roll
mov
inc
dec
mov
fisubs
jp
mov
stos
mov
lcall
cs
dec
outsb
push
ljmp
cmp
pop
inc
or
cmc
sub
stos
mov
pop
dec
or
or
dec
jmp
push
pop
popa
add
xor
pop
arpl
incl
mov
push
pop
mov
aam
stos
jnp
inc
out
dec
std
mov
decl
mov
add
inc
jo
out
inc
loope
sar
outsl
adc
dec
movsl
xor
push
in
and
adc
xor
pushl
cwtl
adc
sti
inc
push
cmp
xor
mov
scas
enter
gs
jp
push
sar
jg
jg
sub
add
hlt
or
scas
enter
sub
fsts
repnz
out
clc
xor
pavgb
leave
outsb
stc
sbb
sub
cs
mulb
xchg
add
add
ret
decl
sbb
out
mov
test
dec
ljmp
cltd
fs
mov
lock
lods
push
std
and
sub
jno
sbb
mov
cmp
mov
fbld
xchg
imul
jg
push
add
and
and
add
scas
orb
push
push
add
lea
adc
xchg
xor
in
adc
scas
push
mov
popa
nop
js
fsubr
sub
add
stos
add
mov
or
aaa
jmp
aas
add
std
mov
cli
add
addl
xor
gs
fimuls
mov
push
ljmp
out
mov
sub
arpl
push
loop
jg
push
test
or
jae
lods
clc
push
sub
adc
cmp
cmp
cwtl
mov
mov
sbb
pop
adc
dec
loop
add
in
pop
or
loop
adc
push
fwait
adc
inc
sub
sbb
hlt
lcall
popl
pop
sti
test
ljmp
mov
fst
jp
dec
pop
cmp
fwait
in
xchg
xchg
scas
push
xchg
lock
das
rcrb
aad
and
sub
lret
mov
xor
movsl
call
shlb
loopne
and
dec
mov
pushl
clc
adc
stc
xchg
jmp
or
mov
scas
inc
hlt
cs
dec
loop
fisubrs
mov
and
lret
repz
incl
stos
adc
push
stos
das
push
push
dec
xchg
push
lds
cmp
mov
and
sbb
dec
out
inc
cmpsl
jns
push
push
adc
cli
xchg
rorb
jmp
add
cmp
fidivrs
mov
pop
movsb
mov
es
mov
jne
ficompl
js
add
movsl
subb
pop
add
cmc
mov
cwtl
into
scas
add
scas
imul
push
push
pop
adc
xlat
cs
sbb
ds
dec
fildll
clc
inc
push
adc
inc
xor
inc
outsb
ljmp
push
nop
mov
fdiv
insb
ret
in
add
inc
subl
jle
sbb
das
adc
mov
les
jp
add
cmpb
sub
xchg
mov
orb
fdivp
fsubl
aam
and
out
push
mov
out
insl
pusha
leave
jl
pop
adc
inc
mov
add
add
adc
pop
adc
push
adc
pop
hlt
loop
bound
push
clc
cwtl
or
ja
xor
xchg
push
and
out
xchg
add
lock
in
fucomp
jecxz
not
ret
add
add
lds
inc
lahf
push
xor
test
sub
fimull
add
push
pop
dec
ljmp
and
xlat
out
fsubl
addl
cmc
decl
ret
and
or
adc
push
push
lret
push
xchg
mov
or
bound
rolb
push
add
stc
dec
notl
xchg
cmp
lcall
cmp
test
cmp
and
mov
rcrb
int
inc
sbb
or
lret
sbbl
and
mov
dec
xlat
icebp
or
mov
subb
pop
mov
xchg
pop
xchg
push
test
and
add
xor
lock
or
and
popf
mov
loop
inc
and
mov
and
stos
pop
and
push
sbb
stc
cmpsl
mov
mov
xchg
xor
fists
mov
mov
mov
push
fmul
fst
das
lods
mov
xchg
or
sub
push
in
jg
push
or
fistps
push
sahf
les
xchg
inc
iret
out
or
in
mov
ljmp
add
dec
call
pusha
sub
inc
clc
or
lods
movsl
fcmovne
aaa
arpl
lea
jmp
test
fxch
adc
add
in
mov
je
push
jge
cmc
push
stos
xchg
in
rolb
lret
xchg
dec
incl
jno
das
and
iret
lods
mov
sti
pop
and
mov
or
mov
sti
loopne
call
xor
cli
sub
pop
inc
dec
sub
cmpsl
fisttps
mov
cmp
imul
icebp
sub
jne
push
mov
inc
jg
scas
es
xchg
xchg
rorb
in
push
sbb
pop
neg
push
dec
jae
outsl
sahf
sub
inc
in
mov
and
sar
push
adc
lods
fsubrl
xchg
push
mov
loop
mov
or
pop
sbb
lret
mov
push
test
push
mov
or
outsl
inc
mov
adc
std
jg
push
lret
iret
cmp
jp
xlat
cmc
xchg
sar
call
dec
cmp
pop
sarl
lods
jb
add
cs
ljmp
sti
push
push
test
test
test
pop
mov
or
push
ret
inc
mov
inc
jmp
sub
les
cltd
mov
sbb
int
fmuls
aaa
jecxz
call
fldenv
pop
xchg
jo
cld
sub
mov
mov
xchg
out
shl
ret
mov
hlt
add
cmpsl
inc
xorb
cld
and
push
outsb
rorb
orl
dec
dec
loope
add
sbb
sub
or
mov
dec
inc
jbe
and
xlat
cli
das
lods
pushl
out
divps
pusha
or
pusha
jl
enter
jg
and
inc
xchg
cmp
xor
rcr
push
adc
out
pusha
ret
sbb
cmp
aaa
push
sbb
or
lcall
push
stos
mov
jo
test
out
push
incl
cld
lea
dec
imul
test
arpl
imul
mov
dec
push
mov
es
jmp
arpl
and
push
jb
test
arpl
mov
mov
dec
test
clc
xchg
cli
mov
fs
xor
lds
push
inc
or
or
lods
xorb
arpl
adc
rolb
jae
xor
cltd
fcomip
push
xorl
movsl
push
js
addr16
pop
std
inc
xlat
outsb
mov
pop
and
push
pop
push
xlat
lcall
shl
movb
and
test
sub
mov
roll
insb
cwtl
xor
add
scas
push
popf
adc
jno
jmp
mov
out
cli
fisttpl
mov
sub
push
nop
fiadds
jno
outsb
es
mov
lds
loope
add
bound
insb
stos
ljmp
fisubrl
inc
cmp
movsb
sbb
push
scas
js
in
movsb
fdivl
ljmp
pusha
cwtl
pop
popa
insb
push
cwtl
xchg
jmp
movsb
test
jg
pop
adc
mov
jbe
push
or
icebp
and
jnp
in
out
ret
dec
mov
mull
mov
push
shrb
jl
les
scas
mov
mov
mov
dec
dec
mov
ja
fs
js
lcall
xor
sbb
aam
jo
inc
pop
inc
in
or
nop
add
sub
popa
sbb
mov
and
std
or
jo
pushf
sub
push
cld
lret
push
pushl
call
mov
cmpb
add
adc
mov
lcall
std
addl
iret
out
jl
ret
jg
mov
loopne
sbb
sti
pushf
mov
scas
cli
decl
pop
cmp
out
xor
xchg
iret
add
bound
add
fsubrs
fisttps
pushf
sbb
cmc
shr
stc
sub
scas
or
lret
add
dec
inc
add
jg
iret
jmp
test
ret
jl
cmc
pop
std
mov
nop
push
js
cmp
pushf
push
mov
into
adc
add
std
cs
pop
inc
ds
call
mov
adc
cs
ficomps
add
xor
loop
fsubs
and
mov
fs
fwait
sbb
aam
fimull
and
lcall
adc
and
adc
or
and
mov
outsl
sar
jle
pusha
cmpsb
stos
dec
xchg
pusha
push
add
rcr
push
mov
mov
jg
and
lahf
mov
mov
add
ret
rcrb
lcall
ret
xchg
mov
dec
popw
push
movsb
inc
pop
out
mov
cmp
jge
sub
in
add
sarl
pop
negb
xchg
hlt
dec
mov
jg
andb
mov
lods
aam
adc
fnstsw
add
scas
mov
dec
fistpl
or
scas
inc
dec
ret
xchg
movsb
lock
add
fcomip
mov
mov
sbb
in
and
mov
fcomip
pop
mov
stc
sbb
scas
pop
mov
gs
rcr
mov
jp
sbb
icebp
push
add
stc
jo
jp
or
in
pushl
fstl
inc
les
push
cmp
sbb
loop
or
sbb
daa
fdivrl
testl
fildll
push
inc
jecxz
int3
cwtl
es
push
aad
adc
push
pop
add
imull
pop
or
dec
jl
adc
adc
mov
sarb
nop
punpcklbw
outsl
xor
js
push
or
dec
cld
dec
jg
outsb
js
mov
xchg
sub
insb
pusha
mov
jg
add
cli
jne
iret
int3
adc
scas
jb
lret
fstpt
cmp
push
sub
pusha
incb
or
xor
cmp
addr16
mov
push
mov
xchg
nop
stc
jp
add
std
nop
or
mov
hlt
mov
inc
and
add
dec
jmp
das
in
leave
jnp
push
ss
daa
push
not
adc
call
fld
mov
stc
mov
and
outsb
jg
or
adc
xor
and
test
cmp
daa
loopne
mov
pop
test
dec
adc
mov
loopne
ret
lods
dec
sub
push
insb
push
xchg
std
adc
jne
push
mov
pop
inc
jecxz
clc
addb
adcb
lock
ja
and
fdivrp
fs
and
add
xor
mov
pop
push
ljmp
mov
clc
mov
jo
push
test
xor
fistps
incl
ljmp
xchg
mov
lods
push
mov
jno
and
andb
popf
jp
jp
cli
xchg
dec
clc
add
add
aad
hlt
loopne
popa
lret
or
push
icebp
sbb
das
into
incl
push
jmp
inc
sti
aaa
mov
std
jne
loopne
add
pop
insb
inc
xchg
or
lods
dec
push
mov
sub
scas
clc
les
adc
imul
icebp
adc
movl
inc
in
adc
mov
aas
movsb
lds
adc
mov
xchg
aas
or
xor
test
mov
loopne
pusha
nop
xchg
sbb
inc
loope
pop
test
dec
jns
hlt
add
outsl
ss
pop
sbb
xchg
push
mov
ret
pop
or
and
ljmp
std
add
mov
inc
ret
dec
mov
xchg
inc
mov
lea
addb
rol
mov
orb
and
insb
push
mov
xor
push
or
mov
xchg
and
mov
sarb
movsb
fadds
stos
out
cli
imulb
jecxz
mov
inc
icebp
cmpsb
jp
jns
or
call
addb
sti
daa
jae
and
rolb
ja
imul
dec
scas
in
rcrb
negb
sbb
dec
add
pop
push
dec
cmp
xchg
xor
and
and
jbe
cmp
andb
and
and
push
cld
fistps
add
inc
or
pop
mov
jns
test
cli
jmp
add
push
into
pop
aaa
mov
sbb
push
mov
adc
jle
ret
jb
xchg
add
jne
enter
xchg
aam
fsubr
jb
push
int
add
dec
push
xor
ljmp
lcall
or
test
jg
inc
and
xchg
cmp
sbb
bound
icebp
out
cs
pop
ljmp
orl
pop
jmp
mov
add
mov
cmp
xchg
in
mov
add
add
push
mov
movsb
mov
mov
outsl
sbb
xchg
pop
xchg
mov
cmp
call
std
imul
inc
add
in
mov
push
pushl
xchg
adc
in
out
daa
xchg
adc
jecxz
insb
jne
idivb
inc
adc
lcall
mov
lahf
jl
pop
adc
or
stos
dec
xlat
adc
jmp
mov
xchg
outsl
xor
inc
jle
pop
mov
movsb
add
xchg
add
adc
sbb
ret
jge
mov
add
mov
mov
or
and
or
fdivl
jmp
insb
jne
jl
and
filds
and
int
pop
xchg
cmp
mov
test
dec
sbb
andb
lock
ror
ret
jg
cmc
mov
test
push
jge
sbb
pop
fmuls
pop
pop
movsb
dec
mov
adc
push
ret
mov
mov
or
xchg
push
dec
mov
adc
push
negb
pop
std
arpl
pop
aaa
and
rcrb
loopne
decl
clc
dec
test
dec
out
popf
pop
pusha
ja
jecxz
sub
sbb
cmp
sbb
add
mov
add
je
insb
mov
cmpsl
push
mov
ljmp
dec
inc
ret
push
fsub
add
cli
inc
jnp
push
pusha
mov
cmpsb
adc
add
inc
add
add
adc
aam
arpl
mov
fbld
cmpb
pop
mov
call
mov
push
sahf
and
repnz
and
dec
mov
or
cmp
scas
push
decl
mov
add
cs
adc
mov
out
lret
mov
icebp
call
sub
ljmp
bound
jecxz
lock
and
call
sbb
pop
fmul
dec
leave
adc
mov
add
repnz
cli
add
or
lock
add
mov
xor
call
add
lock
and
push
cmovge
add
inc
jp
dec
test
adc
xchg
test
sub
add
jg
dec
out
pop
or
sbb
idivb
sbb
ret
rorb
orb
loop
push
push
out
ja
dec
mov
movsb
mov
pause
movsb
sbb
cmpb
jns
push
jge
out
notb
pop
stos
shl
adc
aam
sub
loope
imul
decl
les
push
aad
nop
pop
pop
mov
dec
jg
mov
lret
xor
cmp
sahf
xor
xchg
push
inc
lods
dec
inc
out
fcos
push
es
test
leave
dec
sub
jb
cmp
or
add
adc
cli
and
insb
fsub
lock
xor
cli
cli
mov
std
shrl
icebp
dec
mov
or
jnp
adc
sbb
or
leave
add
xlat
jnp
outsl
ljmp
cmp
jmp
or
or
out
and
cli
add
lea
std
movsl
push
nop
lcall
inc
dec
aaa
cmp
fstpt
inc
inc
inc
xchg
or
and
push
push
and
stos
sbb
push
pop
push
clc
xchg
lea
hlt
jg
mov
push
js
int3
or
or
pop
mov
daa
inc
aaa
pop
pop
xlat
push
add
dec
shrb
lods
dec
rcrl
mov
mov
hlt
incl
jae
cmp
daa
stos
sub
adc
push
xor
mov
outsb
sbb
test
dec
mov
ljmp
push
jo
call
xor
xor
and
jle
and
adc
push
jo
insl
jge
push
push
lret
adc
xchg
cmpb
push
loop
pushf
and
std
cmp
mov
mov
mov
xchg
fildl
bound
sti
pushl
or
inc
sbb
dec
add
dec
cwtl
sub
cmc
add
js
sbbl
mov
push
cltd
and
dec
mov
xorb
xchg
fcoms
push
adcl
decl
and
cmpsb
hlt
insb
adc
mov
rcl
scas
sub
out
xchg
adc
jmp
inc
bound
xchg
and
in
int
xchg
inc
out
lret
ficoml
sbb
mov
ss
cmpb
out
and
cwtl
adc
pop
lcall
jg
cmp
or
xor
xor
addr16
imul
pop
mov
adc
xchg
push
call
popf
cmp
test
pop
inc
test
push
ljmp
or
pushf
inc
sbb
out
cli
pop
push
cmp
js
sahf
lods
dec
adc
out
xor
add
sbb
rcrb
or
sbb
adc
cmpsb
decl
icebp
mov
sbb
test
add
imulb
decl
out
dec
fsubl
jb
movaps
ds
mov
dec
je
inc
je
or
test
ja
sti
into
jnp
push
inc
fildl
cmpsl
repnz
cs
in
fcmove
sub
pop
cmc
stos
and
int3
sub
decl
push
int3
mov
mov
and
insl
and
pop
lea
push
out
lcall
loop
dec
xchg
aaa
dec
push
scas
add
xchg
nop
and
aas
clc
dec
cld
lcall
push
xchg
leave
jbe
sbb
push
and
or
mov
lret
mov
cmp
pop
shrl
jle
xor
out
push
push
fs
mov
or
hlt
cld
sub
inc
xor
adc
xor
mov
repnz
lcall
dec
add
scas
ds
outsl
xlat
lods
dec
pop
push
push
add
adc
dec
or
add
fsubrs
jmp
into
and
adc
pushl
add
adcl
lds
in
push
push
inc
pop
add
jg
test
sbb
and
popa
add
pop
clc
jg
pop
mov
mov
stos
mov
mov
sbb
inc
ss
pop
das
repnz
dec
lods
cmp
stos
mov
test
dec
or
cli
add
xor
icebp
or
in
mov
loop
pop
fildll
decb
scas
or
clc
nop
pop
rclb
aad
jo
dec
and
sub
adc
pop
hlt
adc
or
push
mov
cmpsl
mov
ja
loopne
cmp
in
xor
fs
push
jl
xorl
dec
add
subb
incl
call
arpl
test
xor
adc
adc
icebp
inc
adc
bound
xorb
or
popf
push
jo
pop
and
out
fs
cmpsb
in
lds
shrb
mov
fxch
push
sbb
push
push
cmc
call
push
jbe
fwait
cmp
ja
sub
loopne
jl
clc
hlt
and
jb
shlb
sti
jmp
movsl
insl
fdiv
jno
sub
popf
pop
xorb
mov
inc
cli
mov
lret
into
mov
mov
mov
push
jl
pop
sub
sbb
mov
add
mov
push
pop
mov
add
sub
jmp
mov
jo
std
cwtl
aas
fs
int3
das
test
push
mov
mov
xor
imul
inc
insb
pop
fldl
cmpsl
and
sldt
add
xchg
jnp
mov
stos
push
mov
add
out
cmp
loopne
ljmp
inc
adc
fisubs
jp
pusha
or
cmp
js
loopne
out
sub
pushf
xchg
mov
push
jecxz
mov
pop
fidivrs
add
push
loop
lods
or
push
sar
ret
xor
push
cmpsb
sub
adc
ljmp
mov
daa
mov
ljmp
lods
or
call
xor
sbb
sub
xchg
xchg
dec
sub
hlt
mov
fadd
mov
test
add
xorb
sbbl
or
xchg
jne
add
das
adc
or
fdivp
lcall
ret
popfw
inc
dec
inc
push
imul
cmp
lock
cwtl
inc
pop
cmp
mov
xor
pop
lea
incl
out
jo
sahf
fsubrs
test
loopne
scas
inc
xor
add
or
fs
adc
ffreep
shlb
sub
sub
jmp
mov
ret
inc
pop
ljmp
jne
in
mov
fistl
mov
or
pop
add
cmp
dec
or
ret
ss
mov
mov
out
push
nop
push
adc
clc
frstor
out
arpl
icebp
das
clc
push
test
imul
testl
fucomp
iret
and
jg
adc
addb
pop
pop
mov
ss
icebp
jmp
add
jae
frstor
insb
scas
sbb
mov
or
xchg
lods
clc
xor
or
add
pop
rolb
mov
stc
or
test
fwait
jle
mov
pop
pushf
daa
sbb
je
mov
pop
jecxz
xchg
mov
sub
cli
inc
inc
push
xor
xor
ds
test
xchg
std
push
enter
adc
inc
arpl
les
in
in
and
and
mov
aas
push
js
add
cmp
or
mov
std
ljmp
push
push
xchg
add
mov
add
fs
jbe
stos
jnp
mov
push
int3
fists
dec
inc
cmp
movsb
ljmp
ret
dec
or
adcb
data16
out
push
pop
test
int3
sub
push
outsl
outsl
cli
pop
push
push
dec
inc
sti
movd
in
and
adc
jne
lret
mov
add
cli
mov
jmp
ss
clc
mov
jle
iret
xchg
sub
pushl
mov
pop
add
leave
popa
sub
call
pop
stos
call
pop
sub
mov
add
das
ja
sbb
mov
cmp
xor
imul
sbb
sbb
loopne
xchg
mov
je
sub
in
cmp
mov
jns,pn
xchg
test
inc
inc
lock
adc
pop
std
daa
cmp
cli
or
test
shll
stc
in
int
sbb
xorl
icebp
jmp
ss
jecxz
sti
loop
leave
std
or
mov
ret
and
xchg
nop
pop
or
cmpsb
mov
je
mov
ret
push
mov
adc
mov
mov
clc
mov
lock
jle
cltd
pop
mov
lds
xor
or
stc
outsb
or
loop
cs
add
add
decl
fsubp
loopne
xor
or
ljmp
es
lods
or
lds
das
mov
mov
sub
cli
mov
pop
mov
xchg
enter
sar
sar
sbb
sbb
xor
inc
or
popf
adcl
sbb
nop
add
mov
imul
inc
jmp
mov
push
test
ret
xchg
cli
fistpl
fimull
or
jl
js
insb
pop
aam
mov
xor
lds
mov
and
rcrb
fcompl
mov
fnsave
jp
rcll
adc
adc
call
and
push
insb
test
adc
pop
loop
bound
xor
call
sbb
inc
hlt
push
and
pop
pop
ret
sub
mov
cli
push
fidivl
lods
idiv
aaa
xchg
mov
pop
subb
loop
into
push
or
arpl
mov
cli
fld
or
fmuls
sbb
adc
dec
mov
pop
sub
sub
jno
icebp
adc
mov
sub
mov
mov
imul
cmpb
popa
sub
mov
mov
sub
xor
sbb
mov
xchg
icebp
out
mov
dec
inc
inc
sahf
mov
xchg
insb
out
push
out
or
add
fwait
mov
add
sbb
or
out
mov
fsubl
adc
jmp
add
cmp
int3
mov
xchg
adcb
lock
dec
xchg
shrl
fisubl
es
lcall
dec
push
mov
or
pop
loopne
in
adc
cli
adc
rorb
inc
subl
push
push
mov
and
dec
dec
add
inc
inc
and
jl
movsb
xor
shl
pop
pusha
outsl
pushl
sub
adc
pop
sub
in
lret
test
insb
push
adc
xor
lret
es
sbb
xorb
add
and
jbe
repz
pop
hlt
bound
and
insb
rorb
sbb
add
lock
jmp
fwait
dec
out
out
movsl
jnp
add
cli
mov
mov
mov
dec
dec
dec
jo
and
daa
add
mov
in
roll
stos
sbbb
sub
testl
inc
loope
fimull
pusha
add
push
daa
push
adc
and
adc
int3
shlb
mov
in
push
imulb
mov
lcall
mov
aam
sbb
arpl
sti
push
sbb
mov
cmpsb
lock
rol
pop
mov
mov
dec
mov
dec
loop
and
push
sbb
pop
decl
and
clc
aaa
sbb
inc
fdivr
xchg
enter
loop
xor
enter
inc
mov
jne
icebp
add
jb
sbb
lds
incl
pop
lock
lret
aas
jmp
jb
cmp
mov
push
and
xor
jne
mov
mov
out
mov
jnp
xchg
inc
sarl
or
pusha
decl
add
lahf
pop
add
mov
popa
movsb
mov
incb
aaa
add
imul
sub
sti
fbld
and
shrl
or
mov
cwtl
gs
icebp
pop
decl
push
mov
pop
push
nop
jg
orl
shr
ret
push
inc
mov
mov
pop
add
or
and
je
jg
shll
mov
sub
inc
inc
jp
pushl
pop
clc
jecxz
add
sbb
jae
mov
mov
ljmp
dec
xchg
stos
outsl
push
xchg
add
xchg
lret
add
movsl
fists
in
enter
push
js
mov
sub
mov
movb
inc
aaa
mov
add
add
inc
ljmp
sbb
gs
sub
ds
jbe
push
outsb
push
dec
das
push
es
je
je
std
icebp
push
add
pop
add
push
adc
mov
icebp
pushl
fcoml
or
jge
xchg
xchg
jmp
cmp
jb
or
test
add
outsl
rclb
pusha
out
je
scas
pop
add
mov
sbb
pop
adc
or
push
pop
dec
jp
push
cmp
jae
push
fcmovb
ljmp
icebp
sub
pusha
fistps
sar
or
add
popf
popf
add
nop
insl
xor
adcb
jb
or
add
aam
cli
dec
mov
jb
repnz
mov
sub
leave
add
xchg
mov
dec
rolb
sub
test
push
xlat
add
pusha
cmp
movsb
cmp
shlb
sbb
nop
aad
data16
decl
dec
lods
fwait
xchg
test
shll
add
ja
mov
lcall
test
shrb
xchg
jl
push
xor
stos
rcl
cmp
pop
mov
push
lcall
push
pusha
pop
inc
inc
mov
add
pop
add
adc
add
icebp
stos
hlt
scas
jp
add
mov
push
or
pop
ret
repz
pop
xchg
test
call
mov
int
test
add
mov
push
push
inc
cs
cmp
cs
push
sub
ret
jo
xor
inc
lods
cmp
les
lret
push
shrl
and
sbb
push
jbe
add
sub
clc
or
test
inc
arpl
inc
mov
lods
sbb
add
sub
mov
cmp
int3
lret
ss
cld
xor
cld
lahf
incb
call
lret
push
inc
adc
imulb
inc
icebp
scas
clc
pop
les
add
cmp
mov
ljmp
jbe
aad
sub
pop
xchg
mov
into
aaa
pop
subl
lds
jle
scas
add
incl
add
pop
sbb
and
rcr
xchg
pop
sbb
out
clc
aaa
outsl
ret
repnz
pop
pop
dec
adc
mov
aas
push
mov
push
mov
decl
jecxz
lods
in
adc
sar
mov
rorb
addl
fisttps
cmp
test
repz
mov
jb
rcrb
mov
roll
and
xchg
sub
mov
push
test
push
jl
ret
lods
sbb
outsb
into
mov
mov
add
loopne
lock
and
add
das
rcrb
mov
test
inc
xchg
in
fmulp
and
jl
pop
and
lock
jge
push
rol
lea
push
pop
xchg
sbb
rol
ljmp
mov
testl
jns
lahf
xchg
call
and
fimull
xchg
pusha
jecxz
test
add
mov
lret
add
popa
jmp
std
mov
and
push
cmp
and
stc
or
push
mov
push
hlt
push
adc
icebp
push
push
add
inc
int3
inc
and
mov
fs
push
add
mov
loopne
test
clc
adc
push
dec
lods
mov
mov
popf
add
push
cwtl
push
mov
scas
mov
in
stc
xchg
movsl
dec
adc
in
mov
cli
outsb
jbe
scas
mov
pop
push
fildll
nop
cmc
mov
xor
jns
lods
sbb
out
mov
outsb
sub
cli
cltd
subb
loope
jecxz
leave
cmp
sub
xor
xchg
pop
insl
push
subb
call
andb
add
pusha
ljmp
fwait
imul
mov
xor
dec
imul
xchg
outsl
dec
dec
mov
cli
or
mov
fadds
pop
cltd
adc
out
rcrb
sarl
adc
jno
xor
fisubl
mov
and
ds
dec
pop
decl
push
cmp
je
adc
test
addl
addr16
add
bound
dec
mov
outsb
jo
lds
scas
mov
dec
loopne
xchg
movsb
dec
cmpsl
cwtl
enter
mov
and
lcall
pop
inc
das
jp
les
insb
cltd
cmp
add
inc
loopne
ret
mov
nop
packsswb
enter
jb
js
outsb
or
pop
xor
insl
push
std
xchg
mov
mov
mov
xchg
movsl
push
lcall
pop
mov
push
ss
sbb
div
sub
add
pop
or
xchg
push
rcrb
pop
das
repnz
popf
xchg
test
push
mov
bound
xor
dec
shlb
incb
shr
cmp
inc
into
and
pop
inc
in
or
es
mov
fisubrl
mov
mov
mov
int3
push
punpcklwd
dec
jg
fwait
imul
in
jge
and
mov
je
or
adc
push
mov
sbb
add
sbb
inc
outsb
sub
or
push
adc
call
inc
pusha
les
push
inc
or
inc
mull
jle
dec
sub
clc
xchg
add
xchg
lcall
jmp
cmp
sbb
dec
add
rclb
stos
je
shrb
push
fcmovb
iret
or
or
xchg
cltd
push
mov
incl
shr
fcoml
and
call
jb
lahf
jae
adc
adc
adc
xorl
mov
inc
aas
sub
xchg
cmpsb
and
mov
mov
sub
mov
mov
data16
pop
pop
lcall
pushl
jns
cmp
xor
out
add
sbb
outsb
int
xor
adc
xchg
push
or
std
xchg
aam
xor
outsb
jmp
push
dec
sti
xchg
roll
xor
jae
pop
lock
inc
cli
inc
push
lods
out
imul
adc
jecxz
pushl
nop
pushf
and
ret
fmuls
sbb
push
and
shlb
add
filds
dec
data16
and
ljmp
cmp
pop
subb
inc
dec
jmp
add
mov
je
lahf
and
mov
std
rol
mul
mov
add
sbb
jnp
cmp
mov
test
es
pop
cli
int
out
xor
into
jl
in
xor
adcb
add
adc
adc
mov
or
lcall
push
fdivrl
not
mov
mov
repnz
rorl
lcall
cmpb
adc
and
popa
xor
adc
outsl
cli
cs
push
and
cmc
and
fcomps
add
cmp
repnz
cltd
ds
adc
or
cs
filds
ljmp
add
nop
pop
push
mov
xchg
jb
fidivrl
scas
sub
ret
lds
rorb
scas
jge
and
inc
xchg
retw
loopne
or
add
or
scas
mov
shrb
ret
mov
add
lea
add
int3
cwtl
std
dec
jbe
sbb
push
fistpll
mov
dec
hlt
das
nop
mov
bound
jbe
adc
call
and
mov
repz
add
push
loopne
cs
scas
and
decl
data16
adc
das
mov
mov
stos
xor
das
mov
cwtl
or
push
and
jp
lock
cltd
cmpsl
pusha
inc
bound
popf
mov
rolb
ficompl
clc
pop
cmc
mov
jecxz
mov
movsl
je
les
mov
js
xor
add
ret
dec
fcomip
pushf
out
popa
insb
push
inc
mov
aaa
jns
adc
adcb
push
mov
or
cmp
jge
mov
inc
clc
or
pop
in
mov
daa
push
adc
mov
nop
pop
aam
and
je
daa
mov
lock
pop
and
and
movsb
sbb
xor
dec
jno
push
add
and
jg
or
xchg
and
out
inc
in
js
loop
cmpl
movsl
sbb
xchg
pop
int3
jecxz
mov
jne
inc
outsl
or
push
popa
loopne
push
dec
hlt
fucomp
jbe
clc
pop
cmpsl
fcmove
fcoms
lret
mov
cli
test
aaa
inc
mov
xor
sub
push
lret
jmp
call
test
adc
xor
or
sbb
clc
jmp
aaa
inc
test
or
sub
dec
test
inc
shl
fbstp
dec
push
rcll
lea
dec
test
inc
addb
add
repnz
add
sbb
movhps
pop
pop
jg
xor
cmp
xor
ds
sahf
jg
xchg
jg
cs
clc
jg
mov
out
adc
mov
cmpsb
xchg
xchg
and
push
out
add
xor
dec
mov
sub
pop
movlps
mov
fisttps
jg
ljmp
jle
fcmovnbe
pusha
push
pop
aaa
in
lds
xor
or
mov
enter
push
into
sbb
loop
xorl
sbb
sbb
js
jle
fldt
leave
bound
mov
jae
mov
das
push
sar
jmp
mov
mov
clc
ljmp
fwait
pop
pop
cmp
push
and
inc
addr16
or
mov
das
jle
or
aaa
ss
dec
shll
sub
or
xor
mov
mov
scas
mov
bound
inc
or
cld
call
push
dec
insb
sub
dec
adcb
inc
sub
jge
jmp
ret
add
or
and
cmp
cmpsb
sub
xor
stos
rol
jg
lcall
sbb
shll
je
adc
gs
mov
pop
mov
and
movsb
dec
mov
jno
jo
lods
lods
inc
fnstsw
jl
stos
adc
mov
in
xor
sbb
cld
xor
add
mov
inc
test
in
pushf
scas
cli
pop
jl
lcall
push
jo
fdivrl
xor
shll
scas
js
idivl
xor
sub
jne
aaa
xlat
loopne
push
ljmp
mov
ror
decl
adc
mov
add
push
stos
nop
cmp
fucomip
jg
mov
js
cmpsb
mov
jnp
js
and
add
push
nop
inc
ss
in
sbb
xchg
inc
sbb
arpl
pop
mov
cmpsl
lcall
repz
add
jne
rcr
decl
sub
dec
scas
dec
and
or
sub
sub
mov
lcall
sbb
adc
cli
mov
enter
rorb
lea
xor
xchg
pop
pop
sub
test
in
cmpsb
int3
outsl
mov
mov
shrb
or
pop
jo
mov
lods
in
pushl
add
out
sbb
js
sub
xor
inc
cli
push
sub
cmpsl
int3
sbb
incl
xor
adc
les
cmp
add
jl
into
xchg
add
jge
fbld
or
orb
mov
stc
push
push
filds
aaa
mov
gs
into
jo
jg
dec
jp
mov
jle
popl
fdivs
jmp
inc
fdivr
ret
mov
add
cltd
inc
sahf
imul
and
cli
jmp
fadds
ret
adc
and
sbb
movsb
ret
dec
loopne
stos
popa
xor
movsl
mov
rorb
daa
std
mov
adc
sbb
or
stc
xchg
ret
shll
sub
dec
movsb
in
std
testl
sbb
cmp
mov
xor
xchg
ds
cmp
inc
or
pop
filds
fistpll
inc
and
push
test
fdivp
leave
xchg
jl
test
repz
inc
xor
idivb
les
xor
pop
icebp
in
xchg
jle
fimuls
xchg
mulb
fmull
js
jns
adc
push
inc
sbb
fistps
arpl
sbb
mov
xchg
push
loop
cld
idiv
das
sbb
pop
lds
aaa
mov
inc
xchg
int3
xchg
or
mov
jle
push
xchg
xor
mov
stos
dec
fcmove
cmp
ja
xor
adc
aam
jmp
xor
mov
aad
icebp
pop
mov
jno
pop
push
out
stos
xor
pop
push
adcb
push
mov
mov
sbb
and
adc
pop
jge
sbb
bound
sbb
xor
add
je
xchg
incb
les
jmp
test
add
mov
and
test
mov
cld
int
add
jbe
stos
shlb
or
pop
pop
popa
cmp
int
mov
out
pop
adc
ja
icebp
sbb
ja
loop
mov
inc
xor
daa
sbb
push
cmp
pop
inc
inc
lahf
rolb
mov
jmp
aam
js
adc
xor
leave
ret
adcb
imul
mov
ds
popf
jae
icebp
in
pop
popa
ret
or
fstpl
pop
pop
sahf
jecxz
mov
mov
lea
cmp
mov
mov
jl
adcb
mov
es
add
dec
jg
jne
data16
xchg
inc
dec
adcb
add
aas
jmp
mov
ss
ds
pop
ljmp
dec
mov
movl
jno
mov
and
or
cmpxchg
sbb
in
xor
push
push
ja
mov
lods
fistl
cmp
push
iret
movsb
mov
iret
test
inc
rorl
jae
mov
xor
sub
pusha
sete
sahf
add
push
out
pushl
ret
les
arpl
aaa
push
mov
jb
outsb
mov
jmp
add
mov
jnp
movsl
iret
or
int
mov
sbb
xchg
dec
divl
in
bound
and
addr16
jmp
cmpsl
inc
pop
cmc
out
div
xchg
mov
jnp
nop
xchg
sahf
push
mov
add
pop
or
sarl
push
sub
cli
cmp
push
xlat
add
rsm
shrl
pop
dec
pop
lcall
std
xor
decl
push
shlb
jo
jge
mov
inc
xor
fidivs
test
sub
mov
xor
inc
inc
pop
or
ds
dec
inc
stos
pop
cmp
cmp
es
stos
daa
xchg
push
rcll
outsl
test
call
stc
mov
or
shld
fldl
mov
nop
orl
std
sbbb
jg
stos
cld
sbb
xor
push
sbb
and
or
fwait
mov
inc
test
and
cld
int3
mov
test
adc
cli
dec
movb
add
xor
inc
out
sbb
lret
add
push
out
ret
jle
sarl
pop
mov
xlat
rclb
push
stc
sahf
loopne
fldt
mov
loope
out
and
jl
insb
call
cmp
sbb
push
pop
std
add
jp
fcomp
xchg
popa
jbe
shll
in
adc
loope
cmp
sarb
dec
adc
mov
pop
dec
or
push
pushl
lods
outsl
and
push
loopne
mov
es
loopne
shlb
and
push
je
dec
adc
js
and
jae
dec
sarb
js
inc
jb
ret
ljmp
ljmp
fisubrs
push
adc
pop
dec
pushl
call
push
sbb
push
les
loopne
cmpsl
dec
psubsb
add
and
test
sbb
push
mov
lcall
imul
loope
ja
sub
notl
flds
pop
sbb
mov
xorb
nop
or
loopne
adc
dec
jl
mov
loop
inc
lock
fildl
or
jmp
inc
adc
cli
cmp
push
cmp
iret
xchg
mov
fiadds
inc
leave
filds
loopne
fiadds
mov
add
jg
scas
dec
pop
popa
jmp
cmpl
ffreep
mov
or
cltd
ja
cwtl
xchg
dec
xor
jge
cmp
push
nop
and
jp
pop
mov
push
mov
push
cmp
int
mov
inc
sar
sbb
addr16
insl
les
repz
mov
inc
jg
add
out
mov
movb
sti
add
mov
dec
test
dec
mov
push
mov
cmc
mov
pop
movsb
arpl
ds
jno
and
add
jg
push
sub
pop
fs
pop
and
ficomps
sub
jbe
sub
jno
flds
jae
sub
or
or
fldt
fildl
es
and
mov
mov
pop
mov
jmp
ljmp
xor
fsubrl
dec
jp
pop
jae
mov
test
add
fmul
loopne
loopne
xorl
push
ret
movsb
pop
movsl
push
sub
ja
jmp
mov
insb
out
ja
push
jns
inc
jge
loopne
or
sub
pop
push
daa
lock
std
sbb
cmp
mov
aaa
lods
adc
add
or
and
ja
mov
lds
cmp
decl
sahf
scas
and
and
inc
mov
ljmp
mov
sarl
add
pop
xchg
ljmp
or
sti
jg
or
nop
insb
or
sub
aam
inc
sub
int3
push
cmpb
sub
cmc
xor
push
inc
jbe
test
loope,pn
pop
outsw
aas
nop
cli
addr16
jns
ja
scas
push
dec
loope
aas
je
add
fistl
sahf
dec
inc
xchg
mov
in
adc
movsl
jne
mov
inc
or
jne
cli
inc
sbb
cmp
adc
bound
push
arpl
sub
push
sbb
xchg
cmp
mov
outsl
cwtl
inc
pop
fdivs
pop
xchg
lahf
in
add
stc
cmp
mov
bound
sti
add
inc
jns
add
scas
mov
sbb
test
pushl
and
jnp
pop
pushf
ret
xchg
sub
lcall
or
adcl
scas
mov
andb
fcomip
adc
pop
jle
push
xchg
loope
add
test
mov
push
mov
es
dec
insl
pop
push
in
ret
and
je
xor
fadds
lods
xchg
push
and
inc
mov
cld
pop
sub
inc
mov
cltd
incl
sub
fstl
push
test
dec
rolb
add
xchg
sar
scas
adcb
stc
cmp
loopne
mov
sti
pop
cmpsb
jmp
aam
jecxz,pt
lds
inc
test
add
rol
pop
frstor
loopne
xchg
jno
mov
clc
dec
mov
xchg
push
rcrl
popa
aam
mov
push
icebp
or
ret
mov
push
rcrb
hlt
call
mov
xchg
dec
bound
addr16
mov
or
outsb
mov
fistpll
mov
inc
ret
ljmp
add
mov
fdivl
fwait
push
ljmp
push
jo
and
pop
insl
dec
in
and
add
jmp
les
jge
cld
pop
pusha
mov
stos
out
sbb
mov
sar
cmp
idiv
dec
sbb
and
cwtl
mov
adcb
xor
mov
sub
in
and
jp
rolb
inc
mov
lds
in
sub
fwait
leave
or
push
js
xor
fwait
sbb
push
ss
dec
data16
clc
shrl
jl
sub
cmp
mov
mov
mov
jbe
ljmp
mov
add
pop
lds
test
movl
mov
test
mov
outsl
notl
dec
push
into
iret
xor
enter
mov
push
inc
cmc
arpl
inc
scas
xchg
mov
fadd
jns
push
lret
adc
xchg
jle
ljmp
loope
inc
popa
clc
fbld
lock
jb
ss
scas
and
lock
test
and
push
iret
int3
push
cld
sub
mov
push
xlat
inc
sarl
lret
ret
inc
pushf
sbb
fistps
pop
sub
decl
add
repnz
ja
push
cld
fildl
pop
pop
stos
sub
add
xor
jnp
aas
shll
stos
xchg
push
mov
call
mov
xor
xor
mov
testl
dec
mov
pop
sub
jge
jecxz
push
cmc
cwtl
mov
adc
add
ret
dec
inc
sbb
jecxz
addr16
fprem
or
jb
add
xorb
notl
fistps
scas
sub
in
jg
mov
icebp
pop
and
push
subl
mov
mov
dec
xchg
inc
fisttpl
add
in
ds
cld
in
mov
push
xchg
fs
push
fsubl
and
mov
fs
push
mov
rolb
decl
adc
pop
mov
pop
jp
jb
cwtl
adc
test
insl
jp
add
addb
dec
sbbl
xor
mov
mov
out
or
cmp
dec
jecxz
ret
test
hlt
repnz
mov
andb
fimuls
dec
ret
pop
aaa
or
nop
in
push
jae
fiaddl
push
in
repnz
cmp
popf
std
das
and
mov
mov
xchg
outsb
out
and
xchg
mov
sub
mov
add
out
and
adc
aaa
fs
js
jle
std
outsl
pushl
nop
inc
jb
popa
dec
dec
cmp
test
and
pushf
push
mov
ja
lea
xor
in
fdivs
pop
les
js
mov
rcl
mov
test
or
add
fisttpl
xchg
cmpb
mov
xchg
add
inc
dec
xchg
enter
ret
cmovnp
lods
jmp
pop
sahf
mov
adc
push
outsb
or
and
ja
les
jbe
je
sub
shll
jmp
shr
jg
test
mov
fsubl
lahf
lret
inc
adcb
pop
scas
inc
fucomip
inc
cli
mov
jo
ja
xchg
fcoms
clc
cs
xchg
fisubs
sub
add
mov
insl
js
mov
movsl
sahf
adc
mov
or
mov
popf
xchg
pop
out
mov
adc
adc
jb
pop
std
xor
outsl
push
dec
dec
test
jmp
ret
imul
sbb
push
out
mov
stos
cwtl
xchg
scas
xor
sub
xchg
jecxz
sub
mov
test
push
icebp
faddl
popf
push
cmpsb
sub
xor
das
cmp
mov
jmp
and
rolb
jnp
sbb
adc
mov
mov
mov
xor
xorb
and
repz
das
shrb
sub
jb
or
cmp
sahf
sbb
roll
dec
add
std
call
call
daa
popf
xor
loop
mov
pushl
cld
cmp
inc
fimull
repnz
cmp
scas
xor
insl
stos
cmpl
orl
mov
cmpsb
test
pop
enter
push
ret
add
lret
cmp
dec
adc
ljmp
aas
add
lcall
mov
add
jmp
test
loope
xchg
pushf
mov
xchg
adc
movsl
movsl
xor
mov
in
pop
lock
cs
mov
iret
mov
mov
jl
jmp
pusha
and
rcl
mov
xchg
cmp
or
jg
std
mov
add
xor
xor
add
enter
dec
cmc
ljmp
ficomps
repnz
and
sbb
fistpll
or
xor
jns
jno
cmp
in
lock
mov
sub
mov
add
test
movsb
dec
adcb
xor
stos
pop
test
jmp
mov
rorb
inc
xacquire
cld
mov
xchg
pop
dec
sub
popa
xchg
sub
std
xor
fucom
and
jg
lock
fsts
adc
js
mov
sub
push
aas
mov
jne
jle
mov
nop
pushf
hlt
mov
sub
rcrl
cmp
sbb
fwait
insl
push
xor
dec
les
mov
dec
inc
add
or
jae
dec
call
mov
aad
push
cmc
fisubs
cmp
call
call
xchg
pop
shlb
push
pop
ret
bnd
ud0
and
mov
shr
mov
cmpb
push
ljmp
test
out
sahf
mov
inc
inc
ds
gs
icebp
inc
stos
jge
into
and
push
inc
ret
xchg
ret
lret
jg
aaa
or
in
and
jb
das
xchg
fwait
cld
xor
dec
mov
shl
popf
mov
movhlps
testl
add
push
fildl
lcall
mov
inc
push
cli
or
adc
imul
cli
fldcw
loopne
push
out
cs
xlat
std
call
ja
lret
push
cltd
mov
sbb
jle
xchg
adc
dec
stc
out
test
jle
mov
adc
loop
outsl
dec
jmp
faddl
lds
or
adc
jmp
add
sbb
push
jmp
push
and
jnp
cmp
lock
adc
adc
dec
mov
push
out
cmp
leave
xor
getsec
dec
push
out
cmp
clc
call
repnz
sahf
inc
icebp
scas
js,pt
jo
mov
aas
fsubs
jl
mov
cli
test
inc
jmp
sub
sahf
fldenv
add
adc
lods
lock
dec
inc
ja
insl
jno
sub
test
and
insl
aad
add
pop
cmp
inc
mov
and
movsl
movb
jb
js
aam
xchg
add
ss
jg
sub
int3
dec
jnp
imul
jl
dec
mov
pop
jg
pop
cli
xor
mov
adc
into
nop
pop
testb
xchg
lahf
xchg
jbe
add
xchg
in
adc
inc
jmp
ret
stos
add
addr16
mov
pop
sub
inc
jae
cmpsl
js
jb
lret
mov
aaa
in
mov
jmp
sbb
xor
aas
fdivrs
lods
add
jge
ljmp
data16
in
sbb
aam
mov
ret
lcall
sbb
mov
cmp
arpl
adc
ret
add
inc
aaa
sbb
sub
add
fs
pop
mov
fsubs
mov
pop
hlt
fcomps
decl
pop
sub
mov
fs
stc
xchg
std
xchg
and
add
xchg
push
imull
call
inc
xor
scas
push
sarl
cmp
pop
and
push
mov
rcrl
imul
es
inc
push
dec
outsl
sub
mov
cwtl
xchg
xchg
cld
data16
sub
jmp
outsl
cmpsl
jno
das
add
out
lahf
add
dec
in
or
lods
inc
daa
pop
add
fistpll
sti
push
pop
sbb
add
pop
outsb
or
rcrl
cmc
lret
rolb
ret
es
sbb
xchg
add
jge
les
and
pop
mov
push
xchg
ret
cmc
jo
das
adc
mov
enter
or
push
jecxz
insb
dec
fiaddl
incl
xchg
sub
js
ljmp
cmpb
js
mov
add
lock
movsb
hlt
pop
loopne
jmp
mov
xchg
mov
pop
sbb
and
mov
cmp
mov
add
into
inc
loop
xchg
xchg
xor
add
out
and
sub
addl
cmp
rorb
xor
dec
sar
add
js
popf
pop
or
ret
push
sbb
test
push
push
push
movsl
repnz
mov
pop
xor
pushw
cwtl
mov
mov
addr16
nop
ja
xor
lock
test
and
imul
jg
rorl
adc
in
dec
mov
insb
daa
adc
negb
and
xor
xorl
dec
loop
fisubrl
and
add
fbstp
rolb
add
notb
push
add
push
addr16
sarl
push
cmp
je
or
add
jg
lock
test
inc
and
fimuls
lret
jge
incl
sbb
xchg
sub
lods
push
ficomps
sub
cmpl
rolb
bound
sub
cld
jg
and
pop
cli
xor
out
inc
les
pop
jmp
sbb
mov
in
inc
sti
in
fwait
add
xor
jle
bound
decl
cli
or
inc
pop
ud1
es
jmp
enter
pusha
push
jno
cmc
js
je
rcl
xorb
rcrl
icebp
xchg
out
push
cmp
ljmp
in
jecxz
enter
movsl
push
jbe
sbb
mov
test
push
adc
push
adc
mov
mov
pop
mov
aaa
xor
in
cmp
push
call
dec
inc
scas
mov
mov
loop
xor
mov
jecxz
push
cmp
cmp
hlt
outsl
je
xchg
add
sbb
dec
push
fdivs
mov
and
mov
shll
fldl
nop
sbb
cli
pop
push
add
or
mov
push
incl
shlb
mov
add
inc
mov
jg
lds
insl
idiv
imul
lds
sbb
ljmp
cmp
sub
or
das
or
dec
mov
dec
adc
mov
cmpb
and
add
jmp
dec
push
fbld
daa
cmp
loop
mov
js
ds
stos
xchg
push
clc
mov
adc
mov
scas
add
cmpsl
xlat
push
push
sti
pop
dec
arpl
aas
mov
and
rcrb
pusha
push
faddl
lock
sti
jb
xor
pop
sub
or
shrb
sub
and
jge
xchg
xchg
or
mov
gs
sbb
cmc
lods
lcall
mov
mov
or
xchg
in
hlt
test
sbb
stos
cli
inc
inc
cmp
pushf
sub
sbb
out
push
mov
push
mov
sub
mov
fnstsw
push
adc
lock
mov
dec
jb
enter
xor
jl
movsl
cmp
loop
fistl
test
jl
jecxz
mov
inc
ss
sbb
test
clc
dec
jp
ljmp
jne
sbb
xor
faddl
xchg
mov
es
xchg
inc
lcall
xchg
jae
pop
xchg
pusha
xorl
and
aas
je
sbb
out
jnp
or
push
negb
inc
mov
ret
jp
inc
faddl
jmp
or
xor
mov
incl
stos
sbb
fsubrp
lock
mov
sbb
mov
ljmp
cltd
sub
jle
mov
sti
sub
stos
push
cmp
ret
decl
movsb
repz
or
xchg
adc
inc
pop
pop
loop
movsb
notl
push
and
hlt
cmp
aas
inc
push
mov
dec
inc
push
decb
adc
mov
stc
or
cmp
inc
dec
jg
push
adc
sbb
adc
jmp
shlb
and
hlt
pop
cmc
cltd
dec
push
movsl
clc
pushf
or
inc
mov
push
ljmp
cmp
ret
out
inc
aam
pop
or
fs
cmp
inc
stos
ljmp
dec
adcb
out
add
xchg
clc
sub
mov
push
add
xchg
dec
mov
inc
jb
inc
int3
push
and
mov
cmp
outsb
divb
adc
lock
loope
mov
push
aam
jg
les
movsb
sbb
imul
adc
xchg
loopne
or
mov
mov
lods
das
movsl
rcpps
cs
stos
das
sub
popf
hlt
lret
outsb
lcall
dec
pop
ss
fstl
les
pop
daa
cmp
adc
test
pop
jl
cs
icebp
push
mov
and
cmpsl
int3
sahf
inc
and
imul
ffreep
movb
xchg
clc
inc
xor
into
jbe
lods
inc
and
add
popa
or
xchg
mov
inc
pushl
adc
jo
les
sbb
cmp
mov
mov
sub
inc
sub
dec
int
push
cmp
add
aas
clc
pop
push
fnsave
pop
sub
ror
mov
and
pop
mov
cld
mul
push
test
add
dec
push
xchg
push
lock
fwait
sub
mov
dec
loop
test
mov
lahf
jecxz
jl
pop
cmp
dec
inc
xchg
pop
push
aad
inc
rorb
cmc
mov
je
mov
cmpsb
outsl
call
xchg
xor
or
mov
push
sub
test
out
fbld
es
pop
jecxz
or
imul
pop
int
repnz
jg
sub
cmp
ret
jnp
and
sbb
inc
loope
push
or
lcall
mov
mov
jno
fdivp
dec
jg
fadd
and
je
test
xchg
and
std
push
in
repnz
sub
mov
divl
bound
lea
sarb
and
mov
jbe
xchg
pop
sbb
ds
cmpxchg
pop
add
sbb
enter
nop
mov
cld
cli
int
icebp
jp
mov
add
out
xchg
sbb
or
sahf
push
adc
sarl
pop
fiaddl
lods
adc
flds
jmp
or
mov
xor
push
mov
lock
fsts
and
add
and
hlt
push
lds
mov
dec
and
ljmp
arpl
xchg
push
sbb
in
cmp
sar
sub
dec
push
mov
in
das
clc
incl
pop
mov
push
pop
jo
adc
in
adc
xor
xchg
sbb
hlt
mov
add
add
inc
out
adc
sar
dec
leave
sub
jo
mov
inc
repnz
cmp
or
scas
add
lret
sbb
inc
lds
scas
add
ds
mov
fstps
or
inc
sbb
filds
fcomip
mov
ret
mov
es
loope
dec
sbb
mov
push
mov
sbbb
cmp
shll
mov
dec
sub
pop
cmp
jecxz
inc
loope
jo
mov
out
xor
adc
sub
push
push
mov
mov
mov
and
mov
rcl
lock
in
lar
decl
cmc
mov
lcall
stos
test
push
xchg
lods
lea
lret
decl
mov
inc
cmp
and
loopne
pop
pushl
in
jne
mov
xor
mov
popl
push
add
hlt
mov
clc
xchg
out
test
add
inc
or
insl
xchg
push
inc
jecxz
adc
add
fbld
pop
xor
ror
loope
dec
adc
cld
in
dec
mov
insb
mov
divl
xor
add
push
mov
or
movsb
cmp
xor
ss
sub
sbb
add
das
push
rolb
mov
ss
jae
xchg
and
inc
mov
enter
pop
iret
roll
xchg
pusha
adc
push
loop
mov
mov
flds
fwait
sub
sub
mov
mov
adc
shll
mov
jg
insb
ret
pop
mulb
sub
pusha
add
ret
push
sti
mov
mov
aas
decb
pusha
stos
rclb
mov
cltd
inc
xor
fwait
jbe
aam
jmp
movsb
xor
je
loope
test
sub
mov
fisttps
les
cmpsl
jmp
dec
push
std
jmp
jns
xorl
scas
sub
sub
push
repnz
inc
das
add
lods
mov
mov
xchg
nop
or
incl
sub
lock
xchg
shlb
sub
outsl
sub
jnp
es
jb
pop
pushl
out
sub
xchg
jmp
or
and
sbbl
adc
mov
insb
dec
sbbl
sbb
or
mov
sub
xchg
subb
dec
cld
add
lods
jle
dec
mov
inc
xor
and
orl
push
outsl
test
push
mov
pop
or
pop
mov
popa
jbe
mov
adc
sahf
add
sahf
cmovle
push
mov
div
dec
js
mov
idivb
adc
in
pop
clc
fcos
outsl
mov
add
inc
fldenv
addb
mov
inc
inc
rcr
inc
cmp
adc
fidivs
mov
or
mov
stos
jg
jl
xchg
push
fs
dec
sub
loopne
mov
mov
lret
or
das
rclb
mov
iret
mov
aaa
andl
inc
dec
call
and
test
pop
inc
push
sbb
decl
adc
in
cmp
int3
jb
mov
aas
push
lds
cmpsl
sub
aas
and
jnp
sub
xchg
xchg
lcall
outsb
mov
xchg
sbb
fdivr
dec
cmp
pop
daa
mov
mov
iret
or
xchg
mov
sahf
int3
mov
dec
push
jns
fadd
cmpl
fisttpl
shrb
into
sub
inc
and
int3
pusha
push
dec
rcl
enter
sub
and
push
sub
pop
xor
das
xor
stc
xchg
add
push
loopne
pop
lcall
jmp
ret
fldz
and
add
dec
jb
mov
inc
rcrb
outsb
lods
ret
push
mov
outsl
dec
push
dec
clc
add
or
sbb
rorb
ljmp
xchg
and
mov
inc
cmp
idivb
fwait
sbb
push
push
loope
push
jle
dec
loop
xchg
adc
inc
fldl
scas
fists
xchg
in
or
and
int
imul
fwait
and
add
and
cmpsb
bound
stos
mov
clc
xchg
clc
push
jle
shrl
gs
mov
pop
hlt
jb
mov
sub
mov
sub
sbb
mov
sti
cmpb
add
vphaddbd
dec
cltd
test
lock
mov
mov
mov
mov
and
or
mov
push
dec
push
popa
jg
pushl
add
out
pop
sbb
addl
dec
adc
clc
cmp
mov
insl
mov
jno
loope
leave
push
mov
movsl
fcompl
pop
rcl
aam
lret
stos
add
cmp
or
mov
jp
mov
incb
cmp
sub
sbb
adc
mov
adcl
pop
inc
or
pop
add
pop
sub
repz
push
int
inc
scas
mov
test
jo
daa
pop
push
jl
je
stos
sub
int3
mov
subl
add
push
xchg
je
jecxz
add
sbb
jge
sbb
jb
push
sub
aad
je
cmpsl
decl
ja
icebp
push
test
pusha
or
xchg
xor
push
cmp
ja
jp
add
adc
xchg
add
test
sub
icebp
add
lcall
enter
pmulhuw
ljmp
jno
cmpsl
pop
and
jle
add
lock
in
stos
add
in
jmp
lcall
sub
divl
or
mov
les
cli
mov
test
or
mov
inc
out
or
mov
inc
jg
xor
and
cmpsb
sbb
sbb
je
fisubrl
icebp
pop
ljmp
pop
loopne
xorb
icebp
ret
lock
pop
outsb
dec
push
add
mov
fdivrp
stos
add
stos
or
in
pusha
push
nop
andl
mov
or
pop
mov
movsb
sbb
mov
adc
loope
incl
sar
sub
sub
insb
cwtl
pop
or
add
ficoms
sub
outsb
push
ss
or
repz
mov
mov
or
push
sub
and
leave
inc
pop
add
clc
and
inc
add
hlt
ja
sub
je
cli
jg
xchg
lahf
stc
inc
test
mov
fwait
mov
mov
lods
push
shlb
jmp
xchg
xorb
stos
dec
mov
cs
mov
xchg
lods
jg
filds
bound
loope
orb
adc
loopne
sub
xchg
mov
push
xor
lock
push
or
or
or
push
call
clc
jg
push
sub
mov
dec
mov
aas
std
stos
lcall
js
nop
xor
dec
or
mov
imulb
ret
push
shr
inc
adc
jp
dec
pop
jle
addr16
inc
add
test
iret
mov
dec
sbbb
and
sar
out
xchg
inc
adc
xsaveopt
enter
pop
adc
mov
ljmp
orb
xchg
popa
addr16
orb
outsb
in
sarb
ret
add
fiadds
stos
sub
sub
push
rcll
push
dec
repz
les
or
mov
inc
fcmovb
jo
mov
adc
push
jp
adc
inc
push
xchg
ret
outsb
jl
sub
bnd
pop
cmpb
cli
sti
bswap
sbb
inc
mov
arpl
aaa
mov
int
push
push
ret
subl
scas
jl
xchg
add
or
loope,pt
push
cmpsb
xor
movsb
nop
jmp
lods
cwtl
lret
aad
fdivp
mov
pop
adc
xor
jbe
push
sar
lods
xchg
rcrb
xchg
pop
fists
test
adc
lock
mov
imul
sbb
testb
cmp
pop
ss
outsl
and
xchg
js
out
data16
lods
out
lock
pop
and
cvtpi2ps
das
lods
xor
xchg
inc
jle
push
inc
lods
cli
pop
icebp
mov
xor
loopne
mov
mov
fiadds
inc
pop
sub
pop
movsl
or
add
xlat
sub
out
xchg
jmp
ljmp
fcmovb
leave
cmp
push
mov
popa
rcrl
fisubl
inc
fs
fstpt
xor
fs
fucomip
dec
and
jns
dec
enter
idiv
pop
xchg
shlb
inc
test
and
mov
jle
jmp
pop
push
out
dec
mov
pop
adc
roll
test
sub
sti
aam
testb
inc
insb
and
or
std
dec
inc
mov
fadds
pop
xchg
pop
jge
sub
bound
mov
push
cwtl
ljmp
cmp
push
push
push
stos
mov
push
mov
or
inc
jle
loopne
scas
xchg
sub
dec
xchg
mov
clc
repnz
or
cmp
out
xlat
sub
sti
test
or
sbb
daa
fcmovnbe
incl
nop
xchg
cmpsl
ret
leave
cltd
bound
jecxz
add
data16
xchg
add
push
pop
and
or
pop
mov
lret
sbb
and
pop
push
or
xchg
inc
nop
gs
ret
lret
jg
add
hlt
add
jge
xchg
mov
test
jp,pn
rorl
push
push
daa
xchg
xchg
jb
cli
daa
adc
pop
je
jp
cld
mov
jmp
xor
pushf
pop
add
cmp
sbbb
ret
test
inc
sahf
xchg
insb
mov
mov
in
sbb
and
subb
and
ret
je
outsl
fmuls
cmp
mov
clc
pop
int3
xlat
mov
jo
movsl
mov
shl
mov
mov
inc
push
mov
xchg
mov
int3
mov
xchg
xchg
pushf
mov
sbb
inc
or
lret
fwait
rcrl
and
add
sub
pop
add
cld
call
adc
inc
sarb
dec
cmpsl
insl
xor
jnp
lock
cmpb
fwait
or
je
inc
dec
sbb
repnz
add
mov
lods
clc
hlt
sub
dec
xorb
fcoms
pop
dec
js
jmp
sbb
dec
mov
enter
nop
push
ljmp
mov
out
xor
sub
dec
pop
cwtl
xchg
test
repz
test
sbb
jae
xor
pop
faddp
inc
std
mul
ret
negb
out
xchg
mov
pop
or
jae
ret
insl
cmp
pop
std
push
or
js
ret
loope
inc
cld
cmpsl
mov
push
data16
dec
jmp
or
sub
pushf
add
pop
ljmp
sbbl
out
loope
outsl
add
fucompp
inc
repnz
inc
loope
adc
inc
subb
es
xchg
pushl
mov
cwtl
aad
fsubs
xor
jg
in
in
insl
cmpsl
push
dec
add
jle
testl
push
xchg
pop
or
jg
cli
adc
dec
push
std
into
and
inc
cs
push
out
add
es
rorb
rolb
repz
cmpb
mov
inc
jno
mov
mov
cli
add
ret
xchg
mov
std
outsl
lock
jns
jmp
inc
mov
fadds
test
pop
cmpsl
addb
and
loope
add
xchg
or
jl
cmp
pop
stos
leave
mov
jp
dec
jle
jl
addr16
sub
outsl
mov
std
add
push
sub
mov
xor
xchg
mov
push
out
imul
into
add
popf
add
pop
dec
clc
mov
enter
pop
movsb
iret
lock
push
leave
sar
sbb
push
dec
mov
adc
test
mov
lcall
loopne
loop
fwait
inc
call
pop
inc
loope
dec
xchg
add
into
fnstcw
mov
popf
je
lods
dec
es
ss
int
icebp
jmp
outsl
lret
hlt
or
decl
sbb
and
sub
mov
in
sub
inc
add
xor
shl
js
pusha
xor
xor
imul
or
stos
shrb
xor
out
mov
enter
pop
aam
xor
jnp
dec
dec
js
clc
and
es
and
js
or
enter
subl
adc
jnp
dec
jle
movswl
xchg
enter
cmp
add
pusha
sbb
adc
adc
arpl
push
pop
inc
mov
sbb
pop
ljmp
xor
adc
divl
daa
loope
sub
stc
or
lcall
fsubrs
lret
sub
or
pusha
xor
fsubrl
mov
fildl
mov
out
adc
add
xorb
mov
mov
dec
cmp
push
push
push
lret
sbb
scas
hlt
gs
xor
cmpsl
insb
and
or
call
xchg
jnp
loope
xchg
dec
mov
stc
lds
dec
add
out
dec
decl
pop
push
or
push
and
mov
sbb
jo
mov
repnz
pushl
dec
shrb
or
insb
xor
adcb
sub
sub
fwait
push
andb
inc
mov
ja
sbb
sbb
mov
aam
int
int
xchg
jo
and
pop
test
lahf
sahf
subb
dec
mov
test
pusha
xchg
sbb
arpl
mov
fcoms
stos
in
jmp
icebp
call
xchg
mov
mov
mov
ljmp
xchg
decl
idivb
add
add
mov
xor
movsb
sub
sbb
mov
sbb
insb
add
sub
or
push
add
xchg
or
pop
inc
sub
adc
or
js
lock
icebp
adc
hlt
add
mov
sarb
enter
rclb
cs
push
cmp
cli
ljmp
fmuls
rcrb
ffreep
inc
xchg
inc
or
add
test
or
dec
test
or
scas
ret
or
arpl
clc
dec
and
lods
or
add
pop
ljmp
xor
pusha
dec
fisubs
lds
jecxz
test
mov
imul
jne
outsl
loopne
pop
adc
jno
enter
out
lock
inc
dec
add
les
xor
icebp
lahf
cmp
dec
ljmp
sub
cli
cmpsb
cmp
daa
pop
sbb
test
insb
mov
adc
cmpsl
les
mov
mov
rolb
je
xchg
insb
es
push
sbb
mov
push
sub
push
mov
in
mov
mov
shll
scas
jbe
sbb
mov
fs
cmp
mov
jle
pusha
mov
xlat
fiadds
push
loop
in
or
push
mov
jle
and
adc
shufps
add
xchg
adc
addr16
cmp
jo
sbb
fs
and
cs
les
mov
icebp
mov
andl
xchg
jb
incl
cld
arpl
repz
and
pop
xchg
xchg
or
xor
push
sub
push
jbe
cmp
int3
ficoml
push
push
jns
les
mov
stos
jg
clc
test
pop
add
pop
mov
mov
cmc
push
jle
sarb
push
dec
cwtl
mov
pop
and
test
mov
rol
xchg
shll
aas
in
sub
mulb
cmp
adc
lock
mov
cmp
movsb
gs
mov
aaa
int3
and
test
std
push
adcb
xchg
add
xor
loope
in
jo
add
mov
jle
sub
jp
and
lods
into
or
push
call
dec
daa
or
mov
xchg
xchg
popa
stos
stos
add
mov
adc
inc
pushl
adc
mov
sub
cmp
fnstsw
ljmp
or
fwait
aaa
inc
movsl
jg
pop
ret
cmp
push
loope
mov
orl
loop
test
add
cs
mov
aad
aaa
stos
cmp
jecxz
adc
cmp
rcll
fcoms
jo
push
or
je
sbb
js
xor
pop
add
dec
jns
push
add
mov
imul
jne
inc
lcall
sbb
ljmp
scas
push
jp
pusha
sbb
inc
js
lods
inc
mov
loop
sarb
mov
and
aam
jg
jmp
shlb
inc
xor
jne
lock
add
jno
push
inc
je
dec
idiv
add
push
add
push
add
pop
ss
lret
push
and
fs
dec
rorl
jg
mov
mov
push
dec
cmp
push
cmpsb
inc
sbb
pavgb
push
popa
arpl
jno
push
insb
arpl
aas
push
cmpsl
cmp
decl
je
adc
data16
xor
rolb
sbb
rcll
adc
shrl
movsb
idiv
and
sub
mov
add
cmp
lret
lock
nop
ret
inc
aam
xchg
loop
push
adc
sub
aad
mov
cs
shlb
cmp
fistps
inc
inc
and
roll
mov
sarl
mov
incl
aaa
shl
push
sub
and
sbb
cmp
pop
adc
mov
fidivrl
push
jbe
adc
call
xchg
cmp
fwait
cmp
out
rcll
in
scas
jp
push
in
ljmp
push
cmpsb
jmp
push
xchg
jne
push
bound
and
ret
stc
out
xchg
scas
mov
mov
fistps
call
inc
mov
add
hlt
jo
scas
cld
xchg
jle
es
add
mov
nop
fsubrs
add
jb
pop
jecxz
lret
add
mov
push
and
das
nop
dec
push
rcr
cli
mov
xor
lock
cwtl
scas
sbb
add
mov
int
sahf
mov
jmp
sarb
push
int
arpl
pushl
push
lds
jmp
imul
inc
and
xchg
mov
push
mov
out
adc
mov
ret
lock
fists
xchg
hlt
dec
inc
or
push
jae
ja
stos
add
out
scas
jl
mov
xor
pusha
push
bound
pop
les
and
and
cmpsl
push
les
mov
rcl
push
mov
jae
xor
mov
add
fbld
xchg
and
dec
mov
add
decl
pop
aas
jo
bound
sbb
incl
inc
pop
fiaddl
cmp
fisttps
rcrb
in
push
mov
in
sub
mov
inc
lret
icebp
clc
adc
and
test
dec
push
je
cmc
pop
cltd
mov
mov
push
xchg
add
or
shlb
xor
sbb
lcall
clc
ret
add
pop
cs
and
mov
enter
jg
dec
std
inc
dec
mov
adc
cli
push
mov
clc
dec
call
jmp
sub
or
and
icebp
pusha
mov
fucompp
mov
and
ljmp
or
xlat
inc
sti
daa
fdivp
inc
add
xchg
xor
fidivrl
pop
leave
ficoms
clc
sub
add
shrb
aad
icebp
jmp
add
xlat
rol
mov
lea
mov
lea
clc
adc
xchg
lcall
pop
add
hlt
sub
and
sub
or
and
mov
stc
pop
repz
inc
shll
push
sub
jg
mov
sub
sub
lods
sub
test
pop
jmp
adcl
fsubrs
cltd
stc
adc
xorb
cld
push
adc
shl
outsl
and
add
mov
adc
call
jmp
loope
pop
cmp
decl
pusha
loopne
pop
and
js
sar
pusha
xchg
pop
call
mov
es
mov
cmp
push
and
outsl
push
mov
adc
inc
into
fimuls
adcb
mov
mov
aam
test
repnz
int
and
loopne
dec
sbb
cmp
insl
sub
inc
jae
lret
xlat
aam
std
add
sub
outsb
mov
mov
push
mov
jae
push
fildl
pusha
push
adc
out
or
pushf
and
ljmp
cmpl
mov
adc
or
pushl
mov
add
mov
std
sbb
iret
and
dec
sbbl
mov
rcrb
incl
adc
daa
loop
cld
lahf
add
dec
fwait
add
insb
inc
shr
dec
jo
dec
popa
dec
mov
jl
cwtl
mov
sub
jg
pop
addl
cmp
aad
or
addb
fsubr
add
jno
push
insb
aaa
mov
in
cld
mov
adc
decl
and
mov
inc
dec
sti
lds
xor
enter
cmp
mov
inc
adcb
out
icebp
out
stos
shll
ret
push
in
push
push
test
sub
or
or
adc
mov
outsl
push
sbb
push
pop
push
pop
cmc
sti
lret
cs
fcomp
sub
push
xchg
mov
jl
incl
mov
adc
cmpsb
push
jne
enter
cld
roll
arpl
push
mov
pop
hlt
fwait
sbb
cmp
lds
lock
cmp
repnz
cld
dec
repz
sbb
push
fisubrs
stos
mov
mov
or
repz
fiadds
das
push
out
pop
adc
rcl
adc
jge
hlt
in
mov
fisubrs
adc
xchg
enter
fistpl
out
andb
and
mov
jl
and
in
jle
dec
mov
aaa
insb
insb
rcr
testb
mov
daa
sarb
mov
xchg
ss
test
dec
test
test
pushl
jno
xchg
rcrb
xchg
pusha
mov
mov
xor
inc
loope
jp
cld
hlt
sbb
jg
cmp
sarb
pop
cmp
lcall
fisttpl
sub
inc
or
insb
sub
mov
fsts
mov
or
outsl
adc
push
andb
clc
stos
fiaddl
dec
movsl
mov
stos
pushf
nop
dec
lds
jmp
pusha
mov
cmpsb
int3
jge
sbb
mov
mov
es
jle
pop
ror
sub
aas
cltd
xor
xchg
lods
cld
out
push
bound
cmc
dec
les
mov
icebp
loopne
in
mov
mov
scas
fxch
enter
cs
pop
jnp
insl
add
jnp
or
push
and
lea
scas
enter
mov
mov
hlt
imul
xchg
add
cld
loopne
mov
ss
test
mov
iret
or
setbe
aaa
and
jle
aam
dec
and
sub
lea
inc
mov
push
pusha
out
mov
mov
stos
dec
scas
sub
jbe
ret
inc
xor
xchg
adc
stos
dec
jl
jle
test
je
adc
cmp
loop
insb
adc
shll
jl
dec
mov
mov
jp
mov
xchg
inc
sbb
pushf
add
mov
lahf
lock
fmul
loopne
xchg
adc
call
lods
xorl
arpl
jo
pop
aas
lret
adcb
pushf
icebp
add
add
repnz
push
mov
push
add
notl
sbb
mov
push
cmp
xor
lcall
or
xor
mov
inc
inc
je
outsb
repnz
loopne
xchg
out
adc
dec
iret
sti
xor
nop
fwait
adc
sar
mov
out
mov
mov
rorl
dec
dec
xchg
jle
push
push
add
sahf
or
insb
pop
mov
jns
test
push
test
mov
incl
lods
ret
lods
shrl
mov
push
hlt
jecxz
std
push
sbb
fdivs
xor
inc
dec
mov
outsb
xchg
push
addb
pusha
adc
cli
inc
push
jle
mov
js
mov
call
insw
bound
sbb
daa
ljmp
sahf
inc
xor
jl
icebp
out
adc
jo
js
mov
xchg
pop
push
mov
jmp
mov
xchg
sbb
adc
mov
push
mov
test
cmp
les
aaa
mulb
stos
popa
sbb
cmc
fsubl
andl
icebp
dec
mov
idiv
push
in
sar
out
jp
mov
rcr
add
femms
loopne
out
xchg
into
inc
pop
insb
and
fwait
cmp
and
ljmp
add
ret
xor
add
cld
jg
scas
or
push
scas
xor
pushf
jecxz
repnz
lds
mov
jnp
mov
push
jp
stos
call
std
ret
xor
insb
mov
fisubs
mov
stc
xor
inc
pop
inc
adc
cmp
jg
pop
pop
xchg
andb
jo
pushf
call
or
push
arpl
sub
js
mov
or
fdivrp
mov
pshufw
jo
out
adc
push
fnstenv
sbb
loope
xchg
jg
pushf
and
ret
adc
dec
push
sub
dec
pop
jbe
rolb
lock
es
xor
filds
fcomps
movsb
aaa
std
or
xor
jmp
loope
add
push
decb
loopne
test
cli
std
dec
adc
cltd
int
mov
in
push
ljmp
mov
jne
rorl
mov
dec
pop
adc
sti
sub
mov
scas
and
and
movsb
loopne
push
inc
cmpb
pop
mov
dec
or
jge
mov
incl
dec
loop
inc
pushf
xchg
add
call
mov
bound
dec
call
test
add
pusha
push
push
push
lret
xchg
scas
scas
outsb
pop
jecxz
mov
pop
sbb
push
jno
push
xor
jge
push
or
jmp
push
mov
cmp
jl
add
jns
pop
cltd
or
shlb
subb
inc
sbb
les
sarl
fadds
xorb
out
addl
pop
xor
jg
cs
add
ds
sub
add
wrmsr
stos
sub
pushl
adc
ja
movl
push
add
cmp
into
loop
sub
mov
lea
hlt
ljmp
je
jp
cmp
and
decl
sub
push
rorb
cmp
jmp
add
adc
cmpsl
scas
cmp
cmp
mov
subl
and
fcomp
or
clc
pop
aaa
sarl
cltd
dec
lret
and
cmp
aad
sbb
sbb
inc
enter
inc
mov
xchg
adc
sahf
or
pop
sbb
shrl
and
inc
aas
orb
loop
jl
testb
loopne
xchg
fcmovbe
pop
loop
ficomps
xchg
add
cmpsb
push
sbb
into
cmp
in
xor
mov
add
mov
jo
pop
or
or
je
stos
xor
in
lahf
xchg
mov
xor
mov
push
xor
loopne
jne
subl
jns
mov
insl
push
data16
ljmp
add
or
scas
add
dec
adc
std
xchg
xchg
inc
mov
ror
add
adc
inc
cmp
shr
mov
xorl
shll
mov
xlat
ljmp
adc
xchg
rcrb
cmp
mov
pop
call
sub
fs
aad
sbb
lock
clc
jb
inc
add
mov
mov
ficoms
pop
pop
mov
pop
adc
mov
idivl
insb
hlt
sbb
pop
inc
sbb
mov
push
mov
sbb
incl
mov
push
mov
fmuls
inc
mov
lret
inc
cmc
mov
outsl
aam
xor
popf
lea
ficoms
dec
arpl
pop
sbb
xchg
mov
hlt
movsb
cs
push
jl
outsl
jle
push
mov
push
pop
mov
adc
inc
sbb
ljmp
push
or
imul
xchg
aam
xor
add
cli
aas
or
xor
aaa
adc
punpckhwd
jl
or
sbb
loopne
aam
fbstp
and
jl
or
leave
pusha
shll
sub
mov
dec
mov
xor
inc
lea
jg
inc
adc
lock
subl
gs
add
pop
andl
imul
lds
push
sub
cmp
jmp
push
cld
loop
xchg
push
and
lahf
pushl
sub
mov
fadds
xor
adc
out
rcll
mov
push
jg
repz
adc
icebp
sbb
cmp
rol
shrb
punpckldq
mov
sub
mov
fidivs
pop
jns
mov
sbb
loop
pushf
push
sub
sbbl
mov
add
xchg
rol
out
pop
xchg
xchg
adc
scas
mov
sub
inc
adc
rolb
daa
fisubrs
repnz
mov
jge
xchg
xchg
mov
fwait
cmp
rorl
mov
cli
inc
out
aaa
xor
cmc
sbb
leave
stos
ret
inc
loope
push
mov
cld
icebp
roll
and
ljmp
jg
into
xchg
or
fwait
rcll
jg
sar
mov
mov
pop
xchg
and
sar
add
push
xchg
daa
jl
jg
sub
mov
add
cli
scas
jg
pop
xchg
push
insl
add
aam
fsubrp
ficoml
outsl
das
jp
mov
popf
popa
nop
pop
or
inc
fwait
jbe
sbb
inc
mov
dec
or
push
sbb
subb
outsl
fdiv
push
mov
pop
cli
jae
daa
stc
ret
sbb
or
push
cwtl
sub
orb
subb
or
adcl
les
test
and
xchg
cmp
sahf
pop
xchg
punpckhbw
dec
mov
inc
ljmp
mov
js
popa
std
dec
insb
movb
decl
mov
inc
push
sub
lock
push
and
dec
or
cmc
add
sub
cld
pushl
std
pushf
or
popa
xchg
divb
xor
inc
stos
add
pushf
je
mov
lds
push
push
mov
aaa
stos
cmp
mov
ja
pop
roll
cmpsb
cmp
cwtl
add
sti
pop
aaa
adc
das
cli
pop
inc
mov
inc
push
push
mov
adc
call
sub
inc
repnz
xor
xlat
outsl
ret
jne
arpl
xchg
dec
and
icebp
add
aaa
jge
in
cmp
sarb
aam
cmp
loop
mov
ljmp
fcoml
or
mov
xchg
fldl
aam
pop
sub
cmpsl
bound
push
inc
popf
inc
pop
icebp
xor
mov
nop
or
push
shl
and
lods
in
sub
push
jmp
mov
pop
sub
sbb
cltd
jmp
mov
mov
inc
repz
mov
popa
pop
inc
sbb
inc
inc
xor
rolb
incb
enter
push
int3
les
movsb
shll
inc
sub
cmp
decl
xchg
lahf
xor
mov
fbstp
bound
adc
dec
fs
push
pop
aaa
incl
sub
rorl
movsl
jg
repnz
jbe
fildl
pop
or
mov
jg
xchg
or
sub
hlt
pushf
push
lods
test
mov
xorb
decl
nop
lret
in
jmp
inc
xchg
popa
mov
xor
lods
js
push
aam
inc
sub
mov
push
lock
hlt
cli
sub
jg
xchg
mov
pop
mov
and
sbb
and
jne
push
push
xor
mov
mov
jne
add
fucomp
sbb
adc
push
jne
and
sub
icebp
incl
mov
push
decb
mov
jle
faddl
pop
push
jl
test
loopne
shll
outsl
sub
adc
dec
adc
sub
popf
dec
xorb
sbb
enter
in
imul
and
out
add
sbb
push
das
movsl
gs
jmp
fnstsw
mov
jno
stos
pop
inc
push
popf
and
mov
dec
movb
cmp
push
inc
jg
adc
loopne
xor
cli
or
fcomip
mov
xor
in
ss
dec
sbb
movsl
sarb
xchg
pop
in
icebp
add
or
ljmp
pop
xor
ret
stos
xor
pop
push
imul
dec
nop
push
sbb
xor
push
mov
pushf
add
dec
icebp
vphaddbq
loopne
push
or
push
lds
inc
push
ja
sbb
cmp
js
lds
test
cmp
mov
and
ret
iret
out
incl
cld
mov
inc
add
jae
lahf
fcomps
mov
cli
xor
ret
fidivrl
cmc
push
clc
scas
scas
mov
push
loopne
push
push
out
push
xchg
pop
xchg
add
mov
jo
cli
pop
lock
movsl
fsubs
cmp
cmp
je
test
cmpb
xchg
sahf
hlt
pop
jl
loope
xchg
adc
and
test
sarl
cmpsl
pop
mov
stos
xor
imul
dec
jae
cltd
jbe
or
adc
test
xchg
mov
scas
loopne
in
lret
rcrl
xchg
and
incl
lea
add
mov
lret
add
cmp
or
sbbb
movsb
lahf
je
adc
inc
xchg
adc
aaa
dec
push
adc
pop
or
pop
icebp
push
lcall
and
ds
stos
les
dec
in
inc
jnp
scas
or
fistps
fs
mov
pop
cmp
clc
and
clc
push
dec
test
cmp
test
fsub
dec
inc
sbb
dec
xchg
pop
xchg
mov
out
sub
mov
dec
into
dec
pop
sub
setne
dec
pop
inc
test
scas
pop
push
jnp
pop
jmp
incb
mov
lock
mov
lcall
pop
jbe
add
ficoms
cmp
pushf
fstpt
std
xchg
cs
cmc
lcall
loope
push
push
adc
pop
mov
add
sbb
inc
mov
jns
or
popa
cmp
inc
cmp
pop
xor
lock
rcrb
ficompl
cmp
sub
daa
mov
mov
es
ljmp
lahf
mov
jmp
enter
xor
jecxz
pop
mov
incl
jae
xchg
lods
stc
test
ss
dec
clc
jmp
popa
gs
add
inc
add
and
test
push
bnd
add
jbe
xor
mov
push
scas
push
lcall
mov
orl
jp
xlat
add
xor
movsb
push
xchg
mov
icebp
das
and
and
sub
push
dec
jmp
cmpsl
scas
or
test
mulb
jge
jp
xchg
dec
mov
or
or
enter
mov
mov
cmpb
xchg
add
jns
arpl
sbb
jne
mov
adc
and
inc
dec
push
cwtl
mov
in
and
mov
pop
pop
push
jg
adc
and
jg
mov
add
xor
xchg
out
stos
rcrb
aam
shl
sti
icebp
pop
mov
add
fdivrl
jo
push
das
jbe
je
pop
punpckhdq
cmc
call
popa
rsm
sbb
push
ret
cwtl
arpl
mov
orb
add
rolb
filds
cmp
icebp
xor
mov
dec
jg
sbb
jb
cmp
mov
sub
sbb
pop
mov
in
push
adc
in
adc
mov
add
lock
dec
dec
hlt
mov
cld
aas
xchg
insb
and
fcmovnu
mov
mov
divb
movsb
xor
cmp
inc
ja
imul
ret
jne
cmp
loop
add
xlat
fists
das
jecxz
hlt
cmp
xchg
into
clc
jg
sub
je
cmp
mov
ret
movb
gs
sbb
mov
out
xchg
sub
jg
push
add
mov
push
addl
rolb
or
cmp
daa
and
or
pop
xchg
cmp
or
clc
cmp
or
mov
jp
mov
cli
loope
cmp
cmp
repz
cs
cmp
cwtl
mov
adc
shlb
inc
pop
xchg
pop
loope
daa
loopne
clc
cmp
pop
xor
fmuls
fidivrl
loop
xchg
or
unpcklps
loope
adc
das
jl
and
pop
mov
aam
pop
cltd
rorb
mov
fiaddl
repnz
mov
mov
data16
rclb
pop
test
adc
sub
fcmovb
push
push
clc
aad
subl
mov
pop
push
hlt
pop
pop
jl
arpl
cmpsb
incl
jnp
add
add
ljmp
out
push
pop
std
add
mov
dec
out
push
orl
cmp
clc
mov
pop
shlb
lcall
pop
mov
loopne
loop
cmp
add
pushf
fdiv
sbb
pop
xchg
cmc
or
mov
loope
inc
test
jg
mov
inc
daa
mov
or
pusha
mov
push
outsl
lcall
out
fcoms
inc
lock
pop
adc
enter
or
adc
sbb
push
adc
mov
scas
add
stos
or
jns
pcmpeqd
pop
call
jp
lcall
stos
push
into
xor
sbb
push
bound
es
lock
or
dec
pushf
mov
sub
xor
cld
jecxz
mov
pop
and
sbb
dec
cmc
bound
pop
add
pop
call
or
bound
xchg
pop
xchg
inc
stos
les
xor
jmp
push
dec
push
movsl
ljmp
or
je
dec
add
mov
inc
dec
jle
and
or
jbe
sbb
popa
test
and
decl
pusha
or
add
bound
push
shll
dec
jg
faddp
fimuls
nop
mov
in
push
shlb
gs
inc
shll
xor
inc
inc
std
jb
lods
outsl
mov
mov
lods
subb
and
jp
pop
lods
mov
leave
ffree
mov
std
mov
xchg
rcrl
jp
mov
fldcw
inc
mov
jb
sub
daa
adc
fistpll
jp
lret
clc
dec
add
shrb
loop
push
mov
mov
std
xlat
iret
pop
test
xchg
ds
je,pn
inc
cli
lcall
jo
pusha
or
call
into
cmp
sbb
testb
inc
js
gs
loop
dec
and
filds
daa
andl
jecxz
mov
or
fmuls
iret
xchg
pop
adc
icebp
cld
mov
es
pop
pop
int
add
add
xchg
mov
lock
jg
and
out
push
push
mov
incl
push
or
push
xchg
insl
loop
js
call
mov
aam
sub
and
in
movsl
jge,pn
lret
add
enter
fucomip
mov
xorb
xor
pop
movsl
pop
and
or
bound
data16
jnp
and
pop
subb
jne
jge
inc
ljmp
popa
push
or
enter
gs
loope
rcrb
sub
cmp
ds
push
adc
push
roll
mov
inc
dec
add
adc
and
les
decl
sahf
aam
push
shlb
inc
lods
lods
out
inc
jge
push
outsl
in
inc
add
js
popf
xchg
movsl
mov
ljmp
pop
push
jmp
pop
ljmp
push
push
mov
dec
add
add
fiaddl
addr16
cmp
jno
adc
out
push
arpl
addl
imul
push
ss
or
jecxz
and
add
mov
sbb
lldt
push
out
ret
dec
outsl
jno
push
add
lret
mov
dec
mov
shlb
pop
xor
test
cmp
push
sahf
call
push
movsb
ljmp
lret
mov
push
push
in
push
outsl
shrb
adc
inc
lcall
aaa
fcmovb
add
dec
mov
insl
sub
or
je
sahf
xorb
sbb
sub
ja
stos
roll
jne
iret
pop
push
inc
ljmp
aaa
push
daa
cmp
mov
subl
adc
add
sti
out
inc
mov
add
mov
inc
decl
fcoml
repnz
pusha
sub
xchg
rcl
sar
lock
loope
and
in
orb
addr16
jg
fsubr
pop
xchg
shrb
mov
xchg
add
push
and
call
sub
lcall
push
jmp
ljmp
in
clc
sbb
cmp
and
add
fisubs
scas
and
mov
add
fwait
insb
insl
rorb
es
aaa
mov
aam
push
xor
push
add
inc
jg
pop
lcall
jp
fidivrs
add
daa
sbbb
std
lods
mov
push
loopne
test
xchg
test
std
mov
add
inc
mov
lret
ja
mov
imul
inc
push
mov
ret
jge
sub
das
sub
sbb
dec
aas
ljmp
fbld
or
mov
inc
loopne
sbbb
sar
ljmp
or
fs
pushf
dec
insb
stos
imul
fnstsw
into
add
out
inc
sub
jae
push
aas
aam
mov
mov
mov
rorb
lcall
jb
dec
cmp
jno
push
add
xor
hlt
les
movd
sub
push
xchg
and
inc
test
sub
call
idivb
add
mov
xor
xchg
icebp
mov
adc
sbb
push
shlb
sub
and
push
cmp
jo
rclb
adc
push
jl
and
mov
and
dec
lods
nop
insl
adc
movsb
mov
lcall
jg
je
call
ljmp
push
ret
inc
jl
fldt
cld
ret
jbe
push
lock
push
subl
add
hlt
mov
incb
loop
sbb
inc
popa
xchg
inc
inc
xchg
sbb
insb
loopne
xchg
jb
push
std
dec
jp
inc
and
pop
xor
add
pop
xchg
lods
arpl
mov
decl
dec
jg
cltd
popf
je
pop
adc
inc
pop
dec
movsl
incb
jp
sub
xchg
sbb
outsl
pop
adc
inc
fcoml
mov
pop
inc
movhps
xor
xor
pop
test
add
hlt
xchg
out
sahf
and
cmp
push
xor
adc
int
movsb
mov
mov
add
xor
push
cmp
std
xor
sarl
nop
push
xchg
test
test
mov
push
dec
push
adc
xchg
inc
mov
add
dec
pop
mov
pusha
pop
repnz
mov
mov
cs
sbb
sub
dec
mov
lds
das
and
pop
cmp
dec
loope
rorl
cmp
dec
dec
mov
mov
jmp
or
lock
rol
fidivs
sub
xchg
mov
push
sbb
and
fildl
adc
inc
inc
hlt
rolb
test
pop
inc
cld
mov
sub
pop
xchg
jl
sub
cmp
push
sbb
repnz
add
lea
arpl
push
mov
js
cmc
incl
lock
jge
mov
bound
js
xor
dec
loopne
mov
inc
fcompl
mov
push
and
mov
gs
sbb
sub
pop
out
mov
jp
xchg
jno
add
pop
aad
out
sarb
and
addl
mov
xor
or
pop
add
pusha
mov
jno
lock
jo
sbb
adcl
inc
add
hlt
xorb
les
push
mov
aam
dec
leave
fisubs
dec
ffreep
popa
test
jmp
ret
sbb
mov
aad
pop
jle
roll
adc
js
and
inc
outsl
pop
adc
inc
pop
int3
in
pop
mov
mov
call
enter
or
adc
nop
cmpsb
pop
in
pop
clc
or
ljmp
stos
or
push
int
sti
pop
inc
loop
cli
fdivr
cltd
adc
ss
roll
addb
pop
popa
sti
sub
enter
inc
sti
out
clc
stos
out
add
sahf
rclb
divb
movb
push
push
jb
sub
shrb
andb
push
loope
sub
mov
sar
cmpsb
sbb
es
les
pop
in
cmp
mov
mov
mov
jp
cmp
sbbb
int3
repz
add
fdivl
in
cmpl
sarb
dec
fsubs
std
jg
or
dec
scas
pop
fisubl
fnstsw
fildl
mov
add
pop
fwait
lcall
loop
xchg
ret
dec
call
test
mov
jecxz
xlat
loope
scas
ljmp
fdivrp
filds
call
xorb
punpckhdq
pop
icebp
mov
aad
cli
mov
xlat
or
aam
ss
fdivl
adc
jl
xor
mov
sub
mov
pop
aam
sub
jp
cs
sahf
dec
in
push
xor
aam
ss
sbbb
add
and
hlt
cmp
sbb
mov
aam
icebp
jl
sahf
test
and
jl
cs
cmp
shr
mov
cmc
aas
cmc
popa
dec
fneni(8087
and
pop
sbb
daa
mov
rol
sub
cmpsb
push
lcall
les
movsl
mov
std
mov
inc
or
xchg
idivl
mov
loopne
inc
lcall
shr
add
adc
push
mov
push
fadd
dec
movsb
repz
add
and
sub
mov
movsb
je
popa
adc
or
sbb
dec
mov
dec
push
sub
rol
cmc
idivl
sbb
xchg
adc
ret
xor
stc
ud0
xchg
pop
dec
scas
push
flds
pop
lcall
loop
mov
shlb
dec
sbb
test
fidivrl
or
inc
mov
cmp
push
xchg
mov
push
or
incb
and
and
add
leave
inc
rcrl
scas
xor
cmpsb
add
cmp
pusha
xor
test
mov
mov
sub
add
aaa
jo
repz
xchg
int
push
mov
mov
or
adc
or
out
lods
arpl
pop
mov
cmpsb
inc
fs
mov
pop
sahf
adc
mov
sbb
mov
mov
add
and
inc
push
mov
lret
and
mov
cld
dec
movsb
cmc
push
das
mov
xchg
les
fistpll
idivl
or
aad
ss
mov
push
js
add
adc
cs
lcall
add
mov
mov
inc
sub
lret
pop
mov
aad
les
cwtl
mov
inc
inc
mov
gs
lahf
push
sahf
push
aaa
xchg
fisttps
sub
cltd
dec
jnp
jb
clc
out
in
sub
call
and
rol
mov
ret
push
repz
push
incl
pop
inc
adc
les
push
out
jecxz
jle
add
adc
ffree
pushl
cld
dec
pop
loop
xor
mov
mov
cmc
ds
adc
jno
push
pop
cmp
sbb
pop
mov
ficoml
push
cld
cmp
stos
and
ret
mov
mov
xchg
in
jecxz
outsl
cli
dec
pushf
sbb
cmp
mov
jle
add
inc
sbb
lea
add
out
sbb
push
jns
add
fistps
add
ret
mov
sbb
sub
rcr
cmp
shlb
call
xchg
push
inc
dec
mov
push
xor
or
xchg
add
pop
test
pop
sbb
loope
xor
aaa
jl
and
and
fld1
data16
or
cli
aam
mov
xchg
fwait
adc
mov
enter
xchg
adc
repz
addr16
hlt
mov
xchg
sub
cmc
dec
mov
cmp
or
fsubs
adc
add
and
loopne
adcb
inc
cmp
out
clc
jmp
add
das
xchg
mov
add
push
pop
push
call
jecxz
jg
mov
adc
sbb
call
pop
xor
incl
shl
mov
inc
pop
push
pop
ret
rorb
mov
add
adc
pushl
add
sub
stos
push
sbb
jbe
add
push
jecxz
sub
dec
dec
fwait
insl
pop
or
add
sbb
shrb
xor
ja
outsb
xchg
dec
jecxz
filds
fistps
mov
sbb
sbb
nop
ss
mov
jb
or
ror
push
mov
sub
std
fdivl
xor
lcall
adc
jecxz
mov
xchg
add
mov
mov
loopne
icebp
mov
scas
xor
nop
push
pop
sbbb
cmpsb
inc
adc
mov
jns
xchg
enter
cmp
adc
add
sub
stos
pop
sub
shlb
xchg
mov
or
out
pcmpeqd
add
xchg
aaa
es
mov
dec
mov
outsl
clc
add
ljmp
cld
pop
add
mov
scas
jg
mov
mov
xchg
test
sub
jge
mov
or
dec
cltd
inc
adc
lods
mov
sub
cld
jg
into
pandn
and
jp
je
stos
sub
dec
xor
sub
sub
jle
ret
loopne
in
rcrl
add
fidivrs
in
cwtl
testl
and
faddp
xor
aam
pushl
lahf
add
out
lret
inc
out
jg
xchg
fimuls
cmp
scas
sub
push
mov
cmp
cmpl
inc
xor
mov
sub
imul
jle
scas
sbbb
cmp
mov
adc
add
add
out
sbb
pop
pushf
aas
cs
cmpsb
push
or
repnz
lock
push
sbb
shlb
sbb
dec
push
aam
mov
addr16
fsts
dec
test
addb
dec
sub
and
push
pop
cmpsb
imulb
jle
dec
mov
or
mov
inc
add
shll
xchg
add
cmp
aas
mov
movsl
hlt
and
and
or
push
adc
repz
mov
pop
cli
add
insb
or
test
cmpsl
mov
pusha
adc
pop
adc
adc
lcall
jne
add
incl
rcll
push
or
jp
sarb
sub
or
test
sbb
loope
ljmp
inc
rcrl
xchg
out
call
sahf
jnp,pn
adc
mov
add
test
hlt
and
add
xchg
xchg
or
xchg
jbe
cmp
pop
or
gs
mov
and
pop
repnz
push
fisubrs
xor
enter
popa
ret
cmp
mov
popa
cmp
xor
sub
stos
push
movsb
pop
fwait
ret
lret
mov
popf
sbb
cmp
pop
test
pop
aam
scas
xchg
pop
sub
add
out
push
stos
jmp
sub
push
mov
or
mov
cmpsb
sahf
add
stos
pop
push
cltd
mov
jo
adc
xor
jae
jg
inc
add
adc
subb
cmpsb
sbb
jbe
rcrb
cmp
jecxz
or
pop
pop
jmp
jbe
enter
pop
xchg
jle
das
lret
add
cmp
adc
scas
push
sbb
sbb
hlt
xor
cmp
repnz
mov
lret
push
lods
mov
addb
cmp
stos
mov
inc
inc
inc
orl
dec
add
loope
xchg
mov
decl
push
ret
fcmove
cld
pop
push
pop
cmp
ja
adc
int
pusha
and
and
xor
inc
loope
subb
or
mov
movsl
ljmp
or
shl
pop
mov
lret
or
sbb
push
or
andb
ja
push
cvtpi2ps
aas
pop
scas
lahf
movsl
xchg
cmpsb
int
mov
xchg
hlt
inc
in
enter
pop
pop
lods
pop
and
jecxz
sbb
pop
sub
shrb
add
scas
xor
mov
pop
test
jl
call
cwtl
inc
fsubrp
leave
jno
pop
inc
adc
loopew
push
pushf
enter
in
mov
or
sti
cmpsb
jns
and
aaa
inc
xor
lret
jg
test
mov
aam
jmp
rolb
jg
das
fidivl
aas
xchg
sbb
adc
sub
loop
jno
je
ret
push
cmp
cmp
cmc
ja
lds
add
add
lods
mov
jmp
dec
clc
pushf
sti
xor
sub
jecxz
imul
pop
mov
pusha
test
add
ljmp
sub
push
hlt
fs
ret
sbb
fmull
cmp
jmp
stos
or
push
mov
aam
jns
repz
into
popf
cmp
js
nop
push
sbb
aas
in
nop
mov
jmp
adc
adc
xlat
movsb
insl
repz
and
ljmp
mov
aas
sahf
inc
mov
cmpsb
jo
mov
ds
pop
sub
or
jo
adcl
mov
push
xor
mov
xchg
adc
inc
and
jae
clc
xchg
cmpb
jmp
xor
aam
movsb
cmp
push
js
aaa
rol
or
adc
idiv
cmp
subb
js
jle
in
mov
adc
outsl
or
or
mov
pushf
addr16
sahf
inc
aad
push
adc
dec
std
test
mov
mov
pop
mov
out
notb
add
loope
loope
fdivs
xchg
loopne
mov
mov
shll
mov
sub
outsl
pop
jae
pop
outsl
cmpsb
inc
xlat
fs
ret
mov
or
jp
clc
mov
cmp
ds
sub
sub
push
shll
xor
jns
cwtl
int3
add
out
fiaddl
inc
xor
sub
adc
or
lret
fimuls
outsb
scas
push
bound
xor
hlt
mov
cmp
sbb
lods
jbe
mov
je
or
inc
jl
pop
dec
lock
dec
and
or
das
mov
cmp
loop
rorl
out
and
imul
jecxz
pushf
cmp
adc
mov
mov
dec
js
rclb
lcall
cmp
xchg
mov
icebp
adc
jns
mov
pop
sub
pop
fisubrl
jbe
jle
and
rcrb
clc
loop
pslld
iret
sub
mov
testb
inc
aaa
into
inc
dec
inc
mov
jb
and
dec
in
shrd
int
imul
das
cli
pop
pop
lahf
int
es
and
adc
or
aam
add
mov
inc
clc
loop
sbb
inc
rclb
aas
inc
mov
inc
in
jp
je
into
bound
js
cwtl
insl
cltd
sahf
or
pop
xor
in
mov
xor
movl
sub
add
aas
add
mov
nop
hlt
lock
or
xorb
lock
and
mov
lock
ret
jae
add
and
movsl
js
sbb
add
dec
pop
mov
mov
aad
fisttpl
rclb
mov
aaa
or
inc
push
and
popa
cld
pop
int
mov
sbb
cmp
fsubrl
outsl
adc
add
mov
sbb
ds
sbb
cmpsl
mov
push
test
aas
xchg
es
gs
or
test
add
test
push
inc
es
nop
outsb
xor
add
push
sbb
and
icebp
push
imul
imul
test
pop
pop
popa
push
sahf
adc
fimull
test
test
mov
rclb
jle
movsb
adc
adc
int3
xchg
outsl
iret
mov
test
push
or
js
push
test
xchg
test
mov
mov
jns
sub
sbb
rorl
les
lret
divb
aad
cli
jmp
xorb
cltd
sub
cltd
int
das
je
addb
cli
fnstsw
call
fucomi
sbb
lret
dec
test
mov
out
or
nop
add
or
and
inc
test
mov
xchg
adc
lock
cmc
dec
lcall
mov
push
lahf
imul
es
mov
stos
mov
jp
pop
sub
in
xchg
add
mov
push
and
and
mov
test
mov
or
adcl
fwait
mov
out
orb
out
inc
or
aam
popf
xor
dec
mov
sbb
loop
push
pop
rcrb
and
test
or
add
and
pushl
out
dec
test
bound
sub
sub
dec
cmpb
xchg
es
sbb
stos
adcb
and
icebp
pop
mov
xchg
adc
and
movsb
push
test
fcomps
mov
cmp
rcl
xor
cld
sar
sbb
sbb
js
mov
xchg
stos
sbb
xor
xor
cmc
lods
and
xor
out
or
mov
pop
xchg
shll
imul
xor
sahf
pop
sbb
fists
cs
call
add
push
movsb
jo
inc
mov
pop
movsb
jnp
cs
sub
rorb
xor
push
mov
cli
pop
scas
or
nop
xchg
sub
mov
cmp
dec
pusha
push
stos
and
cmp
or
test
stos
sahf
mov
test
lds
pop
popa
stos
mov
lcall
jb
icebp
fbld
aam
push
pop
or
jg
jno
mov
lock
jbe
cmp
inc
pop
inc
jno
sub
push
jg
push
aad
stc
int3
xchg
shlb
pop
roll
inc
es
xor
mov
in
insl
cld
jg
nop
and
arpl
jne
call
adc
daa
or
mov
add
lea
and
xorl
mov
hlt
lahf
outsb
in
inc
add
jo
sub
mov
jg
mov
add
or
mov
pop
ss
loope
std
mov
sbb
imul
mov
lret
in
dec
pop
sub
shrb
leave
xor
inc
addr16
lcall
lret
test
cmp
push
pop
je
fsubrl
xchg
inc
adc
ljmp
dec
mov
lock
shrb
cld
mov
pusha
hlt
int
fisttps
stos
push
fdivrs
clc
and
cs
mov
xchg
lret
rclb
cli
int
mov
decl
adc
gs
mov
xor
cmp
movsl
insb
outsb
mov
xorb
dec
cwtl
fwait
sub
sbb
je
cmp
sbb
add
jl
adc
movsb
sbb
mov
daa
mov
xorl
test
jge,pt
sti
fs
xor
xor
in
lcall
loop
pop
lret
sub
add
nop
jecxz
dec
push
fcomip
fbstp
jge
inc
ficompl
mov
enter
lcall
or
hlt
mov
pop
clc
mov
insl
in
into
aaa
jp
mov
mov
lds
add
lea
movl
or
push
das
dec
cld
dec
push
cmpsb
mov
aad
lret
test
nop
call
rol
ss
sub
insl
adc
test
sbb
xchg
rcrl
fildl
clc
test
in
std
push
cmp
add
fists
rolb
xchg
test
push
mov
ss
outsb
or
mov
clc
cmp
insb
sbbb
in
inc
inc
adc
outsb
cwtl
jmp
ret
xlat
xchg
hlt
add
adc
xchg
subl
add
repz
out
repz
mov
push
adc
pusha
fcmovnu
out
push
add
mov
aam
scas
iret
push
sub
popa
sub
sub
decl
pop
pop
jbe
xchg
xor
adc
mov
pavgw
adc
aam
pop
xor
movsb
inc
jns
bswap
scas
ret
fwait
sbb
rorw
inc
jl
aas
aam
jle
xchg
mov
jle
shr
ds
xorl
ret
dec
shll
sbb
cs
jo
sbb
lcall
mov
js
decl
sbb
fcoms
fists
pop
cld
add
or
dec
rolb
mov
aas
test
sbb
adcl
sbbb
pop
shll
mov
ret
test
decl
push
mov
dec
ljmp
ja
cmp
jmp
cmp
ds
sub
in
negl
fs
push
push
sbb
lcall
jmp
push
pop
adc
add
addr16
insl
js
adc
push
das
mov
or
lds
add
jl
sub
sbb
xchg
inc
loop
insl
shl
dec
sbb
push
fisubrl
stos
pushl
pop
shrb
add
insl
jp
subl
std
or
mov
fstl
cltd
sbbl
dec
ret
cld
or
shlb
adc
pop
cmp
push
insb
sti
pop
adc
mov
push
xchg
add
and
dec
mov
sub
stc
jbe
adc
jns
js
pop
js
dec
repz
mov
xchg
int3
push
call
push
inc
into
mov
pop
mov
dec
scas
mov
loopne
hlt
clc
mov
sbb
jmp
inc
pushf
fwait
jecxz
adc
add
or
ljmp
inc
out
mov
ficoml
scas
inc
test
mov
sbb
test
or
push
inc
cmp
push
fbstp
fsubl
sub
xor
ja
or
or
xor
jbe
push
push
and
sub
ljmp
dec
pop
sub
add
xor
stos
mulb
adc
aas
add
shrl
clc
mov
push
pop
pop
add
mov
mov
or
push
lcall
add
add
sahf
cli
shr
cwtl
jae
pop
cmp
imul
mov
push
add
call
or
push
lret
dec
pop
loopne
mov
pop
add
xor
icebp
sahf
movsl
fsubr
inc
mov
out
imul
sub
popa
push
push
sahf
scas
mov
xchg
and
ljmp
fadd
addl
inc
xchg
lock
jecxz
loopne
mov
mov
pusha
outsb
out
sub
xchg
icebp
adc
faddl
pop
mov
sub
adc
pop
lds
or
addr16
mov
gs
cli
pop
hlt
add
jmp
cld
add
inc
jo
jmp
sub
or
adc
mov
cmp
cmp
adc
rorl
jp
mov
jmp
fildl
push
dec
icebp
cltd
movsl
lock
pop
jge
mov
adc
clc
stos
test
imul
lret
push
mov
dec
or
pop
push
outsl
or
pop
xor
lcall
mov
sbb
inc
pushl
fs
std
fisubrs
rcrl
lods
test
rcll
jp
inc
adc
add
lahf
mov
inc
sti
cwtl
shlb
shr
sbb
ja
loopne
aam
scas
outsl
orb
lock
js
or
sar
sbb
fstl
test
pop
mov
jecxz
insb
push
add
add
ljmp
pop
add
xlat
and
loopne
aaa
jge
ss
jg
outsl
push
mov
insb
inc
pushl
or
add
add
pop
mov
test
arpl
bound
fwait
adc
push
xchg
cmpb
xchg
ja
or
sbb
jne
push
cli
or
jecxz
mov
in
mov
mov
push
repz
arpl
add
ljmp
movsb
dec
lret
jmp
mov
jnp
jb
push
pop
lahf
mov
es
das
and
mov
jmp
mov
sbbb
push
aam
and
leave
cmp
lea
enter
jae
mov
ja
ds
push
js
mov
adc
sbb
fisttpl
jecxz
andb
movsl
test
xchg
push
adc
dec
mov
sub
ja
mov
notb
loopne
add
xchg
sbb
or
shrb
lret
push
xor
lods
cmp
call
incb
xchg
imul
jecxz
dec
pusha
inc
cld
pop
sbb
gs
add
idiv
jg
push
jge
inc
add
push
adc
cmp
jns
data16
aas
std
notb
bound
dec
xchg
xor
inc
call
cltd
aas
arpl
add
push
loop
cs
leave
lcall
jg
push
ja
ret
push
dec
dec
xchg
cmc
lret
popa
inc
lock
inc
movsl
add
dec
and
popa
repz
cwtl
inc
inc
insl
mov
lock
adc
cs
jle
jmp
sbb
scas
cmp
xor
add
jmp
call
cmpsl
push
pop
cmpb
divb
leave
clc
xchg
data16
xchg
dec
jge
inc
rolb
imul
lret
aam
les
test
fbstp
mov
das
clc
add
rclb
push
imul
leave
ret
cld
push
ret
and
int
dec
dec
insb
mov
loope
gs
cs
cmp
ds
lret
adc
imul
push
es
jne
xor
xchg
or
shll
sub
fbstp
push
adc
sub
push
std
ds
add
push
cmpsb
into
pop
mov
adc
stc
xchg
xor
cmpsl
shll
and
mov
out
or
incl
lock
mov
fstpt
pusha
adc
push
stos
popa
dec
push
mov
or
xor
scas
cld
mov
push
ljmp
js
mov
mov
imul
xchg
adc
cli
cmpsb
jne
icebp
xchg
andl
push
xchg
int3
sub
adc
pusha
adc
ljmp
mov
leave
and
mov
adc
fwait
mov
jno
mov
or
inc
push
push
insb
add
mov
scas
scas
andl
mov
stc
mov
enter
fcompl
fs
fdiv
imul
push
int
lock
jbe
and
mov
jle
lret
movsl
sarl
dec
push
mov
inc
fs
or
mov
bnd
xor
mov
push
dec
add
jae
shll
push
lahf
or
or
or
push
mov
cmp
cmp
cld
sbbl
dec
mov
inc
daa
cmc
fwait
jg
add
mov
or
nop
add
mov
jg
fbld
ret
lcall
gs
jg
push
mov
and
jmp
sbb
movsb
dec
fbstp
out
movsb
lock
jo
sub
scas
test
pop
ret
xchg
out
clc
jg
pusha
add
stos
dec
jno
lds
adc
inc
inc
inc
cltd
or
mov
jnp
bound
cmp
sub
stc
xchg
jns
fisubl
outsb
fdivrl
pop
and
sbb
and
shlb
popa
fs
insl
js
mov
ret
es
xchg
and
pop
mov
fisttps
jl
loope
pop
repz
sub
insb
lock
cwtl
fnstsw
add
lds
cmpl
xchg
aad
push
push
push
mov
push
imul
lcall
ss
mov
and
in
outsb
je
cltd
mov
icebp
add
mov
or
sti
jns
fistpll
xlat
or
stos
jle
xchg
adc
out
lods
fadds
inc
jp
xor
loopne
sbb
push
std
das
sbb
add
mov
pushl
mov
mov
hlt
jl
rolb
cmc
decl
cmp
call
mov
or
or
loop
aad
sbb
add
mov
lods
repnz
shl
mov
jne
pop
mov
movsl
and
mov
andb
dec
aaa
xchg
mov
sti
dec
push
xor
test
popa
jg
xchg
jo
jnp
or
sub
or
adc
movd
sar
insb
test
cld
mov
out
add
idiv
test
ljmp
adc
into
pop
and
xor
pop
sub
bound
mov
out
push
std
cmp
fcmovnb
jp
sub
adc
fwait
add
mov
mov
push
xorl
aas
fcmovb
mov
pusha
sub
das
pop
dec
outsl
clc
or
ret
jmp
dec
scas
jnp
mov
rcr
loope
and
addb
paddd
adc
push
sub
pushf
add
jg
lods
les
insl
jno
xchg
mov
xchg
movsb
arpl
sub
loopne
fbld
insl
and
mov
jg
orl
inc
jge
xor
lock
push
and
dec
mov
icebp
fsubl
sub
mov
mov
in
xchg
shlb
cmp
incb
inc
mov
test
mov
rcl
in
cs
push
sbb
xor
cmpsl
pop
mov
mov
imul
or
xorb
out
jo
fisttpll
mov
jb
rolb
or
xchg
xchg
das
add
out
adc
and
sahf
add
imul
rorb
cmpb
add
ljmp
jo
movsb
mov
or
negl
cld
cmpsb
add
xor
dec
nop
push
stos
sarl
ja
call
rol
and
adc
icebp
inc
pushf
out
push
push
ljmp
out
add
rcrb
popa
xchg
xchg
fcomip
aas
in
dec
fsub
pop
inc
push
cwtl
mov
sbb
mov
sbb
pop
mov
mov
loop,pt
and
mov
nop
std
sbb
add
loop
dec
jg
mov
pop
or
xorl
jb
orb
adc
cmpb
jl
data16
out
int3
outsl
xchg
adcb
les
insl
daa
loop
fidivrs
shll
dec
in
mov
mov
das
jno
inc
sti
cmpl
fnstenv
cmp
inc
cld
xchg
popf
wrmsr
and
sbb
add
stos
xchg
jae
mov
add
mov
insb
cld
xor
je
sub
sbb
fs
xchg
inc
dec
shl
inc
adc
or
cmp
std
pop
sbb
hlt
mov
jnp
jo,pn
add
add
mov
pop
or
orl
push
cmpb
cmc
jbe
jo
and
push
and
mov
rcrl
cmpsl
jmp
dec
mov
mov
dec
rolb
fsubrs
sub
xchg
test
and
mov
xor
pop
sbb
in
mov
jg
sub
imul
stos
aaa
mov
test
xchg
sub
loopne
add
ljmp
scas
jp
xchg
test
stc
out
aam
rcrb
add
sub
mov
fsub
xor
sub
xor
lods
jp
pop
cmpsb
lret
mov
xor
jb
aaa
std
jg
push
pop
mov
xor
dec
lcall
mov
test
inc
andl
loope
xor
mov
jbe
cli
fistps
js
movsb
inc
inc
mov
and
je
cwtl
inc
xor
std
fistl
mov
fisubl
add
popa
cmp
lock
fistps
push
jecxz
sub
xchg
cltd
add
bound
pusha
fists
or
mov
mov
xchg
mov
call
mov
fwait
mov
jno
jp
xor
pushf
cli
mov
xchg
xor
loopne
test
pop
mov
fldenv
mov
fwait
inc
std
mov
sbb
adc
mov
arpl
repz
ds
lock
stos
test
fdivr
add
pop
and
cli
xchg
stos
sbb
lock
es
fbld
lock
xchg
jb
add
inc
ret
add
leave
jbe
lods
pop
xchg
inc
xchg
movntps
push
and
dec
cmp
mov
pop
decb
pop
fs
comiss
add
sti
adc
or
mov
lret
out
cld
int3
dec
jecxz
ljmp
mov
test
sbb
mov
add
enter
push
dec
xchg
shlb
jecxz
add
sbb
lcall
add
sbb
adc
int
sub
mov
and
xchg
add
add
xor
fisubrs
aaa
jl
or
xor
test
call
pop
stc
mov
cmp
popa
cmp
sub
push
in
scas
mov
xor
rorb
inc
rorb
cmpsl
push
or
outsl
and
out
into
faddl
insl
test
add
das
mov
mov
cmp
pop
arpl
shlb
push
add
mov
adc
repnz
mov
cmp
lea
mov
lods
adc
mov
xchg
push
mov
sbb
std
outsl
lock
arpl
xchg
lds
cmp
decl
loope
jp
xchg
movsb
es
stos
fprem1
xlat
xor
and
inc
shll
mov
or
loopne
mov
jo
push
or
sbb
xor
mov
daa
xor
dec
push
adc
mov
jp
out
shlb
incl
int
subb
dec
or
sbb
fidivs
pop
repnz
sub
pop
sbb
mov
rcrl
clc
xor
jg
push
sbb
pop
inc
pusha
dec
or
pop
add
aad
xor
insb
jno
mov
or
sub
inc
aas
pop
or
xchg
mov
dec
outsl
fidivl
adc
stos
mov
das
or
xor
clc
push
cli
insb
sahf
xor
pop
add
adc
mov
mov
jmp
cmp
jmp
shlb
add
cwtl
push
out
add
idivb
mov
mov
xor
in
cmc
pop
std
ret
add
loop
add
js
les
scas
jb
std
dec
cld
stos
nop
cmp
cmp
out
adc
inc
mov
or
cmpsl
adc
xabort
hlt
lcall
mov
loop
sub
ja
jns
dec
divl
ret
pushl
inc
inc
mov
ss
pop
and
xchg
dec
cli
shrl
insb
cmp
or
or
add
loopne
mov
push
sbbb
scas
filds
xchg
leave
push
shll
mov
out
aaa
enter
xchg
movsb
repz
cld
xchg
sub
jmp
add
push
orb
cmp
mov
lds
mov
push
not
mov
xchg
decb
or
popa
mov
insb
mulb
ds
pop
jecxz
xchg
inc
loopne
addl
sbb
adcl
pop
jmp
incl
add
add
pop
icebp
das
loop
add
mov
adc
adc
mov
mov
xor
cwtl
ret
subb
cltd
ret
push
xchg
outsb
bound
or
popf
and
ljmp
loop
fnstenv
or
fmull
enter
push
daa
xchg
incl
outsl
xor
fistps
pushl
sahf
push
jo
lcall
outsl
inc
fisttps
scas
pop
enter
adc
xchg
mov
enter
out
sarl
ret
xchg
in
ja
push
scas
mov
in
cmp
jbe
sub
pop
push
popf
imul
bound
lcall
sub
ljmp
pop
lock
andb
pop
push
sbb
imull
xchg
mov
scas
push
or
jecxz
and
adc
dec
pop
inc
push
and
sub
movl
pushl
dec
lods
fidivl
sub
or
ret
push
xchg
mov
jg
jns
addr16
incl
stos
xor
es
mov
sahf
or
aas
jne
adc
insl
and
nop
test
imul
rclb
rorb
jmp
dec
loop
jl
es
sarl
add
xor
push
add
mov
aam
dec
push
fwait
add
xchg
in
nop
push
fldl
xchg
xchg
pop
mov
andl
je
add
pop
ljmp
mov
sarl
jmp
dec
jmp
ss
xor
xor
mov
lods
jno
sbb
push
and
fdiv
xchg
mov
sub
dec
xor
aas
dec
insb
xchg
mov
in
mov
push
cmp
cli
xor
andl
mov
aas
or
push
add
add
popf
dec
dec
clc
sbb
push
adc
mov
lret
pusha
aaa
scas
data16
lock
adc
lret
fiadds
inc
inc
sarb
out
rcrb
outsl
loop
and
divl
rcll
sbb
outsl
icebp
ret
push
fcom
pop
loop
je
test
out
dec
xor
aam
shlb
xor
mov
sbb
insb
test
into
jo
mov
or
xchg
icebp
push
lret
push
add
dec
pop
sbb
scas
push
sbb
test
jle
rcl
cmc
ja
lcall
or
js
int
xor
mov
ret
jle
cld
xchg
addb
mov
aam
ret
lahf
subb
xchg
jl
clc
out
mov
mov
imul
in
sbb
call
inc
xchg
cmp
push
mov
adc
pop
and
rcll
stos
mov
js
xor
call
inc
jmp
mov
mov
bound
nop
jbe
push
sub
add
add
jle
mov
push
push
add
dec
ret
xor
ret
and
shlb
sub
lcall
shrl
popa
fs
fstps
repnz
test
or
arpl
shrl
rclb
test
push
and
mov
mov
test
pusha
outsb
sbb
inc
stos
or
adc
pop
sub
xor
test
sbb
aam
adc
movsl
sub
testb
rolb
lock
mov
adc
cli
jg
clc
sub
repnz
fucomip
or
mov
outsb
std
sbb
insb
inc
aaa
and
and
jae
xchg
in
push
mov
mov
or
dec
mov
mov
rol
sbbb
ss
scas
roll
mov
aad
ja
adc
push
push
mov
xlat
jnp
sub
jnp
into
pop
shrl
and
test
xor
fcoms
fwait
out
ja
es
jg
pop
dec
push
push
add
fisttpl
sarb
out
and
mov
cltd
add
adc
pushl
pop
cwtl
push
cmp
stos
leave
loopne
jmp
in
in
icebp
sub
and
add
cs
dec
movsb
jmp
pop
or
or
roll
xchg
xor
and
pop
fistpll
mov
mov
loope
in
hlt
adc
sub
lock
je
ljmp
mov
xor
fildl
or
inc
data16
pusha
inc
add
jmp
hlt
int
js
repz
push
pop
jo
add
jae
fisttps
or
pushl
xchg
into
int
xchg
inc
push
mov
int3
xor
decl
push
filds
bndldx
add
popa
jg
loope
mov
and
orb
fidivl
decl
jmp
adc
adc
mov
lcall
push
sbb
mov
add
int3
push
popa
icebp
jg
stos
xchg
loop
int3
add
fnstenv
cmp
outsb
pop
mov
and
or
xchg
jnp
mov
sub
push
or
sar
and
sub
movsl
iret
sbb
mov
loopne
arpl
mov
add
scas
mov
cld
rolb
pushfw
or
decl
xor
outsb
repnz
movsl
and
inc
dec
push
test
lcall
adc
add
aaa
test
jecxz
test
pop
adc
mov
cmc
test
loopne
inc
lods
pusha
jmp
insl
inc
ret
sbb
aad
jmp
popa
adc
testb
sahf
inc
jmp
bound
inc
push
mov
sbb
push
push
pop
fsubl
xor
or
shlb
jo
xchg
sub
pop
cmc
inc
dec
dec
decl
sbb
int
mov
movsl
out
aam
lock
xor
or
cmp
test
mov
xchg
and
nop
pop
out
or
out
and
icebp
mov
sahf
push
cld
add
es
push
jno
call
mov
mov
mov
add
xorl
popf
decb
das
xchg
mov
and
inc
cltd
nop
sbb
pop
cltd
loope
mov
in
les
imulb
lcall
subb
sbb
shrl
and
divl
sbb
push
cmpsb
sahf
loop
and
imul
xchg
push
fnstenv
ss
popa
pop
in
dec
roll
xor
cmp
mov
inc
dec
scas
or
cmp
std
pushl
in
cmp
sbb
fmull
or
mov
xor
ljmp
xchg
iret
or
xorb
xchg
mov
mov
cli
scas
push
mov
in
pop
xor
push
pop
push
arpl
test
xorb
repz
add
or
and
aad
adc
cmpsb
add
fnstcw
push
std
pop
push
das
cwtl
mov
xchg
mov
mov
cld
mov
xlat
add
add
jg
mov
lahf
stc
mov
ljmp
decl
fidivs
fs
adc
inc
cli
bound
in
jmp
andb
jbe
insb
cld
cmp
aaa
cs
ret
cmp
test
lcall
movsb
icebp
decl
nop
push
lret
mov
pop
add
imul
and
cmp
or
jg
sbb
into
ret
jne
pop
pop
pop
sbb
cmp
jo
aaa
adc
cld
pop
inc
dec
psrld
jne
add
out
sti
fdivs
jp
mov
mov
sti
cmp
movsb
cmpsb
insl
xor
cmp
sub
outsl
adc
fists
mov
call
clc
dec
popa
rcrb
and
add
sub
js
mov
mov
cmp
lods
and
jmp
add
sbb
imul
xor
fidivrs
cmpl
stos
cmc
cwtl
shrl
mov
pusha
push
les
mov
xchg
push
js
lcall
push
cmp
xchg
insb
mov
cmp
fsubrs
insl
movsb
jo
incl
addb
sbb
or
adc
clc
out
jl
dec
push
push
ja
mov
pusha
add
xchg
mov
outsl
jmp
adc
ss
inc
xchg
pop
js
mov
mov
incb
cld
pop
xchg
xchg
mov
or
jo
inc
push
bound
arpl
dec
add
push
mov
push
and
orb
sub
push
jb
lcall
sbb
stos
push
loopne
lret
sar
or
pop
je
lcall
and
nop/reserved
mov
sbb
pop
das
rclb
stos
sub
arpl
add
push
dec
sbb
jg
inc
data16
rcr
aaa
bound
jmp
aam
insb
add
rorl
or
inc
inc
pop
mov
icebp
jb
jb
adc
ja
lock
ret
mov
push
test
mov
fsubs
push
aad
pop
push
push
jbe
xor
sub
les
hlt
fs
cmpsl
aad
inc
mov
mov
mov
cmp
xchg
add
ljmp
aam
outsl
sub
adc
inc
pop
mov
test
ljmp
sbb
icebp
add
xorl
loope
lds
push
lock
pop
inc
or
jge
mov
mov
adc
mov
pusha
dec
jmp
dec
je
push
rcll
sbb
ds
and
in
ss
mov
pop
xchg
movsb
jmp
rcll
or
push
mov
sub
mov
add
cmp
loopne
popa
push
lods
mov
mov
or
jle
dec
add
cld
lcall
fadds
orl
cmp
push
in
push
cmp
push
jg
mov
jne
pcmpeqw
popa
push
je
add
ficomps
inc
or
clc
dec
push
in
add
lahf
lea
xor
lods
lahf
pop
dec
lock
decl
daa
inc
shlb
xchg
clc
test
xchg
ja
incl
or
movsl
mov
into
loope
mov
mov
cli
rcrl
aam
mov
pop
clc
popf
cli
cmpsl
or
adcb
mov
jne
adc
add
adcb
and
ja
sbb
popf
push
aam
dec
faddl
push
jp
push
mov
add
dec
adc
test
insl
jb
fld
cmp
push
inc
data16
jo
mov
adc
mov
icebp
lea
pop
ret
movb
sub
das
or
jge
mov
shrb
test
push
add
icebp
push
ss
divb
and
cld
clc
fwait
test
lock
dec
dec
shll
push
cmp
lret
scas
xor
push
lods
xchg
stos
call
loop
adc
ret
push
scas
xorb
add
rcr
mov
cmpsl
push
cmpsl
ret
imul
jmp
pushl
std
dec
jo
mov
push
sbb
xchg
test
jmp
pusha
xor
xor
loopne
outsb
imul
out
xchg
test
xor
ss
inc
pop
pop
and
mov
cmp
mov
sbbl
cld
push
xor
add
adc
jl
adc
rcll
add
dec
pop
pusha
lock
or
clc
fbld
or
pop
mov
shl
rcl
sarb
mov
rolb
shlb
stos
fisubrs
icebp
test
ljmp
cmp
aam
lahf
mov
lcall
les
or
lahf
pop
xorb
pushf
bound
inc
cli
popf
lods
bound
mov
test
pop
loopne
or
or
pop
shrb
or
mov
push
mov
dec
adc
xchg
inc
clc
rolb
sbb
in
cmp
out
ret
dec
xlat
pop
nop
sub
sbb
in
dec
dec
and
scas
sahf
or
mov
cmp
jne
ja
lret
inc
push
rcr
clc
xor
pop
mov
ficoms
popa
fsubrl
testb
mov
mov
movsl
in
lock
pop
and
or
jmp
adc
push
out
test
outsb
push
mov
pop
jb
sbbb
mov
mov
sub
xor
inc
mov
ficoml
subl
pop
push
inc
ds
sub
xor
fiaddl
xor
jg
sahf
add
or
lahf
and
xor
dec
lock
movsl
jmp
cmpsb
mov
fadd
andb
out
pop
dec
bound
lods
inc
fwait
jae
jae
inc
jg
iret
clc
xchg
add
add
xor
loop
leave
clc
lcall
out
jns
cmp
notl
add
outsb
andb
mov
sbb
xchg
xchg
jecxz
push
leave
ss
sbbb
test
out
lock
sbb
or
xchg
daa
add
decl
mov
push
test
add
cmp
or
nop
xor
call
into
call
and
icebp
jmp
xor
aam
and
mov
dec
mov
jno
add
addl
inc
cld
or
xchg
scas
mov
adc
push
enter
add
cld
loopne
mov
in
outsl
js
lret
sbb
dec
aas
jns
fisubl
push
mov
add
add
jmp
mov
sub
aaa
lret
push
sub
jmp
pop
sub
sbb
ss
xchg
add
xchg
call
lods
and
out
ret
push
repz
orl
sub
aad
mov
add
test
subb
les
ucomiss
dec
icebp
inc
andb
outsl
fadds
imul
rorb
shr
pusha
pushf
imul
cld
adc
imul
cmp
dec
std
lahf
cmp
push
mov
popa
jl
or
pop
scas
cli
mov
aaa
xchg
cmp
pushf
call
xchg
jbe
rcr
repnz
dec
mov
cmp
sub
ficompl
fildl
scas
mov
cmp
adc
or
pop
xchg
push
bound
mov
pop
add
adc
cld
jmp
add
xchg
and
rcrb
lock
pop
xchg
jno
addl
push
dec
lock
push
sub
mov
out
cli
xor
xor
mov
add
inc
add
sub
adc
call
and
out
mov
cs
fcmovb
ds
movsb
jo
xor
sbbb
jg
mov
pop
pop
sub
cmp
enter
aad
sti
stos
in
int
jae
or
lret
jmp
mov
inc
or
sbb
sub
mov
arpl
sub
cmp
mov
data16
mov
mov
scas
cli
or
dec
les
sub
mov
mov
mull
or
ret
arpl
push
movlps
loop
push
je
push
push
fists
pop
jmp
adc
fimull
adcl
add
aaa
sbb
insl
add
inc
and
jbe
jo
ret
jg
insl
outsb
dec
fs
gs
sahf
pop
cmp
mov
cmc
sbb
ja
xchg
pop
fsub
outsl
sub
test
sub
or
arpl
xor
ja
orl
or
push
mov
incl
lret
adc
sub
shlb
inc
dec
movsb
sub
mov
sbb
jg
or
add
inc
cmp
pop
cmp
mov
jg
adc
fstpt
cmp
cwtl
addr16
cmp
fcoms
fildl
aad
das
sarb
mov
pop
and
push
cmp
ja
pop
je
ja
dec
lcall
cmp
cli
xor
test
mov
xor
out
divb
repnz
push
sub
or
in
fucom
adc
lcall
sbb
push
dec
inc
sbb
ret
andb
adc
shl
mov
mov
cli
mov
in
lahf
test
lds
mov
test
cld
pop
jno
cmp
insb
or
sti
mov
ficoml
ljmp
dec
pop
push
outsb
or
sti
popf
xchg
sub
jo
movsl
stos
insb
sbb
mov
pop
mov
adc
mov
test
icebp
lds
lds
loopne
dec
push
jmp
jo
in
push
rclb
sbb
mov
adc
insl
cli
sbb
adc
sub
outsl
mov
pop
sub
bound
sub
pushl
rolb
mov
enter
or
lret
mov
loop
pop
sar
fwait
js
sub
xchg
inc
lea
jg
and
adc
cli
fs
lock
add
cmc
int
ss
fcompl
jmp
adc
add
push
pop
cmp
das
cmp
mov
loope
mov
test
xor
pusha
sbb
adc
movsb
jmp
scas
sbb
sbb
mov
mulb
insl
daa
xor
sbb
std
incl
add
leave
orb
sbb
std
fwait
lock
pop
fsts
add
data16
inc
mov
popf
mov
je
mov
out
ja
icebp
jmp
push
cld
filds
mov
dec
pop
adc
cltd
aaa
cmpsl
aam
mov
orl
sub
das
inc
xchg
or
xchg
sbb
in
jbe
inc
ljmp
push
clc
xchg
and
fstps
test
shrl
pop
xorl
mov
pop
ljmp
subb
cmp
sbb
pop
and
sti
pop
jbe
fbld
test
rolb
into
je
jne
daa
cmpsb
pop
mov
pop
push
jl
adc
call
shlb
shrl
pop
inc
sub
mov
notl
jo
idiv
es
push
jmp
sub
adc
ret
clc
lahf
std
mov
jbe
repz
add
gs
notl
mov
lds
cltd
jg
cmpsl
andl
mov
pushl
mov
adc
jno
pop
jno
xor
xchg
add
mov
out
aam
shl
adc
jb
or
dec
mov
push
add
pop
in
xchg
call
xor
mov
mov
pop
inc
enter
and
mov
and
add
push
inc
outsl
sub
adc
add
cltd
mov
popa
adc
shlb
add
xchg
pop
xlat
aaa
cli
lret
loope
out
cli
add
fidivl
sarb
clc
fwait
pop
ret
aad
sub
das
mov
sbb
jno
sbb
add
sahf
aam
add
rcl
std
push
popa
jae
clc
jne
add
add
xchg
jbe
loope
jmp
loop
adc
jp
pop
loopne
dec
jbe
mov
push
push
mov
mov
fucomi
insb
xchg
xchg
test
mov
fcoml
push
enter
cs
fsubrl
sub
pop
xchg
xor
ljmp
adc
dec
scas
das
add
arpl
ds
mov
pop
sbb
mov
movsl
mov
fnstsw
push
into
mov
push
cmp
das
ret
fs
orb
cmc
shlb
in
lahf
pop
and
ljmp
shlb
fistps
cmpsl
pop
jp
or
xor
arpl
push
ret
ret
aam
scas
lock
or
adc
cmp
and
mov
filds
push
mov
jnp
shlb
xchg
pop
dec
ret
fdivrl
leave
cwtl
call
movsl
popa
ljmp
int3
sub
mov
movl
and
mov
cld
cmpsb
outsl
inc
or
or
enter
mov
push
dec
cmpsb
sub
out
mov
or
popa
lret
insl
adc
call
push
psllw
loope
mov
filds
ds
mov
lock
push
sub
xchg
fdivrs
test
popf
mov
inc
scas
sti
bound
dec
pop
std
aad
adc
and
push
mov
push
mov
mov
lcall
fdivs
rcll
push
inc
mov
aas
in
fwait
cmpsb
dec
pop
cld
jg
lcall
rcrb
arpl
push
push
pop
add
sbb
outsl
mov
pop
sbb
cmp
push
dec
mov
jb
out
inc
add
lret
fs
lock
xor
jmp
out
add
or
push
mov
adc
or
fs
test
jp
lods
cmc
pop
fsubs
mov
push
xchg
cmp
or
loop
insb
clc
aas
js
mov
bound
cmp
inc
mov
roll
rcr
lcall
sbb
mov
out
iret
pop
int3
push
cli
mov
and
loopne
insb
and
ficoms
mov
test
popa
cmc
lods
mov
call
sahf
rclb
cli
outsl
cli
movsl
and
jl
jne
push
mov
or
psubb
ljmp
jecxz
jg
test
xor
add
mov
sub
mov
decb
icebp
push
es
sub
add
incl
popf
ss
pop
rorl
leave
inc
lahf
jb
cmpsb
inc
rolb
insl
dec
loopne
movsb
fcoml
xchg
outsb
push
int
mov
sbb
roll
sbb
jmp
add
repz
push
mov
and
popf
inc
inc
jge
or
ret
imulb
xchg
jl
inc
lea
jmp
mov
aad
xor
add
decl
ljmp
mov
pushf
push
dec
int3
addb
decl
in
fdivp
sbb
fdivs
adc
lcall
xchg
push
sbb
mov
cmpl
mov
or
sub
pop
cld
aad
aam
jle
jecxz
mov
jne
inc
subb
test
fisubrs
add
push
push
push
cmpsl
frstor
xchg
push
lods
pop
push
addr16
fisubrs
or
rorl
in
decb
jo
push
or
xchg
daa
into
outsl
or
cmp
int
jg
subl
ss
xor
dec
push
shlb
sbb
insl
pop
inc
daa
xchg
je
inc
pusha
mov
add
ret
fistpl
push
decl
push
pop
icebp
stos
imul
xor
cmp
popf
mov
jns
loop
ret
inc
std
push
int
cli
push
fidivrl
data16
mov
jge
add
lea
xor
movsb
mov
push
push
add
sub
sarb
xchg
lods
mov
or
mov
or
stc
test
jg
insl
cli
sub
and
inc
mov
push
pop
lods
outsl
sbb
ret
aas
leave
mov
dec
xchg
pop
fnsave
or
xor
xor
add
sub
adc
cs
loopne
and
out
fs
cs
pop
es
stc
mov
add
xchg
cmp
mov
shlb
pop
clc
and
mov
mov
mov
cltd
lds
notl
mov
pop
icebp
jg
add
mov
xchg
pushf
mov
adc
and
mov
fsubrp
cli
call
lret
adc
inc
mov
sbb
jnp
ret
adc
mov
push
inc
push
lea
cs
jae
sub
and
lret
jl
cwtl
cwtl
add
repnz
mov
inc
dec
mov
jbe
aaa
lea
mov
lods
sbb
in
dec
pop
add
xchg
bound
cli
add
adc
jbe
fnclex
lock
push
mov
out
shrl
xor
addr16
aam
setle
push
push
ds
xorb
lock
hlt
enter
imul
mov
add
sbb
add
mov
pop
popa
jle
jl
fiaddl
add
or
incb
adc
push
add
adc
mull
mov
roll
push
enter
outsb
sbb
xchg
cld
mov
aas
and
jg
mov
popf
lret
sbb
add
sar
inc
add
xor
das
add
sbb
pushf
add
adcl
adc
das
out
lds
push
repnz
pusha
xchg
xchg
adc
in
or
pop
xchg
call
data16
push
inc
lcall
add
mov
add
xchg
add
dec
fs
pop
mov
sbb
pushl
div
inc
push
cltd
int
xchg
repnz
jg
jp
rol
sbb
insl
ljmp
sub
fdivs
dec
cmp
sbb
aas
pop
sub
adc
pop
js
ja
mov
rclb
dec
movsb
adc
sti
std
cmpsb
ret
ljmp
or
jmp
fdivrs
les
shlb
insl
scas
mov
add
xor
je
call
xor
fwait
scas
shlb
and
mov
dec
ljmp
mov
xor
and
sahf
cltd
shlb
pusha
add
sbb
mov
hlt
mov
push
in
sub
test
cmp
add
adc
sub
add
pusha
or
mov
cwtl
pusha
mov
jbe
into
int3
xchg
jmp
fidivrs
jo
mov
es
mov
loopne
inc
add
jbe
enter
lret
in
outsl
xchg
stc
aas
push
cmp
cs
pop
push
lods
lock
push
lock
cltd
inc
out
mov
dec
sbb
icebp
mov
xchg
xchg
fmulp
loop
fcmovnb
inc
mov
clc
mulb
fwait
add
bound
test
inc
lret
iretw
xor
or
ja
mov
add
and
scas
clc
pushl
jno
icebp
dec
aaa
shrb
jmp
in
outsb
mov
je
nop
fisubs
inc
int
je
enter
fwait
dec
push
lahf
aaa
mov
pusha
inc
mov
sbbl
cmp
mov
cmpsl
add
dec
clc
lock
push
aaa
movsl
xor
call
stos
adcb
cli
sub
decl
les
or
dec
and
xor
sar
jg
mov
dec
and
enter
dec
addb
insl
jg
movsl
pop
add
adc
leave
rcr
ret
sbb
xor
sbb
sarl
cld
xor
xchg
cmpsb
cmpsb
ja
push
inc
push
dec
mov
clc
movsb
cmp
cld
leave
mov
cld
aas
cmpb
jb
jp
pop
fwait
pop
sbb
mov
dec
dec
inc
adc
nop
scas
adc
hlt
jmp
jae
mov
inc
in
stos
push
leave
jle
out
loope
pop
pusha
cli
add
inc
push
mov
sub
xor
inc
jl
out
ljmp
je
out
xor
jl
inc
pusha
push
jo
cs
aam
rcrl
dec
jbe
pop
inc
lds
out
jle
out
test
popf
or
aaa
loop
pop
shll
xchg
cmpsl
test
test
add
dec
fiadds
xchg
sub
outsl
mov
cmp
sub
cmp
mov
cmc
mov
lcall
jle
xchg
mov
scas
test
mov
sub
jne
lret
ret
xlat
jbe
mov
pop
push
shlb
or
mov
adc
adc
adc
icebp
jg
and
les
insb
cmpsb
sub
loopne
mov
xorb
imul
sbb
add
mov
cmp
inc
jb
push
or
sub
push
xchg
das
add
cmp
fnstcw
pop
lods
add
ljmp
xor
xchg
dec
xlat
or
jmp
out
into
mov
pusha
push
daa
clc
mov
fisubrl
shlb
repz
dec
fsubs
inc
imul
sbb
pop
roll
sub
movb
popa
outsl
int3
stc
adcb
out
vminsd
sbb
outsl
xchg
loope
or
mov
imul
lea
filds
pop
jmp
repz
pop
cmp
mov
jmp
dec
orl
loopne
add
test
cmpsb
sub
adc
push
xor
xchg
mov
push
inc
jp
mov
lahf
xchg
sub
lcall
aas
pop
sbb
add
enter
movsl
ret
or
jle
add
popa
xor
mov
add
ret
push
jle
lcall
bound
pushf
add
stc
and
loop
xor
mov
cmp
repnz
xchg
test
out
enter
or
xor
add
sbb
xchg
mov
dec
out
adc
loopne
cli
je
cmp
xchg
and
int
jns
cltd
add
and
loopne
sub
sub
adc
fstl
cld
sub
jae
les
inc
mov
add
jecxz
mov
mov
inc
mov
mov
imul
clc
pop
or
xor
movsl
in
mov
pop
mov
mov
sub
adc
pop
adc
sbb
test
arpl
sub
mov
xor
pusha
call
jno
pop
sbb
ss
push
xchg
out
loope
or
jecxz
divb
pop
and
pop
jnp
dec
pop
mov
mov
cmp
pop
pop
dec
xchg
jns
xor
push
pop
inc
mov
add
call
inc
jp
addb
sbb
dec
inc
aam
fistps
dec
add
fcomip
jecxz
incl
cmp
xchg
cli
jae
bound
aam
push
jbe
xchg
ret
and
mov
mov
xchg
nop
imul
sbb
ja
hlt
jnp
add
push
adc
ljmp
fadds
mov
or
orl
mov
je
pop
repnz
cwtl
adc
fldl
and
stos
xchg
xor
xor
hlt
mov
cltd
loope
ljmp
jmp
das
or
insl
inc
loope
jle
mov
fldt
fisttps
mov
or
hlt
lea
inc
push
and
test
push
cld
test
mov
push
test
dec
mov
mov
pushf
add
inc
mov
push
or
inc
mov
mov
clc
pop
mov
jl
insl
xor
loopne
outsl
pop
mov
movl
inc
push
push
lret
in
fcomip
es
mov
push
bound
mov
popa
popf
decl
add
shl
orb
call
jmp
js
jmp
mov
xor
add
cmp
movsl
xchg
stos
call
push
jl
add
jb
sbbb
outsb
jbe
inc
or
es
dec
push
inc
jo
in
call
sbb
subb
sub
out
mov
jg
pop
or
test
adc
imul
incl
cld
or
jg
sbb
hlt
les
jo
pop
mov
ss
mov
ret
ret
out
lods
mov
rcll
pusha
cmp
lock
inc
in
leave
lret
testb
inc
movl
mov
push
jno
inc
test
jbe
sub
or
clc
pop
jp
push
jg
stos
dec
mov
sub
add
pusha
int3
les
xor
mov
filds
adcl
es
fldenv
sbb
ret
adc
bound
mov
sub
lcall
pop
xchg
add
inc
add
jnp
lods
sbbb
ja
or
fiaddl
push
or
lcall
dec
and
loopne
arpl
xchg
jl
inc
push
add
test
jbe
jp
adcl
mov
lock
js
sbb
loop
jg
test
mov
push
dec
bound
add
ja
ret
dec
testb
fiadds
cli
out
sahf
dec
mov
clc
mov
or
push
es
cli
add
push
add
incl
cld
into
rcl
js
jne
daa
lret
loopne
pop
in
cld
ja
mov
jns
and
cmpsb
jmp
pop
push
lcall
jle
sbb
rolb
xchg
imul
std
ljmp
cmpsb
pop
sete
mov
ja
mov
push
gs
sbbb
xor
es
add
push
in
dec
movsb
pop
xchg
stos
sbb
bound
push
jg
jnp
lret
sub
adc
jmp
cmp
adc
xorl
rcll
inc
movntq
mov
fiadds
dec
jg
push
jmp
shl
imulb
jp
or
arpl
es
std
jl
fs
outsb
dec
rclb
add
int3
mov
test
push
arpl
es
int3
mov
push
add
fmul
adc
pop
jp
add
sub
sub
push
testl
js
ret
out
and
insb
outsb
movsl
mov
ret
xorl
and
xor
cmp
jns
mov
nop
jp
and
push
cmp
mov
pop
xorb
pop
xchg
mov
cmc
decb
mov
loopne
pushl
mov
cmc
fnstsw
lods
add
add
mov
push
jge
mov
dec
cmp
arpl
nop
dec
or
js
xor
push
push
js
or
scas
jle
jl
ljmp
pop
adc
cli
shrl
sub
les
sub
mov
jno
mov
lcall
icebp
and
xlat
or
jbe
scas
test
test
adc
add
lock
mov
lock
pop
inc
xchg
jno
and
imul
xor
hlt
jge
fisubrl
xchg
fildll
movsb
rclb
and
inc
outsb
adc
dec
insb
fbld
jl
mov
arpl
adc
fnstenv
adc
and
lret
decl
mov
out
fisttpll
dec
push
mov
cmp
or
pop
lods
or
or
fdivrs
jecxz
add
sub
popf
sbb
fmul
roll
push
fld
pop
or
movsb
aas
mov
adc
push
scas
push
in
dec
insb
jg
or
test
mov
movl
pop
test
adc
ret
sub
jmp
test
or
add
xor
popa
mov
pushf
sub
and
mov
lock
jnp
in
repz
je
or
jg
testb
mov
call
mov
sub
pop
insl
insb
add
lret
mov
push
jno
orb
rorl
testb
js
xchg
lea
xor
mov
push
popa
mov
jmp
orl
sbb
cmp
mov
fs
xor
out
insb
fcomps
loopne
cmp
add
mov
fs
xchg
mov
xchg
xchg
cld
mov
jg
gs
test
cmp
movaps
stos
cmpsl
arpl
cmp
loop
jl
movl
call
test
xor
jl
mov
loopne
mov
mov
lock
loopne
aas
adc
icebp
into
adc
mov
inc
and
fistpll
insl
lock
push
cmp
cmp
lock
dec
repz
jmp
sbb
push
fsubrs
mov
mov
mov
or
loope
shll
out
add
pop
imul
inc
mov
cli
pmaxub
jb
add
cld
cwtl
sbb
sub
sbb
or
mov
push
je
jne
mov
adc
add
mov
sbb
or
cld
loop
clc
and
cmp
cli
cmpsb
cmp
aam
enter
into
ljmp
ljmp
incl
push
push
rcll
dec
aam
xor
xchg
aam
jge
mov
jp
sub
mov
sub
mov
out
aad
js
scas
adc
mov
mov
pop
bound
shlb
incl
arpl
lcall
cmpsb
add
cmpsb
and
or
aad
leave
sbb
decl
mov
dec
xor
add
or
push
sub
cmc
pop
mov
les
pushf
addl
mov
jns
mov
sbb
mov
mov
xor
xchg
dec
subl
mov
cwtl
pop
test
push
imul
mov
shlb
rolb
mov
cmp
pushl
push
ja
enter
aam
cmp
test
dec
inc
xchg
mov
add
sbb
decl
je
adc
and
pushw
testb
testl
add
mov
xchg
stc
mov
pop
sub
pop
or
mov
sub
popa
call
pusha
or
xchg
mov
lock
and
adc
adc
hlt
pop
nop
repz
cmp
test
daa
test
dec
cli
ja
fadds
outsl
xor
push
icebp
inc
or
scas
loopne
shll
mov
inc
popa
dec
jl
insl
lods
push
mov
or
or
jg
sarb
dec
leave
gs
into
testb
adc
cmp
inc
sbb
fadds
xor
cld
les
dec
dec
or
pusha
jecxz
mov
and
addb
outsb
ljmp
pop
fnstenv
mov
jnp
imul
mov
scas
mov
and
insl
cmp
sti
jmp
aam
inc
pop
cmc
stos
lods
add
jmp
jne
xor
out
xor
push
sbb
cmpsb
push
add
jo
je
repnz
xchg
movsl
pop
adcb
adc
add
lcall
pop
jne
pop
and
xchg
lds
cltd
out
les
dec
bts
es
xchg
push
aad
arpl
les
inc
xchg
adc
jge
jle
mov
ja
ja
fdivs
popa
mov
cwtl
mov
jmp
inc
aad
ret
lret
adc
rcrb
cmp
or
dec
rcl
pop
cmp
mov
shrb
sub
aas
mov
dec
imul
sbbl
adc
and
sub
shlb
jmp
xor
lcall
fld
xchg
push
add
ljmp
push
loope
lods
sub
mov
int3
pop
xor
add
xor
sub
adc
dec
mov
ret
mov
sahf
cli
in
push
popf
adcb
cwtl
or
ret
lea
das
xchg
xchg
mov
sbb
repz
ret
add
dec
daa
push
in
sbb
cs
mov
loopne,pn
xchg
idivb
mov
cmp
cmp
sar
xchg
xchg
xchg
xor
mov
inc
call
ljmp
push
or
pop
push
jne
xor
aam
mov
call
adc
movsl
lcall
ljmp
push
jp
inc
lahf
ret
imul
insb
adc
jecxz
les
fstps
add
jnp
popa
aad
bound
imulb
adc
pop
jmp
orb
jnp
inc
loope
pop
add
cmp
mov
cld
pop
add
cli
hlt
mov
xchg
xchg
int3
jne
clc
push
add
jmp
inc
push
les
adc
jb
lret
cli
imul
hlt
decl
pop
lahf
enter
movsb
nop
and
mov
dec
gs
ss
mov
iret
pop
out
sub
hlt
jg
jns
push
mov
add
jnp
call
xchg
mov
callw
adc
cli
adc
stos
push
lret
pushf
or
addr16
xchg
clc
jg
mov
ret
out
cltd
test
xor
pop
push
imul
popf
nop
inc
pushfw
test
data16
cmp
mov
lods
scas
add
out
in
sub
dec
add
iret
sbb
decl
or
gs
pop
dec
cmpsl
jb
push
or
test
add
adcb
or
ss
mov
sti
out
push
xor
mov
je
sub
and
push
popf
mov
loop
movsb
sub
add
lods
cmpsb
adc
mov
xchg
faddl
inc
addr16
fcmovnu
loopne
xlat
lret
or
hlt
outsl
xor
or
xor
gs
mov
inc
loope
loopne
and
or
adc
jg
scas
inc
sarb
cmp
add
insl
or
insb
xor
js
sti
mov
push
pop
scas
hlt
xchg
ljmp
or
push
aam
or
outsl
push
dec
xor
ja
cmp
mov
lock
ljmp
adc
inc
inc
into
loope
pop
pop
push
loope
add
xor
ret
push
adc
adc
jge
cmp
in
pushf
cmp
add
iret
cmp
call
mov
push
ret
cmpsl
insb
jnp
mov
add
dec
push
pusha
and
xchg
gs
in
cmpl
mov
mov
sub
jo
ljmp
movsl
jmp
jmp
call
adc
inc
cld
lds
and
add
test
add
and
js
lock
shlb
shl
mov
jp
inc
out
fiadds
and
pop
adc
mov
in
add
jg
or
inc
int3
cmc
dec
fisubs
push
adc
and
stos
and
subl
scas
push
scas
std
and
das
inc
mov
popf
sbb
movsb
js
cld
call
inc
inc
orb
nop
inc
in
lahf
das
adc
sar
sbb
sub
push
scas
fucomip
orl
arpl
icebp
and
xchg
lods
insb
enter
mov
and
cmpsb
jo
daa
mov
xor
mov
push
aad
lods
lahf
clc
out
fisubl
fmull
push
clc
dec
in
add
fildll
adc
inc
xchg
lock
std
ss
cmpsb
decl
add
fs
mov
pop
mov
mov
popa
ret
int3
pusha
das
clc
ja
nop
jnp
daa
fistpl
push
mov
add
pop
pushl
bound
cmpsl
xor
jae
xchg
cld
mov
jl
jb
mov
xadd
sbb
cmp
lods
pop
and
rolb
jg
pop
jbe
or
mov
jg
sbb
mov
push
dec
decb
add
inc
mov
fs
jle
inc
cmpsb
and
add
iret
or
pop
dec
std
jge
adc
les
inc
cmp
imul
or
adc
push
xor
call
mov
cwtl
xor
xor
in
hlt
rorl
incl
std
incl
out
xor
jne
dec
in
xchg
mov
in
out
fbstp
clc
xor
or
out
repz
xchg
das
shrb
adc
sbb
mov
fs
or
sub
jle
lock
mov
decl
cmpsl
or
mov
and
push
insb
mov
dec
xor
sarb
pop
and
imul
adc
add
call
and
push
add
lock
xchg
push
roll
mov
or
aas
clc
xchg
rcl
int
pop
addr16
addl
inc
jg
dec
pop
push
xor
sub
cs
pop
add
mov
xchg
add
add
loopne
jg
test
lret
lock
cld
scas
cli
pop
mov
sbb
mul
jne
and
lock
pop
push
push
mov
push
rolb
mov
jmp
mov
in
dec
sbbb
xchg
movsb
adc
ljmp
sbb
adc
test
ret
rorb
ret
add
fnclex
mov
or
push
mov
add
fs
test
icebp
mov
icebp
adc
push
adc
dec
les
jno
aaa
lds
pop
and
nop
or
gs
or
lret
ss
add
incl
adc
mov
pop
xchg
rclb
jbe
xor
and
jg
mov
pusha
pushf
mov
ds
push
cmp
or
sbb
insl
dec
ja
sbb
out
aam
decl
sub
in
or
icebp
repz
dec
in
lock
sub
push
fwait
sahf
ret
xchg
mov
pushf
add
loop
clc
lcall
pop
into
les
rcrb
and
fisubs
insb
and
inc
addr16
sub
pop
mov
dec
jp
int3
ficoml
notl
inc
test
lcall
push
cmp
push
and
jo
mov
push
xlat
jae
insb
dec
lea
xchg
out
xchg
rorb
std
enter
jo
mov
cld
les
pop
es
ja
mov
and
xorb
pop
enter
mov
xchg
cmp
inc
pop
jns
sbb
jecxz
arpl
xchg
ds
jo
mov
ds
or
mov
sbb
and
mov
sub
ret
rcrl
jb
mov
imul
inc
push
mov
cld
std
subb
mov
pop
loope
fdivrl
jp
and
xor
push
and
adc
and
outsb
mov
jns
in
sbb
push
and
lock
aas
cmp
adc
and
cmc
movsl
shlb
mov
sbb
insb
addb
push
or
dec
jns
cmp
mov
push
push
lods
mov
fimuls
mov
inc
jle
cmp
xor
or
rolb
aas
adc
mov
xchg
jmp
cmp
mov
lds
adc
dec
in
fsubrs
icebp
mov
lcall
inc
loopne
fadd
hlt
cmpsb
cmpsl
xor
aad
pop
adc
lcall
push
lahf
les
jo
shlb
lcall
lock
push
mov
lcall
orb
sub
mov
cmp
adc
call
les
sub
sbb
cmpsb
cmp
enter
mov
incb
push
movsb
enter
mov
js
ds
int3
stos
jns
stc
rcll
xlat
cmp
ret
insb
mov
push
jbe
inc
loopne
aas
push
test
pop
or
jo
insl
lahf
and
popf
xorb
push
and
xchg
iret
add
lcall
ret
adc
fprem1
dec
mov
lea
inc
stc
dec
shrb
dec
sbb
jecxz
mov
lea
cwtl
ret
cmp
repnz
add
std
sti
std
leave
jp
subl
aam
add
out
call
push
bts
test
bound
je
dec
lock
clc
pushl
sbb
push
adc
scas
xor
adc
sub
inc
mov
jb
dec
or
ljmp
add
pop
addr16
popa
cld
sti
in
orl
lds
les
jl
push
add
je
and
ja
mov
andb
mov
rcl
xor
cmp
sbb
jl
cwtl
mov
and
jecxz
sub
push
mov
adcb
leave
es
adc
inc
cli
jmp
add
into
adc
loopne
les
mov
addl
mov
lods
xor
sub
add
test
fildll
or
push
out
push
sub
mov
dec
sahf
stc
inc
aaa
cwtl
jge
jecxz
inc
pop
clc
mov
dec
xchg
sub
pop
xchg
movsl
xor
add
cli
test
out
mov
fisttpll
inc
or
pop
sub
mov
test
pop
das
movsb
jmp
dec
push
roll
jb
sub
add
push
in
fldt
xor
mov
lahf
jo
lret
sbb
xor
and
std
jbe
fcompl
xor
mov
mov
ret
xchg
mov
push
mov
sarl
cmc
insb
xor
call
test
push
xchg
mov
adc
or
and
push
inc
jecxz
andl
testl
lahf
sahf
dec
add
pop
sbb
mov
mov
mov
jg
sub
add
sub
inc
and
mov
cmc
mov
ss
push
ss
dec
lea
mov
xchg
mov
adc
nop
lock
cmp
fcoms
or
mov
test
aas
in
push
pop
jne
nop
sbb
cmp
in
adc
aad
or
lcall
cmp
cltd
ss
adc
cs
aaa
scas
inc
mov
aad
add
jb
cmp
cmp
fildll
dec
cs
adc
inc
mov
stos
mov
pop
cld
jg
inc
push
sub
mov
adc
inc
fsubl
fbstp
test
fcmovu
icebp
jg
rorb
lret
test
inc
mov
mov
imul
cmpsb
pop
cld
nop
ret
mov
insb
jb
inc
xchg
mov
adc
xlat
cmp
decl
jp
sar
test
mov
or
dec
xchg
pop
push
stos
sar
mov
and
mov
std
pop
hlt
push
cs
sub
mov
jns
inc
cmp
lock
mov
mov
or
fmull
push
call
and
pop
add
ljmp
out
js
repnz
addb
mov
mov
inc
scas
mov
call
in
jmp
and
aas
add
sub
pop
filds
xorl
xchg
push
mov
pusha
std
pushl
jmp
push
rorb
dec
lret
ret
mov
pop
sar
mov
xlat
jmp
in
call
pop
shrl
mov
shll
pusha
jnp
es
mov
mov
jp
dec
negl
inc
aam
jl
cmpb
push
loopne
nop
pop
or
mov
push
mov
ljmp
iret
into
scas
cwtl
push
jb
pop
cmp
sbb
add
xchg
push
jmp
push
sbbl
xchg
jmp
xchg
in
clc
ret
ret
sub
cmpsl
or
push
xchg
xor
into
and
or
inc
mov
sbb
xchg
ljmp
fs
cmpsb
test
jp
call
inc
pop
fdivr
loop
xchg
add
fwait
cmp
or
movsl
cmpsl
push
push
cltd
push
pop
arpl
add
scas
ficomps
add
rcr
xchg
in
pushl
jne
leave
cmp
add
call
orl
xor
ljmp
xor
push
inc
ljmp
cltd
lcall
fbld
inc
aaa
and
dec
sbb
xchg
into
ss
insl
add
clc
stc
xlat
mov
stos
pop
mov
adc
fisttps
into
movsl
loopne
jb
pop
xor
pop
out
bound
xor
and
and
or
push
mov
mov
clc
decl
dec
dec
or
pop
adc
and
pop
add
add
push
lock
dec
mov
and
mov
mov
lods
lods
pushf
and
add
test
adc
mov
shl
adc
sbb
das
add
mov
mov
imul
lock
fisttps
xlat
push
std
sbb
adc
add
cmc
xchg
andb
cli
xor
xchg
shlb
cld
mov
sbb
dec
and
cld
push
mov
sub
enter
xor
insb
repnz
jnp
xchg
daa
rcrb
mov
in
fstpt
stos
loopne
push
cltd
inc
xchg
mov
dec
push
add
leave
sub
and
fildll
ds
cld
and
test
jge
mov
cmp
jg
jbe
gs
int3
outsb
mov
fsubl
sub
xor
xor
call
inc
jmp
xor
sbb
js
mov
aas
add
ljmp
inc
pop
testb
push
sbb
pushf
in
cmpsb
add
xchg
inc
and
call
movsl
jae
cmpsb
cmp
fwait
mov
add
ss
mov
or
sbb
add
rol
sarl
cmp
cld
fists
incl
inc
fwait
lea
cmp
insb
xchg
ja
les
push
cmp
dec
push
or
cmp
jbe
sbb
sub
inc
sub
or
lods
out
cmp
mov
dec
pushl
sbb
pusha
pop
inc
dec
mov
ror
mov
mov
in
loopne
sbb
scas
or
aaa
out
cmp
sub
or
ss
js
cmp
test
xor
enter
loopne
cmpsb
mov
fsubrl
mov
popf
or
push
mov
sbb
inc
add
and
and
daa
mov
out
pop
pop
adc
jno
sahf
sar
aaa
in
clc
call
add
into
add
dec
mov
fldl
add
inc
push
shrl
xor
add
test
jge
rolb
cli
jmp
push
dec
adc
cli
jg
insb
dec
mov
in
repnz
cmp
dec
gs
jle
dec
dec
syscall
mov
mov
sub
ja
jge
or
xchg
loop
les
mov
sub
mov
ljmp
cmpsl
daa
sbb
cs
cs
dec
ror
cmpsl
xchg
aas
loopne
cmp
pop
inc
andb
adc
add
in
cwtl
ljmp
sti
and
xlat
ss
sahf
mov
into
rcrb
sbb
pop
pop
lds
jmp
lcall
ret
mov
cmp
mov
ja
push
outsl
mov
add
sti
adc
push
imul
leave
inc
xor
mov
inc
push
jg
xlat
movsl
sbb
incb
cld
das
les
test
out
movsb
xchg
div
popa
push
jl
lcall
pop
jp
mov
addb
cmp
ret
pusha
out
sub
jg
repnz
xchg
repz
scas
add
sbb
arpl
fsubr
xorl
adc
jg
in
mov
adc
dec
push
ja
pushf
xor
leave
ljmp
jns
adc
jno
jnp,pn
pop
pop
jg
cmpsb
dec
push
or
push
cmc
lcall
push
std
dec
inc
xor
rcrl
inc
add
cmp
push
mov
xor
cmpps
cmp
lahf
mov
fildll
gs
jg
adc
scas
sbb
outsl
mov
ret
lcall
stos
lret
or
loope
lds
cmp
cmp
sti
adc
std
add
inc
inc
mov
ljmp
inc
ja
pop
out
adc
push
xor
mov
mov
and
jle
ret
mov
cmp
mov
sahf
jge
aad
fcomps
sbb
scas
sub
ret
xchg
nop
lock
fiaddl
jg
daa
notb
popf
add
outsb
int
jo
inc
xor
test
dec
jmp
add
lock
fidivl
and
ficompl
pop
adc
mov
or
jns
pop
clc
mov
inc
push
sbb
sbb
ss
lods
incl
repz
mov
xor
stos
cld
inc
popa
push
shlb
cld
test
adc
pop
popa
ffree
dec
test
jmp
sbb
ja
lret
dec
ficompl
jle
add
push
mov
call
scas
enter
and
addb
movsb
mov
jne
lods
cwtl
add
push
mov
push
add
sar
fists
mov
jo
xchg
loop
mov
push
fdivrl
fidivs
rcrl
push
mov
sbb
lahf
lea
imul
aaa
std
push
pop
gs
xor
lcall
pop
mov
or
inc
dec
push
sub
ja
adc
aas
dec
mov
add
jecxz
jmp
pop
add
push
add
ret
mov
repz
ljmp
jmp
aam
shrl
int
push
and
lret
or
test
push
add
sbb
imul
and
pop
into
loopne
push
hlt
jmp
push
popf
cmp
out
ja
jp
push
ret
add
js
mov
enter
lds
lcall
push
in
rorl
push
addb
mov
outsb
push
add
add
mov
pop
or
adc
dec
pushf
into
pop
mov
push
rorl
ljmp
rorl
push
pop
mov
in
and
or
cmp
push
std
fwait
insl
dec
out
sahf
xor
dec
add
lret
pop
add
xor
cmpsb
imul
ljmp
repz
cmpsl
jmp
lock
sbb
adc
pop
add
adc
jmp
test
and
fdivl
xor
pop
or
xchg
xorb
xor
jg
fdivrs
mov
jg
mov
inc
add
js
addb
loop
rcrb
loop
loop
mov
dec
mov
push
lds
sub
add
fisttps
and
add
pop
add
mov
and
std
sub
add
stos
int3
inc
pusha
out
loope
sbb
test
call
sti
cli
mov
add
mov
sub
sbb
mov
test
inc
mov
adc
test
cmp
gs
mov
dec
push
mov
scas
clc
mov
lahf
ret
xchg
ret
xor
sub
inc
ljmp
icebp
test
ljmp
jns
test
sbb
fdivrp
pop
jg
jae
or
shlb
addr16
in
div
xlat
sarb
pop
nop
inc
jg
mov
pop
loop
loope
mov
es
mov
add
jg
jle
cli
cmpsl
jae
dec
add
cld
adc
jl
or
mov
or
test
data16
andb
stos
pop
fidivrl
es
adc
pop
mov
mov
sbb
sbb
aam
enter
fwait
das
mov
sbb
jmp
cmp
lret
pushf
cld
dec
ljmp
or
jle
inc
movl
cmpsl
cmc
pop
ret
mov
enter
cmp
enter
dec
or
dec
leave
clc
xchg
sysenter
mov
sbb
lret
sbb
or
cld
daa
and
aad
jne
xchg
fiaddl
jne
xchg
mov
add
sahf
lcall
popa
out
sbbl
cli
call
jp
mov
lret
lock
xor
std
loope
out
inc
inc
ret
fbld
push
mov
mov
push
outsb
pusha
nop
inc
inc
pop
push
lret
shrb
adcl
add
sarb
popa
sub
aaa
mov
cmp
inc
ljmp
sbb
decl
and
mov
clc
xor
mov
orb
add
cmp
inc
fdivl
popa
jae
xchg
and
jle
add
fildll
mov
inc
xor
es
mov
dec
test
data16
jmp
ficoml
inc
rolb
out
pop
jle
adc
aad
xchg
mov
mov
clc
pop
fs
cmp
fucomip
or
loopne
cli
cs
pusha
and
jmp
mov
data16
xor
loopne
and
or
incl
icebp
xor
push
cmpl
enter
xor
pushf
add
mov
rclb
js
inc
in
cmp
jp
inc
push
sbb
add
mov
lea
mov
xor
orb
or
and
and
adc
inc
adc
inc
mov
mov
clc
stos
or
popf
xor
push
xor
mov
cmp
mov
imul
sbb
icebp
roll
test
cld
lcall
testl
jg
sub
gs
add
mov
mov
dec
cmp
push
mov
mov
in
subb
fwait
cld
addl
ss
mulb
bswap
loopne
pop
and
jmp
mov
cmp
sbb
cli
outsl
mov
jecxz
add
shll
stos
xchg
mov
add
dec
rcrb
test
push
jo
movsb
ret
mov
cmp
loope
cld
adcl
call
sub
jmp
fwait
lods
mov
out
cli
stos
sbb
sbb
call
test
dec
push
clc
dec
push
or
test
pop
loopne
and
add
inc
add
aad
cmpsb
and
add
shlb
addl
test
cld
mov
inc
sbb
mov
incl
push
push
call
or
notb
pop
inc
cld
adc
dec
cli
add
xchg
xor
push
or
clc
fwait
jl
insl
mov
lds
loop
xchg
mov
fadd
push
mov
incb
push
add
loope
insb
cmpsl
pop
mov
push
inc
inc
sub
sub
add
inc
xor
out
mov
lock
mov
loopne
lds
pop
jecxz
in
sub
call
cmp
loopne
popa
xor
js
xor
add
add
mov
int3
ja
ja
inc
xchg
mov
and
dec
sub
hlt
incl
es
mov
or
add
jnp
dec
rcll
and
or
pop
and
incl
jmp
inc
add
mov
int3
ljmp
push
jo
jo
cmpsb
xchg
jmp
out
data16
fistpl
clc
lods
or
push
mov
sub
test
jg
pop
add
out
fsqrt
jmp
inc
cmp
inc
lds
mov
fidivl
mov
or
int3
inc
inc
cmp
nop
push
outsl
add
lret
jns
sti
mov
add
mov
mov
aas
add
outsb
loope
adc
push
es
cmp
adc
or
add
pop
clc
fnstenv
add
mul
mov
sbb
fmul
cld
add
nop
push
loope
mov
pop
lret
or
fbstp
int3
add
or
mov
xchg
loop
or
fdivl
sbb
xchg
xor
xchg
push
call
mov
add
cwtl
add
pop
popa
jle
adc
lods
mov
push
rorb
add
sbb
ljmp
mov
hlt
aaa
stos
fldt
push
lods
adcl
lea
dec
sbb
jno
arpl
xchg
add
scas
xchg
fdivrl
ds
mov
stc
call
dec
pushf
mov
stos
cwtl
lcall
call
push
ret
mov
add
add
mov
pop
cmp
ja
nop
add
in
lahf
adc
pop
ds
repz
cltd
push
push
hlt
scas
xor
or
adc
movsb
movsb
int3
lcall
sbb
iret
or
lret
inc
xor
nop
out
fisttps
sbb
add
and
inc
push
add
jg
nopl
test
sbb
aam
pop
hlt
out
push
or
cmpsl
dec
test
ja
leave
rcrb
aam
add
sbb
xchg
pop
dec
pushl
xor
add
andb
xchg
addr16
inc
push
or
mov
mov
in
daa
jno
mov
pusha
nop
repnz
cmp
xchg
outsb
dec
dec
jmp
mov
or
sbb
mov
adc
rolb
mov
sbb
lret
cld
xchg
inc
pop
jecxz
push
add
dec
jg
inc
cmp
sbb
test
push
pushf
jl
xor
loop
fbld
cwtl
sahf
inc
test
lret
mov
roll
mov
push
and
push
clc
decl
and
sbb
xor
pusha
lock
add
or
sbb
test
pop
jmp
sub
mov
fdivr
fbld
mov
sub
mov
xchg
out
js
sub
cmpl
clc
fldt
push
pusha
xor
pop
test
mov
push
jo
sbb
push
and
xchg
cmp
cmpb
decl
loop
pusha
sbb
inc
and
cmp
xchg
into
add
inc
ret
xchg
test
pop
test
sbb
mov
out
push
aam
and
mov
call
mov
inc
add
mov
xchg
imul
mov
les
inc
fldl
adc
cmp
mov
cli
mov
and
incb
inc
inc
fwait
clc
aas
loop
test
test
cmp
mov
adc
mov
mov
or
loop
lea
imul
mov
or
dec
loope
cwtl
je
pop
dec
pop
cmpsl
mov
scas
cmp
jg
sub
xchg
shrb
and
shlb
add
or
jle
clc
ret
scas
push
repnz
les
mov
ficoml
cs
adc
pop
push
dec
dec
les
xor
lock
push
cld
mov
push
adc
es
ljmp
jecxz
add
ret
pop
lret
mov
dec
cmp
rcrl
inc
push
push
or
in
call
nop
push
jns
test
dec
out
les
sub
mov
mov
pushl
inc
adc
xor
cmpb
inc
pop
lcall
sub
fdivs
scas
lret
lods
sbb
mov
cmp
decl
bound
daa
jle
mov
stc
dec
out
cwtl
adcl
push
vmovdqu
push
stos
xor
cmc
hlt
pop
fidivrl
mov
scas
ljmp
inc
insl
bound
sbbb
mov
jge
call
pop
stc
add
or
pop
addr16
les
xchg
addr16
pop
cmc
inc
iret
and
inc
scas
jle
test
lock
xor
incl
rorb
lock
pop
sbb
sub
add
shll
jbe
push
mov
sbb
mov
add
test
lea
sbb
ja
add
and
insb
xchg
mov
les
inc
dec
and
mov
les
or
stc
idiv
rcrb
sbb
inc
xor
fcoml
mov
rorb
fs
insb
add
cmp
lods
adc
ret
mov
test
aam
mov
add
push
add
out
movb
clc
inc
clc
jno
fnstenv
xchg
out
sub
xchg
ljmp
dec
clc
xor
adc
mov
lds
add
fidivrl
sub
push
add
add
cmp
cmp
aam
sbb
loope
movsb
out
hlt
insb
incl
incl
jl
out
out
ss
dec
and
jl
or
pusha
push
aam
mov
cmp
xchg
clc
aaa
xchg
inc
out
js
jo
cmp
mov
and
cs
jnp
icebp
jg
add
rcll
add
lahf
mov
or
mov
or
dec
andb
js
stos
adc
cltd
xor
jge
sahf
les
xor
and
sub
jg
fisttps
rcll
fistps
jg
or
fldl
aam
dec
fsubl
cltd
orl
xor
insb
mov
sahf
mov
movsl
cs
sbb
or
mov
dec
add
movsb
fs
out
inc
pop
nop
in
dec
sub
and
imul
clc
outsb
mov
sub
pushf
mov
cmp
ret
daa
fcomps
mov
mov
mov
dec
data16
sbb
sbb
lods
pop
mov
ds
loopne
sub
stos
rorl
inc
notl
mov
repnz
pop
sub
ret
dec
fcoml
testl
pop
mov
jp
xor
push
std
adc
addl
add
mov
aas
push
jo
and
jle
sbb
add
fs
push
xor
jb
decl
rcrb
sub
dec
adcl
mov
ss
sbb
mov
add
std
psadbw
jmp
mov
cli
sub
outsl
cwtl
mov
sub
inc
or
aad
push
loopne
fbstp
or
cli
out
lock
dec
pop
addps
xchg
push
dec
movsb
xchg
aas
xor
outsl
dec
in
sbbl
int3
bound
xchg
and
add
inc
add
xchg
enter
add
mov
loopne
shlb
jl
out
aas
xor
outsl
push
add
aas
fsubs
pop
adc
scas
clc
push
dec
pusha
inc
pop
in
mov
and
add
adc
mov
ret
push
inc
adc
mov
loopne
push
fdiv
aas
pushf
jb
push
je
prefetch
or
push
adc
call
pop
jg
pop
scas
cmp
pop
xor
lock
aaa
xor
lock
test
adc
add
fcoml
hlt
xchg
shlb
fmuls
dec
dec
push
outsb
pop
push
hlt
adc
cmp
push
out
shrb
js
dec
es
sub
mov
sub
jo
sbb
orb
fisubrl
cli
jae
rorl
fists
cmp
adc
mov
icebp
sbb
adc
fsubrl
and
leave
and
fisttps
xchg
movsb
or
andl
push
mov
push
loopne
fwait
jb
test
pop
add
sbb
mov
xlat
fcomps
lret
push
nop
push
dec
adc
mull
mov
add
cmc
outsl
push
sahf
test
xchg
in
fdivrs
add
and
mov
cmp
popa
insb
in
ss
or
push
dec
add
nop
push
fidivrl
mov
fildl
xor
push
decb
jp
int3
adc
pop
into
pop
jno
xor
dec
mov
movsb
addb
jecxz
ljmp
add
cmc
lahf
xor
shrl
mov
mov
jmp
add
sub
push
lock
cmc
xor
inc
xchg
lock
fisttps
into
jmp
shl
or
arpl
stos
add
mov
idiv
jg
cld
dec
push
xor
jns
popa
xor
cltd
jmp
arpl
in
call
or
and
pushf
sub
push
push
dec
frstor
add
aaa
mov
sub
or
filds
mov
pop
jne
push
mov
push
or
lret
inc
std
mov
aaa
adc
jp
mov
aam
sti
mov
mov
fsts
sbb
mov
movb
mov
or
loopne
cwtl
nop
ds
stos
cli
jg
adc
add
or
jne
push
orb
cli
iret
test
sub
sbb
stos
or
push
cli
mov
stos
lret
test
jb
mov
jp
les
mov
pop
push
ss
lcall
loop
jg
add
inc
and
or
cwtl
mov
decl
add
pushl
sub
mov
rcr
mov
insb
cs
movsb
jns
dec
cwtl
out
divb
push
sbb
push
clc
cmp
jg
lods
ja
orb
sbb
sbb
mov
shll
jbe
mov
insl
jge
dec
fistpll
mov
pop
mov
rclb
js
mov
adc
add
sbb
xor
icebp
mov
les
nop
mov
aaa
inc
mov
dec
adc
dec
and
stos
out
or
shll
cs
jae
mov
pop
cmc
das
add
lds
mov
mov
inc
cmpsb
mov
lret
jp
mov
push
ret
adc
sbb
cmpsb
mov
dec
stos
mov
std
cmp
add
xchg
xchg
or
sbb
orl
jecxz
and
cmp
cli
ja
out
jg
cmpsl
idivb
push
mov
xorb
adc
call
mov
jns
mov
and
pusha
cmp
ret
fiadds
and
mov
nop
jbe
ret
dec
push
add
sbb
pop
mov
rclb
pop
aam
loop
jg
aaa
pop
scas
and
mov
mov
loop
stos
adc
xlat
jmp
xchg
mov
push
mov
ja
mov
aaa
rol
push
or
pop
push
push
mov
mov
add
push
mov
and
mov
out
or
fldcw
outsb
add
ja
scas
and
mov
push
pusha
mov
or
sub
mov
add
jns
xchg
inc
sub
jmp
mov
sbb
and
sub
adc
sti
out
fiaddl
adc
dec
cmc
pop
mov
mov
inc
dec
add
cli
xchg
sbb
cli
xor
pop
lock
andb
jo
dec
scas
test
xchg
jo,pt
pop
imull
mov
push
cmp
xchg
scas
push
hlt
lcall
push
mov
cs
mov
dec
cltd
das
lds
add
sbb
sbb
test
pop
jp
inc
jmp
mov
cmpsb
mov
imull
int
orb
nop
scas
decl
jbe
shl
xor
outsl
xor
scas
mov
ret
adc
or
les
dec
adc
or
sbb
or
shl
mov
push
movsl
mov
les
xchg
xchg
fisubs
inc
sbb
inc
stos
sub
dec
hlt
or
or
mov
or
cli
cs
repnz
movsl
outsl
ret
mov
xchg
xor
and
pop
ljmp
pusha
call
pop
test
lahf
dec
adc
cltd
ljmp
adc
mov
aaa
je
xor
push
or
push
mov
xchg
add
lods
sarl
adc
and
pop
daa
add
pop
jne
orb
fwait
sub
fstpt
cld
cmp
out
jmp
aad
xor
insl
dec
test
push
ja
and
bound
mov
mov
xchg
outsl
push
inc
ljmp
das
push
scas
repnz
mov
lea
inc
mov
sbb
cld
add
or
add
lcall
out
rorl
cmp
or
cmpsb
cmc
pop
fistpl
outsb
adc
in
xchg
inc
stc
sub
jg
scas
dec
cs
subb
in
sub
inc
push
lea
xchg
mov
push
add
pop
ficoml
jns
sbb
adc
shrl
mov
pushl
mov
sbb
pop
aaa
xchg
pop
pop
pop
cmpb
dec
jnp
xchg
test
mov
nop
loopne,pn
mov
add
or
mov
orb
cli
outsl
adc
insl
aaa
out
xor
add
pushl
sub
jl
pushf
lcall
xor
decb
ret
in
mov
lcall
jmp
mov
movsl
mov
popa
mov
insb
xchg
cld
jg
loop
leave
xchg
and
add
rorb
into
or
sub
fsubrl
push
pushf
leave
push
nop
lock
jg
jno
mov
int
fnstcw
adc
lods
scas
adc
pop
sti
out
mov
jbe
or
cmpl
int3
adc
nop
repz
cmpb
out
mov
nop
xchg
es
out
cld
int
mov
mov
mov
lods
lea
inc
jno
adc
icebp
xor
jle
xchg
clc
or
push
sub
pop
int3
outsl
movsl
aam
int3
rolb
push
pop
dec
cwtl
fimuls
jmp
jns
sbb
xchg
or
mov
sub
test
mov
lock
stos
pusha
std
lock
jb
mov
mov
insl
xor
imul
mov
dec
pop
pop
mov
cmp
jge
outsl
js
sub
or
pop
pop
dec
in
inc
fdivr
not
decl
enter
iret
mov
insl
xchg
pop
lret
loope
inc
shrl
mov
aas
lahf
xchg
lret
jbe
mov
jmp
add
inc
movsb
mov
adc
cmpsb
or
or
sbb
adc
hlt
outsl
dec
shrb
inc
mov
inc
cmp
mov
fwait
and
loope
push
rcll
cmp
out
test
xchg
adc
dec
pop
jl
add
cmp
inc
mov
test
pop
leave
int
inc
pop
adc
cmp
test
or
aas
xor
sub
lds
xor
loop
or
in
mov
pop
test
lods
mov
mov
cwtl
je
inc
mov
pop
test
or
adc
sub
mov
pop
leave
sbb
mov
das
mov
aad
mov
outsl
clc
add
movsl
cltd
xlat
iret
inc
and
movsb
push
aaa
mov
add
inc
push
cmp
mov
add
dec
xor
cmc
xchg
stos
nop
jl
lods
aas
mov
mov
in
fildl
mov
dec
sarb
push
adcl
out
mov
mov
adc
pop
inc
sub
pop
dec
fidivrs
mov
cmp
dec
push
mov
pop
icebp
andb
std
mov
out
scas
jecxz
mov
dec
mov
lea
stos
stos
mov
test
inc
out
mov
fbstp
rolb
or
aas
call
imull
xor
rclb
or
sub
pushf
adc
fs
lods
mov
xor
inc
call
push
mov
sub
jmp
push
mov
or
add
lods
jne
mov
mov
or
into
push
test
jg
repnz
mov
sbbb
cmp
aas
pop
enter
add
xchg
xor
and
mov
mov
jbe
pop
les
rorl
push
lea
pop
xchg
lock
pop
dec
jne
fstpl
or
scas
clc
jnp
sub
push
mov
jns
loop
std
xchg
shlb
mov
rcrb
negl
aaa
push
mov
movsb
rclb
inc
xchg
loopne
add
cmpb
iret
loope
in
jb
sbb
push
pop
or
adc
and
ret
fisubs
int
clc
mov
sub
and
dec
stos
xor
inc
ss
sbb
pop
hlt
fbld
cmpsb
xor
cmpl
xor
adc
cmc
dec
pop
std
add
inc
incb
mov
mov
add
add
add
sarl
cmpsl
sbb
sub
xchg
decl
lds
mov
loopne
mov
cmpsb
mov
test
incl
xor
pop
jbe
mov
cld
adc
aaa
std
push
shll
insl
jmp
dec
and
xchg
xor
inc
xchg
sbb
mov
icebp
fildll
mov
inc
and
cld
xchg
into
dec
and
push
cmp
scas
shrb
mov
out
sbb
mov
daa
push
mov
push
cmp
push
jg
dec
mov
arpl
mov
loopne
jl
loope
orb
in
add
imul
aad
add
sbbb
sub
lcall
shrb
mov
jge
jmp
or
es
jo
in
int
xchg
cltd
xor
pop
or
sub
es
xor
jecxz
and
test
pop
ljmp
shlb
clc
add
fwait
hlt
cmp
push
clc
subl
sub
insb
or
movsb
jno
and
call
fsubs
test
out
sub
push
lret
inc
imulb
or
or
aas
jbe
mov
adc
jno
movsb
push
jnp
das
xchg
test
fistpl
stos
adc
lahf
jb
inc
std
call
cmc
push
sub
bound
push
aam
mov
pop
xor
scas
shlb
push
fdivrl
out
ds
hlt
mov
jg
cwtl
xchg
out
loope
and
mov
xor
int3
add
inc
out
mov
lods
cmp
neg
sti
jle
daa
aaa
jecxz
or
and
xlat
push
aam
incb
ret
mov
jg
sbb
lods
loope
orb
pop
adc
das
adc
xchg
mov
pusha
aam
cld
sti
inc
es
hlt
xchg
push
mov
pusha
push
es
push
fisubs
mov
outsb
pop
movsl
pop
mov
sti
jg
add
stos
lods
out
and
sbb
les
inc
sbb
mov
bound
daa
sub
popa
stos
fildl
lock
test
pop
shll
push
decl
sub
scas
add
sbb
repnz
pop
jg
pop
and
ljmp
sub
mov
nop
rcll
add
mov
or
xor
mov
sub
fdiv
aad
push
ret
and
xchg
mov
or
dec
push
ljmp
adc
nop
mov
jmp
pop
or
fistps
inc
orb
fidivrl
and
mov
mov
decl
imul
and
nop
push
push
or
stos
jge
jne
movsb
adc
mov
popf
jo
and
xchg
mov
std
jecxz
lock
lods
cmpsl
pushf
jp
cli
mov
sub
icebp
or
mov
add
add
mov
push
add
dec
clc
jg
and
inc
or
inc
pop
mov
aam
sbb
and
movsb
mov
dec
loop
and
and
mov
orb
repnz
pop
mov
int
xor
aaa
ret
and
push
scas
pusha
adc
add
pusha
outsl
fs
ret
push
lret
les
mov
add
jo
push
pop
cltd
xor
aad
loope
pop
js
lret
dec
inc
xchg
push
inc
mov
test
insl
sub
push
dec
pop
sub
add
dec
jl
push
sbb
movsb
mov
je
jmp
adc
xchg
sbb
sbb
out
cli
inc
jb
xchg
cmp
fcoms
mov
dec
notb
and
repnz
addb
pop
jne
out
roll
adc
sub
jge
sub
sbb
cmc
cmp
mov
loopne
pop
dec
pop
in
xchg
fs
sbb
pop
sbb
loope
mov
lock
int
shl
jmp
adc
and
mov
dec
test
imul
add
aad
pop
mov
sub
cmpsb
in
mov
or
sub
outsl
stos
or
imul
js
jo
dec
mov
subb
in
stos
mov
sti
pusha
push
adc
mov
call
cwtl
adc
testl
decl
cmpsl
mov
rcrl
leave
add
sub
in
mov
push
addr16
psrlq
jecxz
fcoms
lcall
nop
and
xchg
jl
loope
or
out
inc
push
cmp
aad
jmp
dec
xchg
jg
mov
jmp
adc
nop
mov
inc
adc
and
jno
fmul
ja
addl
adc
cmc
fs
lock
ret
es
sbb
addr16
xchg
push
fcomip
xchg
mov
cmc
mov
shrl
sahf
orl
mov
add
and
or
ret
insl
xchg
xchg
mov
jo
or
sbb
add
add
mov
enter
push
add
aaa
lcall
adc
dec
adc
add
decl
sbb
sbb
mulb
mov
pop
ss
leave
leave
push
sub
and
mov
mov
adc
dec
jo
icebp
incl
add
gs
ret
add
sub
shll
jecxz
inc
mov
lods
js
insl
fildll
xchg
sbb
cmp
stos
lahf
xor
push
lock
mov
stos
mov
mov
sti
fwait
mov
inc
inc
jle
xchg
push
enter
and
pop
bound
lods
adc
mov
filds
movsl
jmp
fadds
ss
and
add
cmp
lods
je
cmp
int3
adc
scas
repnz
insb
xchg
pop
sbb
sti
sub
ret
fisttps
inc
ret
daa
dec
or
mov
jg
and
ficompl
test
jb
adcb
cld
cmp
sarl
push
testl
or
mov
cld
cmp
jl
jg
pushf
pushf
nop
xor
mov
mov
or
mov
sbb
mov
ja
pop
add
loope
adc
dec
pop
sbb
mov
imul
cld
mov
dec
adcb
cmp
adc
pop
and
pop
add
add
cmpsb
cs
add
adc
pop
sbb
outsl
pop
push
das
cmp
add
xlat
rolb
sbb
add
adc
andb
push
js
test
rolb
pop
arpl
dec
mov
je
pop
adc
jg
mov
xor
cmp
jne
mov
ljmp
push
lret
jno
push
insb
ret
ss
test
in
push
adc
mov
or
popa
pop
xor
inc
in
rcl
pop
mov
pop
cmc
jecxz
pop
push
adc
loop
and
push
pop
ret
adc
dec
and
cli
lods
push
fcmovnbe
fsubrl
outsl
dec
outsl
xchg
aaa
or
jl
add
mov
push
push
mov
cmpsb
cmc
cwtd
rcl
add
jmp
rcrb
test
btr
sbb
sub
mov
fs
mov
pcmpgtd
loope
dec
cmp
lahf
mov
inc
sarl
and
fnstsw
icebp
pop
data16
push
cmp
add
dec
je
pop
inc
pop
mov
test
push
shll
sub
int3
ljmp
stc
inc
icebp
pop
add
das
or
pop
xor
adc
and
cmpsl
or
jl
lock
mov
mov
js
or
sbb
cli
daa
rolb
mov
cmpsl
sub
pop
xor
rol
sbb
test
aas
xchg
mov
inc
or
ljmp
fstp
and
je
aad
pop
gs
ret
dec
test
out
andb
xchg
mov
jle
insb
and
rol
or
jb
mov
jg
mov
fs
sub
dec
fwait
xor
aas
loop
mov
jmp
pop
pop
test
lods
in
cmp
insl
push
rolb
call
and
pop
bound
cmpb
test
lods
xchg
jg
jg
cmpb
fdivrl
add
mov
repz
add
adc
call
idivb
dec
and
out
mov
mov
nop
inc
push
xor
and
cli
adc
lock
mov
push
or
and
mov
cmc
stos
jns
das
fs
popf
ret
repz
add
pop
bsr
ret
xchg
pop
addb
dec
push
fldenv
imul
decl
pop
or
outsb
dec
test
mov
adc
mov
fmuls
sub
or
sub
lods
rclb
cli
sbb
popf
add
mov
data16
push
or
adcb
in
outsb
mov
mov
fcoml
or
ss
xlat
or
cmc
xchg
es
aam
stc
mov
ljmp
inc
clc
sbb
add
add
jg
orb
daa
push
push
cmp
lods
xor
scas
push
adc
jp
push
inc
dec
add
fldl
outsl
cmp
js
jno
mov
mov
dec
nop
and
jecxz
inc
std
xchg
imul
inc
fdivr
outsl
xchg
sbb
push
or
jp
pop
sbb
sub
aas
mov
arpl
les
mov
mov
pop
jg
dec
fmull
mov
push
cltd
loope
mov
in
or
xchg
movsb
popl
clc
sar
pop
std
cld
fmull
fistpll
sahf
sbb
add
push
mov
loopne
in
clc
outsl
jg
ror
loope
adc
pushf
pop
sub
or
cmpsl
mov
stc
inc
pop
or
dec
push
inc
insl
pop
inc
adc
in
cmc
or
adc
out
push
shl
xor
lock
pop
jmp
out
mov
cmc
ljmp
pop
lock
add
lret
js
out
mov
xor
shrb
mov
stos
add
sbb
loopne
add
les
jecxz
sub
cwtl
into
pop
out
clc
inc
pop
mov
or
iret
lcall
test
jb
mov
fildl
cli
xor
ljmp
in
test
loopne
sti
repnz
fmull
cmp
sbb
mov
cld
mov
push
lret
mov
pop
adc
mov
call
mov
imul
js
xor
add
or
xchg
xchg
stos
pushl
adc
ror
insb
cmp
cld
mov
hlt
dec
lea
rcl
inc
hlt
loopne
jecxz
xchg
and
jne
adcb
mov
aaa
jmp
xor
push
inc
lods
xor
xchg
popf
or
mov
pushl
loopne
cmpsl
aas
into
mov
and
lea
cld
roll
or
mov
fistpll
mov
cmp
in
mov
sbb
ja
ficoms
or
push
push
xchg
pop
cmc
mov
mov
push
ret
fcoms
aad
and
dec
cmpsb
lcall
test
call
ret
add
and
or
or
je
push
push
xor
adc
jmp
icebp
pusha
sub
es
push
jns
mov
arpl
cld
push
push
lods
jae
jb
orb
in
fnstsw
popa
adc
push
decl
xchg
pop
and
ljmp
mov
scas
and
xor
jns
xchg
int3
addl
sub
test
subb
mov
adc
sub
test
xor
iret
xchg
in
lods
int
cwtl
xchg
mov
fs
lock
loope
rep
addl
rclb
bound
fcmovbe
inc
ljmp
sub
cs
cwtl
and
in
mov
pusha
orl
or
sub
imul
add
mov
push
cmp
aad
add
pop
mov
outsl
enter
loopne
andb
mov
mov
fs
in
add
sahf
nop
enter
decl
fcoml
jno
add
int3
and
incl
mov
and
push
insb
xor
add
rclb
les
pop
in
scas
mov
loope
rorb
jp
out
mov
fucomi
jl
mov
repz
mov
notrack
mov
jg
or
stos
cmc
push
sub
mov
shll
mov
fdivs
loop
cmp
jl
jbe
test
lcall
push
int
inc
mov
push
dec
push
pop
data16
add
ss
andl
inc
fisttpll
in
out
add
insb
and
adc
ds
les
ret
jbe
out
fcomi
decl
fsts
sbb
in
insl
test
fildl
sbb
test
hlt
test
in
out
xchg
mov
sbb
imul
and
jae
clc
xor
dec
std
or
dec
mov
je
lcall
mov
hlt
outsl
std
jbe
cmc
outsb
jns
adc
fs
sub
pushl
jno
mov
xchg
rcrl
decl
jns
sub
add
and
mov
ljmp
rorl
imul
jbe
xor
mov
mov
jg
push
and
int3
sub
mov
sbbb
jns
and
sbb
pop
test
dec
jmp
movsb
inc
push
sub
dec
sbb
cli
pop
sub
pop
mov
sub
inc
outsl
add
cld
xchg
inc
mov
sti
xor
scas
clc
inc
pusha
pushf
and
hlt
outsb
xorl
sbb
push
inc
shlb
mov
nop
arpl
mov
add
or
push
pop
push
aam
mov
std
inc
stos
and
xor
adc
hlt
outsb
dec
call
cs
or
rolb
sbb
pop
mov
add
xchg
xor
push
add
adc
sbb
test
pop
sbb
adc
cmc
jg
loop
push
aad
jp
mov
xchg
out
scas
cs
movsb
fwait
aaa
lret
popa
pushf
jmp
adc
stos
and
loopne
cwtl
mov
mov
inc
inc
lret
lea
inc
divb
or
ja
call
lcall
cmp
std
out
fs
mul
xchg
ljmp
sub
nop
ret
mov
push
xchg
adc
and
sub
adc
sub
xchg
adcl
leave
shlb
popa
test
lahf
lods
inc
fnsave
fstpt
les
xor
push
sub
adc
ret
jecxz
stos
pop
lea
ret
inc
dec
mov
loop
mov
push
loop
or
ljmp
sbb
cmp
sub
ret
add
jg
xor
adc
scas
cmp
mov
or
inc
pop
cmp
xor
sbb
in
cmp
push
pop
lods
push
pop
mov
popf
iret
lcall
popl
popf
neg
and
jp
rolb
inc
call
cmc
jmp
outsl
ret
add
ljmp
lcall
inc
pop
mov
orl
mov
popa
fldt
mov
mov
push
lds
in
and
jo
mov
mov
mov
xchg
cmp
push
xchg
lds
out
arpl
mov
bnd
sbb
or
lock
shrl
push
sub
int3
test
mov
inc
int3
shrb
jno
dec
sub
shrb
cld
in
cmp
cmp
cwtl
mov
sub
xchg
clc
jbe
adc
ret
cmpsb
inc
push
stc
and
or
cs
scas
fisubl
pop
and
clc
mov
mov
mov
outsb
movsb
cmc
push
es
dec
pop
mov
and
push
lahf
xor
sub
or
ret
add
gs
adc
add
test
incl
ja
mov
shlb
xor
mov
lret
cmp
mov
insb
and
push
xlat
xor
enter
into
xchg
addr16
mov
mov
sub
stc
repz
jl
jno
sub
cmp
hlt
in
add
stc
adc
jae
adc
xor
add
and
jle
cld
aam
movsl
in
das
mov
jecxz
pop
icebp
icebp
push
xchg
aaa
std
add
cli
fisttpl
xor
fnstenv
mov
stos
dec
jae
test
ss
push
clc
sbbl
push
or
aaa
dec
mov
and
pop
roll
or
in
ljmp
std
cmc
js
decb
fs
pop
and
mov
orb
mov
add
pop
push
cld
push
pop
fdivr
xor
push
push
pop
jae
std
incl
shll
mov
aad
sahf
into
sti
pushf
addb
mov
mov
jl
ja
sub
or
fisttps
dec
test
aaa
aad
push
lds
cld
add
pushf
shll
clc
in
int3
inc
test
or
iret
dec
push
xchg
adcb
mov
jg
xchg
cmp
or
dec
push
add
cmp
and
pop
add
push
push
jb
shlb
aam
test
rol
ljmp
mov
ret
push
sti
or
ficoms
add
push
cmpsl
push
jo
mov
imul
add
pop
jo
fs
sub
xchg
fwait
nop
fwait
and
ret
add
jmp
dec
dec
mov
xchg
fmull
or
mov
clc
jmp
lret
adc
xor
dec
pushf
clc
jmp
mov
sarl
mov
mov
ja
or
inc
call
mov
add
loopne
cmp
xor
es
das
sar
mov
add
mov
and
in
fsub
pop
mov
and
inc
adc
xchg
cmc
adc
adc
inc
add
xorl
push
mov
popf
stos
sub
cli
inc
mov
pushf
movsb
ficoms
mov
or
pop
inc
sbb
test
push
adc
hlt
sbb
lods
mov
call
xor
out
add
or
mov
xchg
call
mov
jge
fwait
add
mov
or
scas
add
loop
push
fsubrl
cli
clc
inc
clc
clc
sti
mov
inc
orl
mulb
les
add
out
sub
mov
call
les
pusha
mov
ret
aaa
rclb
push
dec
incb
lcall
or
adc
pushf
inc
aaa
pop
jo
and
call
sar
xchg
sarb
mov
mov
mov
dec
mov
lret
rclb
stos
ret
lods
xchg
adc
call
add
out
lock
addr16
or
xchg
add
add
adcb
cmp
xchg
sub
mov
xchg
rcrb
or
cmpsb
mov
add
testb
push
shrl
lcall
sbb
xor
cmp
ss
or
push
cmp
lock
and
pop
sub
subb
in
pop
inc
es
jne
push
or
fmull
sub
or
push
outsl
outsl
addl
lea
adc
or
dec
inc
in
lea
icebp
adc
rorb
and
xchg
cwtl
jmp
cld
movsl
loopne
sahf
mov
mov
jbe
cld
mov
xor
jge
xchg
icebp
movsl
pop
pushf
sbb
in
xchg
mov
dec
dec
insb
jl
push
pushf
xchg
mov
lcall
jge
mov
cmovl
mov
xor
push
hlt
movsb
add
adc
cmp
scas
mov
arpl
lods
push
fcmovne
add
movsb
lea
lds
xlat
cld
je
cli
ljmp
in
js
fisttpl
and
dec
inc
frstor
enter
mov
movsb
icebp
ja
lds
xor
and
push
inc
and
subl
cmp
adc
out
mov
inc
imul
popa
add
push
and
mov
jmp
shl
dec
pusha
mov
or
pop
xchg
mov
sahf
ret
stos
pop
or
cmp
and
stos
in
scas
lock
push
pop
psadbw
sub
dec
lret
pop
in
cld
icebp
or
sub
lret
mov
movsb
dec
aaa
sub
jne
mov
mov
mov
and
rcll
fstpl
out
mov
clc
inc
adc
adc
cld
fisttps
divb
adc
and
mov
in
xor
dec
lods
mov
adc
cwtl
mov
outsb
jp
dec
dec
inc
nop
cmpsl
jle
jge
shrl
inc
lods
push
popa
cli
sub
xchg
cmp
mov
push
pop
cli
fimuls
push
add
daa
pop
and
dec
xorb
test
aad
repnz
jge
dec
xor
outsb
inc
adcl
mov
cwtl
ret
shl
mov
fwait
pusha
dec
cs
mov
sub
jle
or
xor
dec
sub
sbb
dec
cmp
dec
insl
jae
mov
mov
cld
mov
lods
out
into
dec
pusha
xchg
mov
lret
jo
xchg
in
sub
loopne
cmc
rcr
insb
push
jo
cmp
add
cmp
mov
mov
cwtl
lds
es
and
push
add
add
mov
cld
mov
js
jge
xchg
lcall
mov
in
or
add
lods
or
cmp
adc
adc
inc
or
scas
loope
cmp
jmp
repz
es
xchg
cmp
push
iret
pop
push
aas
lcall
jae
mov
xchg
add
fiadds
or
filds
and
xor
enter
or
and
push
mov
movsl
bound
xchg
mov
and
fmull
inc
xor
jecxz
shrb
adc
mov
xchg
inc
loope
pop
pusha
mov
inc
sub
add
mov
add
dec
and
mov
shlb
jge
call
sbb
movsb
push
loop
sbb
jl
mov
repnz
ror
lock
clc
inc
cmc
sti
decl
lret
push
inc
and
roll
cld
lahf
call
push
ja
adc
loope
push
adc
out
pop
les
inc
mov
fstpt
test
ja
xor
xchg
mov
std
mov
mov
push
mov
orb
xor
adc
jb
repz
add
sub
and
xor
jo
xchg
inc
cmp
fiadds
leave
cli
xchg
rcl
fs
jg
adc
xor
push
adc
mov
dec
push
insl
loope
pop
clc
int
loop
mov
sub
scas
xlat
cmp
xor
mov
xchg
cwtl
repz
and
cmc
add
popf
jp
mov
dec
jg
mov
cmp
and
inc
aaa
outsl
sub
dec
in
insb
inc
ret
aam
sbb
jg
sbb
mov
je
imul
dec
enter
rclb
stos
mov
xor
movl
hlt
add
test
movsl
lods
xor
push
mov
pop
sub
lods
pop
fsubrs
jbe
call
enter
loop
ljmp
mov
lahf
and
shl
ret
cld
fnstenv
pop
sub
and
xorl
fmull
sti
mov
sub
sub
or
mov
xor
outsb
cwtl
sbb
cmc
push
xchg
rorb
sub
or
push
pop
scas
mov
or
inc
bound
jge
mov
jp
in
fcomip
sub
jle
mov
test
adc
lds
sbb
sbb
fistps
clc
mov
or
mov
or
call
and
clc
jle
xor
test
nop
cmp
test
push
mov
pusha
push
push
adc
add
sti
sbb
insl
mov
in
pop
nop
xor
stc
jb
mov
cmp
outsl
subb
cld
cmp
cmc
es
clc
inc
hlt
je
or
mov
sub
push
gs
push
mov
lcall
inc
aas
pop
ret
cmp
xor
shll
fsubr
call
in
pop
insl
mov
pop
fmull
pop
add
xchg
pop
push
push
push
mov
lock
popf
sub
arpl
xorb
fidivrs
loopne
faddl
pushf
and
adc
jmp
add
push
outsl
cli
in
iret
lcall
adc
stos
test
jb
inc
lret
pop
test
lds
adc
in
nop
sbb
ljmp
add
or
ljmp
mov
add
in
bound
out
movsb
and
add
sbb
inc
dec
rclb
and
cmp
movsb
repnz
test
or
data16
cmp
loope
daa
push
dec
test
mov
sub
pop
jmp
js
fstpl
cld
popl
ret
and
cmp
pop
ja
pop
or
int3
xor
cli
call
rclb
xchg
enter
sub
sbb
imul
jecxz
push
popa
cmp
stc
adcl
dec
addr16
mov
sbb
fnstenv
jle
xchg
mov
loope
or
mov
hlt
jae
inc
test
lret
scas
add
or
ret
mov
inc
mov
rcrb
xor
jg
adc
insb
cmp
ja
int3
iret
outsb
clc
jg
jmp
gs
aaa
mov
test
sbb
std
lcall
xor
adc
stc
pop
or
cmp
repnz
das
add
dec
dec
enter
ret
pop
cmc
decl
adc
pushl
roll
sbb
mov
decl
rclb
in
aam
mov
bound
add
call
je
inc
xor
pop
mov
ja
fdivrp
enter
xchg
daa
push
add
dec
insb
and
add
mov
daa
cmp
mov
sbb
or
jle
gs
shlb
push
adc
std
adc
ficoml
sbb
subl
inc
pop
cli
incl
push
xor
push
jmp
xchg
sar
sbb
sub
mov
std
dec
clc
jmp
scas
jmp
prefetch
or
test
sub
scas
ljmp
ds
pusha
rorl
and
mul
mov
jo
sub
cmp
mov
stos
push
xorl
out
mov
hlt
mov
mov
push
test
fsubr
mov
inc
leave
or
xchg
shlb
fcomip
push
add
cld
mov
jno
or
xchg
pop
inc
lret
adc
inc
notb
outsl
mov
or
add
add
mov
mov
mov
xchg
cmp
addr16
cmp
jmp
mov
cmp
mov
into
in
pushf
ljmp
or
out
xchg
xor
and
pushl
jecxz
faddp
xchg
pop
mov
or
pusha
scas
enter
push
enter
xchg
insl
cld
jg
cmpsl
insb
scas
mov
cwtl
dec
xor
adc
push
cmpsl
lock
subb
cltd
jle
pop
cld
inc
int
leave
test
or
rorb
pop
lds
or
add
sbb
sti
mov
test
or
iret
ret
decb
rol
insl
xor
jae
testb
push
xchg
in
iret
pop
cmpl
push
push
mov
cmp
cmp
cltd
adc
dec
pop
jb
data16
popa
mov
xchg
sbb
and
stos
popl
and
push
repnz
jb
xchg
pop
jg
cwtl
add
sub
rolb
sub
addl
adc
xor
test
jmp
and
add
mov
dec
jmp
btc
ljmp
das
sarb
popf
cmpsl
pusha
ljmp
push
les
inc
pop
add
cli
scas
cmpb
adc
adc
or
push
cmp
decl
mov
jae
mov
das
clc
or
mov
add
cmpsl
movsb
popf
mov
sub
jo
jb
nop
inc
pop
add
add
mov
inc
xchg
lcall
mov
sahf
jmp
jg
add
fiaddl
or
cmp
jno
or
nop
loop
test
fs
iret
inc
dec
adc
popa
cmp
push
dec
ficompl
inc
lcall
mov
addr16
push
andl
sub
cld
subb
je
mulb
inc
notb
jl
push
das
and
daa
ficompl
sub
jmp
mov
std
lock
mov
dec
cld
leave
sbb
inc
cmp
iret
lds
shrb
xchg
pop
jle
cmp
nop
xchg
mov
gs
dec
push
rcll
in
lods
adc
inc
xor
lods
ret
inc
cs
movsb
rol
js
xchg
fnstsw
mov
leave
in
imul
fucomp
ret
push
xchg
lcall
adc
movsb
mov
fldenv
mov
jno
daa
cmpps
xchg
leave
add
icebp
imul
adc
sub
insl
cld
aad
pop
pop
mov
inc
jae
and
jle
xchg
adc
adc
inc
mov
jns
push
in
push
xchg
push
lods
jp
aaa
sub
jns
mov
mov
andl
je
out
into
mov
lds
fwait
test
shlb
push
pop
pop
cmp
lcall
fsubrs
sub
insl
mov
imul
fmuls
iret
aam
ss
jl
movsb
int3
movsl
orl
fcompl
dec
cmp
add
jle
lret
xchg
shlb
bound
add
fcoml
cld
cmc
mov
mov
sub
or
pop
sbb
ljmp
dec
push
out
adc
adc
rclb
pop
js
imul
inc
adc
sub
pop
add
cmp
push
enter
xchg
inc
xor
cmc
add
movswl
clc
mov
cmp
dec
rclb
sahf
ljmp
rorb
push
and
dec
push
stos
stos
repnz
rcrb
or
aas
add
push
mov
sbb
in
in
scas
add
push
xchg
adc
push
fcoms
and
or
push
into
pop
mov
ja
dec
lds
outsb
lcall
xor
fldt
dec
ss
inc
test
stos
add
adc
jbe
mov
lock
inc
cmc
jbe
out
sub
mov
fadd
pop
loopne
cmpsl
bswap
mov
inc
inc
xor
sub
xchg
call
jecxz
mov
xchg
out
xorb
hlt
cltd
push
cmp
mov
mov
sbb
mov
or
sahf
out
loopne
aad
push
jl
and
lods
hlt
fmulp
movsl
inc
push
mov
ror
call
lcall
and
leave
xor
mov
cmp
mov
fs
scas
clc
push
inc
rolb
jp
lock
jg
inc
rcr
xorb
xchg
adc
sbb
cli
inc
lret
in
cli
nop
scas
add
push
scas
sub
movsb
loopne
inc
mov
xor
mov
or
jne
sub
into
das
je
cmp
decl
push
pop
push
sbb
cmp
inc
cmp
popf
jb
inc
cmp
mov
int3
clc
push
cli
jb
ja
xchg
xchg
sbb
jle
test
cmpsb
mov
mov
dec
xchg
outsb
test
mov
mov
nop
jbe
or
add
hlt
inc
inc
pop
cmp
outsb
inc
js
cmp
cmpb
inc
sar
mov
and
pop
mov
mov
add
or
sub
int3
push
xchg
xor
ja
out
inc
mov
outsb
push
push
push
pushl
mov
add
add
mov
hlt
lock
int
pusha
repz
arpl
inc
ret
lcall
xor
cmpsl
rcll
ljmp
pop
adc
push
arpl
jb
cmp
push
cwtl
add
push
aad
or
mov
xor
dec
and
sbb
hlt
or
lods
movl
rclb
outsl
add
clc
adc
sub
adc
xor
jmp
loopne
xor
xchg
jb
out
subl
pop
arpl
mov
xchg
lock
push
addl
jo
aaa
fiaddl
sbb
dec
call
pushf
mov
incl
out
push
add
jae
cmp
ret
or
mov
cmpsb
in
aam
jns
add
std
ljmp
add
shrb
add
mov
lahf
cmc
pop
xor
outsl
subl
cmp
pop
xchg
fs
or
sub
add
jle
fsub
push
out
pop
jecxz
sub
mov
pop
cmp
in
mov
test
lds
mov
fcomp
mov
add
ret
pusha
imul
adc
adc
in
out
into
mov
push
or
pop
sbb
scas
lock
push
jo
cli
mov
inc
and
jbe
ljmp
add
jno
je
xor
lahf
sub
mov
ret
sub
push
add
jmp
loope
nop
xchg
inc
and
movsb
scas
sbb
sbb
push
lock
movsb
imul
ret
sbb
mov
andl
addl
mov
mov
incl
pop
pushf
or
pop
or
mov
adc
sbb
subb
nop
jne
mov
mov
or
push
or
jg
push
dec
inc
pop
fdivrp
push
jnp
popf
shl
mov
and
into
test
out
sub
jno
mov
inc
pushf
jae
rolb
repz
or
test
cmp
push
mov
jbe
nop
jmp
scas
lcall
and
iret
cmc
repz
xor
scas
push
adc
insb
sbb
mov
add
push
adc
shlb
popf
mov
push
dec
mov
cld
add
fistpll
call
and
inc
jl
jne
add
pop
cld
jecxz
pop
mov
dec
push
pop
je
insb
shlb
jmp
add
bound
lods
add
mov
push
add
pop
ds
dec
cld
fwait
popa
std
mov
outsl
pusha
push
or
pushf
insl
in
decl
aaa
notb
out
jge
sub
lds
in
addl
pop
jbe
pop
decl
fwait
xor
f2xm1
inc
addb
jmp
xchg
pop
lcall
add
enter
dec
lret
ds
movb
xor
enter
rclb
mov
lahf
clc
lcall
enter
scas
fwait
push
orb
push
add
fidivs
cmp
cmpsb
in
xlat
cmp
pusha
sub
push
ds
aaa
cld
push
mov
pop
cmpsl
add
or
fiaddl
int
in
push
hlt
push
mov
or
icebp
mov
dec
clc
push
pop
and
insl
xor
call
icebp
inc
xor
bound
addr16
cwtl
sarb
les
sbb
push
roll
push
aam
out
xchg
sub
push
fldl
push
into
and
dec
sbb
loope
cmp
test
aad
aam
xchg
add
or
pop
lcall
ljmp
pop
add
add
mov
push
push
fisttps
mov
in
dec
jl
leave
and
cli
cmp
sub
push
repz
ja
sub
push
arpl
fildll
inc
pop
orb
fistl
push
or
cmpsl
mov
push
push
mov
dec
loopne
inc
jg
and
out
lods
dec
adc
xor
decl
cmp
xchg
jp
push
sbb
inc
sbb
fisttpl
push
sarb
ja
push
cmp
loopne
int3
ds
rolb
shlb
pop
insb
aaa
hlt
pop
subl
in
mov
mov
mov
jle
fld
lea
pusha
pop
jg
stos
ret
sbb
lahf
adc
scas
into
arpl
cmpl
enter
sub
in
xor
xchg
push
jb
ds
pushl
or
cmp
sub
mov
or
inc
xor
dec
sbb
and
push
xchg
push
cld
mov
mov
test
sbb
and
fdivr
push
pop
andb
mov
add
push
je
or
and
fisubrl
test
enter
dec
js
sbb
fs
inc
cltd
or
mov
mov
or
cmpsb
leave
pushf
rorl
adc
xchg
xchg
mov
sub
sub
or
fdivl
cmp
mov
pop
fisubrl
add
add
cs
add
cld
outsl
gs
xor
out
pop
ficoms
sub
adc
insb
dec
sub
cmp
fadd
jne
incl
arpl
mov
mov
call
nop
loopne
into
jno
jl
mov
rclb
cld
xchg
mov
adc
inc
imulb
and
mov
dec
test
inc
cmpsl
cwtl
pop
bound
pop
pop
xchg
div
inc
pushf
lahf
xchg
loopne
lcall
pop
lahf
shrb
sub
jmp
mov
lcall
push
jg
fdivl
mov
jb
pop
xchg
push
repnz
dec
adc
lock
jmp
or
loopne
adc
das
icebp
fnstcw
movsl
movsl
jne
movsb
adc
pop
icebp
adc
fnstcw
bnd
mov
popa
and
dec
inc
les
mov
sbb
inc
cli
fwait
ljmp
mov
test
sbb
scas
adc
jno
jb
sub
cltd
push
dec
outsb
iret
mov
es
roll
bound
pusha
mov
add
pop
and
sahf
and
inc
cld
pushf
dec
cmpsl
aaa
enter
insb
sub
mov
xor
mov
dec
call
stc
adcl
or
enter
or
inc
push
mov
gs
inc
or
sahf
jecxz
lea
loopne
sbb
pop
sub
pop
ja
clc
aas
cld
mov
arpl
repnz
loop
or
sahf
fildl
arpl
sbb
enter
int3
mov
push
cs
inc
inc
mov
push
into
jbe
test
inc
jmp
xorb
dec
ss
sbb
jg
incb
dec
or
lret
push
jle
mov
or
xor
push
leave
inc
xchg
clc
mov
jne
pusha
in
cmp
pop
aam
dec
inc
aas
jle
fisubl
lock
negb
pop
inc
mov
xor
add
or
or
add
inc
xor
cmp
cmpsb
xchg
pop
push
xor
sub
mov
inc
int3
imul
sti
push
and
and
les
pusha
pop
and
sub
mov
rclb
dec
test
nop
dec
mov
xchg
add
daa
mov
ret
and
cwtl
cld
rcrl
lahf
add
mov
idiv
das
cmp
fdivrl
xor
mov
cmpl
in
hlt
pop
loop
mov
lds
add
in
cli
inc
out
cmp
clc
push
xor
flds
mov
je
or
xor
adc
sub
cmc
inc
push
rcrl
mov
out
xchg
and
mov
dec
add
cmp
pop
add
dec
enter
xor
std
lcallw
rorb
les
in
mov
ds
outsl
clc
jae
jg
sub
incl
je
or
or
repnz
cmp
call
andb
fnstcw
mov
push
jmp
popl
pusha
push
xchg
sbbb
test
mov
out
and
or
mov
sar
jmp
mov
sti
mov
pop
into
test
daa
bound
jecxz
adc
xchg
xor
xchg
adcb
ficomps
push
jge
xchg
nop
xor
add
lea
jg
cld
push
pop
xchg
movsb
push
xchg
out
mov
jmp
out
push
icebp
lahf
adc
xor
test
cwtl
fsubrl
pop
and
inc
adc
add
add
mov
pop
dec
cs
jecxz
inc
in
push
fiadds
cmpl
call
inc
rcrl
out
ss
aam
push
adc
adc
jb
nop
daa
ljmp
fmuls
inc
rolb
ud0
call
jp
xchg
adc
mov
xchg
inc
in
dec
test
and
push
add
sbb
push
incl
xor
cmp
aad
hlt
fwait
xorb
rolb
cmp
push
jbe
clc
sub
fistpll
xchg
xchg
in
addl
push
ficoms
xor
or
jae
pop
mov
and
mov
push
xor
push
bound
jp
loop
add
orb
ret
je
mov
sbb
mov
js
push
icebp
jg
cwtl
xor
mov
mov
pop
clc
in
sbb
sub
cmp
xchg
fimuls
popa
cmc
test
cmp
jg
mov
adc
mov
shrl
push
sar
or
mov
lret
lock
fcoml
mov
int3
popl
cmpsb
xor
dec
or
in
pop
cld
notb
dec
dec
test
arpl
dec
clc
rorb
sbb
in
adc
lret
sahf
decl
incl
fnstenv
mov
mov
lret
jle
jl
test
out
lahf
push
lret
popf
add
js
lods
call
push
push
call
xorl
dec
mov
pop
jne
cmp
out
pop
in
sbb
adcl
movsb
sbb
mov
ja
int
and
lds
push
jmp
js
mov
mov
aas
hlt
and
pop
or
inc
or
ljmp
xor
fidivs
xchg
push
pop
sbb
decb
or
bound
xchg
sub
cli
pop
add
cld
mov
in
add
pop
adc
cmp
imul
mov
insl
and
fiadds
stos
insl
pop
add
movsb
jae
add
clc
and
dec
cld
incl
dec
or
dec
popf
push
inc
lret
dec
loope
lock
xchg
ret
adcl
or
or
movsb
pop
shll
mov
out
mov
cltd
adc
inc
out
and
cli
mov
pop
cld
mov
lcall
and
hlt
inc
clc
ss
lock
push
sub
cmpsb
add
sub
test
rcr
sub
pop
mov
xor
fsubs
js
dec
inc
in
mov
rol
mov
ret
test
add
and
and
add
push
mov
pop
aam
scas
pop
mov
push
out
ljmp
push
xor
aaa
xorl
push
xor
std
sub
fidivs
fcompl
jb
fcompl
add
sub
dec
xor
mov
jae
idivl
les
jg
lock
stc
xchg
xchg
jb
xor
or
add
mov
xchg
add
ja
lea
inc
loopne
xchg
pop
cmp
incl
stos
adc
loope
subl
pop
push
cmc
sbb
jmp
add
push
dec
fndisi(8087
ja
mov
loope
push
jecxz
decl
cmp
insb
mov
cmp
shlb
push
xchg
or
or
pop
add
stos
loop
repnz
mov
ficoms
jmp
xorb
and
cmpsl
popf
cs
pusha
xor
push
repnz
or
out
sar
ljmp
push
and
inc
lahf
arpl
rclb
inc
push
les
adc
cs
insl
push
inc
xor
sbb
sbb
divb
lods
xchg
mov
pop
add
ds
ds
cmp
pop
xchg
xor
cwtl
jmp
add
xchg
push
mov
or
and
xchg
dec
andb
push
or
jmp
out
les
enter
out
inc
push
dec
dec
adc
pop
imul
xchg
cmpb
cmp
out
fsubrl
jo
fstps
xchg
sbb
mov
pop
add
xchg
push
int
int3
sub
push
loope
imul
das
frstor
cmpsb
dec
loop
outsl
aaa
mov
out
sbbl
loope
mov
add
push
cld
test
xor
cmp
in
fistpll
sub
sbb
jnp
lds
fcoms
jecxz
imul
icebp
out
mov
xor
add
mov
and
outsl
fwait
cmp
sbb
lret
sbb
sbb
into
xor
int
stos
lods
imul
and
add
or
repz
dec
or
lea
mov
js
push
sub
lea
push
mov
aaa
cld
inc
cmc
pop
pop
icebp
fcmovnb
cmp
and
out
pop
dec
pop
ja
or
pop
add
jge
mov
nop
fs
ret
lcall
fcoml
jmp
jge
lret
pop
adc
int
repz
mov
inc
hlt
pop
mov
popa
clc
out
mov
mov
push
jle
mov
mov
shrb
cmpsb
adc
pop
sbb
out
bnd
and
push
add
push
adc
mov
sub
inc
outsl
adc
push
cmp
lahf
int3
push
sub
push
jg
dec
cmp
and
dec
lret
xchg
std
outsl
add
sub
lret
jns
add
cmp
das
push
je
shlb
ret
add
call
shlb
mov
push
movsb
cmp
cmc
mov
jne
nop
addr16
ds
adc
mov
sbbb
mov
mov
jl
cmpsl
out
xchg
add
xchg
testb
dec
push
mov
adc
push
popl
mov
sub
mov
notl
add
imul
movsb
add
xor
roll
and
xchg
inc
adc
push
xor
fisttpl
adc
lret
mov
mov
lahf
hlt
in
std
mov
jbe
mov
gs
adcl
cltd
xchg
cmp
jg
call
inc
push
mov
or
outsb
mov
add
add
sbb
mov
xor
loope
outsb
push
pop
jp
mov
jmp
push
mov
dec
in
aam
and
mov
mov
jg
call
bnd
ret
dec
loopne
ret
add
mov
call
rolb
clc
sub
pop
cld
sti
es
scas
and
daa
int
pop
fidivrs
add
stos
sub
outsl
inc
cmpb
lods
mov
lcall
lret
jp
jno
push
or
and
clc
mov
push
adc
das
mov
jmp
ljmp
or
outsl
dec
add
xchg
xchg
shl
xor
mov
xor
inc
cli
fwait
add
jo
sarb
inc
xor
ljmp
repnz
das
clc
imul
mov
pop
sbb
popa
out
nop
cmp
lds
xchg
orb
mov
inc
negb
mov
call
loop
sub
jle
ficoml
adc
mov
jnp
cmc
xchg
sbb
and
lret
shl
sub
sub
popf
cli
or
and
adc
jg
add
into
push
in
sub
je
cld
movsb
push
jecxz
cld
in
xchg
sbb
hlt
cltd
dec
inc
jmp
add
inc
je
jg
testl
dec
fnsave
pop
test
xchg
pop
mov
fs
sahf
sahf
shll
or
mov
jp
lods
daa
push
sbb
or
cli
or
pop
or
and
sbb
sub
out
clc
addr16
xchg
stos
loop
add
or
mov
jl
dec
dec
mov
dec
mov
sahf
sbb
or
bound
test
dec
rcll
loopne
or
fbld
pop
or
rcll
cld
inc
sbb
das
push
movsb
xchg
and
fnstcw
add
inc
inc
or
enter
outsl
pop
jb
or
orb
out
es
clc
das
inc
andb
out
popa
je
fistl
xor
jne
negb
and
ss
xor
pop
fadd
xchg
popl
sbb
push
jae
lret
add
fistpll
mov
cmp
cwtl
xchg
iret
or
dec
stos
jo
xchg
lock
gs
adc
push
ficoms
ljmp
jb
sbb
push
bndldx
jmp
mov
test
hlt
test
xor
int
je
adc
scas
or
sbb
mov
mov
inc
adc
xchg
movsb
jae
je
pcmpeqb
mov
sbb
jecxz
addr16
push
js
xor
stos
lcall
mov
add
or
out
call
cmp
js
std
cmpsl
ds
aas
add
or
push
xchg
add
jo
dec
incl
inc
hlt
xlat
cmp
mov
ret
hlt
adc
jno
fisttps
add
cmpb
in
shll
ss
jg
icebp
xchg
or
push
mov
xchg
push
push
std
jg
jmp
push
sub
cmpsl
sub
inc
loop
aad
push
pop
test
pop
add
pop
push
loope
dec
pop
lret
dec
cli
repz
fsubs
sahf
fbld
jns
fdivrs
iret
xchg
ja
or
sbb
or
or
fildll
push
xor
fcoms
dec
inc
test
lret
mov
jecxz
pop
rol
cmp
sub
rorb
sarl
pushf
leave
pop
mov
mov
push
std
sar
jl
jecxz
popf
inc
sbb
push
inc
mov
dec
rcrb
inc
jl
inc
mov
pop
lahf
lret
int
jl
add
mov
enter
add
dec
sbb
mov
enter
add
jmp
pop
test
cmp
loopne
es
sahf
into
and
idivl
add
ret
loopne
mov
xor
mov
movsl
dec
xchg
push
in
xor
imul
dec
andb
out
rorb
stos
aam
jbe
daa
int
decl
in
sub
insb
adc
out
loop
sub
and
and
loopne
push
mov
aaa
xchg
dec
fdivrs
movsb
inc
xor
mov
in
or
add
mov
push
les
and
or
add
add
add
pop
test
or
pop
xor
sti
incb
add
dec
and
and
incb
inc
aad
gs
push
mov
mov
loopne
icebp
xchg
mov
movl
lock
adc
mov
adc
or
popa
outsb
std
xchg
sub
inc
xor
js
sub
inc
and
pop
lcall
and
xchg
inc
mov
xchg
icebp
rorl
sbb
fs
mov
xchg
sar
in
rorw
fstl
add
loopne
popa
sbb
loope
mov
xor
add
or
stos
pop
insl
pusha
jne
sbb
out
jnp
push
shll
jge
add
dec
add
mov
cli
jg
mov
subb
sub
fbld
orb
mov
add
add
cli
push
adc
jo
xchg
mov
imul
loop
inc
and
aas
orb
sub
icebp
das
jp
jb
mov
jge
sbb
and
add
ja
out
cwtl
mov
xchg
or
icebp
mov
and
in
in
into
nop
into
test
xchg
inc
xor
enter
push
and
fadd
mov
push
xchg
iret
es
lods
push
push
or
sti
rorb
adc
test
pop
xlat
js
dec
leave
addb
xchg
mov
push
mov
pop
cmp
cmc
add
stc
push
test
mov
pusha
push
push
adc
das
les
int
dec
sbb
pop
testw
orb
xchg
mov
mov
pop
in
xor
add
or
mov
adc
jge
cli
aad
jle
js
and
test
test
cmp
sar
adc
push
ja
mov
cmpsb
nopl
jle
add
scas
mov
or
jae
imulb
adc
or
lret
out
les
call
stc
sub
das
les
subb
ljmp
rcll
push
sti
jb
adc
adc
fnstsw
idiv
pop
mov
add
icebp
mov
sub
stos
loope
js
and
mov
shrl
cs
pop
pusha
pop
push
pop
movsb
lods
cmp
outsb
pushl
add
xchg
ljmp
cwtl
fcmovnu
jp
rcrl
cmpl
inc
push
aad
les
loopne
mov
xor
dec
pop
bound
popa
loopne
inc
sbb
sub
lock
ja
push
into
xor
clc
fsubrs
mov
mov
or
call
aas
imulb
ljmp
mov
pop
and
call
sbbb
das
addl
xor
mov
xchg
das
pop
in
and
or
clc
bound
or
push
mov
scas
mov
xor
shl
mov
or
jg
rolb
ret
sub
std
pusha
pusha
push
adc
lock
andb
and
sbb
dec
or
pop
dec
or
or
ss
shrb
sub
sarl
ret
sub
cmp
push
mov
lahf
or
std
imul
lret
push
jmp
outsb
push
or
stc
mov
push
inc
aam
sbb
adc
and
sqrtps
pop
jge
or
and
and
cs
out
add
les
sbb
out
lods
fisubrl
cld
push
loope
lock
loopne
cmp
mov
movsb
and
cmp
adc
scas
incl
ja
stc
jl
out
mov
sbb
loopne
jbe
mov
out
js
int3
test
shl
sbb
lret
ljmp
sub
jbe
arpl
aaa
add
pop
aad
fisttps
xor
cltd
xchg
mov
xchg
pusha
cmp
cmp
xor
jmp
je
mov
push
xchg
or
or
or
pusha
push
push
pop
subb
jg
loop
mov
mov
add
rcr
mov
add
test
add
or
stos
movsb
decb
dec
push
mov
pop
dec
incl
and
cli
pop
inc
out
cli
or
testl
mov
pop
icebp
xchg
push
xlat
dec
adc
sbb
ss
mov
lock
mov
mov
xchg
sub
add
pop
cmc
ljmp
iret
and
add
xor
aas
sbb
or
xor
cli
pop
jae
pop
icebp
pop
add
mov
insb
call
pop
stos
add
testl
cmp
jno
ds
pusha
cs
wrmsr
jmp
lods
jnp
aas
pop
dec
adc
loopne
pop
repnz
cmc
call
xor
stos
and
sub
sbb
or
lea
ljmp
xchg
les
sarb
andb
mov
xor
repnz
std
int3
cmpsl
faddl
mov
popf
add
movsb
scas
test
stos
fildll
xor
adc
les
add
push
push
mov
mov
pop
ljmp
cltd
dec
lds
mov
push
stc
dec
inc
int3
adc
adc
out
push
mov
dec
test
mov
inc
add
negl
adc
pop
cmp
cs
push
enter
shlb
sbb
shrl
mov
or
addl
or
decl
adc
jns
jo
xchg
dec
xlat
cli
nop
inc
sbb
inc
insb
lcall
ljmp
jbe
lock
sbb
xor
cli
in
or
cmpl
fwait
xchg
sub
pop
xor
mov
cli
pop
movsb
inc
repnz
int
jae
in
jmp
xchg
push
out
test
ljmp
call
inc
jl
adc
ficompl
mov
je
xchg
lock
mov
fadds
outsl
inc
push
hlt
vmovss
adc
fdivrs
fisttpll
fs
adc
fldcw
xchg
sar
inc
inc
test
fs
or
sbb
push
pop
jge
mov
lahf
sbb
push
sbb
xor
in
sbb
das
out
scas
cli
cs
sub
add
repz
adc
adc
pusha
pusha
inc
lea
in
outsb
sub
xchg
add
mov
aam
cmp
jmp
or
add
pop
nop
mov
adc
sbb
pusha
dec
pop
stos
jae
cld
mov
dec
adc
dec
and
loopne
rorb
aad
rcr
inc
pop
mov
cs
psrad
je
mov
ret
push
aad
mov
insb
loope
stos
jle
imul
cmp
sub
adc
dec
out
xorb
cmp
loopne
out
xchg
addb
mov
sbb
test
test
add
ds
sub
inc
dec
mov
pop
cmp
lds
sbb
shlb
adc
ds
cmp
sub
pop
add
ss
in
and
insb
mov
loop
jb
jns
inc
pop
sub
xor
xchg
ja
jnp
flds
jecxz
adc
jge
push
or
and
in
adc
sub
sbb
pushf
lahf
xor
push
incl
jns
movsl
inc
sub
push
cmp
jbe
adc
inc
dec
call
fisubl
push
jecxz
lret
rcrl
out
sbb
dec
dec
and
sti
pushf
clc
mov
mov
fwait
cmpsb
mov
or
out
sub
pop
into
push
mov
dec
or
es
pop
scas
and
xchg
pusha
stos
aaa
adc
fbld
lods
fwait
adc
mov
and
jmp
dec
pop
adc
jo
lret
mov
data16
cmp
sub
fs
shlb
in
out
sbbb
mov
xor
arpl
pop
mov
jno
test
jbe
mov
stos
rcrl
out
pop
mov
sbb
loopne
test
jg
push
es
icebp
outsl
and
jmp
push
repz
push
inc
test
and
adc
fidivrl
je
sbb
jmp
mov
mov
out
push
sbb
or
dec
std
sub
fs
aaa
and
cmp
push
sbb
adc
mov
mov
add
pop
incb
mov
pusha
gs
sbb
jg
mov
pop
jg
xchg
pop
mov
sub
insb
pushf
sbb
ret
andb
inc
jbe
pavgw
add
decb
aam
incl
daa
js
iret
xor
adc
add
mov
push
es
push
mov
fistl
iret
sarb
mov
aas
push
xchg
scas
inc
sar
jmp
jp
scas
jl
jb
adcb
xchg
push
adc
out
pop
les
pop
cmp
dec
mov
pop
or
cld
icebp
add
inc
sub
push
fcompp
push
scas
orb
decl
add
mov
mov
mov
aas
aam
and
inc
dec
xchg
and
call
push
xor
test
lret
repnz
std
sbb
je
dec
or
push
cwtl
sbbb
mov
fwait
sub
pop
sbb
shlb
mov
pop
inc
jecxz
add
adc
jmp
mov
push
hlt
nop
xor
cs
pop
sbbb
cmpsl
cmpsb
jb
mov
inc
das
and
les
pop
movsb
lds
outsb
aas
inc
inc
aam
dec
mov
mov
nop
push
div
jnp
mov
fiadds
pop
fsubrs
adc
adc
mov
cmp
xorb
pushf
cmp
xorb
dec
imul
cld
add
xor
xlat
lock
inc
cmpb
subb
adc
fcomip
ljmp
or
fists
inc
popa
ret
ja
fdivs
les
adc
outsb
or
and
jno
and
loope
add
popa
adc
jns
pop
rolb
test
cmpsb
ror
fidivrs
mov
sarb
cmp
call
faddl
fldcw
dec
inc
xor
stc
push
insl
inc
mov
jg
cld
ljmp
xlat
inc
dec
push
add
fsubs
add
decb
jbe
add
xchg
sub
xor
ljmp
adc
fcomps
dec
fldl
lds
loope
mov
push
lock
sub
adc
mov
into
pusha
adc
or
lds
imul
pop
xor
in
cwtl
mov
icebp
imul
test
in
dec
imul
lcall
jp
xor
sahf
add
pushf
cmpb
mov
movb
insl
xor
push
sbb
cmp
in
fcmovb
mov
clc
jl
pop
xchg
dec
sbb
adcb
pop
fnsave
fs
mov
js
rorb
mov
test
shll
add
fmulp
cld
mov
daa
or
call
mov
pop
push
dec
cli
add
and
add
insl
in
test
mov
shlb
movsb
popa
js
pop
lcall
pop
pop
scas
mov
or
xor
or
dec
inc
pop
sbb
push
outsb
inc
xor
adc
adcb
icebp
inc
dec
data16
ljmp
jmp
dec
sub
inc
sbb
mov
or
outsb
leave
mov
cld
sub
xchg
add
pop
hlt
std
push
sbb
mov
sbb
addl
mov
aad
xchg
add
into
loope
mov
xor
data16
or
fadds
cld
mov
add
imul
sbb
fs
mov
test
fbstp
sub
out
faddp
divb
ljmp
sub
movsl
mov
cwtl
dec
sbb
clc
push
mov
outsl
mov
ljmp
xor
out
add
inc
mov
negb
mov
movsl
mov
push
loop
sub
es
add
mov
mov
mov
daa
jae
add
cmp
add
aam
bound
sbb
push
xchg
adc
push
lods
inc
loopne
pop
inc
push
loop
aad
test
test
push
inc
fmulp
and
or
jg
insb
sbb
mov
in
lcall
push
add
pop
mov
jge
lret
cmp
ss
push
xor
xor
or
imulb
xchg
add
inc
mov
jl
add
or
add
inc
xchg
cmpb
testl
inc
mov
mov
add
cli
mov
roll
or
out
aaa
loope
adc
pop
in
das
pop
mov
mov
jl
jecxz
mov
add
cltd
xor
mov
cmp
inc
jle
jecxz
inc
incl
xchg
and
mov
jmp
jo
mov
ljmp
adc
push
dec
cmp
jp
dec
sarl
inc
sub
mov
cli
jecxz
push
xchg
sub
mov
push
rclb
scas
jns
rolb
stos
bound
nop
mov
incl
xchg
mov
shlb
popf
and
int
cmpsb
test
call
lret
lock
sbb
int
or
lock
out
push
jae
jp
or
add
js
and
pusha
call
xor
cmp
scas
clc
xor
jnp
ja
rol
pop
xchg
sar
sar
test
sub
movsb
pop
pop
movsl
xchg
test
roll
xchg
mov
mov
sar
sbb
cmc
cmp
repnz
jp
outsb
call
xchg
add
mov
aaa
std
call
and
add
or
pop
gs
adcb
pop
test
js
out
adc
push
pop
lock
aaa
mulb
sub
pop
ss
lods
shl
das
inc
or
cmp
add
das
inc
push
int3
pop
and
jmp
add
cli
push
push
mov
ds
insl
mov
imulb
daa
jb
jecxz
arpl
icebp
push
push
cld
jnp
sbb
jmp
add
sahf
jg
inc
or
out
es
es
rcrl
std
daa
dec
mov
mov
mov
pop
js
out
adc
fcomps
ja
dec
dec
sbb
lea
icebp
jp
dec
sub
cmp
stc
dec
push
mov
loop
inc
rep
inc
clc
dec
adc
mov
mov
adc
das
addb
push
jb
data16
and
popf
mov
mov
mov
shrl
ljmp
add
inc
rolb
lock
xor
or
loop
iret
mov
movsb
and
jo
add
ljmp
shrl
std
inc
sbb
dec
aam
loopne
xchg
aam
push
cli
ljmp
and
sbb
and
fs
fiaddl
cmpsb
adcl
push
dec
jp
xorb
mov
test
rcl
cli
sbb
push
jno
sbb
and
pop
or
pop
loopne
hlt
sub
clc
inc
adc
add
pop
mull
xchg
jecxz
pop
push
cmp
mov
bound
insl
jnp
and
aaa
mov
mov
dec
jb
shlb
loopne
imul
cmp
pusha
lods
subb
mov
xchg
pop
mov
arpl
cmp
cmp
mov
adcb
ret
pop
stc
fistpll
adc
push
xchg
add
jg
aaa
lret
fwait
pushf
call
add
mov
add
ds
call
mov
mov
cld
push
mov
out
mov
nop
sub
xor
mov
stos
sbb
mov
repnz
add
cmp
mov
sti
and
ret
or
jge
adc
pop
hlt
aas
pop
and
mov
or
jmp
roll
mov
fistps
jecxz
cmovbe
inc
xor
sbb
cmp
pop
xchg
lret
in
jge
inc
ret
sub
and
sbb
test
add
dec
mov
fildll
dec
inc
stos
inc
mov
dec
add
jl
pop
cmp
or
mov
xchg
jne
sub
dec
adc
es
nop
mov
fsubs
ljmp
mov
or
addr16
test
addr16
decl
push
fsubr
and
push
mov
mov
add
jo
enter
and
xchg
or
dec
sbb
add
mov
jne
jmp
cmp
rclb
mov
out
pop
mov
int
mov
out
shrb
push
insb
stos
jnp
sbb
mov
in
or
lock
jmp
mov
nop
dec
repz
pop
cmc
pop
movsb
mov
repnz
dec
and
jnp
push
adc
ds
fwait
sbb
or
jle
ret
les
movsl
sahf
mov
pop
outsl
adc
dec
adc
adc
adc
fimuls
scas
mov
xor
push
mov
xor
cmp
and
jg
adc
mov
inc
sub
cld
and
sbb
out
mov
incb
inc
add
lds
stos
js
lcall
test
jnp
cltd
xor
sahf
push
jl
dec
cmp
out
sahf
or
cld
mov
in
jecxz
fcompl
pushl
call
lods
jle
mov
sti
sub
clc
roll
push
cli
loopne
mov
ss
test
lock
aas
add
add
push
add
mov
into
mov
incb
mov
clc
aas
and
sub
mov
mov
fstl
add
stos
jb
xchg
sbb
xchg
je
inc
pop
dec
xor
mov
pop
jl
pushf
inc
mov
rcrb
pop
push
out
stos
mov
mov
test
movsb
xchg
out
mov
push
xlat
test
dec
lret
fnstcw
adc
xchg
jge
jle
in
xor
lcall
mov
add
adc
pop
sub
pop
or
sahf
call
dec
cld
adcb
xor
add
les
sbb
dec
mov
repnz
sbb
data16
fistpll
dec
mov
fwait
mov
dec
call
add
movsb
pop
movsb
ljmp
rcrl
test
pop
mov
mov
jg
fisubrl
adc
cwtl
dec
sar
dec
xor
push
sub
insl
mov
jg
test
sbb
sbb
in
lcall
sub
clc
jg
call
shll
jg
push
je
add
mov
dec
pop
rcrl
dec
or
inc
xchg
mov
lock
call
inc
cmp
testl
cmp
inc
sbb
aam
pop
pop
jo
aad
jno
push
cmp
dec
test
pop
xlat
outsb
add
std
add
aaa
xlat
cld
jg
icebp
push
push
rol
test
roll
pop
sub
mov
icebp
add
mov
nop
cmpsl
arpl
jle
cmc
pop
inc
outsl
mov
add
sarb
dec
jbe
hlt
jg
cld
or
lea
and
cmpsb
jg
loope
mov
lods
sbb
mov
mul
outsl
daa
test
call
mov
xchg
xchg
sub
lods
pop
fsubrs
adc
cmp
mov
cld
pushl
or
jle
cmc
add
adc
test
decb
aad
dec
imul
adc
push
push
bound
enter
loop
sub
jb
adc
addb
adc
push
jb
fcomip
and
push
ss
xor
xchg
test
push
out
and
or
jg
xchg
adc
push
pop
jle
sbb
mov
jmp
mov
mov
lea
and
cmp
xchg
pusha
sbb
inc
sbb
pop
arpl
rcll
cmp
orl
clc
movsb
pop
jmp
jno
lock
mov
or
mov
addr16
adc
sbb
cltd
mov
mov
mov
xchg
add
jg
stos
mov
jae
inc
hlt
xchg
dec
and
sbb
mov
clc
xchg
je
inc
adc
sub
xor
mov
pop
sub
sub
adc
pop
xchg
aas
push
sbb
push
cwtl
pushf
sbb
decl
lret
in
ret
push
scas
lods
xchg
jmp
adc
test
pop
imul
inc
mov
jle
mov
loop
shll
psllq
daa
jbe
add
and
jg
sbb
pop
rcrb
dec
sub
sbb
cld
pop
xor
lahf
rolb
or
cwtl
sbb
xorb
mov
jbe
xchg
mov
pop
cmpl
jp
pushf
inc
shll
mov
out
shrb
pop
mov
ret
xor
xorl
mov
enter
push
and
pop
dec
sti
mov
inc
lods
push
inc
pop
xchg
idivb
xchg
sbb
sbb
jg
push
in
sub
fildl
sub
mov
cli
xor
test
adc
push
fadds
dec
mov
cs
and
loope
into
out
daa
aas
push
pop
fs
cs
push
mov
mov
mov
inc
fildll
ret
popf
xor
push
sub
push
mov
arpl
rcr
popa
cld
stos
and
rorb
cmpsl
arpl
mov
into
shlb
push
mov
cld
or
mov
push
scas
add
test
pop
movsl
or
sub
add
add
adcb
adc
dec
xchg
or
inc
repz
jbe
add
imul
hlt
jg
dec
pop
std
mov
test
push
ret
and
cmp
or
adc
shrl
rolb
mov
add
clc
inc
push
pushf
inc
xchg
movsb
cli
fistl
divb
stc
pop
fs
jno
xchg
ret
mov
scas
cmp
push
push
clc
xlat
aas
xor
arpl
lea
rcll
shlb
sbb
cmpb
ret
test
scas
int
lds
xlat
adc
mov
mov
dec
sub
addr16
ret
fadd
push
sub
rcrb
into
cli
arpl
iret
xor
test
add
mov
stos
test
jg
push
rcll
xchg
out
nop
add
dec
test
pop
or
dec
hlt
pushf
or
icebp
imull
lret
test
dec
or
in
scas
ret
push
andl
xor
inc
call
pop
inc
pop
lcall
clc
xor
mov
in
mov
mov
jae
xchg
loope
xor
cmp
popa
push
pop
add
pop
add
lret
adc
shr
shl
call
mov
mov
in
mov
roll
pop
adc
inc
or
imulb
out
ret
shrd
lock
adc
cli
pop
in
mov
pmaxsw
pop
cli
scas
nop
dec
add
test
pop
mov
out
push
mov
add
stos
sbb
repnz
incl
loopne
daa
fdivrl
cmp
dec
ds
sbb
lcall
mov
pop
push
test
lret
dec
insl
lock
jne
mov
lock
mov
mov
xor
arpl
cld
add
dec
add
rorl
ja
xchg
jo
sub
hlt
arpl
add
lcall
jbe
aas
add
addr16
sarb
push
push
into
shrb
sahf
in
nop
test
dec
outsb
aaa
pop
lcall
call
pop
mov
sub
xchg
outsb
adc
and
loop
push
mov
push
dec
jae
cli
movsl
add
add
dec
add
jnp
add
mov
fiadds
mov
sub
and
call
notb
fs
push
sarb
xorl
out
inc
xchg
xchg
inc
out
mov
pop
adc
fiaddl
rorb
ret
pop
fimuls
sub
stos
inc
push
sub
pop
leave
clc
sbb
sbbl
and
or
add
pop
mov
pop
push
mov
pop
fdivs
cmp
mov
jp
montmul
cmpsb
add
andb
jmp
and
insl
hlt
imul
sbb
in
mov
sub
ret
fisubrs
stos
paddusb
sahf
sub
cwtl
sbb
push
pop
fadds
popf
leave
push
aas
fstpt
insl
test
shl
sub
clc
inc
mov
mov
ficompl
push
outsb
push
adc
push
mov
lcall
lret
xchg
rcrb
ss
pop
pop
jae
ja
jb
arpl
inc
cmp
loope
pop
push
aam
aam
push
dec
daa
negb
xor
pop
je
mov
lods
push
inc
pop
rcrl
test
dec
scas
or
out
add
fcoms
lods
enter
sub
cmp
call
mov
roll
inc
sahf
scas
adc
in
push
sar
incl
outsl
lret
cwtl
testb
mov
cmpsb
fists
jecxz
mov
test
int3
insl
adc
scas
jecxz
push
adc
scas
icebp
incl
mov
mov
cmp
pop
jge
loopne
jnp
mov
mov
mov
add
sbb
inc
fsubr
je
bound
movsb
shl
mov
cmpl
test
pop
push
adc
mov
sti
stos
enter
test
sub
subb
xor
scas
push
and
or
shlb
sahf
sbb
pop
jb
out
lcall
sbb
jne
add
push
cmpsb
push
cmp
cmc
scas
mov
lods
push
push
mov
lcall
dec
dec
fistpl
and
icebp
std
pop
xchg
lcall
movsb
mov
into
add
loopne
add
mov
ja
xor
mov
push
and
aaa
mov
std
xor
cli
jae
push
adc
add
shlb
dec
fadd
adc
jmp
mov
sbb
mov
testl
movsb
fs
rcrb
inc
or
add
and
je
xchg
rcrl
decl
mov
sar
movsb
roll
inc
mov
imul
repnz
xor
or
fmulp
js
orb
inc
test
cmp
xor
aaa
divb
loopne
je
dec
or
inc
sub
in
imulb
add
cwtl
and
movsl
das
xchg
ret
xchg
xchg
aam
xor
push
cmc
not
and
in
shl
aad
sarl
sub
cmp
jle
xor
and
inc
mov
inc
imul
mov
add
pop
add
sbbb
mov
scas
cli
sbb
andb
mov
sub
ret
es
xor
mov
pop
cmpsl
ss
mov
fs
js
js
bound
aam
mov
pop
fdivrl
dec
loop
or
and
push
adc
das
sbb
in
lds
aam
mov
in
sbb
loope
dec
mov
es
sbbb
pop
push
mov
inc
push
push
enter
cmp
mov
mov
jle
and
cmp
outsl
dec
paddd
xchg
outsb
mov
adc
mov
and
cmpsl
jbe
inc
or
mov
jnp
xchg
and
jp
in
cwtl
test
and
adc
add
cld
inc
push
or
push
test
cmp
mov
xor
sub
adcb
jl
adc
jo
push
cmp
mov
stos
mov
push
mov
pushf
sbb
mulb
and
loop
pop
ret
arpl
pop
cli
lea
xchg
push
jmp
daa
in
push
xor
jecxz
cmp
iret
push
cmp
pop
sub
ret
sub
dec
add
aaa
les
loope
scas
add
mov
or
aaa
repnz
bound
addr16
je
lret
jbe
pushf
add
or
pushf
xor
lret
or
pop
push
mov
aas
xchg
adc
jg
dec
jg
pusha
mov
popa
arpl
jecxz
addr16
sahf
lds
xor
in
mov
addr16
fdivs
push
inc
sbb
shrl
mov
out
lods
inc
std
jmp
mov
cmp
xchg
dec
insb
xchg
imul
fwait
add
xchg
add
and
and
les
inc
mov
ss
mov
sbb
cld
jmp
mov
cwtl
lret
stos
or
push
inc
andb
inc
cld
fs
cmc
stos
dec
loopne
mov
lret
or
jno
scas
subb
add
lahf
xchg
sub
call
mov
popa
sub
aas
paddsb
and
popf
outsl
subb
mov
jnp
fwait
push
addb
bound
out
xchg
pop
lea
inc
or
and
mov
mov
mov
ret
nop
xor
jns
and
dec
es
and
push
mov
push
ljmp
add
mov
cld
das
xor
lds
jecxz
or
adc
add
lcall
pusha
sub
adc
xchg
dec
inc
push
adc
loope
or
mov
sub
imul
decl
add
movsbl
data16
mov
pusha
loop
test
cli
and
jmp
pushf
xor
cltd
in
stos
imul
mov
cld
pusha
movsl
add
shll
cwtl
pop
adc
mov
test
ret
or
pop
test
and
lret
les
sbb
icebp
pop
inc
xchg
pop
sub
subl
or
mov
add
fs
lea
sti
es
xor
mov
mov
mov
mov
pop
int
test
mov
cmp
jbe
fimull
sbb
cmp
sbb
movb
push
push
test
push
sub
mov
popa
fsub
sbb
repz
or
test
rclb
imul
dec
and
cmc
nop
push
fldl
xor
imul
hlt
lea
mov
cltd
or
repnz
notb
lcall
add
inc
jo
fnstcw
sbb
mov
inc
cltd
repz
xor
or
sbb
adc
mov
xchg
call
lods
adc
lods
ja
mov
test
loope
xchg
aaa
in
adc
out
mov
test
mov
xchg
mov
fcomip
push
testl
cli
dec
imul
xchg
or
lds
add
adcl
dec
sub
or
add
or
pop
popa
xor
mov
jnp
inc
jl
incb
test
popa
in
test
add
add
and
mov
inc
sbb
sbb
ljmp
lods
jg
pop
xchg
test
inc
loopne
sbb
imul
divb
cli
xor
cli
adc
mov
popa
outsb
enter
mov
in
jo
out
sub
ret
adc
nop
rcr
mov
lock
dec
js
ret
mov
mov
push
pop
fcmovu
and
jp
mov
into
pop
and
mov
pushl
and
push
or
push
rolb
or
rolb
outsb
orb
inc
cmp
inc
nop
in
inc
push
lock
clc
lahf
sbb
into
lahf
shlb
dec
push
cli
test
push
cwtl
rcrb
js
fistl
sub
lret
shlb
fmul
mov
jne
cmpb
lret
jmp
mov
hlt
jg
insb
or
jp
aaa
sub
mov
addr16
in
mov
fmuls
ljmp
rclb
mov
sub
mov
fistl
cmp
mov
pop
mov
dec
dec
int
lock
sahf
aas
sub
add
add
repnz
jnp
cmp
add
jp
mov
jmp
scas
ret
pop
fidivrl
lret
out
orl
mov
mov
or
xor
pop
std
xor
test
add
add
pop
jg
in
mov
xor
adc
or
mov
push
pop
adc
fisttpl
lret
mov
cmp
ud0
fmuls
lcall
dec
je
xchg
sbb
push
rorb
scas
fmull
cmp
les
fiadds
clc
pop
sub
adc
mov
call
push
insb
clc
rolb
loopne
cld
pop
outsb
xor
and
lcall
xor
mov
icebp
imulb
jl
pop
mov
inc
cmp
inc
sbbb
xchg
outsb
sahf
movsb
ja
jmp
ret
dec
movsb
stc
jg
adc
or
daa
es
jae
add
adcl
jmp
dec
orb
and
loopne
pushl
inc
jbe
mov
xchg
push
and
scas
inc
enter
sbb
sbb
incl
push
icebp
sbb
inc
push
scas
movsb
ja
shrb
cwtl
xchg
sbb
imul
test
jo
inc
or
pusha
jmp
add
push
ljmp
insl
jmp
into
bound
inc
or
sbb
mov
add
xchg
outsl
xchg
and
shrl
hlt
imul
cld
mov
jbe
mov
jmp
mov
pushl
push
mulb
push
pop
stc
or
xrelease
mov
ljmp
push
sub
sbb
call
es
pop
adc
adc
add
mov
out
stos
and
mov
test
test
mov
xchg
cmp
mov
inc
mov
imul
stos
jle
sub
adc
invd
inc
cmpb
pop
adc
es
adc
cld
xchg
bound
pop
jo
andl
les
out
loopne
push
and
mov
rcl
clc
push
ss
mov
ljmp
lock
sub
in
imul
lret
lcall
xchg
sbb
sarb
aad
mov
sub
mov
inc
into
shlb
sub
hlt
or
mov
mov
mov
jo
ret
mov
lcall
adc
in
inc
and
flds
push
xor
sub
xchg
pushf
xor
or
aaa
xchg
push
xchg
mov
push
lret
repnz
test
cli
outsl
dec
adc
lods
jb
jg
stos
sub
mov
incb
and
aam
push
jo
pop
into
add
mov
lock
sbb
fsubl
push
sub
sbb
dec
loope
ss
pushl
adc
sub
pop
fnstsw
adc
mov
jmp
pop
xchg
clc
outsb
cmpsb
adc
inc
or
shlb
or
xlat
aam
in
loopne
dec
les
pusha
sarb
sbb
rorb
and
js
inc
push
fisubs
jmp
sub
xchg
jns
or
dec
pop
push
ja
mov
jmp
ljmp
cli
pusha
scas
daa
and
orb
xchg
rcll
clc
jno
pop
or
jb
mov
push
jbe
jg
xchg
aam
xchg
adc
add
test
dec
sub
and
mov
xchg
mov
xorb
adc
inc
fwait
jge
push
pusha
lret
stos
or
add
mov
xchg
shrb
clc
mov
or
roll
aaa
rcll
xchg
lods
rolb
daa
jne
insb
dec
push
enter
jp
xor
jae
xor
in
rorb
pushf
lret
jl
push
out
inc
cmp
std
cmpsb
pushl
inc
insl
and
mov
in
dec
and
mov
inc
add
fidivs
aas
and
and
push
cli
cmp
dec
scas
movsl
lods
mov
stos
repz
adc
jns
insl
push
jo
incb
add
and
push
iret
mov
jg
into
pop
xlat
jle
roll
xor
addr16
cmpsb
adc
sub
pop
aas
sbb
jg
lds
incb
xor
mov
ret
sub
sbb
mov
sti
xor
and
adc
inc
loop
fcoms
data16
pop
xor
lock
ss
pop
andb
or
negb
dec
inc
dec
cld
push
adc
repnz
pop
ss
jg
ja
fsub
push
sub
stos
sbb
in
cld
adc
fs
mov
lcall
mov
insb
add
lcall
pop
mov
stos
lods
imulb
sbb
in
dec
lea
cld
dec
into
ljmp
ss
cmp
rol
pop
add
push
insl
lds
outsl
sub
or
stc
daa
inc
mov
push
ljmp
in
scas
fildll
negl
push
std
testl
dec
sbb
hlt
int3
mov
ss
add
adc
push
adc
addb
incl
dec
xor
cwtl
repz
lds
jl
insl
loop
test
mov
stos
mov
mov
fmulp
jmp
int
push
and
dec
xchg
xor
mov
sub
fidivs
stos
es
and
rclb
cli
lea
add
xor
out
add
push
jne
jecxz
scas
shr
aam
addb
lock
push
or
nop
ss
or
addb
sub
or
mov
pushf
mov
push
add
lcall
xor
pop
inc
sbb
sub
ret
and
cmpsb
loop
adc
add
aam
loopne
pop
fcmovb
je
in
pusha
out
mov
adc
lret
mov
add
xchg
orb
add
popa
dec
dec
call
xchg
adc
and
add
push
addl
fildl
or
je
test
ds
xchg
ffree
out
ss
push
jg
pusha
rcrb
outsl
xchg
out
ss
fists
push
add
dec
pop
mov
aaa
inc
out
pop
lock
or
jnp
je
mov
xchg
dec
jno
icebp
lret
cli
lret
cmpsl
push
add
mov
popa
test
xor
arpl
sbb
fiaddl
sub
aam
call
xchg
loop
cmpsl
or
je
sub
clc
nop
shrl
push
sbb
cmp
mov
clc
es
dec
xchg
out
movsl
je
push
and
int3
push
es
dec
push
mov
imul
scas
in
bound
lcall
push
es
les
inc
leave
mov
in
push
push
shrb
push
sarl
adc
pusha
push
push
test
push
adc
ja
mov
jmp
inc
adc
or
push
ljmp
sub
push
insl
push
push
outsl
out
fiadds
xor
dec
enter
mov
shll
hlt
mov
movsb
stc
cmpsb
cs
test
sbb
sbb
stc
ret
pop
add
aas
test
cs
lahf
pop
dec
pop
xor
arpl
andl
jno
pop
or
cmp
sbb
fmuls
cmp
rorb
int3
adc
outsl
inc
test
jmp
cld
call
mov
and
push
inc
out
pusha
and
sbb
fsubrs
or
push
jnp
adc
cmp
adc
je
and
xor
and
fs
sahf
out
test
lods
stos
pop
mov
enter
sbb
jmp
mov
pop
in
mov
jle
mov
dec
sub
mov
lock
mov
or
enter
scas
repnz
add
es
icebp
jg
test
dec
push
sbb
incl
xor
test
jb
cwtl
aas
jmp
addb
or
movsb
sbb
data16
das
inc
push
inc
add
call
jg
lret
mov
scas
dec
icebp
push
cmpsb
aad
add
mov
inc
push
mov
push
mov
and
nop
or
xchg
cwtl
inc
lock
xchg
jmp
sti
mov
pop
push
test
cwtl
cmp
out
adc
sbb
push
sti
test
das
xchg
xchg
dec
and
or
sub
jg
dec
push
fwait
dec
xor
mov
call
mov
lahf
pop
xchg
dec
int3
mov
ljmp
push
xor
jmp
push
xchg
cmp
xchg
push
dec
je
sub
mov
mov
ja
in
adc
mov
sub
mov
push
sbb
push
adc
sbb
adc
in
mov
ret
pop
into
iret
and
out
jl,pt
lock
xor
mov
xorb
jmp
mov
adc
pushf
out
popa
movb
mov
sub
dec
mov
sub
cltd
lret
outsb
dec
and
mov
testb
push
mov
or
incl
adc
push
fs
jns
jp
xchg
adc
dec
std
add
mov
std
loop,pn
insb
out
pop
lcall
pop
aam
lea
mov
dec
adc
xchg
in
jmp
jmp
xchg
sbb
jmp
mov
or
push
cmc
or
add
icebp
pop
out
cmp
jmp
dec
cmpl
add
add
pop
or
xchg
xor
ficoml
add
addr16
dec
shll
push
faddl
pop
push
mov
inc
aad
jg
int
mov
lcall
jne
jp
test
sbb
mov
mov
fwait
loope
push
or
enter
insl
adc
dec
lcall
stos
pop
cmpl
fbld
add
fistps
sub
add
jmp
test
filds
xchg
ds
mov
xchg
pop
hlt
pop
jecxz
mov
mov
cmpsb
mov
ljmp
add
dec
scas
popf
clc
sub
xchg
hlt
mov
daa
jbe
jge
inc
inc
xor
xchg
inc
dec
cld
popf
mov
push
movsb
pop
pop
jle
pop
outsl
sub
dec
cmp
fisubl
cmp
xor
jmp
jg
movb
mov
clc
xor
adc
cmp
cs
cltd
sub
jnp
ret
fistl
test
mov
dec
and
inc
int3
ljmp
ja
out
or
bswap
movl
pop
adc
and
mov
jmp
jb
enter
xchg
int3
daa
sub
arpl
clc
inc
into
inc
lock
decb
hlt
out
les
cmpsb
dec
in
xchg
adc
je
add
stc
inc
push
mov
dec
dec
pop
lret
xchg
pop
dec
loop
fdivrp
dec
adc
mov
mov
mov
std
out
mov
stos
fsubrl
stos
sbb
mov
lods
nop
addl
mov
dec
cmc
rorb
inc
insb
test
outsl
fildll
inc
xor
add
lret
aam
jp
shlb
mov
rcrb
into
mov
mov
xchg
mov
jno
clc
hlt
xor
incl
lcall
cwtl
ljmp
inc
mov
xchg
fisubs
or
sub
adc
mov
incl
push
aad
out
mov
sub
ret
cli
xchg
fs
cmp
xchg
xchg
mov
shrb
mov
xor
and
addr16
mov
cli
test
or
outsl
pop
cli
xchg
and
icebp
scas
push
imul
mov
adc
mov
mov
push
mov
sbb
aam
decl
cwtl
adc
mov
inc
or
cmpb
mov
mov
divl
repnz
xchg
cld
jg
popf
jae
dec
or
jne
jns
mov
or
sbb
loopne
sub
adc
cmp
ss
in
shlb
or
clc
pop
add
push
aad
inc
sub
test
push
or
pop
dec
lea
aas
mov
push
mov
idivl
xor
mov
mov
test
ss
iret
div
cmp
movsb
ljmp
cmp
mov
sbb
es
pop
jl
cmc
push
fs
test
push
ret
adc
mov
pushf
jne
aaa
adc
addb
inc
das
add
movsl
mov
jp
mov
cli
cmp
iret
sub
xchg
jle
dec
inc
mov
fimuls
hlt
inc
inc
pop
aam
cmp
mov
mov
pusha
jmp
jg
lret
jo
sub
icebp
jne
data16
pushf
mov
faddl
mov
mov
imul
mov
sarb
xchg
das
jmp
popl
jge
std
cwtl
pusha
mov
iret
sbb
test
int3
pop
jno
mov
sub
mov
xchg
adc
lds
subb
fcomps
sbb
mov
adc
cmp
lcall
mov
and
daa
in
inc
mov
jmp
popa
in
dec
cmp
fistpll
not
sub
gs
mov
mov
sar
sbb
adc
mov
push
mov
outsl
es
test
sbb
ja
sub
xor
sbb
push
add
push
jb
faddp
inc
xchg
or
cmpb
das
cld
mov
das
xor
jbe
mov
lcall
push
jg
lcall
adc
push
insb
add
add
out
clc
ja
pusha
in
test
ret
jae
in
fdivrl
faddp
xchg
out
add
fnsave
jg
lods
push
mov
mov
or
xchg
jo
mov
mov
shrb
call
inc
xor
sbb
std
ljmp
and
push
stos
jns
fildll
fldt
push
xchg
adc
pop
mov
xor
push
cld
push
pop
movsb
rolb
and
dec
addb
outsl
xor
test
jne
clc
mov
lods
and
add
mov
jge
decl
mov
imul
or
adc
js
arpl
call
inc
pop
movsb
adc
sbb
push
leave
filds
jecxz
sbb
fstps
popa
and
cmc
jmp
add
dec
push
push
or
inc
push
mov
ljmp
daa
xchg
xor
inc
push
cmp
repz
insb
sar
add
or
xchg
cmpl
xchg
jle
lods
imul
shlb
inc
popa
frstor
nop
test
pop
sub
sub
aam
add
add
mov
push
mov
popl
clc
mov
rorb
mov
cmp
add
push
xchg
pop
dec
mov
hlt
add
sbb
jno
add
xchg
in
fisttpll
dec
test
dec
movsl
xchg
test
jp
xor
sbb
xchg
and
push
outsb
fildll
cltd
jb
rclb
push
vcvttpd2dq
enter
cld
adc
ds
js
into
in
js
das
xchg
jo
out
add
mov
mov
mov
jmp
xor
inc
add
loopne
inc
add
aas
mov
data16
jno
and
fwait
add
aaa
cld
jno
mov
pushf
je
adc
ret
out
push
fsubrl
rorb
jbe
out
add
push
add
jg
add
lea
scas
jl
or
out
xchg
les
fisubs
aas
inc
imul
fisubl
lret
loopne
shll
pop
or
gs
inc
jne
insl
fnstcw
dec
inc
lock
mulb
mov
xchg
push
jge
pop
mov
or
out
loop
out
loop
dec
pop
insb
lds
sub
adc
inc
std
inc
ret
insb
or
pop
movsb
or
data16
push
ljmp
or
xchg
adc
out
fwait
int3
jo
insb
add
dec
dec
push
and
jp
sub
loope
jg
fstpt
pop
sbb
fldpi
mov
int
push
push
xlat
jb
or
daa
in
mov
ja
inc
in
movsl
ret
imul
imul
xor
pop
sub
fs
cmp
mov
or
pop
mov
xchg
aaa
insl
pop
inc
rolb
and
dec
mov
orl
icebp
sub
inc
xchg
dec
ret
add
stos
into
inc
mov
nop
and
shlb
xorl
push
dec
fisubs
cmp
out
cmpsb
jbe
ret
inc
cmp
fwait
jl
mov
inc
imul
andl
sub
js
jmp
add
mov
cmp
or
inc
mov
subl
inc
sbb
adc
dec
or
pusha
dec
jg
mov
sbbb
or
xchg
lret
test
sub
or
mov
cmp
xchg
push
cld
divb
dec
or
jp
and
jbe
fidivrs
push
subl
pop
inc
push
mov
mov
and
pop
pop
mov
pop
xchg
mov
idivb
pop
jle
mov
push
xorl
call
and
mov
xor
pop
mov
cltd
sti
jnp
jns
test
and
outsb
or
and
push
sub
pushf
xchg
fildll
dec
pop
and
jbe
fcomps
push
pop
xor
xchg
xor
inc
push
andl
and
loopne
sub
push
rcrl
aaa
mov
and
push
mov
nop
inc
jp
mov
loop
push
inc
lock
jb
imul
mov
and
fiadds
push
and
sbb
or
xor
sbb
mov
andl
and
notl
push
inc
jle
xor
jl
xchg
add
dec
xlat
loop
adc
iret
sbb
sbb
notb
mov
cmpsb
cli
das
pop
inc
adc
lcall
out
pushf
sahf
mov
pusha
test
out
jg
decb
cmp
mov
add
mov
shrb
sbb
or
inc
pop
or
jp
inc
inc
inc
loop
outsb
sub
dec
mov
xchg
xor
repz
mov
inc
test
das
sub
adc
imul
sbb
mov
xchg
sbb
stos
jl
lock
inc
add
dec
push
xor
sbb
push
jbe
xchg
xor
scas
fs
inc
mov
mov
dec
jo
adc
dec
nop
lret
mov
xor
pop
ss
mov
inc
mov
aas
mov
inc
mov
ja
fmull
mov
ja
sbb
mov
pop
xchg
inc
mov
pop
lea
leave
and
sub
hlt
cmp
je
ret
xchg
jge
add
push
fcmovnbe
mov
out
jmp
inc
adc
push
int3
sub
push
inc
pushl
sub
stos
mov
addb
mov
clc
jp
lock
clc
test
xchg
push
imul
sbbl
jb
cmp
pop
stos
gs
popf
shl
loop
xchg
ss
jp
js
sub
into
mov
sbbb
rorl
inc
jle
adc
movsl
cmpsb
jle
inc
lahf
mov
loop
js
add
push
mov
or
leave
mov
cli
adc
xchg
dec
mov
inc
aas
stos
adc
adc
stos
mov
push
jle
icebp
lahf
and
aam
add
push
mov
inc
xor
repnz
addl
pusha
sub
jb
pop
lahf
jbe
sub
jle
dec
fdivrp
push
xchg
sbb
push
sbb
add
in
jo,pt
mov
shll
mov
loop
fmull
push
jb
aam
push
mov
jmp
outsb
sub
push
push
sbb
insb
aad
sbb
icebp
fisubrl
int3
mov
mov
out
andl
xor
lods
xor
cwtl
push
lods
into
add
pop
jecxz
mov
inc
test
sbb
and
and
adc
fisubrs
pop
cmpsb
out
xor
aaa
jmp
cld
popf
mov
dec
pop
ja
pop
add
fsubs
jp
and
pop
cmp
fs
push
or
or
mov
push
fcoms
xchg
jmp
cld
outsl
add
add
cmp
and
dec
cmp
inc
or
push
dec
dec
stos
lock
add
test
jmp
jle
jg
getsec
xchg
bound
sbb
xchg
lods
xchg
cltd
inc
mov
jg
rcll
xchg
mov
in
pop
int
dec
dec
shl
lock
lcall
shrl
lods
xchg
std
inc
stos
cltd
ja
cmpsl
bound
push
fisttpl
mov
adc
mov
push
sahf
mov
adc
dec
or
or
add
lods
push
add
movsb
adc
bnd
sti
fbstp
xchg
mov
mov
test
push
int3
push
loop
fimuls
test
xor
mov
sub
dec
push
push
sbb
clc
mov
pushl
lods
scas
stos
aam
jmp
adc
test
ljmp
scas
jg
dec
mov
cmpsb
jle
sub
test
je
loop
lea
or
call
insb
add
jnp
inc
test
xor
add
adc
xor
cmp
repz
jmp
xchg
cmp
test
adc
fisttpl
in
xchg
imul
jg
mov
dec
mov
pop
sbb
outsb
ret
fisubrs
jg
xchg
or
divb
add
dec
jp
push
push
lods
inc
mov
into
cmp
repnz
ret
mov
cld
jg
mov
and
and
daa
stc
in
lods
jl
or
add
inc
iret
cwtl
rcr
filds
cmp
mov
and
cmp
or
jecxz
adc
fwait
insb
and
mov
pusha
push
jns
pop
pop
movsb
ljmp
mov
mov
fs
mov
popf
out
mov
or
out
xchg
stc
and
lcall
mov
xor
push
rcrl
std
inc
pushf
push
and
xor
inc
std
mov
shrl
lock
inc
enter
add
dec
adc
dec
daa
jmp
enter
inc
fwait
iret
xor
lods
imul
sarb
mov
decb
push
xor
pop
inc
sbb
or
cmp
push
mov
clc
call
int3
lcall
lea
push
fsubrp
add
iret
xor
mov
ret
push
sbb
fdivrs
out
mov
das
and
in
out
clc
mov
push
add
inc
sub
xor
shll
fs
sub
adcb
ret
mov
ja
fs
ljmp
lods
mov
mov
push
enter
ljmp
movsl
mov
movl
dec
nop
lods
dec
ljmp
push
jb
cmp
dec
mov
push
add
add
jg
aad
cmpsb
jl
mov
insl
push
stc
fisubl
and
add
jne
or
mov
mov
inc
dec
sbb
outsl
sarb
loop
mov
xor
scas
adcb
shl
xchg
lock
pop
les
mov
xor
ss
inc
je
subb
jo
mov
mov
pop
inc
imul
test
lds
mov
sar
mov
add
scas
ja
cld
and
sbbl
adc
gs
mov
and
pop
inc
inc
jbe
mov
push
add
dec
lock
jb
stos
mov
incl
adc
imul
sbb
test
inc
test
mov
xchg
xor
lahf
push
leave
test
sbb
dec
mov
cmp
sbb
adcl
dec
gs
in
jl
jne
jg
out
icebp
cmp
repnz
test
pop
scas
lcall
lods
add
popa
xchg
adc
fdivrs
dec
lds
push
jmp
sbb
fs
pop
or
repz
jmp
add
adc
pushl
xchg
insl
subb
sete
jl
inc
lock
push
pusha
repz
sub
cmp
or
ljmp
inc
adc
push
mov
push
jnp
add
mov
ss
cli
decl
sub
jl
cltd
xchg
add
or
add
test
gs
mov
lock
or
sbb
xor
mov
adc
lea
ret
mov
or
xchg
adc
lock
incl
cwtl
push
xchg
in
icebp
pop
xor
mov
sbb
cmp
mov
ss
xor
shlb
imul
test
xor
adc
inc
xlat
ret
xor
inc
cld
rcr
and
mov
call
inc
dec
or
ret
cli
lahf
xchg
ss
sbb
jne
fisubs
lret
push
clc
outsl
mov
or
add
js
xchg
fwait
lea
sbb
out
jns
and
sub
das
push
lock
ret
stos
mov
add
xor
fbld
inc
cmp
sbb
mov
jne
mov
and
xchg
jnp
lods
mov
xor
or
orb
adc
ljmp
sub
and
outsb
sbb
mov
add
scas
push
call
fmuls
cmp
xor
clc
scas
call
das
rcrl
push
add
imul
cli
subb
cmpsb
sub
mov
jo
pop
jecxz
push
in
ja
adc
std
out
lods
shlb
inc
out
fidivs
mov
mov
cltd
and
xor
loopne
add
add
aaa
fsubs
add
incl
mov
sbb
add
lret
xor
inc
and
addr16
movsl
cli
pop
mov
push
mov
outsl
inc
sbb
sbbl
fwait
pushf
inc
sbb
jbe
fisubrl
pop
adc
cmp
and
lds
xchg
cmp
popa
xchg
sub
adc
pop
mov
testb
test
outsb
mov
mov
mov
out
clc
fsub
fdivp
lret
and
jl
mov
jmp
mov
or
imul
or
in
call
dec
or
dec
cld
xchg
pop
add
push
out
and
ficoms
rclb
les
fbstp
pop
jns
mov
sub
dec
jb
jl
into
xor
arpl
gs
adc
subl
pop
dec
cmp
loopne
add
ficoml
add
or
ss
dec
cld
pop
es
pop
mov
leave
insb
ds
fmuls
dec
sub
add
inc
mov
pop
sub
and
bound
mov
decl
dec
ret
push
and
into
ss
aaa
loop
add
dec
sbb
xchg
lcall
push
adc
gs
sbb
loop
add
fidivrl
push
push
or
icebp
aas
loopne
pushf
adc
mov
inc
push
or
jg
push
mov
inc
sub
sbb
stos
xchg
and
call
lods
mov
ljmp
into
xor
clc
push
lahf
cld
sbb
adc
adc
lret
outsl
inc
ljmp
mov
xlat
loop
add
jmp
out
mov
mov
mov
xor
pushf
pop
dec
shr
out
shrl
movsl
out
data16
add
and
test
mov
cmp
jg
movsl
sti
mov
ds
std
inc
adc
filds
mov
mov
push
in
inc
popa
test
fistps
ljmp
hlt
shl
loop
or
sub
hlt
jle
in
movsb
cmpsb
jg
push
mov
push
mov
jmp
in
add
arpl
pop
clc
pop
lea
out
adc
push
les
xor
jle
adc
mov
pop
adc
add
adc
out
clc
dec
xchg
test
cmp
fidivs
xchg
add
cmp
inc
call
shll
lea
into
mov
dec
mov
loop
jg
das
clc
loop
mov
into
or
xor
mov
clc
out
xor
enter
inc
jno
sbb
inc
ret
mov
cld
jg
mov
add
sahf
test
sub
mov
or
jg
movsl
mov
outsl
add
mov
sub
pusha
stc
push
orb
inc
loope
sub
mov
cs
mov
in
nop
in
rol
fdivrs
push
xchg
scas
fdivrs
ds
scas
sub
test
inc
jo
add
lds
xchg
mov
adc
xor
or
xchg
jne
jl
cli
mov
xor
xchg
imul
cmc
int3
sub
loopne
stos
cmc
aad
test
or
mov
or
fs
inc
fisttps
mov
imul
rolb
inc
sub
and
sbb
xor
push
sbb
shlb
mov
add
jl
mov
std
repnz
or
and
enter
xchg
and
sbb
lock
push
in
inc
add
or
ds
adc
push
out
pop
dec
jae
jp
clc
filds
pusha
and
inc
and
das
mov
cmp
imul
inc
cli
jbe
xor
out
mov
cli
or
push
ljmp
lock
pusha
xor
hlt
add
mov
stos
pushf
fs
inc
cmp
scas
cmpsb
pop
rolb
dec
inc
mov
lcall
sbbb
pushf
adc
ret
xlat
sub
scas
add
lcall
mov
neg
jbe
pop
pop
mov
shll
jbe
je
movd
lret
mov
push
ss
mov
aaa
jmp
xor
push
dec
fs
mov
fildl
mov
and
lds
rorb
incl
and
mov
add
mov
ljmp
xchg
cmpsb
jl
decl
dec
lock
mov
xor
and
push
dec
mov
cmp
scas
js
sbb
aam
ret
cmp
loopne
or
jmp
lret
mov
sbb
xor
mov
dec
cmp
adc
lods
lock
insb
adc
jp
lahf
add
fdivl
js
dec
adc
push
mov
sub
jl
add
mov
orb
pusha
repz
mov
and
outsl
rclb
ss
pop
mov
jmp
add
xchg
fsubr
das
adc
insb
or
ficoml
add
inc
stc
fdivl
xchg
adc
cmp
sbb
jp
cmp
mov
aaa
fsubrl
outsl
scas
cs
pusha
shlb
jmp
fcomip
sbb
and
fisttps
pop
mov
cli
mov
test
jae
jp
dec
dec
cmc
into
pop
add
mov
and
test
popa
in
mov
sub
pusha
add
nop
xor
fwait
jg
fisttpll
xlat
cmovge
fs
dec
movsb
pushf
xchg
pop
inc
shrl
clc
lcall
cli
mov
mov
push
ss
dec
int
inc
add
inc
fdivr
cli
mov
loope
js
push
or
ds
sbbl
sbb
xchg
outsb
fcom
repnz
jg
xchg
into
add
movsl
out
push
loopne
mov
out
and
sbb
push
test
outsl
stos
sahf
aad
sub
inc
clc
adc
data16
popa
add
ljmp
or
jg
stc
fldl
popa
mov
filds
push
cmp
jbe,pt
sti
or
pop
mov
in
mov
mov
jmp
xchg
and
and
loope
loope
push
lea
inc
loop
das
cwtl
xchg
cmp
jno
fstp
add
xchg
out
es
aaa
lods
cli
lret
nop
lcall
sqrtps
orb
aad
ret
sub
mov
jmp
aaa
sbbl
xchg
jp
add
out
adc
dec
loopne
adc
pop
xor
stc
sbb
xor
movsb
aas
adc
inc
mov
pop
add
gs
dec
js
sub
mov
cwtl
jecxz
std
inc
daa
jno
ror
test
int3
jle
mov
sbb
push
push
test
es
pop
aas
xchg
mov
pop
add
fstp
sub
lods
prefetcht0
faddl
add
inc
cld
inc
das
xor
mov
ljmp
hlt
das
and
mov
test
xlat
mov
js
enter
pop
in
add
cmp
scas
and
dec
or
ja
cli
arpl
dec
pop
dec
lret
ficompl
inc
fsubrp
jb
pop
daa
fisubrs
test
sbb
movsb
sbb
iret
and
pushl
adc
sub
xchg
pop
test
sbb
inc
lods
adc
xor
xor
push
rcrb
out
xor
xchg
minps
and
mov
sbb
outsl
inc
aaa
ret
outsl
push
inc
sbb
out
out
fadds
test
ret
cmp
ds
clc
jg
pop
cmc
ret
or
and
sbbb
in
lcall
adc
sub
in
mov
sub
pop
inc
lods
incl
into
int3
add
mov
lds
dec
sbb
cmpsb
pop
mov
clc
mov
in
fdivs
inc
into
inc
add
imul
adc
cs
pop
std
insb
insb
test
adc
test
adc
or
lds
incl
test
jo
cmp
es
add
lock
fsubs
mov
xchg
xor
enter
call
mov
inc
add
add
in
mov
fnstsw
mov
int
add
call
and
sub
jae
leave
cwtl
dec
or
sti
add
mov
cli
cmpsl
or
sbb
cmp
fdiv
add
pusha
push
xchg
cli
popf
jp
mov
mov
sub
jb
ret
push
sbb
jle
mov
sbb
mov
cld
dec
mov
jg
das
or
test
pop
and
jb
roll
sub
leave
xor
xchg
test
pushf
cmp
inc
in
clc
lock
cmpsb
or
add
outsb
xchg
lock
sub
jecxz
xor
jnp
dec
lock
cltd
jmp
add
inc
outsb
cmpsb
pop
les
mov
xor
mov
orb
push
sbb
dec
or
clc
jmp
pop
mov
and
mov
dec
pop
aad
inc
loop
adc
incl
mov
push
repnz
and
add
cmc
mov
insb
fisubrs
jb
ss
out
xchg
mov
push
add
jo
loop
test
jge
leave
sbb
xor
adc
stos
pop
js
push
mov
mov
fmull
arpl
sbb
dec
mov
jne
or
inc
sub
data16
mov
mov
decl
sbb
push
jnp
scas
cmpl
adc
push
ss
cmp
test
popa
ret
ret
scas
in
jecxz
decl
jl
mov
inc
lods
inc
adc
cmpb
mov
or
stos
dec
jmp
rorl
cltd
cwtl
jle
pop
ja
and
out
lret
mov
rcl
test
les
adc
xor
mov
mov
hlt
jmp
mov
inc
mov
orl
inc
aad
lea
fcmove
mov
roll
mov
pop
inc
or
test
sbb
xchg
sub
xchg
out
ss
dec
xchg
test
sub
pop
insl
or
out
insl
sahf
sar
daa
sbbl
scas
sub
push
lods
int3
sub
fidivl
rorb
mov
push
loop
pusha
pop
sbb
adc
adc
scas
inc
add
ds
incl
loopne
movsl
into
push
sub
fistpl
pop
xor
cld
and
std
add
lds
push
or
sbb
xor
sub
pop
pusha
sbb
add
cli
fiadds
adc
or
add
decl
arpl
mov
lods
test
mov
jle
or
adc
bound
mov
sbb
dec
xchg
add
outsb
dec
leave
fcmovne
dec
and
sbb
rorb
cli
fsub
cmp
adc
jmp
xchg
mov
enter
mov
or
in
or
xadd
stos
cmpb
jmp
rolb
aam
and
fimull
adc
incl
mov
fidivl
inc
in
rcrb
outsb
movsb
jp
idivb
push
or
test
pusha
jno
arpl
ljmp
lock
push
test
fcomip
sbb
lods
push
xorl
push
jo
dec
dec
in
mov
fwait
push
xchg
lds
rcll
pop
imul
std
adcl
imul
mov
or
push
incl
adc
pop
or
inc
test
or
xor
sar
decl
add
nop
loope
icebp
cmpsl
pop
add
inc
adc
imul
add
mov
je
push
decl
mov
push
mov
test
adc
mov
inc
movsl
mov
mov
jecxz
or
add
xor
mov
aam
in
pop
lds
mov
push
enter
mov
scas
in
xchg
cli
fwait
pop
mov
mov
mov
jg
dec
fdivr
adc
cmp
sbb
pushl
adcl
fwait
sar
or
push
push
mov
sbb
xchg
aas
add
adc
inc
push
add
inc
xorl
add
sti
xchg
mov
lods
or
sub
mov
jecxz
aad
sahf
insb
pop
incl
and
loopne
mov
xchg
cli
ja
xchg
inc
and
mov
dec
push
cmpb
rolb
dec
lea
jle
or
cmpsb
mov
incl
ja
xor
push
cmpsb
rsqrtps
inc
dec
fstps
jbe
shrb
pop
shrb
subb
bnd
and
cli
xor
stc
push
add
push
andl
push
ljmp
sbb
hlt
push
cmp
xor
inc
mov
lods
scas
mov
testl
xor
or
in
lock
js
movsb
push
stos
add
lock
imul
mov
les
mov
and
mov
jmp
mov
push
fdivp
jns
add
call
add
test
pop
mov
push
mov
fs
cmpsl
adc
movsl
movsb
cmp
scas
pop
cmp
lret
dec
pusha
rcl
cld
insl
cli
aam
sub
mov
aaa
pop
movsl
out
mov
and
nop
jmp
add
pop
mov
or
fisttps
stos
repz
or
cwtl
mov
lret
mov
decl
jo
inc
fs
push
or
popf
fsubrs
test
pop
xchg
sub
mov
fstpt
in
mov
add
push
pop
push
cmp
sahf
pop
mov
push
test
or
out
fdivp
fisttpl
lret
aam
jne
dec
pop
mov
call
stos
add
lock
lcall
je
inc
xor
mov
stc
add
xor
outsb
leave
push
adc
mov
cmp
testb
out
push
and
adc
std
xor
pop
out
cmp
loope
ljmp
mov
mov
call
cld
sbb
out
ljmp
push
inc
add
cli
xchg
xor
ja
lret
push
sub
push
dec
mov
in
push
shlb
aad
add
aaa
add
dec
pop
mov
jmp
push
xchg
mull
div
dec
cmc
or
mov
repnz
jnp
pushf
fidivrl
sbb
or
jg
lock
xchg
mov
cmc
aas
aam
mov
js
mov
cmp
out
adc
adc
inc
dec
and
ds
rorb
filds
repz
xchg
call
movsb
mov
jle
mov
es
mov
sbb
rolb
pushf
jae
addr16
mov
push
mov
push
js
add
mov
enter
adc
mov
js
mov
bound
aad
clc
mov
imul
leave
xor
add
push
lahf
push
pushf
fcompl
xchg
sub
xchg
add
jp
es
out
xor
sub
call
out
sbb
dec
lret
sbb
sbb
popw
loopne
xchg
mov
push
cld
lds
sub
jle
sbb
mov
mov
cmpsb
jg
outsl
push
adc
decl
pushf
sub
pop
scas
inc
inc
add
or
mov
clc
int3
ret
add
xor
or
mov
inc
test
sbb
inc
jl
mov
sub
stos
cmp
sarb
push
sbb
nop
xchg
mov
ret
push
push
out
and
pop
ja
or
or
cmc
pop
rclb
data16
xchg
push
loopne
xchg
inc
loope
sbb
push
xchg
icebp
lret
lods
cmp
mov
jno
push
cmc
fmul
mov
cmc
fwait
imul
jl
ss
sub
repz
sub
or
xor
bound
inc
add
inc
test
jl
xchg
int
xchg
push
ret
ror
mov
es
sub
xchg
incb
adc
inc
cli
test
dec
clc
jg
lcall
loopne
add
pop
xor
daa
add
rcll
popa
enter
jl
xor
mov
clc
test
or
xor
xor
sub
pop
jg
out
stc
es
lret
dec
out
mov
jmp
xchg
or
jl
xchg
aam
es
jecxz
cmpsl
mov
pop
in
adc
outsb
pop
push
add
jecxz
scas
pop
bndstx
loopne
nop
out
popw
push
clc
fldenv
sahf
fucomi
xor
loopne
cmpsl
add
push
incl
pop
jns
inc
test
xor
addb
mov
jle
inc
cld
xchg
sbb
mov
pushf
ret
jl
out
sub
push
cld
fsts
mov
les
pop
aam
loopne
jno
imul
lods
and
lock
mov
mov
dec
cld
je
adc
sub
add
jb
mov
ds
je
test
les
loope
jne
dec
pop
adcb
js
leave
les
packsswb
shrb
sbb
cmp
adc
jp
jns
and
mov
fs
test
inc
adc
incl
cmp
xor
sbb
add
pop
xor
cmpsb
pop
or
cwtl
test
rcrb
enter
pop
arpl
or
bound
in
fwait
or
fs
or
sbb
push
loopne
movsl
lea
jo
cmp
xchg
idivl
mov
call
ja
and
test
fwait
adc
mov
xchg
call
mov
mov
dec
seta
sbb
ret
and
mov
or
jl
xchg
adc
adc
adc
ds
rcrl
or
add
pop
push
idiv
stos
rolb
nop
addl
or
add
add
decl
push
pop
movsl
mov
aaa
popa
fisubl
fsubrs
jge
jmp
add
movsb
adc
cmpb
adc
xchg
js
add
inc
jl
fwait
cltd
push
cli
mov
xchg
faddl
mov
daa
sub
adc
call
pushf
sub
lcall
jp
fadds
push
stc
ret
adc
push
ljmp
fidivrl
movsb
pusha
ret
xchg
xchg
cmp
pop
dec
add
pop
push
pop
jne
mov
fdivl
mov
pop
sbb
fildll
clc
call
jg
jp
push
jne
add
and
out
stos
cmpl
add
iret
pop
or
filds
pusha
jmp
push
je
xchg
addr16
lock
add
and
xchg
add
add
aad
lock
subl
and
dec
clc
mov
or
add
cmc
gs
xchg
or
and
dec
hlt
add
cmc
sbbl
ljmp
jmp
cmpsl
addr16
or
lcall
add
ljmp
push
add
pop
js
mov
and
xchg
pop
pop
pop
push
in
les
cmp
clc
loope
inc
mov
lods
lret
add
out
lods
cmp
xchg
test
outsl
mov
or
or
cmp
xchg
pop
sub
push
xor
bound
call
vsqrtss
mov
cltd
ror
roll
jmp
pop
push
cwtl
testl
dec
pushf
jo
test
stos
fcomip
clc
ljmp
pop
jmp
push
or
cmp
sahf
and
add
pop
cmc
cwtl
mov
add
leave
sub
xchg
clc
std
pushf
outsl
mov
xor
stos
test
adc
aas
repz
push
xor
icebp
xor
dec
mov
jo
insb
mov
aaa
pop
jle
jp
mov
mov
call
dec
pop
test
cmp
xchg
sti
mov
ret
js
dec
in
jmp
push
adc
icebp
push
push
add
orb
jbe
push
popl
sub
pushl
cmp
add
push
xor
sub
outsb
xchg
ss
dec
aam
xchg
jne
mov
lret
dec
iret
lods
lea
mov
adc
pop
div
aad
xchg
sub
adc
lods
fcmovnu
mov
loopne
pop
fcompl
lret
sar
out
xor
mov
stos
jo
push
ret
scas
loop
add
fprem
cmpsb
ss
js
push
cmc
push
fsubs
into
adc
int3
add
ret
xchg
rol
adc
test
mov
subl
mov
mov
cmc
daa
xchg
xor
int
or
cmp
xchg
in
or
mov
mov
add
iret
push
pop
sub
mov
lcall
lea
sbb
push
clc
push
addl
and
pusha
inc
xchg
shrl
cmp
int3
add
push
xchg
cmp
xchg
addl
sub
fsts
loop
jecxz
jl
or
pop
xchg
fcomp
sti
inc
pop
in
pushf
lds
xchg
dec
std
sub
cmpsb
pop
lock
test
cld
jg
bound
add
sbb
hlt
decl
and
loop
add
add
pop
cld
popl
pop
pop
xor
iret
add
mov
mov
cmp
sbb
ss
lea
andb
add
mov
shl
pop
jle
adc
aas
pop
xor
dec
sbb
movsb
sub
inc
xchg
or
pop
fs
rorb
xchg
scas
cmp
push
add
jge
out
dec
mov
js
stos
popa
ljmp
mov
mov
mov
pop
push
dec
lods
inc
sub
pop
xchg
fiaddl
adc
pop
rcrb
fwait
dec
rcr
push
adc
mov
in
mov
cmp
push
jg
shrl
scas
cmp
mov
dec
sbb
pusha
sbb
adc
push
rol
pop
push
adc
mov
pop
pop
std
sti
fwait
loope
pop
or
insb
cmp
mov
or
adc
and
mov
sub
movsb
ss
ret
and
mov
and
outsl
inc
or
and
cmp
ficomps
sbb
loop
into
dec
decb
xchg
pop
inc
add
xchg
xor
lret
xor
in
clc
or
jo
and
inc
pop
add
stos
ds
clc
call
and
cmp
loope
icebp
jno
mov
imul
in
mov
or
pop
nop
cld
incl
jns
jo
shll
or
dec
lcall
mov
aaa
mov
nop
lahf
rolb
sahf
call
xorb
dec
and
lods
or
mov
add
cmp
xor
and
or
stos
ljmp
fprem
jns
ret
ret
rcrb
cmp
sahf
data16
xchg
out
xchg
test
pop
out
bound
jg
push
xchg
addb
pop
sub
mov
push
sbb
inc
jno
inc
lahf
into
scas
xor
and
mov
stos
or
xchg
movsb
xchg
dec
add
test
cld
jg
test
mov
pop
in
push
fabs
sbb
mov
push
inc
mov
inc
inc
adc
push
mov
lahf
sbb
std
jg
push
rorb
data16
mov
push
pop
test
cwtl
push
fstl
mov
or
cmp
add
lahf
mov
push
sbb
add
mov
loop
pop
jne
or
push
jnp
push
sbb
adc
push
add
push
aam
xor
jmp
test
insb
shrb
out
lret
mov
pop
cmpsb
xlat
scas
filds
xchg
lds
ret
scas
ror
sub
push
push
lea
push
mov
dec
insl
and
test
cld
sbb
xor
and
and
lcall
push
sbb
pop
sar
xchg
push
pop
es
cmp
jnp
pusha
mov
inc
enter
ds
mov
add
cltd
inc
pusha
popa
mov
mov
pop
adc
pushf
out
icebp
xchg
out
fistps
sub
lock
das
movsl
fsubrs
mov
adc
test
daa
arpl
mov
add
push
ret
jmp
adc
inc
lret
pop
lods
aam
inc
mov
pop
xchg
jbe
add
adc
hlt
sbb
push
idiv
test
shlb
insl
loopne
in
mov
add
pushf
and
mov
lea
ds
inc
cmp
mov
shl
outsl
mov
lock
sub
or
aad
aam
lock
stos
add
xor
inc
mov
in
dec
fcomip
ljmp
pop
cmpl
nop
addps
sbb
dec
push
mov
pop
cmp
sub
lods
pop
test
ret
shrl
xor
mov
xchg
jmp
inc
bound
incl
mulb
fstpl
cmpb
mov
dec
mov
lods
xchg
jo
mov
rolb
push
or
mov
xchg
in
jo
adc
xchg
lea
cmpsb
add
lds
push
sub
mov
and
or
pop
jl
leave
imul
sub
mov
mov
outsl
push
fwait
xchg
clc
mov
dec
sbb
dec
and
outsb
out
lock
xchg
xchg
hlt
sub
fs
push
xlat
ret
das
mov
push
jo
cmpsb
push
rcl
mov
sub
and
ds
mulb
mov
sub
fcoml
mov
sub
sub
shrb
add
cmpsb
pop
and
jb
push
push
sub
aad
dec
cltd
sti
pop
push
ljmp
sbb
shl
pushf
xorl
repz
mov
push
pop
or
push
and
dec
dec
pop
icebp
sub
lods
rorb
fsubr
in
clc
push
mov
aad
pop
sbb
ficompl
pusha
insb
mov
sub
gs
sarb
or
push
fstl
test
sar
sarb
push
and
nop
aas
cld
inc
fwait
mov
dec
insb
popa
jle
ljmp
clc
inc
ljmp
and
xchg
mov
ret
xchg
or
adc
imul
lcall
scas
mov
add
stos
into
in
jle
push
enter
ficompl
movsl
mov
daa
mov
cli
dec
add
movsb
fwait
or
add
cld
call
add
mov
test
cmp
lock
adc
orb
pop
xor
loop
inc
movsl
xor
adc
sbb
faddl
loop
pop
pop
push
test
filds
lcall
mov
inc
push
push
imulb
cmp
hlt
lcall
pop
andb
mov
mov
mov
cmpb
mov
xchg
xor
out
dec
std
mov
cld
mov
and
inc
int3
test
ljmp
and
repz
test
pop
clc
jmp
cmc
mov
inc
lcall
cmp
or
ss
lea
pop
inc
cmpsl
lods
mov
in
add
sub
mov
mov
sbb
push
adc
mov
inc
sbb
cs
and
jg
pop
icebp
or
or
ss
pop
inc
pusha
dec
mov
xor
mov
mov
nop
pop
adc
pop
inc
testl
fisttpll
jne
lcall
jge
and
and
iret
mov
cmpsl
data16
sbb
cmpsl
nop
in
adc
aam
test
movsl
jecxz
mov
pop
add
insl
dec
mov
sbbb
cmp
test
cld
ja
clc
addr16
dec
ds
je
addr16
inc
or
call
inc
call
pop
sarl
and
mov
nop
dec
movsb
jnp
pop
xor
aas
repz
sbb
mov
cmc
dec
and
adc
das
sbb
mov
inc
incl
in
dec
scas
sub
dec
add
cltd
pop
inc
adc
int
dec
mov
daa
int3
dec
lcall
jle
sbb
jecxz
mov
ret
test
sbb
or
inc
arpl
pop
cmp
mov
filds
or
mov
dec
mov
ja
mov
cld
imul
adc
das
cmpb
jle
sub
call
mov
sbb
and
or
push
mov
push
inc
jg
add
mov
or
filds
test
jecxz
inc
mov
inc
rcr
mov
and
cmp
cs
or
push
push
mov
and
add
and
inc
sahf
adc
incl
jl
divb
mov
imul
popa
adc
in
das
cmp
in
push
add
adc
sub
jg
jo
jecxz
sbb
mov
inc
iret
sub
cmp
inc
jmp
cmp
aas
pop
aad
dec
aaa
loop
add
loop
adc
jg
decl
inc
stc
push
enter
push
hlt
sahf
nop
orl
sbb
jae
adc
mov
cld
or
aam
jg
dec
lcall
nop
inc
inc
outsb
scas
xor
add
daa
lcall
adc
ja
cli
cli
cmpsb
xor
cmp
adc
jae
and
or
sub
or
inc
insl
jmp
sub
arpl
jo
bound
dec
data16
mov
pop
jnp
xchg
mov
rorl
adc
inc
mov
or
xor
sti
sub
pop
dec
inc
movsb
cmp
loope
cmp
push
fs
mov
data16
jmp
sbb
lock
push
imul
sbb
sub
mov
ljmp
mov
cmp
xchg
loopne
pop
mov
iret
pushf
popa
mov
aam
jl
scas
cmp
pusha
xor
dec
fdivrs
sbb
ret
mov
cmp
and
xchg
inc
xor
pop
push
inc
cmp
or
ret
pop
andl
mov
loop
inc
fcmovb
cmp
outsb
add
fiadds
aam
pop
out
daa
push
fimull
mov
and
pop
xor
sbb
add
lock
call
ljmp
scas
inc
add
mov
int
aas
mov
cltd
mov
mov
sahf
xchg
sbb
push
and
leave
xchg
mov
and
adc
mov
cli
sub
leave
mov
movsl
insl
adc
data16
lock
out
or
inc
mov
aas
dec
xchg
inc
test
pushl
push
xor
movsb
ret
int3
imul
sub
mov
add
call
push
push
cmp
aad
in
xchg
push
les
and
ds
xchg
nop
fnstcw
cmp
decl
pop
divb
rcr
scas
dec
int
sub
leave
lcall
fstpl
cld
push
ret
out
movsb
and
inc
loopne
push
mov
dec
outsl
movsb
lock
ljmp
in
lea
les
test
inc
inc
add
xchg
sarl
add
cmp
or
push
adc
xor
xor
es
cltd
fsubrl
insb
loope
icebp
xor
add
decl
jne
lds
iret
aam
loope
call
in
cmp
lods
aaa
std
and
or
and
and
add
call
cwtl
or
jbe
pop
movsl
cmpsl
cmc
loopne
cltd
bound
shrb
mov
ret
cwtl
ret
shl
cmp
std
jg
lcall
or
in
xchg
pushf
or
inc
ret
mov
mov
push
popa
xor
mov
ja
popf
test
cmp
fs
nop
scas
adc
repnz
xor
es
pusha
fldcw
fsubrl
insb
mov
mov
mov
repz
mov
shll
inc
xchg
lea
aam
hlt
adc
out
and
scas
sub
and
int3
ret
inc
in
cmp
jg
clc
leave
cmp
loop
push
adc
lock
std
stos
sub
sbbb
repnz
pop
pusha
dec
les
imul
mov
in
sar
jne
int
and
sbb
lahf
mov
dec
loope
cmp
push
jae
cmp
jno
and
adc
add
pop
add
sarb
pusha
mov
add
and
test
mov
cmp
fldcw
jbe
or
sub
pop
lcall
js
inc
xchg
push
jmp
arpl
and
dec
or
stos
sub
pushl
xchg
inc
jg
es
sarl
lods
add
and
jmp
std
roll
push
dec
les
cs
jg
inc
push
insb
pop
add
ljmp
lcall
jne
push
mov
jnp
jbe
outsl
push
dec
int3
add
fadd
jecxz
inc
lds
call
loop
into
push
loopne
ss
xchg
je
xorb
adc
or
push
cmp
and
mov
sbb
or
imul
test
dec
mov
push
loopne
mov
or
push
orl
pop
addb
jae
pop
mov
outsb
mov
add
inc
sbb
repz
lds
dec
icebp
loopne
cmp
adc
in
aad
or
dec
ds
xor
push
popf
mov
enter
wrmsr
add
orb
cmp
insb
mov
lods
adc
pop
lods
mov
add
xor
push
cld
and
pxor
addl
and
lea
loope
and
vphaddudq
insb
je
push
push
push
sub
jl
adcb
cmc
movsb
ret
std
clc
push
roll
pop
push
add
sbb
outsl
dec
or
mov
or
insb
call
testl
mov
push
fs
xchg
adc
roll
mov
aaa
mov
aad
sub
dec
mov
dec
shll
imul
ret
push
jmp
mov
mov
aaa
jne
mov
cmp
pop
pop
inc
mov
mov
mov
and
rol
dec
push
leave
hlt
mov
clc
jnp
or
sbb
repz
stos
daa
frstor
add
int3
push
cltd
outsb
cmpsl
mov
sub
dec
js
fucomp
adc
incl
test
push
jb
dec
inc
dec
test
push
jg
push
and
cld
shrb
test
pop
shlb
sbb
imul
xchg
pop
aam
push
inc
dec
in
cltd
mov
incl
jecxz
call
lods
mov
jge
shlb
movsb
incl
jo,pt
std
xor
mov
sub
ret
mov
or
shlb
pushf
scas
mov
test
xor
or
enter
scas
xadd
cmp
movsl
mov
cmp
stos
adc
dec
test
addb
pop
dec
jecxz
adc
loope
stos
les
dec
test
xor
addr16
pusha
inc
jecxz
ss
into
xor
xor
add
adc
insl
imul
dec
add
insl
cmc
fisttps
ret
push
mov
push
sub
or
loope
shlb
add
sbb
stc
jg
dec
daa
or
push
rcrb
mov
cmpl
add
or
mov
pop
cmp
jl
daa
push
adc
xchg
add
pusha
jg
mov
inc
aam
sub
cli
aaa
mov
int
cld
jp
arpl
test
mov
adc
adc
fisttpll
shl
xor
sbb
lret
adc
xchg
ret
stos
mov
xchg
sbb
insb
push
mov
cld
jg
rolb
insl
xor
cmp
setb
or
cwtl
repz
push
incb
es
adc
and
inc
mov
push
push
das
mov
cmp
dec
call
mov
xchg
pop
jbe
jae
fisubl
cmp
push
dec
cld
ret
jae
adc
xor
add
dec
xor
int
fnsave
imul
pop
xchg
sbb
inc
adc
mov
cli
lcall
mov
push
or
adc
shld
lock
mov
inc
cli
dec
mov
mov
sti
inc
inc
mov
push
std
pop
push
iret
cs
xlat
add
push
xor
je
test
xchg
dec
mov
sub
xor
sub
cmp
sub
fs
jl
aas
clc
in
mov
cmp
nop
in
sbb
ljmp
or
dec
mov
mov
clc
inc
repnz
test
or
into
xlat
repnz
arpl
aas
and
sarl
lods
popa
mov
rcl
push
pop
dec
and
adc
mov
jns
xchg
jmp
repnz
into
and
call
jg
mov
shl
cmp
sub
cli
je
pop
cmpsb
fisubl
hlt
fwait
ret
or
jge
test
out
notb
mov
mov
dec
cs
lcall
mov
sub
push
add
jnp
sbb
pushl
mov
rep
lods
push
je
movsl
rclb
inc
fdivp
push
or
lcall
xchg
sbb
lock
xchg
pop
sub
jle
pop
test
push
push
sbb
pusha
test
lods
lods
pop
add
lret
inc
std
pop
inc
mov
and
pop
mov
and
shl
cmpsl
push
or
inc
or
iret
xchg
cli
xlat
jae
jb
test
add
cmp
mov
push
mov
test
dec
dec
push
sar
mov
rorb
das
ss
push
lods
and
ja
aaa
outsb
fisttpll
xor
push
fcomps
popa
dec
sbb
std
inc
daa
lock
mov
aaa
adc
mov
mov
data16
adc
enter
push
lret
clc
adcb
sbb
clc
mov
adc
push
fildl
lods
cmp
fstpl
arpl
pop
decl
mov
scas
lds
test
sub
std
push
or
js
pushf
clc
mov
pop
push
decb
add
push
dec
mov
sarw
test
leave
fs
adc
lcall
pop
and
cmpsl
xorb
test
cs
hlt
cmp
add
inc
loopne
call
ljmp
dec
incl
and
pop
adc
aaa
ljmp
cli
sub
add
or
out
sti
sub
xor
mov
fists
mov
sahf
push
call
icebp
loopne
inc
test
movsb
jmp
leave
sahf
data16
xor
or
add
adc
shlb
xor
push
or
push
add
xchg
sub
push
loope
dec
cli
icebp
fisubs
dec
imul
or
call
mov
mov
in
cltd
push
or
loop
or
mov
inc
inc
adc
or
mov
inc
push
adc
and
repnz
lret
pop
and
or
pop
push
inc
clc
dec
pop
add
fidivl
pop
mov
jne
pop
fwait
adc
loop
mov
out
xchg
enter
mov
into
lret
push
jmp
mov
xor
dec
out
push
xlat
decl
sbb
sbb
sarb
mov
xchg
adc
dec
cli
push
int
xor
xchg
loopne
fldenv
pop
hlt
jg
push
fcompl
mov
push
roll
push
and
mov
lock
cmp
enter
pushf
mov
push
pop
decl
push
pop
cmp
in
aam
test
add
adc
jo
popa
mull
test
xor
dec
shr
xor
insb
xchg
test
mov
loope
push
daa
popa
mov
clc
mov
inc
xchg
cmp
fsubs
rorb
inc
ljmp
mov
push
lods
add
adc
push
pop
ss
jecxz
test
enter
jno
add
addb
call
int
jge
loop
add
mov
and
js
xchg
cwtl
add
sbb
or
es
sarl
or
filds
subl
add
in
xchg
jg
rcll
inc
sub
dec
aas
fcoms
cwtl
clc
add
loopne
jo
sbb
push
in
clc
movsb
inc
mov
stc
imulb
inc
push
jle
or
insb
push
repz
dec
mov
and
insb
mul
in
ret
inc
hlt
and
sbb
hlt
mov
repz
xor
and
andb
out
xor
add
rolb
lret
add
rcrb
call
mov
mov
outsb
jecxz
inc
cmp
call
ss
aad
stc
cmpsb
mov
or
xchg
inc
imul
mov
and
mov
dec
rcrb
cmp
stos
das
dec
jl
or
sub
adc
dec
push
cmc
les
add
xchg
pop
cmp
and
pop
add
aad
clc
loop,pn
cmpsb
or
popa
push
mov
jae
ljmp
fsubl
pop
jno
pop
scas
or
jl
or
add
inc
mov
push
xchg
clc
sub
or
inc
movsl
push
push
in
dec
mov
jbe
sahf
lret
jmp
sarl
jg
arpl
add
jmp
aad
stos
mov
inc
mov
clc
xor
jmp
xlat
add
adc
lcall
pop
pop
mov
andb
aas
fucomip
ret
mov
das
movsb
int3
imul
ja
sub
adc
add
xchg
out
xor
sbb
orb
mov
sbb
inc
repnz
cld
aas
fwait
pop
bound
ds
sub
rcrl
loop
add
fdivp
ljmp
push
sub
jbe
mov
or
inc
fists
jecxz
pop
and
sub
xor
cmp
or
mov
and
jmp
clc
dec
mov
add
xor
push
aam
sbb
or
call
and
mov
push
andl
mov
sarb
push
out
mov
loope
rcl
mov
inc
pop
sub
ljmp
push
mov
add
lcall
sbb
es
out
out
inc
or
arpl
shrl
lock
rcrb
dec
mov
subb
jno
fildl
lods
outsl
cmpsl
or
movsb
jmp
das
cli
inc
or
and
mov
cmc
aad
mov
popa
sub
mov
loopne
fbld
and
cwtl
mov
xor
outsl
inc
loop
and
in
sbb
shr
xor
and
xchg
addr16
fisubrs
push
insl
nop
insb
clc
cmp
push
idiv
inc
fsts
sub
add
sarb
rcrl
xor
ret
ret
je
jne
enter
clc
adc
pushf
cmpb
dec
shlb
push
xchg
mov
int3
roll
hlt
lcall
jnp
mov
xchg
dec
push
mov
cmp
arpl
loopne
mov
stos
hlt
fadds
cli
mov
lods
idivb
add
test
mov
popa
iret
hlt
aaa
lods
adc
lret
inc
cmc
dec
lods
add
outsl
cmc
adc
add
lahf
xorb
out
jae
xor
mov
and
leave
out
mov
mov
test
addr16
inc
or
pop
pop
or
pop
popa
cmpsl
inc
xchg
push
add
xchg
outsb
jmp
fadds
or
fcoms
shrb
sbb
cld
pop
shlb
sub
mov
aaa
xchg
repnz
mov
adc
arpl
jne
jo
push
jp
sti
adc
push
sbb
or
or
loopne
scas
push
pop
js
cmpsl
jo
fs
adc
ljmp
cltd
push
dec
fisubrl
pop
mov
fisttpll
fisubrl
stos
mov
jb
push
add
adc
push
cmpsl
stc
imul
and
loopne
adc
lds
mov
inc
adc
adc
or
jbe
stos
lcall
sub
sub
or
lret
sub
add
or
fisubs
jmp
add
ret
pusha
add
lcall
add
adc
sbb
ljmp
in
fnstsw
jmp
mov
mov
aaa
and
cmc
lods
or
adc
mov
mov
fmul
add
sbb
sti
ja
inc
call
jbe
mov
sarl
fdivs
out
ror
jg
mov
mov
cld
dec
and
sbb
lcall
mov
das
clc
lcall
ret
pusha
test
add
insb
adc
xchg
jne
cltd
jp
mov
call
shl
fsubrl
dec
or
fcom
cmp
or
js
ss
decl
sub
pushf
pushf
xor
aam
or
lods
faddl
mov
sar
xchg
jmp
cmp
add
andb
shlb
inc
add
out
jge
aam
ljmp
mov
insb
clc
sbb
shll
ret
sbb
xchg
mov
add
mov
mov
xchg
inc
jbe
mov
ret
loopne
lmsw
sub
ret
lcall
cmpsb
and
mov
xchg
cmp
ss
movsl
pushf
aad
stos
lock
clc
imul
add
pop
inc
sbb
push
add
fcoml
lods
sub
cli
mov
imul
cld
test
jecxz
push
cwtl
ljmp
clc
push
add
mov
ljmp
pushf
dec
mov
push
lret
js
inc
data16
clc
mov
dec
adc
addb
mov
sub
outsl
push
mov
xor
push
in
mov
into
inc
cmp
lock
xchg
cmp
jo
xor
incl
pop
add
data16
scas
and
out
cmp
or
cld
decl
mov
inc
mov
or
aaa
mov
push
scas
cmp
out
push
rclb
cld
movsl
adc
mov
dec
inc
cwtl
xchg
filds
or
daa
sub
aaa
mov
pushf
push
or
clc
fildll
cs
push
lea
inc
aas
inc
or
pop
lock
add
arpl
ss
jo
dec
lahf
mov
sahf
test
mov
mov
mov
decb
and
and
add
shl
call
mov
add
and
sbb
shl
xlat
xor
add
sarb
mov
xor
push
cmpsb
lcall
ds
je
and
and
scas
dec
add
sub
push
pop
cmp
add
or
xchg
in
adc
sbbl
push
mov
add
dec
add
mov
dec
mov
cli
pop
popa
repnz
xor
ss
pop
fistps
aaa
inc
daa
jmp
xchg
roll
movsb
lcall
lret
fiaddl
fucomip
mov
inc
sarl
pop
dec
daa
cmp
stc
sbb
pop
add
or
stc
xchg
or
int3
in
jo
outsl
rolb
scas
test
xchg
inc
sbb
mov
addl
mov
sub
sub
pop
xchg
pushl
and
inc
mov
and
stos
or
int
movsl
lea
adc
adc
sub
in
push
inc
int3
adc
das
inc
mov
inc
lret
sub
icebp
lock
adc
daa
inc
sub
lcall
sbb
pushf
repz
movhps
pop
and
cmp
insl
or
xlat
mov
pusha
cmp
and
popa
mov
and
sarl
push
int3
push
sbbb
sbb
popa
into
stos
rorb
vhaddps
cmp
mov
int3
and
sub
int3
and
fsubrl
fsubrl
sbb
ljmp
cmp
push
push
dec
popl
cmpsl
lock
pushf
or
mov
sub
push
jg
mov
add
inc
dec
or
sbbl
stos
ret
xchg
xor
and
adc
jg
pop
pop
mov
or
into
cs
int3
aad
push
sub
jmp
cmp
daa
add
loopne
repnz
mov
test
adc
loope,pn
stos
xchg
aam
sub
adc
ds
inc
dec
clc
pop
daa
push
rcrl
mov
or
outsb
ret
fsubrs
inc
cmpsb
shrb
mov
or
outsb
loopne
xor
aam
hlt
xchg
xchg
out
rclb
push
out
scas
or
idiv
imul
jg
cmp
adc
sbb
leave
pusha
adc
cmpb
nop
or
ljmp
push
mov
sbb
lahf
add
cmp
inc
testb
add
fbstp
cmc
adc
cmpsb
sub
faddl
ja
push
push
push
adc
loop
dec
cld
bound
sbb
push
outsb
in
fldt
in
icebp
out
and
leave
sar
sbb
lods
pop
cwtl
sbb
movsb
inc
or
mov
mov
and
and
gs
mov
jbe
add
ficomps
xchg
pop
sub
movsb
xchg
mov
mov
test
mov
fnstenv
push
add
lcall
cmp
lds
and
popf
std
dec
inc
iret
cmp
pop
insl
movb
pushf
lock
call
mov
mov
lods
push
dec
cli
mov
mov
outsl
push
and
scas
adcb
add
nop
lock
fdiv
popa
insb
jmp
cmp
mov
pop
cmp
mov
jecxz
pop
iret
aam
mov
addl
sub
push
sbb
daa
das
cmpb
addr16
outsl
jg
push
rcrb
in
pop
scas
loopne
mov
cld
and
mov
sti
adc
data16
pushf
pop
pop
xor
outsl
jno
outsb
jle
negb
outsl
jmp
sub
xchg
call
push
and
aas
ret
pushf
or
inc
scas
jg
mov
xchg
addr16
xor
es
fwait
push
dec
mov
and
pop
push
sbb
fistpll
dec
adc
ss
mov
cld
pop
in
cmp
bound
pushf
cmpsb
fdiv
sarb
out
sub
pop
call
cmp
hlt
sbb
rorb
push
clc
add
unpcklps
xchg
inc
xchg
jmp
incl
mov
inc
inc
loopne
decl
daa
rol
mov
mov
ljmp
sub
cmp
pusha
xlat
mov
and
jp
out
mov
outsb
adc
cmpsl
movsb
sbb
es
mov
fwait
sbb
stos
test
loopne
outsb
bound
cmp
push
imul
gs
mov
pop
in
xor
mov
xor
ljmp
xor
cmp
cmp
mov
ljmp
icebp
int
int3
jl
data16
int3
xor
hlt
clc
fistpll
ja
adc
inc
rolb
pop
dec
mov
adc
sub
mull
mov
imul
loopne
lock
cld
and
jl
mov
sbb
adc
inc
subl
adc
mov
push
fld
push
mov
sbbl
in
push
rorb
shl
fdivl
adc
subl
sbb
add
repnz
lahf
les
je
cmp
das
hlt
fisttps
mov
data16
or
cld
push
jno
and
pop
std
xchg
aas
and
test
xchg
aam
prefetchwt1
out
push
add
lcall
imul
inc
scas
mov
decl
and
out
mov
or
pop
inc
cmp
sub
aaa
int
enter
scas
jle
add
int
ds
push
in
push
and
in
hlt
mov
lahf
dec
inc
or
inc
inc
sub
addl
loope
ret
insb
jl
and
lods
inc
ror
fildll
shlb
clc
push
dec
aas
mov
frstor
jo
push
xor
clc
cs
adc
fadds
ret
push
xchg
xchg
addr16
jnp
decb
fwait
adc
rorl
jge
incl
xor
cmp
sub
lcall
mov
cmp
mov
int3
div
adc
pop
test
or
in
subl
add
movsl
cmp
js
mov
pop
mov
and
dec
scas
sarb
pop
cmc
sub
mov
add
rorl
push
xchg
sbb
aaa
int3
jo
incl
add
sub
hlt
les
jecxz
bnd
stc
loope
jl
jae
sub
add
insb
sbb
lcall
cmpsb
mov
das
mov
cwtl
inc
add
shlb
clc
inc
inc
pop
test
adc
and
mov
pop
xor
sbb
xchg
sbb
xor
pusha
xchg
mov
call
mov
or
clc
aas
adc
sub
adc
clc
mov
dec
adc
sub
mov
mov
adc
rcrb
and
loop
loopne
add
xchg
data16
jg
add
loopne
push
mov
xlat
mov
jmp
mov
xchg
js
adc
cmc
mov
sbb
aas
fimuls
inc
in
jle
xor
jg
lcall
add
dec
mov
addr16
lds
add
xchg
clc
mov
xor
sbb
push
add
add
fcomi
fistps
stos
push
andl
lcall
mov
mov
dec
or
push
mov
cs
and
pop
int
stos
or
nop
icebp
mov
cmpsl
hlt
jg
and
add
inc
outsb
jne
inc
xchg
inc
ja
fildll
shll
inc
xchg
ds
push
pop
jge
lods
xchg
push
loope
sub
jns
scas
aam
lea
fiaddl
std
mov
das
push
mov
mov
outsl
cmpsl
xor
rcr
loopne
insl
aam
inc
pop
mov
cvtpi2ps
xor
and
insb
mov
add
sub
mov
subb
ljmp
push
pop
clc
bound
outsb
jno
inc
and
jns
add
sub
ss
mov
or
sub
inc
inc
lret
xchg
out
mov
outsl
sbb
dec
rolb
shlb
test
mov
or
adc
push
loope
sbbl
mov
ljmp
std
call
add
xlat
dec
and
jecxz
or
jno
xchg
fnstcw
inc
insl
dec
and
pop
jg
lods
lcall
add
xor
fsubr
je
mov
xchg
shl
sub
pop
popa
cmp
push
std
lcall
cmpl
loope
mov
decb
sbb
adc
mov
testb
mov
ss
inc
fwait
jbe
xor
rorb
mov
ss
into
sub
mov
adc
mov
icebp
jge
dec
jp
sbb
and
push
dec
lret
mov
jecxz
inc
pop
out
dec
sbb
cmp
pop
inc
lret
in
xchg
orb
scas
pop
std
sbb
popa
lock
mov
ret
shrb
lahf
inc
movsb
nopl
xchg
adcb
out
lds
mov
sbb
addb
pop
scas
and
fcomp
and
orb
bound
decl
push
xchg
jle
add
movsl
adc
aad
mov
decl
mov
mull
inc
inc
ret
xchg
adc
mov
add
pop
adc
push
or
loopne
pop
iret
aam
pop
xchg
xor
movsl
arpl
int
aas
or
pushf
pop
into
jbe
and
cmp
adc
loop
add
add
std
ret
add
jmp
imul
outsb
repnz
inc
fisubs
pusha
inc
orl
inc
mov
cld
ja
and
and
mov
mov
call
add
das
sbb
adc
xor
loopne
mov
cmp
cld
in
mov
xchg
out
or
addr16
jg
sbb
cwtl
cltd
inc
sar
lcall
and
incb
sbb
cwtl
pop
outsb
mov
fadd
add
xlat
xchg
ljmp
outsb
mov
icebp
sub
imul
jmp
sub
push
xor
add
push
addr16
mov
mov
fwait
pop
xchg
clc
dec
fs
je
sbb
dec
mov
shlb
jns
sti
addl
icebp
pop
std
xchg
pusha
cmpsl
dec
imull
mov
loop
insb
ret
cli
mov
mov
negl
adc
push
mov
dec
lock
inc
mov
xchg
in
idivb
push
std
mov
sub
lods
insb
ss
sbb
decl
out
stos
or
xor
pop
mov
dec
push
mov
jle
inc
jle
dec
add
nop
movsb
cli
xlat
xchg
push
std
push
mov
decl
cmp
lods
out
aas
xlat
jb
mov
pop
sub
or
sbb
js
cwtl
and
stos
lods
filds
int
or
ret
mov
dec
inc
xor
mov
push
mov
cs
mov
add
sahf
in
mov
jmp
sahf
popf
mov
add
cltd
push
call
js
sbb
aad
loope
add
xlat
push
mov
push
lods
scas
mov
cld
jp
xor
inc
jo
sub
dec
and
pop
icebp
out
xor
cmpsl
in
clc
add
in
jg
inc
rol
inc
dec
inc
push
pusha
jecxz
nop
xor
decl
sub
inc
js
clc
adc
mov
mov
xchg
movsl
add
ljmp
test
fs
sbb
push
xlat
stc
pop
stc
dec
stos
adc
mov
sbb
stos
jmp
cmp
roll
or
mov
xlat
call
movsl
hlt
bound
push
sbb
ljmp
ds
dec
fists
or
pop
push
pop
add
filds
pop
out
mov
pop
or
mov
adc
stos
dec
ret
daa
cmp
aam
sub
je
sub
inc
cld
dec
lock
repnz
inc
add
loopne
push
mov
clc
ja
adc
add
cmpsb
or
in
xchg
mov
add
clc
fisubrl
mov
movsb
xchg
add
in
lea
out
lret
and
add
lock
xchg
shll
inc
rcrb
jae
cmpsl
dec
movsl
test
in
adc
loop
sbb
adc
mov
cmpl
mov
mov
ds
das
sub
stos
add
lret
cmpsl
or
es
xchg
nop
xchg
jl
in
adc
rol
popf
jg
sub
loope
push
inc
jg
mov
imul
xchg
dec
add
insl
test
in
xorb
push
or
add
nop
sub
mov
and
lods
and
sbb
xlat
ror
adc
icebp
cli
inc
mov
push
mov
add
xchg
test
ret
cld
mov
mov
dec
push
in
mov
push
and
add
pop
mov
iret
inc
imul
and
ljmp
andl
jb
sub
xchg
sub
lret
aaa
std
js
cwtl
xor
xchg
insl
inc
lahf
scas
cld
sub
fdiv
mov
push
loopne
iret
mov
je
aaa
addb
mov
xchg
adc
dec
popa
aas
xchg
add
in
push
inc
fdivrl
mov
jge
dec
push
leave
cmp
push
bound
pop
push
call
sbb
cmp
cwtl
call
mov
cmp
in
idivb
orb
sbb
xchg
push
mov
fcom
jg
test
dec
push
xor
sbb
call
fidivl
push
adc
add
fists
aaa
test
adc
sahf
jbe
xchg
cld
mov
pop
ja
in
aad
pop
xchg
mov
xchg
fstl
add
pushl
movsb
loopne
je
adc
lods
push
add
mov
icebp
aam
or
push
jecxz
addr16
inc
lea
pop
cmp
insb
std
sub
movsl
imul
cli
fildl
in
ficoml
ret
pop
cmp
pusha
loopne
xchg
imul
adc
ja
push
and
inc
shll
mov
call
add
mov
sbb
lcall
pop
or
cli
js
mull
and
inc
xchg
rcrl
fcomip
lods
inc
fisubs
push
mov
add
cmp
popf
and
push
leave
fildll
int3
cld
xchg
es
and
gs
jg
push
test
sub
push
push
pop
xor
adc
inc
das
or
mov
add
dec
js
cmpsb
lock
jecxz
sbb
xor
adc
rcr
mov
sub
add
and
mov
xor
gs
mov
cmp
shll
outsb
nop
inc
aam
mov
test
decl
add
fisubrl
cmpsl
test
mov
popa
xor
pop
test
adc
xchg
and
xchg
int
inc
mov
mov
ja
mov
jb
mov
push
jns
add
push
cwtl
sbbb
std
stos
push
cmp
inc
es
sbb
lods
nop
shlb
inc
jns
jnp
lods
add
mov
outsb
mov
roll
js
stc
mov
lds
roll
lods
stos
subb
adc
popf
and
incl
sahf
cmp
push
add
push
scas
cmp
jl
xchg
or
fsts
jbe
push
jnp
pop
inc
aas
fs
sti
ficompl
fsubrs
fmulp
rcl
pop
clc
xor
mov
cli
sbb
ret
sbb
push
cld
mov
push
test
push
gs
add
add
es
cwtl
and
mov
xchg
test
jp
or
mov
add
push
mov
incb
jg
loope
add
mov
cld
or
bound
js
scas
push
sub
or
stos
out
push
xor
sbb
loopne
loop
das
dec
jb
or
or
mov
xchg
fbstp
adc
xchg
fcomps
scas
loope
ljmp
movsl
adc
xchg
mov
fcompl
sub
and
add
dec
jb
inc
test
rcr
push
ljmp
sbb
cmp
sbb
jmp
add
sbb
fbld
mov
jne
and
test
pushf
xor
mov
outsb
leave
or
pop
cmp
or
out
mov
cwtl
adc
and
mov
lcall
inc
ret
or
mov
adc
adc
loopne
inc
ljmp
pusha
cmp
adc
sub
jae
mov
mov
adc
dec
adc
jmp
les
add
mov
das
cmpb
jge
pop
and
sub
pop
mov
movsl
dec
adc
pop
clc
imul
test
dec
pop
xchg
xchg
push
orl
mov
push
lcall
push
jne
or
adc
pop
ljmp
pushf
addb
loope
push
pop
movsb
repnz
hlt
jne
mov
call
mov
insb
add
pop
data16
and
pusha
orb
cmp
dec
or
mov
movsb
addr16
pop
mov
movsb
inc
inc
pop
inc
mov
ds
repnz
push
mov
cli
pusha
stc
jecxz
test
jmp
or
sbb
add
and
mov
inc
add
fcomip
aaa
mov
rcrl
das
ret
mov
lock
lock
dec
push
adc
sbb
insb
pop
ds
pop
testb
add
xchg
add
jg
jle
or
inc
cmp
rolb
mov
lds
mov
pop
dec
sbbl
push
cli
ss
and
lea
les
idivl
cmp
mov
inc
mov
subb
lods
stc
lcall
push
xchg
mov
cs
and
in
mov
mov
mov
fwait
test
jb
lahf
jg
std
imul
jo
xlat
jecxz
test
shlb
mov
mov
fwait
call
cmpsb
lret
jl
pop
mov
dec
adc
and
fiaddl
or
pusha
call
inc
out
mov
xchg
popf
inc
mov
repz
lock
sbb
enter
xchg
pop
stc
adc
mull
sub
sbb
sub
push
cs
jl
incl
icebp
sub
inc
xchg
rclb
scas
push
test
leave
mov
pop
mov
dec
push
cmpl
mov
jns
mov
jecxz
dec
aas
sti
sub
adc
and
add
sbb
cld
cli
and
cli
sbb
cld
pop
dec
push
inc
shl
sub
sbb
int
into
cld
out
aad
pop
mov
jl
lods
pop
xor
mov
popa
mov
mov
decl
jmp
fildll
fiaddl
fwait
sub
inc
jbe
loope
inc
ljmp
dec
movsb
pusha
mov
push
mov
mov
jbe
sub
mov
xchg
fwait
xchg
push
fbstp
fiadds
gs
add
push
cmc
dec
mov
mov
mov
test
sub
lods
push
cmp
jmp
xor
lock
xchg
mov
cmp
lahf
sahf
movsb
mov
addl
cs
aaa
inc
lahf
ljmp
adc
ja
xchg
and
pop
mov
adc
outsb
movsb
or
call
jb
jle
sbb
ret
orb
add
clc
mov
add
jle
or
push
add
cmp
push
cli
std
filds
mov
and
sbb
jno
add
leave
mov
cmc
cmp
scas
outsb
outsb
addr16
out
mov
loopne
ss
jmp
or
aaa
bound
add
pop
push
pop
dec
mov
pop
sbb
test
push
adcb
push
sbb
testl
fdivs
ficoml
lret
shrb
js
imul
jg
sbb
fimuls
pop
int3
div
inc
aas
lea
sub
and
or
add
cli
enter
inc
jb
xor
sahf
add
jmp
dec
imulb
nop
and
adc
add
inc
rcr
xor
mov
lret
sbb
xor
cltd
mov
dec
test
and
ja
scas
loopne
fildl
adc
call
mov
jge
add
testb
push
bound
outsb
adc
pushf
loopne
add
xchg
testl
lods
or
add
add
pop
clc
shrd
mov
loopne
pop
pop
fldln2
es
lret
xor
mov
mov
mov
or
xor
aaa
out
shlb
loop
lods
mov
and
dec
lcall
or
pop
sub
scas
test
mov
decl
xor
and
mov
call
add
dec
mov
cmp
mov
mov
mov
add
pop
jbe
fsubl
fmuls
sbb
sbb
cltd
mov
stos
cmp
adc
add
jmp
mov
out
dec
test
and
test
pop
scas
incl
add
insl
jo
outsl
jle
ret
aam
mov
pop
sub
daa
push
clc
ds
hlt
cmp
ss
xchg
sub
add
or
ljmp
xorl
adc
mov
scas
xor
pusha
xchg
mov
in
pop
imul
push
mov
sub
mov
or
sub
shlb
and
filds
movsb
stos
and
mov
push
xchg
adc
xor
dec
dec
cmc
fbld
inc
inc
imul
push
sub
mov
pop
and
sbb
mov
mov
adc
add
cmp
fisubs
cld
or
outsl
stos
jb
add
ja
insb
and
scas
sub
xchg
jmp
sub
insl
pop
fcomi
jmp
incl
add
test
pop
icebp
xchg
sub
dec
mov
aad
mov
cmp
or
push
insb
mov
repz
leave
in
cs
imul
push
and
mov
pusha
or
addl
jg
in
pop
mov
and
mov
or
outsl
sbb
fimull
inc
add
jne
add
sbb
push
and
and
inc
push
rcr
inc
out
enter
push
inc
aas
lcall
hlt
xchg
fdivr
stos
stos
push
add
movsl
cwtl
pop
or
rcl
xchg
lods
mov
aam
add
mov
xorb
xor
adc
xchg
push
fisubrs
mov
movsl
test
jg
int
and
sbb
lcall
fstp
pop
testl
mov
icebp
mov
mov
xor
scas
pop
lods
mov
or
xor
jl
mov
jnp
add
sbb
pop
or
dec
sti
mov
push
ss
inc
add
fcompl
mov
cmp
aas
imul
je
push
enter
loopne
mov
shrl
push
cmpsl
cld
mov
cltd
xchg
xchg
add
mov
in
sub
jne
lcall
jb
data16
in
xor
pop
fiaddl
dec
das
mov
and
scas
das
aaa
inc
pop
xchg
jo
les
jmp
int
xchg
aaa
inc
add
orb
stc
mov
inc
mov
jp
adc
leave
jo
xor
roll
xchg
loope
sbb
mov
les
inc
xor
or
loop
out
sub
loop
ficomps
mov
shll
jae
add
jb
adc
jmp
ljmp
fdivrs
orb
xchg
push
sbbb
add
test
sahf
sahf
cmp
incl
inc
mov
cli
sub
sahf
in
mov
lods
mov
cmp
outsl
inc
xchg
into
pop
jbe
lock
rorl
lock
lret
jno
or
inc
cmp
es
xlat
sbb
jge
or
push
decl
inc
ja
add
and
xchg
mov
dec
add
call
int
add
pusha
xchg
mov
mov
mov
stc
mov
out
int
fs
push
cmp
push
stc
lahf
scas
or
mov
push
mov
mov
mov
xor
and
test
fistpll
lcall
je
or
mov
push
cmp
je
add
outsl
fdivr
ret
add
rclb
scas
push
bound
mov
mov
pop
ss
iret
sub
movsl
cmp
pusha
and
pushl
push
jo
lcall
jecxz
add
sub
push
and
test
ja
cli
jg
jmp
into
xor
sbb
push
inc
add
movsb
mov
mov
mov
out
cwtl
xorl
sahf
xchg
out
leave
clc
in
lea
mov
jg
shlb
sbb
test
test
aad
dec
push
mov
xor
insl
ljmp
add
and
popa
inc
sbb
lods
jmp
add
push
imul
in
shrl
jp
stos
rcl
mov
lods
test
cmpsl
or
xor
inc
lods
movsl
nop
ljmp
scas
mov
lods
rcrb
jmp
loopne
sub
int3
adc
xor
out
jp
cs
jo
xchg
push
mov
jne
daa
or
sarb
jae
xor
xor
je
lods
cmpsb
jp
int3
cmc
ret
jmp
pop
int3
xchg
lret
jl
pop
enter
es
loope
adc
add
outsb
cld
cmpsb
and
dec
fcoms
dec
dec
jnp
sub
xor
inc
mov
in
add
fadds
iret
out
mov
out
scas
ljmp
lea
add
and
int3
repnz
outsb
dec
inc
aas
fldz
xchg
add
data16
cli
leave
xchg
jnp
pop
outsl
aas
clc
xor
push
pop
pusha
nop
mov
out
aaa
int
jl
sub
jae
popa
xor
sbb
xacquire
rorb
testl
aas
sub
in
addb
stos
rolb
adc
inc
xor
cmp
and
jp
cmp
and
xchg
and
mov
icebp
lcall
das
sub
xlat
fcom
test
test
lcall
pusha
mov
out
jl
jmp
lock
paddsb
inc
adc
sbb
mov
mov
jmp
xorl
icebp
inc
in
adc
pop
push
roll
inc
cld
fists
xchg
xchg
or
mov
sub
inc
add
out
sub
and
pushl
inc
add
jmp
out
mov
icebp
in
adc
or
inc
xchg
mov
cmpsb
mov
mov
in
ret
mov
sti
push
movsb
repz
adc
inc
insb
xchg
lcall
out
fmuls
popa
or
das
scas
rorb
mov
cmc
popa
mov
lcall
sbb
in
sbbb
pop
leave
push
icebp
nop
test
mov
addb
mov
or
shlb
lcall
cmpsb
ds
or
pusha
sbb
inc
into
sub
testl
std
fbstp
popa
shl
xor
pop
aaa
scas
movsb
xchg
repnz
inc
inc
cmc
add
lock
fidivs
ret
add
fistps
insb
jg
inc
fdivrs
cmpsb
push
mov
out
push
lock
sbb
mov
addb
mov
sbb
cmpsl
ss
jp
xchg
and
ja
daa
mov
mov
outsb
pop
mov
cli
xorb
loope
cwtl
outsb
push
clc
lcall
orl
mov
mov
test
inc
cmp
call
outsl
mov
pop
xor
lods
ss
cmp
je
out
lcall
jae
add
loop
sbb
mov
fisubrs
mov
push
mov
mov
insb
pushl
aam
pop
and
add
xchg
mov
jb
call
incl
dec
clc
lea
mov
xchg
pop
add
pop
loopne
aas
les
shlb
push
jbe
mov
add
push
pop
inc
pop
hlt
fisttps
loop
sbb
push
push
insb
stos
jne
lock
jle
std
int
sbb
adc
cmp
mov
inc
sbb
mov
test
pushl
bound
movsb
rorb
ljmp
push
aad
scas
mov
pusha
inc
inc
int3
scas
jl
icebp
jbe
sbb
or
dec
push
jl
ljmp
mov
push
xchg
push
push
dec
add
sbb
jno
leave
scas
xchg
outsb
push
hlt
mulb
jg
add
xor
jns
pop
jno
ficoml
cwtl
scas
imul
std
in
pop
sub
flds
mov
lock
nop
fcomps
push
jmp
push
stc
and
mov
xchg
dec
fbstp
in
dec
push
xorl
pop
push
sti
das
shrb
mov
std
mov
outsb
cli
lcall
test
rorl
imul
int3
subl
lcall
rorl
cmp
sub
xchg
inc
mov
pop
mov
das
mov
in
push
add
mov
repnz
sub
sbb
lcall
pop
inc
push
mov
insb
fstps
jbe
cwtl
adc
bound
or
int3
pop
push
enter
push
jl
daa
pop
out
or
inc
fsubl
xchg
outsb
inc
call
and
mov
add
mov
pusha
xor
inc
pop
stos
andb
sbb
shll
add
adc
loop
insb
mov
and
adc
jnp
lret
hlt
hlt
dec
mov
ja
addb
test
add
imul
jp
cmpb
jle
mov
outsb
fcom
je
jb
push
inc
mov
dec
push
ret
adc
jb
xor
add
jge
adc
mov
push
mov
pop
andl
cmp
nop
mov
jae
mov
xchg
cmp
and
lcall
es
push
xchg
push
icebp
xchg
sub
mov
mov
sar
add
cmpsl
xchg
sub
sbb
cmp
jg
cld
adc
imul
add
test
popa
inc
xor
sbb
fisttps
inc
mov
pushf
addr16
or
push
or
fwait
inc
daa
xor
sbbl
iret
jmp
insl
adcb
fcoms
stos
mov
mov
addr16
cmp
add
test
ss
xlat
jo
and
rclb
fs
mov
stos
jl
lea
mov
xorb
push
sub
and
loopne
pushf
add
shl
mov
jb
pop
cmp
orb
loopne
pop
sub
repz
add
insl
clc
push
cmp
push
jb
adc
xchg
stos
push
mov
cmp
fimuls
out
sbbl
xchg
icebp
dec
rcrb
mov
lock
js
lcall
dec
xchg
outsb
lcall
or
fsubs
add
sbb
cld
pop
aaa
mov
dec
inc
rcl
stos
lcall
stc
add
popf
dec
add
xchg
lcall
inc
mov
insb
and
dec
xchg
mov
arpl
inc
adc
les
and
mov
cmpsb
aad
scas
push
pop
scas
dec
aam
mov
in
decl
out
repz
mov
push
lcall
xor
cmp
and
movb
cld
mov
inc
xchg
cmpl
cli
das
adc
rclb
out
pop
xchg
add
jbe
out
push
push
inc
ret
xchg
loope
fidivl
movups
ja
pusha
or
xchg
jo
cmp
add
pushl
lret
enter
lahf
push
adc
xor
cmp
or
outsl
fildl
mov
lods
mov
sub
fsub
lea
cmc
mov
jg
sbbb
in
cmc
sub
cmp
mov
pop
fs
add
sbb
loopne
jo
add
cmp
pop
dec
xchg
xor
cmpb
ret
pop
sti
and
arpl
lret
cmpsb
add
daa
sarb
rolb
mov
addr16
scas
sbb
rorb
xchg
test
adc
rorb
cmp
push
into
jmp
lea
adc
jmp
cli
inc
mov
xor
ret
xchg
test
lock
mov
or
loopne
enter
mov
cmp
sub
mov
mov
bound
mov
aam
inc
inc
adc
pushf
dec
jecxz
pcmpeqb
xchg
fdivrs
bnd
mov
xor
ret
sbb
jecxz
lret
out
jg
cli
jg
jo
jg
mov
pop
pop
adc
jg
inc
scas
leave
lcall
inc
das
adc
jge
pop
loop
sub
jg
clc
fwait
sti
in
incb
sub
add
outsb
out
test
lods
test
dec
mov
in
inc
shl
xor
xor
les
xor
inc
dec
hlt
loopne
push
xor
icebp
inc
popf
mov
lds
and
fcoms
mov
stc
cmpsb
adc
jecxz
or
int
or
movsb
sbbl
mov
adc
cmp
push
sub
ret
clc
mov
sbb
add
movsl
adc
mov
cld
or
sub
pop
clc
inc
sbb
dec
xor
add
add
cmp
lret
sbb
sub
insb
add
sahf
add
out
xchg
xor
fimull
jp
aad
lds
sub
aaa
mov
jp
add
test
sub
pop
mov
dec
divl
clc
scas
jle
or
mov
mov
and
xor
dec
call
cmp
xchg
dec
adc
push
cmp
fcoml
addr16
and
jae
cld
mov
adc
into
fucomi
xorl
mov
push
jae
mov
ret
inc
lock
scas
push
mov
cmp
enter
fisubs
jle
pop
repnz
mov
xchg
inc
sbb
ror
pusha
daa
ja
frstor
cltd
mov
roll
std
jmp
add
ss
stos
rcrb
and
jne
and
cwtl
loopne
int3
call
loopne
sub
push
xchg
push
aad
test
and
xchg
leave
inc
fwait
ss
movsb
subl
fldl
sub
aam
lds
mov
jbe
adc
int3
xchg
fwait
jecxz
dec
andb
sbb
cmp
xchg
and
pushf
xor
fstps
test
movsl
stc
testl
xchg
or
sti
dec
gs
fdiv
add
xorl
jg
xchg
xorb
or
cs
fcom
aaa
loope
ffree
dec
pop
aam
pop
out
xchg
jle
sbb
in
adc
sbb
ljmp
push
sarl
jns
das
add
gs
mov
lods
ljmp
scas
mov
xchg
fildll
dec
into
sbb
rcr
mov
adc
stos
es
add
stc
push
in
dec
inc
push
std
cmp
es
ud0
add
push
jnp
lret
bound
shrb
mov
adc
push
mov
int
mov
jmp
clc
push
inc
inc
das
pop
pusha
sbb
arpl
mov
jecxz
pop
adc
and
push
jno
ret
jb
pop
sahf
clc
fwait
sbb
add
cs
sub
loopne
xchg
sarb
cld
insb
mov
pop
pushl
rcrb
sbb
pop
add
fstps
pop
push
pop
push
and
inc
je
xor
and
fiadds
pop
inc
movsb
add
cli
dec
scas
insb
fidivs
mov
ja
add
cmp
scas
inc
xchg
mov
and
iret
movsl
sbb
and
dec
push
dec
rclb
jle
mov
mov
add
add
push
clc
adcl
int
jbe
pop
incb
mov
js
daa
pop
aam
imul
pop
pop
daa
leave
loopne
dec
xchg
decl
dec
and
push
xchg
mov
cmp
xchg
mov
scas
push
jae
xchg
shrb
lcall
xor
sbb
push
and
pop
sbb
dec
insl
out
nop
enter
jb
cmp
jbe
and
in
mov
lret
mov
jg
push
inc
push
and
dec
rolb
adc
add
stos
xor
ds
inc
mov
inc
adc
test
and
ret
out
push
fistpl
in
dec
adc
insl
je
pushf
rdtsc
ds
adc
sub
mov
stc
orb
and
repnz
and
ficoml
std
aaa
push
fstps
cld
out
fnstsw
dec
xchg
movsl
test
pushf
fldl
dec
es
out
sbb
mov
sub
xchg
cmp
mov
sbb
aad
mov
add
ret
jne
jmp
sti
xorb
push
adc
and
aad
pop
mov
incl
adc
adc
or
xchg
mov
dec
or
mov
mov
or
cmc
pop
popf
xchg
incl
xor
push
sub
xchg
xchg
sub
movsb
idiv
fisttps
scas
popa
mov
outsb
and
xchg
jecxz
jno
or
andb
out
sbb
fcoml
arpl
lret
lods
iret
cmpsb
cltd
movsb
lock
das
xchg
dec
inc
loopne
fmul
sub
in
nop
and
sti
out
sbb
pop
adc
fisubs
test
jg
push
stos
rolb
sub
in
loope
pop
xchg
test
adc
add
int3
cmpsb
dec
push
testl
xor
ljmp
xor
dec
gs
insb
mov
push
fsubr
lock
mov
dec
dec
or
sbb
lea
ljmp
sub
mov
pop
js
sub
icebp
sbb
pop
out
mov
aaa
and
inc
sbb
sbb
mov
mov
js
subb
push
andl
addr16
dec
mov
cmovle
or
lcall
xorb
adc
xchg
adcb
dec
mov
cwtl
inc
xchg
ret
ss
es
ljmp
sahf
aam
sub
enter
cmp
lahf
and
mov
jmp
ja
fidivrs
cwtl
rol
add
lock
orb
fdivr
ret
addr16
push
incl
arpl
out
adcb
mov
mov
xchg
mov
xchg
out
shrl
fdiv
scas
cmp
loopne
mov
in
idivb
xchg
mov
ja
push
cmp
push
jge
add
push
cmp
sub
ret
out
lock
or
or
data16
out
cli
loop
push
xchg
rorl
imul
in
add
mov
adc
xor
add
xchg
mov
cmpsb
lods
movsb
jne
add
add
jecxz
xchg
cmp
stc
add
jno
mov
mov
cmp
sub
popf
ss
adc
hlt
jg
and
insb
shl
pushf
test
push
push
ret
fcomip
fwait
mov
add
test
mov
shrb
sbb
sub
jns
sbb
inc
inc
insb
or
bound
sub
test
dec
lcall
or
mov
das
pop
movsb
xchg
xor
dec
cs
xor
jl
pushl
nopl
gs
filds
adc
push
inc
push
test
jg
ja
cmpsl
ffree
mov
aad
mov
int3
push
mov
xor
dec
add
xchg
jae
push
pushf
pop
shr
addb
int
pop
lock
xchg
rcll
jl
add
dec
sarb
xchg
pop
add
sub
push
jb
aas
inc
sub
ja
xlat
mov
lret
push
jle
das
adc
mov
lock
nop
cli
lock
orl
xchg
dec
sarb
inc
or
out
inc
adc
sub
fs
xor
mov
add
dec
sub
loopne
pusha
cmp
cmp
ss
ss
js
addr16
clc
xchg
jl
mull
xor
fsubrl
or
add
jl
lea
ss
add
mov
rcrb
or
mov
xchg
pop
les
popa
lcall
idivl
in
sar
or
jmp
adc
sahf
add
mov
daa
das
int3
lcall
fwait
jnp
outsb
fimull
dec
hlt
in
icebp
repz
lcall
lcall
jb
xor
aam
pop
inc
and
inc
ret
sub
add
rolb
nop
test
or
cmc
add
sub
je
dec
or
or
outsl
cmp
add
aam
leave
jbe
sbb
xor
mov
mov
repnz
std
movsb
mov
pop
insb
pop
add
dec
inc
outsl
cli
clc
mov
mov
out
out
xchg
push
popa
xchg
notl
and
data16
ret
dec
xchg
add
pop
add
stos
jl
sbb
mov
sub
jo
loopne
bound
sti
inc
std
inc
inc
mov
flds
and
in
imul
push
sub
sar
call
lods
cs
in
pop
pop
add
ja
dec
fldcw
std
outsl
cli
inc
and
xor
fsubrs
cs
stos
pop
shrb
add
inc
jg
sub
mov
pop
jnp
mov
or
aaa
std
lcall
sar
sub
pop
mov
and
loopne
or
add
mov
lods
into
in
sbbb
loopne
mov
inc
sbb
mov
mov
clc
dec
adc
test
movsb
and
jle
and
mov
inc
lds
jno
jno
xchg
shrl
jae
sbb
bound
fidivs
loopne
outsl
mov
outsb
int3
cmpb
aas
fsts
dec
lods
push
shll
pop
inc
pop
or
or
shll
das
mov
mov
xor
jns
insb
cmp
scas
adc
sbb
sbb
es
jns
cmp
test
or
xor
subb
loopne
jnp
ret
call
and
push
adc
adc
push
fdivr
btsl
hlt
shrb
jl
clc
or
fldl
rcrl
inc
dec
push
or
mov
pop
icebp
and
cmp
cmp
subl
insb
xor
lcall
add
pop
call
mov
or
xchg
movsb
lea
or
jg
std
push
or
mov
cld
and
jmp
jo
aam
pushf
insb
lcall
ss
xchg
cmpsb
stc
insb
loopne
scas
cli
add
rolb
or
mov
inc
and
ljmp
push
xchg
or
jecxz
sub
aaa
or
loop
xor
mov
clc
adc
cmp
pop
ret
enter
mov
enter
aas
and
cmp
out
scas
dec
testb
cmc
filds
push
or
mov
mov
call
cld
and
xchg
dec
fldt
add
cmp
shll
push
shl
push
mov
dec
decb
and
cmpl
cmp
xchg
jbe
testw
pop
jp
dec
cli
fwait
adcb
ja
dec
dec
mov
or
xor
lock
ja
xchg
xor
pop
inc
jp
dec
lcall
and
nop
fisttpl
sti
mov
arpl
sub
call
out
ds
cmp
mov
incl
mov
ss
call
push
xor
repz
mov
ret
adc
in
loop
inc
and
mov
enter
mov
fdivr
pop
outsb
sub
sub
in
std
mov
or
add
movl
sbb
lock
icebp
lret
inc
push
les
push
push
sub
test
cltd
decb
and
mov
push
rol
jl
dec
cmp
and
cmpsb
inc
xor
lret
cmp
jg
hlt
mov
decb
shlb
fldenv
lock
lods
and
mov
mov
mov
rol
incl
arpl
lcall
xor
cld
dec
jmp
negl
pop
sub
js
jno
push
cmc
cmp
xchg
pushf
fimull
pusha
add
dec
push
push
sub
adc
dec
or
stc
cli
mov
xchg
pop
shlb
sbb
xchg
adcb
outsl
xchg
imul
push
lret
jl
cs
daa
fwait
add
and
cmc
aaa
jmp
pop
js
nop
and
inc
dec
and
or
jp
mov
add
pusha
mov
cmpsl
push
sub
xor
sbb
das
dec
jns
das
jne
popf
push
sub
adc
outsb
jno
mov
dec
or
cwtl
mov
insl
roll
xor
xor
jle
jp
clc
aas
sub
or
xor
mov
cwtl
mov
pop
adc
adc
enter
outsl
lcall
inc
lea
ljmp
orb
cs
and
and
sbb
imul
push
js
mov
lret
clc
in
decl
or
add
std
fcoml
mov
int3
sahf
test
pop
incb
adc
sbb
jge
xchg
jno
pop
adc
sub
jle
cmp
pop
pop
or
or
jnp
add
sbb
mov
jp
rorb
add
lahf
jge
insb
xor
inc
or
cmp
mov
jecxz
push
sub
mov
stos
jne
scas
mov
cli
sub
push
jae
lock
lret
ret
sub
cmpsb
sbb
hlt
aaa
jbe
pop
fcomps
jae
out
xchg
or
mov
mov
in
xor
test
fs
decl
push
jecxz
pop
cmp
arpl
xorl
ss
sub
push
mov
aad
stos
inc
dec
push
xor
aas
rclb
int
dec
jl
adc
sbb
sub
fbstp
into
insb
push
shlb
cmc
or
fcomps
jl
int
push
data16
mov
mov
addr16
insb
fdivs
add
scas
nop
sub
add
clc
jmp
adc
in
inc
flds
adc
inc
jo
cs
gs
sbb
jge
xchg
sub
in
push
pop
sbb
lea
call
lcall
fs
mov
xor
xchg
in
test
inc
sub
and
inc
popa
jns
xlat
sub
stos
lods
push
push
add
xlat
hlt
dec
dec
pop
clc
pop
sbb
test
cmpsb
mov
cli
sub
cmp
push
pop
push
dec
mov
fisttpll
xchg
enter
pushl
xchg
add
int3
mov
dec
pop
hlt
adc
jns
lret
mov
or
ret
xor
dec
jmp
lock
xor
push
add
or
cmp
mov
shl
pop
sub
cmp
fld
mov
ret
adc
clc
push
mov
stos
lret
add
dec
dec
adc
ds
push
xchg
add
mov
sub
xor
lret
sub
cmp
xor
cld
lock
sub
mov
jl
and
push
icebp
pop
cmp
sub
pop
dec
aaa
mov
sbb
mov
cmc
lods
ljmp
sahf
pop
and
ja
repz
xchg
push
mov
pop
sub
sti
and
sahf
xor
adc
add
sbb
mov
mov
loope
ljmp
jae
or
jns
popf
pop
mov
cmp
push
es
ljmp
cmp
adc
inc
adc
pop
mov
into
and
mov
mov
mov
aaa
lods
jnp
test
inc
les
movsl
xchg
in
push
mov
incl
push
loopne
imul
outsb
mov
inc
in
in
jmp
pop
fs
aad
cmpsb
xor
xchg
lods
and
mov
and
push
push
ljmp
lret
mov
xchg
mov
jp
mov
push
es
xor
jle
sti
clc
insb
roll
mov
fs
decl
pop
fwait
xchg
stos
mov
mov
mov
add
aad
test
mov
push
aas
cmpsb
das
dec
pop
jge
ret
sub
mov
fldenv
push
in
rcr
inc
xor
aad
mov
jle
jg
cmp
ret
lock
inc
xor
rcrb
dec
push
xor
pop
cmp
pushf
dec
dec
push
cmp
jg
and
add
fs
call
pop
in
add
movb
add
fistpl
add
clc
fld
fdivl
lock
mov
mov
and
les
in
inc
add
inc
dec
add
lock
add
xor
xlat
pop
jmp
or
pop
sbb
fstpl
adc
aaa
sbb
movsl
or
cmp
hlt
orl
pusha
insb
test
and
inc
inc
and
push
pushl
sti
pop
pop
jb
cmpsl
cmp
mov
into
mov
fildll
subl
or
push
loop
mov
push
leave
push
mov
push
addb
rcrb
or
pop
add
xchg
into
mov
xor
push
ret
sbb
inc
sbb
xchg
fsts
or
xchg
and
sub
test
das
test
jmp
pop
subb
jge
xchg
cli
xlat
mov
aas
rcrb
cwtl
jne
ds
ja
push
mov
pop
dec
or
dec
imul
push
xor
loopne
aad
jne
loop
or
ss
rcrb
lock
addl
xor
fsts
daa
or
or
cwtl
in
ljmp
call
loope
sbb
cs
ljmp
in
pop
or
adc
loopne
mov
dec
jg
rcl
repz
scas
mov
loope
inc
or
fsubs
cmc
addr16
inc
pop
adc
jmp
mov
push
xchg
xchg
jno
clc
mov
inc
mov
push
mov
mov
pushf
xchg
mov
cltd
add
aad
pop
inc
or
sub
mov
pop
enter
sbb
mov
cld
mov
ret
jmp
insb
inc
sar
jg
xor
clc
mov
mov
xchg
xchg
shll
addr16
cmp
decb
dec
in
mov
pop
outsl
mov
movsb
mov
std
or
rclb
and
xor
pushl
es
push
rorb
jecxz
lock
shlb
inc
pop
subl
and
scas
cli
dec
mov
shl
or
je
test
mov
loope
xchg
icebp
dec
inc
sbb
add
loopne
scas
xchg
adc
ret
mov
push
inc
lds
inc
clc
fwait
add
rcr
enter
cs
push
inc
pop
cmc
xchg
scas
or
xchg
inc
jmp
rcrl
mov
push
sbb
cmp
mov
mov
push
inc
lret
dec
subl
cmp
jp
out
mov
imul
into
out
add
adc
aaa
push
or
aas
dec
mov
repnz
push
add
lcall
fstp
rcrb
out
repnz
lcall
scas
sub
mov
lret
push
sbb
or
dec
mov
loopne
test
incl
or
sbb
mov
mov
adc
fs
mov
jmp
push
outsb
rolb
sarl
into
sahf
adc
in
mov
fiadds
shll
mov
mov
adc
mov
jmp
mov
outsb
cmp
jg
hlt
xor
push
jno
xchg
add
and
aas
dec
andb
pop
sub
mov
les
insb
lods
scas
ret
sbb
icebp
dec
icebp
pop
push
scas
mov
in
push
pop
mov
subb
mov
insl
call
push
sbb
addb
jg
cmpsb
cmp
movsb
adcb
andb
lods
je
and
adc
inc
rcrb
stos
push
pop
mov
rorl
imul
lcall
aaa
or
aad
inc
sub
call
pop
adc
ret
or
jg
sub
add
test
dec
lret
xor
into
testb
dec
push
je
sbb
lcall
cmp
cmpsb
mov
and
aad
hlt
sub
hlt
pushl
insl
xor
cmpsl
movsb
fwait
push
rolb
mov
sub
ja
push
mov
fdivrp
in
mov
lods
scas
pop
outsb
dec
je,pt
mov
stos
ljmp
or
fimuls
and
mov
scas
sarl
and
sbb
cmp
in
mov
add
movsb
xchg
in
or
push
nop
push
or
pop
nop
iret
push
cmp
rolb
sar
fbld
loope
pop
mov
nop
sahf
or
test
insl
sbb
sbb
ljmp
or
addl
mov
xchg
rolb
outsl
je
push
das
and
dec
jl
push
mov
or
mov
mov
push
sbb
add
mov
lea
popa
inc
mov
out
cwtl
mov
enter
cmpsb
or
or
fmulp
pop
dec
mov
and
int
in
mov
add
sbb
mov
popa
push
push
lods
sub
push
pushl
add
xchg
popa
or
mov
lock
push
ja
ret
bnd
push
xchg
push
xor
add
lods
sub
cmpl
adc
push
jp
xchg
arpl
adc
out
sarb
inc
xchg
out
mov
lds
subb
scas
clc
xchg
push
fs
inc
fdiv
ja
mov
rorb
or
arpl
subb
in
mov
data16
incb
mov
cmp
icebp
jle
adc
cmp
xchg
adc
inc
pop
outsb
xor
cmc
mov
mov
jnp
and
or
scas
dec
cmp
pop
sti
incl
xchg
xor
nop
add
icebp
mov
loope
and
bound
hlt
mov
mov
and
cmp
jmp
out
jo
sahf
adc
cli
mov
add
xor
sub
pop
xchg
daa
cli
dec
push
xchg
mov
inc
add
orb
jae
insl
clc
jg
xor
jns
adc
xchg
sub
pop
jo
inc
ret
incl
xor
sbb
push
xor
leave
jo
and
std
xor
xor
xor
incl
mov
insb
inc
sub
mov
or
in
mov
aas
ret
loopne
pop
movsl
xor
adc
xor
push
or
xor
sahf
test
xchg
sbb
movsl
add
jg
ljmp
mov
daa
cmp
sbb
pusha
inc
add
stos
divl
pop
int3
add
mov
rol
dec
cld
pop
cmp
cltd
mov
cmp
and
ficoms
shlb
in
in
clc
pop
aam
add
imull
ret
jle
cmp
mov
cmp
arpl
adc
insl
mov
les
sbb
andb
cs
ja
adc
dec
jmp
test
aaa
jo
dec
sub
pop
and
pop
mov
or
inc
cld
aas
cmp
cld
push
mov
mov
jno
sbb
insb
adc
int3
ljmp
cmp
fadds
add
es
push
sub
loopne
shl
mov
es
incl
jmp
inc
sbb
adc
mov
fadds
sbb
loope
sarl
mov
fiadds
cmpb
dec
lahf
mov
cli
mov
ficomps
dec
lods
sub
shlb
call
jns
or
lcall
or
pop
fs
pop
clc
mov
lea
sub
loop
add
add
sub
dec
and
mov
inc
pop
cmpsl
negb
pop
lea
push
add
push
mov
gs
scas
xchg
or
das
test
pushl
es
sbbb
sub
jp
jnp,pn
pop
lahf
add
add
mov
icebp
pop
clc
mov
jp
pop
call
pop
and
dec
add
jg
and
mov
add
mov
por
scas
xchg
add
xor
jp
adcl
push
jl
popa
rorl
fdivl
jbe
and
movsl
incl
push
add
loopne
imul
sub
bound
cmp
jle
or
jg
sbb
cld
xchg
out
call
call
loopne,pt
fwait
mov
jns
repnz
push
add
sub
inc
loope
or
pop
movsb
popf
inc
jns
stos
mov
mov
ja
adcb
cld
cmp
mov
pop
sbb
stos
xor
push
jns
dec
fcomp
or
mov
dec
pop
and
mov
dec
sub
xchg
push
or
call
pushf
jmp
cmp
sbb
pop
dec
mov
dec
push
xchg
pop
loopne
nop
add
jns
inc
xorb
add
mov
dec
jg
test
xchg
dec
test
mov
cmp
ret
rorl
scas
dec
cmc
fsubrs
cmp
ljmp
loopne
lods
mov
loope
repnz
aaa
insl
loopne
fsubs
or
sub
or
lods
adc
jo
lods
or
sar
inc
mov
xchg
imul
or
pop
mov
inc
mov
movsb
lea
cli
add
add
call
loop
push
jmp
xorl
stos
shlb
repz
aaa
mov
xchg
jl
lods
cmc
dec
aas
mov
fisttpl
cli
sahf
sahf
add
sbb
mov
hlt
mov
jmp
add
cwtl
and
and
icebp
and
aam
call
xor
imul
scas
adc
arpl
dec
xor
and
ds
ja
ljmp
add
xchg
je
pop
add
push
lret
pop
scas
cmp
ja
push
int3
xchg
xor
sarl
mov
sbb
lock
jb
or
pop
ret
scas
cmpsb
in
mov
push
shrb
add
pop
sub
mov
xchg
lea
push
sub
cmp
sub
pop
add
and
lret
movsb
rcr
jmp
loopne
jl
jbe
mov
loop
sbb
fildl
cmp
mov
mov
jmp
ljmp
in
js
fnstsw
lock
icebp
cmc
xchg
sbbl
imul
adc
adc
cmp
fcmovnu
add
sbb
out
xchg
dec
cwtl
mov
jae
push
xor
sub
xchg
inc
lock
jg
sbb
sbb
retw
lret
rol
lods
in
mov
adc
cmp
lea
out
push
cmp
jmp
mov
add
bound
ljmp
and
adc
mov
dec
add
mov
daa
movsb
leave
jnp
inc
cmc
scas
jp
inc
adc
or
shr
fs
je
push
loope
dec
or
mov
inc
or
jg
cmp
insl
xchg
sub
jl
nop
adc
and
icebp
pop
or
sbb
cld
lcall
fiaddl
dec
push
cmpsl
and
or
push
adc
jmp
xor
faddp
in
pop
icebp
gs
sti
mov
adc
leave
sub
lret
inc
adc
pop
notb
push
or
sbb
lea
das
js
or
fstl
xchg
es
scas
mov
pop
dec
mov
fs
jno
sub
ljmp
aam
push
addb
popa
xor
xchg
or
pusha
movsl
cmp
push
popa
or
or
shlb
andb
lock
push
push
jg
adc
and
or
jge
lods
sbb
or
xor
outsl
add
cmp
test
xor
aam
fildll
ret
test
lret
movsb
shlb
fsubrl
call
push
std
testl
add
iret
inc
mov
push
das
aam
outsb
js
orps
sub
out
cli
mov
push
stos
mov
jle
popa
es
js
movsb
or
imul
push
mov
stc
xor
cmc
lcall
and
mov
pop
stos
mov
push
mov
fdivrl
or
sbb
push
cmp
adc
cmp
pcmpgtw
jge
shl
xchg
lods
pop
sub
ds
inc
sbb
aam
cmp
dec
sahf
pop
mov
dec
fnstsw
clc
aam
push
push
jp
inc
mov
inc
cld
aad
andl
in
das
xor
mov
sti
test
cmp
sub
lahf
rcl
cmp
cmp
std
divl
insl
jmp
xchg
xor
cld
ficoml
dec
mov
orb
and
mov
mov
pop
xor
mov
filds
es
imul
pop
jl
add
je
scas
push
xchg
call
les
stos
sbb
adc
cmp
decl
mov
enter
inc
in
test
mov
bound
stos
fiaddl
pop
nop
je
rcr
sbb
scas
fs
mov
dec
jo
adc
movsl
dec
and
mov
inc
cmp
mov
shlb
or
adc
or
xchg
mov
mov
jl
and
outsb
hlt
movsl
lahf
mov
pop
repnz
shrl
push
jno
ss
fmull
mov
or
push
sbb
add
fstpt
adc
cli
jbe
incl
divb
lcall
sahf
lock
xor
rolb
test
dec
inc
gs
lea
adc
ret
jle
lcall
out
int
dec
jecxz
ja
cld
sbb
mov
repnz
mov
push
sub
jbe
push
push
dec
add
push
loopne
adc
inc
pop
push
sbb
xchg
clc
ljmp
fdivrl
adc
and
or
ljmp
adc
or
sub
ret
xchg
mov
lods
or
mov
push
jbe
out
in
cmp
dec
cld
pop
pop
dec
es
mov
outsb
mov
xchg
out
cld
mov
xchg
pop
ljmp
scas
aad
rolb
mov
lcall
cmp
lods
imul
cwtl
inc
add
add
push
aas
mov
add
cmpsl
fmull
adc
jb
hlt
mov
sahf
push
fs
jmp
add
and
and
and
pop
pop
push
mov
mov
bound
xlat
jmp
mov
fsubs
incl
ret
out
jnp
ljmp
inc
add
fdivrl
es
cli
ficoml
fmuls
enter
lock
add
adc
dec
dec
push
mov
mov
ficomps
mov
add
or
and
imul
and
adcb
sbb
imulb
mov
add
add
mov
cli
into
pop
push
int
in
fsubrs
add
dec
insl
data16
mov
xchg
add
xchg
divl
mov
add
je
xchg
xor
pop
push
daa
addr16
adc
mov
pop
sub
sub
push
xor
iret
sub
xchg
gs
mov
mov
xchg
xchg
xchg
mov
lds
adc
push
inc
pop
push
fdiv
stos
popa
jge
dec
inc
jo
sbb
mov
lock
enter
fsubl
mov
pop
iret
xchg
jg
lods
xor
mov
and
jge
jno
sub
cmp
mov
and
fmuls
pop
pop
sub
inc
rolb
sub
or
test
mov
jge
sbb
jmp
xchg
shlb
pushf
xor
add
or
imul
cmp
call
sub
mov
inc
xchg
hlt
iret
test
popa
rcl
mov
sbb
lds
scas
xor
sahf
loopne
inc
rolb
sbb
inc
xchg
and
out
out
unpcklps
adc
dec
xchg
mov
dec
shll
ljmp
push
mov
mov
mov
ja
or
sub
xchg
fwait
add
das
or
dec
cltd
adc
adc
add
and
nop
pop
cld
scas
rolb
test
fwait
xorb
add
in
movb
jmp
cmp
nop
incb
loop
pop
xor
outsb
pop
clc
repz
adc
xor
cmp
mov
lea
xchg
roll
int3
es
test
push
adc
jle
int3
and
push
add
jnp
xchg
pushf
mov
fisttps
pop
in
sbb
loope
aad
mov
lret
jno
inc
loopne
das
inc
pop
sbb
cld
xor
in
mov
in
inc
call
pop
mov
loope
mov
mov
mov
dec
mov
add
mov
add
jecxz
test
outsb
pusha
pop
aad
pop
xor
adc
sbb
xchg
xor
jle
pop
add
icebp
lods
insb
push
mov
jae
sub
adc
xor
sbb
rclb
out
cld
ja
cwtl
notl
shr
push
mov
lahf
sub
fists
test
mov
fcoms
addr16
inc
jno
test
orl
ja
loope
bnd
cwtl
jb
or
inc
sbb
lea
xor
mov
int
push
xchg
inc
test
rclb
fcoml
push
clc
inc
imul
sbb
jl
inc
aam
loope
fwait
notb
sub
and
clc
sub
mov
xchg
fildl
xchg
insb
jnp
cwtl
and
add
jge
in
or
sti
outsl
sub
inc
sahf
int
aam
cmp
shl
pop
mov
mov
mov
sbb
cli
out
es
outsl
xor
inc
imul
mov
xchg
cwtl
jne
popa
or
add
mov
jo
fistpll
pop
or
push
sbb
sbb
push
or
xor
push
push
decl
clc
stos
push
test
inc
jbe
fsubrs
es
xor
mov
shll
pop
loope
orb
std
dec
inc
out
fs
xchg
jl
mov
loope
int
mov
or
rorl
cmp
idivb
dec
pop
das
fs
loope
cmp
js
jg
or
icebp
lcall
and
in
mov
mov
cmp
fwait
sub
inc
sbb
clc
insl
cs
into
cli
fsubrl
addl
lahf
shlb
sbb
in
cmp
push
subl
push
int3
lea
xchg
sti
mov
rorl
xchg
push
ret
add
jmp
fs
repz
mov
ja
lret
lret
and
clc
add
push
adc
xchg
jnp
out
adc
ljmp
dec
push
cld
sbb
xchg
out
fidivs
pop
ja
mov
lods
pushf
cli
or
movb
lret
adc
nop
test
subb
xor
cli
xor
nop
cmp
adc
incb
int
jmp
call
cmp
stos
and
arpl
mov
mov
jp
or
adc
or
das
mov
mov
adc
pushf
mov
add
push
insb
and
mov
mov
pop
stos
push
lret
imul
cmp
mov
popf
js
mov
mov
adc
cmp
sub
in
pop
ret
dec
mov
inc
movsl
add
push
test
rclb
mov
and
outsb
ds
testl
je
clc
in
lahf
sbbb
movsb
sub
es
or
negl
shl
inc
jg
test
or
bnd
adc
push
cmpsb
mov
sbb
mov
enter
adc
jge
rcrb
into
push
add
jmp
xchg
inc
mov
cmc
add
pop
push
inc
or
test
outsb
pop
push
pop
pminub
es
je
data16
test
xchg
ret
mov
mov
ljmp
add
dec
push
pop
sub
push
loopne
pop
add
jno
sub
xchg
jecxz
bound
push
push
in
scas
push
repnz
outsb
push
mov
mov
and
andl
jb
in
popf
inc
cmpl
in
pop
jnp
mov
lret
call
jg
cli
xorl
adc
sub
adcb
push
and
pusha
cwtl
mov
or
addb
mulb
fcoms
fisubs
stos
les
loope
pop
icebp
pop
movsl
push
sbb
shrl
aad
jg
test
xlat
mov
push
rolb
test
cmpsb
pop
sbb
movaps
sti
out
xchg
or
repnz
arpl
xchg
sahf
daa
ficomps
jmp
dec
adc
add
imul
mov
or
cld
test
popf
rclb
mov
push
mov
xchg
mov
adc
and
movsb
arpl
clc
fistpll
dec
mov
inc
dec
iret
jb
cmpl
out
ficompl
ret
testl
fisttps
and
lahf
add
inc
xor
pop
insb
out
jle
movsb
push
xchg
je
push
adc
adc
sbb
xchg
adc
or
pop
cmc
add
scas
cld
and
xchg
mov
xlat
sbb
add
mov
sub
and
dec
sahf
xchg
add
mov
mov
xor
or
dec
and
shrb
mov
push
or
dec
cmp
push
clc
xchg
in
ret
aas
add
xchg
push
xchg
aaa
divb
and
mov
roll
repnz
mov
push
out
lods
sub
cld
imul
hlt
fiaddl
push
sbb
adc
pop
dec
dec
clc
dec
negb
or
lret
mov
ret
data16
mov
xchg
fbstp
shll
ja
sti
mov
sbb
xchg
add
subb
lods
pop
lock
sbb
divb
andl
dec
mov
cltd
dec
jecxz
add
rcl
or
scas
fbstp
mov
outsl
testb
jl
mov
daa
fbld
jg
jl
cld
and
add
or
push
lret
loope
and
cld
pop
inc
xchg
test
pop
call
adcl
dec
sbb
cmp
stc
clc
mov
lcall
mov
imulb
adc
inc
mov
cmp
mov
subl
xor
or
sti
jbe
add
jl
dec
mov
adc
pop
cli
push
or
push
aaa
cs
inc
sbb
lods
sbbb
adc
lret
mov
testl
fwait
sub
dec
adc
jae
lea
and
push
call
movb
xor
rol
fidivl
xor
dec
cmp
push
lahf
mov
and
dec
fbstp
inc
add
dec
adc
fistpl
push
push
dec
adc
push
inc
lret
leave
inc
mov
out
mov
push
push
adc
cmp
movsb
cli
xor
nop
and
sub
cld
dec
daa
nop
test
adc
daa
add
xor
test
loope
sbb
lock
sub
hlt
mov
movsb
inc
aam
xor
outsl
jg
push
popaw
out
or
mov
out
jno
imul
mov
cmp
out
dec
sub
pop
xchg
add
sbb
loopne
mov
fidivrs
sub
mov
cmp
aad
js
inc
push
sti
pop
pop
mov
adc
bound
data16
jge
sub
mov
shlb
repz
sbb
lods
push
adc
mov
mov
xor
testb
insb
or
ret
mov
enter
in
out
ret
nop
lahf
out
and
std
ficoml
add
aam
dec
adc
aaa
sbb
call
push
movsl
clc
or
es
sbb
loop
je
mov
mov
fxch
jle
pushf
icebp
cwtl
or
ss
add
hlt
xor
or
jmp
call
ret
incb
arpl
add
sub
xchg
push
cmpsb
int
iret
xchg
daa
add
je
sub
std
sub
and
roll
xchg
call
push
ljmp
sub
pop
sub
shll
movsb
inc
push
inc
cmpsl
lock
fiaddl
nop
dec
fdivl
cli
decb
int
pop
pop
jne
add
or
dec
cld
or
popf
das
mov
adc
arpl
insl
mov
push
and
ja
mov
icebp
clc
into
icebp
outsb
sub
idiv
aas
dec
jl
adc
iret
dec
stc
repz
inc
mov
cmp
repnz
jno
inc
mov
pop
mov
jb
dec
add
push
push
cmp
jo
popf
or
ret
adc
push
adc
mov
inc
ror
dec
rorb
das
popa
mov
int3
add
mov
mov
push
push
sti
push
in
out
cmpsl
adc
aam
push
push
pop
or
lea
xchg
mov
xchg
cmc
js
scas
mov
das
xchg
movsl
rcr
arpl
push
rorl
mov
xchg
hlt
cmpsb
ret
add
mov
aaa
sub
jmp
mov
mov
out
add
sbb
cmp
test
push
dec
cs
add
cmpsb
jg
push
nop
stos
pop
push
fdivr
mov
adc
mov
cmpsl
mov
jmp
mov
fidivs
loopne
xor
stos
negb
xchg
push
adc
jae
fdivrl
push
int
pop
and
icebp
jle
lock
and
stos
test
pop
sbb
sbb
rclb
dec
adc
scas
xor
imul
mull
pop
fimuls
pop
std
insb
in
mov
jecxz
sub
mov
add
out
mov
cmpsl
test
push
loop
or
and
push
cmp
pop
clc
sbb
inc
out
lcall
mov
mov
xlat
push
sbb
add
cmp
outsl
mov
jo
es
jg
leave
data16
pop
pop
xchg
xlat
test
loop
add
loopne
sbb
pop
add
xor
or
ret
sub
clc
stos
jnp
sti
push
shrl
in
add
call
loope
sahf
add
dec
and
add
std
pusha
cmpsl
mov
xor
fldenv
loope
stos
divb
inc
and
test
mov
sbb
push
and
sti
mov
loop
cli
adc
push
or
je
pop
test
inc
or
fwait
outsb
sub
sub
fldcw
sub
mov
rcll
jbe
push
scas
cmp
jg
push
pop
adc
incl
imulb
add
sub
adc
test
inc
and
lcall
das
mov
sub
or
xor
mov
adc
rcrl
lret
pop
and
adc
aad
dec
cmp
pop
push
push
and
or
or
les
or
push
push
push
outsl
mov
jbe
dec
xchg
mov
stos
sbb
cld
inc
inc
loop
jnp
mov
cld
aaa
push
and
lret
sahf
or
rcrl
and
jne
int3
cmp
fwait
xor
ljmp
mov
pop
sbb
or
xor
fwait
cmc
cs
jecxz
cli
xchg
fcoms
push
or
sbb
hlt
push
mov
out
outsb
rol
sub
jns
clc
incl
daa
mov
inc
fwait
imul
adc
rolb
mov
addl
cltd
mov
and
or
rol
sub
mov
shr
outsl
fmuls
add
push
add
ljmp
mov
cs
andb
loopne
jecxz
inc
lds
pop
int3
adc
movsl
fiaddl
jge
mov
push
lods
xor
rdmsr
mov
lods
sbb
ds
daa
lret
test
int3
fists
call
sahf
push
loop
icebp
pusha
xor
cs
cmp
cltd
lcall
add
adc
push
lods
fsub
push
sub
push
shl
je
xor
fimull
sbb
jp
dec
fmul
enter
pusha
idiv
xchg
out
out
ret
leave
jnp
call
add
idivl
pusha
enter
add
cli
leave
mov
sub
pop
mov
jg
fisubl
outsb
ret
in
fistpll
ja
stos
lods
sti
stos
sub
into
push
fwait
aam
aas
jle
jle
into
jbe
mov
sub
iret
addr16
enter
out
js
test
xor
mov
repz
mov
hlt
leave
inc
xchg
sarb
loop
rclb
pop
sbb
lock
ds
rol
scas
clc
fs
int
cmp
push
dec
sbbl
cmp
sub
inc
sbb
lock
fstpt
mov
sub
xor
mov
test
jae
aam
mov
bound
pop
dec
jmp
jo
push
jb
outsl
cmp
add
push
add
adc
add
jbe
mov
adc
mov
test
pushf
ret
jnp
test
mov
mov
sub
ja
call
test
cmc
clc
movsb
int3
inc
or
bound
push
movsl
bound
mov
nop
sub
jo
out
mov
jo
cmc
cwtl
jmp
lret
sub
push
push
mov
jp
push
jns
cmpsb
push
or
or
adc
iret
ss
shrl
add
leave
icebp
or
lods
scas
loopne
dec
xchg
cli
dec
rolb
add
jge
pop
add
mov
out
repnz
inc
mov
xchg
outsb
scas
pop
inc
push
or
aam
clc
int3
inc
test
js
cmp
mov
cwtl
or
cmc
test
mov
aas
pop
and
cmp
negb
jne
and
aam
cmpsb
testb
or
sbb
dec
nop
or
sbb
in
das
xor
dec
sub
outsl
cmc
pop
xlat
pusha
nop
and
adc
pusha
xchg
xor
mov
jae
lcall
sti
bound
pop
cmpb
sub
loopne
add
loop
push
jecxz
stos
psrad
jmp
movsb
ljmp
cld
push
pop
cld
mov
ds
rcrb
mov
push
mov
inc
sbb
xlat
dec
cmpxchg
lcall
and
adc
push
fs
jp
dec
mov
pop
sub
cmpsl
push
adc
test
loop
imul
adc
or
ds
sbbb
fwait
scas
dec
mov
sbb
jmp
inc
fcmovu
lahf
add
or
insl
sub
push
lods
push
mov
int3
ds
rcrb
push
dec
or
inc
cmp
pop
mov
leave
xchg
mov
arpl
lock
xchg
lds
arpl
inc
ficomps
aas
mov
adc
pop
jae
and
arpl
jo
adc
ret
add
pop
push
int3
les
fldcw
mov
imul
cs
or
ret
shrb
mov
stos
mov
outsb
mov
std
add
fmulp
shlb
fsubs
js
fsub
adc
mov
in
inc
test
mov
arpl
rolb
push
jl
sub
jmp
mov
or
jmp
aas
inc
push
roll
and
push
dec
arpl
jg
mov
cwtl
xchg
inc
and
or
ss
cmp
pop
loopne
cmpsl
pop
ss
lret
out
addr16
fistps
add
es
decl
cltd
clc
xor
mov
rolb
cwtl
inc
mov
fdiv
mov
mov
clc
jg
push
lcall
rorb
sbb
xchg
test
cmp
lret
call
pop
int
mov
sti
repnz
pop
push
les
in
and
xor
ss
loop
hlt
sub
xor
test
pop
xor
mov
or
mov
inc
push
jb
imul
aas
jle
sti
fwait
cmc
stos
dec
sbb
daa
push
push
and
add
xchg
aam
and
in
jb
push
add
jge
shrl
or
movsl
dec
insl
je
inc
scas
in
mov
cmpsb
jge
add
mov
in
inc
add
pop
fmull
mov
lahf
fimuls
pop
mov
movsb
inc
repnz
jo
mov
icebp
dec
jmp
xchg
push
inc
and
daa
push
mov
inc
push
xor
pmullw
sbb
outsb
jno
les
dec
scas
jp
jle
push
push
dec
andl
out
jb
ss
pop
add
push
dec
add
jp
je
push
add
inc
int
cs
mov
stc
lods
push
mov
xchg
add
xorb
or
add
je
inc
push
adc
push
out
mov
incl
loope
repnz
xchg
sbb
inc
xchg
lock
adc
insb
call
cltd
lds
lahf
aam
fdivrp
mov
testb
out
insb
not
inc
fwait
inc
mov
pop
pop
push
mov
daa
sub
cmc
mov
insb
xchg
stos
int
ds
or
jmp
outsl
out
jb
mov
push
hlt
test
jle
sbb
aas
xchg
outsl
lea
loopne
mov
inc
sbb
jnp
adc
sbb
jmp
insb
sub
cmp
push
inc
mov
push
adc
ss
clc
xchg
js
sbb
pushf
jbe
adc
pop
shlb
ja
xchg
cmc
add
dec
dec
jl
fmull
xchg
ja
inc
sbb
and
jnp
and
lock
std
sbb
jle
mov
ljmp
xor
pop
pop
aas
inc
mov
push
pop
ljmp
jl,pt
mov
push
mov
adc
and
push
add
sbb
mov
hlt
cltd
jecxz
fidivrl
je
mov
icebp
push
jo
data16
jbe
test
push
push
movb
subl
sbb
cmp
sub
movsl
cli
sahf
or
push
shrl
rorb
ret
cmp
pop
push
dec
cmpsb
ret
mov
imul
pop
cld
mov
aad
or
xor
int
or
jmp
adc
jmp
std
mov
pop
jle
xor
jge
dec
pop
or
lahf
xchg
jno
outsl
mov
in
push
jg
push
mov
mov
add
aam
mov
mov
inc
loope
lret
cmp
mov
lcall
movsb
mov
jae
jl
xor
jmp
outsl
loope
loopne
xchg
mov
es
adc
lcall
xchg
inc
aam
push
sub
mov
and
loop
push
cmpsl
jb
push
lds
xchg
sbb
and
adc
sarl
pop
ret
ja
jmp
mov
sbb
adc
pop
test
sbb
push
sbbl
scas
cmpsb
lret
push
pop
mov
add
sbb
enter
dec
push
sbb
xor
mov
sti
aaa
xor
mov
std
jg
js
sbb
or
loopne
mov
mov
insl
loopne
xorb
adc
test
or
inc
jnp
fbstp
js
adc
mov
push
jg
jmp
xlat
sub
xor
adc
inc
add
xchg
push
clc
mov
icebp
out
hlt
sub
push
pmulhw
jp
mov
fldt
or
fmull
add
push
roll
in
mov
test
test
call
repz
inc
pop
sarb
mov
jne
cli
clc
and
xchg
add
fsubrs
std
dec
xor
call
dec
add
outsb
pop
mov
mul
pop
stos
bound
mov
cmp
aam
sbb
mov
xchg
js
lods
mov
clc
call
fwait
push
sub
mov
cmp
adc
insb
push
xchg
out
xor
sahf
cmp
sbb
loopne
pop
je
pusha
sbb
lahf
sub
pop
sbb
gs
aam
fnstcw
push
add
jmp
pop
scas
ljmp
jl
push
mov
idivb
pop
fiaddl
das
in
mov
inc
or
inc
mov
negb
cld
xor
inc
jo
je
mov
inc
xchg
mov
push
mov
mov
lods
iret
add
mov
ret
jne
ss
pusha
inc
shlb
in
mov
and
mov
jo
iret
mov
mov
es
faddl
xchg
mov
lahf
iret
sbb
mov
movsb
outsl
cld
fistl
sbbl
sbb
mov
xchg
jl
add
add
xor
loopne
pop
sar
cmc
cmp
imul
lret
sbb
ljmp
scas
dec
push
sbb
dec
mov
xorb
insb
push
decl
rcll
inc
popl
pop
mov
mov
mov
push
cwtl
shl
inc
loop
jmp
call
mov
jae
dec
outsb
mov
mov
cld
add
sub
mov
or
cld
outsl
inc
int3
adc
inc
aaa
dec
mov
scas
mov
push
lret
inc
sbb
cmp
out
popa
xchg
add
cld
mov
movsb
cli
mov
stos
outsl
cld
jg
dec
nop
jecxz
loopne
cmpb
inc
add
cld
ja
sbb
out
inc
pushf
adc
xchg
mov
or
and
das
xor
or
jmp
leave
imul
push
test
jmp
inc
inc
outsb
cmp
xchg
jle
inc
inc
mov
push
call
add
ljmp
ret
aam
sarb
mov
add
mov
cmp
js
mov
bound
xchg
cmp
outsl
cli
dec
std
repnz
cmp
test
mov
or
aas
mov
mov
aad
xchg
div
test
scas
mov
inc
fistpll
decl
loopne
arpl
sbb
xor
hlt
clc
and
loop
fst
mov
lock
inc
lahf
push
fwait
inc
add
clc
mov
shlb
ljmp
loop
addr16
pop
hlt
or
lock
fisubrl
lcall
push
mov
cmpsl
or
les
int
fs
je
jl
test
cltd
pushf
cli
mul
ret
push
clc
pushl
push
call
cmp
dec
cmpsb
pop
pop
sub
and
cs
sub
popf
jle
rcll
insb
rcll
mov
xchg
insl
lret
decb
or
mov
pop
dec
mov
push
cmp
shl
out
sbb
dec
ret
and
push
es
pop
push
push
cmp
faddl
xor
pushf
rcrb
sarl
jg
push
jl
cli
add
mov
int
sub
mov
aaa
aad
pop
jo
lcall
or
cmp
add
rcrl
or
sar
jg
adc
nop
loop
sub
mov
jl
ja
mov
sub
pop
popa
jb
dec
xchg
fsubl
add
outsl
movsb
and
xor
sub
loopne
mov
jo
pop
sub
jb
inc
cmp
pop
lock
lret
and
and
add
push
test
pop
or
mov
pusha
xlat
adc
sbb
jp
test
mov
scas
mov
inc
loop
mov
xchg
push
and
lret
mov
xor
push
push
nop
es
push
cmpl
sub
outsl
jnp
int3
or
test
mov
std
pop
add
pop
xchg
xchg
sbb
ret
cmpsb
add
push
loop
pop
mov
ljmp
sbb
fistps
jp
call
out
adc
mov
insl
dec
nop
imul
xchg
jecxz
mov
mov
pusha
popf
xchg
aaa
pop
add
mov
xor
cld
jg
push
pop
sub
jmp
or
and
xor
stos
std
ljmp
push
mov
sub
cmp
stos
gs
xchg
cwtl
mov
imull
inc
inc
fbld
or
test
je
xchg
and
mov
out
and
add
mov
out
and
cld
loop
mov
pop
mov
scas
jg
fstpt
xor
adc
push
push
mov
xor
mov
dec
dec
loopne
sub
addr16
mov
push
jmp
cmc
fwait
add
lret
mov
aam
pop
sub
nop
mov
notl
movsl
aas
sbb
arpl
jae
in
lods
xchg
xchg
enter
aad
inc
shlb
add
ja
aam
jo
shl
mov
filds
mov
hlt
fdivrs
fcomip
xchg
xchg
aam
xchg
jmp
or
cld
inc
movsl
enter
jmp
xchg
and
push
cli
xchg
sbb
int
mov
xlat
or
jne
loopne
aam
insb
loop
mov
insb
lock
sub
adc
out
nop
mov
jg
add
push
cmpsb
scas
xchg
out
mov
fisttps
cmpsl
ja
push
pop
ss
xlat
mov
jg,pt
andl
shr
and
scas
clc
das
cmp
push
pop
cmp
test
xlat
adc
movsb
imull
sub
lcall
out
fcomps
lcall
sbb
negb
push
pop
lock
push
enter
dec
clc
sub
sbb
mov
add
mov
or
xchg
adc
add
call
jmp
jb
shll
inc
enter
scas
and
or
hlt
xor
adc
push
inc
cmp
push
add
pop
sbb
clts
jnp
mov
mov
ja
jp
sar
mov
jmp
pop
dec
and
mov
fldcw
insb
inc
mov
fwait
mov
bound
outsb
or
push
push
xor
cmp
push
sarl
xchg
cmp
imul
adc
mul
mov
sub
lea
mov
push
jns
mov
xor
pusha
add
test
xchg
pusha
cltd
inc
int3
add
sar
int
roll
call
jo
ja
cmp
stos
mov
jmp
add
push
xlat
jne
std
mov
popa
lahf
mov
jmp
cmpsl
or
ja
aaa
loope
cmp
dec
sbb
xor
subb
and
push
call
adc
lock
aaa
in
imul
outsl
inc
adc
mov
adc
add
lock
mov
cmp
push
stos
push
call
lea
nop
cli
call
xor
add
cld
divb
repz
inc
and
adc
inc
inc
xchg
rorb
mov
daa
subl
dec
dec
mov
dec
dec
pushf
outsb
mov
orl
inc
dec
stc
jo
pusha
std
popa
jne
cld
in
jp
dec
aam
test
insl
cli
xchg
dec
ja
lock
jge
and
out
xchg
popa
push
sti
mov
and
sbbb
movb
sub
xchg
mov
shl
rolb
imul
out
pop
cmp
movsb
jne
clc
mov
les
cmp
imul
add
sbb
arpl
pop
aad
test
xor
imul
popa
clc
addr16
jg
jg
fimuls
xchg
mov
aam
jle
hlt
push
std
lret
loop
pop
ljmp
mov
dec
sbb
jl
or
and
in
lret
insb
and
stc
mov
lods
cmpsl
loope
sbb
repnz
dec
mov
test
jg
insb
ljmp
imulb
fimull
cmp
out
ret
out
add
test
dec
dec
mov
mov
pushf
sbb
push
icebp
imull
fcoml
mov
les
cmc
in
hlt
or
sti
lock
nop
fisubrs
ret
push
ljmp
das
js
inc
data16
jns
aaa
shlb
push
dec
sub
add
mov
aas
dec
std
inc
pop
arpl
mov
lock
jle
xchg
cs
int
and
decl
outsl
xor
add
in
cmpsb
sbb
test
inc
daa
mov
fldl
shrb
ja
sub
shrl
leave
enter
jbe
dec
pop
stos
fdivrp
jg
inc
pop
fidivrl
adc
mov
orb
add
push
jmp
add
jg
inc
pop
hlt
sub
std
pop
std
out
dec
jle
loope
mov
in
cmp
push
cmp
and
addl
test
adc
xor
inc
cmp
imul
int3
xchg
add
jg
pop
jp
lret
stc
and
and
ljmp
add
cwtl
xchg
iret
test
mov
fld
fisttpll
or
lea
sbb
inc
loopne
and
xor
ret
test
cmp
inc
insb
ja
in
mov
cmpsl
jbe
add
cld
add
inc
adc
pop
imul
fdiv
jmp
pop
jb
std
mov
in
add
mov
scas
cmpb
dec
pop
loope
inc
pop
mov
dec
push
pop
sub
add
lret
dec
pop
lret
inc
cmpsb
notl
aad
not
jmp
enter
and
mov
cmp
sub
out
sub
jle
adc
loope
pop
xor
xor
mov
clc
sti
sub
or
pop
add
dec
insb
cwtl
jmp
adc
add
lock
icebp
adc
adc
and
sub
xor
add
test
or
or
jae
cmp
pop
mov
cs
mov
dec
add
adc
push
push
pop
mov
sbb
stos
xchg
xor
cmp
insl
mov
gs
adc
cmp
sarb
dec
lret
les
cmpsl
bound
inc
es
adc
imul
xor
fcoms
dec
jmp
mov
or
btr
xchg
xchg
pop
lock
adc
out
mov
jb
cmp
lods
mov
xchg
sub
xor
pop
xor
push
dec
xor
aaa
push
clc
lcall
jg
mov
addl
xchg
rolb
rcrl
xchg
cmpb
test
push
into
enter
es
popf
sub
mov
sbb
and
mov
imul
xchg
cmp
cmp
dec
adc
ret
dec
and
inc
sub
mov
scas
mov
sbb
movsl
fucom
sbb
ret
add
add
xchg
rolb
loopne
sbb
mov
push
adc
ret
pushl
cltd
cmpsl
dec
xchg
push
mov
push
int3
mov
fs
adc
ret
cs
scas
int3
leave
fidivrs
mov
and
ja
push
add
xchg
fbstp
aas
das
xor
push
inc
adc
xor
adc
nop
sbb
sahf
mov
insb
and
xchg
inc
and
dec
or
mov
shll
ss
push
jnp
push
dec
mov
in
aad
movsb
loope
inc
loope
dec
mov
add
and
lock
insb
inc
cld
jg
mov
and
pusha
pop
mov
add
cwtl
test
les
or
jle
lcall
cmpsl
fmull
inc
call
or
out
roll
scas
out
sbb
ja
bound
das
cli
jo
xchg
cmpsb
es
cs
insl
adc
pusha
es
notb
iret
subb
push
movsb
adc
mov
sar
leave
inc
or
and
or
fdivl
xor
pop
sbb
mov
jne
sahf
add
pop
movsl
inc
lock
ljmp
sbb
jne
adc
pop
fmul
mov
out
sbb
adc
test
rcrl
daa
pop
pushf
cmp
or
adc
movsl
dec
hlt
movsb
in
and
push
lahf
mov
or
test
stos
in
imul
test
ficomps
push
into
scas
xchg
enter
roll
arpl
mov
ja
push
dec
add
ud0
fists
inc
adc
mov
insl
xor
jmp
mov
roll
pop
lcall
out
ret
inc
lahf
sub
test
sub
arpl
cwtl
push
clc
pop
inc
cld
insl
sub
push
and
sub
adc
mov
push
enter
and
jg
jecxz
sub
sub
adc
pop
test
adc
cmpsl
mov
sbb
lock
cmp
clc
popa
pop
push
std
fbstp
in
popl
pop
test
push
sbb
and
lret
fld
add
enter
push
mov
test
test
jl
rol
loop
cli
arpl
xchg
jmpw
xchg
dec
scas
jl
mov
xor
jg
stos
adc
js
xchg
repz
jo
out
repz
and
jl
mov
push
mov
subb
fisubrl
lods
lock
push
push
adc
mov
mov
mov
cmp
hlt
shll
xchg
ss
push
pushf
dec
cld
sbb
sbb
pop
loop
imul
adc
sahf
int
sahf
push
sbb
shl
cmc
imull
mov
push
js
popf
sbb
push
mov
in
cmp
sub
test
cld
and
out
lret
lcall
in
ret
and
popa
inc
jmp
lahf
sti
in
loope
cmp
xchg
adc
mov
push
mov
pop
icebp
mov
sti
out
popf
scas
aad
outsl
mov
mov
xchg
out
xor
and
dec
in
cmpsb
mov
xor
dec
cmpsl
pusha
add
fwait
mov
xchg
dec
std
xchg
cmp
clc
pop
cmc
sbb
in
test
sbb
sbb
ljmp
repnz
ljmp
push
insb
add
daa
test
dec
mov
push
in
insl
add
jne
push
add
int
sbb
mov
cld
add
ja
and
sub
cli
sub
add
mov
aam
mov
mov
mov
popa
mov
sbb
incl
std
outsb
mov
loopne
pop
xchg
arpl
aam
jbe
inc
call
sahf
jnp
rol
push
xchg
pop
cld
push
inc
mov
icebp
mov
mov
push
ret
add
xor
inc
jl
cs
xchg
xor
mov
aas
xchg
sbbl
and
data16
bound
mov
sti
lcall
dec
or
mov
sahf
or
xchg
mov
rolb
dec
ss
imul
aaa
pop
cmp
xorb
cmp
fildll
pop
or
js
ljmp
push
xchg
adc
stos
xorl
stc
sub
push
cmp
jb
mov
rcl
test
rclb
add
xchg
dec
mov
add
pop
push
and
mov
jmp
pop
faddl
and
dec
cmp
push
xor
push
pop
rol
incl
lds
xchg
jbe
addr16
push
decl
aaa
cmp
outsb
inc
je
inc
clc
add
and
je
insl
loop
add
push
inc
pushf
imul
orb
lds
add
push
and
rcll
fwait
jg
xor
xorb
addr16
addr16
das
and
and
inc
or
dec
test
outsb
or
xor
mov
pop
push
adc
adc
xchg
or
sti
push
mov
movsl
add
cs
xlat
cmpsl
or
push
inc
clc
sub
push
scas
push
into
adc
outsb
sahf
decl
xorl
ds
sbb
dec
pop
xchg
sub
and
dec
icebp
adc
sub
pop
pop
pushf
push
push
flds
fwait
mov
cmpsb
mov
sbb
mov
add
inc
xor
push
push
setge
mov
xor
or
in
mov
fcompl
iret
ss
jg
adc
imul
mov
decl
xchg
push
daa
adc
mov
xchg
mov
fcmovu
dec
push
jp
mov
pop
or
push
call
lea
sbb
movsb
les
sub
js
push
cmp
aaa
std
push
jnp
add
imul
out
jmp
call
fildl
pop
popa
xor
in
jo
xchg
push
nop
push
sbb
cmc
mov
out
pop
and
pop
adc
ss
adc
std
fbld
mov
jp
cli
lds
cld
test
fidivs
loopne
and
imul
cmp
push
loope
mov
lock
std
lods
lcall
or
arpl
xchg
sbb
or
fs
dec
add
mov
jg
cltd
test
test
mov
outsb
js
icebp
popf
jmp
mov
sub
ljmp
or
cld
insl
inc
inc
and
sub
loop
adc
adc
lcall
cmpsb
test
popa
adc
mov
nop
cmp
lock
add
pop
sti
orl
pop
push
sbbl
or
jns
push
data16
sub
or
shl
aaa
adc
test
push
ret
dec
or
loopne
xor
push
dec
sbb
orb
test
incl
rcr
jecxz
adc
loop
inc
cmp
mov
rcl
push
sub
pop
imull
sbb
mov
ss
testl
dec
push
repz
cmp
push
movntq
out
sub
sbbl
sub
jg
movsl
push
mov
jae
add
sbb
xchg
ljmp
jmp
clc
sti
xor
sbbl
add
adc
add
pop
cli
fcomip
sbb
jns
adc
adc
and
fisubs
ljmp
sub
jb
sbbl
sbb
pop
cmp
xchg
decl
jecxz
sub
in
in
mov
ljmp
jmp
mov
pop
icebp
push
inc
fmuls
inc
xor
cltd
cwtl
in
movsb
push
or
lcall
out
int3
cmp
fdivrs
and
xor
push
mov
mov
or
cmc
and
nop
jae
adc
pop
ror
jbe
mov
sbb
xchg
xor
outsl
aaa
mov
sti
test
bound
mov
sbb
sub
xchg
add
in
and
test
add
xchg
shr
sbb
pop
cmc
outsb
or
xchg
sub
cmp
jb
jo
mov
inc
add
in
mov
clc
fnsave
adc
xlat
mov
cmp
cmp
cmp
fwait
lock
mov
test
sbb
es
in
sar
pop
cmpl
int
leave
clc
fcomip
inc
jbe
add
and
cmp
pop
pop
jg
das
mov
or
push
fiadds
mov
pop
mov
xor
ficoml
cs
push
push
mov
jbe
loope
aaa
std
pop
mov
insb
andl
ret
fcompl
push
push
or
fisttps
ret
jle
jl
push
popf
fstpl
leave
clc
lcall
fcmovu
repz
jmp
rorb
xchg
xchg
adcl
ljmp
xchg
sbb
xchg
lret
nop
data16
std
dec
aad
push
nop
ds
outsl
add
push
fldenv
movsb
cli
ljmp
cmp
push
insb
add
ja
scas
repz
aam
stos
sub
mov
cmpsb
push
ret
xchg
es
lret
dec
dec
popf
loop
int
mov
test
push
cmpsb
and
movsb
mov
addr16
mov
aaa
sbb
popl
in
lock
fwait
leave
fs
ss
fwait
cs
sbb
testb
adcb
daa
and
fsubrl
or
adc
jg
clc
mov
std
ljmp
rcl
cmp
fsubrs
aad
xor
rol
stos
add
mov
push
ds
or
inc
in
jne
mov
movsb
xchg
inc
xchg
fst
mov
imul
jle
cli
test
inc
and
jg
mov
stos
leave
popa
popa
sbb
pusha
pop
cmp
gs
mov
or
mov
cmp
mov
arpl
lcall
push
push
or
pop
pop
mov
dec
dec
incb
dec
xchg
cli
popa
jg
test
outsb
push
ja
rcll
lahf
mov
cmpb
rcl
add
or
mov
std
scas
das
adc
jl
out
or
inc
sbb
std
out
cli
scas
push
notb
lcall
sub
mov
pop
add
add
mov
andl
and
or
xchg
add
adc
pop
mov
mov
cmp
mov
push
mov
movsl
push
popa
adc
cmp
cmc
lods
insl
xor
lahf
mov
cld
hlt
dec
add
or
gs
out
add
or
sbb
pop
in
shlb
fiadds
outsb
cmp
adc
test
mov
and
leave
movsb
mov
aaa
or
jo
mov
pop
xchg
add
cli
mov
cmpsb
xchg
cmp
jp
imul
movsl
push
jl
push
movsb
add
cmc
inc
cmp
push
cmpb
shll
xchg
inc
fisttps
jmp
lcall
inc
inc
pop
sbb
sub
lcall
mov
push
cmpsb
sbb
and
out
lock
dec
sar
dec
mov
rorl
addr16
inc
dec
ja
xor
or
pop
out
push
mov
or
and
mov
fstl
xor
cmp
icebp
mov
pop
cld
push
pop
icebp
and
popw
negl
cvttps2pi
lock
sub
sub
test
sub
cli
fcomip
daa
add
jno
xchg
iret
sbb
cmp
call
pop
inc
daa
sbb
cli
aam
loope
mov
in
inc
cmp
or
cld
test
call
jmp
xchg
cmp
inc
push
mov
fs
add
lcall
mov
mov
adcl
and
add
mov
pop
nop
dec
dec
imul
jp
test
xchg
and
push
inc
xlat
xor
mov
and
cmc
idivb
mov
mov
popf
jo
mov
or
push
cs
sahf
sub
jmp
fsubs
inc
inc
sbbb
adc
jp
das
es
out
inc
pop
pop
iret
test
stc
into
inc
sbbb
adc
mov
or
xchg
mov
loopne
pushf
loope
sub
aad
push
ss
or
js
imul
add
sbb
sub
cmp
xchg
fdivrp
inc
adc
cmp
imul
ret
orb
scas
clc
adc
imul
leave
mov
adc
sub
fimuls
xchg
insl
cmp
outsl
clc
incl
xchg
pop
fmuls
loop
pop
add
lods
iret
int3
jp
test
and
add
stos
mov
mov
xor
mov
mov
dec
call
pop
push
xor
inc
push
bound
jae
sti
mov
outsl
xchg
icebp
mov
sub
in
loop
ja
mov
pop
andb
add
cmpsl
cwtl
test
sbb
cwtl
or
dec
ja
cmp
repz
push
fbld
cltd
fisttpll
or
fwait
rol
cmp
adc
cmpsl
push
sbb
jmp
clc
sub
movsb
mov
test
mov
jp
ss
sbb
pop
add
mov
jg
xchg
mov
jo
popf
stos
outsb
mov
in
adc
pop
lods
cmp
jl
xor
xor
cld
stos
and
xchg
pop
mov
lret
enter
mulb
cld
pop
adc
xchg
fadds
xchg
push
add
cli
out
xchg
cmp
shrb
mov
cmpsb
sbb
jb
lds
rclb
mov
popa
mov
inc
dec
push
rol
sar
or
mov
sub
jle
test
repnz
xchg
or
out
es
pop
out
xchg
pop
inc
stos
and
fiaddl
inc
add
stos
or
dec
sub
inc
dec
inc
lahf
and
lcall
lea
cmp
adc
dec
lds
pop
std
and
das
shrb
fldl
or
call
loop
nop
cmc
mov
lcall
adc
loope
movsl
jne
add
mov
add
xlat
jg
mov
je
push
jnp
xor
push
outsb
xlat
or
fcmovnb
cmp
daa
sub
stos
data16
mov
add
cs
incb
mov
jle
clc
sbb
outsb
cmp
imul
xchg
shlb
movb
int
sub
and
hlt
inc
xchg
add
or
mov
clc
push
jb
xchg
push
nop
js
sbb
adc
cmc
jg
pop
rclb
sub
scas
xor
dec
pushf
fsubr
outsl
outsb
out
nop
jbe
ds
mov
fsubl
loopne
add
out
push
add
cmp
std
loopne
repnz
dec
leave
xchg
hlt
leave
cmp
js
and
cld
mov
adc
cmp
push
and
sub
sbb
loop
push
mov
dec
enter
orb
or
fstps
pusha
je
push
fsubrs
push
mov
pushf
mov
mov
mov
pcmpgtb
push
mov
incl
push
cmp
repnz
xorb
pop
jle
and
adc
push
mov
stos
cmp
stos
jecxz
mov
in
push
ljmp
cmc
push
scas
mov
repnz
imulb
leave
jl
or
sbbl
adcb
adc
pop
insl
loopne
pop
ret
je
add
sbb
mov
push
es
fdivs
mov
sbb
lcall
xchg
xchg
sbb
mov
mov
fstpl
out
loope
xchg
dec
cmp
out
daa
and
pop
mov
dec
mov
and
cmp
fcomip
lds
fwait
addr16
int
jge
or
and
xchg
xchg
push
and
xor
lret
in
jbe
push
and
push
imul
ret
pushl
loopne
xor
xlat
imull
sahf
add
iret
add
cmp
add
mov
cld
push
or
cmc
sbb
inc
daa
pop
jno
jl
cld
test
imul
dec
stos
adc
cli
xor
add
ret
mov
adc
and
fbstp
hlt
push
push
and
jle
aas
dec
repnz
decb
fnsave
sub
sti
or
push
adc
dec
pop
add
into
push
mov
pop
adc
mov
add
adcl
jge
inc
cmp
inc
test
je
mov
dec
decl
jbe
and
push
or
mov
jno
shrb
lds
xchg
fists
cld
mov
push
adcb
es
jg
sahf
push
popa
out
sub
test
xchg
clc
decl
add
pop
pop
sahf
lods
ret
sbb
inc
testb
inc
mov
sahf
lret
and
outsb
xchg
cmpsb
push
cli
aad
dec
push
test
jb
xorb
push
shll
sbb
leave
test
push
sbb
or
nop
daa
jle
cld
cld
push
pushf
cmp
pop
ret
jle
inc
loope
mov
add
xchg
mov
mov
pop
cmp
scas
sbb
sub
mov
dec
mov
mov
ds
add
test
ljmp
jae
push
ljmp
adc
mov
inc
sbb
dec
sub
jmp
jo
pusha
dec
gs
add
mov
cmp
arpl
jno
fsubp
clc
ss
scas
mov
push
pop
sbb
or
pushf
cltd
shll
pop
jno
push
cmp
fidivrs
and
aaa
jb
and
push
aam
into
fcomip
test
jge
add
push
mov
push
jmp
cmp
or
loopne
js
jne
cli
fwait
dec
sub
and
xchg
mov
rclb
jp
mov
xchg
insb
aam
decl
mov
es
gs
mov
out
cwtl
cmpsb
call
push
in
imul
push
add
jg
les
or
lds
adc
lcall
or
push
and
push
repz
push
decl
xchg
inc
inc
rcr
and
mov
cwtl
sbb
mov
push
pop
add
push
aam
ucomiss
aaa
ret
flds
xor
and
insl
push
add
push
mov
adc
mov
add
xor
mov
or
es
fsts
add
xchg
pop
push
pop
and
or
andb
hlt
inc
jecxz
in
jmp
out
clc
or
arpl
sub
cld
rcl
dec
adc
and
pop
adc
addl
cld
js
cmp
adc
xchg
push
data16
pop
adc
and
xchg
les
orl
jp
std
xchg
cmp
jo
add
ljmp
pushl
xor
or
loop
add
push
mov
movsb
pop
aad
xchg
push
clc
jmp
xor
test
lahf
aas
push
jb
loopne
inc
in
mov
imul
inc
ret
xlat
and
cmp
pushl
add
push
pusha
decl
divl
mov
push
lock
pop
icebp
outsl
pop
lcall
les
iret
dec
or
xchg
add
or
stc
jg
cli
fwait
sbb
fisubs
xor
sub
add
test
cmp
loop
mov
jmp
pop
mov
xor
or
test
popa
fidivrs
mov
sub
sahf
jmp
adc
ret
icebp
aaa
mov
pop
icebp
fidivl
cwtl
fsts
mov
ds
pusha
dec
or
jo
push
dec
shlb
inc
push
out
or
xchg
es
push
pop
add
loope
pop
and
jns
lret
test
pop
add
xchg
fistpl
xor
and
shrb
add
cli
std
or
imul
pop
jl
inc
push
push
dec
mov
jl
insb
inc
stc
xchg
xlat
repnz
stos
enter
dec
fldcw
sub
sti
sub
pop
and
add
in
push
or
cmp
adc
add
test
mov
inc
jb
out
jno
mov
call
jno
dec
xor
push
dec
push
mov
dec
adc
push
xchg
cmp
cmp
xchg
xchg
imul
add
xorl
add
adc
fnsave
shll
loopne
mov
jle
dec
xor
loop
jg
lret
or
sub
adc
sub
adc
loopne
dec
sub
mov
pop
das
add
mov
sbb
add
hlt
mov
pop
and
shlb
dec
and
insb
fcomps
sbb
popa
jnp
mov
inc
roll
xor
or
lcall
cmpsl
sbbb
and
es
mov
jl
es
sbb
or
cmp
push
inc
adc
add
mov
int3
test
inc
push
into
push
subl
pop
aam
les
inc
pop
inc
xchg
pop
psrad
inc
jb
xor
lock
dec
dec
jmp
aad
add
arpl
xchg
imul
std
pop
mov
insb
ss
insl
pop
and
push
mov
rcl
inc
sub
or
out
rorb
jmp
ffreep
ss
bound
enter
jbe
push
out
decl
pop
add
adc
sub
iret
mov
xchg
aaa
pop
push
mov
ljmp
rorb
aaa
adc
xor
mov
decl
jl
in
add
jbe
or
and
incl
dec
lds
lds
mov
sub
add
scas
push
adc
xorb
cld
pusha
push
daa
push
mov
mov
xchg
jbe
and
les
add
or
sub
xlat
dec
outsl
aam
sub
ret
adc
dec
inc
xchg
xchg
test
lock
push
jecxz
and
sarb
scas
je
xor
xchg
test
adc
pop
es
inc
jecxz
fidivrs
xor
mov
jno
insb
or
mov
pop
mov
test
adc
jb
daa
sbb
add
xchg
add
sub
fadds
mov
or
xchg
arpl
mov
xchg
cmp
cmpsb
aaa
sbb
ss
sbb
mov
aam
imul
daa
cs
dec
add
fidivrl
dec
rolb
ret
dec
jne
add
sub
inc
icebp
add
popf
faddl
xor
in
xchg
xor
mov
fisubrl
cltd
and
mov
push
mov
inc
xchg
stos
pop
mov
out
jp,pt
cmp
pop
setle
lcall
jl
push
nop
ret
pop
sub
jnp
sbb
test
and
push
cmp
lock
rcrl
xor
or
xor
scas
imul
add
sbb
out
out
inc
addb
mov
out
mov
test
xchg
repnz
shrl
idivb
shlb
dec
ret
test
pop
fwait
rclb
mov
idiv
cmp
lea
or
dec
push
enter
adc
add
das
push
ss
and
inc
sub
cmp
add
mov
mov
xchg
pop
int3
int
jo
jb
inc
nop
ret
pop
subl
pop
popf
inc
loopne
and
add
add
ds
adc
nop
ss
ljmp
inc
mov
push
or
aas
inc
dec
mov
lcall
jne
loopne
or
fiadds
inc
pop
stc
mov
mov
xchg
jne
or
dec
lods
movsb
xchg
add
out
add
enter
inc
loop
aam
dec
mov
add
outsb
add
sbb
and
insl
mov
cmpsb
in
cmp
push
mov
outsb
enter
jnp
jle
lock
lods
push
push
fdivrl
cmp
fisttps
push
pop
xchg
mov
pusha
out
adc
cwtl
or
adc
aas
clc
lahf
addb
add
lea
movsl
repz
rdmsr
popl
hlt
xchg
inc
scas
jne
pusha
xor
hlt
loopne
stos
add
out
mov
popl
mov
mull
ret
test
ljmp
shufps
or
sub
jmp
call
vpmacssdd
stos
and
es
inc
fisttpl
pop
inc
jge
sub
xchg
ss
jp
cwtl
sbb
je
ret
jg
sbb
pop
inc
sub
mov
das
ret
dec
cld
pop
mov
stos
pop
push
xor
and
push
jae
out
es
sbb
rorb
cli
sahf
je
nop
popl
lcall
mov
jl
xchg
lret
repz
jp
call
inc
jno
xor
decl
das
mov
fwait
push
in
xor
pop
mov
dec
sbb
arpl
std
inc
test
or
jp
das
in
cltd
push
nop
jle
stos
adc
ljmp
mov
cwtl
or
mov
push
and
addr16
inc
aaa
jle
ljmp
add
xchg
push
stos
pop
add
lret
and
sbb
push
fcomps
adc
jnp
mov
mov
and
push
mov
mov
inc
mov
les
inc
stos
imul
filds
push
aaa
pop
pushf
pop
fstl
jmp
mov
sub
sbb
push
add
or
std
icebp
aas
mov
inc
jae
aad
sbb
xchg
mov
sbb
loop
pop
fstpl
stc
jno
inc
xchg
cmpsl
jae
je
pop
xlat
jo
ret
mov
xor
dec
push
pop
adc
sub
lcall
ja
mov
dec
repnz
and
popf
jne
sbb
in
pop
add
dec
notl
mov
mov
xchg
mov
or
adc
sbb
sub
sub
enter
sahf
test
arpl
mov
icebp
xchg
inc
cmc
and
mov
inc
in
mov
fidivs
popl
fisubrs
scas
mov
movsb
js
add
add
dec
add
sbb
mov
mov
add
ss
pop
movsb
cmpsb
mov
mov
pushl
mov
push
add
mov
stc
or
scas
aaa
jl
les
adc
mov
outsl
clc
leave
negl
imulb
push
rol
adc
mov
jb
inc
cli
test
fsubr
ss
xor
and
out
mov
mov
sbb
push
ljmp
mov
sub
mov
and
outsb
adc
or
mov
pop
xchg
cld
mov
lock
sbbb
dec
xor
sbb
mov
adc
cmp
inc
push
cmp
js
out
add
mov
and
xchg
je
divb
jbe
push
fnstcw
sbb
call
ljmp
push
fwait
lcall
push
xor
lret
jno
test
scas
xchg
jge
pop
mov
aas
add
add
or
loope
inc
xor
mov
lods
enter
ja
or
lcall
push
ja
mov
pusha
add
pushf
cltd
adc
and
inc
pop
fstpt
cs
cmpsl
push
sub
nop
mov
mov
lods
mov
inc
dec
cmp
dec
iret
xchg
push
inc
inc
sbb
inc
dec
push
pusha
loopne
cli
pop
pop
fs
inc
or
adc
adcl
xchg
scas
xchg
add
mov
jecxz
cmc
inc
mov
pop
jg
or
lds
jp
jecxz
or
mov
stos
mov
mov
pushl
push
lahf
ljmp
lcall
clc
sub
rcrl
pop
or
adc
xor
push
dec
pop
dec
or
ja
fs
shlb
fistpl
outsl
ss
push
pop
fmul
pop
push
insb
loop
mov
push
mov
mov
add
in
jl
push
cmp
mov
and
scas
loope
dec
adc
notb
scas
mov
pop
test
fimull
test
daa
sbb
scas
xchg
scas
stos
mov
inc
or
scas
ss
jl
adc
cmp
loop
cmc
test
leave
adc
inc
add
jl
shlb
add
xor
mov
xorb
dec
adc
imul
call
les
xorl
pusha
and
xchg
std
shrb
xor
fiaddl
test
aas
test
lahf
and
outsb
push
sahf
and
add
lock
jle
rolb
test
sahf
int
lods
and
in
fwait
jl
cld
decl
push
xchg
push
mov
sub
xchg
sub
adc
pop
sub
loope
pop
test
loop
data16
mov
call
aam
enter
daa
mov
out
insl
mov
hlt
jg
mov
test
shlb
inc
pusha
fwait
inc
call
imul
fidivrs
xorl
pop
mov
jo
jp
lds
pop
test
pop
mov
mov
data16
insb
jmp
dec
push
imul
sub
ret
mov
ret
test
pop
lods
outsb
clc
daa
nop
rol
mov
push
inc
and
int
add
jb
movsl
push
fwait
xor
sub
cld
bound
enter
lock
aas
xchg
add
loopne
out
jo
cli
or
pop
shl
loope
out
shl
push
mov
dec
call
adc
or
add
xor
dec
push
and
sbb
fildl
faddl
xor
jp
xchg
push
pop
jmp
lds
icebp
sub
add
lods
sbb
lods
jo
enter
inc
mov
lods
xchg
pusha
clc
mov
xor
mov
or
sub
aas
mov
scas
clc
pop
xor
nop
lret
xchg
adc
sti
int3
movswl
lcall
lcall
std
inc
loopne
clc
ret
fcomi
fdivrp
sbbb
pop
test
jae
stos
pop
pop
jo
dec
inc
or
mov
fdivs
int3
and
ljmp
aaa
mov
mov
xlat
pop
std
fwait
call
inc
and
mov
add
icebp
mov
mov
jo
inc
cmp
gs
stos
adc
mov
ljmp
and
adcb
clc
cs
mov
mov
or
inc
lods
add
adc
loopne
outsb
call
ljmp
insb
std
mov
cwtl
adc
push
inc
or
jg
loop
icebp
adc
xchg
mov
sahf
les
ljmp
xchg
adc
lret
dec
adc
inc
jp
pop
or
jns
or
clc
pushf
mov
scas
clc
sub
and
loop
mov
clc
lods
pop
das
push
jle
ljmp
loopne
out
xchg
hlt
in
inc
imull
mov
cmp
or
inc
dec
xchg
jle
loop
jg
jmp
xchg
movl
jl
mov
cmp
ljmp
jnp
jmp
test
adc
and
jbe
scas
ss
movsb
adc
test
push
stos
push
inc
nop
mov
and
mov
cmp
sub
rcrl
fnop
mov
jbe
add
inc
push
cmpb
mov
or
push
add
fdivrs
adcb
mov
icebp
shl
aaa
mov
jns
jmp
mov
and
inc
and
fs
test
hlt
arpl
pop
loope
inc
ss
xchg
cmp
enter
rorb
xor
mov
mov
inc
es
popf
rorb
sub
mov
mov
and
sub
hlt
lcall
jno
loopne
bound
scas
mov
rorb
add
sbb
mov
pop
xchg
shrb
xchg
test
pop
dec
cmp
dec
push
xor
repz
pushl
lea
dec
cmp
pusha
loop
outsb
lret
stos
push
bound
xchg
inc
js
jno
mov
or
cwtl
ret
mov
pop
mov
mov
cwtl
in
shlb
hlt
mov
pop
and
and
push
lea
push
and
and
lock
ret
and
arpl
sar
jg
outsb
repz
dec
xor
imul
mov
popf
push
pop
sbb
outsb
jne
mov
jg
mov
out
sub
dec
inc
add
notb
repnz
pop
dec
rcrb
subb
ja
out
lcall
fs
iret
call
test
or
sbb
cmp
fwait
inc
cmp
and
fwait
and
inc
xor
test
daa
call
sbb
cmc
and
scas
jo
cmp
popa
test
push
add
push
sub
clc
clc
sub
fsubl
and
ljmp
fs
cs
mov
outsb
jecxz
push
out
xor
dec
xor
jo
mov
cli
outsl
jmp
mov
sbb
jae
shrb
aam
mov
iret
int
punpcklbw
test
sar
push
pop
xor
adc
adc
js
push
addb
lea
push
pop
cmc
lods
pusha
xchg
ja
cmp
add
fildl
and
push
dec
jg
aam
mov
jo
sub
push
add
push
xchg
adc
clc
insl
sar
loopne
imul
in
push
aad
cmp
nop
sub
fnstcw
rcrb
jle
mov
xchg
mov
inc
dec
or
xor
dec
push
adc
push
mov
fldt
mov
add
jl
mov
mov
data16
dec
inc
jle
push
std
aaa
bound
cwtl
sbb
adc
dec
adc
std
pop
je
fmuls
scas
add
imull
mov
shll
add
pop
jae
lods
loope
shr
test
es
and
lods
loopne
loopne
sbb
push
subl
cmc
aad
icebp
mov
mov
adc
lock
push
imul
mov
pop
shlb
push
cmp
jb
dec
dec
scas
cli
pop
sahf
cmp
incb
movsl
dec
rcrb
shlb
pop
mov
mov
mov
cli
mov
mov
daa
je
das
pushf
sbb
xchg
movb
cmp
sbb
jge,pt
jp
in
fisubs
xor
movsb
imul
fs
xchg
add
inc
mov
or
cs
or
rcrl
call
cmp
pop
pop
negb
mov
gs
rolb
add
jbe
xorl
sbb
cli
sbb
movsl
inc
loope
push
in
or
jmp
cli
jg
dec
adc
fldl
jno
out
jl
push
aad
jo
test
xor
shll
xchg
dec
aam
adc
mov
in
cmp
xchg
pop
stos
sbb
repnz
pushl
inc
ret
repnz
enter
lods
push
mov
push
inc
or
xchg
mov
inc
cwtd
ret
sub
cmpsl
iret
insb
mov
stos
idivb
fcmovnb
push
sti
mov
rorl
lods
inc
movsb
test
xchg
push
arpl
pop
cmc
in
or
or
pop
jae
loopne
add
add
dec
push
pusha
jp
and
jmp
pop
mov
inc
mov
push
mov
mov
add
cmc
add
mov
fmull
cld
mov
and
psrld
and
push
into
add
and
adc
dec
add
sub
sbb
sub
andb
out
rclb
inc
push
dec
and
incl
ret
adc
jnp
pop
sub
jg
sbb
popf
or
and
xor
push
jae
jnp
push
xor
jne
add
push
sbbb
subl
scas
mov
mov
or
fstl
xor
data16
test
das
cmpsl
xor
mov
adc
jne
stos
or
iret
leave
dec
fstl
insl
addr16
sbb
ljmp
pop
push
popf
inc
sbb
jp
icebp
xlat
xor
cmc
adc
sti
push
lcall
pusha
adc
inc
out
ret
movsl
adc
arpl
int
dec
les
or
das
mov
mov
mov
adc
ret
fisttpl
inc
xor
test
pop
shrl
dec
int3
imul
and
adc
add
push
aam
icebp
xchg
clc
nop
popf
mov
xchg
and
fcomip
pushl
push
pop
jno
push
cmp
mov
sbb
lahf
pop
fdivrs
push
sti
hlt
call
push
scas
push
sub
lret
adc
fs
inc
shrb
int3
into
mov
test
out
in
pop
push
jns
push
jmp
sub
adcl
jbe
rcrl
xor
or
mov
jg
or
lock
fisttpl
xor
shl
mov
add
xor
jle
enter
inc
inc
add
ljmp
call
loop
adc
add
arpl
gs
xchg
xor
lret
cwtl
sub
adc
xor
cmp
es
jmp
insb
orb
les
mov
mov
xchg
xchg
lcall
and
sbb
xor
mov
push
lds
lcall
addb
push
scas
or
pop
cmc
pop
rcrb
mov
adc
lcall
jp
dec
sub
cmp
push
cmp
cmp
xorb
sub
mov
adc
jmp
xchg
nop
add
push
aas
push
incl
cmp
scas
mov
inc
rcl
cmpsl
nop
dec
and
or
stos
push
test
loope
xchg
mov
adc
cmp
jg
jg
xchg
sahf
mov
fimuls
cmc
dec
aam
xor
inc
insl
pop
mov
pop
fimuls
inc
sbbl
push
jl
mov
adc
push
adc
mov
mov
test
ret
xor
cmp
xchg
jo
jo
inc
dec
cmp
mov
push
decl
stc
rcrl
mov
lcall
xor
sbb
jmp
lods
xchg
lret
push
mov
popa
sbb
mov
adc
mov
add
push
ds
add
push
push
sub
out
outsb
xchg
dec
mov
adc
movsb
jmp
dec
mov
lret
add
loop
rorl
xorb
fs
jge
jle
pop
pop
movb
data16
outsl
scas
pusha
cwtl
repz
sub
aaa
adc
mov
shl
mov
test
xchg
sbb
outsl
push
cld
xor
mov
les
inc
data16
push
pop
jmp
push
outsl
lahf
call
adc
cmp
icebp
adc
cwtl
jle
dec
shll
addl
lds
inc
cld
ficompl
lea
add
xchg
add
inc
fistpl
sub
sbb
loopne
cli
fildll
push
cmp
nop
jo
insb
stos
clc
jmp
xchg
cmc
sub
jb
movsb
cmp
adc
shl
mov
adc
adc
xchg
repnz
xor
adc
mov
lahf
inc
xchg
mov
jmp
push
sub
lcall
in
andb
ret
add
cmpl
inc
inc
mov
shrb
aaa
sub
mov
shlb
mov
cmp
or
je
or
push
btsl
cmp
sahf
or
inc
dec
scas
cli
incl
sbb
dec
dec
nop
arpl
out
xchg
xor
shrb
sub
inc
xor
add
cmp
cmp
push
movsb
or
adc
lcall
out
pop
xchg
xchg
jnp
xchg
add
leave
adc
xchg
ret
fwait
scas
incb
adc
psubusb
leave
jp
fld
and
jl
ljmp
mov
push
push
lods
cmp
mov
data16
mov
stc
mov
pop
and
xchg
loopne
popf
or
mov
mov
rol
adc
dec
or
jb
mov
jg
out
icebp
mov
sbb
jecxz
inc
push
inc
les
in
mov
imul
cmp
or
decl
shll
outsb
aas
dec
and
dec
inc
cmp
scas
or
pop
je
sub
push
xchg
dec
loope
lcall
xor
xchg
iret
inc
or
lock
movl
mov
push
dec
aam
push
mov
loope
pop
sbb
test
and
pushf
outsl
fmull
add
adc
pop
stc
jmp
je
call
mov
mov
ljmp
aad
xchg
es
sar
pop
and
add
sub
iret
lods
test
rol
cwtl
mov
inc
inc
rol
insl
loope
pop
mov
pop
idivl
cs
and
in
sti
lcall
and
cs
sub
push
pop
and
icebp
clc
pop
div
jb
or
jg
mov
int3
repnz
movsb
stos
les
mov
cmpsl
jmp
idivb
mov
mov
and
add
orb
pop
sub
das
movl
dec
pop
ret
dec
inc
mov
xor
mov
xchg
push
xchg
and
mov
fwait
movaps
mov
aam
incl
xchg
adc
sub
inc
cltd
and
mov
pop
adc
aam
xchg
xchg
mov
lcall
out
fwait
pop
scas
dec
and
mov
or
pop
fsubs
add
call
mov
leave
push
cli
fldt
fdivr
xlat
sbb
out
xchg
push
and
sbb
mov
cmp
daa
dec
subb
mov
mov
pop
mulb
int3
sbb
pop
outsb
rolb
cwtl
dec
arpl
cs
out
aaa
jne
sbbb
dec
add
inc
aad
or
outsb
sbb
pop
imul
push
sbb
inc
or
xchg
lds
dec
ds
incl
hlt
inc
fldenv
and
jle
and
in
inc
jne
jae
loope
pop
push
xchg
scas
and
pop
jp,pn
inc
mov
and
test
aam
and
scas
cmpsb
and
movsl
inc
and
fwait
daa
mov
insb
add
call
js
cmpl
jbe
xchg
out
je
lods
test
inc
add
call
call
cmc
arpl
xor
pusha
rorl
mov
movsl
lcallw
inc
nop
loopne
in
ljmp
add
stos
div
and
mov
xchg
int3
mov
ljmp
clc
lea
ficoms
in
add
aaa
sbb
jns
mov
add
sub
sbb
loop
sbb
jg
sbbl
imul
pop
mov
pop
cmpsl
inc
popl
jl
sbb
push
mov
xor
scas
scas
add
scas
xor
sbb
stos
mov
add
sbb
add
cmp
jge
adc
out
loopne
and
push
mov
pop
jns
cmp
andps
sub
mov
loopne
mov
xchg
mov
bndldx
movsl
jne
incb
outsl
dec
leave
les
loop
add
and
decb
mov
ss
decl
mov
decb
add
sbbl
arpl
inc
pop
push
mov
imulb
xor
pop
sbb
cmp
rcl
decl
ljmp
push
jmp
movsb
or
sbb
push
outsb
ret
jmp
or
xor
mov
lcall
arpl
mov
pop
sbb
push
dec
push
addr16
jle
sub
push
imul
and
cltd
cmp
cmp
add
xchg
insl
inc
pop
push
pop
sarb
add
pop
xor
mov
or
mov
rcl
rorb
imulb
pop
xchg
or
in
xchg
dec
loope
rcrl
xchg
hlt
call
outsb
movsb
mov
push
and
outsb
pushf
push
daa
jb
mov
inc
mov
fdivs
movb
std
dec
cmpl
adcb
leave
loop
xchg
andb
xor
and
daa
jne
std
sub
pop
push
je
enter
arpl
cli
push
xchg
pop
loopne
adcb
inc
xor
sub
js
rolb
call
sahf
ljmp
jo
xchg
clc
in
outsl
sub
nop
inc
mov
cmp
or
cmpsl
add
sbb
imul
and
mov
pop
sub
bound
cmc
inc
clc
jg
pop
add
cmp
orb
pop
call
call
push
ret
push
pop
and
out
xlat
jo
xchg
pop
insb
dec
and
pop
aas
fisttps
dec
fs
push
xchg
sahf
rcr
imul
jo
pusha
inc
mov
and
cmpb
call
xchg
push
and
fbld
call
outsl
call
leave
aam
pop
test
adc
sbb
jle
les
jl
pushf
or
test
cli
shlb
stos
and
push
pop
sub
lods
int3
sbb
push
testb
and
std
xchg
mov
loop
mov
sbb
sub
push
icebp
pop
test
xchg
in
fdiv
mov
std
repz
in
add
cmp
cmp
pop
jp
clc
out
outsl
shlb
jmp
out
inc
sahf
mov
jecxz
adc
decl
jnp
cs
pop
pop
push
and
or
push
push
adc
sub
push
push
mov
dec
mov
cmp
push
mov
cmp
push
inc
lcall
inc
lret
clc
pushl
or
xor
xchg
mov
fists
add
int
mov
or
outsb
mov
add
int
mov
adc
sub
loopne
jmp
popf
test
xchg
push
cwtl
mov
hlt
ja
sbb
cmc
dec
and
or
popf
sbb
roll
push
test
inc
cmp
jb
and
mov
fcmovnb
imul
fdivl
sub
push
insb
push
addl
xor
push
dec
pop
mov
adc
loop
enter
push
push
pop
add
sbb
inc
ljmp
cli
mov
push
push
nop
ret
jl
out
xor
loopne
push
adc
push
adc
xchg
xchg
hlt
push
arpl
testb
pop
or
jmp
fdivs
cwtl
jl
xchg
cli
xchg
sbb
mov
sub
push
xchg
call
rorl
sbb
enter
fsubrp
ja
push
mov
notb
or
jae
lods
mov
cmpsb
mov
aam
jbe
jo
cld
dec
pop
shrb
adc
xor
mov
clc
incl
push
in
inc
cltd
das
xchg
xorb
or
push
mov
pop
push
filds
std
fnsave
lahf
adc
ds
and
mov
sub
js
and
stos
inc
add
xchg
pop
sbb
ficomps
pushf
ret
cmpl
jo
xchg
adc
stos
ss
gs
mov
jp
stc
cltd
sub
jmp
nop
ret
into
or
jge
cs
pop
arpl
fisubl
jg
pop
sbb
int
mov
or
push
push
sbb
aam
fdivr
shl
and
incl
adc
adc
inc
jl
cld
sub
mov
mov
push
aad
mov
out
mov
push
mov
push
and
jl
mov
and
jmp
push
mov
inc
xchg
add
loop
add
imul
sub
imul
sbb
xchg
sbb
iret
addr16
pop
gs
es
pop
pop
cmp
aaa
je
cwtl
dec
test
mov
fs
insl
xor
jle
push
ljmp
jae
mov
jp
hlt
shll
es
push
lret
add
mov
or
scas
andb
sub
das
inc
imul
in
aad
pop
xchg
mov
shl
dec
mov
or
in
out
or
jb
mov
rolb
jb
sbb
jne
inc
dec
mov
push
rorb
sub
and
gs
mov
cltd
clc
jmp
lret
mov
nop
insb
sbb
jecxz
mov
push
jmp
leave
out
cmp
jmp
mov
fstl
test
jp
push
push
movsl
mov
rcrb
inc
inc
mov
clc
mov
sbb
lret
arpl
push
scas
test
add
mov
into
mov
sub
fs
inc
pop
test
repnz
ljmp
andb
popa
xor
sbb
adc
xchg
test
js
rcr
and
mov
scas
popf
mov
inc
jmp
test
repnz
adc
sti
dec
shll
and
xor
fwait
xor
andb
mov
dec
inc
cltd
pop
jg
cld
loopne
in
push
dec
roll
shll
jmp
xchg
push
push
cmp
sbb
sbb
push
pop
and
movsb
xchg
pop
loop
in
test
dec
int
decb
jo
mov
inc
mov
bound
mov
mov
xchg
push
cld
xlat
dec
cmp
mov
add
xchg
inc
cld
inc
jns
in
inc
fwait
cs
adc
sahf
bound
cmp
push
mov
out
add
lret
push
xchg
jle
adc
or
stos
es
add
call
ds
push
dec
fwait
jl
lea
add
mov
push
shlb
xchg
cmp
jmp
pushl
in
clc
cmp
enter
stos
adc
cld
aam
xchg
jmp
incb
sbb
adc
inc
je,pn
dec
sti
inc
add
out
dec
xchg
ljmp
push
aam
ds
inc
adc
in
sti
cld
callw
pop
aam
fiaddl
testl
pop
xor
jo
out
mov
cmpb
lahf
call
sbbl
cli
sbb
repz
adc
mov
decb
sbb
and
popf
fildll
pushl
es
add
jp
inc
inc
and
shlb
cltd
mov
pop
adc
mov
inc
fidivrl
mov
test
adc
xlat
frstor
mov
mov
fwait
push
add
xchg
or
jmp
popa
adc
dec
and
and
aam
popf
or
or
push
jne
inc
cmpsb
xchg
pusha
push
mov
mov
nop
repnz
inc
sub
cmp
loop
jae
push
dec
test
add
jg
jbe
fsubs
add
pushf
ljmp
ljmp
inc
hlt
pop
pop
sub
cmp
rcr
add
pop
in
clc
fbld
add
jnp
inc
xlat
lock
pop
loope
xchg
gs
push
imul
mov
sub
shlb
sub
aaa
jno
ljmp
mov
mov
mov
loopne
lods
add
xchg
clc
or
rcrl
push
mov
fdivp
stc
rclb
in
ds
pop
cs
clc
mov
mov
stos
mov
in
mov
hlt
pop
jl
xchg
xchg
mov
and
data16
sbb
push
mov
rclb
pop
aam
test
cmpsb
push
sub
stos
popa
mov
sub
pop
mov
cwtl
mov
inc
xor
dec
mov
xchg
das
sbb
in
lcall
rorl
ret
mov
jne
popaw
subl
ljmp
mov
loopne
in
mov
lahf
or
jmp
insl
sub
xchg
dec
sub
lret
andb
push
lds
dec
pop
cmc
incl
pop
fs
push
nop
call
ljmp
repnz
sar
cmp
mov
mov
and
inc
sub
stos
lahf
push
mov
mov
movsb
push
outsl
pop
push
leave
mov
xor
sbb
add
es
push
imulb
or
sub
loop
cltd
jbe
xchg
cld
dec
xchg
je
std
outsb
jo
or
mov
bound
push
into
clc
lea
cld
filds
shlb
jecxz
push
pusha
insl
xchg
repnz
lds
inc
aad
mov
sub
xchg
mov
xchg
adc
nop
mov
notl
cmc
xchg
lahf
das
xor
mov
pop
ljmp
mov
jno
sahf
adc
fdivp
imul
or
adc
insb
test
pop
movsl
mov
std
out
push
test
stc
mov
clc
mov
insb
mov
push
mov
pop
cld
fcomip
push
xchg
pushf
xorb
mov
ss
lea
fwait
inc
loope
rolb
cmc
jle
push
adc
aam
cmpb
add
inc
rolb
sub
pop
frstor
fsubl
xchg
aam
inc
filds
pop
push
js
mov
jne
js
cs
sti
mov
sbb
xchg
mov
out
jo
and
outsl
mov
std
scas
cli
data16
fcoml
inc
int
sbb
subl
add
cmc
pushf
or
adc
jmp
aas
adc
xchg
pop
cltd
cmp
xor
and
xchg
inc
mov
inc
mov
popa
roll
or
icebp
aaa
dec
std
pop
inc
clc
call
jmp
fisttps
psubsb
int
outsl
ss
lock
aam
loop
shll
std
popf
xchg
adc
sub
lea
pusha
mov
sub
cmp
jmp
xor
push
nop
or
cmp
push
pop
fidivrl
cld
lcall
pop
inc
mov
roll
sub
movsl
sbb
or
jno
push
ret
filds
cmp
pop
and
sub
mov
pop
adc
sub
dec
add
push
push
dec
aad
mov
fs
pop
and
int3
or
xchg
jle
sbbl
jle
shrb
sbb
js,pn
cmp
pusha
dec
dec
add
stos
xor
mov
fildll
call
mov
xor
std
inc
cmp
jb
adc
pop
inc
ror
pop
sub
pushf
mov
mov
push
mov
rolb
cmp
mov
lock
sbb
sbb
jl
add
cmp
stc
adc
or
cmc
jg
or
outsl
cltd
sbb
pusha
mov
dec
rolb
int3
xor
mov
pop
xchg
add
pop
ljmp
and
pop
cwtl
cltd
testb
sbb
in
test
outsl
faddl
mov
mov
jg
dec
pop
fistps
pushf
fcoms
cmp
mov
dec
ljmp
xor
pop
lods
adc
push
arpl
and
cli
ret
test
daa
ds
jecxz
dec
stc
nop
or
jno
pop
add
xchg
and
xlat
cmp
push
adc
inc
imul
sar
jg
fsubrl
mov
lcall
popa
pop
dec
outsb
lods
sbb
sub
aas
push
repnz
and
xchg
out
cmc
ja
add
pop
sarl
fildl
stos
dec
test
mov
dec
or
or
sti
mov
mov
sbb
movsl
or
aaa
in
jle
pop
stos
jb
inc
sbb
mov
test
sub
call
push
lret
repz
sub
outsl
dec
inc
add
mov
adc
shlb
arpl
mov
pop
sub
mov
sub
decl
std
dec
dec
outsb
mov
pop
mov
xor
add
xchg
jg
daa
subl
and
inc
inc
out
aad
shrl
sbb
insb
jo
jg
js
jno
movl
mov
insb
imul
adc
daa
inc
bound
push
stos
stos
insb
loopne
mov
fstl
adc
hlt
in
sbb
xor
dec
mov
jle
and
add
pop
cld
aas
sbb
push
sbb
cmp
jb
shrb
add
xchg
xchg
rcll
xchg
add
callw
sbb
inc
push
nop
jl
xor
pop
stos
xor
out
add
jecxz
mov
loopne
dec
or
push
loopne
push
push
movsl
faddl
xor
jg
push
and
stc
and
pusha
mov
cmpb
cli
mov
mov
adc
jbe
or
std
push
sbb
mov
fiaddl
cwtl
sahf
inc
or
lcall
fwait
dec
ss
jo
adc
sub
pop
jp
jo
sbb
and
pop
and
mov
outsb
sbb
outsb
mov
inc
es
lea
add
imul
rsqrtps
nop
shlb
adc
rcll
jge
std
das
or
fcomps
nop
or
imulw
les
xor
push
std
fistl
mov
push
dec
enter
mov
adc
sub
xor
push
lcall
lret
inc
pop
and
iret
pushf
je
sbb
jo
sub
mov
popa
adc
std
lahf
adcb
cmp
mov
sub
lcall
xor
and
pop
ds
xor
mov
mov
mov
add
xchg
mov
popa
xchg
daa
imul
or
es
ficomps
jb
sbb
dec
incb
outsb
jg
cli
cs
je
pop
cld
or
push
sub
popf
js
add
pop
loopne
sbbb
shrb
mov
data16
rorb
fstl
jns
xor
test
add
or
movsb
pusha
dec
pop
jg
lock
sbb
mov
scas
sub
mov
ljmp
sbb
inc
push
movsl
popa
fisubl
or
cmp
xchg
xchg
sarb
nop
movsb
stos
inc
push
mov
jecxz
cmpsb
mov
scas
es
jo
in
or
dec
pop
pop
lcall
std
lds
aad
inc
out
xor
js
adc
out
les
pop
pushf
push
dec
sbb
xchg
xchg
cmc
adc
mov
cld
outsl
dec
out
push
mov
dec
aas
pop
mov
pop
cmc
decl
or
fidivl
push
cmp
add
fninit
jg
pop
fnstenv
jo
fiaddl
lea
cli
mul
sbb
push
jbe
mov
add
xor
call
cmp
xchg
loope
js
mov
sub
imul
mov
jecxz
sub
pop
adc
fiadds
mov
inc
lret
sbb
ds
mov
lods
xchg
adc
xor
outsb
mov
inc
popf
jno
inc
inc
pop
loopne
sarl
and
aaa
call
push
loope
fxch
loop
fisubs
in
pop
hlt
stos
lods
and
out
push
xchg
arpl
sbb
dec
lcall
cmp
pusha
cwtl
data16
in
daa
cmpsb
cmp
mov
mov
add
loope
inc
cld
icebp
cmovle
ljmp
nop
mov
xor
jg
lcall
mov
fistl
adc
and
movsl
cld
test
mov
xchg
xor
sbb
cli
out
test
cld
mov
and
sub
lret
stos
adc
cmp
add
aaa
aaa
add
sub
addr16
int
lret
outsl
adc
subb
lock
repnz
jecxz
insb
loop
jno
pop
xor
dec
dec
aaa
cld
ljmp
sub
pop
sub
das
sbb
sbb
cmp
addb
sbb
fmuls
pop
cwtl
adc
sub
or
lahf
add
inc
cmp
push
movsb
add
popa
nop
pop
inc
or
xchg
std
addb
sub
call
sbb
ljmp
dec
into
std
fcmovnu
popf
insb
outsb
sub
mov
out
nop
popa
xor
xchg
int3
adcl
stos
decb
mov
sbb
dec
jge
cmc
cld
pop
insl
orl
out
pop
push
mov
jecxz
cs
hlt
scas
dec
jle
inc
stos
lahf
add
xchg
xchg
scas
push
lcall
std
aaa
rclb
push
arpl
scas
push
fisubl
mov
out
mov
mov
daa
inc
push
clc
jg
imul
test
addl
sar
lds
jns
cmp
stos
push
push
fistpll
mov
pop
bound
cmpsb
hlt
fistpl
or
dec
clc
enter
or
mov
insb
lods
scas
shlb
jb
jle
add
add
dec
in
mov
or
xor
and
push
and
imul
movsb
data16
out
inc
pop
push
rcrl
pop
jge
leave
repnz
pmaxub
imul
dec
or
out
sbb
nop
jno
add
dec
loope
push
cld
aas
adc
andps
mov
sbbl
cwtl
incb
dec
dec
sar
jg
sub
mov
add
pop
repz
orb
dec
movsb
test
jg
add
fisubrl
mov
or
dec
scas
adc
push
divl
xor
outsb
out
leave
punpckhwd
jmp
roll
int3
fs
mov
jl
aas
add
in
into
mov
js
imul
dec
sub
push
lret
pop
icebp
sbb
jb
dec
jo
fsubrs
lea
add
adc
es
decl
ss
sbb
rcr
shrb
pop
sbb
mov
movsb
sti
cli
int3
add
cmpsb
jmp
outsl
add
aas
dec
sarb
lock
in
loop
push
call
sbb
rorb
dec
inc
stos
mov
iret
into
clc
loop
popf
in
lret
aam
dec
stc
jg
ret
rcrl
call
fwait
je
scas
lods
mov
dec
adc
fbld
mov
mov
lods
rcrb
sub
popa
jb
cmp
pop
test
add
xor
jp
ficomps
ret
lcall
aam
fcompl
ret
loop
jl
add
je
pop
sbb
addl
push
inc
mov
outsl
cli
cli
fstpl
cmpsb
test
xchg
sti
inc
mov
mov
lcall
out
subl
outsl
idiv
pop
sbb
ss
pop
nop
xor
lds
mov
stos
es
xchg
in
ljmp
cmpsb
add
in
outsl
scas
arpl
pop
out
mov
icebp
subl
dec
mov
lahf
mov
add
push
rclb
xchg
and
inc
or
sbb
jg
loopne
gs
xor
sub
cmpsl
xor
lds
or
sarl
in
push
fists
sbb
xor
leave
arpl
mov
addr16
sub
sub
inc
pushl
and
leave
fcompl
or
ja
push
mov
push
cwtl
mov
pop
cli
push
cli
cmpsb
ljmp
inc
ret
sar
mov
jmp
xchg
fs
adc
push
pusha
lods
ret
scas
clc
out
xchg
sbb
hlt
test
mov
inc
mov
loopne
mov
pop
ret
idivb
dec
mov
divl
xor
inc
mov
bound
cs
push
push
mov
lahf
sub
sbb
call
mov
cs
sbb
push
test
cmp
mov
fldl
mov
and
mov
xchg
push
mov
in
xchg
jl
loopne
or
inc
jg
nop
movsb
lea
andl
std
sbb
cwtl
sub
adc
adc
test
jae
push
mov
or
insb
pushf
test
dec
mov
sbb
rorb
loope
pushl
in
or
mov
popa
inc
dec
cld
push
add
iret
cmp
push
lcall
dec
cmp
pusha
jb
cmpsl
shll
or
call
jg
cltd
xlat
stc
cmpsl
add
popf
cmp
shll
cmp
mov
outsl
mov
lods
pop
clc
adc
xchg
add
sub
mov
or
adc
gs
add
or
test
jbe
pop
in
cmp
outsl
mov
jg
jl
ljmp
push
and
hlt
inc
imul
mov
pop
daa
out
dec
ljmp
push
inc
sbb
arpl
les
push
insl
clc
das
adc
stos
pop
pop
stos
ficompl
fdivp
sbbb
pop
into
repz
in
add
push
adc
sbb
add
cmpsl
xlat
decb
add
loop
pusha
inc
and
daa
cmpb
adc
clc
inc
int
insb
inc
ret
ss
ja
lcall
sub
sbb
jecxz
mov
and
mov
test
jns
test
inc
and
xchg
pusha
add
inc
or
inc
lods
jb
mov
fdivs
mov
js
das
sbb
mov
bound
fcmovnbe
mov
xchg
or
cmp
xorl
jae
jle
out
and
inc
inc
lods
xchg
cmp
dec
aaa
cld
mov
aas
call
loopne
fcom
pop
daa
sbb
outsb
add
pushf
adc
or
xchg
lea
dec
push
pop
dec
fmull
sub
pop
shrb
mov
mov
push
cwtl
fisttpll
or
jg
mov
push
pop
jo
pop
and
xor
jg
inc
dec
out
jno
arpl
add
cmp
and
mov
pop
and
sbb
push
ss
dec
push
or
push
and
push
mov
push
mov
sub
loopne
es
lcall
push
xchg
mov
lret
stos
pop
fld1
cmp
mov
adc
dec
std
pop
pushf
rcll
xchg
pop
and
shl
push
add
mov
add
not
call
outsb
mov
cmpsb
or
lea
pop
xchg
imul
pusha
inc
pushf
push
add
in
andb
add
adc
or
xor
in
cmp
leave
clc
test
jge
xchg
jo
push
arpl
pop
rclb
mov
out
mov
jmp
leave
cmp
jg
sbb
and
cmc
movsb
mov
fbld
mov
cli
lret
mov
scas
xchg
incb
pop
sbb
popa
stos
adc
or
or
cwtl
icebp
int
out
sub
ja
xor
mov
filds
rcrb
ret
push
jo
jo
xor
cmpsl
out
pushf
add
pop
shlb
test
ljmp
mov
xchg
xlat
sub
ds
sbb
add
stos
pop
add
dec
xchg
outsl
imul
ds
test
jo
sbb
jnp
jl
leave
inc
js
gs
lcall
pop
in
and
lock
stos
ss
inc
rorl
mov
pusha
inc
fdivr
pushl
cmp
and
ret
outsl
jg
call
andb
sbb
sub
cmp
push
push
loop
loop
mov
mov
xor
mov
loopne
aas
ret
mov
jb
aaa
dec
stos
adc
rcrl
mov
decb
lock
mov
bound
dec
push
test
je
imul
and
icebp
jae
sbb
adc
xor
std
push
jbe
aaa
mov
pushl
mov
mov
mov
loope
stc
sbb
loop
jle
sbb
push
jns
xorb
cmp
cmc
or
sbbl
mov
mov
pusha
cmp
inc
sbb
fwait
jp
xor
jle
std
paddb
xchg
rol
dec
inc
inc
mov
cmp
in
push
ds
add
xchg
xchg
test
cmc
fcomip
clc
shlb
add
adc
inc
mov
out
out
pushl
mov
es
add
adc
mov
dec
rcrl
aaa
ljmp
int3
das
add
adc
add
js
pushl
pushl
jnp
mov
mov
cs
lds
add
aam
xor
and
and
bound
pop
sbb
test
les
inc
lahf
xor
xchg
add
add
call
inc
mov
fildl
arpl
enter
cmc
cmp
mov
jg
xor
inc
popa
shlb
fs
adc
dec
out
fdivrl
mov
aas
sbb
in
sti
aad
mov
jns
dec
or
outsb
dec
cmp
popf
cld
loop
xchg
insb
cld
pop
call
loop
pop
sar
inc
sbb
dec
mov
sarb
cmp
movsb
jp
sbb
outsb
in
mov
cmpsl
aad
cld
push
cwtl
stos
mov
cmp
inc
mov
mov
xchg
outsb
push
pop
xchg
adcb
incl
xorb
test
mov
mov
xchg
adc
xchg
imul
es
pop
mov
rcl
cmpsb
push
dec
mov
adc
dec
add
sub
mov
inc
add
xor
add
and
dec
rorl
inc
call
and
sub
dec
roll
xor
pop
decl
test
sub
or
xchg
dec
add
cmpl
adcb
jo
clc
dec
ljmp
mov
and
push
cmp
cmp
mov
subl
sbb
sbb
adc
push
lret
add
pushl
push
in
repz
mov
adc
sub
jecxz
adc
in
nop
mov
movl
pushl
xchg
testb
push
mov
push
fnstsw
imulb
or
mov
and
cwtl
clc
pop
gs
xor
sub
cmp
bound
push
cmp
push
or
cs
fisubrs
andb
lcall
cmpsl
shl
repz
push
cmp
add
sbb
cmp
enter
or
aaa
adc
pop
popa
cld
jmp
pop
add
and
jns
xchg
decb
dec
lds
inc
pop
xor
mov
ficoms
out
mov
inc
jmp
fistps
rcr
testb
inc
jb
inc
dec
scas
in
mov
xchg
mov
or
push
in
es
cmp
fcoms
sbb
dec
sub
sbb
nop
fwait
pusha
lret
xor
clc
incl
cmpsl
xchg
cld
ficoml
dec
je
and
sbb
lcall
mov
jp
sbb
or
movsl
add
idivb
dec
scas
fidivrs
fiadds
mov
mov
jp
lea
pop
or
pop
sub
adc
outsl
cli
pushl
add
in
sub
jecxz
add
mov
jl
inc
pop
push
es
xchg
out
sbb
cld
das
test
loopne
mov
outsb
ret
scas
mov
jbe
push
ljmp
mov
out
or
mov
cli
call
jo
jo
cmpxchg
nop
push
xchg
pop
sub
sbb
out
scas
mov
leave
lcall
das
ljmp
xor
jae
lcall
mov
pop
inc
pop
loop
jp
cltd
jb
mov
sbb
xchg
lret
aad
pavgb
add
push
fimuls
or
xchg
or
les
lahf
fdivrl
inc
outsb
mov
ret
push
cmpsb
add
push
dec
inc
xchg
clc
pusha
sbb
mov
ja
insb
and
xor
inc
pop
and
fisttps
pusha
add
scas
pop
addl
and
mov
call
jg
xor
test
adc
pushf
std
outsl
gs
cmp
repnz
inc
cmp
xchg
les
and
ss
jg
xchg
mov
lahf
sbb
test
xor
cmp
test
push
pop
decl
cs
ljmp
mov
pop
jo
adc
in
xchg
pop
test
xchg
xchg
pop
or
add
cltd
sub
cmc
mov
jbe
sarb
in
cmp
sahf
push
mov
add
inc
xor
rclb
ret
lcall
mov
mov
dec
xchg
push
or
out
dec
adc
jge
or
jge
mov
mov
mov
xor
movsl
jne
rcll
push
out
sbb
pushf
inc
cwtl
cmp
sbb
adc
and
cmpsb
bnd
jle
hlt
scas
movsb
addl
inc
inc
out
ss
and
pop
rcrb
in
pushl
jne
sub
loopne
add
es
xor
incl
movsl
push
cmp
sbb
dec
jecxz
out
decl
enter
xchg
sbb
movl
pop
add
mov
lcall
pop
mov
mov
je
adc
test
inc
sub
cmp
sbb
or
lods
sahf
pop
lds
sbb
or
mov
inc
roll
iret
mov
in
push
add
pop
or
push
jle
aam
in
mov
nop
std
xchg
test
mov
pop
inc
sbb
xchg
lcall
clc
callw
sahf
or
mov
jg
sar
jb
jg
test
cmp
mov
jne
fstl
pop
lods
call
enter
pop
inc
movsl
out
mov
or
lods
jecxz
add
jo
out
fistpll
lds
sbb
enter
inc
pushl
pop
xchg
mov
push
loopne
or
loopne
and
cmp
sbb
dec
shrb
aaa
clc
int
adc
mov
mov
and
ja
push
fmul
mov
mov
dec
push
cltd
cmp
add
enter
jle
cmp
xchg
ds
mov
add
mov
in
mov
push
xchg
jb
inc
ds
xor
sbb
outsb
adc
outsb
ret
add
decl
adc
mov
xor
and
fstl
mov
mov
dec
lods
and
inc
ljmp
lcall
ljmp
fwait
pop
and
adc
loop
jg
push
jne
adc
push
fisttpl
imul
popa
stc
sbbb
push
test
mov
fbld
or
adc
jb
inc
inc
data16
lock
add
mov
xchg
mov
and
ret
pop
decl
mov
push
lret
push
mov
inc
shrl
mov
lods
in
sub
call
movsb
jns
aad
or
and
mov
add
shlb
imul
cmp
inc
cmp
and
xor
lock
in
inc
inc
shll
rorl
sub
das
mov
mov
outsl
add
lcall
ljmp
aad
mov
inc
sbb
adc
sbb
xchg
jno
adc
lock
or
jmp
cmc
es
add
mov
cs
decl
cmp
mov
sbb
insl
sbb
dec
js
shlb
mov
fs
pop
loop
shlb
sub
loope
out
add
xor
jp
aaa
add
pushl
mov
insb
das
xor
in
mov
jbe
pop
sub
sub
sbb
pop
sub
push
jl
and
int
inc
push
orl
inc
popf
add
popf
lret
clc
aad
mov
lods
dec
inc
mov
incl
es
sbb
cmp
dec
jg
int3
push
loop
int3
xchg
std
aad
fs
out
test
push
cmpsl
mov
cmp
nop
mov
ja
call
lret
cmp
mov
sub
mov
sub
out
mov
nop
and
popa
inc
out
mov
push
xchg
inc
pop
clc
pop
std
fldt
movsb
xchg
jae
add
pop
and
in
scas
cmp
stos
outsb
inc
es
lods
push
mov
sbb
mov
popa
rcrl
jmp
cli
jmp
jns
sub
dec
and
enter
jbe
mov
lock
clc
mov
adc
loop
and
js
outsb
dec
mov
inc
sbb
add
rcrb
bndldx
pop
mov
js
pusha
inc
push
mov
aam
sbb
xlat
mov
loopne
aam
sub
pop
mov
cltd
mov
jl
outsb
inc
add
pop
xor
sbb
xor
add
add
pop
add
cmpb
dec
ds
fcoms
mov
push
or
fcompl
xor
add
or
jo
cld
lcall
inc
dec
mov
jg
bound
mov
adc
push
adc
push
push
xchg
lcall
sub
ffree
or
add
push
icebp
lea
xchg
bound
aam
dec
sbb
mov
mov
jl
adc
js
sarb
inc
ljmp
push
fnstcw
adc
and
mov
mov
jg
std
loopne
pop
lea
inc
es
xchg
insl
dec
xor
clc
popa
test
ret
jle,pn
jae
add
cmp
pop
jbe
mov
arpl
loopne
cld
xchg
mov
test
jmp
pushf
iret
pop
fldl
fs
add
fdivrl
ffree
inc
jno
mov
jmp
lret
inc
sub
mov
roll
cmp
fs
or
sub
fsts
pusha
mov
or
mov
mov
jg
cmc
jg
lcall
adc
cwtl
dec
mov
push
adc
adcb
push
xchg
mov
in
and
mov
out
pop
add
mov
push
dec
or
jbe
ja
sbb
mov
push
xor
mov
or
rclb
adc
jmp
push
push
add
pop
popa
mov
cmp
mov
xor
lds
insl
lret
mov
sub
cmp
jg
jo
or
pop
mov
pushf
test
xchg
sbb
lcall
fsubrl
mov
push
out
xchg
fldt
push
je
cli
push
pop
cmc
cmp
aad
cmpsl
jbe
push
xchg
imul
fcomip
outsl
pop
dec
dec
add
test
cmp
jmp
dec
fxch
mov
adc
scas
sbb
call
adc
negb
or
das
jecxz
xor
addb
in
push
stc
into
xchg
or
filds
clc
inc
pushf
xor
jno
or
lods
jno
test
mov
xor
nopl
pushf
sbb
xlat
out
mov
cld
xchg
sbb
sub
inc
mov
inc
fstl
cmp
inc
ficoms
xchg
in
sbb
pop
push
daa
popa
clc
sub
shrl
push
dec
shrb
sub
push
std
rcrb
in
lret
pop
push
sarl
adcl
lock
dec
push
pop
mov
mov
add
lods
adc
and
mov
xchg
mov
jle
cmp
sub
dec
jmp
lcall
sub
ret
mov
lcall
loop
rcll
mov
pop
hlt
push
jo
movsl
mov
lcall
pusha
cld
mov
xchg
xchg
mov
dec
sub
adc
xor
inc
pop
inc
movsb
add
bound
aad
pushf
call
sub
es
sub
mov
fcompl
loopne
push
xlat
ljmp
xor
insb
jle
mov
mov
stos
retw
loope
push
or
cmpl
call
pop
sub
cwtl
jecxz
and
mov
shrl
out
push
mov
inc
mov
add
shrb
sub
mov
jmp
add
xchg
roll
dec
mov
add
sbb
mov
mov
jmp
arpl
mov
mov
sbb
call
adc
push
dec
add
test
fstpl
fistpl
call
jmp
and
in
push
iret
or
clc
lds
cmpsb
xchg
xor
popf
add
inc
mov
dec
mov
mov
adc
pusha
cmpsb
sub
decb
stc
pushf
xchg
clc
adc
and
pop
fdivrp
pop
or
jp
fildl
stos
ss
lcall
mov
add
mov
aaa
add
movd
std
decl
fistpl
xor
jnp
fbld
jb,pt
mov
idivb
jp
leave
mov
cmp
mov
je
or
addb
xchg
xor
ret
incl
sub
jo
xorb
andb
out
nop
dec
out
xchg
mov
mov
jmp
int
xchg
ja
cmpb
test
add
xchg
lds
jecxz
add
pop
nop
outsl
ss
or
or
call
cld
mov
out
mov
lods
jg
add
mov
into
mov
jmp
add
push
mov
das
clc
mov
push
jecxz
enter
popf
inc
sbb
jo
cld
out
push
sbb
push
int3
dec
jbe
adc
or
fs
in
enter
sbb
movsl
fldl
push
adc
jns
jecxz
or
mov
and
and
or
sub
std
mov
ret
cmpsb
sub
dec
mov
xlat
mov
sar
nop
shlb
push
addr16
cmp
or
call
jne
dec
and
packsswb
mov
and
add
out
fdecstp
shll
shl
jmp
je
and
dec
or
mov
out
out
lret
cli
jmp
rcr
cld
enter
movsl
loope
pop
cmp
mov
pop
lret
push
inc
inc
dec
or
sub
or
jmp
test
outsb
jne
dec
popa
rolb
into
sbb
sub
inc
mov
mov
sar
adc
cwtl
adc
stos
xor
xchg
jmp
add
dec
lea
jmp
cli
in
inc
push
add
int
jecxz
push
sbb
add
adc
inc
andl
push
add
pop
hlt
jecxz
push
sub
cmp
insl
dec
and
fists
dec
xchg
in
test
dec
add
jne
dec
add
ljmp
push
nop
sti
mov
cmc
push
arpl
aas
pop
mov
aam
clc
pop
dec
cmpsb
add
mov
js
repz
call
lock
out
les
cmpsl
jo
dec
inc
cmp
lods
lock
mov
cmp
subl
movb
outsl
subb
int3
sti
jnp
stos
test
adc
das
js
stc
aam
inc
inc
sbb
mov
fisubrl
push
rolb
push
test
mov
push
inc
aad
mov
pop
es
jne
adc
inc
incl
sub
sarb
out
mov
ret
xor
sub
and
loopne
or
mov
imul
sbbb
clc
fidivrl
lcall
test
test
js
pop
insb
aas
scas
inc
loop
cmpsb
loop
inc
mov
mov
mov
mov
sbbb
sub
pop
idiv
adc
pop
inc
mov
push
adc
and
ss
mov
jle
or
jno
aam
and
call
jecxz
mov
movsb
sbb
into
xor
jg
mov
stos
shlb
cmp
loopne
repnz
cli
bound
pop
and
add
jp
lods
and
mov
incl
cwtl
add
sbb
dec
push
or
lock
or
je
loop
push
insb
leave
shlb
and
jl
call
clc
adc
add
ds
leave
das
shlb
aas
repnz
lds
popa
int3
inc
mov
mov
and
out
and
push
loop
and
test
push
fcomip
ljmp
mov
cmp
push
inc
inc
push
pop
scas
and
decl
imul
cli
mov
dec
mov
scas
movsl
cmp
and
or
cmp
jmp
jg
rcrl
loope
mov
pop
stos
and
dec
inc
int3
or
add
xchg
fildll
outsb
jo
mov
out
mov
xchg
cld
test
xchg
scas
mov
loop
adc
popa
mov
xor
fstpl
mov
xor
daa
lds
sub
rcll
pop
arpl
pop
or
scas
ret
out
movsb
repz
mov
testb
sub
outsl
xchg
and
jl
push
pop
sbb
sti
jne
inc
mov
pusha
mov
inc
dec
movlps
xchg
outsl
sbb
lcall
add
mov
ljmp
mov
adc
cmp
push
mov
push
pop
jl
xor
xchg
imul
mov
rcr
lods
es
jo
jo,pt
mov
add
jle
adc
inc
dec
sub
mov
sbb
shrl
sbb
or
loopne
es
cmp
cwtl
ds
and
push
adc
xchg
into
roll
lcall
or
loope
jbe
mov
push
and
insl
stc
ljmp
jo
jne
pusha
test
incb
test
test
ja
mov
cmp
cmc
inc
push
cld
inc
rorl
add
add
sub
adc
sbb
rorb
les
jle
sub
sub
ffree
sub
push
adcb
ret
jmp
xchg
xchg
outsl
orb
pop
cmpsb
movsb
add
inc
data16
inc
pop
push
inc
je
inc
cld
daa
loopne
inc
test
jecxz
sub
pop
pop
mov
and
fstps
or
sarl
mov
xchg
sar
jae
inc
mov
dec
xor
loop
dec
jo
cmp
xlat
jg
icebp
pop
cmp
fcoml
inc
adc
mov
or
pushl
addr16
data16
insl
stc
inc
mov
xor
add
sub
sar
push
xor
mov
inc
lcall
daa
and
xor
inc
push
push
dec
jl
mov
das
mov
dec
inc
addr16
inc
movsb
push
cli
mov
dec
mov
or
int3
mov
outsl
jle
and
scas
es
mov
inc
sub
jno
mov
or
bound
mov
xor
mov
rcl
pop
mov
bound
add
fucomip
fisubl
push
orl
cld
mov
adc
push
imul
sbb
jnp
jp
inc
std
pop
dec
jle
ljmp
ljmp
or
pop
push
icebp
sbb
iret
or
mov
push
push
add
mov
hlt
or
mov
sub
lea
std
aas
shll
js
loop
ret
cmpsb
jecxz
cmp
ret
rcll
add
test
ret
mov
dec
cli
jae
mov
push
cli
dec
push
xchg
pop
mov
pop
cmp
inc
rolb
loope
jg
mov
mov
or
ret
and
loope
cli
es
fwait
and
push
xor
in
cld
popf
shrb
pop
dec
xchg
insb
jo
xor
mov
loopne
ss
adc
leave
repnz
xchg
scas
xchg
ret
add
ficoml
push
sub
stos
fwait
pop
mov
sarl
mov
adc
jbe
inc
inc
sub
mov
ss
fiadds
out
notl
inc
stos
cmp
lock
dec
lods
mov
or
mov
rorl
and
push
aam
sbb
sub
stos
pop
addb
ss
cmp
ret
movsb
dec
sub
sbb
repnz
xor
jl
rcr
dec
lcall
inc
dec
xchg
and
push
dec
pop
loop
or
xor
or
fs
xchg
and
xchg
loop
adc
mov
loop
dec
and
das
js
gs
loope
push
movsb
add
aaa
add
sub
add
xor
inc
incl
dec
aad
sbb
pusha
push
inc
repz
xchg
aad
mov
sub
inc
popa
cld
push
sub
insl
cli
sub
inc
test
outsb
pop
stos
insb
fadds
pop
cmc
ss
sub
inc
pusha
ficomps
out
ja
inc
dec
or
jmp
sub
loop
cld
mov
aaa
mov
pushf
sub
ss
jmp
int3
fnstsw
mov
lock
dec
into
xor
ret
loop
mov
cwtl
in
jns
fcomip
add
clc
hlt
leave
add
js
sub
mov
and
jb
dec
stos
sarl
mov
dec
pop
scas
je
sbb
adc
aaa
rolb
call
jb
sbb
mov
aad
int3
xchg
pop
add
mov
out
out
push
inc
dec
test
addl
pop
mov
add
inc
inc
int
loop
jnp
lock
fnstenv
xchg
mov
push
mov
mov
cs
pop
hlt
and
fbld
push
add
and
shlb
adc
pop
lock
mov
inc
mov
or
xor
inc
push
mov
aam
xchg
test
xchg
ds
mov
adcl
adcb
int3
xchg
cltd
fbld
pop
adc
roll
andl
push
dec
mov
or
jb
mov
jg
test
dec
data16
jmp
out
ljmp
jo
xchg
fcmovb
lea
jmp
repnz
outsl
mov
out
call
pop
pushf
pop
rolb
ja
adc
nop
cmp
push
lock
pop
xor
iret
sbb
ja
decl
adc
popa
jns
sbb
shll
dec
jmp
movl
leave
cld
push
ret
or
add
subb
cmp
add
nop
lods
mov
inc
sbb
lahf
or
pop
push
adc
das
push
xchg
sub
push
xor
ja
dec
test
dec
mov
dec
push
add
push
push
xchg
icebp
inc
movsb
push
stos
mov
xchg
jbe
mov
xchg
jle
fsubs
mov
jns
lods
sub
sbb
mov
push
cli
inc
sub
cs
and
mull
mov
decl
push
mov
int
pop
jb
jmp
loop
mov
dec
xchg
hlt
push
fs
sbb
test
mov
adc
xor
ret
inc
mov
dec
sbb
sub
lcall
stos
decl
test
xchg
xor
and
pushf
cld
push
cmp
lcall
pop
sbb
aad
or
push
scas
sahf
lock
sbb
mov
mov
inc
ret
loope
xor
cmc
ficoml
cmp
cmp
push
pop
dec
lds
nop
push
jg
imul
add
jo
imul
call
cmp
mov
or
ljmp
and
lock
xchg
xchg
adc
push
imul
or
loopne
rcrl
add
jg
jecxz
sbb
out
lret
cmp
push
or
add
xchg
xchg
mov
pop
xchg
add
add
sub
add
arpl
dec
push
addr16
xor
mov
jbe
dec
and
inc
jmp
xchg
sbbl
push
cli
lahf
or
sub
cmp
fcmovnb
lcall
imul
inc
jmp
add
mov
cmc
mov
lret
scas
loope
stos
setl
xchg
xchg
adc
ljmp
div
pop
testl
rcrl
repnz
hlt
mov
dec
fisttpll
or
add
popf
push
cmpsl
push
fidivrl
pop
mov
pusha
inc
std
pop
int
push
cltd
loopne
loop
add
xchg
ljmp
std
cltd
sahf
in
xor
push
xlat
pop
mov
or
into
sbb
incl
sbb
push
cltd
dec
outsl
push
pusha
adc
push
and
push
jbe
sbbl
pop
loop
movsb
inc
js
mov
clc
outsl
std
jmp
xor
mov
xchg
aas
push
add
rorb
decl
pusha
mov
in
xchg
out
inc
in
xor
bnd
outsl
cmpb
push
in
mov
in
ds
inc
stos
inc
lods
and
out
movsl
inc
fiaddl
rolb
loopne
les
inc
xchg
dec
add
inc
aam
clc
sbb
orps
sbbl
add
ss
call
push
call
into
fisttpll
add
or
jno
insb
cltd
sbb
das
add
sub
dec
test
mov
icebp
push
lods
cmp
scas
dec
popa
sti
push
outsl
mov
and
out
pop
inc
push
or
xchg
call
add
fstpt
sbb
and
dec
imulb
sbb
inc
andb
js
bnd
rclb
orb
and
inc
mov
xchg
in
dec
pop
xor
ret
leave
mov
mov
mov
inc
adc
pop
adc
faddl
mov
orb
add
out
jo
nop
in
mov
cmp
xchg
ss
inc
dec
pushf
rcr
sub
imul
and
mov
mov
lods
sub
jp
cmp
pusha
jnp
pop
jne
adc
sbb
adc
decl
mov
lock
sub
sbb
push
mov
lds
pop
cmp
cld
shl
daa
testb
fistl
fcmovnbe
rclb
xchg
sbb
jae
inc
inc
push
xlat
mov
pushl
jnp
mov
shlb
fiaddl
xor
orl
lahf
popf
inc
inc
mov
call
out
pushl
mov
lcall
xor
mov
sbb
pop
push
mov
das
rorl
add
incb
fcomip
pop
into
adc
imul
movsb
rolb
mov
ret
push
int
cmp
mov
loope
adc
scas
mov
mov
adc
jo
leave
push
mov
xor
add
adc
ds
fsubrs
xor
xor
or
mov
xchg
lock
push
test
lret
and
push
add
push
add
out
icebp
rorl
adc
cltd
mov
mov
das
mov
out
dec
popf
jecxz
sbb
fiadds
pushf
into
repnz
cmp
stos
adc
decl
jbe
pop
daa
test
sbb
mov
cmc
fistpl
mov
pop
sub
add
xor
inc
popa
rcl
aam
faddl
dec
add
pusha
adc
add
sbb
sbb
mov
loope
sbb
js
cmp
nop
fcomps
shlb
push
push
incl
aad
push
mov
imul
mov
pusha
pop
cld
sub
dec
xor
or
faddp
les
or
adcb
stos
clc
ss
sbb
aad
mov
fsubrl
fcomps
and
test
test
inc
ror
mov
and
loopne
add
icebp
mov
adc
or
jmp
xor
push
mov
sbb
fcmovnbe
scas
xchg
push
mov
loop
mov
mov
mov
clc
ja
cld
cmp
push
sbbb
movsl
pusha
fadds
fbstp
jb
add
sahf
jns
shll
ja
sahf
or
lods
jno
mov
pushl
popa
push
enter
inc
mov
iret
pop
sub
shlb
lock
xor
cmp
dec
outsb
stc
jmp
cmp
dec
shlb
leave
xchg
rorb
jg
sbb
sbb
cmpsl
xor
xchg
dec
jl
inc
rol
sbb
clc
or
xor
test
xchg
jo
sub
sub
hlt
pop
xor
jp
mov
pop
hlt
dec
icebp
xorl
test
gs
call
or
incl
bound
and
xchg
inc
pusha
in
xchg
movsl
filds
mov
add
add
and
hlt
fnstsw
inc
pop
subb
aas
sahf
rcl
cmpsb
xchg
rcl
out
js
mov
sub
ret
cmp
sbb
cmp
cmp
testl
enter
push
lods
nop
sub
or
lods
sbb
mov
orb
pop
or
or
out
or
add
lret
mov
jg
or
dec
fadds
jmp
scas
sbb
and
scas
sub
pushf
or
mov
fcmovnu
decl
out
dec
push
loop
nop
adc
aam
mov
fmulp
icebp
or
jg
stos
fisttpll
jl
into
pop
add
shl
fstps
icebp
aaa
pop
push
jo
mov
mov
notl
fisttps
sub
jne
jle
movsl
and
jae
lods
adc
pop
mov
inc
aas
int3
push
dec
mov
lcall
xor
or
js
xchg
outsl
fidivl
push
stos
bound
aad
mov
ja
icebp
das
mov
imul
test
xor
lock
or
les
cmp
fcoms
test
inc
ja
sub
inc
push
add
inc
ret
xor
push
xlat
and
test
loope
jbe
pushf
cs
ss
adc
data16
loop
fstl
sub
in
push
mov
cmpsb
jecxz
or
mov
mov
jo
aaa
cltd
test
jecxz
loope
or
adc
loop
dec
clc
jg
fisubl
push
gs
inc
sti
insl
movsb
incb
jno
add
or
or
adc
mov
mov
mov
cmp
and
in
shrl
jg
adc
and
bound
imul
ljmp
lods
lahf
in
pop
pushf
push
cmpsl
lock
and
je
jp
movsb
jg
lock
addl
lock
stos
cmpsb
lret
and
and
mov
fadds
inc
lea
ret
cmp
loopne
decb
adc
adc
test
movsb
add
outsb
lcall
sarb
jl
xchg
mov
mov
stos
xchg
mov
addb
jns
adc
cmp
dec
jb
mov
shrl
sbb
xchg
dec
dec
sub
mov
adc
movsl
and
shll
test
adc
fwait
mov
ror
lods
cli
pop
xchg
gs
pop
imul
mov
sub
mov
scas
pop
out
ja
cld
fwait
mov
icebp
mov
test
icebp
lahf
sub
in
movl
ret
insb
and
out
pop
add
jno
mov
adc
data16
or
mov
js
sub
add
add
push
adc
inc
mov
pop
or
mov
push
sahf
fcmovnb
dec
test
loop
and
mov
mov
cmp
mov
xchg
push
stos
popf
clc
jge
mov
sbb
sbb
ffree
jle
xor
scas
sub
std
nop
or
stos
mov
or
push
je
and
aam
push
xchg
mov
adc
and
sbb
loopne
inc
mov
push
jo
pushf
loope
popa
int
lods
mov
push
rol
dec
xor
bound
mov
test
jg
or
cmp
insl
out
inc
popa
xchg
or
sbb
inc
fcomip
sbbl
mov
add
testb
es
adc
push
push
mov
ficoml
cmp
mov
mov
add
ret
mov
test
pop
adc
dec
push
and
sbb
lock
sar
in
adc
test
shl
push
out
inc
aaa
sbb
sub
push
and
ljmpw
mov
aaa
sbb
aam
test
dec
loopne
inc
cmp
jbe
fcomps
sbb
xor
int
push
int3
adc
out
pop
inc
or
sub
enter
fiaddl
sti
dec
out
mov
jbe
aad
dec
mov
mov
cmp
hlt
ret
mov
icebp
cmpsb
call
and
sub
add
or
mov
negb
cld
test
in
jo
and
loope
push
mov
jg
xchg
add
pop
cmp
rcll
ud0
lods
enter
push
and
inc
add
cmpsb
mov
sub
lock
jp
mov
jno
cli
bound
mov
xlat
ja
or
xchg
jno
or
sbb
loop
fisubrs
hlt
mov
decl
xor
ds
movb
adc
ficoml
adc
sarb
fidivrs
mov
xchg
mov
mov
cmpsb
jp
push
cmpsl
loop
out
js
nop
enter
sbb
loop
inc
jl
pop
in
sub
pop
cmp
mov
push
add
jne
and
jne
dec
pushl
push
xor
inc
out
pop
xorb
ret
popa
shll
movsb
jo
shlb
push
adc
test
jecxz
push
incb
jecxz
push
decb
jo
push
daa
sub
sbb
adc
or
test
adc
inc
jle
sar
aaa
test
and
inc
mov
sbb
jg
or
mov
scas
pop
aam
mov
jo
inc
loopne
add
jge
loopne
shlb
int
inc
jg
jmp
mov
mov
pushf
push
gs
sahf
aaa
cltd
push
mov
mov
clc
jg
xor
add
das
mov
mov
xchg
inc
adc
gs
sub
add
mov
adc
aas
test
mov
les
pop
stos
jb
outsl
int
lret
icebp
cmp
push
adc
push
mov
mov
enter
and
lock
inc
mov
adc
in
subl
push
add
cmc
scas
stos
out
xchg
loopne
js
add
std
lea
sub
dec
add
cs
fwait
mov
sbb
adc
sbb
in
loopne
cmp
dec
in
sub
push
push
inc
idivl
adc
and
jg
xor
or
incl
in
icebp
jo
xchg
push
xlat
pop
cltd
sarb
pop
fidivl
lock
dec
or
je
push
gs
pop
movsb
pop
dec
test
test
inc
popa
outsb
xchg
sti
sbb
jnp
dec
std
outsl
adc
lock
out
push
cmp
push
in
add
jg
inc
sub
inc
jmp
pusha
in
mov
inc
inc
or
mov
fiaddl
loopne
jne
sub
push
idivb
int3
fnstenv
xor
jmp
ret
dec
jnp
dec
push
cmovns
stos
into
movsb
popf
stos
or
lock
mov
add
les
movsb
mov
aas
jecxz
in
mov
lock
test
sbb
test
mov
inc
xchg
dec
xor
push
outsl
js
ljmp
push
addr16
push
flds
roll
inc
pop
add
inc
cmp
loope
mov
enter
lds
popa
js
mov
xor
icebp
pop
mov
call
flds
sbb
out
orl
cmp
mov
cli
aam
sbb
sbb
pop
jno
or
add
cmp
or
xchg
dec
dec
stos
cmp
mov
icebp
adc
mov
jg
in
popa
je
mov
and
and
adc
lock
xchg
inc
subb
mov
cs
enter
loopne
pop
movsb
les
je
add
add
outsb
push
call
lret
mov
jns
pop
and
insb
sbb
adc
sbb
jo
insb
int3
xor
ficomps
fbld
cmp
adc
ss
cli
xor
mov
xchg
fildl
jmp
cmp
lods
cmp
xchg
mov
mov
fs
ficomps
add
inc
pusha
add
jmp
pop
mov
sub
clc
cmp
mov
adc
xchg
stos
xchg
mov
fadd
inc
inc
repnz
jmp
mov
outsb
sbb
dec
test
push
mov
pop
add
test
sbb
rcll
adc
or
cmpsl
sbb
and
sub
fisubs
shlb
test
aaa
cld
mov
ljmp
out
dec
loopne
pop
adc
dec
xorl
mov
cli
sbb
insl
rorb
push
cld
mov
ret
mov
scas
and
xor
mov
sahf
jae
cli
jae
pop
jle
pop
mov
dec
repnz
xchg
or
ljmp
cmpsb
add
je
sti
loop
fiadds
push
mov
mov
ljmp
dec
and
sbbl
sti
mov
js
jb
inc
cmpsl
test
sbbb
push
inc
mov
mov
aam
mov
lods
inc
scas
add
mov
pop
mov
or
das
push
test
jnp
xor
dec
cltd
addl
cmp
fsubl
xor
je
or
push
xchg
stc
pop
push
pop
fld
inc
call
ds
and
mov
or
pshufw
lret
push
xchg
scas
xor
hlt
sbb
nop
adc
es
leave
sbb
addl
cmp
xchg
xchg
ljmp
popf
jns
andb
mov
ret
mov
int3
add
hlt
mov
out
ss
ljmp
repnz
pop
push
mov
loopne
inc
mov
fldt
les
lret
push
ds
inc
test
int
adc
incb
mov
add
inc
test
sbb
add
xor
cmp
push
outsl
shlb
test
pusha
inc
fst
mov
cmp
aam
add
dec
xchg
pusha
inc
dec
xchg
int3
sub
ja
fsubs
jns
cmp
shr
hlt
sub
mov
lock
dec
mov
ljmp
jo
pop
into
idiv
jb
test
repz
xor
and
shl
push
or
mov
mov
aas
shlb
decl
out
fidivs
jmp
filds
cwtl
pop
repz
mov
es
cli
fildll
jno
lahf
and
dec
dec
add
push
rolb
mov
shrb
icebp
sbb
push
or
mov
adc
jbe
or
adc
icebp
xor
mov
fidivl
dec
les
or
call
jno
push
inc
outsb
fstl
and
and
xchg
mov
mov
movl
mov
fwait
fs
testl
cmp
push
stos
cld
add
push
sbb
mulb
pop
push
sbb
cmpsl
int3
in
stos
or
sub
cwtl
xorb
inc
push
mov
jb
data16
test
sbb
add
nop
fwait
cwtl
hlt
and
and
mov
jns
pop
push
jl
movsb
xchg
mov
jo
hlt
add
sub
lods
pop
pusha
daa
aam
std
jae
ja
jge
stos
int3
scas
and
cld
inc
mov
adc
mov
int
inc
pop
pusha
xchg
jg
and
test
jge
aaa
inc
jno
or
pushl
inc
pop
xchg
or
jo
sub
enter
cmpsl
push
movsl
fisubrs
movsl
aam
in
adc
adc
xchg
nop
enter
sbb
add
rcr
push
mov
jns
jle
sub
jmp
sbb
and
lds
cld
dec
sti
ds
loop
cmp
xor
jecxz
mov
sub
xor
rorb
lea
mov
stos
sbb
imul
lret
hlt
push
fmuls
pusha
pop
adc
mov
cld
or
movsb
dec
stos
xor
adc
mov
call
into
in
mov
lcall
add
pushaw
movl
test
into
int3
bound
mov
xchg
pusha
ja
outsl
xor
aas
add
mov
pop
dec
add
xor
jg
add
sbb
jle
test
mov
iret
hlt
jmp
push
cmpsl
dec
mov
mov
dec
pop
mov
adc
push
fimuls
call
sub
arpl
cmp
ljmp
loop
sub
shrb
sub
pop
mov
jecxz
rolb
jp
dec
mov
je
jb
jmp
sbb
pop
aam
xorb
or
and
mov
inc
sub
mov
pop
xor
push
inc
xchg
gs
mov
adc
or
lret
push
cmp
in
mov
std
cmp
mov
sbb
imul
gs
test
or
flds
mov
arpl
mov
cs
test
bound
sub
xchg
jnp
sub
or
hlt
das
and
invd
test
fucomip
adc
pop
sub
and
lods
test
sbbl
inc
mov
scas
inc
dec
pop
cmp
mov
stc
negb
mov
clc
xchg
fisttpl
or
jno
inc
push
push
sub
aas
fs
push
inc
adc
add
in
inc
mov
push
mov
mov
hlt
sahf
xchg
mov
js
lods
incb
incl
jb
pop
lahf
jns
push
sbb
inc
sahf
sbb
pusha
pop
or
mov
mov
jns
inc
pop
test
call
ret
cmp
pop
xchg
mov
ljmp
cmpsb
rcll
xchg
enter
add
and
add
ret
pop
cwtl
pop
aam
add
cmp
inc
dec
sub
incb
dec
lds
xchg
icebp
inc
xchg
rcpps
sub
jno
push
les
sub
push
adc
pop
push
popa
jmp
and
movsb
xlat
mov
sub
inc
mov
js
out
ljmp
movsl
cmp
lods
mov
orb
cmpsb
mov
shlb
mov
pop
push
add
and
add
xor
mov
lcall
clc
call
ficompl
mov
inc
push
sbb
lds
dec
sahf
hlt
sahf
lods
adc
jmp
or
mov
mov
push
icebp
stos
cmp
subl
nop
and
pop
filds
nop
aaa
scas
or
in
lds
cmp
cmpsb
jmp
adc
jne
rcrb
pop
dec
sbb
dec
push
mov
lods
out
aam
jle
cmp
es
lock
test
add
add
mov
xor
out
adc
shlb
xor
mov
pushf
scas
dec
std
mov
dec
push
cmpsl
movsb
cwtl
cmp
outsb
adc
add
dec
jg
mov
xchg
or
and
rorb
dec
lea
shrb
xor
cmp
inc
fsubrl
xchg
pop
das
dec
mov
loop
fs
es
add
pop
rcr
and
sarb
in
sarl
or
jo
ja
fdiv
inc
mov
pop
mov
rorb
mov
pop
pop
mov
fs
pushl
or
test
xor
insb
mov
and
cmpsl
fwait
aam
push
pop
nop
cmp
call
jmp
or
dec
aaa
test
mov
lock
inc
push
pop
or
cmp
add
sbb
lcall
loope
movsb
pop
cmp
cmpsl
shrb
xchg
pop
or
jp
subb
mov
jmp
and
stc
inc
and
inc
pop
xchg
int3
and
inc
cwtl
or
dec
std
incl
sbb
or
subl
pop
pop
js
xor
jb
add
fimuls
sub
insl
hlt
mov
loopne
leave
shlb
mov
imul
and
aaa
inc
or
cli
decl
in
not
ds
fdivrl
inc
lea
adc
loopne
mov
or
decl
add
xchg
adcb
sbbb
jmp
push
mov
pop
xor
jmp
dec
push
push
dec
and
sbb
outsb
push
into
sbb
lock
push
sub
jnp
push
sbb
jo
adc
mov
es
fsubrp
adc
cli
sub
and
lds
inc
cli
es
in
xor
and
test
jp
pop
stc
dec
mov
mov
mov
lea
loop
lgs
stos
test
pop
dec
xor
push
pop
icebp
xchg
inc
and
scas
and
addb
mov
loop
or
push
push
xchg
mov
mov
fcomip
incl
adc
ljmp
cwtl
jb
cmpsb
pop
cmc
adc
xchg
cmpsl
in
loope
cmp
fbld
push
push
test
aas
sub
aad
jecxz
adc
mov
pusha
lcall
sbb
les
bound
sub
pop
push
ljmp
push
std
or
scas
stos
and
roll
ret
nop
shrb
js
dec
mov
testb
inc
jno
xchg
push
popa
jge
cmpsl
movsl
push
testb
bound
inc
jp
insb
sar
cmpb
lahf
das
mov
out
enter
add
add
sub
je
cmp
adc
cli
scas
jg
or
sti
test
pop
ret
xchg
sbb
lods
ljmp
adc
mulb
mov
lcall
jns
fcom
fmuls
fwait
mov
mov
fsub
add
out
and
cmp
push
and
push
aad
jae
scas
add
clc
inc
push
cld
cs
rcrb
push
mov
push
loopne
leave
lods
into
mov
jle
and
fiadds
dec
aaa
xchg
mov
add
push
inc
lahf
test
cli
call
jecxz
lds
or
lahf
es
pop
sub
in
xchg
push
and
mov
mov
sbbb
cmp
call
mov
sbb
adc
sub
incl
clc
data16
cmc
cmp
and
bound
in
or
sbb
push
adc
inc
jp
xor
movsb
std
lcall
or
pop
or
sbb
sarl
sub
ja
aaa
inc
pop
and
jmp
call
mov
repz
add
pop
stc
cmp
test
cmpsb
jmp
cmp
mov
push
bound
call
mov
mov
pusha
in
xor
sar
sbb
fistps
inc
cmpsb
div
clc
dec
addb
mov
sbb
inc
adc
push
mov
jg
push
cmpl
and
sbb
xchg
mov
inc
add
sub
mov
out
lea
rcrb
add
lcall
rclb
xchg
cwtl
test
dec
stos
jmp
pop
and
pop
or
inc
pop
xor
mov
andl
pushf
jecxz
ds
nop
fisubl
mov
adc
pop
inc
xchg
add
gs
pop
or
mov
mov
rclb
sub
fsubrs
cmp
pop
std
cld
sarb
mov
mov
jo
mov
sub
xchg
in
add
ja
scas
adc
mov
loop
xchg
test
pop
test
jg
fisttpl
sahf
mov
mov
pop
test
shlb
jmp
jb
push
fcomi
jp
or
repz
stos
add
mov
das
add
inc
arpl
dec
jmp
shll
daa
xchg
ret
push
xchg
addr16
arpl
cmpsb
pop
rclb
sbb
sbb
xchg
sti
cli
jg
je
push
or
mov
xchg
and
jns
mov
cld
aas
inc
push
xchg
ss
xchg
pop
sbb
incb
push
or
mov
leave
les
xor
jmp
enter
ret
jl
sub
negb
ja
jbe
add
inc
popa
mov
xchg
xor
stos
call
sbb
cld
mov
shlb
stos
cmpsb
and
frstor
ficompl
lahf
fisttpll
sub
movsb
sti
aaa
cld
fbld
fistpl
and
pop
imul
in
fcmove
insb
int
dec
jl
pop
mov
xor
xor
decl
add
fists
mov
fbld
andb
negl
pushf
rolb
jecxz
pop
sub
lds
mov
adcl
jg
xor
test
std
pushl
movsb
or
pop
push
sub
mov
dec
xor
pop
jge
inc
test
js
push
mov
mov
out
jb
fmull
mov
pop
lods
lock
les
xchg
ficompl
push
add
es
mov
and
sarl
mov
mov
imul
mov
mov
mov
orl
push
cltd
jmp
xchg
and
sub
mov
out
sub
aas
cmp
dec
mov
dec
cmpsb
subb
fwait
in
popa
loope
xorl
jg
test
orl
jg
dec
ret
xchg
cld
cwtl
add
es
xlat
stc
pop
out
cli
pop
and
add
dec
cmp
mov
fiaddl
mov
jmp
add
ja
mov
sbb
sahf
ret
pop
leave
lcall
jmp
testb
and
cmp
std
mov
dec
xchg
ljmp
sub
nop
pop
mov
mov
mov
cmpsb
repz
cmp
jp
adc
sbb
push
pushf
in
sbb
push
sub
mov
xor
aaa
loopne
lods
repz
divb
test
loope
xchg
inc
cmp
insb
mov
outsb
shll
push
sbb
and
pop
sbb
mov
scas
mov
cltd
sub
dec
loope
lcall
outsl
xchg
push
ret
fimull
fldenv
pop
mov
or
fs
ljmp
jno
push
loope
push
cli
jno
jb
dec
or
dec
flds
add
hlt
fcomip
cwtl
out
pop
xor
ret
adc
es
pushl
cld
out
pop
and
das
shlb
sahf
leave
not
test
std
test
push
push
clc
shlb
out
cld
xchg
dec
adc
pop
adc
subb
push
hlt
jg
jo
sbb
cmp
cmp
neg
incl
lock
out
jb
test
les
nop
jbe
aam
leave
mov
pusha
mov
jp
mov
decl
in
dec
cmp
loopne
clc
insl
movsl
outsl
jo
sbb
mov
push
lods
call
inc
xchg
add
mov
idiv
inc
jp
push
xor
lods
mov
add
ja
or
aad
sub
push
fsqrt
push
add
hlt
add
xchg
ret
insb
mov
rolb
push
lock
pop
shl
mov
ret
push
les
aaa
adc
pop
je
push
pop
rcrl
les
sahf
movsl
loopne
dec
cmpsb
stc
enter
mov
imul
inc
clc
jae
mov
mov
data16
push
fcompl
jno
jmp
push
mov
cmp
jmp
rcl
aam
icebp
ljmp
bound
cmpsb
mov
sahf
add
iret
clc
scas
pop
push
repnz
inc
mov
sbbl
pop
clc
aaa
push
cmp
xorb
aas
movsl
push
fsubrs
subb
nop
sbb
loop
pushf
mov
decl
insb
bound
push
and
cmp
mov
out
add
push
cltd
adc
sbb
mov
pusha
sarb
push
sub
pop
lock
fsubrl
lahf
push
jg
jmp
mov
adc
mov
loopne
movsl
jmp
sahf
aad
cmc
jg
daa
adc
shlb
ljmp
add
pop
push
pop
xor
fs
xchg
add
mov
or
hlt
sub
or
cmc
or
cmp
fsubrs
cmp
sbb
flds
rol
xor
fsubrs
cmpsb
imul
dec
clc
mov
test
subb
mov
test
inc
ret
dec
loope
outsb
ret
and
pop
icebp
pop
pop
push
mov
adcb
mov
push
cmp
xor
lock
loopne
sub
lods
add
lock
imulb
mov
inc
dec
jb
addl
xchg
dec
cmp
sbb
sarb
sbb
fisubrs
enter
sbb
pop
insl
loopne
xchg
les
add
jl
jo
mov
in
cwtl
pusha
adcb
loop
pop
sbb
jo
or
mov
aas
and
flds
sar
mov
sbb
stc
out
adc
inc
mov
imul
popa
or
pop
mov
xchg
mov
jg
movsb
std
or
xchg
fisubl
leave
das
pop
jnp
cmp
ret
scas
clc
or
inc
popa
mov
dec
jmp
aad
movsl
mov
loopne
jecxz
leave
adc
sbb
inc
sub
add
fidivrl
out
lods
or
les
cmp
daa
stos
add
fld
scas
and
push
add
ja
pop
test
mov
cwtl
ja
dec
jmp
and
add
inc
jl
idiv
pop
inc
jne
cmp
js
cltd
pusha
xor
idivl
orb
incl
push
in
test
cld
into
aas
cmpsb
mov
out
xor
cmp
or
je
lds
mov
insl
stos
orb
test
add
inc
andl
iret
cmp
sbb
jle
cmpsl
dec
out
dec
sub
loope
clc
out
adc
jns
shl
jg
stos
test
nop
lock
mov
mov
loop
push
and
push
test
xlat
adc
dec
push
clc
jmp
cmp
add
push
adc
push
sbb
je
je
rcrl
std
push
lret
insb
sub
pushf
stc
pop
fs
sub
or
sbb
pusha
cmpsl
inc
dec
insb
daa
lret
sbb
sbb
loop
push
ljmp
outsb
cmc
ja
pop
insb
mov
cmp
fsubp
in
jmp
xchg
push
rorl
loopne
sbb
inc
clc
faddl
or
sbbb
inc
lds
inc
push
add
loope
cld
pop
pop
pop
pushf
stos
lds
push
inc
pop
ljmp
push
pop
arpl
rorl
cmp
sub
pop
leave
call
add
ret
in
sub
ds
lods
xchg
clc
and
scas
xor
scas
fadd
mov
inc
adc
sub
scas
push
fs
loop
shlb
mov
and
adcb
rcll
adc
fnstsw
lret
call
xor
sbb
or
test
out
inc
loopne
incl
sub
imul
adcb
or
cmp
dec
pop
cmp
jae
cmp
push
mov
in
sub
test
jmp
aaa
pop
fisubrl
jge
sub
jb
nop
xor
or
jae
sar
js
jbe
fisubl
iret
push
dec
test
or
add
push
pop
mov
xchg
cmp
jmp
fadds
or
add
movl
cld
jg
test
shl
cmpsl
pop
cmpsl
add
int3
lods
aad
bound
push
call
mov
mov
xchg
ljmp
cmp
xchg
orl
pop
test
xchg
sti
mov
adc
adc
xor
push
adc
sbb
jle
gs
stos
outsb
lret
xor
call
dec
or
and
xchg
fildll
addb
lods
mov
hlt
test
or
insb
cld
pop
and
adc
add
rolb
sub
mov
je
sbb
xchg
loope
xor
pop
hlt
cmovge
or
stos
fcmovnbe
in
test
std
fistpll
int
mov
scas
imul
sbb
into
call
mov
xlat
popa
fs
mov
push
push
leave
inc
sub
sub
dec
roll
or
es
inc
lock
jmp
shll
mov
pop
add
jp
or
pushl
enter
add
popf
js
cmp
add
sti
int3
je
decl
push
out
hlt
in
roll
bound
xchg
orb
xchg
jne
clc
pushl
out
sbb
cmpsl
lret
pop
int
rorb
fucomp
clc
inc
sbb
sahf
enter
xchg
xchg
ret
jmp
pop
pop
dec
jmp
insb
movsb
push
pop
xor
jl
enter
and
dec
push
jl
and
dec
loopne
mov
push
dec
ret
inc
ret
aas
jp
cmp
pushl
cmc
popf
ret
jmp
pop
movb
dec
xor
lods
lds
xor
cwtl
jge
int
push
imul
xor
mov
inc
xchg
inc
inc
data16
test
adc
jecxz
cmpl
sub
in
xor
mov
fs
adc
das
clc
mov
add
out
jle
sarb
andb
adc
add
cli
das
lods
jae
pop
cwtl
mov
lock
mov
inc
sti
fimull
mov
movsl
adc
jns
adc
adc
ret
decl
in
adc
out
ljmp
mov
cwtl
clc
decl
mov
enter
sbb
scas
mov
and
sbb
lods
test
js
jecxz
ret
sahf
fucomip
jno
into
sub
insb
jp
in
inc
xchg
out
popa
andb
add
test
leave
dec
leave
insl
push
or
pop
push
or
or
movsl
pusha
faddl
aam
mov
mov
aaa
std
sub
js
loope
sbb
ret
aas
aas
xchg
addr16
daa
or
cwtl
sbb
and
xchg
sbb
and
stos
dec
xchg
hlt
test
out
add
ja
cld
add
and
loop
out
idiv
or
jbe
outsb
add
iret
cltd
mov
fidivl
adc
mov
cmpsb
incl
pop
mov
pop
mov
into
inc
push
fdivp
jg
inc
fs
jl
add
and
push
mov
call
sub
pop
das
and
push
mov
or
dec
mov
mov
dec
inc
call
mov
mov
pop
push
jae
and
pop
fsubr
sbb
mov
in
bound
inc
jae
sbb
mov
inc
sub
adc
add
mov
or
fwait
push
adc
sub
and
sub
decl
jo
mov
pop
insl
test
jg
sub
adc
std
outsl
mov
or
rol
mov
sub
js
test
dec
aaa
incl
shrb
pop
bound
xchg
add
cltd
and
cmp
sti
hlt
adc
and
arpl
jne
or
daa
mov
jb
inc
outsb
pop
clc
fbld
fldcw
shlb
and
or
pushl
add
mov
ds
cmpsl
fisubrl
call
or
loopne
sbb
mov
push
out
adc
mov
or
scas
les
adc
andb
rcrb
test
push
xorb
add
lcall
or
adc
test
nop
sub
rolb
mov
ffreep
mov
jl
and
or
lds
push
mov
sbb
xchg
mov
xor
mov
pop
andb
mov
mov
pop
out
mov
sub
lcall
sarl
lods
push
dec
fists
push
test
and
ficoml
jne
xor
sbbb
decl
adc
pop
or
pop
sub
add
add
push
ss
adc
adc
in
jne
xorb
rorb
jbe
outsb
sub
xchg
push
cld
or
sbb
inc
dec
push
inc
loope
mov
call
shl
ds
filds
fcmovb
addb
pop
subb
aas
lods
push
push
aaa
push
add
orl
pop
mov
adc
fsubrs
sbb
movsb
mov
dec
pop
inc
rcr
mov
jmp
ret
cmp
sahf
sbb
cltd
jg
adc
cmp
cmp
decl
adc
mov
lret
mov
das
cld
loope
and
jle
mov
lret
and
imul
cmp
test
add
incl
mov
ret
or
push
push
push
lods
bound
mov
add
sbb
mov
mov
ljmp
cld
add
pushf
jmp
and
daa
ret
shll
in
cmpsl
mov
and
xchg
adc
mov
and
aas
cmp
mov
test
jae
in
dec
pop
insl
jns
xchg
mov
ljmp
adc
lcall
lods
outsb
push
mov
aad
pop
cld
and
shrb
mov
outsb
push
xor
andl
call
xchg
jnp
rcll
addl
add
fwait
xorb
andb
fbld
arpl
fdivrl
or
cmpsb
sbb
dec
xor
mov
cmp
sbb
xchg
lds
ret
fistps
icebp
loope
sbb
cmp
fidivs
mov
or
add
add
add
sarl
cmp
lods
xor
ljmp
movsl
pop
push
shlb
enter
out
dec
push
xchg
js
inc
into
movsb
cmc
aaa
sbb
mov
jge
stos
test
cmpsb
les
lds
mov
add
clc
out
cmp
lds
lock
push
mov
psubd
push
mov
adc
cld
pop
xor
in
mov
xchg
call
fs
pop
js
mov
xchg
dec
in
stos
fs
and
loopne
clc
in
inc
dec
repz
jle
mov
in
js
cmp
inc
aas
pop
jno
out
adc
clc
add
lcall
add
jg
pop
and
test
aam
xor
cmp
lcall
hlt
nop
lds
push
add
inc
test
int
jno
jg
pop
mov
jmp
stos
push
dec
nop
cs
test
into
std
jg
pop
fdivrs
and
sub
adc
in
subb
mov
fcmove
adc
cwtl
sub
imul
sub
dec
push
ficomps
and
es
ljmp
popa
xor
sub
inc
sbb
and
or
inc
test
into
jbe
adc
sub
or
jmp
push
lcall
or
mov
fnsave
rcrb
add
cs
fisubl
gs
xchg
std
pop
pop
mov
ret
ret
sbb
lcall
jns
jns
dec
leave
push
ret
push
dec
adc
popf
bound
stos
xor
fcomip
mov
and
add
adc
stos
mov
cs
rcl
decl
cmc
push
dec
cli
xor
push
loope
inc
xor
or
pusha
or
mov
and
jecxz
aaa
add
ror
ffree
pop
push
adc
incl
add
movsl
repz
pop
add
mov
loop
fs
enter
incb
adc
cmp
sub
pop
dec
pop
mov
ror
push
mov
mov
stos
loope
cmp
dec
add
stos
cmp
push
andb
xchg
fisubrl
cmp
rclb
test
cmp
loopne
dec
pushf
sbb
sarl
in
add
and
jns
sti
pop
scas
js
sahf
mov
call
imul
sub
mov
inc
in
icebp
fdivr
xor
daa
mov
mov
out
out
pop
mov
add
mov
xchg
inc
xchg
mov
pop
inc
mov
mov
push
ss
dec
adc
mov
dec
out
add
popa
sub
push
pushf
gs
xor
cmp
lods
add
cmp
ret
sub
mov
jb
imul
inc
mov
stos
sbb
lea
xor
push
mov
call
lea
loopne
test
ja
ret
int
xor
pop
or
cmp
decl
movsb
loopne
outsb
jns
push
aam
push
movsb
and
inc
scas
push
fiadds
imul
cli
push
pusha
or
or
cwtl
dec
sbb
dec
fcomps
lahf
sbb
sub
inc
pushf
testb
sbb
mov
into
es
push
mov
movsl
pushl
sub
shrl
push
hlt
adc
adc
repnz
test
dec
cli
add
mov
pop
pop
xchg
call
pop
int3
mov
clc
ss
cmp
inc
popa
push
incl
mov
fwait
mov
into
push
idivb
in
bound
jno
std
add
stos
sar
xor
sub
mov
pop
pop
stos
gs
enter
fisubl
and
sub
cmp
loop
inc
stos
mov
test
outsl
jg
loopne
ja
in
add
popf
fcoml
jle
and
lcall
mov
xorl
ljmp
add
cwtl
dec
sub
push
and
mov
xor
pop
sub
imulb
fcoms
loop
lcall
pop
add
add
jne
mov
sub
mov
aaa
ret
or
adc
arpl
dec
decl
fsubr
jbe
shl
sub
push
and
popa
add
inc
ror
xchg
lret
ljmp
stos
adc
push
bound
das
xchg
psadbw
pusha
sub
lods
or
pop
cmp
adc
mov
push
or
lods
test
mov
push
sbb
movsb
stc
mov
mov
mov
and
mov
popa
jg
or
mov
pop
add
xchg
add
add
and
push
push
dec
lret
add
mov
push
push
mov
sub
lods
mov
arpl
and
xchg
fdiv
fldl
fldenv
es
pop
mov
shrb
xchg
into
cmp
jb
push
push
das
adc
or
xchg
pop
hlt
jg
xor
and
xchg
test
sbb
int
roll
cwtl
push
into
sahf
xchg
push
xchg
std
push
adc
pusha
call
les
or
cmp
adc
lods
dec
and
fiadds
sbb
jmp
cmc
je
xchg
data16
mov
and
cli
inc
inc
popl
mov
dec
aad
rcl
push
dec
push
enter
cli
push
shll
popa
push
or
and
jae
int
mov
adc
out
ret
jge
sbbl
test
les
add
mov
pop
jl
xchg
pop
lahf
insl
inc
daa
mov
loop
mov
mov
jge
sbb
xchg
imul
nop
adc
and
mov
adc
out
movb
insb
pop
push
fidivs
test
loopne
les
jo
cld
adc
ficompl
push
mov
xchg
inc
or
call
adc
bound
inc
rorb
adc
lds
lcall
andb
push
nop
call
xlat
inc
jl
test
popf
add
sub
xor
mov
and
ffree
in
test
sub
cli
add
cltd
pop
lds
cmp
sub
inc
jle
jg
or
ret
sub
mov
and
roll
int3
inc
ss
jle
jb
pusha
jge
insl
xor
mov
push
jl
cld
push
cwtl
in
in
xchg
insl
mov
out
fwait
jg
add
sub
loope
push
mov
ret
cmp
jecxz
fld1
push
jmp
mov
mov
aas
out
sbb
addr16
inc
test
fstpl
jmp
mov
add
stos
ss
xor
icebp
fisubl
jae
sub
pusha
rcrb
sub
fisubl
pop
sahf
inc
loop
sub
in
and
jle
xchg
add
fiadds
pop
jne
or
shlb
push
xor
pop
add
andb
sub
test
sbb
sahf
scas
sub
pop
sbb
xchg
pop
xchg
out
ficoml
or
cmp
lock
ljmp
or
add
inc
jb
adc
pop
push
lcall
xchg
ret
mov
jmp
pop
in
dec
andb
sbb
jb
cmp
bound
mov
shlb
ficompl
pop
jecxz
in
fbld
leave
dec
test
je
cltd
in
mov
out
or
adc
movsb
sbb
ss
ret
bound
shlb
dec
pop
sub
push
adc
mov
xchg
in
cwtl
imul
rcrb
outsl
std
pop
dec
inc
mov
sub
sub
adc
repnz
movb
push
incl
xchg
sbb
or
imul
inc
mov
sub
adc
and
push
add
data16
int3
out
out
push
inc
mov
hlt
incl
bound
sub
mov
and
and
hlt
decl
pop
push
fldenv
testb
incl
movsl
movsb
loopne
or
iret
xchg
aam
sub
and
shrb
mov
lret
pop
mov
push
incb
notb
xchg
cli
inc
loopne
stos
andl
outsl
mov
clc
outsb
jne
iret
xor
aam
pop
and
jnp
in
adc
fbld
loopne
data16
inc
mov
xor
and
or
jbe
or
dec
pop
ds
mov
push
add
xchg
lcall
dec
pop
push
mov
in
mov
cli
or
mov
and
arpl
jg
pop
mov
mov
leave
insb
cmpsb
push
int
es
fbld
comiss
fwait
daa
inc
add
jg
mov
je
adc
push
hlt
or
add
pop
sbb
mov
imul
lock
jmp
mov
or
dec
int
add
imul
sbb
or
test
pop
and
test
pop
std
lcall
and
xchg
and
imul
lret
adc
jl
jne
scas
decl
incb
mov
jmp
mov
xor
iret
lods
popa
mov
jmp
sbb
adc
arpl
cmpsb
sub
fstpt
and
jns
adc
paddusw
js
nop
adcl
jb
cmp
out
mov
fnsave
add
mov
sub
mov
or
inc
aaa
jle
lret
jb
push
inc
adc
test
mov
jb
and
inc
mov
or
add
and
sub
int
jg
push
sub
ljmp
lods
cs
lret
add
cmp
sub
shll
push
repz
shll
lcall
bound
pop
dec
pop
rcl
jno
mov
or
pop
push
mov
dec
or
std
pushl
sbb
dec
scas
shlb
add
pusha
mov
xchg
xchg
call
mov
loop
push
lods
shll
push
or
test
aaa
or
inc
sbb
cmp
sahf
pushf
cmpsb
mov
das
cmpsb
or
sub
xchg
or
mov
dec
ret
andl
push
xchg
sbb
push
cld
ja
dec
mov
sbb
push
sarb
add
aas
adc
outsl
mov
mov
aam
inc
ret
imul
js
mov
push
mov
into
or
int3
imul
mov
dec
mov
inc
mov
and
xorb
push
add
mov
inc
mov
add
and
jb
mov
fstpt
jg
cmp
popf
and
ret
mul
out
in
cltd
push
push
ds
or
mov
inc
pop
orb
xor
and
xor
mov
pushf
xlat
or
jb
aas
adc
lods
aaa
std
adc
sbb
iret
repnz
push
xorl
insb
mov
lcall
inc
sbb
mov
mov
cli
inc
sti
or
lret
dec
dec
mov
es
mov
or
lahf
nop
jno
mov
inc
rol
sbb
stos
pushf
das
mov
lds
mov
insl
xor
inc
push
call
add
xor
aam
cmp
push
mov
mov
dec
lcall
pop
add
js
into
sub
ret
std
sub
mov
test
jo
sbb
dec
movb
adc
scas
or
jbe,pt
addb
shlb
mov
jo
mov
xor
mov
imul
and
sbb
mov
insl
inc
int
and
inc
mov
nop
ret
fmull
inc
mov
mov
hlt
jmp
mov
fstpt
jb
inc
lods
and
shrl
ret
or
xchg
incb
cmp
sub
loope
fs
incl
addb
orb
mov
xor
dec
mov
mov
decl
lods
sbb
cmp
add
cmpsb
sub
pop
int
pop
mov
incl
dec
jns
adc
adc
jne
add
cli
push
xor
cmp
out
es
jg
daa
shr
ret
add
test
push
test
lahf
xchg
add
in
jo
jg
cmpl
fadd
mov
xchg
inc
xlat
lock
daa
xor
add
xchg
jo
cld
mov
or
cli
cmc
pop
xchg
mov
movb
and
jge
sub
imul
add
int3
dec
loop
cld
repz
iret
push
in
xor
testl
lds
cmp
lahf
out
pop
sbb
mov
mov
push
add
pop
sub
and
xchg
fdivl
arpl
imul
dec
dec
dec
mov
push
jg
add
xor
adc
fcoml
dec
dec
sub
lahf
mov
or
mov
jg
add
cld
inc
mov
adc
fldcw
and
sar
pusha
sub
shr
ret
fwait
loop
jb
lcall
fsubp
mov
push
fsubrl
or
lcall
mov
push
sarb
repnz
leave
and
dec
dec
xor
jg
mov
or
jo
inc
adc
push
pop
les
lds
cmovno
lahf
jns
and
call
cmp
out
scas
mov
sbb
stos
or
imul
sub
inc
push
mov
jg
and
and
mov
mov
shl
lcall
in
dec
mov
rorb
inc
sub
xchg
incl
cwtl
inc
mov
adc
cmp
in
jle
mov
xchg
subb
adc
clc
out
add
add
xchg
push
mov
push
js
mov
xchg
dec
xchg
sub
js
add
or
push
shll
dec
push
cld
fdivl
pop
movsl
ret
incl
mov
enter
and
inc
arpl
add
jg
jnp
loop
test
and
rol
xchg
mov
cld
xchg
scas
orb
xor
and
rorb
xchg
lret
sub
jmp
push
lods
xchg
mov
lods
mov
xor
mov
fdiv
mov
cmp
or
ds
es
inc
jle
sub
aas
mov
sub
mov
js
mov
dec
mov
push
inc
pushl
cmp
test
lods
xchg
into
dec
ret
pop
ret
scas
xchg
push
sub
data16
loopne
dec
test
sub
out
xchg
outsb
xchg
mov
xchg
dec
adc
add
jecxz
lds
xchg
fidivs
popa
lock
pop
mov
mov
dec
sub
sarb
adc
nop
inc
sbb
fs
in
test
js
sub
push
sub
add
add
push
popa
mov
imul
sub
mov
adcl
pop
hlt
pop
adcl
push
jp
jg
nop
adc
andl
cld
test
fs
sub
stos
lcall
add
mov
jo
ds
cmp
jnp
pop
mov
repz
or
mov
lods
push
or
loop
sbb
insl
cs
and
pop
fwait
pop
hlt
push
cmc
cs
or
sub
arpl
jbe
add
aaa
pop
sbb
push
dec
int3
jmp
clc
push
xchg
ret
adc
jg
dec
inc
jmp
lds
orl
and
push
in
jnp
sbb
movsb
loopne
xor
dec
je
xor
lret
rcll
pop
popa
int
sbb
je
dec
xor
push
mov
decl
jo
add
xchg
add
rolb
ret
push
sub
sarb
lcall
shlb
inc
push
lcall
movsl
pop
pusha
loopne
mov
pushf
and
hlt
clc
adc
push
aaa
bndldx
les
push
imul
pop
xchg
sub
lcall
xchg
adcl
pop
lcall
hlt
fbld
ss
xlat
inc
xchg
xchg
cmpb
mov
loop
xchg
mov
mov
fidivl
std
mov
shlb
mov
mov
pop
dec
cmpsl
or
ja
sub
lock
outsb
cmp
pushf
stos
xchg
les
pop
xor
aas
and
out
cli
inc
es
mov
mov
pop
or
cld
lcall
push
pop
mov
aam
push
cmp
in
add
cmp
inc
sub
fs
push
ja
xchg
mov
lock
in
xchg
test
inc
adcb
pop
add
rdpmc
inc
lock
lods
push
jp
cwtl
and
sahf
dec
mov
xor
ret
movsb
fwait
push
test
js
movsb
push
sar
lods
aam
mov
cld
mov
mov
out
in
test
ss
imul
jg
jmp
jge
or
divb
cli
mov
call
and
lea
sub
std
stos
add
nop
push
insb
mov
inc
int
jle
pop
mov
cmp
pop
cld
adc
sbb
dec
mov
cmp
sub
fildll
adc
push
jg
and
sbb
aas
xorb
sub
sbb
cmp
aad
or
mov
jo
daa
testl
jle
inc
cmp
pushl
out
xchg
push
dec
lock
sbb
fidivrl
cmp
push
push
pop
dec
fsubp
fbld
lret
loop
mov
lcall
xor
sbb
lock
scas
rorl
cmp
sar
pusha
pop
push
pop
and
cmp
xor
or
call
jmp
adc
lds
or
cmc
ss
adc
fs
xchg
nop
scas
cli
popa
sbb
jo
lcall
mov
mov
xchg
ljmp
and
adcl
dec
test
dec
cwtl
sub
mov
mov
inc
and
mov
mov
popf
mov
sub
dec
roll
je
pusha
ficompl
sbb
ljmp
dec
sbb
mov
sti
jmp
and
ja
iret
jo
add
xorb
inc
mov
mov
xchg
add
cld
mov
insb
divps
into
testl
fildll
fists
adc
pop
call
gs
jbe
mov
mov
insl
test
scas
jle
adc
pop
lea
enter
test
adc
hlt
xor
inc
bound
int
fxam
jne
jmp
inc
repnz
xchg
loopne
ja
fsubrs
lods
ljmp
cli
inc
sub
or
mov
shlb
xlat
adc
movl
aam
and
ja
sbb
ret
call
fdivrp
inc
hlt
mov
nop
or
xchg
mov
xor
mov
stos
incb
repnz
imul
xchg
jmp
int3
cmpsl
in
add
sbb
xor
xchg
sub
jbe
push
jg
mov
mov
mov
cmp
aam
dec
sbb
call
cli
xchg
into
fildll
ljmp
sub
and
adc
fisubl
sbb
aam
push
sub
les
adc
adc
icebp
push
dec
addb
and
pushl
dec
das
enter
jns
sub
flds
mov
inc
dec
cld
pop
enter
or
in
sbb
cmp
fwait
pop
inc
loope
or
sahf
push
fildl
cmp
ljmp
dec
mov
orb
rolb
ds
push
insl
lock
mov
adcb
pop
xor
in
push
call
and
push
or
pop
jbe
push
data16
jno
inc
adc
scas
mov
enter
das
xchg
push
loopne
outsb
movsb
mov
xor
loope
add
aad
repz
jb
push
repz
mov
add
cld
js
adcl
lret
mov
rclb
pushf
or
xchg
xchg
mov
fcomi
xchg
pop
ja
inc
dec
mov
add
sbb
pop
jno
pop
rcrb
push
or
jg
lock
xlat
or
fs
sbb
sbb
add
inc
mov
xchg
push
hlt
adc
in
sahf
or
xor
adc
movsb
lahf
pop
scas
js
ror
lock
sub
mov
mov
mov
insb
js
push
sbb
imul
push
daa
or
clc
aaa
sbb
rcl
jl
call
scas
lahf
int3
mov
hlt
mov
mov
pop
or
push
sarb
ficoml
js
imul
mov
mov
jl
ficoml
fisubl
pusha
into
scas
scas
xchg
jno
mov
add
ret
mov
in
cmp
das
dec
popf
adc
push
xchg
and
jbe
ficomps
or
add
nop
bound
clc
push
jge
pop
les
test
adc
pop
popa
inc
and
sub
xor
fcoml
mov
and
test
lcall
xorl
dec
mov
aas
inc
in
mov
lods
cld
dec
bound
hlt
cmp
add
sub
or
mov
or
pop
and
mov
test
xchg
jns
cmp
pop
repz
int
jp
xchg
ljmp
js
adc
and
pop
sbb
shll
inc
stos
jmp
mov
xchg
cmp
sbb
mov
shlb
mov
adc
sbb
cmpsb
mov
mov
fbld
movsl
sbb
xchg
mov
jmp
lret
push
jo
incl
mov
adc
ja
jl
std
mov
hlt
mov
pop
rorb
lods
outsb
sbbl
iret
xchg
rorl
mov
xor
jmp
sarl
cs
lods
dec
les
mov
inc
jle
addl
les
and
fisttps
les
jno
push
out
iret
jmp
add
push
ja
mov
js
pop
push
inc
mov
mov
adc
pop
lds
mov
and
jge
fnsave
sbb
jne
sub
and
jbe
sub
jle
arpl
adc
xchg
das
xchg
cmp
mov
xchg
push
push
hlt
ret
and
ljmp
jle
xor
sub
test
aam
lcall
jle
add
push
jge
and
shl
fiaddl
hlt
mov
loopne,pn
push
in
cmpsl
test
push
dec
sub
cltd
es
adc
nop
das
xor
scas
jo
sbb
inc
push
add
mov
and
mov
and
inc
fisubs
xor
fbld
inc
add
push
add
xchg
stos
pusha
loope
ja
ds
ljmp
xor
sbb
inc
mov
pop
inc
add
jl
or
aaa
dec
adcb
hlt
or
cli
rcrb
int3
inc
aad
insl
clc
mov
sub
stos
mov
dec
pop
inc
stos
ljmp
and
test
mov
sub
dec
dec
add
les
scas
mov
jg
xchg
xchg
scas
push
sub
stos
daa
cltd
xchg
jg
jnp
scas
add
adc
mov
add
ss
ljmp
jmp
cs
xor
imul
in
add
aaa
repz
mulb
mov
pop
and
sub
imul
std
mov
in
adc
test
aam
movsl
sbb
mov
sarb
and
or
popf
push
jmp
cwtl
int
xchg
out
mov
rclb
or
push
mov
mov
pop
jnp
jp
push
sbb
clc
fistpl
test
pushf
iret
push
popa
or
pop
xor
sahf
aam
add
loop
add
mov
iret
test
repnz
into
je
adc
push
push
xchg
xchg
and
cmp
inc
jb
out
pusha
daa
push
pop
add
push
pop
cld
mov
push
mov
cmpsb
mov
or
scas
push
lods
daa
test
push
cmpsb
out
test
xchg
sbb
inc
call
xlat
and
clc
les
cld
mov
add
add
dec
out
xchg
xor
mov
sbb
sub
orb
mov
sbb
notl
popf
fildll
push
inc
jmp
pop
movsl
decb
fs
cmp
inc
subb
enter
movsb
hlt
filds
aaa
dec
add
stc
add
jge
repnz
stos
push
mov
add
xchg
mov
cmp
pusha
dec
faddp
add
outsb
add
mov
stc
or
cmp
mov
ljmp
mov
es
movsl
and
mov
imul
das
sarb
jl
sub
int3
mov
bound
pop
dec
call
lcall
cs
sbb
cmp
inc
sti
mov
mov
out
mov
icebp
decl
inc
movsl
jecxz
nop
push
iret
pop
pop
in
icebp
jge
fdivrl
aas
outsb
pop
je
cs
clc
imul
ds
cs
test
js
sbb
cmpsl
mov
sbb
push
cmpb
test
movsb
adc
xchg
or
jmp
rcrb
loopne
jmp
dec
fisubrs
mov
fdivrs
fisttps
std
nop
add
pop
mov
mov
incl
dec
mov
push
sbb
popf
and
xchg
cli
mov
mov
push
push
inc
pop
push
mov
fdiv
pusha
cmp
adc
xor
test
dec
jbe
movsl
dec
nop
inc
cmp
jg
jg
js
cwtl
fisubl
shlb
insb
xor
loop
lock
fwait
fwait
sar
adc
sub
cmp
ljmp
sub
pop
xor
xor
ret
mov
push
inc
push
loopne
dec
add
imul
mov
xchg
testb
and
fcom
inc
je
fadds
inc
int
jle
shlb
mov
outsl
add
int3
mov
and
add
lcall
cs
insb
sub
faddl
mov
or
and
dec
cmp
in
sbbl
jge
call
pop
loop
roll
andb
lea
inc
add
sbb
xchg
decb
sti
sub
push
mov
sbb
push
in
rclb
mov
and
js
shlb
repnz
and
scas
bound
xchg
push
ret
testb
adc
ljmp
sbb
mov
sbb
adc
sub
data16
outsl
mov
out
pop
mov
lcall
push
loop
loope
hlt
add
jg
ljmp
xchg
dec
jmp
pop
push
mov
push
mov
aad
jbe
pop
aas
xor
sub
ljmp
clc
stos
fbstp
xchg
xchg
rorb
and
mov
nop
subl
inc
bound
xchg
jg
mov
shl
sub
jmp
fistps
and
dec
add
xchg
leave
cwtl
xchg
sarb
sahf
and
shrl
cli
sbb
xchg
adc
or
inc
or
jo
bound
aad
push
push
dec
rcrb
lock
decl
addr16
and
mov
mov
lock
mov
push
outsb
mov
push
inc
cld
rcll
adc
test
jl
ds
shll
outsl
fiaddl
xchg
jb
jae
and
fisttps
inc
and
rclb
aam
or
out
loopne
or
pop
lock
add
mov
jb
adc
stos
push
cmc
jmp
lods
and
out
dec
cmpsb
fistpll
ret
sbb
jp
out
in
or
xor
or
mov
ljmp
push
inc
dec
lret
jge
adc
decl
lret
pop
push
inc
pushf
fstpt
fs
addl
jns
xchg
aad
ljmp
xlat
arpl
dec
cmp
orb
lret
mov
cmp
jbe
pop
xor
xlat
fcompl
lea
mov
pusha
lcall
bound
mov
pop
adc
xor
movsl
adc
adc
sub
insl
aaa
add
add
imul
push
pop
pop
push
sub
pop
mov
mov
push
cld
or
jb
test
mov
pop
jg
or
push
lods
call
test
cmp
cwtl
orl
jbe
push
and
jns
and
out
mov
outsb
cmp
imul
loop
add
incl
mov
push
popa
scas
dec
mov
or
jmp
xchg
outsb
or
inc
push
fstpt
ret
fcmove
mov
addr16
push
lcall
loop
shl
and
ret
lds
and
fcomp
inc
daa
sti
sbb
inc
jo
xchg
mov
add
stc
data16
push
bound
test
inc
jl
movsl
cltd
nop
or
xor
out
les
lods
inc
rcrl
enter
aaa
lods
add
aaa
dec
add
andl
cld
pop
jg
add
test
and
adcl
adc
popa
std
jb
and
or
jbe
sbb
mov
sub
sbb
sbb
ljmp
rcll
sbb
push
call
cs
mov
mov
test
mov
jb
xchg
pop
sbb
je
push
rolb
cmpsb
adc
fistpll
cmp
dec
cmp
push
jo
int3
shlb
mov
cwtl
inc
mov
std
mov
xchg
and
jge
xchg
rcrb
test
inc
fs
mov
add
idivl
call
loopne
adcl
in
push
push
insl
sbb
ret
mov
push
cmp
ds
shlb
jg
nop
mov
out
fsub
adc
and
cwtl
dec
push
or
loope
mov
pop
push
cld
pop
rcr
out
mov
mov
fucomip
push
adc
push
xor
lcall
bound
and
cmp
xchg
popf
sub
nop
inc
loope
mov
pop
pop
popf
ret
testb
sbb
aaa
outsb
subl
mov
and
push
shrb
test
add
adc
addr16
mov
and
jmp
data16
xchg
sahf
adc
sbb
ja
xchg
les
pusha
xchg
xchg
js
nop
lahf
push
lock
pop
pushf
movsl
xchg
dec
mov
and
hlt
add
jecxz
movsb
push
jg
xchg
cmp
lock
mov
pop
lret
and
orl
rcll
xchg
fidivrl
inc
or
popa
loopne
sarl
xchg
fstpt
fs
sbb
mov
mov
outsl
shll
fisubrs
lret
jmp
jge
cmp
loop
call
mov
ds
mov
insb
cltd
repnz
sbb
pop
dec
cld
mov
cmp
lcall
stos
lock
insl
loopne
cmp
inc
fmull
pop
inc
std
xor
mov
std
fcmovne
push
cld
jg
mov
aaa
sbb
rolb
sub
xor
mov
cmpsb
daa
aam
jg
xchg
push
add
insb
fdiv
pusha
sub
outsl
xchg
in
cwtl
xor
and
loopne,pn
repnz
mov
jp
mov
push
sub
decl
push
xor
icebp
std
mov
rcrl
xchg
sbb
mov
inc
jmp
sub
fs
sub
subb
and
jg
mov
loop
jbe
pop
lea
xchg
mov
repz
loopne
nop
xchg
ret
inc
or
aaa
sbb
fildll
es
xlat
push
test
mulb
loopne
or
addr16
pop
add
mov
inc
arpl
mov
pop
add
jns
mov
leave
cmp
fwait
adc
cld
cmp
push
into
mov
nop
push
xchg
out
mov
jb
pop
sbb
or
fldenv
lds
rol
cmpsb
cmc
incl
sub
jle
shr
xchg
sub
jno
adc
loop
lcall
xchg
cld
or
test
das
insb
out
mov
fsubl
cld
scas
pcmpgtb
or
fwait
pushl
mov
xchg
stos
mov
inc
fisttps
jp
push
insb
push
xor
sbb
out
cli
add
add
ja
mov
rolb
cmp
movsl
dec
test
sub
out
add
lods
ret
cli
jg
gs
jo
test
into
pop
dec
add
mov
test
scas
pop
jne
mov
push
and
sub
inc
add
repnz
mov
ljmp
jbe
mov
test
dec
sub
imulb
mov
mov
mov
mov
sbb
jns
hlt
fildll
les
in
jno
mov
insl
mov
or
fisttpll
test
std
subb
inc
mov
fstps
adc
sub
inc
and
pop
outsl
fiaddl
int
xchg
sub
sbb
lcall
aad
pop
adc
push
testl
or
stos
rcll
rcrb
xchg
sbb
and
mov
int
rol
sbb
cmp
and
adc
xchg
int
ljmp
and
outsb
popa
test
decl
mov
out
cwtl
repz
cwtl
jle
cli
outsl
sbb
sub
pop
in
test
ljmp
mov
xchg
mov
inc
pop
jg
pop
and
mov
pop
addr16
and
std
mov
inc
mov
lcall
cmc
ret
test
insl
inc
lahf
add
jne
mov
outsl
add
lock
sub
adc
lods
incl
js
push
dec
xor
movsl
cli
out
ss
in
lods
mov
scas
loope
dec
pop
xlat
sub
and
cli
sub
call
jno
cmc
mov
adc
jbe
sbb
adc
sub
xor
out
pushl
or
imul
mov
scas
pushl
incl
adc
push
aas
cwtl
insb
icebp
mov
repnz
mov
dec
lahf
xchg
mov
clc
xchg
inc
sub
dec
push
push
add
outsb
push
push
pop
mov
adc
mov
das
xchg
leave
mov
mov
cli
mov
cmp
mov
jecxz
push
rclb
test
mov
insb
std
push
shlb
xor
adc
or
and
mov
jecxz
sub
jae
mov
icebp
mov
inc
mov
test
or
push
rcrl
jmp
mov
or
push
adc
testl
out
lods
mov
adc
mov
mov
setp
lock
stos
add
stc
mov
test
or
pop
cld
dec
jmp
push
xor
icebp
add
xor
outsb
inc
sahf
sub
xchg
push
outsb
mov
pop
or
push
mov
inc
add
pop
inc
push
add
dec
xchg
cmp
push
loop
clc
adcl
mov
iret
mov
into
ret
nop
cmpsb
or
or
les
sar
pop
cmp
enter
rcr
xorl
add
sbb
or
pop
sub
xor
dec
mov
popf
add
rorb
cmpsb
mov
xlat
jmp
decl
out
jecxz
jp
pop
es
loope
pushf
jp
adc
add
js
icebp
jno
out
js
dec
aaa
icebp
mov
lock
cmp
es
cmp
andb
inc
xchg
push
jo
rorb
das
xor
dec
fs
xor
cld
push
push
pop
inc
cli
test
mov
xchg
and
or
xchg
loopne
jmp
jnp
dec
std
decl
sbb
pushl
lea
rorl
push
gs
lahf
sti
cmp
sub
js
dec
jp
sbb
pop
movsb
decl
je
pushf
adc
xor
inc
sbb
jg
adc
sub
cmp
lds
xor
movntq
lret
insb
jecxz
add
int3
test
incl
inc
or
stos
jg,pt
hlt
lret
clc
test
push
adc
dec
adc
rolb
shl
mov
xchg
jle
xchg
scas
sbb
mov
or
adc
rol
sub
pop
and
decl
push
push
pop
sar
scas
inc
subl
inc
scas
pop
test
jl
rcl
sbb
xchg
add
lods
mov
fsubs
pop
popa
add
fcompl
xlat
xchg
call
pop
jg
dec
mov
and
xor
cltd
or
cld
or
mov
sti
lret
cmp
cwtl
les
add
shr
movsl
cmp
or
xor
sub
pop
jp
std
jg
xor
push
fcom
fcomi
add
rcrb
ss
or
rolb
test
pushf
or
insl
pop
cmpb
pop
add
call
stos
test
push
adc
mov
xor
push
sbb
push
push
nop
push
push
loope
out
inc
dec
sub
dec
mov
push
lock
std
mov
add
push
hlt
mov
add
xor
sbb
dec
fwait
push
divl
repz
add
aad
inc
js
xor
in
sarl
dec
out
jg
icebp
push
icebp
and
or
pop
adc
push
ljmp
imul
test
ss
out
xor
mov
lds
jne
ftst
movsb
push
pop
push
call
lock
fisubs
movsb
scas
dec
sub
sub
out
fcoml
sub
dec
push
ret
gs
into
inc
rol
inc
inc
xlat
sbb
pop
ljmp
add
mov
push
and
dec
std
jge
ss
or
jmp
adcb
lock
stc
sub
and
repz
rorl
add
scas
add
xor
inc
add
std
das
add
push
mov
cltd
mov
nop
mov
in
ljmp
jnp
dec
adc
idivl
dec
jmp
nop
or
xor
push
mov
in
lock
call
or
in
data16
cmpb
push
xor
mov
aad
jne
xchg
fistps
aaa
dec
pusha
jp
insb
int
std
enter
or
cwtl
ljmp
mov
int
inc
pop
push
shll
xorb
inc
jmp
pop
mulb
jno
push
jno
ret
daa
mov
cltd
xor
aad
sub
aam
mov
movsb
xor
xorl
lock
push
xchg
jl
xchg
dec
and
mov
loopne
add
jg
das
loop
adc
cmpsl
loop
mov
gs
and
je
out
imul
jg
shlb
add
cmpsl
pop
pop
push
pushf
sub
push
mov
les
addb
decl
jno
dec
ljmp
adc
sbb
pop
test
out
jl
pop
jo
lock
xor
in
mov
jge
mov
adc
call
xor
decl
inc
rorb
cmp
pop
jmp
xor
cli
bound
stos
enter
cwtl
and
cmc
fildll
push
fidivs
adc
fcomps
adc
xor
out
mov
cmp
and
lods
test
int
js
add
push
mov
pop
stc
out
xor
loopne
les
dec
sbb
sbb
lods
enter
cltd
push
sarb
sub
andb
or
adc
outsb
shlb
xchg
xor
aam
cmp
adc
inc
push
push
inc
jl
test
cltd
rcrb
mov
and
xchg
or
pop
movsl
fs
insl
cli
in
xchg
mov
clc
iret
test
dec
cmp
test
subl
push
outsb
stc
xor
push
fiaddl
das
push
mov
mov
xchg
shll
and
in
mov
adc
jb
js
inc
cli
or
scas
lods
pop
and
aaa
popa
std
ljmp
enter
shrb
adc
insb
mov
mov
pop
js
adc
dec
lock
sub
cltd
sub
stos
or
into
mov
fwait
mov
cld
mov
and
inc
xchg
dec
imul
jmp
xchg
pop
in
and
mov
outsb
adc
nop
jo
add
cmpsb
push
fsubl
and
xchg
je
pusha
cmpsb
sub
mov
andl
sahf
les
ljmp
xor
jmp
scas
dec
cld
incl
fcoms
or
mov
inc
and
or
add
enter
pop
inc
xchg
pop
andb
outsb
cmpsb
dec
popa
sbb
sub
xchg
hlt
push
sahf
push
and
inc
leave
addr16
mov
and
push
adc
mov
sar
pusha
push
mov
add
cmp
test
scas
inc
cld
outsl
sbb
adc
xor
movsb
cli
in
incl
mov
xchg
mov
mov
es
addr16
push
lds
aam
hlt
push
inc
mov
pop
jo
inc
out
inc
mov
mov
sub
in
leave
sub
and
aam
pop
bnd
lcall
pop
jp
and
pop
mov
jns
fs
in
lea
adc
ljmp
add
ror
sarb
fcomps
idiv
add
jmp
jbe
add
push
pop
lods
mov
std
xchg
jecxz
cmpsb
imul
adc
mov
and
inc
cmp
pushl
xchg
sub
add
int
outsb
inc
mov
nop
inc
popa
pop
mov
xchg
push
mov
fbstp
pop
imul
inc
test
or
jbe
mov
and
mov
push
or
insb
movsb
out
cmp
int3
lods
pop
sbb
or
test
sbb
in
or
shr
mov
insb
scas
out
jle
leave
das
into
add
stos
push
repnz
mov
xchg
and
adc
add
ss
add
mov
daa
jg
sub
mov
cmc
cmc
jmp
test
cmp
inc
jns
cmc
mov
adc
sub
pop
js
rorb
mov
enter
test
jmp
test
sbb
std
pop
sbb
jb
addr16
fmull
cmp
and
add
fsubl
dec
pop
in
pusha
jmp
add
adc
push
add
sahf
sbb
sbb
leave
mov
test
push
sub
jae
ljmp
push
push
xchg
xchg
cwtl
or
dec
jbe
iret
mov
pushl
or
es
lret
xor
dec
std
push
decl
mov
dec
pusha
add
pop
es
iret
ret
fstpl
dec
adc
push
mov
inc
sbb
mov
test
xchg
sub
ljmp
clc
add
inc
xlat
dec
int3
sbb
sbb
das
cmc
clc
or
shr
jmp
cmp
mov
pop
pusha
adc
jle
sub
dec
ret
push
cmp
fs
xorb
jl
test
cs
clc
push
pop
movsl
xchg
jmp
stc
imul
sahf
cmp
push
je
lds
inc
cld
push
dec
orb
adc
jecxz
gs
fildl
xor
mov
jl
lock
fnstenv
shr
mov
je
clc
lcall
mov
pushl
pop
push
mul
add
andl
enter
lahf
cmp
or
xor
pusha
mov
andl
inc
decl
clc
xor
clc
jo
aad
and
cmpsl
and
in
arpl
out
pusha
push
cs
dec
jmp
data16
test
inc
je
jl
out
pop
mov
cmp
adcl
mov
xor
hlt
out
arpl
hlt
ljmp
cli
add
outsb
std
pop
xor
dec
add
jg
lods
scas
in
fmulp
inc
es
insl
inc
int3
orl
lods
jmp
pop
inc
push
lods
cli
ror
cmp
jle
inc
sub
pop
fmuls
rol
or
pop
add
cld
jae
loop
sbb
cli
xchg
sbb
mov
scas
cwtl
add
jae
xchg
ss
mov
sbb
push
shll
outsl
clc
add
xor
cs
pusha
call
decl
add
mov
inc
mov
inc
and
and
cmp
xor
lods
and
bound
mov
jbe
repz
das
xchg
lods
fildll
iret
flds
push
or
loop
test
aam
fsubrl
adc
in
xchg
push
call
ret
cmpsl
out
mov
movsl
jmp
xor
insb
adc
xor
push
movsl
xchg
cmp
mov
mov
push
loope
cs
das
mov
pop
sbb
xor
inc
adc
jp
push
pop
fistpl
push
aaa
mov
lods
pop
add
xchg
mov
nop
sub
arpl
and
fs
std
cmp
test
daa
pushf
je
mov
shlb
addb
stc
orl
lret
sub
ret
and
sbb
or
cli
mov
pop
bound
and
add
mov
enter
dec
mov
push
adc
roll
pop
lock
test
mov
insb
mov
mov
cmp
sbb
fldl
sub
adc
scas
mov
pop
ljmp
movsb
or
pop
add
rcrb
mov
xchg
mov
fildll
xchg
adc
mov
push
mov
fldt
xchg
dec
adcb
dec
mov
adc
aaa
stos
jge
outsb
xchg
das
add
popa
and
je
jne
add
adc
mov
jmp
dec
rolb
or
sub
je
pop
sahf
inc
fsubrs
push
pushl
insl
xor
mov
pop
mov
sbb
mov
out
mov
ljmp
std
lds
and
fmuls
and
or
bound
xor
and
sbb
nop
movsb
cmp
sbb
inc
jle
loop
xchg
pop
addr16
loopne
mov
scas
xor
lock
push
loope
inc
inc
fdivp
push
mov
ss
pop
push
adc
sub
bound
xor
pop
or
xchg
mov
or
cltd
xor
ds
pop
cmp
es
inc
xchg
inc
and
sahf
push
daa
and
loope
xchg
add
stos
jg
xchg
fldt
xor
clc
js
lcall
or
push
or
das
xor
and
test
mov
jg
and
inc
lret
jnp
mov
xorb
jge
or
jle
mov
jp
mov
dec
bndldx
clc
sub
dec
add
int
ss
pushl
loop
adc
dec
in
js
jp
dec
mov
ja
push
or
mov
dec
inc
lods
lcall
lcall
adc
xchg
mov
fcmovnu
mov
ret
icebp
pop
jo
pop
jle
cld
movl
fs
dec
fchs
ljmp
ds
pop
mov
and
mov
js
shrb
in
add
dec
cli
sub
cwtl
cltd
adc
pushf
inc
sbb
mov
mov
into
sbb
add
cmpsl
mov
fisttpl
push
pop
popf
pop
dec
cmp
lods
ret
lret
cs
sahf
or
fmull
stos
adc
pop
and
jp
adc
outsl
test
cmc
fwait
inc
outsb
sbb
adc
repnz
adcb
loopne
jp
or
push
jle
test
push
add
xor
mov
sbb
push
gs
shrb
and
sbb
mov
push
add
cmp
hlt
fildll
adc
dec
outsb
push
or
inc
xor
push
mov
and
xchg
cwtl
mov
cmp
mov
mov
and
or
mov
cli
pop
mov
je
test
mov
push
pushf
hlt
inc
fbld
adc
add
movsl
cwtl
mov
insl
mov
scas
fisubl
and
xorl
and
andl
fcom
hlt
push
insl
shr
inc
call
add
clc
pop
jmp
repnz
std
mov
daa
cmp
into
inc
imul
pop
push
adcl
add
xchg
jae
xchg
mov
ficoms
jo
std
push
push
mov
scas
lahf
nop
adc
add
aaa
sbb
mov
jp
cli
test
fildll
or
sbb
cmc
jg
xor
push
sbb
xor
je
jp
mov
decl
xor
add
sti
ja
or
aas
inc
pop
outsl
push
test
or
mov
mul
mov
add
in
in
xor
push
mov
xor
sbb
mov
mov
xor
addr16
push
sbb
sbb
sbb
data16
xchg
jmp
subb
add
dec
jnp
mov
lods
out
add
and
rcrb
sbb
inc
lcall
add
es
sub
jne
sbb
inc
dec
xchg
or
in
sub
pop
and
lcall
jae
int3
add
mov
cli
or
into
cmp
pop
fistl
fisubs
aad
jecxz
jmp
insb
shll
jg
mov
jmp
mov
lock
jbe
push
push
and
incl
daa
jno
dec
ds
inc
movsb
inc
out
pop
add
inc
or
decl
adc
test
and
sub
insb
jo
call
mov
rcrb
cmp
push
cmc
call
jecxz
jne
shll
pop
or
mov
cmc
dec
add
cmp
inc
add
xchg
sub
rcr
stos
loopne
leave
clc
incl
enter
adcl
cmp
push
fcos
clc
scas
push
xor
data16
add
push
cli
repz
test
rcr
and
je
in
xchg
inc
cld
push
je
add
add
mov
mov
fisttps
lock
or
push
fsubl
insb
sbb
cmp
fwait
test
pop
in
test
push
pop
inc
adc
mov
decl
mov
cwtl
enter
aam
dec
xchg
mov
incl
in
cmp
cmp
or
aad
iret
add
dec
test
add
xor
mov
jbe
pop
ss
jp
mov
incl
mov
xchg
pop
roll
push
push
add
call
fldl
rclb
cld
inc
jg
xorl
jl
insb
les
mov
sbb
shll
and
mov
sub
xchg
test
addl
fildll
test
mov
push
cmp
push
jge
and
aas
loopne
push
pop
test
and
into
lock
inc
pop
inc
inc
test
cs
clc
add
add
pop
lods
decl
cmpsb
lret
or
cmp
mov
std
nop
test
inc
inc
cmp
lock
stc
push
dec
sub
add
pop
mov
cmp
xchg
cli
xor
test
pop
loop
sti
xor
adc
mov
xor
lcall
cli
das
xor
adc
mov
jb
adc
xchg
bound
pop
push
or
xchg
sbb
mov
daa
imul
nop
sbb
test
loopne
dec
call
lock
mov
pop
pop
add
pop
fmull
ret
ljmp
xorb
aam
mov
or
mov
or
fidivrl
sbb
add
cmp
push
into
xchg
lcall
aaa
cld
cmpsl
cmp
movsl
out
les
in
add
add
push
sbb
jg
enter
cmp
sbbl
lahf
enter
push
dec
pop
faddl
jmp
outsl
jae
adc
jmp
clc
add
sub
flds
push
cmpsl
aad
arpl
shl
adc
ret
js
incl
aaa
adc
or
sti
pushf
or
call
pop
stos
scas
jb
repnz
add
addb
das
cli
das
and
ljmp
jge
jo
test
cmpsl
andb
jg
mov
mov
cld
pop
mov
shlb
test
loopne
dec
andl
stos
pop
push
sub
push
addr16
cmp
in
sarl
bnd
mov
out
mov
xorb
andb
lds
scas
fmuls
push
and
mov
sarb
sub
sub
and
hlt
and
call
gs
sarb
pop
out
xchg
es
pop
test
or
mov
pop
push
push
test
xchg
rorb
inc
fimull
sbb
call
adc
rorb
mov
cmpsl
insb
or
pop
jl
movl
dec
insl
hlt
mov
lahf
movb
andl
je
rclb
cmp
inc
pusha
add
jg
mov
cmpsb
incl
jmp
add
rcrb
or
xchg
pusha
insl
jo
sbb
mov
sahf
sti
push
push
repnz
adcb
sub
lahf
shll
add
sahf
sahf
decl
sbb
outsb
dec
cmp
xor
mov
inc
icebp
clc
incl
cli
cmp
js
outsb
adc
fnstenv
loopne
adc
mov
push
mov
pop
lret
add
mov
pop
mov
xchg
lds
dec
and
push
pop
dec
loop
test
data16
adc
outsl
clc
sub
dec
dec
scas
pop
ret
cwtl
sub
nop
add
add
add
pop
js
push
add
gs
test
add
int3
rcrb
rorl
cs
inc
add
incl
push
push
stos
xchg
ret
push
xchg
fsubrs
cli
inc
dec
fdiv
ret
fimull
sub
xor
and
movsl
push
mov
ret
leave
cli
push
cli
sub
sbb
jl
xlat
clc
int
jmp
pop
or
stc
mov
xor
add
mov
inc
and
enter
inc
fsubs
loopne
sar
lcall
cs
dec
je
add
je
ss
loopne
pop
pshufw
loopne
mov
fstps
jmp
cmp
call
and
xorl
aas
and
jns
mov
pop
inc
adc
jp
cmp
in
inc
mov
sub
jae,pn
dec
dec
jg
test
push
in
sbb
push
xor
aas
nop
jp
daa
fdivrl
inc
pop
xor
mov
jge
add
rcrb
daa
add
xlat
test
or
add
outsl
les
push
icebp
daa
jmp
mov
sub
add
out
xchg
jle
or
fldt
mov
or
mov
mov
lcall
mov
insb
adc
xchg
add
cs
mov
inc
cld
xchg
add
mov
and
pushl
iret
cld
and
movsl
in
push
or
lods
aaa
add
shl
push
add
mov
pop
ds
pushl
cmp
mov
sarb
clc
arpl
jg
js
cli
getsec
pop
inc
das
js
xor
cli
into
or
popa
or
fbld
mov
mov
decb
loopne
call
push
and
ja
out
cmpsb
and
shlb
loopne
pop
xchg
adc
mov
enter
or
sub
mov
xchg
imul
push
add
fsub
lods
and
fldl
in
mov
loope
clc
cmp
outsb
in
insb
aaa
xchg
aam
push
inc
or
nop
cmp
imul
rcrl
and
popa
pusha
in
or
decl
push
jge
or
subl
clc
pop
rcl
rolb
push
jae
into
into
movsb
jo
mov
dec
jl
mov
adc
cltd
loop
xor
push
inc
idiv
or
sub
and
mov
or
mov
movsl
inc
mov
les
roll
xor
add
fcomps
pop
xchg
sarb
ss
jns
xor
rcrl
outsb
jmp
xchg
push
mov
jmp
dec
mov
xchg
lods
mov
aad
sub
lret
fisttps
in
stos
adc
ror
shl
push
xor
cmpb
rcrl
fdivp
fcoms
stc
xchg
nop
shrb
mov
test
cmp
lock
leave
pop
and
scas
clc
incl
inc
lret
push
or
lahf
inc
lret
data16
shrb
es
call
dec
pop
movb
or
mov
popf
pop
add
cltd
pushf
repnz
jmp
ljmp
in
sbb
lahf
and
jl
arpl
xchg
cwtl
inc
js
inc
imul
add
cmp
cmpsb
push
pusha
push
push
cmp
or
bound
jp
mov
pusha
enter
pushf
adc
cld
sub
inc
push
out
jl
outsb
ljmp
ss
clc
decb
or
les
incl
lcall
mov
pop
mov
jg
and
lea
fmull
rorb
decb
outsb
pop
dec
repnz
inc
push
jg
imul
add
mov
and
dec
mov
nop
clc
push
insl
jbe
sar
movsb
inc
sub
repz
adc
test
test
insb
fistpll
cmpsl
pop
test
or
adc
pop
push
mov
ss
ret
push
inc
scas
lcall
or
mov
jg
jg
pop
cmpsb
add
lret
subl
fmuls
sub
mov
add
push
mul
add
xchg
jmp
les
and
in
sub
xchg
bound
divb
mov
pop
xor
pop
add
imul
and
xlat
adc
inc
fwait
add
mov
je
out
xor
cld
test
push
icebp
dec
ja
add
mov
mov
js
lcall
or
xchg
aad
xchg
lcall
arpl
decl
jg
stos
mov
sbb
fisttpll
inc
setl
jecxz
int
and
rolb
loopne
aas
cmp
popf
cli
outsb
test
es
loop
in
fwait
mov
or
dec
cmp
rolb
xchg
insl
mov
add
and
xor
fdivp
pushf
insb
hlt
out
push
pop
faddl
lret
cmp
add
jmp
popa
adc
add
or
lods
push
pop
xor
call
xchg
insb
aam
inc
call
ret
inc
mov
or
add
mov
xchg
jmp
movsb
inc
sbb
stos
adc
loope
adc
adc
adc
sub
inc
pop
mov
pop
popf
fisubl
dec
xor
cmpsb
ret
adc
aas
cltd
cli
popf
xorb
add
idiv
or
jno
lds
arpl
sbbl
movsl
nop
ret
addl
test
inc
dec
test
mov
fildll
imul
outsb
adc
mov
inc
mov
mov
mov
mov
repnz
mov
dec
shrb
cltd
lods
andb
cld
cmpsl
ret
out
jo
icebp
mov
aam
jge
cmpsl
repnz
out
push
mov
shll
jge
data16
cmpb
cmp
loope
pop
inc
subl
hlt
add
pop
push
xchg
sbb
jmp
out
out
clc
pop
enter
or
dec
xor
loope
pop
push
or
add
xchg
xchg
lock
sub
pop
mov
xchg
inc
mov
sbb
mov
stos
inc
test
stos
das
mov
in
into
mov
mov
mov
add
clc
jg
mov
filds
mov
outsl
jg
lock
out
lods
adc
adc
enter
fcomip
add
add
sbb
sub
or
mov
leave
add
pop
filds
or
mov
xor
ret
adc
cs
pushf
jo
lock
pop
cmp
push
out
mov
iret
iret
xcrypt-ecb
cmpsl
dec
pop
lret
add
scas
test
adc
loop
and
pusha
movsl
and
push
lods
decl
jmp
sbb
sub
decb
push
adc
pop
mov
pop
add
mov
ljmp
lock
dec
pushf
jbe
pop
xchg
xor
sarl
adc
dec
pop
aaa
std
sbb
adc
jp
test
mov
sbb
pop
or
sarl
outsb
frstor
add
dec
in
jo
add
add
dec
jae
and
jp
and
adc
scas
lcall
inc
cmp
xchg
test
sbb
cmp
inc
sbb
lods
add
add
xlat
lock
adc
and
cmpb
xchg
test
incl
dec
pop
add
cmp
lcall
fcmovnu
cmpsb
popf
adc
test
and
pusha
and
xor
xchg
push
lock
mov
mov
xor
or
cld
push
mov
rol
subb
inc
pop
cli
mov
xor
jge
push
push
pop
mov
pop
shrb
mul
fcomip
aas
fisubl
rcrb
subb
ja
fsubs
jo
stc
bound
pop
in
sbb
inc
subb
add
xchg
jbe
sarl
mov
bound
orb
xchg
shl
push
jo
jp
push
mov
fs
push
incl
test
add
addb
in
dec
push
into
mov
aam
aam
sub
push
movsl
sub
xchg
jg
mov
stc
lret
xor
xor
mov
jg
pop
xor
fmuls
jg
or
mov
lea
out
sub
test
jg
cmp
ds
out
adc
mov
pushf
sbb
movsb
or
jbe
cmp
adc
ja
loopne
or
adc
or
test
test
out
add
call
sub
popf
inc
mov
and
push
clc
stos
das
subb
xchg
cwtl
push
popa
jcxz
decl
mov
pop
jbe
data16
pop
lahf
arpl
sub
leave
sub
cs
dec
stos
lcall
inc
or
add
adc
out
xorl
fwait
test
add
ret
mov
pusha
inc
add
movsb
inc
mov
cwtl
data16
mov
mov
sbbb
jp
sbb
sub
dec
jl
push
mov
leave
mov
sub
andl
cmp
mov
ljmp
add
inc
andl
sub
addr16
mov
movsb
jmp
add
and
sbb
call
or
mov
lock
mov
mov
push
dec
je
mov
aaa
ljmp
cmc
inc
mov
lods
ja
jmp
add
cli
mov
mov
aad
mov
or
jge
cltd
sbb
loop
pop
lods
hlt
mov
outsl
or
adc
pop
add
sbb
lock
les
mov
pop
sub
out
jp
mov
leave
je
fwait
jle
hlt
or
jl
add
leave
jge
scas
mov
ror
stos
pusha
push
or
inc
rcrb
add
jl
lods
ja
jbe
in
and
pop
arpl
mov
and
sbb
cld
cmpsb
cmp
xor
sub
jle
sbb
insl
cwtl
sub
stos
loopne
ljmp
loope
mov
or
pusha
or
adc
dec
mov
mov
int
decl
jge
sbb
inc
out
jne
fld
imul
xor
inc
fiadds
outsl
loopne
xchg
imul
mov
jle
dec
or
and
pusha
jmp
sub
jo
imul
mov
dec
add
dec
jp
imul
dec
cmpsl
addb
call
adc
jo
xchg
and
out
out
sub
xchg
xor
jle
dec
lahf
inc
mov
aam
mov
jg
or
mov
inc
push
cmp
rorb
push
xor
xchg
sub
sbb
rclb
fwait
mov
cmp
fldt
add
outsb
or
add
jg
push
inc
cmp
sbb
mov
fbstp
div
loop
mov
neg
mov
lock
repz
fidivl
pop
add
dec
jnp
push
out
add
mov
fisubl
les
xchg
or
jmp
ret
lret
push
nop
rcr
cmc
in
leave
dec
pop
mov
rorl
sbb
pop
cs
cmp
push
outsl
sub
aam
xchg
pop
fiadds
jbe
ret
cli
push
mov
ficompl
adc
test
imul
add
insb
and
xor
or
adc
inc
fadd
cld
jle
mov
mov
pop
mov
dec
ljmp
dec
ss
adcb
fisubl
sub
repz
mov
push
add
stos
scas
mov
int
pop
add
push
shl
push
das
sbb
pushf
cmp
sarl
ljmp
rcll
xor
std
sub
inc
aam
lea
ds
sbb
std
in
mov
outsb
lret
cmp
lret
dec
leave
fs
mov
pop
or
outsl
jo
push
jg
cli
mov
mov
rorb
rorl
jbe
sub
outsl
clc
jg
jo
and
cmp
mov
mov
cmp
ds
jno
mov
sbb
scas
xorb
lret
and
testb
or
push
cli
cmp
xchg
idivl
add
repz
pop
or
push
movsb
sub
push
dec
arpl
mov
adc
call
lock
xchg
dec
lock
push
sub
loopne
mov
mov
or
push
outsl
ret
fisubl
fwait
pop
adc
shl
push
cs
push
add
push
incb
adc
cmpsb
pop
pop
shl
es
push
shl
add
pop
adc
adc
xchg
mov
inc
xor
xchg
addr16
ljmp
sub
movsl
cmpsb
test
jb
adc
in
xor
out
add
mov
xchg
roll
cld
dec
and
mov
push
pushl
cld
jg
in
xor
push
outsl
hlt
mulb
push
and
pop
int3
stc
rorl
mov
adc
nop
sbb
dec
enter
ljmp
clc
call
les
ss
insb
testl
xchg
add
pop
decb
sbb
pushw
jmp
sbb
cmpsb
je
and
and
jne
cmpsb
adc
sbbl
adc
subl
dec
xor
dec
sarb
jmp
or
dec
cwtl
sahf
pop
mov
xlat
and
cmpsb
pop
push
lret
push
insl
and
jbe
add
jle
or
sahf
pop
popa
pop
test
add
jno
add
shr
faddl
push
push
insb
mov
fs
hlt
cs
mov
xor
push
inc
add
or
mov
test
pop
cmp
dec
imul
xchg
xchg
dec
shll
sbb
dec
orb
adc
mov
pop
outsl
scas
xchg
stos
mov
jmp
nop
mov
and
add
pop
sbb
inc
out
mov
mov
addl
out
pusha
std
push
adc
dec
hlt
loop
mov
dec
shr
mov
or
cmp
sbb
jg
push
lcall
or
mov
ret
stos
call
jbe
dec
outsl
dec
xor
out
stos
ja
outsl
pushl
mov
add
stc
or
jne
dec
mov
loopne
bsf
mov
or
lock
loop
fnstenv
mov
adcb
adc
mov
push
enter
vphsubdq
scas
pusha
mov
and
mov
xchg
mov
cmpsb
push
or
or
cmp
fucomi
pop
mov
inc
je
xchg
and
push
and
xor
xor
and
ljmp
clc
sahf
add
push
pop
clc
and
add
inc
and
subb
push
dec
ja
mov
mov
int
jo
dec
insb
adc
lock
cmp
and
xchg
mov
cmpl
test
lret
pop
hlt
aaa
loopne
lahf
cmp
dec
and
jnp
insl
mov
outsl
hlt
inc
loope
les
rorb
dec
cmp
outsb
cmp
js
jb,pt
adc
adc
sub
lods
mov
push
adc
xchg
jbe
movsl
test
fimull
mov
mov
xchg
sbb
and
decl
xlat
mov
sbb
stc
mov
jmp
mov
out
push
xor
movsl
mov
lock
adc
xor
dec
sub
inc
add
loope
fmull
jne
clc
adc
mov
jg
jle
lock
lea
arpl
cwtl
cld
bound
cli
dec
jno
sbbb
fldl
push
and
nop
push
out
lods
lds
dec
dec
call
or
and
push
push
jp
enter
decl
ljmp
jl
jg
push
cmp
cmp
out
sbb
fwait
dec
xor
int3
mov
sbb
jp
sub
or
mov
jnp
mov
dec
ljmp
ficoms
add
aad
loop
and
jg
rol
out
idivl
jecxz
aas
pop
loope
rcrb
or
mov
ret
mov
js
add
les
ja
inc
insb
mov
cmp
loopne
push
xor
sahf
das
mov
lahf
mov
lock
push
fs
and
add
stc
fimuls
cli
push
cli
aas
pop
mov
sub
int3
mov
sub
mov
sbb
leave
icebp
std
add
push
push
mov
or
inc
pop
out
pop
icebp
xor
lcall
add
jns
aam
jecxz
adc
clc
xlat
lods
jnp
decb
es
fistl
lahf
cs
ret
std
jbe
dec
sbb
das
aam
xor
adc
jo
xchg
and
call
cmp
aaa
sub
push
loopne
push
sub
dec
dec
clc
pop
outsl
jo
jl
push
div
jbe
dec
cltd
cli
mov
xor
repz
xchg
sar
or
mov
xchg
or
aaa
std
mov
movsl
mov
mov
inc
ljmp
and
add
jle
popl
jb
andl
daa
xchg
rcll
shlb
inc
clc
ret
add
repz
jg
mov
mov
ja
call
pop
into
and
jle
jmp
inc
jne
data16
xchg
dec
jl
rcr
jg
and
push
in
inc
adc
out
xchg
hlt
daa
enter
ret
pushf
mov
push
fbstp
sbb
push
push
cwtl
insb
mov
adc
imul
push
xor
jbe
in
fwait
add
xor
jo
mov
pop
lcall
mov
fs
in
and
mov
pop
popf
add
and
enter
pop
das
jmp
frstor
lods
jb
push
jmp
mov
ret
and
mov
fcmovu
jno
insb
and
push
inc
loope
add
roll
dec
sub
sahf
dec
push
decl
gs
mov
mov
pop
mov
cmp
mov
outsl
jbe
xchg
fcoml
push
xor
lret
adcw
stos
xlat
incl
in
pop
cmp
sub
out
aad
xchg
pop
mov
mov
int
push
push
repnz
scas
clc
jg
or
sbb
mov
xor
sub
clc
mov
ss
sub
rol
sub
ret
jmp
mov
dec
dec
or
test
and
add
fs
out
push
leave
or
dec
sbb
in
scas
shrb
cltd
cltd
cmp
or
mov
add
sub
arpl
and
pop
arpl
andb
add
cmpsl
iret
pushf
dec
loop
loop
xchg
push
mov
push
movsb
out
test
pop
push
pop
mov
es
movsl
rolb
imulb
cmc
das
movb
inc
ret
xchg
cmp
add
or
or
sub
jo
popa
sub
xchg
mov
adc
jns
mov
mov
sbb
daa
sarb
mov
lea
mov
pop
es
sahf
push
inc
inc
add
test
out
mov
mov
lret
push
enter
into
sbb
push
adc
pop
cmpsb
cld
cmpsl
xchg
cli
cmp
xor
xor
add
push
faddl
xorl
sarb
ret
cmpsb
adc
cmp
fmuls
xchg
jl
cli
jg
mov
and
jl
pushf
in
add
lods
and
pop
into
popa
stos
sbb
jge
pushl
sub
js
shll
jmp
addb
std
mov
mov
inc
inc
stc
bound
sarb
fcoml
decb
add
inc
jo
outsl
xchg
mov
push
cld
dec
mov
test
xchg
sub
sbb
loopne
inc
cmp
movsb
icebp
pop
jp
dec
cwtl
das
pop
cmc
dec
push
jae
ljmp
xchg
fdiv
inc
xchg
clc
nop
pop
or
mov
pop
or
adc
incl
mov
push
or
jmp
mov
sbb
push
enter
clc
cmp
xchg
and
cmpsl
jo
arpl
fs
enter
sub
and
bound
push
inc
rclb
aas
xor
mov
in
add
or
sbbl
inc
mulb
jge
add
in
push
es
pop
inc
dec
push
filds
pushf
xchg
loopne
shlb
sub
or
mov
test
icebp
inc
je
inc
stos
nop
aaa
mov
jb
nop
jle
xchg
lcall
pushf
add
add
vsubpd
arpl
add
lds
mov
call
lock
cld
scas
loop
push
lock
fs
or
jg
and
push
repz
cmp
sub
inc
xlat
mov
ss
mov
lds
pop
movsl
fisttpl
or
and
popa
sbb
ss
jp
lcall
andl
push
sbb
jle
mov
inc
mov
mov
clc
mov
sub
pop
es
lcall
xor
in
popa
bound
dec
sub
pusha
pushl
pop
fnstenv
rorb
cli
jb
xchg
loop
adc
cltd
das
pop
add
cmc
jns
xchg
xor
je
hlt
scas
sub
outsb
fstl
sub
adc
push
sub
mov
mov
or
push
rcrb
idiv
mov
add
sbb
xor
mov
popf
jo
shll
and
dec
fcmovnu
cmc
mov
dec
stos
mov
mov
mov
leave
clc
push
repnz
cmp
test
inc
arpl
mov
jns
push
jg
dec
push
es
xchg
or
and
aam
in
push
cld
xor
enter
fisubl
nop
rolb
fs
cmp
mov
or
cli
loope
cmp
data16
push
dec
pop
lock
inc
nop
add
push
addr16
dec
push
xchg
pop
imul
add
repz
je
mov
gs
push
cmpsb
pusha
jmp
fimull
cld
dec
add
jns
in
lods
push
mov
mov
cmp
add
xor
fadds
xor
dec
fsubl
jno
popf
inc
mov
outsb
inc
or
call
push
movsl
pop
or
pusha
orb
pop
inc
add
sub
stos
hlt
cmp
loope
cld
outsb
dec
mov
das
sti
jbe
in
int3
jecxz
adc
add
pop
jg
dec
xchg
es
test
in
loope
sub
jle
push
incl
in
imul
and
adc
lret
add
inc
std
sbb
inc
dec
sub
add
in
cltd
cmpsb
aam
mov
mov
push
loop
mov
push
inc
sbb
fsubl
xchg
scas
in
sub
dec
dec
imul
jnp
sub
js
ss
mov
push
jo
mov
lds
loopne
testb
fcom
aaa
imul
mov
movsl
mov
pop
jno
and
in
divb
mov
js
xchg
adc
jl
loope
sar
sbb
js
jl
repz
cwtl
mov
jmp
in
push
inc
ljmp
imul
or
ljmpw
fwait
testl
jmp
loopne
inc
mov
out
fcoms
aam
xchg
test
jge
je
andb
and
push
pop
jg
arpl
movb
mov
clc
cmp
mov
pop
push
mov
and
test
cli
mov
mov
ss
jmp
dec
or
xor
or
shl
jo
adc
fildll
mov
std
cmc
shr
cli
sbb
jnp
mov
or
mov
rcr
mov
mov
dec
push
imul
mov
ss
sub
dec
xchg
push
xor
adc
xchg
add
dec
and
scas
lock
popf
loopne
adc
out
dec
inc
jge
push
test
mov
add
sarb
popa
mov
test
repnz
lahf
inc
xchg
inc
cmp
or
mov
int3
adc
outsl
xor
jae
pop
mov
sub
push
jmp
mov
std
mov
dec
ss
and
mov
or
cmp
pop
pop
adc
ja
jmp
cwtl
push
dec
adc
js
loope
mov
movsl
ret
icebp
in
mov
mov
pushf
pusha
das
hlt
test
mov
fdivs
and
js
mov
out
pop
fildl
mov
cmp
test
shlb
icebp
pop
clc
mov
out
jbe
push
cmp
push
mov
or
inc
testb
xlat
inc
sbb
mov
mov
jl
clc
and
aas
jmp
xchg
push
out
cs
movsb
loopne
cmp
push
enter
add
push
mov
test
mov
push
in
add
fistpl
lds
inc
or
pop
in
push
lret
xchg
inc
data16
xchg
push
dec
test
sbb
adc
int
adc
daa
aad
pop
mov
pop
push
push
popa
inc
sti
stos
fcom
scas
incl
mov
ret
out
sbb
rcll
pop
pop
inc
call
xlat
sbbl
pop
mov
jl
and
or
out
ss
cltd
and
jge
add
sub
pop
movq
push
mov
in
lcall
adc
decl
jle
sbb
lods
adc
lods
sbb
or
pop
adc
pusha
xor
cs
adc
push
fdivl
cmp
mov
lret
adc
mov
mov
or
mov
pop
movsl
push
pusha
cmpsb
int3
push
fdivrl
sarb
pop
mov
ret
jns
addl
pop
and
inc
sub
stc
aaa
sbb
xlat
push
fwait
pop
mov
les
daa
nop
cwtl
and
fs
jecxz
clc
inc
inc
mov
mov
scas
std
fbld
pop
das
xor
xchg
or
sub
std
push
cli
push
bound
sub
int
mov
or
in
fstps
mov
bound
add
adc
popf
add
ss
js
mov
fnsave
add
xor
pop
adc
fcompl
hlt
sbb
xor
leave
popa
push
call
pop
popa
movsb
jnp
clc
out
and
add
repz
cwtl
shlb
in
xor
sbb
scas
mov
xchg
fsub
loop,pn
rcrb
imul
stos
movsb
or
les
and
cmp
fsubrl
lock
cmp
rcrl
cltd
add
and
cld
pop
js
je
pop
les
add
push
adc
xchg
enter
mov
pop
cmp
in
stos
insl
jge
addr16
aad
popf
add
mov
decb
rorl
shrb
orb
jecxz
and
movsb
std
lcall
mov
sbb
shlb
ss
xchg
fimull
fcomip
decl
fsubrs
mov
andl
push
inc
cwtl
push
dec
jecxz
or
add
outsl
imulb
dec
inc
inc
mov
and
dec
pop
add
and
cmp
sbb
xchg
push
cli
test
leave
dec
out
adc
mov
lods
int
mov
stos
mov
sbb
leave
iret
add
aad
mov
mov
out
pushl
push
jl
shl
add
adcb
test
test
es
push
mov
push
push
bound
mov
push
adcb
cmpsl
add
pop
adc
jnp
add
icebp
mov
hlt
lock
fwait
mov
xchg
xor
cmp
dec
xor
push
or
push
shll
add
decb
jb
mov
inc
xchg
inc
loop
outsl
stc
in
idiv
fistpl
mov
ljmp
xor
fstpt
insl
cmp
mov
das
iret
pop
enter
mov
or
mov
movsb
push
outsl
cmpb
xchg
ret
and
mov
xchg
pop
sbb
xor
insb
jmp
cmpb
inc
andl
mov
xchg
mov
cmp
pop
inc
inc
rol
pop
inc
or
cmp
lods
aas
cmp
test
mov
sar
add
or
and
ffreep
cmp
insl
clc
cmp
psraw
cwtl
inc
scas
aaa
fs
and
pusha
andb
aad
or
push
inc
imul
or
jmp
iret
mov
les
insb
xor
adc
mov
xchg
lock
sti
inc
or
dec
and
pop
cmc
lret
imulb
sub
rolb
sbb
rcrb
addr16
fildll
dec
pop
repnz
pusha
adc
or
inc
test
xor
xor
or
hlt
loop
sbb
gs
push
sub
cltd
lahf
movsb
test
lock
es
jg
pop
nop
adc
or
ja
jo
add
and
adc
testb
aas
dec
sub
push
bound
popf
xchg
gs
fcomp
sub
mov
mov
sub
rcll
or
push
lock
push
shll
cli
pop
push
arpl
jnp
in
jl
flds
jno
pop
xchg
mov
mov
add
mov
push
sbb
out
cld
pushf
inc
dec
push
and
cmpb
push
add
add
sbb
or
loopne
js
push
push
aam
aam
jle
pop
in
sbb
inc
in
pop
push
push
sub
and
clc
das
or
jl
hlt
shll
pop
or
mov
ljmp
clc
jno
mov
add
stos
mov
adc
push
lods
push
adc
popa
dec
into
add
mov
pusha
push
stc
or
fs
je
sbb
lcall
sub
xchg
jmp
rolb
xor
in
and
test
iret
ret
ja
out
xor
push
or
pop
xchg
mov
filds
or
dec
mov
xchg
or
jb
push
or
sbb
nop
fucomi
add
jo
pop
xor
vpmovzxbw
cli
popf
mov
lret
inc
add
lock
mov
push
in
nop
out
inc
test
std
mov
rol
inc
jg
movsl
das
push
pusha
aam
int3
jl
mov
pop
pusha
shrb
dec
lods
sub
push
ret
out
and
push
mov
inc
pop
inc
sbb
add
fwait
mov
jp
add
push
inc
loope
mov
dec
add
clc
xchg
jp
loope
aas
lock
das
rcll
mov
cwtl
mov
in
mov
pop
or
test
out
inc
mov
clc
movsb
add
pop
rcrl
pop
int3
sbb
jno
add
lcall
loopne
pop
ret
push
js
fmuls
jl
dec
outsb
std
xor
cs
cmpsl
dec
sub
push
lcall
push
out
cmpsl
mov
mov
cmc
dec
cmp
scas
jne
or
enter
sti
in
ljmp
fsubrl
xchg
or
xchg
adc
sbb
mov
aas
mov
stc
mov
or
mov
mov
lea
inc
out
push
adc
mov
sbb
testb
and
lahf
dec
aam
and
hlt
dec
jle
push
rcrb
nop
jo
or
pop
clc
scas
aad
aad
divl
jmp
call
jp
hlt
inc
arpl
aas
or
xchg
mov
sbb
jle
pop
xchg
xor
push
mov
pop
inc
mov
xchg
dec
in
adc
jle
mov
mov
adc
mov
cmpsb
mov
mov
lahf
mov
or
xlat
jp
jg
mov
cmpsb
lods
mov
int
loop
mov
incl
paddq
cmp
out
and
and
test
in
or
mov
push
pop
stc
xor
push
mov
dec
lock
jne
and
mov
leave
aam
lods
mov
and
and
mov
loopne
sbb
popa
dec
fidivs
stc
mov
clc
mov
movb
push
sub
pushl
scas
dec
push
cmpsb
pop
cltd
adc
adc
and
call
mov
xchg
cmp
pop
js
scas
test
inc
idiv
cld
sub
out
mov
mov
decl
ljmp
push
rcrl
jg
int3
jo
es
push
push
xchg
push
push
lcall
scas
pop
cmp
sbb
fsub
imul
cwtd
fs
imul
mov
subl
lret
sbb
mov
clc
sbb
add
sub
flds
xchg
xor
cmpb
incl
push
insl
ds
bound
les
stc
div
out
into
loope
mov
pop
dec
pop
test
pop
jbe
dec
mov
mov
or
adc
add
adc
ret
clc
push
outsb
loopne
imul
cltd
repz
sub
push
or
mov
adc
xchg
adc
xchg
pop
lods
pop
cltd
lcall
cs
gs
clc
call
cwtl
fildl
jb
adc
xchg
in
pusha
aam
sub
pop
push
xchg
xor
stos
push
inc
add
adcl
filds
mov
test
mov
sub
repz
jle
fbld
call
jae
ljmp
mov
mov
outsl
xchg
adc
insl
xor
notb
rolb
sbb
data16
add
add
pop
jo
clc
lret
dec
mov
add
orb
adc
mov
adc
push
dec
mov
cmp
cmpsl
sar
pushl
pop
lds
and
dec
inc
test
push
jnp
or
das
cmpsb
out
nop
int3
dec
iret
add
mov
movsl
and
pop
xor
shlb
fprem
xor
jae
stos
fnsave
sub
mov
or
xor
rorb
outsl
clc
ljmp
lcall
jno
idiv
cmpsb
das
mov
pushf
cmp
jmp
pop
push
inc
test
dec
push
xchg
std
pop
imul
sbb
cmp
mov
xor
and
lds
jo
jg
sub
inc
dec
cmp
shrl
cmp
cmc
in
mov
adc
test
cmp
xchg
ds
inc
in
adc
pop
push
loopne
mov
lods
call
movsl
pop
mov
aaa
cmp
jno
or
push
jo
outsb
idiv
inc
mov
adc
das
cmp
push
lods
test
hlt
bound
call
mov
push
pop
pop
pop
roll
daa
mov
jg
insl
and
add
lock
bound
pop
sub
add
dec
fidivrl
inc
mov
xorl
fwait
xchg
pushf
xor
inc
je
push
hlt
sbb
push
xor
test
scas
mov
data16
jl
nop
pushf
outsb
xchg
adc
sbb
mov
pop
dec
ja
call
inc
and
mov
frstor
xchg
pop
mov
pop
sub
or
clc
and
clc
fwait
in
test
mov
or
jmp
cmp
push
and
sub
popf
cli
inc
add
pop
sbb
inc
or
inc
push
and
mov
sbb
xchg
test
xor
sbb
stos
xor
mov
out
mov
je
jb
or
pop
and
lret
outsb
and
sub
std
or
xchg
jg
scas
insb
bnd
stc
dec
xor
adcb
mov
divb
mov
fidivrl
orl
js
inc
and
daa
ret
xor
cli
cmp
push
pop
ror
xor
iret
adc
mov
je
jo
mov
pop
fidivrs
add
lods
xor
mov
jge
mov
aam
flds
test
call
jmp
ret
push
es
lcall
pop
add
mov
xchg
mov
and
ficoml
pop
hlt
cli
cld
outsl
adc
jge
mov
jae
push
mov
mov
cmp
ds
test
inc
inc
push
jo
test
lcall
push
inc
mov
ret
and
mov
inc
or
adc
sbb
or
cmp
mov
adc
push
xor
rorb
fcomps
lods
arpl
aaa
push
inc
mov
push
fdivrs
shlb
es
ljmp
fs
pusha
lock
movsb
and
inc
scas
xor
fldt
push
insl
sbb
push
adc
test
mov
and
decl
add
cmp
sub
pop
inc
stos
orb
mov
cli
cmp
mov
les
push
fsubs
jg
sub
dec
fwait
test
xlat
xchg
push
verr
sbb
push
cmp
outsl
or
fistps
mov
jle
and
push
das
mulb
lret
sarl
fs
sar
jb
xlat
inc
iret
inc
inc
cmpsb
bound
pop
les
push
xor
fmuls
add
xchg
test
xor
cmp
mov
cmp
push
pop
mov
fucomi
cmp
ja
cld
fistpll
adcl
jns
nop
mov
sub
das
jbe
stos
cmp
popl
xchg
xchg
dec
fwait
add
or
lret
lock
push
popa
mov
mov
bound
jge
idivb
das
insb
add
push
cmc
call
pusha
jle
xlat
cmp
out
sbb
loop
sbb
adc
inc
mov
push
aad
mov
ret
or
es
popf
or
inc
or
mov
mov
xor
cmp
push
add
and
loopne
or
cwtl
push
xchg
sar
pop
xchg
aam
inc
mov
xchg
clc
xchg
ja
sub
in
pop
push
pop
jp
jne
jo
inc
decb
mov
ljmp
lcall
ret
and
nop
insb
mov
jg
cmc
gs
nop
out
push
adcb
ret
pop
inc
mov
data16
lock
mov
test
mov
cmpsb
xor
cmpsl
cmp
cs
pop
fwait
roll
test
rorb
xor
add
mov
mov
sarl
jb
push
sub
aas
dec
xchg
jae
xchg
leave
call
lret
ds
test
mov
xchg
sahf
push
sbb
leave
or
sub
loopne
icebp
push
test
stos
insl
mov
lret
xor
pusha
pop
je
js
jp
push
sub
les
dec
sbb
add
rclb
rcrl
dec
es
pop
add
adc
std
mov
add
push
jl
icebp
cs
nop
jae
jmp
jg
cmp
inc
aam
jp
xchg
add
mov
xor
out
mov
popf
xchg
out
in
add
pop
push
aas
mov
adc
imul
xor
cmp
xchg
sub
jb
dec
inc
dec
movsl
pop
push
add
jnp
sbb
jle
or
mov
dec
jne
and
faddl
mov
sbb
mov
ficomps
mov
mov
shll
jmp
push
aas
outsl
loop
in
mov
ret
movsb
mov
mov
add
pop
mov
bound
mov
sbb
adc
cld
sbb
cli
decl
sarb
inc
sbb
popa
sbb
cmp
mov
call
lods
loope
adc
pop
xchg
orb
pop
pusha
sbb
idiv
mov
clc
cmpsb
decl
xchg
dec
cltd
and
movl
imul
push
jg
addr16
icebp
out
push
inc
push
cwtl
pop
outsl
fildll
call
data16
dec
jae
xorl
gs
inc
sub
inc
stos
enter
and
out
xchg
pop
les
add
dec
je
pop
adc
inc
push
jmp
fiaddl
mov
cmp
call
mov
mov
cmp
mov
sub
push
pop
push
jmp
pushl
rorl
loope
mov
jo
lock
ret
pusha
sub
cmpsb
mov
mov
cmp
or
fadd
sbbl
aad
aas
cmpb
nop
imul
rclb
pusha
inc
test
movsl
icebp
adc
dec
add
ret
or
adc
hlt
ret
loope
ret
xchg
dec
jmp
mov
sub
push
push
sub
cwtl
jo
test
xchg
xchg
fbstp
jbe
sbb
mov
je
push
add
out
add
cmpsl
dec
inc
popa
cld
add
dec
mov
cmp
shll
lods
sbb
lret
or
ret
or
xor
push
mov
sbb
pop
inc
cmp
pusha
mov
sub
sub
test
mov
and
rol
pop
sub
dec
fdivr
or
sbb
in
jp
mov
loope
inc
dec
subb
cmpsl
mov
add
fmul
xor
incl
pushf
lahf
or
test
xchg
outsl
add
cmp
outsl
xchg
jne
cld
lock
adcl
sar
sbb
mov
and
xchg
mov
imul
inc
inc
add
or
loop
adcb
repnz
rcpps
push
cmpsb
adc
push
call
aaa
jns
mov
jle
ss
pusha
push
inc
pop
sbb
nop
test
or
mov
cmp
adc
mov
cmp
aam
in
push
adc
lods
inc
inc
add
add
lods
adcl
nop
jns
or
sub
or
cs
cmp
rcll
inc
hlt
data16
outsl
mov
das
in
ja
and
xchg
ljmp
hlt
ja
cli
dec
xor
pop
add
scas
out
adc
push
mov
in
dec
pop
mov
test
ss
shl
outsb
ret
aaa
inc
subl
mov
addr16
mov
js
dec
jae
into
fcomp
lock
and
lret
jg
dec
mov
xchg
out
inc
ds
fdivrs
jnp
push
or
sub
sbb
mov
mov
and
ficoms
jbe
mov
cmpsl
adc
sbb
outsl
cmovo
pushf
push
sbb
inc
lods
sbb
pop
add
loope
call
cmc
outsl
mov
or
adc
les
mov
ja
push
mov
add
adc
push
test
pop
lock
xchg
mov
lock
mov
mov
pusha
lret
sbb
jp
leave
jb
cmc
push
mov
movsb
push
mov
loope
clc
cmp
arpl
fildll
adc
xrelease
fs
test
cld
pop
fcoms
aam
add
mov
sbb
push
sbbb
push
jbe
add
push
jmp
sbb
or
jno
xchg
shrl
imul
je
push
addl
pushl
add
out
dec
jo
sarl
incl
rorl
nop
jbe
mov
or
add
jg
xorb
clc
or
push
adc
outsl
out
mov
sahf
addr16
push
repz
mov
scas
add
repnz
test
test
push
pop
adc
loope
add
scas
xchg
test
jl
and
sub
pop
xor
mov
xchg
jle
ret
movsl
hlt
movsl
cld
scas
mov
and
nop
push
test
or
dec
jle
push
inc
sbb
jg
lds
dec
fadds
pop
mov
adc
jne
lret
jmp
ror
sbb
dec
mov
in
jno
push
inc
cs
insl
int3
xchg
ljmp
call
sbb
jne
mov
pop
mov
xchg
test
lret
mov
xchg
js
es
sbb
mov
or
pop
hlt
mov
push
inc
sub
add
imul
out
das
ret
mov
or
ja
pop
push
xchg
or
pop
loop
out
andl
mov
xchg
add
jb
sub
stos
stc
or
lds
push
mov
fmulp
lcall
adc
xor
mov
aaa
mov
xchg
fiadds
pop
fwait
pushf
jne
pop
loopne
push
pop
cwtl
inc
cld
insl
mov
shlb
subb
pop
and
scas
mov
rorb
aas
pop
and
lds
ljmp
arpl
shr
jecxz
mov
cmp
sub
or
sti
imul
aas
or
or
sbb
loop
int3
iret
and
lcall
clc
push
jb
dec
or
jo
aam
cmp
push
inc
imul
push
add
xlat
mov
mov
pop
fnstsw
or
es
stos
jl
fadd
dec
adc
vpsrlw
out
xchg
mov
int
rolb
lea
add
das
imul
mov
push
jno
pop
jae
add
scas
push
loope
inc
bound
insl
cmp
outsl
fcomps
adc
push
dec
aam
into
and
fbld
popf
inc
notrack
push
cli
mov
xor
pop
je
dec
xor
add
sub
dec
xor
inc
and
push
cmpsl
push
pop
loopne
pop
repz
add
sbb
cmpsb
leave
sbb
jle
xchg
mov
out
xor
jbe
push
pusha
mov
xorl
inc
push
push
push
cmp
std
dec
dec
aad
iret
and
imul
push
cmp
pop
bound
pushf
sub
fwait
loop
adc
push
jl
xor
js
loop
rcr
push
stos
cli
inc
loop
rorb
inc
add
imulb
push
aas
movsb
cmpl
sbb
adc
sbb
mov
pushl
dec
aaa
and
dec
fsubrs
dec
std
enter
iret
inc
mov
mov
inc
data16
mov
sti
dec
push
push
add
rcrl
inc
push
pop
mov
sub
ljmp
mov
add
fwait
loope
bound
mov
or
and
lret
adc
dec
or
filds
mov
push
sub
ret
push
adc
aad
push
mov
mov
cmp
dec
xor
dec
popa
cld
jecxz
adc
fidivs
bound
jl
incl
into
push
bound
pop
push
inc
mov
sub
ss
sub
test
inc
inc
add
cmp
incb
sbb
sbb
dec
leave
dec
adc
insb
sarl
aaa
or
cmc
mov
sbb
shrb
add
pusha
decl
int3
add
push
mov
aad
mov
repnz
sub
pushf
add
test
outsl
jno
xor
fsts
popa
and
outsl
jle
iret
add
xchg
cmp
inc
cmp
loopne
add
repnz
jns
or
add
sbb
hlt
push
jmp
dec
xor
lret
sahf
sub
sub
dec
push
addl
adc
xchg
nop
hlt
and
call
cld
cmp
stos
cmpl
adc
jo
xchg
test
xor
cmp
std
adc
push
dec
inc
leave
or
pop
mov
jno
xor
dec
mov
inc
test
pop
push
outsb
ss
lea
jl
push
js
ret
sbb
push
aas
jmp
and
sub
pushf
dec
je
sub
shrb
dec
fldl
mov
inc
daa
xchg
stos
mov
shr
dec
mov
cmp
inc
or
sbb
int
mov
ret
shlb
in
add
cwtl
adc
and
push
lods
stos
jmp
mov
inc
push
sub
subl
cli
jnp
aas
lea
fimull
push
push
and
push
testb
ret
mov
xor
enter
pop
icebp
mov
rolb
enter
mov
arpl
cmp
testl
mov
inc
aaa
dec
mov
les
data16
sub
and
dec
adc
dec
jmp
inc
stos
or
push
sub
add
adc
ret
fimuls
jnp
sti
mov
jl
adc
test
xchg
roll
push
mov
xor
jmp
cli
ret
lcall
jne
fcomps
cmp
mov
inc
push
or
ret
enter
mov
push
in
test
mov
pushf
mov
fimuls
js
and
and
fcomps
jg
adcb
pushl
fldl
and
mov
mov
cmp
loope
scas
pmaxsw
cmp
les
lock
xor
jb
mov
or
into
or
jmp
jmp
adc
xchg
inc
call
mov
rorl
push
add
jmp
pop
sub
fisubs
xor
aad
ret
aaa
dec
incl
adc
aad
cwtl
cwtl
pop
insl
xor
imul
movsb
rolb
mov
pushf
insl
fwait
lock
mov
loope
push
scas
mov
or
inc
repnz
xchg
pop
in
inc
adc
incl
jge
rclb
or
inc
incl
push
cmp
shrb
out
sahf
insb
sti
test
mov
or
insb
jecxz
sub
xor
ss
cmp
xor
aad
mov
mov
dec
fsubp
loope
or
popa
repz
mov
pop
loopne
daa
push
mov
aam
jmp
xor
and
inc
push
inc
les
mov
divb
adc
sub
insb
out
xor
mov
out
cwtl
and
jne
sbb
jle
mov
push
stos
pop
insb
push
mov
lock
sub
aas
call
bound
rolb
lock
and
push
push
outsb
or
lea
std
lods
jne
movsb
notl
mov
pushf
test
and
das
dec
add
hlt
js
dec
push
shlb
ja
and
add
enter
push
mov
js
or
sbb
cmpsb
fcomps
arpl
movsb
xor
add
iret
sbb
fldt
test
std
push
add
mov
sub
add
adc
jmp
mov
inc
adc
or
jne
rcl
dec
ja
xor
jns
ljmp
push
mov
jo
in
mov
sysenter
add
loopne
inc
sahf
hlt
push
push
mov
and
js
xchg
nop
mov
xchg
stos
addr16
dec
push
or
dec
sub
rorl
pop
int
es
hlt
das
cld
dec
jp
call
jl
jb
jnp
rorb
mov
sub
sbb
jns
sub
and
mov
xchg
lock
mov
push
add
decl
dec
adc
dec
jp
mov
out
jg
int3
push
jge
adcl
ret
or
outsl
repnz
pop
sarb
test
push
jge
lods
in
lea
jo
fnsave
sbb
data16
push
xchg
cmc
jmp
pusha
nop
leave
cli
pushl
mov
push
test
xlat
cmp
sub
add
insb
outsb
stos
push
aad
pop
sarb
add
cmpl
mov
or
fimull
push
popf
add
cld
fwait
popf
add
fdivl
or
mov
clc
cmpsl
push
mov
push
dec
outsb
or
stos
in
or
in
push
clc
scas
mov
lret
daa
adc
dec
cli
call
pop
or
dec
push
mov
cmp
fcoml
test
or
shlb
fldt
das
pop
js
or
and
mov
xchg
xchg
jecxz
add
sti
mov
xor
shrl
pop
cli
or
jb
push
xor
push
pusha
outsb
cs
str
or
pop
aas
loopne
shr
call
xchg
push
imul
inc
mov
sbb
shll
mov
inc
scas
int3
xchg
pop
ret
hlt
in
pop
or
push
call
in
stos
sbb
cld
or
int3
or
test
std
or
cmpsb
dec
popa
pop
inc
and
mov
mov
sbbb
cltd
cli
cld
popf
mov
clc
outsl
push
jp
push
repz
outsl
add
push
add
popf
mov
lock
inc
movsb
sbbb
lcall
jno
inc
lret
push
popa
adc
pop
xchg
or
aaa
xchg
sar
pop
sbb
or
dec
cld
mov
bound
add
or
jecxz
jno
rclb
inc
cmpsb
ja
lret
mov
divl
xchg
ljmp
cli
or
js
dec
mov
adc
lret
xchg
cltd
repnz
in
nop
cli
in
fisubs
out
loopne
lock
into
mov
test
dec
movsl
sub
cmpb
std
ficoml
lea
shll
mov
mov
loopne
call
dec
or
push
dec
jg
xchg
sbb
scas
mov
add
sbb
pushl
repz
fidivrs
and
inc
sbb
pop
cmp
adc
rcr
push
in
jg
js
xchg
or
fiadds
leave
call
sbb
adc
fisttpl
pop
mov
roll
repz
pop
push
and
cli
dec
insl
clc
pop
mov
dec
push
pop
fisubl
imul
inc
jbe
add
mov
push
push
mov
mov
lds
sti
pusha
test
pop
xchg
cmpsb
dec
sub
lahf
or
cs
ret
stc
roll
ret
test
mov
mov
sbb
jae
jle
jmp
xchg
push
ficompl
dec
leave
in
rcr
push
add
xchg
pusha
cmp
lcall
push
mov
adc
sbb
push
pop
sbb
mov
jle
addb
push
add
outsl
sub
jg
add
cwtl
stc
pushf
pop
lods
adc
xchg
rclb
std
pop
and
jp
adc
hlt
out
test
rcrl
mov
jl
stos
addl
rolb
fldt
incl
fcomi
adc
cmp
ret
sub
xchg
out
loop
in
movsb
out
mov
lcall
mov
mov
or
insb
or
push
popa
std
addl
das
enter
fcmovb
mov
std
scas
add
and
inc
lock
lcall
enter
sbb
and
xchg
loop
xchg
dec
adc
shrb
mov
xor
jo
daa
dec
insb
cmp
fs
mov
inc
jp
mov
add
cmp
dec
xchg
aam
into
pop
aam
inc
mov
xor
orb
jo
insl
stos
pop
ret
dec
push
dec
inc
cmp
pop
xor
test
xchg
and
js
push
xor
pusha
pop
mov
mov
jl
ljmp
jo
cmpsl
shlb
in
ljmp
add
mov
lods
cmp
cmp
out
incl
lock
popa
and
in
add
jmp
xor
loopne
xor
hlt
rol
mov
mov
or
jnp
cmpsb
pop
je
push
xchg
and
mov
sbb
js
aaa
lret
inc
outsb
clc
outsl
out
rol
out
ficomps
in
xor
jg
mov
mov
shlb
fdivrs
jns
mov
mov
or
enter
lsl
lcall
xchg
shlb
dec
xor
jp
clc
pusha
nop
cmp
int3
and
jg
xchg
mov
sahf
fisttpll
mov
add
mov
sub
addb
popf
or
cmp
bnd
lcall
mov
dec
shll
ror
orl
push
push
cltd
cmp
enter
or
mov
test
cmpsl
je
xchg
hlt
incl
lret
repz
sbb
add
mov
test
fs
call
stos
shrl
mov
sahf
lds
sub
in
mov
mov
and
call
decl
cmp
mov
fs
inc
sbb
and
mov
or
inc
js
es
pop
cli
daa
aaa
and
and
test
xchg
lock
loopne
mov
popa
fisubrl
cmpsl
jl
outsl
mov
arpl
nop
subb
daa
ja
insb
push
xchg
add
fists
daa
sub
lcall
or
and
sbb
sbb
lret
inc
data16
and
mov
int
push
pop
mov
aas
pop
loop
xor
clc
test
shll
into
loope
jg
pop
or
rol
into
out
dec
jne
add
mov
and
mov
call
stos
jl
pop
jb
push
dec
and
test
test
rolb
cmc
and
pop
adc
jg
cmp
push
jg
mov
jo
pop
mov
subl
fdivs
mov
xchg
inc
adc
push
cmp
es
cmc
or
enter
lret
adc
xor
subl
add
icebp
ret
push
xor
jle
adc
nop
aam
cli
push
rcl
inc
jbe
insl
sbb
jo
testb
pusha
pop
inc
ja
shl
loopne
inc
jmp
inc
je
cmpsb
xchg
or
inc
pop
aaa
xor
dec
loopne
arpl
jle
hlt
or
sub
inc
xchg
or
add
xchg
mov
sub
add
xor
ret
subl
and
cli
dec
inc
clc
cmp
hlt
pop
testl
adc
xor
enter
arpl
mov
enter
lock
jb
ja
add
adc
add
pop
mov
jo
inc
or
mov
dec
mov
pop
aas
stos
fistpll
jp
or
ja
mov
icebp
push
adc
cld
xchg
test
cmp
pop
or
maxps
addb
and
pusha
pop
adc
dec
cmp
xchg
sub
pop
jns
test
add
cli
sbb
insl
out
xlat
aad
jns
mov
push
mov
cld
rorb
pop
lock
inc
xor
popa
popf
mov
or
in
in
loopne
jmp
mov
in
add
push
dec
xchg
aas
aad
les
mul
andb
sub
fisubrs
xorb
rorb
mov
and
mov
push
and
loopne
leave
in
lcall
sbb
sbb
rol
jg
pop
lock
dec
sub
xchg
out
inc
push
mov
jge
add
sahf
std
push
sbb
or
movsb
pop
jecxz
push
int3
pop
push
std
dec
stos
aaa
push
push
sbb
cmc
cmp
mov
xor
lods
out
dec
lea
dec
je
sub
out
loop
adc
mov
js
sbb
loope
aas
cmpsl
incb
or
into
es
adc
stos
mov
push
nop
mov
mov
sti
nop
js
add
sbb
push
pusha
add
and
jle
lods
cmpb
adc
xchg
je
push
repz
fldl
lcall
test
notl
mov
adc
add
aas
inc
loopne
mov
dec
fsqrt
mov
pop
test
and
push
cld
pop
aam
mov
jbe
test
push
into
mov
mov
add
ljmp
mov
cmp
psrld
mov
in
dec
sub
rolb
das
mov
lcall
xchg
out
daa
pop
cld
popa
pop
iret
in
jg
mov
test
add
xor
rclb
clc
push
mov
ret
xchg
loopne
mov
sbbb
mov
cmp
loopne
test
addr16
pop
cmc
je
cli
mov
sahf
mov
in
aam
ret
push
std
testb
add
mov
leave
cltd
fnstsw
jae
ror
sub
les
mov
mov
bound
dec
orb
lea
in
mov
xchg
push
testb
lods
push
mov
xor
mov
in
in
adc
and
int
test
xor
jae
pop
add
bound
cmpsb
xor
jl
xchg
jge
pop
loopne
cmp
dec
rcr
fldcw
xor
lock
xor
jmp
dec
lods
ljmp
jmp
sub
lahf
xor
pusha
ss
push
movsb
pusha
cmp
sub
decb
or
out
mov
in
cmp
lds
jg
outsb
mov
xchg
fsubs
and
test
cmpb
ss
scas
psraw
fidivl
xor
test
insl
mov
inc
dec
pop
jmp
xor
sbb
cmp
xchg
sub
or
loope
cld
incl
add
and
gs
loope
or
stos
add
sub
fisttpll
in
lods
add
or
xor
cli
or
imul
stos
jmp
pop
and
and
test
ret
pop
dec
dec
negl
add
clc
adc
cmp
cmpsl
push
push
jno
movsb
into
fldt
inc
movsb
xor
lcall
mov
or
xchg
sub
pusha
xchg
or
dec
popa
insb
inc
sbb
or
insb
popa
add
movb
pushl
push
xchg
mov
xor
jge
jb
cmp
fsubl
jne
adc
pop
loope
pusha
fsubrl
sub
cmp
mov
pop
js
push
ret
cmp
pop
inc
cld
decl
inc
mov
fs
lods
push
mov
test
mov
loopne
ss
fstpt
push
notb
aad
push
clc
push
pop
call
adc
jmp
imul
sbb
inc
ja
pop
push
push
movsb
inc
cmp
add
mov
and
call
sub
xchg
push
pushf
or
outsb
pop
fwait
and
adc
mov
sub
int3
ja
mov
push
popf
mov
mov
jbe
or
add
popf
cs
xchg
or
pop
jns
int
les
shrb
clc
or
incl
shrb
dec
adc
mov
jo
sub
cld
insl
push
mov
sbb
popa
xchg
cmp
loop
and
add
and
int
in
hlt
repnz
incl
setb
shll
rclb
jmp
rcrb
je
addb
loope
fidivs
push
cmpl
cmp
or
push
sbb
sub
or
decl
aas
add
inc
icebp
fisttpl
push
add
push
fdivrp
test
int3
mov
jne
dec
dec
cld
into
and
push
jbe
in
push
data16
lahf
or
movhps
lock
jp
pop
out
mov
dec
lea
sub
ss
pop
push
decl
call
inc
or
push
xchg
dec
stc
cmc
aaa
dec
jno
dec
add
mov
push
sbb
fs
push
lock
js
add
mov
xchg
adc
cmp
add
pusha
xor
dec
and
addb
or
sub
scas
jo
cs
xor
pop
cmp
lgdtl
lods
scas
mov
outsb
sub
cli
sub
pop
loop
mov
lods
pop
ljmp
add
out
les
fbld
xor
ds
adc
das
and
call
pop
sub
pusha
mov
roll
ret
decl
mov
xor
js
cmc
outsb
outsb
add
mov
popa
clc
pop
sbb
ljmp
dec
enter
les
mov
aam
jl
push
dec
js
xchg
sub
test
fcoms
fistps
cwtl
ds
inc
cltd
std
lcall
xchg
out
push
stc
rcrl
and
subl
jle
test
jb
pushf
outsb
push
jns
sbb
add
lcall
enter
jnp
sbb
mov
bound
and
lcall
or
dec
inc
pop
rclb
mov
mov
sarb
outsl
xchg
add
gs
pop
or
je
clc
cmp
add
xchg
add
xor
in
ud0
sti
add
mov
ret
lods
adc
push
data16
mov
pop
sbb
std
cmp
std
pop
test
jecxz
das
pop
aas
jp
clc
outsl
js
dec
flds
lret
mov
push
push
inc
push
ja
enter
je
iret
in
jmp
sbb
rclb
stc
psubw
outsl
aas
fisubrl
fs
movsb
mov
imul
pop
hlt
fdivrs
popa
xor
lods
xchg
inc
or
adc
cmp
aaa
cli
bound
mov
ret
pop
je
lcall
call
jp
rolb
pop
inc
jmp
decl
out
jecxz
jae
fsubr
xor
aad
push
add
nop
jnp
mov
mov
add
inc
pop
pusha
sub
or
aas
push
sahf
or
lcall
adc
push
sbb
xchg
xor
adc
cmc
mov
sbb
and
adc
std
mov
cmp
xchg
imul
xchg
xor
mov
add
insb
jp
push
hlt
mov
sub
stos
sbb
mov
or
jmp
lcall
xchg
ret
and
xchg
adc
fldl
leave
add
and
hlt
lock
xor
rorb
mov
pop
fsubrl
call
enter
jno
popa
mov
rcl
loope
jmp
sub
repnz
cmp
jmp
push
add
inc
mov
test
shrl
clc
mov
jl
hlt
xchg
fs
movswl
push
xor
aas
insb
fwait
fs
mov
adc
cli
pop
dec
je
or
jbe
dec
jl
add
fstpl
pusha
call
cmpsb
call
leave
dec
data16
andb
mov
scas
pop
aaa
clc
cmp
in
js
add
sub
mov
mov
push
push
test
sub
scas
mov
jmp
or
mov
jae
hlt
mov
fisttps
adc
fs
jmp
insb
push
std
in
mov
ficomps
in
push
inc
dec
cld
movsl
daa
aaa
pop
cmpb
pop
sbb
cmpsl
out
mov
adc
sub
pop
jle
test
xchg
aad
repz
mov
subl
pop
adc
pop
push
sub
sub
pop
rclb
cld
arpl
dec
ret
insl
cwtl
ds
inc
imul
cmpsl
outsl
xchg
sysenter
xor
push
jge
and
pushl
cmp
cmpb
aad
mov
or
aas
jmp
pop
stc
adc
rolb
ljmp
pusha
xchg
xchg
jg
lahf
loope
je
movsl
je
cmp
aam
mov
cwtl
xor
jge
scas
mov
imul
pop
or
pop
dec
cs
incl
cmovo
dec
mov
push
mov
sub
je
aad
les
popa
cmpb
pop
sar
xchg
jl
mov
add
mov
mov
out
cmc
loop
adc
pop
rolb
inc
ds
mov
bound
int3
cmp
adc
daa
adc
jo
adc
xorb
cmp
inc
mov
aad
les
int3
daa
mov
or
daa
push
xchg
mov
mov
adc
sub
or
mov
inc
jecxz
add
test
lcall
push
ds
cltd
nop
popl
and
imul
and
fisttps
aaa
inc
lock
es
loope
std
lahf
dec
lea
jbe
jge
xchg
mov
stos
mov
dec
gs
cmp
push
or
mov
cs
fninit
movsb
testb
or
js
ds
inc
lret
aad
sub
sub
mov
add
jmp
rclb
insb
in
popa
les
sub
push
fistps
js,pt
sbb
push
xchg
ljmp
add
jge
repnz
push
ds
aad
sub
adc
pop
imulb
rolb
push
and
pop
jns
nop
push
xchg
in
cmp
fiaddl
in
pop
jge
cmp
jno
add
es
pop
iret
cwtl
icebp
xor
or
or
mov
push
add
mov
and
ljmp
cmp
cmpsl
adc
pop
push
pop
sti
push
ja
std
mov
jmp
jo
add
call
ljmp
mov
pop
jle
mov
pusha
test
add
xorb
in
pop
insl
xorl
popl
inc
loopne
lea
push
test
rcrb
aam
ja
sbb
jno
movsb
mov
adc
or
popa
mov
mov
and
or
ljmp
les
insb
push
fistpl
dec
inc
lcall
fsts
stos
ja
je
shlb
popf
add
cltd
cld
fstpt
out
inc
adc
or
jb
sahf
inc
leave
jmp
sub
je
imul
inc
rorb
loope
push
stos
mov
test
inc
fidivrs
aad
ret
cli
add
mov
push
sbb
stos
push
pop
in
addr16
dec
pop
lea
sbb
fisttpl
add
inc
lock
clc
pop
push
pop
in
pusha
adc
add
jg
clc
popf
enter
cmp
addr16
out
fadds
cltd
js
mulb
mov
cld
pop
or
fcomps
mov
sahf
dec
pop
or
mov
pop
hlt
int3
xchg
jg
loop
nop
mov
outsb
sub
int
push
pop
mov
call
out
xchg
pushf
or
outsb
xor
mov
andl
push
cld
mov
sbb
push
stos
jne
out
or
sbb
mov
js,pt
loope
and
pop
push
dec
mov
hlt
js
mov
or
dec
add
push
xor
roll
movsl
test
mov
push
ja
ljmp
add
sbb
mov
fwait
ror
js
std
aas
add
daa
pop
adc
push
aas
inc
mov
adc
sbb
and
sbb
rolb
sti
call
sub
lahf
test
xchg
push
jae
fistpl
imull
call
xchg
mov
mov
lds
and
mov
dec
jo
movl
push
shrl
je
movsb
ja
adc
and
inc
mov
mov
and
decl
outsl
imul
xchg
mov
and
jle,pt
fmuls
ret
inc
or
or
jmp
sbb
push
into
pop
pop
or
sbbb
sub
popa
stos
call
mov
mov
adc
xlat
mov
push
sbb
push
inc
test
dec
int
lods
lods
pop
inc
dec
test
ret
aas
xor
fbld
xchg
cmpb
outsl
or
or
movsl
sbb
scas
ljmp
movb
adc
push
jne
mov
inc
clc
add
pop
mov
sbb
push
call
push
xor
push
cld
jg
dec
ret
test
imull
das
scas
and
scas
pop
sub
decl
dec
jecxz
movsb
movsb
add
add
mov
ret
mov
cmp
daa
lods
rcl
sub
sub
sub
cmpsl
jbe
adcb
imul
cwtl
push
xchg
adcl
or
xor
shll
mov
mov
fisubrs
lock
loope
inc
rorb
flds
negl
test
jmp
cltd
pop
stos
add
outsb
mov
cmp
mov
or
or
notb
movsb
inc
push
roll
shlb
imul
movsb
add
add
pop
push
jne
repnz
jg
sti
mov
add
pop
xor
pusha
push
sub
popa
fwait
xor
int3
mov
xchg
add
add
mov
mov
add
fists
jbe
mov
icebp
dec
pop
popa
loopne
imul
movsb
test
mov
movb
ja
std
ja
mov
add
mov
mov
ss
rclb
sbb
nop
xor
decl
and
pop
fwait
inc
jbe
shrl
mov
mov
and
xlat
rolb
pushl
push
jle
mov
mov
and
test
sti
sbb
test
push
jno
inc
cmpsb
cltd
push
out
sub
addr16
out
inc
lods
sub
es
push
in
call
inc
sti
movsb
cmpsl
icebp
setp
stos
es
sub
pop
adc
push
and
adc
cwtl
clc
cld
orl
stos
loopne
mov
jecxz
mov
inc
pop
mov
das
or
test
ds
loopne
aaa
loop
aad
jl
ss
je
pop
inc
inc
jnp
xchg
sbb
jg
fidivs
mov
xchg
test
mov
and
and
icebp
das
mov
add
inc
xor
pop
rorb
fmull
outsl
jg
add
ja
fidivrl
movsl
xor
int
dec
and
sub
mov
rcr
inc
dec
shlb
sub
lcall
sbb
pushf
call
pop
in
test
dec
pop
xorb
mov
mov
inc
sarb
push
xor
push
imul
lods
push
dec
daa
dec
pop
insb
push
pop
popa
call
pushf
mov
in
jle
push
xchg
add
push
fmuls
dec
imulb
mov
std
pop
orb
xchg
jg
cmp
test
cwtl
add
gs
or
ss
dec
nop
adc
mov
cmp
sbb
dec
movsb
loope
in
jle
lods
add
std
or
cmp
addr16
loop
les
push
sub
lock
inc
xor
jb
inc
aas
inc
mov
jecxz
clc
pop
arpl
sub
push
mov
push
push
and
sbb
insl
or
sahf
je
add
jp
push
push
outsb
mov
xchg
jecxz
clc
jmp
lds
jbe
pop
and
out
push
pusha
cmp
pushl
andb
pop
stos
in
mov
fstpl
jge
add
popa
insl
push
push
mov
mov
dec
clc
incl
sbb
push
adc
mov
sbb
dec
cmp
xlat
inc
mov
push
jo
ljmp
add
ljmp
mov
xchg
dec
insl
and
aam
icebp
int
push
xor
mov
xchg
add
leave
pop
cld
loop
cmp
pop
jmp
imul
in
test
add
faddl
cmp
push
jecxz
and
push
cmp
imul
pop
add
lds
and
and
adc
lods
mov
push
into
jecxz
xor
lahf
cmp
mov
stc
cmpsb
out
or
dec
sbbb
and
pop
stc
jno
popa
jge
ret
xchg
cs
or
dec
pop
hlt
adc
push
inc
das
pusha
sub
sarl
jns
or
fidivrs
repz
mov
push
daa
test
xor
sbb
push
or
scas
or
aaa
mov
push
pop
data16
popa
sbb
jg
setae
mov
mov
sarb
adc
inc
scas
or
and
mov
dec
sbb
mov
xchg
pop
mov
repz
testl
push
mov
sbb
pop
xchg
inc
insb
dec
lcall
push
roll
lods
mov
xchg
sbbb
stos
jle
jge
stos
or
lahf
and
push
clc
jg
and
pusha
inc
pop
add
addr16
and
or
mov
jle
jbe
hlt
sub
and
scas
mov
or
jnp
fnstenv
sbb
mov
cmp
ja
adc
mov
add
fists
jo
roll
and
movsb
push
orb
adc
ljmp
pop
lock
stos
mov
cmp
push
cwtl
adc
hlt
sub
mov
scas
sub
imul
fnstsw
cltd
jo
movsb
in
jge
cltd
rorb
js
jnp
insl
jecxz
cld
cmp
rolb
ljmp
fldt
mov
inc
mov
xor
jg
nop
pop
paddb
push
push
int
loop
adc
in
incl
sub
sub
mov
bound
xorb
inc
lds
jb
push
pop
jg
mov
or
mov
sbb
xchg
add
test
loopne
incl
insl
ljmp
cld
pop
repz
pop
adc
test
dec
and
lcall
std
insb
mov
pop
add
xor
lock
jne
movsb
dec
add
gs
or
popf
pop
mov
inc
push
out
call
mov
ljmp
inc
pop
sbb
and
incb
xor
pushl
pop
orl
xchg
push
sub
lret
ret
shlb
hlt
push
dec
dec
in
mov
jg
pop
mov
jg
or
ror
add
test
sbb
cmp
push
adc
scas
inc
loopne
push
adc
test
mov
add
mov
and
mov
lea
jo
or
inc
jge
add
jp
repnz
test
and
pusha
mov
aad
dec
cld
add
mov
inc
xor
xchg
in
adc
pop
jne
sub
add
cmp
popf
imulb
add
call
add
decl
add
dec
inc
xchg
jbe
push
movsb
nop
mov
mov
push
pop
mov
push
sti
fiaddl
icebp
inc
fwait
sbb
bound
mov
jg
jo
pushf
jl
sub
jp
add
or
cmpsb
aaa
aas
ja
mov
loope
mov
mov
bound
add
mov
out
cmp
enter
loope
pop
ret
pop
rcrl
push
rol
icebp
pop
icebp
xchg
mov
lcall
inc
outsl
add
inc
aaa
hlt
sub
rorb
iret
call
rclb
setle
popf
push
bound
sbb
sbb
ficoml
js
cmp
push
data16
sub
jb
js
sbb
fmul
dec
xchg
icebp
add
add
ljmp
xchg
push
dec
adc
iret
cmpsl
push
mov
cmp
es
mov
iret
addl
loope
pop
test
pusha
add
fiaddl
and
or
xor
stos
adc
aad
cld
sbb
cmp
dec
insb
add
mov
mov
jmp
inc
mov
lcall
mov
shlb
fisttpll
repz
sub
stc
pop
cmp
and
mov
mov
movl
ret
fwait
dec
and
mov
push
mov
je
test
pop
mov
inc
imul
mov
lods
lahf
enter
ret
xchg
bound
pop
pop
mov
in
nop
test
shll
jle
mov
add
xor
sbb
or
add
jno
pop
dec
add
outsl
jge
andb
sub
cli
outsl
mov
mov
mov
mov
push
push
sub
ljmp
and
test
jb
pop
push
sbb
daa
xchg
stos
out
or
pop
mov
insb
mov
add
sbb
or
lock
mov
dec
add
lods
bound
in
dec
test
pop
or
mov
sbb
das
enter
sub
add
mov
pop
or
and
mov
push
outsb
pop
jae
imul
or
and
mov
outsl
ret
pop
repz
add
loope
jle
mov
push
pop
nop
xor
cli
test
es
cmp
cmp
bnd
mov
jae
mov
cmpl
aas
adc
or
xor
or
push
and
lods
mov
xor
adc
push
push
adc
clc
pop
sub
sahf
lcall
inc
jbe
inc
adc
loopne
pushf
adcb
in
or
xchg
cmc
dec
std
mov
add
repz
adc
aas
clc
jbe
hlt
xor
icebp
ja
call
hlt
jg
cmp
mov
mov
inc
cmpsl
clc
js
sub
das
or
in
popf
addr16
imul
andl
dec
in
imul
push
mov
out
mov
inc
mov
mov
mov
add
add
lea
addb
inc
cld
outsb
fistps
movsb
inc
push
add
mov
iret
adcl
add
inc
and
mov
pop
lret
lock
sub
or
pop
and
in
and
or
test
shll
cmpsb
es
out
sub
jle
xchg
in
jmp
pop
adc
jg
sub
loop
push
dec
movsb
xor
mov
loop
and
ret
movsb
js
aad
or
mov
mov
mov
lret
outsb
or
mov
fwait
mov
addr16
xlat
dec
sbb
jl
js
shll
jns
xor
int
add
push
cmpsb
mov
fs
jo
ljmp
rcrb
lods
or
inc
mov
jg
adc
pop
ret
imul
ja
mov
out
and
rol
jno
or
rol
cld
sub
adc
jb
push
in
testb
shll
fcomip
dec
add
mov
xchg
xor
add
lea
mov
in
mov
hlt
sub
add
adc
out
mov
aam
sbb
in
jns
rclb
inc
loopne
dec
call
adc
cmp
mov
mov
mov
nop
arpl
mov
es
dec
sub
inc
adc
xor
push
imul
cli
outsb
loop
arpl
bound
outsb
aaa
fisttps
push
fiadds
cmp
sbb
mov
sbb
movsb
adc
rcr
mov
lea
mov
dec
or
dec
cs
push
push
mov
mov
movsb
cli
popa
jae
adc
push
jp
enter
clc
or
jns
lods
jge
mov
add
clc
add
cmp
lcall
inc
jmp
and
sbb
mov
jl
xor
jmp
mov
fidivl
mov
sbb
sub
leave
test
test
sbb
cmp
loopne
pop
pop
loopne
js
mov
or
fidivs
xchg
outsb
cli
dec
jp
shll
xlat
inc
mov
es
pop
and
jge
add
mov
int3
push
test
ret
ljmp
lcall
lock
dec
mov
mov
scas
cli
daa
lods
cmp
cmpsl
mov
add
mov
sbb
jo
xchg
fidivl
and
sahf
call
xchg
shlb
cmp
lcall
into
rolb
and
push
add
mov
sub
ret
popa
fsubrl
pop
mov
or
jmp
dec
mov
mov
xchg
sbb
push
xchg
pop
outsl
pop
jecxz
int3
hlt
sub
push
cmp
data16
hlt
call
cmc
mov
bound
dec
add
cmp
inc
sti
sub
rorb
inc
cmp
fistps
loopne
and
daa
cli
fidivrl
repnz
movsl
rcrb
mov
jo
inc
cmp
push
xchg
mov
add
pop
es
mov
or
mov
and
mov
test
cmp
sub
addr16
scas
ds
mov
test
incl
sbb
push
cwtl
je
div
les
mov
nop
inc
lock
adc
dec
jg
test
xor
inc
inc
test
fistpll
inc
out
imul
push
inc
push
fs
mov
and
mov
out
mov
cmpsb
cmp
mov
stos
jne
clc
push
and
nop
and
cltd
clc
pop
repnz
adc
xor
dec
lea
sub
mov
and
pop
and
jo
or
shlb
add
test
loop
add
arpl
pop
stos
fmuls
mov
add
mov
cmc
push
dec
jl
xchg
xchg
aam
adc
dec
jne
mov
push
clc
mov
aam
xor
out
fs
xor
jne
push
lock
daa
pop
sarb
and
push
or
lret
add
sub
or
jb
push
outsl
lods
pop
add
scas
add
mov
and
jb
lretw
cmp
mov
lret
scas
andb
cmp
lds
mov
push
jp
mov
xchg
mov
enter
fwait
pop
cmpsb
lock
mov
fsubs
test
cmc
out
mov
lods
fneni(8087
add
sbb
mov
test
les
lahf
pop
ja
or
and
inc
movsb
pusha
xor
daa
test
adc
cltd
or
lock
inc
lock
test
cmp
mov
shll
cmpsb
xchg
incl
nop
test
pop
mov
inc
or
adc
lods
lahf
push
mov
dec
bound
or
shlb
into
or
mov
loope
jnp
cmpsl
and
cmp
add
cmp
mov
fmull
insb
cmpsl
inc
cmp
dec
add
movsl
ss
xor
push
js
and
arpl
ffree
cmp
cltd
shl
popa
or
pop
ret
lret
sub
cli
shr
aad
arpl
lods
stos
add
lds
pop
aas
add
and
rcr
orb
dec
dec
xchg
cli
imul
jle
mov
mov
xor
add
sbb
mov
lock
mov
sub
sub
push
je
gs
pop
divb
ret
jg
repnz
mov
xor
es
xor
hlt
fistpll
es
fbld
loope
xor
std
mov
pop
push
loop
adc
sbb
adc
xchg
int
sahf
jl
inc
fwait
sub
mov
es
nop
data16
sub
cmp
mov
aas
or
sub
pop
mov
mov
xchg
mov
call
xor
out
rcrb
push
cmc
ljmp
pushf
mov
adc
mov
popa
push
adc
in
or
pushl
mov
mov
push
insb
pop
add
mov
loop
pop
or
add
jbe
ljmp
dec
dec
push
lock
sbb
and
rcrl
enter
fidivs
and
add
ljmp
bound
mov
push
xchg
sbb
adc
ret
cmpsl
adc
dec
fisttps
je
mov
ret
xchg
fnsave
fcom
jl
cmpsl
pop
mov
sti
xchg
lret
pop
mov
or
shl
shrl
xor
pusha
xor
dec
shll
out
call
jmp
inc
xchg
popa
ljmp
daa
adc
inc
ret
adc
and
ljmp
and
mov
ret
rcr
push
std
sbb
jecxz
cmpsl
sarl
bound
adc
std
mov
je
adc
jb
cmc
ja
pop
mov
test
inc
push
les
cmp
sbb
dec
sub
das
mov
fwait
ja
roll
pushf
sbb
lahf
in
jbe
ja
insb
les
mov
mov
jno
test
sbb
test
mov
pop
sbb
out
mov
lods
psrad
inc
or
add
fs
mov
cmp
pop
mov
pop
pop
jp
fildl
hlt
and
jg
adcb
and
mov
pusha
or
xchg
test
addr16
push
in
sbb
or
adc
add
xor
sub
decl
loopne
xchg
enter
mov
jp
ficomps
jecxz
cs
lock
addl
or
cmp
js
movsl
mov
sub
stc
jle
dec
das
push
dec
sub
dec
sub
int
rclb
bound
mov
decl
fwait
dec
out
rolb
mov
sbb
scas
push
inc
dec
and
and
cmp
and
add
or
ja
jp
jbe
data16
sbb
js
mov
pop
lock
jno
add
outsb
push
sub
and
clc
mov
rorl
xor
adc
outsl
sub
xor
pusha
jbe
enter
sbb
add
and
xchg
loop
imul
aas
push
orb
or
test
fimuls
das
fmuls
jge
add
popa
pop
test
mov
aam
add
pushf
sub
sahf
out
mov
loopne
les
rclb
ret
adc
rcrb
push
sub
lahf
clc
mov
add
mov
lds
jle
mov
jae
adc
pop
jns
push
out
popa
push
test
dec
add
int3
or
call
frstor
insb
mov
push
je
icebp
sub
incl
std
mov
ds
inc
and
shll
jle
cmpsl
mov
inc
decb
mov
fbld
adc
cmc
hlt
pop
cmp
mov
xchg
xchg
hlt
call
inc
cmpsb
cwtl
adc
add
rclb
movsb
lock
int3
mov
or
dec
add
lock
sbb
cmp
fdivl
les
icebp
inc
jp
cs
lods
inc
cmpsb
jg
adc
mov
not
push
lods
mov
mov
sub
mov
lcall
add
adc
cmp
roll
push
movsb
call
imul
ret
lock
nop
fistpll
scas
push
and
mov
pop
js
jo
jnp
movb
inc
push
jg
into
decl
push
pop
jg
das
xchg
js
adc
pop
imul
xchg
addl
lret
lock
stos
push
ds
enter
insb
mov
in
imulb
cli
das
filds
mov
fimull
mulb
jecxz
adc
shll
in
cltd
sbb
fidivs
cwtl
es
dec
mov
inc
popa
mov
xor
sbb
mov
pop
into
pop
inc
dec
or
es
jle
inc
jp
rcll
push
data16
dec
mov
adc
subl
inc
jne
ret
divl
aas
mov
js
mov
jmp
sbb
and
or
lcall
ds
jb
fs
sub
add
in
test
mov
outsb
push
adc
mov
dec
add
loopne
fisubl
inc
add
negl
jbe
test
lods
jg
xchg
sahf
lret
sub
and
sbb
xlat
scas
clc
nop
sti
mov
push
pop
bswap
mov
cmp
cmp
push
pop
adc
pop
pop
dec
stos
out
outsl
ret
popa
mov
int3
cmp
shll
fsubrl
jg
cmpsl
shlb
sbb
jge
push
jg
std
iret
push
sbb
je
cmpsl
cmp
iret
jmp
add
lock
outsl
rolb
lcall
data16
cmp
in
pop
ret
cmp
sub
cs
leave
ds
pop
and
adc
inc
jbe
and
inc
mov
mov
cmpsb
push
mov
jnp
rclb
add
inc
cmp
dec
data16
sbb
mov
sub
jecxz
lods
dec
mov
rorb
movsb
cmp
popa
inc
pop
aas
push
aam
cltd
lods
mov
adc
ss
add
inc
ds
cltd
and
into
dec
xchg
ret
sbb
pop
sub
loope
es
fs
jmp
add
push
icebp
xlat
aas
loope
es
mov
popa
fsubrl
icebp
jg
mov
lret
adc
scas
orb
rolb
nop
ljmp
cmp
add
call
jl
loope
jbe
pop
sbb
sti
inc
xchg
jo
xor
mov
adc
out
push
pop
aas
and
jl
lcall
clc
fistpl
xchg
xchg
rcr
jecxz
fdiv
dec
dec
adc
adc
lock
mov
mov
dec
push
clc
mov
mov
test
xor
mov
movsb
cmp
adc
push
aas
inc
jnp
out
out
inc
mov
lods
test
lods
dec
jnp
test
and
push
rcrb
hlt
imul
nop
mov
push
outsb
loopne
sub
push
adc
sbb
xchg
popf
xchg
rclb
push
sahf
mov
in
sbbb
dec
lcall
mov
shll
icebp
sbb
aas
push
clc
popa
repnz
mov
push
in
add
imul
dec
inc
adc
jae
or
pop
xchg
xchg
fs
ja
fwait
imul
or
sbb
or
add
pop
cmpsl
push
mov
xchg
sbb
aas
dec
pop
aaa
pop
and
and
xchg
add
repnz
stc
sbb
repz
imul
inc
popa
mov
pusha
bound
lock
lcall
cld
insl
cmpl
sub
mov
iret
sub
adc
push
rcr
inc
sub
jno
pop
aas
and
pop
pushl
jecxz
pop
mov
xchg
inc
movsb
mov
pop
pop
sub
fidivrl
xor
mov
cli
xchg
jbe
jg
addb
call
adc
or
or
shlb
mov
js
aaa
rol
je
xor
in
divps
mov
stos
push
sbb
dec
fs
orl
or
lcall
dec
sahf
movsb
or
cs
stc
roll
sbb
outsl
mov
and
fcompl
arpl
push
pusha
movsl
add
jl
inc
inc
pushl
push
sahf
into
push
and
add
jo
xor
adc
cmp
roll
lahf
or
push
mov
pushl
nop
pop
inc
jle
sbb
pop
mov
or
xor
jae
cs
mov
dec
push
dec
or
lahf
push
push
pop
in
mov
adc
mov
mov
or
adc
xchg
cmpsl
mov
icebp
incl
or
pop
xor
xor
add
and
pop
icebp
push
popa
out
testl
mov
aam
xchg
xor
push
int
push
adc
cmp
xlat
fidivrs
mov
xchg
ret
jp
mov
addr16
or
sbb
adc
repnz
out
in
lods
inc
sbb
scas
adc
pop
hlt
into
or
mov
mov
push
fs
jbe
out
fidivl
cmpsb
lcall
mov
imul
pusha
add
cmc
fnstcw
mov
leave
pop
and
fldl
adc
pop
aaa
add
xchg
pop
rolb
je
jecxz
fsubp
and
inc
sbb
je
push
or
mov
pop
jmp
sub
insl
les
data16
out
adc
sbb
aam
or
popl
test
add
lea
and
into
mov
inc
sbb
push
lcall
mov
push
push
ljmp
add
ss
lock
push
pop
mov
xchg
scas
shlb
shr
ds
rorl
out
clc
push
aas
and
cmpsb
sbb
in
std
lea
jecxz
in
sub
lret
cli
fisttps
test
push
add
adc
and
loopne
mov
scas
push
xchg
mov
decl
mov
push
stos
cld
nop
xchg
sbb
imul
add
mov
pop
mov
xchg
andb
insb
push
and
lret
fadds
nop
jbe
sahf
cmp
xchg
cwtl
cwtl
and
adc
mov
sahf
mov
adc
shlb
and
imul
mov
rclb
add
jbe
push
mov
jp
adc
sbb
jle
xchg
sub
movsb
add
std
ljmp
mov
sarl
inc
mov
neg
leave
push
movsb
mov
pop
xor
jmp
mov
pushf
data16
pushf
pop
fstpl
xor
and
decl
clc
into
outsb
and
ret
call
ja
ficoms
insb
scas
push
loope
cmp
js
jmp
aas
and
divl
dec
insl
xlat
add
jmp
mov
mov
lcall
orb
rclb
movsl
inc
scas
imul
leave
xchg
test
xor
lret
cmc
push
sbb
bound
jp
andb
sub
xor
or
data16
add
ret
and
leave
xchg
sub
enter
call
push
rorb
icebp
cs
sbbb
std
jmp
insb
test
movsl
lock
push
adc
ret
clc
push
lock
pop
sbb
psrlq
in
sub
test
adc
cmp
aas
push
hlt
push
into
add
hlt
mov
adc
jb
sub
ljmp
loope
add
push
lds
dec
jo
jb
js
bound
mov
jbe
or
or
sub
push
pop
shlb
ljmp
cmp
in
cli
stos
or
xlat
clc
jg
inc
pop
insb
rcrb
repnz
mov
mov
lcall
mov
add
mov
popa
fsubrs
sbb
xchg
adcl
add
and
stos
cmp
xchg
arpl
lock
jbe
mov
jmp
xchg
add
js
or
ds
scas
mov
mov
mov
sub
and
sub
ss
mov
or
dec
mov
or
mov
cltd
lret
xor
xchg
or
cli
out
or
or
mov
mov
sti
aas
push
sbb
or
mov
arpl
out
and
pop
imul
insb
or
push
inc
rcl
add
aas
ljmp
clc
fxsave
dec
ss
cmp
xor
cmp
pop
inc
add
decl
lock
leave
pop
push
in
fisttpll
sbb
adc
push
pushf
clc
xchg
mov
loopne
add
mov
jg
sub
bound
enter
xchg
mov
push
mov
jnp
les
jg
mov
sti
xchg
pusha
push
jg
or
mov
inc
dec
outsl
push
fsubp
dec
rol
das
clc
jmp
lcall
jnp
shlb
ds
mov
insb
sbb
ficomps
jg
jecxz
sarl
popa
sub
movsl
adc
movsb
lods
mov
ret
add
and
das
mov
adc
mov
or
decl
js
shlb
and
mov
test
js
sbb
mov
pusha
sbb
gs
pop
push
add
ds
aam
dec
jmp
jg
shll
cmp
push
js
das
push
push
les
nop
shrl
stc
xor
insb
mov
cmpb
dec
je
idivb
push
adc
xchg
add
jnp
out
cli
inc
lret
or
mov
adc
scas
scas
dec
push
shl
aad
inc
les
cli
cltd
and
shl
mov
fiadds
push
xchg
lods
add
xchg
mov
pop
and
rclb
push
mov
xchg
push
shrb
orb
scas
lock
lods
push
scas
mov
jno
inc
xor
inc
add
out
push
xchg
and
mov
dec
add
inc
leave
popa
adc
int
or
or
xor
out
fistl
xchg
fwait
decb
sub
mov
mov
inc
nop
jo
enter
dec
sbb
add
adcl
movsb
js
repz
xchg
in
pop
movsb
pop
mov
sbb
jle
jmp
sbb
rol
pop
inc
fcoml
fsub
call
les
pusha
fidivrl
jecxz
jl
call
or
push
enter
fistl
mov
pop
les
stos
cli
imul
and
mov
test
add
sbb
clc
mov
add
or
inc
pusha
shrl
aad
jl
mov
shlb
stc
out
inc
std
xchg
jo
sub
cli
mov
loop
and
addr16
daa
rclb
cmp
ret
push
scas
jp
jb
and
push
adc
lods
ljmp
mov
xchg
mov
push
les
xchg
lds
or
adc
int3
mov
lock
loop
cwtl
lcall
cmp
fisttps
shl
orl
push
push
sbb
scas
inc
rorb
leave
xchg
fsts
add
push
push
test
je
aas
or
jb
or
mov
inc
dec
ret
movsl
inc
lret
addb
mov
js
add
jg
sub
pop
jnp
insb
or
xor
leave
add
sub
or
notl
fucomip
add
sbb
mov
int3
push
dec
fwait
pop
dec
add
cmp
lcall
out
jle
adc
lds
imul
lea
scas
sbb
call
adcl
mov
in
add
or
inc
push
out
inc
shl
sysenter
mov
jg
ror
push
shrb
les
and
int
jo
xchg
cmp
rorl
cmp
mov
inc
jo
enter
hlt
xor
adc
cmp
add
xor
lcall
rolb
inc
xchg
mov
push
or
dec
jo
pop
insb
popf
aaa
test
mov
push
mov
ds
inc
int
mov
cmp
jns
jg
nop
adc
add
push
xlat
aam
mov
push
imul
inc
xor
aaa
loop
outsl
leave
xchg
or
icebp
es
pop
cmp
add
call
int3
pop
push
mov
cmpsb
lcall
call
cmp
pop
mov
jg
lock
xlat
jne
fwait
lea
clc
cs
lock
add
add
xor
rcrb
jae
xor
mov
mov
adc
loope
mov
bound
inc
inc
xchg
adc
adc
orl
adc
sub
test
sub
mov
add
mov
jno
and
cltd
pop
rcrb
mov
clc
mov
mov
filds
pusha
jl
loopne
scas
xchg
dec
inc
or
subl
mov
jne
aaa
aas
dec
aas
mov
add
int3
enter
mov
cmp
push
adcl
sbb
push
insb
and
rolb
dec
xchg
rcll
xor
mov
mov
ljmp
das
sub
ljmp
in
pop
shll
neg
stos
cmc
pushl
pop
ficompl
aaa
dec
or
scas
rorb
or
push
imul
xor
jg
cmp
ret
jo
pushf
fs
stc
aad
add
push
mov
cld
out
lods
lods
add
in
sbb
rolb
fiaddl
mov
inc
addr16
or
cmp
nop
mov
das
inc
rcrl
div
and
mov
adc
cmp
or
out
mov
jp
mov
lock
ror
sbb
jle
dec
test
mov
cwtl
dec
aaa
mov
rorl
or
dec
inc
and
mov
pop
add
add
push
leave
mov
call
and
cmp
pop
in
je
xchg
int
jbe
lahf
pop
xchg
add
push
jp
cs
xchg
loopne
pop
les
loope
js
mov
xchg
ss
push
sbb
mov
add
pop
insb
sub
shrb
fld
out
and
push
in
or
jle
xchg
mov
or
mov
shl
cli
mov
es
loopne
and
mov
ljmp
xor
ja
or
xor
mov
cli
repz
scas
ljmp
adc
aam
sbb
push
andb
cli
mov
adc
scas
clc
loopne
or
sbb
lcall
jp
or
rcrb
or
sti
and
adcb
hlt
sub
mov
pop
popf
cmp
push
or
shrb
nop
sub
add
fmuls
lods
sbb
hlt
dec
pop
jg
in
adc
insb
jl
xchg
lds
lods
xchg
adc
and
xchg
jae
add
mov
arpl
or
lret
lret
push
shrb
inc
loope
pop
xchg
in
or
lea
aas
subb
int3
mov
lds
cli
jg
add
stc
jmp
xchg
pop
push
xorb
ret
jmp
sbb
sbb
imul
mov
push
sarl
mov
and
ljmp
jecxz
jp
mov
xchg
sbb
xchg
and
jbe
mov
addl
or
xchg
dec
jmp
stos
fwait
icebp
add
fdivrs
loop
aas
push
lock
sub
and
adc
pushl
imul
add
cmpsb
sub
enter
je
arpl
loope
push
daa
loopne
fadds
mov
sti
add
xchg
mov
lret
loopne
rol
pop
mov
ljmp
fs
xchg
inc
sub
icebp
mov
jecxz
add
enter
sti
mov
jne
jne
outsl
popf
mov
out
mov
imul
lret
dec
xor
testb
or
inc
pop
pop
adc
or
push
push
mov
mov
daa
inc
cld
ret
repz
shr
insb
mov
inc
into
push
sub
dec
jp
add
sub
lcall
dec
out
xchg
sahf
push
push
inc
popa
dec
cmpb
cmp
je
sub
mov
add
aaa
mov
out
push
mov
or
pop
je
clc
xor
lcall
push
cmc
sbb
or
out
enter
inc
std
jmp
jg
pop
sbb
in
inc
test
test
cmp
pop
mov
push
adc
mov
inc
call
mov
push
mov
xchg
into
xchg
das
cli
sbb
fnstsw
lods
sti
punpcklwd
sub
movsb
movsl
lods
sahf
xor
mov
icebp
and
push
sbb
add
or
cmp
nop
pop
push
test
test
and
incl
adc
fimuls
sub
sbb
call
xorl
xchg
divl
mov
adc
mov
xchg
test
es
shll
movsl
xor
or
push
outsl
push
add
and
pushf
data16
ljmp
mov
add
in
ss
loopne
decl
adc
iret
push
sub
sbb
addps
jle
jne
sar
mov
mov
cmp
out
push
dec
or
iret
cmc
rcrl
aad
incl
mov
jb
mov
sbb
bound
stos
pop
fwait
call
mov
sbb
aam
test
add
mov
pop
mov
add
add
mov
add
cmp
test
popf
cmp
pop
ss
and
lock
fwait
test
in
xchg
movsb
test
hlt
lods
hlt
jno
mov
enter
adc
decb
repnz
add
jnp
push
dec
xchg
push
mov
adc
lods
sti
outsl
xor
jp
std
add
sbb
js
std
adc
outsb
mov
xchg
cli
push
xchg
into
pop
into
dec
and
xor
push
decb
sub
add
sub
test
lcall
adc
int3
pushf
jg
outsl
mov
jae
mov
add
push
mov
daa
inc
pop
in
jb
push
jmp
movsb
mov
xchg
add
test
adc
mov
pop
lock
loop
pop
dec
subl
mov
call
shl
or
bound
movsl
xchg
xor
iret
push
xchg
shr
fsubrs
jo
xchg
lahf
mov
fs
sub
mov
add
mov
test
cld
cmpsl
rcrl
add
out
pop
mov
mov
jbe
cmpsb
decl
rorb
mov
imul
in
mov
scas
test
in
roll
cmp
fs
adc
sar
lcall
xor
mov
xor
fstpl
add
ss
andb
aas
push
pop
adc
cmp
hlt
inc
mov
xor
mov
jg
pop
dec
les
push
scas
hlt
jp
sbb
dec
pop
mov
ss
pop
mov
push
jns
fnstenv
push
inc
fcoml
jp
sbb
pusha
mov
jno
sub
jmp
stos
dec
pop
and
je
pop
pop
or
inc
pop
stos
pop
jne
pop
je
in
call
inc
jle
dec
inc
xchg
pop
adc
dec
and
loope
incb
icebp
dec
lock
inc
pop
inc
add
call
lods
adc
sub
push
add
push
stos
mov
mov
adc
jnp
das
js
in
mov
sbb
add
aad
test
jb
mulb
dec
icebp
add
push
shlb
daa
xor
cmpsl
std
aas
rorl
dec
push
leave
jnp
sub
mov
aas
mov
sbb
sub
and
pop
pop
lock
jmp
aaa
ja
adc
adc
lcall
sub
andb
inc
shrl
dec
inc
cwtl
cmpsb
sbb
clc
pop
pop
insb
fldl
pop
lods
in
ret
push
ret
inc
dec
adc
xor
push
mov
out
sub
inc
pop
dec
fmull
jg
test
scas
test
inc
scas
pop
mov
mov
mov
inc
idiv
add
push
out
jmp
out
ret
fbstp
test
icebp
neg
sarb
inc
pop
mov
push
push
mov
inc
aas
call
mov
shrl
sbb
daa
pop
dec
stos
ficomps
or
add
repz
pop
sbb
ljmp
add
adc
inc
mov
pop
lcall
jg
or
pop
and
add
ss
pop
cmpsb
lods
adc
jno
or
fsts
pop
mov
push
cmp
jmp
repnz
push
or
out
test
push
orl
ljmp
pop
or
push
hlt
cmp
adc
ret
dec
adc
rcr
ret
mov
fs
xchg
push
inc
mov
add
mov
add
push
adc
lcall
mov
xchg
ffreep
mov
loopw
push
aad
inc
test
jmp
or
mov
hlt
xchg
rorl
bound
loope
push
aam
push
loope
subb
jae
test
lret
xchg
sub
cmp
mov
shr
ret
mov
into
mov
cltd
jg
or
fadds
mov
sub
aaa
xor
mov
test
xor
ret
push
dec
jo
fnsave
into
sbb
outsl
cmp
fists
inc
enter
cmp
sbb
or
mov
shr
mov
mov
add
push
sub
int3
or
push
movsl
inc
jl
mov
cmpsb
dec
mov
sub
mov
inc
je
cltd
les
ss
and
lcall
push
dec
pop
sub
or
loope
push
psubq
aam
jl
mov
dec
inc
ss
inc
inc
aaa
or
push
jp
sub
mov
stos
lock
fimuls
and
addr16
and
lods
or
add
mov
add
pop
add
clc
xchg
dec
add
fldenv
outsb
jb
or
cmp
cmp
jg
jb
adc
leave
dec
pop
cld
out
jbe
add
or
lods
jg
mov
ret
daa
ljmp
scas
sub
call
pusha
pushf
cwtl
clc
mov
adc
decl
adc
outsb
push
adc
and
inc
imul
fiaddl
repnz
push
loop
lret
lods
insl
sahf
int
push
cmp
shufps
loop
inc
lcall
leave
xchg
jle
xor
xchg
and
das
mov
andb
add
inc
mov
xchg
adcl
sub
push
fiadds
out
pop
jecxz
loop
mov
ss
fcoms
inc
jnp
push
jmp
xchg
push
sub
jge
push
dec
or
push
xchg
push
adc
fiadds
dec
pop
fs
xor
xor
das
or
push
mov
jg
add
popa
adc
in
sbbb
repnz
dec
xor
test
inc
inc
mov
call
ljmp
mov
push
and
jg
fmul
or
xchg
scas
rclb
lret
shlb
inc
leave
or
sbb
mov
ret
push
add
add
push
les
stos
push
and
std
jg
sbb
add
ret
inc
test
sbb
scas
inc
add
bound
and
xor
mov
add
pop
pop
clc
adc
jp
hlt
push
jp
and
jle
lahf
outsl
inc
jo
jo
ljmp
mov
jge
jmp
push
into
or
mov
outsl
push
std
rolb
inc
push
out
adc
sbb
mov
sbb
add
mov
add
aas
jo
cmc
sbb
mov
rorb
mov
jne
mov
out
nop
loopne
das
jg
cmp
and
xor
xchg
shlb
cmc
xor
inc
or
xchg
cmp
lcall
test
aaa
mov
or
sub
mov
scas
or
in
jecxz
cli
mov
and
shlb
mov
jmp
icebp
cmp
nop
push
repz
loopne
and
dec
gs
ljmp
pusha
lds
fmull
ja
add
inc
daa
mov
push
and
fcmovnb
adc
adc
mov
pop
les
cmp
and
fcomi
call
enter
cmp
inc
sbb
addl
jno
cmp
jge
xor
vpsraw
push
pop
push
lock
xchg
cld
ret
or
outsl
cli
jnp
sti
add
cld
insl
add
dec
sub
or
xor
mov
push
fwait
xchg
xor
xchg
mov
test
enter
push
sub
das
push
mov
pushf
pop
push
add
dec
and
mov
jo
outsb
rcl
lods
pushf
jae
cmc
mov
or
cltd
xor
imul
ret
mov
add
mov
dec
mov
add
outsb
jge
and
mov
ja
ss
adc
sbb
dec
inc
mov
ss
xchg
fdivrl
or
bound
add
push
jg
enter
rcl
adc
or
cmp
jle
nop
stos
push
pop
mov
cwtl
dec
and
movsb
cmc
call
loop
add
outsl
aas
and
xor
cmp
sub
mov
in
jle
jno
shlb
push
mov
and
mov
pusha
daa
dec
inc
xchg
push
int3
out
xor
rcll
push
movsb
add
add
outsb
xor
in
adcl
xorb
pop
mov
loope
hlt
ljmp
adc
cmpsb
pop
xorb
repnz
jmp
inc
or
fs
xlat
and
mov
enter
clc
pop
push
jmp
jb
inc
push
into
loopne
push
inc
adc
cmp
mov
xchg
and
in
mov
sub
loopne
dec
or
add
int3
lock
jbe
or
jo
jb
xchg
sub
adc
xchg
xor
pushl
aam
adc
or
out
pop
and
ret
test
js
pop
mov
mov
popf
sahf
pop
es
pusha
push
rcrl
aam
lock
cmpsb
adc
imul
mov
ds
mov
push
rep
scas
push
stos
pushl
popl
mov
jmp
pop
cli
mov
movsb
mov
mov
daa
fistl
in
icebp
pop
pop
test
pop
out
xchg
stos
sub
sbb
cwtl
test
or
ss
cmpsb
xor
jg
push
sarb
adc
ds
inc
test
addr16
hlt
in
xor
adc
pushl
jle
adcl
pop
out
sets
in
roll
sub
fcmovnu
xchg
dec
sbb
mov
inc
mov
lods
cmp
lret
cli
mov
fsubrl
dec
dec
add
fmul
jb
ret
mov
inc
and
pusha
xorl
decl
testl
push
push
mov
dec
loopne
das
mov
push
mov
scas
xor
lcall
and
mov
fcomps
xchg
ret
push
pusha
sbb
out
mov
mov
cmp
mov
mov
dec
cli
jbe
loopne
add
fsubs
xchg
add
outsb
mov
imul
fcmovbe
insb
dec
sbb
movsb
mov
test
cmc
mov
out
mov
int3
js
sub
bound
push
into
pop
sbb
loop
lret
nop
sub
or
testb
popa
mov
pop
es
mov
sbb
jg
or
je
mov
jo
jecxz
xorb
js
or
push
icebp
add
xchg
cmc
xor
inc
call
sub
arpl
shrl
pop
pop
in
jmp
add
push
cld
jg
pop
add
sub
xchg
push
xor
sub
push
cmpl
mov
and
stos
jmp
enter
ss
movsb
aad
or
adc
negb
rcll
incb
push
sub
mov
and
pop
and
dec
rolb
and
adcb
es
jle
filds
sbb
pop
loope
rorl
js
adc
mov
in
ds
dec
pop
in
push
push
gs
ljmp
loopne
add
popl
pop
rcrl
dec
imul
dec
xor
cmp
mov
inc
push
stc
out
mov
push
out
bound
xor
outsl
add
mov
xor
outsl
aad
ret
push
add
decl
es
add
pop
pop
subb
push
cmc
jg
inc
lcall
adc
loopne
xorl
repz
inc
mov
out
xchg
movsl
lahf
pop
and
sbb
dec
popf
push
mov
pop
test
dec
mov
dec
xchg
mov
xor
decl
lods
add
or
imul
or
sbb
jg
or
fstpt
enter
or
mov
icebp
and
out
and
xchg
gs
aam
sub
cld
add
mov
inc
adc
inc
aas
xor
flds
or
dec
insb
lods
sub
xor
and
jle
pusha
rorb
push
and
push
jbe
cli
imull
lods
or
or
jbe
adc
inc
dec
lods
subl
imul
push
sub
fmull
push
ret
push
jbe
xchg
data16
cmp
nop
xchg
fdivrs
aad
call
orl
data16
xorl
xor
jge
decl
pop
dec
fistps
ret
sub
aam
scas
jmp
push
jo
and
sub
add
dec
jmp
scas
fcoml
rclb
fdivrs
or
sti
aam
pop
jno
sarl
sbb
clc
test
lods
add
test
inc
dec
xchg
mov
in
pushl
push
andl
cmp
jno
mov
aaa
inc
adc
or
dec
outsb
ret
das
outsb
or
std
mov
sahf
roll
mov
push
andl
mov
jp
sub
fsubs
aam
int
aam
jle
movl
outsl
or
lahf
mov
decl
je
test
movsl
mov
xchg
test
jb
mov
dec
inc
adc
cmpsb
push
xor
mov
pop
add
lahf
test
addr16
xchg
scas
push
sub
mov
or
inc
jecxz
cltd
stos
lods
and
jns
mov
mov
and
mov
cli
lcall
jne
push
sbb
scas
adc
cmp
lock
ljmp
aam
add
icebp
jge
lcall
push
jg
arpl
stos
and
addr16
dec
cld
pop
push
mov
imul
fildll
dec
push
dec
push
pop
mov
fisttps
rcrb
xchg
scas
add
sbb
dec
loop
push
xor
in
sbb
sub
ret
mov
fcmovnu
ret
cld
mov
sub
lcall
pop
add
pop
mov
shrb
add
icebp
inc
and
jecxz
dec
sbb
xor
push
std
sub
rcll
pop
xchg
ret
xor
mov
dec
and
incb
dec
add
xor
dec
xchg
ret
stos
js
sar
icebp
inc
mov
test
inc
cmpsl
fs
sub
push
decb
mov
outsb
mov
aaa
jge
call
aaa
cwtl
xor
sbb
fs
adc
in
je
or
dec
lock
jp
jp
xorl
ljmp
loope
xchg
mov
int3
jmp
mov
cmp
lret
mov
fstpl
lods
inc
add
sub
loope
mov
pop
add
inc
outsb
cmp
aaa
loop
or
sbb
out
cmpb
cli
mov
in
cmc
js
dec
add
incl
add
jne
xor
ds
lods
scas
push
fs
cmpsb
icebp
pop
adc
stos
mov
inc
dec
arpl
subl
sub
push
mov
xchg
pop
and
pop
dec
cwtl
repnz
arpl
cmpb
ja
in
cmp
adcb
ret
jne
mov
lcall
and
fdivrl
push
or
in
shlb
sarb
mov
clc
les
clc
mov
les
sbb
sub
adc
es
aaa
push
int3
or
stos
mov
daa
mov
push
dec
inc
mov
cmc
or
dec
push
jp
mov
and
inc
mov
mov
add
jbe
xchg
add
jg
pop
pop
movsl
nop
in
sbb
fcomip
call
ret
add
enter
jmp
mov
mov
push
push
shlb
jmp
mov
add
jbe
movsb
mov
cli
mov
imul
pop
je
icebp
outsl
stc
adc
pop
inc
imul
bound
test
imul
rolb
stos
testb
sbb
mov
insl
cli
icebp
mov
aam
clc
pop
in
push
inc
and
ja
adc
adc
pop
loope
ret
lret
loopne
adc
mov
data16
dec
pushl
or
sbb
das
mov
fwait
movsl
xchg
jmp
cmc
cmp
rorb
mov
cs
ljmp
mov
adc
push
mov
lahf
push
icebp
jmp
inc
mov
dec
cmpsl
dec
add
pop
bound
cs
jp
out
or
sbbl
xor
dec
mov
add
shll
push
mov
mov
jp
dec
lock
mov
push
addl
adc
nop
adc
outsb
fiaddl
sub
push
rorb
aaa
imul
cwtl
push
xchg
xor
mov
test
xor
push
test
mov
ret
cmp
flds
decl
lahf
sbb
sbb
mov
lock
pop
movsb
xchg
push
cltd
cmp
test
dec
cli
rorb
mov
fimull
jg
pop
mov
jg
shr
leave
or
xor
xorb
test
mov
dec
jg
jb
es
cs
or
jp
xchg
xor
mov
jno
jno
or
scas
ds
pushf
rcr
hlt
stos
jp
jge
call
pop
sbb
repnz
mov
add
push
rcl
push
dec
add
or
fidivl
push
loop
xlat
adc
subl
int
jae
fmuls
or
xor
addr16
add
aaa
data16
mov
es
leave
xor
aaa
fldcw
or
jns
ret
out
jae
arpl
jbe
mov
shrl
fwait
sub
inc
ja
add
xchg
sub
jge
pop
fwait
popa
aas
imul
ret
movsb
ja
cli
fdivs
dec
shlb
or
test
mov
mov
pusha
xor
test
nop
pop
mov
push
push
lcall
stos
xchg
inc
inc
ret
ficoml
pop
ljmp
fs
push
mov
subb
pusha
sahf
fdivrp
or
ret
movsb
cmpsb
data16
adc
or
add
mov
jno
lret
cli
fistl
adc
adc
pop
jge
inc
pop
and
push
cmc
das
adc
and
mov
and
dec
ss
or
pop
cwtl
sub
je
hlt
imul
jg
stos
lret
lock
push
jbe
cmc
inc
xchg
or
mov
mulb
lret
lahf
scas
popf
pushf
fisubrs
je
aas
adc
sbb
sbb
ret
fisttpll
inc
je
cli
fwait
push
mov
pusha
movsb
or
push
mov
add
and
dec
addr16
out
stc
jg
and
push
negb
or
call
dec
inc
add
insb
dec
inc
cmpb
push
cmp
jbe
cmp
pop
mov
mov
fstpl
inc
xchg
and
std
push
sub
shrb
scas
pop
inc
mov
sti
call
das
in
and
mov
shlb
mov
or
aam
cld
ss
xchg
mov
fidivrs
jne
outsl
js
pusha
and
int3
xchg
jecxz
dec
fdiv
pusha
das
jbe
cmp
mov
andw
adc
adc
add
lea
cs
clc
arpl
adc
hlt
incb
out
sbb
pop
sub
and
pop
mov
and
dec
xor
insl
mov
das
xor
xor
inc
jb
inc
divl
inc
jns
das
clc
icebp
test
xlat
pop
dec
mov
push
mov
testl
std
subb
sbb
into
or
or
xchg
loope
xor
add
loope
adc
inc
cmp
outsb
or
lea
bound
adc
inc
push
test
mov
xchg
or
imull
jno
sub
in
inc
enter
fucompp
aas
cld
out
xorb
mov
fdivs
adcb
sub
mov
icebp
and
inc
in
xchg
or
and
nop
push
popf
lret
add
dec
insl
mull
inc
ljmp
ds
mov
ffree
jns
sub
hlt
nop
or
js,pn
mov
in
cmp
icebp
pop
xchg
jle
jecxz
lcall
inc
call
icebp
scas
aam
adc
loop
mov
cmp
popa
std
ret
dec
jne
pushf
or
jno
shl
ret
sahf
popa
sbb
fildl
cmp
push
das
add
and
cmp
dec
sarb
fidivs
sbb
adc
mov
loop
adc
test
shlb
test
jmp
popa
or
lods
lahf
push
sbb
icebp
icebp
or
push
push
lea
rol
stos
sub
cmp
add
clc
mov
fsubrs
sbb
scas
test
pop
mov
or
dec
pop
inc
les
cmp
call
inc
mov
jge
das
sub
add
xchg
movsb
mov
mov
enter
pusha
xchg
and
adc
cwtl
adc
push
das
mov
and
icebp
push
lods
pop
cmp
and
or
es
popf
mov
jnp
cmp
mov
push
dec
pusha
in
dec
mov
dec
dec
pop
adc
mov
out
in
stos
push
popf
pop
sub
outsb
nop
shlb
xor
hlt
inc
adc
push
add
jmp
movsb
test
push
rorb
clc
fadd
push
mov
pop
ret
adc
pop
sub
ljmp
pop
aad
inc
fbstp
pop
out
cli
shlb
pop
and
xor
lcall
jbe
xor
movsb
dec
lods
paddsb
mov
add
ret
fildl
push
icebp
xorb
xor
loopne
sbb
test
add
divb
cmp
cwtl
orl
aaa
push
les
ljmp
clc
push
mov
insb
jecxz
and
pop
popa
xchg
adc
idiv
fbstp
sbb
mov
push
mov
pusha
orb
push
dec
dec
cs
xlat
pop
jg
lcall
pop
addr16
sub
mov
std
jg
add
rcrb
cmc
pusha
cmp
pop
cmovns
movsb
sub
lret
daa
mov
add
rcr
jmp
cmp
cmp
fldl
out
lock
push
adc
jg
mov
xchg
adc
lahf
ret
mov
out
sbb
push
mov
js
dec
pop
fsubs
movb
sbb
push
out
xorb
or
push
fiaddl
imul
fdiv
loopne
ss
test
mov
cltd
outsb
xor
or
addb
sub
pop
mov
mov
pop
je
fldln2
fcomip
pop
test
sub
jbe
adc
out
cwtl
repz
mov
aaa
sub
sub
jb
out
shll
mov
imul
movsl
jno
cmp
jl
push
pextrw
cltd
cli
jg
sbb
push
inc
pop
adc
sbb
outsl
push
lock
xor
arpl
loop
xor
popf
push
lret
shl
aad
loop
and
add
pop
push
adc
in
dec
ljmp
js
jb
mov
jg
push
in
in
inc
ds
add
mov
and
cmpsb
add
jg
fwait
inc
addl
mov
sbb
mov
dec
or
sbb
cmc
mov
clc
scas
dec
mov
mov
push
lcall
mov
jns
subb
mov
jb
jns
or
clc
adcb
cmpsb
hlt
aaa
inc
enter
inc
testb
incl
int3
std
mov
call
add
scas
xchg
mov
daa
clc
pop
int3
pop
mov
mov
rolb
sbb
pushf
sarb
adc
das
xor
outsl
xchg
mov
add
mov
pop
in
push
add
pop
add
outsb
mov
or
jo
lahf
or
jno
jle
or
fcomip
call
ret
fmul
rcrl
sahf
sti
sbb
outsl
xor
xor
xchg
dec
daa
inc
mov
adc
pop
sub
sub
das
int3
and
std
adc
add
mov
pusha
pop
test
nop
jmp
jbe
movq
in
sub
shll
inc
or
mov
inc
jmp
je
nop
push
clc
lcall
out
shll
jp
in
or
push
pusha
xor
subb
je
sbb
pop
jne
mov
jg
push
inc
dec
pop
jae
shlb
sbb
mov
xchg
cltd
outsb
sbb
aaa
cld
lcall
insb
in
inc
cmp
add
test
mov
xchg
adc
cmc
pushl
cwtl
add
push
and
jl
das
inc
js
das
push
cmp
out
cmpb
test
inc
rclb
sbb
sbb
add
cld
incl
clc
dec
lds
xchg
add
adc
insl
test
in
push
adc
pop
imul
sbb
clc
pop
sbb
cs
rcrb
add
or
loopne
fmul
test
pop
xlat
push
mov
mov
push
xchg
and
jp
inc
pop
mov
stos
inc
sbb
sub
test
sub
mov
out
jne
dec
pusha
mov
orb
dec
mov
mov
into
push
mov
push
mov
sub
adc
fcoml
jmp
frstor
sub
pop
int3
mov
xor
mov
cld
lock
sbb
jecxz
mov
mov
jecxz
insl
loopne
pop
fadd
ljmp
pop
aaa
int
icebp
pop
out
push
xchg
or
pushf
dec
clc
aam
lcall
enter
out
negl
leave
lods
push
or
subb
in
pop
xor
pushf
pusha
xor
mov
loop
xor
inc
into
add
outsl
jg
pop
and
aam
and
push
punpcklbw
or
in
mov
pop
mov
push
jle
ja
lds
dec
into
add
or
sar
out
or
adc
pop
dec
jne
and
pop
cwtl
shll
stos
ss
pop
je
dec
test
and
loopne
push
cmpl
sub
call
popf
lahf
mov
cli
adc
movsl
clc
dec
call
sahf
adc
cwtl
sub
movsl
enter
dec
aas
rcrb
sub
jnp
push
and
mov
js
rorb
inc
je
push
xor
mov
push
fimuls
mov
fwait
jl
xchg
es
jmp
and
jne
mov
and
in
decl
and
cli
cmp
hlt
in
sbb
cmp
leave
lock
jp
sbb
ja
shrl
fstp
les
das
add
cltd
sarb
loope
int3
inc
cmp
push
jg
inc
aaa
and
pop
jl
int
xchg
rcr
and
sbb
adc
in
or
mov
jle
mov
and
inc
mov
decl
dec
inc
arpl
lock
lcall
stc
aaa
push
lahf
mov
jmp
insb
or
adc
clc
pushf
jb
pavgb
cmpsb
movsl
jl
add
add
sbb
pop
jno
lcall
sub
sub
push
mov
mov
mov
icebp
or
andb
outsb
sub
andb
jl
jle
out
dec
xchg
add
fildl
std
adc
into
or
out
scas
nop
ret
out
sub
lcall
call
ds
cli
loop
xchg
cwtl
jmp
cli
mov
mov
or
fwait
mov
iret
xor
dec
push
jo
pop
mov
pusha
mov
inc
mov
mov
cwtl
fdivp
or
cmp
jg
lods
push
jnp
push
in
mov
mov
in
cli
mov
lret
mov
mov
push
mov
insb
xchg
jae
incb
sub
add
cmc
scas
jno
mov
out
xchg
adc
repnz
sub
cmp
push
adc
gs
add
lret
push
loop
decb
sbb
pop
hlt
or
repnz
mov
rcll
dec
inc
shrl
or
std
call
cli
mov
fmuls
xor
lds
jge
movsl
ss
mov
mov
lods
jb
loope
lock
mov
inc
test
shrb
clc
aad
rorl
sbb
movsb
add
out
loopne
xor
mov
call
lcall
adc
nop
fisttpl
mov
sbb
jns
add
or
xor
test
jge
into
clc
stos
push
loope
jp
out
pushf
jecxz
adc
shr
add
sub
pandn
stos
jle
mov
cld
sbb
sbb
sbb
sbb
in
xor
das
inc
loope
test
push
jne
push
push
scas
xchg
add
test
in
aad
push
mov
leave
push
movntq
out
stos
push
cmc
in
out
add
adc
pop
add
pop
imul
scas
inc
mov
inc
js
es
ljmp
dec
pusha
xchg
nop
gs
sub
xlat
xor
int
jg
ljmp
scas
test
test
push
dec
sub
jb
movsb
ljmp
jl
or
ret
and
lock
add
mov
inc
jnp
dec
ret
call
xchg
arpl
mov
cld
jg
adc
into
loopne
lret
push
add
jg
inc
sbb
jne
orl
ljmp
cwtl
mov
mov
sub
popa
sub
jmp
outsb
call
outsb
adc
sub
lret
sbb
xchg
adc
mov
popa
jecxz
mov
add
mov
inc
and
cmpsb
popa
cmpsb
cwtl
xchg
cmp
incl
pushl
dec
or
setno
je
pop
popa
mov
aas
lcall
movsl
xchg
xchg
ljmp
sbb
or
pop
inc
cmpsb
cwtl
lock
lcall
or
dec
lret
mov
fmul
sbb
test
sub
jle
and
mov
mov
jg
or
out
mov
or
lods
xchg
mov
fdivs
icebp
add
nop
es
xlat
sub
aad
cmp
jne
cmp
push
mov
xchg
shr
add
loopne
cmp
enter
add
decl
es
fstpt
jno
orb
out
jb
test
add
add
inc
adc
jl
loopne
jb
test
pop
mov
or
adc
and
sbb
cmpsb
stos
pop
push
cmp
sbbl
sub
pop
push
pop
push
dec
mov
insb
ficoms
fdiv
das
pop
push
mov
jp
dec
adc
fadd
fildll
xor
sar
adc
and
xchg
xor
data16
sbbb
adc
lock
insl
add
or
dec
std
xchg
inc
xchg
gs
cli
das
fdiv
in
fnstenv
insl
das
or
cmp
outsl
adc
cmpsl
ret
push
sarb
adc
bound
push
cmp
enter
add
ljmp
lock
pop
insb
adc
jo
mov
jg
pushl
movsl
loopne
cmp
or
adc
add
or
mov
lods
jne
and
out
inc
adc
pinsrw
mov
hlt
lods
ljmp
xchg
lock
sarb
clc
addr16
and
inc
push
cmp
sbb
xor
add
aam
push
jle
negl
mov
scas
jg
cs
jne
aas
sbb
or
inc
jecxz
mov
jp
idiv
aaa
fbstp
push
and
ljmp
mov
mov
ds
mov
xchg
popl
or
push
loopne
jecxz
push
or
and
mov
pop
xor
sub
test
inc
push
or
add
pop
sbbb
pop
pusha
pop
cwtl
in
mov
lods
sbb
negb
inc
jecxz
sbb
dec
mov
push
clc
adc
inc
dec
jg
lret
test
sub
decl
or
jo
xchg
push
cwtl
cmpsb
clc
mov
stos
pop
push
sti
fcoml
negb
ret
cmp
sub
cli
adc
js
das
cli
shrb
lret
fstpt
popa
aaa
and
andb
fwait
mov
fbld
jge
fwait
jnp
jb
int3
mov
push
aad
adc
mov
bound
add
xchg
ljmp
add
jne
dec
adc
ss
ja
movsb
mov
and
lret
dec
shlb
mov
adc
andb
mov
add
scas
and
jle
pop
cli
scas
notb
inc
repnz
insl
std
mov
nop
xchg
mov
sub
std
push
cmp
outsl
ret
ss
insl
jo
mov
loope
bound
ja
testb
cltd
mov
ret
adc
or
inc
push
sbb
push
ljmp
jle
mov
mov
and
adc
add
cmpsl
mov
shl
dec
out
clc
lcall
fbld
push
andl
or
lcall
add
subl
add
out
mov
and
xchg
test
clc
ja
aad
pop
test
dec
inc
sub
jmp
outsb
push
jo
divl
add
sub
popf
shrb
mov
cmp
xchg
dec
adc
ljmp
into
cmp
mov
repz
aam
add
into
ret
pop
ret
mov
int
mov
mov
jge
pusha
xor
push
inc
lcall
mov
cmpsb
mov
adc
std
call
inc
orb
and
mov
rorl
sbb
cmp
inc
ficoms
inc
or
aaa
ljmp
add
jl
adc
jnp
mov
stc
mov
rcrl
sbb
orb
fs
add
push
test
inc
inc
adc
sub
sbb
les
inc
aaa
push
mov
push
fimull
jmp
add
mov
jnp
xchg
call
subl
inc
push
inc
es
test
and
pop
mov
dec
aas
adcl
decl
or
sub
mov
push
adc
shlb
movsb
call
ljmp
pop
adc
int
orl
or
or
add
pop
pop
mov
or
leave
xchg
hlt
and
adcl
cmp
nop
std
sbb
push
cli
jb
sub
or
and
add
sbbb
cmp
xor
into
loopne
aas
add
adc
loop
ficompl
jg
and
mov
bound
je
sub
sbb
stos
adc
cs
push
inc
ret
dec
jp
out
mov
imul
xchg
xor
lods
cmp
mov
pusha
push
sub
xorb
inc
pop
lock
shlb
jl
stos
inc
int3
rclb
jno
iret
push
inc
lcall
and
addl
inc
or
xchg
or
sub
test
sbbb
jecxz
or
shll
mov
sub
dec
sbb
mov
jne
push
cmp
mov
test
jg
je
push
push
push
xor
mov
push
clc
out
xchg
aaa
rcrl
movsb
sbb
cwtl
mov
sbb
jb
dec
in
and
gs
nop
shlb
aam
outsb
mov
or
shlb
xor
cmp
pop
sub
xchg
scas
test
fwait
lret
test
adc
pop
imul
shll
ds
push
lahf
aad
mov
popa
and
dec
cmp
add
mov
mov
stc
adc
fsts
cld
stos
add
inc
push
mov
test
and
sub
mov
in
add
in
push
test
movsl
subb
out
cmp
pop
jbe
out
fadds
leave
add
aam
dec
nop
fsts
shlb
sti
das
outsb
shll
nop
adc
and
cmp
sub
inc
push
jb
outsl
cmp
sarl
push
push
mov
inc
sahf
xor
inc
lods
mov
fwait
subb
xor
adc
leave
ljmp
jae
bound
nop
sbb
xchg
dec
hlt
incl
cwtl
mov
gs
jmp
sub
adc
stos
call
push
xor
lods
pop
xor
add
ja
in
es
pop
xchg
icebp
jp
xchg
and
mov
lret
dec
loope
jg
icebp
push
add
push
adc
pop
cld
fcomip
push
mov
xchg
push
clc
or
testb
bound
das
clc
mov
mov
or
mov
pop
scas
push
xchg
daa
aas
in
ret
call
and
ret
inc
in
rorb
and
inc
cli
cmp
or
dec
cmp
dec
pop
sbb
sub
icebp
add
push
cmpsl
loope
xor
mov
mov
out
or
add
out
das
sub
out
enter
mov
mov
inc
xor
ret
incl
incl
inc
or
xchg
popf
sbbb
cld
inc
cmp
inc
jle
aaa
or
and
add
mov
outsb
pop
sub
jp
or
mov
add
mov
jecxz
xchg
mov
jg
mov
pushl
cmp
fisubs
movsb
dec
adc
loop
or
push
push
loop
adc
aam
scas
ret
clc
das
or
sub
mov
and
cs
int3
rorl
push
pop
pop
pop
aad
pop
hlt
jl
xor
loop
out
mov
sbb
rcll
mov
push
rcrb
ja
clc
stos
into
addr16
rorl
shrl
scas
lcall
in
mov
and
std
cmp
cmpb
sti
out
je
mov
hlt
mov
sub
scas
adc
push
into
in
or
xchg
shrb
push
push
ja
adcb
sub
pop
das
and
call
mov
jae
jg
adc
dec
jb
leave
sbb
pop
aad
lret
or
bound
imul
fmuls
popl
test
insl
push
add
call
mov
jp
xchg
std
adc
inc
push
pop
lods
test
lret
jmp
mov
push
xor
push
sti
sbbb
dec
sbb
dec
out
or
stos
xchg
and
add
loop
or
out
cli
push
sub
xor
lods
cmovnp
mov
pop
add
ljmp
cmp
cmpsl
scas
cli
into
mov
pop
adc
or
mov
dec
sahf
dec
or
inc
mov
mov
push
cld
cmp
add
lds
les
jg
and
es
mov
push
push
or
mov
lods
pop
jns
pop
orb
lock
and
pop
sbb
stos
les
shlb
lcall
sti
data16
pushf
add
out
and
xadd
enter
mov
pushf
mov
jb,pt
jl
adc
std
jno
lods
cld
push
aam
sbb
pop
jmp
jnp
xor
cmp
scas
push
bound
ret
orb
mov
xchg
aad
adc
pop
or
dec
jecxz
xor
add
inc
mov
sbb
loopne
xchg
test
test
adc
fisubrl
jg
rcrl
xchg
mov
aaa
nop
mov
cs
pop
mov
add
mov
dec
jl
mov
jmp
cmpb
push
sahf
test
lret
add
pop
mov
roll
sbb
mov
pop
sbb
ret
mull
sub
pushl
out
fidivl
xchg
test
cmp
loopne
aad
enter
xlat
ret
divb
std
sub
mov
hlt
or
lcall
mov
cvtps2pi
xchg
push
loop
mov
nop
add
push
mov
shll
jl
push
pop
les
cmp
xchg
mov
pushl
ja
shll
jo
sub
add
pop
sub
mov
inc
add
out
leave
stc
fucomi
mov
mov
and
add
inc
popa
leave
push
test
and
incb
dec
sbb
pop
insl
sbb
xchg
add
and
jle
push
mov
shrl
cwtl
sub
incl
les
shl
inc
push
test
addr16
mov
ret
insl
sbbb
or
jmp
mov
insl
scas
inc
loop
icebp
cmpsb
push
test
lcall
stc
cmp
pop
dec
addr16
ss
sbb
inc
imul
pusha
add
lcall
sub
lret
mov
mov
es
sti
decl
pop
sub
sbb
clc
sbb
adc
push
in
adc
add
mov
mov
xchg
sbb
mov
ds
lcall
inc
fbstp
xor
cli
lods
ret
or
mov
jg
mov
mov
test
xchg
in
dec
popf
nop
mov
push
sbb
loope
sar
insl
daa
xor
faddl
loop
sub
test
jne
or
outsl
sbb
jmp
nop
xor
lds
addr16
sub
js
mov
adc
stos
cmpsb
add
sub
insl
fcoml
shlb
lock
xlat
push
jg
je
ror
movsb
pop
jmp
sbb
test
pop
and
mov
fisttps
shll
test
fcmovbe
sti
stos
out
xchg
sbb
and
sbb
divl
sbb
jge
notb
dec
shl
inc
ljmp
enter
add
and
fsubl
inc
jmp
pop
mov
mov
es
cmpsl
jne
pop
sub
lods
push
cmpsb
test
dec
and
fildll
or
jbe
mov
or
inc
add
mov
out
push
sti
sbbb
mov
xchg
loop
test
movsl
les
mov
loope
xor
add
mov
xchg
data16
xchg
bound
mov
mov
add
test
inc
sbb
adc
sti
or
clc
mov
cwtl
clc
in
mov
loop
into
iret
push
sbb
add
jle
shll
mov
push
ss
pop
sub
mov
imul
jo
lock
push
cltd
sti
sbb
es
xchg
js
add
inc
jo
fs
add
mov
mov
jecxz
pop
loopne
cld
push
add
ret
clc
mov
cmp
mov
in
sub
bound
cmp
pop
mov
sbb
dec
or
cld
dec
lret
adc
inc
and
sub
dec
cmp
or
lock
call
add
mov
roll
xor
mov
data16
pop
stos
lcall
adc
out
mov
cmp
add
fbstp
cmp
je
sbbb
test
sub
mov
test
sub
sbb
inc
fstpl
pop
test
dec
xor
xor
push
jl
out
ja
adc
cwtl
xchg
push
pop
and
aas
pop
into
inc
incl
add
test
mov
les
out
or
das
pop
add
insb
sbb
fadd
sbbb
xor
mov
pop
xchg
cmp
adc
sbb
dec
cmp
add
dec
or
xchg
fwait
lea
cmc
aaa
je
leave
dec
lret
dec
sbb
inc
or
fisubl
add
and
aad
xchg
pusha
adc
jmp
xchg
pop
sub
jno
inc
xor
xor
or
push
incl
ss
push
arpl
repnz
js
sahf
pop
adc
push
add
fwait
scas
enter
mov
mov
int
mov
inc
test
cmpsl
xorl
mov
idiv
sarl
dec
cmp
popa
fimull
mov
add
rorb
cmc
mov
fidivs
mov
ja
jmp
adc
pop
xor
inc
jg
loopne
mov
push
lret
loopne
push
add
sub
xchg
or
lods
test
add
outsl
mov
inc
stos
iret
mov
mov
dec
sahf
std
mov
adc
jo
std
dec
dec
add
in
mov
push
in
ffree
or
cs
xchg
in
pushl
xor
js
lcall
into
or
ja
fisubrl
lods
fs
or
inc
xchg
scas
mov
cli
xchg
inc
test
outsl
add
nop
andl
clc
and
insb
sbb
jmp
xchg
cld
shll
mov
mov
ror
adc
sahf
ljmp
mov
push
lods
ds
lea
aam
mov
pop
sbbb
std
call
sbb
outsl
add
jae
adc
inc
adc
jno
xchg
subb
mov
popa
loopne
repz
sbb
push
mov
inc
xchg
push
decl
test
adc
sbb
int3
clc
mulb
stos
out
and
cmp
je
xchg
push
add
mov
cmc
pop
or
jmp
es
outsb
fcomp
jge
add
inc
loopne
jg
pushl
mov
mov
or
fwait
ret
cmp
dec
inc
test
push
jbe
std
lods
mov
xchg
fisubs
pop
xor
adc
adc
roll
icebp
push
adc
das
ss
pop
fdivrl
push
mov
push
mov
stc
add
popa
sub
cmp
inc
cld
pushl
dec
into
cld
rolb
xchg
add
pushf
loop
push
faddl
sub
pusha
out
rcl
lods
ljmp
xchg
push
mov
call
lea
cmpsb
jg
out
les
dec
iret
push
aam
or
cmc
xchg
xor
cwtl
pushf
movsl
jg
mov
jae
rcr
adc
repz
mull
fdivp
jmp
xchg
jne
popa
imul
lret
call
add
dec
mov
addr16
push
mov
fwait
and
jg
ds
jns
add
or
cmp
push
in
lcall
push
xor
sub
mov
jmp
lret
adc
dec
inc
pop
hlt
outsb
pop
pop
jmp
add
movsb
incl
add
jp
jnp,pn
pop
frstor
repnz
mov
dec
jnp
iret
adc
clc
push
lret
mov
mov
rcll
sarb
testb
cmp
je
ffreep
decl
mov
out
pop
fwait
jmp
jp
in
mov
imul
push
icebp
out
add
leave
push
mov
test
decl
fsubl
jecxz
adc
add
push
xchg
or
icebp
inc
lretw
add
dec
test
dec
hlt
mov
mov
je
lret
cmpsl
in
dec
test
out
sbb
ljmp
mov
in
loope
sarb
mov
push
dec
popf
pop
xchg
add
sbb
mov
mov
sar
mov
mov
in
cmp
test
sbb
sbb
loop
divb
jp
dec
cld
mov
pmaxub
stc
push
xor
loopne
dec
ss
mov
nop
push
adc
leave
push
or
pop
test
inc
adc
lock
lea
into
test
jo
cmp
movsb
das
cs
sahf
test
dec
push
mov
pop
push
je
adc
cli
cmp
or
adc
data16
add
test
jecxz
loop
sbb
lcall
jg
mov
lret
xor
mov
cmp
push
adc
add
mov
sub
imul
and
mov
or
dec
inc
ret
inc
cmc
mov
jns
loop
adc
aaa
xchg
add
mov
and
and
inc
std
push
adc
movsb
cmc
and
lcall
inc
dec
add
cmp
inc
jo
pop
bound
int
iret
cli
out
movsl
sub
stos
mov
pusha
aaa
push
shrl
mov
insl
xlat
out
ret
xchg
fmuls
data16
aas
dec
loop,pn
sub
arpl
ret
add
std
pop
add
cmp
pop
and
and
add
dec
push
decl
loopne
dec
psubsw
lods
sti
or
pushf
mov
mov
int
xchg
pop
inc
cmp
jae
mov
stc
mov
je
int
nop
js
ljmp
xchg
jne
daa
sub
push
dec
adc
cld
aad
nop
mov
cs
jge
aas
movsb
add
pushl
push
or
mov
aaa
aad
sarb
xchg
pop
mov
sbb
cli
mov
cmp
and
test
test
mov
sbb
ret
sar
ds
mov
call
out
push
imul
inc
lret
test
pop
or
inc
rcll
add
xchg
clc
lcall
jecxz
inc
pop
or
and
incl
xor
jo
or
inc
cld
xchg
dec
mov
sbb
add
cmpsb
inc
lea
sub
mov
inc
adc
mov
popa
adc
adc
pop
lea
fistps
push
inc
push
sub
clc
sub
in
lock
aaa
fmull
test
mov
lods
cli
xchg
scas
pop
cmp
or
push
shrl
sbb
and
sahf
dec
sbb
je
add
and
inc
testl
xor
mov
js
or
sbb
jg
sub
sub
inc
adc
in
sbb
xor
roll
rclb
adcl
jg
add
add
cmp
or
mov
sbb
sbb
idiv
jg
add
push
jne
dec
sub
mov
dec
mov
stc
mov
sbb
shl
les
push
jp
and
fimull
jae
outsb
mov
cli
xor
adc
adc
or
add
cmp
fmull
xor
sub
scas
insb
xchg
aam
xor
mov
out
ds
pop
hlt
jmp
out
mov
xor
aam
pushw
lea
pop
out
ljmp
comiss
adc
arpl
dec
lahf
xchg
xlat
mov
cmp
xchg
mov
push
push
lea
cmpsl
ds
ret
loop
jg
daa
dec
mov
inc
pop
adc
inc
add
orb
dec
sbbl
decl
adc
add
xchg
xchg
xorb
xor
mov
roll
sub
push
or
pusha
pop
mov
movsl
pop
dec
sar
xchg
mov
mov
shlb
xor
enter
cmp
xor
mov
addr16
nop
xchg
aam
jp
insb
sarl
inc
mov
push
rclb
mov
gs
fdivrp
jg
inc
nop
cmpsl
xchg
jb
jo
aad
and
xchg
nop
xchg
insb
mov
dec
loope
shl
jmp
xor
ljmp
adc
sbb
mov
pushf
xor
xchg
add
cmp
and
insl
add
and
cmc
emms
jae
jg
shll
into
into
iret
add
je
fsubrl
pop
inc
loopne
push
sub
jns
ljmp
fcoms
add
or
test
mov
jmp
icebp
push
mov
mov
int
pusha
jg
dec
jp
add
mov
in
cmc
dec
movlps
push
jg
push
js
or
test
mov
push
pushf
hlt
fwait
or
loop
xor
jle
aaa
sti
in
aaa
mov
add
pop
orb
push
or
xchg
mov
in
adc
or
fistps
cli
lcall
cmpl
movsb
jns
dec
push
mov
add
mov
hlt
add
out
and
fbstp
jmp
adc
cmpl
nop
test
sub
or
out
test
xor
fwait
or
outsl
fnstcw
pop
push
daa
out
repnz
decl
sbb
je
leave
cmp
lret
sbb
jbe
pushf
push
add
xchg
sub
sbb
mov
mov
jne
dec
pop
mov
lods
mov
jmp
data16
fldt
mov
and
pushf
int
or
pushfw
mov
idiv
pop
mov
xchg
push
and
sub
xor
faddl
xor
inc
jg
imul
mov
mov
sbb
sbb
mov
ja
push
fcoml
es
ljmp
xchg
inc
cli
xor
xor
lods
cmp
stc
mov
sub
inc
test
movsb
orb
loop
stc
sub
mov
jb
push
pop
push
push
jb
pusha
mov
dec
pop
fs
pop
into
int
add
bextr
jb
pop
adc
jb
iret
push
mov
dec
pushl
xchg
leave
rcll
xchg
icebp
sbb
push
pop
nop
add
push
push
out
or
scas
out
lret
mov
sub
test
popa
mov
bound
repnz
xchg
scas
xor
in
jle
pop
cmp
loope
mov
xchg
fs
xchg
or
imul
shlb
xchg
push
das
sar
mov
lahf
pushf
add
sbb
mov
sub
add
add
fstpt
ss
or
ja
pop
ljmp
and
jle
add
andb
or
outsb
jge
lcall
push
mov
mov
loopne
sub
or
or
clc
es
inc
adc
ljmp
sub
notb
add
pop
sbb
cmp
sbb
xor
pop
add
mov
cmp
cmc
jl
xchg
cmpsb
xor
sbb
xor
adc
mov
hlt
inc
cmp
bound
inc
inc
in
test
and
pop
outsl
test
lods
mov
in
xor
mov
pop
and
xor
and
mov
cli
inc
add
call
sub
lock
pop
in
adc
cld
and
stc
mov
pop
sub
and
mov
and
clc
push
pop
inc
push
jns
loopne
mov
lret
fcmovbe
add
fwait
loopne
cltd
fdivs
inc
dec
test
aam
outsl
adc
lea
pop
adc
mov
dec
pop
ret
or
mov
shrl
mov
cmc
fadds
ret
cmp
push
sub
js
repnz
and
mov
add
hlt
ja
stos
pop
or
shlb
inc
es
jg
push
pop
sbb
sbb
xchg
out
test
imul
fcoms
push
clc
sbb
imul
cmp
test
les
popa
aad
daa
rcl
jne
dec
outsb
push
iret
jecxz
cld
inc
and
push
inc
je
shll
mov
and
loopne
mov
xor
jg
cs
adc
icebp
dec
mov
pushf
push
fldcw
or
xorl
dec
std
xchg
dec
dec
xor
rolb
gs
icebp
call
int
test
and
inc
jb
sbb
cmp
xchg
dec
es
lret
stos
push
rolb
cmpsb
mov
jnp
cmp
mov
jo
repz
and
addb
add
xchg
push
push
jne
pop
push
lcall
jp
sub
mov
shlb
mov
inc
dec
addr16
adc
dec
shlb
jbe
mov
adc
das
je
push
and
xor
cmp
pushf
inc
sbb
mov
push
mov
in
cs
aas
jb
stos
pop
add
dec
mov
or
xor
add
mov
js
push
dec
add
inc
mov
pop
cs
xchg
jp
push
js
pop
or
dec
jo
outsb
rolb
adc
dec
mov
ljmp
mov
jnp
xchg
push
pusha
mov
pop
push
sbb
ffreep
stos
mov
cwtl
push
or
idiv
sub
icebp
adc
jae
mov
mov
nop
add
jecxz
and
rorb
clc
fcomps
clc
jg
mov
pop
cmp
and
mov
add
cld
aas
adc
movsb
or
mov
lcall
jl
jo
fwait
inc
inc
loop
cmpl
sbb
add
repz
jb
lea
aaa
test
mov
lds
lcall
push
decl
mov
stos
push
push
popa
and
inc
inc
call
xchg
out
cli
push
aam
out
xor
sub
int3
roll
cwtl
adc
mov
sbb
mov
xor
notb
out
push
mov
xor
pop
add
in
dec
test
xchg
add
loopne
rcll
sub
add
jne
fnsave
call
xor
pusha
mov
or
lock
outsl
sar
push
pop
pop
std
and
and
jo
cmp
fiadds
lods
jp
sbb
loopne
mov
out
jo
xor
jecxz
dec
push
and
push
sub
rcrb
shlb
add
imul
icebp
or
xlat
adc
cmc
in
or
mov
fs
jmp
push
xchg
hlt
or
xchg
push
push
or
mov
push
mov
bound
stos
int
xchg
aam
lods
enter
sarb
sbb
pop
fistpl
and
lret
dec
cmp
sbb
aaa
or
pushl
adcl
sub
imul
or
add
xchg
ret
jecxz
jl
xchg
cmp
dec
dec
inc
adc
push
cld
ja
ret
rclb
or
int
aam
paddd
mov
iret
push
pop
shlb
nop
pinsrw
fcomip
pop
and
push
push
push
xchg
add
adc
push
js
add
sub
push
add
ret
int
sub
jle
andl
jp
cmpsb
incb
loop
out
pop
scas
outsb
push
clc
fists
test
xchg
mov
outsb
xchg
incl
push
add
add
inc
fmuls
ss
adc
dec
or
jb
std
scas
sub
xor
hlt
imulb
imul
xor
cmp
sbb
cmpsl
pop
push
sbbb
lret
fildll
sbb
jg
push
repnz
xor
dec
adc
inc
ss
mov
lahf
and
inc
or
movsl
ljmp
mov
pushl
xchg
sub
pushl
cmpsb
and
cmp
lret
xor
stos
adc
shlb
pusha
and
js
int
adc
loope
insl
cld
cmp
jbe
cmpb
push
mov
pop
jle
gs
stos
movsl
push
cmc
inc
test
or
add
add
mov
test
mov
sar
ljmp
push
xchg
and
orb
jne
pop
pop
es
in
mov
mov
pop
or
sbb
pushl
int3
std
or
sub
mull
test
das
loope
add
lods
push
sbb
push
sub
or
add
or
or
xor
call
add
insb
call
insl
fnsave
adc
fcomip
dec
orb
mov
orl
pop
das
inc
inc
pop
inc
sar
call
or
iret
sub
mov
orps
stos
push
or
lcall
jb
fiadds
inc
gs
xchg
cmc
inc
push
nop
cmp
mov
and
cli
idivb
mov
fisttpll
xchg
inc
inc
adc
enter
push
sbb
mov
lret
sub
ljmp
lret
fstpt
rcrb
cmp
fisttps
xchg
and
mov
cmp
add
psubusb
in
add
jo
jp
in
idiv
incl
add
aam
insb
push
sbb
jecxz
les
and
xchg
rcr
in
icebp
ja
cli
push
jo
jo
ror
ljmp
cmpsb
mov
jle
out
inc
movl
lds
das
sarb
mov
aaa
mov
mov
cwtl
subl
push
es
fs
xchg
inc
call
xchg
jne
cmpsb
and
push
jg
pop
add
push
ljmp
fdivrp
call
or
test
pop
add
aad
insl
add
out
add
pop
jne
mov
fs
fsubrs
cmp
daa
push
jbe
pop
ss
in
push
add
or
jg
out
mov
adc
pop
xchg
pop
into
movsl
jno
adc
fistpll
dec
clc
mov
lcall
inc
hlt
pop
movsb
scas
incl
inc
out
xchg
ret
mov
jo
or
in
orl
mov
pop
lret
inc
push
mov
inc
pushf
pop
mov
and
je
leave
and
mov
lahf
pop
and
jmp
sbb
or
and
sub
out
js
or
push
lock
es
lock
pop
xchg
sbb
arpl
pushf
add
mov
mov
inc
fcompl
push
sub
and
sub
sbbb
mov
add
inc
stos
insb
frstor
loope
pop
mov
addb
xchg
loope
mov
cmp
pop
pop
push
dec
and
or
inc
dec
xorl
imul
dec
cld
jg
dec
sub
mov
rclb
ljmp
or
adc
in
xchg
pop
push
lret
fs
push
insl
bound
out
dec
jge
ja
stos
push
ss
cld
insl
adc
and
mov
xor
call
mov
or
inc
iret
mov
popl
loope
incl
nop
cwtl
jl
mov
adc
mov
int3
cmp
incb
repnz
sbb
repnz
sub
inc
clc
pop
inc
or
mov
fcoml
add
pop
cld
mov
mov
je
in
add
test
jge
sti
mov
andb
lahf
cli
scas
jmp
es
cwtl
pop
dec
pop
jl
mov
push
out
pop
cmp
outsl
rcrb
in
aam
mov
mov
xchg
movsb
mov
mov
filds
mov
fs
clc
cmc
fistpll
add
enter
jmp
push
xchg
sub
dec
mul
je
das
andb
mov
cltd
jb
add
sbb
mov
test
add
les
bound
inc
xor
pushf
dec
fistpll
cli
add
xchg
xchg
jns
movsb
shrl
cmpsb
cmpsl
add
fwait
jb
ficompl
aam
pop
sub
ud0
test
add
ljmp
xchg
mov
ds
ljmp
sbb
jae
icebp
ds
cmpb
lahf
inc
or
loopne
das
js
add
fndisi(8087
addr16
add
add
cwtl
cmovo
imul
jg
mov
lcall
inc
or
push
adc
movsl
sub
fisttps
inc
push
push
out
jne
movsb
testl
jg
pop
jb
cmp
xchg
push
lock
dec
decl
and
pop
jl
push
enter
outsb
jmp
adc
jmp
add
repz
jmp
mov
jge
nop
cld
mov
pop
ds
pop
das
mov
add
lcall
loopne
dec
xor
add
nop
in
and
dec
mov
aaa
std
ljmp
stos
xor
ljmp
sbb
shll
mov
cld
mov
xchg
cmp
das
xor
dec
pop
and
lods
xor
loope
inc
adcb
jns
mov
xchg
mov
test
pushl
out
arpl
cmp
add
jae
insl
pop
inc
xor
clc
out
or
iret
fistpll
sarl
lods
mov
fwait
xchg
les
stos
xchg
enter
mov
mov
jnp
xchg
add
jo
jl
xor
push
or
pop
pop
mov
mov
add
inc
mov
movsb
pop
lret
push
rclb
mov
push
push
dec
arpl
clc
rcrb
pusha
je
add
popf
jl
pop
push
arpl
ret
inc
adc
subb
pusha
adc
or
ljmp
add
sub
inc
or
sbb
or
push
mov
add
shrl
cwtl
addb
test
push
adc
lods
mov
leave
pop
hlt
inc
push
hlt
popf
movsl
ret
test
in
incl
add
or
push
aad
cmpsb
xchg
lea
mov
sub
adc
add
cmp
push
add
and
sub
cmp
lahf
cld
pushf
movsb
push
push
hlt
aam
pop
scas
jmpw
jbe
mov
pop
fdivs
push
mov
outsb
dec
sahf
fdivr
dec
or
xchg
icebp
sarb
loopne
xor
repnz
jecxz
cli
xor
rolb
outsl
dec
adc
movsb
fadds
lods
bound
aad
adc
mov
fcompl
fnstenv
add
push
fisubl
xor
xchg
inc
fs
decl
lcall
adc
or
cmp
push
add
or
je
enter
js
jle
test
mov
test
mov
cli
fucomip
mull
jmp
add
xor
pop
xor
or
mov
push
jne
fdivrl
ljmp
imul
in
cmp
lock
add
mov
cmpsb
inc
outsl
cmp
add
lds
xorb
jp
jg
and
imul
adc
sub
and
adc
adc
shlb
push
jo
sub
clc
popa
xchg
rolb
mov
pop
cwtl
and
sbb
adc
dec
les
es
pop
clc
sbb
pushl
incl
mov
lahf
pop
mov
nop
sub
push
inc
lods
roll
xor
icebp
and
mov
ljmp
into
jbe
sbb
fwait
push
xlat
shlb
pop
sbb
dec
rclb
shl
dec
jns
int3
shll
inc
sub
dec
xchg
inc
cltd
mov
ret
insb
pushf
insl
push
push
push
in
mov
add
mov
loopne
fcmove
lds
pop
dec
scas
outsl
or
mov
mov
adc
fisubrl
js
adc
ret
cltd
push
mov
adc
ja
cmp
sahf
fadds
mov
ss
shlb
rorb
mov
sarb
ljmp
js
leave
into
cmp
movsb
aad
mov
mov
add
js
pushl
shlb
push
sub
xor
fisubrs
add
inc
rcrb
push
dec
push
insb
mov
cld
mov
mov
jmp
cs
fwait
sub
movsb
jg
push
inc
jmp
mov
outsb
and
xchg
jmp
mov
roll
dec
outsl
lods
clc
imul
jae
fiadds
sbb
lods
push
int
push
cltd
jle
xor
jg
sbb
cld
pop
sbb
outsb
cmp
sbb
push
jg
pop
xor
nop
or
out
lods
add
or
fsubr
xchg
mov
js
dec
jecxz
push
inc
push
enter
xlat
ljmp
fimull
xlat
jecxz
push
jns
sarb
aam
cmpsl
into
adc
or
pop
jbe
addr16
cmp
push
xchg
dec
repnz
xchg
dec
test
mov
mov
lods
xchg
les
mov
fisubs
adc
xchg
lock
xlat
in
daa
jmp
fisttpl
ds
dec
loopne
inc
or
adc
jb
in
adc
pop
ffreep
mov
mov
xchg
ljmp
fmull
mov
push
cmp
jno
hlt
es
enter
adc
loopne
adc
mov
adc
dec
repnz
aas
mov
cmc
cs
jae
pop
in
push
test
xlat
cwtl
idivb
inc
add
push
sub
adc
jecxz
mov
cli
cmc
mov
and
add
orb
insl
jmp
mov
adc
push
cmp
sub
in
insl
xchg
jl
push
ljmp
inc
inc
push
jb
cmp
add
xor
incl
lret
ljmp
lds
insl
call
dec
inc
fcoms
test
cltd
or
xor
clc
push
hlt
pop
pop
and
ret
and
sbb
push
mov
sti
xchg
cmp
mov
gs
cld
dec
insb
add
adc
cli
push
into
sti
sbb
mov
cmp
xor
jg
loop
rcrl
pop
test
cmp
xchg
cmp
testb
leave
jp
add
icebp
mov
jo
test
and
add
rclb
pushf
mov
dec
std
xor
inc
daa
sbb
jne
add
jb
and
lods
mov
mov
mov
xor
imul
loopne
xchg
jg
fs
push
cmp
test
jbe
les
adc
adc
jmp
mov
mov
sub
decl
cmpsl
add
loope
lcall
insb
jmp
push
mov
add
push
add
ljmp
out
movb
out
mov
stos
ss
mov
loope
or
fs
push
lods
xchg
or
or
mov
clc
adc
mov
inc
sti
xor
scas
mov
mov
and
imul
xorl
mov
cmp
jg
fldt
ret
test
outsl
das
jo
das
loop
sub
dec
xchg
mov
nop
xor
push
jle
and
mov
xor
aam
mov
pushf
lcall
rolb
jne
xchg
es
pop
dec
mov
adc
add
mov
add
pop
xchg
pop
jno
aaa
cld
incl
xchg
cmc
repz
mov
stos
mov
in
cli
ds
fcomip
jmp
data16
aam
xor
pop
push
dec
push
pusha
cld
pop
hlt
bound
push
xchg
push
andl
movsb
jb
arpl
clc
pop
xor
and
push
mov
dec
add
sahf
aam
mov
dec
test
out
mov
dec
leave
push
add
das
stos
stos
insl
push
inc
je
xchg
popf
push
mov
clc
sub
inc
popf
mov
push
dec
cli
xor
andl
ret
pop
mov
mov
das
mov
stos
outsl
stos
or
ds
or
mov
in
xor
push
stos
pop
ljmp
and
test
rolb
xorb
dec
adc
add
leave
xrelease
lcall
insl
xor
xorl
add
dec
incl
sahf
test
scas
or
aam
push
sbb
and
sbb
shrb
mov
jge
test
pop
mov
mov
adc
push
inc
jne
out
cltd
leave
fcomps
jg
adc
mov
loop
daa
ret
sub
jle
xchg
mov
out
lahf
cmp
testl
cmp
sub
fdivl
lock
adc
pop
mov
mov
fcomip
xor
filds
das
mov
mov
xchg
sahf
inc
add
inc
in
ljmp
cli
or
inc
jl
scas
insb
xchg
add
loop
jns
cmpb
sub
or
mov
movsb
mov
xchg
call
decb
sbb
int
sbb
push
int
pop
cmc
sub
add
add
ja
mov
and
sbb
cmpsb
mov
pop
nop
leave
fldenv
xchg
mov
aam
js
movsl
add
shll
xor
adc
aaa
fimull
sarb
outsl
mov
and
dec
movsb
das
sub
push
fbstp
adc
outsb
je
sub
sub
pop
decl
add
stos
bound
dec
std
das
rclb
mov
inc
or
or
lds
addr16
test
pop
push
dec
jb
pop
test
repnz
mov
rcrb
sbb
jo
loopne
add
lock
incb
pushf
popa
inc
ja
cltd
pusha
or
mul
add
out
add
cmp
cmp
and
add
and
call
sub
ja
shrl
or
xchg
xchg
dec
or
dec
loope
cwtl
pop
sbb
jbe
cmpsl
aam
and
fwait
inc
ret
loop
mov
mov
test
lret
xor
and
aas
fstl
push
xchg
mov
sbb
sar
lcall
insb
add
mov
push
shrl
ret
mov
mov
pop
lods
and
ss
inc
call
movsb
enter
outsl
mov
das
les
clc
mov
sahf
or
adc
popa
or
decl
aas
xchg
jo
xor
inc
or
fwait
sbb
lock
data16
jno
add
inc
es
fildll
sbb
int3
int3
arpl
add
jmp
aas
mov
cmp
ljmp
mov
push
sbb
and
stos
jb
insb
jl
repnz
insb
xor
ljmp
jge
dec
adc
nop
sub
outsb
xor
pop
and
std
mov
mov
scas
cli
or
mov
dec
lret
push
xchg
addb
data16
mov
or
add
jle
push
adc
pusha
push
adc
pop
les
push
pop
or
rorb
mov
mov
cwtl
or
leave
lret
testb
dec
inc
int
in
hlt
out
add
bound
mov
xchg
pop
inc
cs
movlps
stos
inc
aas
add
into
out
inc
lock
xchg
push
jnp
std
sbb
scas
pop
insb
es
das
push
je
or
adc
sub
mov
pop
rorb
imul
sub
out
mov
loopne
or
push
xchg
cs
push
mov
mov
pop
and
inc
pop
jl
dec
and
xor
aam
xor
movsl
in
and
jg
dec
std
rclb
inc
roll
stc
pushl
push
jg
loopne
adc
pop
and
sbb
add
das
int3
clc
cwtl
out
xor
mov
sbb
xor
repnz
pop
adc
lods
cli
pop
cld
cwtl
inc
adc
fildl
hlt
cmp
idivb
dec
fwait
add
cmp
inc
adc
mov
mov
xlat
sbb
jne
scas
popa
lcall
adcl
inc
lret
ret
mov
push
xchg
outsb
mov
jmp
jmp
add
pusha
pop
push
pop
negl
shrl
cwtl
adc
xor
mov
mov
outsl
rcr
lret
sub
push
jmp
lret
or
fwait
mov
jmp
inc
jo
jo
dec
nop
cmp
and
or
jmp
test
inc
dec
aam
or
and
add
mov
in
xor
popa
xor
xchg
mov
hlt
jg
add
or
mov
sarb
cmc
cld
bound
sub
das
shrl
xchg
cwtl
addb
dec
cmpb
sbb
ds
outsl
inc
xchg
repnz
icebp
jae
sub
xchg
xchg
inc
mov
pop
xchg
paddd
cmpsl
inc
outsb
std
arpl
movl
pop
dec
mov
add
shrl
sbb
pop
mov
fisubrs
and
aad
sbb
imull
std
xor
cmpsl
es
fcmovu
insb
sbb
cli
push
jbe
dec
sarb
or
cwtl
mov
mov
adc
mov
lock
cmp
popf
sbb
xlat
jg
mov
movsb
pop
mov
xchg
mov
rclb
cs
and
sbb
push
scas
xorb
sbb
popa
xor
dec
sub
dec
ja
movb
adc
roll
cmpb
jle
mov
push
xor
cmp
hlt
es
scas
inc
in
sarb
inc
dec
inc
daa
pop
xchg
xor
iret
add
les
adc
enter
cmp
rolb
movsb
jge
dec
iret
jnp
jg
add
lret
jg
int
inc
pop
xchg
mov
push
mov
loope
or
mov
sbb
hlt
scas
scas
xchg
out
xor
push
scas
data16
out
sar
or
adc
jo
sbb
lock
jmp
decl
xor
jnp
and
jae
xor
scas
mov
clc
incl
test
int3
inc
cld
cmp
outsb
xchg
pop
sub
jl
xchg
mov
loope
xchg
xor
mov
pop
mov
cld
daa
addb
das
clc
bound
jne
shll
and
and
or
movsb
andps
mov
mov
sub
jmp
mov
inc
outsl
add
add
leave
mov
and
aas
xchg
push
adc
or
jno
fildl
ja
sbb
imul
movsb
ja
jl
mov
add
or
cmp
xchg
data16
fnstenv
mov
or
jne
xor
or
subb
lcall
popa
ret
pop
jne
cmp
jl
add
cmpb
dec
pop
mov
shlb
or
clc
and
sub
sbb
outsb
push
fs
adc
xchg
jo
mov
add
push
add
jg
sbbl
paddusb
lcall
adc
subl
pop
jl
sub
xchg
test
stos
sbb
pop
outsb
sahf
lahf
jp
pop
mov
xchg
mov
mov
cmc
shr
mov
xchg
add
cmpsl
lods
dec
add
xor
cli
movsl
adc
pop
shrb
inc
sub
cmp
addl
mov
out
mov
loope
fdivrl
push
mov
mov
ret
sub
cmpsl
repz
or
xchg
dec
fs
sbb
jle
push
fidivs
stos
jno
bound
dec
push
sub
xchg
sbb
fwait
jns
mov
dec
test
jbe
or
jge
dec
dec
clc
jmp
lods
add
dec
fmuls
adc
notb
push
inc
add
insb
in
add
imul
rol
adc
ret
andl
fnstsw
jb
in
daa
divb
ret
lcall
mov
push
les
fwait
push
shll
push
clc
mov
ljmp
add
fnop
pop
mov
adc
mov
sub
mov
jmp
xchg
or
pusha
rorl
jo
push
ja
outsl
and
mov
js
jle
lahf
lcall
inc
sub
inc
ljmp
push
push
mov
sub
rolb
push
mov
sbb
sub
and
sahf
inc
out
js
lcall
dec
mov
and
sbbb
xchg
push
subl
lods
dec
push
stos
imul
sbb
mov
mov
es
arpl
push
stos
adc
push
lds
dec
push
mov
lock
enter
bound
subl
adc
xorl
nop
sbb
pop
and
mov
js
mov
lock
dec
add
jb
stos
inc
lock
enter
adc
xlat
push
fs
adc
mov
xchg
incl
jne
jmp
push
adc
push
xlat
mov
outsl
jbe
mov
ljmp
xchg
aas
test
movsb
or
mov
inc
inc
lret
mov
ss
loopne
dec
movsb
fisubl
and
mov
and
sub
adc
mov
inc
orb
mov
in
adc
data16
call
xchg
mov
sbb
shll
xor
repnz
in
xchg
mov
test
or
inc
daa
arpl
adc
sbb
xchg
bound
fs
pop
aas
xchg
xor
mov
cltd
xchg
inc
pop
mov
jle
and
and
and
xor
push
inc
fildl
cld
sub
cmp
pop
inc
test
outsl
adc
xor
mov
and
lock
adc
sbb
ja
cmpb
cli
or
aam
mov
out
add
sub
cwtl
mov
jo
push
jmp
adc
pushf
lcall
decl
mov
cwtl
push
push
jge
jbe
leave
inc
rcl
jle
jne
jbe
fdivr
scas
xor
jnp
insl
insb
ret
sbb
or
rorl
and
xor
lret
out
sbb
mov
add
xor
adc
fldt
or
add
and
fs
cmpsl
pushf
jg
addb
xchg
icebp
pop
js
adc
loop
fdivl
ja
jne
jl
mov
mov
hlt
jmp
xor
test
and
mov
pop
ret
or
sub
mov
lock
jmp
dec
mov
imul
cs
outsl
andb
xor
pusha
add
aas
dec
jle
pop
sub
notb
adc
into
lcall
sbb
push
movsb
cmc
push
and
test
fisubrs
pop
mov
inc
inc
add
sbb
lock
xchg
push
loope
mov
xchg
clc
mov
ret
rorb
cmpsb
xchg
xor
js
jo
mov
ret
imul
ljmp
mov
movsl
mov
add
pushf
jmp
fs
stos
inc
xchg
sbb
push
pop
lods
cmp
or
ror
dec
mov
sbb
clc
mov
sub
add
orl
sbb
loop
xor
fldl
dec
and
add
pop
lret
inc
jmp
dec
aam
in
xchg
jp
cmc
sub
or
lcall
jle
mov
decl
inc
jno
adc
shrl
test
rorl
dec
cld
sub
bound
add
push
pop
push
or
adc
push
es
fists
daa
dec
lds
and
push
pop
hlt
ljmp
mov
add
push
dec
dec
test
xchg
test
adc
in
fists
or
inc
lods
xor
sbb
inc
adc
std
or
adc
or
xor
lods
shlb
xchg
sub
xlat
movsb
push
push
js
sbb
inc
pop
dec
ds
ljmp
int
jae
add
loop
sbb
rorb
jge
sub
scas
cmp
mov
subb
add
cmpsl
cwtl
sar
xchg
xlat
xchg
jbe
rep
or
bound
ds
or
jns
cld
and
insl
xchg
mov
jl
lock
dec
jbe
inc
lea
inc
mov
push
movsb
and
inc
sbb
jno
std
push
icebp
push
push
mov
sub
lret
addb
adc
imul
push
xor
or
sbb
mov
movsb
addl
jbe
mov
adc
inc
adc
in
cltd
xorl
fildl
adc
dec
sar
inc
icebp
dec
inc
mov
lcall
mov
push
jno
lahf
movsb
leave
dec
sarb
pop
push
paddb
fcomip
movl
jp
daa
cmp
sub
ret
mov
add
dec
xchg
cmp
mov
lahf
loope
adc
enter
nop
xchg
push
in
push
or
or
out
mov
pushl
mov
cmp
stos
hlt
rolb
sub
and
filds
mov
jl
add
mov
je
mov
ja
cmpsb
arpl
and
or
dec
jg
out
pushf
sbbl
mov
pushf
imul
lock
insb
lods
mov
dec
push
loope
nop
inc
push
add
pop
or
lock
sarl
add
gs
sub
scas
or
mov
into
jne
cmp
lcall
fwait
dec
mov
pusha
aad
cmp
test
sbb
cmpsb
add
inc
xchg
or
shll
cmpsl
hlt
push
jbe
cli
bound
adc
lahf
mov
xchg
test
jecxz
add
andb
mov
pop
negb
fildll
or
push
inc
push
or
inc
fisubrl
hlt
test
push
adc
lock
sub
rcrl
sbb
in
mov
mov
repnz
dec
inc
jno
xchg
sbb
and
and
dec
lock
leave
dec
sub
jb
aas
das
add
lock
mov
push
adc
push
cmpsb
xor
mov
fsts
gs
loopne
mov
add
loopne
or
shrb
sbb
mov
fcomps
or
int3
cmpsb
push
xchg
in
cmp
mov
cmp
or
fwait
mov
pop
cld
ljmp
std
test
or
jg
sti
test
lods
adc
es
out
push
inc
ds
pop
push
xchg
mov
ljmp
dec
int
sbb
rcrb
or
pop
sbb
add
int3
pop
out
and
sbb
jne
inc
push
pusha
movsb
rcrl
dec
push
jo
sub
ljmp
jnp
sbb
das
mov
sub
add
popa
fwait
ljmp
or
cmp
and
mov
dec
stos
jmp
mov
xchg
or
cmpsl
cs
jo
pop
sar
call
negb
lea
add
mov
hlt
and
pop
jno
xor
sub
repz
rolb
cltd
or
mov
je
data16
mov
and
pop
dec
xor
cmp
push
push
push
test
inc
stos
test
adc
and
ss
leave
add
jle
dec
and
xchg
stc
push
sbb
xchg
subl
insb
mov
or
aas
sub
or
xchg
shll
mov
jbe
mov
ljmp
mov
jle
pushf
add
outsb
and
iret
jle
push
add
add
in
add
fdivl
lcall
or
mov
fdivrs
clc
mov
push
loope
add
pop
xchg
cmovp
je
ljmp
ljmp
xor
or
sbb
adc
ljmp
jle
sbb
sahf
xchg
xchg
mov
stc
and
lret
incl
adc
je
clc
incl
cltd
xor
mov
or
aad
call
mov
push
movsb
addr16
sub
and
mov
cli
lcall
lock
dec
xchg
in
push
jmp
ds
ds
into
xchg
push
out
mov
imul
das
mov
push
xor
push
int3
cmpb
dec
loopne
mov
scas
dec
enter
mov
fcmovnu
popa
mov
or
andl
outsb
cli
aas
in
into
push
mov
lock
scas
call
xor
push
das
adc
inc
shrl
or
or
in
mov
outsb
ljmp
hlt
jg
arpl
sbb
or
push
mov
pop
movsb
stc
mov
add
lret
ljmp
in
insl
or
add
loope
shlb
cwtl
fildl
insb
cmpsl
jmp
scas
call
mov
enter
ljmp
sbb
and
and
inc
and
mov
inc
sbb
ret
scas
dec
pop
xor
aam
enter
cmp
int
push
das
inc
loopne
pop
mov
mov
stc
jb
sbb
push
addr16
test
sbb
inc
shrb
inc
adc
pop
rol
dec
in
jmp
mov
testb
add
push
and
jg
xor
sub
xchg
pop
mov
shll
mov
adc
dec
pop
push
out
or
pop
pop
test
sub
add
popf
or
cmp
sub
xchg
mov
or
jmp
sbb
xor
iret
in
lcall
in
loope
or
faddp
add
xchg
dec
and
cli
outsl
mov
test
rcrl
jg
sbb
sub
inc
ds
clc
call
in
inc
jmp
insb
cltd
rcrl
insl
inc
cld
or
pop
inc
or
pop
add
scas
jg
enter
dec
dec
xchg
mov
add
add
mov
ret
test
pop
sti
sbb
jecxz
jmp
lret
mov
sarl
outsb
outsb
sbb
aaa
into
ret
mov
xor
loop
jo
pop
cli
or
inc
lods
cmp
in
sahf
std
out
mov
pop
fsubl
push
adc
xchg
or
aaa
cwtl
and
fwait
cmp
inc
adc
adc
cwtl
inc
jmp
enter
sbb
push
mov
dec
add
xchg
test
add
out
mov
push
out
xor
pop
mov
inc
add
int3
lds
mov
dec
in
shlb
adc
add
daa
hlt
cmp
clc
loop
jp
xchg
cli
mov
adc
scas
inc
pusha
adc
adc
mov
call
shlb
loop
shlb
jp
bound
xchg
shl
fwait
add
add
mov
sti
dec
nop
lahf
adc
and
sub
cmp
sub
loop
or
insl
sub
mov
jecxz
loopne
nop
mov
inc
or
mov
xlat
adc
mov
mov
ja
xchg
mov
inc
jge
jg
push
pop
xchg
jae
cmp
mov
jmp
mov
jnp
mov
adc
jmp
lcall
data16
mov
popf
mov
mov
in
std
jns
lock
sub
add
add
scas
leave
pop
and
pop
aam
daa
cmp
arpl
shlb
sbbl
out
cli
jmp
inc
adc
mov
add
mov
push
bound
and
add
xchg
hlt
pusha
push
and
fdivl
sbb
je
cli
outsl
scas
repnz
stos
sahf
or
jmp
jns
test
div
jecxz
sub
lcall
and
and
add
mov
xchg
hlt
xlat
nop
cmp
cld
sub
xchg
inc
sbb
mov
mov
or
pushl
mov
test
pop
stos
sar
orl
adc
and
fcoms
add
jnp
cmpsb
mov
cmp
movups
mov
xchg
push
nop
jle
jle
roll
mov
inc
js
jns
fbld
insb
push
push
pop
lock
sbb
popf
jl
sub
jp
std
aaa
pushf
je
in
mov
mov
pop
jo
xor
nop
adc
div
scas
push
mov
xchg
loopne
sarb
add
push
cli
mov
test
cli
int3
lods
lahf
jg
inc
xchg
dec
popa
add
push
inc
test
inc
inc
popf
add
cld
push
pusha
call
mov
pop
imul
fnstsw
out
or
pop
in
nop
decb
cs
and
iret
mov
aaa
inc
mov
xor
es
xchg
pand
mov
js
icebp
mov
daa
jae
xor
pusha
fcomip
jg
movsb
pusha
push
cltd
cmp
lret
shrl
mov
or
sahf
loope
clc
push
cmp
ror
mov
jmp
js
sbb
jp
lock
jo
pusha
cld
dec
shlb
sub
add
pop
lods
lods
mov
fwait
lret
mov
adc
ret
popf
xlat
sbb
jmp
loopne
xor
out
push
int3
jno
add
jg
mov
cmp
mov
inc
ret
test
enter
es
lcall
add
cmpsl
hlt
sbb
outsb
scas
add
and
mov
lea
shlb
or
fisubrs
iret
and
stos
std
mov
cs
mov
add
xor
mov
mov
pop
cmpsl
dec
fmul
in
sub
fwait
push
lret
movsb
fdiv
ja
xor
aam
xchg
mov
mov
and
adc
icebp
stos
subl
addb
mov
std
mov
push
pusha
jge
inc
jmp
mov
cwtl
add
push
inc
mov
clc
mov
ret
clc
add
loope
adc
stos
pop
add
pop
addb
mov
mov
add
ja
sar
loopne
inc
add
xor
pusha
lods
icebp
fnstenv
rol
addb
or
sub
dec
mov
repnz
stos
jecxz
aam
fbld
ljmp
sub
cmpsl
pushl
inc
push
add
loope
xor
ror
std
push
sti
jno
pop
or
setb
test
int3
cmp
ja
xor
rorb
mov
mov
cmp
int3
addl
fsubl
mov
in
push
xchg
clc
rolb
out
dec
sub
inc
xchg
pop
push
sbb
fstpl
mov
test
add
jmp
jmp
or
mov
xor
add
xor
push
xchg
mov
mov
and
jl
cmpb
adc
pop
jb
sub
adc
movsl
fs
and
jbe
int
xor
xor
adc
pop
decl
ds
in
push
pop
repnz
fsubr
and
sbb
adc
push
jmp
scas
inc
sbb
push
xchg
and
int
pop
ret
in
push
inc
adc
jp
scas
pop
jae
jle
dec
cld
ficoml
dec
add
xchg
sub
mov
or
shrb
mov
shlb
leave
stos
and
inc
push
cmpsb
jb
enter
or
push
rcrl
mov
sub
dec
aas
mov
cmp
add
xchg
or
push
test
pop
call
inc
cwtl
pop
lcall
cmc
aaa
mov
daa
xchg
dec
lock
push
jno
adc
dec
sar
outsb
adc
in
pusha
or
repz
test
add
add
xor
add
push
adc
mov
mov
sbb
jmp
out
insl
sahf
and
js
or
jle
roll
push
xchg
fs
mov
aaa
std
fisttps
inc
xchg
rcrl
mov
mov
cwtl
sub
adcb
scas
addb
cmp
shrb
pop
cmp
pop
mov
pusha
das
mov
les
mov
mov
push
lods
jmp
xor
and
push
mov
push
push
push
subb
cli
adc
call
and
fsubrs
pusha
stos
add
shlb
adc
repnz
or
inc
pop
push
loope
rol
pop
or
dec
xchg
pop
js
imul
add
cmc
add
pop
adc
shrb
ljmp
jl
and
add
mov
fsubr
cmp
push
lea
add
add
ds
ss
push
lcall
inc
xchg
mov
jle
mov
inc
sar
std
in
cmpsb
xchg
sbb
popa
or
incl
fiadds
pop
add
movsb
lods
mov
xchg
push
aas
sbb
pop
jg
lds
pop
add
sbb
xchg
or
insb
ljmp
loopne
jl
lret
dec
pop
mov
xchg
push
mov
cmp
lods
test
xchg
pop
fisttpll
sbb
clc
mov
stos
push
cltd
mov
lahf
push
push
test
and
xchg
mov
clc
push
insl
push
jl
aad
xor
xor
jbe
into
loopne
or
ficoms
cwtl
push
jl
mov
jl
push
pop
fcmovnu
das
mov
xchg
mov
pop
push
cmp
jmp
or
xchg
xor
inc
or
mov
scas
mov
popa
ret
dec
arpl
fs
negl
add
inc
xor
sarl
pop
jbe
xchg
out
gs
data16
hlt
shr
dec
dec
mov
xlat
xchg
cs
mov
int
sahf
popl
push
das
insb
clc
inc
ljmp
cli
mov
repz
inc
loop
jmp
imul
cmp
mov
push
and
out
out
in
popa
push
jg
pop
or
out
call
jno
addr16
popa
dec
xor
cmpsl
sbbl
push
push
inc
and
out
or
cwtl
add
sahf
push
out
cs
je
insl
loopne
xlat
cmpsl
xor
shll
mov
xor
fdivl
sub
jp
loope
ret
xor
iret
fadds
push
cmpsb
sub
lods
cli
jmp
sub
cs
lock
inc
add
ret
pop
sarb
outsl
sub
inc
in
out
inc
mov
std
jmp
rclb
outsb
and
mov
ret
ret
imul
push
cmp
outsl
int3
pusha
fdivrl
cmp
iret
out
adc
sub
sbb
ret
jg
xor
je
bnd
into
cmp
push
idiv
or
pop
inc
mov
aam
mov
dec
ret
add
bound
adc
xchg
test
mov
cmp
stc
or
stos
mov
inc
aam
mov
std
in
sbb
inc
stos
sti
or
testb
lods
push
imul
pop
push
aas
and
mov
insb
addr16
das
rcl
hlt
jmp
add
pop
sbb
jg
xchg
jecxz
add
add
mov
clc
lcall
roll
rorl
popa
stc
mov
les
aaa
cltd
cmp
popa
and
mov
out
mov
and
and
outsb
in
fmuls
adc
movsl
mov
testb
std
scas
xchg
adc
arpl
call
jns
fsubrl
mov
sub
push
mov
lock
inc
jo
iret
sbb
adc
inc
mov
das
inc
daa
ljmp
xchg
add
dec
into
subl
rorl
fstps
inc
aam
adc
jno
int
add
lcall
adcl
shlb
je
mov
xchg
lock
imul
jecxz
andl
push
push
pop
dec
daa
adc
clc
xor
aad
push
pop
sarb
loop,pn
movsb
in
adc
jg
push
mov
or
cmpsb
scas
aaa
ret
sub
and
pop
and
mov
mov
cld
ljmp
cmp
cs
jle
pop
icebp
jg
rcrb
pop
in
mov
jae
pushf
dec
incl
inc
shrb
mov
mov
pop
lcall
cltd
in
dec
shll
addr16
sbbb
inc
and
xchg
ds
ljmp
mov
push
cmp
test
and
icebp
lcall
or
cmp
mov
push
aaa
pop
ret
cmp
shll
mov
mov
inc
and
and
movsb
inc
inc
xlat
pop
sub
fidivl
stc
mov
cli
filds
ss
mov
out
cmp
jecxz
adc
cmc
orl
sub
mov
and
cld
add
sbb
and
inc
adc
dec
repz
fisttpll
add
imul
seto
pop
pop
lds
pop
mov
ss
das
cli
stos
sub
scas
sbb
sahf
xchg
jne
push
movsb
cmc
shrl
cmp
adc
mov
xchg
jo
and
dec
pushf
aas
sti
ret
xchg
fwait
js
fidivrl
mov
xor
or
cli
stos
dec
and
stc
subl
push
ss
es
adc
adc
je
dec
or
pop
aas
add
mov
test
shrb
sbb
setg
mov
hlt
int3
mov
push
cmp
mov
push
loop
sbb
stc
outsl
stos
jno
loopne
pop
jecxz
mov
push
decl
jge
pop
push
gs
dec
and
pop
dec
jecxz
mov
icebp
push
add
decl
lock
mov
fsub
mov
xchg
push
mov
es
pcmpgtb
pop
stos
movsb
or
xchg
out
mov
psubsb
push
dec
dec
outsl
cmp
cmp
aas
lahf
xor
jp
in
addr16
push
insl
shrb
scas
pop
add
pop
lret
out
aam
dec
in
and
add
adc
cld
mov
ljmp
pop
or
rcr
cwtl
push
pop
inc
push
jg
sub
jns
out
into
bound
ss
jg
pop
lds
fldt
push
mov
pusha
inc
clc
pusha
cmpsl
xor
das
push
dec
push
int
ja
mov
cs
and
jl
popa
inc
out
test
xchg
stc
inc
jmp
mov
cmp
pop
ret
js
sarb
or
pop
subb
ljmp
xchg
inc
dec
dec
add
pop
movq
mull
pop
shll
inc
popa
xchg
out
push
repz
add
gs
test
xchg
inc
dec
dec
jle
inc
xchg
test
mov
movsl
xchg
mov
out
adcb
and
mov
and
sub
add
sti
xchg
add
mov
es
mov
sahf
sub
aas
dec
ja
pop
pushl
iret
std
push
push
rorb
sbb
mov
push
sbb
mov
cs
jecxz
aad
or
mov
jo
dec
cwtl
mov
mov
inc
mov
cmp
or
das
ljmp
out
or
ret
push
push
sbb
orl
andb
cwtl
movsb
fsubrs
roll
repz
fwait
aam
xchg
xchg
pop
push
cs
ljmp
dec
les
incb
pop
inc
lods
pushl
mov
mov
push
xchg
mov
andb
sub
test
cmc
push
mov
jl
out
push
enter
cmp
outsb
mov
dec
loopne
fisttps
inc
adc
fcom
dec
mov
sti
lds
or
cmp
flds
jle
and
rcrb
pusha
sub
lahf
mov
dec
bnd
ds
pop
std
sbb
or
cmc
dec
fldcw
lret
imul
out
jne
mov
bound
add
xchg
jbe
add
cmp
mov
xor
push
fs
mov
inc
stc
push
outsb
adc
cld
out
cmpsl
nop
bound
std
jg
add
addr16
sbb
and
mov
push
adc
xchg
push
xchg
add
jb
pop
add
push
outsb
int3
adc
je
in
das
push
shrl
inc
mov
test
mov
cmp
pop
icebp
or
xchg
push
xchg
cmpsb
jp
lods
cmp
inc
pop
cmc
mov
ljmp
and
mov
shlb
jl
aas
faddl
pop
out
and
fldl
outsl
inc
inc
icebp
incl
sahf
dec
sti
das
fs
fbstp
fwait
mov
push
xchg
cmpsl
sbb
lds
jo
movsb
inc
xor
dec
push
xor
and
push
and
les
imul
clc
and
cli
pop
das
aam
je
clc
cmpsl
jg
cmp
pop
inc
jns
in
mov
add
flds
and
xchg
sahf
mov
nop
decb
movsl
mov
jg
sbbb
mov
int
in
lcall
or
pop
stc
jnp
dec
addl
push
sub
inc
add
rcrb
dec
loopne
mov
jp
fwait
cmp
rorb
jmp
inc
loop
or
add
ja
lret
jb
or
jl
push
enter
dec
repnz
insl
xchg
iret
aaa
jne
mov
out
fwait
and
popa
and
cs
test
add
inc
mov
std
inc
shl
cmp
sti
imul
sahf
cwtl
sub
loopne
fcoml
sbb
sbb
leave
out
jbe
xor
add
lea
pop
sub
clc
cmp
mov
and
mov
pop
push
rolb
mov
rol
loopne
adc
cltd
pop
pop
push
inc
js
ficoms
ds
leave
test
push
inc
push
xchg
pop
push
jmp
fnsave
mov
insl
enter
push
ja
sbb
inc
fs
pop
enter
insl
add
inc
mov
ret
push
jno
int
push
fimuls
pusha
js
xchg
jmp
mov
rol
add
cli
push
push
movups
stos
adc
lcall
push
fwait
movsb
and
jp
and
push
push
sub
xor
xorl
ds
iret
jmp
jp
pop
out
lcall
sbb
or
std
push
in
enter
jle
mov
in
inc
clc
jge
roll
xor
mov
data16
lods
orl
mov
decl
jb
inc
xor
in
push
jecxz
js
adc
popa
adc
cmc
test
fsubrs
lods
aaa
cmp
dec
ja
add
mulb
inc
bound
pop
sub
cmp
inc
xchg
ljmp
fidivrs
add
push
cmove
clc
dec
imull
cli
mov
mov
jg
in
mov
xor
test
jle
push
mov
or
in
fists
push
fstpl
mov
or
outsl
cli
mov
jae
out
inc
ds
push
adc
inc
push
cmp
add
cmpsl
push
js
xor
das
clc
hlt
jne
add
cmc
outsb
cwtl
das
push
or
jmp
xchg
and
add
add
mov
lds
shlb
pushf
pusha
push
jecxz
addb
lock
add
dec
rcrb
push
dec
loop
arpl
pop
pop
incb
xor
leave
imul
into
mov
sahf
nop
mov
add
andb
outsb
stc
adc
adc
sbb
mov
jo
stos
cmp
sub
cld
cwtl
loopne
adc
cld
test
decl
adc
imul
aad
neg
xor
or
fcmovbe
inc
movsl
mov
or
pop
pop
ret
cmp
pop
add
pop
stos
mov
xchg
jbe
leave
cmp
sub
les
insb
lahf
outsb
std
pop
dec
roll
or
testb
mov
mov
es
fistl
out
dec
jmp
mov
inc
pop
push
in
test
fldcw
loop
push
outsl
decl
gs
xchg
stc
arpl
adc
push
adc
out
xor
pushf
push
loope
xor
sub
bound
or
into
sar
fistpll
leave
pop
test
aas
adc
fs
outsb
jecxz
dec
adc
lds
arpl
add
call
xor
sbb
cli
lret
mov
mov
or
adc
push
push
and
pop
iret
inc
mov
aas
and
sub
mov
sub
mov
ret
jl
aas
aam
aad
pop
aas
into
mov
arpl
inc
pop
aaa
iret
or
das
adc
popa
inc
sbb
lock
jg
and
and
mulb
std
sub
in
loope
mov
jo
adcl
xchg
test
lods
jnp
adcl
pop
sub
ja
xchg
mov
loopne
mov
sub
xchg
shlb
pop
and
test
popa
or
das
pushf
jmp
shlb
sbb
fs
or
lea
adc
push
cmp
movb
in
adc
adc
jbe
test
cwtl
mov
or
mov
rcrl
loop
inc
xchg
clc
mov
push
loop
inc
push
lock
xchg
cmpsl
push
addr16
pop
cmpsb
scas
mov
inc
mov
mov
cli
aaa
inc
cli
mov
xchg
mov
mov
mov
mov
cli
xchg
hlt
sub
xchg
popf
push
xchg
push
inc
mov
sbb
and
sti
lcall
dec
movsb
or
or
adcb
ss
int3
push
sbb
cmpl
loope
je
sub
pushl
sub
add
mov
dec
jne
icebp
mov
call
or
cwtl
or
call
pshufw
cmp
addps
push
hlt
mov
inc
sub
test
pop
les
cltd
inc
jmp
adc
rcr
loopne
cli
jg
scas
cld
or
xor
sub
movsl
andl
loope
or
in
das
nop
test
mov
lret
mov
hlt
cmpsb
popf
sub
outsl
movsl
pop
pushl
sbb
jo
cmp
es
mov
mov
push
jg
push
mov
ss
xor
add
aam
sub
ljmp
inc
lea
xchg
loopne
sbbl
jg
xlat
scas
xor
mov
pop
or
or
cli
xchg
dec
rorb
mov
decl
lock
xor
aas
pop
frstor
jno
and
xchg
jecxz
push
or
inc
mov
fadd
mov
out
xor
mov
cmp
jp
sbb
mov
sub
lcall
into
mov
inc
inc
mov
mov
adc
shlb
ret
adc
cmpsl
in
sarb
pop
adc
mov
push
out
js
dec
aas
in
add
push
pusha
fimuls
in
cli
std
pop
test
fldenv
popa
jp
inc
loope
insb
sbb
testb
sub
inc
es
incl
jb
sbb
adc
cwtl
fistl
lcall
sub
in
cmpsb
stos
iret
or
push
dec
mov
xchg
adc
or
push
lods
test
fdiv
ret
jno
mov
dec
jns
add
test
adc
or
push
outsl
ret
andl
xor
pushf
lock
sub
int
inc
cmc
loope
xor
sarl
jo
push
xor
sub
sub
cli
andl
push
push
adc
es
enter
xchg
cmp
jecxz
sbb
mov
adc
cmp
mov
int3
loopne
adc
fldenv
add
add
jno
push
mov
jbe
dec
aas
test
or
pusha
dec
inc
push
mov
incb
les
es
mov
das
js
fcomps
xchg
sub
mul
push
arpl
std
cmp
fsubrl
movb
add
push
mov
lcall
adc
outsb
ss
push
xchg
xor
push
rol
dec
pop
xor
adc
rorl
push
fistpll
jmp
and
daa
cmpsl
xor
das
mov
sbb
sti
and
xor
je
adc
mov
mov
in
rcrl
xor
stos
mov
jge
and
loopne
adc
cmp
dec
ret
test
pop
sbb
mov
mov
addr16
clc
pop
dec
movsl
sbb
in
call
shrb
xor
mov
dec
into
daa
sub
in
add
dec
add
imul
xchg
into
rcll
add
cmpsb
mov
rorl
cmp
jge
loop
push
sahf
xor
push
inc
loopne
mov
xchg
int3
adc
les
mov
ljmp
cmp
std
fldcw
push
inc
mov
outsl
ret
push
out
iret
xor
xorb
mov
mov
mov
in
das
xchg
in
push
pusha
xlat
xor
inc
push
xchg
fisubrs
xor
out
pop
adc
ds
jns
jle
or
std
sbb
test
dec
mov
xor
mov
out
pop
jno
jae
xor
pop
pop
ss
pop
lea
std
jmp
std
bnd
int
andl
cli
add
ds
mov
xor
mov
push
call
and
lea
repnz
mov
adc
in
pop
cld
pop
xchg
aas
int
iret
cmc
and
out
cmpsl
je
mov
push
mov
or
int
cli
ret
aas
add
xchg
iret
xor
add
xchg
lea
mov
mov
and
gs
push
lods
push
loope
mov
icebp
fucomip
add
pop
cmp
and
lods
mov
cmc
jmp
andl
rorb
mov
jp
inc
mov
mov
das
jp
or
cli
push
dec
lret
sbb
adc
adc
cld
jb
outsb
sub
jge
jp
out
mov
out
sbb
lret
out
outsl
push
inc
and
clc
mulb
leave
pop
cmp
loope,pn
mov
xor
pop
je
jle
in
cmp
neg
popf
subl
call
rcl
out
ret
push
repnz
rcrb
js
and
adc
and
movsb
sub
adc
enter
add
imul
std
mov
adc
xchg
inc
gs
fistpll
lahf
int
lods
lods
pop
xor
mov
push
lods
ja
notl
mov
lcall
and
xor
fbstp
xchg
sbb
andb
or
push
ss
or
std
fcoms
mov
xor
sub
aam
sahf
and
mov
mov
subb
cmpsb
pop
sbbb
lock
or
test
sbb
mov
xor
hlt
stos
xor
leave
ja
lea
clc
das
xchg
cltd
mov
dec
jle
xor
inc
xor
mov
jg
jbe
insb
sbb
hlt
out
lcall
inc
aas
jp
sbb
and
movntps
cli
fdivp
push
jle
decl
jno
sub
cmpsb
cmp
push
inc
xorl
xchg
push
add
int
add
push
cmp
pop
hlt
sbb
add
je
xor
pop
leave
mov
orb
pop
push
clc
xlat
jp
xor
incl
in
xor
mov
roll
mov
add
jns
mov
jle
cli
lcall
sbb
flds
and
mov
je
in
push
movsb
add
adc
ljmp
loop
call
and
idiv
pop
loopne
mov
push
cmpsl
mov
icebp
std
xchg
or
lea
mov
xor
movsl
sub
add
mov
gs
jbe
push
idivb
test
aas
leave
sub
ja
sbb
sti
mov
adc
data16
popa
rorb
xchg
inc
aaa
pop
add
push
cld
jg
pop
inc
sbb
inc
or
jne
adc
testl
jle
xchg
add
sub
push
mov
add
cld
enter
sbb
or
mov
loope
outsb
sub
ljmp
test
out
cli
adc
jp
adc
mov
test
test
pop
sbb
add
xor
mov
jl
fcmovnbe
or
int
pop
adc
test
mov
add
or
sahf
cli
lcall
insl
cwtl
lock
mov
fidivs
xor
push
sahf
add
loop
rolb
cmp
movsb
stos
pop
outsb
xchg
mov
mov
inc
xchg
add
pop
arpl
cmovno
dec
insb
add
mov
inc
or
xor
sbb
pop
inc
notb
push
push
std
adc
pusha
pop
adc
rcr
mov
rcrl
rolb
jae
pop
pop
mov
xchg
out
shr
lahf
outsl
outsl
rorb
push
sti
insb
movsl
xchg
std
test
movsb
out
lret
test
loope
sub
fadds
xchg
movsb
hlt
or
mov
cmpsb
fs
push
cmp
decl
clc
lods
movsb
mov
out
jb
and
and
adcb
mov
pop
pop
pop
test
jp
fnstenv
out
or
xor
push
jg
subb
fdivr
fsts
stos
pop
add
test
bound
add
ss
sarb
clc
push
in
mov
adc
outsb
sti
sbb
in
rcl
push
subb
jmp
rcrb
push
orb
orl
ror
pop
idiv
lcall
ss
cmpsl
xchg
cmc
mov
js
ret
push
or
inc
xchg
and
bound
adc
mulb
adcb
mov
sbb
add
ret
mov
adc
subb
jmp
lea
adc
inc
stos
mov
xchg
sub
in
sub
mov
sbb
jbe
sub
mov
hlt
adc
or
jl
or
les
dec
repz
les
or
mov
pop
mov
xchg
add
clc
and
fwait
nop
push
ds
add
stos
mov
sbb
clc
dec
pop
es
cmp
mov
call
or
mov
or
sub
or
or
pop
xor
push
loopne
out
push
hlt
jmp
dec
dec
pop
in
mov
mov
call
pop
cld
mov
jns
cmp
test
cmp
pop
test
mov
popf
inc
mov
inc
shrb
enter
dec
imul
push
add
mov
scas
insb
cmp
jl
cwtl
mov
in
or
fwait
and
xlat
and
bound
add
lcall
or
fbstp
xor
lcall
dec
aas
cmpsb
sbb
es
aas
orb
mov
jecxz
and
std
mov
mov
enter
mov
inc
cmp
pop
xchg
in
jnp
mov
mov
fwait
call
int3
sbb
add
testb
aaa
jne
and
test
add
cli
push
test
or
mov
mov
push
mov
xchg
lcall
mov
jno
test
das
aam
inc
bnd
outsb
xor
int3
mov
xchg
mov
imul
inc
ljmp
hlt
dec
cmp
js
lods
push
ja
push
xor
cmpsl
loope
ljmp
fisttps
mov
loope
clc
jg
mov
pop
or
and
loop
fisubrs
call
mov
pusha
pop
xchg
or
xchg
aaa
fdivl
push
sub
mov
jecxz
mov
fbstp
cld
out
lcall
mov
xchg
pop
sub
imul
rcll
incl
cmp
cwtl
cwtl
push
pop
sub
cmc
xchg
cli
nop
and
in
inc
sbb
pop
inc
push
mov
iret
cld
jp
outsl
clc
cmc
cmp
mov
inc
loop
cmp
or
outsb
lcall
mov
es
out
das
enter
or
jnp
cmpsb
mov
pop
and
pop
push
sub
rolb
nop
mov
inc
xor
pop
rcr
xor
imulb
or
shll
sbb
call
test
test
and
incl
stos
jmp
incb
mov
mov
mov
sbb
fldl
mov
push
or
loop
pop
mov
xchg
pop
sarb
repnz
cltd
sarb
and
loope
nop
pop
push
fstpt
or
decb
mov
inc
xchg
sbb
in
in
xchg
pop
xchg
sbb
mov
sub
add
dec
arpl
xor
push
push
clc
call
fldt
xchg
pop
mov
decl
mov
lcall
mov
mov
mov
jns
adc
call
and
adc
les
add
fisubrs
fdivs
pop
sub
stos
divb
test
mov
cld
stos
mov
repz
adc
dec
jmp
mov
adc
add
andl
sbb
push
sahf
jecxz
pop
ss
adc
das
movsb
dec
in
xchg
xor
mov
jbe
fstps
mov
push
jmp
or
adc
imul
fcmovnu
mov
rclb
in
xor
lds
sbb
in
inc
xor
jmp
mov
adc
stc
jmp
dec
mov
int3
pop
push
add
inc
and
jo
and
or
pushl
repz
movsb
lret
add
push
fstpt
pop
jmp
and
mov
stos
lcall
add
mov
insb
test
sbb
leave
je
test
faddl
into
and
xchg
xchg
inc
add
mov
inc
mov
jo
adc
xchg
add
pop
or
enter
sti
lea
pushf
and
arpl
scas
stc
cmpsl
add
mov
pop
cld
xor
mov
sahf
pop
fisubs
test
hlt
push
mov
inc
push
ret
pusha
popa
sbb
sub
ljmp
mov
sbb
pop
jno
dec
and
fistl
call
jg
fstl
fisttps
dec
aam
rcrb
dec
out
and
push
inc
push
insb
dec
out
or
jg
and
dec
inc
imul
in
jg
adc
mov
adc
xchg
pop
mov
mov
loope
pop
loopne
je
add
fdivrl
sti
je
add
pop
cmpsb
mov
in
cli
mov
fs
adc
jnp
xor
mov
fcompl
mov
inc
xlat
sub
inc
inc
xchg
je
cld
jecxz
pop
test
sar
add
xorb
aaa
pop
push
rorb
insl
sub
xor
mov
daa
add
jmp
lds
inc
mov
push
mov
pushf
roll
and
clc
outsl
cmpsb
push
mov
xchg
and
mov
test
mov
lds
xchg
aad
mov
and
xchg
adc
inc
push
stos
and
cmpsb
hlt
dec
sub
mov
xchg
mov
incl
sbb
enter
imul
jo
pop
and
jnp
mov
fbld
jo
sarb
push
cmpb
loopne
mov
negb
mov
addb
mov
or
aas
es
mov
ljmp
inc
inc
mov
push
leave
std
ret
push
jmp
adc
cltd
cli
sbb
pop
and
daa
inc
lea
fisttpl
or
outsl
add
insb
mov
mov
rol
loopne
or
mov
add
jmp
test
add
mov
mov
outsl
and
add
ds
out
cli
or
clc
sbb
add
jb
sub
shrl
and
scas
data16
push
mov
sub
incl
aam
xchg
xchg
test
mov
cmc
fdivr
pop
inc
jge
cwtl
inc
xchg
mov
or
loope
xor
les
pop
adc
rcll
add
mov
cmp
lock
mov
cmpsb
mov
push
mov
jnp
pop
xchg
adc
rorb
in
push
push
icebp
xchg
orb
inc
loop,pn
fcomps
jno
or
and
sahf
loopne
xchg
inc
std
hlt
jg
jmp
in
add
mov
pop
or
es
repnz
das
xor
mov
xlat
inc
or
outsb
mov
or
sahf
cmp
jmp
mov
fstl
xchg
pop
std
jmp
add
arpl
addps
out
cmp
push
jbe,pn
scas
pop
mov
test
sub
jo
icebp
push
dec
lcall
adc
add
sub
lods
add
stc
insl
cmp
xchg
mov
call
subl
imul
int3
lea
mov
cmp
sbb
xchg
sbbl
out
dec
cli
scas
mov
sub
je
call
dec
push
mov
sub
stos
nop
pop
scas
dec
mov
hlt
mov
pop
scas
pop
sub
xchg
js
mov
jge
js
loope
inc
scas
pop
lahf
mov
pushf
xchg
stos
cmc
jnp
push
adc
aaa
shll
sbb
push
xorl
ljmp
imull
int
ret
jmp
scas
inc
scas
out
xchg
outsl
push
movsb
rorb
repnz
js
dec
std
push
add
and
aam
push
cli
sbb
mov
mov
dec
out
cmp
lods
cmpsb
cs
das
xor
adc
sub
inc
or
inc
dec
idiv
inc
xlat
cmc
es
sub
sbb
cmpsb
mov
sub
dec
cwtl
adc
je
cwtl
mov
pop
dec
and
dec
cmc
push
mov
int3
mov
sbb
loope
or
push
add
pop
test
incb
cmp
lcall
mov
jl
movsl
in
aad
fistpl
mov
inc
dec
andl
cmp
mov
les
xchg
jp
cli
jg
jle
mov
add
ret
add
or
pop
shlb
scas
ss
mov
imul
jns
adc
inc
daa
popf
mov
xchg
mov
testl
add
clc
dec
mov
jecxz
push
pop
std
insb
test
and
pop
xchg
sbb
xor
lcall
repnz
inc
idivb
out
cli
fwait
icebp
ret
mov
ss
dec
ret
pop
or
jo
pop
push
jg
inc
push
jb
cmp
and
sbbb
jmp
mov
mov
xor
push
xchg
sbb
imul
fstpt
cmc
ja
sub
push
xchg
insl
hlt
in
dec
mov
pusha
pushf
xlat
pusha
inc
xchg
rclb
ds
or
and
and
jl
and
pop
call
push
add
mov
pop
add
mov
mov
sbb
repz
adc
cmp
xor
ja
aaa
jge
movsb
cmp
bound
in
sahf
ffree
fimuls
sub
add
in
fbstp
or
lcall
aad
xor
filds
sbb
mov
and
sub
cmc
das
adc
xchg
into
dec
add
xchg
mov
sub
rolb
dec
cwtl
adc
mov
jo
xchg
add
test
icebp
js
xchg
std
mov
fidivrl
inc
in
dec
sbb
outsb
stos
jle
inc
in
mov
jb
sub
or
incl
fwait
adc
inc
mov
hlt
inc
mov
add
call
fsubrl
fcom
pop
push
sbb
mov
add
inc
xchg
jno
adc
push
ja
or
push
jo
decl
jge
jp
inc
and
dec
and
pop
fldt
push
fistpll
lfs
fdivrs
xor
sarb
xchg
cltd
cmpsl
push
mov
ljmp
cs
xlat
lahf
adc
jo
sub
fistps
pop
mov
add
xchg
dec
loopne
shrl
push
adc
pushl
bound
rcl
les
sarl
jecxz
and
jge
mov
scas
sub
test
mov
popa
dec
ds
popa
sub
aad
mov
fistpll
mov
xor
stos
sahf
cwtl
dec
stos
and
aaa
jo
add
and
stos
mov
sbb
ret
or
push
movsl
test
aam
hlt
les
sbb
mov
sar
js
hlt
pop
add
adc
movb
xor
in
push
fcomip
popf
inc
adc
sbb
scas
or
push
jmp
sbb
mov
mov
mov
outsl
fbstp
cmp
or
pusha
cmp
mov
mov
and
lret
bound
jbe
push
out
rolb
push
push
jg
pop
adc
les
jecxz
in
push
xchg
xor
add
popa
loopne
sbb
nop
cmp
pop
lcall
movsb
cmpsl
cmp
aam
movntq
ret
or
jl
jp
or
xor
cmp
and
xor
or
loope
sahf
push
ss
incl
push
sub
or
rolb
lea
sub
mov
jns
pop
icebp
incb
dec
aaa
jl
dec
push
push
dec
enter
dec
mov
loopne
pushf
xor
repnz
jg
fdivs
test
lcall
jbe
jge
movsb
mov
fs
ljmp
movhps
ret
or
fucomip
or
popa
or
and
das
stos
mov
mov
loop
pop
incl
cld
and
mov
lcall
mov
xchg
xchg
or
test
dec
std
and
sub
add
inc
incl
stos
xchg
pop
loope
cld
xchg
mov
xchg
adc
hlt
arpl
decl
add
adc
and
stos
or
shrl
decl
jb
pop
imul
in
mov
daa
lds
cmc
mov
xchg
sbb
and
int
jp
jo
loope
jae
adc
add
scas
incl
cmp
mov
jmp
decb
adc
cmc
and
or
stos
dec
ja
ljmp
and
dec
cld
push
mov
shlb
xchg
ja
mov
adc
xchg
cmp
xor
sbb
in
decl
mov
xchg
adcb
jo
sbb
pop
lret
pop
xchg
std
adc
das
and
push
es
dec
adc
mov
add
mov
jbe
mov
xchg
inc
push
fisubrs
cmp
jecxz
mov
or
lods
popa
push
push
pushf
sub
push
aas
xor
mov
inc
inc
mov
arpl
insb
inc
test
incl
fs
add
ss
xor
jmp
sti
icebp
or
stc
shl
std
bound
mov
lret
aaa
outsb
jle
mov
out
data16
mov
pop
or
sbb
and
sbb
setno
jbe
mov
imul
cs
jmp
mov
mov
mov
adc
cmp
pop
add
pushl
cld
mov
ret
jmp
inc
xor
std
cmpl
sbb
in
jg
jg
jnp
adc
sahf
rorb
push
sub
mov
shll
sbb
loopne
mov
lods
faddl
idiv
movaps
push
dec
fbstp
hlt
sub
clc
inc
js
jmp
aam
pop
adc
cmp
mov
fldcw
inc
pop
andb
inc
ret
loop
sbb
loopne
inc
in
pop
pop
adc
leave
push
in
or
inc
out
jmp
lods
jp
je
mov
stc
xchg
xor
adcl
add
mov
jp
and
dec
jne
ljmp
nop
xchg
cmpsb
gs
mov
mov
arpl
add
std
mov
ja
adc
jmp
repnz
call
lret
mov
nop
lret
rorb
mov
lock
sbb
and
sbb
add
push
jmp
test
fiaddl
or
and
or
pop
dec
inc
inc
das
and
ja
test
into
push
mov
sbb
loopne
sub
aas
mov
xor
mov
mov
aad
xchg
pop
cmp
out
adc
and
adc
pusha
inc
or
dec
out
mov
push
mov
loope
inc
cmpsb
mov
in
iret
out
sub
cmp
cmp
xor
enter
aad
ret
lock
decl
push
div
sbb
push
dec
andl
push
in
pusha
cmp
adc
leave
outsb
subb
scas
aad
xchg
jno
lods
outsl
scas
orb
gs
sub
out
pop
cmpsb
dec
out
add
dec
xchg
and
jbe
add
inc
mov
movsl
sti
push
scas
adc
xchg
into
push
insl
sti
and
add
cwtl
pop
into
loop
mov
mov
push
icebp
bound
and
mov
lcall
aam
lahf
addr16
sub
add
jo
cwtl
rclb
fsubs
push
lock
sahf
dec
mov
cli
mov
add
push
cmp
movsb
cmp
cmp
outsb
inc
dec
mov
add
mulb
push
xchg
xorl
push
adc
inc
push
and
push
outsl
das
add
push
jns
sbb
jecxz
xor
loope
scas
out
rcrl
and
call
call
pop
repnz
pop
clc
ljmp
test
lea
ljmp
jg
mov
pop
ss
mov
push
outsl
push
cmp
jno
sbb
adc
inc
rolb
xlat
and
sbb
jmp
insl
fmuls
cmp
bndldx
and
mov
or
shl
arpl
call
or
gs
rep
cs
aam
jg
dec
lcall
cmp
in
mov
movsb
mov
add
mov
or
test
or
pusha
movsl
mov
mov
and
add
inc
xor
inc
push
sahf
or
or
mov
cmpsl
inc
mov
int
incb
jge
mov
mov
mov
inc
inc
fs
mov
aam
ss
cmp
dec
xchg
mov
out
or
mov
cli
decl
sbb
push
adc
pop
adc
pushl
loope
ret
ljmp
test
cmp
push
movl
mov
clc
aaa
lcall
add
jp
and
push
lahf
and
add
mov
push
clc
call
fwait
out
cwtl
aad
jo
subb
rorb
add
jbe
lods
in
je
push
mov
cltd
sti
ljmp
fwait
out
mov
or
loop
iret
pop
sub
and
or
aas
push
adc
outsb
pop
mov
leave
ret
inc
jge
add
xor
and
repz
inc
xor
mov
sub
jmp
jg
test
push
das
sahf
push
jno
call
ret
jmp
lea
loope
stos
clc
pop
inc
clc
push
mov
jg
lret
sub
xor
shl
ljmp
lock
jmp
xchg
xor
test
cs
inc
in
mov
push
popf
pop
mov
push
jbe
loopne
loopne
push
call
add
jp
stos
andb
sbb
inc
call
and
xor
sbb
or
sbb
lds
dec
pusha
xchg
xchg
pop
notl
sub
sub
or
pusha
xor
testl
xchg
add
cmp
les
and
mov
push
test
mov
andb
mov
shlb
mov
adc
pop
cli
adc
pop
add
pop
jno
mov
inc
jecxz
sbb
rorb
icebp
jle
xor
push
sbb
or
jae
enter
sbb
sbb
pop
das
xor
mov
aad
call
fsubp
addl
dec
dec
out
scas
es
cwtl
rcr
inc
xor
push
mov
mov
jmp
mov
mov
or
out
adc
xor
lock
pop
cmp
push
fsubp
fistpll
push
out
in
loopne
sbb
jmp
in
dec
mov
xchg
sub
jmp
add
out
add
clc
das
ret
test
mov
push
sub
popa
xorl
add
xchg
in
push
adc
xor
and
dec
fdivp
jl
dec
sbb
lret
std
pop
inc
ljmp
and
mov
mov
incl
icebp
testl
dec
in
inc
and
jg
xchg
nop
xchg
scas
xchg
and
add
push
popf
jns
jg
xchg
sar
repz
or
jle
mov
enter
mov
sbb
jg
das
adc
pusha
mov
fiadds
outsb
push
lcall
sarb
sbb
je
int
xchg
xor
lods
scas
cmp
call
or
or
adc
scas
cltd
cmp
dec
test
adc
std
cs
call
cmp
scas
cld
jge
bound
xchg
mov
sbb
add
xor
mov
pushf
outsb
cmp
pushl
xchg
mov
xor
cld
and
push
mov
jl
jo
sbb
mov
sub
push
inc
lahf
mov
out
mov
pop
push
xor
push
sbb
lea
sbb
pusha
xchg
jne
enter
ljmp
jl
adc
test
lcall
pop
ret
dec
stos
decb
hlt
sbb
dec
sahf
das
imul
add
xor
add
sbbb
xchg
cli
add
dec
not
stos
test
cmp
lcall
fwait
dec
aas
jp
or
cmp
xchg
xorb
loop
mov
or
lahf
cli
jmp
xchg
mov
mov
inc
fwait
add
jp
pop
cmp
push
dec
jle
mov
inc
out
dec
fsts
dec
mov
rcrl
ds
pop
mov
or
fadds
scas
fsubs
mov
dec
xor
imul
add
cmp
jl
in
xlat
lret
leave
bound
or
mov
sbb
ss
clc
sub
lea
sar
incl
push
inc
xor
inc
jbe
js
push
test
sti
xor
pop
pushf
in
data16
add
ja
pusha
outsl
leave
int
inc
aad
xchg
adc
loop
pop
or
xor
lret
test
es
lcall
cmc
sbb
or
js
into
ja
ror
adc
xor
push
or
fwait
dec
ret
mov
mov
pop
callw
or
dec
push
int
pop
adc
inc
fdivl
pop
dec
clc
rclb
cli
xchg
xchg
mov
or
sub
add
cld
pop
adcb
inc
adc
xor
xchg
decl
inc
into
leave
jle
sub
into
js
ds
mov
stos
sub
push
xchg
sbb
subb
jo
mov
cli
jg
adc
adc
aam
dec
jecxz
out
add
loope
inc
clc
or
std
xchg
popf
mov
pop
popf
stos
pop
jecxz
dec
loopne
push
jge
rorb
inc
mov
mov
mov
addr16
loopne
push
jl
push
mov
xchg
jb
push
xchg
imul
push
mov
loopne
inc
fcompl
mov
and
fisttpl
enter
fmuls
mov
mov
add
mov
mov
cwtl
lahf
scas
and
push
fcoms
hlt
dec
addb
adc
in
ljmp
pushl
fcmovu
out
out
sub
aad
dec
xor
sahf
in
mov
stos
movsb
inc
pop
inc
mov
cmp
hlt
xor
mov
fs
push
vpinsrw
mov
pushl
cli
sub
jo
int3
pusha
std
adc
dec
and
inc
or
xchg
fstpl
fimuls
mov
repz
sub
xorl
push
incl
cmp
jo
xor
mov
aam
std
mov
jo
movsl
push
dec
push
jmp
mov
sbb
xchg
and
jmp
cmp
cs
adc
push
outsb
rclb
and
push
jl
rcl
mov
scas
movsl
mov
push
incl
pop
mov
jbe
xchg
adc
xor
sbb
mov
dec
fwait
mov
xchg
popl
pop
test
inc
dec
jg
jp
mov
mov
dec
gs
loop,pn
add
and
xor
mov
icebp
push
loop
test
scas
shlb
xor
or
mov
or
jg
pusha
dec
stos
pop
ljmp
pop
jg
inc
cld
pop
or
dec
andb
adc
je
mov
mov
mov
sar
jne
into
out
dec
dec
sahf
cmp
xor
pop
lea
jp
mov
mov
incl
fs
mov
or
adc
jg
mov
jns
mov
movsl
or
pop
std
cli
cmp
decl
in
mov
pop
adc
mov
inc
inc
push
xchg
add
jb
push
xchg
cmp
test
fldt
test
sub
cmp
lock
rolb
add
mov
or
loope
scas
xor
xchg
dec
or
into
xchg
push
in
add
xchg
ret
or
and
call
pop
cltd
test
es
jecxz
in
mov
push
or
xor
inc
xor
lret
jmp
decl
fwait
popl
push
pushf
clc
clc
out
lcall
dec
sti
icebp
test
add
mov
adc
sub
test
cmp
pushf
fsts
decl
add
dec
xchg
pop
stos
rcl
lcall
cld
lcall
adc
ds
insl
rcl
xor
jmp
push
lcall
and
dec
rol
pusha
decb
aaa
and
int3
pop
insb
pop
int
mov
mov
jg
and
cmp
adc
xor
lods
rsm
test
cmpsb
incl
jle
cwtl
mov
pop
ficomps
sub
inc
pop
sbb
push
inc
pushf
mov
push
das
dec
and
shll
or
pop
mov
mov
sbb
or
sub
int
jne
mov
or
psubusw
dec
jge
add
sub
ja
lcall
adc
mov
pop
add
loopne
daa
add
push
andb
mov
out
fnstsw
xor
addb
loop
jae
stos
cmp
loop
aam
bswap
pop
rclb
cld
stos
shlb
xor
mov
scas
out
repnz
add
adc
mov
or
test
test
or
dec
jg
add
push
ss
andb
add
lret
fstpl
add
or
sarb
rorl
sub
push
adc
sub
mov
xlat
clc
mov
out
mov
jp
jmp
ret
mov
jle
mov
add
mov
dec
imul
xor
aam
loopne
inc
mov
adc
cmp
fwait
enter
pusha
sbb
mov
inc
pop
jecxz
rcll
cli
popf
out
sbb
scas
sbb
xchg
push
jmp
dec
add
sub
push
jg
mov
hlt
xchg
fldenv
lcall
jbe
xchg
ret
dec
and
push
push
ret
neg
inc
enter
sti
dec
test
call
fsubrl
add
filds
mov
mov
clc
mov
ljmp
cli
mov
inc
and
adc
or
xor
xchg
clc
mov
icebp
aas
add
outsl
cmp
das
sub
test
xchg
insl
sti
aas
sar
movsb
test
mov
add
sub
inc
outsl
ret
or
jne
ds
or
push
lcall
or
and
mov
cmp
mov
enter
or
nop
mov
jae
test
in
mov
fs
cmp
add
mov
cmpb
loop
test
call
xchg
movsl
cmp
dec
nop
sbb
jo
push
jnp
cmpsb
mov
cli
mov
mov
jmp
cmc
pop
pop
sub
dec
mov
sbb
or
mov
push
xchg
mov
cld
pop
add
aad
dec
test
mov
or
int3
inc
add
add
fidivrs
daa
lcall
or
push
sub
pusha
or
inc
fucompp
mov
imul
mov
sub
jle
cmc
xchg
jb
out
sub
repz
dec
sbb
push
cld
dec
pop
cli
mov
inc
pop
jl
popa
mov
mov
ljmp
fdivr
push
sahf
push
dec
mov
mov
lods
fistpll
mov
std
fs
cmpsl
les
les
aas
addb
xchg
data16
push
stos
fists
adc
add
add
ret
cli
lahf
cld
mov
ret
pop
leave
mov
or
fiaddl
dec
cmp
pop
mov
dec
dec
dec
push
faddl
sub
jne
adc
loope
push
jnp
sub
and
push
sbb
cli
lcall
inc
add
push
sbb
dec
insb
jg
jbe
xchg
cmp
dec
mov
mov
cmp
ds
popf
arpl
mov
add
adc
shll
and
psrlw
test
inc
pusha
out
mov
fisttps
cmpsl
js
mov
xor
scas
mov
jo
int
pop
adc
adc
je
mov
sbb
or
les
push
loope
mov
andl
jnp
mov
movsb
sbb
or
and
loop
lds
addb
or
test
imul
movsl
decl
xchg
cld
and
pop
inc
and
mov
add
inc
lds
sbb
dec
fmul
jmp
sbb
fidivrl
pop
xchg
movsb
sbb
jmp
notb
loopne
adc
or
loopne
fdivr
incl
fwait
adc
sub
sbbl
iret
jge
xchg
add
cli
adc
push
mov
aam
in
xchg
lock
xor
mov
dec
sub
mov
int3
adc
js
rcll
cmp
decl
negl
sbb
loope
stos
dec
inc
fdivr
repnz
in
loope
and
xchg
pop
pushf
dec
push
mov
lock
xchg
pusha
ret
adc
cwtl
pop
pop
bound
pop
cmp
aad
lock
xor
mov
test
push
nop
mov
mov
in
xchg
cmp
or
cld
cwtl
sub
mov
pop
pop
lods
sbb
pop
int3
data16
xchg
filds
rol
or
inc
cmp
push
lcall
push
push
test
push
mov
out
add
or
or
subb
lock
adc
pop
call
lahf
sbb
ljmp
add
pop
out
inc
jae
les
lods
int3
fcmovnbe
sti
adc
sub
push
in
pushf
mov
inc
cld
pop
in
push
or
das
outsb
cld
fildll
fnstsw
xor
enter
test
in
mov
sbb
adc
orl
adc
idivb
rorb
sbb
out
dec
shl
ret
and
out
rorb
js
dec
mov
or
ficoms
sbb
imul
or
mov
push
arpl
push
out
and
rol
ja
hlt
xchg
movsb
stos
jge
and
add
clc
fs
pushf
mov
pusha
insb
stos
mov
xchg
mov
into
cmp
shlb
push
mov
inc
xor
int3
xor
es
push
cmp
fmuls
ss
and
les
mov
notl
clc
decl
mov
add
out
rolb
outsl
or
and
pop
mov
jae
dec
pusha
int
out
and
scas
and
push
mov
pop
jne
add
mov
pop
pusha
sbb
lock
pop
cmp
icebp
inc
push
into
sub
sub
pop
jg
mov
xchg
push
jb
mov
sbb
popl
mov
jmp
push
cmp
fwait
push
rcll
bnd
les
aam
icebp
cltd
outsl
lea
xor
mov
incl
push
loope
jle
xlat
jmp
nop
xor
xor
cmc
lcall
pusha
cmp
cltd
in
dec
xchg
pusha
dec
cld
outsl
dec
jb
call
mov
sbb
mov
dec
mov
dec
pop
test
mov
xlat
xchg
push
or
jge
and
xchg
mov
test
repnz
jmp
data16
inc
inc
loop
or
mov
aad
pop
push
dec
or
mov
xchg
movsb
dec
inc
repnz
dec
pop
mov
stos
inc
pushf
outsb
mov
add
shll
lret
mov
js
xor
inc
stos
mov
fisttps
sub
mov
xor
adc
add
pop
and
les
cmp
push
and
or
adc
cmp
xchg
call
pop
lret
pop
and
jo
mov
mov
fists
pop
mov
adc
dec
adc
lods
andl
stos
cld
add
xchg
xchg
push
imul
push
mov
ret
das
fidivl
je
mov
xchg
mov
xchg
cli
ljmp
out
imul
aaa
add
jo
cmp
pop
dec
pop
or
adc
aas
outsl
pop
loopne
mov
jle
lcall
sbb
jno
popa
fcoms
fsubl
inc
pop
jg
mov
andb
push
cmp
jo
mov
cmp
ds
cmp
nop
sarb
push
mov
mov
subl
stos
dec
xor
clc
add
mov
pop
jg
jg
push
aam
mov
movsb
outsl
push
pop
inc
add
je
insb
xor
inc
sbb
push
mov
sahf
out
xchg
inc
aaa
inc
fwait
inc
daa
lahf
test
popa
push
cmp
and
addl
aam
ret
loope
sbb
insl
shlb
imul
sub
rorb
inc
xor
lcall
lcall
in
movsb
and
fbstp
fs
nop
sub
sub
cltd
adc
call
xchg
mov
ss
movsb
mov
add
push
mov
subb
outsb
orl
pop
xor
stos
imul
mov
push
push
inc
mov
shlb
nop
mov
loopne
jo
jno
mov
xchg
fists
pusha
sub
mov
cli
mov
sahf
scas
xchg
js
sub
dec
aas
rolb
arpl
dec
es
mov
inc
les
dec
inc
fstps
aas
sbb
cli
fisttpll
test
jo
and
adc
jbe
decl
add
cmpb
xchg
mov
mov
mov
add
xor
or
jbe
sahf
nop
inc
repz
cli
fidivs
mov
mov
xchg
fdivp
xchg
dec
jge
xchg
mov
aam
enter
jg
clc
push
jb
jae
jmp
sub
dec
pop
shlb
sub
fidivrs
repnz
in
pop
cmc
jp
lock
pop
clc
cmp
push
xor
cmp
adc
push
jp
pop
mov
sub
pop
pop
adcl
data16
hlt
jg
les
inc
loopne
cld
push
sbb
mov
ret
sbb
nop
in
in
pop
clc
sub
shll
xchg
push
xchg
jo
lea
sub
sub
outsl
std
pop
pusha
pop
dec
mov
je
fdivs
inc
cmpb
pusha
repz
fstpt
jl
xor
xchg
mov
push
dec
adc
std
fstl
mov
xchg
aam
cmp
add
call
movsb
lahf
out
movsb
in
or
popa
outsb
loop
int
or
dec
hlt
arpl
push
sub
xor
stos
sbb
fmull
xchg
mov
bound
push
mov
or
sbb
cmpsb
test
clc
nop
lods
add
mov
lcall
pop
call
stos
xor
sbbb
add
ljmp
aaa
bound
jl
sbb
pop
cmpsb
sub
clc
test
popf
adc
mov
ja
and
jle
add
loopne
leave
cs
xchg
adc
mov
cmp
adc
push
sbb
jge
add
or
pop
aaa
sbb
push
loopne
call
mov
mov
or
cmp
stos
not
add
negl
jne
mov
sbb
sub
pop
jle
xor
cmp
fdivrs
jo
ret
and
xchg
notb
dec
test
jmp
and
pushl
or
xchg
push
cli
incl
jae
loop
mov
push
and
rclb
lahf
sub
dec
sbb
jno
add
dec
enter
scas
loopne
cs
sub
movsl
or
mov
mov
or
daa
sbb
lods
ljmp
outsb
ss
ds
mov
fbstp
stc
ja
lret
cmpsb
mov
add
push
jns
xchg
jle
and
adc
pop
pop
cwtl
push
pop
jne
lock
jo
adc
jl
mov
xor
in
cmp
mov
cwtl
mov
add
jne
xchg
incl
cltd
out
jl
and
call
mov
cmc
dec
imul
cmp
lods
add
inc
sti
ret
imul
xor
xchg
fs
repnz
xor
xchg
push
add
cmc
lcall
loop
and
cmp
cli
adc
add
pop
adc
subb
jle
mov
das
fs
push
popl
mov
and
push
dec
or
hlt
das
push
jecxz
add
lret
add
arpl
rclb
lea
lcall
imul
mov
mov
push
je
jo
sub
adc
or
add
out
vaddss
ljmp
push
dec
or
pop
insb
xchg
lahf
loope
pop
hlt
adc
movsb
test
fs
xchg
add
inc
sbb
gs
pop
or
fistpl
pop
push
pop
xchg
lds
add
jle
sbb
inc
dec
inc
sub
xchg
ret
insb
push
xor
movsb
dec
mov
ss
add
mov
mov
mov
lea
add
iret
clc
mov
stos
add
and
or
mov
int3
pusha
mov
imul
hlt
or
fcomip
cmp
pushf
pusha
adc
or
xor
push
loope
push
add
mov
decl
lds
andl
and
mov
popl
pushf
icebp
cmc
push
push
push
add
std
out
test
scas
add
adc
lret
cvttps2pi
sbb
xor
lock
adc
add
cld
and
leave
lretw
insb
rclb
stos
xchg
insb
pop
jo
aad
fsubs
dec
mov
dec
adc
popa
inc
das
rcl
mov
aas
xchg
and
xchg
xor
rcl
aaa
in
and
jo
xor
and
sbb
adc
std
das
cli
dec
aas
cs
add
sub
jle
pop
shlb
xlat
std
outsl
nop
mov
cmpsb
mov
and
sti
addl
aaa
mov
int3
jo
scas
lods
test
pushl
cmpsb
push
xchg
mov
ja
sbb
and
hlt
scas
inc
pop
mov
addb
or
push
dec
add
and
jo
hlt
adc
fcomp
scas
mov
adc
out
xchg
xchg
pop
dec
mov
out
stos
jno
arpl
push
add
sbb
out
mov
dec
imul
jmp
incb
add
adcb
xchg
pusha
sbb
call
bound
scas
pop
lea
mov
sub
enter
pusha
mov
insb
stos
loopne
sbb
data16
xchg
sar
xor
xchg
sbb
and
push
inc
outsl
lods
lahf
sbb
filds
cmp
mov
xchg
dec
ret
in
pop
inc
xchg
jne
dec
lcall
fstl
sbb
sbb
mov
xchg
imull
enter
scas
inc
mov
scas
xchg
outsl
test
nop
loope
cmc
fwait
dec
jle
scas
adcl
pop
or
jne
leave
enter
loope
out
mov
dec
es
xchg
and
loop
call
or
push
cmpsb
jbe
xchg
add
cmp
sbb
shlb
lock
ljmp
fimull
dec
push
leave
loopne
mov
insb
xor
shrb
jns
mov
xor
sbb
fs
das
and
pusha
xchg
adc
enter
cli
cmpsw
pop
mov
add
cmc
mov
pop
xor
sbb
enter
jb
cmc
sub
repnz
cli
mov
and
insb
sbb
mov
out
test
mov
add
test
mov
mov
lret
fcompl
sbb
cmpsb
pop
dec
movsb
imul
sbb
xor
rorb
mov
and
push
xchg
ret
loope
add
dec
xchg
testb
add
mov
lock
aaa
aad
xchg
mov
incl
icebp
xor
or
jecxz
movsb
mov
adc
adcl
adc
or
rorl
or
pop
cmp
xor
lds
icebp
cmpsb
pushl
in
mov
inc
scas
jb
insl
mov
xchg
je
loop
pop
jg
cmp
add
jg
test
cmpsl
lods
das
imul
mov
xor
mov
or
xor
outsl
clc
xchg
push
insb
sub
push
bound
push
lods
add
jmp
xchg
decl
push
fistl
lcall
arpl
add
push
sub
mov
or
ljmp
push
mov
adc
cwtl
inc
lock
test
pusha
sbb
out
lds
cmc
jl
adc
xor
repnz
add
jge
mov
pop
cmc
fucomip
or
add
cmp
push
lcall
fs
mov
mov
pusha
adc
inc
mov
and
call
test
pop
dec
mov
in
mov
cmp
fcomps
mov
and
fcoml
fiadds
add
or
cmpsl
icebp
pop
ljmp
ret
or
dec
shlb
je
mov
cld
push
xchg
xor
dec
pop
jle
ror
mov
mov
cs
test
cmp
adc
or
scas
dec
mov
call
into
outsb
fs
jecxz
sub
fidivs
popl
rorb
icebp
in
das
fdivrs
xchg
and
rolb
push
mov
stos
inc
dec
cmp
bound
add
dec
push
dec
repnz
jp
or
jne
mov
imul
sbb
pop
icebp
pop
mov
je
sarb
insb
aam
mov
adc
add
add
std
icebp
xchg
pop
data16
aam
popf
and
mov
sbb
cmc
addr16
decl
push
std
jns
cmp
icebp
inc
test
or
imul
mov
ret
add
push
inc
mov
in
jno
sbb
mov
sub
adc
js
bound
mov
jo
or
xorb
jp
adc
inc
mov
call
les
jle
dec
stos
or
in
scas
je
stos
sbb
mov
jo
sbb
pop
stos
jecxz
add
les
sti
pusha
xor
mov
add
je
adc
adc
fisubl
stos
dec
push
stos
aad
clc
jg
je
cmp
int3
iret
sahf
shrl
pop
sbb
pop
adc
rclb
std
push
cld
les
nop
add
xchg
in
and
cs
mov
ret
xlat
lcall
xor
call
ffree
pop
fs
mov
andb
faddl
jmp
pushf
lret
adc
jg
sbb
push
inc
jbe
jg
xchg
xor
jg
push
cld
push
jno
ds
and
jb
les
rcrl
loopne
jmp
push
xchg
jo
call
mov
std
push
std
fbld
mov
fmuls
cmpsb
pop
xchg
pop
imul
aam
adc
jge
mov
mov
lds
cld
mov
or
movsb
mov
loop
adc
or
push
andb
lcall
adc
loopne
inc
add
lea
jle
mov
mov
and
movsb
mov
xor
mov
cmp
fidivrs
mov
inc
adc
popa
addb
jg
ret
or
jmp
mov
adc
mov
add
xor
sahf
pushf
into
js
cmc
push
mov
adc
or
add
iret
popf
pop
cli
add
shlb
mov
cmpsl
sbb
dec
pusha
aaa
flds
test
shr
pop
xor
xchg
or
mov
lcall
xor
xor
or
add
mov
das
jmp
xchg
fs
stos
xchg
adc
dec
mov
add
push
add
mov
push
or
in
lret
xchg
inc
lods
xor
dec
xor
cmp
cli
jg
sub
fiadds
or
and
sar
or
cmpsb
mov
pop
sbb
dec
loop
adc
jns
push
std
out
mov
push
je
cmp
outsb
imul
gs
int3
pop
and
sbb
xor
icebp
jg
test
push
ret
sub
jp
mov
lods
cs
clc
add
pop
dec
scas
cmp
pop
cmp
inc
fstl
aad
icebp
fidivs
pushf
enter
jno
ja
and
xor
pop
notb
and
das
inc
adc
cmc
xchg
push
cmp
ja
adc
add
sub
xchg
or
adc
dec
ja
jnp
bound
jne
sub
xchg
es
sub
mov
add
mov
int3
fcomps
sbb
test
js
and
outsb
jo
clc
push
sub
mov
pop
pop
push
push
rcll
push
rcrb
mov
mov
or
je
rolb
in
push
les
lods
or
dec
cmp
xor
loopne
ljmp
addr16
sbb
mov
lock
sarb
outsl
jl
test
stc
cmpl
inc
mov
pusha
lea
xor
xor
fwait
push
scas
mov
sbb
jmp
les
addb
insl
push
hlt
sbb
mov
mov
inc
in
ja
mov
ficoms
sub
je
popa
xchg
xchg
cli
jle
popf
inc
sbb
inc
aaa
enter
dec
test
and
mov
fs
mov
enter
cmp
or
mov
aad
or
jmp
outsl
pop
mov
fnstsw
add
xor
push
sbb
mov
inc
or
out
rcl
inc
cld
inc
xor
sub
lcall
adcl
and
pop
cltd
jmp
fcomip
repz
adc
pop
mov
cmpsb
adc
loop
fildl
les
stos
movsb
mov
aam
inc
mov
cmpb
jmp
push
inc
adc
push
inc
jl
xor
mov
popa
cwtl
ficoms
xchg
cmp
mov
je
add
xorb
clc
or
aas
ret
mov
cmp
inc
sub
pop
and
push
lods
add
push
cld
push
cld
or
test
dec
pop
rcr
mov
and
fisubrs
inc
xchg
mov
dec
clc
mov
mov
andb
push
scas
clc
jg
xor
roll
ret
inc
push
addl
sarl
mov
subb
in
das
dec
mov
dec
sbb
push
sbb
lock
cli
pop
hlt
mov
dec
ljmp
in
out
leave
jno
call
lcall
enter
xchg
cmove
stos
shrb
inc
add
xchg
and
adc
push
inc
jae
ljmp
and
xchg
inc
outsb
in
fwait
ret
mov
cmpsb
inc
mov
push
jmp
add
xchg
jg
test
dec
push
shll
nop
adc
mov
xor
or
imul
push
mov
inc
scas
lds
test
xorb
loopne
psubb
mov
jns
mov
ja
scas
push
popa
add
mov
cli
adcl
jg
es
xchg
xor
jo
add
pop
int
jo
push
cmpb
loopne
push
clc
push
into
add
outsb
lret
mov
pushl
sub
adc
pusha
sbb
scas
ret
push
add
add
push
sbbb
xchg
adc
inc
xorl
decl
add
sub
mov
mov
or
cmp
push
aad
incb
cld
or
insb
mov
into
rcl
das
rolb
inc
add
dec
ljmp
push
sbb
decl
insb
rcll
jg
test
test
add
adc
outsl
js
ja
dec
mov
popa
pop
mov
andb
and
push
mov
testl
inc
dec
dec
call
jo
mov
mov
cmp
arpl
mov
aad
fwait
arpl
cs
loop
cmp
and
jg
mov
mov
int
mov
dec
sub
shlb
add
mov
mov
sub
mov
add
mov
adc
scas
pop
cmc
sub
lret
add
sbb
pusha
fwait
adc
inc
outsl
fwait
lcall
cmp
jmp
inc
xchg
mov
inc
jb
mov
lret
sub
mov
jmp
xchg
scas
aam
jmp
sub
xor
das
mov
ja
xor
jbe
dec
addb
push
call
cmp
push
inc
push
fistpl
jnp
add
or
jg
addr16
xor
shl
inc
or
idivl
push
imul
adc
sub
das
test
mov
xchg
stos
nop
pop
sbb
jecxz
lcall
cmp
int3
or
call
mov
cmp
mov
sbb
or
dec
sbb
add
pop
fdivl
addb
lfs
scas
xor
cmp
xor
je
outsb
call
jne
push
aam
addl
lds
xor
aam
jo
pushf
cli
or
add
out
cmp
sti
data16
push
or
int
jp
aas
pop
pop
mov
mov
mov
decl
push
aaa
mov
and
mov
mov
outsl
fists
aam
mov
push
out
repnz
test
cld
add
and
leave
add
push
jne
inc
dec
jp
or
add
clc
decl
xor
leave
and
shlb
adc
sbb
pop
outsb
mov
sbb
arpl
popf
jle
cmp
cmc
or
inc
hlt
lea
or
loopne
cmp
cwtl
add
ret
ja
add
push
jg
ljmp
sbb
and
pop
testb
int3
and
or
push
mov
mov
push
inc
add
fistpll
nop
aas
mov
sbb
gs
fdivrl
jo
test
xchg
in
fidivs
sub
adc
stos
das
fadd
std
fistl
mov
idivb
dec
inc
cmpsb
ds
jnp
sahf
push
or
or
xlat
leave
xchg
adc
mov
mov
outsb
test
sbb
adc
dec
test
fsubrp
call
cld
das
push
dec
lods
sub
push
adc
pop
xchg
lods
xchg
fiadds
cli
or
mov
push
jecxz
dec
lcall
jo
fadds
sub
inc
cld
arpl
and
out
jbe
pop
push
jmp
lcall
sahf
clc
decl
movsl
dec
mov
sti
mov
jbe
rorl
inc
or
sbb
imulb
out
cwtl
cmp
mov
mov
cmp
jmp
pop
inc
inc
xchg
pusha
dec
shll
mov
sbb
sbb
pop
or
xor
std
xchg
mov
jb
lods
not
addr16
or
out
fisubs
cmpsb
outsl
dec
xchg
hlt
push
mov
mov
xor
shll
push
lods
fistps
mov
adc
loopne
call
cmp
inc
iret
test
cmp
ret
mulb
fldl
stos
push
pushl
in
gs
ret
push
mov
int3
lods
lods
and
dec
call
cld
cltd
andb
es
sti
mov
leave
mov
inc
sub
push
and
dec
out
loop
clc
mov
icebp
imul
mov
xchg
jo
mov
ret
pop
test
xchg
mov
aas
pushf
mov
ret
mov
jp
inc
sub
clc
add
xor
push
pop
jmp
jg
and
test
push
mov
ja
pop
rcll
jno
stc
jno
dec
pop
aad
ljmp
test
dec
fisttps
hlt
lds
mov
push
adc
sub
cmp
xchg
push
jl
hlt
dec
jg
sub
add
mov
clc
xchg
xor
or
aaa
ljmp
push
hlt
cmp
nop
fiadds
push
jns
call
pop
sub
loope
push
cmp
mov
xor
push
jno
js
cmpsb
add
mov
mov
jle
cmp
lret
mov
dec
pushf
ljmp
push
js
inc
jmp
push
inc
js
pop
daa
mov
adcb
xchg
aaa
mov
rorb
inc
lcall
or
faddl
ljmp
mov
and
mov
call
xchg
add
sbb
cltd
lret
in
add
sbb
cmc
dec
cmpsl
mov
lret
mov
lock
pop
mov
orb
jecxz
and
clc
movsl
mov
push
push
mov
testb
inc
inc
mov
sbb
imul
arpl
add
repnz
cmp
mov
movsb
or
sbb
aas
xchg
lock
mov
es
rclb
fnstenv
jle
rclb
or
mov
or
int
inc
test
lock
sub
add
jns
xchg
sar
outsl
addb
dec
pop
push
adc
ficoml
das
mov
mov
push
fs
iret
pushf
arpl
outsb
or
inc
call
sbb
lret
andb
jle
loopne
push
test
and
in
adc
call
jns
mov
imul
loope
icebp
push
cli
ja
jmp
mov
dec
jp
push
jns
loopne
frstor
bound
add
in
scas
push
push
je
mov
jnp
aad
cli
dec
pop
and
pusha
xchg
sbb
call
lds
jp
inc
lods
push
cmp
xor
jmp
jg
in
repz
lods
pop
filds
add
enter
arpl
ss
mov
rcll
mov
sbb
rcl
mov
inc
sbb
shlb
mov
mov
int3
std
dec
dec
ret
outsb
sub
add
dec
sub
ss
mov
ja
mov
add
test
inc
cld
pop
inc
decb
and
sbb
test
mov
pop
aaa
fisttpll
dec
dec
call
or
xchg
inc
dec
xchg
in
es
inc
dec
shll
ret
incl
push
xlat
jle
xchg
gs
mov
sub
add
movsb
mov
int
mov
push
dec
in
jg
or
mov
pop
imul
je
push
std
popa
je
shll
pushf
stc
in
shlb
or
nop
xchg
mov
mov
pop
jge
xchg
cmp
mov
mov
or
insb
cmp
jbe
shrl
add
lret
fucomi
jge
inc
push
sbb
add
fbld
inc
pop
and
add
and
add
mov
cmp
push
dec
jle
pop
jl
sub
push
xor
or
insl
rolb
dec
and
into
push
xor
xor
push
jns
mov
mov
cld
nop
ret
inc
jle
and
ret
into
inc
lock
mov
add
pop
cwtl
jbe
outsb
popf
adc
loop
xchg
jnp
fs
pop
push
into
shlb
jno
divl
xor
jo
pop
add
push
stos
cmp
sbb
jecxz
sub
cld
cmp
idivb
cmp
xchg
add
ljmp
ror
add
shlb
and
pop
nop
clc
add
movsb
out
lret
mov
xchg
mov
cld
test
cmpsl
xor
jl
push
cld
scas
xchg
scas
sub
mov
movsb
or
or
add
sub
out
movl
cmpsl
mov
cmpl
cld
fwait
add
push
and
xor
scas
fiadds
push
lahf
jg
dec
dec
cmpsb
stc
push
cwtl
inc
and
das
push
std
push
fcoml
dec
inc
jp
nop
sub
pusha
jne
push
xchg
or
decb
mov
faddl
mov
dec
outsb
xchg
das
push
std
pop
insb
jmp
lock
pop
sub
inc
cs
cli
lahf
add
cmp
and
add
or
mov
fadds
xchg
pusha
cmp
jle
or
jg
cmp
or
pop
icebp
in
aaa
mov
in
pop
packsswb
pushf
fs
mov
sbb
test
pusha
mov
mov
xchg
cwtl
and
sub
cmp
dec
shl
push
cmp
gs
sub
aad
adc
call
add
sub
shrb
mov
jg
ds
dec
sbb
xchg
outsl
clc
push
add
test
dec
xchg
je
cmc
jo
aad
lods
test
mov
in
add
fisubs
lds
jmp
sub
in
mov
dec
jl
push
lret
cwtl
addb
mov
rcl
out
mov
and
repnz
outsb
punpckhwd
cmp
push
in
push
pop
add
adc
lock
xchg
or
nop
push
xchg
loopne
push
push
ds
addr16
mov
jnp
call
in
andl
loope
add
xorb
mov
mov
sti
cltd
push
xchg
movsl
outsb
fwait
cmc
out
cli
push
dec
or
or
rorl
movsb
pop
adc
pop
jge
xacquire
mov
enter
and
mov
add
ljmp
pop
jbe
pop
test
loopne
adc
pop
sar
incl
xor
sub
ret
jno
or
xchg
out
cltd
cmpb
ljmp
fs
mov
mov
xlat
inc
pop
test
xor
inc
fildll
adc
ja
pop
adc
popa
sarl
jbe
loopne
das
push
lods
pushf
popa
imul
imul
inc
mov
mov
icebp
jae
shll
cld
fwait
and
nop
cld
adc
dec
jmp
xchg
outsl
fnstcw
scas
push
dec
cmc
jg
movsl
les
lret
aam
leave
xor
push
xlat
in
xor
sbb
ds
pop
dec
es
pop
add
and
gs
mov
push
push
adc
cmc
cmp
out
mov
or
mov
ret
enter
mov
out
xor
mov
adc
outsl
jmp
aam
push
inc
push
add
lds
dec
dec
ljmp
repz
sbb
or
shlb
lock
sbb
leave
inc
rorl
outsb
mov
sbb
sahf
nop
and
sub
push
or
xor
out
movsb
sub
push
push
sub
adcb
or
sbbb
enter
fists
cmp
stos
mov
testl
adc
jle
add
shl
or
xchg
push
mov
and
mov
inc
add
sar
add
in
ds
cmp
loop
rolb
adc
push
cld
data16
fs
incb
aad
fs
sub
out
dec
sbb
insb
dec
nop
mov
fmull
and
test
adc
subb
stos
imulb
jle
mov
test
subb
pop
dec
sbb
stos
fs
fs
ret
in
fbld
ds
xor
mov
sbbb
inc
xor
cmpsb
mov
pop
add
lock
aad
and
xchg
shl
pop
sub
sbb
sub
addl
dec
loope
push
push
cmp
decl
and
jge
fcomp
push
into
or
jp
mov
jb
adc
movsb
jne
shlb
mov
std
mov
aas
test
adc
pusha
push
rorb
adc
or
rcr
mov
and
int3
mov
jmp
and
push
add
nop
sub
or
adc
fidivl
pop
lcall
ja
sbb
push
mov
jecxz
push
dec
call
hlt
outsl
cli
inc
jp
sbb
and
pop
xchg
ds
jp
imul
pop
insl
push
xor
js
pop
mov
pop
adc
adc
mov
arpl
add
xor
or
hlt
fs
rolb
dec
push
leave
dec
cmp
inc
popl
xchg
sub
jg
leavew
push
popf
mov
fstpt
xchg
push
mov
scas
pop
stc
xor
mov
jle
and
in
repnz
xchg
js
addr16
inc
nop
rclb
rorb
sti
ret
lcall
call
cmp
test
jg
push
and
les
dec
test
xchg
cmp
push
out
xchg
sbb
pop
cmc
jg
cs
dec
push
or
push
stc
dec
push
sbb
call
ret
outsb
push
cmp
insl
adc
xchg
enter
cmpsl
mov
jecxz
push
jge
repz
sub
xor
cmp
push
add
inc
pop
ljmp
pop
cwtl
sbb
in
popa
clc
xchg
and
shrb
push
popf
je
mov
pop
das
imul
in
insb
bound
inc
sub
fisttpl
sub
cmpsb
sar
stos
js
call
mov
mov
inc
mov
mov
add
mov
lahf
inc
cmpsb
loope
cld
mov
push
orl
bound
cs
add
dec
inc
or
addr16
outsb
mov
lods
jl
push
js
or
pusha
popf
inc
aam
shl
stc
outsb
mov
rorb
test
sbb
push
rolb
outsb
xor
mov
inc
and
iret
add
jns
cmpsb
push
fstpt
xchg
cmp
jg
jb
testb
add
test
orb
psrlq
add
lcall
call
sahf
xchg
cmc
fdivs
dec
xchg
jge
push
or
jg
orb
add
mov
dec
test
test
mov
pop
clc
cld
xchg
mov
out
adc
or
mov
jno
je
or
decl
lds
adc
xor
jb
aaa
jecxz
std
cwtl
fdivrl
jnp
mov
scas
push
adc
mov
decl
xchg
divl
stc
xchg
nop
dec
add
in
xor
xchg
xor
bound
sti
sub
test
pop
cmpsb
loope
out
dec
mov
cmp
push
mov
adc
adc
dec
xchg
loopne
mov
cli
out
testb
add
insb
enter
hlt
sar
lcall
ss
or
add
xor
xor
jge
test
ljmp
ljmp
lds
icebp
inc
clc
pop
mov
sbb
mov
mov
scas
or
and
mov
movsb
in
mov
pop
push
aad
sub
mov
inc
movsl
and
add
inc
stos
shl
mov
add
adc
xchg
mov
repz
cmp
mov
lahf
sahf
fsub
icebp
fimuls
iret
ljmp
push
push
sbb
in
out
add
loopne
push
mov
lods
in
cwtl
jb
sub
pop
push
dec
insb
dec
pushf
les
sub
inc
icebp
fcoml
adc
adc
push
mov
dec
inc
mov
sahf
pop
idivl
add
add
push
push
push
movsb
mov
xorb
xor
cwtl
cmp
mov
cld
jg
outsl
push
or
pop
sbb
pop
stos
jno
jae
orl
fisttps
incl
aas
aad
adc
xchg
cwtl
ds
jmp
mov
clc
dec
fs
cmp
push
xchg
or
mov
imul
lock
shl
bound
dec
adc
sbb
add
xor
and
shlb
push
dec
cld
jg
aam
and
jne
adc
inc
rol
fdivl
ss
adc
sahf
and
mov
shrl
sbb
or
sbb
cld
inc
add
cmpsb
pop
cmc
sub
cs
data16
jo
sub
rcrb
shl
pop
mov
lock
addr16
les
add
push
scas
add
test
add
das
cli
fists
jle
into
add
mov
jb
ss
pop
jns
rcrl
lret
jge
ss
push
and
loop
adc
roll
mov
rorb
nop
sbb
jmp
loopw
out
add
movsl
and
outsb
pop
lcall
adc
mov
jle
xchg
or
lcall
pop
dec
jmp
pushf
cs
pop
icebp
subl
lods
data16
sahf
mov
or
fs
ljmp
test
inc
lods
fldcw
adcl
inc
sbb
mov
test
and
push
or
aad
es
xchg
and
and
leave
inc
push
nop
loop
roll
scas
sub
adc
or
sub
xor
ljmp
test
or
cmpsb
add
stos
iret
sbb
mov
mov
pushl
cmc
lods
and
lds
sub
jp
dec
std
and
lods
pop
lret
add
jg
add
pusha
inc
lds
das
dec
popa
cmpsl
xchg
add
adc
pop
or
push
and
dec
imul
xor
and
les
inc
enter
loop
and
push
stos
inc
ret
cld
clc
jmp
jno
loope
or
cmc
mov
shlb
dec
mov
popl
or
and
aas
movsb
inc
stc
into
cmpsl
and
dec
dec
cltd
push
jge
movsl
fs
call
or
push
jae
lods
cmp
cmpsb
testb
mov
jle
adc
adc
outsl
and
xchg
insl
or
lcall
insl
pushl
add
mov
add
mov
mov
out
scas
ja
or
insb
mov
test
adc
xor
mov
test
xor
pusha
xchg
or
mov
add
jne
cmp
nop
xchg
lods
pop
mov
adc
mov
out
xchg
add
out
mov
das
rolb
enter
jo
mov
ret
pusha
and
dec
leave
push
or
inc
or
pop
loope
add
cli
inc
mull
xor
shrl
stos
dec
sbb
popf
bound
inc
nop
adc
lock
lahf
fsqrt
sbb
pop
push
cmp
pop
xchg
sbb
push
cld
aas
adc
and
in
insb
cmp
sub
jle
xchg
jmp
pushl
jg
popf
inc
lods
xor
push
pop
mov
dec
add
leave
push
sub
adc
pop
and
cmp
push
bound
ret
decl
inc
lret
loop
xor
je
pop
jno
sbbb
and
xchg
jbe
sar
add
addb
lret
daa
push
inc
xchg
adc
aaa
push
int3
mov
test
cwtl
dec
cld
mov
movsl
pusha
orl
xor
cmc
dec
inc
push
mov
hlt
sub
mov
rcl
xchg
lahf
out
mov
mov
es
push
pop
inc
inc
sub
adc
add
rcrl
adcl
cltd
mov
and
dec
out
xor
jle
shr
int3
rolb
or
icebp
push
pop
sbb
in
xor
pop
call
incl
inc
pop
mov
movsb
mov
js
jno
insb
test
cmp
push
xorl
or
mov
push
mov
adc
pushf
cmp
cwtl
popf
in
inc
dec
sub
mov
mov
scas
in
sub
movsb
inc
cmp
cwtl
std
cmp
fwait
mov
and
into
fbld
daa
aam
push
mov
loopne
daa
mov
mov
add
imul
sub
sbb
mov
mov
cs
ja
lock
and
and
ss
enter
dec
pop
icebp
pop
pusha
lcall
shrl
jo
jp
sti
add
or
push
lea
clc
mov
test
aaa
fidivl
hlt
js
adc
test
or
mov
push
es
inc
loopne
jne
sbb
ficomps
mov
adc
dec
inc
xor
adc
cmp
fldl
ds
sub
pop
dec
std
jo
das
inc
enter
mov
jge
mov
int3
es
push
in
inc
mov
cwtl
push
lock
push
cmc
jbe
out
jmp
mov
add
sub
out
loope
inc
and
or
jg
outsb
fildl
mov
or
dec
outsl
movl
fisttps
adc
stos
lock
vpsrad
in
push
inc
mov
and
out
mov
xchg
subb
or
xchg
sub
out
or
dec
lock
mov
add
clc
mov
push
rol
js
lret
rclb
sbb
cwtl
int
fs
aas
je
cmp
add
mov
arpl
add
push
push
incl
mov
jmpw
fisubs
or
dec
pushl
adcb
add
cmp
rcll
orl
mov
mov
lret
fmull
push
cmp
and
fmul
in
scas
mov
sub
mov
pop
or
add
scas
dec
loop
jnp
sbb
sub
xchg
roll
dec
mov
push
sti
incl
ret
popf
mov
mov
sub
adc
test
xchg
imul
js
int
pop
loope
sbb
cmpsb
xchg
pop
cmpb
imul
push
inc
xchg
sub
repnz
pop
filds
jge
lret
stos
ljmp
cmp
mov
or
lcall
cmp
out
xchg
mov
cs
mov
sub
rolb
jnp
movsb
test
sub
lock
jl
add
sbb
es
push
incb
pop
pop
push
xchg
test
cmp
outsl
jg
mov
inc
cld
jmp
dec
dec
mov
repz
fcom
insl
iret
mov
lds
cwtl
js
mov
inc
or
imul
mov
lods
jmp
and
mov
and
movsb
pop
insl
je
mov
xor
mov
mov
mov
mov
or
mov
pmaxub
cli
or
nop
and
out
add
cltd
cmp
insb
sub
dec
xchg
scas
lea
xor
add
push
aaa
dec
push
add
push
dec
adc
rcr
sbb
cld
fwait
push
add
insb
imul
out
fidivs
cmp
pop
sub
adc
lcall
jg
in
outsl
rcrb
add
into
dec
call
out
fbstp
cwtl
xchg
nop
inc
dec
mov
shl
lock
test
mov
pusha
xor
fwait
sub
mov
jecxz
adc
pop
jmp
mov
pushl
test
xor
xchg
stos
notb
lret
pusha
xor
inc
xor
scas
aad
shrl
push
in
dec
cmp
push
push
rcrl
cmpsb
nop
test
out
aas
ds
aas
cs
sub
rolb
sbb
inc
ja
addr16
cmp
bound
movsb
mov
jp
xlat
pop
inc
rorl
xor
insb
lea
adc
js
fstpl
popf
lret
sub
sub
insl
clc
scas
add
mov
adcl
mov
add
dec
xor
sbb
push
subb
and
mov
mov
push
push
push
pusha
cmp
lar
lock
in
push
and
or
insb
push
cmp
xor
adc
cmc
in
jg
or
jbe
push
cli
sub
ror
or
lret
insb
jecxz
pop
adc
sarl
jg
mov
inc
mov
decb
xchg
adc
insb
rcrl
insb
sub
or
cli
adcb
ret
mov
push
pop
jns
addl
inc
pushf
sub
ja
sahf
cmp
ficoml
mov
mov
or
xchg
add
es
sbb
into
add
xchg
push
add
imull
cmp
mov
push
int
inc
or
sbbb
inc
inc
out
notl
pop
je
enter
dec
inc
xor
pushf
mov
pop
bound
or
mov
jmp
rorb
sbb
arpl
aaa
imul
shlb
lock
xchg
hlt
sbb
push
jo
ds
and
sbb
fmull
add
push
inc
insb
cmpsb
xchg
xor
inc
in
aam
std
call
add
call
mov
clc
sbb
lret
out
js
in
sbb
sahf
loopne
idivl
mov
cmp
xchg
or
or
and
out
xor
mov
xchg
add
jns
mov
loopne
pop
les
icebp
sbb
push
add
mov
ja
outsl
mov
mov
fisttpl
lds
sbb
pushf
pop
out
push
decl
jne
loopne
adc
xchg
gs
push
pop
push
and
aam
mov
or
aam
xor
bound
sbb
pushf
xchg
mov
dec
pop
loopne
ds
xchg
sub
call
cmp
adc
cmp
push
add
mov
jge
xchg
call
mov
outsb
aad
mov
sub
ljmp
movsb
cmc
xchg
mov
shrd
push
clc
cltd
mov
incb
or
push
xchg
lock
lock
pmuludq
lock
xor
call
push
mov
sbb
mov
rorb
ret
decl
sbb
add
mov
inc
inc
and
mov
jnp
xor
rolb
and
sbb
call
ljmp
fnstenv
sahf
push
mov
je
mov
in
andl
sbb
test
scas
push
push
notb
notl
or
mov
cmpsl
sbb
dec
insl
sti
inc
int
jnp
loopne
rcr
and
decl
je
sbb
js
inc
adc
xor
cmpsb
mov
xor
or
int3
push
repz
je
and
xor
std
notl
addb
push
rcr
push
sti
icebp
pushf
sub
call
loope
pop
fcmovne
push
add
sarb
mov
xor
ljmp
or
add
clc
shlb
adc
pop
push
pop
or
lahf
dec
adc
mov
loope
shlb
sbb
xor
push
xchg
sahf
jecxz
les
sbb
push
hlt
sbb
or
cmp
xchg
xor
jmp
stos
and
orb
jp
lea
jno
nop
xor
add
adc
outsb
jno
scas
add
rcrl
pop
jg
cwtl
xor
cmp
fsubrs
xor
stos
aaa
mov
or
daa
cmc
push
loop
call
push
jnp
xchg
addr16
jb
pop
popa
movsb
mov
push
test
in
ss
ficompl
cmp
inc
ret
pop
sbb
sub
std
sub
inc
mov
int
xchg
lock
sbb
loope
stos
lahf
mov
loopne
loope
loop
jno
push
jne
push
insl
push
dec
mov
adc
jns
fstpt
into
mov
data16
push
dec
popf
sub
xor
sub
sti
lods
mov
loopne
cli
sub
hlt
dec
or
rol
js
hlt
sub
aad
mov
mov
sti
inc
repnz
dec
dec
and
pop
mov
movsb
jmp
or
mov
scas
add
xor
mov
test
in
ljmp
test
ret
sub
mov
add
mov
push
outsb
adc
icebp
pop
or
into
jmp
xorb
sbb
les
or
enter
test
mov
inc
add
fsubr
inc
and
xchg
sti
int3
xor
or
test
add
sbb
xchg
lock
adc
idivl
sarb
add
jmp
mov
dec
mov
dec
adc
mov
xchg
fwait
decl
cli
outsl
add
push
push
add
push
cmp
loop
inc
ficomps
pop
mov
subb
mov
and
mov
call
data16
fbld
push
and
push
jg
push
sub
cmp
ret
addl
mov
std
incl
lret
xchg
xor
in
fsubl
orl
shll
sbb
lods
cmp
sub
imul
mov
adc
ss
clc
jg
push
sbb
jne
add
mov
pop
pop
push
push
subb
inc
mov
mov
xor
push
ljmp
movsb
pop
add
outsl
push
add
mov
scas
mov
fistpl
jnp
pop
sub
xor
pop
or
fisttpll
sub
jmp
das
ljmp
push
push
cmp
mov
orb
add
or
shlb
inc
jmp
ljmp
ret
push
insb
inc
dec
fbld
xor
add
je
ret
push
rorb
lods
out
mov
pusha
nop
xchg
push
add
dec
lock
mov
into
lret
push
mov
add
bound
adc
pushf
pop
inc
sub
or
jb
lcall
sub
cs
jmp
jg
or
mov
shrb
jl
add
or
mov
mov
xor
dec
rcrb
mov
ret
and
sbb
sbbb
inc
cli
add
cli
mov
inc
mov
and
pusha
cwtl
inc
filds
nop
int3
pop
and
pushf
popf
in
cli
xchg
ret
bnd
pusha
ja
xchg
es
push
xchg
or
push
push
sbb
scas
sub
xor
ja
push
inc
mov
insl
cmp
fwait
cli
and
sarb
add
push
incl
adc
dec
repz
inc
xor
dec
je
incl
test
xor
dec
push
jbe
hlt
jmp
dec
push
jns
inc
pop
jbe
leave
push
pop
inc
adc
les
sahf
into
mov
pop
rclb
aas
test
push
mov
add
adc
out
and
mov
jno
fildll
repnz
xor
mov
jns
inc
xor
pop
push
sbb
jp
mov
dec
loope
sbb
mov
outsl
shr
adc
cmp
cmp
sub
mov
xor
fnstsw
mov
in
add
cli
ljmp
jb
add
decl
mov
push
add
push
sub
clc
mov
sti
insb
or
ja
mov
test
mov
or
jl
jnp
sbb
or
mov
roll
mov
cmp
xchg
and
xchg
xor
jo
jl
clc
jne
bound
int3
jle,pn
xor
mov
movsb
scas
cltd
in
es
sub
pop
jmp
push
push
or
push
push
sub
mov
or
sub
call
shll
inc
pop
ja
rolb
jns
add
cmpl
inc
mov
add
or
dec
icebp
inc
add
ss
mov
je
aaa
fisubrl
ja
in
sbb
out
mov
mov
and
in
clc
iret
stos
ljmp
fsubrl
imulb
add
mov
cltd
popf
inc
add
clc
pushl
mov
movups
or
xor
cmp
and
push
xchg
stc
pushf
add
push
imul
mov
push
xchg
add
mov
adc
out
shll
js
push
jae
repnz
cld
testb
sub
xbegin
xchg
jle
adc
mov
and
outsb
shlb
inc
insl
push
cwtl
ds
pushf
int3
jo
call
scas
add
stos
or
negl
or
aaa
push
add
bound
mov
sub
fbstp
mov
pusha
pusha
lds
adcb
test
clc
dec
sahf
dec
sbb
fidivs
shl
inc
adc
adc
push
cltd
and
and
shll
jae
mov
loop
sbb
mov
movsb
lock
call
mov
lcall
sub
cs
out
xor
jmp
movsb
pop
add
call
or
dec
addl
mov
push
leave
xor
std
orb
rolb
or
jg,pn
push
and
call
cld
and
jg
or
mov
nop
pushf
into
mov
adc
cmpsb
cmpsb
dec
and
and
aam
subb
push
in
mov
aas
mov
push
adc
jl
pop
inc
xor
or
mov
adc
dec
fnstcw
call
mov
mov
sbb
xor
testl
or
jno
imul
bound
stos
mov
mov
imull
lods
js
adc
xor
stos
dec
loopne
lock
es
inc
xchg
pop
dec
xchg
sahf
incb
xchg
popa
repz
cltd
bnd
xchg
test
inc
sub
pop
or
rorb
ds
mov
mov
pop
inc
xchg
mov
not
jle
inc
dec
mov
cmc
jl
inc
rcr
fdivrs
add
call
mov
loope
faddl
sbb
mov
mov
lea
aas
mov
mov
sub
subl
rcl
xor
js
pop
loopne
ret
ljmp
pop
mov
insl
cli
popa
add
std
push
je
enter
ja
add
add
enter
cmp
fistl
aaa
pop
aam
sub
fidivrl
jmp
cwtl
mov
rclb
xorl
ljmp
cmp
addr16
push
pop
rorl
and
add
lods
push
inc
inc
pop
and
cmp
mov
lret
jmp
test
add
insl
adc
xor
pop
jp
inc
mov
mov
mov
in
adc
hlt
jbe
mov
es
push
xor
jb
and
aas
mov
mov
fwait
in
mov
ficomps
and
xchg
das
fs
sbb
bound
or
sti
cs
ror
pop
mov
mov
fbstp
sbb
clc
jnp
cmc
cmp
cwtl
fwait
mov
cld
or
stc
hlt
je
dec
lcall
jns
pop
dec
sub
and
ja
adc
mov
nop
call
push
ljmp
mov
sti
mov
addb
xchg
shl
notb
add
push
push
pop
dec
rcll
addb
sbb
mov
movsl
sbbl
lahf
xchg
icebp
sbb
ss
mov
sbb
inc
cwtl
xchg
xor
scas
jmp
enter
pop
pushf
add
in
aas
adc
mov
xchg
cmp
xlat
add
mov
add
aam
mov
xchg
jae
mov
dec
cli
das
loopne
les
out
push
add
sub
adc
adc
and
add
add
adc
push
dec
inc
mov
xchg
pop
adc
mov
call
add
mov
push
shll
daa
jnp
sub
sar
call
xchg
mov
movsl
push
lcall
or
fs
insl
orb
xor
lock
mov
or
mov
dec
push
dec
test
je
or
add
mov
test
dec
incl
pusha
jg
inc
jg
push
mov
lea
ja
repnz
cld
out
adc
insl
test
lds
add
call
inc
cmp
sbb
mov
fldl
jo
add
pop
lock
subw
call
jno
cld
outsl
inc
push
mov
push
xchg
jmp
das
jne
les
mov
shr
sub
hlt
inc
loop
repnz
mov
adcl
testb
add
leave
fnsave
adc
iret
loope
mov
cmpsb
lcall
out
mov
sub
movsl
loopne
loopne
stos
and
stc
outsl
cmp
pushf
out
sbb
xchg
js
mov
nop
pop
sub
mov
jle
lret
mov
jge
push
xchg
push
cltd
jns
hlt
add
cs
lahf
and
xor
sub
sar
lock
outsb
cmpsb
push
or
and
cmpsb
subb
into
push
hlt
xchg
test
insb
fwait
pop
sub
mov
xor
adc
imul
mov
lods
leave
pop
cmp
rcrb
push
out
dec
test
jg
rolb
mov
sbbb
jecxz
clc
fbld
adc
adc
jno
incl
push
lods
ss
in
arpl
mov
movsb
pusha
int3
cmp
cli
pop
adc
lock
or
sub
sub
hlt
movsb
ret
xchg
cmpsb
jle
or
mov
dec
inc
xorb
sbb
lcall
shl
std
inc
xor
cmp
sub
jmp
cmpsl
es
out
inc
add
les
orb
or
jl
and
pushf
add
or
pop
test
aam
inc
mov
adc
lcall
pop
cmpb
mov
jno
scas
in
test
loopne
std
das
mov
sub
mov
jp
and
push
test
inc
add
add
ret
loope
mov
xchg
or
ljmp
inc
inc
dec
jl
icebp
sub
and
push
fcomip
ret
insb
jo
ja
daa
or
or
into
xor
out
mov
inc
ret
je
sbbl
jg
loope
clc
ja
inc
mov
les
ror
sti
add
inc
mov
cwtl
push
jle
adc
jne
fsubrl
or
and
loopne
dec
and
xchg
sbb
and
add
cli
mov
sub
call
repnz
mov
fdivs
repnz
roll
into
inc
xchg
decb
xlat
dec
xor
nop
mov
jg
push
inc
repnz
push
mov
cltd
clc
sbb
xchg
aaa
xchg
clc
mov
push
xor
js
jb
mov
dec
ds
popf
or
push
scas
mov
lods
stos
or
mov
cmp
cmpl
test
test
inc
xor
pop
popf
sbb
movsl
sub
xchg
add
dec
pop
insb
sbb
testb
cld
hlt
mov
push
dec
aas
enter
out
cmpb
rcrl
js
and
incl
xor
xchg
jne
push
data16
imul
fldenv
lds
daa
fildll
xor
dec
loop
cli
scas
add
jmp
jo
fmull
xor
cmp
clc
xor
in
inc
scas
and
add
pushf
mov
mov
ljmp
adc
mov
pop
icebp
sub
pop
mov
pop
fwait
sbb
cmp
leave
stos
mov
push
and
mov
cmp
fbld
loope
hlt
inc
xor
and
idivb
jbe
loop
sub
cwtl
movsb
dec
out
sbb
mov
jg
orl
push
pop
xor
or
ficompl
lea
jecxz
pop
mov
push
test
or
call
pop
cmc
insl
loop
ljmp
mov
sbb
shlb
imul
fmull
mov
cld
inc
pop
ffree
and
inc
andl
mov
ret
pop
push
xor
rcll
push
mov
lret
xchg
adc
push
dec
pop
sub
push
ds
sbb
jns
sbb
mov
fs
xchg
addr16
and
add
jle
xchg
rorl
add
mov
lahf
lock
push
stc
mov
icebp
xchg
mov
fwait
xchg
and
movl
add
sub
add
call
pushf
in
xchg
aam
outsb
sbb
mov
xchg
dec
repnz
pop
sbb
push
pop
add
xor
adc
loop
dec
addr16
jecxz
loope
movsb
call
inc
ror
movsl
cs
sub
push
inc
lcall
add
shlb
sub
jb
ja
sub
pushf
hlt
cmp
jnp
shrb
aam
dec
and
or
jecxz
adc
notl
push
adc
sub
lcall
cli
testb
loop
xor
mov
or
cmpsb
adc
fsub
cmpsb
and
ljmp
arpl
mov
idiv
scas
je
insb
cmc
add
jno
test
pop
sbb
sbb
enter
nop
mov
adc
in
dec
test
je
inc
les
fiaddl
inc
and
daa
fcmovnbe
sbb
in
jge
push
inc
ljmp
test
sub
pop
or
xor
sti
lahf
das
js
push
jne
push
xchg
dec
xlat
movsb
pop
or
repnz
sbb
inc
test
rorb
or
fistps
pop
cli
jbe
je
mov
xor
je
shrb
or
sbb
aaa
out
inc
mov
pop
mov
jmp
into
stc
inc
sbb
int
push
cwtl
cli
mov
fnsave
push
psrld
or
push
xchg
mov
inc
pop
mov
jb
mov
dec
out
add
push
loop
add
inc
sub
push
fadd
push
fcmovb
sbb
inc
pop
in
pusha
in
je
fsubl
sbb
and
out
js
xor
mov
mov
addr16
push
push
roll
cmpsb
cmc
sub
jmp
and
std
ret
cltd
mov
adc
cld
rcrl
pop
inc
cmpsb
jle
adc
dec
cmpsb
fcompl
pop
inc
dec
sub
inc
jmp
add
cmp
push
rol
or
mov
clc
pop
ret
popf
or
xchg
les
mov
imul
mov
das
nop
lods
fstpl
jmp
xchg
mov
ret
clc
dec
adc
rolb
std
jb
add
cmc
xor
out
mov
addb
movsb
daa
in
cmpsb
pop
pop
imul
add
pop
cmpsl
incl
push
mov
stc
neg
test
outsl
mov
hlt
push
sbbb
sbb
xchg
adc
sti
ret
repnz
add
movsl
fists
insb
sahf
cld
or
add
test
or
adc
ret
shlb
or
add
xor
xor
pop
cmp
fistpll
fsubrs
sub
and
xchg
mov
push
add
lret
out
decl
lret
addb
dec
rolb
push
inc
add
pop
stc
mov
push
jno
xchg
cmpsl
ret
addl
jne
xchg
xchg
cs
int3
jno
mov
inc
push
je
sbb
insl
jbe
roll
sbb
add
add
imul
mov
test
dec
and
ljmp
test
lods
pop
adc
hlt
lods
sti
lret
ja
sub
fstps
insl
pop
jmp
push
bound
xchg
pop
rol
cli
fildll
mov
sbbb
sub
push
ljmp
mov
fdivs
es
inc
movsl
test
jns
mov
and
xchg
xor
pop
ret
xor
sub
fiaddl
fs
ret
mov
lock
lret
push
ss
xchg
and
ret
inc
out
or
lods
sub
pusha
fstps
push
popa
inc
mov
loop
adc
mov
and
aaa
jp
out
ljmp
sbb
lret
test
jmp
orb
sbb
dec
add
or
sbb
scas
test
jb
cmp
lods
add
and
sub
lahf
inc
fistpl
call
loop
cld
imul
mov
addl
sbb
inc
icebp
adc
adc
icebp
das
clc
lea
lods
cwtl
sbb
and
sub
xor
movsb
pop
bound
lods
fldl
fwait
push
inc
inc
mov
sub
clc
and
push
cltd
pop
std
ja
decl
ja
push
scas
dec
xor
add
cs
cmp
mov
ret
subb
mov
add
jne
pop
or
cmp
add
cmp
adc
aam
mov
sub
sarb
subb
cmp
pushf
aaa
cmp
jo
mov
lock
mov
and
mov
pop
jno
xor
loopne
pop
into
push
hlt
and
inc
scas
test
aam
ss
pop
test
hlt
xchg
mov
incl
adc
add
les
fildll
nop
mov
out
adc
lds
cli
sub
xor
pop
or
into
enter
or
and
xor
dec
mov
fdivrs
and
in
test
fbld
hlt
lcall
or
push
test
mov
lods
inc
pop
cld
push
loop
shlb
pushf
cmp
mov
fwait
cmp
stos
push
rcrb
and
ljmp
lds
enter
mov
xor
mov
ret
inc
fldcw
lock
inc
cltd
add
sbb
hlt
fdivrl
lock
push
test
outsb
cmp
push
inc
jae
fcmove
push
loope
insl
bound
sub
lahf
ret
sbb
jg
pop
xor
adc
mov
lods
dec
in
xor
mov
and
fidivrl
lea
dec
cs
inc
push
mov
movsb
insb
ficomps
into
nop
sbb
fsubl
leave
mov
pop
pushl
xchg
shlb
cmp
jo
push
fs
cmp
loope
fnstenv
mov
dec
jg
cld
inc
ja
mov
push
cmp
or
testb
jecxz
aas
outsb
jp
inc
adc
mov
mov
rclb
mov
and
mov
movsl
dec
into
test
pop
and
sbb
xor
sub
push
adc
lods
in
adc
insb
cmpsl
cmp
jno
orl
shl
jbe
sub
adc
mov
push
xor
scas
adc
adc
das
sarb
push
es
push
sub
push
pop
pusha
sub
out
sbbl
call
add
xor
adc
daa
inc
out
xor
cmc
xor
ret
out
dec
sahf
filds
in
mov
xor
stos
sbb
jg
pushl
test
push
pop
pusha
ret
mov
stos
fs
mov
outsl
push
cld
mov
mov
mov
test
daa
rclb
jge
mov
mov
push
rcrb
movsl
nop
mov
inc
push
sbb
fs
stos
std
mov
fidivs
push
adc
lret
in
push
xor
sub
push
jmp
outsb
pusha
loope
and
jle
jnp
jmp
jnp
sbb
pop
mov
popf
mov
jge
bound
push
mov
lock
pop
fs
mov
mov
sbb
and
test
pop
clc
adc
xchg
mov
push
mov
pop
inc
sub
arpl
mov
aas
or
push
dec
ljmp
and
decl
mov
add
orb
mov
test
fnsave
push
fdivrs
xor
ja
lock
jp
adc
cs
pop
and
push
jbe
pop
fisttps
outsl
pusha
movsb
sbb
dec
in
add
jle
or
sub
inc
subb
push
leave
lods
sbb
test
test
push
shlb
cmpsb
or
std
popa
dec
jmp
shlb
cli
es
shlb
subb
sbb
in
jecxz
sbb
fiaddl
outsb
loopne
hlt
jle
mov
decl
adc
or
dec
nop
cmpb
mov
xchg
push
xchg
enter
sbb
add
push
aam
dec
jl
test
nop
test
addr16
loop
and
fisubs
mov
adc
js
cmp
dec
pusha
int
mov
daa
inc
js
jno
rorb
inc
xor
test
cwtl
mov
push
insl
shrl
popa
enter
push
add
orl
jg
mov
test
add
cmp
scas
orl
cmp
je
lock
push
pushf
dec
mov
xchg
add
mov
fwait
xchg
stos
insb
ret
cwtl
imul
test
sbb
push
jb
ret
push
js
push
repz
jg
fistps
out
mov
add
lea
xor
jg
xor
lods
sar
call
or
xchg
or
icebp
mov
push
add
aam
imul
inc
cmp
das
daa
jo
incb
fwait
mov
mov
xchg
cli
jg
cltd
push
mov
xchg
mov
jge
std
loopne
mov
sub
jno
in
ljmp
std
sub
int3
cmp
ljmp
std
lea
mov
inc
mov
icebp
imul
movl
cmp
lcall
jecxz
cmp
clc
daa
jae
lods
mov
fs
incl
fstpl
mov
sub
aam
in
rorl
aam
fs
notb
popa
xlat
mov
mov
xor
or
mov
dec
mov
and
dec
inc
push
mov
or
je
lds
cmp
jl,pn
push
mov
dec
mov
mov
xchg
jo
shll
sub
push
inc
push
jns
inc
sbb
push
popf
sub
add
jecxz
addr16
decl
pushf
lds
mov
sbb
sbb
pop
loopne
or
dec
xor
mov
jbe
xchg
ret
popf
xchg
and
push
sbb
fildll
mov
mov
lahf
movd
int3
rcl
push
mov
cltd
add
sbb
pop
dec
test
add
lahf
popa
std
aaa
and
dec
es
int
pushf
test
push
std
decl
and
inc
loop
sbb
movsl
jno
cmpsl
mov
movsb
push
into
test
adc
jg
mov
jmp
int3
ret
in
pop
fbld
clc
jg
xchg
cmp
add
or
test
lret
cli
out
cli
xchg
in
push
psraw
out
das
rcll
clc
adc
push
push
adc
xchg
mov
push
mov
push
push
jno
out
jae
adc
jae
loopne
sahf
lea
call
js
movsb
jno
push
push
xor
fs
rcrl
and
xchg
jbe
pushf
lret
xor
insb
jge
mov
add
fldenv
push
bnd
add
adc
push
jmp
insb
or
dec
dec
push
push
cmp
inc
cmp
pop
lret
jg
cli
mov
out
lock
rorb
or
orb
daa
inc
jp
rcrl
pop
int
scas
jge
stc
cmpb
call
test
sbbb
sub
xchg
pop
push
push
lds
xchg
movsb
movsb
adc
cli
inc
incb
add
pop
adc
add
push
inc
mov
sbb
jno
xor
pop
icebp
out
stc
and
add
shrb
xor
ss
add
out
adc
lods
pushl
test
sbb
sub
sbb
repz
inc
pop
add
ljmp
out
dec
rcrb
cmp
pop
push
mov
stc
adc
and
fbld
jmp
inc
adc
and
mov
shrb
push
sahf
add
add
pop
push
push
sarl
call
aad
fsubs
setge
in
sub
call
sahf
popf
mov
push
lcall
daa
pop
xor
mov
inc
jge
insl
les
ret
mov
orb
mov
fninit
mov
test
fisttpll
inc
xor
fsubl
push
xchg
call
cli
inc
mov
ds
mov
aas
jle
and
push
ljmp
pusha
cmc
cmp
cmp
lcall
jmp
ret
insb
aam
push
dec
and
fisttps
dec
jp
nop
cmp
dec
push
cs
mov
aaa
add
ds
sbb
fldt
and
loop
adc
xchg
or
ret
jg
inc
pushw
and
inc
aaa
fst
push
rorb
xlat
fidivs
dec
ss
adc
sub
inc
shlb
xchg
mov
mov
test
pushf
inc
cs
test
incl
orb
lock
sbb
aam
ljmp
inc
or
lret
pop
lock
je
cmp
or
mov
jle
gs
fstpt
js
lock
arpl
xchg
xchg
pop
add
lret
test
lea
movsl
scas
pop
sbb
mov
mov
pop
hlt
jle
jl
xor
scas
into
add
rcll
testb
je
out
jmp
dec
insb
adc
jg
inc
sub
push
es
sbb
push
push
cmp
leave
inc
jnp
es
mov
out
lret
add
xchg
sub
test
add
stos
fs
xor
fs
lcall
xchg
or
inc
xor
or
loopne
in
jp
xchg
or
and
push
mov
xchg
adc
cltd
sub
jg
sub
adcb
adc
fists
out
je
cmp
dec
repz
adcb
and
stos
push
or
push
jle
push
add
dec
rcll
mov
arpl
mov
insb
push
push
pop
add
add
es
jp
cmp
sub
dec
xchg
loope
dec
gs
std
incl
hlt
xor
loopne
inc
push
xchg
sub
dec
push
ljmp
push
in
lcall
dec
mov
cmp
cmpb
pop
std
sub
or
ss
bound
jecxz
dec
inc
mov
jae
xor
cli
mov
popa
sbb
sbb
xchg
adc
ffree
pop
add
cld
mov
sub
mov
sub
xor
scas
pop
sbb
lods
sub
xor
xor
aam
test
lds
std
outsl
cmpsb
es
mov
push
movl
ret
mov
jmp
in
xlat
jl
jp
dec
fisttpl
in
jmp
lahf
sbb
movsl
add
les
call
stos
cmp
lock
pop
jl
les
hlt
jb
imul
xchg
or
pusha
cmpsb
aas
xor
adc
fdivs
subb
lods
call
mov
inc
int3
xlat
xchg
jno
and
mov
push
addl
insl
mov
std
sub
mov
out
cld
dec
repnz
jp
outsb
notl
sub
adc
mov
je
incl
mov
stos
aad
or
inc
popa
or
aas
mov
testl
sbb
pop
sub
mov
test
push
add
or
mov
ficompl
add
add
sub
mov
decb
or
mov
lret
iret
cld
jg
xchg
dec
jno
fndisi(8087
cld
ds
test
push
sub
sbb
xor
in
mov
ret
jae
dec
pop
aaa
std
pop
jg
pop
cwtl
mov
mov
rcl
cmp
xchg
and
das
ret
jg
mov
in
fstpl
add
cmpsl
lods
push
dec
inc
or
test
hlt
decl
inc
jecxz
mov
shrb
adc
in
in
inc
push
adc
test
sub
xchg
adc
decl
imul
ds
mov
cld
and
adc
test
jbe
sahf
stc
scas
add
scas
sarb
jl
or
and
arpl
add
adc
hlt
lret
xor
gs
mov
sbbb
je
imul
sub
or
or
test
jge
sub
mov
add
cmp
movl
sti
fbstp
xchg
xchg
sub
test
or
cmp
cmpsl
and
icebp
jg
xor
cltd
or
xchg
and
add
jge
out
sbb
jge
add
add
xor
movsl
sub
pop
add
add
sub
mov
orb
sarb
or
mov
cld
stos
push
jmp
mov
pusha
xor
in
js
jg
and
cmp
into
lea
mov
iret
push
ret
rolb
pop
mov
shr
dec
mov
jno
xor
dec
fadds
fstl
cmp
jmp
in
dec
jmp
icebp
push
bswap
insl
add
lahf
arpl
cmp
decl
in
cmpsb
fstps
mov
sarl
add
cli
dec
ss
sub
xchg
mov
adc
sbb
pop
test
push
rcrb
movsb
aas
add
movsl
sub
lds
sbbl
std
pusha
dec
mov
or
iret
rep
and
push
jge
and
push
fldt
faddl
in
inc
pop
cmpsl
adc
insb
ljmp
addb
dec
rorb
movsl
xchg
dec
test
sahf
sub
lock
orl
inc
icebp
scas
sub
dec
mov
sub
repz
cltd
stc
icebp
decl
add
add
cmp
ret
jbe
or
inc
pusha
jmp
inc
add
aas
inc
ss
mov
add
pop
or
mov
and
or
xchg
fldl
pop
fldt
or
add
filds
shlb
dec
ja
out
rorb
cmp
ds
mov
rorb
and
js
mov
ljmp
in
jnp
es
dec
out
push
sub
rcrb
inc
adc
cltd
xor
cmp
out
lret
loopne
int3
popa
jb
incl
inc
and
inc
aaa
push
add
fists
add
insb
or
loop
sbb
cltd
hlt
into
sar
jge
mov
shll
sahf
or
ja
data16
sbb
dec
adc
adcl
xor
jecxz
repz
mov
inc
jo
inc
adc
notl
push
dec
addb
leave
push
mov
clc
pop
mov
or
int3
aaa
xchg
test
stos
and
fcoml
or
lock
mov
sbb
test
data16
sbb
mov
inc
mov
loopne
dec
into
mov
dec
pusha
clc
dec
in
stc
and
fwait
add
lock
aas
cmp
mov
es
incl
incb
xorb
mov
sti
push
repnz
push
push
ss
xor
sub
cmpsb
mov
push
incl
inc
test
ljmp
sbb
or
sbb
pusha
into
adc
clc
rcr
xor
jno
jo
xor
dec
adc
add
icebp
dec
fbld
cli
gs
sub
push
data16
pusha
add
ljmp
adc
mov
mov
ret
inc
shrb
mov
mov
add
dec
dec
movsl
fistpl
push
test
inc
mov
and
xchg
pop
movsb
add
push
das
xchg
jl
call
mov
mov
pusha
lods
xor
jle
mov
jnp
add
es
sbb
mov
fs
adc
nop
sbb
adc
inc
rorl
dec
pop
je
rcr
nop
lods
xchg
push
rol
icebp
inc
decl
es
mov
pop
ss
cld
call
push
cmpsb
shr
pop
or
cmpsl
push
adc
sbb
movsb
movsb
jmp
push
call
xchg
push
push
fidivs
lock
add
pop
cmp
mov
ja
movsl
mov
mov
shlb
mov
decl
andb
sub
inc
test
adc
loop
movl
pop
lods
clc
xor
xchg
sbb
and
dec
xchg
mov
mov
mov
fmuls
repnz
push
scas
aam
ror
mov
xor
clc
xchg
jns
pop
cmpb
cmp
add
daa
jbe
dec
pop
dec
lods
adc
lock
inc
mov
aad
ljmp
jmp
sbb
adc
inc
sbb
fs
js
pop
nop
pusha
cmp
aam
test
dec
jo
popa
icebp
gs
mov
scas
push
lock
lods
adc
xchg
and
xchg
repnz
inc
mov
pop
add
add
pop
lea
loop
je
add
or
cmp
xor
aad
imul
dec
clc
repz
push
xlat
rcrb
mov
hlt
fildll
or
xor
dec
divb
leave
mov
fimull
adc
dec
pop
adc
mov
mov
jb
in
fdivr
push
and
jl
and
sbb
test
aas
fcomp
inc
sbb
xchg
pop
out
stc
out
aaa
add
pop
nop
add
mov
out
movsl
mov
scas
adc
fwait
xchg
and
jl
add
mov
sbb
jg
aad
nop
or
sub
sub
js
and
lods
adc
ret
nop
mov
jg
jmp
jle
sbb
rol
xor
movsl
clc
mov
mov
out
pusha
sub
xchg
adcb
add
push
sarb
pop
rcl
or
push
fs
cld
or
scas
pop
mov
mov
mov
add
in
repnz
xor
sub
dec
cmp
ss
mov
jns
or
nop
xchg
or
add
inc
outsb
add
dec
pop
pop
mov
fcmovne
and
or
xlat
cltd
xor
mov
mov
add
nop
fs
std
sahf
popf
cli
push
lea
loop
ljmp
inc
pushf
push
mov
adc
add
mov
add
add
sbb
inc
aam
inc
cmp
mov
lcall
ficoml
scas
shl
fwait
adc
add
std
sub
push
shll
sub
sub
cli
or
jl
cld
out
loope
adc
lds
adc
mov
mov
xchg
in
and
aam
aad
jl
ret
sbb
add
adc
bound
mov
xchg
add
push
insl
jne
pusha
ja
ljmp
insl
in
push
mov
push
je
xchg
cmp
stos
hlt
aaa
push
movb
xchg
adc
cmp
in
shl
push
orb
jo
xor
test
mov
adc
push
pop
add
and
repnz
cld
das
and
ret
sbb
push
push
loope
cmp
movsl
dec
rorl
das
mov
mov
mov
xchg
adc
js
sub
ret
aas
mov
cmp
xchg
repz
add
aas
pop
cmc
hlt
or
add
icebp
mov
mov
xchg
outsl
push
xchg
test
mov
add
mov
xchg
jp
loopne
inc
fadds
ljmp
cmpsb
adc
push
and
gs
movsl
loopne
icebp
inc
adc
sbb
or
bound
xor
lahf
and
push
inc
add
mov
jp
enter
addr16
mov
mov
imul
mov
push
pushl
push
ljmp
adc
adc
int3
ja
and
pushf
outsl
and
adcl
pushf
push
cld
pop
xchg
and
sub
je
xorb
pop
jp
inc
test
sub
mov
adc
outsl
mov
sti
test
scas
mov
push
nop
sub
and
xor
sbb
cmp
lret
mov
mov
push
and
push
mov
loope
mov
mov
mov
lret
sub
sub
fildl
pop
call
insb
push
mov
xchg
and
std
fsubl
cli
enter
cli
inc
sbb
lret
xchg
adc
out
data16
push
test
xor
cmp
stos
adc
or
decl
push
test
test
lods
fadds
aad
adc
jle
xchg
sub
and
rep
and
or
inc
incl
sub
ss
sbb
std
daa
outsl
ret
mov
sub
adc
or
pop
push
fidivs
inc
pop
mov
movb
dec
or
mov
jg
sbb
cld
push
xchg
dec
add
or
cmp
xchg
adc
pop
jg
adc
mov
dec
adc
ss
fs
dec
clc
mov
push
mov
orl
flds
and
call
shlb
clc
mov
loopne
mov
xor
ret
xor
pop
es
cmp
push
cltd
aam
clc
mov
in
jp
aaa
rcl
cmpsb
pop
inc
fidivs
decl
cmpsl
mov
hlt
jg
movsb
or
or
hlt
jnp
lock
push
push
jbe
push
popf
pop
data16
pop
sti
add
mov
lret
dec
aas
mov
fcos
ja
mov
popl
movsl
divb
test
loopne
inc
leave
js
xor
inc
dec
movsb
cmp
xchg
movb
ret
repnz
jecxz
aaa
ffree
int
sbb
adc
mov
cli
fld
aad
stos
ljmp
dec
or
popf
inc
out
js
sub
xchg
stc
cwtl
xor
sti
out
jb
movsb
adc
arpl
fwait
sbb
mov
push
fs
ja
imul
xchg
jp
lea
jmp
mov
dec
mov
cmpsb
jg
ljmp
jbe
pop
xor
fmuls
inc
cld
insb
test
std
aaa
cld
ljmp
jg
cmc
or
shll
shlb
test
iret
pop
jmp
pop
clc
sub
or
je
clc
fcomip
pop
lds
pop
xchg
sbb
addb
sbb
ret
js
lds
xchg
lret
outsl
and
dec
in
js
es
push
mov
pop
xchg
cmp
dec
xchg
sub
mov
push
in
lret
rcrl
mov
xchg
and
xor
jg
call
leave
addr16
push
add
pop
pushf
das
shll
jecxz
mov
jno
sbb
ljmp
cmp
mov
add
adc
mov
push
add
clc
cmp
cmp
aam
sbb
cld
pop
mov
cmp
movsb
rolb
ds
orb
mov
and
clc
xchg
jecxz
adc
das
rolb
mov
sub
sub
in
mov
movsl
xor
std
pop
push
jnp
jo
xor
scas
cmpsb
mov
xor
cmpl
jo
ja
icebp
std
ljmp
cwtl
and
or
lret
aaa
xchg
and
sbb
sbb
arpl
nop
pop
mov
cwtl
xor
pop
push
and
shlb
lret
mov
cmpsl
or
mov
out
or
jecxz
das
sbb
repnz
cld
call
jl
nop
jbe
push
inc
insb
aad
test
xlat
imul
shlb
mov
mov
pop
push
into
mov
jmp
loopne
xchg
scas
sbb
mov
clc
push
cwtl
mov
mov
sbb
or
bound
add
gs
mov
add
sub
pusha
shll
add
fstpl
dec
dec
subb
loope
and
clc
sbb
insl
pusha
scas
mulb
sbb
pop
push
fsubl
fbld
pop
in
push
inc
and
cs
test
call
lock
test
inc
add
movsb
mov
push
cld
out
and
outsl
inc
cs
xchg
push
jp
pusha
rclb
sbb
call
dec
loope
mov
jge
sub
add
mov
clc
vxorps
cmc
into
mov
stos
push
in
jbe
jp
call
loopne
jne
xchg
cmp
pop
add
into
push
adc
mov
or
dec
sbb
je
and
jo
out
xor
mov
sbb
leave
xlat
xchg
fimuls
pop
xor
test
imul
sbb
push
add
inc
add
pusha
loope
jl
or
or
hlt
adc
in
inc
dec
inc
cld
std
fistpl
add
add
sbb
adc
sbbb
jle
mov
loope
cmp
pusha
clc
mov
or
or
adcl
in
pop
xchg
and
add
popw
xchg
mov
ror
incl
les
out
mov
cmp
scas
sub
lock
jo
xor
add
aaa
test
dec
inc
or
and
or
xor
loope
adcl
rcll
cld
pop
pop
fbld
enter
fildl
jno
or
pop
jle
sub
loope
sbb
call
cmp
add
dec
lock
icebp
xchg
sti
enter
movsb
in
punpckldq
push
add
jbe
add
jmp
xor
xchg
and
fbld
sbb
popa
and
xor
movl
scas
ret
mov
mov
jp
popf
adc
or
je
dec
mov
fildll
test
ss
pop
sbb
scas
cmpsb
and
add
add
rol
cmp
sti
incl
jle
mov
xchg
and
repz
in
adc
pop
enter
add
push
push
pop
dec
mov
xchg
lret
pushf
add
adc
add
mov
sbb
push
mov
push
mov
jg
mov
ret
and
sub
xor
ljmp
sbb
ljmp
cmp
add
jae
adc
data16
lcall
jo
inc
sbb
inc
or
push
pop
mov
cmpl
aam
ljmp
rcl
mov
cli
push
ret
add
inc
mov
rcl
mov
mov
notl
or
sub
test
loope
inc
jmp
add
pop
pop
xor
bound
jp
cmp
sbb
add
mov
shrl
call
movsl
cmc
mov
pop
rorb
mov
leave
cmpb
mov
or
push
cmc
outsl
clc
enter
dec
push
vmread
enter
mov
nop
pushf
xchg
loop
fcompl
outsb
popa
roll
sbb
cmp
mov
and
mov
and
xchg
incl
pop
pop
add
andl
test
fimull
outsb
xchg
ljmp
movsb
cs
dec
imul
test
movsl
fistl
arpl
cmpsl
pop
push
sti
jo
mov
insl
loopne
add
push
sub
jp
sub
push
daa
movsb
stos
xchg
cmc
jg
hlt
or
mov
pop
enter
jo
std
sub
stos
mov
push
cmpsb
adc
mov
mov
stc
pop
ret
push
inc
mov
jecxz
cld
cmp
decl
stc
fidivrs
test
pop
xchg
stc
pusha
imul
lcall
inc
push
mov
push
fmuls
fcoms
test
jl
je
mov
sar
icebp
es
iret
out
add
lcall
sub
aaa
out
ljmp
sub
aaa
push
loope
sbb
jge
scas
jb
and
dec
icebp
and
dec
sub
mov
sbb
fldcw
xchg
fmulp
lret
test
repnz
decl
dec
push
in
icebp
dec
mov
aaa
or
and
aam
xchg
sti
call
in
cmpsb
and
adc
out
sbb
xchg
ja
ja
mov
popa
jle
lret
in
push
adc
mov
cmp
fstpl
aaa
imul
and
xchg
stc
jb
push
jp
inc
lcall
insl
fs
jl
nop
add
sub
loop
dec
call
add
xor
cmp
cmpsb
mov
leave
mov
mov
es
clc
inc
and
movsb
out
cmp
or
dec
repnz
orl
ljmp
pop
mov
scas
push
adcl
repnz
lds
or
xor
xchg
or
bound
xor
in
fcoms
xor
xlat
rcll
jecxz
fs
je
dec
out
inc
adc
adc
and
jg
call
or
mov
mov
mov
adc
mov
sbb
jecxz
je
adc
scas
xchg
xchg
loop,pn
pop
mov
jnp
pop
pop
add
fildl
stos
call
mov
add
sbb
lods
sub
jg
cmc
cs
stos
mov
idivl
fwait
sar
lahf
or
and
mov
jae
cmp
cmp
jb
sbb
xchg
cmp
jg
cmovne
int
incl
xchg
faddl
add
or
lea
sbb
sbb
cwtl
pop
orb
inc
fwait
in
roll
pop
cmp
fiadds
xchg
push
or
mov
fucom
cltd
xlat
les
jmp
jecxz
adc
mov
jmp
xchg
nop
mov
and
decl
je
outsb
lret
push
push
sbb
nop
sarb
inc
call
inc
stc
xor
fistps
lds
mov
adc
scas
xor
jb
bound
int3
jne
xlat
mov
mulb
movsl
ret
pop
cmp
imul
mov
lock
jo
in
cmp
xchg
jge
xor
adc
xchg
in
popf
pop
dec
push
aaa
call
out
std
mov
jbe
test
add
and
mov
or
out
adc
cmp
adcw
sub
mov
insb
andb
xchg
inc
fbld
dec
mov
cmp
cmc
fs
adc
or
js
or
xchg
adc
test
clc
ret
or
enter
aam
lock
clc
jmp
mov
cmc
test
jmp
jmp
and
xor
add
mov
imul
fistl
sbb
push
cld
sbb
add
and
mov
shrl
sbb
fs
push
or
and
jae
mov
cmp
rclb
or
mov
pop
dec
push
scas
cmp
test
addb
pop
mov
cmp
add
jecxz
pop
mov
faddl
sbb
pushf
xchg
push
shlb
sub
push
repz
adc
push
mov
pop
sub
dec
jl
inc
jo
xchg
sub
pop
sub
les
and
pop
hlt
fadd
out
mov
repnz
cld
pushl
cld
jp
xor
ror
xchg
sbbl
cltd
push
or
sarb
mov
xor
sbb
push
loope
imul
jmp
fcomp
mov
pop
lds
test
inc
sbb
scas
push
sarb
cli
fcoml
popa
and
dec
or
sub
cli
or
insl
js
add
or
lock
or
mov
adc
lea
add
cmp
add
mov
mov
xorl
add
cmp
xchg
jns
aad
adc
sbb
jg
cld
sbb
and
push
gs
add
out
adc
cmp
pop
adc
add
jns
or
add
ljmp
add
shl
lock
inc
mov
jnp
loopne
jne
xorb
mov
adc
out
cs
dec
sub
aad
dec
or
mov
add
mov
or
jb
xchg
sbb
cmp
inc
pushl
push
fwait
popf
dec
cmp
mov
je
es
pop
loop
adc
push
sti
lea
loope
outsl
push
pusha
loop
adc
and
fs
cmpsb
push
jmp
lret
rcrb
mov
mov
lods
enter
js
popa
rolb
add
rolb
add
xor
jp,pn
test
lea
ret
mov
xor
pop
push
inc
repz
sahf
subb
icebp
cmpsb
lock
loope
add
ret
outsb
rcll
loopne
mov
ficomps
call
mov
ljmp
scas
xchg
shlb
and
mov
lods
xor
sar
incl
mov
cmp
sbb
adc
aaa
sub
sbb
dec
mov
jg
mov
dec
sub
cmpb
or
sbb
jle
insb
pop
fcmovb
mov
fucomi
sub
scas
mov
xchg
in
or
push
inc
cltd
hlt
pop
jge
addb
loopne
sub
and
dec
jle
cmc
push
orl
cs
out
iret
ss
mov
add
adc
stc
arpl
lods
jg
cmp
cmp
mov
jns
jae
mov
or
fwait
scas
mov
addb
sbb
add
clc
xchg
xor
jb
jb
sbb
scas
mov
push
mov
aaa
mov
js
outsl
lcall
sbb
out
xor
pop
hlt
notl
dec
std
lahf
or
js
push
lret
jmp
or
sbb
int
dec
and
lret
stos
lea
movsb
jmp
fldt
jp
cmp
mov
mov
lcall
out
or
arpl
outsb
sbb
mov
pushf
sahf
pop
ror
mov
adc
push
fld
sbb
add
push
jne
mov
ss
xchg
inc
movsl
and
mov
cmpsb
dec
sub
add
fisubl
fwait
lock
mov
inc
xor
test
cs
aaa
in
adc
sub
cwtl
rcl
push
dec
sub
movsb
add
inc
outsl
push
mov
xchg
mov
adc
fmull
adc
call
add
sbb
out
mov
xor
sbb
xor
inc
cli
aaa
cwtl
rcrb
cwtl
nop
lods
arpl
xor
insb
mov
sarb
out
lock
sub
lret
mov
push
outsl
cmp
and
pop
adc
xchg
xchg
call
jp
cltd
and
sbbl
jge
add
inc
cmpsl
lock
adc
test
xchg
enter
aaa
push
ds
clc
add
cmpsb
in
cwtl
jmp
cwtl
ret
sub
sahf
cld
or
call
decb
lods
cld
mov
xchg
sbb
cmp
xchg
rcr
push
and
out
test
leave
fcoml
loopne
sbbb
xchg
add
mov
jg
adc
cmp
mov
cmc
push
add
inc
jmp
xor
pusha
add
js
sub
daa
sub
adc
addr16
pop
mov
aas
mov
ds
pusha
push
fisttps
outsl
fdivrl
xorb
ljmp
cwtl
cmp
push
or
add
jb
clc
pop
sbb
jg
pop
or
dec
rol
push
in
and
sbb
test
add
cld
mov
pop
push
inc
or
mov
mov
fsubrs
push
adc
push
sbb
mov
ljmp
mov
inc
testb
das
je,pt
pop
test
inc
adc
mov
add
cmpsl
bound
lcall
fnstcw
mov
sub
sbb
cli
pop
int
pop
inc
loopne
lcall
sub
hlt
outsb
jge
out
pushf
jecxz
and
push
jmp
aaa
subb
jbe
cmp
lock
daa
call
in
cmc
data16
scas
lds
ret
or
or
mov
add
sbbb
and
jbe
insl
je
adc
repnz
sub
pop
js
mov
xchg
bound
pusha
mov
mov
inc
pop
in
incl
xor
in
inc
jnp
jbe
pop
adc
fstpl
inc
add
rclb
xchg
ds
inc
ds
jp
sub
jo
pusha
sar
pushf
cmp
dec
pop
loop
push
mov
lahf
sahf
push
adc
push
fsts
dec
lock
jge
outsl
or
xor
ret
sti
je
add
mov
imul
jl
lock
in
add
mov
les
outsb
xor
in
nop
outsb
or
decl
cmp
and
ret
stc
in
mov
mov
mov
shlb
pop
dec
dec
ret
out
inc
xchg
decb
push
mov
jb
rcrb
sti
jge
inc
sub
hlt
add
incl
pushf
in
cltd
dec
jno
add
jl
add
fwait
aam
pop
rol
adc
jp
scas
inc
push
mov
mov
enter
jle
cwtl
add
jb
add
push
push
faddl
push
mov
xorb
xlat
mov
movsb
shrb
xlat
data16
incl
ljmp
insb
cmpsl
test
cmpxchg
push
add
sbb
lods
pop
jecxz
push
jle
loopew
adc
cli
or
add
mov
pusha
pop
push
sub
adc
push
les
mov
add
add
dec
lock
int
ret
ljmp
popf
or
adc
js
movsb
add
or
xchg
sti
mov
jne
shrl
je
cmp
or
aad
inc
cmpsl
xor
iret
pop
pop
decl
mov
stos
jbe
adc
jbe
xchg
dec
xor
adc
sub
or
std
add
cld
stos
scas
and
xor
mov
nop
push
in
jmp
jle
xchg
add
add
push
adc
fidivl
loop
jg
scas
cmp
inc
mov
inc
jo
je
add
jp
xchg
and
cli
jmp
sti
mov
scas
and
xor
pop
pusha
cmc
xor
cmc
add
sbb
mov
call
and
jg
lea
or
pop
sub
in
lds
clc
jg
or
adc
call
adc
xchg
int3
sbb
push
push
sub
sar
inc
int3
mov
mov
and
js
jb
cltd
int3
push
lahf
sbb
xlat
movl
outsb
sbb
push
shlb
inc
andb
mov
js
push
push
xchg
jle
aas
test
adc
xchg
dec
sysenter
popa
dec
fucomip
cli
mov
stc
adc
inc
jmp
xchg
sbbb
push
sbb
xchg
lcall
push
and
icebp
or
pop
pop
loopne
xor
xchg
cmpsb
mov
and
stc
jb
pop
outsl
fsts
clc
incl
mov
jae
xor
and
jne
dec
bound
int3
xchg
xchg
enter
fwait
mov
inc
int
movsb
jbe
mov
mov
add
scas
test
xorl
pop
mov
std
push
cli
or
enter
shrl
cmp
push
lock
jb
aas
data16
call
jbe
ficomps
add
pop
adc
scas
mov
sarb
lcall
cltd
lcall
mov
loopne
mov
les
sti
aas
adc
adc
popa
xor
adc
mov
lods
pusha
mulb
lock
add
ficomps
fstpl
fcoml
insl
push
sbb
xchg
sbbb
mov
xchg
ficoms
and
jp
sub
jb
cmp
xchg
cmp
push
sub
inc
and
sbb
mov
scas
xlat
add
push
shll
std
mov
mov
and
pop
movb
sub
dec
stos
xor
stc
inc
pop
xor
push
adc
sbb
aaa
and
in
cmp
add
and
jle
xlat
sbbl
cld
aas
mov
fisttpl
aas
mov
or
call
and
je
fisubs
pop
mov
test
cmp
sbb
dec
loop
xstore-rng
cmpsl
test
jns
out
xchg
pop
and
ljmp
sbb
xor
cli
xchg
mov
mov
fldl
out
andb
clc
push
push
cmpl
mov
cmp
es
and
sbb
and
icebp
ljmp
idiv
decl
add
cmp
or
and
push
add
movsl
pop
push
mov
iret
sub
popa
pop
incl
lock
js
push
int3
aad
mov
lea
jg
js
adc
fsubr
push
cmpsb
outsb
xchg
ss
adc
bound
cmpl
arpl
call
inc
loope
ja
std
jp
cs
ljmp
clc
jg
mov
pop
jnp
rolb
mov
sub
iret
or
ss
sub
cltd
sar
inc
cmp
fdivrl
xchg
sub
jbe
adc
das
add
add
pop
insl
push
xor
insl
adc
scas
gs
cmpsl
jb
xchg
nop
pushf
roll
inc
in
push
jb
push
loope
lcall
dec
call
addb
sbb
xchg
subl
sbb
ss
cmpsb
stos
mulb
xor
scas
jle
loope
in
in
in
or
jo
in
ss
aam
jb
mov
loope
scas
xchg
xor
mov
inc
xchg
sub
sbbb
inc
push
mov
xor
scas
cmpsl
inc
xchg
inc
movsl
fidivl
sbb
lcall
les
or
hlt
mov
dec
sub
test
mov
insb
xor
push
or
xchg
test
cmc
scas
jmp
stos
sbbl
and
rcrl
lret
mov
clc
ljmp
jp
decl
out
inc
into
test
adc
out
ror
cmp
imul
or
sub
xor
and
and
lock
aas
push
push
mov
lods
enter
insb
cmp
imul
or
pushf
loopne
push
dec
mov
xchg
mov
mov
das
xor
movsb
sub
add
scas
pusha
into
xor
or
pop
dec
mov
mov
outsb
inc
sub
sahf
lods
call
pop
je
adc
psubw
fcomip
jg
jp
mov
sub
or
jg
movsl
pushl
and
jp
pop
cwtl
outsl
lods
inc
pusha
lods
inc
aad
add
pop
in
rorb
das
dec
pop
hlt
sub
inc
xor
jbe
inc
jge
cmpsl
icebp
cmp
mov
ret
push
lds
je
test
js
xchg
test
mov
inc
sbb
aam
xor
lds
and
adc
lods
popf
and
mov
ljmp
jl
jle
or
imul
into
or
or
idivb
mov
test
push
bound
cli
mov
add
add
jnp
lret
mov
lea
shll
push
xor
sub
cld
sub
push
sbb
int3
mov
adc
sbb
mov
clc
or
jg
xchg
and
mov
sub
pusha
cmpsl
lret
mov
repz
xor
aad
test
fwait
fwait
mov
push
mov
inc
ljmp
mov
adc
pop
aaa
ret
ljmp
std
dec
dec
popa
push
movsb
popf
cltd
pop
clc
mov
clc
cmpb
jns
adc
push
cmp
jle
insb
cmp
sbbl
int3
pushf
xchg
lcall
jo
in
dec
js
cmp
push
push
mov
push
test
aaa
outsb
push
pop
push
stos
adc
leave
push
adc
jg
xchg
fimull
jne
xchg
das
sub
movsb
out
nop
push
ss
mov
inc
in
add
shll
bound
mov
andb
insl
shlb
aas
dec
ljmp
cli
dec
js
mov
in
mov
in
movb
and
mov
sbb
inc
mov
xchg
cmc
idiv
push
xchg
ret
add
into
ficomps
mov
ljmp
jmp
jne
fwait
mov
or
add
ffree
loope
rcll
jp
hlt
lret
jnp
lds
mov
hlt
pop
or
mov
push
push
xlat
xor
imull
push
jns
dec
test
ffree
lahf
push
pop
xor
mov
idiv
out
mov
lds
out
xor
pop
mov
push
enter
dec
mov
mov
test
dec
adc
push
inc
add
insb
or
fistpll
lret
and
push
mov
popf
jg
repnz
frstor
mov
push
xor
or
pop
mov
insb
or
icebp
jge
jle
and
call
push
cmp
push
mov
pop
ljmp
popa
push
aam
imul
ja
mov
jle
stos
dec
push
cmpb
xor
popf
push
mov
jnp
dec
sub
mov
xor
and
rcll
lret
dec
adc
mov
push
and
jmp
inc
sub
outsl
xchg
and
add
out
lret
lret
hlt
xor
add
sub
mov
fcomip
call
cmp
mov
es
fs
dec
inc
mov
and
push
xchg
sbb
roll
add
xor
pop
arpl
clc
ds
push
xchg
inc
mov
sbb
dec
test
subl
jne
sahf
or
jo
sarb
sarb
popa
push
nop
push
xchg
test
int3
or
ja
movsl
jo
fwait
out
and
mov
inc
cld
jbe
js
inc
dec
add
fisttpl
fs
dec
jl
scas
pop
shll
and
dec
fbstp
cmpsb
loope
fiadds
push
add
or
dec
sub
cmp
mov
mov
aam
mov
call
pop
cwtl
push
sub
jmp
in
test
ja
or
pusha
xchg
out
xchg
sub
inc
lcall
mov
and
cltd
cmp
mov
std
xchg
popf
stc
es
clc
out
enter
std
outsl
clc
loopne
sub
pop
inc
mov
xor
jp
loopne
push
sub
jmp
inc
and
cli
loopne
and
gs
lds
push
push
push
loopne
sub
in
sbb
jo
mov
inc
dec
and
aad
mov
mov
fstps
pop
push
pop
add
push
xchg
std
fists
push
test
cmpsb
mov
loop
sub
push
push
or
fldt
add
add
mov
ret
aaa
pop
jecxz
inc
sub
popa
fdivr
stos
lahf
popa
into
ss
lds
add
push
je
adc
add
mov
aam
jmp
cld
inc
pushl
mov
sub
pushf
xchg
test
orb
sub
sbb
loopne
fistpll
movsl
filds
adc
hlt
test
pop
add
mov
mov
mov
add
js
js
push
adc
xor
inc
pop
dec
jle
xlat
pop
and
test
and
pusha
and
rcr
rorb
push
and
outsb
adc
pop
mov
jno
push
xor
mov
push
jb
pop
loopne
movsb
pop
cmpsb
lcall
repz
inc
mov
inc
scas
mov
es
add
and
imul
sbb
pop
or
lods
dec
cmc
lcall
xor
push
xor
pop
cld
addl
jno
inc
adc
ret
outsl
mov
add
xchg
mov
cli
outsl
push
cmc
or
add
cmpsl
in
aas
outsl
sub
ljmp
inc
decl
adc
test
jmp
xchg
xchg
outsl
cli
pop
ret
adc
mov
rcl
fiaddl
fsqrt
jne
inc
sub
outsb
add
test
dec
push
xchg
cmpsb
lock
inc
inc
fidivl
sbb
or
xchg
sbb
fadd
dec
lea
stos
mov
push
sbb
stos
push
mov
or
idiv
mov
dec
insb
orb
mov
insb
mov
aam
sbb
push
mov
add
sub
push
sbb
push
faddp
push
mov
ljmp
or
inc
sbb
mov
xchg
inc
sahf
in
addr16
addl
flds
aam
daa
incl
xchg
add
pop
arpl
or
mov
jmp
push
mov
sbb
sbbb
or
cmc
insb
mov
rolb
adc
fwait
jp
inc
xor
push
xlat
idiv
pop
fs
arpl
fwait
sbb
add
js
or
sub
ljmp
adc
insb
xor
inc
push
fimull
mov
inc
push
call
insb
out
fs
mov
ljmp
das
cmpsb
sub
push
arpl
cli
sbb
sarb
repnz
sar
andb
xor
xchg
inc
xchg
call
xchg
cmp
sbb
lock
mov
push
sub
in
xchg
sar
mov
ss
lcall
es
aad
gs
add
movsb
jmp
loopne
pop
divl
lods
ret
jp
add
jmp
inc
mov
cmp
or
sarb
sbb
ja
mov
or
out
mov
pop
gs
cld
mov
inc
dec
in
jnp
jnp
pop
arpl
movsl
lds
push
and
push
and
jmp
and
ds
roll
xor
push
cmc
jg
and
add
andl
lea
sbb
movsb
jmp
orl
ljmp
loopne
inc
ret
jecxz
xor
rcr
sub
lcall
mov
std
outsl
call
popf
cs
mov
xorl
xchg
cwtl
scas
pop
inc
mov
push
xchg
jecxz
enter
lods
add
adc
pop
int3
popa
and
lret
lds
pop
jns
scas
add
out
push
jb
fwait
bound
sub
jg
popa
pop
adc
aas
sub
pop
enter
sbb
ljmp
dec
lcall
rcrb
decb
mov
loop
outsl
inc
lret
cs
inc
cli
rcl
arpl
jbe
stos
outsl
cmpsw
dec
push
or
push
pop
nop
add
adc
in
inc
inc
add
bound
jg
jmp
dec
adc
cmpsb
insb
push
mov
jmp
mov
or
xor
sbb
inc
cld
cld
stos
pop
je
stos
or
push
sub
in
xchg
cmp
pop
dec
rol
or
mov
mov
sbb
aas
pop
dec
pop
rcrl
mov
inc
mov
jno
add
in
iret
inc
sub
mov
mov
data16
push
fwait
adc
push
sbb
aam
dec
ficomps
lods
pushf
sub
pop
decl
or
sbb
aam
mov
mov
in
std
sarb
mov
imul
and
clc
outsb
dec
add
mov
data16
push
mov
push
enter
in
clc
jg
pop
inc
out
dec
daa
rorb
jl
sub
mov
je
aas
jle
incl
or
mov
or
nop
pop
jle
push
xor
fwait
sbb
lods
adc
xchg
sub
push
push
clc
mov
and
cmp
cld
add
xchg
stos
nop
sub
push
jne
xchg
xchg
sbb
jmp
pop
pop
sbbl
pusha
jg
cld
or
cmp
sub
xor
push
in
xor
popf
jae
add
mov
and
dec
in
mov
mov
dec
movsb
loope
mov
jge
sub
ds
loope
dec
adc
cwtl
push
add
dec
sub
mov
add
pop
movsl
mov
jg
mov
sub
mov
jle
icebp
inc
push
loopne
xchg
or
es
stos
mov
push
pop
and
shrl
mov
arpl
incb
movsl
mov
mov
xchg
push
sub
ss
unpcklps
aaa
sub
fstps
cld
outsl
jnp
adcl
cs
sbb
inc
out
lcall
stos
jo
scas
movsb
movsb
mov
test
gs
loope
and
sub
and
and
mov
jmp
js
mov
jmp
cmp
adcl
jmp
push
cli
mov
ret
ret
jp
imul
lods
jge
mov
sbb
pop
shll
add
pop
rorl
test
add
push
mov
add
xor
stos
fs
aas
aam
xchg
mov
stc
jge
jo
add
jmp
pop
hlt
incl
stos
insl
icebp
dec
test
fisubs
repz
sahf
pop
push
push
pop
test
sbb
push
clc
das
insb
popa
inc
pop
lods
sub
sub
in
repz
xchg
bound
incl
or
les
or
add
cmpsb
mov
cltd
dec
xchg
xorb
or
jmp
pusha
hlt
pusha
iret
into
cltd
sub
movsl
icebp
push
pop
cli
and
dec
nop
pop
xor
xchg
repnz
push
popf
and
dec
mov
push
incb
popf
mov
in
or
sbb
and
movsl
insl
lock
jns
nop
lock
shl
lea
mov
ljmp
jno
push
insl
inc
nop
dec
cld
fistps
cld
sub
pusha
loopne
sub
and
jbe
adc
xor
adc
movsl
mov
in
sbb
mov
mov
ljmp
push
sub
ret
dec
flds
sub
cs
scas
jmp
add
lods
test
jl
cld
ljmp
call
sbb
sar
add
repz
mov
fsubrs
fadds
insb
daa
pop
mov
sub
dec
int
pop
dec
xor
and
test
pushl
sub
add
sbb
cmp
loopne
nop
sbb
and
rcll
outsb
outsl
es
sbb
cmp
ficomps
lds
scas
mov
mov
pusha
and
sbb
jno
movsb
cmp
jl
inc
pop
call
ret
aad
incl
mov
mov
les
leave
testb
fsubs
sbb
nop
cld
or
xchg
sbb
mov
push
stos
aaa
movsb
ss
or
push
xor
lcall
movb
pop
jne
decl
inc
pop
inc
orl
mov
pop
stos
out
xor
push
outsl
clc
mov
imul
pop
mov
jle
sub
rcr
xor
andb
sbb
popa
stos
mov
std
aaa
cli
and
xor
jp
mov
xchg
inc
and
decl
pusha
mov
jns
push
mov
and
xchg
fldenv
jbe
lds
int3
test
and
aaa
xor
ljmp
or
jle
stos
mov
fcmovnu
push
mov
adc
inc
xorl
mov
sbb
icebp
or
movsl
jo
jae
rolb
and
dec
sbb
cwtl
mov
inc
dec
loop
pop
in
rcr
lock
add
jle
insb
mov
ret
adc
cmp
test
fisttpl
imul
push
mov
rolb
mov
inc
insb
adc
negb
and
jmp
mov
inc
dec
push
loope
es
sbb
fs
xor
sbb
paddq
jbe
mov
and
lds
lock
arpl
rolb
add
cmp
test
jg
push
addr16
nop
das
add
sbb
mov
or
sbb
lcall
sti
cmp
sbb
cmpsb
mov
cli
iret
add
mov
fs
data16
std
mov
shll
gs
push
test
or
pop
hlt
sbb
add
dec
adc
add
push
pop
ja
je
pop
in
add
add
pop
lock
cmp
mov
jg
inc
es
add
cmpl
mov
rcrb
push
xor
inc
xor
adc
fistpll
shl
jp
aad
cld
decl
and
cmp
jmp
xor
or
xor
cli
mov
adc
sbbb
addr16
dec
insb
rorb
jmp
dec
loop
adc
lods
popa
aad
lock
sbb
mov
jecxz
inc
pop
mov
jne
add
dec
dec
push
cld
inc
shlb
jl
lcall
mov
mov
ja
mov
add
in
fwait
pop
out
inc
add
xchg
fldl
mov
les
sbb
inc
xor
insl
mov
repz
cli
cld
pop
mov
sbb
jno
or
data16
inc
lahf
mov
push
mov
adc
add
fbstp
mov
int
xor
sub
and
push
inc
xorb
jno
sbb
rol
decb
adc
jle
int
mov
jne
mov
push
nop
mov
xchg
push
js
aam
addl
lods
pop
rorl
mov
mov
or
cwtl
loop
xchg
stos
fdivs
outsb
xchg
dec
push
ja
mov
or
mov
scas
mov
push
mov
push
pop
sbb
clc
imul
test
adc
xchg
cli
dec
jg
xchg
lea
pop
cmp
sbb
call
add
lret
and
xchg
pop
mov
inc
fdivrl
dec
loop
sub
pop
sub
ss
out
mulb
ss
addr16
xchg
push
xorb
xchg
dec
loopne
add
mov
push
int
mov
push
in
out
push
or
loop
lcall
pop
bound
cmp
or
mov
fadds
and
jecxz
sar
out
or
adc
mov
push
loopne
stos
fwait
movsl
aas
jg
inc
cwtl
sub
pop
adc
cmp
jg
and
jecxz
cmpsb
ja
leave
xor
lods
lahf
adc
stos
inc
pop
sub
push
rcrb
mov
lods
pop
inc
bound
aaa
movsb
std
fucomip
cmpsb
fimull
movsl
rcrl
jg
sub
pop
add
dec
in
bound
dec
pcmpgtd
jg
xchg
mov
fimuls
xchg
or
int
or
and
mov
dec
mov
movb
leave
in
add
mov
idiv
jg
cmc
jo
xor
pusha
sub
xor
dec
out
and
addb
lea
add
lret
flds
sub
and
clc
ret
popa
mov
aad
into
push
fsubs
add
nop
inc
push
sbb
cli
mov
out
pop
mov
or
jae
loope
inc
stos
les
mov
xchg
iret
xor
es
dec
jo
test
mov
or
pop
cmp
dec
clc
syscall
lcall
xlat
js
imul
and
fs
mov
aam
lret
or
mov
mov
out
ja
cli
xor
into
pop
mov
xchg
mov
enter
add
sub
pushf
das
iret
sbb
xchg
loop
cmpb
andl
cwtl
out
popa
inc
jg
xor
pop
xor
sbb
push
mov
inc
push
lock
test
mov
push
pop
inc
dec
inc
test
jno
or
pop
pusha
ljmp
fdivrp
movsl
push
out
dec
jno
fs
rclb
shl
outsl
idiv
shrl
leave
loope
inc
rcrb
or
imul
test
xor
jg
out
fs
xor
in
xchg
sbb
hlt
sbbb
xchg
adc
test
ret
cmpl
mov
push
jmp
sbb
pushl
and
fists
das
in
rcll
jo
adc
sbb
adc
das
jp
push
add
fs
xchg
sahf
cli
aas
sbb
xchg
jno
aas
rorb
testl
and
sbb
fucomi
lcall
xchg
enter
cmp
sbb
pushf
std
mov
pop
sbb
sub
rcll
inc
hlt
cmpsb
fld
or
pop
cmc
stos
add
mov
or
sub
jecxz
ss
hlt
pop
xchg
rorb
cmpsl
bound
ljmp
and
shrl
add
pop
and
adc
leave
sbb
jecxz
add
mov
push
outsb
nop
rcll
and
or
js
inc
sbb
and
ja
aad
out
adc
pushl
inc
cmc
loop
fwait
cmp
andl
incl
dec
loopne
push
cltd
aaa
rolb
rcl
sbb
adcb
aam
out
or
inc
xchg
nop
mov
clc
push
cld
add
push
xchg
and
mov
subl
js
pop
aas
sub
test
insb
sbb
cli
pop
push
inc
rcll
shlb
mov
pop
cld
mov
mov
jmp
pop
shl
hlt
loopne
sub
pusha
shlb
push
into
cltd
or
and
mov
mov
and
sub
mov
or
xor
pop
xchg
inc
mov
aaa
in
add
and
punpckhdq
xor
sbb
add
sar
andl
iret
mov
push
js
jo
ljmp
adc
imul
shr
int3
lret
add
inc
ja
ret
call
lock
insb
movsb
into
mov
pop
or
addr16
and
addb
push
and
xchg
test
adc
dec
fimuls
rorl
rol
addb
xchg
add
loope
mov
sub
push
loope
daa
jle
inc
bound
les
pop
jge
popa
adc
adc
sub
es
or
adc
movsb
jo
xor
paddb
popa
loope
test
sbb
dec
sbb
push
rol
jbe
std
add
jp
xor
mov
or
mov
jecxz
xor
popa
fdivr
fdivrs
les
ljmp
fistl
hlt
cmpsb
rcr
xlat
pop
fldl
dec
xchg
add
xchg
add
dec
outsl
into
xchg
cmpsb
inc
cltd
scas
dec
adc
rolb
pop
jne
xor
add
loop
sub
jle
push
xchg
pop
push
adcb
fiaddl
pop
incl
sbb
add
in
jp
push
dec
fmuls
push
pop
pop
jle
sbb
addl
lcall
aas
or
xchg
jbe
fisttps
cmpsb
js
aas
or
xchg
bound
xchg
aam
repz
push
xor
mov
aaa
push
adc
es
jo
std
add
xor
les
js
test
iret
and
or
xchg
rcl
adc
and
call
jmp
push
loopne
stos
stc
add
and
decl
dec
stos
arpl
pusha
mov
cmpsb
jle
pop
int
dec
clc
adcl
call
xchg
ret
test
and
push
adc
mov
psrld
dec
inc
xchg
fnstcw
mov
cld
mov
and
add
pop
inc
jp
add
in
push
inc
lds
into
lock
mov
sar
push
loop
repz
test
pop
sbb
sub
inc
mov
movsl
add
add
sub
je
shrb
inc
loope
js
xor
cmp
jp
ljmp
sbb
push
int3
movsb
push
sbb
mov
cmp
pop
lahf
ret
mov
add
push
xor
ds
jg
jle
fs
xor
or
dec
sub
xchg
addr16
or
sbb
cwtl
in
add
push
adcb
outsb
jmp
xlat
xchg
fidivrs
icebp
or
mov
inc
adc
cltd
adc
outsl
ss
out
jle
lods
pop
das
xorb
jg
cld
mov
sbb
fwait
scas
mov
dec
fiadds
push
rcr
and
inc
not
adc
pop
mov
add
mov
and
das
cli
sbb
cs
push
scas
adc
rclb
and
outsb
or
xorb
adc
mov
movsb
jmp
jp
lret
add
and
orl
dec
mov
outsl
lods
hlt
adc
dec
sub
cmp
cs
dec
and
rorb
test
insb
mov
orl
mov
sbb
call
and
addl
rcrl
pop
daa
call
lcall
outsl
xchg
or
or
jecxz
jg
cmpsb
jecxz
sar
lods
mov
xorb
jl
stos
add
pusha
or
or
inc
add
and
pop
rcrb
add
std
icebp
movsl
mov
xor
add
inc
cs
lea
test
mov
sbb
cmp
xor
cwtl
shlb
mov
loopne
and
loop
add
jb
subb
scas
push
ljmp
mov
decl
lcall
pop
push
and
push
fwait
xchg
cld
jo
lcall
dec
lods
flds
xchg
ljmp
mov
push
add
inc
xor
inc
test
scas
add
fucomi
adc
push
xchg
adc
jne
cmc
jbe
test
dec
call
dec
pop
pop
pop
fs
lea
call
lock
add
js
dec
icebp
push
cmpsb
cmpsb
loope
inc
lcall
pop
call
pop
scas
sbb
mov
push
outsb
or
cli
pop
aam
outsb
stos
js
arpl
dec
lea
push
mov
scas
incb
lret
mov
add
and
dec
cld
outsl
pop
imul
sbb
mov
add
push
cli
sbb
xchg
mov
xchg
out
fdivs
leave
shrl
add
or
fcoml
mov
orb
dec
lds
mov
sub
fimull
inc
adc
int
mov
les
push
movsb
cli
adc
or
adcb
mov
shlb
push
test
mov
mov
lock
or
mov
dec
cltd
ja
fldt
push
jg
xlat
enter
push
or
cltd
pushf
or
jb
add
leave
lahf
inc
mov
icebp
jg
sbb
loope
dec
rorl
xchg
test
mov
sbb
rolb
outsb
pusha
inc
jl
adcb
sbb
mov
outsb
add
xchg
pusha
aas
adc
negb
shl
cmpb
add
xchg
lock
xchg
pusha
dec
nop
push
std
pusha
scas
mov
aas
sbb
push
xor
push
sbb
pusha
data16
adc
cmpb
xor
incb
dec
xor
xchg
loopne
jp
stc
dec
add
jmp
lcall
gs
push
les
loopne
movsb
xchg
js
fiaddl
into
adc
mov
mov
sarl
aas
lcall
push
and
xor
shlb
pop
add
pusha
jmp
lods
xchg
decb
ljmp
xchg
push
xor
sub
push
push
out
clc
cmp
out
and
pop
push
fisttpl
and
test
dec
inc
loopne
ss
push
add
mov
movsl
cmp
sub
inc
jp
lods
inc
js
cld
push
push
cmc
mov
sub
dec
mov
sarl
add
xchg
xor
sar
outsl
stos
sbb
push
lea
push
outsb
pushf
dec
inc
dec
cld
scas
adc
jl
sbb
mov
lods
ficoml
sbb
jle
sub
adc
mov
mov
loop
ljmp
aam
xor
fwait
stc
call
aaa
stc
mov
in
jbe
cmp
dec
ljmp
mov
jns
cwtl
fs
jecxz
xchg
gs
repz
lcall
mov
movsb
sub
lods
mov
and
xchg
jg
sbb
std
adc
sub
xlat
cwtl
pop
lcall
add
enter
sbb
xor
mov
clc
sbb
scas
push
into
add
gs
test
sbb
xor
jo
add
mov
lds
add
js
xchg
sbb
aaa
sarb
testb
and
push
and
and
pop
jae
cmp
pusha
mov
mov
lret
subl
push
hlt
inc
sub
in
and
cmp
push
clc
in
jns
dec
test
pop
dec
inc
cmp
xchg
mov
das
push
hlt
call
ds
das
pop
shlb
pop
sahf
or
and
inc
out
inc
cli
adc
xchg
nop
les
adc
pop
mov
mov
fwait
pop
lret
pop
or
mov
test
cld
jl
jmp
fwait
leave
add
xor
push
sub
sbb
push
loopne
mov
fbstp
orl
rorb
cmp
daa
jmp
das
add
movsl
pop
lahf
nop
rclb
sbb
push
adc
jae,pt
mov
and
xlat
push
or
pushl
and
xor
inc
out
add
test
popf
adc
pusha
or
out
jnp
cmpsb
aad
je
int
mov
push
sub
nop
pop
in
add
push
sbb
jg
lret
or
mov
cltd
jb
mov
ficoms
insb
icebp
mov
pop
add
mov
sbb
fbld
xchg
fadd
xor
add
jnp
test
addb
rcrl
add
popa
and
ljmp
inc
pusha
out
and
mov
mov
lret
outsl
push
shlb
mov
pop
clc
lods
pushl
and
xchg
cmp
lock
or
mov
add
mov
mov
inc
stc
xrelease
lahf
out
loope
mov
jmp
data16
clc
mov
sbb
xor
jns
es
and
add
sub
mov
scas
inc
arpl
imul
clc
aaa
cld
pop
pop
int3
fucomip
addb
jno
cmp
in
mov
int3
inc
inc
dec
add
decl
mov
sbb
orl
cmpsb
pop
push
shlb
cwtl
into
cmp
and
push
test
pop
mov
fisttpll
loop
addl
rol
lret
jmp
add
push
or
lock
push
and
xchg
out
xor
dec
in
push
inc
sbb
call
jns
add
sbb
ss
out
mov
or
jmp
repnz
mov
mov
into
pushf
xchg
sbb
clc
sbb
test
inc
add
in
jge
imull
or
stos
incb
push
jo
lret
inc
cltd
fistpl
scas
xchg
inc
adc
xchg
mov
mov
js
sbb
lods
jnp
and
pop
sar
mov
arpl
fistl
sti
and
nop
imulb
out
dec
pusha
call
jg
xor
mov
mov
lcall
or
jecxz
or
ds
loope
loope
rol
adc
push
add
sahf
lcall
adc
outsb
push
jle
or
pusha
lods
mov
cmp
push
rorb
fmuls
clc
sbb
xorb
sub
call
jmp
or
mov
inc
out
hlt
inc
or
mov
into
sub
and
xor
adc
cmpsb
es
jmp
gs
mov
mov
pop
jns
lea
iret
push
sub
xchg
in
data16
mov
repnz
xchg
xchg
jmp
xchg
jl
mov
push
shrb
movsl
dec
std
ja
pop
loop
cmp
add
push
movsl
lcall
push
or
mov
pusha
ss
mov
sahf
subb
xor
xor
aam
arpl
cmpb
mov
cmpsb
push
ljmp
jl
push
jmp
lock
pop
mov
scas
add
sahf
mov
push
adcb
mov
call
dec
cli
addl
push
ljmp
popaw
mov
shlb
lock
dec
mov
out
push
clc
push
iret
xchg
push
adc
fcomip
fadds
mov
or
sbb
push
and
jp
dec
dec
add
dec
popl
xchg
sub
outsl
stos
cwtl
rcrb
add
sub
scas
sub
mov
or
scas
es
loopne
adc
and
outsl
stos
insb
cld
push
mov
add
mov
pop
xchg
shl
enter
push
flds
ret
adc
pop
lock
loopne
or
sub
mov
pop
fsub
xor
imul
sub
mov
xchg
mov
mov
push
mov
sbb
pmullw
lods
pop
xchg
mov
inc
incl
call
sahf
out
xchg
cmp
inc
adc
mov
mov
and
test
cli
sub
lahf
jno
mov
push
sti
pushl
mov
mov
ja
cmpsb
int
pushf
daa
adc
and
ja
inc
xchg
cli
cmp
xchg
or
out
pusha
and
arpl
mov
clc
out
inc
mov
pop
cld
bound
call
xchg
xchg
inc
xor
xchg
mov
lret
js
sub
ljmp
fimuls
movsb
sub
adcb
pusha
imul
push
aam
jnp
decl
out
popaw
fiaddl
inc
jb
div
sbb
add
cld
fists
or
mov
xchg
adc
and
popa
arpl
test
lock
incl
sub
aam
sbb
sub
push
adc
jmp
or
out
das
lret
lods
aam
sbb
and
cmpl
add
pop
aaa
cmp
jge
imul
inc
lret
out
rol
xor
push
inc
das
sar
pushl
fsub
jbe
loop
jecxz
inc
add
std
adc
pop
enter
xchg
and
fisttpl
loope
jmp
test
shl
push
out
aad
jmp
inc
inc
ljmp
cmpsl
loop
sbb
inc
or
xchg
lea
mov
loopne
xchg
jg
pop
lock
dec
add
inc
rcr
cmp
outsb
sbbl
or
sbb
mov
mov
jo
cli
ljmp
cs
loopne
sar
sub
jne
out
iret
je
mov
jle
aam
add
mov
and
mov
pop
mov
popa
jle
loopne
jge
xchg
inc
and
lcall
xchg
mov
inc
repnz
icebp
aas
fwait
pop
jbe
int3
xchg
aaa
insl
fisubl
cmpsb
adc
pop
lods
jae
stos
out
xor
jb
and
out
inc
jge
dec
test
add
pushf
pop
push
pop
aad
incl
pusha
call
push
or
jns
push
adc
push
call
cmovge
mov
test
movsb
les
sbb
or
lcall
sub
push
enter
ret
push
mov
cmp
sub
insb
sub
int3
add
or
inc
test
dec
or
insl
sub
ja
mov
xor
popa
mov
cmp
adc
sbb
int
add
adc
and
fsts
mov
ljmp
mov
loope
and
mov
xor
jb
adc
push
sar
in
add
mov
es
fwait
outsb
subb
fsubr
les
pop
inc
pop
clc
inc
cmp
push
and
outsl
and
mov
jle
pop
xor
loop
lcall
mov
cli
sbb
pop
lods
cmp
inc
pop
push
mov
stos
shr
ss
sar
pop
dec
cmc
sbb
scas
pop
lock
push
and
into
in
mov
stc
pop
add
xchg
pop
aam
lods
adc
push
out
aaa
jge
ja
or
rolb
adc
adc
decl
jl
decb
icebp
hlt
nop
or
or
xchg
andb
inc
sti
mov
call
cmp
or
pusha
fs
int
lock
insl
sub
pop
dec
gs
sub
loopne
rolb
leave
mov
dec
push
out
dec
push
pop
cmp
rcrl
jne
sar
in
inc
lret
pop
inc
pushf
rorb
cmpb
aaa
mov
adc
pushf
and
sbb
mov
sbbb
test
negb
add
sub
aas
lock
adc
and
clc
push
inc
jp
andb
shld
bound
xor
and
or
mov
cmc
out
repz
add
or
adc
xor
inc
into
jg
movsl
xchg
enter
xchg
jo
push
inc
lds
or
sub
popa
push
add
lret
push
cld
or
sbb
xor
dec
outsl
add
dec
sbb
clc
scas
or
adc
or
imul
mov
jg
and
jl
or
popf
das
inc
xchg
fs
popf
pop
decl
ss
or
sub
inc
jl
xorb
add
gs
addr16
add
mov
clc
rcrb
test
xchg
fldcw
dec
add
test
adc
dec
js
cmp
pop
ret
incl
dec
dec
mov
jl
rol
ret
mov
pop
popa
mov
adc
inc
testb
enter
cld
lea
sbb
call
mov
sub
lods
test
pop
gs
jmp
mov
dec
jmp
ljmp
popa
dec
and
aaa
or
int3
pushf
lock
mov
fisttpll
mov
adc
push
mov
mov
or
ror
sbb
sub
scas
decl
inc
mov
add
and
loop
and
xchg
push
int
sbb
inc
outsl
sbb
popa
int
fdivr
inc
outsb
hlt
adc
aam
bound
or
dec
cli
mov
pusha
aas
push
push
push
in
sti
xchg
mov
shl
jno
sub
or
leave
xchg
and
inc
ret
mov
mov
mov
bound
inc
inc
out
mov
pop
clc
mov
jl
xlat
sbb
cmp
ss
rorb
inc
or
incl
xchg
nop
in
adc
or
jge
leave
jno
fs
out
push
cmc
fs
rorl
jmp
xchg
push
insb
test
add
repnz
pop
call
dec
and
fiaddl
mov
mov
negb
pushf
jo
test
mov
mov
lock
ds
lcall
les
xor
dec
cs
and
pushf
popa
pushf
push
sbbl
sbb
test
add
mov
lcall
stos
ljmp
je
in
decl
sbb
pop
out
pop
js
cmp
bound
or
mov
sbb
jge
jo
xchg
push
out
sub
les
andl
mov
cs
decl
ja
pushf
stc
movsl
cmp
movsb
dec
lods
orl
scas
mov
push
xor
add
sub
inc
adc
fwait
push
sub
cld
stos
xchg
loopne
aad
insb
jg
fidivs
push
insb
dec
scas
loop
and
jle
lock
jnp
pop
stos
mov
mov
xchg
dec
ss
cmp
repnz
pop
inc
rolb
sbb
cli
pop
lock
stos
push
mov
adcb
stos
mov
outsb
cmpsb
cmp
shrb
nop
adc
test
decl
mov
call
push
push
fsubrl
xchg
ljmp
pop
xor
add
jb
push
jmp
or
into
je
daa
adc
mov
pushl
popa
or
jb
mov
jp
fstpt
adc
dec
ja
sub
push
push
jg
mov
in
add
sub
int3
cli
ret
jg
sub
sbb
test
adc
scas
or
push
mov
shll
push
add
outsb
mov
in
xor
cmp
sub
movsb
mov
into
xchg
mov
mov
call
sbb
out
mov
pushl
fildl
mov
jo
mov
mov
cmp
mov
fdivrs
inc
adc
mov
js
ss
push
mov
push
dec
push
cmp
inc
inc
inc
xchg
in
mov
mov
and
adc
ret
inc
loopne
xor
adc
sub
inc
and
mov
ljmp
inc
int
cmp
stos
sub
aam
iret
scas
fs
sbb
repnz
jmp
sti
rorl
repnz
push
adc
js
sbbb
lret
movsb
jne
sbb
push
and
je
add
test
adc
or
or
out
xchg
xchg
ror
adc
dec
enter
dec
or
jg
hlt
mov
mov
sbb
enter
mov
inc
push
pop
adc
int3
push
jbe
push
aaa
dec
xchg
mov
ja
nop
pusha
xchg
xchg
and
pushf
clc
or
shlb
add
dec
andl
int3
ds
incl
jmp
sarb
out
mov
xchg
insl
stc
fisttps
xchg
jecxz
and
inc
lods
mov
pushl
test
jg
sbb
xor
call
sbb
mov
mov
mov
in
xchg
lock
push
addl
adc
js
jg
mov
mov
andb
mov
jmp
or
jle
add
cs
cbtw
fs
xor
and
inc
or
cmp
add
xchg
dec
outsb
gs
cmc
pop
call
xor
sub
out
es
dec
stc
cld
and
cli
adc
and
push
addb
push
sub
pushf
jo
test
cwtl
ret
pop
xchg
divb
cli
test
jno
add
mov
pushf
mov
shr
jg
jg
movsl
jmp
mov
and
or
and
les
ds
xor
loop
sbb
cmpsl
rol
mov
mov
mov
movsb
mov
jmp
mov
call
idivb
sahf
out
cmp
adcl
sub
fists
fwait
mov
and
sbbl
bound
pop
mov
test
add
icebp
mov
mov
loop
inc
push
inc
sbb
mov
pop
ss
test
xchg
ds
inc
adc
mov
lcall
dec
lea
and
mov
adc
xchg
lcall
sahf
cmp
mov
mov
ret
inc
lods
and
adc
rorb
inc
fiadds
pop
mov
mov
mov
test
mov
adc
fmul
mov
sub
push
add
push
adc
push
mov
or
ret
jecxz
push
shlb
decb
inc
mov
or
mov
add
or
je
fildll
fstp
and
cli
mov
xchg
push
js
pop
shr
adc
arpl
outsl
jb
mov
or
shl
cmp
dec
mov
or
sarb
arpl
add
out
cmp
sub
push
mov
insb
scas
add
cs
inc
out
push
inc
mov
sbb
pop
ds
mov
jecxz
or
subb
xlat
cwtl
bound
dec
stos
loop
xor
ljmp
dec
sbb
dec
push
add
out
add
dec
jne
pop
cmp
mov
lds
mov
lods
inc
adcl
inc
xchg
nop
dec
addb
inc
adc
inc
xchg
gs
xor
loopne
pop
lcall
popa
adc
pop
dec
scas
xchg
xchg
gs
inc
fildll
loop
mov
lcall
lret
andl
or
lods
out
js
hlt
or
orb
xor
and
mov
cmpsb
rorl
jnp
or
jmp
or
xchg
fbld
je
push
inc
sbb
jmp
pusha
lds
popf
cmp
mov
jl
cli
jg
movsb
pop
cs
sti
and
add
inc
cld
das
push
xchg
jle
xor
lock
js
loop
aaa
call
push
sbb
test
push
shlb
jmp
aad
add
mov
in
sbb
lods
mov
mov
mov
or
jno,pn
ret
lret
lock
push
cmp
pop
sbb
inc
stc
lcall
inc
in
aad
pop
jp
call
aad
mov
add
popa
es
jbe
inc
sub
cs
inc
or
xor
lcall
stos
push
icebp
call
push
or
sbb
pop
sbb
mov
outsb
enter
jge
dec
cld
fwait
or
sbb
push
mov
lods
rorb
pop
movsb
imul
jp
jb
movsl
outsb
inc
inc
fcmovnbe
adc
xor
rorb
push
imul
mov
cmp
pop
ds
in
mov
pop
jg
icebp
scas
lahf
mov
lret
imul
and
adc
pop
jmp
in
call
movl
sbb
xchg
into
mov
push
test
fmul
lods
nop
mov
jno
jg
lcall
cmp
xchg
inc
or
xchg
shrl
cmp
into
jb
lahf
lret
shrb
test
lret
cmp
sbb
sar
movsl
incb
cmpsl
push
jg
aaa
push
cmp
mov
sbb
sbb
icebp
aas
adc
repz
add
push
bound
add
xchg
iret
lea
int3
mov
inc
jp
addl
push
xchg
inc
aad
mov
mov
mov
and
push
stos
add
pop
inc
jge
cmpsb
adc
pushf
sub
icebp
decl
xor
mov
cltd
inc
mov
mov
aam
pop
movsb
push
insl
push
adc
roll
and
leave
sar
add
mov
push
pop
aam
fsubrl
es
mov
out
mov
mov
xchg
fcomps
add
fidivl
in
cli
fisttps
enter
cmp
js
push
push
mov
sti
aas
inc
and
insl
shll
or
and
fcompl
pop
in
das
inc
cld
inc
add
movsb
pop
adc
and
insb
add
mov
lods
int3
mov
and
xor
xchg
fs
add
cs
sar
push
xchg
scas
clc
ljmp
in
fldenv
xchg
push
add
jmp
stos
or
push
mov
fiadds
adc
mov
xchg
cmp
sub
or
mov
cmp
std
dec
aas
jb
inc
jae
or
add
pusha
ret
pop
sub
out
xor
jmp
cmp
adc
push
mov
mov
mov
cltd
cld
cli
xorb
adc
xor
loopne
push
or
insl
inc
push
sub
jo
pop
movsl
and
fmulp
push
add
adc
pusha
adc
dec
test
add
cmp
lods
adc
push
fs
popf
add
std
scas
inc
pop
out
inc
or
xor
mov
mov
aad
pop
sub
inc
cmp
cmc
xchg
repz
and
fwait
imul
movsb
pop
jo
rcll
sub
lods
jle
popa
add
daa
mov
and
xor
pusha
mov
pop
lcall
in
aad
outsb
negb
jmp
jg
mov
fidivl
bound
and
in
decl
cs
rorl
fs
xor
rclb
inc
pop
add
or
sub
or
aas
ljmp
fldl
mov
xchg
cmp
clc
rcrl
pushl
push
and
into
xlat
mov
and
jg
sbb
rclb
shlb
ja
mov
pop
xchg
or
xchg
test
out
push
loope
jnp
push
scas
add
adcb
or
cli
lcall
inc
xchg
pop
rol
outsb
imul
sbb
fs
imul
dec
jbe
mov
push
or
mov
inc
cmp
fwait
push
lea
add
mov
jnp
xor
mov
fld
cmpb
xchg
dec
cmp
mov
adc
xchg
dec
jge
loopne
repnz
mov
fisubs
std
mov
shrl
leave
adc
or
fidivs
mov
mov
push
push
rcrb
lods
pop
lret
push
cld
jg
or
inc
rorb
xor
push
scas
mov
sbb
pop
add
adc
lret
add
mov
mov
add
mov
push
add
push
add
test
and
jg
sbb
mov
sbb
adc
xor
and
dec
dec
ss
sub
movsl
test
outsb
mov
out
mov
adc
scas
shlb
mov
pop
in
lock
pusha
xchg
push
inc
sbb
inc
addl
sub
test
mov
dec
lds
mov
fadd
add
jle
or
rolb
inc
xor
insl
aad
mov
in
pop
or
xor
test
push
adc
imul
scas
ljmp
test
rclb
incl
add
push
dec
es
inc
sbb
jl
dec
cli
cmc
jb
mov
and
fcomip
je
mov
mov
jbe
sbb
mov
mov
inc
out
jnp
and
push
jne
push
add
jle
or
inc
xor
dec
cwtl
cld
ljmp
adc
mov
add
das
pop
jne
and
movsb
movl
add
or
sbb
mov
sbb
and
ret
xchg
out
outsb
addr16
xorb
aad
cmp
lock
inc
mov
xor
ficoml
jecxz
sti
ja
cli
xor
jp
mov
jmp
ficoms
and
mov
scas
xlat
pop
sbb
pusha
cld
scas
es
lret
and
bound
cld
pop
and
cmpsb
rorb
loopne
ljmp
xor
ficompl
inc
add
shl
and
mov
pop
int
mov
or
sub
inc
or
fldl
adc
daa
std
or
es
pushf
sahf
stos
std
out
dec
call
cs
pop
icebp
cs
pushfw
cmp
in
decl
sbb
xchg
mov
movsl
or
sub
je
cmp
subl
or
test
fnstenv
add
or
sub
in
push
inc
mov
lret
push
xchg
clc
in
decl
pop
push
push
inc
cltd
nop
push
cmp
xchg
dec
xor
aas
sub
or
insl
mov
cmp
jmp
rorl
pop
ja
js
pusha
cmp
jne
call
adc
mov
fwait
clc
pop
mov
cld
pushf
lret
lahf
inc
add
popa
pop
or
pop
rcr
adc
cmp
mov
cmpsb
pusha
test
mov
or
mov
test
jg
mov
incl
jne
add
std
pusha
push
loopne
stc
decl
and
faddl
decl
stc
add
loopne
sbb
mov
gs
fdivrp
ljmp
dec
pop
mov
sub
fwait
pop
ljmp
ret
push
in
test
pop
mov
or
mov
bound
loopne
fs
ljmp
jle
flds
lret
adc
cmp
inc
cmp
adc
call
dec
add
lcall
frstor
and
addb
lcall
pop
inc
jbe
test
or
mov
mov
hlt
jb
mov
push
add
jg
or
pop
ret
jns
mov
push
stos
loop,pn
adc
call
mov
sti
insl
fidivl
sbb
dec
pop
xlat
dec
push
add
pop
xchg
cmpsb
cmpb
scas
sbb
jns
lock
xlat
out
clc
dec
xor
add
sarb
out
and
push
add
test
test
fsubl
inc
repz
mov
mov
ror
ljmp
inc
daa
mov
jnp
inc
cmc
mov
mov
scas
adc
nop
mov
inc
mov
push
sub
pop
dec
aam
int3
mov
cmp
ss
outsb
bnd
pushl
dec
push
mov
and
lods
les
sbb
sub
loopne
dec
sahf
inc
lds
cmpsl
jmp
loop
mov
add
jg
jg
and
push
test
call
sub
test
mov
cwtl
adc
aaa
and
lock
decb
adc
push
xchg
adc
arpl
lds
loope
lock
add
shll
cld
push
adc
bound
jle
aaa
pop
clc
jg
imul
cmp
test
popa
lret
daa
add
repnz
dec
loope
mov
lock
in
movsb
sbb
in
inc
xor
mov
cmp
add
into
fldt
fsub
mov
aaa
xorl
ret
cmp
fwait
sbb
addl
ljmp
std
and
add
jne
shlb
lea
icebp
cs
inc
jmp
dec
mov
xor
or
hlt
mov
sbbb
xor
aaa
dec
shrb
xchg
outsb
jnp
mov
mov
hlt
push
loope
inc
test
ja
rclb
mov
repnz
loope
add
test
mov
pop
cmp
mov
mov
cmp
std
ljmp
mov
aam
insl
leave
cmpsl
dec
adc
push
loope
aam
gs
and
jo
clc
mov
or
and
cmp
clc
lcall
xor
mov
mov
test
xchg
outsb
loop
ljmp
mov
add
lods
jg
cmc
adc
xchg
cld
decl
or
xchg
or
pop
dec
xor
loop
test
clc
xchg
mov
mov
je
xchg
push
jo
fs
adc
and
push
aad
pusha
fwait
lock
dec
adc
sub
cmp
or
fdivrs
and
adc
jbe
inc
sub
jmp
adc
and
fs
jbe
push
adcb
inc
ficompl
jmp
mov
mov
dec
add
out
add
decl
sub
add
shll
add
or
cmpsb
push
push
inc
hlt
jmp
test
movsl
lcall
lahf
insb
shl
cmp
jp
and
pop
lea
pop
xchg
xor
cmc
push
cwtl
mov
mov
scas
ljmp
ret
lds
adc
sub
js
lods
fwait
rolb
aad
pop
cld
cmp
mov
push
jl
pop
pop
es
add
xor
stc
adc
or
and
inc
mov
pop
and
adc
mov
adc
sahf
ficomps
pop
sbb
adc
push
repnz
pop
xchg
cmc
jmp
movsl
jae
inc
fstl
xor
insl
jle
dec
push
sub
and
mov
jb
ljmp
jns
mov
cmp
shrl
add
jmp
lea
outsl
and
adc
fcomip
das
and
mov
ret
inc
cmpb
ficomps
mov
aam
mov
jne
jmp
je
pop
pop
xchg
rolb
cmp
filds
dec
push
jl
adc
arpl
out
add
mov
pop
loope
lret
in
cwtl
incb
rclb
sub
fidivl
popf
cmc
xlat
sbbb
cmp
add
decl
and
jo
and
hlt
ret
push
push
xor
add
std
inc
shlb
test
fsubl
or
gs
mov
lret
mov
movq
stos
call
or
xchg
or
xlat
jmp
jle
mov
mov
lret
inc
mov
add
mov
lock
xchg
sti
add
or
movsb
out
sbb
out
inc
test
inc
xchg
stos
dec
xchg
enter
dec
add
mov
xorb
fistl
pop
fs
iret
adc
push
loope
xchg
test
xchg
sub
das
lds
push
mov
xchg
xchg
push
mov
popf
dec
jno
or
imul
and
addb
in
ljmp
in
ljmp
sbb
out
cwtl
das
sbb
add
sub
jo
push
jg
adc
mov
data16
lret
dec
inc
xchg
jb
mov
jo
sub
sub
rolb
int
js
filds
push
add
sub
jo
lcall
xlat
movsl
ror
dec
pop
insb
mov
push
push
push
test
insl
inc
in
ljmp
push
in
cltd
stos
xor
addb
or
icebp
sub
jmp
sbb
loope
inc
sub
or
xchg
nop
push
idiv
adc
jb
push
add
mov
cs
adcb
fldl
incl
jae
add
xor
add
adc
lcall
mov
push
dec
or
aam
call
loopne
mov
movsb
mov
das
mov
outsb
jge
sub
push
ljmp
and
jns
cmp
fcoms
pop
mov
ljmp
sub
nop
enter
jmp
pop
imul
popa
callw
and
add
xchg
pop
mov
or
dec
out
adc
cs
enter
and
pushl
cmpb
xchg
mov
scas
dec
jge
add
adc
insb
mov
pusha
incl
pop
lock
xchg
std
push
inc
and
cmp
cld
adc
xchg
pop
das
adc
insb
mulb
mov
sub
outsl
jge
sti
test
mov
xchg
fidivrs
dec
adc
jmp
cwtl
add
ljmp
push
push
fcmovnu
cmp
jne
push
inc
cmp
sbb
dec
push
xorb
in
sub
sbb
xor
xchg
mov
out
push
hlt
push
sbb
inc
add
push
movsb
xor
sub
sbb
mov
push
popf
roll
jg
or
inc
cwtl
shll
sub
dec
xchg
mov
insb
test
iret
in
mov
jecxz
stos
inc
mov
call
mov
pop
sahf
xchg
jmp
add
mov
cmpb
je
xor
jle
pop
mov
pushf
mov
testb
cld
nop
sbb
jb
sar
sbb
imul
or
xchg
stos
inc
and
mov
subl
clc
lret
sti
dec
dec
add
orb
sub
nop
cmp
xchg
add
sbb
push
jecxz
lods
or
xchg
jno
mov
cmc
mov
sbb
sub
push
adc
repz
push
cmp
ret
fdivl
push
ja
fs
xchg
mov
sbb
mov
arpl
icebp
push
loope
adcb
loope
fwait
pushf
pop
cmp
mov
push
cld
add
jnp
push
out
jno
insl
add
xchg
jecxz
js
dec
cmp
sti
adc
xchg
mov
inc
xor
push
cld
out
nop
push
mov
sub
enter
bound
add
or
orb
mov
dec
out
insb
mov
push
mov
sbb
pusha
imul
dec
test
pusha
add
jg
test
add
adc
mov
mov
sti
or
push
jecxz
mov
mov
xor
ret
xchg
sarl
fldl
lock
and
mov
pop
push
pop
fists
push
jno
imul
les
lods
lahf
imul
cmp
insb
mov
sbb
mov
pop
sub
test
movsl
cmp
in
mov
mov
xor
jmp
push
lret
push
mov
js
cmp
test
mov
sub
dec
int
push
inc
mov
xchg
jno
push
inc
lret
push
mov
orl
push
mov
out
in
push
inc
push
cli
mov
movsb
mov
lock
add
mov
pop
pop
pop
mov
inc
sahf
adc
jmp
add
idivl
jae
xor
aaa
sub
mov
add
enter
subl
loope
cli
fdivl
push
fildll
sbb
sub
jne
jmp
fucomi
test
mov
sbb
jnp
sarl
add
fdivr
or
jno
pop
nop
outsb
loopne
pusha
adc
aas
fstpl
nop
xchg
cwtl
mov
std
xchg
sbb
out
stos
rcll
iret
mov
outsl
xor
mov
loopne
push
add
adc
fdivrl
addr16
mov
add
add
icebp
jne
pop
loopne
pusha
mov
sub
jle
test
lods
dec
inc
inc
inc
jg
fwait
sbb
jno
jb
fisttpll
fidivl
lea
jo
push
dec
cmp
test
mov
pop
add
adc
shll
fwait
arpl
cmpsb
or
lahf
or
fiaddl
clc
inc
shlb
jp
and
sub
out
lock
mov
push
xor
mov
inc
int
andl
rcr
push
outsl
cmc
cld
scas
aaa
fst
incb
pop
push
jbe
push
js
in
pusha
jle
aam
dec
cmpsl
lock
ror
ss
mov
or
aas
fimull
mov
pop
adc
dec
js
movsl
fcompl
enter
or
sahf
decb
or
cmc
sub
adc
pushf
stos
adc
test
push
push
popf
jmp
in
and
movsb
test
push
and
push
or
flds
les
sbb
ret
outsb
inc
mov
and
scas
addb
insl
adc
rclb
call
shrl
jmp
jo
fisttpl
mov
xor
mov
incl
rcr
mov
mov
hlt
push
dec
clc
sub
cmp
xchg
shrb
hlt
mov
xor
mov
icebp
movsb
push
addr16
pop
inc
pop
and
test
inc
es
cmp
sar
xchg
lds
cli
pop
mov
sbb
aam
mov
call
testb
and
adcb
adc
jnp
mov
cli
loopne
in
arpl
dec
mov
sub
xor
out
adc
incl
or
sbb
xchg
hlt
lahf
mov
jb
pop
and
xor
sarb
add
pop
test
ljmp
push
gs
or
loope
mov
cli
pop
xorl
mov
in
scas
or
push
pop
jmp
nop
icebp
jg
ljmp
adc
lret
xchg
stc
inc
mov
and
fisttps
cmpb
ret
rcll
sbb
inc
cmp
test
pushl
xor
or
xorb
in
mov
mov
mov
dec
mov
mov
or
call
mov
add
into
sub
sti
in
lcall
or
pop
and
jae
xor
xor
fisttpll
aaa
sbb
adc
add
mov
sbb
dec
sbb
mov
fimuls
xor
pop
fiadds
mov
js
pop
shlb
jl
or
out
cmp
insb
iret
aad
pop
mov
adc
sarb
enter
or
out
sbb
popa
jmp
aas
xchg
add
fnstsw
cli
cmp
pop
mov
or
jle
loope
test
xchg
cltd
cmc
add
jp
push
ret
sahf
push
mov
adc
mov
sub
pop
xor
int
push
outsl
imul
push
test
xchg
jmp
sub
add
adc
insl
or
add
mov
xor
sub
incb
lods
cmpsb
aaa
jge
iret
sbb
dec
mov
inc
pusha
cmpsb
insb
cwtl
dec
adc
adc
inc
imulb
popa
pop
add
or
lds
and
mov
jmp
push
loope
in
pushf
or
sbb
inc
fcoms
xor
push
mov
mov
or
in
mov
loop
xchg
mov
in
adc
loope
aaa
dec
jl
cwtl
outsb
loop
sub
jbe
xor
adc
mov
push
shll
xchg
das
push
cld
pop
or
in
mov
push
pop
sub
insl
stc
ljmp
add
jno
dec
add
ljmp
adc
lods
jo
or
loope
lret
cmp
mov
inc
movsl
pop
hlt
lret
sbb
mov
add
adc
mov
into
or
xor
push
pop
add
fisubs
clc
push
clc
adcb
mov
ja
loop
pop
pop
pop
pop
xor
xor
mov
sbb
daa
xchg
imul
and
mov
inc
shlb
sub
add
mov
or
push
loopne
call
add
jle
sub
sub
mov
mov
mov
pop
call
jg
adc
mov
mov
fdivrl
xchg
hlt
ret
mov
andl
mul
hlt
in
pop
pop
add
mov
xor
pop
iret
add
pop
filds
movsb
stos
inc
aad
push
pop
fnstsw
jmp
jl
mov
push
div
inc
xchg
mov
or
clc
scas
mov
andb
dec
pop
fsubrp
insb
and
jno
cmp
lret
and
fsubs
pop
pop
pop
loopne
add
movsb
add
fbld
adc
orb
and
or
mov
outsl
clc
neg
cmp
pop
adc
add
out
or
test
push
cs
or
dec
cltd
push
mov
rclb
jmp
or
push
sbb
jg
or
mov
ljmp
jne
setns
les
ljmp
incl
inc
inc
sbb
stos
add
jbe
xor
loop
aam
cmpb
mov
pop
pop
scas
ds
mov
loope
dec
xchg
mov
cmp
sbb
and
nop
sub
jg
insb
mov
test
xchg
ds
cmpb
pop
fwait
addb
das
addb
sub
flds
mov
add
push
data16
rcpps
push
shl
xorl
rorl
icebp
incl
enter
movsb
jl
sbb
jne
fnstcw
add
pop
dec
mov
and
lea
mov
testl
fdivs
inc
add
dec
or
mov
frstor
dec
icebp
pop
cmpsb
mov
fs
sar
xor
fcoml
add
jl
mov
xchg
addl
pop
popa
sahf
cltd
push
jne
nop
cs
sbb
inc
fdivrs
movsl
ljmp
mov
neg
mov
mov
mov
mov
out
cmp
out
loopne
ljmp
mov
and
std
jle
dec
or
aas
dec
adc
push
sbb
xchg
decl
and
sbb
lods
jns
inc
hlt
fwait
jle
fisttpll
or
push
nop
push
mov
jno
rclb
jl
gs
add
int3
ss
call
mov
mov
cmpsb
ret
rclb
aam
mov
cli
test
cmp
and
lock
sub
xor
mov
xor
push
je
mov
in
movsb
std
lret
imul
es
cld
jae
xchg
sub
lret
mov
cmc
and
adc
testl
daa
nop
mov
xor
mov
xor
popf
pop
scas
xchg
lock
jle
mov
cwtl
cmp
xor
cld
adc
sarb
bound
mov
daa
test
loop
push
dec
test
adc
inc
sbbb
out
or
ret
jnp
or
test
sahf
cmp
xchg
lea
xchg
sub
popa
add
sub
mov
and
add
cld
scas
add
inc
scas
clc
mov
mov
mov
add
sub
pop
xlat
mov
cmpsb
sbb
push
ljmp
nop
inc
lahf
lods
or
dec
xchg
scas
arpl
outsl
fs
pop
in
ss
ss
sbb
cwtl
sub
das
xchg
sar
mov
movsb
incl
pop
shll
mov
xor
sub
das
fcom
mov
mov
inc
pop
push
or
xchg
push
movsb
insb
outsb
loope
mov
in
jecxz
andl
and
fbld
push
or
aas
lret
push
mov
mov
je
cmp
push
sahf
adc
push
sub
nop
sub
push
fnop
fisttps
sarb
adc
subl
psraw
jmp
movb
idiv
outsl
adc
add
pushf
jle
sbb
arpl
xor
adc
mov
call
push
std
mov
nop
xor
xchg
dec
cwtl
aad
out
mov
fs
sub
sbb
inc
inc
and
adc
jg
daa
lea
jae
repnz
mov
mov
out
pushf
push
les
adc
arpl
sbb
jmp
aaa
cmp
push
mov
xchg
leave
int3
addr16
cmpsb
sbb
out
inc
push
movd
xchg
test
pop
add
repz
xorl
scas
push
cmc
fsubp
fcompl
jg
aad
popa
movsl
mov
sbbl
ljmp
mov
aam
xchg
mov
loopne
xchg
inc
sarb
mov
jl
xor
les
call
or
fbld
sbb
inc
pop
inc
pop
lods
lds
cwtl
adc
inc
jmp
mov
inc
xchg
sbb
rolb
fdiv
push
pop
nop
test
or
cmp
ret
dec
mov
inc
add
lock
into
and
jo
lea
mov
lds
movsl
xchg
bound
scas
push
fistl
or
pushl
and
cmpsb
add
push
jno
push
mov
aaa
xor
sub
hlt
sbb
adc
insb
out
mov
shlb
mov
xchg
xor
add
xchg
sbb
or
ds
dec
mov
iret
inc
inc
aaa
sub
rorb
adc
rcl
inc
xorl
push
push
xchg
test
arpl
mov
fwait
ds
jecxz
and
adc
js
lds
pop
aas
std
scas
fcoml
dec
out
out
js
adc
cmpb
push
or
cld
fsubr
fisttpll
and
icebp
mov
jno
xor
push
push
sbb
ljmp
lret
add
roll
mov
out
push
test
inc
sub
sbbb
cmp
sbb
adc
ds
cmp
int
mov
nop
pop
push
or
inc
fmull
nop
jns
outsb
jg
inc
mov
dec
pop
xor
icebp
orb
jo
dec
repz
lcall
or
adcb
stc
pop
mov
clc
shrb
xor
adc
cltd
fsub
movsb
sub
add
push
mov
scas
shrl
loopne
std
sarl
sub
sbb
xchg
test
adc
add
mov
insl
adc
sarb
inc
jmp
push
push
icebp
sbb
and
mov
fiadds
cmp
popa
outsb
cld
pusha
cmc
movsb
jbe
dec
xor
push
outsl
adc
lock
pop
push
inc
inc
jl
in
cwtl
ljmp
mov
xor
pop
pop
sub
push
mov
mov
sbb
dec
icebp
cltd
dec
mov
outsb
or
push
xor
xchg
and
mov
ja
in
ljmp
scas
push
in
jo
xor
add
sbbb
nop
mov
push
cmp
jmp
std
push
inc
adc
jnp
movb
mov
xchg
cmp
mov
pop
and
sbb
mov
lahf
mov
in
xlat
scas
test
fistpll
fidivrl
cmp
scas
xor
add
add
push
daa
push
mov
mov
ljmp
jmp
popa
stos
fisubl
lock
pop
sub
mov
stc
repnz
xor
push
push
addl
mov
add
out
leave
mov
movsb
pop
ds
mov
loopne
mov
das
flds
pushl
xchg
cmp
int3
popf
xor
es
pop
mov
push
jns
and
or
sub
inc
fsubl
cmc
movsl
lret
dec
mov
add
mov
pop
mov
lock
mov
xor
lds
mov
fcmovb
add
js
loopne
push
aaa
pusha
call
push
mov
in
mov
jp
out
and
sti
fildll
and
mov
fisttpll
cmovle
aaa
data16
or
mov
fdivp
incl
sub
push
sahf
fwait
ret
xor
enter
fisttpll
mov
mov
add
insl
mov
xchg
mov
push
jbe
xchg
mov
cmpb
in
jge
repz
push
sub
sub
inc
jo
mov
bound
mov
dec
mov
add
mov
adc
mov
repnz
push
inc
mov
jo
or
icebp
push
out
rolb
mov
mov
ljmp
or
xchg
push
jecxz
iret
sub
xor
data16
loopne
lds
ficoms
cmc
jnp
std
pusha
mov
int3
sub
cli
mov
and
movsl
stos
sbb
or
icebp
dec
enter
addl
xchg
outsl
jl
iret
sub
jno
mov
imul
clc
data16
pop
fdivl
call
dec
pop
or
inc
add
nop
daa
inc
jl
rcr
aam
add
inc
nop
jmp
xchg
mov
fistpll
add
xlat
dec
nop
dec
out
sbb
xchg
mov
int
or
addr16
nop
cmpsb
mov
insl
xor
stc
cmp
push
fimuls
cmp
insb
cwtl
mov
pop
movsb
ljmp
test
jp
lods
movsl
les
imul
xor
int3
push
mov
cld
sub
pop
mov
and
mov
dec
sar
pop
lock
or
xchg
out
inc
js
in
pop
xor
mov
mov
in
push
push
add
or
and
mov
inc
test
sahf
testl
mov
jge
sar
es
pop
xchg
or
add
loope
dec
jbe,pn
out
popa
test
pop
xchg
loopne
insb
dec
pop
dec
cmpsb
xor
add
add
pusha
push
mov
or
fs
pusha
xabort
nop
xor
decl
jno
add
lcall
shlb
jmp
sbb
pusha
mov
lea
add
jno
cmpsl
test
sbb
add
daa
imul
adcb
and
push
daa
mov
adc
pop
sbb
inc
xchg
or
lea
stc
push
and
test
inc
jp
xchg
lock
std
fisttps
je
and
test
jg
cmp
add
inc
or
je
push
pop
and
pop
scas
cmp
jmp
cmp
mov
arpl
stos
call
daa
push
add
stos
mov
push
add
cli
mov
adc
test
or
jne
call
insb
xchg
push
jp
cli
mov
jnp
xchg
mov
fstps
cmp
mov
ret
incb
push
outsl
bound
and
ljmp
push
aam
leave
cmp
push
in
stos
mov
and
cmp
cli
jecxz
xor
jmp
aaa
lods
stos
jge
mov
jo
cmpsl
jno
fbld
lods
out
rcrb
cld
adc
ret
cmp
clc
data16
insl
shl
lahf
es
jle
pop
mov
pop
jno
inc
inc
ds
bound
xchg
ja
dec
jmp
jl
push
xor
mov
push
rcrb
dec
mov
dec
dec
ja
mov
andb
mov
xor
fbstp
xchg
in
lea
and
and
lock
add
or
fcomps
sub
nop
incb
dec
sub
jmp
mov
jmp
sbb
aaa
or
jp
mov
clc
push
sbb
sarl
arpl
and
cmpl
pop
mov
push
in
mov
out
jns
lock
ds
out
sub
mov
clc
pop
mov
inc
in
inc
pop
sub
sub
outsb
shl
mov
xor
push
std
mov
jb
fwait
aam
les
das
fisubrs
jb
xchg
cmp
pusha
lcall
pusha
in
js
mov
lret
sti
fwait
lods
enter
push
and
jb
mov
rol
mov
pusha
jl
insb
inc
mov
mov
les
mov
je
fldt
ds
push
fstpt
pushf
adc
outsl
xchg
les
or
clc
mov
jnp
xchg
dec
xor
sub
pop
pushf
cli
aad
jns
dec
dec
xchg
aas
xlat
addl
leave
ret
cmp
fldt
sbb
pop
push
or
ljmp
inc
sbb
fidivs
subb
lock
sub
mov
popa
cli
loopne
ficompl
xor
js
clc
cmp
add
sti
or
and
aas
popa
or
jl
xchg
xor
fcomip
pop
int
mov
mov
das
add
cli
add
test
jno
outsl
idiv
shlb
or
mov
xor
xchg
dec
gs
int
and
shll
adc
fdivs
push
outsl
loope
enter
push
sbb
pop
out
lcall
add
push
cld
xor
testb
sarb
jecxz
mov
dec
popa
aam
imul
add
pusha
jmp
mov
mov
cli
nop
shrl
add
mov
incl
rorb
pop
inc
adc
fisubs
les
clc
scas
aas
fcomp
addl
push
lret
cmpsb
sub
mov
mov
mov
nop
mov
cmpsb
and
mov
daa
add
ret
clc
jg
scas
xor
inc
mov
jnp
push
xchg
mov
cwtl
outsl
or
add
push
pop
cmp
call
pushf
fs
les
cmp
add
sahf
or
sub
lret
les
mov
sbb
xchg
fs
int3
sbb
fisubs
cwtl
mov
cwtl
xchg
outsl
ret
ljmp
mov
mov
add
addr16
es
cmc
push
rcl
icebp
push
into
clc
jg
inc
or
nop
inc
xchg
adc
and
cmpsb
in
subb
xorb
jl
sbb
jg
push
mov
xchg
push
mov
dec
mov
test
push
inc
out
iret
loopne
das
test
out
sbbl
orb
pusha
dec
ja
mov
dec
sbb
in
mov
testl
ficoms
xor
inc
loopne
dec
inc
or
lds
jo
ljmp
decl
xor
push
jecxz
xchg
ljmp
testl
ja
adcb
das
mov
movsb
shl
jb
filds
pop
outsl
add
or
das
addr16
or
pushf
stos
add
jg
and
jl
sbb
jecxz
lahf
sbb
inc
push
xchg
push
dec
cwtl
mov
mov
jbe
je
popf
test
ret
ljmp
mov
xchg
xchg
add
sub
stos
lahf
jl
aam
and
rol
and
push
and
or
mov
push
mov
xchg
cmp
xchg
movb
adc
test
stos
dec
dec
aaa
jle
sub
into
ficompl
leave
popf
subb
pushl
test
scas
rolb
push
mov
mov
or
lock
or
or
dec
rcrb
faddl
iret
cmp
add
jl
mov
push
mov
mov
jne
mov
mov
dec
ja
sub
jne
je
mov
mov
push
push
hlt
push
or
out
add
aaa
shlb
lock
sbb
shll
mov
pop
inc
push
inc
pop
orb
sti
cmpsl
mov
dec
into
xchg
dec
jge
xchg
cmp
sub
add
dec
decl
or
add
dec
pop
and
loop
xor
mov
fildll
or
es
test
mov
into
aam
fdivl
lods
mov
int
dec
pop
xchg
movsl
xchg
mov
mov
into
jae
mov
roll
test
adcb
sub
jo
xchg
adc
jg
push
jo
cmpsb
push
and
sbb
inc
pop
jp
push
push
add
jge
push
sbb
ret
lret
pop
xchg
push
mov
mov
push
sub
pop
mov
fiadds
bound
jp
jmp
mov
hlt
push
jns
shr
ret
pushf
mov
jno
shlb
rorl
cmp
test
out
out
js
fidivrl
push
sahf
fsubs
sub
loope
pop
cmp
xlat
dec
pop
lret
andl
sti
push
pop
jmp
xchg
mov
cli
incl
ret
ds
aaa
sbb
jo
out
inc
xchg
mov
inc
js
jp
rcr
sub
repnz
inc
hlt
arpl
inc
fs
shll
insb
sbb
inc
mov
mov
into
add
mov
clc
xchg
pop
push
sarb
loop
rol
pushl
ret
and
dec
pop
das
dec
inc
pusha
movb
incl
out
shlb
xor
mov
sti
shrl
mov
cmp
sbb
adc
dec
rcr
imul
pushl
cli
leave
cmp
jae
xchg
cmp
adc
test
imul
in
inc
xchg
or
aas
cmpb
popf
and
in
xorl
push
sub
es
add
inc
into
loopne
js
adc
sub
dec
pop
loope
outsb
xchg
push
repnz
mov
shll
leave
mov
shlb
jp
sub
adc
mov
xchg
mov
xchg
pop
cmp
fadds
push
cs
sar
es
loope
ljmp
and
sub
aaa
loop
imul
jl
xchg
aam
jb
and
enter
and
jp
sbb
and
xor
fdiv
pop
add
mov
xchg
xchg
scas
out
adc
fidivs
movsb
cmc
mov
add
js
imul
ljmp
lcall
or
stos
repz
mov
jmp
xchg
xor
xchg
inc
mov
loope
orb
xor
inc
es
mov
xor
ss
push
daa
push
cli
decl
icebp
pusha
adc
popa
mov
clc
aaa
inc
fmull
inc
sbbb
and
pop
xor
ja
add
add
jle
mov
jl
mov
sub
or
bound
out
xor
fists
cs
lock
mov
hlt
popf
jle
cmp
xor
push
mov
jo
insl
and
jg
pop
js
pop
pusha
rolb
inc
jne
add
add
mov
and
and
mov
lahf
test
ljmp
lcall
sti
fisubl
dec
mov
xlat
icebp
mov
ljmp
pop
fmull
sub
das
mov
jp
xchg
or
and
cmp
icebp
cmovns
sarb
cld
mov
sbb
adc
inc
cld
dec
aam
cmp
call
lods
jge
and
mov
and
mov
fmull
adc
or
and
movsl
movsl
jbe
sbb
icebp
pop
dec
cmpsb
push
xchg
int3
push
test
decl
orl
push
xor
imul
test
fwait
scas
fisubl
icebp
mov
cmp
push
outsl
std
lahf
xor
lret
incb
mov
sbb
sub
fnstsw
cwtl
push
aam
es
mov
inc
aad
or
lret
ljmp
out
pop
dec
xchg
cmp
mov
std
scas
dec
lret
lods
imul
pop
jmp
mov
mov
movsb
sbb
sub
js
inc
fcoml
lret
ds
xchg
into
clc
add
icebp
add
test
jae
pop
xchg
je
andl
mov
add
das
jecxz
and
dec
jl
stos
mov
js
or
insb
aaa
sub
jg
or
jb
jl
out
xchg
add
sub
dec
sub
fs
imul
xor
mov
mov
mov
sti
aaa
or
call
push
loope
add
incl
test
call
sar
push
push
jecxz
xchg
out
outsb
stc
movsb
outsb
mov
dec
andb
lahf
xchg
int
xor
jbe
xchg
loopne
mov
sar
dec
repnz
sahf
ds
sub
ret
dec
add
dec
call
popa
jmp
adcl
mov
shlb
push
pushf
cwtl
icebp
lds
lret
pop
leave
push
mov
aad
mov
mov
cmpsb
lea
in
mov
leave
movsl
jmp
inc
rcrb
lods
sbbl
call
add
pop
js
int3
fnstsw
fmull
jg
test
subb
adc
data16
arpl
or
sbb
pop
sub
loopne
jp
mov
in
lock
xchg
call
add
clc
push
cmp
inc
jg
mov
jl
ffree
test
cmpsb
rcl
vmovdqu
jmp
mov
popf
lock
test
ret
pusha
popa
sti
xor
mov
adc
nop
stos
loope
stos
sub
inc
nop
or
or
mov
xchg
xor
outsb
dec
jnp
xor
inc
movsb
mov
adcl
inc
jno
shrb
into
aam
and
rcrl
fbstp
jg
es
mov
iret
data16
test
cmpsb
adc
push
adc
lret
xchg
xchg
dec
lcall
dec
pusha
loope
std
or
and
pop
iret
dec
dec
lcall
outsb
cmpsb
cmp
pop
adc
cmp
xor
sbb
notl
shll
loop
xor
xor
push
incl
cmc
cli
push
and
push
ss
in
test
dec
cltd
daa
pop
ret
addb
scas
xchg
or
pop
push
xorb
decb
sbb
test
test
or
sbb
out
add
in
mov
fmuls
arpl
add
cli
xchg
dec
inc
jno
int
pop
and
pop
xchg
lock
xor
lcall
xchg
adc
inc
hlt
out
call
aaa
int3
fiadds
shlb
sbb
dec
add
pushf
fsubp
push
cmc
lret
cld
jp
or
daa
inc
cmp
jo
mov
sub
sub
and
lds
sub
inc
and
rcr
shr
call
pop
and
cmp
sbb
sub
adc
inc
lcall
lock
mov
call
xchg
imul
lret
xchg
popf
jno
addb
push
hlt
mov
movsl
shrb
xchg
sar
push
aas
cli
xor
scas
push
xor
mov
adc
gs
dec
xor
jl
mov
mov
les
insb
inc
add
push
push
ret
loop
sub
mov
push
sbb
lahf
pop
std
loope
mov
mov
in
cli
js
int3
imull
mov
and
fs
sub
gs
push
sbb
pop
movb
mov
imul
testb
aas
mov
xchg
and
push
cmc
test
mov
mov
push
mov
das
or
inc
call
lods
sub
es
fists
xchg
dec
loop
inc
loopne
mov
sbb
mov
jmp
sbb
mov
lock
loop
dec
cmpsb
adc
pop
mov
pop
xchg
iret
inc
out
add
lea
outsb
aad
xchg
cwtl
mov
or
jg
out
push
cmp
sub
pop
dec
lock
mov
rorl
aaa
sti
scas
mov
push
mov
addb
pushf
add
fimuls
in
icebp
je
out
sub
pop
mov
sub
sub
or
test
repz
push
push
loopne
mov
or
fdivl
push
pop
sbb
add
jge
jbe
rcll
in
jnp
adc
divb
cld
fwait
pop
or
enter
cmpsl
push
mov
inc
cmpb
loop
sub
stos
mov
sbb
andl
dec
aad
add
lods
cmp
mov
ljmp
push
movsl
cld
fisttps
sub
add
cmp
ja
mov
dec
xor
push
push
mov
loop
sar
negb
cs
les
jno
ss
lods
add
daa
xchg
incb
inc
lods
out
movsl
sbb
cltd
lock
shl
adc
sbb
jg
add
mov
test
jnp
dec
xor
mov
aad
sbb
mov
or
jle
mov
or
in
jo
cmp
pusha
hlt
jle
mov
add
nop
ja
or
ffreep
mov
je
rorl
fiaddl
pushf
data16
js
sbb
or
cli
sbb
jmp
push
movsb
sbb
push
push
insb
out
push
cmpsl
loop
cmpsl
testb
mov
pop
xchg
daa
and
repz
cmp
rorb
cmpsl
xor
js
inc
lret
test
or
push
int
test
test
arpl
fnstcw
adcb
push
rcll
std
mov
stos
sbb
mov
lret
int
addl
push
and
xor
lret
sub
es
in
sbbb
call
les
pop
cld
or
leave
sbb
aam
add
push
lock
ret
pop
add
jbe,pn
xor
aaa
cld
or
addl
enter
cld
pop
shll
sub
sbb
inc
stos
xor
inc
sbb
cmp
es
les
adc
loope
call
sub
ret
dec
icebp
mov
popl
and
dec
cmp
xor
sub
mov
pusha
cmc
out
icebp
insb
inc
lods
jecxz
mov
push
fwait
push
sbb
mov
aam
rolb
pop
mov
sub
popa
xor
andl
mov
adc
mov
sbb
push
lock
mov
mov
test
in
sub
add
push
pop
mov
adc
cld
push
je
les
cmp
or
xchg
fucom
push
xchg
or
sbb
jno
sub
mov
out
and
stos
mov
sub
jg
mov
pop
inc
and
jmp
fldt
adc
pop
cld
push
xor
fwait
jns
icebp
hlt
ja
push
decl
faddp
popf
xor
out
sub
cwtl
adc
cmp
fmul
fmull
sti
inc
fwait
cmp
mov
sbb
cmp
sbb
dec
es
andb
or
into
and
jl
pop
push
mov
push
pop
jecxz
add
addr16
addr16
in
push
mov
mov
test
popf
test
cmp
fs
rcr
dec
and
mov
repnz
jmp
cwtl
fbstp
sahf
popl
mov
xor
jl
mov
jmp
xchg
sub
sub
or
xor
dec
jge
sbb
shlb
rclb
hlt
sbb
mov
mov
test
test
ret
test
cmc
push
outsl
sub
push
xor
mov
in
lcall
inc
shrb
scas
cld
mov
dec
js
enter
lcall
sub
xor
cld
or
adc
icebp
inc
or
lock
subb
push
xor
movsb
pop
dec
imul
std
out
jp
and
sub
mov
or
sub
push
lret
sti
mov
add
int3
push
pop
xchg
cli
push
ss
mov
cmovs
lcall
mov
das
inc
loop
mov
add
cs
pop
and
and
rcrb
mov
jle
lcall
pop
xchg
outsb
mov
cmc
sbb
or
adc
cwtl
in
jbe
xchg
filds
cmc
push
ds
pusha
sub
pop
xchg
inc
dec
jg
jg
push
int
mov
les
jge
dec
xchg
ret
jle
mov
adc
pop
and
xor
hlt
filds
pop
movsb
add
push
call
jmp
mov
data16
cmp
fldt
arpl
pop
mov
sub
scas
clc
je
and
popf
jp
rolb
sbb
mov
mov
push
clc
lods
push
or
push
ss
jmp
out
and
pop
hlt
push
mov
bound
lods
mov
in
cwtl
fiadds
mov
adc
lret
pop
ret
inc
xor
pextrw
adc
ret
dec
cwtl
cmpsl
inc
add
pusha
mov
xor
cli
roll
movsl
and
jnp
outsb
rorb
xlat
push
mov
ds
fsubl
aad
cmp
lods
fucomp
imul
mov
in
jbe
dec
data16
cli
push
add
jns
inc
std
cmp
sbb
and
jg
or
dec
negl
jmp
lods
jbe
sub
sub
out
clc
cmpsb
incl
fs
adc
push
enter
push
inc
inc
enter
loope
jge
lcall
rorb
sub
hlt
mov
clc
mov
mov
adc
jecxz
and
cmp
test
pop
fidivl
push
sbb
cmp
in
movsl
insb
sub
cld
lcall
imulb
iret
mov
popa
or
xchg
popf
sbbb
sbb
sub
subb
adc
fcmovbe
movsb
or
mov
adc
sti
push
push
sub
aaa
or
into
pop
fisttpl
mov
data16
data16
test
mov
jg
aas
shlb
mov
inc
push
or
addr16
cmp
sub
jne
cmp
adc
inc
jecxz
add
mov
popa
jecxz
mov
adcb
mov
nop
ljmp
add
lahf
je
jl
inc
or
shrb
push
mov
push
aad
das
rcr
inc
push
repnz
pop
das
clc
out
cmp
push
sbb
js
xor
or
mov
daa
sarb
cli
mov
mov
sbb
test
dec
pop
jecxz
push
ljmp
lock
les
lcall
imul
loopne
add
ja
mov
je
stos
jb
and
mov
in
lcall
mov
mov
mov
mov
add
jno
clc
je
mov
std
leave
decb
popa
in
push
add
cmp
filds
pop
sahf
xchg
hlt
pushf
pop
mov
out
inc
in
cmp
cmp
add
dec
adc
fwait
test
jmp
les
shrl
or
mov
adc
adc
pop
xchg
dec
fiaddl
clc
test
push
pushf
or
mov
dec
in
lods
jne
test
push
xor
loop
push
cmp
add
stos
decl
inc
ret
lods
cmp
stos
or
and
dec
mov
testb
test
clc
inc
jo
mov
sarl
jne
lock
dec
testb
movsb
adc
ret
out
insl
add
push
dec
imul
dec
stos
hlt
aaa
or
pop
pop
add
xchg
jle
dec
ss
fwait
repz
rcl
rol
mov
add
jmp
and
mov
xor
cmp
inc
or
loop
cli
incl
popf
xor
call
cs
cld
and
lcall
out
aam
das
sub
lds
loop
repnz
inc
stos
sbb
xor
dec
stc
arpl
push
std
pusha
adc
mov
pop
mov
push
ss
clc
and
or
add
mov
sbb
push
loopne
je
in
jnp
add
data16
push
movsb
test
push
hlt
aas
cmpsl
xchg
sub
sub
xchg
and
and
dec
push
or
inc
lret
adc
sbb
xchg
inc
cmp
xlat
cld
push
out
out
push
loopne
push
pop
cmc
add
test
js
rorb
mov
pop
pop
adc
push
pop
adc
adc
insb
cld
mov
test
stos
mov
inc
ljmp
aam
pop
sub
sbbl
gs
ja
xchg
fs
mov
pusha
mov
insl
fcoml
xor
insb
loopne
mov
push
out
xor
mov
xor
jne
in
cmp
insb
subl
lahf
mov
sti
sbb
test
fcmovnb
lds
cmp
adc
push
es
lahf
popf
adc
xlat
mov
cmpsb
test
fadds
adc
lahf
scas
fiaddl
ds
or
inc
xchg
cmpsb
adc
outsl
clc
mov
inc
js
mov
push
push
gs
or
scas
or
xor
or
push
mov
aam
fs
cmp
sbb
xchg
jbe
lcall
sbb
adc
pop
repz
jmp
stos
stos
dec
mov
adc
xchg
decl
or
or
fcom
mov
out
mov
sahf
aaa
loopne
push
mov
sub
pop
stos
cmc
sbbb
outsb
out
and
mov
sahf
xor
add
test
clc
mov
add
inc
sbb
cs
loop
push
and
push
cld
int
xchg
and
in
or
stos
sar
jmp
fwait
sbb
adcl
push
jmp
ljmp
dec
adc
mov
and
push
sub
xor
xor
mov
mov
pop
add
neg
movsl
dec
xchg
scas
adcl
push
mov
fildll
imul
inc
sbb
out
jmp
or
or
fsubr
lcall
and
fsubrs
pop
loope
cld
mov
inc
loopne
push
mov
dec
shll
js
mov
pop
sub
daa
leave
cmc
or
hlt
xchg
scas
sub
fisttps
pop
lcall
rcl
jp
sbb
or
movb
mov
loop
lahf
clc
and
out
cmpsl
xor
fildl
add
adc
adc
call
pop
inc
mov
shlb
incb
fs
adc
add
dec
cmpsb
inc
mov
sub
fsubl
test
clc
incl
xlat
adcb
inc
stc
dec
or
xchg
insb
pop
ja
xor
jne
dec
mov
andl
fimull
and
adc
mov
sbb
xor
add
aas
movsb
lock
push
repz
jno
or
outsl
test
decl
std
mov
pop
scas
xor
mov
lods
mov
cli
jo
lods
add
cwtl
ret
mov
add
ss
push
cwtl
outsb
push
aad
push
bound
and
cli
decb
outsl
test
inc
cmp
sarl
or
sbb
not
jnp
sbbl
mov
xchg
mov
fnstenv
cmp
stc
cld
mov
push
xor
sub
or
pop
add
outsb
xor
dec
cld
pop
jmp
stc
hlt
dec
push
add
add
insb
add
xor
fiaddl
cmc
add
mov
cs
out
jo
repnz
push
pop
mov
fnstenv
into
pop
xchg
sahf
or
rorb
pop
pop
in
repnz
add
repnz
jecxz
loop
mov
sub
fcomp
sbb
mov
mov
sub
fcoml
mov
xor
xchg
data16
inc
xor
inc
das
jl
es
aas
sarb
xchg
clc
aas
aam
add
mov
add
mov
adc
pop
imulb
movsb
ss
inc
cmpsl
and
xchg
dec
dec
or
sub
pop
fimuls
jb
dec
imul
lea
lock
mov
cltd
dec
loopne
cli
inc
fisubs
sbb
push
mov
bound
sub
test
dec
mov
adc
push
push
ljmp
test
cmp
nop
stos
and
out
jg
pop
pop
inc
call
mov
fiadds
ret
js
pop
xor
adc
sbb
iret
cmpsb
xor
cld
out
push
sub
in
ljmp
jno
fimull
push
in
mov
mov
in
push
lcall
aad
cmp
shlb
daa
and
dec
popf
or
mov
fcoml
clc
rorl
and
mov
in
or
lahf
mov
inc
sti
cmpl
outsb
and
aaa
jbe
and
push
cmpsb
sub
inc
adc
add
cltd
mov
xor
xchg
push
fidivrs
or
add
and
mov
fbstp
pop
jno
incl
fisttpl
pop
dec
jne
iret
iret
mov
push
adc
jbe
outsb
shl
fcmovne
hlt
cltd
pop
mov
sbb
xchg
rorl
xchg
cmpb
or
movsb
or
fcmovbe
and
inc
call
sbb
sbb
jno
sbb
std
cmpsl
push
call
lds
cmp
mov
sarl
add
sbb
mov
mov
fcompl
mov
mov
inc
push
pop
mov
std
add
dec
pop
mov
mov
les
leave
data16
jecxz
mov
ljmp
cli
fcmovnbe
mov
sub
push
rorl
xor
cli
das
ret
add
fdivs
and
sub
adc
cmpsb
icebp
dec
push
adc
inc
mov
adc
je
out
mov
rorl
mov
push
pcmpeqw
mov
iret
sbb
inc
cld
punpckhdq
adc
mov
in
dec
popa
mov
pop
jns
dec
dec
mov
int3
adc
incb
mov
rcll
mov
insb
shl
adc
cmp
loope
lret
dec
lret
cld
fistpll
push
cmpsb
lea
push
add
dec
mov
dec
pop
mov
mov
push
scas
loop
inc
inc
ret
add
mov
mov
push
lret
dec
insb
cmp
jb
ret
popf
addl
leave
out
mov
xor
adc
sub
mov
cmp
les
dec
outsb
int
shr
je
push
cltd
jnp
scas
mov
or
sub
pop
dec
fidivl
fwait
or
je
jnp
lea
push
cmc
in
cld
add
sbb
xor
xchg
sbb
add
xor
cmp
mov
inc
repnz
scas
and
ret
jg
ljmp
add
jmp
adcb
sub
xor
sahf
inc
mov
xlat
fists
xorl
out
inc
nop
cmp
lahf
shlb
xchg
jb
scas
nop/reserved
inc
sub
imul
push
dec
adc
cli
dec
push
or
pop
add
pop
add
mov
outsb
popf
xor
xchg
push
fwait
rcrb
inc
bound
xchg
ds
and
jns
xor
cwtl
int
adc
imul
adc
and
fcoms
fstps
sahf
loop
cli
int3
xchg
mov
stos
cld
push
push
scas
nop
inc
push
mov
xchg
add
jbe
sbb
push
adc
and
test
cmp
decb
addb
orb
test
dec
fimuls
movsb
jmp
fwait
shll
enter
adc
std
test
sub
xchg
fcompl
or
addl
cli
or
inc
xor
dec
movsb
pop
add
repz
test
sarb
push
xchg
sub
in
and
inc
mov
mov
push
pusha
dec
arpl
jle
incl
insl
adc
add
aaa
mov
dec
push
fists
jge
addb
test
mov
xchg
push
xchg
pop
xor
hlt
rorb
insb
in
inc
outsb
add
insl
xchg
std
push
cli
bound
mov
mov
jno
int
mull
sub
xchg
dec
and
sbb
push
jns
sbb
faddl
icebp
cmp
cmpl
lock
rcrb
jo
mov
mov
adc
dec
pop
inc
push
ds
jbe
lea
push
add
pop
pop
sbb
inc
imul
cs
xor
jg
jbe
or
mov
enter
sbb
xchg
cwtl
sbb
cmpsb
pushl
insb
or
fcomps
popf
mov
ret
jnp
add
adc
cmpsb
or
dec
pop
cld
jg
in
andb
call
push
jnp
andb
aaa
mov
lods
jb
cmp
gs
and
inc
sbb
out
xor
jo
pop
sti
pop
scas
mov
adc
call
xchg
add
dec
popa
in
mov
fdivrs
dec
stos
mov
cmp
rcrl
dec
lock
movsb
add
push
ret
cld
cs
sbb
xchg
sysenter
ret
mov
xchg
ljmp
mov
jg
add
daa
jmp
cmp
decl
mov
stos
js
push
leave
jae
arpl
sbb
adc
dec
lret
mov
jl
inc
cld
xchg
je
xchg
dec
inc
test
pop
cld
in
sbb
hlt
inc
jle
ss
adc
fsubs
jns
adc
cmp
movsb
nop
andb
jb
push
das
jo
sbb
gs
stos
adc
adc
jle
fmulp
dec
sbb
pushf
bound
mov
addl
cmp
adc
lods
lds
push
in
mov
fistl
sub
lds
imulb
ljmp
or
xabort
sub
fwait
adc
inc
cli
jmp
outsb
lods
or
push
inc
pop
inc
mov
dec
or
mov
sbb
pop
rorb
pop
xor
or
lcall
int
sub
nop
or
sbb
sub
les
pop
xchg
mov
push
xor
mov
cwtl
pushf
xchg
jp
and
and
or
mov
fmuls
xchg
sbb
mov
pop
mov
ds
sub
xorb
mov
xchg
cmc
mov
aaa
fdivr
mov
cmp
dec
mulb
das
fadds
jg
ret
adc
mov
xlat
dec
and
leave
cmpsl
cmp
xlat
xchg
cmp
out
adc
lock
pop
pop
test
outsl
lods
das
fwait
mov
call
xor
mov
sahf
xchg
enter
pop
fcoms
add
xor
loope
dec
cmc
jbe
out
aaa
jge
and
xchg
sbb
shll
jecxz
call
cmp
daa
cld
idivb
jmp
outsl
into
test
add
aaa
lcall
dec
add
insb
fadds
je
add
scas
xor
daa
out
sahf
call
add
adc
adc
in
push
decl
pushf
test
and
dec
mov
pop
or
jmp
mov
sbb
inc
cmc
mov
dec
pushl
dec
inc
icebp
push
repnz
mov
mov
and
fldt
cli
decl
mov
jp
sbb
je
xchg
dec
pop
icebp
jb
call
ljmp
cmp
jmp
jecxz
xor
fwait
ds
mov
xor
fldt
outsb
test
jbe
cwtl
fisttps
cmc
fistl
jp
jg
inc
mov
or
cwtl
ds
mov
mov
sbb
push
dec
frstor
mov
and
insl
sub
push
into
fsubl
in
into
inc
aas
daa
jecxz
add
xor
pop
sahf
mov
fwait
and
cmc
fwait
sbb
mov
pop
jp
movsl
push
call
mov
aad
jmp
or
and
xor
es
xor
sbb
pushl
movsb
mov
out
adc
cmp
and
cwtl
fldl
mov
lods
cs
and
fistpll
cmpsl
hlt
mov
sub
stos
pop
jmp
fcoml
fcompl
jnp
mov
mov
cli
cs
jno
jg
xchg
cmp
and
push
loope
or
or
jle
mov
mov
cmpsb
push
sub
push
dec
inc
mov
inc
fmuls
loop
push
and
jo
or
push
cltd
add
push
xchg
movsb
js
dec
pop
loop
inc
int
xorb
xchg
cmp
jmp
add
inc
pushl
add
mov
ljmp
inc
jg
sub
jnp
cmc
jmp
dec
out
inc
mov
sti
cmp
rcr
aas
add
mov
lock
shr
aas
push
mov
inc
mov
sbb
nop
movsb
test
lahf
into
jb
lods
push
scas
out
aaa
cmc
rclb
xchg
cmp
cmc
sbb
inc
imul
mov
je
gs
insb
pusha
or
test
mov
cmc
sbb
lock
cmp
movsl
lock
stos
pop
int3
xorl
ljmp
and
ljmp
ja
adcb
shlb
mov
push
std
aam
jbe
filds
mov
sahf
fldenv
loope
mov
shlb
in
sub
repnz
fistl
nop
pop
or
pop
pusha
mov
push
and
jl
jmp
rorb
pop
xchg
xchg
ret
push
sub
push
sti
imul
adc
jb
push
xorb
push
cmpsb
dec
add
cld
jg
mov
stc
mov
pop
pushf
cmp
push
sti
pop
pushw
pop
and
mov
jmp
lret
and
jle
movl
daa
fwait
or
sbb
cmp
push
mov
sbb
cld
data16
jg
out
movsb
or
jbe
frstor
jb
xor
sub
les
int3
push
ud0
pusha
mov
pop
insb
loope
add
mov
ret
rorl
int
hlt
mov
pop
cmp
cmp
movsb
fmull
cld
leave
shrl
mov
mov
mov
mov
inc
filds
aad
mov
mov
aas
add
cmp
nop
push
stos
loopne
loope
lcall
push
loope
dec
push
fldt
enter
add
test
mov
and
fisttpl
loopne
popa
add
jbe
dec
jg
je
sub
out
lret
test
push
jnp
sub
dec
aam
inc
into
daa
sub
xor
pop
sub
subb
ud0
lret
imul
ret
gs
nop
gs
out
adc
pusha
aas
push
cmp
mov
and
or
pop
int3
adc
ror
push
sbb
sub
mov
lret
jo
and
lods
mov
pop
adcb
mov
fisubrl
into
xorb
or
mov
pop
or
loopne
inc
mov
add
or
mov
jno
xlat
andb
filds
shlb
sbb
ljmp
lea
imul
lret
sub
xor
xchg
mov
dec
sbbl
pop
aam
and
xchg
xchg
subb
adc
dec
insl
aam
test
sub
push
mov
mov
mov
clc
push
adc
pop
push
cld
fsubl
lcall
xor
dec
mov
push
dec
or
jno
repz
daa
lret
loopne
push
or
call
pop
into
sub
and
ret
dec
add
bound
mov
sbb
insl
xchg
testb
mov
std
aad
or
insb
test
cmp
fs
xor
fiaddl
icebp
xorl
fiadds
stos
popa
ret
add
push
or
orl
add
mov
ret
jecxz
cmp
pop
cmp
cmp
mov
inc
mov
test
nop
adc
mov
cmp
lea
jp
int3
mov
rcrb
jge
das
and
test
fadd
or
out
or
inc
mov
std
add
vorps
call
cmp
test
testb
pop
fsubs
adc
sub
xchg
lock
and
icebp
sub
pop
pop
fisttpl
push
mov
sbb
les
fwait
mov
adc
pop
addb
mov
inc
mov
pop
scas
add
pop
outsb
scas
hlt
lcall
xchg
adc
xchg
fnsave
cmc
or
in
xlat
pop
mov
incb
xor
js
mov
aad
pop
jbe
bound
xchg
mov
pop
mov
test
sar
jg
aaa
or
mov
cwtl
leave
mov
adc
test
fs
add
cwtl
cmp
or
inc
push
and
and
lock
aam
add
jmp
add
test
pop
dec
pop
call
aam
jne
xchg
sbb
out
mov
cmp
mov
call
aam
or
adc
cld
andl
inc
or
mov
js
inc
push
sti
frstor
nop
cs
fwait
add
push
sbb
or
ja
pop
jmp
and
inc
mov
hlt
adc
mov
jmp
enter
add
adc
rclb
mov
insb
bound
or
adc
aad
and
pushf
imul
xchg
fwait
or
test
clc
sub
lods
jne
or
shll
lret
inc
xor
push
data16
fldenv
sbbl
inc
lahf
push
scas
lret
decb
jno
add
pop
in
addr16
add
push
call
sub
repnz
mov
add
and
ss
mov
mov
dec
int3
xor
and
shr
inc
out
pop
push
sub
xchg
and
cmp
aaa
pop
and
rcll
cli
arpl
and
shlb
mov
rcrb
mov
shrb
cmc
mov
cmpsl
in
imul
or
in
inc
out
pushf
js
lock
jg
sarb
icebp
push
dec
pop
and
imul
out
loopne
pop
add
inc
add
mov
incl
daa
lods
int3
es
pop
shlb
inc
mov
mov
lcall
pop
ret
and
and
inc
or
stos
test
popa
div
in
jb
jne
gs
and
dec
mov
adc
mov
jge
and
adc
jns
aam
call
jnp
les
push
ss
add
push
jmp
pop
jbe
ret
jno
push
xchg
push
sub
mov
mov
pop
les
adc
imul
std
fimuls
or
or
ljmp
cld
lcall
xor
int
add
test
lret
add
dec
add
dec
inc
sbb
jbe
jmp
data16
cs
and
add
mov
adc
shlb
and
lahf
test
dec
bnd
sbb
test
loopne
push
push
or
fcomps
dec
add
mov
and
test
jle
jns
jmp
cltd
imul
imul
inc
mov
inc
sub
or
daa
or
inc
inc
sbb
and
cltd
inc
jl
mov
faddl
shlb
add
pop
popa
xchg
out
pop
pusha
mov
aam
shl
xchg
incb
pop
push
inc
call
or
push
push
pop
ror
imul
movb
lcall
movsl
add
xchg
push
mov
jl
jmp
test
xor
mov
movl
add
decl
dec
xchg
mov
aam
cmp
ret
cmp
sub
ljmp
adc
xchg
fs
add
add
lods
dec
sub
push
rorl
cmc
mov
enter
outsb
in
fcoml
and
mov
pop
add
push
cmp
incl
dec
ss
pushf
fists
lock
shrb
and
decl
imul
inc
add
inc
fidivrs
sbb
and
cmp
mov
inc
mov
movsb
in
test
sbb
and
call
or
adc
add
jbe
and
cmp
mov
mov
mov
mov
fstps
roll
sahf
add
add
int3
push
repz
hlt
ljmp
aad
lret
icebp
pop
adc
aaa
sbb
rorl
ljmp
pop
loopne
lret
mov
lret
ret
daa
xchg
popf
mov
into
aaa
inc
xchg
js
pop
sub
nop
push
add
cli
inc
push
js
movl
push
shlb
repnz
sbb
aas
inc
and
mov
or
insl
sub
dec
adc
hlt
mov
roll
test
rcll
insl
pop
and
loopne
test
or
push
and
jl
loope
addr16
inc
mov
sbbb
orl
xchg
inc
insl
jg
testb
mov
jle
mov
aam
out
add
xchg
sbb
jecxz
shlb
out
aas
cltd
or
dec
repz
push
movsb
out
ljmp
cmp
mov
cmpsb
push
pop
out
inc
inc
pop
and
dec
fld
out
jecxz
sub
pop
aas
adc
lods
add
pop
pop
nop
adc
repnz
jno
ja
sub
aas
add
icebp
mov
push
adcb
xchg
xor
insb
mov
adc
mov
xor
cld
fisubs
inc
mov
xchg
xor
mov
add
cld
jmp
and
add
jle
data16
les
inc
lret
cmp
sbb
mov
nop
cmpsb
jg
imul
sub
outsb
xor
sbb
or
and
and
inc
sarb
out
cmp
shlb
ljmp
or
fstps
outsb
add
add
jo
jb
outsl
hlt
adc
lret
ss
or
or
mov
xchg
inc
push
jno
data16
sbb
shrb
repnz
adc
push
mov
xchg
clc
in
movsb
jb
cmpsl
movsb
sahf
cld
leave
cmpsl
cmp
jns
clc
decl
inc
adc
mov
cmpsl
or
cmp
pop
mov
pop
sub
mov
stos
dec
push
jne
ret
push
pop
lods
adc
xor
ljmp
mov
cs
and
xchg
int
adc
ljmp
andl
mov
add
pop
clc
push
pop
testb
xor
cltd
adc
jnp
xchg
or
sbb
leave
xor
add
sbb
jns
cld
pushl
dec
pop
cld
addr16
inc
cmovs
in
add
adc
sar
push
sahf
ret
inc
sbb
nop
aas
push
adc
fdivl
outsl
int
pop
sbb
cmp
addr16
fisubs
popf
pusha
nop
jp
out
les
push
ds
xor
inc
mov
clc
lcall
xchg
xchg
add
add
inc
mov
add
cmp
repz
mov
sbb
mov
cmp
outsb
pop
and
ljmp
mov
add
pop
stos
push
sarl
js
sbb
sub
int
cmc
push
test
cltd
xchg
fwait
jb
ljmp
push
cmp
lds
add
xchg
adcl
dec
xor
imul
ljmp
or
mov
enter
xor
xor
mov
push
clc
push
je
mov
das
fidivl
adc
mov
cmp
push
hlt
push
mov
and
xchg
js
jae
adc
push
fcoml
jg
punpckldq
test
jle
ret
pop
add
sbb
aaa
mov
fidivrs
mov
or
mov
outsl
out
push
cmp
dec
mov
sbb
jnp
je
push
pop
push
lcall
dec
push
mov
nop
adc
xor
xchg
xchg
leave
das
out
cmp
pushf
mov
imul
mov
dec
xor
mov
repnz
lock
int
mov
mov
xchg
out
faddl
aam
jle
lds
ret
push
add
mov
mov
mov
sti
pop
mov
add
je
sbbb
sar
fcos
and
shlb
push
mov
aaa
lcall
adc
add
cmp
test
lcall
shrb
xor
imul
or
xor
lret
jno
jge
sti
xchg
jl
ljmp
mov
or
sub
xor
pop
add
add
mov
ss
and
lods
xchg
loopne
jmp
cmp
and
shll
lret
push
ficomps
adc
cmp
and
jmp
leave
mov
cld
sar
scas
iret
in
lds
arpl
ret
imul
jp
fldcw
loope
popa
jno
adc
or
sub
and
inc
mov
add
in
jle
ror
mov
test
mov
push
out
push
int3
sbb
adc
fildll
adc
sub
cmp
mov
stos
ret
pop
out
adc
in
int3
dec
je
fscale
scas
xor
lret
sti
jbe
es
push
pop
lods
ljmp
inc
aam
xchg
lcall
pop
mov
sbb
icebp
ja
clc
add
mov
cs
imul
dec
inc
dec
pop
test
or
outsl
in
repz
scas
pushl
mov
ss
sub
test
leave
nop
push
pop
or
jmp
decl
sbb
inc
aam
add
loop
xor
cmp
cld
aam
push
push
pop
in
in
sub
push
clc
sub
lock
rcrl
insb
xor
xchg
sbb
adcl
addr16
ja
inc
sub
mov
and
or
enter
adc
aaa
jne
addr16
cmc
and
mov
aaa
add
jmp
enter
add
xchg
insb
ret
cwtl
cmc
xchg
fisttpl
or
jmp
in
fdiv
dec
add
push
andl
mov
fisttps
or
xor
add
and
inc
repz
and
xor
xchg
mov
adc
adc
ljmp
add
insb
adc
dec
or
pop
loope
push
popa
das
clc
push
add
addr16
rolb
fistl
sub
push
sarb
subb
sub
bound
mov
ss
icebp
cmp
or
rolb
mov
add
jmp
or
or
mov
inc
inc
icebp
mov
inc
scas
cmp
mov
cmc
sbb
push
clc
xchg
popf
mov
les
test
out
xchg
add
inc
mov
enter
sub
je
dec
pop
and
push
les
xchg
xor
lret
dec
mov
sbb
and
imul
sub
int
inc
xor
sub
cmp
cmp
push
std
decl
in
jno
sub
or
cmp
inc
jbe
in
rorb
xchg
int3
jo
ss
sbb
es
inc
cld
mov
mov
insl
shrl
cmc
inc
scas
jmp
fdivrl
dec
xor
icebp
or
mov
jbe
cmc
icebp
inc
adc
neg
dec
loop
mov
incl
adcl
inc
pop
cli
xchg
call
add
or
aam
fadd
dec
or
out
cli
repnz
pop
cli
pop
gs
inc
sub
mov
push
sub
mov
xchg
push
jo
push
cmp
mov
jp
inc
addr16
cmp
lods
sbb
mov
push
inc
mov
and
adc
je
push
push
xor
cmc
jmp
xorps
in
sub
test
add
shrl
mov
call
filds
js
inc
lea
mov
mov
add
mov
mov
lea
xchg
stos
add
aas
enter
or
das
stos
jno
sbb
add
jle
jmp
mov
and
mov
outsl
in
jg
in
adc
adc
cs
mov
enter
cli
loopne
std
out
ja
or
loope
inc
out
fcom
jmp
adc
cmpb
test
or
pop
push
cwtl
rorl
psubusb
cmp
insl
adc
jmp
decl
mov
sub
subb
mov
push
mov
out
or
push
fstl
sti
push
mov
sub
pop
xchg
pop
add
movsl
pop
loop
mov
jg
outsb
jnp
xor
rcrb
xchg
mov
inc
cld
jecxz
scas
jns
inc
jo
pop
adc
adc
nop
scas
xchg
les
popa
arpl
and
imul
movsb
cmp
push
add
jmp
loope
sbb
outsb
filds
es
or
and
repnz
add
arpl
sub
sbb
scas
adc
es
test
jns
fidivrl
ss
and
and
cltd
scas
jne
icebp
mov
insb
jl
ds
ds
mov
mov
and
es
int3
jp
cmp
push
pop
adc
and
insb
fildll
add
or
push
push
ficomps
lahf
cmp
movsb
or
or
xor
dec
incl
pop
popf
pop
push
cld
stos
xor
in
add
aas
into
inc
inc
xor
pop
push
lcall
xor
mov
jl
sub
incl
mov
mov
pop
and
push
inc
iret
xchg
testl
dec
inc
sti
or
clc
cwtl
and
call
scas
imul
cmp
lock
mov
mov
arpl
ss
and
pop
pop
xor
adc
jg
ljmp
js
lds
add
pop
mov
sbb
nop
mov
adc
das
push
jecxz
int3
sbb
aaa
dec
leave
mov
xchg
cltd
lcall
insl
jno
mov
lods
rorl
fs
sbb
stos
sub
push
push
daa
data16
and
sbb
jno
inc
xor
inc
add
fisttps
std
pop
cld
mov
scas
cmp
mov
ljmp
ret
ja
push
xchg
dec
or
xchg
jmp
adc
or
add
in
je
fstl
je
cmpsl
or
das
and
and
dec
inc
inc
jb
in
mov
in
push
sbb
jbe
ljmp
inc
mov
outsb
rorb
pop
adc
popa
lcall
or
into
xor
mov
sub
gs
in
dec
loope
loope
clc
push
loop
mov
add
sbb
int3
sub
push
cmpsb
fisttpll
sub
lcall
cmp
mov
jg
les
rcll
pop
sbb
fiadds
stos
mov
adcb
in
sti
inc
pop
mov
mov
fisttpl
aas
add
sbb
nop
testl
mov
jmp
ljmp
xor
leave
fs
adc
push
mov
pop
pop
pop
and
xchg
out
lock
mov
cltd
ret
dec
aad
add
mov
adc
loopne
push
roll
pop
and
jle
inc
sub
xor
fadds
rorb
sbb
cmp
icebp
pcmpgtb
cmp
sbb
bound
push
dec
cmp
ja
popf
cmpb
cwtl
stos
js
xchg
jae
inc
cmp
mov
sub
wrmsr
dec
add
push
push
inc
push
ljmp
ficoml
pop
das
jle
pusha
bound
aam
loopne
nop
jb
out
stos
adc
jnp
cld
mov
inc
dec
clc
pop
push
dec
mov
xchg
xchg
xchg
jae
xchg
dec
add
and
cld
cmpsl
pop
push
xor
shlb
xlat
les
out
push
lret
jmp
icebp
loopne
loope
pusha
pushf
adc
pop
or
push
daa
and
pushf
fisttps
leave
inc
and
jge
ficoml
mov
decl
pop
les
clc
cmp
pop
xchg
cmc
das
sub
aaa
xchg
or
movsb
shlb
in
sub
enter
push
lds
jo
or
mov
inc
push
xchg
add
add
xchg
rcrb
sarb
std
jg
mov
enter
rorb
adc
xchg
out
idiv
push
adc
ret
jl
sub
jmp
scas
jle
cmp
js
imul
std
cld
loope
leave
test
aad
xor
loopne
test
orl
push
and
jo
mov
xor
jnp
leave
mov
arpl
and
test
dec
sbb
cltd
js
scas
enter
push
sbb
rol
popa
hlt
cmc
ljmp
xlat
repnz
and
mov
test
pop
shl
push
inc
push
sub
pop
test
inc
ficompl
jmp
inc
lock
daa
jne
mov
stos
out
add
mov
sbb
test
stc
lods
or
ret
inc
scas
pop
icebp
mov
mov
ds
push
push
adc
pop
xor
jg
sub
int3
iret
add
xor
call
cld
scas
mov
jno
jo
sub
loopne
cmpsb
lds
push
stos
push
sar
push
jmp
adc
test
sbb
aas
adc
rcrl
cmp
jbe
leave
nop
or
mov
fcompl
subb
sarb
ljmp
scas
aaa
add
fists
cmp
mov
in
xchg
lock
frstor
fwait
mov
adc
cld
lods
call
mov
adc
andb
movsb
loopne
mov
mov
lahf
cli
pop
fs
addr16
or
lcall
or
rorb
and
sub
cmp
sbb
mov
adc
xor
inc
xchg
lds
cs
clc
and
es
mov
mov
hlt
lcall
mov
inc
jle
mov
mov
clc
ja
icebp
dec
mov
pop
test
or
jp
aad
sbb
lea
decb
out
aaa
hlt
scas
xchg
mov
push
sub
adc
sarb
es
sti
aas
inc
mov
mov
pushf
loopne
or
out
andb
and
add
xchg
rcl
and
sar
sbb
in
inc
adc
fdivrs
rcr
pusha
test
fstl
jg
pop
enter
hlt
sbbl
adc
ljmp
adc
sbb
ljmp
sti
sbb
mov
test
push
push
jg
pop
add
mov
sub
mov
lock
out
and
lock
lea
lret
cmc
lock
or
ss
and
pop
inc
int3
add
sti
inc
nop
popf
push
pop
lock
or
xlat
orb
cmc
test
in
sbb
inc
mov
mov
adc
jns
mov
xchg
xchg
lcall
mov
adcb
cmpsl
push
cmp
pusha
aam
add
xor
xchg
push
inc
jmp
sub
pop
jb
mov
movsb
fucomi
lods
sbb
aad
arpl
rol
sbb
pushf
mov
js
cld
lds
test
stc
mov
lock
dec
mov
push
sub
call
adc
inc
sub
icebp
push
xor
pop
movsl
sub
loope
mov
inc
fbld
stc
sub
mov
mov
orl
sahf
push
subb
daa
inc
aaa
ljmp
loopne
push
mov
sbb
sub
dec
inc
sarb
enter
xchg
mov
or
push
mov
jp
inc
sbb
loopne
decl
adc
push
add
adc
ja
rolb
add
loopne
adc
push
movsl
xchg
pop
call
cmc
or
inc
pop
hlt
adc
lcall
sub
jp
scas
mov
imul
mov
xchg
mov
xorl
andl
loope
fcomip
xlat
push
inc
mov
int3
push
xor
fldl
movsb
xchg
mov
das
mov
into
xchg
xchg
mov
push
cmpsl
popa
push
add
aad
adc
jne
scas
loope
mov
dec
test
or
jle
lcall
sbb
loopne
cwtl
jg
test
adc
pop
sbb
inc
push
roll
jg
outsl
and
cmp
or
inc
cli
daa
stos
lock
loop
jmp
dec
pushw
lock
orl
add
dec
push
clc
or
popa
loop
jb
pop
add
or
or
dec
or
in
mov
popf
cmp
add
pushf
inc
mov
cli
call
add
dec
sahf
sub
xor
adc
mov
bound
add
push
sti
incl
aaa
adc
cmp
aaa
push
pop
rol
add
leave
pop
testb
add
cwtl
cltd
or
std
add
sub
sub
cmp
ficoml
rorl
jb
cli
xchg
xchg
add
and
movsb
mov
xor
lcall
inc
loopne
adc
hlt
rclb
aam
push
test
insl
rep
insl
jg
pop
cmp
scas
cmpsb
mov
dec
and
cwtl
aam
cmp
push
ret
outsl
addl
add
and
cmpb
or
add
and
test
cmp
inc
outsb
sbb
dec
mov
je
aas
mov
call
add
aas
inc
repz
hlt
add
sbb
fucomip
clc
jmp
cmpb
mov
movsl
enter
jmp
clc
pushf
lods
add
fwait
and
test
pop
mov
cld
jg
xchg
daa
lods
add
addr16
mov
or
jmp
cmp
in
sub
ret
decb
and
in
movsl
idivb
cmp
jg
or
add
dec
mov
decb
repnz
mov
xchg
pop
cs
rol
lcall
loop
inc
int
push
pmaxsw
sbb
aaa
add
add
out
incb
in
icebp
scas
pop
ljmp
insl
ja
cli
push
lret
mov
adc
cli
mov
ficoml
sbb
ljmp
mov
cmp
mov
popf
sbb
push
dec
rcrb
js
cmc
aas
push
mov
and
xchg
pop
cwtl
scas
lods
mov
sub
mov
ljmp
mov
sub
inc
lret
inc
imul
js
icebp
adc
inc
add
mov
push
push
adc
cli
test
hlt
daa
das
outsl
push
call
pop
insb
aam
xchg
inc
dec
pop
mov
mov
push
sahf
outsl
add
sahf
insb
imul
inc
mov
ret
push
inc
sahf
fldt
into
bound
fwait
sbb
mov
mov
xchg
lcall
cmpl
or
push
pop
dec
push
push
repz
and
dec
lods
mov
lret
hlt
lea
cmc
out
xchg
xchg
pop
mov
and
in
das
fdivr
dec
into
xorb
or
dec
lods
jns
xor
or
pushl
or
jne
psraw
popa
pusha
roll
sub
pop
std
fnstsw
enter
cmp
ss
je
lcall
cli
cmpsb
popf
movsb
push
mov
xchg
xchg
mov
and
add
pop
xchg
jb
dec
sti
repnz
pop
das
and
insl
decl
xchg
loop
hlt
mov
adc
sbb
cmp
or
fcomps
or
adc
dec
imul
xchg
leave
and
pop
std
mov
sti
inc
pusha
call
push
sub
insl
pop
out
sbb
sbb
push
mov
mov
bnd
test
jmp
or
jecxz
ds
add
enter
mov
mov
mov
and
lcall
xchg
pop
add
xchg
add
inc
cmp
je
shlb
scas
adcb
in
xor
sub
les
push
mov
mov
mov
dec
sbb
dec
mov
stos
jmp
psllw
jmp
adc
add
and
xchg
leave
sbb
iret
cld
dec
xchg
mov
inc
outsl
mov
out
scas
inc
jns
jbe
push
dec
cmp
stc
fidivl
mov
or
cld
stos
stos
push
pop
mov
repnz
dec
cmpsb
inc
out
mov
repz
mov
cmpsl
dec
vcvtdq2ps
sub
call
adc
mov
int3
or
or
mov
jg
mov
or
in
cmp
jo
icebp
jmp
push
insl
test
push
push
pop
adc
add
aaa
inc
addr16
lret
adc
add
test
adc
rorl
divb
sub
jg
sub
addr16
inc
aaa
data16
test
in
cs
jp
fdiv
inc
lret
add
and
lcall
shll
dec
arpl
inc
xchg
sbb
stc
insl
add
xor
sub
jns
call
in
mov
pop
aas
mov
insl
sub
roll
fisubrs
cmp
test
cwtl
jg
lahf
xor
mov
lock
jg
xchg
push
dec
or
and
jecxz
in
cwtl
xchg
clc
sbb
lods
js
cmp
inc
popf
ss
mov
jg
in
jb
decl
loopne
mov
es
mov
andb
push
adc
cli
fisttps
jecxz
cmp
jnp
aam
clc
pop
inc
mov
icebp
mov
push
insb
cld
inc
fsub
adc
cmp
jg
lock
jge
pop
mov
enter
lcall
leave
push
mov
outsl
cli
push
cli
mov
mov
mov
sub
jg
outsb
push
add
fld
movsl
pop
negl
add
pop
inc
addl
add
sub
cmp
add
xor
imul
push
mov
cli
xchg
incb
js
aam
syscall
jmp
mov
sti
ljmp
cmp
fildl
fidivrs
push
loopne
adc
mov
and
jmp
shlb
mov
pop
jae
sub
subl
and
add
jg
pop
mov
push
inc
pop
jo
rcll
mov
int3
inc
lret
lock
lods
mov
inc
jl
sub
mov
fnsave
jle
outsb
mov
adc
incl
mov
and
bound
sarb
orb
jo
jns
add
shrl
mov
cmp
aaa
dec
jbe
dec
adc
roll
jo
dec
and
fmull
mov
stos
cmp
rcrb
or
jg
lods
fistl
les
xchg
cmp
jo
ret
xor
xchg
inc
ljmp
fsub
dec
or
into
nop
jge
les
sbb
or
repnz
and
lds
fcomps
aaa
adc
sub
adc
push
stos
push
dec
cs
es
stc
shlb
fmul
adc
add
pop
add
xor
add
data16
icebp
push
aas
push
loope
leave
push
cwtl
mov
sub
xchg
rorl
shll
mov
pop
cmp
pop
in
inc
enter
or
push
push
test
jge
xor
jns
push
mov
adcl
gs
or
pop
sub
or
nop
clc
adc
jae
das
mov
xchg
push
loop
mov
mov
pop
shrl
int
mov
dec
xchg
out
push
cmc
dec
clc
stos
daa
and
aad
sub
jnp
pop
hlt
decl
lret
mov
dec
je
or
mov
test
add
inc
cmpb
sahf
lcall
pop
dec
cld
pusha
push
test
lahf
mov
add
out
clc
addr16
popf
dec
mov
pop
ds
or
adc
lea
push
or
cld
xchg
add
mov
xchg
ja
xchg
lea
adc
mov
or
mov
inc
dec
ret
inc
int
cli
test
aaa
push
les
and
scas
push
or
lock
dec
decl
mov
test
int3
inc
pop
sbb
and
dec
pop
pop
mov
outsb
sbb
xchg
or
sbb
xchg
loopne
shll
dec
add
pushf
lcall
cmpsl
mov
sub
rcrl
dec
data16
dec
loopne
push
das
cwtl
mov
sub
dec
xchg
cmp
incb
in
into
lds
cwtl
jecxz
clc
mov
dec
pusha
jmp
popf
cwtd
sbb
sahf
sub
gs
xor
jmp
and
or
add
test
mov
xchg
mov
scas
icebp
jb
popl
pop
fwait
push
xchg
negb
and
vphaddwq
jp
inc
pop
lock
cmp
jle
in
cmp
sub
movsl
cmp
jle
dec
hlt
and
and
iret
mov
insb
nop
add
jge
xor
out
sbb
outsl
pop
decl
jbe
sub
pop
inc
out
scas
insb
outsl
pop
mov
outsb
and
dec
inc
adc
dec
mov
mov
filds
call
out
loopne
aam
sub
add
mov
inc
arpl
movsl
mov
jns
xchg
pop
adc
dec
test
push
ret
je
or
into
adc
sbb
int3
inc
mov
lock
lret
daa
push
adc
incl
push
xor
aas
jns
inc
test
fdivrl
cli
jg
dec
add
add
rcrl
or
pop
sti
dec
add
ret
xchg
adc
inc
movsb
sahf
aaa
lods
mov
ljmp
push
lds
incl
loopne
push
scas
xor
mov
jb
lock
call
ret
dec
imul
and
mov
ljmp
or
pop
xchg
mov
sbb
pop
mov
and
add
stos
scas
sbb
mov
in
push
pop
inc
loop
fs
insb
testl
push
push
push
mov
mov
inc
and
pop
mov
mov
ds
and
call
cwtl
mov
imul
dec
xor
dec
sbb
call
jg
aam
pop
lock
clc
or
adc
push
push
fs
movsl
pop
add
or
loop
inc
sub
cmpl
pop
shrl
and
mov
lods
jo
or
loopne
pop
jo
mov
push
or
push
gs
mov
mov
adc
push
inc
inc
std
test
rolb
idivl
push
or
fisttps
mov
dec
adc
fmul
aad
sub
ljmp
or
cwtl
bound
ret
incl
fwait
mov
loopne
cld
call
push
xor
stos
addb
push
or
lret
das
in
ss
movb
fucomip
ret
pop
bound
in
add
call
sub
adc
fidivrl
add
mov
lcall
fcmovb
dec
add
nop
mov
mov
movsb
lret
fs
add
push
inc
nopl
lcall
dec
movsl
sub
cwtl
mov
add
mov
jge
mov
mov
jg
push
je
ss
shl
xchg
sbb
lock
fwait
cld
pop
mov
xchg
cli
decl
add
lret
movsb
and
and
icebp
popf
test
dec
xchg
pop
js
popf
mov
jl
or
jp
push
jns
sbb
scas
push
push
cmc
call
mov
repnz
rolb
jle
inc
scas
xor
or
sahf
dec
add
dec
mov
in
xchg
lock
lcall
mov
adc
push
dec
sti
push
pushf
add
lcall
bound
aas
rep
pushl
or
sub
mov
aam
adc
ficoml
dec
sbb
pop
jo
adc
xorb
gs
js
cli
ljmp
scas
cmpsb
adc
mov
sub
cli
add
jmp
fdivl
xor
sbbl
loope
dec
cli
mov
sub
lcall
loop
push
push
mov
jle
fisubl
pop
and
sbb
gs
fadds
incl
leave
clc
or
jmp
mov
popf
push
outsl
jb
push
test
inc
pushf
add
stc
jmp
dec
fdivs
out
push
mov
xorb
mov
rolb
jo
cmp
xorb
outsb
nop
inc
inc
add
loop
add
adc
xor
inc
pop
mov
orb
ss
ljmp
xor
lret
sbb
adc
pop
sub
aaa
icebp
incl
dec
testl
pop
jge
roll
xchg
mov
repz
jne
inc
sarb
jp
test
and
add
dec
movsl
sets
and
sbb
or
cmp
cmpsb
sbbl
mov
pushf
jbe
sti
scas
sub
xchg
shll
ds
in
cmc
push
pop
hlt
nop
mov
sbbl
gs
pusha
mov
push
push
clc
mov
mov
mov
insb
std
dec
sbbb
pop
push
sub
insl
fidivl
lock
ds
and
ljmp
adc
loopne
in
insl
and
cmp
sbb
test
cs
cmc
mov
xchg
jg
jb
sahf
dec
movsl
add
add
push
pop
jg
hlt
fisubrl
icebp
pop
lock
ret
and
or
cwtl
adc
or
jge
and
out
rcrl
push
test
stos
int
push
push
loopne
xor
incl
cmp
push
movsl
mov
mov
lahf
decb
scas
lods
cwtl
pop
xchg
mov
int
push
mov
int
pop
cmp
call
push
push
arpl
dec
inc
cld
popa
add
push
sbb
add
pop
xor
icebp
add
mov
sarb
and
incl
sub
pop
faddl
es
cmp
lret
nop
add
loop
push
xlat
fidivl
mov
cld
jg
decb
adc
sbb
in
jl
adc
pop
pop
je
jg
dec
mov
inc
push
sbb
icebp
lds
mov
stc
or
xchg
cmp
rcrb
stos
lahf
lret
xor
inc
stc
idivb
cmp
mov
push
or
adc
cli
and
mov
shll
or
xchg
in
in
test
sbb
pushf
push
jmp
dec
fstl
xchg
fdivrl
pop
addr16
sub
leave
or
ss
and
lock
mov
scas
sbb
orl
icebp
lcall
mov
mov
mov
jmp
movsb
mov
push
jl
test
xlat
jbe
adc
loop
addl
lods
ret
cmp
and
mov
add
or
je
xchg
out
pop
loopne
adc
fcoml
stos
jae
ffreep
cwtl
and
in
or
mov
mov
jg
movsb
mov
or
mov
fdivl
ljmp
jmp
pushf
push
push
mov
repnz
or
add
push
lods
popf
mov
pop
cmc
jb
in
imul
adc
dec
sarb
cwtl
out
fwait
aaa
push
cmc
loopne
cmp
cmpsb
out
pop
mov
mov
lcall
loop
aam
mov
outsb
ret
nop
push
lock
rol
das
jo
mov
sahf
fdiv
ja
ljmp
sub
in
fimull
ljmp
inc
int
and
scas
bound
add
and
add
push
fld
adc
fs
ljmp
push
mov
xchg
or
adc
lock
sti
mov
cmp
clc
in
xor
cwtl
or
and
push
shll
add
stos
orb
adc
adc
cld
sbb
dec
arpl
jo
sbb
cmp
lahf
add
or
fbstp
add
loope
push
rcr
inc
test
adc
movsb
movsl
negb
loope
and
jmp
ret
inc
loope
lock
stos
push
jnp
mov
les
and
xchg
xlat
mov
imulb
or
xor
lods
xor
adc
push
movb
jle
and
inc
sub
inc
dec
stc
mov
fiaddl
sbb
loopne
push
mov
arpl
push
xchg
into
push
push
or
das
sahf
nop
push
inc
push
cli
pushl
jmp
fdivp
movsb
sarb
sbb
movsb
lock
arpl
mov
es
xchg
ss
in
adc
int3
cli
cmp
mov
mov
bound
stos
loopne
and
xor
les
test
add
mov
push
or
fiadds
jmp
cli
dec
addb
or
mov
jge
xchg
and
cmc
mov
lods
jp
pop
inc
stos
sbb
movsl
shlb
mov
pop
stc
push
add
push
sbb
and
dec
or
insb
enter
fdivr
pushl
mov
pop
add
fistpll
hlt
dec
pop
ret
push
ficompl
cmpsb
inc
pop
mov
sub
in
test
xor
mov
jmp
push
cmpsb
jge
add
les
dec
cmp
ret
pop
mov
push
test
icebp
mov
sbb
stos
sub
jb
out
mov
adc
cmpsl
hlt
cmc
cmp
or
xchg
lock
sub
or
push
add
outsl
add
mov
push
mov
xor
mov
mov
sub
adc
and
int
xchg
inc
inc
add
mov
loopne
repz
adc
ja
inc
xor
adc
cmc
arpl
push
push
lret
sbb
ss
cmpsb
dec
push
test
sub
sbbb
test
ljmp
jmp
lock
adc
pop
sti
xor
cmp
adc
loopne
cmp
jmp
cmp
dec
xchg
push
leave
adc
loopne
or
lcall
lock
lods
jo
push
fsubr
into
mov
and
or
ja
pop
push
out
insl
out
dec
or
mov
and
or
icebp
xor
mov
dec
test
sbb
jmp
sbb
xor
or
cld
outsl
incl
mov
or
jo
jne
sub
call
pop
and
popa
in
jbe
into
or
pop
cli
incl
mov
or
mov
rcll
ret
jmp
nop
testb
data16
mov
and
cmc
dec
jge
xchg
xor
adc
rcl
cmp
mov
subb
popf
mov
and
lret
push
xchg
lret
in
or
cmp
aaa
fdiv
mov
cmp
movsb
pop
and
sbb
sti
add
fimuls
cmp
gs
divb
mov
icebp
incl
aaa
cld
mov
sub
cmp
xlat
aam
incb
les
dec
inc
fstl
and
test
sub
adc
add
popa
test
mov
add
clc
mov
lock
insl
aad
jbe
pusha
pop
insl
sub
mov
int3
test
cmpsb
gs
cmc
scas
adcb
loopne
push
stos
sub
test
cmp
pop
mov
out
sub
sub
add
sub
aas
cld
movsb
jmp
sub
in
cld
inc
lcall
mov
inc
and
loope
push
rorl
pop
jl
or
or
test
fs
cs
or
cli
sub
sub
movsl
and
lcall
pop
mov
es
mov
call
mov
daa
incb
dec
fwait
add
dec
push
roll
movsb
xor
cmp
lock
push
pop
fcompl
enter
fs
jg
push
xor
xchg
lock
ficomps
popf
jo
lret
rcr
dec
push
sti
and
cmpsl
loop
inc
mov
sahf
loop
pop
cli
or
movsb
or
push
push
pop
insb
loop
mov
pushf
mov
scas
cli
jmp
clc
add
xor
shll
jecxz
add
adc
or
add
enter
mov
stos
pop
ljmp
arpl
inc
je
jecxz
loopne
dec
orl
inc
pop
decb
lock
fisubrs
insl
cmpsb
orb
lock
cmc
jg
and
loopne
data16
in
dec
sbb
icebp
call
add
cmp
testl
dec
cs
xchg
fisubrl
loope
sbb
jbe
rorb
jo
pushf
inc
jnp
js
add
decl
cwtl
pop
icebp
adc
dec
adc
incb
fdivl
mov
jns
jbe
lock
adc
add
vprotd
shlb
xor
xor
jg
and
add
loope
das
outsl
gs
sub
aad
arpl
movsl
cmpl
pushl
pop
cmc
stos
arpl
outsb
or
scas
ss
outsl
sbb
push
cwtl
and
jmp
cwtl
stc
inc
call
cmp
test
lret
scas
mov
pop
sar
incl
pop
sub
push
cmpb
mov
push
mov
daa
pop
adc
shrb
xchg
js
or
shlb
stos
cli
xchg
inc
outsb
addps
lret
pop
repnz
dec
push
adc
movsb
aam
xor
jg
push
dec
in
push
cmp
rorl
xchg
push
mov
sub
add
rol
std
push
enter
in
addl
mov
ja
push
aaa
push
test
in
ja
or
pop
lock
fldl
ljmp
fsubr
pusha
pop
int3
push
and
dec
push
outsb
and
or
xor
scas
add
mov
sbb
in
xchg
pusha
clc
jg
insl
mov
cwtl
inc
fiadds
loop
mov
icebp
sub
push
sub
xchg
push
mov
sbbb
add
repz
cs
pavgb
in
sbb
fisubs
dec
jns
cmp
fiadds
add
and
scas
add
movsl
sbb
nop
mov
shll
jmp
js
inc
rol
inc
inc
incl
cmp
mov
or
dec
add
or
xchg
pushl
mov
add
and
add
xchg
lcall
repnz
xchg
aas
fcmovnbe
add
mov
les
loopne
xor
arpl
jo
add
adc
fs
pop
insb
es
inc
loop
dec
popf
leave
stc
je
mov
mov
and
lret
dec
punpcklwd
pushl
push
adc
ret
lods
into
adc
and
jecxz
les
sub
mov
stos
add
pop
mov
inc
leave
mov
lret
fsubr
add
xor
inc
jp
cmp
mov
adc
loop
adc
call
or
add
ja
inc
jbe
movsl
cmpsb
shll
mov
add
adc
js
in
jae
xchg
add
jnp
lods
mov
out
push
call
mov
ss
sub
in
mov
rcr
xchg
mov
mov
push
mov
es
push
testb
lahf
iret
ljmp
sbb
pop
add
add
mov
and
clc
lods
imull
imul
push
aam
cs
xchg
mov
push
std
lds
mov
xchg
and
xchg
mov
adc
aad
jb
lock
adc
into
mov
outsb
mov
jo
cwtl
jae
and
mov
lds
mov
test
rcll
jg
push
and
and
push
push
fbld
adc
movl
incl
sub
pop
cmp
ret
ret
xlat
aad
mov
stos
add
fisttps
jae
orb
sbb
pop
or
das
jbe
jle
mov
insl
push
sub
lcall
dec
lds
out
sbb
or
data16
dec
in
push
inc
lahf
sti
ss
mov
enter
mov
fwait
cld
sbb
sbb
out
enter
xchg
adc
or
cmpb
aas
nop
psllq
cld
pop
in
in
mov
sbb
clc
adc
lahf
fsub
ret
pop
inc
imul
fcomps
push
add
inc
push
adc
mov
mulb
pop
inc
ret
adc
lea
or
mov
dec
ljmp
and
jecxz
popw
xlat
fdivrp
stos
fdiv
mov
push
in
clc
sub
inc
mov
ljmp
sbb
ljmp
xchg
or
dec
or
add
jnp
popa
enter
loop
ret
hlt
out
xchg
mov
jb
xor
push
mov
xor
dec
test
sub
ds
xchg
bound
cmp
jo
or
ljmp
or
add
adc
mov
lret
popl
xlat
arpl
das
and
pop
cmc
jg
ret
inc
dec
fildll
mov
fistpll
push
dec
pop
push
and
mov
repz
jle
cmc
cmp
cmp
pop
mov
loopne
test
jecxz
lods
cld
mov
dec
cli
cmpb
push
xorb
adc
inc
andl
push
add
add
std
cmp
xor
clc
idivl
lock
dec
sbb
rcll
xor
jp
rcr
cld
pop
pop
int3
dec
jmp
jg
or
insb
jno
and
lea
push
cmpsl
negb
adc
test
push
pop
mov
inc
enter
push
call
loope
lock
cmp
fistl
loope
out
push
in
clc
xchg
bound
mov
push
pop
dec
push
or
add
inc
out
add
shlb
aas
rolb
pop
xchg
xor
mov
pop
dec
or
call
push
aam
pop
xchg
pop
or
repz
adc
cmp
add
xchg
inc
and
pop
test
jmp
push
dec
mov
pop
adc
or
sar
add
faddp
lods
imul
mov
push
int
out
out
scas
loopne
and
loope
sbb
icebp
leave
sbb
mov
daa
fwait
lea
mov
fsubr
xor
mov
scas
cli
jg
popf
mov
sub
cld
xor
mov
aaa
ds
es
sbbb
std
mov
nop
jb
mov
mov
fisubrl
and
movswl
sbb
lods
add
add
push
jg
inc
mov
add
dec
sub
pop
fidivrl
or
lods
push
sbb
xchg
push
or
mov
cwtl
and
es
test
pop
xchg
lahf
test
and
dec
dec
add
lock
sbb
mov
out
ss
aaa
aad
leave
mov
decb
push
add
stos
decb
xchg
push
arpl
popf
shr
sub
icebp
stc
add
data16
sbb
xorb
pusha
jl
and
jb
jbe
lods
push
mov
js
mov
loop
bound
adc
push
out
xchg
pop
in
fcoml
stc
pop
sub
mov
mov
jnp
push
mov
inc
imul
outsl
xchg
hlt
jbe
cmp
sub
pop
lcall
les
stos
or
pusha
adc
add
cli
fcmovbe
call
dec
jo
add
cmp
mov
loopne
and
push
inc
fistps
int3
aaa
fistpll
ljmp
sbb
sub
ss
sbb
jp
movl
frstor
mov
push
pop
and
pop
sarb
mov
pop
or
orl
or
push
inc
outsl
or
sbb
aaa
fstpt
or
cmp
inc
sub
loope
rcll
movsb
mov
fildll
sub
sahf
int
data16
push
decl
add
push
std
mov
movsb
mov
push
int
jl
mov
dec
imul
and
add
dec
and
popf
push
or
inc
ret
fcoml
push
enter
push
roll
adc
je
add
inc
push
icebp
add
add
shrb
insl
call
dec
rorb
xor
adc
imul
sub
repnz
clc
and
inc
xor
mov
mov
rep
jle
imul
popa
cld
ret
arpl
adc
fsts
pop
mov
cwtl
mov
pop
mov
inc
imul
pusha
scas
adc
std
ja
je
jg
or
in
or
loop
or
push
adc
or
jo
pop
add
jae
cmp
test
add
adc
clc
add
mov
mov
mov
clc
insb
mov
test
inc
and
dec
mov
aam
xor
imul
mov
pushf
dec
xor
std
add
xchg
or
loopne
pushl
mov
fnstenv
cmp
add
ja
subb
dec
sbb
mov
aam
or
ret
in
pop
pushl
sub
sbb
inc
xor
rol
mov
js
mov
pop
es
adc
fbld
sbb
stos
cmpsb
insl
xor
add
push
mov
subb
nop
in
add
in
rorl
repz
scas
push
mov
sub
jne
add
stc
lret
jg
fistps
pop
adc
sub
xchg
mov
lcall
mov
lret
enter
push
push
push
int3
sarb
pushl
imul
fwait
push
cmp
push
jb
or
pop
ljmp
std
sbb
aaa
loope
cmpsb
dec
insb
jbe
adc
or
jecxz
xchg
ret
stos
insb
loope
iret
add
mov
std
dec
ret
js
dec
rolb
sbb
jecxz
sarl
imul
out
cld
lcall
fisubrs
inc
scas
dec
push
pop
hlt
mov
sub
mov
ljmp
outsb
xor
xchg
adc
cs
ljmp
adc
pop
mov
rorb
aaa
clc
cs
adcb
adc
std
cmp
or
push
mov
inc
push
adc
mov
dec
and
clc
mov
test
mov
sbb
jbe
inc
shlb
pop
adc
pop
inc
and
imul
test
negb
decb
mov
mov
popf
mov
sub
dec
inc
dec
mov
popa
lret
ljmp
hlt
jg
and
cmp
js
cli
and
hlt
pop
test
pop
test
push
ret
and
mov
clc
dec
imul
mov
loopne
sbb
jno
add
push
lds
cmp
push
xchg
inc
scas
cmp
fmull
or
mov
das
add
pop
adc
xor
fisubrl
or
sbb
jp
loopne
sbb
aad
cmp
and
cli
outsb
add
add
push
push
and
mov
dec
fsubrp
fwait
mov
std
sub
je
dec
dec
adc
xor
sub
filds
jecxz
lock
xchg
adc
cs
push
jo
ss
test
rorl
xor
cmpsb
dec
stos
out
or
cwtl
loope
cmc
aas
lret
mov
push
mov
fs
lret
pop
stc
dec
pop
xchg
mov
sbb
fdivl
jae
jg
jmp
mov
call
pop
mov
fisubs
fwait
push
fiaddl
jl
inc
outsb
cli
push
sub
push
test
sub
call
dec
sub
xchg
ret
adc
arpl
lds
ret
mov
aam
push
ret
or
lds
cmp
test
and
cmp
adc
mov
mov
xchg
pop
or
fcmovu
sub
lret
clc
adc
das
test
pop
hlt
test
cli
dec
cld
decl
inc
aam
push
icebp
push
lock
adc
test
out
push
add
ret
jo,pt
rolb
rorb
jge
cld
push
mov
pop
ss
test
lcall
aas
and
dec
cmp
out
adc
mov
mov
lds
sbb
mov
sahf
adc
pushl
cmp
and
test
ss
add
bound
mov
xchg
test
or
xchg
js
mov
pushf
jmp
loopne
sub
xchg
shrl
loopne
loop
add
mov
xor
mov
lahf
xor
or
mov
in
popf
test
push
mov
imul
mov
lcall
inc
xor
hlt
push
jecxz
xchg
mov
push
lcall
dec
movsl
mov
pop
sub
jo
push
addl
xchg
adc
pop
rcr
aas
jle
pop
jg
scas
clc
push
push
mov
ss
test
loop
nop
jg
cs
leave
inc
lea
cld
lods
pusha
insl
push
shlb
test
or
inc
and
push
ficompl
ja
mov
imul
pop
pop
fs
iret
xchg
outsb
aaa
ret
cltd
mov
mov
shr
dec
xchg
lea
and
test
adc
dec
lods
ret
sub
enter
cmp
add
lock
outsb
mov
test
call
bound
aam
xor
push
stos
in
push
cmc
es
mov
jbe
imul
mov
jp
add
mov
arpl
pop
std
mov
mov
and
mov
jp
dec
adc
lcall
aam
sbb
es
outsb
mov
mov
pop
ja
push
jno
push
mov
lods
incl
cmpl
test
cmp
sbb
cmpsl
inc
stos
iret
pop
xchg
inc
or
and
cmp
mov
add
test
inc
xchg
cld
loopne
cld
repnz
xor
jmp
fstpl
js
rcrl
incl
push
or
xchg
sub
inc
xchg
jge
rcl
movsb
push
ss
xchg
hlt
call
imul
fiaddl
and
call
out
add
das
sub
mov
inc
inc
mov
adc
aad
ljmp
xchg
mov
stos
pop
clc
add
mov
adc
cmpsb
andl
mov
xor
mov
int
sub
mov
pop
add
jno
mov
or
cli
aad
mov
cli
aam
mov
movsb
sbb
push
adc
aam
hlt
arpl
scas
in
dec
ret
enter
call
mov
add
xor
and
fimuls
in
daa
dec
cwtl
push
cli
mov
jle
jge
mov
les
jo
sub
pop
add
subb
pop
clc
fcom
cmc
aaa
or
nop
hlt
pushf
add
mov
into
orl
sub
jbe
and
out
movsb
ds
push
mov
mov
and
push
ficomps
adc
bound
adc
nop
jno
stc
fstps
pop
ljmp
and
push
sub
pushf
aaa
dec
aad
mov
ds
cmp
outsb
pop
dec
and
adc
sub
or
add
aad
sarb
int
add
pop
sub
rorb
test
cmp
sub
mov
add
dec
adc
movsl
sbb
std
jg
sbb
cli
push
mov
js
inc
xchg
enter
or
inc
inc
lret
sub
mov
mov
test
lock
adc
mov
je
outsl
rorb
and
inc
mov
inc
ret
jno
loope
and
je
movsb
cmp
xchg
add
sub
fcompl
and
lret
loope
mov
adc
pop
ljmp
ja
sub
gs
push
jl
rorl
cmp
xchg
cli
loopne
mov
jb
xchg
inc
dec
xchg
shl
mov
loop
push
cs
add
andl
lret
inc
cmp
insl
mov
push
sub
sbb
dec
imul
gs
rorl
pop
cli
mov
push
stc
fdivrl
sbb
sbb
or
lds
add
bound
mov
inc
addr16
cmp
mov
mov
hlt
cmp
xchg
je
dec
std
adc
xchg
call
out
mov
or
call
or
sub
add
push
inc
xchg
or
add
adc
sub
sub
andb
test
jle
and
andb
je
insl
add
mov
mov
or
out
and
add
rolb
or
mov
mov
sbb
je
push
mov
mov
call
repnz
inc
roll
cmp
jne
add
cmp
repnz
lds
enter
fnsave
mov
xorb
sbb
ljmp
call
lcall
xor
test
clc
mov
enter
push
and
rorb
push
enter
sbb
pushf
or
out
aam
xchg
and
push
xor
outsl
mov
jnp
push
lock
xchg
stos
inc
add
shl
jecxz
aaa
lods
dec
mov
imul
add
fbstp
ret
sarl
sbbl
popa
imul
inc
imulb
enter
push
lds
cli
in
rcrb
xchg
insb
dec
test
rcl
decl
mov
int
xor
addb
call
mov
mov
scas
stos
cmp
data16
xchg
xchg
inc
in
les
lods
fcomip
rcl
ffree
test
sub
popa
adc
and
loopne
pop
jp
lock
pop
add
fdivs
stos
dec
sub
push
das
scas
mov
pop
clc
xchg
jecxz
inc
wrmsr
cmc
dec
inc
std
xor
stc
mov
add
decl
pushl
xchg
or
in
mov
add
mov
and
std
add
cmpsb
push
fnstcw
mov
subl
inc
inc
mov
lahf
jle
xor
and
mov
sub
loop
in
das
sarb
jo
jae
sbb
ljmp
ss
pop
std
add
inc
jecxz
dec
mov
pop
or
jo
xchg
push
sahf
int
imul
push
push
mov
fdivrs
sub
imul
jp
and
sarb
add
sub
arpl
add
push
sbb
jg
inc
cmp
cld
scas
push
mov
cmp
or
fnsetpm(287
icebp
lods
or
inc
test
cmpsb
mov
call
pop
sbb
popf
or
popa
dec
adcl
adc
mov
cmp
pop
push
gs
add
mov
mov
and
iret
xchg
icebp
pop
mov
xchg
add
xchg
sub
adc
inc
jecxz
outsb
push
test
mov
mov
push
roll
rolb
pop
mov
cmp
insb
loop
test
cld
pop
xchg
jo
lds
fdiv
mov
sti
and
inc
aam
mov
fmuls
addb
sub
in
je
ja
sub
mov
mov
incl
loope
sti
mov
out
add
lods
repz
js
fisttps
push
ljmp
insb
int
call
pushl
jl
add
int3
pop
mov
mov
movsl
xchg
lcall
add
adc
push
pop
push
push
sbb
imul
or
rolb
out
push
loope
ljmp
outsb
outsl
xchg
cwtl
xchg
mov
dec
pusha
dec
or
add
jo
loope
jmp
and
dec
xchg
mov
push
pop
js
dec
loop
mov
cltd
nop
int
orb
push
jo
ja
rclb
lcall
mov
and
mov
jnp
stos
push
lcall
repz
lock
das
adc
dec
mov
out
es
sub
out
pop
movsl
movsl
jg
adc
mov
jg
andb
jno,pn
sbb
or
lock
aaa
ds
fwait
mov
out
out
adcl
test
mov
cmp
das
aam
aas
pop
jle
push
sbb
lds
lahf
mov
add
cld
mov
stos
jne
jmp
or
cmp
dec
sbb
cld
jmp
adc
imul
inc
jg
fbstp
lea
and
adcl
mov
inc
out
cmp
scas
adc
xchg
aaa
mov
decl
shlb
mov
xor
lea
or
sub
dec
roll
push
xchg
sbb
push
fstpt
popa
xchg
call
fildll
pop
sub
aad
push
cli
or
cmpb
call
cmp
jg
or
push
ss
loop
cltd
mov
scas
and
in
mov
jno
sbb
push
out
aad
lock
cld
daa
push
sub
mov
test
cli
add
cmpl
cmp
in
dec
scas
sahf
mov
push
mov
dec
mov
icebp
push
stos
and
sbb
test
out
cmp
call
rolb
add
incl
pop
nop
or
addb
popf
cmpsb
add
int3
or
clc
ljmp
setno
out
push
imulb
incl
and
fldl
xchg
inc
out
cmp
and
aad
mov
add
jecxz,pn
ljmp
cmpsb
loopne,pn
xor
mov
push
outsb
enter
add
cmc
mov
push
cmp
rorl
dec
insl
xchg
test
sbb
adc
mov
out
fisubl
sti
mov
mov
xchg
clc
incl
add
jne
and
adc
sahf
addr16
out
out
cmpsb
push
mov
or
leave
mov
add
push
jne
inc
sbb
cli
addr16
sbb
mov
je
mov
xor
les
adc
loope
faddl
mov
std
lds
fs
sarb
fcoml
or
ljmp
dec
mov
mov
mov
or
xlat
scas
push
sbb
push
push
loopne
mov
bound
ret
xor
and
mov
cmc
push
or
ret
mov
push
mov
std
xchg
jge
scas
xor
inc
loopne
mov
push
and
into
aad
sbb
std
mov
inc
pop
jmp
cld
inc
or
inc
add
mov
mov
adc
lods
dec
movsb
mov
sahf
xor
and
cmpl
dec
fisubrs
mov
jp
pop
shrb
lret
filds
xchg
mulb
inc
jmp
lods
sbb
clc
das
scas
xchg
cmpsl
xchg
xchg
mov
or
adc
push
push
orb
adc
gs
and
cmp
insb
lret
inc
mov
inc
popa
lock
cs
inc
jmp
mov
sahf
adc
inc
jae
inc
jg
add
call
je
pop
sbb
mov
mov
clc
push
icebp
clc
inc
leave
inc
xchg
or
enter
push
pop
mov
xchg
pushf
mov
push
sbb
mov
arpl
push
pop
mov
daa
adc
push
mov
xchg
sbb
call
cmc
cs
push
lock
lcall
imul
addr16
sub
fildll
cwtl
fisttps
test
int
add
sbb
incb
outsb
lret
iret
idivb
incl
fmull
xchg
in
bound
cmp
lock
imul
pop
or
cmpb
adc
pop
arpl
js
sahf
cld
jne
inc
cmp
repz
jecxz
lods
ljmp
test
sub
js
mov
das
js
mov
inc
movsl
fsub
adc
jecxz
mov
sub
int3
inc
cli
pop
std
pop
icebp
filds
bound
xchg
push
cltd
iret
adc
scas
xor
mov
lock
cld
xchg
decl
inc
cltd
mov
test
test
cld
aas
incb
cvtps2pd
pop
fnstcw
jge
std
dec
jbe
cli
filds
loop
inc
fcmove
sbb
inc
sub
clc
sub
stc
ss
std
inc
test
test
outsb
add
out
mov
jb,pt
mov
push
add
je
dec
addb
push
adc
or
jne
cmp
in
inc
iret
data16
adc
pushf
cmc
mov
adc
xchg
pop
dec
js
mov
cmp
test
inc
mov
or
aas
xor
out
sahf
xchg
fprem1
push
add
lcall
xor
aas
jge
mov
xchg
adc
lcall
mov
or
dec
ret
and
push
nop
popw
adcl
test
push
mov
cmpsb
xchg
dec
das
test
into
sub
push
mov
loope,pt
xchg
cmp
inc
test
add
sti
push
std
and
int3
adc
mov
jb
enter
and
incl
cmp
rcr
inc
rorb
sub
stos
lock
lea
adc
das
shlb
mov
insl
mov
es
mov
mov
pop
sub
mov
mov
sbb
or
jnp
adc
aaa
cld
pop
inc
out
and
push
sbb
sub
pop
rcll
and
lcall
mov
andb
movl
roll
sub
cmc
xor
les
push
nop
push
sub
and
mov
ljmp
or
pop
shl
movsb
or
movlps
pop
pop
scas
push
push
or
lds
mov
sbb
add
add
sub
pop
icebp
jmp
mov
cmp
cltd
sbb
sbb
lret
psubusb
xlat
sarl
cld
or
or
and
ds
cld
jae
xor
add
popa
mov
push
jge
enter
xchg
push
icebp
fwait
in
lea
loopne
push
and
in
push
pusha
out
jns
sbb
cmp
es
inc
adc
cmpsb
add
stc
pop
pushf
movsl
push
push
pop
call
inc
pushl
pop
test
add
test
bound
xchg
xor
cld
pop
incl
inc
fsubrs
test
call
adc
pop
dec
imul
sub
shlb
pusha
jbe
and
mov
mov
mov
aaa
cmp
mov
pop
pop
pop
cmp
pop
iret
inc
shlb
adc
mov
inc
jne
xchg
dec
lods
pop
pop
cmpsl
into
mov
and
jo
mov
mov
jl
movb
insl
lret
inc
lret
sbb
jmp
cmpsb
inc
and
or
les
push
cvttps2pi
inc
inc
repnz
sti
popa
shlb
mov
xchg
fs
add
sub
std
lahf
addb
sbb
mov
int3
add
mov
jnp
sub
inc
mov
std
xchg
gs
push
mov
jge
rolb
fdivrp
sub
jo
leave
in
jle
pop
rolb
xor
sub
xor
iret
mov
push
mov
cli
cwtl
pop
or
clc
jp
xchg
imul
fistps
rolb
out
rolb
addr16
mov
xchg
jg
rcrb
push
loope
add
das
leave
xchg
imull
sahf
call
cld
dec
pushf
sbb
sub
sarl
adc
loopne
test
arpl
add
jnp
mov
sub
or
movsb
push
lret
or
popa
cld
ljmp
sbb
ficompl
mov
pop
imul
jnp
dec
jo
or
aaa
mov
mov
repz
icebp
call
pusha
inc
adc
xchg
nop
xor
inc
pop
sbb
fcom
mov
and
pop
dec
pop
loopne
dec
or
and
imul
mov
stos
adc
mov
les
ljmp
jo
push
ret
lcall
and
sub
and
xchg
mov
sahf
xchg
sbb
decl
in
cmp
and
and
push
hlt
xor
ret
aam
fcmovbe
imul
jmp
inc
aaa
mulb
gs
fs
fisubs
pop
fcmovbe
hlt
add
sbb
push
dec
cmp
lret
adc
ffree
or
mov
shlb
mov
adc
jge
adc
imul
sub
int3
pop
nop
or
inc
pop
and
mov
xchg
sub
outsl
scas
sub
out
push
jmp
add
xchg
or
sub
mov
mov
add
scas
push
lods
ljmp
add
inc
rcll
pop
mov
and
jns
and
outsl
mov
cltd
test
cmc
jg
pusha
cs
imulb
sbb
pusha
and
std
out
and
xchg
shrl
add
jo
and
jmp
xchg
xchg
mov
dec
jmp
pop
mov
das
mov
mov
mov
or
lcall
call
push
call
mov
push
jo
ss
lods
ss
shl
lods
imul
xchg
ds
xchg
pop
or
cmp
pop
inc
fsubr
shl
cli
shll
andl
dec
jmp
pop
dec
lock
stos
mov
add
pop
sbb
sbb
cli
repnz
call
ja
push
js
call
dec
cmp
pop
arpl
cmp
fs
dec
xchg
mov
inc
dec
sti
push
adc
popa
jmp
pop
dec
sarb
push
or
or
mov
push
aam
mov
mov
jb
jmp
cli
sub
push
and
add
inc
sbb
loopne
cmpsl
sub
mov
mov
fwait
and
add
mov
mov
mov
lcall
js
int3
lods
xchg
xchg
sbb
push
push
out
mov
mov
jecxz
push
mov
add
ffreep
pop
dec
pop
into
enter
je
inc
inc
mov
insb
outsb
mov
mov
or
push
idivb
cld
push
cli
jg
mov
imul
pop
andb
xorl
add
inc
cmp
push
inc
mov
clc
ljmp
inc
jp
mov
test
test
ljmp
in
xchg
adc
rcrl
lods
or
inc
rclb
mov
and
add
jg
push
cld
push
pushf
sub
xchg
fnstcw
pop
push
mov
adc
jg
pushl
sbb
aam
cmp
push
nop
dec
decb
pop
jno
lods
mov
jmp
sbb
xchg
leave
xor
cmp
in
add
pop
hlt
pop
sbbl
adc
hlt
loopne
jecxz
pop
mov
pop
cld
out
adc
xchg
inc
pushf
out
adc
call
pop
daa
pop
stos
add
sub
ljmp
arpl
out
add
rclb
or
or
push
rolb
scas
sar
dec
hlt
lret
mov
pop
test
fistl
loope
jb
cli
insb
mov
aad
enter
fidivs
std
mov
inc
pop
data16
sub
addr16
mov
mov
daa
lods
xor
jg
lock
jb
and
push
scas
sbb
cmp
or
loop
incl
sbb
pop
dec
adc
sub
cmpb
out
fildll
xorb
xchg
faddp
loop
aas
fcoml
and
test
add
std
ljmp
mov
cmp
les
je
xlat
mulps
xor
mov
inc
mov
fsubrp
or
or
push
fwait
sahf
sub
ret
nop
xchg
movsb
jmp
inc
sbb
cmp
iret
push
es
fstp
push
incl
sbb
and
sbb
push
push
mov
mov
icebp
add
js
ljmp
jge
jp
pusha
ljmp
xor
cmp
in
jo
jl
add
xor
mov
jo
pop
mov
jg
inc
or
add
or
je
xchg
in
loopne
out
fsubrl
aam
jbe
test
popf
scas
fsubs
fdivl
pop
stos
mov
sahf
adc
cwtl
loop
xchg
jo
inc
mov
mov
mov
add
arpl
clc
movsl
in
lret
stos
add
or
sbbb
sub
mov
lds
hlt
into
sarb
xlat
pop
sahf
andl
movsl
enter
cli
pusha
jle
or
test
cld
decl
mov
int3
movsl
xor
dec
inc
inc
inc
pop
cmp
jl
sub
neg
xchg
in
xchg
push
leave
cmp
xchg
js
test
orb
mov
mov
mov
cld
and
inc
mov
mov
mov
retw
test
mov
xor
aaa
call
xchg
dec
cmp
pushf
sar
push
push
sub
je
dec
ss
and
movsl
or
inc
mov
fstpl
and
decl
cwtl
mov
int
aad
jmp
or
fdiv
outsl
int3
fdivrs
jl
gs
aam
hlt
cmp
cmp
xchg
xchg
into
fs
sub
cmc
fisttps
mov
pushf
adc
inc
adc
pop
andb
sub
sub
mov
sub
mov
sub
mov
subb
mov
popa
push
jbe
scas
add
mov
xor
inc
cmp
or
sub
test
mov
stos
rcrb
add
pop
add
and
push
add
cmpsl
adc
push
push
mov
push
xor
dec
inc
sub
add
aam
or
jmp
leave
fistl
icebp
add
fcompl
in
jp
cmp
loope
adc
jecxz
pushf
sub
mov
sbb
js
into
or
pushf
cmpl
mov
jmp
xchg
or
lods
inc
push
sub
mov
cs
out
mov
inc
cmp
jo
incl
cld
fldenv
fwait
in
pop
aaa
popf
sbbb
inc
ror
imulb
loope
push
ds
cmpsl
inc
sbb
mov
icebp
jg
lcall
cmpordps
loopne
mov
and
iret
adc
sbb
and
xchg
loope
or
test
popa
or
jno
push
add
jmp
les
push
sub
sub
xchg
fwait
and
adc
das
shlb
test
je
cmpsb
mov
lcall
sarb
xchg
cmp
iret
inc
aas
adc
je
in
adc
out
add
call
decl
add
xchg
or
add
mov
test
mov
adc
shlb
ljmp
shll
lock
cwtl
sbb
mov
jg
dec
in
adc
push
mov
adc
mov
mov
dec
sbb
push
into
hlt
out
pusha
adc
cmp
testb
test
inc
or
lcall
xor
jo
adc
sti
sbb
mov
sub
outsb
sbb
ret
xchg
add
pop
insl
dec
xchg
cmp
popa
lret
imul
and
movsb
icebp
xchg
cmpsb
pushl
bound
inc
int
lea
cmp
xchg
pusha
notl
sbb
cmpb
subb
push
push
lret
arpl
mov
sar
xchg
xchg
loopne
jo
mov
and
sub
sbb
cmp
subb
inc
mov
sbb
scas
xor
and
mov
or
shrl
ds
dec
js
xchg
ljmp
sub
adc
popa
pop
pop
add
std
push
out
dec
push
dec
orb
jecxz
outsb
mov
call
jo
pop
icebp
inc
shl
mov
nop
ljmp
insb
or
popf
jnp
xchg
mov
incl
mov
mov
and
push
cmp
loop
adc
adc
imul
out
outsl
rclb
inc
nop
cwtl
xor
fcomip
cmp
fneni(8087
cli
mov
data16
test
lods
decl
negl
jle
mov
mov
mov
sub
outsl
jp
test
adc
fidivrl
xor
and
decl
push
dec
stos
nop
fmul
jmp
add
mov
jns
xchg
sub
add
ljmp
or
and
mul
sub
jg
clc
cmp
jecxz
push
push
jmp
adc
mov
loopne
jecxz
sub
sar
jo
es
mov
cmc
das
push
add
mov
mov
and
scas
mov
pop
inc
xor
add
lcall
sbb
dec
sbb
sub
mov
cmpsl
inc
jbe
lea
sbb
sbb
sti
inc
or
lock
cmpsb
mov
pop
cmp
fstp
pop
jae
xor
inc
pop
call
or
popf
or
xor
pop
xlat
clc
pop
mov
sub
xor
add
int3
dec
aam
data16
ds
imulb
mov
les
add
mov
arpl
add
test
adc
and
cmp
pushf
movsl
xor
test
fiadds
mov
outsb
adc
add
cmc
loope
xchg
jne
sub
jbe
mov
decl
and
push
es
sub
sbb
insb
sbb
and
add
out
fiaddl
xchg
aam
pop
xchg
scas
in
jno
pop
les
xor
sbb
and
push
inc
mov
jno
mov
adc
xor
aam
in
or
jnp
sub
xor
call
mov
out
adc
stos
push
pop
add
xor
shll
cmpsb
les
in
dec
adc
outsb
int3
add
jo
mov
xchg
pop
cmp
punpckhwd
sub
lock
sbb
jge
cli
fcmovnu
fiadds
dec
or
sub
sbb
fs
mov
mov
xchg
out
mov
mov
xor
add
outsl
mov
mov
ret
roll
mov
xchg
adc
movsb
adc
xchg
xchg
ljmp
lods
sub
out
cmp
push
adc
data16
hlt
xchg
inc
mov
cmp
mov
mov
mov
pop
inc
xchg
rcrl
inc
push
xchg
lods
or
popa
push
pushf
mov
lcall
add
adc
and
ficoml
xchg
dec
lds
mov
add
shll
addr16
and
mov
mov
aaa
push
push
cmp
into
xor
in
lcall
int3
call
pop
xorl
mov
lock
sub
ljmp
repz
add
ljmp
outsb
xchg
nop
iret
inc
js
jnp
jne
dec
pushl
jno
jmp
push
sbb
mov
andb
hlt
cmc
ds
xchg
or
rcll
pop
lds
out
add
lahf
int3
add
sub
and
out
cmpsb
ljmp
stos
repnz
sub
jmp
in
add
mov
lret
je
fcomps
sbbb
mov
test
push
ljmp
arpl
pushf
lret
jl
movntq
pop
hlt
jnp
stos
imul
push
mull
mov
jmp
push
jg
aaa
push
popa
jecxz
test
outsl
xchg
mov
popa
shrl
cltd
cmp
xchg
inc
daa
mov
inc
std
ljmp
mov
adc
jne
or
cld
ret
add
js
fisttps
add
out
xorl
pusha
shll
pusha
out
jg
orl
and
mov
stos
fs
jno
jae
inc
ret
cmp
or
inc
add
sbb
pop
dec
aam
hlt
mov
idivl
cwtl
ds
cmp
incl
sbb
mov
das
push
lret
cmc
call
adc
addl
outsb
mov
in
mov
incb
dec
inc
arpl
fdivrl
xor
cmp
mov
inc
inc
fadds
pushf
adc
popf
repnz
aam
mov
ja
add
in
out
pusha
xchg
ret
jg
decl
or
shll
add
xchg
imul
xor
outsb
pop
hlt
sbb
pop
xchg
cli
js
sbb
push
and
dec
cld
andb
mov
sti
into
fdivs
cmp
and
mov
std
push
xchg
add
inc
aam
insl
sbb
sub
scas
out
nop
test
scas
movsl
imul
or
push
xchg
push
fs
lock
lcall
cli
cmpsb
mov
xchg
dec
and
xchg
test
or
xchg
rcl
adc
inc
adc
push
cli
xor
jb
cmp
cmp
push
mov
add
fisubs
mov
mov
incb
in
leave
adc
xchg
cmp
out
adc
xor
mov
xchg
cmp
jns
xchg
pusha
push
insl
pushf
ljmp
int3
pop
adc
shlb
outsb
mov
sbb
jbe
sbb
pop
adc
inc
cmp
push
push
addr16
movsl
hlt
xor
mov
jae
decl
and
xchg
add
and
es
mov
jecxz
pop
mov
mul
leave
mov
decl
push
adc
inc
add
into
or
add
cmp
pop
insl
inc
mov
adc
jo
push
xchg
mov
rolb
stos
cmp
test
and
add
push
gs
or
inc
or
gs
test
jl
aaa
std
push
cwtl
out
adc
call
sub
decb
or
pusha
sbb
jle
imul
popf
insl
xorb
push
inc
xchg
test
jl
dec
mov
and
clc
dec
or
add
clc
cmp
and
push
dec
jl
stos
fdivrp
mov
int3
loope
or
mov
insl
aas
js
cld
or
mov
ret
push
adc
testl
jecxz
pop
aad
dec
mov
das
fdivrl
dec
mov
cltd
add
fwait
ss
dec
lds
ror
sbb
mov
pop
add
iret
jb
lcall
push
addr16
je
adc
loopne
je
sbb
das
addb
push
and
cs
sub
add
xchg
std
mov
mov
int3
add
sbb
test
add
cmp
ljmp
adc
xor
xor
mov
add
mov
dec
hlt
call
xor
std
sbb
jae
ror
cmpsl
ja
mov
cld
adc
fwait
add
mov
ljmp
inc
add
mov
mov
push
add
outsb
push
push
shrb
ret
and
in
push
addb
stos
sbb
dec
adc
adcl
mov
sbb
sbb
dec
push
mov
add
aam
adc
fadd
sti
fisubrl
push
adc
jo
mov
mov
inc
or
jo
and
loopne
inc
or
cmp
dec
or
test
lds
fwait
clc
or
andl
xchg
in
repnz
leave
xor
and
xorl
push
mov
pop
aas
sbb
mov
lcall
fiaddl
insb
cmp
lahf
mov
xor
fcomip
jg
enter
dec
xchg
movsb
adc
mov
in
and
push
cmpsl
popa
cmp
sbb
cli
xchg
rorb
fidivrl
xchg
add
sbb
roll
popf
fldt
jb
adc
mov
jmp
shrb
int
mov
jbe
mov
cld
pop
mov
mov
and
inc
push
add
fnstsw
fiadds
dec
cmp
xor
ljmp
or
add
xchg
ficoms
xor
movsb
jg
dec
or
insb
lret
orl
push
insb
dec
and
pop
cmp
jmp
aaa
popa
mov
iret
or
scas
cli
out
and
mov
cld
lcall
js
and
pop
mov
fdivs
fldcw
cs
add
shl
adc
or
in
xchg
push
mov
ret
mov
lcall
sti
xchg
push
sbb
push
iret
nop
js
imul
shl
jge
adc
cmp
xchg
mov
dec
push
ret
xor
xor
jl
push
rolb
sbb
jle
mov
adc
lahf
insl
pop
subb
jecxz
jg
popf
add
dec
ljmp
test
aas
inc
mov
in
jbe
mov
and
mov
push
icebp
sar
stos
and
out
add
xchg
cmp
pop
xchg
ret
mov
add
jge
loopne
pop
aam
ds
nop
lea
or
pop
xchg
outsl
adc
inc
rcr
ja
pop
test
aaa
inc
fwait
stos
icebp
xchg
fs
sar
les
icebp
nop
cmp
xor
fcomps
jbe
add
pop
cwtl
push
arpl
sbb
inc
inc
mov
jae
dec
ljmp
stos
stos
movsb
and
pop
and
fsubl
imul
adc
ret
mov
gs
ljmp
cld
inc
out
arpl
nop
pop
mov
clc
pop
jo
mov
pushl
out
fisubrs
or
iret
mov
sub
add
cmp
test
add
add
mov
ret
pop
dec
ljmp
push
mov
pop
lret
dec
push
add
je
add
and
decl
sbb
push
jmp
jge
orb
ljmp
rorl
jbe
insb
clc
add
inc
xor
scas
aad
dec
ret
jnp
add
pushl
arpl
loop
mov
xchg
xchg
leave
push
inc
jp
inc
leave
add
add
movsb
addr16
cmp
ret
test
jge
xchg
cmpb
scas
xchg
call
xlat
les
pop
inc
xor
cmp
xor
cmc
dec
inc
cmp
lds
cs
add
add
or
pop
test
loopne
stos
popa
loopne
push
adc
push
movsb
into
dec
test
push
add
data16
dec
mov
scas
mov
jmp
loop
jp
mov
inc
or
sar
lcall
push
adc
ss
es
aad
push
adc
in
fisttpl
xchg
divb
in
push
shll
add
sbb
dec
inc
jl
lods
ret
mov
xchg
incl
pusha
test
inc
in
xchg
mov
or
incl
add
push
xchg
jmp
mov
jmp
sbbl
icebp
mov
scas
nop
in
pop
and
pop
daa
cld
bound
or
js
decl
adc
sub
jmp
insb
fmul
int3
mov
outsb
loopne
xor
dec
adc
decl
decl
jle
sbb
clc
or
adc
pop
jns
adc
inc
push
scas
xchg
add
outsl
inc
cmpsb
inc
adc
cmp
inc
xor
or
dec
xor
mov
es
fimuls
adc
addr16
sub
cli
cwtl
and
xchg
push
xor
mov
mov
inc
leave
pop
rcrb
out
jg
je
pusha
xchg
or
adc
jl
lods
jbe
jb
add
test
mov
cli
loopne
push
aad
xor
mov
adc
insl
and
ss
and
gs
mov
and
cwtl
das
xor
pushl
mov
push
jp
sbb
and
cli
mov
or
outsl
in
jae
jl
cs
pop
je
nop
xlat
test
aaa
and
call
pop
mov
popf
jno
call
mov
add
fcmovbe
in
insl
xchg
mov
jo
xor
jb
popa
call
sub
cmc
pop
or
inc
xchg
fisttpll
incl
ss
push
pushf
lahf
jbe
mov
mov
and
cmpsl
cmp
dec
jge
test
lahf
cmpb
push
dec
aaa
dec
xorb
dec
cmp
adc
mov
outsb
lods
clc
ds
dec
repnz
ret
fstpt
adc
loope
or
adc
sahf
mov
mov
or
repnz
push
pop
add
mov
imul
call
sub
xchg
add
lds
movl
lock
rol
mov
insb
dec
cwtl
push
inc
loope
fsubrl
inc
adc
cmp
out
in
jnp
mov
and
repz
sub
pop
sahf
inc
mov
scas
aaa
test
lret
and
mov
nop
mov
ret
jp
xchg
pop
aam
shlb
arpl
test
xchg
jle
leave
decb
cmp
cs
mov
or
inc
jbe
pop
imul
and
inc
cmpsb
mov
nop
push
test
sbb
pushl
dec
nop
stos
push
cmp
ss
pop
addl
jnp
incl
inc
mov
aaa
adc
or
dec
les
push
sbb
cmp
push
adc
mov
push
call
push
mov
std
dec
lock
iret
cmpsl
mov
cmpsb
sub
sbb
pusha
xor
dec
mov
test
or
jle
mov
mov
mov
xchg
xor
fistl
shlb
ljmp
push
push
mov
mov
and
mov
stos
and
or
mov
push
scas
xchg
scas
inc
add
mov
jp
mov
loopne
mov
pushl
test
or
cmpsb
xor
inc
outsl
loopne
lods
and
sbb
in
push
outsl
pop
mov
es
push
push
xchg
add
add
idivl
addb
adc
fcmove
arpl
in
pop
add
clc
imul
mov
jnp
jle
dec
cmp
outsl
mov
insb
movsb
sti
adc
push
rcrl
outsb
shlb
stos
add
pop
scas
adc
cmpsl
jo
xchg
cmc
and
test
adc
xor
cld
push
call
push
jo
dec
jbe
jbe
rcr
out
test
or
mov
jge
inc
mov
movsb
inc
mov
adc
faddl
adc
add
neg
jmp
jecxz
xchg
mov
mov
xchg
stos
adc
popa
cli
shll
cwtl
into
xor
std
mov
pop
add
repz
pop
aas
cmp
adc
out
sbbl
nop
and
incl
mov
paddsb
or
add
or
sbb
inc
or
inc
or
clc
sub
push
mov
pusha
inc
jg
xchg
ss
aas
inc
push
add
cmpb
lds
lcall
add
mov
inc
push
out
or
ret
adc
filds
fcmovnu
sbb
push
rorb
push
add
loopne
mov
mov
ficoms
test
cmpl
cmp
mov
sbb
fs
push
cs
xchg
mov
push
shrl
inc
ljmp
adc
jae
ret
mov
sbb
fisttpl
and
and
pop
xor
out
jge
fmull
cwtl
jbe
nop
clc
jns
sbb
adc
and
mov
movsb
xor
inc
or
mov
mov
jg
and
sbb
inc
inc
fldt
clc
pop
fdivs
mov
add
cmpb
dec
stos
cmp
jbe
stos
dec
sub
pusha
orl
fidivrs
sub
jb
inc
mov
push
mov
es
mov
add
jge
add
xchg
test
adc
gs
ret
arpl
lds
mov
xchg
sbb
mov
pushf
pusha
xchg
inc
mov
adc
std
jmp
jmp
rorl
xchg
repnz
xchg
andl
or
mov
cmp
mov
or
out
mov
xor
adc
loopne
rcr
repnz
pop
jmp
xchg
lret
sub
mov
sub
push
add
xchg
cmpb
bound
aaa
imul
or
out
pop
into
ror
mov
mov
push
mov
push
loopne
cmc
inc
mov
jle
fs
xchg
mov
add
fwait
fs
outsl
ret
lahf
jmp
negl
mov
adc
mov
sbb
inc
dec
cmp
ret
push
or
push
jmp
or
sahf
hlt
mov
add
jne
decl
mov
xor
mov
pop
ja
aam
sbb
mov
scas
jp
notl
and
aaa
dec
insb
cwtl
rcrb
dec
dec
jg
push
shll
movsl
cld
pop
inc
fwait
arpl
ja
and
es
mov
arpl
lret
add
imul
push
fadd
popa
jl
in
add
pop
and
rol
aam
ds
sbb
or
cs
xchg
add
ja
xor
push
clc
lods
adc
jns
xchg
std
mov
or
leave
cld
mov
pushf
push
xchg
add
jmp
mov
add
popf
sub
jmp
and
cmpsb
je
mov
xor
add
shrb
shl
lret
mov
aad
inc
mov
add
adc
pop
ret
incl
addr16
mov
jae
add
xchg
scas
mov
mov
cmp
enter
pushf
icebp
mov
pop
mov
repnz
shlb
mov
pop
or
hlt
sbb
pop
pop
aad
les
sub
rorb
jg
add
ficoml
or
test
aam
jne
insl
imul
test
cwtl
jae
popa
pop
push
std
jmp
add
in
or
dec
bound
cltd
enter
cmc
mov
dec
psllq
fbld
clc
mov
sbb
ljmp
xchg
mov
and
jmp
loopne
adc
fcomip
mov
icebp
sarl
cmc
jbe
call
mov
push
add
loope
mov
das
adcb
and
sub
push
mov
repnz
pop
xchg
aad
pop
lret
aas
xor
inc
cli
xchg
jle
repz
add
dec
ret
data16
add
incl
loopne
notb
cmp
mov
mov
push
mov
or
push
std
ljmp
adcb
xchg
jge
xorb
clc
data16
leave
dec
stos
movsb
leave
pop
pop
and
adc
mov
sar
cmc
mov
xchg
mov
ds
addr16
pop
mov
sahf
or
add
sbb
dec
xchg
hlt
mov
in
nop
mov
push
xchg
dec
and
lahf
and
rcr
jl
ljmp
push
mov
je
mov
call
add
out
and
sub
jp
lcall
je
sti
mov
sti
imul
inc
cwtl
repz
xor
mov
jnp
pusha
outsl
lock
inc
cmp
lcall
lock
cmp
das
clc
dec
dec
push
or
ret
mov
dec
push
decb
jl
add
jo
or
je
sub
xchg
adc
xchg
xlat
pop
popa
aam
pop
adc
pop
mov
jne
or
hlt
sahf
pop
sbb
add
or
fs
in
cwtl
iret
and
es
xor
popa
fdivr
mov
mov
mov
pop
mov
push
sbb
pop
sar
pop
push
sti
sbb
rol
imul
shlb
inc
fcomip
adc
and
out
mov
jbe
mov
jb
sahf
pop
decl
sbb
je
push
std
jmp
testb
into
lcall
lea
clc
fbstp
mov
jo
xchg
xor
inc
gs
mov
mov
or
adc
jno
inc
jmp
std
pop
pop
adc
mov
cmp
cmpsb
xor
pop
fwait
insl
ljmp
outsb
mov
xor
adc
or
dec
leave
data16
lahf
mov
mov
xchg
daa
imul
push
inc
fildl
jle
and
out
clc
in
jbe
jp
dec
fdiv
stos
icebp
data16
pop
mov
out
push
mov
and
dec
xchg
andb
push
inc
pop
pop
mov
xor
fdivr
ljmp
daa
mov
push
or
loop
mov
mov
inc
cmp
test
icebp
leave
outsb
mov
popf
xor
movsb
aas
add
das
xchg
or
aas
je
dec
inc
xor
rorl
jp
or
test
lods
and
fs
aad
and
sub
mov
mov
push
pop
push
lock
add
adcb
or
popf
nop
cmp
inc
inc
iret
jle
incl
adc
outsl
adc
test
sub
jne
cmp
cmp
cli
xchg
jb
or
fcom
ja
dec
pop
cld
mov
mov
jle
mov
test
jl
das
adc
aam
loope
js
mov
add
fsubrs
pop
mov
pop
dec
decl
lret
add
mov
sbb
cwtl
mov
add
push
mov
add
call
cmp
and
push
mov
push
in
mov
sub
sub
orl
mov
jne
push
xchg
clc
out
push
sbb
stos
jo
mov
jae
lret
out
shlb
cmp
in
aas
fmuls
scas
cmp
leave
je
jno
bound
sbb
and
push
bound
test
sub
adc
jae
dec
clc
scas
push
push
inc
repnz
dec
lods
cmc
cwtl
pusha
loopne
sbb
pop
shrb
std
incl
int3
aad
je
inc
or
jb
inc
mov
scas
fsubs
push
fstl
stos
sub
decl
xchg
insl
adc
cmp
xchg
add
jb
lcall
icebp
icebp
cmpl
xchg
mov
cmp
sbb
push
scas
imul
mov
add
jl
fimuls
sbb
fs
lds
sbb
xchg
or
add
ss
dec
lods
or
dec
cs
push
fsubl
decb
mov
rcrl
popa
or
stos
or
mov
mov
push
insb
test
ss
popa
push
sti
inc
inc
sbbl
test
imul
or
mov
pop
mov
mov
sbb
sbb
xchg
andb
pop
icebp
sub
fldl
jne
inc
and
dec
xchg
shr
inc
cli
sbb
les
inc
ss
pusha
insb
fldenv
and
aad
or
or
outsb
sbb
fwait
mov
lcall
aaa
insl
clc
push
push
test
ret
push
mov
mov
jmp
jecxz
pop
pop
hlt
cmp
into
test
addb
sbb
stos
aaa
insb
sbb
xchg
mulb
dec
dec
cld
mov
call
lcall
aam
or
cli
push
add
lret
mov
sub
add
inc
outsb
ss
push
jle
into
or
lret
clc
xchg
mov
add
rolb
pop
sbb
test
repnz
jo
jg
aam
adc
fdivl
into
cmp
dec
push
stos
out
xor
pop
into
cmp
xor
inc
das
inc
push
aaa
cld
loop,pn
addb
repnz
or
or
cs
or
jmp
fs
push
scas
mov
sbb
inc
dec
insb
lcall
roll
mov
mov
adc
outsb
cwtl
test
xchg
ja
or
aad
cmc
in
fs
or
popa
lods
inc
xchg
mov
call
mulb
adc
cs
fs
aad
jg
adc
push
or
mov
les
mov
cmp
daa
pushf
xchg
xchg
jle
andb
stos
and
jbe
mov
dec
and
ljmp
shr
cwtl
incl
subb
addr16
jb
and
jg
mov
and
pop
mov
mov
mov
cmp
and
jg
call
ficoml
lods
push
cmpl
mov
mov
mov
xchg
push
add
call
pop
jns
jge
scas
add
test
mov
cmp
aas
cmp
shlb
nop
and
imull
ret
mov
andl
push
int3
shll
mov
jmp
xchg
or
add
pop
push
mull
in
adc
push
push
pop
mov
andb
jle
inc
mov
mov
add
dec
pop
sub
pusha
cmp
out
ljmp
cmp
push
movsl
push
ljmp
mov
or
ret
aad
out
and
rcrb
pushf
test
fsubrs
test
add
test
pop
cmp
jmp
bnd
xchg
xor
inc
mov
lods
jg
sub
mov
mov
mov
xor
enter
fs
jb
inc
cmp
mov
cmp
inc
adc
scas
hlt
addl
mov
idivl
xchg
xor
sbb
incl
pop
std
mov
jg
lds
fdivrs
mov
mov
mov
xchg
scas
adc
shlb
decl
inc
not
inc
fcmovnu
es
sbb
and
into
fstps
aam
fcomip
adc
shrb
mov
loopne
cli
and
dec
subl
movsl
fnsave
rcrb
ret
pushf
and
jecxz
fbld
insl
dec
push
cwtl
loopne
dec
pushf
pop
ds
xor
xchg
push
nop
negb
imul
add
fsubrs
pop
xor
mov
xchg
add
jne
jne
mov
lock
push
popf
or
movsb
movsl
ret
or
add
jg
lock
pop
lea
and
mov
pavgw
clc
shll
aas
fucomp
ljmp
xchg
into
mov
lods
loopne
push
es
mov
and
mov
test
js
pop
push
fcoms
rorb
lret
or
cli
mov
addl
push
shlb
mov
test
inc
adc
hlt
into
xchg
sub
clc
jg
rorl
insl
outsb
out
xor
loop
test
sbb
mov
mov
mov
in
call
inc
hlt
cmc
mov
cmp
mov
lods
jo
jbe
out
in
xchg
jbe
sbb
mov
lcall
push
adc
clc
and
inc
cmp
in
imul
inc
or
cld
call
subb
inc
add
and
cli
ja
ss
xchg
test
or
ret
cmp
push
cmc
mov
add
cli
call
movsl
xor
sbb
sbb
clc
adcb
popf
push
shlb
jmp
shr
or
or
loope
or
push
cmp
mov
mov
or
xor
pop
or
in
or
aad
aad
call
xorb
lahf
loop
add
std
sub
fsubs
popa
mov
es
jg
jg
cmpsl
ja
movsl
dec
das
aaa
xchg
mov
daa
dec
push
mov
and
jg
outsl
mov
xlat
mov
add
fcoml
dec
push
rorl
fcompl
mov
fadds
aaa
call
lcall
dec
jle
addb
inc
push
fidivs
cwtl
jmp
pop
lock
cmpl
stos
jl
push
popa
inc
jo
jbe
fchs
incl
test
stc
std
xorl
sahf
add
jnp
mov
cld
cld
mov
push
xor
pop
add
mov
rcll
test
adc
xor
lret
and
sbb
aaa
sbb
sahf
push
movsl
lds
stc
mulb
cld
loopne
mov
ljmp
in
pop
and
mov
pop
xchg
ss
in
or
jnp
and
pop
add
add
jno
jecxz
pop
fstpt
and
popf
mov
mov
cmpsb
jo
cmp
or
sbb
enter
and
mov
js
cld
insb
sbb
pop
jbe
ficompl
dec
push
or
jbe
enter
bound
cmc
addb
gs
adc
push
push
sarl
push
hlt
sub
jnp
xor
jp
sarl
dec
jae
sbb
or
inc
fdivrl
dec
loopne
xor
inc
ret
xchg
mov
sbb
lock
pop
daa
aam
ret
jl
lahf
xchg
inc
add
and
outsb
inc
xchg
js
xchg
outsb
push
pushf
dec
testb
push
jg
loopne
push
jo
adc
xor
mov
fnsave
cmp
call
mov
mov
repz
xchg
or
mov
cli
push
clc
mov
push
jb
sbb
cmp
loopne
or
mov
add
adc
loop
xor
addl
lods
mov
fisttps
stos
sub
or
jno
jno
lcall
sbb
in
pusha
imull
push
loop
xchg
dec
mov
or
lds
sub
sub
cmp
aad
cli
stos
ss
sarl
movsl
ret
jb
jb
xchg
aas
fimuls
pop
push
xor
sarb
xor
dec
loope
leave
ret
inc
stc
push
pushl
into
or
xchg
lret
push
xchg
push
cwtl
xor
andb
mov
lcall
pop
jle
xor
jbe
sbb
pop
and
ja
inc
fdivl
sbbb
sub
pop
adc
or
jp
sbb
or
and
loopne
std
mov
mov
rcl
pushf
stos
lods
and
aas
adc
jo
jle
sbb
adc
xor
xor
xor
sbb
mov
les
cmp
lcall
push
inc
fbld
and
pop
or
clc
mov
ret
inc
lds
adc
xor
pop
daa
jbe
inc
clc
xchg
lret
xor
lds
rcll
inc
das
test
mov
or
fcoms
push
inc
xor
js
mov
incb
lods
je
loopne
mov
pushl
nop
imul
jmp
inc
add
mov
or
in
xchg
add
outsb
ljmp
call
pusha
orl
js
std
out
lret
mov
cmp
call
in
clc
xchg
fdivrs
addl
and
ret
xchg
jmp
lods
and
movsb
jb
clc
push
inc
fs
pop
pop
lock
add
ucomiss
add
and
lahf
pushf
mov
mov
xor
add
push
mov
push
xor
push
pop
jp
inc
jb
inc
jl
sbb
leave
outsb
push
jg
decl
into
adc
cmpsl
xchg
adc
adc
xlat
push
adc
lret
fmuls
inc
js
lcall
loope
add
ds
fcomip
jno
dec
mov
fnstcw
stc
pmullw
xor
xlat
jbe
pop
mov
sub
addb
adc
push
mov
jmp
mov
imul
repnz
or
and
decb
jmp
std
push
ficompl
pushf
out
add
cmpb
mov
push
sbb
jb
xchg
shll
jg
sahf
cmp
add
je
or
and
inc
pop
pop
inc
add
or
mov
lahf
outsb
arpl
ja
movl
aas
popa
cmp
shrl
out
fcmovb
pop
shlb
dec
psubsw
pslld
inc
and
sbb
mov
popa
loopne
mov
jg
dec
push
pop
or
out
pop
mov
insl
dec
push
loop
jmp
shrl
lcall
pop
out
sub
dec
ljmp
xchg
push
or
outsb
addr16
cmpsb
xchg
xor
add
jb
and
fnstsw
hlt
and
mov
mov
adc
in
pop
aam
and
ja
push
xchg
dec
and
jg
cs
pop
and
add
or
ja
fwait
js
lock
std
out
inc
lcall
push
mov
movsl
ljmp
xchg
popa
cmc
sub
aad
lds
sbb
push
inc
mov
loop
stos
ja
pop
cmpsb
ja
xchg
loope
adc
ljmp
clc
inc
push
loop
mov
paddsw
and
push
movsl
and
xchg
push
mov
mov
mov
xchg
xchg
jb
inc
cld
adc
lods
movsb
lods
and
mov
pop
sub
lcall
cld
iret
roll
push
rolb
cli
cmpsl
rolb
pop
pusha
add
imul
mov
or
xchg
lret
mov
push
pop
or
sub
outsl
push
inc
shll
mov
in
ljmp
loop
jl
mov
pop
lds
mov
js
xchg
int
adc
add
pop
mov
fs
push
jns
add
sti
mov
pop
dec
jl
mov
sbb
or
mov
jae
mov
ret
add
pushf
add
xor
les
mov
push
call
shll
rolb
js
adc
adc
mov
out
inc
pop
inc
add
dec
cmpsl
lock
scas
into
inc
sbb
lock
fidivrs
loopne
aaa
inc
clc
sbb
jl
pop
ffree
outsb
jp
dec
test
daa
into
mov
cmp
inc
sbb
orb
lahf
push
inc
rol
test
cld
ljmp
inc
in
xchg
sub
mov
mov
jge
cmp
pusha
cmp
nop
push
sub
popa
call
fdivrl
aam
leave
clc
xchg
cmp
mov
aam
mov
test
ja
cli
pop
push
aam
std
add
adc
and
and
jne
cmpsl
stos
mov
adc
xchg
ds
and
adc
int3
or
outsl
clc
leave
push
iret
shll
sub
mov
pop
or
bound
xchg
xor
sub
jmp
jmp
test
es
lods
inc
push
cmpsl
mov
inc
push
mov
pop
add
inc
cmp
jne
mov
out
or
movsb
or
and
ret
orl
cmp
add
ffreep
mov
mov
pop
pavgw
test
mov
jmp
imul
xor
std
push
int3
mov
adc
or
push
cmp
inc
gs
scas
jo
std
scas
mov
mov
sub
cmp
jo
mov
mov
int
cltd
add
imul
pusha
or
nop
xchg
addr16
xchg
insb
loope
mov
pop
fs
or
pushf
or
mov
mov
mov
loope
and
sub
add
icebp
scas
xor
sbb
rcrl
out
cmpsb
dec
mov
inc
lds
jo
int3
rcrb
nop
sub
mov
in
jg
into
in
mov
imulb
js
sub
pop
mov
subl
push
mov
popf
pop
fidivs
scas
xchg
add
xor
cs
xchg
clc
incl
and
sbb
cs
stos
and
fidivl
push
rcl
push
xchg
cmpb
inc
scas
mov
pop
fidivl
mov
push
into
call
jmp
sbb
mov
enter
mov
mov
mov
add
aam
out
lcall
out
push
lock
pop
push
push
lret
xchg
dec
adc
lds
xor
inc
xchg
ja
movsb
mov
jle
adc
mov
or
js
xor
xor
lock
mov
mov
loopne
pop
int3
lds
pusha
fcoms
sbb
testl
daa
cwtl
incb
mov
ja
mov
pop
inc
loop
aaa
lcall
and
jo
mov
mov
xor
inc
mov
mov
jg
fstl
into
out
adc
inc
loop
jecxz
and
cli
push
dec
add
xchg
andl
fbstp
mov
test
inc
sbb
in
neg
sub
mov
and
jne
fs
incl
addl
mov
bound
rorl
mov
stos
test
lods
and
pusha
pusha
mov
andl
repz
jae
cmc
mov
dec
fisubrs
jge
loopne
subb
push
insb
dec
mov
mov
pop
fs
xchg
sub
xchg
jl
jge
test
jbe
lds
mov
orl
xchg
jp
out
clc
or
stc
and
xor
adc
int
push
lods
pop
push
movsl
cmp
jo
adc
or
sub
mov
shlb
std
call
adc
dec
sbb
or
aaa
fnstcw
popf
into
xor
sbb
and
ja
mov
addr16
in
push
fldt
jecxz
xor
mov
sbb
hlt
insb
adc
pop
mov
jmp
arpl
fs
sub
fsubl
addb
lock
mov
das
clc
rcrl
cmpsl
push
stos
aam
add
add
dec
in
cli
arpl
loopne
outsb
in
mov
jmp
shrb
or
pop
add
sarl
fdivl
ret
dec
and
dec
fbld
js
inc
rorl
jg
aaa
jae
imul
insl
stos
or
jbe
dec
sar
popa
xchg
test
fdivl
ret
pop
or
jbe
mov
jne
dec
adc
mov
fwait
push
idivl
enter
ljmp
xchg
sub
pushf
test
push
add
popf
shll
ds
mov
gs
mov
mov
in
add
jne
test
lcall
push
inc
rorb
jl
mov
loop
fdivrl
out
xorb
cmp
test
rorb
jns
test
push
inc
imul
movsl
push
push
scas
nop
cmpsb
or
jnp
lock
int3
jb
ss
add
pop
inc
xchg
pop
add
xchg
jge
sub
inc
mov
test
pop
ror
cmpsb
enter
add
mov
or
push
cwtl
cmc
push
std
jnp
jne
xchg
mov
andl
push
cli
jg
sub
jbe
test
cmp
xor
ljmp
xchg
and
add
mov
push
test
cmc
test
mov
pop
decl
sub
push
mov
rclb
pop
jb
mov
add
decb
andl
addr16
mov
add
mov
mov
push
mov
mov
pop
dec
xor
stc
and
sbb
xor
dec
js
out
cmp
cmp
mov
mov
mov
inc
orb
aaa
mov
fistpl
mov
pop
mov
rcr
scas
lahf
cli
add
mov
adc
sahf
cld
je
or
aam
jmp
inc
lock
divb
xchg
pop
std
decl
xchg
jl
inc
lods
or
xchg
mov
pop
push
icebp
jbe
mov
out
dec
scas
popa
std
aas
cmp
sbb
and
fwait
rcll
clc
fbld
jge
enter
and
mov
sahf
mov
mov
test
or
push
das
lock
jg
clc
jo
adc
dec
aam
sti
sub
add
arpl
mov
sbb
aaa
xlat
or
cmp
into
and
and
lds
or
outsb
adc
and
pop
and
hlt
mov
xlat
xchg
test
adc
push
jb
dec
fs
adc
inc
lock
sbbb
rclb
imul
clc
pushf
in
xchg
jmp
inc
data16
adcb
pop
jmp
or
xchg
jne
andl
push
insb
sbb
call
nop
mov
push
push
lret
mov
jb
cmp
bound
xchg
test
into
in
xchg
adc
fwait
cmp
or
pop
hlt
add
sub
xor
stos
ja
mov
add
dec
jl
jnp
addb
decl
sub
je
or
out
add
stos
aaa
adc
hlt
cmpsl
or
jg
rcll
lods
mov
pop
jnp
incl
push
repz
xchg
stc
popa
fildl
jl
sbb
gs
and
xchg
or
or
outsb
or
pop
clc
ds
dec
in
outsb
lea
clc
jle
movl
addr16
adc
ljmp
mov
insb
add
xor
movsl
aaa
loopne
cmpsb
ret
fadds
filds
sub
sub
lahf
sbb
adc
pop
decl
mov
loop
loopne
dec
loop
xchg
shll
cli
dec
xchg
das
popf
cmp
fidivrs
mov
ja
call
mov
mov
mov
inc
xchg
fistps
sbb
loope
call
inc
pop
mov
les
loope
or
clc
cmpb
add
inc
std
mov
pop
adc
xorb
push
sti
jecxz
add
fisubrl
repnz
cld
aaa
ss
roll
mov
shrl
jno
orb
cwtl
xor
push
bound
sub
mov
jecxz
decl
xchg
lret
cmpsl
pusha
pop
push
pop
jae
iret
hlt
ja
xchg
or
xchg
add
xor
mov
add
adc
cmp
cmpsb
fistpl
xchg
adc
or
xchg
sbbl
cmp
movsb
call
and
xchg
hlt
aam
or
mov
sbb
sub
incl
leave
adc
sbb
xor
std
test
lahf
adc
xchg
push
jmp
sbb
mov
ja
fbstp
fnsave
mul
mov
mov
cmp
sub
addr16
mov
add
sbbl
ficomps
gs
stc
cmpl
lock
jne
leave
fs
andb
fstpt
test
stos
push
cld
mov
sbb
call
incl
jp
push
add
adc
mov
fs
popa
inc
icebp
mov
hlt
ss
mov
xor
jg
adc
xchg
and
ficoml
clc
popf
or
inc
sub
repnz
icebp
jg
push
add
jo
loopne
lea
fistps
fisubl
inc
call
lea
call
fmuls
sub
adc
insl
and
adc
mov
sbb
cmp
in
add
inc
add
sti
pop
sbb
xchg
mov
nop
repz
inc
xor
adc
or
fildll
or
sbb
cmp
inc
clc
das
fs
mov
mov
jmp
mov
cmp
insl
jb
jp
out
cltd
push
xor
add
cld
inc
std
es
dec
mov
add
inc
std
fs
adc
or
add
adc
pop
sti
shl
xor
lcall
loope
arpl
cmp
push
and
jg
insb
add
ss
clc
add
mov
jmp
repnz
or
out
inc
aam
popf
jae
fildll
push
add
leave
add
push
or
aam
sti
mov
dec
push
shlb
or
pop
out
push
lret
inc
mov
xchg
add
pop
gs
mov
cmp
loop
aas
mov
ret
andl
and
adc
sbb
inc
inc
std
outsl
fs
test
mov
jl
xlat
mov
insb
mov
mov
pop
cmp
push
jne
add
js
popa
dec
sbb
add
aam
imul
aaa
xlat
pop
mov
enter
imul
sub
xor
popa
jecxz
call
xchg
decl
call
mov
pop
je
test
loopne
and
pusha
xchg
ds
add
dec
pop
xchg
cmpsl
jb
sub
sbb
in
je
push
sbb
jmp
sub
mov
add
mov
sub
xor
lods
outsl
clc
push
out
shl
mov
and
out
outsl
rclb
jp,pn
orl
push
push
js
jle
xchg
mov
jbe
inc
pop
dec
adc
lret
fadds
cmp
mov
divl
orb
pop
sbb
outsl
inc
dec
fninit
mov
in
xchg
dec
std
pop
push
and
iret
js
imul
lds
shlb
xor
mov
xor
ljmp
pop
xchg
orb
das
sysenter
or
ret
xor
daa
xor
ljmp
or
lock
outsl
pop
adc
jns
jno
mov
cli
loopne
jo
push
mov
fadd
pop
sbbb
sarl
insl
cli
rsqrtps
mov
push
insl
cli
add
hlt
jmp
jbe
shlb
cmp
jmp
out
mov
sub
push
clc
pop
cld
es
jne
pop
mov
adc
outsb
sub
sbbb
enter
cmp
mov
cmp
pop
scas
addb
leave
push
sub
add
je
xor
or
test
insb
pop
jmp
add
aas
and
mov
dec
lods
orl
sub
or
pop
lds
sbb
lds
xor
pop
inc
loope
scas
daa
cmpsb
fidivrl
jne
lret
cs
rorl
add
loop
insl
or
and
sub
jo
add
mov
jmp
pushf
sub
cld
cmp
imul
shrb
clc
sub
inc
or
fcmovbe
or
jmp
call
and
popf
push
lcall
push
fstpl
xchg
mov
testl
notb
inc
jne
sahf
sbb
push
fwait
fs
aaa
xor
or
sbb
push
pop
es
mov
rorb
pop
adc
inc
jmp
ja
xor
in
xchg
and
cmp
cmpsl
dec
jg
lahf
and
cld
fistps
add
and
add
xorl
pop
aas
or
mov
mov
lcall
push
stc
xor
dec
mov
push
lret
cmp
rorb
sub
inc
jo
push
rcl
and
call
or
icebp
fs
or
fwait
inc
loopne
inc
xchg
push
add
sub
mov
sahf
cld
xchg
and
lock
repz
xor
cmpsl
in
jl
pop
xchg
sub
mov
push
outsl
incl
pop
jmp
fnsave
xchg
sbb
sar
icebp
adc
mov
ljmp
dec
inc
and
ja
adc
lret
sub
addr16
out
stos
mov
sub
add
mov
jbe
fiadds
decl
aad
loopne
jge
out
sub
inc
mov
jg
incb
ja
add
sahf
incb
outsl
inc
lret
xchg
pcmpgtb
push
sub
or
xor
xchg
xlat
popf
test
inc
loopne
dec
mov
clc
sbb
ljmp
testl
movsb
clc
cmc
mov
push
fwait
push
ret
sahf
lret
mov
decl
lock
out
add
loope
mov
xchg
call
leave
pushf
jmp
cmc
decl
or
ret
mov
enter
mov
rorl
adcb
into
je
icebp
jae
pusha
daa
pop
stos
add
add
inc
adc
stos
jmp
sbb
pop
icebp
xlat
adc
mov
outsb
ljmp
pop
sbb
xor
pop
add
push
or
cmpsl
xchg
sahf
adc
sub
sub
and
push
pop
inc
sub
cmp
mov
xchg
xchg
cli
call
and
adc
rclb
lock
jp
fs
dec
movsl
adc
xchg
mov
out
mov
cwtl
fs
and
dec
ss
mov
cmc
pop
mov
ljmp
out
add
fcoms
rcl
rcr
add
inc
pop
mov
pop
ss
mov
push
addl
adc
test
ss
xchg
xchg
xchg
inc
incl
mov
nop
js
call
pop
cmc
call
gs
arpl
inc
test
push
rcll
mov
jge
in
add
pop
xor
incl
add
mov
int
or
xchg
sub
call
mov
inc
shrb
mov
add
cmp
adc
stos
fs
movsb
ret
sub
arpl
jg
cs
shrb
mov
stos
inc
and
cmp
mov
daa
mov
push
pop
sbb
ret
push
lds
ss
pop
jne
push
mov
adc
lcall
mov
ret
adc
xor
loope
adc
push
in
mov
add
mov
xchg
cmp
push
and
std
jo
sub
fimull
test
add
mov
sysret
push
add
je
jnp
push
stos
dec
fiadds
pop
in
cwtl
or
xchg
or
sbb
rorb
repnz
outsl
xor
jmp
aaa
jl
loop
jl
push
mov
mov
add
sbbb
inc
loop
jo
push
adc
scas
push
pusha
push
jl
add
or
jbe
in
icebp
xchg
or
xchg
test
jns
ja
inc
test
popl
dec
jb
test
faddl
cs
or
and
ret
cmpsb
loop
mov
mov
mov
faddl
rorb
push
sbb
inc
adc
ljmp
jns
jmp
sub
xor
in
adc
fildl
mov
jno
lahf
gs
sbb
mov
clc
stos
mov
sarb
jg
incl
pop
addb
fstpl
xchg
in
xchg
das
push
outsb
cli
dec
dec
out
mov
and
jo
jb
subl
dec
jg
mov
push
pop
inc
push
cld
cmovo
inc
clc
push
insb
sbb
xchg
push
inc
xchg
inc
mov
cmp
sahf
cmp
or
mov
pand
adc
push
lods
call
inc
or
add
and
mov
mov
mov
dec
loop
gs
and
push
sub
jecxz
push
xchg
push
jno
or
xor
mov
xchg
mov
ljmp
lock
sbb
enter
push
les
or
cmc
dec
adc
ret
stos
clc
mov
or
jo
pop
in
pushf
adc
cmpl
ds
inc
adc
or
popf
bound
or
call
leave
adc
icebp
dec
dec
or
or
add
sbb
jb
andb
stc
pop
pusha
push
test
push
dec
jl
mov
icebp
jns
subl
push
push
test
gs
ds
inc
dec
mov
fstps
xor
pop
adcb
push
add
jmp
call
jp
lds
mov
or
add
addr16
add
testl
push
xor
or
inc
dec
add
clc
jg
push
cwtl
shrb
adc
fcomip
out
adc
sub
mov
scas
pop
push
ja
pop
daa
adc
decb
dec
sbb
push
bound
lret
jnp
pusha
les
fildll
rorb
adc
ljmp
stos
or
loop
popa
add
lds
lcall
fldcw
pop
insb
inc
jmp
scas
sub
inc
dec
sti
and
rcll
mov
xchg
inc
mov
decl
ret
popa
test
int3
rcll
xor
or
cmpb
mov
add
ljmp
sub
cld
mov
sbb
popf
sub
in
cmpb
sbb
cld
ja
mov
mov
inc
push
sbb
dec
push
inc
fwait
inc
test
sahf
push
icebp
pop
mov
js
cmp
lods
sbb
rcrl
mov
adc
mov
orb
call
lods
fsubl
sbb
mov
fimull
sbb
cmp
jae
cmp
mov
add
sbb
inc
fistps
pushf
jnp
jp
cltd
jecxz
fcomip
mov
shrb
loopne
leave
mov
out
xchg
bound
pop
jecxz
cmpsb
jle
add
pop
push
sbb
sbb
out
sbb
mov
sbb
clc
ljmp
popa
jb
dec
jecxz
inc
clc
inc
add
roll
test
mov
or
mov
adc
out
addb
mov
push
aad
ret
clc
fwait
addb
and
ret
xlat
sub
mov
mov
sub
xchg
cli
xchg
bound
cli
cmc
jg
add
in
pop
std
test
rolb
mov
mov
sub
cmc
incl
and
cld
and
jg
push
rol
or
jg
loopne
aas
popa
pop
pop
pusha
adcl
or
inc
aad
push
ret
dec
or
add
pop
loopne
mov
mov
inc
filds
pop
cmpsb
sbb
lods
shll
mov
pop
es
cmp
jae
cli
cs
cwtl
aam
fsubs
insb
aam
rcr
fs
iret
mov
loopne
cld
pop
jl
adc
dec
clc
lret
mov
shlb
hlt
das
push
pushf
into
inc
dec
icebp
cltd
inc
fdivl
std
lcall
pop
mov
cli
sbb
sbb
ja,pn
ds
aad
ret
add
inc
cmp
icebp
in
icebp
incl
or
mov
pop
push
sbb
lret
sar
aaa
xchg
mov
mov
mov
sbb
pop
and
gs
loop
sbb
mov
inc
dec
jg
lea
push
push
hlt
pop
in
dec
loope
push
mov
xchg
adcl
push
cs
dec
ret
inc
shll
xor
dec
dec
stos
xchg
jp
shll
rolb
in
push
std
sahf
lds
jle
ljmp
pop
cmp
int3
inc
sub
cli
gs
es
scas
rcl
xchg
jb
sbb
loope
addl
inc
xor
imul
movsl
add
dec
jno
sbb
mov
mov
shlb
fcoml
push
jecxz
stos
das
mov
ljmp
jg
dec
mov
dec
xchg
add
push
add
aam
std
test
mov
jb
and
mov
pop
lcall
sub
adcl
pop
inc
imul
sbb
adcl
sbb
xor
mov
and
clc
mov
or
or
fstpl
jnp
mov
mov
rclb
je
jp
rorl
mov
scas
mov
mov
pop
sbb
sbb
das
or
hlt
xor
test
push
and
stos
es
sti
mov
sbb
mov
lahf
inc
adc
sbb
dec
fcmovbe
fwait
or
addr16
mov
pushl
push
in
cmp
and
sarl
push
jg
sbb
imul
pushf
pop
adc
inc
inc
dec
mov
lea
imul
pushf
in
inc
mov
fwait
push
xlat
daa
xchg
xor
add
mov
pop
mov
mov
jecxz
jno
mov
xchg
out
dec
and
add
or
mov
fs
lahf
pop
sub
scas
sub
or
mov
push
push
int
mov
js
stos
aam
addr16
mov
shrb
popa
cmp
test
jmp
insb
or
push
insb
xchg
mov
cmp
mov
sbb
movsb
mov
dec
add
xorl
push
movsl
lcall
and
inc
ret
cmp
xor
xchg
stos
mov
aad
or
sar
dec
sbb
and
cmp
or
add
mov
pop
add
sbb
dec
push
or
add
pushl
xor
push
repnz
icebp
xchg
arpl
in
decl
jle
lret
jl
fnstsw
das
rcr
insl
les
push
inc
mov
rclb
mov
imul
icebp
inc
divl
ljmp
sub
mov
sbb
mov
ss
scas
jge
adc
add
ja
pop
inc
pop
leave
mov
jp
mov
ret
xchg
lret
xchg
std
mov
and
mov
lods
and
push
cwtl
rcl
push
addr16
xlat
jbe
fsubs
filds
mov
dec
pop
fwait
mov
cmpsb
push
adc
mov
decl
or
inc
cmp
xchg
pop
sub
cmpsb
jno
stos
pusha
dec
imulb
mov
incl
adc
push
cmpsb
mov
loop
and
ljmp
in
adc
lea
dec
mov
sbb
in
cltd
adc
popa
xor
lock
push
rcrl
test
iret
and
xchg
add
sub
daa
sub
cmp
and
or
ljmp
sbb
repnz
out
inc
adc
dec
incl
aaa
loope
pop
xchg
in
jl
cmp
test
dec
mov
mov
push
icebp
out
mov
mov
mov
fcomps
pusha
mov
jp
clc
daa
loope
pop
push
push
and
and
lds
sbb
mov
pop
and
and
add
cld
add
popa
call
mov
clc
push
rorb
jmp
in
and
mov
cli
add
cs
pop
or
or
and
ret
jp
aam
add
and
ds
pusha
loope
and
cmp
cmp
sbb
outsl
sbb
ret
mov
push
repnz
dec
js
arpl
imul
adc
dec
cld
call
mov
decl
call
test
mov
xor
or
stos
call
scas
or
sub
sbb
add
clc
lahf
stos
pop
sbb
icebp
addr16
andw
add
into
lds
bound
je
into
fiaddl
mov
push
cmpsb
ds
in
enter
lock
mov
mov
add
sub
jle
into
push
roll
lcall
adcl
adc
inc
push
mov
testb
cld
pop
cld
rcrl
push
cmpb
popa
fstpt
jp
jg
icebp
inc
or
push
rol
ss
addr16
mov
movsb
mov
cld
and
sub
jecxz
cld
mov
cmpsb
or
cmp
sbbb
or
xchg
fadds
adc
or
mov
or
jae
sar
clc
pop
jecxz
or
iret
outsb
scas
cmp
lret
in
or
mov
js
add
dec
mov
rcr
xchg
pshufw
sub
jecxz
stos
or
or
inc
cld
hlt
notb
sahf
push
mov
add
dec
pop
add
cmp
out
enter
add
xor
mov
std
aas
add
orl
fsubrp
sub
cmpsl
bound
out
pop
popa
pop
xchg
push
adc
stos
dec
mull
ret
push
subb
sbb
popf
adc
jo
ret
ret
arpl
mov
das
mov
popa
daa
pop
xor
mov
pusha
outsl
cli
sub
aam
cmpb
test
sbb
ja
sbb
inc
faddp
rclb
mov
pop
fcmove
xlat
nop
sbb
xor
add
ljmp
fwait
xchg
fistpl
push
lods
lcall
sar
xchg
push
cmp
mov
shr
mov
fildll
adc
jg
adc
sbb
jb
andb
push
mov
mov
clc
movsl
mov
mov
pusha
add
add
add
sbb
roll
and
sbb
adc
or
xor
push
push
fidivrs
sbb
es
push
xchg
mov
add
pop
ss
movsl
mov
push
or
aam
cmc
mov
cltd
icebp
es
aam
and
add
and
xchg
mov
jmp
xchg
sub
stos
loop
lret
movsb
je
je
nop
cmp
into
cld
mov
adc
and
xchg
add
lahf
filds
mov
sbb
mov
or
js
push
cmp
mov
mov
add
int
sbb
mov
fadd
adc
test
psubsb
mov
cmpsl
inc
icebp
mov
or
jno
sbb
cwtl
or
push
cli
aaa
add
pusha
sbb
stos
pop
clc
inc
cld
add
mov
mov
aas
test
jg
or
pop
and
imul
rcr
push
scas
insl
outsl
stos
xchg
xor
in
nop
outsb
jo
or
lcall
jecxz
loop
mov
mov
fnstcw
je
std
add
pop
cld
xor
mov
test
adc
ljmp
enter
es
inc
scas
push
add
xor
and
ds
mov
push
test
sub
sbb
fbld
pushf
push
mov
adc
in
movsb
bound
push
mov
mov
push
xor
lcall
add
adc
pop
in
pop
jg
xchg
lods
sub
cltd
jo
fadds
test
push
xchg
stos
test
jb
mov
dec
dec
mov
lahf
ja
lods
sub
loop
push
rolb
mov
push
jne
and
mov
sarb
jno
pop
mov
mov
nop
pusha
icebp
mov
aas
add
push
mov
psubb
jo
mov
or
outsl
imul
jle
pop
pushl
cmp
clc
fucomi
lcall
outsb
call
cmc
mov
pusha
push
push
dec
insl
mov
mov
loop
pop
mov
popf
arpl
pop
xchg
incl
nop
xchg
pop
out
push
sti
inc
pop
mov
jo
mov
and
pop
add
sahf
xor
call
or
sub
dec
rdtsc
push
data16
xchg
pop
pop
inc
aad
roll
adc
mov
add
clc
and
push
das
stc
inc
mov
push
rolb
pop
test
sub
aam
jbe
jno
inc
cld
das
and
or
in
cmpsl
daa
in
xorl
aaa
add
fnsave
enter
sub
xor
inc
inc
or
sbb
aad
iret
pop
fwait
add
jmp
inc
andb
push
and
jnp
mov
roll
adc
cmp
movsl
push
cs
loope
or
lcall
push
add
out
push
lret
cmp
ret
push
mov
lret
dec
fistl
or
rolb
dec
cmpb
mov
rclb
fcomp
in
jmp
cmp
dec
fwait
push
or
fisubs
adc
xor
and
inc
pop
arpl
mov
push
js
sub
dec
into
mov
cmp
add
add
lcall
dec
test
in
movsl
clc
clc
add
or
mov
xor
cltd
add
cld
vmovaps
xchg
stos
aam
mov
mov
add
aam
call
into
xchg
sti
aaa
lcall
inc
cmp
inc
sbb
jbe
movsl
in
icebp
or
inc
test
gs
jno
xchg
add
xchg
popl
push
xchg
add
mov
ret
add
bound
push
cltd
pop
inc
rcr
leave
fs
mov
ljmp
jg
xor
sub
mov
enter
les
outsl
mov
jne
stos
cmp
aas
adc
roll
popf
push
jmp
ud0
sarb
shl
pushf
mov
mov
inc
adc
les
fcmovnbe
stos
sub
mov
loope
jg
cltd
fs
jl
popa
mov
add
sub
or
xlat
sub
fs
ret
or
fisubrl
lretw
jae
pop
cmp
mov
mov
test
aad
inc
les
in
gs
shlb
out
adc
and
jmp
incb
dec
sbb
xlat
xor
add
stos
xor
adcl
inc
inc
into
jae
cmp
xorl
mov
fisttps
fdivs
aam
pop
and
xor
jl
cmp
push
mov
jmp
mov
mov
pop
or
lret
adc
sub
jg
test
movsb
xorb
jecxz
ret
fstps
push
in
sbb
gs
mov
inc
paddq
aaa
cld
mov
jecxz
jo
jp
adc
push
mov
xor
dec
ljmp
ret
push
mov
pop
mov
or
mov
add
adc
loop
push
ljmp
or
shll
inc
mov
adc
mov
or
adc
sbb
add
jmp
or
clc
testb
test
mov
mov
xchg
jg
lcall
lods
std
xchg
push
inc
ss
sbb
and
mov
or
cmp
pop
dec
pop
adc
and
faddl
adc
add
sbb
jbe
test
push
outsb
pop
and
xor
lock
add
add
jno
pop
push
or
sub
scas
out
inc
dec
add
inc
pushl
in
shll
mov
aam
inc
mov
outsl
adc
hlt
inc
pop
gs
shrl
imul
inc
int
and
scas
es
subb
enter
icebp
jg
movsl
mov
shlb
outsb
sub
sub
or
leave
cmp
outsb
adc
jl
addb
pop
outsb
or
movsb
call
fwait
jg
xchg
inc
inc
pop
imul
jb
insb
stc
mov
cmp
and
jmp
push
loope
aam
push
or
and
movsb
mov
in
push
mov
fldt
push
mov
out
pop
inc
addb
cltd
mov
mov
dec
xor
pop
cmpsl
das
cmp
dec
das
rorl
adc
ljmp
or
lock
jl
std
out
adc
mov
mov
mov
sub
nop
andl
fdiv
pop
bound
push
and
xchg
imul
xchg
sahf
lcall
add
cwtl
push
sbb
add
mov
dec
add
scas
out
mov
lods
push
pop
add
loopne
mov
stc
push
or
cmp
mov
mov
mov
inc
popf
xor
dec
cmc
incl
mov
shll
mov
push
mov
test
adc
inc
sub
xchg
sbb
cli
sbb
or
sahf
repnz
sar
ljmp
jecxz
mov
sbb
inc
inc
pop
jecxz
cmp
jmp
notl
mov
sahf
cmp
xchg
aam
mov
lret
add
xor
pop
inc
or
clc
mov
and
negl
dec
jmp
addr16
into
add
add
lcall
mov
or
cmp
pop
data16
xchg
imul
enter
ja
adc
imul
lods
popf
in
movsb
inc
add
jp
and
pushl
test
cmp
outsl
mov
insl
adc
xchg
loopne
out
sti
mov
mov
sbb
in
xchg
cltd
or
aaa
cld
inc
ljmp
inc
in
push
pop
adc
imul
mov
lea
jne
out
aam
test
hlt
sub
add
repnz
xor
jbe
shlb
cmp
dec
insl
fadds
sahf
dec
lahf
add
fwait
add
inc
xorl
xor
pop
shl
jbe
push
mov
cmp
fbld
loopne
fldl
mov
test
test
aas
add
mov
jmp
das
push
mov
lret
movsb
add
push
ljmp
adc
sbb
loope
lret
pshufw
stc
es
or
das
mov
out
add
xor
inc
mov
or
icebp
pop
in
addr16
js
jl
push
pop
in
cld
adc
xchg
data16
fdivrl
add
pop
cmp
je
popl
xchg
ret
incl
xchg
lret
pushf
imul
dec
add
and
dec
das
xor
cmp
xchg
mov
leave
and
push
xor
ja
pop
inc
orb
push
das
fsubrs
or
outsl
mov
xor
es
adc
add
ret
int
incl
mov
test
mov
js
mov
out
cs
cwtl
cmpsb
push
add
imul
arpl
leave
add
or
cltd
pop
push
lcall
cmp
rolb
mov
mov
dec
cld
or
std
out
sbb
inc
sbb
xchg
push
in
adc
jg
fildll
inc
popa
add
outsb
or
loop
bound
push
idiv
int3
incl
ret
sbb
cmp
ja
popa
pusha
mov
jge
mov
js
or
pushl
and
aaa
adc
dec
jo
xor
sbb
push
adc
fistpl
mov
cmc
stos
mov
xor
imul
lret
jle
hlt
push
mov
in
icebp
push
push
mov
shlb
adc
fnstenv
push
xor
push
insb
pop
pop
mov
mov
popa
adc
test
inc
jmp
sbb
sbb
aad
mov
push
rclb
add
sbb
mov
cmp
jmp
mov
mov
xorb
sub
jl
test
add
mov
loop
loop
jle
and
sub
aam
and
push
mov
popf
or
or
inc
das
adc
lods
jo
fwait
push
push
cli
movsb
or
test
sbb
jb
decl
jmp
push
lret
das
push
xchg
push
mov
int
decb
enter
mov
mov
pop
mov
push
and
xor
rcl
test
pusha
dec
fs
dec
sarb
inc
mov
lret
jp
pusha
mov
xlat
lret
xchg
add
hlt
add
mov
loope
jmp
cwtl
arpl
inc
lahf
add
dec
loope
test
movb
add
in
aad
test
ja
mov
adc
shll
std
xchg
mov
in
pushf
sbb
jo
add
and
dec
push
jmp
or
clc
stos
and
jne
inc
push
jmp
add
push
test
call
cld
xor
add
dec
sub
mov
xor
push
push
mov
aam
add
cvttps2pi
andb
test
dec
iret
cmp
inc
lret
xchg
xchg
orb
dec
jg
jg
fwait
mov
jnp
outsl
test
cld
xchg
test
push
rcl
push
sub
xchg
sub
xorl
mov
adc
shlb
adc
aaa
cld
mov
jo
test
add
fsubr
push
ja
aaa
adc
jns
sub
insb
mov
sbb
inc
insl
xor
dec
mov
clc
pop
xor
les
cmp
adc
dec
adc
add
or
pop
cld
inc
or
in
xchg
orb
arpl
enter
mov
and
cmp
andb
xchg
push
dec
or
lret
aam
icebp
inc
inc
ret
jbe
out
mov
inc
fldcw
adc
xlat
add
or
movsb
cli
xchg
decl
ret
mov
sub
jle
push
outsl
mov
add
jo
cmp
insb
and
mov
cmp
jns
test
pop
fdiv
popa
int3
sbb
bound
popa
adc
push
mov
das
clc
dec
lds
sub
sub
xorb
sub
push
and
xor
mov
dec
xchg
mov
pop
jno
pusha
jge
adc
clc
pop
mov
clc
pusha
xchg
add
stos
mov
sbb
out
fiadds
add
sbb
ss
mov
jmp
enter
mov
mov
sti
mov
dec
cmpsb
push
mov
push
and
add
jnp
or
add
fdivs
adc
in
inc
out
inc
aad
test
incl
test
insb
lods
sti
insb
daa
lock
dec
mov
fwait
jecxz
mov
push
mov
cli
icebp
add
lcall
ja
std
mov
xor
shll
negb
gs
push
add
and
mov
aam
cmpl
lea
xor
std
scas
incl
push
inc
lret
push
in
or
arpl
das
inc
cs
clc
test
pushf
push
add
nop
push
ljmp
adc
inc
mov
inc
mov
pushf
add
inc
movsb
decb
mov
dec
inc
inc
stos
pusha
dec
pusha
fsubrs
incl
or
sbb
jno
inc
sbb
or
push
lea
jmp
fldenv
sar
sub
test
cmp
pop
cmc
popa
push
and
sarl
js
leave
push
xor
sbb
mov
xchg
sbb
dec
mov
orb
jno
push
jl
adcl
xchg
icebp
and
sub
lahf
or
adc
inc
pop
mov
shr
pushw
sbb
push
rcr
lret
cwtl
sbb
lea
mov
add
add
das
ljmp
xchg
mov
pusha
xor
push
mov
adc
xor
add
mov
mov
out
inc
pop
pop
leave
addb
orl
lock
jae
push
inc
pop
xlat
int3
gs
clc
or
incl
mov
fmull
cmpsb
das
les
clc
fcmovb
push
outsb
cmp
fidivrs
sarb
fiaddl
lcall
xchg
mov
popf
into
push
sbb
sahf
xchg
daa
dec
fdivs
add
adc
test
adc
rcll
lret
in
jge
aad
shrb
push
mov
xor
dec
call
push
push
xor
fidivrl
test
jg
fcomps
cmpsb
mov
xchg
push
sbb
inc
ret
xor
fwait
pusha
xchg
dec
mov
ficoms
out
sbb
cmp
xchg
mov
and
push
inc
daa
std
in
pop
lock
mov
bound
jecxz
je
pop
and
hlt
movsb
insl
and
sub
pop
sub
mov
xor
lods
mov
push
popf
scas
sub
jno
pop
dec
int3
add
fbld
pop
mov
or
jno
or
mov
mov
mov
or
mov
fiaddl
sahf
adc
add
ljmp
jg
or
nop
sub
clc
mov
xor
sbb
aas
lea
or
in
xchg
push
mov
mov
xchg
pop
xor
pinsrw
xor
mov
fidivl
pop
sbb
hlt
in
fs
notb
push
sbb
cs
in
es
ljmp
push
jb
out
add
mov
mov
cwtl
clc
sbb
arpl
std
mov
push
testb
popa
inc
mov
xor
adc
repz
mov
adc
and
add
andb
ret
insl
ja
es
inc
mov
call
lods
test
and
push
dec
xor
loope
mov
mov
fsubs
stc
int3
shlb
xor
jg
or
pop
arpl
push
mov
xlat
sub
pop
xor
lock
mov
int3
mov
dec
pop
das
nop
fs
test
mov
add
pop
cwtl
mov
add
insb
and
xorl
jo
rcr
hlt
std
rcrl
or
loop
sahf
pop
push
push
push
jg
push
mov
in
xchg
sarl
rorb
pop
faddl
jmp
inc
repnz
and
mov
clc
push
sub
mov
lret
test
adc
dec
lods
sub
cmp
int3
adc
outsb
loope
push
push
fcomi
cmp
pop
cmp
mov
add
and
jl
in
pop
xchg
fwait
xchg
or
pop
or
push
push
and
lcall
scas
cli
dec
dec
dec
sub
mov
and
dec
push
mov
or
sbb
js
ja
movsb
pop
test
or
adc
mov
loopne
mov
mov
sub
inc
or
popa
loopne
pop
push
pop
or
and
imul
fisttpl
inc
sub
lods
push
pop
sub
outsb
and
and
outsb
iret
adc
rclb
push
jg
mov
aad
clc
sti
push
dec
loop
aas
lds
sbb
and
push
into
movsl
sub
adc
add
mov
inc
rcrb
out
std
push
in
lahf
dec
lods
fs
mov
cmpsl
mov
ficomps
bound
mov
push
cmp
arpl
cld
scas
and
inc
lcall
or
lret
test
push
jb
repnz
shlb
and
push
and
enter
outsl
gs
ret
or
push
cwtl
and
jno
js
jno
ja
mov
push
mov
sbb
daa
push
aad
andl
and
in
dec
add
and
xor
andb
cmp
jne
scas
pushl
pushf
xor
cltd
cld
mov
rclb
vrcpss
adc
test
dec
or
adc
fidivs
or
movsl
sbb
sti
decl
or
fildl
je
push
shlb
scas
ljmp
arpl
out
sbb
inc
mulb
jge
rcrb
mov
cmp
pop
push
adc
cld
inc
inc
repz
inc
and
sub
in
sub
ret
inc
push
out
xor
into
in
mov
mov
mov
fdivp
lds
dec
push
xchg
mov
sub
jne
shll
inc
call
dec
adc
sahf
shll
mov
insb
sub
sbb
out
sub
push
dec
fisttps
mov
je
mov
inc
movsl
mov
mov
xor
xor
and
les
xchg
sbb
add
imul
outsb
mov
inc
test
fwait
xchg
sti
jne
inc
sar
aaa
push
ss
cltd
nop
push
inc
into
mov
mov
xor
insb
and
imul
movsl
jno
add
push
lcall
jl
cld
repz
add
dec
dec
gs
jge
jl
adc
aad
dec
inc
test
fbstp
mov
xorl
fsubl
dec
insb
jbe
xor
in
add
lcall
pop
test
shll
jecxz
or
add
mov
lock
xchg
or
xchg
adc
mov
inc
push
rorb
jecxz
xchg
add
ljmp
and
test
arpl
icebp
outsl
push
andb
cmp
incl
xor
out
inc
adc
mov
add
adc
ss
outsb
or
or
xlat
cmp
xchg
pop
sbbl
out
inc
inc
mov
shlb
inc
andl
in
mov
adc
jae
push
mov
cmp
sub
jne
les
incb
or
add
mov
mov
test
and
popa
pop
aam
add
ret
aad
xor
mov
aas
adc
or
push
insb
lret
sub
into
pop
mov
sarb
in
mov
les
xchg
clc
mov
mov
in
jmp
ljmp
ss
sub
insb
mov
pushf
sub
shll
ljmp
icebp
xchg
sbb
in
cltd
shll
repz
dec
fmull
sbb
dec
jg
and
repnz
popa
xchg
mov
stos
jbe
inc
incl
xchg
mov
scas
fmul
mov
arpl
xor
xor
sub
repnz
sub
loope
addl
ss
cmp
mov
inc
mov
inc
add
das
shlb
out
pop
mov
ja
inc
movsb
mov
adc
fsubs
in
xchg
mov
or
fwait
mov
mov
negb
inc
add
fsub
dec
jb
lea
clc
out
push
int3
lea
jno
xor
dec
and
push
push
inc
clc
pop
rolb
and
xor
push
pop
sbb
mov
adc
cmp
mov
cltd
cmp
hlt
fmul
jb
and
shrl
mov
dec
imul
ja
icebp
inc
jo
add
add
jp
push
xorb
loopne
loopne
sbb
ret
add
inc
xchg
dec
push
dec
rcrl
xchg
inc
stos
sub
or
mov
cmpsb
mov
cmp
push
shlb
pop
mov
dec
jbe
cmp
lock
loop
mov
jne
push
jmp
das
add
mov
movd
outsl
pop
mov
je
xor
dec
mov
xor
mov
aaa
sub
inc
add
roll
outsb
pusha
jmp
sub
fadds
dec
pop
add
decb
inc
std
enter
cwtl
imul
incl
jp
repz
lea
and
push
pop
gs
push
or
insl
lss
adc
xor
scas
dec
mov
in
push
ret
mov
cmp
jno
xchg
jmp
push
cs
sub
hlt
movsl
gs
mov
jl
shrb
dec
or
pop
clc
hlt
push
das
rorb
add
cmp
testb
loopne
pop
push
inc
mov
jle
sarl
mov
aaa
jl
lock
test
push
mov
or
and
into
test
ljmp
mov
scas
mov
inc
xchg
inc
decl
mov
sbb
outsb
xor
push
jecxz
push
push
or
lock
add
add
scas
arpl
adc
leave
clc
in
mov
or
mov
jne
fadd
push
sbb
cmp
andb
in
jg
jmp
hlt
lcall
js
in
push
loop
test
xor
loope
gs
jg
fnsave
movsl
push
das
mov
xlat
and
fcmovnbe
xchg
iret
push
insl
out
xchg
mov
inc
jb
aam
mov
mov
lock
ficoml
dec
lcall
pop
and
push
icebp
fbld
jo
stc
in
push
lock
fwait
clc
push
dec
sub
sub
or
imul
mov
push
cmc
pushf
lret
adc
loopne
sub
sub
push
xchg
sbb
mov
out
incl
cld
or
dec
rcl
mov
jl
pop
sbb
adc
xchg
cmovb
popa
in
nop
mov
pop
pop
inc
and
pop
insl
lods
mov
xlat
mov
mov
jb
lcall
loope
add
push
xchg
add
cmp
adc
mov
cmp
xor
mov
std
and
fs
fistpll
subb
addl
sub
xor
and
cs
xlat
xchg
popa
cmpsb
ljmp
push
jg
incl
frstor
adc
fisubs
into
cmpsl
cs
mov
xlat
shl
hlt
mov
fnstenv
xor
xor
pop
sar
sub
idivl
hlt
inc
scas
dec
mov
fdivrp
lea
pusha
jae
or
sub
add
xchg
mov
call
out
iret
enter
lahf
ljmp
ljmp
xor
out
xor
xchg
outsb
clc
sub
addr16
daa
push
adc
push
pop
test
dec
aam
sbb
cmpsl
push
mov
mov
clc
push
rcll
leave
dec
fnsave
call
pop
lods
outsb
std
stos
lods
outsb
sbb
fdivrs
or
imul
nop
hlt
shrb
push
push
call
enter
incl
ljmp
out
call
cmp
mov
jmp
in
addr16
xor
stos
testb
and
push
mov
adc
dec
fdivr
nop
movsl
mov
add
popf
pop
dec
inc
pusha
inc
cmp
rep
invd
push
xchg
outsl
iret
push
pushl
ljmp
push
lret
ret
aam
sub
or
and
ljmp
pminsw
push
xchg
ret
clc
mov
dec
mov
xchg
pusha
add
add
push
loopne
dec
ret
pop
push
cmp
lret
out
lcall
call
fstpt
mov
mov
jp
lcall
mov
cmp
int
lret
inc
adc
xor
or
mov
cli
mov
mov
lock
jecxz
pop
mov
sub
or
sbbl
add
bound
add
and
lea
sub
mov
loopne
sub
scas
xor
insl
enter
xchg
or
test
jl
movb
cmpsb
es
sub
out
popa
mov
sub
loop
or
xor
dec
cmpsl
inc
jnp
or
sbb
lahf
rcrl
and
pop
and
add
js
stos
ror
into
push
fs
inc
ret
aaa
push
fdivr
call
rcrl
adc
and
adc
out
les
in
popa
pop
or
fisubrl
shlb
sbb
bound
jg
or
pop
mov
rorb
into
loope
dec
lock
incl
jns
adc
jg
cmp
in
dec
inc
pop
sub
xchg
clc
jg
outsb
inc
dec
add
mov
orps
inc
dec
mul
int
imul
cmpsl
xchg
mov
leave
scas
fcomp
iret
inc
adc
rorb
jl
sub
mov
xor
call
jo
ret
push
xchg
std
lret
mov
cltd
or
push
daa
jnp
or
sbb
cmc
mov
ret
mov
decl
stc
push
push
popa
jge
faddl
mov
cli
aas
add
mov
xchg
mov
scas
mov
and
lahf
add
and
dec
push
cwtl
jnp
scas
cmpsb
movsb
sti
cs
ficompl
push
add
decb
pop
rolb
add
lahf
xchg
hlt
call
out
mov
xchg
cmp
movsl
mov
movsb
sub
insl
or
stc
movsb
xlat
push
in
inc
cld
incl
and
ljmp
test
in
insl
sub
inc
or
or
sub
scas
dec
pop
add
lret
cmpsl
push
insl
adcl
fwait
jb
je
scas
xchg
mov
jns
leave
imul
ja
inc
cld
insl
push
neg
or
xchg
pop
pop
mov
sbb
push
shr
push
roll
inc
movsl
mov
and
sahf
adc
adc
cmp
es
cmp
sbb
inc
pop
pop
pop
sub
fdivrl
sbb
sbb
jbe
daa
addr16
cli
fdivl
sub
add
fnstenv
pop
add
inc
lret
movb
jno
out
les
pop
in
mov
xchg
dec
sbb
adc
cmp
jle
push
dec
rcrl
lret
lcall
add
aam
xor
iret
outsb
mov
sub
sbb
decl
and
shlb
pop
mov
loop
imul
jbe
andl
aam
mov
push
fnstenv
loop
shlb
sbb
js
sbb
mov
xlat
call
aam
cwtl
pop
mov
into
mov
adc
cmp
in
outsl
call
lea
scas
mov
add
ja
pusha
pop
lcall
inc
cli
pop
xor
inc
mov
inc
add
mov
push
cmp
sub
stos
sbb
clc
ljmp
fs
fistps
test
xchg
shll
popf
in
jg
cmp
mov
daa
sub
push
jecxz,pn
and
jl
xlat
std
das
insb
loopne
scas
test
sbb
push
aad
add
pop
add
jge
xchg
xchg
stos
or
dec
pop
std
adc
fwait
adc
lret
adc
orb
outsl
adc
aas
lods
mov
push
rclb
xor
test
pop
repnz
xchg
dec
cmp
jo
jge
lock
add
cmc
cmp
loopne
enter
mov
inc
aas
loope
mov
add
lret
shlb
add
gs
and
sbb
or
cmpsb
fdivrs
mov
xorl
ljmp
pop
lea
aad
jno
dec
mov
mov
xchg
and
sbb
xchg
sub
and
push
and
xor
add
daa
mov
cld
and
lds
mov
loope
jmp
add
mov
pop
inc
adc
das
mov
sahf
add
and
add
add
test
popa
mov
push
pop
dec
push
xchg
or
daa
mov
leave
cmpsb
icebp
scas
rcrb
xchg
pop
inc
xchg
lods
mov
fwait
sbb
std
push
loop
cmp
popa
sahf
es
int
icebp
sbb
add
add
cmpb
push
cmp
xor
jo
jmp
push
mov
add
lret
test
fnstsw
test
fstps
int3
jo
loop
pusha
enter
pop
xlat
loopne
subl
xor
inc
fmuls
repnz
incl
sub
leave
in
lock
shrb
push
mov
jp
in
push
inc
cmc
mov
pop
inc
pop
lock
or
add
shrb
loope
inc
cmp
mov
mov
dec
fidivrs
pushf
adc
mov
push
add
movsl
fisubs
cmp
adc
pop
pop
andb
mov
xchg
lock
cmp
dec
rcl
aaa
rcl
ss
mov
fsts
ret
dec
adc
aam
sbbb
inc
inc
data16
gs
decl
out
into
fisubl
sub
xchg
cli
iret
push
clc
movsb
mov
cld
out
mov
or
cli
jg
das
and
ret
lods
into
shrb
push
popf
sarb
sub
clc
mov
and
sub
movsb
pop
jne
call
or
call
push
mov
xor
and
jns
std
inc
loopne
inc
aas
jl
out
pop
shl
inc
call
adc
fisubrl
mov
jbe
in
sar
jle
pop
sbb
sub
mov
adc
sbb
xor
push
inc
rcr
test
cmp
mov
insl
push
lcall
pop
dec
outsl
insl
push
lods
repnz
or
aam
dec
adc
icebp
mov
add
dec
sbb
mov
ljmp
push
mov
popf
ret
jmp
mov
jb
imul
lds
in
adc
dec
sti
shl
push
and
push
jmp
shll
and
sub
test
mov
pop
fstps
add
xchg
mov
dec
and
shrb
or
and
movl
xchg
xchg
xor
js
dec
lock
mov
sbb
cmp
lock
add
dec
sbb
fbstp
iret
jno
out
lahf
push
sbbb
mov
ljmp
fcomps
and
cld
jbe
out
stc
mov
adc
mov
ja
pop
sub
cli
mov
xchg
pushf
add
mov
adc
orl
roll
jae
lods
in
mov
ret
cmp
jbe
rcrl
ret
fisubrs
push
aaa
das
in
jg
mov
jb
dec
sub
sti
xchg
and
scas
mov
add
mov
and
iret
mov
pushl
pop
stc
jge
or
pop
push
pop
clc
and
xor
aam
cmp
jmp
lods
xor
xchg
add
fs
data16
addr16
shrb
jne
mov
lods
outsb
cli
dec
data16
fadds
repz
pop
andb
stc
push
inc
or
sub
test
movsl
dec
push
mov
sarb
test
adc
out
push
and
scas
decl
push
mov
cmpsl
xor
adc
lea
pop
ret
xchg
xchg
sarb
push
shrb
fimull
cs
mov
fcos
jg
mov
fisttps
cwtl
push
pop
dec
js
dec
dec
nop
aaa
inc
adc
or
add
sbb
push
jmp
xorb
add
ds
fsubrl
fsubrs
iret
loopne
ret
xor
add
fstl
pop
or
rcrl
ret
test
jbe
jg
rep
call
xchg
pop
inc
pushf
pusha
lock
repnz
add
or
mov
pop
lret
stc
hlt
aas
adcb
je
out
test
outsb
mov
mov
add
sbb
xlat
scas
dec
cmp
ficoml
loope
lea
pop
outsl
shlb
lock
ds
addb
mov
xchg
inc
cld
mov
sar
cmp
and
in
test
add
push
shl
aad
push
push
pushf
inc
sbb
cld
add
xor
cwtl
nop
add
jg
adc
xor
lods
pop
add
lods
xor
xlat
sbb
dec
jo
cmp
push
xor
pop
subl
call
adc
cmpsb
inc
mov
pop
aaa
sub
push
inc
jecxz
lea
sti
sti
testl
jg
pushf
out
xchg
cmpsl
push
and
xor
adc
repnz
dec
sub
pop
test
sbb
out
xor
je
dec
sbb
ret
loopne
stos
fs
pop
cmp
daa
and
xchg
add
sub
leave
imulb
mov
test
xchg
movsb
mov
loopne
sub
ja
rcrb
nop
dec
sahf
inc
fnstsw
call
sbb
in
scas
leave
aas
push
sub
and
sub
cmp
cld
pop
or
arpl
ret
mov
cmpl
ret
outsb
jmp
stos
dec
in
pop
sahf
std
int3
xchg
or
insb
or
jle
mov
xchg
hlt
xor
mov
call
jle
jo
loopne
cli
pushf
sbb
and
enter
imul
data16
enter
jmp
out
outsl
and
mov
cmp
add
loope
sbb
mov
xor
sbb
lock
mov
les
mov
bound
add
int
add
jecxz
lock
or
arpl
add
xor
stc
sbb
or
jne
pop
into
out
push
and
jbe
loopne
and
test
pushl
out
ljmp
add
xchg
inc
adc
nop
and
clc
aaa
jp
mov
inc
sahf
lret
xchg
sbb
aam
or
jb
les
lcall
and
dec
fwait
rolb
cli
in
cltd
adc
add
cmp
pop
xor
cwtl
imul
dec
xchg
inc
mov
adc
push
ljmp
push
std
add
adc
pusha
mov
rcl
stc
loop
and
std
iret
mov
out
xchg
push
or
testl
out
push
add
clc
inc
fwait
mov
leave
sbb
xchg
rclb
icebp
scas
stos
aam
mov
movsl
push
leave
cmpb
pusha
sub
xchg
repnz
or
sbb
cmp
jg
outsb
or
xor
add
and
sub
fs
xchg
adc
dec
sub
sbb
jmp
ljmp
lea
xor
lret
add
adc
push
xor
sub
adc
dec
mov
sahf
mov
inc
and
jns
pop
lret
mov
or
dec
sub
or
gs
aaa
xchg
cmpsb
mov
xor
pusha
lret
repnz
push
scas
sarb
inc
lock
adc
add
lock
or
aas
mov
inc
cld
dec
pop
cmp
nop
jmp
jmp
insl
loop
popf
dec
push
push
std
mov
out
clc
rcl
or
xchg
push
pusha
push
ret
or
push
push
std
pop
lret
dec
add
jno
mov
nop
fidivl
aaa
fwait
pop
ljmp
sub
lock
xor
mov
lcall
push
test
inc
inc
out
shll
and
fisubrl
fs
out
pusha
test
int
lcall
dec
lcall
mov
aas
outsl
mov
int
push
inc
adcl
xlat
inc
lcall
cld
movsb
mov
cmp
sbb
pop
test
push
inc
jg
add
adc
hlt
add
and
testl
fst
jecxz
xchg
sbb
cmc
cmp
cltd
clc
dec
mov
sub
fdivrp
inc
clc
mov
cwtl
cmpb
aaa
cmp
push
ljmp
mov
mov
in
xor
roll
sub
push
insb
jbe
sub
cs
inc
lods
sahf
int3
xchg
lea
inc
xor
incl
dec
sbb
sbb
mov
sub
jmp
sbb
cwtl
sbbb
ljmp
xchg
add
xor
push
add
loope
dec
loop
pop
ljmp
pop
adc
mov
pop
mov
jmp
lret
test
push
sbb
fsubs
push
ret
sub
mov
aaa
adc
dec
popf
enter
das
and
cmp
xor
pop
out
cli
cmp
cltd
mov
inc
sub
insb
vlddqu
mov
xor
mov
dec
xchg
add
push
inc
test
jg
push
inc
bound
adc
orl
sbb
inc
jo
jo
jg
dec
jb
lcall
xchg
mov
loopne
inc
rcrb
sub
sub
mov
dec
lret
enter
incl
cli
int
shl
xor
mov
nop
sub
push
addr16
incb
rcr
loopne
sbb
pop
inc
cmp
cmp
mov
fcom
sub
das
inc
enter
cmp
inc
dec
enter
int3
adc
idiv
in
or
cmp
pop
cmp
xor
xchg
filds
mov
add
mov
ffree
sub
sbb
cmp
push
mov
cmp
arpl
lcall
mov
jg
in
vunpckhpd
mov
icebp
xchg
and
xor
jg
jmp
mov
and
insb
lret
cwtl
ret
or
sub
insl
push
pushf
sub
std
fcomi
sub
sti
or
inc
dec
adc
cli
jb
pop
xchg
outsb
xchg
test
sub
mov
mov
inc
sbb
mov
push
popa
test
pop
push
loopne
or
cli
lcall
ss
cmp
enter
push
rorl
mov
lret
lcall
add
mov
ds
decl
sbb
xchg
cld
mov
stos
mov
lods
idivb
cmpsb
addl
shlb
mov
jmp
push
xor
sbb
sub
popa
hlt
enter
cmp
push
dec
fldl
add
clc
xchg
sbb
fldcw
mov
dec
or
or
mov
sub
add
pusha
push
shlb
mov
jmp
out
arpl
hlt
push
cmp
cmp
fistpll
aam
push
pusha
loop
and
data16
cmp
sbb
add
sbb
jmp
sbb
xchg
fwait
jle
dec
sbb
jnp
jmp
jne
dec
or
mov
lock
pop
mov
into
std
jg
outsb
aam
xor
sahf
cmp
sub
mov
add
popa
jmp
or
xchg
daa
mov
fnstenv
inc
dec
inc
and
cli
mov
dec
mov
xor
cmpb
cmpb
push
movsl
jl
or
mov
pushf
or
ss
fisttpl
xchg
xor
clc
cmp
loope
out
mov
js
aas
dec
rcr
sbb
mov
mov
push
sub
push
add
jbe
inc
or
rolb
add
mov
hlt
pop
scas
sti
mov
pop
dec
repz
stos
xchg
into
xchg
add
fwait
aaa
sbb
fwait
mov
xchg
push
leave
jbe
and
cli
aam
idivb
sbb
sub
sbb
adc
ljmp
icebp
jg
aam
or
icebp
ss
das
sub
pop
mov
sbb
adc
inc
js
add
push
push
std
and
stos
mov
data16
adc
jae
mov
mov
xor
mov
ret
pop
insb
hlt
insb
scas
aas
push
inc
imul
cmp
adc
jno
cmpl
mov
cmp
rorb
adc
test
pop
dec
jl
movsb
push
push
sbb
fwait
cmc
stc
insb
mov
lcall
dec
movsl
out
jp
jbe
add
mov
rorl
outsl
push
push
inc
insl
push
ds
ja
push
outsl
add
add
sbb
dec
jle
mov
lods
mov
pop
roll
pop
cli
jg
and
popa
int
pop
loope
mov
into
dec
add
jg
or
dec
ret
icebp
pop
dec
lods
sub
jo
dec
rcrb
divl
dec
pusha
cli
cmpsl
aam
mov
pop
test
ljmp
rolb
xorb
fildl
xchg
jmp
xor
or
cli
mov
loop
shufps
sbb
jecxz
adc
incw
ljmp
and
aad
pop
negl
pushf
push
inc
sub
mov
lock
pop
ret
cli
mov
cld
cmp
cmc
cmp
inc
mov
pushf
in
hlt
aas
adc
push
mov
sbb
xchg
cld
hlt
sbb
mov
add
cmp
test
sbb
decl
adc
push
call
in
data16
pop
cli
or
jle
aas
adc
lods
jnp
cmp
mov
mov
cli
aas
movsl
push
and
data16
push
inc
addl
jmp
and
jb
inc
sub
jnp
jnp
xchg
push
or
mov
loopne
pop
rcr
testb
dec
cmpb
cwtl
cwtl
mov
add
mov
shrb
mov
add
adc
sbb
jl
sahf
pop
xor
mov
sbb
call
cmpsb
imul
pushl
and
test
sub
rcl
xlat
xchg
adc
rorb
pop
lret
adc
jmp
cltd
cmp
xchg
mov
cld
leave
pop
dec
xchg
and
addl
xor
sub
pop
hlt
sbb
jno
pop
jo
jecxz
stos
dec
out
je
mov
pop
pop
enter
or
pusha
test
push
outsb
jle
testb
mov
mov
cmp
pushf
inc
rol
mov
insl
ficomps
jmp
insb
push
push
push
loopne
xor
sbb
ss
xchg
in
insl
loopne
mov
xchg
icebp
sbb
ss
jmp
out
jo
int
and
mov
repnz
insl
dec
xor
dec
pop
sahf
leave
mov
push
scas
push
mov
add
sub
pushl
dec
jno
mov
mov
dec
pop
sbb
adc
shlb
xchg
mov
inc
push
into
jg
stos
mov
mov
add
cmp
and
or
pop
jno
addr16
out
dec
ja
scas
and
mov
sub
cmp
xchg
in
inc
movsl
inc
clc
aaa
jmp
popf
loop
jbe
lods
lahf
mov
sbb
cs
jae
movsb
movsl
add
scas
mov
lahf
fsubrs
scas
xchg
clc
lods
fcompl
subl
jge
cld
jmp
jmp
mov
inc
rcl
ja
push
dec
mov
lea
mov
adc
insb
mov
add
jp
gs
cs
jl
jecxz
mov
cli
push
ret
jl
stos
dec
icebp
int
push
lock
push
filds
xor
sbb
sarb
add
dec
sub
cmp
and
aad
xor
rcrb
or
in
and
and
xchg
test
mov
lahf
insl
dec
ret
mov
sarb
sub
repnz
jbe
hlt
mov
loope
loopne
fimull
mov
cwtl
in
imull
xor
mov
and
adc
jmp
xor
sbb
mov
jno
shrb
sub
inc
push
xor
push
lds
decl
lahf
and
ret
rolb
and
lea
dec
mov
loope
shlb
ret
cmp
xor
loopne
push
fcomps
sbb
test
mov
stos
mov
sbb
mov
jmp
pop
in
dec
push
jmp
ss
enter
ljmp
mov
and
mov
out
push
cmp
push
loopne
cmc
data16
ret
aad
xor
lcall
jo
pushl
sbb
jl
cwtl
push
dec
sub
or
inc
mov
xor
or
ljmp
sahf
mov
add
and
inc
iret
decl
xor
fstpt
xor
xchg
sub
dec
cmp
aas
cwtl
sbb
mov
xor
ss
test
ret
mov
pushl
mov
or
andb
jae
xor
jecxz
dec
inc
or
sub
dec
and
push
cmp
in
push
in
dec
xor
ss
cmpl
jl
iret
adc
xchg
outsb
das
push
push
js
mov
inc
push
enter
pop
fwait
or
jge
jmp
xchg
ljmp
mov
pop
jmp
mov
ret
test
and
rorb
add
or
call
push
xchg
lock
or
xor
das
sub
dec
je
adcl
pop
js
out
icebp
out
testb
imul
cli
jg
push
add
test
adc
sarb
adc
or
pop
sbb
add
or
call
stc
add
into
scas
insb
movsl
jp
dec
push
jecxz
movsb
inc
movsb
add
test
xchg
aam
xchg
cmp
outsl
pop
and
aaa
adc
or
in
or
lods
in
or
lods
inc
shr
inc
ret
stos
leave
jbe
bound
mov
sahf
movsb
jmp
das
push
fmull
xor
adc
jb
adc
inc
and
aam
dec
mov
or
adc
int
stos
je
repnz
sub
lahf
nop
out
mov
push
or
cld
das
and
jno
sbb
ja
hlt
lock
cld
pusha
adc
sbb
push
cmp
ret
outsl
lahf
je
pop
mov
outsb
fstps
cwtl
dec
pop
std
out
adcb
faddl
cli
jns
rcll
xchg
orl
hlt
inc
mov
mov
xchg
aam
add
add
add
jb
sbb
xor
clc
and
sub
das
imul
dec
xchg
loopne
pop
dec
lcall
adc
inc
cmpsl
pop
test
out
roll
push
add
nop
lret
jmp
push
mov
loopne
xor
mov
inc
cmp
xchg
loop
xchg
jle
scas
push
inc
xchg
inc
cmc
ret
scas
push
push
or
fbstp
or
inc
or
jbe
xchg
mov
mov
pop
cli
and
dec
inc
shrb
sub
sar
pop
int
and
add
inc
lea
and
sub
push
mov
punpckhwd
filds
cld
sti
repz
fisubl
stc
pop
ljmp
ficoml
push
xchg
adc
xchg
aaa
push
push
jo
stos
add
or
lds
cmpsb
xor
in
fwait
incb
test
jae
or
adc
loop
add
jg
push
add
out
roll
add
and
aam
mov
lret
adc
ljmp
inc
push
loope
jge
inc
mov
out
push
sbb
stos
fiaddl
not
add
ret
jbe
cmp
jl
addl
push
pushf
jmp
adc
pusha
rolb
push
xor
add
mov
mov
push
jle
adc
adc
cmp
repnz
fistl
jle
xchg
push
sarl
or
push
or
adcl
adc
xchg
arpl
add
mov
push
adc
cmc
ljmp
xchg
push
rcll
in
idiv
loop
mov
cmp
outsb
jno
out
push
push
fsubl
sbb
mov
outsl
pop
dec
cmpb
jg
repnz
inc
xchg
jbe
xchg
xchg
pop
mov
movsb
test
pop
dec
sub
movsbl
dec
in
dec
lds
jge
loop
add
mov
cs
cmp
ss
mov
popf
inc
mov
pop
and
jnp
jg
scas
divb
lcall
inc
xchg
pop
mov
jp
fists
fdivl
lods
pop
loopne
add
test
rcrb
add
stc
aaa
mov
mov
pop
clc
mov
inc
stos
mov
arpl
inc
push
sbb
test
das
xor
daa
push
es
cld
jo
push
ss
jbe
ficompl
adc
or
inc
imul
xor
int
dec
es
jg
daa
sti
lcall
push
mov
sbb
sub
add
dec
inc
push
lods
adc
jmp
inc
popa
xor
in
xchg
test
cmpsl
aaa
call
cmp
lea
xchg
mov
sbb
aaa
push
jg
sbb
pop
mov
fldl
cs
movsl
in
dec
rorb
mov
and
mov
and
add
jl
cmp
mov
or
lock
push
sub
jns
ret
mov
cmpsl
xchg
mov
cwtl
aad
not
test
sahf
mov
aas
jp
mov
repnz
into
add
pop
insl
mov
loope
inc
mov
lods
mov
ds
sbb
add
aam
mov
fnstsw
fsubrl
loop
clc
push
rolb
int3
pop
loope
lock
push
lcall
sbb
bswap
xchg
inc
js
push
sub
roll
in
sbb
inc
loopne
divb
inc
outsl
sbb
adc
and
push
ret
jmp
mov
ja
cld
mov
push
jge
rcll
push
add
faddl
sti
lock
ret
lods
loope
and
mov
inc
or
xchg
mov
aaa
cld
leave
add
xor
and
pop
adc
sub
dec
call
jg
inc
inc
data16
cmpsb
dec
adc
lods
jl
add
or
push
pop
nop
popf
loopne
inc
pop
inc
mov
gs
shlb
pop
pushf
xchg
dec
clc
aas
inc
rolb
or
inc
jns
orb
mov
es
out
xchg
pop
iret
add
mov
daa
xchg
mov
adc
xor
mov
pop
repnz
jo
jg
jp
pop
sbb
mov
fcomip
add
jmp
push
and
test
jge
cmp
jbe
fldenv
orb
fwait
pop
out
std
mov
ss
add
jecxz
aas
sbb
mov
mov
hlt
and
jmp
test
cmpsb
aaa
je
js
or
rcll
cmp
loop
jnp
cwtl
sbb
ret
mov
sbb
int
dec
or
pushl
addb
mov
add
cmp
dec
pop
lea
push
mov
or
es
xchg
sbb
push
mov
pop
stos
push
test
push
inc
jmp
stos
loope
imul
mov
or
cs
or
sbb
add
cmpb
push
push
cmp
cmp
ret
loope
xor
icebp
hlt
mov
std
stos
adc
mov
in
inc
sub
outsl
push
cs
sbb
push
sbb
lcall
and
insb
je
rclb
lret
add
repnz
jle
pop
sbb
mov
movsl
xchg
cmpsl
add
filds
jmp
movsb
dec
icebp
add
bound
pushf
mov
jg
inc
add
sub
jl
nop
andl
and
and
std
mov
add
xchg
movsb
shr
dec
lcall
push
or
sbb
lcall
icebp
ret
jecxz
mov
xchg
and
hlt
pop
pop
test
and
ret
rcl
pushl
mov
jbe
inc
loope
mov
sarb
hlt
stos
aaa
fldcw
outsl
orb
mov
push
cmpsb
dec
jae
and
shrb
xor
outsl
fdivp
call
dec
add
lods
das
data16
fsubrs
scas
adc
pop
adc
xchg
or
decl
lcall
outsl
add
adc
mov
shr
sub
push
jae
lcall
mov
shlb
inc
clc
xor
sbb
dec
out
or
adc
dec
pusha
pop
dec
xchg
and
aam
jmp
dec
mov
movb
mov
xlat
ds
xchg
mov
pop
roll
aaa
sub
xchg
mov
push
or
dec
loope
js
sahf
lcall
sbbl
daa
or
ljmp
test
icebp
ss
adc
scas
jle
shr
clc
dec
mov
fldenv
mov
mov
lods
inc
mov
inc
xchg
cmp
mov
mov
dec
in
push
or
in
addl
inc
jae
push
or
jnp
jmp
ret
testl
out
jge
mov
rcrb
adc
popf
xlat
sbb
ljmp
mov
fadd
and
cld
xchg
push
cmp
cmc
test
or
cli
dec
addl
dec
cli
sub
nop
sub
rclb
pop
mov
dec
add
popa
push
scas
rorb
fmuls
sbb
jge
xchg
dec
pop
rcr
lods
icebp
out
xchg
test
out
in
gs
dec
mov
mov
std
test
cwtl
es
push
jl
add
inc
stos
mov
pushf
cmpsl
jge
fstl
arpl
ss
dec
dec
ret
pop
inc
pop
stos
cli
movsl
dec
cld
adc
jae
lods
cltd
ret
pop
cli
push
rcl
lcall
xor
push
test
test
xchg
fs
add
decl
mov
enter
jg
xchg
rorl
orb
lods
push
lods
shl
push
or
mov
push
js
movsb
call
push
pushf
xchg
push
icebp
out
loopne
ficoms
fwait
and
loop
sub
rcr
mov
sbb
fs
or
push
mov
fwait
sub
xor
sar
shl
test
pop
sub
mov
xor
test
ljmp
pop
sub
add
dec
xor
sbb
inc
jmp
scas
mov
pop
inc
jmp
and
mov
movsb
xor
pop
cld
adc
mov
ljmp
clc
aaa
enter
cmp
dec
or
pop
and
mov
add
stos
pop
jge
fs
cld
cld
adc
pushf
sarb
or
and
imul
hlt
stos
ret
pusha
cs
pop
gs
xchg
add
jne
test
aaa
test
sbbl
incl
and
dec
mov
ret
and
push
outsb
adc
dec
scas
sbb
pop
inc
xchg
fsubrp
mov
pop
cmp
pop
cmp
inc
sarb
push
lock
or
mov
loop
in
push
js
int
push
sub
pop
incl
dec
xchg
call
gs
push
gs
ret
in
or
xor
adc
inc
loopne
lock
rcll
and
inc
mov
xchg
xchg
add
pop
ss
mov
push
mov
xchg
mov
movsb
push
sahf
push
push
push
dec
push
in
and
ret
cmp
mov
sahf
repnz
pop
decb
jle
sub
pop
inc
inc
mov
push
sti
xchg
adc
jno
jno
jb
divb
mov
test
stos
lahf
mov
xchg
add
jg
pusha
mov
std
fistps
imul
add
xor
inc
jmp
cmp
call
cmpb
push
int
std
add
stos
dec
push
or
mov
aas
sar
inc
lea
or
dec
xchg
mov
cwtl
aas
orb
fldt
jb
test
sbb
pop
pusha
xchg
enter
sbb
adc
xor
fstl
push
cli
mov
xor
bnd
lcall
es
pop
cmpsb
jg
jl
xchg
push
sub
outsb
fcomps
xchg
popf
pop
sub
int
pop
add
sbb
pop
mov
mov
sub
dec
fwait
inc
dec
cmp
sub
and
incl
push
sub
mov
orb
testb
inc
sbb
test
push
mov
es
cld
push
and
test
es
inc
and
shrb
xor
mov
loopne
cmp
mov
xor
ss
sbb
pop
loopne
cld
pop
dec
sbb
mov
aam
adc
dec
mov
in
push
test
sahf
leave
jge
push
mov
jmp
inc
rorl
je
test
pop
sbb
shll
lret
inc
xchg
out
clc
mulb
sbb
dec
daa
xchg
je
test
mov
jo
pop
ret
sbb
jae
sahf
outsl
and
cmp
insl
mov
and
jbe
sub
enter
xor
pop
jo
lret
and
xchg
sbbb
dec
fs
xor
and
rcr
popa
mov
xchg
out
mov
xor
cmp
fcoms
paddsb
pop
jnp
sub
pop
clc
mov
jb
addr16
fs
cld
mov
icebp
push
jecxz
xacquire
dec
mov
sub
out
xlat
rcrb
mov
mov
xor
test
jg
or
and
icebp
rorb
mov
test
aam
incl
pop
clc
dec
adc
js
cmp
mov
popf
imul
mov
or
pop
mov
push
shrl
xchg
das
and
mov
xchg
pop
aam
lock
or
enter
shll
pop
jg
xchg
sub
cmpsl
xlat
adc
push
mov
outsl
dec
dec
movsl
lcall
dec
clc
out
mov
or
push
lea
pusha
popa
xchg
aam
rcrb
stos
and
pusha
dec
inc
ljmp
mov
js
xchg
movsb
das
cltd
and
dec
out
mov
mov
mov
pusha
xchg
call
inc
std
shll
mov
aaa
and
sbb
pop
push
pop
mov
jbe
aaa
hlt
mulb
negb
lret
jecxz
fstpl
pusha
repnz
push
scas
stos
or
push
inc
data16
jg
push
shll
movsb
rcrl
push
push
mov
scas
test
add
inc
in
es
pop
out
mul
jmp
shr
fs
or
add
xchg
adc
xchg
jo
mov
cmp
sub
jl
inc
std
xor
cld
xor
sahf
xchg
adc
pushl
adc
aas
mov
lods
jmp
mov
test
mov
hlt
pop
and
mov
lcall
pop
xchg
cmp
cmc
add
pop
push
jae
clc
test
cltd
jae
mov
js
in
roll
pop
mov
mov
cmpsb
push
int3
out
push
mov
pushf
xchg
push
mov
lods
movsb
loopne
cmp
xor
test
mov
popa
push
cmp
sbb
lret
jl
dec
les
jg
adc
js,pn
cmp
sahf
aam
push
sub
std
call
int3
push
jl
sbb
sbb
mov
push
dec
int
cmpsb
nop
cmp
mov
mov
dec
addr16
and
cmove
mov
in
popa
notb
sub
pushf
and
pop
movb
std
mov
mov
xchg
and
xor
or
fbld
sbb
sub
ffreep
inc
sbb
add
mov
mov
jg
add
cmp
sahf
inc
or
icebp
sbb
mov
mov
xor
pop
loopne
idivb
xor
mov
adc
ret
jmp
mov
pop
add
inc
inc
loop
mov
iret
cmp
or
push
fistpl
pop
ret
in
clc
jno
movsl
fadds
icebp
mov
pusha
mov
xor
rcll
idiv
mov
mov
mov
inc
ret
mov
and
ja
icebp
and
push
push
cli
scas
xchg
sub
add
daa
test
sub
add
or
lods
mov
call
sti
jecxz
jl
add
or
shl
iret
in
hlt
pusha
fiadds
dec
das
inc
shrl
ficoms
push
call
shlb
test
mov
negb
mov
mov
xor
jecxz
pop
scas
add
push
push
fcmove
push
imull
xor
pop
mov
imul
loop
movb
call
cmp
hlt
es
cmp
push
int
cmpsb
sub
or
cmpl
pcmpgtd
ret
std
cmp
inc
push
inc
sub
pushl
adc
insl
jmp
pop
inc
jmp
fwait
nopl
addl
cld
sarb
insl
pusha
mov
adc
scas
push
ds
jae
xor
aas
fstps
add
or
int3
mov
bound
mov
mov
stc
mov
dec
xchg
fiadds
les
fildll
nop
lods
mov
decl
adc
addb
pop
push
orl
mov
mov
scas
clc
xor
out
inc
ljmp
subb
aam
je
inc
in
mov
push
fildll
xor
and
push
movsb
sahf
hlt
punpckhdq
andb
jg
xchg
shlb
pusha
add
lock
xchg
pop
pop
cwtl
neg
push
decb
add
data16
mulb
leave
sub
lods
fisubrl
pop
bound
int
pop
and
and
out
inc
push
ret
sti
xor
cmp
cld
fcmovnu
loop
inc
adc
or
fimuls
fimull
and
or
adc
or
add
xchg
adc
lods
add
add
mov
lret
js
fisubl
pop
cmp
pusha
call
movsb
adcl
jle
loop
mov
add
in
cmp
push
sahf
fs
decl
ret
mov
dec
and
push
decl
lock
outsl
xor
push
shlb
add
jg
sbb
loope
add
inc
popa
xorl
shll
fidivs
mov
mov
shlb
ljmp
pop
and
jp
push
jns
ja
cmp
stos
icebp
daa
lods
loopne
sub
cmc
mov
push
xchg
fsubrp
lret
sahf
mov
iret
sub
or
pop
cld
jg
lock
mov
xor
addb
pusha
adc
or
movsb
pusha
jp
xor
cmp
mov
les
or
addl
push
pop
out
xchg
in
or
fnstcw
addb
mov
incl
mull
cmp
jo
and
xchg
sbb
aas
jmp
xor
or
inc
fdivrs
adc
adc
je
sbb
jg
clc
and
mov
inc
punpckhbw
jmp
mov
and
or
mov
shl
aaa
pop
dec
pop
xchg
sbb
mov
inc
xor
xchg
jo
or
fldt
mov
or
xor
push
or
cmovnp
lock
cmpl
mov
and
decl
pop
adc
shrl
or
test
inc
adc
jb
std
fbld
jnp
or
adc
sarb
mov
or
enter
dec
inc
ficompl
fistps
mov
inc
push
add
mov
rcr
repnz
add
sub
dec
test
ds
push
dec
jbe
ss
fldcw
imul
pop
pusha
stos
enter
sub
pusha
push
push
addl
fcomip
adc
movsb
test
mov
dec
xor
add
and
pop
push
add
in
outsl
aaa
xor
push
mov
cld
pop
shll
inc
jo
ficoml
divb
or
add
jecxz,pt
cmp
push
pop
icebp
ljmp
test
inc
push
test
cmp
mov
mov
inc
push
inc
fiaddl
push
xchg
inc
pop
jae
xchg
mov
push
dec
fldenv
inc
adc
int3
rorl
adc
decb
push
lock
mov
fs
xchg
mov
adc
mov
iret
push
pop
jb
mov
idiv
jmp
dec
js
or
add
mov
pop
push
add
fidivl
jne
test
and
push
mov
push
into
fs
pop
dec
icebp
mov
adc
inc
pop
push
add
mov
pop
cmp
or
repz
adc
xchg
fstpt
clts
sbb
decl
xor
icebp
cmp
push
add
ret
adc
jno
lock
sub
sbb
enter
mov
insl
lret
lock
push
sbb
sub
jg
push
fmul
iret
push
insl
out
pop
std
rolb
popa
mov
lcall
and
xchg
adc
mulb
addr16
ja
jo
addb
jge
outsb
xor
clc
cs
aaa
mov
sahf
lock
test
sti
ret
mov
pusha
adc
clc
jb
loop
aam
and
mov
ds
filds
mov
xorb
fidivl
movsl
cli
aas
xchg
call
rorb
inc
std
mov
push
xor
and
jns
mov
xor
gs
push
dec
faddl
or
inc
sti
jg
inc
ljmp
clc
and
loopne
in
sbb
lods
or
mov
outsb
clc
stos
mov
xchg
bound
ret
sbb
jmp
mov
filds
push
in
idivl
shll
and
mov
jmp
mov
subb
std
lcall
jb
xor
mov
pop
push
inc
outsl
clc
jmp
inc
sub
xchg
inc
xor
push
jle
sub
cmp
pushl
mov
imul
pop
push
push
dec
lock
mov
ret
sbb
add
and
jp
sbb
add
sub
mov
or
push
pop
mov
adcl
loopne
fld
and
pop
push
sub
incb
mov
sbb
push
sub
call
fcomps
cmpsl
fiadds
jns
xchg
mov
push
into
rcrb
rolb
mov
mov
jecxz
leave
call
cli
nop
ficoms
dec
push
stc
inc
repnz
stc
mov
lret
fcomp
sub
notb
lret
push
add
imul
in
sub
test
push
jecxz
sbb
mov
cmp
jo
hlt
or
xor
je
sub
pop
cli
jmp
adc
xor
cmp
shl
push
xchg
fisubrs
mov
mov
lock
add
jg
inc
mov
pop
mov
xchg
jnp
xor
jmp
aas
add
movsb
mov
mov
add
lods
sbb
add
ja
mov
pop
xchg
fisttpl
dec
push
sub
cli
dec
xor
add
pop
pop
mov
xchg
cli
and
mov
push
push
or
pop
add
xchg
enter
stos
and
rolb
movsl
lock
sub
add
enter
pop
push
bound
and
adc
xchg
mov
add
aas
xor
je
nop
sarl
adc
fwait
add
push
adc
cld
mov
mov
ljmp
push
or
or
cmp
sar
ljmp
ret
add
nop
jle
and
and
arpl
xchg
add
mov
cmpsl
sbb
std
ljmp
add
insl
and
cli
dec
or
add
jge
leave
push
enter
clc
stos
push
dec
mov
mov
mov
popf
cld
mov
ret
or
ja
clc
xor
stos
sbbb
repz
mov
cmp
sbb
mov
rcrb
test
loopne
int
test
jecxz
push
stc
cmpl
int
fwait
sub
loopne
xor
rcll
adc
mov
jb
hlt
iret
jns
inc
ljmp
insl
jle
test
test
sub
pushf
call
fbld
pop
push
add
mov
negb
mov
jb
inc
mov
xor
nop
movsl
xchg
pop
jl
push
cmp
push
add
mov
js
jb
cmpsb
push
inc
lea
andb
sub
out
ds
adc
xchg
xor
push
add
sub
ret
xchg
test
jg
fs
pop
xlat
leave
mov
dec
arpl
mov
pop
mov
outsl
push
or
push
into
adc
fsubrs
add
addr16
and
add
mov
adc
fs
fs
cmpsb
test
nop
leave
jo
inc
push
nop
out
rolb
cmp
daa
sub
dec
mov
pop
cmp
mov
sbb
cld
mov
adc
lds
sbb
scas
frstor
jg
add
inc
jmp
and
mov
aam
adc
test
lret
and
jne
fmull
cmp
out
sbb
mov
incb
insl
sbb
cwtl
in
jecxz
gs
push
sbb
xor
jl
push
push
std
and
and
push
stos
jg
sbb
sarb
and
shrb
jmp
enter
rolb
testl
mov
adc
rorb
push
pop
sub
insl
pop
pop
add
ljmp
sar
xchg
cmpsb
xchg
sub
pop
test
mov
sub
pushf
and
insb
fisttps
ss
cmp
ret
flds
sub
jae
jmp
std
sahf
xor
add
call
call
sbb
ds
data16
lods
lret
addb
loopne
in
jne
mov
ret
sbb
lock
lods
ret
rcrb
out
aaa
sub
sub
cmc
je
fisubl
mov
mov
call
and
inc
fdiv
mov
test
sbb
ljmp
jae
insl
lcall
xchg
mov
cmc
sub
adc
ss
sbb
fsubrl
mov
add
daa
adc
jbe
lret
and
pusha
js
call
stos
pop
jb
inc
push
ss
or
and
ss
popa
xchg
lock
pop
popf
add
jg
aas
ficoms
xchg
and
jmp
or
xchg
fld
xor
add
push
pusha
push
lock
in
fimuls
adc
cmp
xchg
mov
adc
push
clc
jmp
dec
pusha
and
or
dec
lret
sbb
fcomip
pop
gs
sahf
xlat
pusha
inc
loopne
mov
mov
pushl
loopne
or
and
rclb
mov
xorl
xor
inc
inc
popf
addl
nop
adc
clc
lret
repz
ljmp
mov
jmp
cmp
mov
mov
repz
inc
and
or
subb
and
sbb
ret
rcll
push
hlt
fwait
mov
sub
push
divl
inc
mov
lcall
adc
add
xlat
xchg
fsubs
xchg
clc
out
nop
or
roll
push
sub
out
pop
xchg
rolb
ret
mov
lock
push
and
push
scas
cltd
loop
xchg
sarb
mov
dec
pop
arpl
gs
shl
pop
pushl
clc
sti
sti
push
pusha
mov
into
sub
cmpsb
pop
adc
or
test
dec
cmc
aad
push
nop
cltd
ficoml
jle
sbb
jl
mov
dec
sub
sbb
xchg
mov
adc
pop
dec
sbb
lcall
mov
xchg
jmp
or
mov
mov
xlat
repnz
insb
js
push
es
pop
jg
int3
sahf
je
inc
sbb
mov
mov
sarl
and
fsubrs
inc
imul
decl
add
lock
out
decb
jg
xchg
or
or
ror
ljmp
adc
sahf
pop
int
xchg
paddd
cmp
jge
mov
ljmp
sub
ret
cmp
mov
jbe
jns
aas
push
mov
jae
psubq
sbb
sti
and
push
test
or
icebp
pop
inc
cmp
pusha
fnstcw
fidivl
popa
sub
negb
into
ret
cmp
pop
out
jg
inc
cltd
das
das
dec
or
xchg
mov
jbe
pop
jo
jbe
iret
fbld
add
shlb
or
push
add
sub
insl
sbb
dec
fldcw
icebp
dec
incl
or
mov
lahf
mov
rol
or
icebp
sbb
jo
add
mov
cmpsb
inc
sub
or
push
sbb
hlt
cli
mov
lods
mov
cltd
outsb
in
mov
pop
popf
xor
data16
mov
add
ret
aas
jbe
pop
push
and
test
incl
push
lods
dec
push
cmp
jo
mov
loopne
sti
jg
and
add
mov
mulb
pop
and
add
inc
scas
add
int3
mov
sbb
bound
cld
cld
fisttps
pop
add
gs
mov
xor
or
add
push
ror
sbb
push
add
ja
push
push
mov
insb
jle
sahf
iret
jp
outsl
sub
addb
xchg
scas
adc
mov
jb
pusha
mov
int
inc
leave
xchg
dec
rcrl
cvttps2pi
jge
inc
dec
dec
repnz
fadds
daa
test
mov
add
test
or
adc
fistps
lds
push
mov
jno
leave
inc
aad
loop
and
lret
push
or
pop
push
insb
mov
movsl
movsb
push
pop
and
sub
mov
out
mov
stos
lcall
in
mov
pop
or
jl
adc
sbb
inc
clc
add
sti
push
vmovaps
cmpl
push
sub
cmp
sub
idivb
mov
test
jg
jmp
push
dec
or
xchg
inc
and
inc
sub
cld
outsb
mov
push
loopne
es
dec
ret
inc
add
dec
inc
stos
lret
push
push
and
dec
mov
push
pop
fnop
shrl
cli
inc
in
cmp
inc
mov
in
outsl
fdivs
pop
jp
int3
pop
add
scas
add
sbb
xchg
dec
xor
in
sbb
mov
xchg
bound
ja
mov
jle
push
sub
outsl
inc
mov
mov
inc
pushf
movsl
call
les
loop
mov
xor
mov
int3
cmp
aam
inc
call
sub
rolb
jg
mov
mov
jnp
in
mov
lds
pop
sar
stos
jg
std
rcrl
mov
cmp
pop
fildl
inc
add
xor
adcl
xor
and
fildl
and
test
mov
xor
jne
mov
pusha
int3
mov
jecxz
nop
xor
stc
or
adc
dec
jp
sbb
jae
hlt
ljmp
je
add
or
and
xor
sub
xchg
and
out
sbb
nop
cmp
sub
aad
xor
inc
mov
in
repz
nop
outsb
add
not
push
in
xor
repz
mov
and
pop
hlt
dec
inc
pop
and
cmpsb
orb
mov
add
and
push
loope
or
std
cmovno
mov
jecxz
andl
pop
push
mull
movsb
js
das
mov
nop
xor
stos
loopne
push
push
push
in
sbb
std
push
popa
mov
fbld
loop
fldcw
push
push
pop
adcb
add
ljmp
scas
je
jno
xchg
push
pop
jns
xchg
lret
fstpt
sbb
mov
or
sti
xchg
fcoml
iret
jle
lods
push
pop
push
mov
pushl
inc
xor
enter
or
inc
mov
sbb
lods
fimuls
cld
int3
mov
mov
jmp
shll
mov
adc
movsl
inc
cld
cld
call
sub
xchg
mov
sbb
xchg
jnp
movsl
test
sub
jecxz
push
jo
lret
test
cmc
adc
cltd
or
pushw
xlat
call
out
out
stos
dec
cld
mov
push
adc
popa
test
xchg
popf
jp
cmp
or
inc
fsubs
or
xlat
mov
and
sbb
out
dec
mov
test
push
add
fwait
add
add
fldt
ret
mov
lcall
shl
es
data16
lahf
sub
push
loop
push
hlt
cmp
pusha
jecxz
jg
stc
mov
add
ljmp
adcb
xor
mov
mov
ja
xor
rorl
movsb
icebp
adc
sarl
mov
int3
inc
addl
imul
inc
out
push
inc
push
dec
filds
xchg
rcrb
ret
mov
cmp
rorb
xchg
cld
stos
cmp
pop
dec
jecxz
adc
fadd
insl
mov
mov
dec
aas
mov
subl
sbb
mov
xchg
in
sti
jo
nop
nop
pop
pop
sbb
pushl
gs
test
mov
dec
mov
mov
jo
pop
dec
or
inc
push
std
fildll
sbb
inc
inc
jo
and
and
pop
gs
icebp
pop
cltd
dec
adc
sub
fidivrs
daa
popa
sbb
jbe
pop
fisubs
aas
adc
mov
fistpll
push
sbb
cmc
cmp
sub
push
sbb
and
hlt
cwtl
inc
iret
add
add
dec
cmpsl
add
push
dec
or
dec
std
cltd
loop
pop
dec
add
out
sar
push
pop
adc
nop
and
add
add
mov
sti
ljmp
js
repnz
test
ret
jmp
cmp
sub
inc
and
shrl
movsb
xor
ja
adc
fstl
push
inc
outsb
fcomps
incb
xchg
daa
mov
insl
xchg
jecxz
into
add
mov
das
mov
shl
pop
mov
sub
mov
inc
pop
cltd
adc
inc
pop
imul
incl
jl
rclb
mov
sub
xchg
jae
lcall
adc
cwtl
lcall
andb
sub
aad
xchg
filds
in
or
xchg
out
sub
jo
int
cmp
and
jge
mov
add
call
cmc
dec
fimuls
pop
add
mov
jecxz
aas
mov
in
and
enter
popa
shl
inc
dec
dec
shrb
cld
das
push
add
or
jmp
sti
sahf
dec
pop
cmp
adc
and
mov
mov
fucomip
lock
movsl
jecxz
inc
mov
pop
arpl
sbb
adcb
pop
loopne
jp
add
cmp
adc
jmp
add
aam
lret
divb
jle
jb
jecxz
mov
xorb
mov
sub
and
inc
add
mov
mov
lret
jle
add
adc
sahf
pop
dec
or
pop
pusha
adc
adc
sbb
roll
les
adc
test
cli
pop
pop
insb
add
es
lret
add
jp
pop
cmp
push
or
call
inc
pop
add
insb
or
push
cmp
scas
mov
sub
mov
xchg
mov
ds
cmp
inc
out
test
add
ja
jmp
fidivrs
cmp
or
jge
ja
jmp
adc
mov
cmp
xchg
push
or
out
cli
adc
sbbb
cmpb
xchg
cltd
ljmp
jge
das
inc
cmp
mov
xchg
xor
cli
pop
sub
fcmovu
sbb
mov
push
xchg
xchg
xchg
and
jmp
jo
xchg
xchg
popa
je
stc
cmp
sbb
int
loop
adc
pop
mov
add
in
scas
adc
es
push
push
xchg
orb
fisttpll
cmpsl
or
pop
fldl
add
cmp
inc
ja
test
fs
pop
aas
push
ljmp
xor
dec
loopne
inc
aad
mov
sbb
or
movsb
decb
pop
add
push
mov
xchg
push
call
mov
xchg
in
jbe
idiv
pop
mov
dec
insb
jb
pop
in
ss
or
push
andb
xor
xorl
dec
sub
xor
mov
lcall
push
and
clc
pop
jne
icebp
mov
stc
or
arpl
test
push
jp
and
ja
rcll
lret
in
mov
jnp
xchg
mov
jmp
mov
mov
pop
mov
mov
mov
add
mov
cld
fistpll
jo
scas
enter
or
dec
mov
lcall
movsb
push
imul
ljmp
lods
js
pop
gs
out
add
jmp
push
cmp
sarl
sub
clc
lock
dec
stos
cmp
inc
cmp
mov
andl
pop
sbb
xchg
sti
enter
dec
dec
daa
or
loopne
push
or
jg
in
js
sbb
or
jg
inc
fs
mov
jmp
sbb
and
push
sub
pop
cld
push
cld
loop
xchg
insl
xchg
mov
mov
lods
mov
and
sbb
addr16
sbb
inc
frstor
push
nop
push
nop
inc
cmp
or
cmpsl
sub
mov
dec
xchg
dec
mov
sbb
jae
jnp
mov
and
push
pop
int3
inc
loopne
dec
in
inc
decl
mov
dec
pop
shll
pop
addb
xor
jg
mov
das
jp
ds
push
mov
pop
mov
or
dec
orb
sbbb
push
and
adc
pusha
jo
mov
sub
cmp
or
pop
repnz
movsb
iret
push
aam
int3
ljmp
sub
sbbb
pushf
ret
xor
dec
or
or
cwtl
rcrl
clc
icebp
mov
inc
jle
cmpsl
mov
subl
and
cmpsl
pop
push
call
divps
xor
iret
or
mov
iret
out
jmp
lret
movsl
or
cli
push
push
adc
fxch
sbb
xor
insb
fmull
add
pop
fnstenv
xor
int
loopne
nop
std
clc
gs
fldcw
inc
in
or
push
int
push
lock
sbb
aaa
jg
sub
and
pop
pop
add
insb
loopne
and
out
pop
movsl
mov
testl
cmp
mov
or
insl
adc
cmpsb
bound
add
test
shll
sub
ljmp
mov
xchg
rorb
mov
insb
add
adc
incl
pusha
scas
inc
fisubrs
cmpsb
hlt
sbb
pop
sub
gs
xor
or
test
push
repz
ds
addr16
fsubrs
xchg
nop
ds
leave
addr16
mov
mov
mov
stos
out
mov
adc
stos
jg
push
or
adc
mov
add
jmp
es
repnz
ja
cmp
cld
fs
xchg
lods
add
incl
loopne
xor
mov
push
sbb
inc
negb
adc
dec
cmpsb
adc
adc
push
dec
xchg
adc
movsb
xchg
xor
fisubs
cmpsb
pop
or
outsb
jmp
fcos
push
sar
mov
pmaxub
jns
fidivs
inc
inc
mov
pushf
mov
outsb
orb
dec
or
cmpsb
addb
incl
inc
jmp
xchg
jnp
sti
inc
lss
out
in
sbb
rcrl
idiv
aam
and
arpl
xchg
rcr
jp
and
cli
pop
hlt
mov
mov
push
push
mov
mov
into
xchg
call
ljmp
arpl
mov
cmp
adc
scas
and
cld
and
jo
sub
xor
cs
inc
mov
in
push
cmp
test
testl
sub
lcall
inc
push
out
enter
cwtl
fcmovnu
jo
call
or
add
add
push
xchg
mov
mov
insb
shlb
lret
hlt
bound
movlps
sbb
movsb
lcall
sarb
insb
nop
mov
jb
mov
lods
ret
xchg
ss
jle
mov
dec
test
daa
ret
clc
sub
dec
minps
cmp
sub
add
jle
push
pop
jg
call
js
and
je
pop
dec
or
adc
shll
mov
cld
sbb
inc
psrlw
push
mov
bound
and
pusha
loope
pop
in
gs
punpckhbw
lret
and
incl
out
gs
xor
push
xchg
push
add
dec
test
inc
xchg
push
aaa
or
inc
dec
mov
cmp
das
lock
ljmp
enter
cmp
or
and
sub
popf
mov
call
xchg
sub
fisubl
push
sbb
loopne
and
and
imul
push
iret
push
rcrb
mov
scas
jg
sub
or
hlt
mov
cmp
xchg
lods
cmp
addr16
ficoms
sub
dec
sarb
js
sub
mov
mov
mov
add
mov
add
cmc
stos
jns
mov
add
adc
add
movsb
scas
xor
cmpsb
xchg
iret
out
mov
add
and
jg
xchg
or
scas
nop
push
jg
jo
mov
lock
adc
into
fcos
or
add
inc
insl
and
lahf
lods
and
dec
push
or
mov
xorb
dec
push
mov
mov
pop
imul
notb
fisubl
outsb
ja
sbb
dec
dec
jmp
flds
lods
testb
push
push
push
stos
sbb
stos
std
stos
cmpsb
cli
andb
les
mov
filds
fisttps
leave
push
add
mov
sbb
imul
jmp
mov
sahf
addr16
dec
fsubrs
hlt
and
dec
push
out
pop
mov
jo
pop
or
mov
insl
popa
inc
icebp
dec
push
jbe
fwait
jae
mov
call
push
pushl
add
dec
lds
adc
push
cmp
mov
aam
xchg
xchg
loopne
icebp
in
add
pop
insl
xchg
leave
push
mov
push
insb
add
clc
out
out
inc
mov
adc
cld
es
or
sahf
fmul
sbb
loope
mov
or
aaa
call
mov
ret
cmp
adc
inc
adc
mov
loop
out
mov
bound
xor
push
jg
sti
mov
pop
mov
icebp
call
pop
aam
data16
ja
push
sbb
cmp
jbe
push
jge
sub
scas
mov
push
fld
adc
push
divb
push
aam
dec
mov
sub
mov
push
dec
push
bound
cmp
fdivr
js
or
mov
inc
add
pop
in
ljmp
lcall
out
faddl
repz
jbe
test
stos
inc
adcb
stos
faddl
dec
jb
dec
sarb
mov
pop
bound
fsubrl
xor
push
mov
pop
add
xor
divb
mov
cwtl
loope
inc
ret
pop
int
int3
fisubs
and
inc
jmp
cs
pop
xor
pop
pop
dec
mov
lods
or
inc
mov
imul
sub
xor
bnd
test
clc
push
and
in
loop
movsb
mov
mov
mov
popa
cli
pop
adc
shl
call
dec
pop
mov
lcall
leave
sbb
das
mov
adcl
mov
fs
push
dec
das
cli
add
iret
aas
and
jl
inc
pop
inc
into
fdivrs
push
mov
mov
and
pop
ss
and
pop
negl
hlt
mov
adc
mov
mov
push
aad
mov
pop
sub
fdivr
jo
adc
lret
mov
add
repnz
cmpsb
ljmp
sub
inc
mov
outsl
mov
jnp
mov
call
fwait
sub
jb
sbb
or
cmp
sar
clc
or
cmp
ja
lock
les
shl
adc
xlat
cmp
and
je
xchg
mov
aam
lods
insl
push
cmpsl
or
push
xchg
cld
xchg
mov
jns
adc
sbb
cmp
fbstp
xor
jbe
inc
fbld
adc
stos
call
insl
dec
cmc
sub
add
popa
xchg
cmpsb
test
hlt
cwtl
cwtl
push
jle
push
xchg
insl
ljmp
push
pop
sbb
add
xor
sub
and
ret
mov
adc
jecxz
enter
call
frstor
xchg
jnp
push
loopne
push
arpl
push
ret
add
xor
inc
dec
fdivl
cli
bound
cs
push
fbld
inc
xchg
and
dec
mov
mov
jle
push
lahf
lock
fcmovnbe
dec
mov
repz
lcall
fimull
sub
xlat
rcll
push
sub
shll
adc
mov
insb
fmuls
xchg
jo
aas
dec
aad
test
in
xchg
cld
mov
inc
xchg
dec
lock
or
adc
das
pop
inc
inc
pop
imul
bound
testb
mov
dec
lods
aam
push
pop
xchg
xchg
xor
adc
mov
lcall
cmp
test
inc
push
es
repnz
sbb
cwtl
in
push
mov
push
fwait
cld
cmc
das
pushl
pop
xchg
cld
mov
fdivrl
pop
mov
xor
movsl
sbb
or
add
rclb
cwtl
test
lock
int
add
cmp
cmp
bnd
scas
mov
push
mov
push
pop
inc
lods
sub
aas
data16
xchg
ljmp
dec
or
lods
sub
and
imul
cs
outsb
lcall
mov
jb,pn
push
jo
dec
xlat
clc
loopne
loopne
sbb
nop
adc
mov
filds
je
mov
xchg
inc
xchg
push
sub
fwait
adc
outsb
cmpsl
iret
mov
pop
int
cmp
addl
or
mov
fidivrs
inc
inc
mov
out
mov
jo
inc
or
xlat
dec
lea
test
dec
dec
movsb
out
dec
add
mov
fcomps
jp
or
pop
jae
cld
fisttpl
addb
stc
xchg
sub
filds
clc
sbbb
xor
loopne
mov
lea
ljmp
jecxz
pop
lods
xor
jg
aas
fmuls
out
jnp
pushf
push
push
std
inc
push
mov
stos
mov
jne
ret
and
fiadds
icebp
inc
pusha
rcrb
cld
and
and
fst
pop
xchg
cwtl
fnsave
push
mov
movl
sub
adc
subl
jbe
mov
sbb
lea
cmp
xor
xchg
push
mov
repz
lea
sarb
push
pushl
sbbl
fimull
add
stos
dec
fisubl
shrl
sub
sub
shlb
insl
mov
icebp
mov
lret
pop
adc
add
data16
mov
nop
shll
pop
inc
and
inc
loopne
pushf
subb
mov
push
ret
jnp
addr16
in
imul
daa
jo
test
xchg
mov
ja
pop
sub
rorl
xchg
push
and
insl
das
sbb
or
lock
cltd
fsubrl
jp
mov
cmp
enter
jg
cmp
pop
xchg
xor
les
xchg
and
clc
push
xor
rcrb
lods
push
pop
xor
decl
inc
and
cld
into
movsl
pop
ja
lods
sbb
inc
xor
out
add
mov
loopne
or
data16
push
rcr
mov
lret
lock
inc
dec
adc
mov
cld
call
pop
scas
cmp
mov
or
arpl
fildll
insl
and
test
in
popf
add
sub
or
adc
scas
jg
cmp
sub
clc
lods
dec
push
fcoml
call
insl
or
push
popa
pop
dec
push
int3
push
inc
cli
es
les
and
jno
imul
fs
in
scas
and
mov
adc
or
add
test
fsubp
xor
inc
mov
dec
xchg
inc
pop
adc
and
negb
and
and
stos
cs
mov
imul
std
ja
add
mov
test
adc
cmpb
rorl
push
pusha
sbb
filds
jmp
adc
je
jmp
ficompl
mov
adc
mov
fxch
sahf
sub
add
out
adcb
aas
push
inc
neg
pop
je
and
lods
mov
mov
sbb
flds
sti
push
mov
push
andb
cltd
cli
or
sub
jno
jo
mov
xchg
xchg
js
inc
push
pop
fmull
mov
outsl
push
lcall
loopne
jmp
mov
cld
sahf
insl
jl
idivw
push
mov
push
sbb
sbb
cmp
cmpb
frstor
jb
and
ret
stc
xor
mov
adc
or
arpl
lcall
dec
scas
xchg
push
daa
mov
push
mov
std
dec
lahf
add
add
loope
adc
jl
mov
add
push
ret
out
movsb
cmp
dec
add
jl
mov
mov
mov
loope
add
sub
sub
inc
push
and
insb
push
and
loope
dec
jnp
cli
adc
sbb
xor
mov
inc
lret
aaa
notb
pop
add
xlat
push
call
cmpsl
or
or
sbbl
and
loop
push
push
mov
sbb
adc
xor
inc
jae
dec
add
pushf
xchg
cwtl
ffree
lods
mov
xor
sbb
aam
sbb
add
lods
mov
xor
cli
cmp
fisubrs
popa
insl
cmp
fimull
sub
std
test
and
fdivrl
adc
sti
cmp
sbb
pop
push
out
adc
mov
inc
sub
jl
xor
call
enter
xor
and
mov
push
or
cld
ss
sahf
cmp
mov
sbbb
xor
loope
jne
or
push
jns
jne
jno
decl
aam
pusha
loop
out
adc
fildl
fstps
add
lods
mov
cmpsb
lea
push
lcall
mov
mov
cmpsl
or
sub
movsb
xchg
dec
in
stos
bound
dec
fadds
int3
imul
mov
test
out
pushf
aad
shrb
cltd
jno
mov
pushl
movsl
adc
and
xor
or
cmp
addb
xor
lds
fmull
mov
adc
mov
out
clc
iret
push
clc
leave
or
or
xchg
call
sub
mov
outsb
mov
sti
das
mov
std
inc
sub
outsl
lds
mov
add
xor
call
insb
fsubrs
xor
push
sbb
push
mov
ret
and
dec
and
xor
and
inc
cmp
aaa
or
cmc
ljmp
adc
push
sub
sbb
rol
test
push
mov
push
adc
mov
xor
out
stos
push
clc
push
push
leave
or
and
call
decl
cmp
lock
xlat
push
pop
inc
sbb
bound
and
incl
pushf
les
xchg
andl
inc
icebp
scas
xor
xchg
cmp
loope
or
jg
adcb
sub
lods
jle
mov
clc
cltd
xor
adc
add
mov
add
mov
enter
ficompl
sbb
pcmpgtb
je
xor
js
test
mov
sbb
test
push
xchg
adc
sbb
movsl
mov
mov
add
icebp
neg
mov
cmp
sbb
pop
loopne
cmp
inc
int3
loope
xor
sub
shl
mov
pushl
or
xchg
aad
std
aam
test
clc
addr16
cwtl
int
sub
js
cs
fistl
and
jmp
sbb
sar
test
xchg
jae
ret
lea
mov
cmp
xlat
incl
stc
imul
ljmp
xor
divb
int3
fbld
jg
xor
mov
dec
dec
push
repnz
fildll
mov
adc
inc
shlb
cmp
add
movsb
jb
or
imulb
lock
shlb
adc
imul
pop
adc
outsb
fimuls
aam
negl
popf
pop
push
inc
orl
add
push
pushf
jge
enter
cltd
pop
test
cld
incl
test
jo
cmp
add
jge
lret
loopne
mov
int3
dec
das
cmp
jg
lcall
push
cli
fwait
push
lret
dec
mov
rcr
adc
inc
dec
dec
fimuls
push
leave
mov
mov
push
cld
inc
sub
and
inc
loopne
sub
outsl
xchg
inc
in
outsl
cmc
aas
mov
int3
mov
rorb
or
pop
adc
incl
movsb
push
into
clc
adc
mov
add
xchg
mov
sbb
push
imul
mov
and
js
fwait
enter
mov
adc
mov
xorb
mov
xchg
loopne
ret
jp
mov
fistps
push
xchg
popa
ret
push
fs
add
jle
jbe
dec
cmp
cmp
and
jbe
or
and
jl
loop
enter
ds
mov
xorl
sub
lock
jmp
cmp
inc
into
stc
leave
cld
loopne
sub
stos
imul
repnz
inc
adc
aaa
or
lock
push
mov
cmp
test
subb
jnp
cmpsb
cmc
push
cmp
sub
scas
cmp
jmp
mov
mov
add
hlt
icebp
add
inc
and
and
add
call
push
lret
adc
sahf
xlat
imul
or
ds
pop
popa
scas
decb
cmpsb
shll
mov
nop
repnz
inc
rorl
filds
lcall
add
cli
std
popf
add
popf
xchg
inc
mov
aad
shr
adc
xchg
ret
in
or
xor
adc
into
fadds
out
outsb
rcrb
into
nop
andb
dec
cmc
aad
je
stos
xchg
mov
and
test
in
fiaddl
mov
popf
adc
mov
dec
mov
push
call
sub
dec
jle
scas
out
insl
mov
or
shrd
pusha
sub
sub
sbb
aaa
nop
mov
adc
es
pop
cmc
lea
je
mov
jnp
loopne
mov
jle
mov
mov
lea
dec
mov
call
aam
push
push
andl
mov
movsl
ds
fistpll
inc
mov
add
and
mov
adc
sti
in
add
popl
jns
jmp
xor
out
jp
mull
stos
cmp
cmpsb
mov
sub
pop
add
mov
gs
dec
pusha
leave
popf
fisubrs
and
xor
aad
fisttpll
adcl
mov
arpl
push
pop
dec
push
push
jle
aad
mov
jge
push
sbb
xchg
sarb
adc
iret
imul
inc
xchg
fcomps
outsb
mov
mov
sub
mov
data16
jbe
lcall
insb
ljmp
cmp
fdivrs
mov
mov
jecxz
jecxz
xchg
leave
in
pop
sub
in
dec
mov
pop
pop
or
mov
loopne
push
pop
add
jmp
mov
push
sub
dec
daa
adc
sbb
and
add
push
clc
fsts
xor
jae
pop
fsubrp
cwtl
stos
sbb
dec
pushl
add
pop
scas
jg
push
aam
push
mov
outsl
push
sbb
ret
xlat
adc
mov
pop
js
dec
cmp
and
or
xor
aam
cmp
xor
aas
mov
ja
loopne
pop
clc
call
sub
dec
push
push
loope
or
mov
push
pushf
adc
mov
stos
fiadds
xchg
into
or
pop
mov
rclb
shrb
loope
push
lods
pop
cli
lcall
xor
inc
mov
faddl
cmpsb
cmp
inc
es
aam
lods
rcll
inc
ret
test
fldt
mov
out
and
jmp
pop
inc
dec
ljmp
dec
call
int3
mov
cmp
into
mov
inc
lods
pop
je
std
mov
imul
jl
cld
inc
cmp
dec
test
dec
sbb
lock
ljmp
rcll
stc
js
mov
fldl
dec
mov
adc
pop
icebp
frstor
push
or
adc
lea
sbb
int3
push
cs
mov
in
inc
sub
sub
jle
orl
fsubrs
ljmp
stos
fidivl
dec
clc
or
ret
icebp
sbb
sarb
scas
mov
movsb
lret
decl
addl
inc
lods
fimull
xor
pop
mov
addr16
mov
cmp
gs
jne
movsb
xchg
adc
pop
popf
in
cld
inc
mov
and
push
loop
out
push
pusha
pop
gs
cmp
lods
adc
adc
push
inc
push
jl
lret
xor
sbb
fs
orb
popf
xor
outsb
dec
ret
xor
cmpb
lahf
jl
inc
mov
mov
dec
dec
cmc
mov
mov
insb
outsl
dec
and
ljmp
int
std
push
dec
outsl
dec
out
in
mov
adc
call
cmpsl
push
call
les
pop
add
call
rorb
mov
xor
shr
cli
mov
add
sbb
jno
gs
cli
pop
gs
mov
xor
push
mov
mov
in
es
enter
push
stos
jecxz
cmp
fwait
add
pop
pop
les
jle
cs
sub
daa
test
lock
scas
rolb
mov
incl
mov
pop
mov
data16
addr16
cmp
ljmp
lods
inc
sarb
pop
mov
dec
ret
jp
test
call
dec
out
and
xchg
or
sub
dec
mov
jae
mov
cmc
add
jmp
stos
add
jecxz
fcmove
push
push
rcr
inc
push
xor
mov
rcr
ja
ret
lret
clc
ljmp
movsl
mov
test
inc
cs
ret
mov
mov
pop
push
or
sbb
add
hlt
rorb
jecxz
xor
adc
inc
mov
scas
mov
mov
inc
push
daa
push
and
sub
decl
std
or
dec
xchg
loope
mov
pushf
or
jb
push
cs
cmp
pop
and
sbb
or
push
movsb
add
cmp
pop
bound
xor
or
fs
imul
hlt
cmp
mov
rolb
add
gs
stos
loopne
push
nop
and
jge
lcall
lds
ds
aam
pop
mov
aaa
push
in
stos
lock
lcall
xor
push
stos
outsl
inc
in
dec
pop
out
xor
cmpsb
and
or
xchg
sub
aaa
cmp
cwtl
sub
ljmp
cmpsl
xor
notl
push
fdivr
and
jl
in
sub
inc
paddusw
push
outsb
and
or
mov
cmpsb
mov
call
jg
aad
insb
nop
out
jbe
inc
adc
jg
or
lods
dec
cmp
call
test
jle
adc
sub
cmp
sbb
jg
mov
dec
dec
mov
insb
call
rolb
xchg
lret
test
mov
test
int
sbb
lds
push
ret
xchg
in
or
das
ret
mov
hlt
into
cmc
aaa
std
jg
dec
dec
adc
call
scas
adc
sbb
aad
lock
in
dec
xchg
mov
cmpsb
call
xchg
push
inc
mov
mov
add
jo
mov
in
clc
cltd
enter
test
insl
or
test
adc
hlt
and
scas
stc
push
push
push
shlb
mov
sbb
xchg
rorb
add
stos
iret
mov
sub
pop
leave
sub
cmp
lahf
popa
inc
cld
rorl
imul
aas
dec
mov
cmc
fisttps
dec
ja
insb
int3
sub
pop
scas
push
push
push
cs
fcoml
xchg
adc
repnz
pushf
push
mov
fs
stos
adc
incb
sbb
xchg
sbb
clc
out
xchg
add
xchg
push
push
jbe
and
lahf
mov
sbb
sub
jne
incl
sub
lock
push
les
mov
xchg
fdivrs
add
decl
mov
sub
je
sti
nop
or
lea
mov
cmpb
inc
xchg
or
sbb
jne
mov
inc
sarb
ljmp
push
sbb
pop
dec
mov
jg
imul
xchg
or
incl
lock
adc
mov
mov
dec
push
aad
push
cmp
inc
aam
ret
push
fnstenv
mov
cmp
dec
lock
mov
xor
cmp
dec
test
add
inc
das
arpl
bound
fdivrl
out
sub
inc
mov
mov
loopne
sub
ret
sbb
rorb
in
fimull
lods
pop
popl
scas
outsl
jp
and
inc
insb
rcrl
add
shlb
push
pop
mov
pop
sub
ds
jo
rcll
sarb
test
push
cmpsb
jo
frndint
sub
loopne
or
shrb
rorb
or
pop
rorl
inc
cwtl
or
pop
mov
pop
sbb
xchg
xor
iret
fistpll
push
call
cmpsl
lcall
imul
pop
hlt
adc
mov
lea
jge
mov
cmp
test
xor
in
pop
cld
xor
or
or
insb
xchg
int3
in
fisubrl
pusha
or
mov
jle
or
daa
push
mov
cli
adc
add
cmp
mov
cmp
jns
jle
cmp
or
jg
push
mov
inc
jmp
and
fidivrs
mov
fcoms
pop
mov
pop
adc
pop
scas
ljmp
add
pop
loopne
or
mov
inc
jb
xor
lret
es
iret
jp
cmp
xchg
les
sbb
mov
xchg
incl
scas
xchg
cmp
push
mov
shrb
outsb
in
push
popf
loopne
or
dec
mov
arpl
sbb
clc
fistpll
and
jnp
insb
test
push
add
and
das
cmp
scas
push
pusha
call
xor
int3
push
and
int3
mov
add
call
scas
call
or
ja
jg
jg
lods
inc
addl
or
mov
mov
xchg
fcomp
jo
cmp
mov
mov
adc
test
mov
mov
ja
test
add
int
ljmp
cmpb
sbb
jne
jle
or
in
fisttps
mov
mov
js
lods
jae
mov
push
inc
dec
nop
add
cmp
inc
push
xchg
adc
int3
clc
insb
or
outsb
rclb
ds
mov
jl
repz
int3
mov
adc
dec
fcmovnb
stc
dec
adc
xor
sub
mov
cmp
pop
dec
push
add
mov
sahf
ljmp
add
inc
out
add
std
mov
cmpsb
pop
and
dec
add
add
xor
xor
movsl
outsl
clc
decl
int3
jmp
or
cmp
cli
sbb
sub
and
fiaddl
dec
adc
out
dec
lock
daa
in
in
pusha
mov
jo
aas
rcrb
addr16
cwtl
xor
cld
cmp
inc
andb
add
jmp
mov
mov
mov
adc
jno
add
pmaxsw
aaa
adc
jge
mov
cs
test
adc
pushf
in
xchg
je
add
cmp
arpl
ljmp
aaa
shlb
push
inc
lods
jg
icebp
cmpsb
mov
popf
lret
cs
add
aad
pop
shl
ljmp
sbb
add
lret
add
lcall
add
movsb
add
or
out
push
sarb
ja
rolb
pop
out
push
shrb
cmp
mov
fnsave
repnz
aad
std
or
lret
stc
inc
push
mov
add
outsb
pusha
test
sar
idivl
fsubrs
cmpsb
xor
cmp
incl
inc
sbb
jle
divb
and
push
dec
pop
bnd
push
push
adc
out
outsb
inc
add
fcos
movsb
ja
or
or
inc
mov
sub
es
std
roll
ret
fisubl
jbe
cs
xor
mov
icebp
jae
daa
jmp
cmpb
or
lods
decl
fdivs
clc
lcall
jb
std
push
cld
imul
outsb
ja
pop
lret
add
inc
adcl
jle
das
js
cmp
xor
xlat
mov
rorb
inc
and
pop
push
fsubl
dec
mov
inc
decl
mov
add
inc
or
stos
pop
fsubs
mov
mov
sub
bndldx
inc
les
mov
mov
xor
repnz
mov
pop
dec
aam
lds
mov
clc
pop
cld
incl
ja
xchg
push
out
lret
movsl
xchg
mov
lock
dec
mov
dec
dec
add
gs
cmp
and
aad
cwtl
sbb
aad
jbe
inc
stos
mov
xchg
icebp
popa
mov
leave
out
mov
outsb
adc
call
je
sbb
or
daa
loope
cmp
mov
hlt
xchg
push
adc
mov
lcall
cmpb
xchg
cwtl
pusha
cmp
jg
cmp
outsl
cmp
iret
cmp
fsts
adcb
dec
into
pop
add
pop
pushf
icebp
ljmp
xor
cmpb
loop
mov
test
or
jmp
pop
loopne
dec
test
jbe
push
dec
into
stos
push
in
repz
gs
sbb
pop
add
push
movsb
inc
fcmovnbe
cli
decl
mov
inc
dec
fadd
cmp
or
cmp
xchg
scas
sub
sbb
inc
iret
mov
cs
les
sbb
push
xor
mov
inc
loop
dec
movl
and
data16
decl
sbb
popa
pop
xchg
movsb
movsb
aas
adcl
push
enter
mov
push
dec
lcall
pop
or
movsl
es
cld
scas
clc
scas
add
hlt
fbstp
xor
xchg
cmpsb
mov
andb
call
mov
xchg
push
and
loopne
adc
ljmp
in
jnp
test
adcl
cmp
add
dec
pop
inc
sbb
add
ja
hlt
jp
jno
pop
xchg
roll
push
fldl
adc
cmp
cs
xlat
sub
or
sahf
adc
pushf
pushl
adc
test
pushw
cs
das
rolb
mov
sarb
mov
incl
outsb
cwtl
inc
mov
pop
in
scas
cmpl
jp
or
cmpb
xchg
inc
rolb
push
jmp
xchg
gs
push
dec
inc
out
pop
sbb
and
adc
pushl
shrl
dec
sbb
rclb
jne
and
jo
lds
cmp
cld
and
clc
pop
ljmp
call
and
scas
scas
sub
and
xchg
dec
jle
xor
sbb
adc
add
dec
mov
int3
data16
dec
dec
add
pop
fadd
pop
jl
push
push
xor
and
push
aam
jbe
or
test
jge
lods
push
xor
clc
pop
imul
js
stc
and
into
push
aam
cltd
add
ficoms
sbb
sub
xchg
xor
loop
dec
filds
or
mov
scas
leave
subl
cli
incl
push
adc
fdivl
loop
insb
and
or
or
dec
pusha
ljmp
xchg
ss
mov
and
xor
daa
mov
adc
jecxz
cmpsl
outsl
fsub
pop
cld
sbb
xor
lea
pushl
cld
lds
aam
lock
cmpsb
leave
add
test
dec
cli
decl
faddl
xor
sbb
push
dec
roll
and
add
jmp
test
retw
loopne
lcall
movsb
out
add
or
mov
mov
jb
decl
pushl
push
inc
cli
xchg
bound
shll
and
and
cli
xor
cmp
dec
mov
add
add
sbb
inc
mov
mov
and
or
mov
insb
test
aam
mov
jg
fildll
pop
cwtl
sub
mov
sbb
std
cli
dec
clc
hlt
jno
rcrb
push
cwtl
mov
inc
jo
cmp
xchg
inc
xlat
loopne
test
xchg
call
fdivrl
or
mov
std
loopne
pusha
mov
decl
sahf
out
mov
jecxz
push
xchg
add
add
enter
clc
push
cmp
adc
adc
dec
and
mov
cmc
push
mov
pop
addb
cli
inc
cmp
test
sbbl
in
push
pop
sbb
stc
nop
ret
sarb
inc
xor
negb
flds
std
sub
or
pusha
mov
pop
call
mov
mov
ljmp
ds
or
icebp
push
invd
je
and
adc
mov
fiaddl
push
add
addb
mov
stos
mov
push
push
jl
jle
aam
mov
nop
data16
clc
adc
lods
fists
cmp
xchg
add
sub
sbb
rcrl
xchg
push
push
mov
or
std
push
cld
mov
add
jo
add
xor
lods
or
inc
inc
mov
adcb
aas
loop
dec
or
add
xchg
jo
mov
popf
ficomps
add
clc
jecxz
dec
push
sarb
pop
jmp
fsubrl
mov
cmp
shrb
and
dec
jmp
test
pop
and
inc
int3
movsb
bound
push
imul
xchg
hlt
xchg
adc
imul
inc
movsl
and
shll
dec
sub
test
push
shll
add
push
mov
dec
pushf
test
fnstenv
mov
es
sbb
jmp
mov
hlt
push
lds
sbb
std
mov
mov
mov
sti
add
imul
outsb
or
lcall
push
stos
arpl
stos
in
aam
add
xor
loopne
xor
mov
jle
out
repz
adcl
add
push
mov
xor
mov
xchg
lahf
mov
ja
lock
shl
mov
xor
dec
mov
pop
dec
test
cli
mov
jmp
ljmp
not
cli
add
adc
jge
repnz
jne
sbb
mov
ret
clc
lods
xchg
repnz
push
push
ss
sarb
cmp
iret
pop
lods
add
fmulp
inc
js
imul
xor
cwtl
das
mov
jo
add
decl
lock
sahf
repnz
bound
jns
fs
lds
adc
xchg
mov
and
sbb
test
and
dec
mov
or
stos
mov
ret
xor
dec
cmpsb
or
pop
add
lcall
push
cmpsl
lcall
rcrb
mov
call
int3
xor
dec
jl
fwait
push
rorb
mov
fstl
dec
cli
cvtps2pd
sbb
mov
mov
testb
fisubs
imul
les
cli
or
and
lods
push
jg
pop
mov
sarl
jecxz
es
loopne
lret
inc
pusha
arpl
loope
push
cmp
push
push
ds
lds
or
movl
pop
shlb
sub
add
movsb
sti
ds
sub
ja
pop
movb
loop
stmxcsr
leave
ds
imul
cli
mov
inc
mov
jne
xchg
mov
add
in
aaa
jecxz
mov
sbb
lods
dec
jne
xchg
cmpl
shll
push
insb
xchg
mov
jmp
aaa
sarb
push
mov
cmpsl
or
fmull
push
incb
mov
fs
in
stos
out
xor
push
aaa
imul
sub
loopne
mov
jne
enter
fwait
or
sbb
fs
outsl
cli
jl
inc
adc
decl
push
fs
cli
int3
std
lds
jge
push
aam
imul
push
sub
push
add
and
lahf
in
ds
hlt
sub
bound
and
repz
popf
outsl
or
shl
mov
mov
jns
mov
add
push
std
push
xor
insl
pop
dec
lcall
rolb
shlb
and
arpl
cmp
scas
outsb
xchg
jb
cli
es
pop
in
inc
nop
or
push
cld
shl
or
or
sarb
test
jo
push
and
fiaddl
jg
mov
inc
js
loop
or
mov
xchg
and
inc
pop
lods
fbld
in
and
sub
cli
hlt
das
sub
mov
fistl
add
and
fs
jmp
movsb
push
push
lock
push
mov
sbb
clc
ljmp
mov
jg
cmp
imul
inc
test
out
ljmp
add
xchg
cltd
insb
push
dec
cmp
in
test
sub
or
stos
xchg
mov
clc
pushf
sub
add
push
inc
rorb
pop
push
pop
stc
jl
shlb
cld
enter
incl
andb
in
sub
aaa
add
pop
out
insl
std
das
rolb
add
std
add
inc
and
shll
imul
call
cmpb
lret
cltd
dec
jecxz
inc
ljmp
insl
cld
cmp
or
mov
pop
popa
add
hlt
xchg
cmp
out
mov
data16
decl
loop
push
adc
in
aaa
adc
cwtl
mov
std
push
jmp
outsb
dec
jae
insl
les
in
sbb
out
or
mov
loop
sub
das
lea
pop
jl
nop
mov
rolb
sti
pop
rcl
xor
mov
xchg
lock
aam
lcall
dec
push
repnz
sub
je
jns
lods
mov
dec
orl
jg
inc
add
shll
jg
xor
or
ljmp
cmp
popa
aas
enter
add
cld
sub
pushf
out
scas
andb
adc
cmp
shlb
sub
pushf
or
xor
dec
sub
adc
xchg
xor
mov
add
add
fisttps
add
add
pop
jg
lea
sbb
xor
xor
cmpsb
in
sbb
sar
inc
movsl
add
insb
jecxz
sahf
int
jp
ret
addr16
add
lods
into
arpl
cmp
mov
shll
test
sbb
sub
out
lret
sub
ret
cmp
enter
jae
lcall
scas
fs
and
call
pop
cmp
xor
popf
or
imul
adcl
jle
sbb
dec
cwtl
stos
and
ljmp
mov
inc
cld
aam
mul
xor
or
inc
push
mov
call
mov
xor
cltd
mov
int
jecxz
andb
sub
gs
cwtl
xor
or
rorl
sahf
ret
sbb
jno
and
push
outsb
mov
dec
pop
add
inc
in
mov
inc
ljmp
push
pop
or
fucomp
cmp
lock
and
mov
add
mov
lcall
aas
mov
adc
xor
test
mov
mov
adc
call
aaa
pop
add
inc
popf
push
test
pushl
cmp
mov
scas
add
add
cwtl
dec
mov
sbbl
pusha
xor
cs
mov
jg
jecxz
cli
mov
dec
cmovg
add
data16
lcall
push
or
push
popa
movsb
xchg
pop
push
inc
adc
mov
in
add
xor
mov
or
mov
cmp
jmp
xchg
movsb
incl
stos
imul
xchg
or
lods
jge
dec
adc
adc
ja
hlt
push
and
das
mov
push
and
fs
test
mov
mov
gs
push
sub
shlb
inc
cli
fwait
push
add
jp
ja
repz
arpl
add
mov
divl
in
add
sbb
fistps
rolb
incl
lahf
jle
sub
add
jg
mov
xchg
pushl
push
sbb
aam
pusha
les
movsl
mov
pop
cli
add
pop
push
add
and
lods
call
in
inc
out
adc
cmpsb
jle
cmp
or
stos
push
mov
jge
pop
shlb
or
popf
add
ss
push
incl
cli
test
cmp
jb
andb
imul
add
mov
pop
fdiv
sbb
jge
popa
in
mov
sete
jle
lock
fs
adc
xor
in
rcrb
or
cmc
mov
cld
mov
and
aad
mov
add
push
js
sbb
mov
or
xchg
inc
push
or
jg
ss
xchg
arpl
es
mov
fmuls
ja
jbe
xchg
pop
push
cli
inc
fsubl
push
mov
mov
or
rcr
fdivl
mov
add
faddl
fs
std
outsl
call
cmc
test
shll
jecxz
inc
jecxz
stos
stos
mov
push
xor
push
or
icebp
cmc
xchg
jbe
xor
in
ficoml
fsubp
xchg
cld
pop
add
cmp
mov
mov
jp
loop
stos
mov
push
jp
push
je
sarb
sub
push
pop
out
ss
loope
dec
out
cmp
imul
push
popa
std
mov
or
push
sub
mov
hlt
xchg
and
ss
hlt
pusha
mov
nop
dec
les
cwtl
jl
jbe
fnstsw
jae
mov
inc
ljmp
fwait
lock
ret
pop
mov
mov
add
adc
jae
into
add
sbb
sbb
loopne
test
add
pushl
mov
push
push
mov
push
leave
xchg
or
jmp
adc
add
sub
sti
inc
jbe
adc
es
fisttpl
mov
dec
sub
dec
push
mov
and
push
mov
mov
lea
mov
lea
call
ficoms
std
aas
adc
dec
outsl
mov
out
dec
cmp
push
mov
sbb
xor
xor
add
sbb
and
dec
push
mov
fadd
adc
adc
mov
das
ss
and
xor
sub
in
pop
icebp
outsb
cmp
push
lock
pop
jo
push
cmpsb
inc
sarb
mov
pop
or
push
out
mov
mov
add
int
and
mov
imul
sub
into
jne
pop
in
movsb
lock
lods
push
mov
xchg
aam
in
loop
lcall
cs
pop
inc
stc
test
sbb
add
sub
data16
mov
ss
ret
cmp
mov
jae
jbe
pop
dec
rorb
lcall
push
or
inc
jne
mov
inc
xchg
test
or
fsubl
fsubl
push
pop
jo
xchg
xchg
cmp
bound
mov
jg
inc
cmp
jb
bound
das
icebp
pushl
xor
cmpsl
push
add
and
rclb
popf
dec
sbb
and
mov
mov
sub
ljmp
pop
or
cwtl
in
daa
out
jmp
scas
and
into
push
jmp
pushf
mov
mov
adc
jns
xchg
je
push
loope
inc
addl
sbb
mov
ret
add
mov
sbbl
or
roll
mov
sub
sub
in
rolb
inc
cmp
mov
add
lcall
sarb
mov
push
nop
lahf
ss
push
sbb
pop
xchg
fs
or
or
inc
cmp
pop
dec
jmp
pop
lods
jbe
cs
clc
add
sbb
mov
xchg
sbb
insl
sub
pop
mov
pop
and
mov
pop
adc
es
push
sub
sub
pop
xchg
loop
arpl
push
aas
imul
adcl
lods
cmp
cmp
std
sub
loop
hlt
jae
or
in
or
or
out
xchg
adc
loop
jne
push
incl
adc
shlb
inc
rcrb
or
push
mov
cmpl
mov
jno
inc
fisttps
fs
sahf
jmp
jl
daa
xchg
adc
push
lods
sub
jbe
fisubrl
xor
movsl
pop
movsb
adc
popf
dec
inc
jl
adc
out
jae
pop
outsl
out
adc
test
jge,pn
lea
adc
rcrl
jnp
icebp
es
mov
int
add
mov
jno
call
movsl
pop
push
ret
add
jge
mov
sub
out
push
outsl
fcomip
fwait
sbb
push
mov
adc
fdivl
adcl
je
or
int3
inc
push
insb
or
dec
repz
jecxz
clc
mov
or
nop
dec
xchg
sub
mov
sub
cmc
inc
or
pop
clc
or
and
push
cs
jbe
dec
push
jo
add
call
jg
sar
inc
outsb
outsb
ja
adc
or
lcall
jne
outsl
mov
shll
xchg
lods
lcall
test
icebp
lcall
add
and
hlt
add
cli
jb
loop
push
cs
push
in
arpl
add
addr16
cmp
dec
jle
ja
add
call
mov
ljmp
aad
lret
mov
roll
xchg
fwait
pusha
xchg
inc
loopne
push
pop
mov
pop
fidivrl
cmc
mov
aam
sbb
sahf
adc
push
daa
icebp
incl
xchg
dec
lret
arpl
jl
addb
loopne
xchg
cld
mov
out
aaa
iret
push
fmuls
mov
cmp
dec
adc
dec
daa
mov
add
dec
xchg
sbb
or
and
loop
dec
or
sbb
subb
stos
imul
outsl
adc
mov
stos
add
cmpb
dec
add
mov
cmp
mov
mov
mov
xor
cmp
das
loopne
mov
addl
push
decl
mov
das
mov
or
sbb
or
lock
xorb
cmp
adc
jns
fidivl
sub
lahf
mov
repz
ret
sarb
pop
adc
popl
pusha
sar
adc
adc
std
mov
or
icebp
mov
push
hlt
ja
or
inc
mov
inc
les
and
pop
ret
andb
mov
sahf
sub
cli
mov
and
insl
cli
dec
gs
test
sub
cmp
jns
sbb
popa
push
push
adc
add
push
jno
les
mov
cmp
jo
or
sarb
add
sbb
insl
clc
add
in
dec
jecxz
adc
mov
xchg
pop
sbb
test
xor
jp
dec
sahf
dec
add
adc
dec
in
imul
sub
ret
inc
jge
fmull
iret
jp
sub
fistl
add
aaa
jl
jg
insb
sar
je
inc
dec
mov
add
xor
add
xor
pop
adc
xchg
or
aaa
jle
jno
fsubp
or
xchg
fpatan
adc
and
sbb
xchg
push
cli
sub
add
mov
incl
pop
sahf
pop
cs
mov
fildll
in
inc
xchg
mov
cmp
mov
inc
and
or
pusha
mov
imul
fisubrl
fwait
mov
mov
cli
mov
int3
adc
sbb
or
xchg
scas
cld
or
pop
mov
sbb
mov
xor
sub
das
rclb
cmpsl
fidivl
pop
mov
movb
ror
push
outsb
adc
das
pusha
scas
cmp
xchg
cmpsb
bound
ret
in
cmp
movsb
mov
subb
testl
and
aam
sub
cmp
icebp
xchg
movsb
xchg
dec
xchg
add
mov
or
xchg
dec
rolb
nop
adc
roll
jecxz
mov
out
jne
mov
ficompl
cmp
pop
ret
repz
xor
pusha
jns
js
pop
dec
nop
jg
and
xor
cmpsb
inc
jo
add
push
cli
push
sar
mov
adc
shrl
push
mov
pop
addb
aas
push
ds
xchg
fildl
cmp
test
inc
xchg
xchg
mov
cmp
push
jmp
rcll
andl
popf
out
cmc
orb
aam
outsb
loopne
movsl
or
adc
and
jmp
and
push
sbb
loop
and
mov
or
or
ret
imul
sub
pop
adcb
sub
pop
mov
cli
loop
icebp
roll
or
and
call
jle
xor
mov
addr16
outsl
decl
clc
cli
push
dec
cmp
adc
lahf
dec
imul
push
fs
addr16
mov
sub
int3
fwait
xor
shrb
and
mov
arpl
xchg
mov
push
fdivl
cmp
ret
xlat
fildll
call
add
imul
sub
sar
sbb
cmp
add
xor
inc
pop
or
lret
cmpb
cs
push
ret
ljmp
add
aaa
mov
mov
sbb
mov
imul
out
push
cld
mov
bound
decb
insl
dec
add
cmp
or
dec
sub
inc
hlt
sub
call
cld
sub
jo
jge
psubb
xlat
xchg
jb
fdivp
in
cmpsb
lods
inc
pushf
cmpsb
mov
inc
push
pushl
jns
rolb
out
mov
data16
mov
cmp
xor
or
fisubs
pop
sahf
adc
aas
std
aad
inc
es
inc
sahf
es
cmpsb
test
and
cld
ja
push
fisttpll
rcrl
shll
xchg
sbb
and
and
call
rol
popa
jns
pop
cwtl
xchg
adc
add
cltd
or
dec
xchg
inc
sti
out
jl
arpl
xor
fimuls
arpl
lret
pop
adc
mov
pop
cmc
push
adc
jg
mov
jp
sti
push
add
inc
int3
inc
pop
add
jg
jg
sbb
test
les
and
add
scas
fadds
aam
jns
add
add
pop
rcrb
movl
mov
fs
add
pop
xor
jecxz
pop
adc
dec
or
cld
bound
jnp,pt
jo
decl
repz
into
fcomps
in
pop
cmp
cmp
push
xorb
push
jg,pn
mov
add
and
or
stos
push
adc
add
and
sti
jmp
mov
or
ret
jnp
sbb
stos
jo
push
mov
mov
adc
jnp
loope
mov
xchg
lea
push
inc
cmpsl
or
inc
dec
enter
outsb
lahf
jge
outsb
outsl
movsl
flds
xor
add
xor
push
mov
arpl
xchg
je
call
orl
adc
cmp
xchg
shl
jl
aaa
sub
pop
or
mov
ret
inc
or
insb
lret
cld
roll
call
sub
lock
lea
int3
cwtl
cwtl
sbb
hlt
jg
xchg
add
cld
cli
int
test
adc
dec
push
push
jb
add
mov
cli
lea
mov
ja
iret
stos
scas
sub
loopne
or
leave
pop
mov
movsl
int
mov
cli
test
jo
rcll
push
push
insl
in
and
jp
xchg
out
clc
aas
loopne
and
lods
jb
adc
out
jno
adcb
hlt
pushf
sub
adc
std
ljmp
pop
stos
mulb
mov
xchg
dec
lds
dec
jl
and
push
sub
lcall
and
pop
loope
int3
or
out
ss
or
sbb
cmpsl
test
decl
dec
xchg
insl
les
fs
pushf
xor
jl
gs
lock
std
data16
or
shr
cwtl
cli
inc
dec
sbb
jg
fcomp
addb
inc
inc
cltd
je
mov
and
cmp
and
icebp
movl
push
xchg
fidivl
lea
shrb
mov
cmp
sbb
cli
leave
push
test
pushl
test
push
outsl
adc
and
cld
movsl
push
hlt
sbb
xchg
rolb
icebp
decl
scas
dec
gs
and
inc
andb
sbb
pushf
xor
ljmp
xchg
aas
cs
xor
sub
pop
or
nop
loop
loopne
sub
call
jg
ds
bound
jge
dec
sbb
stos
lods
or
pop
call
jl
js
or
in
insl
dec
rorb
sarl
test
or
mov
aad
lock
rclb
xchg
cli
and
rcr
inc
pop
xchg
fmuls
xchg
pop
rorb
sbb
pop
dec
shlb
rolb
mov
lret
push
in
mov
sahf
mov
xchg
outsl
pop
mov
xor
out
into
or
jg
loope
sbb
dec
mov
adc
mov
push
push
xchg
clc
subl
ljmp
popl
lock
aas
pop
push
and
ret
pop
or
call
push
test
and
inc
loope
roll
fildl
outsb
jecxz
negl
xchg
ret
push
cld
insl
cs
nop
idiv
mov
cmp
incl
jmp
or
fmul
lcall
popf
add
ret
repnz
clc
or
std
fdivs
gs
sbb
aaa
or
cld
js
mov
jb
and
jb
filds
arpl
cwtl
mov
cmp
xchg
or
inc
out
dec
fdivrs
in
popa
xchg
mov
pop
add
mov
fsubs
fsubl
lcall
xor
jl
ja
je
push
mov
arpl
adc
add
xchg
sbbl
sbb
test
mov
jmp
push
sub
lret
jecxz
mov
ror
and
test
add
cmp
outsl
sub
cmp
movl
xchg
sub
push
stos
cmp
inc
sub
cli
or
out
add
enter
sbb
lock
lcall
sbb
push
jg
aas
out
sbb
sub
inc
scas
inc
das
add
out
mov
pop
enter
mov
jns
push
test
cltd
dec
jb
xchg
fwait
std
cmp
dec
jg
xchg
ja
sbb
je
add
or
cltd
gs
xchg
rorb
jmp
fwait
sbbb
add
sbb
xor
mov
jecxz
pop
mov
xor
cwtl
jge
cmp
mov
or
adc
jnp
dec
loope
add
rcrb
je
add
icebp
bound
lahf
xchg
sbb
mov
push
push
call
cmp
pop
xchg
jg
stos
mov
sbb
sub
sbb
cmp
mov
incl
jg
inc
xchg
movsb
stos
ret
cmp
mov
sbb
sub
notb
and
ret
ds
xor
pusha
sarl
cs
arpl
and
les
mov
daa
lahf
rolb
jg
cmpsl
les
movsb
push
and
and
add
leave
jle
or
push
dec
xchg
adc
pop
bound
push
loope
les
mov
mov
mov
sbb
loopne
test
and
jge
mov
inc
jmp
cld
lods
pop
lock
in
addr16
adc
or
shll
inc
xor
cmpsb
ret
sbb
repz
cli
lea
mov
inc
stc
mov
lods
sar
movsb
dec
jno
pop
xchg
arpl
imul
test
loop
pop
icebp
jg
movsb
sbbb
add
cmp
nop
add
sub
lcall
out
xchg
ss
mov
cmpb
dec
cmp
lahf
jnp
loopne
pusha
ret
mov
xchg
arpl
mov
sbbb
jge
sub
rol
lret
outsb
aaa
adc
sti
jle
shlb
out
add
and
push
cmc
or
scas
scas
mov
mov
and
pop
push
push
mov
jg
jbe
mov
mov
push
and
cmp
or
jns
call
push
adc
add
test
lea
in
lahf
aam
jbe
pop
adc
mov
or
iret
add
shrl
xor
push
dec
sbb
lock
and
popf
add
mov
and
hlt
dec
sub
test
dec
mov
add
or
std
stos
pop
idivb
mov
jmp
fdivrs
iret
hlt
jg
pop
mov
sbb
es
dec
add
call
cmp
js
mov
pop
sub
fwait
cli
fsubl
jecxz
mov
cmpb
popf
shrb
and
push
js
mov
je
popa
addb
sub
rclb
int3
jecxz
mov
imul
mov
adc
sub
mov
lock
xchg
push
ret
scas
lock
in
fsts
xchg
sar
inc
je
mov
mov
adcb
test
addl
orb
cmp
and
sbb
mov
dec
push
pop
cld
decl
dec
or
bound
ds
loop
and
mov
cmp
sub
cmp
add
outsl
sub
cwtl
fnstenv
adc
pop
push
aad
or
hlt
rorb
dec
pop
and
inc
cmpsb
sub
mov
hlt
std
aad
or
dec
mov
daa
inc
xchg
add
test
jp
movsb
addr16
add
rolb
mov
lock
sbb
imul
xchg
cmpxchg
test
xlat
sti
jne
in
xchg
data16
fisttps
ret
jns,pn
outsl
sbb
inc
sbb
clc
inc
mov
rcll
ret
sub
jle
loope
dec
push
inc
lds
cmpsb
andb
jb
cmpsb
dec
sub
jns
or
dec
mov
decl
jb
push
or
fsubs
push
in
push
mov
or
push
add
xchg
rorl
sub
das
nop
mov
push
and
in
adc
jo
int3
mov
add
movb
sub
sub
adc
xor
dec
adc
sub
icebp
xor
lea
push
enter
inc
ljmp
ffreep
mov
mov
inc
xchg
or
mov
sbb
add
and
push
ljmp
lcall
pop
lods
clc
in
stos
jp
shr
jecxz
dec
pusha
pusha
xchg
jmp
pop
inc
mov
loopne
sbb
lds
dec
clc
mov
push
sbb
push
stc
push
mov
sbb
movsl
dec
fs
push
lcall
push
pop
ja
fcomi
add
sbb
or
jg
das
or
scas
cld
arpl
hlt
mov
hlt
or
nop
cmpsl
and
push
int
jl
stos
cmp
cli
jmp
insl
jns
push
and
mov
lock
sbb
or
mov
mov
sbb
push
sub
addr16
mov
hlt
mov
add
pushf
ret
int
andl
inc
sbb
add
mov
test
jbe
cwtl
and
mov
das
jle
lahf
or
mov
arpl
mov
loope
adc
xchg
xor
push
dec
push
xchg
inc
pop
shl
std
sbb
ret
dec
lahf
mov
nop
icebp
popf
js
nop
fs
incl
insl
cwtl
add
pusha
jbe
mov
loope
fsubs
sahf
leave
stc
in
lret
inc
sub
add
dec
pop
or
cwtl
loop
mov
insl
sti
push
jg
sarl
test
push
test
fcomip
xor
data16
sbb
sbb
lock
mov
or
addl
ljmp
mov
mov
xor
into
outsb
cmp
add
push
call
aam
sbb
dec
rolb
lcall
cld
lcall
cld
jmp
pop
and
pop
mov
andb
mov
jo
mov
lcall
jbe
lahf
or
pusha
loop
repz
pop
dec
loope
inc
lods
int3
pushf
mov
jmp
push
fisttps
inc
xor
inc
bound
mov
in
inc
or
fucomp
cwtl
loopne
sbb
lret
mov
lock
mov
lock
jge
add
js
or
jmp
aam
adc
or
and
out
mov
mov
sub
lods
and
sahf
xor
xchg
adc
mov
repnz
push
and
cmp
lock
push
jle
sub
mov
jg
mov
mov
and
and
mov
xlat
jg
or
jb
pop
test
hlt
or
jno
and
cmp
out
js
in
fidivrl
fidivs
and
notl
imul
pusha
mov
clc
bound
sbb
jg
jmp
or
adcb
lock
ret
xchg
mov
or
add
subl
lcall
and
cmp
inc
jmp
push
ja
mov
insb
movsb
pop
pop
sbb
pop
add
fistl
incb
add
ja
cmp
ret
ret
mov
cmpsb
mov
orb
loopne
mov
int
dec
mov
repz
and
arpl
mov
add
push
inc
xchg
cli
or
mov
popf
xor
add
cmp
lcall
sbb
inc
add
cmp
sbb
jg
add
sar
dec
pop
cs
push
outsb
adc
das
clc
dec
decl
push
lds
or
push
push
inc
or
pusha
jle
inc
pop
and
inc
fcmovnbe
addr16
cmp
cmp
mov
and
fwait
add
ljmp
outsb
call
push
mov
test
addb
inc
stos
repz
ret
xor
push
add
jle
fsubl
sbb
lahf
mov
sbb
insl
ret
cld
jg
push
sbb
xor
repnz
push
decl
les
cmp
sbb
ret
aad
and
lock
cmp
lods
push
add
or
ljmp
test
pop
fs
jnp
dec
aad
fstl
pop
aam
ret
das
mov
jle
push
scas
out
sub
sbb
mov
mov
ret
movb
mov
loope
xchg
dec
aaa
ret
jl
aad
clc
mov
jl
sbb
fists
stos
fbld
dec
pusha
je
and
out
xor
xchg
dec
pop
jno
pop
fcmovbe
int
aad
add
pop
sub
cmpsl
cld
cmp
fsubr
mov
lock
orb
clc
push
and
lock
std
call
ss
mov
shll
je
popf
imul
mov
popa
push
rcrl
psrad
pusha
inc
lods
or
mov
pop
push
jno
mov
dec
mov
or
into
push
mov
sub
adc
xor
xchg
icebp
aam
adc
call
lret
lods
sub
mov
insb
jg
and
push
and
mov
cmp
imul
lahf
ret
imul
push
jb
mov
xlat
mov
mov
mov
cmp
mov
ret
cld
add
xchg
mov
dec
adc
ret
push
inc
and
jb
cmp
rol
push
mov
xor
dec
sahf
jmp
lods
inc
icebp
negb
sbb
loopne
sbb
cmpsb
ljmp
cli
push
cs
decl
or
mov
jle
pusha
loope
jl
push
test
push
mov
into
aad
pop
sarb
mov
sbb
mov
jg
mov
movsl
lcall
jge
das
les
xor
jg
cmp
jo
push
push
decl
or
cmpsl
fs
inc
mov
aaa
adc
ljmp
aam
sbb
jg
lock
xchg
xor
pushl
jp
das
test
xchg
and
xchg
adc
and
push
sbb
and
mov
cmp
mov
inc
push
jnp,pt
pop
jp
cli
daa
cmpsl
aaa
inc
inc
lods
mov
or
out
pop
fbld
cmpsb
fstl
sbb
cmpsl
sahf
enter
out
and
push
push
inc
stc
adc
pop
cmp
inc
pop
cs
outsb
push
cmpxchg
int
icebp
or
jg
loop
inc
lock
or
scas
mov
aas
das
mov
call
jnp
and
or
or
xor
loop
cmp
pop
inc
hlt
push
mov
jg
shrb
test
enter
pushf
jl
outsb
lock
mov
xchg
daa
xchg
xchg
movsb
dec
mov
dec
mov
push
aaa
dec
lock
adc
scas
inc
add
icebp
lcall
mov
mov
add
push
enter
in
mov
xlat
push
xor
pop
sbb
jg
ss
or
inc
popa
cmp
lea
ficomps
xor
insb
fnsave
push
loopne
jbe
inc
sbb
call
cwtl
jp
xchg
add
test
lea
bound
pop
push
push
pop
add
sub
fistl
sub
cmp
or
adcl
fwait
mov
inc
xlat
fdivr
mov
add
push
push
dec
or
orw
int3
xor
add
rolb
clc
jmp
inc
jge
or
mov
sbb
js
test
or
mov
mov
mov
std
and
mov
cmpb
in
aas
pushf
xchg
add
daa
inc
lock
push
jmp
cld
scas
shl
cmp
jo
iret
test
out
cli
and
ret
loopne
aam
pop
jmp
fbld
sbb
loop
cmp
pushf
sub
mov
mov
loope
cmpsb
decl
pop
add
mov
mov
push
pop
jg
xor
ficomps
int
negb
xchg
push
incl
add
sbb
or
test
pop
push
jae
push
push
lds
mov
pop
inc
std
pop
jno
fiaddl
iret
mov
sbb
aaa
or
inc
mov
push
jg
sbb
int3
addr16
add
nop
cmpsl
inc
scas
int
inc
clc
es
repnz
cmp
or
push
std
lahf
cmp
inc
jae
mov
or
cmp
clc
aas
inc
mov
sbb
adc
lcall
aad
cld
inc
xchg
push
adc
sbb
push
adcb
dec
push
dec
adcb
insb
or
mov
sub
adc
sbb
inc
rorb
aam
pushf
pop
add
mov
fisubs
mov
push
cmpsb
jg
dec
pop
sbb
mulb
sbb
xchg
pop
leave
mov
je
sub
call
xlat
out
ljmp
adc
das
adc
int3
imul
imul
sub
jp
es
shrb
xor
add
or
dec
or
pop
push
xchg
sbb
sub
add
js
fs
mov
out
add
test
and
call
sbb
pop
pusha
cmp
pop
jg
pop
dec
sbb
cmp
cmp
sbb
inc
sub
add
test
adc
xchg
add
ljmp
shlb
incb
daa
add
leave
sub
ret
mov
inc
pop
xor
inc
jge
pusha
in
sahf
ljmp
jbe
loopne
jnp
xchg
mov
xor
call
inc
inc
push
sbb
add
cwtl
fs
mov
sbb
adc
ret
or
mov
xor
xor
push
aas
fidivs
aad
fcomps
outsl
add
hlt
xor
jmp
mov
ja
mov
pop
adc
and
dec
pushl
loop
aam
je
pop
ret
mov
xor
js
stos
call
loope,pt
or
out
jmp
fdivrp
jle
dec
add
mov
jp
sbb
imul
xchg
xor
xchg
cmp
add
lret
pcmpgtb
fdivr
or
sbb
mov
sti
inc
rolb
xor
mov
fiadds
bnd
sub
cmp
mov
or
lods
sbb
lcall
insl
ret
mov
xchg
pop
mov
js,pt
adcb
mov
outsl
mov
in
inc
cli
xchg
loopne
cli
aas
push
movsb
xchg
iret
jg
sub
lret
outsb
into
test
cwtl
decb
push
test
mov
scas
cmp
sbb
loope
push
jb
sbb
sbb
int3
pusha
sarb
faddl
mov
add
nop
scas
ret
adc
jecxz
sbb
mov
add
mov
sub
pop
cmp
inc
jg
jo
je
push
cmp
cmp
call
xlat
cmp
inc
leave
sub
mov
int3
jmp
cmp
pop
clc
push
enter
jno
hlt
imull
nop
imul
xor
push
int3
aas
xchg
inc
add
leave
clc
sub
push
and
out
mov
adc
sarb
cli
aaa
adc
xor
jmp
mov
cmp
jg
faddl
inc
mov
push
dec
or
sti
cmpsb
add
sti
xorl
inc
cs
jno
enter
shlb
decl
popf
mov
xchg
in
hlt
push
lock
shrl
outsl
sub
lcall
dec
rcr
or
sub
std
lea
and
mov
fistps
mov
enter
enter
aad
sbb
dec
push
addr16
push
clc
incl
push
or
dec
jmp
sti
jo
add
jp
adc
in
movsl
inc
push
insb
add
adc
xchg
ss
mov
pusha
add
cld
bound
es
scas
mov
lds
leave
sbb
inc
sbb
jecxz
cltd
xor
add
adc
dec
mov
jecxz
cld
xor
add
pop
push
mov
subl
cmp
jb
cld
push
jg
push
clc
nop
js
sbb
cmpsl
nop
loope
inc
and
sbb
push
movsb
dec
adc
addps
out
push
clc
jg
mov
inc
xchg
pop
fcoml
dec
jne
xor
les
xchg
inc
andl
ljmp
repz
cld
imull
add
or
mov
aaa
cwtl
es
or
popa
mov
sti
xchg
daa
imul
repz
incl
cld
mov
lcall
fiadds
adc
jb
lret
loop
xchg
das
fdivrs
mov
xor
lret
sub
sub
sub
jle
stos
loope
cmpl
add
sub
adc
sub
xor
sub
inc
scas
adc
hlt
push
ja
cmp
adc
pushf
out
add
add
xchg
call
cli
add
loope
xlat
pushf
jmp
loope
rclb
jecxz
jno
imul
ficompl
popf
clc
nop
jmp
xor
imul
incl
ret
or
push
hlt
enter
xchg
push
sub
nop
adc
test
test
fistps
mov
push
mov
pushl
dec
std
cmp
add
shll
enter
test
loope
jnp
jl
int
cmp
aas
incl
jl
inc
adc
insb
mov
jo
sub
jecxz
out
xchg
ja
rcl
add
xchg
push
sbb
lods
add
inc
not
addr16
adc
rcl
int
cmp
add
cltd
jae
or
adc
loopne
xor
mov
add
mov
pop
or
sahf
inc
mov
loop
imul
adc
or
lcall
lret
fstps
push
pop
and
pop
aam
aam
mov
dec
and
jp
sti
fnstsw
inc
sub
xor
fists
add
xchg
shrb
and
daa
rcrl
mov
or
mov
mov
cmp
lcall
std
shll
push
or
jbe
jmp
jmp
xor
arpl
and
jecxz
mov
jbe
test
push
push
imul
xchg
mov
daa
rorl
ljmp
xchg
xor
sub
or
push
rorl
dec
bound
test
fnstenv
int
xchg
sub
sub
inc
lcall
sub
ds
xchg
jae
sbb
popa
lods
and
icebp
sub
and
mov
jns
test
inc
mov
jne
outsb
and
sbb
div
adc
pop
lods
sub
pop
lods
call
loope
adc
cli
popf
mov
stos
jg
mov
push
sbb
stc
sar
add
ret
inc
pushf
dec
lahf
pop
jle
jae
or
pushl
xchg
dec
sbb
add
mov
mov
pop
mov
arpl
sub
inc
add
jmp
icebp
outsl
add
sub
and
sbb
outsl
loopne
push
shlb
mov
call
sti
cs
adc
cmp
and
sahf
sbb
jnp
ja
fwait
dec
hlt
dec
mov
mov
fldl
mov
addr16
incl
movsb
cli
ljmp
lds
inc
sub
add
pop
shlb
or
dec
xchg
rcll
or
sub
sbb
add
shll
inc
and
shlb
mov
loopne
lcall
xor
jge
add
inc
incl
xchg
mov
add
pop
and
dec
xchg
sub
and
push
js
xor
adc
adc
xlat
fs
cmp
mov
loop
outsl
cli
mov
daa
lret
mov
adc
jle
or
cmp
mov
add
filds
mov
xchg
jns
adc
add
jb
pop
and
pushl
pop
dec
sbbb
dec
lods
inc
pop
das
rorb
aam
arpl
out
push
test
push
stos
and
loope
add
push
jo
ffreep
fists
out
push
mov
push
cli
mov
inc
sahf
dec
pop
add
add
and
sub
mov
and
jl,pn
nop
ss
or
or
xor
testb
sbb
pop
dec
pushf
push
or
sub
mov
or
adc
inc
pop
mov
sub
popa
inc
bnd
je
push
jmp
cmpsb
sahf
and
or
aaa
pop
int3
mov
push
out
mov
mov
cmp
jecxz
clc
mov
or
mov
lret
sbb
mulb
mov
cmc
incl
sbb
fs
cmp
cmp
push
sub
jg
out
fisttpll
mov
orb
jmp
inc
ret
int3
mov
xchg
jl
push
add
rclb
xchg
rcrl
fdivrs
call
insb
xchg
inc
movsb
mov
mov
add
sbb
xchg
add
push
fwait
xor
decl
test
jb
call
lods
mov
xchg
xchg
lea
mov
das
adc
mov
popa
or
add
xlat
or
mov
aad
sub
mov
jnp
xchg
adc
repnz
lds
jmp
pop
outsb
nop
pop
jecxz
lahf
mov
jo
and
daa
and
jle
sbb
pushf
xor
and
aaa
mov
or
push
mov
incl
js
mov
pushf
call
and
push
std
push
cmpsb
mov
sbb
xchg
and
std
jnp
sub
add
aad
bound
pop
mov
push
repnz
xchg
outsb
jno
adc
cld
fisttps
add
xor
pop
add
rolb
fcomp
loope
jecxz
xchg
mov
adc
xlat
push
and
push
fisubrs
stc
mov
enter
shll
mov
adc
mov
call
cld
cmp
push
push
mov
dec
mov
add
jbe
ret
gs
mov
push
mov
fcompl
loop
push
adc
and
hlt
sbb
push
lods
stos
mov
incl
testl
ds
add
add
mov
nop
adc
xor
xchg
lea
hlt
or
or
into
fildl
loope
push
or
cmpsl
stos
or
aam
fsts
pop
pop
push
jp
pop
subl
cmp
loopne
jo
outsl
inc
or
push
add
fbld
inc
mov
add
jbe
cmp
push
xchg
xchg
decl
outsb
cmp
movsl
je
loope
inc
mov
mulb
sbb
pop
or
sbb
loop
mov
or
sub
pop
xor
es
push
mov
adc
ljmp
js
lea
fs
adc
test
call
decl
cli
je
stos
add
adc
jns
fidivrs
pop
fsubl
fdivl
sub
lock
andl
push
xchg
inc
addr16
les
lods
insb
mov
fcom
jb
inc
loop
xchg
hlt
inc
inc
cmc
test
incl
mov
sahf
pop
pop
push
cld
xchg
fstps
push
bswap
xor
imul
dec
sub
pop
or
push
ja
sub
fldt
addr16
and
mov
add
mov
jmp
inc
jo
fdivs
incl
and
leave
mov
inc
adc
cs
cmc
stc
mov
int
sbb
mov
push
das
les
jle
lods
dec
stos
adc
dec
sub
fdivrl
inc
iret
cli
jae
loop
sub
or
pop
enter
cmp
sub
xchg
or
adc
push
out
mov
xchg
pop
adc
rolb
fdivr
mov
ss
push
flds
jp
jmp
inc
pop
push
rorb
lock
and
ret
push
test
test
popf
xorb
and
jmp
lea
shll
mov
cmp
mov
cmpsb
incl
loop
int3
xchg
adc
mov
rcrb
ret
rorb
mov
mov
cmp
jg
test
mov
jp
mov
push
mov
cmp
mov
sbb
imul
outsb
and
mov
and
mov
mov
mov
xor
aaa
or
pop
sub
aaa
sbb
fdivp
outsl
inc
add
cmp
std
pushf
pop
lret
add
testb
push
ljmp
aaa
jne
fcmove
or
or
or
push
xor
orb
test
push
mov
cmp
xchg
jnp
pop
cmp
popa
decb
and
sub
jg
and
ret
movsl
aas
and
sarb
or
push
cmp
int
and
or
in
or
loope
clc
dec
pop
lahf
xchg
in
das
xor
cs
inc
mov
adc
xor
shll
xchg
adc
mov
mov
les
mov
test
jg
decl
test
pop
push
adc
mull
pusha
mov
mov
inc
mov
dec
les
add
pop
jl
incl
and
cld
cmp
insb
pushf
out
clc
out
jo
push
test
jns
lods
fsts
adc
xchg
xchg
call
sbb
push
mov
push
add
mov
pop
cld
std
xor
push
add
filds
mov
pop
test
add
icebp
ss
push
jmp
add
test
in
call
or
insl
sub
mov
xchg
andb
inc
xchg
mov
outsl
push
dec
test
cmp
mov
ja
jle
jle
test
push
xchg
mov
sbb
inc
movsl
sahf
insb
cmp
mov
inc
in
js
inc
cmc
push
push
idivb
xchg
inc
mov
jno
gs
jl
addb
pop
int
and
sbb
aam
mov
scas
push
xor
mov
ret
push
add
inc
push
adc
movsb
fadds
adc
loop
decb
push
and
lahf
mov
pop
push
pop
aam
push
mov
sbb
sbb
cmp
lret
scas
jno
inc
test
subl
pop
sub
xor
gs
scas
call
xor
decb
out
ds
sbb
cli
int
sahf
jle
pop
dec
call
or
adc
gs
mov
ss
sarb
cs
dec
dec
sub
mov
and
int
xorb
adc
mov
sbb
jo
out
adc
scas
fcomip
xlat
cmp
mov
sub
negl
roll
jl
testb
fcomps
add
call
or
mov
dec
into
sub
adcl
sub
jnp
fnstenv
es
mov
ficoms
pop
pushf
out
mov
or
aam
addr16
pushf
jo
insl
subl
add
push
gs
decl
lock
fs
mov
push
loop
xor
pop
xor
lds
lahf
pop
cmc
decl
push
jmp
in
rclb
loopne
mov
jns
clc
das
clc
add
add
outsl
cld
mov
xor
imul
add
inc
add
cmp
mov
jg
add
js
test
inc
in
mov
rcrl
popa
xor
lcall
xor
add
push
out
inc
popa
repz
call
jecxz
aaa
inc
hlt
fisubl
mov
mov
cmc
jns
sub
ljmp
test
push
out
pop
push
popf
lock
mov
in
cwtl
sbb
call
in
das
mov
pop
jle
push
pusha
xorb
push
xlat
pop
rorb
mov
ficompl
aas
les
repnz
scas
cmp
add
incl
adc
cmpsb
add
scas
dec
sbb
test
imul
xchg
inc
and
js
dec
adc
adc
mov
out
and
clc
gs
mov
pop
inc
movsb
or
xor
sbb
pop
aam
or
js
aaa
adc
outsb
pop
int
rcrl
loop
in
mov
cwtl
or
mov
adc
jg
pop
dec
sub
dec
nop
sub
cmp
jmp
cmp
es
mov
call
sbb
outsb
or
xor
pop
pusha
jmp
je
mov
ret
pop
mov
cltd
jbe
insb
sbbl
xchg
push
pushl
or
jo
cmpsl
mov
xchg
xor
adc
ret
nop
ja
push
mov
xchg
cmp
lret
mov
adc
inc
inc
out
movsb
movsl
push
inc
sti
out
clc
jge
out
mov
or
inc
add
mov
jmp
sub
mov
pushf
or
loop
stos
sbb
xchg
hlt
adc
jmp
inc
cmp
mov
shl
clc
mov
push
mov
and
pop
mov
and
call
shll
mov
xchg
jge
stos
pusha
cmp
mov
cmp
inc
clc
lahf
push
test
arpl
push
aam
ds
sbb
push
int3
lods
hlt
ffree
pushl
pop
testb
bound
into
mov
xor
loopne
mov
dec
out
push
in
or
mov
dec
roll
loopne
aad
dec
xchg
nop
push
pop
mov
sbb
xchg
jo
and
and
add
cmpsb
rcl
mov
popf
inc
scas
inc
and
aam
mov
faddl
outsl
insb
shlb
test
mov
aam
push
popf
and
pcmpgtw
data16
stc
xchg
jmp
sub
sub
or
push
jb
sbb
mov
cld
clc
adc
subb
jne
and
rcll
inc
xor
iret
loop
push
ret
fwait
movsb
inc
scas
cs
fsubs
in
nop
dec
pop
sti
les
inc
call
js
gs
incl
popa
add
loop
addl
or
aas
push
adc
and
test
pop
and
inc
test
and
mov
loopne
cmpb
mov
inc
sahf
push
outsb
lods
lret
push
fld
outsl
loope
adc
ficoml
std
inc
sub
or
sub
ss
dec
mov
mov
outsl
add
jo
ljmp
idiv
ja
clc
cmp
or
push
add
mov
or
or
add
mov
ljmp
insb
addl
and
subl
pop
shll
adcl
clc
sti
bound
loopne
cmp
fs
xor
adc
add
cmp
scas
jae
sub
outsl
clc
fwait
cmp
or
adc
jbe
pop
ret
scas
mov
mov
movsb
leave
add
cmp
xlat
jl
or
fsubp
pop
jbe
mov
les
xchg
mov
std
jg
sub
ret
inc
gs
ljmp
add
lcall
pop
mov
inc
xchg
orl
or
lea
inc
mov
sbb
add
mov
fildll
adc
xchg
shrb
mov
jmp
lcall
pop
inc
jmp
lock
sbb
ret
cmp
sti
out
adc
mov
nop
es
int
mov
cmp
sti
jb
sbb
test
aas
sub
rcl
and
test
inc
scas
adc
and
inc
enter
mov
mov
mov
mov
add
cmpl
mov
mov
mov
ret
mov
jne
stos
ret
jle
cmp
loop
cli
mov
or
sahf
push
adc
adc
js
cmp
outsb
decl
ljmp
pusha
out
xor
cltd
leave
mov
xchg
cli
jle
pop
out
hlt
inc
mov
je
or
aas
idiv
xchg
mov
adc
loope
dec
adc
in
scas
in
xor
push
int3
mov
sbb
lds
iret
or
sar
fisttps
or
dec
test
cli
mov
mov
adcb
mov
fcoml
sbb
sub
test
inc
cwtl
cmp
nop
daa
mov
mov
clc
mov
addr16
test
mov
or
out
nop
bound
xlat
and
mov
sbb
adc
repnz
or
ret
in
push
sti
sub
imul
daa
lcall
ljmp
inc
ja
test
xchg
add
sbb
and
push
nop
aam
lcall
adc
lods
shlb
in
push
in
movd
hlt
pusha
incl
scas
pop
shlb
hlt
mov
nop
mov
fsubl
xor
cwtl
pop
sub
ret
ljmp
xchg
lretw
mov
mov
inc
add
or
mov
push
mov
test
lcall
and
mov
into
cmc
xchg
adc
jne
pop
mov
sub
shrb
add
jnp
shrb
xor
and
dec
pusha
xor
or
pop
loop
mov
add
jecxz
sub
dec
fldt
popa
das
mov
int
pop
call
outsl
jmp
pop
subl
jp
or
jb
xor
loop
fisttpl
adc
scas
cmp
pop
or
add
decl
cmp
mov
or
dec
mov
lods
add
inc
nop
lods
mov
call
ss
cmp
or
loop
and
frstor
and
mov
cmp
jno
xchg
into
mov
nop
xorb
int3
aaa
add
jbe
jg
in
push
scas
orl
stos
mov
sbb
gs
add
lahf
out
movsb
sub
or
mov
inc
cmpb
inc
jmp
inc
cmc
jle
push
xor
mov
rcr
popf
jnp
mov
jp
or
dec
push
jo
pop
lahf
xchg
clc
inc
mulb
mov
cs
jl
push
push
push
out
jb
xchg
dec
loope
dec
shl
fdivs
jg
inc
xlat
je
push
movsl
leave
lret
dec
std
cmp
push
fmul
stc
push
fidivrl
or
insb
ret
test
push
push
mov
and
outsl
fisttps
mov
sbb
addl
subb
or
sub
cmc
movsb
cltd
mov
jo
push
sbb
cmp
jb
les
or
pop
aad
cmp
mov
dec
adc
loop
pop
push
imul
imul
out
nop
fbld
or
sub
lock
add
push
inc
popa
push
ret
mov
loop
vshufps
lock
ljmp
jns
or
les
mov
push
mov
inc
push
mov
inc
pop
icebp
mov
push
add
jl
add
bound
ret
ret
mov
mulb
arpl
inc
cmpb
clc
ja
lea
pop
sbb
data16
lea
lahf
xchg
mov
hlt
out
daa
repnz
aaa
dec
pop
mov
mov
or
mov
cli
int
cli
aaa
hlt
mov
not
sbb
insb
xchg
loopne
clc
jmp
data16
sub
icebp
inc
dec
or
cltd
arpl
mov
xor
jge
orl
rol
push
inc
sub
repnz
mov
hlt
scas
ret
lar
repz
fisubl
adc
js
ds
sbbl
inc
out
cmp
lret
inc
pop
clc
addl
add
adc
and
push
mov
mov
out
je
jge
add
lods
testl
sub
xor
push
xor
sub
incl
and
cmp
push
adc
xor
std
mov
sbb
mov
fistl
aas
jo
shll
popf
mov
or
dec
out
jmp
cld
and
xchg
mov
test
lds
testl
outsl
pusha
lock
mov
cli
jne
adc
xchg
jp
pop
scas
gs
and
sub
sbb
push
jg
dec
and
mov
lahf
cmp
or
pop
mov
lds
add
mov
sbb
xor
mov
xor
nop
es
nop
mov
or
push
ficoml
cmp
out
mov
cld
pop
push
mov
jp
lds
push
cs
lret
aam
add
pop
stos
fadds
xchg
sub
cmp
xor
and
cmp
in
sbb
or
mov
mov
add
fldt
sarb
ficomps
push
cs
mov
mov
cmc
push
inc
in
inc
jl
jne
dec
imul
fiaddl
mov
mov
insb
xchg
icebp
jl
inc
push
call
ljmp
and
loopne
sahf
lods
fidivrs
cli
cld
xchg
mov
cld
jmp
xchg
adc
stos
aam
mov
or
cmpsb
push
addb
pop
call
rorb
jmp
shrl
fwait
sbb
dec
sub
pop
inc
aad
test
xor
stos
mov
and
ljmp
push
mov
inc
push
icebp
sub
js
and
mov
enter
adc
das
adc
jmp
pop
or
jmp
push
xor
clc
hlt
test
incl
stos
inc
add
mov
les
mov
sub
hlt
ja
sub
sbb
adc
arpl
pop
ds
in
icebp
pop
aaa
scas
cmp
pop
jo
push
xor
test
clc
mov
bound
mov
jo
dec
nop
xor
loop
outsl
or
adc
cmc
in
adc
xorl
mov
decb
sub
cmp
add
lcall
jno
add
and
sbb
jecxz
hlt
and
test
popf
aam
mov
and
push
outsl
xor
jmp
or
lock
mov
ds
or
insl
and
cmp
xor
aaa
sbb
add
outsb
incl
cld
jle,pt
outsl
inc
cld
mov
jo
and
add
cmp
es
out
and
into
dec
scas
cli
sub
stos
nop
pop
stos
or
or
divb
cld
mov
mov
nop
push
nop
xor
aas
push
mov
lock
clc
popa
or
xchg
sbb
imul
xor
test
dec
mov
dec
jb
lock
push
push
adc
push
or
jp
xchg
loop
sub
nop
xchg
filds
add
jecxz
test
mov
add
sub
inc
cs
ret
mov
add
jle
fs
clc
in
pop
pop
and
push
mov
orl
sti
aaa
dec
push
daa
clc
in
pop
sahf
leave
push
mov
dec
outsl
or
mov
mov
add
mov
mov
jl
mov
inc
in
out
roll
pop
adc
bound
lcall
mov
mov
lahf
sbb
test
jno
pop
or
add
mov
mov
and
mov
pop
xchg
cmc
cmp
test
decl
insb
scas
aaa
pusha
and
sbb
int3
sub
sub
out
add
mov
inc
dec
mov
ljmp
sbb
nopl
xor
scas
xchg
jno
add
outsl
clc
cltd
mov
mov
iret
leave
addb
bound
int
test
mov
loop
push
mov
sub
sub
in
adc
sti
mov
mov
iret
add
adc
pushl
insl
arpl
loope
pop
cmp
xchg
pop
std
dec
std
xchg
mov
dec
daa
inc
push
xor
int
mov
mov
dec
xchg
stos
jnp
loop
mov
cmp
cld
mov
add
shll
jl
mov
mov
and
lods
and
jp
dec
sub
das
inc
andl
dec
into
jle
scas
jg
sbb
clc
add
and
orl
and
cmp
push
adc
push
mov
lds
push
sbb
lock
mov
sbb
pusha
add
cmpsl
rcr
or
mov
add
add
and
inc
sarl
lock
push
push
adc
repnz
add
inc
cli
repnz
imul
push
pop
mov
mov
addb
inc
into
mov
add
ljmp
push
std
ficompl
test
mov
push
mov
adc
xchg
daa
and
add
in
push
arpl
shrl
and
fs
cmp
adc
xor
sbb
jne
ss
pop
or
xor
sar
incl
xor
mov
fs
mov
loop
pop
loop
xor
fstps
lret
mov
and
decb
lret
push
jno
mov
inc
pop
cmpsb
stos
or
shl
fbstp
xorl
jmp
xchg
xor
popa
dec
add
lret
not
aaa
push
movsl
pop
pop
andb
test
ds
xorl
jle
mov
push
in
decl
cmp
aaa
cwtl
xchg
hlt
inc
and
lds
dec
test
mov
mov
movsb
mov
jbe
lock
lock
push
sahf
inc
call
loopne
incb
aaa
mov
pop
mov
clc
scas
test
dec
xor
xchg
push
dec
cmp
xchg
or
push
fwait
sub
cld
mov
or
and
pop
aam
fistpll
cmpb
bound
pop
add
sub
mov
jecxz
pop
fisttpll
movsb
push
add
add
push
pop
mov
outsl
xchg
adc
fildl
js
popa
push
inc
or
les
loop
add
js
test
push
js
mov
and
or
xchg
sub
jmp
je
shl
or
dec
enter
cltd
clc
lds
and
pop
jbe
jne
aas
aam
mov
push
mov
in
fldt
mov
outsb
inc
add
shr
and
insb
adc
cmp
mov
or
or
push
mov
or
xor
lret
mov
lret
les
sub
push
sarl
cld
pop
xor
aam
sub
std
decl
ljmp
dec
test
mov
push
add
lret
mov
lea
jns
jl
inc
sbb
and
ds
shlb
dec
js
and
jge
dec
call
mov
stc
or
out
push
sbb
sbb
ljmp
jge
add
fistl
pop
or
sub
mov
xchg
loope
das
fidivrs
xor
lahf
enter
in
nop
push
fs
cmc
fdivs
stos
test
test
cmpsb
or
loop
cmpsb
mov
cmp
push
and
fwait
jp
xlat
inc
ret
nop
cli
fldpi
mov
mov
incl
sub
cld
and
fists
sbb
push
orb
add
rclb
inc
pop
push
lahf
aam
mov
decl
inc
lret
push
sbb
sbb
adc
ss
mov
add
jmp
xchg
test
aas
or
aaa
cmp
in
lret
cwtl
loopne
jge
loope
pop
mov
rorl
rcl
pop
pop
nop
push
stos
add
mov
aam
movsb
loop
leave
sti
jmp
and
fstpl
imul
mov
and
rcrl
cmp
fists
add
movsb
loope
sbb
jge
gs
leave
mov
mov
mov
clc
mov
rorb
std
or
cmp
mov
sbbb
pop
jge
and
dec
push
lods
incb
dec
sub
sub
cmp
imul
and
mov
inc
push
mov
dec
mov
js
adcb
adc
int
hlt
push
mov
std
stos
or
add
mov
subl
mov
outsb
sbb
sbb
xchg
jmp
lret
repz
negl
sub
adc
dec
jns
loop
adcb
pop
lock
sahf
lods
fimuls
adcb
cmp
mov
in
js
push
push
loope
xor
call
adc
dec
fcomps
sahf
ljmp
orps
enter
leave
fdivl
pop
loop
sub
loopne
loop
dec
dec
inc
stc
outsl
xchg
jne
negl
inc
sbb
xor
idivl
mov
sub
ret
pop
fisttps
cli
pop
icebp
rorb
loopne
cmc
ljmp
arpl
loop
xchg
imul
outsl
mov
mov
pop
dec
or
jg
mov
pop
in
data16
lcall
or
xor
loope
lea
rclb
jl
pop
clc
sub
lcall
fcmovu
lock
cs
dec
mov
jl
shll
popf
pop
fildl
rorb
mov
out
cmpsl
adc
cmpsl
jg
mov
daa
test
adc
pop
mov
in
push
mov
outsl
jo
lock
loop
xchg
mov
insl
decl
test
xor
add
or
jmp
les
push
cltd
or
adc
push
outsb
mov
push
push
sub
adcb
clc
push
or
inc
inc
insb
iret
mov
xchg
mov
xlat
and
lret
cmp
or
lea
lods
sbb
inc
dec
mov
ja
ret
inc
stos
inc
sahf
and
jbe
dec
pop
jmp
mov
aam
mov
pushl
add
cmp
mov
mov
cltd
and
mov
clc
lcall
add
mov
mov
daa
test
mov
sub
cmc
and
imul
cmp
jl
mov
outsl
mov
push
mov
push
sbb
xchg
lock
out
and
push
nop
jle
addr16
mov
test
adc
dec
add
sbb
adc
add
mov
dec
mov
sub
jecxz
inc
outsb
fiadds
or
shrl
push
out
inc
mov
xchg
add
iret
add
stc
adc
testb
jmp
pop
bound
or
xchg
sub
cmp
mov
outsl
pop
test
xor
adc
inc
mov
sub
sbb
das
mov
mov
cld
ljmp
decb
mov
mov
test
iret
roll
xor
outsl
clc
filds
je
push
xor
or
shlb
xchg
mov
lea
lods
push
mov
inc
add
sbb
sbb
push
gs
cmp
fdivs
xor
pop
mov
pusha
and
iret
mov
xor
ljmp
mov
js
or
jne
xchg
sbb
jne
movsl
test
push
cmpl
pop
push
pushf
daa
mov
push
lea
push
push
add
mov
faddl
stos
jg
rcrb
and
cmp
pop
and
or
shrl
push
addb
call
add
mov
jg
idivb
inc
leave
xchg
or
xchg
ljmp
pop
inc
push
xchg
cs
and
pusha
push
sub
fidivrs
aaa
jo
pop
andb
ret
add
add
jp
es
fdivrs
decl
mov
mov
inc
mov
adc
or
fwait
inc
add
inc
sub
aam
add
fdivs
mov
bound
out
bound
in
clc
decl
pusha
les
xor
pop
ss
add
int
push
or
mov
cld
cmp
fcomi
pop
adc
adc
dec
pusha
repz
add
ret
xchg
cmpsl
mov
lods
test
ljmp
jecxz
xchg
loopne
rclb
inc
xchg
in
cmp
mov
notl
sub
shrb
adc
ljmp
jo
subb
pop
push
inc
icebp
pop
js
in
mov
cli
std
loope
dec
in
and
decl
shlb
sub
mov
stos
test
fs
scas
lea
es
out
mov
test
push
mov
idivb
mov
imul
add
mov
dec
or
jecxz
lods
dec
scas
out
add
inc
pop
mov
adc
cmpsl
aaa
repz
jg
jbe
dec
mov
add
and
adc
jne
rcr
imul
js
sbb
add
es
cmp
shrb
test
xlat
or
mov
mov
push
mov
xchg
dec
mov
add
stc
sub
dec
sbb
clc
mov
xlat
or
cmp
lcall
and
iret
pop
adc
jmp
inc
call
pop
pop
inc
or
fstpt
mov
jle
jne
insb
jns
negl
jle
lock
popa
sbb
cmp
mov
push
add
cmc
iret
cli
lahf
mov
push
push
adc
inc
mov
adcb
jbe
shlb
fs
std
mov
pop
add
stos
daa
mov
pop
push
or
lods
push
pusha
inc
dec
or
xchg
dec
faddl
xlat
mov
cmp
add
mov
fmuls
movsl
add
and
ja
jbe
idiv
xchg
insb
stos
rorb
mov
into
adc
cmpsb
ret
or
dec
icebp
enter
push
pushf
inc
js
xor
or
xchg
inc
sub
mov
cmove
cmpl
rorb
jne
xor
cs
cs
call
sub
push
insb
loope
lds
mov
enter
add
cwtl
shr
xor
jbe
addr16
pop
sbb
sub
clc
sub
repz
push
int3
xor
fwait
xchg
sbb
xchg
jb
and
xchg
hlt
mov
pop
rol
ss
pushf
icebp
mov
jle
daa
dec
add
outsl
pop
ret
lcall
and
xor
cmp
aad
and
xor
fbld
rep
das
stc
scas
sub
shr
cmp
lods
pop
ds
jae
jmp
mov
enter
pop
inc
mov
cli
pop
cmp
xchg
test
fwait
mov
push
pop
js
dec
into
push
pop
push
outsl
ret
sbb
adc
push
mov
mov
lods
mov
jmp
js
shrl
jmp
cmp
in
inc
cmp
leave
idivb
shll
insb
imul
ljmp
jmp
in
leave
and
in
mov
dec
add
pusha
rolb
in
loopne
sbb
lock
sbb
lds
dec
rorb
push
hlt
outsb
fdivr
jg
out
mov
xchg
or
imul
sarb
hlt
cmpsl
fwait
sub
xchg
and
pop
aad
loop
mov
scas
mov
inc
or
push
cli
jecxz
in
ja
cld
cmp
adc
sub
mov
dec
pusha
jmp
decl
mov
mov
add
aas
repz
xchg
pop
push
fsubs
inc
add
hlt
mov
xchg
cwtl
jle
insl
and
sbb
mov
add
clc
iret
addb
xchg
inc
out
insb
fst
rclb
ss
sti
fbstp
pop
add
jbe
pop
iret
sbb
iret
idivb
push
clc
insl
dec
xchg
roll
sub
add
mov
gs
cmp
jbe
or
pop
mov
aad
sub
lret
jo
hlt
imul
scas
mov
in
mov
jbe
loope
stos
repz
pusha
mov
jno
iret
and
sub
ret
adc
inc
push
mov
or
and
dec
icebp
mov
xchg
xchg
cld
incb
cwtl
xchg
std
xor
loop
xchg
int
and
push
ljmp
inc
sti
dec
test
mov
popa
or
pop
mov
std
fiaddl
or
lea
hlt
pop
roll
cmp
in
sbbb
imul
dec
sbb
push
neg
cmc
adc
sbb
or
test
std
jnp
jnp
cmc
sub
orl
outsl
mov
lods
inc
fs
inc
push
int3
js
add
cli
cmp
push
add
les
in
sub
dec
scas
and
mov
cmp
xor
in
cmp
dec
call
clc
sarl
repnz
das
aas
push
dec
insb
xor
xor
dec
mov
push
mov
push
push
les
aas
sbb
icebp
fmul
leave
test
popf
push
mov
sbb
add
cwtl
cmp
sahf
cmp
mov
lods
insl
fdivs
jbe
in
inc
cwtl
and
jle
mov
sub
aad
lock
bound
ret
test
push
jbe
pop
fisttps
mov
popf
xchg
add
xor
jecxz
jg
movsb
ret
inc
sahf
xchg
cmpsb
lret
xchg
dec
fsubrs
cli
cmp
sub
jg
lock
dec
and
pop
inc
cli
lea
pop
outsb
clc
subb
mov
fldcw
sub
test
dec
xor
add
pop
aad
pop
dec
decl
ljmp
cltd
push
pusha
shlb
cmpsl
mov
jmp
in
std
pushl
scas
fs
cmpsl
xchg
call
imul
pop
movl
nop
mov
dec
cmp
rcrb
fstpl
or
adc
rolb
mov
ljmp
clc
jg
sbb
movsb
hlt
repz
sarb
test
pop
sbb
or
mov
mov
and
adc
pushl
push
or
or
fs
nop
jecxz
cmp
sub
aad
mov
pop
mov
push
inc
movsl
rclb
stc
add
psrad
add
pop
subl
xchg
cmp
cltd
cltd
push
lods
pusha
add
pop
push
add
mov
movsb
and
out
clc
ficompl
pop
imul
lcall
jg
mov
jnp
loopne
ret
mov
movsb
cwtl
pop
mov
rcll
ret
jecxz
cli
cmpsb
ja
insb
inc
dec
out
cmp
mov
push
sbb
pop
or
sbb
hlt
inc
shl
ds
cmp
divb
aas
cmp
sarb
out
lods
int
add
mov
push
sbb
fdivrp
lock
jae
push
sub
ljmp
xchg
js
pusha
mov
insl
sbb
push
or
and
or
inc
mov
fildll
mov
inc
mov
xchg
pop
inc
negl
or
fs
or
inc
ljmp
and
xchg
repz
loopne
out
das
lods
sbb
add
sub
jg
ss
negl
add
jae
enter
add
dec
mov
xor
lods
push
push
mov
or
add
adc
mov
lock
adc
mov
adc
dec
mov
lcall
insl
inc
jmp
outsl
mov
je
ja
cmc
inc
pop
mov
test
cmp
cli
jmp
popa
xchg
push
arpl
mov
aaa
nop
inc
insl
stos
lret
adc
test
pushl
movsb
mov
pushf
dec
mov
test
push
iret
push
popf
jnp
loope
lods
sub
jb
cmp
fdivl
imul
subb
lods
incl
adcb
rcrl
mov
int
cltd
fiaddl
add
into
pop
cmc
gs
ret
jnp
std
stos
inc
add
add
mov
inc
and
in
adc
idivb
mov
fs
fmuls
add
mov
or
or
inc
sbb
dec
or
cmp
cwtl
inc
fdivl
loope
ret
mov
insl
push
inc
ljmp
incl
jp
ficompl
or
pusha
shrb
push
rorl
push
add
and
cmc
mov
pop
add
dec
mov
lahf
sbb
ljmp
sbb
ja
inc
imulb
orb
stos
lock
dec
int
xchg
mov
in
mov
decl
cmpsl
out
jbe
sub
stos
cmpsb
inc
pop
xor
fmuls
mov
cmp
push
lahf
add
sub
sub
xor
dec
cmp
lret
sbb
pop
movsb
cld
inc
pop
pop
mov
pop
push
mov
and
cmp
testb
push
subl
push
pop
jno
or
clc
popl
ror
xor
push
mov
adc
push
inc
sbb
pop
stos
inc
inc
call
inc
jnp
out
lods
adc
xchg
out
jo
add
and
and
loop
fwait
gs
fsubs
and
ljmp
dec
inc
cmp
nop
or
inc
dec
mov
cmpsb
xchg
push
inc
push
pusha
jg
dec
aaa
sbbb
and
in
add
xor
jp
dec
mov
popa
mov
out
adc
pop
ljmp
shr
dec
and
mov
stos
fwait
mov
add
outsl
sub
add
movsl
lds
and
sbb
out
fcomps
nop
ret
pop
dec
mov
dec
testb
aad
mov
push
leave
sub
mov
cmp
pop
lock
fisubrs
testl
pop
push
add
add
pop
and
mov
mov
xchg
mov
sub
int
lock
jle
lcall
xor
jmp
add
adc
mov
mov
mov
inc
popf
adc
sbb
sbb
jmp
dec
sbb
scas
es
outsb
arpl
dec
loopne
pop
in
sbb
insl
push
into
add
jecxz
lahf
ljmp
and
inc
xchg
hlt
jp
and
xchg
and
xlat
inc
inc
mov
add
add
jg
test
push
adc
pusha
pushl
push
or
mov
xlat
std
jae
fldenv
mov
jge
sbb
mov
ficoml
xchg
xor
mov
int
dec
rcll
cmp
stc
jle
mov
data16
push
leave
pop
fdivs
and
jmp
jg
push
pop
push
push
es
int
cmpsl
ss
lret
data16
outsb
xchg
test
in
scas
je
push
test
shlb
xchg
cli
stos
inc
push
mov
fcomps
ss
cwtl
js
aaa
int3
and
xchg
mov
adc
clc
jg
out
shlb
push
fsubr
test
pop
sbb
enter
adc
sbb
push
cmp
iret
mov
jp
mov
or
mov
mov
fcompl
mov
push
out
adc
mov
jbe
clc
aad
jb
push
fsubrs
jbe
jmp
cmovns
ficoms
shl
and
inc
xchg
lcall
xor
addr16
popa
sysenter
sbb
loop
outsb
mov
add
mov
add
hlt
fcomps
jmp
incl
in
cmp
scas
xor
ljmp
or
stos
push
inc
jle
sahf
in
add
jo
fiaddl
mov
loopne
mov
mov
add
xorb
inc
cmp
lea
xor
ss
mov
add
dec
add
sbb
or
push
enter
hlt
lods
push
or
xchg
xchg
xor
jae
data16
or
and
clc
and
cld
js
jmp
insb
test
or
cli
outsl
mov
cmp
and
mov
mov
fwait
shr
push
mov
xchg
loopne
push
clc
add
mov
lret
iret
arpl
xchg
clc
out
jle
push
lea
adc
inc
jp
sarb
jl
lods
aaa
dec
clc
das
in
adc
popa
mov
xchg
or
int3
pop
call
mov
inc
adc
jl
pop
adc
sub
in
pop
jns
cmpsb
js
inc
outsb
je
add
push
dec
insb
fcomip
sub
ret
adc
pop
push
mov
nop
sub
cli
scas
fcoml
pop
add
adc
mov
push
idiv
addl
in
fcom
mov
ja
aaa
arpl
enter
push
adc
or
dec
rcr
sub
xchg
or
cld
in
test
push
mov
push
cwtl
lret
xchg
addr16
add
push
sub
aaa
popa
popf
insl
mov
sbb
les
add
test
xor
call
xor
incb
and
jns
mov
repz
adc
imul
sahf
lods
pop
ficomps
cmp
outsb
xor
and
inc
push
jp
mov
call
pop
xchg
repnz
lock
jg
mov
sbb
mov
std
add
xor
dec
lds
js
aas
and
sub
cld
outsb
add
add
sti
in
sbb
outsb
dec
jno
lds
jmp
test
push
pop
jg
jns
orb
mov
lcall
mov
push
or
mov
or
mov
loopne
popa
shr
sub
xor
sti
mov
add
mov
lahf
ret
mov
cmp
inc
nop
test
scas
mov
icebp
test
mov
in
jg
lea
out
pusha
xchg
sbb
lret
jbe
int3
jbe
es
dec
aaa
pop
or
call
sbb
adc
out
dec
repz
push
sar
das
pushf
test
inc
fstl
sub
jae
decl
mov
sarb
lds
add
sbb
dec
cmp
mov
sub
jnp
sbb
into
mov
pop
je
fs
sar
subb
stc
or
inc
mov
jl
shll
adc
xor
cltd
push
inc
fdivrs
jnp
mov
add
adc
sbb
ss
pushl
mov
hlt
or
in
lcall
jle
pushl
jg
std
adc
jb
mov
jne
data16
fcomp
sub
pop
out
and
adc
xchg
push
andl
mov
and
lret
cli
lea
adc
and
outsl
dec
and
out
test
imul
fwait
mov
dec
and
adc
imul
outsb
clc
inc
pavgw
imul
adc
into
inc
mov
xor
stc
sub
das
and
push
repnz
mov
adc
sbb
or
hlt
mov
mov
mov
cld
inc
std
lods
jmp
and
into
mov
inc
dec
clc
pop
add
stos
xchg
ss
lock
add
std
push
or
mov
incl
mov
inc
mov
adc
addr16
jge
mov
mov
hlt
jge
adc
sbb
push
call
shlb
enter
inc
xor
call
fimull
shll
dec
mov
inc
adc
and
mov
ret
pusha
movsb
jg
and
pop
push
add
pop
sub
popf
add
push
dec
sbb
inc
subb
lret
fs
jmp
das
stos
dec
data16
pop
or
and
ss
pop
jo
or
or
data16
xchg
pop
int
push
jp
shlb
xchg
adc
mov
push
pop
mov
jno
and
inc
adcb
ds
lea
mov
cmovnp
ret
pushl
mov
inc
rorl
inc
cmpsb
nop
mov
jp
out
push
mov
or
cmc
clc
push
pop
lret
insb
xor
xor
ja
mov
or
dec
les
enter
lods
push
or
negl
lcall
sub
sbb
rolb
sub
filds
outsb
push
in
movsl
inc
test
or
and
cli
push
push
mov
push
lea
pushf
push
rol
jg
xor
imul
pop
loop
fildll
loop
jnp
cmc
or
rclb
xor
int
mov
inc
sub
enter
loope
test
inc
push
movl
in
add
cwtl
movsb
aaa
mov
sbb
jge
scas
clc
dec
jo
cmp
hlt
adc
push
rclb
inc
shrb
and
add
and
jmp
push
js
aaa
scas
clc
test
cmpl
or
cmpb
sub
cmpsb
sbb
cs
push
pop
ja
fistpl
pop
loopne
jae
inc
xchg
add
fmuls
faddl
and
xchg
insl
cmp
pop
and
repz
cltd
arpl
adc
jecxz
xor
and
adc
scas
es
movsl
aam
dec
sub
mov
faddl
pop
cmpsb
or
push
xor
xor
ljmp
daa
repz
bound
inc
xor
ja,pn
mov
pusha
scas
ljmp
mov
rcrb
mov
test
popf
sti
clc
sbb
sbbb
xchg
clc
mov
mov
daa
andb
incb
mov
imul
pusha
cmpb
mov
decl
push
or
push
sub
pop
add
push
add
lret
xor
nop
std
inc
mov
jg
pop
push
xchg
arpl
incl
hlt
push
xchg
out
dec
stos
sbb
xchg
cmp
lds
push
lds
scas
xor
lret
mov
dec
cmp
inc
test
ss
outsb
dec
insb
and
fwait
dec
jl
or
xor
sbb
inc
adc
mov
ljmp
or
jg
pop
inc
sbb
lahf
nop
adc
sub
loope
les
ret
addr16
and
mov
push
fdivs
cmpsl
dec
inc
cmp
mov
mov
gs
cmpsb
ss
push
sbb
cmovge
sub
imul
loope
insb
sbb
sarb
out
add
inc
cli
jecxz
lock
sbb
mov
mov
int3
add
or
stc
lret
pushf
adc
popf
jbe
push
stos
inc
imul
adc
scas
jg
jo
push
rolb
addl
add
sbb
insb
fsubl
sub
test
push
xchg
add
fstpl
lcall
push
faddl
add
shl
or
out
adc
jb
mov
and
pop
decl
lock
mov
xor
pop
and
clc
nop
in
sbb
in
xor
jecxz
cmp
in
hlt
aaa
aas
fwait
add
sub
mov
arpl
adc
sub
lods
out
loope
fwait
mov
cmpsb
in
sarb
test
pop
dec
cmpsb
repnz
fs
mov
lcall
test
divl
sub
mov
movsb
hlt
idiv
stos
dec
pop
cmp
adc
fsubs
jbe
jne
scas
pop
pop
mov
daa
inc
test
pop
or
xor
sub
sub
push
mov
xor
cwtl
rcrl
jg
and
dec
inc
int3
or
fmull
fcoms
std
in
push
call
mov
rcr
fidivrs
and
test
mov
cmpsb
cmp
add
pusha
fimull
mov
stos
push
add
inc
call
mov
mov
xchg
push
ljmp
or
jns
dec
or
mov
push
jnp
mov
icebp
push
std
xor
enter
ljmp
sub
xchg
cltd
xor
push
or
xchg
pop
add
add
mov
xchg
xor
loopne
rorl
inc
adc
lcall
clc
in
aam
push
push
cmp
lahf
repnz
imul
popa
mov
test
xor
iret
sbb
mov
cwtl
pop
adc
inc
dec
jl
shll
testb
and
cli
cmpsb
and
mov
inc
inc
sbb
pop
jbe
int3
inc
into
jg
rcrb
xchg
ljmp
imul
cmpsb
lcall
mov
pop
aad
inc
jecxz
cmp
or
pop
add
add
cmp
fnstcw
mov
xorb
insb
mov
or
or
add
rcl
dec
nop
in
js
pop
adc
xchg
or
dec
push
add
and
test
cmp
flds
add
imul
enter
add
test
jmp
cmc
or
sbb
dec
jl
outsb
repnz
inc
cld
lret
shld
loopne
fnsave
jge
xchg
shlb
mov
push
add
aam
lcall
xor
dec
mov
or
sbb
fwait
mov
out
lock
lods
add
int3
jo
pop
xchg
cwtl
xchg
icebp
or
jg
dec
cmpsl
mov
sti
roll
gs
xchg
fwait
loope
cmp
add
xor
adc
sub
divb
aad
fsubrl
sub
dec
sbb
push
aad
adc
scas
xchg
jne
fdivrs
aam
push
fwait
lcall
and
inc
and
mov
add
jmp
xchg
inc
push
cwtl
stos
add
lock
or
jb
xchg
jo
push
cs
lcall
shrb
sahf
popa
insl
je
outsl
daa
pop
cmc
and
in
xchg
sbb
xchg
add
xchg
sub
pushl
out
adc
bound
dec
sbbl
clc
decl
add
ret
movsb
cwtl
cld
or
ficoml
sbb
sub
out
mov
sbb
rcl
and
pop
push
in
ja
sarb
xorl
fcoms
add
adc
cmc
xor
into
pusha
or
cmp
push
das
adc
lmsw
enter
ss
and
cs
inc
sbb
dec
push
popa
xchg
mov
or
mov
cltd
cmc
insb
add
jle
ret
stc
incl
call
idivb
nop
notb
mov
outsl
jg
pop
xor
loopne
addr16
pop
faddl
or
shl
les
mov
and
orl
jmp
xchg
cmc
jo
pop
arpl
divb
das
fbstp
inc
jge
ficoml
dec
sbb
mov
fimull
jo
xchg
es
test
sub
lods
cmp
pusha
dec
cli
jmp
outsb
lods
or
or
repz
cmc
das
rclb
push
push
mov
sbb
subl
fdivrl
movsl
out
and
xchg
cwtl
and
and
call
sbbl
test
movsb
fldl
out
or
mov
insl
and
mov
ret
loope
loopne,pt
mov
xchg
mov
dec
or
inc
push
int3
push
and
incl
mov
mov
rorl
mov
sbb
ret
lcall
insl
loop
fimuls
sbb
adc
test
add
xor
xchg
jo
sub
cmp
xchg
or
lods
xor
jb
mov
shlb
push
jge
movsl
scas
adc
int
xor
aaa
adc
mov
repnz
lods
pop
lcall
das
adc
pop
jbe
lock
inc
mov
incl
add
mov
pushl
enter
dec
ja
jmp
and
mov
inc
inc
pop
addr16
jp
sbb
jg
dec
mov
int
inc
and
sbb
ja
in
test
in
sahf
pop
or
cld
aas
insl
push
andl
arpl
xchg
fcompl
loope
aas
or
and
pop
sbb
in
out
sahf
fiadds
pop
outsb
xorl
add
in
push
xchg
out
imul
and
das
xor
into
repz
mov
adc
jns
sub
cmp
mov
sahf
pushf
push
aaa
cmpl
pop
arpl
inc
sbb
and
sbb
mov
lods
imul
arpl
pop
cmc
push
cld
xor
outsb
mov
push
add
mov
xor
dec
mov
sbbl
cwtl
pop
add
es
mov
imul
and
out
cmp
add
bound
psubusb
popf
xabort
cmp
cld
inc
in
out
lret
out
aad
popf
pushl
dec
test
push
add
sub
scas
add
lods
cmpsl
xchg
out
aas
inc
sub
and
cwtl
pop
fwait
in
mov
push
adc
add
or
pop
or
pop
outsl
and
enter
pop
lret
scas
cld
stos
mov
sar
js
dec
cs
cld
loopne
or
roll
xchg
je
push
cmp
inc
cli
popf
ds
das
cmpsl
add
adc
jp
movsb
pushl
sub
add
push
inc
sarl
insl
ja
jge
dec
ljmp
push
lock
lahf
xchg
jae
add
sbb
test
pusha
out
xor
cli
call
cmpsb
sbb
add
lret
pop
push
mov
adc
rorb
jns
or
shrl
xchg
pop
push
inc
pop
mov
jg
bound
in
popl
insl
imul
add
mov
add
jmp
in
sbb
add
neg
adc
mov
or
push
inc
sub
fs
jno
pusha
loope
xchg
xor
adc
sub
adc
out
xchg
mov
sbb
loopne
adc
aaa
dec
rcrb
add
jg
mov
push
add
push
outsb
in
xor
je
cmp
and
jbe
test
or
adc
aaa
jp
ror
popa
pop
pop
pop
mov
mov
and
ljmp
and
ja
add
xchg
daa
mov
in
cmp
mov
mov
stos
scas
fs
pop
cs
jne
aaa
rolb
mov
adc
lds
in
call
cmp
mov
xchg
push
add
lods
push
push
cmpsl
mov
sub
lcall
xchg
adc
add
sub
pop
mov
fisubs
mull
insb
push
sbb
fdivs
mov
arpl
scas
pop
fstl
adc
ljmp
mov
insl
adc
mov
aaa
nop
and
mov
lret
xchg
call
push
inc
pop
lea
pop
ret
add
pop
cmp
loop
pop
lock
nop
pop
or
or
inc
push
add
ljmp
pop
mov
mov
icebp
xor
xlat
mov
sar
pop
hlt
leave
call
test
push
sbb
add
xor
adcb
sbb
add
outsl
test
sub
lock
mov
cld
pop
add
cmp
sarl
incl
adc
mov
xor
dec
pop
leave
lock
cltd
sbb
mov
imul
pop
pusha
xchg
sbb
or
sti
dec
pop
dec
sahf
jl
scas
jae
push
ja
jg
mov
mov
jmp
adc
rorb
das
into
pop
xchg
xchg
jo
push
jg
xlat
pop
sub
lret
out
and
inc
les
sbbl
sbb
add
das
sar
adc
jg
xchg
sbb
add
add
js
lcall
xchg
pop
pop
aad
int3
cmp
jmp
sahf
rorl
addl
cmc
mov
inc
repnz
js
xorb
pop
sbb
call
add
pop
push
push
jp
and
rcrl
les
push
push
je
cmp
push
cmp
lahf
jne
addl
dec
aas
sbb
mov
incl
add
jno
xbegin
cli
stos
jp
mov
add
mov
add
push
push
mov
add
push
and
aas
mov
mov
in
sti
sbb
adc
and
sub
or
fwait
add
cmp
mov
jbe
pop
or
mov
mov
dec
jmp
sbb
filds
xchg
push
ret
xor
ljmp
sub
add
aaa
dec
pop
mov
push
cld
ficomps
jbe
inc
xchg
out
cwtl
lods
faddl
add
mov
mov
xchg
mov
mov
loop
inc
cmp
mov
sti
add
outsl
insl
cmp
fcoml
dec
movsb
ljmp
push
xor
adc
loopne
fldt
sub
imul
cmovge
nop
enter
in
push
add
inc
inc
ss
inc
loop
jl
shrb
in
push
jp
push
test
mov
xor
add
and
loopne
scas
ret
orb
pushf
hlt
js
mov
out
cli
mulb
je
sahf
mov
fldenv
xchg
in
loop
cli
cmpsb
stos
cmp
jae
jno
sub
fcomip
decl
cwtl
fadd
jbe
dec
sub
adc
stos
insb
inc
add
das
add
adc
or
dec
shll
and
xchg
shll
es
push
std
andb
scas
xchg
stos
jmp
cli
dec
pop
inc
ljmp
add
into
notb
addr16
in
ret
ret
clc
pusha
sbbb
cmc
mov
sbb
inc
icebp
call
lret
sub
dec
jle,pt
nop
ja
in
mov
pop
outsl
outsl
and
cmp
pop
jns
sub
call
hlt
test
ss
into
jg
cmp
decb
clc
sbb
push
and
xchg
xchg
dec
jl
push
test
xlat
add
es
call
leave
inc
cmpsl
add
or
push
push
bound
add
lret
nop
jbe
pop
lock
fs
sbb
mov
push
xorl
lock
pop
or
test
cwtl
roll
ljmp
shrb
jns
loopne
or
es
clc
fst
jp
pop
je
pop
sbb
mov
dec
add
mov
push
jg
xor
jno
dec
xchg
mov
mov
lods
and
int
repnz
push
mov
mull
loopne
rol
push
or
lcall
cltd
lds
and
rorb
jo
xlat
subb
pop
push
rcl
inc
insb
hlt
push
xchg
mov
xor
jg
stos
outsl
test
mov
xchg
add
adc
cmc
ret
cmpb
sar
pop
movsb
and
and
inc
dec
rorb
jg
lea
sbb
test
xchg
fimull
cmpsb
aas
out
pop
mov
ret
push
jle
jge
mov
clc
incl
test
outsb
ds
outsl
adc
xchg
add
loopne
sbb
mov
xchg
jg
dec
ret
rcr
or
sub
mov
dec
cmp
or
sbb
dec
je
pop
jg
frstor
or
xor
push
sbb
dec
nop
add
inc
orb
or
nop
stos
xchg
or
push
xchg
jo
and
pop
inc
inc
pop
test
add
je
cmp
xchg
fdivl
mov
push
add
dec
sbb
sbb
xchg
and
out
sub
scas
ss
cmp
dec
mov
repz
fistpll
dec
add
hlt
outsl
mov
into
xchg
sbb
xor
add
and
push
test
adc
jle
dec
mov
mov
ficompl
nop
cwtl
dec
dec
jns
or
fwait
pop
or
add
popf
xchg
xchg
les
inc
enter
xchg
adc
jno
xchg
lds
cmc
fildl
inc
or
inc
mov
inc
inc
rorb
aad
lock
mov
sub
pushl
loopne
test
pop
jns
insb
push
rclb
ljmp
mov
pop
inc
pop
pop
out
js
clc
mov
std
lods
call
mov
cmpsb
dec
adc
ljmp
cmp
pop
call
pusha
cs
dec
pusha
mov
xchg
inc
ds
push
mov
mov
jns
inc
in
ret
inc
cmp
dec
xchg
dec
mov
sbbl
loopne
inc
adc
jbe
mull
add
pop
and
fbld
loop
loopne
add
fdivrs
mov
inc
xchg
cmp
mov
aad
jne
and
pop
add
mov
and
out
ljmp
clc
push
inc
adc
cmpsb
in
cmp
pop
or
and
mov
adc
pop
cld
daa
pop
inc
adc
cmp
jle
jo
cmp
jnp
sbb
cmp
pop
sar
fbstp
ret
or
or
sbb
bound
push
jp
push
ljmp
adc
sub
aaa
cld
dec
add
roll
clc
in
pop
rclb
xlat
mov
jno
mov
xor
loopne
jno
mov
jmp
cld
push
xor
mov
int
jb
mov
push
les
add
cmp
sub
or
xlat
jb
mov
dec
int
sub
xchg
mov
inc
popf
jp
mov
mov
xchg
fisubs
push
mov
ds
sbb
sbb
aaa
add
and
pushf
sbbb
adc
mov
adc
rorb
fisubs
je
lds
aam
fs
adc
lcall
sub
push
dec
bound
add
fdiv
mov
shr
sub
incl
xor
sbb
xor
popf
jp
cli
in
push
incl
rcrl
out
popa
mov
shrb
xlat
sahf
or
add
int3
push
xchg
push
push
mov
inc
sbbb
ja
test
mov
arpl
pop
fsubrl
hlt
dec
pusha
imulb
push
cmp
fadds
push
inc
in
pushl
hlt
mov
jmp
mov
cltd
pop
cmpsb
jne
mov
rol
mov
adc
aad
fcoml
lods
iret
cmp
add
jg
push
sahf
aam
lods
pusha
repnz
adc
mov
or
arpl
fmuls
testb
decb
decb
faddl
fadds
sbb
xor
mov
or
rcr
lods
pop
mov
scas
test
jbe
test
xchg
mov
push
outsl
cli
push
mov
andb
hlt
rcrl
or
notl
sbb
hlt
inc
xchg
xchg
mov
jg
and
aad
mov
or
mov
rolb
ret
sbb
sti
push
mov
sbb
jbe
nop
rclb
sub
xchg
mov
pop
xchg
dec
fimull
adc
or
aas
dec
jmp
rcrb
pop
inc
es
aas
cmpsb
out
add
popf
jbe
movsb
inc
sbb
jle
popf
sbb
hlt
xchg
xchg
std
push
and
xor
outsl
xchg
mov
xchg
xchg
fisubs
sbb
xor
fdivr
or
xor
xchg
push
lock
push
inc
add
mov
cmpsl
es
out
dec
push
mov
test
lds
push
mov
inc
pop
push
mov
fcoml
ljmp
mov
pop
add
cmp
sub
or
test
ret
sbb
mov
nop
popf
pusha
sub
cwtl
js
mov
push
push
jg
call
mov
pushf
cmc
jae
fists
xchg
jg
sahf
call
dec
inc
test
icebp
sbb
fistpll
insb
sbb
jg
push
sbb
test
push
cs
mov
cmp
incl
in
add
roll
jge
mov
cwtl
aaa
mov
scas
fsub
imul
addr16
das
filds
push
cs
inc
mov
push
hlt
mov
cmp
or
push
mov
and
clc
cwtl
ret
xor
pop
cmp
and
mov
loope
xchg
dec
ret
icebp
mov
cmpsb
mov
pop
pop
push
xlat
or
or
inc
into
pop
inc
xchg
and
jp
add
mov
and
enter
sbb
cmp
inc
subb
push
jle
mov
mov
in
inc
add
jg
push
pop
in
fs
add
sbb
movsl
adc
ljmp
call
ds
xorb
out
dec
sbb
nop
or
sub
lock
shlb
inc
movsb
cmpsb
adc
push
push
popa
mov
and
xorb
stos
and
sbb
cmp
repz
incl
push
enter
or
pop
mov
jnp
mov
jnp
xchg
addr16
clc
aad
or
cld
insl
or
sbb
mov
test
out
adc
push
out
xchg
jmp
mov
sbb
adc
push
or
test
and
lea
ret
into
add
aaa
sbb
icebp
xor
cld
mov
decb
shll
xor
jle
stos
outsb
push
push
inc
out
jbe
inc
mov
mov
mov
inc
cmp
pushl
lahf
cmp
or
in
add
jo
arpl
or
loop
aas
mov
leave
adcb
ret
ss
mov
push
movsb
mov
push
hlt
mov
movb
loop
cmp
adc
jmp
push
xchg
fcomps
mov
cld
xor
aad
sbb
cmp
or
dec
cmp
aad
ljmp
clc
ljmp
jo
cmp
shll
sub
es
cmp
in
inc
mov
mov
lcall
loope
rcll
in
pusha
leave
sbb
call
rcl
hlt
in
insb
loope
insb
add
pop
test
mov
mov
addb
cltd
test
enter
ljmp
cmp
cwtl
rcll
sahf
jbe
or
bound
call
rorl
inc
add
push
push
arpl
lock
test
repnz
fs
lcall
bound
push
sub
fdivrs
jg
mov
cld
loope
lods
int
jae
add
sub
push
xchg
adcb
out
add
fbld
test
pop
add
repz
add
movb
fidivrl
xor
sub
add
and
sarl
out
ljmp
and
adc
cmpsl
cltd
xchg
adc
adc
mov
lods
mov
outsl
pop
inc
mov
jne
and
movsl
and
cld
or
or
xchg
sbb
cmp
test
aaa
into
jb
insb
adc
cmp
dec
into
xchg
mov
nop
test
stos
fcompl
push
mov
and
js
push
lods
mov
in
mov
jbe
stos
cmp
orl
call
and
push
sbbb
sub
add
mov
mov
xor
lahf
sar
cmp
push
arpl
pop
cli
ljmp
jb
pop
and
hlt
push
lret
add
fsubl
adc
adc
adcb
pusha
test
jbe
adc
pop
xor
call
mov
or
xchg
lret
sti
out
fisubl
xchg
add
jg
xor
sbb
scas
mov
push
xchg
sbb
fdivr
ljmp
lds
push
fs
addr16
out
xor
out
mov
add
lds
push
mov
push
stos
aad
cwtl
repz
dec
mov
mov
add
jp
inc
jl
lret
fdivr
mov
add
xor
outsl
add
and
jo
sub
xor
loope
cld
push
lcall
mov
and
xchg
les
cmp
inc
jbe
mov
add
pmaxsw
or
bound
insb
mov
lcall
push
das
les
lods
mov
inc
enter
das
xchg
cli
mov
xor
sub
sub
jmp
xor
xchg
pop
cmp
sbb
jno
pop
and
cmp
mov
mov
je
data16
push
lret
cld
mov
push
scas
or
inc
movsb
lods
lahf
mov
pop
stos
out
mov
cmp
or
and
lods
adc
pop
rclb
pushf
rolb
mov
jne
clc
and
loop
jg
pop
aas
pop
or
out
adc
jp
dec
shlb
pop
dec
add
adc
xchg
int
adc
xor
mov
xor
out
fwait
inc
xor
je
mov
xor
pop
jecxz
wrmsr
nop
pop
andb
pusha
test
dec
ja
daa
jae
xorl
dec
pop
pop
ret
adc
nop
xor
push
sub
jecxz
sbb
js
xchg
cmp
sarl
push
push
and
lret
inc
mov
or
sbb
rcl
int
pop
add
lock
jge
push
add
ss
and
insb
sbb
xchg
popa
add
xchg
movsb
incl
cmpsb
add
sbb
and
icebp
or
nop
dec
and
mov
cmp
and
sub
xchg
sbb
sub
stos
sahf
adc
ja
ret
mov
mov
add
pushl
pop
mov
pusha
decl
push
fnstsw
shll
lcall
dec
xchg
add
cli
pushf
push
cmpb
mov
es
jl
ret
lds
rorl
sbb
stos
ljmp
mov
push
jle
repz
dec
outsb
jle
adcl
loope
jmp
adc
or
push
mov
call
in
es
sti
xlat
ret
xor
shll
push
mov
add
cs
inc
sub
call
jg
and
push
push
push
bound
out
or
adc
clc
scas
leave
xchg
rolb
pop
aam
outsl
push
dec
clc
outsl
outsb
pop
mov
lahf
adc
lock
fcos
pushl
and
jae,pn
test
dec
dec
daa
je
jl
cld
lcall
cmpsb
push
mov
mov
mov
jg
lret
inc
or
add
pop
cs
mov
cmp
add
pop
jle
inc
inc
test
xorb
les
adc
outsl
sarb
stos
inc
fdivrp
dec
lods
dec
xchg
rorb
jp
ret
inc
mov
es
sub
inc
stos
subb
cli
mov
dec
lcall
mov
imul
mov
inc
jne
push
lods
inc
popf
stos
ljmp
call
pusha
push
inc
add
repz
inc
stos
fs
lds
rcr
pop
adc
cmpsl
and
aad
cmc
into
mov
add
aad
jno
jmp
mov
fcos
es
add
cmp
dec
popa
push
out
outsl
ljmp
in
mov
inc
push
pusha
or
in
pop
add
or
pop
loope
ret
and
push
pop
cmp
shlb
test
cmp
sub
mov
cmp
mov
stos
call
hlt
popa
sbb
loopne
push
mov
xor
cmp
sbbb
bound
cmpsb
ss
mov
mov
ret
sub
lcall
ret
es
mov
xchg
stos
je
ss
lcall
mov
jg
sbb
das
mov
gs
adc
pop
xchg
cmp
movsb
xchg
lods
mov
pop
fisubl
add
lods
scas
mov
xchg
insb
push
std
lcall
decb
into
sbb
rcl
loop
and
cwtl
pop
cmp
imul
mov
addb
in
mov
stos
mov
dec
in
sti
add
test
hlt
out
adc
fisttpll
leave
ficoms
mov
xchg
inc
sub
divb
ret
mov
cld
in
sbb
icebp
ljmp
adc
cmp
sbb
je
and
seta
sbb
jo
call
fs
pop
add
sub
movsl
fisubs
dec
mov
aaa
out
push
enter
push
sub
adc
jns
sbb
inc
dec
hlt
out
mov
test
adc
xlat
out
sarb
pop
xchg
les
sub
data16
movsl
mov
scas
ljmp
out
add
into
call
xor
orl
push
sbb
sbbb
pop
shlb
enter
xor
dec
xor
fistpll
pop
addb
and
adc
xor
hlt
call
fwait
and
sbb
add
sbb
adc
jecxz
stos
mov
test
or
jb
mov
fiadds
outsl
push
outsl
mov
sub
in
add
fbstp
cmp
insb
push
push
xlat
cld
add
ljmp
cmp
js
lret
jne
movsl
mov
and
leave
add
or
cmp
xor
jo
dec
lods
pop
pop
add
pop
cld
inc
mov
clc
scas
mov
xor
xor
cmp
mov
call
clc
aaa
or
faddl
mov
leave
aaa
enter
mov
jmp
sahf
ret
cmp
mov
movsb
and
mov
jge
mov
dec
push
aaa
enter
repz
insb
repnz
les
aad
pop
rcrb
out
lret
inc
arpl
pushl
mov
sbb
loopne
lock
sub
mov
pushf
mov
js
dec
xor
lgs
adc
dec
fdivr
lock
adc
test
je
scas
call
invd
mov
xor
fiadds
in
mov
movsb
mov
jp
cs
jle
and
mov
pop
divl
mov
mov
sahf
mov
stos
js
inc
push
cmp
add
push
jmp
aaa
push
push
xlat
insl
xor
xor
outsb
xchg
mov
test
xor
and
push
popf
les
dec
inc
imul
dec
sbb
clc
inc
xor
test
mov
fisttpll
push
or
icebp
add
inc
pop
sahf
das
or
popf
mov
xor
add
dec
dec
jo
ja
dec
push
test
shrl
call
iret
aam
lds
jb
sbb
movsb
sbb
mov
cmp
or
mov
ljmp
stos
and
call
movl
jb
cmpsl
rcrl
rolb
mov
mov
insb
and
xchg
xor
mov
ret
adc
data16
lods
xchg
pop
rolb
or
bnd
cli
mov
inc
mov
lret
ret
add
cli
shlb
jo
aam
lcall
and
pop
xchg
loop
int
mov
test
lods
inc
mov
adc
loopne
mov
rcr
xchg
cmc
or
or
dec
cmp
orb
adc
xchg
testl
dec
mov
fmuls
sub
leave
fstps
add
adc
pop
incb
test
test
clc
cmpsb
pop
inc
leave
add
jl
jmp
jb
add
jbe
cmpsl
jnp
jo
jge
jg
aam
sahf
xchg
jle
or
push
lds
mov
shll
dec
add
shrb
add
add
jg
dec
lret
bound
xor
pushl
fisubrs
das
in
call
push
in
fisttpl
xor
test
inc
sbb
out
js
jge
fs
add
jg
int3
out
sbb
add
xlat
icebp
adc
incl
pop
mov
popa
xor
or
lds
repnz
ficoml
decl
fadds
ret
or
mov
clc
scas
stc
sbb
push
rcll
push
dec
shl
mov
mov
lea
loop
stos
ljmp
add
mov
mov
jnp
mov
je
ljmp
or
mov
or
aam
mov
mov
jns
pop
out
ljmp
ss
adc
add
xchg
or
jo
dec
sbb
sbb
add
cwtl
js
mov
push
mov
pop
dec
jbe
sub
dec
push
enter
les
pushf
sbb
adc
xchg
jb
scas
add
in
je
nop
xchg
jmp
incl
mov
out
aam
data16
xorb
ljmp
push
adc
xchg
lds
js
push
inc
sahf
and
fsubs
lret
mov
mov
mov
jmp
enter
daa
pop
cmp
or
test
or
xlat
or
aas
mov
jecxz
out
cli
mov
cmp
push
icebp
int
rolb
test
cmpsb
lret
and
fsubr
xchg
stos
push
jecxz
fwait
inc
push
dec
decl
lcall
cs
xor
sub
call
cmpsb
cmp
aas
mov
mov
push
scas
pop
adc
ja
add
mov
push
bound
xchg
sub
add
mov
sbb
fdivrl
testl
leave
loopne
ret
mov
loopne
std
lret
xchg
ds
pop
negl
add
push
cmc
pop
mov
pop
loop
movsl
cmpsl
push
pop
or
loopne
cwtl
or
outsb
aaa
out
jge
out
pusha
xlat
lcall
movsb
js
dec
jg
dec
aas
jge
jo
subb
divb
insb
repnz
xor
xor
out
add
stc
jno
cmpsb
test
pop
data16
mov
xchg
movb
xchg
out
sbb
inc
add
aaa
pop
pop
mov
and
fdivr
or
push
xor
sbb
pop
enter
adc
call
fistpl
adc
mov
add
shr
and
lcall
adc
mov
jmp
pop
je
stos
jle
dec
or
mov
in
lcall
lods
mov
call
pop
pushl
mov
inc
and
stos
add
lock
mov
mov
and
push
clc
add
fistl
movsb
test
popf
divl
ret
inc
push
mov
dec
and
shll
loope
mov
insb
jns
push
push
es
cmovno
pop
sbb
mov
jnp
jl
push
xchg
filds
sbb
rcrl
xor
xor
out
xor
cmp
arpl
int3
mov
jle
fmull
subl
add
push
sbb
scas
call
and
or
jl
lcall
inc
cmpsl
jno
jg
push
arpl
mov
pop
push
rcl
cmc
call
gs
fwait
lods
adc
test
js
sbb
inc
jl
shr
das
lcall
ret
pop
jecxz
mov
sarl
xchg
sarb
pop
dec
mov
fxch
push
jp
insb
insb
jmp
push
xor
or
mov
cmp
hlt
sub
js
icebp
mov
cmp
push
push
sarb
xorl
cmpsl
sub
push
mov
inc
icebp
push
sarb
in
mov
out
gs
data16
add
lds
mov
or
adc
clc
popa
cmc
or
or
cmc
mov
aam
pop
jg
add
mov
jb
and
inc
cld
rorl
mov
or
aas
add
or
adc
call
and
loopne
js
notb
fcoms
xchg
sub
lock
fbld
hlt
repnz
add
lret
mov
subl
push
xor
les
adc
sar
jmp
mov
mov
rcrl
paddd
call
mov
mov
and
mov
add
jo
arpl
and
ljmp
xchg
sbb
iret
pop
loopne
push
cmpsb
out
or
mov
aaa
cmp
or
mov
push
out
push
lods
icebp
jbe
andl
or
add
push
xchg
or
incl
outsl
xor
push
jge
popa
mov
mov
gs
cmp
icebp
or
imul
mov
arpl
ret
lcall
je
loopne
nop
js
sbb
arpl
adc
xchg
sub
test
mov
inc
js
dec
gs
push
sbb
movsl
mov
jg
cmp
fsubs
mov
mov
inc
sbb
sbb
and
mov
bound
ret
xchg
cmc
sbb
inc
dec
lcall
mov
aaa
or
mov
sub
cld
stc
adc
and
shlb
mov
das
addb
std
das
cli
mov
cmp
rcll
add
push
outsl
and
push
leave
ret
and
cmpsl
sbb
jle
lret
test
xor
les
add
filds
mov
mov
call
adc
xchg
jp
sarl
jne
cmp
cmp
rolb
jp
fisubrl
jl
mov
sub
mov
repz
dec
mov
adc
mov
outsb
xchg
jg
jecxz
lods
stos
test
inc
ffreep
orb
adc
xor
mov
enter
push
std
add
pop
inc
jnp
xchg
mov
mov
sar
jnp
cmp
xorl
xor
sbbl
sub
mov
sbb
es
xlat
inc
std
push
out
les
and
cmp
mov
jge
cli
push
adcb
scas
mov
test
movsb
out
lock
and
or
mov
pop
cmc
das
enter
fisubrl
andl
sub
cmc
mov
scas
adc
inc
xchg
push
pusha
pop
idivb
mov
dec
pushf
and
pop
inc
movsb
push
xor
fs
and
mov
pushl
push
pusha
loopne
mov
data16
imul
hlt
jecxz
add
pop
mov
clc
aam
loope
cmpsb
out
add
sub
sub
mov
push
inc
in
ret
push
negb
and
and
sbb
sub
sub
pop
repz
div
dec
add
and
incl
sub
sub
pop
cmpsl
iret
pop
shll
aas
jp
adc
out
sbb
cmpsl
or
add
inc
outsl
orl
mov
and
ss
cmp
std
dec
iret
add
sbb
mov
adc
roll
mov
dec
dec
dec
xchg
inc
and
push
sub
xchg
addr16
push
adc
faddl
test
imul
js
mov
lds
push
dec
cmp
ljmp
and
jo
nop
sbb
jp
cmpsb
aam
mov
push
or
mov
jg
movsl
push
adc
adc
jle
mov
mov
and
xchg
jp
mov
cltd
clc
scas
pop
ret
mov
sbb
lods
adc
icebp
or
orb
xor
loop
xor
or
out
test
fcoml
add
push
ss
std
inc
ss
ds
sub
sub
xchg
xchg
pushl
adc
popf
idivb
loopne
inc
sbb
shr
icebp
sbb
adc
jmp
jnp
in
cs
xchg
or
jge
inc
push
shrb
pop
jbe
shlb
movsb
orb
sub
and
xchg
sahf
int3
jno
dec
sbb
add
or
int3
outsb
cmc
test
insb
mov
nop
mov
and
push
xor
inc
ljmp
pop
aam
push
mov
adcb
cmp
test
sbb
xor
mov
push
xchg
ljmp
xor
mov
mov
adc
outsb
mov
sti
incl
inc
loope
push
inc
inc
or
mov
jl
add
xor
adc
ja
fwait
shl
xchg
fsubs
sbb
sub
and
cs
sahf
mov
mov
add
push
dec
js
js
or
sub
clc
test
daa
rcl
jo
icebp
out
movsb
stos
cmp
andb
pop
ret
xchg
pusha
std
push
dec
cwtl
xchg
mov
clc
adc
add
or
insb
mov
lock
in
or
enter
xor
cmc
xchg
xor
inc
adc
pop
test
mov
mov
xlat
pushf
sbbb
in
dec
mov
fbstp
and
adc
adc
adc
inc
in
dec
jg
push
clc
addb
sbb
ret
jg
decb
loope
push
ss
std
mov
push
call
out
ja
cmp
or
push
adc
jg
mov
lods
lods
sti
add
stc
push
inc
xor
hlt
dec
pop
cmp
fildl
lock
mov
rol
jle
xchg
xor
movsb
xor
sub
int
adc
test
repnz
imul
inc
clc
movsb
shlb
adc
jbe
mov
xor
and
adc
iret
pop
xor
pop
cmp
push
sbb
test
sbb
mov
push
loopne
aaa
fdivrs
adcb
imul
jmp
bound
rcl
dec
add
pop
fbld
push
push
mov
push
xor
push
add
mov
loopne
ljmp
fcmovnbe
sub
lcall
cmp
and
and
mov
out
ss
pushf
cmp
and
insb
mov
mov
insl
mov
pop
movsb
shlb
cmp
testl
popa
or
pop
mov
sbb
pusha
xor
decl
fadds
pop
inc
dec
mov
sub
mov
sub
xchg
mov
pop
adc
inc
push
or
sbb
mov
mov
jne
mov
shl
out
sub
sar
icebp
mov
enter
mov
cmp
hlt
lds
and
mov
test
adc
fcoml
incb
cli
mov
mov
insb
aas
decb
aam
out
add
and
or
cmp
notl
fstpt
adc
aas
loopne
sahf
je
test
mov
mov
dec
sub
bound
clc
aas
add
pop
addb
and
ljmp
les
pop
addr16
xchg
mov
push
add
lret
mov
inc
add
cmp
imul
imul
dec
xlat
xor
fisubrl
xlat
lea
xor
sbb
add
decl
sub
fnstsw
or
mov
or
jl
jl
ds
fdivrs
out
mov
jg
or
adcb
mov
fwait
clc
add
mov
in
push
scas
or
mov
andl
xchg
enter
or
inc
pop
outsb
cmp
push
adc
xchg
stos
xor
cld
inc
lock
and
rolb
ds
clc
xchg
push
test
sti
sarb
mov
dec
or
arpl
test
cmp
jo
sbb
cmp
pop
fdiv
jbe
jecxz
enter
mov
loop
or
sub
into
jmp
mov
les
push
jne
pushf
fadd
mov
mov
cmp
dec
push
sbb
rcr
inc
loope
cmp
enter
and
loop
cmpsb
pushl
fsts
test
mov
sti
pushf
out
adc
push
loop
mov
dec
xlat
or
xchg
or
ss
mov
add
mov
scas
call
push
dec
jp
and
dec
insb
lock
sbb
adc
in
adc
dec
push
call
sbb
out
jle
decl
and
lea
lock
pop
js
xor
xor
ljmp
and
mov
pop
xlat
mov
pop
test
dec
test
fidivl
xor
ret
ljmp
scas
mov
je
cwtl
push
popa
jecxz
mov
dec
or
les
sub
stos
or
pop
add
mov
hlt
pop
add
lret
add
jg
aas
adc
jb
lock
add
out
inc
idiv
push
nop
or
rorb
out
test
popa
loop
push
jo
mov
adc
jg
mov
mov
xchg
pop
mov
xchg
rorb
jo
inc
xchg
pop
test
into
cmc
lock
pop
ja
or
jbe
inc
test
mov
dec
xchg
sti
fidivs
push
push
dec
or
cli
mov
ret
lret
xlat
add
addr16
je
inc
fcomip
call
subb
outsl
nop
cli
gs
nop
pusha
pusha
movsl
hlt
adcb
mov
xchg
loope
mov
pushl
xchg
push
inc
data16
sti
add
mov
xchg
pop
mov
dec
insl
xor
mov
ret
fdiv
decl
cwtl
adc
and
cmpsb
nop
cwtl
cmpsb
lcall
pop
mov
and
adc
dec
ret
jge
inc
jg
sub
je
push
sub
pop
loope
xor
mov
in
and
mov
mov
loopne
and
sub
push
das
stos
testb
mov
and
stos
jno
lock
mov
sbb
std
fildll
xchg
movsl
mov
insb
add
idivl
dec
cli
sahf
es
js
sub
jecxz
cld
test
mov
outsb
fmulp
mov
imull
fnstsw
test
or
add
aam
add
dec
mov
inc
call
mov
sbb
rcll
stos
shl
or
sbb
movl
lock
push
hlt
pop
rclb
out
sbb
or
mov
mov
cld
out
cmpsb
cli
inc
mov
out
push
mov
or
dec
cmp
pop
add
sbb
inc
jmp
mov
jl
mov
subb
cmp
xchg
mov
mov
mov
or
in
sub
pop
jb
lret
xor
shl
mov
adc
ret
mov
or
jg
leave
xor
int3
add
jp
or
add
cmpsb
push
in
inc
or
pop
mov
cmpsb
inc
jo
and
inc
mov
jg
fidivrl
orb
in
lcall
sbb
pop
xor
push
xchg
xchg
mov
add
sbb
int
xor
je
mov
popa
mov
enter
push
mov
sbb
dec
clc
mulb
orb
add
add
outsl
cli
push
push
xor
mov
xor
sbb
mov
cs
nop
pop
mov
adc
inc
xchg
lods
dec
or
sub
fcomp
movsb
sbb
push
and
shl
add
subb
outsl
xor
jno
cs
pop
sti
mov
popa
cmp
jmp
pop
cmp
sbb
hlt
scas
pop
bound
or
xlat
mov
cmc
jg
adc
insb
or
test
dec
push
xor
ret
xchg
jbe,pt
dec
xor
adc
ja
sub
inc
mov
fildll
hlt
jge
adc
scas
pop
and
add
jg
out
dec
call
psrlw
test
fiaddl
cmpsl
cwtl
icebp
scas
negl
das
jecxz
or
mov
les
andb
add
push
cmp
pop
loop
imull
dec
or
cs
and
cli
inc
mov
bound
jg
sub
je
outsb
add
movsl
pusha
mov
adc
outsb
fs
mov
pop
add
outsb
stos
in
imul
push
adc
mov
mul
mov
push
pop
mov
and
inc
adc
jb
or
add
inc
pop
scas
mov
fisttps
fnsave
push
sbb
repz
outsb
jmp
xor
es
incl
and
jne
sbb
mov
mov
rolb
inc
pop
cmc
fwait
dec
in
push
mov
imul
test
and
inc
inc
mov
lods
add
cli
jmp
mov
ljmp
xchg
es
out
sar
addb
inc
push
in
and
push
cld
inc
sub
scas
or
mov
cmc
adc
mov
mov
push
fists
in
scas
cmp
jne
testl
fs
push
cmpsb
jle
mov
xchg
sub
and
xor
jl
xchg
or
popa
cmpsl
ss
mul
or
shll
scas
nop
aaa
std
and
pusha
sub
cmp
rcr
cmpsb
fdivr
sub
and
loopne
push
mov
adc
insb
cmp
sbb
ljmp
pop
gs
nop
fisubl
inc
mov
fwait
xor
mov
add
imul
inc
js
dec
adc
dec
mov
lcall
cwtl
xor
sub
loopne
mov
sbb
mov
pusha
fbld
jecxz
shll
cmp
inc
xor
xchg
pop
push
icebp
popf
xorb
and
fwait
int
fistps
mov
and
push
mov
or
sub
testl
cmc
sbb
jp
sub
or
push
loope
xor
push
stos
aam
movsb
repnz
xor
push
into
ds
dec
cld
jmp
and
or
icebp
cmpsb
inc
bound
add
fidivl
adc
mov
mov
or
dec
popa
aad
or
mov
or
leave
rolb
addr16
xchg
jg
xchg
xor
sbb
or
scas
mov
xchg
rol
mov
mov
or
icebp
das
pop
mov
or
add
add
or
out
add
inc
sbb
push
jp
insb
lock
jle
movsl
dec
pop
inc
imul
xchg
sbb
cmp
mov
or
xchg
pushl
orl
pusha
inc
push
add
scas
and
adc
pop
lods
add
xchg
jo
dec
dec
jg
fs
movsb
aad
jge
leave
movb
xor
js
sbb
mov
decl
and
xchg
out
lahf
fsubrl
jl
inc
loope
dec
sbb
xor
rclb
out
or
sbb
cs
and
push
jg
adc
int3
aam
dec
pop
movb
pop
adc
int
and
ds
aaa
std
int
test
insl
push
andl
je
movq
fstpl
mov
xchg
outsl
push
adc
imul
inc
pop
sub
lods
icebp
pop
pop
jns
xchg
push
adc
test
jl
ret
sbb
dec
cli
das
test
andl
sub
cmc
movsb
stc
sub
movsb
xchg
add
add
cmp
pop
imul
lret
xchg
aaa
adc
push
mov
xchg
outsl
sub
add
mov
pop
pusha
mov
jp
xchg
sbb
loope
call
push
in
fs
cmc
pushf
shlb
adcl
cmpsl
shll
lcall
mov
mov
jnp
repz
lar
test
iretw
dec
and
scas
dec
jg
lcall
cmp
lock
sub
loope
pop
jbe
sub
outsl
push
adc
rcrl
test
pop
xor
orb
lret
sbb
loopne
adc
mov
cli
lcall
sub
arpl
add
mov
mov
int3
ljmp
push
popa
popa
ret
dec
and
dec
adc
push
xchg
adc
jl
jmp
lds
xor
jmp
test
lahf
inc
mov
pop
popa
stos
sub
sarb
faddl
sbb
adc
add
cli
mov
ss
add
les
out
push
enter
cs
adc
adc
outsl
clc
dec
inc
and
fwait
push
or
enter
jg
add
sbb
hlt
sub
scas
add
lea
stos
adc
sub
inc
pop
cpuid
adc
xchg
push
ret
sbb
mov
loopne
push
test
sbb
loopne
sbb
jle
mov
sbb
enter
lcall
inc
ljmp
pop
dec
bound
xor
iret
fimull
orl
shlb
or
add
sub
pop
jmp
cmc
sub
pop
and
das
ljmp
and
jg
insl
ficomps
add
data16
icebp
aas
xor
lock
stos
inc
icebp
mov
add
ljmp
dec
mov
xor
aam
sbb
push
in
or
out
or
nop
or
jbe
out
mov
pushl
dec
add
inc
in
sbb
mov
lahf
movsb
pop
adc
sbb
lcall
pop
notb
jb
test
inc
loopne
and
mov
push
push
mov
in
inc
cli
filds
mov
hlt
add
pusha
jns
push
es
ljmp
push
negb
fcmovne
xchg
clc
add
xchg
mov
jbe
sub
pop
xchg
sarb
or
dec
jne
add
and
nop
out
ret
int
mov
ret
jg
push
push
enter
ds
es
push
fdivp
stos
outsl
insl
push
push
loopne,pn
mov
pushf
dec
pop
cli
lahf
push
fmul
jmp
adc
dec
xor
xor
jnp
sub
cmpsl
mov
and
lds
lock
mov
or
push
aas
and
xor
shrb
outsb
mov
or
dec
lods
in
stos
push
into
adc
lret
sbb
ss
add
imul
mov
cmp
push
adc
jle
and
sub
outsb
jmp
icebp
daa
xchg
das
cmc
push
push
xchg
fmulp
and
dec
test
incl
and
jle
bound
sub
and
sbb
sub
loopne
or
or
arpl
inc
mov
push
pop
ror
das
sub
xor
fmulp
into
ret
add
movsb
pop
or
in
jo
imul
dec
adc
lahf
add
xor
cmp
bound
push
std
xchg
add
js
fildl
pop
xchg
push
cmp
jmp
dec
push
mov
bound
lods
orl
shl
popa
int3
mov
xchg
ds
cmp
jb
mov
xlat
cmpsb
int3
in
lock
sbb
xchg
pushl
icebp
aaa
mov
adc
pop
inc
xor
mov
shrl
aad
mov
cmp
les
jo
mov
xlat
mov
jg
hlt
cld
data16
pop
or
incl
jp
repz
mov
sbb
and
scas
pop
mov
mov
mov
xchg
dec
adc
sti
lcall
xchg
xchg
sub
fistpl
clc
pushl
push
mov
mov
aad
inc
lea
clc
data16
fcomps
lcall
inc
scas
or
or
fdivl
xchg
lret
or
mov
inc
ljmp
add
in
lods
ljmp
test
cmp
nop
xchg
cmpsl
int
sbb
sbb
faddl
in
mov
clc
sbb
insb
sbb
push
and
inc
cmp
add
mov
loopne
pop
sub
nop
inc
mov
fadds
add
bound
xor
dec
testl
cli
loopne
repz
sbb
adc
or
xchg
or
icebp
push
int
mov
aaa
test
and
clc
incl
mov
or
xchg
push
cmp
push
push
mov
inc
adc
or
add
nop
mov
add
mov
in
int3
add
loopne
lods
jg
mov
jmp
repz
sub
ljmp
pop
dec
loop
rcl
int3
inc
andb
xor
nop
push
cld
cmpsb
mov
and
xor
xor
sub
cld
cmpsb
add
inc
jge
cmp
call
cli
lcall
ja
add
int
and
inc
fcomip
add
and
pop
nop
xchg
out
and
push
jmp
inc
jmp
mov
mov
cwtl
add
and
add
cmp
decl
mov
dec
sub
outsb
adc
outsl
decl
andl
and
mov
adc
cmc
push
ffreep
sub
xchg
xor
insb
inc
mov
inc
leave
fwait
mov
nop
and
fcoms
fstps
or
fcoms
sahf
aad
cmp
jg
or
mov
es
xchg
pop
jns
inc
mov
mov
or
mov
imul
mov
inc
and
sbb
add
imul
push
pop
in
ret
mov
xchg
pop
mov
shrd
mov
outsb
mov
add
adc
mov
cli
int
movsl
mov
add
mov
mov
add
pop
pop
or
rcll
sub
enter
pop
pop
clc
ljmp
ret
lret
pop
fidivrs
ja
inc
jmp
cmp
sub
fisubs
mov
jmp
mov
aad
popa
negb
dec
out
cs
cmp
push
push
xor
call
or
into
je
into
add
mov
lds
repnz
cmp
fsubs
dec
mov
mov
testb
out
out
jb
adc
inc
movsl
dec
adc
ljmp
mov
outsb
aad
test
or
xchg
loopne
xchg
std
mov
or
je
cs
repnz
or
push
pushf
cmp
sahf
jo
xchg
pop
out
dec
push
scas
sub
imul
dec
popa
dec
inc
jo
mov
lock
add
and
xchg
ds
outsl
test
sub
mov
pusha
clc
pop
or
inc
fcmovb
out
arpl
pop
fildl
jno
push
push
cld
je,pn
in
pop
movsb
jg
ljmp
push
pop
movsl
jo
or
sub
jp
adc
ss
cltd
lea
shrb
jae
push
jle
loop
shlb
jecxz
cltd
mov
jmp
leave
and
or
lret
mov
push
loop
add
das
mov
scas
cmp
and
sarl
fsubl
mov
sub
xchg
jp
mov
daa
inc
dec
out
clc
jnp
repnz
jl
das
xchg
push
push
test
lods
jle
dec
incl
and
cs
cmpsb
leave
sbb
add
xchg
mov
push
mov
and
push
popf
rol
inc
jo
jecxz
imul
push
push
mov
push
pop
jg
add
jl
add
xchg
pop
stos
pop
xchg
mov
cld
mov
cs
cmpsb
cmp
imul
test
das
sub
nop
jle
bound
dec
xchg
xchg
sub
fadds
mov
push
jo
mov
dec
das
sub
xor
aas
clc
jne
ljmp
push
daa
out
aas
dec
push
cli
and
xchg
jmp
adc
and
insb
mov
mov
scas
jp
ljmp
hlt
mov
in
rorb
out
test
fsubs
scas
out
inc
cmp
jns
aaa
mov
loopne
xchg
push
jecxz
dec
mov
mov
push
jne
shr
pop
dec
icebp
sub
jno
insl
cli
jg
dec
pop
pop
inc
sub
push
pop
add
lahf
andb
pop
push
mov
jns
in
mov
dec
or
ljmp
jl
mov
in
repz
lds
popf
mov
aad
xchg
call
ljmp
rolb
je
inc
lea
inc
sub
insl
push
push
pop
lock
pop
cmp
fstps
xor
fdivs
fs
push
xor
popf
ret
stos
test
movsb
outsl
mov
xchg
ljmp
inc
cmp
cmpsb
jmp
mov
arpl
ret
push
arpl
imul
fdivp
rolb
test
mov
add
cmc
mov
adc
pusha
bound
loope
mov
pushf
hlt
jg
lcall
jb
insb
xor
mov
fbstp
add
xchg
fisttpll
ds
xor
addl
xor
adc
xchg
pusha
movsl
das
cmp
sbb
in
add
adc
xorl
jp
add
sub
aaa
or
dec
push
dec
pop
mov
test
std
in
rclb
mov
sbb
mov
and
pop
lds
mov
int
fs
rolb
mov
sahf
pop
inc
sub
sbb
fdivrp
adc
lret
pop
mov
pop
decl
adc
test
or
and
lds
scas
and
cwtl
mov
mov
adc
inc
xchg
push
add
inc
dec
adc
adc
pop
push
push
inc
sub
pusha
xchg
mov
cmp
mov
pcmpgtw
lods
pop
enter
and
bound
adc
xor
add
fcmovnbe
xlat
mov
roll
inc
adc
std
push
ficompl
ret
fucomp
sbb
ret
cmp
loopne
sarb
aad
ljmp
subl
dec
add
repnz
add
outsb
sub
xor
fdiv
mov
inc
movsl
ret
test
je
lods
sbb
dec
or
in
push
lods
loope
stos
sub
push
lahf
mov
mov
mov
cltd
jp
dec
push
sbb
mov
sub
xchg
push
jp
mov
xor
sbb
pusha
mov
clc
sbb
shll
mov
mov
outsl
cld
out
call
dec
inc
mov
mov
or
les
push
pushf
or
cltd
imulb
mov
mov
pop
adc
testl
and
push
cmp
mov
imul
ljmp
hlt
mov
mov
xor
bound
dec
or
xor
sar
jl
mov
and
mov
mov
push
mov
decb
jg
data16
xchg
sti
inc
xor
les
sbb
jp
and
jg
xor
xchg
cwtl
fldenv
sbb
sbb
in
mov
pop
xchg
xor
and
les
xor
std
xchg
and
stc
pop
addr16
cld
filds
pop
add
pop
push
mov
sbb
lds
ss
push
mov
pop
lock
mov
adc
sbb
pop
mov
jle
aad
sbb
or
in
stc
fildll
jl
in
fcomp
xor
pop
ds
daa
add
sahf
ficompl
pop
adc
sub
fcmovu
adc
push
inc
insl
pop
pusha
movsb
ficompl
mov
out
sti
mov
adc
pusha
jne
or
and
loope
jmp
inc
cs
or
and
push
mov
lods
out
cmp
imul
add
aaa
je
adc
pop
ss
roll
mov
or
inc
dec
jb
jge
push
cmp
adc
fidivl
or
sbb
sbb
lcall
popa
cld
ficoml
jg
dec
cmpsl
popa
xor
inc
cmp
cmpsb
sub
loop
int3
lds
push
jle
push
sar
test
push
inc
push
inc
mov
adc
push
aas
cmpb
push
or
lods
and
push
insb
mov
aas
lock
push
or
enter
inc
and
fwait
push
dec
loopne
jg
add
push
adc
test
add
xchg
outsb
inc
fldt
jecxz
dec
test
ficomps
call
cs
loop
and
xor
dec
xchg
adc
push
outsl
add
inc
xchg
jnp
pop
pop
pminub
mov
push
adc
mov
adc
rcr
add
enter
inc
fsubs
lods
and
xchg
aaa
add
sti
sti
push
jge
fs
mov
jp
sti
loopne
mov
jecxz
nop
cli
out
mov
mov
jns
adc
push
ret
pushl
push
test
shl
push
jl
daa
inc
fdivrl
mov
movsb
pop
and
mov
std
xor
ljmp
xor
xchg
outsl
aad
or
fsts
mull
test
jmp
mov
imul
xchg
sbb
cmp
sbb
push
leave
addr16
mov
push
sahf
outsb
mov
push
sti
lcall
push
sub
adc
mov
mov
lret
cld
incl
or
stc
and
bound
lods
pushf
pusha
imul
xchg
mov
push
mov
jmp
hlt
clc
ljmp
jno
es
in
loopne
sahf
ds
inc
xor
push
lods
and
jb
mov
jl
mov
xor
sbb
imul
or
inc
ljmp
lds
or
shlb
xchg
js
xchg
xor
cmp
cli
jmp
jno
sub
mov
push
aaa
test
cmp
adc
jmp
pusha
rolb
push
push
xchg
aam
jo
or
loopne
cld
push
aad
inc
cmp
or
int3
pop
test
fldcw
inc
aam
add
inc
scas
add
fcomip
sub
lods
or
sub
xchg
decb
mov
mov
les
into
or
pop
xchg
dec
and
pusha
pushl
push
adc
xchg
cld
mov
dec
xor
push
pop
inc
cld
inc
mov
inc
xchg
shll
sbb
ljmp
rcll
xchg
ret
clc
pop
loopne
pop
lods
jnp
inc
leave
sub
popf
add
fcomip
mov
or
leave
xchg
adc
add
rcr
jo
mov
fprem
lds
and
hlt
add
je
mov
out
incl
jae
test
repnz
sbb
test
inc
push
mov
sub
push
cvttps2pi
jg
mov
sbb
xchg
mov
test
push
cld
jge
mov
pop
mov
inc
add
inc
inc
fisubs
stos
outsl
xor
mov
pop
or
xlat
push
mov
sbbl
mov
sub
or
dec
je
jmp
dec
js
cmp
mov
sub
je
insb
push
and
mov
and
cmpsl
and
sbb
ret
mov
pop
mov
jb
nop
jbe
jg
mov
and
mov
repz
mov
and
fisubrl
filds
int3
inc
sub
xchg
dec
repz
inc
cmc
sbb
mov
inc
clc
push
test
mov
or
mov
in
add
mov
clc
and
imul
sbb
jle
stos
jecxz
jg
cltd
dec
sub
popl
add
into
adc
xor
lcall
in
fildl
out
cmp
sti
dec
cltd
fwait
std
jle
dec
dec
loopne
push
inc
cli
and
mov
js
push
xor
push
jg
es
push
add
push
call
inc
dec
mov
iret
and
mov
xchg
lock
fbld
movsb
mov
or
pusha
enter
mov
add
push
ljmp
call
cmpsl
jns
int
lock
jo
add
sbb
decl
aam
mov
pop
mov
in
inc
mov
testb
mov
xor
test
fldt
push
and
xor
leave
sar
sarl
sbb
inc
jo
mov
sbb
and
js
xor
lock
cmp
mov
ljmp
test
jb
and
sub
aas
lcall
orb
shll
rcrb
aaa
sarl
or
test
adc
adc
mov
or
mov
mov
jge
xor
sbb
add
push
mov
push
mov
sbb
pop
roll
adc
shrl
mov
mov
inc
fcmovnb
in
pushf
sbb
and
stc
add
out
fisttpl
les
sub
pop
adc
dec
sbb
inc
push
push
bound
add
push
xorb
fnsave
nop
adc
cmpsb
cmp
nop
out
decl
aaa
daa
test
pop
sub
daa
les
testl
loopne
xchg
pop
add
and
jg
adc
fs
sbb
jg
cs
testl
push
jg
push
incl
jp
dec
push
pop
add
lods
mov
jg
jmp
ret
incl
jecxz
dec
mov
test
sarb
dec
jg
mov
or
mov
loopne
jns
bound
or
sbb
mov
pusha
insl
and
andb
lcall
and
popa
test
repnz
int
adc
enter
jmp
ds
lcall
fisubs
xchg
jne
sub
push
loopne
mov
adc
xchg
imul
push
clc
dec
pushf
ja
push
jl
cmpsl
movsb
or
or
mov
add
cwtl
inc
call
adc
ror
sub
add
adc
push
outsb
sub
outsl
jg
test
mov
cmpsb
jle
mov
adc
pushl
cltd
xchg
es
lcall
xchg
lret
std
in
lods
sub
clc
ret
cs
push
dec
and
inc
jo
adc
dec
xchg
ljmp
mov
dec
loopne
mov
sub
push
scas
pop
add
sbb
mov
mov
adcb
inc
mov
repz
cs
jg
movsb
push
dec
xchg
inc
je
sub
cmp
inc
mov
add
lods
xchg
add
inc
xor
jmp
sub
lods
repz
adc
mov
cmp
or
dec
inc
push
push
bnd
sbb
mov
sub
aas
add
dec
mov
repnz
cs
push
repnz
frstor
and
jne
jb
inc
or
mov
mov
jle
jge
jl
pop
std
pop
mov
popa
push
cmpb
mov
push
ret
adc
sub
mov
orb
dec
mov
shll
test
sar
sub
adc
dec
adc
or
inc
ss
or
out
push
push
cmc
lea
scas
or
aad
pop
mov
pop
imul
stos
ss
std
adc
mov
dec
sbb
add
sbbl
xor
sub
pop
dec
sub
ret
negb
js
mov
out
mov
dec
fsub
jb
xchg
fs
xchg
push
ljmp
scas
and
into
push
stc
mov
fnstcw
jg
in
mov
or
arpl
pop
adc
cli
inc
mov
mov
fstps
call
mov
inc
in
fs
xchg
cli
adc
or
push
test
add
into
loopne
scas
xchg
cmp
lcall
sub
push
sbb
jecxz
sub
sbb
sub
or
hlt
and
shrl
lcall
inc
and
xor
jmp
mov
adc
or
ficompl
or
cmp
xor
jp
jg
mov
call
in
in
jb
add
fs
movb
pop
push
mov
insl
mov
push
lret
jp
orb
enter
fbld
sbb
cmc
test
nop
mov
or
or
cli
jb
adc
or
add
cmp
adc
lock
ljmp
inc
std
pop
adc
jmp
push
test
dec
ret
lcall
mov
mov
sti
imul
or
sub
and
adc
or
mov
or
cli
cs
push
es
aas
adc
add
dec
xchg
outsl
dec
test
or
sub
jo
scas
inc
clc
lcall
in
insl
in
popf
loop
xor
hlt
fucomip
mov
adc
push
idivb
enter
or
xchg
mov
insb
pop
dec
mov
incl
rolb
adcb
test
jp
mov
rcl
dec
pop
lcall
mov
loop
cmpl
or
jb
mov
xchg
lea
fcompl
mov
jecxz
add
je,pt
xchg
out
pop
cwtl
mov
lahf
cmp
shll
scas
loop
jnp
loope
jmp
mov
fnstcw
mov
movb
movsb
cmpl
jmp
cld
fucomip
jg
sbb
rolb
add
add
inc
mov
icebp
orl
nop
adc
and
orl
sbb
sbb
push
cmpl
clc
fildl
dec
mov
cmc
ds
push
mov
in
aaa
fstpt
sbb
mov
stc
mov
lds
insb
mov
bound
cmp
rorl
dec
shlb
andb
sub
imul
mov
stos
mov
icebp
xor
sbb
push
mov
or
std
pushl
fwait
push
dec
sub
inc
jb
or
mov
adc
mov
pop
add
inc
sbb
push
inc
cltd
outsl
jmp
add
fbld
imul
jl
jge
inc
imul
xor
mov
ja
sub
sub
xchg
mov
sub
in
pusha
push
adc
jmp
xchg
sahf
sub
jle
dec
and
lock
mov
shl
xor
sbb
std
pushf
jecxz
js
fisubs
push
nop
dec
subl
clc
ljmp
inc
jo
pop
lds
and
and
xbegin
add
xchg
incb
sbb
pop
shr
cmp
xchg
push
pop
push
cmpsb
or
jl
xchg
jl
cmp
outsl
inc
pop
sti
xchg
sub
les
adc
subb
mov
cli
push
arpl
add
jg
sub
pop
xor
mov
cmp
cmp
mov
xor
add
addl
daa
sbb
add
and
sbb
clc
repz
mov
adc
loope
fbstp
mov
aam
sub
adc
ljmp
test
aaa
shlb
fbld
pop
pusha
jge
and
jne
push
dec
mov
push
push
pop
inc
fsubr
xor
cmp
push
repnz
cmp
test
pop
xor
mov
xchg
addr16
xor
int3
test
inc
popl
xor
loopne
aas
sti
xor
xor
out
mov
outsl
loope
or
in
or
pop
xorl
sub
sbb
sahf
and
sti
pop
fstpt
testb
subl
pop
test
rorb
mov
sbb
aas
hlt
dec
add
sbb
fmul
and
pushl
or
mov
mov
mov
rclb
sbbb
icebp
cltd
cmp
adcb
cmp
mov
jns
push
xchg
movsb
lds
push
call
jns
rol
call
pop
sbb
daa
and
push
mov
ljmp
lock
loop
lock
jno
sbb
mov
inc
mov
mov
cmp
std
inc
test
out
adc
incb
pop
test
test
sbb
xchg
flds
les
cltd
inc
insb
push
std
call
pop
shll
fcompl
xor
popf
pop
adc
js
insl
xchg
insl
adc
cmovae
mov
mov
lcall
inc
out
rcrl
in
pop
sar
out
adc
jl
xchg
cs
push
push
push
arpl
fxch
incl
push
mov
lcall
xchg
inc
outsb
jle
enter
add
sbb
adc
xchg
aaa
mov
std
xor
add
xchg
rorb
js
out
push
mov
cwtl
jo
pop
cmp
lock
iret
sub
test
pop
js
inc
icebp
xchg
repnz
jmp
cmp
loope
loopne
stc
leave
scas
pop
sub
sub
test
subl
jns
jo
sub
add
xchg
sahf
mov
push
dec
mov
aaa
xlat
adcb
sub
hlt
and
outsb
jp
mov
dec
jno
cwtl
sub
mov
jns
imul
or
fistpll
ret
sbb
sbb
loop
push
lods
pop
and
or
cmp
das
ljmp
sti
push
ljmp
fwait
or
clc
adc
add
data16
enter
stos
cmp
jbe
push
lahf
xor
inc
mov
je
dec
ljmp
jle
sbb
xchg
xchg
rcrl
push
xlat
inc
and
lock
pop
out
stc
and
mov
add
movsl
pop
test
out
mov
add
sub
dec
cli
mov
js
jp
mov
call
stos
cmp
je
or
jge
sub
pop
mov
hlt
adc
cmpsl
cmp
clc
iret
sbb
and
inc
mov
and
test
xor
aas
bound
test
sub
jg
push
jbe
das
test
jo
pop
inc
cmp
loope
jno
cmp
or
ret
push
sar
jg
or
paddusw
inc
mov
mul
adcl
loopne
dec
jp
inc
dec
outsl
cpuid
xor
sub
push
mov
inc
sahf
mov
pop
fiadds
mov
mov
and
pop
call
repnz
push
add
jmp
mov
push
or
sahf
xor
loopne
sbb
movsb
outsb
out
repz
scas
dec
dec
movsb
push
cli
dec
mov
jp
push
sub
rolb
jecxz
ret
or
cmp
psubsw
aaa
or
jp
mov
dec
cmc
dec
shr
cmp
jg
sbb
jg
jp
mov
shl
test
loope
out
cli
mov
xchg
xchg
addl
pop
mov
xor
hlt
hlt
xchg
stos
adc
mov
push
test
std
xchg
mov
in
dec
push
mov
mov
dec
mov
xor
add
sarl
pop
dec
or
dec
ja
je
std
ljmp
add
push
adcb
sub
xor
mov
lods
jbe
inc
inc
pushf
in
call
std
jbe
add
or
mov
inc
ljmp
cmp
mov
movsb
push
pop
cld
je
in
push
icebp
inc
std
shlb
jo
adc
or
mov
shll
jg
or
cli
sbb
push
mov
pop
and
mov
mov
xor
pop
push
and
mov
or
pop
daa
push
cmpsb
dec
popa
loope
cmp
xchg
inc
cmp
ljmp
andl
inc
nop
out
sbb
cwtl
lret
jmp
in
sub
push
decl
lds
pop
out
fadd
inc
ja
lock
or
push
push
add
int3
out
mov
pusha
mov
sub
jno,pt
sarl
cmp
inc
mov
adc
mov
dec
xchg
xor
pop
xchg
mov
sub
jecxz
das
or
push
pusha
sub
sub
pop
cltd
add
incl
and
xchg
roll
lea
inc
sub
jp
push
sbb
and
cmpsb
mov
or
cmp
mov
xor
mov
cwtd
inc
jg
leave
mov
push
jns
int3
idivb
test
cmp
add
mov
aam
fdivrl
mov
nop
icebp
or
adc
outsb
ss
adc
mov
popa
pushf
xchg
data16
icebp
aad
lock
shlb
rcrb
or
decl
mov
sbb
lret
sbb
ss
sahf
add
cmc
dec
aas
mov
dec
out
fcmovb
mov
sub
ds
pop
mov
xchg
inc
add
lods
pushf
andl
test
add
xor
ret
mov
call
fmul
nop
sbb
lcall
lcall
mov
test
dec
mov
fstl
aam
outsl
mov
popa
adc
push
adc
lret
lret
faddl
decb
addb
das
jg
nop
hlt
xchg
inc
gs
inc
and
and
scas
lea
popl
decl
outsl
xor
and
hlt
das
clc
mov
push
arpl
mov
jo
testb
and
mov
incl
ja
daa
imul
js
mov
jno
insb
jl
fsts
bound
fisttpll
mov
and
push
adc
push
cmc
jo
adc
dec
arpl
subl
sbb
gs
push
pop
jl
incb
js
inc
stos
push
push
adc
jle
loop
xchg
js
dec
and
decl
xchg
or
leave
fwait
ret
mov
mov
nop
dec
imul
call
andb
push
filds
out
fstp
icebp
lahf
add
and
popa
inc
ss
sti
xorl
push
int
bound
outsb
cmp
lea
int
xor
call
or
push
andl
or
xorl
push
pop
mov
sub
test
clc
fucomip
lcall
xor
sahf
inc
cmp
lcall
nop
sub
pop
cld
outsl
cmpsb
lods
sahf
and
or
add
cld
stos
imul
pop
arpl
clc
jg
sub
loopne
pop
xor
decb
pop
cli
mov
adc
cld
jmp
mov
test
jb
xchg
add
cmp
dec
in
ja
dec
in
pop
sbb
mov
push
or
add
aaa
test
out
lret
xchg
les
shlb
inc
fdiv
loopne
lods
in
test
push
je
mov
mov
fwait
sub
dec
loop
stos
cmp
imul
mov
int
stc
test
xchg
xorb
insb
or
jge
or
stos
jbe
cmp
sub
pop
jl
push
add
lock
out
and
sub
rcrb
xor
aaa
jge
jbe
mov
cmpsb
pusha
xchg
xchg
and
fisttpl
decl
dec
fists
cmp
outsb
sbb
inc
fsubrs
notb
cmp
pop
mov
mov
outsl
add
xor
sbb
sub
andl
das
xchg
mov
in
idivb
push
or
dec
xor
push
es
aaa
cld
sbb
dec
aam
movb
cmp
outsl
push
xchg
lods
dec
insl
sub
sti
xchg
jbe
in
sub
popf
mov
ss
mov
jno
or
cmpsb
adc
cmpb
add
call
xchg
jle
std
mov
mov
aaa
sbbl
out
push
aas
aaa
lock
mov
mov
fstpt
out
ret
sub
dec
sub
lcall
jmp
and
das
or
in
fimuls
js
mov
fucomip
mov
inc
stos
cs
mov
outsl
sub
fs
xchg
mov
popf
in
push
mov
sbb
adc
mov
jbe
or
fisubrs
cld
xchg
cmpb
jmp
dec
leave
bound
add
add
addb
stos
cmp
mov
xchg
sti
and
mov
cmp
jmp
push
dec
push
jo
lods
or
ljmp
bound
and
cmp
and
push
cmp
cmpb
adc
rol
icebp
call
mov
xor
jl
loope
movl
mov
rclb
adc
push
insb
loopne
roll
inc
pop
adc
mov
imul
fistpll
push
loopne
inc
incb
mov
adc
addr16
clc
push
mov
add
fisubs
inc
jb
inc
mov
lock
jp
xor
mov
sub
mov
pop
lcall
and
subb
je
hlt
xor
dec
scas
cld
or
push
pop
or
std
adc
fiaddl
loopne
or
lock
testb
repnz
sarb
jno
sub
shlb
and
out
icebp
xor
pop
cli
test
dec
sbb
sub
sbb
adc
mov
inc
xchg
push
sub
out
fwait
mov
fs
ret
xor
arpl
pushf
mov
and
nop
popf
test
mov
push
push
xchg
ds
dec
sti
push
rolb
pop
aam
mov
pop
loopne
enter
pop
cli
out
pop
fwait
lea
push
mov
inc
sbb
int3
lods
mov
mov
aam
dec
divb
call
xor
aaa
cld
scas
push
xchg
add
mov
mov
pop
or
ret
jecxz
icebp
mov
mov
popa
xchg
cmp
xor
add
push
xor
xchg
loopne
daa
popf
mov
or
sbb
sbb
sub
out
cld
push
sub
add
push
popa
in
adc
pop
test
sub
ret
mov
cld
jbe
dec
loope
jmp
sub
mov
xor
hlt
ret
arpl
and
push
cmp
mov
xor
test
jecxz
inc
or
stos
dec
addr16
mov
lret
fadds
cs
sub
inc
sti
xor
xor
orl
cli
jns
and
pushf
pusha
movsb
push
ficoms
pusha
insb
sbbb
or
sbb
imulb
xor
lds
pop
mov
das
test
dec
add
rorb
or
loop
jno
pop
aaa
ret
and
cld
dec
push
jg
or
mov
outsl
daa
or
mov
sahf
add
or
and
orb
ret
sbb
xor
fnstsw
cld
push
sub
arpl
pop
and
sbb
pushl
outsb
xor
fisubs
sub
sbb
clc
sbb
push
mov
aad
and
je
test
xchg
sbb
roll
add
icebp
mov
test
add
and
pop
aam
add
xlat
pop
pop
jle
enter
dec
out
jge
or
addl
adc
xchg
push
int3
aad
mov
mov
out
call
lcall
iret
jle
add
jp
cmpsb
fbld
adc
sbb
push
aam
into
aam
pop
clc
lds
and
sti
insl
jl
out
or
push
rolb
mov
sahf
fs
daa
inc
sbb
push
pushf
add
cmp
inc
cltd
add
mov
pusha
sub
add
adc
shrl
mov
adc
xchg
mov
fnstenv
jns
mov
adc
je
mov
pop
dec
adc
xchg
movsl
mov
or
fsubr
outsl
stos
jl
jl
cmpsb
sub
sub
mov
sub
dec
mov
xlat
cmpsb
imul
jo
mov
repz
sub
cmp
out
hlt
lcall
sti
add
stos
xchg
xor
push
dec
insl
dec
fisttpl
iret
jle
lock
sub
or
out
mov
decb
int3
and
out
push
in
cwtl
mov
es
mov
or
jge
decb
call
adc
call
insb
addr16
fstpt
and
cmp
bound
pusha
inc
or
test
xor
push
jae
das
adc
aas
and
sti
mov
inc
shll
adc
sti
fiadds
mov
push
or
sub
outsl
call
js
or
cli
or
in
add
loopne
inc
aaa
fbstp
fnstsw
aas
mov
mov
mov
addb
repz
mov
xchg
loopne
inc
dec
test
icebp
pop
push
outsl
jg
dec
dec
fwait
cmpsl
ret
dec
mov
xor
insl
adc
cltd
push
icebp
ljmp
loop
outsl
cmpsb
filds
inc
push
sub
into
mov
adc
pop
outsb
inc
andl
aad
dec
xchg
js
test
sbb
mov
dec
mov
aam
push
lea
lahf
hlt
decb
daa
mov
in
cmp
int
sub
mov
add
js
mov
push
cmp
jl
adcl
jbe
dec
add
sbb
call
call
movsl
pop
cmpsl
xor
mov
popf
sbb
xchg
jmp
stc
pop
in
leave
mov
jbe
push
jle
push
aad
fxch
jae
test
les
or
movsb
out
cmp
and
jl
sub
outsl
incl
or
cmp
and
decl
dec
and
or
pop
inc
leave
push
lahf
sbb
mov
in
pushf
jecxz
xchg
jle
inc
pop
mov
mov
jmp
test
adc
sub
cmp
push
xor
inc
mov
mov
xor
test
jle
fdivl
sub
adc
sub
lock
and
dec
sub
fldenv
add
sbbl
sbb
enter
shlb
jo
les
fimuls
repz
je
insb
or
sbb
fisttps
shlb
nop
inc
xchg
out
mov
add
rorb
imul
pop
lea
cmpsb
and
dec
call
fimuls
fildl
lret
inc
shlb
iret
xorb
incb
clc
notl
nop
xor
or
shll
sahf
outsl
mov
cmp
out
mov
cli
inc
push
pop
cmp
mov
dec
into
loopne
dec
and
push
popf
xchg
mov
fwait
mov
push
in
pushf
sub
test
inc
jbe
loope
cmpsb
xchg
lods
movsb
xchg
sahf
fwait
cmpb
mov
lock
jg
outsl
sub
dec
sahf
push
dec
sub
sub
or
pop
andb
in
lret
sbb
adc
mov
jecxz
clc
ret
mov
push
addb
adc
daa
inc
test
mov
lret
xor
pop
add
and
add
push
pushf
in
mov
cmp
sbb
leave
pop
mov
cld
dec
jne
outsb
flds
cmc
js
xor
popa
loopne
movsb
sub
roll
mov
sbb
and
hlt
insb
mov
loopne
inc
cmp
add
les
xor
hlt
sub
push
pop
adc
adc
inc
push
out
je
mov
adc
dec
testb
inc
dec
mov
int
sbb
adc
add
push
xchg
add
idiv
scas
leave
in
sbb
push
sahf
addb
addr16
addl
roll
loop
into
fiaddl
add
xor
sub
pop
push
ds
or
shr
fisubrl
pop
xor
push
gs
mov
in
jg
or
faddl
roll
fldenv
int
push
inc
scas
daa
or
inc
cmpsb
fs
fldt
or
lods
pop
pop
lcall
pop
cmp
roll
fwait
xchg
test
jo
mov
cmp
cli
cmp
je
rol
fcom
cli
outsb
test
push
or
decl
lahf
xchg
js
sbb
inc
bound
inc
add
rclb
aam
mov
inc
aam
or
inc
xorb
mov
push
pop
adc
outsl
rorl
mov
ja
mov
daa
pop
dec
pop
jl
cmp
fsubp
movsl
xchg
popw
sbb
adc
in
shrb
insb
lock
sahf
xchg
lock
js
ds
ss
lds
filds
jno
and
fistpl
push
mov
inc
and
hlt
xchg
mov
mov
sbb
call
out
daa
or
xchg
icebp
lea
jg
mov
lds
inc
dec
xor
push
or
test
inc
repnz
out
roll
push
jle
sar
jecxz
sub
imulb
out
dec
mov
loop
jo
pop
call
mov
mov
and
std
neg
jmp
add
mov
mov
pop
xorb
mov
xchg
clc
adc
xlat
roll
aaa
push
add
outsb
mov
outsl
inc
imul
sahf
mov
sbb
je
arpl
and
sub
out
and
cmpsl
add
mov
aaa
pop
dec
adc
push
sub
xor
int3
jge
sbb
jbe
ss
add
xchg
fidivrs
add
mov
out
mov
int
cmpsl
ret
and
push
add
testl
fcmovbe
es
das
cs
mov
sti
ljmp
out
enter
sub
enter
sub
xor
jno
lcall
or
sbb
incl
add
mov
lods
jecxz
aas
or
cli
out
cs
jmp
ficomps
cltd
movsb
lret
sbb
sub
roll
cmp
mov
pusha
mov
add
pop
shlb
push
aaa
std
sub
xor
add
pop
adc
sbb
push
and
outsl
and
xor
mov
xor
mov
or
push
add
jle
cmc
outsl
adc
sahf
popa
inc
push
flds
imul
dec
or
xor
xorb
insb
pop
int
js
jbe
pop
mov
mov
loopne
bound
pop
fiaddl
scas
add
inc
jae
lock
and
mov
mov
adc
aas
inc
sbb
mov
mov
in
xor
or
add
inc
jl
fildll
jl
adc
test
aaa
adc
jmp
sub
xchg
nop
gs
shrl
pop
add
idiv
xor
sarb
add
test
cmp
pop
int3
mov
imul
ficoml
or
pop
add
adc
push
mov
mov
ss
ret
jnp
lahf
xor
sar
pusha
xor
stos
jge
push
mov
add
sub
xor
test
inc
pop
fs
cmp
out
outsl
xor
jno
test
sub
loope
mov
mov
dec
int3
roll
jg
lock
or
iret
inc
add
movl
jecxz
jl
inc
xchg
incb
sbb
ficoms
cli
incl
ret
mov
popl
lock
or
push
add
mov
sbb
sub
in
cwtl
pop
repnz
fdivrs
pop
mov
test
cmp
dec
outsl
mov
int
jne
shrl
ret
sbbb
jg
rcr
mov
mov
fcomp
addr16
test
xor
xchg
jle
mov
dec
loop
adc
mov
fs
sbb
aas
push
dec
mov
loope
push
push
mov
jno
adc
mov
icebp
pop
add
jmp
test
adc
mov
shll
mov
dec
pop
arpl
dec
xchg
ljmp
call
imul
scas
sbb
cmp
decl
dec
clc
jl
gs
repz
jno
sbb
add
loope
push
cmp
mov
xchg
push
dec
call
fsubrl
cmp
push
sbb
inc
cmp
mov
clc
cmp
adc
pusha
cmp
mov
or
cmc
movsl
orl
test
add
sti
dec
or
insb
sbb
pusha
inc
imul
sbb
cmp
decl
leave
imul
push
imul
fimuls
dec
add
mov
jecxz
loopne
mov
hlt
push
push
xchg
imull
or
lock
lret
jg
inc
lods
jns
gs
mov
fadd
sbb
jg
jle
lds
dec
and
add
sahf
iret
mov
pop
cmpsb
loop
pop
or
pushl
int
lcall
scas
cli
add
jecxz
dec
in
xor
inc
std
mov
or
xchg
adc
fs
sub
fiaddl
or
mov
and
push
dec
subb
loopne
in
xor
les
cli
fists
sub
cmc
inc
add
shrb
and
jae
push
mov
dec
push
ss
into
mov
inc
jmp
mov
enter
jnp
sub
xchg
lcall
fildll
loope
add
loopne
jo
out
xchg
mov
lcall
scas
jb
ret
jmp
mov
insb
sti
cmp
in
push
xchg
push
and
pop
dec
mov
into
cmp
adc
pop
bound
ja,pn
inc
push
imul
xor
lcall
inc
jo
pop
add
sub
sub
hlt
lcall
cld
testl
add
add
dec
movsl
xchg
or
adc
adc
icebp
sbb
sbb
mov
pop
mov
outsb
mov
dec
jmp
mov
les
xchg
scas
jb
add
call
inc
xor
ret
push
ljmp
add
push
clc
jns
pop
or
popa
push
jl
pop
ljmp
movsb
and
and
sub
or
push
fs
jmp
dec
adc
insl
lods
mov
cmovle
jmp
insb
jmp
or
enter
lock
insl
outsl
iret
movl
xor
es
out
mov
fs
cwtl
jmp
xchg
add
xchg
xor
pop
sarl
push
rolb
mov
and
call
mov
lock
adc
decb
scas
in
into
and
xor
mov
lea
add
shll
jo
xchg
nop
adc
sub
lods
dec
les
or
shlb
fidivs
incl
dec
pushf
loope
popa
jb
pop
loopne
ret
push
aad
sbb
xor
lcall
add
add
mov
push
das
fidivrs
lds
or
and
outsl
sub
and
loope
xorb
fildl
lock
add
sub
pop
adc
pop
sbb
hlt
int
adc
ret
mov
aaa
cmp
and
and
ljmp
dec
jp
pop
adc
das
outsl
mov
imul
les
outsl
out
mov
add
cld
sub
adcb
fsubr
and
push
in
addr16
xchg
mov
mov
xor
popf
cmp
and
dec
imul
cmp
adc
dec
inc
mov
ss
inc
push
inc
ljmp
jmp
xchg
pop
dec
test
add
shrl
fisubl
xchg
mov
std
jg
ret
add
lock
add
popa
xor
adc
or
pushf
mov
ret
mov
push
fwait
mov
push
clc
popa
jge
mov
jg
icebp
dec
enter
or
ret
lods
aad
ss
push
fcomp
xchg
fimuls
inc
pop
loope
aaa
adc
pshufw
dec
mov
add
mov
jbe
fiadds
xorl
mov
xchg
dec
and
push
das
mov
mov
inc
inc
jl
mov
test
in
ret
ret
mov
xor
push
mov
mov
lock
test
dec
sub
adc
dec
push
loop
push
je
inc
insb
test
lods
pop
mov
jecxz
xchg
rcl
pop
push
mov
fs
shll
and
aaa
cld
inc
cmp
test
in
xchg
lcall
push
fnsave
inc
loope
cmpsb
mov
jle
sarl
test
cli
dec
sub
push
push
pop
xor
dec
xchg
xor
pop
lock
lea
push
jno
ror
mov
push
inc
add
add
leave
mov
xchg
mov
pop
inc
imul
incl
mov
sub
inc
inc
add
sub
fwait
pop
jo
or
adc
xchg
mov
sbb
aas
sarb
sbb
fsubl
or
jo
push
cld
pop
shrb
daa
jp
movsb
ljmp
lahf
dec
cltd
ret
clc
pop
adc
inc
cmc
out
push
and
or
out
cli
mov
cmp
mov
adc
lods
adc
mov
loopne
fstl
pop
cli
mov
lock
xchg
pop
and
test
daa
fsub
and
mov
xor
outsl
adc
xlat
lods
les
push
popf
sub
rcrb
mov
loop
lods
imull
daa
pusha
out
stos
inc
mov
add
roll
insb
xchg
push
inc
dec
imul
lret
test
jge
aad
xlat
test
mov
sbb
cli
push
fwait
mov
pop
mov
xchg
dec
adc
fwait
mov
jg
cmp
pop
mov
mov
or
movsb
dec
pop
jmp
pop
call
repnz
xor
and
ret
fnstsw
vmovaps
lock
and
mov
xchg
push
inc
pavgb
inc
xor
call
jo
mov
clc
scas
fidivs
out
push
test
out
push
fwait
push
fcompl
movsb
add
xor
fildll
ret
add
or
fimuls
popa
fdivrl
xchg
sbb
or
inc
bound
jmp
jae
dec
mov
hlt
add
pop
fwait
test
inc
in
scas
rcll
push
lds
jmp
jns
ss
mov
fstps
jo
ja
inc
jmp
xchg
adcl
addr16
or
data16
and
shlb
cltd
push
mov
add
sub
jecxz
test
add
mov
fwait
or
sbbb
mov
and
jo
adc
adc
out
or
and
shrd
cli
aas
mov
sub
movsb
and
insb
faddl
add
hlt
xchg
mov
cmp
mov
in
addr16
jg
hlt
push
test
ror
sub
lds
jp
adc
add
and
sub
mov
jmp
rorb
jg
lock
mov
xchg
lds
scas
int
outsl
les
in
and
popa
fwait
call
fwait
leave
stos
or
ret
cmp
mov
movsl
mov
mov
idiv
das
cli
xchg
xor
mov
cmp
xorl
pop
test
xor
mov
or
sahf
jmp
outsl
cli
ljmp
push
jae
les
inc
test
sbb
push
sbb
inc
pop
ss
mov
inc
pop
hlt
xchg
push
pop
add
movb
andl
add
jbe
mov
pop
dec
xor
mov
out
push
add
jl
outsl
push
and
push
cs
sbb
sbbb
repnz
rolb
sub
std
jg
xor
adc
subb
mov
jge
pushl
es
xor
subb
inc
xor
incl
sbb
lret
push
sub
addr16
test
mov
aam
imul
and
inc
sbb
inc
or
pop
cmp
mov
loope
mov
loop
rcrl
or
sbb
xchg
lds
lods
inc
pop
leave
cmpsb
mov
xchg
nop
push
xor
pop
std
std
add
mov
dec
pop
and
movl
es
aad
inc
sub
push
movsl
push
and
push
mov
push
or
push
gs
or
jno
sub
mov
push
mulb
sbb
shrb
insl
orb
fildl
jae
mov
mov
cli
insb
xor
adc
xor
pop
xchg
cmpsl
pop
cmc
add
inc
fdivrs
xor
push
inc
ret
sahf
daa
inc
pop
sbb
fs
aam
mov
pop
pop
cmp
aam
clc
loopne
xchg
ljmp
loope
sbb
in
xchg
outsb
pop
or
sub
cs
xchg
xchg
push
xor
push
movsb
or
push
add
sbb
push
rcl
lret
jo
and
arpl
mov
push
jmp
add
rcll
gs
pop
lods
out
xchg
pop
ja
dec
adc
sbb
dec
inc
stos
mov
xchg
rorb
dec
movsl
imul
or
pusha
in
push
je
dec
icebp
mov
add
out
add
sar
scas
push
loope
push
mov
subb
leave
mov
sahf
sub
push
cli
aad
mov
or
mov
mov
dec
cs
pop
push
lock
fisubs
xchg
jle
mov
xor
or
xchg
test
incl
outsl
pusha
mov
shr
or
leave
outsb
mov
test
test
adc
and
or
call
mov
arpl
ja
roll
ret
push
xchg
cpuid
mov
add
das
fcoms
or
nop
push
hlt
mov
cmpsl
sbbb
fnstcw
jne
ret
xchg
aam
addb
int
adc
es
dec
add
sub
leave
testb
stos
xor
mov
mov
add
xor
sbbb
scas
test
hlt
jle
fwait
sbb
dec
sub
movsl
cmc
fstl
ret
and
inc
and
jl
into
sbb
clc
xchg
ret
push
daa
or
ja
sbb
int
or
add
adc
negl
cmp
cmp
aaa
std
das
dec
dec
into
sbbl
inc
add
fisubl
pop
lock
cmpsb
hlt
cld
dec
cmp
jg
arpl
cmpsl
iret
scas
out
jb
rcr
mov
mov
dec
lret
icebp
lods
or
orb
adc
inc
sbb
jbe
mov
cltd
dec
or
and
loope
inc
cmp
ret
xchg
nop
mov
test
xor
in
stc
scas
cmp
test
sbb
jecxz
push
lods
adc
inc
sti
pop
push
daa
enter
push
xor
cld
and
sub
push
and
or
inc
int3
cmp
jg
inc
pop
loopne
pop
fs
inc
add
dec
test
dec
jmp
les
add
iret
dec
inc
mov
mov
popf
les
int3
jb
jno
pushl
std
and
cmpsb
scas
jmp
jbe
stos
in
xorb
js
arpl
lods
mov
jle
orl
jge
xchg
fisttpll
jno
mov
lea
movb
adc
and
mov
idivb
xchg
mov
ret
mov
jnp
add
adc
fildll
cld
clc
stos
push
shlb
add
popf
add
mov
xchg
sarb
loop
loopne
and
cmp
xor
fs
push
and
fists
in
pop
sbb
jmp
xchg
cmp
lcall
gs
and
sbb
lcall
sbb
aam
daa
mov
adc
mov
outsl
je
xchg
inc
movb
sti
scas
inc
mov
lds
ja
leave
xor
pop
push
loopne
sub
fcoml
cmpsb
jl
dec
outsl
subb
fs
mov
pop
sbb
pop
pop
xor
add
cmp
shlb
fsubrs
stos
push
sub
push
jp
jno
stos
clc
add
jbe
call
cli
test
push
fdivrs
mov
mov
int
cli
xchg
adc
iret
inc
and
in
sbb
leave
push
int3
fisubs
mov
push
push
test
cmp
call
in
xchg
sbb
or
xor
decl
cmp
add
sub
js
insl
jmp
stos
mov
pop
hlt
cwtl
and
aam
sub
add
xchg
push
xchg
sub
jge
call
pop
loop
loope
push
dec
pop
and
rcl
push
ret
out
mov
rcrb
mov
xchg
stos
in
mov
mov
lcall
aaa
jg
cli
push
movsl
mov
ljmp
ljmp
stos
push
dec
sar
cltd
test
daa
mov
popa
lea
fcmovnb
dec
mov
mov
pop
arpl
addr16
and
push
and
push
sub
jg
cld
shlb
cmp
mov
ljmp
mov
xchg
icebp
das
sbbl
mov
or
jl
insb
xor
movsl
mov
lock
pop
sub
fsts
xchg
psraw
repz
test
vprotd
test
inc
ss
xchg
xor
scas
mov
test
dec
aam
xor
sbb
inc
add
xor
dec
dec
adc
pop
cli
jbe
outsb
es
cmp
out
inc
ret
cmpsb
jmp
decl
hlt
and
inc
lahf
pop
iret
jae
cmp
sbb
into
les
cld
jg
xchg
mov
outsb
pop
sbb
ljmp
movl
xor
clc
pop
fcompl
pop
adc
fisttpll
adc
movsl
and
aaa
add
mov
adc
ret
sub
mov
and
sbb
add
or
add
mov
rol
mov
lret
fmuls
push
test
mov
pop
lods
orl
fstpt
andl
aas
dec
lahf
mov
push
xchg
lret
jno
adc
push
das
ljmp
popf
xchg
jg
pop
sub
out
xchg
cmp
xor
or
fcompl
incl
inc
movl
mov
pop
les
adc
outsb
fwait
pushf
push
add
decb
pop
sub
mov
cmp
cmc
ljmp
lods
and
fsubrl
mov
mov
addb
in
xchg
sbb
les
cmp
sbb
jmp
pusha
mov
xchg
push
punpcklbw
bound
push
fsubs
es
pop
xchg
outsl
pop
dec
test
pushf
adc
jg
jle
mov
or
mov
dec
out
ret
mov
aas
nop
test
jmp
xchg
mov
dec
icebp
adc
out
mov
push
sub
cs
shl
add
push
subb
cmp
and
lock
in
popa
cmpsl
push
adc
loope
scas
add
stos
and
js
push
incb
or
push
sub
inc
inc
cmp
push
das
xchg
cld
or
repnz
jge
ljmp
adc
mov
or
mov
insb
rolb
popf
jno
and
fistpll
inc
ljmp
pop
lock
dec
insb
inc
mov
mov
jp
rorl
sub
shrb
or
outsb
push
and
shll
test
mov
mov
addr16
movsb
cmp
pop
lret
aam
ret
mov
movsl
lcall
pusha
and
dec
in
add
jno
or
lcall
fistps
bound
movsb
jo
xchg
push
inc
jg
pop
ret
inc
shl
arpl
sahf
mov
clc
mov
fldl
movsl
popf
pop
jle
push
int
add
ljmp
dec
jb
sbb
out
push
fisttpll
int3
cmp
add
stos
scas
cmc
add
pop
add
mov
test
ja
push
sub
xor
cli
fdivr
outsl
shll
ljmp
xor
cli
scas
dec
pop
dec
mov
xchg
mov
add
imul
jge
stos
inc
jge
push
adc
push
fnstenv
bound
mulb
cmc
aas
orb
pop
add
push
lret
sub
cld
add
or
mov
fcmovnbe
stos
subl
lret
mov
push
mov
mov
sbb
cwtl
das
sbb
outsb
shlb
and
pop
cmp
lock
pop
and
mov
popaw
mov
xchg
lock
xchg
sbb
add
shl
pop
fmull
cmpb
shl
std
xor
lods
and
jne
xchg
mov
sub
test
pop
adc
mov
sbb
fbld
int3
sub
ret
or
mov
adc
mov
rcrb
fnstenv
push
add
es
ss
rclb
xor
addr16
and
lock
lock
int
aam
add
push
call
push
imul
clc
fs
sar
cvtpi2ps
pushf
repnz
call
add
pop
push
fucomp
in
pop
sub
pop
xor
fs
adc
sub
mov
adc
pusha
push
xchg
std
decl
dec
aaa
sub
push
in
lods
mov
outsb
xor
cmp
in
mov
cltd
cli
hlt
mov
or
dec
ss
imul
cwtl
call
mov
clc
add
sbb
mov
stos
adc
sahf
inc
insl
iret
or
push
cwtl
and
dec
dec
into
pop
loope
push
dec
lret
mov
nop
push
mov
pop
std
add
xlat
xor
pop
mov
out
cltd
and
pop
std
pop
les
repnz
icebp
in
ret
loopne
xor
dec
sbb
mov
lds
in
roll
lea
lds
ficoml
mov
ficomps
pop
cld
bound
stos
push
inc
add
add
xlat
inc
or
push
in
insl
cld
pop
and
add
or
or
mov
push
or
dec
clc
mov
test
xchg
and
mov
out
xor
inc
and
je
test
js
push
push
les
cmp
push
cmc
incl
jmp
and
loopne
xchg
rcrb
pop
jmp
xlat
add
hlt
ret
add
push
push
mov
aaa
add
add
lret
or
push
pop
clc
aaa
in
cmp
sub
sub
jl
xor
sbb
lahf
clc
cli
lret
test
aas
mov
repnz
and
in
sbb
push
mov
mov
stos
mov
lret
push
fldenv
xor
xchg
xchg
xchg
flds
xchg
aam
push
or
lods
dec
and
gs
cs
sub
rclb
adc
addr16
add
jbe
push
icebp
sub
cld
pop
xchg
mov
inc
fs
pop
jo
push
mov
xor
lret
test
int3
or
xor
xchg
jo
lods
aam
cmpsb
xor
stos
mov
loopne
pushf
movsl
fdiv
mov
jl
xor
subps
xchg
dec
call
std
testb
aam
sbb
cmp
test
mov
mov
xlat
sbb
adc
scas
xchg
cli
movsb
sbb
insb
push
cmp
in
rorb
lds
jg
cmpsb
shr
dec
ss
sub
mov
loopne
push
sbb
sub
loope
jb
push
into
dec
mov
sti
mov
or
stos
jb
cmp
cmpl
push
lea
sub
cmpsl
std
fildll
mov
sub
in
mov
push
lock
xor
stos
inc
mov
addl
mov
mov
sub
dec
insb
or
aaa
cld
sbb
xorl
mov
push
lods
sbbb
xchg
sbb
inc
mov
loope
dec
or
dec
gs
mov
pop
push
adc
js
sub
sbb
subb
cli
scas
nop
in
or
mov
jno
adc
dec
mov
idivl
adc
enter
dec
push
test
push
ret
insl
aam
and
add
mov
or
test
push
aaa
push
add
out
adc
mov
push
iret
ret
sahf
out
addr16
nop
pop
xchg
aam
mov
pop
mov
or
loope
mov
call
shl
sbb
jge
xchg
push
xor
pushl
in
mov
adc
push
mov
mov
je
inc
adcl
xchg
pushf
push
fcmove
jbe
and
leave
shlb
sar
les
lds
add
push
stos
test
pop
incl
cld
xor
xchg
inc
test
pop
dec
loop
fcomip
jbe
jg
sti
arpl
lahf
aaa
fsubr
loope
mov
jae
inc
stos
adc
hlt
pop
mov
orl
in
stos
ret
push
mov
cli
aam
push
jge
fcoml
fmull
mov
xor
rol
inc
jecxz
cli
sub
cmpl
leave
xchg
inc
mov
sub
push
mov
xor
popa
dec
fimuls
mov
xchg
lock
jecxz
pop
test
into
push
pop
push
jne
test
test
cli
ds
incl
xor
ss
gs
imul
jg
or
cltd
imul
jnp
sbb
arpl
popa
pop
dec
mov
andl
ja
push
scas
clc
sbb
outsb
inc
jl
addl
dec
rclb
jecxz
clc
mov
pop
jp
int
mov
sbb
xchg
mov
loop
mov
xor
adc
adc
rclb
cmp
loop
xor
mov
cmc
and
add
mov
std
daa
sbb
or
mov
push
scas
push
fs
es
cmp
and
inc
mov
hlt
jmp
mov
mov
je
les
push
lcall
nop
rclb
pop
scas
mov
sub
inc
cli
test
add
clc
aaa
pop
scas
mov
jns
sbb
pusha
or
rol
sub
rcr
add
pop
add
aas
sbb
pop
fwait
push
dec
loop
xchg
stos
ror
sub
jl
gs
mov
jmp
cmp
jmp
insb
nop
dec
enter
ljmp
ljmp
mov
decl
gs
movl
push
pop
mov
clc
cmpsb
ljmp
incl
icebp
cli
inc
in
xchg
add
insb
pop
adc
mov
rcrl
repnz
add
int3
cwtl
dec
leave
mov
fldenv
jnp
mov
jb
sbb
adc
lods
mov
mov
push
or
inc
pushf
jecxz
cmp
xchg
sub
dec
cld
xchg
in
and
push
insl
push
in
out
mov
add
pop
xorb
jbe
xchg
popa
dec
sbb
sub
or
adc
aad
dec
sub
ret
xchg
scas
clc
aaa
dec
cmp
imul
mov
addl
outsb
dec
xchg
lahf
push
ja
xchg
fwait
mov
dec
imul
xchg
sbb
and
adc
add
test
sbb
lcall
test
mov
adc
push
mov
mov
and
test
mov
push
sarb
sub
fwait
add
mov
test
or
xchg
ret
push
jb
ficompl
inc
jne
mov
roll
mov
and
mov
sub
in
cmpsb
mov
push
dec
clc
jmp
sub
or
scas
dec
cmc
sbb
jle
dec
fsubl
push
xorb
inc
bound
sti
pushl
cltd
sbb
cmp
int3
fildl
mov
inc
jns
jle
sar
xchg
seto
inc
sbb
into
mov
xor
jmp
or
sbb
and
inc
push
pop
pop
xlat
cmpb
sub
mov
inc
test
mov
lock
sbb
pusha
loopne
xor
mov
and
mov
in
or
xchg
outsl
mov
fidivl
sbb
popa
xor
iret
dec
add
call
test
pop
or
sbb
ljmp
pop
gs
in
mov
test
or
out
pushf
jg
push
enter
sub
mov
aam
push
lcall
add
rcrl
adc
in
cmpsb
pop
sbb
ret
fwait
aam
push
pop
inc
andb
cmp
std
jnp
mov
fldt
out
cli
adc
fadds
lds
or
ror
out
xchg
xor
incl
adc
ds
mov
xchg
push
pop
mov
or
pop
scas
dec
insl
imul
stos
sbb
cmc
and
push
push
and
out
addb
adc
mov
movsb
sahf
mov
add
push
leave
fwait
inc
popa
mov
pop
pop
mov
mov
call
lds
and
sub
pusha
xor
push
test
fsubl
push
and
outsl
test
and
insb
ljmp
test
or
or
cmpsb
pop
leave
cmpsb
loop
xor
or
pop
lock
aaa
je
push
adc
lea
dec
orb
nop
aam
xchg
int3
je
in
pushl
call
inc
insb
pop
jnp
mov
loopne
jns
push
test
mov
sub
daa
and
mov
xlat
incl
xchg
iret
jb
xchg
jmp
adc
xchg
je
dec
and
push
jb
pop
incl
add
movsl
mov
adc
call
add
inc
sti
jge
dec
stc
mov
mov
sub
push
add
mov
icebp
aas
xchg
loope
cmc
call
xchg
mov
jae
cli
and
mov
xor
dec
test
neg
incl
outsl
push
jge
lods
or
mov
jmp
pop
cmc
mov
mov
and
xor
cmpsl
push
sbb
mov
movsb
jg
or
js
sub
cld
andb
xchg
xchg
add
inc
jmp
push
add
mov
and
call
dec
xchg
mov
in
out
adc
mov
xchg
ds
sbb
clc
and
add
fbld
sbb
ja
or
ja
stc
jb
jl
gs
dec
sbb
int3
dec
inc
imul
xor
pop
cmp
push
leave
push
jb
stos
cmp
and
sbb
movsb
orb
popf
dec
jne
lea
pop
sub
adc
adc
dec
mov
cli
push
mov
adc
push
es
test
mov
fs
add
incl
sti
std
xchg
jecxz
mov
push
cmp
pop
fcomip
and
or
loopne
aam
es
loope
decl
leave
cmp
rolb
or
mov
data16
fistps
mov
pop
sbb
jb
inc
movsl
notb
xchg
hlt
or
les
imul
lods
mov
je
xor
aaa
cltd
into
test
dec
rcr
cmp
test
jg
mov
push
dec
jmp
or
hlt
xor
sub
les
lcall
and
data16
xchg
sbbl
mov
frstor
das
test
add
jns
add
and
aad
sbb
add
adc
aaa
inc
and
mov
loope
pusha
inc
js
repnz
add
icebp
inc
sar
dec
and
and
std
mov
daa
mov
icebp
dec
mov
pop
sub
nop
sbb
cmp
sahf
sub
pop
fnsave
clc
psrad
imul
jmp
insb
inc
inc
dec
lret
int
adc
pop
inc
inc
rorb
push
fwait
inc
enter
jne
call
bound
fidivrl
mov
ret
jecxz
adc
test
cs
jecxz
inc
addb
sti
in
cli
jg
inc
pushf
lcall
ret
and
aas
mov
jno
inc
mov
mov
nop
out
stos
ja
xor
shll
jne
cmpsb
insb
adc
sub
sub
ret
mov
clc
notb
mov
mov
enter
add
push
mov
and
incb
pop
add
mov
push
and
push
bound
sbb
and
jbe
sarl
mov
pop
rorb
mov
jp
adc
out
jg
bound
xchg
movsb
cs
bound
lret
out
repnz
into
cmpsl
cmpsl
mov
xor
mov
rorl
jle
dec
xchg
mov
xchg
xor
mov
cwtl
test
jb
shrb
push
xor
fnstsw
cmpsl
mov
and
js
insb
xchg
xor
inc
push
and
hlt
les
popf
lcall
and
mov
jns
xor
push
jl
test
inc
jmp
adc
xor
faddl
sbb
cmp
test
sub
pop
dec
add
inc
adc
jno
out
mov
jg
les
rcr
mov
aas
mov
cmpb
int3
inc
inc
stc
pusha
mov
call
loope
push
push
ret
sbb
xchg
inc
and
pop
fisttpll
sbb
cs
loope
dec
xchg
iret
ljmp
cmp
incl
push
hlt
sub
enter
add
pushf
scas
enter
cs
call
clc
mov
sbb
aam
dec
mov
mov
mov
add
mov
push
nop
cli
inc
adc
mov
cmp
mov
dec
not
mov
mov
or
mov
mov
jmp
push
pop
clc
mov
xchg
ljmp
xchg
mov
into
cld
xchg
push
ret
or
add
pusha
add
mov
push
or
jge
test
cmp
adc
sub
sub
or
rclb
aam
jb
mov
or
insb
popa
pop
push
lock
and
xchg
shlb
out
pusha
das
xor
mov
xor
mov
dec
dec
cmp
inc
in
or
sub
stc
movsb
dec
clc
outsl
dec
data16
icebp
xchg
cmp
jge
sub
dec
les
ljmp
sbb
jecxz
xor
imul
sbb
or
inc
push
xorb
push
xor
es
add
dec
adc
inc
sar
push
fidivrl
aam
add
inc
xor
lock
lock
add
add
adc
dec
add
fimull
jbe
cs
gs
adc
aas
fwait
jp
add
sbb
xchg
insb
push
leave
addb
jbe,pn
pusha
push
inc
adc
cmp
decb
sub
add
dec
sti
xor
aam
xor
addr16
mulb
out
pushf
pushl
cld
jg
icebp
sbb
test
sarl
andb
xchg
and
and
pop
mov
mov
inc
and
es
xchg
arpl
bswap
lock
cmp
jo
jp
daa
ss
mov
nop
and
fs
popa
pop
push
jecxz
jmp
lods
fstl
mov
test
adc
shlb
ss
jnp
lods
inc
add
inc
mov
cli
arpl
ret
dec
mov
in
or
xchg
lea
lcall
cld
ret
pop
inc
inc
pop
inc
mov
popf
dec
mov
ret
mov
pop
inc
xor
mov
mov
jl
jbe
test
pmuludq
ret
mov
imul
popa
and
xchg
in
into
xchg
inc
lret
or
add
jne
push
push
xchg
and
push
sahf
icebp
adc
rol
nop
cli
add
enter
mov
and
out
jo
push
push
xchg
cli
outsb
push
push
mov
pusha
lea
movsb
fimuls
mov
rorb
cli
jb
insb
push
in
aam
add
ds
xlat
and
pop
or
jns
cmpsb
mov
call
int3
jno
lea
ret
ret
mov
addb
cmp
cmpl
push
addr16
lods
pop
jnp
hlt
mov
adc
xor
push
mov
jno
jp
jno
imul
adc
sbb
pop
rcrl
test
mov
loop
cmp
cmp
shl
push
dec
sub
popa
out
jle
mov
inc
sub
out
lods
cmp
mov
lods
cltd
in
push
adc
inc
xorb
arpl
dec
sbb
mov
and
cs
dec
xchg
pop
test
inc
sub
outsl
dec
fildll
xor
daa
jl
imul
cltd
scas
clc
pop
sbb
lds
iret
mov
repz
lods
bound
cli
bound
jmp
or
decl
ret
xlat
dec
inc
loop
je
mov
mov
xor
jmp
push
cwtl
gs
inc
sbb
sbb
and
mov
sbbb
ret
jg
js,pt
cli
sbb
mov
int
xlat
ret
dec
xchg
subl
cli
loope
pop
dec
jne
mov
aas
sbb
pop
std
pop
mov
mov
xchg
xor
push
and
ret
loopne
test
enter
mov
mov
adc
jno
inc
xchg
jle
lahf
fildl
pop
lahf
dec
cwtl
and
xor
xlat
add
dec
adc
mov
or
mov
dec
ficomps
push
pop
icebp
out
clc
fisttps
pop
call
inc
dec
sub
roll
xor
es
ljmp
outsl
add
in
orb
subb
mov
add
das
inc
loop
pop
or
xor
mov
mov
aaa
sbb
and
aam
mov
push
xchg
jp
shrl
mov
jmp
push
jle
xchg
add
jmp
mov
dec
or
mov
or
push
rcl
ja
shl
adc
mov
or
scas
pop
sub
sbb
mov
push
pop
ljmp
add
sub
fwait
push
inc
dec
pop
sbb
add
ret
inc
fisttps
out
sarl
stos
pop
xorb
cld
sub
cmpl
mov
mov
shll
cs
outsl
lods
inc
out
gs
sbb
cli
incl
fwait
fwait
mov
shlb
lock
incl
cmp
and
ret
shll
in
or
cmp
mov
fsubrs
xor
xor
xor
push
or
lcall
add
sahf
adc
sarb
sar
mov
inc
leave
movsl
xchg
in
cmp
sbb
int3
repz
push
jp
pop
mov
mov
mov
pushf
scas
test
jl
mov
gs
adc
test
lods
sahf
pop
fcoms
push
mov
mov
or
loopne
add
pushf
pop
jae
fs
jmp
inc
push
loopne
cmpsl
push
inc
xchg
lret
xchg
ds
fcos
lcall
mov
in
mov
icebp
or
inc
mov
scas
cli
jb
mov
sti
pusha
push
inc
xchg
mov
lret
cmp
add
lods
mov
in
inc
push
mov
push
xchg
incb
sub
jnp
sbb
xchg
shll
cli
outsb
or
arpl
pushl
les
xor
inc
addr16
dec
pop
cld
mov
jmp
imul
and
insb
lock
xor
or
push
mov
mov
dec
cmpsl
out
and
add
cmc
cmpl
xchg
dec
lock
mov
enter
jmp
fidivl
pop
add
and
test
insb
ljmp
jns
movsb
or
subl
lea
nop
mov
pop
xor
jo
pop
mov
rolb
mov
mov
mov
pop
and
jg
xchg
jb
aas
cmp
in
jmp
in
dec
pop
xorb
jp
xchg
out
insb
aam
fs
ja
mov
or
cwtl
mov
lret
fsubrl
mov
daa
jno
mov
mov
decl
loope
push
sarb
or
push
outsl
insl
lret
loop
js
push
int3
xor
call
rolb
std
jo
inc
ret
jb
aas
sahf
hlt
incl
xchg
dec
mov
test
mov
mov
imul
jae
aad
add
pop
inc
cmpsl
pushf
jns
orl
mov
add
hlt
push
xchg
mov
imul
and
push
add
lock
xor
ret
mov
hlt
lret
filds
fistpl
push
ficomps
dec
and
sub
mov
std
outsb
les
mov
mov
clc
incl
mov
adc
inc
adc
cmpsb
jne
pop
xchg
jmp
or
xor
cmp
sub
out
clc
cmp
int3
scas
jne,pt
sbb
rcrb
mov
xor
imull
incl
push
stos
inc
adcl
mov
xchg
pop
jmp
inc
dec
enter
std
xchg
inc
add
adc
or
xor
mov
push
push
js
fcoml
xchg
clc
push
dec
mov
or
lcall
mov
cs
cmp
mov
cmp
dec
fldenv
sbb
ljmp
cmp
pop
add
dec
xor
cmp
dec
daa
or
xchg
mov
lcall
jmp
mov
rcrb
sbb
dec
dec
and
sub
sbb
mov
xorl
adc
call
fcompl
jno
rep
cmp
mov
xchg
dec
xchg
clc
rcr
aas
add
loope
pop
mov
xchg
cs
outsb
ss
dec
push
mov
jg
ljmp
pusha
flds
loopne
push
fildll
jl
ud0
or
call
movsl
std
sub
ror
inc
stc
mov
rolb
scas
sub
and
cmpl
pop
mov
data16
mov
xchg
add
inc
inc
cmp
pop
outsb
add
cmp
nop
bound
orb
aaa
mov
je
add
push
xor
mov
xorl
aaa
xchg
ret
or
loop
daa
jb
idiv
jmp
push
xor
lea
hlt
mov
inc
dec
xchg
sbb
jl
es
das
popa
sbbl
jecxz
inc
les
xchg
mov
std
xchg
stos
push
xchg
or
cmpsl
sub
dec
cmp
cmp
sbb
push
rcrl
mov
mov
mov
cmp
nop
popf
fcom
movsl
mov
imul
test
mov
bound
push
adc
cmp
cs
shrb
lahf
inc
outsb
out
sbb
add
mov
or
cli
data16
jp
pusha
aam
pushf
outsl
xchg
mov
jno
lods
in
mov
add
fistl
xor
fbstp
sbb
mov
pushf
fnstcw
or
fwait
adc
sbb
ja
xchg
add
inc
clc
out
sub
bound
pop
hlt
sbb
mov
push
imul
scas
mov
sbb
cs
push
movl
mov
inc
ljmp
inc
loop
inc
xorb
lock
in
hlt
sbbb
jg
neg
xorb
mov
jmp
mov
cmpsb
mov
add
scas
adc
sbb
push
push
sub
lret
and
popf
out
sbb
push
ficompl
data16
ja
xchg
xor
pop
add
sbb
lods
adc
add
jge
loopne
mov
pop
mov
add
push
add
dec
mov
pusha
mov
dec
jg
lock
xchg
ret
decl
js
mov
cmpsb
test
and
orb
xchg
inc
push
adc
test
js
mov
inc
stc
ljmp
inc
call
rcll
gs
mov
test
mov
test
jmp
dec
outsl
and
adcb
pop
push
xchg
scas
jne
adc
push
inc
cli
decl
xchg
loopne
std
and
sbb
or
nop
subb
push
decl
call
and
or
movsb
lahf
xor
stos
sbb
popa
cli
scas
xor
mov
fisubs
jp
loope
adc
jnp
or
imul
mov
xchg
push
cwtl
sub
jmp
cli
pop
lcall
push
popf
mov
xchg
dec
mov
dec
int3
dec
bound
movhps
ljmp
inc
mov
mov
push
mov
adc
dec
loopew
testl
movsb
sub
loopne
dec
sub
les
mov
leave
mov
mov
pop
popa
or
adc
testb
in
mov
fidivrs
dec
and
mov
or
je
sbb
fdivl
cmp
dec
jns
call
adc
pop
jno
push
leave
cld
mov
lods
add
inc
or
pop
je
or
clc
lock
call
xchg
dec
je
dec
orl
loopne
jns
sub
push
xchg
fnstsw
mov
dec
xchg
adc
pop
out
adc
add
ljmp
jne
cmp
mov
xor
push
cs
jp
adc
pop
test
pushf
mov
push
rorb
pushf
mov
mov
negb
add
cmp
hlt
ja
and
xchg
sub
push
std
fsubs
sub
pop
jge
sbb
pop
pop
pop
add
lret
call
andl
into
test
lds
xor
ret
push
test
sahf
jle
mov
test
push
fildll
adc
and
insb
sbb
push
mov
add
lea
filds
cmp
loop
jle
sbb
or
in
jns
cmp
imul
mov
add
and
jbe
pop
lret
sbb
mov
sahf
and
mov
add
adc
pop
fisubs
jp
ret
cli
fcomip
cmp
push
add
cmp
adc
decl
scas
sub
in
inc
and
jmp
ljmp
in
cmc
rclb
xor
xor
cmc
xor
mov
pop
pop
jno
test
rcrb
insl
jmp
mov
out
inc
pop
jmp
rcrb
pop
xchg
cmp
loop
mov
push
call
movsb
dec
lds
jne
lock
xchg
hlt
sbb
pop
dec
out
movsl
aaa
adc
or
imul
pop
cmpsl
adc
mov
fldl
jecxz
sahf
outsl
aad
adc
or
inc
lds
dec
int3
push
shlb
cltd
icebp
push
jl
sub
sbb
loope
sub
jg
add
jbe
jb
mov
push
fsts
test
nop
add
test
mov
nop
ds
dec
mov
and
push
sbb
jp
xchg
lock
cmp
or
sub
icebp
incl
cmp
repnz
mov
outsb
test
lahf
adc
mov
stc
fldenv
bound
and
aam
adc
add
jle
addb
call
ss
stos
ljmp
ficomps
cmp
or
sbb
xor
cmc
xchg
int
fdiv
js
mov
aam
xchg
xor
bound
mov
dec
dec
adc
ss
mov
sub
scas
mov
pop
sub
adc
test
ret
bound
ds
ss
ror
mov
dec
mov
jmp
aam
jl
adc
push
xor
rorl
movsb
rclb
pop
xor
cmp
shll
mov
add
xchg
movsb
out
and
scas
adc
add
repz
cld
incl
jmp
sbb
push
stos
cwtl
int3
add
cmp
jmp
les
cmp
enter
fnstenv
jg
mov
stos
push
or
sbb
mov
adc
inc
sub
mov
jle
pop
nop
in
inc
jg
push
push
mov
add
add
mov
xchg
hlt
add
add
mov
sbb
sbb
xor
cmp
inc
mov
jnp
xor
xchg
and
imul
out
sub
das
pop
inc
cwtl
or
add
scas
call
mov
incl
nop
inc
fisttps
xor
fldl
push
push
lea
jo
gs
enter
jmp
mov
popf
andb
push
xor
or
adc
mov
cmp
fcomps
daa
jecxz
dec
clc
xlat
cwtl
rorb
push
jnp
lret
hlt
mov
rorl
sbb
cli
inc
stos
add
cs
stos
shrb
mov
dec
les
cmp
int
mov
int
jmp
shl
pop
jmp
cltd
cmp
aad
push
xchg
sub
fwait
out
push
ljmp
mov
pop
adc
fisubrl
add
or
or
mov
xchg
cmc
add
hlt
xchg
test
inc
adc
add
xor
xchg
addr16
add
fidivl
xchg
ljmpw
ljmp
pop
cltd
add
inc
mov
sbb
jbe
ss
fnsave
mov
inc
pop
add
mov
pop
shll
inc
fistpl
mov
rcl
sbb
xor
mov
push
sti
mov
cmp
or
sub
cs
call
inc
fsubs
dec
fisubs
or
push
push
call
in
aad
loope
inc
jle
enter
ljmp
shrl
fdivl
subl
pushf
imul
push
cmp
test
mov
jecxz
mov
or
outsl
xchg
dec
out
stos
fs
push
data16
xchg
test
cs
popa
dec
pop
add
lret
and
test
push
jb
aas
jbe
mov
sbb
popf
js
inc
adc
push
jl
fdiv
arpl
add
adc
fs
cld
adc
cmp
arpl
inc
out
push
fdivrp
out
inc
fidivrl
pusha
jns
fst
ja
sub
mov
dec
xlat
arpl
or
jo
push
dec
std
dec
add
push
xchg
imul
cmp
ja
js
mov
cli
add
xchg
inc
popf
adc
sub
dec
out
and
inc
mov
dec
xchg
xor
lcall
xchg
mov
out
jb
pop
xor
cmp
sub
orl
mov
divb
lods
rorl
xorb
cs
sub
and
cmpsl
mov
ljmp
int
mov
xchg
jl
mov
out
add
lahf
add
mov
and
nop
or
jnp
mov
or
jne
shr
loopne
outsb
xchg
jle
adcb
dec
xchg
daa
popa
cmc
inc
jl
xor
lock
cmp
hlt
mov
sbb
dec
push
sub
sbbb
and
ret
ret
add
jg
es
je
popf
out
sub
aas
xor
xchg
adc
sbb
mov
mov
push
das
shlb
sub
fs
or
orb
ss
xchg
add
aas
jo
loope
mov
adc
pushl
push
push
inc
out
cwtl
adc
jp
test
mov
xor
test
jge
pop
icebp
clc
mov
pop
repnz
sbb
push
les
mov
outsl
fmuls
dec
push
sbb
aad
aad
test
adc
pop
mov
nop
nop
in
adc
mov
push
lods
mov
xor
bound
addr16
pop
add
push
add
jecxz
ljmp
xlat
pusha
xchg
add
jg
dec
inc
sbb
jno
data16
nop
lods
loope
lods
outsl
aas
push
cwtl
jmp
ds
negb
cmp
and
push
subl
pop
jo
inc
adc
call
xchg
cmp
loope
loop
mov
add
testb
cmp
jmp
scas
push
inc
dec
mov
mov
sahf
sbb
sub
mov
cmpsb
insl
test
sub
outsl
stc
adc
xchg
xchg
dec
cld
jg
xchg
scas
mov
loop
add
xchg
incl
sbb
lods
mov
sbb
jecxz
mov
pop
jmp
mov
add
ljmp
sub
ret
adc
dec
cmp
pop
fisttps
data16
add
push
idivb
je
jl
inc
push
jmp
sbb
sub
pop
testb
mov
add
mov
jp
ret
inc
sbb
xor
cmpsl
adc
leave
mov
les
incl
push
mov
mov
pushf
inc
in
xchg
hlt
or
call
call
nop
jle
jg
add
shlb
cmp
mov
mov
mov
insb
fs
jmp
sub
mov
out
mov
xchg
lods
decl
push
int3
pop
lahf
dec
xor
aas
jecxz
push
testb
or
xor
int
inc
pop
push
insl
ss
ljmp
aas
jecxz
inc
dec
pushf
xor
cmp
sbb
push
test
fcomi
and
ljmp
inc
daa
inc
xchg
je
and
xchg
enter
lds
ds
in
fidivrl
ret
adc
dec
add
fstpt
jbe
cld
jb
jecxz
add
rcrb
aam
test
ror
pop
mov
aas
clc
ja
call
in
mov
cltd
xchg
inc
fwait
imul
push
xlat
inc
mov
mov
jge
in
test
stc
push
dec
push
int3
fcos
scas
cli
lcall
es
xor
mov
pop
shrl
push
jmp
scas
sub
sub
call
add
aad
cmp
fcomps
add
xchg
test
je
outsl
or
dec
mov
inc
leave
stos
or
shlb
sbb
sbb
dec
mov
xchg
lods
decl
add
cmp
test
mov
push
mov
cmp
mov
notb
les
mov
jmp
cmp
insb
add
pusha
lcall
incb
nop
dec
dec
xor
pop
mov
gs
movsb
cmp
sub
test
mov
fnsave
mov
insb
loope
pop
sub
push
and
fwait
call
inc
mov
adc
inc
cmp
clc
or
jg
pop
adc
js
or
and
lret
loope
push
pop
loope
sub
inc
mov
jmp
add
cltd
and
in
loopne
mov
movsb
int
shl
mov
adc
jmp
push
adc
in
mov
sub
hlt
add
xchg
xor
js
js
sbb
sar
mov
fidivs
aaa
add
lahf
xor
adc
mov
lea
xor
int
cltd
pop
push
sahf
pop
fdivr
pop
xlat
xor
aas
mov
sbb
daa
xchg
popf
sub
scas
or
lcall
lock
or
push
dec
jecxz
and
mov
xor
xchg
sbb
add
lods
aas
mov
xchg
xchg
rcrl
xchg
xchg
and
into
xchg
out
xchg
fstpl
call
test
mov
sub
lds
jno
mov
dec
cs
sub
jp
xchg
dec
fistpll
std
or
adc
jge
jecxz
xchg
mov
orb
jle
xor
clc
or
add
dec
mov
arpl
ret
testb
int
pop
sbb
jl
jmp
push
fildll
inc
in
mov
ljmp
cmp
stos
push
fidivrs
out
and
inc
bound
or
and
xchg
push
inc
loope
pop
filds
push
movsl
mov
push
sbb
xor
mov
loopne
fidivrl
int
mov
dec
xchg
xchg
mov
pop
imul
aaa
gs
aam
hlt
or
jg
xchg
in
and
add
insl
inc
sbb
shrb
cmp
insb
and
mov
mov
jge
rolb
cmp
scas
add
jb
and
push
inc
flds
lock
je
add
jbe
idiv
ja
pop
sub
int3
xchg
jl
lea
push
add
movsb
nop
cmp
mov
xchg
mov
je
clc
nop
lock
ret
dec
loopne
pop
push
mov
ds
xchg
aaa
imul
adc
xor
mov
pop
in
nop
xor
dec
inc
xor
or
rcll
stos
inc
jb
dec
xchg
adc
xchg
add
jne
lds
inc
loop
push
insl
les
shl
fwait
mov
and
mov
push
aaa
cld
into
add
dec
push
inc
mov
movsb
push
aam
jle
push
or
or
xor
pushl
xchg
push
dec
addr16
pop
insl
mov
or
mov
nop
pushl
imul
push
rolb
jecxz
outsb
sbb
sbb
xlat
or
data16
ja
dec
cwtl
mov
fadds
dec
cmp
addl
test
shl
outsl
or
mov
in
or
ljmp
push
imul
dec
outsl
icebp
jmp
out
cmp
lret
jns
pop
or
inc
stos
imul
bound
dec
pushf
inc
or
sbb
test
push
and
mov
mov
lods
ja
loop
pushf
dec
xchg
mov
popa
add
push
decl
adc
loopne
rorl
inc
rcr
cmp
push
insl
cld
inc
in
inc
pop
in
jg
daa
or
adc
mov
mov
jmp
and
jmp
leave
icebp
pop
subb
xchg
pop
iret
repz
repnz
cmp
test
cmp
aad
push
adc
sbbb
inc
xchg
mov
push
cwtl
loop
jg
dec
pop
jno
aas
push
or
jo
fs
lods
fsts
imul
mov
or
mov
xor
and
cltd
rcrb
sbb
sar
adc
sub
sub
pop
inc
adc
mov
fisubrl
add
add
adc
add
movsl
adc
movsl
xchg
insb
mov
lods
in
xacquire
xchg
mov
fbld
xchg
in
mov
mov
mov
jo
lahf
add
lods
mov
mov
incl
jecxz
xor
fsts
sbb
in
loope,pn
je
mov
pop
sbb
cld
sbb
sahf
cwtl
jns
ss
pop
xor
loopne
nop
mov
add
mulb
cmp
incl
repz
push
xchg
inc
fwait
lea
rcl
or
add
sub
jecxz
push
mov
or
fs
sbb
shr
lods
inc
xchg
pop
aam
cld
das
loope
mov
cmpsb
push
rol
sub
call
dec
cltd
imul
jg
pusha
fldl
enter
push
loop
or
adc
filds
jne
std
jae
add
in
push
mov
add
test
jle
push
frstor
adc
fwait
inc
imulb
inc
push
pop
xchg
add
lock
or
notb
les
shlb
je
ja
mov
push
push
pop
mov
imul
cmp
dec
or
mov
shrb
ja
ljmp
pop
or
xor
add
repnz
jb
xchg
sub
lods
call
add
push
out
in
push
xchg
cmp
cli
call
bound
aas
adc
clc
fsubs
xor
or
cwtl
lods
pop
lods
nop
arpl
add
jg
test
jbe
fistpll
ret
inc
insl
in
mov
jmp
xchg
fisubs
rcr
ljmp
mov
jns
jg
lods
int
xchg
xor
mov
js
subl
out
mov
inc
and
outsl
jp
jo
cmpl
popf
jbe
mov
xor
mov
iret
add
pop
dec
ljmp
lock
loope
push
xchg
hlt
dec
inc
or
loope
fwait
pop
mov
outsl
cmpsb
ja
stos
fldenv
and
aad
cld
inc
mov
aam
and
lock
xlat
repnz
mov
fptan
xor
outsl
dec
hlt
pop
incl
aad
or
ljmp
sub
movsl
pop
lock
enter
cmpsb
cmp
js
scas
mov
or
int
push
jg
aam
sub
repz
cmc
push
and
sub
cli
add
xor
jl
orb
push
cld
call
dec
jo
int3
jnp
push
lods
push
add
dec
sub
lret
dec
pop
mov
daa
pusha
loopne
rorl
mov
xchg
adc
stos
orl
popa
sub
call
add
and
adc
add
add
loope
lock
das
insl
repz
push
push
and
xor
push
testb
fildll
push
and
es
sub
push
clc
int
pop
pop
test
mov
xor
adc
cli
inc
or
inc
mov
shl
rorl
mov
cld
xlat
cwtl
mov
imul
add
jo
pop
mov
lcall
in
addb
shl
mov
test
adc
scas
mov
add
push
nop
rol
incl
cmc
and
loope
bts
add
es
dec
mov
jl
into
pop
dec
xlat
test
test
xor
push
jge
repz
mov
pop
call
lds
sbb
xor
bound
outsl
nop
fidivrl
inc
insb
lock
inc
call
jnp
je
push
add
insb
mov
mov
mov
sub
mov
or
jae
pushf
adc
das
xor
movsl
dec
adc
lock
push
hlt
push
cmpsl
rorl
xchg
fwait
lock
cmp
sub
inc
push
popa
pusha
fisttps
inc
jl
sahf
das
adc
push
add
icebp
mov
add
jo
or
cld
jg
mov
jnp
xchg
rorb
inc
cmp
fwait
and
lahf
xchg
dec
mov
movsl
rorb
rcl
popa
xor
push
cwtl
sbb
lret
mov
or
inc
jmp
jl
fs
jecxz
adc
xor
adc
cmpsb
in
enter
adc
ficompl
sbb
pop
fstpt
std
call
dec
inc
stos
adc
test
sete
sub
adc
ds
xchg
js
je
xor
aad
push
sbb
shlb
push
adc
fwait
in
hlt
ljmp
adc
out
add
xor
pusha
cli
add
add
loope
push
inc
mov
outsb
arpl
cmp
ljmp
push
xchg
fnstenv
lcall
jno
push
lds
add
rolb
mov
in
dec
loop
ja
dec
outsb
xchg
push
jle
pop
cmp
mov
icebp
and
xor
test
sbb
mov
addr16
lcall
int
dec
pop
add
inc
push
cs
fsub
jp
out
push
inc
xchg
mov
xor
or
std
imul
lcall
adc
mov
push
ds
mov
pusha
out
xchg
test
adc
and
xchg
lods
shlb
lcall
pop
xor
mov
leave
push
jnp
outsl
outsl
mov
pushf
loopne
cmp
call
faddp
mulb
xchg
fcmovb
inc
enter
pop
cli
mov
and
xor
xchg
ja
jg
cmp
cltd
pop
in
jle
sbb
adc
std
sbb
and
pop
and
cmp
lods
push
orl
sbb
test
repnz
filds
dec
pop
clc
cmp
je
pop
mov
es
aas
mov
sub
xchg
cwtl
ljmp
arpl
hlt
add
push
lahf
pop
repnz
dec
mov
lods
incl
adc
add
ss
sbb
and
cmpsl
xchg
out
fisubl
les
jmp
sub
in
imul
add
push
inc
inc
loop
inc
xor
jg
stos
add
sbb
idiv
push
insl
cmp
jo
loope
jns
ljmp
cmp
std
fxch
add
sbb
les
stos
jg
mov
inc
mov
inc
push
inc
xchg
add
mov
push
cmp
fwait
jle
pop
or
arpl
jbe
loop
add
mov
pop
inc
aam
js
adc
scas
cmp
dec
aaa
sbb
es
xor
push
add
aaa
call
or
push
pop
dec
dec
fwait
je
movsb
cli
mov
adc
dec
pop
sarb
arpl
push
shlb
scas
inc
xchg
pop
repnz
fcoms
shlb
scas
cli
sbb
repz
mov
add
cwtl
and
add
or
sysret
test
lcall
insb
push
lret
jb
into
aaa
fsubp
addr16
loopne
aad
call
push
enter
inc
dec
dec
in
lret
mov
aas
rcl
aam
add
andb
ss
sub
mov
stos
fdivrl
test
push
add
rol
into
cwtl
lods
jo
dec
mov
add
xchg
fldl
mov
iret
pop
xchg
sub
fbstp
cmp
cmp
mov
xor
popl
adc
xchg
out
jge
pop
mov
lods
push
add
insb
push
std
fs
scas
xorb
dec
dec
push
mov
roll
sub
pop
mov
fldl
mov
clc
lcall
xchg
adc
xor
sbb
inc
sbbb
aaa
and
pop
adc
dec
push
shlb
jo
dec
icebp
xor
lods
xor
outsl
test
mov
xor
xor
das
in
sub
jmp
or
gs
decb
out
add
xchg
or
or
stos
adc
loopne
mov
popf
fs
or
inc
cmp
sub
lods
or
add
cmpsb
push
xor
xchg
jbe
insb
inc
loop
lea
cmp
push
xchg
aad
adc
and
or
or
imul
mov
negl
add
sbbw
xor
and
mov
fadd
cwtl
iret
mov
cmp
and
sahf
insb
pop
out
mov
sti
dec
and
mov
imul
imul
gs
sbb
pop
push
jo
xchg
mov
fisubrs
cmp
aas
pusha
add
push
or
xorb
xor
test
nop
pushf
adc
rcr
cld
push
mov
mov
lea
ljmp
pop
cli
call
xchg
shlb
adc
imul
mov
adc
cld
stos
dec
inc
nop
je
jb
or
adc
or
iret
sahf
add
bound
cmpsb
loope
hlt
popa
test
xor
shlb
or
scas
in
jg
ss
andb
nop
out
ret
xchg
add
or
test
int
xchg
call
notb
negl
jae
sub
mov
int
adc
inc
or
mov
pusha
adc
xchg
jmp
sbb
lcall
xchg
jae
dec
std
scas
ljmp
mov
in
inc
nop
mov
iret
inc
cmp
cmp
decb
cmc
jns
xor
int3
cwtl
in
mov
nop
cmpsl
pop
sub
or
mov
jo
insb
sbb
pop
lock
dec
add
hlt
les
pop
dec
aaa
pop
jg
ret
xor
fcomps
pushl
subl
loope
ljmp
clc
sbb
dec
dec
ss
scas
mov
rcr
data16
jge
sbb
test
test
js
mov
xchg
xchg
scas
popa
test
mov
js
pop
test
mov
lock
cmp
cmp
stos
rorb
ficomps
cmp
ds
dec
add
gs
and
addr16
mov
shrb
jg
lds
xchg
pop
iret
inc
pop
nop
xor
ror
sbb
cs
popa
dec
mov
aaa
sbb
aas
pop
add
pop
jp
mov
pop
add
mov
lods
sub
dec
std
or
add
nop
test
and
ret
or
push
mov
pushf
sti
fistl
cltd
inc
bound
rcrl
xor
int3
lods
mov
and
aas
sarl
lret
add
or
bound
lods
cmp
mov
leave
mov
push
notb
and
dec
adc
rorl
mov
call
sub
pop
ljmp
pop
push
stos
or
and
sub
adc
jle
aam
and
jmp
push
and
xor
fimuls
jecxz
int3
jbe
in
movsb
cmpb
mov
add
mov
mov
arpl
cmp
inc
dec
fwait
mov
test
jo
cli
push
and
fdivl
and
adc
mov
ja
or
push
adc
jmp
lret
push
cmpsb
add
lahf
or
add
pop
fnstcw
adc
aam
lods
out
add
inc
inc
and
pop
das
or
push
aas
xor
fwait
or
shlb
inc
add
cmp
push
add
mov
mov
push
adc
lret
or
cli
push
movb
inc
and
add
sub
xchg
call
or
mov
call
adc
rolb
aas
mov
adc
punpckldq
xchg
mov
and
ret
jge
jo
push
jo
scas
popa
dec
cmp
push
call
sub
adc
inc
jne
and
dec
cmpsb
ss
push
xchg
mov
lcall
enter
dec
push
incl
dec
sbb
imul
sub
test
jg
mov
sbb
push
inc
push
xchg
pop
out
ljmp
mov
add
inc
dec
aaa
dec
lock
imul
xor
jg
outsl
cli
inc
aas
adc
inc
adc
daa
lgs
adc
xor
push
or
xor
divb
inc
mov
lcall
std
fs
inc
pop
cwtl
les
pop
xchg
push
dec
call
lock
push
and
sbb
cmc
pop
push
push
inc
and
push
inc
shr
mov
fldt
mov
ret
and
mov
lahf
mov
adc
add
adcb
lds
pop
loope
and
pusha
out
and
or
rcl
iret
aaa
test
push
ss
outsl
xor
cmc
push
sti
lock
lods
adcb
repz
dec
mov
stos
pusha
ret
and
pop
addb
into
adc
jp
test
xchg
pop
cwtl
call
dec
clc
pop
cld
rol
outsb
aad
sub
cli
nop
push
or
movsl
add
dec
xor
es
mov
push
push
push
xor
test
ret
and
dec
out
sbb
dec
xchg
jne
mov
aaa
movsl
faddl
mov
mov
push
lock
mov
stos
cmp
jecxz
dec
stos
xchg
sti
xchg
je
cmp
movb
sub
inc
dec
jecxz
ret
sub
mov
xchg
mov
pop
or
mov
popf
dec
gs
xchg
mov
cmp
enter
add
sbb
sbb
scas
sbb
jo
sbb
icebp
rol
jb
mov
xor
das
mov
ljmp
jge
mov
mov
pop
into
push
lret
ret
adc
fcomip
decl
xchg
dec
lea
int3
sbb
rol
mov
leave
pop
add
xor
mov
push
inc
shlb
iret
or
mov
mov
fisttps
ds
add
rclb
pop
mov
jne
aaa
xor
fiaddl
adc
xchg
rcll
mov
push
insl
test
adcl
add
mov
jp
pop
inc
pushw
cmp
ds
pop
xor
jb
out
stos
adc
and
repz
sbb
outsl
and
fdiv
ret
sbb
incb
or
stos
cmp
enter
dec
int
jg
inc
add
xchg
inc
notl
lods
pop
testl
pop
inc
and
rcr
dec
clc
mov
pop
jecxz
sub
push
push
fiadds
cmp
xchg
rolb
sbb
dec
stos
cli
lea
std
rclb
incl
or
mov
jbe
mov
ljmp
aas
mov
insb
mov
pop
push
cld
pop
imul
push
cmp
xchg
ds
imul
fists
mov
loope
into
mov
cmpsl
mov
add
push
push
aaa
add
das
clc
movsl
add
adc
push
clc
mov
xor
std
add
pusha
adc
push
pop
hlt
call
adc
sub
jae
push
or
fmuls
int3
movsb
fcom
push
addb
nop
popl
sarl
pop
enter
mov
add
lds
adc
cmp
fisubrs
jnp
sub
mov
mov
lds
and
adc
or
xchg
fcoml
ds
ljmp
inc
les
les
loope
stc
insb
in
push
and
ret
and
xor
popf
xchg
sbb
imul
test
push
sbb
pop
out
pop
shl
mov
bound
pop
je
adc
pop
mov
rolb
arpl
lcall
adc
sbb
gs
or
sarl
cld
or
sub
add
bts
mov
hlt
scas
adc
test
cmp
sub
lds
incl
mov
jp
ss
sub
pop
test
test
inc
gs
mov
and
ljmp
aad
jge
pop
jecxz
adc
add
adc
ret
mov
or
xchg
hlt
lds
nop
les
mov
popa
dec
pushf
ret
pop
adc
or
push
xlat
scas
gs
orb
pop
icebp
adc
pop
add
sbb
and
adc
nop
cmp
out
inc
sbb
jnp
mov
inc
es
dec
inc
ror
inc
xchg
les
inc
mov
icebp
imul
add
or
in
sub
pop
or
sub
xor
pop
jmp
inc
jbe
lahf
arpl
xchg
mov
incl
push
and
cmp
jl
loopne
cmp
sub
pushw
jl
lock
cmpsb
or
outsb
je
mov
insb
or
cmp
lds
cmpsb
pop
or
cld
aas
lret
add
dec
shr
and
pusha
cmp
jg
jecxz
daa
cmp
ljmp
test
adc
sub
mov
decl
xchg
mov
sub
inc
cld
insb
popf
sbb
push
cli
mov
sub
dec
hlt
dec
enter
jo
jno
pushl
fimull
and
shl
add
xchg
arpl
mov
jl
sub
leave
mov
in
xchg
mov
imul
or
inc
lock
notl
inc
xor
cmp
les
test
loopne
hlt
cmpsl
push
dec
sbb
mov
jmp
push
nop
mov
dec
jl
push
popf
sbb
mov
incl
and
mov
add
arpl
mov
ljmp
mov
js
enter
add
mov
incl
xchg
xchg
mov
mul
popa
loop
insb
xor
xor
test
pop
mov
lds
add
add
daa
or
pushf
inc
aad
enter
mov
push
mov
pop
add
add
ljmp
sub
xor
adc
sbbb
std
push
les
cltd
sbb
mov
adc
ficomps
sub
bound
jbe
adc
sbb
push
pop
or
xchg
and
pop
jg
mov
mov
sarl
aaa
xchg
push
das
push
inc
pushf
add
movsb
ja
or
xchg
sub
aam
jg,pn
ffreep
leave
cltd
int
testb
repz
xor
mov
aaa
pop
or
jmp
dec
jb
xor
jg
dec
aam
pusha
lahf
aam
push
ficoml
cwtl
into
or
mov
loope
mov
int3
mov
adc
xchg
leave
push
fwait
or
jmp
insl
mov
mov
inc
dec
or
inc
jg
sub
les
sbb
pushf
sub
roll
xor
lds
sub
ja
jb
dec
push
clc
in
mov
jbe
add
or
dec
ret
lcall
insb
or
sub
pop
push
dec
je
test
pop
dec
xchg
mov
insl
and
cmpsb
mov
shld
mov
lds
jecxz
lret
push
popa
in
pop
push
mov
xor
sti
or
lcall
push
out
jmp
js
dec
mov
adc
add
push
mov
fucom
cmp
sbb
dec
movsb
es
std
stos
push
mov
fisubl
mov
and
cmp
add
testb
and
sub
push
xor
pop
test
fisttpl
mov
imulb
pushf
inc
xor
pop
jne
pop
js
adc
jle
movsl
bound
jo
mov
dec
jmp
cmpsb
xchg
hlt
mov
notb
and
add
mov
pop
sub
jne,pn
popl
test
cmp
xchg
inc
clc
roll
inc
push
mov
push
inc
sub
push
inc
mov
lds
mov
stos
jnp
call
mov
inc
cmpsb
push
dec
insl
inc
int
pop
leave
dec
mov
push
shll
mov
hlt
jg
lret
pop
add
dec
add
daa
out
xlat
add
jmp
mov
rcrl
cmp
push
aad
mov
or
dec
jecxz
test
xor
mov
and
cli
push
sbb
inc
rorb
shr
mov
cmp
pop
dec
adc
cmpsb
test
mov
stc
insb
push
sub
fmull
incl
jo
test
dec
leave
stos
mov
pusha
adc
adc
push
ljmp
divl
mov
dec
sbb
inc
xor
fstl
or
cwtl
andb
add
sti
mov
or
jg
mov
sbb
add
mov
add
adc
je
add
inc
push
xchg
aad
sbb
jno
xchg
mov
mov
in
pop
sbb
adc
mov
lret
mov
pop
lock
and
xchg
pushf
and
sbb
xchg
insb
adc
in
add
outsl
xchg
mov
sub
mov
scas
add
xchg
test
bound
push
pop
mov
push
pop
rorb
cmpsl
mov
jb
into
stos
sub
jg
xchg
test
mov
and
jge
xor
jo
push
push
dec
sbb
mov
mull
aas
mov
push
test
daa
inc
movsl
or
xchg
xor
or
pusha
or
or
pop
or
in
incl
mov
dec
out
aad
add
inc
insl
and
add
call
inc
sarb
test
mov
cli
add
push
pop
mov
hlt
sbb
pushl
or
lret
cmpsb
jg
mov
aad
jmp
cmp
rclb
add
out
adc
add
pop
and
fnstsw
movsl
mov
mov
sbb
mov
sub
cmp
sahf
or
mov
mov
cli
mov
inc
cli
movsl
add
jns
rolb
sbb
pop
outsl
mov
jno
mov
pop
nop
xor
sub
dec
pop
xor
dec
mov
or
faddl
adc
xchg
out
mov
mov
outsl
rcll
mov
push
add
or
mov
ljmp
xlat
add
mov
inc
dec
adc
add
push
ss
sub
data16
cmpl
mov
push
je
sub
mov
mov
xor
shll
ds
shr
jle
and
mov
mov
jecxz
mov
ss
mov
or
add
pop
sub
adc
mov
inc
cmp
lret
ret
or
loopne
imul
testl
inc
popf
cmp
and
adc
into
lahf
mov
fisubl
jecxz
sbb
sub
aam
dec
adc
lea
inc
xor
test
out
aaa
dec
xchg
mov
push
je
xchg
sub
xor
sbb
lock
cmpb
inc
int
enter
or
test
js
into
cld
push
sub
mov
pop
push
clc
push
cli
sub
xchg
xchg
test
push
add
stc
fadds
cmpsl
hlt
decl
sub
data16
xchg
jmp
xchg
hlt
test
pop
xchg
pop
pop
loope
dec
and
cmp
xchg
mov
mov
push
scas
decl
clc
mov
insb
addr16
xchg
or
aam
cld
mov
lock
sbbb
shrb
add
dec
mov
in
mov
xchg
inc
loope
dec
rclb
inc
dec
dec
ds
mov
mov
xchg
or
sbb
inc
push
out
cli
outsl
clc
std
adc
mov
mov
adc
das
out
sarb
daa
add
or
or
mov
add
xchg
adc
ds
loope
mov
add
out
call
test
sub
gs
push
and
add
ljmp
mov
insb
lret
mov
inc
idivb
sub
sahf
fwait
jno
jmp
sbb
out
push
cwtl
cli
jg
adc
jmp
pop
fcomps
cmp
test
push
push
movsl
cmpsb
pop
push
adc
lock
jge
rorb
pop
fsin
pop
sub
loope
ss
fdivl
imulb
sar
das
call
add
mov
xchg
aam
mov
out
into
addb
dec
shlb
test
fstpl
test
rorb
dec
inc
loope
adc
rol
cmp
pushl
addb
ret
add
push
lea
lret
je
je
mov
das
clc
fsubp
xlat
leave
cmp
push
ds
hlt
xchg
xchg
hlt
ja
rcrb
push
add
xchg
adc
pop
imul
sbb
mov
scas
jnp
jo
or
out
fldt
test
call
sub
xor
pop
in
or
sbb
in
pop
lret
call
adc
jns
lods
cmp
sti
mov
test
aam
push
push
out
xchg
mov
jmp
xchg
pop
add
xchg
adc
sbb
inc
push
lods
xor
add
jbe
lret
les
flds
scas
in
cli
pop
push
je
jmp
xchg
xchg
leave
push
jno
cmp
ds
test
mov
push
mov
daa
pushf
add
aaa
in
cwtl
loope
nop
sti
das
cs
popf
gs
adc
or
pop
sahf
into
in
lock
push
hlt
aad
fdivl
jnp
or
push
arpl
push
pcmpgtw
dec
pop
mov
jnp
jne
insl
push
icebp
fbld
add
jns
sub
sarb
push
jno
mov
dec
lea
pop
pop
shl
daa
xchg
pop
adc
nop
lock
fisttps
icebp
inc
jge
jmp
adc
push
mov
loop
testb
and
adc
mov
outsl
xchg
mov
push
add
add
adc
addb
icebp
lock
xchg
mov
cs
pop
rcll
orb
add
pushl
add
enter
add
sbb
lea
outsl
cmp
pop
movsb
xorl
pop
cld
pop
inc
dec
jae
mov
mov
dec
pop
cmp
ret
imul
gs
mov
les
repnz
jmp
loopne
adc
testl
xchg
mov
lea
mov
add
fldt
lods
loopne
rcll
jp
rorb
popa
or
pop
sbb
rorb
or
test
or
pop
cld
lods
in
cld
adc
mov
adc
dec
mov
pushf
xor
push
sub
dec
add
repz
andl
xchg
cmpsl
jb
int3
sbb
add
into
xor
ja
cmp
sub
scas
ret
xchg
add
jecxz
test
icebp
xor
cld
das
cli
out
or
cmpb
gs
add
add
out
add
cmp
pop
pusha
std
mov
pusha
xchg
lock
push
cwtl
in
push
dec
jg
cmc
push
mov
sbb
andb
movsb
mov
and
add
add
in
out
test
fistps
jg
push
fs
inc
out
and
mov
adc
decl
push
subl
test
fdiv
and
sub
clc
sbbl
xchg
ja
jbe
daa
rcr
sub
push
jg
aaa
enter
andb
mov
lods
sbbb
aas
insl
dec
xchg
aas
repnz
xor
push
xchg
mov
adc
add
mov
in
out
push
insl
mov
push
cld
mov
mov
fimuls
das
test
rcrl
pop
xchg
push
adc
loopne
xor
xor
pop
pop
std
mull
and
xor
arpl
jmp
or
cltd
and
aas
out
fimull
pop
fistpl
dec
fcoms
dec
repz
cmp
test
jno
rorb
dec
mov
subl
incl
jne
fldl
mov
in
decb
sub
in
fs
pop
clc
push
mov
mov
cmpl
adcb
pushf
xchg
fwait
ret
fstl
decl
jle
jbe
or
orl
jg
mov
inc
pop
jecxz
loop
inc
call
addl
jecxz
pushf
mov
mov
divb
mov
jg
mov
addr16
int3
mov
dec
jge
mov
mov
loopne
aaa
lret
xchg
movlps
or
mov
int3
insb
in
sbb
sti
cmpl
mov
cmpsl
repnz
mov
fcmovbe
xchg
inc
loop
mov
arpl
mov
push
or
pop
xor
incl
push
jl
and
loope
stos
dec
push
sbbb
push
cld
mov
or
jbe
pusha
inc
jp
pop
in
jo
or
stos
mov
addl
insl
dec
test
loop
rcrl
into
rcrb
pop
sbb
mov
movsb
xchg
clc
lock
xor
ret
push
aas
ret
cmp
xorb
or
mov
push
or
cmp
or
fcoml
fsubrs
lock
add
dec
call
fisubrl
enter
inc
push
sub
cmpsb
pop
insb
mov
lret
jg
enter
mov
rcrb
js
pusha
fidivs
mov
sbb
dec
jb
jg
dec
inc
scas
nop
mov
and
lock
or
aaa
repz
scas
std
dec
fiaddl
les
pop
ljmp
int3
sub
mov
push
jmp
pusha
ret
ja
andl
lret
test
emms
pop
sub
xor
xchg
inc
and
clc
jg
je
inc
roll
fwait
orb
xor
dec
mov
add
das
insb
and
out
leave
test
sub
xor
pop
inc
bound
jne
loope
and
out
and
add
mov
test
dec
jge
int
mov
mov
sahf
ucomiss
jecxz
and
sub
shll
adc
out
cmp
fwait
jae
shlb
lahf
out
add
push
adc
pop
loopne
pop
test
mov
jle
mov
cmp
mov
add
xor
push
xchg
and
sub
or
cltd
inc
jg
pop
fwait
mov
jle
aam
lcall
ret
dec
cs
decb
mov
mov
inc
mov
call
add
sbb
loop
sahf
add
ret
sbb
adc
sti
sbbl
xchg
ret
cld
aaa
jle
test
push
test
sub
lock
push
and
jb
add
ljmp
clc
push
cmc
mov
scas
mov
fists
mov
sbb
cwtl
gs
bound
push
outsl
clc
inc
popf
cmp
lods
je
cmp
adc
sub
sbb
test
jo
add
jmp
popf
xchg
xor
rcrl
xchg
jmp
pop
das
jo
xchg
mov
lret
sub
jg
pop
repz
lret
inc
clc
aam
push
int
mov
jno
push
sbb
in
add
stos
xchg
lds
flds
arpl
shll
daa
sub
sub
inc
push
or
clc
les
andl
data16
push
aas
adc
inc
sbb
jno
pop
fsubr
push
cmc
out
dec
roll
outsl
movsb
rolb
leave
inc
push
insb
mov
inc
jbe
loopne
and
inc
fsts
decb
test
jb
aaa
add
scas
jmp
cmc
or
outsl
ljmp
pop
shl
and
jb
push
movsb
cmpsl
sbb
clc
int3
xor
push
mov
fwait
push
xchg
insb
insb
inc
int
clc
mov
test
flds
aas
and
pushf
xor
lcall
mov
dec
popf
gs
fistl
loopne
or
out
popa
shrb
sbb
cli
or
push
int3
sbb
xchg
nop
mov
inc
inc
out
pushf
mov
ljmp
loope
nop
scas
add
into
mov
xchg
mov
ljmp
std
add
decb
pop
lock
popf
stos
add
cmpsb
in
ja
je
xorl
inc
or
subb
dec
xor
adcb
cli
inc
xor
push
xor
je
jmp
pop
pusha
mov
addr16
imul
jge
pop
fnstsw
fucomp
push
cld
testl
pop
sbbb
in
add
and
pop
or
test
jnp
es
sub
pop
clc
mov
enter
out
sbb
push
mov
push
sub
call
out
adc
sub
mov
inc
loopne
push
ret
pop
std
out
pop
jl
mov
adc
or
jne
sbb
push
js
insb
push
fcmovu
xchg
and
mov
movsl
push
cmp
dec
out
jo
shr
mov
xlat
je
or
push
or
pop
rol
sbb
into
inc
lahf
inc
lgs
sbb
inc
add
push
xor
int
je
jae
adc
dec
jb
push
icebp
clc
out
into
shr
xchg
push
aam
aam
sarb
imul
gs
aaa
movsl
pop
pop
inc
enter
addl
call
js
test
pop
xchg
and
clc
push
sub
inc
push
mov
fwait
loope
xchg
mov
nop
dec
movsl
pop
sub
or
add
mov
incl
pop
add
lea
and
push
xchg
add
mov
xor
sub
adcl
sbb
mov
lcall
sbb
add
pop
mov
les
mov
jecxz
sar
push
cld
mov
fisubrl
in
adc
push
in
data16
cli
shlb
addb
notb
stc
lcall
call
int
iret
fnsave
fdivrp
call
sub
xchg
add
pop
sub
clc
inc
stos
les
enter
xchg
pop
push
or
or
loopne
jmp
js
mov
shrl
xor
andb
dec
inc
adc
loope
mov
test
add
testl
std
imul
fmuls
jmp
xchg
loop
push
cmc
into
loopne
sbb
pop
mov
xor
aaa
call
mov
fistps
pavgb
lcall
push
outsb
rcrb
xor
mov
and
subb
mov
mov
jg
incl
adc
pusha
mov
xchg
dec
movsl
cmp
xor
test
xchg
ljmp
add
push
and
test
jl
sbb
mov
or
call
fiadds
push
jnp
das
fbstp
dec
dec
ljmp
jmp
push
into
cmp
xor
xchg
add
ret
cmpb
push
les
outsl
cmp
out
test
sub
adc
xchg
mov
stc
ret
and
mov
or
dec
add
mov
fwait
mov
lods
fmuls
mov
ljmp
pop
inc
and
xchg
movsb
or
sbb
imul
jne
add
ds
cmpsb
cli
jmp
cli
mov
jns
nop
fistps
clc
jg
jp
dec
insb
push
push
mov
fmuls
pop
sub
push
stos
mov
dec
test
push
sub
xor
aad
mov
shl
rcrb
daa
iret
nop
push
mov
rolb
aaa
cld
call
sbb
iret
cwtl
lahf
jle
push
fs
cmp
jne
loopne
mov
iret
adc
pop
and
mov
scas
mov
fs
mov
cmp
jmp
fs
sbb
insl
inc
sbb
cmp
jle
sub
enter
push
cli
pop
add
cwtl
lret
jns
ret
pop
push
icebp
xchg
adc
sub
sbb
das
clc
jg
push
ss
scas
hlt
dec
mov
dec
aam
pop
sbb
adc
pushf
clc
fstpt
cmp
xchg
pop
stos
mov
lret
shll
rolb
xor
mov
xchg
xchg
pop
cmp
push
sub
xor
pusha
movzwl
mov
adc
dec
and
pop
adcb
ss
pusha
repnz
and
sahf
fidivl
push
cli
aad
imul
adc
jg
or
lcall
xchg
aas
ret
lcall
hlt
ds
or
cmp
or
into
push
mov
dec
add
dec
invd
xchg
mov
pop
mov
sbb
pushf
mov
call
icebp
adc
jo
mov
jmp
pop
mov
int
adc
dec
mov
decl
push
xchg
pop
mov
repz
fimull
jg
pop
jb
fnstcw
sbbb
sar
out
sub
xchg
push
fiadds
iret
jb
test
es
dec
cli
jg
or
ffreep
mov
push
out
inc
jge
arpl
mov
pop
rcr
addb
inc
gs
add
fldenv
mov
dec
sub
dec
cmc
mov
lea
lea
cmp
push
adc
ja
or
test
pop
add
sub
mov
push
ret
fidivrl
orl
mov
stos
in
sbb
mov
push
mov
push
add
mov
or
call
in
sub
xchg
clc
mov
lods
int
hlt
outsl
cmp
push
add
sub
cmp
sub
mov
js
stos
cli
lret
or
in
in
mov
jle
iret
mov
mov
push
jbe
mov
cmp
mov
adc
aam
scas
sti
imul
insb
das
clc
das
add
push
clc
or
outsb
nop
xchg
add
adc
pusha
xchg
les
hlt
sub
sarb
sub
xorl
out
pusha
lods
hlt
fildll
sbb
fbld
mov
mov
out
test
mov
dec
ret
in
jle
lods
sub
sub
lret
aam
mov
bndstx
xor
inc
fsubs
into
loope
push
cltd
clc
or
stos
xor
sar
ret
push
call
aam
pop
adc
mov
adc
push
sarl
cli
ja
inc
push
inc
cmp
push
std
js
cmp
test
inc
fistpll
add
fnstenv
lds
push
inc
pop
shr
add
ror
popa
jmp
cmp
push
adc
inc
mov
loop
inc
stos
jp
dec
dec
and
inc
and
add
mov
cli
outsl
ret
adc
inc
xor
adc
test
adcb
mov
push
push
jno
notb
aas
add
push
inc
imul
mov
and
call
sub
add
cld
dec
xor
cmp
cmp
outsl
scas
dec
and
hlt
mov
lret
push
cmp
lods
sar
jg
pop
pop
outsl
movsb
mov
nop
push
test
insb
add
test
fimull
xchg
or
cli
sub
pop
cmc
push
and
aaa
add
jl
xor
and
xor
aaa
inc
pop
mov
sbb
cmp
lock
dec
pop
lea
lcall
fdivrp
decl
and
divb
sbb
or
mov
clc
test
stos
or
push
clc
cmpsb
or
jnp
aam
inc
popa
movhlps
fsubl
out
pop
popa
inc
adc
sbb
add
mov
cmp
mov
aam
ror
add
lea
cmp
arpl
enter
cli
fwait
test
sbb
add
inc
jo
jecxz
mov
sub
add
xchg
inc
mov
mov
orl
mov
sbb
add
xlat
bound
push
or
add
dec
fstps
mov
xchg
lds
dec
out
add
mov
and
add
movsb
mov
rclb
add
je
fcomps
imul
mov
pop
lret
cmp
test
arpl
xorl
ljmp
adc
xchg
lds
popf
ret
sbb
outsb
movsl
test
dec
sub
test
pop
in
mov
test
xchg
cmp
xchg
mov
dec
int3
mov
sub
sti
add
xchg
pop
nop
sbb
mov
stc
pop
lret
mov
jne
cmp
loope
and
out
add
flds
push
sbb
inc
add
sub
pusha
pop
mov
enter
rorl
out
cs
outsb
xchg
cld
icebp
test
ds
ret
or
and
in
push
adc
aam
ret
xchg
outsl
mov
mov
mov
cli
fists
imul
xchg
jle
push
loop
inc
push
push
rcrb
cmp
push
jecxz
hlt
das
outsb
jp
mov
xor
shll
pop
xchg
and
es
and
mov
sub
nop
and
mov
pusha
ja
sbb
loopne
xchg
sbb
pop
cs
jle
mov
aaa
cli
ljmp
subl
pop
pop
xchg
test
add
inc
add
push
or
pop
sbb
cmp
mov
dec
jne
inc
rcrl
xor
outsl
das
dec
orb
jno
loope
cmpsl
mov
cld
scas
test
loopne
xor
xchg
pusha
add
add
es
jno
sbb
inc
pushl
inc
pop
les
or
icebp
jg
jg
xor
push
xchg
ficomps
adcb
xor
stc
or
and
jo
mov
cld
xlat
shlb
cmp
out
out
nop
mov
mov
and
add
push
in
pusha
or
add
sar
or
cmp
jo
pop
sub
jle
mov
pop
xchg
push
in
lret
adc
pop
ret
mov
cmpsb
out
nop
push
loopne
loopne
icebp
jl
lds
cmp
xorl
pusha
mov
xchg
enter
stos
shll
subb
test
or
add
scas
inc
std
aas
loope
jnp
fiaddl
cmc
adc
cmp
int3
js
pusha
xchg
jo
pusha
mov
mov
cmpsl
push
push
je
sub
jmp
outsl
xor
add
or
inc
aaa
movsl
fadds
push
mov
lods
lea
lcall
sahf
loope
mov
pop
in
cmpsl
and
or
incb
aas
push
test
jp
rcll
adc
add
imul
dec
ret
or
jmp
sbbb
scas
xchg
cmc
mov
loopne
push
push
push
js
cltd
dec
adc
jg
stos
jns
les
nop
jnp
jg
out
push
jb
inc
sbb
call
xchg
inc
std
dec
in
mov
out
cs
movsl
jg
add
xor
jb
add
aad
lock
call
nop
shlb
cmp
scas
enter
cmp
lds
aas
mov
push
in
nop
xchg
mov
outsb
loopne
out
adc
mov
pop
call
pop
sub
lock
pop
mov
push
rclb
icebp
inc
or
or
push
cld
push
mov
add
clc
nop
sbb
xor
pop
adc
popf
xchg
ja
dec
roll
pop
jne
test
fnstsw
sub
int
adc
or
sub
pop
adc
dec
loopne
je
hlt
in
xchg
add
outsl
cmpsl
push
add
mov
cwtl
ret
test
scas
push
jo
dec
and
mov
push
fisttpl
xchg
or
ret
or
cmpsb
mov
loope
orb
push
lret
cli
call
sbb
pop
jmp
stos
enter
cmp
inc
add
mov
jo
and
aas
es
adc
decl
inc
adc
jbe
jb
mov
lcall
popf
mov
adc
loopne
add
and
decl
insb
push
fwait
mov
jge
push
and
clc
cmpsb
or
ja
pusha
cli
aaa
mov
pop
cmp
jg
adc
and
cmc
cmc
ja
adcb
pop
push
pusha
fwait
movsl
clc
sar
in
mov
push
mov
lock
xchg
xor
lock
jmp
loop
hlt
lcall
push
cmove
decb
push
call
scas
aam
xor
inc
int3
clc
in
dec
or
test
adc
push
std
jg
cwtl
je
ret
cmp
or
xorb
cli
jg
fwait
mov
faddp
scas
data16
and
inc
jp
push
adc
aas
push
hlt
lret
dec
test
mov
push
push
insb
lret
loop
jmp
adc
shll
inc
xchg
pop
movsl
mov
mov
scas
outsl
mov
bound
lea
mov
pop
inc
push
pushf
xor
jae
lods
enter
imul
gs
and
test
fisubrs
jg
jae
not
mov
or
mov
test
cmc
fnstsw
add
jnp
cmp
in
mov
cmpsb
adc
nop
jne
and
mov
jbe
je
or
adc
enter
js
loopne
jle
add
jmp
mov
mov
adc
jbe
add
clc
add
sarl
aad
add
shrb
adc
mov
jo,pt
or
jg
lahf
mov
fisttpl
push
add
mov
dec
test
in
loop
and
int3
test
xchg
add
mov
pusha
dec
enter
push
mov
pop
sbb
aam
xorl
sbb
add
pop
in
cltd
js
jae
pusha
add
adc
fisubs
or
push
dec
pop
cwtl
or
fmuls
xchg
mov
cmp
test
inc
or
mov
xor
jmp
mov
fisubrs
fisttpl
push
and
sbb
enter
push
lcall
add
xlat
addr16
jl
fdivr
js
cmp
loop
dec
mov
add
loope
mov
fcomip
addl
inc
call
ret
mov
outsl
and
sub
and
incl
jg
mov
stos
xchg
neg
scas
in
sbb
adc
mov
popa
fstps
cmp
and
push
ds
das
or
pop
push
adc
add
cmpsb
int3
gs
pop
mov
loopne,pt
lods
decl
fstpl
mov
pop
mov
hlt
fisubrs
pushl
mov
dec
dec
imul
std
xchg
xor
rcll
mov
add
lock
pop
xor
push
test
mov
imul
clc
dec
pop
sbb
jno
mov
lcall
ljmp
xorl
jae
add
addr16
ret
and
sbb
or
cmp
add
jg
out
push
call
xchg
push
sbb
rcrb
stos
mov
push
push
lahf
outsl
and
outsl
into
or
movsl
fstp
push
mov
cwtl
test
mov
push
adc
fists
in
cmpb
and
leave
cs
rcll
scas
add
or
or
mov
fwait
jg
cs
nop
cmp
inc
test
dec
or
imul
jmp
inc
inc
mov
add
xor
mov
ljmp
cld
jmp
xor
cs
fcomip
jg
ds
inc
jbe
imul
cmc
push
ljmp
sahf
or
pushf
pop
add
pop
shlb
cwtl
or
push
and
popa
in
xor
inc
or
mov
pop
lds
dec
pop
je
mov
pop
jb
ret
xor
xor
sbb
test
iret
outsb
xchg
sub
mov
icebp
adc
stos
push
ljmp
and
cmpsb
pop
push
jae
shlb
pop
mov
cmp
push
inc
rdtsc
jg
hlt
jmp
mov
xchg
cmp
add
scas
adc
jb
inc
loopne
rolb
js
andl
sbb
and
jg
cmpsb
stc
xor
icebp
lahf
inc
xchg
test
adc
add
mov
fcomip
stos
cld
movsb
jg
inc
dec
mov
ret
fcoms
arpl
sbb
das
js
pop
adc
sub
push
fdivl
and
fmuls
pop
mov
cmp
outsl
push
pop
popf
ficoml
push
nop
sub
test
inc
sbb
push
dec
lret
or
pop
loope
nop
imul
sbb
test
add
fs
decl
sub
add
add
push
cmp
dec
xor
mov
cmp
sbbb
push
xchg
int
loopne
adc
push
inc
add
andl
pop
mov
out
shll
movsb
lds
jg
and
sbb
mov
xchg
cmc
in
les
and
fimull
call
jmp
incb
aad
xchg
xchg
out
pop
mov
mov
xchg
push
xor
inc
jb
add
push
in
mov
stos
xchg
xchg
clc
jno
jg
add
movsb
dec
or
loop
enter
dec
fstpl
rcrb
mov
scas
ljmp
jmp
nop
add
sbb
adc
sub
xrelease
mov
addl
jnp
dec
mov
jb
and
fwait
hlt
push
int3
outsl
mov
les
push
pop
push
pop
mov
pop
xchg
pop
insb
pop
mov
pop
sub
dec
mov
jg
pop
ffree
mov
push
push
sbb
jo
push
rclb
test
push
cld
sub
scas
and
push
adc
mov
mov
adc
subb
ja
xor
adc
lock
xchg
jle
fistps
push
mov
inc
mov
push
mov
outsl
shrb
push
and
mov
or
arpl
pop
cld
nop
adc
xor
adc
rorl
clc
addr16
mov
std
dec
inc
call
mov
push
cli
xor
push
push
push
in
test
jnp
cltd
lds
sub
jb
lret
jg
lock
xor
fnsave
je
stc
insl
pop
pop
dec
mov
or
or
inc
xchg
mov
mulb
fisttps
jl
cltd
pop
mov
add
inc
dec
jns
cmp
nop
aaa
cwtl
fsin
loop
inc
mov
pop
lock
mov
call
ret
mov
in
jle
mov
cltd
xchg
pushf
add
lret
sbb
xchg
loop
sarb
jle
sbb
sti
adcl
pop
sub
or
roll
pop
cli
mov
test
pop
and
cmc
mov
imul
les
loopne
hlt
sarb
push
cmc
stos
fbstp
adc
call
and
adc
cli
inc
push
sub
sbb
jno
sub
mov
ss
ret
incl
in
lea
pop
je
jo
jecxz
les
add
push
fbld
dec
aad
leave
dec
inc
mov
ret
push
push
int
cld
test
cmp
sbb
mov
adcl
cmp
mov
into
ret
push
iret
repz
cld
outsl
dec
mov
lock
jns
insl
add
xor
dec
sbb
notb
cltd
and
add
add
loop
repnz
data16
mov
pop
cld
jg
add
mov
dec
cmp
dec
dec
add
nop
jg
inc
mov
inc
out
xlat
in
ficomps
push
xchg
pop
sub
jmp
rorb
shll
add
int3
add
in
scas
mov
mov
sub
repnz
lret
inc
mov
cld
or
xchg
jmp
mov
push
lret
push
sbb
and
jg
or
jb
push
mov
sbb
out
xchg
xchg
hlt
push
mov
clc
fwait
dec
loop
testb
sub
sub
hlt
pop
stos
xchg
sub
adc
sbb
jne
pop
les
iret
jae
mov
ss
in
xor
test
icebp
movsb
in
lea
lcall
and
push
pop
in
movb
sbb
filds
xor
das
pusha
adc
mov
cmpsl
cmpsb
fdivrl
and
jns
inc
addb
dec
jecxz
inc
test
fdiv
adc
popa
in
and
mov
ljmp
arpl
test
adc
popf
out
int
jne
int3
add
xor
loopne
sub
sub
lea
fiaddl
dec
push
jmp
lea
add
pop
inc
fstl
push
and
js
orb
ja
sbb
push
adc
xorb
cld
adc
data16
push
loop
or
mov
pop
icebp
pusha
and
mov
and
push
xor
add
and
sti
cbtw
je
pushf
sub
pop
add
add
mov
cwtl
push
cld
push
push
hlt
ljmp
push
lcall
inc
insb
rolb
gs
cmpb
mov
out
or
std
push
cli
adc
inc
rsqrtps
sbb
cmpsb
cmc
pop
push
aam
dec
sbb
test
add
das
cmp
std
sub
inc
mov
push
mov
int
cmp
es
xor
sbb
adcl
pop
adc
or
ljmp
in
nop
unpcklps
cli
inc
js
popf
pop
flds
xor
xchg
mov
dec
adc
test
mov
jmp
dec
mov
mov
test
outsb
roll
icebp
cmp
push
lcall
insb
mov
addb
testl
push
js
loop
mov
mov
data16
or
je
into
pop
fildll
jo
cmpl
and
xor
ss
xor
mov
mov
jp
sub
sub
sbb
adc
inc
xor
call
lcall
ret
and
xchg
rorl
xchg
dec
dec
dec
push
loop
push
lea
loopne
call
jbe
scas
inc
les
stc
aad
lahf
lcall
add
movsb
dec
imul
dec
std
push
xor
outsb
push
ljmp
push
cmp
hlt
sbb
ja
sub
pushf
mov
pushf
fiadds
xor
jb
xor
push
lahf
add
jns
bound
sbb
sub
lods
jbe
js
sbb
sar
or
push
push
shl
fsubr
xchg
mov
pop
pop
dec
pusha
hlt
sbb
mov
pop
cwtl
mov
and
sti
mov
sub
inc
xchg
jg
cmc
lock
pusha
or
mov
jl
dec
fisttps
adcl
out
xlat
clc
loop
add
es
les
aaa
fndisi(8087
cld
or
and
enter
push
mov
add
jg
scas
xchg
mov
mov
lahf
and
subl
adc
jno
addl
decb
insb
push
lds
ret
adc
call
cmpsl
lea
cmc
mov
mov
mov
ret
mov
or
test
subb
add
or
fisubrl
adc
sub
inc
out
inc
sub
ret
xchg
jbe
clc
mov
std
rclb
add
pushf
les
inc
add
mov
inc
data16
test
fs
jo
push
ja
push
and
call
test
cld
inc
jne
orl
pop
mov
lret
repz
or
pop
popa
lock
lods
push
in
movsl
scas
test
int3
aad
pop
add
loopne
ss
cmc
or
inc
lock
scas
nop
jb
call
xchg
fildll
jp
insb
fwait
and
outsl
adc
or
xlat
imul
pusha
push
aaa
sbb
pop
lock
push
mov
ret
ret
push
dec
sub
mov
arpl
hlt
xchg
xor
push
lock
cld
push
dec
mov
mov
push
adc
clc
dec
lret
push
test
mov
and
push
xchg
orl
mov
sbb
mov
arpl
or
cli
imul
mov
cwtl
mov
mov
xor
fsub
hlt
stos
jge
out
rclb
mov
popf
sbb
mov
push
inc
sbb
cmp
push
or
roll
or
dec
sbb
mov
jg
into
lods
repz
jbe
or
fbstp
add
xchg
mov
pop
nop
pop
cli
outsb
call
std
ud0
mov
xor
loopne
test
popa
push
insb
inc
in
lods
sti
mov
nop
xchg
fsubl
sub
ret
scas
xor
push
push
jg
fwait
pop
or
nop
mov
loop
mov
inc
int3
std
lcall
rcr
lret
cli
add
add
xchg
mov
mov
loopne
inc
sub
pop
lock
push
test
idivl
outsl
inc
mov
dec
adc
pop
jp
sar
loop
add
sbb
adc
cmpsb
js
dec
incl
push
push
and
jmp
mov
pop
mov
stos
push
mov
adc
pop
mov
pushf
sub
cli
push
sbb
ja
jle
inc
outsb
gs
inc
xor
mov
pop
xor
in
lock
lods
out
pop
test
or
mov
imul
jg
or
pop
add
mov
xchg
pop
xor
xchg
adc
cmc
loop
dec
push
xlat
arpl
cli
jg
scas
mov
sahf
add
pop
add
adc
stos
xor
jle
pop
inc
and
outsl
das
stos
jg
out
shll
in
and
in
mov
orb
iret
push
and
push
push
aaa
insl
mov
mov
stc
mov
ret
imul
mov
dec
dec
xor
out
stc
sbb
das
lock
lahf
insb
add
jmp
outsb
test
pop
sahf
aas
dec
or
xor
pop
int3
out
xchg
jg
mov
push
int
lea
or
or
xchg
xor
jb
decl
mov
rorb
sbbb
jp
adc
aam
and
mov
xor
decb
add
mov
aad
sahf
push
mov
push
adc
clc
fwait
mov
aad
sub
add
cmp
or
pop
enter
outsl
adc
xchg
sub
and
push
and
aaa
cld
imul
stc
arpl
jae
dec
cmp
int3
out
rorb
add
fdiv
fwait
push
iret
sub
dec
pop
lock
or
repz
imul
lcall
push
shlb
and
mov
add
cli
in
inc
inc
add
pushf
ds
and
adc
adc
xchg
sub
pop
push
mov
movsb
or
cmp
sub
mov
jb
xchg
outsl
ljmp
sbb
cmp
jp
xchg
adc
dec
push
sub
fnstsw
fisttps
jne
in
xor
sub
push
jne
mov
sbb
frstor
out
jbe
insl
loope
and
add
push
add
cmp
jge
sbb
lods
ja
xchg
lahf
jbe
xlat
pop
inc
decl
cmp
scas
xor
pushf
adc
add
outsb
inc
dec
js
dec
push
fistl
ljmp
sarl
shl
les
ljmp
lret
mov
jnp
xor
jg
mov
ficoms
mov
in
cmp
jecxz
aam
mov
clc
out
orb
xor
orl
je
push
and
adcb
and
les
inc
stos
jg
or
dec
cmp
push
sar
sub
xchg
mov
mov
call
and
ja
jp
sbb
sub
cli
scas
or
sub
adcl
nop
shrl
ds
push
jo
insl
mov
test
lcall
sbb
pop
adc
inc
inc
add
mov
add
xchg
ret
popf
xor
or
add
xchg
push
mov
lock
inc
pop
mov
rclb
push
adc
fs
add
pop
xor
mov
jle
test
sbb
into
xchg
pusha
icebp
out
mov
xor
add
mov
xor
andl
imul
into
cmp
pop
inc
add
sbb
inc
xchg
repnz
fisubs
cmpsl
fwait
movsb
addb
pushf
mov
push
push
mov
outsb
inc
cld
or
hlt
xorb
xchg
outsl
push
fbld
sub
mov
in
push
push
push
popa
jae
inc
mov
xchg
pop
mov
xor
jo
or
lock
add
push
ret
mov
popa
cs
mov
xchg
and
inc
inc
outsl
cmpsb
je
mov
mov
into
outsl
nop
mov
pop
inc
pop
cld
mov
or
in
addr16
push
mov
cld
xchg
dec
std
stos
mov
addl
jg
mov
jae
sbb
arpl
inc
xor
jbe
fldt
test
pop
je
filds
push
in
arpl
push
movntq
aad
xchg
add
jle
fcoms
std
add
enter
nop
dec
rol
jecxz
idivb
test
adc
adc
xor
test
cwtl
push
mov
ja
mov
xchg
or
in
adc
fcom
stos
or
push
insl
jbe
ret
cli
mov
invd
and
rcrb
jne,pt
test
bound
out
adc
and
outsb
clc
mov
push
sbb
sub
sub
and
jle
push
sahf
ret
pop
mov
das
fisttpll
outsb
mov
stos
pop
pop
dec
push
or
mov
sbb
mov
in
inc
jge
dec
and
push
cmp
dec
jmp
inc
and
fdiv
int
adc
lcall
mov
dec
sarl
push
sub
xchg
repnz
mov
mov
fisttpll
lea
jbe
fsts
cmc
imulb
cmp
std
pop
roll
mov
and
stos
out
mov
out
lock
and
xchg
and
xchg
or
out
inc
pusha
test
jmp
loop
inc
lret
je
fistpl
mov
xor
sbb
pusha
dec
lret
jle
das
ljmp
xor
or
mov
mov
aam
push
add
push
add
ffreep
daa
jb
ja
mov
arpl
cmp
xor
shrl
rorb
push
add
push
or
dec
incl
dec
lcall
and
push
ret
clc
fistpll
mov
shrl
push
sub
push
test
mov
in
pop
sbb
test
cltd
loopne
xor
push
imul
push
pushf
or
sti
push
push
xchg
loope
add
adc
and
pop
cmp
jne
ds
sbb
into
xchg
iret
sar
fs
push
or
fistl
cmp
out
leave
rcl
sar
clc
dec
dec
inc
jecxz
dec
shlb
xor
mov
xchg
jg
xchg
fcompl
and
jle
fsubrl
insb
mov
or
push
jg
mov
inc
dec
aas
std
or
cmp
push
imul
inc
mov
pop
fsubs
sbb
jns
xchg
test
xchg
fdivrp
inc
dec
mov
mov
test
and
sbb
cmp
pop
test
dec
add
inc
push
out
push
stos
andb
xor
or
xor
inc
pop
sti
popf
and
sbbb
out
jb
test
pop
pop
idivb
and
mov
das
ja
pop
push
clc
jg
lods
out
mov
and
sub
push
stos
dec
and
sub
fildll
xorl
adc
push
ss
inc
jmp
sub
xchg
ss
xchg
fcomps
es
xchg
dec
aad
mov
std
pop
or
add
sub
mov
lret
cmp
dec
movsb
pusha
and
mov
and
xor
sbb
xchg
in
jno
idiv
mov
pusha
adc
push
pop
notb
mov
hlt
mov
adc
cmp
or
adc
and
dec
dec
dec
add
mov
adc
push
fists
push
mov
sbb
xor
mov
mov
pop
push
lret
popa
popa
fcoml
push
pop
jp
xchg
lret
sbb
out
push
xor
insl
and
jge
stos
ljmp
xchg
add
sar
in
push
add
sbb
std
mov
mov
movsb
push
stos
rol
dec
fisubl
nop
cmpsb
mov
iret
or
xchg
mov
xchg
pop
jle
mov
and
cs
mov
add
imul
ret
incl
adc
cmp
sub
fld
movsb
clc
sub
adc
aas
addb
inc
imul
inc
push
inc
lea
inc
fdivl
mov
out
ljmp
xor
or
int3
xchg
jmp
mov
data16
or
lods
scas
jo
loop
loopne
enter
ret
or
xchg
inc
sub
mov
and
scas
mov
xchg
mov
push
mov
pusha
mov
push
rcr
ret
lock
inc
ss
fistps
sarl
mov
mov
or
pop
outsl
lods
daa
movups
sar
jle
mov
fadd
mov
pop
or
mov
add
testl
or
aas
push
xor
and
mov
add
bound
sbb
fildl
cmpsb
lahf
inc
add
xor
cmp
add
shll
ret
push
jmp
jge
adc
inc
mov
ret
js
pop
mov
or
xchg
rclb
and
insl
pop
sbb
xchg
or
push
adc
fcmovu
aad
pop
xor
out
imul
movsb
push
jno
aad
jns
mov
cmp
and
jb
shlb
or
outsb
mov
jmp
sub
or
test
lock
clc
outsl
push
and
cmpsl
push
scas
mov
sbb
jl
pushl
jmp
dec
sysenter
arpl
sub
movsl
xlat
or
sarl
jmp
add
aaa
add
push
bound
mov
pop
bound
adc
stos
loopne
ret
jno
out
lcall
pusha
sub
dec
inc
test
decb
clc
inc
lods
jb
test
and
push
ret
insb
or
cli
add
std
push
ret
push
arpl
mov
addr16
jns
lret
gs
mov
pop
dec
add
inc
add
sub
add
jb
scas
cmp
popa
cli
fnstcw
inc
bound
inc
int3
pop
loopne
or
mov
xorb
jl
cli
jo
arpl
mov
cmp
mov
jbe
into
inc
add
out
lcall
xchg
jg
jmp
ljmp
in
sbb
mov
cmpsb
push
jg
out
in
fwait
cmp
sbb
mov
jl
cmpsl
test
pop
enter
or
lcall
clc
cwtl
pop
jmp
add
movsb
inc
pushf
fiaddl
iret
dec
loope
jl
daa
andb
mov
repz
dec
inc
adc
mov
adc
push
push
into
popf
mov
dec
rcr
mov
stos
inc
push
pop
mov
repz
shll
add
pop
mov
sbb
rorl
in
daa
aas
rcrb
mov
dec
jae
inc
cli
aaa
adc
push
or
jg
aas
jo
jnp
jmp
notb
mov
xor
std
loope
outsl
sbb
sbb
aam
cmp
jecxz
incb
push
imul
or
subb
inc
mov
xorb
cmp
lahf
out
aas
mov
jp
mov
xorl
jmp
mov
cmp
sub
aas
inc
scas
mov
or
js
lods
in
push
xor
pushf
out
rcr
jle
and
pop
xchg
jns
add
leave
xchg
stos
mov
mov
pusha
inc
cmpsb
rsqrtps
out
push
adc
push
mov
push
sbb
js
outsb
incb
inc
xchg
add
and
xor
dec
mov
bound
dec
pusha
mov
push
hlt
cltd
jo
push
and
ret
cmp
inc
mov
xor
push
std
add
sbb
gs
test
mov
mov
fs
pop
mov
push
jg
mov
ss
adc
add
push
jp
xchg
enter
sub
out
movb
mov
cmp
mov
xor
std
add
rcll
push
shlb
mov
fldt
push
pop
sub
fwait
aad
push
dec
mov
data16
xchg
lret
pop
push
jb
stos
int
inc
fcmovne
jg
les
test
loop
mov
mov
xchg
mov
bound
pop
push
inc
dec
ja
mov
loopnew
and
aas
call
and
outsb
sbb
popa
jecxz
stos
cmpl
cmp
inc
loope
sbb
fmulp
in
or
lcall
stos
pop
dec
mov
lock
into
cs
pop
mov
inc
pushf
orl
sbbl
pop
xchg
mov
enter
scas
sub
cmp
or
lret
xchg
out
clc
outsl
xchg
add
push
dec
call
mov
imul
sub
lods
push
pop
test
inc
pop
lods
repnz
jle
nop
shrb
in
and
inc
sub
inc
in
pop
sub
push
or
fldt
push
fistpll
cmp
les
pop
lock
cmp
jl
cmpsl
int3
xchg
scas
ret
enter
cmpl
inc
jge
or
adc
mov
insb
movd
adc
xorb
xor
loop
dec
sub
push
push
jmp
add
adc
lods
shlb
in
sbb
jne
call
dec
rcrb
adc
pop
sar
stos
push
or
mov
push
imul
int3
rcrb
xor
and
popa
or
sbb
insb
clc
push
ret
mov
shll
pop
mov
je
or
ret
cli
pop
fcmovb
push
movsl
cmp
xlat
cmpsb
jno
or
imul
cmp
mov
inc
lock
enter
mov
dec
mov
xchg
mov
pop
jg
fstl
adc
loope
outsl
push
outsb
jae
and
movsl
pop
rorb
scas
das
pushl
js
dec
and
xor
out
shll
andb
push
lock
sub
rep
loope
rcll
pop
je
jge
addr16
adc
ret
inc
std
jno
fnstcw
les
push
adc
push
jne
decl
inc
adc
mov
test
cmpb
aam
je
add
sbb
sbb
dec
pop
testb
sub
mov
and
outsl
mov
fmul
or
aas
cmp
and
loopne
adc
repz
stos
loope
lahf
ljmp
dec
jbe
dec
loope
push
mov
ret
aad
cmc
clc
insl
mov
cwtl
mov
into
pop
xchg
stc
jp
adc
pop
push
add
jne
cmp
imul
add
pop
insb
push
lock
les
mov
jne
pop
stos
adcb
xor
or
cmp
and
jecxz
mov
push
ja
pop
cli
cmpsb
test
or
and
sub
lret
or
pop
lock
sbb
mov
outsb
mov
addb
jmp
cmp
test
and
add
inc
mov
mov
mov
inc
or
lock
loopne
in
pop
or
ret
and
loopne
pop
jl
pusha
shlb
lahf
sbb
test
mov
imul
dec
and
nop
push
push
dec
out
ret
pop
jmp
mov
pop
pop
jge
inc
push
enter
scas
pop
icebp
out
push
lret
inc
or
pushf
pop
rclb
and
repz
loope
cmpsb
push
or
inc
inc
push
sahf
xchg
mov
mov
shrl
xchg
ja
sbb
mov
and
sbb
nop
inc
mov
test
cmpsl
cmp
sub
adc
stc
lock
enter
push
mov
or
test
xchg
xor
sub
arpl
imul
rorb
mov
add
jnp
imul
popa
mov
cmp
cs
add
mov
icebp
mov
inc
adc
sub
pop
pop
out
addb
or
adc
add
pop
js
dec
decl
jbe
xchg
ret
dec
sub
inc
inc
test
adc
pop
push
push
sbb
in
mov
and
aaa
das
lock
outsb
mov
incl
mov
pop
cmc
mov
push
sbb
in
pop
pop
add
cmpsl
pop
lds
lods
aas
shll
loop
xchg
adc
jae
push
mov
dec
inc
je
mov
insl
std
mov
cmp
add
fwait
pusha
pusha
sub
stos
hlt
jbe
cmc
outsb
mov
mov
mov
sub
outsl
cli
inc
adc
dec
out
mov
xchg
cmp
dec
call
jb
pusha
sbb
jb
sub
sahf
mov
jg
mov
frstor
xchg
fidivs
inc
xchg
lret
clc
and
sti
sub
mov
call
out
repz
adc
jg
push
fnstsw
cli
fidivs
incl
xchg
sbb
add
and
mov
ret
adc
addr16
dec
loop
mov
mov
adc
mov
mov
test
xchg
dec
mov
inc
out
daa
subb
lcall
sub
test
jo
cmp
test
jnp
test
adc
fisttpll
aad
test
cmpsl
or
aam
push
sub
cmp
jg
cs
mov
mov
loope
lcall
pop
adc
add
dec
sbb
jmp
mov
push
aas
cli
pushf
xchg
push
adc
les
pushf
cmp
aad
std
pop
sahf
sbb
mov
mov
aad
scas
jb
gs
scas
pop
and
xchg
andb
inc
xchg
not
push
call
subl
fidivs
inc
jmp
jg
clc
push
jns
cmp
xchg
xchg
jnp
int3
jb
cmpb
sub
inc
or
inc
jmp
xchg
lahf
dec
pop
and
sahf
cmp
pop
je
dec
adc
cmc
mov
aad
aas
jae
cwtl
call
push
divb
mov
cmp
fstpl
cmc
test
jp
lcall
mov
inc
mov
arpl
lock
sbb
or
inc
frstor
mov
int
lahf
mov
adc
mov
sub
rorb
fcmovb
mov
sbb
pop
inc
adc
pop
adc
mov
jne
sub
inc
rorl
mov
pop
sbb
mov
jns
xchg
sbb
fistps
jo
test
jae
cmp
fs
sub
nop
gs
in
repz
jns
mov
xchg
xchg
cmpsb
add
loopnew
push
lock
dec
xchg
fldenv
dec
loopne
pusha
ret
push
or
sub
outsl
push
loope
jle
or
in
sti
fldt
mov
pop
add
jg
out
cli
insl
mov
mov
xchg
push
cs
adc
es
in
lods
ret
repnz
push
roll
test
in
xor
fsubrl
dec
cmp
ffreep
ljmp
pushf
imul
cld
jg
sti
cli
aam
dec
aaa
repz
mov
sets
fistps
icebp
push
xor
xchg
aaa
insb
fs
adc
aad
test
and
incl
je
push
xor
dec
sarl
pop
call
fsubl
imul
aas
sahf
or
xchg
sbb
fwait
inc
add
inc
mov
cmp
mov
stos
fsts
ss
outsb
xchg
inc
mov
stos
ljmp
fwait
ret
rclb
jae
dec
mov
mov
insl
add
add
mov
add
lods
pop
aam
or
xchg
ret
and
rcrb
fnstenv
inc
or
inc
lahf
rclb
jne
out
testb
cmp
loop
inc
add
sbb
mov
pop
lods
cmp
sahf
int3
sbb
test
push
jnp
add
push
mov
lods
pop
das
push
jno
mov
add
or
mov
push
mov
inc
js
ret
push
rcrb
repnz
push
cli
inc
mov
iret
sub
add
or
dec
sarb
repnz
adc
sub
mov
iret
orb
jns
sbb
dec
cltd
outsl
and
rol
add
icebp
inc
cld
inc
sahf
cmp
das
fs
aas
sub
aaa
je
pop
out
and
sub
sub
clc
pushl
sbb
mov
xchg
scas
cs
stos
jb
and
and
pop
fnstsw
push
lcall
pop
lock
test
repnz
dec
fldt
mov
lds
mov
jne
data16
push
mov
mov
jns
add
hlt
jmp
mov
popf
sbb
mov
popf
cwtl
das
js
lods
es
sub
add
xchg
add
push
xchg
sub
mov
imul
out
out
in
jecxz
outsb
fwait
fs
aaa
adc
lock
lds
mov
movsl
jbe
dec
or
je
push
std
xchg
inc
cmc
dec
dec
test
rcll
xchg
insb
test
push
and
jae
sub
test
mov
or
and
push
rcrl
mov
push
push
adc
pop
in
loope
cmp
add
popf
pop
mull
clc
and
in
aaa
or
pop
cmp
mov
push
pop
cmpsl
cmpsb
jo
scas
xor
xchg
xchg
ja
cmpsl
js
rcrb
leave
mov
jne
loope
fisubrs
bound
xchg
dec
cltd
xchg
add
pop
sub
jb
mov
dec
rorl
subps
les
test
clc
fsubl
or
cli
pop
test
insb
shrb
mov
test
push
enter
mov
ret
fistps
xorb
nop
mov
adc
cwtl
lcall
pop
mov
mov
xchg
mov
mov
push
call
lds
jl
or
mov
test
cmpsb
fs
xorb
clc
mov
popf
mov
jo
test
and
inc
das
test
adc
or
sub
cld
cmp
addr16
pusha
jno
js
pop
lods
das
adc
jns
fwait
jns
cld
dec
popf
add
enter
or
clc
fcom
cmp
jns
mov
adc
dec
dec
or
xor
pop
xchg
movsl
leave
cmp
gs
int3
add
push
insl
mov
add
jg
inc
dec
mov
push
and
mov
xchg
sub
roll
rorl
add
call
and
leave
and
dec
pop
xor
pop
mov
inc
sbb
jno
mov
jle
ret
pusha
jo
ljmp
adc
push
lea
adc
lods
dec
test
pusha
mov
out
bound
jg
dec
dec
mov
inc
sbbl
or
sub
or
hlt
pop
jge
or
mov
inc
mov
push
aam
outsl
shrb
mov
mov
mov
lods
pop
inc
addl
push
popa
cmc
dec
cld
imul
sub
push
and
xor
mov
add
mov
push
fbstp
add
js
lods
and
aas
fcmovnb
mov
add
shl
add
add
inc
mov
icebp
jmp
outsl
pop
lds
test
push
insb
scas
mov
aas
pusha
mov
mov
dec
pop
subb
pop
leave
or
test
inc
and
add
enter
clc
xor
push
loope
adc
xor
pop
jbe
and
push
xor
sbb
ret
dec
cmp
xchg
mov
je
pop
jbe
scas
adc
push
jl
mov
outsl
mov
sbb
imul
mov
or
je
pusha
lcall
xor
dec
pop
and
lret
sti
pop
or
loopne
push
jmp
inc
outsl
incb
pop
ja
fprem
ret
jo
jmp
push
push
lret
inc
enter
xchg
rcrb
jns
mov
cli
mov
lock
andb
in
or
fisttpll
in
sbbb
jp
in
fs
fwait
or
insb
aaa
xor
sti
mul
subl
fcoml
cwtl
jo
es
sbb
xor
aas
mov
pop
sbb
jg
xorl
jmp
or
xchg
call
scas
jo
mov
jmp
add
add
push
aam
inc
and
push
sbb
dec
fstpt
or
or
fwait
push
in
mov
add
xor
sarb
pushf
inc
mov
cmpl
add
out
jb
in
lods
cmpsb
and
loop
leave
inc
inc
in
int
loop
pop
nop
sbb
rcl
cs
mov
enter
test
aas
jb
pop
and
decl
lds
repnz
fs
pop
test
push
add
pop
push
or
adc
mov
sbb
outsl
sub
subl
fidivs
jg
divl
xchg
or
lods
pop
mov
cmpsb
add
test
insb
add
cs
sbb
sahf
inc
adc
mov
or
addl
je
dec
pop
jne
mov
sar
or
push
bound
es
xor
xor
mov
js
cmc
jg
push
dec
fsubs
test
sbb
xchg
nop
rolb
pop
and
addr16
aaa
sbbl
lahf
sbb
ljmp
or
lds
xchg
add
movsb
movsl
pop
cmpb
mov
and
cmp
hlt
lret
pop
adc
fwait
lahf
pop
repnz
lea
xchg
aam
test
fwait
dec
arpl
mov
add
mov
ljmp
and
push
cmp
lcall
mov
push
ja
add
sub
repnz
sub
mov
stos
in
dec
jne
cmp
jbe
sbb
and
push
jl
pop
pop
or
jle
push
pop
push
adc
iret
sub
adc
push
mov
adc
or
nop
sub
adc
shlb
pop
and
andl
incl
push
push
adc
in
subb
add
inc
lcall
icebp
push
adc
aam
pop
and
xor
arpl
rcll
lcall
dec
cli
inc
dec
mov
js
push
lret
fwait
adc
or
shll
push
movsl
adcb
push
cwtl
cmp
jmp
pop
push
ljmp
and
push
call
aas
cmp
xor
clc
call
adc
push
cmp
sub
test
pusha
xchg
dec
mov
fcom
xchg
xchg
adc
xchg
out
pop
inc
adc
mov
repnz
add
jmp
pushl
mov
popa
pop
xor
xchg
sar
xor
dec
outsb
push
nop
test
scas
incl
out
add
in
add
loopne
inc
add
imul
lods
adc
int
dec
dec
mov
and
mov
sarb
addb
lock
or
inc
aas
sar
push
pushf
sub
xor
jl
jns
outsb
push
cli
push
movsb
mov
ss
dec
pop
std
adc
pop
sbb
test
hlt
or
sbb
xchg
xchg
or
sbb
sub
and
mov
cmp
mov
dec
pusha
js
sub
mov
clc
stos
jg
xchg
incl
sub
shll
test
enter
in
xchg
test
push
or
mov
imul
rolb
popa
ljmp
dec
or
cld
outsl
mov
xchg
mov
jle
pop
fsubrl
pop
pop
fisttpl
sbb
pop
jg
jno
adc
sarl
out
icebp
es
cmc
push
popf
out
add
jnp
push
stc
lret
fiadds
lock
dec
xchg
dec
lcall
push
fwait
ss
shl
cmp
int
cld
xchg
mov
pop
mov
xchg
movsl
push
add
xchg
bound
jl
fistps
or
clc
pop
and
adc
ja
stos
pusha
and
ss
stos
ds
sbb
decl
jb
xor
sbb
sarb
call
data16
or
sarb
add
push
push
icebp
outsb
sbb
out
mov
sbb
pop
sub
cmp
dec
push
xorb
push
bnd
push
arpl
andb
add
and
jne
mov
push
cmp
xorl
sbb
fstpl
jo
and
pop
lods
pop
and
js
pusha
ffree
inc
test
shrb
das
push
jmp
clc
pop
sahf
mov
call
imul
dec
add
addr16
fimuls
outsl
sub
imul
cltd
add
adc
adc
roll
cli
icebp
jne
push
mov
aas
movsb
xor
xchg
xchg
push
pusha
sbb
aam
jle
mov
mov
cmp
hlt
dec
outsb
fsts
cmp
aas
cmp
ljmp
xor
jmp
push
insb
rcrb
daa
sub
xor
cmc
test
jb
push
pusha
or
dec
pop
lods
decl
hlt
aas
rcrb
push
ljmp
inc
xor
shrb
rorb
or
pop
cmc
repz
dec
scas
lcall
adcb
xchg
fisubs
ror
ljmp
std
pop
pusha
add
xchg
ljmp
aas
push
adc
mov
or
ret
adc
lock
mov
sub
or
imulb
sahf
and
add
les
xor
mov
fsts
loop
rcll
insl
out
xor
icebp
jmp
out
push
rcrl
test
sarl
paddw
loop
xor
aaa
dec
xchg
incl
jmp
loope
and
push
imulb
orb
add
xlat
inc
mov
int
lret
cmpsb
jne
loopne
in
and
or
mov
pop
mov
sub
xor
clc
lahf
popa
push
sub
mov
scas
nop
mov
loop
sbb
clc
outsl
clc
sarl
sbb
dec
push
nop
cld
pop
outsb
outsb
xor
jle
sbb
adc
jmp
push
repz
decl
shr
repz
roll
inc
jns
lcall
or
push
cs
mov
std
aad
mov
icebp
mov
xlat
pop
es
fisttps
cmp
mov
popf
inc
faddl
or
mov
jg
jmp
les
jge
lock
xlat
mov
sbb
mov
inc
push
xor
jnp
dec
pop
mov
cmp
xor
sub
dec
xchg
or
subb
or
cmp
sbb
arpl
rorl
iret
fbstp
fbstp
push
adc
pop
jg
add
cld
push
scas
lret
in
push
or
je
xchg
in
outsl
add
mov
pop
and
sbb
add
fisubrl
xchg
mov
inc
outsb
out
sub
lea
incb
test
add
lret
mov
in
xchg
add
pop
pop
ja
add
cmpsb
pusha
in
inc
lcall
xor
push
cmp
cmp
sbb
outsl
xchg
lods
pop
jbe
xorb
popa
sbb
lods
jg
pop
jmp
cmpsb
pop
stos
loop
sti
or
cld
push
pop
mov
cld
mov
adc
mov
mov
push
fcomip
lcall
mov
andb
add
rcll
push
lods
mov
out
and
mov
xor
push
sbb
fiadds
aam
pop
lahf
cli
sub
rcrl
add
scas
add
adc
mov
das
call
mov
outsl
push
es
es
jnp
nop
adcl
or
incl
and
adc
mov
inc
cmp
and
xchg
ficoms
mov
test
xchg
mov
mov
decl
outsl
push
rolb
pusha
mov
movsl
adc
ret
push
and
sub
sub
das
leave
xor
cs
mov
stos
rclb
inc
mov
mov
push
mov
adc
test
mov
adcl
mov
mov
push
add
push
loopne
test
or
jg
pop
xchg
mov
jns
sbb
pushf
xor
cmp
sbb
clc
and
test
pusha
in
adc
lret
incl
cld
mov
push
mov
mov
sub
std
dec
inc
pushf
lock
inc
lret
shlb
inc
adc
ljmp
push
xchg
clc
cs
fidivrs
adc
icebp
cld
add
sub
cmp
mov
add
cld
adc
add
sbb
imul
pop
jo
pop
adc
jmp
push
clc
sbb
mov
mov
lds
std
mov
fadd
inc
mov
fucom
inc
jns
rorl
jmp
pop
jno
mov
mov
jbe
xor
ss
or
push
push
cld
incl
inc
insb
leave
add
insl
out
jecxz
mov
dec
adc
movsl
in
outsl
stos
movsb
inc
dec
add
and
xchg
mov
outsl
movsb
or
adc
test
call
clc
or
sbb
sub
xchg
iret
xchg
xorb
xchg
lods
adc
aad
xchg
xchg
clc
std
or
push
mov
inc
jl
cmp
fists
popf
cli
pop
inc
dec
push
scas
and
cmpl
enter
data16
lock
sub
pusha
jp
decl
lret
jmp
js
sub
loopne
rclb
stos
shll
hlt
adc
cmc
sub
inc
jo
loopne
ja
sub
imul
movsb
call
js
mov
test
adc
add
ret
dec
mov
jb
xor
clc
call
sbb
popl
mov
fsubrp
jl
cli
pop
inc
jle
xor
cmp
sbbl
xrelease
dec
dec
xor
pop
add
cld
enter
loop
mov
lret
cmp
popf
pop
inc
mov
mov
sbb
adc
or
sahf
insb
adc
movsb
sub
ljmp
sbb
mov
adc
pop
jmp
add
test
add
or
sbb
mov
push
das
sar
push
test
bound
cli
sbb
add
call
push
rcll
imul
bound
mov
scas
mov
outsl
pop
push
adc
mov
adc
fnstenv
les
push
inc
es
xorb
icebp
jg
lret
pop
dec
in
mov
xchg
repz
xor
push
imul
xchg
sti
or
icebp
mov
inc
inc
jnp
in
dec
mov
sbb
testl
ret
mov
xchg
call
ljmp
mov
int
call
xor
popa
mov
mov
dec
js
inc
add
jmp
nop
scas
pop
lcall
mov
mov
push
xor
jb
fstpt
out
cli
aad
cmp
lods
mov
dec
add
mov
jnp
xchg
aam
inc
push
jno
cmc
push
ds
decl
lahf
aaa
andb
push
pop
popa
mov
sub
pop
sbb
movl
aaa
aaa
xor
pop
daa
and
push
dec
push
push
mov
mov
xchg
mov
rorl
lds
in
inc
xchg
xchg
push
add
fwait
xchg
xor
mov
cmp
sbb
out
mov
decl
push
scas
mov
outsb
scas
xchg
push
gs
mov
push
mov
loop
lods
cli
dec
and
ret
movsb
sbb
call
imul
lcall
icebp
call
sar
and
jo
fcmove
dec
std
int
and
mov
test
fadds
rol
scas
in
mov
mov
stos
xor
ret
adc
inc
sarb
add
and
std
cmp
push
and
mov
addb
or
ss
push
add
xchg
aas
add
jecxz
je
cmp
adc
xor
pop
cmc
orb
shrl
xor
pop
fiadds
xchg
mov
clc
gs
lds
push
cmc
shlb
push
mov
shlb
sarb
lods
out
mov
xor
mov
push
xlat
ret
adc
ljmp
mov
dec
rolb
dec
adc
shlb
xchg
cmp
daa
popa
sbb
add
test
jg
outsl
leave
mov
mov
sahf
jbe
out
adc
loopne
nop
adc
lcall
cld
push
sub
aad
adc
es
cmp
movsb
call
ficompl
xchg
jle
or
sbb
out
dec
mov
jg
mov
pop
dec
fdivl
dec
add
sbb
xchg
mov
xor
pop
jno
loopne
shll
xchg
test
and
dec
int
jl
jno
pop
shrb
sarb
mov
cltd
mov
pushf
sub
xchg
pop
or
pop
testb
fsubl
cs
add
xor
shl
push
mov
push
fcom
cld
jg
lock
insb
nop
dec
mov
jb
ret
lods
mov
adc
sub
add
sbb
outsb
sub
fstp
adc
sub
sub
xchg
mov
xor
incl
mov
mov
loope
dec
loop
cmp
in
mov
jp
stos
cmp
push
pop
sub
sbb
int
shlb
adcl
aaa
mov
cmp
inc
adc
xchg
and
lcall
aad
icebp
add
adc
xor
mov
in
adc
pop
mov
nop
shr
nop
add
mov
call
adc
and
dec
data16
sarl
or
mov
nop
pushf
mov
and
adcl
push
lcall
or
jmp
xchg
cmpb
adc
negb
pushl
pop
push
add
fistl
sub
dec
pushf
aam
insb
fsubl
or
push
jmp
or
fdivrs
adc
jmp
cmc
clc
and
sar
loope
es
xchg
movl
test
and
push
lods
sti
icebp
and
aaa
call
push
outsb
push
pop
jg
rol
scas
fimuls
mov
and
sbb
mov
sub
and
xchg
std
ljmp
test
dec
das
push
jl
inc
dec
and
adc
jo
adc
cmp
ljmp
sub
mov
dec
jne
sbb
mov
fdivrl
push
into
fiaddl
add
sbb
test
cmp
imul
jmp
pop
mov
icebp
jmp
xchg
out
push
daa
arpl
pop
xor
add
jmp
xchg
lret
xlat
ds
out
xchg
cmc
add
xchg
inc
test
pusha
ret
test
cltd
cli
xchg
sahf
inc
push
loope
pop
mov
mov
or
jmp
xor
shl
or
add
pop
sub
jb
rcr
into
sub
add
int3
repz
or
dec
fidivl
mov
incl
jl
mov
xor
dec
add
cmp
out
ds
pop
lock
les
add
movl
call
jmp
dec
mov
mov
and
pushf
jmp
adc
sub
enter
jbe
outsb
clc
fildll
xchg
data16
dec
xor
pop
loop
jle
push
or
mov
incl
cmp
addl
dec
fadd
dec
inc
and
pusha
cld
mov
in
add
xchg
sbb
dec
stos
add
jle
movsb
insb
pop
mov
jo
je
fildl
push
dec
or
adc
movsb
pop
mov
xchg
push
add
mov
pop
cld
inc
ds
sub
push
loop
adc
fldcw
lock
ss
cmpsb
mov
insl
pushf
inc
iret
icebp
jg
pop
mov
and
lret
cmp
popf
loope
jne
adc
mov
call
jecxz
adc
add
mov
ljmp
xor
adc
xor
add
sub
push
call
clc
mov
cwtl
and
add
dec
pop
mov
push
clc
add
pop
inc
mov
add
in
jl
jno
fiadds
mov
call
cmpl
add
decl
fsubrs
int3
dec
mov
mov
icebp
sbb
push
mov
or
add
or
sbb
int3
inc
push
filds
add
cmp
mov
test
aam
hlt
nop
adc
call
movsl
and
rcrl
cmp
test
cwtl
je
inc
jg
clc
es
xchg
add
sbb
fdiv
pop
mov
pop
fiaddl
orb
or
lods
cmc
ljmp
cmc
cmp
decl
push
xchg
cmp
aas
sub
je
rcll
pop
decl
mov
cld
xor
shr
cmp
int3
sbbl
fistl
dec
jle
pop
ds
adc
aas
sbb
or
inc
js
inc
les
sub
inc
int3
mov
cmp
mov
daa
mul
test
add
xlat
add
add
call
lods
xor
jo
and
ret
cld
movsl
fs
xchg
scas
adc
lret
hlt
mov
pop
lock
jae
out
push
rclb
jg
lret
pop
xor
mov
aaa
loope
js
jnp
xor
iret
mov
sahf
add
std
add
enter
ja
clc
jmp
test
xchg
pusha
aaa
test
jmp
jo
push
inc
dec
aad
and
xchg
dec
jb
cmpsb
lock
orl
addb
scas
dec
mov
popa
aaa
orl
and
sub
loop
clc
fwait
jg
movsb
adc
or
jae
pop
sbb
aam
xor
mov
mov
popa
stos
xchg
mov
cwtl
mov
xor
jns
sahf
movsl
or
dec
mov
ret
push
push
xchg
pusha
add
icebp
popf
jmp
adc
leave
clc
call
inc
inc
sbb
movl
lock
xlat
add
inc
and
xor
insb
rcrb
aad
adc
mov
cmp
in
xor
rcrl
shlb
add
inc
or
loopne
adc
mov
mov
mov
pop
and
je
jg
in
mov
imul
in
mov
mov
mov
gs
push
rcll
mov
jg
data16
es
sar
imul
mov
dec
jp
lods
shlb
enter
xchg
xchg
ss
adc
sbb
clc
aaa
mov
les
ret
ficoml
mov
fs
jg
ljmp
add
in
jp
ret
sbb
pop
push
jbe
inc
add
hlt
fwait
sub
mulb
sub
mov
sbb
jo
insl
push
mov
xchg
aaa
jmp
ror
lods
sub
ja
mov
sbbb
enter
lret
cs
das
jp
adcb
dec
cld
dec
push
jns
cmc
or
jge
cwtl
push
xchg
pop
test
jle
jp
jnp
call
hlt
dec
add
jl
add
das
test
inc
sbb
push
frstor
push
and
jno
adc
shll
jg
pusha
ljmp
lahf
cmpsl
test
add
push
in
lcall
movb
lret
xor
or
mov
sbb
mov
add
adc
adc
and
jne
loope
or
popl
cmp
pop
mov
scas
mov
mov
mov
and
ret
pop
xor
add
into
pop
push
push
xchg
push
sbb
clc
stos
sbb
ljmp
das
and
jbe
dec
movsb
push
jecxz
xchg
pop
stc
lea
inc
sti
sub
mov
dec
stc
lods
add
ret
lcall
aam
and
pop
jl
inc
rcrb
lahf
scas
clc
mov
or
cmp
mov
jmp
cwtl
pop
out
lods
sbb
dec
lods
jmp
lret
inc
icebp
inc
stos
inc
jns
hlt
cmp
fildll
xchg
adcl
shl
push
xchg
sahf
je
in
fs
push
adc
sub
sub
cld
push
movsb
int3
pop
lcall
add
ret
add
dec
jns
mov
mov
inc
mov
scas
xor
sbb
data16
rcrl
std
mov
add
xchg
inc
push
add
outsb
sub
inc
fcmovne
or
pop
add
adc
mov
or
dec
icebp
shl
call
jl
pop
xor
lcall
add
cwtl
sbb
cmp
cmp
inc
or
add
insb
pop
incl
ds
jp
out
add
pushf
divl
fs
es
lock
dec
stos
pusha
mov
cmp
xchg
into
aaa
cmp
mov
mov
jns
push
clc
xchg
icebp
js
loope
ss
cmp
pop
sar
or
or
nop
cs
add
and
pop
fdivp
jae
pop
mov
and
aas
mov
mov
hlt
cmp
adc
add
cli
jp
push
scas
aas
bound
add
les
cmp
out
push
test
fidivrs
mov
mov
jl
sbbb
dec
cmc
js
mov
jo
jo
in
or
add
mov
add
test
insb
jo
sti
adc
std
mov
call
sub
cltd
cmp
pop
sub
int
dec
mov
cmp
jmp
in
mov
test
mov
jae
xor
push
xchg
push
push
mov
or
incl
push
xlat
cmp
mov
add
mov
mov
push
dec
daa
shlb
ljmp
inc
xacquire
rcrl
mov
mov
and
mov
xchg
xor
cmpsb
jmp
sub
push
fdivrl
or
or
stc
cmp
push
xor
mov
sub
push
dec
ret
pop
and
testb
push
addb
inc
sbb
push
and
push
std
ja
lcall
out
sub
xchg
pusha
int3
rcl
cld
repz
out
push
push
push
adc
pop
fimuls
test
cmc
insl
xchg
pop
pop
gs
mov
mov
push
call
stc
arpl
nop
push
ss
imul
icebp
add
pop
sbb
push
sahf
sbb
push
xor
fadds
adc
jl
jg
adc
add
mov
push
sbbl
pop
push
pop
fcomps
jle
call
jns
jmp
lock
xor
add
fadds
rcll
js
add
dec
cltd
stos
xor
jb
adcb
fs
mov
mov
sbb
scas
ds
icebp
gs
cmp
dec
lock
movsb
jg
sub
lods
clc
xchg
add
rcll
lock
dec
cmp
sub
dec
push
xchg
xchg
cs
rcl
dec
xor
je
js
pop
sbb
cltd
lea
pop
or
mov
loope
cli
lods
mov
adc
mov
cli
call
adc
add
lret
xor
and
and
shl
out
cmp
pop
aam
ret
xor
insb
les
and
call
int3
xlat
mov
push
cld
lcall
and
sbbl
mov
lcall
mov
in
subl
lods
movsb
je
sub
scas
les
or
push
and
push
sbb
fcos
incl
mov
sbb
jb
shlb
jb
sub
pushl
hlt
add
mov
mov
ret
movsb
dec
je
das
cmpl
lahf
in
cli
lcall
repnz
or
cmpsb
and
or
lock
inc
sysret
pop
inc
push
repnz
in
test
pusha
add
loope
inc
and
into
loop
aad
in
mov
add
xchg
xchg
push
fs
rcll
outsb
loopne
rol
pushf
jns
sbb
pop
mov
cmp
inc
cli
inc
fs
or
test
and
jg
inc
ret
imull
shlb
cmpb
fildll
fwait
jl
repz
push
inc
push
sbb
ficompl
pushf
lret
or
aas
sbb
sub
add
dec
outsb
sub
xchg
mov
fwait
mov
fsubl
push
clc
inc
mov
ds
jbe
pop
inc
cwtl
adc
jbe
ds
insb
inc
and
loop
inc
jo
test
or
imul
adc
mov
fstps
push
int
dec
knotb
xor
push
xchg
lock
fcmovb
loop
lcall
insl
pop
or
call
push
xchg
mov
adc
pop
shrb
inc
pop
dec
add
inc
popa
and
mov
inc
push
or
mov
es
lret
imul
sbbl
push
addr16
js
andl
pusha
bts
inc
add
cmc
sbb
outsl
sub
adc
pusha
sbb
adc
cmc
sbbb
stos
pushf
lea
movsb
test
daa
adc
incl
lds
and
call
movsb
aaa
orl
dec
je
push
bound
lods
push
xchg
sub
mov
xchg
jo
fldl
push
pop
jp
sub
pop
cli
aas
or
test
test
les
push
fdivs
cwtl
pop
or
adc
sbb
push
lret
clc
jbe
mov
aas
retw
add
repz
fcomps
cld
xor
fmull
sar
lods
xchg
push
add
xchg
hlt
mov
ret
or
mov
aaa
or
jno
mov
sub
enter
adc
sub
or
int
inc
inc
sbb
xchg
cmp
add
imul
notb
jbe
or
push
cmp
sub
adc
insb
adc
dec
fs
mov
repz
fs
clc
les
add
insl
loop
xor
loopne
mov
dec
jno
fisubrl
das
add
add
mov
xchg
or
xchg
mov
and
push
arpl
mov
mov
es
jnp
push
fildll
dec
cli
popf
fdivr
mov
sbb
push
mov
scas
jb
sub
rolb
mov
sub
jp
mov
jbe
shrb
lahf
push
ljmp
sub
push
adc
pop
cld
sub
out
mov
cmp
dec
das
and
loopne
adcl
dec
lcall
mov
jne
dec
inc
adc
pop
jl
cmp
test
sub
sub
mov
dec
loop
push
ret
jmp
sub
inc
lahf
xchg
adc
rolb
jnp
cmc
scas
mov
loopne
fdivp
inc
mov
es
and
mov
add
aam
dec
add
or
add
inc
sbb
xor
mov
mov
adc
iret
adc
mov
dec
jbe
sbb
mov
xchg
hlt
mov
adc
add
cmpl
add
pusha
fcoml
shr
pop
js
stos
and
mov
cmpsb
and
push
ljmp
and
dec
adc
icebp
push
cs
or
mov
adc
lret
jne
push
dec
add
inc
addl
push
and
lock
std
adc
mov
push
xor
clc
mov
repnz
cmp
lds
negl
cmp
or
xchg
add
adc
fcmove
pop
pop
add
mov
pop
or
stos
aas
inc
sub
cltd
sub
or
push
jle
adc
and
pop
and
pushl
aaa
lret
loope
jg
in
pop
pop
adc
pop
outsb
inc
jg
xor
push
and
pop
cmp
std
push
add
sahf
push
inc
jg
pop
or
or
and
lods
dec
mov
out
call
lock
dec
mov
and
and
adc
mov
or
jmp
push
jg
jg
in
adc
movsb
and
cmp
push
push
loope
push
jl
fbld
and
and
rcrb
xchg
xchg
pop
out
dec
aam
sub
pop
pop
mov
enter
mov
les
popf
mov
or
mov
xchg
nop
push
xor
rorb
out
addb
out
pop
cli
call
jle
out
pop
dec
inc
sub
jmp
adc
arpl
adc
call
sub
cmp
xorl
and
xchg
lock
mov
cmp
cld
dec
xor
push
sbb
daa
shrb
xor
jmp
imul
daa
adc
sbb
pusha
add
in
xor
cmp
bndldx
insb
cwtl
mov
rcrb
xchg
iret
adc
push
pop
mov
clc
dec
cmc
mov
jl
or
imul
ss
lds
add
lock
dec
dec
cmp
adc
lds
das
jnp
push
es
and
pop
mov
add
mov
fiaddl
or
shr
xor
dec
roll
idiv
sbb
dec
fs
jno
pushl
fistpl
ja
inc
ret
cs
push
rclb
ret
decl
pop
mov
je
add
ds
fstpl
and
fdivl
mov
cmp
adc
mov
ljmp
inc
or
pop
leave
movl
andb
pusha
loopne
mov
imul
notb
mov
add
dec
popa
mov
rcrb
dec
xchg
mov
ljmp
and
push
mov
fs
xor
stos
pop
aam
jno
je
lds
mov
sub
pop
or
shrb
arpl
mov
shlb
cmpsb
mov
iret
add
and
cmc
out
cmpsl
cmpsl
insl
iret
pop
sub
push
sub
int3
add
in
add
and
insb
mov
es
scas
mov
movsl
push
ror
push
outsl
clc
sub
add
push
fdivs
dec
add
adc
orb
jle
movsb
hlt
std
out
push
lret
shll
loopne
mov
flds
loope
lock
jmp
jne
add
clc
mov
cmp
mov
jnp
jo
jmp
test
cmp
adc
jp
pop
dec
clc
imulb
cs
andb
jne
or
jo
mov
jg
push
icebp
adc
xor
sub
pop
xchg
mov
icebp
mov
dec
arpl
dec
and
fwait
hlt
mov
dec
dec
movsl
sub
mov
in
or
stos
dec
arpl
data16
out
pushl
addr16
sbb
pop
and
pusha
adc
dec
sti
fimuls
out
enter
cmp
xor
in
inc
in
mov
cmp
call
shr
into
sub
push
jbe
xor
mov
sbb
mov
shrb
aas
fbstp
call
inc
int3
ret
add
adc
notl
js
mov
pop
xorb
and
out
loop
cmpsb
test
lret
dec
dec
push
lahf
insl
in
lret
pop
jns
mov
andb
dec
jno
add
sub
cwtl
shrb
mov
fs
cltd
push
or
inc
xor
push
andb
daa
into
xchg
mov
jg
add
pop
cli
lods
cmp
push
gs
inc
xor
shlb
fwait
stc
orb
lret
inc
and
subl
rorl
fmul
mov
adc
pop
xchg
int
xor
pushf
push
hlt
incl
inc
mov
adc
dec
cli
or
push
cld
adc
in
dec
push
push
inc
popa
xchg
pop
scas
sbb
pop
inc
jno
incl
mov
or
add
mov
scas
fldcw
adc
fimull
sbb
mov
sti
mov
fcomip
fildl
scas
mov
inc
sub
sub
fdiv
decl
loop
push
push
dec
dec
or
lds
add
mov
adc
aam
xorb
mov
cmp
in
fidivs
in
pop
inc
mov
sub
sub
inc
mov
fsubl
mov
inc
add
pcmpeqd
pop
xor
pop
outsb
sub
rcrl
cmp
pop
pop
in
xor
mov
mov
mov
push
jg
ror
sarb
sub
js
cmc
jne
call
add
lret
mov
adc
clc
loopne
loopne
mov
or
out
test
mov
repnz
mov
outsb
adc
in
dec
cld
lods
mov
dec
dec
and
cs
ja
xchg
in
aam
jmp
ljmp
sub
movsb
fimull
add
push
repnz
jns
mov
lcall
les
outsl
inc
mov
add
nop
nop
mov
cmc
pushf
lea
dec
pop
sub
sub
pop
aaa
dec
mov
cmp
popa
call
iret
add
stos
xor
mov
ljmp
jno
unpcklps
hlt
outsl
dec
imul
xchg
lock
icebp
subb
call
inc
mov
cmpsl
in
cmpsb
nop
sbb
cmp
popa
push
sub
mov
add
jl
gs
cmp
adc
mov
and
jg
and
test
xor
jmp
daa
js
xchg
incl
xor
sub
mov
cltd
testl
mov
insb
ljmp
dec
add
push
movsb
lcall
mov
cld
jnp
mov
sbb
xchg
cltd
xchg
inc
adc
pop
jno
insb
fisubrs
icebp
jg
inc
loopne
rcrb
inc
sbb
cmp
pushf
sub
mov
add
lcall
or
xor
ds
shrl
outsb
add
sub
pminsw
sub
add
inc
mov
inc
dec
dec
push
sub
call
mov
adc
ret
inc
out
push
cmp
ret
push
fs
rorb
imul
imul
cmp
jecxz
clc
aaa
shl
or
lock
xor
pop
xlat
andb
jnp
mov
scas
out
je
inc
jne
dec
insb
pop
in
xor
popf
push
jge
inc
adc
or
inc
iret
iret
outsb
mov
stos
fsubl
sbb
jmp
sub
stc
xor
pop
push
or
add
push
sbbb
nop
or
and
test
sbbb
mov
test
sub
cwtl
addr16
lret
or
es
cmpsl
rorl
outsl
adc
adc
add
add
dec
add
jae
movsb
mov
mov
test
movsb
lock
and
leave
sbb
loop
je
sbb
dec
fcomp
add
je
inc
pop
andl
movsb
loope
xchg
out
in
add
lock
xchg
fwait
rcl
push
adc
ror
xchg
rclb
inc
cmp
mov
cmp
xrelease
es
sbb
sbb
int3
adc
push
push
stos
fcomip
repnz
inc
bound
cmp
jmp
adc
adc
lds
cli
dec
bound
jae
cmp
lcall
cmpsb
push
fmuls
inc
fs
cmc
mov
leave
mov
push
arpl
jl
pushl
jo
and
mov
jne
push
icebp
jnp
test
xchg
jmp
or
pop
popf
and
cli
pushf
outsl
adcb
cld
pop
adc
mov
lock
mov
clc
jae
ljmp
cmp
shlb
xor
push
mov
mov
ror
xchg
cmc
inc
or
icebp
sarb
jnp
jns
jo
add
movsl
sub
shlb
mov
subl
rolb
jecxz
data16
call
iret
arpl
jl
push
arpl
sbbb
push
xchg
or
sbb
and
mov
sub
mov
loope
movsl
pop
cs
leave
movsb
sarl
hlt
or
enter
outsb
xchg
mov
and
imul
ret
jg
mov
add
dec
aam
push
xchg
push
fmuls
ds
cld
xor
pusha
dec
dec
mov
or
mov
push
jmp
aaa
mov
fs
add
orb
std
shlb
pop
sbb
pop
xchg
pusha
sub
pop
je
xchg
mov
rcrl
dec
test
sar
mov
xor
repz
incb
jecxz
mov
scas
mov
call
xor
add
enter
dec
ss
dec
push
inc
movsb
pop
adc
test
fs
add
icebp
lcall
add
jg
mov
jbe
sbb
test
or
mov
pop
dec
inc
ja
lock
loop
cmp
add
sub
or
ret
movsb
pop
fbld
outsl
loop
in
ret
xor
scas
mov
addl
mov
jle
incl
inc
mov
arpl
into
lock
jbe
xor
sbb
out
test
cs
ja
daa
and
add
or
jno
pusha
mov
icebp
rcrl
xchg
out
in
jnp
hlt
xchg
xor
fldt
push
xor
push
xorb
outsb
mov
lds
cmp
push
jmp
adc
push
bound
jg
lea
push
int3
mov
stos
sub
pop
pusha
jmp
xchg
adc
loop
inc
adc
xchg
sbb
add
sarb
cmp
rcrb
or
sub
add
mov
js
mov
sbb
inc
jnp
test
inc
cli
fwait
dec
xor
jp
xchg
push
or
mov
sub
ss
inc
mov
mov
mov
mov
outsb
fs
push
xor
aas
sti
incl
shrl
or
xor
sbb
js
mov
xchg
mov
inc
lret
aad
mov
push
xor
or
test
sub
push
arpl
inc
hlt
mov
dec
pushf
mov
stos
add
cmpsl
rclb
pop
lahf
decl
mov
cmp
mov
lret
and
mov
jmp
cld
lock
sub
mov
movb
or
mov
xlat
cmp
in
popa
int
jp
adc
xchg
test
jb
lds
mov
xchg
and
cli
jle
lds
push
cmp
rep
repz
out
adc
mov
xchg
xor
xchg
stos
sub
jg
data16
mov
and
mov
mov
in
add
in
xor
push
in
out
aas
sarl
xchg
leave
push
pop
inc
je
and
mov
aaa
andb
mov
shlb
mov
pop
cmpsb
inc
decl
mov
dec
inc
mov
mov
sarb
add
faddl
popf
xorb
sar
inc
pusha
lret
push
int3
fcmovbe
xchg
and
es
cmp
mov
cmp
mov
or
es
mov
mov
test
aam
jne
test
jno
pop
or
test
inc
mov
clc
hlt
sub
adc
push
hlt
roll
add
aad
scas
inc
push
insl
inc
pop
and
lea
bound
les
scas
xchg
fistpl
jmp
cld
inc
jbe
pop
lods
mov
lret
xchg
outsb
or
fsubs
adc
pop
nop
or
pop
pop
sbb
fdivr
sub
jb
push
cmp
mov
outsl
mov
adc
mov
xor
lock
xchg
rcrl
mov
pop
sub
push
mov
cli
xchg
adc
cld
fildll
jge
xchg
test
incl
mov
movsb
push
cmp
pusha
cmp
push
mov
push
fcomp
mov
stos
dec
push
pop
or
mov
push
dec
lret
icebp
and
das
mov
sbb
jp
dec
lods
stos
xchg
out
stc
sub
dec
dec
sbb
popf
cmp
mov
or
mov
jb
scas
cmp
pop
shl
cmp
pop
negb
inc
data16
xchg
mov
push
sub
shlb
das
rclb
insl
aad
push
adc
mov
push
shll
jle
je
dec
add
negb
adc
mov
rcr
pop
jmp
arpl
test
cmp
mov
addb
inc
out
and
and
or
pop
mov
and
push
rclb
pop
mov
inc
scas
sti
arpl
dec
pop
sbb
or
jo
nop
and
push
mov
cwtl
adc
cmp
pop
inc
ret
mov
jb
push
inc
roll
adc
gs
and
les
daa
xchg
fmuls
inc
pop
js
xchg
es
lods
sbb
mov
roll
ret
ret
addl
cli
xchg
sub
or
adc
aad
pop
dec
aam
in
cmc
mov
fildll
pop
mov
sar
mov
push
scas
test
push
sbb
movsb
cmpsl
xlat
in
in
test
jo
xor
sub
call
inc
dec
cld
hlt
sub
lods
lcall
imul
int3
pop
pop
cmp
mov
fwait
adc
jecxz
xchg
dec
push
mov
enter
mov
scas
mov
loopne
pop
inc
sub
je
stos
test
xchg
jg
mov
xchg
push
loop
loopne
mov
push
es
pusha
inc
cltd
shll
mov
mov
ds
shl
and
in
pop
jl
call
int
ds
mov
dec
inc
jecxz
orb
mov
adc
negl
xchg
dec
inc
push
mov
push
jnp
ja
cmp
cs
dec
scas
cmp
adc
inc
cmc
dec
xor
inc
pop
and
pop
lret
cmp
xchg
rcr
mov
add
adc
sbb
or
mov
leave
mov
mov
fnstcw
add
and
jecxz
mov
test
add
mov
pop
dec
xchg
rcrb
rcrb
pop
shrl
mov
cmpsl
xchg
cmpsl
adc
mov
cld
dec
sbb
inc
into
inc
mov
fs
add
add
cmp
lds
data16
loop
push
or
mov
adc
push
fisttps
aad
or
and
leave
sub
cmp
inc
imul
cmp
hlt
dec
fldcw
and
leave
dec
roll
pop
js
push
stos
ret
mov
inc
push
sbb
xchg
incb
arpl
js
dec
jne
inc
testl
mov
orb
arpl
rcl
add
dec
insb
clc
and
inc
pop
jo
std
stc
adc
ja
adc
push
xchg
je,pt
pop
cltd
clc
jnp
sar
inc
into
mov
mov
cmc
mov
data16
sbb
xchg
shlb
fistps
mov
lret
push
dec
sbb
lret
lods
pop
hlt
inc
mov
cmp
scas
add
out
add
push
and
add
movl
fs
stc
fsin
and
cmp
out
loop
inc
dec
xchg
ret
sub
cmp
shrb
mov
mov
mov
xor
lret
inc
mov
xchg
lds
push
notb
sbb
popa
push
test
lds
stos
hlt
and
pusha
dec
xor
test
or
xchg
sbb
jnp
push
pop
jmp
jg
fcmovbe
xor
sbb
mov
pushf
popa
cmpsb
int3
pushl
or
push
shlb
inc
mov
add
cltd
sar
mov
xor
inc
jp
aam
orb
cmp
in
popf
out
bound
mov
add
xchg
fsubrp
in
out
loop
inc
movsb
jo
paddd
out
sbb
push
add
cmc
add
xorl
fisttps
imul
mov
adc
cli
xchg
mov
sbb
sahf
push
pop
loop
movsl
rcl
mov
xor
sub
iret
cmp
jle
lock
les
int
inc
sub
inc
sbb
ss
lahf
mov
sub
fimuls
push
enter
or
cs
aas
movsb
aad
cmc
mov
mov
mov
sub
test
ljmp
test
add
pop
je
pop
add
adc
out
jmp
jno
rorb
pop
jg
pop
std
orl
popa
mov
arpl
adc
icebp
jbe
mov
sub
add
pop
shrb
repz
and
mov
cli
lret
cmp
jl
ret
add
jmp
jg
pop
mov
push
mov
inc
stos
sbb
add
addb
addb
adc
stos
in
int3
adc
aaa
dec
sbb
xor
xchg
stos
sub
nop
js
inc
or
cli
inc
mov
mov
and
push
jo
push
out
mov
adcb
jg
xchg
and
mov
push
mov
mov
adc
notb
add
sbb
xchg
aas
sub
iret
jge
std
ljmp
rcl
rcll
and
pushf
mov
push
push
mov
fdivr
mov
push
mov
hlt
pop
add
js
mov
shll
jne
jp
into
fs
push
loop
mov
pop
push
add
fiaddl
sahf
xor
inc
imul
lcall
xor
dec
dec
fsubs
push
mov
or
pop
inc
pop
xor
fs
jo
insb
cld
jmp
push
fwait
jle
ds
fdivs
arpl
icebp
loopne
clc
ja
cli
adc
js
cld
bound
mov
leave
das
stos
add
addr16
into
push
and
push
jmp
xor
and
stc
xor
cmc
xorl
add
ljmp
xor
jo
xchg
xsaves
pop
mov
and
inc
hlt
or
out
lcall
pop
inc
xor
lock
sbbl
jg
and
push
mov
add
add
sub
push
js
xor
mov
mov
outsl
clc
mov
xor
push
sarl
and
pop
inc
xor
mov
lods
negl
sbb
xchg
add
mov
inc
aas
ljmp
iret
mov
inc
testl
pop
and
incl
xchg
hlt
dec
add
loope
xchg
mov
cmc
jg
movsl
scas
mov
inc
adc
add
test
pusha
pop
jge
pop
push
inc
rolb
pop
adc
jl
cmp
and
dec
cmp
ret
jbe
scas
shrb
mov
add
lods
jb
lret
xchg
aad
fs
and
into
inc
inc
fcoml
jecxz
and
push
cld
adc
inc
pop
mov
or
add
dec
jne
adc
les
scas
push
pushf
les
xor
jg
sbb
ret
rorl
cltd
sub
or
mov
lea
std
push
das
pop
xor
mov
and
add
or
cld
imul
push
push
mov
jle
push
inc
or
pop
fs
xchg
std
cmp
rcrl
in
or
adc
or
xchg
dec
cli
adc
mov
aas
pop
mov
pop
mov
push
scas
adc
clc
or
dec
cmp
repz
xchg
test
sbb
fcompl
and
or
decl
dec
cmp
sub
lods
loopne
mov
cmp
push
pop
dec
loopne
mov
jg
mov
imul
nop
insb
inc
lret
inc
mov
ret
test
mov
mov
pop
test
xlat
mov
dec
arpl
add
xor
mov
sub
cmp
aad
cmc
pop
js
aam
in
icebp
xlat
xor
pop
pop
cld
push
add
dec
lcall
fimuls
pop
nop
pusha
cmp
scas
add
push
pop
lock
cld
cmpsb
push
cltd
xor
mov
mov
lcall
dec
jne
in
movl
mov
les
jge
add
stos
sbb
add
hlt
pop
rcrb
dec
ret
inc
inc
mov
push
and
pop
dec
mov
push
sbb
shrl
mov
inc
mov
jl
sub
movsb
pop
xchg
in
scas
loope
lret
sbbl
sbbl
mov
cmc
or
shrl
ss
decl
pusha
bswap
pop
pop
insb
xor
call
nop
pusha
adc
movsl
out
inc
and
jle
lock
sub
and
dec
aad
cmp
sub
aaa
pop
pop
std
stc
test
movsb
cmp
enter
sub
dec
and
inc
xor
adc
push
dec
xor
dec
cmp
jno
je
mov
add
cmpsb
push
add
pop
dec
push
cmpsb
repnz
dec
jge
sub
stos
inc
shlb
push
enter
aaa
cld
adc
addr16
call
lcall
adc
insl
call
jno
xchg
clc
roll
xor
test
les
adc
or
xchg
aas
jle
push
mov
ljmp
xor
stos
add
fucompp
mov
mov
decl
xchg
and
loope
or
clc
dec
xlat
sub
dec
inc
jg
cltd
push
jmp
xor
inc
mov
cmovl
mov
jo
push
jmp
mov
mov
push
mov
aas
inc
call
rorb
fadd
inc
dec
push
mov
nop
aaa
pusha
addb
inc
inc
idiv
jnp
and
dec
orl
xor
les
fsubl
clc
aas
mov
add
dec
mov
mov
dec
cmp
mov
lds
mov
jg
sbb
adc
cmp
test
mov
xchg
sbb
outsb
xchg
cmp
test
mov
lock
mov
mov
ljmp
mov
popf
data16
and
sbb
or
mov
jmp
push
es
sbb
push
orl
cld
insl
fs
push
sbb
and
movsl
movsb
test
add
insl
jl
dec
dec
pusha
stos
and
pop
add
arpl
sbb
sahf
mov
and
loope
ljmp
es
in
inc
push
sbb
pop
push
sub
frstor
inc
ja
sub
aas
or
test
mov
aas
fimull
push
enter
fidivrl
push
cld
cmp
call
sub
jne
outsl
fisubrs
and
scas
dec
sub
push
sub
mov
das
mov
inc
adc
insb
jo
out
mov
fildll
scas
add
add
ds
sub
ds
jo
test
fidivrs
shlb
xor
mov
mov
lcall
rclb
xchg
sbb
or
inc
cmp
nop
hlt
push
adc
xchg
idivb
mul
pushl
add
dec
xchg
add
movsb
pop
and
sbb
cmp
scas
dec
jb
rclb
sahf
fcmovnb
mov
xchg
push
mov
hlt
mov
add
pusha
mov
lcall
or
ljmp
movsl
mov
pop
sbb
inc
shl
inc
shlb
cmp
ljmp
js
jns
xor
jns
jbe
aas
pop
call
xlat
addb
shrb
mov
pop
lods
mov
test
imul
bound
in
mov
xchg
int3
sbb
in
pushl
arpl
mov
cli
pop
popa
sbb
push
repnz
jmp
jbe
test
inc
imul
pop
push
xor
nop
shlb
sub
loopne
shrb
iret
jne
cli
jg
fiadds
insb
mov
hlt
inc
pusha
push
dec
test
sub
lcall
push
push
adc
stos
ret
push
or
cmpsb
in
test
lock
mov
add
pop
jp
stc
jns
clts
stc
cwtl
sbb
insb
xchg
push
mov
jbe
mov
adc
cmp
xorl
outsb
rclb
rcr
sbb
aaa
or
xor
loope
cltd
xor
insl
or
rcr
lods
mov
adc
cli
xchg
pop
bnd
or
mov
daa
inc
ret
sti
or
and
in
addb
aad
cld
xchg
add
inc
sub
sbb
cmp
dec
repnz
cmc
or
push
push
push
mov
mov
mov
lds
push
popa
lock
mov
shlb
add
inc
dec
cli
movsb
and
aam
sbb
inc
inc
cli
push
mov
ret
jnp
dec
in
cmp
rclb
mov
pop
test
xchg
scas
inc
js
adc
imul
xor
ret
call
test
mov
jecxz
add
mov
lock
test
pop
push
or
popf
adc
add
pop
xlat
adc
mov
mov
pop
adc
mov
xchg
jns
incl
test
xor
mov
or
cmp
lds
xrelease
cmc
lea
lock
sti
add
pop
outsl
jo
adc
xchg
push
sbb
lock
or
pop
and
push
out
or
les
push
je
andl
dec
mov
or
subb
sub
add
in
pushf
sub
cld
roll
aam
xchg
sti
rolb
clc
std
mov
movsb
test
gs
nop
js
mov
bound
stc
test
int3
jo
repz
pop
ret
adc
bound
mov
pop
out
lahf
cli
jecxz
xchg
adc
inc
mov
orb
jmp
mov
and
jecxz
lahf
dec
mov
add
add
adc
jge
push
xor
push
mov
std
mov
and
popl
add
loope
push
int3
flds
adc
sti
sar
test
inc
nop
mov
dec
sarl
dec
and
ja
inc
lret
repz
sbb
adc
pop
insl
pop
sub
xchg
loop
add
add
loopne
add
roll
sub
jns
mov
sbb
in
leave
xchg
in
hlt
dec
std
dec
lret
cmp
in
or
scas
mov
dec
fsubr
mov
into
idiv
and
fs
push
cmpsb
jl
std
or
jns
xchg
xchg
add
ja
in
nop
xor
sbb
cmp
inc
test
push
std
dec
rclb
xor
clc
outsb
shl
mov
pop
ljmpw
push
bound
and
sbb
imul
mov
jbe
add
pop
inc
add
jg
or
cmp
push
xchg
gs
xchg
cli
aad
je
mov
subl
xor
sub
and
pushf
mov
pop
jg
push
or
xor
fisubrs
xor
cwtl
adc
outsl
and
test
sub
stc
cmp
xchg
sub
aad
lahf
mov
adc
clc
mov
adc
or
rolb
mov
cld
add
cmp
call
sti
jbe
or
daa
decl
ret
push
addr16
sub
mov
aas
outsb
stos
cmp
icebp
pop
aas
or
adc
inc
or
pop
loope
push
shrb
loop
insb
clc
pop
sub
inc
and
sub
pop
sbb
push
and
pop
fs
aas
je
je
add
jg
xor
inc
push
jne
sbb
sbb
incl
inc
mov
or
add
pop
clc
or
in
rclb
jno
call
sub
push
inc
xchg
mov
fsts
insl
mov
mov
outsl
sbb
dec
pop
add
lock
mov
mov
pop
add
push
mov
sbb
rorl
aad
out
lcall
loop
push
sub
or
cmpsb
loopne
pop
dec
fiaddl
xor
dec
sbb
lock
xor
imul
and
adc
loopne
sub
mov
adc
inc
andl
inc
scas
test
movl
pushl
je
call
popa
lret
fwait
sub
mov
dec
push
mov
mov
sub
dec
call
cld
test
jg
lock
lret
push
lcall
outsl
xchg
aam
popf
mov
jle
jp
inc
js
push
popa
adc
adcb
xchg
pop
xor
xchg
xchg
pusha
scas
mov
pop
out
pop
aaa
inc
aas
push
xchg
cmp
add
das
mov
pop
jo
les
rcrb
adc
jecxz
mov
inc
pop
adc
or
lock
fstpl
shr
test
and
pop
getsec
rclb
cld
into
xchg
and
loopne
fs
jne
inc
push
imul
cld
mov
lods
incl
mov
mov
loop
xchg
inc
fsqrt
add
jg
or
test
pop
pusha
inc
sub
lcall
in
imul
enter
xor
ja
daa
pop
clc
loope
xchg
mov
clc
xchg
or
insl
std
in
xchg
inc
rorb
neg
ret
sbb
push
fs
sbb
adcb
push
out
xor
int3
int3
rcr
sbb
xchg
add
dec
mov
mov
or
lods
push
sub
mov
int
lcall
insl
add
sbb
add
cs
cmp
cli
mov
mov
sar
fmulp
cmc
add
inc
clc
repz
inc
mov
cmp
sub
pop
lds
and
mov
dec
hlt
or
and
iret
loop
mov
sarb
jge
push
ss
popa
push
pushf
xor
sbb
cli
decl
loopne
cld
add
adc
add
and
inc
jmp
mov
add
cmp
pusha
add
jmp
gs
and
add
xor
movsl
mov
pop
in
push
test
incl
shlb
xor
sbb
incl
and
sbb
and
out
jg
xchg
push
test
pop
xchg
outsl
and
shrd
mov
pop
loope
addb
sbb
cli
cmc
jg
mov
setne
xchg
sub
sbb
mov
add
cltd
jecxz
ret
rorb
xchg
icebp
adc
scas
sub
ret
sub
mov
push
out
mov
popa
or
push
loopne
ja
ret
lcall
and
dec
sbb
jno
mov
inc
in
lret
pop
movsb
xchg
pop
xchg
pop
pop
nop
stc
cmp
mov
roll
sbb
dec
mov
adc
add
movsl
inc
inc
rcrl
out
jno
jg
inc
sti
mov
pop
loope
adc
movsb
jle
pusha
cmpsl
aam
inc
loopne
lret
mov
cli
jg
fsubrs
enter
fs
cmp
out
nop
adcl
test
push
stos
shll
lds
jno
sub
lock
addr16
cmpsb
dec
cld
mov
ret
jg
sbb
add
add
mov
rcl
decb
scas
xor
xchg
sub
icebp
mov
lea
jo
sub
add
aas
shrl
lret
mov
add
mov
add
pushf
inc
sbb
scas
add
mov
mov
mov
mov
clc
fcomip
pop
jae,pt
push
xor
cmp
test
jge
jb
dec
nop
add
add
in
ret
cmp
mov
loopne
imul
ljmp
dec
fldenv
inc
cmp
pop
dec
out
addb
leave
push
fbld
inc
scas
inc
clc
lcall
cwtl
nop
sub
dec
and
outsb
movsb
hlt
mov
shr
je
loope
addl
sarb
sub
movl
aaa
aas
loopne
xor
loop
push
add
adc
adc
dec
and
inc
js
mov
cmp
lcall
nop
push
push
fsubs
fdivl
add
scas
jg
add
pop
adc
cmpsl
pop
xchg
xchg
xchg
pusha
icebp
or
out
jecxz
adc
and
icebp
xor
xchg
movsl
push
xchg
xor
aas
xor
call
add
add
sbb
cmc
mov
in
cs
sahf
inc
cmp
jg
inc
ret
call
loope
jb
pop
add
fdivrl
push
scas
cs
idivb
jo
decl
push
out
repz
rclb
adc
ljmp
dec
xor
lods
enter
cld
add
data16
xchg
dec
pushf
mov
and
loopne
mov
mov
testl
or
aad
lods
pop
cs
aas
adc
mov
lahf
nop
xchg
xor
push
rolb
cmpsb
adc
mov
sahf
push
fsub
inc
je
popa
add
sbb
mov
and
and
decl
inc
les
mov
xchg
das
loopne,pt
fstps
sub
mov
ret
mov
cld
cli
ljmp
lock
cltd
sbb
pop
in
add
mov
mov
in
enter
pop
pusha
test
cld
daa
cmp
mov
push
and
incl
inc
inc
or
int3
aaa
dec
mov
mov
ret
out
loop
clc
or
mov
mov
pop
movsl
test
jmp
lods
in
roll
stos
sbbl
dec
test
sbb
mov
mov
xchg
push
movsb
daa
sub
icebp
push
add
mov
ljmp
xlat
mov
cmp
or
enter
fidivs
jecxz
fmull
or
imul
pop
aam
cmp
in
ja
mov
xchg
add
aaa
pusha
nop
mov
clc
push
pop
leave
lds
fs
mov
loop
iret
cmc
dec
sarl
int3
adc
hlt
nop
inc
or
call
jns
adc
mul
xchg
sbb
arpl
cmpsb
cmpsb
add
dec
jne
mov
ljmp
push
push
loop
and
mov
push
insl
inc
mov
dec
xchg
cmc
jb
movsb
mov
cmp
addr16
dec
sarl
mov
aas
jg
pusha
inc
xchg
xchg
call
jg
jb
jae
pmulhw
dec
add
dec
adc
or
jbe
and
add
push
or
mov
cld
aas
rolb
or
fisubs
or
ror
shll
xorl
dec
lea
in
ljmp
outsb
xchg
jne
pop
and
hlt
movsl
je
inc
sbb
mov
ja
pushf
mov
cld
stos
es
dec
mov
or
xchg
and
add
sbb
pop
adc
or
shlb
scas
fnstcw
pop
add
jns
jle
inc
and
lahf
mov
ja
jmp
lods
mov
out
or
inc
call
fisttpl
mov
xor
cmc
xorl
pop
mov
add
fnstsw
xchg
pop
sub
fs
adc
push
pop
or
in
mov
sbb
mov
sub
xlat
dec
dec
mov
mov
or
xchg
mov
pusha
or
add
sub
cmpsl
xor
cld
push
mov
ret
insb
iret
hlt
fadds
cmc
jmp
add
sub
js
inc
shrl
repz
push
xor
stos
idivb
loope
sbbb
arpl
cli
mov
into
pusha
repz
jle
ret
std
push
mov
sar
push
subb
xchg
out
hlt
add
mov
mov
fdivl
sub
cmp
push
decb
test
addr16
cmp
add
clc
jnp
bound
cld
call
enter
jns
std
jg
push
icebp
adcl
push
inc
mov
mov
push
mov
stc
dec
ljmp
cwtl
or
ret
sbb
lcall
lea
xor
adc
push
pushf
ljmp
push
popf
dec
cli
sbb
cs
add
jb
lds
dec
inc
add
ljmp
clc
movsb
push
add
pop
in
rcrb
aaa
push
pop
xor
popa
push
cmp
xor
cmp
adc
mov
nop
jno
cmc
lea
stos
sub
sub
xchg
rclb
push
inc
stc
les
add
pop
xor
push
mov
clc
sbb
xchg
xor
fs
sub
mov
call
addb
nop
sbb
mov
nop
andl
mov
sbb
std
inc
xlat
add
movsb
pop
push
nop
mov
cwtl
or
sbb
fcmovnb
adc
inc
clc
add
icebp
stos
adc
add
adc
outsl
clc
sub
enter
dec
mov
mov
pop
adc
lcall
add
push
pop
bound
push
dec
inc
dec
adc
sbb
and
lock
cmpsl
enter
or
cmp
pop
add
and
xlat
int3
jg
or
ret
mov
jmp
testl
out
and
xchg
aas
clc
lock
add
sar
ret
call
mov
or
icebp
dec
loope
test
fildl
mul
int3
push
mov
mov
cmpsl
lahf
push
je
push
jle
cli
fistps
push
xorl
mov
mov
pop
repnz
adc
call
shll
inc
add
xorb
loopne,pt
scas
xchg
mov
ret
inc
fldl
mov
push
pop
inc
push
das
dec
out
jp
mov
sbb
or
sub
mov
push
push
outsl
adc
cmpb
xchg
insb
lcall
lahf
mov
push
adc
xor
ucomiss
xor
into
les
and
mov
pop
sbb
sub
cld
mov
testb
ret
mov
decl
rol
call
dec
nop
dec
xor
pop
subb
divps
dec
fdivr
or
mov
fildl
push
cmp
call
shrb
mov
loope
inc
xlat
mov
sub
push
imul
inc
and
push
lods
inc
mov
cltd
jmp
xchg
mov
out
mov
xor
int3
sub
test
and
insb
add
mov
out
push
sbb
cmp
push
and
in
test
out
push
jge
mov
adc
dec
push
dec
repz
pop
pop
pop
repnz
mov
lock
inc
pop
mov
xchg
cmp
imul
push
xor
loop
mov
fcomps
pop
icebp
sarl
mov
in
pusha
fwait
incb
sub
jmp
std
pop
mov
popa
lret
sub
pop
movsl
pop
add
mov
add
xchg
js
jo
inc
xlat
int
repnz
sub
sub
jecxz
js
gs
sub
adc
ss
push
in
decl
xchg
lahf
mov
cli
scas
add
dec
inc
aam
flds
js
inc
pop
mov
or
and
repnz
jo
pop
pop
jno
in
or
loop
lock
fs
or
xchg
cld
xor
inc
mov
jo
loop
push
cmp
out
out
push
push
add
ss
xlat
adc
inc
mov
sub
stc
stc
js
cld
ja
enter
push
repz
mov
push
pop
pop
mov
clc
dec
sar
dec
test
push
cmp
lea
js
dec
lods
repnz
fistpll
lahf
loop
xchg
test
push
jle
inc
xchg
fldcw
lcall
nop
cmp
int
bound
inc
imulb
jmp
or
stos
add
loopne
pop
dec
sub
int3
mov
cmpsl
cmpsl
add
fs
inc
and
repz
add
in
and
mov
mov
push
repnz
jle
lcall
push
test
pop
fs
clc
jo
dec
mov
or
adc
mov
jne
jne
daa
mov
cs
add
jns
mov
dec
ljmp
push
dec
ja
push
sub
stos
jns
out
and
cs
jl
push
fadds
push
inc
adc
jle
xchg
add
xchg
lea
push
sbb
inc
sbb
in
xchg
lea
scas
and
hlt
or
sbb
jle
pop
insl
in
ret
out
pusha
adc
cmp
dec
icebp
push
push
inc
xor
sbb
or
sbb
mov
lcall
xor
dec
mov
inc
scas
pop
in
adc
pop
dec
or
mov
int
jo
push
lahf
fs
cmp
xchg
dec
std
mov
in
xchg
fiadds
xchg
xchg
rclb
outsb
dec
or
lcall
jo
mov
incb
jl
les
sub
sub
fnstcw
mov
not
mov
je
jbe
mov
pop
cwtl
mov
scas
xor
adc
in
xor
push
inc
adc
cli
xchg
int
push
subb
jg
or
decb
xor
sub
pop
rorb
fisttps
push
inc
mov
mov
test
jnp
push
cmp
fisttpl
jg,pt
jg
cwtl
icebp
xchg
dec
subb
ljmp
inc
std
xor
iret
test
mov
lods
dec
mov
adc
cltd
and
outsb
iret
push
imul
xchg
adc
sub
pop
clc
pop
jge
xor
loopne
add
add
decl
mov
or
les
orl
shr
adc
dec
or
daa
ret
out
out
icebp
insb
ja
and
sbb
into
and
inc
push
or
mov
sub
mov
sbb
or
enter
adc
das
aaa
cmp
adc
push
add
dec
mov
add
rolb
jg
add
inc
inc
push
push
dec
add
leave
ret
push
dec
cmp
mov
sub
xchg
add
add
push
dec
jo
pop
leave
call
mov
xchg
push
popa
mov
ds
inc
dec
inc
mov
dec
inc
add
dec
xchg
xor
jne
pop
lcall
adc
ret
dec
mov
dec
insb
lahf
out
ds
enter
dec
lahf
call
mov
inc
inc
inc
ds
pop
stc
jl
ret
dec
mov
arpl
cmp
sti
push
inc
mov
add
fiaddl
repnz
sub
popl
add
inc
jp
inc
xor
xor
jnp
dec
mov
movsb
cmpsl
and
inc
push
insb
adc
hlt
xor
jmp
push
add
enter
mov
push
inc
dec
push
fmul
mov
mov
inc
outsl
push
cmp
mov
icebp
sub
popa
ja
add
jmp
rolb
add
out
cvtdq2ps
repnz
aam
inc
inc
xchg
jo
push
xchg
lock
push
lea
push
push
pop
stc
push
adcb
js
lods
sbb
inc
push
inc
jo
jae
outsb
nop
mov
xchg
imul
pop
xchg
push
pop
or
inc
sti
shrb
dec
push
xabort
ret
es
bound
push
push
add
outsl
in
int
push
inc
or
xor
imul
bound
jg
push
insb
int3
dec
push
int3
clc
dec
ds
dec
sarb
inc
add
push
imul
xchg
dec
pop
pushf
fwait
push
gs
inc
sbb
fs
outsl
movq
fldenv
popa
arpl
cs
and
push
je
pushf
push
add
rolb
mov
mov
inc
inc
cmp
mov
adc
enter
push
pop
data16
testb
imul
shll
jbe
sbb
mov
push
dec
dec
gs
xor
incb
repnz
inc
dec
jbe
adc
adc
inc
pushf
into
mov
lock
aam
adc
nop
cmp
in
add
cwtl
popf
repz
add
inc
mov
add
jmp
and
fcomps
add
jmp
push
jecxz
std
sbb
pushf
dec
mov
fisubl
jecxz
iret
xlat
in
int
jg
daa
cmp
je
add
cmp
cld
outsb
je
mov
jbe
sbb
push
jne
lods
adc
es
cmpsb
jmp
arpl
sbb
roll
enter
inc
ret
sub
fimull
ja
push
scas
loopne
jo
push
jae
adc
jns
fimuls
outsl
fwait
jecxz
jbe
mov
int3
inc
bound
outsl
xor
incl
push
push
dec
dec
bound
jmp
push
mov
pop
jb
movsb
sahf
iret
pushf
xchg
std
xchg
xor
dec
push
pop
add
jns
xor
jne
dec
sbb
xor
ja
sub
addr16
mov
testb
dec
jmp
mov
insb
mov
jno
dec
aaa
mov
rcr
cmpb
cld
jmp
insl
xor
cwtl
cmp
jp
ret
mov
clc
lods
mov
fisubl
cmp
jno
mov
fucom
cmp
push
into
xor
dec
aaa
dec
enter
or
inc
enter
xchg
pop
out
jle
xchg
dec
insl
dec
je
insl
bound
shr
js
aaa
popa
lods
cmp
inc
xor
imul
outsl
xor
daa
rol
ret
loop
xor
add
insb
dec
js
sahf
inc
cmp
dec
or
inc
push
enter
push
fwait
mov
sub
mov
jmp
pop
hlt
pop
lock
jbe
insb
clc
xchg
push
scas
push
dec
or
call
loopne
or
movsb
dec
push
push
push
push
mov
inc
dec
cld
push
sub
push
push
and
ljmp
cmpsb
fisttps
out
dec
dec
dec
cld
sbb
jle
inc
xor
pop
jo
mov
pop
sub
ljmp
les
inc
rolb
adc
push
adc
test
inc
pop
xchg
mov
andl
xchg
lock
push
inc
dec
push
or
outsl
xor
mov
inc
inc
xor
cld
jb
sbb
repz
push
ficoml
shll
push
mov
xor
shr
cmp
pushf
adc
cwtl
cwtl
fimuls
jnp
xor
fldenv
stc
or
js
cmp
inc
adcb
jae
notl
pop
xchg
inc
addr16
jp
test
orb
inc
dec
icebp
add
xlat
sti
or
add
push
pop
push
or
addr16
orb
jge
push
dec
add
clc
push
push
fsubl
cmpb
or
jg
push
out
add
push
fs
dec
fs
popa
mov
rorl
out
xor
xchg
sarb
or
ss
in
inc
aam
jg
inc
fmul
mov
inc
dec
inc
push
push
cmp
push
enter
or
loopne
dec
in
cwtl
push
push
cmpsb
lea
loopne
das
add
jne
pop
sbb
mov
rcl
cld
pop
pushf
outsb
dec
adcl
xorl
adc
cli
js
hlt
jge
mov
in
cmpb
sub
stos
dec
cli
inc
pop
pusha
xchg
and
xor
inc
dec
or
jne
mov
cs
pop
xchg
add
pop
in
inc
add
inc
cmp
cmp
jmp
push
mov
push
leave
mov
push
in
andl
fs
xor
arpl
mov
jbe
cmp
jmp
jno
inc
ja
adc
xor
mov
pop
int3
dec
imul
sbb
inc
es
push
jmp
test
push
xchg
loope
js
mov
dec
mov
shrb
pop
loope
mov
inc
jo
dec
inc
pop
stos
mov
fdiv
loopne
push
divb
jp
xchg
push
sub
popa
dec
sub
xlat
fidivrs
push
sbb
inc
ss
scas
aaa
xor
xor
dec
push
dec
mov
push
mov
mov
inc
jmp
shll
push
fcoml
out
jae
jmp
rorb
mov
and
xor
sbb
dec
decl
test
and
js
incb
jmp
xor
inc
jmp
daa
or
scas
push
inc
je
pop
xchg
loopne
ljmp
sub
lock
pop
je
js
pusha
fisttpll
mov
ja
ret
sbb
inc
push
jae
adc
cmp
xchg
jae
je
mov
push
cld
mov
mov
push
push
sbb
popf
arpl
dec
inc
mov
outsb
jbe
stos
fs
into
jl
jno
insl
mov
and
xchg
nop
pop
pushf
push
inc
imul
popf
jle
cmp
xchg
rcrb
fisttps
cmpsb
loop
mov
jne
jb
int3
pop
iret
fs
xor
mov
negb
in
xlat
add
xor
dec
jne
pop
inc
enter
lret
adc
daa
aaa
sub
pushf
inc
lret
dec
outsb
out
arpl
dec
pop
scas
popa
mov
aaa
mov
push
dec
jo
jmp
loopne
or
lods
inc
jns
jp
aas
mov
add
dec
inc
push
insb
dec
jns
add
repnz
hlt
loop
jns
arpl
dec
adc
loop
adc
les
push
loopne
ret
ficoml
xor
jo
jne
loopne
mov
dec
jne
xchg
jg
cmp
dec
sahf
dec
push
mov
pop
stc
jecxz
dec
dec
outsl
mov
loope
and
rolb
inc
push
insl
mov
mov
ret
cli
mov
push
jle
dec
jno
arpl
insl
repnz
push
cmp
js
dec
inc
xchg
cmp
jb
je
cmpsb
cmp
pushf
dec
push
arpl
sbb
pop
stc
incb
dec
push
stos
test
add
ja
ja
inc
dec
call
or
aad
sbb
push
jae
outsb
pop
repz
imul
push
popa
imul
push
in
add
dec
and
mov
xor
imul
test
inc
mov
fidivrl
jmp
rcll
push
inc
sarb
pop
imul
je
push
jo
pop
mov
pushf
je
or
push
cwtl
xor
fs
mov
push
mov
dec
xor
adc
ss
add
pop
mov
jecxz
lret
push
insb
cmp
adc
sbb
cli
xchg
and
push
ja
add
movsl
xchg
imul
cs
jbe
ret
outsl
jo
icebp
subb
mov
add
out
fs
loop
jg
inc
bound
jg
ja
push
inc
push
imul
add
pop
pop
push
shlb
js
loop
sub
sub
cmc
in
push
adc
je
sub
cmpsl
ret
pop
pop
mov
push
ds
mov
sahf
or
jo
sarl
nop
and
addr16
cmp
sub
ss
mov
fdivs
and
inc
xchg
icebp
faddp
push
push
ss
aaa
xor
dec
xor
jne
and
je
lock
inc
inc
dec
out
inc
int
xor
testl
enter
rcrb
adc
roll
xchg
lock
jbe
xchg
mov
pop
cmp
out
jne
dec
int
mov
popw
or
mov
je
mov
mov
xorb
sub
mov
pushf
loop
add
and
jno
lret
or
jnp
push
jb
dec
adc
mov
push
sub
sbb
inc
fs
jnp
clc
incb
rolb
scas
dec
in
loop
orb
jmp
xor
push
orb
xchg
inc
xor
cmp
in
xor
lea
cmc
ficompl
inc
sbb
cmp
cmpsb
fldl
mov
inc
ja
imul
dec
mov
imul
inc
clc
adc
sub
mov
pop
mov
popa
pop
inc
movl
loope
jno
inc
jbe
inc
pop
mov
fs
ja
inc
or
fiaddl
out
fs
push
outsb
cs
and
out
jmp
push
push
pop
dec
cld
and
inc
inc
dec
xor
jo
add
sbb
add
dec
cmpsl
lret
incl
ret
aas
arpl
push
jne
jbe
jo
psubb
call
xchg
stos
mov
push
ds
in
bound
dec
xor
addr16
ret
addr16
or
rcl
xor
sub
xor
andb
cmp
dec
decl
jg
loop
and
addb
and
xor
roll
adc
adc
aaa
jb
lock
pop
dec
lock
xor
dec
clc
outsb
movsb
dec
ljmp
sbb
dec
hlt
scas
pcmpeqd
add
dec
lea
stc
jmp
fsts
push
adc
rcl
cmp
adc
ret
jns
into
das
lcall
xchg
add
movsl
mov
push
xchg
shlb
push
or
mov
xor
sahf
jp
push
add
arpl
stc
inc
jmp
jl
loop
inc
mov
ret
push
or
cmp
push
ja
adc
test
cmp
dec
sarl
mov
bound
push
jmp
lds
pushf
push
insb
clc
call
xor
inc
jae
cmp
inc
inc
out
js
ret
loope
aam
dec
ja
mov
sub
lret
mov
aaa
mulb
inc
cld
lds
jae
icebp
call
push
inc
push
add
or
shlb
mov
ret
dec
inc
jo
push
jl
repz
xchg
push
roll
imul
and
dec
mov
dec
inc
jp
push
mov
add
addr16
sub
mov
fnsave
dec
inc
inc
xchg
subl
sub
or
dec
jmp
sar
push
dec
insb
test
xchg
mov
pop
test
cmc
inc
and
gs
popf
cmp
in
lret
pop
out
insl
xor
arpl
lock
outsl
inc
gs
dec
mov
sbb
ret
adc
sub
adc
dec
ret
ret
repnz
ljmp
push
insb
dec
jl
dec
and
fcmovnb
mov
pusha
jns
inc
xchg
mov
add
adc
test
xor
pusha
jne
jmp
and
mov
mov
dec
je
inc
mov
ret
inc
fwait
dec
mov
imul
push
in
sbb
or
outsb
or
shll
insb
dec
xor
aam
push
addr16
repz
mov
je
xchg
or
clc
xchg
jno
repz
cwtl
fadd
jb
imul
push
sub
push
adc
cmpsb
ss
add
mov
add
or
push
push
loope
and
sub
je
xlat
loop
xchg
fldl2e
jmp
pushl
shrb
pop
xchg
push
aaa
push
inc
dec
mov
shl
movb
pusha
lods
cmp
enter
inc
push
test
aam
out
add
sub
cs
lret
jl
mov
ffree
dec
lret
fimuls
xor
aaa
jle
lret
lods
dec
js
rclb
pop
arpl
push
mov
sarb
dec
inc
push
pusha
add
jo
pop
push
xchg
xor
js
fwait
adc
call
in
fadd
push
sub
jns
mov
jg
les
je
mov
sbb
fs
push
jb
mov
std
pop
jns
add
rorb
jp
stc
pusha
or
inc
jne
push
inc
mov
in
stc
lcall
xchg
xchg
cld
or
test
call
ret
xlat
push
dec
dec
testl
out
popa
je
jo
or
aas
test
cwtl
adc
je
push
jne
add
addr16
xor
shr
decb
fs
add
ficoml
cmp
outsl
sbb
pop
call
dec
dec
jbe
push
xchg
aam
fucompp
ja
in
or
dec
stos
or
push
push
shr
xchg
push
inc
dec
jmp
and
ljmp
xor
mov
jnp
pop
inc
hlt
xchg
sub
adc
loope
sub
testl
jno
bound
imul
xor
testl
stc
inc
lret
add
cmp
sbb
outsl
cmp
jno
test
ficomps
fmuls
rorl
adc
mov
sbb
pop
push
xor
inc
xchg
pusha
lock
or
xchg
xor
jne
mov
popf
dec
adc
mov
popa
push
imul
jmp
sbb
and
dec
jmp
sub
dec
xor
insl
rcr
push
cmp
mov
jl
inc
pop
inc
mov
cmp
push
and
loopne
push
loope
iret
call
aad
mov
pop
stos
sarl
jne
rcl
inc
pusha
pop
jno
inc
in
mov
xor
or
sbb
fsubr
imul
lock
outsb
jo
enter
jns
dec
dec
shll
ror
xchg
test
sbb
cmc
push
fcomps
shlb
sbb
sahf
stos
lea
jmp
sbb
inc
addr16
dec
add
pop
jmp
xchg
push
ljmp
inc
sub
jae
js
jo
outsb
push
mov
mov
push
dec
bound
pusha
icebp
scas
xlat
js
sbb
fucomip
mov
jns
inc
out
push
imul
xor
jno
inc
jmp
outsb
int
cmc
push
xor
dec
rcr
dec
adc
insb
mov
add
out
stos
mov
mov
push
fnstenv
jno
push
outsb
mov
inc
xchg
inc
pop
pop
push
jge
sbb
outsl
jo
dec
cmpsb
push
mov
sbb
jge
jle
dec
add
jno
pop
jne
inc
outsl
shlb
repnz
int
clc
fistpll
inc
divl
push
test
iret
js
cmp
xchg
out
cmp
push
mov
je
inc
mov
dec
inc
add
pop
mov
hlt
and
mov
mov
icebp
testb
mov
inc
call
dec
ret
lret
dec
es
test
inc
sbb
fdivrs
sbbl
or
mov
mov
cmp
and
std
aad
or
stos
add
ret
jl
sub
sbbb
push
out
fiadds
aaa
sub
jae
aaa
dec
sahf
filds
insl
gs
ja
mov
fs
push
outsb
sbb
cmp
dec
xor
mov
movsb
inc
pushf
jb
ss
pop
jl
inc
out
xor
dec
sbb
inc
cmovp
je
call
jae
dec
jno
push
pop
dec
cmp
sbb
or
mov
mov
dec
jp
negb
xor
aaa
jne
cmpsl
mov
pop
xchg
ss
and
inc
and
call
int
jle
sbb
pop
push
adc
adc
xor
bound
xchg
insl
ljmp
inc
pusha
clc
add
dec
add
rolb
outsl
out
jbe
push
loop
popl
test
arpl
xor
mov
sub
xchg
xlat
jb
loopne
rcl
adc
or
std
fs
stos
hlt
adc
lahf
cs
and
mov
sub
fstpt
inc
ljmp
jecxz
stos
fistps
dec
inc
fs
jo
inc
lock
mov
adc
inc
jbe
shr
lock
popf
pop
sub
inc
jo
lcall
jae
ljmp
jbe
aaa
push
mov
dec
mov
dec
dec
add
xchg
mov
ljmp
lock
xor
dec
and
ja
push
push
pop
jo
xlat
sarb
cmc
sub
dec
xor
pop
in
cmp
hlt
flds
push
inc
pop
mov
push
data16
fs
stos
mov
mov
inc
test
sti
cmp
ds
dec
bound
push
daa
mov
outsl
dec
loop
push
push
mov
jb
inc
data16
ret
loope
push
push
loope
enter
xor
adc
cli
dec
jecxz
or
inc
lock
dec
pop
enter
andb
push
add
rorb
lock
cmpsb
out
aas
jno
or
push
mov
inc
bound
inc
repz
cmc
testl
mov
mov
cwtl
insb
jmp
push
js
test
sub
rcll
aas
lock
add
push
outsl
or
dec
jb
loope
mov
pop
outsb
arpl
rorl
jbe
push
pop
repz
nop
rcrb
call
push
inc
pop
xor
repnz
test
mov
push
inc
in
sub
incl
ss
or
mov
je
lret
push
ds
xchg
repnz
aad
jb
pop
movsb
fwait
lock
ss
pushf
sti
bound
jae
out
insb
dec
ffreep
ret
push
insl
cli
xor
dec
or
insb
jb
cmc
mov
les
lock
mov
cmp
fsubrp
dec
push
dec
bound
and
or
push
xchg
and
xor
rcl
imul
call
test
push
pop
dec
out
xor
jo
data16
dec
mov
je
mov
jo
aaa
je
and
adc
inc
inc
dec
pop
dec
add
inc
add
jp
jge
jbe
xor
insb
fs
jns
jo
cmp
filds
stc
pusha
mov
pop
jge
and
inc
gs
das
cmc
xchg
dec
jns
dec
jmp
mov
rorl
cwtl
popw
jmp
aaa
push
cwtl
dec
inc
cmp
pop
push
xor
lahf
pop
xor
inc
test
js
out
subl
inc
inc
inc
js
mov
inc
aam
mov
xchg
jbe
in
push
test
add
cwtl
mov
add
imul
mov
nop
test
mov
sbb
dec
sbb
pop
mov
pop
mov
pop
pop
jae
inc
dec
inc
dec
mov
hlt
push
aad
fcoml
out
dec
add
pushf
dec
sbb
ja
xchg
push
cld
lcall
outsb
cs
inc
add
mov
sti
mov
inc
cld
inc
pop
out
outsl
jnp
outsb
es
mov
sub
xchg
stc
jmp
jp
xchg
cwtl
test
dec
ss
jmp
ja
aam
das
cmp
push
imulb
dec
and
lods
mov
int
bound
or
stos
or
dec
push
enter
push
xor
lock
push
pop
into
sub
pushf
icebp
outsl
cmp
ror
shlb
adcl
cli
inc
lods
nop
stos
popa
cld
mov
and
xor
xlat
loop
cli
mov
xor
jbe
imul
je
sti
mov
sub
lea
stos
pop
push
sbb
fcoml
push
inc
arpl
aam
add
sbb
cld
sub
sti
inc
cwtl
movb
int3
cmp
cmp
cmpsl
adc
inc
pusha
aas
std
mov
and
insb
or
add
clc
clc
test
or
jae
inc
cmp
dec
mov
ss
outsl
in
lret
pop
out
dec
inc
inc
inc
mov
shrl
pushf
xor
repnz
push
push
cmp
pop
into
mov
jne
adc
and
mov
jns
cmp
pusha
adc
lahf
cmp
orl
cmp
out
mov
ljmp
cwtl
mov
movsl
pop
insb
jb
fmuls
inc
add
pop
mov
push
cli
lods
sbb
xchg
sbb
lea
xor
ljmp
cmp
test
jb
inc
ss
jb
xor
subl
insb
jo
jl
mov
jo
addr16
lock
mulb
xor
mov
nop
aaa
lret
ret
enter
jne
dec
add
inc
and
lcall
stos
loopne
sbb
mov
cmp
ljmp
pop
test
outsb
call
insl
push
inc
sub
in
push
mov
repnz
add
adc
nop
mov
clc
xor
fwait
pop
ds
rolb
xor
fs
cmp
inc
cli
cwtl
dec
inc
lcall
dec
lahf
or
xchg
mov
fisubl
ret
dec
inc
cwtl
pop
je
and
inc
pushl
push
fstps
xor
pop
shlb
lret
jp
inc
fwait
test
fmull
scas
iret
pusha
imul
add
cmpsb
dec
int3
je
add
add
and
mov
or
inc
aam
adc
push
and
add
or
fsubl
dec
or
xor
add
punpckhbw
ss
xchg
mov
add
jp
fwait
ret
imul
sbb
jnp
add
jne
jns
outsb
dec
or
out
daa
dec
add
push
popa
roll
gs
add
add
sar
jnp
xor
sahf
jp
add
lods
es
cmpl
enter
lock
insl
aas
add
ds
cltd
mov
std
push
push
aaa
add
lods
sub
push
and
cmp
push
outsb
scas
pop
or
push
and
mov
jecxz
add
adc
fdivs
jae
je
mov
pop
jb
jb
push
xor
xor
xor
jg
add
push
mov
jnp
stos
sbb
fs
pop
cmpsb
insb
sub
jo,pn
inc
mov
iret
cmpsb
jp
sbb
inc
jle
add
jns
addr16
inc
xchg
mov
sub
adc
int
push
pop
rcrl
or
push
push
push
ja
inc
add
stos
and
shll
call
and
mov
and
scas
inc
dec
inc
pusha
add
push
scas
dec
push
outsb
scas
jb
or
add
outsb
insb
dec
popa
bound
xchg
fiadds
les
fisubs
or
xchg
out
fidivs
lock
push
jg
rcrl
jp
or
iret
inc
aaa
pop
mov
sbb
loop
es
push
fwait
pop
pop
adc
jp
shl
lods
loopne
inc
sbb
add
scas
adc
out
xchg
leave
push
jle
xor
jb
sub
jp
jne
jae
inc
or
inc
loop
out
mov
js
jmp
movb
mov
and
mov
inc
or
outsl
pop
lods
add
jae
mov
stos
dec
pushf
insb
stc
adc
lahf
mov
adc
cmpsb
sub
mov
daa
mov
add
pop
daa
cltd
stos
push
or
pop
pop
xchg
pop
cmpsb
outsb
cmc
cmc
fs
andb
mov
sbb
lcall
push
sbb
xor
into
mov
xchg
fimuls
xor
arpl
cld
cmp
call
pop
andb
lret
iret
mov
jae
testb
scas
repnz
adc
jbe
jbe
test
adc
add
mov
test
add
and
aas
jb
pop
mov
mov
stc
int3
cwtl
imul
pushf
nop
xchg
movsb
dec
loop
sti
icebp
adc
cmp
loope
andb
mov
mov
sbb
sbb
gs
jne
mov
mov
incl
rcll
addr16
inc
enter
fidivs
sbb
ss
call
popf
stos
mov
add
push
sub
push
cmp
cmpb
lahf
lods
mov
in
loop
and
sub
insl
jp
jge
call
out
in
pop
and
add
call
inc
imul
jecxz
out
pop
and
ds
inc
adc
cwtl
movsl
mov
mov
ljmp
shll
cmc
add
and
inc
dec
imul
aaa
jg
fwait
test
sub
loopne
aas
inc
cmp
pop
cld
jnp
mov
push
adc
inc
cmp
xchg
scas
or
cld
out
aad
or
mov
gs
lret
leave
int3
shrl
sub
sbb
dec
jle
and
loopne
in
push
fs
xor
push
or
cmpsl
inc
stos
loope
out
add
add
pop
imul
mov
pop
lock
jmp
sub
cwtl
ficompl
clc
jmp
add
jg
cld
sti
inc
push
dec
push
shr
or
cmpl
pop
mov
fisubrl
and
lods
dec
dec
pop
dec
movsl
jge
xchg
movsl
mov
mov
decl
sbb
stc
les
jbe
ljmp
out
out
stc
lea
pop
in
jne
js
test
fdivrl
fdivr
rolb
int
pushl
inc
push
pop
cmp
cltd
in
lds
adc
insl
iret
outsl
aas
outsl
clc
mov
enter
and
jno
ret
mov
outsl
lcall
shrb
push
fs
mov
idiv
repz
push
test
inc
sub
sub
clc
call
pushf
push
lret
and
fiaddl
sarb
pop
imul
jl
dec
loop
rcr
aam
sbb
xchg
insl
in
arpl
int3
mov
leave
outsb
adc
cmp
inc
lock
enter
pop
mov
pushf
inc
stc
xchg
add
jae
in
icebp
hlt
dec
inc
enter
into
sahf
aaa
ljmp
cmpsb
mov
mov
adc
dec
pop
push
stos
jno
out
int
ljmp
mov
mov
rol
adc
xchg
jg
cmpb
shrb
shr
shl
ss
cmp
cmp
es
jnp
fistpll
jle
loop
push
and
jae
xchg
add
loopne
movsb
mov
lret
rcll
decl
sbb
push
xchg
push
data16
inc
sar
clc
aas
repz
sbb
push
dec
int3
pop
add
ret
testb
hlt
sti
call
sbb
pop
push
fnstcw
ret
flds
sub
mov
xchg
orl
fidivrl
jg
incb
or
cmp
outsb
fs
test
enter
adc
and
xor
jo
jg
repnz
test
faddl
and
push
cmp
adc
fcmove
das
shlb
push
enter
pop
ja
scas
in
iret
fsubrl
jg
test
dec
in
aaa
inc
cmp
outsl
ja
xchg
popf
xchg
add
enter
inc
lcall
outsb
push
dec
dec
fwait
xchg
loope
stc
push
std
aas
dec
ljmp
in
cmp
in
adc
stos
scas
mov
or
or
pop
dec
push
arpl
xchg
xchg
stc
repz
xchg
mov
pop
repnz
jae
push
jo
cltd
ja
int
or
fcompl
sbb
daa
xor
aaa
push
gs
mov
adc
mov
cmc
add
pop
jo
push
fisubl
cmpsl
stos
aas
std
scas
xchg
mov
out
ljmp
movsl
cmpb
jns
hlt
std
jne
pop
iret
fucomip
in
fisubrs
fiaddl
repnz
mov
adc
lret
sbb
test
jae
pop
lock
insb
test
pusha
rol
sub
mov
mov
ss
mov
cmpsl
inc
ja
xor
in
int
pop
cmc
inc
xchg
aad
sti
mov
push
fwait
push
sbb
popf
jnp
in
xchg
lea
and
mov
scas
insl
jnp
or
enter
mov
cld
in
jg
icebp
in
ret
inc
xor
dec
pop
je
faddp
test
ja
loopne
or
call
xchg
test
mov
push
loopne
enter
fildll
jle
mov
add
test
rclb
xor
divl
imul
xchg
lock
cld
mov
fisttpl
jno
stos
push
daa
mov
sti
sbb
in
pop
push
enter
fisubl
pusha
subb
and
ds
dec
insb
mov
decl
mov
fcmovnb
sbb
inc
ss
xchg
je
mov
in
std
push
mov
in
popl
cmp
stc
jns
repnz
mov
sti
popa
inc
aam
lods
mov
loop
push
push
adc
push
loope
pusha
or
dec
mov
out
jns
pushl
or
test
idivb
sti
lahf
inc
dec
fs
mov
or
jo
in
mov
sar
mov
mov
aas
pop
mov
pushf
cmpb
and
sub
loopne
int
jb
stc
enter
in
inc
loopne
xchg
jo
pop
loopne
push
dec
xor
test
adc
dec
aas
addb
mov
mov
call
decb
mov
ss
repnz
insb
comiss
cmp
dec
test
test
in
sti
or
nopl
mov
lock
pusha
fsubp
addr16
pop
cli
xchg
imul
mov
xchg
add
clc
out
sbb
jmp
sub
inc
in
mov
sub
popa
inc
in
dec
movsl
movsl
out
loopne
mov
push
jb
or
loopne
mov
mov
push
pop
and
aas
pop
out
into
lahf
jle
adc
bndstx
sub
test
test
xor
into
mov
inc
test
roll
out
aaa
dec
pop
xchg
and
lret
stos
lcall
lods
mov
pop
adc
lock
scas
lods
outsl
in
xchg
mov
fmuls
daa
push
sbb
push
jbe
jle
mov
add
sub
sahf
test
xor
add
dec
cmpb
stos
flds
jl
cmp
push
pushf
cmpsb
xchg
cmp
frstor
in
cmp
fisubrl
fldl
stc
add
cmp
add
xorb
jb
ficoml
cltd
cmp
cwtl
in
in
adc
aas
pop
jb
in
xor
gs
jne
mov
in
ret
aaa
clc
aas
fldl
push
test
cmp
nop
enter
push
dec
adc
mov
mov
adc
mov
jg
lret
push
jge
xchg
mov
or
bound
cld
add
test
insl
xor
fxch
fimuls
jmp
test
movsb
imul
stos
xor
xor
cmpsb
pushf
mov
fisubrl
add
inc
jns
inc
ret
test
cld
jb
jmp
push
mov
mov
add
jb
insb
cmp
jmp
lods
pusha
jns
or
aas
aas
in
fcmovb
xor
mov
scas
movsb
insb
xchg
mov
icebp
add
in
xchg
mov
in
out
and
or
in
mov
lret
ret
inc
lods
bswap
daa
mov
test
inc
in
out
pop
aaa
stc
rcll
mov
enter
pop
stc
sub
cli
xor
push
mov
lret
xor
scas
mov
rorb
cmp
outsb
in
test
aas
outsl
add
repnz
aaa
push
dec
push
mov
test
rorl
pusha
mov
lahf
pop
cld
push
sbbb
mov
pop
and
in
pop
mov
je
adc
mov
outsl
mov
inc
cmpsl
xchg
mov
jae
mov
cs
jbe
lds
cli
test
cmp
sbb
out
sbb
lret
pusha
and
fistpl
mov
in
lock
in
mov
inc
xor
sub
loopne
dec
clc
mov
call
jmp
mov
repz
cmc
adc
or
faddl
mov
sub
pop
push
cld
pop
or
and
and
and
add
add
sti
pop
mov
xchg
int3
scas
xchg
or
jl
dec
inc
cmc
mov
xlat
jecxz
repz
pop
xor
scas
jle
test
push
sbb
dec
add
icebp
jns
ficomps
add
xor
jb
mov
mov
cs
pusha
in
outsb
stos
adc
push
js
ficompl
imul
stc
out
aad
in
lock
les
out
mov
and
jle
mov
jb
pop
or
out
xchg
into
daa
outsb
mov
in
test
adc
je
push
cmpl
in
std
testl
orb
in
rcrb
loope
popa
clc
clc
ror
psubq
and
cli
das
scas
lahf
xchg
in
xchg
test
ret
sub
mov
add
rorb
pop
add
xor
xchg
xchg
mov
leave
mov
aad
jge
int
popf
in
lock
add
adc
inc
fldl
test
push
sbb
push
inc
pminub
jmp
in
inc
cmp
add
xchg
aaa
xlat
cmp
fdivrp
lock
mov
scas
stc
dec
and
push
out
push
jg
lret
or
xor
in
sbb
mov
mov
fstl
div
in
ret
pushf
cmpb
ret
mov
push
sub
sbbb
into
int3
test
cmp
jp
jno
mov
mul
ds
in
cmp
pop
cmpsl
jae
enter
in
lret
out
cmc
pop
jbe
lea
fsubr
in
pop
and
or
jle
clc
cltd
sbb
test
push
add
pop
das
sbb
outsl
in
pop
cmc
mov
jae
inc
mov
mov
mov
adc
pusha
lock
cmpsb
ja
mov
loopne
cli
lock
jge
ret
bnd
in
push
lret
test
andb
push
jb
cmp
adc
aaa
arpl
out
dec
aam
mov
lock
in
test
out
out
negl
es
rcr
test
int
push
inc
cmp
mov
pop
add
mov
shl
out
std
mulb
int3
fs
iret
pop
jb
fs
mov
incl
mov
pop
in
jge
push
lea
jb
fwait
add
inc
and
in
inc
mov
gs
je
test
mov
iret
xchg
cs
add
jo
pusha
insl
mov
les
mov
cmp
ds
in
pop
lock
add
mov
push
sbb
int3
scas
mov
xchg
adc
lock
sbb
mov
jmp
cwtl
ss
push
xchg
push
ret
fwait
test
mov
sub
jb
and
dec
aam
xchg
aad
ror
pminub
or
out
add
push
fmull
in
adc
outsb
test
repz
clc
loopne
shll
inc
cmp
loopne
ret
sub
enter
pop
jb
and
mov
loop
cld
out
out
ljmp
pop
test
fistpll
cmpsl
cmpsb
mov
rcll
add
mov
ja
jle
push
fidivl
sbb
in
mov
dec
mov
push
xchg
cltd
popa
pop
cld
and
cmp
xor
ljmp
pop
inc
inc
xchg
push
and
dec
scas
jl
int3
mov
lret
fimuls
pusha
add
push
push
sti
jae
ja
cmpsb
daa
push
dec
loopne
ret
loop
jmp
aas
jb
idiv
push
in
test
mov
into
push
lods
fcompp
sbb
sbb
adc
cmp
jbe
mov
repz
fiaddl
dec
pop
inc
js
pop
mov
lock
stc
pop
test
cmp
les
add
jb
cld
stc
stc
out
push
push
push
dec
mov
mov
mov
lock
xor
test
sbb
xor
cmc
ss
pop
sbbl
enter
push
test
shr
xchg
pop
stc
test
rolb
loopne
in
test
cmpsl
lahf
lods
mov
out
andl
shlb
mov
in
imulb
push
insl
rclb
dec
push
xchg
xor
jp
test
mov
pop
or
test
xchg
inc
mov
shr
mov
in
ljmp
subl
add
rorb
xor
cmp
push
mov
push
add
cmc
jbe
inc
ljmp
scas
mov
bound
fisttps
incl
jb
push
adcl
add
jg
testl
mov
fiadds
pop
cld
stc
dec
push
mov
scas
jmp
mov
cmp
add
cs
cmp
clc
out
and
iret
push
loop
nop
mov
jo
shrb
lock
jmp
popa
lahf
jle
mov
repz
push
jb
out
cmp
out
mov
lret
int
sbb
dec
xor
xor
pushf
orl
pop
mov
pop
inc
aaa
shlb
cmpl
jmp
das
sar
push
pop
outsl
push
mov
in
or
dec
push
adc
fstpt
inc
add
aam
pop
push
gs
pop
mov
sbb
aas
mov
jb
mov
adc
sar
shl
pop
int3
enter
mov
cmpsb
add
ret
or
add
in
sub
repz
stos
sub
mov
js
xchg
and
push
cwtl
fidivrl
cs
xor
insb
les
out
out
in
cmp
dec
loop
pop
gs
mov
push
and
clc
fwait
pop
call
adc
rcr
jb
and
rorb
and
jb
pop
push
mov
ljmp
and
in
pop
sub
and
stos
pop
adc
jns
jl
into
mov
dec
pushf
cmp
ds
xchg
add
xorb
jb
into
add
fisttps
rcll
lret
xlat
int
imull
jl
adc
lock
jne
ret
in
out
inc
push
enter
ret
ret
faddp
bsr
int
pusha
ret
dec
xchg
jo
rol
popf
cli
test
jg
inc
fsubrp
outsl
ss
xor
and
add
lock
js
call
mov
das
cwtl
or
pusha
mov
cld
or
test
mov
imul
int
pop
mov
data16
fcomi
jp
push
pop
bound
mov
xchg
jp
push
or
imul
popa
stc
cld
roll
mov
stc
out
outsl
pop
std
and
mov
jle
mov
inc
daa
aas
sub
add
testb
fbld
inc
dec
add
jae
or
or
adc
pop
data16
cmp
dec
ljmp
nopl
mov
dec
adc
xor
cmp
aas
enter
bound
popf
loopne
mov
push
aas
or
icebp
mov
or
cmp
inc
aaa
sbb
push
insb
mov
pop
mov
int3
lret
sbb
aas
xor
je
data16
cmpsl
or
push
enter
test
bnd
inc
dec
jae
jmp
sbb
or
mov
and
cmpsl
jle
xchg
cmpsb
fyl2x
out
pop
xchg
ss
sub
inc
inc
or
mov
orb
or
push
adc
aaa
enter
in
into
cld
cmc
add
in
jb
imul
dec
aam
subb
inc
clc
fcomip
daa
std
ja
popf
orl
ss
ljmp
cmp
int3
outsl
orb
sti
ss
xor
mov
cmp
add
sub
sbbb
lods
scas
mov
fimull
cmc
sub
push
lds
mov
adc
int3
test
xabort
sbb
dec
xchg
mov
xchg
repz
scas
aam
inc
es
xor
xchg
push
mov
negl
loopne
dec
sub
lcall
shll
fisubl
in
data16
ljmp
outsb
lea
mov
mov
scas
mov
ret
sub
jb
mov
fnstcw
cmpsb
mov
or
dec
cld
add
daa
jmp
cmpsl
stc
out
sbb
mov
jg
imul
stos
and
pop
jecxz
orl
fwait
push
jo,pn
fwait
jne
out
jnp
mov
jl
aam
or
xor
int3
cs
insb
aad
movsb
enter
ror
lods
movsl
repnz
jae
out
mov
jle
fs
adc
push
mov
fwait
ja
and
clc
test
mull
fidivrl
scas
arpl
mov
aam
sub
push
ror
fimull
std
xchg
cmp
dec
push
lods
sbb
mov
push
das
dec
shlb
out
loope
clc
insb
add
push
dec
sub
call
lcall
nop
mov
adc
sbb
jg
adc
xchg
mov
in
dec
in
jnp
clc
mov
pop
rolb
xchg
std
sti
mov
or
je
push
dec
mov
loopne
fisttps
xor
mov
push
mov
out
sti
jmp
loope
pusha
es
in
xlat
aaa
jg
aas
mov
jb
xchg
movsl
mov
shlb
or
test
cli
sbb
stc
mov
cwtl
push
insl
pop
movsb
stos
mov
jmp
lock
cmp
push
int3
jl
lret
add
scas
notb
out
int
scas
sbb
inc
es
in
outsl
vmaxsd
jne
and
jae
pop
loop
imul
clc
adc
imul
pop
jns
js
sarb
push
adc
xchg
out
add
jp
loopne
jb
push
add
adc
push
shlb
aam
out
mov
pop
nop
iret
in
movsb
xor
loope
cmpsb
or
repz
ljmp
jl
mov
mov
xchg
in
out
sbb
in
cld
dec
jmp
or
stos
loopne
mov
hlt
mov
jg
pop
sahf
pop
stc
icebp
dec
ss
or
mov
pop
lods
test
jmp
idivb
cmp
dec
popa
ljmp
or
in
sbb
xor
jae
test
jbe
add
lock
jae
mov
mov
pop
pop
hlt
inc
dec
inc
cmp
in
ds
add
sbb
pop
fnstcw
sub
push
aas
loop
icebp
cmpsl
ficomps
push
cwtl
test
les
shlb
sub
stos
jg
cltd
mov
jle
push
das
into
pop
jbe
cmp
aaa
inc
push
test
lods
ret
mov
mov
or
xor
sbb
das
add
or
es
aas
pop
push
mov
push
lds
lock
int3
push
divl
dec
jb
ja
pop
stc
lret
call
pop
sahf
test
pusha
lock
loop
jecxz
ss
cmp
add
and
mov
xor
jo
sub
pop
int
mov
mov
or
add
arpl
mov
xlat
popa
in
repz
jbe
stc
inc
pop
jns
jg
test
mov
enter
push
inc
mov
fimuls
add
movsl
push
jg
xor
jg
or
loopne
mov
push
mov
push
cld
fdivr
add
and
and
lret
sub
ret
fcoms
aaa
lahf
cmc
scas
dec
popa
call
and
mov
sub
fcomi
adc
arpl
aaa
fcmovnu
mov
negl
xchg
loop
xchg
out
test
outsl
aam
jmp
cld
pop
sbb
jl
scas
cld
add
and
sbb
shll
mov
xlat
pusha
sbb
jns
xlat
inc
cld
mov
fdiv
or
fwait
mov
push
fisubl
add
cmp
sarl
popf
mov
pop
mov
into
or
add
call
jmp
add
inc
push
pusha
push
xchg
mov
mov
je
pusha
pop
pop
imul
pop
repz
dec
icebp
dec
test
add
jg
fsubrp
addl
stc
or
punpckldq
imul
loop
fidivl
test
imul
and
xor
test
xor
test
into
imul
pop
das
dec
ficoml
fmull
int3
pusha
jmp
lcall
xchg
sub
aam
in
jecxz
daa
enter
mov
xchg
test
out
cld
pop
pusha
addr16
or
cltd
aas
decb
add
pusha
mov
sbb
lock
int3
sbb
in
inc
fisubrl
into
pop
adc
enter
aad
lret
popa
sbb
ret
sahf
dec
cmpsb
loopne
add
out
adc
push
lods
mov
and
jno
mov
add
fidivl
mov
cmp
pop
jnp
leave
pop
in
enter
mov
clc
or
cwtl
fwait
leave
cmpsb
inc
stos
push
in
out
scas
cmc
mov
sub
int
add
call
cwtl
in
aam
fistpl
mov
loopne
adc
pusha
insb
fsubrs
xchg
xchg
leave
push
out
add
add
jae
pop
loopne
add
das
out
or
jbe
shrl
adcl
movsb
cmp
in
jne
mov
and
or
adc
popa
xchg
push
es
repnz
imul
dec
pusha
mov
xchg
faddp
std
sbb
sub
mov
push
cwtl
sti
mov
in
fwait
hlt
add
or
les
ss
cmp
pop
mov
mov
sub
inc
sahf
pop
jae
inc
dec
push
cld
push
repnz
jnp
fidivs
jge
jbe
or
lds
fdivr
push
sbb
and
in
fsubs
test
inc
loope
idivl
inc
mov
loop
mov
test
dec
stc
aam
cmp
lock
mov
cli
adc
int
inc
dec
lcall
cmpsb
in
int3
loopne
in
push
pop
into
inc
dec
pop
sbb
pusha
mov
pop
add
or
pop
loopne
mov
call
clc
sub
jp
xchg
push
imul
or
das
mov
xchg
lahf
enter
aad
or
mov
out
xlat
adc
leave
stc
adc
rcr
fdivl
jle
subl
test
jmp
fcompp
jno
jmp
out
xor
jne
cmc
int
lcall
sarl
testl
pop
mov
mov
std
adc
loopne,pn
imul
add
lock
xchg
sti
mov
test
xor
push
aaa
out
cmpl
in
lret
int3
in
sub
lock
mov
cmpsb
add
mov
pop
jb
fnstcw
inc
test
int3
push
cmpsl
pop
fdivrs
stos
ret
icebp
call
dec
push
int
push
jge
pop
jb
cmp
int3
add
loopne
daa
outsb
aas
and
mov
lock
pop
or
scas
push
jl
cmp
int3
outsb
jp
inc
movsb
fidivrl
shlb
push
mov
xchg
xor
bound
aaa
in
xor
or
sub
sarb
daa
test
adc
mov
xlat
mov
dec
loope
add
xchg
sub
lods
xchg
stos
lcall
test
jae
ss
stc
xchg
mov
fwait
lock
aad
addr16
pop
int3
sti
xlat
pop
add
imulb
adc
int
fisubs
pop
mov
fdivr
cmp
pop
sbb
iret
push
xorb
adc
es
xchg
scas
mov
inc
loope
ret
mov
rcr
jg
push
shll
stos
mov
dec
out
adc
inc
push
aad
cmp
push
cmp
push
lock
mov
adc
push
cmp
cltd
ficompl
jg
sbb
leave
xchg
xorb
inc
mov
hlt
mov
mov
sbb
push
inc
in
loopne
popf
je
mov
ljmp
jne
popl
fsubrl
loopne
data16
rorb
nop
sahf
xchg
mov
fwait
sub
test
push
pusha
arpl
lahf
in
sbb
xchg
stc
test
lods
dec
dec
aam
mov
jae
shr
clc
scas
jge
xor
lea
repz
clc
movsl
lcall
divl
les
mov
daa
aam
push
loope
out
jb
test
sti
clc
jge
test
out
pop
ja
int
xchg
sbb
inc
jmp
in
gs
add
insb
adc
cmp
or
and
xchg
push
cwtl
les
fimull
or
dec
ret
stos
fildl
push
and
notl
and
clc
push
add
add
pop
xor
xor
add
stos
inc
lds
add
sub
adc
test
xchg
pop
aaa
jnp
and
sti
inc
dec
fimull
adcb
fdivrp
mov
in
jbe
cmp
pop
movsb
cltd
test
xchg
loopne
jp
pop
lock
mov
xor
cmp
rcll
aam
mov
fmulp
pop
jmp
mov
xchg
xchg
imul
shrb
add
cmpsb
mov
cmp
dec
in
aaa
adc
hlt
push
mov
addr16
jecxz
xor
lea
out
xchg
aad
jg
enter
int3
add
jae
lahf
incb
mov
loopne
mov
pop
int
roll
fisubrl
jbe
cmpsb
mov
fwait
lcall
sub
in
out
push
pop
mov
fists
cmp
mov
dec
lea
or
dec
dec
push
in
push
jl
inc
fwait
mov
xor
movsl
dec
inc
out
imul
mov
decl
insb
jp
inc
fdivrl
test
mov
fsubrp
dec
cmp
ss
arpl
ja
dec
cld
fldt
inc
lret
cmp
aam
mov
mov
cmc
aas
mov
push
push
call
lods
test
rcrb
pop
jnp
insb
ret
das
sarb
inc
or
mov
push
lea
es
lock
mov
jge
cltd
sbb
shr
imul
or
dec
mov
mov
test
out
sbb
xchg
mov
lcall
lea
push
arpl
push
push
lret
std
or
cmpsb
xor
sub
lahf
xchg
xor
mov
aam
pop
loope
add
jbe
sbb
loopne
test
push
or
imul
shll
insl
adc
out
dec
ljmp
sar
scas
jmp
push
push
dec
js
fwait
test
loope
add
test
jp
jl
push
sub
mov
mov
xor
cld
add
push
jae
mov
sub
cmp
adc
fiadds
xor
add
in
sub
aas
xor
inc
cmpsb
lods
int3
int3
ret
aaa
bound
aas
out
mov
jne
lcall
pusha
inc
ss
popa
xchg
mov
std
fwait
or
rcrl
in
jns
shll
or
sbb
dec
pop
hlt
adc
scas
test
and
pop
mov
mov
aas
mov
in
cli
pop
cmpsl
push
jae
sub
adc
fcompl
cmp
mov
lods
xchg
xor
cmpl
and
mov
cmp
shrl
pusha
test
inc
cmpl
pusha
les
adc
int3
sub
fistpl
xor
or
jg
dec
popa
cmp
stc
mov
bound
in
pop
mov
shll
mov
loope
mov
mov
inc
sbb
pop
ficoms
das
dec
and
pop
sbb
enter
jl
xchg
pop
xor
xchg
in
mov
cmp
jnp
aaa
scas
jp
sbb
loope
pusha
push
mov
mov
leave
cmp
mov
pop
fldt
fdivr
or
mov
adc
rcll
mov
jecxz
in
mov
addr16
inc
sbb
mov
jbe
movsl
jno
lock
lock
arpl
loope
stos
vpsubsb
inc
js
popa
inc
xchg
xchg
xchg
sub
push
roll
lock
sub
js
jns
jne
jns
inc
mov
cli
pop
cmp
in
and
sbb
cmp
add
jbe
jb
fs
shrb
fucomip
mov
aas
dec
pop
dec
lret
ret
ret
xor
pop
loope
mov
pop
inc
fists
pop
jg
sub
int3
sahf
std
mov
sub
and
mov
scas
cmpsl
mov
jle
hlt
sbb
and
pop
jae
adc
mov
ret
decl
mov
jecxz
aaa
cmc
lahf
pop
xor
dec
xchg
ret
inc
sbb
xor
sbb
jl
jmp
jo
mov
fwait
cmpsl
pop
and
fistps
xor
stos
xchg
mov
clc
or
int3
dec
xchg
xor
lcall
out
mov
aas
dec
adc
inc
imul
scas
cwtl
loop
test
std
inc
insb
dec
xchg
dec
outsb
adc
jle
mov
xor
and
xor
jmp
sbb
sub
pushl
sbb
dec
pop
xor
mov
test
pusha
jle
imul
shll
adcb
cmp
mov
mov
dec
dec
test
scas
sub
hlt
mov
dec
and
adc
cmpsb
dec
insb
out
add
js
sbb
pop
movsb
jb
jl
cmp
xor
dec
sub
jge
sub
test
pop
lods
call
mov
inc
dec
pop
xor
mov
pop
call
cmp
adc
mov
mov
shl
fcmovbe
dec
push
jle
sti
push
and
mov
shr
cli
test
dec
nop
push
adcb
pop
les
sahf
mov
lock
dec
movsl
cmp
xchg
mov
mov
fcoml
aas
fsub
or
insb
lea
aam
fildll
xor
pop
fsubr
negl
mov
adc
in
add
pop
int3
fisubs
cmp
cld
stc
fistpll
mov
or
sti
icebp
xor
ret
gs
mov
fildll
mov
ds
or
cltd
xchg
test
lret
in
xor
add
push
fxch
mov
popf
rorl
iret
fimull
daa
add
inc
insl
bnd
fiaddl
fbld
push
jb
push
and
hlt
xchg
xchg
adc
add
mov
sti
or
icebp
dec
pop
loop
les
push
xor
out
or
int3
cmp
mov
loop
mov
aaa
jl
mov
mov
sbb
sub
je
mov
ja
test
rcll
mov
outsb
jb
add
mov
push
decl
adc
fcmovu
out
jp
rorl
add
stc
cmp
xchg
jmp
loop
jge
sbb
adc
pop
cmpsb
xchg
aad
dec
push
aam
fs
test
movsb
and
dec
lds
cmpsb
insb
sahf
enter
fdiv
add
std
sub
nop
or
rolb
xchg
xor
adc
sbb
pop
andb
rolb
repnz
push
ss
mov
sub
push
sbb
arpl
lret
out
dec
out
add
js
das
push
int3
xor
aam
test
pop
in
dec
addr16
lret
aaa
insb
xor
imul
or
js
sahf
jmp
or
jge
sbb
lea
mov
cld
test
and
inc
loop
out
mov
sub
cmp
xlat
jl
lahf
lods
mov
push
cmp
test
or
fiadds
scas
jl
sub
out
add
test
xchg
jb
mov
fimull
pop
xchg
or
pop
jb
repnz
jb
cs
fs
test
xchg
dec
dec
out
lds
push
inc
mov
cwtl
fidivrs
mov
loop
add
inc
loopne
js
enter
jg
lea
inc
int3
pop
fiaddl
inc
fsubs
cvtps2pd
pop
jmp
push
push
adc
insb
lcall
aaa
jg
fwait
push
popw
imul
ljmp
cwtl
mov
jle
loopne
xchg
mov
scas
ljmp
movsb
cmp
inc
jns
out
cmc
scas
and
sub
dec
and
dec
push
or
cld
push
mov
cltd
lea
sub
hlt
ds
add
sbb
pop
mov
cmpsl
loopne
dec
adc
jb
sbb
enter
clc
jmp
dec
cmpsl
sub
adc
ss
push
cmp
lods
sbb
jg
roll
mov
jg
cld
ret
adc
sbb
test
lahf
cmc
mov
adc
push
mov
xchg
roll
addb
sub
stos
outsb
adc
xchg
movsl
pushf
pop
fxam
xchg
xor
pop
fldl
jle
lock
adc
fiadds
pop
pusha
lahf
iret
mov
test
ja
add
xchg
int3
xor
rcr
icebp
pop
push
xchg
ja
or
aad
fcomps
xor
daa
loopne
pop
stos
add
dec
and
push
jg
pop
js
popa
jno
cmp
jmp
sbb
xchg
push
jnp
mov
popf
xor
inc
or
lea
incb
push
mov
xchg
sarl
inc
and
lds
js
mov
push
and
sbb
cmpsb
mov
adc
xor
or
hlt
iret
dec
out
pop
sbb
scas
ret
je
mov
repnz
adc
jg
adc
addb
adc
filds
or
and
loope
and
std
pop
std
out
shrl
or
xchg
daa
or
inc
dec
daa
push
jecxz
test
jg
xchg
mov
iret
les
jno
mov
or
cwtl
movsb
add
xchg
push
push
mov
sub
inc
data16
add
cmp
pop
popa
sti
mov
mov
xor
push
movsl
lock
sahf
push
hlt
and
pop
sbb
movsl
clc
out
js
out
mov
int3
inc
cmp
pop
jp
jge
enter
inc
pop
xchg
ret
xchg
mulb
mov
jg
add
mov
jg
push
nop
cld
test
int
icebp
push
loope
xor
fsubs
or
test
in
jae
xchg
punpcklbw
xchg
and
pop
loopne
inc
and
mov
in
hlt
movsl
outsb
push
and
ds
test
pop
mul
and
xchg
sub
jge
mov
aam
adc
jmp
ficompl
cmc
xchg
cmp
and
sub
pop
jb
fiadds
test
test
sub
bound
push
shlb
popa
mov
sar
sub
pop
inc
in
clc
mov
jb
fisttpll
sti
xor
push
dec
add
std
lods
mov
imul
push
les
int
out
cvtpi2ps
dec
pop
imul
jnp
fcmove
es
mov
addb
sbbb
call
mov
add
stc
mov
in
pop
mov
std
das
cwtl
xor
add
ficomps
xchg
pop
mov
jo
mov
jb
push
inc
mov
leave
mov
and
ja
push
and
int
push
sub
subb
adc
adc
push
pop
in
dec
jp
mov
dec
arpl
cmp
iret
dec
lret
adc
sub
jle
imul
sbb
pusha
cmp
pop
mov
jg
fidivs
stos
pop
xchg
into
xchg
fidivrl
sbb
movsl
pusha
inc
not
add
sbbb
pop
aaa
sbb
loopne
mov
and
loope
lahf
hlt
lret
in
jno
xchg
shlb
push
aas
dec
sahf
sbb
mov
add
sub
xchg
aas
inc
rcr
ret
daa
scas
cld
sub
and
test
std
mov
int
adc
sbb
xor
ret
test
stos
testb
jne
lock
jae
push
mov
xor
xchg
popf
push
aad
in
cmp
xchg
in
push
inc
pusha
inc
sub
je
mov
add
jle
sbb
adc
jnp
xor
pop
lock
mov
cmp
hlt
data16
xchg
jg
les
adc
jns
dec
pop
pop
jo
cltd
dec
jne
fdivrs
iret
int
rorb
mov
inc
seto
and
inc
cmp
je
dec
or
mov
sbb
mov
push
fidivrl
repnz
cmc
sbb
xchg
in
and
dec
xchg
mov
int
stos
sbbl
call
lock
hlt
lret
mov
fwait
ja
push
jb
push
lock
adc
or
imul
jg
leave
mov
inc
shrl
in
test
sub
add
les
or
jb
loope
jae
cs
outsl
adc
clc
inc
mov
sti
pop
push
or
adc
outsl
cli
out
arpl
add
xchg
mov
lds
test
jne
sahf
xchg
fwait
mov
sbb
cmp
lcall
mov
out
xchg
clc
adc
xor
inc
and
xor
out
jne
xchg
cmp
push
jle
bound
cmp
dec
outsb
sub
loopne
sbb
sti
adc
mov
xor
out
call
sbb
mov
push
inc
loope
int3
pop
mov
push
hlt
outsb
shrb
in
mov
add
addl
addr16
mov
pop
pusha
pmaxub
test
push
cli
andb
and
fimull
mov
and
out
pop
or
ret
arpl
xor
inc
xor
insl
ret
sar
cmp
cld
out
xor
mov
cs
int3
mov
lea
into
sbb
and
loope
test
lret
pop
les
bound
fidivs
lahf
in
mov
pop
mov
ret
mov
dec
int3
test
ja
fisubrl
adc
jb
in
push
jecxz
addr16
aas
hlt
mov
repz
add
cmp
mov
gs
fnstenv
hlt
aas
into
int3
fs
xor
test
inc
dec
push
orb
mov
sub
or
mov
ret
aas
loopne
dec
fbstp
test
mov
mov
pop
cli
cs
xor
fldcw
mov
xchg
lods
ret
cmp
push
cmp
mov
push
out
pop
push
and
inc
mov
movsb
aas
decb
dec
or
pop
and
mov
gs
cld
push
mov
push
jb
fdivs
data16
repz
dec
sti
sbb
cmpsl
pop
test
inc
cmp
mov
scas
les
enter
jmp
or
jbe
jecxz
pop
movsb
and
jle
mov
out
ror
imul
or
pop
mov
test
add
mov
push
imul
fcomps
std
ljmp
adc
cmp
mov
scas
enter
aaa
test
or
adc
rol
jne
cmpb
scas
fs
adc
aad
jg
pop
int
movsb
lock
das
cmp
cltd
jb
idivl
nopl
clc
and
test
je
aas
or
addr16
mov
hlt
jnp
mov
push
pop
xchg
fxch
test
pop
jg
mov
movsb
fbld
and
push
xchg
imulb
dec
lods
out
lock
jne
int
ljmp
mov
shl
sub
cwtl
and
mov
add
pop
mov
insb
cmpsl
push
lock
cmc
pop
jle
shld
jae
fs
add
mov
dec
jmp
aaa
ret
test
jae
jle
cmp
xor
pop
push
inc
rclb
pop
mov
mov
dec
js
sub
jb
jns
pop
xchg
lods
mov
outsb
adc
or
mov
fwait
aaa
jmp
jb
xchg
ds
lret
xchg
test
push
mov
inc
outsl
out
mov
sub
cs
fwait
push
and
test
sub
xchg
inc
inc
jecxz
sbb
cli
mov
mov
ret
inc
les
and
dec
lock
inc
js
pop
cmp
js
mov
sbb
dec
fdivr
push
push
jo
lds
cwtl
push
in
out
sbb
ret
xchg
cmpb
mov
sbb
xchg
and
xor
sbb
pop
lahf
cmp
dec
out
dec
and
mov
ss
cmp
inc
test
mov
add
mov
push
jb
cmp
inc
dec
mov
pop
jle
mov
pop
cmp
movsb
stos
imull
jne
lahf
xor
pop
mov
mov
enter
sbb
inc
jb
or
test
punpckhwd
andb
adc
ja
jns
add
inc
mov
in
aad
cmp
stos
push
or
shrb
in
or
or
fs
cmc
iret
and
decb
ret
and
and
rcrl
cmpsl
mov
repz
aas
dec
inc
mov
inc
mov
js
cli
lds
movsl
fucom
xchg
cmpsl
negb
sub
cli
pusha
pop
loopne
popf
int3
xor
lock
xchg
in
pop
cmp
pusha
sarb
pop
cld
jecxz,pn
jl
lods
enter
bound
lea
int3
outsl
inc
jnp
and
dec
or
pop
pop
pop
xchg
mov
mov
fisubl
mov
imul
and
addl
inc
repz
pop
xchg
rclb
mov
test
push
aam
push
popa
test
mov
dec
jp
or
out
mov
leave
aad
incl
fadds
xchg
sbb
aaa
scas
pop
fistpll
scas
aas
in
je
ja
mov
pushl
xchg
adc
dec
pop
push
lret
push
xorb
loop
ficoms
push
jnp
enter
mov
pop
xor
arpl
cmpb
mov
ja
push
bound
int3
movsl
dec
inc
xchg
mov
mov
rorl
xchg
add
cltd
bound
mov
xor
call
dec
inc
les
or
int3
pop
sbb
ret
movb
adc
push
xchg
ss
add
das
and
lock
loopne
jl
leave
aam
out
jp
inc
mov
push
push
outsb
pop
mov
data16
xchg
neg
rorb
and
sbbb
sbb
in
push
mov
jg
pop
lock
loopne
aad
scas
stos
add
adc
repz
mov
mov
aad
ss
bound
xchg
pop
xchg
dec
xor
push
aam
pop
xchg
stos
or
out
push
ljmp
jle
cmp
add
xchg
xchg
in
fdivrs
adc
sub
dec
in
sbb
adc
fldcw
aaa
dec
xor
mov
or
out
aam
out
out
loopne
in
lahf
nop
xor
clc
add
fistl
mov
leave
sbb
push
and
lock
jg
mov
js
pusha
xor
fists
rcll
scas
psubd
std
and
mov
nop
jle
clc
insl
mov
lock
cli
cmp
lahf
jl
clc
mov
lock
es
cmp
jecxz
xor
xor
and
pop
xor
mov
xor
adc
adc
xor
aam
xchg
popa
out
dec
pop
loopne
add
and
push
test
lock
xchg
fwait
push
aam
xor
sub
or
jl
mov
mov
loope
sti
push
insl
and
sbb
or
jl
lcall
ds
add
daa
or
aam
mov
rolb
xchg
push
out
and
add
pop
push
testl
inc
cmp
jl
push
mov
mov
call
pop
mov
pop
xor
dec
jecxz
enter
bnd
ret
mov
std
hlt
orb
mov
insb
jmp
pushf
dec
xchg
fdivp
clc
xor
mov
pop
test
repz
jecxz
inc
and
inc
fisubl
addl
push
sbb
arpl
adc
mov
dec
lcall
lret
cmp
xchg
out
mov
sub
pop
loop
push
xchg
in
shlb
pop
loopne,pn
adc
in
sti
fwait
movsb
int3
pop
test
js
outsb
mov
xlat
jae
push
je
int
mov
loope
lahf
adc
jbe
lret
ja
out
add
add
aaa
into
fisttpl
add
lods
jb
mov
fisttps
cld
or
in
cli
lcall
hlt
or
std
inc
nop
adc
hlt
cs
mov
mov
pop
neg
mov
mov
nop
mul
std
xor
add
repnz
sub
movsb
sub
mov
sub
imul
mov
shrb
add
psllq
ss
pop
mov
add
inc
jl
xor
mov
stos
dec
and
pop
pusha
sbbl
or
into
lahf
lods
enter
jo
add
sbb
rcrl
jg
fsub
js
sbb
out
pop
cltd
arpl
out
filds
xchg
jmp
cmp
fisttpll
and
inc
push
dec
or
in
mov
jp
pop
stc
and
pop
add
mov
pop
sbb
adc
cmp
adcl
xchg
cmp
pop
ret
xchg
aam
adc
ja
pushf
mov
push
out
outsl
sbb
sub
lahf
adc
cmp
outsl
mov
or
aaa
dec
jle
lahf
mov
mov
repz
xor
jae
into
sbb
outsl
ss
leave
adc
aam
mov
jb
inc
loopne
test
lret
hlt
push
cwtl
add
popa
xorb
jbe
aas
pop
out
jmp
or
xor
cmp
xchg
in
jbe
xchg
subb
sbb
lea
mov
lods
shrb
bound
lods
inc
dec
sbb
push
cmp
xchg
jb
mov
cltd
clc
rcll
dec
or
jmp
jle
or
into
or
stos
popa
adc
jmp
icebp
pop
into
out
into
mov
jmp
mov
push
jg
sahf
and
mov
xor
testb
ficompl
imul
leave
cmp
das
jae
jns
icebp
lods
aas
hlt
xchg
ja
dec
icebp
mov
pop
jb
test
call
pop
repz
addr16
xchg
mov
pusha
enter
jbe
mov
or
rorl
add
inc
cwtl
std
lret
inc
mov
jmp
xchg
add
les
movl
mov
xchg
push
mov
and
incl
ss
outsl
ds
ret
sti
jle
or
test
xchg
mov
and
cmp
add
ds
xchg
inc
enter
sbbb
and
or
mov
sbb
mov
xchg
push
std
out
and
inc
jg
pusha
push
icebp
scas
and
push
rorb
jmp
xlat
nop
xchg
sbb
lock
add
cmp
out
arpl
pop
test
les
aad
repz
ret
inc
sbb
lcall
add
ficomps
xchg
xor
mov
pushf
mov
rcrb
sarl
sub
pusha
xchg
jno
rolb
stos
mov
inc
mov
nop
bound
jg
jmp
jecxz
int3
in
push
cld
stc
lret
jbe
jge
bnd
cs
inc
xchg
iret
xchg
cmpb
js
fidivl
and
movsl
pushf
jg
ds
fdivrs
mov
add
scas
pop
adc
push
fidivl
clc
add
jl
movsb
lods
mov
inc
jle
lock
dec
sbb
jb
leave
clc
leave
push
adc
jae
add
shlb
in
or
pop
aad
lret
ds
mov
test
fldt
xorb
mov
mov
push
push
mov
aas
jne
or
add
sub
jmp
ret
pop
dec
push
stos
adc
mov
fdivrl
mov
adcl
loopne
movsb
stos
enter
cmp
cltd
jle
in
xchg
xchg
in
loop
cmc
xor
test
adc
mov
push
pop
mov
pop
cld
jl
xchg
sarb
std
insb
cld
sbb
addr16
movsl
mov
mov
clc
add
hlt
mov
mov
movsb
xchg
aam
dec
add
xchg
clc
in
lds
lock
pusha
sarb
sbb
cld
lods
filds
fsubrp
ss
adc
sub
jge
cwtl
cli
dec
pop
dec
fmul
mov
aas
ja
into
rcrb
pop
sti
jg
lock
sahf
cwtl
inc
push
fwait
popa
fsubrl
sti
sbb
stos
pop
into
adcl
jle
jo
idivl
fnsave
sub
in
lahf
mov
aas
adc
pop
add
notb
inc
dec
movsb
dec
pop
jecxz
mov
les
out
pop
pop
dec
in
jge
mov
push
jge
adc
sbb
dec
stos
mov
mov
mov
dec
or
sub
mov
loop
jl
aaa
xchg
sbb
sbb
xor
mov
sub
into
popf
xchg
mov
outsb
test
cmp
pop
cwtl
clc
fiaddl
into
cld
jmp
add
pusha
push
mov
mov
out
push
or
les
outsl
in
scas
cmc
popf
cmpsb
jne
scas
in
xor
into
repnz
bound
cmc
and
xchg
add
fwait
ss
cmp
aas
ret
or
es
push
cld
push
loopne
outsb
orb
je
lret
mov
xchg
dec
in
xor
mov
cmp
int
test
jo
bound
adc
inc
adc
sbb
scas
inc
loopne
or
inc
xor
in
mov
insb
fsubrs
mov
and
or
add
dec
cld
iret
cli
or
sti
lret
in
mov
xchg
xor
jno
lcall
arpl
stos
add
scas
loope
push
pop
sub
das
stos
mov
subl
in
jecxz
and
mov
lea
test
add
pop
inc
jp
inc
jg
incb
clc
xor
icebp
rorb
icebp
cmpb
mov
pop
push
pop
add
xchg
nop
lcall
xchg
outsb
jbe
fs
xchg
adc
and
mov
mov
addr16
jae
or
psubsw
mov
jecxz
jns
test
daa
fnstsw
and
mov
inc
push
lcall
xorb
fidivl
jp
orl
repnz
and
test
inc
pop
sub
sbb
adc
in
orb
hlt
mov
fiadds
add
and
adc
add
push
lret
lods
mov
out
push
add
pusha
push
and
je
test
or
fbstp
xor
shrb
cmpsb
and
inc
fsubl
das
push
xorl
or
call
push
cmpl
dec
lahf
enter
jmp
ss
push
dec
outsl
pushaw
movsl
push
and
mov
fidivrl
or
outsb
fs
int3
mov
movsb
cmp
cld
outsb
push
cltd
loopne
icebp
jg
pop
into
dec
jo
sbb
mov
and
nop
shl
gs
and
stos
mov
stos
xchg
mov
xor
test
adc
adc
mov
aas
ret
mov
adc
push
ljmp
into
int
xchg
xor
in
sbb
int3
jo
cli
int
insb
rep
outsl
ss
hlt
cli
cli
xchg
in
mov
jle
push
mov
mov
les
fbld
scas
fdivr
xchg
sahf
clc
xchg
adc
and
das
cmc
cmpsl
loopne
clc
mov
jns
cmp
inc
scas
xchg
xor
push
daa
add
jecxz
hlt
in
nop
adc
jp
dec
les
pop
arpl
sbb
dec
xchg
pop
fcomps
sbbb
lret
sub
add
clc
inc
out
jns
outsb
sahf
inc
aas
clc
inc
xchg
sbb
stc
pop
or
mov
jae
lret
cs
inc
push
xchg
xor
pop
dec
adc
mov
dec
std
fs
aam
out
dec
xor
pop
push
inc
loopne
cmp
es
mov
cwtl
das
mov
sbb
je
mov
pop
movb
xchg
lock
jmp
push
cmpsl
mov
mov
test
dec
or
int
dec
adc
imul
insl
push
pop
dec
jp
push
movsb
jl
dec
in
cmc
ss
nop
sbb
lods
outsb
movsb
or
fstp
in
ss
sbb
dec
xchg
mov
mov
adc
hlt
xor
add
cmp
popf
jb
fldcw
pop
jmp
mov
mov
cmc
les
push
and
cli
inc
jp
popa
dec
or
mov
and
mov
std
adc
xor
clc
push
xor
push
aam
push
add
jl
cld
and
daa
pop
dec
subl
sbb
inc
aaa
jg
inc
dec
out
jbe
lcall
clc
pop
pop
outsl
push
int3
in
xchg
adc
inc
jnp
int
mov
add
push
sub
mov
jmp
shlb
xor
xchg
insb
out
adc
ja
cltd
in
das
aam
dec
icebp
jns
mov
fadd
mov
lcall
sub
arpl
fildll
add
scas
cli
sbb
xor
arpl
aas
loopne
pop
pusha
sahf
mov
out
sbb
inc
pop
pop
incl
dec
test
aam
adc
adc
mov
aam
in
nop
mov
push
xor
pop
lods
add
mov
mov
into
jg
cmp
pop
sbb
fld
sbb
mov
fisubl
stos
dec
insl
jae
mov
aas
sar
cs
sbb
push
xchg
pop
dec
lods
push
mov
sbbb
and
loope
xchg
aad
cld
scas
inc
test
or
or
lret
cmc
add
mov
in
out
xchg
mov
sarb
cld
mov
leave
jp
mov
dec
inc
mov
movsb
lds
xchg
add
hlt
leave
adc
cmp
jg
pop
cmpb
rcl
out
push
rcrl
sub
gs
cli
jno
fbstp
in
fidivs
add
je
dec
insl
out
push
enter
dec
lahf
movsl
add
data16
movsl
cmp
fisttpll
in
xor
cmp
scas
or
movsl
shrb
sbb
xor
lret
mov
dec
mov
out
add
jp
push
cmp
inc
decl
pop
mov
pop
pop
enter
push
clc
inc
decl
leave
jle
inc
stos
test
mov
xchg
jns
outsl
add
aam
mov
pop
and
adc
jnp
or
das
popf
imul
xor
xchg
lea
ja
hlt
xchg
out
and
xchg
pop
and
popa
lods
test
aam
sbbb
adcb
jb
pusha
ror
xchg
push
inc
fisubl
out
inc
jp
cwtl
das
test
lcall
loopne
or
cmp
sbb
orl
in
stc
dec
xor
push
pusha
push
or
cmp
icebp
xchg
and
aad
xor
jg
mov
shl
in
clc
jnp
jge
inc
dec
lock
dec
sbb
jge
sti
push
fildll
sub
cwtl
dec
cltd
xor
aas
mov
in
es
in
imul
jo
aaa
add
shlb
xor
pop
sarb
pop
std
outsb
jmp
add
lahf
cmp
lret
sahf
loope
xor
jae
and
scas
out
mov
aam
adc
add
mov
cmc
ja
out
add
pop
pusha
test
pop
mov
loope
sbb
loopne
xorb
popl
notb
mov
lock
mov
lock
cmp
push
dec
mov
test
loope
in
in
or
xchg
dec
outsb
xchg
mov
mov
jecxz
fnstenv
jae
test
inc
push
xchg
mov
loopne
ss
in
into
xorl
shll
in
mov
jae
inc
jp
sarb
aam
or
hlt
jae
into
and
rcrl
mov
sub
jle
fcompl
xor
pop
faddl
push
pop
jp
xlat
outsb
mov
pop
mov
lret
ret
mov
test
or
jg
mov
orl
shll
clc
add
xchg
ret
insb
dec
insb
loopne
sbb
insb
int3
cli
lcall
fiaddl
jnp
mov
ljmp
dec
mov
dec
cmp
jae
mov
out
or
sub
xchg
mov
stos
aam
out
mov
xor
mov
int3
fmul
cmc
stc
mov
daa
xor
pop
inc
xor
fildll
js
cld
or
adc
out
xchg
mov
dec
push
adc
push
mov
rorl
dec
mov
add
scas
inc
test
mov
and
xor
in
push
popa
in
jb
and
xor
mov
push
sub
jle
pop
push
sub
fldt
add
call
clc
push
cmpsb
dec
push
mov
or
dec
mov
jae
cmp
in
mov
mov
or
aas
adc
inc
enter
ja
mov
inc
cmp
xchg
sti
adc
jae
inc
cs
bound
xor
cli
dec
jge,pt
mov
scas
jmp
in
pop
in
inc
mov
jle
add
test
call
cmc
jg
testl
xor
add
rcrb
insl
cmp
mov
fstp
hlt
in
sub
into
jnp
je
arpl
insb
add
dec
and
std
push
out
mov
adc
test
inc
mov
outsb
jle
addb
cmpsl
sub
fmul
mov
or
xor
pop
pop
dec
cmp
pusha
mov
in
xchg
fstl
jmp
cmp
and
stos
lods
or
std
test
mov
adc
outsb
sub
popf
mov
enter
mov
rcll
js
mov
test
out
xchg
mov
cmp
out
pusha
dec
inc
inc
loope
call
cmp
aam
push
sub
pop
hlt
xor
dec
xor
aam
jo
and
scas
push
add
pop
shll
mov
call
push
aam
pushw
or
jne
adc
mov
lret
testl
mov
jno
ret
ficoms
jns
mov
xchg
inc
clc
mov
add
cs
mov
ja
xor
pushf
out
pop
and
sbb
add
and
push
push
and
or
mov
inc
mov
cld
push
jge
imul
sbb
pop
outsb
jle
and
dec
lock
adc
sahf
mov
jp
fists
je
ja
or
dec
loopne
mov
out
out
imul
add
jns
decl
cmp
xchg
inc
daa
ret
mov
iret
test
stos
push
pusha
nop
mov
cmp
insl
and
xchg
frstor
je
xchg
jns
sbb
sub
mov
sti
sbb
jno
cld
cwtl
fsubrs
adc
je
cmp
mov
ss
ja
jl
imul
pop
stc
cli
mov
inc
inc
push
orb
xor
mov
mov
jge
jge
in
and
sub
xchg
mov
repz
in
xchg
in
mov
mov
je
repnz
and
jl
pop
cmc
jle
imul
and
std
or
jne
jne
lahf
inc
out
jno
pop
jg
adc
dec
inc
scas
xor
mov
sbb
pop
rcrl
pop
jns
xchg
test
cs
aaa
hlt
test
ja
jbe
stc
std
in
or
sbb
jge
mov
push
mov
jo
decb
or
push
lock
jle
ds
cmp
jae
dec
jmp
xor
in
cli
mov
stc
fs
xlat
ret
push
in
cmpsl
add
pop
mov
frstor
inc
lret
insb
and
mov
dec
ficomps
jle
mov
test
insb
mov
test
or
sbb
pop
add
out
decb
mov
nop
repz
in
xor
out
or
movsl
fwait
orl
das
iret
mov
fildl
xchg
add
sub
jae
inc
loop
cli
lahf
arpl
mov
in
pop
insl
call
jbe
add
inc
cmp
push
pop
insb
jmp
jecxz
fmull
cwtl
and
jmp
cli
pop
jmp
mov
cs
loopne
jle
mov
mov
fisttps
sub
xor
mov
lret
mov
add
jbe
xchg
cltd
sub
stc
jg
imul
pop
repnz
nop
push
clc
cld
inc
lea
pop
out
jae
ffree
int
scas
xlat
js
mov
into
cmp
das
fidivrl
inc
mov
mov
sahf
and
lcall
mov
pop
dec
cmp
fisubs
xchg
shlb
xor
inc
cli
sbbb
add
arpl
inc
ret
loop
subb
test
pop
xchg
and
cmp
test
das
or
xlat
or
jb
adc
add
pop
mov
cmp
popa
pop
aaa
mov
pop
pop
test
dec
aaa
popa
stos
push
in
xchg
cmc
dec
mov
mov
loop
push
cld
and
or
out
push
aam
or
lock
push
ret
movsl
cmp
xchg
mov
lea
mov
pop
cmc
outsb
js
jle
cwtl
test
pusha
cld
sub
pop
jb
sbbb
negb
add
sub
jl
jae
testl
or
incb
icebp
pop
fcmovu
dec
push
xor
les
lods
jecxz
add
enter
jae
push
faddl
decb
shrb
mov
or
sub
sub
mov
andb
fsubrp
ret
insl
es
imul
jle
lret
ret
add
pop
popa
sub
nop
push
mulb
inc
xchg
push
sub
loopne
popf
cli
add
adc
xchg
jno
es
jb
add
das
popa
cltd
clc
scas
adc
push
fwait
pusha
daa
push
pop
int3
test
mov
popa
sbb
hlt
cltd
aaa
subb
sub
mov
xor
std
dec
pop
push
test
add
sbbl
mov
fcomps
popf
cmc
fidivrl
add
cmpl
xor
mov
ss
lods
and
add
push
dec
adc
xchg
xor
into
or
sbb
and
mov
addb
adc
cmp
mov
fists
push
aaa
pop
or
clc
lods
inc
mov
fisttpl
adc
xor
mov
dec
test
push
sub
test
addr16
outsb
jo
mov
das
into
mov
pusha
loop
das
xorb
push
sbb
je
cmp
aam
inc
shll
shlb
mov
testl
or
aas
dec
sbb
pop
xchg
or
jg
cltd
mov
add
lock
daa
xor
jne
xchg
pop
mov
imul
inc
out
sbb
dec
stos
decb
aaa
enter
push
mov
push
andl
adc
push
sub
xchg
out
movsl
jb
subl
cmp
jp
mov
add
ror
jae
and
cmpsl
popf
cwtl
stos
jmp
clc
jmp
iret
pusha
out
cpuid
lcall
loop
pop
push
sub
loopne
int3
rcrb
mov
mov
fidivs
daa
inc
push
adc
nop
add
mov
sub
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subb
sub
or
add
insb
push
outsb
ja
outsb
fs
pushl
inc
gs
jne
jb
outsb
je
push
es
jo
std
mov
outsl
arpl
jae
dec
outsl
fs
gs
popa
pop
or
mov
fbld
push
jne
jb
push
push
outsw
jb
es
inc
outsl
jne
scas
lea
int3
push
in
fs
js
jo
imul
inc
jne
fs
adc
sti
insl
inc
inc
inc
inc
ja
inc
dec
inc
push
mov
jl
test
xchg
gs
imul
fs
rorl
add
jl
sbb
jns
push
outsl
push
imul
jbe
je
je
jo
outsb
cs
addr16
insb
outsl
jae
dec
gs
sbb
shrb
iret
mov
dec
xchg
nop
push
jb,pt
xor
into
pop
inc
jb
je
arpl
xor
adcb
fildl
add
add
adc
mov
add
add
mov
mov
mov
out
gs
pop
pop
or
mov
add
shrb
add
fstpl
notl
movlps
pusha
inc
inc
insb
scas
dec
push
adc
rorb
mov
add
insl
cld
hlt
adc
mov
push
loop
scas
pop
insb
outsl
ret
aam
int3
or
push
js
add
andb
stc
cltd
cmp
inc
push
push
int
testl
lahf
addb
leave
cmp
add
jb
cld
subb
fs
lods
dec
lock
jo
inc
sahf
jb
jb
daa
or
xchg
cmpsl
dec
push
stos
aas
fsts
cmpsl
or
mov
leave
rep
adc
fists
push
inc
mov
cmp
dec
pusha
fistpll
dec
leave
add
dec
inc
push
sbb
dec
jo
cs
jbe
pop
or
add
pop
add
and
add
add
pusha
mov
lea
push
jmp
push
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
repnz
jne
cmpb
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
push
add
loopne
