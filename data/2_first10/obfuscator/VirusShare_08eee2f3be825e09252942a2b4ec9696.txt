sub
push
mov
int
adc
xchg
stos
pop
addr16
fwait
cwtl
xchg
dec
out
mov
fwait
arpl
inc
mov
jmp
mov
sub
jmp
mov
mov
daa
mov
loopne
mov
mov
pop
dec
ss
sbb
addl
std
pop
pop
sbb
dec
pop
jecxz
movsb
loope
cli
loopne
mov
or
mov
or
xchg
add
sbb
test
gs
push
or
loope
in
xchg
sbb
mov
ds
add
cmc
test
mov
stos
jbe
lret
fwait
insb
cld
pop
pushf
add
mov
shll
popf
jmp
stos
jecxz
and
lcall
test
xchg
mov
fxch
jne
dec
mov
rcr
pop
mov
pop
dec
xchg
inc
ss
jge
lock
push
sbb
lods
out
out
mov
roll
insb
iret
jno
fidivrl
aaa
movsl
sarb
not
xor
data16
mov
push
inc
push
gs
fbld
pop
fisttpl
push
push
aam
jno
and
adc
sti
inc
cld
fimull
rcr
stc
out
xor
xchg
sub
sti
mov
mov
sub
adc
or
loop
sub
push
mov
cmp
xchg
fiadds
lret
in
lods
sbbb
imul
adc
add
fstps
andl
incl
add
int3
cli
out
push
pop
push
mov
cs
inc
lds
rcrb
sbb
adc
mov
loop
jp
add
inc
and
pop
jo
mov
bound
mov
movsb
adc
lea
dec
std
icebp
dec
xor
mov
mov
sbb
push
fcomip
mov
mov
and
pushf
cwtl
loope
ret
fsubr
add
adc
sahf
aas
push
xchg
xchg
xchg
xlat
roll
jmp
fnstsw
rorb
jecxz
lods
lods
xchg
ja
cmp
xchg
mov
cmpsb
push
pop
cwtl
stc
imul
mov
sbb
cmp
jae
imul
stc
das
dec
fdivp
int
push
and
mov
xor
sbb
jle
mov
push
les
out
into
mov
dec
ror
les
mov
les
jp
xchg
movsl
cmp
outsl
arpl
jne
gs
push
rcl
fdivrl
movsb
sub
test
das
inc
sbb
jnp
jecxz
sub
mov
test
lahf
inc
push
out
icebp
js
mov
in
nop
mov
in
pop
cs
sti
fcoml
xor
sub
sub
jl
iret
into
sub
dec
loope
add
inc
xor
push
addr16
aas
nop
mov
add
push
mov
mov
cs
mov
and
pop
lods
push
inc
adc
mov
jmp
setp
xorl
inc
pop
or
test
rolb
fcoml
cmp
cwtl
adc
xchg
test
push
sub
negl
stc
rcr
adc
mov
xor
mov
fstps
loop
fldenv
jns
mov
lahf
push
push
sbb
or
dec
popf
dec
dec
fidivrl
push
jo
enter
icebp
push
pop
in
aam
js
mov
jge
or
mov
cmp
jo
xorl
pop
mov
stos
xchg
adc
sub
mov
adc
mov
ret
push
pop
dec
ficoms
xor
andl
fldl
pop
in
add
cli
hlt
aas
dec
adc
adc
inc
xor
push
test
lods
dec
enter
stos
into
xor
adc
xchg
fistpll
and
inc
sti
daa
jno
jae
xchg
and
push
cmp
sbb
stos
shlb
xor
cmp
lods
xor
outsl
push
push
ret
and
out
mov
gs
inc
lcall
mov
decl
inc
movsb
adc
popf
jae
stos
jg
sbb
std
pusha
xchg
aad
sub
sub
pop
neg
add
ret
out
xor
add
fs
testb
dec
adc
push
xchg
addr16
nop
lahf
push
pushf
jle
push
idivb
mov
push
and
pop
loope
push
pusha
lret
ss
jmp
cs
rcl
shl
lret
ss
xchg
jb
add
pop
sbb
xor
jno
jmp
imul
in
cld
xor
sbb
mov
jg
gs
or
mov
add
sti
xchg
xor
gs
stos
mov
sub
inc
inc
arpl
inc
inc
bound
cltd
iret
push
sub
adc
adcb
repz
nop
push
mov
add
cmpsb
adc
jg
push
test
pop
fwait
or
aad
mov
add
jnp
xchg
test
cmp
ret
imul
mov
xchg
lock
dec
cwtl
xor
data16
or
jecxz
sbb
adc
mov
xor
push
cmpb
sub
mov
inc
mov
push
fnstsw
scas
fbld
cmp
lahf
xchg
dec
xor
push
lret
sub
pop
pop
mov
out
ss
mov
mov
cltd
les
neg
repnz
mov
std
in
mov
out
adc
aas
mov
into
xor
pop
repz
cmp
add
out
add
or
jle
int3
push
fsubrl
add
aaa
pop
pop
push
add
nop
jae
lahf
inc
sub
or
nop
push
cltd
mov
mov
mov
dec
pusha
ret
sbb
pop
ja
push
lahf
sahf
cmpb
out
xchg
aas
dec
sbb
mov
or
push
arpl
mov
pop
mov
ja
dec
out
inc
add
mov
sti
fldenv
add
jl
orl
mov
sti
iret
mov
mov
test
lods
mov
test
mov
jns
mov
stc
jp
adc
and
and
jno
xchg
mov
pop
xorl
lret
cld
cmp
pop
adc
pop
sub
and
adc
cmc
mov
roll
add
mov
loopne
es
pop
and
pushf
xchg
push
xchg
cli
adc
in
sbb
pushf
dec
and
lret
and
andl
shll
xlat
jns
inc
fwait
and
fwait
dec
xchg
loope
xor
inc
call
loopne
dec
adc
cmp
xchg
out
pop
sbb
xlat
mov
push
cmc
out
jmp
sbb
push
je
push
lods
ljmp
mov
xchg
sbb
add
ret
adc
add
and
test
pop
push
pusha
lret
adc
xchg
test
dec
mov
add
ja
pop
xlat
sub
push
lahf
jmp
mov
mov
popa
in
push
add
mov
ret
sub
hlt
int
adc
xor
jg
fnstsw
icebp
and
cmp
jge
in
call
stc
mul
push
mov
push
scas
orl
sub
xchg
fcoml
mov
push
cmp
aad
cmc
test
and
push
mov
pop
dec
add
mov
lock
int3
cld
leave
jno
xor
add
cmp
mov
xlat
inc
push
hlt
ljmp
test
jb
dec
and
pop
push
lea
lcall
xchg
push
xchg
mov
clc
addr16
or
mov
movsb
rcrl
not
push
dec
mov
out
mov
insb
inc
jae
and
lea
cltd
roll
push
xchg
and
arpl
push
in
scas
or
lahf
test
out
mov
test
daa
add
inc
xor
fsubl
mov
or
mov
adc
in
repnz
adc
cmp
in
daa
jns
ret
cmp
fmuls
popf
xchg
inc
ja
mov
pusha
aaa
pop
stos
or
lods
xor
rcrl
mov
add
sub
adcb
pop
aam
enter
pop
cmp
cmp
mov
adc
mov
push
mov
cmp
data16
test
push
mov
and
adc
dec
pop
jns
arpl
stc
sbb
lock
popa
mov
in
icebp
jae
repz
shll
leave
mov
sbbl
imul
mov
sbb
xchg
adc
outsl
dec
inc
leave
outsl
leave
or
cli
pop
pop
mov
out
inc
lret
cmpsl
ss
add
int
sub
sbb
sub
jb
sbb
test
test
inc
jns
inc
add
adcl
mov
das
aad
jns
adc
mov
sub
bound
and
out
jbe
push
icebp
inc
adc
cli
fst
inc
and
or
pop
scas
adc
popa
push
shlb
xor
add
lret
scas
mov
jnp
jecxz
jnp
add
jle
fldt
jns
and
lret
add
test
mov
jg
xchg
aaa
cwtl
pop
pop
shlb
es
lea
lret
xorl
insl
dec
jbe
xchg
mov
mov
pop
aad
js
enter
mov
jge
jmp
dec
xchg
stos
adc
shlb
lods
leave
jo
inc
ja
mov
mov
mov
mov
sahf
enter
mov
in
push
mov
ljmp
fwait
pushf
cmc
sub
in
pop
mov
add
dec
stos
inc
enter
add
push
push
arpl
lea
or
mov
ret
jecxz
xchg
push
pop
cmp
js
adc
push
repz
ja
nop
jae
mov
mov
push
mov
xchg
sub
std
push
cmovbe
mov
subl
hlt
jmp
mov
adcl
add
in
inc
pop
inc
out
ljmp
roll
dec
lcall
push
lret
loope
mov
cmpsl
fmull
adc
aas
pop
xchg
js
inc
lds
shlb
call
sub
int3
mov
lret
dec
push
aad
scas
cwtl
jge
cmp
pop
cmpsb
fnstenv
add
outsb
mov
jno
jne
fadd
mov
std
xchg
mov
movsb
fldt
cmp
icebp
andb
fcoms
bound
cmp
dec
es
imul
mov
aad
lea
jle
cmc
push
jl
mov
cmp
cmp
ljmp
xchg
xor
mov
xchg
loope
or
add
cwtl
cmp
xlat
orb
and
inc
rorb
leave
ficoml
in
or
mov
lock
dec
lods
add
outsb
mov
aaa
mov
xor
test
xor
or
pop
add
incl
data16
test
lahf
outsl
inc
adc
fwait
push
adc
push
neg
in
hlt
or
xor
dec
sbb
into
mov
and
push
popa
lret
inc
out
insb
fdiv
add
xchg
dec
scas
xchg
sbb
sbb
enter
lea
inc
fisubrs
and
xor
jg
jb
push
in
aaa
arpl
aam
mov
sbb
adc
mov
jecxz
int3
or
cmp
push
and
cmc
iret
out
adc
and
dec
imul
and
push
adc
inc
dec
xor
push
call
ljmp
filds
bound
xchg
dec
xor
repz
into
or
jae
shrb
xor
or
repnz
xor
ja
pop
imul
mov
mov
pop
sbb
mov
push
mov
dec
and
sti
push
lahf
dec
jnp
int
lock
mov
sbb
je
adc
lret
jmp
ret
imul
jnp
inc
push
fdiv
cmp
cmp
sub
int
xchg
xchg
dec
pop
out
les
or
imul
jo
inc
mov
mov
arpl
jg
cli
gs
dec
loope
aaa
jns
inc
and
ja
sbb
les
xor
out
xor
mov
xor
sarb
xchg
pop
mov
pop
mov
cmp
cltd
ljmp
mov
jl
nop
movsl
pop
xor
mov
or
fidivl
xor
cwtl
mov
inc
or
repz
jb
inc
push
sub
in
xchg
or
pop
xor
out
push
fistpl
int
sbb
add
ret
add
push
out
xchg
testb
fists
push
repz
aaa
pop
nop
mov
mov
in
push
das
fmull
inc
divb
add
lods
dec
cmpsb
mov
in
mov
dec
push
adc
scas
sbb
fdiv
xchg
notb
test
call
je
push
pusha
cmpsl
mov
es
int3
mov
repnz
fildl
je
gs
mov
lock
repz
popf
pop
pop
fisttpl
pop
pop
subl
out
movsl
or
out
mov
mov
enter
push
push
dec
push
mov
in
mov
cmp
adc
loopne
divb
xlat
call
cmp
mov
push
sbb
and
lea
xor
mov
movsb
sub
scas
mov
sub
rol
xor
xor
jno
flds
sub
push
movlps
sub
idiv
data16
ret
sbb
inc
fbld
shlb
adc
mov
pop
ret
enter
or
inc
cmp
pop
xchg
xchg
inc
jbe
mov
xchg
xchg
or
cmpsb
jne
insb
push
jns
call
scas
lahf
mull
and
mov
enter
xor
xor
lds
mov
cs
push
jle
subb
jp
push
mov
xchg
fsubs
icebp
xchg
pop
jecxz
fstpl
add
pop
fdivrs
cli
cmc
stc
daa
cmp
lea
dec
cmp
push
xchg
mov
inc
mov
sub
in
insb
ljmp
jb
pop
mov
or
adc
lcall
push
les
pop
push
popf
in
cmp
orb
cmpl
cld
xor
mov
repnz
push
stos
fs
mov
jb
cmp
loope
adc
sbb
and
jns
lahf
xchg
rcrb
jmp
mov
imul
std
inc
lods
js
loop
inc
neg
and
pop
hlt
filds
adc
loope
or
les
insb
fwait
xor
inc
jmp
add
dec
in
or
loopne
mov
loope
movsl
dec
test
or
jmp
loop
fwait
xchg
cwtl
inc
xchg
cli
out
jp
xlat
fnsave
out
or
push
dec
ja
loop
cmp
icebp
sub
ret
ret
mov
jbe
stc
dec
aam
pop
fiaddl
lods
clc
out
lea
push
out
fadd
in
mov
mov
dec
cwtl
sbb
in
jge
sbb
inc
scas
inc
in
shlb
test
test
sahf
addr16
aas
pop
adc
push
xchg
pop
add
movsl
nop
jp
or
jae
mov
imul
sbb
aad
and
ret
pop
mov
ljmp
mov
add
inc
fadds
fst
and
inc
add
jle
inc
mov
mov
lods
inc
fwait
xchg
sub
jne
jg
push
mov
mov
sbb
jne
sbb
push
or
adc
mov
cmpsl
orb
pop
add
or
aam
sbb
mov
jno
pushf
sti
icebp
mov
arpl
push
or
jbe
daa
shrb
mov
shrl
and
mov
in
int
scas
inc
jle
pushf
test
test
xchg
mov
cltd
mov
add
mov
lahf
inc
mov
pop
jp
aad
loopne
dec
orb
dec
fcmovb
lods
outsb
or
mov
out
add
out
mov
xor
loope
xor
lret
pop
fistpll
lret
and
shlb
cmp
div
std
int3
rorb
sub
xlat
in
call
dec
inc
ds
sub
push
cli
push
ljmp
push
fistl
adc
jo
in
repnz
out
jno
cmp
arpl
mov
in
loopne
sub
jb
push
ds
mov
mov
stos
fcmove
pop
lret
mov
jo
les
jo
and
mov
jp
or
sbb
lret
sti
insb
xchg
mov
mov
mov
inc
xor
cli
cmp
jp
mov
sbb
add
pop
mov
add
lret
cmpsl
pop
pop
or
mov
std
movsl
mov
outsb
lock
and
shrl
xchg
and
pop
cltd
fiadds
push
pop
inc
jle
leave
xchg
mov
loopne
fnstenv
cmp
stos
inc
sarb
cmp
pop
andl
xor
iret
lods
dec
sahf
andl
pop
mov
hlt
fmulp
shlb
sub
cli
aam
mov
push
push
imul
mov
jo
cli
inc
sub
cmp
dec
xchg
jecxz
rorl
inc
mov
dec
idivb
mov
mov
dec
add
daa
dec
jb
stos
dec
add
inc
push
sbb
lret
call
mov
nop
cli
cli
popa
sti
or
inc
popf
mov
in
sub
inc
xor
mov
mov
clc
sbb
data16
adc
rorl
or
rcrb
ljmp
idivb
jno
jbe
adc
cmp
shlb
imul
lcall
xchg
xor
adc
sbb
xchg
outsb
xor
mov
add
loope
push
push
sarb
mov
loop
out
mov
pop
sbb
jmp
pop
sbbb
jb
jp
inc
cs
out
je
sub
out
mov
add
testl
std
lds
mov
jno
jmp
out
insl
addb
sbbb
jns
add
test
push
jecxz
mov
pop
cmpsl
inc
dec
jle
lea
daa
stos
jbe
xlat
xchg
outsl
sti
cmpsl
in
and
in
add
arpl
xchg
repz
mov
xchg
xor
jae
pop
pushf
xor
cwtl
sti
xchg
sub
orl
jmp
cmp
and
push
aam
push
inc
in
mov
inc
pop
mov
inc
mov
sub
and
inc
or
xchg
in
jle
jne
fwait
iret
outsb
sbbl
adc
insl
js
sbb
movsl
fiaddl
mov
adc
jg
and
aad
fildll
psubusw
fldenv
xlat
andb
jne
repz
push
jmp
xchg
cli
xchg
fdivrs
cmp
ja
jns
pop
mov
add
mov
iret
test
inc
test
pop
adc
in
or
pop
sbb
pop
enter
jbe
cltd
sub
jo
outsb
cmpl
push
sbb
push
lret
add
repz
mov
lods
push
sub
cmp
xor
movsb
iret
mov
sub
mov
inc
xor
lock
and
jno
mov
lcall
jbe
lcall
jg
xor
in
adc
and
xor
sti
pop
mov
mov
shrl
push
jnp
xchg
dec
adc
xor
loopne
and
inc
std
js
push
scas
mov
mov
push
dec
dec
hlt
sub
jne
imul
xchg
mov
cmp
or
leave
test
inc
cmp
sub
xor
test
iret
ss
enter
or
lahf
enter
mov
jmp
mov
and
bound
mov
rorb
cmp
loop
ds
loopne
add
cwtl
xchg
sub
jecxz
movsb
icebp
ret
sub
push
imul
mov
sub
pop
imul
mov
js
xchg
les
pop
jge
and
jbe
scas
xor
cltd
int3
dec
xlat
add
dec
or
or
adc
sbb
sub
out
push
cs
sub
sar
or
sahf
out
dec
and
scas
pushf
out
lds
push
lods
mov
fists
xor
dec
divl
push
repz
fistpll
xor
out
ret
cs
and
imul
push
push
stos
popa
hlt
scas
pop
imul
scas
adc
mov
movsb
lret
test
or
push
ja
sbb
xor
fs
pop
dec
enter
xchg
cmp
aad
xchg
add
sbb
mov
or
mov
pop
add
mov
imull
movsl
xchg
jo
xor
das
mov
push
cld
popf
mov
dec
rcrl
jo
pop
rolb
clc
push
scas
loop
pop
cmp
pushf
mov
xchg
mov
adc
jmp
sub
mov
xchg
into
sub
dec
in
imul
mov
popf
sbb
xor
inc
cmp
mov
insl
xchg
or
mov
cmp
add
adc
repz
pop
mov
mov
cltd
and
sub
cmc
in
sbb
lahf
sbb
jo
mov
icebp
jmp
push
test
movsl
ret
ret
or
in
inc
testb
int3
pusha
nop
out
das
movsl
pop
inc
and
and
mov
push
mov
cld
incl
jae
cmp
jle
jge
jno
js
jb
or
insl
cwtl
adc
cmp
adc
fdiv
inc
test
fiadds
les
lahf
mov
cltd
add
mov
mov
or
inc
sub
pushl
test
aam
dec
inc
ret
xchg
or
or
sbb
cmp
or
iret
cmpsl
xchg
pop
fcmovne
inc
mov
mov
mov
jno
cmp
mov
outsl
cmp
lahf
lods
nop
push
gs
dec
xchg
cmp
ror
divl
ds
in
mov
outsb
xchg
inc
add
jno
jle
cli
mov
xchg
mov
jl
mov
and
out
into
xchg
rorb
std
repnz
sbbl
out
xor
cwtl
push
mov
mov
cmp
test
xor
fdivrs
stc
ljmp
std
sbb
push
out
js
rcr
nop
arpl
cwtl
bound
roll
jge
pop
xchg
fadds
lock
cmp
add
dec
xor
daa
xchg
orl
ja
add
or
xchg
pop
shll
scas
inc
xor
cmp
adc
push
fidivs
lcall
dec
cltd
or
lret
nop
aas
outsb
and
data16
jmp
mov
adc
loopne
je
leave
fcompl
jp
imul
mov
pop
mov
or
xchg
iret
sbb
lret
out
nop
jge
jo
fbstp
out
int3
cmp
daa
xor
out
pinsrw
or
insb
cmpsb
daa
shll
aad
push
call
xor
shlb
je
imul
jae
sbb
push
arpl
and
imul
es
jecxz
and
xor
les
mov
mov
xor
fndisi(8087
ja
dec
or
dec
mov
ds
scas
sub
add
jle
cmpsb
jbe
scas
sahf
mov
movl
sub
shrb
test
imul
push
mov
xor
sarl
add
fcomp
fsubs
push
daa
push
jmp
or
mov
cmp
es
inc
fpatan
sub
jbe
bound
jno
movsb
mov
cmp
jmp
push
pop
je
ja
add
mov
xor
push
pusha
call
or
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
into
add
add
add
or
add
into
