adc
cmp
nop
add
add
cmpsl
dec
hlt
adc
pushf
mov
push
loope
jge
lock
test
add
js
gs
jo
out
stos
inc
and
in
cld
insb
popa
push
fwait
mov
and
mov
inc
mov
imul
aaa
rorl
dec
pop
leave
inc
les
push
jg
mov
std
ds
add
into
scas
pop
sahf
pop
cltd
mov
fdivs
cmpb
push
fs
add
mov
pop
aad
jae
or
outsb
mov
rclb
lret
test
ret
cld
ds
push
adc
dec
lahf
dec
cmp
outsb
add
inc
sbb
push
arpl
movsb
into
pop
aad
data16
adc
inc
dec
dec
or
mov
dec
addr16
enter
cwtl
stc
ds
call
push
mov
mov
mov
push
pop
cmpsb
out
cmp
mov
mov
ficompl
iret
sbb
mov
xor
jg
and
xor
push
lods
pop
out
out
mov
push
std
inc
iret
or
loop
fyl2x
xlat
clc
fnsave
scas
ds
xlat
jl,pt
in
dec
idivl
mov
out
push
in
frndint
xor
orl
fnstcw
push
push
out
in
adc
ret
pop
cmpsb
xchg
jmp
jge
dec
mov
mov
icebp
or
icebp
subl
loope
mov
arpl
mov
jns
shr
loope
repnz
js
cli
out
add
pushf
out
push
inc
cmp
mov
insl
or
sbb
or
aaa
sbb
adc
adc
out
enter
mov
decb
inc
in
mov
mov
ficompl
mov
push
aas
push
inc
call
pop
adc
aad
.byte
.byte
add
add
lods
divl
add
add
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
lods
divl
add
add
add
add
addb
add
lods
divl
add
add
add
add
add
add
addb
add
loopne
add
lods
divl
add
add
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
lods
divl
add
add
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
lods
divl
add
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
lods
divl
add
add
add
add
addb
add
lods
divl
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
test
add
add
add
lods
divl
add
add
add
add
mov
add
add
add
add
add
add
add
enter
add
add
lods
divl
add
add
add
add
fadds
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
or
add
lods
divl
add
add
add
add
sbb
add
lods
divl
add
add
add
add
sub
add
lods
divl
add
add
add
add
cmp
add
lods
divl
add
add
add
add
dec
add
add
lods
divl
add
add
add
add
pop
add
add
lods
divl
add
add
add
add
push
add
add
add
add
add
add
add
js
add
add
add
lods
divl
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
lods
divl
add
add
add
add
add
add
add
lods
divl
add
add
add
add
add
add
add
lods
divl
add
add
add
add
add
add
add
lods
divl
add
add
add
add
add
push
add
add
add
lods
divl
add
add
add
add
add
push
add
add
add
lods
divl
add
add
add
add
add
push
add
add
add
lods
divl
add
add
add
add
add
push
add
add
add
lods
divl
add
add
add
add
add
add
add
add
lods
divl
add
add
add
add
add
add
add
add
lods
divl
add
add
add
add
push
add
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
jo
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
stc
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
js
add
or
add
in
add
add
add
cmp
add
add
add
add
add
add
incb
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
in
add
add
add
loopne
add
mov
add
add
add
add
add
in
add
add
add
xor
add
sbb
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
or
add
add
add
add
add
add
add
add
xchg
ret
in
add
add
add
loopne
push
add
add
in
add
add
add
in
push
add
add
in
add
add
add
or
push
add
add
add
add
add
add
add
int
add
add
add
add
add
add
add
int
add
add
in
add
add
add
sbb
push
add
add
add
add
add
add
add
add
in
add
add
add
sub
push
add
add
add
add
add
int
add
add
in
add
add
add
cmp
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
in
push
add
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
add
fistpll
lahf
je
pop
lcall
pop
push
in
sbb
fs
dec
ljmp
jg
outsl
or
add
repz
dec
out
out
adc
popa
push
jo
stc
insb
jbe
leave
out
into
dec
shrl
adc
xor
push
sub
pop
sbb
mov
pop
xor
clc
adc
ficompl
push
ds
jge
pop
sahf
insb
enter
stos
movb
lds
ja
sub
and
mov
clc
out
lea
aam
cs
repnz
cs
enter
mov
pop
adc
push
out
inc
sub
inc
xchg
cmp
mov
lea
gs
jge
mov
insl
in
mov
cs
lcall
mov
add
cmpsb
dec
das
adc
andnps
sub
aaa
in
movl
lret
test
mov
sbb
aad
daa
in
jae
ss
xchg
fcoms
loopne
repnz
mov
dec
je
pop
add
dec
pop
arpl
cs
gs
jno
bnd
cmc
clc
std
dec
cmpb
rclb
pop
pop
and
icebp
ret
cmp
sbbl
adc
pop
adc
xchg
js
into
adc
out
jae
pop
push
movsl
test
mov
adc
pop
xor
mov
mov
outsl
hlt
push
xlat
push
out
jns
call
test
aas
jmp
pushf
sbb
push
iret
jg
mov
mov
lret
mov
dec
mov
movsb
adc
dec
loopne
push
add
dec
popf
push
xchg
mov
stos
sbb
mov
cmc
cmp
push
idivl
sub
sbbb
ljmp
sbb
push
sub
inc
shr
scas
adc
pop
movsl
test
lds
rcrb
xchg
dec
test
enter
mov
pop
add
sub
daa
jp
mov
mov
in
dec
imul
sbb
in
mov
cmpsb
pusha
inc
push
jno
mov
fiaddl
subl
jp
dec
push
mov
in
in
xchg
sti
mov
lods
cmc
push
sub
outsb
jecxz
xchg
jle
lods
test
push
pop
lea
fsts
out
stc
adc
xchg
push
mov
cld
leave
in
loope
imul
stos
rorl
jmp
jp
sub
nop
dec
or
push
xor
mov
mov
imul
mov
mov
bound
test
and
outsl
fsubs
imul
mov
cli
push
sbb
repnz
xchg
xchg
sahf
fldenv
fisubl
jb
dec
cmpsb
jge
test
roll
incl
test
dec
cmp
xchg
jge
js
test
ret
les
aad
add
inc
int3
aad
dec
mov
aaa
hlt
popf
mov
test
dec
mov
jno
xor
rcrl
in
ret
pusha
leave
mov
jnp
aas
movsl
jge
jmp
addr16
vprotq
inc
int
cltd
cmp
dec
movsl
test
mov
add
cwtl
test
shll
aad
xchg
cmpsl
add
jmp
iret
dec
rcll
dec
ror
addr16
mov
jne
fisttps
stos
adc
mov
fldcw
les
dec
cmp
in
and
popa
cmc
adc
xchg
xlat
lods
push
imul
cmp
sub
jno
push
js
sbb
js
inc
lds
add
fdivp
sbb
jo
inc
cli
subl
sub
sti
inc
sub
add
jp
add
sahf
fwait
jnp
mov
popf
out
jo,pn
adc
mov
jo
pushf
cmp
mov
add
push
test
mov
imul
aaa
add
mov
icebp
popf
leave
mov
ficompl
imul
clc
xor
jl
jl
dec
arpl
pop
dec
std
test
xchg
push
push
loopne
movsl
adc
ljmp
movsb
ja
mov
pop
sub
shrb
stc
aam
out
push
mov
fldl2t
mov
xchg
mov
rcr
pop
cmp
and
or
mov
mov
lret
and
mov
mov
xor
iret
mov
jbe
mov
and
lret
dec
add
or
fsts
shlb
lret
ficoms
int
cmp
adc
ds
mov
xor
or
sub
pusha
movsl
mov
pop
mov
sub
out
lods
add
testl
adc
out
inc
andl
mov
xchg
push
mov
dec
test
sti
fnstenv
mov
push
pop
ret
push
movsb
fstps
out
sbb
adc
les
icebp
xchg
shlb
int
mov
mov
sti
jno
cmp
cmp
std
int3
jecxz
cwtl
dec
push
add
out
das
sub
sbb
cmc
xor
xor
cmc
cli
and
mov
test
pushf
imul
in
cmp
fisubl
inc
dec
xor
and
mov
xlat
rolb
cli
add
jmp
fldl2t
test
into
popa
popf
lock
sub
xor
pop
xor
in
and
inc
pop
and
notb
mov
xchg
loop
leave
hlt
or
stos
ficoml
les
mov
pushf
out
lret
ret
filds
test
mov
xchg
sub
ss
and
into
mov
xchg
pop
orl
jge
jns
mov
inc
nop
and
adc
out
xor
clc
rorl
push
jp
scas
xchg
jmp
sti
in
div
lock
mov
jg
clc
pop
call
and
add
cmp
sbb
push
jge
cmp
push
pop
sbb
adc
and
add
ja
mov
mov
pop
insl
stos
sbb
xor
lock
ja
addr16
and
jno
pop
pop
push
test
cwtl
cmp
cli
mov
jbe
mov
mov
adc
jle
add
inc
in
mov
insl
add
ret
cmpb
mov
xchg
sti
or
push
xor
sahf
xchg
ds
into
xchg
lcall
ret
fs
arpl
lds
mov
jo
repz
loop
fistl
xor
mov
cmp
insl
jns
push
jecxz
xchg
mov
repz
jns
dec
xchg
ret
xor
inc
xor
or
jbe
lcall
jb
cmc
imul
in
cmp
xchg
out
repz
test
mov
les
sti
mull
add
shlb
pop
pop
pusha
out
push
xchg
loope
in
aad
pop
dec
call
arpl
int
insl
fwait
lahf
xchg
popf
aam
jmp
test
xchg
icebp
out
pop
mov
push
das
out
mov
sub
mov
jecxz
js
aas
mov
addr16
stc
sarb
pop
addr16
inc
movsb
jge
or
cmpl
fcom
fdivr
ret
shrl
cld
sbb
jmp
and
push
sbb
sbb
pop
pop
mov
cmp
test
mov
mov
repz
lods
add
hlt
push
or
mov
aam
outsl
add
sub
cmc
hlt
negb
data16
pop
data16
cltd
ja
mov
push
rorl
mov
js
jns
mov
jp
fs
pop
push
or
lods
cmp
pop
scas
cmp
mov
inc
jne
mov
call
cmp
lods
in
cltd
out
pop
leave
aaa
enter
cmp
jbe,pn
mov
or
push
sbb
dec
jmp
pop
movsb
mov
adc
dec
bound
push
pop
dec
pop
daa
xor
aam
arpl
adc
push
or
cmpsl
cmpsl
arpl
jne
fcompl
xor
pop
cmp
fdivrs
clc
insl
inc
ds
clc
xor
jl
adc
roll
std
sub
loop
mulb
mov
xchg
push
jbe
std
lret
mov
shlb
xchg
adc
sub
pop
cmp
iret
mov
imul
lods
sbb
xchg
sbb
add
ss
or
mov
mov
lds
xchg
push
test
popa
mov
sub
fnstsw
xor
xchg
xchg
jae
sahf
jl
jae
std
cmp
push
into
in
dec
xor
lcall
lahf
pop
pop
xor
mov
movsl
out
mov
lret
mov
es
hlt
mov
sbb
loop
fistpl
adc
ret
sbb
hlt
inc
add
lds
push
stos
call
in
xlat
pop
push
mov
leave
mov
push
push
or
hlt
sarb
cmp
repz
jecxz
out
dec
and
jbe
push
push
xchg
sbb
mov
int3
sub
jnp
push
mov
jbe
sbb
sub
xor
int
jb
pusha
xor
push
rorb
pop
aas
mov
mov
or
scas
cmpsl
je
test
mov
xchg
xor
sarl
loope
push
xchg
aas
orl
outsb
and
out
incb
les
adc
adc
aaa
fcmovne
lods
dec
pusha
jmp
sub
cmp
adc
xchg
adc
mov
in
gs
inc
push
mov
arpl
dec
lret
xchg
push
jns
sbb
test
int3
cmp
adc
cmp
int3
or
dec
das
adc
sahf
mov
adc
fists
cld
sahf
and
jecxz
in
jne
imul
mov
pushf
mov
fisttps
mov
aam
xchg
mov
ror
jmp
fcomps
xchg
and
jae
and
sbb
sub
or
aaa
scas
call
xor
and
lods
push
xchg
imul
jp
mov
out
mulb
scas
jge
and
fnstenv
adc
ffreep
sarl
mov
outsl
dec
in
jl
jae
data16
fcompl
das
sbbb
adc
shl
lahf
xor
movsb
push
stmxcsr
lods
xchg
call
out
mov
cmp
in
test
or
repnz
sbb
inc
in
mov
cs
mov
cld
adc
mov
orl
int3
sbb
scas
scas
les
cmovb
mov
adc
jle
xchg
lret
mov
add
dec
jle
inc
mov
jne
pop
out
pop
fsubrs
and
and
cltd
test
mov
cs
jae
inc
sbb
inc
ret
xor
mov
adc
mov
sbb
ret
pushw
in
pop
jbe
call
dec
mov
pop
movsl
mov
test
mov
iret
xchg
jb
fdivrs
jmp
jp
push
xchg
push
enter
or
jmp
bound
cli
stos
daa
andb
xor
dec
sbb
add
stc
out
addb
imul
or
outsl
add
hlt
and
shlb
xor
dec
jl
pop
mov
icebp
mov
xchg
lret
test
popf
sbb
int
rcll
add
repnz
cld
mov
xor
mov
cli
mov
mov
jb
ret
mov
push
loope
cs
dec
addr16
add
mov
dec
pop
xor
in
iret
jno
xchg
lret
mov
fildll
sbb
cmpsl
mov
dec
flds
mov
cmp
cmpl
jg
adc
mov
lods
pop
movsl
pop
push
sub
inc
out
in
mov
mov
or
mov
and
cmp
sti
xchg
inc
add
aas
ds
outsb
mov
inc
shll
stc
gs
bound
shll
add
mov
pop
enter
adc
cmp
pushf
and
ret
pop
outsb
jmp
inc
mov
sub
sub
out
sti
cwtl
xchg
in
fcompp
in
jmp
pop
sub
test
dec
pop
clc
mov
sbb
xchg
test
lcall
shll
insb
frstor
adc
dec
sub
pop
push
and
mov
xchg
lods
mov
sbb
jg
adc
pushf
mov
push
mov
cmp
dec
int3
sbb
leave
outsb
mov
jmp
mov
cmc
or
push
adc
daa
and
fstpt
nop
sbb
or
sahf
ds
stc
sbb
sbb
cmp
mov
xor
inc
sbb
and
add
adc
inc
cmc
icebp
jbe
inc
add
add
in
fldcw
cmpsl
jp
dec
lahf
iret
pusha
inc
sbb
mov
jae
mov
sbb
xchg
xchg
fisttpl
push
ret
mov
out
adc
outsl
mov
jnp
out
cmp
divb
popf
xor
xchg
sarb
scas
or
fsubr
or
shlb
mov
push
cmp
imul
sbb
dec
inc
xor
cmpsb
outsl
push
test
fadds
test
xor
xor
nop
sbb
cs
jb
addr16
fimull
pop
xor
dec
shll
mov
insb
cwtl
push
and
mov
ret
gs
insl
push
mov
jmp
jbe
outsl
mov
or
clc
pop
xchg
pop
ljmp
hlt
ja
lcall
dec
cmp
or
in
mov
mov
scas
andb
iret
mov
dec
mov
shrl
inc
dec
and
or
ja
pop
mov
sahf
mov
data16
adc
movsl
aas
xchg
push
shrl
out
xchg
icebp
mov
jmp
aas
adc
xor
jge
fwait
in
mov
icebp
mov
js
pop
mov
jmp
divl
in
sbb
fsubrl
int3
sbb
jle
shll
ja
test
mov
cwtl
fbld
rcrb
jnp
cmpsl
push
mov
shlb
mov
mov
jecxz
sub
stc
adc
push
xor
xchg
pop
xchg
xchg
pop
cs
ret
jns
push
cs
xchg
scas
or
imul
ljmp
push
add
push
int3
or
lods
push
push
mov
sbb
cmp
or
inc
stos
shrl
jge
imul
jb
pop
or
subl
xchg
jno
push
int
fadds
rorl
mov
add
nop
sbb
testb
mov
jb
adc
aam
das
jle
mov
xor
int3
or
cmp
add
test
rol
or
or
sub
xchg
icebp
es
sahf
mov
test
push
movsl
test
jp
pusha
loop
ds
ss
icebp
mov
jge
add
cmp
fcomps
faddl
or
pop
je
adc
cltd
ss
push
inc
jns
mov
jecxz
pop
pop
mov
fiadds
mov
cld
dec
mov
push
jl
jb
jb
xor
jmp
inc
shll
loope
dec
add
or
dec
test
xor
lahf
pop
mov
and
or
xchg
pop
mov
lret
sbb
cmp
xor
ret
mov
xchg
xchg
mov
fcos
and
sbb
mov
xchg
in
push
jnp
call
adc
xchg
pushf
or
or
les
dec
int
sbb
inc
dec
pop
mov
or
mov
push
roll
mov
cmp
test
adc
mov
or
push
inc
pushf
xchg
jp
lahf
dec
rorl
loop
adc
lcall
testl
fcoms
idivl
pop
arpl
dec
sahf
mov
add
fnstenv
push
in
fiadds
ss
in
push
stc
mov
arpl
dec
sbb
enter
cmpsb
lcall
adc
pushf
jg
and
xor
or
test
mov
insl
addr16
std
setge
fildll
sub
pop
or
dec
ljmp
cmp
data16
mov
jmp
lea
leave
cmp
inc
sbb
mov
in
inc
leave
rolb
cmpsb
fmull
jle
jle
and
mov
or
mov
gs
dec
cmpsb
adc
lock
icebp
jmp
pop
loope
pop
test
pop
jae
ljmp
pusha
test
jmp
das
pop
adc
hlt
push
cwtl
lea
loop
test
imul
jl
pop
cmp
lcall
pop
addr16
mov
push
popa
xorb
xor
aaa
icebp
jl
imul
and
jle
popa
xchg
push
mov
adc
push
aad
test
in
aam
arpl
lahf
adc
xchg
mov
notl
or
sbb
xchg
dec
add
cmp
add
mov
cwtl
push
ror
in
js
arpl
hlt
xlat
pop
je
loope
mov
test
push
call
adc
cltd
into
xchg
dec
dec
mov
loop
jecxz
xor
push
inc
mov
iret
rcr
aad
inc
imull
mov
repz
cld
daa
cli
je
je
sbb
fbstp
or
lahf
and
aad
negb
sub
mov
adc
mov
repz
and
fldl
pusha
popa
cmc
adc
mov
add
xor
sbb
stos
pop
push
gs
mov
dec
inc
data16
fldl
scas
pop
arpl
enter
mov
xchg
aas
int
inc
das
pop
rcll
xchg
sub
sarb
sar
push
inc
hlt
enter
push
lret
fwait
out
sarl
pushf
cmpsl
add
dec
outsl
mov
cmpl
das
outsb
daa
pop
rcrl
pusha
dec
lret
icebp
fsubrp
pusha
gs
in
push
nop
decb
or
in
mov
mov
and
mov
mov
movl
xchg
jge
pop
sub
shrl
push
mov
jge
insb
or
cmp
or
add
popa
lahf
ja
shlb
sbb
data16
mov
jecxz
pmaxsw
mov
jno
pop
cmp
loopne
call
sbb
outsl
adc
pop
pushf
sarl
loope,pn
push
xchg
inc
sbb
into
leave
xchg
sbb
ja
cmp
fdiv
lcall
fpatan
ror
ret
outsl
push
daa
sbb
movsl
push
loop
loopne
je
or
adc
in
dec
jns
pop
test
lret
jns
dec
repnz
inc
sbb
push
cmp
movl
je
mov
sbb
insb
jnp
xor
jl
sub
fsubs
mov
aad
icebp
xor
xor
mov
hlt
adc
into
pop
mov
sub
cmp
in
addr16
and
cmp
pop
sub
mov
mov
inc
leave
xchg
pusha
sbb
push
mov
jecxz
jp
mov
jo
jle
movsb
mov
or
imul
fwait
mov
pop
fs
push
and
enter
imul
or
enter
mov
stos
mov
scas
icebp
mov
fwait
sbb
gs
ret
lahf
inc
out
pop
push
lods
je
inc
lds
mov
and
aad
mov
mov
sbb
mov
testl
adc
divb
fcoml
mov
das
pop
push
mov
pop
dec
adc
jg
decb
test
cmp
xchg
add
fbld
loop
mov
inc
xchg
shll
stc
data16
int
outsb
jne
andb
lahf
jl
daa
ljmp
imul
mov
dec
sbb
lcall
mov
shl
dec
and
inc
sbb
jge
test
mov
cli
mov
clc
fbld
hlt
lahf
rorb
and
leave
add
cld
lcall
dec
adc
or
pushf
je
sub
and
test
mov
mov
jbe
and
lods
mov
pop
mov
dec
loope
cmp
push
lret
cmp
lock
mov
orb
inc
xchg
sbb
jae
movsl
mov
lock
xchg
jmp
cmp
pop
sbb
sub
push
xchg
push
shll
sahf
mov
xchg
lock
push
mov
bnd
ja
scas
mov
jns
lea
jae
fnstcw
xor
repnz
shlb
lret
cs
loope
dec
into
test
mov
mov
sub
mov
mov
pop
mov
pop
shr
inc
and
int3
push
test
cmp
test
loopne
clc
xorl
lahf
stos
rcrl
rep
call
xchg
push
jmp
mov
test
pop
mov
push
lret
aam
xchg
aad
pop
outsb
fmulp
std
bound
rclb
jg
shl
jg
inc
in
adc
loop
stc
or
inc
push
adc
inc
and
cmp
push
or
icebp
jle
iret
pop
dec
mov
movsb
enter
testb
leave
adc
jmp
daa
js
mov
mov
or
imul
fidivl
mov
mov
es
push
cli
and
aam
xor
hlt
imul
mov
push
ret
shll
lea
inc
aam
mov
adc
stc
dec
fiaddl
adc
lret
mov
or
sti
popa
ljmp
cmc
xchg
addb
mov
push
fstpl
rcrl
sub
mov
les
xchg
xor
push
xchg
div
hlt
mov
rcrl
mov
jo
outsb
adc
push
cmp
inc
push
sbb
add
dec
inc
pop
sti
xchg
xchg
imul
xchg
sub
shrl
jb
mov
in
jb
pop
inc
rcll
fldenv
inc
add
movsb
mov
pop
call
jnp
mov
cmpsl
in
cmp
in
xor
jl
out
gs
sub
fistpll
insl
jecxz
push
rolb
pop
sbb
aaa
scas
push
outsl
lods
test
adc
inc
icebp
mov
sbb
push
jge
adc
push
fcomps
inc
sldt
jle
lods
push
xor
inc
jecxz
scas
push
daa
push
lea
leave
xor
lahf
loopne
jae
nop
ljmp
leave
ja
das
daa
icebp
ret
sub
adc
mov
je
pop
add
sub
and
cmpsl
xchg
cmpsl
ss
dec
push
rolb
gs
icebp
inc
mov
push
test
jb
stc
sbb
ljmp
aas
sti
xor
jno
imul
push
xacquire
xor
add
flds
sub
sbb
scas
sbb
pusha
add
fistpl
loopne
xlat
mov
push
test
mov
push
add
dec
or
dec
push
out
fsts
imul
xchg
cmp
mov
subb
sub
jne
adc
jge
fistps
fs
mov
adc
or
inc
frstor
sbb
icebp
incl
sarl
stos
lds
xor
fcompl
scas
out
scas
dec
pop
push
stc
out
add
mov
dec
test
nop
push
les
test
dec
or
sub
shll
pop
dec
sub
xlat
sbb
inc
pop
repz
pop
jns
movsb
mov
mov
pop
jns
fisubrl
leave
mov
fiadds
fisttpl
mov
pop
xchg
push
and
xchg
dec
lds
or
adcl
xchg
cs
pop
movsl
adc
fbld
ljmp
iret
adc
mov
movsl
loop
cmp
mov
outsb
out
gs
data16
popf
cs
xorb
adc
filds
pop
shlb
dec
pop
jno
or
icebp
pop
std
sbb
sub
cmp
mov
inc
sub
icebp
std
mov
mov
add
in
cmp
clc
and
adc
aad
xchg
and
into
inc
pop
cmpsl
xlat
dec
or
lea
mov
outsb
fisttpll
xchg
cmp
sbb
mov
clc
and
mov
fnstenv
std
pop
fstpt
aas
pop
and
inc
cmp
je
mov
mov
pop
test
mov
xchg
pop
nop
fdiv
fmull
jge
pushf
shr
es
mov
rolb
xor
mov
bound
xor
cmp
popa
push
xor
in
lret
stc
add
icebp
sub
dec
pop
fdivr
addb
lahf
aam
inc
pop
pushf
leave
dec
jo
jl
or
cwtl
or
or
cltd
jge
in
or
jae
or
dec
jne
cmp
pop
xor
icebp
fcmovnu
imul
push
push
or
cmpsb
pop
push
mov
jae
jmp
repnz
sbb
pop
sbb
sti
cmp
testl
js
cld
pusha
test
cmpsb
je
int
or
into
add
inc
cmp
cmp
sub
jmp
ds
int3
inc
add
cmpsl
nop
adc
cmp
ds
xchg
pop
xor
add
outsl
mov
sbb
lods
jmp
cwtl
inc
mov
pushf
test
adc
mov
fbld
xor
dec
inc
add
push
aaa
xchg
add
lods
js
movsl
push
sarb
lahf
sbb
rolb
push
out
lods
lret
aad
push
outsb
repz
or
outsl
push
loop
fldl
mov
sub
and
mov
push
cmp
cmpsl
fxch
outsb
and
movsb
add
je
mov
cmp
loopne
pop
std
push
adcl
pop
mov
movsb
cmpl
pop
incb
daa
jmp
les
scas
push
icebp
pusha
arpl
pop
add
xchg
pop
xor
jo
xor
mov
add
xrelease
stos
mov
leave
mov
mov
jecxz
rcr
outsb
dec
sub
in
push
xchg
ss
rcrl
lcall
mov
pop
mov
and
stos
ss
je
xor
mov
xchg
mov
push
dec
out
iret
fnstenv
sahf
sub
mov
lea
mov
mov
insb
call
lret
xchg
into
jmp
sub
pop
addr16
fcom
jmp
popf
xchg
jne
pop
push
aaa
addr16
push
fidivrs
dec
and
sarl
mov
loope
test
out
cltd
or
or
cmpsl
xor
mov
or
xchg
xchg
jne
movsb
imulb
mov
jb
inc
cmp
lahf
loope
add
lods
fwait
imul
xor
es
das
aad
les
adc
pusha
fldl
pop
inc
fnclex
sub
stos
adc
mov
or
int3
dec
rorb
adc
jae
iret
mov
out
mov
rcl
jns
aaa
hlt
push
clc
or
ljmp
int
cmp
mov
mov
fwait
mov
and
sbb
mov
das
lret
test
xchg
adc
cld
dec
sbb
jp
imulb
cmc
iret
ret
jl
pop
dec
fcoml
and
mov
sub
rcrb
add
jo
lock
out
cmp
jbe
and
mov
push
leave
out
sti
push
les
shll
rcrb
mov
in
cmpsl
in
std
cmpsl
loope
jb
sub
inc
cmp
rcl
div
inc
jnp
jge
add
and
and
ss
mov
imul
and
loop
adc
and
cmpsl
in
pop
xor
aam
nop
pop
cmc
aaa
int3
ljmp
call
ror
jno
fs
add
add
and
pop
fidivl
inc
push
jge
pop
add
loop
ret
rclb
lahf
std
movsl
mov
pop
xor
inc
ds
pop
xchg
dec
sti
or
int3
mulb
xchg
into
add
adc
pop
inc
fwait
jae
push
jg
fdiv
push
jo
dec
dec
std
paddb
cmp
aas
mov
test
je
scas
out
and
ljmp
stos
test
loope
push
call
push
mov
out
xorl
or
jne
pop
ret
pop
arpl
push
je
sti
out
cmp
xor
inc
or
sbb
mov
jae
outsl
ret
lods
xor
mov
rcr
or
dec
push
jno
loop
sarb
mov
adc
loope
leave
lods
outsb
clc
bound
call
ljmp
push
xchg
inc
loope
ret
mov
testl
dec
decl
dec
js
dec
mov
cltd
mov
das
out
sbb
dec
lcall
xchg
pushl
stc
mov
cltd
jnp
mov
xchg
or
pop
xor
adc
xchg
lcall
lock
add
mov
sbb
leave
and
mov
shll
dec
gs
pushf
sbb
les
sub
lret
stos
es
nopl
xchg
cmpsl
xorb
mov
push
into
xchg
push
dec
das
rcrl
sbb
lahf
inc
push
jb
pop
in
das
dec
cmc
ds
sbb
and
mov
repnz
loopne
cmp
cli
loopne
pop
repz
xchg
push
pop
test
cmpsl
mov
cmp
mov
test
sub
jp
inc
inc
pop
dec
add
or
xchg
cmp
test
insb
js
pop
out
in
xor
das
xchg
aas
inc
bnd
push
adc
adc
and
stos
enter
mov
inc
nop
add
add
and
rolb
inc
test
adc
hlt
add
es
out
xchg
dec
push
cmpsb
mov
es
fcmovnb
mov
clc
pop
icebp
jb
cld
in
mov
insl
mov
je
add
aad
cwtl
std
jne
push
test
cmpsl
out
inc
js
add
cs
dec
sub
mov
insl
dec
mov
sub
mov
dec
add
adc
test
mov
cmpsl
mov
cmpsl
in
xchg
jp
mov
adc
sub
and
rorl
pop
fwait
sub
push
mov
dec
clc
mov
loopne
insb
mov
nop
dec
rclb
cltd
mov
push
test
rcrl
inc
ds
loope
outsl
sub
sahf
lods
xor
sbb
jmp
movsb
enter
dec
neg
leave
xor
mov
sub
sub
fists
push
xor
sub
movsb
xchg
push
sub
push
fisubrl
mov
xchg
int
dec
ljmp
xor
aas
push
jmp
inc
insl
mov
fxch
mov
cmc
fstpt
push
mul
cmpsl
insb
mov
mov
and
mov
les
mov
push
mov
cmp
leave
cmpsb
cmp
inc
add
mov
fadd
repz
mov
scas
add
insl
popf
aaa
out
imul
or
adc
imul
clc
add
or
cmp
push
cmp
enter
lret
sahf
ret
lock
xchg
and
out
adc
shll
imul
cmovp
lea
push
add
xor
cli
sbb
scas
mov
and
xlat
aaa
jge
xor
xor
mov
and
scas
pop
clc
push
roll
stos
jg
ds
push
dec
notb
insl
stc
mov
fstpt
inc
add
xlat
mov
test
orb
pop
mov
or
or
jns
cld
icebp
notl
dec
and
push
test
cmp
outsl
iret
pushf
pop
es
insb
mov
xchg
fwait
jl
sub
push
mov
ja
loopne
sbb
fsubr
mov
mov
pop
mov
jge
sub
ljmp
ret
xchg
add
mov
sbb
and
pop
mov
add
inc
out
dec
fcomps
insb
pusha
push
shll
nop
repz
sub
push
jl
xchg
mov
sub
xchg
int
pop
fsubrs
and
push
mov
pop
cmp
add
popf
pop
mov
pop
mov
push
adc
xchg
cmp
cli
aam
mov
dec
and
jbe
and
sbb
push
imul
xor
jp
shl
mov
mov
or
lds
sbb
add
fdiv
push
push
cmp
jmp
adc
test
es
test
xor
jno
addr16
je
pop
int3
inc
push
or
and
adc
or
mov
prefetcht0
sbb
jmp
mov
inc
fiadds
imul
push
nop
fwait
iret
jbe
push
shrl
mov
sbb
out
and
sbb
fistpl
mov
cmp
lods
aas
jge
pop
push
sub
push
or
imul
pop
mov
jle
ret
repnz
adc
xchg
fdivrl
test
loop
int3
fmuls
push
lods
loope
in
lods
lret
push
fidivrs
xor
cmpsl
lock
jmp
sbb
push
ljmp
movsb
out
dec
int3
lea
andl
cli
cmp
movsb
cmp
lret
std
adc
mov
mov
aas
in
pop
mov
out
inc
daa
fisubs
xchg
mov
nop
imul
jle,pt
in
bound
lcall
leave
data16
inc
inc
inc
dec
mov
mov
xor
fistps
sahf
jnp
xor
cmp
out
jbe
lods
int3
into
gs
push
ja
ds
aad
cli
xorl
mov
mov
sbb
pop
xlat
xor
rdtsc
ds
xchg
jg
or
xchg
jbe
xor
push
jae
mov
mov
cmp
inc
pusha
mov
outsl
call
sti
bound
xchg
jb
iret
clc
orb
add
jg
mov
int
arpl
xchg
loope
xchg
cmc
sbb
xchg
gs
popf
aad
push
adc
fsts
push
pop
xchg
mov
sbb
or
cwtl
sbb
sub
pushf
or
cwtl
stos
or
aas
inc
pop
and
ret
dec
sbb
addr16
stos
xor
out
dec
push
xor
mov
lret
ret
inc
cltd
adc
in
cltd
xchg
push
je
mov
dec
and
cmp
outsb
jecxz
lods
jns
mov
lea
test
lcall
popa
aad
mov
pop
cmpsl
xorb
rorb
mov
mov
add
fwait
movsb
or
sbb
scas
js
sub
sbb
xor
arpl
push
sub
loope
mov
pushf
stos
adc
clc
cmc
paddb
pusha
test
add
ret
or
faddl
fs
mov
rol
cld
das
inc
addl
andl
ret
cmpb
xchg
xchg
popf
imul
pop
lock
lret
mov
sbb
jnp
arpl
mov
mov
sti
pop
arpl
aam
sbb
pop
cmp
push
add
mov
jmp
gs
bound
pop
sahf
jmp
jge
jo
int3
fstpt
or
clc
push
and
push
mov
outsb
pop
push
mov
adc
inc
inc
iret
ljmp
mov
add
int3
and
enter
jl
rclb
outsl
insb
mov
inc
jge
sbb
xchg
lret
push
test
push
pop
cmp
pcmpgtb
leave
out
lahf
inc
icebp
add
test
mov
jns
enter
aaa
nop
add
adc
mov
mov
cltd
loope
xchg
xadd
mov
loope
fisttps
sub
cli
sti
je
sub
aas
jecxz
cs
jns
xchg
sbb
ljmp
mov
bound
out
pop
insb
les
lea
fwait
iret
jae
addl
outsb
mul
mov
xchg
cmpsb
mov
in
pop
enter
loopne,pt
jb
inc
out
cli
add
insb
popf
test
sbb
hlt
test
fcoml
mov
cli
cmp
push
clc
pop
mov
hlt
pushf
leave
add
sbb
cmp
sub
icebp
xor
dec
daa
mov
loope
push
jnp
mov
add
std
dec
in
mov
lahf
sbb
xor
push
cmp
popa
cmp
in
cmc
jo
aam
xchg
addb
ficompl
pop
mov
mov
jecxz
push
and
rorb
xor
mov
loopne
insb
adc
sarl
mov
popa
and
jecxz
popa
loope
fldcw
into
push
fidivrs
es
sbb
jle
insb
testb
movd
push
pop
mov
ret
add
push
sbb
rcll
xor
cmp
ljmp
inc
int3
mov
mov
xchg
cmp
icebp
sbb
adc
xchg
mov
pop
lods
in
rolb
xchg
repnz
xor
mov
negb
addl
jns
dec
aam
inc
out
and
jb
xchg
xchg
or
xor
call
fwait
xor
adc
fnstenv
mov
or
push
mov
into
dec
jmp
push
cmpsl
inc
pushf
insb
ffree
in
leave
xor
ret
mov
out
rcrl
cmp
fsubl
xor
mov
push
sbb
dec
add
inc
imulb
xchg
sahf
sbb
or
lcall
adc
xor
jnp
jecxz
clc
pop
fimuls
sti
insl
sub
icebp
mov
fldenv
cmp
lret
sub
lahf
jo
stc
lock
xchg
lcall
shl
and
int
dec
sbb
inc
arpl
cs
pop
sub
rclb
rcl
xchg
enter
jecxz
and
mov
dec
bnd
pop
pushf
inc
push
or
mov
cli
scas
movsb
aam
dec
pop
scas
cli
jbe
mov
or
shrb
sbb
mov
cli
inc
dec
lahf
sbb
or
aam
push
jae
jno
push
ret
sbb
mov
and
xor
fisttpll
add
sbb
adc
idiv
int3
movsw
scas
inc
gs
cmpsb
pop
xchg
pop
push
and
fimuls
aad
jbe,pn
je
xor
gs
fcmovb
lahf
mov
into
les
outsb
cmp
push
mov
xor
repz
lods
pop
gs
dec
mov
cmc
in
clc
cmpsl
push
mov
std
pushf
mov
aas
jp
adc
adc
cmp
orl
les
or
cwtl
inc
lea
in
cmp
mov
inc
mov
dec
mov
add
int3
mov
xor
hlt
adc
std
xchg
inc
iret
in
xor
mov
mov
jl
xor
fldt
xchg
push
sub
push
mov
repz
pop
call
cmp
repnz
enter
jne
mov
pusha
pop
loop
ret
rclb
jecxz
out
loopne
jmp
imul
sub
inc
add
xchg
xor
adc
test
cmp
push
loop
xor
fmuls
add
sub
cs
push
dec
mov
jmp
or
stc
sub
jl
shr
jecxz
sbb
repz
xchg
xchg
lret
repnz
test
rcrl
mov
mov
ja
dec
leave
jp
lods
addr16
push
and
out
sbb
lret
ljmp
pop
out
sbb
cltd
movsl
rcl
push
mov
jo
sub
cltd
sub
inc
mov
ror
adc
rorl
adc
xor
sbb
ja
cld
pop
jg
mov
je
test
dec
jno
mov
orl
pop
push
push
pop
in
push
mov
and
mov
int
add
mov
sbb
iret
pusha
dec
repnz
mov
or
ret
xchg
push
in
cmp
lods
int3
xchg
adc
stos
lret
jge
pop
sub
adc
pushf
xor
cmpsb
inc
inc
pop
mov
cs
sti
pop
stos
rcl
icebp
out
jnp
dec
shll
mov
je
xor
loop
into
sub
xlat
mov
xchg
addr16
data16
stos
gs
inc
push
xor
fdivr
popf
adc
jle
adc
sub
nop
jnp
mov
lds
inc
cld
clc
mov
jbe
rcr
mov
hlt
push
fiaddl
fwait
jno
enter
jae
pushf
loop
shll
pusha
loop
jbe
loope
push
add
mov
test
pop
fwait
pop
js
addr16
pop
les
pop
test
mov
hlt
xor
xchg
adc
sub
push
push
outsb
mov
and
daa
aas
xchg
sub
or
mov
push
pop
cmp
xor
iret
sbb
test
dec
sub
pop
push
jns
adc
in
ss
inc
pop
and
xchg
push
inc
movups
sub
in
jle
lret
loop
xchg
jg
push
roll
mov
sahf
add
jae
mov
sub
push
xchg
mov
loopne
xorb
fsts
cmp
imulb
inc
jle
pusha
xchg
mov
push
jae
push
sub
pop
gs
push
xlat
enter
out
or
cwtl
mov
push
cmp
aam
movsl
inc
dec
lock
push
xchg
xchg
movsl
sbb
dec
mov
gs
jp
adc
mov
fidivrs
cmpsl
sbb
pop
imul
addb
cmp
repnz
xorl
adc
mov
adc
arpl
xchg
ljmp
push
enter
mov
shrb
push
pop
aam
push
dec
push
dec
shl
sbb
adcb
and
scas
sub
sub
imul
xor
jmp
mov
scas
pop
aaa
cmp
scas
stos
or
in
daa
mov
fs
fisttps
cli
pop
inc
loope
push
dec
repz
xor
lods
xchg
sub
cltd
movsb
mov
sub
shlb
push
aas
fistl
inc
xlat
mov
into
inc
je
ljmp
loopne
in
sbb
pop
aas
or
push
dec
fcmove
mov
in
int
in
test
imul
jns
out
sub
loope
mov
lds
add
movsb
nop
or
cmp
cmp
mov
inc
and
push
cld
or
jle
nop
hlt
push
mov
aas
sbb
mov
ds
lret
mov
cmpsb
jnp
call
xchg
cmp
fldcw
movsl
jns
adc
rol
adc
pop
mov
into
je
imul
pop
mov
sahf
dec
ljmp
cli
adc
mov
mov
and
mov
mov
cmp
inc
xchg
stos
hlt
lcall
adc
jecxz
dec
push
xor
aaa
or
dec
pop
inc
adc
jnp
test
cmpsb
adc
adc
mov
mov
lock
popa
mov
or
mov
xchg
inc
mov
out
imul
test
cmp
sub
jle
dec
mov
jge
rolb
stos
test
imul
push
jmp
push
pushf
sbb
leave
jge
ja
jb
stos
inc
test
addl
pushw
jbe
mov
add
sbb
pusha
movsl
and
clc
xchg
mov
xorb
mov
add
aad
adc
lcall
mov
sahf
pop
sbb
ret
and
aad
pushf
mov
das
mov
outsb
imul
movsl
cld
xchg
lret
xor
sbb
jmp
ret
into
rorb
mov
push
gs
loopne
cwtl
push
leave
xor
iret
test
inc
xchg
dec
xchg
jo
addr16
lock
lret
mov
rcr
dec
jnp
cmp
cs
and
ficomps
adc
and
push
sbb
cmp
in
xchg
adc
pop
and
loopne
jl
cmpsb
mov
jno
cwtl
mov
push
movl
or
inc
add
fildl
clc
pop
mov
adc
out
cwtl
push
aas
out
jmp
or
cmp
test
inc
lods
fcompl
ss
js
mov
xchg
gs
pop
pusha
jo
mov
inc
das
lahf
pop
fs
mov
dec
jmp
dec
call
in
inc
mov
pop
leave
pop
popf
repnz
ljmp
popa
out
fwait
testl
mov
test
sbb
sarl
iret
push
movsb
cmc
and
lea
or
lret
jae
stos
enter
in
fnstsw
lahf
mov
mov
repz
jl
add
sahf
sub
pusha
xor
mov
ficoms
mov
int3
and
out
fs
daa
inc
inc
jne
jp
ss
loopne
and
outsl
dec
aam
nop
ja
mov
and
daa
and
daa
pop
jno
jmp
pop
scas
call
jbe
and
std
jle
ljmp
movsl
rcll
xlat
fisttpll
mov
push
jecxz
or
adc
mov
js
push
std
and
xchg
xlat
fucomp
jno
mov
stos
mov
cmp
adc
xchg
mov
adc
sbbl
or
sbb
fcomi
inc
stos
sub
jge
insb
neg
hlt
es
mov
clc
fisubrl
cmp
xor
cs
or
imul
mov
in
sbb
and
enter
imul
sbb
mov
sbb
scas
pop
xchg
test
lods
add
lods
add
xor
xor
sub
and
jp
xchg
rcl
stc
push
jmp
mov
xchg
jmp
aaa
loopne
inc
inc
mov
sbb
inc
aas
jne
fs
jo
mov
xchg
mov
dec
push
sub
gs
and
ss
sarb
dec
inc
mov
dec
icebp
out
mov
adc
pop
int
mov
mov
and
dec
mov
and
repnz
xchg
sub
insl
mov
aas
scas
ja
jb
jl
in
push
pushf
in
mov
cmp
dec
adc
rcrl
test
movsl
push
xor
push
inc
xor
jecxz
adc
pop
popf
and
dec
cwtl
mov
out
push
pop
fcoms
push
cmc
or
cmp
jb
push
shl
jae
adc
xchg
mov
aad
fidivrs
and
fwait
insb
sub
push
dec
jnp
xlat
cmpsl
inc
fdivl
sub
push
sub
pop
cmp
sbb
stos
or
sub
jge
fwait
inc
js
push
in
xchg
inc
sbb
cmp
scas
sbb
cmp
dec
add
mov
out
mov
lods
rcrl
scas
mov
stos
sbb
jg
mov
and
xor
lods
sub
mov
xchg
sbb
mov
sub
sub
inc
lds
test
ljmp
insb
cmp
fistpl
enter
shlb
push
mov
push
and
dec
push
subb
inc
jg
mov
xor
ret
sub
add
insl
inc
inc
adc
enter
and
icebp
shl
aam
push
push
push
aad
popa
stos
jp
rcrl
pop
mov
hlt
sub
mov
inc
outsl
cmp
add
add
rclb
ficoml
and
or
mov
std
cmp
insb
stc
roll
cmpsb
adc
inc
inc
bound
dec
cmp
or
mov
jg
add
adcb
add
dec
paddd
cmp
sub
mov
in
push
cmp
pop
jnp
psubb
xor
movsl
mov
cmp
adcb
mov
xchg
test
cltd
mov
xor
sub
pop
popf
mov
jle
jl
in
xor
lcall
fistpll
in
push
mov
mov
scas
arpl
add
gs
in
and
test
jae
and
jg
in
cld
add
shll
pop
nop
push
xor
or
pop
mov
xchg
cltd
sbb
mov
bound
mov
xchg
xchg
stc
adc
xor
inc
in
sbb
mov
push
pop
lcall
mov
mov
dec
dec
js
inc
pop
lret
icebp
xchg
iret
je
dec
inc
pop
ret
repnz
xchg
cltd
dec
jno
sbb
dec
xor
popf
imul
cld
inc
push
and
push
dec
cmp
add
fcom
push
ljmp
mov
subl
sbb
stos
faddl
jmp
adc
stc
les
cltd
adc
push
add
xor
cmp
and
dec
mov
data16
fdivs
jl
and
jp
repnz
push
and
mov
push
adc
dec
pushf
inc
in
jl
sbb
and
cmp
cmp
xlat
fsubl
icebp
lret
lods
jne
mov
aas
pop
mulb
mov
jmp
jl
lret
cmp
cmpb
cmp
jbe
pop
dec
add
aaa
lods
xor
pop
push
aaa
xchg
stos
lods
mov
stos
xor
mov
push
pop
sahf
xchg
xchg
pop
xchg
pop
mov
or
fiaddl
lds
jnp
jg
scas
push
sub
inc
adc
stos
dec
mov
jb
adc
lret
mov
mov
daa
xchg
add
scas
adc
lret
push
sub
insl
adc
shlb
dec
fbstp
xor
loope
adc
cmp
push
mov
rcrb
hlt
xchg
and
mov
addr16
stos
mov
inc
shll
dec
js
test
mov
lret
inc
pop
mov
add
nop
xchg
push
fdivrl
sbb
hlt
shll
add
jns
icebp
into
lds
xlat
push
popa
mov
pop
in
shlb
jle
pop
xor
push
mov
jp
cwtl
mov
mov
outsb
add
or
pop
adc
xor
dec
mov
stos
lock
cwtl
ljmp
jecxz
lret
sbb
fimuls
lahf
fisttpll
lret
fcmovbe
adc
fadds
imul
push
add
xchg
dec
hlt
mov
or
mov
dec
jae
in
loope
xchg
daa
test
cmpsb
std
clc
sub
push
inc
test
ljmp
dec
adc
scas
out
dec
fucomi
push
add
sub
in
mov
sbbb
enter
jg
enter
xchg
sbb
nop
mov
stos
enter
and
sub
and
sub
es
aas
clc
xchg
ds
mov
pushl
mov
insl
mov
fimuls
or
pop
aad
call
adc
out
test
divl
gs
test
sbb
std
pop
pop
nop
inc
mov
rcr
daa
sti
hlt
dec
xchg
jecxz
pop
fiaddl
xor
fnsave
lret
xchg
jle
mov
jns
fsubp
out
jmp
or
repnz
mov
mov
push
sbb
push
mull
mov
jmp
and
xchg
ljmp
pop
xchg
out
popf
mov
mov
xchg
or
xchg
jnp
jmp
stos
clc
ja
mov
sbb
test
xor
and
mov
cmpsb
pop
jo
js
sbb
outsb
popf
mov
fsubl
testl
push
jmp
pop
movsb
push
jmp
mov
daa
dec
out
jmp
in
in
inc
xor
sbb
jb
lahf
arpl
jae
popf
push
je
arpl
popa
push
lret
jge
or
orl
mov
fidivl
sub
icebp
push
negb
xchg
jbe
fs
push
scas
and
mov
and
ljmp
std
pop
adc
into
cmpl
pop
rclb
cmpsb
inc
xchg
sub
fisubrs
icebp
xchg
xchg
pushf
cmpl
inc
push
xchg
jnp
cmp
mov
jmp
test
dec
bound
or
xchg
mov
cmpsl
in
pop
adc
scas
sahf
dec
ffree
lcall
sbbb
daa
rorb
cmp
dec
aaa
ficompl
imul
sbb
mov
out
repnz
pop
stc
mov
and
call
loop
imul
pop
enter
jns
int
mov
in
lods
sbb
lea
nop
mov
push
aas
leave
sbb
dec
dec
ret
and
lcall
and
jb
cmc
loope
jp
inc
lcall
push
push
add
mov
into
push
nop
and
mov
mov
xor
fisttpll
lds
mov
xchg
jmp
jns
mov
push
pusha
xlat
fcomps
adc
adc
pusha
mov
outsb
mov
pop
std
sbb
mov
cmp
push
testl
inc
leave
mull
sub
fstpl
nop
mov
sahf
imul
push
hlt
leave
mov
and
enter
jg
aam
clc
adc
and
mov
mov
pushf
mov
xchg
and
iret
add
ret
mov
mov
lods
out
jb
push
jb
mov
and
inc
out
push
out
add
mov
pop
push
ret
fcomps
sub
mov
rol
mov
mov
imul
cmpsl
mov
sbb
or
xchg
sub
pop
lahf
sub
lahf
mov
lds
dec
lret
xchg
imul
sub
ljmp
mov
push
cmp
mov
movsl
jbe
scas
fcomps
shr
fs
add
add
xor
pusha
sub
jmp
mov
popf
call
fs
sahf
or
idivb
pop
xor
ljmp
mov
add
mov
mov
sbb
jge
xlat
push
dec
sbb
push
sub
pop
xor
push
adc
movb
roll
in
sbbb
fldl
lods
mov
sbb
sahf
inc
fucomp
and
in
jns
or
js
jae
aaa
cmp
sub
push
push
ljmp
leave
push
pop
pusha
or
sbb
mov
cmp
and
cmc
add
aam
adc
pop
shl
call
inc
je
dec
fwait
cmc
sub
aas
lds
mov
mov
lret
dec
add
fcompl
xchg
fidivrs
xor
dec
jo
xor
push
xor
leave
dec
insl
dec
mov
cli
and
push
scas
repnz
je
dec
jle
ja
scas
gs
aam
xor
and
or
inc
icebp
push
dec
and
push
xchg
sbb
jno
mov
mov
and
arpl
push
sbb
dec
iret
sub
mov
and
cmc
and
or
jno
leave
insb
out
out
stc
lods
test
mov
movl
sbb
ret
xchg
or
mov
xchg
mov
orl
sahf
jb
lock
out
mov
aaa
in
and
outsb
aam
leave
adc
adc
mov
jo
pop
xchg
sarb
pop
scas
leave
lret
and
out
cli
push
cmp
mov
add
je
lahf
dec
mov
mov
loopne
jno
lret
mov
loop
aad
arpl
mov
xlat
stc
inc
pop
adc
lods
fnstenv
lret
mov
inc
pop
push
lcall
lahf
jp
xchg
xchg
cltd
fnstsw
or
lcall
lods
fdivrl
in
movsb
sub
cmp
xor
aam
dec
in
scas
movsb
mov
lret
lret
sub
scas
lods
lcall
int3
int3
arpl
inc
cmpsb
cld
aaa
mov
or
jb
xchg
in
xor
mov
and
jecxz
decl
imul
pop
xor
lods
lahf
inc
ret
mov
fistl
je
test
stos
pushf
das
fisttpl
out
pop
jbe
and
mov
mov
outsl
dec
adc
std
push
sbb
in
cli
lods
cmp
sub
sbb
mov
fsub
cmpl
inc
jb
vmwrite
and
int
pushf
pop
fwait
xchg
test
rolb
ret
aaa
dec
sahf
xlat
pop
pushf
addb
andl
test
lock
das
jae
xchg
jns
xor
dec
insl
mov
adc
lcall
and
fmul
jle
xchg
mov
adc
in
inc
int
mov
mov
pushf
arpl
ds
stc
mov
inc
push
insb
sbb
cmp
fstl
sub
xor
es
mov
push
lret
mov
jb
jae
jnp
aam
sub
xchg
arpl
int3
mov
incb
test
pop
or
dec
call
clc
mov
push
xchg
in
or
push
das
or
pop
pop
out
imul
jge
ss
int3
push
jae
insl
push
mov
imul
mov
ret
ljmp
loop
arpl
mov
int3
and
mov
test
nop
outsb
push
hlt
jne
mov
inc
stos
or
push
mov
mov
jp
leave
enter
mov
rorb
xchg
mov
xor
cmp
lret
inc
inc
mov
dec
mov
sub
pop
cmp
adc
add
inc
das
test
sub
fistpl
imul
xchg
outsl
and
jg
jmp
cmc
inc
call
pop
push
lcall
pop
mov
sti
push
sbb
pop
iret
mov
jmp
push
cmc
mov
xor
ds
pop
outsb
push
or
sbbb
push
cmp
xor
loope
pop
mov
cmp
movsb
cs
xor
push
mov
and
inc
push
lret
xchg
sbb
add
push
sbb
clc
cmp
jae
lahf
xor
mov
inc
xchg
mov
insb
ret
adc
xchg
or
pop
jl
in
enter
iret
mov
mov
push
sbb
loope
xor
inc
mov
js
jle
outsl
and
jp
popa
into
mov
xchg
lcall
pop
sahf
shlb
imul
mov
popa
cmp
sarl
movb
outsb
and
sbb
sub
mov
xchg
mov
std
xchg
jnp
push
jecxz
dec
loope
das
ficoms
shrb
js
out
jae
shlb
xchg
and
mov
adc
mov
test
or
arpl
cmp
mov
add
push
dec
imul
inc
push
jl
stos
pop
mov
pop
and
adc
pop
inc
jb
test
add
jb
add
xchg
lds
push
sub
sbb
shrb
sbb
stc
xchg
sti
ljmp
inc
lods
mov
gs
xchg
and
lds
test
mov
xchg
mov
mov
mov
std
and
push
mov
push
cli
je
cwtl
das
sbb
add
inc
pop
ret
pop
into
insb
nop
cltd
nop
jg
inc
icebp
rol
add
test
lcall
jl
push
push
aam
mov
push
push
or
cmp
aad
and
mov
mulb
nop
cmp
xchg
sar
inc
les
data16
in
mov
push
xchg
addr16
mov
test
mov
cwtl
or
add
mov
aam
fcoms
faddl
sub
insl
loopne
adc
inc
repnz
sub
xorl
sub
adc
sbb
neg
push
call
or
call
and
fcmovbe
in
int
lods
lea
outsl
pusha
fadds
out
xor
adc
pop
add
mov
and
std
rcr
mov
aas
cmp
mov
mov
inc
cwtl
mov
jmp
in
enter
jne
push
int
in
pushw
add
shl
push
rclb
cmp
ret
jp
adc
aas
pop
dec
loop
out
in
scas
arpl
fdivr
or
mov
xchg
mov
xchg
pop
sub
into
push
push
inc
push
push
subb
cmp
stos
pop
iret
ljmp
sbb
imul
negb
sub
cmp
jp
shll
test
ljmp
leave
in
das
mov
cwtl
add
mov
adc
icebp
scas
movsl
fs
mov
dec
inc
arpl
mov
xchg
popa
cmp
push
call
outsl
xchg
mov
sbbb
xchg
mulb
adc
dec
sub
daa
dec
call
lcall
popf
or
ficomps
mov
pushf
xchg
add
les
dec
dec
jge
mov
dec
fldenv
xchg
out
or
insb
xchg
mov
je
les
fs
int3
jo
add
stos
inc
arpl
repnz
mov
data16
sti
iret
stos
ljmp
or
xchg
cld
sub
js
cmp
inc
into
xchg
inc
adc
test
pop
xchg
out
cmc
inc
cwtl
jmp
jbe
repz
faddl
movb
insb
mov
test
sbb
jg
addb
daa
andl
xchg
mov
jecxz
shr
push
iret
mov
vmovd
xchg
loopne
ret
jge
sub
mov
xchg
and
push
jb
sbb
test
dec
sbbl
cmp
cmp
cwtl
scas
sub
mov
stos
jg
push
insb
in
sub
add
cs
jb
ljmp
pusha
enter
sbb
clc
xor
push
pop
je
imul
mov
push
mov
bound
xchg
push
pop
pop
dec
mov
xor
sub
cvttps2pi
push
lock
cmp
dec
mov
adc
ja
jp
push
pop
shrl
cmp
sti
cmp
es
rcr
clc
push
xor
scas
js
ja
rcl
mov
data16
ja
xchg
jg
mov
mov
fimull
xor
aad
jns
fsubrs
jbe
fmuls
sbb
jbe
jle
les
les
repz
aad
repnz
out
inc
dec
jge
lods
mov
call
mov
xchg
stos
in
mov
push
mov
jp
hlt
aaa
xor
mov
pop
fbld
sarl
lods
ret
xchg
inc
dec
decb
roll
mov
and
dec
subl
fbld
faddl
aam
in
mov
aas
push
sarl
cmp
test
std
add
ffreep
rcl
test
in
je
pop
out
xor
cmpsl
sub
out
or
pop
mov
cmc
stos
cli
sub
cmp
dec
mov
pop
mov
cmp
pop
lret
push
leave
lds
insb
adc
addr16
outsb
lcall
das
sbbl
cmp
scas
jne
loopne
push
in
aaa
cmp
leave
mov
mov
repz
inc
mov
mov
pop
pop
mov
notl
ljmp
nop
mov
mov
jae
push
popf
addr16
lea
shll
shrl
add
fsubs
out
out
xchg
push
dec
aaa
lret
testb
cmp
mov
and
pop
dec
or
mov
aas
fwait
jl
test
out
call
and
inc
aas
ss
mov
pop
mov
lds
or
ret
test
sbb
and
mov
imull
js
sub
movsl
pop
xor
pop
and
dec
stos
loopne
cmpsl
stos
daa
fidivrs
ljmp
sub
popf
mov
mov
pop
push
adc
push
mov
cwtl
aas
dec
pop
sub
lret
sbb
and
sbb
jp
dec
xchg
subb
mov
test
sub
popa
aaa
bnd
fs
push
into
fstpt
sbb
jns
mov
sbb
ret
inc
mov
mov
or
lock
sar
add
cmpsl
add
lret
jge
call
aad
sbb
outsb
mov
fwait
cs
sub
loope
rorb
bound
dec
xor
addr16
gs
fstpl
das
iret
repz
xor
or
and
xor
jae
insl
test
xor
shll
fstps
ror
pop
cmc
or
xor
xor
daa
jb
add
or
jb
test
mov
cmc
popf
sbbb
mov
jo
aad
xor
movsb
repz
push
and
sar
adc
pusha
pop
mov
loopne
pop
int3
pushf
mov
outsb
fcoml
lcall
sub
test
and
ljmp
shll
lods
test
push
or
add
ret
jae
jmp
sti
adc
clc
jns
adc
sub
cmpsl
mov
mov
pop
xchg
cmp
int3
jle
cmp
adc
sub
fdivrl
shrb
adc
xor
cs
scas
jg
adc
cmp
xor
dec
push
imul
pop
shll
cmp
leave
jnp
cmpsl
mov
mov
and
add
sbb
jb
ja
pop
add
inc
adc
jns
insb
cwtl
pop
sbb
or
add
push
sar
sbb
ret
mov
ja
aas
scas
jnp
outsl
push
sbbb
xchg
test
lahf
out
mov
int3
iret
and
dec
gs
jnp
iret
pop
mov
outsb
nop
insl
cmp
loopne
mov
sarb
js
dec
lcall
stos
mov
pop
xor
jmp
pop
or
and
dec
ret
popa
jno
push
xchg
xor
faddl
in
and
and
sbb
cmp
adc
mov
pop
push
jl
adc
cmp
out
rcll
fwait
pop
shrl
fs
mov
mov
loope
mov
mov
xchg
push
scas
test
dec
adc
fidivrl
arpl
outsb
mov
push
out
add
popf
nop
pop
mov
into
lea
aaa
sub
cmp
scas
int
fsts
out
gs
lret
lods
daa
mov
cmpsb
shrb
sbbl
out
sbbl
adc
mov
jne
jmp
cmpsl
mov
aam
lahf
fadds
adc
mov
stos
leave
pop
xchg
fildll
hlt
hlt
jne
test
js
sbbb
ret
xchg
pop
sti
xchg
ja
or
adc
data16
dec
adc
in
ss
pop
repz
inc
xchg
push
pop
mov
mov
xchg
subb
mov
mov
ljmp
fisubrl
inc
rclb
test
push
xchg
xlat
cmp
pop
inc
jge
fstl
push
into
add
add
xchg
test
fstp
xchg
scas
sub
mov
fdivl
dec
or
mov
in
lret
sbb
push
jo
mov
xor
lret
sub
fbstp
cwtl
call
orb
lret
mov
and
mov
pop
add
cmpb
notl
pushl
in
xor
jae
adc
outsb
sub
xlat
out
dec
imul
lods
jb
or
filds
mov
push
inc
adc
jmp
jp
in
xor
sbb
rcl
xchg
ljmp
enter
shrb
xchg
pop
mov
aad
insb
cltd
cmpsb
cmpsb
xor
push
inc
xchg
jmp
je
add
mov
dec
mov
xor
add
mov
sub
mov
int3
cmc
and
xchg
jg
pusha
inc
mov
pushf
call
cli
pop
imul
pop
mov
sbb
fucom
cmp
xlat
dec
outsl
or
push
pushf
cmpsl
xlat
pop
inc
add
adc
sahf
pusha
aam
sbb
mov
lock
lock
popa
xchg
sub
mov
loopne
lds
adc
rolb
and
les
xchg
sbb
inc
lcall
push
pop
xchg
lret
mov
adc
mov
dec
pop
push
mov
mov
ss
xor
pop
pop
add
jb
inc
cld
pop
mov
mov
les
sub
cmc
fs
jle
test
push
fsubs
mov
cltd
lret
pop
sbbl
dec
mov
xor
inc
mov
or
ljmp
or
ret
pop
gs
pusha
jmp
mov
xlat
orb
aam
dec
addr16
dec
loope
sub
loopne
jmp
fdivrl
jne
sbb
pop
push
inc
add
jle
cmp
aaa
mov
out
in
dec
push
inc
sub
mov
sub
imul
mov
pop
mov
imul
insb
lock
lock
int3
pop
sarl
sti
dec
out
mov
sarb
dec
or
push
mov
sti
cltd
mov
jbe
ja
or
imul
adc
pop
es
xchg
mov
jo
loop
out
movl
out
mov
aas
mov
push
test
mov
adcb
lea
stos
jl
addl
sahf
cmc
xor
xchg
loope
repnz
addb
mov
jns
xchg
enter
fldcw
sbb
dec
popf
sbb
movsl
xchg
loopne
mov
push
sbb
add
pop
or
jno
mov
imul
or
dec
mov
aas
js
pop
lods
sahf
push
int
or
fnstcw
pop
lea
int3
pusha
iret
mov
and
jecxz
ljmp
push
add
mov
rcl
test
ja
inc
sbb
jg
push
fmuls
push
lret
iret
into
push
push
ljmp
sti
sub
jl
or
gs
add
dec
cmpsb
cli
mov
xchg
nop
mov
pop
setge
jmp
imull
cmp
leave
fwait
cmp
lret
push
jb
andl
mov
jecxz
pop
je
ja
sub
pop
adc
cmpsl
jge
outsb
enter
and
cmp
fidivs
cmp
cwtl
jecxz
jg
int
jno
pusha
mov
icebp
decl
inc
jbe
ficomps
sahf
sub
push
cmp
test
adc
dec
decl
jnp
fiaddl
jno
xchg
inc
pop
scas
sub
inc
outsl
mov
sub
mov
inc
sub
ja
cmp
mov
jb
ficomps
or
addl
add
cwtl
divb
add
inc
adc
pop
out
lds
push
inc
and
pop
sahf
pusha
stc
cs
in
sub
mov
mov
inc
push
jge
loope
shlb
mov
jle
mov
inc
jge
fadd
ljmp
add
jno
adc
popf
out
push
mov
sub
cmp
cmp
or
xchg
cmp
mov
mov
pop
hlt
lahf
dec
and
mov
into
or
mov
add
jg
pusha
rorl
js
roll
sarb
add
jb
outsb
in
cmp
add
fcoms
xchg
sub
mov
inc
nop
ret
xor
xor
bound
fldenv
addl
rcl
push
pushf
popf
pop
mov
inc
icebp
stos
ljmp
push
popf
push
jnp
pop
sti
sub
push
add
sub
cmp
mov
imull
push
mov
mov
sbb
mov
repz
inc
mov
sbb
mov
pop
mov
push
orb
and
jge
lods
mov
add
mov
sub
mov
addl
adc
add
cs
xchg
pop
sbb
stc
cmp
adc
jae
pop
nop
sbb
jnp
ss
nop
pop
xchg
outsl
mov
icebp
mov
lock
xchg
les
cmp
insl
mov
aad
sbb
and
sub
inc
in
cmp
xchg
leave
js
inc
dec
xchg
lods
pop
jno
dec
add
push
push
push
mov
sar
repnz
push
inc
pop
aaa
adc
dec
lods
xchg
xor
data16
imul
sbb
mov
aaa
loopne
jnp
or
xor
xchg
scas
pop
push
pop
loop
jecxz
iret
jae
std
gs
les
push
fnstenv
adcl
dec
mov
cwtl
sbbb
dec
sarl
std
dec
dec
add
into
adc
pop
or
jno
pop
pop
inc
inc
out
inc
adc
or
outsl
xor
fs
out
mov
dec
adc
sub
sti
clc
outsl
fwait
iret
repnz
and
jge
xchg
xchg
pusha
adc
stos
jecxz
sbb
push
sub
xor
stc
movsl
push
inc
out
pop
jb
loope
jp
test
loop
int3
out
es
fbstp
in
dec
or
packsswb
popf
into
xchg
xchg
ss
test
xchg
rcrl
aaa
inc
add
sbb
in
iret
mov
push
push
mov
cltd
iret
sub
repz
iret
jae
mov
push
dec
sbb
mov
add
stos
dec
stos
pop
xlat
mov
subps
call
mov
lcall
add
or
loope
sbb
inc
add
mov
ss
les
mov
insl
clc
jmp
xchg
inc
into
pusha
mov
lcall
mov
pop
xor
leave
or
je
fisubrl
out
mov
dec
call
jmp
cmp
mov
xor
pop
sbb
cmp
pop
mov
fninit
movsb
addr16
mov
push
and
jle
das
push
push
lret
adc
leave
pop
pop
xor
rcrb
arpl
inc
xor
sti
mov
in
adcb
fdiv
push
cwtl
nop
aas
cmp
je
mov
add
jno
or
lcall
repnz
pop
pop
pop
in
mov
pmullw
lea
sub
addr16
mov
adc
pop
pop
rolb
or
add
and
in
test
loope
cmp
jmp
imul
jbe
pop
hlt
push
je
addr16
inc
mov
int
sub
xlat
cltd
cmpsl
mov
in
mov
cmp
enter
jge
fs
mov
leave
or
and
inc
call
cld
mov
je
xlat
cmpsl
or
lds
xchg
sbb
sub
xor
inc
out
das
xlat
mov
and
push
icebp
testb
addr16
cmp
sbb
mov
cs
lea
nop
test
stos
jmp
ja
aas
shll
push
dec
rclb
push
flds
in
shrb
sbb
cmc
push
add
and
mov
enter
fistl
movsb
xchg
int
test
pop
rclb
testl
in
aas
sbb
xchg
std
stos
xchg
adc
ffreep
jne
adc
enter
cltd
mov
pop
mov
fs
int
dec
push
pusha
faddl
js
xor
sub
push
cld
cmpsl
or
sub
push
jecxz
movsl
pop
jb
mov
orb
jmp
mov
jnp
mov
dec
pushf
loopne
rcl
push
call
pop
xchg
mov
mov
push
push
std
inc
mov
jmp
sub
sti
clc
cltd
adc
mov
out
mov
jnp
and
cmpsb
pop
xor
cmp
or
and
ficompl
add
dec
jg
into
jg
int3
adc
add
into
inc
jle
or
adc
dec
addr16
out
inc
lds
mov
hlt
and
sbb
aaa
pop
mov
jecxz
mov
subb
or
cltd
sbb
jecxz
add
xor
mov
rclb
icebp
mov
lret
mov
aas
or
pop
adc
jns
adc
std
test
neg
movsb
jo
pop
xor
or
jnp
pop
lods
loope
cs
pop
insl
sbb
daa
pop
pop
lret
xor
mov
push
std
in
xchg
inc
lds
shll
xor
into
mov
je
lea
clc
bound
or
or
pop
roll
in
xor
inc
cmp
cmp
jle
out
adc
xchg
jne
imul
scas
icebp
xor
and
fisttpl
fcomps
mov
push
add
sub
inc
xor
test
mov
jmp
jnp
in
and
xor
int
cltd
mov
lods
push
and
fidivrs
mov
xor
and
ljmp
sbbb
jb
rcll
xor
sub
clc
xor
jecxz
mov
or
push
add
push
fcomp
jmp
loopne
test
and
jbe
ret
cwtl
jge
lret
jbe
iret
int
sub
cli
mov
push
pop
mov
push
cmp
cs
or
mov
aaa
pushf
sbb
cmp
stos
dec
push
add
mov
ret
and
pop
push
dec
add
inc
incb
popf
sbb
stos
dec
adc
int
jo
push
cld
or
outsl
adc
dec
jo
mov
mov
add
or
test
dec
pop
mov
lret
inc
lock
adcb
jnp
lock
jno
jbe
add
and
mov
insl
cli
dec
lock
out
mov
jl
sbb
or
lea
jno
xlat
mov
mov
mov
mov
xchg
mov
and
mov
sbb
sbb
and
mov
sbb
xchg
loopne
outsb
jnp
xchg
sahf
add
out
inc
sbb
push
fisttps
mov
outsl
xlat
faddl
enter
jmp
xchg
call
and
cmpsb
pushf
and
sub
push
sahf
dec
xor
insl
enter
pop
mov
and
dec
add
xor
addb
in
xchg
ljmp
aad
loopne
ret
sahf
mov
mov
mov
in
cmp
xchg
stos
flds
insl
mov
call
mov
and
cmpsl
roll
push
and
out
or
jmp
dec
and
loop
out
push
nop
cltd
out
icebp
cwtl
adc
test
jbe
jmp
out
fdivrl
sbb
lcall
call
test
xlat
enter
outsb
mov
int3
shlb
mov
movb
bound
aad
pop
fmuls
jg
mov
mov
push
mov
mov
idiv
mov
enter
stc
ss
lods
sub
jb
xor
xchg
mov
mov
sub
xchg
xor
ds
scas
arpl
cmp
shlb
sub
or
fisubl
add
inc
nop
jb
xlat
stc
sbb
pop
daa
loop
push
lods
mov
negl
pop
aas
mov
mov
pop
shll
pop
inc
ja
and
push
xlat
xor
ljmp
push
or
jne
fstp
dec
mov
imul
adc
push
out
test
out
and
nop
mov
adc
cmpsb
in
mov
sti
jbe
mov
sbb
and
shl
pop
icebp
sub
pop
push
and
xchg
es
and
fiaddl
aaa
sub
nop
push
mov
mov
mov
pop
lock
and
mov
sbb
mov
dec
and
test
xorb
mov
mov
xchg
cmp
push
or
and
addl
push
orb
dec
mov
lret
stos
sub
jbe
sub
mov
test
pop
cmpb
out
pop
fmul
xor
or
test
add
std
jge
mov
mov
arpl
xchg
xchg
aaa
inc
outsb
ja
mov
dec
dec
and
ret
xchg
pushf
mov
ljmp
nop
pop
aad
xor
mov
loope
loope
adc
inc
add
divb
cmc
lock
into
jmp
aad
hlt
sti
xor
cmp
xor
cmc
push
jp
sub
adc
cs
mov
jp
jmp
test
jge
mov
pop
dec
cmp
jecxz
mov
jne
xchg
add
push
pop
out
push
es
in
jbe
cmp
out
jg
int3
lods
or
scas
sub
icebp
sub
dec
xchg
mov
sub
mov
pop
outsl
mov
push
ja
xor
inc
sbb
lcall
mov
adc
ret
jecxz
mov
in
stos
pop
mov
pop
mov
into
or
dec
mov
shrb
popa
ret
nop
aas
fwait
cli
jp
mov
cmp
mov
scas
xor
cld
pop
inc
test
out
mov
pop
ret
lcall
popa
mov
sbb
enter
and
inc
jne
xor
xor
mov
into
cmp
test
andl
call
into
movsb
aad
sub
scas
lret
loopne
add
lods
xchg
mov
insb
ss
stos
orl
pop
mov
aam
jp
inc
enter
adc
cmp
adc
cltd
imul
movsb
out
mov
pop
mov
int
cmp
std
leave
lret
or
test
push
shl
leave
mov
pop
into
out
and
shl
jb
jl
test
jmp
xchg
mov
sbb
jge
fwait
inc
imull
bound
jae
jp
aaa
or
sbb
push
shl
and
cmp
repnz
mov
or
jae
pushf
dec
jbe
mov
movsl
push
xor
cmp
adc
pop
jecxz
cmp
xchg
xchg
xchg
mov
shlb
adc
cltd
test
jae
adc
loop
jae
mov
or
jecxz
mov
jge
pop
aas
mov
xchg
adc
ljmp
outsl
clc
int
xchg
daa
out
xchg
loopne
rolb
icebp
dec
in
jp
addr16
lock
outsb
xlat
fadd
das
xchg
lahf
xchg
clc
out
stos
mov
pushf
sub
xor
add
mov
lock
jecxz
mov
mov
in
lock
mov
mov
ja
inc
or
ja
fmuls
cmp
into
xor
lcall
or
push
gs
mov
in
mov
xchg
cli
pusha
loope
nop
scas
push
int
sub
or
shlb
addr16
ret
sub
punpcklbw
loope
mov
sub
subl
es
inc
pop
xor
aaa
sbb
sti
ljmp
cmp
dec
mov
stos
jl
xor
pop
out
pop
mov
lock
dec
ret
push
jnp
sub
shr
push
cmc
pop
fwait
pop
test
fildl
int3
rcl
outsb
cli
xor
push
jp
add
pop
push
aas
lcall
rol
sub
push
mov
aas
scas
fadd
gs
mov
dec
jg
leave
push
ret
push
iret
xchg
add
xchg
je
mov
xor
jbe
mov
scas
mov
jge
lcall
inc
andl
adc
mov
rol
cmp
insb
xchg
xor
mov
data16
cmp
cmpsl
dec
jbe
dec
jle
imul
je
jo
push
sbb
jge
fiadds
rcrb
sahf
leave
xchg
dec
sbb
out
cltd
and
jecxz
add
jp
sbb
or
mov
jno
pop
frstor
sbb
sub
mov
and
ss
test
fildl
sub
inc
dec
mov
add
mov
lods
sbb
jo
cmp
jns
push
xchg
int
mov
iret
jno
push
jbe
not
daa
and
cld
mov
cmp
es
aaa
mov
jp
fildl
fadd
push
xor
test
xchg
fidivrs
jp
pop
xchg
cs
inc
into
jg
enter
in
out
inc
shld
cmpsl
and
ja
add
fisttps
cmpps
dec
cltd
sub
mov
mov
adc
jae
fcoml
js
cmpsl
sub
test
or
test
insb
out
sbb
mov
push
das
nop
arpl
jp
test
jge
dec
xchg
push
cmp
cli
das
fidivrs
xchg
add
scas
pop
push
lea
stc
mov
outsl
cltd
les
pusha
push
and
testb
mov
lret
ljmp
cmpsl
cmp
and
or
or
add
or
cmp
cmp
mov
das
or
aas
leave
enter
stos
push
stos
push
jbe
xchg
lea
sub
add
orb
inc
call
loopne
push
ficoml
mov
out
cmp
lods
fbld
in
sbb
fwait
in
push
and
cmc
push
jmp
mov
jp
fimull
in
push
jg
test
dec
outsl
cmc
dec
aaa
divl
rcll
gs
xor
mov
ja
lds
xor
icebp
dec
sarb
cmp
or
adc
dec
out
cmp
cmp
cmp
push
flds
pop
js
or
inc
pop
add
pop
pop
mov
pop
and
jl
je
cmp
int3
pslld
scas
jmp
xor
scas
lds
add
popf
xor
inc
insl
arpl
mov
fwait
jns
enter
push
mov
add
mov
xchg
jmp
push
mov
pushw
fimuls
loope
push
inc
pop
cwtl
add
dec
jp
sbb
jmp
cld
jo
in
cwtl
enter
jge
les
xchg
lret
or
dec
push
popf
xor
fadds
andl
inc
mov
out
test
jle
xchg
jnp
sbb
pop
dec
mov
jecxz
mov
hlt
rorl
ja
loopne
xchg
insl
jp
mov
push
mov
sub
scas
xchg
fs
aas
sub
test
inc
push
mov
xchg
cmp
or
xchg
andl
ret
scas
stc
jnp
jbe
cmc
push
dec
js
repnz
adc
sub
mov
inc
ds
cmc
arpl
insl
cmp
popa
xchg
test
sahf
fisubrl
jl
mov
inc
and
push
movsl
addr16
addb
xchg
mov
adc
movmskps
in
ss
or
mov
cmpb
jl
pop
xor
in
or
jle
cmpsb
xor
mov
xchg
pushl
lock
femms
xor
cmp
leave
lcall
stos
mov
int3
imul
or
dec
in
mov
or
xor
in
mov
and
iret
mov
test
sbb
add
out
mov
inc
aas
hlt
fidivrl
repz
add
mov
xchg
and
inc
cmp
sbb
add
or
pusha
push
and
icebp
xor
int3
imul
xor
push
loope
outsb
aam
dec
xor
mov
mov
test
aas
add
lods
push
int3
btc
mov
push
mov
xchg
cmp
xchg
fldl
pop
push
jp
inc
jae
fs
sub
xchg
and
push
xor
xor
js
sbb
sbb
dec
or
dec
and
dec
leave
inc
jmp
jecxz
add
roll
addb
mov
lcall
aaa
hlt
orl
jns
mov
nop
add
outsb
adc
enter
enter
bnd
cli
repz
push
push
jne
lods
mov
ficompl
push
test
sahf
jg
pop
cmp
notb
or
pop
mov
cltd
aaa
insb
into
push
sbb
xor
cli
inc
sub
and
adc
inc
inc
pop
xchg
dec
cli
adc
ss
mov
pop
rorb
test
in
test
mov
loopne
js
rcll
dec
cmp
xchg
sbb
mov
or
adc
cmp
mov
loopne
fwait
inc
pop
push
fistps
test
into
push
leave
or
stc
push
dec
xchg
ds
leave
sub
mov
push
or
xor
mov
popf
out
testl
sub
and
jmp
in
pop
cmp
adc
jp
int3
nop
jnp
and
je
imul
push
push
ret
sub
faddl
pop
scas
sub
icebp
mov
call
push
stos
stos
dec
loopne
dec
mov
or
pusha
jle
sub
test
cmp
fidivrs
cwtl
arpl
push
inc
pop
mov
cmp
push
xor
add
icebp
loop
loopne
inc
call
out
or
cmp
push
xchg
sarb
or
inc
std
sub
mov
jmp
or
pushf
xchg
pusha
push
adc
mov
fistps
add
or
cmp
aad
dec
jbe
mov
jle
mov
xor
add
add
test
inc
adc
cmp
cmp
test
sbb
dec
push
test
xchg
jne
sub
xchg
add
outsb
jmp
lahf
mov
mov
pop
fsts
sbb
sbb
mov
arpl
cmp
loope
sbb
ljmp
fisubrs
adc
scas
clc
movsl
cltd
mov
dec
xor
add
xchg
scas
jp
pop
nop
int
negb
inc
sbb
pop
leave
xlat
adc
cmc
cmc
scas
loope
mov
or
dec
cmp
cmpsl
mov
jns
mov
rorl
outsl
jb
xor
pop
xor
enter
sub
les
ja
xor
stos
mov
fstl
outsl
dec
ljmp
popa
fisttps
in
xor
loope
out
fwait
cmp
push
stc
fnop
in
xchg
mov
dec
mov
out
mov
xchg
push
daa
ret
jns
push
insl
pop
mov
hlt
mov
clc
push
pop
addr16
cmpsl
and
ret
nop
mov
push
or
mov
pop
pop
add
add
mov
inc
fmuls
iret
xchg
clc
add
mov
ror
ljmp
mov
shld
mov
sbb
repnz
ror
int
negl
ja
inc
imul
insl
ret
mov
imul
push
ret
dec
in
add
in
ret
or
into
push
mov
lock
and
subl
mov
fdivl
add
dec
repz
jle
and
fs
or
lret
mov
out
cmp
xor
push
sbb
mov
add
je
jns
out
push
sbb
mov
pop
scas
pop
mov
cmp
jl
shl
xchg
sub
scas
je
in
stos
clc
pop
sub
push
fcmovnbe
push
mov
push
sbb
dec
in
fwait
sbb
mov
pop
out
inc
out
jns
adc
mov
xchg
std
loopne
or
dec
xor
push
ja
or
lods
jnp
mov
test
jae
pop
stos
mov
dec
mov
push
mov
or
mov
fsubr
mov
fwait
mov
pusha
fwait
into
jne
or
and
ljmp
cld
aas
pop
mov
ficomps
cltd
xor
jl
jp
loopne
cmpb
shll
jne
adc
xor
push
xor
and
cmpb
fld
jne
mov
shrl
or
int3
mov
xchg
xor
pop
mov
mov
push
or
or
mov
jo
ljmp
subb
aad
repnz
cltd
xlat
and
mov
jno
movsl
andb
or
sbb
enter
in
dec
in
fsubrs
rcrb
pop
psrad
std
lods
mov
out
cwtl
mul
fbstp
mov
daa
ss
cltd
ret
pop
lret
movaps
out
inc
dec
pop
sub
jle
pushf
jno
lds
sub
jmp
sub
inc
in
inc
je
xchg
es
test
cmp
leave
mov
jnp
sarb
mov
cmp
pop
mov
pop
dec
out
in
xchg
mov
aam
push
jl
mov
rcrb
pop
mov
into
inc
dec
into
test
dec
inc
lahf
imul
jl
jl
sub
pop
or
xor
mov
inc
dec
pop
push
or
mov
xor
and
push
mov
pushl
testb
test
outsb
lret
dec
aas
movsb
push
mov
jl
fdivrp
sbb
mov
rorb
sub
cmp
cld
sbb
jl
jg
dec
sbb
mov
gs
int
xchg
popa
and
pop
inc
cwtl
cwtl
adc
outsb
mov
loop
ss
dec
adc
and
ss
pop
pavgb
sahf
cmp
jo
adc
xor
mov
rorb
push
xchg
orb
push
and
sub
lret
cmp
inc
adc
mov
xchg
jecxz
clc
jbe
stc
lret
int3
cmp
enter
pop
xchg
mov
sub
nop
test
mov
sub
or
in
sub
sub
js
shr
dec
lods
adc
push
ret
push
addr16
xchg
lahf
idivb
ret
jmp
sbb
aaa
cmc
hlt
sbb
and
shl
mov
movsl
mov
cli
push
push
pusha
sbb
pop
in
imul
andl
loop
add
add
test
xlat
repnz
leave
mov
inc
dec
sbb
inc
mov
push
inc
addr16
loope
cmp
fildll
pushf
mov
notb
fwait
mov
pop
mov
insb
scas
stos
sbb
aaa
inc
and
jbe
cld
jne
out
push
jecxz
and
es
push
jecxz
addb
test
or
mov
je
add
sub
adc
dec
les
push
xor
fwait
push
pop
in
in
mov
push
notl
xchg
cmp
adc
cld
je
shll
mov
xor
sub
imul
fwait
mov
mov
jno
jmp
dec
sub
or
jbe
add
int3
pop
scas
sub
jecxz
rcrb
mov
arpl
lahf
rep
js
in
pop
stc
and
test
mov
jnp
lods
jns
shrb
jnp
shll
and
push
and
fs
dec
in
jg
icebp
test
lcall
or
add
iret
not
ss
adc
jnp
out
push
outsl
outsb
mov
iret
or
dec
es
ret
fildl
push
fildl
fs
sub
dec
popf
mov
sbb
outsl
cmp
cld
shl
xchg
xchg
stos
in
fidivrs
push
jne
lea
icebp
pop
mov
cmp
pop
pop
in
daa
imul
int3
pop
mov
xchg
into
stc
pop
xchg
inc
aad
ds
add
xor
and
pop
js
lods
vmovd
insb
mov
mov
rclb
pop
cmpsl
xor
or
xor
mov
mov
insb
sbb
js
inc
sub
in
insb
ficoms
inc
movsl
ficomps
fcomp
lahf
dec
jge
jne
fadds
fwait
dec
movsb
rorb
or
push
jo
jmp
into
orb
cwtl
lret
imul
vcmppd
cld
pop
test
xchg
movsb
or
lahf
xchg
xor
lret
loope
jns
and
inc
ds
std
adc
jmp
pop
add
sub
xlat
fldcw
mov
xor
mov
dec
mov
gs
mov
aaa
imul
push
sahf
dec
cmp
xchg
insl
xchg
enter
imul
pop
test
out
popa
push
movsb
push
mov
pushl
insl
push
or
xchg
mov
popa
adc
adc
mov
inc
push
insb
sub
mov
arpl
loope
cmp
inc
mov
aaa
movsb
cld
dec
sbb
int3
in
stc
jp
loop
loope
and
push
mov
pop
pop
les
xchg
fldt
shll
insb
call
sbb
mov
stos
pop
out
and
or
xor
mov
loop
cmpl
shll
test
pop
pop
imul
xchg
pushf
push
mov
inc
jns
push
cli
adc
es
adc
add
pop
or
insb
and
fidivrl
sbb
flds
mov
mov
mov
addl
or
inc
loopne
sbb
pushf
push
pop
out
mov
dec
insl
lret
pop
arpl
cbtw
movsb
notb
lock
dec
lcall
xor
int3
pusha
stos
pusha
push
push
andb
xchg
push
adc
inc
nop
ret
ss
mov
cmp
lahf
mov
add
cmpl
enter
nop
loope
clc
jecxz
inc
inc
sbb
jl
push
xchg
mov
xchg
lods
divb
sarb
into
push
ds
push
mov
pop
xchg
dec
popa
rclb
jmp
and
addr16
and
sbb
ret
call
leave
in
push
and
adc
lret
jge
pushf
fiadds
in
inc
push
or
push
int
cld
adc
lahf
imul
std
jno
add
push
jge
in
jbe
cmp
jg
mov
add
cld
fs
sbb
inc
andl
pop
mov
mov
sbb
xor
push
xchg
xor
or
lcall
mov
int3
or
mov
add
out
out
add
dec
rcrb
cmpsb
pop
pop
loope
adc
je
sbb
jno
and
or
push
inc
fsubrl
mov
les
and
sub
es
in
sbb
outsl
cmp
cmp
mov
stos
test
cmp
and
pop
rcrb
dec
sbb
cmpsl
mov
aas
clc
fists
mov
or
xor
add
push
mov
adc
lret
sbb
test
sahf
jb
pop
push
stos
pop
call
pusha
inc
mov
mov
mov
cmp
cld
cmp
fisubrl
movsl
or
push
mov
xor
sbb
out
fldenv
cmp
cmp
ja
fistps
in
mov
mov
mov
pop
inc
cmp
out
scas
pop
aas
popa
xor
lods
xlat
inc
mov
adc
pop
pop
or
fstpl
cs
adc
dec
sub
add
sub
hlt
cltd
push
adc
mov
in
mov
popl
mov
push
cld
push
fmull
xchg
adc
mov
pop
xor
in
or
push
sbb
mov
out
rcrb
jb
lret
or
ret
mov
es
outsl
push
icebp
scas
sbb
jnp
ror
fists
add
push
mov
jmp
stos
xchg
mov
inc
aad
xchg
xchg
dec
cmp
test
inc
out
mov
xor
adc
rol
push
mov
mov
addr16
adc
cmp
inc
pushf
dec
xchg
push
ja
sub
aas
add
gs
pop
in
jno
pop
pop
mov
lock
adc
and
ret
in
sbb
test
clc
aam
cltd
mov
sub
fmulp
adc
out
cs
dec
sbb
insb
jno
int
test
nop
cmp
out
data16
xchg
pushl
sub
mov
out
cmp
arpl
or
dec
loop
dec
adc
shrb
stos
add
subb
aad
test
and
mov
test
das
jmp
sub
imul
lods
clc
jbe
shll
dec
ja
fcompl
push
mov
xchg
sbbl
mov
in
jp
mov
cmovae
or
icebp
jle
aad
dec
bound
cwtl
ss
mov
xchg
lock
mov
test
rorb
pop
mov
in
testl
inc
mov
aas
outsl
pop
sub
push
mov
jge
push
fs
outsb
pop
cmpl
xor
cmc
hlt
pop
rorl
lods
dec
in
lock
mov
movsb
sbb
dec
mov
cmpsl
mov
xor
pop
dec
fucomi
gs
mov
cmpsb
lahf
xor
pop
jo
or
and
subl
outsb
mov
jmp
push
jge
push
jb
mov
pop
icebp
mov
mov
push
and
inc
aam
out
pop
out
fstpt
aam
mov
movsl
popf
jmp
ds
outsl
jnp
sbb
mov
shll
rolb
movsl
inc
loope
incb
mov
adc
pop
stos
mov
mov
mov
andl
stc
xchg
jl
push
mov
jecxz
push
int
add
js
xchg
dec
lock
jns
lods
insb
js
jmp
xchg
fcmovnb
inc
and
orl
dec
cld
push
mov
test
insb
sbb
xchg
adc
outsb
mov
or
cmp
ja
fnstenv
adc
jle
or
jge
ret
test
lea
stos
cwtl
je
std
pop
mov
inc
int3
and
aaa
loope
xor
add
jl
sahf
outsb
xor
iret
punpcklbw
fcmovnbe
imul
push
movsb
cltd
cld
push
add
push
mov
addr16
adc
out
popf
push
insl
mov
sub
inc
pop
aas
shr
bound
shr
jecxz
sbb
sub
imul
or
test
ja
adc
in
movsl
sub
aad
sub
lods
mov
rcrl
inc
pop
mov
add
push
in
dec
call
daa
jae
push
leave
mov
outsb
cld
mov
outsb
add
cmpsl
popa
gs
fs
dec
inc
loop
xchg
fdiv
sahf
aas
adc
or
pop
sbb
xor
mov
or
xchg
mov
stc
push
mov
jae
out
stc
add
pop
push
adc
cmpsl
movsb
in
pushf
mov
push
and
jbe
fbstp
sub
jmp
cli
les
fldenv
sahf
pop
and
cltd
and
popa
movsl
popa
xor
in
push
pop
pop
popa
xchg
ret
aad
aaa
jne
jo
inc
xchg
mov
push
jmp
jb
jns
fiaddl
movsl
jnp
push
push
scas
fdecstp
mov
orb
inc
inc
aad
cmpl
popa
xor
popf
lods
mov
jbe
test
cmp
mov
ret
leave
adc
fs
outsb
sub
push
repnz
int
cmp
fnsave
or
insl
pcmpgtd
int
cwtl
popf
ljmp
nop
mov
fistpl
dec
into
cmp
into
test
cltd
cmp
sub
fisubrl
popf
add
stos
xor
push
mov
jmp
push
es
leave
jbe
clc
aaa
xor
incb
inc
and
inc
outsb
cmp
loopne
popa
popl
or
ss
add
stos
xor
movsl
fldcw
cmp
pop
dec
jmp
xchg
and
sub
fmulp
mov
or
inc
add
ffree
sub
cmp
lods
clc
test
inc
mov
mov
fmulp
pop
les
cmpsb
js
data16
cmp
add
xchg
cmp
cmp
cltd
out
aas
ljmp
mov
lods
fiadds
mov
fstpt
aam
mov
out
nop
xlat
loope
push
repz
ljmp
sbb
push
push
call
mov
mov
not
mov
push
loope
ds
push
imul
push
inc
popf
dec
repz
das
sub
mov
push
call
movsb
lds
adc
popa
aad
lcall
mov
aad
dec
jmp
je
push
popf
dec
pop
dec
loopne
mov
cmpsb
adc
repnz
mov
mov
mov
les
xor
adcb
xchg
pop
out
sbb
fstpt
push
sub
inc
fidivrl
into
mov
inc
inc
add
stc
sub
xchg
pop
sub
jle
xor
adc
sahf
jnp
jp
or
lock
into
mov
fimuls
cmp
mov
test
xor
bound
imul
cmpsl
ss
in
or
sub
xorb
scas
dec
or
das
mov
xchg
dec
jb
lock
push
shlb
xchg
sbb
push
push
sub
loopne
jle
push
sbb
stc
pop
mov
mov
in
xor
into
inc
popf
int
cmpsl
mov
mull
rcll
stc
mov
mov
cmpsl
loopne
out
mov
pop
ds
xchg
or
out
lret
jbe
into
popf
lods
push
add
sbb
sub
pop
ror
call
sbb
pop
movsb
adc
sub
in
and
push
test
fucomi
aaa
adc
lret
pop
xor
jl
mov
aaa
mov
mov
adc
lret
popa
insl
test
mov
dec
lret
mov
in
add
xchg
cld
xchg
mov
loopne
inc
popf
fsts
js
insb
data16
clc
jmp
stos
mov
popa
aad
das
lret
sub
out
sub
hlt
mov
xchg
jl,pt
imul
sub
insb
or
mov
leave
mov
enter
and
pop
cmc
mov
jp
mov
lret
subl
cmp
xlat
ret
push
pop
cmp
add
or
or
lret
add
mov
pop
jb
lahf
sbb
ficoml
ds
sbb
dec
cmp
push
rorl
mov
or
lcall
sbb
loopne
lock
or
stos
daa
outsl
jecxz,pt
jno
test
xchg
leave
in
pushf
push
subl
test
cmp
and
pop
or
xor
in
xchg
in
loopne
popa
bound
lret
xor
in
xor
cmpsl
dec
mov
pushf
fldcw
push
and
sbbl
ret
or
in
mov
fwait
testb
mov
in
sbb
cwtl
inc
aaa
sub
jno
mov
and
or
add
js
inc
jmp
cli
jmp
mov
xchg
arpl
es
or
mov
mov
ss
inc
push
jae
mov
aad
test
fcmovne
outsl
adcl
mov
subb
or
int
sub
mov
mov
mov
sti
mov
xor
dec
push
or
fildl
push
jnp
cmp
inc
xchg
scas
mov
fcomip
daa
mov
sub
stos
push
mov
loop
adc
cld
lods
sub
mov
testl
cmp
adc
jbe
push
ss
ljmp
pop
insb
and
ja
into
pop
iret
repz
add
out
shr
movsb
push
mov
or
stc
mov
stos
mov
cli
dec
jbe
mov
ss
push
pop
leave
xchg
fsubp
lret
sub
lods
xchg
jp
cmp
jnp
mov
test
inc
mov
cmp
xor
dec
arpl
loop
or
fcoms
mov
addr16
jg
mov
nop
lods
outsb
stc
lea
cmp
or
sub
ret
andb
jl
xchg
sbb
pop
imul
nop
das
jbe
subl
add
and
stc
cmp
ret
sbb
sbb
mov
scas
push
adc
add
les
sbb
ds
lods
adc
mov
xchg
std
test
lea
and
nop
lea
mov
sbb
sti
mov
cli
jl
cld
pop
mov
jae
mov
ret
and
or
adc
pushf
sbb
scas
xchg
jge
xchg
stc
int
adc
xor
outsl
adc
cmp
test
lods
xchg
pop
dec
fidivrs
dec
sub
add
popl
sub
xor
jg
fs
jo
imul
push
push
and
imull
sarb
sub
pop
clc
mov
jo
gs
sarb
lods
por
or
pop
clc
mov
xchg
ja
das
mov
popa
je
sbb
jne
lret
cmp
cmp
cwtl
jp
xor
loopne
xor
cli
cmpsl
mov
int3
rcl
jecxz
in
les
pushf
xchg
into
in
int
lock
xchg
addr16
inc
pop
loope
pop
sbb
cmp
shr
lock
push
cmp
mov
lea
cld
loopne
out
or
and
xor
lret
jo
in
and
adc
imull
gs
std
scas
dec
pushf
or
sbb
daa
xor
inc
add
insb
xchg
mov
shlb
jb
call
jns
inc
ljmp
mov
mov
out
test
and
ret
bound
xor
mov
sarb
jbe
cmpsb
sub
xchg
js
scas
mov
mov
out
int3
movsb
mov
loop
sub
add
mov
push
inc
aam
jecxz
movsb
xchg
faddl
push
cmpsw
test
push
jns
arpl
mov
js
jl
stos
push
lret
push
add
ret
sarl
jmp
mov
xchg
fwait
and
push
jb
mov
push
lock
and
cmp
or
stos
clc
cmp
lret
insb
cmovns
push
or
or
cmp
sarl
iret
test
add
cmp
lret
jmp
data16
jp
nop
in
mov
mov
lock
jne
aam
jns
dec
cli
xor
xor
scas
xor
cmp
sub
add
xor
pop
mov
aam
mov
push
and
lret
inc
mov
cmp
mov
cmp
mov
push
test
ret
insb
cmp
and
pop
mov
xlat
mov
dec
fisttpll
cmp
sbb
jp
jo
cmc
ret
or
and
lds
mov
testl
and
inc
mov
cltd
cmp
in
aam
nop
int3
or
movsl
jb
fistpl
bound
dec
icebp
pop
mov
mov
insl
xchg
fndisi(8087
das
or
inc
test
mov
stos
dec
outsl
add
sbb
ret
xor
outsl
sub
popf
icebp
pop
pop
or
push
int3
call
adc
iret
or
fsubr
push
and
jnp
xor
outsl
inc
push
ds
lea
push
sbb
fnsave
inc
and
call
inc
inc
popw
pop
and
push
adc
in
xchg
not
outsb
add
inc
cmp
push
xchg
fsubs
bound
sub
lret
and
addr16
aam
push
and
mov
lods
mov
popf
inc
cmp
dec
daa
fnsave
and
or
jmp
mov
add
mov
xor
rcrl
out
mov
adc
ljmp
and
aaa
rorb
push
and
lds
jmp
rclb
fistps
sub
cmpsl
push
iret
cld
jle
dec
lock
loop
push
test
sbb
aas
loop
adc
movsb
imul
dec
pop
cmc
test
popl
adc
sahf
mov
sub
stos
pop
jle
ficoms
jo
and
fsubl
insl
xor
fistpl
mov
mov
or
sbbl
das
inc
test
out
aad
scas
pop
test
out
or
imul
mov
and
dec
shr
std
push
popf
repnz
xchg
cwtl
aas
lea
or
bswap
add
test
push
aas
jle
stos
mov
mov
loop
aad
test
lods
fwait
insl
push
gs
mov
push
out
stos
ss
stc
lahf
ss
movb
push
cmp
out
push
cmc
outsl
or
shrl
jnp
ja
jb
jle
or
dec
add
mov
aam
std
js
jge
dec
loop
pop
jmp
flds
outsl
fsubrp
dec
xor
xor
mov
mov
cld
mov
sub
ret
fcmovb
sub
inc
addb
inc
fisubrs
pusha
sub
cmp
movb
push
call
nop
cmpsl
and
push
ljmp
and
loopne
xchg
paddsb
cmpl
or
mov
jl
mov
jne
xchg
xor
jne
fldt
jp
cmp
daa
inc
push
js
fcmovu
dec
adc
mov
push
fcoms
adc
aas
jge
stc
in
dec
jg
jg
and
pop
lock
inc
pop
lret
add
xor
out
data16
xchg
cmp
or
sahf
enter
xor
mov
mov
shll
mov
ljmp
dec
mov
jecxz
push
mov
xlat
mov
jge
adc
enter
push
xor
and
aad
inc
mov
pop
imul
jmp
repz
es
call
aaa
sub
jle
shlb
ss
push
mov
clc
scas
out
mov
int3
addr16
cmc
sahf
jle
sbb
cwtl
ja
adc
call
arpl
mov
ja
pop
xchg
mov
cmp
scas
jle
repnz
cmp
adc
add
lahf
pushl
enter
in
stc
push
in
pop
jae
ficoml
daa
ret
in
repz
es
jmp
sbb
pop
repnz
mov
push
shl
insl
pop
lods
sbb
les
sub
sub
sbb
cmpsb
shl
mov
fcoml
data16
adc
stos
daa
push
test
js
lods
xor
and
lods
xchg
jno
cld
mov
repnz
jmp
mov
xchg
jle
cmpsl
cmc
in
int3
insb
push
std
jb
and
pop
in
or
pop
stos
sahf
sahf
std
roll
jmp
cmpsb
lahf
stc
xchg
stc
or
mov
jns
rol
add
repz
or
push
push
lods
sbb
jbe
pop
incl
lret
dec
xor
push
add
mov
cmpsl
sub
scas
into
aam
cmp
bound
mov
push
test
mov
subb
jl
rol
push
push
repnz
insl
inc
hlt
xor
ja
movsl
arpl
stc
stos
sarb
dec
ljmp
bound
cmc
push
outsb
movsb
rcrb
sub
cmp
push
xchg
std
and
pop
rcrb
cmp
cs
xor
jno
mov
adc
push
daa
dec
jmp
imul
jge
dec
pushf
xor
and
mov
ret
sub
pop
setl
insb
loop
push
bound
push
adc
xchg
ficoms
sub
add
xchg
push
mov
enter
into
gs
adc
xchg
sahf
imul
or
mov
jle
fs
ret
xor
mov
daa
inc
movsb
jae
mov
pushl
or
xor
fisubrs
subb
int3
xor
jb
aad
fsqrt
imull
shrb
jl
lods
fwait
add
xchg
sub
adc
sub
ret
mov
cmp
push
ljmp
cwtl
mov
sti
push
subl
idivb
push
jp
nop
and
outsl
adc
subl
add
lods
jg
cmp
mov
cmc
mov
in
dec
add
aam
dec
fdivrl
xchg
shr
xor
xchg
xchg
outsb
jb
mov
les
lds
add
push
sbb
out
sub
and
xchg
add
dec
and
xor
js
adc
jle
icebp
jle
mov
pop
mov
sti
idiv
mov
inc
hlt
push
mov
das
rcr
mov
sbb
icebp
xchg
sub
imul
iret
jns
mov
jp
mov
jge
cwtl
mov
rcl
das
orb
sbb
imul
out
pop
lock
test
inc
jns
xchg
into
adc
dec
in
jo
add
mov
push
sbb
cmpsl
cmpsb
adc
pop
sbb
mov
jo
lds
sub
rol
push
scas
inc
mov
sar
dec
repnz
imul
fs
sub
mov
pop
mov
in
mov
sub
movsb
xor
and
ja
jb
and
jp
inc
fidivrs
xchg
xchg
sarl
fisttpl
insl
stos
xlat
in
dec
push
cmp
scas
and
test
fisttpl
enter
negb
cwtl
cwtl
and
nop
dec
dec
ret
pop
push
fwait
repz
into
mov
mov
xchg
mov
loope
push
cmpsl
cmp
aas
xchg
dec
xchg
sub
mov
jnp
xor
and
xchg
aad
jnp
jno
mov
out
aas
or
imul
fnstsw
mov
mov
push
loope
lods
leave
dec
rcr
data16
jg
lret
ss
mov
clc
out
inc
add
push
pop
into
mov
shl
push
and
addl
movsb
mov
dec
rorl
lahf
dec
test
xchg
xchg
jg
jne
mov
test
mov
fildll
cmpsb
popa
lret
mov
adc
mov
int3
movsb
test
pop
fdivrl
fidivs
pop
dec
fwait
mov
mov
jae
fwait
add
mov
push
and
pop
push
aas
xlat
cmpsb
shlb
lock
and
cmpsb
adc
cmp
int
xor
pop
andl
sub
lods
out
cmpsb
xor
mov
lods
jecxz
cmp
mov
sti
ret
xor
cmp
pop
es
hlt
dec
xor
sbb
and
iret
arpl
js
xor
cwtl
popf
sti
adc
subl
aaa
and
xchg
test
cltd
pop
jb
xor
dec
js
jle
or
and
sbb
xor
adc
adc
cld
in
out
sbb
shll
inc
sti
dec
mov
sbb
mov
cli
mov
ss
out
push
cmp
or
dec
jne
les
mov
xlat
je
test
xchg
loope
jne
into
test
cmpsl
add
mov
jecxz
jle
fdivr
sar
sbbb
pop
and
dec
mov
lods
ret
inc
lcall
mov
pop
dec
push
daa
aas
mov
inc
stos
push
and
push
sub
sub
aad
adc
mov
mov
out
pop
ds
imull
movsb
in
stc
dec
ja
pop
dec
ret
mov
mov
and
jns
shl
pop
mov
mov
push
fisttpll
xor
std
lea
inc
mov
fistpl
jge
cmpsb
jno
nop
and
add
pop
jns
xor
and
mov
cmp
adc
dec
loop
cwtl
scas
and
jae
sub
leave
and
adc
loopne
cmp
xchg
orb
xchg
movsb
push
repnz
cmp
jp
push
add
xor
in
adc
jno
dec
test
mov
xor
mov
lods
cwtl
imul
xor
mov
out
fs
mov
dec
lret
add
sbb
push
test
test
popf
pop
dec
jo
enter
loop
xor
lret
cli
sub
inc
iret
fchs
bound
imul
lea
xor
jno
mov
mul
aam
in
mull
mov
leave
mul
popa
pusha
nop
fwait
xchg
hlt
inc
aam
add
je
pop
sti
int
push
or
lock
cs
scas
mov
ds
push
cmp
sti
mov
shll
cmp
sub
mov
mov
aam
dec
mov
cmp
lock
and
jl
mov
push
inc
pop
dec
adc
popf
jbe
push
bound
leave
ss
mov
lret
xor
push
jno
cltd
adc
xchg
lahf
movsl
fimuls
fisubrl
negb
xor
dec
pusha
in
sub
add
xchg
mov
out
dec
iret
sbb
out
cltd
dec
imul
fs
adc
mov
xor
cs
rcpps
fs
rorb
mov
lea
sbb
pop
ret
dec
sub
lods
lock
pop
xor
xor
sti
sbb
mov
fsubs
inc
scas
mov
pop
cmp
test
mov
fwait
hlt
add
push
cmp
dec
stos
jo
mov
push
loopne
sti
jg
pop
insb
leave
mov
xchg
cmp
aaa
dec
mov
fiadds
iret
mov
test
movsb
mov
push
inc
into
cld
fimull
adc
and
adcl
ljmp
pop
dec
or
xchg
bound
pushf
test
sub
and
jb
mov
jg
pop
fadds
inc
daa
gs
lods
mov
add
jns
leave
inc
imul
push
aaa
shll
jbe
mov
xchg
mov
or
or
js
bound
loope
and
or
cmp
push
or
push
cmp
push
sub
cmp
hlt
popf
xor
mov
cwtl
jp
mov
stos
and
ljmp
loop
inc
insb
or
add
in
pop
ret
cmp
xchg
test
sbb
sbb
inc
add
xchg
cli
gs
add
in
jae
shr
cmpl
shr
pop
adc
jbe
jg
std
mov
mov
or
sbb
cmp
pop
lods
dec
mov
fnstenv
ss
adc
mov
lcall
test
xlat
adc
pushf
jmp
inc
ltr
es
and
adc
not
fimuls
out
pusha
xchg
dec
insl
jg
loopne
shr
and
call
fs
cmp
and
xchg
push
lcall
add
pusha
xor
enter
cltd
add
adc
lret
add
clc
stc
fimull
sub
pop
stc
and
ret
add
pop
pop
push
das
nop
cmp
fwait
nop
mov
js
inc
mov
scas
mov
cmp
pusha
flds
dec
cld
mov
imull
test
outsl
outsl
sub
fildl
jo
fisttpll
rcr
jmp
cmp
adc
xchg
dec
sbb
push
test
jb
sbb
jmp
mov
ja
outsb
pop
imul
sbb
sbb
mov
cmc
je
data16
dec
pop
and
repnz
jns
jge
jge
jg
ss
mov
daa
inc
mov
jb
mov
pop
jp
sub
lret
fstps
sbb
pushf
clc
inc
dec
imul
nop
mov
gs
outsb
scas
jp
sbb
cltd
fsubrl
stos
fisubrs
mov
adc
sub
or
sbb
jb
push
clc
rolb
push
icebp
mov
adc
daa
cmpsl
pop
mov
mov
fisubs
xchg
ret
cmpsb
inc
outsl
xlat
mov
popa
pop
mov
jb
mov
or
or
inc
jo
mov
out
adc
rcrl
mov
sahf
xor
pop
imul
push
inc
lret
add
jg
jnp
and
rol
jne
push
add
das
es
add
call
stc
imulb
pop
xchg
push
mov
hlt
movsl
dec
sbb
not
pushf
add
out
sbb
mov
loopne
lahf
jbe
aad
dec
roll
mov
sbb
int3
add
sahf
out
ljmp
mov
cli
pop
sar
es
jp
dec
das
adc
pusha
mov
shll
adc
sbb
dec
outsl
jle
loope
inc
cmc
mov
int
fstpt
push
sub
enter
mov
ret
pop
out
adc
mov
jbe
pop
xorl
pop
iret
or
push
xorl
insl
mov
xor
sbb
adc
cmp
dec
pop
lds
notl
mov
movsl
and
mull
xchg
jp
and
rcrl
dec
lds
js
mov
add
dec
cmp
adc
jle
jae
in
daa
lods
mov
pop
test
xor
xor
lret
mov
mov
repnz
es
or
xchg
in
sbb
xchg
aaa
mov
cmpsl
add
push
jo
fdivs
sbb
loop
js
or
adc
or
ja
jge
and
cmp
insl
mov
mov
mov
dec
aad
xor
incl
xor
stc
sub
inc
bound
push
or
push
and
mov
cmpsb
fisubs
shll
ret
adc
stos
repnz
mov
push
test
sbb
cwtl
mov
mov
sub
loopne
push
sub
sbb
sbbb
out
and
loope
lods
add
or
dec
jo
in
adc
jl
pop
ret
xor
mov
push
ljmp
cmpsb
jne
addr16
stc
xchg
movsl
sub
xchg
lods
jle
pop
daa
cmpb
mov
xchg
in
lods
movsl
out
and
push
int
xchg
mov
mov
xlat
ljmp
fisttpll
aaa
rcrl
movsb
iret
or
mov
push
xor
rclb
mov
lds
xchg
inc
sbb
mov
fnstcw
daa
cmpsb
sub
icebp
and
push
sub
iret
out
cs
inc
jecxz
cwtl
xchg
jo
xchg
mov
add
mov
enter
xchg
sub
add
sar
or
rorb
sub
inc
popa
and
xchg
imul
and
cmp
push
xchg
fs
rolb
jge
sbb
push
jnp
mov
cmp
jl
add
inc
adc
stos
jb
add
inc
ljmp
add
xor
xor
ucomiss
inc
mov
loop
push
fcompl
js
fisttps
xchg
rcl
in
pop
out
mov
push
ja
adc
adc
lret
cli
scas
mov
js
add
adcb
pop
ss
test
push
jnp
sarl
mov
adc
mov
mov
cmp
ljmp
push
gs
dec
cmpsl
xor
fisubrs
push
fdivl
mov
cld
pushf
imul
scas
mov
lods
dec
sub
mov
sti
fildl
mov
push
and
xchg
or
std
mov
pop
out
idivl
jge
jmp
sahf
test
bound
daa
jecxz
push
push
lret
dec
adcl
in
mov
push
ret
lret
add
push
mov
aas
test
int3
pop
out
fcmovb
cmp
and
ds
add
lret
jmp
jns
xor
aaa
xchg
dec
xchg
mov
lret
pop
mov
loopne
mov
lcall
clc
jmp
es
aas
sarb
call
adc
xlat
or
aaa
mov
pop
and
mov
scas
sbbl
lea
mov
adc
sarl
lret
and
data16
lcall
stos
sbb
add
xor
jle
mov
jb
pop
loopne
test
loope
xor
mov
cmp
dec
or
mov
xlat
pop
ljmp
pusha
imul
sahf
mov
xchg
pop
fidivrl
pop
xchg
in
icebp
call
out
sbb
addl
in
daa
pushf
cmpsb
pusha
jne
loop
sub
push
xchg
daa
call
loopne
js
add
push
imul
push
jb
les
fucomp
imul
add
mov
push
or
mov
aam
pop
push
dec
pop
ret
pusha
cmpsb
test
lds
dec
vpaddq
xor
ficomps
mov
dec
out
xor
cmpsb
cs
mov
in
mov
aas
dec
jge
xor
push
dec
cmp
ds
jne
shr
fsubs
mov
fmul
sub
adc
mov
pop
mov
movb
push
test
mov
mov
lea
lock
sbb
or
lahf
or
xchg
and
in
dec
mov
and
bound
or
jmp
outsl
cs
pop
orl
xchg
arpl
enter
pop
sti
popf
adc
xchg
jns
dec
out
mov
dec
push
fists
and
lahf
pop
adc
xor
pop
jae
xchg
rolb
loopne
push
loopne
imul
mov
loopne
push
enter
aam
test
xlat
inc
icebp
fs
insl
nop
hlt
and
fbld
inc
adc
jg
lock
add
cwtl
cs
pop
lcall
jg
fstpt
adc
or
std
pop
aaa
hlt
gs
mov
jbe
sub
les
shl
mov
aaa
js
movsl
inc
inc
cmp
jno
out
cmpsb
push
inc
cmp
mov
cmpsb
psubq
bound
in
and
mov
or
enter
jecxz
cwtl
cs
stos
dec
ret
push
test
inc
cmp
rolb
fnstenv
cmpsl
js
mov
scas
test
test
add
pop
rorb
fwait
imul
add
add
lea
cmpsl
pushf
mov
sbb
cmpsb
push
pop
pop
pop
nop
test
mov
dec
shlb
push
fisubrl
mov
adcb
xor
mov
call
pusha
fisubl
xor
inc
cmp
mov
jns
fsubs
jp
add
sbb
ja
in
mov
cmp
push
sbb
pop
xor
fdivr
jbe
cmp
adc
sbb
jmp
jns
mov
fistpll
rcll
jl
test
je
sbb
sbb
jecxz
cmp
bound
sbbl
jnp
movsb
sbb
xor
pop
test
lods
lods
cltd
aam
and
cmp
xor
xor
mov
xchg
lcall
js
or
loop
dec
jmp
adc
movsb
add
inc
mov
xor
push
mov
xor
push
cmp
stc
ficompl
in
push
test
or
clc
adc
aas
push
js
jge
jae
xor
cmp
xor
jg
les
pop
gs
jmp
shr
jb
jmp
mov
jb
fwait
sbb
sbb
mov
mov
mov
ss
dec
adc
jno
sbb
xchg
sub
sub
ja
push
sbb
jnp
push
vmread
fmull
mov
std
insl
dec
nop
pop
and
imul
leave
arpl
ret
aad
jbe
jo
cmp
rcl
jecxz
scas
jb
imul
movsl
push
or
out
dec
jae
insl
testb
icebp
dec
cmp
mov
pop
or
mov
sbb
int3
nop
bound
into
push
adc
mov
fildl
mov
jnp
pop
aam
divb
fdivl
lahf
lods
xor
stc
imul
sub
or
xchg
je
sub
jge
and
gs
negb
push
sub
testl
test
aaa
outsl
inc
dec
sub
fwait
shrl
mov
leave
mov
inc
adc
push
xchg
and
or
gs
lahf
lcall
sub
pop
dec
cmpb
push
xchg
add
repz
lock
xor
pop
jb
aas
lods
mov
mov
mov
cld
and
add
xchg
push
js
xchg
cltd
std
xlat
xchg
imul
outsl
scas
push
fisubrs
cmpsb
in
add
inc
fildll
popf
loope
cmpsl
mov
dec
jns
mov
or
daa
adc
adcl
lcall
sbb
test
or
fimuls
mov
test
cmp
jne
push
mov
mov
es
mov
or
js
das
sub
inc
fwait
popa
mov
mov
push
movsb
clc
ljmp
xchg
or
mov
fldenv
cmp
cmpsb
lock
push
sbbb
xchg
mov
in
cli
or
scas
xchg
insl
pop
inc
mov
stc
xor
add
clc
popa
pusha
push
adc
xchg
xchg
scas
fabs
out
fwait
xchg
jbe
xchg
or
sti
push
push
push
fs
iret
add
jle
push
inc
insl
adc
jbe
pop
int
and
loop
mov
xchg
sbb
decl
insl
pop
jbe
test
add
adc
xor
sub
adc
test
cmpsl
pop
dec
and
mov
push
shlb
push
mov
cmpl
and
cmp
xchg
lret
das
lret
movsl
cmp
imul
divb
xor
repz
fstps
dec
das
cmp
pop
cmp
fcmovne
lret
jge
xchg
sarl
repz
das
fwait
shll
dec
dec
test
cmp
and
in
lahf
push
call
mov
insb
add
loopne
mov
adc
sbbl
sbb
mov
sub
jecxz
roll
mov
xchg
arpl
in
xlat
xor
add
xchg
in
aas
fistps
ljmp
call
sbb
jne
fcomp
mov
test
push
ljmp
pop
lods
adc
addr16
enter
lds
xor
cltd
push
int3
and
loop
clc
popf
pop
xchg
dec
cmp
js
inc
nop
nop
aam
lods
xor
add
dec
adc
stos
xlat
dec
int
mov
cwtl
arpl
mov
imul
loopne
scas
xor
pop
loopne
test
dec
or
mov
loopne
mov
sbb
mov
or
icebp
iret
lcall
iret
or
xchg
stos
clc
and
push
xchg
push
mov
ss
pop
decl
mov
mov
mov
xchg
fwait
iret
xor
out
js
scas
inc
int
stos
outsl
enter
mov
aas
sbb
iret
adc
fs
push
sub
sbb
loopne
inc
inc
cmp
sbb
gs
adc
cmpsl
add
arpl
or
adc
or
divb
jae
push
stc
jmp
fwait
aas
loopne
sbb
in
testl
xchg
ficomps
mov
incl
mov
lds
add
nop
sbb
aam
in
sti
adc
jg
out
push
xchg
push
add
bound
mov
mov
pop
dec
insl
mov
xchg
jns
jmp
insb
dec
lock
idivb
xor
sub
movsb
push
cs
loopne
add
sbbb
iret
mov
ds
jnp
mov
push
xchg
mov
mov
mov
fistps
sub
inc
pop
jg
in
and
lcall
adc
cmc
imul
mov
insl
jne
aas
sbb
sahf
les
mov
sub
xor
pop
xlat
mov
or
lcall
scas
incl
pushl
into
outsl
sbb
xor
pop
lods
xchg
xchg
test
cmp
jno
lods
jp
out
ss
pop
xor
or
xor
fnstcw
jecxz
push
pop
or
inc
stos
push
xchg
pop
jbe
mov
mov
loope
jbe
sti
jle
add
sub
sbb
lods
or
mull
xlat
fstpt
xor
jmp
mov
xchg
shll
cmp
sbb
ret
lods
addb
inc
into
lahf
stc
lcall
stc
std
sub
cmp
fdivr
and
or
mov
mov
and
fwait
pop
jae
mov
cmpsl
and
je
inc
sbb
or
test
fs
int3
adc
sub
movsl
je
inc
nop
adc
and
pop
data16
sbb
testb
jo
sar
adc
mov
add
pop
add
sub
in
jmp
mov
xchg
mov
movsb
xchg
add
jmp
shlb
es
fs
and
mov
adc
leave
and
rorb
out
leave
jns
mov
add
cmpsb
sbb
add
jmp
inc
xchg
clc
ljmp
pop
mov
jmp
and
jle
sahf
pop
mov
push
push
or
xchg
std
push
lret
jne
mov
cmc
pop
mov
mov
nop
cmp
std
ljmp
shll
xchg
jne
inc
sub
aaa
loope
adc
aaa
out
out
popa
clc
sub
test
xlat
sarl
dec
fwait
add
sbb
xlat
sub
jle
cld
dec
clc
out
adc
or
mov
mov
pop
mov
rcr
jae
push
inc
sbb
push
lret
sbb
out
jns
pushf
cmp
push
xlat
faddl
pop
addl
sub
add
jmp
ret
xchg
sbb
xchg
pop
jmp
fwait
adc
popa
gs
xchg
fs
jge
pop
ud0
sbbl
ret
ret
lock
jmp
ret
or
sahf
xchg
bound
inc
cmp
cmpsb
inc
in
stos
mov
pop
xor
in
jle
int
pushf
mov
dec
xor
add
xchg
mov
loope
lods
sub
loop
lret
leave
jl
test
mov
jnp
data16
rcrb
ret
xchg
repnz
je
hlt
les
hlt
lock
bound
xorb
sar
bound
and
or
push
in
fisubs
and
or
mov
sbb
xchg
mov
loope
push
or
insl
call
leave
dec
cmp
and
rclb
xchg
rolb
les
push
mov
stc
inc
inc
rcll
sub
imull
pop
dec
ja
aaa
jno
ss
out
inc
push
dec
rorl
lods
ljmp
cwtl
popf
push
add
pop
mov
pop
xor
loop
mov
cs
call
xor
mov
clc
sbb
mov
cmc
fnstcw
ss
and
lret
sbb
loopne
mov
add
push
mov
cld
les
dec
sub
jo
mov
test
xchg
xor
jp
stos
lea
mov
mov
mov
push
jnp
imul
sbb
nop
cmovae
dec
addb
push
xchg
test
lcall
xchg
aas
hlt
andb
mov
int3
or
inc
lret
outsb
sahf
push
and
mov
cmp
xlat
or
sbb
movsb
inc
daa
and
jle
in
sahf
out
sbb
jno
int3
xor
pop
pop
and
pop
inc
mov
aaa
stc
imul
std
aad
jle
sti
subl
scas
notl
add
test
inc
mov
shll
ret
movsb
mov
loope
cld
jnp
inc
insl
adc
insl
xor
addr16
mov
fsubrl
ljmp
xchg
popf
sbb
sub
idivl
outsl
sub
mov
loope
add
into
je
push
std
es
or
fsubrs
enter
addr16
aam
inc
call
or
cltd
fwait
out
js
xchg
or
ljmp
cmpsb
shld
ljmp
stos
push
jbe
dec
loope
popf
fcoms
nop
adc
and
dec
testb
lret
idivl
lock
xchg
xor
in
dec
push
inc
mov
popf
add
clc
mov
inc
mov
sub
incl
fsubrs
in
cs
mov
pusha
mov
rolb
pop
sub
iret
pop
jmp
xchg
icebp
cmpsb
mov
pop
mov
adc
mov
mov
jmp
out
cmp
inc
sub
cmp
movsl
dec
cltd
or
dec
mov
xor
in
outsl
das
fucom
or
xor
jmp
pop
push
sub
cmp
add
lods
negl
int
adcl
lds
fcoml
mov
sub
outsb
shl
pop
adc
mov
jp
dec
jo
je
and
push
push
shrb
add
test
movsb
mov
add
push
ss
jl
or
xor
mov
and
add
jne
pop
mov
lods
or
xchg
mov
fsubrs
and
and
add
icebp
mov
daa
inc
add
push
sbb
test
xor
cwtl
in
cmp
call
es
add
mov
dec
leave
jns
add
sbb
pop
mov
jnp
pop
sub
mov
cli
movsb
mov
adc
sub
int
or
pop
stos
je
sbb
xor
fsubrl
xchg
scas
ret
cmp
test
in
enter
shrb
add
push
xor
xchg
gs
test
pop
xchg
es
add
jne
aam
mov
fs
cmp
fistps
cmp
mov
popf
inc
lcall
adc
push
mov
xchg
daa
sbb
sub
sti
ds
add
push
mov
jl
mov
jo
jbe
add
adc
testb
cmpsl
sub
cs
mov
or
xchg
xlat
sbb
mov
sub
bound
push
push
jae
jp
test
push
js
data16
jg
cmp
cld
mov
and
icebp
push
ret
xchg
push
adc
push
ljmp
adc
pushf
mov
fs
mov
xchg
scas
ljmp
ljmp
xor
jns
sti
call
fstl
ja
sbb
or
lret
mov
or
addr16
in
mov
pusha
cli
pop
inc
pop
sbb
outsb
cmpsl
dec
xor
sub
stc
popa
ds
dec
jo
inc
notl
out
les
jle
repz
aam
xchg
das
and
loop
dec
leave
mov
jnp
mov
cmp
pop
lds
popf
pop
into
add
aas
nop
sub
and
push
iret
or
dec
notb
add
sbb
and
mov
and
fbstp
test
imul
cwtl
mov
popa
push
fidivrl
out
inc
jmp
mov
enter
jno
cmp
cmp
mov
out
out
push
inc
sbb
inc
movsl
out
popl
jmp
sub
loop
or
xor
and
mov
cmp
clc
push
push
mov
fwait
inc
jg
jp
xlat
pop
int
roll
cmp
pop
sbb
xchg
sub
or
cmp
inc
scas
or
or
lods
jnp
adc
sbb
xchg
ljmp
les
jecxz
jl
icebp
repnz
xlat
insl
cmp
mov
aaa
dec
mov
jae
aaa
shll
jo
adcb
push
xchg
cmp
dec
or
aad
das
in
ret
dec
fdivrs
imul
sub
lods
mov
sbb
xchg
subb
xor
rol
inc
stos
out
sub
adc
repnz
lahf
and
push
mov
int
mov
pop
xchg
mov
sub
movsb
sbb
data16
mov
stos
or
loop
insl
lods
mov
dec
add
addr16
ja
lods
out
cli
pop
push
pop
sbb
or
xlat
call
out
outsb
outsb
sbb
hlt
inc
les
push
mov
inc
cmpsb
mov
subb
addr16
mov
dec
or
inc
xchg
mov
icebp
fs
aas
fmuls
movsb
add
xchg
jbe
imul
mov
inc
cli
cmp
mov
push
cwtl
sub
adc
ret
xchg
mov
jne
insb
repz
sbb
sti
jmp
add
in
shrl
movsb
jp
xlat
repnz
jnp
sub
sbb
in
adc
out
test
gs
jno
cmp
les
inc
jo
jne
ret
js
and
shl
shll
pop
jmp
addl
inc
and
xchg
leave
dec
popf
mov
adc
mov
and
sti
jnp
jns
cli
push
and
push
or
js
cmp
add
int
in
iret
adc
das
test
fists
push
mov
cmp
ds
push
mov
adc
sub
bound
inc
pushf
fcoms
sub
and
sbb
and
push
test
jae
push
pushf
test
jge
cs
std
xor
nop
mov
pop
dec
adc
stos
cltd
pop
sub
sub
xchg
shlb
pop
inc
out
pop
mov
sub
jge
adc
inc
std
mov
aas
dec
cs
icebp
xchg
cs
mov
fidivl
adc
mov
adc
movsb
sub
iret
popa
xlat
add
mov
shr
std
cli
pusha
iret
push
push
pop
arpl
xor
jae
mov
jne
cwtl
rorb
lahf
push
das
je
xchg
rcrl
movsl
fsub
imul
pop
scas
jb
addr16
insl
mov
out
ret
mov
jbe
ret
mov
jecxz
or
push
pop
arpl
es
or
add
pop
out
addb
xchg
xchg
lock
adc
mov
sahf
push
lock
pop
xor
ljmp
lea
rcrb
test
hlt
aam
pop
rclb
push
icebp
imul
pop
into
enter
sub
cmp
push
iret
push
rcll
test
xor
jns
mov
or
push
aas
lret
adc
lods
daa
sub
outsl
xchg
cmpsl
jae
stos
icebp
in
xchg
add
jae
ljmp
daa
scas
in
es
aas
pop
jg
sub
add
scas
mov
int3
push
arpl
lret
pop
cmc
into
repz
outsb
bound
push
adc
addr16
repz
mov
cmpsb
sbb
xor
cwtl
mov
jae
stc
test
pop
jbe
ss
shlb
js
mov
lea
jns
outsl
fcmovnbe
mov
ljmp
bound
pusha
jb
mov
mov
faddl
mov
call
js
xor
inc
iret
fdivl
dec
jp
fistpll
mov
aaa
es
push
xor
into
xchg
push
movl
push
mov
add
pusha
fildl
insb
les
jne
cmpsl
repnz
shll
xchg
jae
mov
push
ja
sbb
sbb
and
or
push
mov
pop
push
xchg
arpl
mov
xor
fs
in
push
stos
in
jns
push
imul
popf
enter
jmp
das
dec
or
out
shl
roll
sti
fucomi
jnp
test
cmp
in
xor
ja
mov
test
rcll
push
in
cmp
out
scas
inc
adcb
fs
pusha
scas
sub
fidivl
cwtl
cli
nop
lds
sub
imul
mov
mov
and
sub
inc
pusha
dec
mov
iret
push
inc
xor
cmpsb
scas
lret
aad
mov
aas
popf
sbb
push
mov
pushf
cmp
inc
pop
and
sub
adc
mov
inc
mov
movl
lahf
dec
mov
jns
icebp
sbb
int
xor
xor
sti
sub
loop
imul
cli
jne
int3
dec
inc
or
cmpsl
fcmovne
sbb
xchg
sub
add
mov
xchg
loope
mov
popf
cwtl
xchg
in
lods
inc
fisttpl
pop
pop
shll
xchg
in
mov
inc
int
push
mov
xchg
jnp
sub
dec
sti
pop
or
pop
add
or
scas
pop
clc
push
mov
out
or
in
push
mov
out
imul
iret
mov
and
sbb
xchg
and
xor
ret
sbbb
fimull
lods
xchg
ss
push
pop
popa
pop
das
sarb
sahf
pusha
mov
cmpsb
out
movsb
sbb
ds
and
dec
ds
icebp
out
mov
fimuls
gs
xor
jnp
pop
test
add
and
pop
inc
iret
inc
imul
dec
les
test
loopne
arpl
pop
roll
push
repnz
jb
xor
das
and
xchg
test
cli
adc
pop
orb
std
cmp
fisubs
loop
in
or
jo
and
lret
jbe
cwtl
movsl
popa
jbe
inc
scas
cmc
cli
gs
lret
dec
xchg
repnz
fidivrs
or
jmp
add
repnz
dec
fst
ret
in
repnz
push
loopne
mov
aas
loop
xchg
push
sub
lods
cmp
es
or
int
pop
aas
mov
xor
or
add
mov
hlt
lret
repnz
push
fcmovu
loope
xchg
rcll
stos
jge
out
stc
insb
cmp
scas
dec
cmp
add
pop
jo
inc
icebp
out
sub
repz
pop
popa
push
mov
loope
rcrl
lock
loope
clc
gs
into
add
xor
mov
dec
dec
ret
inc
lock
popa
in
cmp
xor
popa
cmp
test
pusha
out
jmp
mov
pushf
lds
cli
std
cli
pop
call
shll
ret
add
roll
mov
and
mov
jmp
and
test
xchg
ja
inc
mov
and
lods
xor
inc
mov
fbld
push
lret
mov
add
lahf
nop
xor
aam
cmp
clc
add
inc
rclb
xchg
loope
jp
adc
jl
imul
and
outsl
push
mov
sbb
sbb
jns
ja
outsb
stos
and
jns
and
mov
xchg
cmp
cmp
adc
out
out
cmp
cli
loop
adc
dec
fldcw
push
bound
in
cmp
cs
pusha
dec
insl
pop
shlb
mov
and
repnz
mov
negl
das
inc
scas
pop
mov
jp
scas
out
int3
data16
dec
aad
adc
jmp
xchg
gs
repnz
mul
popa
xchg
push
mov
rcll
mov
pop
mov
push
int3
or
lods
shl
adc
xchg
es
jmp
aaa
pushf
pusha
xor
adc
sti
mov
rorb
icebp
fisttpll
sbbb
sahf
xchg
incl
out
shlb
loop
outsb
bound
pop
fs
cs
cmp
call
pop
enter
push
add
add
cmpl
lods
imul
cltd
sbb
fnclex
lds
into
ds
and
pop
mov
adc
in
or
cmpsl
inc
xchg
jae
mov
fsubl
movsb
push
loop
cmp
jp
into
sub
sub
sbb
add
or
adc
xor
je
test
fdivr
pop
repnz
jmp
addr16
jb
cmp
call
ja
popa
push
in
adc
dec
pop
dec
sbb
mov
lcall
sub
cli
fcomps
sbb
mov
and
mov
sbb
jecxz
fdiv
shll
in
mov
outsl
imul
and
dec
outsl
xchg
fucom
adc
dec
mov
mov
ret
or
bound
and
in
outsb
push
adcl
ja
push
mov
push
ficoms
cmc
dec
sub
add
nop
mov
insl
in
mov
mov
cmp
enter
jmp
pushf
js
push
sbb
out
mov
data16
aaa
shl
lret
mov
push
lods
out
ss
into
mov
push
mov
imul
je
pmaxub
std
mov
mov
xchg
xor
xchg
and
and
or
mov
stos
faddl
xor
cmp
mov
push
shrb
push
std
and
jo
cmpsb
rolb
fists
pop
les
fiaddl
xchg
mov
pop
int3
push
mov
sub
scas
rcrl
inc
lahf
mov
cmp
jl
popf
pop
pop
enter
shrb
mov
int3
mov
lea
xchg
jno
iret
sub
rcrl
lock
ficoms
add
cmpsb
ss
cli
popf
dec
sub
pop
push
nop
je
lcall
and
jns
lds
xorb
jne
pop
ror
outsb
push
and
and
add
ljmp
stc
stos
push
fs
fadd
cmp
std
mov
es
pop
cmp
test
pop
adc
enter
pop
cld
sbb
cmp
cwtl
pushf
mov
mov
jno
ficompl
je
aaa
cmpsb
push
outsl
or
pop
jns
jb
loop
jae
mov
push
push
mov
inc
jae
clc
jg
scas
movsb
cmp
jne
mov
push
xchg
movsl
mov
dec
or
pop
inc
push
xor
enter
add
out
xorl
insl
enter
mov
push
mov
add
outsb
leave
arpl
jecxz
push
sbb
and
decl
sub
pop
sub
in
xor
or
dec
pop
jl
jge
inc
mov
add
fld
in
xor
std
jecxz
inc
jae
test
xchg
aas
add
xchg
stc
dec
rorl
or
ret
mov
movsl
rcll
inc
mov
dec
gs
jp
xor
les
xchg
and
dec
pop
aam
roll
inc
std
test
iret
cmpsb
leave
mov
out
push
jb
cmp
push
xor
or
add
gs
add
dec
ret
mov
cmp
aam
lahf
push
jle
cmpsl
out
mov
cld
dec
jno
jne
ja
pop
addb
fcompl
mov
popa
mov
iret
inc
lods
and
arpl
stos
and
pop
ss
add
push
andb
inc
sub
cmp
sub
sar
test
cwtl
jb
rol
and
testb
mov
mov
lahf
cli
dec
ss
mov
mov
jl
test
cmpsb
or
subb
adc
fdivl
iret
out
xor
mov
in
dec
outsb
mov
jge
shrb
xor
lret
je
xor
aad
jbe
push
jecxz
es
mov
cmpsb
xor
jno
shl
mov
cli
bound
or
sub
jns
sbb
cld
push
jns
pop
xor
int
add
addr16
and
mov
mov
incl
xchg
cmp
or
xchg
aad
addr16
sub
inc
jae
mov
sub
push
enter
push
inc
cmp
add
mov
mov
jle
xchg
sbb
push
sbb
xor
subl
add
pop
in
popa
inc
xor
mov
aaa
daa
inc
xor
pop
xchg
aam
faddp
xor
xchg
dec
fldenv
xor
cmpsl
mov
fsubl
push
mov
xor
out
push
popf
jl
and
testl
inc
insl
out
ficompl
sub
inc
sub
dec
jo
adc
mov
mov
cmpsb
jb
inc
lret
mov
pop
xor
jecxz
lahf
je
jo
adc
stc
jmp
push
cmp
ret
rcll
mov
leave
enter
ret
dec
xchg
lret
xchg
inc
cmp
mov
sub
cmp
mov
in
lods
enter
dec
push
xchg
nop
outsb
push
jecxz
popa
cmp
dec
sbb
cli
in
fwait
push
in
mov
cmp
sbb
and
incl
cmovnp
pop
sub
dec
mov
push
pop
mov
jae
lods
jle
mov
adc
shr
rcr
pop
push
cmp
icebp
fildl
sub
inc
adc
mov
jecxz
cmp
fmull
stos
push
adc
mov
sbb
dec
imul
rcl
hlt
int
sbb
add
das
jge
add
lock
mov
pop
sub
fcompl
rcr
push
inc
or
sti
mov
add
jmp
jl
xor
push
push
ss
and
jb
pop
out
fs
pop
or
xchg
xchg
dec
roll
cmp
pop
xlat
xlat
hlt
outsl
cmpsb
sbb
jno
cmp
lds
push
popf
dec
or
mov
fmuls
dec
sub
adc
jmp
and
stos
ret
add
xchg
aam
pop
sub
pusha
int
fs
lods
sbb
sub
mov
repz
cmp
repnz
mov
cli
scas
in
stc
dec
hlt
add
push
dec
inc
xor
inc
jb
adc
dec
adc
cmp
mov
ss
aaa
add
cltd
sub
ss
cmp
and
adc
adc
andl
add
and
popa
jb
xchg
pop
shr
and
mov
outsl
lret
fstps
movl
inc
iretw
in
mov
sbb
adc
inc
mov
loope
adc
mov
mov
sub
lea
mov
addl
xor
mov
adc
imul
rcrb
and
mov
add
inc
xchg
pop
ljmp
cmp
push
xchg
insb
mov
push
aaa
cmp
pop
repnz
xor
fs
aas
in
pop
dec
push
mov
fidivrs
out
icebp
cmp
add
and
flds
icebp
mov
push
xchg
add
xchg
add
lods
mov
das
sub
mov
or
jns
inc
repz
adc
sub
das
hlt
dec
sub
dec
pop
push
mov
jp
push
lock
enter
dec
imul
popf
dec
pop
sub
jb
sbb
cmpsb
mov
dec
jge
shl
loop
push
push
sub
imul
loope
rorl
dec
imul
pop
xchg
nop
mov
inc
fadds
sub
leave
lds
in
rorl
inc
cmp
outsl
pop
in
pop
cmp
xchg
xchg
jno
hlt
push
jb
sbb
out
iret
fcomp
sbb
jo
rcll
xor
shll
dec
stos
cmc
xor
arpl
push
shrl
and
cmpsb
setp
sub
in
xor
imul
arpl
in
mov
push
insl
cld
xor
and
das
mov
mov
push
inc
pop
mov
cmc
xrelease
and
cld
test
imul
and
rclb
or
imul
jb
xchg
pop
loope
inc
fwait
add
inc
sbb
pop
aam
jge
jle
xchg
jo
lahf
or
and
add
cmpsl
inc
push
cmp
subb
lods
dec
loop
pop
int3
xor
and
scas
pop
or
xor
mov
rep
jmp
xchg
and
cmp
mov
push
mov
xor
mov
cld
mov
lods
add
inc
push
jnp
cmp
aas
aaa
jmp
push
sahf
or
in
loopne
or
xor
std
clc
cmp
cmp
mov
outsl
or
push
jno
dec
iret
std
push
push
movsb
mov
sub
cmpsb
mov
pop
bound
mov
or
push
and
add
lds
mov
dec
cmp
lock
inc
cmp
imulb
lock
cmp
in
jb
sbb
push
mov
sbb
stos
add
fwait
mov
int
inc
test
fs
inc
mov
fnsave
out
daa
and
cmp
sub
jg
sahf
repz
mov
cmp
subl
sub
pusha
dec
sub
mov
add
int3
add
mov
add
mov
mov
or
push
cmp
daa
jmp
nop
xchg
xor
fidivrl
cmp
ret
inc
xor
roll
es
decb
imul
fisubl
sbb
adc
pop
into
data16
test
xchg
bound
jns
in
test
jmp
xchg
js
sub
push
cmpsb
cmpb
sbb
sbb
xchg
jle
mov
inc
lods
xor
jnp
mov
jg
pop
add
jge
test
inc
jl
sub
mov
int
mov
in
dec
mov
dec
xor
mov
add
mov
xchg
xchg
cwtl
in
add
aam
cmp
or
xor
sub
ja
shrl
rcll
popf
repz
repz
imul
jo
sub
jg
lcall
cwtl
jo
mov
mov
jg
sti
xchg
sbb
jmp
xchg
imul
mov
mov
das
mov
ljmp
jle
mov
std
mov
mov
into
xchg
in
xor
push
and
xchg
ds
shl
dec
xor
psubd
push
lock
cmovs
mov
daa
loop
aaa
rcrb
pop
arpl
popf
or
inc
fs
test
clc
stos
sahf
fiaddl
lock
cli
ficoms
inc
or
and
push
lods
bound
test
or
push
adc
stos
mov
arpl
sub
push
cltd
cmpsl
and
mov
jnp
sbb
int3
ds
pop
and
or
pop
xchg
dec
and
rorb
inc
fstps
sub
sub
and
and
jae
repz
push
xor
test
mov
fisubrs
aam
mov
jmp
jnp
sbb
jb
pop
sbb
jge
mov
jecxz
sti
jo
test
loop
push
cld
shlb
xor
push
cmpsb
hlt
mov
out
mov
or
push
shll
gs
fidivs
mov
sbb
jnp
out
jg
in
sbb
lahf
mov
add
pop
xchg
mov
mov
ficoml
ds
jge
cwtl
call
dec
or
inc
add
adc
push
cwtl
test
scas
xchg
shrl
adc
out
mov
add
cmp
dec
push
cs
cmpl
leave
imul
xchg
nop
adc
adc
push
jmp
jecxz
mov
repnz
int
cmpsb
xor
dec
adc
arpl
pop
xchg
mov
push
cmp
adc
fiadds
mov
das
push
sbb
add
sbbb
and
sbb
push
xchg
xor
insb
rcll
fiaddl
xchg
add
fucomi
into
mov
push
fisttpl
jl
sub
adc
cmp
iret
pop
pop
push
sbb
sbb
dec
test
popf
add
insb
adc
in
add
jmp
cli
lds
mov
call
or
pop
insb
mov
loope
push
pusha
jns
imul
rclb
adc
test
xor
mov
addr16
imul
outsl
adc
out
pop
or
movsb
sub
ss
aad
loopne
out
mov
jl
push
jne
sbb
mov
pop
popf
and
dec
push
shlb
xor
lods
lds
call
add
ds
lahf
or
popa
cmp
push
and
mov
scas
in
fisubrs
add
or
inc
sub
jno
or
xor
dec
mov
roll
inc
ret
mov
jno
pop
sub
sti
rcrb
cmp
into
mov
cmp
pop
cltd
dec
ds
cmp
pop
cli
orl
and
cltd
loop
mov
sbb
pop
loopne
shll
adc
fistpl
push
pushf
push
jae
sbb
jno
stos
sub
mov
xor
pop
xor
test
fldenv
das
or
push
inc
in
stc
mov
lods
rorb
ret
movsl
ficoms
dec
xchg
xor
pop
pop
mov
cld
lods
ss
scas
pop
add
pop
adc
fwait
add
jbe
jnp
xchg
lods
sub
fsubl
sbb
or
add
jg
push
xor
jecxz
xchg
repnz
repnz
sub
and
pop
cld
popa
out
xchg
mov
cltd
bound
ja
fildl
dec
cmp
dec
sub
mul
dec
push
inc
gs
fnsave
test
or
lds
sbb
adc
jno
dec
sub
dec
sbb
or
xchg
jle
xchg
pushf
pop
ret
stos
ret
adc
shl
sbb
xchg
ss
sbb
sub
mov
insb
xchg
lods
xor
call
cmc
xor
jge
push
lea
int
jmp
xor
mov
xorl
imul
push
xor
jg
jmp
lret
addr16
xchg
lahf
xchg
and
js
lcall
xor
dec
daa
lret
and
enter
jg
pop
adc
mov
rorb
addl
xchg
push
in
cmp
in
popf
push
cltd
sub
shrb
loope
out
fimull
in
pop
hlt
push
cmp
test
test
sub
scas
loope
mov
outsb
and
mov
pop
sbb
cmpl
cmp
adc
mov
fadds
mov
notl
loope
mov
cmp
arpl
pop
out
push
aam
xchg
and
popfw
jb
fnstcw
mov
mov
pop
xchg
sahf
push
cltd
icebp
mov
cld
clc
into
cld
lcall
jge
cs
pop
sub
fcompl
mov
inc
cmpsb
adc
lahf
nop
cmp
lock
push
icebp
xchg
jb
les
mov
jbe
ljmp
aam
lea
cmovns
imul
xchg
int
cmp
movsb
aad
std
mov
jmp
fcom
inc
and
roll
ret
xor
out
pop
mov
xchg
dec
ss
lods
mov
insb
rcr
es
push
jge
aad
and
push
cmp
out
jno
and
push
mov
xchg
in
mov
push
mov
sub
cmp
out
lods
hlt
adc
mov
bound
ret
pop
adcb
dec
sti
aad
push
arpl
jne
mov
and
test
push
cmpl
arpl
mov
xlat
mov
loop
cmp
push
rep
testl
mov
stc
xor
jl
pushf
sti
or
sbb
add
lahf
or
not
xchg
mov
inc
add
xchg
repnz
push
push
outsl
fimull
cmpsb
clts
jo
pop
imul
fscale
sub
pop
jo
xchg
xor
push
adc
inc
mov
pop
lods
aam
das
push
insl
mov
or
mov
loope
movsb
xchg
repnz
mov
or
push
xor
fwait
push
shlb
popf
mov
lret
cmp
xor
pop
and
mov
sub
outsl
shlb
stos
mov
js
imul
mov
cs
push
and
insb
sbb
insb
cmp
push
ret
js
scas
mov
loopne
imul
shl
adc
inc
adcb
stc
jle
out
push
xchg
xor
ljmp
call
inc
or
mov
and
add
mov
inc
cmp
imul
frndint
cmp
mov
test
shlb
aam
adc
pop
pop
jmp
repnz
test
cltd
dec
pusha
out
pop
jp
aas
inc
sar
push
sbb
lret
mov
mov
mov
scas
cltd
je
and
xchg
push
xlat
pop
aas
fisubrl
in
mov
insl
data16
jg
mov
cmp
push
addr16
dec
pusha
dec
outsb
scas
cmp
movsb
lea
or
mov
lahf
or
stc
movsl
leave
mov
imul
test
or
jl
and
adcb
jb
adc
adc
scas
lret
or
mov
ss
scas
fs
inc
push
add
mov
mov
repnz
roll
mov
into
dec
push
dec
jge
xchg
or
inc
out
fcomps
or
inc
leave
rclb
pusha
pop
fcmovnu
xor
out
xor
cmp
outsb
add
int
mov
cmp
inc
dec
dec
mov
rcl
adc
mov
idivl
jl
fstpl
push
add
adc
push
push
jo
jo
fstl
test
pop
fldln2
sbb
ret
fucompp
adc
je
cmp
add
lret
mov
sub
mov
outsl
or
mov
push
pusha
iret
mov
dec
subl
mov
aaa
aam
outsl
les
int3
push
sbb
sub
push
mov
imul
dec
xchg
out
mov
data16
and
sub
ficoms
push
jmp
fwait
cmp
xor
in
jae
icebp
std
sub
jmp
xlat
jns
inc
outsb
push
mov
mov
or
je
fucomip
or
inc
sub
aaa
popa
lcall
jp,pn
cmp
inc
jo
cmc
jbe
rorl
sbb
jmp
inc
mov
inc
sarl
xor
or
movsl
push
lea
xchg
ss
popf
shlb
jae
pop
jl
jno
scas
enter
es
sbb
or
jns
dec
fiadds
int3
or
fcmovnbe
pop
or
cmpsl
cmc
inc
inc
xchg
push
inc
xor
pop
mov
cmp
sbb
sbb
cli
data16
lock
in
dec
cltd
dec
adc
enter
test
scas
mov
dec
push
inc
sbb
push
xchg
adc
clc
mov
jns
push
js
lret
mov
inc
adc
jg
andl
les
adc
pop
addr16
xor
or
cmp
fildl
lock
lods
xchg
inc
adc
mov
inc
mov
mov
fwait
pop
adc
out
mov
call
lcall
or
leave
pop
cmp
jl
lods
call
call
lods
lahf
dec
leave
ja
mov
mov
mov
sub
test
pop
mov
xchg
push
icebp
xchg
xchg
cmp
push
xchg
das
aas
mov
jge
leave
loope
and
fdivrl
jl
cmpl
xor
xlat
mov
adc
out
or
jno
sti
mov
pop
ret
cmpsl
sbb
cmp
out
fldl
dec
test
adc
fisttpl
add
xchg
dec
xchg
mov
arpl
mov
addr16
inc
mov
mov
repz
sub
push
pop
out
out
icebp
inc
lods
mov
cld
inc
jmp
repnz
sbb
or
xor
dec
mov
mov
insb
pop
daa
dec
in
and
lock
das
cmp
or
sbb
subb
pop
and
fcmovnbe
pop
mov
jp
icebp
push
nop
mov
or
mov
cs
in
mov
xchg
das
ret
xchg
push
dec
adc
push
push
cli
iret
enter
adc
loopne
cmp
xor
pop
mov
lret
fsts
mov
fwait
cmpsb
cmpsl
shrl
jns
mov
leave
daa
jmp
out
pop
sub
shll
xor
push
and
dec
jge
mov
cltd
fwait
inc
push
mov
xchg
test
xchg
adcb
cmp
fimull
dec
clc
cmp
push
stos
fwait
add
pop
aad
xchg
flds
fldl
mov
inc
sub
sbb
int
push
stos
sti
jae
pusha
xchg
aaa
roll
mov
fiaddl
cld
shl
in
lret
xchg
test
mov
mov
cs
jne
out
dec
jg
dec
out
sbb
iret
sub
add
cmp
popa
shll
es
add
ret
mov
add
ss
mov
xchg
xor
scas
jnp
loope
cmp
in
js
mov
push
rorl
sbb
aaa
xchg
push
incl
comiss
mov
jo
push
popl
add
mov
fwait
pop
jns
clc
insb
call
jno
loope
dec
dec
pop
cmp
imul
lcall
adc
xor
pop
sbb
adc
sub
mov
and
mov
lods
popa
adc
pop
sub
inc
cmp
test
fisubl
mov
adc
cs
movsb
adc
fldl
mov
push
inc
ss
and
cs
or
adc
and
add
test
sahf
adc
or
or
jb
xor
jae
iret
call
sub
xor
mov
mov
push
ljmp
ljmp
mov
lahf
xlat
mov
inc
fcmovb
dec
shrl
rorb
arpl
imulb
lret
xor
loop
mov
sbb
test
jo
aaa
lahf
xchg
and
inc
mov
faddl
lret
sarl
push
subb
jp
xchg
sub
mov
mov
xor
or
jbe
dec
xchg
add
ret
push
ljmp
rolb
aaa
bound
jecxz
data16
std
insb
sub
push
lahf
jb
lock
fdivr
sbbb
dec
out
dec
test
cs
jecxz
ja
cmovb
pop
or
jge
sub
nop
sbb
mov
mov
dec
fcompl
cwtl
scas
inc
mov
xlat
jmp
sbb
fdivrs
test
lcall
mov
mov
rorb
xor
push
ja
xchg
das
jno
loope
mov
jp
push
push
xor
les
subb
test
inc
movsb
mov
jge
int3
jmp
mov
das
fwait
mov
jbe
notl
cmp
in
cld
insl
mov
mov
dec
jae
mov
lods
xchg
or
cmp
cmp
das
lods
cmp
inc
insl
inc
mul
inc
jae
call
and
imul
inc
xchg
sbb
xor
add
out
push
cmp
les
sub
dec
cmp
sahf
push
push
jne
adc
pop
pusha
int3
mov
stos
add
push
rcrl
add
ljmp
mov
mov
sub
iret
or
or
lret
adc
push
cmp
pusha
xchg
jecxz
jp
pop
leave
or
fstps
sbb
cmp
sbb
hlt
xor
cmp
and
adc
inc
cmpb
fwait
adc
into
xchg
dec
mov
dec
mov
stos
adc
sbb
out
test
adc
xchg
in
jecxz
jge
push
dec
loop
ret
cmpsl
inc
in
and
inc
sbb
pusha
ds
jmp
fwait
sub
in
not
add
out
mov
xor
push
mov
jo
mov
loope
jecxz
sbb
out
shlb
and
pop
out
out
sub
insb
pop
jl
push
sub
aaa
std
add
les
sbb
addl
test
or
xor
push
dec
push
movsb
and
or
push
call
mov
lds
andb
or
orl
pop
xlat
sbb
adc
xor
cli
popa
add
xchg
push
cli
xchg
or
sub
fsubs
adc
jmp
xchg
data16
jmp
or
mov
int3
clc
lcall
enter
sub
inc
ficoms
push
cwtl
mov
nop
jne
sub
push
sbb
jl
mov
jp
push
xchg
je
add
repz
or
dec
or
iret
or
pop
lahf
mov
je
imul
pop
sub
mov
inc
mov
push
inc
lret
and
fildl
xchg
out
mov
cmpsb
push
push
pop
sub
and
jecxz
inc
pushf
xchg
ret
inc
adc
sahf
and
push
pop
fwait
and
dec
mov
push
cltd
call
and
int3
rorb
cmpsb
fwait
dec
xchg
inc
sbb
lcall
fldl
push
mov
jmp
fstpl
int3
pop
mov
lahf
pusha
aaa
jb
sbb
insl
sbb
mov
in
add
mov
fs
out
ret
rorb
adc
jb
sbb
loope
outsl
addr16
and
add
cmp
push
outsb
out
cmc
sbb
outsb
cmp
mov
icebp
inc
ror
in
rcrl
mov
push
shr
mov
ret
jbe
sahf
xor
cmp
cmp
or
xchg
lods
pusha
into
imul
push
lock
insb
cmc
mov
nop
rcrl
ficoms
xchg
mov
push
xor
xor
cmpsb
jne
lods
xchg
push
cmp
fdivs
pop
icebp
cmp
lods
imul
push
loop
scas
sub
sar
aas
ljmp
dec
xor
jge
xchg
mov
xchg
jns
inc
sbb
mov
fisubrl
push
lods
lea
sub
jp,pt
push
out
popa
subl
dec
fildl
pop
pop
adc
or
subps
add
andl
mov
and
push
xchg
and
cltd
jp
xor
sub
add
xor
dec
push
sahf
icebp
shl
mov
pop
pop
test
orl
arpl
in
or
sub
imulb
push
jecxz
pop
in
xor
dec
sarl
pop
or
pop
in
pop
cs
lods
push
daa
popf
pop
and
in
pop
jbe
out
in
dec
inc
xchg
icebp
mov
xchg
cmp
mov
sub
addr16
fdivr
or
mov
outsb
jp
pop
imul
insl
mov
popa
cmp
xor
sub
inc
mov
push
cltd
hlt
mov
or
add
test
popa
mov
lock
lock
mov
int
ljmp
out
xchg
je
xchg
jbe
rcll
jl
or
lods
out
mov
mov
push
dec
sub
sarb
pop
lcall
mov
fs
mov
jle
dec
popf
pop
mov
push
push
movsb
sub
ss
fst
xchg
sub
dec
stos
lods
daa
into
lods
adc
fsts
xor
mov
xchg
addr16
outsb
mov
push
mov
das
pusha
sbb
xchg
jne
pop
pop
and
jae
sbb
int3
int
xor
cli
mov
clc
addr16
clc
sarb
sub
mov
adc
fidivs
aas
in
test
xchg
adc
js
pop
lds
pop
xchg
sub
int3
add
cs
or
sbb
out
sub
lret
lods
cmpsb
mov
pop
jae
stos
loope
aaa
mov
mov
push
imul
cld
or
loopne
repnz
aam
cld
jbe
insl
scas
ljmp
adc
cmp
in
aaa
jl
pop
xchg
stc
add
into
cli
mov
inc
outsl
fidivs
ret
cmpsb
cmp
cmp
inc
xchg
adc
inc
sub
out
out
in
mov
fsubrl
aad
test
outsl
xchg
xchg
jns
push
mov
xor
xchg
inc
push
push
jns
push
mov
nop
popa
inc
out
cmp
mov
inc
imul
pop
mov
lock
inc
testb
outsb
jmp
daa
pop
xchg
jp
aaa
push
fmul
rcrl
ret
jne
xchg
loope
out
push
leave
push
out
mov
inc
aaa
add
addr16
sbb
xor
in
icebp
lcall
mov
mov
popa
nop
add
clc
aas
mov
or
or
mov
sub
jmp
incb
xchg
sbb
mov
mov
cmp
ds
sbb
lret
ret
pop
int3
jno
pusha
xlat
push
xchg
mov
stos
lds
in
lods
mov
push
in
adc
mov
jo,pn
pop
jle
mov
mov
push
outsl
add
push
pop
xor
lea
inc
in
js
inc
subb
push
and
lcall
pop
cmc
pop
mov
xchg
mov
aas
jecxz
fisubl
jb
in
imul
outsb
pop
mov
cmp
pop
sbb
mov
and
in
sbb
pusha
mov
test
and
jbe
cmp
or
jno
insl
cmpsb
cltd
cmp
jnp
fstpl
ret
jns
cmp
push
in
outsl
insb
cmpsl
hlt
mov
cmp
aad
in
dec
dec
xor
aam
inc
xlat
xchg
mov
xor
dec
push
inc
push
jg
in
mov
sbb
pop
mov
mov
add
mov
shll
pop
jmp
xor
mov
add
arpl
fwait
push
jle
movl
and
push
pushfw
mov
popa
adc
fwait
add
cltd
xor
add
idivb
addr16
call
insb
pop
mov
push
adc
push
mov
mov
and
add
sub
es
inc
out
int3
lods
outsl
mov
cmp
mov
dec
mov
and
es
adc
and
dec
repz
or
cmp
jbe
in
or
inc
mov
adcl
adc
cmp
sti
das
dec
popf
and
aaa
shll
cmovnp
movsb
loope
add
scas
adc
sbb
mov
or
mov
sbb
or
jmp
xchg
lcall
and
mov
xchg
movsb
or
xor
inc
adc
or
repnz
and
roll
pop
fstpt
getsec
pop
mov
sub
mov
loop
mov
nop
add
mov
push
ss
nop
fisubrl
lahf
negb
jmp
lods
mov
lea
movsl
mov
test
sbb
dec
mov
mov
stc
cli
mov
or
adc
xchg
leave
jns
aam
sti
inc
call
and
fyl2x
das
jl
fldenv
stos
aas
and
pop
std
jp
jmp
xchg
mov
inc
lods
cwtl
movsl
and
lret
mov
add
xor
insb
cmp
jecxz
es
sbb
test
movsl
ja
mov
setg
jnp
inc
cmpsl
adc
into
mov
xor
jbe
stos
add
xor
out
add
push
pop
mov
sub
fs
imul
xchg
dec
mov
push
iret
loop
inc
ds
outsb
inc
int
add
and
mov
inc
call
pop
in
out
std
jecxz
and
mov
mov
xor
mov
cld
or
ds
lods
sbbb
xchg
loopne
ja
add
or
mov
insb
fsubs
jno
jecxz
mov
popa
movb
lret
popf
sarb
into
sbb
mov
lret
arpl
gs
mov
roll
cmpsb
lret
cmp
leave
adc
imull
out
insl
das
push
push
mov
sub
jp
sbb
xchg
jno
sub
pusha
push
loope,pt
aas
insl
adc
stc
mov
lods
or
shrb
push
mov
sbb
mov
sbb
jecxz
cli
aaa
fdivrl
mov
sub
decl
xor
dec
push
and
loopne
push
and
loop
mov
cmp
mov
int3
in
dec
in
int
mov
sbb
xchg
pmullw
sub
adc
mov
sub
fwait
icebp
mov
jl
fbstp
cmpsb
sbb
sbb
imul
jbe
enter
mov
ljmp
mov
xor
adc
dec
pushf
es
fisttpl
pop
push
in
popa
dec
push
lret
adc
pop
xor
aad
xor
sbb
shlb
mov
lret
push
lods
jge
or
test
scas
add
repnz
out
enter
xchg
dec
cmp
arpl
mov
or
aam
stc
cli
jb
out
mov
sub
hlt
sub
pusha
aam
dec
leave
mov
or
ret
movsl
ja
in
pop
js
cld
movsb
dec
dec
iret
aad
pop
push
adc
push
ds
ret
pushf
mov
testl
pop
mov
or
outsb
jb
cmc
sub
clc
pop
xchg
add
test
icebp
jo
je
push
jns
sub
es
test
cwtl
popf
pop
add
pop
and
repz
fstps
jbe
mov
aaa
pop
pop
mov
xor
push
lret
jae
xchg
jae
outsb
cwtl
aaa
jmp
and
push
cmp
iret
adc
into
cmp
push
mov
sub
in
lea
out
sbb
xchg
add
aas
mov
or
cmp
gs
push
lods
scas
pop
xor
push
or
aas
mov
inc
jl
mov
fidivrs
sub
cli
test
stos
mov
xchg
mov
fistpll
out
nop
sbb
mov
mov
jmp
dec
jecxz
test
mov
sbb
push
jb
dec
mov
cld
or
cmc
pop
cwtl
negl
cli
test
mov
jns
mov
shr
inc
rclb
xor
mov
xchg
add
add
ret
fs
mov
imul
test
sub
add
push
arpl
cltd
out
loop
imul
aaa
ss
out
sti
js
enter
and
mov
out
js
xor
inc
addb
cmc
aas
orl
pop
inc
lods
in
xchg
mov
dec
pop
push
jns
lock
jo
fwait
dec
pushf
nop
aad
pop
ret
data16
lcall
faddp
adc
cmp
add
inc
jmp
cltd
movups
movb
pop
jno
cmp
out
adc
movsb
push
add
inc
and
pusha
jno
sub
xlat
dec
pop
inc
subl
jecxz
aaa
lock
imul
sarl
sbb
shl
adc
inc
pop
mov
inc
cs
stc
loopne
jmp
bound
imul
movsb
decl
sbb
pushf
or
mov
into
test
dec
dec
pop
xor
sub
ja
lods
mov
fcmovne
stos
mov
mov
adc
mov
dec
les
pop
out
in
dec
jmp
ja
outsb
jp
stos
arpl
mov
pusha
sahf
testl
pop
fwait
xchg
sbb
push
adc
xor
loope
mov
push
sti
icebp
mov
lock
or
rcrl
xor
dec
cmc
iret
add
push
mov
lds
shll
pop
call
aam
dec
jmp
push
push
int
mov
and
mov
inc
mov
in
iret
loope
ja
adc
and
inc
mov
xor
pop
out
pop
fwait
mov
hlt
in
fiaddl
mov
mov
jmp
repnz
cmp
xor
icebp
push
inc
adc
test
lea
int
repz
and
fldlg2
xlat
fwait
cwtl
and
ja
subl
hlt
jle
dec
scas
jnp
or
int
js
mov
cwtl
sbb
inc
sbb
adc
sub
xchg
pop
jp
push
cmc
jl
arpl
and
adc
pshufw
mov
xchg
sbb
aam
add
je
rcll
xor
lea
lea
mov
ljmp
xchg
mov
adc
lds
push
ljmp
mov
out
sub
insl
stos
push
ss
sti
adc
push
gs
jae
js
scas
out
iret
cmp
imul
fcomip
rcll
ljmp
inc
insb
les
push
out
xor
adc
subb
xor
scas
mov
shll
sti
pop
xchg
mov
fs
mov
pop
test
insl
xchg
icebp
addr16
xor
and
scas
in
xor
sub
or
out
xchg
or
stos
in
sbb
and
shll
pop
nop
push
mov
nop
jl
inc
add
add
repnz
mov
mov
out
out
cmp
ljmp
out
lret
pop
and
mov
lahf
in
or
or
int3
mov
and
int3
xor
push
lret
sbb
sub
dec
xchg
and
jns
dec
or
ret
mov
add
dec
lret
mov
sbbl
out
pusha
shll
dec
ja
jl
pop
lret
cmpsb
shrl
out
cmp
and
rol
fsubl
pop
es
cmp
xor
and
jae
pop
jno
jl
cld
pop
cmc
xchg
xchg
pushf
adc
rcll
gs
ja
mov
das
mov
mov
mov
add
jbe
or
pop
shrl
aaa
pop
sbb
cmpl
xlat
outsl
or
ljmp
pop
cmp
inc
cltd
cs
test
sub
inc
jnp
lcall
jmp
nop
jae
cmp
out
ret
cli
cmpsl
cld
sbb
fistpll
ljmp
inc
cmpb
inc
cmp
mov
scas
push
pop
xor
inc
lahf
xchg
jne
cmc
pop
pop
push
sbb
jno
stos
adc
ds
mov
cmp
cmpl
test
sbb
popf
mov
loope
inc
dec
sub
sub
fdivl
fstps
daa
rorl
mov
repz
test
push
jbe
xor
jb
mov
sbb
add
daa
sub
rol
inc
imul
mov
fidivl
icebp
fwait
jge
test
fsubr
nop
ljmp
cmp
in
fmuls
add
mov
mov
or
cmpsl
jns
mov
loopne
cmp
hlt
pop
fsub
mov
sub
lret
mov
mov
shl
addr16
or
incb
cmp
and
inc
xor
mov
gs
data16
jb
out
test
rcrl
pop
push
mov
cmp
shrb
mov
out
imul
pop
subb
pop
mov
add
and
sub
test
insl
pop
mov
inc
jge
fbstp
popa
rorl
xor
lock
sahf
bswap
fs
xchg
dec
mov
addl
cmpl
mov
dec
cltd
push
push
ret
jno
xor
jp
pop
cmp
xor
push
adc
jg
or
xor
in
push
mov
adc
addb
adc
inc
pop
inc
sub
out
test
call
jae
ret
cmpl
aaa
adcb
mov
loopne
sbb
xor
inc
mov
jo
inc
xor
xor
pop
pop
icebp
outsb
adc
mov
fs
pop
adcl
mov
sub
and
setl
rolb
loopne
inc
popf
fisubl
jns
cmc
sbbb
rclb
movsl
xor
mov
xor
movsl
not
jns
mov
sbb
xorl
fmuls
sub
cmp
mov
jns
jg
push
je
pop
lds
lds
mov
lds
dec
dec
xlat
mov
lcall
cmp
xchg
mov
mov
pop
std
jae
mov
dec
fwait
or
pop
xchg
jge
jnp
daa
fidivrl
or
mov
push
mov
lock
rcll
jbe
push
or
js
push
and
insl
inc
fwait
cmp
aaa
adc
les
xor
and
dec
iret
mov
mov
shl
addl
ja
lcall
xor
sub
int3
addr16
dec
mov
adc
imul
or
and
pop
jnp
jp
sbb
jp
or
cmp
jb
out
pop
cmp
aas
stos
sub
cmp
mov
mov
push
or
movsb
jle
loop
dec
jp
pop
stos
data16
out
int3
xchg
xor
inc
mov
aad
sbb
cwtl
je
and
xchg
cmp
pop
test
push
xchg
mov
mov
sti
cmp
push
push
and
dec
movsb
push
les
cmp
push
cmpsb
lret
push
in
or
test
fidivl
jno
cmp
jae
cltd
push
xor
out
mov
cmp
push
imul
leave
jne
sub
xchg
addr16
int
incl
stos
inc
cmpsb
mov
ror
adc
jns
cwtl
mov
push
dec
std
add
orl
scas
pop
sbb
mov
jmp
movsb
sub
loope
bound
aas
add
roll
xor
std
or
shrl
push
cltd
in
shll
fadd
or
rorl
jo
push
and
sbb
cmc
mov
dec
add
mov
sbb
mov
inc
pop
mov
push
ss
adc
mov
outsb
aam
xchg
jge
negl
add
arpl
jg
mov
rcr
pop
in
scas
gs
dec
dec
xor
mov
gs
mov
mov
sbb
mov
negb
fidivrl
adc
sbb
scas
jp
add
xor
push
mov
fidivrl
pop
xor
aad
pop
dec
sbb
jp
gs
mov
add
stos
aas
sti
addr16
mov
inc
lea
cwtl
push
sbb
cld
push
pop
inc
addr16
push
inc
lcall
push
test
mov
sarl
xor
por
pop
outsl
xlat
data16
scas
rclb
inc
and
adc
xchg
not
popf
adc
mov
dec
lret
incl
shlb
arpl
lods
fcmovne
leave
add
sbb
mov
std
stos
sub
call
and
pusha
iret
sbb
jne
int
nop
cmp
mov
mov
imul
xchg
push
inc
mov
dec
jle
xor
inc
sub
mov
test
lods
push
or
aas
sub
aam
js
or
lret
pop
test
sub
pop
adcb
mov
jns
and
cwtl
mov
jae
cs
and
mov
mov
sub
cmc
push
out
mov
scas
nop
add
in
xor
mov
call
notb
je
jo
orl
mov
lods
repz
cmpsl
out
jae
jne
and
pop
aaa
sub
cmpsl
hlt
sbb
sahf
aaa
inc
jno
test
call
into
sbb
sti
gs
ja
mov
mov
push
pop
dec
xchg
je
mov
mov
test
xchg
daa
or
lcall
adc
fnsave
push
in
xor
mov
sub
fsincos
xchg
push
fsubl
jne
push
or
fs
orl
mov
mov
jae
pop
loope
insl
sbb
sti
dec
daa
cwtl
lret
xchg
lahf
inc
and
psrld
push
push
inc
or
out
and
lahf
leave
mov
stos
cmp
sarl
mov
adc
repz
clc
ret
mov
jae
jle
pushf
jg
sbb
gs
pop
push
or
iret
rcrl
push
ljmp
and
mov
or
stc
popa
dec
clc
xchg
or
mov
mov
dec
lea
mov
push
mov
rcr
jl
inc
sbb
cld
or
pop
scas
inc
int
mov
cmp
add
test
mov
mov
and
xor
push
push
sbb
pop
sub
in
fsubs
notb
loopne
pop
sub
test
xchg
and
js
out
xchg
das
loope
push
outsl
xchg
mov
mov
stc
push
mov
cwtl
and
xor
idivl
lods
cmc
icebp
dec
pop
sbb
das
and
or
mov
ret
aam
jno
fimull
out
and
sbb
fmull
add
cmc
and
roll
mov
scas
mov
loope
dec
adc
push
and
add
mov
add
into
or
das
andl
hlt
insb
inc
into
mov
pop
sub
out
or
mov
push
loop
call
cmpsl
loopne
adc
mov
add
ljmp
and
mov
mov
lahf
mov
pop
hlt
add
push
push
movsb
push
add
cmp
add
pushf
xchg
sbb
xchg
jno
cmc
cmpsl
out
jmp
scas
mov
inc
inc
fcmovbe
push
icebp
xlat
sahf
flds
adc
movsl
xor
push
ret
push
andb
add
lock
cmp
push
inc
mov
or
adc
das
repz
jle
or
mov
xor
inc
pop
mov
dec
xchg
lret
stos
ljmp
jmp
inc
fwait
orb
mov
stc
pushf
ja
int3
pop
cmp
push
or
inc
and
xchg
cmp
outsb
and
adc
ja
cmp
add
jnp
xor
fs
lahf
or
push
jno
dec
fwait
enter
fnstenv
shl
lret
jne
inc
repz
sbb
loop
xchg
mov
add
imul
add
out
sbb
jb
sbb
outsb
push
jo
fisttps
out
je
inc
or
in
pushf
or
pushf
jl
xor
lods
cmpsl
stos
arpl
stc
and
jns
nop
popa
jno
popf
jbe
push
add
divb
mov
cmp
movsb
sti
mov
pop
into
out
xor
cmp
adc
cmc
sbb
sub
mov
arpl
jnp
inc
adc
pusha
push
ds
stc
mov
adc
adc
jl
xor
int3
pop
cwtl
in
cmp
mov
sbb
insl
xchg
enter
cmpsb
fwait
data16
push
pop
cld
dec
mov
xchg
mov
shl
push
lods
add
imul
popf
aad
xor
popf
cmp
dec
stc
lahf
fcomp
dec
loop
and
xchg
shll
dec
add
cltd
sub
or
out
add
cmpsb
psrlq
adc
sub
xor
jg
and
xchg
pop
mov
xchg
insb
xor
insb
rep
and
call
rclb
xor
shlb
test
sahf
aaa
inc
outsb
or
les
bound
imul
int
pop
icebp
dec
test
lret
out
imul
push
and
mov
imulb
clc
cld
adc
ds
jae
xor
inc
cs
test
push
mov
pusha
cmc
mov
mov
sbb
lock
pop
sub
sbbb
out
in
out
or
jno
cmp
iret
and
imul
out
aaa
addr16
and
lret
fisubrl
std
sbb
mov
js
daa
or
mov
jecxz
xchg
mov
sbbl
jb
out
fwait
sub
sbb
cld
cmp
cld
mov
popa
mov
or
call
sbb
into
mov
repnz
sbb
add
cli
mov
dec
or
adc
pop
stos
push
and
mov
es
sub
jmp
dec
icebp
stos
hlt
andl
adc
lock
in
nop
mov
adc
lods
repnz
pop
pop
adc
insl
push
clc
mov
aad
pop
and
cmp
idiv
jp
xchg
jb
mov
neg
dec
push
mov
dec
dec
and
inc
lcall
dec
sub
pop
and
negb
cmp
jecxz
std
enter
pop
enter
negl
fldt
dec
ret
jg
mov
jb
mov
sub
xor
adc
loop
movsb
aaa
mov
dec
pop
adc
pop
mov
push
add
pop
lcall
mov
adc
cmc
fidivl
test
pop
sub
ds
fidivs
icebp
ret
enter
iret
loope
test
leave
adc
dec
dec
inc
xchg
mov
xor
push
icebp
in
test
jmp
xor
loop
cwtl
pop
push
pop
movsl
fs
jne
mov
adc
adc
cwtl
pop
add
aad
cmp
shll
add
xchg
sbb
loop
subb
mov
imul
lods
push
sub
or
or
pop
movsb
into
pop
out
scas
or
and
cmp
and
loope
mov
push
xchg
loopne
out
jp
pop
jns
fsubrl
add
mov
pop
or
jg
int3
mov
nop
push
and
cmpsb
mov
sbb
xor
pop
xor
adc
ljmp
jp
cmp
mov
lea
sub
push
add
repnz
movsb
notl
lahf
fnstsw
xor
mov
mov
pop
outsl
lock
into
rcll
jb
pop
mov
fdivrl
push
mov
fidivrs
mov
adc
fstpt
mov
add
ret
clc
adc
fisubrs
push
loop
call
int3
rolb
mov
cltd
push
cli
testb
or
sbb
cwtl
adc
xor
xchg
push
out
and
inc
loopne
inc
pop
mov
xchg
or
cwtl
fs
shrb
or
test
push
insl
jae
mov
pop
outsb
jae
and
push
rsqrtps
int3
mov
jns
scas
cmc
je
mov
dec
pop
mov
mov
dec
adc
test
jno
mov
stos
jb
sub
insl
sbb
jg
shr
lock
sahf
pop
sub
lret
test
mov
and
xchg
popf
or
mov
movsb
mov
or
xlat
xchg
jmp
ffreep
inc
ret
flds
mov
mov
adc
and
mov
pop
int3
ljmp
cmc
das
stos
sub
lret
cmpsl
pop
scas
cwtl
sbb
js
scas
pop
cmpsb
ljmp
dec
repnz
fs
or
cmp
test
pop
cvttps2pi
dec
test
xchg
pop
xchg
lods
pop
inc
xchg
sub
shll
faddp
xor
bound
hlt
sbb
data16
sbb
adc
jne
pop
iret
or
or
inc
stos
mov
push
or
add
stos
pushf
or
sub
std
movsb
push
or
inc
push
mov
lds
call
xor
lock
add
rorb
mov
jnp
sub
sbb
popf
xor
mov
sub
mov
push
adc
pop
dec
fwait
test
out
and
adc
add
jb
xchg
lcall
pop
addr16
test
cmp
int
pop
sbb
cmp
sub
xchg
lahf
xchg
adc
dec
ret
adc
pushf
mov
mov
out
in
jge
jecxz
push
jo
outsb
mov
aaa
stc
fcompl
inc
jb
xchg
and
test
enter
mov
test
mov
pop
lea
sti
xor
andb
and
cli
gs
hlt
orl
fmuls
push
scas
sbb
addr16
adc
or
xor
shrb
inc
orl
and
pop
filds
mov
sbb
mov
jmp
dec
movsl
sbb
nop
mov
mov
ss
stc
iret
shll
jmp
leave
push
das
ds
or
mov
cmp
cmp
push
imul
fcomp
jl
mov
imul
push
mov
je
fistps
mov
bound
imul
dec
jb
pop
sahf
cmpsb
or
xor
mulb
shrb
mov
mov
ret
fmuls
lret
cmpsl
inc
rep
inc
add
lret
dec
jecxz
sahf
lret
jl
mov
add
rorl
xor
test
test
mov
xchg
adc
movsl
enter
cmpsb
imul
cmpsl
cld
mov
adc
aas
or
ljmp
mov
pop
out
imul
ret
loop
orl
adc
shl
add
and
jo
aas
dec
popa
push
and
dec
adc
cmpsl
in
push
out
add
ret
jb
or
test
add
andb
push
xchg
cmp
jmp
lahf
xlat
push
data16
movsl
jecxz
pop
movsl
movsb
mov
cmpsb
out
pop
test
js
xchg
and
call
xor
out
dec
ljmp
cmp
in
add
cmp
mov
dec
nop
imul
pushf
or
fisttpll
dec
mov
lock
jecxz
pop
sahf
outsl
ror
fmuls
insl
xor
pop
ret
dec
dec
xor
xor
je
int
rorl
movl
and
leave
iret
sub
in
mov
in
outsl
pop
idivb
imul
insb
jg
gs
jp
sbb
test
jp
enter
adc
daa
sub
outsb
sti
cltd
sub
xor
mov
xor
fs
ss
or
es
xor
lret
lcall
out
sub
mov
xor
icebp
mov
loope
ljmp
push
xor
and
lret
cmpsl
xor
mov
les
jns
push
lcall
das
mov
adc
cwtl
push
xlat
xchg
in
xchg
dec
mov
cmc
movsl
xchg
cmp
inc
aad
sbb
fimuls
js
mov
repnz
mov
aas
jae
sub
push
mov
add
add
sbb
popl
mov
jmp
nop
fcmove
xchg
pop
lods
ja
ds
mov
add
loopne
call
imulb
add
xchg
cmp
and
adc
out
push
xchg
adc
cs
movsb
rol
pop
out
call
aad
and
in
rcrl
and
xchg
or
push
dec
mov
pop
mov
jne
and
in
push
or
aam
push
push
push
repnz
lods
adc
and
cmpsb
int3
mov
pop
cmp
pusha
add
jmp
into
jno
jae
js
sbb
jb
push
arpl
jg
je
inc
idivl
mov
rclb
inc
adc
pusha
je
cmp
das
push
cmpsl
daa
leave
xor
xor
insb
xchg
mov
ds
loop
insl
iret
subl
jno
bound
in
mov
loope
mov
notb
push
mov
sub
orb
pop
xorb
push
xor
xchg
icebp
xchg
cli
rcrl
fisubl
popf
mov
xor
fs
ss
test
dec
pop
pop
cmpb
and
popa
sub
fnstsw
lret
movsb
xlat
fisubl
sar
jbe
clc
mov
js
jno
lds
or
jmp
xchg
sub
adc
enter
into
loop
sti
xor
daa
mov
mov
xor
or
jp
loopne
sub
jbe
mov
sub
sub
sti
repz
out
frstpm(287
mov
push
sub
dec
jns
ljmp
pop
incb
mov
xchg
fcomip
cmp
in
jo
cwtl
or
dec
sbb
jecxz
mov
jle
mov
pop
jne
add
mov
int
mov
pop
cmp
cli
es
and
and
pop
imul
insl
je
jle
aam
dec
push
cwtl
mov
mov
xor
and
push
outsl
imul
mov
das
push
shl
idivl
jae
roll
mov
jmp
jp
mull
gs
out
aad
cmp
mov
stc
push
loopne
xlat
test
lea
lret
mov
data16
mov
adc
scas
pop
xor
add
ret
adc
jmp
ficoms
andl
je
nop
mov
dec
sbb
movlhps
lret
lret
mov
xchg
loope
xor
mov
pusha
and
in
bound
push
pop
sub
hlt
adc
pop
or
pop
sub
mov
sub
mov
js
xor
daa
xchg
leave
mov
or
fsts
ret
out
gs
and
lods
add
mov
xchg
shlb
std
cmp
lcall
mov
add
or
test
mov
pop
or
sub
sbb
mov
push
popf
mov
sub
mov
sbbb
inc
cmp
int
out
stos
loope
and
mov
scas
jg
lahf
sub
mov
mov
lods
nop
frstor
xor
and
jle
fildll
shl
insl
mov
sbb
fwait
incb
and
es
sbb
in
push
scas
clc
loopne
js
push
sbb
popa
push
insb
mov
sub
mov
in
lock
cltd
cld
push
jg
push
aad
inc
test
popa
insb
daa
mov
stos
dec
fists
std
out
out
xor
jecxz
jmp
pusha
xchg
out
pop
or
adc
mov
or
mov
dec
sub
pushf
pop
imul
mov
test
dec
popa
xchg
xchg
mov
rclb
into
gs
repnz
lcall
lods
data16
add
fildll
ds
jge
out
lret
xchg
dec
int3
pop
xchg
inc
jp
pop
aaa
jp
lcall
mov
xor
push
jae
les
cld
sbb
adc
sbb
rclb
cli
or
sub
pusha
outsb
lds
push
das
cmp
cmp
jg
in
jbe
push
lret
scas
arpl
mov
testb
gs
mov
cli
mov
test
sar
mov
pop
jmp
repz
loop
movlhps
int
mov
shlb
cmpsl
jp
aaa
cli
negl
ljmp
dec
sub
jl
scas
icebp
test
sbb
mov
xor
ljmp
std
clc
lea
pop
mov
pusha
push
rclb
pop
mov
push
clc
push
cmp
lcall
scas
pusha
sub
pop
inc
rcll
fistpl
adcb
mov
les
jns
popa
test
aam
std
sub
lds
cmp
mov
mov
int
pop
int
sarb
pushf
stc
ret
jae
or
jl,pt
lds
scas
incb
and
addr16
fnstcw
push
movsl
xor
dec
out
adc
lcall
addb
and
insl
repnz
in
mov
xchg
push
nop
decl
incl
outsl
dec
lock
cltd
adc
imul
and
sub
cmp
pop
sbb
lods
sub
dec
lock
fldenv
ret
cmp
jge
dec
test
sub
and
adc
ret
mov
je
mov
in
fcoms
stc
pop
addr16
dec
roll
pop
shll
mov
xor
sub
dec
ljmp
inc
test
outsl
scas
push
sbb
sti
lcall
loopne
cmpl
shll
scas
mov
pop
outsl
test
adc
mov
jecxz
jbe
clc
aam
rol
xor
out
sbb
pop
stc
ret
adc
in
mov
xorl
in
lret
loop
adc
lret
pop
cmpsl
add
cwtl
cltd
je
fidivl
movsb
lea
loopne
insl
repz
cwtl
mov
sub
and
iret
mov
stc
imul
or
ja
xchg
call
and
cmpsl
push
add
push
test
add
loopne
xchg
jecxz
loope
clc
ret
sub
pop
mov
cmp
inc
cld
daa
popf
outsb
xor
cmc
mov
fiaddl
call
sub
push
icebp
mov
outsb
and
xor
push
sub
sub
xor
call
adc
push
dec
sbb
lea
mov
dec
sub
mov
jmp
mov
test
loop
sbb
jecxz
scas
fldcw
ret
popf
out
mov
jecxz
mov
push
mov
jg
xchg
xor
pop
push
leave
ret
movsl
jg
in
sbb
and
pop
add
test
cs
push
scas
aad
jg
pushf
ror
add
add
aad
and
inc
add
cltd
arpl
xchg
outsl
and
popf
push
fstpt
arpl
test
out
pop
mov
add
pusha
jmp
mov
pushf
cmp
push
jb
call
add
lcall
icebp
cmp
ljmp
push
stos
mov
adc
loopne
inc
xchg
pop
shr
cltd
sbb
in
cli
mov
mov
repz
pop
and
sbb
pop
xlat
add
popw
xor
scas
xchg
pop
or
sub
xchg
out
pshufw
pop
inc
or
jo
pop
adc
inc
shrl
dec
pop
sti
push
int
pop
dec
mov
aaa
push
cmpsl
mov
jp
shll
push
jge
inc
push
sub
dec
jo
mov
push
jbe
lahf
and
addl
pop
loop
cmp
cld
aam
fiaddl
jmp
mov
inc
jg
leave
mov
push
scas
add
adc
fwait
xor
mov
xchg
stc
pop
imul
in
icebp
fbld
jne
enter
jmp
mov
sub
pop
test
push
mov
mov
pusha
xor
lahf
sub
stos
ljmp
bound
mov
les
pushf
xchg
inc
jns
and
filds
inc
aas
clc
xchg
jmp
out
mov
mov
shll
push
mov
out
and
push
std
cld
sub
dec
pop
adc
scas
out
pop
and
push
icebp
push
in
cmp
xchg
sbb
pop
in
push
jmp
pop
ds
repz
push
sub
jmp
test
insb
and
push
jmp
jne
sbb
mov
mov
fwait
adc
repnz
aas
sbb
lret
mov
test
jg
int
insl
xor
fstl
inc
cltd
xchg
xor
rcll
out
push
xchg
cltd
xchg
push
adc
fwait
adc
rcrl
dec
push
jne
or
mov
sbb
imul
and
inc
sbb
stos
and
jo
sub
rclb
push
movsl
mov
adc
int
orb
push
cmp
push
sbb
jnp
dec
aas
data16
push
shll
insl
sub
loop
pop
fldl
cmp
js
test
mov
sbb
xor
pop
sub
loope
xor
aam
test
dec
add
cmp
stos
scas
or
and
icebp
push
orb
ficoml
adc
in
out
pop
out
dec
add
out
sub
add
mov
adc
rcl
outsb
lcall
and
hlt
test
popa
and
popa
cmp
sub
add
sbb
add
mov
mov
lock
inc
mov
out
cmpsl
push
push
clc
jo
mov
inc
sbb
cmp
mov
push
in
int
nop
cmp
inc
xchg
dec
and
gs
jns
cs
pop
shll
xor
in
lea
xchg
sub
rcrb
add
arpl
aas
test
jbe
and
inc
sbb
lahf
loope
out
push
int3
cli
jo
sub
loope
dec
pop
cld
mov
dec
dec
cmpsb
sarl
mov
insl
ja
xlat
or
jmp
dec
mov
jno
and
call
jge
aam
sbb
inc
push
xchg
pop
mov
pop
cs
insb
popa
jo
ja
insb
lret
cmp
shrb
call
pop
mov
iret
push
push
clc
fldl
pop
xor
and
clc
insb
xchg
fwait
out
leave
cmp
in
js
std
popf
pop
push
cmp
lds
neg
mov
jl
adc
rorl
inc
out
jecxz
push
ds
and
cmp
ret
lock
inc
jae
pop
mov
fistpll
nop
daa
xchg
fnsave
mov
inc
or
pop
ret
jecxz
lcall
jge
outsl
mov
xchg
jmp
in
and
dec
cmpsb
aam
or
movsl
mov
dec
ja
and
xlat
jbe
jnp
push
jmp
mov
inc
add
pushf
imul
mov
sbb
jb
push
jb
imul
push
push
mov
ljmp
cmc
test
fldl
jne
dec
outsl
roll
xor
adc
lahf
movsb
cmpsb
jo
mov
cmp
enter
adc
into
cld
add
shlb
repnz
push
mov
jne
xorl
ss
xlat
xlat
test
cmc
ret
sub
fstpt
fisttps
outsl
cmp
sbb
xlat
pop
add
cmpsl
scas
scas
hlt
mov
inc
mov
scas
fldenv
mov
cmpsb
pop
dec
xor
xlat
ss
sub
dec
ror
popa
dec
rcrl
lea
mov
movsl
jbe
dec
mov
and
stos
mov
adc
out
and
inc
sub
xchg
jno
jns
mov
push
ds
xchg
in
repnz
jecxz
add
push
dec
arpl
out
sahf
outsl
adc
cmp
in
xchg
or
stos
pop
jne
insb
push
rcrb
mov
das
nop
loop
aam
int
fcmovnb
scas
pop
ret
idivl
into
mov
incl
sahf
sbb
mov
cmpsl
lret
dec
push
jbe
pop
shll
mov
cltd
je
and
and
push
cmp
jnp
dec
pop
push
dec
and
cmp
mov
mov
xchg
mov
shrb
test
ljmp
lret
sbb
xlat
stos
xchg
fs
mov
std
xorb
incb
mov
and
clc
ret
jp
pop
xchg
adc
mov
jp
pop
outsl
cmp
inc
in
clc
sub
mov
xor
pop
je
mov
xlat
fldt
cmp
mov
loop
mov
test
rcrb
loopne
pop
fisubs
adc
in
or
xchg
fxch
cmp
inc
xchg
je
pop
push
xchg
sub
jno
jmp
stc
pop
pushf
scas
xor
sahf
rcrl
add
sub
mov
jp
pop
fbld
outsb
push
push
cmp
push
data16
subl
icebp
inc
scas
daa
sahf
int
je
push
xor
mov
sub
jb
dec
pop
add
lret
xchg
in
addl
mov
arpl
mov
jae
outsb
add
test
ljmp
cmp
mov
cmp
push
cs
rcr
jae
incb
imul
pop
adc
and
push
and
std
mov
cmpsb
mov
stc
jae
jle
xchg
cltd
fwait
cmp
dec
scas
add
into
scas
jmp
mov
out
movsb
leave
popf
mov
cmp
out
loopne
inc
les
jns
or
xchg
xchg
jnp
pop
jbe
call
adc
outsb
or
rolb
cmpsl
cs
enter
pop
jne
lds
pop
lret
negl
inc
lock
scas
in
adc
aad
outsb
decb
popf
lea
jle
pop
fdivrs
mov
push
push
pop
fidivrl
lea
sub
push
jge
add
xchg
mov
cs
push
filds
mov
cmp
mov
cli
ds
jb
cld
into
jae
cmpsl
data16
lret
xchg
mov
xchg
arpl
movsl
xor
loope
adc
testl
enter
sbb
ja
pop
lods
daa
push
popf
enter
nop
adc
sub
jne
pop
movsb
fdivrl
dec
je
outsl
outsb
leave
add
mov
int3
jae
imul
pop
add
push
cmpsl
repz
dec
xchg
jno
dec
jmp
mov
sahf
out
or
les
mov
lods
data16
add
and
out
aam
cld
inc
into
icebp
add
jl
xchg
call
mov
jns
nop
call
aaa
mov
cmp
inc
and
fxam
xchg
sub
in
in
fs
add
insb
lret
xchg
imul
xor
xchg
jae
xchg
jmp
fiaddl
cltd
mov
into
fimull
dec
push
lret
mov
repz
and
mov
es
fidivs
cmp
and
mov
jno
les
mov
iret
mov
fbstp
std
xchg
sarl
mov
stos
popf
xchg
mov
test
inc
mov
inc
inc
mov
xor
loope
mov
push
popa
and
movsb
xor
cmp
sub
add
cli
scas
rcrl
xchg
js
notb
jno
mov
mov
and
and
sbb
pop
ret
mov
and
out
cmp
jbe
pop
daa
mov
fmuls
pop
adc
mov
add
pop
cmp
dec
negb
xlat
push
jno
jno
imul
clc
add
xorl
sub
fs
les
sti
fisubs
ret
sti
and
jae
mov
repnz
insb
movsb
add
jmp
lret
and
inc
into
jp
loop
outsb
mov
add
sub
cmp
stc
fisubrl
test
push
rolb
mov
mov
arpl
and
pop
mov
jb
cmp
or
sbb
bound
loopne
xchg
stos
inc
loope
sbb
int3
push
sub
je
hlt
dec
cmc
lods
pop
fwait
pop
int3
nopl
inc
pop
call
rcrl
in
xor
jno
mov
dec
inc
xor
sbb
out
and
xlat
pop
arpl
insb
inc
nop
popa
jecxz
fdivr
dec
jge
push
clc
fs
and
dec
fsubl
cmp
fs
jbe
mov
mov
out
push
repz
mov
add
fmull
mov
mov
pop
inc
out
add
rclb
jno
jecxz
idivl
mov
push
inc
lods
aaa
mov
ss
pop
cmpsl
mov
mov
pop
lock
pop
or
fs
push
inc
je
jbe
adc
icebp
aaa
cmp
add
jns
in
out
daa
data16
pop
lret
adc
cmp
inc
inc
dec
lahf
aas
adc
dec
pop
addr16
aam
test
mov
sub
int
adc
mov
mov
pusha
sub
fisubrl
adc
jno
jge
fbld
pop
mov
ja
add
in
out
sub
jbe
mov
sbb
push
push
out
rcr
into
sub
or
pop
or
outsw
fsubr
fidivrl
jmp
je
and
das
es
and
mov
cwtl
shl
lock
repnz
inc
push
inc
in
sub
jl
sti
adc
pop
push
insb
push
mov
inc
addps
adc
push
pop
in
mov
fdivrs
insb
nop
ds
xor
jo
mov
sub
test
xchg
aam
mov
cmp
hlt
jne
out
les
adcb
jbe
and
jns
cld
aas
sbb
and
jo
cmpsl
inc
in
xchg
add
icebp
adc
inc
repnz
lods
jbe
inc
stos
jge
xor
lcall
mov
push
je
or
insb
cmpsb
xchg
mov
sbb
idivl
cmp
xlat
pusha
cmp
mov
sbb
jb
jmp
push
pop
push
push
cmpsb
sub
adc
enter
mov
jl
cmpsl
icebp
push
mov
mov
gs
idiv
mov
ljmp
testb
lret
xchg
in
js
daa
pop
int3
xor
in
xchg
jae
xchg
sub
inc
add
xchg
inc
orl
in
sbbb
int
hlt
inc
xor
dec
shll
jae
movsl
xchg
jecxz
xchg
out
xchg
pop
shl
push
cmpsb
cmp
mov
rorl
or
xchg
int
fdivrl
inc
outsb
repz
aad
dec
jl
loop
lds
cmpsb
adc
lods
mov
addr16
call
sbb
ss
push
scas
stc
xlat
mov
pop
inc
xchg
fldt
inc
divl
ror
repz
inc
xchg
jno
and
arpl
es
sbb
out
mov
mov
cli
xchg
and
in
jp
adc
inc
gs
aad
sbb
mov
xchg
jecxz
rclb
fs
xchg
or
xlat
cld
or
lahf
scas
xcrypt-ecb
cmpsl
or
or
lods
aas
pushf
dec
push
dec
cmp
iret
jbe
in
and
stc
rcl
mov
push
imul
cmp
imul
movsbl
jno
mov
and
fnstenv
mov
pop
inc
pop
repnz
test
adc
push
fstpt
mov
push
in
mov
mov
add
iret
jae
scas
mov
jle
mov
enter
cmpsb
lods
sahf
aas
xchg
lds
insb
and
insb
inc
xchg
and
mov
fmull
xor
or
mov
ja
cmp
iret
jmp
das
fcompl
clc
out
roll
shl
out
pop
je
xor
aam
cs
les
bound
aaa
and
xchg
push
xor
test
xor
sub
xchg
in
mov
inc
rcrb
xchg
in
push
xchg
mov
cltd
fyl2xp1
lock
xlat
scas
leave
sub
pop
lsl
cli
div
or
and
jg
fildl
push
in
push
push
cmp
scas
xchg
mov
cmpb
rcrb
in
sti
loope
xor
js
jmp
xchg
lds
js
xor
mov
mov
imul
jmp
repz
sub
add
jl
lods
into
cld
mov
mov
lret
xchg
sahf
xchg
aas
mov
adc
mov
and
mov
push
pushf
sbb
out
jne
sub
movsl
pushf
xor
testb
jae
outsb
out
jno
jb
cs
mov
pop
mov
xchg
add
lret
jae
pusha
adc
jnp
imul
jecxz
int3
push
mov
popa
jnp
jb
hlt
imul
lds
xorl
divl
int3
leave
imul
in
lea
lds
sti
ss
rorb
push
pop
ret
pop
scas
pop
mov
or
fcoml
adc
cmp
pop
xchg
xchg
push
cltd
mov
xor
sub
adc
pushf
shll
inc
xlat
scas
outsb
sub
or
ret
push
cli
pop
scas
sub
mov
lret
sub
int
cwtl
or
push
and
dec
xor
dec
jge
bound
arpl
jge
sbb
pop
sub
mov
stos
aad
imul
cltd
sub
xchg
test
xor
stos
cmp
sub
and
cmp
cmp
cmovp
out
mov
insl
addr16
dec
fisttpll
jo
ss
xchg
dec
mov
lret
jg
inc
icebp
push
je
jbe
sbb
lcall
xchg
push
gs
les
inc
sub
cld
sbbb
lea
inc
pop
push
adc
into
jp
fsubl
test
add
adc
ret
add
dec
popa
stc
mov
out
ljmp
mov
leave
mov
xor
push
jle
xor
cld
ficompl
or
or
jnp
decb
shl
xchg
fwait
sub
mov
add
lahf
shrb
fwait
stos
cmp
test
add
sbb
sub
ds
shlb
stos
ja
push
mov
test
pop
rorb
inc
outsl
inc
push
fdivrl
push
loopne
data16
add
inc
shrl
push
jns
push
cld
bound
pop
sbb
xor
sbb
jecxz
xlat
stos
pop
test
and
js
jbe
mov
lret
sbb
xchg
ss
or
mov
and
je
lods
stos
int3
outsb
dec
mov
mov
shlb
ss
pop
inc
imul
pusha
inc
arpl
lcall
icebp
mov
lret
lods
sarb
push
and
xchg
jae
xchg
mov
aaa
nop
outsb
pop
out
fstpt
fistpl
mov
inc
xor
sti
xchg
sbb
inc
iret
xor
mov
cmp
in
loope
stc
add
fdivrs
sbb
insl
sub
xor
adc
xchg
aam
aas
pop
lea
pop
and
test
cmp
test
jle
test
mov
rolb
stos
dec
pop
hlt
mov
rcrb
mov
and
sbb
ret
movsb
mov
jle
add
add
mov
out
or
fiadds
xchg
push
imul
int3
add
hlt
adc
aam
outsb
pop
sahf
clc
dec
or
xor
es
mov
pop
and
jg
test
out
push
in
jae
pop
push
lods
mov
loope
test
jns
stc
xor
int
sbb
ficoms
pop
repz
iret
fnstcw
jns
mov
imul
scas
push
lea
aad
cmp
test
daa
add
push
icebp
shrb
insb
xchg
ljmp
sub
scas
dec
stc
dec
ret
test
jge
scas
xlat
jle
or
out
in
gs
xor
and
cwtl
xchg
xchg
rolb
mov
inc
mov
mov
popl
cmp
mov
xchg
push
adc
sahf
inc
call
add
into
mov
adc
and
insb
mov
cli
mov
mov
and
fimull
push
stos
adc
sub
mov
xor
leave
pop
cmp
or
inc
faddp
dec
push
or
xchg
fdivr
mov
dec
jbe
xor
sbb
lea
bound
xor
aaa
adc
mov
cltd
int
js
fdivl
je
sub
mov
ficoms
or
lahf
mov
jo
inc
mov
or
push
pop
fdivrl
popf
cmp
mov
fnstcw
add
das
dec
jecxz
push
scas
mov
xchg
bound
aam
or
leave
and
fldcw
mov
xor
cwtl
sub
lock
and
push
fidivs
mov
adc
call
mov
mov
call
insl
cltd
adc
cmp
push
pop
mov
mov
jb
sbb
pop
sub
lcall
jle
add
dec
loop
sub
xchg
lods
aaa
add
sbb
sbb
jae
aaa
idivl
adc
fistps
mov
adc
fbld
gs
ja
mov
xor
mov
xor
test
imul
add
lret
adc
test
scas
shrl
sti
pop
adc
sub
stos
pop
out
dec
in
pop
loop
frstpm(287
mov
xlat
push
mov
mov
and
pop
xlat
mov
add
cmp
pop
in
pop
sbb
inc
je
imul
data16
loop
xor
ret
mov
in
or
iret
mov
mov
jbe
repz
stc
sub
mov
jp
push
or
xchg
aaa
pop
pop
stc
adcl
and
neg
das
fimull
push
imul
jecxz
shl
dec
in
in
xor
or
add
dec
xor
xlat
mov
sub
imul
fidivs
push
and
adc
push
imul
insb
jo
fwait
in
pop
out
test
dec
jae
hlt
loopne
repnz
mov
jbe
xchg
hlt
sub
movsl
lcall
xchg
and
sub
add
and
add
cmp
fnstcw
inc
mov
cmp
jnp
enter
pusha
insb
sbb
mov
push
sub
xchg
mov
call
xlat
cmp
fldl
push
lret
and
out
fistl
push
shll
add
and
dec
cld
sbb
ljmp
jecxz
add
ljmp
push
addr16
jecxz
dec
xchg
xor
jnp
fsubs
add
aam
pop
aas
movsb
xchg
mov
and
sarl
lret
xchg
push
addr16
push
es
xor
sar
push
push
mov
aam
mov
sbb
sub
lret
inc
cs
scas
repz
mov
xchg
push
cmpsl
add
ss
fiaddl
outsl
mov
fs
jle
cltd
xor
cmp
jg
and
ficoml
stc
xlat
cmp
sub
cli
out
mov
jle,pt
ret
stos
lret
mov
dec
pop
jecxz
lods
cmpsb
sbb
cli
adc
adc
mov
adc
dec
mov
mov
aad
adc
sbb
xchg
inc
xchg
push
xor
xor
jl
dec
movsl
out
sub
sub
inc
pop
pop
inc
cld
sbb
movsl
stos
enter
jo
push
cltd
movsb
jo
sbb
repz
inc
popf
mov
pop
mov
mov
iret
cltd
test
clc
push
xor
push
roll
clc
leave
pop
and
cmp
lcall
test
sub
ja
sbbl
add
fs
leave
mov
inc
mov
add
adc
icebp
in
adcb
cmp
inc
ds
testl
cwtl
ds
jb
lahf
je
mov
sbb
cmp
push
xchg
shrb
mov
popa
push
sbb
xor
std
xchg
arpl
xchg
mov
push
inc
mov
sub
mov
push
pusha
mov
cltd
xor
pop
sti
repnz
pop
inc
push
lahf
add
and
inc
mov
push
std
pop
xor
bound
out
dec
lret
pop
add
pop
pop
lea
fbld
mov
popa
mov
sub
pop
popf
pop
aam
fimull
or
adc
inc
scas
outsb
in
pop
adc
cli
les
mov
or
mov
mov
xchg
sahf
add
add
mov
in
or
adc
mov
sbb
jle
push
dec
loopne
nop
mov
sub
ljmp
jns
and
add
push
sbb
rcl
or
sbb
dec
inc
jo
inc
xchg
outsl
in
jg
and
cli
inc
movsb
cltd
out
or
data16
pop
sbb
jo
fldl
jne
rclb
into
or
aad
add
insl
aaa
out
data16
inc
pop
inc
andb
shl
data16
sti
xor
aad
push
inc
imul
loope
mov
push
cmp
mov
mov
out
mov
sbb
push
jle
add
pop
push
add
cmc
xor
push
lods
add
mov
popf
popa
add
cmp
mov
mov
rolb
insb
aad
repnz
icebp
out
mov
and
shlb
jmp
mov
push
decl
inc
cltd
aad
add
sub
adc
imul
inc
xchg
xchg
pop
ret
es
or
call
jp
lods
xchg
push
push
lahf
repz
xchg
pop
in
dec
or
cmpsb
bswap
out
mov
adc
mov
rclb
test
cmc
test
sahf
mov
xchg
push
out
inc
cmc
in
cltd
push
negl
out
cmp
adc
stos
je
ja
fadds
sub
jo
sub
add
in
out
xor
insb
add
jae
pop
add
xchg
mov
faddl
cld
mov
push
rorb
cmc
dec
add
pop
and
iret
call
mov
mov
stos
out
and
mov
xor
es
ret
mov
add
mov
push
jae,pt
addb
clc
and
mov
imul
in
lret
fs
jmp
lret
dec
mov
adc
lret
das
push
mov
stos
add
pop
or
out
mov
mov
insl
cwtl
lods
pop
jb
pop
shrl
ret
push
scas
or
into
mov
mov
stc
inc
insl
mov
frstor
dec
mov
iret
add
cmc
dec
jl
nop
rcrb
lock
xor
cmp
sbb
loopne
jmp
popa
sti
jl
xchg
jge
mov
xor
add
scas
out
adc
jb
cmc
push
mov
or
xor
roll
fsubrs
sbb
xor
pop
ret
nop
mov
inc
pusha
insb
sarb
inc
pop
fdivr
rorb
lret
enter
bound
nop
sub
imul
loop
mov
mov
sahf
jg
mov
push
jns
push
add
xchg
sub
mov
inc
and
mov
fldl
mov
jo
cld
pushf
adc
and
jno
not
lret
ja,pn
fucomi
fmull
test
and
cwtl
ss
lret
pushfw
testb
xchg
mov
cltd
lret
mov
adc
xor
test
outsb
loopne
cmp
mov
xor
jnp
pop
dec
mov
jmp
ds
xor
xchg
mov
push
out
cmpsb
movsb
jbe
sbb
xchg
add
lahf
es
aam
aad
xor
mov
push
mov
cmp
arpl
mov
test
push
ret
xor
xchg
mov
scas
mov
in
pop
xchg
mov
aas
aas
or
aas
mov
test
movsl
cmp
add
es
ret
mov
ljmp
mov
outsl
and
cmpsb
adc
fcmovnu
sub
sub
pop
adc
or
cmp
imul
insl
add
jge
xchg
lahf
imul
ljmp
pop
sti
inc
movsb
or
jbe
jnp
stos
popf
fimuls
sub
int
dec
iret
xchg
outsb
lahf
in
shrb
add
xchg
popa
push
pusha
push
cmovns
ljmp
dec
es
inc
mov
cwtl
jecxz
pop
hlt
mov
iret
loope
imulb
popfw
loope
cmpsb
punpckhdq
adc
sbbl
clc
xchg
inc
subb
and
and
ss
mov
mov
xlat
jbe
dec
div
mov
inc
push
mov
jp
icebp
inc
and
dec
mov
mov
and
add
sub
orl
xchg
fucomi
repnz
ss
repz
stos
mov
fs
cld
mov
icebp
test
mov
test
inc
fabs
fbld
test
mov
cmp
fcomi
xorl
push
xchg
or
inc
pop
adc
pop
insl
cli
adc
je
std
aad
lcall
mov
dec
enter
xchg
cwtl
nop
mov
cmp
xor
xchg
dec
jno
fnsave
insl
push
mov
sub
aad
stc
push
loopne
fsubl
dec
adc
mov
cmp
sbb
inc
shlb
dec
aas
inc
xchg
cmp
jnp
mov
rclb
xorps
decl
enter
inc
sbbl
or
pop
outsl
mov
cmp
int
sarb
jp
adc
sub
push
jb
cwtl
inc
and
sub
inc
push
mov
pop
cmp
xorl
invd
lret
jle
xlat
sbb
inc
filds
js
or
inc
adc
sbb
push
inc
loop
mov
cs
cltd
adc
push
mov
mov
mov
dec
enter
dec
adc
sub
sbb
mov
cmp
rcrb
pop
inc
aam
jne
nopl
pop
jmp
testl
popf
sbb
bound
scas
mov
push
incl
mov
lahf
xchg
incb
loope
ljmp
mov
push
jns
or
pop
mov
in
xor
mov
push
xchg
mov
mov
addr16
jno
gs
pop
repnz
cmpsb
mov
xchg
cmp
enter
pop
push
mov
jb
or
fcoms
push
test
movsl
sbb
fs
mov
mov
frstor
mov
jo
orb
cmpb
push
xchg
mov
loopne
int
mov
cltd
push
push
daa
add
mov
sbb
cmovge
adc
out
pusha
xchg
mov
sbb
imul
mov
cli
mov
xchg
cli
jnp
mov
sarb
movsb
mov
addr16
test
dec
jp
int
inc
or
lret
push
subb
push
jae
fs
mov
xchg
and
cmp
xchg
cli
dec
cmpsb
outsb
ja
mov
sbb
and
push
xor
or
fucomp
repz
arpl
push
shlb
ss
push
repnz
scas
push
test
test
scas
xor
add
cmpsl
push
mov
and
inc
pop
push
lcall
les
jns
mov
dec
leave
mov
sbb
je
mov
sbb
andl
pop
xchg
push
and
mov
in
out
mov
mov
je
or
rorl
popa
mov
cld
cmp
or
xor
jp
fnsave
loopne
add
sub
lret
sahf
dec
adc
loope
and
push
daa
jg
push
imul
out
imul
repz
rol
leave
push
and
insl
rcrb
xor
and
sub
pop
ja
gs
jmp
add
xor
cltd
lds
ss
pop
cmp
rcll
mov
addr16
mov
fildl
sti
popf
xor
cli
aaa
pop
loop
sbbb
mov
or
or
mov
and
outsl
cmp
stc
lods
sbb
jecxz
imul
pop
mov
cmp
xlat
popf
pop
stos
dec
and
movsb
jno
inc
cmp
fsubr
mov
popf
mov
out
loopne
jg
testl
dec
jne
neg
inc
or
daa
mov
insb
cmp
push
dec
popa
aas
fdivs
hlt
ss
rcrl
cmp
add
and
mov
lret
mov
mov
mov
movsl
pop
or
stc
sbb
ror
mov
inc
mov
push
fiaddl
repz
or
adc
mov
inc
cmc
addr16
testl
dec
xlat
daa
mov
mov
mov
pusha
adc
scas
out
in
enter
xor
sarl
pop
je
insb
mov
icebp
jns
xor
test
leave
cld
xchg
inc
lret
gs
add
insb
popf
hlt
popa
mov
xchg
sbb
push
sbb
daa
ja
das
add
pop
xlat
inc
popa
pop
popa
sub
test
insb
pop
cltd
jp
inc
movsb
daa
mov
aaa
test
or
inc
lock
xchg
ja
shll
stos
cmp
data16
stos
xchg
inc
xchg
xor
sbb
bound
mov
popa
insb
outsl
aam
lahf
xchg
xchg
bound
mov
cmpsl
imul
mov
iret
syscall
adc
mov
add
out
add
sub
pop
pop
mov
push
jmp
push
fidivrs
fcmovnbe
pop
jl
cld
in
arpl
jno
leave
mov
icebp
std
scas
pop
push
mov
aad
mov
xlat
lock
mov
jle
sub
lret
cmp
ss
popa
leave
popf
mov
dec
pop
dec
icebp
mov
mov
sbb
ljmp
cltd
lret
icebp
jmp
or
sbb
sbb
and
sub
inc
shlb
std
jg
xchg
shll
sahf
xor
lods
in
dec
inc
mov
mov
xchg
in
or
xor
cmpsb
pop
test
dec
in
cmp
fldenv
and
pop
movsl
fisttpl
push
lcall
cld
xchg
enter
lret
or
xchg
negl
dec
xchg
repnz
xchg
subl
jmp
loope
addl
arpl
loop
add
test
cmp
es
mov
or
lock
xchg
xor
sub
adc
mov
sti
lahf
jl
xchg
or
xor
test
mov
clc
add
or
sub
cltd
cmp
or
shll
stc
lock
pushf
hlt
popa
fdivrl
lds
dec
sbb
and
mov
ja
sbb
adc
add
or
or
sub
outsl
in
stc
out
push
inc
sti
xchg
ljmp
pusha
adc
jp
mov
popa
push
mov
xor
jne
gs
sti
in
sahf
cld
cli
dec
cwtl
pop
mov
push
dec
cmp
imul
jl
inc
aaa
loop
mov
jg
push
outsb
and
or
push
andb
push
repz
sub
iret
xchg
pop
dec
push
and
movsb
sub
xchg
fildl
jl
xchg
jp
rorb
test
nop
mov
aas
dec
xor
adc
adc
decb
push
and
push
sbb
mov
lds
inc
pop
aaa
xlat
jge
repnz
repnz
cmpsl
mov
outsb
inc
xchg
sbb
out
bound
pusha
imul
pinsrw
jno
lret
sub
mov
in
and
jno
adc
lods
push
sub
data16
sahf
clc
dec
lcall
jg
jo
test
pop
lods
add
inc
adc
push
fsubs
cltd
sub
mov
jo
dec
int
inc
ret
scas
or
and
cmpsb
cltd
sbb
iret
sbb
add
daa
push
fcomps
rcrl
outsl
outsl
dec
mov
scas
add
sbb
leave
lahf
push
push
mov
jl
pop
lods
push
and
call
push
int
push
jmp
ret
and
xchg
xor
in
and
leave
dec
jle
pop
testl
out
fcmovnb
pop
rcrl
push
shr
jno
lahf
js
lahf
add
mull
repnz
dec
shll
fsubrl
daa
or
push
daa
imull
sub
dec
jl
sarl
mov
mov
cmc
dec
popa
int
cmpsb
cmp
int
cld
dec
pop
outsb
cmp
fsts
inc
scas
stos
pop
push
and
ljmp
test
lea
and
cwtl
or
or
mov
inc
or
sahf
jnp
sub
mov
push
add
pop
xorl
sub
pop
lods
aam
mov
daa
mov
and
pop
insl
mov
pop
pop
shlb
cmpsb
jbe
push
xchg
int
pushf
xchg
push
lret
imul
pop
jmp
dec
inc
and
js
repnz
xlat
into
sbb
cmp
push
test
sbb
ret
pushf
test
inc
and
or
das
insb
in
popf
add
adc
lods
xchg
adc
xchg
es
cli
jnp
add
pusha
aas
imul
jecxz
inc
int3
cwtl
outsl
pop
inc
xchg
stc
mov
movsb
aam
lds
and
lret
inc
in
mov
cmp
enter
inc
dec
and
int
sbb
pop
mov
test
lahf
sarl
xchg
icebp
push
mov
pop
mov
xor
sub
mov
stos
test
popf
or
add
out
test
sub
incl
add
cmp
gs
int
push
sub
shrb
sbb
adc
cmc
lret
push
cmp
mov
xlat
lods
sbb
dec
sub
or
xor
outsb
shlb
push
push
mov
jl
add
sbb
sti
mov
xor
push
mov
xchg
movl
in
popf
leave
inc
push
out
jae
mov
sbb
inc
stos
mov
inc
lret
dec
push
dec
dec
mov
mov
xchg
lock
mov
les
push
dec
pop
sub
jbe
xchg
inc
inc
fxch
arpl
out
xlat
jo
jae
xor
faddl
add
mov
test
sub
imul
jnp
mov
cmpsl
popf
iret
and
js
nop
mov
jns
mov
mov
repz
icebp
std
jle
es
cmp
push
mov
mov
sahf
mov
shl
inc
or
jecxz
push
sbbb
jb
mov
out
imul
xchg
mov
mov
mov
not
adc
jmp
out
popa
pop
aaa
test
scas
xchg
aas
jnp
lods
lcall
xchg
out
inc
rorl
ss
xchg
cli
push
lds
aam
das
jbe
outsb
push
mov
clc
adc
bound
out
cwtl
pop
mov
mov
js
pop
mov
enter
mov
mov
and
mov
aaa
fcomps
cmp
mov
mov
loope
xor
adc
ja
sti
mov
sbb
sbb
test
popf
movntq
jne
add
test
out
je
cmp
in
dec
pop
sbb
push
adc
imul
sbb
push
inc
popa
lcall
hlt
or
lret
xchg
ja
shll
sub
popa
sti
sbb
add
fwait
add
pop
pop
fs
mov
repnz
cmp
xlat
cltd
les
adc
cmp
pop
and
inc
repnz
enter
or
clc
ficomps
push
jnp
push
iret
hlt
mov
adc
push
push
adc
push
ret
in
decb
push
push
aad
or
leave
cld
loopne
test
xchg
mov
stc
and
enter
clc
sbb
sbb
leave
std
fsubrs
into
pop
and
and
movsl
cmp
jbe
icebp
insl
scas
mov
and
hlt
mov
mov
cmpl
testl
fsub
in
imul
jae
aad
and
jge
sub
inc
lret
and
iret
adcl
repz
sub
inc
jo
sub
ljmp
jecxz
frstor
ljmp
jg
mov
dec
lods
imull
lcall
sbb
add
mov
loop
outsl
cmp
jo
mov
mov
bsf
mov
imull
xor
orb
mov
inc
cmc
lss
xchg
repnz
or
out
xor
mov
jno
orb
orb
mov
push
xor
data16
mov
jecxz,pn
pop
pop
fisttps
fnstcw
hlt
cmp
mov
addb
jb
lcall
scas
mov
std
xchg
xor
inc
cmp
jl
mov
lcall
stos
mov
popa
pop
jbe
sbb
add
push
insl
adc
stos
xchg
pop
outsl
pop
cld
cmp
mov
clc
sub
movl
cmp
xchg
mov
push
or
mov
dec
lret
lea
mov
in
jl
pop
cli
xchg
in
loopne
lods
out
std
icebp
sub
in
mov
dec
lcall
stos
jbe
leave
pop
cmp
stos
iret
inc
cmc
mov
es
aaa
dec
or
cmp
adc
push
xor
test
outsl
jmp
push
mov
pop
filds
insb
jmp
fwait
add
and
mov
cld
push
lods
jecxz,pn
mov
mov
mov
xchg
and
jo
pushf
dec
lds
pop
shll
add
dec
mov
pop
mov
xor
mov
xor
and
into
inc
push
mov
pop
ss
ljmp
fidivs
mov
xor
jne
pop
das
mov
mov
in
js
and
ja
dec
divl
mov
adc
cmp
ret
repz
xor
rcrb
sti
nop
add
xchg
jl
addr16
insb
pop
push
xor
adc
xchg
repnz
sti
xchg
mov
outsb
loop
dec
les
mov
xchg
scas
movsb
cmp
or
add
mov
sbb
in
ja
adc
jo
or
inc
std
pop
and
int3
out
fidivl
jno
mov
inc
movsb
fstpl
arpl
xchg
adc
rolb
inc
pop
push
and
ror
loopne
lcall
cmp
mov
mov
or
sbb
cmpsl
cmp
test
adc
pop
in
xlat
nop
popa
pop
or
mov
jmp
xchg
mov
adc
icebp
cmp
jae
lea
jnp
cli
adc
push
movsl
movsl
rcrl
mov
mov
pop
jp
cld
push
inc
arpl
dec
fiadds
xor
xor
movsl
pushf
inc
sbb
dec
loop
dec
and
xor
xor
lods
jbe
test
cmpsl
pushf
les
fwait
push
aad
sbb
cmp
mov
push
mov
dec
fildll
push
and
and
mov
xor
xor
aam
jns
lods
mov
lds
sbb
sub
int3
cmp
push
mov
fmul
or
lret
xchg
push
pop
add
xchg
add
fs
pop
xchg
xor
adc
jo
pop
dec
dec
out
push
imul
cmpsb
sub
ret
pop
sbb
inc
pusha
adc
pop
push
ja
stc
or
fldenv
stc
lods
orl
insl
pop
push
push
call
pop
cld
jl
loop
and
jp
or
jge
and
mov
in
xchg
mov
sbb
sbb
and
lods
pop
jb
in
test
insl
fnstsw
jmp
iret
lock
lods
rorb
mov
cli
xor
mov
cmp
stos
push
mov
push
shr
jo
mov
int
sub
int3
xchg
inc
stos
ret
dec
push
std
stc
xchg
xchg
sub
mov
imul
test
insb
pop
mov
jmp
xor
rcrl
in
repz
test
or
test
fildll
and
or
sub
or
xchg
sub
mov
popf
lods
sub
ja
in
push
pushf
dec
xor
mov
loopne
inc
adc
aas
jo
sbb
lds
xchg
adc
xchg
pop
ret
pop
stc
call
xchg
xchg
mov
pop
pop
xchg
nop
sbb
mov
mov
mov
addr16
movsb
or
jg
pop
shll
mov
dec
add
ljmp
or
mov
icebp
jp
arpl
push
rolb
adc
sbb
and
cmp
fsub
in
dec
mov
lret
push
xchg
pop
push
fadds
pop
sub
repz
cli
pop
or
mov
jbe
iret
mov
inc
push
int3
stos
and
clc
ror
loope
test
dec
xchg
cmp
xchg
mov
jno
dec
cld
push
pop
dec
mov
out
nop
ret
sarb
dec
add
add
cmpsl
imul
and
fdivl
jo
mov
hlt
iret
mov
pop
sahf
add
or
lret
xorb
and
lahf
shl
jg
shl
ret
pop
mov
pop
cs
sub
lret
sahf
mov
add
fs
pop
sbb
xchg
imul
and
loope
or
lahf
jecxz
scas
or
test
rcrb
xchg
out
cmp
loop
daa
sbb
jne
xchg
sub
ret
imul
stos
mov
jg
jo
jb
insl
mov
xchg
push
aas
push
pop
mov
data16
push
mov
or
jecxz
inc
loop
inc
jmp
pop
ljmp
and
sbb
push
fsts
subl
cs
mov
sub
and
mov
or
jne
movsl
xor
xchg
or
sbb
or
push
cmp
cmc
jo
icebp
cld
sbb
dec
push
jo
les
orb
cwtl
inc
aaa
and
lock
insl
pop
loop
push
jge
mov
aad
inc
test
push
idivb
pmulhw
and
xchg
repnz
and
fnstsw
jbe
push
or
rcl
stos
lock
cmp
jecxz
inc
data16
mov
inc
in
cmpsl
cwtl
int
and
jo
cmp
stc
xchg
and
mov
in
fisttpll
ja
loop
sbb
mov
xor
addr16
xor
push
mov
xor
movsb
hlt
xor
leave
mov
or
lea
pop
in
sub
fcom
fsubrl
jns
dec
out
mov
inc
sbbb
fsubs
negl
pop
mov
iret
sub
cmpsb
add
push
outsl
lahf
xchg
scas
and
jecxz
inc
lock
sub
xchg
pusha
or
ret
sub
mov
xchg
fiadds
xor
xchg
and
insl
lret
pushf
in
push
push
nop
and
sub
lods
lcall
daa
stc
add
push
fmul
mov
lea
jp
push
pusha
push
mov
xchg
or
jg
inc
int
jbe
sub
mov
cmp
mov
out
lahf
cmp
test
or
or
jl
and
push
mov
fwait
gs
push
aam
inc
repnz
ret
xchg
mov
fnstenv
ret
sahf
sarb
mov
pop
roll
xchg
mov
add
cmc
test
mov
notl
jbe
add
sahf
xchg
sub
and
mov
stos
pop
mov
adc
push
pop
in
dec
xchg
out
lcall
mov
es
into
pop
mov
repnz
sbb
stc
xchg
rcrb
sbb
je
dec
je
cmp
cld
call
fsqrt
into
in
mov
adc
cmp
in
data16
rep
hlt
jle
loope
sub
dec
or
mov
inc
mov
and
nop
cmpsb
cs
lods
pop
int
push
pop
gs
mov
xor
adc
out
jae
mov
jb
inc
or
jno
lret
out
int3
mov
rcr
enter
jp
insl
fsubl
cs
loopne
xchg
movsl
cmp
test
xchg
insb
sbb
mov
cmc
popl
sbb
pop
ret
ds
and
jnp
jbe
fldl2t
adc
sbb
test
fnstcw
lcall
cmpsb
andb
or
mov
insl
shrl
jbe
int
or
test
mov
popl
into
dec
js
jge
push
subb
or
mov
pop
fxam
test
push
repz
dec
stc
loop
nop
scas
push
divl
aaa
xchg
jae
jae
xchg
push
std
cmp
jbe
enter
mov
pop
ja
enter
outsl
lods
adc
inc
nop
or
shrl
jae
or
xor
mov
mov
mov
xchg
push
shll
addr16
mov
jl
push
movsl
mov
sbbl
mov
mov
arpl
and
pop
mov
sub
mov
push
roll
roll
popf
inc
pop
mov
bound
cmpsb
inc
out
bound
loope
int
xor
addl
pop
and
mov
std
and
jecxz
clc
pop
inc
popa
outsb
xchg
xchg
dec
cmp
orb
cmp
fldt
xor
lods
gs
ds
out
es
sub
imul
arpl
pop
pop
xchg
or
bound
es
xor
jb
and
fsubp
and
fwait
negb
add
cwtl
fcompl
flds
stos
subb
inc
cltd
adc
mov
insl
push
aad
decb
shl
pushf
jae
xchg
xor
add
notb
cwtl
loop
es
mov
aas
jbe
je
fisttpl
aam
inc
out
mov
fisubs
push
stos
xchg
into
ret
adc
in
jge
insb
xchg
out
xlat
mov
in
cld
fldl
or
sbb
outsl
in
jle
add
outsl
pop
ss
sbb
fs
mov
inc
cmpb
ja
leave
sbb
cmp
jae
add
xorb
iret
bound
aas
mov
fistps
jo
xchg
jns
cmp
pop
lds
xor
sbb
adc
div
fimuls
ljmp
rcrb
ds
bnd
lret
gs
repz
sarb
push
popa
je
or
pushf
mov
jg
mov
jo
cmp
sti
cmp
inc
xor
mov
xor
push
jbe
clc
jne
int
cld
bound
add
jae
mov
out
mov
xchg
rolb
dec
or
push
sub
andb
push
bound
push
mov
lds
decb
pop
imul
inc
jecxz
fbld
mov
mov
mov
lock
call
add
xrelease
and
pop
pop
ds
dec
pop
xchg
out
rcl
mov
lcall
pop
dec
rcl
loope
and
mov
loop
push
sbb
lcall
add
jge
xchg
pop
scas
lcall
stos
mov
pop
push
jae
dec
xor
xchg
loop
push
pop
pop
mov
xor
cmp
xchg
xchg
aaa
mov
mov
ja
dec
inc
testb
xchg
in
pop
xchg
cpuid
cwtl
out
dec
jno
std
jge
pop
cmpsb
ret
insb
push
xor
mov
inc
scas
scas
lds
in
mov
mov
scas
fnstenv
cld
insb
xchg
pop
mov
dec
adc
and
adc
js
iret
mov
addb
or
test
stc
pop
gs
psubw
sub
ja
int
cltd
add
pop
xchg
inc
jno
mov
adc
es
mov
bswap
cmp
int
std
inc
push
outsb
aaa
ret
cs
es
or
mov
dec
out
sbb
or
mov
push
adcb
lods
pop
pusha
ret
test
mov
test
pop
xchg
pop
jecxz
cmp
mov
jmp
int
lods
mov
jge
test
sub
jle
mov
cmp
aam
mov
ret
subb
scas
int3
pushf
aam
enter
movsl
test
icebp
loopne
leave
mov
imul
adc
sub
mov
xchg
repz
or
adc
es
and
adcl
andl
daa
jno
lock
stos
iret
fcomip
and
out
stos
jmp
inc
stos
out
jge
cli
ljmp
and
pop
sub
insl
popf
cmpsl
mov
sbb
add
scas
loopne
mov
jp
and
aas
pop
testb
and
jne
jmp
push
mov
jp
sbb
ja
test
pop
shrl
fs
fidivrl
add
mov
mov
movb
gs
mov
mov
xor
loop
hlt
mov
gs
imul
adc
mov
movsb
cmp
test
loop
mov
repnz
js
insl
xchg
sub
fsubrl
pop
dec
int3
sub
bound
ja
jl
lods
lods
adc
icebp
and
xlat
sub
test
lods
jnp
ss
mov
cmp
cmp
cmp
mov
xchg
jae
cs
mov
test
pop
ficompl
rclb
cli
test
jge
and
notl
pop
adc
xchg
test
lds
xor
sub
and
repz
test
cltd
jmp
not
push
inc
fadds
gs
in
push
sub
add
mov
fbstp
add
insl
addr16
lea
cmc
mov
aaa
and
out
ret
push
enter
xchg
adc
lret
aam
sub
xchg
leave
clc
dec
imul
out
mov
mov
jb
inc
pop
movsl
nop
cmp
adcb
idiv
push
push
out
hlt
mov
cmp
xor
adc
pop
enter
mov
sbb
jno
cmp
mov
cltd
shr
out
dec
in
mov
mov
mov
roll
pop
inc
adc
sub
jecxz
lcall
minps
and
shl
pop
sbb
push
in
pushl
or
mov
adc
pop
xor
mov
dec
loop
stos
sbb
imul
cltd
add
dec
cmove
mov
adc
in
pop
arpl
inc
mov
gs
push
ja
xchg
movsl
push
push
pop
xlat
jbe
bound
push
xor
sub
es
mov
int3
div
mov
repnz
mov
pop
inc
mov
xchg
xchg
dec
fidivs
jne
push
int
pop
jecxz
lret
pop
fldl
pop
sbbl
fdivrp
out
lcall
cmc
rcr
push
pop
inc
aad
repnz
pop
cmp
jp
stc
xor
push
stos
test
jmp
sub
lds
adc
fidivrs
pop
cmp
rorl
inc
test
push
dec
cmp
std
sub
outsl
jo
inc
cli
fsubrs
lret
daa
outsl
nop
aas
stc
cmpsb
pop
cmpsl
fs
icebp
wrmsr
xchg
rclb
jo
add
lea
test
notb
push
sahf
js
sarb
xchg
out
mov
ljmp
sub
imul
fisubl
mov
jle
sub
in
jle
add
sbb
push
daa
jle
inc
call
cwtl
push
mov
insl
cmpsb
xorl
mov
inc
mov
cli
mov
outsb
push
push
aad
xor
lock
dec
add
inc
inc
fmul
inc
sbb
repz
sbb
xadd
shll
mov
in
loopne
fimull
jl
or
cmpsb
and
stos
out
fmull
repz
mov
push
in
insb
or
cmc
or
js
mov
cmpb
ljmp
int3
arpl
lea
adc
inc
outsl
sub
push
lods
lds
xor
and
inc
sub
cmpsl
fs
clc
outsl
outsb
add
out
add
sahf
cmc
int
dec
mov
and
fstp
cwtl
scas
repz
adc
cmpsb
xchg
mov
stos
movsl
inc
loop
rcll
mov
push
sbb
pop
pop
aad
and
xor
in
rclb
adcl
sbb
and
sbb
sbb
dec
xchg
cld
cmpsl
jp
jl
mov
pop
es
jle
int
sub
add
scas
jge
lea
out
push
or
xchg
or
pop
int
stos
outsl
xchg
mov
cmp
imul
jb
jge
lods
inc
shlb
push
sub
push
mov
enter
rorl
xchg
and
dec
jge
das
aaa
mov
mov
or
cmp
stc
cmc
cmpsl
and
inc
xchg
lahf
mov
lahf
pop
jnp
cmpsb
xchg
dec
jo
sub
ljmp
les
aam
inc
js
pop
lock
cmp
addr16
pop
xchg
xchg
xor
cmpsb
je
push
mov
sub
dec
pop
int3
cli
xchg
dec
xchg
sti
bound
dec
cmp
pop
sbb
fmull
push
popa
mov
out
aas
sub
push
jbe
inc
jnp
imul
xchg
sub
dec
scas
push
mov
clc
mov
push
in
fistpl
outsb
adcb
dec
scas
jl
or
push
out
loope
add
mov
inc
jp
push
cmp
lahf
je
inc
fwait
dec
daa
add
add
cld
mov
sbb
repnz
mov
scas
fsubp
cmpsl
mov
rcll
out
dec
or
pop
hlt
repnz
jns
inc
inc
mov
lods
cld
mov
into
lcall
imul
cmp
add
lds
add
ss
popf
sub
mov
xchg
cld
shlb
and
mov
mov
mov
scas
insl
xor
je
jb
idivl
aam
cmpsb
cmp
jmp
inc
mov
jmp
xchg
add
dec
out
mov
and
pop
and
nop
ss
push
imul
xor
fcompl
mov
inc
inc
cmp
jecxz
lods
call
dec
je
test
lahf
sahf
jp
loop
call
lcall
and
xor
and
call
xchg
pop
and
fwait
iret
jp
pop
xor
arpl
cmp
loop
andl
ss
loop
lods
mov
fisttpl
shll
fisttps
mov
push
dec
push
push
xor
dec
push
jae
jne
cmc
xchg
cld
dec
adc
test
xor
jp
mov
sub
xchg
repz
cwtl
out
and
outsl
push
sub
dec
lret
in
sub
fwait
pop
cmp
cmpsl
dec
and
lods
movsl
and
sub
push
push
push
js
xor
rcr
test
cmp
xor
arpl
popf
in
sub
dec
add
mov
rcrl
mov
adc
ljmp
push
imul
push
ret
out
pop
jg
loopne
mov
paddsb
mov
sub
xor
mov
fwait
push
in
jbe
mov
push
je
mov
push
adc
xchg
cli
negl
lods
jmp
pop
mov
sti
jl
xchg
in
or
add
push
adc
push
stos
insl
ror
aam
jbe
test
push
and
mov
ljmp
movb
pusha
rol
int3
cli
and
push
int
adc
jge
test
inc
push
fnstcw
xor
fildll
cmp
xor
push
int3
loop
shll
sbb
inc
adc
dec
sbb
or
or
sub
stc
inc
pop
and
inc
sbbb
sbb
fstl
into
pop
movsb
xchg
lret
sahf
pop
sub
add
dec
mov
add
sub
adc
lcall
in
cmp
loope
inc
cwtl
xchg
pushl
cmpsb
inc
fiadds
loopne
pushf
das
mov
je
out
into
and
repz
dec
das
sar
cmp
adc
inc
lahf
mov
orb
dec
add
call
pop
insl
bound
cwtl
repnz
mov
aam
lcall
jo
lock
inc
or
test
add
push
and
cmp
mov
js
shlb
push
int
int3
std
push
outsl
jno
pusha
or
jno
jo
repz
sbb
movsl
loope
sbb
cs
sysexit
lret
mov
cmpsb
fs
leave
dec
mov
in
lea
sbb
mov
loopne
jecxz
movsl
add
xlat
iret
push
iret
divl
inc
adc
sahf
sbb
dec
jb
scas
or
push
in
cwtl
sbb
iret
add
mov
cmp
jle
out
outsb
mov
packsswb
ja
sti
xchg
fwait
xor
test
pusha
dec
ljmp
lmsw
pop
adc
xchg
push
jmp
pop
sub
xorb
lods
push
outsl
loopne
dec
sbb
xchg
clc
outsl
lret
loopne
and
dec
fcoms
scas
sbb
outsb
addr16
mov
loopne
sbb
fldcw
jecxz
sub
lret
mov
scas
decl
mov
fisttpll
sub
loope
andps
push
adc
pushf
and
pop
insb
scas
mov
mov
xchg
push
mov
lea
insl
jl
dec
or
xchg
mov
mov
je
mov
xchg
mov
and
adc
mov
in
in
divl
mov
pop
inc
or
jbe
popa
cld
clc
roll
test
or
insb
add
xchg
cld
mov
mov
xor
mov
push
test
xchg
outsl
cwtl
pop
movsb
sub
push
pop
fisubl
lods
and
mov
or
js
xor
daa
nop
sbb
enter
js
dec
arpl
imul
fcompl
push
mov
mov
cmp
mov
rcrb
leave
mov
push
aaa
aas
xchg
jecxz
out
sub
in
dec
add
xorl
xchg
sub
shlb
fidivrs
adc
inc
cmp
mov
pushf
arpl
jg,pt
jecxz
int3
cmp
xor
ljmp
lret
dec
daa
addb
xor
mov
orl
jbe
cli
pop
xchg
and
inc
lret
sub
imul
adc
xor
outsl
into
xor
out
cmpsb
enter
and
push
mov
xchg
pop
pop
popf
mov
andl
sbb
vpunpcklqdq
lret
jns
bound
mov
mov
sub
mov
adc
iret
xlat
push
insb
das
rcrl
adc
mov
lock
clc
add
or
into
xchg
xor
ja
fildl
pop
ds
lea
scas
outsl
incl
ffreep
cwtl
dec
cmp
jle
or
repz
xorl
cltd
dec
dec
inc
pop
in
movsb
cltd
xor
in
and
mov
adc
movsl
or
or
rol
gs
push
add
imul
mov
dec
and
sbb
or
and
jbe
and
aaa
and
repz
enter
inc
xor
jmp
int3
jnp
mov
lods
push
shrb
les
pop
mov
clc
jl
mov
mov
ss
pushf
jge
add
inc
pop
mov
push
shll
ffree
lret
mov
movsl
mov
stos
outsb
andb
inc
clc
add
inc
insl
adc
stc
push
push
pop
popa
add
add
xor
les
xchg
repnz
imul
fwait
scas
push
mov
pop
xchg
iret
add
sbb
xchg
mov
mov
pop
sub
fcmovnbe
xchg
movsb
push
rorl
arpl
mov
ja
rcrb
outsb
xchg
xorl
das
adc
aad
ret
mov
pusha
pop
into
aad
mov
ds
in
xor
push
addr16
jb
daa
lods
mov
aam
imul
outsl
dec
lds
inc
popa
mov
jl
nop
lds
dec
adc
xor
dec
push
sbb
fdivrl
pop
pop
and
and
test
mov
push
mov
add
and
les
sarb
jb
icebp
or
ret
lcall
stos
xchg
or
loop
inc
push
inc
dec
push
push
add
repz
inc
xchg
xor
into
mov
jno
mov
lea
clc
mull
pop
sbb
xchg
mov
out
inc
shr
in
xor
xchg
inc
insl
sbb
js
popa
imul
stos
jno
stos
fwait
and
or
gs
cmpsl
stos
sbb
jmp
mov
cld
outsb
mov
jp
xchg
into
test
jns
sbb
ret
sub
jo
loopne
and
dec
and
mov
adc
dec
shr
xchg
cmp
push
ss
sub
rolb
incl
pop
pop
outsb
pop
push
push
sbb
daa
aaa
add
push
fdivrl
leave
pop
aad
je
js
and
aas
xchg
movsb
call
fcomip
mov
ficompl
pop
aad
jmp
push
mov
stos
imul
jg
and
add
mov
mov
jmp
sbb
cmpsl
std
loope
and
out
add
adc
push
adc
sbb
xlat
fnsave
inc
mov
cmp
lock
sar
cwtl
jle
pushf
xchg
ja
loop
jl
mov
sub
sahf
lret
cmc
jmp
and
enter
cwtl
insb
aad
adc
jecxz
enter
mov
dec
addb
pop
add
fldt
inc
cs
in
sbb
push
jns
xchg
imul
or
sbb
mov
push
cmpsb
clc
rclb
adc
cmc
mov
mov
lahf
out
out
cmp
fisttps
inc
int
mov
push
movsb
push
cltd
test
fcoml
ds
push
std
adc
rcrb
add
adc
pop
lock
and
dec
mov
mov
shl
pop
arpl
lea
adcb
dec
aaa
cli
mov
push
dec
fucomi
int3
std
dec
add
pushf
pushf
push
ljmp
jb
out
mov
mov
mov
sti
ds
jbe
ss
mov
ret
ret
mov
jmp
dec
add
xor
mov
int3
adc
mov
leave
enter
or
mov
sbb
ja
mov
in
inc
dec
xor
addl
and
or
mov
cld
add
sub
js
sub
lahf
pushf
xchg
stos
sub
xchg
out
int
cld
ret
mov
ret
lods
test
cmpl
push
push
cltd
ss
shll
mov
cmp
xchg
cmpsl
inc
cmp
lea
mov
mov
jmp
sbb
hlt
push
cmp
lods
lods
movsb
movsb
inc
and
dec
test
int3
adc
mov
inc
fisttpll
cmp
scas
xchg
cmp
cmpsb
sub
mov
and
dec
mov
in
xor
sub
sub
dec
xor
jbe
lds
xor
add
fdiv
xor
ja
fstl
and
in
vandps
scas
dec
mov
jge
xor
stc
xchg
scas
cmp
xorl
mov
popf
xor
add
adc
loop
insb
scas
dec
lds
xchg
xchg
in
fcoms
mov
xor
xor
jp
or
mov
in
sub
loop
aaa
mov
int3
jnp
mov
mov
rolb
mov
or
scas
pop
movsb
pop
cwtl
idivl
xor
adc
or
movsl
sbb
push
repnz
mov
repz
sti
int
outsb
dec
xorl
shrb
jle
outsl
outsl
xchg
movsb
in
xor
test
sarl
push
and
push
push
sub
unpcklps
or
xor
mov
mov
rcrw
ds
pop
adc
fidivl
pushaw
lock
ljmp
jne
xchg
into
test
ret
andl
scas
push
and
adc
fwait
enter
mov
stos
fwait
dec
clc
xchg
push
out
cmpsl
fstl
movsb
and
mov
nop
sbb
inc
cmpsl
int
mov
sbb
lds
hlt
scas
mov
iret
je
movaps
fadd
inc
loop
pusha
outsb
in
push
mov
jp
cs
and
push
pop
cmpsb
mov
ljmp
or
and
dec
lea
or
insl
mov
dec
frstor
sbbl
pop
ljmp
adc
leave
sub
popa
notb
jge
cmp
mov
arpl
sbb
sub
xlat
and
mov
mov
jo
pop
push
andl
fstpl
xchg
mov
mov
xor
push
movsb
popf
cmp
popf
data16
movsl
dec
pop
mov
fwait
cmp
cmp
shrb
pop
dec
imul
in
push
mov
push
sbb
dec
ret
mov
sbb
mov
inc
stos
insb
shlb
loope
or
mov
pop
data16
xor
pop
mov
xor
enter
xchg
dec
inc
insl
insb
inc
push
mov
popf
jae
or
or
xor
ret
mov
mov
popa
adc
adc
mov
xor
cmp
fcoml
dec
imull
xchg
dec
mov
sub
orl
mov
out
test
adc
and
sub
cmp
jl
push
fs
les
shr
and
mov
xor
sub
sbb
clc
cmc
push
inc
ljmp
aad
out
test
insb
dec
outsb
lds
pop
sahf
es
mov
in
stos
mov
cli
ds
es
movsb
stos
xor
jg
in
and
jmp
loope
sbb
push
repnz
sbb
inc
popf
xor
aaa
rol
movl
shll
leave
cwtl
jno
fwait
aad
sbb
jns
mov
dec
or
out
lcall
mov
test
aad
mov
ljmp
lcall
shlb
imul
or
std
ficomps
int
pop
mov
pop
cmp
inc
sahf
xlat
pop
pop
gs
inc
cmc
xchg
push
loope
mov
out
cltd
push
bound
cld
jbe
cmp
stc
fiadds
dec
insb
pop
mov
int3
and
movsl
mov
push
xor
mov
cld
in
xor
pop
sub
jo
push
xchg
in
xchg
int3
sbb
adc
aam
sbb
das
rcrb
or
adc
lcall
mov
mov
sbb
movsl
fisubrs
or
sub
dec
sahf
fbstp
call
in
xchg
xor
adc
fnstsw
pop
push
sarl
icebp
test
mov
cwtl
icebp
frstor
clc
pop
sbb
push
and
sub
push
std
lret
insl
inc
mov
pop
xlat
cmp
mov
jge
repz
sub
dec
jno
sbb
cmp
hlt
pop
and
out
push
add
add
das
jecxz
fbld
cmp
mov
lret
insl
push
jbe
in
jle
fbstp
xchg
dec
jb
in
nop
incb
pop
imul
or
ret
push
sub
jno
leave
xchg
inc
loope,pt
jle
dec
insl
sbb
lea
mov
out
arpl
push
mov
dec
xor
pop
es
pop
mov
and
aas
fistps
pop
aas
mov
insl
xor
cmc
and
xchg
pop
adc
in
xchg
mov
sti
lods
das
push
sbb
xor
mov
sub
push
lea
fs
psubq
dec
les
pop
sub
mov
dec
andb
lret
mov
movsb
mov
les
nop
add
sub
fcoml
call
xor
cld
js
mov
std
rcl
or
ss
mov
pusha
xchg
adc
jp
mov
dec
rcrb
ljmp
pop
jecxz
dec
adc
fwait
cmp
test
scas
pop
mov
cmpsl
jno
popf
lods
pop
loope
movsb
xlat
outsb
repz
and
mov
adc
data16
pop
sub
add
pop
pop
mov
subb
test
mov
fcomip
fmull
mov
pop
mov
stc
sub
mov
stos
dec
movsl
pop
dec
xor
mov
lock
pop
or
mov
push
fs
pop
sbb
xlat
add
jmp
pop
inc
movnti
mov
imul
push
sbb
push
rol
icebp
xchg
aaa
jl
lods
push
lea
outsb
repnz
jecxz
push
cmpsl
xor
mov
add
xor
dec
mov
xor
lea
push
movsb
adc
cwtl
in
aam
cli
sub
xchg
dec
outsl
popa
xor
jb
incl
and
pop
gs
cmp
pop
xchg
add
notb
jp
mov
cltd
je
adc
mov
mov
xchg
in
mov
cs
cltd
inc
mov
pop
dec
insl
lods
mov
jne
sbb
rorb
jge
adc
xchg
jno
push
dec
fadd
xorl
cmpsb
test
fsubrl
and
mov
clc
imul
js
push
mov
adc
inc
lret
aaa
dec
into
notl
xchg
repz
test
sbb
mov
and
loopne
xor
jle
int
les
call
or
dec
cmp
les
fistpl
cmp
sti
mov
shl
idivb
fsubs
ss
fimull
out
jmp
cli
sar
cmp
push
mov
sbb
cmc
shrl
jo
pop
sub
or
dec
xchg
jb
mov
mov
and
pushf
cmp
sub
int3
int
jns
cmc
xchg
pop
xchg
outsb
jbe
cmp
jecxz
dec
mov
push
pop
mov
xor
sbb
sahf
jno
nop
pop
cld
cmp
aas
out
pop
mov
rcll
or
xor
mov
test
addb
add
popa
ret
xchg
inc
or
mov
hlt
dec
sarb
mov
mov
jb
lret
fwait
sbb
sub
cmc
mov
imul
mov
cmp
ljmp
xor
int
shlb
sbb
ljmp
movsl
or
sbb
fldl
xchg
mov
dec
je
sahf
movsl
fsubrs
and
cmpsb
xor
cmpsl
enter
out
imul
pop
pop
push
loope
shlb
xchg
sbb
fcomps
sub
pop
jne
add
mov
punpckhwd
in
cli
in
adc
imul
fisubs
leave
ffree
push
outsb
sarb
jge
push
xchg
mov
sahf
mov
in
cli
imul
push
popl
pop
ljmp
mov
sbb
mov
adcl
int
outsl
adc
and
cwtl
negb
xchg
aaa
out
push
mov
pop
push
adc
aas
cltd
jl
ret
jb
sbb
data16
cwtl
mov
jmp
xor
lcall
xor
sub
outsl
cmpsl
add
mov
stos
call
sub
adc
inc
mov
push
addr16
mov
xor
sbb
stos
sub
cmpsl
or
nop
dec
cmpsl
cltd
pop
nop
and
sub
pop
andl
xor
add
xchg
pop
inc
in
je
lret
cmp
arpl
jg
inc
or
mov
sahf
pop
sub
mull
imul
mov
push
inc
nop
sub
mov
sbbl
pusha
ljmp
sub
lcall
stc
or
iret
orl
inc
mov
sbb
inc
pop
in
mov
xchg
sbb
rcll
imulb
mov
inc
data16
movsb
sub
dec
sarl
xchg
sbb
push
push
scas
ror
sub
jmp
pop
popa
push
or
shl
lods
sub
inc
xor
fdivr
stc
fs
inc
outsl
stc
push
fs
aad
jecxz
out
stos
dec
insb
adc
push
vprotw
mov
mov
mov
jge
push
repnz
adc
adc
inc
push
dec
jae
mov
mov
adc
pop
pop
sbb
jp
cmp
rorb
ja
inc
add
xchg
enter
shlb
lahf
into
aas
std
cmp
push
loopne
sti
mov
insl
lods
mov
in
pop
repnz
mov
push
push
imul
xlat
mov
xor
outsb
mov
mov
insb
aas
sbb
mov
scas
pop
das
mov
lea
pop
cmp
ds
xchg
lods
into
out
pop
insl
into
dec
lret
mov
stos
adc
ds
mov
outsl
mov
fisttpll
insb
and
lret
lcall
cmp
jmp
int3
std
scas
lea
push
jnp
lds
mov
mov
mov
sar
mov
mov
lock
test
je
xor
jnp
gs
sbb
adc
and
cmp
hlt
movsb
lret
adc
dec
cmp
jg
add
test
add
pop
lea
push
bound
cmp
jo
sbb
fidivrl
pop
jnp
add
fsubs
dec
frstor
aad
cli
xchg
xor
push
sub
std
lock
nop
mov
aam
imul
sbb
or
jae
push
dec
mov
sbb
loope
shlb
xchg
sbb
and
push
shll
sub
lret
out
sub
cli
addr16
inc
fcoms
cld
add
xlat
mov
jl
push
dec
or
xor
adc
es
std
push
enter
cmp
sbbl
mov
cmp
mov
stos
and
pop
out
and
mov
add
dec
mov
fldl
adc
push
inc
pop
mov
fs
xor
lret
or
mov
xchg
test
jne
daa
pop
fsubrs
aad
cmpb
add
adc
dec
sub
repnz
xchg
out
loop
cmpsb
cmp
xchg
cmp
outsb
xchg
gs
icebp
lret
mov
inc
jb
jge
sbb
push
adc
int
sbb
ret
xor
xor
mov
mov
xchg
pop
sahf
outsb
jnp
ss
mov
mov
and
leave
repz
sahf
fbld
out
subb
jge
cli
add
in
shrl
push
aas
out
inc
dec
sbb
dec
push
imul
popf
pop
ds
sub
mov
jmp
out
lods
enter
xor
jns
and
xchg
shl
inc
notl
movb
or
pop
xlat
pop
xor
mov
and
bound
mov
inc
shlb
xchg
gs
or
cmc
icebp
push
push
cld
sbb
and
in
mov
mov
rcl
xchg
fsub
mov
shl
insl
push
scas
paddsb
filds
push
sahf
jns
aam
jbe
out
cmp
and
dec
jp
mov
rclb
mov
sti
fcmovu
inc
repnz
mov
js
iret
mov
sbb
mov
aaa
xchg
sub
mov
xchg
cli
fistl
pop
cmp
sub
shlb
jns
inc
xor
and
andl
mov
js
jb
jg
loopne
hlt
gs
movsl
pop
inc
mov
rclw
pop
loopne
dec
frstor
data16
mov
xchg
inc
mov
fildl
or
pop
outsb
out
jno
sahf
pop
mov
xor
pop
pop
dec
jnp
xchg
push
test
inc
pop
and
jne
push
xchg
gs
inc
and
scas
push
ds
test
adc
out
in
or
inc
fdivs
int3
popa
sub
dec
jo
pusha
imul
ret
cli
lret
pop
jae
or
fstps
cmp
sar
popa
xor
dec
mov
xchg
lahf
pushl
or
insb
pop
pushf
and
hlt
sub
mov
rolb
out
mov
sub
add
test
inc
mov
ds
xchg
ja
cmp
xchg
cmp
test
xchg
out
push
mov
xchg
lock
pushf
mov
in
sub
inc
es
lods
aaa
xchg
jmp
or
or
push
xchg
jb
xchg
and
cmc
scas
popa
add
inc
pushf
or
lods
test
mov
cwtl
mov
aad
cmp
mov
ficompl
push
sbb
xor
lcall
push
pop
sbb
bound
dec
mov
imul
sub
aam
test
ja
fimull
inc
xchg
push
fcomps
xchg
cmpsb
lods
scas
cmp
mov
push
dec
sub
add
sbb
mov
test
loop
jl
pop
pop
sbbl
lods
addb
add
add
roll
add
cld
mov
out
cmp
repz
sbb
testb
cmp
dec
xchg
adc
xchg
pop
repz
in
testl
loop
jge
mov
mov
lock
add
cmp
inc
adc
test
fs
outsb
ss
add
fistps
or
add
push
xchg
mov
int3
xor
pop
cmpsb
mov
hlt
lods
mov
dec
xchg
mov
popa
sbb
shll
jnp
jp
mov
push
aad
xchg
push
mov
repnz
rclb
sbb
out
mov
dec
xlat
mov
inc
adc
xor
xchg
cmp
ret
inc
add
add
andb
mov
mov
lahf
leave
dec
mov
ds
add
fs
out
xor
lret
popa
pop
call
cmp
stos
push
jbe
inc
xchg
jle
push
or
stc
sbb
inc
ss
test
test
mov
mov
and
inc
rcll
jae
push
ret
push
in
add
fsubrl
dec
pop
cs
inc
inc
dec
push
xchg
sub
imul
addl
scas
xchg
test
repz
mov
in
mov
or
cld
sbbb
jnp
out
scas
mov
mov
repz
je
cli
xchg
lock
movsl
inc
loop
sbb
mov
sub
popf
pop
push
ret
dec
sbb
cmp
ljmp
adc
and
sub
out
andl
or
hlt
retw
lcall
wrmsr
popf
loopne
inc
outsl
sarl
mov
fidivl
mov
adc
sub
push
cmp
roll
mov
or
in
xchg
mov
hlt
in
mov
mov
or
stc
ljmp
into
in
mov
jns
cmp
lahf
jp
sub
and
mov
mov
xchg
cmpsb
outsl
mov
add
cmp
mov
test
sti
xor
dec
push
or
js
cmpsb
mov
pop
les
push
ss
mov
sbb
in
push
out
and
shll
sub
lcall
sbb
jne
adc
xor
or
jno
xchg
pop
std
inc
pushf
push
and
inc
pushl
xor
bound
add
pop
mov
cmpsb
vmulps
push
js
dec
sub
repnz
or
sbb
les
add
lock
ret
push
int3
mov
mov
xchg
out
enter
sbb
ret
mov
mov
imul
notl
dec
mov
addr16
scas
mov
fcoml
sbb
cmp
adc
out
dec
imul
xor
adc
je,pt
push
into
gs
dec
out
repnz
push
pop
jle
iret
cwtl
je
scas
dec
mov
mov
sbb
hlt
push
or
outsb
adc
sbb
cmp
call
pop
adc
pop
stos
in
cmpsb
jb
add
dec
imul
mov
hlt
xor
lahf
leave
mov
mov
and
cmp
pop
jbe
inc
addr16
add
scas
pop
repz
in
mov
les
mov
push
jecxz
xor
fcmovu
ficoms
cmp
push
xor
jmp
sbb
mov
cwtl
xlat
mov
push
aad
jne
test
jecxz
or
es
repz
xor
das
push
cmpsl
shlb
inc
fnsave
sbb
adc
jmp
in
aaa
lret
xchg
pop
sti
mov
lahf
in
sbb
imul
jbe
push
mov
cs
test
mov
push
mov
sub
cwtl
mov
iret
ss
lret
stos
das
ret
ds
xchg
sbb
mov
dec
xor
jne
sbb
xor
roll
fs
sbb
mov
xchg
xchg
ja
push
add
jecxz
pop
dec
shll
dec
inc
inc
insl
add
mov
jae
pop
sbb
out
cmp
fdivr
xor
lock
ficoml
cltd
cmpsl
mov
std
lret
cmpsl
and
sbb
and
stos
jns
fildll
repz
push
mov
mov
and
fnstcw
fiadds
adc
loope
pop
pop
mov
dec
repz
push
pop
pusha
dec
add
jle
icebp
andl
push
cmp
sub
les
movsb
cld
cltd
add
mov
jmp
lret
mov
add
mov
sub
sub
and
out
mov
fsts
sahf
pop
jb
cld
and
clc
sub
push
pop
rol
jno
loop
stos
push
and
mov
xchg
fnstsw
das
out
nop
test
inc
cmp
popf
xor
inc
stos
or
sub
mov
movsb
mov
pop
movq
nop
cli
cmc
int
jl
add
push
or
sbb
jg
pop
movsb
xchg
jmp
inc
sub
mov
or
imul
cmp
fisubrl
inc
test
jb
mov
jge
in
and
or
ret
lcall
mov
dec
leave
adc
adc
std
fsubl
sahf
cwtl
movl
stos
out
pushf
jae
movsb
outsl
in
pop
icebp
or
mov
xor
shl
ret
pop
stc
adc
addl
push
push
mov
mov
sub
icebp
mov
iret
jb
sub
sbb
inc
lcall
dec
out
and
pop
inc
into
sub
sbb
sahf
cwtl
mov
pop
xchg
xor
in
mov
fnsave
pop
out
mov
fldl
dec
outsb
jo
sub
sbb
mov
das
push
cltd
cmp
scas
fstpt
add
fdivrl
dec
pop
fisttpll
sbb
test
xorl
arpl
mov
xor
ljmp
cltd
mov
mov
sbb
in
jb
imul
push
daa
xor
sub
addr16
pop
push
mov
imul
jne
push
jno
ljmp
cld
aad
inc
sub
mov
lcall
mov
shll
sub
push
sti
insb
arpl
or
into
iret
xchg
pusha
jg
pop
mov
lret
jae
iret
inc
addb
push
test
inc
int3
mov
cmp
jecxz
fadds
lods
ret
xor
fsub
mov
fildl
sbb
mov
dec
xor
scas
ret
leave
les
pop
jbe
cmpsl
pop
jl
dec
xchg
push
mov
in
ds
add
mov
pop
in
lods
arpl
stos
mov
out
shrb
dec
shl
cld
fiaddl
sbb
sub
fiadds
jl
test
sub
int
pop
fwait
pushf
std
mov
fbld
int
js
icebp
addr16
dec
xlat
inc
lahf
inc
aam
jmp
adc
shll
jnp
add
scas
ss
cmpsb
sub
cmovbe
sarb
sarl
sub
ljmp
fs
scas
test
loop
and
jbe
imul
mov
outsb
std
or
mov
jno
testl
xor
cmpsb
xchg
or
cmc
clc
xchg
stos
sub
pusha
in
mov
jno
jns
xor
jns
loopne
inc
in
insb
inc
jbe
cs
loopne
and
dec
in
cld
xlat
mul
shll
popf
inc
mov
mov
std
or
xchg
push
iret
and
jbe
adc
aaa
into
mov
incb
cmpsl
cltd
sub
pushf
mov
adc
loope
repz
stc
movsl
int
call
push
pop
push
sbb
in
pusha
int
jb
sbb
lret
out
cmc
nop
jnp
leave
fisubl
or
pop
bnd
jnp
test
push
loop
jns
std
icebp
aad
cwtl
cwtl
test
adc
movsb
xchg
adc
pop
xchg
and
fstpt
mov
mov
in
test
imul
iret
push
pop
cmp
std
fninit
xor
mov
sbb
in
jle
cmc
enter
dec
insl
repz
mov
clc
in
lret
and
pushf
scas
xor
inc
dec
pop
decl
xchg
ret
hlt
push
test
fcomp
adc
popf
or
xchg
int3
leave
subl
pop
aad
insl
das
shrb
sarl
es
inc
add
fmull
pop
clc
xchg
scas
push
call
mov
mov
test
mov
xchg
mov
push
xor
ret
dec
mov
lea
sub
ja
fdivrl
roll
dec
mov
les
adc
cmp
mov
inc
xchg
pop
xlat
mov
and
repz
hlt
test
test
or
push
jbe
jnp
idivb
into
mov
sub
repnz
push
sbb
pop
push
mov
pop
cld
push
sub
out
jp
repnz
jbe
ds
jns
sub
lret
clc
fstpt
js
daa
jb
xor
push
jge
cmpl
mov
push
dec
lahf
pop
xor
adc
cmp
adc
sti
jle
or
cmpsl
mov
lret
add
jp
sub
cmpsb
mov
mov
or
scas
lcall
jae
push
xor
xlat
std
mov
xchg
xchg
pop
cmp
aam
push
adc
dec
aas
jb
mov
inc
dec
fimull
into
outsl
data16
adc
cmp
pop
push
adc
cmp
daa
rcrl
pop
in
jae
pusha
inc
nop
push
test
sub
in
cld
sbb
out
in
sbb
lods
scas
pop
sbbl
sbb
xchg
adc
cmp
xor
test
nop
push
cmp
xor
imul
repz
push
shlb
xchg
mov
mov
pop
pop
popa
int
es
add
ror
test
pop
mov
jno
mov
pop
int
popf
shl
cmp
mov
imul
mov
jbe
out
fsubs
inc
imulb
mov
cmpsb
jnp
xor
leave
pop
es
push
add
stos
scas
in
cld
aaa
xor
cli
sbb
mov
out
jg
out
jne
mov
mov
stc
jmp
cmp
sub
cmp
std
fdivrl
lds
roll
into
addr16
xchg
aam
bound
cli
fs
pop
lods
xor
ds
mov
sbb
es
push
and
inc
push
dec
pop
jns
add
xor
stc
scas
shlb
popa
jns
lahf
add
mov
rolb
fsubrp
fs
jo
loope
dec
int3
gs
out
sub
fmull
pushf
lods
mov
xor
cmpsl
sar
lret
pop
scas
in
sub
add
cmpsl
lea
int
arpl
cmp
jnp
xorl
in
shrb
xchg
les
jle
cmp
ret
fs
jecxz
js
sub
and
mov
popf
pop
inc
fs
xchg
push
or
mov
call
pop
icebp
mov
lcall
shlb
stos
outsb
jnp
sbb
jmp
test
stos
and
pop
inc
repz
in
fcoml
sbb
sub
cs
hlt
jle
inc
and
mov
movsl
dec
mov
es
test
push
addr16
jle
pop
fstpl
loop
push
inc
jle
aaa
jmp
outsl
jae
bound
push
in
std
das
pop
jle
in
xchg
jp
sbb
loopne
inc
adc
jl
pop
cmp
in
pop
push
aam
xor
pop
jnp
push
cs
and
outsl
movsl
dec
adc
dec
imul
add
or
mov
nop
jmp
sbb
sbb
mov
add
std
stc
mov
test
pushf
sahf
mov
js
lea
mov
xor
or
cli
lods
clc
dec
ja
mov
cmp
push
jo
fwait
inc
cmp
sub
jnp
cwtl
or
jns
dec
adc
daa
shr
flds
add
pop
cmp
mov
sub
stc
pop
or
movsl
cwtl
xchg
sub
lahf
imul
lret
add
pop
pop
inc
mov
movb
mov
std
dec
cmpsb
call
rclb
ljmp
lods
hlt
pushf
cmp
sahf
cltd
mov
dec
xchg
xlat
jae
int
stos
data16
jo
inc
xor
cmpsl
movsl
dec
or
pop
mov
insb
js
or
fcom
adc
sbbl
push
cwtl
or
pop
mov
imull
mov
lea
inc
lret
iret
out
push
adc
xchg
clc
call
adc
cwtl
lret
sbb
loopne
or
pop
xchg
popf
arpl
in
out
cmpsl
inc
push
mov
into
push
pop
pop
cmp
xor
lds
rolb
out
sbb
andl
push
mov
jb
sub
xlat
ror
jae
push
mov
pop
or
inc
or
cmp
sbb
add
cmpsl
push
pushf
mov
lret
push
sti
mov
xor
adcb
jg
mov
or
pop
ret
sbb
fldl
inc
lcall
jae
pop
fidivrs
inc
dec
mov
stos
xchg
cld
in
shlb
arpl
fwait
mul
mov
mov
and
or
dec
inc
jns
stc
mov
mov
icebp
add
pop
fs
cmpsb
push
xor
pushf
aaa
ljmp
and
sti
and
movsl
filds
and
push
jns
jecxz
or
out
fistl
ret
int3
imul
mov
popa
test
icebp
adc
stos
dec
lds
mov
dec
fdivl
arpl
mov
pop
inc
dec
rsqrtps
xchg
inc
imulb
repz
cmpl
mov
stos
pop
lods
xchg
mov
mov
push
jo
and
rsm
fisubl
xor
push
adc
test
inc
or
data16
dec
cmp
xor
je
cli
scas
in
shlb
mov
out
push
push
mov
push
aaa
cmpsb
movsl
sbb
stc
cmp
repnz
push
cwtl
add
or
and
inc
push
push
sti
in
mov
or
and
sbb
xchg
adc
fsubs
jbe
jl
cmp
cltd
fimull
aam
pop
sti
xchg
loope
test
cmp
xchg
das
xorb
pop
adc
mov
nop
jb
arpl
dec
mov
outsl
mov
negl
mov
jl
ret
popa
pop
lods
add
jno
stos
out
jnp
adcb
mov
inc
xchg
stos
xor
cmp
add
jae
lret
inc
jl
jecxz
mov
es
and
ja
addr16
add
xchg
test
xor
hlt
mov
xorb
rclb
aaa
xor
test
aas
push
lcall
cli
push
mov
and
pop
mov
fists
lcall
cmp
mov
imulb
stc
imul
push
jg
mov
pop
repnz
nop
imul
xor
mov
inc
rol
sar
pop
and
cmp
aas
leave
sarl
loopne
pop
adc
sahf
loope
jae
or
pushf
filds
adc
jbe
sar
out
ret
cmc
int
shll
adcl
dec
shrl
push
pop
mov
lret
sub
or
xchg
lods
dec
dec
lret
add
imul
std
rcrl
mov
xchg
loopne
repnz
pop
push
mov
lret
addr16
jo
xchg
adc
or
push
out
and
test
xchg
jge
inc
das
mov
pop
xlat
int3
mov
pop
cmp
inc
sbb
js
pop
repz
fstl
sbb
dec
por
shrl
repz
adc
cmp
test
or
lret
mov
int
adc
cmp
push
shl
outsb
jo
out
add
xchg
mov
jo
punpcklbw
cwtl
out
cmc
fmull
decl
loop
bound
lods
clc
mov
mov
xchg
scas
ja
scas
test
movsl
pop
ss
and
lret
ljmp
jmp
inc
test
sbb
orb
xor
enter
or
pop
in
data16
int
jp
mov
mov
mov
pop
push
inc
int
test
lds
jmp
or
mov
popa
das
daa
sbbl
and
mov
jbe
iret
mov
cmp
in
xorb
or
or
adc
or
cmp
sub
in
push
fucomi
sbb
sbb
cwtl
cmp
pop
push
cmp
xor
movsb
ret
mov
or
push
rcrb
imul
test
adc
xchg
arpl
pop
ret
mov
add
lods
or
repnz
jbe
stos
sub
adc
xor
mull
pushf
fwait
jmp
pusha
roll
cmpsb
mov
jle
xor
jnp
mov
fdivrs
and
leave
rcll
mov
jmp
cmp
mov
dec
lret
pusha
flds
dec
icebp
mov
cmp
inc
mov
push
scas
add
lcall
add
or
lods
lods
fstl
pop
xchg
lret
jl
mov
xchg
jns
jmp
sub
push
push
xor
cmp
sub
mov
mov
add
xchg
rolb
out
push
test
aam
icebp
loope
gs
add
js
cmc
imul
mov
push
ja
shlb
or
and
push
js
out
jge
push
push
call
imul
jne
cmp
jae
adc
cmp
xchg
sbb
dec
xorb
pop
jle
xor
cwtl
push
or
sub
add
jo
mov
pop
lds
dec
stc
das
jnp
pop
ss
cmp
mov
push
sbb
push
iret
stos
lahf
scas
xlat
pop
cmp
lahf
and
add
ficomps
rcrb
pop
mov
sub
ret
sbb
xchg
fsubr
sti
pushf
jmp
ja
ucomiss
dec
dec
inc
popf
ret
or
push
mov
lea
or
dec
mov
cmp
cld
mov
xor
xor
cld
inc
pop
insb
mov
push
icebp
cmp
loop
push
and
sbb
xchg
clc
inc
sbb
mov
or
xorl
adc
push
fadds
data16
test
add
sar
jno
mov
das
aam
nop
pop
inc
outsb
jnp
test
inc
lret
dec
lret
je
push
xchg
push
cwtl
fs
clc
mov
dec
orb
outsb
rorl
mov
mov
pop
push
aam
shrb
ja
add
xchg
pop
cwtl
jl
sbb
pop
lods
push
mov
mov
subps
repz
sahf
lds
ja
and
lar
push
mov
stos
addl
nop
das
dec
into
cli
aam
sbb
mov
cmp
jb
mov
and
aam
push
out
pusha
pop
and
sbb
jnp
xchg
pop
notl
xchg
sbb
ror
inc
lods
lds
popf
jb
sbb
int
xlat
sarl
add
push
in
push
xor
inc
int
xor
dec
loop
pop
jne
cmpsb
in
mov
inc
push
pusha
ret
lods
dec
fisubs
jp
pop
push
cmpsl
rolb
xor
jae
or
mov
pop
inc
popf
or
data16
int3
add
cmp
lock
cs
xlat
jg
jl
roll
adc
jmp
push
jg
mov
subl
mov
mov
mov
lea
jmp
or
xchg
outsl
xchg
jge
sub
js
negl
pop
or
mov
pop
pop
test
pop
addl
sahf
repz
adc
mov
movsl
xor
xchg
stos
pop
push
pusha
cmp
imull
ja
addr16
lea
add
mov
shlb
scas
loopne
ret
fimuls
push
sti
icebp
or
push
cmp
insb
inc
or
hlt
adcb
mov
jnp
mov
mov
pop
mov
cmpsl
cmp
mov
pop
mov
popa
sarb
or
cmpsb
mov
es
jb
mov
fucomp
xchg
inc
hlt
xor
cmc
add
jp
dec
out
int3
ror
push
repz
popf
and
in
push
xor
pop
jbe
enter
aam
mov
push
test
lods
mov
push
mov
lret
cltd
add
push
mov
add
orl
test
out
push
xchg
das
aaa
lea
std
or
rcr
stos
je
out
and
xchg
mov
fnsave
ret
sar
stos
jns
data16
push
fnstenv
add
mov
jo
icebp
je
mov
jo
ja
fdivl
xor
mov
xor
cltd
push
xchg
mov
cmp
repnz
pop
push
or
xor
fptan
icebp
inc
out
ds
loope
xchg
arpl
ror
repz
mov
or
and
dec
orl
adc
sub
and
add
int3
clc
sub
xchg
pop
scas
hlt
movsl
shll
jge
lods
mov
js
xchg
jg
daa
adc
or
cmp
mov
clc
dec
sub
out
xlat
subb
movsb
mov
add
pop
jecxz
mov
xor
aam
lahf
push
mov
mov
xchg
inc
or
pushfw
shll
inc
push
push
adc
sbb
cli
cmp
sbb
repz
push
and
shrb
mov
cmc
cmp
cmp
mov
int
mov
loopne
mov
insb
lcall
test
mov
in
mov
in
mov
adc
mov
inc
lret
xchg
adc
mov
sub
fldt
mov
enter
xor
mov
push
je
in
cli
xchg
test
and
call
push
fwait
mov
outsb
fcoms
mov
jle
inc
and
je
push
inc
shll
dec
mov
leave
aas
sub
lret
mulb
in
cmp
cli
test
icebp
in
data16
mov
mov
cmp
call
lret
cmpsl
jle
out
push
cmpsl
addl
loop
adc
adc
scas
std
movsl
mov
sub
or
pop
lods
push
mov
jnp
sbb
jb
inc
test
cmp
mov
call
add
lret
jno
cmpsb
test
repz
jb
popa
roll
inc
incb
gs
nop
push
sahf
or
lcall
inc
lret
fldenv
or
mov
aaa
pusha
jg
cmp
cmp
push
jg
in
imul
jno
inc
cmc
dec
mov
lods
sbb
mov
sub
cmp
xchg
or
sarb
xlat
out
fbstp
jge
pop
frstor
loope
mov
test
pushf
adc
mov
aas
dec
push
or
push
into
add
test
pop
add
andb
sub
lea
test
repz
nop
stos
xchg
sti
dec
or
aas
xor
push
in
or
call
fnsave
lea
orb
cmp
cmpl
push
inc
push
mov
xchg
or
scas
stos
xor
jp
sub
jg
inc
mov
jo
aam
inc
fildl
xor
adc
aaa
pop
ret
fistpl
lea
or
or
dec
xor
dec
roll
add
and
inc
xchg
stos
xchg
hlt
inc
mov
xchg
push
inc
jne
ficoms
jl
cmpsb
jbe
int
mov
mov
clc
out
insb
dec
mov
jne
roll
adc
xor
cmp
loope
mov
test
add
insl
push
in
xor
clc
jae
mov
aam
stos
and
pop
shlb
cmp
dec
cli
push
mov
test
out
xor
push
push
push
call
dec
and
dec
adc
adc
dec
dec
xor
shl
or
adc
mov
or
enter
jecxz
rcl
add
cmp
lcall
adc
jo
push
sub
inc
sub
adc
leave
repz
cmpsb
mov
or
pusha
scas
aas
push
jbe
fldcw
bound
jmp
popa
push
rcll
dec
xchg
lret
add
push
push
xchg
cmp
cmpsl
sub
lds
rclb
cmp
mov
push
jmp
out
ret
mov
cmpsb
cs
gs
or
sub
into
es
fstl
mov
pop
lods
into
jns
popf
test
es
add
dec
daa
jns
mov
orl
leave
push
sbb
pop
out
push
and
sti
dec
aam
rorl
dec
fs
popa
arpl
push
and
andb
cmc
xorl
add
dec
add
sbb
arpl
mov
mov
mov
mov
jecxz
add
cmp
and
sbb
cli
int3
sub
add
mov
xor
jno
and
xchg
pop
pusha
in
mov
push
xchg
xor
adc
cld
push
sbb
cld
jnp
lahf
loop
loop
js
mov
xchg
mov
iret
fadd
mov
cld
and
fs
out
mov
or
lret
gs
and
mov
stc
sbb
test
push
adc
sub
push
or
jg
push
rcll
cs
not
inc
pop
mov
cmpsl
mov
push
out
rorb
dec
push
sbb
fldenv
scas
js
pop
js
cmp
outsb
jp
popf
std
jo
scas
and
add
xchg
fwait
mov
loop
xchg
push
jmp
mov
lock
mov
repnz
xchg
mov
lods
adc
sbb
fnstenv
add
fsubl
std
mov
lds
pop
xchg
xchg
mov
and
rclb
xchg
dec
cmc
pop
mov
xchg
xchg
adc
imull
or
adc
cmpsl
outsl
paddb
scas
cltd
data16
test
jle
mov
adc
push
inc
cmp
dec
lret
sti
fisubs
add
sti
sub
dec
adc
loop
scas
out
xchg
inc
aas
lret
sbb
clc
inc
adc
stc
addr16
addl
int
and
iret
addr16
shr
mov
pop
dec
adc
cmp
stos
mov
nop
jbe
outsb
shlb
adc
test
dec
sbb
push
das
incb
or
cmpsl
add
lret
inc
xor
insb
add
or
sbb
sbb
out
xor
imul
aam
test
inc
xchg
adc
mov
or
and
test
xor
stc
or
adc
daa
push
mov
xor
cmp
xlat
popf
repz
clc
icebp
daa
inc
mov
iret
jns
lock
mov
jo
dec
push
mov
push
call
mov
or
int
xor
shlb
add
movsb
iret
imul
mov
sub
test
inc
mov
shll
ror
jmp
xchg
mov
lods
aad
dec
stc
push
and
cmpsb
add
jmp
mov
out
mov
inc
mov
xor
xor
cmp
rcrl
das
inc
mov
hlt
jge
push
adc
imul
in
xlat
imulb
test
jbe
cs
iret
sbb
shrl
inc
pop
sbb
xchg
sub
cli
cmp
or
mov
push
fsubl
sarb
stos
out
idivb
dec
push
push
incb
xchg
out
out
cmc
sub
testl
cmp
inc
lods
je
xchg
pop
xchg
std
mov
mov
sahf
iret
out
mov
lods
pop
push
xchg
cli
mov
and
insb
dec
sbb
popa
cmp
fidivrs
push
and
sbb
aad
dec
pop
xchg
call
movsl
test
mov
mov
fcmovnbe
jnp
ret
sbb
adc
hlt
xchg
mov
mov
test
add
mov
sub
mov
cmpsb
stc
cwtl
ds
xchg
fnstcw
enter
inc
stc
xchg
or
mov
push
outsb
movsl
into
test
mov
lcall
je
data16
in
xchg
enter
jle
and
mov
pushf
jne
dec
das
dec
adc
out
jmp
roll
lcall
add
or
into
cmp
and
fcmovne
fcomip
mov
xlat
mov
xor
iret
inc
sbb
mov
sub
xchg
inc
scas
lcall
pop
sbb
mov
dec
fsubrs
sub
sti
sub
pop
int
adc
pop
lock
mov
push
mov
mov
iret
test
stc
fsub
and
push
cmc
imul
and
insl
pusha
jnp
out
sbb
shl
adc
adc
mov
pop
jne
or
lock
sbb
in
fisubrs
push
adc
rol
dec
inc
sub
into
and
sbb
movsl
daa
repnz
iret
inc
xor
mov
aas
rcrl
push
lea
dec
or
mov
leave
inc
jg
or
push
iret
push
fistpll
ficoms
push
cmc
movsb
call
dec
cmp
int3
mov
push
xchg
mov
nop
jns
aam
mov
add
fsubl
and
mov
mov
xchg
mov
bound
mov
adc
adc
xchg
inc
lds
outsl
sbb
adc
push
push
ds
push
lcall
xor
mov
jg
nop
jb,pt
dec
adc
cld
mov
stos
and
and
cli
sub
insl
sbb
cmpsb
mov
jae
leave
cmpsl
fwait
leave
and
cmp
push
stos
mov
leave
imul
jbe
mov
mov
addr16
adc
stos
pop
call
lcall
jecxz
dec
xorl
dec
sub
jg
movb
lods
mov
lret
stc
adc
and
jmp
hlt
push
sbb
inc
dec
jns
fstl
dec
loopne
jp
mov
cmpsb
xchg
les
push
xchg
mov
fnstenv
adc
lds
inc
mov
cwtl
gs
dec
inc
ret
hlt
mov
add
inc
and
cmp
aaa
xor
rcll
and
and
jo
inc
or
negb
andb
pop
mov
xchg
adc
jb
push
iret
into
or
rol
ja
and
sarb
xchg
adc
mov
add
add
mov
ds
jo
lea
loop
mov
or
cmc
cwtl
add
lret
or
lock
inc
addr16
xchg
xorl
xor
lods
aam
pop
adc
xchg
cltd
mov
pop
repnz
bound
fmuls
mov
xor
cmp
xchg
inc
pusha
popa
lret
and
pushf
sub
push
and
sysexit
mov
xchg
pushf
std
or
ja
scas
test
xor
mov
push
push
and
shlb
mov
pop
mov
in
inc
cli
mov
xchg
cmp
inc
roll
cli
stos
jno
out
mov
sub
mov
shl
es
lea
scas
sbb
jp
shrl
inc
pushf
sahf
mov
cmp
cmp
or
push
and
xor
mov
sti
movsl
mov
sub
cli
jecxz
mov
cmp
inc
dec
sub
ret
mov
xor
and
mov
push
movsl
cmpl
fcmovu
cmp
pop
cltd
xor
mov
push
cmp
outsb
xorb
imul
xchg
insl
shl
and
mov
mov
push
outsl
ror
mov
mov
pushf
push
in
out
mov
ds
fdivrl
push
int
mov
std
or
mov
push
jge
xchg
stos
jg
incl
pop
cmp
xchg
cmc
fs
mov
ds
enter
pusha
jnp
cmpsl
rcl
cmpsl
mov
sub
push
dec
data16
and
or
mov
mov
insl
mov
loop
mov
lds
aam
push
cmp
lahf
jbe
jne
push
dec
dec
cmc
pop
shll
sti
pop
cmpsl
jmp
jb
mov
and
push
or
sbb
lea
push
pop
sub
aad
cmp
or
jg
lds
out
adc
inc
sub
inc
shlb
rol
dec
addr16
pop
dec
andl
aam
leave
cmp
jp
rorl
das
mov
daa
gs
stc
mov
push
or
ja
popf
and
lret
test
mov
adcb
movd
inc
sbb
jl
sub
iret
push
lock
cmp
popa
and
cmp
loop
aad
and
scas
mov
add
loop
into
lcall
dec
add
cmpsl
in
push
adc
xchg
pop
sub
sbb
adcb
inc
rcl
push
dec
cltd
mov
or
enter
inc
jbe
and
and
sbb
push
or
mov
xchg
mov
xlat
inc
call
inc
lock
leave
test
sbb
daa
push
mov
pop
fldcw
mov
in
dec
out
aam
mov
lea
mul
in
neg
xor
mov
adc
ljmp
cltd
in
lock
fidivrs
jno
mulb
fdivrl
mov
add
mov
fdivrl
jns
setp
and
dec
push
push
inc
sahf
push
xor
movsl
rep
negb
std
push
push
insl
mov
add
cli
sub
incl
push
xor
arpl
int
cmp
adc
mov
test
es
enter
fdivs
loopne
xchg
daa
xlat
jmp
jo
dec
fildl
jp
imul
in
loope
xor
push
adc
xchg
lds
xchg
stos
adc
push
in
jbe
adc
scas
pop
popf
je
insl
mov
jo
pop
lea
mov
xor
mov
xchg
xor
dec
rorb
int3
adc
in
roll
cmp
imul
or
sbb
push
int
mov
loop
cmp
cwtl
inc
addr16
imull
sahf
mov
mov
int
push
lods
dec
ljmp
inc
inc
pop
mov
inc
out
cltd
repnz
rcll
inc
jne
dec
pusha
unpckhps
xchg
sub
je
arpl
sub
or
sti
call
lea
orl
rclb
dec
arpl
ja
mov
mov
addr16
lods
inc
sbb
or
pusha
mov
test
mov
orl
dec
flds
rcll
lret
dec
add
fsts
loopne
sahf
cld
mov
int
arpl
ret
imul
sbb
pusha
stos
out
mov
js
mov
shll
arpl
rolb
outsl
cli
dec
clc
mov
aam
and
addb
std
call
sub
or
push
xchg
ret
iret
iret
in
iret
rcll
pop
das
push
mov
sbb
mov
lret
cmp
sahf
mov
dec
cltd
and
or
inc
cmpsl
subl
ss
lds
lahf
in
mov
pop
mov
or
jb
jo
mov
imul
sub
lret
mov
push
pop
loope
xlat
push
sub
roll
push
movsb
or
xchg
and
ss
popf
cmpsb
mov
pop
cmp
xchg
mov
insl
mov
mov
cmp
mov
test
sbb
movsb
push
ja
or
inc
ss
sti
je
jo
sbb
nop
mov
lods
pop
into
outsb
movsl
dec
adc
les
adcb
dec
adc
ror
xor
push
sbb
dec
insl
pop
enter
or
mov
loopne
push
pop
call
sbb
out
fisubrs
push
hlt
mov
jae
or
pop
sahf
sub
add
insl
arpl
call
ret
movb
sub
js
push
adc
fisubs
jo
aad
pushf
mov
imul
sub
mov
push
xchg
cmc
test
test
lds
inc
in
sub
adc
lock
cmpsl
sub
pop
iret
fdivrl
dec
add
int
test
ret
jo
out
inc
pop
insb
test
xchg
mov
inc
ljmp
out
cmp
scas
pop
jns
jecxz
aaa
adc
popa
pop
pop
xchg
inc
mov
inc
ret
popf
fdivr
jp
mov
insb
aaa
dec
push
iret
ja
jecxz
out
test
xchg
mov
repz
jecxz
push
jne
es
inc
mov
mov
mov
repnz
std
mov
test
mov
mov
push
insl
mov
mov
xchg
outsl
pop
adc
cmp
cmc
mov
add
lock
jmp
jge
push
hlt
enter
xchg
jnp
sbb
std
and
dec
out
xchg
pop
stos
js
cs
adc
out
jge
adc
cmp
fisubrs
lock
xor
test
fadds
sbb
roll
sbb
or
cmp
pop
mov
add
cs
in
sar
aaa
loope
cmp
inc
sub
inc
xor
push
fidivs
out
psrlq
jmp
in
int3
icebp
in
in
cli
mov
inc
test
sbbb
sbb
adc
inc
xorb
clc
leave
and
pop
xchg
mov
sbb
sub
shlb
ljmp
mov
dec
jg
mov
lods
imul
lret
mov
ret
arpl
movsb
cmc
gs
adc
adc
or
popa
mov
sbb
mov
rcrl
add
mov
sub
push
outsl
xor
cmp
add
inc
and
ja
xchg
add
xor
movsl
lret
addl
out
dec
push
sarb
mov
les
push
sub
mov
loope
jne
mov
bsf
cmpl
jecxz
sub
dec
jnp
add
jl
sbb
jl
inc
imul
jno
rol
ja
into
pop
pop
fcmovbe
movsb
movsb
mov
mov
inc
cli
lcall
sbb
mov
xchg
jo
rorl
jbe
add
push
ljmp
lcall
jl
sbbl
xchg
xchg
repz
cmp
pop
lahf
movsl
jnp
imul
inc
dec
cltd
xor
lods
bound
pop
mov
out
cmp
std
push
subb
jle
xor
mov
cmpsb
xchg
jp
mov
mov
jb
stc
loop
jecxz
repz
push
ss
xor
push
add
shrl
ljmp
mov
or
test
aad
fildll
js
js
clc
cmpsl
in
mov
xchg
pop
adc
mov
out
ds
test
imul
jb
lahf
pushf
inc
int
js
push
xorb
popa
pop
mov
push
in
insl
mov
or
popa
push
lcall
mov
add
inc
cltd
fnstenv
sti
mov
outsb
stos
xchg
rolb
adc
or
mov
xchg
xchg
cmc
mov
mov
shr
fadds
sub
add
stos
pop
mov
cmc
xor
jmp
in
mov
ja
imul
rol
loop
scas
fstpt
in
pop
jb
daa
inc
push
orl
cmc
jb
xchg
loope
ret
sub
out
adc
lret
dec
push
cli
daa
ljmp
push
and
push
add
insl
mov
out
dec
sub
mov
scas
xchg
mov
iret
or
push
das
fisubl
ret
pop
mov
fwait
repnz
repz
xchg
or
rclb
insl
mov
ja
fucomi
dec
sub
int3
xlat
in
pop
or
pop
mov
dec
ret
and
outsl
jge
jno
inc
ja
mov
loopne
fisttpl
inc
inc
lds
je
mov
popf
pop
std
icebp
enterw
or
add
unpckhps
mov
lcall
inc
popf
stc
movsl
stos
ffreep
je
mov
ret
pop
add
rcrl
push
xor
mov
inc
lods
int3
mov
sbb
and
loope
pop
sti
add
push
pop
dec
mov
stos
or
jecxz
test
xchg
xchg
lock
addl
pop
aas
int
addl
repz
cmp
outsl
sbb
fsubs
cmp
fs
cmpsl
mov
mov
or
addr16
fmuls
jne
pop
lods
mov
adc
pop
mov
cwtl
mov
iret
aam
icebp
cmp
test
js
out
das
into
cwtl
int
jae
inc
xchg
lds
aad
fs
pushf
jne
push
es
inc
pop
sbb
mov
xchg
mov
jle
push
leave
mov
dec
mov
lahf
jmp
pop
jg
imul
dec
jo
xor
shr
and
loope
xchg
jge
xor
xor
jae
insb
repz
lods
mov
fscale
sub
stos
xor
sbb
sbb
repnz
nop
fnstenv
mov
sbb
xchg
call
sbb
stos
mov
push
rclb
shr
lret
pop
adc
imul
rolb
inc
daa
fnstsw
xchg
xlat
push
mov
cwtl
ficoms
pop
subb
xchg
sbb
mov
mov
inc
fisubs
mov
and
shrl
fs
hlt
dec
sarb
adc
dec
aaa
adc
pop
pop
fisubrl
xor
lock
sub
adc
ljmp
sbb
cmpsl
mov
xchg
add
in
mov
mov
insl
sbb
push
cltd
fidivrl
jae
cltd
arpl
in
insl
inc
in
push
fisubrl
or
testb
jge
push
movsb
scas
in
xor
or
and
dec
dec
and
mov
mov
stos
pop
lcall
mov
cmp
and
fbstp
fs
gs
or
imul
mov
ret
dec
dec
jbe
xor
or
cmpsb
push
jmp
leave
inc
fsub
sub
outsl
pop
lds
pop
sbb
and
lods
out
xchg
push
push
sub
arpl
nop
add
xchg
aam
ss
push
mull
cmpsl
cmp
out
lret
xchg
mov
repz
xchg
daa
jecxz
into
push
repnz
jne
mov
pop
mov
pop
or
jno
sbb
cmp
jae
inc
adc
xor
cmp
adc
and
xor
pop
gs
or
pop
mov
mov
rcrb
fbstp
dec
xchg
scas
jns
or
jle
inc
sbb
out
or
jp
negb
lods
test
mov
loopne
aam
lods
ljmp
popa
mov
lock
fwait
adc
adc
fistl
push
insb
push
sbb
xchg
or
das
and
adc
sti
dec
notl
out
into
dec
adc
fcmovnb
dec
je
mov
fcoms
enter
mov
push
mov
inc
ljmpw
mov
xor
and
flds
push
fdivp
fs
pop
ficompl
sbb
in
mov
xchg
xchg
out
int3
mov
add
adc
mov
lds
push
jns
jbe,pn
loopne
rcrb
xchg
dec
jno
pop
icebp
add
xchg
insb
pop
add
out
mov
inc
xchg
xchg
pushf
xor
enter
cwtl
and
sbb
push
and
cmp
push
push
lods
pop
test
fbstp
jecxz
popa
or
in
addr16
sub
mov
enter
call
hlt
lock
pop
mov
dec
push
cmp
ret
mov
pop
roll
mov
pop
sti
subb
fwait
jmp
or
lods
out
sahf
adc
daa
xchg
jmp
inc
or
dec
mov
aam
mov
jbe
std
sar
cli
mov
rclb
mov
jae
mov
lods
xor
aam
int3
call
sub
mov
movsl
lock
pop
outsl
adc
cld
lock
clc
ffree
dec
sub
jns
rclb
or
fcmovnu
scas
test
sub
leave
popa
nopl
jmp
cmpsl
mov
or
push
mov
pop
mov
js
cmp
ss
in
cmp
push
daa
rcrl
imul
lcall
stc
jge
cmp
fdiv
mov
jne
cmp
adc
inc
dec
cmp
jbe
add
int3
arpl
hlt
int3
push
or
lahf
cld
lods
rolb
popa
dec
sbb
push
sbb
mov
loop
hlt
push
jecxz
pop
rcrb
movsb
or
mov
aam
les
insb
pop
rorl
fst
push
inc
mov
cmc
negl
popf
in
push
into
sarb
hlt
jne
cltd
cmp
dec
test
out
jb
mov
lds
push
xchg
clc
sbb
hlt
dec
cmpsb
out
xor
and
xchg
arpl
sbb
xor
xor
dec
out
xchg
notl
cli
insb
gs
jns
in
mov
popa
loope
or
mov
jb
fs
cmpsb
sub
sarb
dec
adc
add
stos
pushf
sub
repz
mov
lret
xor
cmp
addb
dec
daa
in
enter
mov
rcr
jns
aaa
int3
fmull
cli
dec
aam
push
mov
dec
test
push
enter
jg
xchg
push
in
aas
fwait
cmp
cmp
fwait
jl
xchg
sbbb
ljmp
into
shrb
sub
mov
cmpsl
or
inc
push
dec
xor
cmp
add
addb
sahf
ja
add
inc
js
mov
lahf
adc
xchg
fdivrl
mov
jns
scas
adc
repnz
pop
sub
xchg
sub
mov
and
jl
ljmp
les
sbb
adc
lods
adc
ljmp
xor
popa
mov
jmp
mov
dec
lds
mov
cmp
stc
inc
lods
stc
pushf
adc
and
mov
imul
mov
dec
leave
repz
push
pop
lods
jno
jne
aad
adc
aad
xor
leave
mov
enter
call
cltd
sub
xor
and
inc
xchg
dec
ljmp
xchg
or
dec
ficompl
cmp
push
lods
mov
cwtl
mov
pop
sbb
jnp
mov
sub
mov
loop
add
lret
xchg
lcall
int3
pop
push
test
nop
inc
sti
mov
push
js
mov
jp
adc
jns
pusha
fstpt
adc
andl
js
sbb
lock
js
fadd
inc
addr16
shl
pusha
shll
xor
daa
adc
fnstcw
in
mov
push
jo
or
jg
add
pushw
pop
sbb
adc
cmp
ja
xchg
sub
mov
popa
push
add
shl
and
fnstsw
popf
inc
sbb
inc
cld
out
xor
or
mov
pusha
adc
xchg
push
popa
fs
mov
sahf
jbe
in
add
push
in
test
inc
outsl
cltd
dec
push
das
in
pop
cwtl
das
xorb
dec
sarl
xor
jae
test
fcompl
fists
mov
and
scas
loope
sahf
ret
outsl
lock
dec
imul
out
mov
dec
frstor
inc
cmc
fwait
cmp
loopne
pop
test
in
and
mov
fwait
mov
mov
jp
sarl
ret
push
jl
pop
lahf
mov
das
mov
xchg
int3
or
or
jl
iret
inc
sahf
and
call
outsl
pop
or
repz
push
insb
test
lods
adc
sub
pop
sub
cmp
and
ret
push
mov
pop
fwait
xchg
jbe
rorl
mov
inc
in
jg
repz
aas
idiv
es
push
popf
mov
sub
out
and
fs
ss
aam
xchg
outsb
mov
inc
mov
adc
mov
pop
fnclex
cmp
mov
iret
enter
int
cmc
pop
push
xor
and
out
cmp
shrl
push
nop
insl
cmp
lods
dec
lret
or
sarl
jg
nop
daa
jge
gs
je
dec
mov
jl
push
imul
sbb
jg
push
jmp
sbb
icebp
pop
inc
sarl
or
cld
xor
sbb
data16
dec
dec
add
sbb
pop
add
imul
loop
test
inc
notb
add
in
mov
outsb
repz
cmc
xchg
popa
fisubl
push
xchg
inc
jecxz
xlat
out
xchg
outsb
mov
jecxz
add
mov
mov
jnp
lods
adc
cmpsb
test
dec
adc
pop
and
push
push
shlb
ret
popa
jp
jmp
push
inc
pop
fisubs
loopne
fimuls
inc
fmuls
ja
jo
push
inc
pop
push
xchg
fidivs
insl
push
adc
xor
cmp
repnz
ja
imul
je
push
imul
repz
je
out
xor
xchg
movq
daa
das
notb
outsl
fcmove
push
adc
jmp
imul
mull
add
pop
inc
cwtl
bound
imul
test
aaa
mov
je
cmpsl
push
jbe
insl
out
pop
mov
mov
fcoml
xor
adc
dec
xchg
add
dec
shrl
cmp
cwtl
xchg
shrl
push
scas
mov
cmp
addl
mov
jle
call
mov
loop
mov
mov
fisubl
imul
jbe
loope
cmp
pop
lock
push
stc
stos
es
mov
jbe
mov
and
mov
cmpsb
sub
shlb
jb
in
xchg
aaa
aas
mov
pop
push
sub
in
xchg
or
loope
lahf
ss
sub
movsb
sub
fs
and
cwtl
or
pop
test
or
pop
mov
div
mov
adc
jo,pn
notb
adc
aaa
out
mov
sub
js
sti
xchg
ficoml
mov
xchg
or
call
adc
mov
bound
jne
movsb
dec
push
fdivr
or
popf
push
aad
rclb
jnp
sahf
hlt
xor
mov
stos
or
aad
bound
sbb
pusha
inc
push
mov
and
lret
push
lea
in
inc
sbb
push
xor
sbb
xchg
clc
into
mov
pusha
push
in
scas
popf
xchg
xchg
movsl
aas
jge
test
sarl
mov
popa
and
dec
xchg
jg
lcall
push
dec
call
rol
push
mov
mov
shll
pop
ja
sub
pop
jge
pop
ficoml
pop
mov
outsb
fldl
pushf
cmp
dec
sbb
sbb
cmp
xchg
or
ja
dec
movsl
fwait
ds
aas
cmp
push
aas
adc
cmc
mov
stc
jnp
pop
pop
fbstp
push
ja
xchg
cmp
int
push
cmp
out
mov
and
mov
jns
push
pop
pop
decl
or
leave
adc
loope
loope
inc
mov
mov
mov
adc
pop
addr16
mov
es
lret
gs
mov
adc
mov
mov
aas
add
stos
adc
jno
mov
inc
insl
ja
ret
lret
data16
push
dec
inc
jl
xor
push
mov
test
push
cmp
les
lret
and
jle
aaa
iret
sarl
xor
aad
or
movsl
dec
add
cmp
lods
push
mov
xor
pop
or
mov
sbb
rcl
mov
imul
arpl
mov
and
and
bound
aaa
and
test
fisubs
pop
and
aaa
or
mov
jg
sub
add
mov
mov
sub
cmp
sbb
fnstenv
jae
jl
popf
rolb
insl
cli
jle
jl
inc
dec
shrb
movsb
fdivrl
jo
imul
push
ret
push
push
fs
pop
stos
imul
cmp
arpl
push
jno
ss
mov
pop
shlb
xor
adc
inc
inc
mov
loop
push
std
pop
xchg
nop
add
adc
scas
outsb
mov
mov
and
add
pop
imul
into
mov
divl
repz
sahf
insl
xor
jg
popw
jge
pop
mov
and
inc
subb
or
loop
out
and
ret
push
mov
shrl
testl
jns
push
aas
fwait
jne
mov
mulb
rcrl
mov
push
push
pop
mov
movsb
mov
pop
mov
mov
idivb
xchg
fcoml
or
pop
adc
push
mov
sar
arpl
sbb
js
aad
sysret
iret
test
xor
int3
add
lahf
dec
enter
sub
xchg
sub
add
data16
pop
dec
xor
repz
orl
mov
inc
inc
or
insb
loopne
enter
bnd
sub
stos
inc
and
pop
inc
mov
int
in
test
movsb
push
sarb
mov
mov
mov
mov
sbb
ds
js
add
xchg
push
push
test
je
std
in
iret
int3
stos
sub
filds
xchg
into
jnp
add
sbb
rcr
lds
fsubrl
cmp
int
push
inc
sbb
cmc
sbbl
inc
insl
popf
ret
data16
lahf
jne
clc
adc
xchg
mov
cmp
aaa
jns
subl
jge
push
dec
out
push
arpl
sbb
lds
loope
and
xchg
xor
push
lock
cld
outsb
pop
and
sub
fists
xchg
pusha
and
dec
push
mov
or
mov
dec
and
fdivs
stos
push
or
out
pop
notb
and
and
mov
andb
fmul
and
push
sahf
popa
ljmp
jle
pop
inc
mov
ljmp
addr16
cltd
and
fldenv
fildl
fs
sti
js
iret
adc
xchg
ret
jecxz
dec
rcr
mov
jmp
addb
dec
sub
xchg
xlat
jne
jns
rclb
jle
inc
sub
sub
push
xchg
push
jnp
bound
adc
xor
xchg
cmp
xor
xchg
imul
or
insl
mov
out
bound
lock
in
fnstenv
mov
in
addl
lret
dec
add
mov
add
dec
cmc
jnp
mov
shrb
fucomp
push
pop
xchg
ss
pop
or
lahf
div
xchg
mov
or
push
dec
cmpsl
inc
into
push
inc
lods
push
push
and
sbb
mov
repz
push
sub
or
movsl
mov
pusha
xor
mov
push
dec
dec
xchg
cmp
xchg
cmpsb
ja
mov
insl
jg
push
mov
or
rorb
adc
push
mov
push
lahf
xor
ss
cmp
xor
mov
or
push
or
dec
jmp
and
xchg
loop
in
adc
sub
dec
cmc
mov
aam
out
mov
pop
xchg
shrl
mov
mov
ror
scas
fsubl
xlat
sbb
and
pop
jo
and
push
in
adc
inc
mov
pop
add
dec
repnz
outsb
sbb
dec
jmp
negl
iret
jno
push
daa
loopne
or
mov
cmpsl
add
insl
xchg
xor
rcrb
rcll
jg
push
cmpsl
push
sti
dec
mov
out
fwait
dec
add
jns
mov
mov
and
scas
scas
pop
arpl
insl
je
loopne
leave
dec
push
sbb
jecxz
lea
jae
in
fmull
lret
jge
les
fldl
pop
and
jns
cmpsl
clc
decl
repz
jnp
push
xor
ret
sbb
mov
push
xchg
js
ret
jmp
sarb
scas
sbb
mov
sbb
jo
fs
ds
enter
loopne
xchg
ret
jp
int3
or
clc
fmuls
insb
aad
sahf
out
fcomp
iret
jecxz
cmc
or
sbb
clc
loope
and
aaa
or
xor
mov
mov
jmp
cmp
cmpsl
mov
xor
std
dec
inc
movsb
sbb
ja
dec
outsb
es
ljmp
insl
mov
int3
jae
xorl
pop
add
fdivrl
xchg
mov
leave
jle
push
jb
push
and
or
sbb
mov
inc
jne
dec
shrl
inc
out
mov
pushf
fidivl
xlat
dec
shlb
xchg
and
cmp
popa
ss
xlat
in
add
cmp
mov
sub
mov
test
ret
int
push
shlb
idiv
push
fs
mov
test
in
sub
out
and
mov
cmp
push
jb
daa
imul
jl
lds
or
add
adc
out
in
pop
mov
aas
mov
mov
not
dec
mov
add
xor
dec
dec
mov
mov
outsl
jmp
in
fcomi
ljmp
mov
xchg
lods
sub
pushf
lea
inc
pop
rclb
dec
pop
xor
add
pop
pop
xchg
mov
sub
cmp
or
mov
test
fildll
cltd
stc
sbb
inc
leave
inc
fsubrs
fs
out
lret
mov
cmp
aaa
xchg
cmp
das
addr16
rorb
and
xchg
stos
popa
aam
xchg
jge
push
push
push
mov
inc
mov
insl
inc
jnp
add
push
rep
insb
jge
int
not
ja
dec
sbb
lahf
flds
or
dec
loop
mov
jbe
shll
aam
gs
jae
jno
outsb
jge
jbe
xor
stos
loope
js
sbb
lds
adc
mov
or
aas
dec
push
jg
ljmp
or
inc
mov
por
int3
jge
xor
add
gs
add
inc
jmp
xor
out
cld
in
or
cmp
orl
pop
xchg
dec
and
or
lds
shll
push
inc
mov
cmp
js
movsb
dec
aas
movsl
cli
adc
adc
mov
mov
shrl
jmp
xor
push
fsubs
outsb
fisttpl
pushf
cmp
mov
pop
ss
add
fisttps
jge
jnp
xor
out
lods
loope
mov
imul
xchg
push
sarb
jae
xchg
outsl
cmp
sub
xchg
sbb
stos
je
adc
jge
jg
cld
stos
fldenv
std
mov
push
sub
addr16
lods
in
xchg
shlb
sub
fldt
pop
mov
jns
aas
xchg
xor
lret
std
lcall
frstor
mov
push
daa
mov
lret
in
clc
mov
pop
pop
aam
cwtl
mov
sahf
outsl
adcb
sbb
xchg
mov
dec
push
cmpsl
dec
out
loop
dec
xchg
or
mov
stc
xchg
xchg
aam
je
icebp
or
divb
or
pop
leave
aaa
ret
mov
cwtl
add
lret
jmp
adc
leave
ret
push
subl
out
sbb
rcrl
mov
aam
sbb
leave
sbb
mov
or
fs
pop
out
fs
inc
and
pop
mov
popa
stc
push
loop
mov
gs
jbe
sub
pop
jnp
add
or
std
sbb
mov
fs
notb
mov
test
xchg
adc
xchg
and
jle
push
andl
jne
arpl
and
outsl
mov
jle
xchg
cwtl
jne
inc
roll
test
mov
sbbb
jp
xor
movsl
fwait
leave
idivl
push
or
ss
es
in
mov
mov
fsubl
test
dec
icebp
jns
in
mov
adc
cs
bnd
shr
pop
in
in
sub
mov
movsb
call
fldenv
gs
paddsb
jo
es
jg
aaa
std
insb
mov
sbb
flds
pop
add
xor
or
enter
insl
adc
add
in
loop
lods
fistps
adc
cltd
mov
leave
add
add
pop
andb
std
cmp
loop
cmp
jns
sub
mov
pop
cmp
xchg
sub
or
je
push
mov
push
into
out
test
sbb
cmc
adc
insl
jmp
je
or
jae
fwait
sbb
add
push
or
dec
icebp
jp
lret
mov
hlt
mov
push
pop
jb
inc
test
push
cmp
shrb
cltd
pop
push
mov
dec
fdivl
add
dec
and
sub
xor
scas
mov
xor
lods
jns
push
scas
or
cmc
mov
mov
scas
cmp
mov
and
or
call
std
imul
rolb
add
stos
hlt
in
jmp
fcmove
jo
dec
stos
push
loopne
cltd
dec
dec
loope
mov
movl
inc
addl
imul
aas
cmp
adc
scas
fs
jbe
jno
jo
lds
fisubrs
loopne
jno
sbbl
or
mov
ret
or
sarl
push
mov
dec
sub
sub
inc
js
loope
js
xor
pop
cs
mov
pop
bound
stc
mov
in
movl
dec
jnp
fdivrs
xor
push
adc
popf
cltd
outsb
jge
add
dec
inc
or
pusha
xchg
mov
fists
mov
xchg
dec
ret
cmc
sti
lods
aaa
inc
outsb
in
cmp
ja
outsb
pop
test
imul
out
mov
movsl
shll
pop
repnz
lds
cmpsb
dec
or
push
fs
cld
in
addr16
jl
jp
jnp
push
popa
dec
shll
and
ss
scas
dec
ja,pt
mov
sub
dec
jae
cmp
shl
xor
lret
enter
sbb
add
or
sub
andl
rcrb
adc
xchg
mov
mov
outsb
adc
inc
out
mov
mov
cmp
jg
mov
in
pop
add
shlb
cltd
sbb
mov
stos
mov
and
add
cwtl
je
inc
ret
and
das
loop
mov
ja
pop
iret
fdivl
jb
jbe
nop
lock
sbb
ljmp
add
call
push
test
negb
testb
pop
fisttpl
pusha
add
push
add
test
aas
xchg
ds
push
inc
push
jecxz
jns
aaa
aam
add
sbb
mov
xchg
xchg
shl
and
lret
mov
mov
sub
xor
push
cmp
push
icebp
cmpb
push
inc
in
dec
cld
scas
sbb
mov
xchg
iret
rcr
into
fstpl
out
aad
call
mov
xchg
push
jecxz
imul
mov
cmpl
mov
cmp
add
sub
add
test
outsl
fsubl
mov
ds
sub
lret
inc
test
xor
xchg
xchg
out
jecxz
imul
mov
mov
push
das
dec
and
cmp
mov
imul
dec
cs
push
fs
adcb
cld
test
stc
cmp
jbe
mov
push
push
cli
sar
or
and
fldt
sbb
scas
xchg
dec
loope
ret
jp
movsb
ja
xchg
lock
in
jge
add
pop
push
and
testl
adc
and
inc
stc
jae
or
scas
adc
push
std
sbb
pxor
sbb
leave
push
leave
js
xchg
das
cli
int
push
aas
es
dec
repnz
imul
jae
sbb
pop
in
push
mov
sbb
ret
xor
xchg
xchg
ret
cmp
and
jo
adc
dec
push
cmp
jmp
mov
jp
enter
inc
call
add
adc
and
inc
lock
push
jns
mov
cmp
icebp
lret
mov
inc
repz
add
data16
push
fiaddl
lods
sbb
xor
mov
inc
push
pop
adc
jmp
push
cld
or
adcb
sar
mov
jno
pop
outsl
into
and
aad
lea
sub
mov
jle
aad
stos
int3
pop
jno
movsb
in
popf
shrb
pushf
xor
and
sub
imul
cld
mov
std
gs
mov
lods
sbb
xor
mov
pop
and
mov
add
xchg
push
or
xchg
cmp
inc
orl
mov
loope
out
pusha
pop
add
aam
xchg
push
mov
dec
push
ss
push
stos
into
sbb
das
lea
in
imul
or
test
pop
pop
adc
movswl
pop
lods
mov
jnp
inc
jle
fldenv
aam
sbb
jno
mov
iret
mov
push
negb
cltd
lods
or
enter
sub
notb
test
or
pop
sti
dec
adc
cmp
sbb
cmp
lcall
shrb
mov
fsubl
dec
jge
clc
popf
nop
mov
inc
into
adc
rcl
add
outsl
xlat
mov
mov
incb
jb
push
push
int3
pushf
sub
icebp
sbb
mov
lea
fcmovne
sti
clc
ficoms
popa
lret
push
sbb
cmp
popf
adc
ja
dec
add
popf
inc
rcr
lods
into
or
mull
lods
rcr
out
ficomps
sahf
lahf
xchg
dec
and
sbb
out
lods
fwait
adc
jle
int
xchg
mov
jno
xchg
mov
es
sub
or
pusha
cmp
insl
sbb
jge
or
popa
push
push
xor
dec
mov
ljmp
mov
mov
mov
lock
pop
dec
sbb
jg
roll
pop
sbb
and
add
repz
mov
add
fsubrs
ret
shrl
push
mov
bnd
inc
lret
aad
push
out
push
jg
scas
mov
aaa
fsub
push
loopne
push
pop
xchg
mov
sbb
jb
mov
imul
lret
push
pop
jo
jb
xlat
push
ficompl
jle
lcall
shlb
push
cmp
mov
lcall
mov
sbb
xchg
sti
shl
and
lcall
mov
imul
xchg
cmpsl
pop
or
sarl
mov
pop
aam
int
fcmovne
push
pop
add
arpl
cltd
fildll
and
add
stos
lahf
das
loop
inc
mov
fwait
fs
push
xchg
testl
loope
pop
aad
scas
push
xor
add
jg
xchg
xchg
loop
test
push
pop
gs
daa
jge
jge
pop
lcall
cmpsl
cmpl
cmpsl
mov
aad
inc
jg
sbb
jge
mov
sub
popf
xor
imul
jnp
stos
cld
shlb
test
dec
jns
shll
jmp
pop
outsl
fnsave
popa
fwait
loopne
int
inc
test
and
pop
push
xchg
orb
clc
xor
xchg
inc
mov
lret
js
lcall
or
adc
jl
faddp
xchg
push
mov
pop
mov
pop
mov
adc
dec
xchg
inc
insb
jne
out
jmp
push
inc
add
in
xchg
pop
xchg
inc
push
add
fs
insl
jge
loopne
shlb
xchg
stos
or
clc
out
daa
pushf
icebp
enter
cmp
xchg
jge
inc
mov
subb
mov
pop
ret
cs
push
cmp
mull
cmp
loopne
in
arpl
aam
in
pop
mov
lock
imul
mull
shr
aam
sbb
mov
mov
aas
mov
dec
loope
ret
cwtl
xlat
popf
pop
aaa
fistpl
mov
cwtl
cltd
mov
div
pop
pop
lds
rol
lret
adc
lret
jle
jmp
je
push
cs
sub
pop
in
xchg
push
out
movsl
out
pop
jb
sbb
sub
jno
jae
gs
leave
inc
sub
icebp
cld
lret
daa
stos
shl
push
cmpsl
pop
bound
inc
mov
mov
pushf
xchg
jb
cld
std
lds
fidivrs
push
sub
jl
cmc
push
and
pop
ret
mov
popf
mov
cmc
data16
scas
imul
inc
movsl
sub
xor
out
icebp
mov
mov
test
xchg
loope
mov
fimull
dec
test
int
jne
nop
mov
in
xor
mov
ror
dec
cmp
out
push
cmpsb
jg
add
sti
and
sub
cmp
cmp
sub
mov
in
in
sub
sbb
jae
add
add
jno
mov
add
or
xchg
orb
in
cmp
jp
mov
inc
inc
lods
pop
test
stc
sbb
xchg
push
xor
popf
sbb
dec
arpl
mov
enter
push
fstpt
test
test
bound
adc
adc
push
xor
fistpl
and
mov
push
out
xchg
and
jl
ja
lahf
subb
lcall
aad
test
jbe
insb
mov
or
cmp
cmp
sbb
jb
call
or
xchg
sub
jnp
or
adc
testb
leave
mov
or
add
push
sti
xchg
mov
inc
fimull
adc
jg
sub
jmp
rolb
sbb
dec
shlb
mov
rcrl
and
push
movb
inc
scas
and
push
jne
xchg
sub
mov
fdivrl
cmpsb
enter
les
push
roll
clc
cmp
inc
mov
das
fwait
or
mov
scas
adc
pushf
mov
pushf
jno
dec
imull
in
fxch
test
movsl
pop
in
in
sub
inc
pop
add
scas
inc
imul
in
inc
push
cmovne
dec
pop
cld
fldl
fwait
lock
nop
adc
and
addr16
loop
xor
fidivrs
cmp
je
in
dec
mov
outsl
push
test
shll
sbb
and
push
outsl
jmp
xor
xchg
cli
and
fwait
rcll
icebp
push
lahf
sahf
xor
dec
daa
push
clc
mov
mov
or
fstpt
repz
in
sbb
or
xor
stos
movsl
fcompl
lea
filds
mov
xchg
mov
dec
xlat
adc
cmc
push
cli
loop
fmuls
mov
shll
fs
scas
cmp
cs
mov
and
mov
pop
push
mov
sbb
xchg
loopne
jno
shrl
fisubrs
lea
pop
pop
les
push
les
dec
xlat
loop
in
ljmp
add
lret
popf
push
ja
and
and
adc
dec
popa
mov
or
and
cmp
jg
push
add
out
xor
and
and
sbb
xchg
mov
xlat
jmp
cli
push
adc
lahf
adc
int3
pop
ljmp
cmp
pop
jno
adc
outsl
lret
sbb
add
adc
inc
mov
pushf
rcl
mov
add
adc
pop
insl
cmc
pop
sbb
scas
testl
in
mov
fistpll
mov
push
mov
add
lcall
inc
add
lods
or
imul
in
sbb
inc
jmp
sub
pop
adc
js
sbb
inc
push
dec
push
xor
pusha
aad
sub
jle
pop
sbb
bound
js
cwtl
popa
pop
stos
std
rcr
mov
mov
push
mov
ja
imul
cmp
movsb
push
inc
das
insb
aad
jg
testl
xchg
or
mov
add
mov
dec
mov
and
mov
pop
jbe
cld
sti
divb
xchg
mov
out
pop
insb
ljmp
xor
jmp
inc
push
pusha
mov
lock
int3
or
gs
dec
test
pop
faddp
adc
mov
mov
mov
xor
movsb
lret
and
mov
xlat
sahf
and
inc
test
pop
movsb
into
cmp
jne
xlat
sub
dec
cmp
push
mov
popa
add
sahf
mov
cmpsb
cmp
fnstsw
xchg
mov
cmp
icebp
sarl
jbe
fldenv
stos
sub
xor
push
mov
mov
inc
ss
cmp
in
dec
out
in
and
push
int
fsubrs
dec
lock
mov
ds
out
fucom
inc
scas
into
pop
lret
arpl
push
lods
add
ljmp
mov
dec
ljmp
mov
imul
shrl
movsl
mov
data16
ljmp
test
repnz
in
fsubs
sti
mov
and
xchg
push
in
add
lds
dec
stos
gs
dec
lods
jg
rorl
pop
push
bound
cmp
mov
sti
cmp
add
cwtl
mov
les
mov
ljmp
ret
xchg
sbbl
xor
jecxz
insl
inc
pop
dec
outsb
ljmp
ret
lret
mov
cmp
dec
dec
or
fmul
insl
sbb
imul
mov
ds
mov
push
cmp
mov
dec
xor
clc
mov
pop
cmp
sar
cmp
and
pop
adc
call
lods
xor
into
jnp
decb
dec
mov
mov
cmp
mov
mov
into
xchg
mov
jo
jl
lock
outsb
addr16
push
pop
xchg
sub
jnp
push
adc
or
sti
xchg
bound
enter
xchg
adc
adc
cmpsl
sbb
cmp
mov
movsl
scas
cmp
ja
sarb
ja
lods
cmp
xor
stos
mov
inc
adc
jnp
test
mov
icebp
xor
cmpsl
adc
rcl
addb
lock
sbb
mov
addr16
jl
push
fcomps
add
loope
ss
nop
repz
dec
aas
dec
ret
iret
jo
and
iret
imul
cmp
cmp
push
cmc
fidivs
nop
pop
jle
movsl
test
in
dec
pop
cli
mov
sbb
jle
in
aad
in
je
cmp
adc
dec
hlt
outsl
sahf
mov
aam
in
ljmp
daa
pop
jne
fwait
addr16
add
dec
pusha
inc
push
cmp
sub
lahf
sub
mov
mov
shrl
in
mov
add
or
fisubl
sbb
cmp
loope
imull
inc
mov
mov
fs
lret
inc
divl
std
ss
mov
testl
pushf
das
lahf
lea
and
movsb
sbb
pop
outsl
leave
inc
mov
sbb
add
in
cmp
ss
pop
push
adc
in
in
cmp
pop
xchg
rorb
daa
sbb
xlat
inc
adc
popf
ficoml
xchg
xchg
outsb
lods
mov
lea
or
xchg
sub
push
mov
dec
insl
mov
mov
lods
outsb
out
out
push
mov
add
pop
cli
repnz
stos
test
xlat
addr16
xchg
lcall
pop
and
sub
sub
cltd
mov
std
mov
add
notl
sub
jb
jno
xchg
das
outsb
or
es
lock
into
test
add
imul
pop
jmp
inc
xchg
rolb
stos
mov
imul
mov
xor
notl
sbb
jecxz
pop
gs
push
cmpsb
psrld
mov
daa
data16
jno
xchg
jb
xchg
push
and
inc
mov
and
xchg
pop
insb
sbb
and
cli
mov
fcmovb
popa
out
cmc
jg
test
inc
jne
fisttps
sahf
sub
sub
divl
cmp
pop
xchg
add
mov
inc
movsl
mov
pop
shl
jle
in
arpl
outsb
xchg
aas
sbb
shlb
imul
cmp
stos
cmc
daa
pop
mov
lea
or
sahf
out
xlat
mov
cmp
lock
dec
and
xchg
int3
dec
ficompl
shll
or
jo
ss
stos
mov
mov
call
lods
dec
dec
xor
pop
test
scas
or
dec
ss
cltd
cld
dec
sarl
xor
rorb
icebp
inc
mov
sub
adc
sbb
and
jnp
mov
cmp
lods
daa
cwtl
aas
ja
xlat
jo
outsb
bound
inc
and
addb
rcr
popa
or
adcl
and
jns
adc
cmp
or
ljmp
sub
js
ret
lods
push
jne
and
and
lods
call
lea
mov
and
fmull
or
push
add
das
sub
movsb
lahf
call
lods
dec
inc
push
test
ja
pusha
stc
ja
jo
pop
testb
jmp
cmp
pop
pusha
or
outsb
add
cmpsl
pop
mov
popf
mov
loope
fimull
fisubrl
cmp
push
mov
das
mov
shlb
aad
and
mov
addr16
sbb
dec
mov
repz
cmp
inc
cltd
rorb
jmp
cmpsb
mov
inc
mov
xor
bound
pusha
or
sub
cwtl
cwtl
out
jb
test
das
mov
add
xchg
les
loope
jmp
xor
sarb
loope
or
xlat
hlt
js
mov
fimull
push
add
add
ret
jo
into
add
fsubl
sbb
fsubrp
ficompl
inc
fcompl
add
sub
cmpb
sarl
call
mov
sti
outsb
daa
dec
xorl
inc
js
sub
push
filds
mov
sub
mov
mov
push
push
hlt
add
das
movsl
push
daa
int3
pop
nop
mov
dec
std
sub
fisubrl
popa
divb
jb
mov
mov
fcomps
popf
fisttps
sub
mov
push
sahf
cmc
cmpl
repnz
mov
jl
adc
and
dec
add
dec
aas
or
cmc
scas
cmp
fdivl
pop
hlt
pop
dec
inc
xor
add
pusha
xor
xor
pop
outsb
sti
fdivl
jmp
pop
iret
ret
push
xchg
xor
sub
loop
push
stos
int3
aam
aas
mov
push
lock
jo
xlat
ja
mov
and
cmp
test
cmp
ret
fs
stos
cmpsb
out
mov
dec
fiadds
mov
imul
push
daa
adc
mov
cmpsl
mov
loop
cmp
cmp
and
sahf
mov
mov
add
sbb
xchg
enter
test
adc
mov
faddl
xchg
faddp
popf
jmp
test
jae
mov
imul
data16
xlat
imul
retw
mov
rep
pop
cmpsl
jbe
jle
push
repnz
push
lcall
sbb
mov
mov
xor
inc
push
nop
icebp
and
popa
dec
cmp
rcll
roll
lock
add
movsb
outsl
push
outsb
xchg
mov
xor
test
cmp
inc
out
aas
jle
jmp
pop
mov
add
cs
xchg
add
mov
icebp
cmp
inc
or
xchg
jle
out
xchg
xchg
into
sbb
mov
sub
pop
int3
mov
pop
pop
in
or
scas
cmp
pop
or
pop
mov
cmp
imul
mov
cli
fmull
sbb
xorb
pop
popf
dec
movsl
ret
pop
mov
push
out
ss
sub
popf
mov
bound
and
lods
loopne
inc
push
js
adc
push
adc
mov
scas
cmp
sarl
cmp
inc
push
rol
xchg
and
lret
mov
repz
and
sahf
stos
pop
cld
mov
addl
test
push
imul
mov
jbe
int3
cld
into
fdivs
stos
aaa
nop
xor
cmpl
insb
hlt
jge
mov
push
xor
cmp
sarb
jbe
popa
inc
mov
jo
dec
in
loopne
scas
xor
mov
in
hlt
push
push
fimull
mov
out
ret
ja
pop
js
xchg
lahf
or
ds
dec
push
stc
pushf
fwait
pop
nop
mov
scas
mov
lods
scas
and
push
pusha
cmp
jg
push
imul
add
outsb
and
inc
sti
jp
cmp
pop
push
lcall
sub
fcoml
imul
out
hlt
sti
mov
sarl
adc
sbb
xchg
xor
cmp
pop
jp
push
addr16
daa
ljmp
pop
and
subb
cmp
je
push
pop
sub
fsubl
add
jno
sub
mov
movb
jmp
add
cmp
xchg
mov
ror
mov
cmpsb
mov
xchg
xor
or
loop
dec
test
jno
arpl
cmp
cmpl
add
sbb
mov
push
mov
cs
lcall
stc
int3
mov
imul
call
inc
jle
cmp
sub
negl
mov
mov
mov
sbb
push
enter
sbb
mov
fldcw
push
jmp
fcom
imul
push
enter
cs
sbb
pop
in
scas
aad
sbb
mov
push
test
push
xchg
jecxz
or
cmp
sbb
aaa
punpckldq
push
sub
or
je
lret
dec
push
xor
outsb
std
dec
mov
stc
test
inc
mov
xchg
jne
jg
ss
loop
pop
sub
mov
mov
rorb
adc
pop
loope
push
cli
sbb
scas
mov
jmp
and
jle
nop
adc
outsl
das
movsb
les
je
out
repnz
and
es
sub
fdiv
xchg
mov
in
clc
sub
mov
data16
and
and
neg
mov
push
insl
dec
out
aad
or
jecxz
incb
iret
xlat
mov
movsb
inc
sbb
sbb
loope
inc
jge
ja
sub
jl
or
or
out
lcall
enter
pop
or
inc
pop
or
add
mov
test
xor
mov
aad
call
jb
mov
loopne
addr16
stos
cwtl
xor
xchg
aad
pop
fstpl
sub
mov
pop
out
push
imul
add
and
xchg
mov
popf
inc
es
leave
sub
mov
mov
mov
fsubs
int3
into
xor
xchg
leave
test
in
mov
and
test
rolb
mov
fcom
rcrb
xchg
shrl
stos
stos
out
js
jl
out
loope
test
add
push
push
mov
xor
jge
lea
jns
inc
jmp
adc
iret
and
cmpsl
decl
push
mov
add
inc
leave
mov
shrb
sbb
inc
push
jle
inc
mov
jle
mov
mov
mov
cmp
jb
dec
xor
xchg
mov
adc
addr16
mov
ret
mov
jle
jp
mov
pop
lcall
ds
adc
rcrb
adc
imul
sbb
aad
scas
sub
sahf
inc
adc
mov
sbb
push
outsl
es
sbb
call
xor
ljmp
or
les
and
xchg
std
popa
xchg
hlt
mov
aam
lods
outsl
jecxz
push
add
add
mov
xchg
mov
decb
stos
sub
sbb
repnz
adc
negb
or
out
mov
push
inc
lods
out
clc
sbb
inc
mov
enter
xor
cwtl
adc
fbstp
push
sub
cmp
jne
or
sub
jl
or
test
mov
mov
imul
xchg
pop
out
nop
mov
mov
fwait
adc
jge
mov
mov
cli
js
or
in
sahf
fists
jae
iret
xchg
leave
cs
or
out
jno
add
fisubl
shl
shrb
push
in
inc
mov
mov
lods
mov
dec
lds
inc
or
sti
jne
mov
cs
push
xor
inc
cmpsb
sbb
mov
cmp
add
icebp
pop
mov
jne
sub
jmp
sbb
gs
inc
std
push
aam
cmpsb
xor
jnp
mov
dec
std
sub
mov
stos
mov
stos
outsb
adc
cmp
aaa
adc
dec
jae
pop
sub
ss
std
mov
adc
jbe
sbb
addl
mov
mov
hlt
mulb
add
out
cli
shlb
pop
jle
cwtl
daa
sub
adc
mov
or
lret
mov
or
mov
lea
stos
xlat
xchg
mov
fwait
cmpsb
sbb
mov
sub
inc
jb
or
xchg
lock
push
movsl
out
and
pop
popa
in
stos
mov
mov
pop
mov
call
cmp
adc
repz
mov
sarb
negl
sub
fwait
enter
jae
mov
ret
pop
stc
inc
lret
clc
shr
int
xchg
and
inc
in
pop
pop
sbb
cmp
daa
xor
sbb
cmc
add
dec
lcall
jecxz
gs
xchg
xchg
jecxz
loopne
dec
inc
cmp
sub
sub
aam
fcmovnu
or
scas
push
stc
ljmp
lock
inc
lret
and
ss
sarl
push
jbe
imul
ja
cmp
fucomip
into
mov
sbb
dec
int
test
xor
insb
mov
adc
jnp
stos
cmp
cltd
dec
xchg
data16
movsb
fsubr
scas
lret
mov
fnsave
pop
xchg
adc
nop
mov
pop
adc
data16
pop
dec
divb
mov
ret
je
aam
orb
fildll
push
mov
mov
sub
or
xchg
push
repz
shr
es
mov
inc
xchg
inc
movsb
pop
mov
jbe
sub
push
jnp
mulb
push
shrb
test
cltd
cld
push
shr
sbb
push
pop
or
mov
xchg
jb
mov
in
in
xor
int
fidivrl
xchg
add
notb
icebp
shlb
mov
push
loop
adc
dec
lods
dec
or
and
lret
frstor
pop
mov
push
pop
cltd
and
xchg
mov
imul
jb
or
or
lods
mov
test
sti
data16
jns
pop
dec
hlt
or
mov
cmp
and
mull
std
mov
pop
inc
cmp
mov
mov
mov
sbb
add
pop
ss
lret
and
insl
es
adc
sahf
lds
movsb
pop
jg
add
fs
ljmp
mov
jnp
and
std
sarl
aaa
jmp
and
out
inc
push
pop
cmp
jp
lret
push
enter
in
pop
iret
stos
xchg
sub
cmp
push
cmp
cs
mov
cmc
arpl
and
pop
les
mulb
push
push
cmpsl
addb
lods
cs
pop
imull
or
test
gs
pop
and
jmp
push
out
into
add
jne
imul
push
fldl
rcll
sub
fldt
mov
mov
adc
inc
insl
sub
in
push
arpl
dec
test
lods
xchg
sti
jb
dec
aad
adc
popf
rcrl
lret
cmp
cmp
cmp
outsl
aaa
add
xchg
pop
or
btr
mov
and
inc
leave
mov
arpl
xchg
popa
and
sbbb
addr16
les
aaa
adc
ljmp
jae
or
inc
jns
mov
ja
dec
stc
jge
dec
int
dec
lret
cmp
lods
aaa
add
test
inc
and
and
cmp
mov
lcall
gs
mov
inc
pop
pop
mov
mov
cli
mov
clc
prefetchwt1
add
sahf
cmp
inc
or
ret
xchg
dec
ljmp
push
cmp
lods
insl
sahf
into
mov
dec
mov
or
xor
dec
ret
jle
mov
lods
inc
adcl
push
mov
mov
lods
aas
xlat
mov
sub
scas
lock
and
cmp
sahf
mov
mull
push
jne
adc
out
loop
cmp
fwait
mov
adc
lods
add
pop
test
fld
mov
sbb
je
push
sahf
dec
mov
pop
pop
pop
testl
sbb
sbb
inc
sbb
fsts
cmpsl
pop
mov
inc
shll
jecxz
hlt
and
inc
pop
mov
clc
jle
mov
lods
in
push
dec
sub
out
add
push
sub
push
jno
int
cmp
mov
sub
ret
rorl
jo
lahf
mov
jo
xchg
adc
pusha
lret
shrb
andl
outsb
mov
dec
repz
mov
cmp
mov
data16
fcoml
cmp
inc
fcmovnb
in
push
ljmp
cmp
repnz
pop
adc
dec
nop
icebp
mov
bound
lods
rcrb
fimull
imul
dec
cmp
rcll
insl
mov
xchg
inc
inc
sub
fimull
je
dec
movsl
sti
jb
jnp
cmp
push
fstpt
inc
mov
rorl
jo
adc
into
arpl
adc
insb
add
out
jne
sub
inc
xchg
cmp
mov
lods
fs
aad
iret
mov
xchg
repz
rorb
sub
dec
shlb
mov
pop
movsl
enter
jg
mov
sub
push
dec
push
push
lock
shlb
movsl
xchg
pop
push
sub
rorl
sub
ficomps
xchg
mov
mov
mov
mov
jge
ds
stos
cli
test
divl
inc
stc
clc
arpl
fwait
dec
lahf
xchg
pop
jge
jno
sub
test
cmp
outsb
pop
and
push
dec
notl
and
xor
xchg
sub
or
adc
adc
std
lret
xor
or
les
dec
int
stos
inc
test
repz
inc
mov
ds
movntq
mov
call
add
shll
xor
dec
xor
adc
rorb
mov
xor
mov
in
movnti
and
repnz
insb
mov
inc
xlat
sub
fsubrl
sub
rorb
sub
cmp
push
outsb
aad
fiadds
cli
cmpsl
lock
push
cmp
lods
call
pusha
mov
jmp
or
add
aaa
fidivrl
lods
cmp
cmpsl
mov
popf
pop
mov
add
mov
sti
inc
or
xor
mov
jbe
sbb
add
pop
inc
dec
sub
fistl
sub
jnp
cmp
inc
inc
idiv
inc
inc
adc
lahf
xor
jg
in
hlt
mov
and
pop
dec
cli
jmp
pop
sbb
pusha
dec
and
xor
inc
or
add
mov
and
mov
jp
and
daa
lret
push
jge
dec
in
push
dec
pop
fidivs
adc
pop
sub
cmp
mov
ja
movsb
mov
mov
jbe
test
es
ss
xor
test
inc
mov
push
ds
mov
inc
aas
cmp
pop
mov
push
bound
or
roll
dec
inc
shlb
mov
xor
add
push
dec
cltd
iret
push
mov
stos
lret
or
pop
xchg
popf
insl
rcr
ror
or
and
push
ret
scas
jo
adc
sub
stos
movsb
setbe
cmpsl
push
xchg
cmpsl
and
push
and
mov
daa
fs
cmp
lds
stos
sbbb
inc
dec
rorl
mov
popf
mov
mov
orl
std
clc
fiadds
mov
mov
inc
test
out
xchg
stos
or
bound
push
xchg
nop
mov
out
mov
sub
movb
stos
aas
jmp
xchg
push
test
shr
mov
dec
or
jmp
inc
loop
int
in
jno
arpl
xchg
shll
repnz
and
add
adc
enter
xchg
adc
pop
int
repnz
sub
out
sub
clc
xor
sbb
lret
imul
mov
sub
movsb
mov
cmp
xchg
xor
sub
lret
mov
mov
int3
test
aad
sbb
push
xlat
jbe
sbb
lret
scas
popa
insl
fmul
das
rcr
push
filds
push
add
pop
repz
rcrl
movsl
jb
ret
mov
dec
ret
add
shrb
fnstsw
mov
call
mov
imul
nop
scas
lret
mov
xchg
xchg
or
addr16
mov
sub
sbb
mov
flds
mov
jne
lcall
pop
mov
data16
loope
and
dec
repz
lods
pop
push
fs
adc
pop
jg
mov
xlat
pop
dec
mov
xlat
hlt
mov
xchg
sbb
adc
push
xchg
pop
es
mov
stos
icebp
xor
outsl
pop
loope
push
adc
shr
cld
rcrl
push
jl
pop
fistl
xor
jns
mov
jae
add
orb
jg
loop
ds
jbe
sbb
jge
push
cmpsb
inc
xchg
inc
pop
jle
nop
scas
popa
loopne
add
xchg
mov
insb
adc
sbb
cmp
test
push
mov
mov
dec
xchg
int
pop
xlat
test
fmul
pop
mov
jge
push
mov
rcrl
fadds
add
in
push
add
jbe
stos
xchg
lods
pop
outsb
cmp
and
xchg
insl
dec
mov
repnz
pop
sbb
lock
mov
ja
repz
xchg
pop
mov
cmp
push
mov
mov
repz
pop
and
out
pop
sub
lds
insl
push
in
negl
mov
jl
js
sti
sub
jecxz
xchg
push
fcmovu
mov
bnd
enter
test
scas
leave
inc
cmp
mov
xchg
jp
push
pop
cmc
mov
test
push
mov
adc
fistpll
xchg
lret
sarb
fisubrs
adc
push
push
xchg
lock
in
mov
andl
mov
stc
dec
jnp
mov
xchg
imul
daa
sahf
mov
lea
ffreep
aam
jns
in
or
fadds
mov
cli
xor
ss
stc
push
loop
cmpsb
cmovle
loopne
dec
adc
adc
mov
aad
mov
sbb
cli
sti
js
cmp
add
imul
and
mov
cmp
insl
adc
clc
pop
lea
xchg
jle
sti
outsl
push
imul
pop
fbld
in
cmp
jl
push
push
xor
pusha
pop
jne
or
sbb
pop
cltd
mov
or
aas
outsb
enter
mov
movsl
jmp
lret
or
mov
popa
icebp
rcll
adc
cmp
loopne
rcr
adc
fdivrs
icebp
add
stc
fistpl
ss
mov
insl
inc
adc
repz
in
xchg
pop
loope
push
cmp
add
shll
cmp
cmp
push
loop
into
ss
pushf
mov
jmp
test
mov
iret
test
and
fistpl
or
stos
scas
xor
mov
pop
andl
mov
js
cwtl
lahf
sbb
adc
pop
rcrb
pop
fidivl
out
mov
es
or
pop
sbb
shll
add
inc
call
test
xchg
jp
popf
xor
xor
add
sahf
xor
fs
dec
sahf
lea
iret
dec
pop
std
scas
mov
pop
pop
ja
cmp
fcmovnbe
mov
xor
pop
aas
lods
mov
add
cmp
xor
movsb
xor
and
icebp
and
jp
das
mov
cmp
sub
inc
jbe
rcrb
int3
mov
or
fucomi
sub
mov
ds
jnp
mov
add
inc
es
mov
cmp
andb
out
pop
fcom
into
sbb
ss
ret
out
lock
and
ds
ss
sub
xchg
int3
das
cwtl
mov
dec
int
cmp
sub
dec
dec
sub
jnp
mov
outsb
addr16
repnz
mov
xlat
mov
pushf
pushf
into
jge
rol
pusha
ds
fcmove
xchg
and
mov
add
imul
test
mov
and
or
cmpsl
sahf
dec
cmpsl
icebp
or
lds
in
iret
pop
cmpsb
push
or
rcll
jg
out
mov
insl
and
inc
mov
xor
imul
sbb
dec
es
sahf
leave
cmp
nop
sbb
test
and
cmp
lret
mov
xchg
cmp
lock
bound
fadd
cmp
pop
push
gs
xor
sub
repnz
pop
out
xchg
hlt
andb
mov
mov
or
lret
fabs
pushl
adc
int
xchg
lcall
xchg
cmp
push
xchg
and
rorb
add
inc
mov
fsubl
or
xchg
pop
and
aam
pop
or
lret
pusha
aad
mov
ja
push
push
jno
mov
inc
dec
inc
or
pop
or
adc
push
inc
adc
lcall
pop
jbe
gs
test
push
jl
bswap
push
pop
and
jo
lea
inc
out
mov
lock
rclb
movl
xchg
ret
sub
mov
movsb
out
sbb
add
sub
mov
arpl
movsb
dec
mov
ja
add
in
test
mov
fistpl
cli
or
mov
jno
xlat
in
and
mov
rolb
fimuls
int
mov
dec
jg
fidivl
das
int3
mov
fidivl
push
out
jns
sub
xor
cmpl
add
int
ret
fldl
jnp
stos
sbb
and
jns
repz
pop
ja
sbb
and
mov
shll
out
and
mov
pop
insb
xchg
ljmp
std
add
and
push
addr16
fwait
loop
adc
dec
movsb
test
mov
mov
dec
cmc
cwtl
dec
jl
and
cmp
sbb
mov
sbbb
mov
ss
xchg
sbb
dec
sbb
test
lds
jo
cmpsb
mov
sub
sahf
nop
cltd
cmp
mov
movl
pop
out
mov
andps
mov
or
jns
mov
leave
xchg
sbb
iret
loopne
inc
add
mov
pop
loopne
cmp
xlat
fmull
xor
dec
jmp
sbb
pop
adc
sbb
lods
movsl
push
push
nop
pusha
leave
mov
std
adc
js
and
inc
cmp
dec
pop
dec
jb
add
mov
cmp
das
in
imul
nop
ljmp
pop
mov
bound
je
pushf
sahf
xchg
outsb
mov
pushf
andl
sbb
push
stos
into
out
outsb
gs
pop
push
mov
repz
mov
es
movsb
cmp
icebp
test
xchg
inc
push
std
in
out
sub
fisubs
mov
and
push
dec
es
cli
sbb
filds
out
js
data16
mov
inc
sbb
inc
je
aas
rclb
mov
xchg
pop
loop
push
test
or
jge
or
lock
sbb
dec
add
jecxz
scas
movsb
loopne
mov
mov
xor
shrl
mov
mov
pop
leave
mov
bnd
les
cmp
scas
jecxz
pop
mov
in
adc
adc
dec
add
lock
cmp
cmp
adcb
outsb
mov
pop
leave
mov
pop
jo
add
in
loope
pop
mov
push
and
ss
aas
outsb
mov
movsl
xchg
nop
add
mov
fildl
cmpl
xchg
outsl
test
imul
sbb
shrl
cs
cltd
shlb
fs
js
cli
xor
test
addr16
cmove
jle
jmp
roll
cmp
fwait
ljmp
cld
rorl
jl
sbb
adc
xlat
mov
ds
idivl
negl
push
sbb
repz
sahf
add
and
jbe
mov
js
mov
mov
outsl
jne
mov
pop
aam
shll
mov
out
jae
or
push
inc
xor
pop
xor
shll
clc
icebp
fcoms
or
push
pop
add
pusha
sub
cmc
mulb
inc
lods
imul
mov
lcall
or
sub
jns
mov
push
cmp
adc
push
xchg
outsb
sub
mov
dec
pop
hlt
mov
ficoml
xor
test
fxch
pop
xchg
jle
cmp
jecxz
sbb
loop
dec
pop
mov
sbb
lds
js
xchg
lods
nop
jecxz
pop
bound
jmp
aas
clc
imul
clc
bound
repz
fildl
ja
outsb
and
pushf
out
push
sub
imul
insb
adc
push
out
into
cmp
xor
pop
pop
outsb
cmp
mov
movsb
loop
jp
test
pop
xor
std
mov
mov
loopne
in
jb
pop
push
rcll
in
sahf
aaa
pop
ret
pop
dec
xor
mov
pop
adcb
daa
movsl
fadds
add
fisttpl
lahf
pusha
sub
inc
into
cwtl
sbb
cmpsb
data16
mov
xchg
adc
mov
fcoms
fsubs
xchg
mov
call
das
mulb
push
rcr
lds
jo
stos
or
out
ljmp
sbb
jns
orl
pop
gs
lcall
out
fcmovb
lea
in
cmp
shlb
adc
out
sub
xor
inc
imul
jo
xchg
decb
xor
mov
inc
loop
and
cmpsb
mov
mov
aam
das
mov
in
push
inc
mov
call
shrb
cmpsb
cmp
movsl
outsb
mov
xchg
push
rsm
int3
out
data16
dec
fsubrl
push
and
movsb
ja
adc
cmpsl
mov
jle
arpl
mov
xchg
seto
out
pop
loope
xor
jl
adc
pushl
mov
dec
jb
imull
xor
push
jbe
jno
fdivl
push
fisubrs
jg
mov
movsb
mov
sub
mov
mov
jmp
testl
pusha
adc
or
pop
dec
xchg
pop
sbb
xor
xchg
decb
push
out
cwtl
push
mov
in
xchg
fmuls
sbb
fildl
sbb
mov
add
js
rorb
jo,pn
xorb
scas
fnsave
mov
ret
xchg
pusha
sahf
hlt
mov
lret
pop
sub
pop
jnp
dec
cmp
stos
stc
addr16
pop
inc
or
mov
out
sbb
pop
inc
in
repz
or
xor
push
sti
lret
psrld
mov
lahf
popf
push
xchg
pop
test
lcall
lock
adc
xchg
outsb
incb
mov
xchg
and
inc
jp
outsl
and
sahf
in
jp
xchg
movb
pop
pop
xor
dec
cmpsb
nop
push
adc
jb
fcoml
leave
mov
cltd
pop
hlt
gs
inc
adc
or
fnstsw
addr16
clc
movsb
jle
or
in
cmc
test
invd
stos
cmp
and
fisubrl
out
mov
repz
adc
insb
pop
cwtl
mov
adc
in
and
adc
xlat
dec
jecxz
push
jl
daa
jae
xor
out
ja
fwait
sub
mov
loope
rcr
or
xor
xchg
lods
into
dec
lahf
xchg
dec
je
or
mov
mov
mov
in
mov
js
mov
xchg
sub
dec
test
add
movsb
scas
bound
das
or
fists
test
dec
xchg
adc
jl
push
push
aas
push
int
nop
stos
sbb
cmp
mov
cmp
adc
xor
sub
pop
repz
mov
fcoml
outsb
in
push
ljmp
and
aad
adc
pusha
mov
jns
inc
mov
or
dec
jno
or
push
scas
pop
out
xchg
xchg
fwait
sub
popf
lds
sub
lret
mov
pop
out
mov
add
and
lahf
pop
sub
xor
pop
dec
jmp
inc
xor
cmpsl
mov
adc
data16
stc
repnz
mov
jle
xchg
inc
cs
int3
add
pusha
stc
jns
jb
and
xor
xorl
push
pop
stos
and
cltd
in
mov
cltd
pop
mov
orl
mov
fidivrs
xchg
les
xchg
xor
push
enter
sbb
hlt
loopne
xchg
push
inc
pop
mov
xchg
movsb
or
pop
pop
mov
mov
imul
outsl
and
lea
pop
fmuls
adc
sbb
mov
nop
sub
test
flds
adc
imul
adc
gs
xchg
lea
sbb
dec
rcr
add
daa
fs
jae
push
xadd
leave
pslld
mov
ja
xor
sahf
and
inc
push
aaa
push
jbe
test
sbb
and
rolb
repz
mov
pop
cmp
mov
fwait
pop
scas
xchg
xor
fwait
ret
imul
popa
out
jnp
movsl
enter
jns
inc
mov
or
loop
ret
int3
jg
jle
add
es
pop
cs
mov
call
cmp
outsl
push
les
enter
testl
frstor
xor
mov
repz
jecxz
cmp
sbb
inc
fstpl
add
and
mov
push
inc
push
lock
movlps
inc
pop
add
jae
push
shll
push
pop
jns
push
xchg
fdivp
cwtl
pop
sub
mov
jl
leave
into
jo
xor
imul
hlt
lahf
pop
scas
mov
popf
mov
and
push
mov
pushf
lret
ret
add
cmpsb
sub
cwtl
cmp
jo
sbb
xchg
push
cmp
jg
inc
fcomps
cmp
lods
pop
mov
rorl
mov
mov
jae
mov
adc
rcrb
adc
das
push
dec
gs
jb
cmc
add
pop
mov
cmp
or
in
cmpsl
enter
and
inc
cmpsb
rcll
js
ficompl
ficomps
add
adc
pop
test
icebp
and
jns
call
sbb
xor
outsl
repnz
xor
popa
xor
outsl
adc
inc
pop
std
movsb
push
sbb
push
out
add
in
in
addr16
in
in
ret
mov
lret
pop
test
mov
insl
xchg
rolb
hlt
lock
hlt
inc
mov
stc
mov
sbb
or
fs
xchg
sti
lea
fadds
jle
gs
mov
pop
cmpl
hlt
xchg
sahf
loopne
mov
xchg
push
pop
lret
ret
push
push
adc
add
dec
mov
fwait
std
add
shrl
fistps
jmp
out
dec
call
cs
stos
cwtl
jge
fidivrs
call
jg
xor
insb
inc
sarl
push
inc
jnp
or
sarl
dec
jmp
loope
push
mov
mul
push
out
xchg
and
pusha
setae
js
outsl
cwtl
add
push
shrb
cmpsl
fwait
sbb
jb
adc
sbb
hlt
popa
mov
inc
mov
inc
pop
loopne
fnsave
sahf
inc
push
or
inc
sub
dec
daa
es
jne
stos
pop
fidivs
lahf
dec
or
mov
jbe
sbb
adc
inc
jecxz
ret
push
add
das
dec
push
movsb
push
gs
es
adc
movsb
xor
and
int3
xor
inc
fisttpll
xor
mov
or
sub
xorb
cmp
sbb
sub
cmpsb
cwtl
inc
cli
imul
mov
nop
push
xchg
hlt
dec
and
pop
ljmp
imul
cmp
mov
push
jnp
in
mov
cmp
dec
pop
into
add
mov
add
stc
xor
sub
pop
jns
movsb
adc
mov
insb
inc
pop
xor
rol
and
push
movsl
js
int3
nop
aaa
jp
subb
insb
and
stos
jns
xchg
xor
notl
nop
sub
jno
mov
xor
adc
sub
test
pop
dec
mov
xorl
xchg
sarb
jbe
stos
mov
add
push
cmp
mov
inc
loope
es
cs
mov
xchg
aaa
movl
scas
xor
add
sbb
int3
test
xlat
xor
cmp
insl
adc
in
mov
mov
test
dec
jo
inc
inc
das
stc
adcl
mov
lock
push
mov
dec
mov
out
shl
or
xor
andb
push
fisubl
arpl
test
sub
out
das
xlat
inc
cs
rcr
inc
or
loop
and
push
pop
rorb
dec
xor
sub
inc
xchg
xor
sbb
lock
mov
push
add
mov
test
es
or
mov
sbb
arpl
xchg
xorl
push
xor
subl
mov
lods
jg
lds
xchg
sbb
icebp
push
mov
testl
stos
or
dec
sub
stos
lods
shll
xchg
outsl
jnp,pn
mov
push
insl
outsl
ljmp
lret
jecxz
pushf
in
cs
jp
sbb
xlat
dec
sub
daa
xchg
aam
cmp
and
adc
lahf
pop
mov
push
aam
pop
mov
in
imul
add
lret
lods
gs
pushf
lahf
popf
les
jp
repnz
jne
fstpl
dec
out
popa
scas
mov
lret
sbbb
les
mov
shlb
sbbl
and
pop
ja
inc
cmpsl
rcl
sbb
je
xor
jg
push
negb
mov
mov
mov
dec
ret
mov
add
xchg
in
jp
popf
mov
inc
jno
sbb
lret
fnstsw
xchg
push
jbe
sub
mov
mov
dec
jg
mov
icebp
lock
xchg
xchg
imul
sbb
js
dec
pop
sbb
mov
cmp
xchg
lret
jns
adc
test
mov
insl
jecxz
sti
insb
test
pop
lea
add
mov
xor
std
push
ret
jp
fisubl
stos
test
adc
lock
push
push
adc
out
std
jl
inc
jmp
fisttpll
sub
sub
hlt
fwait
loope
jp
scas
fcmovb
or
mov
out
mov
xchg
add
cmp
scas
ds
adc
hlt
lods
and
lahf
fldl
adc
ljmp
and
adc
rol
or
push
xor
mov
stos
mov
daa
pop
sbb
in
in
mov
sub
push
push
mov
stc
and
push
mov
xchg
push
cmp
jns
ret
icebp
jbe
push
mov
cwtl
fistps
loopne
mov
jge
fs
loope
rcrl
aam
out
cmp
pusha
pusha
dec
push
adc
sub
in
jb
js
lea
test
xchg
out
insl
imull
cmp
inc
aaa
pop
jecxz
cli
dec
jnp
arpl
mov
jg
int3
sub
call
pop
fmuls
add
jmp
orb
pop
inc
or
push
imul
adc
xchg
inc
push
fucomi
ss
je
dec
sub
sar
scas
clc
push
in
popa
out
loop
and
mov
add
or
mov
arpl
jg
sbb
negb
imul
enter
jecxz
scas
and
pop
fwait
lahf
gs
enter
jmp
mov
scas
dec
cli
cmp
pop
add
pop
dec
sbb
sub
and
ficomps
and
xor
incl
xchg
in
jmp
cmpsl
ret
imul
dec
adc
stc
jmp
cmp
fbld
xchg
fwait
push
pop
add
sub
mov
cmp
pushf
mov
into
cmpsb
xchg
cmp
rcrb
iret
or
jp
mov
pop
mov
or
les
fildl
sub
mov
mov
inc
mov
aaa
call
dec
das
hlt
loope
cs
test
cmp
push
pop
xchg
nop
xchg
and
daa
pop
lahf
ret
dec
push
lcall
inc
mov
push
jl
loope
ret
outsl
mov
in
sahf
xorl
mov
popa
or
repnz
inc
adc
nop
dec
jecxz
jae
xor
shrb
mov
pop
test
lcall
pusha
cmpsl
notb
ret
mov
in
or
xchg
cld
out
outsb
xchg
setns
jl
repnz
sub
pop
lods
cmc
ret
or
movsb
sub
out
fdivrl
popa
mov
daa
cwtl
int3
or
sub
cmp
mov
inc
rorb
rorb
cmc
enter
pushf
mov
and
push
stos
and
out
push
sbb
add
push
adc
xchg
or
into
enter
aaa
adcb
movsb
inc
sub
sbb
popf
inc
sub
scas
addr16
shlb
adc
sub
lock
iret
mov
repnz
daa
push
or
and
aad
pop
daa
or
push
pop
rcll
xchg
pop
sbb
arpl
insl
scas
add
fistl
mov
push
cmp
inc
insb
xor
inc
cmpsb
mov
ds
out
fcoms
push
sub
jmp
jb
cmp
dec
xor
pop
mov
pop
pop
jns
insl
in
push
dec
repz
jae
adc
and
push
cli
out
mov
xchg
cmp
add
es
repnz
jnp
ja
push
mov
arpl
andb
jno
and
insl
loopne
dec
cmp
fiaddl
or
mov
sbb
push
dec
fildl
fisubrs
xor
fcmovne
adc
inc
scas
cmp
jbe
xchg
rclb
loop
xchg
add
xchg
sub
or
inc
pop
push
shll
add
sub
pop
cmp
ds
xor
or
dec
rol
or
mov
ret
xchg
fcoms
pop
ret
pusha
xchg
loope
or
jns
jmp
xor
mov
xchg
fdivrs
fs
jecxz
adc
push
or
cli
mov
hlt
push
pop
movsl
mov
das
mov
fcmovnb
push
movsb
inc
jo
scas
inc
dec
xor
xchg
push
mov
mov
and
rep
cmp
mov
fwait
jo
out
jns
and
leave
push
xchg
dec
lea
sbb
mov
push
iret
loope
rcl
shl
rclb
pop
dec
iret
inc
cwtl
add
and
sbb
xlat
add
xchg
inc
fs
out
out
xchg
jmp
gs
aad
lock
sbb
out
mov
sbb
add
into
fldcw
xchg
push
and
clc
out
push
and
pop
outsb
push
lock
sbbl
xorb
dec
xchg
adc
jle
cltd
orl
out
lds
outsb
out
pop
jmp
push
andl
inc
inc
pushf
mov
push
cmc
inc
jns
addr16
jmp
xchg
movsb
jns
dec
jne
push
push
push
and
mov
pop
and
and
jo
jg
sub
sahf
push
mov
dec
inc
insb
jno
fidivl
dec
movsb
jo
or
es
int3
or
leave
jle
pop
sub
stos
dec
rorl
out
icebp
test
mov
popf
mov
pop
mov
pop
dec
add
cs
cmc
jns
loope
movsl
adc
mov
push
jns
adc
push
mov
xor
inc
push
loop
add
mov
stc
xchg
cltd
into
daa
mov
mov
add
in
jp
cmpsl
pop
clc
scas
pop
outsb
lea
push
ja
stc
or
aad
xor
cltd
jg
rcll
sbb
mov
jmp
stc
bound
fisttpll
mov
push
insb
push
push
mov
rcll
push
xchg
aad
ficompl
and
jle
dec
fnstsw
mov
popa
mov
xchg
addr16
add
imul
aas
fwait
xor
fdivrl
cwtl
jnp
mov
jmp
mov
adc
ss
pop
sysexit
fistpll
and
aas
test
insl
lock
inc
daa
jbe
insb
push
jns
xchg
cwtl
mov
xchg
mov
sbb
aas
jbe
std
push
shl
nop
in
push
dec
jae
xor
pop
gs
mov
jns
lds
push
sub
pop
jg
sub
js,pn
add
notb
add
daa
addr16
imul
aas
sbb
xor
xor
lret
vmovlps
mov
inc
adc
jmp
je
imull
aam
ljmp
sbb
cltd
or
mull
xchg
lret
jo
dec
push
and
xchg
xchg
popf
daa
arpl
jnp
mov
ss
pop
add
cmp
in
sbb
mov
loope
addr16
fcomip
adc
sub
push
fwait
in
mov
push
sub
dec
popf
sti
xchg
cmpsb
push
mov
mov
je
loopne
leave
mov
inc
adc
cmp
jb
pop
insl
stos
enter
add
jmp
or
add
clc
fcompp
insl
jb
inc
ja
sub
outsl
fsubrp
or
xor
movsl
in
sub
dec
jmp
xchg
mov
lds
pop
les
lret
aam
hlt
popf
hlt
int
loope
pop
out
mov
fcmovbe
add
test
cmp
pop
jae
adc
pushf
mov
xchg
notb
nop
in
inc
test
test
push
test
inc
jmp
pop
insl
fs
jo
and
jb
mov
or
les
ficoms
cltd
add
cmp
sub
mov
addr16
xchg
cmc
aad
movsb
sub
test
add
ds
mov
jge
add
xchg
push
mov
out
inc
outsl
movsl
push
xor
test
mov
cmpsb
mov
xchg
sahf
loop
ror
cmp
push
mov
cmpsb
xor
mov
adc
loope
fistpl
pop
repz
sub
xchg
test
add
call
test
hlt
cmp
lret
jae
push
dec
xchg
imul
rclb
fbld
inc
xchg
add
jge
rclb
stos
into
sbb
adc
insl
out
test
mov
push
test
jg
mov
dec
jge
jmp
addl
jbe
test
movsl
lcall
xorb
pop
push
sbb
inc
adc
push
xchg
loope
add
enter
mov
insb
imul
mov
add
testl
test
jmp
leave
insb
push
xchg
pop
xchg
mov
adc
xchg
fscale
inc
inc
dec
cmp
pop
lods
clc
jno
arpl
sbb
insb
push
push
imul
jb
dec
sbb
fcoms
cmp
inc
fsubl
cs
xor
xchg
pop
push
fcmovne
pop
iret
andb
jl
movsl
ret
test
insb
xor
and
xor
ljmp
cld
popf
lock
sub
ja
mov
mov
addr16
pop
jg
pop
dec
je
or
adc
ljmp
and
fistpll
daa
mov
adc
dec
fwait
dec
test
add
mov
xlat
lret
mov
aas
shlb
int3
dec
inc
rcll
lds
xchg
mov
sbb
iret
push
idivl
in
scas
xor
inc
lods
enter
fbld
push
adc
test
pop
ss
daa
test
sub
and
rorb
js
nop
lret
icebp
jg
repnz
dec
jnp
jne
or
in
ss
int3
or
xlat
je
pop
cmc
mov
jle
push
lcall
scas
mov
lock
sbb
push
mov
mov
rclb
fdivr
adc
jnp
es
std
jg
repz
inc
mov
or
dec
xor
mov
pop
mov
sbb
pop
xor
sbb
test
hlt
dec
enter
sub
and
jb
aas
xchg
or
es
and
xlat
or
mov
das
jl
cmp
lahf
cmp
pop
cmp
push
xchg
mov
and
rorl
adc
dec
sti
out
lahf
sub
loopne
fxch
lret
add
pusha
lods
fwait
sub
sub
push
stos
xchg
add
cmc
jmp
fisubrs
mov
pushf
push
int3
sbb
or
shll
or
bound
fisubrs
icebp
pushf
xor
mov
ss
mov
lcall
repz
inc
idivb
xchg
js
dec
dec
dec
lock
push
jno
out
clc
sub
ss
lock
add
insb
sub
movsl
cltd
testb
inc
adc
sub
fwait
sbb
mov
push
sub
add
or
es
mov
jne
mov
lcall
lock
mov
imul
cmp
clc
in
sub
je
pop
cltd
add
cltd
out
addr16
shrb
sarb
fisubrs
insl
out
mov
in
cs
xor
nop
es
sbb
adc
inc
adc
fdivl
loopne
adc
scas
pop
and
cmp
inc
aad
rolb
pop
jl
fnsave
lods
xor
test
push
aas
and
sub
jecxz
js
and
jmp
iret
mov
xor
sbbb
into
add
or
or
fstp
aad
scas
shl
loopne
push
fsubrl
sub
push
fcmovnu
addl
dec
mov
xor
jo
xor
popf
jnp
inc
ja
movsb
loope
xor
cltd
xchg
scas
int
jp
adc
loop
test
mov
imul
dec
push
or
ss
cmpsl
ret
cmpsl
pop
fsubs
loop
stos
mov
negb
cli
ret
mov
cmp
lods
loope
andl
dec
cmp
cltd
and
xor
adc
in
orb
movsl
mov
pop
cltd
push
xor
adc
or
or
out
push
pop
or
or
std
test
inc
mov
push
int
push
mov
fidivs
jno
cmc
js
or
shll
negl
pop
stos
push
iret
inc
push
mov
hlt
push
pusha
int
pusha
nop
bt
lcall
aad
pop
xchg
shll
dec
cmpsl
cmp
mov
dec
repnz
add
call
xor
or
pop
fdiv
ret
in
in
mov
push
push
cltd
push
cmp
push
inc
mov
js
test
movsl
and
sti
dec
aam
js
pusha
mov
sbb
and
jge
xor
push
daa
cmpb
sub
cmp
or
scas
jnp
add
cmp
mov
xor
cmp
xchg
push
inc
or
jl
je
pop
ds
ret
jl
pop
sbb
mov
lds
out
pop
punpckhwd
mov
jge
shl
dec
leave
testb
xchg
mov
xchg
leave
mov
stc
jp
push
out
nop
fcmovbe
mov
mov
shll
fbld
adc
aaa
and
loopne
iret
cmp
jg
xor
fiadds
or
xor
in
int3
dec
bnd
bound
pop
and
cmpsl
mov
dec
les
xchg
mov
shll
lods
outsl
xlat
out
outsl
dec
jmp
jnp
sbb
mov
cmp
fmull
jae
mov
outsb
dec
mov
inc
les
call
sbb
sub
mov
push
push
mov
insl
cmp
xlat
mov
insl
nop
jne
mov
test
scas
or
xor
xlat
dec
fbstp
ret
ret
ja
dec
ficoml
loop
jo
mov
xchg
shrl
out
lcall
xchg
sarb
xor
dec
xchg
sbb
mov
dec
fs
out
insb
ret
push
das
test
push
xchg
and
call
sahf
incb
mov
in
or
xor
rcrb
or
ds
mov
ret
clc
mov
cwtl
cmp
popa
int
inc
stos
mov
mov
jae
shr
mov
push
insl
pusha
mov
rcrl
into
inc
dec
jle
aaa
cltd
lret
loopne
xchg
jae
cmp
push
xchg
loope
scas
arpl
test
sub
add
push
out
mov
mov
in
sbb
jge
ja
and
mov
xlat
inc
popf
mov
testl
fwait
hlt
dec
shll
stos
dec
mov
shll
bound
test
mov
add
or
leave
fimuls
sub
push
emms
cmp
and
les
mov
andl
jmp
out
data16
push
insb
in
adc
fistpll
sbb
push
sbb
stos
jl
jecxz
mov
pop
ja
xor
leave
pop
out
cmc
push
add
outsl
cld
ljmp
out
icebp
xchg
cltd
ror
insl
push
inc
out
mov
das
pop
add
inc
test
and
xor
nop
les
lock
ret
repz
push
shlb
and
push
adc
xor
jge
jae
xorb
clc
stc
mov
ret
fabs
lock
aas
sbb
fsts
mov
popa
popa
mov
js
add
mov
sarl
adcl
and
xchg
adc
dec
insb
inc
popa
test
adc
insb
push
cmp
icebp
pop
add
cmp
and
inc
push
fdivr
mov
jl
movsl
lods
mov
jae
iret
mov
cmpsb
fmuls
je
adc
xchg
lea
js
adc
stos
mov
mov
mov
mov
aam
and
sub
fnstenv
jo
xchg
out
lds
sarl
mov
outsl
pop
lahf
push
adc
movsb
jle
lret
das
loop
dec
push
test
aaa
cmp
call
adc
loopne
aas
dec
xchg
push
inc
mov
inc
mov
sub
aam
sahf
mov
mov
adc
inc
pop
jae
jae
push
jp
xor
inc
ljmp
imul
lret
fs
xor
lock
add
inc
jp
cwtl
out
or
mov
sub
push
into
popa
mov
jb
in
insb
cmpsl
mov
pop
inc
enter
sbbl
jns
push
mov
movsb
out
adc
mov
fistpll
inc
push
pushf
jle
mov
mov
dec
mov
inc
arpl
cmp
sub
push
out
or
jae
cmc
incb
xchg
ja
and
loopne
push
pop
lret
insb
inc
inc
mov
push
dec
jecxz
push
nop
push
loope
cwtl
and
xor
cmp
add
inc
stos
out
in
aaa
mov
dec
xchg
pop
aam
popa
in
repz
push
into
sahf
pop
mov
les
dec
cmp
xorb
sbbb
out
aam
add
sti
pusha
lcall
mov
mov
cmpsb
repz
pop
xorb
sbb
jno
hlt
lret
mov
inc
inc
repnz
mov
cmp
pop
cltd
push
jbe
push
call
jno
in
movsl
dec
pop
pop
jae
movsb
jo
jl
repz
fdivrs
in
mov
push
cli
in
fisubrl
pminsw
cmc
in
outsb
fs
fwait
enter
jae
popa
ljmp
pop
rclb
inc
divb
in
inc
gs
inc
adc
push
xor
shll
push
aad
sub
or
push
mov
in
mov
out
lahf
cmp
add
cmp
inc
test
push
add
test
push
scas
mov
fwait
pop
mov
mov
subl
pop
mov
aad
mov
mov
push
push
and
test
addr16
or
sub
repnz
movsl
push
je
lods
mov
lds
mov
mov
cmp
and
insl
scas
call
enter
xchg
fbld
or
adc
iret
push
fstpt
insb
cmp
sub
push
loopne
movsl
inc
int3
cmp
loop
mov
add
mov
in
inc
push
jno
xchg
fmuls
cs
sbb
cmc
lea
mov
int
mov
cmpsl
xor
mov
adc
addr16
dec
sti
ljmp
push
fadds
ret
cltd
inc
xchg
ds
ds
inc
test
mov
mov
xchg
mov
gs
outsb
or
jecxz
mov
insl
bswap
into
fisubs
aas
rcl
add
fisttpl
dec
or
popa
push
mov
nopl
mov
pop
imul
jo
cltd
push
int3
sub
inc
imul
mov
inc
inc
sub
adc
jno
dec
iret
xor
mov
mov
and
mov
mov
shlb
fstpt
jl
xchg
mov
adc
mov
outsb
add
push
clc
fildl
mov
pop
mov
lods
mov
sbb
fdivp
pop
xchg
sar
shlb
dec
rcrl
or
push
inc
cmc
test
add
pop
movsl
sbbb
and
testl
mov
xorb
add
or
addb
repz
mov
data16
and
push
ds
imul
arpl
shlb
ja
bound
or
icebp
and
jge
xchg
pop
iret
jmp
dec
or
cmpsl
hlt
mov
ja
aas
sub
arpl
xor
dec
mov
fldt
mov
jno
lea
andb
aam
push
mov
jo
pusha
movsb
pop
les
mov
and
test
mov
lock
pop
mov
push
cmp
sti
in
not
mov
mulb
mov
jno
adc
mov
inc
mov
inc
sub
and
push
mov
add
jae
mov
arpl
jae
jmp
fnstsw
push
jns
cmp
pop
mov
dec
xor
loop
inc
xchg
xchg
repz
mov
test
cmp
test
jecxz
notb
jl
clc
fisttps
outsl
add
nop
cmp
insl
pop
das
imul
popf
loop
jbe
xor
and
lret
imul
daa
pop
sub
loop
push
sbb
or
or
aas
insl
idiv
xchg
mov
bound
aaa
xchg
xchg
aaa
xchg
inc
xchg
adc
test
mov
popf
jb
fadd
js
aas
sti
outsl
pop
jl
xchg
push
fisubrl
add
negl
push
adc
ret
xor
xchg
mov
test
or
jge
sbb
sbb
int
pushf
lret
mov
cmp
outsl
jbe
rcll
xchg
test
push
xchg
and
jp
outsb
mov
inc
sti
mov
fcmovu
lea
or
ja
add
sub
fwait
dec
ljmp
mov
aaa
inc
sbb
jl
insl
imull
xor
fwait
loop
inc
lcall
leave
inc
scas
ret
inc
mov
mov
jecxz
pop
aas
add
inc
loop
add
push
in
daa
and
pop
dec
inc
mov
out
inc
pop
or
cmc
movsb
aaa
cmpsl
ret
cmp
fidivl
push
int
lock
add
jecxz,pn
xchg
ds
in
fnsave
addr16
add
and
ljmp
inc
add
xlat
call
pushf
xor
shlb
dec
sahf
adc
insb
movsb
mov
iret
inc
push
inc
xor
in
in
sbb
push
imul
lods
jns
mov
in
mov
test
rclb
fcomi
icebp
cli
int3
inc
rcll
mov
add
xchg
insl
sbb
and
adc
sarl
pushf
jle
and
jle
add
mov
shll
inc
xchg
mov
xor
mov
je
jae
mov
shl
push
into
jecxz
imul
inc
es
cmp
ret
push
push
test
mov
pmulhw
push
popf
or
pop
jns
sub
shr
aas
xchg
adc
lret
stc
pop
lahf
cmp
inc
rorl
es
mov
mov
in
enter
or
inc
push
xlat
sbb
movsb
sub
loop
lret
sbb
loopne
loope
push
outsl
shl
cmp
pusha
aad
outsb
xchg
pop
sub
rcl
inc
mov
in
sub
or
es
add
sarb
imul
mov
sbb
pop
into
test
mov
movsb
xor
mov
pop
push
xor
or
jbe
cmc
mov
aam
popf
or
pop
jmp
scas
and
cmp
je
cwtl
jae
add
out
sti
cli
mov
out
jg
lcall
jg
or
mov
aad
push
loopne
pop
cmp
or
pushf
xchg
mov
lock
xchg
hlt
cmp
std
into
pop
je
lds
mov
sbb
xchg
mov
dec
xlat
sub
lret
fwait
daa
mov
sub
or
cmp
mov
add
pop
pop
xor
int3
aam
pop
mov
and
lock
imul
mov
lea
push
adcb
in
fwait
cmc
popf
enter
sub
aam
mov
push
jo
dec
test
and
loope
sbb
mov
pop
xor
inc
push
push
adc
lds
mov
jl
sub
in
mov
cmpsl
pop
shlb
aaa
movsb
repz
test
fildl
in
adc
or
icebp
jp
pop
pop
aad
cld
leave
mov
mov
aaa
adc
pop
int3
mov
gs
stc
sub
jbe
arpl
dec
mov
dec
sbb
jge
aam
fisubrs
cmp
loop
test
mov
loope
cmpsl
out
leave
insl
fidivrs
fstpt
aad
in
push
fs
std
or
fists
mov
out
push
jmp
xlat
hlt
lods
jbe
sti
or
inc
xchg
dec
rolb
mov
insl
mov
shlb
pop
inc
inc
movsl
popf
pop
repnz
xchg
stc
cmp
pop
bound
out
bswap
cmp
xchg
clc
cltd
mov
and
pushf
xor
dec
pushf
xor
mov
mov
xchg
jnp
and
insb
xorb
push
in
sti
jne
sbb
cmp
incl
pop
xchg
lds
mov
ds
pop
jecxz
insb
fiadds
idiv
mov
imul
pop
push
sti
jno
lcall
cltd
subl
cltd
pop
push
mov
pop
cmp
test
push
lock
add
test
scas
iret
leave
xchg
jp
jp
and
adc
lahf
cmpsb
testl
cmp
sbb
pop
cs
sahf
jne
movsl
shll
inc
add
insb
pop
rclb
outsl
push
rcr
sub
cld
leave
pushf
adc
fdivl
test
mov
pop
ja
xchg
adc
orl
aas
mov
gs
xorl
inc
push
pop
subb
xor
pop
xor
jg
cltd
loop
iret
iret
fisttpl
and
in
push
mov
xor
adc
addr16
jb
stos
push
sbb
data16
push
loopne
push
out
cmp
cli
aam
bound
repz
rcll
sti
sbb
fisubs
push
in
icebp
into
shl
mov
negb
pop
adc
ret
sbb
and
outsw
out
ret
pusha
mov
dec
fucomi
mov
pushf
sub
dec
xor
xchg
je
insl
sub
pusha
inc
mov
loop
mov
mov
repz
mov
aad
adc
out
mov
inc
xor
inc
stc
call
and
sahf
or
dec
and
lret
jmp
dec
mov
xor
push
sbb
pop
jns
idivl
pusha
push
mov
or
sbb
jne
movsl
mov
mov
sub
xchg
scas
stos
cmp
jb
addr16
in
jge
enter
jecxz
sbb
mov
cltd
push
inc
stos
divb
mov
push
insb
lahf
adc
dec
bound
sub
inc
push
xor
xor
sub
jmp
divl
cmp
pusha
jnp
xor
sbb
lock
pop
in
add
xor
inc
push
jge
lock
xor
mov
jmp
loop
xchg
out
into
dec
scas
push
xchg
xchg
lahf
sti
push
movswl
rorb
mov
inc
das
cmp
jne
cmp
cmc
push
lock
add
mov
inc
sub
pop
lock
addb
and
int
xchg
push
fstl
inc
ficoms
mov
pushf
mov
jg
adc
dec
xor
daa
mov
mov
push
out
cltd
inc
out
cld
rorb
xchg
aam
mov
add
in
mov
inc
test
hlt
sbb
lock
adc
xor
test
push
hlt
fists
adc
pop
mov
pusha
xor
adc
jns
bound
jnp
addb
sub
sarb
xor
cli
xor
cmp
pop
push
js
push
imul
fnstenv
inc
cs
mov
scas
dec
inc
inc
jmp
ret
mov
out
dec
out
dec
xchg
jbe
and
imul
out
lods
mov
add
lods
dec
or
call
adc
divl
and
out
push
mov
ja
sti
fnstsw
and
sti
or
cwtl
xchg
mov
notb
inc
les
ss
jmp
punpckhwd
gs
mov
pushf
cwtl
fcmovnbe
xor
mulb
mov
jns
aam
scas
and
add
inc
lret
dec
jb
ror
mov
pop
test
test
cli
gs
outsb
push
movsl
push
gs
fisttpl
inc
xchg
cmp
lds
lods
pop
data16
cmpsb
dec
add
cld
js
dec
inc
repnz
inc
out
pop
stc
add
js
jp
xchg
add
add
and
mov
mov
divb
push
or
add
test
cmp
iret
dec
in
loopne
sbb
roll
sub
jl
xor
enter
xchg
xchg
pop
xor
mov
cmp
or
sahf
lret
mov
lea
sti
jo
push
hlt
xor
jl
ja
stos
sti
imul
int
sbb
xchg
jb
push
and
dec
roll
inc
jbe
jnp
loope
jbe
xchg
mov
fsubrp
lret
push
cvtdq2ps
jns
ret
pop
bswap
jge
mov
inc
addr16
lea
enter
and
xchg
into
xchg
dec
mov
sbb
lret
mov
in
inc
std
push
jo
jne
mov
loope
jnp
mov
outsb
imul
jae
jno
dec
mov
adc
rcrb
jae
push
mov
addr16
ret
xor
adc
jg
jmp
xor
loopne
mov
sub
ret
add
adc
mov
dec
push
add
push
les
cmpsb
lock
mov
jbe
cmpsl
repz
and
test
sbb
mov
sbb
repz
mov
jl
daa
ja
cmc
test
das
add
or
fwait
inc
cmpsl
pop
or
je
and
jne,pt
data16
or
sub
xchg
testl
dec
push
test
test
xlat
dec
pop
rcr
push
arpl
cmp
outsl
aas
inc
jno
mov
xchg
aas
pushf
leave
inc
pop
rolb
sarl
and
dec
or
arpl
pop
push
sub
cmp
cmp
or
add
push
or
popl
push
mov
and
sbb
popa
and
dec
cli
cmp
pop
pop
int
ja
dec
jbe
or
fwait
jmp
jo
in
sbb
or
xor
push
jmp
popa
jl
sbb
fisttps
test
popa
add
sbb
lods
adc
sbb
and
xor
bound
icebp
sub
add
add
xlat
dec
mov
fimuls
mov
cmp
xchg
mov
aad
fdivl
xchg
push
mov
leave
mov
pop
cmpsb
add
mov
fmuls
cmc
iret
add
into
or
and
movl
cmp
test
addl
push
pop
shll
mov
dec
sbb
daa
jp
loopne
std
in
dec
mov
inc
pop
mov
lea
ljmp
cmpsl
sbb
mov
mov
inc
cmp
in
int3
call
sahf
xchg
and
je
sahf
dec
leave
icebp
inc
fst
mov
icebp
xor
xchg
dec
cmp
int
test
gs
scas
sbb
outsb
xchg
in
popa
xchg
sbb
mov
add
push
and
pop
outsl
cmp
or
sbb
and
push
sbb
push
sbb
dec
mov
je
fcmovu
sub
mov
jecxz
push
pop
int3
push
shl
inc
mov
cmp
lods
imulb
es
inc
es
adc
dec
arpl
mov
mov
sbb
inc
in
mov
add
and
vsqrtps
mov
sbb
jge
cld
sub
xor
push
mov
aas
sub
pop
addr16
aam
into
inc
mov
sbb
jbe
jnp
js
adcl
sub
push
ffree
cmpsl
dec
jno
or
mov
sbb
mov
scas
push
sbb
lret
out
in
fs
addr16
mov
insb
nop
mov
dec
dec
xor
test
add
lods
rol
sub
roll
repz
inc
jne
lahf
loop
xchg
cmp
cmp
sti
jg
int
outsl
aam
sbb
orl
xchg
iret
adc
addr16
mov
adc
pop
xor
jmp
and
inc
push
je
adc
mov
nop
es
jnp
pop
call
add
daa
cmp
mov
scas
lods
jno
repnz
stc
xchg
push
mov
popf
sub
stos
push
pop
lahf
and
or
fwait
adc
or
outsl
xchg
sub
push
mov
lock
xchg
xchg
inc
pusha
mov
jmp
xor
scas
adc
stc
adc
loope
sti
lods
leave
xchg
xchg
stos
ret
pop
into
or
mov
sbb
cmpsl
or
dec
push
inc
and
call
jp
add
jae
cmp
nop
ss
orb
addr16
test
test
push
cld
outsl
mov
repnz
mov
test
xchg
dec
adc
loop
roll
dec
add
out
mov
add
out
sbb
subb
mov
dec
xchg
out
push
insl
cmp
sub
sub
fbstp
cmp
sub
push
jns
cmp
pusha
bound
js
xchg
add
add
insb
push
and
mov
inc
insl
mov
scas
dec
sbb
xor
cmp
xchg
xchg
fiaddl
mov
or
inc
fcoms
lea
les
sub
mov
mov
mov
cmp
enter
jae
mov
or
mov
mov
mov
pop
add
outsl
push
pop
mov
bound
call
or
int3
rcrl
push
adc
lea
outsl
je
xchg
rclb
ret
ret
scas
lahf
sqrtps
or
and
cmpsb
jb
jno
popf
or
xchg
add
push
mov
hlt
cwtl
xor
adc
popa
bound
dec
push
sahf
jl
fwait
jecxz
test
pop
pop
insl
mov
test
std
xor
call
out
inc
fdiv
fs
pusha
mov
and
stos
lahf
ret
jle
lahf
jg
mov
cmp
out
popa
jecxz
jbe
mov
dec
mov
mov
sbb
inc
loope
sbb
arpl
sar
pop
and
mov
or
and
cmp
aas
das
hlt
js
push
cs
aad
out
xchg
sub
fldl
pop
mov
sbb
ret
or
xor
push
enter
jge
sbb
into
inc
popa
jno
add
dec
sub
inc
ret
cmp
cmp
xchg
push
outsl
xchg
dec
inc
in
and
out
movsb
cmp
xchg
movsb
leave
xor
andb
out
xor
pusha
ret
bound
pusha
or
cmc
rorl
pop
mov
jns
dec
cmova
push
es
arpl
mov
cli
mov
xor
add
xor
or
rcrl
aam
mov
lock
xchg
out
push
sahf
lods
sub
in
dec
mov
popf
push
test
or
lahf
lods
xor
xor
sub
filds
out
outsb
sbb
icebp
arpl
and
lret
inc
mov
mov
cmp
pushf
es
push
dec
rcr
or
adc
cld
stos
insb
stos
cmpsl
mov
xor
jbe
lds
sub
push
cltd
jp
mov
movsl
shlb
push
mov
jmp
mov
ja
pop
mov
sub
and
inc
jno
add
call
lds
push
jle
mov
ss
xchg
cmp
pop
sub
xchg
xchg
mov
mov
push
adc
adc
sub
push
cli
pop
sub
adc
push
dec
nop
shrl
gs
push
sub
and
jo
ret
sub
xlat
scas
fimuls
dec
mov
sbb
lret
repz
subb
iret
testl
jle
dec
int3
and
and
jno
cmp
mov
por
xor
aam
cltd
mov
lahf
pushl
cmp
cmp
pop
cs
insb
out
sub
xor
inc
leave
into
jp
daa
pop
int
sbb
jo
stos
pop
ret
dec
pop
push
xchg
pop
aam
adc
mov
inc
pop
inc
lods
out
call
lret
jecxz
test
sbb
and
adc
icebp
imul
inc
and
call
movsb
push
js
push
cmp
fimull
outsl
ret
xchg
into
fs
sub
dec
mov
mov
cli
cs
inc
sub
enter
sbb
rclb
pop
rol
stos
loop
out
roll
inc
inc
xchg
test
xor
into
xchg
nop
lds
pop
test
xchg
fistpll
mov
xchg
or
push
push
cld
adc
shr
scas
mov
inc
je
lcall
dec
jne
pusha
pushf
sarl
xor
or
loopne
sub
loope
das
mov
inc
cli
mov
outsl
in
mov
lds
in
jl
mov
push
adc
push
lock
mov
daa
jnp
pop
add
fmuls
in
shlb
push
jmp
jle
xor
clc
mov
mov
push
sbb
das
inc
or
jns
jns
jl
movsl
inc
mov
jmp
xor
test
movsb
mov
mov
pop
fcmovne
push
faddl
div
adc
call
stc
imul
dec
push
sbb
repz
mov
clc
mov
mov
mov
rcr
pop
ljmp
loopne
sub
mov
inc
es
pop
fucomi
aas
loope
xchg
lcall
inc
xor
and
xchg
cmpsl
jmp
ret
pop
pop
imul
int
and
sahf
dec
adc
adc
out
mov
in
scas
inc
adc
adc
or
lret
out
pop
or
cmp
jns
pusha
xchg
jge
xchg
iret
in
movsb
dec
mov
icebp
adc
sahf
and
inc
outsl
sbb
es
mov
dec
mov
adcb
mov
in
test
test
and
repz
and
fildll
xchg
push
test
into
arpl
xchg
int
cld
or
xchg
jmp
jns
loop
stos
dec
icebp
dec
jb
mov
das
cmp
loope
arpl
xor
mov
jecxz
or
adc
pusha
and
mov
pop
test
ja
jg
shll
inc
lcall
push
mov
sbb
mov
pusha
pop
jmp
push
cmpsb
out
sti
test
loope
add
repz
cmp
or
ds
pop
outsl
cmp
pop
push
pop
xor
sub
sbb
inc
inc
fdivs
and
in
jmp
test
outsb
addr16
lret
fisubs
cs
movsb
jecxz
mov
inc
fs
roll
pop
or
jb
pop
and
mov
andl
push
fld
xchg
arpl
push
sbb
cmpsb
int3
mov
cmp
and
movsb
add
xor
cltd
stos
ds
cmpsb
adc
dec
loope
push
mov
push
cld
dec
pop
xchg
sbb
pop
je
mov
pop
mov
lods
mov
call
push
psllq
cs
add
mov
out
push
cltd
or
fstpl
mov
fldl
out
call
xchg
lea
iret
pushf
fwait
dec
loopne
mov
jp
inc
pop
imul
int
mov
jbe
adc
jl
push
xor
dec
fwait
es
or
lahf
mov
jmp
sar
adc
sbb
mov
in
ss
push
jns
adc
loope
aas
jo
test
in
and
in
push
pop
mov
cmp
testb
sbbb
pop
adc
lods
xchg
outsb
mov
fdecstp
dec
je
mov
imul
pop
stos
xor
push
sarl
adc
pop
mov
outsb
sbb
test
jne
adc
movl
xor
cmc
lds
fnstcw
mov
sbb
xor
negl
push
xchg
xor
imul
xchg
fidivs
add
aas
and
ljmp
or
sbbl
fidivl
inc
gs
push
fsubrs
pop
push
inc
insb
cmp
sub
ja
lahf
inc
add
jae
arpl
jmp
repz
pop
sbb
sub
lahf
cltd
add
mov
pusha
pop
sub
loope
fmull
xor
mov
xor
mov
movlps
sbb
lret
cmp
test
and
jb
test
ret
pop
push
inc
push
lret
insl
imul
rorl
fsubl
mov
aas
sbb
and
sbb
and
or
bnd
aad
mov
nop
scas
in
push
sbb
mov
mov
cmpl
jno
sbb
and
std
sub
fnsave
divb
pop
in
out
stos
cwtl
shrl
pushf
adc
sarl
negb
xchg
js
in
repnz
adc
mov
xchg
pop
pop
pop
pop
cwtl
xchg
mov
sbb
xchg
ss
loop
adc
das
pop
das
lea
ret
cli
jae
push
or
rolb
inc
dec
mov
int3
outsb
cmpsb
and
lds
xchg
lret
add
push
test
sbbl
cmc
fs
mov
cmp
idivl
jl
pop
ret
pop
push
adc
leave
pop
repz
stos
xlat
and
mov
scas
dec
mov
add
loop
int3
xchg
or
add
scas
sti
adc
movsl
cmpsb
inc
and
sarl
mov
sarl
scas
push
push
jb
jns
stc
or
adc
ja
or
lahf
add
mov
imulb
js
pop
cmp
fdivl
push
test
fbstp
or
jbe
jl
scas
ljmp
push
ja
pop
rcl
adc
leave
mov
mov
int
out
iret
imul
adc
dec
mov
mov
negb
xchg
xchg
mov
call
cmp
sub
lret
mov
push
or
rcrl
stc
jl
dec
test
jl
jnp
adc
ficoms
fsubl
xchg
loopne
sahf
ljmp
jmp
xchg
stos
add
sub
lods
subl
popa
shl
cwtl
push
fcoms
fs
push
mov
dec
mov
sbb
add
loop
dec
negl
movsl
xor
addl
in
cmp
cmp
insl
outsl
push
mov
hlt
jae
fstpt
mov
xorl
cmp
adc
cltd
popf
pop
popa
cwtl
daa
std
ja
out
stc
movsb
gs
adc
ljmp
repz
jl
loope
pop
mov
test
adc
test
in
repz
pushw
test
loope
xor
inc
test
outsl
ja
inc
adc
fistpll
adc
push
or
loop
fildl
mov
push
arpl
jmp
jne
pop
in
inc
test
stc
xor
jb
pop
rcll
in
outsl
pop
mov
xor
dec
call
fnstcw
pop
in
and
in
fdivr
insl
xchg
les
dec
jnp
xchg
sbb
sub
pusha
pop
push
mov
pop
insb
inc
test
add
mov
nop
xor
push
sti
jnp
test
imul
xchg
ljmp
negb
push
lcall
mov
fwait
sbb
add
imul
push
movsb
xchg
ret
mov
loopne
xorl
push
cmp
cmc
orb
dec
fbstp
add
sbbl
pop
sbb
and
in
push
dec
mov
xor
adc
jo
adc
std
ljmp
inc
aaa
mov
int
push
cmpsb
test
lret
xor
xchg
out
sar
movsl
mov
test
das
test
sbb
lahf
clc
into
dec
outsb
push
dec
pop
mov
js
fucomi
loop
sub
push
pop
cli
xor
inc
gs
mov
rorl
test
mov
jbe
push
mov
fldt
mov
sbb
xor
push
je
xor
imul
mov
jae
push
adcb
fsubrs
adc
pop
ss
out
dec
and
xorl
inc
ss
mov
push
and
ret
stos
sub
mov
sar
jmp
out
imul
int
pop
xor
cwtl
pop
stc
loop
cwtl
adc
cmp
dec
push
add
dec
sbb
lret
int3
jo
les
ss
movsb
add
add
les
jae
scas
fistpll
mov
repz
les
pop
lahf
cld
add
stos
or
je
push
ljmp
mov
adcl
aas
scas
sub
pop
push
or
in
cmpl
mov
adc
call
in
aam
int
jmp
lahf
cli
movsl
xchg
sub
out
mov
push
mov
daa
cmpsb
movsl
pop
lods
icebp
cli
dec
mov
jbe
mov
jp
les
mov
xchg
imul
enter
bound
inc
add
gs
mov
inc
mov
arpl
sbb
push
rcrb
mov
cli
test
int
fdivrs
xor
jno
jmp
repz
sub
jecxz
outsl
mov
push
ret
sub
xchg
fiaddl
out
fsubrl
aas
inc
mov
adc
adc
mov
mov
scas
scas
fs
sub
add
sbb
mov
pop
test
icebp
lods
adc
sahf
dec
mov
xlat
shl
test
mov
jecxz
cmpsb
jmp
xchg
clc
fisttpl
testb
sub
mov
push
sahf
mov
add
cltd
std
jecxz
aad
pusha
sub
movsb
sub
inc
jl
push
dec
jne
jle
pusha
add
mov
repnz
jp
mov
stos
cld
cmpsb
xor
and
in
adc
xor
and
loop
cwtl
je
fsubrl
lds
mov
clc
or
xlat
inc
dec
in
pushf
jg
aas
addl
xchg
xchg
imul
shl
xor
jo
push
cmp
and
out
ja
mov
pop
leave
push
ret
pushl
mov
rorb
in
lret
cmp
cmc
movsl
adc
adc
hlt
jmp
stos
sub
hlt
in
mov
rorb
loop
fbstp
fisubs
outsl
or
xchg
mov
rolb
xor
pop
xor
pop
das
ja
pusha
dec
or
das
push
or
and
jno
mov
push
or
popa
shll
test
in
push
fsts
arpl
cltd
add
xchg
push
push
mov
adc
ds
lods
or
push
lods
jns
loop
stc
lcall
lret
fdivrs
nop
mov
mov
xchg
dec
ljmp
ja
jge
inc
out
dec
cmpsb
nop
test
sub
mov
mov
sarb
xor
lret
lcall
and
mov
aam
jecxz
and
jns
pusha
adc
dec
lock
bswap
inc
out
dec
test
repz
lock
xchg
push
daa
jl
jne
push
mov
fldcw
cmp
ss
and
popa
or
push
out
sarl
repnz
xor
or
shrl
cmpb
pop
test
arpl
xchg
sbb
xor
ret
int
xorl
out
dec
pop
push
mov
push
lock
repz
cmpb
fwait
daa
unpcklps
or
scas
cwtl
sahf
xlat
or
mov
ljmp
jp
call
fbld
shrb
xor
mov
gs
adc
cmp
cmp
sub
pop
adc
fcoms
add
xchg
pop
adcb
push
inc
stos
adc
xchg
add
push
je
push
sbb
cmp
cmp
loop
cmp
call
mov
test
cmp
jecxz
push
nop
lock
sub
xor
sbb
fistps
and
mov
fidivl
stos
inc
xor
enter
cmpsb
bound
or
mov
xorl
push
cmp
lock
pusha
test
lcall
je
adc
scas
jb
or
mov
icebp
or
aad
sub
pop
jne
test
rcll
mov
cmp
mov
movsb
jmp
xor
pop
add
addr16
mov
inc
jl
mov
jo
fstpl
idivb
dec
pushf
ret
cmp
int
sub
inc
push
pop
popf
mov
sub
call
testb
jecxz
ds
dec
int3
mov
push
insb
inc
push
push
jnp
cmp
push
push
add
pop
add
sbb
mov
jg
or
add
sub
pusha
jg
es
cli
pop
cmc
pushf
js
jecxz
inc
hlt
xchg
addb
push
sbb
out
aad
mov
xchg
arpl
mov
mov
into
loope
lea
arpl
insb
das
icebp
pop
xor
flds
cmp
lock
lea
mov
ret
in
sub
mov
js
xor
ret
cmp
repz
mov
aad
cwtl
jne
fsubrs
in
ret
jle
ja
cs
sub
inc
cmpsb
aam
insl
shl
mov
or
xor
dec
inc
mov
aad
hlt
pop
or
std
xchg
push
ljmp
push
sub
addb
xchg
pushf
movb
cmp
mov
cmp
std
add
ljmp
mov
pop
ds
push
into
mov
cmp
mov
pop
data16
fiadds
test
mov
mov
push
arpl
fldl
pushf
and
mov
lahf
push
jl
pop
cmc
dec
jb
movsl
add
and
dec
jne
stos
push
scas
orl
sub
and
fimull
dec
shlb
pop
cmp
rep
idivl
leave
insb
btc
push
push
iret
pusha
fbstp
push
pop
out
sub
movsb
enter
and
call
add
sbb
sub
lahf
sbb
daa
xchg
dec
gs
ret
gs
fcmovbe
outsb
or
jnp
lods
dec
dec
jmp
fsts
mov
jbe
cli
cli
inc
and
repnz
jb
loop
clc
pop
mov
data16
cmc
mov
ret
stc
pop
scas
js
pop
pop
arpl
in
inc
inc
jp
push
test
adc
das
add
in
or
and
inc
mov
jno
add
pop
xchg
loopne
xchg
jno
mov
lahf
mov
orl
jp
xchg
lea
xchg
ljmp
add
sbb
cld
jmp
aaa
pushf
pop
pushf
xor
and
jmp
fstpl
xor
dec
xor
pop
mov
mov
loope
leave
sub
pusha
cwtl
testb
mov
cld
xor
mov
cltd
xor
sti
test
gs
lcall
clc
cwtl
cmpsl
mov
pop
mov
or
stos
mov
sbb
aam
bndstx
outsl
into
inc
cmp
xchg
inc
pop
mov
mov
sti
lods
inc
pop
out
mov
sbb
lcall
push
push
cli
push
sub
addr16
cmp
daa
lods
jns
sub
bnd
int3
repnz
aam
or
jp
in
outsb
sbb
ret
sbb
filds
pop
rol
mov
xor
xchg
push
aad
mov
ss
sbb
inc
add
jne
push
rorb
push
sarb
in
test
dec
rcrb
push
cmp
test
ja
push
push
icebp
add
cld
mov
jnp
stos
insl
lcall
or
cld
daa
push
in
sarl
cmp
and
test
pop
mov
roll
loop
clc
jge
dec
es
inc
test
jge
dec
inc
dec
test
stos
xchg
mov
push
lods
out
popa
pop
bound
inc
or
adc
cmpsb
movsb
aad
rcrl
dec
mov
push
popa
or
mov
add
mov
mov
adc
dec
fs
sahf
mov
out
ljmp
loopne
test
xor
push
out
sbb
iret
dec
loop
xchg
lea
call
std
andl
rcrl
outsb
lret
ret
sub
andl
jge
jge
pop
mov
es
aam
sub
out
sub
mov
inc
or
int3
xchg
sub
push
inc
mov
fisubs
pop
xchg
repnz
sub
cmp
xor
push
xor
dec
lods
repz
int3
cmpb
sti
jmp
mov
iret
test
sbb
ja
cmpsl
adc
add
dec
jmp
and
pop
or
jne
movmskps
sub
cmp
mov
nop
adc
inc
sub
insb
ss
enter
inc
dec
pop
mov
jp
xchg
sbb
inc
jae
and
sti
lods
int3
adc
lds
adc
cmp
popf
btr
xchg
pop
adc
ja
inc
mov
ljmp
push
push
sahf
pop
popf
ljmp
push
test
mov
ret
sub
dec
xchg
ret
stos
scas
push
adc
mov
lds
subb
stos
mov
mov
cmp
mov
cmp
xchg
jno
mov
and
sarl
int
add
mov
enter
jmp
sahf
or
in
mov
xlat
cwtl
or
rep
pop
rcrb
pop
sbb
imul
mov
movsb
inc
in
xor
cs
ja
fs
int3
add
pop
sbb
jb
jne,pt
dec
divb
iret
push
enterw
and
loop
insb
xchg
aad
jp
xchg
xchg
cmpsl
push
push
jnp
ret
sub
psubb
sub
iret
cld
mov
shrl
cmp
mov
xor
inc
gs
rcl
in
ret
fmull
xchg
fimuls
jbe
push
repnz
push
sub
adc
das
aam
jecxz
mov
fcoms
imul
push
inc
add
xchg
cld
adc
mov
fnstsw
and
mov
or
inc
sub
in
mov
adc
jns
lret
mov
adc
sarb
or
fwait
sbb
mov
mov
xor
in
notl
ss
push
addr16
dec
sub
mov
jbe
jne
xchg
push
and
push
fistpll
jno
dec
popa
sub
lods
adc
dec
xor
dec
jb
add
shlb
push
cmp
pushw
push
push
lahf
lahf
mov
cs
lds
lods
adc
mov
inc
pop
or
sub
js
cld
dec
sbbl
das
jge
pop
mov
mov
cld
sub
lds
mov
jbe
mov
in
int3
pushf
dec
push
dec
test
hlt
inc
inc
js
lret
sbbl
lods
int3
jo
rclb
jmp
ds
jae
xchg
imul
xchg
mov
push
cmpl
cmp
test
adc
mov
ret
fwait
sahf
mov
ret
and
fisubl
sub
call
in
cmp
xor
in
fidivl
xchg
push
std
fs
adc
loope
repnz
mov
sbb
xchg
int3
daa
cwtl
xchg
fwait
test
mov
push
mov
xchg
dec
jecxz
adc
pop
and
pop
xor
xchg
es
or
sub
out
sbb
enter
dec
into
or
inc
jle
mov
pop
mov
xor
js
pop
and
pop
enter
adc
sub
jnp
dec
xlat
mov
imul
ret
loopne
loope
push
jno
push
ficoms
cwtl
sar
adc
adc
hlt
int3
call
das
stos
dec
enter
or
push
xlat
subb
xchg
arpl
push
rorb
dec
sub
jnp
xchg
push
ret
dec
mov
ds
fwait
pusha
out
es
cmp
mov
test
movsb
adc
in
rcll
hlt
cmpsl
xor
filds
aaa
lahf
push
bound
sub
push
lea
push
ret
mov
dec
mov
idiv
adc
cwtl
jno
nop
test
imul
xchg
cmp
jo
je
clc
add
jge
mov
stc
dec
and
shr
push
or
cltd
push
mov
dec
xor
and
rorb
in
and
push
dec
loopne
sbb
loope
adc
xchg
scas
testl
insb
adc
scas
jnp
insb
inc
cltd
dec
inc
decb
xor
in
call
pop
xor
mov
inc
xchg
aaa
stos
inc
xor
leave
addr16
in
add
pop
rcl
add
enter
inc
mov
stos
jae
sbb
push
addr16
ffree
out
in
and
cld
lea
pop
sarl
push
mov
dec
mov
neg
out
add
and
xor
push
adc
mov
gs
stc
faddp
aam
cltd
cld
loop
pop
jecxz
and
mov
sbb
xor
cmpsb
jbe
cld
subl
jno
inc
movsl
lcall
test
ss
hlt
pop
dec
je
mov
rcrl
js
hlt
push
jecxz
mov
cmp
sbbl
pusha
pop
jns
dec
ror
loope
adc
xlat
jns
sahf
or
ret
dec
inc
nop
dec
push
ja
cltd
clc
add
aad
sub
adc
insb
cs
sahf
test
shr
adc
mov
bound
pop
inc
xor
adc
mov
jl
xor
loop
cmp
inc
sbb
mov
mov
push
and
sub
cmpsb
dec
fwait
mov
aaa
stos
mov
inc
xchg
scas
mov
pop
bound
lock
test
inc
add
rorb
in
lcall
sub
loope
push
xchg
inc
test
mov
lcall
adc
aad
cld
sets
imul
inc
andl
loopne
nop
ror
push
clc
daa
and
push
in
pop
push
fs
decl
sub
les
enter
xorl
std
pop
call
push
cmp
daa
into
adc
clc
xor
inc
enter
rorl
add
cli
loop
jmp
fcoml
mov
xor
mov
pop
andb
jae,pn
cwtl
jmp
cld
push
insb
sarb
sbb
or
mov
loopne
xlat
inc
mov
out
xchg
jl
icebp
cmp
cmp
scas
inc
loop
fildll
cs
sbb
stos
fcom
fs
or
mov
icebp
cmp
xchg
leave
xorb
jns
inc
cmpsb
scas
mov
movsl
xchg
adc
pop
push
fdivrs
jns
movsb
dec
mov
loope
ret
xchg
dec
jl
stos
inc
mov
mov
in
les
lock
jl
mov
push
mov
adcb
dec
mov
dec
fs
or
push
and
int
mov
popf
icebp
aad
aaa
je
xor
pushf
lea
cmp
fsub
mov
rcr
and
or
and
repz
testb
inc
mov
fs
repz
cmp
prefetch
and
dec
ffreep
into
xchg
jnp
dec
in
scas
xor
loop
lret
mov
lea
outsl
loop
iret
leave
insb
pop
push
jmp
sbb
shrb
mov
xor
xor
les
into
call
push
push
mov
dec
in
pop
in
mov
jge
jo
rcr
test
imul
mov
lods
xor
jge
rcl
pop
jb
fistps
ret
aas
and
lret
inc
mov
ja
adc
pushf
jg
push
aam
add
push
out
into
fsub
inc
mov
pop
dec
push
int
rolb
pop
or
xchg
cmp
or
xlat
xor
pop
lods
sbb
mov
push
scas
insl
inc
sbb
pop
rorb
aas
dec
fsubr
stc
dec
lcall
aam
stos
mov
push
sbb
xor
test
push
inc
xchg
xchg
pusha
test
push
mov
sti
mov
push
push
mov
jg
mov
stos
daa
xor
mov
and
adc
and
dec
add
dec
jg
inc
aas
ss
jge
scas
dec
and
aaa
jg
andb
push
jnp
jne
sbb
pop
insl
fldt
data16
out
mov
rol
pop
mov
sbb
icebp
gs
movsb
xchg
push
dec
test
add
xchg
jne,pn
or
imul
and
sub
mov
jg
aas
fwait
lock
sbb
test
pop
shlb
and
jmp
inc
int
and
divl
fsubrs
cmc
mov
int
mov
cmp
pushf
nop
sbb
imulb
push
xor
cmp
ds
cli
sub
pop
dec
and
mov
pop
inc
addl
push
cmp
jne
sbb
and
pop
or
lcall
dec
add
jae
jns
imulb
cmp
mov
jg
pop
or
leave
hlt
rolb
cli
lret
add
adc
test
jg
repz
cmp
sahf
and
push
cmpsl
lret
xlat
incb
dec
pop
iret
stos
and
mov
in
mov
pop
xor
push
lods
cwtl
shr
shrl
lods
data16
mov
lods
in
or
out
add
fisubrs
test
jo
and
daa
xor
jne
dec
mov
into
adcl
jnp
mov
xor
jg
add
sbb
std
sub
add
xor
test
push
push
mov
pop
lods
jns
xor
cmp
loopne
bound
inc
call
mov
adc
subb
cmp
add
jb
adcl
mov
and
arpl
decl
inc
insl
sub
insb
dec
iret
sbb
dec
inc
mov
jge
dec
ljmp
cmp
xchg
andl
inc
mov
cmc
bound
inc
arpl
jp
xchg
push
vandnps
cmp
lea
xchg
mov
push
dec
fsubl
dec
ds
mov
nop
sbb
and
push
arpl
mov
jle
in
and
out
std
or
and
or
call
out
rolb
mov
sbb
popa
cmc
mov
inc
inc
dec
ja
sub
mov
sub
loopne
fadds
shrb
sub
mov
in
mov
cli
jmp
mul
arpl
loop
fisubl
outsl
std
push
adc
inc
adc
aaa
mov
mov
sub
inc
xor
js
gs
dec
pop
sbb
iret
jecxz
adc
xchg
xor
or
adc
pushf
add
cmpb
fists
adc
outsl
scas
bound
xchg
popa
jae
lds
in
repnz
lods
mov
jmp
in
fdiv
jae
es
xor
int3
inc
popf
idivl
das
imul
fwait
xor
pusha
inc
or
negb
ja
sti
push
adc
insl
jmp
sarl
aam
dec
and
repnz
mov
stos
cmp
sbb
mov
sbb
push
hlt
sbb
xor
lcall
xchg
cs
ret
push
pop
jno
test
mov
inc
gs
cmp
aas
or
mov
sub
jb
js
cmp
mov
sbb
pop
jns
mov
orl
add
es
push
fstpt
jg
jo
scas
and
pop
popf
lret
mov
dec
out
cmpsl
adc
ficoml
dec
std
test
aaa
or
dec
dec
jns
jnp
test
hlt
sahf
pop
mov
and
sbb
aas
pop
jno
repnz
clc
aam
xchg
roll
sti
test
mov
outsl
mov
lods
and
into
and
jne
scas
add
mov
jmp
mov
sub
inc
mov
xor
jno
xchg
sbb
push
ss
loop
ja
lret
jmp
dec
sbb
pushf
mov
shr
mov
out
pop
pushf
xor
and
pop
data16
mov
or
inc
cmp
dec
fdivr
jecxz
sub
cmp
mov
inc
inc
out
sbb
push
pop
loope
ret
pop
inc
xchg
ror
sub
inc
mov
data16
cmpsb
leave
aas
cmp
fistpll
mov
popf
popa
enter
dec
inc
lods
pushf
dec
dec
test
and
call
sbb
sbb
pop
lds
inc
dec
fwait
insb
add
sbb
leave
sbb
adc
jmp
addr16
mov
mov
cmp
cld
jge
mov
cli
roll
nop
lcall
lods
ja
pop
and
pop
pop
and
je
fisubrs
int3
dec
addr16
dec
loop
cmc
jecxz
out
xorl
movsl
and
mulb
inc
stos
mov
rolb
mull
adc
xchg
or
bound
aam
xchg
xchg
xchg
adc
jnp
xchg
repz
mov
cmp
mov
sbb
xor
jno
roll
popf
and
xor
ja
jmp
adc
fmull
dec
xchg
sbb
mov
push
cld
jp
and
pop
or
push
out
sti
push
loopne
xor
xor
test
adc
sbb
and
cmp
mov
flds
cmp
sub
xchg
daa
daa
in
cmpsb
orb
xchg
mov
dec
pop
push
add
ss
lods
lret
inc
xchg
sub
xchg
add
int3
movsb
out
pop
aam
cmpb
aaa
push
jg
pusha
mov
adc
movsb
or
jmp
jbe
int3
in
xchg
dec
out
mov
and
and
test
lods
pushf
mov
cmp
push
inc
dec
lods
jp
and
mov
test
ret
add
cmpsl
mov
int3
mov
mov
inc
cmp
stos
xor
cmpb
cmp
sbb
push
mov
mov
mov
xchg
add
iret
mov
xorb
mov
loop
pop
dec
sbb
mov
add
push
fidivs
loope
movsl
mov
out
gs
popa
cmp
dec
sbb
push
inc
inc
fstps
jo
xchg
bnd
repz
mov
push
std
mov
cmp
in
and
icebp
sub
mov
adc
imul
push
fs
adcl
xchg
push
dec
or
shll
popf
pusha
xor
imul
mov
mov
mov
push
outsl
pop
popf
jno
push
mov
out
lret
jg
cmp
push
sahf
out
cmpsl
shll
scas
xlat
pop
mov
mov
movsl
js
mov
loop
cmp
popa
pop
xchg
hlt
mov
mov
or
mov
test
pop
sub
sbb
adc
call
mov
push
pushf
mov
cmp
popf
or
aas
ret
nop
insl
sarb
in
aad
cltd
pop
xor
add
push
sub
and
pushf
ret
in
andb
xlat
fs
push
add
sbb
aam
lock
add
fmulp
insl
sahf
push
push
mov
add
xlat
cmpl
ficoms
pop
dec
je
jne
ret
ds
movb
xor
int
pop
inc
jmp
mov
jl
xor
adcl
mov
jmp
imul
ret
add
stc
or
cli
lahf
and
xadd
inc
sbb
stos
leave
sub
ror
lds
fsubr
mov
cld
adc
movsb
cmp
lods
jl
mov
jae
cwtl
into
mov
jg
mov
inc
loope
cwtl
gs
fs
rolb
jb
fwait
das
cld
mov
aam
sbb
pop
das
out
stos
pop
push
adc
xchg
out
hlt
add
jmp
iret
dec
daa
push
fidivrs
mov
jno
jo
dec
add
test
mov
mov
fs
lret
mov
mov
dec
xlat
dec
ret
push
lcall
shlb
jmp
call
jnp
pop
mov
mov
js
cs
mov
clc
push
insl
xor
and
xor
into
jne
push
cli
lea
add
sbb
outsb
push
cmpb
pop
add
or
push
lret
adc
mov
jl
mov
inc
loop
shlb
cmp
jle
add
test
pushf
loopne
or
flds
xchg
stos
std
dec
jno
inc
mov
rclb
cmp
dec
xor
cld
hlt
dec
lahf
pop
repnz
and
mov
popl
mov
lods
pop
sbb
addr16
xor
xchg
pop
ja
std
rcrb
pop
add
test
adc
pop
mov
and
int
bound
stc
cli
inc
dec
sbb
fs
pop
mov
cwtl
xor
jbe
test
int
mov
jnp
into
sahf
mov
xchg
xor
fdivrs
js
or
push
test
mov
pushf
stos
aaa
fldcw
loope
es
pop
dec
pop
mov
mov
sbb
mov
fidivrl
mov
dec
ljmp
fwait
outsl
ljmp
sub
cmpl
dec
jecxz
mov
cld
in
inc
xchg
ljmp
lods
fcmovnb
adc
ds
mov
lcall
outsb
mov
out
lods
movb
fcoml
ret
and
cmp
xchg
test
add
and
movsl
call
dec
popa
es
and
push
mov
xlat
mov
lods
out
test
aas
adc
mov
sbb
int3
mov
inc
cmp
imul
pop
test
enter
lds
push
dec
lcall
inc
popf
or
mov
pop
sub
jno
or
mov
ljmp
mov
cmp
dec
inc
or
dec
popf
imul
gs
clc
mov
cld
lea
in
movsb
jl
lcall
xor
sub
inc
jle
jo
dec
xchg
jle
add
sub
test
push
test
jb
aas
and
and
mov
das
fidivrs
aas
adc
inc
cs
hlt
add
jge
add
fwait
and
mov
and
push
fldcw
lods
repnz
add
pop
es
sbb
sub
out
push
lret
push
jo
fisttpl
pop
jp
arpl
xchg
sbb
fsubr
push
test
adc
faddl
xor
loopne
dec
sahf
and
loope
rclb
movsb
sub
add
and
xchg
jno
jecxz
idivl
mov
mov
jo
xchg
scas
movsb
sbb
clc
pop
xor
adc
sub
xacquire
sub
mov
xor
ljmp
aaa
test
insb
mov
sbb
mov
push
sub
aad
mov
fwait
addr16
pop
jbe
sti
push
lods
jg
cmp
mov
xchg
test
in
xor
lahf
repnz
jo
dec
movsb
int
lret
pushf
movsl
into
jg,pn
cbtw
mov
aad
adcl
sub
je
js
es
xor
stos
sbb
cmp
adc
sbb
pop
data16
out
push
sub
in
test
fldenv
fisubl
aad
and
mov
in
xchg
outsb
call
adc
dec
test
or
cmp
loopne
pop
mov
cmp
mov
jp
cmpsb
movsl
aaa
movsl
xor
and
add
hlt
push
aas
lahf
xchg
adc
adc
in
out
fstpt
mov
or
dec
mov
pop
sti
dec
inc
clc
cld
xorb
xor
xlat
cmp
pop
jae
andl
out
fbstp
fcom
xchg
fmuls
test
popf
int
lahf
and
fwait
arpl
xchg
int
push
pop
fdivr
rorb
xchg
ficoms
out
shl
inc
out
in
mov
jp
sahf
or
fstl
lds
sarl
dec
xchg
ss
sub
cmp
sub
push
inc
jle
xor
sarb
hlt
addl
mov
push
jle
xor
mov
cld
call
mov
dec
daa
push
jno
pop
orl
push
fdivrl
ljmp
fisttpl
les
das
xor
mov
adc
in
outsb
inc
je
das
mov
shll
adc
push
sub
mov
pop
push
xorl
dec
dec
mov
outsb
das
xor
jnp
jmp
and
adc
xchg
cmp
xchg
div
jns
xchg
sbb
jb
dec
lods
mov
jg
pop
lods
incl
fstpt
les
or
adc
lods
pop
or
data16
scas
das
fmuls
or
sbb
popa
sbb
andl
cmp
dec
jge
and
loope
push
xchg
add
sbb
testb
iret
pop
pop
out
lret
mov
adcl
lds
mov
out
dec
inc
repnz
or
shlb
dec
mov
fwait
adc
in
fsts
lret
xlat
enter
mov
xchg
je
inc
sbb
sti
inc
scas
loop
push
in
sub
inc
dec
lcall
push
les
repz
or
sbb
dec
sbb
cli
xchg
daa
adc
icebp
cmp
aas
sahf
pusha
xor
in
jno
mov
cmpl
push
xor
int3
mov
fstps
xor
adc
cmp
push
cmp
cmp
dec
bound
xchg
jp
les
scas
aad
shlb
aad
cld
leave
and
movsb
cltd
divb
das
push
and
jl
jno
sub
push
pushf
inc
ret
int3
loope
sub
mov
outsl
sub
pop
jae
cmp
add
lea
sbb
stos
test
in
cmpsl
pop
arpl
aam
loopne
mov
mov
add
xor
pop
es
shll
xchg
mov
ficomps
or
test
lods
loope
inc
repz
cmp
push
jo
cmpsb
fstpt
andb
lcall
bound
pop
iret
pop
lods
add
pop
xchg
sub
test
imull
xor
mov
idivl
es
outsb
mov
das
sub
dec
cmpsb
aad
ror
add
data16
popf
fdivrl
add
jp
push
fildl
in
jmp
iret
push
std
mov
and
cmp
in
sahf
mov
xchg
fdivl
pusha
cmovno
fbld
rolb
adc
cmp
xor
fildl
adc
jecxz
sub
push
push
lcall
sub
lods
andb
pushf
out
dec
incl
repnz
sarb
rorl
fiaddl
inc
jge
stos
fmull
fisubl
ds
cmp
out
cmpsb
ret
insb
int
push
xchg
push
lea
sti
mov
jno
dec
adc
push
lods
jecxz
push
rol
int
out
cmp
sbb
notb
adc
mov
aaa
adc
notl
adc
push
rolb
sub
jb
fldenv
inc
mov
sub
jbe
sbb
stos
pop
scas
mov
adc
in
adcb
gs
dec
in
push
ja
das
lock
add
sub
mov
add
xchg
outsb
in
xchg
stc
jge
mov
jg
or
test
bound
mov
loop
leave
pop
mov
dec
and
pop
lods
stc
and
icebp
leave
outsl
sarb
cmp
lcall
addb
in
ljmp
sub
dec
jecxz
dec
iret
adc
xor
mov
jnp
push
nop
repz
lock
lea
adc
lret
or
and
mov
ljmp
rcl
hlt
or
xor
and
xor
dec
movsb
xchg
pop
enter
jns
xchg
mov
loop
mov
icebp
iret
or
mov
and
add
inc
ss
and
js
and
jno
push
aas
sbb
push
and
xchg
les
int3
jp
dec
pop
aas
jo
leave
divb
cmpsb
and
hlt
mov
lahf
or
inc
pop
popf
testb
adc
xchg
add
cmp
aas
cmpsb
lock
push
insl
or
xor
jp
adc
push
push
add
dec
in
push
pop
cmp
xchg
mov
js
pop
popf
scas
aaa
or
repz
out
mov
out
jg
or
sub
jg
shrb
dec
inc
pop
push
fcom
push
mov
cmp
cmpsl
insb
adc
mov
out
fnsave
int
loopne
scas
mov
cmp
int
xchg
and
std
rcrl
aam
out
dec
sbb
xchg
repz
cmp
test
incb
adc
pop
arpl
mov
int3
lret
sbb
test
pop
push
sbb
xor
ss
js
xor
mov
adc
imul
lret
mov
rep
ja
jecxz
aas
pop
fidivl
or
inc
cli
ss
jp
test
xchg
cmpsl
loope
pusha
clc
fidivl
sub
cmovnp
sbb
sbb
std
fadds
shll
pop
push
sub
leave
inc
add
cwtl
repnz
cmp
dec
cwtl
sub
or
testb
int3
int3
js
pop
lahf
movsl
sahf
inc
loopne
xchg
xlat
enter
xor
movsb
sbb
ljmp
mov
inc
dec
add
std
lcall
mov
push
rorb
fimull
dec
add
sbb
lcall
jp
cmpsb
jge
inc
repz
cs
sbb
or
push
shll
test
scas
pusha
and
and
adc
cltd
pop
mov
addr16
mov
sbb
fcmovnbe
sub
sbb
nop
bound
sahf
xor
subl
cwtl
test
fs
dec
push
inc
cli
mov
add
rol
int
xor
stos
xchg
xchg
jno
and
adc
add
mov
sub
adc
aad
and
xchg
adc
cmp
mov
nop
adc
jmp
push
in
jmp
loope
out
popl
inc
sbb
in
movsl
mov
mov
hlt
lods
outsb
dec
xor
sub
test
sub
mov
test
pop
jecxz
and
fstpl
push
popa
cmc
dec
mov
sahf
or
outsb
ret
arpl
xchg
jbe
sti
sbbl
push
jbe
or
rolb
aam
es
pop
mov
dec
divb
in
jne
dec
in
addr16
stos
jo
ret
dec
rcl
pushf
call
sbb
mov
aaa
dec
pop
adc
and
test
jg
fwait
lahf
fmul
xor
dec
aad
xchg
cmpsl
imul
mov
xor
js
inc
stc
and
cmp
fcoms
lret
out
scas
shlb
push
sar
scas
or
jmp
jmp
lea
and
push
sub
push
aaa
fidivs
loop
aad
aad
xor
jmp
mov
or
jp
fs
dec
or
inc
pop
inc
test
ret
mov
jns
push
pop
sub
cmpsb
rolb
lods
push
fstpl
push
inc
out
inc
cmp
shl
xor
and
push
ret
out
imul
hlt
adc
lahf
mulb
andl
rorb
inc
sub
frstor
push
xor
sahf
aas
outsl
xchg
xchg
sbb
ja
or
pop
cmp
imul
cmpsl
push
fmull
push
push
inc
test
cmp
or
lcall
dec
mov
inc
add
push
push
jge
mov
lods
loope
mov
mov
mov
fnstcw
or
add
jbe
aad
sub
sub
cmpsl
and
loope
sub
lahf
cld
pop
enter
movsw
push
mov
enter
into
mov
mov
adc
das
fst
cmp
or
cmp
mov
les
cmc
sahf
mov
sbb
or
sub
dec
mov
cmpsb
mov
add
pushf
jnp
popa
cmpsl
pushf
xchg
jl
pop
xor
mov
xchg
sbb
jae
push
shr
push
call
cmp
cld
pop
std
or
or
jp
or
fwait
je
pop
aas
addr16
loop
sub
push
testb
lret
jle
push
xchg
pushf
test
out
cmp
out
test
push
scas
dec
jno
dec
out
sbb
scas
jbe
jno
test
mov
cmpsl
popf
lock
adc
dec
ds
loope
int
rolb
jecxz
stos
cli
scas
out
dec
and
mov
and
mov
or
lods
pop
jmp
mov
dec
jecxz
adc
outsl
imul
sub
lock
or
clc
imul
popa
cmc
push
sbb
int3
pop
mov
aam
je
sti
mov
imul
int3
movsb
mov
mov
ljmp
scas
jbe
xchg
lods
jmp
shll
jl
out
test
mov
mov
adc
adc
push
mov
lds
jnp
mov
neg
pop
bound
fstpl
bound
xchg
fcmovb
hlt
stos
ret
push
jo
xchg
mov
cld
test
roll
popa
lock
lret
sbb
lock
cmpb
fcomps
pop
jge
push
lret
call
or
stos
push
xor
or
es
ljmp
xchg
imul
push
clc
leave
mov
ficoml
push
std
mov
cmp
sbb
dec
mov
ret
cmp
scas
jbe
int
fs
int3
std
sub
xchg
in
mov
push
in
jnp
popf
mov
roll
in
pop
and
add
xor
mov
inc
in
dec
push
dec
xchg
mov
iret
xchg
adcb
inc
sub
xchg
out
sub
dec
cs
rcrl
inc
lods
cmpsl
lahf
mov
xor
cmpsl
jne
mov
mov
push
loopne
stos
adc
fisttps
pop
lods
fs
add
aaa
pop
jge
mov
sbb
mov
and
in
xor
mov
loop
inc
push
das
or
xor
cmp
inc
mov
jns
imul
stc
les
cmpsb
lahf
push
sub
out
psrld
sub
daa
bound
loope
inc
sarl
test
xchg
sub
testl
and
inc
test
test
repnz
push
adc
mov
mov
mov
xchg
adc
jecxz
imul
sbb
ficoms
xor
cli
xchg
sub
add
mov
jmp
jp
mov
fdivl
rcrl
insb
ret
testb
jmp
add
popa
jb
jmp
cmp
add
fcomp
add
nop
sub
sub
outsb
jl
arpl
and
leave
dec
fstl
call
dec
out
adc
popa
insb
test
fsub
push
cmc
inc
std
sub
push
and
pop
incb
adc
movzbl
fisubs
or
mov
mov
ljmpw
bound
jb
xor
xor
cld
cld
cmp
aas
jno
leave
gs
ficomps
dec
icebp
jmp
aaa
adc
loope
loop
popa
sbb
mov
fwait
push
cwtl
mov
inc
cmp
cwtl
jne
fstp
das
orl
xor
in
xchg
in
sti
mov
mov
fcmovb
inc
jnp
cltd
jo
pop
add
pop
mov
pop
test
push
jbe
xchg
mov
xor
add
lret
ret
lret
or
shrb
cmp
ja
lds
jb
fdiv
aad
mov
fistps
shlb
aaa
xlat
xchg
add
loop
inc
add
push
pop
adc
imul
fmuls
sub
iret
xor
pop
gs
dec
pop
xchg
inc
in
and
add
jmp
dec
fs
fidivs
pop
mov
xlat
xor
mov
xorb
and
mov
sub
ret
test
xchg
adc
or
adc
add
pop
inc
jecxz
les
std
inc
push
outsl
or
pushw
cmp
dec
fs
xchg
cli
fxam
ja
leave
push
lds
inc
mov
add
mov
jge
gs
adc
arpl
ds
pshufw
add
test
mov
add
in
nop
ljmp
pushf
add
push
adc
mov
mov
adc
pop
iret
loopne
pushf
lock
mov
popa
daa
aam
push
cmpsl
shl
pop
es
fnstenv
das
les
and
imul
add
xor
mov
push
cmpsl
call
ja
mov
dec
pop
push
dec
fstps
inc
or
ja
shlb
int3
call
mov
mov
mov
stos
or
inc
inc
pop
and
sub
sbb
pusha
js
es
or
enter
sub
jnp
je
mov
test
lds
push
dec
inc
sti
jnp
adc
shll
or
loop
sbb
das
sub
adc
scas
mov
push
or
add
stc
cld
sarb
lret
fisubrs
cmp
sahf
lret
mov
mov
mov
scas
mov
cmpsb
push
pop
ss
inc
mov
insl
iret
and
movsb
sti
aas
adc
inc
das
daa
lret
repz
jmp
jl
in
sarb
fs
paddsw
lods
mov
inc
int3
mov
pop
popa
add
add
stos
pop
adc
push
rcll
mov
movsb
adc
fiadds
mov
not
dec
lock
out
in
inc
mov
pop
scas
jne
leave
lods
push
ds
imul
sbb
loopne
sub
pop
adcb
test
and
xlat
movsb
xorl
lahf
adc
xor
and
ds
aaa
dec
pop
ljmp
mov
repnz
in
xchg
xor
aas
imul
adc
cwtl
out
add
ja
xor
cmc
mov
mov
cwtl
inc
shll
insb
jnp
jb
aam
incl
cmp
xchg
dec
enter
sbb
sbb
ret
ss
cmp
in
loopne
fs
jl
lods
mov
daa
cmp
mov
test
add
jno
jmp
push
pop
js
pop
movsl
cmp
xchg
mov
hlt
sbb
inc
jle
dec
imul
sbb
jg
cmp
cwtl
sbb
pop
jge
push
and
xchg
dec
out
out
mov
aam
out
sub
int3
push
out
jno
icebp
fdivrs
aad
push
roll
dec
out
into
mov
cmp
and
ret
lock
mov
mov
lcall
lods
push
inc
or
fisubrl
test
mov
std
jnp
xchg
mov
mov
mov
mov
das
test
lcall
inc
aam
arpl
ds
sbb
sbb
jle
fisubrl
testb
adc
sbb
data16
dec
clc
leave
addr16
stos
dec
cmp
sbb
outsb
fstpt
call
inc
mov
stos
aad
inc
jo
cli
push
xor
push
add
out
sbb
aaa
ret
aaa
hlt
pop
cmp
or
daa
push
sub
data16
sahf
add
xchg
movsl
adc
jno
imul
and
push
mov
sbb
mov
sbb
dec
cmp
out
push
sub
mov
cmp
out
packuswb
sub
imul
jg
repz
das
in
lea
pushf
fcomip
sbb
jae
and
pop
sbb
pop
inc
jle
sbb
jecxz
repnz
lea
popa
sub
sbb
or
xor
pop
cmpsl
subb
add
test
push
inc
jae
inc
push
sahf
int
cmp
adc
fnstcw
xchg
mov
jg
push
lods
repz
jae
shrl
cmp
scas
sub
xor
cmpsb
divl
mov
add
inc
test
lods
mov
dec
pop
push
lods
sbb
push
sbb
mov
mov
sbb
insb
fs
add
xchg
mov
pop
int
lods
sarl
outsl
push
ret
inc
mov
add
cmc
scas
mov
cmc
mov
cmpsl
mov
test
gs
inc
sbb
pop
lds
and
mov
mov
jmp
or
lods
std
adc
call
fstps
mov
jnp
dec
orl
xchg
outsb
imul
testl
cmp
sbb
xchg
mov
xchg
test
or
mov
les
into
pop
mov
out
and
mov
cmp
divl
out
mov
stos
pop
in
sub
pusha
and
dec
pop
sarl
inc
out
add
sub
sub
push
push
sub
push
bound
lock
lret
ret
sbb
insl
out
test
jl
fldl
mov
insl
sbb
mov
and
cmpsb
icebp
fildl
add
xchg
hlt
movsb
std
fildl
mov
jmp
lcall
jno
pop
ret
push
subb
pop
jge
push
cmp
je
xor
lock
pop
xchg
xchg
hlt
push
ret
fwait
and
xor
repnz
insl
ljmp
insl
xorb
cmpsb
xor
jbe
dec
fsubrp
lock
loopne
sbb
push
test
lret
in
pop
xorb
push
das
or
imul
pop
xchg
fcos
and
call
add
xchg
xchg
js
fdiv
cmp
pop
dec
cmc
xchg
sub
cmc
or
rorb
ljmp
mov
aaa
bound
cmp
out
rolb
sti
rcrl
push
push
adcb
addr16
cmp
add
sub
lahf
mov
dec
loopne
dec
xor
xor
jb
sbb
and
test
add
enter
sbb
or
pop
xchg
mov
inc
push
mov
sahf
pop
add
leave
cmp
cmpsl
or
add
out
shrb
mov
ret
imulb
imul
or
pop
mov
adc
movsb
mov
and
inc
jg
xlat
aad
jge
dec
das
mov
adc
enter
cmpsb
push
mov
addr16
rol
and
xchg
imul
es
xlat
adc
cwtl
out
daa
dec
repnz
sub
clc
addr16
cmpsl
cld
cld
cmpsl
pusha
mov
stos
or
xlat
mov
insb
push
push
das
gs
ja
sbb
aam
mov
sub
cmp
sub
push
enter
mov
stos
jnp
mov
stos
ret
add
jle
inc
push
testb
fimuls
roll
mov
cmp
mov
pop
push
in
mov
out
stos
push
loopne
test
scas
push
inc
sbb
mov
cmp
push
shrb
aam
xor
mov
outsb
xchg
pop
cwtl
add
outsl
jnp
sbb
sbbb
cmpsl
in
cmp
stos
lcall
aad
xchg
imul
cmp
fisttpll
push
push
repnz
lds
inc
std
clc
xchg
xchg
fwait
roll
and
movsl
loop
mov
shrl
aad
dec
hlt
dec
mov
mov
insl
std
or
out
sahf
hlt
dec
cmp
mov
push
and
lahf
test
fldenv
out
leave
inc
dec
pusha
xor
lods
mov
stc
pop
xor
and
js
push
inc
aad
xor
and
fsubl
sub
or
ror
stc
or
ds
sub
loopne
inc
aam
sub
inc
xor
jge
movsb
popf
push
jle
insb
sbb
sbb
sbbb
loop
adc
out
jmp
fistpl
fisubs
stos
inc
dec
push
inc
out
out
aad
je
mov
mov
xlat
imul
cmp
sub
popf
outsb
jp
cwtl
mov
popf
lock
sbb
push
pushf
loopne
fisttpl
jae
push
xor
outsl
add
jp
pop
xchg
bound
jecxz
cmp
push
jns
inc
xor
dec
pop
cmp
pop
xorl
xchg
push
sbbb
gs
push
out
movsb
cmp
mov
jg
lods
mov
mov
cli
lret
enter
jle
dec
add
push
sbbl
popf
pop
data16
jo
lock
mov
push
inc
mov
ret
lret
sub
stos
mov
xchg
or
pop
rclb
cmp
cmp
test
stos
inc
dec
data16
push
add
shll
lock
add
fadd
pop
or
push
jae,pn
cmp
cli
jb
std
nop
scas
iret
pop
xor
lcall
int3
pusha
dec
push
pop
sbb
jmp
les
push
lods
stc
add
adc
xchg
lahf
pop
aam
outsb
adc
sub
imul
clc
pusha
icebp
xor
out
xchg
imul
stc
out
adc
dec
cmp
daa
ds
lret
push
out
daa
mov
pop
fldenv
xor
mov
clc
repnz
adc
push
sahf
xor
mov
jno
aas
mov
or
add
inc
daa
cmp
pop
mov
adc
cmc
or
jl
scas
es
dec
stc
fiadds
cmp
fidivl
xchg
pop
xchg
mov
sbbb
outsb
leave
movsb
adc
mov
jno
ror
jbe
inc
xchg
xchg
fildl
js
subl
mov
and
push
ret
mov
sbb
xor
dec
out
jnp
cs
bound
xlat
adc
cmc
mov
push
xchg
or
enter
jno
mov
pop
cmp
mov
cli
pop
and
nop
jp
pushf
pop
loop
adc
movb
jle
jb
sub
inc
aad
repz
mov
repz
bound
scas
int
sbb
jecxz
das
mov
xchg
sub
mov
outsb
adc
sub
dec
lret
test
popf
mov
push
cmp
stc
jmp
repnz
pop
das
mov
mov
inc
mov
push
cltd
aas
cmpsb
mov
sbb
sbb
xchg
inc
in
imul
pop
adc
loopne
shr
mov
in
in
ljmp
jl
stc
fwait
mov
push
jg
and
mov
mov
or
push
and
and
xchg
and
inc
mov
leave
loope
fnsave
add
cmc
xor
mov
mov
lret
stos
and
jae
aad
jg
xchg
xchg
adc
xor
addr16
push
dec
or
js
inc
push
out
popa
lret
push
mov
xchg
sub
std
dec
arpl
inc
mov
fisubs
add
dec
iret
pop
xor
mov
jns
inc
lret
inc
js
call
mov
jg
dec
xor
iret
jp
adc
mov
pop
pop
mov
aas
dec
jno
cmc
cmpsl
outsl
cmpsb
xchg
dec
push
test
sub
mov
lock
es
js
in
addr16
jae
inc
push
xchg
fbstp
mov
mov
orl
jle
popa
sub
ret
cmp
incb
cmc
outsb
jmp
insb
sbb
idivl
inc
mov
lret
pop
mov
add
xchg
dec
pop
or
pop
js
popl
dec
sbb
ss
std
scas
test
aam
sub
dec
push
push
adc
pop
xor
mov
xchg
xor
std
push
inc
icebp
mov
mov
fidivrs
adcb
jle
cmp
int3
insl
jge
movsl
pop
add
and
test
pop
icebp
sahf
insl
pop
fmul
sbb
adc
push
adc
addr16
add
out
pushf
cmp
lds
std
movsb
and
ror
xchg
add
xor
cmp
out
mov
outsb
out
xor
outsl
incl
fimuls
dec
inc
mov
rcr
cmp
dec
mov
stos
rcll
aas
and
fnstsw
sbb
push
cmp
sbb
and
mov
mov
mov
cmp
sub
loopne
movsb
pop
in
mov
inc
xchg
lods
aad
in
cmp
inc
ss
in
iret
shll
push
push
mov
stc
ror
or
xor
gs
jl
ret
sahf
ficomps
outsl
pusha
das
out
pop
icebp
nop
aam
inc
out
add
or
sbb
ja
and
test
rcrb
xor
add
sti
shll
insl
inc
sbb
fwait
mov
jae
out
cld
pop
dec
cld
push
dec
idivb
shl
pop
mov
es
in
mov
adcl
fisttps
pop
lods
icebp
xor
out
mov
sbb
into
repz
in
xchg
cmc
cmpsl
sub
mov
outsl
inc
xchg
in
pop
jle
adc
lret
push
sub
sbb
sbb
dec
xchg
jno
inc
xor
orl
and
incb
mov
sbb
xchg
insb
test
testl
testb
rcrb
mov
pusha
ffreep
shrb
sbb
dec
outsb
lret
jle
add
cltd
adc
dec
arpl
dec
gs
notl
gs
mov
fwait
sub
sbb
dec
ss
dec
adc
arpl
dec
mov
cmpsb
test
mov
popf
jmp
push
pop
mov
mov
test
sub
sbb
mov
xor
aaa
jg
insb
inc
clc
push
and
out
or
push
mov
int3
sub
jecxz
ret
lea
loopne
or
icebp
rcr
cmp
arpl
cmp
sbb
mov
mov
popf
cli
insl
jge
stos
es
ds
pop
int
jno
enter
test
mov
xchg
shl
push
xchg
es
dec
cmp
int3
add
add
mov
or
out
sbb
pusha
sub
icebp
xchg
int
mov
icebp
inc
ret
mov
dec
adc
cwtl
popf
and
inc
mov
fidivrs
sub
shlb
aas
sbb
shlb
jne
cmpsl
and
outsb
or
pop
es
lea
loope
cld
xlat
insb
or
pop
shrb
sbb
fistps
or
imul
fld
mov
xor
loop
cmp
test
inc
sbb
loop
pop
int
int3
or
ret
xchg
shll
mov
mov
dec
enter
or
pop
jo
test
xlat
xlat
push
or
aad
inc
ret
add
loop
cmp
in
lock
cmpsl
mov
dec
sbb
push
mov
and
stc
dec
mov
mov
ret
cmp
pop
sub
mov
xchg
in
or
push
lds
mov
mov
pop
repnz
push
in
pop
jp
pop
and
and
jbe
mov
movsl
cmp
icebp
shl
lods
in
stos
outsb
test
xor
leave
jnp
ljmp
fidivs
or
xor
into
add
push
push
or
pop
inc
jmp
xchg
popa
mov
jae
jecxz
in
popf
jnp
jae
push
test
mov
out
push
ds
ja
andl
data16
and
and
lds
icebp
aad
mov
imul
popa
lahf
ja
xlat
and
push
push
pop
or
rorb
pop
mov
int3
es
out
inc
test
in
bound
lea
cmp
cmp
dec
repnz
lods
jnp
sti
out
das
pop
mov
mov
cmpsb
fldenv
pop
out
aaa
into
je
outsb
cmpsl
mov
dec
pushf
adc
loopne
push
arpl
dec
pop
mov
adc
and
or
xchg
cmpsb
pop
mov
not
and
clc
and
outsb
arpl
push
push
mov
movsb
lcall
jbe
inc
sub
cli
aas
xchg
jo
add
clc
mov
das
jecxz
mov
pop
loop
and
mov
cwtl
pop
jb
in
outsb
and
cmpsb
ja
push
jl
jle
lea
fld
jmp
xor
dec
addb
jg
out
mov
sarl
add
and
sub
mov
adc
es
aad
test
imulb
dec
add
xchg
push
sbb
sti
cmpsb
sub
push
js
xchg
xorb
adc
sub
sub
push
mov
stc
mov
inc
shr
dec
fucom
inc
sti
xor
push
xchg
stos
add
or
mov
push
out
ss
xor
pop
or
enter
cmp
jae
std
pop
popa
out
add
sbb
in
test
aas
popf
xchg
sbb
shl
push
and
cmc
addl
or
iret
push
stos
cltd
mov
lods
gs
dec
fsubl
dec
idivb
mov
jo
scas
daa
xchg
daa
out
pushf
les
dec
in
lret
fdivl
adc
push
xor
sbb
pop
xor
addr16
fisttpll
aam
push
adc
ror
loopne
out
das
enter
adc
shr
pop
std
test
mov
mov
jle
jp
sahf
cmp
popa
addr16
fldl
inc
ret
movsl
jae
daa
sbb
popf
rclb
xchg
cmc
mov
pop
pop
js
jae
cmpsl
sub
in
mov
insl
inc
test
and
movntps
sub
and
imul
lret
xchg
jb
pop
mov
adc
and
inc
lds
mov
and
mov
test
cli
push
mov
push
fcmovu
in
dec
inc
mov
jge
rcr
addl
fcmovnb
rcll
in
and
sbb
in
fdiv
sub
imul
add
mov
xor
inc
scas
cmpsb
pop
test
mov
sbb
adc
pop
js
std
inc
mov
arpl
mov
je
test
push
andb
dec
lret
fcmove
mov
xor
xor
push
add
fsubl
jecxz
and
push
call
sbbl
das
adc
hlt
xchg
sbb
jnp
int
ljmp
cmp
ds
cmp
mov
and
leave
mov
jl
push
shl
test
mov
sub
lret
inc
ret
add
sbb
or
cmpl
adcb
dec
jp
call
nop
xchg
loope
incl
sbb
scas
pop
and
lods
pushf
loopne
and
inc
jl
xchg
jmp
and
sbb
insl
cmp
bound
repz
add
push
in
inc
mov
mov
inc
pop
lret
sbbl
and
pop
int
test
ret
mov
mov
xchg
mov
fs
data16
inc
mov
xor
mov
push
call
jno
ja
and
cmpsl
adc
repz
jmp
xor
cmp
mov
int
addr16
aas
or
adc
or
test
orb
leave
into
pop
ja
ss
test
mov
shrb
cmp
sub
std
jns
xchg
and
movsl
and
imul
das
sbb
mov
dec
and
mov
jg
mull
fimuls
dec
jo
xor
loope
pop
imul
push
rcll
rol
inc
insb
stos
pop
dec
push
popa
adc
ret
push
inc
dec
loopne
data16
xchg
imul
mov
jno
loop
sub
cmp
mov
inc
xchg
push
movsl
cmpsb
in
int3
std
fs
dec
jge
gs
shrb
out
popf
stc
sbbl
jg
stos
aas
jbe
fists
dec
negb
and
adc
sti
popa
out
and
ljmp
xchg
lds
mov
push
adc
divb
pop
inc
add
pop
pop
push
gs
mov
notb
push
into
cmp
cs
dec
xor
test
jnp
mov
xor
movsl
xchg
pop
lods
popf
and
push
and
fmulp
adc
mov
push
mov
sub
inc
mov
mov
sti
mov
jp
sahf
lea
add
inc
imul
insl
hlt
insl
sarl
add
mov
cltd
pop
out
sbb
fdivs
cmp
fistpl
test
xlat
pusha
sub
and
aas
jge
xchg
jecxz
rep
cwtl
inc
fdivrp
bound
sub
std
dec
fimuls
movsl
and
adc
add
sub
int3
test
pop
adc
cli
loop
inc
loop
ss
add
aad
jmp
fcomps
insl
push
xor
mov
fnstcw
js
and
lds
shlb
pop
jns
mov
into
dec
arpl
lock
stos
pop
mov
jne
pop
nop
lret
hlt
mov
cmc
daa
pop
push
pop
hlt
sbb
test
out
sbb
in
pop
int
call
pop
lret
inc
push
pop
mov
adc
in
cld
arpl
rolb
into
pop
data16
stos
stc
in
pop
dec
ud1
loop
mov
push
push
xchg
lock
jns
lods
jmp
add
xchg
xchg
test
mov
xchg
mov
into
stos
sub
sbb
cltd
or
push
mov
test
call
sub
ret
push
pop
or
in
pop
and
inc
pop
dec
sub
enter
stc
cltd
mov
adc
test
jmp
fwait
xorl
loop
ja
xorb
mov
sub
fimull
pop
subl
fucomi
movb
sub
push
mov
into
xchg
adc
inc
sbb
cmpsb
adc
jno
or
push
jl
imul
jmp
add
lret
rclb
dec
pop
lock
fwait
inc
aam
push
stos
outsl
lods
add
push
xorl
out
push
cmp
cmp
popa
add
adc
lds
hlt
push
addr16
mov
divb
jae
cmp
xchg
repnz
xor
dec
psubd
insl
lret
pushf
push
aad
adc
xor
fnstenv
xor
mov
add
sbb
sbb
dec
movsl
jno
adc
adc
inc
cwtl
aam
stos
mov
cmp
loope
cmc
push
push
inc
int
jnp
mov
push
lods
mov
loope
push
push
lret
jge
and
mov
gs
fdivl
cmp
sub
xchg
scas
sbb
inc
lahf
adc
mov
lret
dec
pop
pop
push
inc
je
inc
shr
add
arpl
int
lret
mov
fcmovne
push
or
aaa
aaa
enter
jge
jne
xchg
hlt
push
adc
jl
sbbl
mov
je
mov
inc
out
lods
divl
mov
sub
pop
cmpsb
roll
test
xor
stos
inc
outsl
mov
xchg
cltd
xchg
xor
ret
cmp
bound
mov
js
stos
in
mov
leave
xchg
pop
adc
push
cmp
push
mov
mov
add
push
bound
test
jne
jno
fwait
out
xchg
sub
shlb
or
jo
pusha
sub
adc
out
test
push
filds
pop
xchg
subl
js
xor
add
sbb
jecxz
mov
je
adc
in
xchg
orb
and
stos
cwtl
adc
dec
jp
jp
lcall
inc
test
xchg
scas
int3
dec
mov
cs
leave
iret
adc
mov
in
inc
jp
dec
xchg
ss
enter
push
and
das
test
cwtl
xor
add
in
ror
cmp
cmp
push
dec
and
out
and
sbb
sub
in
xor
out
dec
pop
shrb
aaa
call
push
test
in
sub
aad
int3
pusha
int3
jp,pn
cli
dec
sbb
xchg
xchg
popa
mov
sbb
and
push
mov
icebp
pushf
aad
cmp
test
fadds
jae
cltd
imul
clc
sub
insl
test
adc
dec
cmp
push
sub
jae
cli
rorl
fs
out
gs
repnz
mov
add
outsl
clc
gs
pop
adc
testl
dec
sbb
jns
lods
insl
punpckhwd
out
loope
mov
pop
push
call
das
dec
jne
jnp
dec
add
cs
adc
mov
cmc
mov
mov
lock
gs
sub
sahf
cmp
call
jno
add
sbb
or
inc
mov
add
call
push
sbb
jge
inc
imul
mov
andl
out
paddw
test
shrb
imul
mov
xchg
subl
xor
pop
jae
insb
inc
aam
pop
cmpsb
jo
and
push
jmp
pop
mov
inc
icebp
and
xchg
mov
sbb
das
jg
push
insb
lds
jp
push
bound
aam
fsubp
gs
jmp
out
je
inc
and
cli
or
inc
sbbl
mov
pusha
fbstp
xchg
or
imul
out
xor
notl
dec
test
lods
xor
mov
jae
sub
add
dec
cld
mov
mov
cmp
lret
lock
or
adc
jb
jae
dec
sub
aaa
mov
pop
mov
scas
repz
mov
subb
or
clc
xlat
xchg
pop
dec
hlt
test
push
aaa
jge
mov
mov
ss
idivb
mov
fcmove
test
idivb
test
in
out
loop
mov
adc
enter
scas
loope
ret
cltd
push
push
roll
inc
or
cmpsl
addr16
adcl
sbb
push
fisttps
xchg
mov
mov
shrl
daa
imul
sub
push
cmc
push
fldl
mov
iret
or
loop
lods
pop
mov
ja
or
lds
inc
andl
and
adc
cmp
in
dec
or
enter
push
je
pop
or
cltd
jge
repz
clc
test
mov
out
lock
jns
or
xchg
fs
mov
outsb
inc
imul
push
std
xchg
inc
jb
mov
test
insb
cmp
xchg
test
outsl
lods
and
dec
cwtl
mov
xchg
ret
mov
int
jmp
daa
cmp
adc
xchg
loop
pop
mov
jnp
mov
or
add
fisubrl
test
mov
pop
add
mov
mov
jae
add
add
adc
or
data16
lods
popf
out
cmp
test
adc
push
sbb
xchg
push
int
cld
xor
inc
lret
filds
push
pop
lret
mov
shrl
push
les
add
loopne
mov
fcomip
mov
mov
test
mov
xor
ret
pop
mov
mov
sub
fistps
pop
pop
int
fwait
add
inc
add
loopne
js
sbb
mov
sub
pop
pop
mov
adcb
rclb
scas
mov
insb
and
imul
inc
xchg
mov
lcall
xor
pop
cmpsb
bound
repz
pop
push
inc
dec
ja
jns
std
jno
fdivrl
xchg
inc
lods
incl
sar
sub
mov
push
cmp
loop
pop
cltd
cmc
rcll
out
dec
hlt
sti
out
test
test
icebp
mov
dec
pop
jnp
fbstp
mov
movsl
mov
jno
push
pop
or
js
dec
and
add
jb
mov
std
fiaddl
pop
imul
inc
pop
add
in
out
xchg
les
or
mov
test
push
fistps
ret
js
adc
test
filds
cmp
and
pop
or
or
jmp
and
test
jno
jbe
push
fwait
mov
js
cmp
pop
mov
pop
inc
jl
dec
push
sbbb
xor
shrl
sub
add
shrb
dec
push
jecxz
out
test
test
push
push
mov
mov
mov
mov
xor
push
push
adc
pusha
jecxz
inc
xchg
cmp
ljmp
pop
mov
outsl
fwait
lahf
adc
lahf
stos
cmpsb
insl
ljmp
sbb
cmp
inc
inc
pop
push
or
scas
scas
in
frstpm(287
xchg
push
jae
xorb
stc
mov
push
je
push
loop
mov
bound
mov
lods
je
in
or
int3
push
push
call
jae
jp
dec
fstpl
js
xchg
sbb
ja
cmp
aas
pop
add
ret
aad
cmp
addr16
cmc
jns
xorl
enter
inc
test
sbb
push
lcall
lock
cmpsl
xor
push
inc
fildl
fisttpll
outsb
icebp
pop
xchg
mov
repnz
push
push
out
cmpsb
ljmp
fimull
push
aam
push
jne
dec
push
movsb
test
es
cmp
sub
add
pop
shrl
push
pop
ja
das
outsb
aam
insl
stos
sbb
imul
ficomps
fwait
popa
ljmp
stc
cmp
add
jo
adc
mov
ja
sub
or
test
lea
in
inc
cld
and
push
jae
arpl
inc
xchg
sbb
in
cwtl
adc
hlt
mov
xor
ss
adc
xchg
mov
mov
add
jae
std
mov
mov
les
jecxz
outsb
pop
mov
daa
inc
sub
imul
and
enter
lcall
in
mov
lret
jp
jmp
mov
popf
cmp
xor
push
bound
push
gs
mov
mov
dec
aad
mov
dec
push
les
enter
xchg
cwtl
cmp
dec
gs
add
ljmp
xor
les
sub
sti
mov
jae
dec
enter
sbb
mov
icebp
xor
fstpt
ljmp
out
outsl
mov
cmp
stc
cli
cltd
test
mov
aaa
out
ret
mov
push
lods
addr16
fistl
and
dec
ljmp
pop
fbld
cli
xor
jmp
bswap
dec
jnp
mov
jg
push
dec
movsb
mov
push
lds
inc
jl
mov
ja
daa
fxch
pop
push
pop
scas
mov
filds
leave
sub
push
mov
inc
mov
or
mov
jbe
push
xchg
movsl
dec
or
bound
addr16
dec
push
push
or
loope
sbb
sahf
mov
pextrw
inc
cmpsb
sub
rcrl
insb
andl
imul
adc
xorl
mov
and
sub
outsb
int3
xchg
sahf
fdivr
imul
pop
mov
loopne
mov
or
pop
std
mov
push
adc
fnstenv
mov
dec
lret
xchg
xor
inc
aaa
jge
lods
dec
push
stc
imull
pushf
mov
cwtl
divb
xchg
push
loope
add
mov
out
xchg
aad
push
sbb
in
xor
pop
xchg
mov
outsl
xor
mov
adc
lds
jl
mov
dec
pop
loopne
and
test
int3
cli
sbb
ja
mov
roll
scas
je
cmpsb
dec
insb
add
cs
lods
insb
out
loop
mov
jo
cltd
cmp
inc
add
jle
inc
ror
das
popf
lret
insb
sbb
js
sbb
std
jno
jmp
out
ret
lock
push
notb
xchg
lock
mov
adc
push
xchg
js
mov
dec
loopne,pt
xor
sbb
les
orl
adc
jge
push
push
cmp
add
or
testl
push
sbb
xchg
fstpt
test
sbb
popa
mov
dec
mov
sub
fs
lahf
fcomp
movsb
and
daa
xchg
call
pop
lahf
call
inc
cmpb
ljmp
fisttpl
scas
andb
sbb
mov
and
outsb
lock
jecxz
fstps
mov
lret
or
ja
lods
mov
mov
add
sbb
adc
test
push
jl
nop
imul
cli
xchg
movsb
jb
jge
jb
ret
jno
cmpsb
aas
dec
loop
and
pop
test
dec
sbb
fidivrs
mov
xchg
add
pop
inc
add
or
mov
cli
add
dec
push
mov
add
bound
shlb
shll
fbld
or
daa
cmpsl
mov
dec
sub
adc
jle
ja
push
pop
iret
outsl
leave
pop
push
push
pop
andl
lods
cld
lret
popf
enter
push
push
mov
fwait
jp
add
adc
sbb
push
mov
imul
mov
icebp
push
iret
or
lcall
fs
movsl
dec
das
stos
push
shrb
pop
rcr
mov
push
and
push
ss
push
push
icebp
pushf
adc
fstpl
dec
out
in
lods
or
sti
mov
in
out
or
xor
inc
mov
pop
stos
ljmp
pop
in
rcrb
daa
ficoml
pop
mov
add
push
push
inc
pop
ja
jp
int3
insl
push
test
mov
and
nop
inc
aaa
insb
xchg
arpl
fsubl
or
xor
mov
daa
js
cmpsl
sbb
pop
push
dec
dec
and
mov
pop
pop
adc
movsl
mov
push
cmp
xor
adc
push
dec
dec
mov
fsubp
push
nop
jle
in
xchg
jnp
call
into
inc
arpl
or
mov
sbb
rcr
loop
pop
iret
jecxz
and
push
pop
xchg
fnstcw
stc
cmp
dec
aaa
loope
or
cli
or
std
xchg
jno
cmpsl
arpl
int3
stc
pop
sub
negl
sbb
push
cmp
sbb
fldl
push
lret
dec
call
mov
adc
pop
mov
int
enter
cmpsl
movb
push
jo
xor
push
gs
loop
mov
imul
arpl
push
mov
push
sbb
jge
xchg
ficoms
fcmovne
test
fldt
rcrb
std
aad
adc
pop
sbb
mov
fldenv
test
add
stc
lret
inc
sbb
jo
push
push
mov
jne
loop
movb
repz
rcll
add
sub
sub
xlat
xor
data16
lcall
mov
rcrl
push
cmpsl
push
cmp
mov
inc
cmpsb
imul
inc
sub
insl
or
pop
mov
mov
int3
in
out
sub
leave
andb
push
pop
aas
leave
cmp
movsl
lock
mov
psrad
out
mov
ror
sub
int3
sbb
adc
lock
cmpsl
lgs
and
mov
mov
or
sub
stos
or
popa
out
les
jecxz
rcrb
add
into
pushl
and
ds
pop
ret
movsl
push
jge
sbb
les
sbb
scas
cli
xchg
lock
fidivl
lahf
xor
xor
mov
es
rclb
and
dec
xchg
add
mov
icebp
push
stos
dec
rcr
ficoms
iret
mov
sub
shr
orb
cltd
les
pusha
mov
push
sub
fildll
repnz
cmp
xchg
push
test
xor
xchg
lahf
aad
and
inc
aaa
sbb
sahf
aad
inc
aad
pop
or
xchg
and
aad
rolb
mov
popa
mov
lods
call
push
add
jge
lock
ret
inc
jns
dec
pop
mov
push
and
push
pop
or
int3
cmc
sbb
and
pop
enter
pop
fildll
and
mov
rcrl
adc
icebp
pusha
cmpsb
insb
fwait
mov
popf
addr16
out
enter
sbb
out
and
adc
or
mov
loope
pop
fisubrs
cmpsb
xlat
bound
jnp
ret
mov
mulb
and
adcb
test
push
outsl
mov
leave
sub
push
insl
mov
out
pop
mov
push
xchg
push
adc
mov
js
push
push
addb
sub
popa
add
inc
xchg
dec
testb
mov
inc
imul
bound
jge
xchg
jp
or
mov
outsl
cmp
inc
flds
mov
and
fcompl
pop
or
std
xorb
xchg
testl
pop
and
push
xor
cli
addr16
cmc
lods
cmp
aas
rcl
scas
dec
mov
rcl
and
cmp
daa
inc
stos
mov
mov
push
into
int
inc
and
test
pop
ljmp
out
dec
aaa
clc
mov
mov
cmp
inc
jbe
adc
flds
dec
xor
sbb
xchg
iret
cli
test
pop
shrl
cmp
repnz
pop
inc
lahf
lahf
jmp
sub
or
adc
and
xor
inc
in
loop
popl
adc
imull
cmp
xchg
cmp
or
pop
pushf
int3
push
pop
mov
xlat
mov
mov
ja
and
fldl
adc
scas
add
add
pop
fsub
test
sbb
stos
xor
out
fstl
xchg
sti
or
jp
xor
mov
adc
lcall
popf
jecxz
jl
shlb
push
sub
aam
ret
adc
lods
or
es
out
adcb
mov
or
inc
scas
pop
pop
aas
mov
jb
es
and
repz
push
andb
jno
into
cld
fsubrs
clc
leave
js
xor
rclb
sub
sub
icebp
xchg
and
cltd
add
out
fs
or
mov
add
mov
out
pop
mov
mov
xchg
xchg
lods
lea
sbb
ss
stos
shr
lods
movsl
ret
out
jbe
ret
xchg
movsb
cmp
adc
int3
push
addl
pop
add
add
ret
inc
jle
enter
fsin
xor
sub
test
cmpsb
dec
mov
dec
out
out
pop
xor
scas
push
sahf
cmc
pop
fistpll
jns
mov
push
mov
mov
std
mov
push
stc
clc
outsl
jle
cmp
cmp
sbb
dec
inc
or
mov
adc
pop
pop
inc
fldl
fnsave
sub
jb
nop
fisubrs
mov
movsl
lahf
aas
xor
adc
xor
push
subb
enter
jb
aaa
mov
sub
rolb
adc
mov
mov
les
mov
jae
mov
push
testl
mov
fcmovnu
cmpsl
fsubs
popf
mov
jecxz
shll
pushf
mov
cmp
stos
mov
nop
lahf
scas
int3
cltd
or
mov
cmp
cmp
push
add
xor
aam
pop
in
in
icebp
mov
xor
cwtl
nop
movsb
pop
mov
add
sbb
aad
das
inc
mov
andb
add
mov
lea
repnz
cmpsb
lret
inc
clc
push
aam
ds
test
inc
mov
aas
mov
pop
adc
pop
aam
push
ret
sub
jo
out
negl
jnp
fists
in
add
rcrb
dec
mov
inc
adc
xchg
in
xor
and
clc
push
out
dec
lods
mov
mov
cmp
ret
out
sub
sbb
ret
xor
cs
scas
pop
push
and
jmp
in
aas
cmpsb
subl
add
fs
xor
je
inc
add
xor
mov
xchg
ret
insb
mov
and
mov
xor
adc
lahf
cld
mov
lock
repz
push
jbe
xor
push
ret
ds
imull
mov
and
pop
inc
jne
pop
sub
imul
push
nop
mov
rclb
sti
in
xchg
pop
mov
xor
rorb
insl
mov
cmp
add
mov
xchg
popf
mov
cmp
xchg
inc
xor
gs
xor
xor
and
aad
sbbb
bound
faddl
adc
dec
icebp
test
pause
out
loope
clc
fstp
xchg
jmp
and
fs
lahf
ja
movsb
pop
cltd
dec
es
aaa
les
movsb
pop
mov
push
dec
aaa
or
insb
fsubrs
pop
push
andl
fnstcw
jns
or
iret
cmp
lds
insb
hlt
clc
hlt
dec
fwait
mov
mov
and
rcl
xor
push
shll
sub
sahf
cmp
add
andb
lods
cld
mov
fwait
aad
mov
mov
xorl
or
cmc
xor
push
in
scas
aad
sti
sbb
out
js
dec
sbbb
push
je
inc
jne
dec
cmc
pop
pop
fdivrp
inc
sbb
pop
sub
add
outsb
mov
push
xchg
xchg
add
aam
cmp
pop
mov
inc
mov
jne
ret
mov
jg
mov
dec
sub
dec
ret
mov
popf
pavgb
mov
ret
pop
jecxz
clc
out
scas
lcall
cmp
pushf
inc
mov
mov
cmpsl
enter
lret
std
pop
jp
push
arpl
dec
shrb
pop
mov
xorl
add
push
stc
cmc
leave
and
call
xchg
inc
pop
fsts
mov
inc
leave
ss
das
fs
sbb
or
pop
int
ret
pop
or
dec
fbld
xor
jno
push
mov
xor
cmpl
pop
lahf
in
inc
mov
lds
dec
insb
fdivs
dec
rcrb
cmpl
pop
enter
in
aaa
cmpsb
daa
or
loop
mov
cmpsl
in
mov
dec
shlb
stc
cli
jns
jbe
dec
mov
mov
insl
scas
and
mov
rclb
or
icebp
subl
enter
ljmp
pop
jo
in
cs
das
or
out
imul
out
stc
sub
sbb
xchg
jae
nop
xchg
and
xchg
or
xchg
mov
es
xor
fdiv
cmp
aam
lods
and
jmp
and
sub
pop
mov
rcll
xchg
add
sahf
fadd
mov
loopne
sti
dec
addl
push
mov
mov
pop
movntq
adc
push
cs
mov
sbb
int3
mov
jg
lcall
jmp
sbb
int
out
pop
loopne
movsl
cmpsb
add
pop
popf
sub
sbb
cmc
js
mov
mov
sub
in
add
jbe
lock
cltd
shl
cs
insl
cmp
or
adc
lods
cmc
test
adc
stos
cltd
adc
jne
xchg
loope
pop
daa
mov
sbb
ret
push
loop
lahf
and
sbbl
aam
out
fnstsw
push
fistps
mov
sbb
jmpw
daa
xchg
mov
test
xchg
add
ljmp
jno
fadd
ret
push
movsl
push
into
pop
mov
es
mov
or
ljmp
fldcw
rcrb
rcr
inc
dec
xor
pop
mov
lock
cmpsl
stc
leave
fdivr
add
rcrb
call
inc
xchg
push
rep
sbb
out
pop
mov
jo
test
out
test
mov
add
xor
rcl
cli
sahf
cmp
and
fimuls
cmc
inc
fstl
ret
mov
dec
js
sar
sbb
pusha
add
xor
inc
shll
add
movl
lock
aad
into
push
sbb
in
mov
gs
xor
cmp
cmpsb
cli
cwtl
je
outsb
pop
dec
mov
fwait
sub
adc
jmp
sahf
push
mov
adc
negb
add
hlt
xchg
mov
xchg
insl
jnp
das
leave
mov
popf
sar
or
inc
push
push
cmp
lret
outsb
jl
xchg
insl
and
pop
ret
ret
je
xchg
ja
adcl
mov
and
mov
lret
xchg
lea
jmp
mov
je
add
in
sub
or
mov
out
mov
inc
pop
inc
insb
outsb
rol
out
jno
mov
stos
xor
push
mov
call
pop
mov
add
leave
cmp
fucomi
js
enter
and
fnstenv
jb
sbb
xor
loop
imul
bound
data16
icebp
popf
movsl
ror
jg
add
inc
cld
scas
adc
hlt
sub
sub
fwait
rclb
nop
es
stc
lcall
and
andb
into
xor
jge
pop
lcall
in
xlat
cmp
mov
xor
dec
push
daa
pop
out
mov
xor
sti
popf
fcmovb
imul
xchg
lea
aas
pop
dec
sub
adc
adc
adcb
mov
cmp
js
jge
mov
add
in
push
pop
int3
push
cmp
repz
push
adc
aad
mov
ds
cmpsl
std
xchg
scas
test
adc
imul
inc
mov
inc
gs
jnp
addb
popa
leave
clc
pop
ret
pop
test
inc
fistps
ds
addb
or
addl
cmp
nop
or
jecxz
push
adc
test
jb
mov
mov
push
jmp
adc
arpl
mov
sub
flds
jns
cmpsl
pushf
ljmp
out
jl
hlt
movsl
nop
stc
incl
sub
js
nop
popf
mov
mov
push
pop
test
loope
xchg
sti
or
hlt
movsl
lret
insb
xchg
out
inc
in
fs
std
xlat
popa
mov
sub
pop
mov
outsb
sbb
lret
jle
push
icebp
or
outsl
add
fdivs
jmp
cmp
into
ret
ret
movsb
xchg
jmp
loop
mov
pop
fldt
push
mov
jnp
into
xchg
jmp
call
dec
push
add
scas
jns
iret
aad
sbb
xchg
push
inc
push
add
add
into
testl
add
push
dec
testl
nop
sub
cmp
test
jbe
jge
dec
pop
pop
and
mov
mov
push
push
dec
xchg
xor
incb
pop
sub
ldmxcsr
jb
push
xor
mov
mov
les
xchg
inc
sbb
push
fucomi
dec
lea
mov
jae
mov
jno
and
pusha
push
cli
sub
sarb
push
sbb
lcall
cld
or
sbbl
stc
pushf
mov
pop
bnd
loop
adc
mov
mov
js
sub
sbb
int
out
das
xchg
jno
dec
push
scas
loope
xor
push
adc
add
loope
faddl
mov
xor
sub
jle
lods
incl
xor
xor
repnz
xchg
lcall
inc
scas
mov
inc
outsl
mov
sub
addb
mov
dec
arpl
imul
jl
int
jb
mov
adc
filds
test
rcll
out
mov
inc
std
mov
add
pop
mov
enter
cmpsb
push
ja
push
mov
pop
jne
sbb
sub
clc
sub
adc
dec
inc
pop
pop
sbb
cwtl
cltd
inc
shr
xchg
jmp
mov
cld
inc
int
cmpsb
push
in
mov
mov
mov
out
jl
add
jb
packssdw
mov
cltd
iret
movsb
add
xchg
xor
mov
es
and
lahf
sub
cli
or
mov
add
addr16
push
sbb
inc
stc
ja
clc
out
jle
inc
jp
int
sarb
addr16
and
sub
repnz
pop
or
mov
jne
jmp
movsl
rcll
sti
mov
push
jecxz
sbb
mov
cmp
push
rorb
jnp
push
pop
mov
dec
adc
cltd
fnstcw
inc
adc
push
fcmovu
lods
cmp
cmp
push
mov
lea
dec
push
push
jle
sbb
add
xchg
adc
or
dec
or
pop
das
mov
lcall
cmp
push
and
inc
add
mov
mov
out
pop
shrl
fs
in
inc
cld
xchg
negl
rorb
movsb
cld
lea
jmp
dec
jb
lret
jmp
aaa
push
test
sbb
xor
hlt
pop
int
xor
ret
lret
and
enter
movsb
into
arpl
shlb
or
out
lret
mov
add
das
into
inc
lods
add
cmp
lea
dec
hlt
mov
sbb
cmpsb
push
hlt
push
push
push
imul
stos
arpl
aaa
je
fnstcw
fiadds
lahf
inc
mov
fnsave
leave
lods
std
sbb
test
xchg
daa
inc
mov
fdivrs
dec
into
mul
cld
xor
rorb
loop
cmc
cs
jecxz
dec
mov
stos
sub
xor
cli
sbb
inc
mov
xchg
cli
imul
xchg
outsb
fisubl
add
push
fdivl
inc
xchg
push
sahf
popa
mov
xor
inc
mov
xrelease
dec
jno
push
insl
push
das
es
xchg
enter
sub
adc
xchg
and
dec
or
inc
addb
inc
and
fidivrl
rcrl
clc
jo
cli
loopne
mov
pop
leave
xchg
clc
aad
es
lods
cmp
dec
mov
inc
push
mov
fstps
jmp
push
jmp
lret
rol
adc
xchg
addb
xchg
mov
rcr
leave
loope
call
cmpb
test
movsl
shll
sub
mov
es
or
add
lcall
and
push
inc
icebp
nop
mov
outsb
sbb
sub
imul
out
sbb
iret
popaw
fsubrl
adc
shrl
pop
inc
ja
or
xor
mov
inc
sahf
add
and
mov
dec
push
dec
gs
insb
imul
fistpll
daa
addr16
push
sub
sub
inc
aaa
xchg
mov
lods
jg
shrb
jle
int
fisubrs
xchg
setp
stc
test
movsl
dec
into
cmpsb
jo
cmp
mov
dec
hlt
loop
jbe
cli
inc
add
nop
jg
repz
int3
inc
in
test
aam
jae
imul
or
pop
xchg
add
out
lret
lock
repz
push
xchg
pop
repnz
jl
add
mulb
insl
pop
repz
aad
pop
pop
inc
adc
sti
and
scas
jb
ret
in
sbb
aam
pusha
mov
mov
int
fs
and
sbb
mov
shrl
xor
or
xchg
add
cmp
enter
jb
insb
out
scas
movb
cld
subb
ljmp
push
xor
cmp
jp
mov
mov
jnp
add
push
mov
loope
jne
mov
dec
push
pop
push
loop
push
xor
jae
push
mov
adc
mov
lahf
pusha
sbb
rcrb
mov
lret
out
jle
shrl
repz
xlat
xchg
add
imull
mov
sub
and
decl
fcmovnbe
cmp
jns
daa
and
mov
mov
cmpsl
jle
in
nop
adc
int
sbb
leave
outsl
jb
and
je
cld
mov
cld
push
mov
ss
pop
mov
gs
test
adc
inc
mov
clc
jo
xorl
mov
sti
mov
mov
cs
je
mov
sub
or
ja
adc
mov
loopne
mov
mov
popf
xchg
je
or
ja
js
leave
movsb
mov
sub
dec
and
std
loop
hlt
dec
imul
xchg
xor
xrelease
dec
mov
cld
dec
pop
sti
pop
popa
out
insb
inc
insl
enter
sbb
iret
mov
xlat
addr16
lea
sbb
mov
mov
cmp
shlb
popf
lods
pop
adc
dec
ret
leave
add
mov
lods
pop
mov
bound
mov
sub
xor
daa
out
jbe
push
clc
sbb
pop
iret
imul
loopne
psubusb
cmpsb
pop
sub
jb
sbb
pop
out
cmp
leave
jnp
in
cmp
sub
loop
ds
add
arpl
test
sbb
sbb
xchg
movsb
inc
addr16
in
and
scas
pop
dec
out
fnstcw
loop
jmp
cmpsb
loopne
pop
pop
or
das
pop
mov
push
lock
negb
in
inc
std
jb
jmp
xor
sub
pop
jle
call
mov
or
pop
pop
pop
aad
cltd
cmp
mov
iret
pop
sahf
faddl
and
mov
lret
sarb
mov
push
cmp
mov
cmp
das
loopne
int
lds
cmpsl
in
or
xor
mov
inc
jae
pushf
icebp
cld
dec
daa
fwait
dec
jle
xchg
sub
in
lods
and
std
outsb
out
test
jbe
cltd
inc
sbb
dec
dec
mov
mov
jbe
mov
mov
enter
dec
sub
daa
and
add
cmp
sub
jecxz
pop
jb
test
sbb
std
clc
pop
jg
and
in
xchg
pop
jl
mov
lds
mov
jno
pop
test
lret
mov
cwtl
fwait
dec
sub
ds
bound
jns
sti
out
cld
test
std
mov
leave
pop
out
imul
sahf
cli
adc
jbe
aas
out
stos
sub
repnz
adc
dec
push
outsl
lcall
leave
repnz
jmp
jae
ja
outsl
mov
pop
leave
add
adc
ljmp
jmp
pop
or
idivl
adc
pop
cmc
out
mov
xlat
pusha
inc
addr16
xlat
cwtl
cs
js
cmp
sti
cmp
xchg
sarb
inc
outsl
andl
mov
iret
xchg
dec
sub
in
lods
xchg
into
inc
fcomip
rorl
mov
fabs
inc
movsb
mov
xchg
imul
sub
dec
xchg
dec
iret
into
xor
push
lea
repz
imul
add
dec
pop
ret
cmp
pop
std
iret
pop
imul
or
sbb
inc
pop
pop
xchg
push
imul
call
mov
out
out
jb
jno
push
inc
jns
imul
nop
popa
mov
pusha
in
cmpsl
data16
popa
xchg
pop
fiaddl
xlat
xchg
int3
push
scas
insb
pop
push
jns
mov
xchg
in
out
call
stos
or
cld
and
inc
dec
xchg
sbb
js
pop
add
neg
lods
push
and
sahf
call
pop
pop
shlb
push
xchg
std
hlt
cmp
std
sbb
pop
imul
push
test
add
int
subl
ja
sbb
roll
mov
rorb
push
mov
inc
xchg
push
in
popa
jmp
add
jns
idivl
fs
fmull
enter
adc
fnstsw
and
fistl
xor
into
sub
cmpsl
cmp
sub
bound
lahf
jmp
pop
xchg
fsubl
sbb
loope
sub
and
cmc
gs
rcrl
pop
jne
arpl
cmpsl
jmp
inc
stc
loop
xor
cwtl
imul
aas
jbe
shrl
bswap
or
fisubl
jae
idivl
int
or
pop
jb
insl
test
and
cmp
and
ja
mov
adc
inc
mov
fdivs
pushf
jo
or
insb
imul
addb
xchg
insl
mov
pushf
loop
push
jge
idiv
xchg
mov
xchg
jg
sub
lret
push
inc
jne
dec
and
insl
inc
es
jne
cmp
clc
mov
jle
daa
imull
and
xchg
xor
xchg
fldl
push
ja
ficoml
ror
mov
mov
repnz
jge
xchg
add
ret
push
sbb
dec
sahf
in
xor
push
xchg
jne
ja
and
bound
or
pushf
ja
hlt
addr16
rorl
fistpll
push
sub
loop
in
xor
adc
hlt
xchg
movsb
add
xchg
mov
push
test
popf
fdivrl
stos
push
or
ret
loop
sub
mov
ficompl
fisubrl
push
leave
in
fwait
xchg
aas
outsl
xchg
popf
sub
mov
cmp
lret
lcall
or
push
dec
scas
mov
imul
cmp
xor
insb
das
fs
cmp
xor
inc
repz
adc
sbb
ret
enter
pop
mov
adc
adc
addr16
in
xor
call
dec
or
xchg
das
leave
xchg
orl
inc
fisubrs
inc
lds
xchg
movsl
cs
sub
pop
popa
repz
es
xchg
lahf
lds
dec
std
mov
enter
push
sbb
jmp
std
xchg
test
cld
xor
push
sub
sti
loopne
lea
cmc
sbb
stos
push
in
ss
xchg
stc
or
lret
jo
lea
aam
mov
or
test
lds
aas
cmp
jle
subb
je
jb
dec
enter
test
mov
add
out
jne
movsl
push
rol
jbe
or
mov
ds
je
ret
xchg
cmc
gs
xor
cld
fwait
insl
scas
out
je
cltd
pop
mov
sarb
jge
mov
fstps
ljmp
mov
xchg
jle
pop
inc
xchg
dec
fdivrl
loop
xchg
xlat
in
push
jno
and
mov
adc
rcr
pop
fcomps
push
inc
mov
xchg
push
cmp
add
shrl
dec
or
cmp
movsb
adc
sbb
xchg
jno
mov
loopne
adc
inc
mov
mov
add
jl
dec
mov
pop
adc
ja
cmp
and
cs
inc
mov
cmpsb
xor
pusha
sub
push
int3
mov
cmp
aas
out
daa
insb
cmpsl
xlat
repz
and
gs
movsb
ljmp
jae
push
clc
adc
add
or
icebp
sti
cmp
cmp
mov
fwait
pushw
jg
mov
jge
or
push
sub
mov
sub
pop
sbb
and
sbb
fsubrs
mov
js
mov
clc
cmp
cld
dec
cli
jae
mov
cltd
dec
push
push
lret
repz
jne
clc
mov
cmp
or
inc
pushf
push
adc
fistpll
mov
sti
std
fmull
or
lods
cli
hlt
shl
xor
insl
xchg
pop
test
push
test
pop
fsts
and
stc
xchg
xor
inc
xlat
rcr
pop
clc
cmpsb
mov
fiaddl
push
ljmp
sub
rorb
rcll
or
sbb
jo
inc
pop
repnz
insb
mov
sti
mov
jbe
nop
lahf
and
or
lret
out
pop
inc
sbb
out
cmp
mov
data16
and
sub
test
pop
jp
enter
and
rcrb
pop
mov
clc
lds
fildll
xchg
pop
sub
test
test
sbb
movsl
mov
sbb
xlat
ret
dec
das
add
push
hlt
sub
cmc
enter
push
cmp
mov
stc
fistl
inc
jne
jbe
cmp
sbb
mov
loopne
sbb
push
jg
add
jno
mov
js
ror
dec
or
sbbl
mov
orb
pop
rcrl
out
add
and
xchg
orb
pop
mov
ja
in
cmp
iret
lds
push
cmp
out
imul
xchg
mov
mov
jnp
sub
pushf
xor
stos
aaa
cli
sub
push
aam
sub
dec
push
cli
shrb
cwtl
pop
es
cli
lcall
test
cmp
add
jnp
ljmp
add
adc
or
lock
mov
vminpd
out
inc
jmp
scas
pop
push
inc
jp
lea
sub
push
faddl
icebp
or
push
hlt
addr16
loopne
testb
sub
inc
sahf
push
ja
push
shl
ss
jns
movsb
xor
jge
popa
ret
push
adc
mov
inc
bound
adc
fistl
inc
and
cs
test
cmpsb
push
movsb
stos
dec
inc
jae
adc
cmpsb
dec
pusha
or
clc
sarb
out
out
scas
cmp
jg
mov
inc
lods
ss
adcb
addr16
sbb
mov
add
je
outsl
fisttpl
icebp
shr
out
push
pushf
inc
xor
loope
loope
dec
and
add
cmp
jne
lret
repz
push
leave
in
shll
sahf
inc
or
pusha
cmp
xchg
xchg
sahf
sbb
mov
jns
or
mov
sbb
les
sahf
xor
lods
and
in
or
out
fidivrl
push
fistps
mov
jmp
dec
cmpsl
sbb
xor
ds
cmpsl
dec
les
rcrb
mov
and
lret
mov
sub
out
xor
mov
pop
sub
sarb
xchg
pushf
inc
adc
and
inc
xchg
sub
sbb
xchg
leave
mov
mov
xor
pop
and
cmc
push
stc
out
add
je
into
cmp
test
subb
rolb
fsts
mov
sub
cmpsl
pop
xchg
push
aam
imul
pop
mov
cmpl
mov
sti
jbe
cmpsb
fcmove
inc
pop
mov
dec
call
insl
mov
insb
test
call
ja
fs
push
dec
sbb
out
mov
inc
std
xor
stos
push
jnp
inc
xchg
aas
dec
dec
sahf
jno
and
outsl
cltd
testl
inc
push
xchg
pop
fsub
nop
mov
out
inc
mov
mov
and
xchg
sahf
mov
mov
sub
lret
std
std
into
xor
push
push
mov
popa
pop
sub
out
cli
popa
dec
ret
arpl
mov
dec
scas
stos
stos
aaa
dec
sub
mov
ja
xor
fucomi
out
sbbb
jg
aas
int
xchg
sbb
repz
or
jb
ret
adc
push
jo
dec
push
or
mov
sub
lea
cmp
ljmp
mov
pop
sub
fsts
inc
push
out
adc
or
cmpsl
fsubs
js
pop
inc
cmpb
pop
cmp
lock
fcmove
add
aam
pop
xor
rclb
das
fwait
sahf
ret
jae
sub
sub
subl
or
sub
cmp
daa
arpl
jg
stos
nop
insl
pusha
or
pop
add
dec
cli
dec
sbb
jp
adc
mov
add
cli
stc
mov
jle
ja
add
push
rclb
or
outsl
mov
loopne
ja
sbb
mov
jne
mov
jo
xchg
test
loope
pop
mov
lret
xchg
les
in
les
jnp
roll
ret
xchg
dec
jecxz
imul
sub
adc
or
shrb
nop
mov
inc
cli
cmp
mov
sti
sub
cmpsb
cmp
or
mov
push
out
popa
das
dec
mov
pop
cmp
lods
push
jge
and
jl
mov
or
sbb
int3
mov
out
push
pop
xchg
jbe
or
cmp
xchg
lods
push
jbe
add
sub
cmp
pop
sub
inc
aas
jne
adc
je
std
ror
in
inc
pop
xor
dec
jle
movsb
push
ss
out
cltd
and
jbe
inc
insl
stos
jae
lods
dec
jns
mov
lock
dec
testl
mov
outsb
mov
add
repnz
andb
dec
ja
negl
push
popa
cld
sbb
aad
mov
push
shlb
push
mov
push
popa
xor
movsl
rcll
call
lods
ret
xor
inc
inc
pop
add
mov
jle
shll
or
in
sub
pop
pop
rclb
mov
inc
pushf
ljmp
shrl
jmp
cmp
das
js
loopne
add
stc
lret
shll
mov
loop
popa
and
push
pop
sarb
jnp
push
sar
mov
pop
sbb
scas
lret
mov
imul
inc
cli
lock
xor
loope
loop
movsl
and
xchg
cmp
xor
cmp
and
xchg
fs
addr16
jg
pop
mov
cli
pop
shl
add
or
rorl
sub
sbb
lcall
arpl
cmp
push
pop
out
repnz
xor
das
shrb
das
push
test
insl
mov
imul
xchg
xchg
imul
jb
add
inc
daa
pusha
sub
mov
xchg
fsubl
test
imul
lods
nop
js
adc
icebp
je
jle
adc
inc
xchg
dec
jno
pop
js
inc
mov
mov
jnp
scas
mov
or
bound
add
mov
cmc
cmp
xlat
das
cmc
nop
mov
add
out
lret
xor
inc
pop
pop
xchg
fsubr
push
inc
mov
pop
dec
aas
mov
repz
int3
xchg
inc
popf
jge
shrb
jno
push
aam
mov
sbb
fucomp
orl
xchg
sub
ljmp
ja
cmp
or
cmpsl
lock
aad
ret
fdivrl
lock
inc
sub
popf
daa
sub
out
lea
lds
pop
adc
imul
mov
scas
aaa
dec
add
enter
mov
daa
mov
dec
and
out
sbb
mov
mov
sbb
push
or
push
call
dec
cwtl
les
xchg
push
in
in
xchg
push
out
rolb
popf
cli
pop
xor
jl
xor
shll
cli
mov
or
stc
call
and
xlat
lods
xchg
push
inc
int3
repz
mulb
pusha
ds
jo
mov
aad
pop
das
sub
xchg
pushw
add
outsb
sbb
jl
hlt
mov
fmull
les
cltd
pcmpeqb
cmpsb
es
adc
sbb
inc
xor
stos
addb
loope
test
dec
repz
sub
test
push
pop
jb
and
ss
or
das
pop
lds
or
loope
and
bnd
call
mov
arpl
in
sub
ss
pop
pop
add
xchg
and
not
icebp
or
sbb
ja
imul
lods
push
xchg
in
xor
or
out
cmpb
pop
inc
sbb
adc
fsubrs
ljmp
cmc
mov
daa
sub
mov
and
js
or
dec
out
sbb
push
and
cld
and
and
xchg
add
adc
lea
sub
sbb
sub
or
sub
sub
push
cmp
aad
mov
cmp
mov
mov
pop
pop
das
adc
xlat
sbb
mov
cmc
cld
cmpsl
pop
or
das
call
in
pop
cmp
ja
sub
rcll
and
loopew
xchg
sbb
sbb
aam
pop
fnstcw
aaa
mov
jp
rcrb
out
and
cltd
movsb
mov
mov
fadds
test
fisubs
incl
dec
mov
cmp
mov
jp
shr
cmp
sub
mov
popa
sub
jp
imul
or
or
adc
cs
test
orl
ret
cli
xchg
cmpsl
cld
stc
mov
xor
loop
mov
cwtl
ret
sub
inc
lahf
or
ja
sub
inc
inc
push
inc
imul
push
inc
int3
fwait
add
push
or
clc
xor
cmp
inc
js
ja
sub
push
aad
and
sbb
mov
subb
cltd
mov
xchg
rclb
sbbl
clc
aaa
xor
mov
fld1
test
ja
add
popf
mov
ret
stos
mov
sbb
in
cld
inc
sbbb
aas
inc
decl
jle
adc
loope
shrb
mov
or
leave
push
cli
mov
mov
lds
mov
mov
repz
es
pop
andb
add
pop
push
insl
cmpl
mov
and
inc
adc
pop
jg
inc
fnstenv
push
cltd
push
mov
add
dec
sbb
or
js
dec
addr16
mov
pop
lret
xor
pop
push
xchg
or
pop
inc
cmp
fisttps
and
adc
out
and
jb
in
inc
mov
adc
mov
push
lahf
adc
loope
fwait
cld
or
cmp
mov
pop
pop
lds
mov
xor
jecxz
clc
and
test
sub
cmp
shlb
test
imul
in
sbb
jle
iret
ret
filds
jecxz
outsl
push
insl
push
fistpll
mov
xchg
pop
stos
inc
cmp
inc
mov
push
sarb
xor
lea
push
jno
jb
adc
int3
test
cmp
xor
in
lods
adc
mov
jge
and
mov
out
lret
mov
add
js
push
mov
dec
jle
push
mov
add
fcoml
lcall
out
or
movsl
or
rorl
movsb
lds
or
int
pop
cmpsl
nop
fucom
xor
or
aam
xchg
pop
xor
push
insl
dec
in
add
dec
cltd
dec
fwait
cmp
in
mov
popf
sbb
repnz
aas
pop
pop
adc
xchg
mov
lcall
and
pop
pop
or
xchg
jle
inc
shrb
sbb
pop
add
cmp
je
pop
pop
adc
push
lods
mov
mov
pop
fldt
dec
inc
clc
imul
aam
ret
sti
sub
leave
adc
pop
adc
daa
cld
add
jno
mov
mov
and
sbbb
pop
sbb
dec
and
cmpl
out
rorb
pop
daa
lret
add
add
push
push
in
testl
pop
gs
enter
out
jb
pop
ficoml
ret
jp
push
add
sbb
lcall
mov
mov
cmpsb
into
jb
pushf
push
xlat
ret
add
cld
xor
out
mov
mov
pop
lcall
mov
mov
pop
aas
nop
fiaddl
adc
push
adc
out
mov
push
aad
sbb
cmp
cli
push
addr16
mov
inc
call
pop
push
xlat
stos
mov
jmp
or
movsl
push
lret
cltd
aad
in
pop
mov
and
push
xchg
xor
shlb
stos
repz
xchg
stos
pusha
enter
xchg
dec
and
mov
pop
jp
fbld
shlb
ret
lretw
and
lds
ficomps
mov
cs
mov
sbb
aaa
aad
jle
scas
out
xchg
push
dec
mov
stos
clc
xor
les
sbb
cmp
dec
sbbl
movsb
orb
cwtl
xor
fistpl
jno
repz
pop
jecxz
popf
lods
adc
dec
xchg
in
adc
inc
xlat
scas
pop
outsl
push
roll
inc
les
bound
clc
sbb
add
in
pusha
cmp
mov
add
jne
add
jne
iret
pop
sbb
xlat
fnstenv
int3
add
fisttps
loop
inc
sbb
outsb
or
push
mov
insb
test
iret
jge
push
push
jnp
or
pusha
sbb
daa
pop
in
bswap
mov
adc
cld
roll
out
aad
pop
rcrl
dec
sbb
cmc
cmpb
test
negl
xorl
int3
fcmovnu
adc
fidivs
mov
jge
sahf
ljmp
push
jmp
out
inc
and
and
and
out
dec
xor
repnz
aas
cmp
lret
mov
enter
fmuls
sub
ret
pop
ja
jp
lea
les
mov
icebp
inc
scas
fnsave
xor
or
pop
add
add
mov
mov
imul
mov
xorl
stc
mov
lods
lret
outsb
jle
test
sub
orb
ret
dec
adc
dec
hlt
in
ljmp
sub
cwtl
add
push
xchg
orb
fimull
pop
mov
and
or
mov
xor
loope
mov
dec
cmc
mov
xchg
add
std
mov
pusha
mov
scas
lahf
in
push
bound
repnz
loope
out
cld
adc
inc
and
repz
push
dec
adc
lea
adcb
mov
mov
loope
std
push
pop
pop
sbb
cmc
mov
add
nop
stc
iret
dec
sbb
jo
pop
push
xor
mov
leave
jo
out
fsubr
shr
and
in
push
mov
subb
or
mull
add
mov
out
scas
cmpsb
xchg
mov
lds
mov
mov
xlat
xchg
adc
and
test
push
sbb
mov
outsl
pop
data16
pop
jmp
rcll
and
daa
icebp
push
mov
imul
insb
dec
jae
add
dec
imul
out
adc
jl
repz
clc
or
popl
add
xor
push
push
cmc
repz
add
scas
adc
inc
call
sub
xchg
and
and
jae
adcb
fisttpll
jo
and
jno
push
mov
call
xchg
sbb
sbb
push
in
in
push
jnp
int
jge
fs
mov
sub
push
idivl
outsb
leave
cmp
mov
pop
xor
rcpps
mov
aam
insb
in
fsubs
adc
jmp
ret
xchg
xorl
cmp
aas
ljmp
adc
in
fsubrl
xor
das
inc
mov
adc
iret
vminps
pushf
fiadds
dec
sti
add
clc
xor
inc
xchg
inc
aaa
dec
mov
call
mov
push
inc
sqrtps
pop
cmpl
dec
aaa
mov
out
insl
sbb
push
push
test
pop
rclb
cld
fmull
roll
int3
push
daa
sbb
xchg
shlb
rcr
add
rcl
jg
sbb
fisubrs
and
xchg
add
fnsave
lahf
fisubrs
or
xlat
fdivl
insl
stos
jnp
mov
sub
mov
scas
js
in
sbb
out
mov
insb
sbb
sbb
inc
xor
mov
mov
pop
jp
push
and
shlb
jbe
sbb
fnstsw
xor
aam
cmp
outsb
iret
push
pop
push
mov
mov
add
adc
test
call
jbe
xor
add
rclb
xchg
jp
xchg
push
or
aam
add
mov
push
xlat
sub
ljmp
rcll
dec
push
lea
add
dec
push
rorl
ds
sbb
icebp
icebp
add
out
enter
mov
ljmp
mov
dec
in
push
test
les
inc
sub
scas
shrb
xchg
sbb
in
into
scas
sbb
jno
add
or
and
incb
jns
mov
sahf
leave
jnp
xorb
add
call
loopne
jnp
iret
mov
and
cld
in
xchg
add
jecxz
popa
inc
cli
out
and
lret
add
adc
fstpt
test
mov
pushf
xor
xchg
push
jge
fidivrs
push
mov
xchg
aas
sub
jp
xchg
cwtl
lock
mov
outsl
les
daa
fcmovu
adc
add
int
pusha
xchg
mov
fstpt
adc
repnz
imul
mov
push
inc
mov
fs
inc
or
fstpt
sbb
insl
cltd
mov
pop
adc
test
or
mov
jmp
inc
cmp
hlt
add
xor
call
cmp
mov
gs
push
fisttpll
cld
xchg
imulb
pop
mov
out
dec
loopne
adc
inc
sub
mov
and
js
hlt
pop
xor
mov
imul
cmpsl
icebp
int3
pop
fwait
jae
test
sbb
cmpsl
dec
ja
lock
xor
sbb
mov
and
js
shrb
adc
push
and
mov
shl
mov
dec
sub
mov
dec
mov
into
scas
mov
dec
mov
xchg
mov
fs
fwait
mov
or
mov
mov
cmp
out
mov
fmuls
sub
and
rcrb
dec
cmpsb
shrb
jae
sub
adc
ds
cmc
push
dec
das
cmpsl
out
pop
iret
mov
ja
adc
subb
hlt
jp
or
sub
pop
inc
stc
insb
movl
ja
xchg
xchg
aad
mov
out
sub
clc
or
sahf
addl
adc
jnp
adc
xor
imul
iret
mov
leave
or
shll
jl
mov
fiaddl
dec
adc
sub
in
sbb
push
pop
mov
insl
lods
pop
aam
pop
push
push
jmp
pop
xor
sbb
sbb
fidivrl
mov
rcr
jmp
pop
lock
dec
stos
dec
bound
cld
cmp
or
sbb
aaa
outsl
out
xor
push
dec
add
mov
adc
jl
mov
xor
cmp
outsl
mov
lods
mfence
dec
sti
jp
int
pusha
std
or
data16
jg
aad
xchg
pop
inc
test
insb
lahf
pop
pusha
adc
adc
pusha
and
push
iret
leave
popa
pusha
sub
in
nop
int3
and
cs
fucom
jo
add
pop
adcl
mov
arpl
enter
xlat
jl
mull
sub
iret
lea
cmp
sahf
repz
sbb
or
mov
jae
sub
and
jnp
xchg
or
push
scas
loope
xchg
lods
testl
dec
sub
mov
ljmp
xchg
fcmove
out
cwtl
push
adc
lret
mov
adc
inc
or
dec
xchg
xchg
imul
mov
inc
insb
add
and
in
pusha
add
inc
xor
push
repnz
pop
sbb
jo
pop
jo
fdivrs
cltd
add
sbb
arpl
aam
or
fisttpl
mov
rcl
rorb
and
iret
pop
push
jg
mov
mov
mov
sub
pop
frndint
mov
xor
and
mov
and
jl
xchg
in
js
inc
aas
stos
cli
jp
push
fldl
mov
inc
mov
aam
xor
cltd
jge
shlb
dec
jno
mov
mov
jg
and
push
int3
cmp
adc
orb
dec
lds
cmpsb
out
adc
jne
cmp
xchg
xchg
sti
dec
mov
dec
cltd
jp
ret
sub
pop
movsb
xchg
or
testb
lcall
mov
mov
fwait
scas
aam
mov
loopne
fs
jmp
cmp
adc
subl
nop
in
stos
adc
add
adc
cmp
cmpsb
push
xchg
addr16
lea
cmp
lcall
sbb
or
sub
psubw
adc
xchg
lret
jp
insl
push
push
and
mov
in
mov
or
fists
pop
or
mov
cmpsl
ror
clc
sub
imul
mov
add
xchg
jecxz
fimuls
roll
cld
or
xor
jle
mov
and
adc
mov
std
repz
int3
cmp
in
roll
loop
inc
mov
mov
xlat
movsb
pop
stos
or
push
cmpl
mov
lds
popf
fisttpll
in
cli
mov
sbb
xor
or
ja
mov
lahf
cmp
sbb
je
or
stos
sahf
lock
aad
mov
out
inc
notl
cld
bound
sbb
sahf
sbb
jns
out
push
sbb
mov
stos
jns
mov
mov
je
lods
mov
mov
jecxz
cmc
push
fildll
adc
fs
negb
mov
es
sub
push
push
mov
cmp
pop
negb
and
aam
pop
cli
aad
dec
inc
sbb
push
mov
addr16
in
jle
shlb
ja
popa
mov
lods
ss
mov
popf
scas
xlat
int3
fs
dec
jnp
loope
xor
addb
test
jp
xorl
xor
xor
jbe
aad
and
or
fdivrs
bound
pusha
clc
add
cmp
imul
fcomip
outsl
and
ret
aaa
or
push
ret
jno
nopl
ret
loopne
dec
loop,pn
shl
setnp
mov
xchg
loopne
mov
das
fiadds
mov
xor
jo
scas
push
sbb
outsb
adc
sub
xchg
xor
jge
inc
arpl
mov
scas
inc
and
fistpll
popw
jl
test
inc
fbld
adc
loope
lahf
mov
lock
jp
push
lahf
sub
into
mov
jg
int3
and
jnp
scas
pop
cmpsb
sub
hlt
lea
adc
cli
es
mov
rorb
sti
incl
and
dec
rep
clc
cmp
push
hlt
imul
adc
mov
xor
fildll
hlt
xor
push
jmp
lahf
push
jbe
push
into
out
ss
push
fwait
lret
jae
ret
jns
or
mov
sbb
es
repz
push
jne
sarl
mov
push
push
sahf
cmpsl
dec
xor
enter
or
inc
loopne
repz
pop
push
test
sub
push
lret
cmp
call
outsb
icebp
or
mov
pop
and
jg
out
cli
dec
mov
add
xchg
icebp
dec
push
jg
mov
adc
stos
ficompl
ljmp
jne
inc
insb
inc
roll
outsb
jmp
xor
push
repnz
clc
push
repnz
sbbb
adc
and
adcl
js
xchg
data16
sti
sub
mov
movl
in
arpl
or
push
addl
and
pop
pop
mov
sbbb
or
out
fadd
test
insb
or
negl
mov
in
insw
pop
push
cltd
inc
adc
lret
xchg
movsb
jae
xchg
popa
cmc
mov
into
shrl
push
popf
mov
imul
mov
mov
and
and
add
push
bound
cmp
icebp
pushf
cmp
push
mov
xchg
popf
into
pop
mov
fisubl
outsl
mov
ret
clc
xor
addl
sbb
popa
sub
mov
adc
outsb
dec
pop
sub
loopne
insb
mov
and
hlt
lret
xchg
aaa
jecxz
outsb
jmp
frstor
add
and
int
inc
xchg
cld
sbbb
aad
jbe
out
sti
loopne
push
or
in
inc
shll
jbe
test
lods
inc
iret
fiadds
inc
dec
pushf
out
and
fwait
jb
push
push
shrb
mov
xchg
mov
adc
sarl
cwtl
jl
xchg
lcall
das
and
mov
dec
lock
push
adc
and
sbb
xchg
inc
push
sub
xchg
outsb
out
incl
lods
inc
mov
popa
das
pop
jecxz
rclb
fistpll
cs
shrl
cmp
mov
imul
fldl
mov
fistps
mov
dec
pop
mov
icebp
adc
or
sub
cli
mov
pusha
idivb
push
stc
xor
aad
jmp
pop
adc
rorl
js
movsb
imul
cmp
xor
xor
mov
daa
push
sbb
aaa
inc
sub
test
cmc
xchg
sarl
testb
pop
xchg
adc
mov
push
pop
jecxz
or
cmp
out
mov
sub
jb
mov
call
dec
out
mov
adc
sbbl
movsb
pushf
dec
push
stos
mov
fbstp
jae
add
mov
pop
lods
jne
iret
jbe
jecxz
ja
jecxz
cmp
cwtl
popf
gs
or
neg
in
test
popa
fadds
sbb
xchg
pop
and
mov
insb
stos
add
mov
push
bound
cmc
mov
sbb
and
mov
and
xorb
je
scas
mov
stos
sbb
out
pop
dec
push
imul
outsl
test
test
pop
cmp
stos
jg
pop
push
mov
or
or
scas
in
sti
jns
fisubrl
mov
or
shlb
dec
push
mov
push
mov
xor
push
push
mov
inc
pop
int3
je
aam
pop
cmp
test
sbb
or
testl
xchg
or
ds
cmp
nop
popa
and
jle
inc
out
mov
add
fdivr
sarb
cmpsb
ret
das
das
xchg
je
sub
mov
push
jno
jg
sbb
jmp
xor
insl
imul
mov
push
push
push
pop
mov
shlb
xchg
dec
inc
jp
jb
sub
ret
jle
fdivs
cmpsb
mov
sarl
cltd
jbe
jae
push
push
scas
daa
int3
lock
sbb
jnp
fdivl
sbb
sub
lcall
addb
enter
sub
pop
inc
xor
lea
addr16
icebp
scas
mov
pop
cld
mov
dec
movsb
insl
dec
xchg
jp
fstpl
rcrl
add
popa
and
scas
jecxz
sub
and
ficompl
cmpsl
and
stos
mull
pop
js
adc
jns
add
fsubrs
call
pop
stos
and
or
pop
aad
add
into
push
lds
xchg
jbe
lods
fadds
call
add
dec
mov
inc
mov
imull
pop
dec
adc
sub
sbbb
mov
push
push
mov
addr16
jmp
push
clc
xchg
stos
push
inc
add
push
nop
std
in
xor
push
cli
imul
scas
and
enter
mov
daa
push
jns
or
jno
popf
jnp
cmp
dec
sti
shrb
sub
dec
dec
in
repnz
mov
jo
and
int
insl
xchg
push
mov
insl
xor
dec
sbb
push
les
movsb
shrl
xchg
fnstenv
daa
nop
push
xor
sub
lret
xor
pop
push
mov
dec
or
sub
fcompl
add
in
dec
into
dec
lret
xchg
ret
nop
stos
mov
shlb
lcall
pop
test
div
ficompl
pop
xlat
jmp
jnp
mov
cmp
fsubrl
mov
dec
lea
shl
cs
mov
lcall
scas
iret
mov
jbe
rcll
push
shrl
fstl
imul
inc
lock
adc
aad
push
fldl
mov
rcll
push
or
stc
pusha
add
xchg
sub
xor
cmp
jne
or
jo
xor
das
test
das
xor
mov
mov
mov
das
add
inc
outsb
sub
adc
and
sub
xchg
xor
cmp
and
jns
scas
lcall
lcall
and
xchg
push
bound
jbe
mov
push
in
sub
daa
cld
test
cmp
push
clc
mov
dec
stos
add
scas
jne
adc
xchg
dec
xor
jo
addl
push
popf
cmp
aaa
in
dec
shll
sub
daa
sti
mov
xchg
jbe
pop
inc
adc
mov
stos
jns
rol
mov
inc
lret
pushf
xor
mov
sbb
mov
rcll
mov
pop
or
addr16
movsl
stos
sub
mov
orl
je
rcrb
aam
push
or
push
in
lea
mov
xor
int3
adc
push
sti
ret
lea
aaa
push
jp
sarl
or
dec
popf
ret
shl
std
add
aas
or
in
js
xchg
out
push
or
test
or
xchg
xor
mov
or
jne
testl
or
mov
sarl
inc
lds
sti
push
adc
leave
sarl
mov
mov
mov
fadds
lods
pushf
mov
dec
ds
push
xor
sub
and
push
cmp
lahf
pop
inc
fnsave
mov
je
fcomps
xor
inc
sub
xchg
xchg
jno
jb
in
xchg
push
xor
test
aaa
scas
push
push
out
inc
fwait
into
or
push
clc
sbb
adc
dec
inc
test
mov
fwait
or
lcall
es
dec
out
aam
popf
movsb
and
jmp
mov
dec
add
adc
outsl
cmp
lods
push
fiaddl
xchg
mov
mov
sbb
lods
repz
inc
test
cmp
mov
sub
pushl
dec
repz
in
jns
sub
iret
mov
out
and
sub
or
lds
and
and
mov
testb
int
decb
aam
test
int3
in
mov
xchg
or
adc
mov
mov
cltd
stc
adc
jns
js
test
add
mov
mov
adc
dec
lret
inc
mov
mov
push
leave
roll
mov
out
rclb
imul
and
stc
add
xchg
and
cltd
fyl2x
jge
int
pushf
scas
pop
jmp
add
mov
adc
push
dec
push
jno
jo
mov
pop
jg
orb
imul
fadds
ficomps
cmpsb
mov
ja
dec
mov
data16
dec
lcall
or
je
fsub
sub
push
mov
das
loopne
out
mov
lods
ficomps
adc
lret
xor
out
jne
mov
in
lcall
fstp
mov
fstpt
hlt
aaa
pop
cmp
and
mov
cs
jo
inc
out
icebp
bnd
mov
movsb
out
pop
xchg
js
clc
xor
push
sub
cmovne
inc
jns
insb
sub
aas
outsl
mov
mov
lock
xchg
push
push
push
out
pop
lahf
jbe
and
fists
xor
mov
nop
lea
ficompl
notl
mov
cmp
cmp
or
das
sti
ret
cld
test
or
mov
loopne
rorl
lods
mov
mov
lahf
inc
cld
jbe
jmp
mov
xor
mov
hlt
test
pop
mov
in
aas
mov
popf
or
stos
inc
loopne
cmp
sbb
out
ret
addr16
loope
popa
std
in
js
or
and
out
xchg
push
jg
xor
sbb
hlt
sub
mov
add
pusha
jle
sbb
inc
out
movsb
fwait
push
sub
push
sub
jns
cmp
and
out
adc
jmp
adc
sbb
lods
and
mov
sbb
xorb
and
stos
dec
orb
xchg
fnstenv
pop
push
jp
test
call
imul
out
lods
stc
or
sbb
lods
mov
inc
hlt
add
test
or
dec
int3
cmp
push
or
mov
dec
pop
cmp
jge
sbb
sbb
dec
xchg
lahf
mov
test
inc
jg
pushf
test
push
jmp
popa
outsb
jge
or
pop
popa
fisubl
shll
add
ljmp
fisttpll
jle
test
sbb
ss
lret
lods
xchg
stos
neg
mov
fiaddl
push
push
enter
je
popf
inc
xor
loop
es
pop
cmpsl
jns
push
xor
and
fimull
dec
sub
es
popa
push
inc
jb
jge
das
push
pop
pop
jbe
lods
lods
adc
sahf
lret
lds
into
in
into
loope
sub
loop
ss
pop
or
pop
lods
aas
lret
ret
xlat
hlt
mov
bound
push
adc
push
pushf
pop
out
mov
adc
dec
push
mov
mov
stos
mov
sarb
jg
fistpl
int
jl
aam
sub
mov
xchg
mov
scas
add
jbe
cmp
cwtl
cs
push
pop
pop
push
lods
inc
ret
push
and
lds
mov
rclb
outsb
cmpss
mov
jo
or
xor
andb
ljmp
dec
roll
or
fimuls
out
cmp
push
lds
repnz
test
add
xchg
daa
insb
roll
imul
repnz
pop
sub
cmp
xchg
lods
or
clc
push
add
insb
dec
sahf
cmp
movsb
jmp
rcrl
and
sahf
adc
sbb
xchg
jns
push
cmp
xor
mov
cmp
sbb
das
ss
cld
aas
ss
xchg
jp
mov
iret
jle
loopne
adc
call
pop
jno,pn
dec
jne
shlb
cltd
pop
inc
repz
pusha
sbbb
je
ret
cwtl
repz
mov
add
scas
mov
jbe
int
es
dec
sbbl
or
lods
test
mov
cmc
xchg
mov
sbb
jl
xor
test
pop
cmp
test
pusha
int
jae
orb
std
xor
out
insb
jmp
lea
jnp
ss
push
mov
push
and
inc
pop
mov
mov
gs
repz
jns
cld
cmp
cs
xchg
and
dec
push
idiv
push
lock
or
pop
frndint
outsl
ljmp
bswap
dec
and
out
sbb
data16
xor
or
arpl
dec
push
sarb
cmp
lahf
loope
sub
out
or
lcall
roll
jp
jl
adc
push
bound
and
pop
outsb
mov
push
hlt
cmpsl
xchg
test
lods
sub
add
les
aam
jle
aad
mov
fists
lahf
push
daa
mov
inc
rcll
divb
jb
jbe
sarb
js
loop
mov
sbb
movsl
cs
jae
jns
mov
or
dec
xor
insb
fistl
std
loope
and
cli
push
shrl
es
xchg
fst
pop
inc
push
mov
and
sub
cwtl
shl
out
xor
adc
fisubrs
aad
mov
mov
xchg
addr16
out
movsl
or
mov
jp
jbe
sbb
rcr
or
into
dec
lea
inc
out
test
jmp
push
xor
xor
stc
int3
mov
stos
push
dec
scas
orl
aam
std
mov
cmpsl
inc
cmp
or
ret
sbb
test
int
int3
adc
mov
lds
data16
addr16
inc
push
mov
push
mov
call
stos
dec
push
mov
repz
adc
mov
fstpl
fldcw
inc
push
loopne
mov
jecxz
stos
pop
push
xor
fisubl
add
lea
jl
test
push
mov
xchg
jl
adc
inc
mov
sbb
mov
mov
fsts
push
mov
xchg
ljmp
loope
pop
pop
popa
mov
cmp
shll
sub
je
jns
mov
in
mov
lods
sub
sbb
push
mov
lods
pop
mov
jns
jae
adc
in
jbe
jle
out
push
lods
call
jg
sbb
dec
sbb
std
mov
jmp
aas
loope
push
nop
and
loope
faddl
push
sbb
dec
cwtl
ljmp
pop
int
testb
jmp
add
dec
sbb
test
testb
outsl
mov
jns
test
or
xor
outsl
loopne
xor
outsl
inc
lret
out
sarl
pop
lods
xorl
mov
cmpl
out
pop
outsb
test
nop
jns
les
add
les
mov
jns
cmc
mov
dec
mov
data16
xchg
cmp
add
js
lahf
xorb
bnd
jns
jae
ret
pop
mov
rolb
bound
mov
fnstsw
mov
fcmovnu
out
into
sbb
sub
lea
insb
aad
sub
mov
pop
mov
mov
sbb
jb
stos
cmp
stos
sub
scas
jg
popf
jbe
xchg
jl
dec
test
adc
insl
sbb
pop
jne
and
xchg
cld
adc
outsl
or
mov
cs
jg
imul
sbb
jp
adc
outsb
and
and
cmp
mov
add
loopne
ss
push
pop
cwtl
stc
outsl
hlt
dec
push
insl
outsl
xor
pop
mov
push
into
jno
pop
icebp
sub
shrl
adcb
jo
add
mov
mov
inc
bound
cli
hlt
enter
mov
and
in
test
leave
test
mov
push
mov
xchg
mov
push
fdivrs
out
pushf
inc
sti
in
aas
sub
insl
pop
cmp
xor
ds
lret
idivb
mov
out
jb
jns
jae
xlat
mov
adc
ljmp
adc
divl
and
add
or
insb
test
xchg
inc
inc
add
in
movsb
into
and
pop
xor
mov
sub
push
adc
data16
add
test
outsb
jno
scas
cmc
sub
push
insl
std
jg
imul
sbb
mov
or
push
out
push
mov
into
les
cmc
mov
cmp
and
mov
rol
paddsw
scas
scas
or
and
mov
xchg
dec
or
xchg
pop
mov
xchg
add
and
shll
insb
stos
lods
data16
int3
es
fildl
sbb
add
aas
push
push
popa
ljmp
jge
jo
pop
inc
rol
in
enter
fldenv
push
dec
data16
das
call
push
xchg
or
aad
dec
pop
cmp
push
mov
inc
pusha
out
add
push
cmp
and
dec
cmp
fwait
es
loope
enter
pop
jl
in
in
fwait
out
or
pop
gs
scas
sbb
push
mov
rorl
mov
bound
or
pop
push
mov
loop
pop
gs
testl
or
inc
or
stos
aam
imull
add
or
clc
js
arpl
jl
mov
mov
add
shll
lock
jp
and
adc
mov
jae
and
sub
fnstsw
into
push
dec
lods
arpl
and
xor
lock
lods
popa
mov
stc
jp
xchg
mov
add
mov
sub
cmp
inc
xor
cmc
inc
in
add
cli
add
js
shlb
mov
sbb
sub
jge
mov
sbb
sar
out
add
push
mov
jne
xor
pop
mov
inc
mov
test
inc
jo
pop
adcl
in
ret
sub
pusha
divb
lahf
jns
mov
lret
mov
in
fcoml
das
sbbb
xor
rol
mov
cmp
imul
mov
pop
hlt
mov
inc
aaa
pop
out
mov
xor
in
movsb
andl
adc
loopne
fsts
movsl
outsl
addr16
xchg
pop
mov
inc
sarb
jle
imul
lea
sbb
adc
xchg
mov
insb
push
dec
push
dec
push
stos
cmp
or
adc
test
sub
or
or
testl
inc
mov
pop
ret
mov
insb
aad
cmp
sbb
xchg
push
mov
pop
add
gs
add
mov
ja
push
mov
fsubrs
xor
insb
gs
mov
mov
loop
sub
jns
ljmp
mov
lock
cmp
loop
mov
out
jge
xor
mov
mov
rcll
jb
mov
and
enter
stos
push
mov
dec
cmp
mov
addr16
loop
into
int3
mov
push
call
ja
repz
inc
lods
iret
sub
push
outsb
in
aas
pop
xchg
lea
stos
jns
mov
xchg
arpl
lcall
movsb
jne
mov
dec
mov
add
js
icebp
int
ret
mov
lea
lret
push
mov
mov
rorb
add
dec
notb
loop
sbb
scas
and
jmp
dec
mov
cmp
cltd
cwtl
pop
push
and
outsb
shrb
test
jg
out
cmc
repnz
test
in
ret
mov
cmp
ja
sarl
cli
cmp
fbstp
sbb
int3
push
cmp
fsubp
adc
loopne
sbb
mov
cmpsl
sub
imul
xchg
aam
dec
cmp
adc
sbb
js
cmp
push
mov
and
in
imul
xor
jbe
leave
and
push
stos
pop
test
cmp
adc
iret
sarl
lea
jb
loopne
js
jg
sahf
sahf
sub
push
pop
jg
jge
ljmp
arpl
push
call
dec
hlt
pop
mov
mov
test
xor
sbb
iret
inc
gs
lret
or
mov
sbb
sar
ljmp
pop
inc
mov
test
in
bound
xchg
pop
and
sub
push
sub
cmp
pop
xchg
hlt
mov
subb
mov
dec
cmp
jno
inc
dec
test
mov
test
outsl
gs
stc
cmp
loopne
fiaddl
daa
dec
jmp
jnp
mov
jecxz
mov
outsb
sbb
mov
xor
mov
movsb
fdivrs
in
mov
aad
adc
mov
and
loop
rcrl
out
mov
pop
outsb
inc
sbb
mov
insb
daa
jp
daa
das
xchg
pushf
out
sub
stos
fistpll
push
inc
and
pop
xor
push
or
fldt
jecxz
movsb
jb
addl
test
ret
lods
lods
xchg
jl
fisubs
push
lods
stc
fimull
inc
stc
dec
test
and
stos
data16
push
push
gs
and
mov
rorb
mov
out
ficompl
hlt
and
stos
je
pop
andb
lahf
bound
xor
push
clc
ljmp
add
sub
mov
dec
jge
sub
or
add
mov
and
cmp
inc
xchg
jno
outsb
stos
test
outsb
add
scas
cmp
pop
push
out
enter
repz
ljmp
std
rclb
mov
insb
mov
popa
cmpsb
cs
mov
sub
int3
lret
mov
sarb
dec
add
les
mov
add
sbb
bound
mov
scas
adc
sbb
dec
and
and
mov
lea
or
push
mov
xlat
scas
call
sbbb
into
fldl
adcl
mov
fsubrl
out
push
or
shlb
lcall
mov
inc
sub
int3
pop
inc
jnp
pusha
jg
sub
repz
shrb
adc
mov
jmp
mov
aaa
add
lret
imul
leave
cmp
sub
shrb
fisttpl
bound
mov
adc
cltd
lock
mov
in
and
xor
in
out
push
cld
mov
xchg
stos
sarb
ret
or
int3
mov
andl
inc
loopne
fnstsw
jle
inc
rcll
sti
addr16
cmp
pop
out
bound
adc
jo
imul
iret
cmpl
mov
or
and
xchg
sub
pop
lea
bound
pop
pushf
daa
sbb
or
shl
out
out
mov
fsubl
test
out
push
inc
mov
jo
dec
or
psubb
loopne
sub
sbb
mov
mov
sbb
lcall
mov
inc
adc
inc
inc
fldcw
or
mov
mov
mov
pop
imul
cmpsb
ficomps
dec
and
ficoml
loope
roll
xor
or
scas
jmp
popa
test
dec
push
int3
cmp
loopne
inc
shlb
outsl
insl
and
mov
push
rsqrtps
sahf
iret
mov
push
sahf
jl
popl
push
iret
push
and
jg
leave
inc
cmp
push
ret
lods
inc
mov
hlt
insb
test
inc
decl
outsb
loop
repnz
push
cmpsb
mov
inc
dec
adc
mov
stos
and
mov
inc
xchg
pop
lcall
call
jns
jmp
js
push
mov
xor
rolb
loop
inc
push
stos
pop
pop
xchg
lret
arpl
jb
loope
sub
fcmovnbe
jb
pushl
push
daa
pop
das
mov
hlt
clc
fs
dec
idivl
xchg
test
and
add
ret
mov
mov
loope
push
xor
pop
fdivs
lret
orl
test
lods
cmp
mov
js
xchg
jbe
xor
push
ja
xor
jp
or
sub
outsl
fldz
and
push
icebp
inc
cwtl
cwtl
or
cltd
cld
mov
loope
adc
test
and
jg
mov
inc
sub
das
and
mov
mov
pop
pop
push
mov
xchg
pop
decb
xchg
lahf
stos
das
xchg
xchg
inc
mov
cltd
shll
add
iret
add
subb
jno
jge
add
cmpsl
or
mov
or
jnp
add
idivl
lods
cmpb
cmp
xor
mov
fcoms
mov
fnstsw
mov
adc
xor
test
mov
out
leave
jo
out
enter
out
imul
pop
insl
out
mov
imul
shlb
leave
movsb
fnsave
imul
inc
xor
aad
lahf
sub
add
outsb
inc
loope
inc
adc
jg
loop
arpl
push
lcall
mov
lea
pop
dec
pop
dec
loope
divl
stos
out
mov
add
push
idiv
fmuls
repz
aad
mov
mov
sbb
ja
push
push
lds
js
testl
les
mov
movsb
lea
iret
push
mov
mov
insb
sub
popf
mov
inc
aaa
xor
mov
sbb
mov
push
ljmp
or
sub
or
shll
mov
test
or
dec
xchg
or
repz
cmp
add
cmp
sbb
xor
icebp
sub
jp
xchg
aam
push
cmpsl
or
sub
push
mov
push
push
movsb
scas
dec
push
push
stos
das
jle
push
in
jne
je
mov
mov
orl
xchg
cmp
dec
jle
rolb
ret
jmp
push
push
push
out
pop
mov
insb
mov
pop
mov
fisttps
cmpsl
and
mov
lret
or
out
push
jmp
sub
int3
popf
push
lcall
jb
aas
daa
add
push
dec
cld
pop
aad
sub
push
hlt
ret
lahf
xlat
cmp
int3
jg
sti
movlps
inc
pop
mov
mov
mov
shrb
and
out
int
out
loopne
gs
arpl
lds
scas
fcompl
nop
xor
and
ja
pushf
scas
xor
stos
push
das
call
jo
test
fsts
daa
push
inc
pop
inc
shrb
push
pop
jae
pop
push
fld1
pcmpgtw
lahf
jle
adc
ficoms
daa
mov
xor
insb
insl
pop
mov
xor
jmp
loop
in
push
out
jge
stos
fdivr
mov
jl
outsl
ret
mov
insl
ljmp
jnp
add
rorb
mov
sub
push
stc
lea
sub
cmp
adc
out
cwtl
dec
jle
pop
push
inc
add
sbb
aas
jns,pn
xor
xor
adc
mov
fisttps
leave
das
and
sub
cmp
shl
and
loopne
add
mov
pop
mov
lods
popa
cmp
test
mov
dec
cmp
sarb
popw
jg
js
test
lcall
cli
loope
pusha
pushf
pop
dec
or
int
mov
and
cmp
jge
insl
xlat
call
dec
inc
dec
mov
xor
jo
pushf
push
dec
push
cmp
fistpl
cmp
lea
mov
call
jge
and
push
jp
loopne
sbb
les
xchg
push
add
in
lret
movq
jno
jmp
daa
push
dec
jae
xchg
push
cmp
mov
sub
inc
les
sti
xchg
xchg
cmp
in
mov
sub
push
pop
mov
add
jb
mov
cmc
adc
sbb
es
jecxz
loopne
repz
notl
dec
insl
mov
int
out
rorb
mov
lds
leave
clc
xchg
jp
xchg
daa
fwait
jmp
and
imul
pop
inc
pop
adc
mov
push
push
setp
cwtl
xchg
iret
pop
out
jl
stc
xchg
cmp
pop
adc
and
mov
shrl
and
sbb
sub
cmpb
inc
popf
adc
inc
sbb
ret
stos
fidivrl
mov
sbb
popf
rcr
bound
push
xchg
fdivrs
orb
outsb
movsl
adc
push
jecxz
cld
mov
or
flds
mov
iret
test
mov
stos
mov
dec
les
fisubl
test
cmp
inc
scas
loopne
inc
and
cmc
stos
dec
jge
aad
sub
xor
add
inc
add
out
sahf
addr16
and
push
into
mov
pop
test
mov
pop
rolb
add
test
rcrb
add
add
and
add
repnz
sti
inc
fwait
pusha
neg
mov
cld
aam
pop
push
insb
sub
add
outsl
push
stos
int
addl
cmp
shld
xchg
jns
fildll
mov
out
fimull
les
mov
inc
bound
inc
mov
jle
ds
mov
xchg
push
les
iret
bound
mov
clc
scas
jb
sahf
popl
adc
add
jmp
nop
ds
jp
repz
enter
mov
mov
repz
jmp
scas
fisttpl
pop
pushf
inc
imul
xchg
inc
notl
sub
jnp
adc
cwtl
dec
mov
mov
rclb
int3
jmp
shlb
scas
es
mov
inc
sbb
rcll
mov
out
ja
fsub
mov
ljmp
or
aam
and
jb
sub
lret
les
in
cmp
jge
in
outsl
fcomip
rcrb
lods
mov
and
mov
jg
xchg
outsl
jg
in
mov
push
cmpsl
mov
pop
roll
cmp
jno
fwait
lock
leave
and
lret
xchg
pop
aam
test
aas
aam
or
imul
mov
and
testl
sbb
jno
mov
cmpsl
push
adcb
hlt
cltd
movsb
push
push
imul
adc
mov
lds
mov
inc
add
fstl
sub
pop
fisubrl
inc
hlt
mov
jp
or
sub
jmp
add
add
xchg
cli
cmpsb
pop
mov
cmp
inc
cmp
cwtl
push
loope
add
int
in
xchg
movsl
xlat
xchg
xor
je
repnz
popa
leave
fstpl
push
cmpsb
icebp
enter
fdivr
shrl
xchg
clc
and
das
and
xchg
fstl
loopne
xchg
push
addl
stos
or
roll
jge
pusha
add
sahf
push
jp
das
lods
push
fsubrl
mov
fwait
mov
pop
xchg
cmp
adc
into
ss
mov
mov
dec
adc
xor
mov
xor
push
mov
ficompl
clc
add
add
or
and
popa
fsubl
jb
jne
insb
dec
cmp
xor
leave
aad
lret
fisttps
mov
outsb
jg
cwtl
mov
pop
fimuls
dec
decl
clc
pop
pop
mov
cltd
je
movsb
jmp
sub
jecxz
inc
lea
xchg
fsubrs
rolb
or
adc
out
test
cmp
push
push
and
mov
mov
repnz
push
dec
lret
rorb
sub
xor
xchg
test
inc
sarl
out
pop
xchg
pop
mov
cld
sbb
xchg
mov
loopne
adc
inc
xchg
xchg
das
repz
pop
fwait
lods
sub
jp
jp
adc
and
or
jl
into
cmp
push
pop
jmp
iret
lock
das
clc
or
stos
adc
or
push
dec
pop
das
int
cmp
clc
mov
outsl
sbb
popf
sbb
sahf
gs
pushl
push
push
inc
xlat
adc
push
cmp
dec
gs
pop
sahf
outsl
push
rorl
andl
fldcw
jbe
push
arpl
das
popa
adc
ss
push
sahf
sti
out
pcmpeqw
cmp
mov
push
dec
lods
push
dec
mov
lret
out
ret
mov
mov
pop
sub
in
lea
jmp
mov
pop
push
xor
out
xor
push
xchg
xor
clc
mov
add
scas
cmpsl
testl
sub
xchg
fwait
ljmp
ret
jno
bound
data16
fnstenv
inc
dec
pop
aas
pop
das
pop
sbb
jbe
hlt
out
sbb
sti
dec
pop
push
fiadds
xchg
mov
lret
mov
add
lods
xor
xlat
cmpsb
bt
xchg
lods
jns
jne
pop
xchg
xor
lahf
rcrl
mov
xor
test
xchg
int
movsb
mov
xchg
dec
mov
paddsw
cmp
sub
lds
iret
xchg
ljmp
mov
icebp
aam
dec
mov
mov
cli
in
xchg
rdtsc
lock
xchg
push
mov
xor
inc
inc
mov
mov
lock
mov
nop
and
mov
jae
clc
and
add
sub
or
aam
clc
es
ret
cmp
movsl
push
pop
out
in
fxch
aaa
stc
mov
xor
lods
push
in
xor
cmpsl
push
test
dec
pop
add
jbe
mov
jns
mov
bound
data16
lret
sub
mov
fidivs
add
add
push
and
aas
shrb
popf
out
in
pop
enter
mov
mov
inc
xor
and
stos
add
xor
add
idiv
jmp
xlat
cwtl
inc
sbb
outsb
sarb
addr16
mov
je
cld
nop
repz
test
stos
mov
cmp
push
cwtl
and
push
pop
mov
push
xchg
push
lock
rclb
mov
je
mov
rorl
or
fisttpll
in
dec
dec
dec
adc
sbb
arpl
dec
and
mov
lahf
or
inc
xchg
mov
pop
cmp
fwait
inc
repnz
das
add
stc
xor
dec
add
test
ret
pop
mov
hlt
imul
xchg
mov
inc
mull
add
mov
test
mov
xchg
lret
clc
sbb
fsubrp
sahf
clc
xchg
lea
dec
fs
mov
xchg
sub
or
fwait
repz
push
mov
bound
fwait
in
rolb
xor
fs
sar
dec
mov
scas
xchg
cltd
mov
ds
xor
mov
sbb
mov
push
pop
pop
shrl
ljmp
arpl
mov
ret
pusha
jo
jo
lods
mov
jge
outsb
or
push
fs
push
popa
outsb
pop
jns
push
test
sub
cs
mov
lahf
loopne
jbe
es
or
jno
sub
sbb
enter
pop
xchg
fs
outsl
pop
add
mov
clc
xchg
pop
int
decb
repnz
jns
test
leave
pushf
or
mov
pop
cs
sbb
js
scas
jmp
pop
nop
popa
iret
or
push
lcall
cltd
adc
pop
push
adc
sahf
add
pusha
nop
repnz
jns
bound
mov
in
or
incl
mov
call
and
lods
in
mov
push
mov
cmpsb
mov
insb
sarl
lret
scas
aaa
or
pop
cld
pop
sub
ret
fbstp
shlb
push
jge
pop
imul
fidivl
or
outsl
test
les
pop
push
repnz
and
push
hlt
rol
cmpsl
cmpsb
sub
mov
addb
mov
scas
and
push
sti
push
mov
popa
outsl
ds
jo
xchg
cltd
fs
lea
xor
pcmpeqd
popa
pop
jb
push
mov
add
cwtl
es
rcrl
mov
testl
sub
add
sub
nop
ljmp
cmpsl
sub
cmp
xchg
sub
push
ss
xlat
cmp
mov
and
test
or
mov
pushf
pop
pop
jnp
add
sbb
test
enter
out
lret
adc
pop
xchg
pop
and
jge
cmpl
push
xchg
cmp
jle
cmp
or
addr16
clc
adc
nop
pop
adc
test
cmp
inc
xor
sub
cli
cmp
clc
sub
pop
mov
push
rol
inc
js
inc
lahf
xlat
adc
leave
pop
std
stos
enter
push
mov
lcall
and
mov
imul
add
adc
repz
pop
mov
lods
insl
inc
dec
mov
pop
mov
ds
sub
mov
mov
mov
cmp
pop
push
dec
xchg
xlat
jae
sbb
ret
xchg
test
xor
fwait
add
push
cmp
sbb
sbb
cli
push
into
xchg
lock
popl
int3
lods
xchg
fsubp
mov
sub
popa
xchg
mov
sbb
inc
jnp
fdivrl
or
mov
out
mov
movsb
jb
push
ffreep
mov
out
sahf
dec
add
movsb
sub
jb
cmp
xchg
imul
and
out
sbb
cmp
je
cmpsb
dec
jmp
jge
jecxz
adc
add
roll
pop
inc
jno
sbb
push
adc
xchg
stos
cs
sbb
xor
adc
in
pop
mov
push
sbb
add
sbb
cs
into
fsubl
es
xor
mov
pop
test
jecxz
cmc
inc
or
cld
movsb
adc
pusha
and
pop
test
test
mov
push
jle
xchg
lock
push
rcl
subl
cli
mov
and
test
loopne
and
xor
adc
mov
pmaxub
pop
jo
clc
scas
inc
imul
xchg
sarb
cs
sbb
mov
mov
xlat
loope
out
xor
shrb
pushf
ljmp
outsb
add
dec
in
mov
out
mov
loopne
cmp
test
lcall
insl
mov
sar
add
shrb
leave
jo
mov
mov
and
inc
jecxz
loope
jmp
test
int3
pop
pop
loope
stc
or
mov
pop
and
loopne
inc
pop
mov
inc
xchg
cmp
test
push
dec
inc
and
call
movsb
mov
pop
testl
cwtl
rorl
mov
mov
mov
iret
cmp
hlt
mov
shlb
sar
pop
xchg
xor
mov
mov
jmp
mov
push
adc
call
in
test
cmp
loop
xor
inc
lock
ss
xor
shlb
repnz
xor
fisubl
dec
enter
roll
mov
roll
sbb
dec
sbb
sub
and
mov
inc
in
pop
mov
add
xor
fwait
loope
xchg
adc
dec
adc
xor
popa
xchg
xchg
add
jno
fcomi
push
in
repnz
adc
adc
sub
fists
push
lcall
sbb
in
mov
daa
adc
jne
je
xchg
inc
in
xchg
fdivs
into
aam
dec
inc
into
mov
movsb
pop
dec
and
insb
mov
mov
sbb
aas
pop
ljmp
fcomps
cmp
push
sub
int
push
rorl
lret
jle
xor
loop
rorb
movsb
out
fldenv
aaa
xchg
clc
movsb
fisubs
add
rcr
mov
sub
mov
incb
cmp
and
lret
loop
mov
js
ret
lret
pop
xchg
cmpsb
dec
push
pop
xor
addr16
sti
dec
and
int3
fsubrs
out
xchg
lods
outsl
lock
and
and
xchg
mov
sub
mov
cld
pop
mov
in
jno
xchg
mov
mov
dec
cmp
mov
stc
outsb
imul
stos
sbb
je
cmp
pop
in
pop
mov
mov
lahf
loopne
push
adc
push
jno
push
rol
es
das
sub
xchg
push
mov
lock
adc
push
ljmp
and
cld
setge
sbb
outsb
fucomp
jno
rcll
mov
cmpsb
rol
and
jnp
dec
fmuls
rcll
jo
outsb
mov
inc
inc
mov
jmp
inc
pop
sub
in
xchg
pop
repz
xlat
or
call
imul
insb
iret
test
inc
aam
lret
and
test
repz
jb
dec
ja
inc
cs
into
std
mov
push
pop
jmp
int3
les
mov
jnp
mov
sbb
scas
xchg
roll
xchg
in
aas
mov
push
imul
xor
fcomps
inc
cmp
fldcw
shll
inc
cmpsb
adc
inc
adc
inc
jmp
xor
sub
push
pop
sbb
xchg
out
ret
loop
sub
mov
cmpsl
fiaddl
loopne
dec
pop
mov
int
add
iret
aad
mov
jo
sti
jg
push
dec
push
sar
iret
dec
sub
xchg
xor
aad
out
cmc
or
ljmp
cld
mov
xchg
cmp
rcrb
mov
push
mov
xchg
test
and
ret
loop
and
stos
adc
or
mov
stc
mov
cmp
adc
rolb
push
xor
xor
adc
cltd
jle
sub
jmp
xchg
outsb
ljmp
int
enter
adc
sub
imul
incb
mov
es
or
inc
xlat
xor
mov
cltd
into
and
das
and
dec
pop
lret
push
sbb
andl
jbe
loop
sbb
push
scas
outsl
xchg
and
xchg
sub
mov
es
out
adc
push
sbb
mov
scas
shrb
cmp
in
add
inc
shll
lods
cmp
in
push
pop
addr16
stos
mov
lret
pop
adc
jno
inc
scas
dec
xor
outsb
cmp
pusha
cmp
std
stos
and
pop
daa
mov
pop
sub
mov
push
pop
ret
fsubrl
cmc
mov
pop
jae
repnz
sub
movq
orb
rcll
das
xor
push
mov
push
scas
sbb
jge
add
imul
lds
adc
test
jmp
cmpsb
mov
out
stos
movsl
mov
daa
ja
popa
lret
fwait
adc
pop
lahf
pop
push
mov
adcl
ror
leave
dec
aas
jp
sarl
cmp
cmpsl
dec
hlt
cmp
xor
mov
cltd
mulb
rolb
cmp
push
and
or
lret
push
nop
jnp
pop
and
pop
mov
push
ja
sbb
loop
xchg
subl
test
int
mov
pop
pop
pop
pop
ljmp
pop
adc
inc
bound
push
pop
dec
mov
xchg
mov
ds
aaa
jmp
out
cmp
mov
push
popa
sti
and
faddl
sub
mov
push
aaa
popf
fisttps
adc
into
mov
mov
mov
cld
xchg
fwait
jnp
cmp
jmp
in
xchg
mov
ljmp
addb
stos
loope
in
rolb
and
mov
js
push
lock
mov
xor
mov
stos
insb
sub
lds
mov
push
ja
add
xlat
clc
shlb
hlt
fimuls
push
sub
lcall
jae
call
stc
xor
xor
loopne
xchg
push
dec
cs
and
jmp
shl
inc
fbld
xor
fcmovne
sub
imul
xor
arpl
stos
inc
pop
or
mov
mov
stc
fwait
jmp
push
dec
sbb
or
dec
aas
fcoml
sbb
in
xor
mov
sub
dec
push
out
xchg
add
jno
and
roll
ja
enter
lock
addl
loopne
insl
xor
loopne
pop
sti
dec
dec
mov
mov
sub
fists
mov
inc
orl
in
inc
xor
out
mov
je
aam
cmp
pop
cmp
xorl
jle
fistpll
subb
out
arpl
pop
inc
lock
jg
enter
es
scas
mov
loopne
and
add
xor
xor
cmp
xchg
mov
mov
dec
ds
cwtl
adc
pop
or
sub
mov
imul
push
enter
ret
movsb
pop
sub
sub
cltd
shlb
jecxz
push
mov
push
int
and
mov
andb
lret
or
pop
inc
pop
cld
shl
mov
imul
jecxz
in
pop
lcall
push
push
leave
fisubl
cmp
in
sar
lret
xor
pop
sbb
idivb
jnp
cld
mov
movsb
xor
dec
push
or
sbb
jl
test
enter
insl
cld
and
mov
outsl
loop
mov
or
sbb
cmp
out
adc
iret
roll
lret
in
push
mov
adc
lods
push
hlt
inc
mov
iret
mov
push
es
mov
testb
adc
les
shll
stc
xchg
outsl
xor
sbb
test
inc
pushf
push
fsub
xor
pop
pop
dec
scas
xchg
cmc
jmp
dec
push
sbb
pop
inc
cmpsl
xor
out
push
mov
insl
fisttps
push
xchg
bound
inc
divb
insl
out
ss
daa
and
jmp
dec
fwait
add
mov
int
mov
in
mov
pop
pop
cs
jl
popf
and
stos
cwtl
imul
stos
sub
jb
push
cmp
pop
lods
or
and
ret
dec
cmp
subb
aas
and
mov
lock
cs
adc
mov
pop
daa
dec
xlat
in
in
ljmp
fwait
lea
daa
and
and
test
push
dec
dec
lds
pop
mov
add
inc
ja
ret
ss
xchg
xor
mov
fcoml
stos
and
out
repnz
ret
sub
add
xor
mov
xor
iret
add
sub
xor
sti
cmp
xor
and
outsl
fnsave
lahf
test
xor
aas
cmp
xchg
pop
je
fs
jp
push
lea
loop
into
popl
pop
out
xor
rcrl
adc
faddl
sahf
shll
and
inc
ja
jmp
loop
cmp
lea
mov
fdivl
mov
cmp
call
pop
pop
jbe
or
sub
inc
sahf
push
ja
xor
xor
or
frstor
cmp
nop
in
mov
jp
pop
adc
pushf
sub
pop
andb
gs
dec
lods
inc
stc
jno
lcall
cmp
pop
add
rcll
xor
mov
fsubr
pop
push
lds
mov
cmp
push
inc
scas
subl
fsubs
jb
div
fndisi(8087
fildll
dec
ja
cmc
insl
movsb
mov
movsl
lahf
sub
jmp
mov
orps
or
hlt
iret
jns
cwtl
out
xor
fwait
outsl
xchg
inc
sbbl
push
and
imul
dec
aas
mov
test
clc
inc
push
scas
pop
mov
dec
hlt
mov
jge
push
push
sub
jg
stos
mov
call
ret
dec
push
push
mov
mov
and
adc
or
clc
mov
cmp
pop
push
mulb
lock
or
pop
xor
data16
leave
push
hlt
arpl
sti
pop
sbb
nop
popf
pop
repnz
jns
cmp
out
cmp
jno
cmpb
outsl
out
je
add
push
imul
subb
inc
adc
cmpsb
in
pushf
bound
cmpsl
jl
shll
pop
or
rcll
mov
mov
cmp
pop
mov
pushf
sbb
push
lock
cld
cmpsl
jae
cwtl
pop
lods
stos
idivl
rorl
and
add
movsl
xchg
sbb
xor
and
mov
decb
fcomi
enter
mov
hlt
mov
negl
sub
jle
outsb
aam
subl
xchg
cmc
xrelease
jp
inc
sarb
lods
mov
imul
je
sahf
or
xchg
int3
jne
pop
shl
outsb
aaa
dec
lds
loop
cmp
inc
mov
or
jp
mov
ret
pop
arpl
imull
push
das
rclb
arpl
cmc
jmp
push
xchg
xor
xor
stos
cwtl
xchg
push
arpl
xchg
inc
push
clc
cltd
xchg
in
loope
xchg
jbe
cmp
es
cld
jg
cmc
mov
pop
push
gs
daa
repz
ljmp
xchg
jnp
mov
nop
xor
inc
cmp
mov
ja
jecxz
and
mov
out
stos
call
or
scas
pushf
int3
mov
fs
lcall
cmpsl
sar
andl
or
mov
imul
loop
pop
daa
xor
xor
imul
jge
add
iret
push
jnp
xchg
mov
sbb
data16
sub
and
sbb
repnz
pop
fwait
and
lret
idiv
in
xchg
mov
jno
add
lcall
out
mov
mov
scas
or
test
pop
push
shlb
movsb
inc
xchg
and
dec
mov
sahf
mov
push
xchg
push
xor
inc
sahf
sbb
xor
xchg
add
xor
mov
lret
jecxz
lret
addr16
aas
fiadds
addr16
jno
hlt
or
xor
xchg
xor
test
lods
out
div
inc
or
mov
stc
sub
test
sub
cmpsb
aad
jle
push
rcrb
push
or
mov
adc
mov
add
mov
sub
or
sbb
mov
inc
adc
cmp
pop
in
and
xor
daa
clc
loop
cld
scas
shrl
movsl
mov
mov
inc
jo
pop
or
dec
dec
cmpb
mov
xlat
or
test
jno
push
sbb
hlt
imul
dec
cmp
mov
mov
in
inc
and
dec
in
pop
push
shrl
repnz
push
cmp
pop
stos
scas
xor
popa
pop
mov
mov
hlt
arpl
out
jbe
sub
aam
mov
insl
pop
les
leave
pushf
inc
stos
xchg
jnp
xor
push
add
lea
repnz
outsl
lcall
daa
xor
pop
cld
push
fwait
dec
or
sub
gs
ss
mov
and
lret
xchg
aas
mov
daa
pushf
mov
daa
cmp
jg
stos
xor
pop
das
cli
and
das
ss
cmpsb
add
pop
sbb
and
push
pop
dec
xchg
ss
in
or
bound
gs
mov
rcrl
mov
je
lea
dec
cmpl
fwait
mov
mov
xor
or
add
scas
push
add
or
mov
fninit
pop
ret
scas
sbb
in
push
xchg
js
loope
and
xchg
mov
pushf
ja
inc
ja
leave
jg
lods
dec
dec
and
out
in
and
outsb
adc
xchg
cwtl
mov
out
mov
out
cmpsb
std
push
call
lods
pop
andb
xor
mov
add
mov
fiaddl
mov
leave
loope
rcrl
mov
movsb
testl
add
push
icebp
jns
pop
cwtl
out
xchg
dec
jno
push
aaa
scas
hlt
adc
xor
add
fildll
cltd
sub
pop
negb
jns
pushf
cld
sbb
mov
ret
sbb
inc
add
gs
out
ss
cmp
xor
aad
movsl
cmpsl
xor
aas
lods
mov
scas
push
or
pop
jp
mov
in
xchg
insl
into
repz
inc
mov
jb
pop
sbb
stc
adc
push
fwait
ljmp
xlat
mov
fcmovnu
adc
cmp
scas
cld
dec
adc
divb
jmp
cmp
out
rorl
repz
dec
lods
adc
in
sub
fsubs
sbb
pusha
jecxz
lods
out
lock
sarl
mov
sbb
or
add
pusha
in
pushf
fstl
sbb
sub
in
repnz
lcall
inc
addr16
adc
neg
sbb
push
mov
fnstenv
cmp
call
movsb
pop
mov
icebp
xor
xor
dec
xor
test
xor
push
mov
aaa
int3
hlt
hlt
xchg
fdiv
mov
ficoms
lret
loop
xchg
stos
mov
ljmp
or
jge
js
xlat
sub
or
and
jecxz
lea
mov
daa
lret
mov
sbb
jne
dec
push
lea
nop
push
sldt
push
mov
js
scas
mov
pop
add
clc
pop
dec
fnstsw
inc
notb
fcoms
push
pop
movsb
adc
jbe
stos
gs
jno
jns
lret
testb
lcall
xor
xchg
ja
push
outsb
and
xchg
mov
push
inc
lods
sub
cmc
inc
addr16
subb
dec
ficomps
jle
fsubr
call
bound
fmull
scas
mov
mov
mov
adc
pushf
inc
xchg
lret
loop
or
cli
sbb
and
sub
bound
mov
testb
leave
cwtl
pop
xchg
and
stos
repz
fimull
cli
xor
sbb
stc
jne
xor
cltd
mov
inc
incb
fyl2x
aam
mull
push
shrb
jb
inc
xchg
fists
xor
ja
jns
sbb
push
jne
test
dec
sbb
jae
iret
sti
mov
inc
out
jecxz
cmpsl
pusha
rcrb
and
sub
or
pop
fwait
adc
pop
mov
push
xchg
mov
shld
xchg
outsl
stc
dec
pop
push
popf
inc
incb
xorb
dec
dec
insb
add
ret
repnz
push
fucom
xor
lods
jp
rcr
in
test
repz
and
out
adc
inc
add
and
jno
addl
mov
clc
add
fsubr
nop
inc
add
pusha
jnp
or
add
or
jnp
jne
cld
fadd
mov
fcos
push
clc
push
dec
push
popa
ja
cmc
or
jg
inc
aaa
add
adcl
dec
dec
fsubrl
incl
test
push
aam
xor
mov
inc
sub
rclb
imul
sub
sbb
ret
pop
jmp
inc
mov
sbb
pop
xor
push
push
es
add
sub
movsb
mov
loope
inc
les
pop
add
adc
movsl
dec
xchg
lret
push
mov
and
imul
inc
dec
stc
xchg
mov
push
decb
jnp
push
outsb
inc
test
and
dec
cmp
mov
push
mov
clc
or
cmpsl
ret
in
dec
mov
cmp
lock
inc
ja
dec
mov
sub
jle
je
fisubrl
aas
movsb
pop
inc
std
or
jle
orb
icebp
in
popa
mov
ret
loope
sub
outsl
push
out
fs
shll
mov
xor
sbb
inc
repz
inc
xchg
xchg
push
push
lret
aas
jl
cmpsl
js
ficompl
mov
mov
and
mov
mov
xor
out
and
in
in
add
leave
sbbb
mov
mov
testb
cli
test
rcr
imul
insl
stos
xchg
adc
arpl
call
pop
jp
outsb
mov
and
roll
fadds
vminss
inc
sti
popf
aad
push
in
and
sub
jle
push
adc
sub
mov
sbb
flds
jns
xchg
cmp
sbb
mov
in
cmpsl
clc
ds
xchg
ret
mov
scas
mov
or
in
sbb
nop
subl
mov
fnstcw
test
cli
mov
negl
sub
xchg
shrl
lcallw
int3
outsl
push
push
data16
in
pop
pop
stos
mov
roll
cli
xchg
cmp
fsubp
jbe
rorb
sbb
addr16
repz
xchg
jo
inc
daa
das
sbb
lcall
or
hlt
mov
pop
js
outsl
jg
or
stos
mov
cwtl
movsb
sbb
repz
nop
pusha
fs
repz
loop
movsb
jecxz
sbb
lahf
pop
clc
ss
icebp
cli
jns
repz
sub
add
and
and
lret
inc
xor
jmp
xchg
stc
hlt
call
add
adc
dec
rcl
xor
mov
lea
mov
rclb
pop
addr16
daa
std
mov
pushf
xor
mov
cmp
inc
push
clc
fmull
xrelease
mov
xor
jae
pop
and
inc
scas
jb
xorb
and
adc
push
test
jb
lods
cmp
mov
adc
or
hlt
rolb
popa
xlat
or
jns
jl
test
mov
outsb
cmp
sbb
adc
xchg
imul
arpl
insl
rcrl
or
or
cs
lret
outsb
xchg
xchg
lods
rcrb
jb
sbb
or
wbinvd
addl
xchg
fistl
mov
repnz
and
sti
mov
test
jno
mov
cmc
aas
and
xor
cmp
arpl
outsl
adc
int
paddd
push
pop
mov
outsl
icebp
mov
pop
and
xor
into
jecxz
mov
aad
ds
inc
cmp
test
test
xorl
mov
mov
sub
sahf
mov
ds
addr16
leave
movsb
push
xor
aam
mov
cmp
ds
adc
push
stos
lods
jl
cli
lock
xor
pop
mov
mov
inc
dec
pop
pushf
pop
push
xor
loopne
scas
insb
popf
sub
add
sbb
mov
pop
popa
mov
pop
lcall
sahf
insb
jnp
scas
std
fwait
fs
sub
mov
test
lahf
pop
adc
adc
push
sub
adc
push
sub
cmp
xchg
fcomp
push
mov
outsb
imul
push
jne
scas
sub
insl
ljmp
cmpsb
jne
jmp
mov
inc
dec
push
jno
lods
icebp
cmc
or
pop
iret
dec
dec
pushf
push
inc
out
mov
leave
mov
cltd
dec
ss
adc
mov
push
sbb
int
cmpl
andb
fildl
jb
sub
out
lea
lret
pop
push
inc
inc
dec
and
pop
jg
pop
push
daa
adc
jbe
pop
lret
das
sbb
sub
dec
icebp
jnp
add
mov
adc
inc
leave
sub
inc
in
in
mov
push
mov
jb
insb
enter
sub
outsl
push
pop
int
mov
andb
inc
cmp
hlt
pop
fldenv
mov
in
into
add
orl
cmpsb
push
lock
iret
aam
mov
jl
pusha
mov
push
sbb
mov
and
add
mov
orl
int
in
jle
imul
mov
push
test
testb
jg
cltd
push
adc
scas
jnp
xor
and
sub
xor
ds
sub
sub
fsubrs
clc
add
pop
inc
pop
push
rcr
icebp
adc
or
xor
add
mov
add
into
in
lods
cmp
test
xchg
cmp
or
repnz
mov
adc
hlt
imul
xchg
lods
outsb
sbb
scas
pop
lods
inc
xor
jnp
cld
mov
dec
test
push
subb
pushf
dec
cli
adc
lods
lret
fstpl
sub
rorl
or
jmp
test
pop
jo
fsubl
pop
jnp
cmpsl
or
xor
outsb
jg
inc
cmc
mov
cld
xlat
ljmp
dec
cli
int3
negl
jecxz
js
out
sbb
subb
add
pop
fisttpll
lret
in
je
lods
arpl
pop
dec
push
daa
clc
in
imull
iret
xchg
add
stos
adc
insl
test
mov
lahf
cli
jg
xor
jbe
or
fsubrs
lea
adc
jno
or
sbb
bts
in
movsb
inc
aam
jnp
dec
or
movsb
scas
mov
cmp
pushf
and
or
pop
push
nop
out
push
lret
xchg
pop
add
jae
mov
hlt
xor
int3
mov
sbbb
test
add
sbb
add
lds
or
lcall
jo
adc
in
mov
out
push
roll
pop
sbb
push
stos
scas
sarb
fsubl
sub
inc
sti
xlat
loop
dec
inc
enter
dec
loopne
jecxz
jbe
xchg
test
mov
out
jecxz
test
lods
sbbb
pop
fimuls
movsb
and
repnz
and
inc
add
or
pop
aas
fcmovu
pop
cmp
and
dec
add
dec
je
imul
out
sti
add
adc
fcoml
jno
sbb
dec
fisubs
push
push
cmc
inc
cs
pushf
insb
xchg
int
inc
push
adc
in
xor
dec
jne
leave
or
movsl
cmp
mov
jle
inc
mov
test
or
fstpl
sbb
add
mov
jl
insl
pop
ret
popa
fstpt
mov
rorb
pop
push
divb
mov
popa
xor
xor
add
mov
str
inc
sbb
lea
inc
ret
mov
pop
xor
pop
mov
iret
jbe
scas
cmp
push
outsb
test
pop
push
xor
or
dec
ja
mov
leave
push
cmpsb
leave
xchg
aad
jge
jle
add
icebp
rorl
mov
loopne
das
push
shll
pop
jle
dec
mov
loop
pop
xchg
jge
xchg
xor
in
sbb
movnti
mov
out
xor
outsb
xchg
add
inc
inc
mov
jb
fnsave
cmpsb
or
psubw
dec
jae
sbb
push
gs
movsl
movzbl
in
in
fisubrs
or
or
adc
pop
dec
jns
test
pop
dec
std
rolb
in
sub
inc
sbbb
ret
cmp
aaa
or
aam
push
std
fs
xchg
xchg
mov
out
mov
fwait
ljmp
insl
fists
adc
mov
repnz
cmc
adcb
imul
mov
out
icebp
lahf
mov
jnp
mov
fldl
mov
movsb
je
orb
fists
fsubr
dec
pop
jae
sti
mov
sub
pop
int
enter
jne
pop
cmc
cmp
mov
ds
ljmp
hlt
les
out
popf
jl
xor
push
push
test
xor
notl
sub
cmp
call
push
lods
mov
pop
gs
cmp
xchg
push
pop
push
mov
mov
pop
out
lea
into
mov
and
dec
xor
mov
xchg
xchg
pop
cmp
adc
dec
sbb
in
into
aam
repnz
lea
jno
cltd
sub
lret
in
mov
lret
outsl
stos
sub
dec
aas
xchg
jbe
jmp
push
sbb
jle
fcoml
push
jo
test
cmpsb
loopne
cmp
imull
in
dec
cltd
rclb
sub
and
stc
mov
jg
jo
xchg
xchg
mov
mov
ret
sub
scas
cmp
push
dec
and
lock
xchg
xchg
jb
icebp
mov
dec
dec
aas
xorl
aad
fsubs
xchg
fstpl
fnclex
scas
xchg
out
and
fnstenv
nop
popa
sbb
inc
int
cmp
xchg
ret
ss
sti
mov
pop
repnz
aas
shrb
add
push
xor
fs
dec
xchg
pop
pop
mov
scas
inc
or
cmp
push
inc
ljmp
rclb
cs
push
ja
add
jo
cmp
inc
xor
xor
loop
xorb
xchg
dec
xor
aad
in
ret
fimuls
loope
jo
cmpsb
outsl
mov
outsl
cltd
mov
inc
cmp
mov
inc
adc
idivl
lea
popf
out
adc
std
popl
ljmp
sub
lock
mov
or
mov
add
lret
push
shll
push
inc
sti
aam
test
pop
cmc
push
fnsave
insb
loopne
enterw
jno
jno
push
sbb
xor
cmp
into
mov
mov
add
mov
leave
in
aaa
and
sbb
test
repnz
movsb
inc
stc
bound
sbb
mov
sbb
outsl
jnp
filds
popa
clc
dec
mov
cmp
loope
movsb
data16
lcall
pusha
pop
mov
insb
push
cmp
lock
pushf
cmpsb
xor
lds
add
fists
aaa
jno
mov
sbb
dec
xchg
fs
xor
and
mov
fwait
and
fisttpl
push
mov
or
test
push
sub
adc
mov
int
int
sbb
xor
jge
sbb
xchg
in
push
jle
in
sbb
divb
gs
aaa
pop
sbb
mov
lock
stc
inc
mov
sub
sbb
adc
insl
xchg
xor
add
mov
jp
jl
xchg
push
loope
loop
mov
xor
cs
push
fdivrl
enter
out
fldcw
rol
mov
lret
push
ljmp
lcall
cli
fstp
ret
pop
mov
ljmp
or
inc
icebp
in
idiv
mov
inc
adc
orl
mov
pusha
xchg
jmp
fmuls
mov
jecxz
test
cltd
jo
ret
jae
cmpsl
fdivrs
sbb
sbb
addr16
sub
stos
fistps
add
rcrb
repnz
stos
cmpb
loop
xor
sahf
mov
add
jae
outsb
mov
add
xor
jb
mov
lds
and
mov
mov
jns
sahf
adc
lret
icebp
add
mov
cmp
mov
cld
mov
adc
xor
lret
sbb
mov
insl
fmull
jb
cmp
push
cmp
inc
aaa
ret
inc
dec
outsb
sbb
mov
fnstenv
outsl
scas
aam
pop
mov
and
out
mov
popa
add
lock
mov
stos
jbe
or
add
test
jae
xor
mov
decb
jns
and
mov
stos
lock
cmp
jge
xchg
mov
ret
cmc
clc
inc
push
xchg
ljmp
sbb
sub
pop
lcall
jo
inc
call
ljmp
mov
pop
xor
mov
push
add
push
ret
pusha
inc
ss
jecxz
or
pop
in
mov
mov
mov
sub
mov
mov
mov
or
or
clc
sbb
les
ret
repnz
out
pop
fwait
arpl
mov
test
test
adc
ja
jb
shl
jnp
out
mov
ret
idivl
sub
insb
dec
sbb
or
jno
or
loop
rol
sahf
rorb
sbb
xchg
jae
sub
in
das
add
out
pop
dec
loopne
push
mov
or
pop
das
jge
or
mov
pop
jg
push
push
pop
std
xchg
sbb
fdivrs
push
aam
push
leave
jno
mov
or
or
scas
pop
jg
or
jge
daa
mov
cwtl
jbe
out
dec
aad
das
das
mov
mov
lock
sbb
xchg
arpl
adcb
subb
scas
mov
adcb
dec
or
mov
cmpsl
movsl
mov
inc
jmp
scas
or
pop
pop
fildl
or
and
das
push
jno
xor
bound
or
jle
loopne
aad
mulb
mov
xor
movsb
push
mov
xchg
sbb
sbbb
lcall
or
imul
push
stos
aad
xor
pop
sbb
add
push
push
and
xchg
inc
lods
mov
ret
add
sti
sub
inc
mov
andl
gs
js
imull
aas
paddw
add
jbe
mov
add
mov
outsb
push
cmp
lret
mov
and
lods
mov
daa
push
sub
and
inc
ja
loope
mov
sbb
cmp
adcl
lea
adc
jns
fsubr
jne
mov
mov
push
mov
adc
push
xor
shrb
adc
jae
xor
arpl
push
pushf
dec
fs
pop
and
in
ret
movsl
fldt
cmp
cmpsl
push
mov
fisttpll
test
xchg
jbe
cs
push
ja
adc
das
push
xor
pop
in
lea
lcall
outsl
push
cltd
sarl
or
mov
andl
imul
js
xchg
call
push
fndisi(8087
push
push
pop
cmpsb
jg
pop
adc
je
jbe
xor
and
mov
int3
push
in
sbb
xor
xchg
lods
es
mov
mov
andb
bound
lahf
adc
imul
or
sti
pop
add
arpl
nop
dec
jge
std
jo
mov
mov
xchg
pop
cli
out
rorb
movsl
addb
popa
out
adc
repnz
sub
adc
jae
scas
std
ljmp
mov
jns
and
aad
or
insb
cmp
jae
test
iret
cmp
lds
sub
dec
dec
cwtl
not
lods
push
pop
pop
std
test
jne
lahf
inc
mov
jmp
jge
fs
fisttps
hlt
cmpsl
rorl
and
lds
and
xchg
stc
mov
in
loope
test
fmul
jne
cmp
adc
orb
mov
cmp
pushf
jl
inc
push
ss
in
fcompl
test
ja
xor
sub
loop
push
int3
mov
pop
cmp
das
call
cmp
dec
out
pop
cmp
lds
lock
jecxz
enter
addr16
enter
mov
mov
pop
add
mov
xor
or
inc
adc
scas
fwait
sub
sbb
adc
or
mov
and
xchg
push
cmp
cld
insb
divl
int3
or
jmp
lcall
push
dec
xchg
es
mov
cmpsl
pop
mov
cmp
jb
dec
and
mov
scas
add
leave
pop
xchg
sti
lods
mov
adc
call
outsb
pop
push
pop
and
clc
je
outsb
inc
ds
pop
dec
sbb
out
fdivr
addb
cltd
inc
das
aaa
leave
jle
add
dec
pop
xchg
inc
out
pop
push
mov
adc
mov
jae
or
dec
insb
incl
or
mov
mov
insb
outsl
mov
stos
add
sbb
cmp
in
in
stos
stc
mov
pop
leave
mov
push
dec
pusha
fbld
ret
cmpsb
scas
push
add
pop
pop
and
dec
mov
xor
mov
movsb
mov
pop
pushf
push
stc
mov
lock
mov
cli
shlb
icebp
jno
push
stos
add
and
insl
mov
push
mov
jp
movsl
lods
pop
sub
sbb
dec
xchg
sub
fisttpll
adc
push
pop
pop
or
and
imul
pop
scas
mov
in
mov
std
lret
sub
clc
mov
inc
cmpsb
inc
lock
cmp
pusha
adc
lock
out
pop
in
pusha
iret
xchg
push
lcall
stos
mov
outsb
fnstcw
xchg
sbb
ja
out
pop
or
aad
sub
xor
mov
aad
pushf
fldt
inc
outsl
leave
cmp
in
mov
xchg
rcrb
jp,pn
fisubrl
pop
test
jno
popa
jg
rol
cmpsb
mov
and
lcall
fnstcw
push
stos
andb
cmp
test
test
call
rcrl
popa
jbe
int
mov
cld
sub
jle
push
mov
sbb
data16
pop
pop
jbe
inc
inc
mov
dec
and
push
push
add
adc
aaa
scas
xchg
jne
add
pop
fcomi
jno
adc
outsl
adcb
adc
cmp
pop
in
icebp
lret
cmovg
and
pop
adc
lahf
sbb
xchg
cli
mov
dec
dec
enter
add
fists
sub
cmp
popa
pop
nop
jmp
xor
popa
add
out
xor
arpl
fisttps
fstl
hlt
sub
sbb
xor
mov
andl
adc
jb
popf
ljmp
adc
xor
lret
sbb
test
ljmp
push
pop
lock
mov
lcall
lds
popf
lahf
push
jecxz
mov
clc
lahf
lahf
jno
icebp
fimull
xor
or
dec
xor
jmp
cs
int3
ret
out
lahf
aam
mov
repnz
aad
cmp
shl
jo
dec
enter
add
loop
push
xchg
in
addr16
cmp
inc
std
hlt
add
push
repz
dec
in
mov
in
out
lret
adc
insl
dec
sbb
jb
add
cmpl
jecxz
sbb
add
dec
cmp
mov
xchg
je
fwait
dec
lahf
push
sub
mov
or
lods
jne
rorb
ficoms
ja
sbb
sahf
inc
andl
in
mov
mov
dec
insb
insb
ret
jle
call
or
inc
insl
adc
jae
icebp
ror
roll
add
scas
inc
mov
and
mov
sub
adcl
dec
sub
and
imulb
in
cmpsb
xor
jbe
mov
mov
xor
aaa
stos
stos
push
add
dec
out
mov
xor
or
shlb
arpl
icebp
add
cltd
mov
add
xchg
cmp
test
pop
xor
mov
xor
mov
cmp
mov
jbe
mov
pop
xor
dec
fdivp
mov
sbb
adc
sbb
imul
icebp
xchg
mov
push
or
cmp
hlt
adc
mov
aas
sub
push
sbb
push
scas
cwtl
popf
ja
mov
cmp
mov
sub
adc
idiv
add
dec
jne
inc
sarl
and
test
pop
fisubrs
daa
addb
popa
dec
mov
iret
add
fisttpll
xchg
mov
lcall
insb
incl
test
xor
jl
gs
in
stc
inc
mov
mov
testl
sarb
pop
or
outsl
lock
filds
pop
xor
and
mov
cmp
pusha
mov
xor
xchg
mov
mov
out
xchg
in
sbb
mov
pop
sbb
xchg
jmp
mov
ja
insb
xor
push
push
jp
push
xor
and
jle
rcrl
mulps
inc
jns
add
mov
lds
cmpsb
ret
mov
fs
test
std
fmul
stc
out
sbb
lret
push
fs
xchg
fcmovb
and
mov
and
adc
sbb
xchg
loope
test
test
jno
dec
ret
imul
das
pusha
and
or
fcompl
insb
lock
pop
arpl
shl
test
xor
jne
loop
orb
and
sub
xchg
push
mov
cs
mov
out
loopne
cmpsb
dec
js
xor
mov
jge
pop
call
push
and
adc
sub
cmp
adc
lods
imulb
mov
or
fwait
les
movsl
mov
cmp
cltd
fdivs
dec
and
sbb
fstpl
push
std
stos
sahf
jo
sti
and
ret
mov
jp
ret
mov
push
popa
push
les
cs
fsubrs
sbb
mov
xor
sbb
aas
sub
lahf
test
aaa
outsl
xchg
movsl
or
jno
ja
fxch
mov
jle
mov
gs
sarb
and
mov
insl
std
pop
and
xchg
sub
roll
flds
inc
pop
or
popf
lret
in
ds
inc
das
shll
cmpl
dec
nop
dec
inc
mov
push
lock
inc
filds
lock
sub
or
sub
mov
into
jne
loopne
fwait
pop
cmp
cmp
arpl
or
test
inc
aam
sti
insl
pop
orl
xchg
out
fs
ja
push
in
cmpsl
xor
inc
rcr
sub
shl
mov
mov
int3
push
cmc
pop
mov
outsb
out
xchg
mov
in
enter
pop
stos
inc
out
mov
pop
sahf
sbb
lret
and
enter
cmp
inc
aas
mov
pop
cmp
dec
cld
movsl
repnz
mov
push
pusha
cmpsb
cmpb
sbb
xor
sub
fs
xchg
adc
in
dec
xor
cmc
dec
test
jge
bound
jno
loope
add
mov
loop
xor
cmp
icebp
xchg
imul
cmp
and
clc
cmc
xor
ret
mov
andb
adc
xor
fnstenv
jno
in
popf
mov
push
pop
or
lock
xchg
mov
mov
pop
mov
int3
addr16
cmp
imul
mov
subb
cltd
rcl
sub
mov
fisttpl
loopne
pop
mov
or
xor
inc
xor
daa
pop
out
int
mov
dec
pop
jo
cmp
push
in
lcall
ds
xor
loope
sbb
lds
adc
and
pop
lds
ja
mov
out
mov
fisttpl
roll
in
push
xchg
cwtl
in
push
cmp
adc
fsubrp
adc
mov
aaa
test
mov
cli
jne
dec
fbstp
imul
mov
dec
or
mov
jno
aam
mov
push
cmp
repnz
push
mov
inc
dec
test
data16
out
pop
stos
test
mov
mov
int3
je
je
jno
iret
or
in
jle
icebp
or
adc
lods
cmp
xchg
fwait
pop
outsb
xchg
and
fwait
ja
mov
js
dec
inc
mov
gs
loop
push
lret
lds
and
dec
mov
mov
fisttpl
adc
push
sub
scas
push
add
pop
shl
xchg
aam
loope
cmpsl
dec
stos
lret
clc
push
xlat
adc
out
test
mov
push
push
in
shll
mov
adc
aaa
outsl
das
sub
jle
call
add
test
roll
stc
pushf
and
mov
scas
mov
mov
cmpsl
ret
sbb
xchg
sbbb
push
cwtl
test
inc
mov
pop
hlt
inc
cs
cld
pop
push
iret
scas
dec
dec
bound
dec
aas
or
adc
fcoml
aaa
mov
mov
pop
pop
mov
or
jmp
int
cmc
xchg
incl
call
loop
lods
aas
jo
mov
jo
stos
je
xchg
int
mov
jl
mov
cmp
outsb
push
push
xchg
shrb
inc
jmp
dec
add
adcl
mov
push
enter
dec
push
jbe
add
sub
aaa
inc
pop
mov
mov
mov
add
popa
lea
mov
cmpsb
xor
cmpsl
ret
cltd
cmp
pop
cmpsl
sub
sub
pop
jmp
pop
xchg
repnz
mov
and
sbb
lret
and
jge
stos
and
pop
cmp
es
xchg
dec
rcrl
mov
jge
add
xor
xor
lahf
cmp
xchg
mov
test
shlb
xor
or
nop
mov
push
in
mov
mov
jmp
dec
jo
xor
test
push
rcl
add
push
es
jns
stc
les
xor
hlt
inc
mov
call
cmp
cs
adc
movsb
cmpsl
out
adc
xor
in
cmp
and
test
mov
adc
xor
xchg
mov
clc
jge
push
push
mov
mov
add
cmp
jle
or
push
popa
xchg
inc
out
mov
push
fs
lahf
cmp
mov
jmp
or
add
test
push
adc
xchg
je
inc
sbb
loop
jl
cmpl
xor
pop
stos
add
sti
mov
pop
add
mov
aas
adc
and
and
mov
mov
or
out
aas
lea
xor
pop
addb
add
jg
mov
sti
outsb
cmp
mov
scas
or
pop
and
xchg
loop
pop
xchg
add
ds
inc
fildll
adc
or
jbe
inc
sbb
insb
arpl
mov
sbb
mov
mov
je
mov
sarb
jecxz
jp
cmpsl
lea
cmpsl
jo
popa
dec
add
in
mov
int
insb
lret
pop
adc
cmp
shlb
aam
sub
inc
xchg
inc
jmp
sbb
or
sub
pusha
movsb
and
add
cmp
outsl
out
stc
jp
mov
push
pusha
ja
into
cs
inc
jl
inc
fstpt
xor
dec
push
das
mov
cld
rorl
sub
or
inc
aam
push
das
sbb
or
sbb
rcrb
subl
add
orb
je,pn
lea
jbe
jno
push
and
xchg
arpl
cmp
adc
xchg
xor
mov
xlat
adcb
insb
in
repz
lock
pop
dec
inc
data16
psrad
cmp
jl
adc
rorb
sub
aas
xchg
add
int3
gs
jb
push
cmp
xor
mov
cld
mov
inc
mov
daa
adc
ljmp
in
into
push
popf
loopne
cs
std
pop
jg
push
sbb
mov
jae
push
jno
aaa
arpl
rcrb
lret
xchg
cmp
repnz
imulb
mov
in
inc
mov
pop
iret
pusha
pop
sar
mov
xor
push
in
pusha
fimull
xorb
fcmovnb
imul
insl
fs
notl
add
push
into
das
daa
cltd
add
pop
data16
call
mov
xchg
jge
cmpsb
mov
test
xchg
cltd
dec
leave
test
jns
outsl
mov
xor
push
addr16
stos
dec
lods
push
data16
out
sbb
xchg
jge
mov
cs
sbb
lock
and
lods
adc
pop
xchg
xor
stos
push
loop
xchg
js
sbb
ds
into
imul
cmp
arpl
das
and
lret
sbb
mov
cltd
add
sarl
sub
pop
xor
inc
or
add
in
or
ret
mov
lret
adc
les
shrb
out
jbe
cmp
out
mov
lahf
jne
pop
adcb
pop
sarl
sbbl
jg
pop
dec
fnstcw
in
aam
sub
jbe
pop
icebp
push
ror
or
jmp
outsb
fsubl
cwtl
and
dec
mov
xchg
xor
or
xchg
jmp
mov
dec
stos
cmp
or
mov
mov
enter
mov
jp
cmpl
in
xor
dec
fucomip
jge
icebp
fisttps
lods
addr16
addr16
ljmp
or
dec
das
imul
pop
fs
repnz
cmp
std
lds
xchg
jecxz
sbb
push
rol
dec
clc
or
loopne
int
add
lea
movntps
add
movsb
push
cmpl
inc
fistl
sbb
jl
testb
pop
inc
push
pop
mov
lahf
jo
jae
cmp
push
es
sub
inc
gs
fiaddl
push
pop
push
fistl
fsubrl
cmp
in
mov
dec
scas
jge
enter
adc
arpl
push
js
fs
jge
iret
pushf
adc
fldcw
in
enter
rol
xchg
mov
cmp
fnstenv
cwtl
nop
sbb
jbe
jae
into
bound
sti
mov
fwait
dec
out
out
xsaves
cmpl
out
pop
jp
dec
pop
mov
jns
fsubr
fwait
imul
cmp
iret
ficomps
mov
les
sbb
mov
mov
dec
lods
loopne
xor
sbb
fsubl
sbb
mov
scas
sbb
call
fistl
je
nop
lea
sub
and
jl
push
inc
jae
dec
outsb
sbb
sbb
cli
jp
sbbb
pop
dec
adc
in
push
imul
pop
sbb
scas
test
imull
enter
pushf
jnp
lods
hlt
cmpsb
ret
xchg
mov
addr16
jmp
push
movsb
add
inc
sahf
data16
sti
jo
jge
jl
jle
xlat
ds
mov
add
lock
roll
adc
clc
sbb
and
movsl
orl
jmp
add
push
adc
adc
jl
mov
mov
int
mov
sbb
clc
sbb
xor
stos
or
js
jne
and
in
and
imul
add
pop
test
iret
cmovb
or
fisttps
sbb
icebp
add
rclb
mov
mov
loopne
xor
inc
hlt
jns
pop
test
dec
sub
sub
and
inc
cmp
xchg
gs
lock
sbb
cmp
lods
sbb
xor
mov
daa
aad
imulb
stc
push
mov
js
or
jl
inc
adc
repz
mov
sub
push
ds
div
lock
jl
stos
cmpsl
jno
mov
cmp
add
dec
gs
sbb
mov
cmp
xchg
xor
testb
add
and
sbb
mov
movsb
das
in
ficoml
jl
icebp
mov
int3
cld
add
test
stos
inc
adc
adc
rorl
insb
fbld
bound
jg
adc
sub
jl
call
xor
repz
and
mov
mov
mov
adc
xchg
fdivs
mov
mov
sbb
loopne
mov
sti
addl
test
xchg
cmp
mov
es
inc
dec
cmpsb
subb
push
dec
out
cmpsl
xchg
inc
push
and
out
add
mov
loop
sub
jo
cmp
lds
jmp
dec
les
cmp
push
adc
push
es
outsb
ror
lds
jns
arpl
pop
mov
pop
jmp
mull
test
cmpsl
out
cmpsb
int3
insl
push
or
xor
push
lods
xchg
adc
xor
imul
nop
xor
je
mov
add
pop
xor
mov
arpl
jb
and
xor
imul
mov
fsubrl
adc
js
cmp
iret
test
outsb
imul
lds
xor
pop
inc
int
cmp
jp
cmp
into
inc
mov
insb
jne
mov
sub
adcb
xchg
fbld
stos
rcll
jp
push
iret
cltd
jecxz
aas
repnz
xor
jle
push
cmc
mov
rcrb
test
scas
subb
push
pushf
mov
lds
ret
lods
mov
push
pop
mov
mov
mov
repnz
mov
loopne
pop
fcmovnb
mov
ss
mov
push
or
push
jp
fsub
stc
data16
mov
xchg
fcoms
mov
fnsave
dec
mov
aaa
sbb
mov
in
scas
cltd
repz
sbb
std
lods
push
fsqrt
mov
or
clc
mov
pop
movsl
jmp
cmpsb
jno
sbb
push
fsubs
mov
mov
or
mov
pop
xchg
jecxz
cltd
adc
dec
mov
cld
lock
lret
gs
jb
mov
stc
or
adc
andl
es
cltd
in
loope
cmp
push
and
adc
push
shll
cmpsl
mov
das
inc
sbb
pop
sub
adc
shll
cmp
cli
sub
scas
and
cmp
aam
loopne
bound
loope
nop
mov
sarl
dec
pop
into
mov
push
bound
jo
pop
sti
repnz
xchg
test
xor
push
pop
inc
sbb
fwait
and
fsubs
or
xchg
cs
imul
popa
mov
xor
inc
adc
fmull
adc
iret
adc
repz
push
loope
mov
fldenv
xchg
cmp
adc
test
and
cwtl
mov
add
movsl
inc
cwtl
lods
jge
mov
jnp
das
xor
cmc
dec
inc
mov
iret
mov
fsub
mov
les
call
sbb
mov
mov
insl
hlt
rolb
adc
sti
push
and
daa
push
pop
inc
out
mov
xor
fcoms
stc
xchg
fwait
ljmp
fmull
jb
pop
loopne
outsb
mul
jmp
inc
jg
sub
lods
inc
mov
popa
mov
ret
mov
and
xchg
enter
stos
jno
inc
inc
lcall
test
pop
inc
sbb
dec
jge
ja
les
call
xchg
je
pop
jmp
jle
xor
sub
arpl
adc
adc
das
cli
mov
mov
xchg
gs
xchg
pop
les
lods
ljmp
cmp
mov
xor
cmpsl
mov
mov
mov
ja
inc
sbb
push
pop
in
sbb
jl
scas
mov
cmp
push
popa
sarb
data16
cmp
andl
dec
mov
mov
insb
popf
roll
mov
sbb
cmpl
mov
cwtl
decb
stos
or
adc
xchg
leave
dec
add
adc
movsl
pop
jo
sub
mov
or
mov
ds
jg
and
and
mov
xchg
sarl
sahf
dec
xchg
dec
and
mov
test
jge
or
sar
fsubrs
xchg
jmp
dec
sub
into
icebp
nop
push
jge
lret
jmp
fmull
hlt
mov
negl
mov
xchg
stos
and
repnz
sub
in
pop
outsb
pop
shll
std
aad
mov
xchg
mov
mov
push
mov
inc
push
pop
or
jo
lods
inc
bound
sub
cmp
inc
fsubrs
jnp
loop
aaa
repnz
xor
pop
cwtl
push
and
xor
inc
add
rorb
lods
cmp
pop
jl
mov
sub
inc
mov
enter
dec
in
cltd
imul
jmp
mov
outsl
gs
sub
xchg
pop
shrb
mov
sbb
mov
mov
and
adc
imul
pop
rclb
push
cmp
inc
cmp
icebp
into
movsl
scas
push
pop
pop
lahf
sub
int3
or
push
or
dec
mov
sub
inc
or
and
dec
cs
push
pop
aad
lock
mov
push
shlb
cltd
jb
xchg
fwait
cmp
lret
mov
sbb
test
xor
popf
xchg
pop
jecxz
mov
dec
mov
xchg
ds
and
xor
cmp
popf
notb
pop
cmpsb
mov
test
inc
dec
mov
test
or
xchg
sub
lret
ss
vfrczpd
pop
dec
outsb
pop
rcrl
xchg
ja
fcoms
adc
into
ficompl
scas
js
adc
mov
test
jo
and
mov
cmpsl
adc
jmp
clc
mov
arpl
push
push
or
dec
loop
lods
gs
arpl
out
add
mov
into
loope
scas
enter
jecxz
jb
inc
xchg
arpl
call
dec
movsb
icebp
fnstenv
push
out
icebp
fadd
xor
outsb
fidivrl
test
sub
push
mov
push
fidivrl
mov
cli
movsl
mov
subl
stc
xchg
sub
and
sarl
push
and
ret
sub
iret
cmpsb
cli
dec
mov
sahf
nop
jp
aas
xor
sub
mov
icebp
jmp
mov
push
lds
shrl
push
mov
mov
imul
push
pop
gs
call
popf
jmp
stc
xchg
sbb
jg
aad
or
push
sbb
cmp
and
vpmaddwd
stos
sub
add
adc
icebp
sub
adc
jns
pop
or
add
adc
pop
cmpsl
sbb
cmpsb
fistpl
jns
and
jp
divl
iret
adc
mov
lahf
and
lret
and
sbb
cmp
xor
mov
mov
sbb
inc
xor
mov
fwait
dec
pop
cmc
int
shl
cmp
cmp
repz
adcb
and
push
inc
inc
cmp
popf
jmp
inc
movsl
cmpsb
stc
jmp
pop
aam
stos
sbbb
lock
lock
adc
or
fcmove
mov
call
cli
jnp
jmp
mov
xor
inc
pop
hlt
adc
rorb
lds
sub
cmp
pop
lahf
in
and
js
cmpsl
hlt
or
stc
in
or
dec
das
add
mov
and
pop
sbb
sbb
mov
push
and
pop
and
call
cmp
call
int
dec
xor
test
bound
test
dec
scas
add
test
pop
add
int
xchg
dec
xchg
addb
lods
dec
sarl
lcall
pop
loopne
es
mov
pop
add
fdivrs
fxch
fbstp
push
aas
out
int
int
jnp
loop
push
pop
jg
xchg
mov
js
int3
push
mov
add
inc
xchg
push
int
aaa
ja
mov
js
add
inc
mov
lcall
pop
clc
cltd
aaa
mov
outsl
test
icebp
pop
xchg
std
out
mov
dec
dec
cmp
stos
sbb
test
inc
nop
add
jecxz
aaa
cmpsb
xchg
loop
inc
mov
sub
sub
fs
mov
xchg
cmpsl
and
and
dec
test
pop
jb
push
jl
mov
or
les
mov
out
xor
scas
inc
pop
es
stos
pusha
and
pushf
std
xor
dec
xchg
pop
lret
inc
lret
or
das
inc
mov
imul
movsb
andb
js
aaa
inc
xor
pop
addr16
or
hlt
push
jmp
dec
test
mov
aas
fwait
imul
xor
mov
imul
into
or
cmpsb
sahf
arpl
and
jecxz
cmp
cwtl
and
mov
cld
sti
into
push
push
lret
call
push
inc
jg
scas
pop
pusha
xchg
in
add
xchg
lods
popa
sub
in
std
jg
dec
cmp
inc
jle
scas
push
sahf
ja
in
add
add
adc
test
mov
push
std
adc
sbb
test
mov
dec
int
xchg
inc
fmulp
mov
push
scas
inc
rcl
adcl
loope
popf
ret
mov
inc
stc
dec
adc
mov
or
xlat
mov
adc
add
pop
pop
les
bound
add
mov
sbb
push
in
pusha
inc
fildl
fidivrl
clc
xchg
out
inc
and
scas
je
inc
ljmp
ja
aaa
jnp
xchg
pop
lahf
ds
sub
dec
repz
ljmp
dec
cmc
sbb
mov
mov
pop
lcall
xor
sbb
sahf
ficoml
test
repz
mov
aas
pushf
cs
out
fwait
pushf
mov
push
popa
mov
mov
lods
bound
add
test
sub
xor
adc
arpl
jbe
sub
mov
bound
mov
fucomip
hlt
fdivrs
loopne
fsubrl
sub
or
int3
dec
cmp
sub
lods
dec
push
push
test
icebp
popl
stos
fdivrs
mov
cmp
and
add
into
fidivrs
jge
sub
mov
test
push
sbb
push
imul
cmp
push
stos
inc
mov
lret
dec
pop
inc
out
je
das
iret
sbb
sbb
push
jo
hlt
test
ds
lea
mov
mov
aaa
jge
sahf
mov
loope
ret
push
cmp
pop
jbe
inc
cmp
into
pop
stc
lods
into
adc
clc
lea
int
pop
out
cmp
movsl
cs
jo
mov
outsl
divb
push
pop
mov
pop
or
pushf
adc
sarl
pop
enter
mov
push
cmp
cwtl
lock
sbb
shll
stc
mov
pop
test
js
in
adc
popf
cld
mov
cwtl
xchg
sbb
repz
mov
mov
jnp
mov
pushf
mov
mov
je
sbb
mov
cld
movsb
add
mov
hlt
divb
inc
cld
jne
incb
ljmp
or
lods
pop
add
and
dec
sbb
add
ret
in
or
hlt
cmp
sahf
dec
call
lret
insl
subl
jne
movsb
xchg
ret
jmp
push
and
push
pop
mov
xor
dec
out
je
loopne
fdivrs
shll
cmp
sti
mov
lds
and
imul
imul
sbbb
pushf
out
add
adc
shlb
xor
repz
adc
lock
test
arpl
movsl
mov
push
and
push
adc
xor
test
push
adc
push
ret
cmp
ficomps
sbbl
aam
jp
je
or
adc
mov
les
shr
xor
jmp
stc
std
mov
sarl
and
jmp
fildl
sarl
mov
into
rolb
js
jecxz
stc
sahf
push
push
call
mov
movsl
les
cld
mov
int3
pop
xchg
mov
cmp
divl
xor
mov
pop
inc
cmp
jecxz
cmp
adc
inc
and
jae
dec
and
ljmp
cmp
fsqrt
xchg
stc
aaa
enter
cmpsl
fcmovnbe
imul
or
inc
or
xor
mov
xchg
outsl
loop
aaa
ja
push
push
jnp
dec
in
xchg
sarb
pop
movsb
dec
loope
pop
mov
jg
sub
jge
dec
push
xor
xchg
cmp
sbb
je
jmp
data16
imul
add
jg
mov
movsl
mov
cmc
mov
dec
popf
jb
sub
mov
cld
fwait
push
loope
scas
das
call
xor
fcmovnu
mov
sub
je
mov
pop
ret
adc
sub
cmp
mov
repz
insl
inc
dec
ficoml
test
loope
cmp
sahf
mov
add
jg
mov
out
movsl
adc
jo
loopne
lret
pop
shlb
mov
jle
aam
add
dec
add
push
adc
jne
ljmp
mov
movsl
mov
pusha
or
xchg
mov
jl
movsb
adc
push
inc
pop
das
inc
aas
jp
dec
in
xchg
jbe
pop
aad
hlt
mov
movsb
in
aad
sub
pushf
data16
jmp
std
faddl
mov
bound
push
lods
adc
jp
add
sbb
cmp
scas
mov
ret
fnstcw
scas
and
adc
ljmp
aad
leave
in
ja
repz
ljmp
sub
lods
test
aas
push
sub
imul
mov
fldpi
mov
inc
shrl
push
out
sbbb
inc
daa
das
push
sbb
shlb
push
or
das
fadds
push
lcall
push
add
cli
neg
ljmp
aam
add
test
lods
out
loopne
insb
aam
cld
test
add
push
jb
jecxz
lcall
ss
aas
push
ret
sbb
aad
mov
xor
mov
inc
mov
mov
jp
mov
fcmovu
mov
adc
sbb
addb
ret
addr16
fmulp
sbb
bound
mov
cmpsl
ret
jno
mov
leave
push
mov
pop
pop
int
daa
imul
pop
push
adc
sbb
dec
sbb
scas
mov
xchg
sbb
cwtl
xorl
das
call
jbe
lret
std
mov
cmp
decl
xor
clc
mov
sahf
leave
or
adc
or
stos
jl
xchg
es
jecxz
cmc
aaa
icebp
xchg
pop
iret
xchg
in
mov
stos
pusha
xchg
cmp
and
xor
icebp
cmp
mov
mov
in
pop
push
es
lock
in
sbb
mov
mov
popa
arpl
test
int
mov
jns
jae
sub
repz
cmp
pop
xchg
sbb
add
filds
rolb
ret
dec
dec
daa
pushf
dec
lods
dec
int
cmp
add
push
shr
dec
in
xchg
mov
cmpl
push
push
mov
popa
push
and
mov
mov
cmp
mov
dec
inc
hlt
lds
js
sti
fdivs
fdiv
sbb
jo
gs
js
mov
push
hlt
inc
cld
mov
or
mov
xor
dec
adc
add
push
clc
add
pop
add
or
call
fwait
sbb
das
insb
es
cmp
sbb
aad
pop
imulb
mov
lahf
stc
imul
aad
and
dec
add
fwait
and
mov
adc
xchg
stos
ds
jns
and
scas
mov
dec
mov
inc
xchg
outsl
lcall
add
sbb
mov
cmc
nop
icebp
shlb
sbb
nop
lahf
cmp
mov
inc
je
aad
adc
sahf
cltd
xor
add
into
adc
ljmp
push
mov
loope
xchg
push
data16
mov
lods
outsl
push
pop
imul
pop
shll
incb
movsb
mov
adc
mov
mov
jo
sbb
inc
rorl
cld
dec
notb
cmpl
js
adc
and
fwait
mov
iret
addr16
movsl
and
daa
mov
les
inc
sub
jns
adc
fistpll
inc
out
pop
adc
push
popa
or
sbb
mov
and
and
leave
cmpsb
pop
lods
ret
dec
cld
xchg
inc
adc
out
xor
mov
push
es
mov
or
inc
mov
ret
sub
aaa
cmp
jbe
inc
add
out
and
ret
scas
pop
push
mov
pop
mov
jb
int
fucom
ljmp
jae
fists
shll
xor
movsl
and
push
sbb
push
cwtl
sbb
mov
or
lods
ss
scas
add
push
jge
jne
test
mov
push
shl
cltd
xchg
std
outsl
jmp
dec
in
rolb
push
jnp
shl
je
sub
xor
xchg
mov
inc
xchg
pop
shll
clc
push
fldt
adc
add
sub
dec
iret
shlb
mov
enter
or
fmuls
or
std
push
mov
andb
lea
and
jle
inc
pop
jmp
sub
push
dec
enter
bound
or
sbb
ljmp
mov
outsb
iret
inc
sub
mov
jbe
xor
pop
or
pop
adc
dec
lods
sti
inc
mov
adc
pushw
icebp
push
cmp
outsl
neg
mov
insb
mov
cmp
push
mov
sub
scas
xchg
inc
cs
sbb
push
push
enter
push
lahf
call
mov
enter
imul
pop
jbe
xchg
ds
sahf
or
mov
push
push
iret
sbb
test
es
fdivrl
push
lret
mov
inc
pop
mov
les
pop
negl
lods
lret
jne
inc
in
add
stc
arpl
shlb
xor
inc
jo
fs
movsl
ljmp
mov
jne
cmp
test
divb
out
pop
sbb
add
ljmp
out
loop
sub
cmp
cmp
rcrl
and
dec
arpl
outsb
dec
xor
dec
hlt
mov
xchg
fldenv
in
push
or
mov
push
dec
xchg
cmp
xchg
adc
add
or
mov
iret
imul
stos
or
dec
mov
mov
lcall
fmul
jl
push
cmpsb
outsl
sbb
loop
add
movsl
dec
mov
inc
idivl
inc
fildl
inc
pop
pop
aas
insb
jb
loopne
or
iret
out
add
movsl
arpl
xchg
daa
clc
repz
sbb
cmp
int3
push
in
or
insb
lahf
jge
lahf
mov
pop
and
add
decb
xor
add
lea
fstpt
mov
je
rorb
mov
imul
ljmp
push
rcrl
aaa
out
je
pop
repz
inc
in
out
push
mov
sbb
hlt
leave
cvtdq2ps
nop
out
jle
lahf
pop
ret
inc
adc
and
xchg
lea
pop
sub
std
pop
xchg
adc
int
out
mov
popa
cld
pop
mov
xor
ret
pushl
test
fdivl
sub
lods
pushf
dec
jge
in
adc
xor
adc
xlat
pop
ds
sbb
jae
xchg
cmp
sub
les
jo
jecxz
adc
sbb
jmp
jmp
mov
test
cs
xor
lea
cwtl
mov
mov
cs
pop
jp
jo
ret
fs
repz
cmp
mov
mov
daa
test
fimuls
imul
movsb
xchg
add
and
adc
fs
dec
or
inc
rcll
je
or
cmp
and
mov
xor
js
je
fistpl
mov
push
negl
scas
popl
jge
cwtl
mov
sbb
mov
cmp
add
scas
pusha
fwait
jnp
fcomp
jmp
cmpl
in
cmp
stos
shlb
loopne
je
cld
vmwrite
push
divb
hlt
pop
xor
test
inc
sub
fisttpl
xchg
aas
or
stos
and
xlat
lret
xor
add
mov
sbbb
jecxz
jb
popf
call
dec
lcall
jl
test
jbe
hlt
jecxz
sub
push
push
das
mov
jle
sub
stos
into
ret
pop
lahf
or
popa
jbe
pop
lret
xchg
shlb
lock
daa
gs
sub
shrb
loopne
xor
sub
cld
bound
ja
lcall
in
jmp
stos
add
jo
push
xchg
sub
shlb
ret
jb
and
pop
push
mov
lods
aad
jnp
insb
push
push
pop
movsl
aas
scas
scas
in
jbe
inc
test
add
test
sub
dec
push
inc
mov
mov
mov
push
popa
mov
sti
pop
mov
and
dec
cmp
cs
add
pop
mov
push
aas
in
jnp
or
mov
out
mov
cmp
mov
nop
test
inc
outsw
push
lcall
lods
mov
xlat
mov
pop
adc
loop
fisttpll
lds
es
sbb
mov
out
mov
jno
jne
movsl
loop
scas
mov
dec
cmpsl
sbb
lds
aas
xchg
sbb
jae
and
fsubl
mov
xchg
or
lcall
test
std
mov
in
outsb
ret
or
mov
aam
out
hlt
xchg
bound
xchg
enter
and
xchg
movsb
add
jmp
aas
xchg
dec
add
ja
sbbb
dec
jg
cmp
pop
out
and
push
jae
andb
into
mov
mov
mov
js
push
jecxz
lock
and
adc
xlat
loopne
mov
mov
enter
adc
test
mov
inc
mov
lcall
or
jmp
addr16
std
rorb
inc
imul
mov
pop
into
mov
enter
dec
xchg
aam
into
andl
jge
das
insb
mov
ss
sarb
cltd
mov
pop
xchg
es
std
lret
ss
mov
sub
pusha
jg
cmp
iret
sarl
lahf
test
or
mov
sub
jbe
repnz
push
and
jo
dec
divps
test
divl
jns
dec
fwait
cmpsl
in
rolb
sbb
fisttpll
mov
add
dec
fimuls
cmpsb
sbb
sbb
cmpsl
mov
das
nop
mov
daa
out
scas
daa
cmpsb
mov
adc
fidivs
push
sub
and
pushf
int3
cmp
cmp
sarb
fdivs
xor
lds
enter
jne
and
pop
out
roll
jnp
or
sub
sahf
rorb
fwait
lods
or
pop
cld
sbb
iret
bound
lds
imul
daa
and
jle
lret
jle
pusha
stos
insb
in
add
rcr
adc
stc
xchg
outsb
push
push
sarb
cs
sub
outsl
or
out
cli
push
push
test
xchg
test
icebp
lds
aad
inc
and
test
jno
stos
ss
jnp
out
adc
push
dec
leave
inc
mov
push
and
fmul
outsl
ja
mov
divb
push
loope
mov
cmp
push
jo
push
add
repnz
dec
add
arpl
pop
mov
arpl
andl
into
movsl
pop
mov
ljmp
adc
mov
mov
push
sub
cmp
and
mov
inc
je
in
push
aaa
aam
xor
sub
mov
or
loope
sbb
sub
mov
jp
xor
inc
adc
sbb
or
mov
roll
mov
and
add
cs
adc
jp
push
lret
dec
xor
inc
pusha
lds
test
and
clc
pop
out
push
push
mov
fsts
and
mov
jns
loope
add
or
jo
add
pusha
mov
push
test
nop
testl
jbe
cwtl
testb
and
xchg
orl
dec
loope
adc
xchg
in
inc
jmp
jae
in
cmp
or
dec
mov
repnz
sbb
push
cld
adc
mov
jne
int
and
add
dec
push
push
mov
es
or
fisubrl
movl
mov
jnp
test
aad
out
les
mov
push
jge
repnz
dec
pop
cmpsl
cmp
cmp
popf
pop
outsb
mov
aam
mov
mov
xor
mov
sti
xchg
add
cs
jmp
jbe
sub
lods
cld
int3
in
and
push
aaa
in
or
arpl
push
inc
call
lock
cmc
dec
mov
push
data16
orb
mov
nop
ja
aaa
shll
dec
insb
xor
xor
pop
sub
or
sbb
andl
jecxz
cmp
mov
mov
in
and
mulb
cmp
fmull
cmc
pop
pop
mov
shrb
add
mov
pop
loopne
mov
mov
lahf
dec
out
xchg
dec
lahf
sub
lret
pop
xchg
xor
pop
jno
pop
and
push
lods
jp
mov
sarl
cwtl
mov
push
aad
jne
cli
push
sbb
xor
sub
sarb
bound
fimuls
cmpsl
cld
out
xchg
jo
or
cmp
sahf
fs
rorl
sub
pop
pop
ljmp
subl
pop
cld
mov
sub
push
pop
cmp
and
data16
mov
dec
orl
js
xlat
loop
add
adcb
inc
loop
push
xor
ja
inc
in
loopne
cmp
repnz
movsl
fldcw
add
stos
jle
xchg
xchg
dec
jmp
cli
pusha
mov
dec
mov
jecxz
jnp
and
lcall
dec
outsb
mov
push
add
out
dec
iret
sub
and
repz
pop
outsl
test
fcoms
push
xchg
inc
test
fwait
pushf
arpl
add
xchg
push
pusha
stos
in
int
dec
sahf
daa
cmpsl
lret
inc
pop
popf
adc
push
ds
add
mov
xor
sbb
and
icebp
sbb
nop
ljmp
gs
mov
ret
pop
fcoml
outsb
cmp
das
jbe
mov
cmpsl
sti
loope
mov
inc
jnp
fdivrs
pop
leave
and
mov
and
in
sbb
and
mov
iret
aaa
aad
push
mov
lods
outsl
xlat
arpl
inc
sub
jp
insb
cmpsb
push
and
int3
push
loopne
inc
lods
ds
push
xor
addr16
fisubs
lock
push
mov
xor
dec
jmp
in
rcll
push
jne
arpl
ret
outsl
and
sarl
cmpsl
insb
lds
ret
pop
ret
xor
xchg
mov
xlat
fwait
xlat
sub
pop
jne
cmp
icebp
mov
ret
hlt
pop
pop
jae
inc
das
sub
sti
fisubrs
je
bound
stos
inc
stc
lods
ss
lea
icebp
sub
mov
cwtl
into
cld
sbb
cmp
mov
cmp
add
cmpsl
dec
and
fwait
xor
pop
adc
aam
mov
das
scas
cmp
popf
bound
xchg
lret
imul
sbb
mov
stos
data16
jmp
or
cmp
or
jo
mov
sarb
push
jge
jecxz
test
out
and
ret
incb
aas
or
ds
pop
add
pop
cltd
je
jno
jmp
add
add
out
int3
mov
xchg
out
add
and
inc
hlt
divb
pop
fsub
gs
shrb
mov
repnz
mov
sub
xchg
shl
and
xchg
data16
outsb
cmp
rcrb
dec
fwait
loopne
mov
or
sbb
and
andl
fbld
mov
imul
sub
xorl
push
or
in
sahf
adc
mov
dec
xchg
scas
adc
sti
fildll
ljmp
cmp
mov
or
pushf
mov
repz
das
movsb
sti
jns
sbb
sub
sti
xchg
adc
scas
inc
jbe
fcom
fisttpl
mov
jo
pop
cmp
inc
push
xchg
jg
xchg
jo
xchg
das
sbb
mov
mov
mov
les
cmpsb
mov
jbe
and
test
cs
scas
or
inc
fstps
fildl
push
sub
aam
notb
cmp
adc
sbbb
lcall
out
inc
jl
call
stos
fiadds
shll
add
in
je
lds
out
aam
jbe
std
mov
lods
clc
lcall
je
movsl
sub
lret
cmp
mov
lret
outsb
xor
stos
fstl
mov
add
jl
fiadds
mov
add
lahf
loop
std
jne
cmp
push
xor
leave
or
push
xchg
outsl
out
ret
sub
aaa
cmpsb
test
pop
push
cmp
push
push
mov
lock
xchg
inc
cmpsb
outsl
xor
mov
pop
lock
adc
repz
pop
cld
dec
adc
cmp
int
les
in
jg
mov
pop
fildll
inc
std
mov
jecxz
dec
cmp
stos
scas
cmp
xchg
mov
sub
cwtl
or
xchg
insb
cltd
inc
lods
jge
add
mov
leave
mov
cmp
lea
stos
jmp
adc
out
mov
adc
and
imulb
test
pop
adc
pop
mov
dec
lahf
sub
loopne
pushf
sbb
cmp
jae
mov
sahf
sahf
enter
fistps
adc
andb
stc
test
inc
xchg
test
imul
xchg
jmp
shll
aaa
or
lret
sub
rol
inc
jle
mov
mov
push
sahf
lahf
sub
xchg
cmpsb
xchg
pop
decb
jmp
mov
dec
mov
gs
mov
or
pop
adcb
and
mov
jl
lahf
xchg
mov
add
std
imul
insl
rcll
in
aad
mov
bound
imull
cmp
out
lret
sub
int3
xchg
sti
sub
mov
xchg
mov
pop
mov
push
movsl
mov
xchg
jmp
mov
cmp
push
mov
inc
fnstenv
orb
daa
in
inc
lea
add
popl
jmp
push
test
movsb
push
jecxz
xchg
pop
outsl
nop
test
xchg
push
insb
push
notl
or
movsb
inc
fistpl
or
hlt
inc
lds
in
adc
mov
mov
pop
stc
mov
dec
ss
or
push
fstps
jg
mov
push
mov
ljmp
repnz
push
std
xchg
jae
int3
ja
and
lret
cmpsb
imulb
inc
in
mov
std
jno
fmull
scas
mov
ja
mov
add
add
dec
mov
xor
jb
dec
lods
aam
loope
test
scas
stos
dec
insl
lods
pop
lods
pusha
in
cmc
into
and
push
testb
in
in
mov
repz
nop
push
dec
sbb
pop
push
sbb
sbb
sbb
sti
xor
je
stos
mov
movsl
lret
mov
lods
sub
mov
enter
push
out
lret
adc
int
call
imul
stos
pushf
sub
rcll
in
in
imul
imul
sbb
fadd
stc
dec
jbe
cwtl
inc
cmpsb
pop
aam
insl
xchg
test
or
mov
cld
std
xor
pop
fmuls
and
mov
cmp
or
mov
int
fadds
outsl
fdivp
pop
sbb
push
hlt
pop
icebp
out
add
imul
daa
pop
addr16
xor
data16
xor
rclb
fsubrs
mov
jb
rolb
jg
fisttpl
ss
arpl
mov
shl
xchg
es
in
sbb
xor
or
outsb
sahf
call
stos
xchg
pop
aaa
sub
mov
push
inc
seto
push
pop
mov
sub
leave
bound
popf
sbb
mov
in
lods
mov
mov
xchg
sbb
push
xor
adc
pop
cmp
iret
pop
shr
push
loop
stos
fsubrl
rcll
jg
jae
iret
and
int3
loope
ret
fsubs
ljmp
push
pop
sbb
sbb
xchg
dec
idiv
sub
inc
and
wrmsr
cmc
xor
adc
icebp
out
add
cmovp
pop
jne
es
shlb
lret
fildl
sahf
mull
fs
sbb
mov
jnp
sbb
dec
ret
movsl
sar
push
mov
js
aad
sahf
std
xchg
push
arpl
lcall
fildl
mov
dec
inc
dec
xchg
and
movsl
rclb
inc
jp
lret
rcrb
xor
daa
imul
js
sub
or
mov
test
cmp
and
push
out
jmp
jae
ja
repz
jmp
inc
jp
xchg
call
and
cld
push
andb
dec
pusha
jg
fisttpl
repz
push
scas
pop
jmp
add
bound
add
addb
inc
cs
push
stos
rorb
lock
xchg
fwait
sbb
push
cmp
adc
jbe
lcall
jmp
adc
mov
adc
xchg
sub
pop
shll
sub
out
mov
sbb
adc
sub
adc
pop
mov
ds
in
xor
mov
movsb
push
testl
in
cmp
lret
rcrb
cmc
push
fsubs
movsb
imul
cltd
add
pop
movsb
mov
pop
mov
fs
push
movsb
mov
cmp
cmc
inc
in
fdivrl
push
add
movsb
imulb
xor
rclb
in
outsl
icebp
decb
push
lret
jo
ror
push
mov
jg
or
in
xor
add
pushf
and
sbb
lcall
enter
fwait
stos
mov
mov
cmp
adc
jecxz
in
mov
push
jae
sub
rcrb
and
dec
xchg
pop
rolb
addr16
nop
mov
dec
jp
cwtl
xor
ds
xlat
jmp
dec
xchg
into
mov
xor
cmp
sub
test
mov
dec
mov
pusha
mov
xchg
out
outsl
cwtl
sbb
pop
ljmp
pop
jnp
or
push
push
mov
inc
dec
sbb
pop
sti
pop
xor
dec
and
push
push
jle
lret
ljmp
push
pop
or
dec
cmpsb
dec
jmp
adc
mov
mov
jnp
cwtl
dec
xchg
decl
icebp
sub
imul
xchg
scas
dec
add
in
flds
pop
jb
sub
xor
jl
shl
outsl
inc
lods
or
lods
inc
mov
pop
daa
pop
test
jp
sahf
dec
aaa
clc
stos
lea
cwtl
mov
jno
push
fstpt
mov
cmpsb
stc
in
scas
pop
mov
inc
push
or
mov
push
orl
mov
pop
in
mov
cmpsb
insb
jecxz
or
push
insb
imul
push
jle
adc
or
mov
xchg
mov
mov
dec
and
sub
cmc
dec
lret
mov
jae
or
daa
mov
and
lcall
pop
push
dec
add
mov
pushf
popf
out
dec
xorb
out
mov
mov
imul
ss
dec
outsl
shl
jl
xlat
fadds
in
roll
mov
push
adc
orb
incl
daa
cmp
sbb
pushf
gs
or
pusha
popa
sub
adc
push
mov
pop
jmp
mov
cmpsb
fs
je
enter
jle
in
push
mov
jmp
or
sub
pusha
icebp
push
mov
pop
je
arpl
aam
mov
adc
fucomi
sub
test
fisubrs
xor
mov
inc
aam
flds
popf
ljmp
pop
jmp
sub
fiadds
ds
sbb
movsb
sbb
push
data16
hlt
int
jge
add
out
outsl
push
or
fisubl
aam
push
inc
mov
je
sbb
mov
mov
pop
shrb
clc
cmpsl
notb
mov
movsb
in
xchg
mov
imul
popa
pop
pushf
sbb
fldcw
lock
sub
testl
iret
pop
ret
add
mov
lods
sub
cmpsb
inc
xorl
loope
cld
gs
sub
icebp
decb
xchg
lods
outsb
test
out
xchg
daa
mov
or
pop
mov
test
xor
jmp
daa
sub
push
in
or
shrl
adc
jmp
jne
shrb
pop
and
sbb
insb
dec
push
mov
xor
gs
aaa
push
mov
mov
add
push
sbb
inc
cld
xchg
cs
das
rcll
cmpsb
xor
inc
sbb
lods
lods
push
pop
push
mov
mov
xor
movsb
push
orb
sahf
je
add
adc
inc
pop
push
sbb
lcall
or
fnstcw
inc
jp
cmpl
setbe
aaa
fdivrl
adc
fsts
pop
add
lret
xor
adc
pop
test
movl
shlb
out
popf
add
mov
push
xor
or
and
sub
inc
jns
in
fs
jno
xchg
jg
lds
cld
ljmp
and
movsl
sbbl
jge
test
xor
jg
fwait
xor
push
cli
mov
das
enter
inc
dec
xor
pop
push
cld
adc
shlb
icebp
push
mov
add
in
cmp
ljmp
gs
or
cmc
push
push
lret
emms
shrb
jb
mov
popa
mov
nop
mov
loop
lds
cmp
test
js
fwait
sub
sahf
or
gs
subl
decb
mov
fs
add
push
sti
mov
movsb
inc
cs
mov
icebp
icebp
or
mov
rorl
rcrl
leave
test
in
inc
pop
ljmp
and
pop
xor
sub
cltd
pop
dec
mov
and
in
shrb
xchg
cmpsb
mov
rolb
and
adc
pop
imul
aaa
lcall
scas
addr16
stc
cmp
push
mov
or
xchg
lea
xor
dec
inc
and
cmc
or
std
int
adc
push
stos
mov
stos
inc
fstpl
dec
or
push
jl
xchg
sub
adc
sahf
add
mov
mov
jge
sbb
add
scas
inc
divb
enter
mov
dec
xor
inc
push
mov
shl
cld
ror
cmp
or
xchg
clc
cmpsl
call
xchg
rorb
ljmp
lahf
xor
cmc
ret
ret
stos
pop
cmp
pop
movsb
mov
in
adc
test
mov
push
push
pop
sbb
mov
out
lcall
std
nop
add
icebp
ror
inc
lahf
fs
mov
push
leave
add
loopne
outsb
xor
movsl
jae
pop
xor
lretw
lahf
push
pop
mov
aas
jl
jo
lret
mov
les
adc
mov
push
sbb
adc
xor
call
in
movsb
addb
mov
jp
leave
jmp
jns
stc
jle
in
and
jg
dec
pop
dec
xchg
ds
xchg
mov
pop
pop
push
popf
cmp
fimull
adc
jp
xlat
loopne
xchg
aaa
cmp
cmp
aam
cmpsl
and
stos
leave
mov
lahf
imul
push
testl
mov
into
cmpsb
push
test
cld
mov
mov
dec
jnp
ds
fisubl
mov
inc
jns
bound
xchg
push
nop
cmp
adc
pop
gs
daa
fwait
shll
rcrb
std
jge
jle
les
or
imul
xlat
sbb
fs
lretw
ljmp
popf
adc
pop
lret
cmc
adc
adc
outsl
cli
aaa
ficoms
inc
shll
shrb
jg
lds
fmuls
and
ss
pushf
call
lock
jecxz
inc
cmp
test
adc
mov
push
jae,pt
sub
inc
dec
cmc
addr16
scas
insl
data16
scas
pushf
xor
xchg
mov
xchg
adc
lods
sbb
mov
pop
popa
adc
xchg
and
fdivrp
cmc
xor
lods
or
aam
test
icebp
std
and
dec
push
sbb
mov
mov
mov
daa
push
lret
xchg
test
fwait
cwtl
push
dec
adc
cltd
push
xor
dec
test
adc
idivb
std
outsl
les
jbe
mov
fldcw
xor
in
cli
push
inc
inc
andl
ficomps
jmp
mov
scas
jnp
mov
movsb
cli
xchg
insb
xchg
sub
out
stos
scas
sub
push
mov
inc
aas
es
rcrb
push
jne
sbb
cmpb
les
push
push
push
adcl
gs
into
inc
jp
out
mov
pop
in
sub
mov
xor
lahf
das
imul
shll
aad
dec
outsl
test
inc
popa
mov
pop
and
mov
repz
orl
fstp
and
lret
fwait
or
rcr
dec
inc
ds
mov
cmpsl
inc
mov
push
and
mov
lret
daa
xchg
mov
push
popf
popf
or
aaa
jno
out
adc
xor
jno
mov
xor
lret
sub
sbb
ret
and
push
outsb
es
fidivrs
mov
push
push
mov
fbstp
outsl
push
jmp
xor
inc
sub
mov
out
sbb
dec
insl
cmp
lret
clc
sbb
adc
clc
inc
sbb
jge
mov
ror
in
dec
pop
imul
shll
stos
adc
dec
daa
mov
mov
push
mov
mov
mov
jg
mov
in
stc
push
ds
outsb
lret
inc
hlt
adcl
std
mov
or
orb
xchg
push
outsl
fnstsw
ljmp
mov
iret
sbb
inc
lods
cwtl
sub
int
sub
ljmp
push
sub
ljmp
mov
mov
adc
fisttpl
mov
fdivrl
les
std
sub
add
filds
ss
lcall
repnz
cmp
stos
or
mov
cmp
lods
addr16
dec
bound
es
inc
xor
mov
dec
das
js
pop
and
cs
test
iret
jne
push
in
aaa
jno
push
adc
les
test
jge
nop
das
add
imul
inc
mov
popa
imul
int
push
ret
scas
sahf
pop
das
jns
dec
cmp
in
push
mov
ja
mov
rclb
push
inc
or
sub
loopne
adc
in
adc
jb
pushf
adc
adc
adc
pop
jno
mov
int
add
fs
xor
mov
or
pushf
or
arpl
inc
inc
cmp
mov
sub
xchg
pop
arpl
stos
out
and
mov
xchg
arpl
sbb
imul
out
cmpsl
jnp
jo
xchg
dec
movsl
out
pop
sbb
inc
cltd
jne
lahf
add
push
rorl
push
negl
push
dec
test
loopne
jnp
imul
inc
lahf
cmc
push
fidivs
add
jp
cmp
inc
adc
mov
fadds
call
mov
or
insl
push
daa
clc
pop
jge
int
out
sub
movsl
aad
xchg
and
leave
mov
inc
outsb
push
mov
inc
dec
jnp
aaa
cmp
mov
mov
sbb
mov
or
dec
xchg
addl
mov
add
call
mov
lret
popa
xchg
inc
in
nop
jge
fldcw
inc
or
adc
jle
cmp
imul
fisubl
int
sub
sbb
pop
inc
pop
pop
xchg
mov
repnz
jno
shr
mov
inc
ljmp
xchg
sbb
inc
ret
je
pushf
add
adc
shlb
mov
inc
rclb
and
pop
or
int
pop
icebp
sbb
cwtl
movsb
aam
shlb
mov
dec
inc
adc
add
mov
fistpll
jbe
or
inc
xlat
push
sti
mov
mov
jecxz
xchg
mov
pop
cmp
adc
mov
fisubs
mov
xchg
xlat
mov
cmp
das
cld
rcrl
and
xchg
mov
ret
enter
xchg
sbb
shlb
push
pop
test
std
dec
sahf
int3
xlat
xor
inc
lret
xor
xor
adc
fsts
mov
mov
mov
add
xchg
inc
cmp
and
sub
inc
or
fwait
cmpb
imul
imul
mov
stos
shl
pop
push
mov
lods
jae
sbb
mov
push
sub
mov
xor
cmpsb
adc
or
shl
mov
or
lods
add
jle
out
mov
rcrl
les
or
popf
lcall
pusha
mov
push
aad
cmp
flds
ret
and
mov
add
pop
insb
xorb
loope
inc
popa
cli
xchg
scas
pop
sub
sbb
xor
inc
push
in
cs
aad
mov
insl
scas
pop
jle
imul
sub
inc
aad
sbb
stc
in
lea
lock
jle
mov
pop
mov
aaa
repnz
enter
outsb
pop
sti
cmpsb
dec
jmp
les
pop
dec
jp
cmpsl
int3
jg
lret
inc
popf
and
cmp
data16
mov
subb
xlat
insb
and
adc
jno
push
das
daa
enter
jne
pop
add
inc
jmp
adcb
je
addl
aad
stos
lock
xorb
fmul
pop
int
push
gs
cmc
aam
mov
mov
xor
dec
mov
pop
not
cld
lret
lret
sbb
outsb
xchg
leave
sbb
sub
int3
mov
lock
mov
or
fisttps
add
cmp
xlat
dec
and
sbb
xchg
dec
adc
jne
sub
xchg
add
xchg
divb
dec
push
cli
fbld
jmp
mov
mov
pop
shlb
sub
fnstcw
je
out
mov
cli
push
bound
push
push
sub
leave
mov
and
add
shrl
scas
pop
ror
xchg
and
in
push
mov
sbb
sti
xor
into
gs
mov
xlat
xchg
xchg
sahf
fsub
clc
sub
cmp
icebp
cmp
outsb
je
push
mov
int
sahf
sahf
cld
jmp
incl
or
js
in
repz
lcall
in
leave
in
dec
sub
mov
add
mov
add
dec
mov
lahf
ja
lcall
fs
test
sbb
adcl
cmpsl
and
ljmp
call
jo
repz
pop
lret
lahf
push
es
enter
dec
test
push
enter
mov
xchg
xchg
fildll
aas
xchg
fdivr
mov
cmp
push
xor
andb
xor
test
popa
mov
xchg
jp
lods
xor
mulb
push
or
call
stos
imul
sarl
push
testl
xlat
push
inc
lcall
dec
fwait
arpl
sarl
push
inc
jno
ret
aad
sti
lret
push
lea
jle
aam
xor
fdivrp
mov
add
mov
mov
jns
lea
jbe
push
call
sub
iret
stos
imul
xchg
and
imul
dec
and
and
into
stc
out
dec
add
js
js
mov
nop
jb
jl
mov
push
mov
orb
push
lock
pushl
pop
cs
jbe
and
leavew
sti
push
loop
xor
mov
and
push
cmp
rcr
outsl
dec
aaa
xor
or
cli
cmp
cmp
aad
mov
inc
mov
dec
sbb
push
xchg
inc
lods
bound
lods
sub
inc
xchg
insb
movl
mov
std
sub
and
test
pop
stc
jo
push
mov
rcll
push
jp
push
iret
js
enter
sub
sub
xchg
ja
sbb
dec
fidivrs
xchg
sbb
divl
xor
into
mov
or
xchg
int
mov
cltd
cmp
push
leave
cmp
in
call
mov
ret
pop
idivb
push
decl
mov
lock
mov
mov
xor
jmp
dec
dec
dec
inc
ja
out
imul
out
add
pop
pop
lea
sbb
sub
in
ljmp
cmp
xchg
subl
call
jnp
cmp
dec
aas
in
push
incb
int
or
hlt
push
call
loop
jle
mov
pop
clc
mov
xor
mov
loop
add
mov
xchg
jg
pop
push
shlb
subb
mov
fdivrp
icebp
fcomi
hlt
shl
pop
sbb
mov
rcll
enter
das
stos
out
sbb
insl
mov
loop
ljmp
cli
mov
aam
pop
int3
hlt
repz
into
fsubrl
int3
sbbb
arpl
mov
xor
cld
mov
mov
shll
mov
call
cwtl
add
aam
add
repz
cmp
fsubr
pop
inc
xor
and
sub
pop
fcomi
inc
dec
arpl
js
push
lahf
mov
xor
mov
mov
mov
popa
and
popf
mov
shll
and
dec
je
movsl
roll
cltd
mov
ret
mov
daa
test
sbb
push
sarb
fwait
mov
test
push
push
cmpb
pop
lods
insb
pop
cwtl
out
add
clc
mov
fdivrl
sbb
fisubl
cmp
data16
lock
imul
xchg
ss
add
testl
inc
mov
jae
in
aas
test
es
cmpsl
pushf
cmp
pop
jg
shr
int3
lret
aad
iret
ss
repnz
fdivs
stos
jecxz
shr
and
pop
mov
push
js
outsb
cwtl
call
bound
and
aam
xchg
sub
fdivs
imul
repnz
out
or
dec
dec
mov
sbb
test
leave
icebp
pop
in
sbb
int3
sub
fidivs
pop
or
shlb
or
inc
out
jle
cld
cmc
adc
jnp
lods
push
lock
xchg
aam
add
outsb
fwait
adc
push
push
mov
jo
gs
push
test
xor
paddd
ficomps
push
jle
call
lock
das
sti
cmp
mov
outsb
mov
or
push
hlt
pop
sub
pop
mov
pop
sbb
sub
popa
mov
je
dec
push
ds
insl
pushf
fcom
int3
decb
push
inc
int
sub
xchg
pop
les
out
xor
push
roll
call
mov
xchg
mov
mov
dec
xor
cltd
or
repz
cmpsb
jmp
in
popa
xor
daa
rolb
cmpsl
icebp
inc
xchg
pop
push
xchg
cmp
leave
lret
ja
xchg
test
ret
out
loope
negl
fiadds
inc
or
cltd
rcll
insb
xorl
push
inc
and
outsb
sbb
into
cwtl
add
cmp
lret
mov
jne
mov
add
in
iret
enter
in
jle
cli
adc
test
test
ja
sbb
data16
add
loope
aaa
pop
adcl
pop
add
das
fwait
pop
rolb
jg
ljmp
int
movsb
or
push
out
or
or
push
testl
mov
imul
jne
or
int3
lret
cmp
jo
xor
push
xor
mov
sub
add
dec
std
mov
push
mov
pop
popf
mov
das
and
jae
hlt
pop
push
iret
sbbl
daa
xchg
add
push
push
repnz
fs
jecxz
cmc
call
sbbl
and
xor
xor
std
jge
in
pop
fs
jb
add
js
inc
mov
ja
dec
divb
sbb
adc
aad
xor
sub
mov
push
pusha
adcb
xchg
adc
fimull
int
jb
shlb
mov
fstl
orl
and
adc
out
rcrl
lcall
push
sub
test
loope
pusha
sub
jae
data16
in
daa
mov
das
mov
jns
cmp
pop
cmp
jmp
pop
movsb
mov
pop
int
and
pushf
fsts
cmp
call
jg
cwtl
lret
adc
mov
sbb
or
xchg
sti
out
mov
jg
cmp
lcall
push
cs
insb
add
aad
lock
xchg
popf
mov
pusha
cmp
mov
lock
jp
dec
rcrl
dec
and
fsubr
mov
sbb
xor
insl
test
dec
sahf
das
aad
pop
jg
cmpsb
jbe
sbb
insl
mov
cmp
cwtl
and
xchg
scas
inc
out
xor
enter
jnp
xchg
mov
bound
clc
jp
icebp
call
xor
inc
lcall
adc
dec
mov
dec
je
std
loop
clc
add
cmp
arpl
xor
xchg
or
jnp
mov
test
mov
pop
mov
std
repnz
test
fisttpl
inc
and
pop
cwtl
fcomip
cld
push
dec
or
scas
in
outsl
ljmp
and
dec
cmp
mov
rcr
out
data16
int3
sti
rclb
jno
loop
scas
sub
sbb
push
cltd
gs
dec
mov
iret
xchg
xlat
sbb
mov
inc
push
insb
dec
jns
push
in
clc
sahf
adc
ljmp
jbe
mov
test
call
jne
jmp
or
xchg
adc
mov
xchg
dec
push
mov
dec
xchg
xor
stos
sub
icebp
or
dec
sbb
scas
mov
out
xor
fwait
decl
insb
sub
mov
xor
inc
cmp
xchg
imul
mov
sub
mov
inc
cmp
mov
orps
mov
cmc
dec
adc
sahf
enter
inc
adcl
inc
fs
lret
rorl
call
add
enter
popf
xlat
and
xor
sti
cmp
hlt
rclb
mov
mov
sbb
paddsb
push
adc
mov
inc
loopne
jo
enter
dec
sbb
ffree
stc
into
fs
push
jge
mov
push
jae
or
cmp
pusha
mov
push
popf
xlat
std
pop
fldl
cwtl
or
test
xor
cwtl
sub
mov
lock
adc
ljmp
xor
mov
sbb
icebp
fdivrs
mov
mov
mov
sbb
movsl
aad
je
sbb
pop
cs
xor
bound
sub
lods
inc
lret
sarb
jno
lea
pop
scas
mov
sbb
shll
cmp
xlat
jmp
sti
in
shlb
lds
cmc
pop
xchg
push
and
fwait
out
or
and
or
adc
iret
mov
inc
insb
adc
movsb
aaa
cmp
mov
or
xchg
sbb
repnz
inc
insb
or
jle
call
or
test
aaa
push
mov
jp
js
ret
shrl
mov
call
inc
xchg
mov
pop
aam
scas
push
jae
iret
negb
lds
xor
sarb
inc
leave
mov
pop
sub
mov
mov
xorl
mov
popf
int
xchg
push
bound
sahf
scas
xor
xor
mov
mov
loopne
std
in
popa
pop
or
pop
mov
push
lods
loopne
scas
cltd
and
inc
xor
aaa
cmpsl
mov
mov
sbb
inc
sub
and
mov
mov
ret
jecxz
fwait
jle
mov
dec
mov
adc
mov
lock
jp
jno
into
pop
popa
dec
cltd
mov
push
cs
decl
sub
dec
mov
mov
aam
inc
sub
mov
jmp
xchg
loop
mov
adc
movsb
ret
popa
cmpsb
iret
jne
pop
and
lcall
jmp
in
and
push
fistpll
push
sub
gs
mov
and
xor
rcrb
sub
fcoml
lahf
adc
xor
into
dec
in
cmc
push
sub
xor
outsl
push
jg
int
mov
fadd
cmc
sbb
cmp
into
pushf
dec
rclb
push
mov
xor
adc
aad
mov
sti
push
imul
and
lods
mov
xorb
insb
mov
rol
mov
and
stc
cwtl
mov
sub
add
dec
push
jno
mov
mov
into
jns
push
rcr
adc
sbbb
mov
push
cmpb
cmp
fisttpll
mov
imul
imulb
pop
lods
iret
mov
icebp
fwait
dec
sti
adc
jns
gs
ret
add
gs
xor
lret
das
push
test
and
std
jne
enter
jnp
scas
xor
push
aas
outsb
and
shl
add
push
rcrl
xor
sbb
insb
xor
sbb
xor
sbb
mov
pop
jecxz
in
push
lods
enter
dec
jae
loopne
je
outsb
rorl
mov
das
mov
pop
mov
mov
dec
inc
in
jle
and
test
jo
cld
or
sti
adc
mov
add
cs
subl
ficoml
and
and
mov
push
les
inc
xchg
in
pop
stos
cmp
jle
test
and
jmp
jle
and
dec
jae
lods
mov
stos
cmpsl
xor
inc
xor
pop
cmp
or
roll
dec
pop
lods
jo
es
into
insl
arpl
test
dec
shlb
imul
adcb
jle
push
cmp
scas
mov
sti
jmp
pop
shll
shl
sub
dec
test
nop
add
fstpt
frstor
xchg
imul
mov
mov
int
out
cmp
rolb
mov
inc
pusha
inc
stos
fidivrs
dec
mov
iret
adc
xor
add
push
out
mov
ja
push
or
outsb
or
pause
aaa
push
mov
mov
sahf
int3
xchg
aaa
out
adc
cwtl
js
aaa
pop
pop
inc
outsl
xlat
rcrl
jg
pop
dec
nop
sbb
lds
out
loope
je
out
aad
and
fsin
test
negb
js
jg
adc
cmp
add
inc
pop
int
or
pop
sbb
and
jle
mov
leave
jo
mov
icebp
dec
adcl
dec
inc
mov
stos
mov
cltd
sti
xchg
mov
sarl
pop
lea
fstl
adc
dec
jne
mov
ja
cmc
push
mov
sbb
cmpsl
push
cmp
mov
icebp
mov
add
rcrb
fiaddl
fstp
cwtl
add
push
sub
fld
mov
mov
incl
in
mov
add
divb
adc
xchg
mov
out
lcall
pop
sub
mov
mov
mov
fimull
push
mov
inc
jo
push
sbb
lcall
mov
push
sub
mov
jmp
iret
xchg
enter
adc
test
ret
add
outsl
dec
lods
fnstenv
and
push
cmpsb
cwtl
sbb
adc
inc
xor
pop
mov
xor
scas
or
cmp
lahf
pop
inc
std
arpl
imul
or
or
cmp
cld
push
fsubs
cmp
mov
cmp
js
js
mov
jle
div
dec
in
mov
push
sbb
adc
push
loopne
add
xchg
dec
jbe
in
stos
js
push
xor
loope
test
sbb
pop
dec
cmp
es
cmc
dec
dec
stc
push
bound
lret
adc
xor
cmpsl
cmp
mov
dec
jno
push
adc
loopne
push
jecxz
mov
test
fnstcw
push
aas
push
mov
sbb
cmp
dec
bound
jecxz
ret
out
ja
sbb
addr16
sbb
clc
pop
xchg
nop
mov
xor
mov
pop
jbe
xor
pusha
into
sub
mov
jbe
jg
les
aaa
jnp
aas
les
cmpsl
xchg
das
pop
or
int3
pop
fs
rorl
mov
lret
daa
inc
mov
loopne
aas
or
push
scas
sbb
cmpsl
sbb
hlt
xchg
das
jg
imul
and
jns
or
testb
cmp
adc
insl
iret
test
inc
cmp
xor
jg
dec
or
sbb
in
in
leave
testl
mov
lock
sub
mov
jecxz
outsl
add
pop
pushf
pop
lcall
cli
mov
aas
lods
out
lahf
sub
sub
jecxz
add
fwait
cmp
aad
lods
lret
ja
insb
int
adc
aaa
data16
std
mov
xchg
sub
fsubs
sbb
xor
add
inc
and
xor
pop
and
inc
sbb
bsf
cmc
xor
in
adc
push
fisttps
cmpsb
jae
cmpsb
dec
loope
mov
push
lea
sbb
dec
ss
push
cs
xor
or
sbb
in
data16
rorb
pop
inc
mov
jne
push
lret
inc
jo
mov
ja
fcoml
imul
lds
mov
cmc
and
imul
test
pop
iret
lret
dec
int3
bound
adc
clc
sti
pop
sti
cmc
sbb
jne
cmpsb
lret
hlt
fnstenv
sbb
ss
outsl
mov
jae
les
lret
insl
mov
imul
jnp
mov
and
clc
icebp
mov
ficompl
fists
push
data16
cmp
shrd
lcall
xor
out
dec
push
add
mov
aaa
lea
xor
pop
lcall
int
iret
push
clc
pop
sub
xchg
fsubrl
cld
mov
test
xor
decb
cmp
pop
mov
mov
mov
xchg
or
xchg
stc
enter
jl
and
ffree
popf
lods
iret
add
push
xchg
test
xor
and
xchg
stc
cmp
push
roll
rcll
dec
mov
movl
popf
jne
sbb
fnsave
push
popa
xor
dec
jbe
add
xlat
jmp
xor
jns
lret
mov
xlat
aam
mov
icebp
les
neg
je
loope
xchg
inc
xor
and
in
popl
mov
lahf
idivl
mov
mov
mov
pop
int
pop
lret
cld
xor
adc
addr16
dec
xchg
jg
loop
cmp
fisttpl
fcomps
add
xor
adcl
repz
sub
cmovne
sub
sbb
pop
pop
int3
sub
rol
jb
jecxz
std
push
outsl
cmp
sub
pmuludq
push
pop
pop
lret
fdivs
or
inc
mov
lea
dec
sti
xchg
icebp
adc
pop
mov
push
sbb
test
jo
lcall
pop
inc
mov
and
movl
movb
inc
sub
int
aaa
jo
subl
sub
adc
jp
jp
es
es
out
or
daa
mov
mov
xor
inc
nop
jmp
inc
and
xor
mov
inc
push
add
xor
xchg
mov
lock
test
adc
and
nop
ret
dec
jp
and
xchg
xor
scas
test
jbe
xchg
push
scas
je
dec
xchg
cli
inc
push
mov
push
orb
imulb
stos
lcall
sbb
cmp
fnstcw
scas
clc
lahf
sbb
fwait
les
inc
mov
cmpsl
int
mov
xor
insb
lret
xor
mov
adc
mov
mov
mov
jmp
test
lods
fldenv
mov
pop
adc
lcall
mov
mov
mov
loope
adc
rcrl
inc
scas
jmp
jle
sti
pop
or
out
loopne
lds
jecxz
test
push
dec
mov
fidivs
pop
xor
in
int
andl
mov
dec
outsb
inc
je
push
cmpb
mov
mov
rcll
fadds
xor
pop
xchg
sahf
or
call
rorb
stc
leave
popa
jae
imul
sbb
pop
out
mov
pushf
mov
xor
dec
or
pop
in
sbb
cmp
xchg
xchg
xchg
test
or
pop
push
fildl
orb
rolb
and
pop
dec
push
cmp
es
push
lea
sub
cs
mov
mov
and
jmp
mov
lds
fprem1
mov
sahf
sub
add
cmp
push
sub
aaa
mov
nop
bound
mov
mov
pop
add
mov
scas
adc
cs
rcrb
xchg
int
imulb
stos
sti
fsubrl
lahf
insb
divb
popf
sbb
daa
jo
je
out
leave
jg
and
stos
jbe
std
bound
cmp
lds
fs
inc
inc
push
mov
pop
imul
ljmp
rorl
push
xor
lahf
and
sbb
mov
rep
jae
or
or
jae
in
xor
scas
lcall
pop
cltd
jns
jg
pop
leave
and
jne
jmp
fimuls
das
in
cmp
jle
mov
add
sub
sbb
cmp
dec
dec
filds
nop
mov
jo
stos
dec
or
aam
sub
dec
sub
sbb
sbb
cmpsl
sub
dec
dec
cwtl
mov
fmull
ljmp
adc
sub
push
lds
shll
jb
into
push
test
gs
subb
push
sub
push
xchg
and
fs
test
mov
ss
or
and
push
pop
es
dec
ss
adc
adc
xchg
dec
xorb
es
psubsw
push
call
add
mov
push
mull
scas
icebp
or
cli
rcrl
leave
xor
mov
inc
out
adc
stos
cmp
lret
shll
mov
adc
movsb
in
icebp
pusha
jmp
lahf
jb
sub
dec
or
cmp
mov
pop
and
mov
adc
or
dec
pop
mov
and
in
and
out
add
arpl
fbld
pop
lods
dec
int
pop
mov
adc
leave
lods
outsl
imul
mov
stos
jae
stos
lea
bnd
in
pop
cmp
loop
push
xor
xlat
sub
call
mov
ss
xchg
shrl
incl
flds
xchg
pop
add
stc
aam
fmuls
dec
pop
and
cli
in
jp
pusha
mov
or
adc
or
push
dec
testl
adc
jb
mov
loope
arpl
pop
sub
jg
and
xchg
mov
mov
mov
sub
sbb
je
arpl
aaa
das
inc
sub
loopne
aam
out
in
sbb
pushf
imul
lea
mov
inc
jne
fmull
das
xchg
mov
movb
fdivrs
inc
pop
cs
test
cmc
movsl
push
mov
mov
push
cmp
mov
adc
lret
ret
cmp
fstpl
mov
push
and
lods
cmp
and
mov
cmp
cmp
std
inc
loope
popa
add
sub
in
inc
imulb
sub
stos
xor
inc
int3
aaa
pushf
call
cmpsl
inc
pusha
inc
inc
and
bound
test
sbb
arpl
out
add
scas
jle
pop
inc
das
js
pop
leave
mov
xchg
xchg
mov
pop
adc
in
xor
imul
sub
mov
je
mov
aam
sarl
in
cmp
add
stos
stc
ljmp
jg
mulb
int3
pop
aad
mov
dec
call
ror
sbb
push
or
sbb
push
sbb
scas
lea
mov
sbb
not
into
lret
cmpsl
push
je
fmuls
aad
adc
shl
jge
testl
mov
stos
test
jle
or
or
lahf
fldcw
pop
inc
fbld
inc
pop
movsb
cli
jmp
lahf
ja
adc
adc
lcall
push
push
mov
nop
jl
xchg
dec
jle
out
ret
lds
aam
mov
xchg
push
int
sbb
cmp
push
xor
mov
xchg
xor
inc
jae
lds
add
rorb
push
mov
jbe
std
mov
mov
movl
fldt
les
cmp
cmp
push
inc
test
jmp
rclb
call
xchg
jl
jb
sub
lea
in
jbe
les
and
out
or
mov
test
xor
inc
dec
push
xlat
mov
dec
sbb
or
xchg
movl
aaa
imul
jae
push
xor
inc
lcall
iret
sahf
test
mov
push
imul
std
fmulp
xor
fwait
mov
test
jl
inc
mov
adc
movsb
xchg
add
ss
addr16
push
mov
cmp
loope
inc
fwait
adc
jmp
push
popa
push
icebp
pop
stos
movsb
gs
fildl
enter
cld
aam
insl
jae
push
shll
in
mul
cmp
fldz
adc
stos
imul
mov
nop
mov
jg
or
dec
repz
cmpb
xor
and
movsl
sbb
test
pop
pushf
dec
stos
sbb
int3
sahf
cwtl
add
xchg
rorl
mov
out
insl
in
outsl
out
pop
loopne
sbb
fxch
mov
jle
scas
inc
das
sbb
test
xor
jecxz
dec
mov
movsb
dec
push
mov
fxch
arpl
xchg
movsl
int3
icebp
cmp
test
sub
inc
ljmp
cmpsb
lods
mov
sub
or
fxch
out
fldcw
ljmp
mov
sub
out
jg
push
lret
je
fcomps
test
out
sbb
sbb
aaa
sbb
neg
and
or
and
push
adc
xorb
sub
inc
imul
push
mov
popa
add
push
push
jecxz
and
in
dec
mov
int
mov
inc
xor
ret
pushf
lret
mov
mov
cmp
cmpsb
int
mov
sub
xor
add
dec
add
jno
xchg
xlat
mov
hlt
xchg
out
xlat
stos
cmp
push
pop
enter
lcall
sbb
inc
in
outsl
bnd
notb
sub
jnp
or
xor
cs
stc
add
in
sub
jl
icebp
add
lds
adc
aam
xlat
mov
gs
test
in
out
into
mov
xlat
xor
mov
loop
loopne
iret
mov
das
test
fildll
xor
jb
push
inc
inc
aaa
popf
dec
call
xchg
xchg
clc
inc
jmp
cmc
xchg
test
or
lret
rclb
jo
lahf
ficoms
sub
pop
and
xor
in
out
pop
xor
or
cmp
mov
call
rcrb
fucomip
adcb
stos
lods
adc
jl
dec
into
adc
xor
inc
sub
xchg
mov
enter
xchg
in
icebp
movsl
popf
testb
add
sbb
pop
popa
add
ret
xchg
jnp
xor
push
and
int3
pop
std
stos
lret
mov
pusha
jno
mov
jg
dec
xor
scas
adc
pop
jbe
pop
jge
xor
and
fs
dec
mov
pop
or
mov
xchg
jecxz
stos
mov
mov
xor
xchg
es
cmp
push
ret
xchg
mov
addr16
cmp
jne
or
js
push
nop
in
shll
jmp
mov
add
cld
mov
shl
jnp
xor
dec
mov
leave
insl
inc
stos
xchg
add
mov
add
je
icebp
fs
mov
pop
xchg
fiadds
or
adc
jo
xchg
shl
cmp
xchg
rolb
xor
lods
rorb
and
xchg
es
push
inc
imul
jl
rorb
repnz
out
outsb
xchg
mov
ja
rcl
daa
cmpsl
inc
dec
mov
xchg
mov
mov
mov
test
fwait
dec
and
fstl
cmp
cmp
xchg
int
push
loop
dec
sbb
fwait
int
and
out
sbb
jmp
sti
fwait
jle
out
sub
leave
out
fcmovnb
push
stos
sbb
stos
jb
sbb
out
addr16
popl
es
int
in
jl
cmp
pop
outsl
mov
sub
sub
mov
fnstenv
inc
repz
sbb
xor
cmp
mov
out
inc
sbb
mov
jmp
into
inc
jne
mov
lcall
loope
lahf
push
imul
cli
call
xchg
repnz
clc
lods
sbb
xlat
arpl
les
mov
rcrl
push
scas
adc
gs
xchg
push
push
jecxz
cmp
lahf
popf
mov
add
mov
push
mov
mov
test
daa
mov
sarl
fbld
shrl
mov
cmp
or
mov
call
cwtl
mov
push
pop
insl
mov
hlt
ret
fcmovu
push
lret
dec
into
pop
stos
dec
cmp
pop
inc
imul
pop
pop
shll
jecxz
insl
in
mov
pushf
sbb
mov
imul
rcll
aas
jmp
out
push
push
daa
xchg
lds
inc
push
gs
fs
mov
sbb
fldenv
loop
pop
stc
lods
in
cwtl
dec
xchg
xchg
cmp
test
test
push
push
xchg
cs
scas
or
sub
push
adc
push
fwait
les
outsb
cmp
xor
mov
mov
incb
sub
mov
pminsw
xchg
adc
inc
shrb
int3
loope
mov
negb
pusha
push
movb
adc
sbb
jmp
sub
leave
adcb
mov
xchg
repnz
jle
sub
lahf
in
mov
add
subl
dec
mov
dec
cmp
aaa
sub
add
popf
sahf
hlt
and
jo
sbb
cmp
imul
push
inc
cmp
cmp
dec
jne
frstor
loopne
push
xchg
arpl
adc
sbb
faddl
cmp
xor
or
inc
sub
pop
aam
jl
xchg
dec
std
jne
pop
filds
jmp
idivl
mov
or
cmp
push
xchg
out
push
nop
idivb
in
cmpsl
pop
adc
mov
outsb
shr
add
rcr
sbb
out
loope
mov
sub
sub
mov
add
test
push
lea
add
rcr
sbb
sub
xchg
xor
stos
mov
pop
ror
xorb
xlat
sub
xchg
jbe
lret
sub
sub
pop
or
mov
sahf
xor
loope
mov
sti
jne
out
scas
mov
jb
push
shrl
hlt
cltd
jae
sbbl
dec
outsl
fucomp
outsl
jp
cwtl
into
outsb
into
imul
mov
pusha
mov
test
mov
lret
adc
pusha
sti
pop
cmp
rorb
gs
in
jle
jle
sarb
pop
adc
add
cltd
mov
pusha
sub
stos
xchg
push
jne
sti
nop
jo
adc
mov
je
mov
push
push
pop
sub
mov
cmp
cld
xor
rcll
mull
xchg
out
cmpsb
lcall
repz
jae
push
dec
and
fisubs
fdivrl
mov
roll
push
jno
mov
push
cs
inc
jge
mov
cmp
xor
mov
dec
or
hlt
sti
inc
nopl
cmp
movsl
aam
jmp
daa
cs
and
jge
fwait
pop
fstps
fistpl
pop
xlat
pop
repnz
arpl
jae
xchg
sub
insl
call
iret
subb
fdivs
rorb
mov
mov
fwait
cs
inc
or
call
and
and
jae
insb
stos
cs
insl
cmpsb
bound
mov
nop
insb
loope,pn
add
jne
xchg
sub
mov
pop
lds
xor
inc
push
mov
dec
add
mov
jae,pt
push
pop
out
dec
lret
dec
pop
cmp
jns
insl
cmp
daa
xchg
incl
jbe
scas
cmpsl
insb
movsl
dec
movsl
into
test
les
pop
cmpsl
pop
sbb
imul
ffreep
ja
ljmpw
popa
inc
push
fnstsw
xchg
dec
call
pusha
ss
aam
cmp
and
mov
mov
ret
cmp
jb
flds
cvttps2pi
jo
outsl
ror
sti
sbb
test
and
jnp
jae
jmp
push
cwtl
jg
inc
mov
loop
loopne
cvtps2pi
out
sbb
jge
dec
jae
loope
outsl
cmp
or
cmp
decb
pop
daa
into
xor
mov
or
jp
jno
mov
arpl
pop
and
xchg
mov
cmp
stc
sub
pop
cltd
cmp
in
and
adc
sbbl
pop
mov
jne
imul
mov
hlt
idivl
xchg
xchg
jo
xor
mov
jnp
aad
cmpsl
je
push
ret
push
xchg
jo
fwait
cmp
in
add
sbb
push
fstpt
scas
jp
pop
cmp
adc
inc
pop
jmp
pop
cmp
xor
mov
jmp
jno
jb
ljmp
cmp
mov
lea
jne
inc
ror
add
xor
jge
dec
push
pop
in
add
into
lods
dec
loopne
scas
rorl
enter
fucompp
iret
sub
lods
adc
lods
daa
dec
mov
or
ret
cmp
mov
out
push
repz
aam
icebp
pushf
push
popf
push
gs
fcmovb
ds
xchg
call
movsl
cmc
dec
in
cmp
sbb
loope
xor
in
or
and
lcall
mov
pop
xlat
ds
jecxz
jecxz
cs
sub
nop
pop
in
das
lahf
scas
mov
cld
insb
mulb
shll
xor
mov
jg
jle
inc
pop
push
nop
adc
mov
ljmp
addr16
aaa
out
inc
mov
in
xor
push
xlat
out
jbe
sub
push
mov
test
push
mov
mov
or
and
sub
rclb
jno
ss
out
cmp
mov
mov
enter
in
and
rcl
aam
cmp
rclb
sti
adc
fwait
out
sbb
fisubs
in
out
jl
aam
outsb
lahf
cmp
daa
imul
or
mov
inc
mov
push
jmp
dec
decl
movlps
mov
rcrb
xchg
pop
cs
push
and
xor
ret
mov
jb
mov
decl
insl
mov
mov
pop
dec
sub
pop
adcb
sbb
sbb
cmp
call
hlt
xchg
out
add
pop
out
in
sbb
lcall
cs
push
and
push
in
cmp
mov
nop
aaa
pop
test
jp
cltd
jg
jno
movsl
adc
cld
pop
fiadds
mov
pop
sbb
mov
ficoml
fbstp
xor
test
or
or
aas
insl
lret
mov
xor
call
sti
cwtl
adcb
fidivs
pushf
xchg
pop
shll
lods
or
xor
sahf
pushf
mov
movsl
aam
mov
test
fs
mov
stos
mov
jmp
stos
in
outsb
lods
xchg
xor
int3
loopne
and
hlt
dec
call
adc
sbb
pushf
add
leave
dec
push
aad
lret
in
lahf
mov
and
push
gs
add
arpl
and
ja
jnp
sbb
clc
in
ret
or
xlat
gs
jae
mov
pop
stc
ret
dec
jmp
sub
in
rcll
arpl
scas
jg
jns
inc
jne
or
std
cltd
xchg
lds
xchg
call
xchg
cmp
jbe
jnp
jnp
xorb
hlt
repnz
cmc
shrl
mov
cmp
xorb
inc
lret
sti
sahf
mov
jns
mov
mov
mov
lds
shrl
icebp
into
fldcw
xlat
les
push
in
xchg
xchg
pop
and
pushf
inc
popa
lahf
xchg
push
mov
addb
jmp
mov
jp
add
repz
ret
mov
push
lahf
aaa
jno
xchg
stos
jb
jae
sbb
lahf
cmpsl
in
xor
stc
and
and
fs
cwtl
sbb
aas
movsl
sub
icebp
mov
jmp
jle
jno
jb
pop
inc
xchg
test
lock
push
jmp
and
lock
mov
popf
inc
out
push
push
mov
fxch
movsl
jmp
and
lahf
push
adc
xorb
sbb
push
cli
mov
lret
push
daa
outsb
out
bound
xchg
xor
pop
jno
push
jecxz
insb
insb
cmpxchg
mov
mov
mov
out
inc
lods
movsl
dec
jge
outsb
daa
adc
sub
sbb
xchg
pop
loopne
imul
cmpb
mov
push
aad
lret
dec
pop
out
pushaw
fdivl
dec
aaa
rclb
stos
push
xchg
not
iret
and
stos
lods
sbb
mov
pop
xchg
push
das
mov
jne
cmpsb
ret
lods
push
and
fiadds
add
shr
xchg
cmp
add
mov
shll
js
sbb
push
je
mov
mov
push
stos
nop
jbe
xchg
mov
mov
bswap
repnz
shrb
pop
xchg
jge
mov
lret
mov
lock
popf
outsb
scas
adc
jo
add
mov
inc
out
add
xor
and
cmp
jl
out
add
sbb
clc
out
push
add
std
es
or
lret
pop
and
fldcw
fwait
popa
fs
sti
lds
cld
sbb
mov
loopne
int3
xchg
lds
jge
jne
mov
lods
pop
test
cmp
and
or
addr16
pop
add
outsb
jp
mov
insb
mov
adc
rolb
mov
in
xchg
mov
inc
pop
adc
pop
sub
ss
lds
arpl
outsb
out
or
pushf
xchg
mov
dec
ja
xchg
mov
cltd
push
sbb
ret
push
arpl
mov
jb
loope
nop
push
add
dec
sub
jmp
loopne
mov
mov
pop
xchg
cmp
mov
xchg
int3
stos
mov
sahf
nop
cmp
jo
or
movsl
addl
sub
lods
fsts
fwait
dec
popa
enter
loope
cs
cmp
fildl
jge
cmp
xlat
insl
xlat
cmc
dec
mov
stc
jge
push
xor
lcall
outsb
sbb
mov
pop
imul
ret
fmul
iret
pushf
xor
nop
xor
mov
fsubr
adcl
aas
and
inc
cltd
mov
pop
mov
sub
test
cltd
mov
cmc
sbb
aam
xorl
je
push
pop
es
or
mov
xchg
mov
xchg
dec
test
gs
fisubl
and
jae
sbb
push
popf
sbb
mov
inc
jmp
test
sub
rcrb
and
cmpsl
cmp
in
stos
mov
mov
fisttpl
pop
movsl
movzbl
jno
lret
mov
push
jns
fwait
pop
fwait
ss
dec
xor
inc
jb
lea
sahf
adc
ja
fucomp
mov
das
inc
mov
hlt
scas
push
inc
jge
in
mov
sub
stos
adc
stos
call
incb
hlt
popa
and
and
icebp
cmpsl
pop
sub
daa
jno
mov
aad
adc
adc
xchg
jae
pop
push
push
or
push
outsb
popf
xchg
push
aas
mov
test
push
pcmpeqb
xchg
inc
push
dec
xchg
daa
sahf
scas
jle
dec
fsubs
fsubs
cmp
rcrb
insb
push
jbe
out
inc
add
add
xchg
jmp
xor
adc
sbb
inc
cmc
sahf
jg
sub
mov
stos
mov
aas
or
xchg
daa
cld
adc
inc
and
push
pop
xor
daa
cmp
pop
cli
out
js
icebp
and
shrl
rcll
ja
sbb
ljmp
mov
xchg
clc
jg
and
scas
les
mov
push
pop
bnd
cmp
jmp
js
aaa
in
leave
stc
jg
sbb
cmp
or
inc
jo
rcll
or
sbb
add
fwait
sub
pop
lcall
loop
add
push
pop
out
inc
ficoms
cmpl
lret
dec
dec
daa
dec
data16
sbb
insl
and
leave
mov
jb
icebp
mov
pop
scas
xchg
mov
mov
jp
aad
cmc
aaa
jg
lea
ljmp
dec
xor
xor
add
adc
std
pop
leave
pop
push
outsb
cmpb
loopne
loopne
fwait
mov
or
jns
pushf
imul
outsb
data16
cmpsb
hlt
or
test
jl
std
inc
cmp
sbb
and
or
dec
js
sbb
push
stos
scas
daa
pusha
loopne
in
mov
mov
cmpsb
jmp
jmp
lahf
xlat
js
push
in
mov
scas
adc
pop
out
sarb
add
sub
push
add
in
mov
adc
xchg
push
dec
mov
aad
ljmp
lahf
movsb
jae
push
cs
inc
fs
iret
loopne
xchg
pop
jo
sub
insb
xlat
das
out
dec
jnp
into
push
cli
pop
sub
mov
mov
jnp
adc
lcall
in
ret
mov
and
inc
cmpsl
mov
scas
popf
dec
or
ret
xchg
xor
pop
leave
jns
mov
roll
and
dec
insb
lock
sub
and
das
pop
stc
and
cmp
sbb
jmp
ljmp
andl
lret
mov
incb
jp
cmpsb
jl
sbb
and
xor
adc
dec
or
insl
pop
ficoms
push
ss
andb
pushf
jnp
or
inc
xchg
cli
add
fwait
out
aad
shll
sbb
outsl
mov
cli
sbb
fnstenv
adcb
mov
push
adc
insb
lret
sub
and
stos
mov
or
add
push
xchg
sbb
pop
xchg
mov
cmc
mov
mov
cwtl
stc
pop
adc
mov
mov
cmp
xchg
and
sub
inc
mov
inc
cmp
mov
cmp
rorl
enter
mov
dec
je
out
test
mulb
fnstenv
or
adc
push
ja
jmp
clc
lods
movsl
mov
das
scas
scas
mov
addl
jle
rcrb
or
jmp
stos
imul
stos
xor
test
ret
xor
mov
rcl
rcrl
rcrl
push
mov
mov
ror
sub
notl
aas
add
adc
cltd
add
xor
xor
cmpsl
insb
jb
pop
fldcw
push
pop
pusha
sub
pop
fsubrl
cs
jns
lret
mov
dec
popf
pop
adc
daa
mov
add
sbb
nop
jge
xchg
adc
pop
dec
andb
andb
enter
jecxz
repnz
dec
jo
pop
jbe
cwtl
outsl
jns
dec
cmp
fnstsw
sub
sub
cltd
cltd
inc
repz
cli
or
push
lcall
in
lret
sbb
jno
and
xchg
js
hlt
dec
movsl
scas
adc
ret
and
mov
out
jae
test
jne
das
lods
push
outsb
aaa
dec
jno
dec
push
in
sub
pop
mov
mov
cli
iret
cld
pop
mov
pop
pop
jne
jge
dec
sub
dec
add
jge
std
sbb
inc
push
in
xchg
sbb
mov
or
movsl
inc
sbb
les
push
movsb
jp
shrb
sbb
fmul
loopne
sbb
ss
add
lods
xchg
adc
inc
loope
in
pop
mov
add
jnp
rcrl
test
xchg
out
push
out
sbbb
mov
add
mov
dec
test
adc
sub
repz
in
and
cs
in
pusha
dec
dec
xchg
into
arpl
pop
jmp
cli
in
jle
daa
push
ret
push
adc
xor
loopne
cmp
mov
sub
pushf
sbb
negl
fnstenv
test
push
cld
lcall
mov
out
xchg
popf
fisubrl
mov
aad
jo
shlb
sub
std
out
jns
cmp
in
inc
ja
hlt
into
jb
xor
pop
sbb
ja
icebp
xchg
and
mov
jne
sbb
jnp
sub
cmpsl
mov
icebp
xor
mov
pushf
in
sbb
sahf
jecxz
sub
enter
in
fnstcw
xor
jl
lds
insb
xchg
jns
lahf
repnz
inc
xor
dec
loope
loope
rorb
jae
xor
bound
adc
in
xchg
pushf
or
insb
or
sub
jg
adc
jle
insb
fcomps
and
xor
sbb
fisubl
mov
insb
push
xor
dec
mov
daa
int3
cmpsl
mov
and
xchg
scas
lods
test
adc
adc
leave
cmp
lcall
pop
xor
std
ret
jmp
jne
nop
fldcw
addr16
push
fisubrl
aam
mov
push
shr
cmpsl
xchg
jl
xchg
fwait
negl
mov
stos
shl
jmp
inc
or
xorb
add
inc
test
daa
inc
push
mov
jns
test
push
data16
pop
rorl
xchg
lds
xchg
dec
std
pop
cli
fcom
add
lods
xor
ret
mov
lret
sub
dec
fdivrs
cwtl
xchg
test
scas
and
aad
add
xor
clc
lods
xor
jae
iret
push
idiv
aaa
add
mov
or
or
mov
dec
orl
or
or
cld
xor
xchg
or
cltd
jmp
test
sub
cltd
or
pop
pop
mov
pop
ficoml
or
xor
mul
jge
into
orl
dec
insb
ss
sti
add
lock
pop
jp
pop
out
and
sub
sub
lret
sbb
out
xchg
mov
xchg
xchg
rdmsr
scas
push
je
into
movsl
pop
mov
sub
outsb
jmp
sbb
mov
call
bound
sub
fwait
mov
mov
push
xlat
mov
shrl
sbb
icebp
xor
pop
sub
addr16
leave
pop
xchg
cmp
push
dec
add
pop
mov
in
xor
jmp
mov
lret
and
add
xchg
sub
fsubrl
xor
pop
cmc
mov
lret
fidivrs
mov
fnstsw
clc
lcall
dec
dec
and
movsb
movsb
sub
bound
in
jae
xlat
ljmp
push
inc
push
xchg
in
or
jge
leave
imul
and
xchg
mov
sti
test
cmpsb
imul
adc
inc
aas
popf
gs
cmp
jp
dec
and
loopne
hlt
arpl
mov
imul
ss
jnp
pop
loopne
xchg
sahf
je
test
in
daa
cmpsb
cmc
mov
mov
pop
pop
incb
xchg
adc
sbb
inc
xor
stos
repnz
xor
sarl
mov
mov
jmp
fst
stos
sub
xor
adc
arpl
sub
mov
pop
scas
jne
iret
cld
cld
inc
push
sbb
nop
cmpb
popf
mov
pop
mov
mov
and
and
rep
adc
out
dec
pop
xchg
xor
mov
adc
pop
sbb
push
ds
lcall
xchg
lock
and
pop
sbb
jno
cld
cwtl
sbb
nop
and
sub
xchg
sti
mov
jb
or
sti
jmp
pop
stos
imul
mov
jecxz
sti
andb
je
add
sbb
adc
jno
xchg
mov
lcall
iret
mov
dec
add
dec
sbb
mov
xchg
cltd
in
jg
xor
pusha
mov
outsl
cmp
mov
jmp
dec
daa
pusha
pop
fwait
mov
jge
into
mov
inc
push
je
jmp
leave
dec
and
pushf
sbbb
pop
leave
sbb
push
jl
aad
lods
call
mov
stos
insb
jmp
xlat
out
pavgb
mov
aam
outsl
inc
add
in
shlb
pusha
enter
mov
movsl
cld
addb
insl
leave
mov
sbb
mov
dec
add
pop
test
test
jecxz
and
test
mov
or
dec
int
lahf
arpl
stos
mov
sub
ret
inc
sub
jb
mov
movsl
mov
enter
ds
push
or
mov
adc
dec
cmc
scas
or
roll
inc
sub
fwait
add
js
mov
aaa
mov
jp
dec
rorl
inc
jo
fcom
pusha
sbb
cmp
outsb
lahf
cmp
adc
ljmp
sub
mov
movsb
push
enter
sbb
inc
stos
enter
xor
pushf
adc
les
movsb
daa
adc
mov
jnp
mov
arpl
and
lret
scas
fldl2t
inc
push
mov
jmp
outsb
notb
sbb
test
mov
jnp
mov
mov
loope
adc
stos
mov
sbb
sbb
adc
push
aaa
add
and
pop
pop
adcl
je
xor
push
mov
mov
fs
push
mov
mov
lret
imul
lahf
test
xor
cmpb
iret
push
sbb
and
cmp
push
les
mov
into
insl
test
push
shl
lcall
inc
das
jnp
lahf
lret
mov
jne
lds
cmpb
adc
cld
shll
inc
sub
mov
mov
negb
fwait
pop
mov
pop
jo
inc
out
inc
pop
aam
jb
lods
add
xchg
mov
add
inc
dec
add
icebp
cld
sbb
iret
lahf
cwtl
les
push
push
inc
inc
add
mov
not
push
xchg
movsb
pop
scas
cmpsl
or
mov
fistps
mov
dec
bound
aas
dec
jmp
rdpmc
jp
or
push
call
insl
ss
jbe
push
mov
data16
xchg
loopne
in
ja
xchg
dec
add
fwait
in
mov
jbe
jl
mov
je
ss
insl
sbbb
in
popa
imul
push
loopne
fildl
push
repnz
jmp
mov
mov
pop
decb
sbb
push
aas
inc
adc
adc
jge
in
ds
adc
pop
addr16
mov
add
adc
call
add
push
pop
stos
aaa
xchg
scas
idivb
scas
test
movsl
mov
call
dec
aad
mov
mov
nop
xor
call
in
enter
insl
stc
icebp
mov
and
ret
stos
sarb
ds
xchg
movsb
pop
xor
and
add
mov
lock
jle
cmpsb
push
xchg
lret
inc
roll
sub
into
dec
fs
ret
dec
jmp
adc
push
sahf
repnz
insb
mov
mov
inc
idivb
into
stos
repnz
cld
pop
pushf
pop
addr16
loop
inc
not
and
jno
hlt
mov
test
dec
jecxz
jle
and
jae
imul
icebp
xchg
sbb
xchg
push
daa
lcall
aad
mov
outsl
sub
push
add
inc
add
mov
je
sub
cmp
xchg
xchg
cmpsb
lahf
mov
inc
cmp
sbb
jl
xchg
xchg
aad
dec
lcall
mov
and
push
repz
or
jno
ret
pop
dec
pop
sub
lea
push
cmp
or
add
out
in
mov
jae
test
data16
loopne
and
cltd
imul
push
addr16
adc
sbb
das
ret
jo
jbe
mov
push
sub
add
lock
jl
jl
daa
or
test
das
out
fsubp
sbb
jnp
xor
cmpsb
bnd
lea
ret
sti
in
inc
rdtsc
outsb
int
imul
push
push
jmp
std
in
outsl
adc
je
shll
xor
add
dec
mov
inc
xchg
mov
dec
ljmp
inc
nop
cld
pop
xchg
pop
lods
xchg
out
sbb
int
gs
mov
rcrb
clc
cmp
mov
cmpsl
or
xchg
cmpsl
stc
mov
cmp
fdivr
pushf
jle
subl
fldcw
sub
jns
aam
mov
clc
stc
je
xor
in
sub
inc
loopw
sahf
inc
fsts
and
sbb
sbb
mov
sbb
ret
pop
add
nop
push
sub
es
mov
sbb
pop
stos
aam
fst
dec
aaa
dec
inc
jge
jmp
aad
cmp
add
sti
enter
shl
jae
xchg
mov
je
rorl
les
adc
fnstenv
push
jp
add
andl
in
mov
notl
inc
jl
popf
out
lods
loopne
push
lods
int
adc
arpl
push
std
fsubrl
imul
ret
scas
cmp
out
repz
inc
inc
mov
repnz
loop
mov
loope
jne
or
cmpsb
or
loopne
pop
mov
mov
jmp
xor
cmc
pop
cmp
sti
jae
pushf
cmpb
je
js
outsl
inc
push
stos
xor
cs
jae
ret
jnp
out
neg
repnz
pop
ljmp
popa
sbbb
fstpt
dec
adc
lock
mov
sub
cmc
or
add
in
cmp
push
mov
adc
add
stos
iret
decl
xchg
mov
mov
inc
rolb
jle
mov
loope
in
pop
outsl
sti
ljmp
stos
hlt
push
jb
cmp
shlb
shl
pushf
xchg
adc
adc
lcall
push
in
push
mov
divl
aad
cmp
mov
fwait
call
ret
dec
int
or
pop
or
and
js
or
aaa
arpl
inc
into
pop
in
add
xor
or
fmull
sub
popf
mov
sarb
repz
rcl
insl
adc
xlat
stos
aaa
dec
mov
out
es
ret
mov
loop
cmp
pop
pop
shrb
cwtl
or
lods
dec
xor
aaa
aaa
in
cwtl
cltd
jmp
bound
pop
mov
mov
and
pop
xchg
dec
xchg
ret
es
mov
les
out
pop
test
movsl
mov
jmp
aas
and
sbb
dec
jns
les
jb
out
add
sahf
mov
mov
scas
rol
arpl
push
pusha
std
fldcw
pop
test
or
outsl
mov
dec
jg
and
jge
sarb
cmp
lods
movsl
mov
mov
mov
sub
dec
push
xchg
popf
test
cmpsb
cli
add
dec
jb
cs
lock
fwait
jmp
fucom
loopne
sbb
add
nop
xchg
bound
xchg
xor
lock
int
jne
push
incl
push
dec
clc
jo
pop
inc
sub
fcom
and
xor
jo
fwait
xchg
sub
cli
push
sub
xor
mov
adc
and
xor
fbld
add
shrb
xchg
dec
fsub
and
nop
repnz
ds
push
jb
mov
sbb
sub
jge
xor
xchg
out
push
or
and
and
inc
imul
mov
inc
cmp
orb
leave
daa
test
mov
ljmp
inc
fwait
mov
push
data16
out
adc
sub
sahf
sti
add
adc
nop
add
xor
test
scas
loopne
vandnps
pop
cmpsl
or
scas
xor
in
test
push
mov
out
jg
jno
pop
popa
addr16
hlt
enter
inc
push
add
lds
pop
jecxz
sahf
jb
adc
adc
cmpl
dec
divb
lea
jo
nop
mov
lods
pop
pop
mov
int3
adc
adc
out
hlt
or
add
repz
icebp
dec
and
ljmp
xchg
test
inc
ja
cmp
stos
push
ret
push
lcall
lods
mov
cmp
sub
xchg
insb
into
push
test
jp
lahf
and
xchg
cmp
clc
test
or
jl
and
hlt
pop
fidivl
pop
mulb
pusha
pop
sub
flds
cltd
test
in
shl
leave
jmp
lcall
stos
cmp
cs
cmp
mov
clc
inc
cmp
cs
xchg
push
orb
es
mov
lcall
aas
sarb
dec
or
jns
aam
pop
dec
sarb
loop
pop
xor
xchg
aas
xchg
setae
fidivrl
ficompl
lahf
dec
xchg
and
stc
xor
xchg
ss
pushf
cltd
sub
dec
jge
dec
fldl
or
xchg
xor
mov
fwait
inc
packssdw
cmpsl
inc
out
lret
aam
add
dec
lret
cli
out
or
gs
aad
mov
cli
sbb
and
xchg
cmp
out
add
cmp
cld
insl
xchg
push
sub
pop
sub
inc
and
xchg
popa
cwtl
out
dec
jmp
mov
mov
mov
add
mov
je
lret
cmp
pop
jne
jl
xchg
xor
scas
adc
pusha
popa
fisubrl
into
or
xor
fninit
or
dec
pop
mov
fcmovnu
dec
pushf
mov
cmp
mov
loope
ret
stos
mov
mov
fprem
push
imul
push
jae
mov
sbb
ss
cmp
mov
int
rcrb
sub
mov
add
jmp
cld
push
sahf
loop
in
pop
dec
stos
cwtl
in
mov
pop
xor
jae
or
push
and
push
xchg
sub
insl
icebp
jbe
mov
ret
out
out
leave
into
stc
mov
std
andb
jmp
dec
dec
mov
or
inc
sbb
jno
or
xor
std
sub
cli
in
sub
push
hlt
sbb
cmp
inc
cmp
mov
leave
mov
mov
scas
xorl
sub
jg
stos
out
js
mov
pop
ds
ljmp
call
dec
outsb
push
add
stos
insl
or
and
pop
les
les
push
insl
or
les
or
outsb
mov
cmpsb
mov
in
mov
pop
dec
or
mov
jne
pusha
sti
pop
pop
jmp
mov
xchg
lods
inc
jne
mov
repz
fsubl
mov
lods
inc
xchg
adc
mov
or
push
mov
call
jb
adc
popa
add
and
sub
mov
addl
gs
adc
rcrl
and
ret
sarl
xlat
je
fnstenv
ss
add
and
mov
dec
xor
outsb
push
pop
in
ja
hlt
jo
mov
mov
movsb
stc
ret
and
or
xchg
jb
js
jbe
in
xor
sbb
cwtl
jo
orl
das
or
fldt
push
xchg
pop
shlb
sbb
lods
pushf
pop
jo
in
xchg
add
push
mov
test
insl
leave
xchg
push
xor
stos
or
dec
insl
lods
stos
add
movl
pop
jl
cs
cs
addl
xchg
ja
push
loop
scas
adcl
icebp
xor
add
mov
int
icebp
jp
ljmp
aad
mov
push
or
outsl
adc
stos
cmp
outsl
or
inc
fcmovbe
test
inc
adc
sbb
mov
xchg
dec
out
adc
rcll
fsubrs
ss
dec
push
mov
icebp
or
ljmpw
jno
icebp
out
jb
or
cmp
jns
out
ljmp
sbb
sub
lea
fstps
sahf
aaa
or
lods
scas
test
fdivrs
roll
lods
shrl
mov
sub
out
inc
and
testb
test
int3
xlat
daa
add
or
and
and
sbb
movsl
and
jmp
cld
xor
cs
lods
pop
fsubrs
sbb
adcl
mov
adc
test
dec
lahf
jmp
jns
aam
call
loope
cwtl
ja
loop
popa
add
cwtl
add
inc
xchg
sub
shl
jl
lahf
inc
pop
pop
inc
insb
sbb
outsb
pop
bound
outsb
adc
pop
adc
js
mov
push
aaa
je
in
stos
mov
lods
lahf
popl
out
dec
pusha
int3
daa
or
loop
jp
in
in
push
or
dec
mov
cmp
push
in
ljmp
sbb
icebp
pop
icebp
popf
sbb
mov
lods
mov
fbstp
ss
cmp
jecxz,pn
inc
pop
addb
xor
push
mov
xchg
dec
xchg
or
fimull
inc
clc
out
outsb
pop
jmp
leave
sbb
or
xor
movsl
jecxz
xor
hlt
cmpsl
lock
xchg
sarl
je
scas
xchg
shrb
sub
decb
push
xor
jmp
cwtl
je
pop
sub
call
sbb
push
or
fcomps
or
test
ja
cmpsb
les
xlat
add
popf
push
in
icebp
notl
stos
imull
push
sub
jo
in
adc
nop
push
stc
push
mov
cmpsl
pop
aaa
shll
pushf
sbb
xchg
jl
aas
sahf
imul
shrb
xlat
push
mov
dec
mov
out
add
into
jno
jo
jno
mov
dec
xchg
sahf
movsl
cmp
aam
fnstenv
jae
add
push
mov
nop
and
into
mull
add
pushf
dec
jb
lock
out
outsl
cmpsb
orl
mov
movsl
mov
imul
inc
mov
sbb
and
mov
in
push
or
scas
pop
int3
push
cmp
sub
add
out
adc
insl
add
lahf
imul
mov
or
adc
adc
loope
sbb
mov
fwait
lods
bound
movsl
cli
jl
jb
jl
sub
jns
pusha
xchg
mov
or
push
jo
add
xchg
or
jge
and
xlat
inc
add
lods
icebp
pop
mov
popa
add
mov
mov
int
stos
fwait
inc
cmpsb
mov
testl
popf
push
inc
inc
or
pusha
mov
push
jnp
inc
mov
and
mov
xchg
add
pop
sub
mov
shrb
mov
mov
sbb
ds
sub
je
jbe
add
scas
fistpl
add
dec
cs
jne
xchg
dec
int3
pop
cld
jecxz,pt
dec
enter
in
adc
sub
pop
xchg
xor
lock
dec
clc
xchg
jne
fstl
dec
mov
outsl
cmp
jne
out
sub
push
xchg
dec
lret
loope
xor
vcvtss2sd
imulb
pop
sbb
cmp
jo
sbb
cmpsb
push
push
pslld
pop
mov
pop
imul
sub
lea
dec
roll
lret
xchg
push
pop
adc
jecxz
or
and
ss
jmp
popf
cmp
imul
add
xchg
sar
lret
shrl
jmp
and
mov
into
sarl
int
pop
data16
pop
fdiv
subl
cwtl
mov
imul
mov
stos
mov
add
out
and
add
jo
jno
push
les
pop
les
push
out
mov
mov
and
pop
pop
inc
test
ja
ret
inc
and
xchg
or
je
or
fcoms
sti
push
inc
addr16
cmpsl
inc
pusha
pop
xchg
leave
jg
testl
xchg
mov
shr
mov
jmp
clc
jno
xlat
jp
imul
into
pop
or
call
cmc
imul
pushf
insb
mull
xchg
hlt
add
jb
push
cld
xor
pop
sub
fistl
mov
dec
xchg
mov
stc
arpl
push
push
mov
xchg
mov
clc
ds
push
jmp
xor
pop
xor
mov
xchg
scas
inc
mov
sub
popa
fmuls
xor
out
sub
or
pop
jb
pop
push
dec
gs
mov
jecxz
inc
ret
pop
lods
enter
cmc
push
fmull
pop
xor
dec
and
mov
mov
and
nop
sub
fs
leave
pop
add
mov
loope
jmp
mov
ds
addr16
mov
and
cmpsl
popf
negl
xchg
fcmovu
mov
aam
sbb
out
loop
xchg
mov
fdivr
fnsave
sbbb
insl
out
cmpsl
aaa
adc
mov
and
cmpsb
insl
sbb
jne
not
mov
mov
or
test
jmp
inc
sub
fsts
adc
test
fadd
lds
or
fwait
or
cmp
mov
fidivs
scas
insl
mov
mov
sbb
cmp
push
xlat
cld
cmp
mov
shl
jbe
lret
mov
sti
pop
filds
push
fcmove
repz
mov
push
inc
pushf
insl
jge
jb
mov
int3
xchg
lret
sub
stos
adc
jo
shr
call
je
mov
mov
inc
sub
imul
lcall
enter
or
inc
scas
pop
incb
push
xchg
mov
xor
popa
iret
cltd
out
test
mov
int
adc
std
subl
ja
mov
repz
mov
jns
aas
into
add
in
xchg
push
push
movl
in
pop
mov
adcl
jge
cwtl
movsl
mov
inc
xor
inc
dec
in
divb
or
lcall
jmp
movsl
xchg
sahf
xor
inc
imul
mov
add
lock
call
fadd
std
fs
repz
leave
les
pop
push
inc
pop
cmp
mov
hlt
push
cltd
adc
sarb
mov
and
xlat
dec
movsb
hlt
test
jg
out
lea
cmp
daa
jo
jp
push
inc
rcll
push
sbb
push
sbb
dec
into
stc
xorb
jmp
aaa
jle
adc
mov
mov
adc
jl
xorl
push
cli
mov
movsl
popf
ret
cld
add
inc
mov
dec
sahf
mov
lea
adc
fs
aaa
inc
pop
jae
je
dec
fwait
sbb
dec
inc
jg
add
arpl
in
cs
pushf
arpl
inc
notl
inc
xchg
xor
lods
popf
dec
jb
lds
sarb
je
arpl
or
or
cmp
or
cli
sub
cmp
repz
les
pop
sub
and
sbb
out
and
xchg
mov
repz
repz
pusha
cmp
testl
je
je
push
and
jmp
fnstenv
cs
sub
loopne
mov
out
int
mov
das
ss
inc
pop
test
idiv
inc
and
lahf
push
mov
xor
xor
rcrb
ljmp
mov
es
imul
out
push
or
mov
dec
ljmp
call
lahf
inc
fimuls
sbb
jge
repz
je
jo
cwtl
js
adc
jge
add
sbb
aas
ss
in
arpl
test
push
and
repz
and
push
call
xor
nop
js
xor
lods
ds
adc
mov
rorw
mov
mov
popa
xchg
clc
adc
add
dec
add
dec
jo
and
out
push
jbe
lcall
insl
repz
icebp
mov
xor
out
mov
push
lods
lahf
les
in
push
add
addr16
in
pop
sub
imul
or
xor
icebp
mov
lcall
mov
or
add
mov
mov
or
cwtl
xor
mov
stc
push
nop
ds
push
add
leave
fcomp
push
or
mov
cmp
repz
add
add
aam
inc
push
pop
notb
arpl
xchg
add
mov
cmp
xchg
shrl
push
adc
mov
lcall
cmc
or
dec
aas
test
int
cltd
xchg
aas
mov
or
cmp
pop
cmp
rorl
mov
loope
adc
sti
push
jns
cmp
adcl
in
rcrb
ljmp
jecxz
orb
dec
dec
pop
repnz
cli
fiadds
les
scas
addb
lret
out
pop
cld
mov
jb
xor
pop
hlt
lret
in
repnz
imul
sub
and
xor
pushf
int
sub
cmc
fscale
pslld
sbb
jecxz
mov
mov
mov
cmpsl
jo
pop
xlat
sar
pop
cmpsb
and
xor
push
insl
ds
sub
pop
mov
sbb
rcrl
dec
mov
out
sti
jae
cwtl
negb
mov
add
mov
pop
sub
and
lods
in
insl
xor
mov
jl
jno
cmp
fidivl
js
jg
jo
fnstenv
push
push
jg
incl
gs
adc
cld
inc
je
int
call
dec
push
idivb
aas
lret
aam
jg
xor
adc
jg
bswap
cld
loop
xor
insb
jb
imul
lcall
push
addr16
inc
out
movsl
test
dec
xchg
pop
push
cmp
mov
jle
pop
xor
jae
es
xchg
xchg
mov
add
sbbl
jp
out
mov
fisubrl
cwtl
jno
fnstcw
jbe
lods
jae
addr16
icebp
pushf
jecxz
arpl
lods
notb
inc
aas
adc
pusha
push
mov
cmp
es
fisttpll
divl
out
sub
xor
add
dec
mov
icebp
adc
dec
aaa
mov
sbb
jno
movsb
test
lret
test
imul
sbb
xor
mov
mov
int3
sbb
fs
mov
js
adc
push
push
iret
cmp
cltd
push
bound
ret
push
mov
int3
pushf
sub
dec
xor
dec
sub
inc
or
push
je
cmp
cmp
sub
data16
mov
jne
sub
movsl
jecxz
test
iret
or
mov
aad
dec
mov
and
lcall
jbe
test
and
mov
jb
dec
xchg
jge
and
push
fs
mov
push
or
and
mov
loop
xchg
pop
xchg
push
adc
push
mov
movnti
fadds
sub
xchg
mov
or
lret
adc
and
mov
stos
jp
clc
fstpl
das
cltd
sahf
mov
add
add
pusha
cmp
inc
pushf
enter
and
adc
popf
loopne
add
ljmp
xor
in
jnp
cmp
mov
dec
pop
shl
orps
xor
inc
mov
sbb
cli
mov
xorl
iret
adc
fmull
push
add
outsl
mov
sbb
cs
or
sub
cmp
push
or
ja
mov
or
scas
imul
hlt
and
sbb
mov
out
sti
in
xor
lcall
mov
test
fnsave
pop
lock
or
lea
data16
jg
jmp
mov
popf
icebp
adc
ret
jmp
xchg
and
jne
out
idivb
jno
call
int
sub
adc
rcll
push
cld
adc
sbb
out
shll
cmp
mov
or
int
xchg
pop
bound
test
sub
mov
pop
inc
sbb
imul
clc
mov
lcall
arpl
jecxz
add
pop
movsb
je
cltd
std
cmp
push
sbb
mov
mov
ja
test
push
cmp
ljmp
cmp
iret
mov
cmp
das
cld
push
sbb
jno
sbbl
int3
dec
out
mov
inc
out
inc
outsl
xchg
inc
cmp
rcl
out
aas
pop
mov
nop
xchg
repz
subl
inc
jno
sub
mov
push
mull
rorl
je
dec
js
movsl
or
cmpsl
mov
mov
lods
aaa
xor
sbb
mov
loopne
sub
mov
mov
sbb
cmc
popa
enter
scas
mov
push
orl
je
loope
das
and
dec
cmp
out
je
cmp
xchg
hlt
pop
cld
push
add
mov
mov
mov
adc
call
lock
add
mov
jae
mov
mov
mov
adc
mov
stos
dec
cmp
pop
jno
inc
add
call
in
push
jp
or
pushf
xchg
pop
adc
mov
dec
pop
adc
cltd
into
add
cli
fs
jno
dec
lahf
mov
dec
jae
xchg
jg
pop
test
shlb
add
outsl
rclb
and
mov
pop
in
cmp
repz
add
sub
cld
dec
popf
jecxz
rcll
cmc
sub
repnz
pop
adc
test
sbb
sbb
je
dec
inc
int3
mov
pop
loope
dec
sub
mov
cmp
mov
xor
and
adc
test
loope
aas
enter
push
enter
adc
adc
pop
cli
ror
adc
inc
cmp
adc
and
adc
bound
scas
rcrl
fadds
outsl
pop
cmc
cltd
out
or
fsts
adc
push
jns
mov
xchg
mov
pusha
xchg
loope
int3
dec
jns
lahf
mov
leave
ret
fwait
or
insl
testl
or
jge
cmp
ja
ss
cmpsl
test
mov
cmpb
fwait
pop
cmp
mov
or
in
in
push
ret
scas
sub
inc
jecxz
loopne
rorb
pop
ret
xor
mov
dec
and
lahf
in
mov
xlat
test
add
ljmp
mov
std
ret
js
xchg
mov
clc
jae
sbb
bound
pop
xchg
in
lods
pop
xor
fildll
ss
pop
or
jo
int
shll
sbb
pop
mov
xchg
sub
sbb
js
cwtl
push
jecxz
iret
aad
pop
cmpsb
and
mov
cltd
push
call
jo
pop
js
scas
aas
aad
jmp
daa
rorb
jecxz
mov
loopne
pushf
imull
lcall
mul
sbb
scas
mov
bound
das
dec
jecxz
test
test
dec
push
fbstp
cmc
add
jnp
sub
xchg
inc
popa
rcrl
mov
sahf
sahf
dec
xor
push
xor
mov
mov
cmp
imul
test
fdivl
inc
lahf
dec
dec
hlt
pop
cmp
mov
and
rorb
push
jmp
sbb
add
std
mov
aam
lods
mov
loopne
lock
test
mov
xorl
fdivrp
adc
cmp
sub
sti
mov
xchg
dec
popa
rol
data16
ljmp
or
jg
lret
mov
pop
out
incb
adc
push
aas
dec
ffreep
bound
in
mov
mov
shl
lock
std
ret
sbb
arpl
jnp
in
inc
cli
call
mov
gs
movsb
int3
scas
mov
adc
or
add
sbb
mov
jo
mov
xor
jbe
adcb
jp
jae
xor
rorb
dec
out
mov
jge
loope
dec
daa
mov
dec
and
adc
jecxz
sbb
pop
fstl
cmpsb
and
adc
pop
jl
popa
cmp
xor
outsb
pop
jmpw
addr16
shr
push
jae
int3
cmpsl
test
add
call
fsub
xor
jbe
xchg
in
sbb
dec
sbb
adc
and
push
push
les
aaa
mov
and
jge
test
push
js
sbb
ss
dec
dec
lret
sarb
xor
out
repnz
pop
icebp
mov
xchg
mov
fmuls
gs
or
xor
adc
add
or
sbb
jbe
mov
dec
test
jl
loope
lds
dec
pushf
ljmp
ljmp
xchg
cmp
sub
jo
xchg
mov
out
inc
outsl
mov
cli
push
jnp
cmpsl
jl
mov
ret
push
pop
movsl
jnp
aas
pusha
leave
idiv
out
inc
fwait
shr
xchg
lods
xchg
sub
push
pop
imul
lods
pop
xor
pop
xchg
pop
rcl
cmc
xorb
adc
xchg
mov
insb
mov
inc
add
jge
dec
cwtl
into
cmc
aam
and
out
in
inc
push
mov
mov
stos
add
mov
push
sti
and
mov
push
pop
popa
sbbl
scas
nop
jge
xchg
addr16
jae
cmp
jmp
jnp
sub
dec
sbb
push
pop
cmp
and
inc
je
and
dec
fnstenv
jne
test
push
push
adc
jg
cli
mov
xor
mov
xchg
or
imul
push
icebp
pop
pop
lea
jns
ds
xchg
adc
repnz
pop
fs
sub
sub
mov
adc
inc
mov
add
pop
xor
fxch
cmpsl
pop
fstpt
fcmovu
pinsrw
mov
inc
and
xor
or
sbb
mov
outsl
pop
push
mov
sub
ret
mov
insb
cs
lods
frstor
sbb
add
arpl
xorl
insb
dec
orl
pmulhw
scas
out
jno
scas
bound
fwait
xchg
xor
xor
add
ljmp
call
loopne
cmp
jge
cs
mov
or
cwtl
and
cmp
push
jp
or
pusha
aaa
xchg
inc
jl
adc
popf
insl
mov
cmp
or
mov
sarl
pop
mov
pop
jb
sub
and
test
mov
repnz
sbb
inc
mov
inc
ss
out
jg
xor
rep
paddusb
fcomip
out
inc
sub
sub
lret
push
shrb
jmp
push
lods
cwtl
pop
pushf
fdivr
and
xchg
mov
jle
add
sub
mov
push
int3
xor
sub
inc
mov
repnz
mov
adc
repz
cmp
out
sub
mov
movsb
pushf
push
cltd
ljmp
adc
ror
idivl
scas
cltd
mov
popf
loope
aas
ds
shrl
pusha
fildll
cmpsb
add
dec
in
jge
cmp
cli
shrl
movsb
push
cltd
lahf
push
mov
and
cs
cwtl
and
pop
push
ljmp
jecxz
mov
insb
inc
pop
ret
push
push
rcrl
into
aaa
pcmpeqd
lahf
leave
xor
pop
es
jno
cmp
fbstp
pop
push
mov
arpl
je
clc
sbb
out
jge
xor
mov
or
mov
push
or
ret
jle
hlt
shrl
mov
iret
cmp
aaa
and
pop
lock
jmp
inc
ret
int
xchg
mov
push
mov
push
mov
sub
dec
or
xlat
call
dec
mov
lea
cwtl
cli
adc
inc
cmpsb
sti
stc
loope
pop
adc
lahf
mov
flds
cmp
addl
in
hlt
or
push
add
sub
test
sub
inc
jbe
mov
out
sub
lods
add
fists
lods
and
xor
mov
and
or
es
or
sbbl
std
repnz
out
sti
sub
cmpsl
sbb
roll
int3
fstpt
mov
stos
sbb
pop
mov
cltd
xlat
rcrb
ds
mov
aaa
stos
out
or
dec
jae
jno
xor
dec
cmpsb
add
jl
das
xor
mov
sbb
adc
aaa
ret
sub
inc
fwait
outsl
pop
sub
or
and
fstpt
ret
push
stos
pushf
cli
pushf
xlat
movsb
daa
and
lret
popf
daa
jp
pop
fwait
inc
cmpl
lds
sahf
imul
shll
sub
loope
mov
cld
ds
xor
mov
inc
push
jp
pop
cmp
ret
fs
mov
cld
adc
cmpsb
push
daa
clc
aam
daa
jae
sbb
fildl
or
rcrl
ret
ja
jno
lret
add
fistl
mov
push
sbb
stos
pop
pop
mov
cwtl
mov
inc
out
cmp
mov
push
aaa
push
xrelease
mov
or
mov
sub
mov
push
xor
jg
cmp
lods
mov
ja
jle
stc
xchg
insl
or
adc
xor
push
daa
stc
cli
or
xchg
int3
scas
push
outsb
testl
ficoms
or
cmp
xor
fsubl
data16
sub
cmp
data16
mov
adc
mov
push
jne
xor
std
pushf
push
and
scas
inc
inc
push
cmp
popf
dec
jge
fs
cli
and
cmp
std
xchg
jb
lahf
mov
jbe
pop
pop
or
cmp
push
inc
outsb
aaa
int3
push
cwtl
fucomip
lock
xor
orb
flds
inc
rcl
repz
fld
ret
fsubl
loope
cmpsl
fs
inc
stos
push
inc
xlat
xor
or
xor
lcall
repz
jae,pn
adcb
xor
xchg
sahf
add
cmpsb
jecxz
addl
hlt
int3
loop
inc
lahf
xor
test
sub
pop
sbb
jo
jae
jno
mov
in
jnp
cmp
mov
adc
daa
mov
dec
inc
outsb
push
pop
inc
nop
pusha
imul
and
in
push
pop
xor
mov
out
fstps
fiadds
pushl
adc
ja
mov
adc
leave
ror
sbb
vpsubsb
popf
hlt
movsl
fs
ja
mov
mov
out
aad
xbegin
dec
stos
rcl
outsb
mov
jmp
adc
int3
mov
mov
push
fsubp
fcomip
insl
jl
ljmp
sub
call
loopne
pop
sub
test
add
ja
adc
icebp
pop
mov
mov
test
popf
js
pop
in
push
sub
lret
push
ljmp
add
sti
out
movsb
pop
jo
popw
cld
sarb
xchg
cwtl
sbb
add
fdivl
mov
dec
loopne
pop
fnstenv
insb
in
rorl
cltd
mov
fildl
inc
push
add
hlt
outsb
scas
ret
sbb
mov
jge
mov
out
outsl
dec
add
imul
or
and
cmp
inc
popa
loop
out
mov
push
mov
test
fisubl
sbb
ljmp
orl
jnp
dec
aaa
mov
scas
push
fstps
mov
lods
les
and
mov
xchg
je
jle
fldcw
jne
shr
or
ljmp
outsl
mov
lret
test
notb
not
pop
or
jne
pop
enter
pop
adc
push
and
fs
sti
enter
das
arpl
inc
aaa
pop
into
sti
push
pop
pusha
xchg
jno
pop
sarb
inc
add
jb
addr16
pop
mov
iret
enter
mov
nop
push
inc
arpl
lret
fiadds
sub
pop
pop
dec
lock
cmp
dec
sub
mov
adc
push
sub
xchg
xor
pop
mov
xor
xorl
pop
outsl
daa
mov
jns
int3
imul
lds
mov
mov
outsl
mov
mov
and
mov
push
fwait
dec
add
das
int3
jns
cmp
fs
push
subb
push
cmp
mov
pop
fcomp
imul
dec
divl
xor
cli
jae
pop
sbb
pop
cmp
imul
and
push
out
jns
fldl
mov
push
fistps
test
sbb
stc
adc
inc
dec
add
jmp
arpl
pop
mov
push
aas
xchg
enter
rcr
mov
mov
scas
add
fwait
xchg
xchg
sub
frstor
pop
out
fcomip
js
divl
aad
jmp
in
sub
pop
data16
pop
gs
xchg
addr16
dec
insb
sbb
cmp
data16
cmp
lret
mov
es
push
or
add
jo
xchg
fs
cmp
sub
pop
add
or
cmp
test
cltd
pushf
push
xchg
push
das
adc
mov
and
loopne
repnz
ljmp
xor
pop
adc
mov
lea
mov
mov
xor
xor
add
xor
nop
inc
cld
mov
scas
cwtl
ja
xchg
and
call
test
xor
mov
sahf
mov
jo
ret
cmp
cmp
add
lea
mov
lods
sub
push
icebp
fwait
in
mov
jae
out
adc
inc
popf
dec
movsb
cmc
les
mov
and
cs
and
ror
push
xor
pop
jge
sbb
enter
lods
fwait
test
popa
fisubrl
jle
jae
jb
lods
aam
pushf
mov
icebp
jne
icebp
lea
insb
push
fsubs
loop
inc
stos
add
aam
push
add
daa
dec
xchg
pusha
sbb
adc
pop
cs
lahf
jnp
movsl
and
scas
lret
out
int
and
xchg
dec
dec
xor
xor
imul
push
lcall
aad
das
mov
loop
jnp
loope
and
sub
add
push
sbb
cmc
mov
loop
add
xchg
dec
pop
repnz
ja
aad
shll
xchg
aas
rclb
lret
scas
xchg
add
xor
xchg
push
test
aas
sbb
imul
sbb
jns
mov
mov
rcl
dec
call
loope
divl
push
neg
lea
sbb
je
pop
pop
lahf
xor
mull
adc
in
mov
mov
aaa
orb
adc
es
testb
les
push
hlt
sbb
pop
xchg
andl
mov
loope
idivb
sbb
pop
mov
fcmove
inc
sahf
jg
mov
lahf
inc
and
xor
mov
out
sbb
push
pushf
cmc
cld
outsl
xchg
mov
popa
and
shlb
sub
test
cli
cmp
dec
pusha
and
push
pop
xor
cmc
movsb
cmc
add
in
adc
mov
fldcw
mov
shll
mov
sbb
push
hlt
movsb
mov
pop
imul
push
add
jp
mov
clc
sub
lea
movsl
adc
dec
add
mov
cmc
sbb
add
in
mov
sub
pop
js
pop
pop
lret
out
dec
mov
ret
jno
clc
cmp
jl
lds
cltd
sbb
sub
scas
inc
pop
xchg
leave
fcomp
cwtl
roll
fcomps
pop
inc
adc
aaa
adc
lods
outsl
out
data16
jg
mov
inc
sbb
pop
outsl
jo
xchg
adc
sbb
scas
test
mov
inc
adc
dec
inc
lea
push
rcrb
xor
mov
fsubrs
xor
repz
jo
std
inc
jmp
adc
popf
mov
and
jge
imul
pop
dec
sar
mov
mov
or
cli
xlat
sub
jl
adcl
scas
daa
ss
das
mov
fisubs
jnp
lock
loope
ret
ja
mov
mov
fdivp
sahf
cmp
jno
lret
shrb
rorl
loopne
fisubrl
lock
cld
inc
subl
or
add
stc
ret
pop
sbb
pushw
sbb
ja
jb
dec
das
fisubs
or
or
imul
xor
push
inc
int
inc
cmp
call
stc
cli
out
push
scas
jle
mov
call
mov
push
lret
jne
xchg
sub
sub
and
and
xor
or
js
dec
or
pop
into
mov
js
adc
jne
lcall
ja
jbe
fdivrl
mov
xlat
scas
cmp
bnd
test
fnsave
adc
insb
and
mov
pop
stos
mov
mov
xchg
loope
hlt
push
ljmp
addr16
bound
xlat
dec
hlt
sbb
imul
pop
and
jns
adc
cmp
popa
fs
mov
in
jl
jge
fnstsw
lds
and
jmp
pop
sub
into
add
push
ret
movl
mov
js
push
loop
push
mov
jge
sub
cmp
mov
lret
aad
add
cmpsb
loop
movzbl
and
sub
lcall
jbe
xchg
gs
adc
loopne
rorb
sub
jb
loopne
and
outsb
in
push
xchg
sti
aad
cld
xor
gs
test
push
push
in
pop
sbb
arpl
xchg
mov
xor
sbb
mov
nop
sbb
mov
test
or
xchg
mov
jmp
jne
jns
imul
insl
movsl
in
lds
mov
outsl
dec
xlat
mov
jge
pop
add
push
and
or
push
mov
push
mov
mov
int3
jl
adc
adc
push
dec
dec
bound
movsb
jno
dec
xchg
loopne
adc
push
data16
xchg
xchg
std
mov
sub
push
pop
inc
adc
mov
dec
aam
int3
mov
push
cmpsb
sbb
fs
pop
jae
arpl
push
stos
sub
imul
rcrb
rorl
daa
xchg
xchg
sub
stos
jg
jg
sti
test
and
movsl
test
pop
out
mov
movsb
lcall
mov
pop
insb
lret
push
sbb
sbb
daa
insb
and
ds
xor
xchg
mov
and
xchg
sbbl
and
lcall
fisttpl
jo
sbb
popf
rcrb
popa
ds
in
orb
jp
iret
jl
push
push
shlb
int
test
loop
out
es
das
sub
add
inc
data16
ja
jnp
mov
lock
lret
mov
cmc
testl
data16
xchg
inc
js
or
daa
xchg
mov
js
push
xlat
sbb
add
xchg
push
mov
push
mov
mov
aad
xchg
mov
rclb
lods
das
jne
jl
loope
adc
fidivrl
pop
pop
xor
lcall
fstps
ret
mov
or
in
arpl
xchg
int3
and
fsts
ja
xor
jb
test
fimull
dec
scas
daa
hlt
push
cli
arpl
in
and
popa
fsubrl
add
scas
out
dec
test
fucomi
mov
loop
out
mov
mov
sub
rolb
movsb
std
adc
mov
popf
xchg
jmp
mov
cmp
mov
jne
xchg
icebp
aas
or
int3
push
rcll
outsb
xor
mov
mov
and
imul
dec
and
mov
out
js
bound
ss
nop
cmp
dec
insb
push
je
mov
push
nop
push
dec
push
add
push
pmulhw
xor
xchg
mov
loop
mov
mov
mov
mov
mov
mov
xor
cmpb
jge
ljmp
or
inc
int
pop
lea
es
pop
jnp
inc
mov
jb
es
daa
lcall
cli
push
test
pop
nop
in
decl
es
in
push
test
inc
add
je
mov
test
mov
mov
pop
pop
or
adc
jp
dec
sbb
xchg
loopne
push
jp
in
rorb
xchg
fidivrs
popa
outsl
push
out
push
adc
and
out
imul
xlat
fistpl
pop
lahf
sub
pushf
push
test
jecxz
dec
sbb
js
jns
lock
scas
sarb
mov
aad
xlat
jecxz
js
adc
cmp
ret
pop
rorb
mov
cmc
mov
mov
jmp
arpl
cli
rcrb
mov
pop
mov
ret
gs
xchg
test
mov
popa
add
dec
push
jno
pop
loop
sub
shlb
inc
inc
nop
or
cld
cmpsb
mov
loopne
xchg
mov
add
out
movsl
fsubrs
mov
cmp
jg
sub
sub
xor
push
inc
jo
jmp
movl
lahf
sbbb
mov
test
mov
add
ljmp
inc
aas
sbb
test
xchg
push
jg
roll
xchg
jle
pop
lock
jae
pop
jne
inc
loop
inc
pop
xor
sbb
ret
daa
fistpl
sbb
sub
add
ret
cmpsl
lods
stos
dec
fs
ja
rcrl
push
lret
cmc
lock
jo
mov
out
gs
ret
xchg
sahf
lods
fsubrs
jecxz,pt
jl
rolb
aaa
jae
out
push
or
mov
xchg
dec
repnz
sub
shlb
imul
mov
pushf
mov
out
ret
cmp
ss
lock
push
call
clc
fadds
sbbb
icebp
out
mov
or
mov
xor
hlt
ret
mov
mov
and
xchg
mov
push
push
in
clc
aaa
mov
jl
mov
or
lret
ds
pushf
rcr
bound
mov
dec
pop
sarb
dec
lds
daa
stos
add
or
iret
icebp
js
fwait
inc
icebp
cmp
pusha
xchg
jo
outsb
add
jbe
mov
push
cld
add
push
rcrl
pusha
xor
mov
sub
mov
jne
insb
rcll
adc
cmp
js
mov
or
pop
lock
dec
mov
and
xchg
or
shll
lds
jbe
jae
movb
dec
mov
push
mov
or
jl
push
xchg
xchg
add
das
movsb
fistl
orb
and
jno
sub
cmp
scas
inc
push
mov
mov
push
fwait
pop
out
pop
mov
je
push
jnp
or
push
loopne
xchg
imul
jmp
movsl
xorl
push
or
mov
in
or
sub
xchg
jecxz
push
xchg
inc
cmp
xchg
push
jmp
stc
and
sub
xor
cwtl
xor
insl
test
adc
out
mov
push
push
jle
mov
movsl
shlb
inc
push
lods
dec
rolb
pop
lcall
aad
pop
push
lcall
sub
clc
cmp
es
mov
jnp
es
fidivs
fisubrs
adc
inc
mov
mov
hlt
pop
mov
jno
shr
filds
in
arpl
mov
and
sub
mov
fs
cltd
push
ds
dec
push
jle
sub
les
jno
mov
sti
movsl
insl
jge
cmp
sahf
pushf
enter
out
and
loop
adc
jne
cmp
mov
dec
pop
inc
fcmovu
add
xchg
lahf
outsl
rolb
or
pop
mov
adc
icebp
fisubs
and
jmp
lods
or
dec
call
inc
or
sarl
push
rorb
pop
inc
scas
imul
lds
data16
inc
fidivs
lret
les
xchg
inc
xchg
mov
or
pop
pushf
dec
pop
push
pushl
cmpsl
and
push
adc
add
cli
sub
pop
jmp
popl
push
pushf
fcmovnbe
mov
jne
test
jle
insb
push
mov
jecxz
jne
xchg
iret
ljmp
dec
ds
dec
out
inc
fs
push
data16
ss
xchg
in
ret
out
cmpb
ficoml
adc
in
and
or
pusha
aas
lds
cmpb
int3
push
inc
xchg
adc
subb
add
jnp
dec
cmp
mov
mov
sbb
xchg
sub
add
stc
mov
repz
mov
push
lretw
dec
lcall
dec
mov
inc
jne
pop
dec
ret
xor
scas
arpl
movb
xchg
inc
xchg
sbb
cmp
js
cmpb
jns
inc
mov
or
cs
xor
push
test
dec
in
cltd
mov
aaa
jge
das
adc
sarb
cmc
jg
into
sub
inc
push
jge
ljmp
xor
leave
push
test
hlt
js
pusha
loop
sbb
lods
dec
sub
dec
jb
push
faddl
addr16
and
bound
insl
add
xor
jle
mov
xchg
pop
mov
stos
cltd
jl
notl
inc
js
inc
adc
std
xor
cmp
popl
das
es
inc
in
xchg
jbe
push
fstps
pop
pop
sub
xchg
int3
xor
loop
fs
mov
shll
lcall
sbb
mov
sbb
inc
rorl
inc
mov
and
in
adc
pusha
aam
or
sub
and
in
mov
pusha
push
lahf
fldl
sbb
mov
icebp
sub
in
xor
pushf
pop
je
cmp
loope
mov
add
stos
add
xor
sbb
mov
inc
sbb
cmc
inc
test
outsl
xchg
popf
loopne
pop
leave
add
cmp
pop
lds
imul
sti
sub
loopne
xor
push
sub
add
add
sbb
hlt
je
add
es
mov
pop
fwait
ret
fcomi
rol
cmp
shll
sub
mov
aam
loope
push
and
adc
cmpsl
mov
lahf
shlb
mov
push
fiaddl
dec
cmp
int3
incb
xor
sbb
mov
inc
arpl
mov
fldcw
xor
js
hlt
and
xor
sbb
sbb
out
das
movsl
mov
loope
inc
cwtl
cwtl
and
shlb
and
ret
filds
in
add
cli
sub
decl
mov
xchg
jo
mov
test
and
subl
pop
dec
adc
pop
lds
jge
js
add
dec
or
es
cltd
pop
mov
outsl
adc
cmpsb
push
dec
rol
subl
add
fsubs
cld
insb
das
cwtl
into
and
lds
cmp
aaa
aaa
aas
xor
stos
dec
sbbl
in
addr16
loope
jge
jecxz
stos
jno
mov
ljmp
cld
in
cmpb
imul
movsl
mov
sub
mov
mov
jmp
pop
sub
add
mov
aad
cs
ret
dec
aaa
call
shll
fbstp
sbb
stos
in
jo
int
addr16
cwtl
ret
push
lret
mov
fidivs
call
cmp
mov
gs
jl
fucomp
enter
test
jmp
ret
in
inc
xchg
fadds
xchg
fmul
fsubs
add
dec
mov
inc
mov
stos
or
dec
adc
out
xor
dec
mov
aas
mov
push
pusha
test
lret
aam
push
les
push
or
enter
pusha
test
mov
aas
mov
in
lods
imul
loop
jns
fcoms
scas
inc
lret
arpl
cs
dec
and
stc
mov
inc
scas
pop
shrl
arpl
test
dec
addr16
xchg
mov
repz
xor
cmp
bound
outsl
out
aaa
add
test
imul
cmc
inc
rep
or
pop
subb
sub
aad
ret
aas
or
addr16
es
lcall
pop
sub
xchg
cltd
cltd
repz
loopne
rorl
shrl
mov
gs
pop
dec
xor
shl
mov
lods
adc
xchg
push
xchg
sbb
bound
je
push
aam
and
fimuls
jl
mov
cmp
in
jle
into
sbb
pusha
xor
and
cmp
lahf
push
inc
mov
insb
inc
lret
mov
sub
data16
inc
inc
inc
dec
jns
rcll
fcmove
int
sub
inc
divl
adc
cs
inc
xor
cmc
nop
fdivl
xlat
cmp
popf
fwait
pop
jnp
or
cmp
insl
loop
outsb
inc
jmp
push
test
lods
pop
dec
or
sbb
inc
leave
out
cld
sub
dec
out
test
mov
in
ss
dec
cmp
or
neg
xlat
push
pop
daa
inc
mov
bound
leave
jbe
pop
jmp
lods
lret
pop
pop
insb
lret
jmp
push
lea
cmpsb
jmp
mov
hlt
mov
rolb
mov
cmp
ljmp
add
jp
xor
push
jno
fiadds
test
sbb
jg
push
xchg
nop
push
push
xchg
je
mov
xchg
sub
ds
add
dec
mov
add
lds
sbb
jle
sub
aaa
mov
aad
aaa
sti
jge
sub
fstpt
arpl
jp
clc
ficoms
bound
dec
out
in
shlb
sub
aad
mov
mov
popa
iret
xchg
add
fsubr
js
mov
mov
mov
sub
xchg
add
lods
jl
ja
jne
mov
mov
js
push
mov
data16
push
test
xor
enter
add
pop
push
scas
shrl
fldcw
push
imul
and
nop
movsl
cmp
jmp
dec
scas
data16
pop
rorb
mov
icebp
fdivrp
and
xchg
adc
cmpsb
and
push
movsl
hlt
push
pop
movsl
dec
add
mov
add
rcrb
ficoms
lods
shlb
shrb
test
in
or
cmpsl
push
sub
shll
xchg
dec
test
mov
out
popf
scas
mov
lahf
jne
sub
pop
and
pop
jg
inc
mov
xor
and
pushf
enter
inc
and
inc
sar
inc
bound
jbe
js
fcoms
aaa
test
sarl
add
dec
xchg
insl
pushf
daa
jecxz
mov
mov
ja
pop
sahf
lock
cmpsb
fcomps
mov
lea
push
cld
pop
xchg
adc
fidivs
add
jg
shlb
repz
push
adc
ljmp
push
jle
fwait
sarl
popa
aaa
aas
sub
jecxz
mov
fistpll
mov
data16
mov
pusha
pop
pushf
xor
dec
push
sub
in
jg
pop
push
inc
pushf
aaa
xor
adc
mov
into
adc
out
iret
xchg
jp
movsl
rolb
mov
pop
jne
jbe
clc
or
inc
adcl
cmpsl
cltd
mov
fwait
and
in
pop
mov
sbb
dec
adc
push
push
aaa
push
mov
outsb
bound
adc
mov
mov
mov
arpl
push
sahf
lock
subb
scas
notb
icebp
in
addr16
mov
pop
cmp
adc
add
int3
ja
lcall
jecxz
popf
sub
mov
inc
fstpt
int
mov
sub
cmp
jns
dec
fs
int
push
jge
inc
xchg
loopne
test
outsb
std
int
ja
dec
popa
xor
into
nop
jle
daa
push
adc
xor
imul
ficompl
add
and
movsb
jg
outsl
or
leave
sahf
cld
jl
jge
sub
stos
fistps
in
or
daa
addl
cmp
sbb
insb
popa
clc
jge
cmp
pusha
pop
dec
filds
push
lds
fidivs
sahf
inc
outsl
xor
inc
cwtl
pop
xor
inc
xchg
inc
shl
lea
push
xchg
cmp
cmpsl
jmp
xorl
jae
inc
lahf
xor
lods
sbb
jmp
add
xor
jp
pushf
xchg
rorl
and
mov
data16
mov
push
jp
sub
insb
xor
adc
lret
push
add
mov
mov
aas
jnp
add
or
les
out
out
xchg
cmpsl
mov
outsl
sbb
cmpl
int
enter
and
les
stc
into
jae
sbb
ret
pop
cli
aas
loopne
je
mov
xchg
xlat
jecxz
insl
pop
stos
fucom
in
inc
dec
shr
cmc
stc
mov
and
out
xchg
xor
xchg
sahf
dec
dec
push
int
add
jno
leave
mov
cs
sub
mov
and
in
xchg
xchg
hlt
mov
pusha
mov
add
jge
mov
pop
sub
movsb
or
nop
push
data16
cmp
cltd
jmp
test
sbb
clc
push
pop
adc
scas
push
push
cmp
and
mov
push
cmp
pop
push
lret
aam
push
mov
sub
pushf
dec
iret
xchg
je
xchg
xor
iret
rcl
xor
cltd
inc
lock
cmp
inc
lock
push
inc
aam
dec
pusha
in
or
add
int
inc
or
test
ss
addr16
fiaddl
push
aas
rcrb
mov
add
shll
mov
sub
sbb
inc
pop
sbb
pop
push
or
popa
int3
cmp
xorl
push
xchg
or
sub
jl
sub
or
push
les
ja
rorb
iret
repz
jb
pop
sbb
int3
inc
xlat
mov
xchg
fidivl
in
test
cmpsb
es
xchg
mov
mov
roll
push
pop
xor
push
fwait
ja
or
xchg
jnp
push
imul
sbb
out
mov
sub
dec
add
scas
cs
mov
xchg
rorb
daa
and
xchg
lret
sub
sub
orl
xlat
mov
das
lods
and
jb
popa
xchg
idivb
fists
or
rcll
test
and
fnstcw
cld
jae
or
mov
mov
mov
mov
les
int
mov
ror
jno
xchg
or
jg
or
dec
pop
imul
lret
test
je
cli
popf
cld
ret
and
and
mov
mov
mov
movsl
mov
inc
push
push
dec
enter
out
cmpsb
pushf
mov
dec
sbb
adc
mov
xor
mov
mov
push
inc
bound
jbe
adc
jmp
es
sbb
dec
mov
cs
lock
add
jns
sbb
dec
sbb
sub
jecxz
mov
repz
xor
jmp
js
jg
lock
les
iret
mov
pop
and
cmp
ret
pop
sub
inc
sbb
aam
inc
mov
imul
push
aaa
dec
jb
movsb
and
pop
loop
jg
mov
cmp
mov
push
mov
imul
call
insb
pop
int
stc
jp
jae
lods
jnp
ret
jbe
inc
ret
sbb
idiv
sub
sub
add
and
cmpb
jne
std
icebp
jge
add
push
jmp
inc
pop
xchg
outsl
inc
dec
lods
mov
inc
pop
push
sbb
shl
pop
sub
xchg
lods
or
mov
movsb
aaa
lods
cmpsb
and
inc
cltd
shll
fwait
xchg
fs
mov
add
jnp
sub
stos
jns
jnp
ja
adc
mov
or
es
mov
mov
inc
pop
mov
in
xor
jae
notl
and
or
aad
sbb
movsl
cmp
cmpsb
adc
shrb
stos
lret
data16
or
cltd
jmp
dec
in
jge
into
sub
xor
sbb
jl
insl
inc
mov
movsl
sub
pop
mov
and
ljmp
jge
adc
stos
and
in
mov
xor
pop
out
dec
add
rorb
or
sahf
bound
or
das
iret
pop
sub
invd
sbb
mov
jne
add
jnp
hlt
scas
push
sbb
xor
daa
jne
aam
rolb
adc
jo
push
push
lods
mov
add
pop
jne
cmc
in
sub
adc
enter
test
jo
test
inc
cltd
dec
lret
jge
and
push
test
inc
ds
jmp
cmpsb
cmp
fstl
movnti
cmp
jnp
lock
and
jne
push
pushf
fstps
in
mov
push
mov
sub
iret
leave
pop
jp
push
cli
sub
mov
lcall
pop
jle
sub
add
or
outsb
adc
xchg
notb
sbb
lds
push
fsts
and
add
cmpsl
arpl
loop
cmpsl
and
aam
sub
std
or
lahf
lea
daa
and
cwtl
sbb
ja
std
jge
movsl
jp
xchg
lds
in
gs
xor
cmc
pop
or
mov
sahf
loopne
clc
mov
inc
sbb
mov
mov
lahf
in
daa
cltd
popa
inc
call
lret
popa
mov
imul
xchg
inc
and
mov
pusha
in
imul
aad
push
imul
sti
inc
lock
adc
sub
int
jb
popf
dec
arpl
jmp
in
lods
call
jle
das
add
jae
mov
nop
pop
aam
xlat
popa
icebp
lods
xchg
test
mov
pop
es
ljmp
inc
mov
in
rorb
lds
jbe
adc
repz
leave
ja
xor
frndint
int3
stos
pop
jnp
jmp
mov
and
mov
lock
pop
mov
aad
fistpl
in
inc
mov
sbb
fstpl
leave
hlt
loope
inc
xchg
sbb
or
scas
cmp
loopne
test
push
sti
dec
jnp
mov
mov
pushf
aad
aam
cmp
jae
or
in
in
aam
push
into
push
mov
dec
push
loope
fcompl
pop
ds
mov
mov
out
test
lahf
jg
out
jns
xor
sbb
fiaddl
mov
dec
jmp
sub
inc
jb
mov
mov
and
cmp
rolb
into
sbb
add
lods
test
lret
jmp
je
ja
and
xchg
dec
xlat
ror
mov
sub
mov
sub
aaa
mov
movsl
sub
sar
xor
cmp
sahf
push
xor
icebp
lods
imul
cwtl
scas
in
sbb
shll
cli
scas
jl
xchg
loopne
or
rcr
shrd
imul
inc
inc
int3
mov
push
pop
mov
mull
sbb
insl
sub
mov
mov
mov
nop
or
fsubrs
jl
out
dec
stc
shlb
das
gs
adc
repz
jae
movsb
jae
iret
xchg
dec
sub
xchg
xor
fildll
adc
imul
out
dec
mov
mov
xchg
dec
push
out
xlat
push
xchg
out
sbb
jle
ss
int3
sbbl
dec
rcrl
repnz
mov
fimull
arpl
xchg
out
fdecstp
xchg
and
jo
mov
mov
movsb
jbe
push
gs
jecxz
aad
xchg
pop
jno
lahf
xchg
sub
jmp
hlt
popa
xchg
add
dec
mov
lret
decl
daa
or
sub
cli
lock
test
jbe
sbb
mov
out
cmpxchg8b
or
pop
sbb
test
pop
mov
andl
add
fmuls
das
rcrl
or
push
pop
jge
mov
daa
push
into
mov
jmp
cmp
pop
xorl
mov
int3
in
inc
inc
pop
aaa
inc
cmc
sub
inc
fistpll
sbb
mov
int3
enter
out
stc
int
outsb
pusha
int3
clc
rol
nop
sti
pop
int3
ret
cmp
nop
push
in
push
in
in
mov
or
and
mov
sub
pop
pop
popf
dec
inc
repz
xchg
jno
divb
xorb
scas
mov
mov
pop
out
cmp
call
jo
jecxz
test
ja
push
cs
in
lods
adc
mov
mov
pop
pushf
sarl
pop
movl
xor
jle
pop
pop
cld
jmp
mov
add
mov
add
into
nop
sbb
xchg
sbb
notl
push
setno
int
mov
sbb
pop
lds
cmp
sbb
pushl
sbb
fsubr
mov
jmp
nop
outsl
int3
stos
cmpb
pop
add
mov
pop
jo
nop
into
inc
pop
int3
test
cltd
xor
adc
xchg
insb
jbe
mov
cld
add
cwtl
sbb
mov
sub
ja
xor
sbb
pop
xchg
repz
mov
ret
dec
mov
and
sahf
lock
pop
in
inc
push
pusha
std
ja
inc
dec
mov
pop
add
test
pop
rcl
jno
roll
call
pusha
lahf
pop
mov
clc
mov
mov
aam
xchg
js
add
aaa
aad
pop
cld
pusha
adc
jg
adc
pop
mov
sbb
notl
je
mov
loope
stc
and
mov
mov
pop
sub
dec
push
sbb
mov
cli
sti
adc
popl
lahf
inc
movsb
mov
stos
cmc
fnsave
push
dec
outsb
cmp
mov
nop
test
incb
lahf
push
cmc
sbb
inc
dec
les
sahf
push
nop
cld
sbb
js,pt
mov
add
movsb
or
clc
jae
mov
and
jge
xchg
test
ret
cmp
shlb
ret
sbb
lret
adc
xchg
dec
faddp
rcrb
ds
xor
adc
cmc
xor
adc
jl
and
push
rcrb
xchg
call
pop
lret
mov
pop
scas
and
push
mov
inc
pop
stc
aam
call
mov
mov
loopne
shrl
xor
push
push
addr16
scas
faddp
in
add
cmp
push
scas
ror
je
repnz
mov
xchg
insb
int
insl
aad
dec
mov
pop
loope
sbb
outsb
push
add
sarb
push
xor
pop
int
and
inc
mov
inc
and
xchg
je
mov
jl
in
nop
cmp
xchg
mov
mov
scas
xor
mov
push
or
mov
ds
adc
mov
lret
mov
mov
std
and
arpl
push
loop
xor
jg
outsl
and
fs
imul
mov
in
push
dec
mov
add
and
incl
xor
add
ja
call
ds
test
test
pop
add
incl
jl
popa
sbb
inc
fimuls
subl
push
xchg
lock
dec
into
add
inc
fbld
loopne
std
es
pop
xchg
adc
cmp
adc
mov
xorb
insb
shrl
jne
mov
mov
dec
movsl
movsl
aam
jns
shrl
imul
mov
sub
mov
jp
dec
jne
jo
sbb
add
je
push
int
xor
cmc
mov
xor
pop
dec
movsb
shrl
xor
icebp
imul
inc
or
into
lret
pop
bound
sti
sub
in
in
sbb
dec
daa
add
repnz
sbb
repnz
push
sbb
fistpl
jmp
fdivrl
faddp
aaa
add
rcll
cmpb
pop
push
out
dec
data16
out
outsb
xor
stos
test
fdiv
sub
and
std
lea
mov
or
push
mov
mov
add
pop
push
lcall
jg
xor
sahf
bound
mov
lret
mov
outsl
jo
jns
sbb
les
lds
std
jg
push
pop
add
lods
shrb
jge
or
je
dec
in
inc
std
xlat
mov
cmpsl
sbb
out
loop
or
loopne
cs
xlat
adcl
pushf
adc
lock
fstpt
clc
loop
sbb
dec
aas
mov
adc
xchg
xor
cs
push
gs
out
arpl
inc
cwtl
movsl
sar
cmpsb
add
lds
mov
dec
inc
fmuls
jmp
and
pop
cmc
sbb
add
arpl
repz
bnd
dec
ss
call
mov
clc
push
add
add
lcall
add
push
insl
dec
fdivrs
and
push
jns
and
mov
sub
mov
jp
mov
imull
mov
pusha
add
mov
pop
loopne
mov
jp
ljmp
or
push
xchg
lods
in
idiv
jae
pushf
jne
xlat
les
mov
lds
daa
and
or
je
mov
mov
cmpsl
fildll
or
ficomps
pop
fyl2x
and
sbb
inc
std
mov
ret
jg
pop
imul
cmpsl
das
jp
stc
jne
mov
data16
daa
jmp
adc
push
leave
sbbl
in
imul
mov
mov
cwtl
jp
mov
inc
adc
mov
pop
sub
fists
sbb
xchg
adc
xchg
mov
inc
inc
mov
cmp
leave
daa
fcmovnb
shlb
in
ja
addr16
jmp
mov
push
bound
or
xlat
loop
sub
test
add
ror
stc
sti
and
loope
dec
add
addr16
mov
mov
inc
pop
gs
into
xchg
jmp
dec
xchg
adc
dec
out
dec
mov
and
rep
pop
ret
dec
dec
leave
or
je
dec
js
imul
leave
pop
cmp
mov
push
pop
jmp
out
push
jbe
lret
xchg
arpl
mov
push
jmp
pop
pop
ret
pop
clc
pushw
cmp
pop
adc
inc
fcom
lahf
xor
jge
adc
in
inc
mov
insl
xor
aas
pop
add
es
push
pop
push
inc
xor
or
mov
ss
sbb
mov
adc
popa
dec
pushf
cmpsl
dec
inc
nop
xchg
movsl
xor
fisttpll
inc
mov
mov
inc
xchg
xchg
arpl
mov
stos
mov
xor
std
cmc
mov
or
add
popa
ljmp
fldt
imul
xsave
inc
fdivrs
jg
mov
ljmp
push
mov
pusha
mov
cmp
mov
lds
jae
ret
mov
movsl
pop
push
shll
out
cmp
and
mov
dec
lea
cwtl
cmp
cli
xchg
adc
dec
or
mov
jp
adc
sub
sbb
js
dec
xor
xchg
repnz
mov
lret
out
sub
cli
jmp
sub
or
roll
clc
daa
sub
and
popf
dec
xor
mov
test
or
mov
leave
or
fwait
jne
cmp
xchg
jnp
in
add
cmp
or
dec
or
in
jns
xchg
mov
cmpsl
ljmp
mov
adc
jae
inc
push
nop
fcompl
cmp
jp
lods
inc
movsb
in
jl
int
sbb
out
out
mov
pop
inc
jecxz
in
sbbb
enter
fucomi
pop
in
enter
psubq
enter
dec
mov
ja
push
es
iret
xor
cmpsl
gs
aaa
push
xchg
cmp
mov
and
aad
push
shrl
sub
cmp
popf
mov
pushf
lahf
lret
ds
loope
inc
fidivs
nop
aaa
mov
iret
xchg
imul
fldenv
divb
push
sub
fisubs
sub
dec
add
add
daa
inc
mov
mov
push
js
fdivrl
push
sub
rcrb
sub
je
mul
pop
lods
and
fadds
lods
pushf
mov
mov
jns
test
into
sahf
dec
jmp
ja
ds
xchg
es
add
lods
pushf
add
dec
out
push
add
rcr
push
inc
and
jo
jg
lock
popf
pop
xlat
into
xchg
cmp
or
mov
insb
xor
adc
mov
jns
cmpl
inc
dec
xchg
xor
dec
inc
lock
add
jmp
mov
cwtl
mov
mov
mov
insl
sub
je
icebp
sub
sti
out
stos
sti
inc
jle
repnz
das
dec
insb
addr16
push
jo
cs
jle
push
adc
jg
negl
cmp
in
mov
push
push
xchg
mulb
xchg
rcr
mov
test
ficompl
inc
leave
fdivs
test
scas
cmp
mov
enter
pop
shlb
fwait
dec
negb
mov
jmp
aas
fidivrl
mov
dec
js
int
add
roll
sub
dec
mov
push
nop
pop
sti
cld
xchg
stos
pop
aaa
pop
hlt
pop
cltd
mov
and
add
fsubl
pop
fcoml
pop
aas
inc
hlt
shl
lods
rorb
pop
dec
rcll
dec
cmp
jae
cmp
push
lds
adc
push
push
push
jl
aad
nop
or
cmp
sbb
jnp
or
fsubrl
adc
fdivl
ja
sub
iret
xor
lods
dec
push
jae
pusha
add
push
mov
cmpsl
pop
jae
es
dec
fwait
or
pop
in
fsubrl
add
inc
fucomip
fcompl
sahf
fs
cmp
mov
and
jle
xorl
add
pop
mov
push
addr16
mov
xchg
pop
xor
pop
mov
add
dec
xchg
jns
lds
add
movsl
push
call
xor
dec
das
pop
test
out
in
pop
mov
rcr
push
into
pop
add
sub
out
cmp
mov
mov
push
and
pop
xor
cmpsb
pop
inc
movsb
push
out
mov
inc
out
xchg
scas
leave
add
xor
movsl
ljmp
sbb
add
dec
cmc
movsb
lss
sahf
scas
inc
daa
mov
adc
in
out
inc
sarl
out
insb
xchg
ret
mov
fwait
xor
xor
loope
sub
aaa
jmp
mov
pop
out
data16
xchg
lcall
aam
jno
faddl
insb
push
notb
mov
popa
out
jecxz
jg
push
in
cmpsl
add
mov
cmp
dec
fs
adc
lock
ret
fwait
sub
sbb
xor
add
pop
mov
mov
das
lods
test
pop
fimuls
icebp
sub
shll
xor
xchg
js
jle
xchg
jl
sbb
inc
fiaddl
sarb
mov
ljmp
pop
inc
fstp
adc
stc
test
ret
cmp
enter
push
cmc
cmpl
add
sbb
aad
and
fldenv
mov
stc
cltd
les
mov
js
pushf
mov
adc
mov
scas
mov
cmc
push
cmpsl
cwtl
fsubrs
fs
pop
inc
icebp
ficompl
adc
xchg
lea
test
call
dec
jge
mov
mov
adc
sbb
arpl
popa
fsubl
jge
wrmsr
popa
bound
ret
shlb
cmp
adc
cmpsl
and
jns
cwtl
mov
data16
push
popa
push
std
jmp
or
mov
push
pop
push
into
push
lea
ret
test
inc
mov
cmp
dec
pop
jl
pop
pushf
adc
clc
push
push
inc
jno
jg
cmp
mov
dec
mov
out
mov
inc
nopl
jo
leave
cli
and
dec
fsub
pop
xchg
push
lods
lock
out
lods
xor
cmp
shr
sbb
lea
mov
cmpsb
adc
pop
outsb
dec
push
rorb
pop
addr16
cmp
out
pop
fwait
sbb
cs
mov
fwait
pop
pop
lods
sti
loope
sbb
movsl
sbb
push
out
lods
mov
mov
loopne
xor
mov
add
lret
pop
sub
stos
fucomip
fcmove
xor
push
jl
int3
xchg
mov
or
ljmp
sub
int3
mov
imull
mov
cmp
mov
scas
adc
xchg
push
push
insb
in
xchg
dec
mov
lods
fdivl
orl
adc
xor
add
fwait
mov
jmp
mov
dec
mov
xchg
pop
push
mov
pop
adc
lret
add
aam
leave
jb
stos
jb
push
decb
sub
cmp
xchg
mov
or
sbb
cmpsb
inc
ret
cmpl
insb
or
lahf
sub
mov
jg
lea
sarl
jnp
jmp
mov
pushf
mov
xchg
inc
mov
and
gs
lds
shll
sub
xlat
fbld
ds
xor
sub
inc
push
loop
xor
in
fsub
adc
decb
bound
rolb
ljmp
fisttps
add
mov
pop
adc
lahf
call
adc
xchg
pop
push
push
or
sbb
jae
cli
adc
shrb
xchg
sbb
jns
das
mov
incl
outsb
loopne
mov
mov
cwtl
adc
inc
fistpll
notb
mov
dec
sbb
dec
movsl
jnp
notl
sbb
std
mov
sbb
lret
pushf
mov
stos
or
jno
lock
dec
mov
mov
xor
mov
xor
add
adc
adc
loop
xchg
imul
push
add
test
and
mov
or
mov
scas
les
out
bound
jo
mov
scas
mov
mul
jmp
test
scas
sub
adc
pop
lret
mov
repz
mov
pop
sbb
es
push
cmp
mov
jmp
xor
ret
push
pop
pop
hlt
mov
and
xchg
and
in
push
cmp
nop
outsb
jns
pop
jge
mov
hlt
push
mov
in
dec
das
into
adc
mov
je
hlt
in
daa
stos
or
imul
xor
pop
jl
mov
mov
lock
pop
jnp
stos
es
lock
or
push
repnz
mov
ljmp
rcrl
pop
lock
sub
pop
push
mov
data16
cmc
push
push
push
ss
inc
test
out
hlt
repnz
ljmp
pop
mov
hlt
repz
data16
movsl
pop
jns
stos
cmpsl
mov
scas
mov
add
pop
inc
cmp
clc
xchg
loop
and
mov
aam
jmp
test
and
push
sahf
mov
mov
mov
push
jno
imul
mov
cli
dec
cmpsb
mov
rcl
fisubrl
stc
add
fiadds
adc
sbb
cmc
scas
cmp
outsb
aaa
sbb
int
push
xor
into
push
les
in
andl
mov
aad
ret
nopl
xchg
pop
sti
clc
das
loopne
adc
hlt
sub
pop
pop
les
sbb
mov
adc
pop
stos
add
fwait
addr16
cmp
arpl
xlat
leave
pop
out
push
scas
outsb
add
and
lretw
jecxz
orb
adc
nop
stc
jp
add
pop
aaa
fisubl
pop
pop
dec
mov
mov
lea
in
ljmp
or
dec
push
dec
rcl
inc
mov
lock
adc
fsubl
jge
xor
mov
inc
fwait
lahf
pusha
loope
inc
cmp
lahf
dec
js
adcb
xchg
jl,pt
mov
xor
adcb
dec
lods
adc
ja
inc
cmp
cmp
sub
add
loopne
and
int3
add
push
cmc
xor
cmp
sub
adc
cmpl
aad
outsl
pusha
mov
loop
jl
aas
push
push
pop
push
clc
push
pop
stc
mov
sub
aaa
sub
imul
clc
jl
pop
mov
xlat
ja
int
cli
mov
mov
adc
aam
cltd
cld
adc
xor
cltd
and
cmc
icebp
test
aas
sub
mov
rclb
mov
popa
mov
add
pop
xchg
popa
out
repz
sbb
push
rorl
dec
jp
loop
inc
repnz
aaa
ret
mov
jb
and
pop
xchg
cs
pop
xor
push
cs
ret
repz
mov
mov
dec
out
push
mov
insl
test
int3
addr16
imul
dec
lea
jno
sti
out
mov
xor
xchg
or
into
es
sbb
int
inc
xor
pop
xlat
jmp
xor
inc
lahf
sahf
les
in
dec
test
scas
adc
and
push
loop
nop
cmc
add
es
sbb
xchg
addb
mov
inc
mov
add
scas
cs
add
xchg
sbb
lcall
xor
aam
mov
into
mov
rorb
add
mov
out
mov
mov
cmc
pop
and
add
push
push
mov
out
test
jnp
push
xor
mov
enter
bound
popa
mov
xchg
add
scas
ljmp
int3
movsb
and
mov
jns
pushf
insb
test
in
inc
iret
and
repnz
pop
pop
or
or
rorl
and
daa
dec
in
bndstx
dec
lret
xor
jnp
out
or
jle
stos
mov
rorb
jp
fwait
mov
adc
arpl
popf
shll
and
loopne
sub
sbb
sbb
test
jle
ljmp
xor
cld
and
jle
popl
out
rcrl
and
enter
mov
inc
mov
mov
pop
push
xchg
testb
das
outsl
mov
push
xchg
and
lret
jne
or
insb
xchg
lds
movl
lcall
dec
jp
jnp
pop
mov
repnz
inc
pop
shlb
pop
jmp
fwait
jle
xchg
imul
adc
aad
pop
xor
lds
loopne
lods
mov
sub
fs
call
sbb
push
pop
daa
inc
xchg
repnz
pop
jg
xchg
push
mov
inc
and
push
add
mov
test
jmp
lret
mov
mov
add
xor
or
mov
leave
sbb
loopne
adc
adc
push
sub
add
push
mov
adc
push
aaa
sbb
inc
add
add
adcb
mov
mov
cmp
nop
bound
mov
sbb
jmp
hlt
rorb
movsb
out
mov
xchg
push
daa
jnp
mov
cltd
jb
aam
add
push
xchg
sub
clc
push
fs
std
sbb
jmp
sbb
sahf
xor
pop
lods
iret
inc
push
xchg
scas
mov
pop
jne
mov
gs
sbb
mov
imul
ror
std
mov
iret
and
sbb
xchg
push
scas
out
mov
jg
sub
cmp
and
xchg
aam
and
cmp
xchg
jne
fwait
adc
scas
mov
xchg
mov
adc
imul
sahf
mov
pop
sbb
inc
jne
lea
int3
pusha
enter
es
pop
mov
and
mov
outsl
stos
shll
jmp
jo
popf
xor
enter
push
sbbb
mov
xchg
cmc
das
shrl
push
jp
inc
jbe
test
add
nop
jecxz
dec
jg
inc
mov
jmp
stos
sarb
pop
lock
fdivrl
xlat
mov
imul
xor
movsb
enter
mov
loop
add
pop
sub
enter
cmp
push
sarl
jne
mov
or
inc
push
dec
pusha
push
aaa
sub
jl
jmp
mov
xor
mov
push
ret
insb
or
stc
ficomps
mov
stos
push
push
lahf
pop
add
mov
sbb
jae
cmpb
lods
stos
mov
popf
xchg
adc
stc
push
nop
aam
inc
mov
pushf
sahf
sti
jnp
test
call
fsubl
std
push
dec
xchg
jno
pop
fidivs
xchg
test
jp
iret
scas
jp
rcl
jbe
xor
xchg
outsl
ret
xor
sarb
jge
inc
cmpsb
cmpsb
mov
hlt
xor
mov
pop
sub
ret
or
das
jbe
mov
rcll
push
dec
mov
sbb
clc
stc
jp
jo
stos
dec
aad
jae
iretw
repz
sti
aam
xor
imulb
jb
mov
mov
cld
xor
aas
push
pop
mov
clc
sbb
mov
cmp
mov
push
mov
xor
fwait
push
sti
gs
or
add
call
out
stos
jnp
or
dec
mov
cmp
shll
xchg
leave
jno
sahf
fsubrl
mov
repz
mov
mov
lea
pop
adcb
cmp
push
mov
ljmp
fs
pop
mov
jb
mov
ja
add
add
ljmp
mov
repnz
push
add
ss
mov
mov
repnz
ficompl
xor
sbbl
mov
mov
test
movsl
or
mov
dec
sub
add
xchg
cmp
dec
repz
pop
add
jg
add
add
sbb
pop
icebp
cwtl
cmp
sti
mov
xchg
and
push
arpl
sub
scas
and
dec
jno
cmp
sub
addr16
mov
inc
addb
and
iret
add
pop
cwtl
mov
cmp
ret
jne
jl
andl
adc
jle
in
mov
or
sahf
inc
stos
inc
mov
jbe
mov
mov
and
call
movsl
aad
mov
call
pushf
cmpsb
imul
lock
gs
pop
add
out
in
push
cld
lods
outsl
xchg
lock
sbb
jnp
outsl
push
jno
mov
lds
lcall
ljmp
call
inc
mov
icebp
sub
lret
subl
out
mov
rcl
out
faddl
mov
shrl
daa
add
sarl
adcl
scas
test
or
cs
jae
mov
test
push
dec
mov
fadds
les
stc
idivl
in
scas
aaa
mov
adc
scas
jp
out
xchg
scas
adc
call
into
fs
dec
sti
repz
std
xor
add
and
cltd
or
push
or
xor
gs
dec
jge
mov
xchg
cmp
psubq
dec
sbbb
into
mov
push
out
adc
mov
js
or
mov
mov
push
xchg
cmp
jmp
and
push
push
enter
add
aaa
cmp
clc
mov
sar
push
sbb
pop
bound
rcll
aaa
pop
and
push
stos
and
in
mov
jbe
test
xor
ret
dec
jg
mov
imul
xchg
sub
sti
cli
mov
or
lahf
mov
ljmp
rcrb
jno
or
in
push
push
ja
jae
xchg
cwtl
in
jg
xchg
inc
cwtl
cmp
jl
jecxz
test
shl
aas
fdivrs
xorl
and
sbb
imul
and
push
sahf
mov
dec
fucomi
push
lds
sbb
rorl
outsl
ret
outsb
not
sub
xchg
prefetchnta
fisttpll
cwtl
push
mov
imul
idivl
push
mov
xorb
adc
insl
cwtl
sbb
cld
fstl
cmp
push
pushf
jno
rorl
addl
mov
inc
adc
jb
dec
rcll
or
mov
fcomps
rcrl
and
add
fxch
xlat
mov
test
push
add
add
dec
std
and
scas
and
mov
xchg
testl
dec
or
mov
subl
mov
icebp
testl
enter
sahf
jmp
ss
fisttpll
insl
ror
mov
jb
jae
imul
push
push
mov
sti
int3
test
out
xor
test
xor
adc
jp
pop
push
sti
stc
mov
lahf
sti
int3
add
mov
movl
scas
sahf
ja
jbe
inc
popf
mov
inc
das
inc
ljmp
sbb
jo
sub
shrl
inc
and
mov
sbb
xchg
in
sub
dec
ja
hlt
mov
sub
lret
adc
fidivrl
shrb
mov
and
sbb
xor
outsl
std
call
insl
aas
adc
shl
push
imul
mov
inc
dec
dec
cwtl
sahf
fbld
cmp
xor
out
mov
add
push
aaa
and
push
mov
inc
adc
cmp
stc
pop
lods
sbb
jnp
div
es
mov
jno
std
shl
cmc
ror
mov
adcl
test
xchg
icebp
and
xchg
cmp
pop
push
push
xor
add
mov
outsb
hlt
dec
mov
repnz
cmp
inc
or
imul
in
xlat
fidivrs
scas
sub
push
mov
jnp
imul
and
insb
push
or
mov
hlt
push
ljmp
iret
or
add
clc
mov
fmul
jp
mov
cmpxchg
cwtl
cmovb
dec
push
inc
dec
lds
ljmp
pop
fwait
sub
popf
cli
push
jle
xchg
jmp
pop
scas
mov
cmp
test
dec
cli
push
mov
fsubr
inc
add
popa
out
mov
enter
or
rcrb
or
in
sbbb
sub
and
mov
loope
imul
inc
or
mov
fsubrs
sbb
push
icebp
dec
aaa
pop
push
xor
and
xchg
xchg
test
xor
adc
ljmp
mov
fstl
out
cli
mov
dec
out
insl
lods
sbb
and
xlat
arpl
sbb
mov
cmpl
pop
jg
les
cmpsl
fisubl
or
mov
loope
sbb
pop
das
repnz
inc
mov
dec
xchg
dec
xor
jo
das
leave
movsl
or
xchg
out
decl
xor
xchg
sbb
bound
xchg
mov
lods
out
xchg
add
fsts
push
repz
scas
mov
fistpll
loopne
mov
lock
loope
push
mov
lods
jp
adc
pop
lds
outsb
int3
aaa
sub
cmp
in
js
sbb
inc
stos
xor
xor
bound
lret
rolb
sub
mov
mov
inc
in
inc
xchg
iret
sbb
inc
arpl
sbb
jge
jno
sbb
jl
and
outsl
xor
out
cld
pop
mov
testl
repnz
aad
pop
daa
lods
push
push
ljmp
popa
jb
xchg
xor
pop
sub
ficomps
lahf
xor
xor
lds
push
iret
dec
subb
cld
gs
xchg
xchg
rcrl
leave
mov
mov
mov
addr16
inc
adc
fildll
adc
cwtl
cmp
lret
dec
and
or
js
xchg
js
inc
lahf
xor
dec
orl
xchg
clc
sub
stc
fistps
dec
lcall
rcrb
icebp
fsubrs
add
mov
cmpb
push
stc
jno
or
aam
sahf
mov
sbb
mov
ret
xor
add
cmp
repz
ret
xchg
adc
fucompp
imul
add
aaa
call
adcb
movsl
mov
xchg
mov
xorl
movd
loopne
js
sbb
fwait
cmp
sub
dec
adc
std
push
fisubrl
push
fdivl
sbb
insb
mov
inc
in
bound
push
das
lahf
xlat
lcall
add
in
leave
inc
pop
movl
or
dec
xor
mov
mov
out
repnz
and
aaa
jle
test
cli
jp
pop
xchg
stos
mov
add
sahf
fsubl
pop
scas
xchg
jae
dec
pop
mov
xchg
xor
fdivrs
mov
push
aad
adc
and
loop,pt
daa
loopne
insl
mov
iret
rorl
orl
add
in
loope
loop
mov
cmp
arpl
sbb
inc
pop
out
pop
pop
pop
imul
cmp
stos
cmp
test
jae
cmp
jne
mov
and
and
gs
inc
cmp
cs
pushf
lret
sahf
sbb
dec
cmp
push
cmp
popf
call
stos
push
jne
jnp
in
xor
std
inc
lea
adcl
push
out
cli
rorl
out
or
jne
movsb
roll
mov
mov
or
scas
sbb
push
enter
dec
fs
add
sar
inc
jb
xchg
cltd
adc
bound
pop
add
bound
cmpsb
hlt
pop
rol
repnz
xor
in
or
and
das
dec
sub
inc
in
outsb
mov
push
xchg
lods
out
rolb
insb
mov
inc
cmpb
in
or
fadds
ffree
cwtl
popa
mov
lcall
mov
adc
inc
xor
adc
mov
jg
pop
dec
mov
jg
inc
aaa
or
sti
arpl
jle
mov
or
ret
push
pop
cmp
add
mov
lds
negb
push
pop
cli
xor
mov
inc
sarb
sub
mov
cltd
pusha
std
shl
cmpsb
pop
das
aaa
std
sbb
lock
dec
xchg
inc
out
cmc
ret
aam
ret
pop
daa
cs
xor
mulb
mov
fwait
daa
mov
jle
movsb
mov
jle
or
pop
aas
push
add
and
arpl
movl
xor
or
jge
jmp
sahf
ljmp
mov
push
rcll
push
jg
jb
ss
daa
mov
dec
push
fiaddl
fsts
fdivl
out
fisubl
shr
rorb
add
xor
adc
hlt
push
fstl
rcrb
fstl
mov
push
xlat
stos
fisubrs
sbbl
jg
aam
mov
jb
dec
lahf
jnp
pop
arpl
lret
and
fcmovnb
es
pop
and
jmp
loopne
push
cli
pushf
in
xor
fadds
out
cmp
lea
pushf
fisttpll
les
std
repz
in
mov
sarb
mov
stc
pop
je
xlat
cmc
adc
imul
stos
cld
and
cltd
inc
aas
xchg
or
mov
stos
mov
mov
or
sub
add
sbb
push
ds
cmp
and
fldt
out
repz
sub
out
pop
pop
clc
mov
testb
mov
xorl
movsb
insb
jmp
dec
mov
stc
sahf
add
shl
in
push
sbb
cmp
lret
out
outsl
leave
fcomps
lds
fdivp
je
pop
mov
xor
stos
push
cmp
jl
ret
pop
leave
scas
test
pop
jnp
or
cmc
int
inc
cmp
fsubrs
inc
xchg
call
mov
cmp
and
out
popaw
fidivs
pop
das
dec
push
add
ret
ljmp
adc
cmpb
lcall
loope
adc
sbbl
add
jle
stos
push
ljmp
addr16
sub
sub
inc
adc
aam
pop
sahf
sub
mov
sub
push
inc
lcall
lcall
lock
push
rorb
fisubrs
test
clc
and
pushf
popa
arpl
stos
out
pushf
ja
xchg
dec
cmpsl
addr16
push
or
sbb
inc
andb
or
rolb
sub
inc
shll
or
outsb
sub
add
fldt
pop
out
fs
and
stc
icebp
jle
jno
test
mov
pop
dec
nop
cwtl
lret
xchg
rcll
pop
cmp
cmpsb
sti
mov
test
movsb
push
dec
daa
pop
and
popa
pop
add
push
add
gs
add
mov
mov
or
jmp
aas
xchg
lcall
rcrb
jb
sarb
push
push
aad
imul
insl
push
out
stos
sbb
adc
popf
sbb
dec
cmp
addr16
jns
popf
or
jmp
fsubp
bnd
fistl
aam
push
push
sub
dec
in
jecxz
sbb
mov
jno
das
dec
mov
jns
mov
pop
clc
outsl
mov
jge
stos
or
addl
dec
movsl
or
sub
mov
bound
xchg
lea
dec
lcall
mov
pushf
test
dec
movsl
fsubs
push
sbb
mov
mov
jb
mov
loopne
xlat
cltd
lds
push
xchg
mov
leave
fldt
test
jle
pop
ret
add
push
jbe
mov
add
inc
jmp
aad
sahf
xchg
sbb
sbb
xor
icebp
aas
push
ja
test
xlat
mov
cmp
jne
mov
jp
and
xor
push
out
out
leave
push
cmp
push
or
pop
jne
gs
popa
jb
inc
mov
push
push
adc
enter
mov
sbb
adc
ret
daa
out
push
jg
dec
cli
push
sahf
in
xchg
repz
mov
test
loop
into
inc
sub
fcomp
je
rcr
dec
dec
pop
inc
outsl
inc
cmp
xor
jmp
leave
xor
mov
mov
cmp
adcl
in
cmp
popa
pop
sbb
mov
dec
sbb
jle
stos
outsl
xchg
scas
mov
cmp
xlat
add
dec
mov
pop
jns,pn
jae
sbb
mov
das
jbe
push
sbb
pop
xchg
jb
xchg
fmuls
mov
fbstp
pop
sbb
xor
pop
sbb
sbb
out
sbb
pxor
mov
outsl
inc
test
inc
popa
or
inc
mov
cmp
jecxz
pop
mov
dec
mov
mov
mov
xchg
jge
push
xor
and
call
js
fists
cmp
pop
dec
lock
insb
scas
mov
fisttpll
sub
jmp
xchg
dec
mov
je
hlt
bound
test
and
dec
loop
sub
mov
lds
cmp
jo
sub
push
cmp
cmp
jle
pop
imul
push
or
dec
push
add
inc
inc
aam
cmp
loopne
les
stos
mov
outsb
xchg
pop
inc
sub
adc
packssdw
mov
test
sarl
sub
mov
push
insl
cs
popf
aaa
in
cmp
std
jne
or
xchg
or
jnp
inc
dec
push
xchg
pop
adc
fmulp
repz
lcall
repz
inc
pop
popa
pushf
js
dec
xchg
jnp
out
add
mov
inc
push
dec
in
loopne
jecxz
mov
dec
lock
test
stc
hlt
lock
jg
fcompl
ficompl
clc
mov
das
mov
pop
inc
push
jmp
cmp
mov
fldenv
imul
mov
and
mov
add
lahf
jecxz
dec
cmc
mov
add
ds
jl
mov
xchg
icebp
das
adc
xchg
or
and
xor
mov
xchg
ja
dec
out
xchg
sub
jge
ret
sub
andb
cli
sbb
adc
aam
das
xor
jb
in
pop
enter
aad
cmp
iret
mov
bound
lds
cmp
mov
sbb
insl
xchg
sbb
inc
xchg
pushf
insb
into
jp
sbb
push
cmp
fsts
add
xchg
push
fsubrl
out
jae
mov
jmp
aad
sbb
xlat
push
adc
out
stos
mov
sub
jb
mov
push
or
inc
inc
sbb
or
test
imul
xlat
inc
adc
fnstsw
add
adcl
in
mov
inc
push
fdivs
int
sbb
mov
sbb
and
std
fwait
mov
lods
jp
loope
stos
mov
inc
fstpt
ja
std
in
mov
bound
adc
adc
jnp
stc
jbe
bound
mov
mov
cmp
jge
rolb
adc
inc
cmpsb
pop
push
xchg
das
fcmovne
and
cwtl
jb
scas
scas
pop
jecxz
adc
lcall
or
and
sub
xchg
and
mov
loop
pop
push
addb
mov
inc
inc
js
out
push
pop
mov
jl
xchg
mov
mov
xlat
pop
mov
repnz
push
in
bound
rcrb
dec
jne
adc
mov
dec
pop
push
jp
cmp
sbb
ja
adc
enter
sarl
inc
out
sbb
push
nop
in
mov
cmp
jle
and
dec
lea
mov
adc
in
xorl
jmp
jecxz
mov
dec
sbb
sbb
cmpsl
bound
call
arpl
push
sub
popa
or
adc
sbb
fwait
mov
hlt
jp
std
push
pusha
loopne
inc
daa
rcl
cmp
xchg
jecxz
push
movsb
bound
mov
inc
icebp
call
push
push
imul
stos
orl
mov
inc
int
add
or
xchg
insl
mov
add
xor
sub
in
out
bound
mov
cmc
sbb
cmpsl
mov
loopne
imul
inc
mov
sub
into
push
insb
sub
push
mov
push
dec
fwait
inc
push
into
repnz
inc
cmp
sti
adc
xchg
mov
xlat
addr16
lods
mov
icebp
xor
xor
out
insl
and
es
mov
sub
push
jae
jge
inc
sbb
in
mov
and
inc
dec
xchg
pushf
jbe
mov
sahf
lret
movsb
mov
pushl
mov
arpl
imul
mov
push
push
mov
inc
movsl
data16
jle
cs
mov
lods
jmp
repnz
sbb
and
lret
mov
jo
mov
xor
sahf
mov
mov
or
lret
lods
jle
les
pusha
fwait
or
mov
das
mov
adc
stc
jnp
push
out
rcrl
xchg
test
cld
adc
cs
lahf
repz
jle
fistpl
mov
bnd
cmc
repnz
mov
mov
cwtl
jge
cmc
es
dec
std
fldl2t
lods
or
sub
test
mov
or
and
push
add
stos
lret
pop
leave
sub
aam
sbb
lds
outsl
sbb
sbb
aas
hlt
rcrl
mov
sbb
push
fnsave
das
mov
pop
pop
and
inc
cmp
cmp
push
cmc
mov
mov
sub
add
ss
and
cli
insl
jb
daa
pop
stos
xchg
mov
ret
or
setle
pusha
out
shrb
int3
insl
lret
out
mov
add
jne
sub
lock
fisttpl
xchg
ret
shlb
mov
and
test
ret
std
sbb
mov
mov
aad
js
sbb
jb
test
mov
in
xor
jnp
orl
jbe
sahf
ss
adc
call
mov
fwait
imul
mov
push
xchg
ret
inc
pop
shl
mov
jmp
xor
sarb
mov
outsb
mov
or
cmc
mov
pop
mov
adc
sub
pop
arpl
inc
add
push
push
mov
test
ljmp
mov
inc
std
scas
aam
clc
jno
js
mov
movsb
repz
mov
sahf
into
sbb
iret
jbe
jnp
or
je
clc
push
pop
aam
test
iret
push
mov
push
inc
push
je
push
cmp
popf
mov
adc
or
call
scas
fstpl
push
shrb
gs
xchg
adc
rorl
aas
test
fwait
scas
enter
jmp
sahf
xchg
xchg
jo
movsb
fiaddl
sub
mov
daa
sbb
in
jae
xchg
mov
pop
xor
cmp
lds
adc
add
or
bound
orb
repz
int3
xchg
popf
xchg
adc
cli
test
pusha
or
out
push
sub
lcall
jae
xchg
pop
push
or
cmp
xchg
mov
inc
sbb
js
daa
loopne
andl
es
xchg
jle,pn
sahf
sub
mov
or
xchg
adc
sub
mov
xor
movsb
xchg
mov
adc
push
pop
mov
sbb
rcrl
jecxz
loopne
xchg
jle
adc
mov
pop
xchg
push
dec
in
stos
pushf
fisubrl
sbb
adc
adc
movsl
das
sub
sbb
dec
ljmp
adcl
hlt
in
in
inc
mov
loop
fwait
jno
mov
test
sahf
out
aas
popf
hlt
dec
cmp
lahf
sti
pop
lret
clc
jns
pop
add
mov
xor
pop
je
ja
lock
or
and
fmul
subl
jp
popa
jno
jne
sbb
pushf
mov
xchg
mov
ret
hlt
adc
cld
sub
dec
loope
inc
popa
cmp
lock
inc
test
std
mov
push
fwait
cmp
fistpll
fcoms
stos
aas
stos
xor
in
pop
sub
test
sbb
jle
mov
arpl
pop
dec
int3
andb
mov
mov
ret
push
int
push
lahf
sbb
pop
call
xchg
movl
pop
sbb
test
loop,pn
sahf
mov
dec
add
xor
hlt
outsl
sub
ja
sbb
xor
inc
and
out
mov
mov
cmp
sti
ljmp
pop
and
xchg
push
enter
xchg
jg
xchg
xor
and
inc
sbb
aas
jo
sbb
mov
or
jae
inc
push
push
cmp
aam
jmp
lret
stos
or
sbb
add
adc
mov
in
addb
addb
sub
popf
sub
lret
mov
loop
adc
popa
scas
bound
pop
push
pop
mov
pop
or
lret
xor
out
movsl
out
fnstcw
add
xor
sub
mov
dec
call
adc
jno
mov
mov
mov
call
cmp
lret
pop
stos
push
fs
mov
pusha
loopne
sub
xchg
lea
mov
xor
mov
outsl
in
aaa
mov
je
pxor
out
idiv
nop
mov
dec
pop
fisttps
mov
insl
dec
mov
cmp
xor
adc
gs
pop
adc
sub
xor
pop
cs
popf
sbb
lret
pop
das
dec
nop
or
dec
pop
or
add
ror
add
stos
idivb
mov
mov
andb
sub
mov
repnz
fsubs
imul
jp
pop
add
and
dec
xor
stc
arpl
dec
cwtl
jb
jle
mov
cld
sarl
fsqrt
add
out
push
dec
frstor
add
pop
fwait
lea
xchg
scas
fsub
xor
aad
dec
mov
jb
mov
push
mov
mov
mov
lds
mov
mov
push
inc
mov
push
dec
xchg
out
das
subl
test
rcrb
xor
push
mov
mov
movsl
dec
clc
and
ja
stos
jge
lret
sarb
fwait
xchg
lcall
xor
inc
ret
aad
dec
xchg
mov
loopne
pop
fmuls
jo
in
cmc
add
imul
ja
js
call
insb
in
cld
mov
mov
or
popa
scas
sbb
dec
inc
ds
mov
mov
imul
mov
outsl
enter
in
jg
cs
cs
cmc
imul
push
arpl
xchg
adc
int3
std
sub
mov
push
xchg
jecxz
pop
fcompl
insb
xchg
and
das
lock
pop
or
testl
pop
ljmp
and
movsl
mov
rolb
lods
jl
fiaddl
jne
loope
sbb
dec
add
stc
xchg
mov
push
push
sahf
rcrl
add
inc
or
out
lea
add
insl
or
mov
add
loopne
xor
xor
pop
xor
xchg
loope
movl
out
or
mov
fisubrs
jecxz
clc
rorl
add
adc
scas
jno
arpl
pop
out
xchg
or
add
adc
movsl
lret
stc
outsl
dec
fbstp
fcompl
sbb
out
mov
rcl
dec
test
shll
bound
ljmp
decb
cmp
out
xchg
lahf
xchg
lea
jne
shll
push
ljmp
and
test
add
imul
out
jecxz
adc
jge
mov
fstps
dec
sahf
insl
ss
rol
rorl
push
aad
scas
or
int3
push
outsb
mov
jl
adc
mov
insl
enter
push
insb
jno
jl
sub
imul
insl
mov
mov
cmp
xor
enter
ljmp
test
mov
lds
jbe
lea
jmp
loope
les
pop
outsb
and
je
cmp
dec
scas
lods
addr16
jno
pop
mov
sbb
add
sbb
pusha
dec
sub
cmpsl
shr
mov
sub
inc
and
mov
jecxz
cwtl
cmp
lret
pop
gs
xchg
mov
call
push
out
and
pop
dec
popf
xlat
lea
and
loop
add
jmp
pop
add
dec
push
insb
dec
jno
fnstsw
dec
push
in
clc
pop
rclb
in
lcall
cmp
inc
cmc
lock
mov
jne
push
dec
cmc
xor
adc
xchg
addr16
sub
jns
insl
inc
cmp
popf
pop
adcb
mov
sbb
dec
xor
in
mov
aas
cld
add
and
out
addr16
ja
lret
mov
test
cmp
in
mov
pusha
sub
mov
nop
je
and
cmp
mov
ret
icebp
sbb
in
lret
add
clc
xlat
jno
lds
mov
lret
hlt
inc
fildll
mov
pop
stc
mov
cld
lcall
mov
pop
mov
int
in
es
out
jbe
mov
jle
lret
and
int3
fidivl
fs
divl
inc
mov
mov
int
add
mov
repnz
mov
adc
jmp
rorb
pushf
mov
mov
jmp
sbb
or
cmpl
jo
enter
pop
in
push
in
insb
test
fucomi
mov
shlb
out
dec
sbb
addr16
mov
and
pushf
pop
fistl
sub
fistpll
aas
push
stos
aam
xor
xorl
and
inc
pusha
sbb
dec
mov
cltd
mulb
sbb
adc
xchg
shrb
mov
jno
rclb
js
add
shll
out
lods
cwtl
pusha
cs
mov
pop
imul
out
mov
repnz
xchg
daa
notb
stc
popa
xor
push
enter
push
sub
aaa
je
mov
dec
pop
icebp
pusha
rcll
mov
dec
push
sbb
lahf
hlt
sbb
outsl
ja
mov
divl
scas
iret
scas
sbb
xchg
push
xorb
push
mov
sbb
dec
xor
jp
imul
aaa
cmp
in
js
adcb
sbb
xor
call
inc
mov
test
das
stos
es
mov
sbb
xor
fwait
lock
loopne
xchg
xchg
ds
cwtl
sub
adc
std
roll
pop
jae
sub
sahf
push
lret
xorl
fldlg2
mov
cwtl
arpl
shrb
aas
add
je
dec
cltd
aas
jae
mov
js
fcomps
and
lods
sub
fs
jecxz
xchg
sub
popa
imul
into
or
popf
ljmp
test
push
mov
cmp
loope
arpl
lret
adc
ret
add
aaa
push
mov
fstl
xor
icebp
fsts
pop
or
icebp
mov
andb
mov
nop
ljmp
pop
andl
add
push
fsub
ss
inc
das
push
in
xchg
xchg
call
pop
pop
pop
add
test
mov
mov
subb
xor
xor
aaa
pop
xchg
testl
cmpsb
pop
int
fidivl
js
cli
or
fwait
mov
mov
mov
push
or
cmp
int3
xor
or
jl
and
cltd
add
mov
nop
adc
popf
leave
rol
ljmp
insl
arpl
ja
shrl
push
jmp
adc
jle
addr16
inc
aad
xchg
push
mov
jmp
mov
cmp
pushf
call
xorl
shlb
pop
daa
add
or
push
and
in
aaa
mov
push
push
insl
hlt
loop
iret
xchg
sar
inc
lea
mov
jnp
add
inc
test
adc
movsl
outsb
fidivrs
xchg
jne
xor
outsl
add
jb
cld
negl
rol
lea
les
stos
lcall
scas
scas
fldenv
push
loop
mov
dec
cli
clc
test
cs
push
in
scas
xchg
jl
js
ljmp
loop
aad
shlb
inc
jl
sbb
push
lret
sbb
mov
jo
push
test
adc
mov
fistps
fnstcw
or
mov
inc
add
es
adc
mov
mov
in
jecxz
lds
arpl
icebp
bound
negb
xor
dec
pushf
add
test
enter
jge
int3
out
fsubrl
fldcw
pop
dec
mov
out
scas
test
pop
into
nop
add
lahf
fisubs
mov
adc
popa
jnp
push
jmp
lds
in
popa
jae
lds
pop
xlat
into
mov
bound
pop
in
cmp
mov
call
fimull
sbb
sub
popa
mov
sbb
int
cmp
xchg
cmp
xchg
xor
or
stos
pop
mov
dec
dec
jno
sti
mov
or
push
dec
pop
fwait
fwait
stos
jl
les
subl
mov
mov
or
shrl
aaa
aaa
into
ljmp
mov
mov
jbe
add
arpl
pop
push
insl
fnstenv
xor
or
xchg
das
icebp
cwtl
mov
imul
xchg
mov
dec
testl
das
movsl
aas
adc
sub
ret
adc
mov
and
repnz
or
sbb
iret
xchg
push
inc
ficoml
sbb
stc
push
push
addb
inc
shll
push
iret
inc
adc
in
aas
cmpsb
idivb
repz
mov
test
push
sti
cmp
xchg
add
dec
adc
xor
mov
stc
loop
cmp
cmpsl
rdtsc
mov
in
mov
imul
outsl
sbb
dec
mov
xchg
jle
je
lahf
inc
mov
xor
mov
adc
ret
inc
jl
in
rol
or
fwait
mov
and
cmp
negl
or
xor
pop
ficompl
in
bt
les
sub
xor
outsl
nop
push
fldenv
int
lock
or
insb
ret
aas
std
mov
test
dec
jns
je
repz
cmp
int3
icebp
repz
scas
test
sbb
fs
push
out
add
sub
dec
loope
inc
jne
out
pushf
cmp
lds
fldl
sub
stos
pop
mov
cmp
or
jg
push
cmp
mov
std
adc
sbb
cmp
jmp
out
push
inc
fdivrl
shlb
xchg
popa
xor
loopne
adc
jl
mov
adc
push
shll
mov
popf
mov
fstpl
mov
fmul
mov
ret
cmp
or
push
push
in
call
mov
loope
out
xor
repz
lret
dec
sub
dec
or
xchg
inc
jge
adc
mov
and
enter
cs
aam
push
aad
and
enter
add
cmp
fsubrs
fwait
mov
fcmovu
xor
sub
test
fldln2
xor
loope
sub
push
and
pusha
dec
and
cmpb
fs
cmpsb
test
sub
out
mov
mov
sbbb
sbb
lea
loope
add
dec
mov
out
push
outsl
int3
mov
mov
les
jns
xchg
jnp
mov
lea
cmp
xorb
cld
jge
ja
pop
mov
push
fcomi
subb
mov
int3
dec
data16
or
cmpsl
lods
scas
push
mov
pusha
lock
adcb
shlb
int
arpl
movsl
mov
lret
xchg
data16
add
pop
push
xor
loop
js
jmp
xchg
mov
push
mov
lcall
inc
jns
sbb
pop
mov
xor
je
jecxz
add
cmpsl
movsl
add
in
sbb
pop
and
movsb
mov
roll
sub
or
push
jmp
add
push
mov
sub
shll
dec
fistpl
shll
pop
hlt
sub
sbb
js
sti
sub
clc
pushf
push
mov
lret
iret
loopne
inc
xor
sbb
dec
fisttpl
loope,pt
dec
fs
in
jno
cmp
imull
inc
std
and
in
testb
jo
mov
push
xchg
xchg
sarl
lret
das
loop
out
pop
fistpl
mov
mov
movb
dec
cmp
inc
jmp
test
out
adc
clc
je
imul
out
ds
iret
test
fwait
cmp
mov
stc
adcl
xor
jle
add
xchg
jo
fildll
xor
push
lret
sbb
push
pushaw
pop
cmp
movsl
aad
jmp
daa
lds
shl
add
repnz
lods
add
dec
aaa
int3
fisttpll
pusha
lds
inc
imul
insb
sbb
iret
dec
cmp
pop
loop
xor
lahf
cld
ffreep
or
popa
sub
xchg
jge
mov
popf
inc
sub
and
jle
xor
ss
push
pop
xor
push
jo
popf
push
jns
lods
dec
int
mov
out
stos
stos
mov
sub
inc
mov
and
stos
mov
lds
sub
mov
movsb
jns
push
mov
imul
pop
cwtl
sbb
sub
fwait
stos
stos
je
orl
inc
adc
loop
jmp
push
ljmp
mov
xor
cwtl
cwtl
jns
mov
or
adc
pop
add
fsub
jb
inc
fildl
call
mov
inc
pop
xchg
rcll
out
rcr
sub
adc
sbb
mov
xchg
and
fs
orb
add
inc
test
add
cmp
push
dec
push
mov
fistps
and
cmp
mov
je
push
and
jle
in
mov
or
sbb
inc
pop
cmpsl
xchg
sti
shrl
push
fisubs
xchg
mov
adc
sub
pop
nop
or
lret
dec
arpl
pop
aaa
inc
in
dec
cld
sub
sti
or
enter
sub
xor
cmpsb
xchg
icebp
sbb
or
jmp
scas
mov
ds
inc
in
jno
pop
repnz
or
fmulp
mov
loop
nop
fdivrl
dec
pop
movsb
push
scas
adc
push
out
pushf
out
repz
cltd
dec
mov
rorb
js
inc
push
clc
aaa
xchg
fsts
sub
sub
clc
mov
or
das
into
push
push
stos
jne
push
xchg
push
into
xchg
or
pop
push
roll
cmpsl
xchg
sub
sub
xor
nop
lock
inc
mov
pop
dec
push
daa
lock
fadds
xchg
pop
imul
arpl
shll
mov
decl
pop
and
add
jecxz
add
imul
and
lcall
leave
pop
popa
aaa
sbb
sub
sbb
das
add
outsl
jb
divb
mov
inc
add
jg
push
push
imul
or
mov
push
outsb
push
jecxz
and
xor
xor
adc
movsl
add
jbe
lahf
loope
xlat
scas
jg
xchg
xor
dec
sub
cli
cmpsb
int3
sbb
push
ficoml
jns
pop
popf
sub
subl
inc
adc
nopl
pushf
push
adc
adc
pop
add
lret
dec
testl
ljmp
aas
push
jo
pop
push
jge
imulb
dec
pop
or
lods
loopne
iret
les
mov
in
dec
call
cmp
stos
mov
movsb
rcll
shlb
dec
cmc
inc
push
inc
clc
mov
push
scas
popf
mov
js
stc
outsl
pop
movsb
dec
ljmp
enter
jae
shlb
cmp
lods
mov
imul
stos
out
rcr
pop
jne
dec
aam
roll
dec
in
mov
repnz
mov
fdivr
jmp
pop
clc
loopne
sub
mov
fiadds
cmpsb
das
adc
mov
test
ds
cs
sub
decb
ljmp
aaa
test
sub
mov
testl
inc
aad
pop
mov
sbb
pushl
cmp
cmp
lcall
sti
lret
jbe
and
inc
mov
mov
movsb
rcr
loop
aas
jl
mov
lock
and
fimull
dec
mov
notl
xor
pushf
fnsave
pop
sti
les
outsb
add
xor
lcall
in
popa
cmp
xchg
lods
imul
fstps
push
jg
sbb
mov
cmp
stc
inc
pop
mov
dec
sub
lea
popa
and
in
decb
ss
sub
popf
xchg
repnz
sbb
nop
sbb
xor
xchg
insl
jnp
ja
test
push
sar
imul
xchg
aad
rorl
sub
dec
sbb
cmpsl
imul
sub
mov
aam
out
xchg
pop
xchg
push
add
movsb
mov
in
xor
lea
pop
cmp
jb
jne
aaa
sbb
mov
push
cmp
aam
shll
xor
test
dec
dec
mov
or
push
jecxz
sbb
addr16
aaa
in
data16
jmp
fldcw
pop
dec
xor
fldenv
inc
pop
push
aas
cmp
test
loope
popa
mov
jbe
xor
fildll
adc
pusha
pop
or
cltd
outsl
push
outsl
pop
imul
push
pusha
fstp
mov
sbb
shrl
shrl
push
cld
pop
mov
test
pop
iret
sahf
stc
xor
mov
jge
adc
xor
jecxz
push
push
outsl
insb
mov
loopne
xchg
adc
dec
xor
push
cmp
cmp
pushw
push
repnz
aad
sti
daa
mov
clc
xchg
popa
enter
rcll
cmpsl
mov
pushf
add
in
adc
pop
push
jnp
push
sub
push
das
or
pop
mov
fcompl
mov
cmp
pop
xchg
icebp
int
push
mov
dec
cmp
aam
movsl
or
push
lds
xchg
inc
and
lret
add
jb
cmp
inc
sub
insb
movsb
aam
js
lods
andb
pop
jecxz
inc
arpl
xchg
sub
das
xchg
cmpsl
and
call
xchg
test
pushf
and
jmp
addr16
arpl
adc
pop
fnstsw
sub
sbb
adc
xchg
call
jo
pop
xchg
inc
xchg
jns
cmpsl
stc
push
inc
cmpsl
aad
push
cmp
fnstcw
add
call
sbb
std
test
add
in
test
cltd
sub
ds
icebp
push
outsb
ficoml
and
xchg
dec
mov
jb
mov
loope
dec
mov
test
lret
mov
mov
popf
sbb
mov
dec
push
add
mov
shl
lock
scas
push
out
arpl
sub
stos
int
sbb
push
out
adc
mov
adc
in
ljmp
fdivs
push
mov
into
ret
sahf
ja
dec
rolb
pop
je
movsb
dec
data16
loop
cld
lea
rolb
sbb
idivb
mov
stos
xchg
xchg
lds
fs
mov
add
lods
dec
je
stos
mov
fsubs
cwtl
enter
in
stos
test
fldcw
xor
lods
int3
add
adc
imul
out
loope
out
scas
mov
mov
add
movsl
and
push
jns
jbe
lods
int3
mov
pop
ja
cmp
jno
clc
sub
jns
cmpsl
std
dec
dec
and
mov
loopne
addr16
xchg
or
adc
inc
xor
loope
mov
xchg
mov
cli
sbb
iret
dec
and
in
cmp
sbb
testb
lea
mov
int
adc
lods
out
lcall
xor
subl
lods
sbbb
insb
sbb
push
inc
pop
jmp
fsub
and
cmpsl
scas
sarl
jmp
xchg
sub
add
jnp
repz
jno
imul
leave
or
in
cmp
hlt
flds
leave
int3
jns
les
cmp
pop
lods
sub
sub
lea
mov
movsb
aam
shrb
testb
xchg
add
sbb
cmc
jmp
adc
int3
out
std
pop
push
mov
js
out
adc
mov
paddd
cmp
jno
addr16
enter
mov
scas
pop
cmp
xchg
lea
shlb
ret
xor
inc
pusha
adc
flds
hlt
and
xor
into
scas
xchg
dec
roll
es
xchg
xchg
and
inc
rcrb
xlat
int
fnstenv
orl
ficomps
dec
jns
mov
sahf
int3
out
aaa
ja
dec
sbb
lret
jae
mov
cs
adc
sbb
lret
sub
xchg
sub
sub
xchg
sbb
out
mov
xchg
ror
dec
pop
aas
xor
xchg
add
mov
xchg
mov
enter
mov
dec
cmp
rcrl
and
outsb
mov
adc
push
dec
and
jge
or
add
pop
lahf
adc
nop
dec
pop
jbe
or
xor
setns
out
imul
cmpsl
leave
jae
test
pop
stos
outsb
shl
fincstp
ljmp
mov
or
ficoms
nop
cld
sub
outsb
or
enter
out
cmc
mov
inc
jmp
jb
jg
pop
enter
push
or
stos
out
sbb
aam
jnp
cli
ljmp
jne
bswap
cltd
out
cwtl
rcll
lods
xor
cmp
cmpsb
push
mov
cwtl
cmp
test
jp
push
dec
paddw
popf
inc
js
add
sub
sbb
xor
mov
lret
and
jecxz
and
lock
add
pop
jl
cmp
mov
mov
pop
stos
test
add
xor
push
imul
cmp
sbb
sbb
shl
in
mov
sbb
cltd
jge
dec
inc
movb
aad
shlb
sarb
push
das
stos
movsb
ss
xchg
xchg
inc
movsb
pop
xchg
aam
add
jo
ds
xchg
bound
jne
sub
push
in
shlb
xchg
jb
cmc
sub
xchg
jb
in
lods
dec
loopne
int3
cwtl
pop
adc
into
add
fwait
mov
sti
pop
ret
add
mov
aaa
jp
mov
test
add
pop
fisubrl
mov
movhps
sarl
or
mov
pop
popf
cs
and
ret
jecxz
pop
pop
cmp
lahf
mov
imul
sahf
add
fwait
adc
or
or
cmp
stc
enter
pop
add
ret
sub
fiaddl
mov
jne
and
rol
lea
jmp
jle
or
push
jnp
jno
pusha
ja
sarb
mov
cmp
inc
shll
jnp
sti
xor
add
scas
lods
js
insb
ds
jecxz
add
lcall
data16
leave
dec
or
xor
sbb
les
stc
jo
mov
dec
mov
int
out
invd
sub
lahf
pushf
cmpsb
es
int3
daa
int
inc
inc
rorb
push
std
test
cmp
repz
pusha
and
ficoms
cmpsl
push
stc
adc
or
add
aad
scas
push
push
jbe
mov
mov
push
dec
pop
fwait
cmpsb
pop
loop
rcll
imul
mov
daa
adc
inc
xor
scas
cmpsb
je
dec
imul
dec
xor
cmp
inc
aad
push
jno
jmp
lahf
imul
sub
leave
or
pop
mov
cltd
cmp
jae
leave
jns
fsubrl
in
xchg
popf
stos
fld
les
mov
xchg
minps
pop
scas
les
es
cmp
andl
or
xchg
xchg
push
sub
xor
shlb
pop
dec
pop
sub
add
and
cltd
fyl2xp1
int
aaa
adc
lret
mov
and
mov
shl
mov
stos
ss
lahf
aas
cwtl
aaa
daa
adc
cmp
out
movsl
or
jecxz
and
dec
dec
mov
sti
add
xchg
jns
xor
and
arpl
daa
fldt
mov
lods
xor
mov
inc
loop
cmc
jl
sbb
aam
mov
push
sbb
enter
sti
imul
or
mov
mov
sahf
ds
lds
jns
push
arpl
cs
lret
mov
jg
js
mov
xor
pop
mov
loopne
dec
xchg
jne
jbe
pop
das
jns
movsb
push
xor
pop
addb
jecxz
xchg
jg
cmp
cmp
xor
sub
adc
jno
shlb
xor
xchg
lods
jle
adc
jbe
adc
icebp
les
add
adc
adc
push
or
insb
cmp
int
add
in
pop
scas
pop
in
fwait
xlat
aas
movsb
rcl
je
pop
push
mov
fs
pushf
cmp
jno
js
jle
movsl
push
inc
push
add
jmp
bound
fstps
gs
cmp
shlb
sub
pop
shrd
jae
scas
fistpl
test
stc
inc
shll
icebp
test
incl
jg
or
or
mov
mov
hlt
dec
scas
or
pop
arpl
mov
mov
loope
dec
loope
test
loope
arpl
into
mov
xchg
lds
repz
xchg
iret
das
inc
xchg
aad
mov
jmp
aas
insb
jmp
cmp
mov
or
lods
lret
lock
jl
mov
mov
inc
loope
jo
cmp
fldt
mov
mov
jbe
pop
push
mov
mov
cmpsb
fidivrs
daa
lcall
idiv
add
leave
mov
xchg
arpl
gs
push
inc
pop
incb
lret
sub
mov
cmpsl
xchg
int3
and
ret
pop
fcomp
pusha
aad
inc
into
mov
dec
sub
unpcklps
jb
pop
sar
es
cmp
mov
pop
xor
pop
push
les
mov
pop
push
aaa
pusha
cmc
xor
pop
fimuls
xor
lcall
rolb
adc
sub
xor
and
dec
loope
adc
scas
mov
xchg
testb
mov
jnp
scas
jp
sub
movsb
pop
fiadds
lea
leave
and
inc
into
xchg
cmpsl
jmp
push
pop
push
and
dec
rcl
add
sub
js
shll
test
lret
add
arpl
adc
in
mov
pop
sahf
add
or
icebp
xchg
pop
xchg
lret
jmp
jg
daa
xor
cmpsb
mov
mov
jmp
inc
xor
sbb
in
push
in
data16
pop
or
lods
in
mov
jecxz
les
lret
dec
add
stc
push
sub
shll
jp
ss
fimull
push
jbe
jle
xchg
pop
cs
mov
bound
mov
mov
and
icebp
mov
popf
sbb
jno
out
scas
pusha
dec
test
xor
cs
je
mov
mov
pop
out
leave
mov
popf
repz
and
inc
ds
push
lret
sub
add
sti
or
add
scas
mov
cmp
rcrl
pop
movsl
xchg
mov
pop
mov
sbb
sbb
fisubrs
jbe
cwtl
add
adc
fsubl
push
mov
lcall
mov
or
cltd
push
adc
outsb
arpl
xchg
in
jecxz
incb
pop
sahf
adc
pop
cmpsb
or
sub
test
ja
aas
push
lods
ja
fnstsw
dec
or
movsl
xchg
mov
in
incl
add
dec
mov
fucomp
repnz
or
shl
sbb
inc
insl
fadds
push
insb
jge
gs
imul
sub
and
cmpl
stc
fldenv
push
sarl
or
xor
or
int
popf
ss
push
out
ret
xchg
pop
cmp
iret
lods
rorb
add
mov
daa
pushf
add
push
inc
inc
lea
pop
pusha
jecxz
adc
bound
pushf
leave
add
in
lea
jecxz
mov
lods
xor
xchg
out
in
fisttpll
ret
outsl
ja
pop
insl
fsubr
dec
adcb
mov
in
adc
out
jb
es
push
add
test
xor
icebp
stc
in
add
xchg
jno
mov
loop
cltd
pop
adc
jo
stc
adc
jge
cmc
stc
pop
push
cmc
cltd
xchg
pushf
rcrl
dec
ss
lret
and
mov
xlat
jo
rcr
rcll
js
xor
ja
pushf
daa
jne
inc
jnp
cmp
ja
dec
les
ja
loopne
aad
jns
mov
xor
pop
dec
pop
ficoml
pop
adc
inc
js
pop
dec
push
mov
cmpsl
cmp
ljmp
out
xor
mov
inc
fsub
xor
jne
in
add
pop
imul
cli
adc
add
mov
and
dec
and
je
in
xchg
push
ja
mov
mov
xchg
rolb
stos
lds
inc
inc
test
or
cmc
mov
jae
jg
inc
repnz
xchg
add
int
or
leave
mov
jmp
es
rcrb
imul
ja
xchg
or
mov
cmp
lret
imul
sbb
aam
or
xchg
out
cltd
ljmp
or
mov
movsl
adc
inc
sbb
repnz
xchg
push
popf
inc
bound
repnz
aaa
dec
aad
or
cmp
lret
mov
mov
mov
lods
pushf
in
pop
stc
cwtl
dec
inc
fnsave
iret
roll
insb
inc
mov
xor
ret
cmpsb
pop
push
stc
adcb
sub
movsb
sbb
cwtl
xor
nop
xor
push
pop
cmp
sub
jecxz
jmp
cmp
in
dec
xchg
lahf
mov
sub
shll
cmp
ljmp
push
cmpsb
mov
pop
add
pop
pop
jnp
js
or
push
or
imul
iret
push
repz
adc
adc
fbld
mov
jae
xchg
mov
inc
in
std
jle
ret
adc
add
inc
into
ret
and
inc
dec
mov
mov
push
jne
test
rorl
add
pop
je
push
in
fisubrs
out
out
xchg
adc
out
mov
add
sub
sbb
repz
and
xlat
dec
cmp
push
cmp
jge
mov
fs
sub
xchg
push
mov
shrb
orl
mov
stc
jge
int
test
xchg
test
mov
mov
adc
dec
js
fisttps
fwait
xor
push
call
jl
sbbb
aam
push
mov
movsb
add
stos
fidivs
mov
test
pop
cmp
dec
imul
imul
movsb
shlb
xchg
mov
and
sbb
cmp
add
fs
push
mov
daa
xor
mov
inc
popa
hlt
push
cmp
int
pop
cmp
mov
outsb
xorb
data16
scas
or
je
pop
in
test
and
out
out
sbb
push
xchg
or
xchg
leave
lret
clc
in
fimull
push
mov
in
xchg
mov
scas
shrb
pop
sub
jns
pusha
and
jge
xor
xchg
stos
ss
cli
push
es
xchg
jle
xor
sub
xor
sarl
mov
das
xlat
dec
push
rorb
pop
and
inc
and
in
jbe
xchg
sti
sbb
jmp
or
push
mov
or
aaa
scas
or
adc
mov
popf
xlat
inc
je
and
mov
incl
push
inc
jns
inc
ja
inc
and
push
shrl
cmp
aaa
call
in
xchg
jp
imul
dec
fwait
cmpsb
mov
shrl
push
jecxz
cltd
dec
enter
neg
xchg
lahf
lods
push
mov
cmpsl
jo
int3
jb
in
mov
out
jg
ffree
mov
and
jecxz
lcall
and
test
xor
cmpsl
mov
sub
mov
jge
cwtl
mov
mul
test
repz
out
adcl
lds
xor
xchg
xchg
pushf
jmp
mov
arpl
cmpsl
jns
movmskps
jno
jae
insl
and
jg
aad
adc
cmpsb
daa
push
rol
pop
movsb
pop
jecxz
fdivrl
movsb
movsl
jmp
mov
les
call
addr16
mov
nop
insl
stos
sbb
fwait
ret
xchg
jne
jmp
aam
ljmp
cli
bound
out
push
movsb
in
xchg
push
dec
sti
adc
xchg
lret
sbb
mov
dec
lock
mov
scas
mov
push
in
nop
daa
sbb
dec
adc
fildll
xchg
inc
lods
push
fnsave
push
cltd
imul
xor
nop
lret
adc
push
mov
pop
or
inc
idivl
add
add
xor
js
dec
push
mov
daa
sbb
sahf
loope
dec
jg
cmpsb
mov
divl
sbb
cmp
aas
lret
mov
mov
pop
fisttpll
push
test
lock
mov
jg
xchg
dec
inc
es
rolb
je,pn
rol
cmp
in
rorb
push
sub
insl
cmpsb
clc
hlt
stos
and
nop
les
aam
outsl
sar
movsb
movsb
mov
insl
xchg
scas
cmp
mov
lock
mov
mov
and
dec
lods
lock
jb
lahf
lret
push
lret
jo
push
imul
adc
jl
fcmovne
pop
xlat
aaa
adcb
jecxz
shrb
pushf
sbb
jg
out
or
mov
andl
inc
and
arpl
pop
cmp
aam
insl
jl
test
and
mov
or
xchg
jg
push
mov
mov
fsts
mov
in
shlb
mov
dec
int3
push
inc
sub
push
aad
xchg
cmp
or
sub
jg
fucomi
fimuls
lods
sbb
push
testl
lret
sbb
pop
inc
xor
addl
sti
ds
cwtl
icebp
insl
jg
sti
fdivl
roll
inc
outsl
les
mov
and
rcrl
xor
push
test
cld
sub
xchg
mov
shlb
ljmp
outsb
popf
out
imul
sub
das
and
test
pop
xchg
xchg
mov
in
or
jns
mov
and
bnd
movl
test
lahf
xor
mov
shl
data16
xchg
popa
or
adc
inc
fwait
test
rcll
lret
push
ja
lcall
test
jno
jno
sarl
xchg
pop
jg
ss
pop
xor
in
ret
cmpsl
insl
sbb
incb
stos
cltd
lcall
es
stos
and
stos
imul
out
out
mul
jo
fcoml
out
cmp
and
es
mov
xchg
cmc
push
sub
or
sub
outsb
mov
out
jns
aas
pop
jecxz
mov
popa
es
popf
sub
jecxz
repnz
cli
aam
out
jg
divb
scas
jnp
pop
stc
andnps
jbe
jmp
lods
outsl
adc
das
sbb
or
into
or
mov
aam
leave
ret
adc
and
test
sub
mov
jmp
sub
lcall
pop
std
daa
sbb
xor
xlat
scas
cmc
mov
hlt
iret
mov
inc
in
sub
sti
push
jg
pop
xchg
xlat
sahf
arpl
inc
jae
add
jecxz
repz
dec
mov
push
orb
xor
cmpsb
in
and
mov
rclb
cld
sbb
movsb
jns
insb
loopne
lea
xor
sub
adc
subb
push
enter
pop
inc
stos
add
aaa
fld
cmp
repnz
sub
js
imul
add
xchg
mov
lea
cmp
pop
adc
dec
pop
or
adc
pop
lods
sbb
fnstsw
push
push
movups
jle
decb
lret
aas
cld
loope
pushf
fcomp
movsb
andb
into
xor
scas
mov
push
or
xchg
mov
mov
or
xor
mov
add
ss
jbe
pop
es
out
test
ror
pop
jns
push
pop
push
inc
rclb
adc
das
jl
movsl
sub
outsb
xchg
stc
movsl
push
rcl
mov
inc
fcom
add
in
ljmp
jmp
popa
call
rolb
and
and
inc
mov
dec
push
movsb
repz
addr16
das
andb
out
jecxz
mov
add
add
mov
shlb
mov
cmp
jbe
inc
fs
loop
dec
movsb
mov
out
xor
loop
adc
arpl
pop
insl
test
pop
jne
mov
add
mov
lods
rcrl
sti
andl
lea
adc
mov
por
sub
sub
pop
inc
iret
jne
push
inc
jmp
in
mov
jp
in
inc
cmp
or
pop
add
add
mov
mov
or
dec
ror
or
int3
ja
jbe
mov
stos
sbb
push
imul
test
cmpsb
mov
gs
adc
scas
inc
fidivs
lods
rclb
or
mov
add
enter
imul
mov
sarb
fwait
jo,pn
pop
adc
jnp
push
mov
mov
sub
std
mov
xor
je
jl
sbb
test
gs
ret
insb
out
jbe
or
mov
and
les
add
sti
sti
xchg
mov
je
out
sbb
xchg
repz
xchg
jae
push
xor
repz
repnz
adc
fiadds
in
mov
mov
int3
in
pop
jmp
push
xor
mov
lahf
nop
inc
inc
adc
dec
fstl
mov
enter
push
push
mov
stos
xor
jg
adc
xlat
mov
outsb
adc
push
shll
mov
xlat
shrl
mov
lret
int3
pop
es
test
pop
sbb
es
pop
adc
loopne
sbb
xorb
or
sti
pushw
or
in
pop
push
mov
pop
xchg
pop
in
cmpsl
sub
adc
sub
xor
pushf
mov
pop
sub
int3
shr
add
shll
xchg
ret
loopne
mov
xchg
out
pop
sarl
xlat
out
les
ljmp
lods
push
adc
fidivl
imul
jl
das
add
cmp
and
add
aam
lea
jbe
xor
jo
inc
repz
imul
jecxz
inc
fwait
dec
mov
jbe
orb
mov
aam
push
and
dec
and
popa
fidivrs
mov
inc
cmp
pop
in
in
enter
pop
and
addr16
pop
enter
cmp
loopne
jge
in
cmpb
adc
ljmp
pop
inc
clc
cwtl
popf
call
jo
jmp
mov
gs
push
pop
pop
xchg
xchg
push
xor
vucomiss
pop
pop
stos
inc
test
loopne
mov
xor
push
and
pop
call
lahf
xchg
in
jb
or
fwait
or
jb
inc
sti
xlat
addl
xchg
cmp
mov
adc
std
or
cmp
push
push
ljmp
cmc
push
clc
inc
dec
test
test
outsb
pop
arpl
mov
cmp
jnp
push
orb
xchg
push
stos
and
xor
adc
data16
xor
in
pop
mov
mov
pop
aad
inc
fwait
mov
adc
push
pop
cmpsb
das
add
and
add
cmp
jmp
jmp
add
sub
jo
jp
rcr
mov
push
ljmp
icebp
fldl
jp
xchg
xor
ds
into
stc
jb
clc
imul
xchg
push
pushf
push
in
popf
dec
sti
mov
xor
and
lcall
xor
sub
xor
les
jnp
jae
dec
icebp
jnp
ja
pop
sub
jle
ljmp
mov
movsb
call
rorl
stc
adc
xchg
sub
pop
mov
xor
dec
jno
sahf
push
push
ret
pushf
or
das
or
or
mov
push
xchg
clc
cmpsb
lea
sub
jnp
bound
push
aaa
mov
cs
je
pop
add
js
daa
cmp
mov
popa
push
test
aam
sbb
fildll
in
xchg
popl
cmp
xchg
test
into
adc
dec
imul
sub
inc
pop
popa
repz
insb
lea
add
pushf
fisubrs
mov
sbb
adc
xor
das
sbb
dec
jmp
test
daa
jns
adc
jge
std
jne
and
mov
divl
cmp
or
add
jmp
pushf
andl
add
shll
shl
and
jbe
nop
cli
mov
mov
rol
jb
pop
je
mov
outsl
incb
je
lock
outsl
adc
pop
shl
pop
test
cld
sbb
ss
dec
mov
repz
outsl
sbb
nopl
pop
gs
in
lods
aas
dec
mov
xor
or
push
fisubl
mov
mov
ljmp
lahf
les
scas
dec
jg
mov
hlt
dec
lds
inc
cli
jg
pop
pusha
hlt
enter
popf
fdivrs
rcrb
push
das
mov
pop
int
into
xchg
frstor
out
iret
pop
pop
push
xor
cltd
aaa
inc
pusha
and
loop
rorl
addr16
mov
idivb
push
lret
mov
lods
and
cmpsb
add
inc
je
push
xchg
and
jmp
inc
mov
sub
add
push
cmp
mov
mov
movsb
fs
cli
fcomps
or
jnp
mov
lcall
cmc
push
sbbl
dec
loop
insb
out
adc
push
fstpl
dec
mov
dec
les
popa
cmp
jmp
inc
aad
lds
lcall
xor
push
shl
xchg
lea
mov
xchg
xchg
cmpsb
std
sbb
cmp
dec
ss
fstl
sahf
push
addr16
pusha
push
dec
sbb
daa
mov
mull
daa
mov
imul
and
jno
sbb
or
push
jnp
add
mov
sub
mov
out
mov
scas
rolb
aam
sbb
out
xchg
jns
and
sbbb
add
xor
adc
rclb
mov
fisubrl
mov
mov
pop
loopne
or
add
ljmp
movsl
dec
add
lret
mov
jo
push
sub
or
xchg
fucom
jmp
clc
std
dec
dec
cltd
scas
lea
pop
sub
ret
sbb
and
insb
lea
dec
pushfw
mov
in
push
das
movsb
pop
adc
sub
mov
lea
fcoms
jb
mov
inc
and
xor
inc
and
xchg
jge
ret
test
add
or
sub
add
ja
lret
cmp
fadds
pop
out
movsl
cmp
mov
call
pop
jbe
push
jl
xlat
add
inc
dec
mov
pop
sub
and
leave
into
or
dec
cmp
js
jno
inc
sub
xchg
xchg
xchg
ljmp
mov
fdivrp
cmp
xlat
mov
jns
lods
repnz
sub
jecxz
dec
adcl
pusha
mov
adc
adc
scas
xchg
insl
frstor
xchg
and
addb
cmpsb
mov
jp
and
xor
aaa
lods
test
lods
push
in
sbb
mov
ficompl
into
xchg
mov
mov
ds
les
je
add
ficompl
cmp
lock
sbb
sbb
cld
jp
jbe
push
dec
cmpsb
jno
adc
mov
scas
testb
xor
mov
xchg
scas
lret
jne
outsb
stc
sub
mov
inc
xor
pop
mov
aaa
mov
mov
mov
bound
addl
ds
test
out
xchg
into
jno
mov
ret
cmp
xchg
jae
lods
xchg
arpl
inc
push
xchg
test
int
call
es
cmpsb
xor
loope
lahf
dec
sub
andb
push
data16
and
cltd
clc
aas
fsubr
mov
add
pop
pop
dec
ds
xchg
stc
cmp
push
sub
push
sbb
sub
mov
jb
sbb
ja
mov
inc
dec
push
pop
xchg
cmp
dec
jmp
adc
test
or
bound
add
ja
mov
popf
js
pop
inc
imul
dec
js
jns
in
insb
std
dec
pushl
adc
xor
aad
outsl
jo
sub
inc
movsl
test
sarl
movsb
push
cld
mov
mov
or
sub
push
mov
jge
mov
aas
pop
push
jmp
jne
adc
pop
jle
dec
dec
outsb
push
bound
and
mov
mov
add
arpl
leave
and
pusha
out
test
jae
add
dec
xchg
sbb
cli
mov
sti
or
push
cld
test
loopne
inc
cmc
add
das
out
stos
in
fdivr
xor
jle
xchg
subl
ret
ja
sub
lds
sbb
rcrl
dec
movl
mov
std
lods
mov
lods
in
sbb
cld
push
cmp
fistpl
repnz
movsb
fs
adc
mov
iret
imul
xchg
jns
test
les
jmp
xchg
pmaxub
fldenv
fnstcw
mov
dec
fsubl
stc
ds
leave
xchg
jge
xor
shll
mov
iret
stos
push
addr16
loope
mov
movsb
fnstsw
mov
pop
gs
js
rcrb
testl
xor
dec
cmp
xchg
fisubrl
mov
in
fdiv
mov
leave
ficomps
mov
inc
rcrb
ret
add
clc
aam
xorb
rcrb
push
rcr
xor
xor
into
jo
in
xchg
lds
and
cltd
xchg
xlat
scas
hlt
out
pop
pop
jp
icebp
mov
mov
leave
ret
mov
pusha
mov
insb
push
sub
or
or
data16
dec
mov
jae
loop
mov
and
mov
int
cmpsl
mov
test
dec
js
movsb
fwait
int3
shrb
xor
mov
mov
pop
inc
mov
xchg
lcall
ret
cmpsl
out
cs
dec
icebp
shll
pop
lods
gs
in
add
jo
stc
push
sub
stos
push
outsl
mov
nop
mov
xchg
movsb
dec
fcomp
outsb
shl
xchg
push
adc
sbb
jecxz
sbb
fdivp
aas
loopne
scas
pop
xchg
cmp
adc
loopne
aam
lods
and
test
fcmovne
testl
in
inc
cmc
lcall
testl
xor
mov
xchg
into
and
movsb
daa
mov
adc
sub
cmp
dec
in
call
stc
dec
xchg
xchg
sahf
sub
cmp
js
push
xchg
inc
int3
sub
add
dec
aas
jno
pop
arpl
int3
inc
cmp
adc
jae
lret
pusha
or
push
push
and
xchg
leave
jmp
xor
std
or
outsb
mov
repz
cmp
in
dec
xchg
jl
fidivrs
ljmp
ret
mov
pop
jmp
das
add
add
notl
test
or
notl
dec
xchg
and
xor
mov
sub
fstpt
fildl
fnstsw
mov
lea
outsl
sti
cwtl
sbb
ret
cmp
loope
jge
jb
pusha
inc
adc
jge
or
mov
js
mov
fsubrs
mov
test
in
lahf
jp
adc
mov
push
nop
mov
sub
and
or
bnd
out
int
sbb
or
and
pop
push
or
push
mov
fstps
cmpsb
rolb
pop
clc
mov
lcall
mov
loope
dec
daa
ljmp
sub
fs
sbb
sti
arpl
mov
and
rorb
mov
mov
fisubl
inc
mov
lcall
insb
and
pop
mov
jo
dec
gs
lods
cmc
xor
cmp
outsl
jp
adc
push
out
sub
adc
inc
and
lcall
mov
cmp
stos
loope
cmp
jecxz
push
mov
add
daa
jp
mov
out
orb
int3
and
xor
imul
add
repz
jo
out
aad
fcmovb
bound
loopne
mov
and
jbe
cwtl
pop
jecxz
popa
pushf
jmp
add
sbb
popa
mov
dec
inc
mov
lret
ss
or
mov
xchg
ja
pop
mov
xor
out
inc
and
jnp
mov
push
xchg
cld
adc
test
mov
outsl
xor
fwait
mov
xchg
test
sbb
iret
mov
xchg
testb
mov
push
fadds
mov
sbb
mov
pusha
pop
mov
xchg
cmc
fistpll
push
or
push
lret
xor
sbb
push
lret
pop
lahf
imul
ret
lcall
sbb
push
or
not
scas
jmp
dec
lahf
stos
xor
ret
cmp
fst
lds
jmp
jns
cmp
out
cmp
dec
or
pop
dec
cmpsl
jo
sub
insb
aad
jns,pn
inc
bound
mov
adc
ss
or
sbb
data16
in
xchg
scas
scas
jo
out
add
fldcw
sbb
test
testb
push
and
js
add
jmp
aaa
js
scas
inc
notl
out
push
inc
lahf
test
dec
mov
cld
inc
inc
loop
pop
adc
addr16
shll
sub
xchg
pop
xchg
inc
out
repz
push
std
cwtl
cmp
mov
movsb
jmp
pop
jmp
frstor
adc
ds
xchg
add
stos
daa
jmp
jle
movsb
push
lds
mov
test
push
pop
dec
imul
mov
xor
push
push
mov
pop
add
div
ror
add
dec
push
jae
int3
sbbl
jmp
je
xchg
popf
ja
jnp
fnsave
pop
push
bound
js
ret
ret
insl
xlat
sbb
jmp
mov
mov
popfw
cwtl
je
sbb
xchg
mov
enter
shrb
mov
add
and
aam
jns
mov
testl
test
repz
jo
adc
sti
mov
sbb
and
loope
jo,pt
decl
jae
repz
add
fsubrs
pop
jnp
outsb
push
and
push
mov
out
add
pusha
in
add
push
and
lods
adc
test
nop
lahf
adc
push
stos
or
push
lds
push
aam
call
dec
dec
in
in
mov
fsubrs
lret
sti
xchg
adc
adc
cwtl
stos
or
leave
mov
pop
xchg
sbb
shll
cmpsl
jmp
sbb
and
sub
xchg
shrl
or
cmp
call
or
add
ret
mov
sbb
sbb
mov
xchg
pop
add
aam
add
into
lret
push
nop
clc
pop
sarb
cmp
mov
cmp
addl
add
xchg
outsl
sbb
mov
dec
inc
imul
call
in
jns
adc
cmp
push
bound
add
sub
mov
pusha
add
std
rcr
and
fcmovne
ret
dec
xor
movl
xor
call
data16
mov
adc
mov
aam
push
sbb
push
test
and
mov
loope
add
dec
test
cmp
push
testb
in
mov
arpl
aam
adc
scas
cwtl
mov
sbb
orl
movsl
aam
dec
dec
adc
in
dec
aad
jmp
add
jmp
les
mov
leave
jne
and
pop
adc
mov
cmp
sub
shlb
cmp
int3
push
pop
push
push
sbb
call
or
cld
jns
mov
cmp
test
ss
lods
inc
das
sbb
je
push
lds
cld
cmc
ljmp
xor
xchg
loopne
inc
or
mov
loope
add
in
cmpl
inc
sarl
pusha
fistpll
mov
cltd
test
push
xlat
out
xorps
aaa
adc
cwtl
and
mov
dec
sbb
mov
sbb
mov
dec
cmp
sbb
aad
js
cmp
and
xchg
inc
mov
inc
jmp
lcall
sub
movsb
sub
push
fdivs
insl
push
cmpl
hlt
fstpl
jbe
dec
dec
lret
aas
xor
mov
dec
xor
mov
mov
sbb
cmpsb
mov
jne
push
stc
pop
mov
and
sub
out
scas
mov
daa
inc
jmp
mov
fst
filds
pop
pusha
leave
or
lahf
or
enter
ss
dec
mov
cltd
sub
inc
pop
pop
jae
out
jge
xchg
add
mov
push
sti
js
test
pop
in
pop
ret
stos
xchg
enter
sub
fiadds
aam
lahf
mov
mov
sahf
pusha
adcb
xchg
push
test
cmp
pop
test
add
pop
in
into
ret
pop
jle
pop
loope
mov
pop
jmp
test
lret
pop
add
push
and
rcrl
bound
lea
ficomps
and
popf
out
pop
std
outsb
outsb
mov
scas
fldl
fstpt
push
cmp
in
das
enter
fsubrs
insb
test
xchg
fcomi
mov
xchg
mov
outsl
popf
es
fs
pop
push
push
jne
or
cmc
sbb
dec
push
dec
push
lcall
js
inc
add
shl
or
lret
das
lcall
sbb
int
add
clc
mov
sbb
outsb
ds
dec
insl
movsl
fsubrs
loopne
gs
insb
rorb
movsl
push
sbb
push
mov
movsb
mov
dec
add
fs
rcr
inc
rclb
out
pop
jg
push
and
mov
lds
add
ss
jno
push
jmp
sbbb
icebp
mov
mov
in
or
xor
adc
enter
les
xchg
cltd
mov
lahf
jecxz
repz
leave
aam
mov
insb
push
push
test
call
jmp
je
push
stos
bound
decb
ret
jb
mov
mov
fmull
dec
mov
fistpl
ret
out
mov
fwait
arpl
sub
je
icebp
push
fnsetpm(287
loopne
cli
stc
push
mov
or
cld
dec
ret
fdivrl
outsb
pop
and
add
repnz
add
enter
push
inc
int
pop
mov
inc
ret
inc
loope
imul
and
iret
outsb
lods
insb
sub
pop
shlb
adc
inc
int
test
sbb
push
adc
push
adc
fisubs
lods
leave
insb
mov
adc
int
and
insb
sub
push
dec
ja
negl
xor
test
jbe
adc
adc
and
test
lret
jmp
inc
mov
push
gs
mov
jne
and
in
je
add
jmp
adc
adc
pop
adc
lret
add
shl
test
adc
xlat
shlb
sbb
fnstenv
pop
push
mov
xchg
in
mov
rcll
inc
cmpsl
movsb
pushf
jge
cli
fsubrs
add
mov
scas
cmp
inc
jo
mov
enter
push
pop
mov
xchg
pushf
jmp
mov
push
idivb
in
ja
pop
js
dec
add
or
xor
movl
cld
std
addr16
insb
loop
jle
mov
cmp
cmpb
insl
jnp
mov
jne
mov
jge
in
inc
bound
mov
out
aas
cmc
adc
sbb
test
inc
out
fs
adc
adc
jbe
sub
fs
fs
mov
cmpsl
mov
inc
sub
mov
test
call
js
icebp
inc
enter
out
sbbl
or
xor
stos
jmp
cs
inc
fldenv
lods
fs
pcmpgtd
mov
ret
sti
aas
shlb
cmp
cmp
sub
adc
mov
sbb
adc
pop
pushf
imul
jmp
call
mov
lods
nop
mov
inc
pusha
jne
mov
sub
js
or
fldcw
xchg
jmp
mov
rorb
mov
xchg
aaa
add
adc
loop
cmp
add
xor
flds
dec
or
xor
fsqrt
scas
js
inc
std
adc
push
pop
push
rclb
movsb
adc
call
sbb
sbb
xor
jb
fwait
cwtl
inc
cmpsl
roll
sti
enter
in
pop
testb
sub
daa
loope
jmp
inc
lock
ja
inc
fucompp
cld
rol
cwtl
pop
mov
fs
insb
lock
or
andl
cwtl
sbb
mov
add
jge
adc
push
inc
mov
fs
push
inc
adc
fwait
mov
cli
pusha
fildl
pop
mov
rorl
jp
mov
jp
movsl
sbb
fs
pop
popa
sbb
cli
or
hlt
cmovnp
in
xchg
testl
mov
cmp
push
aam
adcb
or
xchg
in
insl
popa
and
inc
mov
and
adc
insl
add
ja
inc
sbb
out
aam
xor
sub
pusha
mov
je
rorb
jl
scas
popa
jge
push
enter
xor
adc
lret
push
aam
pop
sub
push
sub
loope
lock
push
adc
addr16
sbb
mov
cli
mov
mov
mov
mov
lea
sbb
outsb
clc
xchg
fisubrs
bound
outsl
stos
arpl
and
adc
xchg
jno
fsubrl
xchg
ret
shll
ja
mov
aad
cld
pop
mov
push
jne
add
inc
adc
ja
mov
or
mov
call
dec
sbb
ja
jnp
ljmp
mov
out
cmpsb
rcrb
dec
cmc
mov
jo
scas
push
dec
push
mov
adc
xchg
mov
scas
test
dec
out
push
bound
xchg
xor
and
bound
inc
repz
in
mov
cld
push
pushf
push
stos
mov
sarb
push
int3
xor
push
or
sub
clc
and
push
loop
lcall
cmp
mov
out
pop
sar
mov
mov
sub
pop
sub
jnp
clc
sub
add
cmpb
add
popa
lods
xor
mov
push
or
push
xor
ja
test
xchg
adc
mov
cld
imul
cs
xor
xor
divl
in
bound
int
mov
icebp
dec
imul
xchg
pop
fisubl
push
push
push
fildl
pop
fwait
jp
sub
pop
pop
push
mov
sub
fstps
mov
stc
jl
adc
shl
cmp
out
inc
mov
pop
jge
lods
lods
xchg
inc
cld
call
dec
jle
or
inc
imul
movsl
loope
into
add
std
outsl
xchg
pop
mov
cmp
into
push
mov
xor
les
cmpsb
mov
aad
jbe
mov
sub
sub
clc
xchg
mov
inc
lret
push
jge
scas
sahf
push
outsb
ffree
pushf
pop
add
addb
cltd
inc
shrl
cmc
lcall
rcll
ljmp
dec
cmp
jb
scas
push
out
mov
lods
lods
repz
leave
xchg
xor
fnstcw
testl
fstpl
jg
push
mov
push
scas
xchg
cmp
ret
adc
pusha
mov
mov
add
lret
popf
mov
ja
and
adc
inc
mov
sub
in
mov
inc
pop
daa
and
mov
adc
bound
sti
fs
mov
jne
xlat
neg
mov
daa
ds
lds
pop
lret
xor
and
dec
add
je
inc
mov
add
jp
ficompl
mov
or
in
sub
jne
ret
addb
sbb
int
mov
fisubl
inc
pop
cmp
or
jae
dec
sbb
add
adcl
mov
xor
cmp
lock
inc
sbb
xor
cmp
stos
adc
and
cwtl
jmp
cmpsl
xchg
mov
cmp
sub
pop
das
in
or
outsl
xor
rcr
insl
notb
pop
pop
adc
adc
mov
repnz
rcrb
pop
popf
gs
mov
mov
sti
push
push
xchg
shrl
inc
xchg
jmp
data16
fldenv
sub
pop
iret
repz
push
in
mov
pop
test
mov
lods
outsb
ds
movsl
jmp
clc
pop
pushf
mov
push
stc
bound
lcall
pop
cld
sahf
daa
dec
adc
rcrb
inc
hlt
cmp
and
insb
lahf
stos
mov
push
jnp
sbb
jns
jge
shrb
push
mov
push
jne
aad
cmp
lods
cvtdq2ps
in
in
xchg
mov
in
scas
sbb
fs
mov
jae
lea
mov
xorb
jo
inc
das
jns
or
test
andl
stos
js
sub
mov
push
movsl
lods
dec
and
adc
leave
dec
and
lds
cmpsb
outsb
es
ud0
hlt
addps
das
call
add
mov
dec
rolb
imul
sahf
ret
ror
push
or
dec
lcall
add
mov
fadds
push
into
adcb
lcall
repz
test
sub
mov
jl
inc
in
leave
sub
lds
cld
or
mov
rolb
dec
aad
fs
or
lods
mov
mov
mov
cmp
stos
add
dec
int
xlat
loope
gs
gs
cwtl
xchg
imul
popf
movb
inc
jnp
cmp
icebp
test
mov
inc
dec
or
imul
and
pop
fldt
ja,pt
call
in
inc
xchg
pop
cmp
xchg
fucomip
cld
daa
jle
or
loopne
ljmp
xlat
cmp
rorl
decl
adc
lret
xor
sub
pop
rcrb
cmp
cltd
punpcklwd
sub
lret
push
pop
in
dec
mov
pop
js
cltd
jo
xchg
push
sahf
add
mov
pop
pushf
outsl
addr16
inc
mov
sahf
add
mov
cli
mov
loopne
pop
cmc
faddp
inc
mov
cltd
loopne
or
out
shll
sarb
into
sti
shlb
dec
and
popl
ror
dec
xchg
lods
cmpsl
mov
mov
jns
jg
shrb
lock
or
push
jno
mov
sahf
int3
jbe
gs
les
sbb
cmp
mov
ss
sbb
push
outsb
jns
orl
iret
jle
out
out
in
push
fcompl
lds
leave
pop
mov
insb
push
rcl
or
pop
inc
call
repz
mov
cmpb
out
imul
jp
aam
push
sar
xor
and
jmp
pop
rolb
mov
or
cs
add
dec
daa
mov
dec
sbb
xchg
or
out
outsl
lret
movsb
push
movsb
xor
les
data16
lea
arpl
cmp
dec
int3
inc
mov
inc
and
jo
test
in
push
shlb
dec
ror
push
cwtl
lods
movsb
xchg
fs
or
jb
pop
in
inc
dec
sub
adc
inc
add
push
in
sbb
sbb
pop
sub
and
dec
mov
jb
push
and
test
mov
stos
cmp
jae
cld
sub
mov
dec
xchg
jne
xchg
xchg
std
cmp
mov
push
dec
push
iret
out
jo
mov
fs
jg
xchg
xchg
adc
int
repz
add
sbb
ret
or
mov
sub
movsb
js
sbb
shll
test
pop
fdivp
fidivrl
pop
mov
cltd
in
jns
pushf
dec
pop
shll
das
jmp
or
mov
sub
lahf
call
aas
pop
jmp
and
cld
les
ret
outsb
pop
std
mulb
or
fpatan
rcrl
cmc
adc
das
pop
insb
cli
jecxz
adc
push
sti
sti
sub
jae
push
faddl
aaa
call
addr16
or
xchg
hlt
mov
lds
imul
mov
cmpsb
xchg
push
movb
gs
cmp
add
xchg
rcll
push
sub
aas
mov
sbb
shl
adc
int3
das
mov
dec
inc
jecxz
inc
sbb
mov
stos
lock
or
xchg
addl
shrl
es
not
ljmp
dec
in
inc
xchg
stc
dec
mov
lods
adc
push
es
xchg
lcall
decb
lret
in
stc
push
and
lods
shll
sub
push
rcrb
and
scas
movq
add
adc
add
iret
aad
js
daa
sbb
outsl
sub
push
mov
fwait
push
xchg
hlt
rorb
fstpt
or
jno
aaa
loop
mov
std
or
sbb
mov
ret
sub
jns
jae
push
arpl
icebp
xchg
pop
js
jo
pop
inc
movsb
fadd
xchg
lea
fdivp
or
xchg
test
pop
adc
mov
pop
inc
mov
inc
xchg
cwtl
nop
or
jmp
leave
test
jno
push
add
adc
xor
mov
dec
fmuls
lret
mov
aaa
adc
rcl
repnz
sarb
dec
and
xchg
outsb
jne
ss
lcall
mov
int3
xchg
sbb
add
add
mov
pop
or
stos
shl
sbb
scas
mov
mov
dec
jbe
mov
lods
mov
jp
sbb
push
dec
dec
daa
loopne
jb
push
xchg
test
cmc
mov
jg
cmp
ss
jmp
lahf
aam
fildl
addl
int3
mov
ficoms
ret
pop
fwait
jnp
aaa
lret
cmpsl
xchg
ds
mov
loop
push
xlat
lods
fs
leave
dec
not
cmpl
arpl
ds
cwtl
sarl
jmp
int3
xor
ret
in
daa
lods
imul
dec
jg
xchg
repnz
sbb
inc
pop
sbb
lds
push
test
cmp
jno
xchg
xchg
xchg
movsb
push
mov
mov
push
andb
jge
xor
mov
pop
lods
test
mov
aaa
lock
and
or
sbbb
or
std
mov
fbstp
cs
push
mov
jns
icebp
sbb
or
and
call
shll
dec
cmp
and
or
mov
xchg
xor
pusha
or
dec
test
mov
inc
hlt
and
outsl
adc
mov
fabs
decl
lcall
dec
mov
jb
fidivs
into
mov
arpl
add
jo
mov
and
into
ret
mov
sub
and
jo
jmp
out
insl
aaa
lahf
and
mov
xor
movsb
mov
test
jmp
pusha
sub
roll
js
leave
xor
jecxz
sub
sbb
fisubl
fmull
scas
add
sbb
xchg
sarl
push
ss
dec
xchg
pop
mov
inc
enter
fldt
push
inc
mov
sub
mov
inc
add
cli
mov
jbe
call
push
pusha
jl
test
mov
add
pusha
mov
mov
movsbl
push
pop
out
insl
adc
daa
cmp
mov
lret
xlat
shlb
jne
dec
dec
inc
icebp
jns
xchg
jne
data16
loope
icebp
sub
inc
fld
cmp
jle
imul
es
stos
xchg
xchg
std
mov
data16
std
and
or
dec
sub
test
sbbb
roll
xchg
sar
lods
daa
push
sbb
xchg
icebp
out
inc
jo
pop
fldcw
xchg
bound
idivb
jnp
repnz
sarb
call
cmp
not
jle
sub
pop
in
std
cmp
xchg
jb
mov
sub
dec
scas
mov
mov
mov
hlt
in
shl
aaa
sbb
fwait
imul
push
jecxz
fdivs
cltd
loop
fildll
sbb
sub
test
pop
in
cld
push
mov
pop
pop
jne
lahf
jmp
ss
mov
xor
aas
sahf
mov
sub
popa
pop
sub
mov
ret
push
dec
rcll
xor
clc
das
push
sub
xchg
loop
xchg
inc
enter
mov
into
and
cmp
lods
xlat
outsl
xor
and
rclb
cmpsl
inc
add
mov
add
sbb
stos
inc
push
push
repz
movl
push
shll
mov
adc
inc
xor
push
pop
idivb
pop
inc
xor
xchg
sahf
shl
add
cmpsb
xchg
stc
xchg
jg
cmp
lret
cli
jp
aas
sbb
jl
cli
dec
jne
dec
imul
xorl
push
and
or
mov
and
inc
mov
xor
push
xchg
insl
xor
out
dec
adc
sub
rcrb
imul
dec
adc
je
mov
imulb
mov
gs
addr16
lock
jl
pushf
adc
adc
shlb
fwait
mov
xlat
lahf
rcrb
pop
xchg
mov
insl
stc
out
jle
test
enter
pop
insl
testb
xor
fidivrl
pop
pop
test
cmpsb
and
loope
add
jl
scas
jmp
shll
lds
and
jnp
addr16
pop
adc
call
or
cltd
add
jmp
arpl
lret
insl
sbb
mov
iret
pop
adc
sahf
cld
pushf
testb
jmp
out
aam
mov
call
sbb
call
lcall
pop
clc
push
in
xor
sub
pop
pop
fxam
fistpll
xchg
mov
sbb
cs
icebp
cmp
push
pop
cmp
lds
in
push
adc
or
fcomps
sbb
push
std
mov
nop
aaa
jg
cmp
int
inc
inc
lahf
xchg
cmpsl
dec
imul
movsb
pop
and
fs
mov
outsl
push
iret
sub
push
test
pop
clc
adc
gs
fidivl
loop
cmc
mov
clc
add
ja
xchg
adc
and
xchg
call
jecxz
out
dec
mov
sbb
and
cmpsl
testb
jle
jbe
sbb
dec
es
idivb
mov
std
cmp
xchg
dec
dec
lock
sbb
dec
sahf
jb
cwtl
rorb
push
cwtl
adcb
rclb
mov
cmpsl
repz
lret
sub
mov
xor
dec
cltd
pop
es
cmp
mov
pushf
jmp
inc
mov
clc
test
and
ret
pushf
loope
xchg
lcall
or
adc
mov
xor
lock
in
lret
clc
pop
jbe
nop
mov
rorb
mov
lods
and
push
loopne
inc
add
push
xchg
pop
sbb
fwait
pop
pop
add
movsb
sbb
sbb
in
add
xor
push
lods
lret
pop
mov
sti
add
lods
sbb
xchg
push
mov
pop
mov
imul
jle
ret
das
cli
loopne
or
test
adc
sbb
movsb
inc
sub
jge
pop
iret
mov
imul
adc
xor
pop
push
add
addl
mov
sub
jo
and
cld
std
cmc
cmp
xchg
sbb
popf
movsb
mov
aas
and
inc
loop
ja,pn
sti
or
test
push
xor
lds
cli
insb
push
mov
add
inc
leave
sub
push
iret
xchg
dec
sub
in
push
aaa
mov
fisttpll
dec
test
dec
xchg
test
cmp
sbb
jmp
subb
or
ret
icebp
mov
stc
jecxz
mov
push
frstor
lcall
loopne
adc
sti
sub
dec
jmp
push
jge
loop
dec
inc
imul
ja
pop
xlat
xor
clc
fdivl
cmp
into
int3
orb
xchg
inc
inc
push
mov
lcall
pop
mov
and
stos
adc
or
rcrb
mov
in
mov
sahf
lahf
mov
arpl
mov
arpl
push
lea
inc
and
or
bound
sahf
mov
out
jp
adc
add
mov
out
sbb
jg
sub
out
icebp
add
or
scas
data16
push
jne
lret
push
or
filds
in
aas
cmpsl
in
sub
aad
clc
sub
push
imul
ja
bound
and
xor
js
pop
and
jbe
or
cwtl
xchg
popf
stos
in
mov
jg
xor
jle
sbb
mov
pushf
andl
stos
fldenv
mov
pop
jge
les
mov
xor
add
les
cld
dec
hlt
test
cmp
loop
lds
mov
scas
push
aam
and
fdiv
lods
jnp
pop
inc
mov
or
mov
dec
outsl
popa
pop
pop
dec
flds
jnp
arpl
loopne
loopne
cmpsb
js
dec
fldenv
adc
inc
xlat
test
lcall
sarb
xor
xchg
lea
or
jmp
mov
dec
cmp
cmp
bound
ret
loop
inc
jae
rolb
cli
js
mov
pop
rcrb
jl
dec
out
outsl
into
fcompl
outsl
xor
jmp
push
mov
mov
push
or
fninit
and
or
out
inc
iret
jmp
xor
lcall
fcoms
gs
xchg
int
dec
lret
jo
mov
adc
push
adc
repz
mov
cmp
sbb
adc
jg
out
lods
fimuls
or
imul
push
xor
push
or
pop
in
sbb
cmp
jle
jecxz
scas
xchg
cmc
xchg
imul
mov
mov
dec
or
mov
add
add
mov
into
sub
pop
dec
cwtl
xchg
cmp
xor
aaa
lea
clc
or
mov
cmp
xchg
jo
pop
mov
pop
mov
loopne
cs
lcall
or
sbb
pusha
ds
outsb
add
es
das
push
loope
push
mov
push
addr16
inc
repz
sub
xchg
aam
and
lds
or
mov
pusha
xorl
jmp
in
sti
fildl
fs
out
sbbb
mov
inc
stc
mov
aad
add
xchg
dec
pop
and
fidivrs
mov
adc
sbb
rclb
rorb
pop
mov
xor
insb
ret
sti
mov
pavgw
mov
ja
sub
test
xor
mov
popf
pop
test
sub
xchg
add
add
loope
adc
mov
imul
rclb
scas
nop
inc
lret
adc
aas
mov
rcr
cmpb
mov
notl
adc
sbb
pop
jns
lock
pop
int
sbb
lret
push
xor
add
movb
mov
mov
xchg
ljmp
stos
inc
ja
adc
mov
inc
jmp
or
xchg
or
cltd
push
fwait
lds
out
and
popa
dec
mov
sub
loope
loope
mov
lcall
enter
std
add
jb
mov
scas
cmp
daa
mov
fidivrs
xchg
cmp
mov
push
sub
sub
cmp
xlat
aad
inc
cmp
lret
nop
push
dec
mov
inc
xchg
shlb
mov
cs
cs
sarl
jp
and
out
mov
or
or
fbld
data16
inc
repz
and
les
into
mov
movsl
jnp
jns
adc
mov
jle
dec
mov
push
cmp
or
inc
push
test
sahf
fists
mov
arpl
lret
in
cmp
jmp
in
pop
sahf
dec
pop
mov
fwait
cld
cld
cwtl
int3
pop
and
popf
jo
mov
inc
mov
xor
imul
inc
cmpb
mov
andb
sub
sbb
cmp
js
addr16
daa
fldt
sbb
adcb
setb
int3
jnp
xor
in
leave
inc
nop
stos
repnz
scas
mov
inc
loopne
sahf
in
xor
fildl
mov
and
dec
test
jb
or
adc
push
bound
mov
iret
and
mov
mov
or
fdivl
push
das
xor
or
jo
inc
mov
pop
push
xchg
cli
push
cli
mov
clc
sbb
or
daa
out
lcall
adc
pop
es
adc
push
mov
xchg
pusha
int
mov
repnz
add
ret
fcompl
adc
ret
aas
std
jmp
gs
jbe
mov
cmp
fdivp
and
or
int3
repnz
xor
testl
scas
add
dec
dec
cmovp
fmull
sbb
sub
fnstenv
adc
test
ss
mov
push
jecxz
xor
dec
stc
pusha
inc
or
pop
sub
inc
pusha
lcall
repz
loopne
push
xchg
std
mov
cmpsl
jbe
inc
xlat
sti
movsb
lock
lret
xchg
divl
dec
mov
rcll
test
pop
jge
out
mov
jno
xor
mov
adc
inc
push
pop
xchg
into
sbb
test
dec
sub
orl
xor
rolb
inc
jo
jo
adc
roll
add
pop
cli
inc
cltd
push
xchg
push
and
dec
fnstenv
les
xchg
sarl
pop
or
jecxz
sub
mov
cmpsb
xchg
cmp
pusha
cwtl
xchg
mov
push
xchg
pop
jle
mov
sub
mov
push
push
out
outsb
shll
repz
outsb
addps
cs
cmpsl
aas
test
out
add
in
push
iret
iret
xchg
ja
call
leave
add
aas
jge
aas
outsb
mov
mov
imul
pushf
inc
roll
mov
es
sbbb
call
pusha
aam
out
add
addr16
testb
andl
loope
add
addl
call
pop
and
in
xchg
mov
or
lods
dec
mov
cmp
jbe
lret
inc
dec
adc
adc
mov
pusha
mov
lret
sbb
xchg
mov
aam
outsl
inc
cmp
mov
ja
cltd
pop
cmpsl
in
mov
loop
adc
and
out
xchg
lahf
in
jno
sarl
in
cmp
dec
push
or
dec
fdiv
or
int3
mov
dec
dec
mov
or
pop
push
cwtl
icebp
dec
jbe
inc
mov
dec
add
adc
and
mov
in
fs
aaa
aad
aam
jmp
imul
lods
inc
xchg
fisttpll
push
mov
mov
pop
daa
jl
jb
sub
sbb
out
jno
sub
xchg
les
roll
push
cs
popa
dec
popa
fisubrs
lds
and
adc
push
or
mov
mov
fnstsw
cmp
and
lret
adc
loopne
pop
push
and
add
mov
jno
fwait
push
mov
pop
xchg
pop
or
jo
gs
popf
mov
push
pop
popa
insb
jmp
shll
mov
lcall
pop
repz
or
mov
dec
cmp
xor
test
int
adc
mov
sbb
scas
jp
cmpb
popa
and
cmp
mov
sti
into
mov
mov
das
inc
ljmp
pop
sahf
pop
push
push
jg
jne
mov
in
mov
cli
fdivl
into
mov
ja
rcr
imul
mov
repnz
xchg
push
loop
fistps
add
pop
xor
dec
xchg
les
cmpsl
push
outsb
cmc
mov
pop
aas
mov
jo
pop
mov
pop
enter
dec
iret
decl
sub
mov
rorl
mov
cmpsb
cmpsb
xor
dec
sbb
leave
xor
push
movsl
add
mov
in
int
jae
lahf
inc
add
add
lahf
hlt
neg
stos
leave
mov
xchg
and
out
popf
lahf
mov
lahf
cli
fstpt
inc
out
and
xchg
sbb
add
daa
out
in
je
inc
xchg
and
dec
popf
int3
or
int3
mov
aas
std
xchg
addr16
fwait
push
dec
ret
inc
pop
mov
mov
mov
xchg
dec
movsb
repnz
movsb
mov
jo
sbb
shrl
cmp
jg
test
or
adc
inc
and
out
imul
fldcw
nop
mov
imul
sbb
dec
jmp
jb
mov
or
push
mov
rcrl
aas
dec
stos
dec
adc
ss
les
jnp
roll
ret
test
lret
jmp
cs
int
dec
js
cld
push
scas
insl
push
pop
push
fwait
enter
sub
jmp
cmp
cmp
or
ret
jne
aas
insb
cs
pop
call
ficoml
testb
xchg
push
sbb
dec
enter
pop
mov
cmp
lea
jle
fdivs
adc
dec
outsl
pop
add
bswap
gs
jbe
mov
mov
std
jg
imul
jne
fidivs
inc
cs
lds
pop
in
push
inc
addb
outsb
push
subl
xlat
jl
xor
stos
aas
add
mov
filds
mov
cmp
movsb
insb
mov
or
cmpl
sub
js
jne
stos
xor
lret
add
ret
jecxz
nop
lret
cmp
inc
push
sahf
mov
movsl
push
mov
sbb
and
xchg
lods
push
sub
jmp
sub
push
mov
pmuludq
notl
mov
insl
mov
mov
scas
mov
rcr
scas
dec
enter
aas
xor
add
fsqrt
mov
cmc
pop
movsb
inc
jle
adc
imul
xor
loop
cld
pop
inc
popa
enter
xlat
or
lret
dec
add
jne
push
adc
int3
pop
loop
ja
vpandn
flds
ja
mov
mov
sbb
int
push
popf
out
mov
fildll
cld
fs
dec
sahf
out
jge
pop
gs
sbb
push
fldenv
mov
pop
and
rcrb
pop
or
pop
xor
pop
cmp
ds
dec
jecxz
inc
adc
pop
pop
xor
ja
sets
mov
push
mov
out
dec
sbb
jmp
sbbl
and
psrlw
ljmp
push
iret
bound
clc
data16
or
and
js
xor
pop
xor
sbb
xchg
sarb
xlat
push
imul
add
cltd
mov
jmp
push
push
subb
jbe
adc
mov
pop
add
pop
inc
or
and
push
push
mov
xchg
shrb
inc
dec
lock
rolb
enter
inc
xchg
and
cmp
xor
dec
fcomi
cmp
push
js
outsb
aas
fisttpl
push
lods
mov
inc
dec
dec
mov
push
sti
movsl
fadd
jmp
pusha
rcr
pop
cli
insb
xchg
test
hlt
fpatan
gs
dec
sub
jb
jne
mov
fnstcw
fidivrl
cmp
loop
sbb
sarb
dec
jmp
fisttps
pop
sub
out
mov
in
addl
inc
aas
jae
dec
lods
pusha
dec
dec
or
jle
inc
sub
jae
outsb
and
and
dec
adcl
cwtl
add
adc
adc
enter
push
aaa
test
sub
aad
inc
xchg
sbb
mov
inc
outsl
push
mov
xchg
mov
sahf
sti
xor
mov
rolb
lods
jb
movsb
cmpsl
and
aas
test
lods
aad
fyl2xp1
loope
mov
mov
or
xor
xchg
insl
jo
inc
and
ds
lahf
stc
pop
cltd
shll
xchg
pop
xchg
xor
iret
mov
mov
jecxz
inc
shrl
adc
nop
push
or
daa
pop
rolb
and
jecxz
into
scas
arpl
sahf
push
mov
cmpsl
popa
aaa
mov
jne
inc
arpl
outsl
mov
insb
test
mov
arpl
mov
addr16
rcll
sbb
add
sbb
sbb
dec
sbb
lds
mov
dec
aaa
pop
fidivl
jo
popf
popa
das
push
scas
adc
ss
aaa
push
xlat
xlat
js
or
push
sti
ficoml
les
mov
in
and
and
scas
push
aaa
incl
push
je
out
or
repnz
adc
leave
scas
pusha
sbb
xlat
sti
pop
sbb
insb
mov
cwtl
ljmp
mov
mov
mov
jo
cmp
invlpg
mov
call
adc
mov
xchg
mov
lahf
loopne
int3
aam
or
insl
cwtl
roll
mov
addr16
jp
outsl
mov
add
movsl
mov
fcmove
test
pop
aas
sti
or
int3
fs
pop
dec
in
jns
dec
rcrl
adc
ja
and
lret
lret
inc
in
inc
xchg
mov
jp
imul
ret
ss
iret
and
rolb
xchg
sbb
call
std
arpl
lret
sar
inc
orb
inc
mov
sub
sub
incb
cmpsl
mov
pop
pop
mov
mov
or
add
mov
mov
cmp
fs
dec
adc
popa
xor
jle
pop
insb
mov
movsb
push
xchg
pop
mov
push
push
iret
xchg
sub
repz
pop
dec
and
pop
mov
jno
lret
xchg
mov
stos
add
fs
cmp
lods
int3
cmp
sbb
xor
je
das
outsb
adc
clc
fildll
add
aam
sub
and
shlb
mov
mov
push
pop
mov
adc
inc
dec
dec
sbb
fs
mov
xorl
pop
xlat
ja
xchg
shlb
push
insb
adc
xor
icebp
xlat
aam
inc
aaa
ss
mov
adc
sub
mov
and
jbe
test
push
xlat
jb
pop
dec
pushf
fs
or
je
mov
pop
outsb
add
into
sti
rcr
cmc
sub
dec
add
out
cmp
js
outsb
dec
xchg
mov
fadds
cmp
xchg
xor
mov
orb
jae
negb
jno
cmp
loope
inc
or
adc
jg
lretw
push
push
cmp
mov
fbstp
push
lds
pop
xor
es
jp
push
jno
and
mov
stos
sbbl
or
daa
jp
inc
mov
sub
fxtract
je
popf
insl
lcall
scas
pop
push
xchg
iret
test
aad
cs
and
xor
xchg
jecxz
xchg
rorb
inc
scas
out
sbb
insb
adc
das
cli
repnz
test
or
mov
in
jmp
nop
sub
xchg
add
ja
inc
jno
jmp
lret
jbe
in
bound
push
cltd
xchg
cmp
xchg
inc
cmp
push
xchg
xor
push
mov
jb
push
mov
push
es
fildll
mov
sbb
scas
mov
cltd
and
ja
rorb
orl
jae
and
mov
ffree
mov
mov
push
icebp
sbb
push
xchg
mov
lret
in
inc
jl
dec
sub
mov
cld
dec
and
and
int
cld
pop
hlt
lds
push
jno
sahf
fdivp
xor
lods
pop
ljmp
leave
das
add
xor
insb
add
mov
push
adc
add
outsb
call
les
pop
dec
insl
aad
mov
shlb
jno
mov
jb
dec
add
mov
adc
push
stc
mov
xchg
mov
loopne
mov
xor
sbb
push
or
mov
jo
push
cmpsb
push
dec
jns
aaa
mov
scas
stos
push
stos
fsubrl
nop
xchg
ljmp
pop
in
stc
inc
sub
pop
into
cmp
push
hlt
daa
jb
mov
and
push
cs
cs
push
hlt
mov
repz
mov
repnz
ja
mov
sbb
rcrb
jae
xor
xchg
add
inc
test
xor
lea
add
call
rcr
das
cld
jmp
dec
aaa
push
mov
pop
aam
mov
repnz
dec
test
call
mov
push
mov
sti
hlt
stc
mov
stc
adc
call
call
sbb
call
outsl
push
iret
popf
decl
dec
mov
das
fstp
mov
loopne
dec
repnz
add
adc
add
sub
pop
push
sub
stos
dec
rcrl
cmpl
and
mov
movsl
pusha
fmull
pop
cmpl
xor
int3
add
mov
sub
adc
cmpsl
cmp
cltd
bound
jge
clc
filds
cmc
test
mov
dec
aaa
pop
jg
push
push
cmp
loope
rclb
mov
pop
iret
aaa
push
nop
mov
mov
dec
insl
mov
sub
in
mov
sahf
xchg
fcom
subl
xchg
je
mov
dec
rorb
jle
scas
inc
lods
arpl
pop
push
adc
xchg
xor
ret
leave
jno
fadds
loopne
lret
popf
add
pop
clc
jno
jl
xlat
out
and
adc
add
mov
xchg
or
dec
addr16
test
and
push
xor
mov
and
ja
mov
orl
xchg
xchg
pop
and
mov
in
in
or
aam
cmpsb
mov
jle
xchg
xor
pusha
ja
or
push
inc
mov
nop
lcall
jbe
xor
stos
fs
mov
mov
xor
out
sti
sub
nop
leave
mov
addr16
jmp
lods
and
mov
mov
sub
mov
dec
iret
mov
add
mov
add
sub
hlt
fs
imul
icebp
mov
jge
fisttpl
pop
mov
mov
shll
fisttpll
xor
push
xchg
pushf
ret
cmp
mov
adc
mov
inc
mov
out
negb
pop
and
sbb
fstpl
add
mov
xor
loopne
mov
int
lcall
cmp
test
xchg
fstpt
inc
repz
movq
or
cmpsl
adc
pop
dec
push
adc
rcll
rolb
mov
sub
and
push
lcall
testl
pushf
insl
xchg
xorb
faddl
mov
testl
mov
insl
pop
cmpsb
vcvtdq2pd
hlt
test
mov
rol
sbb
shrb
pop
mov
mov
in
bound
stos
or
cli
repz
in
dec
sbb
xor
ret
push
scas
mov
dec
in
jno
movsb
cmpsl
mov
mov
sub
insb
fistpll
mov
jbe
mov
or
dec
sub
cmp
rcrl
insl
outsb
jnp
jge
xor
push
dec
sbb
xorl
stos
fsubs
leave
inc
enter
js
mov
mov
fistpl
mov
les
inc
sarb
popf
jmp
add
pop
ficoms
faddp
lods
imul
inc
mov
lret
and
push
fs
pop
out
mov
xlat
adc
cmp
dec
movsb
test
sub
in
into
sub
mov
popf
into
push
sbb
inc
rolb
fisttpl
popa
fld
insl
xchg
cmpsl
mov
sub
std
and
xor
jno
jb
adc
adc
xchg
dec
pop
mov
sbb
shr
enter
dec
inc
push
repnz
pop
das
leave
mov
mov
mov
adc
xchg
mov
pop
popf
ja
sub
adc
jmp
pop
jo
mov
rorb
xchg
jecxz
loop
cmp
cmpsl
cmp
in
in
loopne
jae
jae
enter
repnz
daa
dec
inc
adc
ret
push
jp
out
cltd
sub
mov
sbb
in
cmp
sbb
insb
sbb
loope
pop
divb
inc
adc
outsl
fwait
sub
push
filds
jbe
inc
outsb
inc
or
xor
stc
mov
inc
jg
bnd
push
in
and
push
popf
inc
stc
out
fsubl
int3
mov
fcomps
dec
xor
jno
dec
mov
push
and
sarl
movsl
lret
in
sbbl
sub
xor
stos
mov
sub
xchg
and
add
cmc
pushf
push
push
push
cs
sbb
adc
cli
and
inc
adc
bnd
dec
mov
popa
and
fistpll
and
mov
xor
cmp
cmc
pop
jmp
jle
bnd
xchg
int3
mov
or
std
aad
jmp
and
loop
fcmovbe
sub
mov
add
iret
mov
dec
mov
jecxz
std
jbe
mov
call
mov
mov
cs
push
out
and
cmp
pushf
hlt
sub
xor
test
jl
movsl
mov
divl
ja
lea
pop
pop
imul
jp
jl
lods
mov
or
dec
cld
sub
fimuls
lret
gs
jmp
mov
test
lret
dec
mov
mov
jns
sub
xchg
sub
xchg
fwait
adc
aas
mov
outsb
xchg
add
cmc
fidivs
adc
pop
movsb
test
cli
bound
mov
mov
add
nop
sbb
daa
nop
cmp
xlat
movsl
push
mov
dec
test
test
dec
xor
push
push
inc
mov
adc
push
jp
pop
cmp
ret
or
js
aaa
sbb
push
ucomiss
outsb
divb
movsl
push
dec
cli
xorl
stos
jb
mov
ss
repnz
lock
arpl
mov
ljmp
lret
in
jb
scas
pop
push
idivl
ret
pushf
in
cs
pop
cmp
xor
aam
jge
dec
dec
daa
mov
pop
lea
jbe
or
lcall
jmp
aam
mov
fnstenv
mov
jmp
pop
mov
and
outsl
cs
lcall
je
nop
mov
mov
push
leave
sbb
push
push
dec
call
lahf
dec
or
add
aas
sbb
sub
sti
mov
push
lods
sbb
divb
adc
scas
sub
dec
ret
cmpb
test
pop
xchg
fs
adc
dec
mov
cmpsb
pop
push
lahf
pop
in
adc
pop
ja
aaa
iret
add
or
gs
stc
pop
push
and
fst
lods
int
fcmovnbe
adc
dec
cli
jg
mov
xchg
scas
ss
gs
push
sub
inc
fdivl
xor
sbb
push
mov
testl
es
push
test
stos
pop
dec
scas
call
lcall
inc
adc
sahf
test
mov
push
jge
adc
int3
jbe
add
daa
movsl
mov
or
push
daa
cmpsb
mov
xor
pop
xorl
rcrl
mov
jge
loop
xorl
or
adc
je
sub
add
inc
adc
mov
and
sub
int
jecxz
xchg
stos
sub
inc
loopne
mov
lret
sbbb
movsl
aaa
sbb
leave
call
pop
je
stos
and
fwait
repz
cmp
mov
cltd
lock
stos
pop
mov
mov
movsb
fstpl
adc
jecxz
xchg
push
jne,pt
and
sub
popf
out
fmul
dec
add
xchg
mov
ss
sbb
test
shr
rorl
sarl
jbe
dec
inc
arpl
lret
pop
cmp
xchg
mov
jl
mov
and
mov
mov
ds
mov
inc
lods
xor
mov
pushf
fisubrl
in
sbb
push
push
and
cli
mov
lahf
lret
test
pop
jmp
sbb
mov
jbe
in
fwait
outsb
jmp
test
out
pop
icebp
cmpsb
mov
or
in
loopne
lcall
and
ds
pop
mov
mov
pop
adc
ss
scas
les
push
dec
ljmp
and
rorb
sbb
xor
cmp
cmovb
dec
mov
or
leave
mov
push
adc
ljmp
and
repnz
stc
jnp
inc
xor
inc
pop
inc
push
mov
mov
inc
or
rcl
js
mov
sarb
sbb
rcll
cmp
inc
add
push
adc
push
sub
or
arpl
pop
dec
dec
cwtl
xor
movsl
ror
xchg
loop
or
dec
in
lods
out
add
cmpsb
xchg
mov
mov
gs
jne
mov
adc
mov
leave
jge
mov
mov
push
jns
mov
sbb
mov
idiv
push
mov
inc
gs
dec
sti
lret
mov
loop
ljmp
adc
mov
cmp
pop
jne
push
movl
add
bound
ret
and
jle
pusha
or
sbb
arpl
mov
test
mov
mov
push
das
dec
push
inc
inc
jmp
sbb
mov
cmpsb
out
dec
cld
pop
fs
push
shll
movl
cmc
lcall
or
rcll
xor
sub
inc
imul
or
mov
lahf
sti
imul
pop
cmpsl
pop
sti
outsb
loopne
adc
pinsrw
pop
inc
loope
inc
int3
dec
dec
add
les
mov
mov
sub
int
fwait
xor
xchg
stos
sbb
test
cmp
mov
jl
rclb
xor
neg
enter
pop
loope
es
pop
nop
pop
out
sub
repnz
add
xchg
push
or
or
shl
mov
push
sti
mov
push
jnp,pt
dec
inc
sti
mov
sbb
insb
xor
dec
mov
jg
ficompl
push
push
dec
dec
bound
es
adc
mov
loopne
jae
in
movsl
add
out
or
push
hlt
cltd
je
stos
adc
xor
xorb
mov
mov
ljmp
sub
mov
out
stos
ljmp
in
or
int3
arpl
sub
andb
push
cmpsl
into
xchg
aas
push
cmp
cmp
pop
mov
rclb
lcall
rorb
mov
aam
stos
fidivrl
inc
sbb
dec
or
into
fimuls
jno
inc
ret
call
add
gs
bound
ljmp
imulb
cmpsl
sarb
lahf
mov
imul
mov
scas
mov
push
inc
ret
lds
mov
fstps
jns
fidivrl
add
mov
call
inc
nop
pop
movsl
or
shl
push
push
aam
out
das
dec
es
xor
pop
mov
in
inc
add
add
sbbl
jmp
xchg
cld
pop
stc
es
mov
xchg
xchg
insb
push
mov
bound
push
mov
fs
push
shlb
jne
add
outsb
xchg
lea
mov
in
enter
or
add
stc
or
mov
aas
sbb
cltd
sub
cmp
mov
es
push
fiadds
pop
jbe
fcoms
test
mov
sahf
cmp
rorb
cli
pop
xor
lahf
mov
adc
sub
mov
inc
pop
mov
add
mov
scas
push
push
xor
xchg
popf
add
adc
scas
pop
cld
lods
mov
inc
add
cmc
inc
insb
xlat
inc
mov
sbb
movsl
push
xchg
dec
xchg
lret
mov
mov
jge
mov
push
mov
into
movsl
xchg
nop
into
mov
mov
mov
push
add
jbe
cs
int
les
dec
mov
mov
cmp
push
mov
mov
in
xchg
push
test
cmp
jmp
dec
pop
outsb
sahf
bswap
mov
pop
xor
out
or
pop
add
data16
cmpsl
imul
test
scas
inc
aaa
shll
jle
xchg
adc
cmpsl
ljmp
dec
cmp
dec
repnz
xchg
dec
pop
repnz
sahf
dec
adc
pop
add
mov
xor
xor
jg
lock
or
int
dec
into
stc
pop
int3
sub
mov
pop
test
lds
xor
rol
push
dec
lret
iret
dec
push
and
or
aaa
cmp
lods
sbb
ret
sbb
mov
out
xchg
or
mov
lret
aaa
inc
pop
push
mov
xor
popf
in
nop
mov
mov
or
fstp
ss
or
lods
adcb
lcall
cs
lock
or
inc
imul
or
sarl
mov
cli
dec
in
lcall
sar
stos
dec
fs
xchg
mov
test
mov
dec
jns
push
enter
or
mov
ss
add
ljmp
push
inc
popf
daa
sub
addr16
adc
rorb
sti
fisttps
xor
mov
push
icebp
sub
dec
mov
or
aaa
shll
aas
mov
xor
cmp
mov
mov
lods
adc
cwtl
push
ss
dec
insb
mov
hlt
cmc
repnz
pop
call
jno
or
mov
adc
sbb
pop
les
xor
cmp
loop
js
inc
inc
push
out
inc
or
into
js
and
mov
lret
fsubs
dec
mov
sbb
pop
push
push
xchg
mov
pop
ret
mov
xchg
cmovs
xchg
test
jmp
mov
rcl
in
mov
sub
out
rclb
cmp
sbb
ja
sti
out
outsb
cmp
xchg
xor
push
sub
test
add
in
adc
ja
jmp
add
dec
popa
imul
xor
lcall
dec
popa
push
loope
adc
dec
loope
pop
rolb
push
push
in
mov
out
mov
pop
xchg
push
push
test
xlat
dec
adc
xchg
ja
add
dec
cli
mov
xlat
out
xor
xchg
pop
ja
ss
out
ret
ffree
mov
pop
aas
subl
stc
lret
lods
mov
sub
cwtl
stc
cmp
adc
es
mov
xchg
mov
pop
popf
std
inc
ja
bound
add
lods
test
xor
divl
add
cli
fld
std
mov
inc
inc
dec
dec
push
xchg
sub
dec
stos
sbb
out
inc
rcll
and
cmp
aaa
sub
push
xchg
jle
jl
fnstcw
inc
pop
mov
inc
test
imull
inc
shll
hlt
mov
push
lds
lock
in
adc
xchg
int3
jo
xor
out
xor
ss
in
pop
inc
daa
leave
repz
js
stos
and
das
mov
sbb
jb
jmp
push
dec
dec
push
or
push
data16
jl
adc
divb
rcrw
leave
sbb
pop
dec
movsl
xor
daa
ja
popf
jbe
cwtl
xchg
pop
popa
out
xor
sti
popa
imul
in
cmp
push
ljmp
cli
out
lods
jmp
mov
data16
and
mov
imul
aad
jp
mov
imul
sub
xor
imul
jae
xchg
cli
xchg
stos
test
nop
ficompl
data16
xchg
sbb
scas
cld
mov
adc
pusha
sub
clc
add
fisubrs
clc
es
mov
ret
mov
dec
ret
mov
cmp
shll
xlat
push
add
pop
mov
bound
aad
dec
xchg
inc
fucomi
cmp
xor
imul
sahf
add
shlb
rcr
dec
cmp
cli
lcall
inc
les
shl
hlt
xchg
sub
bound
xchg
clc
and
out
ret
and
scas
mov
fldl
in
into
push
arpl
aam
xchg
mov
inc
cwtl
inc
or
stc
xor
jp
push
cmp
xchg
mov
mov
testl
int
mov
pop
popa
push
cmp
addr16
nop
push
insl
jecxz
mov
mov
adc
inc
and
movsl
mov
dec
jae
jecxz
and
ficoml
leave
xchg
sub
adc
pop
mov
in
sbb
out
insl
jecxz
test
out
les
mov
in
push
ret
data16
fs
adc
fdivs
sbb
bound
dec
fildl
jecxz
xchg
cli
aad
sub
in
loop
jbe
in
pop
cli
mov
inc
xchg
aas
inc
mov
jnp
sbb
es
xlat
ja
and
sub
nop
ja
bound
push
jo
cmp
pop
and
test
loope
pushl
rcll
mov
add
vcvtpd2dq
add
dec
dec
xchg
push
lods
mov
shlb
insb
adc
adcl
jle
sbb
or
movsb
and
xchg
dec
imul
and
repz
sbb
lahf
mov
lods
pop
pop
in
mov
jae
test
sub
xlat
ss
fwait
das
or
test
xchg
or
cmc
lods
push
dec
insb
jecxz
jae
icebp
mov
lock
cmp
jnp
fsubl
out
xor
fistps
and
loop
fdivrs
mov
cmpsl
sub
mov
repz
shl
outsb
sub
pusha
shl
add
push
xor
pusha
pop
addr16
push
mov
and
repz
daa
xor
je
and
sti
test
inc
in
in
mov
std
gs
dec
and
or
popf
pop
repz
inc
mov
sbb
pop
inc
and
push
loopne
push
xorl
jge
mov
lods
cmp
rorl
fs
int
xor
or
xor
jmp
call
inc
scas
lcall
sub
mov
cli
lret
xchg
scas
adc
lea
push
lret
jae
into
cmpsl
pop
outsl
nop
repz
in
push
pop
outsl
inc
pushl
sahf
sub
jno
mov
add
in
cmpsb
xchg
add
lret
add
adc
pop
mov
lret
movb
mov
sar
jne
sbb
mov
addr16
in
dec
sub
mov
scas
aas
inc
mov
ds
cs
mov
divl
scas
and
pop
jns
mov
inc
les
addb
sub
incl
data16
dec
clc
leave
mov
fmul
jae
and
subb
scas
mov
sub
sub
fsubrp
push
in
nop
es
inc
hlt
andb
jg
add
nop
rcrl
xchg
out
xor
xchg
lock
fs
pop
std
sub
outsb
gs
lcall
dec
mov
xlat
xor
pop
sbb
xchg
movsb
movsl
add
out
add
movsl
je
movsb
xchg
mov
push
push
xor
repnz
movsb
add
nop
ret
aaa
nop
mov
movsb
dec
lds
mov
and
gs
std
jae
jnp
xor
mov
outsb
push
and
inc
loop
andb
fcom
lock
jge
int
mov
ja
stos
push
loopne
dec
cmp
sbb
das
aas
cltd
insb
add
shlb
out
ret
btr
xor
orl
pop
scas
push
fbstp
mov
in
xor
outsb
ficompl
cmpsl
std
stos
mov
js
add
adc
xchg
xchg
adc
loopne
cwtl
push
lret
lcall
xchg
sbb
shrl
shrb
sbb
bound
sbb
std
push
inc
bound
scas
loop
shlb
or
mov
xor
pop
cltd
xor
add
jno
imul
fwait
leave
mov
mov
mov
and
movsl
cmp
mov
ret
test
inc
xor
mov
stos
xchg
ffreep
out
das
rolb
fidivl
call
lock
inc
mov
dec
adc
negb
mov
cmpsb
jp
sete
mov
iret
in
dec
and
loope
jb
xor
jne
test
cmp
mov
sbb
and
loope
mov
mov
andb
movsb
push
loope
ds
cmp
cmp
cmp
push
pop
or
xchg
mov
icebp
push
pop
pop
scas
add
ret
ds
stc
jne
sbb
mov
mov
mov
mov
clc
imul
out
dec
inc
lock
adc
es
mov
push
dec
xor
or
sar
stc
or
push
inc
push
inc
pop
mov
add
add
mov
imul
and
sarb
xchg
jb
sbb
stc
pop
and
mov
dec
insl
inc
leave
lods
mov
cmp
int
lret
mov
dec
movsb
ljmp
stc
imul
outsb
or
or
rorb
stos
js
es
dec
push
dec
inc
mov
mov
jae
xchg
mov
adc
sbb
sub
outsl
add
sbb
fbld
pop
nop
jae
mov
adc
inc
ljmp
bound
out
add
rcll
sub
sub
aaa
std
outsl
mov
mov
subb
jg
pop
push
fwait
xchg
into
mov
dec
movsl
xchg
push
add
push
jo
shrb
sbb
rol
mov
pop
addr16
stc
imul
imul
repz
adc
xchg
pop
outsl
clc
popf
pop
xor
cmpl
inc
inc
lret
sbb
jle
cltd
push
push
push
sti
test
lods
mov
ss
int
fucomp
mov
sub
sti
out
sbb
mov
pop
mov
sbb
bound
pushf
add
dec
addr16
in
idiv
js
mov
cmp
nop
inc
test
outsl
daa
test
leave
adc
pop
mov
jle
lret
adcb
lods
xchg
outsb
sub
test
mov
cmp
adc
sbb
fwait
mov
test
shlb
fdivs
jae
fdivrl
repnz
sub
sbb
or
fwait
in
das
dec
stos
xchg
and
insb
dec
pop
mov
sbb
inc
sarl
or
pop
rorb
loope
add
mov
and
sbb
lret
inc
add
sub
sub
cmp
cmpl
jle
lea
cmpsb
popa
pop
cmp
add
seto
pop
int3
jae
cmp
jp
push
ds
insl
push
mov
fmull
or
movsl
ret
xchg
xorb
add
addr16
xor
mov
push
sbb
jg
xchg
inc
pop
push
cli
fbld
mov
call
inc
inc
hlt
xchg
test
xor
data16
and
xchg
popa
pop
dec
mov
into
jnp
iret
test
cmp
out
out
popf
xor
xchg
into
pop
xchg
pop
inc
adc
addb
mulb
add
dec
aad
enter
xchg
fsubl
dec
je
mov
in
pop
inc
mov
xor
lods
cld
arpl
test
aaa
mov
shr
incb
inc
mov
inc
movsl
cmp
mov
xchg
ucomiss
adc
mov
jmp
hlt
pop
and
ljmp
out
dec
popf
rcrb
sub
xor
in
test
popf
mov
dec
test
inc
enter
ljmp
cmp
shlb
jnp
test
cmp
incl
ja
test
leave
and
add
inc
test
pop
push
lea
cmp
mov
out
cmpsl
or
or
cli
xor
jmp
jmp
inc
ret
push
jns
jmp
in
lret
jg
jl
out
push
repnz
es
imul
loop
push
push
outsl
and
scas
neg
cmp
outsl
mov
mov
mov
gs
xchg
sub
jl
lahf
cmp
ljmp
mov
enter
les
std
sbb
sub
shl
mov
out
inc
mov
lods
cmp
test
arpl
mov
pop
or
mov
pushf
adc
aad
mov
mov
inc
fisubrs
das
jl
push
fistpl
cli
fistpll
and
adc
repz
sbb
dec
loop
push
jmp
jb
push
sbb
inc
inc
orb
add
lea
int3
lds
adc
jne
sub
xor
fsubs
sahf
xchg
or
jbe
std
pop
push
and
in
shl
out
mov
int
test
shl
and
pop
std
roll
loopne
jns
pop
iret
add
or
aad
pusha
cmpsb
ja
xchg
push
in
jnp
cmp
xchg
fwait
mov
rolb
xor
popf
xchg
loop
jge
out
ja
nop
pop
call
mov
out
xor
xor
fwait
or
mov
and
clc
orb
test
jp
das
xor
fists
dec
ret
aad
out
lock
imul
iret
in
xchg
fbstp
rorl
push
loop
or
dec
cmp
shll
sub
push
std
jge
jbe
imul
pop
mov
pop
and
xor
inc
pop
xor
fistps
sbb
inc
sbb
daa
or
insb
mov
pop
and
sub
loop
cs
mov
push
add
lret
iret
inc
leave
cmp
xor
xchg
lods
pop
leave
inc
orl
or
mov
fdivp
xor
adc
fs
leave
hlt
or
sti
xchg
jnp
jge
adc
sti
test
mov
mov
sbb
lret
insl
rcrl
out
ds
xchg
dec
mov
xorl
stos
lcall
adc
pop
ja
dec
jne
lret
movsb
out
fdivs
mov
packuswb
fdiv
subl
pop
jo
inc
hlt
xchg
movsl
jae
xchg
lock
aam
notl
push
mov
or
mov
movl
pop
in
lods
out
stos
cli
dec
xchg
dec
clc
rcl
dec
idivl
ds
adc
lahf
pop
push
push
dec
loop
fisubl
lcall
ljmp
negl
sbb
xchg
mov
mov
test
stos
mov
pusha
lcall
mov
mov
push
jo
mov
bnd
adc
sub
shrb
push
or
loop
or
sub
pop
xchg
repnz
xlat
mov
jge
imul
push
rcrl
xor
enter
add
imul
adcl
leave
stos
xchg
mov
push
pop
sbb
mov
or
cmp
loop
cmpb
int3
in
mov
mov
test
inc
popf
insb
and
sbbb
out
sbb
mov
cwtl
mov
xor
rcrb
xchg
mov
inc
mov
inc
cli
sub
jno
cmp
jp
adc
cmp
cmc
add
mov
add
nop
outsl
fsubs
fists
and
mov
or
cmp
lds
fidivl
aaa
loope
inc
cmp
pop
or
pop
ljmp
mov
inc
xor
aas
lea
les
xchg
push
add
dec
jg
inc
ja
fwait
pop
sti
xchg
push
lea
adc
mov
negb
xor
in
ss
pop
leave
xchg
jmp
ss
paddd
cs
test
cmpsl
jns
or
and
push
insb
bound
orl
cmpsb
test
lods
lock
mov
lods
add
je
std
pop
mov
sub
clc
pop
push
or
cwtl
cwtl
sbbl
repnz
stc
into
in
gs
aam
pop
xchg
pusha
addr16
mov
cld
push
xor
add
popf
sbb
enter
pop
je
or
xlat
mov
cmpsb
sbb
add
fadd
adc
mov
push
dec
jnp
push
stc
xchg
sub
mov
cld
lea
aas
nop
out
push
test
sahf
add
mov
mov
and
xor
pop
lock
jmp
jl
mov
dec
into
leave
or
mov
notl
sbbb
rolb
push
cmp
mov
repz
push
js
lock
enter
fs
gs
movsl
adc
jae
inc
and
adc
mov
sbb
fidivl
call
jbe
fs
popf
adc
cli
subl
jp
out
or
jne
loop
jecxz
cmpl
dec
and
clc
gs
stos
dec
test
out
cmpsl
mov
inc
popf
mov
cmp
mov
sahf
push
cltd
mov
adc
sub
pop
cmp
jae
test
pushf
adc
fxch
lret
cmp
dec
xchg
or
jnp
mov
jo
lret
js
leave
jae
or
notb
jne
popa
jae
cmpsb
addr16
xchg
push
nop
push
xlat
loope
lret
inc
test
scas
jle
mov
xchg
cltd
dec
cwtl
jl
shll
sub
les
lea
das
mov
inc
mov
aam
xchg
ja
add
mov
mov
repnz
out
push
ffreep
sub
sti
test
addl
xchg
adc
insb
divb
idivb
inc
fidivrl
inc
pop
mov
or
push
mov
push
inc
mov
jge
inc
mov
dec
in
inc
ret
shufps
out
insb
das
std
or
into
mov
add
loop
call
xor
jmp
icebp
aad
sbb
cmp
outsb
ret
cmp
cmp
loop
mov
icebp
aaa
mov
dec
cmp
adc
adc
adc
lcall
insb
pop
jecxz
and
sarl
push
mov
fmul
mov
lret
shr
scas
inc
inc
sbb
out
test
xchg
mov
mov
adc
sbb
push
push
mov
xor
sbb
lods
das
push
loop
adc
cwtl
je
les
or
mov
or
in
and
sub
adc
or
xor
test
jnp
sbb
mov
sub
dec
sub
mov
out
in
adc
ljmp
pop
mov
or
xor
mov
jl
lret
sbb
andb
jl
sbb
test
sub
test
mov
and
push
daa
xchg
jecxz
test
xor
fidivrs
cmp
repz
push
push
xchg
and
pop
sbb
loope
test
pusha
sbb
ss
imul
inc
cmp
movsb
xor
sub
loop
loope
xchg
fadds
jp
sub
or
std
jl
add
test
ud1
cmp
ret
and
mov
out
pop
xor
add
aad
in
cli
sbb
sub
push
mov
inc
fidivs
lcall
nop
rorb
in
std
push
and
cmp
push
shl
cmpl
push
jae
pop
push
dec
fmull
pop
or
xchg
in
ds
sub
imul
pop
add
pop
in
and
pushf
test
cs
imul
adc
gs
jo
cmp
or
fdivs
cmp
sub
scas
adc
mov
jbe
push
in
inc
pushf
ror
sub
mov
aam
repz
push
pop
pop
jmp
or
cmpsb
rolb
cmp
push
dec
pop
lods
cmp
test
adc
dec
jae
cwtl
int
fisttps
xor
or
sbb
or
fs
inc
sub
or
lcall
bswap
jp
mov
jns
push
pop
sub
mov
xchg
ret
sub
ds
inc
cmp
push
and
movsb
adc
loope
inc
add
mov
dec
in
imul
outsb
mull
xchg
icebp
popw
xor
dec
mov
inc
dec
dec
arpl
in
je
xchg
arpl
fsubp
pushf
sub
mov
or
mov
les
add
mov
cmp
and
mov
mov
xchg
lahf
sbb
or
xchg
jl
inc
push
into
divb
ja
cs
cmc
aad
ret
jg
out
push
pop
imul
repnz
aam
mov
fnstcw
popf
rcl
push
add
jne
aas
std
insb
mov
fldt
jg
xchg
insl
jp
push
pop
push
pop
push
dec
lods
push
jb
push
inc
pop
jnp
ds
dec
inc
or
inc
mov
and
push
xchg
add
lds
adc
xor
mov
xorb
xchg
fwait
dec
and
nop
aaa
push
call
adcb
lcall
imul
aam
jo
pop
and
ffree
push
gs
pop
clc
or
adc
inc
cmp
insb
ret
xorl
loope
sbb
gs
adcb
scas
je
and
imul
icebp
push
sahf
push
nop
mov
push
add
movsb
nop
cs
loope
and
cmpsb
xor
decb
imul
ret
aad
test
dec
xor
xor
push
adc
inc
rorb
loopne
dec
cmp
mov
push
or
xor
push
mov
xchg
stc
and
loop
dec
jmp
xchg
aam
lock
addr16
rcrb
sub
adcb
loop
aam
xchg
xchg
cltd
pop
mov
mov
mov
xor
popa
in
push
decl
sbb
inc
push
jbe
mov
jmp
pop
adc
jnp
push
out
addb
jnp
ffreep
inc
jmp
in
mov
enter
idivl
pop
lods
or
call
mov
xchg
call
stos
in
into
popa
inc
cmc
pop
fimull
inc
xor
and
negl
ret
aam
or
sahf
mov
sbb
pop
into
fisttpl
lcall
lret
lds
mov
adc
dec
inc
stc
rcl
bnd
lea
cmp
in
inc
jecxz
sub
imul
mov
movsl
sarl
stc
imul
lds
sbb
mov
push
icebp
std
leave
xlat
sub
mov
mov
enter
test
inc
test
mov
mov
sbb
jnp
sbb
in
cmp
lret
inc
push
in
jne
jl
outsl
insl
pop
dec
adc
jecxz
jge
xor
adc
pop
test
outsb
cmpsl
nop
sub
or
pop
sti
int
imul
pusha
or
loopne
cmp
repnz
pop
mov
lods
out
sbb
xchg
xchg
jp
mov
sbb
push
sbb
fsubrs
jmp
push
mov
lcall
sub
not
test
mov
popa
adc
mov
pop
and
cmp
mov
sti
outsl
hlt
lahf
cld
and
or
adc
mov
mov
into
mov
sub
nop
hlt
cltd
adc
bound
fiaddl
sahf
xor
sub
lret
xor
or
lret
add
jmp
jne
pop
push
mov
leave
lock
push
cmp
out
inc
cltd
adcl
stos
lret
lret
rolb
lea
jecxz
pop
pop
outsb
mov
dec
jle
xor
cmp
xor
rolb
bound
pop
fdivp
jmp
and
das
mov
cmc
add
mov
xor
test
adc
pop
lret
sub
xor
xor
ljmp
xor
pmulhw
stos
pop
jae
xor
mov
leave
jae
stos
mov
add
jns
mov
outsb
ret
cmpsl
or
jbe
shrl
pop
mov
lods
xchg
fcoml
inc
pop
jecxz
mov
mov
sbb
test
adc
mov
dec
loopne
and
cmp
mov
jl
mov
fcmovb
cmp
test
rorl
in
cmp
pusha
cmc
shlb
mov
mov
pop
cmp
inc
je
in
xor
xor
test
rorl
mov
pop
lock
jnp
stos
sbb
dec
add
int3
lods
add
sub
push
fnsave
mov
and
jne
outsl
jl
popa
popf
leave
sub
inc
xor
jmp
fidivs
cmp
mov
pop
imul
shr
divb
lds
or
pusha
lret
sub
xchg
jmp
enter
test
or
ret
jo
mov
in
cmp
out
xchg
mov
icebp
add
test
fwait
sarl
mov
outsb
add
mov
rcr
pushf
fsubrs
or
cli
movsb
xchg
xor
popa
sbb
mov
clc
insb
mov
sub
nop
aaa
ret
mov
or
add
adc
push
push
xchg
xor
and
mov
and
xor
mov
pop
jo
pushf
lcall
lock
fwait
jecxz
mov
ret
ljmp
movsl
dec
push
cltd
jbe
mov
lret
adc
lcall
sub
and
lret
fidivrs
nop
adc
lahf
push
test
stos
repz
xchg
jns
and
sub
pop
xchg
jmp
push
or
push
scas
popf
or
test
es
sbbl
imul
xor
andb
jecxz
int
testb
call
inc
cmp
pop
fsubp
out
push
mov
addr16
jne
ds
loopne
fs
cmp
sbb
je
imul
out
fnstsw
scas
add
aaa
lods
pop
xor
push
add
adc
inc
pushf
orb
mov
ja
mov
lods
jg
jne
mov
repnz
push
orl
jae
pop
mov
in
mov
int3
fnsave
pushfw
call
sahf
jle
cld
pop
add
cmp
inc
dec
pushf
inc
lods
mov
push
test
fs
in
adc
lcall
popa
sub
movsl
mov
sbbb
mov
in
jle
or
out
ss
ret
jecxz
jne
xor
mov
xchg
or
outsb
bound
daa
stos
in
movsl
or
int
xchg
lds
fsts
and
mov
pop
aad
aad
or
jmp
ljmp
loope
shlb
cltd
mov
cmp
sub
inc
test
mov
adc
mov
pop
mov
push
xchg
mov
lods
jnp
add
mov
fsubl
sub
jb
fists
arpl
loop
adc
mov
jmp
aas
imul
cmp
stos
shll
cmp
std
test
out
fildll
ret
mov
dec
out
cmpb
and
nop
mov
cmp
loope
mov
test
out
jecxz
mov
mov
pusha
dec
push
push
or
mov
cmc
jecxz
mov
xchg
add
bound
sarb
shl
fbld
jne
pushf
cli
dec
cmpsb
jno
daa
sbb
xchg
ljmp
stc
mov
leave
xchg
push
inc
iret
out
stc
sub
xchg
aaa
mov
xchg
into
or
add
jmp
inc
sbb
fists
jmp
ret
js
es
rorl
hlt
pop
dec
jecxz
sbb
pop
jp
sub
push
cmc
andb
mov
mul
mov
push
jns
adc
and
push
or
addr16
mov
mov
jmp
inc
sub
inc
jo
sub
or
xchg
insl
hlt
andl
daa
add
push
pop
jae
inc
sbb
imul
adc
sbb
fisubl
movsl
jbe
sti
lret
icebp
or
sbb
test
lods
sbb
mulps
jmp
pop
cmpsl
push
jo
ret
ss
popw
mov
sti
inc
pop
loopne
xor
add
into
mov
inc
xchg
or
out
cwtl
pop
arpl
push
mov
ss
les
repz
insb
mov
popa
fists
jmp
xor
cmpb
jno
hlt
fstps
cmc
and
scas
int
repz
mov
fildl
mov
out
cltd
push
push
or
dec
and
xchg
pop
jmp
pop
inc
pop
and
push
and
aam
add
insb
dec
loop
xor
pop
sbb
cmpsb
add
sahf
lods
mov
mov
cmpsb
sbb
or
ret
xchg
cmc
neg
stos
out
bound
jo
mov
mov
push
cmpsl
sahf
cmp
addr16
jns
mov
out
movsb
scas
add
mov
adc
inc
stos
inc
es
das
gs
xor
mov
cwtl
or
lret
cld
pop
mov
lock
fs
dec
push
scas
jge
pop
faddl
mov
mov
sbbb
adc
sub
push
orb
or
fstps
and
fnstenv
fwait
lea
xchg
fsubr
lahf
or
add
rclb
testb
cmpsl
push
inc
mov
xor
sbb
dec
cld
push
or
mov
outsl
scas
jp
cld
and
xchg
push
inc
inc
mov
and
ret
stc
test
cltd
or
dec
ffree
nop
adc
cmpl
testl
je
and
sarl
xchg
js
js
jmp
pop
arpl
sbb
fcomps
mov
jecxz
lcall
push
ja
pop
dec
popa
adc
mov
jle
enter
xor
and
add
clc
orl
ror
loope
push
pop
out
push
mov
mov
adc
rcll
shl
cs
inc
into
out
repz
mov
or
imul
movsb
dec
test
cwtl
loop
mov
ja
jp
and
cmp
imul
outsb
bound
fidivl
and
mov
mov
gs
jnp
dec
jno
daa
das
paddsw
cltd
fstp
loope
mov
add
lahf
push
lea
cwtl
add
in
daa
mov
in
es
adc
stos
int
aad
nop
loopne
push
pop
aam
test
push
xor
adc
das
mov
aaa
lret
jne
pop
dec
das
out
mov
loopne
arpl
jecxz
push
lcall
mov
sbb
jns
pop
dec
pop
test
mov
add
xchg
daa
fisttps
jg
out
imul
sbb
add
stos
mov
add
sbb
call
sub
stos
pop
popf
loopne
popa
or
pop
movsl
mov
mov
clc
nop
and
pop
iret
pop
leave
outsl
xchg
and
inc
mov
pop
mov
add
xchg
push
xchg
dec
hlt
add
outsl
adc
pusha
dec
aad
imul
iret
int3
loop
xchg
or
inc
inc
sahf
jl
repz
jns
lea
cmp
mov
or
add
call
push
xchg
inc
adc
fbstp
push
lock
pop
addr16
push
xchg
inc
fbstp
push
scas
lret
insb
rcl
ss
adc
sbb
les
mov
jb
subb
jo
andl
or
sbb
cmp
cmpsl
mov
sub
popf
shrb
dec
inc
pop
fnstsw
pop
pop
imul
push
and
lea
loopne
ss
xlat
or
push
or
pop
icebp
into
pop
or
dec
mov
cmpsl
rcrl
sub
jo
cmp
inc
push
jl
inc
cld
cmpsb
pop
ret
rolb
and
pop
lret
insb
or
inc
shlb
add
and
in
adc
xlat
jmp
xor
adc
popf
sbb
jge
add
pop
add
mov
daa
sarl
xor
cmp
pop
mov
or
sbb
decb
jb
jl
stos
inc
xlat
subb
adc
in
jl
imul
push
sub
shl
jb
andb
push
loopne
call
add
mov
jb
xor
add
xchg
push
imul
or
jg
mov
add
cli
aas
xchg
addr16
inc
inc
imul
orl
jmp
out
and
out
dec
lret
jle
sarb
mov
mov
cmpsb
inc
insl
inc
test
pop
xor
mov
cltd
xor
aas
mov
in
scas
jno
push
lret
sbb
push
ret
adc
push
add
pop
jl
cmp
in
sub
mov
mov
xchg
jl
dec
pop
hlt
addr16
adc
dec
cmp
xchg
insb
jno
sahf
lea
mov
aas
shrl
mov
inc
push
xchg
insl
inc
push
std
daa
add
pop
pop
negb
cmc
cmpl
xchg
ss
xchg
mov
popf
push
push
test
pop
sub
xor
sahf
xor
jno
imul
popa
cmp
dec
iret
sub
mov
mov
scas
pop
push
mov
jmp
data16
dec
push
insb
rcll
lods
nop
add
dec
sub
stos
cmp
sbb
lds
xchg
jp
fsubs
fidivrl
push
pop
movsb
addl
ret
jl
in
sbb
jp
pop
sub
sbb
and
lea
xor
push
addr16
mov
stos
notl
jo
bound
iret
sbb
adc
mov
dec
imul
repz
inc
push
sbb
rorl
pushf
and
inc
mov
mov
outsl
mov
sbb
jae
jmp
and
and
lds
sub
lea
addr16
scas
inc
icebp
mov
in
dec
xchg
dec
imul
loope
and
or
iret
pop
cmc
or
add
jae
mov
jmp
into
xor
xchg
ret
lods
adc
sahf
outsl
push
or
das
dec
push
cwtl
mov
test
lret
pop
stc
push
xchg
adc
shll
mov
jmp
jnp
and
xor
sbb
or
fcmovnbe
push
js
add
leave
scas
adc
mov
sbb
fisttps
pushl
dec
mov
idiv
mov
stos
xor
push
cs
mov
data16
push
pop
fldt
xor
and
mov
push
push
fwait
xor
adc
xor
sub
lret
cwtl
and
xchg
sbb
dec
or
or
pop
pushf
mov
incl
lahf
xchg
clc
sbb
xchg
xchg
jae
test
data16
sub
jbe
inc
mov
xchg
xchg
jmp
jl
fnstenv
jns
cmp
push
xchg
scas
movsl
imul
enter
dec
rclb
cmp
pop
xchg
and
outsb
cmc
js
cwtl
and
out
std
xchg
fimull
cmp
addr16
dec
cld
jae,pn
or
mov
push
and
lret
or
cmp
cltd
cmpsl
fimull
sahf
xor
pop
pop
sbb
xchg
push
sti
out
fsubrs
lods
idiv
je
sahf
mov
mov
stos
scas
int3
and
es
icebp
ffree
mov
pop
adc
fwait
jg
enter
out
enter
hlt
mov
ss
push
popf
pop
addr16
push
push
bndstx
shlb
pop
call
scas
mov
loopne
dec
loop
cs
aaa
pop
inc
stos
xor
cld
dec
enter
cmp
test
fwait
or
mov
pop
ret
fisubl
inc
cmp
jmp
arpl
fcom
xchg
imul
arpl
mov
fnstcw
push
mov
in
scas
xlat
fisttps
stos
outsb
pusha
das
enter
test
and
jmp
xchg
call
das
bound
inc
adcb
pop
dec
mov
mov
loopne
xchg
hlt
addr16
mov
sti
add
not
fucomip
inc
and
pop
cmovo
jns
sti
lret
mov
jecxz
or
out
pushl
xor
nop
or
sarl
mov
pop
bound
scas
pop
dec
faddl
and
dec
and
or
mov
daa
xchg
stos
adc
pop
xchg
jbe
or
push
insl
lock
es
pop
enter
jae
jle
sbb
std
xor
out
scas
sub
push
add
sbb
pop
lret
add
add
lods
sub
sbb
xor
or
stos
ret
push
jnp
add
fwait
call
leave
daa
ljmp
data16
xchg
inc
xor
cmp
gs
rorl
xor
dec
pop
xchg
mov
pop
inc
push
mov
into
sbb
into
adc
mov
xchg
addb
imul
inc
mov
dec
pop
inc
pop
xchg
fistps
pop
inc
lret
dec
add
push
adc
lret
repnz
lret
jp
cmp
adc
xor
lods
jb
leave
aaa
inc
pop
js
outsb
jge
scas
jl
out
outsb
rolb
popf
pop
inc
lea
sbb
cwtl
sbb
xor
ja
mov
lock
push
push
in
sbb
clc
cwtl
pop
mov
adc
sti
aaa
outsl
icebp
in
xor
add
fwait
jae
xorb
hlt
adc
mov
int3
mov
pop
mov
inc
into
adc
aad
mov
leave
das
mov
mov
mov
jnp
enter
mov
inc
and
cmp
stos
popf
lcall
insl
iret
add
push
mov
insb
dec
stc
js
rorl
dec
fiaddl
xor
jne
fcomps
cmp
fldl
aaa
add
lcall
cmp
inc
sub
fstl
jge
push
in
push
gs
cmp
adc
adc
out
mov
testb
or
xchg
xchg
mov
repz
and
mov
movsb
stos
dec
lret
dec
andb
cmp
sarl
mov
pop
mov
data16
mov
mov
adc
xor
cmp
pop
and
add
inc
cmp
call
mov
dec
xchg
lahf
mov
cli
sbb
in
shrb
loop
es
adc
mov
and
add
aad
scas
les
lea
leave
fs
sbb
test
rcrl
mov
into
xchg
mov
fisubrl
xor
pop
sbb
add
xorb
xchg
xchg
rol
ja
or
inc
into
dec
sub
fistpll
push
icebp
adc
aaa
ja
jecxz
mov
dec
cld
adc
xor
mov
mov
jmp
lods
mov
xchg
xchg
mov
fs
jg
mov
mov
setp
jmp
outsb
cwtl
movsb
outsl
xchg
movsb
jmp
nop
je
mov
out
jb
ds
push
and
pop
sbb
std
xchg
cwtl
ret
mov
pop
aam
adc
cmpxchg
push
xor
out
jp
out
pop
xchg
add
jecxz
adc
movsl
pop
xchg
shr
test
aad
stos
and
xchg
mov
test
mov
es
int3
movsb
fistpl
fadd
xchg
test
xlat
sub
imul
jns
pop
pop
enter
es
mov
into
xor
cltd
mov
mov
and
lcall
mov
xor
pop
cmp
push
adc
dec
aaa
outsb
lds
in
pop
cmp
pop
dec
cwtl
negb
sbb
sub
out
inc
out
ret
das
addl
mov
out
adc
push
cmpsl
pop
data16
mulb
outsl
das
fadds
dec
jns
pop
adc
push
int
out
fsubr
iret
pop
pop
xchg
xor
jo
gs
fs
mov
lret
popf
pop
inc
cld
testl
sbb
mov
popf
adc
sahf
xorb
push
int
jge
mov
rorl
dec
mov
lea
aaa
sub
mov
lret
inc
xorl
jns
stos
pop
push
cs
mov
lahf
lret
inc
scas
sarl
addl
cli
verr
leave
je
rcrl
dec
sub
sahf
lods
push
xlat
mov
scas
popa
sbb
push
mov
xchg
repz
and
adc
push
cmpsl
inc
mov
fucom
pop
mov
fists
repnz
mov
sbb
and
in
adc
stos
mov
xchg
mov
jo
in
cwtl
pop
jg
mov
icebp
and
shll
fdiv
ret
das
fldt
jno
ret
xlat
lcall
pop
movsb
in
lcall
fistps
cltd
cmp
jo
movsb
orl
sub
mov
push
pop
shlb
data16
loop
jbe
aam
lret
xchg
mov
test
outsb
ss
push
es
imul
jmp
or
sub
icebp
or
sbb
jl
out
loop
roll
clc
fmuls
sub
sub
jmp
sub
lods
pop
pop
and
jbe
jb
xchg
cmp
xor
xor
data16
mov
xchg
or
repnz
dec
int
push
dec
jmp
cltd
mov
jo
and
adc
nop
jnp
mov
inc
mov
xor
push
iret
ds
mov
pop
or
test
sub
out
nop
mov
aaa
jo
enter
lret
jecxz
pop
pavgb
lret
mov
xchg
sub
jmp
mov
jo
loopne
pop
or
pop
lods
pop
xchg
adc
jmp
add
sbb
ss
in
test
loope
fdivrp
cli
stos
loop
mov
adc
xchg
test
enter
dec
inc
jns
push
enter
mov
lods
inc
push
ljmp
mov
add
mov
call
icebp
in
outsl
mov
mov
xchg
ficomps
push
ret
into
neg
jb
lock
fnstsw
in
jno
jmp
adc
xor
add
lea
les
pop
mov
mov
mov
inc
loop
xchg
cmp
mov
mov
jp
push
sarl
inc
push
pop
daa
push
into
das
xchg
andl
incl
xor
mov
cmp
movsb
dec
mov
adc
jecxz
fcmovb
jae
cmp
rorb
dec
pop
push
popa
xlat
pop
cs
addl
jmp
stos
icebp
dec
sub
filds
jle
repnz
cmpsb
jo
mov
cmpb
sub
ljmp
push
fucomi
xchg
pop
jge
fimull
mov
mov
idivl
imul
mov
add
mov
and
enter
int3
cltd
in
dec
dec
shll
mov
test
out
add
dec
ficomps
loope
loop
or
inc
inc
test
push
aam
fdivs
daa
cld
rolb
shrl
out
xor
in
add
xchg
push
push
movsb
add
add
ss
pop
cmpsl
shlb
mov
fscale
fldt
jge
push
xor
rcll
rolb
icebp
in
xchg
cwtl
scas
xchg
rcl
cmp
arpl
lds
cmp
mov
addb
mov
sbb
xchg
subl
push
mull
inc
fidivs
sbb
lock
xchg
cli
jecxz
mov
repz
or
gs
sbb
mov
xor
sub
stos
adc
ficompl
daa
pop
or
mov
xchg
cs
lret
cmp
mov
ret
cmpsb
sbb
or
cwtl
sarb
std
lahf
add
sarb
jbe
fsubrs
faddp
jmp
push
mov
sti
or
sbb
in
popf
cmp
sub
inc
jg
pop
scas
pop
push
pop
js
out
push
mov
test
lock
ret
orb
xor
testl
or
add
mov
jns
push
mov
lods
mov
shlb
cli
imul
mov
pop
push
out
stc
dec
jg
andb
aam
sbb
nop
cmc
popa
pop
lcall
dec
push
outsl
xor
mov
inc
pop
mov
rclb
xor
or
sarb
add
out
leave
test
cld
sbb
pop
orb
inc
repz
ret
fbstp
sti
iret
icebp
mov
or
or
sbb
es
rolb
gs
pop
push
mov
cs
shld
pop
testl
fs
jg
cmova
mov
jle
pop
addr16
popf
sub
fisubl
push
fisttpl
mov
push
push
in
or
sbb
push
mov
insl
les
sub
adc
out
and
in
into
push
inc
dec
rcr
add
mov
mov
lods
data16
cld
push
dec
add
adc
scas
mov
and
cmc
test
fucomp
je
fdivs
out
in
cmp
fimuls
dec
xor
dec
lahf
sub
popf
aam
push
rolb
ljmp
pusha
out
add
inc
inc
roll
mov
xor
aaa
pop
loop
dec
jno
lea
jge
sbb
scas
dec
roll
test
cli
xchg
ljmp
xlat
jg
cmpsl
push
xchg
mov
push
cmc
inc
jno
lods
in
cltd
xor
imul
out
scas
dec
psubb
insl
mov
lock
aam
in
lds
imul
push
ffree
mov
inc
sub
inc
and
jns
lds
rcl
out
sbb
aaa
loope
test
cmc
pop
jbe
cmpsl
xchg
inc
jmp
aam
pop
mov
xor
or
aaa
loopne
mov
aas
clc
ret
shll
movsb
test
inc
lock
pop
ja
das
lret
cmp
and
add
lahf
int
jno
in
mov
xchg
fwait
icebp
cltd
imul
push
or
ss
daa
sub
mov
xor
push
cmp
adc
cld
push
push
pop
loope
xor
out
outsl
jp
pushf
out
mov
das
leave
add
jbe
in
xchg
sahf
mov
fstpl
jb
mov
push
idivl
popf
shrb
jbe
aam
xlat
outsb
pop
call
negl
out
xor
bound
add
cli
int
mov
or
jle
push
mov
bound
lret
out
inc
cld
pop
xor
incl
sub
sub
lret
out
cmpsl
inc
cltd
in
xchg
push
call
cmpsb
pushf
sbb
push
pop
dec
pop
fiadds
pop
dec
jl
pop
adc
jmp
push
sbb
mov
pop
cmp
mov
fldt
leave
jge
xor
sbb
jb
jg
js
les
fstl
mov
repz
push
pop
xor
test
mov
repz
xchg
jle
xchg
stos
das
test
mov
mov
adc
test
cmp
stos
outsb
jmp
cmp
pop
or
ror
dec
sbbl
out
push
and
pop
js
jmp
pushf
lret
sbb
fisubl
adc
add
push
mov
pop
jnp
adc
push
pop
into
pushf
xor
or
mov
xor
push
xchg
enter
mov
arpl
das
push
dec
jg
or
mov
mov
test
mov
add
mov
mov
jo
pop
flds
pop
xchg
push
push
test
pop
insb
and
jl
jns
arpl
pop
lcall
les
lock
cmc
mov
mov
xchg
pop
mov
mov
lock
outsl
inc
test
pop
mov
mov
imul
push
or
jg
sbb
push
cmp
pop
in
or
js
jle
lock
into
mov
ljmp
mov
jg
push
fnsave
xchg
jecxz
pop
imul
jmp
push
adc
popf
xchg
movsb
inc
lahf
pop
and
jno
push
jecxz
xchg
cmp
rorl
rolb
xor
add
ljmp
shll
je
sub
mov
pop
std
test
pop
clc
jge
enter
mov
int
mov
mov
xor
rorl
sbb
mov
or
lret
adc
mov
or
repz
xlat
lods
or
je
sbb
mov
cmpsb
jbe
iret
xor
pop
insb
mov
ds
mov
aad
cmpsl
lods
sbb
enter
xchg
push
pop
fnstsw
push
push
aam
nop
cs
push
jns
jl
jnp
ret
push
imull
mov
lcall
jae
jl
shrb
add
insb
into
cltd
into
cmpsb
stc
jnp
xor
jge
xchg
stos
pop
xchg
jge
or
insb
int3
jp
sysret
dec
or
dec
rcrl
in
xor
pop
scas
int
sub
jle
ljmp
aaa
push
insl
or
inc
adc
xchg
pop
mov
adc
ljmp
or
inc
test
ret
cmc
and
mov
je
jge
movsb
scas
imul
xlat
jg
lahf
lret
cwtl
das
or
mov
scas
loop
dec
sahf
xchg
mov
mov
lds
cmpsl
inc
ret
push
or
shrl
ret
sahf
fwait
or
pop
sub
mov
rorb
cli
inc
cli
xor
add
cmpsb
clc
push
xchg
fwait
inc
test
cltd
out
and
inc
in
or
adc
cwtl
es
movsl
sti
or
inc
xor
pop
inc
jge
and
sbb
add
call
or
fsubrl
arpl
out
mov
arpl
mov
int3
out
and
std
sbb
icebp
sub
daa
das
fisubrl
dec
outsl
inc
jecxz
out
sti
xchg
rolb
int
stos
dec
arpl
jbe
inc
out
cld
dec
imul
push
mov
stos
les
cmp
and
jg
or
call
stos
jb
fisubrs
dec
stc
js
mov
pusha
repz
rcll
mov
xchg
pushf
shlb
jbe
jmp
rorl
leave
icebp
mov
test
aaa
push
push
push
xchg
scas
out
scas
out
push
scas
mov
or
push
out
pushf
xor
fs
cmp
jp
mov
test
insl
pusha
das
das
shll
in
dec
adc
and
push
movsl
xchg
arpl
aam
imul
stos
jo
out
push
xchg
inc
sub
jne
mov
and
dec
dec
pusha
fs
icebp
int
icebp
pop
mov
lock
decl
pop
mov
sub
cmc
mov
aad
adc
lods
xchg
nop
jbe
inc
insl
pop
jae
jbe
pop
mov
dec
xchg
loop
es
lods
imul
lods
push
sbb
inc
xchg
jg
shl
xor
mov
sub
jno
out
hlt
cld
mov
mov
fnstsw
cmp
sbbb
pop
mov
cmpsl
pusha
ds
ljmp
test
add
jecxz
es
popf
test
cmc
test
mov
mov
scas
push
mov
nop
loope
mov
xor
inc
cmpsl
sub
scas
nop
adcl
pushf
sbb
jae
or
xor
add
xchg
mov
pop
ret
cmc
lds
inc
cmpsb
mov
cmp
xorb
outsb
mov
cmpsl
shlb
lods
xchg
cmc
or
inc
sbb
mov
jl
cs
or
cltd
jp
js
mov
push
push
out
fstpt
fldt
xor
push
hlt
mov
inc
rolb
xorb
data16
add
push
cmpsl
fwait
lret
outsb
jle
and
mov
sub
test
mov
dec
mov
cmpsl
fists
push
clc
cmp
loopne
mov
jmp
lea
mov
and
in
pop
stos
daa
icebp
cmp
ss
xchg
scas
mov
into
test
add
cs
das
cs
and
cmc
dec
lods
inc
pop
push
xchg
addr16
xor
dec
cwtl
ja
pop
lock
add
testl
rorl
sti
mov
add
das
sub
jl
subb
or
pop
in
or
cmp
xchg
ljmp
ret
inc
or
ret
cmpsb
jb
and
push
xchg
imul
popf
hlt
add
not
roll
ljmp
xor
pop
aaa
les
jae
or
jno
aaa
lahf
add
mov
ljmp
xchg
cmpsl
loop
mov
push
je
fiaddl
push
out
mov
or
out
add
cld
hlt
rcr
mov
mov
mov
lods
jo
iret
scas
into
enter
imul
sahf
jp
in
cmc
and
pop
xor
bound
and
pop
adc
data16
leave
test
and
outsb
addr16
testb
shrb
xor
add
or
inc
out
push
bound
dec
adc
push
jmp
lahf
lds
mov
fdiv
dec
iret
sbb
insb
adc
test
popa
add
in
and
es
sub
mov
dec
adc
add
push
xchg
mov
out
sub
aam
xchg
xchg
sub
cmp
push
mov
shl
cs
mov
lahf
scas
in
mov
lret
lods
pop
jne
cltd
push
insb
inc
ss
movsl
aam
push
cmp
arpl
sahf
xchg
jno
sub
or
inc
or
or
clc
out
popa
popa
sub
mov
fcomp
fmul
pop
nop
xchg
xchg
xorb
inc
mov
aaa
jae
fistpl
shll
xlat
fidivs
cmp
mov
adc
mov
jno
xchg
sarb
mov
adc
fldcw
pop
jl
mov
shrl
jg
xlat
mov
sub
jp
xchg
out
xchg
xor
dec
bound
jno
loopne
std
lods
mov
iret
loop
lret
dec
add
std
push
ja
sahf
daa
pop
cmp
insl
test
push
xchg
dec
cmp
stc
test
sbb
lret
xchg
js
stos
shl
sub
jns
ret
and
ss
sbb
xor
lahf
ret
movsl
xor
add
mov
mov
call
lea
aaa
jecxz
out
push
mov
rol
psubq
pop
testb
push
mov
in
aad
pop
xor
aad
lock
pop
ss
out
or
loop
fcmovu
jae
and
aaa
adc
jge
jb
xchg
xlat
imul
inc
stc
gs
cmp
mov
cli
xchg
adc
sahf
icebp
insb
mov
dec
mov
jle
or
cmp
adc
sbb
test
movsl
cmp
sub
jne
or
test
lds
icebp
daa
dec
cmp
and
daa
adc
adc
rcr
into
inc
mov
cwtl
mov
lds
into
clc
pop
sub
dec
xor
or
xor
push
rcl
pop
sub
jbe
jns
sbb
arpl
add
mov
pause
stc
and
fildll
mov
xchg
fistpl
mov
ja
dec
adc
dec
imul
repz
inc
mov
imul
dec
stc
jns
mov
and
mov
inc
sarb
cmp
xchg
gs
pop
pop
jnp
scas
enter
add
cli
pop
les
add
loop
or
mov
fcmovnbe
and
push
pop
dec
cli
mov
cs
sub
mov
mov
xchg
aaa
iret
lods
xchg
test
cmpsb
aaa
pushf
mov
mov
testl
jg
fisubs
ficoms
enter
push
mov
push
jl
pop
dec
hlt
ljmp
mov
mov
call
testl
aad
loope
and
jecxz
jno
xor
faddp
xorl
lods
rcrb
mov
scas
pop
mov
xor
test
outsl
es
mov
lahf
xor
push
sbb
rclb
insb
cmp
pop
out
popa
adc
sub
cmc
xchg
xlat
xchg
sahf
xchg
sub
sti
sub
dec
nop
outsl
sub
xchg
push
fisttps
adc
mov
adc
lea
xchg
sbbb
sub
mov
push
cld
jge
mov
xor
jecxz
adc
add
dec
fsub
mov
dec
push
mov
xor
cmc
in
and
jl
inc
dec
aam
arpl
mov
jb
outsl
mov
jae
loop
pop
cltd
mov
addr16
jno
jnp
xchg
push
lcall
in
test
mov
jle
mov
popa
jns
jmp
pop
xchg
shll
xchg
pop
push
cli
popa
jb
rorb
sub
in
sub
ret
jbe
popf
push
int3
test
in
loope
pop
iret
and
cwtl
gs
push
cmp
mov
jl
and
mov
mov
cwtl
inc
mov
xor
lock
push
mov
outsl
cs
mov
xchg
mov
and
lods
out
xchg
mov
into
mov
mov
jle
sbb
out
sbb
je
pop
jb
jmp
fsubrs
cmp
mov
repz
in
mov
fcmovbe
pop
test
into
add
pop
loope
jp
lahf
outsl
out
cltd
mov
mov
jo
scas
repnz
or
nop
cmp
and
in
ljmp
dec
out
mov
stc
add
and
sub
and
lahf
xor
stos
cmp
adc
cs
sub
fwait
adc
pop
and
xor
and
inc
pop
ret
and
pop
out
pop
iret
icebp
imul
lea
dec
cmp
mov
and
dec
andb
inc
out
addr16
xchg
in
sub
xor
iret
mov
and
cli
fdivs
push
push
arpl
bound
scas
inc
sbb
aaa
shlb
into
bound
lock
hlt
out
scas
or
push
mov
mov
push
fistpl
mov
dec
xorb
xor
push
add
fldt
sub
stc
push
xchg
mov
addr16
inc
push
adc
jmp
mov
sbb
and
out
sub
stos
ficoml
push
jae
or
in
fs
out
fnstsw
or
shrb
xchg
icebp
dec
out
ds
jl
add
repnz
fwait
pop
and
scas
xor
sbb
bound
xor
jb
data16
es
xchg
loope
push
mov
jae
std
mov
and
ret
pop
xor
jno
and
addr16
adc
fstps
int
pop
pop
fst
and
stc
jg
pop
push
fcmove
ret
pop
pop
adcb
movsb
cmp
cmp
inc
jb
mul
fcmovu
insb
mov
xchg
aam
jp
jb
mov
or
sahf
push
xchg
lock
mov
xchg
clc
in
xor
adc
arpl
js
in
in
mov
out
xchg
loop
and
push
or
lods
sti
movsb
and
test
sbb
nop
add
dec
push
jb
ret
inc
dec
mov
sub
adc
and
pcmpeqd
jg
dec
push
outsb
dec
test
or
add
call
jns
inc
imul
pop
and
arpl
sbb
scas
cmp
xchg
hlt
mov
jle
sbb
icebp
push
or
pop
inc
js
sbb
aam
outsl
push
mov
or
xor
mov
mov
std
sub
scas
inc
lret
cmpb
sub
mull
cmp
ret
lds
xchg
pop
mov
cltd
loopne
lods
rep
cmp
int
adc
xlat
sub
sub
popf
jae
sbb
ret
ds
xchg
rolb
mov
lcall
cmp
cmp
call
movsl
jle
mov
xchg
lea
aad
or
or
adc
add
scas
daa
push
jle
pusha
fldenv
sbb
mov
xor
xor
xor
adc
cmp
sbb
sub
pop
xor
cwtl
mov
cmp
in
push
or
mov
fcoms
add
adc
push
sbb
push
pop
js
sti
pusha
jl
and
test
aaa
test
fs
xor
mov
dec
orl
xor
clc
mov
sub
test
mov
ja
popf
pop
push
xchg
sub
or
push
fldl
cwtl
filds
mov
jle
push
cmp
xchg
push
std
ja
ret
mov
fisubl
dec
xchg
idiv
mov
push
inc
fdivr
mov
mov
shrb
or
sub
pop
lods
sub
sarb
mov
or
addl
ret
jecxz
les
out
dec
dec
pushf
and
adc
in
push
adc
dec
test
mov
int3
inc
inc
mov
push
and
lret
push
mov
int
in
test
jle
jp
lcall
fdivr
idiv
and
inc
out
adc
xor
aas
xorl
in
cwtl
out
adc
js
out
mov
aaa
out
imul
aam
fcoml
dec
cmpsl
or
je
add
push
sub
or
add
popf
mov
addb
sub
jns
cs
std
iret
cmc
cltd
arpl
rclb
pop
xor
rol
icebp
mov
into
or
mov
xchg
inc
cmp
adc
dec
adc
dec
les
mov
lcall
fsubp
nop
lods
mov
push
cld
mov
sbb
icebp
in
and
mov
inc
das
dec
inc
out
stos
test
xchg
ret
iret
push
mov
movsb
adc
xlat
loop
push
add
imul
or
push
pop
add
sub
lds
dec
fidivrl
fs
movsb
sti
push
js
jge
jge
mov
xchg
pop
hlt
outsb
xor
xor
mov
into
movsb
mov
pop
pop
fbld
push
mov
sub
in
sbb
push
mov
xor
sub
pop
fnstsw
loopne
lret
cmp
cmp
movb
push
lahf
testb
push
sbb
cmp
sbb
out
mov
dec
sti
dec
cli
call
clc
mov
adc
les
add
jmp
fidivl
es
std
in
mov
cmpsl
js
popf
push
or
hlt
sub
mov
ljmp
pop
in
shlb
aam
mov
test
cmp
fldcw
adc
xor
pop
xor
cld
cmpsb
nop
sub
outsb
push
aam
push
jne
jns
or
cmp
sbb
frstor
fwait
test
repz
mov
jae
lds
pop
sarl
ja
or
aaa
sar
shll
mov
sub
pop
rcrb
mov
pusha
and
adc
scas
ss
cmpsl
in
jmp
dec
mov
cld
sbb
cmpsl
in
rcrb
xchg
gs
mov
adc
out
test
cld
xorb
push
inc
pop
push
add
or
jo
adc
xor
shlb
sub
out
jb
add
dec
inc
mov
rcrl
insb
int3
pop
outsb
adc
push
and
adcl
arpl
shll
loopne
iret
pusha
mov
pop
and
jae
mov
cmpsl
sarl
dec
mov
lret
xchg
pop
jb
mov
loope
nop
xchg
rcl
movsl
sti
or
fiaddl
test
push
cltd
mov
lds
mov
dec
daa
inc
inc
jmp
movsb
mov
out
sti
stos
pusha
cltd
into
test
mov
jno
inc
scas
lds
pop
sub
popa
mov
cmc
xor
push
adc
loop
ljmp
loope
loope
push
popf
and
jp
addr16
xor
and
xchg
repnz
jle
push
mov
das
inc
xchg
sbb
fucomip
les
lret
aaa
xor
lea
push
dec
inc
pushl
ja
std
adc
cmc
inc
mov
jo
negb
mov
pop
cmp
dec
ds
adc
mov
lahf
outsl
jecxz
push
jbe
jno
sbb
push
xchg
lret
cs
pusha
aam
inc
cld
fucom
ljmp
lret
scas
ficompl
aam
aam
sub
test
lods
addr16
loop
mov
bound
pop
xor
fstps
scas
mov
adc
insb
dec
andl
mov
into
loope
ljmp
fucomi
les
sbb
jo
pop
or
scas
push
push
adc
adc
out
std
mov
xchg
and
bound
mov
sub
mov
scas
ja
rep
cmc
out
inc
scas
fidivrs
fdivrl
xchg
dec
fwait
cwtl
mov
add
mov
iret
repnz
mov
mov
push
ret
pop
inc
and
push
push
cmpsb
pop
xchg
push
or
mov
lret
stos
cmc
or
adcb
xor
test
jae
pop
and
cmp
js
cmp
cwtl
adcb
fidivrs
aam
jg
adc
mov
push
push
sti
jne
mov
arpl
int3
es
jge
in
cmp
adc
ret
pop
xchg
push
jo
pop
ret
outsb
les
out
int
xchg
fcoml
adc
loope
jp
push
test
jge
fs
mov
lods
sbb
inc
test
and
xchg
les
sub
and
lcall
xchg
adc
mov
add
or
in
jnp
rorb
jo
mov
push
and
jmp
sbb
jns
pop
lret
lret
jb
lock
mov
fdivl
mov
cmpsb
push
imul
jge
leave
cmp
push
xchg
mov
jae
xor
push
dec
xlat
mov
cli
cmp
mov
add
stos
fldenv
stos
sbb
in
mov
mov
cmpsb
lds
mov
das
pop
mov
mov
or
xchg
insb
bound
std
sub
push
lods
ret
adc
in
mov
test
imul
test
in
mov
rcrl
jl
mov
adc
outsb
loopne
cmc
stos
test
dec
fcmovnb
popa
sbbb
adc
or
sarb
ret
inc
xor
aas
sbb
loope
roll
jae
jle
sti
imul
popa
loop
mov
out
ja
cwtl
out
stos
sbb
jmp
fisubs
jp
pop
hlt
test
fmuls
out
in
int3
jnp
jns
cmp
cs
lret
scas
inc
ds
xchg
mov
push
sbb
xlat
jne
cmpps
mov
cmpsl
sbb
mov
push
pop
sub
not
pushf
hlt
decl
out
jmp
add
cld
or
sbb
mov
sti
outsl
popa
mov
inc
inc
and
sar
jae
imul
fsts
lahf
in
push
and
les
dec
mov
fdivs
add
mov
inc
cmp
pop
cmp
or
fwait
jno
inc
or
loope
hlt
cmp
push
mov
daa
stos
push
in
push
xchg
xchg
aas
push
movsl
xchg
mov
dec
inc
mov
push
pop
test
sbb
stos
aam
inc
pop
aas
cmpsl
and
jne
fsubs
mov
sbb
mov
push
cmp
jb
imul
cmp
pop
outsl
in
adc
movsl
add
minps
pop
icebp
adc
dec
aam
fwait
ljmp
decb
dec
cli
cmp
mov
mov
mov
lea
xchg
add
and
xlat
sub
xchg
mov
push
mov
loop
stos
jno
stc
gs
mov
iret
jmp
fnstsw
or
sbb
push
lcall
jle
fildl
sahf
outsl
add
cltd
ss
pusha
xchg
jno
imul
jbe
mov
and
lret
jbe
pop
test
popa
daa
push
inc
cmp
in
popa
mov
add
push
jo
push
cmp
pop
movsl
push
aas
loopne
mov
outsl
imul
adc
jb
cmpsl
dec
dec
movsl
imul
jge
les
mov
cmpsl
test
xchg
xor
cld
pop
mov
push
adc
mov
sub
notb
aad
leave
pop
lock
xchg
dec
push
jmp
mov
xor
jno
arpl
in
sbb
rcrl
pushf
aam
mov
repz
and
jno
orb
pop
scas
roll
outsb
adc
cmp
jecxz
push
andl
push
dec
inc
clc
mov
aaa
jno
or
out
shll
jecxz
cmp
mov
popf
rol
mov
nop
adc
cmp
pop
jbe
adcb
sbb
mov
insb
push
jmp
mov
cmpsb
inc
std
int3
repz
sysret
mov
inc
adc
pushf
aas
push
popf
sbb
mov
hlt
jo
jo
inc
fstl
inc
mov
xlat
cli
jg
jl
xor
in
mov
inc
inc
std
jl
sbb
sar
loope
out
add
mov
and
ja
fistps
jmp
ret
sub
xchg
rclb
sahf
sbb
dec
lret
dec
mov
cmp
xchg
dec
cmp
sub
inc
mov
mov
outsl
mov
pop
sahf
movsl
sti
clc
and
jge
in
fcmove
sub
outsb
js
jbe
lret
pop
sarb
xor
sbb
jne
sub
scas
pop
mov
fisubrl
int
bound
add
fidivrs
ja
aam
pusha
pop
sahf
jecxz
xor
scas
fwait
popf
sbb
or
sub
call
cmpsl
push
fdivs
jbe
pop
pop
ljmp
lret
pusha
and
call
popa
ret
enter
sbb
mov
popa
cmp
jp
cmp
mov
imul
pop
pop
fmulp
dec
and
enter
and
into
xchg
int
decl
xor
sbbb
mov
jb
test
mov
aad
mov
inc
mov
sub
inc
rolb
mov
test
xlat
push
adc
test
dec
xor
jno
mov
ja
popf
cltd
or
andl
les
ret
les
fdivl
out
and
fstp
pop
push
and
ret
aad
imul
inc
xlat
sbb
add
sbb
in
xchg
push
out
movsb
xchg
add
xor
xchg
mov
insl
lahf
pop
pop
pop
shrl
testl
int3
push
adc
pop
loopne
mov
in
pop
xchg
jno
inc
ret
scas
xchg
out
fs
inc
out
cmc
rcrb
pop
xchg
cmp
lock
push
mov
int3
std
xor
rcl
das
in
loop
sbb
mov
push
pop
add
fsubs
lahf
inc
clc
movsb
scas
push
pop
int
rcrb
icebp
nop
or
pop
xor
add
cwtl
mov
xchg
pusha
and
daa
or
mov
aaa
jl
repnz
cmp
movsb
mov
push
fwait
mov
lahf
inc
push
pop
push
xchg
mov
dec
cmp
mov
sub
lret
sub
mov
pushf
dec
loope
aad
jbe
jno
pushf
push
btc
and
inc
adcl
push
jbe
in
pop
jge
cmp
mov
repz
add
or
cmpsb
pusha
xor
pop
jns
sub
addb
pop
jmp
cmp
xor
ja
fiadds
push
lods
sbbb
dec
icebp
test
xor
int3
or
lea
fsubp
jnp
xor
adc
add
pop
xchg
jmp
das
add
mov
cli
xor
xlat
fwait
cmpsb
stos
cmpsb
add
nop
data16
mov
or
xor
add
gs
imul
lock
or
aas
mov
sbb
outsl
cmp
jl
jp
cmp
jnp
add
xchg
cmp
lds
and
lods
fst
pop
inc
rcr
jp
xor
imul
cmp
fmuls
stos
cmpsb
ficoms
inc
negb
inc
add
ja
aaa
and
cmp
and
adc
and
jg
add
ljmp
xchg
xchg
dec
push
xchg
aad
mov
int
jmp
aam
xor
aaa
addr16
dec
mov
call
xchg
adc
mov
dec
js
mov
ud2
lods
out
sub
mov
lea
xchg
mov
hlt
es
out
mov
pop
pop
addb
lods
addl
dec
ret
pop
push
aad
sbb
call
or
mov
adc
loopne
arpl
test
xchg
dec
test
sbbl
les
jnp
cmpsl
sti
or
repz
popf
out
push
xor
popa
movsb
xorb
sub
inc
sbb
push
shlb
into
roll
leave
sub
jb
sahf
xor
scas
cmp
dec
inc
adc
jno
jp
jo
repnz
cmp
sbb
jo
mov
ljmp
addr16
pop
dec
mov
and
popa
adc
std
addr16
imul
pop
jno
cld
xorl
test
das
ds
cmp
shl
mov
cs
jo
fisubs
jnp
cmp
fxam
daa
jno
mov
out
les
push
xchg
stos
xor
mov
in
jno
and
push
stos
lret
lahf
push
fstl
leave
andb
lret
mov
push
cmp
fnstcw
loope
in
cwtl
mov
mov
popf
test
add
or
in
cmpb
test
cmp
add
sub
sbb
decb
add
jge
push
push
lret
scas
dec
sub
pop
jmp
or
call
xor
fdivrl
enter
inc
xchg
nop
addr16
shl
cld
lods
jns
add
xchg
push
rdpmc
int
sti
imull
mov
jno
mov
mov
sarl
sbb
jecxz
fists
mov
push
sub
cmp
sbb
das
mov
jb
mov
lgs
icebp
pop
xor
xor
sbb
push
daa
inc
dec
mov
std
imul
insb
insl
lds
adc
adc
cmp
std
movsl
xchg
mov
rolb
ss
and
mov
or
adc
fisubrl
ffree
dec
test
sub
aam
or
dec
fisttpl
cld
jne
xor
and
imul
addr16
stc
sti
dec
pop
and
mov
inc
repnz
inc
shll
pusha
sbb
and
sub
cltd
fsubrs
adc
inc
push
scas
lods
in
pop
mov
loop
out
fisubl
fidivrs
cmpsl
je
sub
sahf
sub
sbb
lret
inc
lea
xlat
mov
lds
lods
push
mov
subb
sub
in
add
mov
stos
movsb
fstpt
xor
xor
xor
cmp
jae
mov
daa
dec
int
in
xorl
jmp
mov
lahf
rorb
sti
into
movsl
es
out
pop
dec
push
fs
add
sar
sbb
xor
xor
mov
data16
shlb
inc
mov
lock
imul
and
inc
xchg
aam
mov
add
scas
jecxz
imul
inc
ret
push
movsb
jae
pusha
or
mov
add
andl
das
pop
ljmp
jne
push
pusha
lods
push
add
xor
aas
xchg
jp
mov
out
outsl
stos
ret
iret
cwtl
jge
testb
xchg
mov
arpl
jge
outsl
insl
in
roll
ss
mov
testb
inc
add
jmp
jmp
fwait
and
adc
mov
sbb
push
fiaddl
add
dec
xchg
jnp
shr
outsl
xchg
cmc
lret
xchg
adc
and
push
ja
inc
daa
lret
mov
roll
mov
xchg
lcall
push
mov
in
idivl
aas
scas
ret
xlat
mov
lahf
std
pop
stos
mov
xor
mov
jns
sub
shl
and
push
push
addr16
daa
in
inc
test
mull
lods
inc
imul
mov
arpl
les
cmp
pusha
push
sbb
shl
xchg
rcl
dec
add
roll
jb
enterw
testl
ss
xchg
mov
inc
sub
loope
or
xor
lods
sarb
into
scas
movsl
leave
pop
aaa
hlt
sub
push
je
orl
popa
jmp
add
xchg
and
lock
lcall
jb
fs
xor
in
lidtl
adc
and
dec
lock
les
cmpsb
aaa
in
xor
lods
adc
jns
in
jecxz
movsb
or
lods
popa
insl
cwtl
push
push
insl
inc
dec
xor
cmp
and
out
lcall
add
leave
mov
sbb
fdivl
pushw
outsl
lcall
sar
sub
daa
or
ja
and
int3
daa
int3
mov
orb
psubq
bound
or
mov
xchg
inc
mov
pusha
or
mov
fildl
jne
pop
sbb
pop
jle
dec
lods
notb
dec
sti
bound
adc
lret
adc
xlat
mov
in
lods
ds
ja
popf
icebp
cmp
int3
jmp
dec
mov
or
jecxz
lock
pop
fnstcw
push
xor
xchg
daa
mov
xor
ljmp
test
mov
insl
daa
call
adc
or
cmp
xchg
dec
mov
xchg
out
fdivs
push
inc
sub
xor
push
and
pop
lret
mov
cld
push
arpl
cmpb
xchg
daa
stc
push
addr16
and
fs
stos
sahf
sbb
lahf
inc
aam
scas
push
cs
mov
vmread
jecxz
fwait
imul
lods
sub
mov
and
dec
jmp
fiadds
sti
push
ljmp
xchg
pop
push
pop
rorl
insb
sbb
int3
clc
loope
dec
repz
loope
inc
add
test
aad
sti
pop
cltd
pop
adc
sub
fsin
mov
pop
test
shrw
sub
mov
mov
jmp
adc
ret
and
nop
push
rorb
xor
jg
call
addr16
xchg
out
andl
aaa
pusha
hlt
shlb
loopne
pop
xchg
mov
jg
addr16
sub
adc
rcr
int3
cmp
inc
jp
lods
pop
fidivrl
data16
dec
fs
test
out
lahf
lcall
repz
mov
nop
lcall
xchg
xor
cmpsl
sarb
jnp
dec
or
jl
repz
aas
addr16
fidivl
dec
jp
mov
in
sbb
mov
mov
adc
jns
popa
scas
jg
sbb
out
and
mov
and
outsb
push
inc
xchg
outsl
mov
push
mov
hlt
push
dec
xor
enter
cmp
jae
incb
sub
hlt
adc
les
stc
neg
xchg
decl
ljmp
insl
pcmpgtb
data16
leave
mov
pop
ja
xor
addr16
in
xor
out
lods
pop
loope
cld
xorb
sbb
dec
push
inc
push
std
mov
lea
pop
xor
fimuls
cmpsb
ret
dec
addr16
mov
sahf
mov
push
cld
cmp
lret
lods
mov
in
pop
pop
inc
adcl
mov
mov
and
enter
adc
repnz
push
std
gs
iret
pushf
ljmp
arpl
in
lds
mov
cmp
xor
or
aaa
dec
lea
imul
cmpsb
pop
mov
addr16
and
push
sub
out
pop
mov
ret
inc
leave
or
jne
jl
daa
lods
push
cmp
shll
pop
pop
call
jo
aam
fadds
insl
inc
add
ljmp
push
xchg
popf
test
aad
fnsave
addr16
movb
push
pop
call
cltd
mov
adc
mov
inc
aam
les
sar
stos
xchg
push
and
lds
jg
std
sub
aas
ret
shlb
test
cmp
inc
insb
adc
and
push
stos
fdivrl
outsb
outsb
movsl
es
jno
mov
out
fisubs
sbb
adc
adc
adc
mov
add
mov
frstor
sahf
xlat
imul
movsl
loopne
sbb
test
mov
push
mov
ret
inc
cld
add
inc
movsl
push
insl
roll
or
inc
inc
fwait
popa
cmp
push
jbe
xchg
xchg
enter
mov
adc
cmp
jp
push
sbb
dec
scas
lret
cmp
scas
sar
or
cli
aas
inc
jl
push
sbb
mov
cmc
and
dec
pop
lods
daa
mov
out
push
pmaxsw
daa
jg
aas
pop
xor
fistps
sahf
sub
or
cmp
sti
dec
fxch
sub
fnsave
adc
adcl
mov
pop
ret
and
xchg
cmp
fistps
sahf
add
dec
mov
fnsave
addr16
out
dec
sub
sbb
mov
cmp
dec
ret
mov
sbb
mov
imul
mov
add
mov
lds
xchg
fiadds
inc
pop
push
jge
xor
inc
cmp
xor
add
bound
mov
pop
fwait
cmp
and
xchg
jae
cmp
in
mov
mov
loop
and
iret
push
add
in
inc
cmp
cli
icebp
ljmp
ds
push
xchg
inc
fsubrs
pop
aas
xchg
mov
push
inc
aas
cmp
cltd
ret
mov
fadd
sbb
stos
sub
xchg
loopne
aas
das
mov
xor
jno
clc
sub
mov
mov
inc
adc
push
mov
jge
scas
loope
inc
lods
repnz
pop
pushl
pop
sbb
lret
fnstcw
xchg
jg
stos
jbe
sbb
icebp
pop
inc
mov
cwtl
shrl
lahf
outsb
adc
and
mov
mov
sarl
cmpsb
xor
jmp
xchg
cmovs
push
jae
pop
movsb
push
jle
sub
push
adc
xchg
cli
shll
xor
dec
jae
add
cmp
fidivs
mov
repz
movsl
mov
pop
loop
xchg
add
add
push
insb
lahf
pop
movsl
subb
and
ds
rolb
pop
pop
mov
push
adc
jg
enter
fcompl
xchg
cwtl
outsb
mov
cmp
pop
inc
inc
and
and
aas
scas
cmp
dec
pushl
pusha
dec
push
out
xchg
fstps
inc
pop
and
imul
mov
push
push
mov
mov
mov
push
pop
add
push
clc
lds
xor
sbb
sbb
pop
pop
imul
inc
rclb
and
pop
push
andl
leave
mov
and
in
insb
sbb
push
or
push
cmp
pusha
rorl
iret
cmpsl
aas
sub
and
loopne
pop
pop
cmp
or
arpl
mov
js
mov
mov
es
in
add
pop
daa
jmp
mov
fdivl
sub
in
aas
clc
stc
xchg
xlat
ret
push
push
mov
xlat
loop
sbb
inc
imul
mov
das
shlb
inc
je
cmpsl
dec
in
mov
in
mov
inc
das
xchg
add
icebp
xchg
lret
cltd
stos
lret
cmpsl
sbb
inc
rcr
adc
add
xchg
add
mov
cmp
mov
inc
insl
sarl
cmp
sub
push
clc
mov
repnz
js
jae
mov
sarb
cmp
sub
fmull
inc
mov
in
pusha
leave
xor
pop
mov
push
sbb
push
push
notb
fucom
xchg
jno
jns
inc
imul
fists
fs
mov
push
stc
in
movsl
sub
sub
push
mov
repz
orb
sbb
shl
daa
icebp
gs
rol
jg
cmp
and
lea
and
jge
jno
or
mov
insl
sub
es
jge
shl
or
fcmovu
fsubs
popf
xchg
xchg
jecxz
push
stos
in
or
mov
out
xor
dec
cmp
dec
aas
xor
mov
add
fwait
pop
inc
jmp
arpl
rclb
inc
int
jg
and
shll
repz
mov
pop
or
mov
and
push
push
adc
jle
dec
stos
aaa
xor
adc
jg
push
mov
addr16
push
in
in
xchg
scas
jmp
sbb
idivl
push
out
shlb
pop
lods
mov
xor
dec
cs
mov
fbstp
jns
sbbl
xor
xchg
dec
pop
fldcw
sbb
and
sbb
pop
pop
inc
cmp
fisubs
jno
insl
mov
or
mov
mov
push
sbb
andb
pop
inc
sub
stos
bound
lret
mov
lock
add
push
jb
push
test
adc
in
lods
sub
sarb
push
pushf
xchg
pusha
mov
cli
mov
lds
sbb
cmp
dec
mov
xchg
xchg
mov
xor
cmp
stc
inc
sub
cmp
jl
mov
int3
sub
pop
cwtl
cmp
rcrb
cld
cmpsl
adc
ret
adc
xor
hlt
sahf
imul
mov
mov
sbb
push
std
add
inc
rclb
cmpsl
stos
mov
pop
cmc
pop
jmp
push
aaa
popf
and
jae
sbb
mov
sar
rcl
and
movsl
push
dec
jle
fstpl
or
movsl
iret
fldl
and
stos
add
lods
das
mov
push
dec
and
rorl
daa
stc
subl
outsl
xlat
ret
push
jo
cmpsl
stos
mov
loope
test
cmc
add
adc
inc
or
mov
cld
jge
ret
std
xchg
gs
mov
shl
push
daa
and
mov
sbb
sub
adc
sbb
and
xor
push
fwait
push
mov
cmpsb
daa
adc
sbb
mov
xchg
sub
dec
or
xchg
push
orb
rcl
mov
mov
xor
shl
das
jmp
xchg
jbe
pop
std
ret
bound
or
push
mov
push
cltd
add
sbb
in
or
push
fs
fdivr
sub
inc
les
icebp
aas
pushf
scas
jnp
rorb
jp
test
sub
popa
cmpb
in
mov
hlt
clc
jmp
pop
xchg
shll
movsl
dec
push
sar
stc
jo
loopne
shl
xor
lea
xor
lds
xchg
and
in
mov
add
stos
bound
popa
or
ljmp
push
adc
push
insb
jb
repz
jns
mov
or
loope
loop
mov
mov
aaa
lods
testb
dec
lods
bound
jae
test
stos
jle
jnp
or
xor
jl
fldcw
dec
out
sbb
push
mov
imul
mov
dec
mov
daa
fidivrl
sbb
xchg
faddp
push
call
mov
xor
ja
gs
dec
pop
fucom
icebp
stos
cli
test
inc
sbb
or
into
push
pop
ljmp
pop
shll
push
into
dec
sub
sbb
sub
mov
inc
mov
test
add
out
rcrb
inc
pop
xchg
or
jne
fistpl
test
mov
pop
fistpl
cmp
jb
xchg
rcr
repnz
cs
rclb
sbb
mov
jle
popf
or
shrb
jae
adc
les
mov
out
xor
bswap
lock
int
cld
lods
loope
and
or
inc
xchg
jbe
in
fldt
ja
sbb
mov
daa
fists
adc
push
inc
xor
adc
call
std
pop
out
or
mov
mov
mov
dec
or
int
cmp
pop
pop
mov
pop
cltd
add
mov
jl
sbb
inc
mov
in
push
and
or
inc
imul
jg
cs
adc
jbe
push
lcall
mov
cmpsl
lods
xchg
test
jmp
mov
cmp
enter
xlat
lods
and
mov
ds
test
mov
pop
loope
sbb
pop
clc
ds
shll
inc
lret
jne
aas
lahf
lahf
movl
mov
add
ss
adc
mov
fistpll
add
jo
insb
pop
inc
out
test
mov
mov
data16
xchg
out
lret
mov
dec
mov
cmc
push
mov
inc
pop
outsl
adc
cwtl
jae
out
xlat
cltd
dec
xchg
xchg
fdiv
or
mov
cmpsb
jle
or
cltd
mov
test
pop
push
enter
clc
adc
test
ficoms
xor
es
mov
adc
ja
outsb
xor
mov
cmp
mov
and
mov
push
loopne
or
cmc
aam
jne
jle
aaa
sub
sbb
mov
dec
aam
nop
push
pushf
pop
mov
mov
jbe
adc
sbb
mov
scas
in
mov
out
pop
inc
lret
clc
xor
and
add
lods
cmp
jae
push
or
pop
int3
jle
cli
xor
in
sub
jmp
popf
repz
arpl
mov
or
movsb
jne
divb
pop
leave
mov
insb
repz
push
ret
jae
mov
stos
test
insl
xchg
push
bound
mov
mov
ljmp
push
es
pop
insb
icebp
arpl
movsb
stos
pop
or
fnstsw
or
lods
lock
lods
dec
testb
mov
jl
popf
std
in
push
dec
xchg
cmp
and
pushf
aaa
lods
cli
inc
xor
cmp
jg
xor
leave
jno
add
add
push
dec
mov
pop
jns
add
dec
cli
in
sub
mulps
ret
iret
rorb
mov
jecxz
mov
jnp
dec
push
mov
in
dec
call
dec
push
cmp
imulb
mov
sub
lods
mov
dec
pop
dec
icebp
loop
ret
xor
jge
and
push
sbb
pop
test
or
jmp
sbbb
in
jmp
repz
lock
icebp
imul
sbb
pop
sub
mov
dec
mov
push
xor
add
pushf
adc
in
scas
test
xor
mov
mov
or
xchg
mov
mov
push
mov
jp
jno
mov
adc
xor
mov
sub
push
ja
add
mul
and
cmpl
scas
lds
dec
jnp
fdivr
adc
and
jg
adc
addr16
into
xchg
aas
inc
int
jb
jecxz
dec
add
leave
and
je
fldlg2
or
std
xor
inc
mov
mov
inc
push
subl
xchg
stos
mov
cmp
and
cld
in
xor
call
ss
repnz
das
xchg
lods
sub
xchg
shlb
test
jle
hlt
jp
scas
imul
scas
xor
ret
lea
rclb
xchg
clc
jg
push
shrl
movb
pop
mov
push
jp
ss
dec
divb
mov
bound
and
shlb
mov
jl
mov
imul
mov
sub
rol
mov
inc
lret
jnp
xor
loope
xchg
rclb
xor
add
mov
mov
outsb
aas
imul
popf
pushf
aam
adc
inc
adc
hlt
pop
lods
push
aaa
shll
insb
sub
mov
movsb
fistpll
jnp
inc
mov
xchg
jae
movsl
das
mov
lret
imul
outsl
pop
xchg
xchg
push
jb
push
test
lock
or
mov
out
jno
xchg
cmp
sub
arpl
into
icebp
int
mov
insl
jb
test
out
cmp
sti
cmpb
xchg
mov
jb
imul
repnz
mov
add
lahf
mov
dec
daa
aam
mov
aaa
pop
dec
mov
xchg
mov
lods
jle
insb
adc
loope
jg
push
divl
inc
sub
cmpsb
dec
ljmp
inc
dec
or
xchg
rcl
stos
push
or
cmp
dec
dec
in
divl
out
sub
cmc
xchg
cmp
nop
test
repnz
push
cmp
sub
aaa
out
lret
cmp
cmp
and
test
mov
dec
call
fstl
cmp
imul
sub
ja
fistpll
inc
add
dec
insb
daa
fadds
mov
fbld
xchg
fwait
shlb
les
loope
jno
jge
clc
in
scas
lret
dec
shlb
inc
adc
iret
push
test
push
jle
sahf
fs
inc
in
xchg
ficomps
mov
push
test
jl
mov
jb
fiaddl
or
mov
loopne
mov
fisttps
addr16
jg
jae
das
fs
in
insw
adc
sbb
xchg
jecxz
mov
pop
jecxz
dec
pop
push
pop
push
pop
push
cmpsb
xlat
jmp
sbbb
jecxz
cmc
jae
rcrb
lea
loopne
in
adc
iret
mov
fisttpl
push
je
inc
xchg
scas
mov
aas
xchg
sub
test
or
iret
xor
arpl
jp
add
mov
pop
adc
fisubs
xor
out
push
mov
jmp
ljmp
fbld
xor
add
jecxz
test
cmp
rcr
mov
test
fstp
aam
mov
adcb
dec
xchg
mov
dec
in
lea
out
mov
lods
arpl
shlb
es
aad
out
xor
repnz
adc
pop
lock
cmpsb
mov
jle
jg
adc
movsl
mov
leave
in
mov
or
gs
movsb
or
inc
das
sub
daa
arpl
pusha
ljmp
cmpsl
xchg
insl
push
sbb
xchg
ror
iret
add
dec
movb
iret
pop
adc
outsl
mov
stos
pop
or
bound
sub
pop
in
add
dec
mov
add
dec
dec
test
jle
mov
test
std
mov
cwtl
lods
leave
jmp
add
sub
inc
scas
ljmp
mov
mov
xchg
stos
outsl
xchg
cmpsl
mov
ja
shl
xor
add
adc
test
add
jno
les
ret
push
cmp
xchg
push
mov
and
fistpll
call
rcll
cmc
adcb
insl
inc
ljmp
daa
scas
lcall
push
lods
and
pop
or
dec
into
sti
test
outsb
jnp
or
mov
inc
cld
dec
nop
mov
stos
fs
ja
cltd
or
outsb
out
movsl
mov
and
inc
sub
ss
xor
xor
push
stos
mov
lods
mov
pop
lret
add
lret
push
movsb
xchg
adcl
cmpsb
pop
mov
adc
or
push
nop
add
sbb
cmc
jbe
xchg
adc
mov
cltd
xlat
testl
mov
jno
int
mov
repz
aaa
jb
cmp
lcall
loop
iret
cmpsl
dec
dec
jge
xchg
or
mov
imul
xlat
sbb
aas
sub
cmpsl
push
xchg
leave
mov
push
push
push
in
jo
push
in
xor
mov
add
cmp
push
aaa
fcmovb
std
push
daa
cmp
nop
fwait
loop
cmp
pop
jae
lcall
gs
cs
push
xlat
enter
mov
stos
mov
cs
mov
dec
fmuls
int
mov
mov
mov
adc
pop
test
shrl
mov
test
sub
aam
dec
fbstp
test
sbb
and
push
andb
mov
stc
push
pop
lods
loop
mov
scas
movsl
pop
sub
pop
jge
fsubrl
sbb
jnp
or
mov
and
arpl
pop
out
push
fisubrl
pusha
push
movb
sub
jg
and
and
div
call
loop
pop
lret
ret
adc
popf
je
xchg
pop
out
lcall
mov
and
insb
jp
ljmp
push
push
sti
mul
bnd
mov
and
lock
loop
outsl
cmp
mov
xor
in
rcrl
inc
lea
rcr
jbe
jmp
mov
lds
push
bound
loopne
adc
rorl
sbbl
ret
push
mov
repnz
jl
push
imul
xor
sbbb
lcall
sub
jge
call
movsb
ss
and
inc
mov
movsl
jge
insb
rcl
icebp
cmp
bound
dec
subl
ret
repz
popa
mov
test
and
inc
adc
loop
dec
repz
add
in
add
out
fnstenv
imul
imul
test
in
pop
cmp
dec
in
loopne
or
sub
sub
ss
jle
mov
mov
sbb
nop
jnp
mov
lock
popf
ffreep
and
divb
roll
xor
push
in
jae
sbb
push
push
inc
mov
mov
fs
adc
fucomip
rcrl
ljmp
insl
pop
pop
push
cmpsl
pop
cli
xchg
mov
lods
cltd
jns
jno
out
xor
mov
push
aaa
ss
sbb
ficoms
or
sahf
out
ljmp
dec
mov
in
xchg
adc
mov
mov
dec
sbb
test
jae
or
cli
mov
push
cmp
test
or
push
pop
mov
mov
cmp
rolb
add
insb
fistl
push
es
jl
incb
and
andl
dec
and
lock
insb
outsl
jmp
enter
sbb
in
inc
xlat
mov
jae
push
push
leave
lea
xchg
fisttpll
int3
ds
and
ret
mov
xlat
and
sub
xor
xor
stc
lock
lock
mov
int3
mov
adc
mov
jecxz
jns
cmpsl
lea
decl
rol
mov
jne
insl
adc
lret
adc
inc
dec
and
push
jo
rcr
lock
add
mov
xor
jmp
xor
jb
mov
fisubs
jecxz
mov
mov
sub
scas
push
pop
jnp
test
stos
or
xor
mov
ret
std
hlt
dec
and
jecxz
and
sub
out
jno
pop
inc
mov
mov
imul
cmc
adcl
xchg
inc
mov
jp
push
jmp
push
sbb
xchg
cmp
loopne
shll
rolb
das
cmp
es
lods
fisttpll
int3
jne
jle
xchg
push
div
xchg
sub
xor
and
out
adc
aad
push
xchg
outsb
mov
add
int3
ror
test
fldenv
push
andb
shll
fdivrl
push
mov
cli
pushf
cmc
scas
sti
push
pop
xchg
mov
hlt
movsb
add
out
ds
movsl
push
hlt
repz
mov
jo
xchg
cmp
inc
jecxz
out
shl
fisttpl
jne
xchg
pop
aad
push
adc
and
or
and
add
and
and
cld
lcall
and
xchg
cmp
inc
bnd
mov
xchg
jge
call
fldcw
sbb
xchg
inc
jmp
hlt
test
hlt
dec
mov
jbe
xchg
in
xchg
add
scas
jl
pop
mov
push
xchg
add
outsl
adc
in
adc
cmpsl
stc
push
aad
jecxz
jp
int
jnp
push
leave
imul
es
rcrb
out
inc
push
aad
sbb
ret
std
mov
dec
xor
movd
mov
adc
pop
rcrb
sbb
out
iret
pusha
dec
mov
enter
dec
and
scas
jb
mov
std
fwait
xchg
inc
lds
xchg
mov
shrl
nop
jno
out
mov
lds
pushf
iret
xorl
pop
adc
or
scas
cltd
push
jno
jl
sbb
iret
cli
and
mov
sbb
adc
jge
dec
adc
arpl
insb
push
fsubr
lods
dec
fdivrl
and
out
inc
idivb
adc
xchg
stos
cwtl
adc
cmpsb
ljmp
js,pn
or
sarb
hlt
in
mov
aaa
jp
xor
test
or
or
daa
push
cmp
or
icebp
lods
stc
cmp
adc
or
cmp
add
xor
mov
ret
mov
test
ficomps
push
scas
and
jae
and
flds
push
pop
xor
sbb
cmp
and
xlat
pop
push
rol
add
mov
hlt
lods
pop
aam
test
stos
lock
das
fldcw
mov
lret
lcall
cmpsb
mov
cmp
add
and
aaa
stc
imul
mov
subb
aaa
inc
test
pop
inc
inc
or
pop
add
jmp
ffree
pop
jnp
test
or
pop
mov
lods
cmp
cli
add
jbe
mov
addl
add
xor
sbb
and
dec
inc
mov
dec
insl
data16
add
mov
loopne
daa
cmp
inc
fs
pop
pushf
mov
pop
aaa
push
in
fnsave
mov
dec
test
lods
shrl
fildl
cs
loopne
leave
sub
iret
movsl
xchg
pushf
mov
out
pop
js
or
mov
mov
add
int
rcl
mov
outsl
cmp
cmpsl
mov
int3
loopne
mov
pop
aas
cld
mov
cmp
dec
loopne
out
mov
or
jo
loop
xchg
mov
repnz
adc
data16
aas
cmpsb
dec
mov
xlat
mov
fldl
les
mov
dec
push
movsb
mov
xor
and
ja
mov
mov
pop
test
cmp
pushf
imul
or
imul
pop
testb
addr16
push
loope
jecxz
push
mov
xchg
nopl
or
pop
mov
and
arpl
mov
ficoml
adc
dec
sub
addr16
inc
int3
fcom
int3
shlb
jge
and
adcb
into
xor
xchg
iret
stos
mov
inc
mov
inc
and
decb
inc
pop
rcrb
mov
cmp
pop
pop
sub
inc
aas
lods
sub
xchg
cmpxchg
sub
inc
sub
xor
and
or
clc
aas
mov
orl
mov
das
cmp
aam
repz
mov
mov
push
mov
cltd
push
aas
xchg
pushf
pop
mov
cmp
and
pop
mov
and
lret
in
push
cmp
fmull
add
push
stos
inc
and
leave
lods
dec
xor
sahf
jecxz
loop
lret
pop
inc
mov
shlb
adc
lods
stc
mov
lods
fimuls
sbb
and
ret
pop
mov
cmp
add
or
in
mov
fstps
arpl
enter
mov
lods
push
pop
xlat
dec
cmp
jno
inc
pop
aam
fistl
sub
dec
push
mov
test
imul
jle
pop
int3
enter
arpl
push
jae
adc
push
pop
stos
fcmovb
clc
or
ret
fbld
inc
lret
stos
dec
push
sti
rcll
mov
xor
fistpl
rcll
ds
cwtl
mov
shlb
idiv
dec
aam
pop
mov
rcpps
clc
add
lret
fdivrp
leave
add
or
cmp
addb
xchg
pop
mov
adcl
sub
in
ss
mull
push
push
pop
adc
in
fisubs
xlat
sub
sbb
mov
mov
xchg
or
insb
scas
adc
lcall
jb
es
pop
adc
in
jge
aaa
fsubr
les
scas
xlat
mov
jb
mov
add
mov
push
jmp
inc
lcall
ds
je
iret
bswap
xchg
std
cmp
loopne
cld
cmp
mov
jbe
arpl
lds
dec
scas
pop
inc
call
lahf
xor
repz
insb
cmp
imul
inc
cpuid
and
lock
mov
mov
flds
dec
fnstcw
sbb
or
sbb
xchg
mov
aaa
nop
mov
clc
mov
cmp
xlat
test
aaa
pusha
jne
loop
or
dec
stos
cmpsb
out
rcrl
or
jnp
pushf
into
jbe
add
cmpsl
cmp
outsb
mov
jae
sub
imul
aam
pusha
andb
shrl
cltd
push
cwtl
cmp
sbb
xorl
sub
adc
fsubrl
xor
xchg
mov
adc
fdivrl
pop
int
xor
mov
cld
nop
and
es
xor
ljmp
and
mov
mov
insl
mov
xor
pop
mov
test
pop
fadd
out
js
jno
inc
into
mov
sti
std
pop
pop
nop
sbb
addr16
call
pop
mov
add
ficomps
adc
clc
cmp
loop
xchg
push
pop
add
or
mov
dec
xchg
roll
das
movsb
or
dec
stos
lea
cmc
inc
cltd
lea
xlat
cmpsb
aas
sbb
sub
mov
movsb
pusha
dec
lcall
adc
dec
mov
mov
cmp
cmp
cli
mov
daa
mov
inc
or
and
lea
sbb
fnstcw
or
mov
jb
in
ss
adc
mov
and
and
push
mov
adc
lret
sbbb
cmp
lret
outsb
in
and
inc
cmpsb
out
repz
test
es
mov
adc
imul
std
sbb
ffree
icebp
cmpsl
or
xor
sahf
and
dec
iret
pop
inc
add
sarl
inc
imul
sub
mov
pmullw
adc
xchg
pop
notl
mov
lea
xlat
lret
push
xchg
out
pop
frstor
out
js
mov
addl
xor
mov
fnstsw
scas
push
test
adc
les
mov
fwait
lds
les
daa
add
sbb
jno
sub
inc
cmpsl
ds
push
adc
data16
ja
sub
ret
and
xor
out
or
push
addr16
add
pop
lock
movsb
in
stc
outsl
xorb
inc
out
adc
inc
clc
xchg
pop
sub
das
push
ret
xchg
sbb
add
sub
cwtl
cmp
cmp
les
pop
dec
and
ss
or
mov
xor
sub
jo
cmp
sub
inc
mov
mov
pop
adc
mov
lahf
cmc
cs
mov
call
jmp
add
aam
lret
cmc
shrw
jno
xchg
loopne
pusha
pushf
sub
inc
cmp
js
mov
insl
stc
inc
mov
aas
mov
mov
adcl
je
dec
lods
mov
mov
test
popf
adc
je
fistpl
jl
bound
cmpsb
fcmove
shlb
sub
icebp
les
mull
fnstsw
xchg
in
jne
lahf
mov
stc
add
push
push
mov
push
xlat
push
pusha
sbb
jle
mov
cmp
cmp
es
xchg
jge
subl
pusha
rcrb
cmp
repz
mov
addr16
lea
lods
insl
xchg
cmp
pusha
add
cli
jae
div
jecxz
mov
jo
pusha
movsl
popf
sbb
mov
int3
fsubrs
out
jl
add
xchg
cmp
faddp
test
aam
out
xchg
jmp
adc
sbb
pop
or
xchg
lcall
mov
push
mov
pop
pop
rsm
cmp
push
push
es
jmp
jo
pop
cmp
dec
xchg
jecxz
jbe
mov
xor
inc
jb
fnstcw
fwait
arpl
or
gs
dec
add
inc
inc
cmp
cmp
add
mov
adc
cltd
shll
aaa
adc
push
leave
mov
sub
xlat
add
push
mov
adc
mov
push
cltd
xor
fs
insl
shr
or
dec
mov
inc
nop
shrb
add
cmp
call
adc
ljmp
fs
fsubrp
xchg
cwtl
pop
jb
add
jbe
decl
jg
sbb
cmp
adc
jns
lcall
dec
sti
and
ret
xlat
adcl
call
outsb
popf
dec
imul
roll
movsl
xor
cmp
fcomp
aam
cmp
leave
lods
jl
push
cmpsl
mov
jno
insl
fwait
lcall
nop
sbb
xor
sub
or
scas
pop
dec
aam
inc
popf
out
mov
faddl
mov
cmpsb
jo
jg
call
add
shlb
shll
xchg
adc
adc
aad
pop
shrl
sbb
xchg
out
mov
mov
call
and
sub
xchg
add
ds
mov
jne
sbb
mov
ljmp
dec
mov
sbb
test
add
outsl
jmp
jg
roll
jl
cs
outsb
repnz
das
movsb
sti
pop
orb
cmc
adcb
adc
call
imulb
sbb
stos
imul
lods
xor
arpl
push
shrb
nop
gs
repnz
inc
repz
mov
cmpl
aas
outsb
sbb
dec
int3
dec
add
loop
jmp
fsubrs
cmp
test
add
and
rcrb
scas
xor
fmuls
mov
sbb
shlb
fnstcw
mov
js
jge
faddp
xchg
dec
inc
test
mov
dec
outsl
push
inc
sbb
jae
pusha
adc
sar
outsl
sub
xchg
mov
ret
pushf
sub
insl
or
lock
repz
fwait
popf
pop
popa
fstl
sub
and
shlb
push
sti
lahf
popf
cltd
lea
into
mov
sahf
aas
lret
pusha
ret
fdivrl
push
ss
push
add
loopne
imull
subb
or
cmpsb
daa
mov
leave
sarb
sbb
rep
cmp
mov
mov
sbb
jmp
mov
and
shll
call
call
adc
rcrb
push
jp
lret
cmpsb
les
shl
mov
shl
mov
aam
cmp
out
lea
fcoms
data16
fwait
js
shr
jmp
call
sbbl
cmp
test
ss
mov
sar
or
jmp
imul
sbb
xchg
dec
push
add
adc
push
add
add
test
imul
movsl
mov
sub
sub
loopne
lds
aam
shlb
aad
mov
test
adc
icebp
push
into
jl
inc
mov
add
push
push
mov
xor
call
mov
bound
ljmp
adcb
inc
mov
push
jmp
add
sbb
daa
pop
loopne
jecxz
inc
sub
cmp
xor
xchg
das
sbb
and
jmp
pop
mov
scas
das
and
cmp
fstpl
fwait
insb
test
rol
push
movb
test
xor
test
imul
mov
mov
lret
jne
sub
mov
xor
xchg
and
je
cmp
push
movsb
push
sbb
lods
out
jnp
sub
cld
xor
dec
inc
mov
cmpsb
adc
jns
das
repz
sub
dec
sub
jge
popf
push
mov
sbb
outsl
xchg
fdivrs
lods
mov
jecxz
xchg
bound
mov
jmp
enter
inc
je
lock
dec
mov
push
xchg
movhps
inc
idivb
in
xlat
mov
movsl
mov
push
rclb
jl
mov
xor
mov
bound
popf
inc
dec
scas
sbb
mov
cltd
jg
fistl
adc
add
clc
out
jge
rcl
les
outsb
rclb
aaa
repnz
outsb
add
xlat
adc
mov
cmpl
stc
adc
in
insb
std
push
fists
std
jb
mov
ljmp
int3
lret
lock
iret
mov
dec
cmp
sub
add
inc
mov
jnp
arpl
dec
data16
pop
and
out
add
sbb
popa
push
mov
push
mov
in
jle
scas
pop
mov
inc
mov
cltd
mov
and
mov
in
lret
push
loop
pusha
repnz
pop
pop
pusha
mov
fdivs
ss
fsubr
in
or
test
adc
mov
xor
es
out
outsl
test
js
in
mov
sub
movsb
ret
mov
notb
les
sbb
mov
ds
mov
push
js
push
outsb
cmp
pop
jmp
dec
sbb
add
sahf
stos
sbb
adc
stc
push
xor
pop
out
jg,pt
movsb
and
jb
lcall
popa
hlt
jp
push
ds
mov
fnsave
mov
sbb
sahf
loope
mov
mov
xchg
jle
or
pusha
rolb
jle
jbe
add
xor
sahf
cwtl
inc
or
mov
push
aam
push
pusha
sub
push
movsb
mov
ljmp
push
jg
stos
in
lea
push
cld
into
stc
ret
std
or
jns
mov
in
jb
jge
sub
pop
push
cmp
lret
and
ljmp
cld
pop
push
ret
inc
dec
cmp
push
aam
sub
mov
adcl
out
fwait
xor
pop
jnp
push
js
enter
mov
prefetch
xchg
mov
mov
jns
insb
push
lahf
dec
movsb
cmp
je
push
add
pop
add
call
jae
xor
pop
pop
cli
xchg
mov
sbb
mov
mov
filds
adc
sub
cmc
cld
loope
xchg
arpl
insb
inc
sub
pusha
jl
imul
ljmp
and
test
shrl
inc
cmp
pushf
int3
inc
and
aas
rcrl
add
js
subl
fcomps
fbld
jbe
and
xor
add
cmovns
fcmovb
les
inc
jnp
negl
and
xlat
cld
fcmove
push
mov
daa
dec
in
or
sub
imul
aam
jns
nop
xchg
pshufw
outsb
ret
cmp
pop
addr16
sbb
hlt
mov
jle
push
stos
mov
lds
je
fsubrl
into
stos
ss
dec
aaa
mov
adc
jle
loop
pop
sti
cmp
add
xor
jns
sub
jge
icebp
push
cmp
push
push
inc
pop
fs
out
fisttpl
xchg
adc
push
into
xchg
nop
daa
lcall
cmpsb
mov
ret
out
xchg
jns
cmp
aad
mov
xor
testb
mul
xlat
movsl
in
aam
sub
icebp
push
ljmp
fists
insl
sbb
xchg
add
mov
or
and
dec
lret
lret
sub
adc
or
addr16
xor
test
out
fwait
nop
insb
pop
push
jp
fstp
bound
mov
mov
mov
arpl
cmp
outsb
pop
in
xchg
and
sarb
pop
adc
and
call
popf
push
xlat
sahf
test
loop
push
inc
dec
and
inc
popa
lcall
pop
repz
test
lock
or
cli
cmc
es
imul
call
inc
leave
mov
cmpsb
mov
sbb
ljmp
sub
add
subb
test
sahf
int
inc
pcmpgtw
scas
adc
push
leave
arpl
inc
scas
fmull
cltd
in
add
dec
pop
push
out
ljmp
incl
sub
fmulp
std
addr16
push
mov
sbb
inc
mov
pop
and
cmp
into
inc
inc
add
ret
jge
and
xchg
adc
push
dec
add
das
scas
adc
loopne
and
xchg
and
mov
and
add
add
fnstenv
add
adc
mov
pusha
push
adc
cmp
hlt
adc
cltd
push
shl
icebp
inc
stos
cmpsb
xchg
ret
dec
mov
or
in
loop
dec
or
dec
mov
mov
in
xchg
inc
out
ret
hlt
sbb
test
dec
lock
ss
leave
sbb
jns
push
xor
jne
mov
arpl
outsl
stc
sbb
fisttps
repz
xchg
xor
mov
push
ret
stos
in
jb
pop
mov
jle
movsb
fildl
dec
cmp
lea
push
mov
hlt
dec
add
xchg
push
daa
jle
jle
rcrl
sti
adc
ljmp
cmp
mov
rcl
cmp
dec
cmp
inc
or
in
cmpsl
jb
and
push
sbb
es
outsb
push
jbe
shrb
rcr
push
sbb
out
imul
test
jo
fsts
push
mov
push
ret
je
bound
loope
iret
dec
movsb
push
ret
dec
mov
es
incl
inc
and
or
or
cli
ret
mov
outsb
add
dec
les
mov
leave
scas
sbb
pop
cmp
loop
das
add
mov
mov
xchg
xchg
test
aad
xchg
push
dec
push
cwtl
ljmp
cmp
or
dec
push
sbb
ffree
cmp
das
xchg
jmp
push
sub
iret
fidivrs
ret
in
cmp
ja
adc
push
std
adc
dec
add
inc
jns
lcall
shl
scas
mov
jns
cmp
dec
add
add
push
mov
idiv
movsl
add
push
dec
cmpsl
push
add
sub
inc
pushf
sbb
into
pop
push
fsubs
lcall
sbb
movsl
xchg
dec
cmpsl
mov
aaa
mov
gs
jp
inc
dec
aas
adc
xchg
sub
push
pop
jmp
mov
aad
pop
lcall
lcall
nop
ds
fs
les
es
cmc
stc
popf
lret
cmp
jne
mov
clc
mov
sbb
cmpsl
cmp
pop
xchg
xchg
sbb
sbb
cwtl
inc
dec
add
int3
ret
mov
mov
mov
inc
or
mov
lds
sub
aad
icebp
jo
movsb
pusha
or
or
repnz
push
xchg
mov
hlt
sub
rep
jnp
dec
push
scas
lahf
dec
in
xlat
inc
add
pop
dec
xchg
xchg
add
test
xorl
test
stos
ror
je
xchg
pusha
jmp
sbb
andb
dec
xorb
pop
ret
insl
dec
xor
mov
push
test
or
push
adc
test
xor
incl
and
movsb
push
xor
sahf
mov
shr
in
cmc
pusha
scas
add
push
mov
loope
div
sub
repnz
dec
mov
fcmovnb
sbb
fiaddl
push
out
jo
mov
fistps
inc
bound
lahf
inc
into
mov
jle
pusha
out
mov
cmp
mov
xor
hlt
ljmp
pop
leave
jge
pop
pop
lods
arpl
int3
jmp
shrb
jmp
sti
and
jmp
sbb
jmp
and
xor
pop
inc
int3
stos
or
jmp
mov
adc
sub
shll
mov
xchg
out
jg
adc
sub
pushf
icebp
lret
and
mov
in
jecxz
mov
icebp
imul
nop
pop
push
jne
dec
std
add
idivb
jne
dec
cmc
stc
dec
push
dec
mov
ja
pmaxsw
mov
jp
inc
les
idivb
mov
cmp
pop
cwtl
inc
or
frstor
daa
sarl
andl
je
cmova
push
jo
cmpsl
roll
jl
push
cmp
lock
sbb
pop
subb
mov
mov
cmp
mov
push
mov
cmp
gs
pop
ja
jne
sub
inc
pushw
jl
movsl
cmpsb
inc
push
sub
jecxz
mov
fmuls
xor
insl
fcom
push
mov
mov
and
push
dec
cmc
outsl
aam
add
addr16
shll
popa
add
in
mov
mulb
or
call
pop
sahf
call
dec
pop
xchg
ds
or
and
jo
jae
mov
mov
push
xor
ja
or
adc
inc
xchg
dec
in
adc
and
jb
out
sbb
ljmp
add
les
push
dec
shll
xchg
xor
and
xchg
aas
cmp
imul
pusha
aam
or
push
test
xor
pop
mov
dec
loop
test
xchg
xor
es
pop
or
repnz
mov
ret
in
fistpll
mulb
or
addb
insl
loop
pushf
fnstenv
out
ja
loop
int
inc
adc
aaa
in
std
sti
rcrb
adc
out
icebp
mov
mov
xchg
jno
inc
cmpsl
jge
add
insl
cltd
and
arpl
pop
ror
pop
and
inc
mov
sub
imul
push
fcompl
sahf
mov
je
filds
mov
xchg
in
inc
xchg
mov
arpl
stos
or
in
inc
inc
mov
pop
xlat
dec
mov
sbb
mov
shl
cs
and
jo
int3
jnp
xor
imul
mov
lcall
sub
in
ljmp
xchg
dec
cmpsl
mov
rolb
jle
mov
jp
test
cltd
adc
test
sub
movsb
rcll
idivl
dec
cmp
pop
lock
dec
loopne
addr16
test
sub
sub
cmp
xchg
push
and
and
push
pop
shll
push
push
jnp
sub
dec
mov
insl
xchg
or
out
sbb
add
cmp
dec
mov
xchg
sti
mov
push
mov
scas
jo
adc
cs
ret
mov
mov
pushf
in
sub
push
pop
movsl
jno
lods
roll
ss
fldt
push
popf
xchg
aas
imul
xor
mov
xlat
jmp
xchg
and
sub
and
adc
and
orl
mov
mov
cmp
xchg
lcall
mov
pop
fst
xchg
sti
sbb
jmp
mov
sbb
push
fsubrl
shrb
adc
or
mov
xor
aas
jno
mov
pop
movsb
notb
lods
clc
ret
mov
mov
pusha
fnstenv
sti
or
stos
pop
ficomps
cmpb
pop
loop
es
mov
mov
pop
and
and
and
js
xchg
jl
clc
pop
pop
sbbl
sbb
iret
imul
loopne
loope
sahf
jge
lret
daa
dec
cltd
add
mov
cmpsb
aad
fstl
pop
mov
gs
jecxz
data16
pop
test
push
test
fnstcw
push
dec
mov
je
xor
outsl
mov
lock
fstpl
add
cli
mov
loopne
mov
add
popa
ss
mov
sbb
ficomps
subl
and
xlat
insl
stc
xor
jb
jge
push
inc
xor
cmc
ja,pt
cmpl
jge
aas
xchg
add
lds
dec
dec
sbb
adc
xor
pushf
and
inc
repz
mov
sbb
xchg
and
ds
pop
inc
scas
inc
int
in
in
repz
fisubl
mov
pusha
movsb
jp
jbe
stos
adc
cmc
push
sub
ds
mov
jg
push
xchg
sbb
cli
xchg
daa
cmc
mov
jecxz
pop
adc
push
and
xchg
out
xor
lock
pop
inc
jo
sub
pop
mov
sub
lds
and
les
aaa
sarl
leave
pop
addb
gs
data16
nop
test
pushf
lret
neg
repz
mov
std
addr16
push
mov
enter
lods
ret
ffreep
dec
xchg
mov
mov
shrl
inc
jb
xor
inc
or
cs
pop
movsl
shlb
into
ja
xor
mov
adc
xor
outsl
or
mov
cmp
aaa
jecxz
mov
pop
mov
dec
pop
jo
clc
push
int3
repz
sahf
insl
dec
mov
xor
sbb
sub
mov
jb
and
test
lods
shrb
xor
xor
ror
cli
sub
sbb
dec
mov
stc
mov
mov
adc
lods
hlt
mov
and
testl
test
nop
dec
push
sti
mov
inc
in
xor
lret
xor
jb
in
popl
jmp
andb
jno
mov
sbb
push
fstps
jle
out
jnp
adc
sbb
or
mov
int3
dec
mov
in
orl
outsl
mov
mov
adc
mov
push
mov
adcb
pop
inc
xor
mov
jmp
push
push
sbb
jnp
dec
adc
test
lcall
loop
incl
pop
outsb
ljmp
hlt
adc
dec
mov
inc
jnp
js
lds
xchg
adc
xor
cmpsb
loop
call
rcr
adc
test
lock
test
pop
fcomi
std
pusha
jno
push
push
jecxz
jne
xchg
mov
mov
jp
jne
cwtl
xchg
cmp
mov
mov
add
jne
in
adc
pop
mov
pop
aad
jg
das
push
sti
sbb
push
cmc
aaa
les
dec
mov
cs
push
jae
sbb
js
pop
scas
pop
movsb
and
or
out
stos
nop
and
sub
pusha
rcl
rcrl
mov
loope
and
mov
jl
rolb
out
ret
lods
fcmovnb
pop
dec
ds
movsb
push
pusha
push
xchg
bound
out
or
push
movsl
pop
js
push
les
sarb
dec
adc
adc
bound
sarl
popa
repnz
stos
adc
std
dec
cmp
insb
call
test
and
lock
lea
mov
repz
popf
lods
jle
pop
mov
and
rolb
repz
mov
sub
aaa
and
sbb
in
notb
pop
sbb
mov
mov
inc
cmpsl
outsb
jnp
sbbb
pop
or
and
pusha
xor
pop
xchg
and
in
pop
ret
bndstx
inc
push
fmull
adc
xor
enter
xchg
imul
sbbb
xchg
jb
test
and
push
cli
add
jnp
cmp
pop
pop
mov
sbb
adc
adc
std
add
mov
shl
xchg
mov
testl
add
repnz
adc
data16
dec
nop
push
cmpl
lea
jl
aaa
dec
aad
add
push
sbb
icebp
or
ljmp
enter
das
jp
mov
into
mov
push
adc
cmp
loope
dec
inc
mov
pop
insb
pop
mov
push
cmp
cmc
mov
cmpsl
mov
pusha
mov
mov
inc
pusha
in
aad
mov
jno
ret
jno
mov
ss
mov
cmp
movsb
adc
xchg
xor
ret
and
sahf
inc
xchg
xlat
daa
aaa
mov
mov
xchg
xor
testb
pusha
in
inc
mov
or
outsb
loop
add
cmp
into
test
jnp
xchg
sub
push
xchg
lods
inc
in
xchg
fstpt
js
xchg
sarb
loopne
cli
add
pop
addb
fisubrs
mov
sti
stos
jno
in
movsb
xor
clc
push
ret
sbb
rorb
add
mov
xchg
dec
leave
loop
jno
ja
mov
sub
dec
shl
cld
jge
pusha
gs
jnp
imul
push
lret
outsb
mov
es
fistpll
or
aad
jnp
sbb
push
mov
mov
dec
bswap
adc
lock
pop
push
insb
ret
adc
stos
push
les
sbb
ret
jge
and
sti
sub
adc
shll
in
cs
cmpsb
inc
sbb
out
mov
dec
sarl
add
mov
add
mov
lcall
mov
cmpsl
xchg
rcl
insb
dec
inc
ret
nop
stos
ret
push
inc
jbe
test
jmp
pushf
mov
dec
sarb
and
xchg
iret
aam
xor
inc
push
test
sbb
out
jecxz
ds
daa
jp
enter
mov
xor
or
xchg
add
adc
fcom
sbb
gs
pop
or
mov
test
idivl
je
ret
jl
std
dec
int
ss
in
rcll
push
sbb
sub
mov
sarb
mov
clc
adc
adc
xchg
lds
cmp
hlt
and
jmp
sub
int
pushf
int
dec
inc
jl
mov
and
sarb
inc
push
dec
inc
fsubp
loope
movsl
mov
pushf
cmpsb
repnz
icebp
mov
idivl
mov
and
and
mov
sbb
ja
ss
scas
dec
push
sbb
and
addr16
mov
jge
cmpb
pop
and
scas
mov
out
push
shll
mov
jecxz
fmul
and
loopne
sub
ds
xor
sarb
dec
int
jg
clc
or
clc
stos
out
and
xor
movsl
inc
mov
mov
or
jmp
mov
inc
lahf
scas
xchg
sub
ret
mov
sbb
pop
mov
incb
mov
cmp
fwait
pop
jno
xchg
jp
jle
push
ja
leave
shll
jnp
jae
subb
or
les
stos
mov
push
inc
dec
ret
mov
std
lahf
push
out
or
mov
imul
jne
cwtl
adc
xlat
sti
cmpl
xchg
dec
lcall
repz
je
fsubs
jnp
inc
test
lea
outsb
and
pop
stos
outsb
sbb
pop
push
js
fcom
stos
cmp
jmp
testl
bound
fnstcw
scas
fisubs
sbb
lods
mov
cmc
xchg
shrl
in
dec
pop
mov
aad
push
pop
cmpsl
fdivrs
inc
mov
dec
mov
divl
sbb
pop
or
aam
int
xlat
xchg
inc
xchg
adc
ret
lcall
pop
sub
push
and
inc
cmp
minps
sub
cwtl
mov
shlb
add
adc
into
xchg
push
inc
inc
mov
test
dec
jns
and
pop
sar
pop
stos
xchg
dec
add
sbb
adc
sbb
sbb
xor
mov
in
push
inc
pop
pop
rolb
lcall
popf
sbb
lods
push
add
test
mov
xorb
sbb
rorb
jp
adc
xchg
dec
inc
ss
xchg
add
xchg
add
faddl
sub
sbb
cmp
sbb
xor
and
jle
inc
fsubl
cmp
je
xlat
ret
jmp
int3
xor
adc
aam
dec
aaa
xchg
xchg
idivl
xchg
push
and
das
imul
mov
popf
pop
and
mov
xor
sbbl
mov
pop
mov
and
dec
or
cmpsl
mov
popa
sbb
pusha
add
or
push
inc
outsl
clc
cmpb
imulb
cmp
push
mov
xchg
jecxz
fadds
dec
mov
pop
in
mov
outsb
movsb
mov
das
or
ljmp
push
es
inc
icebp
add
ja
test
pop
add
mov
lock
pop
sbb
data16
mov
pop
aaa
or
cmp
cwtl
shrb
rclb
je
daa
aad
outsb
js
mov
dec
cld
sahf
sub
fiaddl
pop
cwtl
pop
inc
loope
popf
lret
push
stos
loop
incl
addr16
mov
daa
add
xlat
inc
inc
aaa
dec
adc
in
mov
xchg
int
pop
out
cli
aam
push
dec
push
loope
imul
cmp
xor
jns
mov
or
pop
add
mov
clc
mov
stos
cmc
lods
push
sub
insb
fs
fildll
lods
sub
and
cmp
jl
jge
push
adc
xchg
out
xchg
aaa
jp
sub
stos
mov
jb
xchg
rcrb
aad
fstpl
dec
lods
push
and
jl
push
ljmp
hlt
push
jmp
mov
lret
test
dec
cmpsb
in
jb
jmp
lahf
push
and
aad
pushf
push
xor
or
push
push
push
inc
adc
adc
sub
pusha
stos
or
fsubs
pop
shrl
mov
roll
push
lea
js
mov
mov
test
pop
sbb
outsl
dec
cmp
lret
add
dec
cmp
outsb
and
pushf
in
mov
add
adc
fwait
shll
jle
and
xlat
aam
pop
cmp
mov
je
and
mov
mov
sub
notl
pusha
les
inc
aaa
sbb
sub
push
xor
pop
jmp
iret
aas
push
mov
sti
mov
mov
mov
insl
test
push
leave
lods
inc
std
gs
cmp
mov
pop
adc
adc
and
loope
cwtl
gs
pop
aas
pop
inc
pop
push
push
mov
jg
inc
je
cld
clc
jmp
push
adc
cmp
shrb
push
testl
je
aas
add
mov
push
add
jns
jp
mov
cmpb
pop
xor
cwtl
and
push
fcmove
les
cmp
jg
cmpsb
jne
out
or
in
mov
pop
adc
test
xchg
xor
push
outsb
adc
mov
push
insb
lret
enter
dec
push
popf
jg
cmpsb
cmpsb
adc
mov
and
and
cwtl
or
sarl
pop
sub
lcall
xor
mov
xor
pop
dec
sbb
int
shr
mov
aad
stos
cmp
mov
or
inc
div
andb
cltd
scas
mov
fists
pop
das
pop
mov
push
push
fs
xchg
or
push
negl
subl
sahf
cmp
in
sub
int3
mov
test
js
mov
rcll
push
mov
mov
sahf
xor
push
scas
pandn
shll
mov
or
jp
notl
cltd
mov
dec
pop
test
jns
ficomps
daa
adc
mov
shl
inc
xchg
mov
push
cmp
lcall
ficomps
add
jb
out
fwait
js
outsl
pop
cmc
xchg
gs
xchg
inc
dec
mov
xchg
mov
fcmovnb
mov
xchg
sbb
in
decb
mov
out
sub
and
jmp
arpl
les
mov
roll
ja
scas
mov
cmp
sbb
mov
fcmovu
cmpsb
sbb
inc
aad
sbb
lea
inc
idivb
cmp
mov
sahf
adc
cmpsb
sub
dec
fiaddl
out
sub
or
inc
testb
pop
jecxz
shlb
inc
pop
dec
mov
clc
push
aad
pop
xor
adc
sub
jmp
loop
sub
xchg
in
xchg
jecxz
sbb
jg
loope
sti
push
in
icebp
outsl
clc
dec
fistps
out
sub
push
xchg
jmp
and
pusha
add
adc
or
xchg
or
cs
inc
pop
add
arpl
add
test
jb
mov
jo
jle
mulb
cmp
pop
push
ds
stos
ret
gs
push
addr16
and
fnstcw
dec
popa
testl
aam
sub
push
jmp
lds
sub
push
ret
push
lret
int
test
aaa
arpl
int3
and
insl
in
sub
divl
cmp
pop
sub
jecxz
iret
out
js
adc
jmp
jl
or
push
test
mov
adc
push
daa
mov
sbb
jge
mov
pop
pop
loopne
sarb
or
shll
push
mov
xor
arpl
loopne
lcall
cwtl
mov
loop
xorb
mov
dec
int
jno
ret
imul
cld
les
sahf
sbb
stos
sub
out
cmp
mov
imul
das
inc
dec
cmp
mov
xchg
sub
push
add
and
hlt
loop
aaa
mov
and
sub
and
rorl
leave
sahf
xor
popa
sbb
dec
add
or
sbb
bound
lods
dec
adc
mov
clc
pop
xchg
fwait
mov
shl
or
addr16
bound
fldl
lds
rorl
divl
hlt
mov
adc
pop
repz
inc
inc
push
pop
fiaddl
mov
fwait
aad
xor
data16
int3
mov
pop
flds
cmpsl
aas
or
in
xor
loop
scas
xor
jmp
push
loopne
rcll
or
ror
dec
xchg
cmc
es
mov
daa
bnd
loope
mov
dec
sti
xchg
outsb
mov
clc
xor
sarl
jae
mov
jnp
mov
arpl
roll
addb
push
pusha
inc
dec
lods
jno
icebp
xor
ficoml
mov
loopne
mov
iret
xor
gs
add
cmpsb
fnsave
jle
sub
shrl
fs
mov
xchg
push
fwait
ret
adc
adc
mov
cmp
adc
xor
mov
int3
pop
mov
repnz
jmp
xchg
addl
sbb
std
pop
dec
fmull
sti
rorl
inc
jnp
je
push
and
jmp
sbb
ja
mov
lcall
sub
mov
outsl
mov
pop
loopne
hlt
inc
mov
and
and
scas
cmp
out
inc
cmp
fdiv
not
int3
cmc
cmp
dec
jns
adc
imul
pop
mov
pop
inc
cmpl
mov
mov
mov
mov
div
pop
repz
sub
aaa
cmp
adc
sbb
cmp
add
push
xchg
push
arpl
movq
and
cmpsl
aad
or
ss
fstpl
pop
outsb
ror
lods
bts
into
stc
cmpb
and
push
aad
idivl
shl
mov
sub
rcl
xor
test
sub
mov
and
in
mov
and
add
xor
sbb
xchg
add
jl
movsb
lahf
addl
and
sub
das
fisubrs
sbb
enter
inc
enter
xchg
dec
in
mov
xlat
inc
lret
jae
fmull
mov
xor
xchg
test
xor
movsl
js
insb
clc
pop
mov
std
movsl
jnp
xor
out
jnp
into
jmp
adc
xchg
pop
and
or
jl
stos
inc
lahf
shlb
mov
pop
int3
mov
pop
sbb
aam
adc
push
mov
sub
pusha
gs
and
inc
pop
dec
mov
pop
movsl
pop
popa
fdivrp
sub
fs
idivl
pop
jmp
cmp
fwait
sbb
mov
mov
mov
push
mov
movsb
jg
xchg
jmp
sti
lret
outsl
push
and
movsl
fld
cmp
loop
jg
jl
out
mov
pusha
mov
cmp
aas
add
test
aad
mov
cmpsb
push
inc
dec
notl
and
out
stc
out
fnsave
jno
nop
adc
fmul
mov
sub
pop
ja
push
push
std
aad
dec
popa
enter
adc
mov
jg
sahf
lods
mov
and
xor
popf
shlb
add
imul
leave
inc
inc
push
xor
xchg
nop
into
jle
mov
inc
push
repnz
or
ljmp
inc
add
rclb
push
inc
imul
fmul
pushf
ljmp
cmp
cmp
ret
mov
les
fdivrl
ljmp
fsts
fs
jae
and
frstor
sbb
outsl
lcall
stos
pusha
and
inc
jecxz
mov
adc
insl
sbb
add
adc
sub
or
xchg
push
mov
test
pop
in
jns
in
push
mov
pop
cmp
add
subl
inc
ds
xor
lea
out
gs
lods
cs
testb
outsb
adc
jecxz
sbb
dec
mov
push
mov
lcall
movsb
cltd
cmp
mov
rclb
test
fdivrl
jae
dec
xor
inc
sub
pop
xchg
adc
rcr
add
loopne
scas
les
scas
pop
mov
movsb
push
scas
push
mov
sub
inc
ret
imul
jle
dec
cmc
cmp
aad
notb
jo
out
das
adc
xor
shrb
jb
je
adc
xchg
push
lods
xor
mov
dec
and
shl
js
mov
ret
imul
xorb
mov
and
push
adc
pop
out
adc
inc
xor
mov
ret
dec
lea
cmp
cmp
xor
mov
aad
fisttps
add
clc
cmp
or
cmp
xor
les
push
jno
push
jge
adc
es
bnd
pop
add
addr16
push
push
xchg
ljmp
dec
push
xchg
adc
inc
inc
sub
sbb
pop
stos
mov
stc
rol
cmc
stos
or
out
addr16
les
shlb
filds
push
movsl
mov
flds
cmp
insb
cmp
aam
jb
mov
and
jle
xchg
loop
fwait
fwait
or
aam
loopne
sub
mov
adc
push
pusha
fs
push
adc
cmp
xchg
pop
push
mov
pushf
jp
stos
sub
fnstenv
dec
dec
inc
xchg
sbb
shr
inc
xchg
adc
and
lahf
mov
iret
arpl
mov
enter
repnz
aad
in
cmc
out
sbb
or
cmp
fnstsw
fadds
push
push
xchg
mov
adc
sub
std
or
fimuls
adc
scas
cmp
mov
lds
stos
test
popl
pop
jg
mov
mov
mov
imul
and
jge
mov
adc
sbb
outsl
gs
dec
push
cmp
imul
shl
sti
ror
xchg
ret
sub
sarw
clc
aaa
test
jo
mov
pop
cwtl
sub
push
shl
data16
pop
push
cli
sbb
or
gs
add
int
sub
cmp
les
or
cmp
inc
xor
cld
negb
bound
mov
xchg
out
pop
sbb
fisubl
push
incb
push
sti
stos
mov
cmp
push
mov
mov
addl
and
and
push
and
cmp
pop
cmp
fsts
ljmp
outsl
sub
int3
ja
jmp
sbb
pop
push
add
push
arpl
dec
mov
sub
cmp
lret
sti
std
mov
mov
push
inc
mov
push
les
aaa
lcall
cmc
mov
gs
test
mov
inc
sbb
sbb
sub
jl
mov
sub
push
inc
jne
fnstsw
out
clc
mov
push
testl
sub
andl
cmc
and
jbe
jecxz
sti
xchg
xchg
push
adcb
int
adc
adc
in
mov
lock
cld
popf
test
sti
fnstcw
or
sarb
loop
jle
movsl
add
add
push
fiadds
pop
cmp
shrl
nop
xchg
and
les
push
add
mov
bound
aam
jg
sub
jne
xor
mov
icebp
sti
xor
push
test
mov
pop
into
dec
stos
add
jnp
jno
xchg
pop
mov
je
out
rorb
cmc
push
fwait
xchg
add
imul
leave
dec
lods
push
pop
mov
xchg
and
add
xchg
aad
xchg
add
cwtl
hlt
repz
add
rolb
shll
add
out
lret
fisubrl
pop
insb
into
push
inc
xor
mov
jns
and
mov
add
std
int
fcmove
pop
and
stos
dec
xor
pop
scas
add
in
insb
adc
or
push
xchg
dec
add
lret
mov
dec
iret
inc
and
xlat
popf
push
sub
mov
pop
jno
lock
mov
cmp
movsl
inc
lahf
sub
xor
aam
jnp
dec
dec
ss
stos
mov
jl
jbe
pusha
imull
mov
repnz
les
pop
insl
gs
and
pop
repz
insl
and
inc
cltd
pop
mov
dec
xchg
dec
dec
test
sbb
push
or
sub
or
adc
pop
lds
mov
in
outsl
jne
add
cltd
test
jnp
add
jae
inc
nop
cmpb
test
xchg
xchg
stos
pop
add
fmuls
repnz
icebp
cmp
shrb
test
stc
test
pop
jg
rcrb
std
adc
inc
hlt
fstpl
jae
pop
jb
add
push
fs
jecxz
cmp
pop
pop
es
mov
adc
dec
inc
cvtps2pd
jmp
jp
or
sbb
xor
stos
add
mov
xor
ret
in
inc
pop
loop
mov
push
xor
mov
jmp
sub
mov
jmp
insl
dec
pop
sub
dec
outsl
cmp
push
sti
xchg
xor
jp
sbb
push
push
jns
repnz
push
jmp
mov
call
push
dec
mov
mov
sbb
loopne
and
cld
jecxz
or
in
stos
mov
sbb
in
xor
mov
out
icebp
mov
rcrb
decl
xchg
mov
fsubrl
scas
add
add
adc
cmp
push
jle
adc
sarl
mov
jbe
cmpsb
pop
leave
xchg
or
lahf
popf
mov
pop
sub
popf
pushw
dec
dec
and
loop
dec
xchg
xchg
mov
push
mov
mov
push
add
out
icebp
cmp
lods
repz
data16
pop
or
fs
jp
into
test
xchg
jbe
sbb
mov
out
or
add
or
out
out
loope
or
lock
cmc
push
pop
jg
les
test
xor
das
mov
sbb
or
in
mov
cwtl
pop
jne
sub
and
fmul
add
rorl
mov
adc
sti
pop
outsb
das
aad
ds
dec
mov
inc
mov
psllq
arpl
cli
iret
mov
push
jge
inc
adc
lea
push
mov
sahf
mov
mov
inc
adc
xor
stos
jmp
pop
fisubs
push
pop
mov
repnz
mov
addl
sub
cmpb
xchg
jg
shrb
cmp
xor
add
cmpsl
xor
jl
fiadds
fdiv
sub
mov
sbb
stos
outsl
test
dec
and
mov
dec
mov
test
jl
adc
cs
mov
pop
add
cli
repz
imul
nop
ret
loopne
jge
jbe
and
push
movb
filds
in
movsb
test
mov
cltd
xor
sbb
dec
icebp
inc
mov
lock
fwait
push
cmp
mov
dec
jmp
and
and
ljmp
mov
adc
bound
lcall
incl
sub
dec
xor
imul
inc
data16
push
cmc
ret
mov
int
sahf
rcr
lds
and
xor
and
xchg
hlt
cli
movsb
fwait
pushf
add
gs
sub
iret
ljmp
push
aaa
add
mov
jnp
frstor
insl
aam
and
jns
dec
aam
pushf
es
mov
jne
mov
xor
bound
push
in
sahf
and
mov
push
lods
lcall
int3
cmp
cmp
push
xchg
push
xor
or
aaa
into
mov
dec
sarl
out
or
loopne
mov
mov
sbb
mov
push
jp
shll
push
daa
repz
push
leave
mov
xchg
dec
mov
sbb
subb
xor
xchg
imul
pop
stos
xchg
push
outsb
jge
add
ja
arpl
jge
idiv
out
push
xchg
cmp
add
cmp
xlat
imul
nop
ds
call
in
loop
mov
mov
fldl
lret
jp
iret
sbb
mov
cmp
scas
adc
push
lods
sbb
ds
dec
jb
cmp
aam
addr16
inc
imul
jo
pop
sbb
add
push
pop
pop
int3
lock
jl
fldcw
inc
sbb
pop
adc
popa
lods
out
jne,pt
pop
out
pop
fs
push
mov
add
jnp
mov
xchg
sub
addr16
in
cmp
mov
fsubl
cli
ljmp
movsl
mov
stos
lds
nop
cmpsl
or
sti
out
xchg
cmp
jnp
pop
jge
loop
scas
xchg
or
inc
les
leave
inc
loop
xchg
lds
mov
mov
movb
push
xchg
add
mov
out
in
repnz
inc
shll
jno
pusha
xor
icebp
xchg
adc
push
punpckhdq
add
ds
adc
pop
cwtl
and
pusha
movsb
push
mov
pop
and
pop
xchg
insb
mov
add
cmp
adcl
xor
dec
jno
stos
inc
push
lods
hlt
loopne
scas
fdivrp
mulb
push
int
mov
jl
adc
inc
daa
pop
rcll
les
pusha
das
pop
push
xchg
and
xor
cmpsl
adc
push
fdecstp
jno
jnp
aam
pop
pop
cmp
mov
push
cli
push
dec
pop
ret
iret
or
jo
mov
jb
dec
pop
jg
aad
xlat
xchg
mov
jae
aad
das
rorl
xchg
mov
lods
cwtl
aam
mov
fwait
cmp
dec
mov
push
mov
shll
cmp
mov
pop
mov
rolb
fbld
add
or
psubsw
sbb
xchg
pushf
mov
xchg
inc
adc
jnp
or
popf
jecxz
mov
xlat
and
adc
aas
fs
mov
jo
xchg
or
scas
mov
fcoms
cs
mov
cmpsb
test
sub
pop
cld
cwtl
xchg
push
xchg
into
xchg
cltd
fldcw
mov
mov
xlat
jg
mov
sub
daa
and
mov
pushf
mov
shrl
in
mov
iret
mov
cmp
fs
ds
fxch
push
mov
pop
push
inc
aam
subb
xor
js
cmp
add
pop
scas
dec
stos
filds
push
pop
mov
mov
xlat
int
test
outsl
cmpsb
sbb
std
je
add
xor
lcall
jb
sub
pop
std
xchg
sti
and
add
rcrb
test
mov
and
addr16
xchg
xchg
aas
sbb
mov
adc
imul
jg
xchg
adc
xchg
jns
jns
mov
bound
xor
cmpsl
arpl
mov
push
test
xor
int
cld
xchg
sub
fsubr
sub
cmpsl
lds
jbe
mov
pop
shrb
shll
stos
xor
outsb
cmc
inc
mov
gs
jg
jge
in
test
stos
mov
lret
pop
push
mov
movsl
and
loope
ror
xor
gs
inc
and
mov
lods
pop
into
fldl
inc
cmp
lret
int
push
ror
jae
pop
adc
mov
in
pop
lret
mov
sbb
xchg
add
in
adc
call
rorl
aad
in
test
adc
jno
fildll
lcall
fwait
mov
push
fs
outsl
scas
mov
jae
rcrb
cmpsb
aam
cld
sbb
mov
jbe
rclb
cs
pop
push
stos
jnp
mov
pop
push
pushf
std
add
int
int
arpl
out
out
stos
cmp
inc
mov
add
mov
cmpsl
xor
and
into
inc
jecxz
mov
loope
pop
cli
setno
sub
push
push
or
jnp
jecxz
or
mov
cmp
repnz
fucomp
fs
xchg
fstpl
cltd
test
push
insl
push
outsl
subb
cltd
pop
mov
pop
jge
mulb
out
loop
call
jecxz
roll
test
loopne
subl
jb
fidivrs
in
and
dec
add
shlb
sub
xor
shlb
mov
iret
inc
pop
rcll
rcl
jns
aaa
and
and
fstpl
sbb
xchg
add
das
jp
leave
in
lret
fmul
xor
add
adcb
arpl
pop
out
mov
inc
push
mov
push
cmc
xor
xor
int3
repz
xchg
gs
push
or
in
jmp
insl
xchg
push
int
mov
out
test
xorb
loop
xchg
jae
mov
aas
test
aam
cmp
cltd
fimull
sbb
sub
icebp
scas
insb
mov
mov
pop
xchg
inc
jae
les
jp
pop
out
adc
jo
in
ficoml
dec
cs
ja
or
adc
dec
out
in
gs
lcall
xchg
jb
xchg
fists
cs
imul
movsl
out
sub
daa
out
sbbb
dec
inc
cwtl
gs
sbb
iret
imul
jmp
push
mov
movl
mov
popf
or
mov
dec
lods
cltd
sbb
pop
fdivr
and
sub
pop
rcrl
xor
pop
xchg
cli
inc
mov
repnz
dec
out
rcrb
jnp
or
inc
push
ret
or
lret
ret
inc
add
rcl
xor
mov
jns
mov
mov
cwtl
aad
cmpsb
push
push
adc
cld
mov
pop
cmp
mov
pusha
dec
mov
std
into
roll
jp
popf
lock
jns
push
fs
add
inc
out
leave
dec
ds
pop
sbb
aas
cmc
lret
sahf
js
cld
fs
fimuls
stos
dec
adc
push
cmp
fistl
fnstenv
scas
or
fildll
scas
repnz
mov
sbb
add
idivl
xorl
sub
loopne
ss
mov
add
arpl
lock
out
mov
popa
out
inc
and
cmpsb
imul
scas
xchg
push
and
out
or
loope
insb
ss
cmp
popf
dec
xchg
stos
and
shlb
insl
or
test
test
jp
xor
cli
aas
cmp
je
dec
sbb
fs
push
add
fadd
jnp
push
cmp
faddl
jne
xor
aas
xor
mov
iret
pop
rcrb
xlat
add
mov
jmp
add
and
cmp
imul
flds
mov
ljmp
mov
fadd
jg
dec
mov
sbb
into
stos
aaa
lret
xor
inc
mov
cs
sbb
data16
and
mov
jb
push
das
push
test
imul
push
xlat
mov
add
push
push
push
or
andb
testl
sub
fxtract
xor
nop
sub
xlat
mov
jp
std
add
pop
and
bound
xchg
mov
push
shl
jg
out
jecxz
dec
outsl
and
clc
lds
jmp
dec
out
mov
jg
pusha
dec
pop
es
into
add
fsubs
sbb
pop
dec
mov
aaa
test
dec
daa
je
cmp
repnz
iret
sbb
test
int3
dec
cmp
and
adc
mov
mov
shll
push
aaa
stos
loopne
mov
cmp
push
mov
cwtl
stos
add
jg
sti
int
or
nop
jl
push
or
pop
loop
bound
sbb
or
and
or
xor
pop
inc
out
adc
jl
add
xchg
sub
hlt
sub
pop
outsb
aad
mov
cmp
dec
mov
sahf
stc
pop
rcrl
push
test
pop
push
mov
mov
in
cli
cwtl
lret
mov
ja
hlt
aas
pushf
mov
out
adc
sbb
or
mov
mov
jbe
js
and
fwait
repnz
ja
push
xor
inc
loop
jg
jle
pop
idivb
scas
leave
cli
iret
xor
movsl
push
loope
js
adc
int
xchg
sub
rcrb
mov
sbb
xor
xchg
jg
push
ret
stos
sub
std
mov
call
pushl
rclb
fdivs
call
sbb
xchg
fidivl
outsb
loopne
lcall
out
sahf
rcl
test
int
addr16
pop
dec
lods
xchg
jp
xor
imull
sbb
xchg
dec
jns
or
or
imul
or
movsb
decb
popa
lea
add
lds
sbb
jne
cltd
dec
es
or
cmpsl
outsb
aam
mov
push
idivl
pop
xchg
pop
clc
rolb
mov
orb
hlt
arpl
pop
loop
push
pop
divb
xchg
fs
hlt
xchg
mov
mov
jo
inc
push
push
inc
inc
lds
cmp
sub
imul
int3
or
fwait
pop
jne
cwtl
adc
pop
cmp
das
cmpl
xchg
lods
pop
scas
sbb
cmp
add
int3
lret
pushf
sti
xchg
ja
and
jne
cli
jge
nop
add
cwtl
dec
in
cmc
mov
out
pop
push
or
rorl
jns,pn
mov
ss
and
mov
stos
stos
cltd
pusha
add
jge
mov
mov
sub
popf
jae
jns
dec
sbb
push
pop
inc
clc
push
add
mov
xchg
pop
pop
mull
cmp
adc
fnstsw
sub
mov
xchg
das
adc
mov
loopne
pop
sub
movsb
cltd
sub
sbb
insb
shrl
call
dec
movsb
add
and
clc
repnz
aad
and
jb
gs
leave
cmp
mov
sub
imul
fwait
xor
xor
jb
scas
jp
insl
pop
ss
lods
fldenv
repz
mov
aas
adc
adc
dec
mov
mov
push
cmc
outsb
leave
bound
sub
lock
dec
icebp
xchg
xlat
movsl
and
mov
mov
dec
out
sub
jp
movsb
inc
lcall
rolb
xor
mov
push
mulb
bound
mov
std
lret
enter
sub
rcll
xchg
test
movsl
das
shl
and
dec
ret
clc
adc
les
into
ret
cmpsl
mov
sub
gs
test
mov
sbb
outsb
test
cmp
xlat
mov
mov
push
arpl
icebp
add
js
xchg
dec
sahf
loopne
push
vmovdqu
mov
in
xchg
pop
js
mov
sahf
and
push
cltd
xchg
dec
pop
or
dec
push
jns
pop
imul
imul
faddl
je
sahf
xor
cmpsb
lea
xchg
call
mov
xchg
push
std
mov
jecxz
aad
ds
mov
cmc
rolb
cmp
sbb
cli
hlt
sub
adc
ror
cmc
lea
jecxz
pop
mov
js
push
cmp
xchg
call
or
sub
lcall
ret
push
sub
cmp
movsb
fldcw
dec
adc
push
dec
add
mov
ret
mov
mov
fidivrs
push
jge
and
fwait
test
ret
fcompl
push
pusha
jb
jbe
repnz
insb
stc
mov
xchg
mov
shrb
nop
add
mov
mov
imul
insb
out
xor
dec
leave
sub
call
and
or
ret
lods
in
pop
adc
pop
inc
and
mov
popa
mov
dec
sbb
lret
dec
mov
jo
mov
ljmp
mov
push
inc
cmp
int
xchg
aad
push
xlat
push
btr
fcomip
or
outsl
adc
cmc
out
jecxz
jmp
loope
jp
iret
lahf
xchg
add
outsl
inc
lock
mov
flds
fnstenv
adc
mov
inc
and
out
test
inc
jbe
pop
push
and
and
int
popf
or
in
mov
cmpsl
sbb
add
jno
mov
pop
mov
or
repnz
push
sbb
xchg
sahf
jae
js
push
aas
in
xchg
jecxz
pop
sbb
shll
ret
pop
js
test
inc
jp
adc
rolb
jg
xor
daa
dec
xchg
imul
hlt
cmpsl
ja
add
adc
jo
push
cltd
fcoml
cmp
les
cmp
sbbl
ds
fbld
in
mov
pushf
mov
or
stos
inc
dec
push
dec
xor
xor
add
inc
addr16
xor
inc
jmp
xor
xorl
aas
sub
mov
mov
mov
das
mov
push
scas
push
bound
jmp
cld
ds
scas
push
out
hlt
mov
cld
cmp
test
xchg
pop
xchg
das
nop
pop
mov
jnp
pop
add
es
lea
rcll
orl
jp
daa
pop
cmp
rorb
ss
scas
lock
loop
mov
or
std
sbb
pop
dec
push
jbe
popa
fstps
push
adc
add
sbb
ret
mov
je
mov
cld
lock
mov
aam
jnp
je
sarb
repnz
pop
pop
jae
jno
lret
or
in
sbb
je
lea
aad
adc
push
notb
mov
push
movl
or
add
adc
hlt
fdivr
das
pop
dec
aad
add
lock
ljmp
and
sbb
mov
fdivr
scas
sbb
jno
jg
cmp
add
dec
or
idivl
add
jb
callw
aaa
cmpsb
lods
dec
aad
mov
repz
icebp
xor
sub
mov
sub
notl
xor
inc
pop
iret
or
iret
mov
sti
push
ja
iret
outsb
scas
int3
lods
add
push
in
add
pop
lcall
dec
inc
sub
cltd
std
pop
dec
imul
adc
flds
mov
fadds
sbb
out
scas
sub
jmp
adc
in
adc
ficomps
mov
mov
inc
es
add
xchg
cmpsb
jne
jne
sbb
mov
jle
inc
adc
push
jl
add
ret
dec
inc
jl
xchg
or
mov
lcall
fnstenv
xor
adc
shrl
js
jo
add
test
pop
cmpsl
xor
outsb
call
into
pushf
jne
imul
cmpsb
jns
mov
out
out
cli
dec
pop
or
adc
lods
sti
sub
xchg
mov
sbb
enter
scas
data16
dec
push
mov
shrb
add
out
dec
bound
orl
dec
mov
outsb
push
out
mov
ds
adc
lds
pushf
mov
adc
in
shl
dec
pop
nop
jl
bound
cmc
cwtl
push
push
je
sub
pushf
pop
mov
sbb
scas
jp,pt
add
in
cmp
pop
adc
fsts
ds
mov
mov
stc
test
xor
push
mov
xchg
mov
dec
mov
push
cs
popa
loop
dec
xchg
xchg
hlt
adc
ljmp
test
cmp
std
ret
movsb
and
fimuls
sub
lret
jmp
mul
or
mov
addr16
push
cmp
jecxz
add
sub
mov
jae
icebp
xchg
cmpsl
jp
imul
mov
or
lods
or
mov
and
cmp
iret
ljmp
mov
gs
jb
fisubrs
adc
jmp
push
and
jecxz
jbe
push
fsubs
lods
sbb
test
shll
dec
dec
pop
imul
ja
push
nop
ds
mov
add
add
cltd
jle
or
adc
or
fnstenv
dec
aam
cmp
cmp
inc
sbb
mov
arpl
and
mov
or
and
jns
loope
jg
mov
pop
sbb
imul
sahf
add
mov
std
lods
jnp
fsubrs
xchg
add
into
dec
inc
out
mov
out
enter
mov
stc
shrb
nop
imull
ss
inc
or
clc
xchg
dec
fsts
lods
das
fstpl
xor
adc
rcrl
out
call
add
idivl
pop
jge
stos
insl
jbe
sbb
flds
or
adc
jne
mov
mov
daa
stos
pop
jmp
or
dec
imul
in
mov
pop
int
adc
push
movsl
xor
cmp
dec
lods
pop
adc
mov
cmp
int
jg
lods
imul
les
mov
imul
push
test
jns
movsb
ds
into
cmp
jecxz
mov
icebp
lds
mov
in
pop
inc
lods
sub
daa
mov
sbbb
cmp
sbb
int3
add
push
gs
dec
cmc
adc
int3
dec
jg
jae
test
stc
mov
inc
adc
dec
test
filds
jb
sahf
jae
cld
not
in
aad
mov
dec
xchg
mov
xchg
test
nop
inc
std
mov
add
and
rcl
push
push
adc
in
dec
mov
mov
call
sub
je
shlb
xchg
or
or
mov
movsl
jle
cs
adc
xchg
sub
test
xchg
in
or
cmp
mov
je
insb
push
push
xchg
push
cmp
xchg
adc
cli
mov
cmp
sub
repz
imul
lock
mov
sti
push
mov
inc
mov
mov
aad
inc
out
cltd
xor
push
sbb
jge
das
inc
inc
daa
test
lahf
xchg
jl
lcall
fildl
and
push
xor
imul
jae
sarb
rclb
dec
cmpsb
xlat
ljmp
outsb
jno
sub
mov
dec
pop
in
arpl
xor
mov
sbb
mov
dec
in
inc
pop
sahf
push
out
hlt
jmp
xchg
rclb
dec
mov
jno
sti
sahf
mov
push
sbbb
mov
jb
int3
das
sbb
pop
dec
test
mov
xor
pop
mov
adc
aaa
bound
pop
icebp
rorl
into
int3
mov
leave
dec
mov
or
cltd
fisubs
mov
and
add
add
imul
sti
mov
loope
sub
mov
hlt
adc
in
sahf
ret
jno
jae
cmc
push
and
sub
sub
mov
test
inc
mov
pop
mov
push
or
cmp
sbb
mov
add
insl
testb
and
adc
jno
push
add
pusha
pop
dec
je
mov
push
jb
aas
sub
xor
mov
adc
in
add
sti
es
andb
scas
movsl
mov
cltd
add
stc
sahf
mov
inc
pusha
sti
cld
xor
push
xchg
dec
mov
or
sbb
mov
fwait
and
dec
pop
mov
pusha
add
repz
pushf
jae
add
adc
push
jl
bound
jmp
fsts
cmp
in
dec
pushf
sub
dec
xor
xchg
sub
mov
cmp
sub
xchg
adc
xchg
out
fwait
addr16
sub
push
test
shl
cltd
and
lret
xchg
ficompl
sahf
in
inc
leave
inc
insb
adc
in
sub
fisubl
sahf
movsl
lret
mov
xlat
faddl
mov
mov
fisubrl
jo
cmpsb
pop
add
push
push
push
outsl
scas
aam
push
lea
and
scas
jae
sub
lods
or
xorl
int
adc
xor
ss
subb
dec
mov
jmp
jp
adc
xor
lcall
add
and
and
jmp
mov
cs
mov
mov
mov
test
insl
loope
daa
loop
sbb
imulb
popf
sahf
ja
sub
mov
shrb
icebp
int3
mov
push
dec
int3
xchg
sbb
xor
hlt
sub
pop
fbstp
jae
xchg
aad
enter
icebp
pop
mov
inc
popf
xor
popa
fwait
cmp
ret
adc
mov
sbbb
mov
clc
jno
adc
into
call
ret
dec
or
inc
iret
or
or
into
lret
std
shlb
mov
incl
sbb
in
jge
ds
dec
out
adc
adc
in
imull
jmp
mov
jp
push
adc
mov
push
or
adc
je
adc
shrb
inc
inc
sbb
repnz
ss
inc
rorb
repz
and
add
das
sbb
fistpll
and
imul
lret
je
mov
ja
cmp
ss
lahf
stos
push
in
pavgb
or
push
leave
mov
cmp
aad
sub
cmp
mov
inc
idivb
sub
inc
enter
ret
jo
aad
std
jmp
jbe
xor
adc
xchg
rclb
daa
sarl
mov
loope
xor
leave
mov
mov
outsl
jle
cld
pop
into
gs
mov
in
push
sbb
popf
push
ret
sbb
aas
mov
insb
loope
fmull
mov
push
cmp
test
pop
insb
mov
les
jno
mov
dec
jno
dec
gs
out
sub
fldenv
lahf
dec
dec
rcl
mov
xchg
icebp
inc
addr16
lods
enter
stc
cmp
mov
lock
mov
popl
fimull
cmp
data16
adc
dec
add
mov
push
adc
pop
insl
push
add
dec
int
pop
ds
fwait
into
in
mov
ret
hlt
push
pop
test
in
jnp
mov
push
sbb
xchg
jmp
std
mov
insl
push
movsb
clc
or
mov
mov
sbb
mov
xchg
xchg
addr16
outsl
cmpl
das
fcmovb
lock
paddsw
mov
fcmovbe
sbb
in
out
jmp
in
scas
mov
inc
in
jmp
xor
inc
je
pop
mov
sub
popf
mov
stos
mov
xchg
xor
sbb
out
stos
push
push
xchg
dec
xchg
or
arpl
xchg
cli
push
mov
stos
and
cli
outsl
ljmp
adc
mov
pop
notb
or
mov
inc
add
or
push
mov
xor
leave
hlt
popf
inc
sbb
rorl
cmp
pusha
xor
imul
jno
pop
push
fcomps
jle
lds
xor
pop
jg
jo
stc
add
xchg
push
ds
cmpsb
push
inc
gs
mov
nop
xchg
negl
shlb
xchg
hlt
cmpsl
cmp
ljmp
cmp
arpl
cmp
jb
orl
sbb
jp
xchg
fldl
push
push
test
add
mov
push
es
outsl
or
mov
mov
psadbw
addr16
cmpsl
repz
lds
mov
xchg
in
or
mov
dec
or
jl
push
xchg
imul
dec
jno
push
rorb
jo
in
rorb
jnp
mov
repnz
add
lret
or
sub
into
js
or
pop
dec
xchg
pop
jne
mov
inc
aad
hlt
pop
or
push
sbb
pop
std
mov
aas
sub
jb
mov
push
int3
ret
imul
test
xchg
cwtl
les
nop
nop
jbe
sub
je
jo
push
add
xchg
pop
ds
dec
imul
mov
cmp
xchg
rorl
dec
push
cmp
mov
push
cmp
pop
inc
in
xor
mov
ljmp
push
cmc
sbb
pop
adc
xchg
in
push
cwtl
lret
mov
add
ret
mov
xchg
test
mov
sar
lahf
ss
jl
sub
es
cmp
add
lock
stc
sub
insl
dec
push
xor
aam
cld
pusha
jb
sbb
enter
xchg
sahf
adc
xorl
insl
and
stos
cld
push
and
jne
in
pop
pop
pop
lods
test
mov
or
scas
dec
mov
sbb
and
lahf
cmp
mov
sub
xchg
add
test
xor
imulb
or
rolb
lcall
lea
rcrb
das
andl
lret
cmpsl
sub
jecxz
push
mov
ljmp
aaa
xchg
outsl
pop
mov
ljmp
int3
inc
mov
cs
cmp
test
inc
ljmp
clc
bound
sahf
and
jmp
jne
imul
or
shll
outsl
or
icebp
mov
jae
inc
mov
xchg
inc
roll
and
push
push
aaa
rol
jnp
adc
stc
and
mov
adc
enter
mov
inc
cmp
js
orl
xchg
out
insb
fcmovb
insl
pop
lods
mov
jg
push
roll
aaa
mov
out
js
adc
jecxz
loopne
mov
xorb
mov
push
jae
inc
inc
mov
inc
pop
inc
in
sbb
mov
loopne
aaa
inc
dec
ret
pop
pop
aam
lahf
dec
mov
scas
mov
call
xor
sarb
gs
jae
mov
imul
bound
sub
mov
sub
add
push
xchg
push
sbb
push
mov
mov
rcll
aas
pop
movsb
pop
adc
lret
push
out
mov
pop
shrl
imul
fsts
inc
fstpt
inc
test
push
outsb
mov
out
or
sbb
loope
mov
cmp
lea
nop
aas
outsb
cwtl
popa
cmpb
inc
add
rolb
mov
jns
sti
outsb
sub
inc
xchg
push
xchg
mov
jp
inc
add
and
mov
cltd
adc
bound
es
daa
or
insb
pop
lcall
dec
shrb
mov
mov
jae
loop
loope
stos
inc
xchg
dec
cltd
push
aas
sbb
or
jae
cmp
mov
in
mov
insl
pop
jp
cmp
pop
add
fldenv
inc
cs
jecxz
shl
cwtl
lods
lods
jmp
adc
push
mov
out
aaa
push
mov
lcall
in
cmovp
call
lahf
test
sarl
fucomp
ret
stos
add
jno
sub
push
test
dec
push
sbb
movsl
and
filds
fstpl
iret
sub
inc
push
push
or
xchg
pop
movsl
mov
xchg
xchg
and
and
xor
mov
sub
call
cmp
fnstcw
mov
sti
lret
cmp
inc
sti
sbb
gs
testb
lret
cmp
mov
orl
and
inc
ljmp
loope
sub
push
paddb
xlat
jns
or
fnsave
cmp
sub
jge
mov
mov
fs
mov
lock
adc
test
rclb
add
mov
mov
insl
into
popf
scas
push
mov
inc
stc
mov
test
imul
in
fistpl
lds
outsb
lds
adc
fwait
pop
jge
push
test
xor
xchg
mov
pop
cmpsb
es
icebp
push
or
jbe
xchg
out
jo
fisubrs
push
xor
push
das
andb
mov
int
push
xor
push
cmpsb
hlt
push
les
inc
ja
push
sub
inc
aad
lahf
clc
push
js
insl
mov
loope
push
sahf
xchg
adcb
sbb
cmp
jae
sbb
lahf
ds
fcom
or
aas
mov
addr16
lret
cmp
xor
ljmp
divb
xchg
mov
in
loopne
bound
pop
icebp
sahf
and
inc
mov
jge
out
outsl
faddl
dec
adc
pop
sbb
testl
lods
xor
clc
jle
pusha
adc
pushf
pop
fldl
mov
cmpsl
dec
std
imul
ret
call
xchg
sbb
jae
mov
xchg
push
cli
pop
add
sub
add
pop
bound
xor
cmp
push
pop
loope
inc
push
adc
push
mov
sbb
inc
aad
or
and
out
dec
adc
or
sbbb
xchg
add
push
adc
and
jno
out
jns
lock
mov
insl
ret
lods
fbstp
out
xchg
loop
stc
mov
popa
push
ret
les
pop
pop
jmp
mov
cmp
scas
or
and
sbb
add
push
aas
leave
icebp
push
xor
stos
aad
movsl
jns
add
andl
mov
repz
lock
cmp
enter
mov
jnp
pop
imul
ds
pop
mov
jae
push
xlat
jge
sbb
sahf
sub
loopne
mov
aas
push
sbbb
add
dec
outsl
xchg
cmp
ja
lahf
icebp
adc
ss
rorl
mov
mov
lret
pop
xchg
push
sub
pop
sub
outsl
inc
dec
and
daa
std
xorl
and
mov
xlat
lods
pop
les
jae
cltd
cmp
mov
sbb
cmp
loopne
repnz
jl
inc
mov
mov
dec
sub
mov
mov
imul
xchg
aam
mov
mov
or
push
mov
repnz
lods
cmc
repnz
data16
push
dec
test
jbe
repnz
add
pop
xchg
mov
loopne
mov
push
dec
cmp
pop
mov
jne
sub
mov
je
repz
je
and
sahf
inc
clc
push
stos
mov
mov
push
insl
inc
out
sub
mov
dec
xchg
cmpsb
push
out
in
lds
or
mov
inc
adc
push
js
dec
fwait
and
popf
aad
stos
and
icebp
mov
push
out
lcall
pushl
mov
iret
lds
and
lea
lea
mov
addr16
fcmovb
mov
adc
in
jl
scas
orb
jge
jl
xorb
clc
test
fistpll
out
jmp
ror
jg
outsb
movsl
jne
out
xchg
sub
insb
jp
ljmp
fidivrs
cmp
xor
and
and
adc
inc
jns
cld
add
mov
xchg
push
sub
fsts
adc
sbb
fwait
adc
pop
xchg
mov
lahf
popf
enter
pop
in
ret
lahf
int3
jae
xorb
insl
xchg
add
dec
in
bound
sub
jne
loop
sarl
jno
mov
sub
test
ljmp
rcrl
xchg
in
mov
cmp
fcmovbe
xor
popf
icebp
pop
loope
adc
or
nop
ret
xchg
xor
ds
inc
xor
les
lahf
jae
popa
and
inc
mov
outsl
mov
xchg
lea
imul
fmuls
dec
dec
popf
mov
adcl
mov
out
xchg
out
push
mov
xchg
sbb
dec
out
inc
cmc
sbb
dec
lods
repz
jo
dec
fisttpl
sbb
inc
inc
xchg
repnz
in
xor
lods
imul
push
mov
adc
fdivl
adc
testb
sbb
and
stc
and
bound
call
xor
lret
push
and
mov
pop
jg
js
out
lret
push
pop
fs
xor
jne
test
and
faddl
fldenv
sahf
mov
pop
mov
sarl
and
mov
call
and
and
stc
enter
das
rclb
mov
aad
out
jbe
push
add
jle
test
clc
rcrl
xchg
pop
push
out
jns
stos
bound
loop
mov
jg
arpl
add
scas
mov
jmp
cmc
sub
inc
in
je
shlb
xor
jmp
popf
mov
dec
mov
push
int
gs
aas
mov
outsl
js
inc
cmpb
dec
mov
and
xchg
rcll
jmp
dec
cmp
shr
scas
jo
enter
jb
cmp
inc
and
or
dec
fxch
out
out
mov
adc
ja
movsb
pushf
cli
hlt
pusha
and
aam
cmpsl
or
call
sahf
cmovb
out
mov
lret
fs
push
jle
adc
rclb
out
cld
movsl
add
sbb
pop
dec
pop
xor
xchg
sti
sbbl
inc
mov
and
out
js
xor
cmp
xchg
outsl
adc
sub
fsubrs
es
dec
pop
cmp
ret
adc
jl
in
dec
mov
cli
adc
push
das
pop
jle
pop
jbe
aaa
sub
mov
in
xchg
adc
sub
in
add
out
dec
dec
mov
imul
xor
imul
sub
out
xor
add
inc
fsub
ja
ja
aad
mov
cwtl
jl,pn
stos
in
call
sbb
pop
out
popf
and
inc
scas
pop
jb
cmp
xchg
mov
or
pushl
in
xchg
push
psubusb
dec
imull
xchg
test
es
inc
jg
jmp
ret
ret
or
xor
adc
fmull
mov
jge,pn
cwtl
and
sub
or
cmp
in
fwait
and
call
movb
mov
pushf
int
or
push
stos
pop
mov
and
nop
pop
dec
dec
enter
cli
es
push
sahf
pop
iret
cli
scas
aad
pop
fidivrl
fisubl
outsb
xchg
es
subb
daa
push
inc
mov
dec
lods
mov
jl
inc
or
and
gs
xor
addr16
mov
inc
mov
and
movsl
jp
mov
xor
add
pushw
mov
dec
lods
xor
pushf
xchg
lods
push
mov
clc
pusha
sbb
or
cmp
cmc
aas
lea
dec
mov
push
pop
js
jno
rclb
clc
in
leave
push
aas
push
popa
push
shll
mov
fcomi
gs
sub
leave
add
pop
shr
mov
nop
ret
insl
incl
mov
lods
mov
sub
xchg
xchg
mov
cmovno
mov
xor
pop
sbb
jns
cwtl
jl
out
fistpll
inc
xlat
jns
dec
xrelease
ljmp
sbb
fimuls
sbb
cli
xor
arpl
xor
iret
lahf
or
imul
lret
mov
imul
jae
mov
pop
lret
jle
push
add
xor
fsubl
lahf
push
sub
rcll
or
lret
les
xor
addps
imul
add
or
xlat
insl
inc
ret
jle
stos
cmpsl
leave
test
test
lds
inc
popl
out
jae
aad
lea
or
imul
mov
dec
filds
test
mov
push
scas
jmp
shlb
pop
fldenv
xchg
lcall
faddl
out
dec
and
mov
fdivrs
imul
shll
cmp
lods
lock
fdivs
ret
or
out
stos
in
rol
stos
or
xchg
pop
xchg
mov
push
push
or
xor
cmp
mov
adc
repnz
repz
dec
mov
push
pusha
push
stc
ficompl
outsb
fcomp
ret
push
jne
cs
pop
ficoml
packuswb
daa
stos
js
or
mov
outsb
mov
jb
pusha
cmp
hlt
jg
inc
xchg
inc
fcompl
xor
xchg
iret
xor
push
and
shll
jnp
out
sbb
xor
xor
adc
push
dec
and
popf
mov
sti
js
ss
imul
aad
jns
and
xor
inc
inc
and
and
dec
add
mov
loope
cmp
xor
aam
rcll
insb
and
sbb
inc
ret
jp
xor
loope
cmp
js
aas
push
stc
leave
pop
mov
mov
sub
or
out
hlt
pusha
mov
nop
push
aas
imul
cmp
sub
ret
ret
pop
dec
lds
rcrl
push
xchg
jecxz
sbb
aaa
mov
ret
shll
cwtl
dec
cmc
mov
outsb
push
arpl
shlb
bound
or
sub
jg
aam
sbb
out
dec
sub
mov
outsb
inc
into
sub
mov
inc
mov
mov
jp
subb
xor
cmp
mov
push
das
aas
gs
add
mov
movsb
cs
and
int3
aas
mov
xchg
xchg
inc
dec
mov
testl
cmp
mov
xor
jl
jne
mov
mov
cli
mov
daa
mov
or
pushf
repz
imul
add
fmull
dec
lcall
mov
lods
aam
ss
mov
mov
in
sbb
sti
add
cli
je
std
aad
rorb
enter
decl
mull
cmp
adc
in
out
pop
xor
add
push
aaa
push
repnz
mov
mov
pop
adc
push
adc
cld
pop
outsb
loop
add
and
cmp
movsl
or
push
pop
testb
in
jns
mov
cmpsb
scas
fidivs
inc
sbb
shll
lahf
adc
test
test
int
idiv
int3
push
inc
push
mov
pop
sarb
or
inc
pushf
xor
lds
inc
iret
xor
jge
test
jg
jb
ljmp
bnd
stos
adcl
je
jae
arpl
jnp
pop
ret
imul
fildl
int
cmp
jp
adc
lds
jb
ds
jb
pop
ds
push
clc
and
xor
bound
insl
jbe
push
adc
sub
mov
aam
dec
mov
test
inc
and
lods
mov
js
xchg
jp
jmp
pop
into
inc
mov
movsb
jne
cmpsl
add
jb
imul
xor
xor
rcl
jb
ja
cmc
mov
imul
idivb
inc
inc
clc
sarl
pop
mov
movsb
aas
iret
pushf
lods
in
add
fmuls
sbbl
xor
pop
or
or
insl
xor
cwtl
sub
push
or
adc
int
lahf
stos
std
insl
sbb
lahf
in
in
gs
pop
xchg
inc
jns
aaa
imul
fs
push
rcrb
jp
pop
in
gs
xor
xchg
push
push
cwtl
outsb
mov
xor
aam
pop
sub
aaa
jle
or
lods
ss
xchg
movsb
cmpsb
adc
loop
and
inc
jg
jge
jno
pop
lret
jmp
dec
movsb
sub
add
call
jg
es
mov
push
rcll
push
mov
je
mov
loope
xchg
push
cmp
or
test
sbb
cli
subl
or
pop
cwtl
mov
mov
inc
push
xchg
addb
cli
mov
jns
insl
push
adc
cs
mov
xchg
movsb
loope
pop
loope
dec
aaa
rcrl
cmp
dec
test
les
inc
testl
mov
adc
es
jmp
clc
mov
cmp
adc
adc
ret
cmp
sub
push
cmp
mov
sub
dec
push
scas
aas
fsubp
std
adc
add
sahf
popf
hlt
mov
mov
and
pop
popa
mov
xchg
cmp
je
pop
lret
flds
push
pushf
fwait
and
push
loop
mov
jl
push
mov
jp
mov
push
mov
mov
lds
shl
pop
inc
insl
jmp
add
in
out
lahf
pop
push
daa
xchg
sub
sti
push
add
xlat
or
xchg
dec
in
fwait
ret
add
int3
arpl
ror
mov
out
or
inc
sub
inc
out
outsl
pop
pusha
test
xlat
inc
push
and
ja
aas
cld
add
jecxz
stc
adc
daa
mov
jmp
into
jnp
xchg
or
mov
les
mov
icebp
mov
lods
lret
jno
in
pop
inc
enter
pop
daa
int3
sbb
sbb
jae
or
sbb
pop
xchg
adc
int
push
xchg
arpl
cmp
xor
sbb
imul
inc
and
or
movsb
scas
stos
adc
dec
jne
push
mov
inc
mov
ljmp
imul
mov
outsl
inc
cltd
cwtl
aas
jecxz
cmp
call
hlt
jecxz
mov
xchg
fdivs
jns
xchg
adc
lahf
dec
mov
pusha
faddl
imul
ds
pminub
pop
or
in
mov
push
cmp
inc
jb
or
adc
mov
mov
rorl
outsb
ds
cmpsl
cs
idivl
jmp
pop
inc
mov
dec
icebp
aad
or
not
mov
push
lods
xchg
dec
movsb
mov
shrb
mov
in
xchg
ss
movsl
flds
xchg
inc
notb
pushf
inc
out
js
imul
pop
movsl
out
aaa
push
jo
or
ljmp
dec
nop
dec
inc
cmpsb
xchg
pop
xor
xor
inc
xlat
and
pop
push
sbb
pop
push
xchg
jno
mov
jbe
aam
xor
mov
dec
add
inc
in
imul
cli
xor
out
dec
ret
and
insl
pop
adc
pop
lea
xchg
inc
enter
pop
in
jb
adc
das
es
jb
dec
push
je
push
ljmp
mov
dec
lds
cmp
jbe
fsubl
dec
add
fnstsw
inc
rorb
lcall
out
pop
fwait
push
cmc
jg
test
mov
std
outsl
push
es
xchg
clc
mov
pop
cld
cltd
ret
pop
mov
adc
jg
or
insl
pop
cltd
jb
shrb
lea
test
sub
jge
and
xor
das
adc
xchg
mov
jecxz
xor
jne
adc
test
inc
into
or
sub
ljmp
and
mov
jnp
js
das
pop
mov
sti
stos
mov
adc
pop
lds
scas
cmp
dec
push
rcl
and
icebp
mov
sub
popf
pop
mov
daa
call
mov
js
jae
or
mov
cmpsl
mov
jp
ret
and
ficomps
pop
cmp
pop
sbb
leave
jno
and
lret
mov
and
leave
iret
into
pushf
mov
or
mov
js
fwait
xchg
xor
je
std
mov
fcmovb
cmpsl
rcl
daa
jae
int
fimull
cmp
dec
cmp
fadd
jl
push
insb
jmp
es
das
imul
mov
dec
mov
incl
mov
faddl
hlt
fcomi
hlt
lock
dec
int3
test
enter
testl
dec
fldt
sarb
pushf
push
das
stc
icebp
or
inc
stc
cmp
mov
gs
mov
ss
stos
dec
lahf
rolb
sub
ss
fstpt
arpl
cwtl
cmp
stos
daa
pushf
xor
mov
fimuls
jl
xchg
cmpsb
out
adc
jo
mov
sub
in
es
push
dec
aas
in
fistpll
dec
fstpt
adc
in
outsb
jmp
push
mov
add
arpl
add
insb
xlat
stos
mov
mov
xchg
test
mov
out
mov
mov
xchg
in
push
push
and
adc
mov
rcrl
and
pop
jno
lahf
mov
jbe
cmp
mov
mov
adc
mov
sub
aam
out
adc
cli
mov
pop
mov
int
int3
outsb
cmp
mov
test
mov
inc
mov
pop
in
push
xchg
sub
lret
scas
subb
iret
push
mov
flds
jno
das
icebp
ljmp
fisttpl
into
dec
movsb
or
xchg
bound
mov
scas
ljmp
outsl
inc
mov
cmc
or
push
jno
stos
int3
pop
or
out
pop
lcall
out
repz
notb
jns
mov
loopne
adc
movsl
mov
mov
aaa
test
enter
out
popa
sti
cltd
orb
sbb
insb
movsb
mov
jge
mov
add
jl
dec
mov
dec
test
daa
add
popf
popf
loop
pusha
jmp
dec
mov
bound
adc
arpl
cmp
mov
rorl
pop
lret
enter
sub
lcall
xchg
and
fmuls
dec
jge
insb
mov
dec
shlb
loopne
cld
mov
stos
dec
imul
lea
mov
lahf
jle
jae
and
mov
es
cmp
mov
jb
jnp
mov
mov
scas
ffreep
xchg
scas
sarl
mov
mov
fstpt
ss
mov
cmp
and
sbb
ds
rcrl
ffreep
leave
je
sub
adc
faddl
fmulp
push
movsb
in
out
or
push
xor
stos
dec
push
jb
xchg
lods
fdivrl
hlt
xor
xchg
inc
mov
pop
imul
scas
sub
push
ljmpw
sub
push
inc
jle
add
sbb
sub
enter
arpl
aaa
push
push
inc
cmc
lea
xor
add
pop
jmp
pop
mov
mov
pop
hlt
rolb
dec
stos
sbb
andb
and
jle
aam
mov
les
fwait
shrl
cwtl
sti
add
mov
jle
fisubs
dec
shlb
ret
push
cs
mov
jmp
popf
out
aam
add
xor
xchg
lret
mov
test
pop
add
xchg
mov
dec
mov
sub
inc
cltd
jns
add
push
mov
fistps
pop
fistps
fsub
test
test
lock
js
sbb
negb
push
fmulp
inc
xor
sub
das
aaa
clc
cld
addr16
ret
add
jne
jbe
pop
jl
popf
pop
sub
push
outsl
or
fistl
xchg
aam
das
movsb
xor
addr16
out
add
into
or
movsl
inc
mov
sbb
out
add
std
dec
and
mov
testl
jnp
lcall
sbbl
sub
jl
fwait
adc
lock
call
xchg
mov
test
sub
les
popf
ljmp
xlat
or
pop
aad
fstps
jecxz
in
xlat
dec
xchg
and
lret
mov
xor
in
xlat
push
or
data16
push
push
ljmp
pusha
sbb
sub
push
sbb
das
sbb
cli
dec
xchg
inc
pop
mov
mov
jno
sbb
insb
outsb
sbb
push
mov
je
imul
lds
push
loopne
loopne
xchg
sub
notl
pop
or
aad
pop
movsb
fisttpl
mull
jns
aas
mov
adc
mov
jge
in
rorb
andl
std
jbe
sub
adc
les
dec
xchg
js
inc
jne
lods
push
fcomi
in
sbb
repz
decl
mov
shll
sar
stos
enter
pop
rcrb
rorl
pop
add
iret
gs
bound
out
ja
hlt
cmp
xchg
inc
xchg
xchg
mov
adc
adc
mov
arpl
pop
push
xor
cmp
adc
pop
int
sub
xor
xor
jecxz
cmc
mov
push
sahf
sub
pop
jge
je
mov
add
dec
test
lahf
mov
mov
ljmp
adc
int
dec
inc
push
mov
lcall
dec
or
imul
cwtl
xor
fwait
push
and
dec
sarb
adc
in
js
add
nop
stos
or
imul
cmpb
daa
sub
fcoms
int
push
lret
lea
es
or
xchg
mov
adc
jbe
mov
js
and
xchg
arpl
cmpsl
shll
or
movsl
lods
push
pop
inc
ljmp
test
cmp
pop
pop
mov
popa
les
push
insl
cld
pop
xlat
inc
sbb
sbb
adc
lret
dec
xor
mov
xor
ret
jae
or
and
ja
sahf
push
jb
clc
out
xchg
sbb
push
mov
cmp
repz
or
stc
pop
sbb
shlb
jmp
add
mov
xchg
cltd
js
push
ja
into
fs
jge
stos
push
xchg
xchg
aas
hlt
and
inc
rolb
sti
mov
sub
pslld
aas
xor
push
repz
fists
test
outsl
and
ljmp
cmpsb
dec
in
jne
sbb
mov
mov
xor
mov
frstor
and
mov
ret
lcall
nop
jp
mov
shlb
inc
xorb
sbb
xchg
aam
add
sub
cmp
popf
aad
push
out
mov
fisubrs
and
fildll
out
sahf
ret
out
movsb
pop
inc
into
mov
clc
repnz
je
xchg
pop
xor
jbe
xor
push
xchg
in
out
sub
shll
pushf
lret
and
push
popa
movsb
daa
out
sbb
add
cmp
mov
gs
int3
xchg
dec
iret
jg
insl
les
xchg
in
call
loopne
dec
cmpsb
sbb
lea
and
popa
repnz
bound
mov
jne
pusha
adc
div
dec
lock
mov
xor
mov
fld
add
adc
jne
push
or
je
pop
xchg
outsb
and
fildll
incb
xor
jl
add
sbb
je
aas
test
outsb
fisttpl
mov
and
pop
xchg
mov
mov
jbe
loopne
daa
popf
rcr
stos
clc
pop
lea
mov
rcrl
jge
out
les
add
xor
aas
dec
inc
sub
ljmp
faddp
sbb
or
lahf
inc
sbb
bound
shlb
add
out
adc
pop
push
repnz
push
into
nop
mov
sbb
aaa
pop
xor
fdivl
push
outsb
pop
das
adc
dec
xor
pop
xchg
loop
repnz
test
xchg
or
leave
jmp
test
aas
pop
mov
jl
mov
mov
icebp
sbb
aas
sahf
lds
cmp
push
in
and
pop
rcrl
shlb
ss
xchg
icebp
jae
scas
jecxz
sbb
xchg
loope
pop
sub
push
ljmp
or
shlb
mov
xlat
repnz
clc
roll
fsubrl
pop
mov
testl
shrb
xchg
jbe
and
jns
addl
fdivrs
pop
ds
aam
and
test
ficoms
outsb
dec
aam
fidivrs
xor
mov
fildl
icebp
jno
jnp
jp
in
xor
adc
or
call
addr16
xchg
pop
les
ja
adc
cltd
add
fcompp
out
add
add
mov
mov
adc
dec
data16
add
roll
lahf
imul
or
cmp
rcrb
push
lock
mov
pop
ljmp
in
fldt
pop
cmpsl
jge
mov
movsb
pushf
mov
clc
stos
testl
sub
mov
sbb
inc
in
mov
adc
mov
daa
mov
cltd
shlb
push
adc
sub
outsl
sbb
jmp
imul
orl
jbe
addr16
pusha
jb
jl
xor
lds
xchg
push
pop
adc
jne
sbb
ljmp
jmp
rolb
push
cli
push
mov
fldt
jbe
insb
pop
dec
push
addr16
jne
push
jbe
in
int
xchg
movsb
sahf
scas
fldpi
pop
leave
inc
jne
cmpsl
fs
jno
mov
es
arpl
int3
cwtl
ljmp
dec
daa
test
popl
sahf
mov
jns
imul
jge
scas
cmpsb
xchg
pop
outsl
and
shrd
out
inc
test
or
stos
mov
lock
add
xchg
push
outsb
add
sti
sbb
sbb
xor
push
push
scas
test
pop
sub
or
mov
das
mov
adc
lcall
movsl
aaa
or
or
popf
add
shll
in
sub
repz
sti
les
in
cltd
cmp
gs
shll
mov
sarl
cmp
loopne
mov
cli
cmp
out
nop
push
push
imul
sar
mov
inc
pusha
insl
mov
or
mov
push
rclb
fildll
outsb
jge
mov
mov
mov
rcrl
mov
and
rolb
popa
aad
dec
fsts
inc
push
je
and
into
jl
roll
loope
push
or
shlb
test
test
fdivr
les
enter
int
out
outsb
mov
in
fsubrl
iret
inc
mov
lods
cmpsl
cmp
dec
mov
push
repz
lock
push
sub
mov
hlt
into
in
es
push
inc
push
sbb
push
adc
mov
dec
mov
repz
xchg
mov
sub
pop
scas
test
xor
inc
sbb
jmp
xor
je
daa
pop
cmp
es
movsl
or
call
xor
xor
fsts
jbe
outsl
ss
cmp
rorb
ret
inc
stc
inc
sbb
xor
xor
lcall
daa
xlat
inc
nop
xchg
mov
test
pop
jo
ljmp
daa
and
mov
xor
mov
stos
stc
shr
jmp
cmpsl
and
int3
out
out
mov
pop
push
daa
mov
inc
push
dec
jp
and
jbe
lods
pop
xchg
push
jbe
adc
pop
jb
adc
sub
mov
fmull
xor
cmp
mov
fisubrs
xchg
inc
outsb
push
sbb
loopne,pt
pusha
movsl
and
xchg
dec
pop
dec
cli
lcall
ds
xchg
lret
mov
jge
insb
fisubl
repnz
push
mov
sbb
repnz
mov
mov
jmp
xchg
arpl
test
sbb
sub
loope
pop
sbb
xchg
addr16
push
aad
and
inc
test
loope
rol
dec
push
pop
push
mov
sub
push
std
cmp
mov
add
jp
mov
insb
mov
mov
sbb
ljmp
hlt
out
push
xor
xor
sbb
or
stos
mov
cmp
btr
dec
jmp
in
jecxz
xchg
mov
in
sbb
dec
arpl
mov
mov
jge
dec
jb
and
int
addl
lcall
cmp
or
xchg
jecxz
fcomi
int3
lea
push
sbb
xchg
push
sbb
push
sub
test
mov
xor
subb
jo
xor
jmp
push
mov
adc
rclb
les
roll
pop
mov
rcrl
xor
xlat
adc
insb
pop
leave
dec
js
mov
ja
out
inc
mov
sub
xlat
stos
jnp
xor
and
enter
ror
hlt
rcrb
mov
movsb
sbb
xor
lods
lds
mov
mov
aad
and
or
lret
aad
test
cmpsb
sub
add
xor
cmp
enter
and
stos
xchg
add
and
outsl
mov
test
lods
lret
pop
movsl
sub
cli
mov
pop
rorl
cwtl
adc
push
xchg
jbe
scas
loop
movsb
out
adc
out
add
push
dec
mov
pop
idivb
test
sub
ret
jl
out
std
test
sbb
sub
xor
inc
arpl
lret
lahf
adc
into
daa
mov
aas
insb
je
lods
mov
or
popf
xchg
movsb
iret
bound
fisttpll
add
push
stos
rcr
sbbb
ffree
lds
mov
adc
scas
loope
and
dec
mov
sbb
scas
scas
add
sbb
mov
jmp
sub
xchg
adc
out
mov
inc
add
cld
ss
push
stc
in
push
cltd
ljmp
test
sti
fs
outsl
cmp
mov
aam
jp
mov
push
or
xchg
push
lods
aaa
push
pop
mov
inc
and
cld
in
sbb
cltd
mov
je
inc
adc
cli
mov
cmc
das
sarb
inc
roll
scas
outsb
add
cmpl
dec
jo
inc
sub
or
stos
scas
jge
rclb
jb
inc
movsb
and
fdivrp
pop
mov
or
cmp
cwtl
movsb
jp
repnz
scas
pop
imul
loope
mov
test
push
mov
mov
movsb
sbb
add
pop
xchg
cmp
xor
push
sbb
jae
sbb
aam
mov
fistl
int3
push
or
sbb
call
repz
repnz
or
cmpl
out
mov
movsl
jl
addr16
cmp
movsl
jge
or
dec
cmp
or
shl
jmp
dec
or
add
sbb
jle
hlt
fsts
pop
xchg
imul
mov
or
std
daa
jl
add
fs
pslld
leave
mov
inc
add
scas
dec
pop
xchg
mov
das
in
xor
mulb
test
sarb
add
cmp
xlat
rcrb
adc
mov
test
xchg
data16
ljmp
cltd
shl
inc
add
pop
inc
test
sbb
sub
xchg
adc
mov
xchg
cmc
jle
sub
pop
jp
jno
pushf
addr16
and
inc
mov
sbb
fiadds
cld
mov
sbb
stos
sbb
xor
adc
mov
lea
mulb
xor
and
xchg
jnp
fldl
adc
and
ret
jg
cs
dec
fistpl
jno
xchg
enter
jno
cmp
or
sub
in
pop
cmp
sub
mov
jno
outsl
jne
jle
dec
xchg
jnp
xchg
out
pusha
jmp
daa
repnz
push
push
pusha
stos
pop
hlt
adc
mov
repz
dec
push
cld
es
mov
stos
pop
stos
sbb
fwait
mov
idivb
mov
push
mov
fidivrs
or
sub
dec
pop
stc
aas
mov
or
notb
cli
lret
fcompl
cmp
cmp
cld
lds
pop
adc
mov
mov
fnstsw
lret
subb
pop
push
mov
pop
sbb
inc
sbb
add
jno
and
cli
aas
ret
std
mov
inc
mov
or
bsr
pop
inc
jbe
out
jnp
add
dec
sbb
jg
jne
cld
cmp
sahf
sub
push
fs
push
inc
jecxz
push
xchg
fdivs
popf
fwait
or
neg
sub
cs
ds
les
cld
sub
xor
repnz
into
sti
dec
mov
xor
aas
mov
int
loop
cld
lods
pusha
mov
ljmp
int
lock
dec
bound
in
dec
mov
mov
es
add
push
pop
push
and
pop
push
cli
fwait
sbb
jns
enter
loopne
std
and
std
mov
pop
adc
stos
adc
lods
lock
lds
movsb
push
mov
cmpsb
push
adc
or
xchg
aam
and
aad
xchg
or
scas
into
out
mov
testb
xorl
scas
mov
adc
imul
inc
xor
mov
sub
ss
or
sbbb
pop
rorb
push
stc
mov
sbb
pop
adc
fstp
cmpsb
sbb
add
movsl
xor
icebp
and
nop
pop
dec
iret
repz
mov
push
aas
inc
sbb
and
inc
shll
mov
cmp
aas
clc
push
mov
pop
in
sub
stos
mov
xlat
adc
xlat
pop
add
cmpsl
enter
out
inc
insb
mov
adc
fisubrs
cli
push
movd
popa
imul
push
mov
cmpsl
inc
shrl
je
xlat
fdivs
push
cmp
inc
or
sub
sbb
leave
sbb
enter
cli
or
loope
jne
xor
xorb
ds
pop
push
xor
aaa
insl
stc
je
hlt
mov
pop
int3
xor
dec
dec
xchg
imul
pop
xchg
fisubl
mov
sub
and
fdiv
inc
nop
arpl
cmp
mov
nop
pushf
dec
push
jns
lds
loop
shl
mov
pop
push
outsl
inc
subb
sbb
pop
ljmp
mov
data16
lds
adc
aaa
jmp
xorl
xchg
inc
pop
fyl2x
push
mov
mov
fstpl
roll
xchg
mov
dec
xchg
ja
dec
adc
sub
das
sub
insb
pusha
mov
xchg
add
jb
mov
shll
andb
jmp
mov
jp
stos
in
test
mov
je
popa
adc
out
cmpsb
arpl
xchg
fdivrl
and
or
cmp
and
outsl
sti
add
or
push
cs
imul
sarl
not
fcompl
cmc
lods
rorl
dec
cmp
mov
fistpll
fsubr
clc
xchg
outsb
jb
xchg
sbb
dec
mov
dec
inc
insb
pusha
icebp
jnp
bswap
sti
out
adc
imul
data16
xor
out
or
shl
mov
lods
lock
and
or
jb
sub
test
push
cli
lcall
sbb
xor
and
sub
dec
inc
mov
dec
mov
jb
shlb
mov
pop
rorb
in
adc
pop
adc
push
orl
or
dec
ss
xchg
push
xchg
into
lods
js
insl
jl
cwtl
jns
xchg
popf
cmc
sub
fildll
cwtl
sbb
sub
int
lds
sahf
fildll
inc
mov
inc
push
test
daa
or
jecxz
mov
and
xchg
or
cmpl
popa
stc
je
xchg
jb
jbe
es
js
sbb
dec
cmp
adc
jo
out
pop
mov
pop
popa
test
sub
out
rorl
imul
shl
cmpsl
dec
in
mov
divb
lahf
fstl
in
les
fwait
add
mov
std
shl
ja
clc
cmp
inc
jge
and
rorl
or
adc
ljmp
rorb
subl
or
xchg
xchg
mov
sahf
add
aaa
leave
rclb
lds
jns
aas
and
add
sub
xor
cltd
push
sbb
push
test
adcl
lea
cmp
jecxz
pop
hlt
push
ret
orps
pop
lea
lret
andl
cli
mov
fsubrs
add
loop
mov
pop
and
aad
jg
dec
jo
mov
inc
aam
or
mov
mov
and
pusha
pop
enter
imul
or
push
mov
mov
push
shr
xchg
faddl
icebp
xor
inc
jb
mov
add
shll
xlat
jg
in
testl
cld
imul
loop
outsb
mov
xor
jae
mov
xor
daa
stos
clc
es
pop
jns
inc
fsubrp
addr16
jmp
xor
aaa
mov
fwait
xchg
gs
and
ss
mov
adc
push
jns
fstps
add
test
dec
mov
add
ljmp
or
je
mov
pushl
ja
or
mov
sbb
fsubrs
lret
jno
mov
push
sbb
aam
jb
test
xchg
jecxz
mov
rclb
sbb
pop
push
scas
mov
lea
test
aas
mov
dec
aaa
mov
xor
dec
mov
fists
mov
ja
xor
loopne
out
out
xor
mov
out
xchg
popf
jmp
shl
mov
icebp
sub
arpl
jae
ss
jae
dec
mov
bound
cmp
add
mov
shl
cmp
mov
jmp
and
pop
or
mov
add
iret
sub
xor
mov
sbb
pop
lock
pop
inc
add
lcall
and
or
loop
or
cmp
sub
in
imul
xchg
mov
test
nop
aaa
pop
xchg
mov
shlb
pop
add
xor
enter
out
sbb
and
hlt
stos
fadd
xchg
mov
cwtl
repz
mov
sbbl
ss
loopne
movsb
aaa
xor
jae
testl
inc
cwtl
lcall
repz
sbb
mov
or
and
inc
in
or
pushf
push
lahf
and
shll
cmp
pop
jns
push
cmp
filds
addl
fsubrs
cmpsl
aad
bound
jle
cmpsb
pop
xchg
fucomp
sti
into
jg
les
jmp
imul
aaa
mov
dec
dec
cmp
pop
lods
jmp
loopne
repz
mov
or
jmp
dec
push
imul
scas
sbb
mov
iret
xchg
lcall
push
push
add
lds
cmp
cmpsl
cs
roll
aad
mov
rcr
enter
adc
cmpsb
push
jecxz
inc
fwait
xor
call
pop
rcrb
imul
insl
or
xchg
lds
mov
pop
sar
dec
clc
inc
fsubr
ljmp
mov
pop
mov
adc
loope
mov
roll
call
inc
cmpb
ret
hlt
rep
shrl
mov
std
repnz
test
scas
hlt
popa
mov
dec
xorl
in
push
in
arpl
imul
test
xchg
sti
adc
outsb
imul
lret
jle
dec
mov
sub
shll
jle
out
dec
mov
sbb
enter
jb
and
adc
call
dec
cmp
sbb
adc
aam
inc
addr16
repz
dec
jb
or
dec
mov
sbb
jne
test
outsl
in
loopne
ss
sbb
sbb
imul
scas
push
xchg
popa
adc
mov
push
dec
sub
ja
out
pushf
cs
pop
adc
jle
fwait
movsb
jge
add
cmp
push
jl
lods
inc
test
mov
lods
mov
call
fs
aam
and
add
cmp
mov
push
mov
lock
int3
addr16
mov
in
popa
add
int3
adc
call
aaa
outsl
ja
movsl
imul
into
fcmovb
in
js
mov
ljmp
or
mov
xchg
sbb
int3
nop
incb
jge
mov
movsb
fwait
adc
inc
mov
sarl
add
andb
pop
xchg
push
pop
cmpsb
xchg
xchg
movsb
clc
mov
in
adc
or
inc
icebp
es
dec
push
xchg
int3
jo
pop
push
aas
shlb
dec
jbe
and
fcompl
cmp
mov
mov
rcll
in
lret
cmp
xlat
mov
pop
jnp
sarl
enter
or
inc
loop
enter
mov
fwait
ss
xchg
xlat
imul
nop
out
push
mov
xor
ja
add
leave
js
js
mov
jnp
cmpb
nop
ss
pusha
mov
add
inc
mov
sbb
das
inc
push
jno
push
adc
push
push
mov
repnz
mov
dec
sub
addr16
xlat
mov
lcall
inc
push
mov
lods
movsb
mov
andl
cmp
jno
loopne
adcl
cmp
inc
leave
adc
fsubrl
scas
xor
adc
or
lea
mov
sbb
jnp
mov
cs
and
jp
ror
in
add
fnstcw
mov
cmc
loop
cld
cmp
xchg
and
movsl
and
and
stos
test
xchg
fnsave
mov
xor
push
stc
fs
test
jne
push
movsl
cmp
pop
cmp
mov
sbb
in
jp
out
mov
sbb
xor
add
leave
cmc
ret
gs
cmp
pop
sub
out
sbb
push
add
push
or
daa
mov
rorb
cmc
pop
rclw
or
sub
clc
aad
lods
cltd
or
pop
push
daa
and
sbb
daa
mov
imul
push
call
fidivrs
push
test
ja
adc
pushf
mov
or
dec
jle
mov
xchg
sub
jb
or
push
sbb
pop
sarl
ja
leave
cld
out
lahf
pop
movsl
or
xchg
push
inc
jb
loope
xchg
mov
and
xchg
lret
stos
arpl
pushf
shrl
sbb
cmpsb
xchg
es
mov
lret
adc
imul
pop
out
insl
jno
xchg
jg
sub
insb
and
addr16
aas
sub
scas
xor
outsb
sub
idivb
sbb
fnsave
hlt
in
nop
dec
or
xor
outsl
repz
push
insl
or
into
add
cwtl
fidivs
lss
push
cld
out
lods
aas
dec
jle
in
dec
and
jno
jle
and
mov
push
inc
and
loopne
insl
jmp
dec
cmp
mov
ret
stos
imul
mov
adc
push
push
shll
push
mov
jno
popf
loope
sahf
sbb
pop
fldcw
mov
dec
inc
push
movsl
mov
icebp
popaw
mov
ja
mov
push
insl
xlat
push
imul
xlat
push
push
clc
mov
decb
cs
in
dec
adc
cld
inc
jg
jge
ds
lock
lret
xchg
je
clc
pusha
add
dec
sub
push
fdivl
bound
pop
repnz
adc
out
stos
or
add
inc
mov
or
jecxz
pop
js
into
ret
mov
mov
and
mov
and
loope
xchg
inc
jge
inc
cmp
sub
int
push
neg
add
pusha
mov
dec
pop
pop
cmp
add
fdivrp
xor
aam
pop
lock
test
and
pop
pop
enter
inc
scas
outsl
mov
outsl
pop
insb
inc
mov
and
push
data16
mov
outsb
xchg
sub
lods
leave
push
add
clc
shll
push
mov
fstpl
icebp
adc
fildl
scas
sbb
xlat
cmpsl
sbb
adc
mov
jbe
pop
out
mov
rolb
sbb
xchg
insb
movsl
and
ja
cltd
adc
xor
lahf
or
out
cwtl
popa
xlat
push
adc
lahf
and
stos
adc
call
mov
lcall
pop
push
aam
or
jge
mov
inc
pop
leave
fstpl
sub
adc
cmp
nop
adc
jecxz
sbb
xchg
fwait
loope
pop
repnz
cwtl
lahf
movsl
add
imul
cmpsl
mov
das
sbb
mov
sbb
mov
repnz
and
jle
mov
dec
fwait
mov
int
pushf
jnp
repnz
sbb
in
or
add
mov
lock
and
sub
inc
es
es
xchg
fisttpl
dec
rcr
frstor
cs
movnti
stc
shll
vmaxps
cld
scas
adc
hlt
shrb
stos
push
xchg
out
push
aad
mov
cltd
call
lret
mov
stos
fstl
xorl
jne
das
mov
jp
insb
and
lcall
xchg
ss
and
sub
sbb
or
outsl
insb
outsb
xchg
mov
scas
jle
ljmp
jae
add
sbb
and
cwtl
and
add
push
adc
mov
jl
push
and
insl
rcrl
int
mov
lret
scas
add
mov
popa
mov
in
leave
mov
outsb
mov
jno
xchg
fmulp
mov
pop
cmp
mov
adc
mov
imul
aad
adc
inc
iret
mov
jbe
xor
lds
adc
ljmp
jg
and
data16
insb
fwait
xchg
ret
idiv
addr16
xorb
cmpsb
jmp
sti
mov
aas
mov
sbb
pop
lret
es
lret
adc
add
test
dec
addl
sub
pop
les
lock
adc
dec
lcall
stc
loop
xor
pop
xchg
popa
xchg
xor
mov
mov
pushf
sbb
lds
push
adc
mov
jbe
rcr
xorb
in
sub
hlt
cli
js
pop
cs
jbe
aam
inc
aad
mov
or
sub
xchg
mov
pop
test
lcall
sbb
loopne
in
xor
mov
mov
push
mov
xor
test
cwtl
cltd
mov
mov
jle
shl
mov
inc
daa
add
lret
add
lods
adc
clc
imul
add
mov
lock
xor
pop
in
data16
adc
leave
lea
imul
stos
popf
packuswb
shrl
mov
es
hlt
loopne
jg
add
lret
nop
vaddsd
push
sub
jnp
adc
xchg
or
xchg
cmp
mov
out
das
pop
in
push
pop
sahf
sub
and
push
cmp
jg
out
push
out
scas
scas
inc
unpckhps
neg
pop
jle
pushf
sub
adc
int3
pop
and
add
jns
sbb
in
pop
repz
gs
lahf
xchg
pop
lock
mov
das
ds
push
subb
arpl
cmpb
adc
arpl
mov
test
in
out
inc
jle
in
std
lods
test
jnp
xchg
mov
jae
inc
sarl
pop
xor
mov
adc
std
popf
jae
cmc
in
xor
jnp
mov
jge
stc
in
jno
pop
adc
stc
pusha
mov
pop
sub
jmp
aam
sarl
imul
xchg
dec
or
fisttps
mov
movsb
inc
loopne
jb
mov
movb
jmp
or
push
sub
test
sbb
xor
adc
leave
nop
or
cmp
cmp
xor
mov
imul
dec
fsubl
test
shr
dec
sub
or
jle
out
xchg
pop
lret
sbb
mov
mov
inc
adc
adc
push
sarb
imul
add
rcll
test
jge
or
xchg
push
testb
push
xor
fdivp
cmpb
xor
popa
push
mov
xchg
popa
ret
test
xchg
cmpb
fs
js
xor
daa
scas
addl
cmc
cwtl
jl
or
sahf
and
cs
aaa
shl
jo
jbe
mov
notl
sbb
std
mov
pushf
mov
mov
nop
push
sub
push
mov
ds
insl
stc
scas
neg
mov
pop
shrb
cmp
iret
xor
dec
push
xor
add
cld
mov
insl
sub
jno
or
cmp
mov
scas
xor
push
nop
inc
sub
loopne
insl
clts
ljmp
mov
jne
or
and
ror
inc
push
out
mov
addr16
mov
mov
jo
xchg
stos
int
xchg
jbe
mov
inc
aad
int
aaa
out
test
pop
fsts
xchg
xor
xchg
pop
jbe
out
cmp
pop
xchg
clc
mov
repnz
lret
loop
loopne
insl
popf
mov
shll
mov
add
dec
ss
aam
xchg
loopne
rol
mov
bound
lret
lret
shll
pop
push
in
sub
xor
jp,pt
enter
stos
sub
and
add
add
filds
addr16
imulb
daa
aad
fldl
or
insb
rorl
xchg
cli
sub
xchg
outsb
jb
iret
xchg
mov
sti
jne
lcall
subl
adc
mov
sbb
jp
mul
insb
je
sbb
mov
hlt
cmpl
or
insb
adc
pop
inc
mov
sahf
ja
aas
sbb
test
jge
add
loop
ljmp
sti
push
xrstors
pop
jmp
mov
cmp
clc
loope
lcall
pop
subb
xchg
daa
sub
and
mov
jecxz
mov
or
outsb
shrb
icebp
je
cmpsb
lea
out
add
inc
mov
cmpsb
sbb
or
iret
cmp
mov
push
sbb
add
lock
sbb
je
loope
inc
rcll
ror
sbb
adc
lock
repz
mov
mov
jnp
lret
xor
mov
dec
xor
aaa
out
mov
call
jecxz
stos
ret
lds
jmp
cmp
std
lgs
inc
lods
mov
pop
cmp
out
mov
dec
dec
jbe
jns
add
scas
jp
or
mov
ds
adc
nop
out
pop
cmp
adc
xchg
and
and
jmp
or
jmp
int3
jne
inc
fucomi
sub
lcall
sbb
jno
int
out
push
pop
adc
cmp
jae
ljmp
pop
lods
mov
ret
repnz
leave
stos
aam
xor
pop
sahf
adc
jo
loop
call
jmp
cmp
rol
xlat
xchg
fisubl
int3
sbb
shlb
rorb
sub
push
enter
fmull
sbb
xor
fs
sbb
std
add
imul
mov
insl
mov
imul
sahf
andl
sbb
in
sbb
pop
sub
and
or
into
pop
xchg
jne
cmp
movsb
rcll
imul
outsb
std
jo
fwait
mov
ja
scas
imul
les
cmpb
pop
or
shll
inc
dec
mov
add
pop
and
xorb
inc
lcall
and
inc
pushl
loop
out
jl
mov
mov
lods
arpl
out
aaa
jno
adc
fcomip
in
jns
sbb
fwait
repnz
mov
scas
or
dec
int3
xor
icebp
mov
adc
add
adcb
lret
shlb
sbb
cmpsl
xchg
jmp
push
cwtl
mov
mov
sbb
cmpl
pop
cmp
xchg
push
cmpsb
adc
jg
mov
push
shll
jb
pop
mov
add
nop
mov
pusha
jp
das
or
sub
inc
adc
repz
pop
sbb
mov
int
sub
mov
aas
add
leave
xchg
inc
adc
stc
daa
xor
adc
cld
aam
das
andb
jne
test
stos
bound
cmp
maxps
fsts
xchg
sbb
dec
dec
sub
imul
or
lcall
es
aaa
lcall
sub
mov
adc
xor
sbbb
outsb
add
push
cmp
jne
jl
gs
sub
cmp
iret
jnp
aaa
or
popa
loopne
or
out
ret
jo
in
mov
arpl
test
cwtl
mov
pusha
add
inc
imul
in
push
sbb
xor
sarb
orl
test
out
sub
test
mov
mov
add
pop
mov
std
add
inc
add
dec
cmp
push
inc
pop
mov
jl
mov
pop
mov
int
rep
jno
dec
jo
pop
mov
mov
cmpsl
xor
nop
lahf
pop
fistpl
xchg
inc
jno
mov
gs
test
cmp
mov
ja
gs
test
jl
movl
fwait
int
mov
pop
ret
push
xor
hlt
sbb
adc
xor
es
mov
cmpsl
cli
iret
les
mov
mov
pop
ljmp
sahf
cmp
cmpsb
iret
ret
lcall
jmp
ret
insl
std
xor
outsb
pushf
pop
out
sub
enter
test
push
dec
stos
mov
fisubrl
dec
lret
cmp
loopne
cltd
pop
dec
dec
ret
dec
mov
loopne
add
cmp
xchg
xchg
mov
inc
and
pop
jmp
mov
out
andl
jl
cmc
cld
dec
adc
cltd
outsl
mov
adc
mov
sub
ret
sahf
add
rolb
dec
mov
test
push
xchg
ja
and
dec
lods
dec
cmp
push
jp
call
clc
data16
test
dec
cmp
push
mov
push
mov
pop
ficoml
fdivr
jne
pop
jp
loopne
pop
mov
and
push
in
cmp
jmp
push
pop
jbe
mov
ret
mov
jmp
daa
xchg
pushf
add
push
or
and
roll
lock
or
and
int
push
mov
jo
mov
fs
jge
mov
fistpl
push
fstl
sbb
shrb
out
out
repz
sub
fwait
cmc
or
sub
xchg
lods
pop
jnp
mov
sbb
add
add
cs
xchg
je
mov
dec
push
pop
dec
push
adc
test
cmc
and
dec
xor
scas
testb
and
sbb
add
mov
xor
test
std
fisttps
out
fiaddl
das
ja
sbb
fcoms
test
in
add
jp
dec
jecxz
add
in
fstps
js
and
outsl
xchg
std
mov
mov
sbb
cmpl
cmp
sub
xchg
cmpsl
scas
cmp
mov
adc
fisubrl
adc
sbb
mov
push
push
or
orb
inc
mov
sbb
mov
inc
out
inc
shrl
ljmp
adcl
jo
push
add
adc
or
push
mov
lea
fmuls
lret
add
cli
rcrl
sbb
sbb
ljmp
inc
ljmp
cwtl
lds
add
jb
fwait
dec
cmpsb
ljmp
mov
sbb
adc
scas
popa
push
sbb
xor
testl
mov
bound
mov
neg
aaa
pop
in
pop
addr16
sub
adc
fldcw
rclb
lahf
movsb
jns
or
push
mov
test
mov
mov
not
fwait
lret
mov
cmp
repnz
decb
ja
insb
xchg
es
popa
enter
add
dec
loope
mov
or
xchg
arpl
out
mov
je
cmpsl
sbb
mov
out
push
push
cmc
jge
add
pop
push
cmc
clc
mov
jno
fstp
aas
cmp
orl
inc
int
stos
adc
cmc
pop
or
ret
test
mov
pop
repz
loope
cli
sti
sbb
sbb
mov
popf
cmpsb
test
pop
mov
or
jne
subl
sub
mov
insl
mov
addr16
pop
xlat
inc
xlat
jecxz
cmpsl
pushf
imul
js
popf
test
xor
sub
test
dec
jp
xchg
jmp
insl
push
xor
xchg
dec
pop
int3
mov
dec
adc
xchg
scas
sbb
std
test
out
sbb
loopne
scas
xchg
lcall
sub
movsl
mov
or
jns
xchg
inc
push
in
cli
dec
pop
xor
cmp
add
pop
adc
pop
and
mov
aad
test
pop
cltd
mov
xor
sub
or
jle
lods
inc
loop
xchg
cmp
inc
shlb
cwtl
daa
sub
in
sti
fidivs
mov
sbbb
add
adc
or
loop
stos
push
dec
in
mov
stos
mov
dec
push
mov
test
das
mov
sahf
push
dec
sub
imul
or
or
jb
push
je
pop
push
jnp
mov
inc
mov
pushf
rcrb
aaa
pop
sub
cld
in
or
rcrb
imul
std
test
mov
adc
add
imul
dec
mov
pop
or
mov
rorl
imul
or
test
xchg
add
dec
mov
inc
andl
popa
icebp
mov
lcall
out
imul
or
int
push
pop
mov
ljmp
xor
cli
sbb
mov
mov
xchg
pop
repnz
adc
mov
add
cmc
sub
or
bswap
leave
adc
cmp
jns
jmp
jmp
push
ror
into
dec
mov
xchg
fnstenv
pop
int3
data16
lods
imul
push
fcomip
xchg
sbb
fsts
sbb
call
mov
xchg
pop
push
sbb
jle
or
xor
mov
dec
fdiv
mov
imul
ss
int
test
inc
cmp
sar
scas
ds
les
inc
rclb
adc
cmpsb
adc
xchg
mov
mov
dec
inc
repz
pop
pop
aam
cmc
hlt
hlt
into
nop
movsb
dec
mov
xor
or
or
mov
test
sbb
negl
sbb
push
mov
in
movsl
ds
ljmp
popf
inc
cltd
pop
xor
fwait
out
jnp
mov
inc
adc
cltd
jns
or
rcrl
lods
xchg
flds
data16
dec
mov
adc
cwtl
popa
xor
cmp
loop
sub
and
cmp
in
add
lcall
out
std
ljmp
imul
push
xchg
sbb
add
mov
mov
dec
mov
xor
add
in
cmc
stos
rorb
cli
inc
inc
mov
mov
push
pop
ret
fistl
nop
fwait
cmp
mov
or
outsb
push
sbb
dec
xchg
out
add
xchg
cmpsb
jecxz
test
or
lcall
pop
add
xchg
pop
and
adc
xor
mov
lds
lcall
addr16
lcall
push
xlat
cltd
je
ret
mov
lods
pop
mov
push
dec
push
data16
aas
mov
inc
popa
stos
outsb
jecxz
pusha
or
push
sub
jns
sub
adc
adc
out
dec
ss
ss
dec
les
dec
clc
je
leave
sti
aam
lcall
loope
pop
xor
inc
and
pop
or
repz
shl
xchg
jb
sub
push
xlat
sbb
or
decb
or
jns
fsubrl
sbb
jge
or
es
xchg
loop
dec
fnsave
adc
pushl
and
adc
ss
std
xchg
in
ror
sti
outsl
aad
fmull
ja
xor
fmul
add
call
or
and
jnp
mov
fnstenv
jecxz
sbb
mov
push
and
push
sub
fldenv
push
inc
jl
ja
ret
adc
enter
enter
jbe
add
pusha
fwait
stos
aad
gs
mov
xchg
mov
xor
push
lcall
cmp
test
fucomip
sbb
hlt
int3
jp
add
roll
pusha
pop
lret
lds
jge
subb
sbb
out
cmc
addr16
pop
adc
mov
je
lret
xchg
push
shll
adc
push
mov
mov
mov
mov
xchg
add
icebp
out
push
das
pop
out
cmp
push
push
xor
or
insl
das
adc
pop
int3
fdiv
dec
test
xlat
test
jl
adc
cltd
ret
movsb
fnsave
adc
shrb
jne
cmp
adcb
scas
sbbl
cli
pop
cltd
adc
je
or
jle
call
pop
pop
cmp
in
ret
adc
xor
dec
test
aaa
repz
lret
in
add
mov
dec
fwait
cmp
push
stc
rcrb
aam
jbe
push
rolb
add
mov
mov
xchg
sbb
lcall
mov
repnz
sahf
and
arpl
aas
sarl
aaa
adc
mov
aad
push
jb
mov
dec
sahf
inc
sbb
cmpsl
lahf
inc
icebp
and
pop
mov
jo
or
inc
push
fcmovnbe
iret
cmpb
cli
scas
in
roll
dec
sbb
cmp
mov
mov
jge
adc
cltd
mov
into
jge
outsl
loop
movsl
test
fs
pushf
push
pop
shl
jmp
cmpsl
loopne
inc
mov
or
repnz
in
adc
xchg
insb
mov
rorb
sbb
mov
stc
bound
adc
orb
mov
in
movsl
fwait
inc
shrb
dec
repnz
mov
fwait
push
mov
push
sub
add
push
int
addl
sub
adc
mov
adc
fmull
lahf
mov
pusha
ss
dec
mov
pop
dec
out
xchg
xor
dec
aad
mov
cld
jbe
pop
inc
jle
shrl
inc
dec
adc
jecxz
or
adc
push
jbe
sbb
add
lock
nop
pop
add
scas
inc
mov
mov
cld
mov
xorb
inc
sbb
jg
leave
fdivl
inc
cmp
ss
loop
inc
pop
mov
pop
jmp
cwtl
ret
add
aam
add
adc
lret
inc
dec
nop
arpl
scas
je
xor
xor
je
repnz
imul
mov
in
addr16
fs
shr
inc
cmp
add
addr16
mov
imul
pop
fs
sub
aad
enter
ja
inc
lds
or
cmp
mov
sbb
movsb
or
jbe
movsl
das
mov
push
sbb
dec
pop
xchg
inc
xor
jo
push
je
stos
jns
jae
mov
adc
mov
and
dec
xchg
andl
add
mov
add
xlat
jne
mov
adc
adc
movsl
ljmp
loop,pn
push
inc
jae
sub
jno
test
push
mov
outsb
pusha
test
mov
out
iret
add
in
addr16
icebp
sbb
bound
aam
ret
xchg
leave
nop
shl
jo
push
jl
gs
xor
adc
mov
xchg
dec
lret
push
clc
rorb
push
stc
popf
test
lods
in
sub
in
mov
mov
cli
pop
sub
lcall
or
mov
fdecstp
in
pop
adc
mov
fcmovb
adc
pusha
and
ljmp
push
outsl
mov
sbb
stc
pop
mov
push
sub
pop
arpl
jae
jno
imul
aaa
mov
cmpb
daa
cmc
dec
jns
in
dec
aad
in
push
data16
cmp
ja
mov
addr16
mov
cli
mov
xor
xchg
loope
decl
cli
and
pextrw
jb
mov
cltd
mov
jp
jae
push
insb
inc
test
pop
jle
rclb
daa
lcall
mov
test
mov
or
push
std
inc
jne
cmp
movsb
gs
jmp
ret
loopne
jl
cltd
sub
dec
xchg
dec
xor
movsb
cmp
je
and
int3
xor
enter
mov
cmpsb
adc
and
xor
sti
and
xchg
or
jl
cli
xchg
in
fsubs
xor
add
jnp
dec
ret
repnz
out
outsb
sarb
jle
cli
mov
jbe
fadds
push
cmp
and
xor
cmp
and
add
pop
push
push
rolb
pop
out
lcall
pop
pop
ret
iret
pop
rcrl
rol
lret
out
xchg
in
fucomip
popf
push
daa
jne
inc
shlb
andl
insl
and
dec
jp
mov
and
and
rcr
ficompl
mov
rorb
xchg
not
xor
xchg
and
mov
add
enter
and
push
xor
inc
js
icebp
fcoms
movsl
aam
arpl
imul
dec
jo
push
add
cmp
inc
in
lods
add
das
out
test
ficompl
out
mov
mov
mov
les
mov
stos
les
mov
cpuid
imul
mov
inc
rolb
psrad
ds
jo
sbbl
ljmp
inc
pushf
lock
fsub
mov
jmp
imul
jne
out
or
dec
pop
xor
add
dec
xchg
pop
sbbl
arpl
movsl
push
push
mov
stos
daa
xor
popa
repnz
sub
jbe
xchg
sub
inc
cld
lahf
xlat
jae
ds
cld
sub
fidivrs
mov
cmp
rclb
mov
push
adc
xlat
inc
xor
mull
out
out
icebp
mov
adc
cli
cmp
or
lcall
ret
xor
pop
mov
ja
sbb
push
jne
in
push
cltd
cmp
loop
ds
and
ljmp
inc
mov
add
dec
sarb
int
inc
jno
xor
or
arpl
stc
fsubrl
in
popa
cmpsb
cmp
scas
popa
hlt
popf
mov
adc
xchg
cmp
mov
dec
cld
mov
mov
add
xchg
and
loope
jecxz
out
jp
jne
pop
sti
stc
cwtl
test
sub
in
push
mov
popf
xor
fsubp
out
jg
out
loope
adc
rolb
mov
inc
dec
je
pop
cmpsb
subb
cmpsb
xchg
xor
test
add
movsb
daa
pop
mov
in
daa
int
cltd
movsl
mov
inc
popf
int3
mov
sbb
mov
adc
ficomps
sub
les
push
inc
sub
jne
or
inc
test
jae
test
and
aaa
jecxz
xorl
lahf
jecxz
mov
in
jecxz
push
test
lahf
test
pusha
mov
pusha
aam
cmpsl
cmp
aad
pop
pop
scas
test
sub
lods
and
xor
sbbb
bound
inc
jmp
jge
fsubrl
mov
fnsave
popl
out
aad
inc
sub
mov
pop
out
xchg
inc
lcall
adc
or
mov
jmp
popa
sbb
pop
cmp
jge
int
jle
adc
cmpsb
sub
cmp
cmp
sub
mov
xor
inc
adc
adc
adc
mov
jb
push
add
sub
push
lahf
icebp
cmp
adc
sub
mov
push
mov
js
nop
xchg
cltd
call
cwtl
xor
std
xchg
mov
data16
adc
leave
push
ret
repz
stos
xor
adc
xor
lcall
and
popf
outsb
add
cwtl
xor
out
loop
mov
mov
sbb
xor
dec
out
mov
or
popf
xchg
or
jl
adcb
fldl
dec
rcrb
add
shrb
in
ss
lods
xchg
outsb
mov
push
movsb
pop
push
mov
dec
cmpsl
cltd
sbbl
push
and
scas
in
js
and
push
adc
mov
jg
fdivl
sbb
faddl
xchg
out
mov
dec
out
clc
jle
pop
push
nop
sbb
in
out
out
dec
pop
or
shrl
aaa
jne
push
mov
add
repnz
outsb
mov
and
aad
movsb
insl
cmove
push
out
enter
out
in
cmc
fs
lahf
mov
lahf
cld
xchg
jb
pop
call
mov
int3
pop
push
int
lods
je
pop
pop
movsl
cld
out
or
andl
lods
subl
mov
repz
aas
icebp
jl
adc
add
push
pop
fldenv
mov
xor
enter
insb
test
insb
imul
push
mov
xchg
in
xor
mov
int
stos
and
mov
ja
mov
js
dec
jg
jae
movsl
loop
stos
mov
fiadds
out
inc
imul
sub
das
jne
mov
sub
int
rorl
fwait
dec
inc
hlt
mov
xor
cld
sub
adc
inc
wbinvd
enter
inc
jns
ret
daa
mov
pop
xchg
movsb
push
in
push
repnz
xor
xchg
cmp
pop
sub
jl
add
dec
mov
int
dec
pop
mov
xor
jecxz
ss
add
cwtl
fs
outsl
pop
clc
pop
int
lret
rorl
mov
add
movsb
and
rcl
push
out
jae
lods
fcomip
push
mov
jns
jmp
mov
rclb
pop
lods
lret
nop
xor
es
push
mov
and
jp
gs
sti
push
adc
mov
xor
dec
in
aaa
cwtl
das
inc
xchg
ja
jbe
cltd
aas
jae
stc
repnz
ss
mov
arpl
adc
std
int3
xchg
das
dec
ror
jno
jmp
shl
or
xor
jg
inc
xchg
mov
shrb
push
mov
imull
clc
mov
push
mov
inc
push
cmp
leave
adc
je
hlt
dec
xor
test
das
jp
lcall
sti
js
daa
jmp
sub
mov
mov
inc
lods
iret
add
enter
jle
movsb
push
jmp
pop
js
cmp
push
mov
sbb
dec
push
cmpsb
inc
nop
out
and
sbb
arpl
test
scas
xor
mov
loopne
mov
push
dec
stos
xchg
aam
push
test
xor
or
mov
mov
inc
lcall
cld
jp
in
divb
pop
fdivrl
mov
cmc
lds
pop
fnsave
in
mov
fldenv
imul
pop
cmp
int3
cmc
xor
dec
sbb
roll
shrb
sahf
das
or
fildll
sub
fcomps
popa
ret
sbb
jmp
cmp
ljmp
shll
fisttps
push
inc
cli
push
jb
imul
push
mov
stos
pop
std
out
aad
xchg
cmp
mov
enter
enter
sub
mov
and
in
or
push
pop
call
pop
loope
aaa
inc
mov
int3
insl
shll
jle
js
add
outsb
xor
inc
cmpsb
or
cmp
add
jg
cwtl
sarb
jne
lret
cmpsb
mov
js
scas
push
jmp
sbbl
cwtl
insl
mov
imul
stos
adc
sub
inc
fldcw
fnstcw
jb
or
sbb
inc
cltd
xor
ss
and
stos
loopne
sbb
ljmp
inc
inc
sbb
xchg
jmp
mov
into
dec
shrb
in
dec
cmp
pop
and
test
push
mov
addl
aaa
xchg
fmull
ret
test
mov
test
mov
out
ljmp
cli
ljmp
sti
sarb
gs
in
xor
stos
pop
mov
pop
js
cmp
std
fisubrs
leave
lret
push
push
out
inc
pop
mov
lahf
sbb
mov
sti
jo
push
popa
sbb
add
xor
xor
mov
sbbb
xchg
push
or
xor
cmp
lret
fwait
pop
jl
add
ljmp
ja
cmp
fcom
roll
cmc
shrb
jne
xor
sbb
sti
pushf
adc
rolb
dec
add
hlt
mov
fcom
xchg
pop
ret
and
push
mov
iret
es
inc
dec
int3
dec
movsb
cmp
testl
mov
pushf
movsb
rorb
mov
mov
cmp
cwtl
bound
repnz
sahf
mov
lock
cmp
stos
into
xor
std
mov
imul
sbb
add
pop
nop
push
mov
addr16
add
ljmp
dec
sbb
cltd
or
sbb
movsb
fimuls
in
test
repnz
push
push
sbb
movsb
test
jnp
mov
mov
sub
and
test
push
and
inc
cmp
mov
aad
pop
outsb
or
inc
or
lcall
shlb
xchg
cmpsb
cmp
fildll
sbb
insb
pushf
sbb
mov
add
mov
add
ljmp
xchg
into
xchg
test
cli
cmpsb
sbb
xadd
or
pop
cmpsb
inc
dec
mov
cmc
jne
adc
pop
inc
xchg
pusha
xor
mov
push
popf
jge
dec
pusha
stos
dec
mov
jo
ret
iret
add
test
xchg
inc
shrl
aas
mov
jge
fs
lret
dec
xchg
push
fwait
jne
das
mov
fwait
sub
lods
in
jnp
xchg
lock
and
shl
or
mov
pop
and
push
sub
cmp
mov
dec
xchg
jb
sbb
or
pushf
jg
jno
pop
jge
xchg
inc
xor
jno
leave
in
clc
mov
ja
and
repnz
movsb
or
gs
lcall
insb
mov
lock
dec
outsl
mov
faddl
pop
shll
loopne
add
ret
mov
jmp
pop
jno
cltd
jo
cmp
mov
adc
imul
push
leave
or
xchg
mov
push
repnz
aad
jae
xchg
mov
jle
psrld
dec
push
dec
cli
popf
mov
dec
inc
xorl
dec
das
insl
rcrb
cmp
iret
and
jnp
rorb
jge
sbb
push
push
lock
mov
mov
lret
cmp
add
mov
lret
mov
push
ljmp
xchg
clc
push
fldt
into
out
xchg
mov
js
imul
mov
test
outsl
cs
fisttpll
cmpl
push
xchg
movsb
imul
jo
adc
mov
mov
in
pop
cmpsb
cmp
cs
lret
xchg
int
loop
xor
pusha
push
xchg
in
fimuls
inc
mov
inc
add
push
pop
lea
in
imul
xchg
bound
mov
test
gs
adc
sub
push
subl
scas
mov
stos
push
fiaddl
pop
mov
cmp
sub
and
xchg
fnstenv
cmc
push
repz
push
jmp
roll
mov
cwtl
imul
push
add
fstl
mov
aad
jp
clc
jecxz
test
push
lods
xchg
inc
rcr
sub
aam
insb
mov
pop
push
loope
test
fwait
sahf
js
dec
adc
out
cltd
rcll
pop
imull
ds
das
je
out
xor
jne
dec
ds
ja
stos
popa
sbb
xchg
sbb
cld
pop
aad
lea
cmp
inc
or
sbb
lahf
adc
cmpsl
out
daa
pop
inc
lcall
jns
mov
mov
jmp
fildl
dec
movsl
push
pushf
and
fidivl
mov
cmp
lret
pusha
sahf
xchg
dec
test
pop
pop
cmp
data16
mov
jne
test
dec
mov
mov
inc
out
mul
fnstsw
andl
cmpsl
or
push
subb
cmp
sarl
dec
jp
push
cli
pop
repz
cltd
mov
ret
mov
sarl
adc
mov
pop
ss
xchg
out
push
jge
enter
fdivrp
and
pop
dec
pop
add
xchg
push
call
loopne
mov
xchg
roll
lret
cwtl
int
scas
xchg
sub
xor
imulb
ds
outsl
adc
cmp
mov
in
cltd
aam
movd
sub
jae
sub
jl
xchg
clc
outsl
pop
or
ljmp
test
pushf
or
jp
repnz
cwtl
out
aaa
cli
and
out
cmp
pop
or
sub
and
loope
filds
cs
inc
mov
jmp
shld
inc
fistpl
lcall
or
push
orb
inc
dec
jge
xchg
lret
faddl
mov
mov
or
mov
cmp
inc
bnd
insb
rcl
in
mov
and
mov
sbb
popf
std
adc
dec
add
ret
lods
mov
cwtl
mov
jbe
aad
test
inc
mov
push
repz
mov
loope
mov
test
pop
cmp
adc
mov
in
xor
and
mov
xor
out
fnclex
and
push
push
adc
push
xlat
jecxz
addb
push
out
xor
jns
push
fidivl
repz
xchg
push
push
mov
dec
imul
cmp
add
push
sbb
adc
cmpsb
inc
mov
rclb
fldcw
pop
jno
and
mov
lahf
lret
mov
lds
pop
cli
fisubrl
jge
dec
pusha
or
ss
cmp
pop
repz
jbe
es
and
mov
sbb
dec
das
mov
out
adc
cmp
mov
mov
jb
push
mov
mov
add
pusha
lds
inc
test
sbb
fsubs
pusha
js
dec
stos
dec
push
mov
sbb
das
push
loop
lds
and
in
inc
add
or
outsb
jno
out
jne
incl
lcall
inc
mov
cmpsb
add
adc
push
sub
call
aaa
mov
cwtl
popf
xor
stos
ds
mov
iret
loope
mov
pop
add
pusha
add
scas
or
imul
lcall
sub
enter
shr
sbb
cmpb
xor
inc
xor
fidivrs
adc
jno
fstpt
mov
xchg
ds
fst
dec
jnp
sub
outsl
lret
mov
sub
mov
mov
ds
jne
sbb
test
xlat
xor
add
and
pop
int3
pop
jg
and
lcall
pop
push
cmp
insl
mov
push
out
mov
xchg
andl
pop
jmp
in
push
hlt
cmp
mov
orb
sub
sub
mov
or
cmp
mov
cmp
stos
pop
mov
xchg
mov
psrld
scas
hlt
and
and
mov
xchg
jae
mov
or
adc
lahf
shrb
out
xchg
cmpsl
fucom
out
ss
lcall
jp
out
enter
push
sub
push
sar
inc
cmc
sub
sbb
lret
xor
pop
mov
or
daa
mov
pusha
mov
or
movsb
sub
sub
push
nop
mov
push
mov
out
sbb
lret
xchg
cltd
shrb
mov
jmp
idivl
insl
fisttpl
xchg
ret
inc
sbb
lods
out
scas
sub
imul
inc
clc
out
jb
and
leave
test
out
sarb
jp
lcall
pop
sub
std
dec
out
sahf
and
pop
pop
add
or
pop
pop
ljmp
dec
push
sub
popf
or
into
jae
xor
xlat
add
inc
fmull
xorl
in
cmpsb
mov
loope
sbb
inc
and
shlb
std
popf
dec
sub
cmp
es
sbb
test
xchg
xor
stos
or
popa
pop
push
mov
sub
lret
jno
add
or
push
into
sbb
sbb
xor
sbb
xchg
and
or
add
leave
nop
lds
sbb
pushf
cmc
stc
decl
push
add
cld
or
mov
into
mov
add
mov
add
add
xchg
bound
xchg
ss
in
loop
aas
push
mov
pop
add
int3
mov
and
fidivrs
jg
fsubrs
imul
das
push
xchg
push
loope
fildll
sbb
in
roll
into
dec
inc
cltd
mov
mov
push
sbb
mov
add
mov
daa
sahf
mov
pop
push
imul
push
pop
mov
sub
in
jnp
jo
fwait
cmpsb
push
cmp
jg
sti
mov
add
inc
cmp
lods
mov
mov
push
outsl
mov
movb
mov
aaa
push
mov
test
js
adc
in
test
sbb
and
and
insb
jmp
arpl
test
sbb
push
enter
xor
cmp
fwait
outsb
insb
xor
mov
add
iret
mov
cmp
pushf
jns
int
mov
pop
lods
out
pop
push
adc
lret
bound
cs
dec
lods
and
fadd
jp
mov
mov
out
push
push
xchg
xchg
in
cmp
stc
inc
inc
xchg
xchg
xchg
sub
xlat
scas
clc
rorb
jg
daa
int3
pop
lods
stc
pop
xchg
xchg
enter
dec
adc
lock
inc
mov
pop
jnp,pt
and
faddl
fdivrs
arpl
aaa
add
scas
inc
push
sub
sub
dec
pop
sub
mov
mov
stos
mov
xchg
lods
ficoml
ja
jmp
std
fwait
mov
and
inc
cmp
push
sbb
jecxz
push
cli
fisubl
clflush
shlb
mov
push
js
pop
xor
pop
mov
scas
leave
insb
ficomps
out
or
jno
pop
sbb
xchg
stc
push
ret
sbb
push
call
aad
sbb
loop
popa
aaa
lods
push
bound
shll
repnz
dec
gs
fldcw
xchg
adc
push
lock
or
push
stos
xchg
je
loop
jo
jno
cltd
lahf
cmp
push
mov
add
jbe
into
sarb
in
and
out
or
add
jle
pop
divl
xor
xchg
pop
in
out
mov
mov
jl
sbb
mov
mov
add
jecxz
outsb
aaa
xchg
sbbl
scas
adc
loope
scas
pop
imul
push
xchg
and
ja
sub
call
std
xchg
int3
subps
mov
or
mov
push
pop
jle
lods
rclb
dec
or
adc
or
adc
add
fldl
pop
mov
lods
inc
testl
orl
xlat
insl
lds
sub
inc
add
mov
push
adc
pop
pop
and
aad
and
test
lds
stos
andl
cmp
addl
xchg
mov
or
xchg
std
popl
out
mov
push
mov
pushf
add
pop
in
aam
scas
mov
lods
ljmp
xor
jl
repz
inc
pop
sub
xor
in
cmp
fsubrp
arpl
repz
js
cli
dec
bound
test
dec
add
xor
mov
dec
xchg
push
push
mov
inc
mov
lock
popf
mov
pop
inc
xchg
scas
lahf
mov
xchg
mov
dec
cli
jo
shll
add
adc
dec
je,pn
adc
rorl
out
aas
lods
mov
pusha
shll
bound
inc
adc
mov
icebp
cmp
aam
xor
push
sbb
xchg
mov
jg
pushf
lret
sarl
dec
cmp
jno
cmp
mov
pop
sub
xchg
lods
fists
fnstsw
mov
fstl
aad
outsl
in
leave
cld
cmp
scas
test
call
push
cmp
and
lods
lods
xchg
filds
stc
bound
jecxz
repnz
jg
insl
repnz
iret
pop
mov
or
repz
jmp
mov
lods
ret
lods
repz
sub
xchg
fidivs
cmp
sub
stc
pop
push
add
sbb
mov
seto
mov
adc
or
mov
sub
cmp
push
insb
pop
imul
push
mov
in
jl
push
adc
sti
push
inc
cld
fwait
es
lds
adc
pushf
pop
jge
negl
adc
roll
out
leave
clc
and
jmp
sub
fmull
pop
inc
adc
sbb
cmp
adc
sub
out
or
int
mov
jp
pop
or
pop
insl
mov
shr
mov
pop
mov
push
push
stc
push
cmp
xchg
pop
pop
ljmp
dec
cmp
xchg
xchg
pusha
imul
rcl
aaa
xchg
outsl
aam
push
add
jae
loopne
and
dec
call
ljmp
andb
jle
negb
in
mov
loope
inc
testb
mov
data16
xor
mov
xchg
dec
out
mov
test
inc
int
addr16
dec
jmp
sbb
std
popf
dec
cld
test
mov
lahf
or
xchg
fcompl
cli
pop
lahf
negl
cmpsl
ljmp
jae
dec
arpl
fs
stc
inc
aaa
lret
or
jmp
jo
inc
out
and
outsl
pop
cmp
jg
test
fsubl
sub
add
pusha
jns
lods
cli
orl
jge
imul
xor
xor
sub
push
lret
lcall
fdivs
adc
add
xchg
jns
mov
pop
scas
sub
or
dec
stos
test
sub
stc
adc
sub
xor
push
xchg
sahf
cli
fsubr
cmpb
xchg
bound
mov
fmull
cld
addr16
ljmp
ja
lret
dec
bound
push
jecxz
lcall
out
push
rcll
jg
mov
jg
aad
sub
lea
adc
push
fsub
push
sbb
adc
push
sarb
push
sub
pop
js
sbbl
inc
push
or
data16
aam
cmp
and
push
mov
aad
jp
fisubrl
push
mov
shrl
cltd
icebp
notb
jmp
fs
in
call
pop
std
xchg
arpl
in
cmp
cs
xchg
jae
xor
popf
movsb
repnz
xor
ss
repz
orl
adc
test
lret
xchg
and
inc
inc
daa
testb
mov
les
leave
popf
jno
jle
inc
call
pushf
mov
adc
ja
adc
inc
xchg
js
push
xorl
sbb
lods
repnz
jns
sbb
sbb
fs
mov
add
pushf
nop
aas
or
inc
call
fdiv
pop
pop
addr16
and
fisubrl
adc
push
hlt
nop
xor
cmp
and
pop
cmp
ret
fistpl
ljmp
sarb
lock
nop
add
or
lods
out
mov
repnz
dec
mov
jp
loopne
fs
sub
xlat
rclb
ret
test
lock
push
or
ja
add
out
pushf
pop
aaa
arpl
fldcw
popf
adc
popa
ret
pop
cmpsb
mov
mov
imul
adc
scas
psubd
outsb
inc
jno
enter
shll
inc
cmpsl
or
jo
lcall
fmuls
lods
popf
sbb
cld
xchg
mov
mov
add
scas
stos
nop
mov
jmp
and
call
daa
shll
lret
jge
mov
clc
pop
adc
stos
push
xchg
jns
jnp
and
cmp
aaa
rolb
mov
xor
sbb
inc
pusha
lods
mov
or
ljmp
nop
clc
xchg
xor
jle
fisttpll
mov
stc
out
inc
adc
dec
sub
push
jmp
xchg
sbb
shl
push
int
into
push
test
ss
cmc
adc
add
lret
in
adcb
inc
push
xchg
loopne
push
xchg
fs
lcall
lahf
fisttpll
dec
cmp
and
xchg
push
fwait
xchg
mov
fcoms
xor
inc
mov
in
ret
add
inc
mov
push
push
mov
add
jns
mov
icebp
mov
imul
mov
arpl
rcrb
cmpsl
cmc
jns
sbb
stc
test
stos
cmc
sub
mov
popf
push
outsl
jecxz
lret
fldcw
jle
jmp
dec
jnp
fidivs
jne
jo
shll
scas
xchg
inc
fprem
mov
movsl
inc
inc
cmp
neg
stos
ljmp
fidivrs
addr16
mov
adcb
popl
mov
std
fcompl
jbe
mov
lahf
push
pop
sub
jmp
dec
and
sub
test
pushf
aaa
pop
loopne
shrl
push
cltd
lret
add
loop
mov
dec
lea
int
sti
sti
xor
fsubl
dec
mov
int
mov
adc
mov
xchg
cli
xor
pop
das
test
and
cmp
cs
mov
nop
test
or
test
popf
dec
pop
sub
or
adc
pusha
pop
push
std
cmp
lahf
pop
pop
shll
ret
lahf
or
jns
pop
mov
out
jno
and
jmp
xchg
repnz
and
inc
inc
ds
adc
inc
pop
push
dec
out
mov
outsl
jo
mov
in
repz
dec
leave
push
and
out
mov
or
xor
jnp
in
xchg
in
push
fsubr
arpl
adc
faddl
call
cmp
sbb
mov
cmp
or
push
xchg
push
into
in
cmpsb
outsb
adc
ficomps
rclb
scas
insb
test
dec
aam
int
jns
call
and
pushf
push
daa
inc
rolb
mov
push
int
inc
aad
jae
test
fistpll
adcl
add
dec
stos
popl
clc
or
int3
dec
out
gs
sbb
out
xor
loopne
push
cmp
cld
movsl
push
add
xor
inc
in
sbbb
jae
mov
jge
out
push
push
data16
jecxz
pop
adc
fisubs
mov
repnz
add
js
xchg
dec
lret
iret
cmp
inc
sbbl
xchg
cmp
push
nop
and
mov
scas
scas
popa
jb
cwtl
cmp
adc
ja
xor
jle
sahf
jne
popa
in
rclb
data16
popa
insl
pop
outsb
aaa
mov
les
test
mov
lock
aaa
aad
leave
test
ret
mov
test
fidivl
xor
popf
ljmp
adc
ljmp
pushw
arpl
inc
fdiv
or
data16
imul
add
push
clc
sub
imul
sarb
push
inc
xor
test
lods
xlat
inc
mov
rorl
fs
pop
lock
cs
sahf
adc
jecxz
lret
mov
push
out
js
stc
adc
insl
je
sub
mov
xor
mov
roll
or
data16
push
mov
dec
ret
fiaddl
test
out
sbb
fldl2e
push
pop
mov
adc
push
mov
push
mov
lahf
and
imul
jno
scas
cwtl
push
out
stc
xor
ds
mov
mov
jle
popl
mov
jo
adc
adc
lret
adc
popa
fstp
and
dec
sub
xorl
xchg
sti
lret
stos
adc
aad
mov
inc
imul
mov
cli
mov
cltd
push
xor
cmp
into
lock
jmp
cmp
push
in
mov
dec
xchg
imul
add
mov
jge
test
add
inc
mov
cmp
sub
test
data16
fistps
add
push
push
iret
pop
sub
adc
loop
xchg
je
fwait
cmp
aas
jbe
or
lret
fs
mov
cmpsl
xor
xchg
into
adc
in
mov
inc
imul
les
flds
inc
mov
mov
push
bound
jge
daa
jnp
das
cmp
mov
pop
dec
jb
pop
rcrb
rolb
mov
push
insb
rcll
jo
in
inc
nop
int
push
push
call
mov
jo
popf
fdivrl
test
testb
dec
clc
push
push
hlt
dec
push
out
and
fcoms
rcrl
mov
shlb
xchg
pop
test
and
sarl
insl
mov
mov
push
pop
pushf
loop
scas
leave
mov
repz
push
out
cmc
out
repnz
mov
mov
popf
mov
ret
dec
adc
or
mov
inc
outsl
lahf
scas
push
push
shlb
mov
je
insb
loop
stc
dec
lods
xchg
fstpl
cmp
dec
mov
fwait
cmp
mov
jo
shlb
jne
aad
stc
cld
or
lods
in
mov
push
push
dec
xorb
mov
sbb
adc
push
rcl
addl
fcmovnu
sub
scas
lods
add
out
mov
fstpt
mov
xlat
in
ljmp
jmp
cmp
dec
loop
or
and
repnz
or
stos
mov
sbbb
mov
sbb
inc
mov
pop
mov
das
lret
push
shl
repz
fiaddl
jle
adc
cmpsb
add
fyl2x
dec
out
and
push
je
and
cmpl
cld
mov
test
xor
test
stos
inc
fimull
pop
dec
aad
fidivs
dec
push
add
scas
jb
js
adc
out
adc
adc
add
repnz
xor
cmp
popa
lcall
dec
jp
mov
je
mov
dec
bound
lods
inc
fimuls
aas
aas
cmpsb
xchg
jae
and
pop
sbb
cmovle
call
hlt
pop
sub
pop
sbb
jnp
xchg
push
push
daa
arpl
call
pop
ja
aad
fcom
dec
cltd
inc
add
mov
jbe
ljmp
sbb
cmp
fs
and
mov
or
cmp
repz
test
mov
or
cmpsb
rorl
jg
out
mov
mov
sub
or
add
or
pop
arpl
lods
dec
shl
cmpsb
insb
pop
mov
out
push
addr16
aad
push
pop
push
inc
lcall
mov
lret
das
pop
fwait
jge
xchg
repnz
jp
xchg
dec
icebp
out
lods
data16
int3
sub
in
aaa
out
push
incl
mov
in
add
cmp
jmp
idivb
std
jge
cmp
xchg
pusha
jg
cmp
push
mov
sub
ja
lret
inc
adc
push
or
sub
sbb
sub
enter
mov
sahf
jns
test
into
mov
mov
jbe
insb
hlt
fwait
addb
addr16
pusha
add
fbstp
inc
pop
cmp
dec
xor
lcall
xchg
dec
hlt
xchg
leave
int3
outsb
mov
test
or
xor
mov
inc
aas
xor
andb
mov
iret
addl
push
enter
fstl
aaa
dec
test
and
mov
aad
int3
mov
loop
xchg
lods
add
mov
mov
ss
xlat
pop
sbb
repz
iret
mov
cmp
aas
mov
hlt
dec
insb
aam
xchg
shll
push
cmp
jne
jmp
das
dec
or
pop
mov
aad
dec
xchg
pushf
repnz
xor
movsb
sub
push
call
clc
push
cwtl
fs
cmp
shrl
inc
aad
ret
fidivl
stc
enter
xchg
popf
out
push
and
in
dec
cmp
and
fcoml
or
clc
in
add
pop
popf
pushl
dec
or
mov
xchg
xchg
xchg
addl
jp
mov
sbb
xchg
cwtl
arpl
int3
out
jb
cld
adc
mov
test
inc
ficoml
shr
or
test
out
inc
je
cwtl
ja
fstp
inc
fisubrl
or
jo
in
test
lods
jo
jno
fidivs
sub
add
mov
outsl
pop
ss
sub
and
push
stos
jle
lret
inc
add
shlb
arpl
daa
adc
mov
das
jle
aam
add
xchg
mov
imul
jb
mov
sub
adc
ljmp
ret
xchg
jp
fstpl
adc
mov
or
fwait
pop
roll
push
js
insb
loopne
pop
std
clc
cmc
scas
mov
pop
cmp
dec
loop
push
jl
and
cld
decb
call
lret
cmp
in
push
shll
test
insl
es
bound
mov
mov
mov
in
add
aas
test
pop
cltd
popa
es
pop
adc
stos
inc
dec
or
out
mov
sub
loope
mov
lcall
inc
in
sbb
popa
jne
lret
mov
imul
xor
pop
pop
loopne
lods
andb
inc
rorl
inc
jecxz
inc
xchg
dec
fcoml
cli
aad
xor
lock
jmp
cmp
out
dec
add
insb
xor
jp
leave
daa
cmpsl
and
xlat
lds
xor
outsl
or
mov
insb
pop
jbe
cld
mov
push
xor
enter
xor
or
sbb
jmp
inc
pop
inc
add
sbb
dec
pop
push
sub
jp
xchg
imulb
int
mov
pop
adc
loopne
lock
push
bound
shll
rol
jbe
add
add
mov
mov
cld
push
push
dec
pop
inc
sub
test
xchg
shrb
and
mov
jb
test
add
cmp
bound
and
rclb
imul
call
mov
push
dec
aaa
push
popa
xchg
std
xchg
lcall
andb
jns
pop
std
pop
inc
lret
inc
push
lock
test
pop
cmp
jne
sub
clc
mov
jg
mov
xchg
imul
imul
jnp
mov
and
or
aad
enter
lcall
sbb
mov
sti
outsl
jno
fwait
scas
js
loopne
pop
push
adc
dec
jp
sahf
and
xor
or
inc
mov
add
mov
in
mov
pusha
push
adc
das
je
jne
repnz
int3
js
mov
and
push
iret
lock
ds
and
and
add
jmp
arpl
sbb
std
cmpl
fisttps
or
jne
pop
hlt
subl
sub
cwtl
jmp
je
xchg
cmc
sbb
lods
xchg
sbb
inc
test
dec
xchg
cmp
rolb
and
mov
inc
into
clc
sub
inc
fs
mov
movsl
add
pushf
jnp
fnstsw
fidivl
add
lods
test
mov
inc
pop
repz
scas
popf
sub
fwait
mov
outsb
jecxz
cltd
and
xchg
jl
fs
into
push
loope
mov
repz
cmp
test
mov
shrb
sbb
mov
pop
in
jbe
test
pop
xor
scas
dec
rcrb
jnp
pop
mov
and
in
xlat
or
push
jmp
jmp
mov
mov
mov
mov
adc
adc
or
insb
mov
or
int
lods
or
adc
and
scas
mov
push
jo
stos
imul
or
out
pushf
in
pop
int3
rcll
call
sbb
mov
add
test
notl
jle
sbbb
stos
insb
lahf
adc
pop
inc
xchg
pop
mov
cmp
addr16
fiadds
shl
pop
lcall
xor
push
cmp
cmp
aaa
les
std
or
hlt
mov
jmp
shrb
in
lock
fiadds
push
cmp
cmp
into
stos
outsb
mov
test
mov
xor
js
pop
cltd
xchg
aam
ret
stos
mov
pop
pop
jg
mov
popa
jmp
insl
in
imul
inc
mov
lods
mov
aad
mov
test
int3
mov
xor
cld
adc
push
insb
sarl
push
outsb
xor
lret
cmp
pop
mov
jno
scas
sbbb
sub
insb
gs
push
popa
inc
and
lcall
inc
aas
fisubrs
imul
jb
cltd
sbb
jno
xchg
mov
sub
jg
add
pop
movsb
sub
pop
mov
xor
icebp
fldl
push
clc
adc
adc
ds
ret
popa
outsl
jg
pop
in
mov
dec
gs
jne
enter
push
imul
pop
lods
jno
lret
mov
jge
xchg
mov
push
hlt
into
dec
idivb
aam
incl
sbb
inc
push
lret
pushf
cmc
and
in
lret
xor
jl
add
ja
xchg
push
in
std
adc
adc
mov
mov
xchg
outsl
or
inc
xchg
scas
jne
or
in
repz
add
xlat
rcr
xchg
scas
jl
jge
push
out
call
mov
and
push
ja
jb
popf
and
or
sbb
inc
cmp
jne
inc
ja
mov
pop
push
ds
daa
xor
in
push
in
mov
jge
dec
aas
and
mov
jge
in
mov
lret
pmaxsw
jmp
ja
dec
xchg
icebp
iret
sub
fmuls
out
push
push
sahf
inc
or
pop
scas
sbb
and
sbb
fwait
popa
xchg
scas
lret
add
das
stos
imul
jnp
pop
rcrl
repz
lods
popa
inc
sbb
ret
sbb
pushl
fisttps
xchg
roll
push
into
dec
nop
push
lea
push
inc
xchg
loope
icebp
xchg
addr16
inc
sub
cld
sub
lock
aam
mov
test
cmp
sub
pusha
arpl
xor
jae
sti
mov
lret
pop
ss
sbb
inc
dec
mov
stos
ret
addr16
and
jge
inc
or
negb
jmp
divb
pop
lcall
ja
jo
insb
jmp
pop
inc
xlat
xor
add
out
xor
stos
mov
jb
mov
mov
cmovae
ljmp
dec
lods
add
out
sahf
mov
ret
addb
push
lret
lods
adc
adc
jmp
in
mov
pop
push
aaa
sub
in
mov
sub
icebp
cmpsl
push
xchg
sub
cs
into
xchg
outsl
xchg
mov
ljmp
shll
stc
and
hlt
push
mov
xor
fwait
push
adc
in
push
loop
scas
ja
or
cwtl
shll
enter
es
sbb
test
repz
int
fwait
add
xor
lahf
mov
xor
adc
sbb
sbb
mov
lahf
xlat
push
test
movsb
jmp
bound
and
push
lret
inc
bound
loope
jecxz
jp
insl
mov
loope
push
icebp
inc
ljmp
out
pop
mov
inc
outsb
add
outsl
push
daa
sbb
addr16
pop
dec
jno
cwtl
outsb
movsb
cs
sarl
pop
lret
aam
pop
inc
int
pop
ja
fsubrl
mov
inc
shlb
lods
xorl
test
pop
add
or
mulb
cmp
mov
pusha
insl
rolb
jne
sti
push
lods
adc
ret
daa
fcoml
xor
pop
inc
mov
adc
rol
xor
sub
pop
push
aas
lods
or
ds
sub
dec
pop
ja
cld
push
mov
ljmp
pop
jns
mov
sbb
or
mov
cmpsb
pusha
xor
in
inc
push
and
sub
push
pop
shlb
pop
inc
mov
inc
mov
in
and
mov
notl
mov
std
dec
rcrb
sbbb
or
cmp
test
lahf
and
insl
lods
sbb
shlb
les
mov
pop
pop
inc
pop
cli
pushfw
int
ljmp
in
cmp
cmp
dec
xor
push
dec
pushl
pop
call
add
mov
sbb
andl
xchg
in
mov
lcall
scas
dec
mov
aas
lock
jb
xor
sbb
cmp
pop
pop
lods
mov
push
jne
ret
and
dec
cmp
sub
jbe
int3
das
mov
and
addr16
mov
icebp
cmc
push
mov
loopne
xchg
jnp
xor
jecxz
lahf
sbb
aas
or
jae
popa
add
inc
lret
push
sbb
fiaddl
jne
inc
dec
sub
scas
hlt
rolb
mov
sub
fdiv
aas
pop
cli
adc
pop
gs
jae
cmp
push
jb
stc
bnd
ret
sahf
adc
xlat
pop
jmp
and
inc
or
adc
in
jmp
pop
hlt
je
mov
mov
jp
iret
cmpsb
mov
fs
stc
lea
mov
push
cmp
call
int
repnz
adc
test
test
cltd
cmpsl
xor
enter
push
add
jp
pop
sub
repz
or
sbb
mov
lods
fbld
jg
sub
fmuls
out
jl
dec
cs
xlat
movsb
cmp
sbb
lock
dec
in
dec
jecxz
jp
jg
pop
adc
fwait
mov
out
popf
testb
mov
movsb
ja
out
cmp
popf
mov
cli
lret
sbb
mov
mov
jl
push
dec
adc
push
js
imul
scas
adc
cmpsl
mov
jp
mov
and
mov
insl
xor
addl
cmpsl
repz
pusha
add
xchg
adc
addr16
clc
mov
mov
sti
adc
frstor
sub
incb
clc
add
mov
pusha
xchg
or
addr16
fcoml
leave
and
mov
jae
xchg
adc
add
xorl
sub
loopne
nop
adc
loop
xor
out
jns
mov
inc
or
and
sti
or
mov
aam
mov
addl
in
jns
int
out
xor
pusha
add
and
adc
inc
mov
pop
gs
pop
add
cmp
add
cli
out
cmpl
push
es
mov
leave
pop
push
jecxz
fstps
lock
xor
add
jno
add
jmp
orb
pop
arpl
aad
jmp
push
dec
lret
movsb
repz
and
loop
jg
out
sti
ss
inc
std
lea
push
jb
jle
or
push
sub
push
lss
jne
sub
out
repz
jno
xor
repnz
mov
mov
ret
int3
xor
les
subl
sbb
imul
mov
push
sub
pcmpgtw
lahf
es
int
push
add
add
dec
mov
ret
nop
xchg
mov
iret
loopne
js
jo
dec
add
lods
pushf
daa
fdivl
bnd
or
adc
mov
cmp
aad
adc
adc
jne
fsubrl
add
jae
adc
in
jp
test
test
mov
push
movb
mov
jecxz
test
adc
rolb
movsl
dec
daa
cmp
inc
adc
or
test
xchg
aam
ljmp
icebp
cmpsl
jg
iret
push
shlb
inc
call
mov
adc
push
in
pop
inc
rcll
lahf
aas
sub
mov
leave
out
sbb
push
out
enter
mov
jns
insl
adc
stos
xor
xchg
ss
xor
icebp
bt
popf
xchg
aaa
dec
xchg
pop
adc
out
push
mov
cltd
loopne
mov
inc
jmp
or
aaa
lock
in
imul
sub
cwtl
xchg
pusha
adc
cmp
int3
sbb
sub
data16
cmpsl
push
xchg
rcr
sub
push
push
fnsetpm(287
lret
or
add
cli
dec
or
sbb
aam
repz
jle
cmp
hlt
cmpsl
test
cmp
je
enter
fdivrs
jl
jmp
out
loope
add
loop
push
cmpxchg
lea
dec
lret
lcall
push
mov
lret
push
loopne
scas
repnz
or
inc
ret
arpl
mov
sub
out
jbe
mov
mull
sbb
or
and
push
insb
insb
into
pop
xor
fsubrl
dec
sti
adc
in
fsubrp
adc
adc
adc
jne
int3
cwtl
inc
shll
sti
or
popf
dec
pop
pusha
mov
aam
or
int3
fwait
mov
mov
mov
mov
jnp
int
fstpt
mov
pusha
fsubs
scas
mov
fwait
stc
push
das
cli
jg
mov
pop
mov
fsubrs
fisttpll
mov
sub
xchg
enter
shll
inc
imul
lea
adc
pop
in
pop
ja
pop
jecxz
pop
pop
ja
xchg
or
adc
enter
cmc
fldcw
push
adc
adcb
test
xchg
das
mov
pop
leave
sbb
cmp
xlat
into
mov
ret
add
ja
inc
inc
lods
ret
aam
pusha
inc
mov
mov
push
sub
cli
aas
mov
jmp
loope
insb
loope
mov
mov
and
popf
cmp
xchg
inc
xchg
mov
sub
into
imul
imul
cs
mov
je
out
mov
rolb
sub
addr16
xlat
mov
xchg
daa
dec
adc
lcall
arpl
dec
adc
mulb
aam
inc
dec
cmpsl
adc
mov
adc
mov
or
push
out
ja
xchg
je
in
loop
ret
out
cmp
imul
cmp
xchg
insb
testb
xor
das
adc
scas
push
push
xchg
pop
jns
ljmp
lahf
inc
pop
movsl
call
js
jb
mov
mov
flds
sub
pop
leave
pop
mov
movsb
out
push
call
mov
lret
mov
sti
mov
shll
shr
sub
sbb
dec
pop
addr16
xor
sub
sub
stos
ret
xor
inc
nop
mov
cmp
xchg
sbb
and
icebp
inc
xchg
sbb
lods
arpl
push
stos
add
inc
inc
push
dec
outsl
std
test
dec
lock
mov
pop
pop
and
lret
push
idivl
xor
push
stc
js
inc
xor
or
aam
inc
das
add
cmp
pop
insb
adc
push
lret
jne
dec
fdivrl
popf
push
push
xor
mov
cli
adc
fistps
mov
pop
adc
leave
cltd
loop
mov
xor
outsl
mov
jmp
xchg
adc
or
inc
xchg
fmulp
lcall
fwait
adc
out
push
add
push
das
mov
add
insl
sbb
cli
int
std
das
sub
add
cltd
push
ss
or
inc
rcl
popa
jno
mov
xchg
mov
dec
xchg
pop
push
call
cmp
push
dec
js
mov
adc
push
orb
rorl
sbb
mov
sbb
mov
push
xor
or
popf
xchg
dec
mov
mov
push
testl
hlt
repnz
lret
pop
and
and
jns
xor
data16
fwait
xchg
in
mov
popa
jg
std
sub
stos
lods
insl
adc
sub
jae
rcrb
sbb
mov
outsb
xor
sbb
rclb
ret
popa
dec
sbb
lods
jle
lret
inc
cmp
cmp
ljmp
pop
movsl
pop
ljmp
sarb
mov
inc
push
jbe
dec
fistps
rorb
sbb
cmc
and
jg
test
xor
push
je
sbb
insb
or
xchg
dec
inc
pop
adc
jo
adc
pop
cmp
popf
in
inc
cmp
loope
add
and
push
leave
idivl
and
pushf
ret
sti
xchg
pop
mov
push
dec
mov
dec
pop
test
into
ja
fdivrs
sub
mov
enter
sub
push
out
lods
mov
shll
fisttpll
in
adc
aam
dec
push
adc
inc
sub
cmp
jb
inc
aas
pop
xlat
scas
sbb
sub
pop
arpl
xlat
xor
out
cmc
sti
aaa
jae
es
movsb
pushf
hlt
inc
rcll
sub
inc
das
jmp
inc
gs
adc
ret
adc
bound
mov
xchg
mov
dec
pop
subl
mov
cltd
repz
out
add
push
insb
int3
cmc
pushf
loop
xor
cs
push
pop
xchg
fwait
adc
outsl
inc
int3
dec
minps
sbb
push
inc
push
fldt
ror
xchg
cmp
mov
mov
and
push
xchg
insl
test
xchg
out
ds
jo
stos
insl
cmp
xchg
inc
sbbb
push
add
sub
cwtl
outsl
js
in
sub
pop
in
sub
test
xchg
orb
sahf
lock
xor
and
cltd
mov
fnstcw
cwtl
pop
not
cmp
adc
insl
push
and
xor
rorb
mov
stc
data16
cmc
sbb
xor
jnp
xlat
lcall
testl
fsubs
push
adc
jae
adc
adc
add
ret
xchg
movsb
push
sbb
xchg
iret
sbb
inc
leave
ja
insl
aaa
mov
mov
fs
cmp
pop
pop
jecxz
and
lcall
lret
add
sbb
or
or
shrb
lahf
and
xor
pushf
mov
outsl
fldt
sub
lds
adc
stos
and
fucomi
les
daa
xor
xor
push
push
pop
jmp
mov
out
and
aam
inc
push
rorb
jg
gs
cmp
fdivrp
xorb
and
int3
mov
leave
sti
jl
subb
push
sti
in
and
lahf
sub
add
push
xor
sub
and
xor
clc
pop
shrl
pop
dec
add
repz
iret
pushf
pop
mov
cmpsl
out
pop
stc
fwait
push
xor
fmuls
fdivr
fisubrs
xor
lret
adc
lods
dec
push
add
popa
and
push
xor
and
inc
scas
cmp
gs
pusha
sbb
imulb
adc
or
test
cld
outsl
rorb
xor
mov
push
inc
rorb
pop
add
jg
mov
addb
cmp
add
or
push
xor
fadds
jnp
mov
push
fs
int
mov
sbb
enter
add
cli
jnp
jg
out
pop
lcall
jge,pn
xchg
inc
dec
lahf
outsl
mov
push
jnp
push
ljmp
cmpsb
xor
xor
jecxz
jg
sbb
test
sbb
repnz
pop
adcl
jnp
lods
mov
pop
out
repz
mov
dec
jbe
cmpsb
xor
xor
leave
mov
and
push
inc
sub
inc
imul
aam
insb
or
mov
mov
cmp
push
sbbl
enter
xor
ret
inc
jp
insl
in
cmpsl
mov
cmp
inc
sahf
jne
inc
sub
out
mov
jno
mov
mov
aam
incb
dec
xor
xchg
xor
and
clc
int
lds
bound
xorl
clc
pop
pop
jbe
clc
addl
sub
cmp
stc
inc
sbb
push
mov
data16
and
rolb
pop
push
orb
repnz
cld
stc
fmul
sub
in
in
js
jo
mov
iret
pop
cmpb
xchg
xchg
incb
and
xchg
lods
enter
inc
mov
jnp
pop
mov
fdivrs
fdivrp
fistps
test
jmpw
popf
retw
mov
adc
mov
imul
dec
push
push
cmp
adc
fsubr
cmp
jge
jle
sub
dec
jae
aam
into
mov
xor
stos
mov
je
das
dec
and
arpl
out
lea
lods
mov
push
idiv
das
xor
enter
jmp
mov
mov
mov
pop
xchg
sbb
sub
jmp
or
inc
jbe
mov
inc
add
xchg
sub
popf
dec
sbb
mov
xor
int
sub
adc
sarl
and
xorb
lds
xor
stc
xlat
sbb
mov
popf
outsl
jg
ret
ficoml
push
sub
xor
jno
xchg
pop
daa
fld
repnz
mulb
push
and
mov
mov
aas
or
into
aad
push
aad
sub
inc
xchg
mov
and
push
push
sub
pushf
mov
rclb
fildl
cmp
andb
gs
fidivs
repnz
fildll
xor
aad
dec
mov
outsl
dec
lods
xor
js
imul
xchg
mov
fwait
xor
scas
addr16
lahf
mov
push
push
sbb
out
popf
mov
mov
js
popa
rorb
push
jle
outsb
scas
out
xor
add
or
jmp
js
movsb
ljmp
mov
and
jp
adc
mov
add
jl
dec
test
adc
inc
add
imul
mov
pushf
dec
mov
inc
xor
sbb
add
stos
pop
data16
jno
bound
nop
xchg
mov
std
push
inc
popa
inc
ficomps
mov
jno
pushf
push
fsts
cmc
lds
pushf
jne
xor
popa
jno
imul
es
icebp
fistpll
push
test
aad
mov
lcall
lret
out
icebp
jne
ficompl
jo
data16
lock
mov
mov
je
jnp
add
push
popa
movsl
fwait
shrl
pop
in
mov
adc
or
sbb
cli
jne
mov
out
adc
icebp
jmp
test
xchg
cmp
sahf
mov
les
jecxz
or
cwtl
rorl
cli
jno
dec
mov
orb
push
pusha
mov
out
mov
mov
gs
push
jnp
jb
popa
sbb
insb
mov
mov
mov
cwtl
xchg
mov
dec
nop
pop
pop
jae
out
add
lret
inc
fdivrs
in
popa
loopne
mov
dec
in
aaa
mov
and
mov
ljmp
fldt
jae
jb
enter
das
icebp
sub
pop
dec
lock
pushf
call
mov
in
cmp
addr16
lods
push
pop
and
push
stos
aam
fwait
xor
xchg
push
xchg
lods
push
les
das
dec
lcall
lahf
pop
push
inc
and
and
aaa
out
arpl
sbb
stos
sahf
insl
lahf
inc
push
andb
inc
dec
mov
pmulhuw
cmc
mov
jnp
movsl
mov
psubsb
sbb
data16
add
adc
lock
and
bound
ret
push
fildl
push
imul
add
fs
cmp
jae
sub
lret
cmp
dec
das
and
fisttpll
aaa
lahf
jnp
mov
add
pop
fldcw
rcr
push
in
and
pop
icebp
jmp
ja
out
mov
in
lret
ficoml
js
in
cmc
add
push
cwtl
sahf
push
add
pusha
cwtl
fwait
aam
pop
jae
pop
mov
mov
leave
jl
cs
mov
call
es
or
decb
leave
adc
cltd
mov
std
xchg
ljmp
dec
mov
movsb
in
adc
add
pushf
lcall
jo
dec
cld
inc
repnz
in
mov
mov
jg
jl
bound
nop
sbb
out
cmp
jne
jb
or
leave
popa
aad
cmp
jle
test
xchg
not
mov
aam
jns
aam
arpl
popl
outsb
add
fcompl
jg
add
xchg
fisubl
scas
insl
mov
cli
ja
scas
in
pusha
in
loop
add
imul
lret
aaa
cmc
jl
xchg
scas
xchg
scas
xor
and
insb
mov
jbe
ss
bswap
jp
popa
xchg
or
mov
bound
cltd
scas
mov
cs
inc
sub
sti
std
jmp
fldenv
ljmp
jns
push
scas
xor
dec
lock
int
xchg
mov
push
mov
lret
xchg
inc
mov
out
fildl
dec
pop
es
jecxz
xchg
stos
in
dec
lret
arpl
xchg
mov
pop
mov
out
mov
gs
mov
xor
repz
mov
or
push
sub
out
or
and
cmp
jmp
in
and
push
pop
xor
incb
push
lcall
sahf
lods
scas
loope
lods
mov
mov
mov
mov
inc
popf
ds
std
loope
pop
xchg
bound
push
fidivs
out
jo
pop
je
xlat
rcr
mov
iret
inc
add
ret
sub
cmp
jo
ss
test
or
jmp
scas
inc
fcoml
cmc
lret
ljmp
inc
imulb
les
inc
shrb
pop
and
int3
cmp
int3
gs
xchg
pop
int3
dec
mov
in
ret
into
or
inc
jae
mov
hlt
mov
add
mov
aaa
fistps
xor
mov
icebp
and
mov
ret
xor
jbe
jbe
push
sub
rorl
inc
adc
enter
dec
add
add
cmc
xor
movsl
pop
push
cmp
ret
loopne
movsl
fcompl
popf
jb
xchg
into
mov
je
push
xchg
jle
mov
push
sbb
fs
and
js
loopne
fdivr
cmp
mov
dec
sub
cmpsb
in
inc
lock
lcall
mull
pop
inc
sbb
jno
inc
sub
jae
push
and
sub
cmp
push
add
rcrb
insb
and
aaa
insl
push
loope
das
push
in
movsb
pusha
js
jge
subl
xor
adc
cmp
inc
aas
sub
cmpsb
leave
outsl
popf
fsts
push
mov
adc
lods
in
into
inc
out
sub
rolb
ss
fwait
je
mov
pop
dec
push
lea
sub
shrb
pop
add
add
and
hlt
lret
xchg
shlb
dec
lods
repnz
xchg
sub
fbld
sbb
lods
gs
arpl
push
xor
mov
push
push
push
imul
mov
inc
popa
scas
push
cmpl
xor
sbb
out
xor
lea
and
xor
fs
into
fcomp
xchg
jb
movsl
aaa
and
mov
mov
mov
subl
ja
or
out
ss
push
cmp
outsl
mov
cli
adc
push
pop
jl
jl
push
in
fs
cwtl
mov
pop
ljmp
sahf
xor
xor
rcr
dec
adc
xor
idivb
mov
fisubrl
sub
xchg
mov
mov
inc
or
loopne
xor
adc
aam
stc
insb
push
xor
mov
cmpsb
jg
lahf
mov
xchg
nop
mov
xor
mov
xchg
inc
enter
test
jnp
rorb
pop
cmpsl
movb
cltd
out
out
mov
movsb
or
pop
mov
or
in
cmp
xchg
xchg
mov
pop
in
pop
pop
ljmp
lds
jg
cmpsl
dec
fucom
and
jne
or
inc
cmp
sub
faddp
inc
or
pop
jg
xchg
xchg
xor
mov
xor
and
js
scas
lods
jecxz
js
stos
adc
fcmovu
nop
mov
mov
nop
loop
repz
lock
jne
loop
push
sahf
jecxz
call
scas
or
fcompl
fwait
repnz
mov
icebp
stos
adc
mov
stc
ljmp
adc
cmp
clc
imul
repnz
push
push
sbb
loop
sub
jno
sub
fcmovu
aaa
xchg
jns
jns
insb
pop
push
inc
scas
movsl
and
sub
fsts
mov
mov
sti
dec
mov
test
lock
test
xor
ja
cmc
out
ret
cmp
dec
pop
and
xor
testb
fwait
xor
adc
cwtl
adc
lret
jmp
inc
and
jecxz
inc
cltd
mov
fidivl
lea
and
dec
push
or
ss
cli
ja
push
std
aam
cli
adc
pop
outsl
cmp
sbb
xor
fldl
cmpsb
adc
and
jnp
jno
pop
and
lods
jge
mov
mov
mov
ret
and
jmp
fucomp
adc
inc
mov
aaa
les
adc
out
js
lods
leave
rcr
int3
or
mov
iret
push
lret
data16
mov
cltd
testl
cmpsb
mov
xchg
outsl
loope
aam
clc
lods
adc
into
jg
jp
cmpsb
ds
xlat
ret
enter
inc
jge
add
pop
sub
push
fnstsw
inc
xchg
mov
bound
xorb
jmp
xacquire
jg
xchg
mov
ds
push
push
rolb
mov
dec
daa
lods
loope
mov
xor
xchg
push
ret
pusha
jecxz
mov
mov
mov
out
dec
mov
or
cmp
aam
sub
out
cmp
add
leave
xchg
dec
mov
mov
andl
sahf
test
mov
pop
icebp
xchg
in
add
add
mov
adc
mov
daa
or
lret
int3
cmpsl
pop
mov
jne
jle
mov
dec
imul
sbb
inc
adc
stos
jns
adc
and
popf
cmp
xor
lret
jbe
adc
negl
flds
sahf
fbstp
stos
fnsave
or
ret
insl
pop
fists
or
fcmovbe
mov
jle
jle
fildl
lods
cwtl
mov
jmp
xchg
adc
mov
int3
mov
xorb
inc
out
mov
fists
imul
dec
add
cmp
js
add
ljmp
sbb
ds
stos
xchg
push
dec
adc
push
repnz
pusha
popf
gs
mov
fidivrs
loop
pop
std
imul
xchg
popf
cld
or
out
mov
rcrl
aad
mov
out
push
adc
push
movl
in
add
mov
push
mov
cmp
imull
inc
lock
out
push
or
fisttpl
aaa
daa
aas
xchg
sbb
or
and
fistps
leave
cli
stos
xchg
adc
aam
ljmp
jl
mov
mov
out
rclb
loope
test
push
xchg
rol
dec
or
pop
ds
cmp
insb
cltd
aam
aas
rcr
push
test
pop
ror
ja
sbb
sub
aad
iret
into
lds
cld
or
mov
pop
jae
push
mov
imul
sbb
xchg
arpl
roll
pop
aam
xor
pusha
jle
sbbl
les
insl
in
int3
dec
dec
sub
xor
lods
mov
rcr
and
cmp
cltd
or
outsb
jl
sbb
popl
mov
or
loopne
xor
lahf
sbb
push
mov
pop
dec
xchg
jae
repz
xlat
in
pop
or
sub
and
add
cs
rorl
dec
sbb
or
lcall
iret
std
inc
scas
fmul
push
xchg
pop
jnp
dec
jo
pop
mov
movsb
out
fsin
sahf
ret
scas
popf
aam
mov
add
push
jns
loop
clc
ds
mov
mov
lea
adc
enter
int3
xor
ficompl
pushf
icebp
jbe
and
mov
sti
cltd
shl
adc
fsubl
jmp
shlb
inc
mov
mov
xor
ds
hlt
adc
mov
mov
jg
xchg
cmc
pop
leave
fwait
mov
je
and
add
sahf
arpl
and
ss
sbb
mov
ds
push
vpand
sbb
xchg
clc
rcrl
into
and
inc
jbe
cld
aam
adc
sub
rol
mov
sub
mov
movsl
test
ret
adc
sbb
mov
mov
or
pusha
cwtl
xlat
mov
xchg
sub
cltd
inc
push
cli
sbb
popa
dec
idivb
jmp
fmull
loop
mov
movsb
add
cmp
jne
pop
push
aam
mov
mov
xchg
jle
cmpb
mov
lret
mov
jecxz
mov
adc
mov
imul
sbb
dec
add
lods
enter
outsb
and
push
stos
insl
stos
jns
adc
pop
and
xlat
xchg
fidivs
sub
or
mov
push
xchg
push
add
decb
fidivrl
dec
pop
dec
sub
arpl
out
hlt
insl
push
adc
mov
xchg
das
shrb
jg
ret
testb
fnstsw
cld
leave
test
add
adc
jge
push
fsubrl
push
dec
lcall
leave
xor
int
lds
test
jp
or
and
jnp
mov
rcrl
cmpsb
insl
pop
add
scas
push
pusha
add
outsb
lods
push
add
sarl
test
fs
shlb
inc
push
xor
xor
mov
mov
add
pop
inc
add
inc
mov
mov
testl
mov
aad
sbb
out
leave
mov
add
scas
das
dec
push
xchg
cmpsb
add
sahf
out
sbb
mov
adc
jb
lods
test
outsb
neg
xor
fidivs
ficompl
jnp
cwtl
test
movsl
push
dec
mov
rcrl
pop
adc
mulb
mov
inc
xchg
adc
aad
mov
sbb
inc
pushf
mov
mov
inc
jle
add
xchg
scas
inc
rcrb
pop
mov
imul
imulb
fnstsw
cld
orb
out
xlat
sbb
jp
push
jae
jnp
test
pop
inc
dec
aam
mov
pop
cld
xchg
dec
pop
add
xlat
inc
fcompl
xchg
outsl
lock
push
adc
test
lock
aam
mov
outsl
clc
mov
mov
lea
ret
addr16
jge
outsl
jecxz
mov
inc
dec
inc
jp
jle
ret
push
mov
testb
pop
or
into
add
ss
inc
xor
push
ret
mov
addr16
shll
je
icebp
push
adc
enter
ja
int3
movsb
mull
psubd
push
pop
cld
jnp
stc
je
inc
shl
dec
fistpll
mov
test
add
iret
loopne
call
in
je
pop
jp
cmp
pop
cmp
add
cmp
roll
enter
stos
xchg
push
jb
aam
mov
push
dec
test
fisubrs
sub
xor
mov
pop
adc
push
repz
push
lret
jg
push
inc
nop
popf
aaa
sbbb
jae
sub
mull
push
outsl
add
add
mov
out
mov
pop
xchg
jecxz
cwtl
and
sbb
fiaddl
fists
xor
pushf
fmull
add
decb
pop
scas
and
scas
arpl
adc
sar
push
jl
ss
adc
insl
mov
test
orb
int
push
adc
and
lock
test
arpl
in
stos
sub
sbb
mov
int3
mov
jae
mov
xchg
pop
lods
pop
movsb
add
ljmp
mov
mov
push
dec
jae
les
xor
inc
out
dec
test
sti
lea
movsl
mov
inc
fisttps
adc
scas
sbb
js
or
cltd
imulb
push
jno
je
sub
aas
jne
jmp
es
dec
jge
test
lods
jecxz
sbb
rcrb
cmp
inc
stos
hlt
jnp
cmp
xor
adc
je
movsb
out
sarl
jno
sub
out
daa
adc
cmpl
mov
sbb
sbb
imul
mov
and
push
fs
jp
das
or
test
jbe
lods
and
ret
add
mov
sti
cmc
sahf
xchg
mov
std
or
mov
cwtl
aad
pop
int
sub
lcall
jecxz
outsb
adc
mov
push
inc
pop
ljmp
inc
loope
or
fst
jl
mov
mov
arpl
mov
sbb
lods
shr
push
arpl
and
inc
mov
and
add
mov
fwait
iret
dec
clc
xor
mov
and
cld
test
lahf
adc
sbb
rorb
mov
inc
mov
mov
adc
lret
mov
hlt
stos
adcb
rcl
xor
inc
cwtl
xchg
lds
cmp
stos
jp
xor
push
push
add
sub
popl
or
fwait
pop
mov
in
hlt
cli
sahf
in
sub
jb
scas
pop
inc
cs
frstor
mov
dec
sbb
xchg
dec
push
into
in
jbe
cmp
lcall
mov
cmpsl
inc
jge
mov
cmp
xchg
insb
and
adc
adc
and
inc
sub
nop
dec
push
pop
adc
movsb
jg
inc
xor
sub
clc
pop
test
dec
scas
mov
cmc
jns
xor
mov
test
xlat
in
inc
aam
pop
int3
inc
inc
loopne
inc
incl
test
mov
cld
in
jbe
lret
iret
fldt
in
in
xchg
dec
mov
jb
or
aaa
test
inc
add
cmpsl
and
pop
inc
out
fistpll
mov
gs
dec
sahf
lcall
or
add
push
sbb
dec
xorb
pop
lds
mov
xlat
adc
lret
in
mov
mov
pusha
adc
inc
xchg
pop
cwtl
popf
cmp
ljmp
loopnew
xchg
dec
xchg
das
mov
cmc
adc
jge
pop
jp
jp
dec
or
add
aad
sbb
dec
in
jge
push
int3
jle
add
hlt
sub
dec
cli
or
sub
dec
loop
mov
int3
rcr
mov
addr16
orl
imull
cmp
repz
mov
imul
ficoml
sbb
movsb
inc
imul
out
xor
cli
sbb
test
out
xor
ret
cli
push
mov
int3
mov
mov
fisubrl
insl
loopne
jne
or
sub
mov
sub
in
inc
mov
inc
mov
jge
inc
sti
xchg
fwait
sbb
add
pop
outsb
mov
int3
dec
cmp
jmp
loope
dec
sbb
test
push
pop
mov
cmp
push
fmul
sbb
sub
dec
cmp
test
leave
cmpsl
fcoml
aad
aaa
xor
mov
add
adc
std
sti
and
loop
xchg
cmpsl
xchg
mov
xchg
pop
sahf
mov
mov
adc
dec
mov
jmp
dec
push
sbb
aad
cmp
dec
movb
in
push
stos
cmc
xchg
jecxz
xchg
cltd
mov
adc
mov
sbb
inc
mov
dec
into
adc
ret
jno
push
mov
aaa
dec
insb
js
sbb
int
jno
jns
push
xor
jle
cmc
ja
pusha
addr16
call
nop
xchg
jle
inc
sbb
outsl
popa
push
cs
into
push
mov
test
mov
fsubr
mov
add
fdivrp
gs
loope
xor
add
xchg
shrb
inc
adc
and
xlat
aas
mov
jb
mov
ja
testl
sbb
pop
push
push
not
add
decb
roll
or
mov
xchg
call
popf
nop
add
mov
or
dec
scas
subl
insb
xchg
mov
sbb
xchg
pop
fwait
lret
stos
pop
inc
ficoms
cmp
imul
mov
fbstp
cs
fimull
lret
out
dec
sbb
stc
mov
pop
stos
hlt
xor
jge
outsb
popf
and
adc
lcall
or
icebp
cmp
xchg
mov
rcll
or
ds
cmp
add
mov
std
cmp
rorb
xor
or
inc
mov
jmp
loop
inc
cmp
jmp
dec
or
or
pusha
jmp
dec
cmp
out
lretw
xlat
jbe
mov
aaa
mulb
sbb
mov
jge
and
xchg
cmp
xchg
cmp
into
or
ret
fs
add
mov
xchg
sbb
xor
je
shlb
fsubs
lret
cld
cmp
movsl
sti
lcall
pusha
pop
ret
push
jle
pop
add
fisttpll
adc
out
mov
jb
ss
rcll
ret
stos
push
xor
push
push
mov
inc
stos
lock
mov
mov
pop
push
xlat
mov
xchg
repz
mov
shrb
mov
fcomip
outsb
mov
out
nop
scas
jb
cwtl
pop
push
dec
pop
ja
insl
pop
ljmp
adcb
sub
sbb
pop
out
aaa
xchg
mov
and
daa
and
inc
push
add
mov
dec
xchg
fld
mov
data16
push
pop
cmc
pop
icebp
pop
lds
jg
addr16
es
inc
pop
sbb
pop
icebp
push
inc
and
xchg
mov
lods
sub
or
ds
jmp
mov
setae
inc
jns
fsts
dec
in
daa
mov
and
jnp
xchg
lds
mov
mov
repz
adc
lods
dec
and
cltd
repz
rorl
cltd
push
xor
or
data16
or
orl
pop
inc
or
adc
ja
jae
lds
add
mov
push
pop
mov
sub
fdivs
out
daa
pop
shl
mov
xchg
mov
cmpsb
je
adc
adc
mov
fisttpll
pop
xchg
mov
cs
xchg
sbb
adc
cltd
adcb
imul
es
fimuls
lock
arpl
jge
rolb
xchg
adc
jecxz
and
mov
mov
mov
jne
adc
fnstenv
pop
mov
adc
mov
arpl
stos
aam
or
bound
shufps
int3
int3
dec
jmp
adc
lods
xor
test
pop
incb
dec
popa
sbb
push
xor
test
fidivrs
dec
imul
and
cmpsl
inc
repz
mov
ds
push
inc
add
cmpsb
push
add
push
out
adc
dec
sub
aam
aaa
jge
rorl
jb
sbb
aad
adc
repnz
out
mov
xor
dec
xchg
das
scas
fadds
cmp
push
adc
movsb
sbb
mov
mov
movsb
cmc
cmp
and
adc
out
xchg
scas
adc
jg
aaa
outsl
jo
jmp
pop
cmp
add
rorb
push
hlt
stc
dec
push
je
sub
rorl
mov
lret
push
enter
js
jne
push
bound
mulb
and
cmp
clc
pop
pop
inc
scas
push
pop
add
hlt
cmc
rorb
dec
push
add
insl
adc
adc
dec
sbb
fimull
mov
mov
out
inc
mov
or
repnz
gs
pop
mov
inc
inc
jo
jge
and
repnz
ret
dec
jp
sub
fstps
jmp
sub
insl
clc
and
inc
mov
int3
mov
cmp
fcmovb
mov
cltd
sub
rcrb
fildll
shlb
mov
lods
fs
mov
rcll
fnsave
out
leave
test
sbb
rclb
rcr
cmpsl
in
aad
mov
mov
inc
fsubl
and
test
inc
cmp
jmp
fldenv
jbe
outsb
loope
dec
lods
pop
sub
scas
call
dec
in
out
sqrtps
jbe
and
xchg
push
pop
cmp
cmp
xchg
movsb
es
daa
dec
adc
or
cmpsl
adc
mov
pop
pushf
insb
push
stos
sahf
sbb
jae
scas
test
in
push
push
insl
aad
push
xchg
add
fiaddl
push
jno
xlat
stos
testl
sbb
adc
repnz
aad
pushf
jp
lock
xchg
loope
jl
out
or
loope
mov
xlat
pop
cmp
cmp
addr16
pop
cmp
lods
adc
ja
jo
xchg
mov
xor
out
xchg
in
push
movl
adc
jb
mov
mov
bound
xchg
push
ljmp
dec
inc
cmp
pusha
inc
xchg
insl
test
in
sub
scas
sbb
adc
andl
js
cmp
xchg
insb
xchg
sbb
xchg
stos
popa
mov
loope
cmp
adc
sbb
pop
pop
push
sub
mov
sarl
xchg
stos
push
mov
sbb
inc
mov
xlat
stos
cltd
ljmp
lods
sbb
in
fwait
mov
mov
rorl
movsb
sahf
call
ret
shll
dec
mov
and
int3
cmpsb
cmp
add
nop
jns
int3
xor
imul
lret
xor
pop
int
mov
clc
loop
gs
jno
lods
mov
insb
shll
push
cltd
sahf
cwtl
add
mov
mov
lods
aas
in
sbb
cmp
mov
dec
bound
adc
shlb
inc
fimull
shlb
sbb
xchg
test
sbbl
push
rcrl
pop
out
jp
clc
mov
mov
xor
sbb
xor
cmp
mov
mov
lahf
sub
mov
jmp
out
dec
stos
inc
clc
adc
inc
dec
sub
mov
mov
js
sub
in
inc
jnp
inc
jbe
insb
push
inc
sti
stc
pop
dec
into
fdivp
loop
or
in
icebp
iret
lahf
add
ds
imul
xchg
push
xchg
sbb
add
jecxz
add
jo
mov
sub
mov
dec
ja
sbb
mov
push
push
imul
lcall
pop
pop
push
int
in
ss
aam
mov
xorb
test
sti
pusha
pop
ss
mov
decb
xchg
scas
adc
add
sbb
in
mov
inc
repnz
xchg
and
and
add
shl
push
movsb
sub
aas
add
jnp
mov
dec
cmp
mov
call
adc
adc
mov
dec
in
dec
iret
xor
or
push
cmp
jp
mov
hlt
rclb
mov
stc
iret
cs
and
mov
dec
adc
stos
cltd
mov
pop
into
jns,pn
and
sbb
or
and
adc
scas
fs
rcrb
push
scas
mov
inc
es
repz
ds
mov
push
sbb
fistl
sbb
cmpsb
repnz
mov
pop
lods
stc
fnstsw
pop
cwtl
xor
les
jmp
jb
js
js
in
xchg
sahf
pop
test
shlb
imul
and
mov
dec
jno
pop
lahf
jge
outsl
sahf
inc
pop
jae
popl
xchg
sbb
mov
jae
into
jecxz
add
data16
movsb
dec
mov
sbb
outsl
sahf
dec
xor
jle
test
cmp
cwtl
jbe
push
pusha
add
mov
sub
mov
leave
adc
xchg
pop
ds
inc
dec
test
shrb
mov
outsl
inc
shl
fbstp
mov
into
xchg
cmp
inc
xor
xchg
sub
les
test
dec
xchg
movsl
and
sub
push
jmp
cmp
mov
loope
lock
cmp
repnz
dec
shrb
shl
scas
lock
add
xor
in
pop
inc
ljmp
gs
stos
test
jmp
stos
call
cmc
mov
popa
xchg
adc
cmpsb
dec
popa
xor
mov
jl
or
pop
leave
cld
xchg
push
ret
push
pop
inc
mov
jo
jmp
out
inc
sub
pop
shlb
ljmp
lahf
test
mov
hlt
fs
lods
leave
jne
sbb
shl
rorb
loope
or
in
sub
fs
out
std
les
shll
nop
jmp
mov
lcall
mov
sub
xor
cli
dec
test
mov
jle
jno
outsl
and
inc
jmp
cmpsb
gs
leave
cmpsl
dec
and
push
std
sbb
fbld
movsb
or
mov
xchg
ss
decb
lea
sbb
imul
fnsave
jmp
push
push
mov
mov
jbe
lret
add
ret
les
test
lods
sbb
mov
jns
cmc
push
fistpl
scas
or
push
int3
scas
int
popf
bswap
bt
jb
sbb
inc
mov
jge
jns
push
dec
mov
icebp
hlt
in
loope
or
mov
and
dec
xor
xchg
jmp
pop
mov
mov
or
push
aad
punpcklbw
jmp
jbe
jl
ret
scas
mov
outsl
rol
adc
mov
mov
mov
push
push
add
sub
orl
outsl
in
data16
popl
enter
dec
mov
lahf
add
enter
pusha
lea
fstp
ret
stc
pop
out
inc
sub
lods
std
clc
pusha
orb
sbb
push
adc
xchg
insb
adc
jo
ds
cwtl
dec
lahf
lods
xchg
pushf
stos
mov
push
imul
in
xchg
pop
adc
add
xchg
pop
add
mov
add
aad
movsl
jmp
popa
mov
or
mov
test
movsl
xchg
stc
ljmp
pop
cmpb
test
cmp
fnstenv
cmpb
add
out
cmpsl
fiadds
sbb
and
popa
repz
or
incl
inc
cmpsb
push
test
inc
inc
fstpl
pop
pop
jbe
test
xor
sbb
mov
mov
inc
mov
jg
repnz
lcall
push
cmp
shll
cs
add
push
add
and
mov
repnz
add
sub
negb
xchg
mov
bswap
xchg
xor
and
push
mov
ret
jbe
movb
loopne
popa
dec
push
adc
xchg
and
out
add
popa
pop
test
xchg
arpl
pop
jmp
cwtl
pop
mov
mov
push
or
mov
das
ss
push
fcmovne
add
sbb
sti
leave
fwait
cld
adc
push
icebp
ljmp
outsl
daa
sub
test
arpl
pop
rorl
jl
rcl
test
rcl
push
adc
cmp
adc
cmp
pop
in
shl
mov
in
inc
or
mov
cld
jecxz
icebp
pop
and
pop
push
jecxz
inc
sbb
fisttpll
nop
adc
dec
lret
cmc
jb
bound
ja
loop
movsl
cltd
lret
lcall
adc
arpl
icebp
push
ss
xor
mov
mov
jp
dec
mov
je
jb
pop
out
xchg
seta
add
pop
lods
xchg
rclb
inc
and
cmp
adc
mov
mov
or
loopne
ret
loopne
add
dec
sbb
mov
in
mov
dec
xchg
fldl
int3
rcrb
xor
data16
idivl
xor
addr16
dec
inc
and
ret
sub
sub
shll
xchg
jo
pop
dec
pop
jle
arpl
sti
mov
push
and
push
and
std
xchg
jmp
adc
pop
xchg
push
mov
jo
and
insl
insb
lds
insl
stos
xchg
sub
cmp
inc
scas
cmp
mov
fmull
cs
dec
push
testb
jae
mov
or
rolb
cmc
push
sub
pop
ja
pop
iret
push
dec
testl
rolb
in
mov
dec
movsl
cmp
cmp
xchg
xor
scas
push
lds
das
rorb
lds
in
fs
sbb
sbb
cld
aad
cmp
sbbl
nop
mov
xor
addr16
jg
fdivrl
leave
dec
loopne
adc
add
inc
rcll
inc
push
push
mov
ljmp
lret
xchg
sub
rolb
out
or
pop
mov
imul
sub
cmpsb
jl
out
repnz
pop
xor
push
ljmp
popa
and
xchg
fmulp
loopne
xchg
out
xchg
mov
ss
inc
mov
cli
cmp
jbe
imul
xchg
lods
scas
aad
jne
repz
mov
rcl
les
leave
mov
pop
jae
stos
mov
es
xchg
xchg
nop
push
mov
test
dec
jnp
xchg
popf
cs
xchg
shl
add
pop
in
adc
faddl
dec
jo
aas
or
mov
and
stos
in
mov
push
movsl
mov
mov
xchg
or
ja
rcll
frstor
fnstenv
shll
hlt
mov
pop
data16
addr16
push
ljmp
stos
fidivrs
push
hlt
test
rolb
and
pushw
push
pop
xorl
rcl
pusha
mov
test
rorl
fmul
mov
xchg
and
cmp
add
push
inc
pop
ficoml
jae
push
addr16
dec
sub
and
fists
test
fcomp
out
mov
mov
icebp
movsl
aas
fcmovne
cltd
sub
rcll
sbb
mov
test
xor
loope
mov
pop
pop
nop
jb
jge
jecxz
sbb
ret
and
sub
mov
xlat
jl
loop
inc
pop
pop
data16
mov
adcl
or
insb
arpl
cmp
cmp
dec
xchg
cmp
fdivl
sbb
dec
scas
pop
cmp
leave
insb
adc
inc
xchg
sub
push
sub
dec
pop
nop
fwait
or
push
insl
andb
xchg
out
push
and
in
or
add
idivb
loope
push
popf
enter
adc
into
adc
xchg
sahf
dec
jbe
push
dec
sbb
and
fnstenv
adc
push
lock
pop
loopne
fbstp
int
sub
pop
mov
aam
push
lcall
mov
jp
push
lcall
insb
fstpt
rolb
or
push
and
mov
cltd
shlb
test
rcrb
sti
test
fwait
cwtl
xchg
scas
pop
ljmp
and
mov
cwtl
leave
int3
das
mov
xchg
mov
xor
outsl
jnp
andb
xchg
cmc
push
sbb
push
insb
mov
mov
lea
push
cmc
cmp
pop
xchg
jbe
out
mov
les
xchg
mov
push
adc
out
mov
ljmp
sub
mov
xchg
sub
lcall
scas
js
or
cmpsl
gs
adc
out
lahf
fildl
in
pop
jae
inc
push
xchg
mov
push
mov
xchg
stc
pop
and
lds
test
inc
js
push
popf
mov
test
repnz
xor
dec
aaa
stos
and
jmp
jle
or
lahf
mov
cld
addr16
in
mov
js
stc
add
push
sbb
xchg
popl
adc
inc
xor
pop
xor
cltd
popf
in
lock
call
int3
add
pop
in
popl
aad
mov
inc
aaa
sahf
hlt
xchg
push
adc
xchg
dec
jns
mov
ss
mov
push
shll
pop
in
nop
inc
mov
adc
popa
in
dec
aad
mov
outsl
loop
loopne
jns
mov
fiaddl
jno
test
pop
mov
imul
adc
mov
jmp
lods
pop
dec
cmp
xchg
mov
sub
int3
mov
sub
jnp
sti
mov
cmp
jbe
inc
jp
popf
mov
adc
jge
outsl
jb
jnp
out
adc
adc
push
mov
in
sub
leave
add
fcomip
lcall
push
xchg
adc
mov
pop
and
pop
xchg
pop
cmp
sub
dec
stos
mov
dec
hlt
loopne
xor
jo
mov
addr16
pusha
fsubrs
sub
cmp
cmc
das
push
lods
rclb
xlat
lret
loope
pop
test
fadd
jbe
sbb
fmul
call
sbb
clc
je
jl
in
insl
popf
mov
cmp
jp
rcrl
int3
rol
arpl
enter
pop
xchg
or
pusha
push
ljmp
popfw
jmp
adc
mov
test
mov
insl
enter
daa
lock
not
and
push
aad
iret
aad
out
dec
bswap
int3
cs
xchg
popa
xor
aad
add
fbld
xchg
iret
lahf
enter
inc
in
dec
int
push
push
pop
popa
or
addr16
pop
xchg
inc
jo
lds
sub
mov
orb
testl
xlat
xchg
es
inc
cmp
sti
scas
out
insl
das
lret
pop
test
aas
clc
mov
into
sub
daa
mov
es
and
sub
pusha
test
mov
xchg
pop
push
mov
ret
out
cmp
jno
stos
pop
jbe
in
pop
testb
cmp
xchg
xchg
lahf
ds
cltd
mov
stos
pop
sti
out
aaa
add
pop
cs
pop
sub
pop
and
pop
filds
fstpl
cmp
xlat
xchg
aad
push
ret
push
cld
inc
sbb
icebp
mov
scas
insb
pop
fimuls
cmp
xor
xchg
test
fisubs
dec
sbb
hlt
xchg
cmp
jb
rcr
je
mov
push
mov
inc
movsb
ffreep
test
js
in
jno
and
sbb
das
pop
sub
nop
mov
dec
cld
lock
pop
xchg
dec
xchg
aas
scas
dec
and
xchg
in
int3
sub
mov
sub
stc
in
jno
je
mov
lds
or
daa
dec
mov
cmpsb
lret
dec
movsl
cmp
mov
lods
inc
clc
sub
clc
clc
pop
mov
sub
sbb
sti
ss
xlat
and
int
scas
push
subb
lock
insl
insl
popa
repz
cs
hlt
lcall
mov
xlat
xor
pop
nop
in
push
and
xor
cmpsl
aaa
adcb
enter
leave
fstp
ret
or
inc
xchg
mov
jno
inc
adc
and
xchg
adc
movsb
lcall
mov
adc
jl
fnstenv
adc
ljmp
push
cs
dec
jl
arpl
sub
test
mov
mov
lea
in
lea
xchg
sub
ss
push
popa
iret
xchg
pop
and
inc
leave
mov
and
mov
in
and
inc
pop
mov
out
sub
nop
std
int
cld
dec
pop
push
aam
mov
lret
push
bound
or
sbb
mov
dec
aaa
insl
push
adc
adc
xlat
or
decl
and
add
adc
lea
rorl
fisubl
call
popa
stos
dec
dec
repz
xor
fucomi
lretw
pop
dec
fcomps
mov
in
and
mov
cmp
fst
jl
movsb
and
xchg
test
push
dec
dec
pop
das
arpl
add
call
pop
adc
and
in
jb
ljmp
add
push
jle
arpl
das
fs
add
icebp
aaa
ds
sub
add
xchg
jp
xor
add
push
daa
ds
aas
testb
mov
mov
sbb
fbld
sub
daa
std
lds
insb
and
dec
sbb
lahf
mov
sub
mov
ss
and
test
lock
pop
pop
add
xor
dec
or
sub
loop
sbb
and
mov
mov
and
sbb
std
pop
test
inc
and
adc
repz
mov
add
pop
pushf
mov
cmpsl
inc
arpl
cs
lret
adcb
add
ffree
stos
dec
lods
das
hlt
bswap
cmpsl
ljmp
frstpm(287
and
into
or
icebp
inc
jo
adc
adc
or
pop
fstl
lock
testl
call
jno
loopne
loop
or
sahf
aaa
jg
inc
lds
xlat
rol
inc
pop
test
into
xrelease
inc
sbb
mov
xor
data16
pop
pushf
inc
test
push
in
int3
loopne
push
xchg
loope
pop
das
pop
inc
fistl
adc
sub
or
push
xchg
daa
xchg
out
inc
mov
and
inc
sub
into
mov
mov
sahf
mov
rorb
or
in
fldt
subb
or
xchg
inc
adc
lea
jne
push
aad
std
jbe
mov
pop
sub
cmp
lds
adc
pop
sbb
test
lds
inc
shl
mov
sbb
and
dec
mov
ljmp
jns
lcall
cltd
cltd
dec
sbb
push
ret
dec
mov
gs
lods
and
dec
cli
out
mov
dec
pop
mov
test
sbb
push
pop
mov
and
shrb
or
dec
push
pop
mov
lods
inc
jne
cli
sti
aam
repnz
dec
add
adc
pushf
cmp
cmp
mov
and
dec
aam
pop
push
imul
ret
adc
dec
jg
jp
jl
sub
inc
dec
enter
xchg
inc
cltd
mov
jo
jle
pop
xor
cltd
or
add
mov
mov
xchg
testb
sub
pop
jno
div
nop
push
test
jg
push
mov
dec
pop
mov
ret
pop
add
je
in
jecxz
add
dec
or
mov
mov
dec
cmc
jecxz
pop
jno
or
inc
sahf
loop
or
pop
xchg
nop
add
xor
cmpsl
adc
cs
xchg
insb
mov
addr16
loope
xchg
pop
mov
jmp
xchg
clc
pop
out
enter
je
icebp
mov
pop
adc
lahf
mov
mov
push
cli
movsb
or
into
xor
cli
xor
mov
cmp
dec
scas
sti
scas
in
psubw
cwtl
arpl
pop
scas
xchg
lods
mov
sub
cmpsl
movsb
lcall
in
mov
cmp
push
mov
imul
sub
mov
popa
cwtl
add
pop
or
jle
ss
fadd
out
mov
scas
dec
mov
mov
mov
ret
iret
fimuls
sbb
sub
enter
mov
mov
movsl
arpl
cmc
sbb
xchg
repnz
mov
xchg
mov
iret
mov
mov
jle
pop
and
dec
stos
push
lock
int3
out
ffreep
orl
js
adc
jge
inc
jne
jmp
pop
out
cmc
in
mov
scas
stos
in
lret
mov
xchg
mov
cmp
mov
flds
lock
mov
mov
mov
jmp
inc
inc
data16
imul
ficoms
mov
and
adc
insl
cmp
or
cs
call
jo
and
sbb
mov
xor
jmp
cld
adcb
cs
sbb
xor
outsl
ja
test
xchg
xchg
mov
xchg
cmpxchg
in
cmp
sahf
out
inc
bound
xchg
rolb
or
mov
idiv
and
out
jnp
ds
lret
sub
sbb
shl
ja
enter
and
lods
lods
inc
fimuls
int
pop
ja
mov
pop
stos
fstps
cmp
cld
es
out
mov
jno
mov
fs
add
testl
inc
fdivrs
dec
subb
pusha
pop
mov
sbb
xchg
mov
jnp
inc
jmp
pop
jo
pop
adc
mov
sub
ja
es
jno
and
sbb
cltd
pop
lret
mov
inc
clc
scas
mov
ljmp
fldcw
test
pop
lret
out
jmp
or
mov
cmp
arpl
fs
mov
ds
add
xor
or
mov
dec
mov
mul
jne
shlb
xor
dec
stos
mov
sub
adc
jmp
push
push
sub
push
lret
movsl
aas
es
in
pop
dec
sbbb
mov
mov
push
xchg
mov
test
and
call
add
mov
add
dec
shlb
stos
pop
mov
pop
mov
xlat
xchg
mov
jns
adc
pop
jae
inc
sarl
mov
pop
sub
xor
xchg
lods
fisubrl
test
cmp
adc
hlt
push
and
nop
ret
ljmp
add
out
fwait
or
xor
sbb
mov
mov
int3
icebp
xor
jle
xor
shll
pop
je
scas
add
out
movb
data16
sbb
add
outsl
dec
xchg
jge
sub
push
pushf
and
hlt
jmp
add
sahf
loopne
lds
jge
ret
jecxz
mov
and
dec
clc
fmull
pop
sti
push
movntq
out
scas
push
adc
ljmp
sbb
fstps
ficomps
addr16
mov
jnp
aaa
popf
sub
xorl
push
jmp
push
es
adc
int
lcall
rorb
xor
dec
add
xor
pop
jnp
les
scas
push
bound
xchg
test
rclb
xchg
sbb
les
pop
push
inc
sub
inc
les
xchg
test
mov
sbb
ret
lahf
jg
adc
sub
mov
dec
add
push
jo
bound
lods
jmp
shll
pushf
pop
sub
mov
aam
xchg
lock
mov
inc
test
loop
add
add
inc
ret
lock
roll
mov
insb
repnz
pop
stos
push
ss
dec
sub
mov
cmpsl
mov
cmp
iret
sbbb
xor
add
in
fcmovb
stos
scas
std
int
mov
nop
iret
jle
aad
pusha
and
sub
pop
cld
jecxz
movsl
pop
dec
mov
cltd
roll
adc
jb
lods
mov
mov
je
loope
mov
add
imul
cmp
inc
mov
push
mov
sbb
jo
sahf
out
cmp
imul
lock
lea
iret
and
sahf
lds
enter
add
mov
pusha
xor
adc
jo
fistps
xor
push
insb
gs
fcmovnb
mov
lahf
fldl
add
pop
push
fsubl
push
lret
cmpsl
and
or
jmp
out
nop
pusha
add
int3
mov
lret
stos
orb
or
jge
lds
out
push
sar
inc
xchg
outsl
in
icebp
stos
stos
call
mov
call
mov
xor
inc
cmpb
dec
je
push
enter
push
cmp
test
imul
push
dec
je
xchg
je
roll
add
xchg
hlt
shr
jb,pt
lods
out
nopl
xchg
sub
mov
pop
jle
subb
dec
jns
scas
rcl
popf
inc
cmpsl
ljmp
sahf
add
mov
hlt
jb
lahf
jp
xor
inc
test
dec
sub
inc
adc
jb
es
jmp
mov
jns
sub
mov
rolb
js
or
mov
inc
xor
pushf
fimuls
test
pop
jbe
stos
sub
adc
fs
int3
repz
sub
dec
inc
ret
jo
jmp
mov
push
mov
scas
xchg
push
fstl
mov
sub
xor
sbb
aas
jge
sarb
es
imul
std
mov
mov
xlat
dec
xchg
leave
jg
fwait
out
int3
or
ret
jmp
and
pushf
popa
jae
mov
mov
xlat
aaa
ja
sub
mov
add
sub
stos
sarl
insb
loope
sbb
jbe
decb
xchg
lcall
test
jns
mov
push
sub
mov
inc
xchg
repnz
imul
add
xlat
or
lds
dec
xchg
cmpsb
jle
int
pop
lods
sbb
leave
add
cmp
test
sub
inc
mov
jns
add
cli
daa
test
nop
inc
jmp
insb
ljmp
inc
lret
int
fwait
inc
pop
mov
test
push
dec
lcall
push
xchg
scas
or
jmp
sti
icebp
add
dec
mov
pushf
push
dec
jmp
xchg
jl
bound
mov
or
sub
sub
pop
pop
adc
and
jns
push
jp
push
ret
lea
stos
mov
cld
nop
les
cmpb
pop
sti
das
ss
jmp
cmp
mov
mov
ds
call
push
mov
outsb
mov
iret
sub
pop
lock
dec
or
movsb
je
xor
sarb
push
cmp
bound
mov
adc
bound
data16
or
cmp
jb
scas
add
and
xor
ljmp
mov
imul
xchg
int3
and
or
movsl
push
outsb
fwait
pop
outsb
enter
jnp
bound
sbb
dec
pop
int3
incb
sub
pusha
sub
fxch
loop
icebp
mov
or
cmp
xchg
xor
repnz
mov
jl
and
dec
dec
and
push
pop
shl
into
xchg
inc
lcall
lods
daa
xor
mul
imul
daa
popw
sub
and
cmp
test
jmp
loope
pushf
in
sarb
jmp
xor
lods
stos
dec
mov
dec
aam
pop
int
ds
add
je
dec
xchg
xchg
adc
xor
outsb
lods
xchg
in
sbb
cmc
xor
inc
push
ja
jecxz
dec
xadd
repnz
sbb
shlb
mov
push
call
test
mov
xor
pushf
push
dec
lret
mov
and
dec
xlat
inc
outsb
popa
or
mov
mov
cmp
dec
and
movsl
fadds
cmp
mov
jne
or
jae
dec
mov
loop
fidivrl
pusha
inc
mov
jp
jg
pushf
pop
mov
out
add
add
cld
dec
movsb
incb
mov
sub
and
aaa
lret
mov
mov
dec
bound
xor
test
fisubrl
sbb
and
arpl
ja
je
sti
addr16
sub
int3
bound
cmp
leave
loopne
cltd
cmp
jne
and
or
sahf
lds
stos
xchg
hlt
jns
mov
xor
jp
mov
outsl
mov
push
lahf
xstore-rng
cmpsl
xchg
dec
pusha
aas
flds
lods
add
enter
or
ljmp
xlat
jge
jo
add
outsl
hlt
out
pop
shl
popf
jecxz
andb
mov
icebp
dec
aaa
daa
push
inc
out
clc
out
xor
sbbb
push
sub
add
push
xor
mov
push
aas
lods
lea
jo
push
inc
addl
push
stc
mov
push
mov
call
or
cmp
inc
jecxz
cmp
jb
inc
outsb
mov
daa
xor
add
shlb
xchg
inc
pushf
cwtl
xorl
fmuls
lea
pop
pop
flds
xor
mov
dec
fsubl
mov
shrb
ljmp
lds
pop
popa
les
mov
jne
popa
jecxz
cmp
xchg
push
and
clc
test
fidivl
mov
imul
cmc
adc
adc
fwait
test
xchg
pop
xor
movl
and
inc
dec
lods
add
sub
add
in
cmp
push
insb
fxch
sbb
push
stc
sub
lahf
xchg
mov
ja
push
ds
hlt
xor
mov
cld
xor
pushf
xor
inc
inc
mov
pop
push
jecxz
push
pop
mov
inc
mov
sarb
mov
push
lahf
stc
pop
shrb
sbb
ljmp
mov
xor
mov
xchg
stc
mov
inc
data16
jno
sub
test
push
pop
dec
ljmp
xor
lds
adc
or
inc
pop
push
pop
cmp
mov
xor
push
xor
fst
xor
ja
pop
jmp
push
cwtl
subl
mov
push
cli
aas
lock
push
clc
mov
test
pushf
push
push
inc
jge
jnp
in
scas
movsl
sbb
push
sti
cmp
add
cmc
xor
out
fmull
sahf
int
cmp
and
rcrl
add
jecxz
sub
and
inc
mov
aas
xor
push
or
push
jp
sbb
popf
push
lea
mov
adc
popa
inc
int3
dec
sub
sub
pop
jnp
cmpsb
sahf
add
jmp
scas
cmp
movsl
lret
fucomi
arpl
xchg
.byte
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
add
jne
or
push
inc
sub
scas
dec
fsub
pop
mov
add
xor
mov
push
jl
ja
pop
mov
mov
sub
sub
mov
add
jmp
xor
xchg
pop
add
and
pushf
movsl
mov
push
sub
pop
sub
mov
add
mov
sub
jne
and
mov
stc
cmp
inc
enter
dec
mov
push
lret
in
loope
or
cs
dec
xor
mov
enter
pop
mov
enter
aam
sub
aas
xor
cmp
aaa
int3
sub
cmp
fisttps
test
rcrl
mov
mov
inc
fsts
dec
inc
imul
test
movsl
rcll
cld
push
movsl
cmpl
dec
sub
stos
xor
cltd
pop
pop
jge
int3
mov
dec
enter
incl
cmp
add
rcll
mov
jg
test
xchg
mov
sub
enter
jns
aas
aas
mov
fisttpl
sbb
cmp
pop
lods
mov
adcl
mov
insl
incb
xchg
jbe,pt
fwait
outsl
rcll
in
nop
cli
xchg
outsl
rcrl
mov
sub
sarl
mov
or
shll
cmp
sub
add
or
xor
mov
aad
das
dec
push
xchg
cmpsb
cld
pop
das
sub
dec
mov
pop
test
push
in
mov
ljmp
add
sub
xor
mov
dec
popf
mov
cmc
jmp
cli
in
jge
mov
pusha
add
sbb
pushf
stc
dec
dec
cli
inc
ret
sbb
dec
es
shrl
mov
jmp
fwait
outsl
pop
das
movsb
insb
cltd
pop
loope
shll
adc
lahf
les
pop
cmp
fdivrs
mov
mov
icebp
es
orb
jno
mov
std
lea
mov
test
and
test
aam
adc
gs
cmp
rorb
outsl
jg
xor
std
push
sarb
pavgb
aad
xchg
xor
jg
cmpsl
mov
popl
push
push
jmp
adc
aad
mov
adc
pop
int3
pop
cmp
cmp
push
outsb
je
cmpsl
mov
sub
dec
lcall
stos
mov
mov
adc
jae
test
xchg
push
outsl
std
dec
xchg
shll
pop
adc
push
cmp
inc
sbb
xchg
push
xchg
adc
aad
and
or
xchg
stc
es
test
std
inc
aad
pop
jl
es
cld
jg
sub
xchg
test
xchg
lea
mov
loop
push
push
loop
push
dec
gs
sub
or
subl
fdivrp
hlt
cs
decb
cs
repnz
repnz
sub
sub
dec
xor
adc
test
adc
inc
pop
dec
mov
repnz
mov
or
mov
mov
cs
lea
dec
jnp,pn
dec
aaa
cmp
sahf
das
jno
mov
and
mov
add
mov
xchg
out
pop
nop
adc
out
xchg
lea
mov
stos
mov
xchg
popf
cmpsl
jae
imul
pushf
jo
add
pop
je
test
xor
lea
mov
jns
lea
dec
xchg
cltd
in
lea
aas
or
adc
mov
lea
mov
xchg
sub
mov
mov
int
mov
lea
mov
xchg
sub
std
daa
mov
adc
movsb
lea
aas
or
imul
sub
cs
flds
mov
adc
sub
xchg
adc
test
xchg
lea
lods
and
mov
xchg
lea
int
lea
aas
pop
cltd
xchg
cmp
mov
mov
add
arpl
test
push
mov
orb
sub
and
mov
test
add
xchg
fstl
mov
adc
leave
adc
aas
xchg
adc
aas
push
mov
mov
lret
push
push
inc
adc
cwtl
inc
xchg
sub
mov
mov
flds
mov
adc
rcll
adc
xchg
jae
dec
xchg
xchg
dec
fwait
mov
test
lea
jbe
sbb
mov
lea
cmc
xchg
lea
mov
lea
mov
adc
stos
and
xchg
cmpsl
dec
adc
cmp
sarl
sarl
test
sbb
test
sti
hlt
cwtl
pop
cmp
rorl
mov
js
sub
sub
sahf
mov
fcomps
adc
sbbl
stos
sbb
out
pop
repz
xchg
adc
mov
mov
mov
pop
mov
inc
sbbl
stos
sbb
mov
mov
mov
mov
mov
pop
mov
inc
sbbl
stos
sbb
mov
and
out
fldt
stos
mov
dec
jmp
pop
dec
iret
lods
sbb
sub
mov
fcomps
adc
sbbl
mov
jp
jb
mov
mov
imul
in
stos
mov
mov
jmp
sbb
insb
pop
cwtl
or
mov
adc
lea
sti
mov
mov
mov
adc
callw
int3
xchg
jns
xor
cmp
sti
mov
out
mov
loope
xor
loopne
lods
xchg
lea
mov
adc
outsl
sub
mov
ljmp
mov
mov
mov
sub
js
push
sbb
out
xchg
lea
je
mov
mov
lea
mov
ror
xchg
lea
mov
lea
or
outsl
lea
xor
sub
xchg
sub
push
nop
movsb
cwtl
sti
mov
xchg
lea
icebp
stos
xlat
cli
ret
cmp
mov
push
cwtl
rorb
mov
mov
mov
mov
sub
sbb
or
sbb
xchg
out
pop
jg
fisubs
pop
mov
lea
cmp
cmpsl
jmp
int
sbb
sbb
inc
push
push
inc
mov
xchg
mov
jg
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
rcll
dec
notl
or
mov
int
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
rcrl
mov
lea
mov
lea
mov
lea
mov
fdivrs
test
lahf
aaa
cmc
mov
fwait
push
or
test
fisttpl
sub
dec
out
out
inc
popf
jo
jl
or
insl
int
dec
mov
lea
lock
in
xchg
lds
push
in
jg
xor
jp
lds
xor
push
repnz
sub
dec
stos
push
mov
arpl
adc
adc
xor
xchg
adc
fs
sti
mov
ret
stos
mov
adc
xchg
inc
push
jns
movsb
xor
cmp
rcrb
pop
mov
ret
push
add
popa
cltd
pop
loopne
movsb
shl
vpmaxsw
std
test
mov
lahf
push
xchg
les
in
pop
in
mov
jp
dec
aaa
rcr
xlat
fcoms
data16
and
dec
in
mov
and
scas
inc
xchg
scas
addl
cwtl
addr16
mov
or
sbb
push
sbb
sub
out
js
add
icebp
fcoms
mov
sbb
outsl
lds
sbb
sub
add
pop
and
add
imul
rep
jae
xor
out
mov
into
clc
shl
rorb
jne
in
add
push
mov
inc
test
and
je
xor
mov
call
sbb
sbb
pushf
aad
cmp
xor
sbb
mov
fstpl
shll
jle
and
push
call
mov
cmp
xchg
sbb
sub
sub
or
fisttpl
pop
jecxz
dec
jbe
leave
cmp
pop
sbb
and
sbb
arpl
rcll
push
cs
movsb
push
mov
outsl
pusha
frstor
mov
daa
in
jns
leave
test
adc
call
mov
das
pusha
push
mov
mov
lea
movsl
dec
fidivl
xor
mov
mov
in
into
and
out
fildll
pop
push
sub
mov
cltd
push
push
je
xor
sbb
mov
push
xor
das
jns
rcrb
pop
xchg
or
loop
mov
loope
push
adc
cli
jno
inc
mov
add
ret
fldenv
mov
arpl
mov
jle
in
pop
mov
mov
mov
pop
add
aas
pusha
addr16
rolb
outsl
in
lds
es
lahf
mov
not
push
push
lret
jg
xchg
in
mov
sbb
das
outsb
xchg
push
test
inc
data16
les
sbb
push
mov
fs
hlt
pop
loop
and
loop
mov
sub
adc
ja
lock
lods
push
or
add
and
add
add
add
in
push
add
in
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
in
push
add
jmp
add
in
push
add
push
add
in
push
add
push
add
in
push
add
push
add
in
push
add
push
add
in
push
add
push
add
in
push
add
push
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
push
add
add
add
in
push
add
add
add
in
push
add
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
push
add
push
add
add
push
aas
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
push
add
imul
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
jbe
xor
xor
pop
add
je
insl
add
add
add
add
add
add
add
sub
add
cmp
sub
add
push
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
mov
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
ret
sub
sbb
xchg
add
add
pop
jne
gs
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
ret
fbld
cmp
ret
imul
out
mov
or
js
push
pop
and
xor
dec
nop
or
mov
adc
out
mov
sbb
sub
icebp
mov
or
in
xor
testl
cmp
aam
inc
mov
test
daa
das
stc
enter
mov
push
adc
sbb
pop
cwtl
cmp
push
adc
out
pushf
nop
divl
es
mov
adc
cmp
idiv
lahf
adc
loopne
cmp
mov
mov
sub
pop
lahf
mov
dec
imul
std
inc
cmp
mov
dec
or
in
push
test
xlat
push
push
push
lret
and
xchg
jb
int
or
xor
lods
push
and
sarl
pop
stos
mov
jge
xchg
cmpsl
pop
pushf
or
or
jle
sbb
jecxz
pop
mov
lods
cmp
cmp
ja
dec
enter
inc
or
test
pusha
test
jge
int3
das
not
lcall
cmp
or
jo
je
jl
stos
xor
push
and
push
repz
lods
pusha
sbb
movsb
add
pop
pushf
rcll
dec
inc
mov
lret
out
loop
adc
enter
shlb
je
cmpsb
out
sahf
dec
imul
fistpl
or
push
shlb
ret
inc
push
mov
sub
push
orl
xchg
mov
sahf
xor
aad
shlb
loopne
push
mov
push
mov
cmp
adc
test
in
cmc
push
fsubp
add
or
std
dec
sub
dec
lahf
mov
cld
mov
sarl
sahf
lds
shlb
mov
sti
or
dec
and
inc
fsubr
mov
jnp
mov
hlt
lea
adc
xchg
jle
xchg
loop
adc
push
addb
push
mov
sarl
add
cmp
sub
enter
bnd
ror
int
inc
and
or
xlat
xchg
pop
jecxz
add
mov
dec
rcrb
aas
fists
popa
or
std
jnp
push
inc
sub
and
inc
addr16
mov
insb
jae
mov
mov
in
inc
lock
movb
enter
out
pop
jecxz
bound
stc
or
movsl
mov
xchg
shll
enter
dec
mov
jp
mov
jge
popa
dec
sbb
add
pop
pop
xchg
add
jle
or
pop
xchg
push
test
push
dec
js
push
xlat
jo
insl
jl
in
sti
not
fistl
shl
sbb
xchg
lea
mov
pop
movsb
shll
insb
mov
stos
ftst
test
xchg
mov
out
sti
jno
pop
andb
in
and
mov
push
or
dec
lock
sub
pushf
shr
cltd
jl
dec
nop
xor
ficomps
in
mov
mov
push
insl
add
ds
inc
xor
es
pop
test
repnz
cltd
pop
jnp
jge
dec
jp
sbb
cmpsb
jo
mov
add
inc
sahf
cmc
sub
enter
mov
mov
xchg
ja
xchg
loop
mov
sub
push
jbe
cmp
mov
add
sbb
icebp
sbb
outsl
aas
lahf
xchg
adc
pop
mov
in
pop
jo
dec
popa
cltd
sub
adc
mov
or
int3
jecxz
out
idiv
test
adc
fucom
xchg
fwait
inc
adc
push
scas
loope
ret
xor
rolb
xor
frstor
pop
push
mov
int3
jo
outsb
ljmp
ret
mov
mov
and
mull
sarb
jg
pop
scas
mov
lahf
sbb
dec
mov
test
cmp
pop
in
push
testl
cs
jae
add
or
jne,pn
fildl
adc
push
pop
in
jbe,pn
sahf
and
mov
jns
test
xchg
repz
xchg
add
mov
pop
fwait
js
cmp
andb
mov
adc
add
jo
movsb
rolb
cmpsl
cmc
jnp
cmp
xor
into
sti
ret
mov
or
xchg
test
loopne
imul
mov
test
ret
dec
insb
mov
mov
jne
clc
push
pushf
jb
sti
stc
add
loopne
or
push
cld
mov
cwtl
loop
xor
pushf
lock
and
cwtl
pop
sbb
fdivr
jb
or
out
pop
insb
fsts
jl
inc
popf
pop
dec
pop
cmpsb
dec
lcall
outsl
or
sub
inc
pusha
adc
jno
xchg
xchg
or
mov
push
into
gs
sub
popa
cmp
fisubrl
enter
daa
dec
xchg
orl
ss
dec
push
test
or
inc
test
adcb
cmp
subb
les
jo
xor
xor
sub
imul
mov
push
scas
es
inc
scas
cmp
pusha
out
sub
ss
inc
cmp
pushf
xchg
loope
and
xchg
jb
popf
lcall
mov
pop
ret
cld
inc
orl
jne
mov
inc
sbb
pop
sub
rorb
popa
scas
orl
inc
add
mov
rclb
add
cld
pop
xor
xor
sbb
xchg
js
pop
loopne
and
mov
jmp
xchg
push
out
hlt
insb
jne
mov
sbb
in
cmpsl
xor
or
imul
or
or
add
xor
and
in
mov
das
mov
jno
push
pop
xchg
add
dec
mov
in
and
cmp
je
lcall
aam
sbb
mov
inc
sub
fmull
imul
sub
jno
push
jp
xor
jo
adc
and
xor
jnp
imul
push
bound
test
xchg
ret
pop
clc
pop
repz
or
push
gs
mov
sub
inc
pop
aaa
jmp
bound
mov
test
ds
xchg
and
fildl
outsb
outsb
es
or
stos
mov
movsb
xor
cld
ror
outsl
or
gs
mov
jg
iret
inc
cmpsl
pusha
jne
ret
jne
popf
adc
sbbl
dec
mov
or
icebp
aam
push
cmpsl
lret
push
adc
insl
popf
sub
popa
lds
xor
xchg
xor
jnp
mov
or
lcall
sbb
push
cmp
rcll
push
insb
adc
stos
mov
test
mov
rolb
mov
rclb
insl
lret
int3
or
adc
je
xor
xchg
out
ja,pn
sbb
pusha
cmp
pop
push
mov
lods
jmp
imul
add
push
bnd
jmp
push
test
pop
outsb
inc
data16
movsb
decb
jle
fistpl
inc
ja
data16
adc
jae
adc
mov
sahf
mov
pusha
adc
pop
dec
add
and
test
orl
pop
mov
pop
inc
mov
lods
enter
pop
rorl
js
sub
cs
cmp
push
lds
mov
sub
je
sub
xor
scas
adc
lahf
mov
pop
jae
and
cmp
cmc
cmp
adc
stc
ja
add
push
push
mov
insl
xchg
pop
xchg
add
hlt
sub
pop
imul
push
ficoml
adc
mov
aam
adc
iret
idivl
inc
add
popf
mov
push
inc
pop
stc
in
push
mov
xor
xchg
xchg
inc
cmp
mov
cs
scas
jge
scas
mov
adc
xor
imul
je
xor
ficoml
push
jne
gs
fcmovne
fwait
push
inc
cmp
inc
mov
dec
mov
test
loope
outsb
inc
mov
mov
jg
ret
adc
adc
lock
or
cmp
cs
or
sbb
xchg
sbb
cmpsl
loope
popf
cmp
mov
jge
mov
xor
gs
shrb
fcoms
popa
aam
push
adcb
daa
mov
pop
push
push
lcall
ss
lcall
dec
ja
sub
cmp
jmp
pop
mov
aaa
sub
or
pop
add
bswap
lret
sub
loopne
loop
out
mov
pop
dec
and
dec
scas
xchg
cwtl
cmp
idivl
push
sub
and
push
arpl
popl
pop
jno
mov
mov
sbbb
pop
add
mov
lret
scas
pop
and
mov
push
stos
test
shrl
jb
lcall
insl
jnp
push
jne
xchg
and
int3
cwtl
mov
stos
sub
sahf
ss
ret
imull
hlt
popa
cld
sahf
push
mov
or
xor
dec
jl
pop
mov
dec
aas
fiaddl
gs
xchg
je
xchg
dec
dec
jno
xchg
stos
stos
into
test
cmp
pop
sub
lcall
cs
or
xchg
sub
test
pop
idivb
ja
push
stos
cmpsl
scas
push
cmp
lcall
inc
daa
mov
js
das
iret
dec
lret
sahf
jge
adc
inc
mov
dec
in
outsl
cltd
rcrl
and
push
pop
mov
pop
js
mov
push
and
mov
and
jmp
pusha
jp
dec
rcrl
jo
sbb
xor
dec
call
add
sar
jmp
imul
pop
and
mov
or
xor
mov
fs
stos
sbb
lods
ss
popf
pop
or
cs
jno
insb
inc
push
insb
adc
push
pop
cmp
in
popa
in
arpl
mov
inc
mov
das
hlt
pop
pusha
or
add
inc
outsb
movsl
adc
lock
push
cmp
adc
sbb
pop
sbb
sub
mov
inc
mov
out
sbb
or
stos
ljmp
pop
movsb
dec
andl
mov
cmp
add
sbb
pop
and
mov
cmpsl
xlat
jae
imul
loopne
dec
int
lods
movsl
sbb
inc
test
mov
and
mov
xchg
fstpl
cwtl
ss
mov
dec
lock
out
test
pop
mov
fs
out
sub
in
or
repz
jne
repz
pop
jo
test
enter
inc
add
out
jmp
sbb
stos
ret
fistl
dec
popw
ret
pop
pusha
and
adc
sbb
fstpt
test
repnz
pushf
mov
add
pop
jne
adcb
lahf
xchg
pop
adc
adc
push
add
mov
lahf
orb
aad
fsubs
mov
xchg
cmp
dec
lcall
cmp
push
out
mov
shrb
sbb
mov
addr16
and
fisubrl
in
add
pop
mov
cmp
repnz
ds
fbld
in
in
cmpsb
pop
out
stos
push
mov
xchg
mov
bound
js
jle
imul
ret
push
out
nop
mov
pop
jp
scas
add
jecxz
subps
dec
pop
scas
and
testb
or
cli
lcall
testb
push
cmp
fs
adc
call
repz
gs
ds
jmp
int3
pop
repnz
fdivr
cli
cmpsb
ljmp
jecxz
sarb
rolb
insl
es
mull
aam
fmul
xor
out
xor
lahf
sti
mov
out
pop
outsb
or
outsl
add
adc
inc
inc
loopne
sbb
into
xchg
insb
xchg
or
push
in
push
int
add
cmp
lahf
adc
in
mov
jp
xor
sub
into
idiv
in
mov
push
push
dec
scas
test
daa
dec
lods
mov
out
sub
mov
mov
pop
xor
mov
lahf
or
in
sub
cwtl
repz
loop
mov
jbe
adc
test
xchg
gs
rorb
mov
and
pop
pusha
mov
roll
fdivr
xchg
jg
imul
adc
aas
into
imul
fidivrl
pop
xchg
adc
out
sub
push
ljmp
mov
jge
fidivrs
inc
jmp
incb
mov
stos
stos
inc
add
or
mov
shl
or
jmp
jae
push
xchg
cmp
adc
sub
add
shll
pop
test
sahf
sbb
add
xchg
jp
xchg
or
fisttpll
data16
lret
pushf
sbb
cmc
fadds
jbe
mov
jne
mov
pop
rep
push
xor
lret
adc
sub
pop
in
int
inc
mov
xor
xor
pusha
pop
dec
cmpl
rcrl
test
sub
pop
add
dec
mov
ljmp
and
in
xchg
or
push
mov
jne
gs
mov
aaa
mov
push
imul
rcrb
cmpsb
stos
and
inc
pop
shrb
xor
or
sub
test
xchg
push
call
mov
out
mov
icebp
ficompl
data16
mov
jg
sub
and
popf
movsb
cmp
xor
mov
andl
dec
pushf
sub
int
testb
nop
pop
ret
aas
sub
fwait
sahf
or
shll
jo
cmpsb
pop
ret
loope
adc
jbe
lcall
cmp
xchg
out
cmp
daa
pop
pusha
and
test
outsl
cmp
jb
pop
mov
add
push
pop
adc
movsl
out
jmp
inc
mov
xor
movb
loop
mov
sahf
lods
adc
inc
push
jo
lods
mov
fiaddl
xor
lahf
fcmovnbe
enter
test
cmp
jbe
loopne
sub
push
lods
and
mov
push
xchg
into
sbb
js
and
pusha
jp
insl
and
push
repz
aam
xor
mov
adc
cmp
pop
shlb
cmp
mov
sub
inc
add
cli
jecxz
mov
dec
pop
jns
xchg
loop
xchg
mov
insb
test
adc
stos
xchg
push
cli
adc
sub
nop
mov
and
xchg
jge
adcl
jae
nop
xor
cmp
push
add
and
cmp
xchg
outsl
cmp
pop
cmc
xor
out
and
shrb
fsubl
lds
into
pop
xor
dec
leave
inc
xchg
sbb
fsub
or
enter
pop
icebp
loop
and
out
fnstcw
aas
nop
dec
mov
sbb
fcomp
aas
nop
cmpsl
lods
and
ss
add
add
or
mov
cmp
jmp
xorb
inc
ss
mov
rcll
popf
mov
xchg
xchg
dec
or
cmp
and
loop
addb
cmp
cli
dec
and
mov
aas
push
xlat
mov
dec
andb
mov
into
sbbl
rcll
cmc
fprem1
dec
cmc
mov
cmpsl
lahf
jbe
addr16
data16
sbb
fldt
imul
sbb
andb
dec
es
mov
ja
jl
mov
pop
cld
push
inc
inc
je
je
mov
push
pop
sub
or
imul
out
je
mov
nop
fisubs
dec
test
rolb
nop
push
mov
icebp
or
and
repz
ret
jne
popf
loope
jle
rcll
sbb
in
mov
shll
daa
jmp
pop
sub
ficoms
xchg
jo
arpl
ljmp
popf
adc
push
popf
sbb
xchg
mov
mov
mov
inc
and
dec
aam
and
mov
cmp
pusha
scas
sbb
out
mov
movsb
lods
mov
xchg
orl
nop
pop
sub
stos
jge
out
jmp
push
or
aam
roll
jns
mov
push
adc
add
push
dec
mov
loope
sub
cmp
scas
cli
rorl
shl
mov
push
jne
inc
pop
mov
mov
loope
jmp
pop
pop
shrb
scas
addr16
xor
cmp
or
scas
test
mov
pushf
cltd
xor
fidivrl
cmp
aam
into
mov
cmp
ja
xchg
xor
repnz
cwtl
add
jmp
outsl
out
test
sbb
push
shrb
mov
sahf
out
daa
mov
and
dec
mov
xchg
jge
dec
loope
jle
jnp
sub
clc
aam
ret
add
sahf
into
push
lcall
dec
cmp
cld
sub
mov
test
mov
mov
pusha
mov
jbe
pop
dec
xlat
mov
or
fisubs
mov
int
mov
mov
in
sti
mov
mov
push
mov
push
lahf
sub
jmp
fwait
lock
jne
stc
movsl
mov
rorl
xlat
or
aam
xor
jno
cmpsl
jl
insl
fdivs
adc
in
xor
es
sbb
mov
int3
xchg
mov
sahf
and
sub
and
mov
add
shlb
daa
add
mov
mov
hlt
cmp
mov
fistpll
sub
xor
mov
or
out
pop
jne
imul
adc
imul
sub
sbb
std
or
inc
sbb
repz
in
mov
sbb
push
mov
out
mov
sbb
jmp
roll
mov
and
fdivrs
testl
stos
jmp
sub
xlat
and
cmp
test
mov
leave
jns
mov
add
call
ret
mov
mov
and
mov
nop
cmp
arpl
pushf
lods
pop
stos
cs
ret
cmp
or
pop
popa
and
adc
xchg
lock
cwtl
mov
push
pop
bnd
adc
mov
jle
stc
lret
fsubrl
int3
jbe
cmp
test
jne
inc
enter
ds
call
rcrl
inc
cmpl
dec
cmp
cmp
loope
xchg
jge
scas
inc
add
mov
cli
arpl
xchg
es
fists
icebp
push
lcall
inc
push
cmp
cmp
popf
xor
insb
sarb
sub
ret
and
jg
mov
push
test
andps
xchg
sbbl
mov
int
leave
pop
mov
shrb
sub
mov
orb
mov
jae
or
dec
mov
mov
adc
add
jo
cmp
jbe
lock
or
aam
mov
fistpll
cwtl
sub
add
ret
inc
shrl
xlat
xor
pop
es
pop
cmpsb
pop
mov
gs
call
in
pop
inc
mov
sub
mov
iret
fnstcw
push
xchg
push
adc
xor
push
cmp
pop
jecxz
pop
sub
in
out
jge
nop
xlat
add
in
mov
adc
fstpl
sbb
add
rorb
hlt
stc
or
ret
xchg
and
dec
repnz
xchg
mov
or
fnstcw
or
pop
mov
fwait
out
mov
xchg
dec
in
push
push
iret
stos
sub
orb
mov
psubusw
jge
in
std
push
cmp
dec
add
pop
lds
imul
push
imul
push
jle
mov
mov
sti
sub
cmp
cmpsl
cli
movsl
jno
cmpsl
xchg
jle
xchg
dec
adc
loopne
pop
fnstenv
adc
je
ror
mov
clc
cmp
int
dec
test
lahf
outsl
fcmovnb
cld
add
ja
xchg
ficoms
cmp
or
push
add
pop
scas
mov
push
lea
fldenv
loopne
fildll
jl
rorb
dec
pop
mov
pop
jmp
dec
cmp
stc
sbb
xchg
fmuls
test
je
cmp
mov
mov
push
es
lock
fs
test
mov
mov
fidivs
xchg
stos
les
lock
cmpsl
mov
jge
add
xchg
je
dec
popa
add
jmp
scas
cmp
inc
mov
cwtl
push
pop
adc
leave
inc
add
inc
dec
lret
mov
call
insb
aas
pop
in
stos
mov
xor
scas
popa
dec
in
rorb
jl
mov
jns
mov
xchg
sbb
negl
dec
test
aas
adc
fwait
push
int
inc
push
sub
jnp
test
scas
pop
mov
test
and
test
loopne
cli
and
or
cmp
adc
jns
mov
and
dec
aaa
insb
loope
pop
xor
insb
add
testb
mov
xlat
rol
adc
jbe
cmp
mov
sbb
or
sbb
lds
cwtl
mov
out
out
cmp
add
sub
cmp
ja,pn
and
pop
sti
pop
sbbb
xchg
and
es
sbb
fwait
fs
leave
mov
pop
out
fisubrs
mov
mov
xchg
or
pushf
jle
scas
pop
and
add
arpl
xor
jnp
in
mov
stos
js
xchg
shlb
mov
pop
pop
jnp
out
cmp
movl
das
ds
or
or
sub
bound
xchg
insl
addl
jno
sbb
roll
jmp
pop
sub
jo
pop
pop
repnz
daa
jno
neg
push
test
sbb
sarb
je
jg
out
pop
pop
ds
cld
push
mov
jle
movsb
jg
pop
pusha
into
push
shlb
dec
and
xchg
and
cli
mov
push
clc
xchg
cmp
ljmp
mov
sub
cmp
scas
cs
in
mov
xchg
lahf
fwait
mov
lods
cwtl
adc
sub
adc
cmp
test
cmp
mov
cmp
cmpsb
mov
cmp
sub
pop
movsb
and
leave
popa
xchg
dec
fsubl
jbe
call
divb
cmp
movsb
outsl
or
xchg
inc
mov
loopne
sbb
fs
inc
lahf
xchg
sbb
imul
movsb
jns
inc
xchg
jbe
imul
shl
jno
into
pop
hlt
xchg
push
sti
int
or
xchg
cltd
mov
xchg
push
mov
shll
adc
add
cmp
stos
mov
add
adc
mov
jl
xchg
fwait
push
cmp
nop
and
daa
jl
fcmovnbe
bound
push
jae
push
lock
insb
lahf
push
fdivrs
mov
stos
xchg
xchg
pusha
fld
aaa
ret
jae
shl
movzbl
mov
push
jmp
scas
jb
fcomps
or
jge
out
pop
daa
sbb
andl
lret
jbe
outsl
pop
dec
addl
sbb
cmp
clc
lods
aad
fistps
in
out
orb
fidivrs
in
test
or
sbb
mov
cmp
and
test
sbb
or
test
lcall
xchg
push
stos
or
lods
in
hlt
sub
mov
or
inc
mov
data16
into
lods
lret
enter
pop
notl
xor
sbb
push
sub
pop
sbbb
sahf
rol
test
or
push
ljmp
sub
sub
xor
out
pop
fs
shl
jmp
lret
xchg
pop
mov
clc
subb
xchg
scas
mov
inc
out
push
cmp
inc
adc
sbb
in
je
push
out
outsb
test
push
mov
sti
adc
xchg
test
dec
ljmp
mov
mov
cs
jo
or
js
fcompl
ds
jmp
pusha
mov
cwtl
xor
fadds
or
popf
std
dec
cwtl
outsb
sbb
push
sbb
sti
mov
xchg
testl
sbb
sbb
das
out
xchg
jae
jno
pushf
sub
ror
sbb
mov
push
loopne
mov
jmp
fadd
mov
pop
or
orl
mov
enter
add
sub
subb
xor
nop
mov
pop
gs
sbb
addb
dec
clc
lcall
out
jmp
std
int3
fs
cmp
test
imulb
scas
popa
jge
orb
inc
jo
push
jno
pop
inc
xchg
mov
insl
xor
push
fwait
xlat
pop
ss
data16
sti
test
inc
xchg
push
push
and
push
cmp
pop
xorb
sub
enter
adc
leave
cld
mov
xor
loopne
loop
adc
int
call
push
xchg
jo
mov
adc
inc
aad
mov
jg
outsl
inc
shr
jb
push
xchg
daa
pop
adc
fs
and
adc
jns
rolb
dec
sbb
dec
lds
mov
push
faddp
xchg
out
adc
jge
cltd
data16
movsl
mov
sar
push
lods
jg
cwtl
jo
outsb
xchg
ds
push
push
mov
mov
inc
call
es
push
imul
xor
hlt
sbb
mov
shlb
jp
pop
and
int3
cmp
sti
push
push
xor
fsubrl
lcall
jns
int
mov
mov
jb
xor
xchg
push
cli
xchg
dec
xchg
fxch
adc
mov
cmp
es
int3
dec
xchg
insl
adc
dec
mov
lret
mov
or
add
jp
jge
shll
enter
xchg
cmpsb
adc
inc
enter
mov
jmp
lea
mov
imul
inc
jne
xor
jae
xorb
repnz
repnz
inc
ljmp
je
inc
scas
imul
lods
and
pop
call
int3
inc
or
stc
imul
sub
cmpb
jmp
push
ret
rorl
push
pusha
sub
loope
sub
mov
test
sbb
push
push
les
fnsave
jo
xchg
out
or
out
movsl
and
outsb
fcomps
mov
push
arpl
int
cmpsl
xor
xlat
mov
imul
or
lea
dec
jo
subb
dec
outsl
addr16
test
sbb
nop
mov
mov
mov
or
ret
nop
jo
mov
push
test
loope
mov
jecxz
mov
dec
adc
sbb
fisubrs
sub
in
sbb
cmp
aas
test
adc
shlb
pop
xor
aaa
xor
push
jmp
mov
dec
jnp
and
in
cmp
pop
add
das
and
insb
in
popa
push
add
insl
or
mov
and
imul
cmc
cwtl
or
sbb
in
push
test
mov
xchg
xor
and
gs
inc
mull
in
lock
idivl
mov
pop
cli
stos
mov
in
cltd
mov
xlat
mov
sub
lret
and
sarb
lods
xor
stos
ja
mov
xchg
add
push
daa
push
sbb
or
mov
sbb
xchg
pusha
loop
push
and
mov
movsb
rclb
xchg
xor
mov
mov
adc
aaa
shll
shl
fidivrl
aas
stos
lcall
test
mov
sub
stc
lahf
cmovs
lret
mov
subb
mov
mov
sub
push
cmpb
mov
dec
fcmovu
push
bound
dec
cmc
xchg
inc
sahf
repnz
ds
pop
xchg
loop
dec
fcoms
mov
in
popa
adc
sbb
cmp
mov
sbb
sbb
inc
cmpsb
mov
test
cmpsl
sbb
pop
je
jmp
and
inc
cwtl
inc
push
fwait
rorb
adc
xchg
jne
out
push
adc
push
add
aas
mov
jp
js
idivb
call
inc
sbb
or
inc
cmpsl
call
in
clc
out
lock
xor
inc
into
add
sub
enter
xchg
lods
mov
aad
popf
xor
ss
arpl
inc
mov
fists
daa
out
roll
cmp
and
adc
inc
pop
dec
jno
mov
aam
adc
stos
std
pop
inc
or
adc
fildl
mov
rclb
or
cmp
test
xchg
lea
sbb
fildll
inc
mul
push
fndisi(8087
fcmovne
into
mov
xlat
iret
xor
jle
dec
test
or
inc
fs
adc
das
or
sbb
adc
inc
xchg
jp
loopne
outsl
dec
iret
xchg
ja
aad
rcl
dec
or
movsb
iret
cmp
imul
push
sbb
and
and
dec
stc
inc
mov
mov
sbb
mov
dec
mov
cltd
or
xchg
pop
ficomps
incl
dec
mov
into
xchg
test
mov
lret
fisubs
adc
mov
mov
imul
pop
aas
cmp
cmpsl
pop
cmp
rcrl
inc
jge
popa
pop
jmp
dec
jmp
cmp
or
inc
lods
dec
pop
ficompl
les
out
mov
mov
sub
add
lea
icebp
push
testl
ret
jo
mov
ret
insl
or
jo
inc
push
lods
outsl
sub
call
mov
addl
add
push
rorb
lcall
fwait
and
mov
scas
jg
cmp
jnp
mov
inc
mov
mov
jp
vphaddwd
jnp
test
imul
mov
pop
mov
lahf
inc
cs
xchg
stc
insl
pop
inc
and
imul
xor
and
xorb
dec
push
out
pop
fimuls
mov
dec
stc
or
loope
jmp
pop
fst
hlt
loope
jl
lock
ja
cli
mov
leave
aam
rorl
jnp
sub
and
jmp
out
mov
add
js
pop
sarb
popf
xchg
in
adc
inc
in
cmpsl
mov
es
jb
inc
outsl
pop
cwtl
shlb
lcall
and
fsubrl
dec
sti
negl
mov
xor
cmp
mov
push
xchg
shrl
push
lahf
dec
sbb
push
add
aas
jecxz
scas
or
xor
push
and
or
mov
inc
adc
fdivl
mov
mov
xchg
cli
dec
push
and
movsl
add
cli
cmp
in
std
add
xorb
jp
outsl
faddl
dec
jecxz
xchg
movsl
jmp
aam
pop
cmp
mov
or
cmc
pop
cld
mov
ljmp
stc
pusha
jl
pop
movzbl
sub
cwtl
cmpsb
rol
or
lahf
or
inc
dec
in
inc
jno
sub
mov
xchg
push
jns
cltd
cmp
inc
mov
push
pop
fidivl
in
insl
pop
add
add
mov
sarb
mov
pop
mov
jp
stos
adc
pop
fsubs
scas
jo
rclb
subb
and
xchg
pop
inc
or
xor
or
lock
lcall
mov
ret
enter
jae
std
ret
fisttpll
int
std
insl
or
loopnew
mov
rcr
cmp
arpl
add
into
aad
inc
loopne
pop
adc
xor
xor
sub
lods
rorb
adc
mov
icebp
xchg
scas
inc
aas
adc
das
fwait
insl
pop
jne
sub
cs
mov
loopne
imul
xlat
ljmp
les
outsl
cmpsl
ljmp
sti
cmp
jb
popa
pop
nop
mov
lahf
sbbb
push
lods
hlt
jmp
mov
mov
mov
cmp
popa
dec
dec
mov
pushf
lods
xchg
or
mov
push
lret
cmp
mov
fcmovne
jecxz
arpl
movsl
mull
inc
cmpb
dec
mov
cli
inc
das
imul
ds
icebp
daa
xor
pop
xor
sar
ss
call
or
lret
movd
es
iret
rol
sub
aas
insb
jbe
and
aas
dec
cwtl
dec
insb
mov
xor
add
clc
xor
testb
mov
shll
lret
xor
aas
ds
and
inc
sub
popf
inc
inc
sbb
pop
xchg
data16
push
mov
scas
push
jecxz
xor
mov
popa
addl
mov
lods
pop
jno
jp
pop
mov
out
add
adc
dec
stc
inc
testb
dec
imul
clc
or
sub
frstor
jp
mov
jle
dec
mov
sahf
xchg
push
test
sub
sbb
jge
popf
mov
pop
arpl
insl
jg
inc
cwtl
hlt
lds
adc
push
inc
inc
divl
jle
sub
jecxz
fdivp
sbb
mov
incl
push
cwtl
adc
pop
jae
fbstp
dec
inc
xor
dec
adc
dec
or
xchg
inc
mov
insl
lea
mov
aas
mov
jmp
pop
mov
mov
mov
cmp
idivl
subl
mov
icebp
sbb
shll
dec
ljmp
clc
lahf
test
setae
les
insl
mov
fwait
push
bound
cld
push
out
rol
and
dec
loop
mov
fidivrs
mov
bound
push
jmp
dec
cmp
xor
inc
xchg
mov
mov
or
in
in
or
dec
or
imul
test
lcall
add
cs
or
dec
out
xchg
leave
cltd
aam
xchg
rorb
add
sub
scas
je
ret
sub
mov
out
fisubrs
push
ds
adc
pop
push
ds
test
fidivrl
ljmp
pop
jl
xor
dec
dec
fdivrp
stos
daa
inc
cmpl
es
out
inc
mov
das
add
shll
test
pushf
mov
cmp
data16
fnstcw
sub
ds
lahf
stos
arpl
inc
and
adc
stc
popf
jns
mov
push
add
and
cs
or
adc
jecxz
fs
and
push
lahf
call
jmp
test
addr16
mov
jns
popf
inc
jae
test
clc
movsl
stos
test
fdivrl
cli
xchg
pop
shl
inc
rorb
and
rcll
sbb
xor
sub
add
xchg
fwait
gs
gs
jle
icebp
les
fstp
or
dec
jo
out
sbb
jbe
imul
icebp
das
icebp
les
pop
fadds
xchg
mov
jnp
insl
and
leave
sub
outsb
cli
jp
jo,pn
fimull
int3
inc
and
leave
xchg
xlat
enter
clc
xlat
sbb
add
mov
insl
mov
cmpxchg8b
sub
out
and
mov
jo
out
xchg
out
xlat
int
jnp
das
jo
sarb
imull
mov
add
sahf
leave
adc
pusha
inc
push
pushf
and
rolb
out
pop
xchg
aad
sahf
movsb
nop
int
ficoms
mov
cmp
lods
xlat
inc
les
std
fadd
xchg
push
mov
xchg
push
ret
mov
mov
jns
mov
pop
ja
mov
fldlg2
sbb
fdivrl
mov
rcrb
and
out
or
fwait
sub
jmp
loop
mov
mov
add
ds
inc
pop
test
mov
fnsave
push
mov
jae
mov
and
pushf
push
cmpsb
xchg
stos
add
fldcw
lods
adc
cmp
add
push
dec
fistpll
inc
imul
pop
add
jecxz
leave
dec
mov
push
into
inc
xchg
stos
pop
fs
lea
push
fdivrl
fstpl
push
mov
push
das
jg
rorl
adc
cmp
adc
popa
xor
out
call
fwait
gs
pop
sahf
arpl
dec
jae
jge
shl
dec
push
aas
repnz
jl
xchg
das
out
call
fisubl
lods
notl
xor
mov
into
cmp
pop
lahf
mov
in
test
in
ss
mov
rclb
pusha
push
and
inc
in
rclb
cltd
sbb
scas
adcl
sub
sbb
testb
int
or
std
xchg
jle
lcall
out
lds
inc
ret
sbb
pop
and
repz
jo
sbb
jle
jge
or
or
out
mov
out
inc
addr16
sub
pusha
mov
gs
jle
subb
mov
pop
dec
add
into
sbb
addr16
push
mov
cmp
lock
loopne
mov
xor
mov
mov
mov
mov
pop
fildl
fldcw
insl
adc
fdivs
sub
mov
loope
inc
xchg
pop
test
mov
pop
and
int
in
repz
call
cli
xlat
dec
xor
hlt
pusha
jg
aam
insb
call
pop
inc
cld
test
into
push
sbb
and
movsb
mov
mov
inc
mov
mov
push
pop
fld
mov
and
fnstenv
cmc
mov
repnz
cmp
testl
push
decb
cmc
jg
xchg
jmp
cli
fidivrs
mov
push
jmp
int
loopne
fchs
pop
push
sub
ret
outsb
add
popa
out
fcoms
mov
cmp
and
stos
shlb
dec
xchg
pusha
insl
into
fwait
cmpb
loopne
das
push
addr16
js
jmp
inc
andb
loope
sbb
and
inc
addr16
and
push
mov
sbb
inc
jp
loopne
cmpsl
loop
test
test
push
cmp
dec
push
adc
std
or
push
popl
out
xchg
out
dec
in
in
ficomps
hlt
sar
leave
fiadds
mov
aaa
jnp
add
ret
lock
aad
in
and
xchg
cwtl
js
dec
insb
fistl
add
pop
cmp
or
lret
xchg
add
sub
lahf
mov
cs
push
push
aas
cld
dec
ret
inc
rolb
js
jg
jne
mov
int
jle
clc
xchg
mov
jl
adc
jmp
std
inc
orb
gs
ljmp
fdivp
xchg
add
outsb
inc
stc
std
imul
loopne
mov
mov
mulb
and
sti
mov
lahf
jo
lcall
push
nop
cs
xor
sub
sub
dec
push
adc
outsb
push
fmull
dec
dec
cmc
mov
adc
icebp
and
fistl
arpl
js
cli
daa
or
cmp
ret
fwait
dec
fmulp
jecxz
out
leave
loope
push
mov
imul
fwait
push
cs
lahf
sbb
push
js
mov
cmpsb
sti
cli
lret
inc
lods
and
jne
sahf
pop
andb
sbb
mov
ds
sub
cmpsb
jae
cs
popa
ja
dec
cmp
clc
push
sbb
xor
mov
cwtl
ss
lds
imul
jg
pop
jno
fstl
pushf
addl
repz
sbb
push
jecxz
inc
or
xchg
mov
fwait
push
pop
scas
mov
out
aaa
mov
or
mov
imul
push
movsb
mov
popa
in
outsb
js
fcoml
xor
adc
inc
mov
jne
cmp
mov
jp
hlt
mov
or
sbb
aaa
fs
mov
in
mov
cmp
lcall
xor
mov
cmp
mov
jmp
out
cmp
jne
shll
in
push
add
mov
sub
push
xchg
pop
addr16
subb
adc
inc
inc
adc
cmp
bound
push
jmp
xchg
stos
jl
ror
lods
and
pop
cli
dec
repnz
adc
shl
push
mov
xchg
push
dec
sbb
jg
popf
and
jl
sub
push
sbb
cmpsb
xchg
aaa
mov
push
dec
fidivl
ror
inc
jecxz
js
cmc
xchg
int
push
je
xor
movb
shl
xchg
push
cli
notl
xorb
aaa
fimuls
pop
add
cmpsl
test
icebp
pop
aad
call
or
mov
xchg
mov
mov
rorl
mov
aad
cltd
push
jnp
cwtl
xor
lds
xchg
sub
cltd
dec
call
out
xchg
loopne
sbb
inc
addl
jnp
push
jbe
cwtl
xchg
orb
xor
sbb
push
add
push
or
and
daa
mov
clc
mov
sub
pop
push
popa
and
jp
inc
daa
cmpsb
dec
cmp
outsb
rolb
mov
scas
xchg
pop
sbb
jl
outsl
pop
push
out
dec
cld
sub
pusha
xor
sbb
jns
popf
cmpb
repz
mov
les
pop
xchg
fnstsw
or
arpl
sbbl
cmp
nop
xchg
adcl
aas
xor
aaa
stc
daa
rolb
mov
repnz
push
push
repnz
stos
jbe
fstpt
cwtl
mov
test
lret
movsb
nop
and
dec
dec
and
js
push
sub
je
push
inc
lods
mov
jg
lods
call
pop
aad
xlat
incb
sub
dec
cmp
adc
xor
fldl
mov
push
clc
xchg
sbbl
lret
mov
jne
mov
dec
xor
lcall
mov
adc
loope
jns
jae
stos
arpl
sub
out
pop
popa
adc
dec
jp
dec
mov
jg
and
aam
push
mov
dec
lahf
lea
cli
pop
in
xor
cmp
aaa
nop
add
mov
inc
imul
adc
leave
cmp
mov
sbbl
lret
lods
inc
jns
sub
in
bound
jecxz
inc
es
shrb
sub
add
xor
hlt
es
andb
into
mov
sbb
push
push
movsl
hlt
cli
call
pusha
in
add
xchg
mov
fistpl
xor
das
movsl
icebp
out
pop
xor
fimull
lock
xor
lods
arpl
fisttpll
test
sahf
jo
inc
xchg
jb
xchg
out
dec
sbb
out
add
out
dec
cmc
aaa
jnp
popf
and
add
or
push
mov
dec
sbb
out
pop
int
mov
insb
pop
mov
jl
add
rolb
xlat
xchg
jl
test
hlt
cltd
mov
pop
add
test
sub
pop
or
out
jg
insb
add
lods
dec
shlb
pusha
shl
cmc
sbb
dec
ficomps
lret
xchg
and
out
pop
sbb
pushf
fbstp
xchg
out
leave
jle
add
insl
test
sub
iret
and
ret
mov
imul
hlt
dec
lock
shll
js
add
pushf
inc
jno
sub
cmp
rcll
or
jns
scas
push
loop
scas
xor
mov
and
inc
pushf
es
sub
mov
or
adc
aas
jns
or
hlt
pop
push
jns
daa
mov
test
aad
lcall
sbb
nop
push
sub
dec
popa
mov
mov
dec
jg
xchg
out
and
xor
jns
jge
out
out
sbb
rcll
lahf
das
pop
insb
ds
mov
lds
rol
hlt
ror
mov
mov
sub
jge
movsb
sbb
sub
fs
dec
test
fdivs
mov
cmovle
cmpsl
lods
xchg
insb
or
sarb
loop
rcrl
lds
out
pusha
xchg
xchg
scas
enter
mov
push
in
jmp
sbb
outsb
push
inc
mov
jge
xlat
imull
jae
mov
pop
cmp
fs
sbb
xor
push
call
push
mov
pop
lods
nop
vscatterdpd
pop
xlat
loopne
insl
pusha
pushf
dec
push
aad
xchg
inc
ds
ret
insl
push
push
dec
sub
mov
sti
sbb
jge
mov
int3
xor
and
adc
roll
mov
daa
aam
push
subl
and
out
xchg
and
out
xchg
orb
xchg
cmp
mov
cmc
inc
shrb
mov
int3
add
pushf
sub
jbe
sti
push
pusha
jecxz
movsb
outsb
mov
stos
and
xor
dec
mov
inc
movsb
in
push
sub
test
out
lea
xor
dec
xchg
daa
adc
dec
push
test
dec
mov
sbb
pop
popf
test
shll
into
cmpsb
sbbl
sarl
sar
ss
dec
mov
mov
push
lods
mov
dec
adc
cmp
cmp
push
add
xchg
aad
xor
insb
add
cmp
nop
das
stos
fiaddl
mov
fistpll
push
pusha
lock
mov
push
push
cwtl
inc
push
popl
xor
pop
mov
dec
cld
ret
sbb
loopne
and
push
insb
fwait
add
repnz
aas
std
fcoml
mov
int3
imul
push
mov
xor
es
mov
inc
scas
mov
dec
repnz
mov
cmp
insl
outsb
jp
int
loope
fdivs
ljmp
loopne
fsub
cmp
dec
testl
shll
fucomi
test
or
mov
jle
ret
rcrb
nop
cmp
mov
test
pop
std
das
sbb
cmp
or
lods
mov
pop
push
shll
cmp
dec
mov
fcoms
fdivl
pop
xor
push
scas
nop
push
leave
inc
push
xchg
in
leave
aam
cwtl
sbb
pop
sub
movsl
inc
out
push
lret
jno
xor
or
dec
push
xor
arpl
popf
mov
push
lret
push
ja
sbb
repz
sbb
cli
sbb
xchg
cmp
imul
cwtl
pop
push
leave
add
inc
iret
xor
orb
fstpl
mov
lcall
pop
dec
jl
rcrl
xchg
inc
negl
notb
test
cmc
lahf
sub
mov
lret
addb
cltd
add
test
sbb
push
add
aas
jb
adc
ret
fldt
out
xlat
sbb
fwait
sbb
push
add
lret
push
fdivl
and
inc
mov
ja
mov
sbb
xor
xchg
es
mov
mov
push
cs
mov
js
call
cmp
shlb
data16
addl
and
cmpsl
mov
test
arpl
jbe
pop
jle
cmpsl
push
cs
push
push
fldt
leave
test
aad
mov
stc
xor
fwait
push
or
mov
movsb
lock
stos
arpl
mov
pusha
stos
cltd
jnp
pop
add
jb
sti
ds
add
mov
repz
cwtl
ret
push
test
stc
mov
in
sti
fwait
ret
jmp
movsb
call
fwait
jnp
pushf
es
lret
cmp
rcr
cmp
jne
or
dec
xlat
dec
mov
jb
es
int3
jmp
xchg
mov
add
push
ds
sbb
outsb
popa
aaa
mov
daa
sub
push
pop
xor
xor
mov
sub
jb
fdecstp
int3
pop
add
loopne
xor
je
std
xor
cmp
push
jnp
fidivl
or
push
jge
and
aaa
shll
lods
shll
bound
iret
dec
test
push
jle
fcompl
jae
mov
into
dec
mov
cmp
fs
dec
fs
ja
imul
clc
dec
xchg
xchg
roll
adc
push
xorb
pop
or
jo
jnp
call
inc
jg
xchg
fcmovnbe
mov
lret
mov
shll
jle
inc
or
jno
fdivrs
movsb
data16
lret
xor
lcall
das
jns
xchg
imul
push
insb
sbb
lret
add
fwait
xchg
in
and
bound
inc
inc
inc
sub
mov
dec
lds
sbb
inc
inc
jbe
stos
das
ret
sahf
jmp
imul
std
push
xchg
mov
jo
adc
and
cmp
xor
adc
loop
insl
popf
das
pop
or
lods
xor
mov
inc
mov
in
rcrl
pop
inc
add
push
mov
sub
out
pop
xor
cli
and
pop
movsl
cmp
inc
lret
fldt
dec
mov
pop
repz
ds
push
push
insl
daa
out
xor
cmp
scas
bound
push
and
mov
push
fs
cltd
jbe
sub
out
xchg
add
dec
mov
in
lret
sbb
fs
push
loopne
std
mov
and
lret
scas
fnstcw
push
dec
ftst
mov
imul
lods
jg
rcl
adc
jecxz
xor
sar
adc
lock
inc
loop
mov
jg
sub
ja
or
shrl
add
sub
repz
jno
or
push
mov
shll
xchg
popa
cmp
lret
push
pop
inc
hlt
lods
insb
inc
and
outsl
xchg
jmp
cmpsb
pop
sbb
pop
cs
outsb
lret
pusha
push
sub
dec
and
mov
pop
aam
push
push
push
and
add
xchg
jmp
adc
test
fwait
stos
ss
xchg
lock
mov
lret
jne
into
mov
mov
inc
mov
call
leave
mov
or
test
sahf
xchg
lods
xchg
cmp
ljmp
popf
jge,pn
cmpb
dec
inc
pop
mov
add
xor
imul
fnstenv
leave
jge
mov
sbb
xchg
cs
ljmp
pushf
movsl
scas
xchg
and
mov
sbb
adc
cmpsl
xchg
repnz
sub
xor
or
xor
insl
orb
cmp
pop
shlb
xchg
jb
cs
jge
mov
jecxz
jne
mov
dec
cmp
xchg
fcoml
and
jmp
and
jg
jo
std
lea
jae
je
xor
out
and
dec
or
inc
mov
scas
movsb
or
jg
out
mov
xchg
movsl
sub
fiadds
les
pusha
int
out
mov
dec
sub
das
sub
cmpsl
inc
lods
sbb
aaa
je
ret
outsb
mov
adc
jno
cld
or
sarb
pushf
sub
xor
xlat
ret
imul
out
xchg
sbb
sub
and
dec
mov
andl
shll
fcompl
mov
or
and
cmpsb
or
or
sbb
and
jle
aaa
adc
cld
xor
xor
into
pop
dec
mov
push
ret
jne
mov
fildll
ret
mov
aad
push
outsb
jb
test
mov
movsl
push
mov
dec
mov
imul
jge
sbb
pop
mov
scas
xor
aaa
push
or
xor
and
fisubs
push
cmpsl
and
push
adc
xlat
stos
popf
mov
xor
inc
add
or
push
ljmp
mov
fiadds
xchg
and
jnp
and
xchg
outsl
mov
cmp
sub
stos
and
push
mov
cmpsb
jle
jb
clc
cmpb
outsl
sbb
mov
divl
fidivl
xchg
xchg
mov
ret
fdiv
loop
loop
hlt
fstp
pop
jle
cmc
cmp
rorl
jp
divb
popf
movsb
xor
adc
mov
cmpb
xlat
das
inc
inc
adc
clc
mov
fsub
lock
sbb
jecxz
out
and
dec
sbbb
mov
pop
pop
stc
or
out
pop
pop
es
push
jo
shl
je
insb
imul
lock
pop
mov
in
and
add
push
sbb
xchg
in
and
das
aaa
push
aad
push
es
mov
cltd
jmp
loope
imull
pop
push
inc
daa
push
mov
nop
mov
adc
jb
jge
xchg
lahf
push
adc
insl
add
lods
sub
test
jp
jns
pop
shlb
in
dec
insb
loop
fimuls
lret
jge
adc
enter
mov
jl
ret
into
call
mov
ja
sbb
js
xor
lcall
ficomps
inc
out
mov
cli
orb
icebp
lods
pop
lods
sbb
xchg
add
hlt
mov
sti
sahf
clc
mov
dec
inc
jmp
push
shlb
lahf
mov
mov
dec
mov
in
xor
in
mov
test
jle
and
add
in
dec
cmpb
pop
repz
sub
xor
negl
and
lea
adc
mov
jg
fsubs
es
mov
les
scas
cld
cli
push
jge
mov
dec
mov
mov
ja
ja
push
aad
mov
cmp
dec
and
gs
cmp
dec
daa
ret
inc
push
sub
xor
notb
mov
fstl
les
rcl
insb
dec
dec
mov
push
cmp
popa
push
adc
push
mov
idivl
out
in
adc
shl
or
mov
aam
dec
in
in
ljmp
lods
sbb
sbb
sub
xchg
std
push
inc
cld
xchg
pop
daa
fidivrs
adc
rolb
popf
adc
jle
mov
dec
lahf
and
add
lret
xchg
mov
inc
je
mov
mov
mov
sub
xlat
shll
xchg
add
cmp
fmul
mov
inc
add
imul
push
fnstsw
pushw
gs
mov
cmc
je
jno,pt
jge
jo
in
jnp
outsl
in
fnstenv
notl
decb
inc
and
mov
sub
and
adc
std
out
or
mov
sub
mov
or
sub
dec
pop
mov
pop
mov
mov
xchg
lcall
jbe
push
mov
scas
lock
fwait
int
jbe
xor
pop
in
rcrl
jg
imul
push
mov
and
mov
jbe
cmp
xchg
xor
inc
sbb
das
stos
popf
dec
xor
mov
and
and
in
in
push
ja
push
lret
shrl
and
addr16
fdivp
cmc
mov
adc
fidivs
adc
jmp
sti
cmp
imul
xchg
dec
jne
cmp
leave
test
adc
mov
xchg
cmpb
cmpsb
sbb
push
shll
outsl
pop
xchg
pop
dec
xor
and
mov
sub
lock
lret
repz
ret
adc
fldt
in
push
fcmovnb
inc
cmp
jae
mov
inc
sti
sarb
rcr
fdivs
xchg
mov
jmp
add
ret
leave
cmp
lret
dec
cmp
xor
idiv
push
int3
or
lods
je
ja
int3
dec
add
cwtl
lds
das
repz
sub
jo
add
push
inc
rcrb
xor
pushf
dec
lret
sbb
xor
lcall
dec
adc
push
adc
aaa
arpl
int
test
dec
mov
ljmpw
cmpsl
ds
pop
sahf
fcmovbe
mov
mov
pop
xlat
test
not
xor
and
pop
rorb
sbb
cmp
pop
jmp
gs
in
lret
jecxz
lock
sarl
sub
in
lahf
xor
loop
push
lret
pop
push
or
pop
imul
jne
mov
loop
xlat
loop
lret
jp
cwtl
add
lcall
lret
mov
insb
fstl
cmp
out
mov
and
adc
inc
insl
loope
cmp
loopne
mov
xchg
fucomp
dec
mov
or
add
dec
enter
mov
arpl
fwait
data16
inc
jbe
sbb
xor
rolb
shrl
mov
add
pop
jo
pop
xchg
dec
repnz
xlat
pop
andb
add
cs
sub
or
jae
mov
std
fwait
sti
jecxz
ret
pop
sub
bound
and
mov
jae
out
mov
ljmp
jo
shr
js
pusha
inc
data16
mulb
or
std
cwtl
adc
cmp
sbb
enter
xlat
popa
loop
push
addb
push
mov
push
mov
push
mov
pop
pop
pop
jmp
call
jmp
call
call
call
call
add
je
jne
jmp
jmp
sub
call
call
call
add
je
jne
jmp
jmp
adcl
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
or
add
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
jmp
jmp
xorl
add
xor
or
add
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
xor
add
add
addl
pushl
mov
jmp
call
jmp
call
call
call
call
add
je
jne
jmp
jmp
sub
call
call
call
add
je
jne
jmp
jmp
adcl
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
or
add
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
jmp
jmp
xorl
add
xor
or
add
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
rorb
add
incb
out
jmp
call
jmp
call
call
call
call
add
je
jne
jmp
jmp
sub
call
call
call
add
je
jne
jmp
jmp
adcl
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
or
add
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
jmp
jmp
xorl
add
xor
or
add
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
cli
call
call
call
call
add
je
jne
jmp
jmp
sub
call
call
call
add
je
jne
jmp
jmp
adcl
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
or
add
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
jmp
jmp
xorl
add
xor
or
add
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
inc
and
xor
xor
xor
xor
xor
mov
popl
add
jmp
call
jmp
call
call
call
call
add
je
jne
jmp
jmp
sub
call
call
call
add
je
jne
jmp
jmp
adcl
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
or
add
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
jmp
jmp
xorl
add
xor
or
add
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
xor
add
add
cmp
jbe
jmp
push
xor
call
pop
add
pop
add
movzbl
xor
mov
inc
cmp
jb
jmp
call
jmp
call
call
call
call
add
je
jne
jmp
jmp
sub
call
call
call
add
je
jne
jmp
jmp
adcl
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
or
add
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
jmp
jmp
xorl
add
xor
or
add
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
dec
xor
sbb
adc
adc
sti
sahf
out
push
outsb
sub
push
out
inc
xchg
shlb
es
sahf
sbb
ficoms
push
jo
inc
pusha
in
insb
adc
jbe
pusha
bnd
pop
dec
inc
xchg
shlb
sahf
sub
out
push
in
jae
adc
adc
rorb
sahf
sub
out
push
in
sahf
push
push
out
xchg
sub
pusha
sbb
fsubl
ljmp
adc
cmp
das
adc
adc
in
or
add
add
pop
add
movzbl
xor
mov
inc
cmp
jb
jmp
call
jmp
call
call
call
call
add
je
jne
jmp
jmp
sub
call
call
call
add
je
jne
jmp
jmp
adcl
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
or
add
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
jmp
jmp
xorl
add
xor
or
add
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
xor
push
pop
pusha
popa
gs
popa
push
jo
pusha
jb
popa
addr16
jb
adc
adc
ljmp
add
adc
pop
fdivs
add
jo
push
jp
js
jnp
pop
jl
jo
adc
add
adc
pop
adc
std
sbb
jo
popa
jo
jl
jo
adc
add
pop
adc
sbb
ljmp
xchg
rcrl
adc
pusha
addr16
popa
inc
addr16
jo
pop
jno
ljmp
xor
pusha
pop
pop
adc
std
sbb
jo
inc
addr16
jo
adc
ljmp
std
pop
adc
dec
jle
push
std
pop
adc
xchg
rcll
dec
std
sbb
jo
popa
jo
jge
jo
jno
ljmp
cmp
sbb
je
pop
jl
addr16
insb
push
adc
add
adc
pop
adc
std
push
adc
jo
es
cmp
jns
ljmp
adc
pop
adc
std
pop
adc
jno
jns
jno
jns
ljmp
std
pop
adc
dec
jle
push
std
pop
adc
xchg
rcll
dec
std
sbb
data16
jo
jp
push
adc
inc
add
adc
adc
out
std
or
popa
inc
jnp
je
jno
jo
push
insl
jbe
gs
jl
jnp
jl
popa
jo
adc
add
adc
pop
adc
std
push
adc
ja
jb
addr16
jle
ljmp
sub
pop
adc
sbb
ljmp
xchg
rcrl
adc
jo
insb
pop
jnp
jp
js
popa
jl
jnp
addr16
jo
adc
sbb
push
push
inc
std
pop
adc
dec
jle
push
std
pop
adc
xchg
rcll
dec
std
add
adc
pop
jp
pusha
jns
pop
je
jno
jo
adc
add
adc
pop
fdivs
and
adc
xchg
rcll
sub
ljmp
ljmp
adc
out
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
inc
std
pop
adc
dec
jle
push
std
pop
adc
xchg
rcll
dec
popa
adc
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
popa
adc
pop
adc
popa
adc
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
inc
std
pop
adc
dec
jle
push
std
pop
adc
xchg
rcll
dec
popa
adc
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
std
pop
adc
dec
jle
push
std
pop
adc
xchg
rcll
dec
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
fsubl
fcoml
jno
and
sbb
sbb
sbb
or
adc
adc
leave
call
pop
add
movzbl
xor
mov
inc
cmp
jb
jmp
call
jmp
call
call
call
call
add
je
jne
jmp
jmp
sub
call
call
call
add
je
jne
jmp
jmp
adcl
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
or
add
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
jmp
jmp
xorl
add
xor
or
add
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
adc
cli
adc
stc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
adc
cmp
jp
adc
adc
adc
cmp
aad
dec
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
cli
adc
adc
cli
adc
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cmp
jp
adc
adc
adc
cmp
aad
dec
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
stc
adc
adc
cmp
jp
adc
adc
adc
cmp
aad
dec
stc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
and
adc
adc
nop
adc
adc
and
adc
adc
xor
adc
adc
lret
cli
adc
cli
adc
stc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
adc
cmp
jp
adc
adc
adc
cmp
aad
dec
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
cli
adc
adc
cli
adc
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cmp
jp
adc
adc
adc
cmp
aad
dec
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
stc
adc
adc
cmp
jp
adc
adc
adc
cmp
aad
dec
stc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
test
jne
adc
cli
adc
stc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
adc
cmp
jp
adc
adc
adc
cmp
aad
dec
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
cli
adc
adc
cli
adc
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cmp
jp
adc
adc
adc
cmp
aad
dec
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
stc
adc
adc
cmp
jp
adc
adc
adc
cmp
aad
dec
stc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
push
xor
pop
adc
pop
sbb
jne
sbb
adc
adc
adc
cmp
sub
inc
and
xlat
push
push
adc
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
pop
mov
jmp
call
jmp
call
call
call
call
add
je
jne
jmp
jmp
sub
call
call
call
add
je
jne
jmp
jmp
adcl
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
or
add
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
jmp
jmp
xorl
add
xor
or
add
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
jae
jae
call
jmp
call
jmp
call
call
call
call
add
je
jne
jmp
jmp
sub
call
call
call
add
je
jne
jmp
jmp
adcl
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
or
add
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
jmp
jmp
xorl
add
xor
or
add
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
push
sbb
leave
inc
cmpb
je
cmpb
jne
movb
jmp
push
push
push
push
push
push
push
call
jmp
call
jmp
call
call
call
call
add
je
jne
jmp
jmp
sub
call
call
call
add
je
jne
jmp
jmp
adcl
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
or
add
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
jmp
jmp
xorl
add
xor
or
add
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
jle
add
push
and
push
push
call
mov
sub
push
push
push
push
push
push
call
pop
mov
jmp
call
jmp
call
call
call
call
add
je
jne
jmp
jmp
sub
call
call
call
add
je
jne
jmp
jmp
adcl
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
or
add
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
jmp
jmp
xorl
add
xor
or
add
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
leave
xor
cmp
je
mov
cmpb
jne
call
addl
pop
pushl
mov
mov
mov
jmp
call
jmp
call
call
call
call
add
je
jne
jmp
jmp
sub
call
call
call
add
je
jne
jmp
jmp
adcl
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
or
add
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
jmp
jmp
xorl
add
xor
or
add
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
fcomi
repz
jmp
call
jmp
call
call
call
call
add
je
jne
jmp
jmp
sub
call
call
call
add
je
jne
jmp
jmp
adcl
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
or
add
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
jmp
jmp
xorl
add
xor
or
add
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
inc
and
mov
call
pop
add
mov
mov
ret
jmp
call
jmp
call
call
call
call
add
je
jne
jmp
jmp
sub
call
call
call
add
je
jne
jmp
jmp
adcl
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
or
add
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
jmp
jmp
xorl
add
xor
or
add
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
pop
sub
mov
add
mov
cmpb
je
push
call
push
mov
mov
add
lea
mov
pop
add
add
mov
sub
mov
rdtsc
shr
add
xor
cmp
jge
dec
jne
push
call
sub
imul
call
sub
les
cmpb
jne
je
jne
jmp
jmp
addl
call
call
call
call
add
cmpb
jne
push
call
sub
imul
call
sub
les
call
pop
jmp
push
jmp
call
add
add
and
add
xor
jmp
push
jmp
call
add
add
add
and
add
mov
jmp
push
jmp
call
push
jmp
call
add
add
and
add
add
jmp
push
jmp
call
jmp
int
jmp
call
push
jmp
call
adc
add
jmp
push
jmp
call
add
add
and
add
add
xor
xor
jmp
push
jmp
call
push
jmp
call
jmp
int
jmp
call
jmp
int
jmp
call
add
add
pop
or
add
push
add
lds
ret
xor
call
pop
add
xor
add
movzbl
xor
mov
inc
cmp
jb
jmp
call
jmp
call
call
call
call
add
je
jne
jmp
jmp
sub
call
call
call
add
je
jne
jmp
jmp
adcl
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
or
add
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
jmp
jmp
xorl
add
xor
or
add
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
dec
xor
sbb
adc
adc
sti
sahf
out
push
outsb
sub
push
out
inc
xchg
shlb
es
sahf
sbb
ficoms
push
jo
inc
pusha
in
insb
adc
jbe
pusha
bnd
pop
dec
inc
xchg
shlb
sahf
sub
out
push
in
jae
adc
adc
rorb
sahf
sub
out
push
in
sahf
push
push
out
std
adc
cmp
fcoms
adc
in
or
add
add
pop
add
movzbl
xor
mov
inc
cmp
jb
jmp
call
jmp
call
call
call
call
add
je
jne
jmp
jmp
sub
call
call
call
add
je
jne
jmp
jmp
adcl
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
or
add
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
jmp
jmp
xorl
add
xor
or
add
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
push
pop
pusha
popa
gs
popa
push
jo
pusha
jb
popa
addr16
jb
adc
adc
ljmp
add
add
jo
push
jp
js
jnp
pop
jl
jo
adc
add
sbb
jo
popa
jo
jl
jo
adc
add
pop
adc
push
jo
pusha
jb
jo
inc
addr16
jo
popa
adc
add
add
popa
push
pusha
addr16
popa
inc
addr16
jo
pop
jno
ljmp
xor
sbb
jo
inc
addr16
jo
adc
ljmp
sbb
jo
popa
jo
jge
jo
jno
ljmp
cmp
sbb
je
pop
jl
addr16
insb
push
adc
add
push
adc
jo
es
cmp
jns
ljmp
pop
adc
jno
jns
jno
jns
ljmp
sbb
data16
jo
jp
push
adc
inc
add
adc
adc
inc
jnp
je
jno
jo
push
insl
jbe
gs
jl
jnp
jl
popa
jo
adc
add
push
adc
ja
jb
addr16
jle
ljmp
sub
unpckhps
pusha
jo
insb
pop
jnp
jp
js
popa
jl
jnp
addr16
jo
adc
sbb
push
push
inc
adc
adc
out
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
inc
std
pop
adc
dec
jle
push
std
pop
adc
xchg
rcll
dec
popa
adc
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
popa
adc
pop
adc
popa
adc
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
inc
std
pop
adc
dec
jle
push
std
pop
adc
xchg
rcll
dec
popa
adc
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
std
pop
adc
dec
jle
push
std
pop
adc
xchg
rcll
dec
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
adc
pop
adc
std
pop
adc
sbb
ljmp
xchg
rcrl
pop
adc
sbb
adc
sbb
ljmp
xchg
rcrl
adc
pop
adc
xchg
rcll
std
pop
adc
sbb
ljmp
xchg
rcrl
adc
pop
fdivs
push
adc
pop
fdivs
jae
jmp
popa
adc
pop
adc
jae
jno
fsubl
fcoml
sarl
ljmp
adc
sahf
push
sbb
or
adc
add
add
pop
add
movzbl
xor
mov
inc
cmp
jb
jmp
call
jmp
call
call
call
call
add
je
jne
jmp
jmp
sub
call
call
call
add
je
jne
jmp
jmp
adcl
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
or
add
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
jmp
jmp
xorl
add
xor
or
add
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
adc
cli
adc
stc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
adc
cmp
jp
adc
adc
adc
cmp
aad
dec
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
cli
adc
adc
cli
adc
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cmp
jp
adc
adc
adc
cmp
aad
dec
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
stc
adc
adc
cmp
jp
adc
adc
adc
cmp
aad
dec
stc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
adc
nop
adc
adc
and
adc
adc
xor
adc
adc
lret
cli
adc
cli
adc
stc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
adc
cmp
jp
adc
adc
adc
cmp
aad
dec
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
cli
adc
adc
cli
adc
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cmp
jp
adc
adc
adc
cmp
aad
dec
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
stc
adc
adc
cmp
jp
adc
adc
adc
cmp
aad
dec
stc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
test
jne
adc
cli
adc
stc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
adc
cmp
jp
adc
adc
adc
cmp
aad
dec
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
cli
adc
adc
cli
adc
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cmp
jp
adc
adc
adc
cmp
aad
dec
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
stc
adc
adc
cmp
jp
adc
adc
adc
cmp
aad
dec
stc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
adc
cli
adc
adc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
gs
cli
adc
and
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
cmp
adc
adc
adc
sbb
adc
stc
cli
sbb
out
out
out
stc
jecxz
out
out
xchg
aad
sub
push
adc
cli
adc
adc
xor
adc
addr16
adc
adc
xor
adc
fnsave
out
adc
fs
adc
adc
push
xor
pop
adc
pop
sbb
jne
sbb
adc
adc
adc
adc
adc
sbb
sbb
push
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
pop
call
iret
repnz
push
inc
inc
dec
push
dec
inc
push
dec
dec
dec
push
ret
add
add
or
dec
push
dec
push
dec
pop
and
xor
pop
call
and
call
jmp
call
jmp
call
call
call
call
add
je
jne
jmp
jmp
sub
call
call
call
add
je
jne
jmp
jmp
adcl
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
or
add
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
jmp
jmp
xorl
add
xor
or
add
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
push
sbb
leave
inc
cmpb
je
cmpb
jne
movb
jmp
push
push
push
push
push
push
push
call
jmp
call
jmp
call
call
call
call
add
je
jne
jmp
jmp
sub
call
call
call
add
je
jne
jmp
jmp
adcl
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
or
add
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
jmp
jmp
xorl
add
xor
or
add
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
sub
imul
call
sub
les
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
call
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
add
add
add
add
add
jmp
add
call
call
add
je
jne
jmp
jmp
orl
call
call
call
call
add
sub
je
jne
jmp
jmp
addl
jmp
add
call
call
add
cmp
jmp
push
jmp
call
push
jmp
call
add
add
add
add
push
and
push
push
call
mov
sub
push
push
push
push
push
push
call
pop
add
mov
fstsw
fwait
shr
fld
fyl2xp1
fld
frndint
fsubr
fxch
f2xm1
fld1
faddp
fscale
fstp
fld
fld1
fsubrp
fdivrp
fmulp
push
fildl
pop
cmp
sete
mov
xor
movzbl
xor
mov
inc
cmp
jb
push
push
push
sub
cltd
push
push
push
push
push
push
pop
lods
sub
shl
mov
loop
pop
loop
sub
mov
lods
inc
cmp
je
lods
cmp
jae
xchg
mov
jmp
add
pop
pop
pop
push
shl
stos
mov
stos
sub
push
push
pop
lods
sub
sub
shl
inc
cmp
je
mov
inc
cmp
je
mov
inc
cmp
je
mov
shl
shl
adc
inc
mov
cmp
jne
inc
sub
dec
jne
loop
pop
loop
mov
sub
rol
mov
inc
pop
ret
call
jmp
push
jmp
call
add
sub
imul
call
sub
les
call
call
call
call
add
je
jne
jmp
jmp
or
push
repz
jmp
add
inc
add
